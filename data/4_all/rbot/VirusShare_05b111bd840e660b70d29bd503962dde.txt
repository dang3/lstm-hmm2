push
call
ret
ret
cmc
mov
sbb
or
cltd
mov
sub
and
movsb
xchg
pop
fucomip
cli
lock
xchg
test
xor
movsb
jmp
cmp
dec
push
adc
xchg
pop
fs
pop
mov
and
mov
mov
jp
mov
xor
jge
push
jae
ds
es
jb
xor
lcall
pop
sub
cs
adc
das
out
in
mov
inc
test
push
fs
xchg
push
ror
testb
add
adc
sub
iret
sbb
js
adc
mov
inc
aam
clc
movsb
in
loop
int
push
sbb
imul
pop
pop
and
mov
rorl
aas
push
mov
mov
jno
out
xchg
out
add
mov
outsl
xchg
add
push
xchg
test
xchg
imul
mov
sub
xchg
mov
pushf
jo
pop
mov
gs
stos
mov
mov
or
mov
push
pop
push
cs
shl
add
js
xor
mov
or
sub
sbb
js
aad
add
xchg
mov
xchg
dec
je
jp
push
fldcw
add
add
in
adcb
fildll
xor
insl
leave
pop
inc
jnp
push
pop
add
or
push
mov
cmc
xor
sub
mov
and
cmp
pop
popa
andl
adc
mov
outsl
in
jb
mov
pop
fwait
mov
scas
into
push
pop
js
ret
lret
mov
cmp
jbe
jl
jo
xchg
mov
fisubs
add
cltd
jne
cwtl
adc
inc
aas
mov
mov
jge
xor
add
jb
add
xchg
pop
mov
pop
cmp
cmp
int3
fistl
and
mov
rcr
jo
adc
mov
std
incl
out
loop
cs
sbb
bound
pop
cltd
mov
jno
loop
in
fs
pop
ss
mov
icebp
fadd
jle
subb
imul
stos
movsl
cmpl
push
dec
cmpsl
pop
mov
mov
out
lock
das
mov
ret
ret
mov
cld
sahf
outsl
mov
dec
fs
xor
sbb
fs
xor
lcall
mov
clc
mov
mov
dec
data16
jl
hlt
pusha
add
stc
loopne
in
imul
in
mov
dec
test
adc
add
sub
xchg
ret
in
adc
sub
cld
adc
pop
jge
sbb
test
lahf
mov
pop
dec
inc
push
fbstp
jbe
in
orl
lret
cmp
test
cli
dec
es
push
adc
and
test
pop
ss
or
adc
adc
rorb
nop
mov
pusha
mov
sub
jmp
sub
addl
mov
jne
mov
out
and
adc
pop
mov
ja
sbb
fnstenv
divl
das
push
add
fistl
stos
clc
add
mov
insb
nop
sub
mov
sub
or
pusha
out
movsb
out
xor
mov
fistps
xchg
xchg
cli
jle
sub
sbbl
icebp
adc
in
insl
mov
adc
cmp
fldcw
push
add
fbstp
lcall
in
add
mov
sbb
mov
sub
xlat
inc
cmp
mov
sbb
push
insl
mov
cmp
mov
adc
pop
sub
push
pusha
push
xlat
cmp
lock
test
jle
jecxz
xchg
subb
dec
in
inc
fiadds
or
aam
push
int3
and
xor
pusha
mov
jae
xchg
mov
push
xchg
fprem1
arpl
inc
mov
cld
dec
or
pushf
xor
addr16
cmp
scas
inc
ror
jo
mov
mov
push
mov
fs
aaa
or
loop
mov
xchg
sti
xor
pop
call
dec
fadds
lret
neg
sub
push
inc
xor
iret
sbb
ja
imul
insb
imul
cld
push
jmp
cmpsl
repnz
out
sbb
or
and
inc
negl
mov
gs
pushw
or
clc
jle
inc
int
dec
jp
adc
mov
lea
jne
sub
out
mov
nop
fnstcw
call
adc
nop
idivl
cmp
popa
xchg
sbb
es
les
es
pop
mov
arpl
mov
test
cmp
xchg
cmpsl
inc
jbe
loop
adc
pop
lahf
mov
inc
call
xorb
into
mov
es
cmp
fiadds
out
jge
adc
js
mov
cmp
lea
adc
xor
xlat
rolb
sarb
jmp
mov
or
sbbb
sub
hlt
cmpsl
lret
fstps
xchg
lahf
mov
adc
sub
dec
in
sahf
lods
lcall
inc
daa
fidivrs
sbb
lock
pop
mov
or
fs
sti
arpl
mov
ficoml
out
jns
mov
stos
jae
or
je
mov
xchg
sbbl
hlt
aad
xchg
jne
and
sahf
push
adc
cmovg
sti
call
stos
shlb
rcrl
adc
jo
jbe
and
mov
out
push
fcoml
call
and
sbb
bnd
clc
fistpl
jp
popa
nop
repz
out
pop
push
sub
mov
leave
movsb
loope
sbb
mov
mov
test
dec
mov
hlt
rcrl
xchg
loop
pop
pop
aas
insl
cmp
popl
mov
xchg
clc
sbb
adc
fwait
icebp
stos
out
inc
ror
inc
sub
sub
je
jge
xor
xchg
push
add
clc
lret
jb
arpl
jns
je
mov
hlt
xor
pop
sbb
fsubl
and
inc
call
adc
notb
fmull
sbb
out
iret
jg
sub
sbb
arpl
fiaddl
inc
mov
rcrl
arpl
ja
leave
inc
cmpsl
jmp
jno
je
arpl
pop
mov
jbe
loopne
sar
jge
and
sbb
add
inc
jge
xor
push
lret
sub
dec
mov
das
or
pop
mov
cmp
test
mov
jge
and
pop
movsb
inc
shlb
leave
and
push
jmp
test
in
fstps
or
inc
push
jne,pn
loop
sahf
bound
out
xchg
mov
lahf
mov
pop
cwtl
push
adc
mov
xor
add
pop
shr
push
inc
cld
xchg
mov
movb
out
out
ret
cmpsl
cmp
jns
mov
sub
fcomps
addr16
out
cmp
push
mov
cltd
xorl
jmp
inc
pop
dec
mov
test
sbb
jg
aad
add
push
mov
push
call
sub
xchg
sbb
sub
xor
add
icebp
leave
inc
scas
sbb
mov
dec
mov
movsl
aad
inc
imul
mov
xchg
imulb
pop
mov
sbb
xor
add
daa
sub
dec
adc
and
push
cmpsl
jno
in
mov
cmp
mov
jnp
daa
mov
xchg
iret
popf
dec
aam
xor
out
das
je
xor
dec
adc
adc
and
xchg
stos
sarb
test
fsub
sbb
jae
dec
xor
fnsave
daa
scas
mov
shlb
sbb
cmp
cmpsb
test
out
dec
xor
ret
xor
js
xchg
lret
cmc
ret
sbb
cltd
mov
adc
and
fnsave
out
daa
imul
adc
add
pop
sbb
adc
xchg
pusha
or
daa
xchg
jnp
mull
insb
movsb
pusha
xchg
int
inc
push
lods
shll
les
je
inc
fcmovne
mov
dec
fcoms
cld
jp
jmp
mov
dec
and
lcall
in
imul
and
leave
es
cmp
imul
lods
push
test
rorb
sti
or
mov
fidivrs
sub
jne
dec
loopne
fbld
jbe
in
inc
dec
xchg
es
lret
dec
pushf
xchg
pop
mov
lret
ret
xlat
insl
shrb
gs
aaa
popa
repnz
push
sahf
jae
clc
inc
mov
clc
jp
stos
inc
hlt
and
mov
ret
dec
pop
movsb
dec
daa
dec
cmp
icebp
scas
inc
movl
lock
inc
adc
xor
jp
sbb
aaa
mov
loope
in
jle
inc
jo
call
xchg
jo
inc
push
out
inc
aas
inc
scas
sub
push
or
stos
mov
into
int3
jne
pushf
fiadds
inc
xchg
add
xchg
loop
pop
orb
call
cmp
push
xor
adc
add
or
xchg
inc
inc
mov
leave
inc
aad
add
enter
ljmp
ja
outsl
pop
sbb
nop
mov
inc
xlat
inc
cmpl
mov
addr16
push
shlb
ss
sub
stos
repnz
pop
xor
aas
mov
pop
dec
arpl
lahf
jmp
mov
scas
das
pop
hlt
jo
mov
add
shlb
in
sar
or
push
loop
pop
nop
mov
nop
imul
push
adc
inc
iret
cmp
out
movsb
inc
fidivrs
jnp
shrb
lods
add
dec
lea
dec
test
or
jg
xchg
jmp
sub
fcomps
cmp
fwait
dec
pop
push
mov
inc
xor
stos
rorl
cmc
rorl
dec
adc
pop
xchg
jp
inc
insb
data16
push
ss
pop
xchg
mov
sbb
or
jle
sub
pop
fcmove
out
ss
sbb
inc
shlb
dec
cmp
xor
lcall
push
data16
test
inc
inc
out
xlat
sbbl
and
cmpsl
jecxz
sub
movsl
sub
sub
cmp
and
cli
jns
jge
leave
mov
rcrl
popf
sub
mov
in
sarl
cmp
mov
push
fcomip
sbb
jbe
pop
fstpl
xchg
mov
pxor
or
out
in
pop
lods
pop
outsb
push
inc
cli
test
fisttpll
je
aam
testl
xchg
incl
data16
testb
adc
rolb
scas
ds
push
es
dec
push
pop
lret
dec
test
mov
mov
ret
sbb
xor
pop
cli
fidivrs
add
stos
loopne
sti
xor
aam
pop
xchg
push
mull
jb
inc
xchg
mov
addr16
clc
jge
insb
rcrb
bound
fdivs
cmp
in
notb
les
out
rolb
outsl
pop
aam
jo
les
out
dec
adc
add
mov
jecxz
sub
cmc
test
imul
outsb
aaa
mov
inc
ds
mov
popa
sbb
mov
xchg
sbb
ljmp
cwtl
cli
repz
notb
pop
addr16
lcall
pop
cwtl
xor
pop
push
add
out
mov
push
push
test
xchg
in
in
mov
stc
ss
cmp
out
jo
add
je
xchg
test
ss
xchg
aas
mov
jecxz
test
divl
fcoms
and
gs
inc
pop
and
scas
dec
cmc
or
push
inc
scas
push
lea
lahf
adc
mov
into
xor
fstpl
push
xchg
xchg
xchg
jae
out
out
mov
daa
outsl
insb
imul
int
jmp
mov
sbb
and
popf
sub
mov
adc
repz
lcall
outsb
fcoms
cld
mov
push
out
test
movsb
pop
push
xor
test
xchg
push
xor
outsb
fmull
or
xor
add
push
add
or
mov
jle
iret
and
leave
cli
stos
mov
cld
movsl
push
subl
imul
cs
mov
mov
sub
daa
cld
fimuls
mov
mov
xchg
mov
pop
clc
pop
enter
push
sub
sti
dec
or
test
and
adc
xor
push
in
or
xlat
lods
aad
inc
movsb
inc
ret
xchg
jmp
nop
out
nop
je
jo
stos
cmpsl
inc
je
jns
mov
fistpl
push
scas
dec
sti
call
push
ret
pop
sub
test
ret
shrl
sbb
sub
and
in
stos
or
ret
lods
cltd
push
xchg
stc
hlt
and
xchg
jnp
dec
pop
mov
idivb
arpl
mov
lods
pop
imul
repz
stc
decl
mov
push
fs
cmp
ret
add
xchg
out
mov
inc
lcall
jg
stc
scas
xchg
xlat
arpl
aaa
enter
shl
fisubl
push
sub
out
jg
leave
insl
cli
test
ret
inc
adc
ret
fwait
cmc
cltd
fidivl
cli
mov
cmpsl
stos
jmp
repnz
loop
adc
bound
dec
add
out
sub
mov
jae
cmc
lret
push
add
push
ret
sub
insl
mov
das
loop
pop
xlat
mov
sbb
pand
push
das
mov
mov
pop
mov
ja
outsb
loope
mov
xor
mov
push
or
cmp
mov
push
cmpsl
and
xor
pop
push
rcrb
or
xor
sbb
imul
filds
addr16
cmc
dec
gs
fadds
dec
push
xchg
rolb
or
je
fmull
xor
dec
and
jno
xlat
mov
repnz
push
xchg
int3
inc
es
jle
jbe
cmp
test
mov
lea
mov
push
ljmp
inc
fwait
lods
jge
test
test
jae
sub
test
in
enter
rorl
mov
ss
jge
mov
jns
push
dec
push
cmp
push
enter
push
loope
mov
and
cld
mov
stos
pusha
into
push
add
lds
out
mov
pop
push
insl
jns
pslld
scas
adc
mov
dec
mov
jae
mov
cmp
test
pop
mov
movsb
cmp
ja
fidivrs
push
ja
ret
stos
mov
push
pop
inc
cs
pop
sti
orb
or
push
pop
xchg
rorb
out
sub
mov
addr16
and
push
imul
mov
fwait
lret
iret
add
mov
adc
dec
inc
in
jne
pusha
cmp
fld
jge,pt
out
jge
and
js
pop
test
icebp
inc
andb
arpl
cmpsl
mov
loop
inc
push
jp
push
repz
sahf
cmp
adc
popa
iret
jbe
imul
jbe
negl
mov
test
outsb
or
add
in
adc
jl
cmpsb
int
ret
stos
cs
stos
mov
xor
leave
ror
scas
movsb
mov
mov
lea
jmp
jae
scas
js
outsb
data16
loop
push
testb
push
fs
pushf
bound
sub
push
enter
and
scas
xchg
add
push
xchg
sahf
mov
pop
sbb
std
rolb
add
xchg
push
dec
test
idivl
jns
mov
dec
je
je
jns
mov
rcrb
and
adc
pop
hlt
insl
gs
fucomi
sahf
out
mov
lret
mov
or
jnp
fmuls
mov
pop
mov
imul
shrl
push
sub
mov
js
hlt
push
xchg
sub
notl
cmpsl
or
mov
sbb
int3
aad
lret
cld
push
pop
in
pop
jp
lods
loope
rcrl
imul
push
jle
iret
pop
inc
sub
push
jno
scas
and
lods
add
inc
loope
loopne
fldcw
hlt
xchg
cmp
push
xor
jne
or
dec
andb
fdivl
xchg
xchg
cli
data16
pop
fisubrl
dec
adc
push
movsl
ljmp
sar
cwtl
popf
lods
mov
ret
pop
mov
ds
push
cmp
mov
ds
out
loope
or
sarb
mov
ret
push
mov
pop
repnz
adc
cmp
outsl
mov
ficoms
cmpsb
rolb
fisttpl
xor
xor
jg
adc
mov
add
rolb
in
daa
push
inc
cltd
lods
dec
imul
popf
decl
test
jmp
call
jb
push
ja
inc
inc
jnp
frstor
xchg
movsl
mov
cmp
cwtl
out
mov
rcrb
mov
std
mov
sbb
rcl
jp
jne
sti
inc
mov
mov
lea
push
mov
bound
jmp
pusha
cmp
hlt
cmpsl
popa
imul
cmp
pop
adc
cs
mov
incl
push
cmp
gs
clc
or
xor
out
repz
or
xchg
cmc
adc
mov
dec
in
and
repnz
xor
aam
adc
xor
leave
pop
in
ret
sub
stc
xchg
cmp
pop
dec
pop
sbb
int3
sub
push
ja
xchg
arpl
fs
pop
xchg
xlat
sub
std
push
xor
leave
ljmp
push
mov
mov
dec
cmp
mov
xchg
mov
out
or
imul
imull
jl
pop
out
push
xchg
push
xor
scas
cmp
xchg
sahf
lock
int
aad
dec
pop
pop
out
jnp
or
dec
sbbb
cmp
fsubrl
aaa
cmp
cmp
xchg
dec
stc
cmp
jmp
xlat
jg
fidivl
les
fdivs
mov
fisttps
sub
xor
mov
fst
push
gs
adc
leave
neg
pushf
push
addr16
inc
sbb
adc
out
loop
pop
mov
dec
xchg
pop
cmp
mov
je
mov
icebp
dec
push
shl
mov
pop
jmp
fwait
mov
sti
mov
test
scas
adc
push
jmp
xchg
pushf
push
jg
scas
cs
and
adc
adc
push
in
inc
in
add
mov
dec
mov
or
out
dec
rorb
in
loope
rcrl
movsb
push
jmp
xchg
or
push
mov
out
xchg
jecxz
out
pusha
sbbb
mov
ret
cmpsb
out
xorl
or
scas
adc
xor
mov
jbe
xchg
stos
push
cmpsl
sbb
push
dec
push
dec
pop
mov
xor
xor
pop
and
aas
mov
aaa
pop
js
ret
mov
hlt
js
cmpsb
mov
arpl
push
mov
pop
adc
push
lret
xchg
dec
dec
nop
sub
negl
roll
sbb
adc
xor
jecxz
insb
popf
dec
mov
pop
and
push
xor
stos
sbb
rolb
jnp
dec
popf
xchg
mov
mov
out
inc
pop
jge
outsb
inc
call
or
mov
mov
dec
dec
xorps
dec
in
xlat
outsl
push
add
mov
sub
inc
shll
inc
lods
sahf
mov
insb
jle
mov
push
mov
lods
xor
aad
fstp
mov
add
sub
out
inc
pop
xchg
data16
roll
aad
mov
dec
leave
call
jbe
test
fadds
movsl
jge
fimuls
xchg
out
and
adc
push
mov
adc
push
ja
shlb
pop
sub
icebp
test
test
and
movsb
into
lea
pop
sbb
jmp
jae
loopne
int3
jmp
loopne
fs
test
jnp
loop
data16
arpl
xchg
bnd
fsub
test
sahf
jmp
and
xchg
xchg
push
and
pop
testl
das
jne
insl
leave
push
mov
xchg
stos
je
pop
lods
add
xorb
push
push
push
sahf
sbb
in
jl
mov
rcll
aaa
inc
xchg
jbe
and
mov
sub
push
push
lret
arpl
and
xor
js
adc
jne
sbb
scas
push
lahf
xchg
sub
pop
leave
cmp
mov
inc
sbb
mov
lret
or
sbb
pop
mov
cmp
nop
aas
pushf
add
push
sub
mov
mov
jo
movsl
rclb
xchg
mov
mov
adc
les
pop
pop
rcrb
lock
call
fists
cld
inc
lods
shll
cmpsl
inc
mov
pop
cli
pop
pop
mov
dec
mov
sbb
ljmp
add
xor
pop
clc
add
ficoms
xchg
jecxz
in
sbb
shll
mov
iret
xor
jl
xchg
and
mov
mov
in
cmp
popa
lret
in
push
adc
sub
mov
push
adc
mov
test
mov
lock
js
or
mov
pop
loope
mov
call
mov
je
push
or
cmp
dec
sbb
xlat
xor
cmp
mov
fldpi
lods
sbb
sahf
mov
and
popa
insb
pushw
cmpsl
sbb
jmp
cmp
pop
inc
es
scas
fs
jb
pop
push
xchg
xchg
jl
and
xchg
and
std
pop
push
loop
or
div
stos
or
roll
and
and
or
push
mov
ja
sbb
call
inc
fstpt
cmc
jg
jne
cmc
icebp
adc
in
test
xchg
push
and
sbb
or
push
jp
sub
gs
mov
dec
cmp
movsb
inc
xor
fiaddl
pop
jl
jg
jl
fstpt
mov
jl
fucomi
daa
sahf
stos
push
dec
and
pop
cmp
mov
inc
out
out
testb
test
nop
incb
imul
mov
nop
aaa
das
pushf
loop
add
cs
lahf
jb
out
bound
jb
insl
xchg
out
loope
popa
xor
adc
enter
pop
scas
or
sbb
sbb
inc
add
cltd
cmp
cmpsb
jle
pop
push
jl
sti
jo
sarb
pop
insb
push
fildl
pop
xchg
xor
mov
jg
int
aam
adc
push
movb
mov
jnp
cmp
out
subl
jp
adc
sbb
inc
out
sbbb
aaa
imul
bound
or
clc
aas
sub
adc
aam
cltd
xlat
adc
hlt
push
jns
in
mov
add
mov
mov
insl
pop
lods
sub
xchg
sub
adc
aaa
or
loop
iret
outsl
lcall
push
sub
cmpsl
mov
inc
fsubp
or
add
sbb
bound
in
push
imul
sbb
outsb
adc
stos
outsb
lret
lock
daa
xchg
or
add
fmuls
mov
or
loop
shrl
push
mov
mov
xchg
mov
add
inc
js
outsl
loop
rcrl
push
das
xor
fcmovb
mov
jbe
cmpsl
sbb
and
or
movsb
sub
jge
mov
lahf
or
cmp
ret
pop
mov
enter
mov
fldlg2
ljmp
int3
cmpsb
sarb
jg
je
jle
mov
mov
mov
jne
sub
fcoml
sbb
xor
push
daa
mov
inc
out
loopne
pop
adc
pop
aaa
jp
movsb
sub
fs
xor
inc
adc
das
adc
fcmovb
out
not
lock
loop
sub
mov
xchg
lahf
jp
scas
stos
lret
sti
loope
decb
push
es
add
stc
xchg
mov
in
cmpsb
aam
add
clc
scas
out
stos
sarl
rol
mov
aad
inc
xchg
mov
add
xchg
testl
fwait
mov
jle
repnz
test
cli
jecxz
pop
in
inc
stc
testl
dec
push
push
dec
mov
push
push
push
dec
add
dec
push
mov
js
inc
test
insb
inc
enter
fisttpl
loope
leave
cs
mov
fadd
push
std
add
jbe
add
aaa
or
xchg
aam
sbb
or
push
aad
mov
push
sbb
fwait
and
cmc
push
test
push
fldt
and
addr16
sar
sti
shlb
pop
add
mov
sub
adc
rorb
test
fwait
fnstenv
pop
sbb
inc
shr
lock
rorl
je
xchg
popf
dec
js
les
xchg
fdivs
sub
inc
inc
jp
call
push
rorb
dec
xor
cs
inc
or
jg
movsb
lea
stos
ds
aad
push
jno
fsubr
mov
xchg
jnp
sbb
loop
inc
adc
in
sbb
sbb
adc
cmp
dec
in
addr16
cmpsb
adc
fbld
clc
cmp
sbb
out
std
pop
sub
movsb
hlt
fdivrl
jecxz
dec
jb
jae
int
sub
mov
shrl
inc
loopne
test
fs
lahf
dec
mov
std
in
adcb
mov
shlb
inc
movq
lods
aas
into
shlb
gs
dec
std
nop
sbb
or
jb
movsb
jle
sbb
vandnpd
sahf
je
test
ret
add
xor
cwtl
in
adc
aas
push
mov
adc
mov
mov
cwtl
dec
or
cmc
in
ljmp
lds
mov
mov
xor
pop
popf
icebp
repnz
dec
lret
and
pop
lcall
push
icebp
xlat
jae
cmpsb
movsl
aad
cli
or
scas
in
test
pop
js
and
cmc
push
inc
mov
xchg
jg
popf
push
aam
outsl
cmp
mov
jle
and
mov
or
sub
aad
mov
mov
cmp
cltd
pop
daa
sbb
popa
mov
xor
mov
js
enter
push
fsubrl
fwait
out
lods
mov
cld
sahf
data16
cmc
mov
fisttpll
push
xchg
cmpsl
leave
adc
dec
std
sbb
loop
cmp
lret
mov
es
loop
ja
push
gs
xor
sbb
fildl
mov
stc
ljmp
inc
cmp
push
adc
xchg
sbb
and
shl
mov
addl
xor
mov
dec
pop
outsb
lret
lods
aam
push
icebp
mov
sbb
add
test
jnp
into
roll
lcall
call
inc
mov
repnz
add
push
or
jge
fdivr
mov
and
jnp
mov
cmp
loope
mov
dec
lods
or
divps
jo
mov
inc
movsl
and
call
push
lret
loopne
push
test
xchg
pop
adcb
movsl
in
xlat
imul
mov
xor
scas
push
mov
testb
sahf
jne
sbb
bound
out
jecxz
xchg
in
inc
mov
mov
aas
add
push
outsl
cmpsl
and
out
je
shlb
das
cmp
dec
cwtl
add
divl
pop
dec
test
sbbb
jp
mov
jl
sbb
push
pusha
fbld
inc
and
add
out
xlat
add
scas
xchg
jmp
in
xchg
xor
push
mov
cmpsb
clc
fwait
xor
cs
and
pop
test
cmp
sub
lock
sysret
sbb
dec
adc
cmpsl
push
sbb
cmp
divl
push
xorb
xchg
shr
xor
call
mov
xor
jge
xlat
in
push
add
insl
push
cmp
ljmp
dec
xchg
add
fidivl
arpl
in
sub
sahf
mov
insb
rcrl
pusha
in
cs
es
or
idivb
ds
mov
pop
lret
sub
mov
mov
xchg
xchg
push
jmp
fmull
lods
scas
pop
mov
dec
mov
arpl
loopne
movsb
dec
dec
fbld
rol
arpl
fsubl
sbb
jo
or
or
or
mov
mov
pop
adc
outsb
pop
packsswb
jge
in
sub
sbb
jl
mov
sub
shrb
sbb
jno
test
or
in
movb
mov
jmp
sbb
mov
in
mov
cmp
daa
lret
push
sub
mov
pushf
pop
cli
mov
cwtl
test
xor
lods
arpl
pop
out
jb
rcll
or
jp
sbb
add
jno
add
xor
xchg
pop
mov
scas
push
jbe
pushf
ror
xchg
les
dec
cmp
ror
mov
xor
lds
push
adc
fcomps
cmpsb
idivb
add
sbb
lret
jb
test
ds
jbe
or
fs
xor
test
adc
jg
add
inc
lret
sbb
test
loop
mov
hlt
push
add
addr16
push
sub
popa
popa
jnp
cld
or
insl
fidivl
inc
es
mov
or
or
jmp
clc
xor
push
sbb
movsl
mov
ret
lret
or
pop
add
ss
das
jecxz
fld
or
mov
mov
push
mov
cwtl
cs
xorl
mov
or
mov
test
xor
mov
out
pop
jle
ss
xchg
xchg
jmp
cmpsb
adcl
incb
popa
push
xchg
or
scas
mov
roll
das
fldenv
mov
jae
es
movsl
je
sarl
popw
popf
mov
cs
pop
push
lock
adc
xchg
leave
pop
mov
inc
int3
inc
icebp
xchg
fisttps
out
lcall
sub
push
sub
or
scas
inc
mov
xor
jp
and
cltd
pop
fcmovnu
mov
xchg
stos
xor
or
aaa
ss
mov
es
mov
out
iret
add
js
inc
movsl
fst
dec
roll
xchg
inc
mov
fiadds
push
xor
xor
xor
mov
loop
xorl
jge
push
cs
test
insl
inc
cmp
in
push
shll
mov
push
xchg
les
lahf
xchg
rorb
jmp
inc
mov
ljmp
sti
fs
out
pop
xor
jno
loop
jo
dec
sub
mov
cmp
mov
mov
inc
pop
jle
fdivs
inc
outsl
xor
jb
mov
or
mov
gs
pop
cmp
popf
cmp
sahf
outsl
jge
dec
add
sbb
pop
ljmp
adc
xor
leave
sbb
test
imul
cmpsl
or
pop
cmp
pop
or
fists
bound
or
in
fimuls
fistpll
jae
inc
stos
mov
jne
les
and
push
lods
gs
out
push
fiaddl
cmp
bndldx
ljmp
cmp
mov
push
sti
xchg
insl
mov
jne
mov
movsl
mov
jecxz
sub
dec
mov
inc
and
fsubr
pusha
sbb
dec
gs
fs
enter
add
ja
dec
sbb
pop
jnp
mov
xor
mov
inc
aas
cmp
cmpsb
jae
test
movsw
lahf
sub
dec
cmc
inc
jne
movsb
aam
addl
jp
outsl
cli
pop
mov
pop
lods
jae
bound
jecxz
movsl
clc
push
aam
test
inc
shr
cmp
mov
clc
sarb
push
aad
adc
lcall
or
in
outsb
in
pop
fisubs
bound
jno
jg
xchg
pop
aaa
jns
mov
xor
adc
je
es
jb
scas
pop
add
dec
cmp
ljmp
mov
pushf
mov
xchg
insb
sbb
bound
in
lds
xchg
cli
jmp
jecxz
jnp
out
sahf
into
pushf
pop
pop
cmp
pushf
or
sub
jns
adc
popf
clc
jg
dec
push
test
cmc
sbb
push
fadds
or
jns
imul
push
insb
loopne
aad
mov
iret
inc
xchg
jno
scas
push
mov
and
das
sarl
out
das
loopne
hlt
inc
lods
pop
cmp
mov
sti
inc
in
enter
add
mov
dec
lret
sbb
jnp
mov
mov
sub
scas
test
mov
push
ja
add
xor
dec
jns
fs
mov
sub
push
inc
cmp
loopne
or
pushf
mov
jmp
stos
push
pusha
jmp
pop
imul
loope
adc
adc
cmc
stos
push
mov
sub
pusha
aad
add
lcall
popf
cwtl
inc
mov
loope
ljmp
or
leave
sbb
negl
adc
add
stos
and
mov
je
mov
mov
push
fidivl
mov
scas
jns
sti
filds
ret
enter
sbbl
jge
sub
mov
mov
fnstcw
and
dec
xchg
sub
push
js
mov
mov
and
fisubs
and
lret
rol
mov
test
push
jmp
xor
pop
pusha
test
ss
mov
lahf
adc
jl
mov
ds
das
mov
mov
inc
test
daa
cmp
sahf
cmp
cmpsb
stos
adc
fs
xor
mov
aaa
int
mov
aad
arpl
popa
insb
hlt
movsl
add
push
aad
sti
lods
sarl
add
lret
cwtl
test
mov
xchg
lds
jle
inc
add
jl
xchg
jbe
ficomps
and
jle
xchg
pop
jecxz
imul
cmp
mov
xor
mov
scas
cld
pushf
and
pop
xor
mov
dec
mov
cmp
shl
movsl
pop
dec
scas
adc
out
xlat
adc
pop
nop
sbb
test
xchg
push
movsb
shrl
jo,pt
push
scas
inc
jge
fistpl
pop
jnp
add
add
mov
bound
mov
in
pop
add
fadd
movsl
in
sar
repnz
push
inc
add
mov
lods
cwtl
fbstp
xchg
lods
and
sahf
cmp
xchg
out
xor
stc
mov
sub
xchg
loopne
adc
push
cmp
jo
out
pop
adc
or
out
mov
xchg
mov
ljmp
mov
jae
dec
insb
jo
les
sti
data16
loope
fsub
prefetch
or
xchg
cmpsb
in
in
add
mov
or
les
test
mov
stc
dec
pop
jno
movsl
lock
cwtl
pop
es
mov
fldcw
and
jge
pop
push
fs
mov
push
iret
or
inc
daa
jg
lock
mov
pusha
adc
mov
adc
sbb
push
inc
test
fstpt
shll
and
push
or
pop
test
jnp
push
icebp
mov
push
cmpsb
sbb
xchg
dec
mov
int3
outsb
daa
in
inc
inc
scas
daa
setae
mov
daa
mov
sbb
push
jns
fucom
rolb
xchg
push
std
mov
stos
sahf
add
mov
gs
fs
outsb
subl
cld
repz
ss
enter
gs
frstpm(287
jecxz
or
cli
mov
sti
stc
les
sbb
std
jmp
jb
mov
fs
lret
xchg
sub
inc
jnp
shrl
aaa
std
in
popl
inc
jb
hlt
mov
jmp
cmp
call
jne
arpl
test
mov
aad
xor
push
xchg
mov
cwtl
ja
pop
stos
xchg
neg
mov
shl
dec
cmp
sbb
xchg
push
mov
sub
mov
mov
sub
orl
in
mulb
cmp
mov
outsb
test
jle
xchg
mov
stos
daa
sub
aam
push
roll
jbe
inc
inc
imul
pushf
jno
fnsave
jnp
xor
aam
daa
sub
call
cmc
ret
inc
adcb
sarl
mov
or
mov
push
clc
xchg
inc
mov
cmp
mov
and
sbb
and
int
inc
sub
jno
pop
lock
aaa
cmpsl
cld
nop
push
add
inc
xchg
loope
xor
inc
mov
jne
jo
cltd
cs
sbb
mov
xchg
jb
pop
test
sub
js
lods
dec
sub
lret
jp
insl
mov
stos
and
clc
cmp
mov
add
or
lret
divb
mov
xchg
mov
repz
and
stos
xor
pop
lds
and
inc
jns
sbb
lea
mov
dec
out
lret
aaa
inc
rcll
test
test
inc
aas
xlat
push
xchg
lods
sub
jp
rorl
cld
mov
dec
xchg
ret
inc
or
xor
repz
insb
jl
lcall
xchg
pop
lods
xor
xchg
inc
imul
mov
dec
add
or
xchg
xchg
cs
fwait
mov
push
sbb
in
mov
and
sbb
jae
jbe
sub
mov
and
cmp
xor
es
nop
ret
scas
dec
dec
shll
addr16
out
cmp
mov
jo
stos
andl
call
fstl
jge
aam
pop
jg
inc
pop
insl
loope
or
and
and
push
dec
int3
add
cmc
cmp
sbb
mov
sbb
pop
iret
jg
pop
fbstp
mov
and
les
mov
sbb
sbb
add
mov
ret
sbb
cmp
cmp
lods
pop
push
mov
ss
xchg
dec
dec
jl
jb
jne
loope
sbb
pop
or
je
sti
mov
cmpsb
mov
dec
dec
insl
test
mov
insl
mov
test
lods
les
and
jbe
fs
cld
or
or
jle
jge
mov
push
or
push
inc
daa
xchg
sarl
mov
scas
inc
cld
call
lcall
push
push
aaa
loop,pn
ds
sbb
std
jae
mov
out
imul
mov
sbb
aam
ss
and
stos
enter
loope
pop
popf
or
mov
and
inc
ja
add
cmp
mov
out
lea
mov
repz
repz
rcr
and
sub
mov
cmpsb
cmp
mov
xchg
insb
push
mov
xor
mov
es
xor
xor
pop
mov
xor
and
mov
jns
inc
cltd
pop
stos
pop
push
pop
stc
mov
xchg
les
mov
stos
leave
xchg
cmp
out
xor
cmc
cmpsb
cmpxchg8b
into
mov
mov
inc
sarl
pop
add
hlt
or
lret
dec
and
cli
insl
in
pop
cmc
push
push
inc
pop
js
inc
cmpsl
pop
mov
pop
or
ret
stc
xchg
insb
push
adc
xchg
cmpsl
outsb
dec
xor
cs
jecxz
pop
inc
out
xor
cli
and
movl
adc
sub
mov
inc
jno
mov
in
mov
lret
imul
mov
repnz
stos
sarb
xchg
lds
cld
shl
ret
xor
cli
mov
push
adc
daa
sub
push
jno
jl,pn
xorb
fbstp
ret
push
insl
inc
xchg
fiaddl
fldt
add
repnz
xor
inc
cmpsl
add
or
mov
ja
push
push
push
jns
inc
sbb
sub
int3
add
jg
jno
jecxz
adc
pop
jns
and
pop
mov
hlt
loopne
add
js
sbbl
movsb
mov
xlat
xchg
ficoms
push
xchg
fcoml
aaa
jnp
adc
xor
cld
pop
cld
fstl
or
mov
jne
lea
stos
jl
mov
mov
and
sbb
daa
push
divb
mov
xlat
push
and
adc
cmc
ror
adc
les
cmpsl
rclb
jg
sahf
add
nop
mov
rorb
xchg
adc
stos
lock
xorl
add
push
sbb
jbe
rorl
aad
inc
loope
push
dec
js
insl
and
cmpsl
fsubrs
jg
or
cwtl
aas
mov
das
call
jne
add
scas
mov
out
ret
cs
or
xor
in
in
or
mov
mov
in
imul
int
jno
bound
xor
add
movsl
add
sub
xchg
mov
pop
dec
call
mov
outsl
je,pt
ds
xor
lahf
pop
xlat
ds
jae
xlat
add
je
enter
test
cmp
adc
cmp
push
jecxz
pop
mov
xchg
jg
and
outsb
jo
inc
inc
out
inc
pop
or
rcl
out
testb
stos
icebp
push
add
pop
cmp
jle
xor
jle
loopne
add
xchg
jle
sbb
push
inc
outsl
stos
xor
pop
aaa
sbb
sbb
test
push
and
cmp
pop
sbb
jb
pushf
mov
dec
in
and
in
jne
cmpsb
icebp
out
loope
in
popa
pushf
mov
daa
xchg
adc
jge
sahf
out
hlt
repnz
jecxz
insb
and
mov
mov
nop
pop
fwait
push
fbld
or
clc
mov
gs
cwtl
fisttpl
adc
mov
in
adc
cli
push
sbb
or
push
add
shrb
xchg
aas
mov
test
cmp
outsl
xchg
outsl
mov
ret
push
push
jl
faddp
aam
cmovo
add
test
test
inc
or
fs
divl
mov
xor
fnsave
mov
sub
push
aaa
ss
inc
idivb
or
push
inc
mov
scas
loope
mov
call
dec
out
dec
out
adc
sahf
aam
fdivrs
pop
outsb
repz
ljmp
hlt
insb
or
addr16
xor
mov
movsb
das
mov
sbb
push
je
insb
daa
add
xor
sbb
out
xchg
or
push
push
sbb
push
dec
sbb
test
cmp
popa
adc
push
stos
dec
lret
out
jmp
mov
sbb
ja
cmp
jl
adc
xchg
mov
dec
inc
inc
test
adc
movsl
pop
mov
dec
scas
daa
pop
and
inc
fstpl
adc
adc
pushf
xchg
mov
adc
adc
lock
mov
push
add
pushf
push
loop
mov
arpl
cli
and
lock
repz
cmc
arpl
inc
cmp
cmp
jno
pop
in
push
stos
in
in
mov
mov
mov
es
add
or
pop
dec
sub
jmp
and
inc
xchg
sbb
mov
test
inc
or
dec
mov
sub
stos
xor
fcoms
aaa
int3
data16
xlat
roll
mov
push
rcrl
sarl
push
mov
xchg
ficompl
push
or
scas
int3
xchg
cmp
adc
lock
sbb
in
enter
push
and
nop
mov
mov
and
mov
mov
leave
jecxz
lods
jno
mov
inc
movsb
fsubrp
aas
jecxz
cltd
lds
cs
call
dec
cs
mov
ljmp
fdivl
lods
inc
mov
mov
push
add
repz
sbb
out
push
or
dec
pop
cmp
lcall
cwtl
xchg
mov
dec
in
nop
arpl
cmp
into
mov
mov
add
dec
sub
mov
fstpl
popf
inc
sahf
outsl
aas
aaa
xor
adc
mov
mov
sarl
sub
xor
loop
dec
hlt
gs
fisubs
xchg
cmp
pop
daa
test
push
fsubs
push
shlb
xor
fcomps
pop
jno
add
enter
mov
test
jg
mov
insl
lcall
pop
out
hlt
movsb
cmp
inc
cmp
fcmovu
pop
dec
into
out
cmp
mov
push
out
or
lock
push
fstps
and
xchg
insb
lcall
sub
shlb
je
mov
mov
xchg
mov
xchg
cltd
push
fsubs
subb
push
jbe
test
loop
inc
pop
out
add
ficompl
fsubrl
push
arpl
scas
addr16
pushf
mov
aaa
cs
hlt
push
lock
pop
das
pop
testl
xchg
pop
lcall
mov
sahf
in
sbb
aas
lea
das
jnp
sbb
cmp
inc
pop
mov
aad
adc
sbb
sub
ja
inc
mov
jmp
mov
add
stos
notb
mov
jecxz
je
lods
loop
xor
sbbb
adc
sub
pop
dec
lret
stos
mov
pop
adc
aam
stc
add
mov
push
out
jns
ss
cli
shrl
mov
mov
in
sub
jmp
cmp
cltd
movsb
inc
frstor
inc
cwtl
bound
jl
or
ja
jle,pt
sub
enter
popa
insb
imul
js
lods
test
adc
popf
into
mov
jmp
xchg
cmp
pop
pop
cltd
inc
jl,pt
andb
mov
out
sbb
mov
xchg
ret
xor
mov
js
pop
adc
sub
mov
lret
pop
add
fucomp
push
jecxz
mov
ljmp
xchg
sti
rcr
or
subl
sbb
pop
shll
jle
xchg
adc
inc
ja
jle
sbb
jge
dec
int3
mov
mov
xchg
mov
stc
aam
pop
push
xchg
insb
adc
les
fs
adc
inc
xorl
enter
inc
jbe
insb
popa
cli
jae
addr16
ret
mull
sbb
jg
sub
rcll
enter
mov
push
arpl
pop
jp
test
cmp
sub
push
inc
lock
xor
xlat
or
aad
rcrb
popa
pushf
pmulhw
popf
mov
cmp
or
ds
clc
xchg
sti
and
or
popa
or
or
orl
pop
xchg
sti
lods
fcomps
jmp
subb
mov
movsb
push
xchg
in
xchg
mov
inc
sub
jnp
sub
shrl
add
add
lods
fidivs
leave
ja
xor
negl
jae
or
dec
into
outsl
mov
cmp
fiadds
jmp
addr16
movsl
movsb
mov
daa
ret
adc
pushf
mov
cli
adc
or
cmp
xchg
and
movsb
sti
rolb
adc
mov
das
insl
leave
jl
lret
push
outsl
fisttpll
xor
daa
stc
jno
scas
cltd
lods
scas
pop
jge
inc
mov
out
cltd
je
dec
add
dec
sbb
adc
sbb
cltd
aaa
leave
xor
jb
jno
mov
cmp
lods
push
pmaddwd
sbb
sbb
aas
lahf
or
lock
sub
lcall
popf
rcrb
lock
mov
pop
mov
iret
sbb
jge
pop
mov
pop
ret
sbb
sub
mov
jb
mov
mov
and
popf
cmp
xchg
xor
adc
add
fucomip
xchg
mov
leave
shl
sub
insl
lds
cld
insl
jl
xchg
lret
pop
shrl
addl
fcompl
mov
push
lods
in
mov
and
add
dec
ret
push
mov
fdivl
inc
or
inc
scas
scas
scas
pop
or
lods
inc
cmp
dec
inc
mov
add
cs
das
ljmp
sub
retw
cld
adcl
push
xchg
add
lahf
movsb
push
push
dec
lcall
hlt
iret
mov
orl
mov
cld
push
fimuls
pop
hlt
xchg
or
mov
sarb
mov
mov
outsb
and
movsl
mov
hlt
int
pop
adc
cmc
sbb
int
filds
xor
les
lock
inc
frstor
add
leave
sub
rolb
fmuls
out
lret
jmp
and
or
cli
aas
jno
cmp
add
in
mov
jmp
arpl
dec
int
mov
push
inc
and
jb
cmp
pushf
popa
xchg
cmp
mov
inc
test
xor
int
sbb
mov
dec
arpl
mov
push
scas
pop
rcrl
loop
inc
add
or
mov
mov
repnz
icebp
add
jbe
pop
rolb
scas
rcrb
cmpsl
popf
sahf
hlt
pop
leave
and
push
call
decb
ss
cmp
jb
mov
lds
out
jo
push
cmpl
push
scas
lock
into
pop
stos
sbb
sbb
insl
mov
mov
and
roll
sub
cmp
mov
sbb
daa
push
imul
jns
repnz
jns
mov
out
outsb
fstpl
jg
inc
iret
jecxz
je
scas
lock
fldl
jecxz
pop
xchg
inc
jg
xchg
dec
aas
or
mov
xchg
jmp
xchg
add
outsl
jecxz
mov
sub
es
loopne
je
cmpsl
dec
sbbb
test
add
sbb
pusha
adc
call
out
in
dec
pop
ret
repnz
out
pusha
push
pop
cmp
add
push
sti
jo
daa
lods
outsb
out
insl
mov
dec
dec
shlb
jge
arpl
sete
or
fucompp
lret
addb
or
cmpsl
or
icebp
push
test
insb
and
mov
jno
lds
dec
xor
bound
mov
ror
lret
pushw
in
cmpsl
or
pop
lahf
mov
rorb
push
xlat
mov
cld
sahf
aad
adc
lds
pop
xor
cltd
clc
lahf
call
xor
xchg
push
out
in
jmp
fwait
dec
stc
inc
mov
pop
xor
stos
xchg
testb
inc
pop
lcall
outsl
sbb
lods
sbbb
sbb
ljmp
jge
addr16
hlt
mov
mov
sub
fistps
jae
or
ljmp
mov
cli
repnz
mov
ljmp
int
test
cmp
fsubp
jmp
jecxz
xor
mov
out
or
mov
pop
sbb
jmp
dec
mov
xor
jl
loope
in
in
mov
xor
dec
cmp
cli
cmp
xor
cmc
push
sbb
or
pop
xchg
xor
das
mov
jg
dec
adc
or
cs
sub
and
push
mov
pop
or
add
mov
jno
mov
mov
rep
push
jns
sahf
sbb
adcb
movsb
dec
in
jbe
int3
xor
or
jl
pushf
lea
ds
sub
xor
lea
sub
pop
jns
rclb
gs
repz
adc
jae
mov
je
push
xchg
inc
mov
xchg
or
outsl
cli
dec
sbb
out
sub
lods
arpl
jp
pop
in
pop
pusha
mov
bound
fcmovne
pop
push
push
jecxz
sbb
mov
mov
mov
lcall
inc
mov
mov
add
mov
and
push
scas
dec
inc
das
sbb
jl
jp
insl
dec
in
xchg
lcall
push
sarb
dec
adc
test
adc
icebp
pop
dec
push
dec
cmpsb
mov
shll
lcall
jns
cmpb
jbe
cmp
rcrb
and
divl
xchg
pop
ficompl
mov
and
scas
aad
or
mov
xchg
loop
and
cwtl
mov
popf
push
js
aad
cmpsb
jmp
dec
aas
push
js
cltd
and
cltd
mov
jge
xor
and
icebp
or
dec
push
mov
inc
ja
push
mov
enter
sbb
adc
add
dec
add
jae
jne
push
pop
repz
push
lcall
cld
jb
int
add
ret
pminsw
xchg
decl
fsubrl
pop
push
sbb
repz
test
and
in
mov
sbb
shl
pextrw
or
or
sti
mov
ds
dec
ret
add
push
cmp
lods
xchg
or
lods
fidivrs
dec
sti
aam
sahf
and
xor
dec
sbb
ret
and
sbb
fisubl
scas
out
int
jns
stc
addr16
and
rcrl
mov
leave
or
enter
jl
jb
aad
enter
push
movsb
and
xchg
xor
push
testl
iret
jmp
dec
push
cwtl
stos
inc
das
mov
cmp
les
or
cmp
test
jge
mov
sbb
cmp
fsubl
push
push
notb
adc
jle
dec
leave
jge
add
push
dec
loope
test
add
shlb
cmp
mov
sbb
xchg
mov
cmp
or
jl
xchg
sub
xlat
test
push
pop
jae
sbb
in
mov
cmp
sbb
adc
xchg
jbe
fsubl
mov
scas
push
sub
mov
orl
popl
mov
mov
mov
add
or
jle
shrb
fs
pop
ljmp
mov
sub
in
cld
fstpt
pop
loopne
xchg
stc
int
sarl
inc
push
jge
sub
ja
cmp
mov
inc
adc
andl
mov
pop
int3
add
pop
nop
test
xchg
lods
jle
addr16
cmp
pop
jmp
add
dec
and
push
test
dec
cmpsl
and
or
in
xor
jbe
xor
rcr
testl
mov
je
ret
sahf
js
ret
sahf
rorb
add
xchg
mov
fidivl
mov
add
iret
xor
syscall
mov
ja
inc
cmp
shrb
xchg
push
in
emms
add
push
push
jno
das
pop
mov
add
roll
push
imul
adc
imulb
xchg
fdivl
inc
push
mov
cmp
jne
pusha
mov
mov
lods
xor
rcll
jnp
mov
push
inc
pop
in
fucom
in
push
push
add
cmp
mov
pop
pusha
push
outsl
ja
cmpsb
push
shrl
cmp
pushf
int
dec
mov
inc
pusha
pop
pop
inc
int
xchg
dec
mov
jecxz
fsubl
mov
loop
sub
rclb
inc
fldcw
or
fwait
test
rclb
psrad
fisubrl
aam
dec
xchg
add
jmp
rorb
nop
mov
addr16
int3
out
mov
xchg
das
pop
add
push
je
in
out
mov
push
cltd
jge
jecxz
mov
hlt
scas
xchg
cmp
movsl
xchg
mov
cmp
cltd
lahf
test
arpl
jge
pop
cwtl
sbb
xor
mov
jns
add
xchg
push
imul
adc
pop
out
mov
mov
fimull
cmp
ja
popa
mov
lahf
cmp
dec
xchg
mov
sbb
roll
subl
ljmp
rcrl
pop
or
push
aam
loope
mov
xor
inc
and
movsl
popw
insb
mov
sahf
scas
aaa
cmp
inc
bound
movsb
cmc
jnp
push
xchg
push
shl
lea
sbbb
ds
rcll
push
shlb
lcall
dec
scas
sarl
dec
mov
enter
xchg
loopne
or
mov
mov
cmp
je
and
xlat
je
cmp
dec
pop
jo
jnp
test
mov
lcall
jae
movsb
xchg
sbb
sub
jl
dec
movsb
rorl
dec
push
mov
fistpl
or
sbb
sub
jmp
fidivrs
sbb
daa
stc
push
scas
bound
jmp
pop
push
sarl
xchg
arpl
jmp
test
cmp
pusha
fadds
insl
cmp
xorb
mov
jb
mov
mov
popa
lret
mov
fildll
repnz
jle
loop
add
scas
sub
inc
ret
or
xchg
push
fwait
push
stc
xor
cld
cltd
cld
dec
and
dec
and
filds
movsb
test
addr16
or
aaa
jg
push
sbb
sbb
lcall
push
clc
push
jl
inc
jo
je
jbe
push
popf
push
es
into
mov
jne
mov
xchg
outsl
push
andl
mov
pop
aad
and
or
or
negl
adc
in
push
add
test
and
lcall
mov
push
xchg
sbb
jmp
test
add
in
sbb
sub
fsubr
sbb
shll
in
xor
sub
gs
fsubs
mov
xchg
cld
push
mov
int3
daa
sti
sub
mov
pop
sub
mov
iret
xchg
repz
xchg
xor
cmpsb
jecxz
mov
jnp
cmp
pop
test
gs
test
add
mov
stc
add
add
lahf
popa
je
movsb
dec
int3
xchg
aas
rorl
lcall
xchg
push
xlat
loope
mov
dec
in
fwait
je
xor
mov
xchg
fsubl
daa
mov
jmp
mov
fdivs
sbb
repnz
push
mov
fs
inc
rolb
push
sub
push
test
add
push
or
in
ret
cmp
test
xchg
cmc
out
or
pop
add
pop
dec
inc
xchg
cmp
mov
es
shlb
sbbb
lea
dec
inc
dec
push
pushf
fs
pusha
shll
xor
imul
mov
mov
dec
push
xchg
repz
push
jae
mov
pop
sbb
out
in
iret
loope
ja
sub
in
xchg
dec
mov
push
push
push
xchg
xor
jl
insl
add
pop
mov
fcoms
test
xchg
jb
xchg
mov
jb
stos
pop
dec
dec
sbb
xchg
pop
or
shl
out
aam
jg
mov
sub
les
mov
pop
ljmp
dec
hlt
jns
jns
jns
iret
add
loop
das
stc
enter
xchg
and
mov
pusha
hlt
pop
inc
outsb
rolb
mov
xlat
out
cmpsb
sti
push
push
push
sbb
in
and
mov
dec
shll
jp
test
scas
scas
out
lret
jo
std
cmp
fidivrl
mov
mov
inc
cmpsl
mov
push
adc
imul
xchg
ljmp
or
bound
xor
pop
enter
push
rorb
imul
inc
dec
mov
in
test
xlat
xchg
or
jns
lea
into
gs
add
fists
xchg
cld
fndisi(8087
insb
fmulp
into
xchg
sahf
jle
rcll
inc
lcall
lods
les
xchg
push
jo
pop
int
ja
jns
mov
int
cmpsl
loopne
jne
sub
inc
inc
inc
jb
or
scas
or
ror
fwait
mov
cli
shll
push
fisubrs
sbb
push
mov
adc
inc
mov
sbb
inc
xchg
xchg
lahf
jnp
adc
jae
xor
and
and
dec
aaa
pop
in
fs
insl
out
ret
pop
cmp
sbb
out
add
xchg
lcall
push
scas
data16
fiadds
or
inc
fisubrl
cmp
sub
inc
mov
fimuls
aad
test
enter
into
dec
test
inc
xor
mov
jns
dec
sti
pop
xchg
out
push
or
mov
mov
nop
and
mov
fwait
popf
movsb
pop
jb
fwait
nop
sub
sbb
add
jmp
jns
outsl
inc
xchg
jp
enter
sbb
mov
inc
dec
jge
jbe
in
pop
pop
js
jb
fnstsw
movsl
call
pop
lds
stc
ss
fldt
loopne
pop
add
aam
dec
in
mov
inc
test
insl
into
cmp
dec
mov
arpl
int
xchg
pop
fimuls
adcb
icebp
clc
sub
shl
lret
adc
cmp
mov
adc
mov
insb
cmp
inc
xchg
cmp
leave
testb
aas
daa
mov
into
and
jno
and
pop
fistpll
cmp
addr16
push
lret
dec
push
loope
mov
pop
sbb
xor
xor
mov
mov
addr16
sub
fadds
rolb
jns
pop
cmpsb
xchg
push
adc
int
fmuls
pop
pusha
mov
mulb
mov
push
call
test
mov
cmp
pop
cmp
cs
in
scas
imul
leave
sub
movsl
popf
pop
add
and
sarl
jno
dec
and
inc
mov
inc
int
pop
xchg
notb
test
test
repnz
int
cmp
rclb
jle
ficoms
fwait
scas
loopne
adc
int
mulb
jecxz
aaa
lods
mov
add
mov
mov
sbb
jmp
pop
outsb
adc
pop
mov
je
push
imul
ret
push
dec
stos
mov
cltd
jg
or
mov
and
outsb
xchg
mov
adc
pop
inc
outsl
out
pop
xchg
dec
sub
in
mov
dec
stos
jae
xor
add
shrb
addr16
dec
add
out
scas
mov
pop
stos
icebp
sub
fcomps
lcall
hlt
lahf
lea
xchg
movsb
add
scas
add
daa
pop
or
push
push
cmove
push
jl
pop
cmp
push
mov
adc
push
or
dec
loopne
mov
sub
rclb
es
std
jo
pop
lods
fisttpl
inc
mov
ficoml
lcall
jl
xchg
bound
in
cwtl
sahf
xchg
clc
jae
ret
pop
xchg
sarl
popa
lret
out
xchg
mov
add
iret
mov
scas
call
cmpsb
add
mov
fnsave
and
mov
mov
icebp
cmp
adc
xchg
aas
les
mov
cmp
jge
mov
inc
ja
pop
sahf
and
pop
push
jno
adc
or
cmpsb
sbb
decb
into
pop
clc
xor
dec
int
push
int3
insl
stc
cmpsb
jmp
xchg
jne
mov
mov
and
inc
aaa
jns,pt
movsb
cmp
mov
dec
lret
sbb
insl
xchg
and
adc
cmp
test
push
cmpl
cli
pop
cs
aam
xor
adc
sub
mov
sbb
lods
sarb
mov
ret
dec
shll
pop
stos
cltd
data16
ljmp
sahf
pop
lds
xlat
ret
mov
or
mov
jecxz
pop
mov
inc
or
mov
adc
mov
outsl
cld
push
pop
aam
xor
cmpsb
test
cmpsl
leave
jmp
pop
cmp
mov
inc
jno
stos
adc
mov
push
int3
add
add
jne
leave
mov
call
addl
iret
mov
and
inc
enter
lock
push
xchg
sub
mov
and
cmp
xchg
and
fldt
into
adc
movsb
and
repnz
xor
push
sbb
jmp
add
mov
call
inc
cmp
daa
int3
xlat
mulb
mov
cmc
icebp
adc
test
add
add
mov
push
stos
sub
push
sbb
push
jb
pushl
test
and
pop
pushf
cmp
jb
push
dec
jo
orl
sub
es
add
ret
jns
and
pop
cwtl
test
adc
into
ret
enter
xor
or
mov
mov
sub
mov
arpl
mov
rorl
stc
mov
xchg
sbb
push
and
push
sub
xchg
pop
dec
push
outsb
cmpl
xor
out
xchg
jle
mov
lods
rcr
fildll
xor
xor
loopne
push
cmc
ds
sub
inc
adc
or
dec
cld
out
push
stos
xchg
cld
xlat
jnp
fs
inc
out
sbb
daa
shl
adc
dec
mov
and
outsb
fcos
cs
mov
pop
aad
add
push
fidivl
clc
xchg
push
or
mov
mov
mulb
pop
and
std
pop
inc
and
hlt
pop
or
outsb
xchg
aas
push
in
sbb
mov
inc
sbb
mov
dec
stos
into
or
sub
mov
inc
xchg
mov
mov
pop
js
mov
cmp
insl
pop
or
sub
adc
push
pop
aas
and
xchg
popf
push
sbb
leave
das
sti
fcomps
sbb
pop
push
adcb
fcoms
fcmovbe
mov
negb
cs
sbb
push
jbe
in
xchg
cs
test
rorl
or
clc
nop
sbb
popa
and
call
xor
stos
das
or
or
jbe
mov
pop
jle
arpl
andb
aad
sbb
jl
int
sbb
test
sahf
addr16
popf
or
cltd
push
sahf
xor
mov
push
ja
pop
outsl
insb
out
or
shrl
push
sarl
insl
mov
jle
dec
dec
outsb
repnz
inc
dec
imul
stos
rcl
insl
ret
sbb
addr16
jnp
stos
lods
in
or
imul
jae
sbb
pushf
jb
lds
mov
js
push
outsb
inc
lock
and
xchg
cmpsl
sbb
mov
jns
lahf
dec
out
and
mov
xchg
popf
ret
fadds
adcb
pusha
mov
or
enter
jle
cmp
test
pop
inc
lahf
inc
jge
shll
mov
fcoml
inc
popa
jg
sub
mov
xchg
rcr
pop
sub
xchg
arpl
outsb
pop
sbb
les
mov
ss
sub
xor
cwtl
dec
sbb
cmp
jne
leave
add
adc
addr16
bound
jbe
mov
sub
sub
jle
cmpsb
out
loop
stos
shl
mov
or
jmp
cld
cltd
mov
jbe
aad
mov
aaa
and
movsb
sbb
rcr
lahf
sbb
cmpsl
icebp
mov
hlt
cmp
in
ficomps
in
gs
push
setbe
addb
pop
ret
push
cli
and
decb
shll
add
jbe
mov
and
xchg
sbb
pop
or
mov
or
mov
cmp
adc
das
cmpsb
mov
ja
pop
fnstcw
inc
hlt
int3
std
fisttpl
dec
jne
mov
cmp
aaa
or
lcall
xor
xor
jmp
inc
xchg
ret
adc
es
mov
adc
pop
es
dec
push
int3
lods
nop
lahf
loope,pt
cmc
ds
call
clc
jmp
int3
push
gs
push
mov
xor
dec
sub
fwait
push
scas
stos
xor
out
mov
mov
fdivl
jno
mov
dec
adc
pop
nop
adc
mov
ds
out
jnp
inc
xchg
or
int
aas
mov
addr16
lcall
stos
stc
inc
insl
shll
dec
cwtl
sbb
pushf
dec
fs
and
xlat
pop
sbb
push
jmp
dec
xor
rorl
push
lret
jns
xchg
fwait
jns
push
out
out
push
mov
pop
jmpw
add
stos
xor
mov
ljmp
inc
mov
mov
and
lods
mov
jo
scas
mov
les
sub
clc
shlb
rcrb
lds
pop
gs
sub
ds
repz
pop
add
mov
imul
push
and
push
les
lds
jmp
pop
or
mov
aam
cmpsb
mov
or
push
sbb
sbb
xchg
lcall
loopne
fnstenv
sahf
cld
test
ror
push
xchg
jo
or
dec
jmp
adc
data16
mov
xchg
ds
daa
imul
lret
cmc
dec
mov
pushf
or
dec
cmp
xchg
lea
or
push
adc
and
push
aad
test
loope
cmpsb
inc
push
pop
lods
sets
subl
xor
daa
inc
pusha
aad
cmp
push
gs
aaa
push
xor
sbb
aaa
jns
jo
pop
mov
cmp
and
xor
mov
adc
imul
inc
arpl
idiv
scas
subb
mov
adc
xchg
mov
lcall
fs
adc
xchg
mov
push
cmpsb
into
add
rcrb
mov
jno
pop
pop
push
push
ret
xchg
inc
xor
pop
cmp
daa
hlt
enter
and
popf
push
add
insb
xor
xor
xor
pop
xchg
repnz
cmp
pop
inc
stos
out
int
cmp
pop
mov
sbb
push
into
aaa
cld
ret
out
jb
lret
xchg
shlb
pop
jl
insb
movsl
sub
cwtl
mov
test
pusha
arpl
int3
loopnew
mov
pop
lahf
sar
push
mov
mov
inc
call
les
sbb
sub
call
out
lods
sbbl
dec
sub
adc
pop
frstor
stos
push
sti
arpl
inc
and
in
js
pop
sub
and
int3
and
push
dec
cmp
test
jo
fcoml
test
pop
and
nop
or
ss
loopne
stos
incb
adc
xor
scas
in
inc
rclb
or
outsb
cmp
jae
mov
jo
dec
std
movsb
dec
lds
mov
cmpl
insb
jne
movsb
mov
int3
jge
xchg
js
add
sbb
mov
inc
dec
mov
rorl
lahf
cli
xchg
mov
and
les
xor
into
gs
jmp
test
push
lret
adc
enter
mov
mov
jmp
jecxz
and
mov
adc
sub
and
daa
cmp
lcall
inc
and
pop
xchg
enter
jecxz
imul
jp
ret
jp
push
push
add
jbe
loopne
dec
fdivl
sub
outsb
add
or
fsubs
int
dec
mov
jle,pn
or
ror
pusha
jns
sbb
pop
pop
popa
xchg
add
dec
xchg
dec
fs
sub
cltd
stos
mov
sbb
xchg
jge
sbb
jbe
jbe
aad
mov
add
jp
inc
scas
mov
test
out
pop
std
xlat
add
xchg
les
jg
je
xlat
lea
daa
ret
pop
inc
adc
cmp
and
xchg
pusha
cmp
jg
cs
pop
cmp
mov
out
call
xchg
mov
std
cmpsl
fwait
push
ljmp
xorl
pushf
cli
fcoms
sbb
push
cmpsl
mov
mov
sahf
xlat
inc
je
add
loope
cld
xor
lea
sti
push
mov
jae
std
jne
mov
jbe
data16
add
inc
sbb
scas
xor
roll
sub
cmpsl
jne
xchg
jae
xchg
call
mov
femms
rep
pushf
mov
call
lods
dec
add
ljmp
and
mov
call
mov
jbe
xchg
xor
fs
inc
adc
cltd
or
ljmp
in
xchg
lret
xchg
repz
inc
push
lock
jmp
pusha
dec
or
ret
and
hlt
mov
fldcw
in
dec
fiaddl
pop
cmp
inc
or
nop
lcall
sub
dec
add
mulb
incl
xchg
hlt
xor
lods
lods
push
pop
test
sub
scas
test
sub
inc
xor
xchg
adc
jl
or
scas
and
lret
std
pusha
shl
clc
sbb
jmp
sbb
push
pop
sahf
adc
jbe
aaa
js
daa
xchg
mov
sbb
jge
ja
sbb
inc
jbe
outsl
mov
xor
stc
jecxz
in
push
mov
jb
xlat
sbb
pop
jp
loopne
mov
out
sub
std
arpl
lret
mov
pop
and
lea
sbb
pusha
dec
push
jmp
mov
xor
dec
and
je
or
inc
mov
xlat
outsl
das
lcall
lods
push
cmc
lock
fldt
rcll
xor
repz
faddl
rcr
fisubrl
fdivrl
lret
les
enter
add
inc
sub
sti
je
lods
or
cmpsl
test
jp
bound
data16
stos
sub
sbb
and
mov
shll
nop
stc
in
mov
shrl
mulb
cs
das
xor
push
push
mov
mov
rol
push
insl
aaa
and
jnp
add
es
mov
test
pop
stos
enter
aas
test
stc
into
dec
stos
int
jns
push
and
scas
cmpsl
lods
mov
lcall
movsb
xchg
push
ds
mov
mov
outsb
cld
mov
sub
cmpsl
pop
xor
fwait
add
roll
mov
cltd
mov
scas
cmpsb
xor
adc
and
repz
sti
cmp
and
scas
push
lret
xor
bound
fisubl
cmpsb
call
jmp
test
and
or
pop
inc
outsl
mov
mov
xchg
popa
les
sbb
aam
jmp
bswap
daa
out
test
mov
and
not
xchg
xchg
push
pop
jp
insb
out
inc
xchg
jbe
stc
mov
inc
lret
in
roll
popf
bound
add
les
and
icebp
jg
fisttpll
loope
imul
cmp
mov
add
fildll
cmp
and
aaa
or
push
repz
repz
push
pop
mov
xlat
call
mov
mov
std
cmp
pushf
or
int3
testb
cld
or
lods
add
xor
cwtl
cmp
clc
push
xchg
adc
in
mov
dec
dec
sub
mov
fildl
or
sahf
cmp
push
push
hlt
cwtl
adc
ljmp
lods
dec
add
clc
xor
sbb
fisttpl
std
dec
push
loopne
adc
mov
jmp
int
dec
lea
sahf
enter
push
sbb
jmp
sub
push
lds
daa
jns
sub
lds
add
push
movsl
mov
sub
inc
push
sub
arpl
sub
dec
xchg
sbb
notb
xchg
faddl
shrl
addb
lods
xor
pop
aas
cs
xor
cli
or
xchg
xchg
and
repz
or
outsb
cs
orb
xor
inc
ljmp
subb
xchg
jb
mov
dec
jmp
xchg
jmp
push
js
mov
xchg
dec
lods
data16
mov
pop
lea
jb
cs
cmc
jg
in
add
jecxz
jmp
and
xchg
cmpb
cltd
jl
movsb
lock
loop
sub
cmp
push
pusha
aas
inc
jo
std
xchg
sbb
inc
jmp
outsb
or
mov
add
jmp
pop
xchg
or
jae
mov
or
xchg
dec
inc
cmpsl
dec
aad
mov
push
dec
adcb
xchg
pop
in
xchg
sbb
sbb
sub
sbb
xor
push
rcrb
lods
ss
cli
js,pt
xchg
sbb
mov
or
sub
rorl
and
dec
add
ljmp
xchg
xor
jecxz
sub
xor
es
dec
mov
sub
fbld
xchg
call
es
hlt
int
or
scas
incb
dec
pushf
pop
mov
cmp
pop
sub
sbb
insb
rcrl
int
aaa
mov
and
cmp
mov
and
clc
dec
cltd
in
sbb
scas
lret
push
pop
or
dec
rcr
out
xor
lods
jnp
xchg
lahf
mov
dec
imul
repz
rcr
pushf
ljmp
xchg
cmp
or
pop
mov
fmuls
ret
xlat
push
lret
enter
les
inc
mov
adc
daa
aas
cwtl
or
sub
fwait
cmp
cmp
or
in
lods
repnz
sub
mov
sbb
mov
jecxz
jecxz
mov
adc
adc
aaa
xor
adc
fdivrp
ret
pop
bound
jp
iret
popf
push
outsb
mov
push
in
inc
lcall
notb
mov
icebp
fstpt
and
sbb
pop
scas
dec
insl
test
gs
shr
scas
or
mov
or
jne
jns
in
and
adc
mov
mov
adc
mov
in
lds
cwtl
movsl
dec
pushf
shll
dec
clc
xor
adc
in
add
movsl
data16
cmovle
shl
sub
stos
push
xor
rclb
bound
and
jo
jno
insb
sbb
in
xlat
dec
incl
cmp
cmp
out
cli
imul
xchg
jne
in
sbb
dec
clc
add
cmp
aaa
or
sbb
dec
push
sub
adc
xchg
js
xor
push
push
test
cmp
lret
ja
ss
jg
sub
jg
push
ret
in
cmp
popf
mov
mov
inc
test
add
jecxz
test
mov
sub
mov
fisubrs
xlat
add
xchg
loop
iret
ret
and
mov
pop
cmp
cltd
cmp
cmp
jmp
or
daa
or
or
cmp
and
sub
mov
outsl
mov
push
xor
insb
fcomps
cmpsb
andb
leave
dec
mov
mov
mov
scas
or
dec
inc
repnz
repz
popf
jne
call
add
leave
das
or
cmp
mov
in
into
xchg
xor
in
lcall
mov
jecxz
mov
mov
dec
fnstsw
loope
cmp
test
cs
push
shrb
inc
mov
subl
or
xchg
dec
mov
js
subl
in
inc
repnz
dec
enter
jle
mov
repz
xchg
sbb
stos
outsl
xchg
in
xor
fisubs
lods
inc
into
aad
fnstenv
mov
mov
push
cmp
mov
cmpb
divl
lds
mov
push
dec
daa
xlat
or
xchg
loop
push
in
mov
or
out
push
pop
cmp
daa
xor
jl
fs
dec
or
arpl
jno
rcr
sbbb
in
inc
pop
inc
movsl
in
movsl
movsb
dec
outsl
ljmp
fs
mov
clc
clc
push
ja
cs
mov
pop
aam
dec
cmp
dec
les
addr16
ret
jmp
add
sbb
xor
ja
mov
inc
insl
scas
sub
mov
add
gs
add
fchs
jnp
aad
mov
testb
es
decb
aad
neg
daa
pop
fs
inc
and
cltd
in
aam
mov
dec
or
jecxz
push
pushf
cmc
aam
or
ss
iret
test
arpl
das
insl
fsub
mov
hlt
cmp
fnsave
sub
sub
pushf
and
cmc
xchg
and
daa
mov
push
mov
push
ret
fwait
rcl
sbb
adc
mov
cld
xor
inc
or
ja
test
xor
mov
aaa
xchg
mov
and
sbb
in
int3
pop
dec
mov
or
lahf
mov
jp
movsb
sarb
jle,pn
das
dec
test
std
iret
mov
or
push
scas
fwait
xchg
pop
inc
dec
cmp
pop
adc
cltd
push
int3
imul
dec
lret
fcmovb
mov
lods
mov
ss
lods
into
out
cld
cmpsb
dec
mov
mov
je
test
mov
clc
push
lret
bound
call
sbb
inc
ds
sub
pushf
sub
dec
inc
in
mov
test
loope
push
xor
daa
adc
mov
xor
mov
call
roll
stc
mov
pushf
cld
mov
add
dec
rorb
outsb
out
frstor
pop
movsl
jecxz
int
call
enter
hlt
rcll
jmp
xor
xor
pop
fcomps
cwtl
call
adc
ljmp
cmp
jmp
jp
mov
out
dec
lret
push
scas
je
push
xchg
and
test
and
push
pushf
mov
scas
lock
shrb
mov
push
xchg
xchg
leave
das
mov
xor
adc
into
shlb
jmp
dec
cmc
jp
cltd
mov
xor
jns
mov
into
mov
sbb
test
fcomps
pop
enter
rclb
or
xorl
aam
mov
and
sbb
and
jmp
sbb
or
sbb
push
jae
ret
aas
js
xchg
stos
loope
mov
lret
call
ja
cld
mov
in
repnz
mov
sbb
cmp
cmpb
js
mov
hlt
add
loop
adc
outsb
das
sbb
in
and
sbb
ret
pop
gs
mov
and
scas
int3
push
shlb
popf
push
jo
adc
jmp
sti
ret
jle
ret
and
popa
cld
inc
data16
into
shrl
daa
int3
push
lods
sbb
mov
dec
in
lahf
xchg
adc
or
mov
sub
jno
ss
pop
xor
shr
out
int
dec
inc
fsubrl
mov
sbb
cmp
pushf
into
mov
sub
dec
insl
rcll
inc
mov
into
filds
stos
cwtl
pop
sarb
rol
cmp
mov
pop
xchg
aam
hlt
xchg
sub
daa
in
and
mov
jbe
xor
leave
push
sub
dec
movsl
std
lods
pusha
push
inc
aaa
mov
in
mov
jbe
cmp
add
inc
popa
sahf
add
repz
jecxz
lret
inc
les
sbb
add
mov
add
dec
pop
outsb
mov
shrl
sbb
mov
rcrb
lahf
pop
fisttps
push
ljmp
mov
ljmp
dec
roll
shlb
sub
nop
out
xor
dec
clc
add
mov
mov
mov
mov
scas
fdivrp
jmp
repz
stc
mov
idivb
aam
pop
pop
call
mov
out
cmp
jbe
out
adc
dec
std
pop
add
movsl
xchg
es
jge
adc
mov
xchg
push
jae
jne
xchg
push
fadds
js
daa
add
jns
fidivl
into
in
pop
mov
out
inc
push
xchg
push
mov
push
into
cli
movsl
shll
loop
mov
and
mov
aam
ljmp
repnz
mov
mov
aad
cmp
mov
js
std
lods
adc
push
jp
jg
jp
cmp
pop
push
lods
cli
cli
adc
or
jge
xchg
fmulp
test
and
scas
lea
clc
sub
pop
jp
scas
jbe
mov
xchg
mov
ljmp
mov
test
mov
jp
mov
ss
rorl
mov
sub
push
cwtl
jl
test
rol
pop
xchg
cld
or
adc
fcmovne
orl
out
push
cmp
in
push
in
inc
and
stos
cmp
mov
sub
sbb
pop
jge
push
push
mov
sbb
xchg
roll
or
add
push
mov
xchg
bound
xchg
mov
stos
scas
ljmp
in
clc
insb
adc
or
mov
inc
jo
pop
call
fildll
and
xor
fwait
adc
fcomip
jo
popf
das
outsb
repz
sbb
xchg
push
mov
test
imul
js,pt
scas
mov
push
jp
incl
lcall
loopne
mov
hlt
pop
movsl
dec
scas
clc
mov
sub
xchg
lret
mov
xchg
sbb
dec
mov
les
daa
icebp
jo
add
or
dec
fwait
jg
mov
cmp
pop
push
adcb
aas
adc
test
rcr
push
lret
or
jne
cli
js
mov
dec
mov
shll
rol
jne
mov
xchg
push
jb
loopne
pop
inc
adc
sub
jnp
insb
pop
mov
movsb
test
mov
insb
cs
enter
outsl
jae
das
inc
add
mov
lea
adc
das
bound
pop
pop
divl
leave
pop
ss
enter
add
jmp
fisubs
add
push
cltd
lds
cmpsb
cmp
jg
test
daa
adc
xchg
loop
jb
out
inc
sahf
popa
sbb
mul
in
cmc
push
mov
dec
xorl
mov
std
dec
sbb
pop
test
jmp
popa
push
mov
scas
nopl
mov
jecxz
sbb
mov
dec
popf
sbb
inc
dec
adc
push
gs
mov
mov
not
xchg
and
cmp
imull
sbb
subl
addb
test
xchg
or
cs
push
cmc
ja
iret
pusha
xchg
test
mov
dec
mov
frndint
imul
imul
mov
pop
jns
jle
sub
pop
jae
push
dec
jne
xor
push
inc
pop
jecxz
stc
mov
pop
dec
test
or
jns
mov
dec
in
enter
xchg
popf
cmp
aaa
push
bound
and
push
mov
push
test
notl
and
xor
sub
mov
scas
inc
sub
mov
jne
int3
shl
pushf
xchg
sahf
insb
je
les
fcomi
dec
mov
lret
jbe
add
cmpsb
cmp
fsts
js
cld
lahf
idivl
pop
jmp
mulb
rcll
aam
pop
imulb
scas
mul
xchg
bound
xor
jle
fucomp
xchg
mov
je
idivb
divb
fcomps
jg
cmc
hlt
insl
cltd
bound
sub
lret
lea
insl
jb,pt
mov
lock
test
xchg
sbb
rcrl
push
movsl
aam
pop
mov
popf
idivb
mov
dec
aaa
mov
push
inc
dec
jnp
push
or
adc
out
mov
xlat
and
sub
mov
ret
dec
ja
cltd
adc
mov
repz
test
add
loope
stos
test
dec
outsb
out
es
inc
jp
mov
mov
std
push
test
mov
jae
lds
arpl
jb
cmpl
inc
int
inc
scas
and
pop
call
pop
xchg
addb
jo
ret
xor
pushf
int3
xor
sub
jecxz
sahf
cli
jno
test
pop
mov
xor
fwait
jae
ret
adc
jbe
xchg
mov
push
cs
aam
cwtl
addl
push
push
sub
stos
insl
fwait
push
pusha
push
rcll
imul
or
sahf
jge
pop
xchg
fisubl
cltd
pop
jmp
fstps
push
mov
xor
ja
scas
sbb
or
push
xor
fistpl
sahf
inc
push
mov
mov
lea
add
push
xchg
push
insl
bound
push
sahf
les
cmp
icebp
cmp
or
xor
sub
rcl
cmpsl
insl
sbb
les
xchg
push
or
jne
xchg
jmp
lahf
inc
dec
dec
cmp
jp
and
jnp
push
aaa
mov
push
dec
adc
mov
mov
xchg
adc
sbbb
fs
add
sbb
movsb
xor
shrb
fwait
pushf
mov
inc
sub
xor
fadd
pushf
push
lret
mov
cwtl
sbb
xchg
jmp
sti
repnz
push
aad
or
mov
lods
imul
dec
sbb
sub
pusha
test
jp
pop
repnz
fidivs
shr
inc
cmc
stos
enter
cmp
push
dec
andb
clc
addr16
call
pop
inc
mov
sbb
cli
and
pusha
xchg
popf
inc
test
mov
inc
int3
pushf
js
dec
xchg
scas
out
xlat
push
lea
xchg
pop
dec
subb
in
orl
xor
push
sbb
insl
popf
inc
pop
cmp
leave
loope
push
add
mov
jmp
sub
sbb
orl
cmc
dec
shll
or
pop
inc
cmp
les
inc
sbb
mov
jg
das
xchg
into
ljmp
and
fs
rcrb
fnsave
fwait
inc
mov
lret
jp
je
mov
mov
hlt
std
clc
mov
test
insb
xchg
lock
pop
fcomip
sub
loopne
in
pusha
cmp
lea
sub
push
mov
repz
fs
imul
mov
std
dec
jbe
call
lods
mov
or
sti
sub
lcall
insb
cmp
lcall
test
in
pop
ljmp
mov
rcrl
lret
xchg
andl
ljmp
pushf
imul
ror
adc
imul
int3
test
mov
jnp
orb
icebp
jbe
jp
mov
clc
mov
es
jl
or
out
mov
cltd
leave
fldt
int
addr16
cmp
inc
lods
sarl
adcb
mov
or
add
sub
stc
mov
out
rsm
jle
cltd
addr16
cmp
pop
data16
jb
cmp
test
rcrl
jp
adc
mov
sarl
mov
clc
into
mov
je
xchg
jbe
adc
mov
xor
enter
jmp
int3
adc
inc
outsl
sub
call
bound
fnstcw
js
dec
pop
bound
rcrl
cld
inc
ljmp
fcomi
cmp
aas
push
pop
nop
in
mov
add
cmp
sub
xchg
popa
arpl
in
ret
rolb
sti
test
sub
or
subl
xchg
dec
push
icebp
shlb
fsubrl
mov
les
pop
sub
call
fwait
push
adc
xchg
addr16
jno
pop
and
sub
jo
enter
mov
stos
stos
push
fimull
ret
dec
or
mov
xchg
ret
stos
mov
push
push
imul
inc
test
loop
mov
mov
mov
stos
push
xchg
adc
xor
bound
or
and
ficompl
stc
fisubrs
jmp
mov
jne
and
xor
dec
sti
sub
rclb
xor
popf
xor
nop
mov
sub
push
stos
iret
or
scas
lcall
dec
shl
jae
add
out
mov
inc
mov
jo
push
jge
jmp
mov
into
push
cwtl
inc
fwait
lahf
dec
jb
push
dec
lret
xchg
inc
jg
add
je
xchg
xor
mov
dec
mov
xor
jecxz
lret
addr16
xor
lret
std
push
insl
xchg
pop
je
sub
sub
jb
pop
add
jo
rcrl
rorb
lods
dec
sbb
stos
pop
imul
cmpl
jb
add
adc
pop
popa
je
sarb
ds
adc
xor
pop
xchg
adc
mov
cmpsb
orl
sub
xor
jl
mov
dec
icebp
in
jae
out
pop
js
ret
lahf
pushf
imul
sahf
jne
mov
ficoml
mov
fstl
adc
in
push
mov
inc
mov
mov
out
adc
cmc
sbb
icebp
push
testl
rolb
idivb
ficoml
imul
xor
inc
mov
je
xor
push
and
xchg
mov
cli
cmp
dec
rclb
orl
ret
inc
cmpsb
bound
xlat
arpl
shll
addl
mov
cmpsb
mov
adc
enter
pop
jle
ljmp
or
in
sub
rorl
push
in
scas
xor
or
mov
hlt
in
xchg
mov
addb
sar
cmp
lock
dec
mov
fs
mov
test
push
sub
cmp
adc
mov
or
or
fdivl
cltd
pop
or
sbb
sahf
lods
cld
inc
movsl
lods
pop
dec
jns
pop
stos
jae
cmp
mov
cld
rcll
cmp
hlt
arpl
insl
mov
aaa
xchg
add
int3
inc
cmpsb
mov
push
xor
xor
sub
test
sbb
imul
mov
pop
test
aaa
sbb
jmp
push
sbb
enter
js
fldt
add
insl
addl
shlb
popf
cltd
cmp
and
push
leave
push
cmp
out
and
into
fsts
ret
push
jmp
jno
rolb
mov
cli
std
arpl
inc
notb
inc
inc
in
push
rorl
ljmp
cmp
xorb
jbe
xchg
adc
outsb
cmpsb
clc
cmp
ret
movl
ds
and
pop
and
or
and
mov
leave
mov
jae
jno
das
loop
mov
ret
jmp
or
jnp
shll
mov
xchg
gs
lods
add
jle
leave
imul
push
inc
hlt
pop
inc
or
jmp
mov
insb
ljmp
add
adc
icebp
xchg
lcall
pusha
pop
scas
iret
push
jne
jae
dec
push
jl
fsubrl
push
lret
mov
dec
xor
pop
inc
dec
mov
xorb
mov
jo
lock
js
dec
sub
out
sarl
jo
xchg
or
fmull
jle
xchg
cmp
cmp
call
jecxz
jo
mov
imul
or
dec
movsl
test
fists
mov
insl
cmpl
sub
cwtl
mov
gs
movsb
outsl
dec
iret
xlat
push
xchg
addr16
mov
stc
lds
dec
fwait
mov
lods
test
fucom
out
nop
into
xchg
push
andnps
cli
shll
daa
lcall
loopne
mov
sbb
stos
ret
push
mov
cmp
je
fwait
xchg
jl
cld
xor
cwtl
andb
and
mov
jb
mov
pop
dec
pop
es
sbb
rcl
test
jl
add
fnstsw
stos
hlt
and
call
adc
arpl
outsb
push
dec
lods
lcall
mov
iret
aaa
pop
daa
xor
sub
add
mov
and
test
clc
push
xchg
or
jmp
and
iret
jb
sbb
mov
int
or
rcr
filds
out
std
dec
movl
dec
xchg
fs
and
gs
fcmovbe
andb
jne
dec
bound
in
cmp
cmpsl
push
sub
push
jg
orl
jb
add
mov
ljmp
idiv
pop
add
push
int3
jae
cmpsl
jl
jno
sub
push
xor
push
jmp
addr16
into
test
inc
fs
repz
jne
push
xchg
stc
add
arpl
push
pop
push
sbb
andb
popa
cmp
mov
loope
ror
or
ljmp
dec
jl
mov
sub
les
mov
mov
push
xchg
pop
inc
pop
icebp
pushf
push
bound
xchg
push
adc
or
sub
popa
int
adc
mov
push
xchg
imul
inc
into
stos
addr16
std
pop
mov
fnstcw
loop
xor
push
mov
shrb
sub
pop
sbb
mov
pop
push
fimuls
cmp
cmpsb
dec
lahf
addr16
mov
inc
imul
scas
mov
pop
jnp
repnz
movsl
jge
gs
xor
in
insl
add
xchg
mov
ret
xor
xchg
repz
sbb
jne
xor
push
test
jo
mov
imul
jecxz
pusha
mov
subl
pushf
add
in
ss
sahf
add
lods
push
test
mov
inc
push
out
inc
pop
push
push
scas
add
add
std
mov
in
xchg
sub
pop
sub
adcb
pop
sub
xchg
in
mov
call
pop
jmp
jge
shll
jmp
daa
fisttpl
das
int3
jo
setae
call
jecxz
jl
jne
dec
adc
jb
in
pushf
mov
repz
xchg
inc
out
pop
mov
test
shrb
cmc
jl
cmp
mov
data16
sbb
iret
lret
xor
push
in
adc
or
in
test
rcl
out
push
iret
fwait
shrl
test
push
jg
vmovhps
dec
rcll
pop
fdivl
mov
mov
jge
jg
in
fdiv
push
cmp
mov
mov
pop
stos
das
sub
lock
push
jne
leave
cmp
addr16
leave
addr16
xchg
adc
out
arpl
adc
sbb
ljmp
inc
jb
sbb
add
fwait
aam
push
jae
xchg
test
loope
push
inc
test
push
inc
aam
mov
fnstenv
and
mov
jno
pop
and
fstl
sub
or
cmp
scas
cmp
fs
out
stos
ja
jl
mov
shlb
fwait
test
cmpsb
loope
xor
hlt
cwtl
rorb
mov
stos
shrb
jmp
dec
jnp
sbb
xchg
std
mov
cmovns
shll
cmp
push
stos
sbb
mov
out
mov
ss
xchg
and
int3
cmp
xor
inc
and
push
add
fists
mov
fldt
das
popl
jle
mov
and
loope
mov
dec
movsb
in
pop
aas
fnstenv
xchg
mov
test
cmpsb
popf
dec
xchg
ret
stc
fbstp
leave
add
jmp
inc
jnp
add
jae
cmpsl
rcll
adc
loope
xchg
scas
sub
test
insl
shll
lds
int
in
mov
psubq
mov
mov
into
in
pop
sbb
cmp
fnstenv
dec
fwait
adc
jnp
add
push
stc
jne
cwtl
xor
adc
in
dec
cltd
cmp
movsl
cmpb
std
stc
lcall
fstpl
fwait
push
push
inc
push
lods
ret
jp
iret
cmpl
mov
add
jg
pop
and
dec
mov
iret
jb
scas
imul
jb
iret
ja
in
int
in
or
sub
shll
push
cmp
mov
dec
push
in
mov
xchg
inc
push
mov
cmc
jo
push
movsl
rcl
pop
pop
jbe
inc
fldenv
mov
std
iret
stc
or
iret
outsl
add
pop
cmpsb
cli
inc
jb
icebp
and
test
movsb
imul
or
dec
enter
cmp
add
ret
stos
test
loope
sahf
gs
sub
cmp
mov
jmp
out
jbe
sub
fs
mov
mov
dec
scas
outsl
test
mov
repnz
jae
sbb
cwtl
js
shrb
in
mov
int
push
cmp
scas
jbe
mov
mov
cmp
dec
shll
pop
bndstx
mov
xor
outsl
dec
pop
int3
outsl
add
test
dec
fdivrp
icebp
and
mov
nop
xchg
push
mov
out
lret
mov
in
mov
pop
lea
pop
lock
push
cmpb
mov
add
arpl
sub
xchg
popa
xchg
ret
mov
in
lds
addr16
push
mov
push
jecxz
jbe
aam
inc
and
ret
fcomi
mov
sahf
enter
ret
inc
sbb
rol
sub
push
or
idiv
pop
mov
nop
jmp
push
fdivrp
mov
pushf
jb
cld
mov
pop
and
push
sbb
bound
aad
add
cmp
xchg
xor
in
insl
icebp
xor
and
adc
add
ja
pop
xor
xchg
adc
fiadds
loope
adcb
jo
inc
dec
das
aaa
xchg
push
push
sub
sub
jg
sbb
cmp
pusha
jbe
jp
mov
shlb
or
dec
inc
jmp
xchg
mov
jp
test
push
jp
jecxz
mov
push
jge
or
idivl
sub
jne
bound
dec
pop
addb
hlt
rorb
lahf
add
test
dec
in
insb
mov
outsl
das
add
dec
rolb
adc
insb
cli
jle
xchg
test
jae
mov
push
lea
lret
movsl
adc
dec
fdivs
xorl
push
cmp
mov
xchg
inc
cmp
sbb
out
jbe
rcr
push
jbe
cmp
lods
mov
push
push
bound
pop
xchg
jge
scas
and
subb
pop
sub
rcrl
orb
cli
xchg
jl
mov
xor
aam
loopne
scas
xchg
cmp
push
stos
and
sub
mov
movsb
mov
std
add
sbb
fwait
popf
push
xor
sub
jmp
and
shlb
pop
mov
jno
xor
mov
jl
fnsave
jb
cltd
dec
stc
xchg
cs
inc
ret
mov
pop
xor
and
into
loopne
pushf
lods
push
scas
stos
mov
xlat
sub
add
testb
int
or
push
inc
ss
lcall
and
mov
mov
mov
and
test
dec
jle
icebp
daa
in
sub
pop
dec
or
notb
push
adc
push
lea
mov
je
cmc
imul
pop
push
jno
bswap
repnz
mov
insl
fistpl
sub
mov
cwtl
or
xchg
push
jnp
cmp
sub
push
cmp
int
mov
pusha
xchg
out
in
mov
scas
in
mov
rcll
iret
aaa
fnstcw
jbe
cmc
stc
jo
xchg
insb
aas
jg
mov
aaa
or
aam
mov
fcmovu
adc
imul
gs
loope
and
fbstp
fmull
or
bound
lret
cmp
mov
mov
push
jp
imul
or
xchg
stc
xchg
sbb
mov
mov
add
mov
shll
xchg
in
xchg
inc
sbb
push
loop
push
cmp
outsl
scas
subl
insb
add
cs
add
fwait
sti
xchg
inc
sub
dec
ljmp
incb
cmp
push
push
sub
orb
push
mov
lret
and
xchg
lods
xchg
sbb
push
sub
cmpsb
or
sahf
adc
inc
addb
jmp
push
add
or
lods
das
add
xchg
pop
push
jge
cmp
repnz
pop
mov
mov
sbb
mov
pop
clts
inc
xor
ret
pop
cwtl
adc
rolb
and
pop
aam
jge
mov
mov
mov
outsb
test
cmpsb
add
in
adc
mov
leave
loop
cmp
into
mov
fdivr
test
mov
push
mul
insb
mov
ret
add
dec
stc
out
or
push
pop
xchg
nop
inc
push
push
das
sbb
xchg
mov
add
push
or
mov
repnz
js
sub
pop
aam
in
jbe
xchg
push
mov
std
movsb
mov
pop
xor
repnz
addr16
bound
cmpxchg
mov
leave
jmp
stos
mov
inc
or
inc
cmp
nop
scas
outsl
sub
aaa
mov
xor
xchg
mov
mov
aas
sbb
pop
in
or
push
sub
xchg
adc
push
out
inc
dec
test
div
adc
test
jne
xlat
pop
shll
pop
dec
cmp
xor
iret
movq
sub
fisttpll
pop
xor
add
jns
in
dec
mov
sbb
mov
jo
jl
bound
adc
out
sub
loopne
outsl
fildll
sbb
fadd
pop
sub
adc
add
rolb
inc
and
std
dec
cs
pop
fistpll
push
icebp
mov
add
out
mov
insb
add
shl
mov
cmp
ja
push
lret
les
sub
mov
pop
mov
dec
fdivs
in
jne
add
shr
test
jge
arpl
leave
inc
nop
inc
jae
sbb
mov
std
popf
adc
jl
push
push
test
push
mov
je
adc
cmp
push
imull
and
push
jb
ret
arpl
je
and
out
and
mov
shll
out
push
sbb
mov
loop
cmpsl
push
push
out
add
mov
mov
inc
and
fmull
shr
repnz
mov
mov
add
sahf
hlt
pop
cli
mov
push
in
shrl
cmpsb
idivb
xor
and
repz
loopne
jecxz
mov
dec
out
jno
in
rclb
test
scas
gs
dec
test
push
or
pusha
xchg
pop
add
lcall
jmp
outsb
les
push
push
dec
lret
mov
sub
pop
cmp
xchg
mov
pop
jbe
pusha
mov
and
mov
cld
les
sbb
in
push
popa
or
add
xor
rcrb
push
mov
xchg
les
xor
je
insl
dec
pop
add
push
jo
sbb
std
mov
pusha
or
mov
cmpsl
mov
es
mov
xor
push
or
adcl
call
xchg
jg
pusha
pop
sbb
rcl
cmp
js
mov
adcb
pop
into
add
ret
js
ja
inc
mov
cli
cmp
popa
adc
pop
pop
into
ss
rcl
outsl
lahf
jo
dec
jne
ret
mov
das
mov
das
pop
ror
add
mov
mov
popf
ret
das
dec
push
inc
cmp
aam
bound
jg
mov
mov
jg
cmp
jmp
xchg
or
cs
and
xchg
sbb
test
test
scas
popf
fcom
imul
fdivp
mov
push
lods
imul
sti
mov
lods
pushf
mov
jmp
in
xor
gs
clc
add
fwait
xchg
add
jle
jno
xchg
jl
lret
mov
daa
mov
cmpsl
data16
jae
pop
int
imul
in
out
sbb
jb
rcrl
ja
xchg
adc
pop
mov
or
mov
gs
ret
mov
or
ss
lahf
ret
out
pop
stos
pop
mov
xchg
fnstcw
lcall
pop
and
mov
push
xchg
ja
mov
fbld
or
daa
mov
push
fisttps
sub
in
adc
mulb
sub
dec
insl
leave
add
mov
jg
cmpsb
lret
cltd
add
int3
pop
sbb
mov
stos
adc
xchg
stc
fcoml
aas
mov
in
sbb
jb
push
mov
dec
xchg
mov
adc
das
aas
ds
clc
inc
mov
test
test
and
mov
leave
js
push
test
xor
or
js
cmp
test
sbb
mov
es
sub
js
jg
imul
xor
push
sbb
pusha
mov
cmp
dec
push
in
out
mov
and
mov
lods
cmp
push
pop
fwait
mov
add
lret
adc
mov
js
in
adc
xchg
mov
test
imul
daa
cmc
vpaddq
outsl
cltd
cmpsb
sahf
lret
add
ljmp
mov
dec
sub
sbb
or
sbbb
out
inc
adc
lea
pop
pusha
mov
pop
idiv
or
xor
xchg
sub
xchg
inc
xor
andb
dec
adc
inc
sub
inc
mov
add
imul
pop
mov
xor
ret
into
out
daa
or
xor
lret
test
rcrl
int
aam
aam
xlat
jns
in
fistpl
mov
icebp
pushw
sarl
stos
call
aad
mov
lea
inc
cltd
addr16
cmp
push
lds
jecxz
flds
mov
mov
paddd
sar
or
lock
stc
lock
test
cmp
loope
push
idivl
icebp
sub
loope
adc
adc
sub
mov
scas
scas
imul
imul
sahf
add
jge
mov
mov
daa
test
adc
pop
mov
into
divl
icebp
sbb
outsb
gs
inc
add
or
sbb
add
mov
pushf
test
push
dec
mov
xor
cmp
mov
sub
pop
cmp
cld
fucomi
adc
sti
mov
mov
dec
xchg
hlt
xchg
pop
xlat
out
adc
lds
nop
mov
stc
jne
cs
inc
mov
pop
pop
and
mov
sub
outsl
jo
mov
mov
not
out
xor
inc
xor
or
stos
and
dec
imul
imul
mov
pop
lods
adc
psadbw
in
and
mov
mov
mov
nop
xor
pop
leave
lds
in
mov
aaa
inc
rcrl
notl
add
or
xor
xchg
pushf
scas
add
xchg
adc
and
fdivs
into
mov
adc
inc
inc
xchg
cmp
push
cmp
fsubrl
divb
inc
sahf
adc
sbb
lret
aam
stos
mov
loope
fsubs
and
jge
sub
cwtl
les
cmp
pop
je
jnp
int3
in
ds
dec
lock
jl
mov
inc
ss
inc
loope
lret
mov
xorl
lock
es
pop
fwait
call
xchg
and
negb
dec
jg
sub
aad
imul
add
jb
ja
xchg
pop
mov
cmpsl
loop
mov
mov
mov
xor
jbe
mov
sbb
mov
into
jg
adc
cmpsl
xor
test
out
mov
ja
adc
imul
das
cmpsb
sbb
mov
in
pop
pop
mov
subb
loopne
mov
mov
jnp
les
jnp
notl
mov
scas
push
ret
mov
jle
loop
divb
ja
xor
cmp
loope
movsb
cmp
lods
mov
out
jne
in
xor
or
ds
mov
push
and
mov
in
add
adc
pushl
mov
ss
scas
testb
out
mov
mov
cltd
jl
stos
pusha
xchg
xor
test
pop
xorl
imul
push
stos
in
fcoml
and
adc
adc
pop
or
push
push
aam
pop
in
xchg
push
stc
rorl
loop
leave
jne
cmp
dec
push
imul
push
in
insl
xlat
pop
test
cmpl
sar
aaa
and
cltd
adc
stos
push
lret
out
cmp
inc
jg
stos
adc
cs
add
ljmp
lret
adc
out
adcb
gs
mov
or
and
mov
xchg
xor
sbb
loop
cs
gs
leave
jae
xchg
arpl
add
pusha
int
fstps
std
dec
lea
dec
jb
icebp
xor
push
das
jae
cld
push
mov
aaa
mov
cld
fsubrs
fcompl
dec
fmuls
mov
sahf
ret
fsubrl
gs
cli
adc
fnsave
outsl
in
cs
movsl
cmc
xor
add
cmpl
adc
addr16
or
lock
gs
je
aas
adc
xchg
inc
jp
add
inc
mov
jl
popa
jae
adc
sub
ret
aas
and
xor
or
sbb
insb
sub
lcall
cmpb
dec
push
push
mov
lods
stos
mov
push
shrl
add
call
add
jle
inc
sub
imul
cwtl
idivl
sub
mov
loopne
push
imulb
leave
rorb
nop
jmp
je
xchg
notb
sub
out
shr
dec
dec
or
jne
das
cmp
test
jbe
sbb
sbb
adc
lret
adc
add
cmp
and
pop
xor
shlb
ljmp
xchg
add
cld
xor
les
mov
scas
mov
les
pop
movsl
outsb
jb
and
lods
mov
push
mov
xchg
loopne
hlt
out
xor
cmp
mov
sub
clc
jl
loope
push
testl
imul
pop
dec
xor
and
shll
gs
xor
jecxz
ret
lock
and
jecxz
out
cmp
mov
dec
push
icebp
inc
add
sbbb
shll
int
xor
leave
incb
cli
js
jne
or
leave
sti
clc
push
stc
imull
cmp
inc
or
cld
mov
jne
ljmp
pop
ficoms
fildll
mov
jg
inc
mov
sbb
loope
mov
lret
mov
push
in
cmpsl
xor
jb
dec
cmc
sbb
cmp
in
ret
jae
jg
jg
pop
lds
mov
inc
xchg
aaa
fadds
pop
loop
das
notb
loope
adc
or
inc
mov
and
jb
sbb
sbb
inc
jp
clc
dec
add
inc
mov
cmp
pusha
inc
mov
popf
mov
mov
mov
pop
sbb
mov
sbb
jg
mov
adc
pop
sahf
shrl
or
or
into
rclb
cwtl
mov
insb
dec
sub
imul
mov
pop
jmp
rcl
test
push
jb
cs
jne
stc
in
jp
ss
adcb
add
vpcmpgtb
add
fiadds
pop
lods
sbb
es
dec
lret
add
push
lds
subb
sbb
push
outsb
jnp
jne
in
sub
push
lret
sub
test
popf
adc
fstl
or
mov
xchg
orl
add
scas
mov
sti
and
push
in
int
mov
jno
cmpsb
fdivrl
push
jae
or
loop
nop
mov
or
push
stos
fcmovne
pop
nop
cmp
adc
dec
or
inc
mov
out
xchg
pop
cli
xlat
mov
fimuls
ljmp
int
dec
ds
lahf
xor
lds
xor
push
pop
sub
cltd
shrl
jecxz
and
jno
cwtl
add
sbb
inc
sub
in
je
aas
jecxz
call
mov
mov
adc
mov
mov
adc
in
add
inc
jb
cs
mov
lods
add
mov
in
stc
push
xchg
jmp
orb
jecxz
xchg
add
ja
out
and
pop
sbb
xor
fildl
jns
mov
fwait
push
lea
lret
xor
das
cwtl
and
sub
pop
fldt
pop
fsubl
xchg
xchg
pop
cmp
cmp
adc
pop
mov
fldenv
or
mov
ss
inc
jns
scas
dec
imul
dec
or
movsb
movsl
jae
cmp
fnstenv
testl
decl
pushf
and
or
adc
xorl
arpl
add
or
js
cmp
jnp
repnz
data16
aas
jbe,pt
int
pushf
inc
fbstp
in
xchg
or
xchg
std
mov
aaa
xor
outsl
inc
outsl
cs
jns
adc
repnz
int
addb
ret
xchg
add
mov
popf
push
push
pop
inc
inc
pop
test
cltd
xor
outsl
fbstp
ret
mov
sbb
popa
fs
mov
mov
mov
loop
pop
cmp
lock
cmp
cmp
lret
adc
lcall
test
stos
movsl
sti
inc
pop
or
pop
and
xor
insb
push
or
sahf
inc
into
cmc
or
add
sub
rcll
jo
jmp
mov
test
lahf
xchg
cmp
repnz
pushf
xor
push
jge
mov
sub
push
test
sub
popa
pop
or
popa
cltd
inc
jbe
xchg
pop
and
xor
lret
jnp
pop
mov
mov
jmp
jecxz
xchg
mov
in
push
addb
mov
sbb
fs
mov
add
fwait
arpl
imul
push
movsb
inc
test
std
mov
cmp
insl
popa
xor
enter
in
adc
mov
mov
mov
fs
xor
shrl
jecxz
cmp
imul
jecxz
add
cltd
enter
pop
popa
pop
or
test
mov
out
mov
mov
jns
in
sti
add
inc
in
mov
or
bound
xchg
inc
repz
push
or
je
subb
jg
in
int
pushf
mov
mov
ds
or
sub
or
mov
xor
insl
xchg
popf
push
cmp
mov
repnz
adc
push
jecxz
leave
arpl
decl
and
shll
xor
ja
and
xor
push
aam
jne
add
fdiv
push
adc
dec
test
call
imul
out
test
pop
out
dec
std
inc
ds
mov
bound
mov
pop
pop
push
rcr
or
fstl
cli
push
pop
jg
adcb
push
test
dec
pop
mov
sti
and
lea
or
in
rcrl
cli
lds
xorl
mov
jle
push
cmp
xchg
in
fidivl
jno
add
out
out
sub
outsl
dec
fistpll
adc
sti
ds
clc
por
adcl
mov
and
xchg
inc
inc
mov
aas
jg
jae
mov
or
cwtl
jno
repz
mov
scas
push
mov
cmp
jl
ret
mov
xor
and
mov
jmp
xor
je
and
or
push
mov
ffreep
dec
shll
sub
sbb
add
outsl
adc
cmc
pop
ret
mov
inc
pop
icebp
daa
jb
pop
xchg
arpl
inc
shl
es
std
icebp
imul
cwtl
inc
or
loope
aam
outsb
cwtl
xchg
cmpsl
shlb
sarl
test
cmp
mov
iret
xlat
and
inc
data16
jne
jp
loop
jbe
mov
push
inc
adc
mov
dec
arpl
cmp
sub
sub
mov
or
sbb
lods
sahf
push
daa
xor
pop
repz
dec
mov
mov
les
jb
loop
stos
rcl
push
es
pushf
pop
fs
jns
cli
mov
inc
dec
xchg
adc
mov
sub
shrb
cmc
sub
ficompl
sahf
pop
mov
dec
mov
mov
fists
std
add
cmp
sbb
mov
cmp
inc
and
jg
stc
aas
add
das
and
xchg
push
and
xor
inc
mov
mov
jb
dec
cmp
push
popf
or
mov
outsl
inc
fldt
xchg
mov
inc
push
mov
dec
test
push
psrlq
cmp
jmp
movsb
mov
jmp
sbb
cmpsl
in
nop
arpl
mov
jae
lret
mov
clc
pushf
adc
enter
cmp
call
fmull
int
lahf
push
out
push
lcall
add
insl
shlb
insl
hlt
enter
fisttps
mov
push
mov
gs
popa
gs
mov
test
out
inc
testb
pop
fcompl
mov
xchg
inc
adc
lds
adc
sub
dec
pop
dec
jae
stos
xchg
mov
xchg
adc
jo
push
jle
adc
js
fs
and
sbb
iret
or
sub
jmp
mov
lcall
stos
xor
scas
dec
out
insb
jns
loope
adc
test
daa
call
cmpsb
xchg
es
pop
sarb
jbe
xchg
ljmp
sub
jmp
cli
orl
and
mov
push
andl
imul
out
ljmp
imulb
cld
cmp
jge
or
inc
dec
repz
inc
xchg
xchg
jno
popa
scas
mov
cmpsb
mov
dec
rorb
pop
and
rolb
adc
cli
cmpsb
jne
cmp
pop
les
mov
pop
fcoms
pop
divb
in
icebp
out
adc
jl
dec
mov
or
lock
orb
sub
hlt
jmp
lock
mov
pop
xchg
insb
add
add
les
push
inc
in
mov
cmp
sbbb
push
and
sub
popf
sbb
push
sbb
leave
inc
popa
push
ror
inc
push
inc
adc
iret
insb
roll
sbb
out
loope
push
push
arpl
mov
lods
int
and
pusha
adc
pop
lret
fwait
leave
nop
push
outsl
mov
push
or
add
cmp
pop
call
dec
dec
push
push
xor
pop
test
popl
daa
inc
push
mov
imul
and
repnz
inc
mov
mov
mov
shlb
jo
aam
push
aam
jp
or
sbb
nop
arpl
std
aas
xor
jp
mov
daa
idivb
add
push
psrlw
dec
pop
dec
lret
mov
pop
bound
lock
xchg
outsl
jns
xchg
js
outsl
inc
fnstsw
mov
jp
dec
sub
pop
xor
mov
mov
sbb
or
inc
fstpt
xorl
cld
sub
inc
cmp
add
mov
sub
incb
push
sti
mov
jmp
jle
ss
inc
bndstx
or
push
repnz
xor
pop
pop
fwait
outsb
xchg
call
int
inc
lea
and
sbbl
pop
add
push
sub
movsb
xchg
test
test
cmpsb
pop
push
push
popf
test
call
clc
fs
sbb
insb
shr
pop
sbb
mov
insl
iret
push
push
jmp
pop
lahf
add
push
inc
mov
data16
loope
lods
mov
or
call
xchg
or
mov
xor
mov
inc
xchg
mov
xchg
mov
add
mov
sub
mov
ret
xchg
pop
adc
inc
sbb
and
jmp
int
dec
aam
dec
mov
test
inc
aaa
inc
cmp
stc
aad
mov
xchg
pushf
stc
xchg
arpl
subps
add
pop
jo
icebp
stc
cmpsb
loopne
push
movsl
sahf
popf
pop
cld
jno
pusha
mov
jle
sub
insl
add
inc
dec
iret
xor
sub
in
aaa
lods
ljmp
addb
jns
pushf
bound
or
pop
and
mov
mov
fcmovnb
cmp
pop
inc
dec
test
in
xchg
cmpsb
out
add
popa
in
adc
rcrb
daa
lahf
mov
xchg
lcall
mov
les
call
inc
subb
push
fcoms
xchg
inc
jbe
jne
add
inc
and
push
sti
outsb
dec
out
jmp
mull
push
sbb
and
inc
icebp
cmp
jmp
aas
inc
inc
ja
jb
js
aaa
setle
andb
and
cli
sub
ja
lret
out
aas
bound
mov
outsl
pop
xchg
fdivrl
outsl
and
imul
adc
aas
adc
xchg
push
mov
jnp
cmp
xchg
loopne
push
daa
dec
push
roll
cmp
scas
ret
scas
ds
pushf
insb
push
inc
cmc
fisttpll
cmp
pop
hlt
orl
subl
ljmp
stos
shl
add
aam
jl
jbe
test
xchg
or
mov
dec
sbb
cmp
mov
repz
sti
ja
std
or
adc
ja
sbbb
roll
inc
aas
mov
in
ret
inc
add
pop
test
cld
mov
insb
andl
mov
fwait
pop
aam
pusha
cwtl
lcall
daa
adc
outsb
push
jo
ficoml
mov
mov
aad
mov
push
or
popa
cmpsb
ret
cmp
out
fstpt
push
int
mov
xor
sti
xor
xor
icebp
movsl
shrl
dec
ficoml
jg
repz
test
sub
adc
shrb
push
jno
jmp
in
pop
jp
jle
into
adc
test
xlat
scas
mov
cmpsl
dec
ss
shlb
mov
xor
xchg
sti
into
inc
subb
iret
shll
cld
repz
aad
les
add
shll
pop
jbe
xchg
xor
sarl
cmc
jns
add
ds
popa
das
inc
xchg
push
sub
sub
mov
into
aad
pop
dec
mov
cwtl
mov
mov
push
jae
adc
adcl
std
movsb
mov
fldcw
lods
sub
imul
xlat
shll
and
imul
incb
aas
jmp
inc
sub
imul
rcll
mov
fstps
jne
outsl
das
popf
aam
dec
mov
and
and
add
mov
fldt
call
fisttpl
or
jmp
out
test
subl
test
fnstcw
in
movsl
dec
test
js
and
xchg
xchg
xchg
dec
mov
shl
ror
cmp
je
in
rorl
adc
pusha
cmp
pop
in
fld
popa
negb
sub
adc
lahf
or
sbb
dec
mov
lret
cli
add
lret
jae
arpl
loop
clc
xchg
std
lahf
negb
pop
ret
pop
pop
lret
and
mov
fwait
sbb
addb
dec
pop
in
in
mov
mov
jmp
mov
shlb
dec
jb
leave
sbb
popf
clc
shlb
and
call
inc
push
stos
mov
pop
inc
fldcw
jecxz
lods
lods
jne
pop
pop
push
jno
jecxz
push
push
push
inc
jnp
pop
jmp
xchg
lods
ffree
nop
cmpb
mov
mov
mov
std
jmp
cmc
out
andb
pop
stos
dec
push
dec
jp
ret
mov
and
je
add
xlat
add
decb
adc
sahf
jbe
pop
cmp
jne
lret
ret
mov
loopne
cmpsb
xor
leave
adc
cmp
int3
jecxz
sub
mov
sub
inc
mov
pop
int3
add
inc
mov
outsl
int3
add
push
push
out
jns
pop
adc
or
add
pop
rorw
out
rolb
out
mov
cmp
or
hlt
and
mov
pop
mov
xchg
int3
mov
and
fwait
mov
dec
rorb
ds
cmp
xor
push
mov
jae
jl
fwait
add
mov
mov
sub
out
adc
pop
repz
mov
es
pop
insl
adc
jecxz
pushw
adc
sbb
aam
or
out
lahf
out
xlat
daa
in
in
xchg
pop
nopl
or
gs
mov
sub
aas
gs
cmp
aaa
pop
inc
pop
repz
cmp
scas
daa
les
pushf
sub
xchg
mov
je
and
dec
imul
arpl
clc
or
jl
je
xor
lret
fwait
mov
jmp
aam
imul
cld
cmpsl
cmp
sbb
shll
pop
pop
sub
shl
inc
adc
andl
movsb
xlat
std
mov
mov
jp
xchg
jno
inc
push
repz
aam
fcomip
inc
lahf
movb
in
sahf
xlat
andl
mov
add
ljmp
js
popf
and
cmp
xchg
aam
push
xchg
scas
pop
or
dec
gs
push
push
nop
jecxz
nop
and
and
or
pop
test
aaa
sub
sub
xlat
push
push
xchg
jl
or
sar
xchg
adc
les
outsl
xchg
jecxz
lock
outsb
insl
orb
xchg
andb
call
mov
add
mov
pop
repz
push
xchg
fnstcw
insl
pop
dec
hlt
mov
aad
cmp
add
jbe
sub
add
movlps
inc
jle
inc
and
jmp
in
push
scas
push
and
jb
pop
sarb
lcall
dec
push
xchg
xor
in
lahf
sti
adc
cmpsb
fstps
jae
pop
add
sahf
dec
dec
cmc
imul
jmp
shr
cmp
xor
loop
and
mov
data16
fldt
fimuls
into
lock
mov
imul
aad
fcompl
scas
clc
clc
mov
push
roll
fadds
ret
jns
push
cltd
in
mov
stc
mov
mov
das
adc
arpl
and
fcomps
or
inc
sub
lods
push
aas
xchg
xor
ja
xchg
mov
inc
movsl
or
lock
push
xor
daa
cli
addr16
out
popf
lods
jno
fildll
fidivrl
ja
fst
xchg
test
pop
test
repz
scas
jno
or
test
inc
mov
mov
push
add
lods
mov
andl
jg
stos
and
sub
outsl
dec
into
fwait
repz
mov
cmp
jb
inc
sub
mov
xchg
inc
dec
arpl
xchg
push
movsl
nop
andb
cmp
cmpl
sahf
pusha
pop
hlt
in
hlt
dec
sbb
cli
or
or
mov
faddl
push
cmpsl
ret
rcll
dec
cmp
cmpb
and
data16
pop
jb
shlb
pop
cmpsl
add
jmp
pop
lret
pop
inc
aam
inc
shlb
gs
out
imul
jns
push
neg
push
dec
add
sbb
arpl
jle
or
jbe
inc
js
mov
lret
lret
loop
in
cmp
inc
xabort
test
lret
sbb
jle
bound
aas
hlt
jl
xchg
jecxz
mov
mov
loope
cmp
adc
sbbl
nop
pusha
data16
inc
int3
imul
adc
ja
mov
aas
or
shll
sti
xchg
or
dec
ja
shll
dec
movsb
jle
pop
mul
xchg
sbbl
sahf
imull
and
cmp
inc
sub
scas
xlat
pop
and
out
sahf
lret
inc
adc
lret
lahf
movsb
cmp
movsb
mov
add
mov
xchg
push
ss
inc
and
mov
clc
cmp
push
leave
jns
in
cli
movb
lret
fprem
dec
je
out
push
cmp
xor
imul
xchg
pop
jno
inc
xchg
fimull
pop
stos
mov
pop
sub
shlb
mov
and
scas
lods
lret
xchg
push
mov
and
or
lahf
xor
cmp
lret
es
cwtl
iret
jle
lcall
jp
mov
imul
push
mov
sbb
gs
outsl
adc
jae
jns
sarb
lods
cmp
repz
repnz
sbb
add
jno
aad
nop
inc
add
dec
cmc
movsl
test
fnop
pop
xchg
jne
clc
mov
out
call
mov
ja
and
mov
stc
push
or
inc
daa
dec
movsb
jnp
cmp
or
or
fcompl
outsl
and
adc
das
sahf
into
adc
or
rol
cmp
hlt
mov
mov
stc
jle
jb
es
fwait
insb
xor
dec
cmpsl
jp
sar
mov
add
pop
mov
sub
in
fsubr
negl
ret
shl
rep
or
sub
xchg
je
rorb
mov
cmp
ja
xor
or
mov
and
lcall
mov
fnstcw
adc
scas
das
cmp
mov
xorb
enter
xor
stos
div
push
outsb
lahf
xor
jmp
fstpt
ljmp
stos
mov
cmp
inc
or
jg
add
aaa
mov
rcll
insl
mov
and
add
nop
pop
mov
lods
iret
xchg
hlt
sub
insb
data16
sbb
ljmp
add
and
sbb
stc
xor
inc
ljmp
jae
cmp
stos
cwtl
and
lea
pop
out
das
xor
jle
shr
or
jmp
js
push
mov
ljmp
mov
jmp
mov
cmp
ret
test
mov
sub
cli
inc
mov
pmulhuw
push
and
xor
xor
into
in
pop
loope
adc
cwtl
imulb
test
jb
loope
in
repz
sbb
pushf
jne
fmul
mov
rorb
xchg
stos
push
push
sarl
jmp
add
faddl
jl
imul
mov
lret
out
mov
test
inc
in
sbb
push
repnz
mov
sub
sbb
sub
in
jecxz
sub
test
fidivrl
or
inc
in
dec
ja
fcomps
and
dec
out
cld
xor
cmp
pusha
add
call
add
scas
push
dec
popa
movsl
out
testb
out
mov
aad
mov
pop
and
test
jge
inc
in
lret
sbb
adc
arpl
fistps
adc
mov
sbb
hlt
jbe
jb
mov
mov
mov
testl
or
ja
xchg
jbe
mov
call
repz
pop
and
roll
fstpt
std
ffreep
pop
cmp
ficompl
push
hlt
dec
repnz
sbb
dec
test
fsubrp
loop
or
pop
jns
lret
xchg
pushl
std
les
dec
mov
sti
mov
push
xchg
movsb
fmulp
popa
mov
ret
aad
aad
lret
out
xorl
test
imul
popa
in
mov
dec
cli
jnp
lods
dec
push
sub
out
xchg
divl
lods
adc
mov
dec
in
fimull
arpl
mov
test
or
or
sti
and
lcall
popf
ret
aas
dec
cwtl
mov
mov
lods
lods
daa
iret
add
or
mov
cmpsl
or
mov
imul
outsb
mov
lahf
sahf
loope
xor
lret
xor
mov
xor
pop
in
fildll
push
mov
jbe
push
dec
dec
push
mov
lret
jo
and
in
pop
xchg
adc
jecxz
leave
div
sarb
mov
shlb
cmp
scas
ret
fs
cli
fcmovnbe
and
jo
push
cmpsb
mov
and
add
aam
push
popf
adc
mov
pop
pop
sbb
push
test
jg
xor
aad
and
cmp
xlat
push
sti
add
sub
fsubrs
push
add
push
shrb
aad
mov
mov
leave
in
pop
das
movsl
incl
push
fbld
in
gs
or
cmp
pop
cwtl
add
movsl
test
repz
lea
sub
outsb
inc
push
push
pop
mov
cmpsb
push
shl
and
mov
pop
mov
daa
dec
mov
loop
push
add
xor
leave
and
push
jnp
enter
cwtl
sahf
mov
push
je
mov
or
mov
fwait
int3
repz
aad
out
aad
and
push
jge
addr16
repz
adc
test
cmp
xchg
add
loopne
push
ljmp
mov
xchg
ljmp
xchg
inc
je
test
push
into
pop
lods
push
inc
fnstsw
test
jns
inc
jmp
fisubrs
xchg
rorb
cmp
out
into
sbb
testb
pusha
popa
mov
pushf
sbb
std
inc
lods
mov
adc
dec
data16
hlt
movsb
out
dec
nop
jp
pop
out
jmp
loope
dec
sbb
loope
gs
push
in
push
hlt
xchg
mov
pop
sbb
or
cmp
sbb
mov
mov
out
test
loope
fmull
fbld
inc
inc
rorl
or
repz
jp
rorl
aam
imul
into
jecxz
andl
sbb
adc
ljmp
aad
clc
das
scas
fcoms
iret
insl
jo
mov
lret
cmpsl
cmpsl
stc
sub
cli
test
aaa
loopne
cmp
inc
pop
arpl
aas
fiadds
pop
std
push
fcompl
pop
mov
mov
dec
sub
enter
addr16
int
lock
mov
jns
adc
jnp
pop
pushf
inc
loopne
hlt
pop
fidivrl
and
incl
xchg
xchg
lahf
loopne
xchg
pop
les
push
ret
cli
dec
add
lahf
stc
shr
out
xor
btc
sbb
mov
mov
pop
lahf
inc
sub
lcall
jb
mov
ret
push
subps
add
xor
mov
movsl
xor
mov
ret
dec
xchg
fistl
and
adc
mov
cwtl
mov
mov
push
in
outsl
das
mov
outsb
ss
arpl
jne
jecxz
cwtl
imul
push
and
ds
mov
stos
pushf
bound
dec
scas
out
mov
dec
hlt
lcall
ret
cli
stos
aam
mov
sahf
hlt
pop
pop
repz
inc
xor
dec
xchg
ret
mov
jmp
push
arpl
sub
and
pop
and
sub
dec
adc
adc
jge
mov
shrl
cmp
jge
sbbb
jbe
push
fwait
int
sbb
mov
cmpb
jo
jo
pop
pop
fcoml
loopne
sbb
or
push
stos
mov
push
mov
sbb
inc
mov
test
mov
jg
outsb
and
aad
mov
push
dec
stos
xor
and
std
cltd
push
xchg
cltd
xchg
sbb
out
push
push
outsl
aam
gs
mov
pop
cwtl
shlb
pop
in
imul
add
xchg
sarb
pop
sub
sbb
dec
sti
movsl
jno
inc
les
out
or
cmc
add
jecxz
and
in
sub
pushf
push
pop
icebp
inc
xor
int
repz
xlat
out
jbe
cltd
inc
mov
push
cltd
daa
mov
jecxz
sub
add
xor
or
in
cmc
jmp
sbb
xchg
into
xchg
jmp
hlt
push
int3
enter
cmpsl
lret
mov
add
in
repz
pusha
inc
adc
mov
test
mov
pusha
sub
jmp
int3
dec
push
stc
jmp
dec
nop
jg
jno
pop
ja
js
popa
mov
cltd
imul
mov
xchg
out
faddl
push
aad
fstl
stos
mov
nop
aaa
cmp
and
dec
or
cmpsl
enter
and
cmpsb
pop
and
addr16
pop
out
push
lret
sbb
or
sub
dec
push
xchg
push
in
test
or
inc
mul
inc
lcall
pop
imul
and
jno
xchg
push
jmp
or
ret
xor
xor
inc
aam
inc
mov
notb
jb
test
jle
dec
test
lret
iret
enter
mov
shlb
and
adc
lea
jo
push
stos
stc
aad
mov
popa
jmp
sbb
insb
and
jp
push
mov
repnz
in
shlb
xor
out
adc
not
mov
or
push
std
lahf
loopne
ret
push
mov
scas
and
xor
test
and
std
dec
orb
bound
popa
fstl
lea
xor
fldt
mov
adc
mov
ja
pop
int
cwtl
dec
ss
dec
scas
xchg
insl
in
mov
ret
test
dec
divl
popa
cmp
and
arpl
xchg
out
stos
fidivl
fs
mov
xchg
in
mull
sbb
rorb
stc
cmpsb
in
pop
sbbb
out
clc
into
sbb
jbe
mov
ja
data16
fsubp
insb
jne
call
push
xchg
and
adc
or
out
cmpsb
mov
int
jmp
fistl
xchg
inc
stos
xchg
test
cs
popf
out
mov
push
jg
fsubr
mov
shl
cmpsl
adc
or
daa
das
sub
mov
pop
mov
fldcw
mov
cmpb
rep
insl
mov
mov
notb
push
xchg
cmp
xchg
mov
add
cmc
mov
into
cs
jmp
notb
out
mov
sbb
adc
out
mov
iret
jmp
test
neg
and
mov
fisubrs
sbb
loop
dec
dec
ja
dec
mov
es
adc
ficoml
jle
hlt
gs
mov
mov
roll
push
xchg
sub
add
dec
pop
jmp
stos
arpl
dec
adc
cwtl
loope
jae
enter
loop
clc
push
jmp
out
push
or
sbb
pop
xchg
lods
cld
push
pop
cmc
mov
mov
or
scas
and
mov
mov
pop
sbb
lea
sub
out
test
inc
scas
mov
mov
jb
leave
mov
xchg
das
mov
dec
lods
test
out
jnp
movsl
pop
fisttpl
mov
adc
scas
mov
mov
popa
mov
adc
ss
mov
cmp
push
es
pop
jne
sti
in
pop
pushf
pop
fs
push
pushf
lret
inc
aam
movsb
in
jmp
mov
inc
xlat
icebp
pop
inc
jle
adc
adc
cmp
leave
adc
pop
fistl
sub
sti
cmp
imul
cvtps2pd
mov
cmpsl
cwtl
ret
sbb
push
push
scas
jmp
test
jnp
and
xchg
mov
sbb
and
cmpsb
sub
inc
fcomps
mov
enter
xchg
cmp
mov
lcall
lretw
add
lods
mov
test
xchg
int
dec
sahf
mov
xchg
movsb
es
fidivrs
sbb
dec
jns
popa
test
rclb
lcall
inc
ret
push
into
imul
repz
sub
out
outsl
cli
loope
fimuls
mov
cmp
shll
pshufw
aaa
cmp
or
cwtl
xlat
imul
cmp
pop
hlt
jmp
mov
and
fcomp
cmp
dec
mov
fcoms
cmp
sub
lea
and
out
leave
push
sub
cmp
filds
fstpl
xchg
or
pushf
aas
inc
cmpb
mov
jl
add
jns
push
lahf
call
jge
fdiv
mov
das
xchg
jg
xchg
popa
and
cmpsb
xorl
mov
push
pop
aas
out
sbb
push
das
ficompl
jae
lock
mov
sbb
inc
stos
leave
mov
test
addr16
test
fimull
stc
mov
xchg
sbb
fildl
or
jecxz
lock
pop
jns
lea
jge
cld
cmp
and
in
sbb
into
jmp
out
fdivrs
push
sbb
or
test
pop
dec
and
fiadds
addr16
imulb
stos
nop
loop
and
jno
xchg
orb
or
fcomp
xchg
or
jle
out
ss
int3
add
mov
stos
ja
or
addr16
mov
push
cld
rclb
mov
stos
arpl
jne
pop
sbb
xchg
dec
mov
xchg
jne
mov
cmpsl
and
test
jne
and
adc
in
mov
fmulp
rorb
sti
testb
sub
ljmp
adc
sar
xchg
add
dec
push
pop
adc
mov
imul
shrl
mov
adc
push
mov
jno
movsb
mov
jae
mov
xor
out
int
call
insb
lods
call
adc
gs
lahf
dec
inc
ficomps
mov
pop
clc
pop
jo
sub
lret
scas
repnz
clc
mov
and
jnp
rol
push
xorl
repz
and
fistpll
and
xchg
mov
rclb
mov
xchg
or
das
push
arpl
dec
insb
aam
adc
loopne
push
lahf
mov
sub
cli
ljmp
and
cmc
insb
pusha
ret
dec
add
cli
adc
mov
mov
sub
dec
xchg
mov
jmp
sub
mov
cli
inc
or
insl
cld
add
andl
nop
xchg
pop
dec
ds
mov
sub
inc
rcrb
adc
les
mov
jno
xlat
xchg
and
leave
insb
outsl
aad
adc
xor
mov
xchg
cltd
movsb
mov
jge
in
in
sarb
mov
xchg
pop
repz
cmp
pop
cmp
mov
and
mov
mov
ss
mov
push
pop
or
push
push
movsl
lret
xor
mov
sahf
and
lods
lahf
enter
lock
adc
mov
aam
add
lock
outsl
jl
packuswb
and
and
sbb
mov
imul
dec
stos
cld
pushf
aas
push
mov
or
dec
sbb
dec
or
pop
mov
out
adc
push
xchg
ffreep
mov
movsb
lods
pop
loop
je
xor
cmpsb
sbb
lods
lock
mov
into
push
adc
hlt
pop
and
shl
lods
lods
movsl
fwait
mov
mov
xor
mov
push
sbbb
popa
xchg
fisubs
cmp
xlat
cmp
popa
mov
insl
add
call
push
popa
cld
jbe
popf
push
or
jg
push
fnstenv
sahf
dec
and
inc
out
xchg
mov
adc
push
dec
cli
and
movsb
imul
cmp
and
pop
lret
pop
dec
nop
pop
push
sbb
loopne
adc
jecxz
cmp
sbb
mov
inc
adc
fs
or
out
fsts
dec
addr16
shrb
push
fsubrl
add
push
sbb
insl
insb
xlat
iret
mov
cmc
pop
dec
ret
out
jle
sbb
cmp
lea
mov
xchg
mov
mov
and
jmp
cmpsb
and
ret
add
mov
xor
lds
jg
dec
shl
xchg
repnz
push
arpl
push
es
in
in
mov
and
mov
faddl
dec
jae
sub
sub
pop
pusha
ret
stos
jecxz
stos
sub
dec
test
mov
sbb
mov
inc
mov
leave
rorb
sahf
aam
mov
adc
ror
push
pop
pop
pusha
call
or
bound
add
xor
dec
xchg
lds
or
sti
movsb
pusha
test
push
xor
adc
push
xor
mov
scas
sbb
xor
arpl
ljmp
and
pushf
aad
push
push
pop
int
push
inc
adc
lret
push
mov
jne
mov
cwtl
loop
in
push
imul
pop
not
leave
add
mov
testl
mov
and
inc
mov
xor
in
sbb
xor
sub
sub
inc
arpl
mov
jnp
sub
pop
bound
ss
add
cmp
sub
pusha
pop
dec
xchg
int3
ret
mov
pushf
leave
in
xchg
inc
mov
push
jbe
push
imul
aad
clc
jnp
lock
jg
mov
shrb
add
mov
lret
mov
dec
je
call
adc
orl
mov
negl
test
test
clc
xlat
out
pop
test
aad
mov
in
xor
lock
xor
jnp
fs
cmp
push
sub
lock
dec
inc
sbb
fisttpl
add
jmp
aas
and
divl
aam
mov
pop
mov
aas
mov
adc
sahf
cmpsl
xor
mov
xchg
add
std
ds
adc
ds
adc
push
test
jmp
push
mov
adc
pop
mov
xchg
jge
fidivrs
adc
pop
and
nop
stos
insb
push
and
mov
xor
xchg
pop
or
or
xchg
cs
repz
adc
mov
push
adc
push
mov
psubusw
in
xchg
aam
int
xlat
xchg
imul
cmp
and
fildll
add
mov
mov
fstps
mov
xchg
movl
xchg
enter
out
leave
add
pop
cmc
xor
pop
lea
lahf
into
imul
shl
fbld
jecxz
sub
inc
es
inc
xchg
hlt
cmp
shlb
flds
jp
cld
xchg
or
jae
icebp
xchg
xchg
sbb
into
cwtl
inc
leave
rcl
mov
add
mov
inc
or
addl
leave
xchg
push
dec
cmp
or
data16
push
bound
jno
jbe
sbb
fldt
add
push
lahf
xor
pop
aaa
sarl
scas
jbe
lret
fwait
xchg
pop
mov
xlat
mov
int3
push
repz
cld
pop
mov
mov
xchg
negb
outsl
repnz
push
arpl
pop
cmp
stos
dec
imul
dec
data16
add
fdivl
subb
movsl
fs
pop
repnz
and
ja
lret
in
orl
repnz
dec
cltd
arpl
in
mov
and
fs
jmp
in
jbe
jno
xchg
jp
sub
xchg
or
mov
mul
stc
nop
push
dec
into
xorb
mov
jae
xchg
lds
fsubrp
cmp
popa
mov
mov
xchg
pop
xor
sti
fisttpll
mov
jmp
ret
and
je
cmpsb
add
mov
sbb
dec
and
jmp
jp
das
popa
test
addr16
scas
ds
sub
aaa
fimuls
adc
rcrb
test
xor
xor
jge
jle
lret
imul
dec
jmp
pop
xchg
dec
push
sub
out
mov
jno
shlb
cmc
jo
and
pop
sbb
enter
push
jo
sub
xor
fiaddl
popf
das
cltd
push
mov
fidivs
imul
testl
mov
pop
fmuls
int
stos
insb
mov
js
arpl
cmp
or
std
sti
sub
cmc
enter
push
sub
jno
ja
pusha
fcmove
or
cmp
mov
dec
xchg
fildl
or
pop
mov
into
pop
xor
in
sbb
test
mov
mov
lahf
lret
xorb
jmp
pushf
js
sub
sbb
int3
stos
fists
popf
das
in
fistl
or
dec
xchg
xchg
outsb
out
push
jnp
jecxz
fistpl
lea
fisttpll
xor
jo
pop
xchg
adc
in
rcrl
repz
std
data16
push
or
cmp
jecxz
fstl
add
aas
dec
add
pop
jns
fldt
fcomip
adc
jb
add
in
clc
xor
mov
adc
xor
cld
mov
mov
or
ljmp
sbb
xchg
incb
adc
mov
cmpsl
pushf
test
and
loope
and
xor
fsubl
cmp
mov
inc
sub
test
sub
mov
mov
nop
in
xchg
jno
xor
decl
cwtl
mov
inc
out
sbb
shll
popa
in
sbb
xor
test
pusha
mov
sub
xchg
mov
mov
arpl
aas
add
les
jo
mov
outsb
repnz
xor
jmp
int3
dec
pushl
push
pop
mov
jno
xor
lods
push
pop
test
push
sub
arpl
jle
jle
xchg
fwait
lahf
push
pop
mov
dec
and
pop
lea
xlat
sbb
cmpl
mov
jae
mov
rcll
jg
pop
xor
jmp
lcall
mov
pop
movsb
in
fildll
mov
inc
fucomip
cmp
loope
cwtl
and
push
dec
mov
jmp
mov
and
or
mov
out
sti
or
sub
fnstenv
push
scas
orb
sbb
or
push
loopne
sub
sub
mov
xchg
imul
popf
inc
sub
movsb
sub
in
inc
jle
adc
andb
mov
ffree
popf
insl
aas
pop
scas
out
sti
icebp
push
xor
cmpsb
mov
push
and
adc
in
jmp
fidivs
movsl
cltd
mov
cmpsl
push
cmpsl
inc
icebp
mov
in
cmc
inc
cmp
mov
mov
aad
aas
mov
push
rolb
sub
out
iret
inc
mov
push
push
rcll
jmp
inc
lret
and
push
jle
ret
push
sbb
shr
dec
lods
sub
xor
or
dec
cmp
push
cmp
iret
stc
xchg
mov
aam
push
lret
pop
je
mov
mov
pop
loop
cmp
shlb
adc
cmp
into
dec
cmpsl
popa
ss
dec
inc
mov
cmc
dec
je
stos
ss
psubsw
ja
jno
mov
and
sbb
dec
loope
and
pop
adc
imul
pop
cmpb
pop
mov
test
movl
scas
xlat
or
mov
dec
lds
inc
loop
dec
fs
cmpsb
rol
fdivrp
cli
call
imul
push
in
add
cmp
cmc
cmp
jb
nop
arpl
bound
jae
sub
push
xor
mov
cmp
and
push
xchg
and
mov
pusha
fiadds
mov
and
xor
out
push
mov
cmp
pusha
and
mov
pop
arpl
mov
pop
sub
jb
das
inc
cmp
mov
add
and
in
outsb
jl
sahf
hlt
jmp
sub
in
add
mov
and
inc
aaa
lret
fdivl
dec
cmp
les
fidivrl
lret
pop
jg
mov
cmp
lahf
adc
subb
movsl
jbe
cmp
add
jbe
push
fcomps
lret
js
pop
loopne
cmc
fdivrs
and
cmp
pop
push
repnz
insl
in
test
dec
aas
pop
and
mov
jmp
lods
int
data16
push
or
push
call
cmp
mov
jecxz
xchg
sub
js
pop
mov
ret
and
xor
sbb
add
or
mov
icebp
push
mov
push
daa
mov
jns
ret
and
cmpb
adc
cld
repz
je
lret
sub
movsl
mov
mov
gs
mov
hlt
add
jge
ret
push
fistpll
push
pusha
mulb
jmp
push
fisubrl
rcl
jl
mov
mov
adc
sbb
mov
add
inc
or
rcrb
js
clc
jle
loope
sub
xchg
or
repz
aas
test
push
movsb
inc
ficoms
inc
mov
iret
testl
lods
adc
or
or
mov
xchg
xor
sub
js
inc
or
pop
sbb
shll
xor
repnz
jns
xchg
push
outsl
push
lcall
mov
cwtl
ljmp
test
sbb
mov
ds
in
push
lods
data16
jb
rcrb
or
fwait
imul
jbe
mov
mov
inc
fwait
push
jae
shll
adc
add
testl
cmp
into
ret
aas
mov
adc
xchg
jo
mov
sbb
push
stos
xor
jae
push
push
dec
insl
pcmpeqw
cld
push
cld
addr16
xor
sarb
scas
push
ret
and
pop
mov
fnstcw
sbb
aad
ja
adc
std
xchg
out
mov
sub
in
cmp
in
adc
rcrb
stos
aaa
sbb
jne
and
loope
sub
xor
mov
jg
mov
stos
sub
out
faddp
stos
repnz
fists
add
inc
int
insl
jmp
insb
jb
sbb
xor
test
adc
xchg
gs
xchg
into
mov
gs
mov
mov
daa
xchg
jns
ror
mov
cltd
js
inc
jns
push
pop
push
xchg
leave
mov
cmp
pop
xchg
adc
sahf
in
sub
jp
cmp
xor
cld
hlt
roll
xor
lock
xchg
or
outsl
cmp
pushf
lock
hlt
into
dec
mov
fsubs
test
pop
out
test
in
lea
mull
sub
push
int3
movsl
sub
dec
test
cld
pop
mov
arpl
inc
cwtl
lcall
scas
rolb
ret
aas
pop
pop
adc
mov
clc
out
or
jl
mov
les
push
push
inc
dec
mov
stos
sbb
hlt
add
xchg
push
push
xchg
sahf
jo
sub
jbe
and
ss
test
jl
ret
fidivrl
ja
pop
fimull
or
push
dec
dec
xchg
cmp
mov
cmp
push
jns
jno
in
jne
das
js
mov
cld
ljmp
xchg
or
mov
mov
push
cmp
jmp
adc
into
pop
mov
ret
sbb
rcrl
dec
shrl
pop
fisubs
lds
fcmovnb
mov
add
mov
lcall
and
cld
mov
test
pop
pusha
cmpsl
or
sbb
pop
push
je
je
fcomip
add
cmp
jno
cmp
loope
jno
fstp
lods
pushf
in
mov
lcall
xchg
scas
cmpsb
lahf
push
sub
int
jl
push
in
call
and
stc
je
cmp
aaa
jbe
int3
out
fisubl
inc
xor
cli
push
mov
inc
int
or
jns
push
push
xchg
add
call
outsb
out
cmp
push
ret
mov
lcall
adc
adc
wbinvd
jl
cmpsb
rcrl
jo
out
or
or
das
inc
xchg
loope
es
dec
push
mov
xor
imul
dec
and
jg
push
jle
rcrb
adc
cmp
add
aad
mov
add
jo
and
and
hlt
add
cs
lods
jge
out
mov
or
push
mov
mov
pop
imul
xor
or
lock
mov
and
push
mov
mov
in
dec
roll
sub
mov
fistpl
sub
mov
add
add
test
and
push
xor
push
cmpsl
fdivrl
nop
in
and
or
lea
sub
or
fldt
shr
sbb
inc
icebp
sub
jge
and
push
ss
xchg
cmp
leave
aad
imul
sbb
mov
movsl
mov
cmpsb
fidivl
nop
inc
les
xor
jle
jecxz
adc
xor
xor
or
jl
xlat
fists
scas
mov
xchg
ds
add
jae
clc
nop
mov
movsl
stos
in
in
mov
leave
popa
pop
cwtl
jb
test
sbb
pop
je
rcrl
ror
loope
and
push
mov
sub
iret
jmp
orl
icebp
xchg
scas
add
xchg
pop
cmp
jne
mov
push
outsb
pop
rorb
das
imul
sahf
lret
dec
int
pop
and
mov
imul
fsubrp
cmpsb
add
rcl
inc
cli
mov
push
test
pop
mov
je
cmpsl
adc
pop
mov
outsl
hlt
cli
add
mov
or
mov
mov
imul
clc
int3
sbb
and
mov
lret
sti
sbb
fs
and
pop
push
or
shlb
mov
inc
cli
rorl
ds
sbb
shrl
and
push
loope
test
scas
fneni(8087
push
bound
mov
stc
es
pop
jp
loopne
dec
and
hlt
icebp
fildl
push
gs
mov
push
mov
or
test
cli
in
mov
mov
pop
out
cs
sbb
dec
addr16
notb
xchg
testb
arpl
adc
adc
imul
mov
insl
xor
inc
jae
inc
fnstcw
sbb
push
sub
and
test
js
out
and
pop
arpl
mov
fcompl
bound
pop
inc
js
sti
xlat
enter
insl
inc
dec
daa
cmp
push
jns
and
leave
es
push
movsl
call
sbb
iret
arpl
inc
mov
insb
push
push
push
movups
imul
aad
sarl
icebp
or
mov
pop
xchg
mov
sbb
jnp
and
arpl
jns
std
data16
aam
aaa
rcl
xchg
mov
mov
xor
fs
rcr
es
ja
outsl
jns
mov
dec
push
push
popa
mov
scas
and
imul
jns
lahf
push
in
insb
jl
push
js
js
testb
or
push
rclb
and
adc
push
push
mov
mov
add
mov
jg
mov
inc
sbb
aas
xchg
and
insl
test
lret
jb
loop
inc
add
or
mov
ficoms
or
mov
xor
fistl
mov
sub
pop
sbb
fwait
addr16
or
inc
adc
push
jnp
mov
jnp
lcall
outsl
out
lahf
dec
jle
stos
adc
inc
sub
icebp
popf
test
push
cmc
es
js
outsl
jbe,pt
cmp
xlat
rorb
jp
orb
adc
xor
arpl
push
insb
and
pop
cmp
out
mov
dec
xor
push
stos
jbe
fbstp
mov
mov
jnp
ljmp
inc
adc
xor
inc
inc
outsl
push
xchg
insl
xor
inc
push
lcall
sbb
sub
dec
outsl
sarl
aad
inc
push
sbb
sbb
leave
bnd
fwait
movsl
mov
movsb
loop
add
mov
xor
stc
xor
arpl
sbbl
mov
lcall
mov
xor
ja
xor
xlat
ficoml
mov
sub
pop
into
mov
pop
push
push
jmp
aam
inc
add
cmp
mov
cwtl
sbb
mov
mov
add
mov
adc
xchg
inc
xchg
lret
mov
dec
xchg
mov
adc
pop
mov
jmp
adc
mov
inc
das
dec
or
pop
push
and
aad
dec
jns
ror
xchg
movb
es
aaa
inc
sarl
andb
std
pop
stos
push
cmp
push
mov
xorl
jg
xchg
add
das
icebp
cli
mov
dec
dec
mov
jo
pushf
jmp
mov
cwtl
or
in
xchg
sahf
cmp
cld
lcall
jae
mov
xchg
sub
mov
sbb
push
push
inc
cld
sub
fs
shrl
inc
push
or
cmpsl
mov
test
fstps
sbb
xor
imul
mov
ja
add
loope
mov
push
repnz
movsb
notb
dec
xor
push
jns
int3
sbb
xlat
or
lods
adc
push
inc
push
or
aaa
jbe
mov
mov
enter
mov
mov
jge
ret
inc
insl
push
enter
mov
mov
jg
orb
and
mov
mov
add
fbstp
lea
cmpsb
ficomps
and
or
mov
test
dec
jae
out
mov
xchg
hlt
test
lock
jmp
call
ljmp
mov
fadds
movsl
push
les
cmpsl
int3
rorl
int3
stc
cmp
pushw
xlat
lret
pop
pushf
add
lahf
add
lea
mov
addr16
lods
out
jbe
jb
nop
rcr
lea
out
cmpsb
in
lret
dec
mov
cmp
lods
sub
inc
fldt
mov
cmp
int
xorb
lret
jmp
xchg
mov
and
outsb
je
pushaw
lcall
sub
jl
xchg
sbb
test
stos
sti
into
inc
or
pop
outsb
or
sub
adc
pusha
aaa
push
ret
adc
std
movsb
out
inc
push
adc
test
inc
ja
aad
and
int
es
xor
mov
pushf
pushf
sbb
ljmp
jecxz
and
sbb
push
shrb
testb
dec
pop
cmp
hlt
mov
rorb
cmpsb
sub
outsb
stc
jno
out
jbe
lds
mov
in
xor
xchg
add
push
pop
push
mov
das
mov
popa
push
mov
cmpsb
or
xchg
pusha
insl
inc
mov
out
cmpsb
jne
outsb
scas
mov
sub
mov
jne
test
mov
mov
outsl
popf
cmp
sub
xchg
rcrl
orb
push
add
xor
int
icebp
scas
rcrb
ds
repnz
mov
and
cmpl
dec
enter
push
clc
leave
add
xlat
scas
xchg
cmc
push
and
cmp
mov
jl
adc
dec
sbb
into
test
inc
xor
lock
jp
imul
es
stc
cli
mov
dec
adc
loope
sbb
pop
sti
or
cmp
pop
push
arpl
push
testb
sub
in
xchg
jle
ret
push
jle
insl
gs
add
jnp
mov
ljmp
ja
xor
push
mov
xor
jne
mov
icebp
push
lahf
add
sub
rcll
fisubrs
jb
rclb
test
out
cld
xchg
push
push
fwait
xor
les
aam
adc
jo
sar
movsl
jp
mov
imul
jb
cld
outsl
jns
xor
xor
push
mov
xor
xor
and
xchg
jecxz
cmp
fisubs
pop
loope
lcall
repz
repnz
add
addr16
inc
jl
cld
mov
nop
inc
inc
mov
je
int3
cwtl
test
ljmp
in
push
mov
rcl
daa
add
mov
ljmp
cltd
insl
lods
imull
xor
out
xchg
mov
inc
bound
movsl
xor
cmpsb
sbb
inc
sarl
ljmp
repnz
jecxz
cmp
scas
aas
push
adc
mov
out
insb
aad
jo
out
fwait
sub
xor
ret
int
movsb
xor
push
adc
mov
leave
sahf
mov
dec
jbe
lods
movsl
ja
adc
push
in
out
mov
xchg
inc
in
lock
dec
aaa
je
lret
jmp
and
mov
lcall
mov
inc
aam
add
mov
rorb
sub
mov
push
aaa
test
test
cltd
repz
fidivs
adc
cld
jne
pop
mov
mov
ds
jge
int
icebp
jo
fildll
into
pop
insb
cmpsl
pop
pop
xlat
lock
test
xor
in
xchg
mov
aad
sub
dec
test
inc
sar
cmp
js
inc
out
cltd
hlt
pop
or
mov
cmp
insb
mov
pusha
push
add
mov
mov
inc
rolb
imulb
jmp
and
nop
ljmp
sar
sbb
and
movsl
fnstcw
jge
lret
call
mov
ret
daa
aas
dec
pop
or
cld
leave
out
pop
adcl
pop
sub
aas
jmp
dec
push
test
push
adc
mov
das
rsm
cld
xlat
pop
std
out
cmp
lea
add
ud0
add
shrb
pop
movsb
jmp
movsl
or
add
or
jmp
push
nop
and
sbb
in
xchg
fwait
mov
inc
movsb
pop
cmp
push
fisubl
and
pop
nop
cmc
sbb
ja
sub
pop
setnp
sub
mov
add
insb
dec
scas
fiaddl
inc
sub
or
push
leave
add
or
pop
pop
fidivl
in
jo
aam
icebp
cmc
cmp
loope
pushf
outsb
adc
addb
mov
xorb
out
test
stos
add
cmp
add
sarb
sub
xchg
int
in
shlb
jle
imul
fnstcw
imul
dec
inc
scas
loop
out
jae
sbbb
cmp
inc
or
adc
test
fnstcw
rcl
aad
push
cmc
das
repnz
lcall
add
push
cmpsb
lock
pop
mov
aaa
xchg
push
dec
mov
ss
pop
loop
fisttps
mov
fstps
jge
jp
cmpsl
rcr
fistpl
ficompl
and
cmp
out
dec
cltd
lret
xchg
mov
gs
pop
stc
outsl
insl
adcl
sub
out
cmp
sub
pop
cli
sub
pushf
in
addb
jns
mov
popf
call
outsb
mov
adc
mov
mov
into
mov
das
push
test
mov
cmp
pop
xchg
push
rcrl
cltd
cmp
cmp
mov
mov
mov
inc
sbb
mov
and
std
jnp
sub
cmp
dec
ljmp
pop
scas
sbb
lock
sti
fimull
mov
inc
sti
adc
dec
adc
push
pop
xor
inc
iret
xlat
fnstcw
repz
call
jmp
add
and
xchg
pop
mov
xor
fdivp
cmp
mov
pop
adc
pop
push
mov
mov
mov
or
cmpsb
push
pop
fmull
cwtl
and
fcoms
dec
repz
ja
pushf
js
dec
mov
push
fstp
test
push
js
sub
stc
testl
push
shl
and
sbb
std
pop
lret
mov
cmp
adc
gs
imul
and
ret
insb
js
scas
adc
sbb
in
inc
pop
pop
jmp
gs
pop
inc
and
sbb
ret
sti
pop
shl
pushf
pop
add
mov
loop
inc
mov
les
adcl
mov
add
repz
sbb
mov
push
cmpsb
repnz
filds
pop
adc
fbld
mov
xchg
xlat
arpl
dec
cmpsl
movsb
int3
xchg
stos
stos
sub
mov
enter
cmp
aas
clc
loopne
aas
movsb
cmpsl
in
daa
push
xor
xor
testl
pushf
orl
mov
xchg
push
push
fstps
and
sub
scas
push
mov
lret
fimull
push
pop
mov
cmpsl
adc
lcall
fcoms
hlt
add
or
or
or
imul
mov
adc
enter
or
pop
popl
fdivs
cmpsb
ret
dec
int
daa
push
adc
sbb
cwtl
enter
or
adc
cmp
inc
pop
fistpll
es
or
and
mov
and
sub
or
dec
cli
cld
or
fisubs
fcmovbe
dec
and
and
xchg
xchg
int
lock
sub
mov
inc
jp
inc
mov
addb
mov
mov
idiv
inc
cwtl
pop
xchg
dec
jbe
add
mov
js
fwait
mov
and
or
loopne
cmp
jae
adc
jae
leave
pop
pop
leave
push
or
stos
out
daa
into
imul
sub
cmpsb
flds
mov
sub
xor
insb
cli
jns,pn
ljmp
roll
push
pop
pop
scas
cmpsb
jmp
adc
scas
mov
lods
cmp
xlat
fs
negb
xor
inc
rclb
outsb
cwtl
shrl
jbe
dec
das
mov
lods
aas
imulb
std
enter
sbb
inc
ja
scas
loop
mov
jecxz
scas
pop
ret
sbb
sbb
ficoms
mov
pop
sahf
and
jmp
inc
pop
fiaddl
jns
mov
cmp
ss
fsts
push
les
sbb
leave
push
bound
lea
push
and
lret
andb
shl
aaa
sahf
imul
jae
sti
fsubr
dec
push
and
sbb
xchg
int
jmp
das
mov
xchg
es
lret
fadd
mov
fsts
or
lock
or
outsb
adc
mov
pop
popf
roll
sub
cmp
pushw
pushf
loopne
jmp
cmp
cmp
movl
and
fcomp
pop
or
adc
dec
cwtl
mov
push
ret
mov
addr16
orb
jp
mov
cmp
dec
push
ret
adc
push
sahf
lods
and
pop
dec
stos
in
cmp
dec
js
pop
lea
sbb
adc
fwait
cli
lret
std
test
cld
jns
enter
jnp
cli
pop
mov
dec
dec
dec
negl
push
or
jns
repz
loope
adc
and
mov
fisubrl
mov
stos
out
je
and
lahf
pop
jbe
ret
add
enter
fwait
cmp
xor
lock
push
cmp
pop
sbb
push
loopne
push
mov
lret
xor
push
dec
or
mov
gs
stos
stc
mov
fadds
cmpb
int3
in
or
mov
hlt
shl
fs
ret
jg
jl
aam
jl
lret
fildl
lods
decl
lret
xchg
jae
pop
imul
iret
scas
dec
mov
adc
icebp
jo
and
sti
xor
leave
push
dec
ret
push
icebp
into
xchg
gs
mov
fstpl
dec
and
dec
inc
mov
nop
std
push
mov
mov
or
aad
js
push
inc
ret
adc
push
rorl
jne
mov
inc
in
mov
shl
sbb
out
jne
jno
aas
les
shlb
cmp
dec
dec
add
pop
sbb
aad
and
mov
aam
in
addr16
call
xorb
movsb
sub
sub
mov
lock
les
lret
pop
mov
push
int3
fsubrs
mov
test
cmp
adc
push
xor
scas
clc
sti
outsb
jg
fcoms
mov
dec
int
cmp
sub
fcompl
imul
push
jne
sub
insb
sub
sub
xchg
lea
aaa
int3
xchg
cld
ljmp
insb
push
mov
push
out
cmc
fisubrl
mov
pop
jg
xor
jmp
xchg
in
mov
cltd
sbb
sbb
push
mov
mov
inc
and
ja,pt
xor
pop
mov
movsb
aas
inc
push
inc
ljmp
loopne
xor
sub
fcmovb
or
loopne
xor
shl
out
xchg
inc
imul
out
mov
pop
jmp
xchg
cwtl
inc
sbb
mov
pop
std
push
and
mov
cmpb
mov
sbb
mov
leave
and
stos
or
cmp
jo
test
fwait
aaa
xchg
rclb
adc
outsl
mov
mov
out
lds
or
aam
adc
clc
arpl
sub
pop
cwtl
push
int3
iret
out
push
and
cmc
jp,pn
jb
sub
sbb
outsl
adc
jmp
in
dec
rorb
xchg
mov
cs
movsb
push
imul
shrb
scas
xorb
imul
mov
iret
cmp
cwtl
mov
sub
ja
and
fildl
xor
xchg
hlt
inc
cwtl
daa
mov
std
dec
stc
and
inc
xchg
iret
push
std
inc
jp
test
xlat
in
lcall
dec
ja
push
leave
dec
mov
and
pop
mov
pop
cmpsl
pop
imul
outsl
push
jb
ret
dec
jg
lock
addr16
ret
xor
inc
xlat
add
or
ds
jge
aam
prefetch
push
xchg
mov
jb
dec
jl
pop
or
flds
js
jmp
or
test
mov
rolb
leave
or
and
stc
popf
frstor
in
adc
xor
pop
rcl
ret
mov
mov
sub
sbb
push
lods
dec
lret
jl
jne
xchg
mov
lods
xchg
mov
aad
fstpt
or
cltd
mov
sub
dec
frndint
sub
mov
xor
insb
jne
movsb
or
lahf
push
pushf
repnz
push
mov
xchg
mov
dec
aas
fiaddl
test
out
xor
jno
stc
mov
cmpsl
add
mov
insl
sti
addr16
xor
shlb
pop
nop
or
lret
jle
mov
in
sbb
ja
fstl
sbb
mov
rolb
pop
int3
sahf
and
inc
test
pop
mov
or
mov
aas
push
shl
jo
arpl
xchg
cmp
cmpb
ret
cwtl
xor
pop
repz
xchg
xor
outsl
xor
lods
push
add
test
movsl
pop
cld
js
add
pop
mov
cmp
lret
pop
movsl
adc
and
les
or
inc
sub
pop
sbb
dec
mov
jecxz
sbbb
addr16
fidivs
xchg
dec
dec
or
stos
data16
ds
sub
mov
cmp
and
call
xor
jnp
or
and
nop
inc
bound
xlat
and
mov
push
cltd
add
cmp
sbb
mov
xchg
mov
dec
mov
shlb
or
sub
and
lods
mov
out
leave
jge
pop
mov
sub
and
ja
push
adc
jmp
movsl
push
mov
nop
loop
sbb
pushf
js
rclb
mov
push
mov
shrl
mov
pop
jnp
and
xor
mov
stc
stos
push
stos
jnp
jne
enter
or
fistl
xor
mov
push
push
add
mov
pop
jl
add
clc
cli
clc
outsl
push
ret
push
outsb
mov
addr16
sahf
mov
pop
arpl
addb
jl
jo
int
jmp
rorl
add
xchg
or
mov
sahf
mov
in
jbe
stos
adc
and
shll
inc
and
int3
loope
mov
out
mull
inc
stos
dec
jmp
sbb
test
in
in
je
call
sbb
stc
jecxz
out
das
xchg
jmp
pop
mov
inc
icebp
call
mov
sub
xchg
out
xor
int3
mov
scas
nopl
movsb
push
aad
pushf
das
scas
mov
lret
in
push
sbb
mov
mov
xchg
int3
loope
shll
pusha
sbb
adcl
adc
push
aaa
daa
mov
mov
xor
fimuls
jae
push
mov
add
out
adcl
sub
aad
inc
aam
sub
xor
cmp
cmc
dec
push
pop
cmpsb
test
dec
xor
mov
lea
pop
sbb
test
adc
stos
test
loop
lret
mov
push
lds
mov
lock
movsl
ljmp
insb
push
rclb
adc
fsubp
push
mov
xor
lahf
add
cmpsb
into
cwtl
or
faddl
and
push
jle
mov
push
jae
icebp
ljmp
sbb
ret
sbb
pop
sub
dec
dec
jl
or
gs
cmc
add
out
inc
fnsave
dec
mov
and
sub
push
shl
movsl
scas
pop
iret
adc
or
sub
sub
addl
xor
xor
or
in
add
jle
mov
lods
and
or
pushf
mov
and
popa
or
dec
pop
andl
jnp
sarb
mov
dec
cmp
cmp
les
cmp
mov
jae,pn
dec
lock
xchg
addr16
pop
insb
push
cmp
jnp
cmp
stc
clc
fdivl
cmp
mov
aad
cwtl
xchg
xor
repnz
mov
or
scas
imul
xor
push
mov
push
pop
lea
in
add
pop
or
adc
xor
mov
push
loope
add
sub
lcall
std
cli
push
or
jmp
rolb
cmpsl
cmp
xchg
fs
ret
cs
sub
flds
mov
es
test
xor
xor
cwtl
push
pop
mov
out
or
fistpl
scas
mov
stos
bound
sbb
cmp
xchg
dec
popl
jg
inc
or
fiadds
add
xor
loopne
jmp
jae
loope
push
sub
mov
into
mov
insb
repnz
fsubrl
fisubrl
push
sar
cmpsb
pop
sahf
xor
int3
dec
loope
dec
and
daa
cmpl
adc
jbe
test
sub
ljmp
pop
mov
mov
bound
scas
mov
xor
or
in
pusha
adc
or
enter
mov
mov
fmul
loopne
xchg
in
pushf
xor
or
cmc
lahf
insb
push
or
cmp
push
stos
jmp
mov
jg
pop
jno
cmpsl
jle
popa
nop
icebp
mov
fisubs
mov
aas
jp
dec
pop
cld
jns
or
xor
fs
add
lret
xchg
test
mov
mov
fists
xchg
xor
jge
sbb
xchg
xor
xorb
add
test
std
inc
test
fistpl
int3
andb
or
mov
lea
adc
out
or
push
shl
cs
cmp
aas
cld
push
adc
into
fucom
mov
daa
jge
jmp
sub
test
jg
rcll
and
sbb
xchg
int3
sbb
xor
mov
lcall
lret
lock
fcoms
daa
testb
movsl
push
cmp
pop
mov
movsl
ret
xchg
mov
stos
sti
stc
fisubrl
push
pop
inc
xor
std
jo
in
fnstsw
test
fisubl
sub
movsl
or
dec
jmp
mov
mov
fldl
jg
stos
cmc
ret
aaa
out
jb
filds
cmpsb
shrb
push
mov
xor
pusha
jg
sarb
add
jnp
imul
sbb
and
in
clc
pushf
cwtl
idiv
push
jge
xorl
xchg
je
xchg
push
jb
sbb
xor
rcrl
fisttpll
fwait
lret
neg
pop
lods
mov
mov
sti
cmpsl
scas
in
in
sahf
xchg
xor
decb
out
loop
aam
notb
lods
stos
cmpsl
fsubrl
pop
xchg
lret
int
add
jp
and
insb
mov
cmp
jb
cmp
out
inc
lcall
std
cmp
lret
bound
out
sub
mov
xchg
idivb
fwait
cmp
mov
jmp
cld
test
mov
jecxz
sub
stc
or
out
insb
mov
stc
gs
scas
in
data16
ret
lea
or
push
fisubs
lahf
arpl
inc
pop
inc
cmp
jne
add
sahf
mov
xor
lea
cmp
outsb
or
cmpsb
insl
shl
fidivrl
js
sub
test
std
jg
xor
mov
aaa
jae
add
test
pushf
pop
sub
lods
dec
test
mov
add
mov
mov
mov
hlt
shrb
pushf
in
lahf
push
pop
push
cmp
cmc
inc
and
subl
xlat
sub
xchg
leave
inc
or
xchg
incl
arpl
int3
les
adc
frstor
ljmp
adc
xorb
adc
fs
pop
cmp
fcomps
imul
lahf
shl
mov
add
test
ret
sbb
mov
cltd
aas
pop
out
jecxz
rclb
adc
mov
sbb
mov
and
das
stos
repnz
out
push
loop
mov
lds
xor
enter
mov
inc
pop
shlb
xchg
xchg
push
add
mov
or
rol
popa
js
xor
insl
stos
dec
pop
in
push
mov
mov
mov
and
pusha
push
hlt
jbe
bound
mov
mov
sahf
xor
lahf
dec
xor
mov
cmp
mov
lock
lock
xchg
dec
dec
mov
addr16
mov
xor
sbb
movsb
mov
jp
xchg
cs
add
in
pop
sub
subb
mov
xor
aaa
pop
jmp
jno
jecxz
loopne
shl
pushl
dec
iret
nop
jle
fdivl
pop
nop
jae
hlt
repnz
jb
and
les
into
adc
ljmp
lcall
movsl
jo
jecxz
pop
pop
sarb
xchg
push
test
mov
xor
cwtl
scas
loope
mov
mov
jae
lahf
pop
mov
xchg
insl
mov
jbe
pop
push
xor
and
dec
test
leave
adc
mov
inc
xchg
fidivs
mov
iret
movsl
xchg
test
push
lock
push
into
loop
cs
jp
or
jns
js
cmp
stos
xchg
mov
mov
dec
inc
insl
int
pop
cmpsl
xchg
xor
imul
or
sbb
dec
es
jmp
clc
out
aad
loopne
shrl
int3
mov
add
daa
add
or
adc
push
stos
iret
add
inc
loopne
jp
jb
xchg
insb
inc
pop
and
mov
pop
push
addr16
dec
into
pop
into
push
pop
call
adc
gs
rorb
cmp
push
push
into
jge
xchg
ljmp
data16
scas
popa
jae
iret
jns
lahf
sub
std
in
stc
xchg
stc
bound
lea
mov
stos
movsl
loop
mov
xor
out
lahf
dec
stos
add
shlb
stos
push
push
add
adc
fimull
pop
repnz
call
cwtl
dec
jmp
fbld
icebp
hlt
in
mov
enter
ss
and
xchg
int
mov
xchg
inc
mov
adc
xlat
mov
sahf
mov
scas
orb
stos
enter
mov
xorl
sti
cltd
popa
fldln2
mov
hlt
sti
iret
mov
pop
pop
jne
xor
mov
and
ret
test
pop
ds
adc
mov
into
in
sbb
das
mov
pop
pop
out
sti
jle
rclb
outsb
ljmp
mov
inc
enter
mov
scas
jl
cmc
arpl
fmull
je
pop
xchg
pop
lods
mov
sbb
sbb
idivb
ja
jmp
jl
adc
ljmp
fstl
loopne
fbstp
jae
lea
add
int3
xor
ficoml
mov
dec
test
in
jb
jb
jmp
shl
ret
inc
mov
and
inc
popf
inc
cmp
or
sahf
mov
dec
imulb
push
xor
loopne
dec
movsb
add
cwtl
mov
push
jge
push
fnsave
arpl
cmc
push
jnp
arpl
inc
daa
pop
hlt
mov
repz
jns
push
jge
mov
ds
mov
xor
cmp
add
xor
inc
mov
inc
out
aam
mov
xchg
fdivr
call
popa
mov
in
popf
xchg
sbb
inc
xor
mov
cmp
jl
lods
sub
clc
shlb
cmp
fdivrl
push
and
and
scas
push
lcall
push
jmp
arpl
mov
shll
pop
loop
mov
and
test
and
mov
xchg
lldt
dec
mov
or
inc
testb
or
mov
inc
hlt
mov
out
jg
dec
repnz
pop
pop
cmp
shll
push
ds
jbe
xor
xor
push
sub
fisubl
rclb
xchg
inc
mov
jg
test
loope
sbb
fwait
lods
fidivs
packssdw
mov
adc
xor
dec
inc
xchg
dec
mov
fsub
in
cmp
test
jnp
add
jb
add
sub
scas
mov
cmp
sarl
dec
push
cmp
push
push
mov
hlt
push
jae
test
and
and
loope
pusha
mov
push
cli
adc
mov
lods
push
inc
or
pusha
pushf
mov
inc
pusha
mov
loop
sahf
xchg
ret
aas
xchg
lret
leave
jl
jp
cltd
dec
mov
pop
dec
stc
pushl
js
jno
mov
cli
xchg
gs
icebp
movsl
xchg
mov
repz
sti
xchg
test
cld
mov
pop
repz
cld
pop
sub
push
inc
imul
inc
xchg
rolb
mov
rol
cmp
xchg
clc
or
push
push
dec
jmp
cs
fdivr
iret
xor
mov
mov
daa
xorl
scas
sbb
popf
pop
cmp
out
repnz
cmp
mov
jecxz
inc
lods
fisubs
pop
insb
repz
mov
data16
cmp
xor
into
repz
and
dec
inc
inc
aad
jno
lret
addr16
js
inc
gs
xor
mov
push
inc
out
ds
push
roll
cmpsb
jmp
cmp
ds
and
lret
and
lea
loop
dec
inc
mov
loop
cmpsb
pop
in
jnp
in
jnp
pop
sbb
into
incb
repz
sahf
push
pop
mov
mov
dec
insb
xchg
sbb
adc
jp
rcrb
test
sbb
icebp
dec
in
icebp
out
lock
jp
in
jb
ljmp
or
pop
and
and
lock
add
jo
loopne
fs
xor
pop
adc
xchg
push
push
pop
sti
xchg
je
imul
sub
pop
xchg
and
pusha
push
pop
nop
das
jecxz
or
mov
bound
lock
or
pusha
ret
cmc
rcrb
fidivrs
xchg
call
jbe
jne
out
jle
inc
and
and
sbbl
add
adc
int3
stos
sar
lds
loopne
lret
sbb
pop
jno
cmpsl
sbb
outsl
shll
xor
dec
daa
nop
loop
pop
fldcw
in
lcall
mov
push
cs
push
and
and
je
mov
fimull
dec
mov
js
xchg
adc
mov
call
add
push
inc
lcall
movb
fisubrl
sarb
inc
mov
aaa
out
sub
shrl
lock
nop
dec
sbb
ficoml
jge
mov
mov
cmp
sub
scas
sub
jnp
lret
nop
mov
xchg
sbb
or
fidivl
xchg
sub
test
dec
mov
or
or
callw
dec
sub
mov
xor
cltd
pop
mov
cmp
inc
xchg
dec
std
adc
into
fucomi
pop
mov
fimull
sub
add
jae
and
sub
push
add
jne
outsl
in
rclb
aaa
aas
cmp
jp
cwtl
stos
sub
jg
pop
das
sub
js
and
mov
mov
mov
xchg
inc
mulb
aad
lret
scas
nop
cmc
out
inc
std
push
dec
and
adc
stos
out
outsl
jbe
clc
je
int
mov
sub
sbb
shll
pop
and
lea
cmp
xchg
leave
sbb
ja
ss
dec
and
add
ret
popf
cs
push
out
into
popf
icebp
fiadds
ja
pop
xor
fwait
xchg
and
loope
pop
sub
ret
test
push
fbstp
call
mov
sbb
outsb
or
cld
and
cmp
lds
inc
or
mov
inc
int3
mov
fdivrs
mov
rorb
fldenv
and
push
imull
sub
mov
sbb
ror
pop
movsl
stc
insb
or
repnz
es
adc
mov
mov
mov
mov
movsl
cmp
in
lcall
mov
adc
cmp
sahf
push
ljmp
js
xor
dec
ja
jne
rorl
lock
xchg
pop
daa
sbb
rorb
push
jg
cmpsl
jp
iret
add
test
cltd
pop
adc
int
push
jb
dec
icebp
cmc
or
mov
xor
sti
int3
push
pop
nop
and
xor
adc
dec
pop
out
xor
test
push
and
ja
or
fdiv
xor
insl
adc
sub
cwtl
call
adcb
jbe
stc
repz
lahf
and
ds
loop
rolb
or
in
lods
sti
inc
ja
fsubr
cmpsl
pop
mov
ss
add
imul
mov
jnp
xchg
cmp
push
push
mov
in
inc
or
faddl
pop
rcll
xlat
jle
stos
mov
movsl
push
enter
js
mov
and
leave
fwait
pop
adc
or
cli
mov
add
lret
pop
or
dec
sbb
inc
nop
inc
movsb
cmc
ja
sarb
and
mov
cltd
cmp
mov
mov
sbb
mov
fucomp
mov
sub
sub
jecxz
outsb
jecxz
push
rcll
icebp
lret
jne
pushf
popf
loopne
mov
pushf
xchg
sub
sub
or
hlt
loop
imul
cmp
pop
and
lret
and
mov
data16
into
stos
or
scas
jns
mov
jg
test
fs
fstps
test
adc
vpmacssdqh
insl
fwait
inc
adc
xor
fsub
mov
leave
clc
gs
xchg
xchg
pop
stos
orb
es
shrl
mov
push
cld
sub
cmpsl
fisttpll
inc
cwtl
xor
mov
adc
push
mov
inc
ret
push
adc
iret
xor
push
repnz
xchg
pop
push
scas
imul
icebp
cmpsb
xchg
insl
lret
jb
into
iret
or
inc
loope
dec
push
cmc
or
xchg
arpl
inc
or
jmp
jmp
int
lods
mov
jns
mov
loopne
pop
mov
gs
loope
stos
add
xchg
ss
in
mov
cmp
push
or
dec
rol
xchg
jmp
add
lods
mov
jp
sahf
fsubs
lods
jl
mov
sbb
pop
adc
test
cmp
sub
stc
pop
stos
iret
push
mov
dec
or
or
dec
xor
mov
xchg
iret
xchg
mov
add
jmp
lock
rcl
movsb
pop
cmp
stos
mulb
stos
shl
inc
data16
out
and
ret
mov
inc
lret
fldcw
test
jns
jnp
cmp
lods
stos
loop
dec
adc
fsubrs
lds
enter
repnz
and
add
fimuls
insl
lods
addb
inc
outsb
sbb
pusha
mov
mov
arpl
js
lods
loope
jge
or
cli
or
loop
mov
sub
jne
dec
xchg
incb
in
cmp
xor
mov
imul
cld
repnz
add
mov
cmpsb
cmp
das
dec
push
test
add
sbb
xchg
fimull
loop
cmp
pop
lahf
ret
js
xchg
lret
xchg
std
das
push
xchg
ja
inc
pusha
jl
pop
mov
popf
lcall
add
xorl
mov
dec
daa
pusha
jb
cmp
adc
pop
lock
xor
cmp
push
insb
repz
stos
icebp
ret
sbb
je
dec
mov
or
add
js
addr16
ljmp
inc
cmc
mov
into
stos
pop
sbb
mov
adc
push
imul
push
and
leave
push
popf
dec
adc
pop
add
add
mov
scas
or
pop
sub
fildl
mov
loop
mov
mov
mov
mov
popf
subl
mov
out
fs
mov
loope
in
jl
bound
mov
ds
xorl
rorb
push
and
add
or
loopne
inc
out
xchg
mov
or
hlt
xchg
jp
pop
xchg
lea
mov
in
aaa
psllw
or
bound
mov
cmp
movb
push
add
scas
mov
test
aaa
xchg
paddusw
mov
push
mov
and
sub
lret
mov
cli
pop
jae
jns
or
mov
lret
hlt
xor
in
cld
mov
int
pop
adc
test
into
xor
xor
or
dec
cmp
stc
or
gs
addb
loop
cmp
sub
pushf
aam
jb
bound
mov
scas
cmp
or
cltd
jo
push
aaa
out
hlt
sbb
jl
leave
inc
rcl
in
aam
sbb
jecxz
mov
ret
movsw
adc
lret
pop
lods
mov
stos
repz
push
xchg
stos
cmpsb
xchg
es
dec
push
add
push
xorl
xorb
dec
cltd
mov
lock
sub
or
es
shlb
out
sub
inc
xor
dec
jno
add
mov
pop
sbb
mov
imul
sahf
adcl
insl
mov
aas
adc
ja
sub
lock
dec
sbb
push
sub
pop
outsb
dec
out
int3
pop
or
shl
fcoml
call
stos
out
hlt
jmp
fidivl
xchg
lods
mov
dec
mov
loope
imul
xorb
dec
jnp
popl
lret
jmp
lea
sti
push
stc
pushf
ja
mov
sbb
jp
mov
inc
lcall
test
xor
lods
nop
mov
push
add
jg
push
outsb
loop
adc
lds
ds
xorl
dec
loope
mov
cli
testb
jne
xchg
fadd
sbb
enter
xlat
in
pop
fs
mov
push
in
ss
cmp
xlat
add
rcr
aaa
test
xchg
shl
call
lods
mov
pop
adc
mov
push
xchg
scas
test
subl
push
loopne
inc
mov
popa
stc
or
and
cmp
adc
sbb
inc
jp
cmp
add
jle
aad
jno
adc
mov
adc
imul
or
jb
lods
cs
jl,pn
and
cmpsl
xchg
test
lods
shll
inc
cmp
mov
dec
ljmp
stc
hlt
push
loop
mov
insb
movsb
sub
iret
sbb
repz
mov
push
mov
fiaddl
lods
movsl
sahf
push
or
cmpsl
nop
dec
sub
outsb
imul
fwait
leave
push
add
jle
sbb
fsubrl
pop
lcall
xchg
fwait
cmp
popf
mov
pop
enter
jbe
mov
adc
sti
or
cmp
rcrl
jne
pop
inc
jecxz
jecxz
out
jbe
psadbw
sbb
incl
scas
cs
addr16
ficoml
stc
gs
dec
js
cmp
ret
xchg
xchg
mov
xor
and
pop
jb
in
inc
jo,pt
rcl
push
cmc
mov
jne
fs
out
jne
arpl
mov
sub
inc
xor
cvttps2dq
sti
inc
out
push
dec
inc
xchg
in
pop
xchg
rcrl
inc
inc
jp
icebp
pop
push
stos
sbb
adcb
mov
or
popa
fsubl
dec
push
cld
and
dec
mov
jp
lock
mov
adc
pop
divl
mov
push
test
xchg
xor
or
stos
mov
dec
jl
jg
xchg
mov
imul
xchg
std
sub
imul
pop
push
sub
add
sbb
call
mov
insb
mov
stc
imul
pop
jne
inc
ret
adc
jae
dec
push
ret
xor
addr16
in
add
adc
stos
mov
in
dec
out
testl
fidivrl
clc
insl
lahf
or
xor
adc
nop
aas
loopne
mov
sbb
out
xor
jge
push
in
inc
subl
xchg
inc
sbb
aam
push
std
xchg
mov
rol
arpl
movsl
cmp
sbb
xchg
add
inc
dec
stc
mov
cmp
xchg
mov
pop
mov
out
nop
sahf
sbbl
lret
subb
jns
jmp
int
aad
cld
xor
mov
push
push
test
int
stos
mov
in
outsb
fldenv
std
hlt
jmp
dec
stos
aam
sub
je
jae
cmpsb
mov
cmp
mov
popf
add
cmpsl
cmp
loope
inc
sub
xor
gs
sub
idivl
cmpsb
cli
mov
pop
dec
pushw
repz
or
test
adc
bound
mov
xchg
imul
daa
dec
outsb
jg
out
out
mov
add
adc
mov
add
jp
pop
out
call
mov
push
sbb
out
je
and
divl
clc
push
ja
sahf
xchg
mov
mov
mov
out
fadd
in
es
xor
dec
pop
xor
xchg
xchg
mov
fwait
or
data16
pop
ljmp
jae
test
mov
dec
mov
sbb
jg
sub
shll
repz
repz
clc
out
inc
push
mov
outsl
lret
mov
bound
inc
aam
xor
aaa
pop
mov
fldenv
fistpl
mov
and
inc
sbb
push
adc
lret
and
jge
jb
jns
je
mov
xchg
in
gs
pop
push
in
cltd
pop
scas
loopne
outsb
test
mov
nop
enter
pop
lahf
fsubr
dec
test
mov
repz
pop
mov
cs
pop
cmp
xchg
dec
dec
pop
repz
dec
out
xlat
popf
pop
xor
cmc
xchg
jnp
pop
iret
cmp
sbb
jg
mov
adc
jo
sbb
push
in
repz
inc
pop
sbb
shll
xlat
lds
push
repz
mov
xlat
ja
mov
add
outsl
movsb
out
pop
fidivrl
cmp
cmpb
fwait
sti
xchg
xchg
push
mov
in
les
push
mov
cmpsl
sbb
int
ljmp
or
arpl
or
add
hlt
add
in
lret
aas
notl
pop
mov
sbb
ss
push
xor
scas
mov
cmp
xchg
jno
test
or
xlat
pop
pop
jg
sbb
jnp
xor
scas
and
sti
jg
fcompl
push
popa
jbe
popa
shrb
fbstp
xchg
dec
cltd
jno
arpl
xchg
push
cwtl
fst
data16
xchg
movsl
push
inc
in
movsb
dec
pop
pop
punpcklbw
mov
test
pusha
testb
sti
cli
sub
fildll
or
jl
mov
dec
jge
jg
hlt
out
cmp
mov
rorb
push
xchg
pop
sbb
gs
or
inc
lods
popf
push
sbb
xor
add
enter
mov
test
mov
xor
rcrb
sub
and
scas
push
pop
mov
mov
cltd
mov
push
mov
test
dec
test
in
test
scas
add
aad
adc
stc
scas
jmp
jne
dec
xor
lods
gs
sbb
mov
lret
and
imul
addl
int
stos
repz
cmp
out
mov
push
sbb
mov
add
in
mov
xor
arpl
jmp
pop
cmpsl
rorl
rol
or
mov
leave
adcb
das
lea
xor
mov
cs
adc
push
inc
mov
iret
and
cmpl
enter
icebp
mov
lcall
test
push
inc
dec
pop
push
mov
mov
daa
xorb
or
jg
or
dec
scas
sbb
aam
inc
push
nop
push
and
xchg
jecxz
pop
decb
fbstp
cmp
fidivrl
in
mov
fmull
les
pop
pop
push
dec
lods
cld
negb
jb
and
inc
icebp
push
pushf
addps
mov
lret
lods
jmp
mov
inc
stos
test
xor
lahf
dec
mov
xor
sub
pop
es
clc
stos
test
in
mov
pop
aaa
imul
ljmp
jne
test
insl
push
out
test
repz
or
fdiv
push
ret
vcvtsi2ssl
jle
cmp
fld
mov
outsb
dec
addr16
pop
cmp
mov
xor
lahf
addr16
hlt
xchg
cs
jae
repnz
scas
xchg
gs
sbb
jnp
mov
xchg
iret
loop
aam
std
pop
in
and
inc
jae
add
mov
jmp
and
mov
push
dec
repz
leave
push
lcall
mov
inc
fs
stos
cs
cwtl
push
push
dec
pop
pop
aad
or
adc
data16
imul
adc
pop
add
mov
daa
cmp
repnz
mov
jge
test
jecxz
sahf
outsb
pop
sarb
pusha
xchg
cmp
out
arpl
into
arpl
mov
or
dec
sub
sbb
dec
push
mov
dec
jmp
adcl
fwait
test
aas
sbb
sarl
test
dec
mov
test
inc
jno
cltd
test
cwtl
cli
and
xchg
ss
sahf
add
test
ficomps
shll
mov
push
cmpsb
cli
dec
xchg
cmp
mov
outsb
jmp
mov
addr16
popf
test
push
data16
lds
push
cmp
xchg
mov
ss
dec
and
push
lahf
js
mov
xor
enter
lahf
jno
xchg
push
pop
ljmp
push
cld
xchg
ss
ljmp
mov
cwtl
les
scas
lock
mov
cli
cmp
test
or
add
inc
mov
cmpsl
divl
cli
icebp
es
jge
addr16
in
out
pop
cmp
add
mov
sub
mov
in
fwait
push
repz
ret
cs
dec
mov
scas
ja
jle,pn
mov
dec
jb
imul
push
lds
stos
js
lock
sub
and
mov
xchg
clc
push
fisttpll
dec
mov
push
pop
dec
insb
jb
imul
inc
ss
dec
push
sbb
sbb
inc
jge
mov
popa
lods
sub
pop
pop
rclb
bound
inc
pushf
pushf
aaa
push
adc
leave
inc
and
in
mov
out
jp
xchg
in
stos
icebp
cmpsl
sbb
fidivs
lds
bound
lret
mov
movsb
clc
mov
push
call
outsl
lcall
test
nop
xor
mov
mov
sahf
and
aam
ljmp
sar
pop
sahf
test
mov
mov
push
sub
lock
and
sub
test
pusha
lods
pop
xchg
inc
repz
jecxz
inc
xor
lret
and
into
and
inc
xchg
mov
cwtl
lods
push
scas
stc
int
ret
and
lret
ds
pop
xchg
add
push
out
fnstsw
cwtl
pop
push
sbb
dec
rcrb
rolb
adc
mov
mov
xorb
or
jecxz
add
xor
int
mov
push
jl
cltd
jle
movsl
mov
dec
into
mov
repz
divb
ret
lds
mov
lods
sbb
stos
adc
ja
mov
inc
push
mov
dec
inc
in
or
test
xor
nop
mov
xor
divl
add
aaa
push
out
push
ss
ret
adc
mov
mov
cmc
repnz
pop
outsl
fbld
inc
lahf
fnstcw
ja
cmpsb
lahf
cmp
pushf
rcrb
and
scas
cmp
adc
sub
lods
xchg
js
in
pop
nop
lods
pop
add
or
mov
int3
enter
rcrb
ja
js
or
add
int3
repz
push
cmpsl
dec
mov
mov
and
inc
inc
mov
scas
cmp
data16
cli
push
adc
push
mov
xchg
bound
sbb
idiv
imul
mov
inc
jmp
cmpsb
shll
hlt
sub
stos
es
sub
push
call
xor
jno
push
bnd
pop
push
mov
cli
and
loope
daa
negl
push
inc
mov
out
xchg
lods
mov
xlat
xlat
fwait
hlt
pop
lret
add
rorb
jecxz
sbb
mov
add
and
shl
lret
mov
test
es
call
out
sbb
aad
jb
in
aas
pop
add
xchg
mov
cmp
ficompl
out
adc
jp
cmp
ret
jno
and
and
pop
xor
xchg
xchg
mov
ljmp
xlat
or
or
jecxz
xchg
call
sbb
fidivrs
cltd
loopne
out
test
jg
and
mov
dec
dec
pop
pop
sbb
out
pop
lods
mov
push
scas
lods
jno
inc
jno
cli
fstps
xor
call
jge
sti
loop
pusha
sub
ja
xchg
cmp
or
xchg
dec
mov
add
outsl
out
mov
addr16
lds
mov
lea
inc
sbb
dec
adc
into
mov
xor
in
fcompl
mov
stos
push
imul
inc
hlt
test
pop
hlt
mov
xor
sbb
sub
not
in
dec
add
xor
sti
add
enter
ficomps
add
adc
popf
or
inc
ret
int
mov
adc
fldt
fwait
sub
push
cmp
lret
stos
cld
shlb
jo,pn
push
mov
mov
push
mov
stos
sub
scas
pop
fldt
add
jg
inc
dec
out
arpl
add
sbb
adc
cmp
js
xchg
mov
aaa
jo
add
mov
sub
jecxz
pop
das
cmp
and
xchg
cmpxchg
push
mov
loope
pop
fsub
iret
lret
loop
sbb
test
ds
cmp
frstor
lcall
int3
jb
loope
popf
mov
bound
push
mov
xchg
cmc
mov
adc
sbb
jae
sarl
pop
sub
xchg
and
cmc
mov
es
test
inc
and
and
decb
lods
jge
movsl
or
dec
ds
fstl
shl
mov
inc
fwait
cmp
cmp
mov
inc
add
or
sahf
das
jmp
xor
roll
inc
mov
daa
add
jo
mov
jno
stos
push
jnp
clc
insl
into
sub
jg
cmpsb
or
push
stc
mov
out
js
adc
jg
sbb
jg
dec
dec
addr16
dec
scas
cmp
xor
pop
fisubrs
clc
jg
mov
sbb
lds
cld
sbb
hlt
push
stc
push
jae
fistpl
sbb
leave
aad
push
push
shrl
cli
popa
dec
push
add
xor
xor
inc
mov
pop
jecxz
call
pusha
mov
mov
je
mov
aam
mov
mov
fisubrl
repnz
je
sub
std
je
cmp
adc
push
daa
push
ss
jns
ds
mov
cmp
ret
out
into
test
fistpl
pushf
cmpsl
jb
ljmp
in
gs
sbb
mov
xchg
cmp
fcmovnu
out
ljmp
jle
mov
add
mov
cli
pop
cli
dec
sub
shrl
dec
cwtl
jmp
dec
fdivs
jne
hlt
xchg
mov
sbbb
fwait
inc
int
adc
popa
fldt
cmp
insl
cli
test
aaa
adc
mov
sar
add
xor
sub
gs
or
js
adc
movsb
push
out
dec
mov
dec
fidivl
adc
push
popf
pop
jae
push
xchg
xchg
xlat
test
cmc
adc
xchg
push
std
xor
mov
test
pop
scas
inc
les
stos
dec
sbb
in
xchg
mov
add
adc
add
lret
shrb
and
loop
testl
insb
mov
stc
sbbl
mov
jmp
add
add
rorl
int3
or
repnz
inc
push
mov
xlat
test
orb
pop
adc
jg
outsb
jns
jno
xchg
aas
fsubrl
ret
test
or
jl
into
adc
mov
mov
pushf
push
sbb
or
mov
and
xor
aad
ret
or
mov
and
pop
addr16
jo
repnz
loope
or
out
loope
loop
shrl
hlt
orl
inc
mov
enter
icebp
dec
das
xchg
fistl
cmp
mov
mov
xor
rolb
mov
incb
out
sub
dec
insb
push
mov
jno
push
pop
or
in
jle,pn
jo
inc
popa
popa
xor
scas
pop
xchg
cmp
xchg
subb
mov
mov
jl
push
jns
das
fildll
dec
insl
mov
mov
test
xchg
enter
mov
or
lds
ja
andb
adc
jo
cmc
adc
jmp
dec
mov
vrcpss
enter
data16
xor
pop
mov
lods
jmp
xor
iret
inc
pop
dec
mov
das
cmc
clc
in
adc
ljmp
mov
cmp
mov
add
push
popa
mov
add
dec
pusha
cmpsb
imul
mov
sbb
jae
push
mov
mov
add
pop
mov
clc
ficomps
and
ja
pop
adc
pushf
cmp
push
pusha
xlat
stos
xorl
sub
test
xor
pop
mov
mov
sahf
mov
ret
fs
and
mov
and
xor
adc
and
sarl
xor
shll
mov
xchg
mov
sbb
ljmp
aas
in
fildl
push
sub
push
mov
and
add
cld
fiadds
add
ret
push
cltd
stc
lret
and
mov
rcrl
loope
adc
lea
ret
push
pop
push
cmpsl
aaa
pop
mov
fdivrs
popf
shrl
mov
sbb
xchg
shl
pop
push
pop
lea
and
sbb
or
xor
repnz
add
lds
out
cltd
fsubrl
mov
adc
stos
add
xchg
in
repz
shl
cmp
cmp
insl
imul
mov
ja
jle
mov
inc
jb
sub
or
adc
sub
or
icebp
mov
aam
push
std
and
les
ds
loopne
mov
fwait
mov
mov
aad
mov
mov
je
mov
imul
movsb
enter
jle
fiadds
les
mov
test
or
sarl
inc
rcr
dec
jns
sbb
or
scas
scas
mov
stos
scas
push
js
inc
test
and
inc
mov
ljmp
adc
xchg
loop
xchg
fstpt
enter
mov
add
out
mov
xchg
icebp
inc
aas
mov
lret
cmpb
mov
or
insl
shll
xor
in
aas
arpl
cmp
fdivr
xchg
sub
stos
int3
mov
cmpsl
cmpl
jno
addr16
int3
sbb
or
push
sarl
pop
mov
adc
xchg
movb
popf
mov
push
and
js
hlt
adc
pop
xor
stos
and
pop
scas
xchg
js
test
cs
in
cmc
scas
stc
jns
push
jp
sahf
std
jmp
xchg
mov
xor
sbb
mov
dec
rolb
push
data16
popa
cmc
icebp
mov
jnp
cltd
ret
and
clc
jmp
into
outsl
xlat
mull
xchg
test
mov
push
lret
js
jle
shlb
sbb
negb
cmp
icebp
das
shlb
in
outsl
jle
scas
mov
push
hlt
in
daa
lock
push
jp
lods
stos
mov
loopne
mov
inc
jne
cmpsl
cmp
fwait
mov
andb
pop
aad
fldl
cli
rcll
jp
mov
and
and
sub
gs
push
add
mov
pop
ret
aad
clc
lret
insl
jns
mov
xchg
out
in
std
sbbb
icebp
push
mov
sbb
jno
inc
in
push
lock
mulb
sbb
sub
mov
mov
sub
push
sar
xchg
lcall
and
loop
mov
inc
cmpsb
enter
push
test
pop
inc
pop
mov
dec
std
out
xchg
in
inc
and
jecxz
das
sti
iret
jne
sbb
out
jp
lret
popf
pop
pusha
jg
out
popf
mov
or
and
inc
mov
loopne
int
jb
pop
jl
lock
das
notb
inc
mov
or
cmpsl
rolb
ret
and
rcrb
mov
popf
int3
repz
fcmovnb
mov
stos
ret
je
lock
stos
cs
lahf
xlat
sbb
in
mov
aad
lods
mov
sbb
js
jno
cli
mov
push
arpl
cmc
lea
sub
aam
cmp
lds
mov
out
imul
lcall
xor
mov
scas
sub
or
addl
adc
push
imul
inc
fidivrl
adc
dec
xchg
push
test
xchg
loopne
daa
ds
orb
cli
adcb
ss
scas
jl
loopne
subl
inc
faddl
adc
sahf
add
scas
int
add
call
xorb
mov
push
mov
push
and
in
sub
cltd
jne
jg
pop
dec
movsb
jecxz
loope
push
adc
les
popf
fmuls
in
out
les
sbb
icebp
cltd
or
jb
sarl
movsl
aam
sbb
sbb
insl
jle
loope
adcl
pop
imul
rclb
inc
push
jp
add
iret
cmp
cmc
mov
sub
loope
cwtl
dec
ret
sbb
push
movsb
push
sub
push
xchg
gs
xorb
fnsave
sbb
je
fwait
jge
int3
add
addr16
adc
popa
cmp
mov
sub
jl
cmpps
scas
cmp
inc
call
cmp
popf
or
test
stos
lds
xlat
adc
xchg
dec
xchg
loope
dec
inc
inc
popf
adc
movsb
ficoml
fimull
lods
sub
imul
mov
fidivrl
lret
test
mov
call
mov
add
mov
sti
cltd
andb
pop
repz
jmp
cmp
sbb
xchg
adc
ret
dec
cmp
loop
xchg
out
mov
or
ret
fstps
dec
fstl
jns
filds
xlat
xor
repz
inc
mov
or
xchg
jbe
adc
ret
push
cmp
loopne
loope
daa
inc
aaa
mov
lods
lods
dec
and
lods
xchg
mov
aaa
aam
push
push
push
dec
stos
loopne
pushf
or
inc
fmull
push
sub
mov
movsl
pushf
ds
xor
lahf
mov
cli
sub
js
loopne
lahf
mov
repz
mov
aam
mov
push
fcompl
repz
in
sub
inc
fsubrs
movsl
imul
repnz
mov
push
daa
inc
sbb
pop
fdivp
es
xchg
loopne
xorb
leave
push
pushf
cli
loope
and
jp
repz
aad
pop
sbb
cmpps
mov
mov
pop
faddp
repnz
jbe
and
dec
test
bound
mov
cld
mov
sbb
jmp
push
mov
faddl
sub
dec
sub
fnstcw
inc
and
sbb
inc
popf
fcmovb
stc
and
mov
inc
add
clc
sub
push
dec
inc
add
cltd
aas
cmp
adc
push
negl
mov
pop
or
lods
jp
xor
fildl
movsb
out
lods
pop
out
repz
pop
mov
xor
mov
mov
mov
int3
sbb
pusha
and
in
stc
and
or
add
shll
std
xor
loope
inc
mov
ret
pop
leave
clc
pop
dec
xor
into
imul
mov
shrb
jns
incb
jnp
lret
bound
pop
or
idivl
repz
xor
add
lcall
in
adc
mov
iret
pop
repz
call
inc
add
movsb
cmpsl
incb
xchg
aam
outsb
xchg
adc
repz
dec
jl
pop
insl
outsl
inc
or
test
daa
nop
jo
or
pop
inc
mov
in
mov
shr
cmpsl
sbb
add
in
fldenv
pop
hlt
ljmp
inc
insl
xchg
dec
or
and
rolb
mov
stc
pop
inc
inc
fdiv
add
jbe
xchg
xor
push
ret
mov
pop
enter
xor
movsl
lea
dec
es
mov
into
pusha
push
mov
outsl
inc
xchg
and
jns
push
out
mov
push
dec
or
ljmp
leave
sub
es
cmpsb
loope
int
addr16
ss
add
ret
mov
xchg
call
shl
les
mov
ret
mov
push
and
mov
sbb
mov
jo
pusha
sub
je
pop
inc
xor
push
arpl
pop
hlt
xor
jne
fcmovnb
dec
push
pusha
sub
mov
sarl
ss
pusha
cmp
test
xchg
scas
jp
in
pop
dec
fidivrs
xor
xor
and
fs
and
scas
lods
movsl
mov
mov
dec
jno
xchg
insb
mov
gs
and
pushl
sub
dec
jb
iret
sahf
mov
and
or
or
ds
adc
jmp
cmc
jle
fxch
outsl
push
push
add
rclb
mov
fcmovne
stos
jo
jle
maxss
xor
dec
fisttps
std
mov
lock
addr16
shll
fnstsw
dec
pop
lock
push
fs
jge
push
mov
mov
loopne
mov
jb
imul
mov
stos
jle
lcall
into
mov
jb
out
rol
xchg
jl
inc
js
jbe
dec
orl
xchg
shlb
cmp
int
cwtl
xor
push
xor
sbb
lods
cmp
test
lods
in
sub
inc
daa
inc
fwait
in
leave
mov
dec
inc
loop
lcall
pop
adc
loopne
iret
inc
call
js
dec
sti
xor
cmp
xor
pop
adc
clc
dec
icebp
std
call
add
xchg
pop
mov
dec
dec
aad
inc
test
pop
std
and
push
push
jmp
prefetch
add
sbb
mul
xchg
add
jnp
popa
sbb
jnp
inc
push
hlt
xchg
mov
jl
mov
arpl
mov
xor
pop
dec
lods
add
pop
jg
push
xor
jmp
mov
jne
mov
pop
lock
roll
push
and
enter
add
mov
cwtl
pop
and
pop
insb
xchg
xchg
loopne
pop
dec
xor
mov
divl
adc
xchg
adc
xchg
add
jo
push
fnsave
test
mov
ja
xchg
movsb
dec
mov
fs
sarl
orb
fisttpll
sbb
pushf
push
fidivl
cmp
jo
adc
jnp
push
scas
ret
cmc
mov
xor
dec
pop
popf
adc
jmp
mov
subl
adc
test
cmp
or
clc
cmp
xchg
pop
in
xlat
fprem
and
inc
int
push
and
gs
addr16
sbb
mov
or
sub
mov
fwait
add
or
lock
xor
push
push
pop
xchg
scas
out
or
xor
hlt
ud1
push
adc
inc
out
wbinvd
stc
std
decb
repz
cli
out
les
xchg
leave
fucomi
adc
pushf
dec
cs
inc
setno
ss
add
xchg
or
or
nopl
int3
scas
sub
popf
adc
jne
lret
jbe
jo
or
shrb
xchg
rclb
rcr
mov
jo
mov
xor
aad
sub
jns
pushf
repnz
adc
jnp
sbbl
push
add
inc
or
scas
push
out
lock
sti
lock
push
mov
lret
sub
test
cmp
mov
sub
cs
cmp
sbb
mov
xchg
test
fcomi
ret
mov
ds
mov
or
and
into
imul
negb
scas
lea
xchg
xor
std
das
call
in
mov
dec
and
cmpsl
push
push
nop
push
push
mov
scas
imul
jbe
lds
int
cmp
leave
mov
cmp
dec
mov
adc
movsb
hlt
jo
cli
adc
or
ljmp
mov
dec
adc
jg
scas
negb
mov
mov
mov
popa
mov
cmpb
xchg
jnp
setp
and
test
pop
pusha
dec
divb
aaa
xchg
xchg
inc
clc
xchg
adcl
adc
nop
xor
cli
mov
outsl
pop
icebp
out
movsb
or
jae
dec
xchg
jb
fdivr
push
add
call
xor
xlat
mov
jae
loop
scas
dec
pop
inc
ds
mov
xchg
push
sbb
ja
mov
push
mov
mov
or
dec
push
xor
out
xchg
xchg
cmpsb
es
add
pushf
mov
mov
mov
dec
sub
filds
sub
adc
mov
cmp
fs
mov
dec
push
mov
or
sub
or
dec
icebp
out
push
mov
push
ret
sub
popf
popa
fsubrp
imul
negb
add
fidivrs
adc
jg
lds
loop
mov
cmpl
pushf
mov
data16
loop
movsl
pop
mov
mulb
filds
popa
mov
fisubl
cmc
pushf
sbb
and
lods
stos
jno
jp
lret
cmp
mov
mov
mov
cmp
jne
mov
cmp
rolb
adc
ja
pop
sahf
mov
in
ds
adc
or
clc
sahf
pop
push
sti
int3
jb
out
pop
lret
aad
scas
add
push
cmp
xchg
shrl
mov
cmp
jmp
cli
popa
and
loope
dec
jns
pushf
mov
scas
push
test
loopne
lcall
mulps
inc
sbb
es
inc
pop
pop
jle
imul
mov
pop
mov
cwtl
mov
mov
or
inc
adc
shll
pop
jae
and
add
insb
negl
daa
fwait
outsb
pushl
xchg
loope
pop
test
clc
movsb
mov
mov
pop
shll
rolb
mov
aad
into
lds
mov
push
pop
lahf
lods
stos
pop
repnz
pop
ljmp
outsl
fs
ds
nop
inc
pop
ret
xchg
mov
aaa
fchs
sub
fstpt
scas
xchg
mov
testb
push
je
pushf
xor
cmp
mov
ss
add
sub
lds
add
jg
push
lahf
push
and
and
mov
adc
jecxz
fcoms
mov
pop
and
add
mov
jb
movl
sub
cld
fisubrs
xor
mov
popf
xchg
repz
loope
mov
lea
jne
into
xchg
dec
xlat
insb
mov
fucomi
cs
das
mov
cmpsl
push
lret
lock
mov
pop
in
dec
outsl
ficoml
rorb
pop
lods
cmpsb
mov
iret
and
push
imul
pop
popf
sbb
js
push
xor
xlat
xchg
pop
mov
out
clc
aam
pop
push
jmp
imul
mov
insb
sarb
jnp
movsl
leave
mov
mov
das
cld
xor
lods
xchg
jnp
mov
bound
cmp
cwtl
dec
cltd
push
rcrb
out
xchg
jle
sbb
test
mov
cmpsb
mov
mov
cs
lds
popa
add
movsl
ja
adc
mov
push
sarb
std
lock
adc
cs
hlt
cmp
jo
loop
jmp
lahf
pop
sti
clc
test
inc
aas
cmp
jnp
outsl
jmp
les
cwtl
mov
xchg
lods
out
mov
sbb
inc
out
push
add
inc
xchg
jnp
ss
add
jl
xor
insl
ficoml
sub
imul
repz
push
mov
mov
pop
out
cmpsb
ds
sarl
xchg
xor
data16
dec
sbb
insb
iret
jmp
outsb
pop
icebp
push
xlat
inc
dec
jecxz
jmp
and
cmpsl
clc
sbb
xor
xchg
and
call
xor
js
test
movsb
inc
cli
stc
cmp
fisubrs
cmp
into
xchg
cmp
sbb
lds
pushf
sub
lahf
mov
jno
popa
add
xchg
inc
mov
loop
sub
movsb
andb
lcall
mov
cmp
jecxz
inc
shl
je
and
sub
rorb
add
das
lock
mov
ljmp
xchg
pop
lcall
ds
repz
out
sub
sbb
xor
mov
cmp
mov
aad
movsb
and
std
movsb
pop
sub
divb
pusha
xor
shl
pop
insl
or
loop
or
push
and
mov
mov
inc
and
jae
and
in
fwait
xchg
add
xor
sti
idivl
sub
outsl
loopne
das
mov
pop
scas
mov
mov
mov
fnstsw
or
jl
cmpsb
mov
jo
adc
push
pop
pusha
jnp
lcall
add
xchg
pop
pop
pop
cmc
lret
stos
pop
shrb
testl
mov
jmp
test
cwtl
or
aam
imul
repnz
mov
imul
pandn
call
loope
inc
outsb
dec
shll
lock
stos
out
add
push
pop
push
movntps
fidivs
fcmovu
daa
jl
aaa
popf
test
xchg
xchg
or
in
adc
push
inc
or
imul
dec
repnz
icebp
xor
shll
and
adc
push
mov
and
jne
lret
sbb
in
mov
in
insl
cmc
je
dec
icebp
mov
data16
pop
sub
ds
sbb
cmp
dec
adc
mov
jle
dec
adc
dec
sbb
mov
sbb
lea
sub
xchg
xor
pop
mov
jmp
lock
jae
mov
lcall
inc
xor
adc
sbb
or
out
dec
cmp
mov
jno
in
cmp
lcall
dec
mov
push
cli
mov
cmp
cmp
ficomps
movsl
popa
jnp
iret
adc
xor
cmpsb
loopne
out
bound
jg
in
out
clc
pop
dec
xchg
mov
btr
jnp
push
call
push
pop
xor
and
fisttpl
int
and
mov
ret
xlat
daa
test
ret
sbb
sub
repnz
inc
std
mov
mov
add
cmp
movsb
xchg
jbe
popf
adc
sti
mov
or
or
in
ss
xor
push
clc
cld
nop
addr16
inc
jmp
pop
mull
mov
mov
pop
pop
pushf
mov
xchg
adc
leave
mov
xor
xchg
jl
jae
aam
sbb
lods
call
mov
fimull
cmpb
sub
sbb
xor
je
data16
push
add
lret
enter
and
pop
lmsw
push
cli
add
or
loopne
jne
add
fistps
mov
sbb
pop
cmp
ret
aas
xchg
push
aad
xor
push
mov
lods
ja
mov
aad
sub
outsl
add
test
xchg
scas
xchg
jne
cld
or
fcompl
xchg
adc
dec
adc
adc
mov
cld
pushf
bound
dec
xchg
rorb
sub
and
cmpsl
pop
fwait
out
fldcw
fidivrl
lds
fcoms
xchg
pop
je,pt
movsl
or
mov
add
jmp
cwtl
aaa
test
andl
jnp
adc
mov
dec
and
out
sbb
pop
mov
mov
push
sub
add
fidivl
xchg
add
in
lods
shlb
or
pop
mov
lahf
sub
mov
sbb
pop
jmp
hlt
in
pushf
cwtl
jae
jbe
cwtl
les
and
imul
imul
daa
data16
cmp
mov
push
sti
lret
ret
mov
xor
or
loope
sub
push
push
inc
xchg
xor
movsb
jmp
and
lcall
dec
jecxz
sti
xor
data16
ds
dec
aas
mov
cltd
hlt
jbe
xor
fs
scas
lea
in
jae
lea
movsb
sbb
inc
addr16
aad
ficoml
fwait
adc
js
and
sub
mov
xchg
in
or
and
iret
mov
fs
inc
int3
jle
mov
dec
mov
sbb
icebp
pop
loop
mov
push
int3
xor
inc
or
cmp
inc
jae
mov
ss
es
jge
and
pop
stc
aaa
mov
pop
xchg
ds
mov
addr16
cmp
adc
lret
mov
xchg
push
adc
xchg
push
mov
cmp
xor
cli
mov
rcrb
test
enter
fxch
or
test
lret
pop
or
jnp
scas
mov
into
sub
clc
in
jbe
rcrl
mov
loop
mov
add
cmp
lock
std
inc
push
push
xor
xor
loopne
fidivl
adc
mov
and
xor
mov
inc
pop
adc
and
lcall
inc
sub
xlat
or
rorb
mov
icebp
cmc
inc
into
clc
insb
out
nop
popl
aaa
and
daa
pop
clc
mov
movsl
push
jg
jne
clc
ret
sti
fmuls
ljmp
adc
fimuls
in
fcmovu
pushf
jmp
mov
adc
roll
pop
adc
dec
pop
add
movl
ficoms
addr16
scas
and
adc
aam
mov
inc
out
ss
repnz
add
cld
testb
daa
inc
push
fdivp
mov
push
decb
cltd
pop
xchg
mov
dec
orl
ret
enter
data16
fisubs
fidivrl
fistpl
add
and
sbb
dec
fisttpll
repz
sbb
mov
pop
sbb
xchg
or
mov
stc
test
inc
or
mov
mov
sbb
jnp,pt
xlat
aam
xor
fadds
movsb
aam
cmpl
jns
lret
pop
mov
mov
adc
mov
mov
xchg
mov
bound
ret
fisttps
and
cwtl
cmc
gs
ljmp
cld
mov
pop
cmc
or
mov
lods
dec
push
xchg
adc
inc
imul
fwait
repz
mov
inc
in
pushf
jle,pn
in
ret
repz
push
decb
scas
outsb
inc
scas
mov
adc
or
rclb
lods
pop
pop
cs
inc
xor
mov
inc
cltd
push
inc
add
push
inc
jg
mov
sbb
push
xor
xor
mov
repz
mov
call
jle
pop
sbbb
scas
jecxz
mov
stos
push
nop
lret
lock
div
inc
xchg
mov
and
scas
push
loop
loope
or
test
fidivl
xchg
nop
and
test
xor
push
sbb
cmp
lock
xchg
test
in
testb
out
int
xor
loopne
or
rcll
cmp
mov
mov
insb
aad
imul
pop
xlat
lods
jne
int
dec
mov
xchg
sbb
shll
xchg
push
sahf
or
cld
je
mov
mov
xchg
sbb
subb
repz
loopne
and
enter
mov
mov
cld
int
testl
inc
test
sahf
nop
push
ss
lods
cmpsl
mov
jbe
pop
shll
adc
bound
mov
rcll
inc
mov
rcr
jle
jle,pt
inc
cmp
insb
subl
xchg
cmp
int
cmc
add
xchg
call
jge
and
mov
out
mov
fldcw
xor
jnp
jno
icebp
mov
pop
stc
sub
jno
fists
xchg
ja
mov
lcall
cmp
gs
fisttpl
fnsave
and
and
loopne
adc
add
xchg
push
or
sub
lcall
jne
mov
add
cld
ja
jno
fstpl
fimuls
ss
in
xchg
mov
test
fimull
mov
fucomp
xor
add
xchg
outsl
test
fadd
mov
hlt
addb
xchg
or
lcall
push
jne
std
mov
mov
jl
xchg
adc
sbb
outsl
out
add
das
fmull
in
cwtl
push
out
xchg
push
pop
lds
dec
out
pop
inc
xchg
cmp
fildl
out
jns
sarb
push
add
push
popf
movsl
cmpsl
xorl
bound
hlt
int3
shrl
mov
mov
sbb
mov
jl
mov
push
and
adcb
jge
fbld
outsb
and
inc
test
movsl
jge
push
into
push
gs
xor
pop
mov
sahf
int
subb
push
or
aas
das
push
mov
bts
pop
stc
les
xor
vpmovsxwq
dec
loope
and
mov
lods
adc
add
jo
shl
sub
sub
movsl
push
sbb
jp
mov
inc
shlb
sub
cmc
lea
jl
mov
inc
lea
inc
outsb
jae
das
mov
jno
push
cmpsl
dec
fcomps
and
inc
aas
shlb
mov
in
out
sub
insl
push
mov
add
insb
shlb
in
mov
cmp
push
jo
mov
popa
and
cmp
push
push
pop
stc
mov
mov
adc
mov
fisttpl
cmp
mov
jecxz
jle
or
mov
xchg
fwait
dec
aad
popf
jecxz
testb
into
pop
insl
gs
jb
test
mov
jne
mov
pop
jecxz
int3
cmpl
inc
loopne
mov
cli
nop
and
sbb
mov
mov
fs
mov
sbb
mov
cmpsl
cs
stos
mov
push
call
ret
into
and
nop
inc
pop
pop
dec
mov
sti
xor
push
mov
dec
and
mov
outsl
outsb
enter
dec
mov
cmp
lods
push
xchg
into
inc
dec
fsubrp
jl
fistpll
addr16
sbb
lds
inc
jns
jns
xchg
add
sbb
mov
cld
repz
punpcklbw
movsl
xor
mov
aad
aam
sub
push
fisttpl
dec
pop
mov
xor
and
jg
iret
jle
cmc
xor
xor
std
dec
scas
cmp
mulb
sbb
pop
lods
je
out
andb
insb
xchg
imul
lea
push
pop
mov
out
in
sbb
mov
and
mov
adc
mov
lret
and
jecxz
and
outsb
aas
paddq
lods
jl
cmpsl
in
push
dec
lods
pop
push
shrb
xchg
dec
lret
push
shl
cmp
jg
jmp
jecxz
cld
testb
test
jb
adc
pop
lret
les
bextr
pop
xlat
pushf
cmpsl
and
mov
outsl
rolb
stc
mov
fsub
xlat
jge
xchg
dec
loop
jns
je
push
loope
push
mov
imul
je
mov
fcmovne
incl
ss
lahf
outsl
imul
sub
ss
and
lea
into
aas
cmp
addr16
mov
fimull
stos
shlb
pop
push
mov
xchg
rcrb
je
jle
rorl
frstor
xor
adc
lret
fcmovne
add
cli
inc
mov
jp
loope
pop
cli
pop
nop
mov
add
loope
inc
movsl
mov
dec
jne
mov
jle
std
pop
pop
les
adc
jb
fisubl
in
lods
imul
push
cmp
mov
fldcw
test
jle
aas
mov
cmp
daa
lahf
scas
add
cmp
and
mov
and
sbb
ja
cmp
cld
or
int3
outsb
and
mov
pop
cmp
cmc
xchg
or
inc
xlat
repz
xor
mov
xorb
int
imul
xor
push
ljmp
mov
adc
dec
pop
cmc
jo
jmp
pop
mov
xchg
mov
sbb
inc
mov
insl
push
cmc
cs
push
push
pusha
aad
dec
and
jg
mov
xchg
add
fst
jb
ja
push
data16
push
insl
filds
add
mov
lret
pop
or
hlt
fsubl
mov
jecxz
mov
cmp
lods
inc
std
lea
inc
or
or
inc
and
imul
jge
testl
mov
aad
sub
cld
mov
repz
imul
aaa
repz
push
cmpsb
fstpt
jnp
jae
jns
adc
mov
dec
fsubrl
xlat
mul
or
cmpsl
sarb
fxch
pusha
cld
ja
pop
lea
out
xorb
adc
dec
cmp
stos
enter
clc
lcall
fwait
inc
inc
mov
sub
shlb
dec
add
fsubl
jno
jae
mov
out
and
or
mov
mov
dec
pop
push
cs
cmp
int
mov
mov
lea
fdivl
inc
inc
or
lahf
mov
dec
jge
mov
inc
mov
xor
jo
mov
out
cmp
adc
or
gs
mov
or
icebp
stos
sbb
inc
inc
idiv
push
divb
dec
sub
push
ffreep
and
cmp
or
in
lret
ss
daa
cmp
out
std
mov
adc
add
adc
mov
aaa
flds
sbb
sarb
push
adc
outsl
mov
out
stc
dec
cmp
addr16
and
xor
and
jl
xchg
push
adc
and
pop
imul
push
push
std
sahf
into
loope
in
lea
das
push
push
xor
out
pusha
dec
mov
repnz
cmp
jns
mov
stos
sbb
sub
mov
ljmp
sti
sbb
inc
cltd
ja
mov
and
mov
inc
negl
cmpsb
push
int
add
jo
sub
cld
outsb
shll
dec
or
jae
data16
lds
dec
fstl
ror
std
in
xchg
ja
orb
mov
aam
mov
ss
cmpsl
pop
clc
fmuls
popf
jmp
inc
div
lods
lock
push
jbe
xchg
xchg
adc
fs
xchg
mov
imul
cmp
mov
arpl
push
mov
sti
in
xor
pop
call
mull
mov
sub
inc
rolb
stc
mov
jae
mov
jmp
pop
inc
ret
push
or
jno
mov
and
lds
jne
pop
flds
iret
mov
dec
call
fld
mov
aaa
cmp
into
imul
mov
pop
ja
dec
push
push
cltd
xrelease
or
dec
jmp
call
enter
and
daa
xor
aas
test
jmp
aad
adc
addr16
mov
addr16
mov
cmp
imul
sar
sub
inc
insb
and
xchg
ficoml
sub
and
xchg
sarl
arpl
mov
roll
cmc
ds
fbld
bound
loop
mov
imul
add
jp
cld
sbb
inc
outsb
jmp
mov
xlat
popa
pop
or
and
jns
adc
roll
sbb
out
sub
inc
push
loop
mov
out
inc
sub
mov
mov
lods
ja
arpl
sahf
mov
aad
iret
jl
push
das
xchg
cmp
xlat
int
inc
pop
in
fidivs
idivb
lods
jo
cld
out
cmp
test
or
in
lahf
inc
lcall
jle
mov
into
jl
test
rclb
jp
testb
int3
popf
cmp
rcrl
pop
gs
lea
sub
and
pop
cmp
and
adc
xchg
add
pop
loopne
repnz
iret
xor
xchg
xchg
sti
aaa
fsubp
xchg
mov
sub
jge
adc
mov
sub
push
repnz
mov
int3
ret
add
test
insb
fstp
jmp
mov
adc
movsb
jns
pop
mov
push
sarl
push
push
add
fists
xchg
push
clc
xor
pop
scas
jge
scas
jbe
pop
push
mov
fistps
fcom
ja
push
js
adc
xchg
adc
ljmp
push
sub
in
fidivrs
adc
pop
jo
call
das
sub
fxch
insb
add
jne
sub
xchg
dec
dec
or
xor
pop
cmp
dec
dec
push
pop
xchg
adc
jne
aaa
sahf
cld
lahf
rclb
jns
ds
dec
and
popa
movsl
xor
std
pushf
imul
jg
fsubp
xchg
pop
mov
iret
mull
dec
fwait
xor
mov
mov
inc
mov
and
cmp
cmpsl
jmp
aam
into
repz
jb
cmpsl
leave
add
xor
cmc
mov
mov
push
and
stos
cli
cmp
cmp
jbe
dec
xor
mov
and
imul
int
pop
xchg
scas
pushf
xchg
add
pop
xchg
rcrb
into
sbb
das
fstl
outsb
add
push
add
add
pop
stos
mov
add
test
loopne
ds
mov
xor
test
shll
add
cmp
pop
divb
imul
xor
fimull
orps
cmpsb
pcmpeqd
stc
dec
xor
push
add
jle
xchg
enter
or
sbb
lcall
stos
inc
aad
outsl
addb
add
mov
push
or
mov
repnz
lods
jno
je
aas
shll
in
stc
in
incb
loope
mov
xor
ficompl
into
dec
out
inc
iret
andl
xor
inc
cmc
jne
les
mov
in
cmpsb
int3
push
sub
cmp
dec
sub
or
frstor
pop
mov
mov
pop
mov
mov
cmp
cmp
push
out
push
and
ret
pop
call
mov
inc
xor
cmp
mov
insb
sarb
pop
mov
or
cs
stos
push
jb
add
jecxz
xchg
cltd
les
jnp
out
fiaddl
stc
push
push
mov
sti
sti
dec
outsl
out
adc
stos
insl
xlat
in
mov
popa
out
mov
lock
ret
sarb
movsl
xor
je
ljmp
and
add
scas
pushf
cli
popf
iret
or
mov
les
shll
dec
leave
add
xchg
fstps
xchg
std
pop
addr16
cli
shrb
outsl
fstps
jp
inc
xor
inc
mov
movsb
pusha
flds
mov
sub
push
rcrl
add
lret
jecxz
mov
mov
xchg
mov
dec
or
ljmp
cmp
push
fsubp
or
lock
into
dec
mov
inc
adc
mov
stos
test
mov
and
cmpsl
add
scas
pop
daa
repnz
pop
ljmp
sbb
sbb
add
xchg
pop
add
jns
mov
lods
pusha
jecxz
test
pusha
mov
pop
js
jg
loopne
xchg
jns
push
adc
mov
aam
das
jg
fcompl
inc
dec
mov
cmp
enter
inc
cmpb
stos
mov
pop
int
cmp
repnz
xchg
inc
rclb
jecxz
in
adc
mov
sub
inc
test
push
and
ss
or
pop
add
pop
arpl
sub
add
mov
inc
xlat
inc
pop
push
cmp
movsb
pop
mov
in
test
jg
xor
xchg
mov
mov
inc
push
adc
sub
faddl
ret
fsts
call
jb
shrl
push
push
fisttpll
add
adc
mov
mov
inc
lahf
aad
frstor
std
data16
jnp
roll
into
jle
in
arpl
imul
repz
xor
and
shlb
pop
fdivl
out
iret
shrl
loop
sbb
push
jno
mov
jmpw
fstps
jnp
aaa
xchg
popf
jno
jbe
mov
push
loopne
jp
mov
dec
cmp
insb
adc
gs
dec
jnp
aad
xor
into
js
stos
mov
pop
je
pop
fwait
int
mov
dec
ja
push
inc
lahf
mov
mov
push
cwtl
xor
push
outsb
and
push
jmp
xchg
cmp
mov
push
xor
xor
cs
add
stos
movsb
push
cmp
sub
sbb
dec
mov
cld
jae
leave
or
lock
add
mov
pop
add
or
arpl
fisttps
cmp
push
pop
push
stos
das
xchg
dec
push
fstl
int3
ds
cmc
and
mov
gs
cmpsl
push
test
outsb
je
inc
and
push
addr16
jns,pn
repz
cmp
xchg
daa
xor
fcmovbe
xchg
mov
push
shll
sub
push
mov
sti
test
push
cmc
sub
lods
mov
cmc
adc
cmpsl
xchg
fwait
push
addr16
fucomip
jge
fs
sub
push
sbb
test
mov
insl
int
outsl
cmp
dec
outsl
cmpsb
sub
jg
stc
mov
add
pop
and
int3
lcall
test
rcl
fstp
outsl
inc
fimuls
negl
sub
cmp
or
mov
popa
adc
inc
push
pop
dec
rcl
js
popa
mov
sti
inc
fiadds
sbb
aad
fistps
rcll
and
ljmp
mov
int3
movsb
std
push
ss
fcompl
bnd
movsb
ret
mov
pusha
jo
mov
out
into
subl
fcom
mov
xor
add
nop
cmp
lcall
pop
dec
inc
stc
pop
xchg
inc
leave
cmp
inc
lods
xor
insl
dec
inc
lea
push
test
inc
pop
cmc
and
mov
mov
ret
es
stos
and
mov
sbb
mov
repz
nop
adc
jae
or
scas
arpl
cs
fnsave
cli
lret
mov
pop
hlt
ret
sub
jle
rorw
outsb
jmp
add
mov
and
and
jg
divl
gs
mov
cmp
pop
xlat
xchg
mov
mov
xchg
fwait
cmpl
mov
je
shrb
clc
sbb
bound
leave
push
cmpsl
xor
clc
mov
sub
test
cmpsl
sbb
dec
pop
jno
jnp
fldln2
inc
inc
pop
imul
sbb
mov
pmaxub
xchg
in
cmp
jo
mov
pop
xchg
pop
sbb
sbb
push
icebp
fwait
subb
shlb
pop
dec
cmpsb
leave
xor
out
adc
xchg
inc
mov
push
sbb
push
cmp
call
imul
aam
ja
divl
pop
and
loopne
adc
sbb
sbb
inc
sub
shlb
adc
and
sub
js
xchg
repz
push
push
dec
cli
fcom
and
push
imulb
cld
loope
idivb
jb
inc
daa
jbe
lret
xlat
outsl
and
lock
adc
sbb
sbb
inc
pusha
mov
mov
adc
add
or
jge
fwait
mov
into
jbe
xor
mov
dec
in
lahf
jmp
add
sahf
pop
adc
pop
mov
movsb
adc
xchg
xchg
and
lahf
lret
mov
sahf
outsb
xor
sub
mov
mov
add
lret
std
outsl
jmp
dec
icebp
pop
das
mov
adc
subl
and
mov
shlb
orb
add
mov
popa
loop
xchg
std
mov
mov
gs
aad
push
lcall
jo
or
xchg
mov
mov
shl
xchg
push
lahf
sbb
test
cmpsb
dec
les
stc
js
lods
push
jp
int3
xchg
pop
inc
into
xchg
test
mov
jmp
cs
jb
sub
outsb
loopne
sarb
pop
lahf
mov
outsb
mov
fsts
fsub
cmpsl
or
xor
sub
xchg
mul
test
fcmove
adc
aas
sti
dec
out
mov
xchg
iret
loop
inc
loope
fldt
aas
mov
cli
icebp
jb
lods
stos
cs
and
cmp
sbb
mov
inc
push
test
sub
js
out
and
mov
out
and
aaa
ror
sub
orl
jo
nop
or
inc
adc
and
adc
mov
cli
jo
xchg
lea
pop
mov
mov
cld
fdivs
mov
ret
pop
xor
sbb
pop
cltd
mov
jb
dec
jb
popa
cltd
xor
call
dec
out
scas
into
jb
mov
dec
dec
add
cmp
mov
xlat
fs
in
mov
das
xchg
fwait
out
jno
xchg
mov
dec
mov
jle
pop
ret
mov
out
sahf
or
push
filds
cmc
fmuls
daa
xchg
adc
mov
adc
sub
jnp
mov
aaa
rorl
aas
add
mov
dec
movsl
and
sbb
push
dec
or
ds
adc
mov
sbb
dec
add
xor
fdivr
push
xlat
sti
dec
adc
mov
pop
stos
sub
adc
into
xchg
xorl
pop
push
adc
lahf
inc
mov
pushf
xchg
call
mov
fdivrl
xchg
inc
movsl
cmpb
call
pop
xchg
jbe
ret
jae,pn
push
addl
lock
push
int
add
mov
sbb
ficompl
push
pop
divb
out
push
or
lret
lods
mov
pop
rorb
xchg
xchg
fwait
cmpl
stos
fbstp
add
movb
mov
or
mov
inc
rclb
adc
aaa
ret
push
mov
loopne
push
xorl
inc
ret
daa
xchg
cmpsl
cmp
test
je
sbb
inc
fisttpl
fisubs
fidivs
mov
adc
push
out
jns
jmp
ret
sarb
jle
gs
cmc
mov
push
xchg
sbb
jne
and
pop
push
pop
pop
imul
and
xchg
divb
pop
bound
push
sbb
jg
out
pusha
jnp
push
xchg
push
inc
adc
outsb
sub
ss
into
sahf
das
out
std
mov
xchg
js
fwait
push
mov
or
test
xchg
mov
sbb
xchg
and
push
ljmp
movsb
iret
dec
xor
imul
loop
inc
icebp
add
or
lret
mov
rcll
daa
test
xchg
dec
scas
xor
subl
movsl
ljmp
fwait
push
out
ret
decb
mov
push
pop
sub
push
mov
test
and
dec
hlt
jae
pop
pop
cmpsb
mov
mov
shr
cmc
stos
and
adcb
je
jns
jecxz
add
pop
das
xor
mov
xchg
es
and
jge
mov
mov
call
add
mov
adcb
dec
inc
fchs
lea
lods
in
or
and
stc
cmp
jp
cmp
sub
jl
lret
ds
dec
pop
das
and
pop
ret
add
adc
inc
mov
pop
add
dec
mov
imul
jo
mov
outsl
shll
dec
in
adc
mov
xlat
mov
imul
pop
add
gs
aas
dec
dec
scas
sarl
cmpsl
xlat
xchg
enter
sub
cld
and
mov
dec
inc
dec
je
adc
sahf
mov
jae
xchg
mov
pop
ljmp
std
test
fisubrl
lret
xor
fdivr
cmp
sarb
cmc
enter
nop
xor
ss
sub
sbb
add
sbb
fnstcw
repz
mov
cmp
adc
cwtl
push
addr16
test
or
jmp
mov
push
cmp
cmp
outsl
sbb
jmp
jno
call
inc
stc
cmc
push
or
inc
je
lds
sti
xchg
in
movsb
jb
push
movsb
vphsubbw
xchg
cmpsb
popf
cmp
adc
sub
jnp
fldenv
imul
cmpsl
idivb
and
cltd
popa
sub
repz
push
ret
ja
push
sbbb
lret
jecxz
lahf
cli
pop
adc
jb
lock
in
fstl
mov
jle
push
inc
add
sbb
jae
push
lret
mov
cmp
out
push
js
lock
sub
mov
adc
sub
pop
push
arpl
mov
clc
jp
push
dec
inc
bnd
adc
out
jl
ficompl
add
jecxz
rcr
addr16
jo
mov
out
insl
loope
outsl
xchg
in
test
inc
and
xchg
jp
cmp
jmp
out
pop
push
dec
xor
and
bound
aam
cmp
mov
js
je
jns
push
test
sub
aam
cmpsl
sbb
insl
dec
cmp
les
mov
icebp
xor
fcomp
pop
mov
mov
sbb
cmpsb
cmp
sbb
mov
mov
aad
enter
sbb
xlat
lahf
lods
dec
stc
movswl
push
push
pop
push
movb
xchg
mov
ds
xor
insb
xor
push
xlat
push
fdivs
mov
jae
js
in
mov
fidivrl
xchg
pop
push
xchg
sub
fwait
push
lcall
add
xchg
dec
ss
data16
aam
stos
sahf
rcrl
xchg
push
cmpsl
dec
pop
repz
mov
test
pop
dec
scas
stos
mov
inc
mov
inc
int3
inc
xor
cmp
mov
adc
jecxz
cmp
cmc
jge
int
jns
in
and
ds
sarb
xchg
jecxz
popf
and
push
movsl
xchg
loope
mov
es
push
jnp
adc
sbb
aad
or
gs
xlat
sub
sub
jo
xchg
rclb
push
fstpl
lds
ljmp
sub
mov
nop
pop
sbb
cmp
je
and
xchg
insl
ds
ljmp
mov
scas
repz
mov
mov
cwtl
mov
sub
jne
fadds
xchg
enter
inc
jne
insl
or
xor
push
adcl
dec
lret
jb
pop
not
add
and
adc
cmpsl
fs
adc
inc
and
xor
mov
cmc
cld
insl
int3
xor
pop
jmp
stos
mov
popf
fcomps
cmp
and
xchg
je
xor
mov
jae
outsl
loop
mov
mov
pushf
fwait
lods
adc
js
jns
jae
loop
movsb
je
and
scas
and
push
pop
int3
fdivr
push
fcompl
push
jmp
outsl
sub
leave
xlat
gs
push
arpl
loop
sub
nop
fwait
inc
out
pop
rcrb
imul
out
loope
cmp
arpl
jecxz
xor
in
popa
inc
jmp
mov
lods
push
inc
les
mov
mov
into
push
xor
into
xor
insb
subl
and
mov
pop
addr16
fldcw
scas
cli
mov
loopne
sbb
xor
cmp
mov
popa
inc
xchg
int3
sbb
stc
popf
adc
imul
mov
lds
jecxz
xor
adc
dec
rcll
sbb
jae
iret
test
jae
imul
out
pop
push
inc
lret
aaa
imul
cltd
jmp
mov
loope
stos
sti
and
cmc
cmc
xchg
push
cli
push
negb
int
mov
adc
pop
test
sbb
inc
in
int
stos
pop
dec
dec
and
orb
sahf
imul
lret
divb
mov
or
mov
icebp
cmp
movsb
lods
dec
and
loop
dec
cmp
addr16
aam
cltd
out
addr16
lods
sbb
cmpsl
jnp
ljmp
bound
sbb
out
add
mov
test
and
mov
sub
or
aam
in
ljmp
mov
dec
push
sti
add
je
arpl
sub
inc
imul
mov
scas
adc
repz
fs
inc
insb
and
fisubs
jp
adc
mov
fistpl
std
enter
dec
or
into
xchg
and
testl
push
mov
add
adc
in
xchg
xchg
and
xchg
cmp
rolb
aaa
pop
das
aas
out
mov
jle
das
ret
testl
stc
mov
xor
scas
subb
pop
imul
or
sub
push
fldcw
mov
mov
out
mov
xchg
inc
scas
pop
ljmp
imul
loop
insl
lret
jno
push
ds
fdivrs
push
cmp
dec
bound
jl
sbb
jae
cmc
push
jecxz
mov
out
int3
or
inc
xchg
sar
ds
repnz
or
iret
sbb
or
mov
xchg
dec
and
scas
in
push
pushf
lahf
dec
flds
repnz
shrb
push
mov
adc
xchg
decb
xchg
pop
inc
addb
xor
push
call
test
sbb
lods
test
jecxz
xchg
jae
lahf
mov
int
fisubl
push
sub
pop
sub
sub
inc
mov
imul
push
jge
sbb
dec
shll
adc
addr16
dec
add
cmp
xchg
sti
data16
push
insb
jae
je
xor
cli
movsl
or
mov
mov
ja
sti
xchg
cmp
sbb
mov
lods
jp
das
cltd
ss
fsubrs
jmp
out
shl
xor
push
jmp
jb
dec
arpl
push
rcrl
xor
mov
jne
rorb
shll
inc
ja
repz
aad
jl,pt
repz
lock
out
imul
fdivr
sbb
repnz
mov
stos
xchg
stc
shrl
inc
cli
xchg
scas
xchg
jecxz
push
sbb
imul
sub
mov
cmpl
xlat
cmp
inc
orl
add
xorl
js
or
imul
dec
lret
idivl
mov
adc
and
push
adc
and
fdivl
adc
int
adc
repz
aas
sub
nop
pop
mov
jmp
push
xor
mov
jmp
std
xor
gs
insb
insl
mov
dec
fadd
outsb
mov
mov
inc
outsb
icebp
mov
push
inc
das
jne
xlat
clc
push
dec
and
shl
jo
mov
lods
mov
idivl
shrb
inc
and
jmp
loop
fcoml
jae
mov
pop
xchg
hlt
int
sbb
mov
sbbb
ja
fdivrs
dec
cmc
push
adc
push
imul
mov
mov
sub
repnz
dec
out
dec
aaa
sbbl
push
xchg
and
leave
in
sub
imul
jbe
inc
push
bound
inc
lods
dec
mov
cltd
xchg
and
push
push
or
inc
mov
cs
add
jmp
es
shll
dec
gs
ret
popf
in
inc
push
mov
in
add
jne
test
dec
xchg
xchg
out
lods
jg
adc
and
cmpsl
mov
movsl
in
sub
daa
sti
adc
cld
pop
inc
faddl
pop
push
out
je
rcr
cltd
call
cmp
fnstcw
movsb
pop
sti
adc
outsb
gs
aad
and
mov
mov
int3
ljmp
pop
mov
and
lret
xorb
loop
adc
sahf
loopne
mov
mov
jb
dec
sarb
aas
fdivl
js
pop
cmp
lcall
out
mov
ret
dec
lods
add
jl
icebp
inc
popf
inc
arpl
repz
inc
fcomip
jo
lret
cmpsl
lea
insb
xor
and
test
cmp
fmull
xor
cmpsb
mov
mov
sbb
cmp
leave
mov
adc
mov
fldt
ljmp
jae
push
jo
adc
xchg
pop
jp
imul
sbb
add
jnp
mov
mov
push
push
and
mov
and
pand
shrl
xor
mov
dec
mov
adc
fmul
mov
mov
pop
pop
pop
jecxz
xor
cmp
xor
cli
xor
outsb
mov
sub
lahf
and
lret
and
xchg
push
in
xchg
push
jl
pop
and
jno
in
xor
xor
pop
dec
cs
push
xchg
mov
xor
pop
test
addr16
dec
imul
add
mov
hlt
add
dec
or
xchg
mov
add
pop
mov
std
daa
ds
stos
sbb
sub
inc
hlt
inc
mov
jp
and
xchg
cmp
mov
or
sbb
xchg
push
dec
cli
mov
movsl
ffreep
mov
jmp
jl
into
shl
into
and
rcr
sti
add
fisubrl
lds
repz
cmc
jge
or
mov
aaa
out
mov
lods
icebp
sar
mov
out
push
cmc
imul
dec
or
mov
push
stos
lahf
sarl
or
lods
xor
mov
shl
pop
or
cmp
or
aad
js
repnz
mov
pop
and
jmp
popf
or
int3
and
pop
aas
popa
testb
ja
shll
jp
cwtl
inc
mov
add
xchg
out
inc
cmp
push
scas
fs
or
push
addb
mov
stc
mov
sub
sbb
inc
pop
jmp
xor
andb
xor
clc
pop
aas
add
lahf
sub
movsl
cmp
scas
fcmovnu
sarb
fnsave
jl
xor
inc
push
add
xchg
jo
sbb
xor
scas
jge
xor
mov
pushf
arpl
movsb
popa
mov
lcall
fmull
stos
push
sub
jo
mov
enter
xor
fwait
xchg
mov
jno
sub
sbb
jl
add
mov
jae
fs
filds
enter
int
sahf
loopne
dec
shlb
iret
jmp
add
cmp
mov
shr
int3
fdivs
jns
in
fisubrs
cmp
test
cli
aaa
sub
lds
rcll
mov
out
mov
shrb
sbb
and
pusha
cli
xchg
out
in
iret
push
push
xchg
xchg
lcall
lcall
popa
in
cltd
stos
xchg
fwait
loope
push
xchg
leave
int3
aam
fld
data16
dec
add
hlt
and
shrb
mov
or
ud0
jecxz
add
push
cmpsb
cmp
dec
aas
inc
sub
xorl
ss
fnsave
sbbl
add
xchg
lret
aas
leave
adcl
inc
sbb
push
push
or
sbb
js
in
aas
insl
sbb
jo
inc
hlt
in
adc
jmp
mov
jo
mov
jb
jmp
adc
jb
sbb
inc
or
sub
dec
add
lods
icebp
lret
adc
or
repnz
pop
fiaddl
rcll
stc
sahf
jo
scas
dec
clc
inc
and
fbstp
mov
test
into
es
insl
test
inc
shlb
jg
or
lret
mov
add
lods
mov
insb
and
xchg
test
lock
push
push
inc
xor
in
xor
jb
or
mov
add
or
mov
cmp
add
sbb
scas
jo
daa
mov
lea
scas
cmp
dec
data16
push
testb
inc
outsb
dec
adc
jle
jb
imul
jns
pop
mov
adc
nop
jbe
pop
push
add
adc
in
sub
jmp
pusha
push
mov
adc
rcr
add
jmp
jae
or
nop
and
lock
push
testl
add
jg
repnz
jecxz
adcl
cmpsb
arpl
lods
in
ss
pop
inc
inc
insl
sbb
dec
pop
xor
xor
in
movsb
cld
add
loopne
mov
add
pop
jbe
and
sub
in
popa
jo
cltd
pushf
pushf
jp
cmp
pop
pop
insl
outsb
mov
dec
negl
hlt
icebp
cs
jno
sar
stos
loope
push
jo
and
inc
mov
jnp
cmpsl
dec
or
jge
in
ja
sub
mov
dec
xchg
cmpsb
xor
lcall
mov
xchg
gs
pop
pop
sarb
push
sub
adc
jne
mov
pop
and
enter
push
jle
dec
and
adc
pop
repz
test
and
outsb
fs
or
inc
mov
jecxz
xchg
jae
xchg
inc
mov
and
ds
cli
repnz
sub
mov
nop
cmp
jmp
dec
jb
push
push
cltd
cmp
ljmp
or
scas
adcb
out
int
cmp
loope
loop
xchg
add
rcrw
scas
cmc
cwtl
push
mov
jl
and
into
and
mov
cltd
inc
adc
in
pop
dec
enter
je
sub
leave
repz
lock
pop
mov
and
cmp
cmp
testb
fiadds
les
cld
mov
inc
mov
dec
sub
lret
fimuls
sub
fsincos
je
clc
mov
jp
inc
mov
test
fimuls
dec
ret
nop
out
add
cltd
neg
add
and
ret
add
mov
xchg
jge
xchg
leave
fsubrl
lea
xorb
imul
out
adc
mov
rcll
leave
data16
fisubs
popf
mov
sbb
fnstsw
push
aas
loope
arpl
jg
dec
add
movsl
dec
jmp
aad
ja
adc
stc
and
notl
pop
cmp
push
test
gs
adc
xchg
cli
sbb
cltd
lea
loop
jne
and
out
cld
mov
iret
sub
cmp
pop
xchg
sbbl
shll
sbb
ret
in
xor
rol
mov
cld
out
into
movsl
ret
push
adc
pop
push
push
jle
outsl
jno
sbb
out
xchg
push
cmpsb
je
out
sub
repnz
cmp
out
scas
mov
adc
add
js
mov
pop
movsb
and
pop
cmp
movsb
fistpll
ja
sub
outsl
mov
cltd
sub
push
fwait
addr16
cmp
xchg
icebp
lock
inc
inc
push
xor
idivb
pop
adc
lock
js
cmp
cltd
sbb
jle
outsl
ret
rolb
lea
pushf
icebp
push
jo
clc
mov
jp
mov
testb
out
mov
into
scas
mov
inc
enter
stc
sub
xor
xor
lret
jno
mov
dec
xchg
daa
movsl
fidivl
call
stos
js
aam
test
jg
add
xchg
loopne
xchg
scas
in
lcall
movsb
jbe
jns
mov
push
adc
ja
lods
test
dec
movsb
mov
enter
and
xor
orb
ja
push
lahf
and
je
sbb
xor
inc
xor
lcall
add
mov
add
jo
mov
fnsetpm(287
sbb
push
addb
dec
outsb
aad
rcll
jb
jns
xchg
mov
hlt
in
shlb
push
sbb
push
enter
es
pop
push
mov
adc
insb
cmp
push
jnp
dec
les
and
call
insl
push
js
push
mov
iret
sub
out
adc
sahf
pop
sbb
movsl
dec
jp
test
push
add
jecxz
cltd
test
rclb
test
sub
insl
mov
sub
test
push
mov
xchg
dec
jae
cmp
test
cmp
mov
adc
ds
cmc
ret
push
and
dec
pusha
mov
ret
out
daa
mov
jns
xchg
cmp
mov
mov
xchg
cmpb
xlat
leave
mov
cmpl
jo
sti
mov
and
nop
jge
test
repnz
push
add
lcall
sbb
mov
out
push
or
sub
mov
rorl
aaa
add
mov
add
mov
mov
addr16
cmpsb
outsb
xlat
mov
je
xor
pop
jne
push
mov
in
idiv
sbb
out
mov
test
movsl
dec
pop
cwtl
sbb
mov
and
mov
cmp
divps
or
and
ss
outsl
cmp
bound
pop
push
mov
add
leave
popa
pop
lock
or
out
xor
addr16
fcomip
clc
clc
adc
add
aas
pop
jge
scas
mov
mov
cmp
sub
xor
xchg
nop
stc
cmp
fwait
add
xor
pop
cltd
fscale
mov
cmp
ret
push
jnp
sbb
pusha
xchg
dec
lock
pusha
dec
outsl
cmp
mov
mov
xlat
xchg
adc
inc
push
or
push
pop
xor
jne
dec
mov
enter
out
js
clc
rorl
cmp
mov
or
pop
ret
ret
sub
jle
mov
pop
sbb
movsl
mov
cmp
nop
mov
push
roll
out
adc
adc
push
mov
ja
in
pushf
mov
push
inc
lods
mov
stos
mov
rol
push
and
or
add
push
insb
xchg
xchg
push
dec
mov
mov
cmp
jne
ficompl
jecxz
cmp
jge
sub
imul
xchg
mov
xchg
xchg
loop
push
dec
cs
insb
jp
divl
rcrl
imul
lret
cmp
in
fs
mov
mov
mov
xor
aam
ljmp
jle
test
rcl
rcl
cmp
xchg
scas
push
nop
sbb
xchg
sbb
add
push
xorb
movsb
iret
push
and
push
mov
pop
insl
repz
inc
std
cmpl
out
mov
sbb
les
ljmp
bound
inc
jnp
push
mov
push
testl
clc
mov
sub
sbb
ljmp
mov
mov
dec
aaa
jb
xchg
testl
lods
mov
pop
jl
mov
xor
add
ds
push
mov
jecxz
mov
fimuls
push
add
mov
arpl
lods
push
mov
hlt
cltd
pop
push
lods
push
pop
movsl
clc
in
jmp
fs
daa
aad
fwait
rolb
pop
popf
xor
and
in
fidivl
cs
out
or
std
mov
cmp
insb
xchg
mov
push
fwait
dec
fmull
mov
add
push
lcall
popl
push
aas
ret
ss
xchg
sbb
adc
movsl
cmp
jp
pop
mov
and
or
xchg
jbe
or
loopne
loopne
popa
fmull
cmpsl
addl
arpl
mov
mov
push
scas
inc
into
xor
jo
push
leave
add
stos
push
mov
in
orb
inc
mov
insl
push
jge
scas
jl
xchg
test
mov
outsb
ret
into
jb
jne
mov
daa
jns
inc
outsl
sbb
mov
in
sub
jne
cmp
inc
pop
inc
dec
xchg
and
mov
mov
out
fcomps
imul
lret
jp
xor
mov
shlb
mov
and
jp
dec
movsl
in
push
pop
aaa
or
inc
add
inc
jmp
sub
popl
pushf
xor
mov
test
adc
sub
stos
pushf
cmp
stc
mov
dec
call
daa
adc
add
cmp
pop
mov
mov
in
jp
xor
inc
xchg
test
dec
in
mov
sbb
push
data16
out
cmp
cmc
mov
mov
lock
pop
popa
pushf
cmp
dec
mov
mov
jns
cmp
and
inc
cmc
lahf
push
adc
mov
imul
and
sub
push
push
add
dec
daa
test
roll
fwait
inc
adc
sbb
inc
mov
mov
jae
repnz
mov
mov
repnz
addl
pop
fisttpll
adc
add
sub
dec
je
sbb
in
dec
dec
mov
inc
push
pop
in
or
jo
push
jno
into
push
or
adc
lret
xchg
in
cmc
cmpsl
inc
add
test
cmp
cmp
jp
add
jns
insb
and
and
test
stos
enter
and
loop
fwait
pop
jae
cmp
out
out
clc
loope
js
sub
xor
mov
inc
clc
repnz
mov
and
pop
aaa
adc
mov
jne
mov
mov
ret
mov
fxch
inc
dec
sahf
inc
and
addr16
push
mov
jg
inc
or
jbe
or
sbb
mov
repnz
mov
in
pop
fiadds
mov
jb,pt
sub
sahf
test
push
out
dec
mov
movsl
push
nop
pusha
insl
es
shrl
dec
push
aam
push
es
jo
aad
sbb
or
xchg
xor
mov
xchg
jae
aam
add
das
inc
insl
lds
lret
sub
ret
sub
sarl
xchg
repz
test
pop
xchg
inc
sub
pop
cmp
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
push
push
movswl
pop
pop
call
stos
fwait
cmp
jbe
in
add
mov
pop
movzwl
add
mov
mov
mov
pushl
push
jmp
push
inc
sub
push
push
mov
pop
pop
sub
mov
xor
mov
sub
mov
mov
push
mov
pop
sub
mov
dec
cmp
jne
mov
jmp
jp
mov
inc
pop
xor
shlb
dec
adc
div
fs
xchg
ror
into
out
cld
test
or
orb
fwait
jle
sub
movsb
stc
imul
or
jecxz
xor
sbb
jmp
xor
dec
mov
mov
mov
push
andl
lods
cs
scas
les
adc
dec
lcall
mov
jp
xchg
push
mov
xor
mov
or
mov
jg
or
repz
iret
frstor
rcll
pop
xor
pushf
xchg
adc
rcll
aad
orl
adc
cmc
pop
sarb
mov
xchg
xchg
pop
pusha
das
lea
push
or
mov
sti
dec
push
dec
pop
mov
daa
sbb
bound
mov
or
adc
mov
push
mov
addr16
arpl
aas
or
out
mov
or
sub
mov
shl
mov
popf
lret
jno
push
repnz
pop
icebp
and
je
fists
leave
mov
cmp
cmp
gs
aas
leave
add
pusha
or
xor
mov
mov
mov
loopne
cmpsb
sbb
leave
shr
mov
popf
shll
rcrl
out
push
mov
jo
sub
cld
jo
adc
arpl
ret
test
ret
push
subb
and
enter
dec
xchg
sub
or
fidivl
xchg
mov
rcll
gs
sbb
ficompl
cmp
lahf
cmp
sbb
notl
inc
mov
jo
movsl
dec
lods
aas
pop
push
sub
sub
test
xchg
lret
sub
popf
aaa
mov
xchg
aas
pop
push
ss
push
out
dec
outsl
or
push
push
js
rcr
mov
dec
pop
rcrl
mov
jo
pop
push
lds
popa
mov
pop
mov
das
pop
repz
pop
xchg
js
and
insb
and
mov
push
xchg
mov
repnz
in
mov
shrl
push
sub
jecxz
cmp
jg
cmp
inc
pop
mov
adc
inc
movsb
scas
jns
sbb
xchg
movsl
pushf
jg
movsl
pushf
jg
mov
pop
loopne
push
mov
dec
lock
sbb
xchg
shr
and
push
mov
loopne
jne
dec
cmp
and
mov
pop
lret
cltd
xchg
mov
adc
sbb
je
sbb
loopne
popf
pop
imul
sbb
je
sbb
pop
dec
out
mov
in
or
sbb
je
dec
push
out
sbb
inc
sbb
push
xchg
xor
rcrb
loopne
mov
fchs
push
push
pop
xor
aas
inc
pop
mov
mov
mov
je
push
iret
rcrb
xor
xor
push
sbb
adc
push
pop
sbb
test
rcrl
loopne
adc
loope
sub
loopne
mov
loope
sbbb
je
dec
jae
rcrb
dec
lock
loopne
jl
inc
jnp
mov
loopne
outsb
mov
add
loopne
stos
pop
dec
lock
loopne
stos
xlat
in
les
mov
loop
les
mov
xchg
dec
test
rcrb
dec
test
scas
sbb
das
fistl
ret
push
xchg
push
xchg
adc
push
idivl
sbb
gs
lret
loope
mov
adc
adc
aaa
jmp
sbb
push
rol
loop
dec
movsb
push
xchg
dec
test
rcrb
dec
stos
sbb
inc
xchg
loopne
pop
and
xchg
fcmovnb
addr16
sbb
fildll
dec
lock
loopne
stos
xlat
int3
in
add
xor
sbb
mov
sbb
lcall
scas
in
lds
loopne
rcrb
add
je
sbb
pop
xchg
gs
pusha
xchg
cwtl
enter
sbb
push
lahf
mov
jns
lcall
pop
loope
pop
leave
push
sbb
push
and
imul
fstpt
jns
sbb
ljmp
cli
pop
xchg
sbb
sub
mov
push
inc
xchg
outsb
stos
mov
decb
bnd
mov
imul
dec
outsb
imul
loopne
mov
xchg
outsb
stos
mov
decb
bnd
mov
adc
outsb
push
je
adc
sub
mov
imul
fstpt
jecxz
and
jp
jae
popa
rcrl
loope
xchg
cli
enter
dec
adc
and
sub
mov
sbb
mov
test
mov
xchg
loopne
rcr
jae
pop
loopne
and
outsb
jecxz
and
js
jae
and
sbb
call
popf
push
loope
xchg
out
insl
les
jge
sbb
sbb
ljmp
in
sbb
test
xchg
out
insl
les
jge
or
lahf
gs
mov
iret
jae
sbb
je
frstor
sbb
jae
add
je
sbb
rcrb
loopne
push
icebp
popa
out
inc
hlt
test
lahf
shl
cmp
mov
repnz
add
aas
daa
and
loopne
xchg
inc
je
lahf
aad
cltd
xchg
lds
int
rcrb
in
call
shrb
lcall
loopne
xchg
loop
imul
jae
and
mov
rcrb
and
lods
mov
out
push
lods
adc
or
xor
lret
sbb
lahf
adc
loop
sbb
hlt
push
mov
bound
adc
or
jecxz
xchg
imul
jp
push
sbb
or
popl
lret
add
jmp
pop
pop
fs
jecxz
adc
je
sbb
je
sbb
je
sbb
je
sbb
je
sbb
je
sbb
je
adc
loopne
loopne
loopne
rcrb
je
sbb
je
sbb
je
sbb
je
iret
lret
sbb
je
sbb
je
sbb
je
sbb
je
lret
shr
and
add
mov
fimull
pop
gs
and
and
arpl
pop
jne
mov
cmp
bound
xor
sbb
push
inc
jge
mov
js
daa
in
mov
iret
mov
inc
lods
mov
xchg
frstor
pop
sahf
rol
sub
hlt
pop
jp
inc
xchg
aam
testl
popa
jbe
pop
sbb
aam
stc
popa
jne
mov
or
cmp
ficoml
pop
test
loope
incl
pop
xchg
leave
adc
sub
jbe
int3
sbb
mov
xchg
mov
dec
aas
and
lahf
add
ljmp
inc
divl
mov
es
mov
sbb
fcomps
push
push
xor
and
mov
cmp
and
add
add
add
sbb
add
or
imul
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
sbb
add
sbb
add
or
mov
sbb
add
sbb
add
sbb
add
xor
xor
fs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
addb
add
icebp
sbb
add
add
add
sbb
add
add
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
adc
sub
add
lahf
add
add
push
pop
cmp
add
stos
mov
sbb
dec
and
jg
js
and
and
enter
jl
sub
inc
addb
mov
rorb
sub
adc
mov
xor
mov
fwait
or
adc
adc
mov
cmp
inc
or
push
push
je
imul
movsl
add
testb
int3
and
rolb
mov
sub
sbb
push
add
push
arpl
je
add
mov
xchg
add
mov
mov
lods
jb
add
movsb
sbb
mov
and
cwtl
xchg
xchg
enter
jb
mov
int3
sbb
and
and
js
mov
or
insb
sbb
and
pusha
xchg
pop
enter
add
cmp
dec
add
inc
xchg
add
enter
jb
cmp
cmp
cld
add
and
xchg
lock
call
test
add
or
mov
cltd
push
call
testb
and
fdivl
mov
push
xor
pop
jmp
sub
cltd
cmp
dec
or
mov
xchg
and
and
jl
add
mov
addl
shlb
push
push
call
enter
jne
xor
rcrb
mov
add
cwtl
jge
rorb
mov
add
out
lea
mov
sbb
inc
cmp
ds
jne
js
adc
push
into
pop
nop
add
push
inc
add
inc
pop
enter
call
xchg
test
mov
ljmp
mov
mov
add
add
mov
sbb
add
or
or
push
push
add
xchg
gs
nop
push
andnps
mov
out
jbe
add
bound
xchg
add
sbb
push
scas
nop
cli
cmp
lock
push
add
adc
sbb
scas
fldl
push
daa
xchg
orl
add
mov
cmp
jne
push
or
fucomip
pop
jmp
mull
call
mov
push
pop
pop
mov
je
add
clc
mov
add
mov
hlt
into
sbb
add
xchg
int
pop
push
and
sbb
sarb
mov
stos
cmpl
inc
inc
gs
cmp
xchg
cmp
into
sarl
xor
sub
ss
sub
stc
pop
jl
xchg
adc
shr
clc
mov
sahf
test
or
or
cmp
stc
clc
xchg
pop
sbb
xchg
mov
inc
add
cmp
jge
pop
mov
decl
fmuls
adc
push
push
push
xchg
rolb
clc
mov
test
add
shll
push
dec
add
andb
cmp
mov
call
ljmp
aas
mov
add
push
popa
cmp
hlt
push
cmp
clc
add
jns
mov
sahf
addl
pop
dec
add
dec
and
and
add
cwtl
jecxz
or
add
data16
add
sbb
pop
pop
fisubrs
jnp
push
rorb
push
add
and
nop
pop
out
ja
push
xchg
movb
fiadds
xor
push
push
add
pop
jbe
imul
jae
xchg
add
add
or
sti
pop
push
jne
cmpsl
mov
add
in
lock
rcrb
sete
or
add
rcrl
lods
adc
push
les
hlt
je
test
ljmp
mov
add
dec
mov
loop
mov
push
mov
mov
lds
push
xor
jae
add
or
sti
pop
nop
jbe
add
decb
arpl
ret
pop
inc
adc
sub
push
dec
push
pop
mov
mov
adc
cwtl
mov
or
xchg
mov
mov
es
adc
adc
or
add
sahf
jmp
jne
aas
add
cmovno
test
sbb
sbb
fimuls
sbb
push
std
sub
add
and
sub
inc
adc
mov
test
das
bsr
adcb
out
mov
aam
cmp
dec
add
xlat
nop
push
call
ja
pop
lldt
inc
aaa
dec
push
sub
iret
lahf
frstor
call
das
and
int3
mov
mov
cmp
pop
movsl
xlat
cmp
inc
addb
cmpsl
lods
int
out
ret
adc
je
cli
or
xchg
jbe
cmp
add
mov
push
mov
xchg
loopne
fimull
push
test
pushf
push
sarl
xor
aaa
or
sub
xchg
repz
push
mov
pusha
mov
aam
sar
insl
pop
and
cwtl
mov
xor
test
ljmp
repnz
sbb
cmc
add
pop
pop
fsubs
and
sub
testb
cmp
adc
movl
and
lea
sbb
jecxz
pop
add
lock
add
cmp
add
std
iret
and
add
mov
add
jne
add
test
sub
je
mov
ret
and
inc
mov
lret
testb
adc
repnz
add
add
push
jp
pop
mov
jo
in
add
sbb
pushl
iret
mov
push
xor
sbb
leave
cmpb
jle
or
and
ja
adc
and
xor
add
test
add
leave
add
hlt
add
push
add
mov
out
bound
jl
movb
sbb
pop
push
jne
add
mov
mov
and
enter
cs
loopne
push
jl
dec
stc
adc
test
aam
jne
pop
push
sbb
dec
enter
adc
sub
andb
out
push
push
lock
hlt
in
adc
xor
adc
mov
lock
sub
or
shll
arpl
jmp
fidivrl
pop
add
adc
pop
loopne
push
nop
pushl
jl
add
adcl
dec
pop
or
jg
pop
insl
punpcklbw
add
out
stc
add
mov
pop
push
or
cs
lods
or
movb
mov
xor
dec
in
pop
shll
jbe
or
jle
adc
cmp
call
add
mov
lcall
clc
xchg
sbb
sbb
cld
pop
add
popa
or
add
jl
inc
orl
or
adc
add
sub
add
stos
loop
xchg
jg
adc
add
or
jl
xchg
lret
pop
sub
or
push
dec
or
movsl
ret
or
mov
dec
mov
xor
xchg
adc
push
pop
and
lock
sub
testl
lods
and
xor
add
cli
mov
or
cmp
jo
pop
push
push
mov
pop
mov
add
add
or
fs
pop
mov
enter
pop
ds
test
add
adc
push
movb
cld
inc
or
jp
dec
sub
clc
xchg
add
mov
mov
out
pop
pop
fsubl
lea
sub
push
psllq
leave
pusha
pushf
fs
cli
lds
sti
jecxz
jge
sub
in
add
add
paddd
inc
out
adc
add
in
jns
push
xor
aad
inc
mov
or
push
or
call
sahf
out
sub
pusha
add
dec
jmp
fisttps
add
movb
push
cmp
mov
hlt
ret
fwait
dec
cs
or
adc
pop
sbb
xchg
jmp
imul
add
xchg
pop
mov
inc
cmp
dec
or
or
addl
sbb
andb
pop
adcb
jle
xchg
or
addl
jmp
mov
add
mov
mov
lret
scas
orb
rolb
push
addr16
lea
movsl
push
xbegin
or
mov
rolb
push
adc
push
fadds
es
sub
add
add
add
and
aas
add
adcl
aam
test
in
xor
insl
add
pop
outsl
cmc
xor
ds
andl
xchg
adc
popf
xchg
insb
leave
iret
aam
icebp
add
call
cwtl
add
mov
xchg
jnp
lret
and
nop
pop
cmp
and
mov
loope
push
and
aam
pusha
and
adc
and
lods
add
push
sub
push
addb
stos
shlb
sub
ljmp
push
mov
addb
loope
sub
ja
mov
pop
test
mov
les
jle
or
xlat
xor
mov
fldl
cli
adc
arpl
or
push
mov
add
enter
add
sub
cmp
movsb
sub
or
pop
test
add
mov
xor
add
fnstenv
jle
out
enter
add
dec
cmc
sub
leave
fdivrl
add
xchg
out
dec
pop
push
sub
mov
jne
hlt
cmp
imul
leave
pop
insb
aam
push
mov
mov
mov
rolb
push
or
sub
or
xlat
jb
mov
and
icebp
or
adcl
gs
add
mov
add
xchg
insb
pop
int
push
test
jge
je
nop
rol
add
add
shlb
sub
jns
or
mov
jl
xor
lahf
les
cmp
or
dec
add
imul
add
out
push
mov
sbb
sub
push
rclb
cmp
and
jg
dec
sub
les
push
push
arpl
xchg
bound
sbb
pop
push
add
push
xor
push
sbb
inc
jno
inc
xchg
cmp
xorb
test
and
push
mov
sub
sub
add
push
in
add
test
adc
cmc
test
xchg
pop
icebp
test
xchg
inc
or
add
js
jns
or
ret
and
cmp
cs
icebp
pop
je
mov
adc
pushf
push
or
xlat
addr16
test
dec
aas
or
add
aad
sbb
add
add
cmpsb
imul
or
cmp
add
subb
add
leave
inc
or
mov
imul
add
test
add
call
hlt
mov
cmp
add
mov
mov
jmp
inc
jg
add
xor
push
or
add
adc
add
sub
mov
cmp
and
xchg
mov
dec
in
and
inc
mov
call
js
dec
push
test
lds
movl
mov
sub
hlt
add
lds
mov
sub
push
flds
mov
addr16
lock
and
sbb
testl
xor
testb
add
jae
push
aam
sti
inc
rcrl
sbb
jo
pop
add
jns
sarb
popf
cmc
add
dec
cmp
test
stos
test
add
and
ret
cmp
push
sbb
add
xor
adc
add
xchg
sbb
adc
mov
xlat
add
jnp
push
xchg
aas
fbstp
ret
jge
in
push
cmp
lcall
inc
in
jmp
sahf
sbb
dec
rorl
xchg
inc
mov
xlat
dec
arpl
cmp
xor
aad
loop
sub
cs
leave
pop
or
sub
mov
adc
inc
ja
push
add
cltd
dec
or
sbb
mov
outsb
je
add
adc
and
inc
xorl
mov
jmp
shrl
seto
clc
pop
dec
sbb
repnz
sub
out
rorl
jge
movsl
cmp
clc
adc
loopne
add
xchg
call
rcl
add
or
pop
cs
or
adc
xlat
bound
ret
dec
test
cmp
mov
faddl
dec
add
mov
pop
test
and
sbb
jno
add
cltd
pop
jne
idivb
adc
cmpsb
int3
adc
adc
out
add
loopne
lock
scas
add
pop
call
dec
add
jns
call
mov
jp
adc
jmp
int3
enter
iret
ror
into
add
fmul
flds
fcmovu
fstp
push
fnstsw
loope
jecxz
in
nop
pop
push
push
add
cmpl
add
shlb
push
add
popl
push
adc
lock
mov
enter
lret
pop
fadds
xlat
push
cmp
or
je
das
pusha
sub
aas
rep
add
sbb
movsb
sbb
xor
cmp
jl
push
sbb
add
sbb
pushw
and
imul
inc
les
or
jmp
aas
loope
add
incb
jbe
add
cmpb
jne
push
jnp
add
add
out
pop
and
sbb
inc
roll
mov
test
lock
pop
hlt
or
add
pop
cmp
fadds
pop
dec
into
cmc
adc
lock
mov
clc
lock
mov
push
push
lea
lods
and
shlb
enter
mov
repz
xchg
push
cwtl
call
inc
jl
dec
jmp
jmp
arpl
push
shrb
and
nop
movzwl
lock
cmp
add
xacquire
in
push
xor
shrb
call
sbb
testb
mov
sub
sub
fisttps
cmc
insb
add
or
fnstcw
dec
std
and
push
add
pop
sbb
cmp
push
xor
adc
shlb
lock
nop
jb
add
fimull
shlb
cmp
aas
ja
add
pop
inc
add
xlat
and
pcmpeqd
dec
pusha
aam
call
mov
or
jmp
add
cmpsb
push
test
cmpsl
into
mov
add
cwtl
ret
sbb
cmp
jne
dec
mov
add
pop
cmpb
cmp
add
cmp
mov
jmp
add
fwait
pop
clc
out
add
mov
cmp
jne
xor
or
jle
add
ror
xor
push
repz
into
jp
popl
std
int3
or
movsl
hlt
jmp
pop
nop
sbb
inc
mov
xchg
adc
or
add
xor
or
stos
adc
dec
pusha
insl
pop
add
adc
test
cs
mov
add
loop
push
dec
int3
add
xor
adc
iret
mov
add
mov
fistl
xchg
dec
xor
sbb
pop
mov
add
cli
mov
hlt
inc
mov
xchg
add
call
sub
in
sbb
call
mov
inc
sbb
nop
sub
imul
leave
sbb
sbb
inc
andb
xlat
out
or
and
mov
or
push
inc
addb
and
je
mov
push
sub
add
mov
and
js
add
pop
rcrb
out
sub
enter
dec
test
add
jmp
add
xor
in
add
and
push
ja
cmp
add
add
leave
add
mov
xor
out
pop
jo
add
jl
pop
xor
shlb
jae
nop
nop
add
fdivrs
cmp
sub
in
inc
push
repnz
cmp
mov
or
popa
jb
mov
add
adc
add
ret
or
mov
pusha
pop
pmullw
test
jmp
in
je
inc
add
jne
pop
and
in
xor
cli
cmp
jae
dec
add
add
inc
add
ss
fadds
push
aas
dec
or
and
add
mov
cld
or
nop
jl
or
lret
dec
pop
or
sar
push
push
add
lcall
add
fisubrs
xor
enter
pop
sbbl
jne
mov
add
push
cwtl
jl
ds
add
mov
hlt
push
sbb
adc
roll
dec
clc
int3
cld
push
fsubrs
xchg
mov
pusha
rorb
int3
xchg
dec
mov
jne
add
xor
mov
movl
mov
or
lret
add
imul
cmpsl
addr16
mov
arpl
cld
or
data16
pushl
pop
and
ud2
add
in
mov
rclb
inc
push
push
inc
push
inc
sbbb
jb
popa
outsb
fs
ja
gs
jo
imul
add
push
dec
push
popa
jae
add
insb
jne
push
imul
inc
data16
cmp
add
xor
mov
inc
xchg
add
je
fcmovu
call
mov
pop
jmp
mov
lock
jecxz
rolb
jbe
pop
push
or
sub
or
add
mov
js
testb
or
pop
xor
or
es
sbb
popl
lock
stc
jns
xchg
mov
mov
add
xor
dec
mov
push
lret
xlat
stos
mov
fadds
call
gs
jp
xchg
mov
add
sub
pop
insb
cmp
push
and
pop
jmp
sbb
in
call
sbb
jg
sbbb
idivb
mov
xchg
xor
and
dec
jne
fnstsw
push
jecxz
jo
leave
add
outsb
add
fsts
repz
mov
les
push
cltd
or
push
add
add
fs
repnz
or
cmp
enter
cld
ficoms
add
add
nop
pop
jae
push
or
icebp
jl
movaps
xchg
shr
cmp
xchg
jp
movhlps
pop
incl
popa
in
lock
push
sub
orl
hlt
add
push
je
outsb
cmp
or
cmc
add
add
nop
sti
or
or
pop
add
arpl
add
sbb
lods
and
add
mov
lea
xor
pop
and
call
clc
push
inc
or
push
in
mov
jg
aam
mov
shll
cmpb
jbe
adc
cwtl
imul
test
push
cltd
cld
and
add
dec
fistpl
push
push
bound
push
push
add
mov
cltd
shl
dec
adc
add
lods
push
mov
mov
jmp
or
pop
push
adc
cwtl
leave
outsl
add
cmp
xor
or
jne
pop
push
movsbl
clc
and
add
sbb
std
add
imul
outsb
orb
pop
mov
rcll
and
rcr
lock
mov
addps
lea
sbb
inc
cmp
repz
mov
adc
xor
fisubrs
out
add
outsb
cld
call
dec
cmp
mov
lock
add
jmp
and
pop
mov
add
into
cli
out
push
je
aaa
stos
mov
loopne
or
cmpsb
ja
imul
push
ret
gs
add
and
mov
mov
or
sub
test
push
push
push
adc
or
icebp
cld
je
rorl
add
fstpt
sbb
fs
call
das
add
and
fwait
movsb
lcall
cmp
mov
insl
jno
add
mov
aad
pop
add
movl
pusha
push
lret
add
lods
sbb
adc
cmp
nopl
mov
sub
jae
je
pop
mov
add
mov
dec
and
or
inc
cmp
add
or
add
pop
aas
xchg
mov
inc
add
cmp
add
jne
fs
push
ljmp
inc
inc
call
je
mov
dec
imul
inc
or
sarb
push
daa
add
inc
add
inc
mov
jmp
xchg
pop
mov
mov
push
mov
insb
addl
push
lock
add
xor
call
cwtl
push
add
dec
mov
test
popl
mov
rclb
add
ret
add
mov
xchg
lahf
fdivrp
adcb
and
cmp
mov
add
push
push
hlt
push
les
enter
push
das
jnp
sub
mov
xor
jne
and
or
add
cmp
std
pushf
lock
push
xchg
jne
add
pop
and
push
adc
adc
push
lea
and
pop
add
fs
dec
je
les
add
daa
and
jmp
pushf
add
xor
add
je
add
fldcw
cmpsl
inc
add
sar
dec
cwtl
adcb
and
mov
sub
push
sub
mov
pop
sarl
pusha
add
les
orl
add
ss
xor
push
cmp
adc
sub
cs
adc
pop
and
cmp
aam
wrmsr
das
push
mov
add
cld
sub
enter
sbb
icebp
jmp
int
and
iret
inc
push
and
out
ljmp
fdivr
push
or
frndint
push
or
lret
xorb
orb
and
adc
add
and
sub
es
push
cmc
loop
add
je
inc
lock
cmp
adc
inc
movsl
in
mov
cmp
push
pusha
popl
add
jno
jl
pop
add
insb
sbb
inc
xchg
pop
pushf
or
xchg
aaa
mov
push
dec
or
and
sahf
push
push
and
adc
scas
pop
xorb
mov
jmp
add
xchg
pop
subb
jne
jo
fcoms
or
je
cmp
loop
cmp
inc
mov
push
xchg
orl
hlt
inc
dec
add
add
femms
fstpt
cmp
inc
fisubrs
add
xchg
sbb
and
out
add
pop
mov
mov
test
stos
loop,pt
pop
nop
pusha
mov
rclb
fistl
pop
inc
inc
xor
cmp
jle
add
add
mov
push
daa
shrl
jg
pusha
pop
bound
push
mov
jge
add
movsl
popl
add
mov
adc
adc
incb
or
cmpl
mov
mov
and
leave
add
push
mov
add
mov
je
add
call
add
add
cmp
pop
jne
movb
add
call
ss
xor
inc
call
push
inc
lea
mov
inc
leave
push
dec
loopne
add
and
dec
add
adc
sbb
dec
dec
test
add
nop
test
in
mov
mov
sbb
mov
add
inc
adcb
dec
push
or
repnz
mov
out
in
sub
in
rolb
inc
pop
jo
addb
mov
fwait
push
pop
add
call
shrl
add
mov
sbb
add
and
aaa
dec
ds
push
add
idivl
pop
leave
sbbl
bound
or
push
addl
pop
fiaddl
push
add
call
jne
out
and
cmp
push
je
lock
and
mov
push
or
sbb
add
ds
mov
add
pushf
iret
sbb
lods
sbb
add
shl
outsl
and
cmp
add
hlt
adc
sbb
sub
jbe
xchg
mov
add
pop
sub
and
int3
add
repnz
add
jmp
outsl
cmpsb
sub
adc
sub
add
mov
pusha
lret
mov
add
jnp
mov
cmp
jmp
mov
push
outsl
jb
imul
inc
cli
aas
addr16
arpl
xorl
sub
scas
lret
int3
insl
add
xchg
xor
cmc
and
jl
fildl
mov
adc
sbb
and
jl
lock
add
push
lea
nop
scas
adc
mov
adc
test
movl
push
or
pop
pminsw
add
insb
xor
or
cmp
xor
jo
mov
daa
pop
es
sbb
pop
imul
outsb
xchg
dec
mov
adc
sub
sbbb
push
or
sbb
popa
adc
pop
mov
cld
jo
outsl
clc
xchg
pop
xchg
add
inc
mov
xor
pop
in
adc
stc
jmp
rcll
lock
subb
cmp
rorl
imul
aas
fstps
jg
hlt
test
ds
add
sub
add
sbb
or
push
push
push
adcl
jnp
add
test
je
add
xchg
into
mov
fwait
in
push
add
aam
dec
cwtl
push
cli
inc
push
push
and
mov
orb
rol
mov
mov
add
adc
sbb
add
icebp
inc
xor
lahf
lock
rorb
es
and
add
imul
rcrl
into
inc
in
loop
push
xor
sub
bound
mov
or
dec
or
push
add
xchg
add
xchg
cmp
sti
and
movaps
dec
nop
push
pop
push
adc
xlat
fiadds
not
pop
mov
add
test
dec
add
adc
ljmp
mov
mov
and
je
add
mov
out
cwtl
pop
add
cmp
mov
and
sub
jp
push
sbb
adc
fmuls
pop
cmpsb
testl
popa
ds
mov
inc
adc
pop
adc
or
xor
dec
jmp
mov
push
into
cld
sbbb
add
jne
movl
insb
lret
test
addps
movsl
and
divl
dec
clc
add
mov
add
push
push
scas
push
lea
push
cmpsb
inc
in
mov
add
xlat
dec
adc
dec
jno
iret
push
pop
xor
mov
adc
shl
aam
fcomps
push
into
cmpsb
mov
jne
mov
lods
dec
xor
pop
ret
pop
xchg
enter
add
or
clc
lret
add
push
inc
or
jns
add
add
push
shr
dec
cmp
cmp
pop
add
inc
dec
pop
test
pop
dec
add
mov
fwait
pop
pop
ljmp
add
sub
cmp
pop
or
add
and
mov
mov
jae
or
add
jmp
popa
scas
lret
add
adc
push
jb
add
inc
js
or
pop
add
add
mov
sub
les
mov
arpl
xchg
add
adc
add
lods
push
out
inc
int3
pop
mov
scas
or
sub
sbb
es
jne
add
fimull
jge
sub
js
repz
sbb
push
insb
xchg
xchg
pop
mov
in
flds
icebp
out
adc
insb
pop
sub
mov
pop
sub
xor
cld
dec
jl
sub
rol
sub
add
lock
add
add
xor
xchg
pop
sti
push
xchg
xor
jns
add
dec
xor
cld
rolb
add
jle
hlt
aad
add
repz
pusha
cmp
mov
dec
stc
add
or
cli
cwtl
out
pop
cmp
or
lcall
or
outsl
xor
cli
dec
fsubs
ret
sbb
loopne
ja
push
xlat
mov
cld
inc
scas
xor
fsubrl
orb
stos
xor
jp
add
mov
addb
mov
adc
xchg
sub
add
fistl
ret
enter
repz
loopne
add
roll
cmp
pushf
cmpb
add
icebp
mov
call
pop
lock
sub
inc
lea
lock
push
test
pop
xchg
cmp
or
xor
je
iret
dec
test
pop
adc
into
add
cltd
or
add
dec
sbb
adc
loopne
sarb
hlt
sbb
call
lods
adcb
decl
cwtl
sub
pop
push
push
dec
xchg
mov
add
cltd
and
sbb
mov
icebp
rcll
jl
mov
add
inc
push
mov
hlt
inc
test
lea
daa
push
mov
cwtl
fcoml
and
add
call
mov
hlt
ljmp
jb
movsb
pop
mov
and
cli
add
orb
or
or
inc
add
pop
add
or
shr
aam
mov
adc
mov
add
jg
or
and
jmp
enter
daa
jmp
js
jo
jge
sub
push
and
popa
aam
lcall
adc
lahf
add
add
or
lret
add
mov
rcll
add
sbb
pop
add
cmpsl
push
push
lock
jmp
push
inc
adc
mov
push
inc
setb
repnz
icebp
and
add
dec
xchg
add
lock
test
push
pop
rorb
test
and
inc
adc
dec
jo
inc
mov
imul
jmp
mov
outsb
pop
test
inc
jns
add
adc
cmp
xchg
cmp
jb
xchg
popa
pop
add
movsb
mov
cmp
stos
shrb
mov
cmp
adc
lea
sti
sbb
out
mov
or
add
stos
rolb
fiaddl
push
leave
jbe
adc
addb
cmp
push
cmp
test
shlb
repnz
add
out
mov
mov
pop
adc
nop
add
loop
fldenv
lock
adc
inc
arpl
mov
push
xor
inc
inc
xchg
add
lds
or
cltd
pop
add
adc
bound
xor
push
loop
nop
sbb
and
aas
ds
adc
sbb
mov
dec
add
sbb
test
and
pop
test
add
out
cmp
iret
subb
verr
push
inc
popa
add
jge
xchg
or
pushf
leave
jl
add
dec
mulb
out
jne
out
jmp
addl
adc
jp
cmpsb
add
add
sbb
push
lar
pushl
incb
movl
fsubr
jmp
push
sbb
and
adc
cmp
adc
add
or
cmp
jmp
sub
add
arpl
sub
add
and
mov
nop
int3
les
icebp
leave
fimull
jne
sbb
popa
mov
pop
and
fnstenv
add
test
clc
ror
call
stos
pop
inc
das
rorb
sbb
push
mov
and
lds
or
mov
into
test
pop
add
and
lds
pop
sub
cmp
stos
ja
cli
push
bound
jp
adc
xor
push
sbb
clc
or
fs
in
push
push
add
aaa
arpl
or
jno
insb
push
sub
ficoms
add
xchg
in
in
test
jne
add
add
outsb
push
adc
icebp
add
jmp
out
pop
mov
orb
or
cmpsb
shll
add
push
push
aam
sbb
xchg
xchg
mov
add
inc
jmp
call
dec
mov
sti
pop
add
pusha
cmp
lret
in
cmp
push
dec
or
ret
cltd
jo
jg
adc
movd
add
popl
call
fidivrl
push
or
jne
les
pop
aas
shrb
sbb
fdiv
xor
lock
daa
add
jge
push
mov
pop
pop
push
add
mov
push
add
inc
stos
in
sub
push
sub
add
push
push
cmp
fwait
add
pop
testb
pop
add
push
mov
call
stc
and
nop
jno
add
pop
pop
repnz
add
xor
or
ror
call
push
add
mov
adc
push
sbb
and
add
sbb
mov
or
push
inc
pop
or
or
adc
jmp
dec
aam
jge
push
daa
push
mov
push
in
add
pop
mov
or
push
std
fisubl
cmp
icebp
out
adc
cmp
add
xor
test
pop
xor
add
dec
daa
xor
les
ss
inc
pop
inc
dec
add
fldcw
add
jmp
pop
cmp
add
or
pop
test
sub
add
push
adc
mov
dec
sub
lret
daa
xchg
test
popa
pop
adc
push
pop
xchg
push
shrb
test
clc
pop
inc
dec
pop
sbb
add
mov
cmpsb
dec
ret
inc
inc
pmullw
in
add
mov
pop
and
xorl
movsb
je
clc
add
call
cmp
add
and
pop
push
pop
sahf
pop
cltd
inc
pusha
sar
jo
fiadds
push
and
xor
adc
mov
lea
pop
push
out
dec
xchg
popf
daa
andb
nop
xor
les
xor
push
or
cmpsl
pop
test
pop
add
sbb
test
jg
or
add
out
jp
dec
fbstp
jmp
or
lock
or
movsl
insb
sbb
sub
mov
inc
aas
cmc
popa
add
jge
insb
arpl
xor
jmp
xor
add
add
loopne
in
mov
cmp
cmpsb
dec
push
bound
and
popl
lcall
add
jnp
jp
sbb
sbb
sub
xchg
shrb
add
mov
loopne
push
add
and
jmp
cmp
dec
test
push
dec
imul
push
rolb
arpl
popf
add
leave
rcrl
push
cs
adc
arpl
lods
jmp
push
enter
call
ret
lahf
clc
dec
and
ret
cmpsl
dec
add
push
push
sbb
sub
jge
cmp
ret
push
pusha
jp
add
add
jle
int
or
add
dec
aaa
add
and
stos
sbb
inc
xchg
dec
fcomp
push
cld
gs
add
add
out
jmp
dec
add
out
mov
int3
push
push
mov
mov
jmp
call
or
jecxz
pop
add
dec
clc
inc
fisttpll
pop
push
or
lret
xor
inc
pop
xor
and
and
pop
clc
add
dec
sub
xor
push
shrb
add
inc
int3
mov
pop
jl
adc
xchg
sbb
pop
and
sub
in
sbb
ljmp
cmpl
add
imul
ret
pusha
loopne
fistpll
xor
cmp
inc
add
or
or
add
nop
sbb
adc
adc
jmp
pop
cmpsb
and
jne
pop
popa
out
mov
xor
repz
popl
push
test
add
xor
mov
loope
jns
or
dec
jo
cmp
hlt
inc
push
lahf
add
add
ja
insl
add
mov
adc
call
cmp
cltd
mov
into
sbbl
js
inc
jne
or
or
call
cmpb
lea
add
cld
dec
in
addb
repz
lea
push
inc
jns
pop
cmp
int3
mov
xchg
rolb
or
movsb
clc
or
mov
push
and
add
dec
xor
loopne
dec
add
loope
je
lret
test
and
iret
aam
sub
push
addl
inc
cmp
or
test
inc
inc
dec
cmp
or
test
cmp
movl
adc
cmpsb
mov
add
insb
xor
jne,pn
jle
add
ds
xorb
add
popa
out
jno
shrl
cmc
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
stc
jmp
or
inc
out
leave
add
jle
icebp
loopne
shrb
sbb
add
lret
push
adc
push
mov
aam
push
and
enter
and
call
ds
les
outsl
or
dec
sub
lds
pop
add
and
inc
push
cmp
loopne
push
xchg
js
pop
movsb
int
and
inc
mov
add
xchg
repz
cli
sub
bndstx
les
mov
dec
or
scas
mov
stc
jecxz
out
into
clc
lahf
adc
sub
mov
add
add
sub
add
sub
and
or
je
inc
mov
dec
scas
adc
jne
loope
pmulhuw
std
push
fiadds
testl
push
and
dec
loopne
push
outsl
pop
data16
adc
gs
fisubs
lahf
jmp
add
dec
js
and
xchg
inc
cli
mov
cmp
fmuls
sarl
adc
daa
pusha
lods
push
dec
add
sub
or
into
mov
jne
lahf
in
inc
mov
mov
push
xlat
iret
add
lods
cmc
cwtl
addl
rorl
je
rclb
cltd
xchg
inc
add
jmp
mov
je
or
push
cld
add
sub
xchg
mov
cmp
out
sub
ret
cltd
sbb
fisubl
cld
pop
ret
add
add
add
loop
mov
or
js
pop
fs
mov
mov
adc
shl
lock
sub
sbb
dec
fwait
add
add
add
push
test
add
add
add
add
xor
mov
imul
out
ret
push
or
add
inc
pop
dec
xor
and
ret
clc
sti
mov
push
repz
sbbl
rorb
pop
push
rolb
xchg
xor
dec
add
imul
lock
aas
mov
xchg
call
push
add
jbe
mov
inc
dec
mov
inc
or
push
adc
movsb
sub
or
and
cs
gs
sarl
imul
movl
lds
jmp
add
sbb
adc
adc
rsm
sub
in
add
and
xchg
and
loop
sbb
lods
mov
adc
pop
cwtl
push
inc
rclb
cmp
jmp
mov
or
mov
incl
dec
sti
mov
jnp
je
inc
leave
and
pop
mov
cmp
cmp
lea
or
sbb
jnp
call
mov
mov
sbb
inc
jno
and
add
ret
ret
sub
pop
pop
jmp
movsb
pop
mov
nop
pop
sbb
push
add
call
les
add
pop
outsl
imul
jle
adc
add
add
mov
ret
clc
sbb
jl
and
les
add
xchg
xchg
and
cld
fildl
sub
adc
dec
aam
cmp
lret
int3
adc
sbb
jno
call
xchg
movsl
pusha
dec
and
jp
add
sbb
add
nop
sbb
adc
dec
sbbb
ret
sub
sbb
cmpb
add
push
and
mov
loop
in
and
pop
fsubs
add
adc
ja
sbb
mov
loope
dec
and
in
test
es
dec
in
push
adc
add
rolb
sbb
movsb
mov
cmpsl
mov
jmp
cmp
addl
xor
movsb
xor
or
inc
mov
sbb
adc
inc
shlb
ficoms
jbe
push
pop
add
mov
movb
sbb
inc
stc
stos
sbbw
adc
fiaddl
add
pop
mov
out
int3
dec
dec
pop
out
inc
sar
popf
icebp
pop
cli
add
shlb
add
dec
adc
sub
add
and
jl
pop
mov
sub
fwait
je
adc
stos
or
add
sub
mov
pop
pop
push
into
leave
push
mov
aam
push
test
int
ret
or
sub
iret
jge
punpckhwd
push
adc
movl
or
add
or
push
insb
inc
lock
mov
pop
or
add
mov
add
push
sbb
imul
data16
icebp
mov
mov
add
push
fadds
add
cmp
adc
add
jo
sub
jg
add
inc
vpsubsb
add
rcrb
jmp
fiaddl
les
and
add
or
push
lahf
push
add
rcrb
pop
pop
dec
mov
je
mov
ja
call
mov
cmp
test
and
jmp
out
add
mov
dec
mov
add
mov
incl
add
jae
pop
xor
in
sub
and
jle
mov
xchg
ljmp
dec
sbb
mov
ret
add
in
push
mov
add
cmp
or
add
pusha
pop
mov
cwtl
adc
test
andb
or
lret
lds
leave
and
jmp
pop
pusha
lea
jp
jo
mov
pop
movsb
mov
dec
lock
in
pop
push
repnz
not
dec
add
cmp
dec
xchg
pop
cltd
add
sub
mov
cmp
lea
add
adcl
fiadds
leave
rorl
js
and
add
unpcklps
ds
popl
or
hlt
ret
add
fcoms
jge
pop
inc
add
stc
adc
xor
pop
enter
jp
aaa
sub
fldz
xlat
or
inc
cmp
jg
cmpb
adc
enter
inc
or
add
jo
pop
hlt
adc
shlb
mov
imul
idiv
mov
mov
inc
mov
aam
cltd
add
pop
sub
test
xor
out
sub
add
test
add
pop
leave
sbb
mov
subb
mov
call
or
inc
loopne
cmp
mov
and
cwtl
aaa
or
js
inc
jb
add
mov
xlat
fadds
nop
add
lods
outsb
xor
xchg
mov
push
or
push
push
add
int3
into
sbb
ret
add
popa
push
pop
add
push
call
nop
je
add
push
cmpb
and
add
push
lret
into
pop
fadds
cmp
aas
sbbl
xlat
pop
mov
addr16
add
jb
jp
xadd
addl
gs
jo
test
lds
cmpsb
push
iret
decl
js
es
mov
push
stos
mov
jo
add
mov
aam
dec
mov
cmc
add
out
sub
es
imul
lea
divl
add
leave
cmp
incl
dec
mov
sahf
popf
sbb
jmp
push
push
inc
add
cld
es
mov
repnz
test
jl
jge
sbb
nop
fildl
pop
daa
movsb
lahf
outsl
inc
pop
stos
add
scas
adc
jecxz
cli
negb
pushf
mov
mov
loop
repnz
add
repz
pop
xchg
iret
shll
roll
faddl
cmp
xchg
push
add
jecxz
rclb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
rcrl
adc
adc
add
or
add
ljmp
into
add
and
push
pop
mov
clc
lea
pop
pop
stc
je
add
sbb
leave
jne
inc
shl
testl
adc
jns
repnz
out
add
add
cmp
inc
jecxz
mov
add
sub
roll
jb
je
jbe
add
cmp
ja
fpatan
fadds
clc
inc
pusha
loop
pop
testl
push
pop
inc
dec
sbb
jg
sti
xor
shr
inc
push
mov
std
xchg
or
nop
cmp
add
ror
bnd
sub
pop
fstpt
mov
add
out
aam
add
call
push
cmp
stos
mov
mov
out
mov
add
pop
dec
pop
add
pop
enter
add
imul
cmc
bnd
add
xor
add
mov
movsb
mov
addl
icebp
pop
xor
ret
jo
shll
loop
andb
sbb
push
add
cmp
cltd
add
data16
cmp
mov
jle
add
cmp
aam
dec
in
or
pop
test
xchg
add
daa
aaa
xchg
xor
add
cmpsb
or
ja
or
add
sub
hlt
cld
repz
sub
test
cmp
pusha
clc
pop
push
sbb
pop
add
adc
jp
jnp
add
movb
push
fsubl
pusha
add
decb
repz
jg
mov
or
adc
sub
stos
in
cmp
pop
sub
pop
or
lea
orb
cmpb
and
cmpl
push
es
addb
xchg
xchg
xor
jp
sub
addr16
inc
push
add
pop
dec
add
js
inc
ret
adc
jb
cmp
or
pusha
fsubs
add
push
pop
lea
hlt
add
sarb
xor
movsl
adc
push
ret
pop
pushl
ds
push
add
aaa
cmp
rcrl
mov
pop
dec
lock
call
and
add
aas
xor
push
push
pop
dec
ja
push
adc
adc
jns
pop
mov
sub
sbb
divb
or
add
dec
sbb
mov
xor
sub
xor
rol
nop
push
outsb
xor
cmpsl
pop
mov
inc
and
mov
das
mov
cmp
mov
push
stos
or
fsub
mov
adc
and
pushf
add
push
mov
call
add
jnp
add
adc
mov
jne
cmp
push
daa
popf
mov
mov
mov
push
cmp
in
repnz
mov
push
or
inc
call
jecxz
xor
mov
and
hlt
xor
add
add
mov
or
pusha
jmp
lock
inc
in
cmp
or
cmp
xor
and
xchg
sub
sub
and
jl
inc
movhps
clc
jb
hlt
cmp
sbb
rclb
insb
xchg
cmp
in
gs
fdivrl
adc
sbb
add
int3
in
jb
jg
call
xor
xchg
nop
add
cwtl
xor
and
mov
test
xorb
cmp
je
jo
mov
enter
jb
cmp
sbb
and
dec
add
bound
cmp
or
sbb
push
cmp
addb
xchg
cmp
cmp
xor
add
cmp
sub
movzwl
rol
cwtl
loop
or
ret
call
mov
ds
and
add
sbb
out
pop
in
pop
dec
push
or
inc
imul
cmc
jae
orl
jnp
arpl
xchg
fcoml
adc
in
sbb
inc
jbe
jns
add
lock
adc
enter
repz
xor
fdivp
and
inc
stc
add
cli
in
jb
cmp
push
sbb
mov
mov
sub
add
loop
jecxz
in
and
out
call
add
repz
sbb
cltd
or
xor
dec
xchg
push
add
in
jb
cmp
mov
sbb
add
and
xchg
fcmove
fnsetpm(287
nop
pop
add
cmp
sbb
add
and
xchg
ret
ret
in
jb
cmp
and
clc
and
push
jne
lret
in
jb
cmp
sbb
iret
inc
xorb
in
mov
mov
and
enter
mov
sbb
andb
enter
jb
movsl
sub
add
das
cmp
mov
pop
jae
icebp
loopne
lahf
ds
mov
in
pop
sub
adc
push
test
add
rolb
add
dec
mov
insb
push
add
adc
and
fcomps
jo
pop
pop
nop
sub
fs
add
mov
mov
dec
jne
pusha
dec
gs
add
jb
inc
sarb
cltd
call
and
orl
mov
mov
and
nop
orw
rolb
add
gs
xchg
mov
xchg
inc
adc
cmp
pusha
andb
xor
push
test
mov
or
inc
imul
subb
scas
pop
notl
add
outsb
addr16
and
push
repnz
add
sub
scas
or
data16
outsl
add
and
movsb
mov
pop
dec
icebp
add
lods
dec
addr16
or
movsb
data16
mov
xor
sbb
fs
jo
mov
ret
xchg
mov
rcrb
aas
cmpsb
cwtl
js
popa
dec
loope
push
inc
std
add
push
outsb
push
fs
adc
in
orb
pusha
add
xchg
test
aad
pop
add
or
xor
jmp
cmp
xchg
jae
dec
jo
lret
test
mov
outsl
add
push
loope
mov
sub
inc
inc
arpl
adcb
insb
popa
and
cmp
jle
inc
pop
sub
add
push
in
sub
push
lock
rcpps
inc
popa
arpl
add
popf
pop
fadd
inc
jo
je
cmp
insb
enter
stc
movsb
inc
cmpb
popa
add
or
test
xchg
enter
fists
xchg
outsl
dec
fs
sub
mov
ret
inc
jae
mov
insb
pop
mov
mov
cmp
inc
sbb
jg
add
ret
jo
pushl
add
and
mov
shr
div
cli
pop
add
cld
add
push
adc
add
lret
jg
pop
sub
add
call
push
dec
and
pop
and
ret
add
and
add
fisttps
or
dec
lods
adcb
lret
xor
scas
les
adc
scas
mov
aas
mov
cmp
dec
sub
add
cli
rcr
sbb
cmc
add
sub
dec
add
cmp
push
jp
pop
add
mov
add
jne
lods
push
mov
and
add
jbe
pop
push
movsb
fmull
mov
jnp
out
ror
rsqrtps
mov
pop
cmp
jbe
jecxz
mov
repz
add
sub
jno
add
cli
pop
mov
and
test
jb
fdivrs
sti
add
mov
roll
add
rcrb
lods
int3
and
dec
popl
out
adc
adc
loopne
adc
add
or
pop
push
dec
movsb
add
ljmp
int
jp
cmp
ror
test
mov
lds
cmp
repz
andb
jmp
jbe
rcll
or
mov
aas
int3
xchg
pop
fs
add
aaa
dec
clc
insb
into
adc
add
inc
cmc
addr16
cltd
incb
inc
pop
pop
pop
test
es
lods
push
rol
mov
daa
lret
sbb
jbe
add
into
or
subl
mov
loop
mov
cld
xor
fldt
lock
sub
add
adc
movl
aad
and
adc
sub
mov
xchg
aas
add
inc
in
hlt
sbb
mov
stos
jl
jns
in
sbb
dec
jmp
imul
rorl
cmp
xor
lods
test
mov
test
jmp
int3
add
bound
push
push
jb
stos
xor
pop
fchs
xchg
xor
mov
add
aas
xor
call
test
dec
xor
and
cmp
inc
fdivrl
add
jnp
cli
sub
push
mov
and
push
int3
pop
mov
mov
pop
sarb
jmp
xchg
add
jecxz
xchg
arpl
enter
les
inc
jl
ljmp
in
mov
dec
repz
xor
stos
and
adc
pop
inc
test
enter
lea
and
jg
inc
sbb
fwait
dec
cmpsb
sbb
aad
ret
imul
xorb
pusha
loopne
add
xchg
rcrb
clc
out
jbe
iret
lock
sub
mov
xor
paddq
inc
push
rorb
mov
mov
pusha
xchg
sbb
jne
push
dec
dec
lock
xchg
lcall
mov
rcll
mov
out
pusha
dec
lock
add
std
cmp
test
sub
stc
jo
movsl
xor
mov
adc
mov
push
orb
call
pusha
jmp
rorl
and
dec
cld
and
lcall
lock
dec
add
data16
xor
sbb
adcb
push
cmc
jbe
sbb
adc
in
rorb
add
ds
xor
push
rclb
mov
cpuid
test
loope
dec
add
cld
mov
sub
mov
rolb
cmp
xor
lret
and
je
pop
shr
dec
push
cmpsb
hlt
shl
mov
and
negb
mov
mov
out
popf
cmp
nop
dec
outsb
xor
aas
lds
cs
stos
sbb
out
fwait
add
nop
andb
or
mov
push
add
add
imulb
pop
pop
mov
sti
lea
xor
rorb
ret
xchg
adc
faddl
dec
stos
push
mov
clc
dec
rolb
and
inc
jns
add
pop
inc
call
add
or
adc
and
and
gs
or
xor
sub
jg
add
lods
mov
push
pop
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
sub
and
inc
push
add
cs
add
icebp
xor
sbb
inc
sbb
enter
pop
in
add
add
adc
dec
call
mov
into
pop
cld
out
mov
sbb
xor
or
call
add
lods
lcall
jge
clc
in
pop
sbb
es
rorl
sbb
add
add
jo
lret
add
divb
inc
bound
loope
adc
add
dec
and
add
add
mov
add
pushf
sub
push
outsl
cmpsl
shrb
daa
repz
mov
push
mov
and
sub
movsl
add
sbb
add
add
dec
and
push
adcb
and
adc
add
addl
je
xor
ret
pop
sbb
sbb
inc
jmp
sub
xor
lods
call
mov
cmp
or
xor
scas
enter
fists
mov
xorl
cmp
xchg
jne
push
push
sbb
pop
mov
hlt
jae
push
add
xorb
jmp
or
pop
lret
add
mov
adc
add
movsl
xchg
push
add
inc
loop
push
rolb
lods
movb
jmp
clc
sub
or
and
sarl
ja
imul
pusha
cmp
je
mov
add
xorb
add
pop
jmp
loope
cmp
add
adc
adc
orb
add
cmp
sbb
je
add
dec
fsubrl
rcrl
int
cmp
push
xchg
jne
lea
mov
and
repnz
add
or
and
dec
ja
or
jge
in
or
inc
int
inc
jbe
mov
mov
testb
dec
pop
cmpsb
sbb
xchg
adc
push
add
call
add
sub
stos
and
or
cltd
adc
call
stc
inc
add
ret
enter
add
sarb
testl
adc
jo
pop
enter
xchg
mov
inc
or
mov
ret
pop
adc
jne
scas
jg
add
mov
popf
jmp
xchg
dec
cmp
pop
add
push
sarb
sub
push
push
orb
daa
mov
jne
lea
ret
test
jbe
inc
cmp
stos
or
mov
xor
aas
cli
rorb
and
mov
add
jns
testl
xchg
add
mov
xor
jne
into
sarb
mov
add
pop
mov
or
adc
jnp
xchg
xchg
sub
xor
movsb
and
inc
mov
dec
add
mov
mov
add
push
add
xchg
adc
jno
mov
push
pop
lret
pop
add
divb
stos
sbb
dec
loopne
ja
xchg
pusha
pop
add
pop
xor
mov
sub
mov
pop
inc
push
or
inc
test
inc
loopne
mov
add
mov
add
mov
faddl
add
jmp
push
inc
ja
in
sldt
adc
add
dec
mov
cmc
dec
add
inc
mov
mov
cmpl
mov
jne
add
xchg
mov
cmp
out
sub
mov
sbb
repnz
sahf
leave
dec
shll
cld
add
push
stos
fcos
sbb
int
jne
sub
mov
test
arpl
sub
sbb
lret
into
cmpl
fs
add
gs
xor
incb
and
xchg
xchg
cmp
sub
dec
xchg
xchg
movsb
mov
cli
popf
loopne
add
adc
dec
add
add
scas
roll
sub
cmp
sbb
clc
add
dec
outsb
loopne
lea
cwtl
inc
jnp
or
jne
leave
rolb
clc
xor
das
add
jae
xor
push
dec
movsl
test
sub
xchg
fadds
adcb
mov
add
mov
in
or
sub
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
push
iret
pop
pop
or
aam
xchg
xchg
fsubrl
mov
or
fldt
push
popf
jno
cmp
fmuls
ja
jle
scas
pusha
and
sbb
xor
jmp
and
mov
add
pusha
mov
add
pop
push
jl
movb
cmp
or
cli
jbe
inc
inc
stc
addl
add
cmp
sbb
sub
xor
ror
and
stos
add
push
inc
pop
sarl
xchg
push
or
add
push
fdivs
dec
sbb
fnsave
sbb
xchg
inc
pop
cwtl
movb
jo
frstor
adc
sub
add
daa
jecxz
iret
cli
enter
inc
push
jne
addb
mov
push
repz
imul
rcrl
jo
jnp
test
rolb
clc
pop
es
xchg
addl
dec
sub
jne
movb
xor
int3
decb
mov
mov
adc
aad
add
cmp
sbb
fs
daa
cld
test
icebp
inc
negl
test
enter
loopne
pop
add
mov
cs
popf
rcll
call
add
psllw
pop
cld
sbb
enter
cli
clc
sbb
orl
xorb
jbe
imul
lea
addr16
vmovntps
pusha
or
and
xchg
mov
jle
and
jb
js
or
lock
sbb
insb
aas
cld
movl
dec
nop
add
jle
xor
add
aas
incb
jne
push
sub
dec
sub
mov
mov
imul
pop
add
out
repnz
push
test
stc
test
or
xchg
loope
add
push
std
pop
dec
pop
dec
imul
or
jl
inc
roll
mov
xor
add
pop
and
call
hlt
or
clc
and
or
push
push
std
in
in
push
test
jg
add
pop
mov
pop
aad
or
and
scas
jp
loopne
xor
inc
outsb
and
pop
push
xchg
sbb
cmp
add
jl
or
add
jno
imul
adc
add
mov
or
lods
add
lcall
decl
push
cmp
fisubrs
cltd
imul
and
scas
jg
aaa
add
mov
movsb
sub
add
add
dec
mov
add
sub
push
pop
ret
sbb
adc
cmp
add
mov
imul
add
adc
inc
add
fistps
xor
sbb
add
insl
add
es
push
add
dec
mov
lahf
add
iret
dec
xor
push
pusha
in
push
add
insl
sub
mov
faddl
mov
clc
addr16
fwait
cmp
add
mov
or
add
frstor
dec
loopne
or
xchg
push
or
cmp
push
add
sub
and
add
lret
lds
add
pop
and
cmp
call
adc
fstpl
add
and
insl
pop
mov
lock
dec
popa
and
lret
mov
push
test
sub
cltd
cld
jbe
xchg
and
or
ficompl
cli
add
or
xchg
inc
adc
adc
jmp
orb
cwtl
sbb
in
out
rcrb
mov
pcmpeqb
lods
and
sti
inc
outsb
pop
je
add
es
add
idiv
popa
in
in
add
call
in
pusha
sub
inc
jo
bound
lock
data16
add
mov
add
jmp
cmp
or
je
add
mov
hlt
lods
js
push
andb
mov
mov
lea
inc
push
push
lock
add
mov
xor
movb
in
push
je
xor
adc
add
out
call
pmaxub
imul
jecxz
sahf
incl
or
loopne
push
lea
dec
cmp
xchg
add
xchg
cltd
jb
add
enter
in
movsb
add
inc
lock
mov
adc
push
pop
add
mov
sub
bound
stos
inc
cwtl
add
adc
xor
sti
add
cmp
sbb
dec
dec
add
adc
sub
cwtl
and
orb
xor
mov
inc
inc
sbb
sub
in
or
add
mov
inc
jno
enter
and
cmp
imul
les
inc
xchg
pop
cmc
adc
pop
aas
fildll
les
cmp
out
loop,pn
sbb
call
push
mov
inc
add
sbb
mov
jge
pop
add
lods
inc
adcl
aas
js
in
cmp
and
popa
movsb
inc
jecxz
dec
jne
add
subb
jg
in
and
mov
imul
or
and
test
dec
xor
jne
push
and
push
cmpb
in
push
mov
inc
adc
dec
and
add
xchg
add
bound
scas
add
pushf
jns
lds
add
adc
dec
fadds
sti
in
fsubrl
pop
or
addb
xchg
sti
push
inc
add
cli
mov
fsubr
jmp
adc
addb
push
jle
add
jecxz
loop
adc
lahf
add
mov
or
and
orl
movsl
pop
add
call
pusha
inc
aad
sub
pop
add
int3
ljmp
or
inc
add
pop
cmp
add
add
lods
xor
cmp
ja
mov
push
out
sbb
repnz
or
test
or
add
cmp
pop
sbb
inc
or
add
mov
testb
mov
add
cmpl
xchg
dec
orb
imul
push
movsl
adc
pop
pop
push
xlat
adc
into
rclb
and
mov
dec
mov
mov
mov
sub
cmpsb
outsb
add
sub
dec
rorb
xchg
cmp
stos
adc
xchg
aas
jp
sub
jno
xchg
mov
mov
je
jmp
xor
xchg
mov
stc
mov
xchg
les
sbb
jns
lret
jne
add
jecxz
and
add
jns
jnp
ja
add
dec
or
call
mov
mov
test
jo
clc
bound
jb
ss
cld
xchg
sub
cmovne
jo
mov
rorb
push
jnp
sbb
inc
inc
cmpb
scas
pop
mov
call
sbbb
jge
add
adc
enter
add
jne
inc
pop
and
push
sbb
jno
pop
or
pusha
add
cmpb
push
dec
dec
mov
add
sqrtps
test
shlb
adc
inc
and
and
jne
enter
pop
add
sbb
or
inc
mov
test
cld
mov
ljmp
push
push
incl
shll
call
add
mov
jp
add
push
or
loopne
insb
lret
jl
xorl
pusha
popf
add
addr16
cmpb
fadds
xor
or
aam
adc
jg
inc
xchg
movl
jns
mov
mov
push
stos
sub
add
insb
icebp
jne
push
or
pop
sub
sub
daa
rcr
jo
pop
fsubs
jp
add
and
je
add
and
adc
mov
shl
insb
xchg
add
xchg
sub
faddp
xor
cmpsb
cli
mov
pop
inc
rorb
ljmp
fwait
mov
ljmp
mov
pop
int
movsb
cmp
dec
aam
xor
call
add
mov
dec
mov
lds
dec
mov
shl
or
cmc
inc
inc
shr
jne
push
add
lock
add
leave
or
pop
les
inc
add
jne
add
push
cmp
inc
pop
jmp
adc
in
add
aas
ljmp
data16
test
cmc
into
movhps
cmp
sbb
add
add
push
iret
js
fimull
sbb
lods
or
test
add
pop
inc
in
xor
ja
or
adc
cs
mov
and
jmp
or
mov
pop
mov
in
mov
jns
jmp
inc
pop
xchg
add
and
adc
pop
jp
aas
sbb
inc
xchg
add
mov
pop
jg
pop
jnp
lock
fsubs
push
add
je
in
mov
ja
add
mov
lret
lock
cmp
mov
sub
pop
mov
rolb
popa
or
push
pop
ds
add
ljmp
mov
add
sub
add
jae
hlt
out
and
add
mov
mov
adc
pop
pop
int3
loopne
add
jne
add
loope
sbb
out
add
movsl
imul
and
into
add
or
rolb
sbb
mov
xchg
lcall
cmpsb
pop
jns
push
add
imul
lock
add
or
and
push
mov
out
or
adc
and
sub
outsl
leave
or
fcoml
adc
adc
xchg
dec
mov
jl
or
cmp
add
mov
mov
js
add
sub
cli
js
add
push
jmp
sub
add
enter
ja
arpl
jecxz
loopne
loopne
cmp
or
dec
push
les
outsl
js
push
inc
pusha
pop
clc
add
aad
mov
fsubs
add
adc
imul
inc
sti
mov
xor
rcl
gs
sar
into
call
mov
add
mov
mov
jge
mov
or
cmpsl
pop
lahf
bound
pop
mov
mov
fs
or
mov
sbb
sub
push
lock
adc
cmp
sti
arpl
add
out
ja
cmp
cld
cltd
xor
ret
add
sbb
mov
imul
repz
fadds
cld
loopne
push
adc
negl
incb
decl
add
test
ret
cltd
xchg
insb
add
dec
cld
fidivs
push
faddl
loopne
in
sahf
into
fisubl
pop
mov
add
out
pop
add
sbb
xor
adc
int3
inc
inc
pop
mov
jl
add
adc
jne
mov
shlb
mov
hlt
or
xchg
adc
fwait
sub
lea
push
in
dec
pop
sbb
movsb
cwtl
cmpl
sbb
mov
mov
jmp
outsb
sub
push
and
add
jno
xor
rcl
mov
sbb
push
pop
inc
ljmp
into
loope
jmp
dec
lock
add
push
cmpsb
jb
adc
dec
add
ja
mov
jge
sub
call
pop
adc
add
in
jmp
cmpsb
sbb
insl
jp
add
inc
loop
or
call
sbb
lock
add
sub
movsl
push
jbe
es
lret
clc
jmp
and
loopne
imulb
mov
sub
push
add
sub
mov
add
clc
lcall
cmp
add
jle
ja
xchg
jne
das
and
adc
dec
xchg
and
mov
add
into
jnp
cmpb
es
and
add
fildll
dec
xor
sbb
sub
adc
add
xor
or
jne
add
je
mov
in
cmp
push
nop
cmp
gs
sbbb
sub
push
hlt
xchg
add
in
pop
xor
fcomps
loope
mov
test
add
cli
pop
push
out
adc
loop
dec
subb
nop
cmp
adcb
sub
and
loope
add
or
xlat
orb
lock
ljmp
test
and
jnp
aas
and
adc
inc
js
adc
add
jmp
sub
or
pop
mov
or
cmp
lock
pop
lds
popf
add
mov
mov
add
nop
push
loope
pop
dec
fistl
or
add
sbb
outsb
mov
fnstsw
test
xor
ljmp
cwtl
ret
jge
sbbb
or
data16
sbb
sub
adc
jne
cmpsl
cmp
std
sub
movsb
into
pop
pop
jl
lock
add
lahf
adc
adc
sbb
dec
pop
aam
clc
cmpsl
add
pop
roll
xchg
add
jns
mov
or
lret
add
int3
notb
sub
cwtl
fs
inc
add
cli
and
bound
fldl
lea
enter
jl
add
ss
nop
fsub
mov
sbb
sbb
cwtl
adc
scas
lods
adc
mov
jl
loop
adcl
testl
cmp
add
add
push
mov
loop
int
and
loope
add
popf
sbb
pushf
adc
dec
icebp
clc
insl
mov
or
sti
dec
loope
jle
cmp
push
rcrb
pusha
pusha
cmp
and
inc
test
pop
mov
pop
fsts
clc
push
xchg
add
inc
mov
js
add
pop
adc
fcom
mov
pop
dec
ljmp
mov
add
mov
inc
add
jbe
out
mov
add
nop
jns
sbb
xchg
xchg
sub
mov
dec
add
sbb
je
add
inc
mov
xchg
add
call
cmp
les
lock
movsb
sub
test
inc
sbb
fcomps
or
popa
je
nop
mov
loopne
mov
push
add
push
adc
pop
add
dec
sub
jno
dec
mov
mov
dec
rolb
jmp
scas
jae
or
pushf
mov
out
xchg
mov
xchg
arpl
mov
les
cmpsb
jmp
push
xchg
je
xchg
and
pop
pop
inc
inc
addr16
or
into
dec
or
mov
insl
jp
les
nop
add
cltd
xchg
sub
dec
and
sub
shlb
out
cld
lods
add
scas
mov
add
mov
mov
clc
sti
add
mov
das
pop
add
sbb
lock
inc
xchg
add
mov
mov
pop
add
xlat
mov
dec
push
cmp
std
and
stc
or
adcb
xchg
jle
fsts
push
mov
pop
insb
push
add
sub
jne
push
popa
sub
nopl
adc
fidivrs
and
pushf
lods
add
test
mov
add
or
cmp
cmp
xor
loopne
xchg
ret
xchg
cmpb
es
insb
xor
repz
adc
stc
cli
outsb
roll
adc
nopl
ljmp
dec
sbb
mov
clc
call
adc
cmpl
dec
mov
push
push
add
and
into
add
adc
mov
hlt
add
aad
dec
jmp
mov
ja
sub
bsr
cmovl
fsubr
jle
stos
dec
sbb
add
adc
mov
pusha
dec
dec
mov
insb
jno
dec
pusha
pop
and
add
aaa
js
push
loopne
lock
mov
push
dec
call
cltd
xor
add
add
jmp
sahf
jl
jl
sbb
cwtl
gs
lods
sub
adc
cmp
rcl
sub
push
test
les
cmc
jne
loopne
test
add
and
dec
jmp
mov
aas
pop
lods
popf
out
std
mov
call
add
sbb
push
dec
andl
ret
and
mov
xor
mov
mov
call
inc
rolb
and
decb
and
add
and
jb
or
jae
pop
jo
and
add
pop
int3
fdivs
into
dec
lock
add
ljmp
lods
sub
outsl
jno
xor
mov
pop
add
xchg
and
pop
dec
pop
outsl
xchg
hlt
mov
add
sub
or
shufps
sub
cmp
add
jge
fildl
sarb
add
dec
or
mov
and
loopne
xchg
xchg
cld
iret
lods
mov
xchg
push
dec
add
dec
add
test
adc
xchg
dec
nop
and
call
mov
inc
pop
sub
pusha
inc
ret
fldl
inc
daa
mov
inc
shrl
stos
int3
repnz
xchg
push
mov
leave
or
xlat
mov
outsb
inc
add
xchg
xor
cmpsl
hlt
mov
add
xchg
dec
mov
scas
sub
imul
add
inc
pop
jb
pushf
inc
sub
movsb
add
add
popf
inc
shrb
ret
add
test
add
pop
je
lret
addb
mov
dec
mov
movsl
incb
jae
cmp
mov
sbb
clc
cmp
cmpsl
bound
push
shrl
add
jmp
int
push
or
imul
arpl
or
xchg
repnz
pop
int3
add
xor
call
dec
je
add
sti
push
jg
cld
xor
add
or
clc
adc
icebp
push
add
adc
mov
stc
fmul
pop
add
jmp
mov
xlat
push
add
mov
pop
adc
mov
add
inc
mov
es
or
and
rorb
or
add
adc
and
mov
and
inc
pop
shlb
lds
sti
ljmp
xchg
dec
sub
xlat
xchg
nop
jmp
clc
inc
add
mov
das
pop
add
daa
rcll
ror
fists
add
sub
mov
sbb
or
pop
jbe
push
lock
add
jge
dec
clc
adcb
je
add
cmp
pop
dec
add
cld
imul
sub
add
and
insl
inc
ds
push
pusha
mov
cmp
decl
or
add
arpl
rolb
sub
cmp
rolb
daa
lcall
add
mov
cwtl
imul
test
mov
ret
les
add
dec
jmp
into
clc
sysenter
iret
add
enter
sbb
xchg
adc
jmp
mov
push
orl
and
add
or
or
or
or
add
test
das
mov
jns
mov
nop
inc
pop
xchg
sbb
or
or
push
lods
xchg
imul
xchg
cwtl
jl
pop
je
cmpl
jg
mov
movsl
fs
cmp
mov
sbb
push
inc
int3
cmp
or
xor
jge
sub
test
pop
je
rcrb
cmpsb
dec
in
aas
ret
xchg
xchg
movsb
fs
mov
push
rclb
dec
cmpsl
outsl
sub
xchg
mov
xchg
add
shlb
movsb
ror
rcr
daa
fdivs
jg
push
adc
add
enter
xchg
mov
push
add
imul
xchg
adcb
and
and
movsb
xchg
test
repz
mov
and
push
dec
shlb
add
mov
sbb
push
aad
incb
enter
mov
scas
arpl
shlb
out
dec
cld
shl
add
daa
or
movsl
sbb
jae
add
pop
test
cmp
pop
out
popl
pop
rclb
xor
mov
mov
mov
loopne
add
pop
adc
xchg
pop
push
aas
repz
pop
sub
add
sahf
jno
call
mov
call
add
inc
mov
pushf
pop
cmp
mov
fsubs
bound
pop
push
fldcw
jo
mov
push
or
pop
movsb
cmpsl
add
in
mov
lahf
sti
add
sub
push
aaa
add
sahf
mov
testl
pop
aam
in
cmp
or
push
or
es
add
mov
mov
mov
xor
test
lock
movsb
or
in
add
jb
aaa
xor
mov
addb
in
inc
mov
dec
popa
mov
loop
add
xor
sahf
push
aam
add
or
faddl
inc
mov
pop
adc
mov
imul
adc
add
jp
test
xchg
dec
xchg
dec
subb
jg
jne
add
cwtl
test
jl
adc
loope
and
jmp
es
add
or
mov
add
add
cmp
ret
pop
mov
and
add
inc
dec
push
add
nop
xor
add
clc
out
sub
sarl
mov
add
outsl
xchg
enter
dec
and
mul
lcall
mov
push
repz
ds
sub
sbb
pop
ljmp
add
movl
xor
jge
mov
jo
jne
add
rol
dec
faddl
repz
pop
orb
dec
and
add
and
mov
imul
or
jne
sbb
sbb
xchg
pop
mov
fwait
jae
add
mulb
std
push
leave
dec
in
bound
pop
aas
xorl
adc
cs
repnz
shll
sarb
cmp
sub
lock
add
pop
inc
inc
jmp
lcall
sub
cmp
mov
or
add
sbb
adc
push
lret
cli
cmc
sbb
dec
jnp
insb
pop
rclb
jmp
in
add
orb
sub
add
jne
mov
loop
jnp
test
add
bound
in
inc
js
xchg
jge
lea
mov
add
jmp
pusha
aad
sub
xchg
arpl
stc
aas
mov
add
mov
daa
and
pop
add
mov
mov
push
jecxz
sub
daa
sbb
mov
pop
inc
and
popf
test
sub
sarb
pop
cli
jbe
cmp
movsb
nop
xor
mov
sub
add
adc
rolb
adc
inc
pushf
jns
loope
push
fiadds
pusha
gs
push
clc
lock
pop
mov
dec
loopne
shll
add
flds
and
bound
fcoml
sub
call
xchg
mov
lods
ror
push
or
call
loop
xchg
roll
add
paddusb
addb
stc
push
add
shlb
mov
pop
dec
push
add
dec
jno
sbb
cmp
mov
or
sub
iret
ret
in
pop
or
inc
push
lock
mov
add
call
add
fdivs
inc
mov
fs
cmp
mov
out
jo
sbb
aam
dec
or
inc
jmp
stos
sbb
test
mov
aas
icebp
dec
cmp
sub
adc
aaa
xchg
xchg
jle
iret
add
cmpsl
xchg
test
scas
enter
jle
add
in
add
sbb
inc
daa
or
xlat
mov
fwait
mov
sub
add
or
dec
or
push
aad
sbb
fsubr
push
add
sub
icebp
inc
add
sbb
dec
mov
push
lret
xchg
in
sbb
or
hlt
ss
add
faddl
lea
loopne
in
push
xchg
xchg
rol
mov
sbb
inc
sbbb
js
mov
cmp
in
inc
adc
rclb
or
roll
lock
int3
pop
push
adc
sub
cmp
mov
xor
enter
sbb
arpl
mov
xor
push
sub
sbb
les
aas
and
into
mov
cmp
adcl
nop
repnz
cmp
loopne
sti
add
and
adc
hlt
mov
push
pmulhuw
adc
aad
stc
or
and
popf
jno
push
nop
pop
dec
cltd
mov
fistpl
cmp
aas
das
fs
cmpsl
test
add
pushf
add
mov
add
popa
call
jo
dec
push
pop
mov
xchg
mov
xadd
nop
add
aam
test
jecxz
adc
add
pop
jp
add
movsb
sub
mov
inc
imul
or
mov
inc
or
loop
cmp
xor
and
sub
mov
push
sbbl
inc
dec
adc
push
movsl
scas
cs
add
jae
inc
jb
enter
popa
jle
sbb
inc
mov
add
ret
xchg
xor
add
lock
mov
dec
fbstp
adc
and
ret
mov
enter
xor
adc
mov
cmp
es
adc
ret
cwtl
mov
sub
and
mov
mov
push
es
inc
sahf
jo
enter
push
xor
pusha
adc
and
sbb
push
dec
inc
stc
aas
pusha
xor
inc
rcr
icebp
loop
mov
loopne
je
sub
mov
xchg
inc
and
cmp
sbb
mulb
inc
adc
add
or
sub
add
sbb
and
add
aaa
or
sbb
stc
adc
in
cmp
add
dec
adc
call
xchg
dec
or
fbstp
sub
xchg
add
insb
cwtl
fcompl
call
xor
cmc
pop
aam
pushf
into
xor
scas
cld
inc
cmp
cmpsb
fcoml
enter
les
xor
repz
aas
sbb
rorb
sbb
out
dec
enter
lods
in
cmp
test
cmpsb
inc
inc
movsb
sub
push
mov
pushf
mov
cwtl
aad
sahf
push
xchg
cltd
mov
mov
or
dec
mov
and
xor
xchg
sbb
js
mull
je
sti
sbb
xchg
and
cmp
or
test
call
daa
lock
add
jo
aas
adc
dec
add
inc
pop
pop
es
sbb
stc
mov
adc
jns
lock
cmp
jmp
push
shlb
loopne
jp
mov
add
push
repnz
xchg
cmpb
jb
add
mov
mov
fadd
test
push
xor
enter
lahf
sbb
scas
cmp
jmp
shll
orl
pop
adc
ret
or
or
repz
add
adc
mov
push
inc
mov
add
mov
adc
mov
xchg
jb
and
lock
mov
popl
adc
stos
push
insl
fs
dec
pop
mov
cmp
or
jg
cmp
std
jl
or
gs
dec
stos
movsb
test
mov
flds
and
mov
sbb
mov
je
loop
clc
orl
push
and
pusha
movsl
pop
aas
sub
sub
xor
push
add
sub
add
sub
dec
add
movb
add
add
add
mov
out
push
in
add
add
xchg
add
clc
nop
jge
mov
cmc
repz
xorb
add
fdivl
divl
pop
clc
iret
addb
test
in
inc
add
stos
cmp
fcoml
pop
jae
andb
cli
adc
push
loop
outsl
dec
mov
add
sub
dec
fcmovnu
jnp
lock
add
add
repz
faddl
mov
dec
je
add
hlt
mov
push
xor
ljmp
or
aas
jae
or
jo
daa
add
iret
es
pusha
pop
xor
and
and
jo
add
fnstenv
add
int3
fldl
lea
pushf
fwait
push
mov
mov
rorl
cmp
push
push
add
cmp
add
les
and
inc
loop
scas
push
ret
rolb
das
test
add
pop
dec
jl
divps
sbb
or
and
sub
sbb
in
inc
add
dec
out
loope
sbb
in
mov
cli
add
push
cmp
call
xor
add
xlat
jne
cltd
rclb
pop
fnstcw
add
pop
or
fldl
xchg
decb
sub
or
jmp
add
dec
cmc
sub
clc
dec
call
pushf
add
mov
jg
divb
mov
mov
shrb
data16
call
je
sbb
in
inc
mov
jne
and
lds
sbb
add
ficoms
xor
mov
and
pop
push
sbb
xlat
je
cmp
lock
addr16
adc
clc
jo
add
jecxz
lods
cmp
cmp
and
and
and
out
add
in
xor
or
test
pusha
shrb
sbb
imul
out
pushl
test
orl
pop
mov
push
clc
xor
and
call
cs
sub
lret
jecxz
pop
and
xor
inc
cmp
outsl
ss
add
inc
inc
add
sar
neg
jns
lret
fadds
pop
adc
ja
add
mov
and
jno
sbb
cmp
in
pop
add
jo
sti
jmp
int3
pop
call
mov
fdiv
sub
shl
movsb
jp
add
or
inc
pop
ret
add
sub
jmp
incb
cmpsb
mov
bound
sub
je
xor
faddl
lock
pop
nop
pop
add
sub
cld
out
clc
add
repz
add
xchg
push
and
inc
enter
add
les
mov
es
add
aas
hlt
push
es
inc
or
add
lods
sbb
movsb
stc
mov
add
push
mov
out
push
iret
lea
pop
cs
gs
or
mov
sbb
add
decl
jne
add
or
xor
add
in
adc
inc
pusha
jo
xchg
nopl
or
push
loopne
xor
cwtl
data16
or
cwtl
sahf
mov
and
adcl
add
mov
leave
repnz
lea
mov
add
sbb
mov
dec
add
shll
movsl
arpl
add
lcall
dec
and
cmp
add
lcall
sbb
orl
add
adc
inc
fcomi
jmp
cs
imul
sar
lret
inc
lock
test
loope
dec
xchg
shll
cld
fildl
sub
dec
fldl
push
sbbl
add
jae
push
out
clc
loopne
dec
jne
add
mov
in
frstor
call
sbb
add
bound
jmp
xor
mov
jns
xchg
add
sub
pusha
add
cmp
jae
pop
in
pop
sbb
and
dec
sbb
or
cmp
add
adc
data16
cmpsb
sub
add
pop
push
mov
sbb
and
push
xorl
xor
ljmp
push
data16
into
add
enter
test
mov
test
jns
popf
or
popa
add
sarl
pusha
testb
mov
sbb
or
add
mov
loopne
jae
repnz
push
and
and
adc
lock
fildll
xlat
mov
ret
fidivl
test
add
lods
repnz
fwait
test
adc
sbb
or
pop
ret
les
jne
mov
pusha
lret
jmp
test
adc
xor
add
mov
ljmp
pop
add
adc
pop
aad
cmpb
shrl
idivl
seta
sti
push
aad
pop
dec
push
inc
lock
rcrl
cmp
out
mov
out
call
sarl
jmp
lds
add
xchg
cmp
sbb
add
sub
adc
cmp
add
je
sub
fbld
add
inc
sbb
pop
sub
rclb
inc
cmp
pop
cld
adc
ret
or
pop
jl
add
push
add
fchs
movsb
jbe
add
fistpll
jmp
fistpl
test
sahf
jo,pn
pop
or
add
adc
test
ret
lods
xor
dec
mov
cmp
or
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
fistpll
adc
mov
aas
or
addl
call
aas
addb
xor
sbb
push
add
adc
jp
and
or
and
mov
in
aam
insl
orb
scas
add
pop
out
or
lock
dec
adc
inc
inc
and
adc
vmwrite
or
test
inc
add
clc
fs
sub
loopne
xor
add
mov
cmp
mov
lea
add
enter
sbb
pop
and
ror
test
xor
jno
jo
cwtl
add
cmp
add
aas
mov
xchg
mov
mov
test
cmp
inc
into
push
ret
adc
fidivrs
and
inc
mov
pop
push
or
sti
sub
ljmp
mov
hlt
xor
fninit
push
imull
rorb
sarl
roll
loopne
add
jno
fucomi
cmpsl
add
loop
cmp
popa
sub
lods
pop
add
fcomip
sarl
mov
cwtl
in
xor
or
xor
mov
jne
dec
iret
fdivr
imul
pop
repnz
divb
arpl
sub
roll
sbb
add
push
dec
addb
jp
add
clc
cmp
ja
and
add
adc
cli
add
jl
push
shl
lock
push
dec
and
jmp
and
setle
jns
add
int3
add
add
mov
or
dec
cs
roll
outsl
movsl
fisubs
mov
push
add
xlat
or
gs
push
ret
sub
jmp
mov
add
pop
push
mov
lea
loopne
add
jmp
push
leave
test
jbe
cmp
xor
adc
inc
in
add
leave
or
adc
mov
xorb
add
clc
rolb
jmp
stos
sub
cmp
dec
jne
movsl
push
rclb
push
jecxz
jbe
push
pop
stos
loope
inc
mov
mov
mov
mov
imul
test
sub
clc
dec
add
pop
adc
shrb
or
and
push
mov
daa
lret
loopne
fsubrl
fsubr
js
push
push
enter
sub
aam
sbb
mov
dec
ret
mov
mov
popa
pop
inc
add
jle
testl
or
add
cmp
xor
add
idivb
xor
cmp
add
dec
jne
add
data16
mov
hlt
add
bound
testl
mov
mov
xor
dec
push
jbe
pop
movsl
das
popf
orb
and
dec
aaa
add
inc
pop
and
int3
xchg
fptan
adc
jp
push
loop
icebp
sbb
add
push
mov
adc
cmpsl
lock
cmc
mov
and
and
add
cmp
add
shll
sub
bnd
pop
movsb
xor
sbb
sub
in
add
sti
bound
iret
pop
dec
in
lret
sbb
jl
mov
add
mov
and
test
xchg
push
scas
jb
pop
pop
xchg
pop
sub
pusha
cmp
aaa
shrb
push
fisttpll
xchg
and
jb
sahf
nop
mov
daa
pop
cvtpi2ps
in
addb
jg
jp
cmp
xchg
stc
repz
xor
scas
jge
test
daa
inc
clc
add
jno
aas
jmp
add
inc
adc
add
push
outsl
add
out
ljmp
inc
jnp
cmpb
and
mov
test
xor
add
loopne
in
mov
gs
push
mov
pop
mov
out
jl
inc
inc
mov
in
hlt
pop
cmp
and
mov
sub
int
xor
movsl
and
ror
sbb
mov
jl
mov
push
sub
popf
movsl
mov
adc
jl
in
punpckldq
fisttpll
add
dec
add
mov
jle
add
ret
fimuls
std
sahf
call
inc
outsl
dec
adc
and
lock
mov
ret
add
add
inc
or
sbb
dec
jne
daa
inc
xchg
mov
add
add
cmpsb
shlb
jmp
iret
push
add
mov
movsb
add
add
mov
add
inc
cmpsb
push
push
adc
add
or
sbbb
cs
stos
js
daa
jge
test
adc
add
push
pop
leave
jl
adc
add
roll
mov
xchg
adc
insb
mov
enter
ss
mov
add
inc
cld
std
xlat
add
push
lds
add
dec
mov
jb
add
movsl
iret
mov
adc
add
jle
andb
cmp
scas
das
loope
pop
xor
mov
pusha
test
pop
and
add
call
jp
jno
add
mov
jns
call
add
jecxz
pop
push
sub
in
cmpsl
lret
push
push
inc
lods
aam
jno
ret
adc
mov
add
mov
popf
jb
add
cld
xor
dec
add
push
add
xor
mov
jmp
mov
sbb
add
push
fdivs
or
xor
xor
push
add
xor
inc
fimull
pop
aad
not
popf
pusha
push
jge
dec
and
cli
rolb
or
push
repnz
addl
cmpsl
aam
and
sub
pop
jg
pusha
adc
push
xlat
mov
inc
jo
xchg
sub
add
push
rol
add
jl
jg
mov
or
push
add
inc
mov
adc
cmp
sub
lds
rclb
shr
ja
in
cmp
pop
inc
out
stos
rorb
hlt
sub
in
sbb
xchg
or
sbb
adc
ret
jmp
sub
stos
add
push
pop
shrb
idivb
add
ror
pop
inc
add
cmp
xchg
pop
rcrl
inc
push
fistps
mov
shl
mov
in
push
push
cmpsl
mov
mov
andb
faddp
lret
add
test
mov
xchg
rclb
or
add
mov
jecxz
ret
add
mov
inc
pop
mov
add
and
cmpsl
xchg
pop
add
test
fldl
les
imul
jl
clc
divb
add
ret
xchg
stos
lcall
les
mov
jae
setne
mov
call
lahf
inc
mov
incb
inc
dec
inc
cwtl
repz
xchg
das
jge
into
and
jbe
dec
negl
movsb
cmp
pushf
pop
push
and
daa
lds
pop
add
lods
and
or
int3
and
pop
add
repz
inc
addr16
cmp
sbb
lds
push
cmp
das
repnz
rorb
decb
sbb
lds
mov
jo
inc
add
xor
and
sbb
stos
mov
movsb
and
dec
pop
xor
in
mov
add
test
adc
adc
dec
pop
cltd
add
mov
mov
or
repz
vpsrld
jb
push
and
push
cld
jge,pt
les
push
mov
mov
lret
push
xchg
int3
dec
xor
aam
neg
and
fsubl
mov
cmp
dec
loopne
pop
popf
or
add
imul
ja
fstpl
jbe
sbb
f2xm1
movsl
data16
mov
int3
add
cld
cmp
rcrb
jg
je
jp
mov
mov
add
pop
dec
jle
mov
sub
jb
add
dec
adc
cmc
jmp
clc
xor
pop
mov
ret
mov
fdivl
addr16
mov
xchg
push
xor
mov
jp
xchg
roll
xchg
xor
orl
dec
jb
repnz
fisubrs
imul
sbb
push
inc
popf
push
mov
std
jmp
jo
or
popa
stc
pop
add
mov
xchg
js
and
or
and
and
loopne
stos
add
inc
sub
lret
enter
mov
add
fimull
test
add
xchg
mov
dec
stos
repnz
add
xor
pushf
sbb
test
push
xor
cwtl
outsl
shll
aas
add
mov
stos
add
in
xor
cmp
add
add
mov
sub
clc
push
dec
jge
test
and
dec
adc
push
jb
mov
das
and
adc
and
fcmovne
add
jnp
hlt
pop
or
sub
pushl
add
push
lret
jecxz
aad
and
add
into
mov
sbb
cltd
xor
xor
in
lock
fcoml
or
mov
inc
or
je
add
leave
mov
sbb
lahf
mov
add
jnp
pop
sub
lahf
imul
or
add
add
mov
mov
cmpl
lock
test
inc
sbb
clc
aad
jl
loope
leave
pop
pop
imul
shl
adc
ret
inc
or
pop
movsl
lock
jle
add
icebp
or
ud2
dec
or
add
mov
js
add
pop
pop
loop
ficoms
icebp
fsubr
fs
lret
mov
xchg
push
add
std
scas
mov
pop
xchg
imul
add
push
cmp
dec
jae
sarb
das
cld
add
adc
mov
inc
je
jg
push
leave
adc
pusha
push
jns
xchg
imul
push
jne
mov
add
in
jbe
jns
add
sbb
xor
add
sbb
mov
mov
sbb
or
or
aas
push
mov
test
add
dec
int3
push
sarb
inc
loopne
dec
push
sbb
test
pop
sub
pop
je
nop
cld
movsl
jo
mov
add
jne
sbb
setb
push
outsb
adc
int
or
inc
ljmp
sub
fcomp
and
clc
pop
add
or
jo
xor
cld
out
pop
test
arpl
out
add
pop
cli
mov
add
sub
jae
sub
sbb
mov
or
xchg
loope
mov
adcb
pushf
dec
mov
sti
adc
into
cmp
mov
pop
adc
mov
mov
rcrl
jecxz
into
sbb
xor
mov
addb
pop
add
jno
push
push
mov
test
pop
movsb
mov
pop
cld
cmp
hlt
or
add
test
push
cs
pop
cli
ret
add
xchg
add
xlat
dec
or
sbb
aas
dec
and
das
adc
ss
mov
xor
or
dec
xor
mov
sub
pushf
lea
ret
and
inc
cwtl
add
and
mov
add
mov
les
add
lods
dec
mov
add
ret
int3
inc
add
push
cld
lret
xchg
pop
push
jo
inc
lcall
mov
fwait
es
iret
pop
push
add
sahf
bound
jmp
jno
movsb
mov
clc
hlt
insb
add
pmuludq
test
pop
int3
dec
rolb
mov
xor
movsl
out
cs
rcrb
add
pop
fsubrl
add
inc
or
aam
mov
push
fcomps
sub
jb
sub
jge
dec
or
testb
cltd
mov
mov
xor
push
add
dec
mov
and
push
ss
sub
inc
pop
add
inc
xor
je
add
add
or
cmpsb
push
xchg
add
pop
mov
bound
xchg
push
mov
mov
add
mov
sub
cmp
add
or
cmp
rolb
imul
sbb
dec
and
ficomps
xchg
push
scas
pop
push
sti
js
pop
nop
push
aad
jp
add
cmp
cmp
subb
sbb
shlb
out
and
incb
cmp
mov
loopne
jl
mov
cmpsl
aam
shlb
xchg
sub
pop
add
mov
loop
repnz
jnp
inc
add
jge
dec
cltd
ss
add
mov
dec
mov
fsubs
incb
jnp
inc
pop
gs
clc
cld
pop
inc
add
mov
and
in
dec
ret
push
lret
add
cmp
clc
add
and
arpl
fneni(8087
or
scas
add
cmp
hlt
add
add
fsubrl
mov
sarb
cwtl
lods
add
mov
and
addr16
lods
or
fiaddl
mov
int3
sub
xchg
clc
enter
lea
add
loop
fildll
adc
mov
testl
and
push
lea
sub
pusha
add
aam
loope
scas
and
in
mov
jne
aad
mov
cmp
mov
sub
mov
sub
adc
pop
adcb
push
std
sub
push
sub
mov
add
lret
add
sbb
push
rcl
pop
data16
jne
mov
les
mov
mov
in
ror
cmpsb
adc
sahf
lods
ljmp
adc
xchg
cmp
and
mov
cwtl
fstl
adc
pop
pop
add
icebp
popf
xchg
es
popl
movsl
jg
xchg
sub
movsb
lods
adc
push
add
jbe
enter
popa
lock
xor
sbb
add
mov
sbb
push
in
adc
pop
clc
jno
add
sbb
lock
add
mov
rcrb
xchg
clc
add
inc
mov
imul
repnz
add
push
push
cmpsb
add
pop
insl
push
mov
mov
sub
pushf
sbb
cvtps2pi
fcomp
test
jns
and
lock
mov
fsubs
mov
add
addr16
push
std
ret
ficomps
sbb
add
test
cmp
mov
icebp
add
add
pop
repz
pop
movb
add
cmp
add
jb
loop
hlt
add
cmp
cwtl
js
clc
xor
cmp
fiaddl
pop
cmp
pop
aas
hlt
mov
pop
mov
call
test
pop
add
adc
aad
mov
pop
add
lea
addr16
add
mov
outsb
mov
xchg
iret
push
add
fmull
sahf
in
int3
nop
adc
mov
dec
lock
push
cli
cs
add
cmpsb
sbb
xchg
mov
rolb
add
push
push
dec
and
add
mov
sbb
or
imul
add
std
cli
or
addr16
push
push
or
cmovae
and
ret
jmp
inc
push
mov
bound
mov
adc
orb
stos
add
ja
fisttpll
call
shlb
push
add
mov
pop
les
stos
add
add
mov
add
les
add
iret
pusha
test
xchg
add
jg
add
jbe
cmp
je
or
adc
mov
cmp
mov
push
adc
push
rcrb
pop
sub
cmp
or
inc
or
mov
adc
add
mov
lret
inc
faddl
add
out
cs
sbb
or
pop
jne
in
shll
cmp
jge
add
incb
sub
sub
or
add
xchg
mov
ljmp
icebp
pop
push
cmp
or
inc
push
cmp
xchg
test
fildl
jmp
in
ffreep
ss
cld
pop
sbb
mov
inc
leave
xchg
aas
mulb
sbb
fistl
data16
pminub
xchg
lock
jb
xor
jae
mov
jbe
mov
cmp
lods
add
ja
dec
push
test
imul
add
push
pushf
adc
out
xchg
add
push
add
cwtl
ret
mov
ds
les
add
push
push
and
mov
and
xor
sub
or
or
ja
out
outsl
sbbl
dec
int
and
sub
xchg
push
add
repnz
cmp
jb
imul
dec
add
rolb
or
pop
or
je
mov
sbb
xchg
mov
dec
scas
dec
add
or
icebp
stos
pusha
aaa
inc
add
push
xor
add
fwait
jbe
mov
adc
aaa
movb
adcb
orb
test
dec
jle
add
popf
sbb
loope
fwait
add
xchg
pop
adc
pusha
ja
or
adc
sbb
push
and
test
add
jge
xchg
push
adc
into
stos
mov
sbb
push
rclb
shl
sbb
add
dec
scas
std
sub
jg
or
test
mov
pop
clc
test
sbb
push
ds
fbld
or
mov
lods
inc
mov
mov
adc
mov
cmp
sub
test
sbb
add
and
xor
adc
hlt
les
pop
enter
pop
sub
or
cmp
push
jne
inc
xor
sbb
sbb
pop
add
ret
notb
mov
push
cmp
cwtl
ror
orl
push
pusha
rolb
add
inc
cmpsl
fldl
adc
push
cmc
or
xchg
adc
jo
sub
add
push
adc
test
mov
inc
push
add
daa
adc
pop
test
push
fidivrs
add
adc
scas
mov
dec
mov
pop
push
fiadds
repz
fcoms
mov
jno
add
xchg
nop
fisubrs
js
imul
push
jp
pop
mov
inc
test
xor
sub
sub
adc
daa
nop
add
loopne
jl
jno
clc
aaa
push
or
add
jecxz
or
in
mov
cmp
or
aam
lock
push
inc
add
je
insl
add
imul
mov
or
call
mov
sub
out
fistps
cwtl
jno
rclb
mov
test
mov
pop
add
add
push
or
add
inc
jmp
ljmp
add
rorb
cmp
jle
cli
sub
sbb
jg
cmp
in
add
jb
jne
push
cld
notl
arpl
sar
cmpsl
pop
outsl
add
fcoms
addb
flds
repnz
mov
loope
adc
ljmp
loop
sbb
add
mov
add
lods
sbb
cltd
adc
mov
aas
mov
or
subb
sbb
add
jg
adc
insl
push
test
sbb
fwait
mov
in
add
addr16
rcrb
scas
add
add
jle
shl
out
mov
mov
pop
sarl
add
mov
add
jb
iret
sbb
add
das
in
mov
add
inc
jbe
mov
cmp
pop
pusha
les
lock
push
add
mov
std
add
in
mov
or
sbb
in
lds
pop
test
daa
andl
les
add
xchg
fstpl
fwait
cmp
mov
inc
pop
and
push
out
loop
xchg
lds
jns
cmp
aad
popf
movsl
loope
jo
in
data16
ljmp
or
sbb
pop
sub
inc
xchg
and
aam
and
out
addb
cmp
pop
mov
add
xor
incb
les
jae
popl
fsubrl
xchg
mov
push
mov
sub
jp
fsubl
lcall
xchg
pusha
adc
mov
cli
aas
out
add
call
outsl
icebp
add
inc
inc
mov
pop
pop
out
mov
stos
cmp
mov
cld
jmp
add
mov
or
jge
test
sbb
pop
push
cwtl
pop
add
mov
sbb
adc
dec
es
or
pop
add
and
test
hlt
movsl
push
pop
dec
push
dec
and
jmp
test
jp
add
aam
dec
movaps
std
rclb
pop
add
stos
push
insl
add
push
add
jle
add
in
xchg
adc
cld
fcompl
add
mov
push
add
cmp
es
jmp
inc
xchg
push
add
dec
add
inc
inc
scas
sbb
mov
rcrb
pop
call
adc
daa
push
dec
mov
inc
movb
sbb
add
push
clc
add
pop
xchg
arpl
rclb
cmp
add
jns
pop
lock
inc
add
add
add
mov
add
inc
push
fstps
cmp
daa
pop
sbb
js
jmp
ds
idiv
add
or
xchg
icebp
shlb
add
xchg
decl
stos
and
jmp
cmpsb
or
movl
ret
mov
rcl
jge
mov
push
cmp
add
or
stos
jns
add
adc
add
leave
cmpsb
movsl
cwtl
and
or
enter
pop
fcoms
outsb
loope
std
jl
xor
ljmp
js
pop
out
movsl
add
add
jg
test
mov
sarb
mov
sbb
repz
and
inc
add
sub
loopne
stc
sbb
mov
out
xor
loopne
addl
je
fs
add
ljmp
shl
sbb
fld
or
ja
jne
add
nop
roll
adc
fdivr
add
mov
in
add
dec
test
inc
in
aas
cmp
pop
pop
pop
mov
inc
jo
jmp
xchg
les
and
test
xchg
xor
inc
sub
jl
test
xor
adc
pop
sub
inc
or
mov
xor
int
mov
xor
enter
or
pusha
pop
pop
dec
jle
push
dec
ss
subb
sbb
inc
in
icebp
imul
xchg
mov
inc
pop
jno
push
push
je
xor
jb
loopne
xchg
add
sbb
addps
jo
cmp
sub
lahf
xchg
mov
xchg
sbb
rol
stos
mov
add
pop
in
add
dec
fld
bswap
movsb
pusha
lahf
push
add
mov
jg
adc
pop
dec
push
outsb
sahf
in
rolb
xor
pop
out
mov
or
add
lcall
add
test
jle
xor
inc
add
in
lea
cwtl
mov
daa
jo
fs
lock
mov
and
push
cmovo
pop
sti
call
mov
add
cmp
add
loopne
shl
int
add
xchg
mov
fdivr
and
push
or
jo
add
add
scas
mov
cmp
xor
movsb
jmp
stc
cmp
cld
jmp
loop
push
neg
xchg
add
xor
adc
sbb
das
icebp
lods
cmp
ret
addb
fists
jmp
or
push
add
cmp
je
inc
push
in
adc
loopne
ljmp
sbb
add
and
jae
or
adc
popf
mov
jne
inc
sub
push
movl
int3
jb
push
add
xchg
jmp
and
fldl
lock
dec
lret
xor
add
add
pop
add
stos
jg
data16
popa
cmp
xchg
int
push
adc
add
ret
mov
or
jmp
sub
push
sub
leave
je
iret
enter
xor
mov
popf
repnz
and
or
add
push
jle
in
loop
ficoms
inc
cmp
xor
mov
and
insl
dec
iret
xor
jae
add
call
jge
pop
mov
push
inc
scas
push
test
enter
or
mov
dec
push
pop
push
shlb
add
cmp
adc
xor
les
cmp
cld
fisttps
mov
cld
cs
jbe
inc
jl
adc
call
and
dec
addl
fldcw
xor
fistl
add
lahf
cld
lods
mov
sub
mov
jmp
popl
and
imul
test
psubsw
lret
xor
jmp
mov
shll
add
adc
inc
loopne
dec
addr16
add
sbb
lods
xchg
popa
lret
or
mov
mov
or
rclb
sub
mov
test
or
and
cmp
bound
sbb
or
xchg
adc
or
movsb
rcll
inc
mov
pop
add
xor
enter
xlat
mov
add
jl
sub
add
add
dec
adc
push
test
sbb
inc
lock
imul
imul
sti
jl
dec
mov
das
add
mov
pop
movl
inc
orl
add
fsubl
outsb
cwtl
pop
cmp
xor
add
loope
rol
pop
pop
mov
pusha
pop
cwtl
mov
shlb
stos
inc
mov
addr16
and
bound
nopl
rolb
dec
lock
inc
loopne
aas
add
inc
add
cmpb
testl
outsl
sub
add
and
dec
jns
push
ljmp
push
adc
xchg
add
xor
call
fildll
mov
pop
mov
add
dec
inc
adc
rorl
xor
pusha
mov
and
das
add
cmp
xchg
add
in
add
pop
in
add
mov
call
push
jle
add
test
mov
adc
inc
sub
sub
cmp
pop
sub
add
popf
loope
pop
je
add
dec
sbb
jmp
push
add
jge
dec
xor
pop
push
ret
adc
roll
sub
lcall
roll
lret
lahf
add
nop
cmc
jl
std
xor
add
and
xor
shrl
iret
aam
dec
mov
bsr
pop
and
aas
pop
add
and
imul
dec
adc
clc
iret
shll
stos
shl
mov
add
int
out
xor
add
push
inc
or
jl
std
mov
push
add
test
shrb
repnz
adc
sub
xchg
add
mov
and
repnz
sbb
inc
xor
jno
jo
add
popf
xor
jmp
call
imul
inc
mov
adc
scas
add
inc
test
out
repnz
inc
sub
xor
stc
jo
adc
sub
sar
xor
and
adc
add
les
popa
jge
xchg
jno
cwtl
std
mov
loop
icebp
cmp
rorb
adc
and
or
mov
in
mov
sub
imulb
add
nop
adc
adc
add
inc
mov
rolb
in
xor
add
pop
add
push
shll
dec
hlt
rolb
cltd
mov
add
cmp
rsm
enter
xchg
adc
iret
inc
mov
add
sti
inc
adc
movsl
mov
add
adc
test
add
inc
hlt
and
or
adc
add
lods
xchg
and
stos
and
out
mov
dec
jg
sbb
enter
sti
shl
add
add
and
or
jmp
add
add
loope
xor
sbb
add
cmp
pop
aaa
ret
divl
cmc
add
or
xchg
rolb
adc
out
les
add
sbb
pop
fmuls
cs
std
loop
out
jmp
mov
jg
icebp
je
cmc
sbb
add
mov
or
dec
xchg
sub
fld
pop
outsl
addr16
inc
xchg
mov
pop
and
lea
jecxz
jnp
add
add
ljmp
addr16
adc
mov
jno
xchg
mov
fnstenv
add
or
hlt
pushf
sub
or
popa
popf
insl
mov
inc
adc
xchg
cmp
in
mov
or
lds
nop
cmp
add
mov
pop
mov
add
add
scas
jns
pop
popf
mov
mov
aas
std
jo
mov
cld
xor
shufps
incb
sbb
out
cli
add
mov
fiaddl
cmp
dec
negl
loopne
xor
out
inc
aam
jmp
sbb
add
jno
pop
adc
cmp
rcl
fldenv
jmp
movsb
iret
inc
in
ret
faddl
mov
push
cmp
add
aam
nop
or
gs
lods
roll
mov
out
and
add
hlt
inc
fld
or
int3
push
out
outsb
mov
clc
test
add
xchg
ljmp
inc
call
sub
add
push
sub
cmp
leave
cmpsl
adc
xchg
stos
imul
mov
invd
pop
adc
xchg
cwtl
loopne
jmp
lock
push
ljmp
sub
cld
pop
pop
add
iret
mov
or
sbb
test
test
jge
add
dec
mov
cmp
pop
loope
test
and
js
loopne
pop
jle
inc
outsl
icebp
loopne
and
add
out
sbb
fld
inc
stc
mov
rcll
mov
xor
mov
pop
push
les
insb
sbb
or
sbbb
sbbl
hlt
xor
sbb
add
or
mov
mov
push
xor
roll
xlat
mov
xor
outsb
popa
cmpsb
jp
add
insl
arpl
outsl
xchg
jo
ret
and
inc
add
loope,pn
xchg
pop
push
js
add
fstpt
aas
push
rcr
adc
add
cli
push
jno
adc
and
push
fs
mov
ud1
fdivs
xlat
scas
cli
notb
mov
sti
js
add
and
testb
jns
mov
dec
stc
mov
enter
or
ljmp
in
lea
adc
sbb
test
push
xlat
push
adc
and
pop
sti
addr16
jp
loopne
jg
fisttps
mov
xlat
aas
xchg
fstpt
pop
popf
sbb
add
jp
and
or
les
or
pop
adc
inc
dec
xlat
popf
and
or
subb
and
faddl
add
int3
xor
sub
addr16
xchg
xchg
fdivrs
adc
xchg
fnclex
push
add
insb
fldl
enter
xchg
out
xor
add
xor
add
push
and
adc
pop
and
add
xor
inc
lahf
cltd
insb
add
cs
adc
or
add
xchg
ljmp
mov
and
out
aam
lods
addl
insb
mov
aaa
dec
xor
or
sbb
repnz
jbe
iret
hlt
movsl
add
or
cs
daa
push
test
add
and
adc
adc
leave
les
js
and
mov
lock
cmp
adc
and
addr16
mov
aaa
or
adc
aaa
sahf
lret
xor
and
add
idiv
clc
out
leave
xchg
add
or
sub
add
iret
push
in
or
les
fwait
adc
je
mov
repnz
cmpsl
xlat
dec
flds
cmp
mov
clc
cli
inc
pop
cmp
and
and
lock
lret
xchg
sub
or
cli
popl
mov
or
lea
lcall
les
jmp
sti
andl
btr
movsb
in
pop
rorb
dec
add
sub
repnz
sysexit
add
cmp
push
add
in
sbb
call
inc
and
add
hlt
adc
fidivl
loopne
ror
or
jmp
mov
cmp
adc
test
push
lds
and
cmp
loop
jns
in
jge
cmp
adc
cmp
dec
dec
sbb
inc
dec
int
add
and
bound
pop
incb
sbb
xor
add
enter
repnz
jg
lea
inc
xor
and
in
push
or
inc
cmp
adc
and
dec
gs
push
std
inc
xor
cmc
sbb
mov
add
jne
in
sahf
into
dec
and
cmp
fcoml
mov
jl
shlb
add
add
xchg
pop
jae
and
mov
or
aaa
rorb
pop
and
stc
add
call
push
mov
lds
and
iret
and
sub
adc
adcl
or
add
push
sbb
mov
xchg
adc
fistps
pop
add
lahf
outsb
daa
adc
nop
mov
inc
mov
shlb
or
fsubrs
popl
dec
sbb
sysret
bound
cmp
xchg
cmp
lods
jno
xchg
cmp
adc
clc
sbb
les
les
call
nop
ret
in
adc
std
push
pop
test
sbb
cs
jp
hlt
aas
xor
outsb
pusha
xchg
hlt
stc
jno
nop
movhps
cmp
mov
call
push
in
add
sbb
mov
add
ljmp
jbe
in
pop
gs
xor
jmp
mov
cmp
xor
inc
add
cmp
test
dec
mov
out
dec
sub
adc
jmp
scas
add
dec
xchg
add
pushf
sub
jge
add
icebp
or
push
jg
js
icebp
inc
sti
mov
and
stc
add
adc
pop
adc
and
inc
shlb
lea
sub
inc
clc
xchg
aas
add
dec
jne
cmp
adc
and
or
outsl
mov
push
and
clc
faddl
pop
and
add
sub
xchg
and
out
mov
mov
bound
dec
stos
or
xchg
add
xor
out
mov
jmp
pop
add
dec
out
pusha
push
xor
aas
xor
xor
mov
push
jle
test
or
ret
dec
xor
xor
das
or
aaa
sub
incb
std
in
mov
scas
add
jmp
int3
mov
pop
push
jnp
jo
or
xor
fisttpl
xlat
add
jae
jns
rorb
or
inc
cmp
xchg
jnp
cld
and
push
and
shrb
mov
dec
sub
sbb
add
push
fsubs
into
sub
outsl
or
xchg
xlat
daa
test
aaa
xor
fnsave
add
dec
pop
testb
or
fadds
insl
out
and
pushf
add
ds
stc
pop
rcrb
jbe
pop
jmp
xor
xlat
setl
dec
rclb
leave
loopne
or
inc
push
and
mov
sbb
adc
sub
pop
adc
cvttps2pi
pop
inc
fimull
pop
jle
cmp
lods
xchg
inc
subps
add
inc
add
and
lds
adc
jo
dec
jp
mov
xlat
xor
pop
jl
xchg
dec
pop
xchg
pop
inc
mov
les
js
add
out
add
cmp
and
shlb
add
pop
faddl
add
adc
mov
xchg
cmp
mov
aas
sub
xchg
add
call
xor
fildll
test
cli
jecxz
dec
fcompl
mov
push
sub
ret
pop
sub
fcoml
mov
sbb
addr16
and
push
jo
repnz
sbb
fst
mov
stos
hlt
or
lock
pop
xchg
push
mov
fimuls
sub
add
push
adc
push
xchg
shlb
test
das
adc
mov
fiaddl
bswap
adc
ficoms
push
adc
xor
xor
adc
filds
loopne
repnz
test
add
jns
push
int3
jbe
mov
les
ja
ret
cmpsb
out
mov
adc
stos
clc
stos
icebp
push
xor
inc
add
ret
jbe
add
or
sub
mov
into
or
outsb
testb
add
aaa
mov
imul
enter
cli
jle
sub
or
cmp
mov
dec
adc
inc
loopne
adc
test
das
pop
mov
pop
push
adc
inc
or
add
mov
test
fwait
adc
adc
orb
xchg
cmpsb
add
sub
or
sbb
xchg
shl
sbb
cmc
adc
or
or
pop
movsb
sbb
add
or
jmp
jecxz
icebp
push
pop
addl
and
into
jns
mov
pop
movlps
aaa
out
cmp
add
in
or
out
add
adc
mov
fwait
add
push
dec
add
xchg
rolb
xor
out
cmp
lock
lock
mov
mov
xchg
add
cmpl
jns
adc
adc
out
sbb
lock
lods
add
xchg
xlat
cmp
sub
cmp
push
add
xchg
loop
mov
or
lret
out
pusha
lret
jae
jns
xor
pop
movb
sbb
cmp
dec
ljmp
mov
adc
hlt
sbb
cmpsl
adc
add
ret
xchg
mov
mov
ret
add
push
neg
push
sub
mov
or
sbb
movsb
jg
add
add
push
ds
xlat
add
aas
push
push
add
xor
sbb
and
pop
je
inc
ret
dec
enter
add
sbb
mov
push
pop
push
aam
andl
or
push
push
mov
xor
leave
pop
cmpl
add
int3
cmc
add
ljmp
inc
push
stc
into
add
jmp
icebp
das
shrb
adc
scas
pop
cmp
add
inc
data16
jbe
add
inc
enter
stos
and
filds
mov
push
lret
in
push
aad
mov
inc
inc
cmpsl
mov
jo
and
add
test
add
dec
pusha
cs
sub
inc
xor
dec
pop
test
shl
add
push
and
or
xor
scas
inc
xchg
push
xchg
mov
add
and
repnz
addb
loop
or
add
sbb
pop
xor
stc
xor
inc
clc
stos
jo
inc
or
push
fisubrs
out
mov
cs
mov
push
stos
push
cmp
out
push
dec
lcall
test
add
cmp
push
call
loope
and
xor
inc
mov
cmp
sbb
add
and
out
xor
inc
sub
xor
add
aaa
in
push
inc
jge
xchg
inc
scas
and
inc
dec
add
push
lea
or
enter
or
psubd
stos
inc
xchg
pop
xor
clc
mov
mov
divb
ret
loopne
pop
hlt
mov
push
cmp
lock
jo
fsubl
in
repnz
fdivr
cmpsl
push
repz
and
addb
mov
mov
stc
shr
jb
lret
jge
jge
add
mov
pushf
jp
mov
mov
add
xor
add
add
ljmp
dec
cmp
xlat
outsl
movb
add
nop
mov
lret
icebp
mov
out
add
lods
or
inc
add
add
add
push
in
nop
pop
mov
mov
or
mov
sar
adc
and
pop
ror
adc
mov
inc
shrb
call
and
xor
or
jmp
add
enter
add
mov
cld
add
lea
add
add
inc
mov
push
mov
shrb
mov
sub
cmp
or
shll
ja
cld
xor
add
mov
cmp
ret
loopne
or
pop
imul
aas
enter
sbb
inc
and
movb
add
or
icebp
je
inc
cmp
sbb
mov
or
add
or
push
cmp
testb
mov
lcall
enter
mov
add
mov
pop
push
sub
shll
add
lret
add
pusha
xor
test
adc
add
nop
das
push
jecxz
sbb
outsl
push
loopne
rolb
dec
jne
cmc
add
or
icebp
xor
add
je
jcxz
and
add
xor
mov
xor
out
push
add
jmp
pop
testl
pop
jmp
xor
dec
xchg
pushf
addb
out
add
xorb
out
push
popl
push
pusha
add
loopne
add
int3
rorb
inc
jo
int
xadd
addl
loopne
or
xchg
leave
rolb
or
sti
fdivr
sbb
sbb
pop
adc
sbb
xchg
sbb
pop
add
shl
out
sbb
inc
faddl
adc
aam
add
inc
adc
pop
sbbb
inc
call
adc
sbb
add
rcl
rcrb
lock
adc
xor
add
shl
repnz
xor
pop
lock
add
shlb
loopne
add
cld
cmp
incl
sarb
ds
inc
inc
cli
dec
cmp
cmp
stc
push
addl
sub
add
or
sub
jmp
sub
ljmp
push
out
add
pop
cmp
add
shlb
inc
in
loopne
cwtl
test
add
or
testb
loopne
or
loope
and
and
xlat
mov
push
mov
mov
bound
cmp
cmp
shlb
sbb
inc
movsb
add
subl
subb
lock
cs
imul
add
imul
inc
pop
push
and
mov
jp
mov
mov
mov
addb
mov
je
and
mov
ja
shll
cmp
cmp
add
xorl
push
add
push
inc
xchg
lock
dec
push
mov
xchg
loopne
inc
or
push
add
popf
call
into
pop
sahf
inc
pop
cvtps2pd
lcall
rolb
aas
inc
cwtl
mov
dec
push
mov
dec
rorl
jb
dec
mov
rorb
pushf
into
mov
inc
roll
add
inc
addb
lock
call
loope
roll
loopne
sbb
jg
sbb
cld
pushf
pop
dec
pop
nop
add
popf
push
add
pop
enter
adc
repz
loopne
or
add
scas
inc
dec
cpuid
mov
loopne
fcomps
or
fstpl
pop
sti
sub
add
jae
cmp
dec
mov
mov
add
movl
mov
xchg
adc
pusha
rorb
call
lods
ja
insb
mov
xor
mov
sbb
push
iret
inc
arpl
pop
call
movsl
cmpxchg
fwait
data16
dec
adc
pop
clc
xlat
mov
push
push
add
mov
pushf
aad
sub
or
lods
xor
mov
add
adc
pusha
mov
sar
jne
dec
or
leave
aam
scas
adc
pop
add
pop
dec
incl
lods
sub
pop
adc
pop
add
loop
push
in
push
clc
hlt
xchg
fwait
push
mov
pop
pop
pop
rol
push
lods
cmp
push
jp
jmpw
add
sub
xchg
add
and
or
jb
mov
lea
add
mov
roll
stos
add
mov
scas
and
or
clc
ja
add
lret
add
jp
push
inc
pop
jo
add
pop
add
add
jbe
mov
mov
repz
cwtl
push
add
cmp
add
int3
xchg
pop
in
sub
cs
sar
stos
call
xor
popa
sbb
loope
pusha
loopne
sbb
mov
pop
nop
insb
and
dec
mov
and
repnz
dec
and
in
add
push
ret
incl
xlat
xchg
push
stc
cmp
dec
icebp
cmc
sarb
xchg
pop
add
dec
or
mov
push
les
mov
into
rol
ljmp
ret
pop
leave
inc
icebp
add
pop
lock
stc
mov
rorb
cmp
cwtl
adc
outsl
add
mov
mov
and
inc
inc
sbb
loop
lods
push
mov
and
and
push
push
adc
mov
xchg
xchg
std
or
xorb
ret
addl
cmp
call
mov
testl
cli
pop
cmp
xchg
arpl
hlt
and
xor
sub
pop
mov
cli
xchg
arpl
out
dec
not
mov
sbb
ret
inc
clc
bound
xor
stos
lods
dec
and
dec
inc
nop
cmp
inc
inc
adc
sub
push
sahf
aaa
test
cmpsb
xor
sub
and
and
and
sbb
push
xor
and
jmp
mov
inc
push
or
xor
push
and
and
xor
icebp
leave
repz
imul
in
add
dec
or
loope
in
mov
mov
fiaddl
mov
mov
lret
arpl
jb
dec
clc
shrb
aas
int
sub
punpcklbw
sbb
imul
or
enter
jge
inc
jecxz
jno
adc
lods
xchg
int3
mov
or
push
add
and
xchg
lret
or
pop
icebp
add
push
and
xor
or
cmp
das
mov
or
inc
and
push
xchg
lea
pushf
cmp
xchg
adc
or
or
add
mov
repnz
push
pop
inc
jmp
iret
adc
test
dec
inc
sbb
inc
aad
adc
mov
add
and
mov
test
std
and
in
inc
popf
lods
incb
add
push
mov
dec
add
test
lret
xor
add
cmp
sub
dec
fsubr
pop
es
or
adc
mov
cmp
test
push
and
add
leave
je
push
int3
ss
add
sbb
aam
dec
add
or
add
shr
cmp
in
addb
or
add
out
mov
scas
mov
mov
mov
ret
jmp
mov
ja
xor
popf
add
sbb
pushf
nop
movsl
repnz
aam
lods
cs
pop
add
mov
scas
pusha
vxorps
cmp
pop
rorb
nop
add
cld
pop
rorl
inc
or
inc
adc
add
sub
cmp
cld
push
add
pop
sub
loop
loop
pxor
mov
adc
add
sub
add
push
ds
add
jbe
push
test
cld
ror
loop
add
or
test
sti
push
fbstp
sub
add
and
sub
fisubrs
jb
nop
es
in
incl
movsb
dec
mov
push
add
leave
subb
in
add
or
pop
clc
std
pop
mov
push
stos
mov
fcomps
mov
add
mov
jo
xor
or
shlb
div
and
add
jecxz
aam
xchg
xchg
push
inc
lcall
push
pop
das
nop
pop
dec
add
stos
jne
pop
adc
add
and
adc
adc
push
sbb
scas
add
push
sub
adc
add
repz
pop
pop
sti
jecxz
rorl
dec
nop
add
lahf
testl
lods
xchg
daa
inc
inc
cmp
add
pop
rep
pop
shr
add
in
cltd
xchg
inc
jl
mov
push
sbb
testb
sarl
stc
jns
subl
add
hlt
cmp
push
gs
dec
jp
add
pusha
pop
insl
cltd
movl
inc
inc
mov
mov
mov
jle
leave
add
cmpsl
xchg
dec
pusha
movsb
add
mov
push
sub
call
lock
add
jg
neg
xor
add
pop
fstpl
lcall
jecxz
inc
pushl
push
xor
sub
xor
sbb
push
pushf
inc
dec
gs
pop
mov
push
roll
inc
jo
add
dec
dec
dec
dec
dec
dec
loopne
add
push
push
push
push
push
mov
add
bound
cmp
add
push
insb
insl
outsb
jo
add
jb
je
jbe
loopne
add
xor
xor
xor
xor
cmp
das
cmp
sub
sbbb
sub
cmp
cmp
daa
or
pop
or
shl
mov
pop
inc
add
sbb
test
pushl
add
mov
add
hlt
jno
mov
bound
out
mov
jmp
nop
add
sub
or
jl
mov
outsb
push
cmc
adc
pop
mov
sbb
jp
in
add
jl
mov
jle
add
test
jle
add
loopne
jge
or
add
inc
sub
cwtl
inc
pusha
cmp
dec
mov
idivl
das
movaps
sub
outsb
adc
jnp
imul
flds
dec
shlb
add
push
jo
add
roll
dec
dec
jne
test
or
mov
xchg
or
inc
add
adcb
push
aas
imul
dec
xchg
cmp
ljmp
sub
push
add
lahf
sub
push
push
rcrl
loopne
movsb
lock
add
xchg
hlt
and
xor
clc
lret
imul
dec
test
sarb
mov
or
push
jo
addb
add
dec
rclb
pop
adc
lds
enter
std
lea
aas
lods
arpl
xor
xor
cmp
sub
fmuls
ret
mov
testb
add
inc
xchg
imul
das
data16
add
push
mov
pushl
pop
push
sbb
loop
stos
adc
add
pop
sub
in
push
or
mov
and
add
jl
adc
or
add
fildl
inc
add
adc
sahf
and
adc
add
add
cmp
mov
mov
adc
sub
dec
orl
pop
add
push
cmp
sub
or
add
sti
loop
add
push
fbstp
shll
gs
ret
add
pop
cltd
sub
aam
or
shrb
adc
test
movsb
shl
xlat
les
adc
ja
inc
pop
add
arpl
push
popa
add
push
pop
enter
test
sub
fcom
and
jbe
add
inc
jl
jge
or
mov
add
and
into
push
iret
mov
pop
add
adc
pop
push
dec
jnp
xor
add
push
in
fadds
jno
test
loope
es
fs
push
mov
and
cmp
mov
push
inc
lods
cld
push
add
test
aas
pop
pop
or
adc
arpl
imul
cmp
and
inc
cmc
ret
or
sub
dec
inc
addb
mov
fsubl
pop
push
and
mov
popa
cmp
je
cmp
jl
inc
inc
dec
lock
frstor
movups
push
dec
hlt
dec
xor
jno
add
addr16
cs
add
xchg
ljmp
xor
insl
dec
add
loope
cmp
stc
inc
add
and
dec
or
out
add
lods
test
push
mov
sub
dec
andb
aam
add
fcompl
pop
sbb
push
jno
scas
inc
cld
add
std
daa
jo
add
add
cmp
sar
add
insl
lea
jne
and
je
cmp
add
jmp
inc
rol
inc
push
xchg
or
shlb
fmull
add
lcall
pusha
sub
mov
dec
adc
push
inc
add
data16
add
or
out
cmp
decb
xchg
mov
lret
mov
testb
and
sbb
adc
pusha
inc
lods
push
or
push
pop
pushf
sbbl
add
aam
iret
imul
stos
add
sarl
add
push
adc
orl
sub
jecxz
sti
loopne
or
insb
jp
xchg
and
dec
add
sub
pop
add
push
inc
push
push
or
arpl
fdivs
adc
add
mov
cmp
test
adc
dec
loop
xor
pushl
mov
loope
sub
inc
outsl
fildl
or
inc
lea
pop
inc
adc
ficompl
fnstcw
ljmp
jmp
adc
add
dec
cmpb
jne
pop
lock
jmp
add
xor
adc
xchg
movl
fadd
cmp
pop
sti
add
test
rolb
add
or
mov
add
rcrl
lds
xor
xor
inc
xchg
js
mov
cwtl
fstpt
mov
sbb
add
push
jle
das
iret
or
dec
mov
mov
loope
cmpps
dec
clc
inc
in
mov
add
adc
fists
pop
add
add
popf
mov
repnz
push
add
dec
pop
or
je
stc
jg
test
push
inc
mov
lock
aaa
sbb
jne
andb
push
cmp
and
cmp
add
je
and
adc
push
mov
and
pop
xchg
int3
ficomps
in
cmp
aas
add
mov
leave
add
pop
mov
push
jbe
into
inc
add
add
cmc
loope
add
loopne
sub
jle
adc
call
push
dec
add
gs
add
mov
insl
jp
cmp
add
dec
fcoms
sahf
add
push
lods
faddl
mov
cmp
add
mov
std
or
or
jg
add
rcrb
inc
or
adc
sub
add
mov
add
xor
xor
sbb
fimuls
enter
cmp
ds
outsb
jmp
push
xchg
mov
dec
sbb
xchg
add
jg
inc
loope
cld
adc
add
or
and
clc
and
jbe
mov
lea
cmc
add
sarl
cld
ret
movsb
adcb
jns,pt
repnz
dec
out
and
out
jp
fwait
xchg
jl
push
mov
mov
cmp
dec
add
xor
xchg
movsb
lret
mov
cs
xchg
jne
push
mov
add
push
ret
jmp
xor
push
je
daa
pop
adc
xlat
and
addr16
mov
pop
lret
and
add
int3
cld
adc
pop
ret
out
fld
sub
mov
or
inc
lea
popf
test
inc
shlb
xor
test
sbb
sbb
or
sub
push
mov
movsl
add
jo
xchg
inc
sbb
or
sahf
push
scas
in
mov
or
pcmpeqw
decl
aam
xor
or
mov
add
mov
dec
inc
pop
adc
inc
frstor
pop
add
jg
xor
or
adc
rcl
push
inc
push
xchg
imul
add
out
push
hlt
jnp
inc
add
sbb
call
or
adc
or
cmpb
jecxz
mov
add
mov
ret
or
inc
icebp
add
push
int3
jmp
add
dec
jne
sub
push
jp
pop
xchg
fmull
pop
mov
shlb
and
insb
or
cwtl
add
inc
mov
and
ret
outsl
cmpsl
bound
add
lock
dec
sbb
and
pop
shlb
add
cmp
or
movsl
dec
xor
rolb
push
and
rcrl
dec
xor
xor
cli
adc
pop
je
jge
xor
cmp
mov
add
std
jle
sarb
add
or
cmp
xchg
dec
xchg
sub
adc
lea
add
ret
jle
mov
add
sbb
add
add
xchg
lds
xchg
repnz
push
pop
sub
cmp
inc
xor
xor
or
xor
add
sbb
push
mov
dec
or
nop
pusha
fld
movsl
js
je
adc
mov
adc
mov
pop
sbb
fimull
loope
mov
add
jae
jb
cmp
jne
je
xchg
add
inc
subb
lret
aad
inc
add
adc
push
xor
push
add
shl
repnz
cli
add
loopne
pop
rsm
dec
lods
jae
add
inc
ljmp
add
mov
sbb
andl
add
dec
cmp
inc
jb
lock
hlt
test
pop
cmpsb
cmp
stos
add
and
pop
inc
adc
dec
sbb
mov
ljmpw
jnp
add
je
rorb
in
push
push
push
jmp
cltd
cmp
fiadds
orl
rolb
sbb
rcr
sub
movsl
add
int3
add
rorb
lock
jo
add
hlt
lds
iret
inc
arpl
adc
sbb
lcall
pushf
hlt
xlat
les
stc
add
ret
add
or
add
add
add
mov
sbb
xor
add
push
sbb
enter
mov
xchg
and
sbb
dec
jl
cmc
jge
sub
xchg
dec
xchg
das
fidivs
push
lahf
movsb
xchg
rcrb
lret
stc
icebp
push
jae
sub
test
add
add
jne
mov
add
jg
in
adc
rcrl
add
push
fldl
das
shrb
hlt
ds
pop
lods
roll
dec
push
add
test
add
cmp
push
mov
mov
gs
pop
or
lahf
add
xchg
pop
and
mov
clc
adc
js
xchg
or
insl
shlb
pop
inc
cwtl
inc
push
add
ss
lock
push
sbbb
or
inc
mov
jne
inc
mov
push
in
jge
daa
aam
inc
jbe
je
add
and
pop
push
add
xchg
imul
push
pop
push
popa
adc
jne
hlt
mov
pop
push
into
jb
add
les
xchg
loop
jae
adc
xor
push
mov
inc
or
gs
cmp
lcall
call
cmp
add
xor
enter
cmp
add
je
testl
pop
mov
rorl
cltd
rolb
xor
cmpb
push
je
push
ss
add
loopne
cmp
jbe
or
pop
cmp
ljmp
jmp
sub
add
in
lea
adc
pop
imul
push
or
cmpb
pop
dec
mov
fs
mov
and
test
adc
push
dec
add
cmp
add
xchg
dec
pushaw
and
cmc
rolb
stos
and
xchg
push
out
fcomps
jne
add
jb
das
adc
jge
mov
add
sub
sub
cmpsl
xlat
pop
cli
push
aam
mov
push
sbb
mov
mov
xchg
popf
jmp
loopne
call
sarb
add
lret
mov
pop
ret
loopne
dec
sti
xor
mov
cmp
fdivs
mov
hlt
or
add
popa
das
cwtl
and
aam
out
cli
andb
adc
je
lret
cmc
mov
sbb
cli
add
jmp
add
shl
inc
mov
dec
jne
jl
out
add
jg
das
cmpsl
push
lds
add
repnz
push
ret
fstpl
add
jmp
push
mov
inc
loop
in
rolb
aas
sub
shrl
pusha
dec
xor
push
test
data16
or
add
inc
stos
call
std
in
xchg
inc
adc
pop
inc
adc
add
mov
fsubl
sbb
add
in
lret
stos
sbb
lods
divb
mov
out
push
mov
sbb
fcompl
sbb
lods
or
add
push
call
hlt
pop
jne
int3
inc
push
mov
push
es
pop
mov
sub
je
pop
jp
add
push
add
jbe
add
inc
pop
repz
push
or
sub
call
dec
sbb
pop
fucom
ljmp
or
or
andb
sub
add
adc
and
loopne
hlt
add
adc
test
scas
xchg
repnz
and
add
test
loopne
in
nop
sbb
call
jnp
lcall
movsb
fldlg2
popa
dec
enter
pop
push
push
sbb
push
mov
ds
xor
adc
int
mov
xor
stos
add
push
push
add
inc
sti
dec
sysexit
jge
aas
stos
incl
and
jecxz
add
cld
add
add
lea
iret
clc
or
addb
push
pop
imul
cmovge
push
call
inc
push
mov
clc
aas
sbb
test
rolb
fs
or
movsl
int
fstpt
xor
sub
sbbl
xchg
pushf
cmp
adc
nop
cmpb
shrl
hlt
mov
add
mov
in
add
dec
sub
sbb
or
adc
pop
xorb
mov
sbb
adc
pop
add
xor
and
ss
xor
add
push
xchg
int
test
ficoml
movsl
cs
add
fsubl
push
rcl
mov
decl
lahf
mov
adc
push
add
repnz
out
xchg
popa
lods
mov
cld
enter
add
shrb
xor
xchg
add
or
shl
sbb
inc
sbb
clc
mov
jle
aas
in
add
mov
jp
add
add
insb
sub
and
cmovp
add
data16
jp
push
add
lods
xchg
mov
enter
fsub
ret
imul
dec
sub
pop
cwtl
in
add
mov
mov
outsl
das
dec
add
push
shlb
cmp
sbbb
imul
shlb
add
push
lods
inc
inc
dec
ret
loop
adc
sub
add
add
adc
and
sub
push
pop
stos
push
mov
lahf
fadds
mov
jo
cwtl
cmovae
hlt
mov
stos
add
xor
aaa
aas
adc
pop
push
jae
push
xor
add
jbe
sbb
add
test
es
stc
les
bound
movsb
add
xchg
push
dec
decb
jns
add
adc
addl
enter
mov
sbb
mov
adc
pop
insb
bound
add
sub
popf
mov
decb
leave
mov
loope
imul
addb
xor
jl
adc
adc
flds
cmpsb
or
add
mov
jo
inc
xor
or
call
mov
xlat
in
adc
rclb
adc
pop
adc
arpl
sti
dec
bound
sub
shll
adc
add
test
lret
xor
fbld
call
pop
pusha
repnz
mov
xor
les
daa
cmpsl
add
jnp
mov
jae
xor
test
add
pop
add
or
mov
cld
mov
popa
adc
sub
stos
mov
or
adc
pop
pop
aam
push
pop
into
pop
test
pop
scas
add
ljmp
incb
stos
mov
adc
push
mov
stos
sub
icebp
cs
pushl
add
fs
or
pushf
dec
popf
movsb
inc
test
add
push
shl
clc
add
ljmp
push
cltd
ja
add
adc
add
lret
les
pop
adc
iret
add
mov
jg
dec
add
in
stos
dec
adc
data16
jno
inc
loop
arpl
mov
test
add
add
fwait
add
in
or
adc
cmpsl
add
mov
or
mov
adc
dec
lds
dec
pop
sub
jnp
cmpsl
xchg
sbb
add
pop
repz
push
inc
pop
push
add
pop
gs
cmc
push
shlb
jl
incl
push
mov
repz
roll
lret
shl
stc
and
add
pushf
push
add
arpl
mov
xchg
bound
add
sub
je
cmpsl
sbb
daa
adc
sbb
out
andb
or
inc
pop
pop
mov
jl
add
and
mov
outsl
andb
cmp
shrb
add
jle
or
decb
or
adc
sub
flds
push
sbb
out
inc
cli
pusha
cmp
sarl
add
pop
and
lea
inc
add
dec
inc
add
xchg
and
add
xor
dec
inc
stc
jno
insb
aam
lods
stc
jo
ret
add
test
jg
lret
or
add
push
xchg
cld
fmuls
jne,pn
mov
sbb
cltd
adc
xchg
add
pop
sub
movsl
adc
stos
push
mov
lods
out
leave
sbb
or
data16
sbb
mov
mov
sbb
inc
lock
mov
mov
add
pop
inc
xor
pop
push
aad
jnp
sub
add
cmpsb
pop
daa
movsb
xchg
add
push
xchg
sub
mov
je
jmp
dec
jnp
pop
adc
jb
dec
or
xor
or
mov
add
loopne
fsubs
outsl
add
test
dec
dec
nop
addb
and
adc
ret
subl
rolb
pop
aad
jns
xor
aaa
cli
sub
mov
test
add
cmc
mov
push
hlt
cltd
mov
imul
and
add
or
cli
sbb
jg
mov
and
push
leave
sar
roll
or
addr16
xlat
mov
aas
cwtl
stos
dec
les
fisubrl
ror
and
sbb
push
dec
add
insl
imul
scas
and
pop
push
adc
push
hlt
cmpsb
pop
test
add
cld
shll
inc
inc
loope
pop
and
enter
addb
int3
stc
xchg
or
mov
stos
out
push
sbb
sbb
fisubl
pop
add
lcall
in
jg
pop
sbb
dec
mov
cli
add
cmpsl
and
cmp
mov
pop
mov
fimull
stos
mov
test
sbb
and
cmp
dec
jne
rol
xor
xchg
fildll
test
add
or
add
or
mov
add
adc
ret
jmp
mov
push
scas
lods
inc
fimull
in
dec
add
add
gs
repz
adc
push
cmp
dec
ds
dec
lahf
and
dec
jae
add
insl
mov
add
das
adc
lods
icebp
lret
ficomps
jge
cs
mov
mov
nop
push
leave
adc
mov
repz
add
mov
xchg
add
jae
or
jl
pop
mov
push
jge
jbe
cmpsl
fs
jns
or
sbbb
loope
add
cmc
dec
out
push
adc
dec
aaa
ljmp
outsl
adc
pusha
lahf
cmp
in
test
pop
add
outsl
or
inc
or
je
jns
push
sbb
sahf
sub
pop
stc
in
fildll
add
fcompl
lea
xor
mov
arpl
test
dec
add
and
sbb
sub
add
push
cmpsb
aas
test
cmp
push
mov
inc
out
pop
dec
or
cwtl
xchg
pop
bound
push
inc
mov
pop
mov
aam
add
fcmovnu
dec
mov
lods
add
dec
xchg
lea
ja
jl
sbb
mov
sbb
pusha
push
lds
and
stc
xor
xor
iret
cmp
in
add
bound
pop
push
xor
dec
jg
jb
add
or
add
inc
cmp
sub
dec
imul
bound
insl
adc
add
ret
icebp
push
mov
add
jmp
mov
pop
push
sbb
pop
xor
push
fiadds
mov
arpl
cwtl
and
rcrb
add
inc
jae
arpl
in
lock
fstp
and
push
add
fmull
adc
push
daa
sub
popa
and
push
mov
sti
dec
pop
int
iret
cmp
add
data16
sahf
aam
add
and
stos
and
push
ret
jmp
sub
mov
add
enter
sub
push
inc
adc
adc
add
or
aaa
lods
popf
add
ret
push
test
js
mov
add
loop
loopne
sbb
mov
mov
add
mov
jb
sbb
pop
inc
inc
and
add
xor
orb
test
jb
insl
mov
xchg
jno
rdtsc
les
mov
and
cmp
dec
and
add
test
pop
push
pop
cmp
adcb
inc
jns
sub
icebp
pop
adc
push
lods
cvtdq2ps
fldl
scas
outsb
adc
mov
add
lock
dec
adc
mov
push
xchg
adc
mov
cwtl
hlt
add
xchg
pop
pop
sti
push
sbb
outsb
jnp
and
sbb
jno
ds
cmp
sub
shlb
test
or
add
pusha
mov
push
stc
insl
ja,pn
push
cli
jg
sbb
add
jge
fbstp
outsb
cwtl
addr16
add
push
shlb
inc
add
inc
pusha
jbe
outsb
stc
add
dec
fnstsw
imul
fs
cmpsb
and
sbb
push
popa
ja
jge
jl
add
dec
shrl
jnp
jle
add
jo
inc
pop
xchg
outsl
insb
loopne
jno
pusha
add
push
jae
imul
jns
and
jp
add
sub
or
jae
jp
out
fimuls
jb
jle
add
popa
mov
bound
data16
xchg
inc
push
inc
or
jbe
jno
inc
add
cmp
loope
push
test
icebp
dec
push
add
adc
jg
mov
or
push
jae,pn
push
dec
arpl
ljmp
sbb
push
xchg
ja
jo
arpl
cmp
mov
addr16
popa
shlb
xchg
je
add
mov
dec
iret
jo
outsb
imul
repz
add
push
imul
sti
and
xchg
pusha
add
outsb
dec
push
or
xchg
sbb
mov
inc
add
arpl
clc
bound
or
jge
jp
lock
add
lods
xor
outsl
sub
bound
loopne
push
ljmp
push
adc
movsl
xor
inc
jbe
add
insb
mov
jb
je
jno
popa
imul
lret
add
jp
ret
or
add
mov
push
mov
out
test
inc
lret
dec
xchg
mov
push
xorb
mov
fs
out
sbb
or
dec
jp
inc
cmp
adc
bswap
daa
in
inc
mov
and
pop
push
dec
popa
jae
jae
sbb
mov
xor
fs
cld
add
xor
add
fcompl
adc
adcb
xor
mov
add
cs
add
hlt
sarl
add
xor
or
push
sbbb
cmovno
mov
aas
fdivs
push
xchg
add
sub
jge
inc
push
sbb
push
cmp
das
clc
push
test
mov
jne
hlt
xchg
add
stos
fwait
shlb
hlt
dec
sbb
inc
ja
in
cmp
add
lret
fstps
add
mov
aas
enter
mov
xor
mov
ret
cmp
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
cld
iret
mov
add
rcll
add
xchg
pop
add
into
and
dec
fcoms
add
push
or
rol
add
sbb
xor
and
imul
add
or
mov
push
nop
sar
pop
sbb
jno
gs
xchg
cmpl
add
and
or
and
add
or
ret
inc
rol
cmp
cmp
lock
aaa
out
mov
push
add
push
add
push
add
sbb
and
and
fsubl
jne
add
sub
inc
xor
cmp
cmp
fs
xchg
add
out
xchg
mov
cmpsl
shlb
cmp
or
dec
and
hlt
pushf
in
aam
loop
cmpsl
sub
xor
mov
push
sbb
dec
and
cmp
enter
jo
je
aaa
adc
jl
mov
rol
pop
add
mov
xchg
add
test
and
sbb
jo
dec
inc
call
cld
pop
add
or
mov
call
cmp
outsl
push
jo
or
fldl
dec
cmpsb
les
and
and
leave
pop
ficomps
lds
std
dec
cltd
lods
test
into
and
rorb
shl
cmc
roll
aad
dec
mov
faddp
and
pop
insl
cmp
int
mov
and
rorl
mov
add
les
int3
add
inc
shrb
mov
add
fsubrs
call
mov
pop
in
push
xchg
sub
lock
xchg
fxtract
pop
les
mov
lods
shll
lahf
sbb
cmpsl
psrlw
dec
lcall
std
dec
iret
or
adc
add
loop
aas
adc
stc
mov
sub
sub
shll
jle
xor
icebp
cmp
mov
lds
lods
mov
add
jae
ficoms
mov
add
fmul
or
jle
test
add
shlb
cwtl
add
adc
clc
cmp
add
scas
fcomps
xlat
fistpll
or
add
lea
hlt
cmp
enter
or
out
sub
jp
negb
hlt
fwait
dec
dec
or
mov
adc
cmp
sbb
sub
rorl
jnp
jl
jg
jne
add
sub
add
adc
mov
outsb
xor
into
fcoms
sbb
mov
shrd
jp
push
into
cltd
and
test
aaa
jne
xor
divb
adc
and
fidivrs
stos
add
xchg
fsts
or
jnp
add
in
in
lret
xor
jae
stos
js
add
add
add
out
pop
inc
or
dec
and
cltd
cmp
cmpsl
pop
add
inc
jmp
jge
add
push
cmp
add
cwtl
das
add
add
mov
jp
add
andb
jmp
int3
cmp
ja
cmp
inc
add
sub
push
lret
xchg
lock
outsl
cmp
cmp
pusha
loope
in
insl
xchg
adc
in
add
insb
sbb
push
lret
mov
loopne
inc
sbb
jb
lcall
push
mov
add
stc
add
mov
in
lods
or
add
ret
pop
shl
lock
add
mov
mov
and
mov
mov
mov
push
push
inc
aam
test
mov
jne
dec
out
mov
add
gs
imul
adc
shlb
pop
add
das
stc
mov
mov
sub
sbb
mov
push
call
gs
outsl
jne
jns
data16
jb
mov
enter
mov
shll
jae
mov
xor
insl
ret
int
add
fstpt
jg
and
add
sti
sbb
clc
add
roll
in
sbb
pop
push
cwtl
lds
pusha
cmpb
je
add
stc
leave
push
call
mov
xor
mov
addb
push
mov
shl
test
inc
enter
inc
inc
dec
call
or
adc
rcll
cmp
cli
verw
inc
jno
sub
je
add
bnd
mov
cmp
lss
push
mov
add
jmp
ret
xchg
jae
inc
mov
mov
add
cmp
inc
add
cmp
and
sbb
jo
jg
push
lods
pushl
imul
jg
xlat
mov
jo
add
cmp
and
scas
adc
rorl
pop
cmp
push
outsl
adc
pop
in
lret
lahf
fmuls
push
jg
inc
dec
adc
or
xchg
add
cmp
sub
push
nop
add
cmp
add
add
leave
adc
add
add
out
add
cmp
ja
push
xlat
xchg
loop
dec
add
daa
outsl
repz
incb
add
ror
ret
and
inc
loopne
add
cmp
jae
pusha
add
jnp
sbb
je
mov
jecxz
and
push
add
jge
sub
clc
xchg
or
dec
lock
dec
int3
and
pop
daa
pop
filds
inc
push
pop
shrl
add
inc
popa
arpl
cmp
nop
lcall
cld
sbb
cmp
pop
mov
imul
testl
popa
adc
addl
sbb
add
decl
fs
push
rcl
pop
bound
inc
ja
stos
inc
sub
out
add
mov
adc
add
mov
mov
icebp
lods
stos
or
pop
jge
aas
jnp
addb
mov
jae
sahf
mov
push
jge
pop
into
loopne
rcl
mov
sti
jno
add
jns
ret
ret
je
adc
or
sub
push
sbb
push
and
inc
stos
enter
add
pop
sarb
push
ret
jns
inc
sar
addb
mov
push
fdivrl
das
sbb
cltd
hlt
jp
mov
test
aaa
add
dec
shr
inc
pop
jle
add
shlb
daa
or
jp
fiaddl
push
inc
jmp
lea
pop
not
ljmp
cmp
add
xchg
cmp
add
jae
jno
dec
and
add
sbb
std
rorl
fildl
inc
xchg
pop
push
add
mov
sbb
inc
sbb
xor
xor
in
mov
add
je
pop
push
jne
and
xor
std
sub
jae
cmp
lea
into
inc
cmp
andb
ds
add
push
jne
push
jle
xor
sub
xchg
fldenv
push
lods
or
inc
sbb
je
xor
mov
add
xchg
insl
out
in
ret
add
addl
cmpsl
mov
les
cld
cmp
cmp
fistps
and
add
out
add
sub
shr
add
mov
dec
add
or
and
add
jae
test
jbe
sbb
dec
and
mov
iret
add
add
popl
or
insb
pop
pop
mov
pmaxub
sub
jl
jns
aas
xor
add
sub
lcall
xor
hlt
imul
push
sbb
cmp
test
inc
lea
sub
lret
fdivl
dec
mov
andb
or
addl
sub
mov
add
and
and
sbb
adc
and
test
add
lods
in
or
adcl
add
add
aaa
sbb
enter
mov
push
movsb
and
in
adc
mov
mov
cwtl
add
xor
xor
in
mov
mov
popa
ss
cmc
stos
sbb
push
mov
inc
lret
adc
or
adc
arpl
add
pop
xchg
sbb
jo
loope
gs
xchg
ds
add
lret
sub
and
sbb
push
dec
ret
clc
add
push
popf
pop
mov
cwtl
sbb
cs
sub
and
cmp
lea
jle
jp
inc
shl
add
fisubl
inc
or
mov
adc
fisttpl
cmp
push
fs
and
and
je
xchg
mov
ja
add
add
fldl
les
je
jle
test
cltd
mov
sbb
or
push
add
sbb
xor
popf
push
inc
pop
adc
xor
mov
mov
or
lock
add
jle
cmp
pop
cmovg
push
add
add
push
fdivs
shll
inc
lret
adcb
xchg
cmp
addr16
insb
incb
movsl
clc
aam
cmpl
faddl
cli
ret
inc
stc
sti
dec
dec
aaa
out
add
cmp
loopne
mov
addb
add
adc
add
test
sbb
sub
mov
cmpl
str
xchg
or
mov
pop
aad
push
mov
adc
enter
lahf
fwait
cmp
dec
add
adc
jmp
nop
cs
dec
inc
pop
es
cmp
mov
add
xchg
mov
jmp
test
jmp
add
pop
adcl
int
add
jne
pop
add
xlat
outsb
fmul
loopne
push
pop
divl
add
js
push
push
push
mov
add
lods
inc
jo
push
cmp
adc
add
xchg
jg
push
add
enter
leave
xor
add
push
xor
add
pop
adc
mov
shr
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adcb
add
imul
sub
loopne
lcall
outsl
mov
mov
pushf
mov
and
scas
movsl
dec
inc
push
sarb
jbe
push
out
sbb
jmp
jle
sub
loope
cmp
push
push
shll
fiaddl
inc
and
pop
sub
mov
dec
cmp
js
or
je
push
fadds
sub
mov
xlat
test
loopne
xor
mov
shld
mov
add
or
in
ja
or
sbb
addb
mov
xor
pop
sbb
in
add
rcrb
je
dec
addb
jl
push
xchg
xchg
jmp
ret
sub
clc
push
leave
add
cmp
hlt
cld
nopl
push
call
test
ds
imul
push
gs
add
jecxz
add
pop
push
cmpsl
push
movhlps
mov
mov
add
or
adc
xchg
add
ljmp
cmp
adcb
es
out
pop
daa
jl
scas
frstor
push
dec
clc
cmc
mov
mov
cmp
mov
fiaddl
nop
add
push
mov
enter
mov
add
in
add
cmp
add
mov
fsubr
imul
jb
test
sbb
inc
out
sub
mov
mov
xchg
std
popa
or
add
cmp
jbe
pop
dec
int3
cli
mov
and
sub
adc
sub
ds
icebp
shrb
mov
add
pop
arpl
pop
das
add
or
mov
push
or
sub
jmp
lock
add
adcl
jne
or
pop
fs
xchg
xchg
add
and
jmp
sbb
jmp
ret
push
mov
mov
pop
and
jge
add
xchg
add
ret
rcll
mov
lahf
loopne
push
mov
inc
scas
sbb
mov
xchg
or
iret
add
add
mov
sbb
idiv
and
movsl
js
ret
add
ret
pusha
imul
or
cwtl
cmp
xchg
fidivrl
rclb
add
sub
cltd
add
xchg
ret
push
lock
mov
roll
lret
add
enter
inc
dec
push
sti
out
aas
add
fisttpll
imul
inc
mov
cltd
jmp
repnz
test
mov
add
mov
add
inc
test
add
mov
in
mov
mov
inc
push
dec
pusha
stc
addr16
mov
mov
andl
testl
out
push
fbstp
divb
sub
pop
sbb
push
inc
push
imul
lods
int
xchg
sub
xor
jbe
mov
lock
add
daa
shlb
cmp
push
sbb
lods
add
jo
popf
cvtpi2ps
dec
sbb
or
inc
xchg
mov
mov
xchg
clc
bound
jmp
jb
cmp
jbe
stos
mov
sbb
mov
pushf
sub
and
leave
out
test
xchg
icebp
xchg
lret
add
movsb
lock
add
repz
cmp
or
push
pop
cwtl
ret
orps
dec
add
cwtl
in
cmp
cli
add
sti
stos
add
xor
and
bound
inc
test
mov
dec
xor
and
add
lret
addl
mov
dec
xorps
sarb
push
imul
test
ja
mov
testl
and
add
cmp
push
xchg
stos
add
fcos
and
or
loop
lahf
mov
add
cmp
lock
xor
add
ja
add
push
add
xor
hlt
inc
lea
cmpsl
mov
push
xchg
sub
cld
leave
add
mov
inc
mov
pop
add
movsb
or
pop
add
cmp
adc
cltd
xchg
shlb
dec
xchg
cli
ss
orl
xchg
loopne
and
and
lods
leave
xor
push
imul
popf
or
push
jmp
cmpsl
loop
xchg
dec
or
inc
addl
movsl
cmpsl
xchg
add
xor
stos
xor
mov
into
rol
dec
add
inc
add
jg
ss
cmp
sub
add
and
mov
inc
mov
fmuls
ja
dec
stos
movsb
mov
add
out
xchg
or
jne
adc
inc
fdivr
aam
addr16
add
out
popf
jg
jo
add
add
cmp
adc
rol
push
and
add
out
jmp
cmp
add
lds
scas
sbb
cli
inc
push
addb
cmp
cwtl
adc
or
add
lahf
rcrl
lods
add
fdivs
rclb
dec
or
rcll
nop
movsb
add
sar
dec
push
and
xchg
and
cmp
jns
adc
mov
imul
cmpsb
add
int3
in
mov
dec
leave
cltd
inc
xor
mov
and
dec
add
int3
xchg
mov
add
jmp
xor
test
sub
add
cmp
loop
pxor
lods
adc
add
add
inc
jno
mov
cld
leave
hlt
movb
adc
add
ja
bound
cmp
push
inc
sub
push
cmp
jns
adc
mov
pop
jle
addb
dec
popa
cmp
mov
mov
jns
or
imul
xchg
xlat
add
imul
add
out
das
pop
std
add
sub
mov
call
add
insl
dec
lods
cwtl
jae
inc
mov
cmp
inc
add
adc
xor
dec
dec
int3
loopne
cwtl
sarb
jmp
scas
cmp
add
pop
test
add
es
push
sbb
sub
je
mov
add
mov
sbb
adc
test
std
cmp
aas
gs
loopne
jge
adc
sub
push
sub
add
cmp
xor
rolb
jmp
int
add
maskmovq
rorb
das
add
ss
cltd
jb
xor
add
sub
mov
and
xor
pop
or
and
push
add
add
dec
out
sti
adc
mov
inc
lahf
call
add
add
jno
push
or
dec
out
mov
inc
rcrb
cld
add
jo
ljmp
lods
ret
pushf
nop
dec
sbb
add
dec
or
fisttpl
loopne
dec
sub
inc
punpcklbw
lret
or
inc
xor
cmp
add
pop
sarb
add
dec
shlb
mov
sarl
addl
mov
dec
mov
in
orb
das
add
xor
mov
adc
mov
push
xchg
or
mulb
orb
jb
inc
add
out
sub
jle
je
cmc
pop
pop
and
test
out
mov
pushl
adc
ljmp
mov
mov
pop
sub
notb
shll
add
insb
and
filds
int
sbb
rorl
fmuls
rclb
fucomip
add
jbe
mov
hlt
jne
pop
test
mov
dec
xor
xchg
imull
and
roll
clc
seta
xchg
loop
out
cwtl
mov
in
aas
jae
cmp
jg
loopne
or
jnp
cmp
fwait
xchg
scas
add
xor
sub
jp
bswap
jle
push
pop
testb
dec
fldenv
and
mov
mov
inc
mov
jae
pop
inc
and
test
pop
mov
or
sbb
sbb
push
cmpsl
xchg
pushf
inc
sahf
add
mov
loopne
xchg
add
into
jns
sub
mov
jl
mov
add
hlt
clc
mov
mov
idivl
loopne
jmp
test
out
jo
ds
sbb
push
inc
inc
sub
xor
clc
mov
stc
mov
cmp
ja
xor
adc
dec
adc
loope
mov
add
fldcw
sub
inc
xor
popa
jae
xor
add
dec
outsb
je
add
dec
std
fldenv
push
push
iret
jb
dec
js
arpl
fs
dec
popa
sbb
push
dec
jp
mov
fnsave
dec
les
pop
jl
add
in
xchg
mov
addl
shll
cmp
test
rorb
insb
cli
add
decb
cmp
lret
pcmpeqw
insl
loope
pop
xlat
inc
inc
dec
jnp
add
ret
repz
cli
mov
imul
pop
push
out
test
jb
out
rolb
and
shll
pusha
cmp
add
push
je
int3
jmp
dec
lock
nop
test
inc
mov
leave
add
lea
dec
les
mov
dec
dec
cmp
cmp
add
idivb
fstl
pop
and
ret
sti
mov
push
adc
jl
xor
xchg
aad
sub
lods
add
sub
mov
or
add
push
cmpsb
data16
movsl
add
stc
cwtl
or
sbb
loopne
or
dec
aas
xchg
dec
inc
or
add
mov
and
cmc
xchg
mov
add
jbe
movb
jmp
add
xchg
push
addl
inc
jbe
mov
xchg
sbb
enter
xchg
add
mov
xchg
imul
inc
xor
aam
test
push
pop
lea
call
das
xor
add
inc
sub
test
pop
scas
cmp
mov
push
add
shrb
sbb
movsb
cmpsl
add
mov
sti
mov
add
aam
xchg
mov
jge
add
push
enter
test
in
xchg
fmull
xchg
scas
ss
mov
loop
add
adc
push
call
add
push
mov
pop
pop
ss
sbb
xchg
mov
jae
pop
fsubrs
sti
orl
jbe
xchg
dec
cmpsb
add
push
popa
aaa
popl
adc
inc
ljmp
sbb
and
call
and
popf
jns
add
add
imul
faddl
pop
cltd
jmp
push
scas
mov
xor
add
add
cmp
addr16
test
xchg
cwtl
ret
pop
aam
hlt
pop
movsb
add
mov
aas
dec
push
add
xchg
adc
pusha
sbb
add
js
mov
jns
arpl
and
add
xor
sub
push
jae
pop
lahf
lea
lcall
test
or
sete
pop
test
jecxz
lods
stos
arpl
jmp
sub
push
inc
test
fcomps
adc
mov
xlat
and
add
hlt
or
xchg
adc
sub
rolb
enter
test
push
push
fsubs
dec
lret
push
shrb
adc
adc
cmpb
dec
testb
mov
nop
fisttpl
jmp
rolb
mov
lcall
mov
testl
or
clc
fs
cwtl
inc
push
mov
cmp
jg
mov
lret
sbb
shl
fimuls
incb
scas
ret
pop
add
or
push
add
lahf
push
sbb
out
or
xor
jns
add
and
or
outsb
jne
roll
loop
add
mov
cmpb
push
inc
xchg
mov
add
bound
push
stos
jb
dec
in
fwait
add
inc
out
cli
fiadds
mov
out
mov
add
xchg
into
jl
lods
stos
les
movsb
push
rcrb
add
ljmp
cli
repnz
dec
ret
add
or
in
shr
cmp
or
adc
add
and
adc
mov
lahf
cmp
pop
or
sti
xor
adc
mov
pop
and
push
add
and
je
pop
or
rorb
and
fildl
add
aaa
incl
cld
dec
push
jg
xlat
jmp
inc
adc
subl
cmp
filds
xchg
xchg
pop
aad
xor
or
add
loop
sub
or
pslld
inc
or
mov
xor
call
dec
add
dec
sub
xlat
jb
pop
into
jmp
imul
and
mov
fs
es
pop
pusha
add
aam
mov
add
ffree
imul
and
pop
xchg
scas
fadds
test
sub
mull
add
jle
xchg
sbb
cli
leave
orb
mov
add
int3
push
or
jno
pop
mov
inc
pop
rdmsr
pop
sbb
push
push
add
cli
add
adc
mov
cmp
fstpt
cmp
add
shlb
mov
push
pop
jmp
nop
push
fchs
cmp
dec
and
enter
bound
pop
or
dec
xchg
fsubrl
add
add
add
inc
loopne
fnstenv
adc
xchg
lds
das
nop
out
dec
add
test
hlt
mov
cld
pop
push
fcomp
inc
or
mov
jno
pop
add
pop
dec
sbb
push
add
push
and
inc
mov
les
jl
mov
imul
sbb
movsl
lods
cmpsl
add
mov
in
cs
add
xchg
insl
or
cmp
and
scas
bound
xchg
mov
adc
lods
ds
mov
ss
mov
add
xor
mov
lcall
bound
push
add
fldl
mov
int
jnp
sbb
fsubs
shlb
lea
pop
ret
jecxz
ret
and
ja
add
sbb
sti
mov
mov
add
push
and
mov
mov
testb
sub
ficompl
add
movsb
adc
orps
stos
jecxz
jl
push
fnsave
add
test
sub
or
cs
pop
and
add
jge
inc
faddl
dec
mov
inc
cmp
js
xchg
sub
clc
or
mov
pop
adc
scas
pusha
xor
pop
add
out
cmp
pop
and
ss
push
je
mov
add
xchg
std
ret
repnz
and
test
add
xchg
jnp
xchg
and
shrb
add
out
push
pop
pop
inc
fstpt
lea
repz
repnz
jnp
mov
add
inc
mov
add
enter
pusha
pushf
jns
or
popf
psrad
sub
add
push
icebp
ret
xor
fwait
arpl
mov
in
mov
add
imul
mov
pop
add
add
dec
jmp
mov
xlat
nop
cmc
cmp
popf
into
lahf
seta
and
mov
mov
pop
push
add
or
outsb
add
fwait
loopne
mov
add
and
add
fadds
fiaddl
repz
inc
dec
mov
cmpb
cmpl
mov
xorb
mov
cmp
shlb
popf
adc
xorb
aaa
mov
dec
pop
into
xchg
push
cmp
adc
jecxz
out
inc
test
xor
ljmp
xor
cs
sub
cmp
or
es
add
lods
popf
lds
call
cmp
sbb
add
lahf
repz
repnz
or
mov
roll
dec
ja
or
add
sbb
jne
sub
icebp
jne
push
mov
and
lea
adcb
leave
movsl
xor
and
jbe
add
xor
mov
cli
inc
jne,pn
and
add
sub
mov
lods
cmpsb
orb
and
inc
cmp
add
or
pushf
cmpsl
loop
das
or
ret
lock
mov
dec
add
lea
push
adc
test
cmpsb
ja
add
incb
in
or
mov
pop
adc
sbb
cli
lock
inc
push
pusha
clc
jo
mov
js
add
add
jg
add
adc
adc
push
outsb
addb
mov
ret
or
lock
adc
add
sbb
pop
mov
add
and
push
cmp
add
xor
aaa
add
out
adc
push
les
loope
pusha
test
or
jp
cmp
orb
loopne
rolb
pop
hlt
jb
dec
daa
adc
sub
fdivrl
and
xor
fwait
popa
mov
ds
pop
cmc
add
xchg
stos
nop
jmp
xchg
lea
xchg
mov
push
add
mov
sbb
fsubrs
push
push
sub
stos
adc
test
addr16
rep
mov
mov
hlt
or
out
mov
adc
cmp
call
inc
cmp
and
mov
sub
negl
xor
decl
add
cmp
or
sub
adc
add
sarl
psubb
mov
aaa
or
repnz
push
add
add
adc
pop
inc
fsubs
jl
dec
mov
fiadds
shr
sbb
into
and
pop
add
cmpsl
push
daa
arpl
add
cmp
adc
mov
cmp
cwtl
jg
push
lret
mov
stos
ljmp
and
scas
pop
lret
mov
mov
and
xchg
inc
lods
xchg
push
add
pop
xor
rcrb
cwtl
add
inc
dec
dec
adcb
cmp
mov
adc
add
adc
iret
nop
mov
test
or
nop
add
loop
sbb
cmp
jb
lods
cli
mov
add
fisttpll
shr
mov
jb
movsb
inc
mov
cmovno
testb
out
add
loop
lret
or
scas
pop
js
sysenter
jae
daa
daa
adc
dec
sub
and
mov
cmp
and
test
xchg
mov
fxch
push
and
push
add
adc
add
sub
jae
or
add
xchg
aas
cld
iret
adc
jmp
jae
add
xor
or
cld
inc
cmp
or
mov
cmp
icebp
cli
call
xchg
sub
cmp
sub
xchg
inc
add
xor
mov
sahf
jmp
add
add
lea
aad
inc
sbb
dec
push
mov
inc
pop
test
xchg
inc
add
jecxz
fwait
inc
sar
cmp
out
xchg
push
add
inc
imulb
sbb
lea
or
xor
cmp
rcr
add
imul
add
pop
jmp
add
add
mov
inc
mov
addr16
mov
insl
jns
add
and
andb
add
inc
mov
adc
push
add
inc
int
push
es
push
add
lret
test
daa
rolb
mov
subl
lret
inc
int
call
xchg
or
pop
lret
push
add
add
call
adc
inc
cmp
jb
lea
dec
repz
pop
addb
pop
movsb
out
dec
or
out
cli
pop
add
fsubrs
movsl
addb
adc
adc
adc
in
pop
rclb
and
mov
and
jmp
add
jne
push
pop
scas
push
add
xor
jle
andl
jge
dec
xor
dec
pop
mov
mov
gs
push
add
sub
pop
push
xor
or
cmp
mov
dec
lret
cli
inc
add
mov
pop
cmp
dec
add
stos
orb
jmp
push
dec
and
mov
sysenter
inc
push
inc
rorb
add
andl
or
cmp
xorb
mov
sbb
add
rorb
lock
inc
add
dec
jne
sub
add
and
fcompl
nop
pop
add
sbbl
cmp
int3
cmp
jo
nop
mov
jp
loop
mov
bound
push
sub
jbe
dec
enter
dec
xorb
add
mov
xchg
cmpsl
adc
or
add
dec
loopne
sti
and
add
or
lds
inc
mov
movq
dec
test
xchg
aas
addb
cwtl
jl
jmp
in
clc
int3
loop
add
adc
or
pop
adc
fsubl
dec
rclb
mov
dec
jle
sub
data16
pop
iret
or
ljmp
xor
insl
movsb
fcmovbe
xchg
add
pusha
lds
add
lret
bound
inc
sub
add
popa
in
bound
ret
call
cmp
daa
jb
subl
push
add
vpsrad
dec
imul
sub
subb
xor
daa
xchg
add
int3
mov
or
sbb
xchg
sbb
aam
xchg
jle
add
add
shr
cmp
inc
cs
jbe
xor
leave
scas
add
sbb
jmp
pop
push
xorl
aam
push
addl
loopne
mov
shlb
mov
sti
add
push
mov
mov
je
add
arpl
add
sbb
add
pop
push
add
xor
mov
push
xchg
in
pop
adc
lea
cmp
ret
jae
dec
adc
mov
mov
push
xchg
in
and
jnp
jnp
add
xlat
adc
xchg
into
xor
mov
cmp
jb
ret
sub
add
or
add
data16
aad
mov
ja
jae
and
sbb
pop
push
or
test
adc
dec
inc
add
insb
in
outsl
push
cld
int3
mov
and
test
mov
inc
inc
push
mov
dec
movl
add
xor
test
add
call
sub
mov
mov
jo
add
mov
adc
cmpsl
scas
iret
mov
add
jp
lock
js
add
jge
ret
xor
dec
in
imul
movsl
je
bound
orps
cld
shlb
add
mov
add
cmp
add
cmp
ret
pop
and
and
jge
sbb
add
add
add
popa
xor
push
ret
push
pop
dec
push
aad
push
inc
repnz
lods
cmp
inc
add
push
push
inc
enter
jo
push
loope
cmp
xchg
mov
inc
divb
stc
xor
je
pusha
call
adc
adc
les
test
or
adc
jecxz
add
add
test
adc
add
adc
cmp
and
fstps
call
sbb
adc
inc
lock
or
shrb
mov
js
bound
mov
loop
fcoml
mov
add
repz
xor
sub
push
fstl
stos
mov
std
push
shll
inc
jp
add
dec
pextrw
loop
add
inc
or
fcoms
inc
push
add
add
ret
nop
fnstsw
cwtl
or
test
scas
mov
add
mov
adc
in
std
or
adcl
ds
lock
ja
in
out
sub
lret
and
mov
jne
fmul
das
repz
mov
shld
stos
mov
inc
outsl
jge
pop
adc
lock
test
shrb
clc
and
lods
adc
sub
push
and
lock
lods
rorl
int3
add
fdivs
addl
mov
mov
add
mov
xor
and
popa
fists
mov
pop
add
insl
sub
bound
mov
mov
in
incl
call
or
or
lock
in
lds
fsubrl
push
ja
add
decb
clc
push
dec
adc
mov
es
or
nop
sub
adc
fldcw
cli
bound
out
mov
jo
lret
pop
cmpsl
sub
nop
lock
out
jmp
ss
adc
scas
pop
cld
xchg
in
xor
cmpsb
mov
test
hlt
jo
dec
add
in
add
push
je
add
xor
mov
jne
negb
mov
push
add
lea
mov
pop
sbb
jmp
pop
push
add
lahf
xor
and
jo
adc
lock
imul
mov
fidivl
aaa
sub
ret
adc
pop
mov
lahf
add
out
mov
adc
lret
mov
xchg
add
push
fwait
mov
add
imul
add
rorb
mov
add
or
jmp
pop
dec
add
push
push
add
bnd
testl
inc
jae
inc
add
ret
divl
enter
mov
scas
mov
inc
jmp
pop
and
mov
filds
xchg
sub
mov
add
scas
std
loopne
xor
add
pop
or
lock
inc
push
push
xor
mov
pop
ljmp
push
pop
sbb
mov
mov
add
hlt
dec
adc
add
popf
inc
sub
testb
adc
cmp
cmp
sarl
pop
adc
inc
add
mov
jge
cld
cmp
add
mov
push
adc
ss
sub
je
pop
add
das
mov
sub
insb
add
pop
inc
cld
inc
stc
int
pop
cs
cmp
add
les
aad
push
imul
clc
in
pop
repnz
cmp
decb
jmp
mov
ret
cmpb
stos
in
add
mov
and
add
les
xchg
outsb
add
fstpl
fwait
push
mov
or
aam
mov
jmp
bound
jg
seto
cmp
push
das
flds
push
add
xchg
es
inc
add
jmp
push
lea
insl
enter
pop
cwtl
push
adc
arpl
push
sbb
xor
int3
or
ds
subb
add
cs
sbb
inc
jge
pop
push
int
mov
nop
or
mov
inc
ljmp
ds
out
add
aad
cltd
mov
and
jnp
push
add
mov
or
mov
popf
rorb
add
mov
rcr
add
loopne
ja
dec
daa
cwtl
dec
add
jb
aaa
add
push
scas
cmp
adc
fcoms
and
add
pop
sti
in
dec
fiadds
add
mov
xor
mov
adcl
and
adc
subb
aam
xchg
mov
lods
ror
pop
jg
pop
add
leave
sub
sbb
outsb
pop
pop
mov
push
xchg
out
jns
in
clc
jle
inc
xor
imul
mov
sub
clc
mov
sbb
inc
vmread
nop
int
dec
cld
lret
rcll
add
dec
jne
mov
xchg
pop
out
fs
mov
and
or
and
add
inc
movsb
lds
push
dec
cs
cmpsl
add
xor
dec
add
pop
mov
mov
test
sub
add
mov
sbb
add
inc
cmpb
subb
pop
test
pop
xor
pop
inc
dec
adc
mov
push
inc
ljmp
or
pop
mov
adc
add
imul
add
jo
dec
jno
ret
sub
pop
add
pop
idiv
pusha
les
outsb
jb
shlb
je
push
add
push
or
sarb
cmc
push
imul
clc
jg
add
pop
call
sbb
rorb
inc
xor
mov
ds
mov
mov
clc
popa
add
dec
sti
movsb
test
and
jmp
add
imul
and
sbb
add
pop
in
outsb
dec
fadds
cmp
adc
jnp
movb
xchg
cmp
push
fs
xor
push
call
mov
rolb
fdivrs
add
sub
cmpsl
dec
mov
mov
sbb
in
cmp
jae
add
inc
mov
cmpsb
movsb
adcb
subb
add
rolb
mov
mov
pop
dec
jne
xor
loopne
sbb
lea
jmp
xlat
jno
dec
mov
jae
pop
imul
cmp
enter
pop
inc
cmp
xor
lock
add
in
je
mov
pusha
ss
sbbb
ljmp
cmp
repnz
lea
and
adc
push
jo
shrb
in
cmc
or
sub
mov
dec
inc
push
mov
adc
andl
add
jg
sbb
xor
mov
loope
push
inc
adcl
add
imul
cmpsb
add
lahf
fstl
lea
stc
add
loop
leave
xor
pop
push
out
add
xor
lea
inc
adc
xchg
inc
push
je
int
pop
add
pop
cmp
test
dec
add
loopne
and
sub
and
inc
pop
fcomps
int3
adc
popf
repz
mov
add
ja
mov
sbb
sbb
inc
lock
or
loopne
rolb
lret
in
bound
dec
push
or
push
dec
mov
add
or
lea
jnp
add
ja
lds
add
push
jp
mov
jge
cmp
inc
rol
test
or
inc
shll
dec
inc
mov
stos
insl
test
insl
cmpsb
push
jecxz
ss
push
jae
enter
add
test
cwtl
add
xor
adc
and
pop
lock
aaa
mov
cltd
loop
pusha
scas
and
pop
call
jl
xchg
arpl
add
jns
or
add
test
dec
mov
adc
movsl
add
cwtl
fsubp
les
push
add
mov
rolb
mov
mov
sbbb
add
imul
cwtl
stos
fmuls
adc
mov
rolb
jmp
add
and
pop
pop
sub
movsb
inc
adcb
mov
add
mov
push
pop
xor
sar
mov
sbb
clc
inc
add
std
jne
or
cwtl
add
fldl
pop
cs
dec
daa
add
push
incl
or
pop
inc
rolb
in
mov
xor
pusha
xchg
sti
mov
jo
mov
repnz
push
or
leave
cmp
ljmp
add
push
mov
inc
add
or
add
and
inc
std
add
or
mov
or
or
xor
mov
add
sar
dec
add
add
cld
loopne
inc
std
cmp
add
add
adc
add
jle
or
mov
xlat
xchg
jnp
pop
dec
push
flds
jbe
sub
add
jle
gs
add
cmp
sub
pop
call
jb
ret
repnz
call
jmp
pop
sbb
adc
add
pop
inc
mov
add
test
sub
addr16
jg
jno
popa
jle
inc
sbb
subb
mov
and
xor
int3
stos
add
lea
cmp
call
add
sarl
scas
mov
xchg
mov
nop
es
or
cwtl
iret
push
xor
mov
lcall
add
inc
aad
jge
add
push
lds
idivl
dec
imul
imul
add
sbb
xchg
imul
xchg
lock
sub
add
xchg
pop
cmp
sti
add
aaa
xor
or
xchg
dec
lret
add
push
mov
add
aaa
scas
js
mov
ja
sub
sub
xor
inc
sarb
pop
daa
cmp
pop
sbbb
jl
or
inc
add
lea
mov
xchg
mov
add
jl
push
push
jg
sub
fstpl
loope
or
fmul
push
add
stos
repz
daa
jne
mov
jp
add
jmp
hlt
add
push
fcmovbe
inc
mov
loop
shrb
pop
aad
pushf
lds
repz
movsl
xchg
lret
adc
into
mov
sarl
pop
add
sarb
dec
push
cmpsl
pop
adc
push
mov
rcrl
and
movsl
fists
adc
and
adc
sbb
decl
jl
push
mov
cltd
jp
push
pop
and
jo
in
pop
pushw
xchg
dec
add
mov
sbb
in
pop
stos
xchg
push
push
aas
inc
mov
dec
dec
addb
inc
mov
or
add
or
sub
cmp
mov
imul
push
pop
or
add
cmpb
push
pop
pop
cmp
sub
das
jp
adc
cld
inc
jge
and
nop
push
stos
mov
cwtl
xor
push
dec
or
orb
cmp
adc
das
out
inc
ss
inc
push
mov
test
sbb
in
insl
pop
loop
out
xor
cmp
cmp
data16
mov
add
gs
sti
cmpsb
adc
add
cs
repnz
add
mov
ds
jo
pop
mov
mov
lods
cmp
xor
fmul
adc
fmuls
std
push
sub
pop
idivl
enter
out
sub
ljmp
fiadds
shll
les
fsubl
add
je
sbb
mov
subb
lret
add
movsl
dec
adc
push
mov
add
adc
int3
mov
add
pcmpgtw
fadds
sbb
pop
mov
push
add
stos
shl
inc
push
add
ss
shrl
lahf
add
xor
add
daa
outsb
pop
jns
sub
loopne
dec
dec
dec
mov
in
xchg
jg
push
gs
add
insb
xor
or
pop
adc
pop
push
sbb
rcr
xorb
rolb
mov
lret
sbb
mov
iret
push
or
shlb
pusha
push
dec
mov
cmp
in
and
mov
jecxz
jne
add
mov
add
mov
add
sbb
jle
addl
ret
je
push
fs
sub
inc
xorb
mov
and
xor
push
sbb
sbb
inc
int3
test
add
sar
neg
mov
fiaddl
and
xlat
cli
scas
xchg
es
xor
int
mov
jne
test
lds
int3
add
pop
sbb
adc
jns
pushf
fucomi
add
orl
add
push
pushf
jo
ja
shrl
inc
add
push
xlat
add
insb
and
pop
dec
sub
push
push
cmp
add
inc
lock
fldenv
mov
andl
shlb
dec
mov
aam
mov
jl
cltd
lcall
add
or
stc
leave
popl
aaa
pop
lret
adc
xlat
cld
or
pop
dec
cli
jo
in
movsb
rcr
sahf
cmp
sbb
les
hlt
push
and
add
jne
cmp
rol
mov
dec
adc
cmp
int
loop
inc
test
cltd
cmp
push
sub
leave
add
sarl
xor
cld
and
dec
sbb
arpl
addl
jl
add
dec
jns
dec
lock
pop
mov
movsl
mov
dec
out
mov
lea
dec
add
mov
aam
xor
pop
sub
inc
sbb
call
add
cmp
and
adc
cmp
rol
fsubrs
jl
mov
mov
fstpt
add
lret
mov
es
xchg
and
scas
add
fwait
mov
frstor
add
ljmp
jle
movsb
aas
push
add
mov
add
pop
sub
cmp
dec
add
aam
rolb
add
sbb
add
xor
adc
aam
dec
inc
fs
add
lock
scas
loope
stos
inc
test
flds
xchg
testb
xor
pusha
mov
add
out
dec
xchg
bound
dec
inc
adc
fs
jmp
rcll
push
pop
dec
inc
enter
jne
clc
jl
lahf
add
push
cmp
pinsrw
xchg
lret
add
inc
mov
add
jmp
mov
mov
or
add
js
testb
jno
sarb
add
jg
add
sbb
imul
cmp
jecxz
shlb
inc
dec
sub
es
and
and
addb
repz
in
es
call
pop
fcmovne
xor
add
add
or
dec
add
cmc
addb
inc
dec
jne
inc
enter
packssdw
xchg
mov
scas
mov
dec
incl
fs
adcb
xchg
cmp
clc
cld
imul
adc
dec
ja
add
mov
out
mov
inc
mov
pop
lcall
lret
test
add
add
pop
stos
aam
test
sub
push
lods
pusha
nop
mov
add
and
add
aaa
mov
std
and
mov
and
inc
adc
out
add
inc
push
cmc
aad
mov
adc
jns
stc
adc
ret
adc
icebp
jge
loopne
add
cmp
push
sbb
sub
add
sub
cmpsb
add
mov
or
lret
xchg
add
bound
mov
adc
imull
in
add
loope
ret
lods
or
mov
adc
dec
out
jnp
pusha
incb
dec
add
sub
cmp
sete
add
inc
xor
and
dec
ret
add
pusha
cmp
loop
xlat
flds
or
push
pop
adc
rcr
shlb
add
jecxz
int3
mov
xchg
call
sbb
add
and
into
in
cwtl
or
dec
pop
stos
mov
in
cmp
ret
out
jne
add
push
clc
ret
mov
add
sub
adc
or
add
stc
and
and
and
jg
adc
add
and
adc
push
pop
mov
cmp
les
mov
inc
add
mov
add
fmul
adc
inc
sub
jae
sbb
add
in
data16
xchg
roll
push
cmp
sarb
sbbb
cmove
sub
loopne
das
pop
jae
jbe
rorb
add
mov
or
add
rolb
mov
add
push
imul
test
fucom
pop
into
imul
in
xchg
add
nop
cwtl
ret
call
into
add
ss
lea
mov
imul
rcrl
stos
in
add
sub
inc
insl
mov
addb
aas
test
push
cmp
cmc
jae
jle
add
mov
and
imul
cld
pop
movsl
in
mov
decl
rolb
push
mov
and
sub
add
add
jmp
ret
mov
pop
movsb
loop
movaps
jne
cltd
xchg
pop
dec
pop
add
movb
repz
movsb
in
add
push
mov
pop
and
xchg
icebp
sub
add
test
cmpsl
xlat
or
maxps
dec
pusha
inc
and
cmc
ss
xor
jnp
add
sub
imul
jg
dec
add
jmp
inc
add
stos
lea
bound
mov
fmuls
mov
imul
shlb
push
pop
ljmp
jnp
movsb
enter
scas
js
jbe
shlb
inc
add
or
push
sub
sub
mov
ljmp
sti
xor
add
sub
mov
ret
cmpsb
aaa
hlt
mov
add
adc
push
add
push
sub
pop
das
shll
cmp
and
fcmovnbe
subb
gs
loope
cmp
dec
or
insl
hlt
adc
cmp
lods
out
out
movq
ficoml
insb
jne
testb
inc
scas
je
jl
hlt
mov
xchg
sbb
int
cld
orb
outsl
add
push
cltd
ljmp
test
push
add
push
xchg
ds
and
jmp
sar
inc
mov
xor
or
sbb
sarl
fmuls
call
dec
ljmp
dec
dec
testl
sub
pop
push
inc
pop
xchg
and
cmp
add
inc
xor
add
dec
push
push
push
test
shr
clc
inc
push
je
or
push
loop
add
pop
fmuls
push
add
xor
mov
lock
add
push
mov
dec
mov
jecxz
into
push
jmp
lcall
add
lock
test
push
xchg
jne
mov
xchg
out
mov
imul
xlat
fcoml
js
aam
add
jl
dec
fadds
repz
adc
push
cld
out
jp
push
cli
subl
je
adc
inc
push
push
add
shlb
push
lock
push
les
and
adc
dec
mov
mov
inc
adc
push
shlb
push
dec
ja
or
push
jge
adc
dec
clc
add
scas
ljmp
add
nop
push
mov
add
mov
add
cmp
es
test
jae
jp
push
in
hlt
add
popa
repz
out
adc
test
xor
xchg
insb
lods
dec
cld
aas
aam
cmp
add
mov
add
inc
xchg
subps
xchg
loopne
adc
movsl
stos
add
out
call
cltd
cli
jge
inc
and
or
dec
push
outsl
ret
mov
jo
mov
mov
sub
cmpsb
rorb
xor
xchg
loope
cmp
sbb
popa
pop
mov
orl
mov
pop
popf
js
adc
add
rorb
lahf
fisttpll
add
ja
mov
fldenv
or
jp
pop
or
loopne
inc
adc
add
or
push
inc
data16
movzwl
roll
jmp
mov
je,pt
push
loope
loopne
xorb
mov
cmp
dec
jb
cmp
ja
lea
out
jb
add
lahf
jno
add
add
sbb
or
repnz
xchg
xor
push
test
rclb
sub
xlat
add
or
movd
mov
mov
push
call
hlt
and
cmpb
push
or
orb
dec
mov
lods
add
mov
or
add
push
imul
cwtl
push
fdivrs
sbb
jns
loope
pusha
int
push
add
inc
or
or
cld
add
inc
dec
mov
add
movb
neg
mov
orb
cwtl
add
dec
or
cli
push
aaa
loop
sbb
pop
push
mov
pop
sbb
cmp
push
cwtl
daa
add
call
jmp
and
add
jne
mov
or
add
bound
push
ljmp
push
pusha
adc
lea
cmp
push
fcompl
pop
pop
sbb
dec
and
rcl
adc
and
sbb
sub
add
mov
sbb
add
push
add
add
add
add
inc
loop
fdivp
in
sbb
mov
sbb
test
stos
test
push
mov
xchg
jg
push
fcomi
jae
jns
jb
mov
std
adc
and
mov
pop
xchg
cmp
ljmp
aaa
sbb
mov
add
iret
push
mov
push
inc
dec
add
dec
xchg
or
xchg
stos
pop
test
jle
xchg
xor
xchg
push
add
dec
mov
pop
in
out
call
hlt
add
aad
cmp
loopne
or
add
insb
adc
mov
aas
in
jno
pop
arpl
in
ficoml
add
addb
repnz
ljmp
pop
add
clc
call
push
call
and
jne
add
pop
xchg
in
dec
cmc
enter
test
jmp
mov
mov
xchg
adcl
fs
add
push
imul
stc
mov
push
cmp
cmp
jmp
jg
add
ja
pop
out
out
ret
in
push
xchg
faddl
fcoms
add
insl
xchg
pop
jno
insb
in
mov
cmpsl
pop
movsb
pusha
test
sbb
sbb
push
inc
push
or
or
mulps
bound
bswap
push
push
out
movntq
out
adc
and
shlb
add
test
cmpsb
shl
jae
add
adc
add
jmp
pushf
stc
add
loopne
ss
dec
push
add
pop
pop
xchg
lcall
ja
ljmp
sbbl
iret
add
or
shl
push
icebp
int
in
testl
add
jmp
fisttps
movsl
mov
test
sub
xchg
lahf
dec
fcmovnu
pop
and
add
stos
andb
mov
pushf
mov
xchg
dec
pop
add
jmp
add
mov
in
jecxz
jmp
fstps
sub
mov
ja
aam
pop
mov
lods
mov
add
or
mov
movsl
test
lret
mov
add
jns
adc
xor
mov
pop
mov
mov
cwtl
xchg
aam
push
add
dec
dec
pusha
jo
push
in
loope
leave
pop
push
xchg
xorb
mov
pop
rolb
int3
add
mov
xor
lahf
add
sub
andl
mov
fs
sarb
cmp
or
inc
add
add
mov
fcompl
pusha
add
jbe
out
pop
in
in
lahf
add
mov
jmp
mov
push
mov
test
add
icebp
or
call
inc
add
out
pop
push
les
mov
mov
rolb
add
test
jns
jle
xchg
cwtl
xchg
test
dec
dec
mov
pop
arpl
add
nop
add
add
negb
adc
test
pop
inc
sbb
ljmp
mov
pop
xor
xchg
lcall
add
jne
xchg
pop
or
pop
scas
push
add
lret
shll
lds
sbb
add
cmpsb
cmpsl
jmp
cwtl
movsl
or
add
inc
jle
mov
popa
inc
outsb
or
dec
pop
pop
mov
nop
cmp
adc
mov
jne
int
inc
mov
add
pusha
loop
nop
mov
dec
mov
stc
push
xchg
daa
add
fistl
jmp
decb
lret
andb
cmp
test
xchg
fcompp
bound
cmp
cmp
fsubrl
ljmp
add
ror
sub
mov
and
mov
in
in
push
sarb
test
jnp
lods
cli
push
jmp
add
call
mov
sbb
add
mov
mov
cmp
enter
jbe
adc
and
loopne
fcompl
fstl
xchg
mov
aad
mov
add
addr16
adc
loopne
rcrb
xor
test
les
rclb
call
loope
fnclex
out
icebp
add
mov
jl
jne
cmp
xlat
mov
jno
add
ret
les
pop
jae
or
add
daa
xor
rcrb
sbb
iret
add
loop
test
pop
bnd
into
arpl
and
fwait
adcb
icebp
add
add
or
dec
push
in
pop
xchg
loopne
negl
mov
fs
aam
pop
aad
fadds
jecxz
add
push
add
cmp
add
stc
clc
fs
std
cld
iret
adc
sahf
xorb
nop
aad
popa
xchg
push
adc
pmaxsw
add
or
in
or
popw
daa
xchg
add
mov
lods
cmp
add
cmpsb
mov
sub
stc
aas
and
cmp
aas
lods
lret
pop
cmp
pop
and
mov
jbe
inc
ja
js
add
in
ret
ror
jl
add
lcall
test
mov
in
out
add
adc
add
cmp
cmpsl
push
mov
mov
add
lret
or
enter
mov
dec
inc
lods
test
jmp
stos
mov
and
add
dec
jnp
jl
add
cmp
add
je
inc
jne
addb
rcl
push
addb
cmp
sub
movsl
stos
adc
in
pop
add
add
push
mov
mov
add
xchg
mov
add
sub
mov
mov
mov
add
sbb
jns
add
jp
sub
imul
cmp
push
push
loopne
add
popf
mov
fsubp
lds
lcall
lods
pop
daa
push
sub
push
add
ret
add
push
loop
xor
and
int
add
sbb
cmp
mov
mov
jne
and
xor
scas
stos
jo
mov
addr16
cmovp
mov
jbe
add
push
add
in
out
fildl
mov
dec
test
add
xchg
add
std
xchg
filds
test
int
mov
loopne
add
dec
xchg
adc
xor
imul
push
outsl
insb
sub
inc
in
lock
pusha
pusha
call
movl
cltd
jnp
shlb
test
add
movsb
and
cmpsl
aad
add
jl
sbb
movl
push
add
call
addb
adc
in
add
mov
xchg
push
loop
cwtl
jo
add
xor
inc
push
add
aaa
loopne
call
roll
out
jo
ret
jne
subl
ret
xchg
out
lret
cmp
add
and
push
sub
pushf
rolb
lcall
mov
pop
ret
jg
lret
icebp
mov
jp
cmp
xchg
cmp
movb
add
add
mov
insb
out
ret
les
dec
gs
or
xor
xchg
mov
add
adc
clc
pop
subb
push
cmp
cwtl
add
ja
loopne
jo
add
dec
mov
movsl
movl
jbe
add
test
xchg
loopne
jge
loop
int
mov
or
add
mov
out
xchg
jmp
mov
mov
push
add
movsb
adc
or
out
add
push
sub
inc
inc
dec
xor
inc
pushf
inc
add
cmp
out
add
test
fs
mov
cmp
pop
sbb
daa
pusha
xor
xchg
nop
pop
xchg
xor
add
inc
inc
jne
fmull
cld
push
jae
add
adcl
add
sbb
ficomps
shlb
ss
jo
add
call
pusha
cmp
mov
jno
outsb
les
in
mov
add
mov
jno
ret
stos
stos
or
aaa
int3
xor
out
add
lea
and
je
aam
adc
int3
push
push
enter
add
mov
pop
add
int3
scas
add
seta
neg
outsb
cmc
std
add
add
and
cmp
or
xchg
jo
mov
ljmp
add
jmp
add
and
divb
inc
loopw
and
mov
jo
dec
cmpl
push
add
in
les
cmpsb
add
aam
inc
xchg
call
ds
jp
lcall
out
lods
roll
fildll
das
sub
push
jmp
repnz
mov
js
fsubp
insl
add
enter
sbb
push
fadds
sub
cmc
outsl
aad
xor
push
lahf
repz
dec
daa
sbb
sub
xchg
jmp
out
lock
cs
or
adcl
out
push
xchg
jo
pop
iret
jmp
shr
int
das
jg
lods
dec
dec
jnp
movups
shlb
push
mov
lcall
out
in
and
push
imul
pop
dec
jae
loopne
add
xchg
jg
aam
bound
shlb
stc
scas
nop
sub
xor
std
xor
pop
nop
fidivl
adc
movsb
bound
add
push
rolb
nop
mov
shl
scas
cmc
add
test
lods
and
inc
lahf
xchg
xchg
push
inc
lods
push
rcll
movsl
loopne
fwait
add
cli
jb
jae
xchg
push
stos
pop
mov
dec
cmp
pop
sbbb
xor
sbb
sub
pop
cltd
pop
pusha
cs
je
mov
sub
stos
movsl
mov
jle
push
orl
into
cld
or
jb
add
push
pushf
cmc
pop
cmpl
cmpsb
or
mov
sub
adc
add
lock
add
or
subb
push
loopne
push
add
sub
adc
dec
ss
sbb
outsb
push
jae
add
data16
pop
xchg
addb
xchg
shlb
push
cmp
mov
and
popa
shrb
mov
shll
push
and
and
inc
pusha
and
je
cmp
pop
roll
dec
push
lock
xchg
add
mov
jo
in
call
lahf
and
fucomi
cmpsb
loopne
aam
sldt
jne
clc
flds
xchg
loopne
andb
add
shrb
xor
cmp
mov
push
mov
in
mov
add
das
mov
jmp
add
mov
jae
leave
add
clc
cmpsl
adc
mov
xor
inc
jno
or
loope
inc
hlt
cmp
add
mov
incl
push
sarb
xchg
cmpsl
add
cs
aad
scas
ret
sub
roll
xchg
or
add
mov
jne
add
sub
push
mov
cmp
add
mov
outsb
int3
add
add
or
add
add
aam
inc
in
add
out
aaa
push
cmp
fists
leave
enter
fs
sub
mov
cld
sbb
or
add
xor
add
out
jae
stos
sub
faddl
xchg
inc
in
aas
mov
add
jbe
pop
pop
loopne
clc
call
mul
stos
add
mov
add
arpl
jmp
imul
jnp
cmp
lret
cltd
xchg
call
jno
adc
add
inc
loope
js
xchg
lea
scas
mov
ret
jne
test
inc
dec
clc
add
lret
mov
mov
pop
adc
push
pop
fcompl
mov
outsl
repnz
mov
add
movsb
xchg
and
add
push
mov
imul
testb
insb
fsubl
mov
iret
inc
or
push
sub
rolb
aas
jne
cmp
jl
push
je
dec
xchg
ja
cmpb
mov
xchg
decl
sbb
add
es
call
add
out
adc
add
cmp
add
inc
jecxz
in
push
pop
mov
xor
lahf
push
repnz
jne
push
jmp
daa
outsl
aam
movsb
add
cli
sub
dec
push
outsb
jge
add
rclb
mov
or
inc
add
es
jg
mov
jbe
push
and
mov
addb
jns
xor
add
adc
add
pop
add
sbb
fistps
pop
insb
outsl
add
and
add
jb
das
add
mov
aam
inc
adc
mov
cmpsb
xchg
push
loope
add
pop
jecxz
cmp
jae
adc
mov
xor
rcrb
sbb
cmp
mov
jle
add
out
ja
movsb
adc
and
rcrb
js
add
repz
int
xor
mov
cmp
out
and
mov
mov
pop
lea
xor
in
xor
adc
lea
in
add
mov
andb
out
add
call
xlat
sbb
sbb
pop
add
lods
jmp
scas
jo
or
inc
and
mov
in
int
outsl
repz
cmp
in
imul
stc
rclb
pop
add
xor
xchg
loop
jne
add
lods
outsb
fcom
mov
pop
hlt
inc
add
or
fists
xchg
xor
add
or
pop
lds
cli
subb
pop
fiadds
mov
call
mov
push
cmp
cmp
jmp
and
std
fld
ds
add
lea
test
dec
mov
sahf
sbb
sbb
test
sbb
iret
add
inc
popl
sbb
dec
aaa
mov
loopne
inc
inc
sub
add
call
add
adcb
sub
mov
mov
sbb
in
cmp
add
sar
or
fildl
sub
lds
pop
leave
or
sbb
push
pop
gs
test
les
mov
adc
ror
jmp
js
add
outsb
add
ja
out
std
je
ret
xor
add
icebp
dec
push
push
imul
jge
test
jg
push
inc
xchg
sbb
dec
movsl
cmp
dec
push
add
xor
and
pop
and
add
pusha
lahf
clc
or
ret
inc
cltd
lods
dec
jb
cmp
aad
inc
rcrb
hlt
add
mov
popa
add
xchg
lock
cmp
jp
mov
add
repz
mov
xor
arpl
in
mov
add
call
dec
jle
add
xor
jne
cwtl
lods
pop
cmp
mov
add
add
xor
pop
add
je
mov
loop
add
cltd
lea
out
add
movsb
cmpsl
push
fmuls
adc
jmp
sbb
cmp
stos
sub
xchg
scas
add
rolb
clc
jne
add
pop
hlt
push
addb
fwait
adc
mov
inc
xor
or
sbb
ja
add
cli
sub
pop
lods
clc
dec
add
or
icebp
int3
out
jge
pop
push
popf
aam
or
add
jecxz
push
shll
dec
or
popa
dec
and
jo
test
cld
inc
add
or
movsb
add
testl
jle
mov
add
je
frstor
jmp
in
mov
mov
sbb
insl
push
or
xor
sbb
in
fdivs
mov
ss
or
mov
stc
nop
test
mov
add
sbb
cmp
pop
sbb
cwtl
mov
jmp
fs
clc
jns
mov
inc
and
push
add
mov
add
xchg
outsl
or
cltd
daa
add
jne
pop
add
sbbb
es
mov
shll
inc
pop
loope
nop
or
sbb
or
push
pop
dec
mov
je
call
lock
xchg
and
push
stc
scas
mov
add
movsl
or
inc
int3
hlt
add
xchg
call
mov
jle
movups
adc
nopl
rclb
xor
roll
inc
push
cmp
jl
movsb
add
nop
sarl
stc
push
pop
or
mov
jo
cmp
aad
pop
fs
pop
xor
xor
je
add
add
add
data16
push
fsubrp
mov
nop
or
dec
dec
push
testb
add
loopne
or
cmpsb
sbb
aas
xchg
xchg
cmp
add
pop
xor
mov
pop
add
jge
adc
shll
cmp
add
pop
in
adc
fiadds
cld
push
mov
imul
stc
jg
lock
cwtl
cmc
ret
pop
cltd
mov
jmp
jo
push
push
pop
adc
xchg
icebp
add
fiaddl
or
mov
rorb
pop
sbbb
and
or
add
jmp
cmp
insl
pop
inc
jne
jns
outsb
pop
ja
sbb
push
hlt
pop
cmpsb
or
icebp
dec
xor
push
pop
jae
mov
push
jo
adc
mov
aas
mov
sub
dec
inc
dec
dec
add
xchg
daa
test
cmp
add
xchg
jb
mov
inc
sarb
or
jg
jbe
cli
xchg
aas
jge
or
jl
call
mov
iret
lock
jns
xor
dec
cmpb
loope
je
push
mov
lcall
jmp
sbb
bnd
nop
pop
cmp
add
push
xchg
jnp
inc
add
sbb
add
adc
xor
push
popf
dec
push
lock
mov
and
xor
nop
cmp
ljmp
pop
test
fnstcw
ret
adc
ret
adc
mov
push
ja
xchg
xorb
mov
add
repz
adc
jg
or
movntps
cmp
add
pop
inc
pop
int3
shrl
mov
ss
pop
lods
enter
adc
lret
mov
add
jb
lds
sub
mov
jbe
jge
nop
add
inc
fs
outsb
arpl
inc
cmp
outsl
insl
shll
inc
add
cmp
inc
in
add
mov
jno
push
aaa
inc
into
mov
push
dec
pop
mov
xor
xchg
pop
adc
mov
lock
ds
push
in
cmp
addl
loop
loopne
mov
add
pop
xchg
sbb
jecxz
inc
jb
aaa
xchg
push
sbb
test
shl
cltd
add
stc
lahf
test
in
fwait
add
cmpb
cs
inc
mov
sub
adc
xchg
pop
or
dec
mov
lods
mov
js
sbb
inc
adc
lahf
fnsave
and
call
addb
dec
rdmsr
lcall
push
pop
pop
loope
jg
loop
push
rorl
adc
insb
outsb
ret
mov
cmp
sti
mov
xor
inc
push
cmpb
jp
es
fadds
cwtl
roll
int3
jne
jnp
lock
add
into
dec
orb
add
add
clc
pop
sub
je
pop
push
movsl
mov
mov
mov
dec
add
cwtl
cmpb
xor
cmp
ret
cmc
mov
add
or
pop
adc
clc
stos
add
icebp
lock
mov
cmp
cwtl
pop
add
push
mov
mov
sar
adc
xchg
mov
or
pop
inc
add
or
outsb
add
push
dec
lds
inc
out
loope
add
add
xor
fdecstp
inc
jbe
add
xor
pop
aas
adc
popf
daa
mov
imul
and
dec
leave
add
jp
nop
pop
inc
dec
add
sbb
sbb
or
mov
add
fiaddl
add
js
inc
mov
add
dec
int
add
div
adc
stos
test
sub
sbb
arpl
adc
pop
and
pop
adc
jmp
adc
call
dec
mov
push
push
push
outsl
les
mov
js
jb
fs
xchg
sbb
xchg
add
sub
les
mov
cmp
test
sahf
pop
es
add
stos
jg
add
sbbl
jl
out
sbb
or
enter
pop
call
repnz
sub
sbb
add
sub
push
cwtl
push
inc
pushf
loopne
xor
mov
pop
mov
pop
mov
enter
add
xchg
add
mov
sub
cmp
xchg
pop
fldl
out
mov
jl
adc
lea
pop
sub
add
cmc
xor
add
sub
inc
add
imul
call
mov
adc
jp
jle
add
fsubr
add
shlb
andb
or
cmp
or
jmp
add
push
xor
out
lea
add
pop
add
wbinvd
rolb
ret
sbb
ret
movsl
add
adc
xor
push
test
push
or
push
jnp
add
add
mov
lds
adc
jge
xchg
testb
add
sub
and
rorb
mov
jnp
cmp
addb
add
lret
add
fsub
dec
or
jl
add
ffreep
xor
add
mov
loopne
fwait
pop
movsb
mov
pop
push
loop
subb
jl
jp
or
and
adc
dec
sbb
adc
iret
xchg
orb
lods
rcll
ss
call
int3
repnz
inc
pop
jl
or
dec
push
dec
out
andl
or
cs
or
nop
ror
jo
imul
or
xchg
or
and
pop
insl
jnp
sbb
test
sub
mov
or
arpl
jmp
or
add
cmp
nop
push
and
jbe
sub
in
clc
or
pop
ds
and
and
sbb
pop
or
add
push
cltd
mov
jg
je
jns
es
add
pop
cli
test
add
jp
sub
xchg
enter
sub
jmp
or
inc
push
push
add
sahf
dec
imul
cs
push
pop
or
sbb
add
cmpsl
pop
lds
mov
or
inc
push
and
sbb
mov
push
adc
sub
add
push
mov
xchg
loopne
mov
push
imull
adc
out
lods
arpl
and
shll
clc
lret
bound
or
lods
int
rolb
call
add
leave
call
nop
inc
sbb
sarb
and
sub
add
xor
and
lock
gs
or
and
pop
inc
loopne
add
xor
and
ss
cmp
or
mov
add
xor
lret
shrb
pusha
cld
popf
cli
in
das
out
ret
sbb
jb
movl
and
outsb
add
push
mov
add
mov
imul
add
xor
pop
lods
add
jno
loope
mov
add
pop
nop
rol
out
pop
imull
xor
rclb
jne
sbb
push
or
adc
jb
mov
lret
fcomps
int
add
mov
add
pop
xor
dec
adc
pop
call
mov
fcoml
inc
and
test
jnp
sti
int3
mov
dec
inc
jno
adc
jo
inc
or
jmp
add
inc
pop
addb
mov
sub
add
or
cmc
pop
inc
push
xor
push
add
xchg
jns
ja
cs
xor
add
pop
mov
in
out
add
lret
mov
pop
jns
es
push
adcb
popa
inc
pop
add
ss
hlt
int
ja
add
lods
mov
jne
pop
and
dec
pop
aam
adc
xchg
push
sarb
xor
sub
sbb
add
rcrl
daa
add
cmpb
lods
repnz
add
dec
ljmp
add
jmp
cld
js
jp
and
mov
mov
push
add
addl
mov
cmp
sbb
ja
mov
pushf
dec
icebp
in
inc
mov
loopne
push
push
pop
and
pusha
mov
jne
loopne
pop
test
and
push
push
inc
inc
fisubs
xor
mov
shl
mov
andb
push
cwtl
and
ret
inc
dec
inc
lock
push
clc
insl
xchg
mov
sub
push
and
out
xchg
sbb
sub
aam
xor
roll
les
add
enter
xor
jl
mov
lods
adc
mov
and
out
mulb
adcl
xchg
outsl
push
ja
and
mov
imul
cmp
and
insb
cwtl
push
loopne
push
dec
jbe
sbb
je
add
push
jb
outsb
jae
insl
gs
iret
sbb
jne
rcr
xor
mov
add
push
and
or
dec
jnp
pop
xchg
pusha
dec
subb
push
imul
and
and
adc
les
bnd
in
adc
sub
cmpb
xlat
mov
das
fs
push
jae
push
xor
jbe
and
sub
je
pop
jp
add
mov
jl
out
cld
mov
add
rorb
jge
add
outsb
jne
sbb
add
imul
or
and
or
imul
mov
or
sub
loop
xchg
pop
jne
bound
js
inc
pop
lret
xor
mov
popa
fs
and
jmp
push
adc
lods
add
push
adc
adc
movsl
add
std
shrb
sub
dec
mov
add
mov
push
mov
cwtl
add
ss
mov
enter
xchg
add
lock
adc
push
str
lret
add
or
add
push
jg
adcl
addr16
add
mov
mov
addl
jne
shll
call
orb
orl
add
andb
inc
insl
in
and
add
adcb
lahf
fiaddl
movsl
popa
adc
stc
aam
sub
rcl
lock
loope
call
add
dec
pop
push
and
addb
push
cmpsb
test
stos
subb
pop
sub
or
loopne
jns
sbb
ret
add
add
lock
sbb
dec
push
add
shr
repz
cmp
mov
call
push
int3
js
ja
add
test
pop
out
lds
sub
add
and
stos
in
pop
pop
push
pop
pop
pop
add
cs
mov
push
popa
call
dec
or
mov
lea
clts
mov
sbb
xchg
pop
xor
clc
mov
testl
or
fmuls
add
push
movsl
xor
sub
lods
orb
and
cwtl
and
cmp
pushf
loope
inc
pusha
inc
mov
mov
lea
add
adc
fdivrs
add
roll
add
loope
ja
xor
push
inc
add
sbb
pop
pop
aaa
pop
xor
add
leave
js
jae
outsb
rclb
dec
push
dec
cmp
add
cmp
mov
add
les
inc
sub
leave
mov
imul
icebp
hlt
in
mov
loope
and
or
add
insb
sub
dec
sbbl
pop
shlb
pop
stc
sarl
add
and
cld
cwtl
or
movsb
push
dec
xchg
xor
jne
and
clc
aam
dec
call
mov
and
enter
sbb
push
cwtl
pop
movl
and
and
add
cld
mov
add
add
in
mov
out
call
push
mov
clc
dec
mov
dec
cmp
cmp
or
test
nop
push
enter
popf
xchg
sbbl
pusha
or
sbb
in
or
imul
mov
ret
add
sub
mov
dec
add
nop
or
mov
popa
test
in
je
pop
jo
push
scas
les
and
vmovups
push
add
cli
fsts
add
mov
lea
cmp
add
xchg
loopne
mov
jmp
lret
nop
int3
in
jge
lock
mov
push
add
sub
es
ret
mov
add
cld
and
int3
setb
pop
sbb
ja
rolb
call
inc
out
and
stos
mov
mov
ret
sbb
add
jne
in
or
adc
cmc
mov
xchg
ljmp
fstps
ret
inc
push
mov
jl
test
pop
adc
jmp
push
push
lods
add
mov
jge
add
ret
call
and
add
je
lahf
stc
dec
sub
mov
adc
add
or
cli
or
push
inc
movsl
add
fwait
adc
mov
cmpsb
pop
push
sbbb
jle
push
mov
and
in
clc
cmp
sahf
dec
or
movsb
push
and
in
cmc
outsl
xchg
add
mov
das
or
int3
xchg
add
cmpsl
pop
adc
cld
jg
pop
movswl
add
cli
jmp
sbb
lods
mov
add
cmp
xchg
jbe
add
mov
inc
cmp
add
outsl
fs
in
adc
fldl
mov
mov
mov
add
lcall
pop
inc
pop
or
add
outsb
cs
push
xor
or
jo
push
sub
repz
shlb
push
dec
out
jmp
sub
loopne
jge
sbb
in
call
div
add
mov
test
push
add
test
add
pop
mov
popa
jb
mov
add
lahf
cmp
push
mov
inc
push
mov
add
call
jo
cmpsl
add
xchg
data16
aaa
fwait
adc
hlt
into
mov
pop
push
and
mov
jo
rolb
nopl
or
adc
and
push
fmull
in
jae
js
test
popf
jnp
hlt
mov
mov
xor
popa
add
cmpb
gs
lea
pop
icebp
add
sbb
clc
push
jp
cmp
cmpsl
xchg
into
lds
adc
subb
addl
adc
in
cld
mov
xchg
inc
mov
jmp
push
pop
in
jo
test
pop
add
jle
mov
and
or
jb
add
stos
cmpsl
daa
jge
lock
test
pop
orb
xchg
mov
outsl
add
pop
cwtl
jae
sub
sbb
or
or
pop
ljmp
andps
mov
jae
or
ja
xor
mov
add
test
mov
xor
mov
test
das
sub
and
jo
dec
lods
mov
push
pop
cmp
loop
aam
add
jb
adc
lods
aad
add
push
or
pop
inc
loope
js
add
push
loopne
jl
in
leave
add
fs
jecxz
imul
xchg
rclb
je
pop
mov
inc
push
nop
dec
ficoms
ret
xor
push
xchg
in
movsl
jns
dec
mov
add
stc
adc
xor
add
jo
arpl
or
mov
incl
hlt
xor
cmp
dec
xor
test
jp
mov
adc
jo
sbb
sbb
or
adc
inc
push
xchg
sbb
pop
sbb
sbb
jo
mov
mov
aas
lea
pushf
mov
jo
cli
push
add
add
js
lods
cmp
aam
hlt
sahf
pushf
mov
push
mov
add
iret
mov
mov
sarb
loopne
test
mov
aas
add
fsubp
mov
repnz
fildl
jno
jp
fimull
add
add
scas
xlat
ja
add
incl
xor
fdivp
adcl
nop
mov
popf
pop
pop
cld
loopne
jecxz
clc
xchg
add
pusha
popa
mov
jb
std
mov
add
fwait
cs
lea
cmc
push
push
int
ss
jmp
lods
sbb
lret
rorb
jnp
paddusb
aas
test
cmpsl
aam
sub
jecxz
add
pusha
movsb
fs
cli
lahf
pop
xchg
movl
xor
mov
call
pop
add
mulb
or
shlb
pop
loopne
add
mov
dec
shr
nop
add
jg
pop
add
jb
mov
inc
inc
xor
and
ljmp
test
adc
mov
incb
mov
pusha
pop
or
sbb
addb
cltd
adc
add
or
clc
rol
add
icebp
nop
push
es
cvtpi2ps
add
sub
rol
or
in
testl
ret
repnz
pushf
xor
idivl
and
testb
cmp
or
and
cmpsb
push
adc
pusha
pop
mov
sub
jp
loop
aad
clc
lock
inc
and
mov
add
add
jbe
ficoms
add
ret
cmp
cmp
ljmp
xchg
addb
rcl
cwtl
clc
push
mulb
test
andb
mov
jge
addr16
add
lahf
and
sbb
sbb
jbe
es
jae
add
and
cld
mov
mov
cltd
add
push
js
xor
add
xor
pop
fimuls
scas
ljmp
jne
add
add
pusha
lods
jmp
add
add
sub
pop
cmovs
or
sarb
filds
adc
cmpsl
notl
add
mov
test
inc
cli
jge
add
movsl
cmp
add
xchg
dec
mov
dec
inc
mov
inc
mov
clc
mov
adc
test
jo
fxch
jge
jbe
inc
add
cmc
or
push
fisttpl
scas
sahf
aad
movsl
lahf
in
getsec
add
sub
cmp
push
pop
push
add
dec
imul
add
stc
cmp
push
push
das
cmp
pmuludq
adc
jne
or
movswl
jae
mov
jno
lahf
pop
push
pop
xor
and
sbb
cmp
cmp
roll
call
daa
in
mov
popf
cwtl
and
dec
add
or
cmp
mov
sbb
mov
dec
mov
enter
xor
inc
add
clc
pop
hlt
cli
xchg
inc
js
add
ds
lock
and
or
adc
fildll
sub
sbb
in
popf
add
xchg
dec
sbb
ds
and
mov
inc
cmp
ss
inc
sub
fmul
in
mov
jmp
dec
cmpl
je
push
add
lret
mov
pop
sub
test
add
sub
push
mov
aam
testb
mov
xor
add
rol
or
rorl
mov
lock
jp
inc
add
add
or
xchg
lcall
add
ja
jne
lret
push
jno
or
sub
cmc
xchg
pop
fcmovu
add
cs
mov
add
jmp
inc
add
sub
sub
or
test
jo
add
adc
push
pop
xchg
fdivp
and
and
sub
push
jo
add
xchg
shr
cmp
scas
jle
add
push
push
daa
push
loopne,pt
cmpsl
mov
mov
ja
sub
push
inc
addr16
lret
cmp
add
and
scas
jae
mov
mov
test
adc
xor
out
cs
jle
dec
test
add
je
cmp
xor
outsb
subl
push
adc
nop
add
xchg
add
mov
insb
movb
add
xor
into
sbb
mov
push
movsb
movsl
pop
or
in
mov
test
es
mov
lods
add
into
mov
inc
mov
or
adc
or
mov
dec
jp
test
jmp
sub
add
and
sub
and
jnp
push
sub
cwtl
add
push
jle
mov
lods
movsb
xchg
rolb
lea
int3
add
push
sub
inc
lds
cmp
inc
cld
xchg
xor
clc
cwtl
outsb
sbbl
add
jmp
movl
sbb
add
and
adc
adc
and
addr16
aam
mov
xor
mov
jmp
in
in
inc
aam
dec
dec
add
cld
and
dec
clc
movl
out
fcomps
push
pusha
loopne
jns
adc
cmpps
add
std
jno
addb
sub
das
adc
pop
repnz
pop
sub
inc
add
addl
loop
or
test
add
ljmp
scas
lahf
and
add
lea
in
inc
adc
shrl
push
loopne
sub
fisttpl
pop
mov
add
pusha
shl
fsubs
jb
inc
mov
scas
insl
shr
inc
rcrb
xchg
sbb
int3
xlat
mov
test
enter
outsl
xchg
les
adc
and
mov
mov
add
ljmp
loop
and
je
pop
shll
mov
mov
cwtl
inc
iret
jp
ds
fildl
divl
inc
and
enter
push
repnz
push
add
jo
subb
jno
imul
out
ficomps
pop
in
nop
mov
test
add
xchg
pop
fsubrs
push
mov
or
adc
cmp
xchg
xorl
add
add
hlt
pushf
push
mov
cmpsl
add
mov
add
insb
in
push
or
loopne
inc
dec
clc
add
and
stos
lods
and
lods
or
loop
rorb
and
ljmp
enter
mov
cmpsl
add
xchg
scas
daa
std
cmpsb
les
rolb
stos
dec
rorb
add
jb
cmpl
hlt
mov
pop
push
mov
addb
push
jmp
sbb
jmp
mov
jno
mov
or
push
cli
pop
mov
inc
enter
pusha
je
push
shrd
jo
daa
mov
mov
ficoml
lret
push
movsl
sub
jp
xchg
ror
mov
out
and
sub
mov
fimull
jno
notb
lods
add
lret
fiadds
sbb
loopne
lock
inc
enter
inc
or
push
mov
jg
mov
or
sub
leave
dec
mov
pop
inc
push
xlat
inc
movl
or
push
jns
mov
jbe
pop
add
mov
add
jne,pn
mov
addb
jmp
aas
fwait
sbb
or
xor
adc
cli
mov
add
and
divl
mov
repz
push
test
xorl
pop
mov
nop
inc
rorb
mov
add
dec
jne
mov
inc
and
outsb
mov
stos
lret
push
add
bnd
push
mov
add
gs
lcall
pop
mov
jb
imul
cmp
rcr
sbb
in
mov
add
rcll
in
push
nop
movsb
jae
pusha
jns
jge
add
jecxz
cmp
mov
fdivrl
lods
push
mov
mov
inc
adc
add
data16
popa
aad
nop
outsb
xchg
lds
mov
adc
sti
shlb
mov
addl
imul
adc
jg
mov
jnp
cmp
stos
xor
add
cld
inc
dec
xchg
cld
add
in
call
push
roll
mov
iret
xchg
stos
inc
or
inc
mov
and
pusha
daa
add
testb
mov
mov
add
jecxz
or
add
add
mov
push
jne
lods
movsb
lret
add
fsubl
lock
popa
cli
xchg
xlat
push
pusha
rolb
push
jg
add
lods
and
and
dec
sub
add
xchg
inc
movsb
stos
test
lock
lret
lds
pop
ret
mov
test
out
test
mov
jle
add
mov
cmp
push
fidivrl
dec
sbbl
insb
shlb
js
add
push
pushf
test
push
roll
xor
and
popa
mov
mov
and
push
sbb
ret
cmc
int
jmp
add
pop
cmp
ret
clc
push
add
mov
or
leave
sbb
add
ds
call
call
rcll
mov
xor
nop
in
enter
cmp
imul
cmpb
mov
int
add
jae
les
pop
add
mov
xor
out
data16
popf
std
cmp
and
pop
mov
jae
or
xchg
nop
mov
push
add
push
push
pop
add
jl
inc
xchg
jg
clc
sub
or
pop
adc
pop
add
repz
cld
sub
xor
in
add
mov
test
inc
and
add
imul
xor
xor
aas
notl
pusha
popa
arpl
test
add
shlb
push
push
loop
ret
test
inc
test
popa
mov
cwtl
mov
negb
loope
sub
xor
xor
inc
mov
mov
shlb
jne
mov
inc
push
je
faddl
mov
adc
add
cmc
push
sub
inc
mov
movsb
daa
out
fs
or
outsb
add
jg
aam
or
add
dec
inc
dec
dec
and
adc
ds
imul
out
add
cwtl
mov
dec
inc
scas
aad
xor
testl
pushl
sar
xchg
push
das
loop
dec
cmp
add
dec
lods
cmp
fcoml
bound
sub
adc
daa
sub
pop
jo
movsl
inc
hlt
frstor
inc
call
fcomps
mov
jl
stos
enter
testl
add
inc
jb
jnp
psrlw
int
inc
sub
std
mov
add
and
dec
lock
in
pop
mov
fs
push
cmpsl
or
push
inc
sbb
push
add
mov
push
cld
shr
sub
flds
xchg
out
scas
and
jmp
sar
inc
add
ljmp
add
gs
inc
add
dec
pusha
out
pop
lock
fnstenv
in
add
push
out
sbb
adc
mov
jmp
push
add
or
jle
cmp
ss
adc
aas
add
repz
outsb
mov
inc
push
xchg
lret
push
dec
mov
xchg
jle
cmp
or
inc
sub
andb
mov
hlt
pop
sub
push
push
js
das
repnz
popa
imul
jne
push
and
cmp
cmp
push
xor
dec
mov
shll
sahf
data16
add
mov
push
sbb
push
ljmp
jg
out
loope
dec
and
test
xor
imul
sub
xchg
lods
jns
or
orl
incl
repz
fs
cmp
add
cmp
mov
in
pusha
push
rorb
pop
add
cmp
mov
or
pop
pop
jl
hlt
inc
shll
xchg
add
fisubrl
idivb
dec
add
rorb
add
xor
or
pop
seta
enter
or
add
or
lahf
cmp
add
mov
push
pop
insl
fcomps
pop
adc
xor
imul
jge
jg
add
jns
push
adc
add
xor
ficompl
add
push
mov
insl
rol
xchg
jno
push
xor
jb
cmp
cmp
out
adc
xchg
fnstcw
dec
jne
push
and
add
incl
ja
test
add
cmp
outsl
nop
sub
imul
cli
push
test
addl
stos
cmp
mov
inc
dec
mov
add
pop
mov
add
iret
adc
dec
addb
addl
pop
pop
push
dec
adcb
mov
mov
add
fs
sub
leave
and
ffreep
cmp
mov
mov
mov
lret
cmp
pop
add
xor
enter
and
dec
pop
add
fnstsw
sahf
xchg
leave
add
push
or
test
mov
sbb
xchg
rcl
loopne
cltd
sub
sbb
cwtl
inc
lods
push
inc
or
add
sbbb
xor
push
xchg
add
je
add
mov
clc
add
aas
dec
xchg
aad
test
cmp
cld
mov
xor
xor
shlb
ret
mov
and
gs
lds
js
add
fiaddl
mov
jmp
sahf
pusha
popa
add
push
jno
das
cmp
and
dec
sbb
cmpsl
stc
js
cvtps2pd
clc
pop
invd
popa
mov
jne
cwtl
lret
and
cmp
or
inc
xchg
dec
add
jp
verw
jg
add
movsl
cltd
or
sbb
cmpsb
aad
movntq
mov
mov
pop
jbe
jns
pop
push
inc
or
sbb
sub
fisubl
add
mov
mov
lahf
mov
rcr
mov
sub
and
sarb
cld
cwtl
push
sub
push
add
xchg
dec
jl
sarb
mov
loopne
push
loopne
adc
and
pop
push
data16
insl
inc
pusha
add
fs
insb
sub
dec
cmovae
imul
add
enter
lods
bound
add
insb
int
adcl
jne
add
sahf
popa
or
push
bound
add
mov
mov
mov
mov
lods
and
inc
enter
inc
int3
rorb
add
adc
and
pushf
xor
add
cmp
test
add
in
fs
pushf
testb
jmp
stos
insl
inc
add
jno
data16
adc
imul
pop
add
arpl
int3
test
push
bound
js
cmp
mov
or
clc
add
mov
in
add
dec
cmp
add
jb
xor
push
call
lret
out
sub
mov
shl
add
sbb
fisttps
cmpsb
fwait
add
add
loope
mov
mov
outsb
ret
loopne
mov
ja
xor
adc
pop
push
push
jbe
sbb
mov
jne
xor
push
cld
inc
scas
stos
xrelease
mov
sub
add
inc
nop
cmp
insl
jno
inc
imul
iret
mov
add
dec
sub
hlt
mov
add
fiaddl
repz
js
jp
add
mov
push
stc
xorl
add
sub
jmp
and
jge
cltd
mov
mov
ss
je
or
iret
inc
or
mov
cwtl
push
pop
cltd
add
sbb
xchg
adc
cwtl
insb
push
and
inc
add
mov
call
sub
jbe
je
pop
sub
and
loopne
and
rolb
push
aaa
mov
sub
add
out
sub
arpl
push
xchg
or
add
adc
adc
enter
repnz
add
movsl
out
es
call
dec
inc
and
cmpl
cmp
cs
add
sub
adc
data16
add
or
add
sbb
adc
popa
sbb
add
mov
fldcw
shlb
add
inc
fisubs
cld
nop
fadds
enter
xchg
xchg
mov
mov
adc
pavgb
loopne
add
insl
mov
mov
rcl
filds
xchg
mov
mov
mov
mov
add
cmp
es
add
test
add
cmc
outsl
insb
pop
roll
cmp
lcall
mov
ret
push
add
jo
push
push
mov
add
out
orb
data16
ja
push
popf
inc
lods
add
jbe
sbb
mov
cmp
pop
sahf
mov
shl
dec
adc
jne
add
jae
fcmovbe
mov
les
test
push
jns
loopne
std
cwtl
add
inc
push
test
pushl
push
or
arpl
ljmp
inc
pop
xchg
or
xchg
or
add
cmp
int3
stos
inc
nop
sub
inc
test
mov
mov
inc
clc
xchg
inc
pop
add
insl
dec
cmp
cmpsl
or
lods
mov
aam
icebp
scas
pop
aas
loopne
lahf
or
aad
and
nop
jo
push
add
fistps
push
movsl
cmp
sbb
mov
testl
dec
fildl
adc
and
ret
xor
mov
pop
cmp
sub
or
leave
popf
pop
sub
lock
dec
and
jecxz
add
adc
data16
enter
dec
pop
and
mov
mov
and
add
in
aad
in
jae
test
pushf
dec
dec
sbb
sbb
fisubl
add
mov
or
in
mov
dec
cmp
xor
popf
sub
push
cmp
loope
mov
je
add
inc
bound
fs
or
sbb
adc
xchg
add
mov
addb
outsb
add
dec
gs
jne
push
jp
jnp
jg
dec
lods
mov
pop
add
loop
mov
sbb
lret
and
or
sub
cld
mov
add
pushf
sarb
hlt
fwait
sub
inc
xchg
cwtl
add
pop
jp
push
or
adc
fs
mov
jae
jbe
mov
ret
xchg
adc
fsubrs
cwtl
jne
sub
jnp
adc
sub
push
mov
lahf
pop
jo
add
scas
andb
add
call
jle
mov
mov
dec
xchg
mov
fnsave
outsl
jae
add
psubusb
add
jg
mov
daa
imul
add
mov
sub
cmp
jmp
or
add
stos
push
lahf
outsb
stc
pop
shlb
add
mov
pop
pop
sub
je
arpl
push
shlb
hlt
inc
dec
daa
jne
jnp
add
out
bound
inc
jge
int3
jle
inc
xchg
das
and
es
adc
les
dec
testl
dec
mov
fcompl
or
pop
clc
push
add
loope
in
add
mov
jns
xchg
xchg
dec
adc
pusha
outsb
push
add
mov
push
push
add
xor
mov
add
push
loopne
test
add
mov
rolb
notb
pushl
push
jo
loop
cmp
add
and
dec
push
aaa
pop
add
push
mov
sbb
inc
sub
adc
pop
add
jl
sets
jne
sub
inc
loopne
sub
sahf
pop
loope
mov
add
popa
sbb
nop
xchg
pop
mov
insl
push
cltd
jo
outsl
push
lea
adc
ret
mov
add
mov
add
fcoms
clc
or
pop
cmp
mov
pop
rol
xor
popa
mov
or
addb
jns
popa
and
js
lock
add
jo
add
push
push
pop
and
or
cmpsb
push
add
mov
div
pop
lock
shlb
movsl
pop
inc
adc
dec
dec
in
aas
add
jecxz
mov
stos
push
bound
dec
add
cmp
jl
lsl
clc
jmp
repnz
add
inc
jnp
sub
bound
inc
dec
arpl
jo
fidivl
sbb
fst
and
or
adc
jge
cmc
imul
int3
dec
mov
jge
push
or
inc
loope
pop
pop
push
cmp
adc
rorl
xchg
mov
add
cmp
push
sub
add
in
lahf
jnp
mov
imul
xor
pop
mov
icebp
inc
sbb
xchg
mov
xchg
jecxz,pt
fadds
add
test
movsl
call
sub
popf
add
pusha
push
or
jle
pop
xlat
xchg
out
cmp
shll
add
ficomps
mov
pop
sub
or
loop
mov
paddq
jno
pop
call
jb
fdivl
out
movsl
adc
filds
adc
adc
jecxz
pop
call
popf
xchg
popa
or
add
push
je
add
fdivrs
sub
ja
idivb
add
lods
push
out
jno
and
iret
jo
inc
push
add
ljmp
add
imulb
lret
cmc
push
inc
leave
and
imulb
or
mov
mov
fwait
mov
sarl
and
pop
add
push
pop
mov
sub
push
xor
sbb
aam
push
add
mov
add
push
into
sub
iret
std
aas
repnz
sub
add
lret
jmp
add
or
or
push
dec
je
push
mov
pop
push
cmp
cmpsl
shld
add
mov
adc
sub
xchg
jns
add
add
pop
mov
dec
push
pop
push
xchg
movsb
mov
add
fs
movsl
les
fdivr
sub
adc
bound
pop
inc
inc
scas
add
mov
aam
inc
jnp
cmp
sub
aas
mov
add
movsb
loopne
add
jne
clc
sbb
shl
jge
imul
je
leave
fs
add
inc
mov
shrb
les
iret
push
lret
pop
and
in
add
push
add
in
add
push
repz
push
out
loop
or
jno
and
dec
les
insb
push
inc
pop
gs
rcrb
test
loopne
inc
out
jns
leave
dec
sahf
lret
cmp
adc
lods
sti
orl
sub
add
push
fdivs
shlb
addl
sub
ja
rcrl
rolb
mov
add
rclb
enter
mov
cmp
incb
pop
xchg
jns
lret
xchg
xlat
fwait
add
or
add
push
push
add
out
in
pusha
or
daa
add
shrb
push
mov
faddl
lods
addb
clc
dec
roll
or
cld
add
dec
jne
lock
cmpsb
fdivrl
sub
inc
add
into
inc
mov
shl
add
cmp
out
data16
aas
or
add
sbb
and
or
adc
pop
cmc
in
jo
lahf
hlt
add
jb
fldenv
pop
mov
push
cmp
sar
andb
push
pop
aaa
pop
mov
and
xor
jmp
mov
inc
mov
mov
add
push
dec
int3
cwtl
call
cmp
scas
jne
inc
push
gs
out
in
pop
add
or
mov
cmp
sub
lret
add
adc
adc
sbb
inc
clc
sbb
jb
pop
shl
dec
cmp
jl
rolb
ja
pop
push
out
or
pop
shlb
and
pop
push
or
push
and
add
shll
pop
nop
jge
jns
add
mov
cld
jae
push
fiadds
mov
test
xor
decb
jge
xchg
mov
sub
add
add
jns
push
adc
jae
dec
mov
sub
pop
sub
add
push
sub
call
jmp
gs
add
cwtl
cmc
mov
inc
daa
loopne
sti
inc
clc
push
movb
add
add
scas
add
push
add
mov
mov
aas
add
adc
add
and
movb
sub
mov
add
out
dec
cmp
adc
add
mov
rol
jne
cld
das
add
jg
cli
scas
repz
les
dec
add
push
sbb
and
push
pop
std
rcll
out
stc
ja
sbb
mov
enter
add
and
pop
fmuls
push
test
sbb
cwtl
sub
sub
sub
push
mov
cwtl
bound
add
add
ret
aam
inc
mov
lret
add
lock
and
push
cmp
and
jae
pop
or
add
test
shlb
add
dec
mov
mov
push
addl
out
sbb
cld
xchg
pop
pop
add
jg
xlat
add
inc
sbb
into
enter
out
xor
adc
sbb
mov
fildll
add
sbb
inc
xor
add
das
call
mov
mov
pop
pop
xchg
test
int
jmp
add
lcall
cwtl
adc
iret
mov
add
add
popf
or
jne
push
jae
pop
add
mov
sti
cmovge
fisttpl
inc
rcr
ds
mov
cmp
fsubs
in
mov
testb
push
adc
add
enter
insb
add
aam
test
in
add
mov
jne
pusha
xchg
dec
cmp
inc
dec
aam
and
das
insl
les
hlt
clc
add
and
add
and
add
adcl
add
jmp
inc
insb
les
cltd
inc
add
in
adc
jbe
jmp
fwait
add
lret
pop
add
bnd
pop
dec
xor
mov
push
sti
mov
add
jno
pop
add
repz
testb
sub
add
pop
inc
jmp
and
xlat
cmpb
add
jne
adc
adc
add
mov
xchg
and
shr
and
or
adc
mov
and
mov
inc
mov
jne
add
je
iret
mov
or
add
leave
mov
add
sub
mov
rcrb
add
lcall
dec
pop
add
les
add
xchg
or
jns
and
mov
mov
hlt
jae
lahf
test
xor
push
xor
shlb
add
test
insb
push
dec
jne
push
loopne
jns
movsl
lret
mov
cmpsb
cmp
mov
das
pop
testb
push
outsb
mov
lods
fwait
nop
add
mov
fcoml
punpckhdq
add
xor
enter
xchg
and
add
or
cmp
pop
in
add
test
add
jl
cmp
popf
mov
pop
inc
adcl
pop
xchg
xor
and
and
add
jle
adc
jmp
dec
stos
loope
pusha
nop
inc
add
mov
sbb
pop
cmp
add
and
add
pop
mov
xor
sbbb
lret
ss
inc
cwtl
add
addl
add
mov
cld
or
mov
lcall
or
scas
lock
outsb
sub
add
aad
cld
test
rclb
xchg
jo
inc
add
add
notb
js
inc
and
add
and
dec
add
adc
jmp
sbb
add
xor
add
push
cmp
addb
inc
inc
cmp
jne
pop
rclb
cltd
and
adc
les
insl
dec
cwtl
mov
pop
xor
das
mov
pushf
ss
andl
pop
xor
enter
loopne
jns
xchg
js
dec
fcompl
lods
push
std
sti
add
lcall
jnp
jge
push
add
or
xor
dec
mov
ljmp
ficomps
imul
jge
xchg
jns
pop
test
xchg
push
mov
xchg
xorb
xor
add
add
inc
jl
push
in
push
aad
and
rclb
lock
lods
dec
in
out
add
js
mov
jne
in
cltd
add
adc
sbb
repz
sub
or
mov
insb
add
jge
adc
dec
inc
fs
jb
cli
mov
lret
jmp
dec
inc
or
aas
cmpsb
leave
cmp
ss
call
pop
dec
cmp
add
popf
popa
and
add
push
pushf
mov
push
mov
and
je
es
lret
lret
icebp
mov
add
push
push
xlat
adc
sub
jecxz
cmp
dec
add
loope
push
sahf
insl
xchg
out
add
ret
daa
push
add
xchg
jb
sub
push
xchg
sub
pop
aad
add
xchg
cmpsl
test
add
mov
xchg
ret
jmp
jno
idivb
or
lea
inc
shlb
sub
nopl
push
or
inc
push
rol
popf
jae
add
cmp
add
fiaddl
test
add
add
cmp
push
xchg
in
mov
xlat
mov
mov
pop
jge
add
shrb
mov
ja
mov
aas
cmp
jg
out
mov
xor
inc
push
mov
push
xor
imul
jg
mov
add
loopne
repnz
cli
cmp
loope
in
test
mov
add
add
add
push
jne
ret
call
push
jae
xchg
loop
and
add
movsl
xor
jne
idivl
mov
jnp
jne
pushf
sub
lea
push
push
das
add
jb
add
add
hlt
add
js
pop
pop
sbb
mov
inc
dec
or
dec
inc
nop
inc
push
fisttpl
sti
rorb
hlt
push
add
jl
sub
pop
call
ret
shlb
inc
sub
add
inc
enter
push
add
xchg
incl
push
mov
mov
adc
add
out
imul
cmp
mov
push
dec
fs
sub
sbb
hlt
pop
arpl
jne
jmp
xchg
jmp
testl
jle
sarb
jecxz
data16
add
dec
dec
jno
xchg
push
imulb
add
fs
jo
lea
adc
adcl
cwtl
in
lods
add
clc
decb
and
rcll
cli
mov
cld
jo
je
orl
nop
mov
inc
add
push
push
jnp
push
mov
jge
decl
add
mov
lcall
test
jge
add
cwtl
iret
sbb
movzwl
icebp
sub
mov
add
clc
push
imul
mull
pop
push
add
mov
cs
aaa
sti
ss
lret
jp
add
mov
lods
pusha
jae
pop
jmp
inc
xor
and
or
or
aaa
mov
sbb
adc
rorb
iret
jne
cwtl
scas
and
dec
lods
xchg
cltd
or
push
add
imul
lcall
sub
mov
test
push
imul
mov
jbe
rorb
add
fwait
inc
mov
mov
shlb
add
pop
mov
push
add
mov
frstor
jne
rorb
push
jo
adcl
lea
clc
je
pop
ljmp
jp
nop
add
mov
and
mov
jle
pop
add
mov
xor
add
add
adc
xchg
add
movsl
test
pop
and
js
mov
daa
fadds
gs
fucom
jmp
inc
outsl
push
repz
andb
sahf
outsb
adc
inc
sbb
out
cmc
add
push
mov
dec
stos
add
or
lcall
xor
std
sbb
ret
add
repz
add
push
dec
lret
xlat
xchg
jo
punpckhdq
xor
mov
sub
sbb
or
inc
mov
jg
int
std
call
ss
dec
xchg
jo
cmp
sub
dec
add
adc
or
mov
inc
xor
test
cmp
inc
add
add
mov
add
push
cmp
jne
or
out
xchg
cli
testl
enter
nop
scas
outsb
inc
out
inc
cmp
loopne
xor
arpl
pop
inc
mov
add
movsb
fs
add
int3
jmp
dec
pusha
add
stos
into
pop
addl
jns
mov
ror
cmpsl
test
loopne
repnz
xchg
cmp
loopne
xchg
pop
xor
and
pop
push
or
dec
aam
ret
xor
jno
add
mov
xor
or
shrb
pop
call
add
xchg
add
imul
outsl
imul
test
add
je
push
popa
push
loopne
fwait
orb
mov
ret
loope
push
or
in
sub
mov
rcr
jbe
push
or
les
push
aas
jl
add
mov
cmp
add
add
fldl
imul
pusha
sbb
stos
push
add
mov
or
or
fcoms
add
cwtl
jbe
and
pop
call
out
mov
mov
dec
cmpsb
xchg
and
je
add
push
inc
movsl
and
cli
into
mov
add
xchg
stos
shlb
or
add
push
jp
lret
pop
jmp
xor
cltd
gs
xor
and
jbe
mov
push
dec
inc
jmp
or
cmp
xor
sub
add
in
pop
daa
inc
mov
ljmp
std
cmovns
subb
push
add
mov
ja
out
mov
cmpb
sbb
mov
and
mov
push
add
mov
push
rclb
mov
scas
pop
cmp
cltd
dec
clc
sub
mov
pop
sub
or
test
add
and
movsb
cmp
addb
push
mov
clc
shlb
cmpsb
sbb
mov
mov
add
lods
jge
or
test
xchg
push
or
repnz
or
adcb
add
lods
dec
adc
push
cmp
clc
pop
jl
add
aam
inc
add
cmp
jne
ret
add
cwtl
mov
inc
inc
ds
add
dec
fidivs
outsb
add
pop
xchg
int3
rcl
rorl
and
mov
ljmp
popf
xchg
and
pop
xor
mov
cmc
xchg
inc
add
cs
add
xchg
scas
jb
gs
sub
daa
into
push
aas
dec
rolb
and
test
sbb
add
jo
ja
dec
adc
jno
sbb
loopne
mov
add
jmp
xor
mov
rclb
js
add
or
inc
mov
xchg
add
mov
xchg
pop
sti
push
add
jae
sbb
and
rolb
cmpsb
sbb
cmp
pop
push
fldenv
add
push
lret
or
sbb
jg
repz
mov
aam
das
add
fists
cs
imul
add
mov
xor
push
ror
mov
repnz
repnz
or
idivb
xchg
sub
add
ficoml
cwtl
push
aas
pop
add
sub
movb
add
fsubr
mov
add
pop
pop
jb
and
adc
pop
xchg
xchg
dec
hlt
and
xor
push
add
rclb
sub
push
ljmp
cmp
cmp
sub
clc
add
jecxz
rorb
lock
mov
cli
sbb
mov
and
fistpll
xchg
add
mov
mov
xchg
adc
pusha
in
mov
inc
add
lods
pop
pop
into
adc
adc
sub
and
incl
xlat
bound
dec
faddl
mov
adcl
ds
mov
call
jle
pop
or
xor
or
enter
decl
lea
and
xlat
mov
inc
jle
dec
adc
sbb
mov
inc
cmp
lock
inc
mov
ret
test
outsb
in
pop
pusha
aam
adc
add
data16
mov
add
add
dec
add
xor
add
adc
adc
xchg
xchg
jne
sbb
mov
adcb
cmp
xchg
jno
pop
cmc
hlt
jne
mov
pop
pop
pop
pop
jl
rol
aaa
xchg
jg
and
mov
mov
hlt
mov
orb
fninit
push
pop
add
inc
adc
hlt
cmp
mov
add
inc
push
or
dec
xorb
pop
sbb
mov
shl
arpl
mov
jmp
cmp
inc
sbb
enter
push
sbb
mov
orb
test
shl
mov
adc
add
push
and
dec
pop
xchg
test
add
inc
shr
orb
add
popa
inc
jmp
and
add
aam
leave
mov
add
lock
jmp
jecxz
ja
loope
sub
fcompl
push
dec
push
jbe
lods
test
push
cmp
pop
cmc
sbb
push
mov
popa
sub
adc
outsl
xchg
sbb
adc
mov
lds
cmp
mov
mov
jp
adc
pop
mov
fs
push
sbb
in
aas
and
sbb
fst
bound
adc
cmpsb
stc
add
xor
pushf
push
lds
aaa
or
add
fildl
das
cmp
addb
std
cmp
jae
xchg
loopne
mov
push
dec
int3
mov
mov
inc
call
xchg
pusha
or
and
add
ljmp
jmp
repz
xchg
xchg
add
jp
mov
imul
or
and
add
call
add
add
cwtl
or
mov
daa
sbb
loope
or
push
mov
dec
shl
mov
sub
inc
or
aas
mov
sahf
sub
mov
mov
add
es
inc
push
movsl
add
xchg
in
movsb
sbb
movzbl
sbb
inc
or
lods
fldl
xor
add
add
fs
pop
xchg
pop
or
js
dec
mov
push
and
lods
aam
inc
add
and
mov
call
jnp
je
mov
test
push
xor
add
pop
hlt
outsb
fwait
cld
push
mov
sub
or
je
incb
enter
jmp
dec
outsb
scas
addr16
push
push
cmc
loope
mov
add
incb
jmp
or
add
push
outsl
imul
shl
add
cmp
pop
add
push
inc
sbb
push
dec
test
add
test
lahf
add
inc
add
out
inc
sub
xchg
pusha
inc
jmp
lcall
add
filds
add
push
pusha
inc
sbb
test
aas
arpl
jmp
loop
pop
int3
fwait
shlb
add
xchg
adc
mov
or
add
clc
call
xor
cmpsl
add
insl
dec
aas
shufps
mov
add
xchg
je
add
hlt
jnp
xchg
call
sub
xchg
sub
sbb
fldcw
sbb
sti
and
out
test
jbe
push
push
test
xchg
movb
data16
call
xor
sbb
add
insb
add
lret
push
adc
dec
add
pop
dec
push
mov
aas
loopne
sub
lds
inc
sub
in
jbe
and
jnp
cmp
movsl
stos
cmpsb
in
jge
dec
cmp
mov
xor
add
insb
jbe
pop
add
or
sbb
push
push
inc
sbb
add
mov
stc
pop
add
or
adcb
test
xorb
lahf
add
add
xor
push
lret
cs
inc
mov
dec
add
aad
call
and
inc
je
rolb
repz
or
testb
mov
add
lods
frstor
loopne
jle
mov
cli
addr16
cmp
push
lods
xchg
adc
sbb
mov
je
enter
sub
push
jmp
inc
addb
rolb
bnd
mov
test
call
pop
scas
add
call
inc
mov
xchg
adc
pusha
jle
and
fdivs
jmp
rolb
push
add
fcmovb
shll
cmp
data16
adc
mov
nop
cmc
or
mov
sahf
ficoml
push
add
je
test
and
xchg
in
adc
jge
push
inc
add
xor
xor
adc
push
mov
pop
sbb
fwait
xchg
add
int
and
or
outsb
daa
je
gs
fs
mov
pop
ret
push
xchg
ss
inc
adc
push
add
rcrb
add
out
fnclex
pop
mov
roll
inc
icebp
mov
cmp
mov
sub
xor
or
sbbl
inc
add
jo
add
fdivs
add
das
adc
aam
push
pop
clc
movb
enter
out
xor
jecxz
push
add
add
call
push
aaa
xchg
xor
or
dec
sbb
es
adc
insl
pop
add
add
sub
and
add
jnp
jmp
or
test
push
cmpsb
pop
and
mov
orl
adc
repnz
aam
and
sub
xor
add
iret
dec
xchg
push
je
hlt
dec
cltd
push
add
sub
add
mov
xchg
cmp
sbb
sldt
testl
adc
mov
sub
in
or
jne
negl
lods
fsubs
out
add
out
and
dec
sbb
xchg
fmulp
mov
in
add
xor
xor
cmp
and
xor
jecxz
rclb
and
pop
fcmovb
stos
aas
testb
dec
sub
xchg
iret
inc
adc
addl
or
icebp
cmpsb
add
jmp
mov
sbb
or
sub
push
push
inc
add
push
jle
inc
addl
in
jecxz
and
push
add
and
mov
pusha
mov
pop
add
inc
push
je
ret
insl
imul
xchg
jne
add
fnstsw
pusha
dec
outsb
lock
add
jmp
pop
sub
sub
sub
cwtl
outsb
or
aad
je
xor
insb
adc
and
xor
and
ficoms
pop
shr
mov
adc
mov
pop
stos
enter
add
push
pop
repnz
rorl
sbb
inc
cmpsl
adc
mov
xchg
lret
mov
shlb
fsubl
mov
call
and
and
or
or
add
iret
pop
enter
add
outsl
rcrb
push
hlt
add
iret
shll
add
and
lock
test
add
sub
mov
in
add
daa
lcall
jp
orl
sub
js
mov
inc
add
jnp
mov
pop
mov
sub
push
jp
fcmovnu
jg
xor
cwtl
add
adc
or
push
mov
sarb
stos
mov
sbbb
stos
mov
or
or
xchg
das
add
mov
add
icebp
int3
imul
jmp
push
sbb
dec
aam
inc
mov
pusha
and
loope
cmp
add
jo
sbb
insb
mov
and
add
push
add
scas
test
add
sbb
add
mov
loop
loopne
jp
add
mov
jo
xor
xor
cmc
test
xor
test
inc
popf
cltd
in
add
xchg
xchg
add
int
fildl
repnz
cld
mov
nop
pop
add
push
or
and
fcoml
fwait
mov
pop
test
sahf
and
pop
inc
loop
pushf
dec
pusha
js
rorb
cmpsb
rolb
push
clc
adc
add
and
test
push
lahf
jle
enter
jmp
push
inc
add
aad
inc
and
mov
add
call
int3
inc
adcb
push
cmp
inc
subb
push
test
dec
push
mov
scas
addl
add
imulb
add
lock
jne
xchg
daa
dec
jae
ljmp
push
mov
add
mov
xchg
inc
mov
loopne
or
repz
and
push
dec
ret
sub
test
adc
inc
sbb
inc
shrb
shlb
cmp
pop
sbb
add
jp
ja
push
mov
adc
ret
sbb
sub
fldl
xor
in
push
fwait
dec
push
push
call
orl
push
popf
xor
add
mov
fmul
clc
jns
cmp
and
xor
adc
nop
cmpsb
add
and
cmp
nop
add
dec
out
xlat
mov
cmc
out
add
loopne
inc
adc
pop
rolb
mov
dec
mov
pop
clc
xchg
fisubrl
mov
js
and
daa
ficoms
call
idivl
sbb
cmp
mov
add
and
stc
pusha
aas
jecxz
xor
push
push
call
dec
add
xchg
scas
and
jne
sub
xor
rolb
adc
add
les
jne
movsl
add
je
sbb
jns
adc
dec
repnz
jo
add
adc
mov
or
cmp
out
sbb
icebp
pop
rcrb
movaps
cli
add
pop
pop
mov
inc
add
or
jl
add
cmp
add
fsubp
loopne
push
add
ja
mov
add
mov
xchg
mov
jne
in
daa
push
std
add
mov
add
test
jmp
add
sbb
cmp
ret
ja
and
or
xchg
jae
add
not
sub
lods
mov
data16
mov
jmp
add
popa
jb
push
movsb
jp
idiv
pop
push
and
xchg
ja
push
test
leave
jne
sub
jnp
ret
add
dec
cld
cli
adc
push
test
mov
fsts
adc
and
dec
dec
arpl
mov
sti
adc
pop
cmp
mov
push
inc
push
xchg
mov
rorb
imul
test
jle
pop
jns
cmp
je
das
cmp
or
cld
push
mov
mov
and
mov
sahf
jle
and
ret
cmp
sub
cmpb
fs
pusha
pop
nop
inc
cs
cmp
lock
add
or
cld
sbb
mov
mov
arpl
mov
stos
clc
test
test
pop
push
mov
xchg
add
adc
inc
ret
add
shll
or
inc
push
jg
add
xor
and
out
icebp
adc
cwtl
fistpl
or
out
push
push
push
inc
rcpps
push
enter
aas
and
add
loop
xchg
leave
cmc
adc
repz
add
add
dec
mov
add
inc
add
les
add
pop
cmp
mov
or
loope
add
lret
or
or
xlat
add
and
neg
or
and
aaa
ror
stos
add
pop
pop
ss
sub
fidivrl
and
fdivrl
and
xor
lock
pushf
add
in
jno
fadds
add
mov
inc
dec
pop
movsl
adc
das
cld
jno
sub
xor
and
add
pop
jmp
insb
pop
pop
sbb
int3
and
gs
shl
movsb
push
out
leave
in
bound
dec
pusha
add
push
call
std
xchg
mov
add
sti
adc
add
ja
jne
push
add
in
js
pop
push
add
sbb
dec
notb
add
test
add
aaa
push
dec
add
cmp
xor
push
sbb
or
orb
adc
cwtl
and
add
movsb
add
ret
add
mov
cmpsb
add
stos
jns
or
inc
pop
je
pop
xor
sub
push
lock
mov
lret
or
out
cmp
repz
shrb
inc
push
ds
jl
sub
push
call
rclb
push
lea
sub
push
dec
push
cmc
gs
sbb
out
addb
sub
rclb
ss
loopne
mov
push
int
pop
imul
ret
mov
xchg
andl
out
inc
test
xor
cmp
dec
divl
sbb
test
inc
es
add
dec
or
mov
inc
cmp
add
str
mov
add
and
push
jg
pop
sbb
lock
push
pop
std
fsubs
jae
dec
rolb
out
inc
std
incl
popa
mov
iret
mov
mov
or
adc
add
leave
mov
test
xchg
pusha
bound
jmp
xchg
add
cmp
push
pushf
out
lcall
xchg
mov
iret
adc
or
and
int3
js
andb
clc
xchg
jmp
and
cmp
mov
sub
add
or
xchg
pop
mov
into
push
orb
mov
rcll
shlb
int
xchg
add
fsubr
shll
ret
jmp
stos
cmp
dec
xorb
lock
or
shl
test
das
fdivp
sub
add
insl
loopne
pop
cmpl
lcall
sbb
add
or
jb
add
stos
in
jns
fisttpl
sbb
sub
add
mov
enter
cmpsl
cmc
pop
repz
fsubrs
test
jne
add
call
je
jbe
and
xchg
pushf
stos
cwtl
scas
add
mov
xchg
jle
xchg
jo
cltd
dec
cmpsb
sbb
inc
repnz
daa
jmp
sbb
pop
movsb
cld
inc
jge
push
jg
cmp
xor
jmp
cmp
arpl
lock
add
lahf
aam
mov
add
cmp
mov
xchg
jbe
lds
pop
cmc
nop
inc
sbb
sbb
sbb
ljmp
pop
add
rcll
call
adc
lock
and
push
in
and
pop
mov
xor
pusha
loopne
inc
dec
add
or
jne
add
aaa
cmp
sbb
pop
or
fstpl
mov
faddl
cmpsb
add
subl
lods
ljmp
adc
inc
adc
jmp
push
sub
outsl
add
mov
shrb
repz
jmp
je
mov
add
addb
add
adc
lock
pop
pop
cld
ja
jo
jno
cwtl
or
xor
arpl
xchg
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
pop
or
jbe
pusha
jp
fcoml
xor
add
adc
add
out
test
mov
std
lods
repz
dec
jne
addr16
lret
add
pop
adc
cld
jae
push
add
xchg
or
jl
bound
dec
xchg
sbb
das
cwtl
dec
enter
dec
ret
pop
leave
jl
ret
xchg
pop
mov
outsl
adc
inc
push
outsl
add
push
cmp
jmp
jo
lcall
scas
push
daa
out
xor
outsl
add
aad
lods
fimull
mov
in
jne
int3
xlat
inc
clc
shr
add
mov
or
cmp
test
dec
pop
jecxz
mov
push
pop
addps
lret
aam
add
shlb
fcompl
pop
fcoms
data16
sbb
xchg
inc
mov
mov
or
mov
test
cmp
add
mov
mov
add
std
addb
cmp
pop
call
data16
or
fnstcw
inc
call
ljmp
and
scas
push
clc
jmp
cmp
sbb
int
mov
add
inc
mov
add
dec
mov
xchg
cmpsb
cmp
adcb
pop
sbb
or
mov
sti
js
add
inc
mov
mov
cli
xchg
xor
or
inc
lods
daa
pop
das
fadds
adc
pop
stos
cltd
scas
cmp
add
sub
pop
idivb
add
fists
push
out
iret
jo
rorb
dec
dec
add
out
test
out
dec
bsf
dec
lods
adc
cmp
les
cs
add
lock
cmpsb
sub
dec
cmp
dec
repnz
jle
jmp
cmovne
cmpsb
lea
idivl
inc
dec
push
psubb
ficoml
or
pop
mov
and
cwtl
enter
add
iret
mov
popl
add
cmp
sldt
loop
jb
pop
mov
dec
and
mov
and
mov
in
add
sub
mov
dec
add
jae
cmp
pop
xchg
push
in
add
loop
mov
sahf
add
adc
mov
loope
mov
repnz
out
push
ja
and
dec
jne
add
lahf
iret
cli
add
mov
ljmp
add
jne
xchg
dec
push
push
jmp
inc
in
fstpt
pop
jmp
mov
add
push
enter
add
xor
jle
and
rcll
or
sbb
lea
cmpsb
pop
pop
sbb
sub
or
inc
mov
pop
and
cmp
stos
sti
or
les
adc
mov
addb
iret
jo
sbb
add
push
jecxz
repnz
cmc
jns
mov
popa
mov
test
or
mov
add
push
out
add
out
fsubs
inc
sub
cld
cmp
leave
das
cmpsb
xor
and
dec
addr16
adc
enter
sub
test
push
mov
pop
mov
pusha
leave
pop
pop
popa
add
xchg
dec
inc
jmp
in
out
nop
iret
imulb
sbb
jae
adc
add
and
xchg
mov
cmp
aad
xorl
inc
push
in
mov
lods
sbb
dec
addl
xor
xchg
cli
scas
mov
fs
mov
push
or
hlt
ja
shrb
testl
push
mov
jbe
and
je
dec
es
add
cmp
jne
adc
add
sub
cmp
dec
inc
lret
pusha
inc
shlb
add
inc
repz
push
sub
xor
sbb
mov
cmpsb
loop
mov
aam
and
sub
push
jg
pop
push
pop
mov
daa
in
add
aaa
inc
sbb
push
sub
mov
lcall
es
dec
dec
loopne
add
cmpps
sbb
inc
adc
and
dec
adc
mov
in
add
lcall
push
lret
dec
loopne
sbb
movsl
cmc
pusha
out
repnz
fildll
jmp
hlt
call
pop
es
pop
and
dec
in
lock
add
cs
call
test
lahf
xorl
aam
cmp
jle
jns
pop
mov
leave
std
adc
rcr
lahf
cmp
imul
int3
jp
call
setns
call
mov
movsl
sbb
in
fdivp
pop
adc
jb
dec
ja
mov
sbb
flds
in
add
outsb
popl
or
addr16
inc
inc
pop
add
in
mov
cmp
sub
imul
inc
out
and
jnp
pop
pop
loop
pop
ficoms
add
mov
adc
push
push
cmpsl
adc
sbb
inc
cmp
cld
cmp
repnz
cmp
jp
add
adc
filds
or
cs
sbb
xchg
sub
pop
lock
mov
add
xor
cli
push
push
or
mov
lods
movsb
stos
dec
ljmp
adc
js
cmp
inc
mov
fdivl
movlps
shlb
lock
mov
in
inc
popl
loop
cltd
adc
and
adc
adc
pop
iret
inc
and
lea
jnp
icebp
cmp
xchg
push
pop
mov
add
daa
es
push
andb
add
cmp
xchg
adc
test
add
adc
mov
and
xor
or
cmc
dec
add
pop
rcrl
sub
push
push
inc
mov
lods
and
imul
push
dec
sbb
cmp
loope
ret
loopne
push
jne
xor
fcompl
lock
add
add
adc
sbb
sub
je
cmc
inc
add
jp
push
lds
adc
or
fimuls
jnp
pop
rcl
in
out
jo
and
addl
shr
jmp
mov
movsb
nop
mov
or
lcall
es
xchg
jg
add
or
add
mov
adc
xchg
inc
sub
mov
cmpsl
pop
adc
add
lods
inc
lds
jmp
add
rcrl
jle
cmc
jo
jp
add
enter
push
les
and
andb
jb
and
xor
jl
add
push
cmp
sti
mov
cmp
inc
adcl
sub
loop
inc
rolb
pop
adc
and
nop
clc
mov
add
or
cld
outsl
push
mov
push
push
dec
dec
cs
add
push
mov
or
pop
push
push
sub
loopne
btc
rcll
cmpsl
mov
scas
lock
cmp
push
push
add
and
rolb
xchg
movl
or
add
pusha
inc
inc
call
cmpsb
xor
push
lock
iret
mov
pop
inc
pushf
mov
add
lock
mov
cmc
add
std
mov
add
cmp
inc
dec
jne
dec
addb
icebp
mov
add
cmp
or
mov
push
push
in
cvtps2pi
xchg
out
nop
push
mov
test
push
and
lret
add
push
fnstcw
ds
xchg
in
in
jl
je
test
leave
rcll
jmp
jg
cmpl
xchg
xchg
push
jae
push
add
or
stos
cwtl
mov
cld
rcl
add
cmpsb
pop
and
call
aad
addb
fwait
lods
pextrw
mov
test
sub
in
mov
into
hlt
mov
xchg
adc
mov
orb
movsb
add
jmp
loop
xlat
add
jne
fistl
or
add
je,pn
jge
lret
xor
aam
add
jmp
bound
adc
out
je
dec
loopne
ja
push
or
adc
xchg
mov
and
inc
and
xchg
je
add
mov
add
and
roll
filds
scas
dec
pop
mov
cwtl
shrb
in
cmp
dec
sbb
lock
cmc
js
add
icebp
and
add
call
ja
dec
jge
lahf
jnp
movsl
jle
add
fsubl
push
sub
dec
mov
add
jmp
or
gs
pop
mov
push
pop
pop
shll
adc
push
inc
mov
stos
add
dec
lcall
add
daa
outsb
popa
out
lods
fdivs
xorl
jnp
add
aas
xor
pop
sarb
adc
push
push
pusha
add
add
push
or
punpcklbw
and
sbb
add
test
xor
xlat
pop
scas
dec
fistps
sbb
clc
pop
data16
daa
sub
in
jg
inc
inc
cli
lods
and
aam
iret
push
mov
loopne
mov
adc
cmp
and
mov
cmpsb
jbe
cwtl
add
js
jne
lds
lods
push
das
jge
push
aas
add
xchg
add
out
enter
add
adc
push
scas
flds
xchg
dec
enter
push
pop
push
xchg
popf
sbb
jmp
repnz
cmp
nop
movsl
shlb
push
orl
js
out
add
or
shl
push
push
lea
add
push
and
into
add
mov
loope
shrl
jge
add
and
lods
loope
or
xchg
xor
mov
rol
add
push
in
jnp
xor
test
or
mov
shlb
inc
and
insl
or
mov
or
dec
push
in
test
imul
add
loop
fstl
ja
pop
adc
sbb
inc
test
or
add
sti
ror
pop
push
mov
imul
jb
cmpsl
jmp
addr16
adc
js
add
mov
les
push
loope
inc
fxsave
push
fisubs
js
loopne
les
shrl
or
or
push
mov
pop
cwtl
and
frstor
test
xlat
dec
aaa
stos
add
mov
popf
jno
hlt
gs
out
adc
xor
mov
mov
pop
push
or
call
add
sub
cmpsb
xor
dec
dec
adc
adc
sbb
pop
lods
ret
push
mov
mov
cmp
sbb
in
or
adc
fisubs
addb
hlt
mov
add
xor
add
ss
and
andb
push
mov
mov
outsl
pushf
sub
dec
add
lods
insl
test
pop
jmp
es
add
dec
xor
and
add
ja
test
adc
and
jge
sbb
mov
or
pop
add
pop
push
xor
jno
add
in
mov
jmp
add
pop
pushf
sbb
test
add
push
jl
call
icebp
ret
dec
and
push
mov
xchg
aam
popf
dec
fldcw
adc
add
cmpsl
into
push
add
inc
pop
add
adc
push
je
push
add
sub
aaa
lea
in
mov
or
aas
xchg
call
and
cmp
adc
pop
shll
pop
mov
xor
xor
mov
dec
cwtl
add
sbbl
hlt
adc
mov
out
xor
mov
adc
add
shrb
cmp
clc
sub
add
sbb
test
clc
sub
mov
jle
ljmp
fldt
pop
push
es
dec
push
and
push
gs
add
addb
aam
and
cmp
adc
adc
enter
in
add
cwtl
jne
add
pop
mov
pop
cld
pop
mov
cmpsb
pop
xor
push
push
clc
add
jmp
int
inc
push
sub
and
cmpsl
cmp
aam
sbb
add
mov
call
scas
imul
inc
insb
mov
popl
add
mov
pop
ret
repnz
jp
xor
int3
jmp
dec
pop
sarb
lahf
add
imul
test
cltd
add
push
out
cmp
pop
inc
jne
mov
dec
mov
loop
shlb
add
arpl
int
movzwl
mov
scas
rorb
add
out
sbb
dec
inc
inc
adc
push
je
sbb
sub
stos
inc
add
cwtl
pop
add
xor
inc
add
call
mull
push
add
inc
inc
and
mov
test
dec
pop
scas
sub
cmp
mov
and
cwtl
mov
call
lea
mov
pop
cwtl
ja
and
sbb
cltd
out
gs
pop
cs
or
orb
jg
add
gs
xlat
test
cmp
es
pop
xlat
js
jns
dec
daa
add
notb
add
mov
push
or
cmp
pusha
fidivrl
sbb
dec
cmp
add
add
and
push
cld
inc
add
sbb
pop
nop
enter
mov
adc
inc
add
sub
notl
add
dec
leave
scas
add
pop
push
xchg
icebp
fsubs
add
cmpsb
or
jo
rol
xchg
jl
add
test
in
add
mov
jecxz
mov
shrb
jne
pop
mov
sti
mov
add
lret
adc
fld
add
pop
xor
sbb
sbb
add
sub
add
leave
add
nop
or
pop
ret
enter
add
xchg
add
orl
sub
adc
pop
test
idivb
add
and
cvttps2pi
push
inc
ds
aam
loope
jl
xchg
cmp
jp
sub
cmp
pop
mov
cmc
jp
pop
push
jl
push
push
insl
cmp
andb
cmc
or
inc
adc
add
mov
mov
stos
sahf
mov
ss
icebp
imul
notb
sbb
mov
inc
push
cmc
or
push
cmp
dec
std
xchg
add
test
jecxz
lahf
xor
dec
xchg
les
add
lods
xor
inc
fcomp
loope
add
stos
or
mov
aad
mov
sbb
xchg
ror
filds
out
add
lds
sbb
enter
xor
add
out
pushl
add
ret
lock
jp
add
push
ror
mov
dec
jne
cmp
push
add
and
pop
or
sbb
add
jge
pusha
push
daa
neg
inc
cwtl
sbb
mov
es
shll
add
sub
ljmp
push
mov
inc
inc
add
sbb
je
ror
add
pop
lea
cmpsl
pop
mov
lock
inc
pop
add
icebp
inc
lock
nop
in
cmp
mov
sub
add
sub
sbb
adc
lret
jnp
pop
mov
repnz
add
lock
outsl
gs
push
or
pop
add
cmp
push
testb
add
or
xchg
xchg
add
in
call
shrl
in
mov
repnz
lods
test
add
jge
aas
lea
add
mov
xor
jne
out
adc
inc
mov
or
xor
adc
mov
scas
outsb
rolb
cmpsb
fiadds
inc
loopne
adc
bound
xchg
icebp
nop
cmp
add
xor
mov
add
mull
xchg
rol
cmp
push
add
lret
add
ljmp
arpl
push
or
pop
add
incl
dec
dec
repnz
adc
lds
push
adc
call
add
push
inc
pop
pop
addl
in
xor
sar
add
pop
xchg
int3
pop
rorb
push
add
cltd
add
fdivrs
stos
jmp
popa
add
mov
xor
fisttpll
lock
push
cmp
addl
in
add
adc
sqrtps
inc
fwait
mov
or
mov
mov
sub
cmp
pop
pushf
push
rcll
mov
inc
add
pop
add
leave
and
add
mov
add
loop
mov
loope
outsl
add
rorl
call
flds
pop
sub
adc
iret
add
cltd
mov
or
pop
and
call
add
fsubrs
cmpsb
int3
sar
adc
test
add
xor
ljmp
and
add
inc
fsubrp
jmp
pop
push
in
mov
mov
or
jge
rcll
fstps
xlat
movsb
cld
shrb
pop
orl
dec
xchg
cmpb
test
xor
sbb
inc
ret
addr16
adc
pop
push
push
pop
pusha
sarb
ficoms
push
ds
ss
dec
push
add
nop
xchg
nop
pop
add
jp
cmp
and
leave
movsl
arpl
rolb
pop
aad
hlt
not
add
jo
mov
out
add
jl
dec
push
cltd
add
sub
pop
add
add
shlb
jl
inc
add
mov
sub
xor
leave
ret
movl
add
mov
add
or
dec
jae
xor
cmp
in
add
mov
or
push
lock
pop
inc
mov
aas
xchg
test
cmp
shlb
xchg
iret
xchg
mov
popf
andl
ja
rcrl
jmp
add
out
add
jbe
push
or
inc
xchg
add
or
and
xchg
out
nop
in
add
pusha
popa
sbb
push
or
mov
ficoms
ret
sti
xor
out
add
sarl
pop
xchg
add
lret
add
mov
sbb
add
push
jp
aas
or
shrl
add
pop
pop
push
ret
sarb
cmp
dec
inc
jl
add
xor
lcall
adc
out
sub
push
xchg
jno
pop
add
fwait
mulb
test
xor
stos
addr16
je
sbb
movsl
xorl
xchg
popa
stos
int
pusha
lcall
cvtdq2ps
lea
cld
popa
dec
clc
movsl
add
shr
pop
mov
add
mov
pop
push
subb
push
or
shlb
sub
lret
cmp
add
cld
neg
xor
xchg
into
rorb
test
mov
sub
nop
shll
lods
mov
cmp
or
mov
inc
dec
loop
popf
bound
add
push
or
add
mov
sub
ret
test
cmp
imul
pop
add
ja
dec
hlt
rorb
stc
daa
rorb
pop
or
add
mov
add
adc
sbb
cmp
lods
rorb
xor
adc
sub
in
ja
lcall
mov
add
cmpsb
outsb
hlt
repnz
push
xchg
mov
sub
xchg
inc
pop
push
push
movsl
stc
add
clc
in
inc
in
add
dec
push
add
pop
pusha
lea
fistps
iret
ds
dec
movb
test
xor
push
mov
mov
add
sub
scas
dec
cmp
cli
popf
xor
add
andl
cmc
dec
fildl
or
add
loop
inc
add
xchg
adc
aad
arpl
and
add
xorb
int
mov
sub
mov
add
rcrb
insl
es
test
xrelease
and
mov
orb
add
fstps
jle
fcompl
roll
xchg
test
mov
jl
add
or
or
pusha
ffreep
insb
add
in
jmp
rolb
vmulps
pop
loopne
jl
add
out
jb
mov
les
pushl
out
pushf
push
add
push
xchg
mov
add
or
push
lds
dec
js
loope
cltd
dec
mov
lahf
mov
add
test
push
test
test
dec
rol
sub
adc
sbbb
stos
jl
sbb
out
lods
mov
pop
add
loopne
pop
add
mov
dec
add
sub
adc
in
aam
in
rcr
lret
sub
add
je
xlat
lea
xor
fwait
or
add
pop
jo
mov
lret
add
pop
or
pop
repnz
cwtl
cltd
add
mov
push
lea
add
test
mov
add
fsubs
jmp
jo
jg
cmp
sahf
orb
adc
sbb
cli
xor
sbb
adc
addb
mov
push
call
nop
xorb
push
pusha
push
outsl
add
jmp
adc
add
sarl
mov
xchg
inc
rclb
mov
adc
lret
sub
mov
and
add
jg
mov
in
sbb
push
cmc
push
xor
add
ficomps
lret
inc
loopne
orl
sbb
mov
rclb
mov
addl
jnp
pop
in
cmp
repz
pop
and
jp
addl
add
dec
lret
jmp
enter
ret
ror
movswl
loope
shrb
mov
add
daa
inc
pop
das
xor
clc
pop
push
xchg
sbb
in
int3
sbb
adc
and
lea
jo
shl
jmp
inc
popf
fsubl
inc
inc
les
and
push
jle
add
stc
sahf
and
xlat
pop
adc
cld
xchg
add
sbbb
inc
cli
mov
test
lahf
sbb
add
jnp
pop
add
push
add
push
or
xlat
add
mov
sub
push
popf
sarb
push
inc
decb
mov
mov
adc
orl
dec
mov
mov
push
inc
cmpsb
mov
add
lea
cmp
pop
or
in
jne
add
push
push
repz
stc
add
sub
add
and
mov
orb
sub
call
rcll
inc
or
dec
cmove
nop
xor
lahf
jno
mov
add
jb
pop
pop
pop
pop
push
push
mov
mov
mov
jmp
add
pop
inc
pop
repz
inc
xorl
inc
xchg
sbb
nop
add
sbb
aaa
add
mov
and
popf
add
pop
pause
and
test
dec
add
sub
inc
inc
xor
int
add
and
adc
sar
into
mov
add
jno
add
push
cs
lds
shrl
jle
add
loop
sub
add
jle
mov
repnz
inc
or
jns
add
test
mov
in
nop
xchg
stos
xor
mov
push
hlt
jne
movsl
add
mov
lea
push
repz
push
adc
or
fsubrs
pop
loopne
paddd
cli
dec
adcl
test
sub
pop
sahf
or
add
xor
hlt
mov
and
and
imul
in
add
clc
add
add
or
je
shlb
add
call
inc
sbb
jne
add
xchg
int3
inc
dec
jmp
out
mov
cmpb
loopne
add
jne
cli
or
nop
outsl
or
icebp
sub
fadds
adc
add
dec
mov
add
pop
jnp
cld
add
add
test
test
jbe
and
movb
pop
adc
ja
aam
addb
or
out
and
sbb
sub
push
and
add
push
xor
adc
adc
fsubp
js
aas
add
pop
lea
pop
xchg
jmp
add
and
push
inc
stos
mov
bound
mov
push
sahf
add
mov
cli
add
or
dec
pushf
testl
ret
stos
push
nop
js
stc
loope
repz
fmul
adc
sub
xchg
add
push
push
sbb
loopne
sahf
popa
seto
lret
add
jmp
test
scas
addb
das
cld
adc
pop
add
lcall
pop
sub
add
xor
adc
sub
add
leave
pop
rcrb
dec
inc
repnz
pop
jo
sbb
bound
add
loopne
inc
jge
pop
pop
push
ds
cmp
jp
xor
push
mov
into
addr16
mov
rol
stos
inc
mov
pop
and
enter
popl
repnz
andl
movlps
out
ds
fwait
add
test
pop
sub
icebp
int
xor
add
imul
mov
pop
sub
jg
mov
pop
rorb
pop
std
sbb
mov
inc
add
push
sti
push
adc
mov
jge
or
pop
subb
repnz
orl
rorb
mov
xchg
lret
scas
pusha
outsb
inc
cld
dec
pop
mov
pusha
outsl
andl
in
shll
add
push
push
pusha
jnp
add
add
adc
aad
mov
loop
jge
fmulp
inc
xchg
rorb
punpckhdq
push
mov
push
hlt
xor
sti
mov
cwtl
and
movl
dec
insl
sub
sub
sbb
pop
adc
stos
jo
lmsw
push
js
or
jle
add
jne
nop
popf
or
jae
mov
add
push
mov
sbb
imul
jl
add
pop
mov
adc
pop
sbb
ficompl
imul
loope
es
mov
cmp
outsb
int
mov
jne
roll
mov
aas
or
xor
hlt
cmp
pop
mov
xchg
out
insb
lret
or
jb
icebp
push
jge
cld
inc
add
add
lods
out
roll
push
inc
ljmp
pushl
inc
xchg
loopne
rcrl
jbe
mov
sub
and
inc
push
sbb
and
loopne
add
out
sbb
add
sbbb
jbe
add
sub
pop
mov
mov
leave
or
lods
ja
add
sbb
add
xor
add
adc
loop
xchg
loope,pt
pushf
int3
sarl
dec
cmpsl
sub
push
shl
xorb
inc
cs
pop
mov
sub
dec
subl
xlat
cmp
xchg
jnp
add
aas
lea
xor
stc
pusha
or
cmp
testb
add
fdiv
fiadds
inc
inc
add
sbb
pop
cwtl
push
add
cmc
dec
movsl
cvttps2pi
mov
inc
and
push
pop
or
addl
je
mov
lea
bound
sub
orb
fnstcw
cld
cwtl
sub
cltd
add
imul
jmp
js
add
mov
add
mov
sub
cs
add
adc
lret
sbb
adc
call
ficoms
fldl
ret
mov
xor
enter
les
stc
sub
mov
or
jp
inc
add
xor
jge
popa
add
mov
scas
add
and
push
fisubs
aaa
push
in
xor
cs
out
add
orb
adc
xlat
inc
xchg
cwtl
out
pop
mov
or
or
jmp
jne
add
fnstcw
mov
pop
add
inc
aam
add
ss
mov
jmp
gs
filds
push
and
pushl
punpckhwd
mov
dec
das
lock
out
xchg
mov
cmpsl
jge
and
add
rolb
xchg
or
hlt
nop
roll
xchg
lahf
faddl
mov
and
and
xchg
mov
sbb
stc
push
dec
adc
sbb
dec
sbb
cs
lret
std
push
in
add
sbb
jbe
add
in
add
clc
adcb
clc
inc
or
sbb
adc
add
out
adc
ljmp
arpl
fisttpl
add
add
fs
mov
pop
pop
inc
add
xor
push
fwait
or
daa
add
xchg
pmulhuw
mov
roll
sub
pop
jge
push
inc
add
popl
lea
aas
in
xchg
xchg
pushf
xor
add
mov
repnz
adc
shrl
add
jmp
shrb
shl
popf
mov
add
jmp
int3
nop
push
imul
add
xor
idivb
pop
mov
fiaddl
aaa
loope
mov
or
cmc
pop
adc
inc
inc
inc
mov
ss
fldl
repz
loop
push
push
orb
jle
jmp
repz
sbb
inc
sbbb
pop
cld
data16
add
roll
push
outsb
dec
mov
add
cld
sub
push
add
jbe
push
pop
roll
mov
push
outsl
mov
cmp
or
cmp
add
shr
sub
jg
add
mov
pop
and
ja
mov
ljmp
andb
pop
ljmp
pop
sub
mov
add
dec
lahf
xchg
mov
rorl
xchg
xchg
cmp
add
mov
test
incl
out
roll
fwait
mov
push
fs
in
mov
mov
pushl
xlat
mov
xor
xchg
cmpb
mov
lods
add
mov
sub
sub
adc
adcb
fwait
es
sbb
ljmp
pop
and
sbb
je
cmp
daa
adc
inc
sti
add
lea
add
xchg
addl
mov
scas
mov
js
loopne
in
add
ret
add
and
movsb
hlt
enter
test
inc
in
or
add
inc
les
ds
test
aad
movaps
inc
or
sahf
cs
popa
jmp
flds
and
pop
je
cmp
pop
lahf
mov
loop
or
add
xchg
jbe
lahf
sti
add
loope
dec
push
cmp
and
jbe
fldl
in
addl
pop
add
cmc
stc
mov
cmp
xorl
fnsave
xchg
sbb
push
xchg
add
lahf
movsb
lock
dec
out
add
out
dec
mov
cmp
add
fnsave
mov
loop
jb
pop
inc
jae
aas
rorl
xlat
test
jbe
addl
or
cmp
add
pop
push
sub
fildl
movsl
mov
aas
ret
add
in
ret
stos
sub
and
and
pop
push
testl
push
sti
jnp
cltd
or
pop
adc
add
add
inc
adc
add
test
mov
mov
je
pop
add
sub
call
call
pop
mov
aad
adc
push
iret
jg
es
outsb
mov
or
cmp
clc
rolb
outsb
sbb
ret
in
cs
add
add
mov
ja
cs
push
mov
loop
test
adc
js
insb
push
push
add
cmp
push
in
add
cmpsb
pop
movb
jmp
jle
add
pop
lds
sbb
add
dec
and
add
mov
xchg
dec
lock
add
test
iret
push
cmpsb
jns
sarl
pop
bound
add
pop
pop
dec
add
clc
enter
insb
add
mov
iret
pop
in
fildll
loopne
and
imul
or
and
sub
in
xchg
sbbl
add
fcomi
pop
xlat
add
mov
popa
dec
inc
cmpsb
jo
inc
sbbl
adc
pusha
or
xor
add
sbb
pop
testb
outsl
mov
in
push
jecxz
pushf
jg
pop
das
push
add
xchg
iret
jmp
add
andb
incl
push
and
add
imul
add
pop
mov
inc
mov
add
sbb
cli
push
pop
push
jecxz
addl
adc
cmpsl
push
ret
in
shlb
add
out
xchg
jns
iret
add
dec
loop
adc
dec
mov
ret
xchg
ja
sarl
cs
pop
add
in
sub
outsl
and
add
mov
lea
push
and
iret
scas
add
aaa
sbb
stos
xor
fistps
dec
jle
jno
push
jbe
cmp
stc
add
es
adc
std
add
push
mov
or
mov
pop
and
inc
add
fwait
lcall
inc
mov
push
dec
clc
dec
add
push
jno
inc
xchg
nop
push
cmp
lcall
mov
fidivl
pop
sahf
ficoml
data16
add
sbb
lea
cmp
sub
xorb
add
dec
jl
cli
sti
xchg
adc
sub
add
outsl
sbb
mov
js
pop
mov
sbb
rolb
push
jmp
rclb
pushf
pop
add
mov
add
ror
mov
aas
xor
subb
test
addl
push
or
pusha
or
rcrl
loopne
sub
mov
push
mov
and
pushf
add
aam
movsb
add
ds
pusha
xor
xchg
pop
ss
lahf
pop
andl
cmc
nop
dec
clc
jl
out
mov
lret
mov
cmp
fidivrl
adcb
push
sbb
mov
add
jp
inc
jmp
loop
orb
je
cmc
out
cli
adc
or
xchg
xor
add
mov
test
cmpl
lock
jne
cmp
fiadds
and
in
or
jmp
fnstenv
negl
pop
fisubrs
movb
pop
add
mov
push
fcoml
cmp
lds
bound
pop
xor
or
add
aas
popf
sub
cmp
es
out
add
idivb
dec
loopne
sub
inc
jl
pusha
rclb
inc
ret
icebp
pop
add
adc
lcall
out
rcrb
shl
add
fmuls
test
add
mov
pushl
add
jbe
pushf
sbb
xchg
add
xor
add
enter
les
jbe
into
pop
fidivs
subb
imul
das
push
jp
testl
sbb
lods
xchg
add
inc
ret
gs
lea
pop
push
sub
mov
cs
lahf
xchg
dec
dec
or
roll
or
xor
pop
aad
pop
fcmovb
ret
push
and
add
enter
cmp
add
addr16
xchg
dec
clc
aaa
add
lret
rclb
add
jae
cwtl
add
cmp
pop
popf
sub
adc
add
call
cmpb
push
sub
add
imul
pop
add
lods
es
cld
mov
xchg
loope
js
subl
in
or
add
inc
add
jmp
jb
add
fiaddl
pop
mov
add
inc
inc
cmp
pop
pusha
sbb
fs
sub
lods
pop
roll
xor
lea
nop
hlt
in
repnz
mov
pop
neg
mov
add
push
inc
and
xor
xorl
mov
add
fiadds
add
mov
ret
jecxz
mov
aam
inc
bsr
add
hlt
add
out
rol
not
inc
popa
test
add
dec
xadd
push
je
rcll
popf
add
pop
scas
pop
rcll
adc
fs
and
in
enter
push
add
mov
xor
mov
or
add
push
jbe
dec
gs
sub
sub
adc
xchg
xchg
pop
jo
dec
mov
mov
push
or
and
int3
lret
mov
fdiv
push
inc
add
inc
test
cmc
add
loopne
inc
mov
dec
shll
ds
and
push
rcr
mov
xor
xor
stos
das
push
shl
mov
mov
inc
ret
or
mov
mov
or
lcall
inc
insl
adc
nop
add
loope
push
adc
repnz
roll
sbbl
arpl
and
fisubrs
add
in
inc
decb
add
rol
movsb
pop
imul
incl
push
xchg
call
je
cmp
mov
fstpt
out
mov
sbb
addb
testb
jb
and
and
mov
shr
xlat
movsb
pushf
sub
add
fcompl
dec
shlb
dec
jle
add
and
mov
daa
loop
es
inc
mov
pop
xchg
movsl
data16
lock
call
add
sub
add
inc
xchg
adc
iret
add
pop
fs
xor
and
push
inc
stos
jge
add
pop
cmc
pop
add
stos
sbb
sbb
add
adcb
stc
incl
jb
xchg
sbb
cmp
add
and
cmpsb
fistl
dec
fdivs
loopne
adc
dec
inc
bound
pop
adc
mov
les
test
sub
mov
jecxz
lea
jae
jge
cli
clc
stos
add
aad
add
call
adc
add
push
lods
jmp
mov
cmc
lea
pop
ss
pop
sub
push
loopne
mov
dec
add
adc
inc
fadd
fildl
adc
mov
movntps
or
sbb
sbb
add
and
pushf
xchg
movsb
adc
add
call
push
pop
es
add
or
add
ffreep
or
push
and
push
cmp
popf
subb
push
push
cld
fsubr
loope
enter
add
test
pop
fadds
mov
add
inc
hlt
call
mov
xor
and
add
imul
shrl
mov
pop
and
hlt
pop
mov
sub
pop
push
pop
cmp
popa
or
shl
adc
add
lea
pushl
icebp
out
add
dec
aas
cmpsl
inc
adc
fiadds
mov
aam
and
ja
xchg
enter
push
push
call
add
pop
or
and
xchg
sbb
fwait
popa
push
dec
and
push
add
out
cmp
add
in
loope
inc
mov
add
lret
outsb
test
sub
pop
mov
add
xor
pusha
test
push
fdiv
push
pop
push
in
leave
inc
jge
dec
wrmsr
push
ljmp
das
add
das
addb
add
add
fnstsw
jge
leave
roll
add
jne
push
xchg
je
push
call
lock
add
push
psubsb
or
fldcw
push
clc
push
in
add
sbb
sub
pop
data16
mov
mov
ja
add
xchg
unpckhps
repz
pop
add
call
lock
es
shll
repnz
rorb
xor
in
mov
sub
call
mov
movsb
or
add
ret
nop
and
out
adc
cwtl
iret
mov
stc
std
add
les
mov
call
popf
in
into
sub
or
pop
pop
adcb
inc
mov
inc
xchg
jae
js
popf
add
loop
loopne
cs
add
xor
pop
mov
std
dec
rorb
leave
sub
add
or
pop
mov
testl
dec
cwtl
push
xchg
adc
movsb
bound
push
mov
ja
add
sti
pop
push
mov
aas
dec
jle
mov
mov
movb
adc
pop
cwtl
lock
pop
dec
fadd
rolb
les
mov
ljmp
add
xchg
ret
stos
insb
add
push
mov
imul
js
xor
push
mov
mov
lcall
and
mov
ljmp
mov
stc
fsubr
or
mov
jae
fadd
sbb
dec
push
mov
add
icebp
cs
and
adc
add
enter
inc
or
add
insb
pop
cmp
mov
mov
clc
orl
dec
cwtl
sbb
loopne
mov
sub
imul
push
pop
stos
in
or
inc
sub
push
pop
out
orb
andb
cmp
adc
sub
add
jmp
adc
add
jns
lcall
idiv
popf
imull
jae
decb
add
jo
popl
leave
aam
nop
push
sub
or
call
and
mov
add
and
fdivrl
rol
add
push
negb
cmpsb
rolb
hlt
push
inc
pop
cld
shr
mov
cmp
add
gs
add
cmp
push
cmp
adc
mov
cmpsb
mov
jg
out
lcall
add
iret
adc
add
shlb
add
pop
aad
enter
xchg
in
inc
xor
lea
fidivs
jb
push
sub
ret
and
lea
pop
pop
out
inc
lcall
sbb
sub
sub
js
out
aad
xor
dec
ljmp
add
cltd
jb
or
call
add
dec
add
sbb
lea
test
loopne
loop
cmc
je
sbb
scas
shll
cmp
xchg
add
cmp
jg
adc
aaa
loope
xor
sbb
inc
mov
mov
sbb
rolb
out
mov
add
aam
add
iret
test
mov
inc
add
jge
add
scas
push
or
je
dec
add
jb
add
jbe
pop
add
sbb
test
dec
mov
addb
mov
lock
push
add
leavew
pop
testb
jae
jmp
scas
cmc
or
cmp
les
add
or
jecxz
add
push
sarb
cltd
ja
cmovbe
or
pop
push
push
sbb
mov
push
call
push
lea
gs
or
lods
or
jle
cmp
cmp
das
ja
mov
incl
jle
jge
jge
adc
sbb
push
inc
dec
imul
fsub
femms
adc
pop
mov
cltd
ja
icebp
in
push
push
jmp
dec
add
ficomps
pop
jo
aas
cwtl
jmp
roll
sti
subb
pop
add
cmp
inc
add
mov
lcall
jge
xchg
mov
sub
mov
mov
pop
xor
cli
movsb
dec
fidivrs
or
push
mov
push
lods
pop
jle
pop
rcrb
jae
test
icebp
xor
lock
jbe
out
add
adcb
js
push
into
mov
add
push
or
add
aam
roll
mov
aaa
mov
add
pusha
fidivs
add
lea
xchg
inc
dec
lock
sub
add
mov
cmp
rcll
test
jne
js
mov
jmp
inc
jb
add
xchg
or
adc
ljmp
xor
and
insb
add
je
push
pushf
pop
adc
mov
or
pop
and
mov
and
jmp
push
add
push
ret
jbe
data16
mov
shr
pop
add
sub
pop
addl
jmp
pushl
punpckhwd
maskmovq
testl
push
jbe
add
enter
rolb
das
test
xchg
mov
inc
add
mov
in
mov
hlt
adc
fildl
test
sarb
stos
add
pop
xchg
or
add
sbb
mov
ljmp
fisubl
sub
inc
add
sub
mov
push
incl
and
stos
xchg
ret
inc
dec
add
add
fidivl
push
mov
enter
mov
dec
jbe
pop
adc
cli
push
and
sbb
mov
enter
jae
sbb
hlt
std
add
je
pop
je
daa
mov
mov
lock
add
adc
icebp
pop
lock
mov
stc
subb
fldcw
sar
dec
xchg
sub
add
clc
push
jmp
bound
adc
ss
cmp
jle
or
in
lret
or
push
bnd
orb
pop
push
fwait
add
mov
and
aam
fbstp
xor
and
dec
orb
mov
add
and
mov
jno
ds
ror
add
cmp
daa
and
pop
lcall
cli
push
mov
out
in
or
jae
cmovne
jl
mov
jae
add
mov
out
push
push
or
add
imul
add
push
rorl
add
lock
sub
sbbl
inc
push
outsl
add
and
daa
add
arpl
cmp
lds
xlat
out
lret
test
inc
pop
js
shrb
dec
dec
pop
lahf
mov
ds
orb
cmp
daa
js
dec
and
or
push
add
test
movsb
pop
mov
dec
test
cmp
sub
mov
in
leave
adc
add
adc
sbb
jp
cmc
or
lret
add
and
xchg
pop
mov
sub
adc
add
sbb
loope
fistl
js
mov
add
jl
in
scas
fsubr
ljmp
mov
lds
and
mov
or
mov
roll
mov
xor
xor
and
lea
dec
sub
sub
sub
iret
nop
mov
add
mov
testl
loopne
mov
add
adc
jmp
scas
add
addr16
loope
dec
pop
pushf
fmull
dec
jp
fwait
push
mov
xchg
add
adc
jle
sub
lret
mov
sbb
jle
loopne
add
push
call
mov
or
lods
fadds
jb
rcll
cvtdq2ps
lahf
jl
mov
push
add
or
pusha
add
adc
or
cmp
scas
push
add
sbb
rcrb
movb
adc
hlt
cmpl
repz
jp
add
push
inc
mov
gs
xor
loope
pop
jle
add
into
adc
sbb
repnz
dec
in
add
jp
cli
cmp
aaa
adc
add
cmpl
call
in
lret
ljmp
add
inc
pop
orb
xchg
outsb
les
cwtl
jecxz
test
jmp
add
xchg
inc
xor
testb
int3
sbb
add
mov
sbb
pop
add
or
push
repz
cwtl
add
sbb
xlat
add
data16
inc
inc
or
in
daa
cvtps2pd
cmp
add
enter
leave
cmp
or
push
pop
push
data16
pop
inc
je
insb
cmp
and
roll
push
xchg
cs
cmp
add
pop
call
cmc
jg
add
jo
cld
jns,pt
dec
lret
ja
jb
add
rclb
push
dec
mov
cld
ds
rclb
xor
adc
jbe
push
or
dec
jmp
pop
xlat
mov
add
shl
gs
in
adc
add
pop
add
sbb
insb
inc
das
lahf
or
jns
add
cld
in
cli
sahf
add
aaa
add
adc
shlb
and
sub
insl
xchg
lret
or
push
add
push
mov
jae
sub
in
mov
icebp
je
leave
rclb
push
test
jmp
add
mov
push
call
lock
push
xor
cmp
mov
dec
push
push
daa
add
ror
nop
imul
std
les
push
sbb
pop
add
mov
stos
push
mov
test
rclb
add
pop
rol
fadds
fiaddl
xor
jns
adc
inc
lahf
add
out
jg
iret
sbb
sar
fnop
mov
lret
pop
jno
push
dec
jg
negb
sbb
pusha
inc
add
mov
jge
push
pop
or
das
add
mov
adc
pop
rcrb
lea
push
outsb
mov
cmp
add
push
sti
add
jo
xchg
pop
dec
stos
dec
loopne
and
push
and
xchg
inc
rclb
xor
test
pop
inc
and
add
loope
push
test
filds
lret
fisubl
cwtl
cmp
mov
add
mov
or
enter
cmpsl
cmp
add
push
dec
icebp
sti
push
push
mov
mov
cwtl
or
pop
roll
lea
ret
add
jle
cmpsl
jmp
xchg
add
fst
xchg
mov
lret
cmp
xor
stc
in
ljmp
fstpl
add
mov
and
scas
lea
les
lret
int3
out
ds
pop
add
rep
add
or
nop
pusha
ret
pop
add
ss
jbe
mov
or
jmp
or
cmp
xchg
gs
dec
lock
mov
fs
cmovnp
add
rcr
popa
sbb
add
xor
adc
mov
fiadds
lods
popf
nop
jb
and
cmp
add
mov
add
mov
test
xchg
pusha
ja
outsl
pop
pusha
mov
push
push
mov
lahf
divl
imul
push
mov
mov
gs
pusha
add
fildl
cwtl
dec
push
aas
bound
mov
inc
lods
jg
ds
adc
lea
sbb
add
or
cltd
out
out
or
fcmovnbe
add
shll
xor
bound
push
xchg
js
and
in
add
mov
shlb
daa
testb
mov
roll
xchg
sub
icebp
js
adc
add
in
and
push
adc
cmp
add
loopne
daa
mov
jle
testl
add
adcb
fcmovbe
push
mov
cmp
adc
repz
pop
ficoms
lock
loope
cli
pop
push
dec
push
test
daa
dec
cmp
adc
sub
push
add
imul
clc
sbb
jge
mov
mov
xchg
rolb
sub
stos
rcr
loop
lds
mov
mov
mov
shrb
dec
add
daa
sub
add
jbe
out
push
xor
add
mov
mov
mov
scas
sbb
dec
mov
lea
pop
lcall
mov
inc
stos
xchg
add
addb
sbb
shld
sbb
and
dec
loop
add
lea
add
and
adc
or
shl
xor
adc
cld
pop
or
call
and
mov
adc
sub
fidivrs
ja
add
bound
pop
add
loopne
or
mov
les
and
dec
lock
inc
add
aam
mov
or
add
psubsw
pop
jg
addl
cmp
or
or
incb
mov
scas
cmp
sub
mov
mov
sti
add
and
mov
or
sbbb
pop
scas
fbld
mov
movl
jl
add
dec
clc
mov
cmp
add
pop
add
pop
mov
pop
jge
add
add
pop
mov
xor
inc
add
out
imul
add
rcrb
xor
orb
pop
sub
jmp
xchg
mov
inc
pusha
add
mov
movb
dec
out
push
ficompl
pop
add
dec
hlt
add
repz
add
and
push
mov
sub
flds
sbb
jp
rorb
add
pop
pushf
loope
inc
outsb
add
or
pop
add
inc
in
mov
lea
ret
test
xchg
shrb
xchg
loopne
add
leave
and
push
push
addl
ret
aas
mov
std
stos
and
cmp
mov
sub
stos
in
add
shlb
mulb
loopne
lock
stos
aas
add
cmpsb
ret
inc
adc
push
push
pop
cltd
loope
mov
seta
xchg
mov
mov
push
add
into
push
ret
jg
mov
in
imull
cmp
add
mov
or
cld
add
jmp
add
outsl
ja
dec
lods
mov
pop
sub
add
fdivl
mov
sahf
in
daa
xlat
jno
add
inc
xchg
pop
loop
xor
inc
ficomps
jg
or
psubsb
jne
add
xor
int
add
pop
fstps
jnp
add
rcr
mov
mov
adc
mov
mov
inc
loop
xchg
add
mov
in
in
dec
inc
pop
shl
fisttpll
add
pop
add
scas
je
cmp
sub
mov
int
xchg
loopne
sbb
leave
pop
jns
divb
mov
out
mulb
jbe
add
push
add
add
xchg
xor
pop
out
cmpsl
daa
cmp
push
jp
add
pop
addb
aaa
and
and
rorb
lock
mov
mov
mov
les
sbb
mov
inc
cli
imul
in
nop
in
mov
mov
cs
mov
movsl
add
mov
aad
or
pop
into
mov
xor
add
cmp
dec
mov
fdivl
add
or
sub
cmovo
add
scas
ja
dec
enter
nop
dec
xor
adc
push
add
je
lock
jl
inc
fnstsw
je
aas
add
sahf
filds
inc
add
xchg
imul
pop
cld
cmp
add
dec
mov
inc
sbb
lods
jb
xchg
mov
add
sub
jo
add
push
pop
mov
clc
call
add
mov
int3
dec
aam
imul
add
cli
add
sbb
pop
push
leave
cltd
and
or
push
nop
adc
cmp
push
add
mov
xor
lods
sbb
pop
xor
inc
and
ljmp
add
popf
pop
sub
cwtl
cmpl
arpl
add
pop
dec
mov
and
out
sbb
sbb
fs
xor
mov
icebp
cmp
xor
sub
aad
inc
ljmp
add
push
xchg
jecxz
or
pop
or
imul
in
filds
pop
mov
add
sub
pop
push
aaa
negb
test
sti
test
cmp
mov
cmp
jle
loopne
push
in
dec
pop
data16
add
fldenv
add
jb
mov
add
fwait
and
add
mov
add
jne
xchg
add
xor
push
je
add
xorb
scas
pop
addl
ret
mov
flds
lock
loop
mov
add
push
adc
inc
cld
fiadds
pusha
push
cmp
sub
add
pop
xchg
cltd
push
jo
sub
int3
fistpll
or
fstl
add
sub
lock
dec
lcall
add
sbbl
pop
xlat
movsb
mov
dec
adc
cmpsb
mov
add
add
mov
subb
int3
push
push
cmp
add
ret
push
daa
jmp
inc
cmpsl
inc
repnz
pop
loop
adc
push
dec
roll
push
sub
sub
cmp
out
sbb
pop
add
mov
outsb
mov
mov
mov
lock
dec
add
adc
roll
push
push
and
punpckhbw
lods
ror
mov
jb
incb
out
adc
lock
imul
mov
cmp
cld
dec
push
out
dec
sbb
loop
push
sbb
scas
pop
and
repnz
adc
enter
sub
push
into
xchg
add
sbb
pop
add
cmp
scas
leave
mov
pop
xchg
push
ja
lea
jge
jae
bound
leave
jo
mov
push
and
mov
jp
add
and
lock
add
mov
inc
or
sub
in
cld
hlt
imull
aaa
cli
pusha
add
mov
and
add
stos
cmpb
in
add
lcall
add
inc
add
jl
gs
push
sarl
adc
out
sbb
out
daa
rcrl
cmp
addl
rcrl
jmp
int
addr16
mov
test
adc
addb
push
add
dec
bound
lock
cmp
push
sub
sar
xor
jle
push
pop
jg
add
mov
add
movsb
mov
dec
push
add
lock
shll
pop
rorb
mov
add
sbb
pop
mov
iret
enter
clc
mov
push
inc
ret
hlt
xor
xchg
add
call
dec
ret
loope
add
cmp
push
lods
pcmpgtw
test
push
jl
add
fiadds
sahf
adcb
cmpl
iret
mov
push
jo
in
test
aaa
movsl
pop
int
mov
or
mov
jne
sbb
aas
sbb
pusha
pop
rcr
les
insb
adc
stos
xchg
test
dec
lret
imul
clc
add
data16
das
sub
mov
adc
add
addr16
stc
or
adc
add
sarl
or
scas
ret
cmpb
daa
mov
testl
add
movd
cmp
push
mov
hlt
cmp
loope
add
sbb
adc
lods
aas
mov
sbb
ret
sbb
inc
fistpll
mov
or
out
pop
add
js
push
icebp
sbb
test
or
fdivrl
xchg
ret
int3
sbb
inc
cwtl
loopne
pop
sub
stos
inc
cmc
and
loopne
cmp
sbb
sbb
push
mov
and
insb
xorl
add
mov
orb
jne
add
pushl
dec
in
mov
lret
add
into
mov
xchg
push
ja
and
add
add
adc
stos
lret
push
jl
xchg
sti
and
xor
in
xor
aam
or
add
rorb
mov
aaa
inc
stos
xor
imul
loopne
or
pop
lods
out
jbe
cmp
lock
fcomps
nop
out
xor
push
mov
addl
xor
adc
nop
add
sbb
and
xchg
inc
fs
test
mov
je
inc
mov
or
cli
add
lods
and
pop
mov
lock
mov
xchg
inc
sbb
in
dec
and
andl
hlt
lea
in
ss
rcrb
or
cltd
push
jge
pop
ja
jbe
int3
out
mov
sbb
jns
sbb
mov
and
or
sub
mov
mov
insb
pop
add
cmp
cmpsl
cld
aas
addl
dec
or
and
repnz
inc
pop
cmp
imul
sti
mov
iret
cmp
add
je
inc
inc
or
push
dec
test
stos
or
adc
add
mov
mov
insb
sbb
pop
idivb
push
mov
cmp
mov
cwtl
aas
cmp
push
dec
sbbl
add
mov
jmp
mov
add
sub
xor
adc
jle
jge
mov
nop
mov
add
cltd
adc
adc
mov
and
addb
dec
dec
add
cmp
mov
inc
lds
sub
and
push
shr
adc
sbb
sbb
and
dec
loopne
jne
sbb
xlat
stc
cmp
jne
pop
pop
push
add
and
cmp
push
cmp
push
add
cmp
lea
add
aam
mov
sbb
and
add
out
add
outsb
je
add
and
jb
outsl
out
fiaddl
xor
xchg
push
inc
sbb
ficomps
inc
out
add
inc
push
and
in
pop
or
jo
in
or
pushf
xchg
cmp
and
adc
cwtl
jo
in
add
or
ljmp
aad
clc
mov
or
test
rolb
mov
adc
xchg
ss
sub
or
movsb
dec
nop
add
es
fs
and
and
enter
add
loopne
call
pop
add
or
jecxz
sub
xor
cmp
push
push
pop
fisubs
push
xchg
cmp
cld
nop
cwtl
mov
mov
sarb
add
and
add
sbb
cmp
inc
inc
add
cmp
mov
mov
push
push
les
cld
inc
add
imul
test
xchg
insb
mov
test
adc
or
out
pop
add
or
loopne
push
pop
add
mov
push
add
inc
sbb
dec
adc
adc
arpl
cmp
pop
out
pop
add
je
add
jbe
and
imul
in
shl
add
fsubl
dec
jmp
in
xchg
enter
inc
push
add
imul
lock
nop
movsb
pop
ja
add
or
xchg
clc
adc
js
cmp
pop
je
mov
adc
in
inc
sub
jnp
mov
push
adc
loopne
lcall
rolb
lea
cmp
add
dec
dec
mov
add
cmp
adc
xchg
add
mov
pop
cmp
mul
add
cmpb
push
int
adc
loopne
inc
adc
dec
add
sub
enter
rorl
mov
movsl
add
xchg
mov
dec
in
push
adc
mov
xchg
inc
add
pusha
xchg
and
shrb
xlat
pop
mov
mov
pushf
add
sbb
or
loop
pop
push
lock
and
pop
imul
inc
pusha
popa
mov
or
mov
jo
cld
xor
fs
clc
pushf
data16
and
aam
lock
add
xor
add
pusha
imul
add
inc
cmp
jae
mov
or
js
xchg
andb
add
add
or
or
adc
adc
lahf
push
enter
in
ret
adc
mov
mov
mov
mov
pop
cmpsb
add
clc
test
and
in
dec
add
jno
icebp
incl
push
sbb
cs
add
pop
mov
nop
mov
sub
movb
in
lds
nop
pushf
aas
and
cmp
adc
pop
movsb
xchg
add
mov
mov
mov
cmp
jo
pop
cs
int3
mov
sbb
lahf
or
add
push
arpl
in
test
add
inc
pop
clc
int
adc
pop
inc
mov
cwtl
xor
or
inc
add
and
xor
adc
jne
add
sar
and
adc
and
cwtl
xchg
ds
xor
push
test
xchg
lea
or
fsubs
sbb
add
or
adc
orb
ret
adc
fsts
repz
mov
pop
jmp
cmp
orb
test
or
pusha
push
push
pushf
mov
rorb
jo
xor
cmpsb
in
and
push
add
jns
clc
xor
dec
fldcw
cmp
add
loopne
inc
lods
js
fcoms
sub
adc
push
mov
loopne
lret
jns
add
adc
mov
push
shl
push
and
xor
dec
dec
inc
add
xor
mov
movsl
dec
sbbl
sub
pusha
xor
push
sarl
adc
adc
mov
xor
dec
or
rorb
cmp
and
insb
pop
push
inc
enter
lock
loopne
mov
push
pop
add
mov
sbb
ret
add
rcll
xchg
and
adc
ret
sbb
add
and
inc
xchg
add
cli
test
enter
stc
lcall
and
ret
ret
add
jl
cwtl
xchg
pop
pop
flds
int
insb
in
dec
je
stc
aam
add
lods
add
xor
add
icebp
loopne
mov
push
or
dec
jo
cltd
xchg
inc
or
loop
hlt
and
push
lds
sbb
inc
adc
fs
jbe
test
daa
mov
imul
lock
mov
jp
jp
mov
push
push
sbb
outsb
push
add
mov
pop
lcall
pusha
rolb
cmpsb
adc
fs
pop
and
jle
mov
scas
jae
and
rcl
xchg
fisubrs
in
or
mov
enter
adc
pop
pop
dec
push
jp
mov
adc
or
adc
and
repnz
adc
and
inc
push
sbb
mov
inc
sbbl
aas
jmp
decb
or
jno
add
jbe
xchg
and
cmovs
sbb
scas
lret
flds
jno
adc
push
jno
subb
aam
outsb
push
add
xchg
or
xchg
or
push
pop
jl
jle
sahf
and
dec
jb
mov
inc
data16
cmp
and
dec
pop
xchg
jo
mov
les
or
popf
add
and
cli
add
dec
adc
dec
and
add
outsb
adcl
cmp
scas
add
ds
xchg
push
jb
into
shl
push
fs
test
insl
inc
inc
xor
clc
inc
jb
imul
jle
jmp
adc
add
dec
inc
jbe
pop
mov
mov
sbb
fldt
and
push
jp
push
jg
inc
jb
jne
inc
in
add
dec
push
sub
and
push
arpl
sbb
push
sub
dec
in
mov
arpl
popa
call
xor
mov
mov
in
cs
pop
and
jp
push
outsb
and
adc
add
jns
fdivr
frstor
jp
push
ret
imul
js
dec
clc
xchg
sbb
pop
add
push
jnp
mov
inc
loop
outsl
inc
movsb
call
ds
sbb
jae
dec
add
dec
jg
mov
popa
outsb
out
xchg
or
add
inc
imul
pop
gs
dec
adc
xchg
xorl
add
xchg
lcall
push
add
fwait
sub
or
int3
aam
dec
push
add
xor
jae
mov
popf
bound
fwait
orb
push
outsb
push
sarl
cltd
dec
xor
enter
outsl
test
pop
sub
add
int
ja
roll
pop
pusha
sbb
push
test
lret
push
sbb
dec
add
mov
out
out
xchg
push
cld
xchg
int3
add
cmp
dec
add
leave
adc
mov
jae
dec
and
bound
imul
outsb
addr16
dec
test
test
outsl
js
dec
imul
je
sbb
mov
clc
xchg
mov
mov
push
fldl
cltd
mov
rolb
in
and
mov
mov
push
je
fwait
push
jo
in
fcmovb
lock
shlb
outsl
xchg
adc
cmp
movsb
jg
clc
or
add
adc
cmp
shr
push
test
pop
sbbb
push
stc
movsb
mov
sbb
into
test
add
push
add
dec
loope
pop
cmc
bound
inc
dec
inc
ljmp
push
xor
jne
add
cwtl
test
or
cltd
clc
push
test
scas
mov
stos
ret
sub
add
out
bound
jno
pop
cmc
xor
xchg
sbb
add
mov
montmul
cmpsb
subb
jns
cmc
dec
pop
add
inc
jnp
out
add
lahf
jno
adc
add
or
cmp
movb
mov
cmp
lock
bound
leave
aam
cmp
sahf
jp
add
sbb
sub
xor
fiadds
lcall
sub
imul
sub
call
push
and
out
add
lcall
addl
outsb
and
add
mov
out
add
xlat
stos
out
xchg
fmull
in
add
test
popa
push
arpl
pop
mov
xor
inc
jno
js
notb
pop
add
mov
cbtw
push
mov
int
push
add
lock
add
mov
out
push
inc
clc
jbe
fistpll
mov
add
push
insb
mov
bound
push
add
lret
cmp
dec
inc
into
xorb
xor
add
push
je
aas
sub
sbb
and
addl
sub
inc
rcll
icebp
push
add
dec
sbb
jns
loopne
sub
add
push
adc
adc
inc
insb
sbb
dec
xor
and
push
xchg
pop
dec
mov
daa
xchg
adc
imul
add
dec
insl
dec
lods
push
jmp
and
aas
sub
and
into
mov
xchg
arpl
mov
add
or
push
push
lret
aam
pop
ds
ss
addr16
mov
add
aad
lock
push
xor
cld
sub
lcall
pop
inc
push
add
fs
push
cld
cmp
cmp
pop
sbb
adc
js
or
add
test
add
cmpsb
pop
mov
jge
adc
and
mov
add
popa
xchg
not
add
stos
mov
jbe
fstpt
clc
out
add
cmpsb
push
aam
dec
add
pop
outsb
in
push
cmp
adc
addr16
or
jg
rorb
jg
loopne
adc
dec
add
or
xor
sub
inc
cmp
xchg
out
daa
push
inc
push
bound
jb
jp
and
out
out
out
out
out
out
out
out
out
out
out
out
out
loopne
loope
xor
or
adc
sbb
and
sub
pop
xor
cmp
inc
daa
dec
inc
push
addr16
xchg
push
jb
jp
and
out
out
out
out
out
out
out
out
out
loopne
clc
push
xor
jb
je
jbe
js
add
jl
jle
xchg
shlb
xchg
add
movsb
inc
call
add
imul
sbb
data16
sahf
add
push
fstpl
sti
xchg
adc
pop
daa
and
inc
push
dec
xchg
pop
inc
fs
andb
mov
mov
ret
out
out
out
out
loopne
xchg
cmp
adc
pop
inc
xor
call
pop
fidivrl
mov
mov
loope
cmp
leave
xchg
cmpsl
add
cmp
in
pop
pop
cmp
aas
sahf
dec
push
pop
push
lahf
pop
pop
arpl
addr16
fwait
mov
cld
xchg
stos
popa
push
aas
sbb
sub
shll
jmp
stc
ret
dec
lret
iret
add
dec
inc
and
sub
jb
je
add
js
jp
jl
cmp
cmp
dec
shll
leave
out
shl
push
add
xor
dec
cmp
pcmpgtb
and
lcall
sbb
xor
or
jle
pop
mov
testb
adc
addr16
jp
pop
add
mov
xchg
loope
xor
xchg
leave
mov
mov
and
jbe
add
dec
mov
aas
mov
push
add
mov
movl
inc
cmp
xchg
int
add
mov
rclb
daa
in
ds
inc
ljmp
mov
rorb
ds
add
in
mov
negl
inc
mov
add
xor
adc
add
pop
dec
add
bsr
jecxz
xorl
ja
lret
xor
cmp
adc
jg
les
add
add
popf
sub
jp
pop
nop
jl
mov
xchg
push
mov
aas
xlat
dec
loopne
out
stos
inc
daa
sbb
jo
jnp
adc
lds
sar
pop
add
push
shrl
fldcw
loop
adc
pop
fbstp
repz
push
cmovs
add
add
fsub
and
xor
inc
pop
cmp
jp
shrb
popa
jbe
movsb
js
sbb
cmp
pop
sahf
outsl
push
lea
lahf
xchg
pop
mov
add
sbb
inc
daa
dec
inc
push
sbb
enter
add
xor
rol
add
js
xchg
call
adc
inc
dec
movsb
mov
pop
ret
test
mov
enter
ljmp
add
jbe
js
jp
jl
subb
xor
inc
lahf
dec
pop
push
add
iret
jno
jns
sbb
loope
jmp
fwait
clc
mov
add
xchg
loopne
add
loope
push
cmp
movb
fldcw
inc
lret
xchg
push
push
repnz
iret
call
clc
or
adc
fstps
loope
mov
xchg
cmpsl
addr16
aam
out
repz
cmpl
loope
xor
cmp
push
cmp
xor
jp
adcb
lcall
jbe
jge
mov
jb
call
ljmp
add
or
jp
sub
jle
testl
push
jb
jp
or
jl
lcall
dec
mov
psrld
loop
ljmp
lock
push
xchg
popa
sub
fmul
inc
jb
push
push
out
and
in
rorl
repnz
dec
xchg
lcall
add
add
xor
pop
and
jmp
cmp
add
cs
out
nop
push
lock
clc
nop
cld
cwtl
add
mov
mov
fnop
loopne
repnz
leave
or
stc
clc
and
or
adc
sbb
fcmovb
adc
jmp
xchg
push
adc
repnz
out
push
pop
stc
pusha
dec
push
cmp
mov
cwtl
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
dec
lock
std
shlb
cmp
sbb
in
and
cmp
inc
nop
dec
mov
pop
push
mov
jmp
test
in
xchg
add
rclb
clc
and
pop
sbb
ret
sarl
shlb
push
jecxz
repz
dec
dec
mov
push
add
imul
stc
mov
lods
jecxz
xchg
jo
jae
mov
xor
add
or
js
adc
jl
jle
leave
xor
call
aas
subb
add
je
xchg
js
add
in
push
out
rol
pusha
int3
repnz
xor
adc
adc
loope
jmp
and
sub
inc
andb
mov
je
js
jl
add
rorl
aas
fcmovnb
aas
enter
shr
dec
mov
add
xor
js
add
leave
sbb
and
and
sbb
sub
into
cld
xor
out
dec
cmp
cmp
js
jl
adcb
movsb
sahf
les
int3
lahf
rcrb
aam
fcomps
in
call
aaa
jp
jp
jp
add
lock
cmp
cmp
and
call
jl
test
mov
xchg
dec
fs
repz
int3
xchg
aam
pop
fsubl
in
in
dec
fs
clc
add
cmp
and
sub
cmp
addr16
sbb
out
movsl
daa
std
pop
cmpl
fisttpl
fnstsw
pushf
jle
jle
jle
dec
fdiv
aas
in
call
aas
hlt
aas
clc
add
out
pop
cmp
xor
inc
cmp
inc
test
dec
cld
pusha
push
sti
pop
xchg
ret
jo
into
pushf
lret
subb
or
mov
or
adc
add
or
or
fsts
sub
sbb
pop
in
out
jmp
xchg
cwtl
insb
repz
test
mov
mov
leave
xchg
mov
inc
enter
fdivl
mov
or
mov
iret
adc
prefetcht0
and
and
inc
testb
rclb
arpl
je
js
jl
xor
in
mov
fadd
jnp
fs
sbb
and
and
sub
xorl
xor
dec
mov
mov
jbe
js
jp
jl
add
ret
add
add
jb
je
stos
jbe
loopne
mov
add
dec
cmp
jle
outsb
xor
out
xor
cli
mov
inc
add
push
in
call
lock
hlt
sbb
es
sub
pusha
xor
and
subl
inc
inc
xorb
add
mov
aad
out
inc
push
or
mov
mov
add
jb
popf
cli
add
nop
sbb
xor
loope
lcall
je
jbe
js
add
jl
jle
xchg
frstor
jmp
repz
repz
lock
adc
add
xor
sbb
pop
add
aaa
leave
dec
pop
push
inc
ja
mov
sub
cmp
add
and
jb
cmp
mov
push
mull
insb
pop
inc
mov
cli
mov
rcr
je
shr
add
out
and
sub
aaa
add
mov
jle
push
daa
add
xchg
movsl
add
and
adc
cmp
jecxz
cmc
loopne
add
push
pushf
or
stos
int3
mov
or
add
mov
push
cwtl
je
repnz
xor
xchg
xor
sbb
add
mov
sbb
in
call
loopne
jl
jle
dec
sti
cmp
bswap
push
mov
shlb
cmp
popf
imul
pop
rclb
cmp
sub
add
addr16
adcl
add
in
pushf
out
push
sti
pop
and
push
push
iret
push
pcmpgtb
dec
jl
pop
lahf
dec
test
jecxz
add
sub
xchg
cmp
nopl
mov
push
add
add
jno
andl
add
repz
lcall
add
and
or
cmp
imul
jl
addl
mov
daa
movsb
inc
stos
addr16
aad
faddp
ljmp
xor
or
and
adc
gs
ret
ja
arpl
sbb
dec
popa
mov
iret
scas
maskmovq
testl
or
cmpsb
dec
and
inc
mov
or
cmpsw
loope
ret
rcr
push
sbb
daa
dec
inc
add
jnp
mov
inc
push
mov
inc
cli
arpl
roll
pop
fldenv
jnp
mov
aas
push
outsb
cmp
test
bound
xchg
inc
les
daa
sub
dec
add
es
pop
jle
leave
inc
rorb
cli
lock
push
add
pop
and
ds
add
insb
dec
je
ret
cmp
lods
sbb
mov
movsl
cs
rol
add
fdiv
fmul
and
xchg
jmp
out
cmp
add
adc
rorb
aas
jb
je
add
dec
dec
sub
out
test
pusha
xchg
pop
xchg
subb
ljmp
nop
mov
mov
mov
lahf
mov
movsb
inc
shlb
mov
dec
pop
or
or
inc
adc
sbb
xchg
lret
cmp
cmp
inc
jae
jno
pop
lahf
pusha
lahf
push
js
or
mov
nop
clc
cwtl
repnz
pushf
rcr
adcb
pop
mov
clts
rol
aas
jns
pop
andl
xchg
mov
push
aam
lock
mov
pusha
add
add
shr
icebp
mov
sbb
pusha
mov
arpl
rolb
es
xchg
add
leave
pop
dec
aaa
xchg
daa
add
test
mov
xor
mov
daa
push
add
test
stc
dec
pop
sbb
aas
jae
jge
xchg
movsl
pop
scas
xchg
rol
jecxz
jmp
cmc
sub
push
mov
or
test
add
cmp
into
dec
jl
add
pop
cmp
cmp
scas
add
fcmovne
test
xchg
xor
jo
repz
pushf
mov
dec
add
test
and
and
or
dec
lcall
pop
cmp
add
loopne
mov
lret
or
sub
jb
sbb
cmp
and
xchg
fnstenv
repnz
xor
lock
add
hlt
clc
inc
xchg
les
jbe
js
jp
adc
add
and
iret
ret
fsubr
pop
faddl
unpckhps
call
enter
stc
out
fadds
xor
ret
mov
jl
fwait
xor
popf
cmp
jbe
stos
xor
inc
call
in
ja
add
push
pop
in
push
clc
add
cmp
cmp
daa
add
nop
sti
loope
jmp
stc
ja
mov
daa
push
cwtl
out
dec
int3
mov
leave
aam
lret
fsubrl
int
in
mov
mov
or
adc
lock
sbb
and
sub
test
out
shr
in
mov
jmp
mov
cmpsb
jle
mov
mov
mov
out
mov
mov
subb
push
shl
das
xor
bound
pop
sbb
jge
sub
xchg
movsl
pop
push
mov
xchg
mov
sbbb
test
lock
cmp
or
inc
add
mov
ret
cmp
ss
mov
add
xchg
mov
jno
add
dec
in
loopne
popa
push
push
hlt
jae
xchg
pop
xchg
ret
add
les
mov
in
call
pop
enter
lret
add
push
enter
adc
rorb
leave
mov
add
mov
push
aas
clc
add
sub
pmulhuw
pop
enter
xchg
cld
xor
fmuls
ficompl
fmul
add
and
pop
sbb
arpl
sub
gs
mov
xorb
add
imul
push
inc
xor
sbb
mov
and
dec
push
push
pop
pop
ret
lret
mov
xchg
jecxz
xchg
pop
add
mov
leave
mov
loopne
pop
add
fmulp
jmp
arpl
xchg
jp
pop
mov
add
jle
mov
add
sub
es
inc
enter
xchg
sbb
fadd
and
fiaddl
iret
stos
mov
add
xchg
sub
out
adc
js
mov
and
mov
ss
jne
add
fldt
add
daa
sub
outsb
fsubr
xchg
add
lock
insb
ss
pushf
pop
sbb
add
mov
dec
xor
pop
sbb
and
xchg
das
faddl
fnstsw
pop
scas
jle
sti
clc
add
mov
loope
jmp
fists
dec
pop
pop
mov
cmp
push
std
je
adc
dec
xor
js
xor
mov
push
add
lcall
out
ja
mov
mov
je
ljmp
xchg
xor
popa
xchg
gs
sub
sub
jp
add
addb
mov
and
jp
xorb
add
ds
test
push
add
cmp
mov
aaa
sar
mov
xor
pusha
add
test
pop
xor
mov
loope
jmp
cmpl
xchg
inc
cmp
add
cmp
bound
pop
xor
mov
jecxz
add
cmp
cmp
mov
pop
ja
dec
shll
loope
lds
hlt
add
daa
jl
inc
andb
aad
inc
ss
adc
jl
loopne
mov
jne
push
push
cld
adc
rcrb
sbb
fstps
in
jecxz
outsl
xor
jae
sti
sbb
xor
add
rcrl
add
xchg
fisttpl
add
jb,pn
aas
dec
push
and
aaa
adc
mov
ret
dec
rcrl
add
ja
out
xchg
sbb
cmp
iret
popf
sbb
add
lock
xchg
pop
ljmp
mov
js
inc
push
dec
mov
push
cwtl
and
add
ficomps
repnz
lock
jle
and
xor
bound
sub
cmp
add
cli
lcall
popf
sub
mov
add
cmp
mov
testb
fprem
dec
nop
pop
call
popl
out
in
mov
push
jno
leave
xor
hlt
dec
cmp
cmp
and
push
sbb
and
pop
addb
or
add
add
pusha
xor
inc
pop
xor
lret
orl
xchg
add
cmp
inc
lahf
add
ds
pop
xchg
call
ss
xchg
cmp
test
lret
loopne
getsec
sub
in
pop
test
dec
cmp
add
cmpsb
xchg
std
loope
and
das
pop
pop
fisttpll
insl
add
adc
sub
add
cmp
xchg
negl
xorb
dec
or
roll
jnp
xorb
mov
out
jge
loopne
cmp
add
sub
clts
xor
xchg
xor
mov
lret
pop
lds
sub
pop
scas
and
cmp
mov
cmp
clc
loop
inc
jp
sbb
cmp
es
add
mov
jne
jge
in
mov
add
xchg
push
dec
add
dec
sarb
ret
divps
out
xchg
pusha
add
inc
lods
xor
or
xchg
cwtl
nop
mov
subl
loopne
mov
test
je
sbb
xor
in
inc
and
es
xchg
push
sbbb
and
sbb
loopne
sbb
and
fisubrl
cmpsl
add
mov
iret
es
xorl
adcl
dec
xor
add
movsl
jp
test
int3
jno
fbstp
fadds
push
cmp
push
add
xor
mov
inc
cwtl
xor
jns
cmp
push
or
xor
ffree
es
ss
add
aaa
xchg
cmp
jne
enter
cmp
and
in
adc
test
inc
dec
xchg
push
sti
dec
push
lods
aad
test
nop
add
loopne
pushf
dec
mov
scas
add
mov
loope
pop
and
xor
xchg
add
dec
sbb
fsubs
add
sbb
xor
xchg
dec
sub
pop
icebp
add
popa
int3
mov
out
imul
mov
pop
in
popl
sub
lock
add
adc
das
addl
rcll
adc
aam
adc
mov
or
add
test
add
es
lahf
cli
add
mov
mov
xor
incb
cmp
mov
pop
mov
testb
outsb
dec
xchg
sbbb
ds
out
out
add
or
xor
cmovl
outsb
add
je
cs
mov
xchg
sub
lds
scas
adc
outsl
lock
in
cld
daa
cmp
pop
popf
cmpb
cmp
push
fsub
and
jne
add
mov
ds
push
popa
enter
cmp
push
xor
add
dec
add
pop
iret
pop
packsswb
loopew
outsl
sub
lahf
jg
adcl
mov
clc
mov
cld
frndint
jmp
xchg
icebp
dec
outsb
or
sbb
dec
jmp
jle
test
lahf
das
roll
jecxz
out
jmp
out
push
add
mov
adc
xor
xchg
and
add
lahf
cld
pop
add
inc
inc
xchg
add
jecxz
repnz
xor
xor
add
push
mov
out
orl
or
add
loope
jmp
aas
sub
cld
stc
cmp
jno
test
rcrl
pshufw
inc
add
add
xchg
or
add
and
inc
ret
outsb
roll
lock
loope
mov
mov
roll
test
repnz
push
jb
ss
inc
or
imul
cli
sbb
je
pop
das
loopne
jp
add
cli
mov
sub
loope
loopne
mov
push
xor
mov
mov
ret
bound
pop
dec
xchg
push
subl
jb
je
add
je
push
mov
add
sar
in
add
fdivl
rcll
push
add
daa
cmp
pop
dec
xor
push
mov
mov
push
addl
add
hlt
int
loopne
xor
add
daa
loope
sub
das
sub
test
inc
jns
add
push
jo
jle
enter
ja
lods
xchg
xchg
sub
movsb
and
clc
mov
or
cmp
inc
mov
add
lds
push
bound
cli
mov
into
jbe
add
ret
jns
add
jp
mov
add
cmp
add
inc
add
in
pop
add
xlat
push
call
mov
enter
or
mov
mov
je
jbe
pop
mov
pop
inc
cmp
add
add
out
and
cwtl
jo
sbb
mov
rclb
cmp
dec
dec
mov
pusha
and
call
adc
loopne
jb
test
divb
mov
pop
inc
add
insb
jo
jle
pop
jae
add
sti
daa
add
xchg
and
rorl
pop
cwtl
cmp
aam
add
insl
seto
rcrl
fstl
test
xor
in
lahf
add
sarb
aas
push
sub
inc
mov
movsb
xor
cmp
mov
fidivrl
stc
loopne
jb
dec
mov
add
sbbb
je
add
pop
outsl
add
loop
ret
aam
pop
cmc
dec
in
rcrl
out
jecxz
lock
or
push
addr16
roll
rcll
out
sbb
loopne
adc
dec
add
pop
jbe
push
add
jl
popf
sahf
add
push
iret
mov
in
add
out
in
ret
add
rcrb
in
call
mov
adc
pop
mov
jp
xchg
dec
imul
push
fmull
inc
add
es
add
jbe
cmpsl
xor
xor
push
dec
sub
sahf
out
in
jl
add
mov
test
shr
pop
inc
pop
std
add
sti
cmpsb
mov
push
fcoms
pop
jae
sarb
ficompl
xchg
ret
pop
jmp
and
stc
sub
add
add
push
xor
popf
adc
jne
or
hlt
or
cmp
jg
call
xchg
mov
in
jp
scas
mov
add
dec
lret
cmpb
js
pop
rol
inc
pushf
pop
je
add
popf
addl
leave
inc
js
in
push
cmp
outsl
sub
dec
setb
movsb
mov
mov
mov
cmp
pop
sub
mov
xchg
add
aam
adc
ret
mov
mov
loope
in
add
dec
or
and
adc
xor
insb
jns
pop
jp
xchg
dec
mov
aaa
in
add
push
in
arpl
jmp
or
imul
nop
cs
and
and
xlat
or
adc
aam
add
or
hlt
mov
jmp
add
jmp
adc
push
push
jle
and
cmp
mov
fimuls
push
or
leave
bound
hlt
jnp
and
movsl
add
cmp
cmp
mov
out
mov
jo
or
adc
xor
rol
adc
add
sbb
adc
add
adcl
pushf
inc
and
dec
adc
fwait
daa
add
out
in
rorb
cli
adc
mov
mov
shr
je
xchg
adc
loopne
nop
add
in
popa
sbb
repz
and
dec
and
add
or
nop
adc
daa
push
push
dec
lock
lahf
xchg
outsb
mov
jg
add
roll
mov
sbb
orl
xchg
popa
add
mov
testb
cld
push
clc
mov
sbb
sahf
flds
add
cmp
rolb
jbe
pop
jmp
clc
into
les
dec
loope,pn
mov
fcmovnbe
lods
mov
push
cmpb
cmpsl
push
push
inc
in
inc
das
add
loopne
frstor
clc
add
lods
add
test
add
jae
bound
jb
shrl
in
repnz
xor
add
add
or
push
stc
push
cs
into
pop
rorb
popa
mov
sbb
cmp
xchg
and
add
mov
add
cmp
cmp
int3
je
lock
adc
mov
xor
insb
loope
push
test
nop
or
sub
test
or
cmpsb
cmp
out
pop
fisttpl
add
sub
inc
inc
add
adc
popa
ret
sahf
sbb
mov
mov
insb
pushf
orb
or
cld
std
jbe
mov
xor
xor
dec
into
mov
shlb
call
xor
xor
ja
dec
jle
xchg
push
test
ret
loope
loope
cmp
push
js
cmp
mov
loopne
pop
xchg
xchg
add
cltd
mov
add
daa
jne
lods
add
mov
test
pusha
scas
lret
lock
mov
std
mov
arpl
xor
daa
loope
or
jle
sbb
add
scas
cmpsb
rcrb
addl
iret
mov
js
je
pop
or
push
dec
sub
dec
cmpsl
movsb
sbb
xchg
xchg
cli
loop
jo
adcl
pop
fs
rolb
add
add
add
rorb
push
adc
dec
cmp
mov
pop
int3
cmpsl
in
les
xchg
dec
mov
cwtl
lret
stc
fadds
je
idivl
add
mov
mov
add
ret
enter
xor
adc
push
cltd
hlt
lods
mov
mov
mov
adcl
sbb
or
cmp
ljmp
incl
daa
sub
in
mov
lret
mov
cmp
add
pop
pop
movsb
and
cmp
push
lcall
rolb
push
lock
fwait
add
rol
out
mov
cmp
and
pop
inc
js
pop
add
xor
imul
add
pop
test
stos
cltd
push
dec
push
add
leave
aas
fmul
out
add
les
adc
test
clc
das
add
xchg
pop
mov
orl
mov
add
xor
xchg
sahf
mov
jo
rorb
js
lock
ret
shrb
cwtl
sub
hlt
dec
add
xchg
dec
adc
cmc
cmp
add
sbb
cmp
lret
lahf
jmp
add
or
imul
pop
loopne
mov
lods
leave
mov
sbb
dec
ss
sarb
dec
sahf
stc
mov
xchg
lret
dec
dec
mov
xor
sar
and
adc
inc
cmp
cs
mov
mov
sahf
ficoms
mov
loopne
mov
adc
pop
add
cmp
adc
iret
cmp
add
mov
push
push
adcb
lds
xorl
imul
ret
add
lds
cmpsb
jnp
pmulhw
clc
jo
mov
and
add
sub
pop
adcb
add
shlb
mov
adc
push
jecxz
repnz
test
jmp
jl
push
cmpsl
mov
lret
rcl
cli
jnp
cs
add
lahf
xorb
mov
decl
shlb
roll
nop/reserved
imul
lock
frndint
loop
in
push
mov
fcmovbe
js
dec
add
mov
fldl
push
je
sbb
addl
jge
hlt
push
loopne
enter
jle
iret
pop
flds
in
daa
cmp
xor
pop
jp
or
mov
add
cmc
ret
sahf
jo
es
xor
push
inc
mov
out
jg
js
mov
ret
add
out
das
stc
xchg
or
push
sub
fcmovnu
push
add
xchg
xchg
dec
inc
mov
jae
loop
insb
xchg
scas
loopne
add
aam
pushf
add
shlb
xchg
add
push
enter
pop
cli
cs
cmp
adc
lahf
add
scas
fnstenv
mov
cli
sahf
add
push
dec
xchg
add
je
scas
add
mov
add
mov
or
dec
subb
fcoml
cmp
aas
lea
dec
loopne
add
mov
mov
or
insb
ss
push
cmp
test
mov
add
ret
bound
push
lahf
jb
add
and
mov
push
jle
pop
ficompl
add
shll
cmp
add
inc
shlb
sub
hlt
mov
push
push
fsubs
loopne
push
mov
call
and
pop
mov
inc
lds
add
mov
push
xchg
dec
dec
fcoms
add
clc
hlt
add
clc
jae
ja
pop
add
movsl
lret
nop
mov
add
sbb
sbb
sbbb
pusha
push
les
jo
outsb
xor
shr
dec
je
pop
aam
xchg
mov
add
jge
dec
negb
and
in
stc
lock
mov
lret
add
pop
ljmp
sub
add
in
loopne
je
ss
movsb
in
shlb
mov
int3
and
in
cli
push
jge
pop
push
add
pop
mov
mov
push
out
adc
in
cld
int3
add
push
mov
loopne
mov
push
xchg
test
in
leave
lock
clc
dec
add
sbb
or
jb
sbb
inc
sub
aas
xor
cmp
pop
inc
push
daa
dec
inc
push
sbb
stc
pop
sbbb
aas
mov
cs
and
mov
mov
mov
mov
stos
or
mov
hlt
pop
add
and
stos
dec
add
hlt
cli
les
cmp
sub
inc
das
dec
rcrl
push
xor
sub
shll
fmull
dec
or
jecxz
and
repnz
add
mov
shlb
cli
jle
subb
cmp
add
cmp
cmp
adc
inc
add
icebp
sbb
and
lret
add
push
cvttps2pi
pop
iret
pop
dec
pusha
shl
xlat
jle
xchg
jnp
add
cmp
mov
lods
add
pop
mov
aas
mov
sbbb
push
loop
lock
cmp
mov
fs
add
loop
hlt
dec
pop
and
add
lods
cmpb
fs
push
add
jo
movsl
add
nop
pusha
call
jmp
mov
xchg
push
nop
mov
ret
mov
add
sub
mov
mov
das
cs
jne
lea
daa
add
call
lods
fcompl
mov
lea
sub
enter
push
sub
mov
lea
inc
push
push
push
outsl
inc
stos
pushf
ss
push
cmp
xchg
push
call
enter
lock
sbb
movsb
icebp
push
and
xorb
jecxz
pop
lea
test
ja
loopne
or
pushf
add
arpl
add
or
add
sbb
adc
adc
call
orb
push
and
cmpsb
sub
jo
lods
add
loopne
popf
add
cwtl
or
or
je
or
xchg
rolb
cmp
test
inc
dec
mov
push
xchg
push
cwtl
cltd
push
shr
add
push
sub
popf
mov
adc
repnz
sub
xor
test
push
shlb
push
xlat
adc
push
mov
pusha
mov
aas
xor
loopne
add
je
js
lods
cmp
mov
jmp
jmp
sub
addl
ret
add
filds
inc
loopne
pop
pop
pop
stos
bound
dec
sub
add
stc
add
add
out
pop
add
adcb
mov
jp
or
pop
test
cmc
add
cmp
dec
mov
and
sub
je
call
add
mov
mov
pop
test
rorb
shll
cltd
lods
inc
add
shr
repnz
xor
add
stos
push
pop
add
subb
jecxz
jg
add
cli
sbb
and
out
add
sahf
sub
mov
bound
repnz
pusha
or
dec
adc
jno
push
push
jge
ret
in
add
xchg
jne
push
push
add
and
mov
inc
add
push
int3
repz
add
push
sbb
sbb
jle
lret
mov
or
add
inc
xorb
add
fiaddl
push
inc
sahf
add
add
call
jne
and
add
sub
xor
add
inc
cltd
dec
cmp
fdivrl
lret
mov
and
pop
rcll
rorb
add
add
sbb
add
aam
and
jmp
push
inc
movsb
jbe
add
sub
xorl
scas
cld
push
in
dec
call
adc
f2xm1
and
mov
xchg
push
cmp
ret
adc
andb
pop
mov
or
gs
pop
arpl
mov
push
roll
fwait
push
mov
add
jge
mov
jb
mov
xchg
les
pop
push
sbb
mov
sbb
sub
inc
xchg
sbb
pop
xor
jo
add
imul
or
orb
iret
mov
cmp
inc
std
ret
add
cld
sahf
dec
jmp
scas
pop
cmpb
pop
sub
shlb
pop
lods
push
inc
push
and
or
out
clc
repz
xorb
in
add
or
adc
movsb
dec
rolb
outsl
insl
clc
mov
inc
add
add
mov
sbb
cmp
pop
jge
and
bound
rolb
push
jbe
nop
int
jno
mov
inc
xchg
add
cmp
test
pusha
xchg
add
aad
push
les
add
cmc
leave
mov
lret
pop
js
mov
sub
popl
xorb
jnp
add
jg
jo
mov
pop
pop
repnz
outsl
xor
setle
adc
shll
mov
fstpt
inc
addl
dec
mov
cwtl
fisttpl
or
dec
test
cmp
sub
or
int
push
adc
stc
pusha
and
into
jmp
push
sub
add
jge
ljmp
roll
test
std
ficoml
add
repz
add
popf
cmp
daa
aas
test
lret
orb
xchg
and
enter
aad
add
ret
xchg
sub
jmp
mov
fcoml
mov
mov
out
addr16
add
cwtl
fdivrl
add
mov
lods
subb
add
sahf
sub
and
ficompl
pop
pop
test
mov
add
sub
call
sbb
popf
jbe
mov
ss
add
sub
jnp
adc
xchg
add
imul
add
mov
aas
mov
adc
sahf
or
sub
inc
and
inc
add
ret
jle
cmp
cmp
add
adc
roll
add
inc
add
and
inc
daa
jne
lock
sahf
pop
movsl
or
add
and
sti
fidivs
or
sbb
je
fdivrl
stos
mov
jo
rolb
roll
ja
cmp
jno
xor
cmp
jmp
add
mov
repnz
mov
std
ret
mov
loop
lcall
sbb
imul
cmp
aas
ja
add
lea
popa
add
decb
imul
orb
pop
cmp
out
aas
xchg
in
cmc
pop
add
ss
nop
shlb
add
stos
mov
or
add
dec
add
add
lds
outsl
mov
out
xlat
add
out
nop
fldl
pop
push
pop
or
movaps
int3
out
adcb
or
lret
xorb
stc
cmpsb
dec
mov
xor
in
dec
mov
xor
xor
mov
orb
add
shlb
sahf
push
popf
adc
jae
or
xor
or
bound
mov
or
je
push
sub
pop
pop
mov
add
mov
ljmp
mov
push
mov
imull
cmc
rep
pop
jmp
dec
shl
test
mov
lods
xor
push
jge
xor
push
add
or
inc
sbb
clc
jg
add
rcll
jge
add
add
adc
mov
sbb
incb
mov
cld
popa
lock
sbb
and
sysret
imul
cmp
dec
mov
inc
je
popa
out
push
sub
or
imul
sbb
jo
inc
js
loop
icebp
jae
cmpsl
inc
jne
mov
sub
sti
pop
ret
push
ja
jo
imul
dec
loopne
inc
push
and
push
cmp
loopne
cmp
ds
fs
scas
fwait
inc
jecxz
jg
fists
and
jne
fs
shl
bound
loop
mov
pop
jns
mov
and
or
divb
push
fs
mov
lock
rcrl
add
rorb
in
sub
add
icebp
addr16
out
std
stos
cmc
xor
dec
outsl
inc
shrl
js
jmp
push
daa
dec
outsl
std
je
push
cmp
test
cli
cwtl
add
add
add
add
push
jg
xchg
inc
insl
inc
mov
mov
aas
xor
rorb
out
inc
push
call
xchg
imul
pop
ss
mov
leave
out
sarb
jno
push
dec
int3
rcll
bound
jnp
add
std
jns
out
imul
mov
add
inc
jecxz
cmp
lods
or
clc
sahf
adc
daa
mov
daa
jo
jae
sahf
fdivrs
out
lock
mov
push
jb,pt
aam
cmp
xor
dec
pop
aas
stos
or
push
roll
iret
adcb
xor
jmp
push
xor
jl
shll
adc
imul
or
dec
push
sub
pusha
sbb
das
cmp
jae
push
aad
mov
cwtl
repnz
adc
cmp
hlt
push
push
add
mov
mov
mov
stos
dec
pop
test
ret
push
jp
js
pop
pop
dec
stc
mov
jge
insb
movsl
loop
or
cmp
pop
call
push
inc
adc
lds
pop
mov
or
xor
cmp
sbbb
xor
jge
dec
sbb
mov
aad
dec
ds
mov
cwtl
fldcw
movsb
mov
jge
fadds
nop
jb
xor
or
clc
inc
xor
sbb
xchg
inc
adc
nop
add
mov
ds
mov
jp
lcall
jnp
outsl
add
into
mov
sbb
inc
mov
mov
into
or
push
add
mov
xor
fisubl
cmp
sbbb
mov
push
cmp
pusha
cld
rolb
scas
mov
mov
push
aam
rcl
adc
inc
mov
xor
adc
pop
idiv
fstpt
and
and
pushl
mov
cmp
test
and
cmp
mov
sbb
fldcw
pop
jl
xchg
loopne
add
outsb
push
fisubl
pop
mov
je
inc
push
dec
xchg
mov
leave
ficoml
pop
push
lods
mov
orb
data16
pop
jecxz
and
dec
mov
push
pop
dec
sbb
xor
push
push
or
or
mov
lea
insb
fisubrs
jb
cli
cwtl
jae
sub
loopne
and
popf
xchg
dec
mov
adc
data16
orb
das
adc
mov
lret
test
outsb
jae
mov
lods
cli
push
out
push
movsl
pop
push
mov
gs
mov
cmp
imul
movsb
jb
and
scas
and
leave
negb
in
mov
xor
mov
sbb
lcall
push
iret
jo
cmp
insl
dec
mov
sbb
sar
outsb
jnp
nop
mov
mov
lret
xchg
lahf
fwait
subb
leave
push
das
inc
inc
dec
lods
int
fsub
pop
push
adc
mov
jbe
fisubrl
cmp
fcompp
and
pop
mov
jg
xchg
movsb
shll
fisttps
mov
pop
push
inc
or
mov
shlb
jns
insb
ds
xchg
push
push
sub
insl
fadd
pop
pop
inc
leave
pop
jg
in
xchg
sti
mull
jo
xor
je
push
lds
clc
mov
sub
mov
sbb
push
cmc
sbb
push
dec
lcall
dec
cmc
and
dec
sti
mov
pop
outsb
inc
pop
mov
sar
inc
call
fnstsw
loopne
aaa
ljmp
ja
mov
loop
inc
in
enter
jbe
int
and
mov
push
jle
mov
popf
inc
mov
sbb
inc
jmp
lods
add
dec
mov
mov
xor
inc
mov
cmp
push
xor
addr16
push
fs
mov
inc
in
cmp
mov
popa
mov
cmp
mov
jg
xchg
pop
stc
scas
and
push
xchg
sbb
push
movsb
push
call
sub
pop
std
jge
or
jbe
shrb
in
pop
or
hlt
push
in
xchg
cwtl
mov
sbb
gs
arpl
mov
jb
pop
out
fmuls
loopne
jge
mov
or
inc
dec
xchg
outsl
add
fs
sti
xchg
sub
jle
or
arpl
cld
mov
xchg
ss
inc
mov
daa
inc
into
sbb
shll
insl
in
loopne
mov
insb
ja
out
fmuls
sarb
les
andl
decb
push
dec
daa
ss
mov
or
sub
mov
xor
push
push
pop
orb
imul
sbb
popa
jno
pcmpgtb
or
push
jnp
or
pop
or
mov
pop
dec
and
add
cmp
pop
or
in
pop
dec
lods
imul
stos
call
movl
out
mov
adc
add
or
in
js
aam
jnp
mov
dec
fsubrl
lea
sbb
lea
pop
loope
jae
and
insl
push
pop
cmp
movsb
dec
shll
or
cmc
cmpb
add
xorb
pusha
loop
insb
pop
ja
push
pop
dec
cmp
sub
insb
mov
ja
lock
enter
icebp
adc
das
incb
xchg
dec
xchg
push
in
stc
add
dec
push
aas
jne
jecxz
stos
aam
pop
cmp
xchg
xchg
xchg
xchg
inc
and
movsb
notl
pop
sbb
or
xchg
lods
out
add
inc
cmpsl
xchg
les
push
das
movsl
sbb
fistpl
imul
mov
xor
or
sbb
out
in
jb
inc
cmp
add
mov
mov
fmulp
dec
add
mov
inc
dec
ss
rcl
lods
sub
ljmp
into
xchg
or
pop
inc
xlat
mov
call
push
jbe
and
popl
mov
movsl
add
jmp
add
inc
add
xchg
add
pushf
fldl
pop
repz
cmc
push
push
js
jp
mov
icebp
mov
shll
push
shll
mov
cmc
add
push
popl
int3
mov
stos
jbe
add
fdivrs
cmpl
sub
int3
cli
stos
cmp
inc
xor
out
xchg
subb
jne
loope
mov
cmpb
stos
or
mov
std
sbb
mov
fildll
cltd
sbb
in
and
pop
dec
inc
xchg
dec
cmp
lret
push
dec
xchg
push
inc
into
sti
movsl
or
adc
cmp
push
jno
aaa
or
mov
adc
aaa
cli
adc
je
pop
jmp
mov
push
inc
push
jmp
dec
mov
js
test
sub
fs
jle
dec
cwtl
outsl
mov
pusha
je
outsl
fidivrs
shll
out
cld
les
inc
popf
inc
sbb
xchg
dec
mov
xchg
nop
jecxz
mov
cmp
test
jns
xchg
sbb
xor
add
or
rclb
decl
push
imul
xchg
pop
dec
ret
jbe
jbe
xor
pop
pop
mov
out
inc
arpl
sarb
mov
or
push
lds
negb
mov
xchg
arpl
roll
push
sub
pop
aaa
nop
sub
cmp
or
xchg
nop
xchg
push
int3
xchg
insl
mov
xchg
cmp
dec
push
dec
adc
lcall
add
xor
pushf
cmp
addl
clc
mov
push
jbe
or
enter
cmpsb
shr
push
repz
gs
lods
jo
or
bound
jecxz
inc
ss
es
gs
in
cmpsb
lds
xchg
std
add
adc
mov
mov
mov
popf
xchg
nop
push
adc
mov
cmpb
mov
loope,pt
jns
mov
fdivl
xor
loope
mov
and
add
xlat
aaa
xlat
je
jp
gs
mov
push
mov
xchg
jl
cmp
xchg
cmp
xchg
sbb
outsb
mov
loop
jne
rcr
movsl
sub
push
inc
sub
lea
lea
mov
fs
aad
ret
dec
es
imul
test
sub
xor
mov
shlb
std
andl
jb
mov
pop
jecxz
xor
pop
popf
mov
gs
dec
dec
jo
and
std
dec
push
imul
iret
jle
les
ret
pop
sub
add
pop
push
inc
push
pop
push
cmp
xchg
shlb
push
shl
jno
pushl
or
adc
pop
lret
push
or
pushf
sti
arpl
jns
pop
movsl
fistpl
cmp
xor
addb
adc
fdivl
mov
xchg
or
pop
outsb
iret
fucomip
mov
lret
repnz
mov
and
popa
call
out
push
inc
imul
rcrl
push
rorb
jge
jle
test
ret
nop
stos
mov
sub
test
lret
cmpsl
lods
or
mov
test
push
enter
lret
lret
sub
fisttps
out
lods
push
les
add
repz
sbb
mov
xor
mov
cmp
sub
rorb
pop
lods
mov
scas
and
test
test
push
cmp
dec
sub
inc
ret
mov
into
adc
fisttps
sub
pop
inc
push
adc
add
outsb
jnp
sbb
lahf
mov
sub
jne
cmc
and
adc
in
mov
lcall
fsubrl
jp
pop
mov
in
dec
mov
data16
stos
sub
into
cmc
lret
imul
dec
pop
pop
cmp
lock
decl
xchg
add
int
data16
mov
cmpsb
test
outsb
fidivs
sub
or
push
xchg
ljmp
jl
stos
enter
or
xchg
fwait
pop
xor
fdivl
jge
cltd
aas
pushf
mov
loope
push
repz
and
xchg
fs
cmpsb
fists
pop
inc
lret
nop
movsb
repz
gs
lret
popf
into
xorl
pop
icebp
push
lock
fwait
mov
in
mov
ss
popf
push
sub
icebp
add
lahf
adc
test
fisubl
adc
pop
cs
and
ds
fisubrs
inc
je
imul
push
adc
mov
jl
jne
pop
mov
into
outsb
and
mov
stos
sti
into
pop
mov
lahf
ret
stos
mov
lret
mov
push
push
inc
insl
mov
inc
xor
sbb
fmul
sbb
hlt
nop
and
and
adc
test
in
iret
mov
pop
inc
daa
fiadds
jmp
cwtl
mov
ffreep
das
je
fwait
inc
stc
add
cld
mov
fsubs
dec
fisubrs
dec
out
in
adc
inc
inc
and
clc
push
mov
mov
cmpsb
and
sub
cmp
pop
xchg
ja
popa
xorl
mov
int3
mov
dec
inc
inc
test
std
in
add
lods
xchg
stos
fildl
pop
cwtl
xor
inc
mov
mov
xor
pop
outsl
dec
test
mov
xchg
mul
mov
or
push
cmc
mov
rol
sbb
push
adc
cmp
xchg
xchg
xchg
xor
jp
dec
mov
jne
mov
xor
push
jns
inc
push
xchg
cs
mov
add
xor
jl
call
es
dec
sub
imul
pushf
movsl
add
inc
dec
jnp
stos
insb
jmp
popf
test
popf
xor
int
pop
fld
pop
lcall
push
xchg
mov
insb
mov
ljmp
mov
jo
sti
push
aam
xchg
push
je
sub
mov
shrl
mov
push
mov
xor
ja
and
xor
imul
adc
negl
pop
inc
insb
and
je
sbb
mov
add
pop
cmp
sub
mov
lock
dec
mov
xchg
mov
dec
pop
vcomiss
jp
sub
jp
jbe,pt
adc
ret
cli
mov
mov
jae
push
das
jb
mov
cmpsl
mov
je
xor
xchg
jl
das
mov
and
sbb
mov
push
les
mov
out
in
ljmp
fwait
xor
xor
sub
rcl
inc
ret
add
js
repnz
lret
aam
js
sbb
push
adc
pop
pop
xchg
aam
lahf
or
xor
xchg
pop
rcll
pop
aam
sahf
scas
out
cmpsb
call
xchg
test
pop
test
es
into
stos
popf
ret
cmpsb
jns
sti
mov
inc
pop
cmp
cmpsl
fsubrl
sbb
lahf
aad
call
stos
xor
inc
pop
xchg
or
test
mov
xchg
xchg
ss
shlb
test
aaa
or
cwtl
xchg
cs
out
sbb
adc
inc
push
scas
insl
inc
xchg
out
lods
mov
test
mov
pop
push
jle
in
mov
cli
pusha
sub
xor
test
or
or
and
lock
jne
cmpsl
mov
jecxz
pop
loop
imul
dec
mov
outsb
mov
lods
sub
pushf
je
aad
loop
outsb
adcl
dec
fwait
scas
hlt
mov
fisubrs
sbb
std
mov
mov
mov
sbb
dec
push
pop
insb
in
sbb
inc
mov
xor
or
stos
xlat
and
adc
repz
lcall
xor
daa
mov
rcr
xor
mov
jb
js
rclb
lcall
mov
aam
mov
fcoms
lret
popl
pop
out
xchg
mov
lea
jno
cmp
fwait
inc
stos
inc
popl
or
lcall
fwait
push
adc
out
jge
inc
adc
in
fistps
push
int
fidivs
icebp
mov
xor
mov
outsl
adc
or
popf
adc
into
and
mov
adc
cmpsl
ret
xor
xor
inc
repz
scas
pop
mov
pop
lods
mov
fcompl
mov
and
push
inc
push
xchg
or
int3
and
lea
inc
cmpsb
xchg
addr16
jns
push
lcall
inc
sahf
dec
cmp
insb
lcall
mov
ret
rcl
add
addl
decb
insl
addr16
jecxz
mov
cmpsb
in
movsb
mov
sub
in
xchg
push
mov
ss
ret
lret
fmul
lcall
ljmp
sub
cs
or
in
das
bound
adc
roll
cmpb
repz
movsl
pop
test
mov
jb
pop
mov
pop
adc
sarl
push
cs
cmc
cld
je
and
sbb
push
out
add
shrl
mov
rolb
xchg
je
jno
es
outsl
test
adc
cltd
sbb
cltd
xchg
xor
in
or
mov
inc
push
cmp
aas
cmpsb
andb
and
fdivrs
dec
or
jle
ljmp
mov
mov
adc
push
cmpsb
leave
and
mov
in
jecxz
orb
jle
and
add
dec
dec
aam
push
cmp
stc
in
sarb
lock
sbb
cmpsl
ljmp
js
jb
mov
bt
mov
shr
sub
dec
test
mov
mov
call
lods
fstps
xor
repnz
loopne
cld
mov
xchg
mov
and
dec
cmp
stc
jns
jmp
xchg
sahf
or
jp
pop
dec
repnz
subb
pop
cli
cli
pop
cmp
mov
rcr
andl
dec
mov
mov
sbb
xor
sbb
das
sbb
xor
rol
xorb
icebp
mov
xor
lcall
mov
cmp
movsb
arpl
shrb
cs
pop
das
and
fcom
ljmp
dec
pop
lret
push
pop
ja
mov
call
andl
andb
mov
xor
cli
inc
push
push
ror
inc
xchg
and
test
std
fdivrp
add
pop
lods
fsubrs
sarb
test
xor
pop
in
in
mov
mov
and
push
inc
push
fdiv
mov
pop
ret
adc
jne
mov
enter
mov
dec
cmp
addb
dec
popa
jbe
addr16
xchg
addr16
dec
xchg
daa
xor
cmp
jnp
push
bound
mov
insb
inc
mov
ds
pop
aad
sub
es
adc
icebp
or
xchg
cmp
xorl
loope
popf
cli
dec
fidivl
ficomps
xlat
pop
in
sub
jo
clc
call
xchg
js
test
mov
xlat
add
call
outsl
or
jl
push
mov
ret
sbb
sbbb
push
push
insb
inc
iret
fstps
ret
lcall
push
in
jecxz
and
in
loop
jae
adc
addb
pop
out
dec
imul
mov
out
lret
cmc
push
in
push
fwait
dec
icebp
mov
fisttpl
nop
mov
sbb
adc
int3
sbb
sbb
cs
fwait
and
mov
repnz
sbb
pop
fs
hlt
fildl
in
test
cmpsb
hlt
sbb
jmp
pop
xor
loope
cmpsb
out
push
dec
daa
push
cmp
addr16
add
adc
ljmp
cmpsl
push
addr16
or
lods
push
stos
lcall
mov
sub
sbb
pushl
fwait
push
and
dec
ja
adc
lods
jecxz
mov
popf
stos
add
jle
mov
mov
ficomps
rcrl
jnp
cmpsl
adc
iret
or
xchg
dec
clc
addr16
sbb
mov
and
jns
pop
mov
in
insl
ja
das
cmp
insl
fstpl
or
and
dec
or
pop
jp
jnp
nop
das
nop
les
cmp
and
xchg
out
cmp
mov
lret
out
mov
adc
and
jno
div
jne
jmp
fstl
cmc
xchg
mov
fcoml
imul
fbstp
outsb
jle
push
loop
sub
je
push
or
xor
mov
jecxz
or
stos
movsb
dec
inc
enter
add
add
cmp
outsl
mov
data16
insl
test
cli
dec
leave
and
test
loope
es
sub
sahf
into
mov
std
cmpsl
and
lahf
cld
lods
fstpl
popa
fisttps
in
mov
int
jg
mov
hlt
xchg
pop
pop
into
call
jb
in
pop
int3
rorl
mov
or
aad
out
cli
pop
mov
cmpsb
mov
sub
sub
pop
mov
adc
or
push
lods
and
adc
add
cs
daa
call
ja
fiadds
shrl
mov
xor
jno
xchg
sahf
daa
xor
push
mov
rcrl
loop
xchg
sub
clc
fdivl
int3
xchg
jnp
and
mov
test
cmpsb
scas
mov
push
add
adc
and
fidivrl
stos
pop
scas
xor
and
addb
jmp
cltd
gs
js
cmp
mov
sub
or
jl
and
cli
sub
orb
stos
in
lods
or
cmpb
cmc
loope
jo
fwait
inc
jecxz
pusha
sub
test
jle
scas
adc
repz
scas
in
mov
outsl
daa
pop
into
outsb
pop
jmp
repz
lahf
in
mov
cwtl
mov
cmpsl
incb
imul
lods
push
push
setnp
jnp
ret
negb
pop
mov
push
sbb
scas
dec
adc
jns
dec
jp
xor
sarb
xor
fs
inc
loop
xchg
xchg
dec
dec
inc
ds
xlat
inc
add
testb
icebp
pop
lcall
jp
or
or
addr16
in
test
mov
out
ficompl
mov
das
cmp
gs
mov
or
add
cli
inc
lret
pop
ljmp
loopne
and
mov
dec
lea
cltd
dec
mov
mov
shl
add
scas
leave
scas
mov
popa
rorb
leave
outsb
cltd
push
push
test
pop
dec
shll
in
mov
mov
mov
push
lret
jl
and
mov
sbb
sbb
sbb
outsb
mov
xor
adc
jno
jne
sub
and
adc
inc
ror
subb
jns
mov
subl
or
inc
or
roll
adc
xor
adc
sub
jno
sbb
lea
pop
addl
cmp
sbb
rorl
gs
pop
pusha
mov
or
mov
gs
adc
jle
or
loopne
lds
xor
das
cmp
adc
cli
and
inc
mov
xchg
pop
mov
arpl
loope
test
xor
negb
jge
js
jnp
xchg
dec
add
call
sub
in
push
xchg
or
xchg
cltd
ja
push
xchg
push
fisubl
ljmp
shlb
or
popf
data16
pop
outsb
ret
icebp
cs
sub
aam
inc
repz
popa
xchg
pop
and
push
outsl
and
adc
jmp
ds
push
jge
dec
out
mov
bnd
out
iret
xor
adc
jns
xchg
cli
mov
pusha
lods
clc
and
mov
sbb
into
pop
cs
fsubrp
sbbl
mov
stc
sbb
sbb
sti
inc
jmp
xchg
lds
add
movsb
movsl
ja
test
jl
pop
andl
adc
iret
orl
push
xchg
push
in
popa
ss
bound
fwait
jp
shll
pop
pop
jnp
and
lret
xchg
push
stos
leave
and
mov
adc
mov
cmp
insl
inc
repnz
mov
rorl
loopne
push
out
mov
xchg
xchg
sub
test
dec
jmp
jmp
cmp
jo
mov
call
mov
push
cwtl
adc
or
xchg
push
cwtl
mov
div
xor
dec
faddl
scas
inc
scas
shlb
outsb
sbb
ss
cltd
or
pop
mov
aad
bound
sahf
inc
cmpsl
or
mov
imul
or
sarl
jle
push
xor
or
addr16
push
mov
and
xor
inc
and
push
sahf
in
repz
dec
mov
mov
les
cltd
lea
fcomps
enter
imul
test
push
cmp
iret
test
push
xchg
push
cmp
addr16
aas
std
mov
or
jbe
pop
iret
push
andb
xor
xchg
mov
stos
daa
lret
cmp
and
iret
add
sub
xor
inc
hlt
mov
add
xchg
mov
push
jmp
sub
adc
mov
xor
aad
xchg
sbb
adc
mov
xchg
jae
pop
js
dec
mov
mov
js
inc
out
xchg
dec
and
sbb
add
loopne
cmp
aas
js
imul
pop
jg
clc
add
jmp
mov
std
or
mov
jle
pop
sub
int3
push
imulb
mov
sbb
dec
test
push
dec
call
in
pusha
sub
sbb
lods
repnz
adc
add
jmp
mov
repnz
dec
lret
fstps
rorb
mov
das
mov
inc
std
push
jmp
daa
rcrb
rorl
aas
loope
adc
jbe
cli
mov
loopne
mov
mov
in
sub
cmp
iret
sub
xor
push
scas
or
and
in
fcomps
jb
imul
jmp
push
dec
imul
stos
lock
mov
popf
push
es
xchg
test
sarl
jle
in
push
mov
sub
xor
xchg
push
pop
test
mov
xchg
mov
or
ficoms
pop
push
out
cs
xlat
addl
jo
fs
pusha
push
popf
cli
mov
pop
cltd
push
lcall
repz
popf
adc
shrb
aas
or
mov
rorb
xchg
push
xchg
rcll
ja
mov
insl
rorb
xchg
lret
sbb
mov
loope
loope
ja
inc
mov
aaa
xchg
inc
sbb
push
adc
or
mov
push
xchg
js
jne
mov
dec
push
pop
adc
bound
xchg
adc
and
mov
inc
leave
mov
xor
out
andb
call
mov
pop
fsubl
sahf
pop
dec
jns
bound
mov
in
call
fwait
xor
subl
test
adc
lret
lock
xchg
sub
test
add
and
adc
cmpsl
aad
pop
xchg
lock
sti
pop
mov
inc
cmp
lea
test
test
mov
lock
mov
jne
sbbb
inc
mov
add
aam
and
dec
insb
and
loopne
mov
dec
out
jae
dec
xchg
cmp
aaa
jl
fdivl
adc
insl
cs
aad
repz
mov
rolb
int
loopne
fcmovu
mulb
fstps
clc
int
sbb
fistl
aam
sub
mov
or
psllq
xor
shlb
sahf
or
fwait
push
add
loopne
ret
fsubrl
push
cmp
or
push
out
jne
fwait
adc
adc
pop
test
rcl
add
dec
in
mov
xor
ja
dec
push
sahf
fldl
jno
push
aaa
cld
test
mov
jecxz
jg
mov
jae
cld
loop
lret
or
aas
hlt
shlb
mov
movsl
xor
mov
iret
push
sub
adc
in
adc
xchg
mov
inc
cmpsb
gs
enter
xchg
dec
xchg
mov
ret
fcomp
repnz
and
mov
pop
dec
incl
push
js
ljmp
cmp
mov
jge
lock
mov
cmp
lret
mov
outsl
iret
test
and
add
dec
adc
pop
push
dec
xor
and
add
push
stos
xchg
and
insl
push
out
and
mov
fucomip
es
sahf
jmp
mov
or
call
dec
add
imul
dec
xchg
mov
out
out
add
adc
into
test
mov
dec
adc
mov
fcmovnu
cmpsb
repnz
out
jae
mov
ret
imul
cld
push
mov
movsl
mov
add
xchg
lret
dec
ffree
test
cmp
xchg
ljmp
inc
and
mov
out
imul
jge
dec
push
fwait
sub
aaa
fsubs
mov
ret
clc
lds
pop
and
lds
jl
xchg
pop
jmp
mov
fisubrs
mov
xor
sti
jno
inc
pop
push
push
adc
clc
out
and
dec
mov
xchg
sbb
test
fcmovb
aad
mov
xor
add
out
xchg
jbe
cmpsb
pop
mov
js
push
cltd
out
outsl
pop
lret
mov
sub
in
lods
lret
addr16
dec
mov
pop
cli
nop
mov
mov
outsb
sub
xchg
sub
jmp
or
pop
enter
pop
and
push
cmp
pop
mov
jle
add
and
das
jge
jl
lret
dec
subl
push
stos
adc
mov
aam
sub
shr
sbb
push
popa
hlt
push
rcrb
into
jae
cmp
adc
pop
lods
enter
mov
enter
adc
and
rcl
xor
mov
loope
dec
and
push
fidivl
insb
jb
outsl
dec
fsubr
dec
sub
lock
addr16
daa
fstp
arpl
pop
pop
dec
lock
push
mov
mov
mov
subl
frstor
dec
iret
inc
test
or
stc
fwait
rcll
aaa
jle
inc
sarl
sub
aam
add
jmp
lret
mov
adc
and
xor
ret
rcll
and
or
stos
movsl
adc
inc
jae
push
push
xchg
push
sahf
test
clc
rorl
sub
in
ja
loop
lcall
xor
push
lret
outsl
pushf
and
mov
int3
test
jo
xchg
std
xchg
fldt
sbb
add
mov
jnp
loope
insl
jbe
stos
imul
xor
outsb
ret
pop
adc
std
dec
lods
pop
cli
mov
xor
adc
fimull
stos
and
adc
arpl
mov
movsb
rcll
enter
ds
sbb
fld
or
inc
imul
fildl
mov
jb
jbe
push
add
fmuls
jno
cltd
xchg
sbb
sarb
push
jo
imul
inc
push
imul
scas
bound
mov
sbb
nop
lret
sbb
out
jp
js
mov
mov
push
adc
xchg
push
cltd
pop
es
push
out
mov
xchg
mov
push
add
sub
lds
lret
out
push
pop
fwait
push
out
stos
inc
and
in
xor
test
and
and
sub
jo
jg
divb
mov
sahf
ret
mov
mov
out
and
fildll
cmpsl
loopne
sub
xchg
and
xor
int
nop
sub
in
sbb
cmp
xor
jp
sub
adcl
hlt
cwtl
xor
ja
push
mov
inc
xchg
loopne
lods
push
jp
push
adc
inc
bound
in
add
push
and
neg
lea
sbb
pusha
loopne
jp
xor
mov
lock
push
fs
add
dec
and
pusha
cmpsl
jns
push
mov
add
push
loop
mov
jae
mov
sbb
add
xor
daa
mov
jo
mov
pop
push
fwait
fwait
fs
loopne
adc
lahf
xor
mov
movsl
jnp
gs
std
mov
popf
shrl
mov
test
dec
stc
aaa
aas
xchg
js
aad
xlat
mov
stos
movsb
subl
jecxz
mov
popa
mov
fwait
scas
sub
scas
es
iret
inc
sahf
push
xchg
inc
cmp
adc
ficoms
jo
dec
add
inc
rorl
sahf
jo
loope
and
sub
lds
dec
mov
xlat
pushf
xor
pop
mov
fisubrs
pop
inc
jns
stos
mov
push
pusha
dec
dec
nop
jbe
cmp
aad
mov
sbb
stos
lret
movsl
xor
loop
add
sbb
das
mov
sub
adc
ljmp
out
les
aad
push
and
insl
dec
fisubl
jae
fistpl
adc
cmpsl
sub
jnp
dec
shl
dec
jmp
idivl
push
jecxz
ss
cmp
fcoms
sahf
and
ss
cmp
lret
sub
popa
movsl
jecxz
push
fstpt
cmp
imul
cmpsb
xor
push
jne
dec
je
inc
xorl
xchg
inc
mov
es
pop
pop
pop
and
pop
fs
jo
add
das
sti
push
xchg
sub
cmp
sahf
xor
out
add
mov
ds
das
inc
inc
lret
inc
dec
mov
prefetch
fisubs
inc
adc
je
aam
xchg
or
cwtl
xchg
pop
pop
shrb
cmp
ret
sub
and
data16
popf
sbb
xor
gs
dec
lret
inc
xchg
xchg
pop
jecxz
repz
lock
jo
inc
adc
lods
sbb
imul
stc
jl
iret
jmp
dec
outsl
jae
inc
std
daa
pop
jle
aam
pop
push
test
fidivs
and
loop
xchg
add
push
inc
push
lcall
div
sbb
cld
fmull
jl
xchg
or
ss
xchg
mov
sub
sub
pop
scas
push
jbe
out
push
movsb
mov
into
mov
push
xchg
jnp
push
xor
call
cmp
cmpsl
sahf
je
adc
adc
adc
lods
fwait
rcrl
jmp
sbb
arpl
cmp
jbe
sub
sbb
jbe
mov
idivl
push
cli
loop
pop
bound
xchg
and
and
jb
or
inc
sahf
andl
sub
push
pop
hlt
ljmp
jb
loop
bound
adc
lods
bound
in
fidivs
mov
sbb
add
cmpsl
pop
add
mov
jl
mov
cmpsb
je
mov
leave
ds
lea
sbb
dec
test
sbb
rsqrtps
in
mov
in
xchg
mov
in
arpl
pop
or
push
addr16
fsubrs
insl
in
pop
negl
cld
sbb
sbb
cmp
sbb
cmpsl
add
in
xchg
mov
clc
rcr
repnz
js
in
fwait
cmp
lds
xchg
lea
sub
pop
lret
out
inc
sub
test
leave
gs
movsb
imul
movsl
ret
test
xchg
cmpsl
dec
fdivl
mov
cmp
pop
mov
leave
daa
inc
mov
xchg
es
push
into
mov
dec
in
pop
aas
sbb
add
cmp
jb
aas
cmc
in
pop
jno
mov
push
pusha
add
sbbb
inc
inc
js
or
aas
pushl
push
mov
dec
mov
mov
aaa
jo
fwait
inc
sub
test
sub
scas
mov
push
mov
xor
mov
in
ss
nop
jno
dec
xlat
das
xorl
test
adc
mov
fsubs
push
jbe
loop
push
add
mov
out
test
adc
test
xor
mov
xchg
mov
or
push
cmp
xchg
mov
lds
pop
push
mov
fisubrs
shll
sub
dec
sbb
outsb
es
sbbb
xchg
cmp
call
cmp
xchg
jge
or
sub
push
jb
adc
cmp
push
jo
sbbb
sub
pop
loop
test
xchg
cmp
std
stos
pop
push
adc
cmp
pop
imulb
mov
in
popl
cwtl
daa
pop
mull
cmp
ja
clc
push
stos
cli
mov
mov
movsb
loopne
addr16
cmp
push
jae
bound
sub
inc
rcl
push
or
sbb
mov
mov
mov
and
mov
push
mov
int
stc
scas
pop
fs
push
and
js
push
shrb
js
inc
dec
lcall
or
sub
outsl
mov
adc
sbb
jl
push
mov
cmp
push
cmp
adc
cmpsl
sub
xchg
inc
mov
or
arpl
add
scas
mov
jecxz
and
shl
bound
pop
cmpsb
gs
ss
imul
int3
pandn
fcomps
popl
divb
cmp
jns
fwait
aaa
jecxz
movsl
xchg
or
pop
jp
and
add
cmp
js
jg
mov
fld
sub
xor
incb
jge
lods
mov
mov
inc
test
jp
ret
add
jecxz
les
xchg
in
ret
popf
mov
std
out
cli
ret
lret
mov
add
mov
dec
push
push
inc
dec
mov
in
xor
cmp
cmp
mov
mov
popa
push
mov
outsb
out
mov
jle
add
mov
test
fcoms
call
or
bnd
mov
dec
arpl
xor
rclb
pop
dec
inc
sbb
aad
or
psubusw
out
or
scas
push
shlb
mov
cmc
repnz
mov
fdivrl
hlt
movl
out
sub
into
mov
daa
inc
or
xor
ljmp
adc
xchg
hlt
addr16
or
data16
xlat
dec
out
fwait
sub
dec
scas
lcall
push
or
in
ret
dec
mov
int3
mov
jle
sub
pop
inc
rolb
push
test
mov
xchg
lock
or
lahf
cmp
cmp
jecxz
sbb
or
int3
push
mov
fwait
mov
mov
inc
shrl
cwtl
inc
adc
ljmp
out
jp
xchg
jbe
repnz
inc
rep
popf
movsb
dec
add
mov
jae
fwait
mov
aas
andb
inc
inc
fimuls
cld
loopne
jns
add
fnsave
xchg
cmp
jge
test
pop
aas
cmpsb
pop
cmpb
cmp
pop
dec
xchg
pop
pushf
loopne
cli
icebp
cs
push
jno
cmp
fsubr
int
dec
sahf
sti
lret
mov
xchg
inc
pop
fisubl
sub
adc
ja
pop
cmp
cltd
loopne
popa
dec
lahf
add
jg
std
cmp
ret
push
jle
jge
dec
sbb
ret
repz
dec
mov
dec
repz
bound
testl
fildl
pop
xchg
sub
mov
dec
pop
aaa
and
pop
adc
and
cmp
jmp
cmp
mov
adc
xlat
xchg
push
push
xor
mov
adc
push
lods
inc
sbb
loope
mov
clc
out
nop
orb
loope
dec
push
rcll
jecxz
mov
push
jge
inc
pop
jmp
add
mov
aaa
dec
mov
cwtl
xor
test
test
add
xor
aam
imul
sarl
mov
mov
pushf
stos
mov
out
hlt
add
xorl
lods
sub
push
cmpsb
mov
add
in
insl
cli
in
cmp
jl
adc
mov
pushf
xchg
mov
stos
dec
int3
leave
and
fldl
or
cmp
mov
dec
dec
add
jo
aad
push
and
and
push
inc
mov
adcb
push
lret
jmp
or
pop
sbb
or
mov
aad
dec
cmp
lcall
in
mov
pushf
dec
xchg
jg
imul
adc
inc
jnp
call
fwait
push
cld
mov
or
inc
mov
jae
pushf
ret
inc
loopne
sarb
xchg
add
lret
cmp
nop
hlt
inc
cmp
rcr
adc
aaa
jg
test
fcmovbe
lock
inc
nop
xchg
test
cmp
jecxz
sti
shll
or
adcl
push
lahf
imul
inc
cltd
fisttpl
repz
add
cmp
dec
mov
test
pop
fs
pop
pop
cmp
xor
sbb
cmp
jle
push
testb
xchg
insl
stos
in
xchg
xchg
or
pop
jp
xor
push
loope
push
popl
xor
mov
or
sbb
lds
and
dec
ds
push
mov
mov
fistpl
cmp
push
rcrl
cmp
dec
cwtl
pusha
dec
pop
sbb
addr16
mov
xchg
inc
loope
jge
and
adc
cwtl
lock
inc
adc
call
out
scas
or
mov
shll
mov
push
or
cs
nop
lods
mov
add
loop
arpl
jne
arpl
cltd
outsb
pop
add
fadds
cmp
int3
push
incb
jnp
xchg
mov
and
out
push
in
adc
and
inc
jmp
sbb
adc
repz
jnp
mov
mov
fstl
jl
adc
movsb
shll
fwait
xlat
mov
sub
daa
fsubrs
adcl
sub
mov
mov
jge
add
sahf
not
repnz
stos
mov
ja
jmp
outsb
add
jp
sbb
int3
add
daa
lcall
fcom
mov
dec
cli
cltd
insl
stos
sahf
dec
das
in
pop
xor
and
push
cmp
mov
inc
fistl
pop
cmp
sub
adc
inc
sbb
inc
sub
sub
and
pop
mov
adc
jmp
insl
sbb
fwait
bound
jecxz
outsl
jae
mov
aas
cmp
xlat
inc
push
cs
incl
inc
jns
mov
nop
mov
in
pusha
ljmp
test
add
mov
dec
cmc
pop
in
or
stc
daa
mov
mov
push
aas
fadds
jle
loopne
mov
push
arpl
push
dec
mov
mov
or
dec
adc
insb
dec
subb
pop
push
je
stos
xor
add
loope
movsl
ret
xchg
cmp
push
rcr
push
mov
lss
in
sub
and
cmpsl
enter
sbb
imul
es
jle
lds
sbb
jno
pop
inc
insb
adc
cmp
add
sbb
addr16
inc
adc
and
xor
xchg
push
jecxz
stos
dec
repz
mov
ret
jbe
or
iret
mov
popa
xchg
mov
dec
pop
push
test
rorb
in
push
add
push
and
pop
mov
in
push
ja
add
lods
clc
iret
push
xchg
xchg
sub
fists
pop
outsl
stc
mov
cld
cmp
sub
push
fcoml
or
push
leave
jnp
dec
jae
add
ds
out
adcl
les
xchg
pop
arpl
je
pop
lahf
dec
outsl
push
sub
ret
je
dec
lea
xlat
push
dec
cmp
xor
testb
push
sub
mov
adcb
clc
out
dec
mov
sub
in
test
popa
sarl
cmp
or
in
jae
into
jo
push
pop
insl
adc
roll
mov
enter
dec
clc
fsub
push
mov
mov
cwtl
lea
mov
pop
je
daa
in
push
jo
push
imulw
sub
sub
cs
pop
daa
cmp
jns
pushf
push
das
mov
jle
xchg
mov
add
adc
test
dec
mov
jp
jp
pop
sbb
and
cmp
scas
bound
jae
push
aam
in
fcoms
enter
jmp
xlat
dec
mov
xchg
cmp
sub
jae
movsb
adc
rcrb
insl
popa
push
mov
mov
and
jecxz
jg
pushf
repnz
and
pop
pop
inc
test
scas
in
stc
mov
inc
popf
int
dec
fsub
xchg
shlb
js
mov
mov
rcrb
je
std
mov
cmp
pop
popf
adc
pop
pop
xor
das
pop
stos
je
push
push
loop
pop
mov
mov
pop
pop
das
dec
in
xorb
dec
loope
and
xchg
inc
cli
mov
mov
inc
mov
push
sub
jg
movsl
push
mov
rcrb
cmovbe
fs
push
insb
orl
xor
ret
jnp
cli
or
pop
and
jo
lock
lret
popf
cmp
jno
sbb
adc
lret
bound
outsb
jne
insl
mov
arpl
jb
lret
cmp
js
lods
xchg
ror
mov
push
paddd
shrb
pop
pop
pop
jmp
xchg
loopne
pusha
clc
jne
inc
xchg
mov
inc
les
in
push
out
cmpsb
outsb
aas
jb
sbb
and
xor
and
xchg
jmp
sar
jg
mov
xchg
in
sbbb
enter
movsb
das
push
push
dec
or
fld
jecxz
sub
and
fs
mov
push
inc
mov
repz
and
addr16
arpl
insb
cmp
mov
test
mov
or
popa
mov
aas
int
push
das
test
data16
imul
cld
stc
loop
es
cmp
mov
orb
sahf
into
daa
dec
popf
or
subl
push
stos
insl
rcrb
int
fcmovb
xorl
popa
sbb
mov
jp
or
sbb
push
addl
xchg
sahf
mov
int
xchg
jne
xor
repz
push
fiaddl
mov
fnstenv
sub
rcrb
push
push
cld
xchg
sub
dec
lahf
loop
dec
aam
pushl
fdiv
fcoms
or
call
cmpsb
shl
hlt
les
insl
addr16
push
or
cltd
pushf
sub
mov
pop
imul
xchg
call
cmp
xchg
push
adc
fcmovne
ret
loopne
insl
cmp
call
push
loopne
sub
sti
push
loopne
sbb
call
ljmp
jg
cmp
and
out
or
data16
out
insb
jp
imul
jb
cmp
mov
mov
shll
inc
daa
sub
incb
pop
push
inc
ljmp
sub
hlt
repnz
and
sbb
jmp
mov
add
cwtl
int3
push
arpl
jns
pop
movsl
adc
sbb
in
mov
or
cld
lcall
adc
in
cs
sbb
inc
cltd
scas
push
xchg
cmpsl
push
xor
loopne
jns
sub
nop
lret
sub
lret
pop
mov
and
xor
outsl
fsts
xchg
and
int
pop
or
fs
sbb
pop
lret
fsts
inc
loop
cwtl
out
and
stos
push
lret
icebp
incl
xchg
in
orb
sbb
int
into
pop
cwtl
nop
enter
mov
jge
inc
pop
mov
adc
dec
out
je
xchg
sub
inc
inc
shll
outsl
or
int3
arpl
arpl
pcmpeqd
inc
mov
sbbl
xor
sub
jmp
pop
popa
pop
aam
iret
lock
mov
pop
outsl
stc
push
ret
ds
flds
loope
dec
out
inc
add
sbb
cmpsl
xor
loope
add
icebp
testl
sub
loop
mov
mov
dec
cmp
decl
mov
les
add
adc
sbb
mov
mov
scas
adc
imul
inc
xchg
loopne
sbb
sub
iret
or
dec
xor
sub
fsubl
add
rcll
out
leave
pop
add
addb
out
add
mov
or
test
loopne
sti
mov
sti
mov
enter
mov
xchg
and
sti
lret
repnz
push
outsl
xlat
mov
xchg
imul
negb
out
pop
les
stc
in
imul
ret
test
dec
cmp
das
jne
jle
ds
and
cmpsl
xchg
cmp
ja
add
add
out
push
sub
in
mov
xor
sub
es
inc
cli
adc
dec
adc
pop
cld
sbb
jp
int3
sbb
mov
or
dec
out
or
push
addr16
movsb
xchg
add
icebp
xorb
jl
pop
les
loopne
adc
out
fmull
jnp
or
insl
dec
stc
sahf
jne
outsl
push
xchg
jl
bound
aas
icebp
ja
pop
sbb
mov
orl
movsl
pop
lock
mov
out
fadds
fwait
mov
dec
mov
mov
xchg
sti
pop
pop
movsb
xor
shlb
jmp
mov
ljmp
pop
mov
jno
jge
inc
inc
cld
xchg
daa
enter
mov
cmp
mov
mov
adc
xor
cwtl
neg
test
cltd
and
shr
gs
mov
xlat
imul
add
adc
push
lods
out
mov
rorl
cli
loop
xchg
mov
bound
aas
push
out
fs
push
test
mov
cmp
sub
scas
adc
or
sbb
or
push
shlb
or
movsb
js
mov
add
repz
adc
xchg
mov
and
mov
pop
test
sti
or
xor
sarb
in
xchg
sti
jg
cld
pop
jl
and
fs
mov
imul
inc
filds
test
jno
aam
popa
or
inc
jns
roll
lds
scas
addr16
faddl
pop
aam
mov
test
int3
jmp
and
or
lahf
dec
and
rorl
loope
mov
mov
dec
mov
fs
pop
push
stc
nop
xchg
xchg
arpl
xchg
shlb
orl
cmc
and
xorps
mov
xchg
pop
cwtl
pmaxub
dec
incl
je
aad
out
or
sbb
mov
adc
andl
sub
dec
jno
xor
mov
clts
pop
xor
jno
repnz
sub
inc
lds
mov
mov
enter
cmp
sbb
xchg
fnstenv
int3
data16
rorl
mov
sub
stos
sti
outsl
outsb
or
inc
push
call
pop
mov
cltd
lock
and
mov
mov
loope
popa
sub
or
mov
shll
es
std
imul
push
leave
sub
movsl
pop
into
shlb
rol
push
cwtl
mov
mov
jge
mov
call
mov
bnd
lahf
adc
mov
mov
dec
mov
mov
rcrl
cltd
es
cmp
pop
fildll
mov
sbb
mov
hlt
pop
push
jo
int
rcr
mov
mov
leave
idivb
cmc
sub
lret
shr
mov
inc
stos
adc
or
test
or
fildll
mov
cmp
dec
push
cwtl
inc
fwait
inc
je
outsl
mov
mov
jo
sub
xlat
mov
test
jle
mov
inc
cmpb
mov
pop
clc
mov
sub
mov
cmp
test
sbb
ja
cmovne
das
pop
idiv
dec
insl
lahf
out
push
loop
pop
or
cmp
sbb
inc
pop
add
push
pop
add
sub
and
pop
mov
incb
mov
cmpsl
sbb
loopne
xchg
ret
rcl
xchg
cmp
leave
out
cmpsl
out
inc
js
push
push
sbbl
push
in
arpl
sbb
jbe
mov
push
cmp
cmp
std
or
jnp
xchg
and
fcmovu
sbb
push
and
jb
jge
push
inc
das
sbb
cmp
adc
cli
mov
sbb
dec
lods
xchg
pop
mov
cmp
outsb
and
mov
or
mov
mov
dec
jnp
push
sbb
js
add
data16
insl
sbb
movb
js
add
ds
popaw
icebp
int3
inc
push
inc
sahf
mov
shll
mov
sti
jmp
leave
rclb
mov
cmp
lret
shrb
cmp
jmp
test
sub
pop
rcrb
scas
mov
mov
fists
add
push
shl
pop
hlt
jmp
iret
xor
dec
xchg
inc
lret
fsubr
inc
out
bound
add
lock
adc
leave
enter
push
mov
nop
inc
scas
fcoms
or
fwait
incl
mov
xor
js
das
push
and
dec
xchg
adc
mov
xchg
mov
fmull
cld
cmp
mov
mov
and
cmp
je
inc
js
loope
mov
test
pop
mov
cmp
jo
cld
add
mov
mov
dec
icebp
shll
sub
data16
call
add
out
mov
mul
cmpsb
sub
out
int
mov
out
leave
lock
in
test
test
cmp
push
repnz
jmp
leave
xchg
cmc
test
loopne
mov
pop
repnz
fnstcw
jne
adc
add
repnz
sbb
mov
jae
dec
dec
cltd
jno
pop
mov
test
inc
or
andb
ss
aad
xlat
and
data16
dec
mov
mov
dec
mov
mov
pop
pop
mov
inc
shr
push
aam
cmc
cmp
jl
xor
mov
nop
cmp
cmp
or
and
aad
insb
jmp
cmp
movsl
inc
loopne
je
cs
sub
sub
les
adc
in
mov
dec
xor
sbb
push
inc
insl
jg
adc
mov
push
testl
andb
or
mov
cmp
pop
cmp
lret
shll
lahf
mov
xchg
adc
shl
mov
in
cmpl
cmp
sub
push
dec
sub
jp
repz
xor
in
test
xchg
aas
movsl
fs
rolb
mov
xchg
outsb
dec
pop
imul
jo
and
and
ja
repnz
lock
jae
fiadds
xchg
hlt
xor
adc
xchg
iret
or
cmpl
js
sbb
inc
testb
cmc
inc
adc
js
cmp
fisubrl
sub
pop
mov
sbb
popa
xchg
dec
cmpsl
imul
aad
fisubs
mov
std
out
lcall
loopne
and
sbb
sbb
jb
cmpsl
ljmp
or
incl
sbb
or
adc
aaa
iret
push
fnstsw
pop
cltd
decl
aam
xchg
aaa
pop
repz
scas
insb
test
pop
xchg
mov
loop
cld
cmc
mov
mov
rcrb
sub
mov
xor
negb
inc
adc
add
mov
mov
ja
scas
ljmp
andl
add
jb
out
mov
ret
hlt
lods
lea
fidivrl
in
mov
cwtl
or
push
and
sub
repz
int3
popa
test
addl
cltd
cmp
and
shl
inc
mov
jmp
loope
es
daa
pop
push
pop
aad
pop
dec
sbb
mov
add
or
fcmovu
lahf
xor
push
and
ds
add
iret
xor
or
adc
ret
push
imul
sbb
xor
imul
cmpsb
push
clc
sub
jo
sub
xchg
xor
mov
pop
test
lods
mov
out
xorl
test
or
and
loope
add
fistpll
mov
jae
bnd
xchg
jg
loop
cmp
int
sbb
or
dec
pop
fcomps
ljmp
ljmp
mov
outsl
pop
dec
pop
or
xlat
cmpsb
stc
jmp
in
xor
cmpl
push
mov
rorb
lret
mov
inc
and
inc
pop
cmc
addb
mov
ljmp
in
sub
pop
lods
sbb
push
push
sub
add
mov
dec
nop
mov
jp
iret
xchg
in
mov
sub
inc
and
cld
dec
idivl
mov
push
xor
xor
pop
pushf
lock
dec
mov
mov
cs
mov
jl
std
leave
and
enter
in
data16
in
test
test
sbb
add
push
cmp
clc
jmp
inc
loope
imul
pop
mov
jl
sub
jmp
cmp
inc
icebp
sbb
xchg
or
adcb
cs
inc
ficomps
or
push
inc
into
add
cltd
adc
fdiv
mov
fstpt
push
sarl
mov
sahf
lock
clc
push
sub
clc
fs
dec
or
fnstsw
jo
cld
lods
jmp
add
cmpsl
cmpsl
sub
fstpt
ret
push
push
shrl
cmpsb
jecxz
movsb
repz
push
in
inc
int3
mov
jmp
mov
outsl
outsl
out
repnz
adc
push
mov
xlat
pop
add
fadds
nopl
imul
pushf
insl
fidivs
push
push
les
popa
jl
fidivrs
xor
sub
or
sbb
mov
mov
imul
xchg
jbe
xchg
inc
data16
rorb
and
xchg
add
xlat
and
xor
cmpsl
or
pushf
push
ljmp
mov
xor
cmp
sbb
jle
cli
daa
insb
cmp
test
repz
dec
cmp
pop
mov
inc
sbb
stos
and
iret
mov
cmp
es
adc
cmpsb
test
xchg
pop
loopne
pop
push
pop
push
push
pop
pop
push
mov
into
xor
gs
cld
cmp
popf
adc
std
pop
adc
ret
or
adc
lods
subl
xchg
xchg
dec
mov
faddl
fsubrs
lret
repnz
mov
jp
mov
sti
stc
fs
mov
mov
ljmp
push
lret
into
je
hlt
js
pop
imul
jbe
dec
pop
xor
movsl
mov
jbe
cmpl
fildl
imul
in
lods
xor
jg
xlat
ffreep
jnp
dec
pop
test
ds
mov
push
mov
cmp
shl
or
or
faddl
sub
dec
mov
dec
cld
out
lret
out
add
fwait
mov
out
ljmp
in
out
ret
cld
ficompl
loopne
sub
nop
test
adc
lock
mov
jne
push
mov
test
dec
pusha
push
inc
xor
rorl
ljmp
repnz
pop
sbb
out
arpl
outsl
leave
or
hlt
outsb
mov
dec
call
push
xor
sub
dec
imul
jnp
add
dec
and
fcomp
push
jp
push
sbb
fidivs
jg
loope
out
rorl
mov
mov
adc
into
movsl
cld
xor
mov
dec
add
mov
pop
fwait
pop
aad
iret
jns
add
lret
and
and
ret
icebp
pop
testl
fcmovu
or
add
out
jb
loop
push
mov
mov
xchg
mov
pop
cmc
jle
ret
stos
loop
push
adc
in
sti
dec
sahf
sti
adc
pop
or
in
loope
inc
xchg
mov
aaa
test
or
lret
mov
stos
cmp
loope
jmp
in
fwait
mov
xchg
lods
lds
sub
adc
popf
or
out
aad
or
pushf
jo
mov
mov
or
adc
mov
jo
div
mov
add
jae
mov
ret
icebp
shl
xor
bound
lret
lock
lret
ret
jbe
into
sahf
and
dec
and
aam
std
pop
jge
stc
js
adc
imul
scas
xor
mov
addr16
es
mov
jl
addr16
ljmp
ret
call
fs
pushf
inc
cmp
jge
push
jns
mov
mov
pop
mov
out
loopne
fcoml
es
into
jnp
shl
mov
sbb
cmp
cmpsl
push
jns
call
lcall
insl
push
jge
and
sti
iret
imul
inc
pushf
aas
mov
insl
mov
and
push
pop
and
pop
xchg
inc
push
sti
lret
in
mov
cli
dec
out
stos
clc
cmpsb
sub
mov
daa
xchg
inc
fsubrs
clc
out
mov
jae
mov
sub
mov
add
cmc
in
mov
out
insb
mov
lahf
push
or
push
mov
repz
push
mov
ljmp
sub
push
rorb
sahf
mov
sbb
push
sub
pusha
dec
adc
ficomps
fisttpll
cmp
sbb
popa
and
arpl
pop
ficomps
and
aam
inc
or
sti
sahf
iret
push
adc
inc
lret
adc
jle
lods
inc
inc
outsl
and
ret
jns
adc
jp
jae
mov
iret
cmp
and
sbb
or
addb
in
dec
xchg
stos
push
out
lahf
notb
dec
repz
dec
jp
ds
js,pn
push
cli
dec
mov
aad
add
fstl
fsubs
dec
fdivl
popl
or
pop
loopne
push
xchg
push
xbegin
test
mov
jns
and
adc
insb
cmp
cmp
pushf
test
sbb
addl
inc
push
push
sbb
repnz
adcl
sub
xchg
scas
xchg
or
jae
cmp
rcr
mov
mov
mov
mov
mov
decl
fisubs
cmc
sti
lds
decl
sbb
mov
xor
jecxz
cli
fisubs
mov
sbb
ret
pushf
pop
jp
jns
test
cli
push
mov
xor
jge
and
rorb
cs
push
xor
cmp
movsb
imul
js
out
cmp
or
gs
inc
rcl
sub
lds
or
cltd
cmp
mov
pushf
mov
movsl
jb
inc
dec
iret
dec
loope
xor
sbb
jle
insl
sub
shll
sub
daa
cwtl
sahf
aaa
cmp
jmp
aas
roll
jl
push
and
add
jmp
out
ficoml
and
cmpsl
dec
jge
inc
push
sahf
and
icebp
mov
rcll
or
in
shrb
inc
push
jno
sbb
push
inc
cmc
xor
jno
flds
pop
jbe
inc
mov
cmpsl
push
mov
or
jns
dec
xchg
and
jno
test
add
mov
in
insb
xchg
dec
gs
std
aaa
xchg
push
ficoms
lods
pop
cwtl
sub
xchg
int3
out
mul
adc
pop
gs
mov
sub
into
fistpll
arpl
sbb
push
stos
inc
jp
arpl
mov
out
shll
cld
ljmp
push
xor
mov
movsb
test
js
hlt
scas
mov
mov
inc
test
fldcw
mov
cmp
mov
vmovd
inc
insl
push
shr
pusha
mov
out
leave
xchg
and
lea
mov
es
mov
push
or
mov
jo
fdivrs
loop
iret
jne
mov
jmp
jl
push
or
imul
pop
push
pusha
sbb
rcll
icebp
fcmove
mov
test
mov
push
push
sub
inc
dec
stos
xchg
jecxz
inc
sub
jno
jb
fcomps
xor
fsubs
subl
aam
testl
push
xchg
ja
test
std
inc
and
aas
hlt
sbb
insl
dec
outsl
dec
inc
leave
pusha
xchg
subb
insb
pop
negb
dec
and
pop
cmp
jp
mov
inc
idiv
cmp
or
mov
jmp
scas
jecxz
jno
sbb
cld
mov
cmp
mov
add
add
cmpsb
hlt
inc
adc
lods
jne
mov
lcall
mov
mov
dec
scas
movsl
fsubs
test
insl
ss
ja
or
and
mov
xchg
push
sub
outsb
lret
lret
push
push
cmpb
jecxz
push
cld
stc
mov
test
or
rcl
sbb
sub
jbe
int3
fidivrl
fnstenv
std
psrlw
cmp
insl
dec
in
fidivrs
pop
mov
movsb
xor
les
fstpt
add
lds
mov
push
jno
out
mov
mov
in
loope
jg
sbb
lret
jg
shll
mov
or
lods
clc
call
mov
popf
out
or
je
ljmp
xchg
xor
es
mov
aam
sbb
push
jp
xchg
push
movl
dec
xchg
xor
idivl
test
rolb
cmpsb
adc
out
scas
cli
orl
xchg
mov
jbe
xchg
jle
popa
lahf
dec
jno
mov
mov
pop
loope
call
je
scas
mov
mov
dec
icebp
mov
shrb
mov
cmp
insl
daa
pop
cmpsb
fstl
sbb
cmpl
mov
cmp
pop
ds
lret
in
sarb
push
and
loop
cmp
fiaddl
aad
jmp
cmp
inc
sti
test
dec
daa
mov
repz
cmp
mov
inc
test
dec
ss
and
xchg
insb
and
adc
jg
jbe
jbe
jns
sbb
cld
and
push
push
and
push
fnstsw
and
fwait
das
out
scas
xchg
sub
ds
cmc
mov
ficomps
jp
hlt
std
cmpsl
outsb
mov
or
ret
sar
cmc
jne
sub
dec
push
and
imul
repz
jno
adc
push
les
pop
fs
mov
andl
scas
test
in
out
dec
jns
inc
shl
fdivrs
or
outsb
and
imul
and
aaa
bound
stc
pusha
sub
mov
call
fs
and
xor
pusha
jl
test
sbb
mov
sub
jae
int3
xor
and
fs
dec
xchg
sub
bound
push
mov
add
sbb
mov
xchg
shll
sub
mov
jle
aam
ret
jecxz
mov
ljmp
mov
aam
sti
mov
popf
cld
and
shl
pushf
sub
lds
push
mov
movsl
imul
xchg
or
mov
mov
inc
push
dec
adc
fisubs
push
and
dec
mov
mov
jae
cwtl
mov
sahf
pcmpgtb
mov
js
decl
mov
hlt
roll
pop
cli
sub
std
ja
mov
fs
insb
in
mov
jo
loopne
xor
ds
cli
pop
dec
and
xor
fdivp
inc
inc
out
call
inc
das
sub
or
cmp
lret
xor
fucom
std
fsubr
mov
out
je
fnstsw
inc
and
inc
pop
push
dec
dec
data16
leave
repnz
push
adc
or
test
in
mov
mov
xchg
pop
out
lcall
adc
arpl
aam
jmp
je
sub
jg
pop
pop
add
fldcw
sbb
sbb
fs
test
or
loop
dec
mov
mov
sti
jecxz
lcall
or
jge
push
stc
pop
mov
out
fwait
stc
cmp
or
mov
in
push
xor
fwait
loop
mov
xchg
out
inc
iret
xchg
sub
and
push
scas
pop
gs
xchg
lods
adc
or
cmpsb
or
sub
addr16
fstpt
shlb
insb
test
shll
roll
mov
jge
xchg
hlt
sub
inc
jnp
add
dec
cltd
js
outsl
cmp
pop
pop
out
mov
lahf
push
ret
and
in
sbb
adc
imul
mov
xchg
mov
lock
pop
in
imul
pushf
dec
sbb
pop
adc
icebp
aaa
hlt
imul
je
out
pop
fbstp
xor
bound
inc
testl
adc
stos
mov
add
or
das
inc
pop
mov
dec
cmpsl
mov
cmp
jmp
sbb
cmp
lahf
movsl
int3
pop
add
mov
into
xor
sbb
lds
mov
or
insl
or
scas
pop
xlat
sub
out
sar
lret
jle
xor
in
mov
ljmp
or
int
dec
imul
xchg
cmp
or
cmc
int
movsb
incb
cmpsl
dec
dec
outsl
dec
xchg
sarb
push
jge
les
lock
mov
cmp
or
insb
mov
lcall
push
int3
lea
js
fnstenv
push
jno
sbb
popa
xchg
mov
bound
xchg
lods
paddusw
dec
popf
inc
aam
pop
xor
lock
adc
lahf
push
test
cltd
popa
rorb
and
cwtl
mov
jae
cwtl
shl
adc
fiaddl
xchg
jge
enter
pop
fsubl
inc
movsb
pop
pop
arpl
inc
sahf
lret
pop
mov
lock
jb
jmp
cmp
mov
negb
neg
outsl
stos
or
std
aas
pop
nop
mov
inc
in
and
aad
jb
insl
fninit
pop
and
jg
shl
and
mov
or
jl
shlb
loope
dec
int
push
mov
jno
lock
fcomi
jle
sbb
sbb
or
xchg
out
ja
gs
push
adc
xchg
rorb
push
jnp
rorb
cmp
imulb
ljmp
scas
fst
mov
sub
ret
bnd
std
xchg
mov
popa
push
xor
ret
xor
hlt
daa
call
adc
inc
xchg
cs
sbb
sub
test
sbb
add
adc
rcrb
sub
xchg
aaa
jg
xchg
mov
inc
xor
dec
fbld
out
imul
lea
and
sbb
mov
mov
mov
jae
insb
lock
mov
jl
scas
mov
loopne
rcll
cmp
sub
pop
jecxz,pn
mov
lods
leave
call
adc
out
cs
repz
xchg
mov
loope
imul
sahf
out
dec
sub
mov
out
orl
xor
call
movsl
idivl
ret
cmp
cld
fnsave
sub
add
loop
cmpsb
mov
loopne
jae
lods
mov
pop
jno
pop
test
loop
cmp
cltd
xchg
push
mov
xchg
pop
fxch
out
out
popa
and
or
lahf
inc
cmp
lret
insl
rorb
fists
inc
cmpsl
icebp
push
inc
sti
cli
cmp
lock
cmp
mov
cmc
das
mov
repz
sbb
lds
jns
ds
loopne
jge
sti
mov
nop
pop
stos
xchg
out
cwtl
sbb
mov
ds
cmp
pop
sub
hlt
push
loop
jmp
shll
insl
xchg
shrb
or
mov
mov
and
add
push
je
