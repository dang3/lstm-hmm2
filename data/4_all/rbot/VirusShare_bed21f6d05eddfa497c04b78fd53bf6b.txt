mov
fbstp
imul
pusha
cmp
xchg
insl
popa
mov
xor
ficompl
decb
mov
pop
cmp
xor
fidivl
mov
ljmp
mov
xchg
dec
lds
insb
mov
xlat
pop
fstl
or
dec
cli
dec
jbe
insl
dec
inc
mov
pop
aas
outsl
test
sub
daa
xor
in
dec
fcomps
subl
cmp
mov
rorl
popf
outsb
pop
xor
in
cmp
dec
lcall
sahf
cmp
mov
jbe
stos
lods
loopne
push
jns
sbb
cmpsl
jbe
gs
insl
adc
lcall
adc
sub
dec
in
pop
aad
jnp
or
fs
imul
andl
shrl
push
or
push
fdivrs
pop
lcall
xchg
test
jl
push
push
push
jo
bound
aaa
ds
stos
pushf
int3
sbb
rolb
aam
movaps
fsubrp
cmc
out
jg
jp
pop
pop
or
and
or
adc
dec
mov
jecxz
jne
sbb
popa
and
mov
adc
lcall
sbb
xor
icebp
js
xchg
jge
push
xchg
push
inc
lret
fnstsw
xchg
sbb
sbb
inc
shrb
dec
test
popf
ja
outsb
sbb
adc
xor
adcl
daa
and
insl
push
popf
arpl
gs
sbb
loop
push
popa
scas
and
aad
rclb
pop
popa
jecxz
scas
sbb
add
jno
dec
push
lret
daa
xor
inc
mov
xchg
mov
fwait
dec
dec
dec
enter
push
mov
or
imul
pop
push
inc
les
dec
jb
dec
jbe
out
rclb
jne
xchg
lcall
sbbw
mov
adc
aas
lea
iret
push
rcrl
arpl
sbb
or
and
xchg
push
ljmp
shll
pop
sbb
scas
pop
push
mov
or
sahf
pop
mov
sarl
ficoms
cmpsl
jb
test
sub
fildll
repz
int3
clc
xchg
adc
loop
pop
add
aad
lods
fnstenv
ss
pop
jae
das
mov
movsb
dec
in
mov
nop
bnd
push
mov
push
movsl
imul
mov
jecxz
fwait
push
mov
push
shlb
adcl
aaa
pop
aad
xchg
jecxz
push
mov
push
push
stos
das
fisttpll
mov
push
fisubrs
arpl
jns
lods
sti
adc
dec
popf
popa
popf
jbe
ficoml
inc
nop
stos
daa
stc
xor
push
lods
push
cltd
and
sbb
push
dec
pushw
dec
inc
dec
js
lcall
fwait
cmp
js
es
xchg
inc
pop
push
fwait
pop
popf
dec
sub
pop
jne
test
mov
lcall
jbe
orb
xchg
mov
and
push
push
and
lcall
adc
outsl
insl
xchg
push
mov
aas
mov
cmpl
notb
repz
cmp
jae
push
or
jg
adc
xchg
mov
xchg
sub
cmp
xchg
inc
or
rol
inc
fildll
fs
push
dec
inc
cltd
mov
movsl
jb
and
mov
fnstcw
pop
push
inc
jmp
stos
dec
inc
scas
push
add
cmp
pop
jmp
xor
enter
pop
jne
mov
inc
pop
je
int3
xchg
lahf
inc
dec
popa
test
bound
cld
dec
into
cmp
loop
arpl
push
lcall
mulb
jmp
jbe
dec
pop
test
jmp
mov
adc
stos
in
push
mov
stc
in
arpl
mov
push
or
lret
inc
fwait
scas
mov
sbbb
cmp
xchg
dec
push
push
test
xor
jb
cwtl
lds
mov
push
add
ficomps
addr16
push
push
jmp
mov
push
mov
sub
cltd
lods
loopne
cmpl
mov
and
ficoms
ljmp
sbb
imulb
minps
arpl
adc
popa
adc
mov
pusha
fidivrs
mov
pushf
and
jb
lods
xlat
pusha
clc
inc
add
push
xor
in
mov
and
cmpb
mov
cmc
mov
pop
repnz
mov
insl
push
cmpsl
lea
cmp
ja
aaa
ja
and
movsb
cwtl
xchg
mov
xchg
idivl
enter
stos
lahf
jno
pushf
loop
mov
lods
add
or
bound
in
nop
je
sbb
push
adc
and
popf
inc
jo
mov
int
sbb
mov
inc
mov
popf
dec
movsl
outsb
roll
xor
aad
sti
xchg
mov
xor
or
sbb
adc
sbb
and
dec
inc
xchg
jg
cmp
xchg
out
push
aam
sub
jmp
or
arpl
xor
pushf
fwait
and
out
jb
add
jb
jp
mov
push
jno
dec
push
pop
rcrl
test
or
cmpl
pop
pop
cmp
and
pop
push
lds
data16
push
inc
inc
jno
sahf
aaa
repnz
and
mov
sbb
jb
lcall
sbb
mov
sub
out
cld
sbb
mov
add
fadd
add
add
insb
icebp
pop
xchg
pop
mov
leave
xor
test
outsl
and
mov
rorl
pop
xchg
push
mov
dec
xlat
adc
test
cmpsl
xor
arpl
dec
stos
sub
gs
add
inc
data16
adc
movsb
push
xchg
je
pop
mov
imul
jne
loop
mov
fadd
shll
add
movsb
push
jnp
out
loop
jno
add
mov
test
leave
mov
filds
adc
outsb
loope
gs
iret
arpl
mov
repz
add
xor
adc
jne
andb
cmc
cmpsb
pop
test
mov
cmp
nop
cmpsb
mov
bound
adc
mov
ljmp
pop
test
je
mov
fildll
jnp
dec
mov
test
fwait
xchg
aas
sbbb
add
sbb
popa
mov
outsb
add
jb
lret
lahf
outsb
push
jno
pop
aad
rclb
loop
xor
stos
mov
movsb
mov
sub
jae
sub
pop
repnz
test
jnp
xchg
arpl
scas
insl
cmpsl
js
outsl
lret
mov
push
shr
addr16
or
in
sbb
cmp
jno
or
inc
ficompl
push
jl
adcb
or
movsb
fwait
js
or
icebp
mov
movsl
mov
mov
xchg
and
loope
cmp
loop
mov
xchg
adc
mov
enter
xchg
addr16
lcall
lret
jno
sub
sbb
sub
adc
aam
les
cmp
arpl
push
pop
and
mov
data16
mov
ficoms
jae
das
sub
ret
xor
int
fwait
sub
out
aad
cltd
xor
movsl
push
mov
xor
mov
cs
in
inc
ss
and
mov
and
adc
jae
nop
lea
in
or
pop
jno
jp
into
cmp
adc
das
hlt
sbb
je
jle
xor
jne
mov
movsl
and
pop
ficoms
test
xchg
lret
cmpsl
xchg
sbb
clc
andl
cmpsb
jo
or
popa
xor
popa
repnz
mov
popf
fimull
jmp
push
ret
ret
cmpsl
cld
cli
ret
mov
push
fmull
xchg
cmp
adc
xchg
sbb
sub
sub
inc
sub
insl
cmp
push
jmp
andb
aad
mov
or
mov
sub
mov
pop
repz
adc
and
push
inc
outsl
dec
int
inc
pop
jg
xchg
mov
xchg
ljmp
loopne
push
das
pop
push
mov
es
push
imul
sbb
sub
sub
adc
cmpsb
or
jmp
ss
xor
sahf
fisttps
mov
pushw
hlt
push
iret
fwait
jmp
dec
pop
mov
int3
lret
sbb
lea
jb
xor
loopne
cmp
cmp
xchg
xchg
ret
add
cmp
bnd
je
fdivs
das
cmp
push
cmpsb
test
orl
jmp
xchg
shll
or
sub
ljmp
repnz
mov
dec
pop
or
sahf
jns
mov
inc
push
lea
iret
imul
ret
adc
pop
shll
dec
nop
stos
jne
jb
push
mov
insl
jmp
pop
pavgw
cwtl
loop
lret
dec
fs
mov
xchg
or
and
rcrl
lret
int3
fbld
cmpsb
lahf
insb
jns
jb
push
or
stos
mov
mov
cmc
jecxz
sti
or
orb
push
push
lods
or
jne
push
push
lea
xor
jl
jle
out
pop
stos
shll
mov
push
mov
add
inc
and
push
mov
jno
push
dec
addr16
das
dec
fstpl
jno
push
dec
fwait
and
inc
ja
mov
sbb
xchg
xor
push
jb
xchg
movsl
cmp
outsb
and
test
pop
push
dec
xor
cltd
das
movl
leave
ss
out
cmp
push
ret
aam
cltd
jno
inc
data16
bound
lret
push
mov
adc
and
push
idivb
aad
stc
inc
sti
scas
mov
cmp
jne
add
imul
arpl
popf
lcall
sub
out
xlat
xchg
mov
das
jae
mov
sbbl
in
jge
pop
push
sbb
lret
or
jne
out
aam
cs
ret
jmp
mov
das
fnstenv
outsl
adc
push
out
orb
sbb
shrl
mov
adcb
int
out
fisubrl
xchg
pop
popf
test
roll
int
or
cwtl
mov
es
es
inc
je
inc
sahf
shrl
jle
pop
insb
pop
cmc
imul
pop
jns
imul
push
bound
ret
xchg
xlat
popf
mov
shrb
xorl
popf
cmpsl
mov
xchg
jo
pop
pop
pop
repnz
add
mov
push
push
and
shlb
add
xor
xchg
rclb
jp
adcb
aam
pop
mov
mov
cmp
pop
test
sub
xchg
mov
jle
dec
and
xor
mov
lcall
ficoml
fldcw
pusha
sbb
mov
push
lods
int
cmp
sbbb
mov
movsl
pop
pop
cltd
test
xchg
daa
ftst
fstl
inc
xchg
xlat
rcr
cmpsb
popa
adc
test
pop
mov
adc
inc
and
jl
xchg
jmp
fwait
sub
in
insl
sub
pop
mov
jge
dec
ja
int
push
cmpsb
adc
inc
aam
in
jge
inc
push
add
aam
jae
iret
add
test
pop
cmpsl
fildl
dec
mov
lret
xor
adc
jnp
sbb
jecxz
testb
ds
aad
enter
stos
fwait
xchg
mov
adcb
lcall
pop
dec
jl
fs
xchg
ret
sahf
sbb
push
cli
mov
mov
aad
mov
mov
jns
in
aam
jl
lahf
xchg
add
cmp
stos
jns
jae
popaw
jecxz
mov
inc
or
push
add
insl
pop
xor
and
shll
psllq
pop
aaa
adc
stos
inc
daa
pop
mov
mov
loop
mov
xchg
arpl
loope
jmp
jle
sbb
insl
mov
pop
daa
jnp
push
xchg
pop
imul
mov
adc
in
jl
ss
dec
les
mov
sbb
bnd
popa
lods
xlat
mov
cmpsl
xchg
repnz
mov
and
stc
xchg
mov
std
aad
dec
aad
cmpsb
cmp
in
xor
es
leave
lea
cwtl
rcrl
aam
mov
cmp
sbb
or
inc
jb
push
fmuls
sarl
shll
pushf
loopne
push
cmp
scas
xchg
mov
cwtl
adc
xor
movsb
xor
cli
xchg
xchg
mov
mov
incb
cltd
mov
mov
cltd
repz
addl
iret
test
and
scas
fsubrp
dec
enter
outsb
aam
repnz
shrb
lea
jae
jb
pop
out
dec
jp
mov
dec
xchg
icebp
addl
jae
pushf
add
hlt
adc
outsb
cltd
mov
or
xchg
push
arpl
fiadds
push
push
push
and
lret
inc
loopne
jmp
aad
lcall
imull
vpcmpgtb
out
inc
mov
cmp
test
inc
xor
cmp
xchg
jge
sub
push
push
shll
inc
outsl
inc
pop
aad
sti
jne
jb,pt
pop
push
dec
mov
mov
rcr
loopne
dec
xchg
fdivrl
mov
repz
push
mov
daa
bound
imul
xor
xor
cli
aaa
pop
cmp
repnz
cmp
or
shrl
push
pop
into
popa
add
adc
hlt
cmpsb
in
sbb
xor
pop
jne
data16
cltd
rclw
inc
ret
in
rolb
iret
das
aam
fwait
bound
mov
lods
ret
and
lods
jo
inc
popf
imul
or
loope
test
cmp
ja
test
jbe
shl
lea
test
movsl
or
scas
cld
and
cltd
iret
test
or
loope
mov
out
outsl
popa
mov
stc
cmpsl
fwait
add
mov
test
popf
out
out
xor
xchg
xchg
ret
inc
jo
into
jae
adc
bound
dec
dec
mov
movsl
nop
arpl
loop
repz
mov
daa
mov
jp
mov
xchg
into
pop
push
mov
nop
int3
xchg
ret
in
add
jmp
xlat
push
popf
dec
aad
int
sub
inc
inc
mov
inc
or
cltd
enter
jnp
adc
and
es
popf
mov
iret
pop
push
pop
sub
cmp
or
jle
jmp
mov
cld
hlt
cmp
mov
aaa
mov
adc
mov
mov
push
leave
fcompl
clc
subl
cmp
pusha
out
loop
rorb
or
test
jns
lahf
add
mov
xlat
adcb
jg
adc
add
or
imul
ds
jg
xchg
push
pushf
std
cmpsb
ficoml
jnp
popf
test
pop
movsb
stc
sub
mov
push
xor
push
or
xor
jge
xor
test
int3
add
lret
aad
jne
insb
push
mov
in
and
loop
dec
test
iret
adc
push
outsl
sbb
je
out
sub
aad
push
mov
repz
pop
sbb
push
mov
mov
mov
sarb
pop
xor
lea
jnp
ffreep
push
lret
cmp
push
push
xchg
sbb
lods
std
cmp
xor
push
pop
fsub
cli
xor
jl
icebp
add
jmp
mov
push
and
cltd
cmpsl
xchg
test
or
imul
xor
mov
call
dec
outsb
xchg
ljmp
or
outsl
and
scas
out
test
mov
pop
pusha
xlat
gs
hlt
std
sub
clc
jo
jne
fimull
out
fnstcw
inc
xor
sbb
adc
fistl
cmc
pop
dec
and
fsubp
xor
icebp
push
adc
mov
pop
mov
adc
out
pop
inc
stos
cmpsb
mov
cld
test
cmpsl
add
adc
pop
adc
lcall
push
jmp
inc
mov
pop
sbb
shl
addr16
in
gs
ds
dec
jl
shll
xchg
cmp
ror
lret
test
or
popa
arpl
les
cs
inc
mul
test
and
or
lds
lods
add
cmp
jne
mov
or
pop
jl
sbb
jns
les
cli
and
mov
xor
and
addr16
pop
pop
inc
inc
aas
bound
aam
pop
push
dec
pop
xchg
pop
cmp
xor
lods
xorb
jl
fsubl
mov
pop
nop
fistpl
cmpsb
iret
jne
add
inc
xchg
ds
cs
call
cmpsl
arpl
in
js
stos
iret
fsubs
aas
mov
xchg
and
into
adc
pop
into
cmpsl
pop
cwtd
xchg
mov
push
lahf
mov
sub
pop
cwtl
nop
inc
ljmp
repz
icebp
movsl
xor
jbe
jecxz
in
test
popa
jae
xor
loop
je
lea
ss
xor
sub
pop
adc
orl
cmp
mov
scas
fsubrl
fiadds
pop
and
cmp
ret
aaa
dec
or
dec
les
in
jo
loopne
dec
mov
sub
movsb
aaa
inc
jb
jne
mov
std
inc
push
jmp
test
xchg
mov
xchg
dec
xchg
shlb
mov
cli
mov
push
data16
xchg
mov
out
dec
cmc
mov
andb
and
aas
into
sub
sbb
mov
cmp
jnp
mov
test
fcoms
cmpsb
addr16
mov
insb
push
push
add
in
and
frstor
jne
loope
cmp
jne
je
mov
or
in
push
mov
pop
in
dec
mov
xchg
je
push
pop
mov
sbb
and
jbe
jae
jo
push
pop
les
xchg
cmp
outsb
xor
out
int
into
movsl
fs
data16
les
push
popf
test
dec
pop
stos
fwait
por
push
cmp
mov
push
dec
ret
mov
dec
fdivrl
push
pop
mov
dec
fldl
inc
cmc
push
jbe
xchg
mov
jbe
push
fwait
js
push
pushf
xlat
aas
rcl
jns
pusha
xlat
rorl
subl
mov
popa
mov
into
jne
push
sahf
xor
pop
imul
insl
xor
imul
pop
and
popf
adc
jnp
jp
sub
mov
mov
imul
fnstcw
xchg
lock
mov
jo
jno
dec
xchg
mov
je
sbb
add
ss
rorl
sub
pop
leave
popa
aad
mov
mov
adc
jp
sti
test
push
imul
cltd
ret
mov
fisubs
adc
xchg
mov
repnz
pop
les
jns
sti
test
fwait
nop
in
subb
imul
mov
arpl
outsb
loope
mov
jo
jb
call
jle
je
and
xchg
test
add
rol
aad
xor
adc
je
stc
ret
jb
push
and
cmp
mov
xchg
jne
adc
imul
ss
push
sub
and
xor
pop
ja
push
inc
adc
inc
push
fistl
ljmp
call
movsb
loope
sbb
sahf
movsl
jmp
fiadds
nop
pop
arpl
shlb
dec
xorb
push
pop
iret
orb
int
outsl
sbb
addb
cltd
test
pop
mov
cmc
ret
movsb
clc
xchg
push
jle
shrb
jg
mov
jb
xchg
sbb
icebp
stos
pop
pop
adc
inc
outsb
mov
in
adc
inc
cltd
add
bound
ret
adc
push
mov
popa
jb
xorb
pop
je
sub
dec
adc
fisubs
push
outsb
test
vpsrad
pop
inc
xchg
push
mov
arpl
lds
test
or
xchg
sti
call
test
pop
lea
movsl
xor
movsl
cmp
mov
add
movsl
outsb
repz
and
nop
pop
inc
pop
test
sub
shlb
sub
pop
sub
and
repnz
aad
mov
fwait
mov
add
nop
aad
mov
jge
xchg
outsb
imul
and
dec
lea
add
mov
daa
shll
scas
sbbl
addr16
and
test
mov
outsl
jns
lods
xor
sbb
scas
pop
xchg
jmp
ss
frstor
cmp
cmpsl
outsb
outsb
dec
les
insb
jecxz
popa
xchg
xchg
aad
iret
cmpsb
pop
scas
sbb
or
sub
or
dec
gs
popf
lea
adc
adcb
lods
dec
fs
fiadds
out
popf
cmpb
ficoms
mov
lahf
mov
cwtl
aam
xchg
add
jns
pop
jp
cld
mov
cmp
or
fisubrl
cmc
aaa
cmc
xor
fwait
and
and
ficoml
sub
jge
mov
insl
sub
pop
addr16
aas
addr16
psubusb
jo
jno
mov
lahf
pop
mov
xchg
movsl
bound
push
sub
pop
xchg
jge
das
addl
fisubs
movsb
adc
xor
inc
adcb
sbb
xchg
mov
xchg
dec
xchg
jnp
adc
sti
ds
xor
cmp
idiv
add
xchg
jae
subb
mov
or
mov
mov
push
js
arpl
jae
xchg
jge
jo
arpl
add
inc
pop
insl
aad
pop
pop
insl
cwtl
int
mov
or
push
mov
cmp
push
jmp
push
mulb
stos
iret
dec
pop
and
imul
shrl
in
cmp
push
aad
addr16
sbb
in
jge
mov
adc
cmp
cmc
gs
in
mov
xchg
lcall
jg
pop
jecxz
dec
add
inc
mov
stos
shr
jp
mov
sbb
jmp
movsl
loope
lds
pop
in
outsb
dec
pop
jecxz
mov
daa
fsubs
fmuls
rcrl
add
jo
orb
es
cmpsb
cmp
je
jmp
popa
xor
out
jecxz
cmp
repz
inc
lret
outsl
cmp
add
sbb
popa
mov
jb
ficoms
xchg
add
mov
outsb
shll
pop
mov
sub
fiaddl
mov
ret
das
into
clc
notb
lahf
push
jle
popf
mov
bound
pop
lods
cwtl
xchg
lcall
jns
shlb
lods
sub
ss
push
cmp
lahf
inc
popa
xor
dec
enter
cs
adc
push
ss
outsl
inc
push
jo
jbe
pop
adcl
jle
test
xor
sbb
push
gs
pop
lea
push
jae
push
cwtl
cmp
cwtl
xor
dec
xchg
xor
push
pop
dec
mov
mov
je
arpl
ljmp
ljmp
cmpsb
subl
andb
lock
sbb
stos
gs
pusha
outsb
xchg
sub
or
aam
scas
pop
sbb
inc
or
insl
cmp
push
jg
push
mov
sbb
mov
jp
adc
sarl
jae
and
bound
dec
push
sbb
sar
xor
shll
fsubl
dec
xchg
js
mov
fsubr
mov
push
push
xchg
add
sub
lods
repz
pop
test
jecxz
lods
cmp
dec
fwait
ret
pusha
in
jno
out
cmp
repnz
push
mov
inc
nop
cmp
inc
jno
cmp
jb
mov
xchg
mov
test
dec
pop
jl
mov
mov
stc
out
jbe
pop
inc
std
adc
mov
loopne
xchg
push
and
test
cmc
rclb
lcall
rcll
sub
mov
rcrl
or
mov
sub
fs
cwtl
in
sub
imul
pop
mov
mov
cmp
add
out
xchg
daa
ror
inc
jecxz
ja
jno
fidivl
aaa
out
shll
addr16
push
ret
fwait
inc
fbld
test
insb
mov
mov
cmp
imull
scas
pop
inc
add
icebp
out
xchg
push
cmp
jno
jmp
inc
push
imul
pop
mov
push
mov
test
mov
sbb
sarb
rclb
fstpt
push
bound
add
psubsw
inc
jl
mov
es
mov
fs
dec
xor
or
cwtl
insl
fdivs
clc
out
push
inc
into
sub
xor
add
lcall
push
out
jb
jns
jae
sub
pop
outsl
adc
fs
adc
stos
insl
test
pop
nop
int3
shll
xchg
fcoml
outsb
outsb
cmp
repnz
ja
aam
push
jno
dec
mov
shrb
nop
test
inc
cmpsl
rcll
push
int
mov
jp
shll
and
sbb
in
adc
test
pop
mov
mov
cmp
mov
mov
xchg
push
sub
push
rorl
jns
lret
in
bound
aad
xchg
aad
pop
pusha
popf
add
pop
test
and
dec
add
scas
mov
lods
sbb
jne
lcall
adc
test
sub
lds
sti
xchg
fwait
insb
sbb
arpl
scas
add
arpl
xchg
loope
mov
loope
jae
mov
lds
sbb
xchg
aaa
mov
mov
fisubrs
sbb
jb
mov
hlt
sbb
xchg
in
mov
jg
aam
push
repnz
inc
mov
ja
and
pop
mov
lret
push
push
dec
mov
rcr
dec
ss
xchg
push
push
cmp
xor
adc
repz
mov
frstor
mov
je
xor
lret
dec
pop
pop
pop
gs
repnz
mov
cmc
pop
mov
pop
xor
call
fisubl
dec
stos
js
jl
mov
adc
orb
add
das
fists
gs
fidivrs
test
mov
mov
aas
cld
mov
shl
jbe
arpl
pop
lods
into
push
jns
cwtl
fisttps
in
mov
dec
cmp
outsb
repz
stc
inc
hlt
int3
push
push
addl
sbb
sahf
jmp
push
push
ds
push
xor
jb
repz
iret
jno
push
xchg
cwtl
js
mov
sub
clc
jecxz
loope
xchg
push
inc
pop
or
push
pop
cld
fdivrs
push
lahf
jns
jnp
mov
dec
addr16
in
and
shlb
rcll
push
cmp
test
pop
daa
mov
pop
jnp
dec
add
mov
out
pop
sbb
add
sbb
pop
aad
movntps
cmc
jmp
or
jno
notl
rcll
lret
jbe
xor
lods
and
sbbb
in
mov
xorl
sbb
shlb
inc
dec
cmpl
sbb
mov
mov
insb
jecxz
sahf
fdivl
and
out
add
xchg
xchg
gs
add
mov
rcr
rclb
lods
lods
mov
jae
xor
insl
and
cwtl
bound
insb
mov
pop
fwait
addr16
call
fimull
mov
test
jne
push
dec
ret
xor
scas
lds
test
sbb
cmp
jo
or
out
pop
rcrl
outsb
pop
je
push
insl
lcall
push
mov
push
fsubl
jno
xchg
sub
fs
jae
mov
cld
mov
jne
cmp
push
jbe
aas
mov
loop
jecxz
test
dec
mov
in
cltd
ss
stos
movhps
cltd
xor
cmc
mov
scas
bnd
pop
movsb
mov
mov
cmc
pop
jae
push
mov
ljmp
movsl
and
fcomps
mov
mov
loope
aaa
adc
arpl
or
jg
imul
mov
das
bound
push
mov
fstpt
jnp
jns
gs
in
inc
push
popa
jne
lds
cmp
inc
push
add
pop
dec
lcall
rolb
stos
ret
aam
out
fsubs
rcrw
and
cmpsb
dec
pop
fbstp
xor
or
push
lds
push
cmpsb
dec
push
rclb
sbb
adc
out
push
jp
jne
cmpsb
call
scas
testb
push
mov
and
jno
popf
jmp
cmp
push
cmp
out
mov
scas
jne
pusha
cmpsb
arpl
dec
sub
int3
push
sbbl
cmp
jb
and
mov
aaa
lret
gs
nop
sarl
jns
inc
rorl
sub
push
fidivl
lods
jge
add
pop
daa
rep
lret
aad
bound
lret
mov
pop
dec
pop
adc
lods
or
mov
inc
sahf
jl
sarb
push
inc
mov
repnz
and
pusha
std
scas
cmp
or
mov
in
jp
repnz
lock
imul
outsl
or
popa
fbstp
push
push
cld
pop
in
push
scas
insl
and
lea
cmp
jl
lret
and
out
sub
mov
sbb
push
aaa
push
mov
pop
fldt
test
shr
xchg
arpl
stos
stos
cmp
mov
cwtl
mov
push
mov
scas
aaa
repnz
dec
dec
nop
pop
test
add
mov
shrb
gs
stc
cvtdq2ps
push
cmp
mov
stos
inc
ss
jae
mov
popa
xchg
jg
aam
cmp
mov
and
inc
jo
divb
and
mov
push
pop
int
hlt
sub
into
or
sbb
gs
push
ss
in
pop
sbb
adcb
sub
das
or
mov
and
out
jb
cltd
and
or
insl
insl
sub
pop
and
xchg
sahf
sbb
in
pop
inc
cmp
out
jbe
sahf
sub
lret
or
cmp
sbb
cmpsl
sti
pop
imul
addr16
cmp
xchg
mov
mov
cli
xor
outsl
push
fidivl
icebp
ja
mov
movsl
pop
lods
test
mov
sub
add
popa
ffree
mov
lds
push
lods
pushf
out
cltd
ret
jp
pop
jge
cmp
push
mov
cmp
sub
mov
imul
xor
add
imul
ljmp
inc
lods
cli
and
adc
lret
insl
int3
and
aad
test
test
rep
jno
insl
mov
and
xchg
dec
pop
insl
pop
push
dec
xor
jb
lea
sub
mov
fwait
dec
sub
xchg
or
mov
insb
mov
cmp
int
ret
cmc
push
shll
mov
outsb
lods
push
xchg
sbb
push
cmp
loope
idivb
lret
mov
dec
inc
notb
add
ja
pop
movb
mov
call
addr16
enter
xchg
lret
and
and
sbb
icebp
loopne
mov
push
pop
pop
push
sbb
sahf
int3
ss
push
pusha
nop
sbb
sbb
test
cmpb
fstpt
or
mov
adc
popl
mov
push
mov
fidivrl
mov
dec
sahf
stc
ds
cltd
nop
cmpsb
push
jl
negl
movsl
fxch
nop
or
or
lcall
or
in
mov
jo
cmp
jnp
iret
or
popf
int
inc
cmc
das
pop
and
shlb
popf
out
insb
lcall
push
sbb
loopne
bound
dec
push
out
iret
stos
in
lods
inc
in
xchg
xor
mov
outsb
ss
add
bnd
pop
dec
pusha
test
iret
cltd
jnp
repnz
or
imul
push
adcl
jmp
dec
push
xchg
daa
mov
pop
int
hlt
addr16
loopne
loopne
sub
jb
nop
movsb
pop
mov
in
popa
adc
stos
sub
lods
push
push
test
ret
mov
add
push
out
rcrl
shl
push
fmuls
ret
mov
enter
test
mov
jg
jne
sbb
pop
jl
adc
gs
fcmovb
ret
outsb
into
leave
shrb
pushf
dec
pusha
xchg
imul
lds
dec
pop
adcl
arpl
push
inc
sarb
out
ficoml
inc
subl
xchg
ficompl
push
lods
cli
popf
fisubs
inc
push
je
sub
lret
adc
adc
cmp
mov
orl
and
fiadds
sahf
sub
sub
sub
push
lods
and
out
jb
jl
or
mov
ret
jns
stos
and
test
icebp
xchg
popf
add
movsb
lea
mov
lret
imul
push
pusha
push
ror
fs
xchg
dec
insb
std
adc
jne
rol
fldt
dec
arpl
dec
fnstcw
cwtl
mov
bound
fucomip
cmpsl
dec
and
jle
push
push
leave
adc
cmpsb
xchg
bound
and
mov
jmp
jl
fwait
pop
daa
pushf
imul
xor
pop
push
int3
popa
cmpsb
xor
pop
bound
mov
test
pop
mov
popl
es
out
imul
mov
ret
fidivs
aas
andb
mov
sbb
imul
lea
movsl
xor
jae
inc
rcrl
fimull
rcll
push
inc
addr16
jns
mov
lret
ds
xor
pop
pushf
scas
xlat
lret
mov
gs
test
or
mov
xchg
fwait
mov
jns
das
xchg
mov
scas
xchg
push
cmc
ret
jae
xchg
insb
sub
sahf
mov
push
mov
sub
mov
addb
clc
fnstenv
loopne
pop
lds
xor
mov
scas
inc
sbb
push
or
addr16
repz
push
rcll
adc
icebp
je
test
ss
pop
in
dec
mov
sub
jo
jbe
mov
test
test
xor
mov
pop
adc
negb
aaa
and
arpl
test
cmp
push
add
mov
mov
jb
std
aas
iret
gs
mov
pop
xor
rcll
push
sub
shld
dec
popf
inc
call
shll
sub
and
push
outsl
push
dec
pop
fnstenv
jno
mov
mov
in
and
pushf
xchg
mov
fcomp
push
cltd
arpl
nop
lea
enter
pusha
rorl
aam
roll
clc
pop
fldenv
insb
bound
iret
repnz
shr
pop
std
lcall
in
aaa
mov
fstl
ja
sbb
sbb
lods
sbb
inc
out
jns
stc
sub
stc
mov
dec
lcall
stos
out
and
cld
in
jae
imul
icebp
xor
pop
imul
dec
int
push
sbb
cwtl
andb
addr16
ljmp
ret
push
inc
jbe
pop
test
rcrl
jg
test
sti
insl
xchg
sbb
adc
xor
repz
in
int3
pop
in
dec
testl
gs
pop
popf
xor
push
ret
popa
sahf
fs
add
adc
je
dec
inc
pop
adc
push
pop
jns
repz
sub
dec
jae
xchg
sub
movsl
repnz
jecxz
ret
and
sbbb
cmpsl
fwait
outsl
sbb
notb
into
dec
pusha
gs
dec
sbb
and
push
mov
js
rcl
or
xchg
js
jge
and
mov
push
lret
ja
pop
xchg
enter
cmp
scas
jne
sbb
pop
pop
out
mov
shr
inc
test
inc
dec
inc
jbe
jno
out
jle
mov
mov
movsl
mov
lea
adc
and
test
lahf
sbb
or
mov
sbb
adc
test
loope
notb
sbb
aam
cmpsl
jno
mov
cmp
in
cmp
sbb
and
sbb
xchg
jmp
cmp
sahf
outsl
xor
push
cmpl
loop
push
push
lret
repnz
and
push
inc
mov
mov
ja
adc
insl
and
bound
or
and
mov
lcall
dec
rorl
add
sbb
cmp
xor
push
or
lea
xlat
mov
cmp
jno
push
gs
push
jmp
push
movsb
rcl
jp
bound
xor
jbe
mull
fcmovne
jp
adc
insl
shlb
push
arpl
sbb
outsl
inc
mov
jle
sbb
jecxz
dec
adc
or
mov
inc
push
mov
sbb
sahf
sbb
inc
cmp
std
out
stc
sahf
repz
insl
push
push
mov
add
xorb
loop
xchg
rcrb
loope
leave
xor
dec
bnd
ss
aam
js
cltd
loop
adc
std
inc
fs
cmp
lcall
pop
mov
fwait
sub
movsl
sbb
inc
fwait
pop
jmp
pop
aad
push
xchg
scas
jne
lcall
mov
add
and
lret
and
jbe
enter
fmull
and
and
filds
je
in
movsb
push
dec
out
cmp
adc
out
arpl
mov
movsl
stc
pop
mov
sbb
lcall
insb
dec
cmp
lea
fidivl
dec
dec
jge
je
inc
movsb
hlt
orb
mov
push
js
bound
jp
jle
mov
fiaddl
dec
cmc
je
and
xrelease
adc
xchg
or
test
add
icebp
sbb
loope
xchg
imul
add
and
or
outsl
sbb
fimull
imul
sbb
imul
lods
enter
popa
pusha
pop
jmp
aad
push
push
repz
push
xchg
mov
aad
lods
insb
push
shlb
repz
lea
or
scas
or
xchg
bound
push
sbb
jecxz
mov
cltd
stos
popf
mov
lret
mov
mov
lods
roll
xor
loop
mov
imul
xor
jb
sbb
add
fs
mov
inc
outsb
jmp
lock
push
sarb
movsb
popa
pop
adcl
mov
mov
push
mov
loope
mov
sbb
leave
xchg
inc
fyl2x
pop
out
scas
sbb
insl
aad
inc
pop
mov
adc
push
test
adc
dec
out
test
icebp
stos
push
shl
inc
in
ret
nop
push
push
test
leave
imul
ljmp
je
in
insl
mov
loopne
xlat
in
int3
dec
jmp
ja
jle
cmc
jno
in
std
pop
jne
movsb
psubd
mov
outsb
adc
inc
jne
pop
cmp
jb
jno
jmp
mov
fadd
add
pop
or
lcall
jne
pushf
jmp
pop
mov
je
jno
xchg
nop
jno
shrb
push
imul
xor
adc
mov
fistps
push
inc
movsl
lods
or
or
lea
cmp
mov
inc
xchg
mov
nop
call
fsubrl
repz
ret
pop
pop
cmp
orl
jp
xchg
cmpl
bound
sbb
add
mov
daa
push
xlat
push
fcmovbe
rol
or
inc
adc
xor
out
ret
push
xchg
adc
xor
es
push
or
inc
xchg
xor
push
sub
lods
mov
mov
sahf
je
std
fistpll
sbb
xchg
cmpsl
add
in
addr16
xchg
sbb
es
xor
xchg
inc
cmpsb
pop
mov
sub
clc
pop
cmc
or
sub
dec
add
test
imul
adcb
add
adc
addb
pushf
dec
in
xor
add
test
xchg
mov
mov
out
or
jbe
sbbl
mov
adc
arpl
mov
push
push
arpl
push
ja
jg
sbb
push
hlt
lcall
shlb
pop
je
push
pop
adc
bound
fcompl
push
leave
insb
mov
je
enter
mov
pop
and
sbb
ds
or
sbb
mov
push
sti
rclb
pusha
xor
push
shrb
dec
lds
xchg
xor
and
or
sbb
les
xchg
jno
jbe
jge
test
adcb
test
xor
jmp
js
in
cmpsl
nop
sub
clc
pop
std
pop
and
pushf
ja
mov
mov
insl
inc
pop
fstl
or
nop
lcall
cmc
arpl
add
mov
rcll
cmc
mov
xchg
or
fsubrs
loope
jbe
jl
ljmp
dec
cltd
nop
xchg
aad
push
sub
xchg
jl
xchg
divb
push
vcvtpd2dq
ret
cltd
movb
mov
cmc
jno
xor
rcr
cmpsb
inc
fisttpll
dec
imul
sbb
and
push
add
clc
or
mov
fnsave
stc
cmp
ret
mov
jnp
and
push
icebp
sub
addr16
decb
xchg
or
jne
pushf
xchg
movb
ret
mov
xchg
jge
or
or
sar
sub
test
mov
mov
and
fs
ss
packsswb
shrl
movsl
je
cmp
mov
and
mov
out
mov
lret
pop
fistpl
adc
into
jns
data16
sbb
or
xchg
or
cmp
arpl
ja
or
jl
insl
sti
jbe
inc
xchg
push
nop
gs
aaa
mov
in
jbe
dec
xor
xor
shl
mov
pushl
stos
xorb
push
jbe
rorl
jmp
mov
mov
iret
lcall
xchg
push
jae
jmp
in
xchg
stos
pop
pop
or
cmp
jge
jp
jg
jge
sbb
repnz
xchg
push
mov
je
movzwl
icebp
stc
add
xor
aad
inc
push
pop
jnp
sub
and
push
les
movsl
bnd
testb
and
and
data16
mov
fildl
je
xor
dec
dec
add
or
xchg
sub
and
mov
movsb
int
inc
mov
pop
fwait
out
mov
pop
aas
jns
cmp
pop
les
xchg
xor
test
mov
mov
std
pop
in
sbb
sahf
aam
pusha
and
fcompl
and
pop
jg
scas
mov
ror
arpl
dec
xchg
jns
sub
add
dec
call
loope
ja
ja
pop
jb
sbb
sbb
in
sarl
xchg
jg
add
inc
jmp
js
cmp
adcl
lcall
loope
sbb
adc
ljmp
outsl
into
mov
sbb
rorb
jno
pusha
lcall
bound
daa
fcmovbe
mov
fadds
repz
mov
scas
test
adcb
imul
popf
daa
mov
or
or
dec
fidivs
cwtl
sar
test
dec
mov
dec
cmp
jb
dec
into
pop
push
mov
lahf
adc
sub
mov
xchg
insb
jecxz
inc
jbe
jbe
out
jne
clc
xchg
mov
fidivrl
ljmp
mov
mov
push
lret
sbb
pop
push
xchg
pop
call
xor
jbe
cli
sahf
mov
jg
popf
mov
mov
or
adc
mov
ss
push
or
inc
mov
fsubs
sub
lods
inc
cltd
inc
and
push
mov
cmc
sub
pop
push
add
jle
jge
dec
xchg
stos
in
bound
sub
add
outsb
sub
xchg
dec
xchg
bound
cmpl
stos
mov
and
orb
ret
push
and
lcall
ja
xchg
fstpt
mov
hlt
mov
jns
jo
push
sbb
les
push
pop
stos
dec
incl
stos
xchg
insb
cmovbe
jae
jmp
jae
mov
push
negb
fidivs
mov
gs
jmp
mov
dec
mov
lds
xchg
or
insb
xor
jp
adcb
adc
call
xchg
andb
xchg
lcall
xchg
adc
data16
pop
stos
shl
lods
repnz
inc
and
xor
push
sub
xchg
out
jne
pop
call
jo
pop
loope
mov
sub
les
aam
es
movb
aaa
cmp
mov
sbb
in
adc
push
icebp
push
mov
cmp
sub
push
xor
call
and
xchg
hlt
inc
mov
fbld
in
push
cwtl
jo
add
subl
stos
in
sub
mov
xor
clc
test
sbb
ficoms
jo
push
jl
lods
cmp
and
mov
pop
pusha
add
in
sbb
mov
add
sub
xor
jns
mov
xor
shr
aas
int3
fs
lea
call
js
adc
pop
or
arpl
lret
cmpsl
enter
or
pop
or
fdivl
mulb
push
mov
ret
xchg
adc
or
or
nop
push
sub
pop
popf
lahf
daa
jo
cmp
adc
data16
xchg
mov
mov
adc
pop
inc
sub
xor
xor
ja
sub
or
push
shr
fisubrs
and
cwtl
push
sub
jns
xchg
sahf
push
ja
add
jae
inc
add
dec
jne
mov
jbe
xchg
cmp
jl
add
idivl
mov
jnp
hlt
mov
mov
out
repz
jns
imull
mov
mov
arpl
mov
jb
lods
or
mov
popf
jecxz
adc
push
jmp
iret
dec
or
push
push
cs
cld
dec
repz
fcoms
adc
push
adc
push
jbe
push
jb
lcall
mov
mov
cmpsl
mov
xchg
push
push
dec
inc
dec
in
add
out
add
repnz
jne
mov
xchg
adc
adc
cmpsb
scas
inc
push
lea
cs
in
lods
or
ret
jge
xor
add
mov
test
lods
xchg
repnz
pop
out
out
pop
movsb
repz
out
sub
jmp
inc
repz
inc
mov
jae
xchg
stos
inc
test
shlb
xchg
bound
xor
ja
es
dec
ss
pop
shl
sbb
decl
dec
sub
lods
push
mov
inc
rcll
push
add
les
and
loopne
add
loop
fwait
jl
fidivrl
std
jge
ret
and
ds
xchg
pop
xor
mov
scas
push
xor
cvtps2pi
mov
in
lcall
imul
mov
movb
mov
inc
je
movsb
cld
xor
or
xchg
jae
and
cwtl
push
mov
mov
ds
xor
pop
push
mov
mov
xchg
test
jg
fnstenv
arpl
test
addb
test
sbb
and
nop
lds
mov
or
jns
mov
jecxz
cmp
push
insb
cwtl
fisubs
loope
cmc
out
xor
cli
jne
and
rcrb
mov
cmc
gs
push
lret
dec
and
push
cltd
cli
repz
mov
inc
sbb
cmp
cwtl
fimull
je
and
add
xchg
cmp
ljmp
mov
in
js
xchg
outsb
xchg
xchg
pop
mov
lahf
sbb
int3
in
sbb
push
ret
fdiv
fisubrl
and
or
add
xor
cmc
fwait
arpl
imul
sub
mov
push
dec
pop
cmp
int3
cltd
or
test
rolb
mov
mov
sub
jo
cmp
lods
push
and
xor
gs
pop
inc
test
into
popa
xorl
fcoml
lcall
pop
mov
jge
stos
jle
outsl
push
std
dec
push
cltd
and
popa
mov
pop
scas
mov
sub
lock
dec
repz
sub
imul
insl
sub
outsl
cli
push
push
scas
stc
jge
sarb
and
js
add
inc
fwait
sub
pop
sbb
fcoml
mov
loopne
xchg
mov
jge
fnstenv
scas
mov
cmpsb
test
andl
scas
xor
jg
outsl
insb
sbb
jbe
sub
das
test
xchg
dec
icebp
test
jl
lret
and
dec
push
cmc
sbb
or
and
lret
push
sub
add
lahf
cwtl
push
movsl
inc
ret
lahf
cmp
loopne
scas
or
icebp
movsl
fs
fiaddl
leave
iret
cmp
ja
sub
xchg
insl
loop
push
and
rcll
outsb
xchg
in
sbb
push
bound
mov
pop
sahf
inc
shl
pop
pop
arpl
or
add
int3
in
stos
inc
push
and
insl
loopne
popf
and
lret
nop
mov
ljmp
mov
shlb
sbb
std
out
pop
dec
push
mov
jge
fcomps
loope
or
bound
lea
lock
inc
push
xchg
ret
imul
inc
jbe
mov
rol
arpl
ss
push
mov
adc
cmp
mov
fprem1
stos
pop
gs
fimuls
jne
xchg
out
fsub
mov
pop
or
popa
xchg
cmc
dec
je
fbstp
sub
mov
jne
js
mov
adc
sbb
sub
sbb
add
mov
jmp
iret
imul
jl
mov
xchg
ss
ret
btc
add
sti
cltd
and
scas
std
ret
arpl
pop
loop
arpl
lds
and
repz
sbb
push
rclb
jae
dec
xchg
aam
popa
xchg
imul
loop
lret
push
mov
mov
stos
stc
pop
and
ss
stos
mov
cmp
fndisi(8087
push
loopne
fsub
xchg
outsl
and
fisttpl
pop
jno
insl
sbb
jae
outsl
jge
mov
mov
imul
cmp
xchg
cwtl
inc
mov
pop
add
inc
add
cs
cli
jno
mov
daa
inc
popa
inc
out
dec
cmp
shrl
out
or
xor
pushf
jb
push
repz
push
pop
jb
call
lret
fcompl
sbb
hlt
xchg
rcrl
mov
out
dec
in
jb
jmp
mov
jno
adc
xor
push
aam
rcl
mov
mov
fs
clc
inc
pop
gs
dec
aad
mov
cmp
inc
dec
jle
pop
and
dec
stos
adcl
jns
push
mov
out
pop
enter
and
lret
push
aad
cwtl
push
mov
outsl
jns
mov
outsb
mov
les
lea
addb
std
adc
inc
loop
popa
es
and
jno
sub
add
xchg
fadd
inc
mov
adc
ljmp
mov
loope
jbe
inc
mov
jp
lcall
inc
xchg
js
mov
movsl
lcall
je
dec
jp
add
leave
push
jmp
jle
test
int3
push
push
sbb
stc
and
xor
jmp
pop
in
fldl
lea
sub
mov
jge
adc
mov
inc
rep
push
pop
idiv
rcr
cmp
dec
test
mov
mov
fstl
dec
popa
js
js
out
sbb
test
das
push
test
or
push
cltd
add
cld
xchg
fcoms
fcmovu
pop
cmp
test
lods
sub
mov
push
nop
pop
xchg
or
bound
outsl
xor
push
nop
push
insb
push
cmp
fs
jb
mov
lock
xchg
mov
push
out
sbbl
cmp
movsl
push
hlt
add
pushf
xchg
xor
lahf
lret
adc
mov
inc
insl
jg
mov
repz
adc
ret
xor
arpl
add
into
addr16
enter
mov
into
mov
xchg
jecxz
jns
imul
push
es
cmp
xchg
add
sbb
mov
cmp
lahf
xchg
and
add
testb
pop
je
rol
daa
popa
mov
mov
xchg
imul
imul
lods
jb
ret
cmp
mov
jae
stos
add
or
insl
jl
xor
pop
outsl
loopne
mov
in
dec
mov
push
stos
xor
subl
pop
mov
mul
repnz
sbb
cmp
popa
or
sbb
sysenter
pop
or
flds
mov
lds
test
jae
xchg
jno
mov
jne
xchg
jle
pop
imul
adc
or
jmp
jns
aaa
cmp
push
das
fnstenv
movsb
mov
pop
pop
mov
and
stos
push
fsubl
jecxz
and
xor
je
je
sub
dec
jle
push
pop
or
push
adc
lea
adc
std
bound
jae
jnp
adc
cmp
decb
cmp
and
aam
orb
fstps
in
mov
jbe
imul
push
adc
push
mov
test
gs
stos
lods
mov
clc
je
xchg
es
cld
cli
adc
sub
sub
xor
jp
dec
sub
push
lcall
loop
pop
sbb
enter
lret
loopne
repz
paddsw
inc
push
insb
pusha
mov
cld
andb
cmpsb
pushf
mov
mov
clc
sbb
or
sub
cmp
rolb
les
js
add
xchg
gs
imul
lds
repz
addr16
insb
call
loope
dec
fs
imul
mov
scas
or
sub
xchg
bound
pushf
lcall
mov
aaa
cli
push
push
leave
lea
leave
fwait
mov
and
sub
jns
out
cmp
xor
or
sub
push
mov
dec
faddl
mov
cs
push
xchg
xor
stos
inc
out
movsl
push
fsubs
push
in
popf
les
mov
enter
cwtl
test
inc
jno
ret
xor
jle
imul
shrl
xorl
clc
dec
enter
push
cmp
cs
cmpb
cli
dec
les
andb
fstpt
adc
push
outsb
cmp
pop
xchg
int3
arpl
js
sub
lret
cld
jbe
mov
dec
das
into
xorl
cmpsb
cmp
or
adc
jbe
cltd
ficomps
xchg
push
jne
mov
cmp
shrb
sub
push
add
rorb
xlat
fsubp
jge
push
jns
es
lds
daa
mov
cmp
pushf
add
push
push
fldl
out
fcompl
adc
dec
bound
sbb
mov
cmp
dec
mov
ret
movsl
pop
adc
pop
mov
pop
pop
or
push
xchg
rcl
xchg
in
outsl
jge
pop
pop
inc
lret
mov
mov
roll
xchg
aaa
jo
and
pusha
out
or
pop
in
push
aad
sub
stos
xor
mov
into
cmp
fs
xor
adc
pusha
popa
lret
jb
or
sub
pop
xchg
lret
and
push
bound
jmp
adc
xchg
out
gs
scas
addb
pop
sbb
lret
loope
mov
push
bound
pop
pop
sbb
fisubrl
out
ret
jnp
adc
cmpsb
pop
jns
daa
mov
rep
std
dec
lahf
add
mov
cmp
insl
sub
add
repz
cli
fwait
ss
aaa
loope
add
stos
imul
mov
dec
cld
xchg
arpl
mov
xchg
fistl
inc
add
pop
push
jb
sbb
mov
jnp
or
adc
push
mov
in
xchg
push
xchg
sbb
cmpsb
fisubl
imul
cmpsl
cs
loope
icebp
addb
inc
xchg
xchg
adc
mov
enter
orl
sub
stos
and
sbb
int3
jg
test
cld
cmpsb
pop
dec
daa
aam
orb
xlat
fsubrl
lcall
pushw
lea
push
push
gs
out
xor
rorb
and
inc
xchg
pop
mov
xor
jmp
xchg
xchg
stos
push
stos
pop
xchg
push
cld
clc
pushf
or
and
inc
jnp
popa
add
movsb
jo
mov
or
xchg
cmp
push
leave
andb
mov
push
insb
cmp
pop
xchg
xchg
jle
addr16
jl
add
mov
xchg
jnp
pop
lds
cmp
mov
lea
adc
pop
cwtl
adc
cmp
adc
in
and
adc
inc
cmc
xchg
in
insb
and
xchg
or
das
jb
dec
std
jmp
xchg
xchg
lcall
aaa
sbb
jne
roll
out
mov
and
arpl
gs
movsb
js
stc
inc
push
fs
fistps
pop
mov
jge
rcr
jle
subb
fsts
dec
aad
or
scas
adcl
push
lcall
popa
lock
mov
repz
outsl
repnz
jmp
lret
cmp
addr16
mov
hlt
ret
out
pop
cmp
jo
out
inc
and
adc
jo
and
imul
jbe
sub
dec
xchg
jae
aas
popl
imul
pop
jg
mov
mov
std
scas
sbb
popa
jne
mov
sbb
pop
std
mov
loope
cmpsb
sahf
push
test
pop
sarl
xchg
sbb
mov
xchg
lds
aad
xchg
jo
lds
ret
cmpsl
or
xor
mov
and
jge
das
pop
push
jns
ficoms
movntps
out
mov
push
es
dec
out
jns
inc
cmp
aad
cmp
push
mul
push
xor
ds
fidivl
inc
and
iret
pop
scas
push
xorl
rcll
mov
popfw
rclb
jne
jbe
aad
out
jo
lds
mov
mov
lcall
mov
inc
pop
lods
xchg
fstl
int
rcll
or
add
ja
xchg
jae
test
xchg
jns
pusha
bound
push
popa
pop
or
push
jl
inc
in
sub
inc
add
sbb
insl
and
add
loop
and
pop
sbb
in
xor
adc
outsb
stc
jno
aad
cmp
loope
out
dec
jo
jmp
pushf
jg
mov
rcl
add
out
leave
inc
sbb
add
xchg
fstpl
int
rcll
lea
bound
daa
iret
cmp
jb
out
jbe
pop
rolb
mov
cld
push
jp
fnstenv
gs
mov
cld
cmp
std
or
xchg
ds
es
cmp
mov
rcrl
aaa
sbb
adc
sarb
mov
pop
xor
xchg
test
sbb
dec
mov
int
sbb
cs
decl
mov
jle
pop
ret
mov
call
or
push
dec
js
pushf
cmc
les
outsb
cmp
lcall
lea
adc
push
pusha
pop
arpl
mov
clc
push
xlat
lcall
push
arpl
xchg
jne
inc
dec
push
movsb
arpl
mov
mov
mov
testb
dec
mov
ljmp
mov
test
addr16
cmp
popf
mov
ljmp
pop
mov
or
aam
cmc
and
ljmp
fstl
mov
sbb
imul
stos
dec
stc
cltd
int3
pop
lcall
jbe
ljmp
mov
arpl
pop
jb
lods
pop
decl
pop
jno
mov
clc
sub
iret
in
daa
stc
jp
es
scas
pop
jns
cmp
cmp
adc
scas
ret
mov
int
and
jne
cs
repnz
xchg
div
pop
inc
aam
or
add
rcll
icebp
leave
jg
ret
and
push
test
cmp
cmp
or
mov
sbb
pop
sbb
xor
out
cmp
arpl
mov
fs
test
out
jle
shlb
test
es
test
test
add
sbb
cmp
cmp
jae
ret
xor
xor
stc
ja
push
push
jnp
popf
mov
pop
sbb
mov
repz
ds
mov
mov
mov
dec
pop
jno
jno
pusha
sbb
mov
cmp
mov
js
pop
outsl
push
push
and
cld
filds
jle
out
es
fucomp
add
pop
roll
or
and
xchg
and
mov
push
xchg
dec
xchg
push
jmp
mov
xor
or
jge
push
or
pop
mov
xchg
xchg
pop
je
ss
hlt
sub
fcoms
movsl
jle
aas
les
loop
mov
iret
dec
inc
test
fdivr
outsl
adc
int3
subl
adc
sbb
xchg
mov
pusha
mov
xchg
rcll
test
outsb
daa
xlat
push
mov
mov
ss
mov
mov
mov
xchg
gs
shl
push
mov
pop
jle
inc
fiaddl
pop
jge
and
lods
xor
jo
cmp
scas
insb
sub
mov
dec
push
jnp
test
dec
stos
fisttpl
mov
out
fstpt
dec
dec
pop
lods
repz
cmp
repz
mov
fnstsw
dec
pop
push
shll
dec
lret
and
xor
xchg
insb
mov
cwtl
jp
pop
imul
cmp
ja
mov
test
repz
cmp
jb
out
xchg
subl
les
jmp
dec
mov
data16
push
ss
xchg
lret
jo
inc
xor
fnstenv
iret
cmp
adc
jno
and
imul
test
pop
stos
stos
adcl
mov
mov
xlat
loope
shrl
lret
ljmp
push
push
cmpsb
cmp
cmc
stc
push
lcall
cmp
sub
daa
cmp
je
aaa
adc
hlt
jecxz
icebp
mov
xor
xor
xchg
xor
or
loop
mov
xor
into
push
push
pop
loope
lods
imul
or
out
cmp
xchg
pop
jno
fiaddl
inc
cmp
sbb
lret
cmpsb
and
ja
dec
jmp
pop
lret
out
lea
cmp
jno
xor
pop
jo
xchg
jmpw
data16
push
sbb
xchg
insb
cwtl
inc
xchg
pop
mov
mov
pop
cmp
sti
ja
xchg
movsl
out
scas
push
dec
jae
jbe
mov
add
xor
mov
lahf
fisubs
addl
mov
scas
sbb
add
incb
test
je
adc
fildll
or
jmp
bound
push
lret
mov
mov
push
jne
out
arpl
push
push
add
push
add
clc
mov
lcall
fcomi
bound
fists
jg
mov
mov
in
subl
test
icebp
testl
call
leave
mov
xchg
fsubrp
pop
xor
and
pusha
mov
add
faddl
cmp
sub
dec
jmp
outsb
push
push
je
pop
and
insl
pop
rcrl
stos
xchg
jae
rolb
mov
xchg
mov
xor
aas
cmpsl
popf
cs
mov
leave
arpl
ja
cmp
mov
into
loope
sahf
inc
adc
mov
addr16
pop
int
push
jg
gs
repz
adc
pop
xor
or
fs
jb
and
dec
cmp
jne
jb
push
and
inc
shrl
xor
fucomi
inc
push
ss
mov
sub
dec
in
xorb
addr16
cs
in
add
push
pop
leave
push
jae
push
add
test
dec
daa
sbb
jp
cld
ja
fs
jmp
movsb
mov
dec
and
repz
jge
lds
ret
and
mov
push
jl
sub
lret
cmpsl
push
xchg
cli
push
cmp
leave
lds
and
arpl
mov
pop
imul
je
or
push
adc
jle
pop
jp
mov
add
repz
jno
pop
push
addb
les
xchg
xchg
or
mov
pop
scas
fincstp
xor
pushf
inc
lret
ss
mov
pop
rorl
adc
and
or
jne
and
out
cmp
and
mov
pshufw
adc
jle
mov
std
divb
out
sbb
push
jbe
add
pop
pop
adc
pop
add
addl
ljmp
jnp
sti
adc
test
mov
jb
push
movsl
out
pop
arpl
enter
push
xor
and
jmp
push
cmp
in
pop
xchg
mov
sub
or
mov
int
cltd
aam
cmpsl
mov
rclb
in
int
inc
test
rcrb
lds
ret
and
cmpsb
repz
pop
rcrb
cmp
loop
add
cmpl
dec
push
mov
or
bound
mov
push
mov
mov
dec
addr16
pop
jg
pop
push
inc
push
aam
inc
rclb
push
xchg
sbb
dec
push
dec
and
out
mov
in
sti
rcrl
dec
lea
jmp
jne
push
fcomip
lahf
xor
cmpsl
pop
je
xor
cwtl
es
jl
iret
fs
insl
push
aad
lret
jnp
sbb
jge
jbe
pop
xchg
xchg
lea
insb
xchg
inc
shrd
jae
mov
jmp
sub
fists
pop
ret
mov
scas
adc
add
jle
in
sahf
mov
xchg
mov
push
dec
pop
test
pop
in
add
js
outsb
dec
ror
icebp
xchg
stos
dec
enter
xor
ret
in
out
jne
mov
jb
adc
stos
sbb
cmpsl
ljmp
mov
pop
adc
gs
mov
in
xor
mov
cmpsl
cmpsb
imul
cmpsl
jg
mov
in
stos
sbb
xchg
jbe
xchg
lahf
cs
dec
dec
aas
fldcw
mov
mov
or
pushf
fisttpll
lret
push
fwait
sbb
mov
jecxz
ret
adc
stos
outsl
lret
jne
pop
adc
add
pop
jp
cwtl
xor
imul
dec
push
adc
repz
bound
jle
dec
jg
mov
incb
lods
push
pop
dec
add
imul
data16
jne
jl
imul
mov
test
xchg
jno
mov
inc
xchg
loop
roll
shl
xchg
mov
pop
xchg
add
cmp
popa
es
push
jmp
fstpl
jmp
xchg
jno
push
lea
cwtl
adc
ss
gs
popa
lds
insl
jno
lods
imul
stos
js
pop
pop
mov
ret
jg
sbb
xchg
mov
sbb
inc
sub
repnz
push
cmp
fwait
lock
xor
add
xor
pop
nop
in
test
dec
inc
repnz
sbb
xchg
pop
jge
std
mov
pop
pop
pop
mov
popa
pop
mov
jp
pop
xor
sub
mov
inc
cmpsb
dec
xor
sbb
xchg
add
ror
cmp
outsb
mov
aas
adc
stos
jg
adc
aad
fcompp
xchg
aad
push
in
jmp
xchg
cmp
rcrl
adc
xchg
jp
jp
mov
shrl
cmc
pop
mov
repnz
xlat
add
jb
push
les
pop
mov
loope
jmp
push
testb
leave
in
cmc
jae
cmp
pop
jne
andl
jge
das
xor
cs
xlat
out
push
cwtl
xchg
pop
popf
adcb
andb
adc
or
test
loopne
jbe
ss
lods
dec
hlt
fidivrs
popf
mov
cmp
insl
xor
xchg
mov
ljmp
jnp
cmp
shrl
repz
sbb
dec
mov
or
add
movsl
into
into
mov
in
xchg
mov
sbb
test
into
mov
mov
xchg
fnstenv
sub
outsb
sbb
test
add
imul
test
cmp
mov
push
pop
jge
iret
jg
repnz
stc
mov
insl
cmp
js
xorb
sbb
mov
sarl
sbb
sub
movsb
adc
movsl
jno
rcll
aas
repz
mov
lea
imul
mov
pop
mov
push
sub
scas
xchg
jl
cltd
orl
push
into
pop
or
scas
xchg
xchg
mov
in
lods
pop
xchg
add
loop
cmp
xor
nop
mov
int
sbb
lret
lea
xchg
pop
add
fstl
bound
arpl
mov
add
pop
fnsave
mov
jbe
dec
int
push
subl
fisttpll
es
outsl
sahf
insl
imul
aad
int
test
pop
or
xchg
xchg
popf
cmp
gs
outsb
jne
and
push
dec
mov
jno
adc
cltd
xchg
push
icebp
xlat
adc
out
pop
cmpsl
inc
outsb
cmp
inc
cmp
rcl
sbb
popa
leave
popf
adcb
xorl
repnz
flds
outsb
in
cmpb
in
addr16
mov
sbb
sbb
pushf
and
jmp
cmpl
pop
mov
int
xchg
dec
in
bound
sub
cli
insl
adc
mov
sub
mov
inc
add
mov
jne
push
sti
insl
into
lahf
jne
and
pop
or
rcll
rcl
sbb
dec
xor
icebp
sbb
icebp
addl
push
scas
loop
push
cmpsb
loop
push
sahf
loop
push
xchg
loope
mov
mov
into
jp,pn
lds
jbe
in
icebp
sub
mov
stos
mov
loope
stos
xchg
cmc
outsl
sbb
jb
icebp
loopne
sbb
mov
adc
pop
inc
mov
dec
leave
mov
pop
icebp
xchg
nop
sbb
es
orl
pop
imul
sub
out
jle
lods
outsb
sub
mov
fsubrl
sbb
pop
sub
mov
sbb
jae
adc
cmc
cli
das
mov
loopne
adc
xlat
pop
addl
pop
xchg
and
and
xchg
push
gs
hlt
out
inc
test
cmpsb
sub
in
insl
jp
jp
xchg
pop
push
dec
out
jl
jmp
in
sub
lret
mov
andl
cmp
stc
out
sbb
mov
xchg
pop
sbb
jae
jbe
mov
arpl
jae
dec
test
test
mov
cmp
sbb
sbb
add
and
outsb
xchg
mov
loop
push
int3
ja
dec
push
pop
jmp
fbstp
ljmp
xchg
jmp
icebp
sbb
inc
xchg
fwait
xchg
imul
jo
dec
cmp
scas
xor
popf
notb
cmp
adc
out
shrl
outsl
pop
icebp
inc
push
sub
cmp
push
ja
jmp
sub
aas
movsb
icebp
lods
roll
or
and
xchg
shll
mov
push
and
in
ja
out
mov
pop
out
movsl
push
aad
mov
cmc
pop
add
lods
leave
cmp
mov
inc
push
stos
outsb
inc
into
push
xor
dec
and
fdivrs
dec
cmc
in
scas
test
xor
leave
mov
dec
adc
add
jmp
mov
addb
xchg
rcrb
fwait
dec
mov
ja
jno
repnz
sbb
jl
adc
push
mov
cmp
mov
into
sbb
fists
nop
es
adc
xlat
scas
and
iret
mov
mov
dec
shrl
out
xor
add
pusha
ffreep
lret
inc
ja
xor
imul
insb
sti
outsl
inc
fstps
js
pop
cmp
xchg
out
aam
jecxz
pop
dec
push
out
dec
sub
pop
mov
jo
sub
aad
pop
jp
addl
inc
add
cmp
jnp
jmp
pop
fwait
cmp
data16
hlt
shlb
xchg
or
outsl
int
xor
mov
test
rclb
cmpsl
icebp
das
dec
out
dec
repnz
rorb
lods
jp
aam
or
cmp
call
cmpsl
inc
and
jle
scas
cmp
aad
int3
xor
arpl
xchg
test
dec
or
pushf
mov
inc
fdivrs
lea
es
mov
xor
pop
les
push
mov
and
mov
mov
mov
pop
lret
jg
lea
mov
movsb
push
mov
push
cmpsl
sub
adc
insl
dec
add
in
ds
sbb
pop
pop
lahf
dec
or
xchg
mov
cmp
xlat
ljmp
test
sti
cmp
mov
pop
mov
ds
jg
fxch
js
pop
jmp
call
nop
scas
loope
xchg
imul
insl
push
xchg
add
xchg
add
add
inc
notb
xchg
mov
dec
test
xchg
xchg
jecxz
cmp
pop
push
aas
rol
fcoms
adc
mov
in
dec
or
sbb
and
push
xor
pop
mov
or
mov
in
xor
jg
inc
in
stc
mov
jle
or
pop
je
pop
jne
push
out
push
test
dec
movsb
mov
pop
and
daa
dec
push
mov
gs
xchg
xor
pop
jmp
lds
dec
and
inc
lcall
push
sub
add
ss
leave
aas
push
sbb
fimull
sbb
les
scas
push
std
mov
xor
pop
cmpsb
dec
jae
xchg
cmp
inc
dec
push
jmp
aaa
int3
pusha
leave
lcall
add
lcall
mov
and
push
or
cmc
cltd
shlb
mov
lcall
mov
push
int
iret
add
lods
mov
rclb
arpl
cmp
inc
sub
js
icebp
popa
cwtl
test
sub
icebp
push
and
and
hlt
repz
sbbb
cmp
rorl
jb
fwait
pop
movsl
daa
imul
bound
or
push
addr16
aad
pop
aam
inc
mov
add
or
outsl
into
dec
stos
outsb
cmpsl
repnz
mov
lods
popa
sbb
lcall
mov
inc
loope
push
sub
cmp
add
cmp
push
inc
sbb
gs
mov
jne
int
lea
mov
adc
outsl
sbb
xchg
fimuls
sahf
push
jb
lret
jg
rolb
popf
sbb
out
out
inc
push
int
pop
leave
shll
push
insl
shll
sub
andb
jo
cmpsl
mov
cmp
mov
mov
pop
sub
xchg
sahf
test
and
movsb
adc
lds
aaa
dec
push
lret
adc
aad
test
push
popa
cmc
jb
in
sbb
fld
pause
push
and
movb
dec
insb
and
push
pop
jb
sbb
sbb
pop
sbb
pusha
inc
mov
add
test
out
xchg
dec
lds
xchg
arpl
scas
dec
jns
or
testl
insb
mov
jb
mov
push
dec
inc
cmp
sub
inc
inc
push
xorl
addb
add
dec
insb
inc
jbe
xchg
movsb
pop
mov
fdivr
imul
hlt
xor
and
rcl
jge
dec
add
andb
pop
inc
mov
jb
xchg
aam
mov
adc
roll
js
mov
sahf
stos
mov
jae
mov
mov
and
inc
sbb
out
sahf
inc
jno
test
xor
xchg
fdivrl
cltd
mov
add
in
je
aam
push
jle
mov
adc
xlat
orl
imul
pop
pop
clc
cmp
pop
sbb
ja
mov
gs
fstp
outsl
pop
dec
addr16
mov
cmp
movsl
test
push
jge
roll
imul
inc
jne
outsb
pop
sub
pop
adc
les
xor
fsts
dec
in
cmp
dec
fucom
insb
push
mov
ss
and
test
and
push
push
and
cli
add
mov
lcall
mov
xor
mov
das
cmc
push
pop
cmp
scas
popf
and
cld
out
or
jbe
mov
jb
push
xor
mov
dec
adc
sahf
pop
pop
scas
mov
mov
dec
push
in
daa
int
pop
fisubs
adc
pop
mov
add
cmp
xchg
lret
xor
lret
test
xor
enter
das
outsb
jns
test
sbb
dec
pop
push
das
bound
cmp
jno
out
out
in
lods
adc
lret
adc
into
mov
inc
jae
in
cmp
and
stos
mov
and
mov
fsts
sub
xor
faddl
xor
loop
cmp
sbb
test
xchg
in
mov
in
adc
out
add
xor
sub
push
aaa
inc
xchg
out
js
ljmp
out
pushf
out
push
arpl
xor
imul
pusha
ljmp
jb
or
ret
push
fildll
sub
dec
stc
add
sbb
inc
mov
aaa
loope
icebp
into
inc
mov
jo
mov
aas
shlb
xor
in
push
jmpw
mov
in
xor
jle
out
mov
or
je
push
cmp
add
mov
fwait
shll
out
cli
push
in
push
add
mov
xchg
xor
xor
clc
jb
push
inc
mov
imulb
les
sti
jle
das
icebp
xchg
mov
dec
fmull
pop
pop
xor
mov
test
fidivl
cmp
out
outsl
dec
xor
mov
jae
cltd
add
push
xchg
xchg
out
pop
xor
jbe
shll
mov
faddl
into
jge
call
enter
jb
lcall
xor
mov
mov
movsl
arpl
cmp
pop
push
cmpsb
popf
xchg
in
inc
std
push
push
add
xchg
cmc
sub
mov
in
and
adc
and
cmp
rcrb
sbb
ljmp
loope
jae
push
mov
enter
or
xlat
mov
lods
adc
insb
test
and
cmp
cmp
add
cli
add
test
and
aas
push
sbb
jae
xchg
pop
sub
sub
fidivl
call
jbe
les
dec
lds
xchg
cmp
pusha
xchg
jb
mov
cmc
iret
cmp
dec
push
ss
pop
add
lds
andb
dec
jle
jbe
cmc
ds
sbb
je
jnp
test
mov
bswap
out
inc
jge
imul
and
dec
mov
int
rclb
mov
pop
cmp
xchg
add
xchg
in
dec
or
mov
jno
movsl
call
lds
xor
lcall
jb
jns
rorb
fldt
in
or
int
mov
mov
fs
sbb
jne
mov
int3
icebp
mov
mov
arpl
dec
xlat
scas
or
test
hlt
jbe
push
sub
xor
sbb
dec
movb
ja
ficompl
icebp
and
xor
jmp
mov
jle
ja
shlb
mov
test
movsl
scas
inc
push
add
or
insl
jle
leave
push
ds
or
mov
jmp
push
out
add
ret
orb
push
aaa
repz
inc
jns
mov
loop
sahf
pop
pop
xchg
gs
imul
sbb
gs
jmp
int3
adc
mov
sar
jne
dec
mov
cmp
jb
je
stos
adc
addr16
xlat
pop
out
inc
data16
xchg
pop
scas
xchg
cs
dec
fwait
adc
mov
dec
sbb
rcrl
push
and
xor
clc
ret
stos
pusha
lret
add
mov
mov
xor
ja
inc
cmp
adc
adc
mov
lea
adc
or
idiv
xlat
bound
push
movsl
lods
in
pusha
inc
addr16
mov
insb
xchg
xchg
lret
pop
mov
jb
cs
int3
pop
mov
ljmp
adc
fdivrp
jb
mov
add
inc
cmpl
mov
pop
adc
fnstenv
push
xchg
mov
xchg
cwtl
adc
push
test
pushf
test
loop
in
test
ds
pop
lds
mov
icebp
ror
scas
cmc
popf
arpl
sbb
mov
jecxz
mov
lret
leave
jne
xchg
stos
test
inc
push
mov
push
inc
or
mov
xchg
div
cmpsb
adc
test
push
pop
pop
sbb
mov
dec
push
xchg
ja
mov
sub
rcl
or
enter
inc
fs
test
cmpsl
repnz
jae
lret
xor
test
inc
fmuls
sbb
setb
cmp
das
mov
loopne
sub
pushf
lret
loopne
mov
shl
adc
mov
mov
xchg
mov
out
aad
testl
cli
icebp
pop
bound
push
adc
sub
fidivl
mov
pusha
push
gs
mov
xchg
jb
sbb
clc
cmp
cld
xor
ss
dec
sbb
je
cmp
xchg
stos
xor
dec
dec
fwait
sbb
pop
pop
cmp
subl
cmp
pushf
je
icebp
in
push
pushf
pop
outsl
mov
add
mov
lahf
sub
leave
out
hlt
testb
adc
ss
mov
sub
inc
cmp
std
sub
pusha
mov
mov
outsl
ljmp
pop
jmp
imul
out
and
pop
out
gs
aad
je
jns
mov
dec
mov
adc
inc
inc
pop
inc
jmp
jne
insb
mov
fadds
fcmovbe
sbb
mov
dec
pop
push
stos
dec
out
xchg
bound
push
sbb
rolb
lods
ror
leave
jl
pop
jp
ret
fucom
int3
loop
pop
pop
dec
xlat
icebp
adc
cwtl
lods
cmpsl
mov
pop
dec
xor
adc
xchg
shll
dec
insl
aad
xlat
popa
loope
jp
pop
test
and
dec
pop
out
lock
divb
jns
cmc
leave
arpl
xor
mov
popa
jl
push
jmp
push
fnstenv
sahf
cmp
arpl
fwait
aam
shrd
insb
daa
adc
fisubl
out
cli
push
or
mov
xlat
push
push
adc
jae
jo
jno
adc
jo
addl
or
out
pop
push
push
pop
inc
orb
fidivl
outsb
xor
and
push
and
jb
ja
pop
cmp
jbe
pop
jo
fdivp
fwait
fwait
arpl
push
mov
sub
jmp
iret
das
mov
dec
jae
inc
rcl
addl
out
daa
cmpsl
push
jno
pop
out
sbb
rorb
pop
shlb
add
or
pusha
das
add
add
xchg
xchg
push
les
fsubrs
js
fmulp
xchg
jge
push
gs
cmpb
imul
scas
movsl
ss
inc
jns
test
fcoms
adc
mov
add
into
jg
je
push
jb
fdivrs
mov
sahf
test
cmp
in
mov
push
xchg
pop
inc
jp
push
add
in
shl
adc
sub
add
mov
sbb
mov
int3
xor
dec
pop
pop
scas
mov
and
out
iret
sub
gs
lret
dec
stos
inc
pop
jae
shrb
mov
mov
gs
pop
adc
sbb
jne
testb
xchg
repnz
rcl
mov
out
push
cwtl
pushf
dec
jns
cmp
pop
addr16
sub
shlb
scas
repz
and
sarb
dec
push
sti
pop
xlat
ret
clc
mov
icebp
mov
lret
xchg
bound
repnz
and
jnp
data16
std
aam
fldt
cltd
test
fisubs
mov
pop
and
ss
sarb
lea
insl
pop
push
mov
cmpl
orl
push
xchg
pop
jecxz
cmpsl
cmpsl
push
push
daa
clc
cltd
xchg
push
mov
pop
and
dec
jo
mov
push
mov
sbb
test
mov
aam
outsb
mov
add
pop
fnstsw
jle
xchg
insb
sub
lcall
jl
fildl
lods
dec
sbbb
mov
cmp
sti
stos
and
jp
adc
fisubrs
into
mov
push
xchg
stc
pop
inc
cmp
sub
aad
mov
xchg
push
dec
or
and
xorl
mov
and
add
push
scas
xchg
repz
dec
leave
ljmp
mov
dec
fildll
cmp
adc
test
dec
mov
jns
inc
inc
ds
lahf
or
data16
cmp
xor
inc
ficomps
bound
les
jg
cmc
sahf
aad
lds
mov
dec
cltd
jb
push
lods
imulb
jae
fdivr
pusha
adc
xor
jnp
xchg
mov
lret
packsswb
es
aad
dec
icebp
and
mov
arpl
mov
push
mov
pop
jmp
push
xor
je
mov
pop
hlt
stos
addr16
add
push
pop
icebp
mov
iret
mov
lods
cwtl
jle
addb
sbb
xor
adc
xor
xchg
adc
les
fwait
lds
or
dec
ror
clc
mov
jge
pop
inc
lret
pop
pop
insl
xchg
cmp
dec
scas
sti
sbb
das
jnp
fmuls
add
lods
dec
shll
sti
and
sbb
pop
fwait
pop
and
imul
xor
fsubrl
xchg
jb
adc
nop
arpl
xor
repnz
int
adc
mov
jae
add
cmpsb
cmc
xchg
movsl
sub
pop
mov
cwtl
pop
dec
ds
jl
add
dec
insb
addb
push
and
test
push
test
jmp
insb
lock
xchg
imul
jg
aaa
lcall
inc
scas
pop
push
leave
cmpb
sub
sub
cmpsb
xor
mov
lahf
fldl
fwait
and
aad
cwtl
cmpsb
loopew
insb
shr
in
cld
sub
bound
pop
xchg
mov
jle
cmpsl
insl
jp
xchg
stos
sti
bound
cltd
xor
mov
lea
dec
inc
pop
inc
stos
sbb
or
imul
shlb
testl
lods
mov
out
mov
scas
jne
orl
pop
je
xor
shrb
popf
fs
outsb
jp
inc
test
sub
mov
stos
mov
fcomps
cs
mov
fs
int3
mov
jbe
scas
mov
push
mov
xchg
inc
negl
xchg
fsubl
xchg
mov
push
xchg
gs
lahf
pop
xorb
pop
psubb
sub
sbb
xor
jno
cmpsb
and
mov
push
test
jno
jbe
push
je
pop
mov
test
ds
cmp
iret
adc
lahf
insb
scas
cmc
pop
ss
push
xor
data16
out
sub
outsl
repnz
mov
jns
xchg
push
arpl
pusha
loopne
je
xor
jb
dec
jno
sub
gs
inc
xor
nop
xchg
sbb
int
mov
push
inc
fsubrs
mov
xchg
rcll
inc
mov
jg
bound
insb
xor
push
icebp
cmp
sub
push
jecxz
ret
nop
push
lret
xlat
xchg
aam
xchg
push
lds
movl
mov
fisttpl
push
pop
std
sbb
xchg
push
sahf
sbb
fwait
enter
ja
fstpl
or
in
jnp
lea
andl
xor
dec
lods
je
iret
andl
or
loope
retw
xor
xor
add
xchg
ret
je
push
xor
sbb
add
shrl
ja
push
daa
adc
icebp
mov
popl
fsubr
add
lock
in
jne
push
adc
rolb
iret
lea
loop
xchg
jmp
mov
push
jo
insl
cmc
mov
push
pop
adc
arpl
int
xchg
adc
push
loope
int
adc
clc
cli
movsb
cltd
lock
in
popf
mov
mov
test
out
xchg
stos
adc
push
xor
out
jle
or
sbb
mov
or
xchg
sub
test
nop
mov
test
shlb
xchg
in
jae
mov
push
movsl
in
fsubrs
adc
leave
push
jp
dec
mov
cwtl
xchg
shrb
out
pop
pop
and
jge
pop
push
das
stos
enter
ja
pop
fistl
mov
cmpsl
cmp
std
ficoms
lcall
ljmp
jno
out
repz
addl
imul
mov
jmp
pop
repnz
jns
movsl
add
insb
inc
ja
leave
or
sahf
dec
adcl
or
movsb
sbb
int
pop
jmp
cmp
push
jl
test
jnp
mov
inc
sbb
lahf
enter
add
mov
mov
mov
mov
mov
push
pusha
aam
sbbb
inc
fsubrs
rcrb
push
push
in
or
cmp
dec
adc
loope
dec
xor
mov
aaa
dec
sub
xchg
jnp
fdiv
push
fimuls
jns
ds
mov
aaa
testl
cmpsb
and
push
xchg
clc
inc
push
push
jnp
mov
in
fbld
pop
in
popa
mov
inc
jl
loope
push
or
addr16
add
xor
push
ret
mov
mov
and
mov
adc
in
sub
inc
xchg
jmp
push
push
ljmp
or
or
mov
xchg
pusha
mov
pop
push
push
mov
imul
cltd
lds
daa
outsb
movsb
testl
cwtl
mov
aad
inc
iret
cmp
jmp
and
gs
adc
movsl
push
cmp
jmp
pop
jecxz
out
jnp
mov
mov
or
or
jae
jno
sub
mov
and
mov
push
mov
test
in
cmp
movsl
sub
ret
mov
int
inc
adcl
mov
mov
jae
mov
pop
dec
rcrl
jnp
data16
or
xchg
xchg
inc
inc
adc
rol
aam
pop
jbe
or
gs
and
push
push
pop
xlat
mov
mov
sahf
ljmp
outsl
lahf
nop
pop
idivl
mov
pop
mov
mov
mov
cmp
bound
loope
and
adc
and
test
and
push
or
lea
das
hlt
sub
pop
lret
sbb
pop
mov
push
mov
fsts
ret
int
jg
add
pop
inc
sub
mov
xchg
and
mov
subb
mov
xchg
loop
mov
int
into
or
sarl
bndldx
rorb
sti
xor
fcoms
inc
ja
daa
das
mov
icebp
pop
cltd
das
jae
jns
jne
mov
mov
in
mov
sbbl
adc
jmp
sahf
in
xor
loopne
sahf
fxch
jecxz
mov
inc
imul
lods
pushf
pop
popf
xor
mov
in
jns
cli
cmp
cmp
fwait
adcb
inc
jle
fsubl
not
outsb
shl
aad
sbb
or
add
jl
mov
mov
or
and
pop
and
dec
xchg
movsl
xchg
or
out
adc
sbb
stos
inc
ror
sub
mov
rcll
jne
jno
outsb
lods
jno
out
mov
outsl
push
jne
jbe
in
inc
loopne
sbb
jge
sub
lock
fwait
jmp
mov
rcrb
dec
sub
les
xlat
add
cmp
xchg
xor
data16
and
jnp
pop
push
or
ds
sarb
les
and
pop
es
arpl
cmp
jbe
add
push
ficompl
pop
mov
aam
lock
popa
data16
jno
outsb
pop
addr16
or
adc
pop
test
xchg
test
dec
pop
mov
movl
pop
mov
je
fsubs
pop
arpl
and
inc
adcl
jg
xchg
mov
or
push
bound
jo
xor
cmp
and
push
outsl
mov
hlt
pop
dec
add
iret
inc
adc
xor
push
call
repnz
mov
ljmp
aaa
jo
or
loopne
popf
push
dec
int
orb
jnp
pushf
aam
lret
inc
jb
jne
mov
popa
pushf
fs
mov
jae
or
sbb
inc
adc
pop
stc
rolb
data16
mov
xchg
mov
testl
pop
testl
jmp
mov
insl
mov
pop
mov
mov
or
xor
inc
xlat
push
mov
cmp
or
mov
push
xchg
inc
dec
enter
icebp
loope
lds
sbb
jle
xchg
imul
aam
inc
in
xchg
xchg
or
out
lahf
inc
jl
out
loopne
iret
xor
jbe
push
aad
je
xor
jae
mov
ret
xchg
add
push
int
int3
addr16
jmp
adc
or
clc
test
out
insl
cwtl
jne
mov
cli
and
mov
add
pop
imul
jae
fs
aas
cs
sti
mov
pop
in
push
lcall
mov
stos
jne
xchg
pop
cmc
shl
fiadds
push
das
fistl
push
or
test
and
rclb
mov
loope
popf
xchg
cltd
iret
in
mov
mov
leave
sbb
pushf
push
push
push
xchg
xchg
lcall
aad
subb
push
inc
xchg
jne
and
in
outsl
adc
shll
movsb
mov
hlt
push
jecxz
int
cmp
or
loope
xor
jbe
xor
push
pop
xor
mov
int3
xchg
jp
push
dec
int3
out
js
popl
jo
mov
cmp
sti
mov
bound
xor
addr16
fcoms
push
adc
into
sub
adc
dec
pop
test
push
xor
add
push
sbb
sbb
movsl
push
mov
lcall
mov
and
shlb
xor
mov
lods
movlhps
std
aas
push
arpl
push
imul
pop
arpl
fcmovbe
mov
and
cmp
push
mov
loope
data16
filds
sub
pushf
lret
adc
mov
mov
out
jne
mov
jbe
ja
pop
sti
xchg
push
movsb
cmc
pop
push
bound
push
inc
jnp
arpl
addb
stos
adc
adc
out
call
xchg
sbb
inc
mov
xsha256
cmpsb
adc
and
icebp
mov
jecxz
cmpl
ret
pop
jb
pushf
ficomps
frndint
mov
negl
mov
cmp
popa
frstor
inc
cwtl
sub
stos
mov
cmp
adc
bnd
xor
cs
lods
xchg
and
mov
and
mov
push
sbb
repnz
jmp
cltd
mov
or
movsb
les
into
jb
mov
in
and
arpl
ds
mov
sahf
xchg
push
cwtl
inc
sub
scas
lds
mov
fidivs
jp
jp
in
push
mov
popa
xchg
mov
or
xor
int
shrb
flds
arpl
or
std
pop
sub
inc
pop
jo
icebp
pop
mov
jno
dec
sbbl
punpckldq
jmp
xchg
loopne
or
pop
imul
add
sbb
shll
pop
cs
pop
popf
or
push
mov
or
ror
sub
lods
aad
daa
xor
xor
mov
repz
into
repz
mov
fdivrl
inc
sbb
out
mov
enter
repz
jle
fstpt
fiadds
shrl
or
cmp
xor
cmpsb
mov
add
lock
cmc
cmpsb
push
ljmp
outsl
nop
add
mov
rcll
pop
imul
push
lea
cs
cmp
bound
push
push
shrl
rcr
adc
aam
bnd
shl
shl
call
int3
push
jo
jae
lds
in
aad
test
pop
shll
push
xor
mov
adcl
mov
mov
pop
cmpsl
lcall
jle
pushf
cld
sub
cmc
push
into
or
dec
or
push
adc
ds
pop
mov
ret
test
push
mov
push
in
mov
out
xlat
data16
sbb
test
and
cmp
aad
andb
shl
repnz
jae
and
loop
imul
cltd
mov
ficoml
jge
out
mov
push
cmp
mov
stos
sbbb
sbb
jb
fistl
pop
add
push
arpl
bnd
xchg
jno
push
mov
xor
pop
pop
out
lea
mov
and
inc
cld
jae
movsl
dec
ds
lcall
mov
adc
mov
lods
insb
pop
xor
popf
mov
bound
shll
aam
scas
icebp
xchg
or
jno
lahf
pop
out
pop
pushf
lret
mov
mov
jno
stos
lcall
decb
cmp
js
xor
loope
lcall
dec
add
cmp
pop
out
enter
jb
test
mov
jae
inc
call
jb
mov
insb
jne
jb
sbb
fwait
stos
inc
sbb
scas
mov
cmp
iret
mov
mov
xchg
fnstenv
popf
cmp
dec
lret
je
stos
fmuls
aaa
inc
or
cmp
lret
or
jns
out
outsb
mov
jae
fisubl
add
fidivl
mov
rcrl
cmp
in
movsb
push
dec
jne
add
inc
imul
sub
jmp
sub
xor
fwait
ret
out
pop
jae
out
mov
aas
outsb
jp
jo
xchg
pop
daa
pop
adcb
dec
jg
mov
ss
arpl
xorb
xchg
sbb
jg
cltd
shl
fisubl
dec
aad
js
adc
xor
jbe
lods
inc
pop
xchg
nop
lahf
aad
sub
popa
xchg
aam
leave
cli
push
jne
jae
out
mov
dec
repnz
lret
jno
adc
jge
jne
and
push
jbe
ss
cmc
arpl
cmp
xchg
cmp
popa
jno
xchg
cmp
outsl
je
dec
div
sub
in
es
jb
sub
xlat
in
pop
pop
mov
loop
lock
es
das
cmp
aas
lret
add
cmp
lret
test
aaa
and
lds
notb
in
test
ljmp
fstl
std
xchg
mov
leave
and
out
cmc
cwtl
xchg
orl
int
or
xchg
ja
loope
lods
pop
scas
pop
test
push
push
mov
push
fists
into
xor
mov
cld
arpl
cld
sub
je
ljmp
inc
or
rol
mov
mov
add
pop
dec
es
in
int3
jle
sub
xor
cld
push
mov
sbb
adc
testb
inc
aam
mov
cmp
cs
stc
cld
sahf
mov
inc
jmp
pop
push
out
lods
imul
and
pop
xchg
mov
ret
push
xchg
or
xchg
and
fs
pop
xor
pop
push
add
pop
cmpsl
cmc
aas
add
dec
lar
mov
sub
mov
loopne
xchg
leave
mov
data16
push
jb
sarl
adc
dec
jne
xor
cmp
push
rol
lea
cs
cli
outsb
ds
xchg
popa
sarl
lods
inc
push
loop
mov
mov
jb
xchg
bound
pushf
jmp
cmpsb
mov
and
test
icebp
mov
mov
jge
cmp
or
pop
nop
scas
inc
ljmp
add
inc
push
jo
cld
jae
das
adc
sbb
sbb
out
xor
jge
fidivrl
gs
mov
stos
and
fdivs
mov
inc
into
dec
add
xor
pop
cld
pop
stc
fdivp
sbb
cli
fdivp
mov
jae
jmp
jns
imul
cmpsl
cmp
and
adc
in
cmp
xchg
xchg
push
jnp
sbb
xor
movsb
adc
shlb
sahf
pop
mov
jle
lea
js
push
push
ljmp
cmc
jle
mov
xchg
or
lods
sub
decb
leave
xchg
pavgw
mov
xchg
inc
cld
fwait
mov
jo
in
pop
add
fs
dec
loope
repz
pop
push
cmp
jle
jbe
sub
jmp
push
fidivrs
mov
sub
mov
out
cmc
sub
ret
popf
jmp
sbb
rcll
js
push
xchg
pop
jne
outsl
xor
aas
in
jecxz
fisubrs
fsubrs
cwtl
loop
inc
jg
push
dec
and
and
push
into
cli
add
xor
push
cmp
sahf
subl
sbb
cmp
jns
mov
dec
lods
inc
fwait
bound
ficoms
nop
dec
ret
adc
je
test
test
test
sbb
add
lock
inc
pushf
popa
movsl
jg
push
mov
sub
xor
pop
sub
jl
sub
adc
push
js
fcmovnbe
xor
mov
and
push
rcrb
sbb
mov
rcrl
xchg
mov
outsb
pop
stc
pop
xchg
jl
push
push
bound
xchg
mov
notb
js
push
fmul
xchg
xor
nop
sbb
mov
ss
std
mov
pop
aas
lahf
xor
push
iret
ljmp
testb
jae
xchg
scas
adc
daa
pop
cwtl
stos
cmp
fbstp
maxps
mov
inc
dec
mov
fcoml
bound
xchg
gs
push
mov
lds
adc
add
xor
jb
mov
xlat
xchg
pusha
dec
scas
xor
adc
pop
pop
aas
inc
sbb
add
cmp
mov
jl
arpl
lods
pop
ds
imul
and
pop
popf
jmp
cmp
cmpl
push
jmp
int
mov
mov
push
loope
pop
es
ljmp
arpl
and
mov
insb
xchg
jae
int
mov
fldt
bound
sub
ss
ds
dec
test
push
loopne
gs
mov
mov
ja
cmpsw
call
out
pop
dec
xor
lods
jnp
fcmove
xchg
arpl
cmp
andb
push
add
jno
imul
ret
shrb
out
clc
repnz
pushf
mov
loopne
sub
and
jge
leave
shlb
rorb
dec
fdivl
test
pop
fisubl
pop
push
adc
fsubrs
add
fdivrl
mov
pop
xchg
gs
ret
dec
add
mov
cli
icebp
pop
insl
push
pop
pop
leave
mov
mov
cltd
in
int3
xchg
cmpsl
stos
dec
pop
out
xor
dec
dec
imul
or
sbb
pusha
imul
pop
fsubs
dec
mov
push
inc
jmp
arpl
pop
jne
jbe
das
adc
scas
adc
loop
cmc
add
call
jb
jo
pop
dec
xchg
add
or
dec
comiss
popa
xchg
movsl
mov
decb
xchg
pop
or
out
pop
mov
xchg
gs
dec
call
cltd
mov
mov
popa
jecxz
orl
xchg
xchg
fwait
repnz
push
pusha
add
add
scas
aad
lock
inc
pop
or
pop
adc
xchg
add
insl
adc
pop
sub
lea
inc
adc
cli
adc
mov
clc
into
sahf
adc
jno
mov
aam
orl
icebp
inc
and
jl
jmp
cmp
or
out
cmpsl
sub
xchg
test
add
shrl
stos
dec
mov
xchg
pop
xchg
ret
and
or
data16
imul
cli
ret
daa
sub
nop
mov
jb
pop
push
loope
jnp
dec
fst
out
push
cmp
lcall
mov
rol
test
jmp
movsl
dec
jle
mov
cmp
imul
xchg
pop
jecxz
jbe
sbb
movsl
lcall
mov
adc
lds
mov
or
insb
jp
or
notl
push
or
hlt
rolb
outsb
lahf
les
adc
mov
mov
loopne
dec
mov
lret
lret
and
mov
cld
loop
ror
test
sbb
nop
jg
fdivp
adc
dec
xchg
fmull
ret
xor
dec
fmuls
push
loop
cmp
jae
lds
mov
insl
mov
dec
fimuls
pop
inc
ficoml
in
ss
xor
xchg
fisttpl
loopne
mov
insl
jae
push
cmpsb
shll
repz
jns
xchg
add
xchg
scas
jbe
push
aam
adc
es
jg
cmc
push
jb
sub
stos
stc
push
aam
and
xor
mov
test
out
sub
pop
xor
insb
jl
add
mov
popf
loop
sub
inc
call
shll
movsb
sbb
jne
sub
add
mov
lcall
loop
cld
jne
mov
jno
push
and
mov
shlb
aad
push
cmp
loop
mov
mov
sub
aam
leave
lcall
aad
into
ja
stos
jns
bound
enter
push
mov
dec
outsl
fidivl
mov
pusha
test
add
cmp
dec
arpl
nop
std
cli
fs
jno
cmpsb
ret
clc
inc
and
xchg
and
and
jns
adc
popa
cmpsb
int3
test
dec
insl
pop
imul
and
and
lds
add
fs
mov
addr16
mov
jmp
cmp
nop
lods
push
xchg
cltd
mov
enter
dec
pop
mov
push
xchg
jl
outsb
movsl
push
movsl
popa
dec
movsb
xlat
imul
and
push
imul
mov
das
jb
jne
mov
mov
dec
jns
pop
insb
pop
cmp
pop
mov
push
insl
xchg
lret
mov
add
push
nop
idivl
dec
mov
cmp
xchg
nop
lds
pop
cmpsl
push
dec
xor
push
dec
mul
inc
pop
sub
sahf
cmp
mov
jns
mov
ja
rclb
or
add
add
adc
insb
and
and
dec
jno
inc
fs
mov
adc
outsl
gs
pop
pop
scas
mov
jmp
movsl
mul
outsw
push
arpl
sbbb
je
data16
icebp
and
bound
sbb
xchg
cmc
das
push
in
lahf
insl
mov
int
mov
lahf
loope
xchg
stc
adc
cmp
inc
pop
xchg
jmp
sbb
xchg
cltd
shll
dec
dec
pop
jno
popa
sbb
adc
sarl
lea
popa
mov
mov
dec
movsb
daa
sbb
sub
mov
js
test
xchg
xchg
push
repz
and
mov
cmp
leave
mov
jnp
bound
repnz
pop
out
aad
xchg
push
inc
pushf
rep
mov
jle
rcl
jg
mov
jno
mov
and
dec
mov
ror
lds
test
jmp
adc
mov
xchg
add
push
fwait
push
imul
and
sarl
cmp
pop
dec
test
out
pop
loopne
mov
add
outsb
jno
cmc
test
push
push
lea
ja
pop
jbe
call
hlt
jle
jbe
out
leave
ja
dec
mov
pop
sbb
jle
push
aaa
pop
cmovns
sub
xor
pop
xchg
or
adc
add
pop
pop
dec
stos
xchg
inc
imul
push
sti
movsb
mov
dec
or
pusha
mov
sbb
inc
xchg
jl
dec
sarl
sub
cmpsl
jae
mov
daa
testb
add
dec
imul
inc
jmp
push
push
je
pop
sbb
test
dec
sbb
pusha
fs
cmp
adc
outsb
lods
jmp
gs
mov
or
lcall
jl
xchg
cmp
xchg
push
cmp
int
push
test
inc
mov
jb
mov
popf
xchg
mov
push
pusha
xor
popf
mov
pop
inc
aas
ja
out
aaa
or
pop
cmp
dec
packssdw
bound
mov
outsl
in
leave
pusha
idivb
call
pop
jecxz
push
dec
xor
nop
and
xor
imul
cmp
mov
outsl
bound
or
je
cld
fucom
and
ljmp
repnz
or
lret
adc
cmp
mov
leave
ljmp
movsb
mov
pop
jle
imul
cmp
sbb
sub
push
inc
test
pop
jge
push
cmp
mov
faddl
lret
daa
adc
push
dec
outsl
jb
dec
shll
mov
ljmp
dec
test
imul
loop
jnp
cmp
rep
ja
stos
fildll
subl
fstpt
push
xchg
cmc
and
scas
or
sub
xchg
pushf
rcrb
testb
fyl2x
or
outsb
cmp
iret
cs
aad
push
loop
loopne
stos
dec
fbstp
subb
xorl
fcomps
jmp
faddl
pop
push
jnp
fidivl
and
movsb
and
dec
mov
fwait
mov
xchg
clc
jb
lds
shrl
pusha
dec
cmp
cmc
mov
xor
inc
addl
dec
push
sub
ret
jp
pop
lret
mov
pop
cmp
jno
cmc
jnp
jg
lds
shl
jo
stos
insl
in
pusha
test
mov
mov
ss
lahf
mov
es
or
nop
sbb
mov
mov
cltd
testb
movsl
ficomps
xor
or
inc
adc
outsl
push
out
test
les
imulb
or
gs
movsb
push
out
add
idiv
and
xor
out
sub
jg
outsb
add
imul
dec
icebp
inc
aas
mov
cwtl
sti
mov
pop
ret
sbb
jbe
push
cmpsl
movsb
xchg
xchg
pushl
or
adc
ret
pusha
push
fstpt
jge
sbb
btr
pop
mov
xchg
mov
repnz
adc
adc
jge
dec
fnstcw
cmp
and
rorl
lahf
sub
nop
outsb
jbe
jmp
pop
mov
pop
dec
gs
test
xchg
sub
mov
mov
movsb
sub
adc
mov
adcb
push
sub
cmp
out
pop
cli
mov
fcomp
pop
dec
cmpsl
mov
cmpl
cli
pop
adc
mov
lcall
out
sbb
dec
pop
jae
aas
outsl
dec
pusha
push
std
cmc
mov
jmp
mov
out
xchg
jmp
mov
into
movsl
jle
mov
in
test
mov
jmp
sbb
xchg
cltd
test
xchg
test
adcl
mov
scas
outsl
pop
xchg
dec
loopne
imul
rcl
pop
scas
in
lea
xchg
sub
xor
jae
aad
and
add
jecxz
es
push
mov
cmc
in
jae
divb
in
add
cmp
pop
fisubrs
jl
fwait
pop
xor
push
mov
fimull
dec
cmp
outsb
adc
mov
jno
sbb
icebp
lock
cmp
mov
arpl
sub
pop
pop
jns
stos
imul
inc
and
lret
cwtl
xchg
clc
pop
fcoml
sbb
out
jnp
jb
int3
push
addr16
pop
inc
cmp
bnd
pop
mov
sbb
lods
adc
hlt
mov
jge
mov
test
lret
or
daa
in
add
xor
hlt
lds
or
mov
ret
jno
rorb
cmc
sub
mov
incl
sub
jmp
jns
mov
idivb
lea
test
shlb
gs
or
in
add
outsb
mov
cmp
push
inc
xor
lods
jno
loope
leave
jbe
or
pop
ja
mov
dec
jp
pop
pusha
sbb
pop
push
dec
jns
dec
jno
popa
jp
loope
pusha
ljmp
popf
in
fcomps
and
mov
xchg
ret
and
faddl
popa
stos
clc
fadds
in
inc
dec
ljmp
lahf
insl
imul
rolb
ds
lahf
xchg
mov
je
js
daa
cmpl
imul
aad
mov
stc
aad
bound
dec
jle
test
out
mov
pop
push
xor
jo
and
sahf
push
mov
ret
dec
xor
cmp
jo
sbb
int3
mov
cmc
mov
push
dec
and
test
lcall
xchg
xor
inc
push
int
sbb
jbe
inc
cli
out
stos
addb
and
jno
fistl
orl
xor
push
pop
mov
in
adc
gs
scas
stc
subb
xchg
mov
sbbb
cmp
fnsave
scas
in
sti
inc
rorl
jl
pop
data16
xchg
imul
mov
loopne
repnz
bound
pop
push
push
clc
hlt
popf
sbb
test
loopne
mov
movsb
test
testl
mov
jg
push
push
in
dec
out
gs
lods
dec
xchg
adc
loop
movsl
fisubrs
dec
adc
inc
stos
leave
aaa
mov
sub
dec
shrl
xorl
outsl
adc
data16
push
xchg
mov
or
add
adc
mov
inc
add
jbe
pop
mov
adc
jne
mov
int3
lock
sbb
cmpsb
xchg
das
enter
mov
lods
popf
xorb
pusha
ja
popa
hlt
outsl
imul
push
sub
dec
cltd
jmp
iret
pushf
xchg
mov
movsl
cpuid
retw
add
xor
mov
fisttps
jle
test
jecxz
cli
xor
lret
sub
stos
mov
popa
xor
cmp
mov
inc
insl
xchg
lods
inc
enter
and
adc
xchg
add
pop
movsl
loopne
jbe
pop
fistps
cmp
dec
iret
dec
loop
nop
mov
pushf
dec
aad
or
or
dec
pop
or
insb
lahf
mov
hlt
dec
clc
dec
fsubrl
imull
outsb
dec
fisttpll
ret
pop
pusha
cs
jo
dec
popa
mov
int3
mov
repz
cmp
rorb
mov
inc
or
push
pop
mov
push
xchg
jno
ret
icebp
test
push
mov
fisubrs
mov
pushf
addr16
cmp
push
fsubrl
adc
stos
mov
pushf
mov
jnp
xchg
mov
sub
ljmp
add
dec
imul
ss
sub
mov
xchg
dec
xchg
loop
lcall
or
jnp
cmovb
add
stc
xlat
push
rorb
or
or
mov
popf
dec
sub
outsl
call
aaa
js
push
nop
push
roll
and
pop
scas
or
loopne
add
jmp
data16
xchg
outsb
sarw
hlt
icebp
mov
popa
aaa
ljmp
sahf
dec
mov
and
or
gs
mov
dec
loop
stos
movsl
and
outsb
push
jae
push
movzbl
sub
sbb
mov
movsl
fs
inc
sbb
dec
sbb
mov
mov
xchg
pop
cltd
lcall
jne
push
jecxz
pop
adc
push
push
aaa
jl
xchg
mov
std
outsb
mov
xlat
cmp
or
mov
outsl
into
mov
popa
in
rcrl
sti
sub
add
sti
dec
mov
roll
xchg
pop
mov
dec
into
mov
mov
into
mov
xchg
inc
in
pop
imul
jae
cli
popf
adc
dec
xchg
xchg
andl
fisubrl
mov
loope
fildll
dec
mov
and
mov
push
in
dec
fcmovnu
int
sbb
pop
lcall
enter
xchg
je
movsb
push
adc
rorb
arpl
in
push
push
dec
or
inc
push
aam
mov
out
jp
lahf
or
hlt
cs
ljmp
pop
icebp
cmp
jb
insb
rcl
xchg
rorl
dec
loop
lahf
je
mov
mov
popf
or
in
enter
mov
dec
jle
dec
jno
aaa
mov
cs
and
out
int3
inc
fwait
push
repz
leave
insl
cmp
popa
fiaddl
ja
call
lret
xchg
jb
in
or
popa
popf
cmp
in
cmc
test
insl
jo
inc
mov
jge
ret
iret
lds
loope
cld
sbb
enter
insb
movsl
push
movsb
cmc
jp
mov
add
addl
adc
xor
inc
int3
add
pushf
xchg
dec
iret
ret
push
dec
inc
cmc
scas
icebp
sub
pop
sti
pop
das
mov
jecxz
fwait
subl
xor
mov
rolb
fs
push
mov
mov
popa
cltd
scas
cli
push
in
push
addb
xchg
repnz
daa
adc
int3
lcall
ret
paddusw
loop
addr16
stos
jecxz
popa
int3
outsl
ret
xchg
mov
test
popa
daa
out
insl
loope
jge
dec
jmp
cmp
pop
push
in
xor
aam
cltd
pop
popf
cmpsl
daa
gs
fcomps
add
arpl
lods
lods
sti
cmpsl
scas
or
enter
adc
cltd
or
outsb
jmp
int
lods
dec
mulb
xor
addr16
cli
popa
xchg
ljmp
sbb
push
jg
inc
shr
adc
sub
mov
inc
addr16
mov
mov
mov
ret
xchg
push
dec
rcl
mov
imul
fwait
aam
test
data16
arpl
divb
pop
xchg
aaa
cld
jmp
cmp
and
add
pop
rcrb
add
mov
nop
mov
inc
xchg
mov
jg
mov
dec
mov
pop
pop
dec
je
pop
dec
xchg
pusha
adc
out
in
push
stc
mov
cmp
pusha
adc
inc
dec
mov
pop
jge
ljmp
sub
mov
cmp
or
mov
push
pushw
jecxz
loope
je
sub
xchg
sti
fstps
xor
jecxz
mov
push
aas
dec
adcb
in
mov
pop
mov
dec
stos
xchg
mov
xor
or
sahf
push
pop
enter
pop
rcrl
adc
sub
dec
pop
sahf
aas
cmp
imul
push
adc
pxor
dec
orb
iret
icebp
cli
adc
out
mov
xor
popa
sbb
repnz
call
xor
xor
testl
push
iret
mov
data16
fstl
lods
mov
std
sahf
test
cmpb
filds
int
sarb
imul
xchg
or
ret
gs
jno
pop
adc
call
push
faddp
cld
and
inc
mov
repz
lds
loope
fs
adc
jg
pop
shr
dec
mov
outsb
jg
pop
mov
and
mov
fdivr
mov
mov
notl
lret
cmp
scas
push
xchg
xchg
in
fs
xchg
sbb
stos
pop
imul
cmp
push
jge
addr16
jno
stos
lret
sahf
sub
mov
dec
inc
xor
cmpsb
push
lahf
cmpsb
xlat
addr16
and
or
pop
lea
adc
xchg
insb
sbb
push
push
mov
push
sbb
push
xchg
pop
divb
cmpsl
inc
jp
ret
int3
pushf
inc
imul
call
js
pop
xor
and
push
je
fisttpll
int
mov
test
lahf
lahf
int
jns
iret
outsl
pop
sti
inc
decb
push
pusha
fmul
mov
das
lea
xchg
pop
mov
cmp
cmp
dec
push
push
imul
push
cmp
cli
rcrb
rclb
faddl
mov
mov
mov
pop
mulb
lahf
adcb
push
xor
push
dec
mov
movsb
and
leave
add
aas
add
push
push
mov
lret
jnp
xor
xor
or
add
ret
dec
cld
xchg
push
or
loopne
fimull
ljmp
fs
xor
sub
mov
xchg
test
test
push
push
and
sbb
iret
sbb
decb
int3
sbb
repnz
in
pop
adc
mov
pop
pop
or
mov
jb
sbb
sub
xor
je
jne
in
xor
sub
mov
stc
xchg
cmp
push
bound
dec
or
movsl
loope
cltd
icebp
pop
mov
inc
stos
jl
mov
lods
nop
jp
leave
sahf
inc
sbb
inc
inc
dec
lea
in
rcll
stc
ds
hlt
leave
and
xchg
mov
scas
mov
pop
scas
ja
pop
enter
inc
jp
mov
adc
lods
repz
gs
sbb
addb
movsl
pusha
xor
fs
push
mov
xor
cmc
shl
sbb
out
out
dec
das
xchg
mov
aas
enter
test
fisttps
jg
mov
nop
dec
ret
push
jge
mov
mov
pop
jno
jne
xchg
mov
cmp
jge
insb
pop
jp
arpl
out
stos
movb
fcoms
mov
test
mov
sub
pop
out
aad
mov
add
xor
ret
dec
test
into
lds
pop
loope
sbb
mov
mov
mov
sbb
mov
aad
int
xchg
inc
xchg
je,pt
mov
nop
jne
pop
loopne
xchg
add
dec
lds
aaa
insl
jae
imul
xchg
fwait
gs
mov
xchg
pop
adc
sti
fildl
pop
ret
pop
inc
jne
cmc
inc
imul
in
sub
popf
outsl
leave
aad
mov
mov
bound
dec
les
adc
test
pop
fdivl
xchg
or
lods
jb
ret
and
pop
mov
mov
mov
push
in
adc
mov
mov
es
xchg
jg
mov
xchg
fcompl
addr16
and
jnp
insl
gs
push
cmp
sub
push
inc
mov
outsb
sarl
push
pop
int
inc
push
push
les
pop
mov
xor
push
scas
fsubp
addb
rcl
data16
shl
fstl
popa
mov
fisubrl
mov
push
pop
jg
mov
test
aam
mov
inc
adc
data16
pop
popa
rcrb
cmpsl
jecxz
xor
jns
and
lods
int
and
dec
xor
sbb
add
cltd
dec
jbe
fisubs
pop
cmp
repnz
add
lea
xchg
inc
leave
frstor
ds
push
aaa
pop
cmp
or
sbb
scas
iret
adc
je
cltd
adc
les
in
in
adc
add
inc
les
out
hlt
popa
adc
pop
or
mov
fnstsw
in
lcall
xor
mov
in
addr16
jo
mov
push
imulb
jl
push
pop
jmp
add
dec
rcl
loope
adc
mov
mov
ljmp
hlt
inc
addr16
clc
addr16
sbb
cmp
sub
lea
jo
andb
popa
in
and
fnstsw
stos
mov
test
pslld
jno
aad
cmpsl
cmp
lahf
sub
mov
loopne
pop
inc
inc
imul
dec
ret
inc
sti
addr16
inc
pop
int3
push
arpl
inc
pop
and
popf
loop
int3
push
mov
mov
pop
sti
dec
and
je
dec
shll
mov
xor
rcrb
aam
xchg
mov
xchg
add
inc
pop
scas
xchg
testb
or
bound
mov
daa
xchg
and
xor
xchg
pop
out
aas
sbb
inc
dec
mov
mov
dec
push
push
jge
hlt
pop
cmp
int3
dec
or
arpl
out
ret
jmp
push
or
adc
int
imul
and
mov
inc
mov
jno
cmp
shrl
lret
mov
cmpl
jno
les
fwait
xorb
jp
mov
imul
sbb
into
ds
mov
mov
cmpsb
jp
out
js
in
mov
andb
mov
push
std
pop
outsl
pop
movsl
les
mov
int3
loop
mov
sbbl
or
jbe
popf
pop
adcl
clc
xchg
loop
xor
mov
test
push
inc
or
gs
scas
mov
cmpsl
push
pop
push
aas
add
pop
xor
shlb
cmc
dec
ja
fnstenv
cmc
add
je
xchg
imul
loope
jnp
mov
xchg
insl
sbb
outsb
xchg
cmp
mov
adc
movb
gs
aad
pop
popa
inc
pop
in
and
pop
outsl
adc
int
aaa
mov
sub
adc
gs
into
jge
stos
loope
dec
mov
fcmovnb
jle
pop
and
mov
outsb
xchg
lds
mov
lret
and
ret
int
imul
jne
jp
pop
cli
aas
test
cs
sbb
pop
aam
daa
pop
add
out
dec
mov
aas
add
shlb
dec
mov
adc
jg
adc
cmp
mov
fidivrl
icebp
ds
lods
or
aad
mov
push
testb
loope
popf
jne
adc
pop
cwtl
push
xchg
mov
es
jno
mov
in
push
ret
sbb
mov
push
xchg
mov
gs
pop
inc
scas
rcrl
arpl
dec
popf
nop
lods
adc
imul
jl
jno
push
mov
arpl
std
sub
pusha
jnp
scas
cmp
cmpsb
mov
pop
pop
push
pop
daa
push
popf
add
xor
test
mov
pavgb
sbb
cmp
aad
mov
cmc
push
mov
imul
jge
or
mov
js
bound
andb
outsb
and
scas
or
ds
ret
rcll
mov
or
pop
popa
push
idivb
clc
dec
pushf
mov
sbb
jne
subl
jnp
push
ss
rorl
bound
mov
xchg
dec
xchg
push
mov
aam
mov
fisubs
ljmp
packsswb
xchg
je
push
mov
xchg
adc
orl
mov
mov
mov
cmp
insl
fcomps
xor
xchg
mov
dec
daa
outsl
sahf
xchg
out
xchg
and
sub
jne
sub
mov
push
bound
jge
cmp
add
daa
adcl
xchg
mov
mov
dec
xlat
mull
lret
les
scas
shlb
pop
sub
les
imul
add
mov
insl
pop
lret
pop
int
int
mov
mov
and
push
popf
mov
jle
push
mov
popf
rol
mov
mov
jne
inc
movsl
jns
mov
cmp
jmp
cmp
or
lret
fldl
mov
inc
jbe
imul
ja
jne
mov
mov
adc
cmpsl
and
jge
shl
pop
sub
scas
jle
pop
jle
test
stc
cld
add
shlb
cmp
pop
or
xchg
or
or
sbb
push
push
dec
ror
ret
cmp
popf
sahf
mov
loop
xor
adc
loope
flds
stos
xor
insb
xor
push
xchg
lds
push
push
sbb
sahf
jge
sbb
test
mov
push
mov
daa
push
arpl
cmc
int
mov
xchg
jp
or
cmc
cmp
test
push
movsl
mov
jg
xchg
dec
rcll
jge
add
fwait
cmp
pop
incb
leave
push
imul
movsb
data16
pop
mov
and
xchg
mov
push
sub
push
arpl
inc
scas
cmc
les
push
cmp
pop
addr16
pop
dec
sbb
push
mov
add
xchg
pop
addl
stos
test
inc
fprem1
sub
sarl
insl
pop
push
fsubrs
push
stos
push
or
pop
outsb
data16
orb
dec
rcrl
mov
fcmovnu
dec
test
push
pop
jp
or
cmp
movsb
sarb
std
push
mov
pop
pop
mov
or
sbb
popf
mov
mov
test
daa
push
clc
push
fisubrl
jnp
repnz
loop
push
xchg
fs
xchg
or
sbb
sbb
push
je
mov
push
xor
cmp
jge
arpl
push
adc
dec
movsl
jae
pop
pushf
mov
lods
sbb
pop
lea
jno
push
in
cmp
test
and
add
fcmovbe
outsb
inc
sub
adc
add
ret
mov
test
js
rorl
pop
sbb
gs
test
jno
ja
or
test
dec
dec
adc
cmp
iret
mov
ret
push
pop
pop
inc
notb
sbb
out
repz
fs
out
and
mov
pop
and
xlat
mov
jae
push
push
push
push
adc
cs
test
fldt
push
add
fisubl
cmp
clc
in
or
fisubrl
aad
sarb
cmpsb
cmp
pop
movsb
dec
popa
pusha
mov
cs
repnz
push
fsts
xchg
test
fcmovb
jno
cmc
jno
xor
repz
imul
js
cmp
fsts
mov
testb
mov
loop
fcoml
rclb
push
adc
imul
aad
cmp
lret
mov
iret
xchg
subl
jecxz
bound
leave
lods
rcrl
mov
fs
hlt
xchg
pusha
outsb
loop
sbbb
adc
jne
rol
or
dec
or
mov
add
loop
in
ret
ljmp
jno
xchg
lcall
add
shlb
not
push
lret
cld
xor
sti
insb
sub
jo
fsts
inc
insb
mov
xchg
daa
and
mov
movsl
repz
lds
mov
mov
add
sub
ljmp
mov
xchg
loope
xor
pop
fbld
push
cmpsl
jae
ja
lret
jo
mov
ja
lcall
sti
mov
xchg
dec
je
mov
add
loopne
cmp
dec
test
jb
fs
insb
out
add
repnz
cmp
stos
jne
rcrb
jne
pop
sbb
mov
pop
ja
movsl
cltd
push
in
add
xorb
sahf
sbb
xchg
jno
and
sbb
test
sub
notl
cmp
sub
hlt
cmp
daa
jo
add
mov
inc
out
inc
push
roll
insb
repz
dec
push
call
mov
into
stos
decb
inc
mov
dec
push
add
int3
fnstsw
cmp
ljmp
insl
out
rcr
flds
hlt
sub
dec
push
jnp
dec
mov
imul
into
pushf
inc
xchg
std
mov
and
cli
push
jne
pop
test
rcll
enter
shrl
movsl
test
sbb
jl
dec
ss
call
rcrb
scas
adc
push
es
jg
subl
in
mov
sub
sbb
xchg
mov
cltd
addl
pop
out
inc
push
xchg
sbb
mov
stc
sub
rcll
push
jnp
in
jbe
xchg
pop
das
mov
cmp
popf
and
cmc
jno
xchg
imul
jno
dec
sarb
movl
mov
mov
mov
dec
jnp
ljmp
inc
aas
test
pop
mov
xchg
pop
xchg
inc
push
mov
lea
fimull
xor
out
mov
sbb
pop
cmp
and
shll
lock
js
push
cltd
push
mov
scas
or
xchg
mov
xchg
dec
and
and
jl
cmpsb
mov
icebp
jno
hlt
dec
mov
test
cs
xchg
cmc
ret
sub
xor
mov
and
or
add
daa
pop
in
or
adc
mov
icebp
fld
dec
in
pop
js
jne
add
sub
icebp
insl
rcl
fsubl
adc
jne
mov
pushw
pop
leave
out
dec
cld
mov
sbb
movl
inc
cmpsb
mov
shr
imul
push
sbb
sbb
jno
or
xchg
outsb
push
push
mov
sbb
push
gs
aad
adc
mov
popf
mov
pusha
lock
loop
mov
stc
jmp
push
cmc
ljmp
xor
push
pusha
mov
jns
mov
test
adc
mov
mov
sahf
out
cmp
cmpsl
test
lea
jecxz
inc
inc
jnp
int3
lds
movsl
mov
or
xor
outsb
ret
mov
inc
outsb
lods
inc
pop
andl
sbb
xchg
aas
stos
cmp
icebp
mov
jb
ja
insl
mov
ffree
in
mov
inc
push
aad
and
xor
jge
mov
out
mov
popa
lret
and
addr16
mov
fwait
and
jg
mov
mov
fdivrs
mov
nop
jo
test
out
pushw
jle
mov
dec
jns
orb
inc
cmc
dec
in
add
push
rcr
mov
aaa
arpl
pop
arpl
pop
cwtl
insl
add
rorl
imul
add
mov
adc
mov
jg
data16
jb
xor
inc
mov
subl
push
add
cwtl
mov
imul
mov
adc
sti
outsb
lret
out
cld
jge
jmp
insl
loop
jge
or
lock
data16
gs
mov
sbb
push
pop
pop
push
aam
repz
sbb
repz
cmp
fwait
xchg
les
or
lcall
sub
mov
bound
add
les
movsb
adc
in
inc
push
sarl
popa
aam
mov
cwtl
push
test
sbb
mov
xlat
cmpsl
pop
pop
stos
fldcw
mov
jle
pop
pop
mov
push
mov
ror
sub
loopne
pop
test
nop
fwait
loop
aam
pusha
mov
pop
pop
das
adc
xor
or
mov
das
mov
inc
addr16
or
movsb
subb
mov
ret
mov
mov
ret
sub
mov
adc
pusha
mov
mov
fsubl
fsubl
test
aas
jbe
mov
aad
cmp
pop
insl
lea
and
or
or
pop
sbb
mov
dec
jb
pushf
push
stos
inc
xor
fimull
dec
inc
pop
int3
push
dec
ss
lea
bound
pop
jge
push
int
mov
and
inc
jle
mov
test
in
popa
mov
xchg
call
or
dec
or
add
dec
out
pop
rcrl
mov
mov
rcrb
jbe
sub
sti
stc
daa
shl
or
movsl
ja,pn
or
jecxz
inc
mov
jno
sbb
bound
jp
push
leave
add
jl
jb
movsb
xor
hlt
cs
jmp
setl
aad
clc
adc
bound
pop
jno
popf
shll
mov
push
dec
and
mov
sub
pushf
shll
and
je
dec
stos
test
mov
rcrb
out
jb
or
int
add
cld
arpl
pop
jne
sbb
lds
inc
scas
pop
shlb
repz
jge
sub
mov
dec
xchg
mov
lcall
test
add
dec
fistpl
jbe
popf
adcb
movsb
imul
jno
mov
jp
xchg
adc
push
mov
lds
movsb
jo
in
je
adc
mov
lret
loope
mov
mov
mov
daa
pop
mov
cmpsb
jg
stos
pop
test
xchg
or
mov
or
xchg
dec
nop
adc
mov
pushw
fiaddl
repz
jns
mov
or
inc
xchg
rcll
dec
mov
stos
rcl
or
sbb
in
dec
pop
dec
xor
int3
adc
out
outsb
jbe
pop
push
int3
jb
and
pop
xchg
and
sub
add
pop
jo
repnz
into
lods
pop
sbb
das
or
xlat
movsl
outsl
cwtl
mov
popa
movsb
jo
loopne
inc
adc
test
push
mov
xor
lret
xchg
subb
lahf
add
inc
sti
pop
or
insl
ret
shrl
xor
dec
jnp
add
sub
sub
or
push
into
push
jbe
adc
andl
dec
sti
mov
or
out
fisttpl
leave
cld
and
and
inc
cmp
iret
mov
xchg
xchg
xlat
rcll
pop
leave
push
lcall
push
call
jg
xchg
and
sbb
cmp
bound
lret
out
imul
inc
aad
add
mov
adc
xchg
and
sbb
out
or
push
popf
sbb
popa
pop
lock
jecxz
movsb
push
add
pop
les
jecxz
and
sub
adc
loop
or
in
xchg
mov
dec
xchg
popa
aaa
inc
push
mov
lds
shlb
nop
fistl
ljmp
sahf
std
cmp
jne
call
and
ds
xchg
push
mov
dec
aas
pop
adc
pushf
sbb
push
popf
sub
jge
cltd
xlat
push
lret
lcall
xchg
mov
cltd
stos
push
dec
xor
xchg
les
out
push
mov
fs
movsl
push
push
xchg
stos
xor
repz
mov
mov
mov
adc
xchg
jb
dec
mov
stc
pushf
mov
in
xchg
dec
xchg
jmp
out
or
aad
dec
and
cmp
and
push
mov
pop
cwtl
loope
es
cmp
pop
data16
add
outsb
xchg
xchg
lods
mov
bound
ficompl
or
xor
push
jmp
xchg
icebp
push
lds
mov
int
outsl
mov
push
ret
dec
das
dec
add
mov
push
cmpl
jns
imul
mov
add
cli
push
adcb
mov
sbb
xchg
push
mov
inc
and
fcos
sbb
stos
imul
stos
pop
xchg
push
ss
fst
sti
mov
cmp
lods
and
mov
mov
dec
rol
sub
mov
lock
iret
mov
mov
fcoml
dec
mov
cmp
sbb
imul
bnd
or
dec
ret
mov
call
or
rcrl
or
jb
outsb
lcall
xchg
nop
push
cmp
lods
dec
cld
mov
dec
je
fists
mov
lahf
add
repnz
mov
cmp
inc
jnp
scas
xchg
jne
lock
loope
cmp
jp
pop
lock
sbb
shrl
jne
gs
imul
mov
xchg
adc
push
ja
ret
inc
mov
adc
icebp
mov
pop
ljmp
mov
cmp
push
lds
xchg
mov
jl
rorb
adc
jae
das
test
push
enter
sahf
pop
jle
lret
faddl
pop
pop
stc
sahf
test
subl
xchg
lods
inc
pop
movsl
in
xchg
jns
mov
or
jnp
pushf
sub
int
mov
mov
sub
jns
jg
mov
js
xor
inc
negl
mov
imul
fcmove
call
jns
leave
mov
movsb
add
int3
xchg
and
lret
inc
mov
dec
mov
sub
dec
adc
imul
into
pop
pop
xchg
fstl
pop
popf
loope
jns
lahf
xchg
xchg
jg
sub
inc
cmp
fldl
xchg
gs
push
aad
pop
xchg
xchg
mov
xorl
adc
sti
shlb
or
leave
rcll
hlt
adc
enter
ds
push
mov
dec
add
xchg
or
mov
les
jmp
lret
scas
or
adc
shlb
mov
icebp
je
fstenv
dec
leave
pop
mov
xchg
movsl
repnz
xchg
push
scas
shlw
lcall
pop
scas
pop
fwait
scas
adcb
xchg
pop
mov
jecxz
ss
movsl
or
mov
mov
push
or
mov
inc
and
lds
and
lcall
movsl
xchg
mov
sub
xchg
ss
mov
imul
enter
lods
xor
jbe
jo
pop
mov
sbbl
movsb
addl
repnz
popa
aam
scas
pop
xchg
jg
sbb
pop
test
dec
fcom
jnp
std
inc
cmp
dec
cli
jmp
mov
stos
push
lahf
or
jae
scas
pop
pushf
cmpsb
pop
mov
xlat
lret
cmpsb
pop
iret
cltd
cld
testb
push
push
jne
adc
inc
sti
mov
sub
jp
mov
rolb
push
xchg
cmp
cli
jle
sahf
cld
xor
cld
xor
cld
sahf
jb
ds
stc
mov
insl
test
sahf
loopne
lret
dec
popf
mov
hlt
cmp
in
rcr
inc
mov
jl
dec
addr16
jge
fwait
ljmp
jg
fwait
mov
jne
rcrb
or
cli
sbb
mov
mov
cwtl
loop
pop
pusha
lcall
xchg
outsb
sti
test
gs
test
das
push
daa
cwtl
out
sti
loop
fdivrl
leave
les
add
in
push
mov
or
xchg
mov
mov
movsb
fs
into
pop
or
ret
jmp
lds
mov
fs
mov
jns
sbb
cmp
push
ss
add
jne
rcl
pushf
xor
pusha
push
aad
outsb
mov
pop
jne
add
jns
mov
add
or
sbb
push
imul
mov
and
cmp
in
idivl
sbb
mov
jne
xchg
outsb
leave
mov
jp
pushf
repnz
in
add
repz
xchg
mov
adcl
inc
lds
mov
das
jns
push
ret
pushl
rcll
movsb
cmp
fs
enter
mov
and
xchg
movsb
dec
int
mov
push
jnp
int3
into
int
enter
movsb
repnz
mov
dec
dec
jl,pt
aam
mov
mov
cmpl
testl
mov
dec
mov
subl
jp
jmp
aad
popf
mov
jp
lret
mov
lods
in
imul
es
push
jnp
jg
outsb
mov
cmp
bound
sub
xchg
sub
out
mov
movb
mov
mov
and
test
xchg
test
mov
je
popf
xchg
scas
arpl
ss
mov
push
mov
lds
addr16
dec
mov
mov
addr16
subl
aad
mov
addr16
xchg
imul
mov
dec
sbb
xchg
inc
hlt
das
mov
mov
movsb
and
jno
movsb
ja
daa
loopne
loop
out
mov
push
sub
dec
daa
jl
mov
mov
stc
psubsw
jecxz
fstpl
jg
stc
push
les
rorb
jns
mov
jno
sysret
xor
inc
fbld
daa
nop
ret
int3
test
lahf
cmpsl
pushf
jae
enter
pop
data16
lcall
or
ds
ja
xchg
xchg
fwait
mov
test
into
cmc
jmp
push
cmp
sarb
cmpsb
mov
aam
movsb
cltd
fwait
popf
cwtl
sbb
imul
mov
test
cmc
mov
pop
cmpsb
pop
jo
xor
aas
or
jmp
lods
shll
cmp
cmc
lcall
jmp
in
imul
mov
mov
push
mov
jecxz
lods
outsb
out
lret
into
popf
jmp
incb
mov
lea
scas
cmp
jbe
jg
mov
cmpsb
je
pop
pushf
popl
sahf
ljmp
lods
test
movsb
sbb
pop
mov
outsb
adc
mov
adc
and
jno
fcmovb
xor
mov
pushf
pusha
fwait
xchg
rcrl
inc
lock
fisttps
lret
xor
out
ret
cmp
lea
mov
in
mov
add
sahf
pop
pop
mov
or
ret
ja
in
dec
cltd
mov
nop
fmulp
inc
dec
add
push
shl
ja
adc
mov
or
cmp
outsl
mov
lret
icebp
and
cmp
push
jnp
pop
and
adc
pop
mov
int
mov
pop
mov
inc
scas
or
jno
xorb
add
sbb
and
or
sub
fnsave
stos
insl
and
inc
sbb
jo
inc
daa
adc
jp
fistpll
add
insb
xchg
push
movsl
adc
stos
pop
jnp
movb
mov
aaa
inc
outsl
add
out
mov
mov
pop
mov
int
test
mov
inc
insb
cmpsl
xchg
inc
mov
inc
xor
pop
cwtl
dec
enter
es
scas
sub
and
jo
jbe
rep
mov
lret
pop
or
push
or
repz
out
out
mov
sbb
pop
cmp
pop
and
mov
jg
clc
mov
mov
cmpsl
and
imul
cmp
das
lret
sbb
out
hlt
scas
outsl
imul
mov
adc
popa
xchg
mov
xlat
pop
mov
adc
sbb
jb
arpl
sbb
insl
hlt
stos
into
scas
dec
bound
sub
int3
div
hlt
jmp
push
div
push
xchg
xor
sbb
sahf
mov
xchg
rcrb
mov
sbb
stos
mov
mov
movsb
icebp
fwait
mov
popa
mov
gs
and
jg
mov
cld
ja
sub
cmp
movsb
sbb
scas
addr16
shr
lret
or
jnp
pop
or
pop
jbe
movsb
ret
lods
xchg
or
mov
mov
jg
push
cltd
jg
xchg
mov
cmp
aam
ret
xor
cmp
sub
gs
xchg
cwtl
mov
mov
pop
jmp
stc
add
lods
gs
out
adc
fnstcw
pop
add
jne
fstpl
test
pushf
clc
repnz
mov
cld
lods
nop
dec
test
add
fldenv
inc
push
mov
jbe
xor
in
and
pop
push
cmp
pop
testl
fwait
mov
fwait
push
test
fisubrl
push
mov
mov
adc
int3
shrl
xchg
fwait
lods
add
pop
xchg
or
sbb
insl
add
cmp
xchg
inc
dec
andb
leave
mov
mov
push
movsb
test
mov
mov
mov
scas
out
xchg
xchg
daa
arpl
idivb
hlt
js
fs
das
dec
pop
aas
pop
jg
enter
and
scas
int3
xchg
sarl
mov
mov
shrb
mov
dec
lds
mov
scas
cmp
cwtl
shl
fxch
mov
cmp
rol
or
stos
jmp
push
jno
mov
push
test
push
insb
push
mov
jmp
jb
dec
dec
adc
cmp
arpl
adc
popf
lret
shll
inc
xchg
mov
mov
fdivrs
mov
lods
cmp
mov
jno
xchg
fisubl
xor
push
adc
push
es
stos
sbb
imul
ret
testb
jg
xchg
sub
andb
into
push
insl
shll
push
adcl
orb
jae
or
jbe
or
pop
cmc
insl
push
mov
adc
es
pop
pushf
and
mov
mov
xchg
sbb
mov
call
jbe
aad
xchg
stos
test
ret
mov
jge
mov
dec
dec
fsubrs
les
das
adc
lea
pop
push
push
test
adc
movsb
sub
mov
daa
and
in
fisttps
icebp
das
xchg
adc
sub
and
and
or
std
jno
xor
pop
mov
out
ja
loope
popa
cmp
push
push
imul
mov
popf
xchg
cmpsb
dec
orb
cmc
mov
xchg
push
mov
push
dec
scas
mov
dec
push
test
imul
movsb
mov
out
into
js
lods
cmpsl
nop
ss
outsl
imul
xchg
icebp
jae
pop
inc
addl
rcrb
jae
mov
push
cmpb
sti
inc
stos
in
sbb
sti
adc
push
dec
sbb
add
jge
scas
cmpsl
pop
nop
mov
sahf
int3
dec
pop
mov
sub
test
xchg
data16
test
sbb
push
cwtl
out
loope
gs
mov
stos
inc
add
and
xchg
loope
rcrb
cwtl
and
lods
or
pop
ljmp
jbe
or
push
jp
mov
lahf
in
bound
mov
jns
sub
lret
and
out
lea
das
idivb
daa
cmp
push
scas
shl
daa
icebp
sbb
mov
fadds
outsl
adc
scas
xchg
fcmove
and
fwait
loope
jge
movsl
stos
daa
push
push
jno
dec
jp
mov
outsl
mov
cwtl
out
mov
outsb
jnp
into
jnp
inc
mov
jo
xchg
dec
dec
and
push
stos
mov
mov
inc
mov
cmp
xor
fs
push
jl
push
insl
pop
mov
add
mov
xchg
mov
loope
xlat
sub
mov
cmp
test
fdivs
jmp
mov
mov
mov
outsb
scas
xchg
xchg
cmp
loopne
pop
mov
and
push
mov
mov
xor
imul
mov
int
jle
push
gs
mov
or
fstpl
call
jmp
sbb
dec
stos
outsb
rolb
mov
and
pop
test
mov
mov
test
scas
mov
icebp
shl
insb
cmpsb
sbbl
pop
fsubrl
popf
das
xchg
add
lahf
sarl
adcl
pop
gs
or
cwtl
fistl
xchg
and
in
imul
mov
repz
sub
or
shrl
sub
jns
fsts
or
xor
aam
jo
fcmovbe
cmc
pushf
sbb
imul
ds
jp
xchg
mov
jge
popf
inc
lret
lcall
push
ret
das
in
lock
dec
aam
gs
imul
jns
jg
jno
push
rclb
mov
lods
push
jecxz
pop
fisubl
xchg
test
ficompl
js
push
push
dec
xchg
std
and
jge
xchg
mov
pop
or
dec
mov
daa
lock
cmp
test
jmp
xchg
cmp
xchg
arpl
inc
or
sbb
lds
xchg
dec
dec
adc
xor
push
mov
and
stos
xchg
fisubrs
jecxz
mov
adc
xchg
pusha
mov
int
insb
fucom
sbb
add
pop
movsb
dec
std
pop
test
sbb
into
jecxz
add
inc
ja
jns
clc
jno
mov
sbb
ficoms
pushf
les
adc
test
es
aam
pop
mov
push
pushf
in
lods
pop
jmp
icebp
leave
sahf
xchg
cmp
cmp
pusha
stos
mov
pop
scas
mov
outsl
push
test
popa
repnz
fistps
dec
pop
jl
cmp
sbb
stos
dec
cwtl
jp
scas
icebp
mov
push
scas
mov
popf
pop
outsl
test
adc
lahf
test
xor
insl
lahf
inc
mov
pop
pushf
movsl
sub
xchg
test
mov
lahf
jae
and
iret
out
jge
jae
cmpl
sbb
mov
dec
sbb
jp
pushf
jp
movsl
jg
mov
push
xor
bound
sahf
cmpsb
push
xchg
mov
push
sbb
mov
or
sbb
adc
bnd
dec
mov
mov
sub
jp
sahf
loopne
lcall
popa
push
add
mov
test
and
ror
jge
add
inc
cli
jp
daa
fbld
movsl
scas
cmpsb
movsb
adc
and
loopne
and
inc
mov
cltd
adc
loop
jmp
mov
popa
lock
in
pop
ss
scas
push
loop
mov
pop
lret
xor
add
xchg
addr16
neg
pop
mov
mov
xor
gs
lds
arpl
mov
ja
pop
jecxz
jae
sbb
dec
mov
xchg
dec
lahf
sub
sbb
jae
outsl
mov
xor
or
xor
loope
std
es
les
cmp
ret
xchg
fstps
jecxz
addr16
lret
jne
mov
test
adc
jne
jno
jp
mov
xor
xor
sarl
imul
xchg
mov
aaa
out
gs
lahf
out
jl
mov
mov
mov
stos
pop
loope
jg
popf
mov
push
mov
insb
lret
xchg
orb
xchg
mov
movsb
sub
lds
test
mov
add
lahf
aaa
icebp
lods
insb
sub
rorb
mov
xchg
cmp
push
sbb
scas
xor
push
lret
scas
xchg
rcrb
mov
gs
jo
pop
arpl
adc
in
adcb
or
test
mov
stos
mov
jns
sbb
jnp
dec
bound
mov
sub
haddps
mov
inc
xabort
cmc
mov
movl
gs
imul
push
stos
cmpsl
push
ja
xchg
jne
and
xchg
sbb
fwait
cmp
jno
jge
popf
les
push
or
test
cmpsl
cltd
pop
jmp
push
lods
sub
mov
xchg
mov
sub
insb
jge
mov
mov
and
aas
in
mov
dec
or
jne
pop
cmp
push
xchg
sbb
fsubrs
jne
jno
jne
jno
jns
movsb
sub
inc
jnp
sbb
mov
das
call
scas
mov
jbe
jmp
push
ret
and
lcall
mov
fimuls
jae
add
pop
popa
ss
lods
cmc
dec
pop
add
hlt
and
pop
int
sub
movsb
test
sub
subb
pop
jae
cmp
push
outsl
cmpsl
dec
xchg
les
jl
or
cmp
sbb
aaa
movsl
push
push
pop
jnp
pop
mov
mov
lea
mov
dec
dec
in
pop
mov
cmp
mov
sub
pop
and
jp
cmp
clc
movsl
or
repnz
inc
scas
xor
mov
mov
andl
enter
lea
sbb
mov
adc
push
jg
sbb
cmpsb
fistpll
jp
mov
mov
dec
enter
addl
test
mov
mov
std
jg
ret
jb
movsb
cltd
je
leave
test
push
mov
jl
jno
ficoml
jg
cmp
fcmovu
inc
or
mov
je
lods
push
inc
adc
test
mov
mov
dec
sub
jno
sbb
dec
rcll
mov
test
stos
or
dec
inc
jae
lods
fstpl
ja
shll
dec
lcall
test
scas
jle
ret
mov
adc
in
mov
jbe
ficoms
dec
pop
pushf
xchg
jmp
aaa
mov
daa
mov
aam
cmpsb
inc
test
out
mov
lods
jecxz
dec
rcrl
cmc
lcall
clc
scas
or
push
jne
rcll
cmp
mov
das
stos
cmpl
arpl
movsb
push
fsubp
gs
jbe
int
jns
je
xchg
movsb
pusha
cwtl
movsl
shrb
or
and
lds
push
mov
insl
xor
pop
repnz
lods
lods
jae
fcmovne
mov
pop
and
loopne
subb
mov
shrl
mov
repz
imul
daa
leave
jae
mov
loop
dec
pop
xchg
push
bound
lret
lret
aad
mov
shlb
mov
adc
jl
jmp
nop
pop
ljmp
xchg
cmc
push
xchg
push
xchg
outsb
stc
lret
and
fstl
lods
pop
test
mov
orl
cmp
mov
mov
jg
imul
xchg
and
mov
adc
push
rorl
shrb
lahf
in
sbb
stc
pop
lods
push
sarb
enter
fsubrs
shll
adc
out
scas
jecxz
mov
pop
push
loop
fidivl
xchg
rcrl
mov
push
ss
in
push
not
sub
cwtl
int
pop
xlat
sub
mov
xor
scas
pop
in
mov
mov
cmp
flds
mov
push
jp
pop
mov
cmpsb
push
pushf
movsl
in
mov
testb
sti
imul
in
icebp
pop
mov
inc
imul
jge
lahf
and
mov
int
mov
add
xor
outsb
daa
imul
out
or
popf
and
inc
clc
xchg
push
jae
cwtl
and
rcl
fwait
sti
jne
and
xlat
ljmp
xchg
pop
push
ret
jb
inc
mov
cmp
adc
lcall
fisttpll
or
test
cmpb
imul
sbb
inc
xchg
mov
sbb
mov
push
and
mov
fwait
jae
and
jge
push
mov
pop
mov
shl
mov
mov
mov
in
sbb
or
faddl
xor
andl
jae
hlt
sbb
add
sub
shrl
pushf
or
hlt
lods
jl
dec
imul
mov
jmp
pop
cmpsb
jp
js
dec
inc
mov
fucomi
cmpsb
rcrb
mov
pop
movb
cmpl
pop
jle
aam
inc
hlt
xor
adc
mov
stos
xchg
shll
loopne
imul
pop
cmpsl
sub
insb
jp
shrl
mov
ret
add
out
dec
fstps
jle
mov
xchg
or
gs
pop
jg
mov
adc
mov
popf
addr16
pushf
ss
jle
push
pop
jle
push
sarb
jno
and
cltd
sbb
subb
xor
rolb
ja
pop
pushf
xchg
loop
mov
sbb
sbb
stos
cmp
mov
or
sbb
sbb
movsl
add
mov
dec
jmp
into
mov
cmpl
pop
icebp
cli
cmp
test
sub
lock
es
popf
negb
inc
mov
hlt
xor
movsw
int3
js
popa
scas
adc
cmp
xor
pop
test
test
loope
xchg
andb
jne
push
ret
inc
test
lods
es
lods
cmpsb
in
je
movsb
push
add
into
xor
mov
gs
jne
aam
or
sti
jp
outsl
push
jl
loope
inc
jl
push
inc
add
lock
xchg
inc
jg
or
mov
xchg
cli
jne
dec
xorb
and
mulb
mov
out
mov
sahf
lret
mov
xchg
xchg
js
es
mov
push
adc
mov
push
push
or
pop
push
jb
adc
pop
mov
dec
cmpsb
mov
cld
sbb
jno
imul
mov
test
cwtl
lock
aam
jle
daa
pop
mov
neg
mov
jns
push
stos
insl
dec
pop
nop
shlb
add
or
xchg
test
push
sbbl
jno
pop
popf
pushf
pop
xchg
addr16
jg
mov
pop
mov
in
sbb
xchg
stos
js
xchg
cmp
jge
cmp
sbb
lods
outsb
mov
cmp
push
pop
dec
cmp
insl
mov
je,pt
mov
mov
and
mov
xchg
dec
data16
imul
pop
rcll
or
jle
xchg
mov
repz
mov
dec
pusha
add
pop
sahf
or
add
mov
movsb
mov
mov
mov
fucom
sub
ljmp
gs
bound
dec
lds
adc
out
mov
push
cmp
mov
insl
gs
jmp
and
dec
pusha
mov
enter
sbb
xchg
push
aam
push
add
in
test
cld
imul
mov
rol
sbb
andb
or
jb
sub
stos
xlat
inc
filds
lods
pop
mov
sahf
stos
jecxz
ret
xor
repnz
sti
add
scas
lock
outsl
repz
mov
push
adc
lds
push
cmp
pop
mov
xchg
xchg
mov
mov
pop
cmpsl
call
push
xchg
leave
pop
mov
jno
push
mov
jne
jle
pop
pop
xchg
stos
popa
inc
pushf
xchg
xchg
lods
jp
les
test
jbe
out
ficoml
outsb
sub
xor
mov
icebp
xor
out
fcoml
and
add
add
cs
arpl
adc
bound
sbb
test
fldt
ljmp
sub
lahf
addr16
adc
sub
inc
hlt
xchg
xchg
push
pop
sub
pop
xor
sbb
mov
mov
fwait
pop
int3
sbb
pop
roll
pop
sub
xchg
sbb
pusha
add
pop
mov
inc
ja
jecxz
xchg
leave
imul
mov
mov
mov
jae
fsts
es
push
fwait
imul
stos
mov
mov
cmp
aam
jae
jg
cmp
nop
sarb
lods
and
xor
and
int3
mov
bound
xor
pop
cmc
mov
adc
je
dec
jne
jmp
pop
lea
stc
and
mov
pop
mov
xlat
pop
mov
mov
js
aam
jns
push
es
xchg
addr16
pop
rol
scas
test
sbb
jne
add
xorl
dec
out
mov
sub
aad
lods
loopne
shrl
outsl
test
out
jo
sahf
mov
dec
jmp
jae
mov
enter
or
push
jg
stos
mov
mov
jbe
mov
and
test
sbb
stos
jle
mov
test
sub
cmp
pop
bound
xchg
jg
mov
mov
sar
into
sahf
icebp
je
sbb
mov
push
rolb
stos
aad
xchg
lods
adc
frstor
mov
icebp
stos
js
sbb
js
cmp
aas
sub
add
add
fwait
shll
dec
test
rorl
xor
in
mov
mov
in
push
shrb
ja
jo
mov
mov
in
pop
ds
fldcw
cwtl
fists
add
pop
pop
arpl
or
aas
rorb
loopne
ficoms
sub
mov
mov
jb
jbe
or
push
inc
outsb
bound
stos
sti
lret
pextrw
test
vpaddsb
dec
push
xor
cmpsl
or
inc
xchg
jbe
int3
mov
sub
cmp
pop
into
jne
das
outsb
lret
ret
leave
pop
daa
adc
push
dec
stc
mov
fildll
mov
push
arpl
shlb
add
push
bound
aad
mov
ds
lods
movsl
mov
xor
ds
pop
ret
jne
cmp
mov
mov
fs
add
and
leave
mov
xor
insb
push
xor
mov
in
sbb
mov
orb
enter
scas
push
cmp
cld
or
dec
mov
pusha
lods
push
ljmp
mov
dec
fstps
or
gs
sub
sbb
mov
sahf
imul
das
addr16
pop
sarb
jb
enter
nop
inc
xlat
pop
movl
bound
mov
lea
pop
xchg
sub
xchg
repz
sarl
mov
movsb
sbb
std
jno
lods
test
sub
aad
pop
in
cs
js
sub
sahf
sbb
js
mov
clc
push
ror
shlb
xchg
int
push
xor
negl
fildl
cltd
xchg
mov
sbb
adc
add
inc
mov
mov
movsl
adcb
mov
in
pop
rcl
inc
jl
jo
mov
sub
enter
pop
in
push
test
ss
jne
es
gs
outsl
push
addl
repnz
repnz
outsl
sub
and
push
stc
loop
sub
aad
xchg
test
xchg
movsl
lods
xchg
xchg
push
lea
insl
ljmp
dec
popf
push
inc
pop
dec
xchg
sbb
pop
sub
sub
mov
mov
push
les
movsb
sbb
aam
loope
test
shlb
sub
push
mov
adc
jne
inc
push
popa
inc
inc
movsl
outsb
inc
inc
movsb
outsb
inc
inc
mov
outsb
inc
inc
mov
outsb
inc
inc
lahf
outsb
inc
inc
sahf
outsb
inc
inc
popf
outsb
inc
inc
pushf
outsb
inc
inc
fwait
outsb
inc
inc
lcall
inc
cwtl
outsb
inc
inc
xchg
outsb
inc
inc
xchg
outsb
inc
inc
xchg
outsb
inc
inc
xchg
outsb
inc
inc
xchg
outsb
inc
inc
xchg
outsb
inc
inc
movsb
sarb
mov
xchg
push
nop
movsb
repnz
sub
insl
dec
jns
mov
rcrb
jns
out
cmp
cwtl
jl
ret
movsb
sbb
or
mov
cli
lods
popa
mov
nop
dec
push
inc
pop
and
adc
popa
cmovp
sbb
xchg
in
hlt
out
lahf
repnz
movsl
or
adc
add
inc
pop
cmp
or
jbe
xchg
shl
mov
mov
loop
insl
jle
inc
cltd
pop
mov
rorl
mov
roll
fcmovbe
pushf
push
mov
cmpsl
daa
pop
orb
jle
gs
idivb
lsl
je
jg
mov
lret
ret
fwait
jns
lock
mov
das
lret
dec
mov
popl
pop
pop
mov
push
dec
cmpsl
enter
and
push
inc
fidivrl
pop
mov
sub
int
dec
inc
push
cmp
jo
mov
pop
add
mov
imul
xor
pop
cmpsb
ret
mov
mov
jl
fdivrs
sub
andb
push
pop
mov
fwait
or
push
push
xor
cmc
bound
add
inc
add
stos
sarl
jle
in
inc
cmp
mov
lods
test
fsubrs
rcll
mov
outsb
mov
push
mov
in
push
xorl
sbbl
mov
mov
mov
lcall
lea
and
dec
fs
or
fcompl
data16
popf
jp
mov
or
mov
dec
xchg
mov
leave
pop
adc
xchg
rorb
imul
rcr
test
jmp
sbbl
je
mov
xchg
rcrb
rclb
push
mov
mov
push
fstpl
cmpsb
imul
jmp
push
ss
mov
leave
xor
leave
inc
fmuls
jne
push
loop
jns
jmp
xchg
popa
mov
cmpsb
sbb
imul
test
xchg
push
lahf
cmp
mov
sbbl
mov
ror
aad
lds
data16
bound
popa
sbb
pop
addr16
mov
andl
hlt
jmp
out
test
cmp
pause
mov
clc
xor
scas
sbb
loope
adc
das
shll
lahf
test
xchg
inc
push
out
mov
push
push
loop
jp
pop
sub
pop
dec
adc
fs
test
mov
mov
lcall
lcall
xchg
incl
mov
pop
insl
jns
cmp
or
cmpsl
imul
orl
popf
xor
pop
add
je
imul
movsb
or
stos
xchg
xchg
push
xchg
int
jnp
xchg
inc
jbe
stc
ret
or
ret
jb
popa
mov
lods
popf
repz
pop
xchg
mov
push
add
pop
mov
jne
int3
xchg
imul
bound
ret
xchg
inc
pop
mov
mov
pop
lret
mov
in
cs
aad
idiv
inc
xor
dec
mull
cmp
rcl
cmp
dec
mov
or
fnsetpm(287
std
imul
es
fs
jle
jge
xchg
xor
mov
iret
jp
pop
pusha
iret
jp
inc
adc
nop
cld
rcll
cmp
outsl
mov
incl
add
xchg
push
lock
cmpsb
test
pop
add
dec
sbb
jg
pushw
mov
jns
push
cmp
out
sub
sub
sub
xchg
mov
sbb
iret
jns
mov
push
push
cmpl
add
js
xchg
cs
fcmovbe
popf
mov
mov
pop
cmp
arpl
stos
popf
popf
data16
enter
lret
jg
jp
cmp
add
rol
or
insb
jno
test
xor
jg
bt
mov
repnz
rcl
pop
cmp
test
mov
dec
dec
xor
fwait
dec
dec
pop
or
bound
inc
dec
popa
add
push
dec
stc
cwtl
pop
cltd
dec
psadbw
xlat
in
inc
out
xlat
in
sysret
fsubr
xorl
shrb
mov
inc
mov
xor
xlat
or
jp
jl
sub
in
xorb
sub
xorl
je
test
jne
cli
jne
test
out
icebp
icebp
jge
xor
inc
pusha
mov
mov
leave
ss
fcomi
cli
jg
push
mov
lods
mov
cmpsl
adc
adc
jno
repz
mov
aam
mov
in
imul
mov
outsl
cwtl
stos
rclb
adc
sti
mov
dec
cwtl
inc
orl
leave
hlt
cmp
sub
data16
gs
cmp
add
jl
lret
cmp
sub
data16
gs
cmp
add
jl
lret
cmp
sub
data16
gs
cmp
add
jns
lret
add
ss
bnd
aam
mov
in
xorl
push
repz
fcoms
and
mov
bound
int3
jno
mov
in
mov
fcoms
icebp
out
cmp
jbe
jmp
mov
or
push
add
mov
shll
scas
addr16
add
mov
dec
cmp
fucomi
xchg
pop
mov
out
out
cmp
jbe
jmp
mov
or
push
add
mov
int
test
mov
in
or
mov
out
out
cmp
jbe
jmp
mov
or
push
add
mov
sbb
push
mov
or
xorb
bnd
repz
xorb
repz
fcoms
icebp
out
cmp
jbe
jmp
mov
add
repnz
xorl
out
arpl
push
in
cmp
jno
mov
jns
int
loopne
adc
jmp
mov
mov
pusha
stos
xor
icebp
mov
mov
jmp
fstl
mov
xlat
call
xor
adc
xor
or
shr
cwtl
dec
testl
mov
pop
mov
fimull
aam
incl
lods
fbld
cmp
ljmp
es
std
fcoml
pop
xchg
iret
xlat
sub
xchg
hlt
loope
pop
clc
cli
clc
arpl
or
adc
cwtl
dec
outsl
mov
std
andb
mov
cmpsb
lock
mov
fdivs
mov
loopne
lock
fstpl
icebp
daa
jbe
mov
sub
loop
xchg
push
mov
imul
popa
mov
in
fs
out
rorb
clc
cmp
divb
push
das
push
rcrl
fists
repz
jle
push
incl
push
sbb
fistl
mov
pop
push
inc
pusha
ds
cmp
cmp
xor
clc
lock
out
jo
sahf
scas
fnstsw
clc
fstpt
imul
std
inc
das
dec
hlt
add
outsl
movsb
add
call
in
scas
hlt
lock
sti
clc
decl
mov
sti
add
in
mov
stc
dec
out
jl
push
dec
mov
out
or
mov
mov
ficomps
ja
lods
pop
stos
fildll
inc
adc
xchg
cmp
insb
aaa
mov
mov
fs
data16
cld
mov
stos
lods
mov
call
loop
jg
jp
aaa
inc
push
popl
imul
mov
lea
decb
or
out
aam
cli
aad
sbb
jp
lods
push
push
xor
hlt
movsb
sub
add
test
or
lds
mov
sub
cmp
push
lods
cmp
dec
je
ret
or
add
jbe
imul
inc
imul
sub
pop
fisubs
add
fidivl
mov
sub
mov
xlat
cmp
add
gs
xor
inc
mov
push
or
lock
mov
repnz
cmpsl
or
in
lock
movsl
mov
movsb
inc
xor
push
popa
and
mov
and
mov
mov
mov
cmpsb
sbb
int
cwtl
mov
mov
dec
icebp
xchg
and
lods
hlt
push
xor
mov
cld
divl
fsts
mov
mov
mov
xchg
aam
inc
mov
leave
add
push
les
rcrw
xorb
jmp
add
mov
sub
sub
in
jno
xor
xor
gs
mov
scas
add
add
sub
adc
sub
movsl
mov
sub
mov
cmp
lods
sub
stos
lret
daa
or
xor
aas
jne
mov
push
data16
aam
push
fstp
push
xchg
xchg
out
jl
xor
pop
clc
ds
and
out
test
call
aas
add
pop
in
add
loopne
cmpsb
adc
push
cld
mov
mov
lds
insb
xchg
fs
sbb
loope
mov
jne
mov
lods
scas
jmp
lods
adc
jb
adc
cli
cmp
outsl
pushf
mov
gs
fcompl
adc
xor
pop
in
inc
sbb
cld
aas
ds
push
dec
and
mov
stos
dec
cld
fucomi
mov
aam
or
mov
test
nop
xor
movsb
mov
repnz
mov
sub
enter
cmpsb
add
mov
outsb
in
das
mov
enter
jns
in
testb
out
sbb
cmp
int3
jno
out
lock
pop
mov
mov
jmp
dec
repnz
inc
out
inc
or
xor
int
dec
mov
movsl
jmp
rep
test
mov
int
xor
push
jbe
test
orb
loope
mov
outsl
or
scas
and
stos
ljmp
fisubl
pop
sub
cld
xor
fyl2xp1
push
stos
pop
or
jo
lds
mov
lods
and
das
xchg
pop
dec
insl
icebp
fmull
inc
dec
incb
jp
dec
std
in
cmp
lret
mov
shrb
lret
sbb
ljmp
adc
adc
xchg
pop
rcrb
jg
out
pop
pop
inc
xor
pop
push
out
and
dec
shrl
sub
jl
ss
sub
mov
dec
xor
sbb
lds
add
es
mov
lret
jb
cld
sbb
sbb
pop
mov
jl
jg
adc
push
mov
push
outsl
in
jb
mov
sub
sti
pop
dec
fdivrs
scas
jno
and
xchg
pop
mov
add
dec
pop
rcrb
ljmp
push
and
orb
lret
xchg
jb
cli
test
push
rcrl
pop
jns
aad
jns
rep
lcall
or
ljmp
mov
add
sbb
and
scas
loope
jo
push
sub
aam
dec
movsl
push
inc
jmp
in
jp
pop
mov
fwait
pop
aam
inc
mov
dec
mov
outsb
push
aam
js
sub
scas
repnz
push
jae
lods
dec
ja
xor
cmpsb
jno
xchg
fcomps
jns
aas
test
pop
or
cli
mov
fwait
lods
in
push
fdivrs
or
xchg
xor
jg
cmp
pop
cmpsb
enter
pop
mov
arpl
jbe
lods
mov
repnz
rcrb
out
mov
int
iret
leave
in
dec
or
sub
lock
sbb
test
mov
jno
in
fmul
lret
or
subl
cld
adc
xchg
sahf
jp
aas
xchg
add
sbb
test
jns
add
lods
fdivrl
jne
shl
sub
aad
cwtl
inc
arpl
sbb
std
pop
and
loop
add
lcall
stos
inc
sbb
lods
fists
js
outsl
pop
jmp
movsb
mov
mov
pop
out
hlt
cwtl
std
cld
xchg
mov
test
cmpsb
fwait
mov
out
jns
dec
shlb
call
roll
iret
loope
fstps
mov
test
push
mov
cli
fistpl
lods
mov
sbb
xor
aas
sbb
and
mov
xchg
pop
addl
test
fstl
repz
ja
sub
std
notb
inc
ret
mov
xchg
pop
and
mov
fsubl
in
dec
ret
xor
adc
test
add
jnp
ljmp
cmpsb
or
ret
sbb
mov
icebp
inc
adc
cmp
lahf
push
jl
out
jmp
enter
mov
cwtl
out
dec
sbb
sub
mov
fdivrs
mov
mov
adc
gs
jae
cli
sar
popf
ds
sub
sahf
ret
cmpsl
test
mov
mov
xor
push
lret
dec
mov
cwtl
andl
push
cld
inc
mov
mov
paddd
pop
inc
sbbb
pop
mov
add
bswap
rorl
mov
mov
jno
fdivl
out
xor
jmp
and
cmpsb
sub
out
imull
clc
pop
fs
ret
test
ss
and
int3
pop
ja
sub
jle
pop
lret
push
push
mov
mov
lahf
andb
insl
mov
popf
stos
or
addl
ljmp
adc
insb
push
pop
repz
in
mov
mov
jp
clc
adcl
push
imul
leave
scas
ret
pop
mov
add
jo
or
imulb
jae
dec
das
xor
cmpsl
pop
fcmovu
mov
jae
push
jmp
jl
mov
pop
fisubrl
or
mov
enter
scas
clc
arpl
sbb
mov
cmpsl
mov
cmpsb
jnp
push
add
xlat
and
pushf
pop
add
cmp
and
or
or
pop
test
adcl
xchg
nop
cli
mov
mov
aad
loope
imul
roll
lds
cmc
sub
sub
insb
sub
adc
jl
push
movsb
adc
movsb
icebp
inc
inc
xchg
lods
imul
ds
out
loopne
insl
stc
mov
popa
inc
movsb
arpl
insb
subb
out
push
dec
mov
fstpt
add
inc
fisttpl
int3
sbb
ja
jmp
and
ss
out
xor
dec
ljmp
xlat
mov
mov
mov
leave
or
push
dec
jmp
and
push
filds
sub
xchg
pushf
lret
or
ret
dec
push
fs
repnz
mov
sub
rolb
fdivrs
cmp
xchg
daa
out
shrl
sub
fcmove
ss
mov
pusha
xorl
sahf
dec
clc
dec
ja
insl
cld
test
lret
mov
adc
and
xor
mov
das
sub
dec
iret
cmp
push
aam
inc
mov
fwait
mov
dec
push
imul
and
out
das
mov
xchg
mov
cmp
pop
jbe
jae
mov
or
pop
adc
out
cmp
das
mov
andl
xchg
scas
add
jecxz
cwtl
mov
xor
out
xor
mov
add
aas
sub
stos
mov
sub
out
mov
sbb
aam
shrb
push
call
pop
push
lret
add
fstpt
inc
sub
mov
dec
dec
mov
xchg
jmp
sub
dec
jmp
lea
outsb
inc
and
xchg
inc
movsb
jno
mov
aas
push
sti
fstpt
jmp
out
mov
inc
sbb
shll
or
sbb
lods
cmp
int3
push
jo
scas
or
xchg
mov
hlt
andb
adc
add
daa
dec
push
mov
sbb
mov
xor
lods
fadds
dec
test
mov
rcrl
ret
pusha
call
es
test
outsb
inc
cld
das
add
jo
stos
xchg
cmc
push
iret
cmpsl
add
sbbb
test
cmp
push
idiv
gs
mov
jmp
cs
imulb
sub
les
rcrb
cmpsl
push
cs
mov
imul
and
js
ret
pop
or
fsubs
xor
in
add
push
inc
repnz
add
scas
mov
fisubrs
aam
notl
inc
lcall
inc
shll
sub
push
movsb
repz
add
leave
leave
inc
or
test
adc
mov
out
sarl
mov
mov
out
pop
ss
out
mov
shlb
pop
rcll
xchg
outsl
lahf
lods
xchg
icebp
inc
sbb
add
pop
lods
pop
cmp
xchg
clc
mov
xchg
add
out
cmp
xor
pop
shlb
std
loope
test
xchg
fdivrs
fadd
add
jecxz
inc
jns
fdivs
cmp
xchg
cmpsb
push
add
insb
lds
xorl
pusha
pop
fcoms
cmp
scas
mov
es
sbb
repnz
cwtl
sarb
mov
push
ja
fs
stos
fadds
pop
das
inc
inc
xchg
cmpsl
out
call
imul
add
mov
std
movb
and
push
sub
lret
es
inc
sbb
add
cmpl
jo
popa
mov
lret
sbb
lea
sbb
cli
stos
jnp
mov
xchg
mov
das
adcb
stos
bound
sub
adc
test
mov
cmp
mov
xchg
jns
rcll
push
les
jecxz
ret
push
sbb
icebp
xchg
fiaddl
shll
jo
xchg
add
pop
pop
adc
mov
insb
push
inc
add
js
adc
jle
add
das
or
cmc
push
and
xchg
push
mov
int
cwtl
xchg
in
notl
cmp
int3
iret
fstpt
add
push
xor
xchg
xchg
jge
jle
enter
in
add
mov
ljmp
xchg
inc
xor
add
mov
hlt
adc
mov
jbe
int
subb
cltd
pop
cmp
lret
insb
sub
or
push
jne
or
scas
cwtl
into
roll
sbb
xor
add
scas
bound
pop
push
stos
ss
test
push
fiaddl
inc
mov
push
sbb
jo
add
lods
aas
xchg
xchg
pop
jle
clc
adc
or
xchg
jg
add
jp
pop
insl
sahf
inc
mov
mov
lods
rolb
xor
loopne
push
xchg
aas
xchg
mov
adc
sbb
cmpsb
push
dec
gs
jg
rorl
loopne
mov
mov
pop
out
add
fsubrp
cmp
lock
jae
ret
cmp
dec
xchg
inc
mov
add
add
in
xchg
jb
inc
out
add
and
or
lret
dec
jge
mov
add
xchg
aad
cmp
popf
add
inc
rclb
cmp
mov
add
mov
stos
and
cltd
sbb
add
in
xchg
or
dec
mov
sub
add
call
repnz
xor
adc
lea
mov
idivl
cltd
cmpb
or
mov
les
ret
adc
xchg
dec
xchg
nop
add
lock
iret
sub
lods
in
pop
jecxz
in
loop
cmp
mov
test
dec
mov
xchg
jl
add
inc
lcall
rcrl
fadd
add
sub
or
ljmp
je
bound
sub
add
pushf
and
fdivl
jno
sti
mov
dec
add
xchg
test
sar
clc
push
div
jbe
add
aam
inc
orb
sub
push
outsb
adcl
rcll
or
nop
sbbb
std
add
mov
xchg
jl
pop
fsubs
inc
push
add
rclb
cmp
inc
out
or
and
adc
sbb
mov
xor
pop
pop
fmuls
hlt
shr
push
sbb
daa
hlt
xlat
inc
xchg
imul
shrb
flds
inc
in
inc
rcrb
rolb
into
pop
das
fimuls
push
add
insl
dec
repz
pop
mov
push
aam
xchg
sarl
add
out
test
movsb
xor
rclb
pushf
add
pop
push
sub
pop
rcrb
xchg
stos
dec
add
mov
test
aas
test
mov
mov
es
adc
in
push
xchg
inc
mov
shl
mov
dec
jmp
add
movsl
dec
and
push
shl
popl
aad
xchg
lock
test
leave
je
pop
movsl
xor
xchg
fwait
sub
aam
add
adcb
into
rorl
xor
inc
ss
shll
jle
jae
loope
daa
fs
gs
subb
pusha
or
add
das
rclb
in
and
and
mov
decb
rclb
setle
leave
add
rclb
hlt
call
cmp
popa
or
mov
and
pop
mov
jle
dec
mov
and
sub
add
ror
movsb
pusha
fmull
movsl
dec
sbb
popa
aam
call
call
negb
hlt
mov
xchg
dec
sbb
xchg
push
je
and
rclb
dec
pop
sub
dec
adc
sbbl
loope
les
pop
inc
movsb
and
inc
mov
hlt
lea
mov
xor
rcrb
inc
les
jnp
sbb
push
cmp
jg
sub
cmp
sub
xchg
add
lea
xor
repnz
xchg
mov
xlat
lods
aam
add
loopne
daa
mov
test
xor
fiadds
sub
negl
nop
call
roll
or
fdivr
push
je
dec
or
adc
rclb
adc
pop
mov
daa
push
popa
int
fdivr
push
lcall
sub
pop
adc
jbe
or
daa
cmpsl
fwait
movsb
sbb
push
rcrl
xchg
xor
mov
mov
cld
jl
add
xchg
sbb
fwait
mov
inc
pop
xor
add
popl
push
pop
cwtl
clc
pop
sbb
mov
adc
into
rolb
cltd
pusha
add
imul
push
push
and
out
dec
or
test
push
add
aas
stos
iret
cmpsb
fmuls
pop
lods
shlb
loop
cld
movsb
dec
push
dec
in
test
addr16
add
nop
repz
cmp
xchg
fildl
addb
sub
sbbb
cld
and
adc
shlb
roll
xor
or
nop
xchg
jno
cmp
add
js
and
shll
mov
mov
pop
enter
add
dec
sub
xchg
clc
cli
cmpb
add
inc
adc
add
pop
cmp
mov
sub
sbb
leave
or
xchg
adc
mov
in
js,pt
daa
inc
cmp
out
nop
pushf
jae
loopne
add
mov
xor
outsb
imul
mov
test
mov
dec
cmp
inc
ljmp
pusha
or
lret
pushf
adc
xor
dec
jmp
into
pushf
mov
loopne
push
xchg
mov
cmp
lods
scas
xor
sbb
mov
sbb
lock
inc
arpl
mov
fstps
or
sbb
xlat
sub
or
aas
adc
popf
loop
bound
pop
cwtl
push
sbb
mov
test
stc
pusha
mov
add
xchg
jmp
add
movsl
cmp
lret
and
stos
iret
lock
push
push
sarb
pop
or
lock
add
mov
mov
pusha
std
in
add
dec
std
call
repnz
add
test
divb
xor
js
les
shr
sub
inc
jge
mov
dec
mov
xor
in
rcrl
enter
rol
mov
rorb
inc
jge
aaa
mov
fdivs
push
lods
jp
push
push
dec
clc
add
mov
xor
test
nop
inc
gs
and
cmovnp
fs
movsl
dec
dec
sub
xor
adc
mov
rorl
rcll
lods
cmc
xor
fdivl
xor
xor
subl
pop
movb
nop
xchg
jle
fcom
std
xor
pop
ds
insb
es
scas
pop
shlb
testb
scas
ljmp
mov
adcl
adc
sbb
mov
cld
outsb
add
dec
add
add
sbb
xchg
mov
cs
mov
or
or
lret
rcr
inc
mov
mov
adc
push
cmp
aas
xchg
sbb
lret
or
inc
mov
mov
xlat
pop
adc
nop
mov
in
jno
add
mov
sub
inc
in
dec
xlat
sbb
xchg
mov
jns
mov
fiadds
jne
or
xchg
pushf
jnp
xlat
ja
xor
loop
mov
add
lahf
dec
orb
or
pushf
pop
add
push
cli
pop
aaa
push
int
jo
mov
push
jo
sub
cmpsb
pop
lea
or
dec
adc
add
dec
cs
adc
add
cmc
push
cmp
add
rorb
sbb
sub
nop
jo
mov
push
push
jl
push
nop
and
ret
xor
int
jl
and
mov
jle
sub
xor
pop
sbb
cmp
lock
mov
xchg
add
mov
sbb
int3
adc
cltd
aam
inc
push
test
add
sub
andl
imul
mov
loopne
push
add
sbb
aaa
adc
cmpl
cld
xor
xchg
sub
sub
cmpb
mov
pusha
fstl
arpl
cltd
pop
mov
pop
pop
aam
cltd
add
sbb
pop
enter
loop
ret
insb
xlat
mov
cltd
add
fdivrs
xchg
add
aam
insb
mov
mov
add
aas
pop
dec
hlt
fisubl
scas
sbb
inc
sbb
les
mov
mov
orl
pop
dec
xchg
pop
mov
sbb
cmpsl
ds
cld
jne
adc
arpl
lea
popa
rorb
adc
outsl
or
daa
inc
inc
shrb
aas
dec
pushf
push
xor
in
jmp
shr
push
enter
mov
outsl
inc
and
pop
andl
mov
jae
xchg
jns
add
cmp
mov
mov
cmp
jmp
inc
pop
push
adc
push
sbb
mov
cmp
out
inc
lock
xchg
test
subl
ja
add
sbb
mov
int3
push
push
cmp
push
insb
inc
push
mov
rcrl
ret
jg
lcall
or
in
cwtl
nop
loop
fwait
sub
or
daa
movb
sub
lock
cs
aaa
fadds
sub
or
mov
rclb
in
pop
or
cli
lret
mov
mov
and
fcmovnu
push
sub
js
push
cmc
add
jo
sub
in
addr16
lahf
aad
inc
cmp
int3
xor
cmp
into
add
out
ds
lret
daa
push
nop
sbb
cmp
daa
adcl
push
jle
pop
cmovle
inc
cld
and
test
aas
mov
adc
push
sub
pop
aad
cmp
xor
and
push
ds
cmc
aad
mov
sti
sbbb
sarb
fsubr
mov
dec
adc
jle
nop
sub
and
inc
sbb
in
fdivrl
sub
or
aad
inc
jle
sbb
xchg
repnz
in
or
dec
xor
clc
add
fwait
and
dec
sti
int3
push
or
add
cwtl
pop
jns
stc
and
nop
rclb
add
out
enter
popf
xchg
push
jle
rorb
stc
sbb
cmpsl
call
ficomps
adcl
movsl
pop
mov
push
cltd
add
call
mov
cmc
sub
push
pushf
lods
push
pop
lcall
stos
test
sbb
sbb
mov
push
mov
sbbl
aaa
jns
lods
lar
rcrl
or
add
mov
pop
push
clc
pushf
insb
add
inc
leave
mov
and
clc
pop
inc
loopne
pop
adc
pop
outsb
cld
add
js
push
jo
push
adc
mov
xlat
ret
loope
mov
nop
ret
xor
jbe
push
inc
jl
aam
pop
or
xchg
enter
into
and
jle
gs
sub
jmp
cli
sti
and
loop
xor
daa
add
cmp
add
lock
test
add
push
cmp
jl
popa
fisttpll
dec
sbb
roll
inc
pushf
mull
mov
int3
sub
in
mov
cmc
or
pop
inc
rcll
add
push
out
pop
push
inc
push
in
clc
or
cwtl
rcrb
mov
push
or
into
cmp
xor
dec
repz
test
mov
mov
shrb
xor
inc
incb
enter
sub
mov
je
xlat
add
add
jne
and
cmp
mov
loop
xor
jno
sub
std
lods
test
jl
sar
pop
cmp
sbbb
test
jne
cltd
jo
push
cmc
push
or
add
dec
jl
and
mov
mov
mov
inc
cmpsb
cmp
or
push
and
fmuls
popa
int3
dec
clc
add
push
adc
push
clc
les
fmull
into
sub
arpl
add
xor
mov
xor
xor
push
inc
jmp
jb
adc
shlb
adcl
andb
mov
fildll
lcall
mov
mov
stos
cmp
inc
aas
push
pusha
inc
push
or
enter
loopne
xor
jno
test
adc
and
fildll
aaa
int
add
std
inc
in
lds
mov
add
les
cmp
ljmp
popa
test
or
test
inc
xlat
sub
test
mov
fisttpl
ds
pop
loopne
push
mov
pop
cmp
ret
push
and
mov
mov
lea
dec
jle
pop
push
mov
fwait
mov
adc
das
mov
push
or
pop
inc
cmpsb
dec
adc
pop
or
mov
popf
call
pop
cmp
pusha
add
mov
xchg
jle
xor
jo
testl
cld
cmp
loop
adc
ds
unpckhps
dec
xchg
sarl
fildl
filds
or
inc
xor
call
fsubrs
cmp
push
mov
mov
cmp
or
adc
fadds
xchg
cltd
ja
inc
push
dec
pop
in
flds
rcl
movsb
mov
fwait
int3
adc
pushf
mov
sbbl
pop
push
mov
jg
pop
mov
sahf
jmp
cmp
fnsave
inc
mov
sub
xchg
loop
leave
mov
es
dec
rorb
notl
mov
roll
subl
js,pt
pop
jae
adc
jo
jge
test
sub
push
sub
or
mov
push
mov
dec
leave
sub
mov
aam
int3
in
mov
add
push
mov
mov
xlat
add
pusha
outsb
sub
mov
scas
add
rol
inc
and
xor
xchg
dec
into
rcrb
aas
adc
pop
pop
inc
sbb
fdivrs
jle
adc
add
shll
jp
cld
sub
mov
inc
and
or
aaa
xchg
dec
add
shrl
movsb
test
mov
rcrl
enter
xchg
fldt
movsb
dec
xor
add
loope
inc
int
and
mov
rolb
hlt
push
inc
shrl
movsb
shrb
in
sbb
cmpl
and
or
inc
je
inc
into
and
call
das
xor
aad
and
inc
add
cmp
shlb
add
popl
stc
cwtl
add
pop
add
cmp
aam
loopne
add
and
dec
pop
add
mov
mov
cmp
lret
les
int
pop
inc
test
add
lock
nop
cmp
xchg
pop
dec
mov
faddp
stos
cld
or
jmp
pusha
orl
xchg
jbe
js
adc
mov
and
imul
shll
jg
or
pop
ja
rcll
aam
sub
lds
adc
dec
inc
xor
sarl
fnsave
es
dec
jle
rclb
inc
sbb
ficoms
add
pop
in
ljmp
adc
aas
cmp
mov
mov
scas
dec
adc
loope
pop
mov
dec
xchg
xchg
in
inc
or
mov
inc
cltd
pusha
lea
add
test
mov
mov
aas
pop
nop
or
sbb
pop
push
std
andb
push
xor
sub
je
inc
dec
nop
aaa
inc
mov
rcl
mov
das
cld
adc
rcrb
or
xor
pop
and
inc
mov
test
inc
mov
or
add
imul
and
mov
in
mov
xchg
fdivr
jge
test
xor
adc
or
add
cmp
jns
es
rol
ds
or
adc
or
inc
mov
mov
sti
adc
lock
adc
xor
pop
or
in
lcall
in
addb
divb
pop
add
fisttpll
ret
mov
rcrl
adcl
loope
lods
add
mov
sub
mov
nop
push
rep
mov
mov
ret
jno
add
cld
add
loope
jne
jns
adc
xchg
sub
cwtl
and
mov
push
orb
shrl
int
arpl
add
jbe
das
fsubrl
hlt
or
inc
mov
mov
sub
cmp
aad
mov
adc
stc
mov
and
sarb
sub
cmp
add
cmp
mov
xor
pop
mov
test
sti
push
iret
and
call
and
das
xor
push
lods
dec
inc
mov
pop
xor
pop
mov
and
or
cltd
cmp
lea
fnstcw
lods
loopne
adc
push
or
std
xchg
es
jns
push
in
stos
and
xchg
data16
fwait
int
rolb
into
lret
pop
out
xchg
cld
push
or
or
int3
add
fisubl
mov
mov
hlt
jns
sbb
je
test
jp
xor
subb
and
adc
and
das
int3
add
dec
pop
sbb
mov
aaa
pop
ret
iret
mov
pop
das
xchg
loopne
and
and
adc
add
jmp
ds
mov
mov
jno
outsb
rcll
jns
sbb
add
ret
mov
adc
outsl
cmp
and
dec
pop
rorb
je
fstpt
inc
xchg
cmp
add
out
mov
mov
sbb
mov
push
lock
cwtl
add
aaa
push
je
pop
daa
inc
xor
or
xchg
jbe
pop
dec
pop
bound
mov
mov
add
or
jae
aam
and
pop
and
adcb
or
jl
mov
pop
xor
addb
fcom
dec
loop
jne
add
add
adc
jecxz
adc
scas
jne
xchg
popa
mov
pop
sbb
sub
cmp
inc
push
inc
fsub
aam
mov
and
dec
jo
and
sbb
in
add
std
adc
pop
out
mov
lds
mov
into
mov
and
mov
xor
mov
loop
pop
inc
nop
add
rclb
lahf
leave
push
les
add
mov
adc
xchg
cmc
nop
loope
cmp
or
jns
scas
jo
push
add
adcl
mov
lret
lods
mov
rclb
cmp
std
cmp
shrb
dec
enter
mov
mov
aad
sbb
mov
adc
dec
and
sbb
push
shlb
int
xchg
add
sub
and
add
cltd
mov
aas
dec
ret
cmp
repz
inc
or
in
fdivrs
iret
and
aaa
pop
ror
enter
and
cwtl
or
mov
push
and
faddl
imulb
pop
add
stos
ret
jne
jle
cmp
imul
xchg
jae
xor
popf
nop
jo
nop
jno
add
add
xor
rorb
dec
movsl
sbb
adc
insb
mov
rclb
and
lahf
movb
pop
cmp
xorb
popf
fcoms
fadds
or
xchg
popa
sbb
aam
int3
enter
xor
call
test
cmp
or
and
and
inc
loope
push
jmp
mov
mov
mov
mov
sbb
or
adc
pushf
sub
cmp
mov
inc
pop
rcrl
decb
sub
fdivl
call
jl
add
cmp
mov
pushf
xor
and
fildl
jb
shll
xor
xchg
mov
xor
aam
mov
fwait
and
fstps
ret
cmp
ss
aam
jmp
hlt
xchg
add
sarb
rol
mov
cmp
pop
punpcklbw
mov
les
add
outsb
inc
inc
fsubrl
or
adc
cmp
mov
dec
xor
adc
addr16
imul
dec
cli
xor
mov
add
fistl
cmp
addb
int3
dec
mov
push
dec
mov
inc
sti
bound
movsb
cmp
add
lret
add
fdivr
popa
xlat
inc
fldl
adc
out
add
dec
mov
mov
filds
inc
mov
add
fildl
add
cwtl
es
sti
mov
and
inc
add
dec
jl
cmp
xchg
push
pop
addb
insb
jnp
add
ror
cltd
dec
add
mov
sbb
cmp
ret
adcl
vhaddpd
or
mov
add
pop
je
fistps
repz
xor
fimull
inc
push
mov
cld
dec
push
adcb
adc
es
pop
pusha
mov
push
adc
out
aas
sbb
in
lret
add
push
fildl
and
or
xchg
cmp
cltd
xchg
sbb
or
add
rolb
cli
adc
or
pop
dec
adc
xchg
cmpsb
test
mov
call
sub
and
cmp
imul
int3
pusha
data16
or
ja
ret
xorb
add
cld
mov
and
sub
inc
or
enter
test
in
fistpl
mov
jb
xchg
mov
into
add
dec
dec
add
arpl
rcll
adc
and
cltd
sbb
icebp
and
fisttpl
popf
dec
shll
orl
pop
leave
add
sbb
data16
repz
stos
ss
jo
push
notb
cmp
pop
rorb
push
add
sti
clc
test
arpl
int3
pop
aaa
nop
subl
or
dec
xor
dec
aad
jmp
outsl
shld
repz
mov
fnstcw
les
cmp
xor
or
mov
jecxz
mov
dec
add
jb
jmp
or
imul
fidivrl
imul
mov
push
pusha
push
addr16
jge
pop
dec
xor
adc
nop
loopne
fisubl
or
pop
cmp
into
cmp
clc
pushf
gs
mov
pop
sub
or
pop
sbb
sub
inc
or
leave
mov
add
push
add
add
mov
adc
js
inc
movsb
xadd
mov
rorl
sbb
ss
or
push
push
jo
or
fcom
adc
mov
je
sbb
sub
push
jns
stos
jae
xor
mov
xchg
rolb
pop
stos
pop
das
int
hlt
add
mov
xchg
push
orb
adc
and
mov
andb
cs
adcb
es
sub
testb
js
mov
pop
xchg
xor
cwtl
insb
and
xor
or
adc
subb
mov
pusha
mov
pop
je
jg
fdivl
or
dec
popa
mov
xchg
add
jb
inc
call
pop
sbb
sarb
das
aaa
imul
sbb
stc
adc
jo
pop
adc
nop
inc
cld
mov
clc
xchg
out
in
cltd
fdivrl
ret
mov
ds
lods
outsl
clc
jo
push
cwtl
xchg
xchg
rorl
cmp
push
jecxz
or
cld
test
xlat
ss
and
cmp
test
sbb
cmp
cmpl
or
fmull
stos
or
incb
jl
xor
int3
ds
cmp
cmc
xorl
sub
stc
mov
imul
sub
add
inc
fiaddl
inc
cmp
lock
in
or
or
and
mov
jmp
shl
data16
push
imul
jno
inc
xchg
leave
inc
add
roll
fiadds
push
je
push
mov
out
loopne
pop
pop
adc
xchg
pop
nop
and
aas
push
sub
mov
cmp
inc
add
and
add
pop
xor
push
filds
inc
orb
xchg
sbb
pusha
inc
cwtl
jae
add
jecxz
xchg
xchg
jbe
mov
sub
add
mov
sbb
dec
pop
mov
mov
repnz
mov
push
cwtl
jge
jecxz
push
mov
and
lea
xor
add
xor
popa
push
or
push
add
in
imul
pminub
mov
js
in
mov
ds
sbbl
or
cmp
push
dec
add
add
inc
jns
sbb
xor
sub
nop
inc
pushf
sbb
add
sub
outsb
test
mov
xchg
add
test
add
test
add
pop
mov
adc
mov
xchg
adc
add
fiadds
imul
push
mov
loopne
test
aaa
dec
push
sub
dec
movsb
movsb
cmp
ret
jg
jnp
fcoms
mov
add
inc
das
sub
subb
pop
add
pop
call
jp
pop
bound
cld
gs
jo
and
mov
outsb
sub
std
nop
pushf
add
rorb
cmpsl
dec
push
adc
dec
push
rorl
dec
movsb
push
or
push
inc
inc
mov
fidivrl
pop
dec
and
in
les
mov
and
cmp
cmpsb
jecxz
ret
or
cmpsl
dec
int3
shr
test
fbld
sahf
add
mov
fdiv
sub
and
in
je
pop
cmp
daa
mov
and
rorb
enter
pop
fists
push
scas
icebp
add
push
mov
inc
nop
add
in
mov
movl
in
insb
lahf
add
sub
js
mov
cmc
sbb
imul
int3
loopne
mov
lcall
inc
mov
cmp
pop
adc
jecxz
push
add
gs
dec
outsl
std
mov
or
pop
push
sbb
into
adc
cmpsb
sbb
inc
in
add
dec
inc
outsl
mov
lahf
add
mov
fists
push
repnz
andb
mov
jo
inc
add
outsb
rcr
sbb
outsb
push
mov
test
ljmp
sti
add
mov
movsl
ds
cltd
add
rcr
ficomps
add
push
inc
test
jbe
adc
call
rorb
std
or
cmpsb
push
cwtl
sub
lock
fildl
xor
add
xchg
pop
rolb
mov
add
call
jg
mov
scas
pop
add
test
xchg
adcl
or
xchg
movsb
aam
sbb
add
pusha
sbb
add
push
dec
or
nop
rcll
dec
lds
fdivs
pop
inc
xor
adc
pop
out
add
and
or
in
add
stc
test
and
add
jns
test
dec
sub
aam
jo
imul
jbe
mov
cwtl
xlat
in
ret
sbb
lock
dec
lret
cmp
fld
cmp
pop
dec
addr16
aaa
loopne
cmp
mov
xchg
xor
shlb
enter
mov
cwtl
lock
add
sbb
cmpb
dec
mov
add
jo
inc
insb
gs
shlb
add
adc
inc
cld
add
sub
or
xchg
mov
mov
movsb
stos
xor
aas
int
or
hlt
push
pop
xchg
loope
mov
daa
push
mov
mov
les
mov
push
fwait
adc
clc
pop
inc
add
cli
xor
in
nop
in
ljmp
pop
lcall
add
lret
dec
pop
cld
call
jns
xor
popf
out
out
or
and
nop
sbb
cld
pop
push
orl
adcb
subb
sbb
pop
inc
push
sub
repnz
sbb
enter
cltd
pushf
mov
pop
imul
push
call
int3
sub
mov
testb
mov
push
push
notl
in
push
push
or
or
mov
pusha
pushf
cmc
aaa
inc
add
xor
push
cmp
pusha
out
icebp
sbb
push
rorb
cs
cmp
stos
das
add
faddl
xor
js
mov
or
out
cs
pop
and
addb
add
push
dec
sbb
negl
push
mov
in
pminsw
fiadds
sub
add
push
dec
imul
sub
sub
test
inc
aam
ret
lahf
mov
ljmp
add
mov
es
push
adc
push
cmp
in
in
add
mov
push
mov
add
and
add
xor
mov
and
sbb
scas
mov
test
jp
in
fiadds
xchg
movsl
enter
into
lahf
pop
sub
xchg
mov
cmpsl
jle
das
xor
sbb
add
mov
leave
les
int3
mov
cpuid
pop
mov
or
lahf
shl
imul
mov
adc
dec
das
cld
andb
mov
popf
jg
jns
outsl
adc
rclb
mov
xchg
idivb
push
push
fldl
ss
cwtl
shl
dec
or
add
sbb
xor
fiadds
into
repz
dec
mov
shll
sub
mov
xor
enter
flds
mov
cmp
pop
int3
xor
loopne
shlb
cmc
push
mov
pop
les
push
push
mov
in
pop
test
inc
icebp
or
movsb
loopne
loope
cmpb
add
mov
inc
xchg
cmp
mov
in
sub
clc
clc
push
cmp
addr16
sbb
stc
cmp
cmp
into
xchg
push
rorl
mov
rol
cmp
dec
or
repz
jo
inc
mov
xchg
pop
test
jns
add
xchg
jbe
mov
jo
dec
js
xorb
add
in
sti
push
xor
scas
add
push
into
sbbl
loopne
jg
or
jb
leave
clc
push
pop
mov
add
cli
stos
iret
add
xchg
inc
xchg
movsl
pop
dec
inc
scas
xlat
ret
rcrb
pop
mov
imul
inc
into
add
xor
movsb
call
cld
xlat
jne
cli
add
or
rolb
iret
xchg
ret
and
leave
xor
cld
and
adc
loop
int3
or
faddl
and
scas
push
rcrb
xor
inc
pushf
sub
loopne
out
cmp
addb
sub
sarl
add
into
imul
add
push
out
pop
mov
xor
pop
test
enter
jge
mov
and
outsb
xor
inc
xor
stc
iret
or
adc
sbb
rcll
addl
leave
mov
cmp
inc
xchg
ret
rol
stos
or
mov
es
fdivr
rcl
popa
sbb
test
mov
jbe
sub
inc
inc
add
dec
cli
pop
mov
sbb
cwtl
test
add
iret
test
popf
roll
nop
mov
xor
lret
mov
mov
lock
sub
mov
push
push
xor
xlat
or
jmp
ds
test
adc
mov
mov
repz
jns
arpl
adc
adc
mov
outsb
adc
sbb
jae
or
and
push
out
adc
dec
dec
or
sub
insb
js
mulps
inc
filds
sub
lds
or
imul
test
or
in
jb
mov
add
mov
jns
cwtl
mov
out
sti
add
mov
fwait
adcb
addb
andb
inc
add
pop
mov
cs
sbb
je
lds
xor
stos
imul
mov
adc
lcall
jo
test
in
rol
dec
das
or
pop
ficompl
repnz
add
add
inc
add
stc
jae
sbb
leave
and
push
inc
add
add
mov
cmpsb
daa
sbb
imul
dec
or
xchg
and
pop
imul
push
adc
sub
xor
mov
mov
stc
pop
mov
bound
repnz
add
dec
sbb
mov
adcb
add
add
xor
test
sbb
adc
shlb
add
ret
dec
movsb
mov
jbe
add
cltd
push
or
or
mov
cld
in
push
fmuls
inc
inc
cwtl
pushf
xchg
and
mov
decl
jp
or
daa
sbb
dec
dec
push
loopne
mov
lea
adc
jl
inc
and
test
xor
in
and
jnp
cmp
js
mov
je
rclb
pop
cwtl
pusha
es
loopne
jne
adc
xchg
or
inc
rorb
fiaddl
xor
xor
stc
inc
or
in
adc
push
fdiv
push
add
xchg
inc
hlt
sub
sarb
sub
repnz
xchg
inc
dec
mov
adc
inc
mov
js
xchg
push
or
inc
and
jns
lret
or
dec
jne
mov
inc
mov
add
add
fldl
pop
xor
inc
adc
pushf
into
aad
add
cltd
cmpb
arpl
inc
test
pop
dec
lods
inc
lods
dec
rolb
std
mov
shrl
arpl
push
fcompl
cmp
add
ja
jno
cmp
cmp
adcl
fstp
add
pusha
or
mov
or
push
daa
mov
add
cmp
mov
xorl
lock
mov
sbb
mov
pop
mov
or
mov
add
sbbl
imul
incl
in
imul
xadd
loopne
xchg
sbb
lea
test
cltd
sub
inc
into
push
sub
jo
jle
sbb
std
and
js
mov
pusha
mov
dec
arpl
roll
nop
mov
es
cmp
lret
xchg
shlb
add
test
inc
aas
mov
test
ret
sub
push
mov
and
pmullw
sbb
inc
and
test
dec
and
bswap
push
mov
loopne
test
dec
inc
test
loopne
xor
mov
iret
out
fisubs
lcall
inc
lock
lock
push
and
scas
test
mov
pusha
xchg
icebp
subb
stc
daa
add
push
mov
decl
cmpsl
and
add
mov
jge
int3
aaa
inc
sbb
aam
mov
scas
xchg
enter
and
cli
cmp
sbb
jne
xor
les
es
mov
cmpsb
je
fcomps
addl
sbb
test
mov
outsl
push
addb
rorb
movsb
inc
adc
aad
xchg
pop
fistl
icebp
dec
fbld
stos
call
jo
popa
test
call
pop
ret
mov
cmp
shl
scas
dec
jle
mov
or
jl
sbb
popa
in
jle
sbb
adc
push
dec
fs
icebp
lea
pop
add
mov
sub
fimuls
push
push
xor
pop
or
shll
daa
imul
add
ds
sub
scas
shlb
jge
testb
pop
add
int
pusha
es
pop
add
in
jp
ret
pushf
push
mov
rolb
xor
add
lods
cmc
push
fists
add
rorb
xchg
push
pusha
test
sub
test
mov
pusha
data16
add
push
imul
push
shll
add
lret
in
sbb
rolb
ja
lahf
adc
inc
aam
add
mov
imul
repnz
stos
dec
sub
nop
popa
mov
xor
dec
jmp
test
push
cmp
loope
test
jl
or
and
cmc
mov
mov
ldmxcsr
lock
sub
mov
lock
dec
mov
and
fs
xchg
mov
stc
and
out
and
sbb
dec
inc
je
cmp
subb
mov
lods
pop
nop
out
inc
sbbb
testb
inc
add
rorl
adc
dec
inc
inc
jmp
sub
arpl
push
xchg
outsl
mov
sbb
dec
inc
fwait
pop
cmpsl
and
rorl
inc
icebp
sbb
leave
cld
hlt
adc
xor
inc
mov
enter
inc
bound
sbb
xchg
pop
movsb
push
shlb
and
xchg
sbb
jb
adc
lods
inc
mov
push
orl
xlat
add
cwtl
fadds
fwait
and
mov
adc
mull
aas
pop
dec
out
pop
and
mov
sbb
xchg
lret
mov
push
pop
test
fs
and
cmpb
push
flds
cmp
dec
jbe
mov
inc
cmp
xor
lcall
popa
add
fwait
sub
cmc
xchg
mov
in
xor
sbb
lea
sbb
add
outsl
iret
bound
inc
sub
cmp
pop
sarb
push
jl
mov
mov
push
mov
inc
mov
mov
in
xor
mov
jbe
and
inc
mov
add
mov
out
pop
lods
sbb
and
mov
shr
fwait
mov
es
je
fdivrl
add
and
xchg
lods
dec
push
insb
add
vhsubps
insb
add
in
xor
pop
sub
std
movsb
dec
jl
or
andl
in
add
cmp
push
inc
mov
inc
ret
rolb
rol
xor
xor
inc
daa
mov
xor
or
aas
inc
sbb
lea
inc
call
dec
jge
mov
pop
push
add
jne
test
sbb
testl
hlt
psubw
sarb
jbe
add
mov
xchg
add
pop
rcll
ret
sbb
cld
stos
mov
or
add
jle
iret
sbbb
inc
les
or
flds
xchg
mov
jae
rcrb
nop
lret
lock
jecxz
sbb
inc
mov
sub
and
and
dec
fcoms
or
or
mov
mov
xchg
push
add
jne
popf
pop
cmp
inc
cmp
and
ja
add
and
xchg
push
sbb
fs
pusha
shr
adc
push
add
lahf
test
cmp
incb
dec
mov
push
pop
stos
out
xor
inc
push
push
add
push
pop
pop
xchg
xchg
sbb
rsqrtps
and
mov
xor
addb
or
sbb
push
scas
add
je
into
hlt
repnz
sbb
push
mov
xchg
les
mov
mov
and
mov
or
test
add
adc
faddl
shlb
outsb
sbb
sub
in
sbb
dec
push
mov
les
pusha
mov
nop
in
and
dec
insb
aam
pop
enter
or
add
add
sub
adc
or
call
hlt
cltd
pop
scas
inc
mov
pop
jp
test
xchg
out
push
out
cmp
test
je
jno
decb
or
dec
es
xchg
push
cmp
cmp
roll
aad
fbld
mov
ret
or
les
cmc
xsave
outsb
push
mov
fistl
test
cmp
movsb
inc
aaa
push
fistl
sub
sahf
popa
mov
sub
shrb
hlt
mov
add
sub
lock
mov
push
mov
dec
xchg
mov
lock
push
jns
sub
call
repz
adc
add
test
pop
mov
sbb
inc
loopne
push
scas
fmull
add
sub
mov
js
dec
mov
mov
pop
stc
lods
adc
pop
cmp
adc
push
sarb
add
or
cwtl
mov
stc
out
mov
adc
lods
jle
push
sub
pop
sarl
add
xchg
sbb
push
and
testl
adc
dec
je
sti
pop
faddp
nop
and
aaa
cmp
pop
jmp
xor
dec
rolb
push
arpl
pop
mov
sbbb
lahf
call
and
mov
jl
adc
sub
test
cmc
subl
nop
adc
sahf
jo
aam
and
add
fnstcw
mov
lret
in
sub
inc
mov
call
or
addb
push
imul
mov
mull
xchg
mov
hlt
push
xor
mov
or
push
dec
pusha
sub
int3
inc
sti
add
test
xchg
fcoms
dec
aas
and
push
rorb
stos
and
cmp
jno
data16
hlt
sbb
rorb
add
out
xchg
pop
add
in
fisttpl
dec
movsl
bound
add
nop
movmskps
or
mov
rcll
or
cmpsb
clc
ja
jo
jle
inc
add
push
icebp
test
test
cmp
cmp
xchg
add
mov
and
mov
inc
mov
aam
add
sbb
pop
test
add
int
clc
jbe
in
popf
push
insl
or
mov
adc
mov
fcompl
push
rolb
mov
ja
or
mov
lahf
xor
dec
xchg
or
sub
int3
or
fadds
rcl
pop
pop
inc
mov
or
adc
mov
pop
in
add
inc
xchg
unpcklps
shll
dec
push
nop
or
call
mov
mov
or
hlt
xchg
xchg
inc
and
pushf
shrb
add
jbe
int
ss
cli
mull
jne
call
xor
inc
pop
enter
dec
xlat
bound
dec
sub
rclb
sub
add
lods
arpl
or
xchg
adc
inc
dec
cwtl
clc
mov
push
xor
movb
aas
inc
jb
mov
dec
sub
iret
hlt
sar
std
pop
mov
sti
or
push
add
jae
xchg
xchg
and
add
aad
dec
test
orb
out
bound
lret
fcoms
mov
lock
add
fdivrp
dec
xor
inc
xchg
xor
dec
shlb
inc
or
cs
xor
and
mov
sbb
inc
add
test
xlat
sub
mov
mov
xor
push
clc
lcall
aas
test
aam
rorl
mov
xchg
mov
cwtl
mov
mov
add
dec
xchg
inc
sbb
pusha
mov
loope
movsb
loopne
imulb
sub
clc
add
outsl
cmpsl
cmc
sbbb
mov
pop
shlb
fs
into
inc
sbb
push
leave
dec
jo
add
adc
movsl
adc
jns
cmp
das
inc
inc
pop
nop
stos
nop
xor
mov
xchg
cmp
pop
rcrb
mov
mov
nop
cmpsb
inc
repz
add
cltd
daa
fistps
add
pop
out
in
dec
ss
xor
adc
stos
loopne
test
pusha
add
cmpsb
and
xor
xchg
and
pop
orl
cmp
add
cmovno
sub
or
stc
jb
int3
pushf
sub
and
in
es
imul
xchg
repnz
cmpsb
es
jo,pt
fcmovnb
pop
xor
in
xchg
lds
adc
inc
popa
lret
fistps
pop
inc
mov
push
aam
mov
movsb
mov
mov
popf
mov
enter
ret
push
aam
lahf
push
add
call
cwtl
cltd
sbb
mov
xchg
dec
jl
js
mulb
lods
js
mov
mov
add
xchg
dec
sub
cwtl
add
stc
das
dec
gs
mov
push
sub
ljmp
adc
imul
mov
mov
rcrl
inc
dec
add
xorl
mov
fistpl
inc
xchg
inc
fdivl
in
mov
ljmp
movsb
das
cmpsb
mov
sub
hlt
mov
test
mov
push
xchg
scas
xor
cmpsb
fs
mov
and
ja
cmp
cld
ret
ret
rclb
push
push
fdivl
rclb
pop
or
add
push
aaa
bnd
roll
les
push
stos
fdivr
rcl
mov
push
push
dec
push
pop
add
int
xchg
adc
mov
sub
mov
das
leave
push
movsb
xchg
sbb
int
mov
mov
and
mov
xor
mov
fwait
mov
add
cli
das
and
imul
mulb
outsb
loopne
pop
add
add
bound
or
xor
cs
imull
sub
adc
test
rcrb
push
push
dec
inc
xchg
and
fwait
add
jno
out
imul
dec
adc
test
fs
mov
or
xchg
movsb
inc
cmc
mov
repz
rorl
mov
pusha
or
mov
and
mov
repz
dec
xor
push
jp
inc
arpl
inc
sbb
rorl
pop
mov
in
adc
in
mov
loopne
xor
and
jnp
jge
or
sbb
in
pushf
sbb
cwtl
fdivrl
sub
jo
and
js
pop
je
popf
pop
dec
push
jbe
mov
dec
in
shrl
add
jns
adc
inc
loope
xor
mov
and
add
inc
repnz
push
mov
mov
pop
mov
inc
xchg
xchg
roll
dec
push
orb
call
mov
pop
add
inc
subb
add
jbe
mov
jae
out
lea
stos
dec
adc
pop
pop
jl
dec
xchg
cwtl
sarb
into
mov
mov
pop
jae
sbbb
add
xor
push
xchg
add
ret
and
xor
push
lods
call
orb
loop
gs
xchg
mov
in
fldt
imul
pop
mov
lock
sbb
and
movsb
push
sbb
adc
mov
sub
hlt
subb
cmpsb
rcrb
cmp
addb
adcl
xor
cld
mov
adc
pop
push
jp
sub
cmpsl
lret
push
lock
sbb
mov
mov
push
pusha
inc
mov
enter
cli
mull
mov
xchg
test
or
mov
sub
mov
shlb
movsb
xchg
sbb
add
mov
fnstsw
sub
movsb
sbb
dec
push
nop
inc
lods
nop
sbb
outsb
js
adc
dec
and
repz
pusha
cld
scas
dec
push
insb
sbb
mov
loopne
sbb
mov
xchg
sbb
mov
sbb
dec
xor
je
mov
in
mov
sbbb
add
inc
inc
dec
adc
cmc
insl
add
rcrb
pop
ss
scas
addr16
fcomps
add
add
sbbb
adc
cwtl
push
fs
rorl
sub
lds
xor
add
shrb
dec
jl
mov
shll
cli
rcll
sub
fcoms
cwtl
xchg
orb
push
clc
int3
xor
cwtl
inc
xor
push
pxor
icebp
mov
rolb
pop
aad
push
pusha
adc
pop
ss
xor
jo
push
fistpll
jge
int3
add
ljmp
xlat
aas
mov
or
jp
adc
xor
mov
add
xor
xchg
stos
mov
or
add
mov
push
andb
idivb
adc
js
or
pushf
mov
push
add
js
data16
mov
mov
jnp
xchg
clc
subl
fwait
sbb
push
cmpsb
sub
mov
ret
add
test
call
add
mov
xchg
add
sarl
divl
addb
jo
cmp
stos
add
mov
dec
and
xchg
add
es
imul
jo
add
pop
xchg
aad
push
popf
out
cmp
cld
aas
ljmp
cmp
mov
xor
enter
imul
out
mov
test
lds
adc
mov
scas
pusha
mov
movsb
imul
xor
push
jge
rcrb
ret
push
add
or
jo
fldcw
add
je
fimull
xchg
idivb
or
popa
enter
and
pop
fadds
dec
and
imul
mov
hlt
sub
or
loopne
mov
mov
iret
sbb
mov
pop
mov
and
cmc
cmp
push
movb
lea
add
mov
jne
notb
or
xlat
and
pop
mov
out
xor
es
inc
add
rcrb
out
ret
add
rcll
mov
inc
sub
xorl
xchg
cwtl
mov
repz
adc
mov
push
push
sub
sbb
cmpsb
andb
orl
xor
lret
lods
xor
aam
xor
or
cmp
mov
fisubrl
push
call
lret
adc
mov
jns
and
in
std
or
imul
cmp
sub
pop
xchg
add
cmp
nop
into
mov
test
and
arpl
addb
cmp
push
in
shrb
xlat
mov
add
ja
and
add
rorb
jns
iret
mov
lods
shl
sub
rorl
push
lret
mov
sbb
dec
test
popf
aad
adc
mov
and
xchg
adc
aam
sbb
sbb
mov
out
xor
js
inc
cmp
stos
push
xchg
lods
int3
or
mov
add
nop
adc
add
ljmp
out
add
cmp
dec
jo
push
nop
pop
add
es
inc
push
inc
jbe
and
sarb
repz
mov
inc
movsb
adc
pop
outsb
adc
mov
pop
es
mov
sar
ds
jne
sbb
xchg
inc
cmc
daa
inc
sub
adc
add
and
mov
dec
push
mov
add
loop
jle
and
mov
add
xchg
dec
mov
pop
jg
sbb
cmc
pushf
jo
insl
push
dec
rolb
mov
xchg
push
mov
sbb
sahf
test
add
jbe
jne
pop
call
cmp
xor
adc
xchg
mov
sub
push
dec
inc
shlb
jbe
sub
scas
stos
ror
jne
push
jp
xchg
inc
xchg
lods
pushl
sbb
repz
push
sbb
pushf
inc
or
add
call
push
cli
lock
cmp
mov
xor
test
les
mov
repnz
add
add
xor
or
cmp
aam
loopne
push
pop
popf
mov
leave
rcl
pop
loop
test
scas
dec
jl
pop
push
or
shrb
jb
sub
in
sarb
and
repnz
std
sbb
pop
mov
sbb
in
shl
mov
or
and
cmpsb
dec
nop
stos
jnp
adc
xor
xor
jl
mov
stos
test
sub
jno
loopne
xchg
loop
pop
clc
adc
int
xor
add
out
popf
dec
jg
add
and
iret
push
sbb
adc
call
lods
jo
lock
sar
mov
cmp
mov
inc
loopne
dec
sbb
rcrl
les
sub
rcl
xor
sahf
outsb
add
push
mov
mov
shrb
repz
and
push
push
hlt
sub
pop
cmpsb
sbb
mov
cmpsl
adcb
fcoms
addb
fildl
push
sbb
dec
or
stos
push
inc
add
ds
loopne
dec
push
mov
psubusb
lret
outsb
xor
jns
xor
dec
cmp
xchg
subl
jg
inc
pushf
sbbb
adc
fisubrl
push
adc
mov
cmp
dec
in
mov
sub
add
inc
sbb
push
push
and
add
sub
out
repz
aam
push
iret
and
cli
dec
push
orb
adc
sub
adc
sbb
pop
mov
js
adc
jbe
adcb
jl
cwtl
dec
add
xor
inc
push
movsb
lahf
or
xchg
test
xchg
mov
sub
lods
scas
cmp
cmpsb
arpl
adcl
add
push
fwait
cmc
outsl
mov
sahf
pop
stos
pop
js
xchg
pusha
inc
pop
inc
adc
shll
add
imul
cmp
ret
lods
and
shll
inc
cmp
loop
test
inc
push
adc
and
add
jmp
shrl
add
mov
push
xor
fstps
mov
inc
mov
outsb
mov
lods
add
lret
xor
sbb
jg
jl
adc
popa
int3
shrb
incl
out
std
jl
fwait
dec
mov
dec
test
or
insb
mov
stos
sub
jns
xor
fsubrp
mov
fistpll
iret
add
pop
lock
xor
cmp
mov
mov
lock
fmuls
push
adc
adc
int3
jl
mov
fisttpl
push
mov
rol
and
adc
fsubs
addr16
fists
adc
mov
test
popf
xchg
mov
sbb
ds
dec
inc
dec
inc
push
and
and
push
xchg
nop
push
xchg
fadds
popa
std
in
in
rol
dec
lret
in
jb
ss
sub
mov
mov
fstl
jecxz
cmp
push
cmp
dec
mov
test
std
pop
sbb
mov
adc
adc
cmp
test
repz
es
pop
xchg
orl
ljmp
rcrb
push
dec
cmc
fsts
aam
mov
daa
pop
nop
push
mov
dec
je
es
out
adc
jg
push
movsl
dec
xlat
pop
js
test
dec
or
jp
jae
icebp
jmp
sbb
inc
hlt
dec
loopne
out
push
js
sbb
sub
push
int3
test
xlat
mov
mov
jmp
add
shl
jl
es
pop
add
outsl
sbb
jle
push
mov
sbb
xchg
add
dec
jb
imul
clc
sarb
nop
inc
add
mov
sub
push
das
shl
xchg
cvtdq2ps
adc
xor
add
sti
pop
add
aas
or
inc
lret
inc
add
lahf
xchg
hlt
mov
pop
mov
and
jp
inc
add
mov
movsb
int
sub
lahf
stos
shl
mov
dec
sbb
sti
or
mov
mov
sbb
call
add
and
nop
or
orl
mov
pusha
sbb
stos
add
mull
cmp
xchg
mov
push
mov
cli
adc
push
nop
xchg
add
mov
lods
fnstenv
pusha
ret
mov
test
mov
inc
lea
shl
inc
xchg
mov
test
and
orb
cmp
adc
inc
repnz
or
xchg
sbb
sbb
mov
cmc
daa
imul
cmp
mov
cmpsb
push
fbld
push
fldt
xchg
je
out
push
lea
mov
pop
or
jo
jp
inc
jle
ret
and
mov
sbb
ret
dec
pop
mov
das
mov
add
iret
fcom
adc
sbb
lods
xor
inc
cmpsl
stc
xchg
adc
enter
aad
js
cwtl
std
es
aas
lock
inc
push
lods
lods
and
cmpsb
test
adc
push
popf
mov
xor
mov
add
icebp
shl
loopne
sub
sbb
rorb
fisubl
call
cld
push
in
fwait
and
cmp
vmovddup
push
out
pop
jns
movsb
cmpsl
js
pop
rcr
add
fwait
je
push
loopne
icebp
push
mov
lds
subb
insl
mov
mov
fildll
pop
pop
js
jo
add
ds
sbb
and
aas
cmpl
add
inc
and
ss
adc
je
adc
stos
movsb
stc
outsb
add
sub
in
sbb
pushf
lods
hlt
lods
call
add
shll
fildl
gs
add
mov
add
xchg
sti
or
add
add
test
xor
cmp
push
mov
loopne
sbb
sub
push
loope
and
add
int3
rcl
inc
mov
and
stos
es
dec
add
pop
daa
add
and
xchg
push
xor
orb
dec
in
jnp
sbb
fs
adc
aas
in
add
xchg
call
scas
stc
xchg
jno
jle
add
inc
in
loopne
mov
mov
sub
addb
in
jb
sarl
pushf
out
xchg
int3
cs
inc
movsl
fisubrl
or
pusha
pusha
inc
jbe
gs
rorb
or
iret
mov
dec
pop
xor
mov
loop
fucom
pop
push
lcall
sbb
sub
lods
cld
add
es
or
pushf
push
ret
dec
roll
lea
sbb
jb
es
imul
xor
aaa
xor
ljmp
jae
fs
add
sbb
cmpb
inc
xor
mov
cmp
jo
sbb
adc
ret
add
nop
adc
push
mov
or
inc
out
sbb
shl
nop
jne
imul
rolb
dec
mov
mov
sub
dec
sub
cmp
add
xchg
jle
push
mov
xchg
pusha
shlb
movl
mov
shrb
or
push
iret
lret
and
inc
fsubrp
pop
push
fstl
pop
push
int
das
shlb
xchg
daa
inc
shl
push
cmpsl
or
inc
hlt
aam
mov
adc
xchg
in
or
and
push
and
ss
or
out
or
jp
std
pop
je
test
mov
dec
shrl
mov
cwtl
mov
mov
movsl
idiv
mov
fwait
push
mov
add
stos
cld
and
add
adc
jo
mov
mov
loopne
push
add
enter
mov
rcl
pop
jo
sarb
test
add
jns
push
xchg
pop
or
add
pop
hlt
or
and
push
pusha
sub
loop
jo
push
push
mov
outsb
cmp
ds
fstpt
das
mov
in
lret
das
cltd
call
dec
lcall
push
xor
xchg
mov
in
inc
dec
add
repnz
add
mov
pop
roll
in
dec
aam
int3
sarl
add
inc
push
ret
call
adc
test
and
cmc
xor
xchg
dec
pop
inc
or
ret
mov
jbe
xor
les
outsl
or
cmc
insb
or
cmpl
ret
test
and
sub
bt
mov
fadds
out
cmc
pop
cmp
sbb
add
testb
mov
add
test
mov
mov
arpl
cmp
insl
dec
push
mov
xchg
fstpl
add
daa
fldt
repnz
pushl
nop
xchg
addl
lea
mov
das
fimuls
cmpsl
imul
test
or
pusha
ljmp
or
clc
add
rcll
push
adc
adcl
inc
jo
clc
shr
adc
loop
mov
push
leave
push
je
aam
add
sti
mov
shl
ljmp
sub
add
xchg
inc
pop
mov
dec
sbb
enter
mov
icebp
inc
in
jl
iret
dec
add
insb
add
mov
imul
push
int3
xchg
push
dec
lock
cmp
in
nop
icebp
push
adc
push
cltd
repnz
and
mov
enter
out
push
pop
movsl
jbe
stos
jmp
push
mov
jecxz
push
out
push
clc
cmpsb
ror
pop
pushf
cmp
push
xchg
mov
or
shll
mov
popf
int3
call
jnp
jne
and
aas
dec
sub
mov
pushf
cmp
fmulp
ljmp
adc
cmc
jl
fwait
scas
inc
mov
add
push
in
jge
dec
inc
outsl
push
fisttpll
mov
push
sub
mov
xabort
lock
rclb
lret
rcll
clc
popf
or
xchg
into
mov
mov
inc
sbb
in
data16
and
iret
push
stc
shl
fldl
sbb
jg
lahf
nop
add
sbb
mov
fisubrl
xchg
pushf
add
dec
andb
xor
jl
or
cmpsl
mov
push
repz
in
inc
ja
nop
andb
sub
and
sub
adc
fdivs
fldcw
out
push
push
push
adc
sbb
inc
dec
scas
movsb
push
call
mov
push
or
mov
pushf
fcomps
ds
mov
ds
add
call
sbb
dec
jo
rclb
ficoms
mov
mov
es
outsl
aaa
nop
icebp
cs
call
sub
sti
xchg
nop
adc
int
xchg
ds
movsl
rcrl
adc
sub
add
ljmp
nop
push
jl
adc
xchg
xchg
add
mov
xchg
insb
add
sbb
and
int
rorb
leave
insl
add
xchg
mov
push
in
aam
fwait
xchg
xor
cld
adc
add
in
mov
addb
xchg
aas
push
jne
es
sub
das
push
fisubl
mov
inc
or
cmp
or
mov
pusha
adcb
lret
mov
add
subb
or
hlt
nop
aas
in
cmp
push
mov
jmp
sbb
mov
mov
cli
dec
xchg
sbb
arpl
jp
jl
jns
test
add
out
xchg
sbb
jae
add
cmp
scas
addr16
sub
push
in
sbb
insl
jns
out
pusha
cmp
lar
loop
mov
pop
fsts
cmp
xchg
in
adc
aad
sub
add
inc
stos
pop
jmp
ljmp
cmp
mov
and
or
test
addl
jmp
sbb
pop
mov
push
or
mov
sbbb
jne
add
sub
fdiv
inc
subl
stos
jo
push
adc
adc
call
rcrb
js
test
jecxz
xorb
push
or
loopne
pop
add
jecxz
add
inc
cmp
pop
sti
sbb
fadd
cli
jne
je
jns
sbb
mov
sub
mov
push
movsb
bound
xchg
cmpsb
aam
jmp
add
lock
or
adc
push
xor
js
add
jmp
and
xchg
or
sbbl
mov
mov
ret
and
mov
and
mov
rol
je
repnz
pusha
push
xchg
push
add
js
mov
frstor
cli
xor
aas
sub
push
jmp
sbb
cmpb
jae
jnp
sbb
cwtl
mov
mov
pop
add
bound
sbb
rcrl
sbb
add
in
and
leave
cmp
xor
inc
andb
repnz
pop
xchg
rcrl
inc
sbbb
xlat
add
scas
mov
xor
je
fstpt
push
pop
or
sti
into
add
xor
mov
push
les
add
push
xrelease
jg
ror
add
pop
andb
ret
mov
push
sbb
jnp
fs
sub
int
fildl
sbbb
ss
sbb
insb
mov
fldenv
hlt
addb
ja
sbb
dec
jle
insb
mov
iret
cwtl
add
fsubl
mov
pusha
out
aam
rolb
xchg
or
add
adc
or
sub
push
jle
movl
cld
mov
lock
daa
arpl
lahf
mov
xchg
shr
jnp
popa
mov
orl
rcrb
xchg
jge
lcall
rclb
aaa
call
jmp
mov
jae
js
aas
pop
add
sub
iret
clc
mov
aas
add
cmpb
push
adc
sbbb
in
and
mov
push
enter
cmp
scas
hlt
cmp
std
add
adc
xchg
bound
lret
dec
cld
dec
mov
jne
pop
outsb
and
xchg
push
test
repnz
or
and
mov
lods
mov
pusha
es
or
out
xchg
add
pop
xchg
cwtl
jb
add
into
mov
push
xlat
push
test
dec
and
or
jns
adc
adc
add
cwtl
loopne
sbb
pop
add
pop
faddl
js
adc
aam
and
pop
dec
imul
adc
and
cld
fadds
je
mov
xchg
es
sbb
adc
cmp
dec
jo
ja
xchg
insb
push
mov
mov
dec
test
xor
inc
jl
mov
jnp
inc
adc
stc
int3
adc
adc
int3
stos
sbb
sbb
xchg
mov
inc
out
and
add
dec
mov
dec
push
xchg
call
sbb
inc
inc
xchg
dec
movsl
add
mov
mov
jno
add
lret
in
mov
xchg
push
sub
iret
sbb
dec
adc
sbb
in
xor
and
add
dec
pusha
jmp
mov
decb
nop
jecxz
and
mov
repz
ror
jl
stos
adc
jnp
mov
sbb
push
mov
jo
movsb
in
aas
adc
xor
mov
icebp
addr16
dec
int
sbb
jp
addb
fs
mov
mov
sbb
clc
aas
repnz
das
mov
mov
data16
sbb
and
pop
pop
bound
nop
sbb
mov
mov
pusha
add
dec
sub
int3
pop
pop
in
add
sar
clc
pop
addr16
imul
mov
hlt
loope
add
scas
call
orb
js
imul
and
enter
inc
push
xor
xor
or
lods
xor
mov
and
push
mov
iret
mov
and
add
ret
or
dec
add
xchg
stos
add
inc
and
dec
mov
pop
xchg
push
and
fiadds
mov
and
enter
test
xorb
ret
dec
sbb
add
dec
test
shrb
sub
cwtl
or
in
addr16
dec
push
lods
or
cmpsb
add
jl
inc
push
movsb
cltd
int3
inc
pop
mov
fmul
or
dec
icebp
call
call
jle
lock
lock
cs
mov
iret
inc
add
sarl
pop
cs
mov
pop
add
mov
in
xor
inc
mov
loop
pusha
fmull
out
jecxz
adc
dec
push
xor
lret
stc
je
jnp
or
inc
mov
mov
in
mov
xchg
sbb
andb
dec
dec
add
push
rcr
stos
cltd
stos
push
mov
cmpsb
xor
andb
push
stos
jle
mov
dec
jns
add
inc
aam
in
loopne
clc
add
or
xchg
repz
jl
mov
cmc
push
pushf
ret
data16
jmp
hlt
inc
roll
ja
hlt
dec
add
inc
add
pop
jno
push
cld
jbe
repnz
xor
loop
addb
sub
pop
add
mov
dec
jmp
clc
push
cltd
jmp
into
jns
push
inc
les
push
mov
sbb
mov
mov
das
push
ret
test
sbb
loopne
sub
lahf
xor
jb
sbb
mov
push
rolb
lock
add
fistl
mov
sbb
scas
add
sbbb
imul
in
add
add
xor
clc
dec
fcoms
lret
mov
mov
inc
pop
dec
jno
jmp
aaa
enter
pusha
mov
mov
push
push
jnp
sub
dec
addr16
dec
test
cmpsb
xchg
and
cmp
or
xor
mov
insb
cmp
test
pusha
mov
out
inc
add
pop
test
jbe
xor
ret
js
insl
ja
add
adc
add
sbb
adc
rcrb
in
jo
mov
push
add
rorl
cli
or
sbb
or
repz
jmp
cld
test
loopne
sbb
into
add
loop
push
jns
nop
fistl
mov
fimuls
pusha
pusha
enter
push
push
xchg
pushf
cmp
add
jmp
jle
or
xor
pop
testl
sbb
dec
es
aaa
ja
das
mov
sbb
inc
pop
xor
pop
sub
fildl
pop
pop
push
or
loope
jmp
in
out
mov
adc
or
insb
adc
ja
xor
mov
pushl
add
cli
xchg
andl
xgetbv
mov
leave
add
pop
neg
xor
push
sub
xor
movl
xchg
mov
pop
shr
or
js
std
orl
xor
popa
pop
sub
and
push
add
js
scas
bnd
mov
xchg
pop
pop
jns
xor
mov
mov
inc
insb
add
les
fildl
fcmovb
stos
lods
add
clc
lods
outsb
dec
sbb
push
inc
cmpsl
lock
sbb
push
cltd
mov
leave
fdiv
xchg
lret
scas
or
xor
push
push
sbb
or
mov
mov
fistl
loope
add
push
rcrb
jge
add
in
push
or
fsub
rcrb
jae
push
cmp
jmp
jmp
std
and
push
cwtl
loop
prefetcht0
ret
adc
popa
rcrl
jmp
leave
shlb
aad
adc
pop
add
dec
decl
sbb
je
jecxz
hlt
mov
in
xchg
inc
aas
mulb
push
push
xor
es
sub
adc
mov
or
clc
adc
cmp
mov
jp
inc
adcl
ljmp
xchg
and
or
and
jnp
addr16
test
cmpsl
in
ds
cwtl
mov
xchg
push
push
pop
jmp
sub
xor
sbb
decb
rcl
sub
repnz
xor
shlb
jmp
or
pop
add
dec
jbe
jbe
push
jmp
mov
cmpsb
sub
dec
ss
inc
clc
dec
push
test
cwtl
pop
mov
xchg
add
push
jmp
sub
pop
lock
outsl
fcoms
cmpsb
imul
adc
in
cmp
xor
jmp
xor
test
shlb
in
mov
das
lea
xchg
enter
mov
xor
or
call
iret
xor
push
pop
inc
adc
add
rcll
sbb
xchg
push
rcll
mov
je
not
out
adc
adc
add
push
mov
rcrl
cwtl
aaa
xor
cmp
cwtl
push
push
rorl
imul
push
push
push
subb
xchg
cmp
testb
push
mov
sub
hlt
push
cmp
sbb
pusha
jo
lahf
jp
dec
push
sub
clc
das
push
imul
pop
popf
jecxz
ret
adc
push
sub
rorb
popa
push
sbb
shll
xor
dec
sub
cmc
sbb
add
in
mov
iret
push
or
pop
add
jbe
in
add
repz
cld
xor
lret
push
dec
shl
addr16
shl
add
pusha
dec
push
mov
cltd
push
fisttps
xor
pusha
xor
shlb
test
push
jge
test
fs
add
add
jmp
adc
out
pop
mov
stos
push
inc
dec
pusha
xchg
or
mov
lock
es
mull
in
inc
adc
add
rorl
fcompl
cmp
dec
pop
mov
popf
testl
or
push
and
movsb
add
add
or
inc
test
stos
and
addr16
lds
fmul
imul
sub
pop
cwtl
test
add
out
or
neg
add
xchg
sub
or
push
mov
jnp
and
cmp
jne
add
cmp
and
lods
or
and
and
stc
or
jmp
dec
xor
and
push
xor
ja
into
cmpsb
dec
mov
loop
ret
jno
ds
lods
jnp
scas
and
sub
not
subb
push
mov
add
repz
sbb
add
div
mov
std
push
and
sub
mov
mov
mov
pop
pusha
push
jmp
in
add
pop
push
js
push
dec
jg,pn
dec
je
push
mov
jge
es
loope
div
xor
add
ja
adc
stos
dec
cltd
pop
and
dec
push
arpl
test
or
fadds
and
inc
bound
xchg
std
jno
ret
push
mov
jl
add
mov
and
inc
cs
imul
jns
sbb
mov
add
push
and
aad
ror
add
or
inc
mov
mov
mov
add
pop
xor
or
dec
adc
lock
add
fimull
repnz
add
pop
andb
or
popa
ss
orl
or
push
mov
and
jo
mov
pop
mov
xlat
push
mov
das
cmpsb
adc
pop
dec
mov
jne
mov
xor
int3
daa
pop
sub
push
ja
mov
mov
loop
mov
adc
and
je
aas
ret
test
push
je
cmpb
addb
pop
jle
jg
dec
adc
mov
fistpl
lock
xchg
incl
mov
stos
bound
mov
lds
mov
and
rolb
add
mov
sahf
push
negb
sbb
gs
add
cmp
repnz
add
jp
loopne
lret
pop
mov
pop
imul
rclb
inc
mov
add
test
rclb
cld
ret
inc
pop
fadds
add
pop
pop
jmp
add
clc
push
aaa
outsb
cli
das
lcall
aam
repnz
add
pop
pop
xor
stc
roll
rorb
sbbl
jmp
inc
jle
pop
adc
mov
pop
push
xor
jno
lock
loope
pop
add
push
and
mov
daa
push
xchg
aad
push
mov
orl
or
add
dec
stc
pusha
push
push
pop
add
add
ja
jle
add
or
rol
pop
cmc
flds
mov
cli
xor
dec
dec
pop
mov
mov
sti
nop
sub
jmp
push
jmp
or
cmc
add
inc
sbbl
mov
int
clc
and
adc
adc
inc
into
and
mov
cmp
sub
push
jmp
cs
addl
cmp
and
xor
outsb
push
sub
jae
rolb
push
mov
fsts
xor
add
push
sub
divps
out
add
mov
adc
cmp
or
pop
imul
sbb
enter
roll
gs
mov
add
sbb
or
jle
pop
mov
adc
push
scas
clc
mov
add
adc
xchg
jne
out
mov
dec
xor
cmpl
push
stos
xchg
dec
xor
pop
pop
lahf
push
movsl
xchg
pop
enter
sub
sbb
cmp
pop
push
in
jae
mov
mov
cli
test
push
mov
xor
mov
push
cli
mov
hlt
mov
dec
inc
jo
inc
lock
repnz
mov
add
inc
jae
cmp
cmp
dec
sahf
push
mov
imul
pop
ficoms
loopne
dec
leave
call
inc
or
xorl
lret
pop
push
inc
loop
adc
mov
add
add
movb
pop
xchg
stos
int3
imul
aaa
push
xor
test
mov
nop
std
and
jp
push
out
fisubs
add
push
not
xchg
test
pop
arpl
mov
stc
fmulp
mov
and
clc
jno
pop
cwtl
pop
push
lock
rcl
add
adc
pop
add
movsl
push
cmpsl
mov
push
push
popa
pop
pusha
imul
in
aam
sysret
pop
loopne
cli
jle
inc
sbb
add
and
adcb
mov
jno
mov
loop
cmpb
jmp
cmovs
pop
inc
movsl
cmp
aas
imull
xchg
and
ret
sahf
mov
push
pop
mov
out
mov
scas
pop
hlt
call
outsl
call
imul
cwtl
sub
pop
subb
ret
and
mov
or
nop
fsubrs
aas
popa
fnstsw
shlb
sub
push
cltd
icebp
push
pop
and
mul
push
icebp
jo
mov
and
add
add
js
gs
jmp
imul
dec
inc
jo
sub
js
inc
jl
mov
sub
mov
mov
add
cmp
or
sub
sub
push
push
xchg
inc
sub
xchg
iret
xchg
cwtl
xchg
ret
sbb
xchg
xor
push
or
jno
shlb
test
sub
inc
bound
xchg
filds
xchg
jb
adc
sti
leave
adc
pop
push
sbbl
je
mov
jmp
dec
sbb
push
jmp
dec
jle
nop
inc
inc
push
xor
fs
in
cmp
movsb
xor
lret
in
in
xor
sbb
lea
rcll
or
icebp
inc
mov
inc
into
pop
add
add
jge
push
push
inc
test
mov
ret
add
inc
xor
in
jecxz
push
outsl
xchg
pop
add
pop
xchg
data16
cmp
cmp
sbb
lods
outsb
shll
xor
jle
xchg
sbb
push
pop
push
mov
mov
or
pop
inc
repnz
xor
cmp
fldl
lret
and
push
dec
lods
adc
fwait
push
add
out
pop
ret
ds
sbb
pop
pop
pop
xlat
and
pop
lods
or
loope
push
movsb
data16
or
adc
pop
mov
jmp
fdivs
enter
sar
adc
dec
mov
push
shrl
repnz
pop
cwtl
mov
cmp
mov
add
shlb
arpl
and
decl
subb
cmpb
imul
mov
pusha
or
sbb
loopne
dec
repnz
lods
fsubrs
dec
xchg
xchg
pop
std
nop
sub
pop
push
test
sbb
mov
sbb
xchg
pop
jns
or
jno
sub
xlat
lret
xchg
or
xor
cmp
repnz
jbe
fbld
pop
stos
mov
add
je
gs
lcall
jmp
inc
push
les
std
pop
cmp
push
xor
pop
cli
fwait
pusha
stc
sub
pop
sub
or
dec
and
shufps
add
pop
xor
push
mov
pop
ret
sub
pop
shr
shlb
cmp
jo
roll
rcrb
fidivrl
push
or
invd
pop
daa
cmc
pop
int
add
inc
int3
insb
jmp
mov
pop
sbb
sub
push
pushf
jmp
lock
fadds
add
sub
push
mov
pop
not
or
xor
cltd
inc
lock
imul
les
pop
push
adcl
push
xchg
fmul
lock
pop
pop
or
add
ss
in
jmp
pop
bound
and
jne
and
bound
cld
sbb
movsl
ret
xor
mov
xor
outsl
adc
mov
inc
sbb
out
loopne
sbbb
push
neg
inc
jp
jmp
frstor
add
cmpsl
mov
push
dec
shl
rorl
mov
and
xor
add
inc
jns
or
add
enter
xor
push
or
ljmp
lcall
sti
add
jns
test
xor
inc
ret
and
pusha
mov
mov
or
loope
pop
in
in
icebp
pop
loop
popa
sub
cmp
sbb
pusha
sub
pop
pop
add
les
sbb
data16
add
pop
pop
imul
pop
daa
xor
ret
or
test
pop
ret
sub
insb
cmp
xor
movzbl
inc
test
mov
ljmp
sbb
inc
mov
push
add
and
out
mov
xor
orl
test
rcrl
jmp
call
xor
int3
adc
gs
add
dec
or
pop
xlat
add
aaa
jl
bound
xchg
scas
inc
imul
mov
leave
or
jo
jg
pop
es
xchg
add
pop
in
cmp
addl
ret
pop
push
push
cmp
xor
stc
pop
rorl
cmpsl
pop
sub
lret
pop
fs
push
ja
push
outsb
xchg
mov
andl
fisubl
dec
cmp
outsl
cmpl
aad
jmp
push
mov
inc
inc
out
inc
movsb
sub
adc
pop
mov
xchg
inc
or
popa
or
add
bound
xchg
lret
xor
testb
subb
popa
sbb
sub
cmc
or
mov
and
and
sub
sbb
daa
in
push
add
xchg
je
jo
sbb
jg
mov
in
in
cmpsl
jno
rcll
add
pop
sub
movsb
movsb
sub
das
iret
push
call
pop
clc
movsb
lds
mov
or
sbb
push
or
inc
mov
movsb
push
mov
roll
lods
dec
rclb
lahf
ja
pop
rcrl
jge
add
dec
xor
mov
ret
push
xorb
dec
push
sbb
loop
xchg
or
add
and
cmpb
xor
fdiv
pop
mov
es
pop
push
add
call
and
xor
add
sub
pop
push
mov
cld
mov
jg
ljmp
jne
or
push
scas
mull
inc
mov
mov
cwtl
dec
add
pop
xor
idivl
and
sub
cmp
cmovle
add
mov
shl
jno
in
xor
push
pop
sub
pop
xor
pop
andb
jle
loopne
ret
inc
jo
pop
xor
or
jb
and
cwtl
mov
std
sub
add
adc
test
clc
leave
ds
push
movsb
sub
mov
pop
sub
es
pop
btsl
test
cmp
mov
ret
dec
andl
rorb
push
in
push
mov
shrl
ds
pushw
pop
xor
pop
outsb
clc
ss
adc
rdtsc
pop
xchg
inc
pop
shr
and
orb
pop
jge
pop
jmp
call
jne
sbb
mov
adc
icebp
sub
and
in
movsb
jae
pop
mov
mov
or
pop
or
loope
shl
mov
or
mov
cmp
push
arpl
jmp
push
repnz
pop
in
movsb
shl
inc
pop
pop
sahf
lds
jnp
mov
cmp
add
push
push
push
jmp
data16
test
inc
scas
push
xchg
mov
push
mov
rorb
jmp
ret
inc
sub
lds
xor
push
mov
test
addb
adc
dec
adc
sub
ret
pushf
or
sub
mov
or
in
xchg
dec
outsl
jmp
aaa
inc
pop
jg
add
mov
and
jmp
cmpb
xor
xor
decl
or
push
pop
inc
bound
inc
loop
pop
insb
in
int3
das
pop
js
xchg
lds
ficoms
rdtsc
ds
out
je
out
xor
mulb
xor
outsb
sbb
imul
cmp
rcrb
mov
mov
pop
xor
xchg
dec
push
sar
shl
jmp
xor
shlb
pop
adc
fimull
rorl
add
insb
inc
add
into
sbb
in
int3
adc
fimull
sarb
gs
mov
sbb
and
ret
or
or
cmp
cmp
and
push
outsl
add
daa
nop
das
nop
add
xchg
shl
sbb
pop
test
sub
sbb
dec
push
ss
xorb
add
inc
ljmp
inc
loop
sbb
xchg
push
rorb
in
gs
push
rclb
loope
cwtl
add
js
movsb
shll
dec
cld
cmc
add
out
push
jmp
add
jmp
int
sub
adc
mov
pop
mov
fimuls
inc
scas
std
stos
retw
pop
pop
in
pop
dec
add
or
mov
jnp
mov
add
mov
sbb
sub
mov
cmp
push
and
gs
cmp
lods
call
jl
movl
shll
and
sbb
out
adc
dec
push
int3
or
or
shrl
sbb
lods
mulb
pop
mov
inc
mov
dec
out
icebp
incl
push
movsb
mov
mov
fistl
cmp
add
adc
and
jnp
add
xorl
ret
pop
mov
sub
or
cs
fsubr
jo
sahf
fwait
leave
mov
fcmovu
add
mov
xor
or
adc
add
aaa
add
xor
das
jo
add
fcmovnb
xchg
jne
push
mov
mov
push
mov
pop
pop
sub
inc
jl
not
sub
sub
pusha
pop
mov
lret
lret
cld
test
pop
pop
pop
into
out
mov
or
add
test
jmp
mov
mov
pop
insl
out
xor
mov
dec
sbbl
and
pop
mov
xor
fisttps
lret
in
push
push
scas
fucom
call
jno
roll
ja
and
push
mov
cs
jg
pop
or
inc
mov
jge
rcll
inc
add
xchg
sub
pop
cmp
inc
dec
adc
iret
and
jg
add
xor
rolb
jle
jmp
cmp
outsb
mov
nop
sbb
insb
roll
xor
out
testb
lock
mov
or
das
mov
loop
sub
cld
insb
add
aad
clc
sub
imulb
and
stos
pusha
mov
outsl
jnp
jmp
arpl
adc
jp
add
push
mov
and
shrb
add
mov
call
inc
dec
loop
dec
imul
repnz
cmpsb
mov
mov
rcrb
add
push
or
fs
test
mov
enter
ds
push
push
test
jmp
add
xor
je
inc
pop
lock
arpl
ret
jbe
lds
daa
add
inc
inc
fstps
dec
xlat
xchg
push
dec
xlat
or
push
push
fnsave
sub
pushf
lods
add
cwtl
cmc
pop
jge
aaa
pop
popf
dec
imul
or
insb
outsl
push
push
jmp
add
mov
gs
stc
xchg
aam
and
jbe
or
cld
es
into
mov
jmp
add
sbb
pop
adc
cmp
mov
icebp
inc
dec
or
mov
jecxz
enter
push
repz
or
ja
pop
popf
xor
inc
paddusb
icebp
cmpsl
bound
push
jns
jmp
sbb
ffree
mov
pop
fnsave
leave
into
jl
mov
ljmp
add
push
xor
sarl
aas
loope
shll
mov
jmp
xchg
inc
mov
push
sub
std
push
pop
mov
push
mov
and
in
int
jmp
pop
push
adc
mov
or
loop
add
rolb
push
mov
cmp
pop
int
sub
aam
pop
adc
repnz
dec
push
jnp
mov
jge
jae
push
push
mov
mov
fisubrl
lea
and
jb
cld
jae
sub
add
dec
js
mov
call
add
xor
push
pop
pop
inc
in
sub
adc
pop
je
pop
adc
jbe
adc
cmpb
mov
daa
add
fists
aad
add
in
subl
les
add
pop
push
sbb
mov
scas
ret
imul
bound
mov
mov
aam
out
dec
notb
ret
xchg
mov
adc
sub
pop
mov
daa
sub
pop
mov
ds
xchg
sbb
loopne
push
dec
arpl
and
push
jo
das
inc
xchg
outsl
push
in
jns
cltd
or
pop
lds
and
mov
inc
push
mov
dec
inc
add
movsl
lods
xchg
hlt
loop
test
bound
fiadds
sbb
add
adc
rcll
das
add
clc
xor
gs
jg
mov
arpl
stc
shll
hlt
add
jae
sub
jmp
pop
push
add
lods
imul
rcrb
cmpsl
xchg
testb
push
pop
cmpsl
and
lahf
mov
adc
jb
add
pop
out
inc
pop
push
jno
cmp
dec
mov
sub
sti
es
push
jns
xchg
sub
cli
pop
sub
pop
push
pusha
cltd
inc
sub
arpl
pop
add
addb
jge
mov
push
xor
stos
mov
adc
cmc
pop
test
adc
adcl
push
fwait
in
ljmp
cli
fstl
jmp
pop
fnstcw
xchg
cwtl
sti
xchg
xchg
les
lret
dec
or
adc
popf
loop
push
and
test
mov
das
and
lods
push
or
adc
cld
or
daa
psrld
fists
imul
pop
pop
or
mov
test
subb
out
add
dec
add
add
jns
dec
mov
lds
gs
pushf
adc
in
icebp
jmp
imul
dec
push
dec
adc
inc
ret
dec
fstl
and
or
add
sbb
dec
sub
jp
and
data16
inc
ret
or
adc
cwtl
xor
gs
pop
dec
shlb
repnz
jnp
dec
sub
add
ljmp
scas
and
jmp
ret
lea
and
mov
adc
loope
aaa
jb
sbb
jno
lahf
lcall
xchg
cmp
into
cmp
push
testl
and
inc
je
cmp
or
lds
jle
add
dec
jbe
std
loope
movsl
sbb
fs
dec
jmp
push
rclb
pop
or
pop
and
adc
sbb
or
in
imul
lret
ljmp
inc
or
in
movsl
insb
ljmp
jmp
mov
mov
push
daa
jmp
or
hlt
sub
sbb
stc
cmpl
ret
jmp
add
mov
mov
shll
cmp
lret
inc
xchg
ja
cli
std
push
ja
and
jbe
dec
jns
lea
cli
or
jmp
das
sub
adc
sub
pop
push
add
cmpsb
add
pusha
pop
add
cs
loope
notl
rol
out
ret
sbb
rol
and
pushf
repnz
add
into
xchg
or
adc
je
call
and
fs
ljmp
xchg
cltd
cmp
xor
icebp
xor
movsl
daa
jp
or
stos
inc
add
and
outsb
adc
loopne
jae
push
nop
out
pop
jne
add
pop
imul
lret
mov
cld
popf
or
ret
repz
movsb
shrl
jmp
ret
dec
pusha
in
add
push
mov
ret
pop
inc
shll
ds
shl
daa
add
inc
or
inc
xchg
or
add
popf
jl
mov
add
and
adcb
outsl
mov
sub
incw
inc
sbb
dec
scas
push
push
mov
xchg
in
or
adc
jle
jns
and
and
and
lods
xor
mulb
jg
mov
aaa
clc
popf
add
dec
lock
mov
inc
mov
dec
and
mov
in
mov
shr
and
sbbb
test
popa
bound
jns
inc
add
sbb
add
pop
mov
fidivrs
cmc
pop
dec
inc
mov
adc
mov
mov
pop
stc
shll
push
xchg
sbbb
jb
mov
mov
pop
out
int
aam
push
push
push
xor
cwtl
xchg
jle
add
xchg
pop
xor
pop
push
xor
push
ret
call
pop
je
nop
mov
jnp
cmpsl
and
jno
push
lods
mov
mov
jmp
jle
or
aad
fisttpl
pop
faddl
enter
jnp
pop
mov
pop
lretw
shll
sbb
and
dec
es
dec
push
adc
into
scas
or
mov
jae
xor
jg
int
sbb
lock
add
sbb
add
fwait
inc
mov
pop
daa
jmp
mov
jmp
cwtl
dec
xor
cmp
sub
adc
mov
adc
ds
sti
mov
or
mov
inc
xorb
adc
leave
daa
in
icebp
xchg
cli
add
dec
stos
push
or
and
ret
xchg
jmp
xchg
sbb
push
cli
push
and
push
or
popf
icebp
xor
mov
inc
jbe
jmp
inc
shl
sbbb
lods
out
jg
cmp
fs
js
pushf
dec
add
xor
cmp
add
jmp
adc
jmp
pop
scas
mov
sub
mov
fisttpll
add
add
mov
aas
add
jo
dec
push
aam
ror
jmp
in
xchg
mov
xor
fcomps
outsb
add
mov
inc
xor
mov
outsb
sbb
inc
rcll
cs
and
popl
dec
out
jp
ret
mov
std
cmp
dec
push
rcrb
sub
sbb
push
inc
js
adc
call
inc
mov
pop
fldl
aaa
sub
xor
add
clc
mov
pop
add
dec
add
inc
cmp
dec
inc
cmpsb
push
popf
adc
shl
mov
pop
loope
pusha
pop
dec
inc
mov
into
daa
jmp
mov
sub
adc
sbb
icebp
stc
dec
pop
mov
jnp
or
jmp
add
lds
xor
and
and
xor
add
mov
les
xchg
mov
push
int
sbb
xor
pusha
inc
cs
xor
inc
add
push
jmp
fstl
nop
or
mov
push
rcll
mov
lret
mov
stos
push
lods
mov
adc
and
add
push
inc
pop
push
push
sub
lret
mov
sbbb
jns
data16
leave
sub
jmp
sbb
add
stos
ret
mov
nop
add
add
in
cmp
fisubrl
jge
jle
mov
xchg
repnz
lods
pop
lock
add
mov
adc
pop
pop
mov
mov
and
call
mov
negb
jp
or
enter
pop
pushw
jmp
rol
or
loop
or
das
adcb
bound
sub
jbe
xor
scas
adc
les
mov
push
mov
hlt
mov
outsb
sub
cmp
out
fists
shlb
push
out
test
aam
inc
mov
add
push
ficoms
or
push
jmp
rcrl
aad
lret
sub
clc
sbb
add
adc
adcl
in
lret
mov
mov
sub
sub
lods
sbb
push
sub
es
dec
rolb
push
movsl
and
pop
insb
ss
mov
icebp
test
xchg
gs
ds
jl
inc
mov
inc
xchg
aam
test
es
js
insb
pop
push
mov
push
cmp
adc
add
push
testb
dec
push
or
in
add
je
and
pop
mov
dec
pop
imul
sbb
dec
mov
xor
loopne
dec
andl
inc
mov
loope
push
add
or
shl
mov
and
divb
hlt
insb
fst
jecxz
daa
and
and
in
imul
lret
and
pop
push
shld
in
fidivl
push
incl
cmp
xchg
jo
jg
sub
jmp
add
sbb
sbb
shrl
mov
xchg
or
mov
in
or
lock
faddl
in
shll
jmp
jecxz
mov
dec
mov
cwtl
insb
jae
pop
out
jmp
or
xchg
adc
out
pop
push
lea
cmpsb
sub
cwtl
mov
push
cmp
pop
mov
or
je
adc
jns
data16
sbb
cltd
lds
clc
loope
add
loop
jmp
mov
push
dec
cwtl
inc
aad
inc
push
jmp
fildll
or
sub
fcoms
shlb
test
add
inc
or
jecxz
ja
cs
and
push
lret
arpl
and
adc
push
das
mov
jmp
and
ret
jnp
mov
inc
out
mov
pusha
mov
dec
cmp
test
add
rclb
sub
mov
sti
mov
in
add
jmp
int3
inc
cmc
add
dec
or
das
ljmp
shlb
ds
enter
mov
jl
pushf
dec
lds
pop
jmp
rol
femms
sbb
cmpsl
mov
sbb
adc
cmp
xor
clc
lret
push
fidivl
or
add
pop
arpl
or
and
hlt
repz
jmp
jmp
arpl
lock
add
adc
or
es
pusha
and
out
xor
loopne
push
dec
push
inc
fstpl
xchg
lea
add
sub
psubsw
dec
andb
sbb
test
and
add
ds
mov
pop
rclb
nop
in
push
addr16
jmp
nop
or
imul
xor
imul
call
loopne
push
add
sub
and
gs
daa
pop
das
aas
icebp
movsb
jg
out
daa
push
push
mov
push
cwtl
cmp
cmpsb
lock
xor
mov
stos
js
jl
pop
test
add
xor
dec
int
sarb
jmp
xchg
dec
mov
inc
in
icebp
adc
mov
dec
movsl
sbb
int
mov
inc
pushf
xor
lock
mov
add
inc
filds
cmpsb
push
xchg
jecxz
shll
mov
jns
push
movsb
inc
or
mov
sub
push
adc
mov
pop
xchg
inc
or
sahf
push
lahf
push
sub
inc
add
and
xor
adc
and
or
cmc
inc
movsl
cmp
scas
mov
loope
adc
push
adc
test
loope
in
mov
or
xor
fs
pop
adc
test
stc
mov
andl
mov
ljmp
pop
inc
cmp
adc
ja
notl
mov
dec
add
orb
and
stos
cmp
and
sbb
mov
add
rcrb
add
or
fsubs
and
pop
mov
cmp
jp
lods
in
rolb
or
js
jle
ret
inc
mov
push
mov
or
movsb
or
js
out
repnz
xor
dec
sub
jne
add
xchg
subb
enter
mov
sbb
jge
push
mov
cs
je
mov
imul
pusha
fisubrl
xchg
or
add
pusha
pop
inc
xor
movsb
jmp
cmc
or
loopne
in
pop
xor
or
outsl
fsts
imul
add
mulb
jge
cmp
or
cmp
fiadds
imul
push
es
sbb
roll
jns
dec
add
rcll
push
jmp
out
into
add
xlat
push
mulb
jb
lahf
sarb
cmc
test
sti
push
dec
mov
es
jle
sub
sub
ret
add
and
addr16
pop
sbb
jo
inc
dec
dec
cmp
rcrb
mov
jmp
cmp
insl
inc
cmp
mov
sbb
repnz
sbb
jmp
stc
xor
add
add
jp
es
sub
cmp
aas
xchg
adc
xor
push
pop
mov
into
dec
sub
orb
xor
stc
mov
sub
adc
dec
lret
ds
pop
adc
sbb
mov
mov
jl
shl
rolb
lahf
inc
les
dec
rcrb
fisttpl
cmpb
or
or
or
push
cmp
add
jae
sub
or
add
fmuls
pop
mov
dec
mov
jmp
loop
xchg
ds
push
sub
jmp
mov
sbb
jns
inc
push
loop
push
movl
cmp
fiaddl
and
lds
dec
jmp
jg
fisttpll
pop
inc
idivb
pop
jge
leave
pop
cmp
xchg
dec
fs
mov
cmpsb
xor
iret
mov
mov
pop
sbbl
inc
enter
inc
or
push
daa
cmp
add
sub
push
clc
jl
push
jmp
pop
mul
orb
inc
mov
xchg
xor
fbld
lds
fisttps
and
std
mov
or
pop
loopne
sbb
ja
pop
jns
shr
dec
jb
push
jno
mov
dec
fdivr
sbb
dec
push
cmc
test
add
pop
ret
adc
or
or
xor
lahf
pop
jo
and
add
jge
cmp
mov
aas
add
jno
dec
fsubl
or
jno
loope
jnp
mov
pop
xor
xor
in
jmp
int3
jmp
add
orl
in
cmp
cmp
xchg
and
mov
or
ret
shlb
fistpl
loop
push
data16
sbb
pushf
shl
push
push
movsl
cltd
mov
fnsave
inc
sub
adc
in
xchg
sub
hlt
negl
ds
xchg
stc
adc
jno
mov
les
movb
pop
pop
jg
neg
ljmp
lock
add
dec
aad
jo
in
or
push
lds
mov
or
pop
sub
pop
mov
sub
push
sahf
arpl
movsl
out
and
add
icebp
pop
or
or
cs
ss
cmc
dec
fdiv
fwait
sbbb
adc
mov
pop
dec
outsb
iret
add
enter
xchg
and
jbe
popf
mov
xor
add
jns
leave
push
out
int3
xlat
les
add
sub
das
test
and
xchg
out
ja
lret
mov
xor
adc
shll
and
sub
shlb
mov
sbb
or
or
push
pop
and
int
es
sub
jmp
mov
and
shl
add
xor
add
ret
dec
test
pop
push
add
repz
into
out
or
xchg
mov
inc
popf
xor
xchg
lea
mov
jle
sub
push
push
shrb
jns
mov
sub
ja
xor
pop
aas
lds
lret
cmp
cmp
push
dec
mov
loope
inc
ret
jge
pop
cmpsl
dec
or
xor
mov
pop
sub
add
test
add
and
and
mov
cmp
nop
stc
icebp
leave
push
out
movsl
and
pop
pop
dec
and
dec
fsubs
sbb
les
in
loop
test
mov
cs
addb
dec
inc
mov
or
add
popf
adc
jp
movsl
add
pushl
jmp
and
mov
in
dec
jb
out
mov
repz
sub
int3
stos
jp
dec
data16
cmpsl
icebp
dec
sbbl
mov
mov
stos
inc
add
lret
pop
lods
cmpsl
inc
das
adc
push
sbb
or
push
inc
testl
mov
inc
outsl
cld
lock
in
daa
push
push
ficomps
add
pop
cld
push
jl
cs
movsb
test
push
bound
or
jl
ljmp
lahf
ja
dec
imul
add
stc
xor
dec
xor
pop
xor
lods
cwtl
and
inc
into
imul
fsubr
pushf
mov
insl
popa
xchg
push
outsl
and
das
xchg
sub
packuswb
adc
lds
inc
into
jp
fwait
or
cmp
cmc
jl
push
xlat
orl
mov
mov
add
adc
or
add
clc
pop
sub
jmp
cwtl
je
xchg
nop
testl
pop
sub
push
lock
pop
inc
lods
push
loop
jle
fldlg2
lahf
pop
push
ja
push
mov
cmp
lret
je
mov
icebp
icebp
js
and
rol
fldt
shll
add
repnz
nop
scas
fiadds
clc
add
mov
xor
add
add
mov
in
syscall
or
jecxz
and
loopne
xchg
mov
add
insl
rclb
xor
pop
adc
xchg
push
mov
pop
xor
push
push
mov
ja
dec
pop
dec
daa
jmp
and
mov
and
movsl
pop
std
imul
sub
mov
sti
lret
dec
subl
scas
es
add
pop
inc
orb
aam
jmp
cld
sbb
lods
fbld
inc
pop
divb
inc
lcall
or
data16
leave
push
pop
gs
xor
add
pop
dec
xchg
add
xor
lds
or
loop
lods
or
ret
push
mov
add
inc
push
push
xor
push
sub
in
pop
xor
jo
adc
inc
jnp
aam
sbbb
fs
dec
out
in
in
mov
or
subl
pop
in
add
push
cli
push
icebp
aam
add
xlat
fdivs
or
or
cmp
and
push
or
cmpl
inc
jno
add
dec
jb
outsl
les
addl
add
mov
push
cld
ret
fnstcw
das
jmp
out
add
add
pop
in
and
push
cmp
inc
ss
and
sub
mov
inc
sbb
mov
in
ljmp
push
aaa
pusha
jmp
and
in
test
daa
mov
loop
popf
andb
xor
push
xor
cmpsl
or
mov
shlb
xor
jmp
jl
jmp
mov
popf
or
dec
add
bound
fimull
orb
std
out
or
out
jns
inc
cmp
push
fildll
cmc
or
sub
adc
push
xor
shll
addr16
jo
xor
out
shrb
xor
push
jle
movsb
fiadds
ret
push
jg
pop
out
or
pop
xchg
xor
out
sbbl
dec
cmp
add
mov
orb
jmp
and
xchg
rcll
test
xor
aaa
clc
orb
push
pusha
pop
outsb
clc
test
stos
dec
or
sub
stc
movsl
insl
gs
mov
push
add
lds
insl
cmp
cli
das
add
mov
jecxz
jmp
add
ret
dec
cld
mov
fcmovnb
std
push
adc
sbb
dec
push
push
push
mov
test
dec
mov
mov
and
sub
sahf
sbb
cmp
test
aas
shl
push
pop
mov
mov
push
pushf
dec
xchg
inc
jp
and
je
rcl
call
andl
cmp
mov
or
fistl
cmpsb
pop
rol
inc
sub
and
out
cld
movsl
daa
xchg
iret
cld
sbb
int
andb
inc
pop
push
sarl
and
pop
or
ljmp
or
rcrl
fimuls
pop
push
cmpsl
subb
fistpll
jno
xchg
dec
test
lds
pop
popf
out
shrb
test
sbb
push
mov
pop
jg
out
lret
push
js
clc
adc
xchg
dec
mov
sbb
je
flds
lods
lret
dec
jbe
leave
sbb
fdivrs
pop
push
xor
mov
add
adc
ljmp
push
andl
les
notb
inc
loopne
lods
mov
xchg
in
mov
cwtl
pop
mov
rorb
mov
fimuls
or
pusha
hlt
adc
mov
sbb
addb
popf
stos
fsts
loope
lahf
pcmpgtd
in
stc
addb
outsl
xor
out
add
add
loop
xlat
scas
lcall
xchg
mov
fwait
pop
push
pop
aam
fistpll
mov
in
adc
popf
das
sub
sti
push
xchg
out
inc
nop
mov
jbe
add
dec
clc
push
add
dec
xchg
push
push
sbb
sub
cmp
jae
pop
sbb
and
mov
stos
add
sub
pop
xor
mov
xchg
and
ret
dec
add
ds
fidivrl
lock
inc
xchg
out
adcb
stos
js
inc
adcl
add
test
pop
idiv
add
mov
jns
mov
add
cmp
sbb
ffreep
sub
add
push
daa
jno
mov
aas
jb
sub
add
in
or
mov
push
or
fiaddl
test
add
jo
mov
sub
adc
or
pop
aam
jb
out
lahf
in
xor
sbb
jns
scas
add
mov
imul
lahf
cmp
int3
mov
push
fcompl
mov
fldenv
dec
ret
pop
mov
not
xchg
push
mov
lret
dec
jmp
ret
stos
push
repz
aas
roll
push
cmc
fnstsw
jge
inc
stos
jg
mov
repz
dec
std
and
jecxz
inc
stos
xor
push
cmp
push
xchg
orb
jmp
pop
lock
inc
cwtl
sub
or
paddb
shl
roll
enter
outsl
popa
jne
pop
adc
shll
shll
sub
pop
pushl
xchg
ret
push
ss
or
fstl
push
mov
sub
dec
fstps
sub
rclb
lcall
cld
add
in
push
jb
hlt
xchg
add
ss
shl
sbb
push
push
cmp
add
mov
shll
dec
push
jmp
inc
in
sub
mov
pop
pop
mull
ret
and
mov
inc
adc
jb
pop
push
pop
bound
jmp
mov
daa
fcompl
sbbl
sbb
push
inc
or
jmpw
test
add
jl
push
mov
scas
and
add
cltd
add
fucompp
push
dec
test
jmp
add
rolb
add
iret
add
out
dec
js
shr
scas
addb
popa
cli
dec
inc
sbb
jne
sbb
jecxz
pmulhuw
lock
loopne
sbb
movsb
mov
or
mov
add
cli
xor
push
test
add
out
add
out
scas
sub
push
cld
pop
dec
aas
xchg
subb
pop
mov
xchg
sbb
add
cmp
and
ljmp
and
adc
xor
lahf
pop
nop
call
dec
or
pop
pop
or
and
pop
push
mov
adc
push
adc
mov
push
ret
jne
int3
lret
or
decb
push
mov
cmp
add
in
push
sub
pop
mov
ret
xchg
addr16
pop
push
pop
jnp
or
sub
dec
ret
aad
adc
add
es
ss
lock
addb
and
jmp
sub
stc
insb
push
pop
jbe
arpl
jge
push
pop
push
mov
icebp
sarb
mov
adc
mov
outsb
push
xor
out
sub
ds
push
aas
rorl
pop
loopne
pop
cli
pusha
or
jmp
add
xlat
pop
or
mov
mov
mov
mov
mov
mov
push
loopne
jle
rcrl
mov
jp
test
rolb
push
mov
pop
add
lds
test
mov
mov
es
pop
sbb
loop
sub
mov
pop
hlt
das
pop
cmp
mov
mov
or
lock
sbb
hlt
loop
mov
inc
or
adc
out
out
cmp
xor
mov
mov
pop
test
push
insl
or
jae
ret
push
pop
pusha
pusha
or
jae
add
nop
pop
or
or
pop
sub
mov
int
mov
aam
mov
push
in
lahf
pop
add
xor
pusha
fwait
xor
out
lock
cli
dec
pop
icebp
xchg
sbb
in
jle
push
mov
add
loope
xor
sbb
inc
popf
push
pop
pusha
and
mov
fdivl
add
xchg
push
push
mov
mov
insl
sti
adc
jns
xlat
jne
lahf
mov
sahf
sub
sbb
out
add
add
popf
insb
rorl
rolb
cmp
add
jmp
sbb
mov
arpl
insb
dec
shlb
sbb
popa
add
test
cmp
jno
push
rcl
mov
inc
test
pop
sub
jmp
iret
push
dec
loop
test
cmp
jb
sbb
push
jl
push
cmp
sub
push
add
les
add
sub
sub
add
adc
pop
add
out
jae
aaa
lds
clc
ja
cwtl
out
mov
aam
sub
push
mov
sub
push
sahf
out
test
mov
gs
jne
push
push
in
dec
add
pop
or
adc
mov
add
test
pop
mov
add
sub
aaa
out
jno
mov
adc
cmpxchg
ljmp
test
fistps
and
sti
inc
sub
test
test
xchg
add
cltd
or
push
imul
in
dec
mov
add
dec
jge
stc
cmp
sub
clc
in
repnz
adc
cmp
std
lret
or
mov
push
push
or
stos
mov
dec
je
add
lock
xchg
cmp
sub
call
sbb
jp
sbb
jno
inc
popf
mov
cmp
stos
add
jle
and
les
jmp
or
repnz
neg
jl
dec
mov
popf
inc
aas
ficoms
mov
xor
insl
adc
jb
xchg
ja
adc
sub
pop
cwtl
lret
add
dec
inc
out
xorb
mov
imul
xor
inc
dec
mov
loopne
jmp
push
push
push
loopne
push
adc
cli
jle
adc
sub
push
dec
add
jp
inc
inc
clc
cld
mov
movl
mov
adcb
das
mov
int3
pop
push
adc
test
sub
inc
jb
imul
lcall
jbe
out
leave
jle
push
ret
in
test
xchg
es
adc
je
inc
cwtl
js
imul
jb
adc
lock
rorb
add
push
mov
push
bound
xor
sbb
mov
add
pop
pop
and
push
jmp
jle
frstor
xchg
or
std
sbb
jnp
cmpsl
fs
pop
test
jp
fs
jg
and
test
pop
jbe
repnz
popf
sbb
lods
jg
push
adc
mov
fidivl
fmull
aad
dec
lds
roll
aad
pop
and
add
inc
not
push
subb
jl
pop
mov
sub
inc
test
dec
lcall
lret
mov
push
push
into
pop
fnstcw
dec
jo
mov
add
aam
adc
pop
cmc
sbb
mov
cmp
lret
stc
ret
xor
adc
enter
mov
and
lret
orl
mov
orb
xchg
sbb
push
mov
sub
in
icebp
lods
pop
add
push
push
ds
or
sub
mov
mov
iret
out
pop
push
inc
cmpsl
sub
cltd
mov
and
fstpt
sub
cmp
leave
test
sbb
shr
xor
pop
push
and
dec
jecxz
and
loope
cmp
insl
add
lret
arpl
rcl
stos
xchg
push
mov
movsb
cmp
inc
shl
shl
loop
xor
aas
push
faddp
mov
xor
adc
jbe
lods
inc
xchg
pop
or
popa
mov
mov
or
mov
jle
jbe
jmp
flds
push
mov
dec
outsl
add
xchg
push
mov
gs
call
pushf
outsb
nop
pop
add
inc
movsl
lret
pop
sub
popa
loop
inc
jmp
sbb
dec
xchg
add
pop
dec
clc
test
and
sbb
movzwl
push
fmuls
leave
bound
jnp
or
sub
sub
jmp
dec
pop
adc
push
pop
jne
sub
inc
mov
clc
into
orb
dec
xlat
pop
sub
lock
sub
xor
jns
stc
imul
or
popl
mov
sub
jne
or
test
mov
out
push
sahf
lea
fadds
jo
push
int
jne
shr
inc
mov
sub
jae
xor
in
pop
inc
jp
sub
xorb
add
add
jmp
pop
push
je
and
loope
and
pop
pop
rorl
and
out
pop
jae
jl
xor
push
push
dec
add
lret
enter
rorl
lret
or
push
rolb
adc
orl
push
push
imul
lods
insb
clc
pusha
push
mov
pop
dec
addr16
cmp
mov
or
xchg
enter
add
sub
sub
icebp
cmp
aad
xorl
pop
add
les
aas
pop
cmp
mov
aas
testl
pop
push
xor
adc
pop
dec
mov
xor
xchg
lcall
pusha
adc
addr16
xor
add
sub
and
sub
xor
mov
push
push
pop
xor
lcall
ja
enter
aaa
mov
inc
xchg
adc
push
jl
push
add
add
sub
sub
inc
stc
ret
jp
mov
gs
add
jbe
xchg
xor
sub
inc
das
or
push
adc
cmp
bound
out
sub
in
jecxz
push
je
add
sbbl
push
cmp
push
add
dec
xor
rorb
out
cmc
or
push
fcoml
das
cmpb
pop
jae
push
stos
outsb
xchg
add
out
sub
push
out
test
data16
push
pop
sahf
scas
or
adc
ja
jmp
xor
fsubrs
push
daa
pop
push
cli
js
scas
and
sub
mov
jle
inc
mov
or
movsb
add
add
stc
je
add
aad
scas
hlt
add
xlat
or
pop
rolb
and
mov
jae
sub
decb
mov
sub
pop
loope
push
cmp
stos
in
jg
iret
pop
std
out
mov
and
and
or
test
push
movsl
stc
sub
in
xchg
out
pop
jle
xor
or
xchg
xor
aaa
jmp
sub
aad
add
jmp
mov
push
mov
pop
rcll
sub
aam
mov
sbb
fs
xlat
mov
jle
or
pop
lcall
sbb
dec
push
xor
jmp
adc
and
out
sub
mov
addr16
test
in
push
popl
pop
push
sbb
rcl
dec
xor
sbb
cli
sbbb
adc
lods
xchg
and
cli
jnp
sub
int3
enter
mov
xorb
pop
or
aad
cld
fwait
mov
jle
shll
and
pop
mov
dec
repz
jnp
inc
mov
xchg
push
cli
enter
pop
lods
pop
add
int
push
cmp
ss
dec
xor
cmp
pop
inc
add
xchg
inc
push
mov
dec
xor
jmp
xor
push
or
xchg
or
add
mov
dec
scas
adc
push
add
push
shr
sbbb
repz
pop
shr
or
mov
pop
cld
fcoml
pop
mov
insb
xchg
bound
pop
cs
jns
push
fsts
jne
popf
pop
sbb
sbb
orl
sub
or
mov
js
popf
pop
out
cmpsb
jnp
sbbl
sbb
sub
fwait
and
jmp
mull
out
pop
shrb
cmpsl
cld
xchg
and
addr16
ret
imul
xchg
roll
testb
xor
in
dec
lret
or
pop
pop
lret
pusha
dec
arpl
daa
jmp
aas
loope
btr
jnp
or
shll
add
cmp
mov
mov
out
mov
imul
lcall
jg
push
aad
jnp
mov
sub
mov
incb
sub
pop
pop
repnz
mov
inc
pushf
adc
dec
lds
test
and
push
out
aas
push
cmc
loope
adc
adc
out
das
add
imul
and
lock
pop
das
pop
add
in
out
dec
push
push
or
xchg
icebp
cwtl
sbbb
dec
mov
sbb
cmp
xor
lea
mov
fisubl
pop
inc
enter
adc
add
inc
or
push
jne
enter
stos
inc
pop
cmp
push
dec
sub
sarb
inc
adc
popf
daa
faddl
call
or
push
or
sbb
cmc
sahf
in
ret
sub
movsl
push
imul
adc
in
les
add
test
adc
jo
gs
jmp
mov
xlat
and
inc
test
pop
mov
loop
xchg
inc
jno
push
push
bnd
fbstp
test
test
push
stc
bound
call
and
sahf
lret
xchg
scas
pop
jl
pop
ret
push
cmc
or
je
cmpsb
and
jecxz
mov
icebp
mov
push
adc
repnz
add
fmull
pushl
into
shlb
ret
les
xchg
cmp
mov
and
gs
out
and
add
push
jl
addr16
push
cmp
sbb
rcrb
dec
xchg
ja
sbb
jl
jmp
xchg
push
push
jno
int3
imul
sub
cwtl
push
jmp
ljmp
mov
mov
or
or
and
xor
sub
mov
mov
test
or
xor
popa
jmp
cmp
add
inc
sub
xor
xlat
data16
pop
xchg
shrb
inc
xor
push
lods
sbb
inc
or
std
mov
xchg
into
pop
and
adc
enter
xchg
cli
inc
inc
pusha
or
inc
lret
or
push
andl
mov
or
rcrl
jle
mov
xchg
test
int
mov
outsl
fs
or
xor
push
popa
sub
and
add
dec
mov
je
xor
lods
add
cmpl
mov
insl
cmp
cmp
pop
popf
or
xor
lock
xor
sbb
mov
sub
and
das
pop
cltd
mov
push
neg
dec
stos
fldenv
xor
fcos
scas
or
push
es
lahf
bnd
sbb
inc
add
push
mov
stos
pop
shl
xchg
iret
jl
push
push
mov
add
imul
push
inc
pusha
dec
mov
and
pop
sub
aas
jne
in
xchg
pop
pop
in
lock
cli
or
sbb
out
dec
sbb
mov
pop
pop
push
and
test
adc
les
lock
xchg
in
dec
pop
pop
mov
xor
jbe
jmp
addl
or
stos
fsubrs
call
enter
lock
and
push
mov
fidivrl
jno
enter
or
std
ljmp
sub
pop
cwtl
cli
out
lods
sub
lods
dec
jle
push
ss
push
xor
jbe
push
popa
hlt
jno
add
jmp
lea
inc
insl
mov
or
add
mov
mov
imul
or
adc
xchg
sub
push
adc
cwtl
dec
lods
ret
jmp
dec
mov
test
pop
mov
xchg
testl
jmp
lret
sti
push
pusha
ja
nop
push
xor
aad
and
xchg
push
add
add
imul
inc
xchg
imul
mov
mov
gs
add
and
xchg
sarl
mov
paddsb
stc
ja
xchg
ss
subb
adc
xor
push
push
pop
nop
add
aas
dec
sub
sahf
incl
fmuls
and
add
mov
jmp
sbb
out
subb
daa
push
xor
movb
cli
dec
lea
sub
sbb
mov
add
jl
ret
push
inc
idivl
jmp
cmpsb
nop
dec
addr16
pop
pop
jb
test
aad
cmp
in
add
mov
orl
or
xor
add
push
cwtl
test
pop
scas
cmp
mov
fwait
clc
negb
push
fists
add
mov
mov
mov
out
dec
repnz
dec
mov
xlat
pop
in
pop
js
data16
aas
jne
mov
cld
and
xchg
imul
inc
xchg
imul
mov
mov
push
cmc
and
scas
movsl
mov
dec
shl
mov
sub
dec
add
and
cld
xor
ljmp
dec
push
mov
sbb
jmp
fldt
jae
push
jmp
jne
dec
add
jge
push
dec
icebp
lret
push
add
inc
jmp
fsubp
outsb
mov
xchg
inc
mov
inc
jl
jns
xorb
outsb
jmp
and
mov
shrb
outsb
shr
pop
jne
cmc
jmp
push
clc
xchg
add
out
add
fildll
ret
imul
sub
add
mov
jmp
ret
out
and
pop
pop
and
in
inc
or
xlat
mov
mov
mov
jmp
or
pop
js
imul
adc
jecxz
mov
pop
andb
hlt
repnz
mov
out
out
sbb
add
int3
lret
xchg
or
and
fdiv
mov
add
push
mov
pop
jge
xchg
fnstenv
or
push
jb
push
mov
sbbl
aad
push
aam
out
jmp
push
addr16
xor
movhps
int3
cmp
xchg
mov
adc
inc
cmp
dec
rcrb
repnz
or
fstps
mov
aad
fcoms
push
push
mov
and
jmp
les
or
xor
dec
adc
xor
lods
pop
shr
ret
pop
mov
pusha
js
or
mov
pop
or
out
jmp
mov
test
out
iret
pop
sub
sub
mov
push
mov
pop
xor
sub
mov
xchg
xchg
xchg
or
rolb
or
jns
pop
mov
pusha
pop
dec
jo
out
dec
adc
jno
sub
outsl
sub
imul
dec
dec
dec
pop
ret
outsl
add
lahf
xchg
in
or
mov
in
lahf
push
mov
std
and
addb
ret
fs
cli
xchg
pop
mov
and
jbe
ret
js
xchg
jno
xchg
cli
dec
adc
out
and
inc
pop
mov
dec
sub
dec
repnz
scas
cmp
push
inc
not
pushfw
adcb
pop
push
mov
xlat
lcall
mov
push
cmp
xor
fnsave
mov
dec
adc
cmp
popf
in
mov
rorl
add
push
clc
push
mov
add
in
and
push
xchg
into
je
stc
sub
jmp
imul
push
push
aas
pop
and
popf
inc
int3
pop
xlat
mov
mov
rcrb
daa
sub
cli
and
add
aaa
cmp
insl
lock
mov
js
add
insl
add
add
cmpsl
push
dec
sti
inc
add
out
popf
jmp
push
push
add
mov
daa
xor
cmp
pop
sub
adc
flds
mov
inc
ret
fnsave
loope
add
pop
jmp
out
or
psubusw
xorl
out
sbb
jmp
push
faddl
lock
and
sbbb
adc
push
daa
idivw
mov
add
inc
mov
sbb
jp
dec
xchg
imull
in
or
js
pop
jmp
fs
jnp
add
roll
or
leave
in
sub
mov
add
sub
mov
xchg
jb
push
pop
add
out
and
adc
xor
and
pop
lock
push
mov
in
loop
mov
sub
movb
fisubl
or
int
pop
add
adc
dec
mov
arpl
xchg
add
or
cli
push
lret
or
cmpsb
inc
jg
scas
in
cmp
inc
fisubl
and
pop
push
sbb
push
pushf
dec
add
mov
mov
aaa
cmpb
fcom
sbb
push
out
imul
push
popa
imul
fildll
orb
mov
push
mov
repnz
add
outsb
push
inc
dec
paddusb
jmp
pop
dec
sahf
adcb
pop
jg
or
loop
es
jb
pop
in
jbe
orl
int
and
cmp
jnp
jne
mov
fmuls
xor
jecxz
add
jo
cmp
pop
or
add
int
clc
inc
out
xchg
sub
xor
push
pusha
lods
nop
test
clc
mov
repnz
push
xor
mov
push
sahf
push
jg
sub
adcb
push
repnz
mov
orb
or
stc
dec
jp
jg
or
icebp
shrb
clc
popa
in
xchg
mov
ljmp
pop
pop
xor
adc
std
add
add
or
sbb
add
inc
or
mov
jb
mov
mov
pop
in
movsl
stos
ds
or
mov
ljmp
sub
xorb
add
jns
xor
nop
or
sbb
dec
in
ja
ljmp
mov
add
push
jmp
sub
ja
cltd
fsubrs
sbb
add
add
pop
push
aas
cs
js
mov
mov
out
dec
xchg
imul
or
xlat
das
js
clc
outsl
dec
pop
popa
daa
cmpb
rcll
insl
pushf
dec
insb
cltd
dec
fadds
les
rorb
push
movaps
add
cmpsb
add
xor
or
add
push
mov
inc
daa
pop
pop
test
or
mov
lret
mov
vcvtpd2ps
push
mov
pop
shr
rclb
lcall
popa
fwait
subl
clc
xor
inc
inc
jo
pop
dec
clc
xor
cwtl
sbb
je
inc
dec
in
mov
cltd
mov
test
dec
or
test
add
mov
xor
push
jae
and
push
dec
dec
into
cmp
mov
jb
les
mov
pushf
jno
inc
dec
or
out
in
mov
dec
push
popf
push
sub
mov
adc
xor
inc
cs
dec
sub
sub
xor
or
and
imul
add
rcrb
mov
out
call
xor
pop
adc
shr
mov
jg
out
test
dec
sahf
inc
mov
push
adc
out
loop
sub
in
or
push
das
cmpl
adcb
adc
cmp
clts
inc
andb
into
add
daa
inc
mov
push
inc
push
daa
jbe
and
and
xlat
mov
pop
xchg
add
loop
jmp
lock
xchg
popa
repnz
bound
das
or
imul
ds
push
sbbl
andb
int
ud2
jmp
add
xor
icebp
xchg
fldenv
and
add
push
daa
lds
ret
fsubrl
test
push
mov
insl
mov
push
cmc
inc
addl
xor
push
sbb
psubsw
out
sarl
or
sub
jb
sub
movsl
pop
sub
mov
lods
shll
and
bound
cltd
jnp
and
jb
or
add
sub
and
mov
mull
or
mov
daa
and
add
jmp
bound
and
sub
xchg
aaa
mov
inc
aad
aam
dec
adc
cmp
pop
cmp
mull
dec
add
in
push
push
adcb
push
fmuls
cld
sub
pop
pop
loopne
cwtl
push
dec
daa
cmovae
mov
push
jnp
loopne
ds
add
adc
dec
xor
cmc
add
cwtl
call
cmp
test
scas
ds
mov
arpl
mov
dec
mov
add
or
aad
add
mov
xchg
cs
popf
sti
inc
inc
pop
lcall
imul
cmp
loopne
xchg
push
push
add
xor
gs
pop
mov
adc
cmp
cmp
push
loope
loope
push
adc
and
enter
cld
push
data16
imul
das
sub
jl
jbe
fadds
repz
mov
jmp
mov
adc
loope
das
mov
mov
rorl
ja
push
push
mov
mov
sub
idivb
fsubl
jae
lods
cmovns
mov
dec
inc
int3
or
sbb
stc
in
fsubrl
lds
pop
int3
or
fldenv
push
add
adc
enter
sub
push
mov
pushf
les
shrb
mov
sub
inc
sbb
ss
rol
loop,pn
sub
idivl
imul
ret
mov
ret
pop
cli
xor
add
sub
testl
pop
sarl
add
xchg
and
add
inc
cmp
inc
loop
pop
push
popa
mov
jmp
ret
ss
push
lea
dec
pop
mov
stc
push
mov
or
icebp
cmp
call
in
es
mov
push
dec
ja
mov
xlat
pop
push
addr16
cli
jmp
lock
adc
in
out
add
push
pop
jg
pusha
cmp
or
dec
popf
pop
shlb
out
inc
add
adc
inc
les
dec
push
loopne
cltd
add
leave
pop
sub
pop
mov
jbe
sbb
adc
sub
adc
mov
mov
in
push
xchg
pop
insl
or
xchg
cmp
shrl
jg
int
inc
xchg
sti
out
or
adc
adc
or
outsb
lods
and
inc
pop
out
mov
xlat
dec
xchg
and
test
in
inc
push
add
add
jmp
jmp
cmp
push
out
iret
negb
pop
push
jno
aas
sahf
bound
cmpb
mov
clc
loope
jecxz
sysret
mov
shl
xchg
and
imul
mov
sub
pop
lret
or
test
mov
mov
jg
pop
pusha
shll
xchg
or
jmp
imul
pop
test
jmp
sarl
cmp
pusha
jmp
loop
hlt
decb
jp
test
sbb
pop
or
jb
test
ficomps
lock
daa
inc
jg
cltd
or
jmp
iret
es
push
les
jo
and
scas
daa
mov
bts
and
sarl
inc
in
aas
adc
mov
adc
xor
stos
add
fsts
adc
pop
loopne
jg
adc
cmp
mov
and
push
orl
push
mov
dec
jo
repz
call
dec
loope
das
dec
stc
dec
sti
xor
or
repnz
mov
pop
jmp
loop
lds
js
mov
pop
inc
jb
fwait
push
cmpsb
adc
push
call
enter
mov
mov
je
addr16
icebp
jmp
repz
movhps
mov
sbb
mov
mov
mov
das
sbb
adcl
adc
clc
stos
popa
xor
and
iret
xchg
inc
jne
jg
mov
and
jns
mov
xlat
movsb
mov
adc
popa
mov
jno
lods
dec
mov
sbb
popf
add
pusha
fs
push
cmpsl
ss
xor
inc
push
adc
in
cmp
xchg
rol
and
jbe
add
call
add
xor
and
insb
jle
sbb
pushf
popf
add
dec
jno
pop
mov
shlb
inc
data16
lret
and
sbb
add
sub
ss
cmc
sbb
fsubs
jne
mov
pop
jne
mov
loope
jbe
pushf
push
mov
add
add
scas
popa
mov
cmp
jns
daa
lds
enter
jmp
cwtl
shrb
xor
and
pop
cmpsb
and
sub
mov
mov
and
scas
inc
fisubrs
adc
adc
xchg
inc
pop
add
pop
push
add
hlt
nop
pop
enter
push
mov
aas
push
or
or
inc
add
add
add
in
ret
das
mov
push
jmp
pop
push
xchg
rcll
pop
shlb
pop
sbb
add
inc
add
aad
jns
jmp
int
or
mov
mov
in
or
adc
jle
in
mov
pusha
repnz
clc
pop
decb
icebp
inc
cltd
push
add
je
pop
add
jo
movsb
popf
inc
adc
add
pop
loope
or
out
loop
xchg
or
mov
adc
push
enter
xchg
cltd
add
cmp
push
imul
pop
xor
jle
and
mov
scas
pop
add
sbb
test
das
push
jne
xchg
test
ret
add
cmp
xchg
mov
pop
push
push
push
inc
out
cmp
or
cld
jne
lods
adc
int
in
xor
outsb
inc
pop
mov
out
data16
dec
ficoms
int
mov
aam
or
add
jne
lods
mov
push
in
fs
repz
push
push
xlat
js
inc
cmpb
nop
jl
jne
rorl
test
mov
fmulp
scas
add
adc
jb
rorb
ret
aas
mov
insb
sbb
pop
pusha
dec
xchg
sub
call
mov
dec
and
mov
mov
pop
dec
jae
jge
cmp
inc
dec
jo
and
jg
push
orb
mov
fdiv
push
fldl
sub
push
neg
loop
mov
fisttpl
adc
push
pop
or
push
rolb
xchg
or
mov
add
pop
repnz
push
cmc
jg
data16
push
jmp
and
pop
inc
dec
sarb
or
or
xor
test
mov
and
dec
lret
adc
pop
jmp
pop
mov
xor
shr
cmp
test
pop
xor
enter
push
into
or
incb
pop
adc
sub
roll
push
push
testb
sub
les
and
and
int3
and
daa
xchg
inc
mov
scas
inc
faddp
jnp
pop
inc
jecxz
or
test
inc
ret
in
testl
sub
pop
xor
negl
lods
pusha
push
popa
fs
out
mov
push
cmp
bound
xchg
data16
sub
jns
xchg
pop
or
pop
xchg
cmp
sbb
pop
pop
sti
pop
cld
jmp
pop
jb
in
pop
frstor
xchg
mov
add
push
mov
cmp
cmp
int3
sbb
push
jb
push
mov
addb
sub
push
rolb
jle
insb
aaa
add
sub
es
lds
dec
add
decl
pop
mov
popa
pop
imul
or
lea
adc
enter
mov
jnp
add
in
loopne
push
addb
add
bound
cli
jmp
ja
push
xchg
ljmp
inc
rcr
subb
cmpl
in
repz
mov
orb
cmp
imul
jle
out
xchg
jbe
in
adc
or
es
and
lcall
push
bound
xchg
les
xchg
push
or
cmp
push
or
rcrw
pop
xchg
fincstp
rorl
or
jns
push
shrb
mov
dec
pusha
xchg
les
or
xchg
push
cli
cmp
mov
xchg
insb
or
mov
adc
fists
pop
add
add
jmp
sub
and
push
mov
inc
cli
stos
jb
adc
mov
jecxz
pop
and
pop
xor
sub
push
jae
addr16
pop
adcb
and
call
and
mov
sbbb
add
pusha
and
push
adc
lock
mov
nop
das
pop
dec
pop
ret
inc
add
loop
or
xchg
xchg
cmpb
pop
pop
pop
lods
ror
dec
push
pop
mov
push
mov
addb
sub
pop
jmp
jns
push
or
mov
xchg
in
sahf
sub
loopne
addl
not
rorb
pusha
xor
dec
xor
das
add
jle
in
or
pusha
pop
add
push
cs
jmp
in
mov
ja
mov
dec
outsl
movsb
pop
push
inc
mov
inc
in
shrl
loop
dec
rcll
add
lahf
push
jmp
dec
cmpsl
or
enter
push
stos
add
lahf
inc
pop
or
or
pop
fisttps
sbb
icebp
es
push
xchg
mov
ss
sbb
jecxz
xor
xor
cmpsb
mov
jne
sub
sbb
mov
in
inc
and
and
adc
ds
add
loopne
scas
je
testb
lahf
cmp
and
and
lret
inc
fcomps
dec
adc
mov
mov
fsubs
sti
jg
push
inc
jg
addb
inc
cmp
lods
push
loopne
cmpb
push
mov
jnp
pop
inc
sbb
pop
cltd
test
aad
stos
xorb
stc
pop
movsl
fisubl
inc
mov
inc
and
fcomi
sbb
inc
pusha
adc
shr
cld
mov
pop
dec
push
jge
filds
jnp
testl
scas
shl
cmpb
clc
nop
xlat
xor
jno
xor
push
inc
xchg
jb
pop
push
or
inc
shlb
jmp
add
into
mov
inc
inc
roll
xchg
push
sbb
cmp
pop
fistpll
fcmovnb
sarb
dec
cmp
shrb
or
leave
mov
or
lds
and
rorb
dec
rorl
sbb
push
pop
push
in
repz
mov
lods
or
std
sub
icebp
mov
aas
add
or
xorl
pop
in
lahf
imul
sbb
fcoml
sub
push
lock
adc
add
sbb
cs
and
je
daa
fisttpll
add
aad
cmp
rorb
lods
fisubs
imul
jno
jmp
aam
dec
addr16
dec
push
ds
pop
cld
mov
mov
es
in
daa
insb
inc
mov
sub
or
jnp
stc
dec
pop
in
sbb
mov
xchg
push
and
cmpsl
imul
or
mov
adc
pop
rcrb
gs
mov
xor
xchg
pop
push
sub
xor
jge
sbbl
int3
and
push
mov
fiaddl
push
adc
loopne
pop
adc
dec
jno
ljmp
ret
xchg
rcll
lock
js
scas
add
and
jmp
mov
or
xor
and
pop
push
adc
aam
xchg
push
sbb
mov
push
hlt
or
addl
into
stos
fistpl
cmpsb
pop
loopne
xchg
jns
mov
xchg
mov
add
rorb
lds
test
ds
pop
jmp
add
pop
sub
pop
xor
fincstp
sub
mov
call
gs
jge
rcrl
sbb
sbb
xchg
sti
sbb
and
call
cmp
add
mov
and
aam
mov
jmp
das
cwtl
out
or
push
pop
jge
mov
inc
mov
push
push
test
daa
add
xorl
add
push
cmp
dec
mov
push
mov
push
ss
fdivs
ljmp
and
push
mov
adc
add
and
and
adc
ds
aaa
sarl
add
sub
push
stc
fidivrs
andb
ret
jmp
adcb
sub
pop
cmp
inc
pusha
roll
insl
ds
movsl
or
sub
ret
pop
addb
and
mov
sub
mov
in
lea
inc
lea
push
fnsave
sarb
jmp
int
in
outsb
cmp
add
push
mov
sub
or
ret
push
inc
pusha
add
or
imulb
or
mov
call
cmp
adc
xchg
push
daa
jnp
imul
aam
stos
and
lret
adc
test
mov
push
mov
sub
mov
xchg
mov
xchg
ds
pop
or
dec
fs
push
mov
loop
test
pop
add
mov
pusha
loope
mov
mov
mov
mov
fstl
jns
loop
clc
out
sub
out
cmp
add
add
add
pop
pushaw
rolb
push
add
incl
jb
nop
inc
out
push
test
mov
pop
jae
push
add
sub
std
adc
pop
push
lods
pop
shl
pop
in
add
int
jmp
xchg
push
clc
cmpl
jp
js
sarb
lods
outsl
out
sub
push
push
sbb
inc
subl
adc
add
xor
lea
xor
enter
cmp
jmp
ds
nop
pop
xchg
push
and
sub
push
xchg
rcr
add
xchg
inc
loop
or
fxch
inc
xor
jg
mov
dec
cmp
mov
sub
sub
call
jmp
jnp
cwtl
add
movsb
fnstenv
mov
and
fistps
or
pushf
inc
or
sub
jo
int
stos
aad
inc
pop
jl
popa
jb
dec
lock
fstps
jbe
aad
sbb
out
sub
and
xchg
movsl
sbb
mov
outsl
test
dec
je
xchg
rolb
jno
or
ja
adc
lcall
es
insb
push
and
sub
mov
push
inc
test
ret
icebp
mov
pop
and
daa
push
std
pop
jmp
sarl
cs
int3
mov
pop
jl
leave
js
cmpsl
arpl
cli
inc
vdivpd
xchg
imul
ror
lods
pop
or
pop
push
aas
cmp
add
adc
pusha
sub
xchg
add
mov
jge
pop
pop
and
pop
sarl
ficoms
cmpb
pop
add
or
pop
pop
inc
inc
inc
dec
dec
in
adc
dec
ljmp
push
sarl
fcomps
scas
aaa
sti
mov
cmp
xor
jge
pop
stos
mov
insl
pop
and
std
inc
aaa
sub
mov
shr
subb
test
mov
and
jbe
arpl
popf
push
enter
dec
sub
mov
pop
or
cmp
jno
ret
pop
pop
jl
or
cmp
fcmovu
sub
mov
sbb
jl
sbb
mov
in
test
dec
jns
pop
mov
gs
push
push
ret
adc
fdivl
or
push
jmp
pop
std
sbb
xchg
adc
adc
xor
push
clc
dec
call
push
arpl
add
in
and
test
aas
mov
shlb
push
rorb
adc
insl
adc
or
les
xor
and
pop
aam
addr16
add
or
adc
dec
mov
test
or
inc
jmp
xor
sub
dec
leave
repnz
inc
push
and
sub
adc
cs
sub
xor
pop
pop
jmp
sub
fnsave
add
ljmp
inc
mov
cmp
pop
mov
in
pop
negl
jge
cli
incb
repz
mov
cld
sahf
lods
leave
inc
in
dec
push
or
sbb
push
stc
sub
and
loop
or
je
add
add
xlat
decl
inc
or
cwtl
popa
add
mov
sub
sub
push
xchg
pusha
push
mov
jmp
in
push
sub
and
out
aas
jp
mov
aaa
dec
pop
jg
jmp
test
negb
rcrl
fistpll
movsl
mov
adc
jns
andl
pop
sub
scas
outsb
xchg
pcmpeqd
or
test
jmp
repnz
adc
cmp
test
loope
clc
shr
scas
dec
mov
mov
mov
adc
mov
xlat
call
adc
xor
sbb
iret
dec
pop
cmp
jge
xor
add
lahf
pop
push
fstps
dec
push
xor
sbb
outsl
mov
das
jp
js
push
pop
mov
add
push
orl
push
pop
out
mov
dec
leave
dec
jecxz
xlat
test
xor
sbbl
pop
fwait
out
pop
divb
jmp
add
inc
mov
pop
push
mov
cld
rcrb
inc
jns
adc
dec
and
dec
push
and
pusha
mov
xchg
push
cmp
mov
mov
sub
dec
and
sbb
pusha
sbb
mov
gs
lret
jo
ljmp
jl
push
andl
scas
lea
f2xm1
cmp
or
push
inc
dec
cmp
std
nop
jb
filds
dec
in
mov
das
js
mov
int3
pop
pop
inc
push
clc
sub
inc
mov
add
bndldx
dec
dec
ljmp
inc
mov
or
mov
add
pop
push
nop
lds
mov
or
cwtl
rolb
cld
push
sbb
sub
inc
test
or
out
mov
push
xchg
iret
out
int3
dec
mov
mov
jecxz
lret
sub
in
push
cmp
mov
loop
dec
push
daa
test
jns
pop
pop
push
xchg
sbb
nop
mov
imul
xor
jl
mov
pop
jg
mov
and
dec
and
xor
pusha
pop
loopne
rol
xchg
xorb
je
dec
and
or
lock
and
or
out
mov
dec
dec
fs
sti
xchg
andb
push
push
push
mov
jle
in
out
pop
hlt
push
mov
push
aaa
out
icebp
pop
pop
pop
hlt
lret
or
outsl
lods
inc
sub
push
movsl
das
push
sti
xchg
mov
jmp
inc
dec
sbb
icebp
mov
and
les
enter
inc
push
pop
loopne
cmovl
mov
adcl
jmp
mov
cld
mov
in
loopne
push
or
mov
adc
jmp
aaa
sub
movl
pop
fcmovbe
jb
and
andl
in
je
sub
push
xchg
out
adc
adc
add
fmull
xor
inc
pop
pop
or
mov
xchg
sbb
rcrb
loopne
jmp
outsb
out
das
jl
or
iret
fwait
mov
lcall
xchg
add
jge
rol
outsb
jnp
pop
push
lods
mov
into
xchg
or
xor
daa
jg
add
adc
rclb
add
jmp
xchg
mov
adc
pop
adc
dec
jge
daa
rcrb
cwtl
aaa
divb
out
iret
inc
add
mov
cmc
cmpsb
rclb
inc
lret
data16
mov
add
fs
inc
fldenv
mov
mov
jnp
sub
pop
jmp
outsb
mov
ja
pop
and
sti
testl
aad
decl
dec
ror
shrb
imul
lea
cli
test
stos
cmp
push
xchg
lret
mov
and
outsb
mov
xor
fldt
daa
inc
xor
out
js
aaa
adc
push
mov
mov
das
aam
push
pop
cmc
inc
adcb
mov
rorb
pop
add
add
pop
outsb
mov
ja
adc
int
push
stos
bound
mov
jg
inc
jmp
mov
das
aaa
add
lret
pop
inc
and
fildll
adc
inc
add
mov
adc
pop
lahf
push
adc
hlt
or
loope
sub
enter
push
push
mov
xor
sbb
arpl
lcall
loope
jbe
insl
inc
flds
adc
xor
or
outsl
gs
jb
sbb
pop
add
pop
add
xchg
mov
rcr
push
mov
sub
in
pop
mov
pop
mov
adc
lahf
add
xchg
ret
or
add
push
pusha
pop
sbb
jl
xlat
add
sub
push
sub
test
jae
adc
stc
jb
or
stos
cmp
or
add
adc
add
icebp
jmp
pop
mov
enter
add
inc
sbb
or
sbb
dec
lock
add
imul
or
or
fldl
jmp
mov
xor
inc
fidivrs
push
push
push
call
pop
add
ret
pop
and
shlb
mov
cmc
sub
mov
mull
and
int
sbb
shr
rcll
arpl
mov
sbb
add
mov
pop
xor
mov
frstor
mov
shrb
pop
dec
push
adc
in
xlat
add
push
jmp
mov
inc
mov
lahf
inc
sub
or
or
adc
mov
in
jle
das
js
add
jnp
fs
lds
and
push
loope
dec
ss
xor
inc
jo
je
sub
pop
dec
ljmp
sub
add
mov
jmp
mov
jle
arpl
sub
clc
pop
add
dec
imul
mov
jecxz,pt
xchg
add
rorb
add
outsb
sbb
jns
push
push
cwtl
shrb
mov
mov
sub
push
or
jmp
mov
sub
xor
mov
or
nop
inc
rorl
pusha
push
push
sbb
and
xor
xor
popf
adc
das
subl
out
addb
adc
daa
lea
jbe
add
pop
daa
and
pusha
loop
ret
or
adc
dec
push
jg
or
mov
in
add
loope
stc
push
test
gs
or
inc
cmp
or
adc
insb
scas
sbb
sub
ja,pn
and
insb
negb
dec
les
adc
insb
jnp
cmp
idivl
jmp
cld
sub
in
outsb
add
movsb
sbb
add
xor
pop
pop
jb
hlt
and
popa
adc
or
imul
data16
dec
pextrw
imul
mull
sub
jmp
dec
adc
jbe
and
mov
jae
push
fsts
jmp
add
pusha
testl
push
adc
fldcw
xor
pop
mov
repz
repz
pop
test
cltd
jnp,pn
testb
pop
push
push
or
fsubs
add
jo
js
mov
ds
mov
cwtl
jge
jo
xchg
psubsw
sbb
fadds
sahf
pop
sub
add
rorl
sub
xor
nop
mov
cmp
jmp
sub
mov
jb
jnp
clc
imul
adc
out
jae
ss
pop
jl
sbb
popa
dec
jecxz
test
cmc
pop
xchg
dec
sbb
inc
mov
adc
jmp
js
sbb
sbb
sub
inc
fdivrs
sbb
sub
pop
push
fimull
add
push
cs
movsl
push
cmp
or
jl
fisubrl
daa
jmp
lds
sub
xlat
sbb
inc
xor
xor
pop
push
push
or
or
sub
add
jo
mov
xor
fstpl
inc
inc
jecxz
lcall
or
add
sub
out
ret
xchg
jge
lahf
loop
invd
xor
pusha
cmp
pop
cwtl
notb
pop
mov
sahf
lahf
leave
sub
and
das
fistl
adc
imul
sbb
pop
jmp
out
adc
jae
in
pop
pop
ret
insb
movsb
and
addb
repz
add
and
pusha
lea
mov
sbb
stos
adc
add
mov
pop
aas
xchg
push
add
jmp
add
xchg
loopne
fmulp
inc
rcr
sarl
movsl
stos
out
test
repz
addr16
cmc
mov
cmp
into
dec
inc
add
inc
add
or
prefetchnta
mov
shl
jmp
call
rclb
mov
sub
pop
sub
xchg
testb
jmp
or
mov
mov
sbb
cmp
push
jmp
in
mov
and
nop
mov
add
out
or
test
mov
cmp
pop
nop
es
pop
jge
andl
adc
in
push
pusha
jnp
push
mov
adc
add
pop
push
loope
inc
cmp
jmp
jns
push
jmp
test
mov
test
xorl
pop
rorb
adc
negl
pop
mov
sub
push
mov
jbe
sbb
and
mov
jg
sub
jne
push
cmp
int
cmc
cmpsb
xor
lret
rsqrtps
xor
jle
repnz
in
in
xchg
int3
hlt
and
dec
imul
cs
je
xor
add
pop
icebp
xchg
adc
movsl
xchg
jmp
mov
mov
adc
pop
das
loope
and
sub
xchg
ret
xor
inc
push
fiaddl
push
jne
pop
dec
fbld
test
jo
inc
xor
mov
and
lock
push
sub
inc
add
or
cmp
outsl
dec
ss
sub
in
xor
pop
add
or
and
sbb
add
popf
sbb
incl
mov
or
clc
in
or
xor
loop
pop
dec
jbe
inc
wrmsr
psubusw
cmp
cmp
inc
cmp
pop
mov
or
fs
add
loope
add
or
sub
outsb
incb
out
dec
xor
push
xchg
pop
push
and
pop
add
jmp
mov
push
mov
in
xlat
pop
sub
and
or
and
iret
notb
fildl
sahf
adc
pusha
dec
shrb
jo
add
into
lret
cwtl
mov
adc
jmp
or
pop
movsl
xor
je
sub
les
fldl
adc
add
jae
daa
ficompl
jp
pop
add
out
dec
pop
movsl
int3
outsl
and
inc
xor
jp
sahf
sbb
scas
test
push
mov
cwtl
pop
andl
jp
jae
sbb
mov
adc
fdivs
add
shrl
mov
push
loope
shr
pop
push
testl
imul
mov
add
xchg
or
sahf
inc
lods
xor
push
rcrl
xor
mov
jmp
clc
mov
imul
fstpl
shl
sarl
xchg
lahf
xchg
adc
dec
iret
movl
adc
data16
bnd
push
pop
or
insb
mov
or
shrb
je
jae
push
cmp
and
shrb
dec
daa
jg
xor
cs
pop
testb
sahf
sub
add
out
mov
or
lock
xchg
add
aad
lcall
shr
pop
add
cmp
andl
add
pop
sub
jmp
pop
xor
sbb
popf
bound
cmc
test
std
fsubr
jb
gs
jg
nop
sti
into
dec
dec
dec
cmp
pushf
jo
inc
iret
outsb
or
push
stos
sarb
ret
mov
xchg
arpl
loopne
stc
dec
xchg
mov
jle
add
cmp
mov
dec
outsb
mov
test
push
sub
pop
loope
add
sbb
mov
xor
xor
scas
ds
pusha
sti
pop
inc
add
in
ja
rcl
mov
clc
push
gs
add
decb
jle
jmp
mov
push
lds
aas
or
into
pop
shrb
aas
or
inc
repz
push
or
or
mov
lods
adc
incl
adc
call
data16
add
jae
inc
jmp
pop
repz
aam
cwtl
insb
or
jne
test
leave
xor
cmc
xor
mov
sbb
mov
or
enter
cmp
addb
push
pop
mov
popf
cmp
xor
pop
ljmp
movl
cmp
ds
pop
xchg
ds
test
inc
fistps
pop
das
roll
adc
stos
push
outsl
enter
cmpsb
pop
clc
scas
rclb
cmpb
sub
cli
out
cwtl
dec
jg
and
sub
cmp
push
je
iret
inc
push
inc
inc
push
jmp
cmpsl
je
sub
add
add
add
add
bound
in
xor
xchg
in
cmpsl
xor
push
jns
cmpsl
je
add
mov
loopne
mov
sub
movsb
adc
adc
add
ret
xchg
popa
stc
jmp
cli
pop
jg
jno
cmc
sub
sub
cmp
lahf
insb
xchg
add
adc
out
push
add
push
jle
mov
lods
les
xor
mov
negb
pop
and
cmp
mov
es
jp
scas
push
mov
cmc
mov
add
jmp
pop
rorb
jmp
enter
jns
jmp
je
dec
lods
push
mov
xchg
pop
pop
xor
mov
scas
add
xor
std
mov
nop
push
addb
out
orb
es
clc
icebp
dec
sbb
mov
sub
xor
push
je
mov
cmp
inc
inc
dec
int3
adc
xlat
push
or
mov
push
xor
or
inc
stc
adc
pop
fbld
pop
push
dec
repnz
jno
xchg
pop
sbb
dec
lcall
iret
sub
add
cmp
add
mov
scas
fmul
sub
loop
fwait
adc
jge
push
mov
inc
and
or
or
push
cmpb
repnz
dec
out
popf
mov
or
int3
popa
jmp
jbe
adc
pop
and
in
stos
mov
clc
sub
or
int3
in
or
ss
mov
int
or
cmp
mov
xchg
jp
popa
sets
or
mov
leave
push
inc
fs
sub
adc
push
stos
push
jge
mov
mov
cmp
mov
enter
lods
ret
push
push
xor
aad
outsl
mov
jae
adc
and
xor
dec
jg
cltd
stos
inc
pop
mov
adc
loop
push
repnz
adc
add
xorl
test
sbb
mov
imul
jno
enter
adc
and
frstor
push
scas
jo
add
add
jg
pop
dec
pop
in
lock
add
and
push
stc
adc
push
repnz
mov
xchg
aad
cmp
dec
clc
lock
add
cmp
data16
dec
pop
xor
idivl
dec
and
fldcw
imul
ret
and
mov
push
sbb
and
add
ja
imul
mov
cmp
test
or
subb
xchg
push
mov
pop
mov
lahf
inc
fistpl
jmp
into
xorb
push
sahf
xchg
popf
dec
adc
int3
and
movlps
push
add
mov
push
movsl
cmp
test
pop
mov
adc
cli
push
push
loop
pop
add
ret
jno
sbbb
jo
xlat
push
jmp
cmp
push
add
ret
js
sbb
out
or
jno
push
lret
mov
jmp
xchg
stos
mov
inc
inc
or
cmp
push
xchg
push
adc
pop
data16
stos
dec
aad
ret
add
mov
cli
dec
lret
xor
mov
push
pusha
add
xchg
jp
ret
jl
cmp
inc
xchg
not
popf
in
clc
shll
movl
popl
dec
mov
inc
xchg
xchg
or
push
movsl
dec
jle
in
mov
stos
adc
inc
add
movb
or
ss
inc
push
add
sub
mov
push
mov
ret
ja
shlb
xor
sub
mov
mov
add
add
and
fucomip
cmp
and
test
daa
lds
stc
xchg
dec
xchg
loope
fsub
push
add
jb
mov
lea
adc
into
inc
dec
mov
addl
pop
sub
es
dec
pop
push
sbb
pop
push
mov
cmp
fst
sbbl
dec
inc
or
mov
shlb
pop
adc
jle
fcompl
dec
lock
inc
jmp
push
xchg
xchg
adc
or
sub
mov
inc
inc
sub
xchg
movsb
and
out
ljmp
mov
push
lds
add
jmp
pop
aaa
add
adc
sbb
add
mov
out
dec
sub
or
insb
mov
jecxz
into
push
jmp
mov
sub
pusha
pop
xchg
clc
xor
xchg
dec
xchg
jmp
outsb
fimuls
test
push
xchg
movsl
and
mov
cld
shlb
xlat
cmp
loope
push
adc
jo
out
mov
and
icebp
push
or
adc
insl
mov
pop
in
cmpb
jnp
int3
mov
mov
cmp
ja
adc
mov
add
lret
jnp
jl
push
push
sbbb
pusha
push
nop
pop
or
bound
dec
icebp
adc
or
inc
hlt
popf
jmp
out
sub
adc
and
fisttpl
cmp
idiv
push
mov
pop
test
pop
cltd
pop
and
add
mov
xor
clc
mov
nop
loope
pop
sub
or
les
sti
js
or
pop
sbb
or
in
ficoml
xchg
dec
mov
sahf
shr
pop
adc
mov
sub
hlt
pop
dec
jmp
dec
push
clc
std
addr16
ljmp
lods
push
xchg
add
pop
ss
bound
mov
sbb
or
adc
add
dec
push
inc
out
jbe
inc
inc
xchg
inc
mov
jns
repnz
push
mov
in
leave
and
add
push
inc
lahf
lods
out
mov
popa
stc
addl
cmp
enter
lcall
repnz
sub
inc
sub
shr
sub
dec
jl
add
or
pop
mov
call
mov
pop
mov
cld
neg
pop
js
pop
mov
xchg
cmp
out
jmp
stos
rcrl
bound
out
aad
lds
adc
cmp
jo
test
in
dec
pop
das
pop
jbe
nop
pop
pop
or
into
sub
jge
in
outsb
test
inc
sub
cmp
sti
and
xor
mov
insb
xchg
and
mov
mov
cld
jo
in
loop
cs
adcb
stc
pusha
shlb
mov
inc
stos
or
aas
out
es
ret
imul
jge
sbb
lahf
jp
and
stos
popf
stc
out
mov
mov
jne
push
mov
inc
mov
lea
push
jmp
call
fidivrl
dec
lahf
shlb
pop
jmp
neg
xchg
push
ficoml
mov
mov
jmp
repz
mov
rcrl
movsb
mov
inc
jae
cmp
inc
xchg
es
jmp
sub
push
test
push
out
or
insb
daa
pushf
nop
int
push
inc
and
xchg
js
jle
je
pushf
xchg
xchg
repnz
push
or
sbb
inc
add
mov
pop
and
and
xor
lcall
xor
jg
mov
sub
rol
add
lahf
xor
test
xchg
icebp
dec
loop
push
add
scas
pop
push
adc
jge
ss
rcll
add
mov
xor
leave
xchg
dec
es
push
sub
jno
sub
rolb
cli
out
xchg
adc
sbb
in
out
jmp
insl
jecxz
sub
mov
repz
xchg
jp
sub
adc
pop
or
arpl
mov
adc
add
cmp
aas
sub
xor
push
push
mov
cmp
inc
xchg
add
pushf
xchg
xlat
jmp
mov
pop
imul
pop
xor
push
inc
icebp
cltd
nop
push
and
or
xor
or
push
leave
and
dec
add
pop
mov
sarb
aas
add
lret
mov
fmuls
xor
aas
imul
mov
push
jmp
fimuls
sub
push
pop
dec
or
xchg
aam
push
fs
cmpb
push
clc
outsb
cmc
jbe
lock
popf
lret
xor
adc
push
and
mov
sbb
jbe
adc
mov
adc
xlat
fisubl
push
imul
mov
xor
int3
jmp
iret
push
ljmp
add
push
pushf
insb
push
adc
pop
push
jnp
cld
popa
dec
sub
daa
pop
xor
scas
cmp
jmp
stos
addr16
fsub
mov
pop
js
sbbl
cwtl
jb
jnp
test
add
adc
or
add
pop
or
out
and
dec
add
test
pop
xor
sbb
mov
arpl
dec
pop
sub
icebp
aas
cmp
js
sbb
adc
cmc
ss
hlt
test
dec
das
lea
das
dec
bound
test
add
add
push
jg
leave
mov
aad
lret
cmp
inc
and
outsb
ret
test
in
sbbl
test
mov
push
rcll
les
xor
dec
push
cmpsl
or
lock
mov
imul
outsl
mov
ficompl
test
fimull
lret
insb
cmp
xor
pop
adc
xchg
and
adc
sar
aad
adc
pop
icebp
mov
jmp
mov
or
or
mov
or
adc
pop
xchg
lret
pop
jnp
mov
sub
cmpsb
sbb
push
ds
sbb
add
jmp
jl
lock
cmp
hlt
pop
xor
jp
push
pop
sub
sub
adc
notl
jmp
test
daa
jno
aam
push
push
bound
insl
push
push
lds
mov
cmp
fists
mov
cmp
adc
jbe
jae
mov
sub
popf
cmp
cltd
ret
add
repnz
sbb
aad
ret
out
pop
sub
cmp
xor
movsb
push
inc
int3
add
pop
neg
sarl
movb
cld
lret
std
adc
pop
pop
and
sub
inc
add
notb
cmp
mov
maskmovq
push
subl
test
add
imul
outsb
mov
adc
cmp
or
xor
into
js
xlat
out
js
ret
mov
pop
add
mov
icebp
inc
inc
add
jmp
push
mov
jno
mov
pop
lods
add
std
loope
sbb
xor
xorl
imul
cmp
pushf
mov
push
data16
sub
popl
fcomps
dec
std
mov
subb
push
dec
or
lret
add
pop
push
je
add
sub
or
inc
sub
daa
jmp
int3
fbld
push
push
test
jmp
loopne
iret
pop
sbb
xchg
jbe
xor
cmp
ret
das
test
rolb
sahf
pop
jmp
imul
mov
filds
add
sbb
and
nop
mov
push
fildl
sub
arpl
das
add
cmp
mov
adc
sbb
lcall
test
sub
das
or
cmc
or
das
call
adc
jg
xchg
pop
add
adcb
lods
inc
push
lret
jbe
pop
in
pop
dec
and
or
and
add
adc
cmp
push
pop
leave
mov
nop
je
inc
popf
into
sbb
in
fcmovbe
mov
cmpsb
test
mov
dec
xchg
dec
icebp
test
mov
not
rolb
adc
call
push
sbb
sub
inc
mov
cmp
xor
lret
pusha
push
jne
pop
adc
pop
testb
inc
negb
jge
mov
out
xchg
add
leave
iret
mov
jp
cld
jnp
dec
pusha
sub
jle
jno
fdivrl
adc
es
mov
movsl
or
aam
jo
rcrl
in
add
movsl
add
pusha
in
jle
cs
fsubrl
idivb
pop
push
inc
jle
inc
psrld
add
ficoms
pop
addr16
sub
roll
ds
neg
das
fdivrl
mov
pop
sbb
pop
push
popa
add
pusha
ds
frstor
popa
sub
rcrl
add
push
jmp
call
stos
jo
subl
es
jmp
pushf
pop
cmp
push
andb
jl
xchg
imul
orb
mov
dec
dec
repz
pop
pop
gs
mov
push
sub
fs
pop
jg
inc
mov
jle
js
mov
lods
jecxz
mov
or
add
mov
icebp
out
sarb
cmp
jmp
push
and
popl
sub
push
mov
jae
or
leave
add
push
cld
dec
in
ja
jnp
mov
add
push
dec
adc
pop
sti
daa
cmp
imul
pop
jmp
test
daa
mov
es
je
dec
cmp
fmulp
in
cmpb
pop
sbb
add
jl
cmpl
outsl
jg
ret
dec
sahf
xchg
insb
daa
js
repnz
rcll
loopne
shr
andb
push
les
push
movsb
in
pop
daa
and
aam
imul
mov
inc
decl
je
jmp
mov
xor
pop
gs
pop
lret
pop
ljmp
xor
add
movsb
in
clc
ror
inc
and
lds
sbb
add
ds
in
dec
aad
sub
daa
fwait
dec
movb
xor
imul
cld
repnz
add
xor
push
mov
aad
hlt
lret
loopne
sub
sub
mov
ret
or
bound
cmp
aaa
or
fcoml
daa
test
xchg
or
sub
pop
inc
xchg
rclb
mov
aas
sbb
dec
adc
push
add
loope
sub
std
mov
data16
out
scas
insl
cmp
pop
pop
lock
cmp
mov
mov
jae
dec
jl
loopne
pop
mov
sub
mov
ret
js
inc
push
add
or
xor
clc
popf
pop
lods
out
mov
dec
loopne
pop
mov
mov
daa
mov
cmpsb
pop
jl
mov
inc
shlb
shlb
sti
sbb
test
outsl
mov
add
aas
out
es
insb
adc
orl
mov
sbb
or
adc
popf
jl
inc
jmp
test
pushf
pop
add
in
dec
pop
mov
shlb
sbb
cmp
inc
and
jmp
push
cmp
sarb
cmp
daa
enter
push
sahf
sub
mov
daa
adc
mov
jmp
lock
pop
movsb
cwtl
mov
mov
mov
adc
sbb
mov
inc
xlat
dec
ljmp
fstl
adc
xor
adc
pop
add
pop
and
sub
sub
lds
fdivl
sub
ljmp
nop
adc
imul
ljmp
ffree
popa
jbe
lret
pop
push
add
mov
mov
inc
cltd
das
push
add
push
pop
jg
lahf
inc
mov
jp
je
cmp
out
add
arpl
or
and
daa
aas
jnp
test
call
dec
add
push
inc
aam
add
lret
cmp
inc
sbb
aas
shrb
jl
imul
in
pop
pop
jecxz
xchg
mov
cld
or
dec
add
cs
mov
mov
lcall
sub
xor
dec
mov
push
ficoms
dec
inc
mov
mov
cmp
cwtl
movsl
pop
xor
push
jbe
shr
lea
and
sbb
pop
lds
pop
aam
xchg
repnz
jl
dec
outsl
mov
das
add
jmp
stos
popa
add
shll
outsb
dec
and
fstl
je
dec
sbb
push
and
in
cltd
adc
dec
sub
xor
jnp
stos
sbb
push
pop
push
popf
inc
sub
push
jmp
iret
les
sar
mov
and
daa
jl
loop
sub
aad
xor
lods
fcmove
pop
mov
cmp
xchg
sbb
mov
jmp
jnp
cmp
mov
adc
mov
dec
cli
and
mov
adc
sub
clc
push
jmp
cmpsb
cmp
push
pop
sub
or
or
pop
lds
jb
mov
pop
popa
sub
fiadds
or
pop
pop
icebp
xchg
and
rcrb
ficoms
cs
and
das
roll
pop
test
pusha
pop
pop
call
xor
mov
xchg
jp
sbbb
jo
xchg
cltd
add
ficomps
je
pop
sti
and
xchg
rcll
popa
mov
mov
cmp
and
int
cmovge
xor
add
out
mov
mov
js
push
call
inc
mov
add
jne
mov
and
imul
jl
adc
mov
stc
enter
ja
cmpb
mov
pop
dec
push
and
fsubp
call
cmpsb
sub
push
lds
mov
mov
aas
je
pusha
pop
inc
call
jne
adc
scas
mov
fstl
xorb
lds
cld
adc
and
test
pop
shll
sti
int3
das
push
dec
push
sti
jb
push
jne
lcall
sahf
cli
add
aad
adc
mov
mov
jge
push
push
shll
adc
enter
dec
push
ret
pop
fnstcw
das
cmpsl
lock
daa
adc
or
push
inc
mov
bswap
push
sub
js
or
syscall
aad
push
mov
or
out
dec
pop
lret
mov
cmp
clc
adc
addr16
push
mov
cmp
dec
arpl
xchg
xlat
call
pop
mov
cmp
lret
pushf
mov
nop
sbb
push
dec
mov
pop
icebp
out
dec
jne
jns
std
mov
mov
pop
push
jge
in
outsl
push
or
dec
je
pop
push
dec
daa
and
or
rcrl
sbb
insb
mov
add
and
jg
inc
popa
fwait
loop
cmp
and
jns
xchg
in
fwait
or
popa
jmp
fisubl
ret
push
inc
pop
push
add
sub
mov
movsb
hlt
pop
fwait
push
pusha
movsl
jno
sbb
cld
icebp
mov
pop
jmp
xor
add
inc
cli
gs
sbb
daa
pop
je
js
icebp
lcall
push
adc
adc
aad
jne
nop
pushf
inc
shrl
movd
dec
jmp
add
and
sub
addr16
aad
jmp
fucomip
xor
add
adc
adc
pop
sub
lds
ljmp
pushf
cmp
jle
push
or
imul
and
jns
xor
lahf
dec
flds
xchg
mov
or
paddusb
jle
or
lret
rorb
cli
sbb
stc
ljmp
cld
push
xchg
je
pop
sub
add
jmp
shlb
stos
sbb
imul
and
mov
or
int3
xor
inc
mov
pop
adc
and
jnp
clc
dec
mov
add
push
gs
hlt
and
jle
clc
popf
in
addb
loopne
fiaddl
sub
sub
xor
mov
fucomi
xorb
or
xor
sub
mov
popa
cmp
cs
adc
jl
fldl
bnd
or
in
pusha
sahf
mov
mov
xchg
cld
pop
sbb
bound
sahf
es
xchg
jno
dec
and
bound
mov
ficoms
ret
push
cltd
xor
ret
aas
xor
test
and
sub
rcll
adc
jge
sbb
scas
push
fstps
pop
and
ror
push
stc
push
leave
je
add
cmp
in
inc
xchg
xchg
daa
jno
sbb
sbbl
je
lds
cmp
in
add
inc
xor
dec
push
sub
loop
adc
push
pusha
mov
and
jg
fisttpl
cmp
push
repnz
andl
dec
sti
or
pop
pop
sbb
add
xor
rcrl
or
jecxz
pop
jns
dec
inc
iret
movsl
push
aam
outsl
add
cmp
dec
xor
push
mov
scas
jbe
test
and
les
sbb
xchg
stos
push
aam
jmp
dec
shrb
push
pop
adc
xchg
pop
inc
mov
sub
mov
inc
mov
jo
jmp
pop
stos
outsb
ss
pusha
aaa
xor
inc
pusha
cmp
or
int3
pop
rorb
sub
dec
sbb
pop
clc
inc
or
rolb
outsb
inc
lret
icebp
jl
dec
xchg
cmp
jo
jle
or
xor
adc
xor
fistl
rorl
aad
sti
mov
fsubrl
stc
mov
push
push
mov
inc
pushaw
pop
sub
pusha
adc
mov
pop
jmp
test
jecxz
xchg
into
ret
sbb
xchg
push
das
mov
pop
aad
push
inc
xchg
mov
add
jmp
mov
cmp
insb
icebp
call
push
add
xor
lock
frstor
cltd
push
cmp
lret
dec
and
adc
and
and
sub
or
xor
rcrb
xor
xchg
dec
mov
pusha
add
adc
pop
xor
sub
pop
jmp
icebp
dec
ds
bound
fistps
xor
push
push
icebp
xchg
aam
int3
jno
mulb
fbld
pop
test
fsubrs
mov
cmp
pop
out
sub
jmp
std
add
xchg
inc
cmp
dec
xchg
xchg
subps
jnp
push
xchg
pusha
lds
push
lcall
lret
lds
or
rolb
bound
sbb
test
push
mov
mov
repz
mov
inc
inc
push
add
inc
loope
cli
cmp
and
icebp
and
sbbb
pop
xor
or
mov
shrb
mov
pop
nop
xorb
outsl
sub
movsl
andl
mov
sub
outsl
dec
add
filds
adc
inc
jl
pusha
stc
push
rorl
ret
mov
ljmp
dec
or
scas
dec
cmpsb
or
add
subl
or
mov
xchg
or
in
das
test
xchg
cltd
inc
mov
sub
cmp
cmp
mov
cmp
sub
inc
dec
popf
ljmp
sbb
inc
xchg
lret
cmp
mov
adc
sahf
cli
dec
or
adc
jg
dec
pop
push
les
dec
mov
adc
sbb
add
add
xor
repz
adc
mov
jge
jae
cli
divb
cmp
xchg
sub
push
add
cld
pop
mov
adc
shrb
sbb
xor
adc
push
jmp
or
dec
notl
dec
dec
add
add
mov
adc
and
push
mov
pushl
xchg
insl
and
in
movsl
dec
test
adc
jnp
scas
or
cmp
in
or
gs
pop
push
in
or
fs
mov
cld
ficoms
or
inc
cli
adc
jno
mov
push
popf
push
mov
out
pop
sub
push
mov
rcrb
sbb
repz
out
nop
scas
add
xor
mov
dec
mov
xchg
fstpl
out
dec
or
jle
dec
push
or
fs
lods
add
std
jg
xlat
adc
push
fsubrs
rcll
xchg
add
loope
add
dec
push
lods
cmp
inc
subl
cmpsb
cwtl
es
popf
das
aam
pop
push
jmp
push
stos
lcall
mov
jo
test
out
pushf
sub
lret
jle
or
movhps
pop
and
push
stos
ja
cli
test
dec
dec
mov
jle
lcall
enter
and
inc
cmp
subb
lods
arpl
jb
addl
dec
jg
incb
and
push
arpl
jmp
jnp
test
or
test
or
pop
mov
jge
push
pop
push
out
repnz
jbe
jns
cmp
sti
jne
in
dec
lds
dec
cmp
in
pusha
jp
ret
and
pusha
cwtl
pop
decb
in
dec
mov
test
lret
shl
mov
insb
lret
adc
loope
jmp
or
cmpsb
out
sbb
push
mov
add
jns
and
adc
clc
push
xor
xor
add
gs
jbe
push
scas
fwait
and
jge
or
mov
shl
jb
push
inc
xor
into
mov
pmaxsw
pop
xor
and
mov
pop
dec
pop
pop
xlat
mov
mov
std
adc
cmp
test
push
test
adc
fisubrs
fadds
mov
rcrb
pop
pop
daa
outsb
idiv
mov
lcall
sub
lods
fwait
sub
out
repz
daa
pop
inc
fstp
ret
mov
xor
enter
xchg
mov
lock
outsl
sbb
mov
inc
pop
lods
pop
aas
xchg
sbb
xchg
inc
mov
rcl
jp
jno
inc
popf
and
pop
add
xor
daa
jno
cmp
jmp
fstl
jbe
jnp
xor
sub
repnz
and
adc
pop
sarb
add
xor
push
lds
and
mov
int3
mov
ret
imul
dec
dec
pop
popa
fmull
cmovl
mov
inc
es
lahf
jl
push
pop
pop
loopne
or
aaa
fcoml
jno
add
and
add
add
sub
add
in
cmc
loopne
jp
push
adc
and
pusha
fsts
or
lret
pop
les
or
fcomip
pop
pop
and
lcall
mov
and
add
pop
add
inc
xchg
push
dec
in
mov
xchg
in
movsb
mov
or
xor
shrb
sub
mov
jae
pop
pop
neg
adc
dec
inc
in
scas
and
je
dec
jecxz
movsb
movsb
dec
push
daa
mov
fdivrs
test
dec
clc
mov
xchg
icebp
jmp
sub
push
and
mov
jb
add
and
sub
push
jmp
das
mov
fwait
out
mov
inc
out
gs
es
in
mov
aaa
ret
jne
jg
and
scas
lret
mov
pop
dec
jg
jecxz
xor
xchg
mov
and
pop
sub
sub
add
pop
roll
idivb
je
push
pusha
inc
jle
pushl
adc
jmp
sahf
rcr
cmp
je
mov
push
shlb
add
imul
push
adc
pop
xor
sub
xchg
and
lahf
mov
cld
pop
jmp
adc
inc
jne
mov
repz
dec
mov
add
out
fidivrl
bound
xor
dec
lea
push
imul
lret
lahf
jg
movsb
loopne
and
mov
sbbb
rclb
clc
ffreep
mov
mov
pop
nop
fstps
sub
and
sub
sti
or
adc
or
add
mov
fnstsw
repz
dec
push
push
mov
cmp
dec
push
or
mov
lock
testb
in
add
aas
xchg
adc
mov
add
dec
jb
addr16
mov
xor
popa
subb
out
xchg
sub
push
cmp
dec
sbb
mov
inc
jmp
bound
sar
and
mov
push
mov
pop
pop
stc
mov
rcrb
lods
inc
in
xchg
jmp
xor
xchg
or
ja
std
es
sbb
jo
and
and
xchg
addr16
stc
push
cmp
pop
jmp
xsha256
cmpsb
push
lcall
cmp
or
xchg
add
sub
imul
dec
pop
dec
mov
and
sbb
inc
sub
cli
mov
add
movsb
mov
lcall
test
pop
or
pop
add
mov
fisttps
jmp
push
xor
dec
add
or
push
xchg
hlt
inc
and
insb
push
adc
scas
je
mov
sbb
js
add
cmp
test
inc
xor
faddl
push
in
ljmp
or
in
popf
cmp
xchg
push
pop
rcrl
subl
aas
add
jbe
dec
push
xchg
cld
and
mov
xchg
sbb
sti
pop
jo
rcrl
add
adc
andb
or
adc
dec
mov
jg
popa
xor
gs
in
into
add
lods
dec
jmp
shll
pusha
sub
dec
loopne
mov
sti
inc
jge
loope
insb
pop
dec
sbb
or
test
iret
ljmp
in
jo
int
aas
mov
jmp
push
and
sub
or
dec
jecxz
int3
pop
xchg
push
mov
cmp
adc
add
cmc
lock
pop
mov
ret
jb
lahf
faddl
mov
dec
cmpl
push
repnz
push
andb
cwtl
cli
sub
decb
and
pop
cmp
cltd
inc
loopne
in
inc
repnz
lret
jmp
xor
neg
inc
cmc
outsl
xchg
push
mov
add
fsubrs
pop
add
jmp
add
sub
and
rol
sub
sub
adc
push
jp
ret
mov
test
inc
imul
ret
lahf
cld
cli
add
ljmp
add
cmp
addr16
or
jl
pop
xor
sbb
pop
jmp
divl
sbb
push
mov
jbe
xorl
aam
xor
cmc
jno
adcb
loop
jae
push
imul
daa
add
and
pop
cli
fsubrp
or
jo
pop
adc
push
adc
dec
mov
jg
cs
test
or
or
insb
jp
and
les
or
nop
scas
sbb
out
sbb
jle
cli
rorb
insl
mov
push
mov
push
ret
pop
pop
pop
push
jno
pop
or
bnd
push
mov
sbb
rcrb
and
sub
movsb
rolb
into
adcb
dec
pop
pop
add
jg
pop
dec
adc
mov
pop
dec
addr16
repnz
and
rcrb
mov
adc
lcall
outsl
push
pop
mov
lea
lahf
movb
and
gs
sub
stos
jl
je
pop
jne
pusha
mov
inc
mov
push
stc
mov
and
jbe
or
fbld
test
mov
push
pusha
hlt
shrb
adc
das
sbb
jbe
inc
int
adc
out
or
dec
arpl
loop
ffreep
jl
scas
dec
xchg
nop
add
insb
mov
adc
mov
push
lods
sub
imul
jo
popf
stc
lock
lds
fcomps
dec
rolb
negl
and
dec
dec
xor
adc
repnz
out
jmp
or
addr16
rorl
ret
and
adc
bound
jecxz,pn
pop
jmp
jle
mov
jae
jne
js
mov
ret
ljmp
sbb
jmp
dec
mov
or
jmp
or
fisubs
or
add
sub
mov
jo
sbb
or
in
sub
out
scas
and
popf
outsb
je
dec
mov
pop
das
push
pop
fsubs
mov
fsubr
mov
adc
xchg
pop
dec
add
adc
push
out
test
daa
sbb
dec
dec
sub
shr
jnp
popf
fstps
and
push
shrl
mov
addr16
inc
out
inc
add
test
pop
in
jo
lret
inc
sub
movsbl
dec
pop
push
clc
or
arpl
jmp
enter
bound
add
mov
jge
xchg
in
mov
mov
mov
push
xchg
mov
sbb
loop
sarl
sub
push
or
sub
jmp
add
sub
mov
es
std
pop
cmpb
mov
push
adc
mov
dec
ret
add
int3
sub
push
xor
pop
xchg
add
xchg
cli
and
dec
out
jo
daa
add
loopne
or
push
push
xor
jne
cmp
push
push
cwtl
pop
mov
ljmp
pop
add
push
lock
xchg
dec
and
add
popa
sub
int
and
out
pushf
insb
push
lods
cmpsl
mov
adcl
cld
ljmp
push
sahf
clc
push
jmp
jmp
js
dec
push
loope
push
add
sub
fsubrp
inc
push
jbe
enter
daa
aad
aaa
daa
pop
and
lods
sub
or
xchg
cmp
roll
mov
pop
in
sub
jb
push
push
and
dec
add
xor
lret
orl
rcrl
cmp
scas
push
pop
mov
add
rcll
loope
pusha
inc
xor
icebp
jnp
dec
aas
mov
pop
mov
ret
mov
fdivs
sub
mov
jle
rorb
pop
inc
out
or
dec
test
push
pusha
push
ret
pop
push
pop
jmp
pop
jecxz
push
out
lods
xor
loopne
jg
loope
hlt
adc
mov
pop
add
test
rcrl
xchg
imul
add
das
add
sub
shll
pop
push
jg
xor
stos
push
out
or
sub
pop
and
pop
mov
jb
inc
outsl
sub
xchg
dec
das
jmp
out
shrl
js
pop
outsb
lock
nop
or
gs
jnp
mov
mov
mov
sbb
shll
or
push
pop
push
popa
dec
mov
sub
outsl
je
xchg
icebp
pusha
mov
inc
and
pop
pushf
sti
std
mov
push
lahf
int3
popf
adc
push
int3
dec
mov
push
insl
in
push
movsb
les
ficompl
mov
pop
xchg
sti
test
iret
in
mov
add
add
pop
and
pop
jo
cmp
stc
push
imul
xchg
and
push
inc
cmp
xchg
outsl
adc
scas
mov
aas
adc
outsb
or
mov
add
or
xlat
pop
movsl
pop
aaa
iret
test
jbe
xor
push
dec
and
icebp
push
ficoml
adc
iret
or
add
xchg
in
sub
inc
jmp
jnp
stc
add
sub
je
lcall
in
shrl
mov
imul
js
pop
es
fwait
pop
mov
mov
rep
mov
movsb
icebp
js
ss
inc
inc
xor
jmp
mov
aas
sbb
lret
neg
xchg
gs
sub
mov
add
or
mov
ret
add
and
insl
pmaxsw
push
rol
mov
lock
or
jns
sub
les
xchg
fisubrs
push
adc
shl
cwtl
out
add
in
mov
jo
and
hlt
or
add
rol
dec
loop
pop
je
dec
lret
dec
loopne
cmpsb
add
rol
pop
pop
push
mov
out
pop
jbe
je
mov
mov
stos
popa
inc
mov
int3
pop
rcr
mov
add
bound
xor
jo
adc
or
fisttps
sub
in
scas
rcll
fwait
jmp
jb
mov
or
jp
add
mov
outsb
loopne
pop
mov
dec
daa
je
mov
or
add
pop
dec
popa
hlt
aad
push
sbb
or
addr16
sbb
arpl
test
setne
cld
adc
mov
adc
scas
fcmove
adc
mov
nop
xor
mov
xchg
inc
jae
or
xor
push
xchg
pop
and
fcomps
pop
adc
xlat
roll
lret
push
pop
imull
fisttps
push
lcall
jle
push
xchg
ret
jge
scas
outsb
mov
mov
lea
and
xor
and
add
ficoml
sub
jmp
xchg
and
clc
add
leave
xor
dec
and
lcall
cmp
btc
mov
mov
ljmp
sbb
test
inc
mov
inc
pop
sbb
or
adc
push
pop
cmp
movsb
daa
dec
shl
addb
lods
jb
xchg
pop
mov
out
dec
jns
add
gs
mov
aaa
and
test
pusha
sub
dec
clc
sub
lret
xor
mull
std
lret
jmp
mov
mov
popf
pop
pop
jmp
mov
loope
cmp
and
cs
outsl
sub
mov
jo
lods
add
fcomip
sub
jmp
es
pop
out
push
sub
pop
mov
push
push
push
xchg
sarl
jmp
jno
xorb
scas
dec
js
aaa
daa
or
dec
loop
lahf
xchg
xchg
mov
xor
adc
jne
sbb
shrb
rcrb
sar
dec
lret
mov
mov
mov
mov
sahf
add
out
pop
xor
subb
stc
cmp
cli
xchg
nop
or
ja
lcall
sbb
pop
das
shll
cmp
push
sub
pop
pop
jmp
push
andl
or
jno
push
nop
xor
adc
cmp
mov
jae
daa
mov
pop
stc
rcll
dec
daa
pop
sahf
stos
lahf
and
dec
sbb
mov
add
into
cld
subl
mov
in
data16
jnp
jb
inc
mov
adc
cwtl
lret
mov
adcb
mov
outsb
pop
out
sub
dec
jmp
not
outsl
rcll
push
daa
mov
push
and
xchg
push
pop
cs
xor
into
adc
arpl
or
mov
mov
pop
or
mov
pop
ret
pop
push
pop
push
movsl
movsl
inc
jnp
xchg
mov
adc
pop
mov
push
or
js
lahf
outsb
mov
fsubs
push
arpl
lock
jne
ret
mov
lock
or
inc
dec
xlat
xor
pop
xor
ljmp
mov
dec
dec
add
cmp
add
mov
or
loopne
cwtl
inc
arpl
cmp
das
cld
fs
pop
out
inc
push
out
mov
pop
cmp
jmp
fsts
out
fs
pop
ljmp
xchg
push
pop
pop
xchg
jp
or
push
inc
push
gs
mov
add
es
lds
cmp
jb
mov
repz
adc
cmpsb
add
test
stc
mov
dec
fucomi
shll
adcb
ja
das
sbb
jle
jmp
cli
jae
daa
push
xor
and
outsb
xor
rcrl
jecxz
jmp
lret
mov
imul
cs
mov
sbb
or
sub
mov
push
adc
jge
in
xchg
inc
jnp
daa
rcrb
cli
inc
xchg
sub
sub
and
and
xchg
mov
and
leave
inc
sbb
dec
sbb
push
js
jecxz
lret
addl
pop
nop
push
dec
mov
movzbl
and
add
fsubrp
leave
and
pushf
push
lods
mov
xchg
xchg
pop
xorl
je
sub
jno
mov
adc
data16
jl
adc
push
xor
inc
adc
call
sbb
xor
ret
jae
and
out
mov
rolb
notb
push
mov
cmpb
mov
shrl
add
ret
push
shrl
ja
aas
add
push
movsb
jl
or
outsb
jecxz
adc
add
push
hlt
loopne
insb
and
lods
sbbl
push
or
xor
and
fwait
inc
daa
js
les
rclw
jbe
in
ds
stos
int
sub
enter
and
dec
dec
std
sub
adcl
add
mov
pusha
adc
or
shlb
jge
push
push
dec
scas
adc
lret
cmp
push
in
sarl
rcl
cld
pop
cmc
in
sti
loop
jle
mov
mov
lcall
loopne
push
ljmp
fadd
adc
sbb
jg
jmp
jmp
cmpl
or
ret
push
or
or
add
dec
dec
mov
cmp
js
jmp
out
imul
arpl
rol
scas
pop
pusha
mov
and
or
pop
fwait
push
sub
lcall
enter
cmpsb
jge
sub
xchg
sbbb
in
loopne
dec
adc
inc
popa
cli
fadds
adcl
xorb
push
mov
sub
leave
pop
xchg
outsl
add
sbb
les
jns
pusha
iret
adc
adc
pop
fisttpl
std
cs
adc
sbb
xor
movsb
jae
add
xchg
cmp
js
sbb
push
sbb
and
movlps
mov
sub
lahf
mov
add
inc
push
or
mov
cmp
hlt
jecxz
inc
negb
fmull
out
add
out
or
and
sbb
pop
jl
ret
sti
movsl
jo
es
aad
mov
movsl
push
shrb
ret
xchg
pop
mov
or
inc
and
into
inc
inc
and
mov
jecxz
ja
jo
repz
out
jmp
pop
add
pop
lods
pop
scas
sub
aam
and
add
test
mov
jg
lods
test
stos
xor
hlt
cmp
push
mov
test
iret
sahf
rclb
les
das
adc
in
pop
xor
fimuls
cld
mov
push
cli
int
inc
leave
fisttpll
sub
inc
cmpb
cmc
push
cs
out
jo
fistl
jns
jmp
mul
sub
cs
mov
push
js
sti
cmpsb
imul
out
std
or
inc
push
or
in
fists
in
cmpsb
pushf
cmp
inc
adc
outsb
mov
pop
cld
mov
sbb
xchg
and
cmp
outsb
xchg
icebp
xor
or
jmp
fs
pop
popf
sarb
orl
mov
dec
negb
and
xor
inc
das
or
ret
jbe
xchg
or
adc
test
mov
rcl
dec
jge
ret
and
xchg
add
push
outsl
xchg
sbb
jmp
cltd
pop
sub
arpl
jns
xor
call
adc
pavgw
or
repz
icebp
adcb
test
push
pushf
shl
cmpsl
dec
subl
pop
mov
push
dec
stos
adc
adc
out
cltd
xchg
or
xor
cld
add
dec
rclb
xor
push
push
pop
sarl
inc
fisttps
imul
test
add
cmp
jmp
jmp
enter
dec
ds
and
pop
add
icebp
push
lret
aam
sub
adc
jae
loop
cs
fidivs
daa
cmp
divl
rorb
fwait
mov
push
ja
inc
loope
pop
pop
out
jns
xchg
das
sub
jmp
mov
repz
icebp
push
pop
pop
mov
mov
stc
pop
imulb
push
pop
ficoms
jl
inc
push
pop
cli
ds
pop
lahf
jbe
or
je
pop
cwtl
sub
fs
fmuls
add
cs
shr
dec
push
mov
sbb
adc
jmp
call
lods
daa
dec
jmp
mov
movsl
xchg
or
xchg
pop
mov
call
add
sbb
sub
push
out
xchg
cmc
dec
shlb
inc
mov
add
inc
inc
dec
sti
and
pop
sub
pop
xor
sub
adcb
push
jg
sbb
or
outsb
loope
in
sti
adc
jno
lods
imul
jo
dec
loopne
fdivrs
fistl
xchg
mov
cmp
add
inc
inc
dec
push
jnp
mov
lret
lods
inc
aaa
das
lods
mov
sub
ficoms
mov
lret
loop
cwtl
inc
fwait
add
push
push
push
push
subb
mov
in
jl
cwtl
call
int
insb
or
jmp
cmc
mov
ds
cmp
fs
fisttpll
dec
popf
pop
add
stos
mov
inc
bound
xor
dec
outsl
clc
sub
or
mov
sbb
aad
stos
push
push
jmp
stc
xchg
jp
ss
out
rolb
and
and
or
sub
cmp
inc
mov
pusha
pusha
dec
mov
add
sbb
sti
dec
sbb
stos
add
dec
and
inc
pop
mov
mov
add
mov
push
sar
push
adc
inc
cmp
lahf
jbe
cmp
mov
inc
loop
inc
pop
jge
or
ja
call
nop
sub
sbb
and
push
mov
fcmovne
cmp
pop
je
cltd
repz
rcl
pop
or
pop
enter
xor
filds
pop
inc
push
pop
push
and
or
jns
xor
xor
sbbb
leave
je
les
gs
shr
xor
xor
cmp
into
or
jne
sub
cmpsb
mov
shll
scas
add
adc
gs
pop
mov
cmp
movsl
sbb
gs
jecxz
sbb
mov
insb
sahf
lcall
fiadds
ja
pop
jmp
mov
xchg
bound
je
fwait
or
imul
out
mov
adc
jno
jb
mov
je
jno
jp
andb
outsb
or
mov
xor
ret
add
test
xchg
add
fwait
push
inc
sbb
sub
mov
aas
pushf
xchg
outsb
mov
dec
lea
jmp
ljmp
leave
sahf
fisttps
mov
nop
and
mov
dec
dec
cld
in
jnp
push
xchg
ja
ss
push
mov
ja
sbb
sti
adc
clc
ljmp
mov
dec
cli
lds
dec
adc
adc
lods
pusha
dec
scas
push
xor
inc
push
jo
inc
hlt
sarb
add
cmp
cmp
jno
dec
ds
mov
mov
pop
mov
jno
andb
in
es
and
add
or
in
std
inc
pop
jmp
mov
ret
mov
aam
mov
mov
cmp
loop
rolb
mov
rorl
ljmp
adc
adc
in
rcrl
xor
inc
lahf
sub
filds
stos
adc
mov
insl
pop
ret
or
push
xor
les
push
jmp
fwait
adc
insb
ret
and
mov
out
pop
pusha
imul
or
int3
jmp
ret
or
rclb
xchg
sbb
mov
call
loop
pop
sub
xchg
movsb
push
repnz
jno
sbb
aad
jp
sbb
xlat
dec
cli
aam
out
add
or
lret
dec
add
ret
pusha
cmpl
orl
and
dec
pop
jmp
cmp
into
mov
sbb
test
or
push
add
mov
or
pop
mov
iret
cmp
imul
add
adc
adc
mov
mov
xor
xchg
in
push
adc
pop
mov
and
mov
xchg
insb
sub
ds
jmp
clc
push
jns
mov
xlat
push
fs
pop
inc
push
push
push
or
push
into
or
add
or
icebp
or
dec
lret
sub
push
daa
add
pop
jns
jecxz
xor
rorl
cli
add
push
mov
fisubrs
fstl
jmp
pusha
sbb
cmp
pop
call
sub
ret
pop
fisubrl
xchg
mov
repnz
and
cmp
idivl
into
push
das
sub
adcl
push
lock
jle
push
cltd
dec
mov
fldcw
add
sbb
mov
xchg
add
push
cltd
add
mov
shrb
std
pop
push
cmp
insb
jmp
ja
lcall
xor
and
or
rcrb
add
push
cli
ret
test
fidivl
lahf
pop
imul
aam
jmp
repnz
imul
adc
pop
push
insl
or
icebp
dec
shrb
cmp
lahf
push
dec
aad
cmp
inc
imul
pop
jbe
sub
leave
mov
xor
sbb
ljmp
inc
cmc
ret
ja
xchg
aas
ljmp
es
pop
jmp
push
loop
rolb
mov
jge
jno
lds
aad
mov
and
movsb
cwtl
ljmp
inc
test
dec
icebp
xchg
imul
push
loop
fucomip
scas
pop
clc
movsl
dec
popf
mov
push
mov
pop
xchg
sbb
cltd
ja
roll
lcall
dec
xlat
xchg
scas
daa
ds
jmp
fmulp
fsubrs
mov
jne
movswl
push
bound
test
popa
push
jmp
in
sub
jo
or
pop
xor
clc
cmpsb
adc
jmp
les
jp
test
lock
add
or
loopne
dec
arpl
imul
inc
xor
push
pop
push
loop
shr
sub
push
cli
fwait
ret
in
dec
and
popa
fisubs
and
push
fdivrl
dec
push
jg
pop
xchg
scas
mov
out
jne
and
clc
pop
clc
mov
push
and
sti
fsubs
test
mov
jmp
js
sub
pop
data16
and
add
aaa
jb,pt
push
pop
xor
add
pop
sbb
data16
into
frstor
imul
xor
push
jnp
mov
nop
jge
xchg
mov
inc
mov
nop
mov
sub
xchg
jmp
inc
test
inc
lods
dec
or
int
sub
add
cmp
xchg
loope
mov
sar
push
std
in
mov
out
out
or
pop
ss
bound
adc
or
pushl
dec
cli
fstpl
ljmp
push
push
xchg
and
dec
ret
cmp
loop
pop
pop
dec
cld
dec
push
xchg
mov
mov
mov
jmp
xchg
xor
pop
leave
pushf
arpl
jg
loope
cmpsb
pusha
sbb
insl
dec
push
mov
addr16
dec
xor
sub
jmp
filds
stc
cld
dec
push
inc
jo
jb
lock
pop
push
pushf
or
fwait
lock
mov
xor
cld
cltd
lret
push
shlb
mov
mov
or
mov
add
clc
out
lods
sub
iret
adcl
or
in
nop
push
js
inc
repz
pop
pextrw
scas
dec
scas
xor
les
adc
sarb
leave
rcll
ja
push
sub
push
adc
and
jbe
or
imul
push
or
in
std
mov
das
jno
add
aad
jne
push
loopne
popf
shrl
cmp
cwtl
rclb
push
or
dec
inc
inc
add
and
jns
jmp
adc
sbb
into
sahf
and
push
pop
add
mov
mov
sar
cmpsb
test
cmp
dec
aas
lods
outsl
mov
push
adc
jmp
cmpsl
imull
jecxz
sub
aam
cmp
push
mov
jnp
sbb
and
cmp
sub
scas
lret
mov
push
mov
pop
daa
and
in
mov
jmp
mov
and
lret
xor
lcall
sbb
icebp
aam
loopne
push
aam
push
insb
pushl
inc
adc
mov
sub
pop
das
cs
push
xor
inc
dec
repnz
push
mov
or
inc
pop
push
mov
dec
adc
push
enter
mov
aad
mov
cli
sbb
xor
pop
scas
testl
pop
loopne
in
xor
addr16
push
out
es
fcoms
add
nop
loopne
dec
add
fdivs
sbb
jmp
and
lea
call
pop
outsb
pusha
pushf
push
mov
cmpsb
adc
inc
movsl
inc
xchg
andl
xchg
jp
mov
in
xchg
mov
shll
fcoml
andb
inc
mov
enter
fidivrs
inc
add
pop
pop
in
inc
shll
movsb
jecxz
mov
add
add
inc
add
and
pop
dec
and
xor
sub
out
pop
dec
xorl
inc
add
add
xor
in
movsl
jg
addr16
je
stos
mov
pop
mov
ja
mov
inc
xor
pop
or
pop
jmp
sub
divl
add
ret
cld
xchg
sbbl
popf
rolb
pop
not
push
mov
or
jne
inc
in
add
adc
rolb
outsb
aas
xchg
negl
add
cmp
ja
rorb
jge
in
adc
jg
mov
jl
xor
sbb
add
repnz
push
jno
inc
das
shr
push
xor
cli
out
popf
push
lret
fs
sahf
pop
mov
push
mov
call
pop
push
ss
jb
or
xor
xchg
shrb
sbb
add
std
mov
roll
push
das
call
xchg
sub
jno
push
in
js
shr
xlat
and
test
test
inc
xchg
cmp
lods
cmp
pop
int3
or
addr16
jle
inc
pop
repnz
int3
or
mov
lock
fldcw
push
dec
test
js
adc
xchg
inc
xchg
test
fwait
add
stos
insl
rorl
lock
loope
xor
push
jmp
dec
xorl
add
or
mov
dec
and
add
out
push
lods
dec
gs
test
fisttpll
popf
cld
or
inc
and
or
mov
or
outsl
clc
adc
jnp
pop
jg
adcl
cli
mov
mov
imul
ja
jmp
repz
jbe
imul
jmp
add
loopne
test
xor
pop
shl
lds
push
and
dec
mov
add
xorl
push
add
mov
adc
add
dec
add
pop
mov
dec
lds
scas
hlt
mov
fisttpll
andb
pop
daa
int
push
adc
mov
sbb
adc
lahf
cwtl
lcall
pop
cmp
sub
in
add
cmp
or
push
add
inc
mov
lock
sub
inc
jmp
pop
aam
fstps
cwtl
mov
mov
jns
add
add
dec
xchg
sbb
mov
nop
mov
push
pop
pop
testl
hlt
inc
filds
pop
jmp
pop
push
repnz
mov
or
arpl
push
aas
mov
and
aas
pop
inc
jle
mov
ljmp
pop
lahf
loopne
int
lock
std
push
jo
cmc
or
sub
jne
push
hlt
jp
push
mov
xor
sti
sub
push
es
push
adc
pop
repnz
mov
mov
mov
enter
add
mov
xor
loope,pt
mov
jle
jb
aaa
or
jmp
mov
in
ljmp
dec
jmp
dec
inc
into
push
adc
es
add
xor
lret
mov
imul
push
or
popa
out
jle
fwait
pop
inc
sub
cmp
adc
mov
jecxz
and
inc
jge
inc
pop
sbb
addl
std
daa
xchg
add
adc
add
sub
insb
add
mov
inc
cmp
push
fimuls
dec
add
mov
into
xlat
mov
mov
cs
bound
mov
cs
add
div
sub
pop
mov
sbb
pop
clc
repz
aas
mov
add
add
dec
dec
movsl
test
xorb
cltd
divb
sub
arpl
lret
sub
and
mov
mov
int
push
add
push
scas
pop
xchg
jp
jmp
sti
mov
mov
mov
cltd
sub
mov
inc
pop
and
testb
add
mov
pop
xor
movsb
incb
jmp
in
mov
cmp
stos
jmp
aas
or
adc
pop
add
push
and
sbb
inc
mov
mov
xchg
mov
dec
mov
dec
sarl
loop
cmpsl
sbb
or
scas
xor
rcrl
jl
jp
add
pop
pusha
jge
stos
insl
jle
and
jecxz
nop
push
aam
pop
pop
aaa
stc
adc
lds
orl
imul
ljmp
fcoml
mov
jo
jo
popf
iret
xchg
shlb
cmp
in
pop
xchg
mov
sbb
mov
dec
ds
push
ret
or
xorl
cmpsb
pop
shl
idivl
cmp
add
bound
int
push
mov
repz
mov
std
push
test
mov
dec
and
jmp
stos
enter
mov
pop
ret
mov
push
cld
and
cli
orl
sbb
loop
incl
or
mov
rcrb
mov
pop
cmp
out
pop
mov
inc
ljmp
jb
pushf
inc
stos
rcll
int
dec
adc
aam
in
add
jmp
jecxz
dec
mov
jo
cwtl
xchg
shlb
out
or
leave
dec
clc
adc
and
push
paddsb
mov
xor
mov
push
dec
lret
pop
gs
and
fadds
or
push
push
dec
jns
syscall
sbb
jbe
xor
add
cltd
dec
aam
jge
roll
pop
push
bound
mov
jge
in
pop
lcall
cmc
dec
and
add
jnp
in
out
inc
roll
xchg
mov
lds
push
push
add
dec
and
jae
xchg
aaa
jmp
mov
mov
fdivl
inc
push
xchg
mov
mov
dec
mov
and
mov
mov
push
pop
pop
popa
sahf
xor
mov
mov
jg
inc
sbb
jge
fisubl
icebp
aas
popf
xlat
mov
adc
dec
stos
in
xor
mov
in
push
push
push
xchg
or
cmp
sub
outsb
push
jle
shlb
int
cs
movsb
in
push
mov
jb
adc
or
pop
cmp
sbb
cmc
add
push
sbb
je
in
adc
push
cmpsl
add
pusha
push
push
push
shl
rcr
dec
adc
addl
or
pop
or
or
cmp
adc
inc
add
popa
inc
cmp
push
stc
filds
adc
fstps
push
andb
push
xchg
jns
mov
aad
pop
incl
jne
test
bound
lcall
jne
orl
xchg
and
sub
push
sub
cmp
dec
repz
test
pop
stos
testl
ljmp
fistl
insl
arpl
jmp
add
lret
add
push
mov
adc
pop
sub
adc
add
xor
sub
arpl
mov
mov
ret
jle
fnstcw
cmpsb
mov
insb
cmp
call
push
cmc
test
sahf
hlt
fptan
or
or
xchg
loope
es
mov
clc
jp
ljmp
xor
mov
insb
movsb
test
mov
sbb
lock
test
fnstenv
cmp
mov
cmp
push
std
push
nop
and
cli
add
jmp
cwtl
inc
push
mov
xchg
pop
fld
pop
mov
cwtl
or
addb
sub
mov
add
adc
std
and
adc
add
mov
and
jb
and
jns
test
jmp
js
aas
add
pop
jg
dec
xchg
es
sbb
clc
lock
dec
or
repnz
shlb
dec
sub
gs
imul
sbb
jecxz
or
ja
push
push
xchg
lods
rorl
mov
mov
mov
sbb
out
mov
stos
push
dec
sti
add
cmpsb
nop
add
arpl
addb
hlt
scas
leave
je
mov
jl
mov
dec
add
xor
outsl
pusha
adc
pop
sbbb
scas
xor
out
loope
xorb
or
jl
mov
faddl
nop
sbb
push
mov
xchg
dec
sub
xor
pop
pop
sahf
adc
inc
fldcw
sub
lods
xorb
shl
leave
ljmp
sbb
je
rclb
pop
jmp
add
cmp
outsl
pushf
adc
adc
cs
cs
test
xor
pop
pop
sbb
jo
inc
outsl
scas
pop
pop
jbe
in
inc
lahf
hlt
pushf
add
fneni(8087
inc
push
and
movsl
jp
pop
xor
dec
cmp
mov
dec
jmp
icebp
mull
repnz
je
add
push
mov
sbb
add
mov
imul
cmpsb
adc
xor
mov
lret
jmp
je,pt
fnstenv
iret
int3
push
xchg
mull
in
mov
xchg
jo
popf
mov
adc
and
or
push
xor
jmp
jg
sar
adcl
sub
frndint
adc
clc
xchg
mov
jb
pop
rcrb
push
jbe
call
push
push
mov
jae
pop
mov
and
test
mov
cli
push
push
icebp
pop
mov
fstpt
xor
lock
int
rol
ret
sbb
out
lods
add
or
jle
sub
adc
test
sbb
test
mov
xchg
xchg
test
pop
inc
sub
cmp
sub
push
scas
inc
cmp
or
push
or
loopne
popf
and
xchg
and
sbb
add
fadds
push
cmpb
add
xchg
das
mov
jp
pushf
orb
jg
xchg
sbb
pop
nop
cmpsb
sbb
mov
cmp
adc
in
xchg
inc
or
std
push
fcomps
mov
and
lods
jno
xchg
dec
clc
jns
push
push
cmp
cmpb
les
sub
or
lret
cmpb
ret
in
push
popf
pop
push
or
add
subb
or
push
test
push
mov
sbb
cmp
bound
pusha
add
jne
mov
test
xlat
sbb
cwtl
adc
adc
push
jo
out
aas
lahf
xchg
sub
xchg
lahf
out
mov
xorb
xor
or
sti
push
jmp
add
jno
cmc
or
pop
push
enter
adc
rolb
das
cmp
ret
pop
mov
addb
and
ds
enter
xchg
push
mov
notb
xchg
cmp
lds
dec
jge
ja
adc
out
lods
mov
jo
and
push
stc
mov
or
inc
pop
rcll
push
pusha
jle
mov
add
push
das
pop
jmp
int
pop
adc
or
mov
jp
pop
cmp
loope
dec
or
push
fs
or
test
mov
sub
or
push
sub
mov
popf
mov
cmp
xor
add
jmp
out
xchg
push
in
sbb
cmc
pop
jg
xor
cli
pop
cmpsb
dec
mov
xchg
dec
jle
adc
leave
adc
xchg
scas
enter
inc
mov
adc
xchg
in
push
and
nop
or
xor
daa
mov
and
and
sar
adc
mov
frstor
xor
jp
xchg
pop
iret
add
jnp
jp
pop
stc
push
in
cmpb
add
adc
out
jns
jne
push
mov
bnd
xchg
xor
add
and
dec
mul
pop
cmpsb
ds
les
pushw
jmp
js
jnp
fucomp
cmpb
add
fistps
inc
mov
popa
cwtl
mov
sbb
pmaxsw
cvtps2pd
xchg
and
roll
ds
addb
sub
testb
add
or
xchg
lock
adc
jl
mov
mov
aam
mov
fdivl
shll
or
adc
ja
cmp
jnp
jge
dec
cld
xchg
cwtl
pusha
aam
add
jb
sub
adc
in
shrl
mul
sub
sub
pop
rol
pop
or
add
sub
cmp
sub
cmp
ds
and
pop
call
fdivrl
js
xor
hlt
dec
xor
mov
xor
addb
sbb
dec
jne
cli
popa
xor
and
pop
call
cmpsb
push
adc
adc
cmp
dec
movsl
add
or
inc
arpl
sub
jns
sbb
inc
outsl
push
addr16
pushf
insb
loop
neg
and
out
adcb
adc
pop
xchg
xor
pop
add
mov
popa
sbb
imul
rorl
adc
scas
out
daa
pushf
or
or
adc
ret
inc
push
mov
cmp
jb
les
clc
stos
lods
push
adc
int3
inc
xchg
mov
pop
inc
cmp
mov
ret
jnp
jmp
jne
out
shlb
ja
pop
fildl
loope
movsb
mov
dec
lea
add
jge
movsl
repnz
cs
push
dec
lret
xchg
add
xor
pop
in
sub
in
cmp
mov
pop
pop
insl
daa
idivb
lock
jns
pop
mul
hlt
pop
or
inc
jg
jp
push
repnz
fldt
and
adc
loop
sub
and
add
es
fsubrs
add
jg
outsb
stos
fadds
cld
inc
das
cmp
fs
mov
pop
dec
xor
pop
imul
push
mov
inc
jp
add
out
jmp
iret
ficoms
lock
add
ja
xor
inc
test
dec
jmp
lahf
sbb
test
pop
inc
mov
stos
add
je
jne
add
push
push
push
dec
lock
and
push
mov
jmp
mov
fnstcw
dec
xlat
push
imul
add
and
sub
cmp
pop
pop
pusha
pop
pop
push
add
pushf
jb
pop
cli
rcrb
xor
shl
ds
jg
xchg
xlat
mov
jae
fsubrs
jo
shll
nop
inc
imul
push
fsubrl
in
test
xor
lahf
addb
push
fstpt
add
lret
call
mov
adcb
insl
add
loop
inc
cmp
inc
sub
add
jmp
add
sub
jne
pop
sbb
das
loopne
pop
loopne
cwtl
jae
xchg
cltd
mov
push
scas
mov
arpl
icebp
and
add
jecxz
std
icebp
inc
outsb
sub
jge
cmp
lss
mov
and
xchg
add
mov
jmp
imull
pop
add
lret
pop
mov
int3
jns
xchg
mov
add
mov
aad
rclb
jl
mov
xchg
aam
cmpsl
repnz
push
or
lcall
je
bound
lcall
ss
xchg
jmp
lea
mov
fbld
mov
div
sahf
inc
adc
pusha
mov
dec
dec
push
stos
cmp
lea
jmp
repnz
outsl
leave
xchg
or
dec
lds
jg
fdivr
lods
inc
addr16
ljmp
dec
loop
add
jo
aam
push
adc
inc
xor
fs
pop
out
add
xchg
jp
rcrb
idiv
test
jge
mov
lret
nop
xchg
sub
add
inc
mov
add
add
dec
push
stos
push
std
in
popa
jmp
mov
cld
rorl
dec
out
dec
mov
inc
mov
sbb
arpl
add
lods
dec
add
ret
das
aam
jo
push
orb
and
test
dec
mov
and
push
or
js
cmpsb
hlt
ss
push
test
orb
test
ret
add
jecxz
repz
lock
pop
rcl
rcrb
enter
data16
mov
pop
sub
outsl
mov
push
repz
leave
mov
pop
pop
popa
pop
dec
mov
sub
sub
pop
dec
sub
sub
push
in
fmuls
das
mov
pop
jmp
dec
repz
cs
iret
andb
mov
sbb
mov
in
inc
jmp
mov
and
sub
adc
cmp
mov
icebp
lahf
push
jmp
add
sub
push
mov
sub
fcomip
iret
lret
pop
hlt
push
mov
push
mov
je
add
push
inc
cmpsl
add
lock
ret
jae
mov
sbb
pop
stos
insl
xchg
push
xchg
loopne
mov
ficompl
mov
pop
imul
subl
jne
jae
sub
push
repz
cs
mov
adcb
cli
inc
cmp
scas
loop
adc
sar
jmp
adc
lahf
fdivs
adc
adc
sbb
jbe
cmp
repnz
adc
jmp
aad
cli
sub
cmp
sti
pushf
lret
add
mov
lds
sub
ret
xor
pop
jns
out
or
cmp
mov
xchg
movsl
notl
jl
or
inc
ss
stos
fisttpll
shr
jae
and
stos
xor
pop
push
jg
lret
popf
scas
lods
sbb
adc
xchg
imul
add
inc
mov
dec
test
jns
lret
das
sar
jl
bound
in
sub
and
shlb
xlat
and
cmpsb
mov
test
jmp
inc
cli
popa
push
flds
pop
divl
ficoml
enter
push
rcll
movsl
sub
or
mov
lahf
decl
inc
inc
sub
aas
mov
or
int3
iret
ja
push
mov
pop
sub
dec
ja
inc
pop
push
aad
loopne
push
pop
pop
pushf
cs
les
xor
mov
push
adc
ja
sbbl
mov
sahf
mov
gs
fstpl
push
cli
xchg
xchg
pop
ljmp
jbe
pop
out
lods
out
or
fstps
daa
inc
ret
pop
mov
mov
mov
mov
add
aas
hlt
adc
out
ror
sbb
add
pop
sub
push
xchg
or
leave
sbbb
jnp
shll
pop
jno
pop
jmp
mov
dec
mov
mov
mov
je
into
cld
pop
pop
ret
test
into
and
push
not
xchg
xchg
or
dec
in
and
mov
push
sbbb
mov
xor
mov
loope
test
ljmp
ud2
cmp
jl
pop
sub
or
idivb
sbb
mov
std
jmp
dec
push
push
mov
inc
test
cmp
lahf
pop
fistpll
push
dec
addl
pop
cmpsb
loop
test
stos
stc
add
ja
inc
inc
inc
rcrb
dec
in
movsl
or
int3
movsl
fcmovu
popf
inc
cmpsb
test
inc
sti
cltd
xor
jb
push
fnstsw
ljmp
pop
pusha
xor
es
fwait
add
mov
outsb
addl
out
loope
scas
adc
pop
jns
loopne
dec
dec
add
mov
push
and
hlt
cmp
xbegin
call
jl
add
push
jmp
mov
mov
xlat
adc
stos
cmp
sub
filds
cs
js
mov
sahf
xchg
adc
jl
xor
mov
add
ret
jae
or
ret
and
or
ret
shll
loope
in
jmp
popa
ss
mov
cmovno
and
movsl
jp
mov
subb
push
or
syscall
push
mov
xchg
mov
loop
xchg
cli
int3
int
jo
adcb
sbb
mov
pop
aas
and
cmpb
cmpb
or
dec
sub
push
jae
cwtl
les
lods
cmp
add
jo
mov
sbb
jmp
xchg
inc
daa
fnstsw
hlt
xor
clc
jmp
or
and
xlat
xchg
inc
mov
cld
xor
das
dec
repnz
cmc
stos
jp
aam
mov
cld
fsubrl
cmp
and
jge
push
in
xor
jns
iret
sub
push
sbb
push
test
rorl
pushf
mov
clc
sbb
rcll
pop
sbb
add
mov
int
aaa
push
pusha
pop
in
lcall
xor
fsubrs
or
aas
sbb
out
outsl
fsts
xor
mov
div
push
inc
xchg
jbe
add
pop
or
push
das
pop
adc
mov
sbb
dec
mov
movl
lods
inc
sar
subb
lcall
dec
sub
xor
pusha
mov
inc
jmp
push
push
sub
pop
imul
out
cld
sub
push
add
call
jmp
test
add
call
not
add
cmc
mov
pop
fdivrl
loopne
xor
mov
icebp
fsubrs
or
sbb
in
addb
sub
inc
jne
pop
es
orb
inc
lahf
movsl
shl
adc
aaa
push
ret
or
sub
sbb
sbb
and
in
in
mov
jmp
cmp
mov
mov
mov
std
pushw
imul
push
push
movb
repnz
cmp
ja
or
xchg
sub
repz
pop
shlb
cmp
xchg
xchg
cwtl
cmp
mov
daa
add
dec
in
loop
xchg
dec
popf
gs
pop
mov
jecxz
outsl
xchg
jo
dec
inc
mov
jg
xchg
shll
das
push
cmp
mov
call
sbb
negl
ss
push
insl
mov
xlat
xor
testl
ret
nop
jp
xchg
leave
inc
movsb
mov
add
sub
and
adc
loope
jno
add
sbb
or
or
sbb
mov
add
repz
xor
push
mov
pop
gs
mov
add
loope
enter
lcall
clc
mov
inc
or
aas
popf
mov
mov
leave
inc
aas
int3
xchg
dec
push
ret
xchg
xchg
pop
push
dec
lret
lea
movsb
mov
popf
out
in
jg
cs
movsl
pop
xor
sub
push
lds
push
push
jmp
adc
insb
push
sub
pop
xchg
je
in
pop
das
ficoml
insb
jp
mov
in
adc
in
int3
pop
mov
mov
pop
imul
add
mov
push
sub
insl
in
fsubrl
mov
adc
dec
xor
fcoml
jle
clc
jbe
push
push
mov
xor
jl
mov
mov
xchg
shr
ss
pop
div
jb
adc
pop
pop
loope
jp
push
push
dec
loop
scas
xor
mov
rcrb
aas
das
arpl
inc
pop
mov
decl
pop
jp
mov
add
pop
jbe
xor
mov
dec
cmpsb
adc
in
pushf
or
xor
sub
mov
aam
add
fcmove
adc
sbb
push
dec
imul
dec
cli
ret
jo
mov
dec
inc
dec
outsl
adc
aas
lods
adc
std
inc
add
cwtl
int3
adc
sub
pop
mov
or
jle
ret
clc
jo
pusha
mov
push
lds
js
fiadds
jle
dec
push
shlb
push
mov
inc
add
in
add
jl
adc
push
mov
shl
cmp
mov
addb
and
pop
or
sti
iret
notb
pop
add
mov
cmpsb
jg
sub
or
pusha
movsb
xchg
popf
xchg
mov
imul
dec
gs
ret
pop
mov
dec
sarl
add
cmp
xchg
addb
add
and
enter
mov
sub
lock
mov
out
inc
or
push
ss
popf
outsb
push
mov
and
add
into
rcl
in
cmp
push
out
lods
jbe
jns
imul
push
pop
psrad
xor
adcl
or
or
sbb
xor
add
push
mov
addl
cli
sbb
jb
and
and
xchg
mov
jle
lock
adc
das
add
imul
in
cmp
jp
xor
addr16
subl
xchg
mov
fistpll
jle
dec
cltd
movsb
xor
or
or
or
or
cwtl
idivl
sub
or
das
lds
or
pop
jl
popa
jmp
pop
in
jg
and
lahf
push
lret
sub
jbe
test
out
pop
push
cmp
sbb
aaa
loop
push
sbb
in
xchg
int3
aam
fimuls
bound
add
push
lea
test
push
outsl
and
adc
sbb
sbb
fdivrs
dec
jnp
andb
xor
cwtl
stos
mov
dec
pop
icebp
xor
lds
call
test
sbbb
xchg
jecxz
hlt
out
adc
fsub
sub
jns
mov
add
das
add
test
push
push
test
add
adc
mov
lcall
out
cld
add
sbb
add
adc
mov
jbe
pop
jmp
mov
push
popf
inc
add
pop
add
jge
sub
test
push
test
inc
inc
mov
pop
pusha
pop
loope
cmpb
or
test
jecxz
add
push
mov
jb
add
add
out
jb
sub
add
add
push
test
or
add
jmp
jecxz
jmp
popa
popa
mov
or
shrb
cwtl
cmpsl
rorl
data16
sbb
rdtsc
sub
test
mov
cmpsb
adc
mov
movsb
mov
xchg
sbb
and
push
and
pop
push
xchg
inc
adc
aad
out
mov
add
push
loopne
push
mov
mov
dec
and
dec
jmp
mov
ficoms
nop
pop
dec
dec
popf
add
sbb
or
jo
test
pop
inc
jecxz
add
jge
push
mov
mov
pop
sub
clc
mov
xor
jl
or
pop
add
cld
mov
pop
std
dec
call
out
mov
xor
test
loop
fnsave
mov
out
push
sahf
mov
cmc
out
xchg
subb
mov
imul
lods
pop
inc
jno
push
in
loop
cmp
pop
lds
and
mov
les
pop
sahf
or
mov
sbb
adc
jecxz
jnp
dec
test
fstl
int3
in
decb
cmpsb
xchg
jge,pt
out
hlt
das
push
add
cmp
add
popa
jle
sub
cmp
mov
lods
and
es
and
inc
jbe
or
rolb
push
lds
repz
sub
or
addb
push
adc
outsb
xor
test
add
dec
rol
imul
daa
and
mov
adc
and
jbe
push
xor
incb
popa
movsb
sbb
push
sbb
pop
addb
cmpsb
jns
dec
or
mov
lret
and
push
movsb
jp
cli
cwtl
shll
fdivs
jbe
cmp
popa
add
jp
jge
push
outsb
push
and
iret
rcrb
inc
sub
push
bound
or
inc
push
lcall
loopne
movl
mov
in
and
movsb
rolb
jge
sub
add
adc
and
pop
daa
push
cld
push
jb
add
out
cs
jle
xchg
inc
psubsw
pushf
sti
or
xlat
das
sti
jl
cmpsb
loop
add
or
iret
sahf
push
leave
stc
and
push
int
jbe
aaa
pop
neg
imull
popa
aas
pop
std
dec
inc
add
push
and
pop
sub
cmp
push
fisubrl
sub
sahf
cmc
push
push
jmp
ljmp
pusha
cmc
xor
xchg
mov
push
mov
and
out
jge
pop
cmp
jmp
inc
test
push
mov
push
cld
rcrl
dec
movsb
pop
int3
mov
pop
call
jns
jbe
pop
jmp
lods
in
loope
cmp
jle
inc
push
add
add
popa
sub
or
or
sub
push
pop
sbb
add
outsb
dec
and
ja
push
cmp
add
mov
pop
mov
and
push
sbb
push
bound
jmp
add
push
mov
fs
stos
test
loope
xorl
mov
cmp
test
daa
and
xchg
mov
or
in
jb
imul
test
mov
pushf
mov
std
ljmp
push
test
push
cmp
push
or
stc
push
mov
pushl
mov
pop
push
cmp
sbb
or
shl
xchg
dec
mov
mov
dec
mov
jbe
out
adcb
into
xchg
mov
or
jb
bound
push
xchg
gs
enter
mov
lods
leave
mov
jnp
in
test
xchg
mov
arpl
mov
jno
adc
gs
out
add
sub
ret
in
xor
out
loope
push
daa
pop
cmp
dec
sub
jno
sbbb
pop
std
mov
jns
scas
push
xchg
das
mov
clc
sub
push
or
aam
push
daa
jmp
int3
push
clc
and
add
xchg
cwtl
mov
daa
fsubl
mov
nop
orb
pop
sub
inc
mov
mov
jmp
or
test
out
xchg
popa
or
enter
cli
push
stc
gs
adc
test
adc
ja
pop
jnp
mov
and
lods
nop
xor
push
addl
stos
movsb
das
push
inc
jecxz
enter
dec
xor
and
test
mov
sub
push
jmp
or
and
mov
lret
rclb
pop
cs
les
and
divps
ds
mov
lahf
push
out
repnz
sbb
loope
int
mov
push
jp
dec
push
jmp
cmpl
call
sbb
aad
push
push
cli
mov
and
mov
xor
out
and
leave
sub
pop
jmp
mov
mov
popf
sbbb
and
sub
fmull
loop
daa
and
pop
xchg
repnz
or
mov
enter
push
add
data16
xchg
jnp
adc
nop
push
inc
mov
pop
jecxz
cli
sub
pop
adc
xchg
popa
sahf
fimull
cwtl
cmp
inc
or
jmp
popa
jns
stos
andb
pop
mov
fs
pcmpeqd
in
inc
and
addl
popa
ficomps
push
pop
inc
mov
add
push
shrb
add
mov
sub
jg
xchg
mov
je
cmp
push
push
pop
shr
out
ret
idivl
pop
add
push
data16
xor
push
add
pop
sub
andb
mov
mov
add
dec
xor
test
popf
jmp
in
jg
insl
xor
hlt
popa
mov
mov
scas
xchg
aad
cmc
mov
xchg
cmp
sbb
sub
outsb
push
cmp
pop
mov
jmp
mov
push
or
test
lods
sub
sub
dec
rcr
imul
jmp
push
adc
cli
pop
lahf
pop
and
jmp
rcl
stc
xor
add
inc
mov
aaa
lock
sbb
add
test
sbb
or
add
push
clc
add
arpl
sbb
sbb
movsb
cli
sbb
fcmovb
or
lahf
sbb
push
orl
mov
mov
sub
or
sbb
and
aas
clc
or
and
inc
fiadds
dec
xchg
add
pop
or
mov
in
xchg
pop
or
orl
mov
push
lods
add
add
add
add
movsl
jle
inc
cmp
scas
inc
gs
push
jmp
push
out
insb
or
cwtl
sti
sbb
add
add
shl
test
mov
les
test
mov
loopne
pop
cli
pusha
and
sbb
push
xchg
lret
sti
nop
adc
or
je,pn
or
sbb
adc
shlb
jg
dec
cwtl
and
xor
inc
test
or
ret
or
add
decb
fcoms
and
sbb
in
adc
imul
inc
aaa
cmp
sbb
mov
xchg
dec
and
and
mov
aaa
add
adc
push
push
and
inc
xchg
add
or
jle
xor
cwtl
out
or
or
add
push
add
add
dec
lods
xchg
sbbb
cmpsl
mov
or
xchg
and
in
and
mov
mov
test
or
pop
and
dec
int
lar
sbb
xor
sbb
jmp
and
adc
and
les
or
add
cltd
push
jp
or
mov
jbe
jg
lock
imul
in
xchg
sbb
hlt
xor
fistl
and
jp
push
rclb
or
dec
xchg
pop
adc
add
pushf
cld
call
fisttpl
cs
jb
push
aam
cmp
push
jne
jmp
mov
aaa
mov
add
dec
dec
or
jne
mov
dec
fiadds
adc
mov
add
mov
xor
sub
mov
and
jecxz
mov
mov
ds
mov
push
mov
lahf
jle
sbbb
or
ja
aas
sub
pop
push
sbb
loopne
stc
test
cmp
es
add
adc
mov
sbb
cld
mov
fimuls
adc
pop
cmp
push
test
loop
sahf
sub
mov
gs
mov
pmaxub
gs
pop
cli
xor
adc
sub
dec
aaa
outsb
aad
sarl
inc
xchg
lock
xchg
fucomi
add
jmp
fistps
decl
cmp
rclb
mov
sub
dec
pusha
pop
inc
jmp
sub
das
fsubs
push
add
xchg
pushf
dec
or
push
and
cmp
fistl
mov
nop
xchg
movaps
pusha
in
ret
add
add
jmp
rclb
imul
invd
pop
add
jg
xchg
fs
idivl
clc
test
jl
arpl
movsb
aas
push
mul
pop
cwtl
mov
dec
add
jg
data16
jmp
cmp
test
mov
adc
add
xor
pop
outsl
or
js
cmp
jle
mov
add
sbb
jecxz
mov
pop
jp
cwtl
imul
cmp
aaa
mov
pop
mov
sub
out
and
filds
shll
push
mov
lret
sbb
mov
std
out
mov
cmc
or
xor
inc
push
shl
push
xchg
push
and
adc
sbb
mov
jp
sub
sbb
enter
cwtl
das
std
in
call
pop
call
pushf
jmp
push
mov
add
pop
sub
mov
push
pusha
in
pusha
je
cmp
cmpsb
pop
fcmovb
stc
mov
out
decb
jmp
pop
push
push
lret
movsl
xor
mov
cmp
aas
aad
fcoml
test
and
mov
sub
jecxz
in
or
std
ja
addr16
adc
repnz
dec
enter
jo
sbb
mov
mov
push
mov
shll
add
out
pop
and
jmp
lods
sbb
insl
jge
adc
stos
rclb
call
leave
sbbb
jecxz
es
mov
shll
pop
mov
push
pop
mov
push
out
pop
add
add
xor
adc
testl
cmp
cwtl
push
add
inc
jmp
add
jp
sbb
mov
clc
push
dec
inc
inc
add
mov
push
js
adc
mov
xor
sbb
jb
dec
ja
xor
scas
js
jmp
sbb
flds
inc
or
jne
sub
nop
sub
test
or
xchg
jnp
mov
mov
jne
mov
sub
mov
fsubp
push
pop
xchg
add
lret
dec
addl
stos
rclb
inc
cmc
orb
and
ret
test
clc
pop
xor
add
leave
fildll
or
daa
jo
jno
push
fs
out
sarb
outsb
addr16
test
jb
inc
subb
or
add
call
data16
push
dec
dec
mov
inc
imul
sahf
push
aaa
add
and
fwait
sub
xor
mov
test
fucom
adc
add
push
decb
incl
test
addr16
addb
sbb
dec
ret
rcl
mov
out
jne
or
adc
inc
push
mov
cmp
nop
dec
adc
popa
pop
mov
jo
pop
test
add
ret
test
sub
adc
sbb
cmp
fsubs
loop
in
ds
aam
adc
sub
mov
sub
dec
dec
push
and
aas
mov
dec
mov
push
call
notl
add
adc
mov
pop
push
push
mov
andb
mov
pop
nop
out
add
lods
lret
jmp
dec
lods
or
push
mov
xor
jg
xchg
lea
movsb
repz
outsb
out
test
add
dec
fwait
lmsw
pusha
push
xor
mov
sub
or
jne
push
das
dec
sbb
sub
sti
jg
gs
cmp
fsubs
ljmp
pop
mov
inc
shlb
pop
dec
and
sub
ret
notb
in
jmp
icebp
xchg
cmp
add
sub
xor
mov
orb
sbb
jl
add
mov
test
jo
sub
xor
ja
andl
in
call
dec
nop
test
mov
les
lds
xor
cmpsb
and
fcoml
lods
outsl
mov
stc
inc
insb
cmpsb
push
nop
or
stos
add
in
cmp
stos
arpl
adc
inc
inc
lret
push
pop
shll
dec
adc
les
cwtl
in
add
inc
cmp
push
add
mov
jmp
ljmp
pop
inc
jnp
adc
or
xor
test
cmpsb
jp
ja
lret
xchg
xchg
adc
addb
cmpsb
pop
ja
nop
mov
adc
shrb
fadds
push
push
mov
mov
je
push
mov
in
sbbl
cmpsb
lret
add
jmp
gs
mov
mov
dec
std
jle
ret
xor
pop
sbb
out
mov
pop
pop
dec
or
loopne
lahf
loope
out
or
in
aas
test
jno
dec
clc
pop
jge
push
fdivrs
xchg
push
aaa
popa
adc
icebp
push
in
sub
scas
sub
hlt
inc
movups
daa
or
dec
sub
xchg
cmp
push
ret
sbb
dec
repnz
push
out
cmp
pop
je
orl
in
enter
mov
push
je
add
adc
cs
sbb
arpl
outsl
mov
shlb
repz
ja
in
ss
mov
or
push
out
es
xor
loope
aaa
push
push
or
cmpsb
xor
cwtl
das
ret
incl
mov
push
or
ret
jl
shr
ficoms
push
add
adc
pop
or
inc
mov
test
or
adc
mov
xchg
xor
pop
push
push
cmp
leave
xlat
out
and
xor
inc
repz
sbbl
gs
adcb
outsb
clc
jecxz
mov
loopne
and
and
or
test
xor
das
int3
hlt
int
popf
fs
scas
and
mov
les
sbb
jge
sbb
mov
jmp
pushf
add
je
pop
inc
xor
pop
and
adcb
idivb
adc
or
daa
sbb
ret
mov
inc
push
xor
jmp
imul
jmp
push
add
leave
fsts
outsl
and
jo
jno
popa
dec
shl
push
adc
std
push
inc
in
jmp
xchg
mov
push
sti
inc
test
and
out
outsb
xchg
out
sub
sub
or
cmp
sbb
mov
add
int3
and
mov
adc
add
push
add
test
pop
pop
pop
cmp
insb
mov
or
xchg
jmp
or
out
imul
push
xchg
ficompl
dec
adc
dec
jns
dec
push
ds
mov
mov
mov
and
adc
or
cltd
fdivs
pop
fs
in
or
adc
or
fadds
pop
mov
lret
sub
pop
add
xchg
stc
mov
push
inc
pop
hlt
jp
and
pop
push
jmp
jg
or
xor
mov
ret
xor
jmp
sub
cltd
pop
pop
outsl
lock
popf
add
loop
mov
incb
or
adc
jne
test
scas
movsb
sbb
mov
mov
shlb
inc
cvttps2pi
dec
insb
push
aas
mov
fsubs
aas
add
inc
and
idiv
mov
xor
icebp
shrb
mov
push
imul
les
xor
sub
bound
or
gs
shr
dec
mov
push
adc
pop
jo
mov
out
add
mov
dec
jl
add
ja
cmpsb
mov
test
enter
jne
jg
xor
pop
inc
ret
ljmp
rol
fnstcw
xlat
adc
add
sub
jmp
push
out
in
movsb
mov
xor
push
movhps
add
jmp
pop
clc
pushf
mov
inc
push
push
lret
nop
sbb
popa
or
cmp
loop
insb
add
jmp
ljmp
and
mov
cmc
inc
xor
push
in
fistl
lods
mov
jecxz
pop
rorb
insl
loopne
push
pop
add
inc
icebp
sub
jmp
testb
lds
pop
push
ljmp
sbb
in
jbe
cmpsb
sbb
pop
push
and
shrb
out
jae
rolb
mov
dec
nop
dec
and
je
sub
sbb
dec
testl
adc
inc
out
or
sub
mov
add
outsb
arpl
jne
andb
insl
andl
mov
inc
or
mov
sbb
jmp
mov
jecxz
nop
inc
mov
mov
ret
loop
sbb
inc
jle
ljmp
inc
mov
inc
mov
adc
add
orb
sbb
jge
jnp
nop
or
fldl
cld
mov
push
mov
decl
xlat
lret
push
sub
cld
sbb
dec
bnd
pop
lods
loop
lret
dec
and
sbb
gs
lock
int3
inc
jne
mov
scas
inc
hlt
ss
xchg
adc
inc
cmp
iret
mov
adc
repnz
neg
inc
mov
lock
cmp
fsubp
lcall
in
stc
nop
stos
loope
addl
lret
jmp
pop
jmp
dec
mov
sbb
pop
xor
sbb
add
imulb
inc
sub
vhsubps
or
aaa
xor
bound
push
pop
das
gs
inc
out
jmp
add
push
add
mov
js
cmp
mov
addl
adc
xor
xor
ret
or
cli
int
jae
in
or
or
pop
int3
lcall
or
dec
pop
daa
jbe
add
xor
push
loop
movsl
sub
xor
loope
add
cmc
aad
lds
cmpb
or
pop
xchg
not
rorb
adc
mov
ror
pop
mov
mov
add
and
jle
dec
push
adc
dec
rcrl
pop
loope
mov
cld
pushf
mov
or
out
mulb
inc
call
sbb
divb
fcoms
or
sbb
jmp
cmp
ret
dec
inc
subb
inc
decb
repnz
cwtl
aad
jb
push
mov
icebp
or
sbb
and
cmp
xchg
pop
shl
add
cmpsl
cmp
movl
fidivl
daa
das
scas
sub
or
inc
out
jg
xlat
inc
pusha
pushf
xor
clc
mov
xor
mov
dec
mov
repz
xor
ja
or
daa
mov
push
push
add
clc
jge
adc
sub
stos
add
pop
lock
les
fcoms
call
push
cs
or
push
fnstcw
cmp
std
out
cpuid
dec
mov
leave
stc
ja
int
mov
push
sub
jo
push
pusha
dec
mov
mulb
cmp
aam
add
or
add
jo
pop
adcb
and
xor
cmc
cmp
or
jmp
ret
and
mov
dec
pop
xchg
adc
fwait
int
jmp
xchg
mov
decl
push
add
daa
dec
pusha
loopne
mov
and
flds
inc
aas
sahf
outsb
inc
inc
cmpsb
stos
shl
inc
add
add
cmc
out
cmp
push
orb
xchg
jno
pop
adc
push
sbb
movsb
movsb
cmpsl
pop
daa
xlat
add
arpl
pop
dec
inc
call
call
and
insl
and
insb
inc
mov
mov
mov
xor
cmp
mov
or
pop
dec
push
cli
aaa
lahf
pop
popf
push
pop
sbb
push
out
xorb
prefetcht0
xchg
mov
out
pop
daa
mov
push
out
xchg
inc
sbb
cmp
dec
add
and
and
in
stc
push
xor
cld
mov
push
sbb
push
push
sbb
xor
adc
nop
xchg
or
inc
mov
mov
pop
cwtl
xor
xorl
dec
adc
out
xchg
inc
test
mov
cli
rcrb
dec
fwait
lock
popf
mov
xor
push
lret
jecxz
popf
mov
add
lds
push
pop
sub
pop
cs
test
popa
test
les
outsb
sahf
loope
pop
dec
pop
jb
lock
push
adc
clc
ss
ljmp
add
ret
sbb
out
fldcw
out
lahf
rclb
and
inc
cmp
test
sbb
fists
inc
out
addr16
das
pop
jno
jge
xor
enter
add
daa
xor
push
adc
stos
out
add
jno
pop
gs
xchg
scas
out
loopne
sub
push
pop
push
xor
lret
scas
lret
and
jae
mov
push
adc
fcmovbe
sbb
dec
fmuls
xchg
cltd
and
pushf
adc
insb
or
adc
jno
test
pop
adc
clc
sub
stc
add
pop
jmp
sahf
cmp
pop
push
mov
inc
hlt
mov
lods
or
icebp
sbb
arpl
mov
push
push
jmp
aad
and
jg
inc
mov
testl
add
pusha
adc
mov
movhps
mov
jmp
test
add
test
mov
mov
clc
mov
jnp
add
mov
aas
jmp
xchg
push
pop
push
mov
mov
add
pop
sub
sub
mov
out
dec
cmp
cmp
inc
pop
adc
pop
mov
mov
movsb
shl
roll
xchg
cmp
or
jmp
mov
xor
pop
or
adc
into
or
inc
add
push
push
mov
in
pop
repz
mov
popa
scas
dec
jo
imul
loop
pop
shlb
xor
xor
jmp
lahf
test
and
mov
and
mov
mov
and
xchg
dec
sbb
and
add
adc
xor
ljmp
insb
xor
icebp
and
and
push
divb
repnz
pop
pusha
dec
bound
xlat
inc
add
push
mov
add
pop
or
sub
lcall
push
fisttpl
xor
outsl
pushf
mov
and
les
addb
daa
mov
cmc
sub
and
shr
pop
andb
popf
and
shlb
aaa
mov
sbb
std
push
ret
pop
dec
mov
test
inc
xor
cwtl
mov
popf
jns
mov
pop
and
mov
shrl
fildl
add
jno
cwtl
je
or
mov
pop
sub
lods
pop
dec
cmpsb
je
ljmp
sbb
mov
sub
dec
out
aas
and
add
pop
data16
adc
test
pop
fildll
pop
dec
cmc
add
aad
in
mov
scas
aam
add
pop
mov
pop
dec
push
mov
cmp
dec
and
icebp
in
dec
add
add
leave
mov
mov
mov
and
add
jle
and
outsl
mov
pop
loopne
mov
in
std
jge
xor
fwait
cmp
sub
orl
push
rcll
outsl
lret
lods
xor
sbb
push
sub
mov
fsubl
sbb
cmp
xor
dec
pop
cmpsb
lea
lret
out
in
aas
xchg
cmp
xchg
mov
lock
pop
dec
out
mov
popa
test
inc
jg
sub
out
lret
sub
or
xor
imul
and
xor
and
inc
lret
sub
add
hlt
fsubrs
mov
sbb
loopne
mov
rolb
and
cwtl
dec
pop
aad
out
mov
sbb
shll
pop
or
ja
xor
cmp
aas
sbb
test
lcall
jmp
loopne
scas
xor
xchg
ror
sub
ret
jmp
shlb
cmpsl
adc
jns
call
push
es
sbb
or
stos
mov
jnp
dec
add
cli
push
imul
jne
js
sarb
sub
aad
data16
xchg
cli
lcall
sbb
insb
popf
push
mov
mov
sbb
mov
add
in
pop
mov
out
jmp
rorb
ljmp
test
outsl
inc
sarl
add
popa
jo
mov
dec
daa
fcoml
jb
pop
pop
mov
imul
fsubrs
mov
and
test
fldl
mov
insb
cmp
dec
xor
cld
pop
push
ss
inc
jmp
push
not
mov
cmpl
pop
sub
ret
or
cs
iret
mov
nop
inc
xor
fcompl
pop
dec
mov
je
pop
in
and
adc
div
bound
bswap
data16
call
mov
adc
jecxz
dec
inc
and
stos
pop
pop
scas
lods
testb
push
stos
cmp
inc
inc
cmp
xchg
das
loop
aam
adc
push
mov
not
rol
pushf
lods
xchg
ljmp
pop
gs
xchg
or
push
or
test
push
cmc
stc
xlat
f2xm1
mov
push
dec
addr16
leave
pop
sbb
sub
int
lret
jge
pusha
cmc
out
lret
inc
inc
mov
add
enter
push
push
cmc
and
jns
inc
pop
jmp
testb
test
ror
cs
dec
jns
sub
mov
fstl
sub
dec
pop
fs
shrb
fld1
xor
dec
or
in
in
stos
inc
cmc
sub
add
cmpsl
sub
daa
out
pop
idivl
and
inc
loope
mov
dec
aaa
lods
fs
cwtl
jae
pop
or
push
adc
popa
arpl
push
pop
outsl
mov
xor
xor
pop
call
pop
push
imul
pop
jmp
inc
jnp
psrlq
push
in
mov
dec
cmp
in
mov
xchg
filds
mov
fmuls
push
iret
dec
sub
sbb
pop
xor
scas
test
or
push
in
pushf
sarl
xor
pop
stos
sbb
adc
mov
out
add
mov
not
mov
and
pushl
outsb
push
clc
push
loop
repnz
xor
ret
sbbb
or
lea
lret
pop
sub
mov
das
jbe
mov
mov
loope
pop
adc
imul
or
roll
in
cld
addr16
jmp
outsl
test
testb
push
int3
scas
jb
push
jnp
jnp
pop
add
sub
jp
and
jp
cld
mov
or
add
xchg
sub
sbbl
add
sahf
je
lock
in
add
ret
and
in
and
push
push
xchg
jb
and
add
mov
mov
nop
push
push
mov
repnz
cmp
orb
pop
push
mov
and
push
jmp
orb
sahf
sbb
js
xchg
pop
mov
sbb
js
add
sbb
fcompp
xlat
movsl
and
adc
pop
sub
mov
mov
nop
in
popa
subl
sbb
pop
jg
sub
shrl
mov
or
jge
jmp
jmp
repnz
filds
sbb
push
into
add
les
ret
add
movsl
rcll
repnz
js
ljmp
add
popf
icebp
xlat
pusha
pop
aaa
mov
push
pop
add
add
and
cmp
ror
cmp
incl
popa
push
mov
adc
sbb
nop
and
loopnew
out
mov
aam
fucom
sub
jge
jg
or
sub
test
pop
rcl
push
and
shrl
add
rolb
aam
mov
adc
xchg
mov
ror
lds
test
in
in
shlb
subb
iret
pop
mov
or
sahf
inc
and
sub
mov
mov
mov
flds
sti
push
and
xchg
rcr
xorl
pop
fisubl
pop
inc
rclb
mov
lock
rol
imulb
test
xchg
jno
dec
fistl
mov
push
ljmp
adc
cmpsb
nop
add
mov
call
idivl
pop
xchg
es
nop
fimull
jmp
sub
pushf
push
lret
adc
sarl
sub
inc
pop
gs
inc
or
aad
jne
test
xor
jbe
clc
xchg
adc
dec
mov
jmp
ret
nop
push
ret
icebp
inc
and
mov
call
inc
jno
jnp
mov
jnp
test
pop
xchg
xchg
cs
mov
pop
lock
cmp
pop
adc
mov
daa
minps
data16
mov
not
cmpb
and
inc
int3
or
aaa
ss
dec
sub
je
push
pop
cli
nop
sub
and
das
jmp
adc
sub
xor
nop
or
std
add
repz
dec
inc
add
and
cmc
sbb
inc
cmp
push
and
xor
cwtl
push
or
loope
fildll
push
sub
push
leave
mov
cmp
jne
stos
mov
fwait
push
add
adc
les
aas
loope
jg
scas
cmpsb
jmp
push
addr16
pop
test
out
push
cmp
popa
push
pop
xor
adc
clc
stos
rorl
xor
or
ss
and
inc
sub
in
jno
jmp
inc
lcall
repz
cld
out
xchg
jno
imul
or
lret
mov
out
ds
pop
pushl
jmp
hlt
test
jmp
pop
int3
add
and
or
cli
js
or
inc
stc
imul
ret
loopne
push
test
jmp
aad
sbb
repnz
push
flds
xor
sub
imul
jmp
push
jns
or
cmp
popa
mov
inc
fsubl
push
pop
add
out
adc
dec
inc
mov
sub
mov
sbb
iret
dec
repz
cmp
ret
lods
add
call
cmpsl
adcb
pop
jge
jno
or
dec
loopne
das
push
jmp
mov
add
pop
push
inc
push
std
xchg
repnz
popf
icebp
sti
sbb
int
sbb
push
aas
cld
adc
cs
and
cli
push
mov
cli
aam
mov
mov
inc
xor
jge
subl
push
insb
jo
push
inc
jo
stos
add
jns
xchg
in
popf
push
imul
add
cmp
ret
mov
mov
sub
dec
xchg
imul
fistpll
mov
ja
or
and
mov
adc
add
push
fstpt
sub
fsubr
movsl
les
add
cmpb
add
mov
cwtl
data16
lahf
into
sub
inc
mov
dec
stos
pop
loope
push
mov
repnz
pop
pop
mov
sub
test
insl
lcall
mov
addl
popa
push
sbb
lret
or
adc
aad
sbb
jmp
insb
test
inc
pop
faddl
and
xchg
dec
popf
gs
adcl
scas
adc
pop
jmp
in
lcall
adc
and
out
add
cwtl
adc
or
pop
in
imul
or
adc
out
inc
pop
and
push
push
push
pop
or
add
pop
push
push
cld
jne
add
out
push
pop
mov
and
sahf
outsb
pop
rcrl
popa
outsb
xor
jo
sti
jecxz
push
mov
sbb
not
ret
jmp
fdivs
iret
mov
cmp
rorl
jg
inc
adc
adc
add
mul
push
nop
ljmp
xor
daa
in
jg
or
jne
roll
outsl
jmpw
shlb
out
jecxz
xchg
enter
sub
shlb
fsubrs
test
frstor
fs
out
or
push
dec
andl
aaa
add
stos
popa
adc
jns
mov
mov
mov
or
jo
sbb
out
sub
jne
in
sti
and
pop
sub
les
xchg
mov
sub
and
dec
cmc
sub
or
sbb
push
stos
cmp
lret
addr16
cmc
xchg
inc
push
jno
dec
pop
add
data16
stc
push
mov
inc
and
pusha
jbe
movsl
or
loope
call
jae
and
adcb
aad
cli
mov
jmp
push
or
mov
add
jb
roll
mov
rcrl
clc
adc
repz
xchg
ret
incl
pop
shlb
jmp
push
insl
xor
jmp
inc
and
pop
cmc
out
jmp
fidivs
pop
add
addr16
cltd
or
cmc
pop
sub
mov
outsb
lret
test
adc
and
mov
fsubl
jecxz
lods
ljmp
xchg
lods
test
loop
movsb
leave
cmp
mov
subb
imul
cmpsb
xor
shll
cmc
int3
adc
pop
cmp
or
xchg
pusha
fwait
pop
xor
pop
sbbb
and
cmpsb
adc
adc
test
or
push
fnstcw
add
movsb
jle
add
sub
sub
add
cmc
inc
std
inc
or
pop
adc
es
push
cmc
push
outsl
aaa
inc
ret
adc
sbb
sub
mov
aas
xchg
imul
dec
xor
clc
pop
icebp
mov
mov
cmp
add
aad
pop
push
push
les
adc
shlb
aas
cmp
enter
daa
js
xlat
add
mov
in
add
pop
xchg
jmp
sbb
ret
jg
jo
add
movsb
adc
pop
jae
mov
or
hlt
mov
sub
lahf
js
pop
pop
mov
decb
dec
adc
nop
jmp
sub
sub
sub
test
fcmovnbe
ljmp
xor
lret
xlat
xchg
bound
jp
cwtl
scas
jns
outsb
adc
push
mov
adc
movsb
cmp
les
jecxz
adc
filds
push
jl
ret
mov
pop
mov
rolb
adc
mov
push
cmp
sub
jge
ljmp
jnp
cwtl
dec
mov
inc
sub
add
pop
sub
das
decl
cli
pop
daa
xlat
movsb
leave
mov
mov
sbb
lret
mov
push
dec
scas
lret
ljmp
paddd
mov
sbb
xor
dec
xor
and
xchg
adcl
inc
in
push
sbb
push
push
mov
mov
jo
or
inc
xor
mov
scas
cmp
sub
jo
jg
stos
daa
add
push
or
mov
add
xchg
jmp
dec
bound
pop
and
out
je
jnp
adc
cmp
imul
rcll
sbb
push
or
jge,pn
add
in
or
pop
ret
or
jge
adc
pop
mov
inc
loop
or
xchg
xchg
jg
sahf
xchg
push
mov
inc
cwtl
movsl
push
push
xchg
mov
xchg
jg
and
sub
or
jmp
lods
and
aas
in
ds
stc
adc
imul
fldl
or
je
mov
std
pushf
test
pop
adc
out
or
data16
lods
enter
stos
js
or
push
sub
push
cmp
inc
mov
xor
jb
test
add
mov
xchg
outsb
rep
xchg
sub
popa
pusha
adc
cmp
test
add
out
add
fsubr
add
or
jmp
pushf
cmc
jle,pn
outsl
jnp
mov
dec
jnp
add
and
incb
out
mov
ljmp
lahf
adcb
js
dec
dec
sbb
push
jge
xchg
cmp
adc
or
sbb
inc
icebp
es
xor
das
xor
js
inc
or
add
mov
jp
mov
inc
std
xchg
inc
incb
subb
or
mov
adc
xor
das
adc
push
sbb
mov
xlat
subl
jne
push
cmp
test
add
ss
xchg
lcall
pop
jle
add
jno
ret
loop
sbbl
sbb
inc
inc
cmc
jecxz
icebp
and
jecxz
mov
lods
xor
xor
xlat
push
fdivrs
xorl
cmp
fiadds
sub
pop
jle
loopne
dec
mov
jle
pop
out
hlt
xchg
cmp
fcmovbe
add
sub
popl
cld
lahf
pop
lock
jns
dec
lds
pslld
aad
pop
pop
scas
fmuls
daa
iret
data16
cmp
xchg
adc
xchg
das
outsb
xchg
lods
push
pusha
push
push
push
and
add
std
and
sbb
xor
mov
das
mov
jb
or
sub
push
lret
cld
std
movsb
push
or
nop
daa
xor
adc
push
add
pop
jmp
mov
fisubl
adc
adc
inc
sbbb
jne
mov
leave
and
outsl
add
ja
jg
jne
dec
inc
mov
mov
sbb
rorb
sub
fcomip
movb
out
fucompp
enter
ret
or
jns
aad
arpl
pop
dec
mov
dec
movsl
pop
decl
pop
outsb
loopne
cmp
cmp
nop
imull
lcall
xor
push
insl
push
das
aam
push
or
mov
add
hlt
or
xor
std
dec
jne
xchg
dec
sub
mov
mov
out
dec
inc
jne
pop
sub
dec
lcall
js
pop
add
mov
mov
or
jmp
leave
into
mov
xchg
or
mov
push
movsb
ljmp
clc
mov
fcomip
cmp
jno
andb
dec
mov
inc
jmp
xlat
dec
xchg
rcrb
push
dec
imulb
jmp
push
mov
mov
shlb
leave
sbb
cmp
xchg
dec
dec
dec
fimuls
inc
pop
adc
aam
push
mov
or
add
das
jmp
cmpsl
dec
jp
sub
pop
arpl
pop
dec
test
fucomip
xchg
add
sub
pop
pop
push
andl
and
arpl
jo
xchg
jge
enter
sbb
add
cltd
into
push
pushf
pop
imul
add
inc
popf
ret
into
test
jmp
rorb
fdivs
mov
out
push
add
mov
out
lcall
mov
inc
sub
push
push
jmp
or
sahf
pop
lds
add
xchg
ret
xor
int
daa
gs
inc
mov
inc
loop
add
dec
sub
sahf
shll
pop
daa
adc
dec
and
adc
mov
pop
imul
push
cmpl
stc
mov
mov
sub
scas
inc
sarl
add
push
sbb
mov
inc
cmp
pop
push
mov
test
push
and
call
shll
push
pop
mov
pusha
dec
neg
loopne
cmp
sub
cmp
push
into
mov
clc
pop
mov
and
sub
subl
aam
es
dec
xor
lret
repz
mov
jno
jp
push
inc
or
lods
push
jmp
sub
xchg
cmpsl
inc
xchg
imul
popa
or
pop
add
push
dec
pop
scas
and
sub
mov
repnz
popa
jnp
xor
pop
dec
push
push
or
add
mov
lea
sub
aam
mov
jae
dec
push
sub
dec
inc
or
mov
xchg
mov
push
xor
dec
and
push
das
call
push
ret
xchg
jmp
adc
mov
not
or
or
cmp
pushf
inc
dec
mov
pop
xor
xor
into
lock
pop
add
jle
inc
or
dec
andl
or
mov
push
out
mov
and
pusha
dec
ljmp
cs
add
movsb
ret
lret
jo
mov
fmulp
xor
clc
bound
xor
jmp
mov
push
mov
mov
dec
pusha
push
aaa
outsb
xor
rcrl
sub
loop
jno
sub
add
sti
or
lds
jmp
cmp
and
or
jns
push
decb
xchg
pop
and
push
cmpb
mov
xor
add
repnz
sbb
and
pop
aas
add
dec
and
adc
leave
mov
fbstp
xchg
scas
daa
incl
xlat
fldcw
call
dec
rcl
lock
iret
in
loope
scas
mov
pop
ds
jmp
xor
pushl
stc
pop
and
in
add
cmp
inc
dec
add
and
pop
jmp
push
push
mov
aaa
push
push
xor
sbb
add
ret
jo
fxch
adc
pop
inc
or
cmp
inc
sub
jo
out
and
jecxz
je
sbb
pop
pop
pop
add
int3
gs
mov
jns
out
out
test
jecxz
popf
adc
adc
insb
sub
push
das
jmp
jge
add
add
pop
ret
fbstp
pop
lea
xchg
pop
shrl
and
sub
loopne
imul
mov
aas
into
pushw
mov
or
or
push
push
std
xchg
xor
cmp
andl
pop
or
clc
cmp
xchg
imull
popf
aam
subb
arpl
push
push
pop
fs
adc
xchg
outsl
int3
pop
daa
adc
pop
push
jmp
mov
and
psraw
mov
pusha
jge
loope
ljmp
adc
jmp
mov
inc
in
xchg
andb
out
add
cmp
clc
jmp
in
outsb
sub
sub
xchg
cmp
push
xchg
fisttpll
cld
lea
dec
add
push
add
sbb
push
add
leave
adc
mov
mov
je
pop
daa
mov
pop
push
push
and
fisttpl
xchg
shr
dec
push
mov
push
sub
repz
add
shll
loop
jp
add
xor
jb
sar
outsb
and
add
add
mov
xor
repz
inc
inc
xorl
in
out
in
or
shrl
jle
outsb
cmp
sub
xor
push
jo
nop
or
push
shl
lret
or
jmp
adc
xor
nop
push
pop
cmp
xchg
int
repnz
or
sbb
icebp
andl
pop
push
jmp
push
xchg
or
out
pop
adcl
je
push
jmp
jl
daa
inc
add
add
jmp
sub
dec
les
call
push
xlat
push
shl
icebp
or
fildl
lock
int3
imul
mov
loopne
sbb
cmp
enter
push
xlat
fnstenv
popa
push
js
popa
jl
pop
pop
outsl
repnz
movsl
sti
cltd
dec
or
xor
mov
sub
pop
jmp
cmpsl
and
nop
mov
jo
jge
out
jp
outsb
imul
push
push
jmp
mov
leave
sub
stos
adc
jmp
leave
push
add
push
ret
jmp
mov
neg
test
or
out
loopne
orl
lods
xchg
add
lret
xchg
add
cmpsl
pop
ret
es
cmp
jmp
data16
and
rcrl
ret
lds
mov
aad
out
jmp
lahf
insl
push
std
out
sub
pushf
notl
pushf
mov
cwtl
jnp
outsb
dec
popa
adc
mov
inc
shr
add
shl
lret
movsb
out
mov
icebp
push
pop
js
gs
cmp
pusha
out
mov
dec
aam
popf
pop
dec
sub
movsb
ret
in
add
jle
push
shr
mov
mov
sub
push
jmp
enter
mov
dec
mov
pop
push
sarb
int3
add
pusha
sub
pop
pop
call
mov
and
push
fsubs
leave
push
and
dec
jl
lret
pop
and
jno
pop
push
ds
fadds
filds
sub
push
das
add
aad
sub
shr
loopne
repz
xor
jmp
cmp
mov
js
adc
fs
idivl
or
push
jbe
popf
jne
add
jle
pop
jecxz
aaa
daa
inc
dec
fmull
or
sbb
lcall
pop
cs
push
cmp
sbb
and
mov
cmp
sub
daa
aam
sub
dec
test
sub
add
sbb
cmc
pop
pop
mov
add
shl
jle
jl
jle
inc
es
mov
or
xchg
pop
daa
std
cmp
hlt
dec
sub
mov
cmp
inc
int3
push
ds
mov
addb
push
and
jbe
pop
stos
adc
popa
enter
pop
push
cmp
mov
dec
pop
jmp
mov
int3
push
icebp
jmp
xchg
dec
lock
add
pop
stc
push
add
arpl
mov
jecxz
sbbb
cmp
pop
sbb
adc
aad
mov
adc
cmp
add
not
jae
in
iret
or
mov
addr16
mov
ret
loopne
je
add
dec
sub
shrl
popa
push
sbb
mov
xchg
xchg
addr16
cmp
sahf
insb
imul
sub
roll
push
jmp
shlb
call
cli
sbb
nop
test
hlt
call
pop
push
cmpsb
and
fwait
mov
inc
loope
jnp
mov
xchg
jge
mov
jns
pop
shlb
and
ret
pop
push
test
mov
sarb
mov
adc
xor
jne
loope
inc
mov
cmpl
pop
push
movsb
or
sbb
pop
ret
stc
and
iret
or
jecxz
and
mov
and
sub
data16
pop
sbb
mov
add
hlt
imul
inc
aam
enter
xchg
not
out
or
add
mov
jbe
dec
or
mov
xchg
inc
das
sub
inc
jge
push
sbb
ds
inc
stos
adc
in
or
aaa
std
test
out
push
testb
pop
inc
jne
pop
lds
or
sahf
sub
jmp
fistl
lret
repnz
and
sub
clc
out
dec
mov
push
lds
sbb
xor
jge
mulb
pop
cmp
or
and
hlt
and
popf
push
arpl
stc
ret
xchg
xchg
push
dec
ljmp
sub
psubusw
pop
ljmp
cmp
mov
mov
inc
mov
mov
lret
adc
dec
and
roll
pop
jl
jmp
push
cmp
cwtl
cmpsl
iret
mov
adc
dec
or
xchg
inc
add
dec
dec
into
cld
orb
test
stos
lock
pop
mov
sbb
add
or
out
jmp
inc
arpl
dec
xor
lods
jo
jmp
lds
add
xchg
push
dec
add
test
jp
out
hlt
or
cmpsl
jns
add
clc
dec
sub
mov
sub
iret
out
pop
movsb
inc
add
and
xchg
in
cmc
push
dec
push
cwtl
or
imul
leave
sbb
sub
sbbb
filds
push
lods
jne
jmp
cmp
out
and
adc
insb
stos
xor
into
xor
cltd
add
stos
or
dec
dec
and
or
aaa
out
popf
sub
sbb
xor
sub
push
ss
sbb
outsl
dec
cli
sub
sbb
jp
imul
xor
shrl
or
xchg
xchg
mov
outsl
in
mov
adc
in
sbb
push
mov
movl
fcoml
dec
xor
xor
cmc
mov
add
sub
mov
outsl
add
sarb
jge
cmp
out
call
sub
in
jp
push
testb
mov
inc
jne
add
push
adc
popf
mov
mov
adc
test
cli
imull
or
cmp
cmpsb
lahf
call
insb
mov
pop
mov
inc
gs
inc
test
into
xor
dec
fstl
or
lock
lock
and
push
stc
aam
or
push
or
push
arpl
into
rorb
outsl
sub
sub
sub
test
lahf
add
pushl
sub
jb
pop
pop
fadds
dec
mov
fs
mov
int3
and
sub
inc
scas
dec
pop
pop
inc
xor
in
sub
inc
xchg
movsb
int
movsb
fucomp
or
add
or
addr16
jo
dec
push
push
add
gs
std
rcr
push
incl
sub
rcr
test
jg
rcrl
aam
or
inc
sub
loop
add
push
jmp
out
mov
pop
xor
insl
inc
jnp
imul
or
xchg
leave
popl
dec
jbe
add
in
bound
ret
daa
or
sub
push
mov
and
cmp
stc
fisubl
je
out
xor
jle
lcall
add
mov
mov
sbb
mov
dec
jge
jne
out
stos
adc
loope
xorb
push
adc
out
ret
pop
push
inc
mov
pop
in
dec
or
addl
add
jmp
xor
add
pop
pop
les
sbb
aad
scas
das
notb
dec
adc
sub
add
push
das
ret
add
aad
fsubrp
add
loop
and
in
lret
dec
rorb
gs
daa
push
sbb
lds
dec
inc
js
or
or
jb
jge
add
xor
cmpsl
push
rol
lds
lahf
loop
inc
ret
std
mov
push
dec
and
push
pop
add
aam
jmp
cmp
add
mov
jmp
nop
and
inc
adc
xchg
add
adc
mov
imul
jo
push
dec
sbb
push
call
xor
sub
jp
idivb
and
push
xchg
pop
pushf
test
dec
call
push
adc
and
cmc
add
adc
jnp
repnz
mov
loopne
int
mov
imul
inc
in
xchg
cmp
mov
add
xor
dec
out
push
push
iret
cmp
inc
inc
jns
sahf
push
xchg
xchg
mov
cmpsl
stc
std
adc
sbb
stos
mov
xlat
fistl
idivl
sub
jbe
movsl
sarl
push
adc
add
jae
lock
add
jle
shl
fadd
or
add
and
jne
mov
orb
cmp
movsl
add
pop
xchg
push
add
neg
mov
or
dec
add
arpl
sarb
inc
sbb
add
out
add
pop
xchg
pop
fwait
lds
cmp
sbb
push
arpl
sub
movsb
in
pusha
or
sub
adcb
xor
sub
or
outsl
xchg
loopne
and
ret
xlat
inc
push
or
std
and
out
mov
xchg
mov
icebp
fnstcw
lret
add
jmp
dec
sbb
mov
inc
sbb
jmp
push
xchg
mov
das
push
mov
mov
pop
jg
in
jl
and
mov
fsts
aam
push
int
lea
in
sub
or
mov
cs
pusha
cmc
loop
dec
push
sar
sub
pop
push
inc
aad
stc
dec
scas
js
das
dec
sbb
es
add
and
or
dec
adc
inc
jle
ja
loope
jmp
out
js
xor
int3
pop
pop
loope
sub
xlat
testb
mov
push
inc
or
push
add
mov
cs
cmp
mov
mov
add
fistl
add
add
sub
cmp
mov
sub
pop
push
and
in
mov
pop
lcall
and
jo
jmp
add
sbb
fwait
cmpl
test
pusha
push
mov
jmp
sbb
jbe
mov
dec
xchg
push
adc
jg
filds
andl
les
out
imull
mov
add
ret
or
mov
cmc
xchg
xchg
push
mov
xor
sub
push
sbb
insl
xor
loope
std
stos
jge
lock
sbb
sbbb
inc
pop
jmp
lea
sbb
or
sbb
aas
adcb
adc
nop
xor
int
inc
repnz
addr16
push
mov
xchg
jne
ds
pop
stos
cmpsb
rcl
push
jno
push
xchg
mov
in
mulb
pop
jmp
push
inc
jb
dec
cltd
insl
pop
les
push
sbb
loope
xchg
sbb
or
ss
arpl
test
push
xor
repnz
and
and
ljmp
inc
rorl
dec
sbb
pop
ja
clc
std
pop
mov
xchg
push
lcall
sub
gs
loope
add
pop
jmp
mov
cltd
jg
js
sbbb
add
push
lods
pusha
subl
mov
int
add
mov
adc
je
add
xchg
mov
jo
xchg
add
jle
setbe
or
test
jo
out
repnz
sti
xchg
pusha
push
dec
xor
int3
int3
insb
and
dec
flds
or
adc
insb
add
inc
sar
dec
xchg
loopne
xchg
jl
pop
rclb
shll
push
inc
out
int3
xchg
nopl
jne
incl
inc
mov
push
xor
outsl
dec
mov
sub
push
pop
or
sbb
xchg
mov
daa
pop
das
fadds
cs
pop
fldl
imul
adc
or
stc
pop
xchg
loope
sarl
dec
ret
jmp
sub
shlb
cli
sub
xor
fcom
or
xor
shr
dec
inc
push
mov
cmp
fucomp
jp
aad
and
push
sub
inc
adc
hlt
shlb
jg,pt
lahf
js
lret
hlt
and
jl
jle
mov
insb
dec
mov
sbb
loope
jmp
mov
jno
ret
incl
js
repz
lods
add
mov
jmp
pop
pusha
gs
jle
jmp
shrb
in
push
jmp
out
pop
push
leave
pop
sar
add
or
or
cmp
xchg
or
fwait
dec
dec
outsb
lcall
lock
shlb
stc
je
mull
mov
sbb
loopne
add
sub
pop
sub
pop
inc
cs
stos
or
clc
cwtl
or
push
leave
js
lahf
rorl
and
mov
test
cli
notl
loop
jae
movsl
adc
sub
je
in
jmp
cwtl
cli
adc
stos
inc
out
cwtl
jecxz
or
loope
pop
push
push
adc
lea
and
cmp
ljmp
outsb
cmp
push
sbb
pop
test
ret
push
jmp
dec
jg
cmp
or
and
dec
cmp
or
mov
pop
mov
xchg
leave
js
or
cmp
push
and
push
cmp
cmp
in
sbb
aam
pop
adc
cmp
out
or
push
push
or
or
das
daa
xor
sub
cmp
decl
sub
push
cmp
push
adc
dec
cmpsl
cld
outsl
adc
cwtl
add
push
adc
mov
pop
lret
sub
sti
lahf
inc
push
mov
inc
adc
push
pop
add
add
adc
daa
jmp
insb
cld
ja
pusha
sub
pop
xchg
fs
cmp
xor
pop
sbb
repz
and
lahf
outsb
fwait
dec
lahf
pop
dec
mov
testb
ja
out
test
push
sub
ds
sbb
popa
rcrb
xchg
xchg
aas
or
lock
adc
test
mov
lods
pushf
add
ss
test
dec
mov
adc
insb
add
cmp
xor
xlat
enter
jmp
jmp
pop
mov
sbb
movsl
sbb
push
insl
dec
mov
dec
test
jb
sbb
shlb
out
roll
jbe
dec
mov
inc
fbld
sub
pop
or
sarl
jmp
push
fiadds
dec
sub
jbe
in
jge
loop
xor
sbb
cmp
ljmp
mov
mov
mov
xchg
mov
lods
std
sar
call
or
lods
sub
inc
and
cmp
sub
mov
test
dec
mov
cmpsb
iret
fstpt
add
lret
loopne
out
jle
xor
cmp
lret
leave
orb
cmc
je
test
daa
lret
push
outsl
fistl
cmp
inc
repz
sub
cld
cmpb
mov
aam
rorb
mov
sbb
scas
cmp
push
ja
cmp
jmp
sbbl
or
or
rclb
xlat
dec
cmp
sub
pop
dec
and
and
addb
add
sub
mov
push
jmp
cmp
imul
inc
nop
das
mov
push
testl
add
xchg
dec
repz
add
jbe
mov
or
fcmovnu
pop
or
insl
jl
inc
jae
cmp
adc
or
mov
jb
cmp
sbb
inc
mov
mov
arpl
add
jmp
fsubrs
adc
sub
aad
inc
ret
ja
ret
sub
aam
hlt
mov
roll
mov
push
add
sub
pop
sub
add
sbb
push
mov
push
lahf
adc
pop
inc
jle
sarl
movsl
jae
or
mov
mulb
aaa
sbbb
outsb
pop
pop
sub
or
pop
adc
and
mov
adc
mov
push
inc
jmp
add
adc
inc
ljmp
add
jp
rolb
test
sbb
or
jno
xchg
in
in
clc
jo
xchg
je
int3
mov
adc
add
shlb
scas
cli
out
adc
and
daa
xor
popa
jmp
add
push
incb
montmul
cmpsb
inc
ret
cmp
jmp
lahf
xchg
loop
push
aam
jb
fistpl
je
outsb
rclb
fcoms
mov
mov
jo
jmp
push
sti
cltd
or
hlt
xchg
xor
scas
popf
aad
in
ljmp
sub
mov
xor
stos
mov
push
shl
sbb
std
and
push
shrl
or
out
jmp
and
icebp
sbb
jnp
int
fisubrl
lret
push
pusha
lock
mov
inc
nop
mov
jl
ffree
mov
call
jle
mov
dec
shlb
push
daa
add
stos
xor
sar
pop
jmp
xchg
mov
xchg
daa
push
das
jns
movsl
decl
lods
pop
xor
xchg
mov
cwtl
addb
cmpsb
add
enter
jecxz
jmp
out
and
test
stos
cmp
subb
imul
push
stos
cmpsl
out
rolb
adcl
xchg
scas
nop
ss
mov
sbb
ret
rcrb
test
adc
bound
push
or
jne
ret
lods
jge
pop
fs
push
push
out
mov
sbb
gs
fucomip
jbe
jle
pop
jge
rorb
sahf
in
scas
add
mov
mov
add
pop
dec
jne
shl
lea
sbb
xor
dec
xchg
mov
sbb
sti
pop
and
inc
pop
aaa
inc
xchg
jle
jnp
pop
jmp
mov
shl
testb
xor
mov
jmp
mul
shr
repnz
test
outsl
sbb
add
push
ret
and
add
and
and
and
subl
dec
add
xor
sub
jne
inc
xchg
fidivrs
scas
jecxz
xchg
dec
inc
mov
out
push
sti
dec
jecxz
das
fisubs
nop
cmp
xchg
insb
mov
pop
xor
mov
faddl
movsb
sbb
shr
pop
in
and
mov
in
test
pop
cmp
popf
mov
aam
sbb
dec
dec
outsl
loopne
pop
push
push
mov
adcb
or
xchg
inc
add
push
shl
sub
or
ret
mov
jbe
xlat
adc
in
and
sbb
pop
xchg
add
clc
add
je
popa
in
ljmp
mov
out
iret
pop
js
pop
mov
nop
into
push
push
push
push
and
pop
jp
sub
xchg
pop
mov
add
imul
divl
outsb
sub
pop
pop
or
jmp
pop
aaa
xchg
out
inc
loopne
ds
gs
push
je
add
sub
jmp
sbb
or
pop
and
je
cld
movsb
bound
loopne
cmp
lcall
imul
inc
sahf
imul
mov
std
inc
mov
std
ja
dec
sub
ja
inc
push
bndldx
sub
pop
pop
mov
inc
call
notl
sub
sub
pop
fs
jmp
inc
mov
pushl
sub
sbbl
pop
jmp
add
add
stc
out
and
add
sub
jbe
stos
cld
jmp
sub
dec
cmc
repnz
pop
in
rcrb
js
push
push
mov
repnz
push
pop
adc
test
out
loope
iret
and
pusha
push
adc
adc
jp
dec
pop
fmull
gs
cmp
dec
pushf
cmp
mov
pop
sub
dec
jecxz
es
sti
pop
gs
pop
push
pop
push
jp
xchg
xchg
cmpsb
call
loop
lds
pop
push
mov
or
pop
xlat
out
push
nop
xor
jmp
neg
cmp
pop
cli
test
in
mov
gs
int3
and
sbb
ret
and
mov
and
fisttpll
cmp
rcrb
mov
in
out
push
stc
js
xchg
mov
in
mov
xlat
dec
in
push
add
bound
or
fwait
pop
sti
pop
or
adc
jo
mov
adc
daa
xchg
pop
lods
fucomp
dec
add
sub
xchg
or
push
mov
inc
adc
mov
pop
cmp
subb
loope
push
imul
jnp
ret
pop
jge
inc
pop
stos
loope
push
lods
dec
mov
jmp
mov
pop
dec
rorb
jmp
in
test
push
cld
cli
loopne
sub
and
add
lods
adc
push
mov
subb
clc
xor
notrack
push
push
fisttpll
movsb
or
or
imul
int3
or
mov
stos
mov
dec
pop
mov
jo
loope
pushf
fdivrp
pop
aaa
lahf
ret
pop
push
push
fstps
je
out
cmp
cmp
jbe
add
loope
jb
push
test
leave
jmp
push
movsb
movsl
add
and
mov
push
repz
mov
jo
mov
iret
adc
sub
push
xor
add
push
jmpw
mov
sbb
lds
add
jo
sbb
mov
inc
test
ret
pop
sub
fsts
ss
add
xchg
mov
or
sub
jno
das
sbb
lods
lahf
pop
subl
insl
or
jp
pusha
xor
pushf
gs
hlt
sti
add
jge
add
nop
mov
pop
add
pusha
jnp
xor
pop
cmpsb
or
pop
shr
subl
rorb
jbe
fsubl
ja
or
insb
cltd
add
aas
incb
rorl
test
test
mov
enter
mov
mov
arpl
ficoms
mov
in
mov
pop
push
mov
xor
out
out
rolb
add
sar
mov
xchg
enter
mov
pop
mov
repz
pop
mov
push
aaa
dec
adc
call
lods
in
fidivs
in
jo
mov
mov
iret
add
inc
jmp
data16
dec
popf
add
es
mov
sub
pushf
setb
fnstcw
and
xor
lret
mov
jmp
sub
fs
jno
xor
add
aad
push
cmp
or
ja
add
or
add
jg
cmpb
or
jge
xchg
push
bound
xchg
sbb
mov
dec
insl
jne
pop
roll
sti
cmp
and
pop
xchg
es
xchg
out
and
pop
popf
jle
add
xor
cmc
pop
inc
jns
jns
loop
fisubl
jb
add
outsb
push
jmp
lods
or
jmp
pop
push
inc
mov
add
shll
mov
enter
sub
ljmp
jae
lock
xor
icebp
cwtl
push
inc
jmp
mov
es
mov
jno
push
inc
cmc
xchg
push
jl
fistpl
jmp
jle
ret
mov
shll
mov
jno
lret
pop
jmp
bound
sbb
leave
sahf
aad
push
add
aas
ljmp
adc
xor
rorl
and
and
mov
lret
jecxz
dec
pop
cwtl
scas
mov
jmp
pop
xchg
idiv
stc
xchg
ret
sbb
and
mov
sub
adc
jl
cmp
ficompl
jno
xchg
mov
std
pop
xlat
sub
xchg
sti
leave
es
andb
enter
push
jbe
mov
sub
decb
test
loope
sub
cmp
and
or
jb
int3
divl
dec
jg
test
lcall
jo
inc
hlt
das
adc
or
pop
add
sti
dec
and
adc
jmp
aas
enter
das
sub
push
or
test
in
jnp
lds
xor
push
gs
daa
mov
cld
pop
push
ja
mov
add
adc
vmovss
das
add
lcall
mov
rorb
je
and
fidivrs
ret
push
inc
pop
jp
fidivrs
xor
and
inc
adc
pushf
loopne
and
cmpsl
xor
sub
add
insl
in
push
pop
inc
fwait
and
loop
mov
movups
add
or
lock
lret
cltd
pop
out
xchg
push
lods
push
and
in
push
add
pop
xchg
sbb
jmp
test
in
test
xor
push
mov
sub
pop
imul
push
lret
fwait
adc
addb
jp
adc
test
test
xchg
jge
fbld
and
clc
fstpt
cmp
cmpsb
mov
pop
ja
icebp
add
pop
pop
mov
sub
call
fdivp
inc
pusha
lea
xchg
lret
mov
or
pop
call
xchg
sbb
dec
xor
inc
ljmp
outsl
push
daa
shl
dec
lods
mov
mov
aam
pop
scas
push
loope
pop
sbb
adc
add
imul
es
pop
and
popa
pop
iret
sub
jmp
mov
aad
mov
push
xlat
int
sbb
ds
or
roll
enter
sbb
scas
mov
test
out
daa
inc
add
push
push
and
ficoml
and
push
jmp
adc
leave
lret
jle
repnz
lahf
add
sbb
add
add
push
push
push
jle
into
jmp
jo
dec
push
dec
mov
push
pop
jmp
cmp
push
push
and
pushf
aam
repnz
pop
push
enter
pop
push
xchg
ds
shll
xchg
jnp
push
je
roll
xchg
adc
mov
je
shl
and
pop
xor
pop
lret
and
divb
and
inc
cmpsl
mov
inc
into
add
cmpsl
dec
pop
add
push
stc
inc
fadds
rcrb
dec
mov
and
or
xrelease
data16
fsts
std
cmp
dec
jge
xor
or
adc
enter
sub
in
pop
push
jo
pop
pop
sub
and
xchg
ror
push
fstps
loope
add
push
shrl
insl
push
daa
mov
cmp
add
das
push
pusha
lods
sub
pop
push
testb
mov
inc
and
cmp
mov
ret
jle
ret
cld
fsubrl
mov
test
push
push
repz
jbe
push
xor
mov
aam
js
dec
xchg
jae
nop
xor
ret
fsts
outsb
stc
es
scas
cld
pop
push
rorl
add
xchg
orb
or
out
xlat
add
ds
push
xchg
jp
loope
icebp
adc
mov
jl
stc
push
or
or
cmpsl
loop
cwtl
mov
pop
cmp
pop
jmp
inc
aaa
or
adc
pop
loopne
mov
mov
faddp
and
pop
enter
cmc
xchg
icebp
sub
jl
jle
lcall
call
outsl
popf
jbe
pop
mov
cmp
add
or
inc
in
inc
adc
loop
pop
das
sub
shr
xor
xchg
adc
lret
int
inc
nop
insb
push
cmc
pop
dec
call
sbb
mov
dec
adc
and
ja
cld
jno
and
cmp
imul
cmp
lock
icebp
addb
jmp
push
push
ficompl
nop
push
pop
jmp
xchg
mov
int3
pusha
xor
push
add
iret
out
add
jmp
popa
push
mov
ret
pop
lcall
adc
out
mov
popa
cmpsl
adc
repz
andl
imul
mov
jmp
xchg
pop
add
clc
or
loope
bound
inc
hlt
jmp
ret
cmp
cmpsb
cli
add
or
mov
dec
xchg
xchg
push
mov
mov
enter
push
add
cmp
push
mov
or
test
ss
dec
nop
and
pusha
test
xlat
pushf
icebp
idivl
inc
jnp
or
pop
jbe
jp
bound
pop
popf
dec
cld
xchg
mov
jmp
or
clc
lcall
push
out
mov
ret
and
mov
pop
mov
lcall
adc
js
pop
pop
lods
pop
lcall
daa
mov
aas
js
add
adc
cli
adc
pop
or
scas
xor
decb
push
cwtl
jmp
cwtl
xor
scas
sbb
mov
es
and
and
push
add
outsl
mov
jb
add
push
dec
outsb
pop
femms
xchg
mov
adc
pop
mov
out
sub
xchg
push
out
sbb
pop
xlat
test
add
shll
adc
xor
mov
jg
jp
mov
sbb
inc
pop
jae
lcall
popa
std
or
sbb
aas
cmp
popa
sub
shrb
and
imul
ds
sub
inc
xor
push
nop
xchg
add
or
lock
into
out
push
pop
icebp
add
outsl
inc
ja
lret
pop
xor
add
adc
mov
add
popa
adcl
xchg
mov
push
push
inc
clc
adc
or
dec
dec
sub
jmp
mov
cmc
aam
sbb
push
add
push
xchg
or
push
repz
push
lock
add
stos
adc
ds
push
test
in
push
jmp
repnz
negl
push
icebp
inc
mov
or
pop
daa
dec
pop
sbb
dec
mov
xchg
repz
xchg
sub
xchg
loop
push
push
movb
shll
imul
cmc
mov
mov
push
inc
pop
mov
int
and
jne
mov
pop
pop
push
add
push
mov
daa
in
push
push
in
cmp
sub
icebp
scas
cs
cmpsl
jg
rclb
lock
ret
ret
jmp
sbb
sbbb
push
mov
sbb
out
loopne
jmp
iret
cmp
fsts
jb
pop
jg
xchg
std
gs
aam
mov
mov
adc
shlb
inc
xchg
pop
add
daa
lods
push
mov
push
pop
dec
dec
dec
out
xchg
bound
fistps
in
jmp
jmp
cmpsb
jbe
push
mov
pop
inc
jae
or
add
cmc
call
in
shrl
or
sti
xchg
xchg
pop
stos
loop
xchg
mov
jle
or
sbb
jbe
or
int
das
std
and
push
add
enter
inc
insl
adc
pop
enter
and
jmp
popf
roll
test
xorb
dec
jp
mov
push
mov
add
fucomip
roll
and
ret
add
loope
repnz
mov
scas
leave
and
or
loopne
dec
pop
push
cmpsl
test
es
scas
mov
adc
xchg
add
leave
lds
pop
xor
and
dec
mov
inc
data16
aaa
mov
xor
pop
jmp
sub
mov
sbb
pop
pop
popa
push
pop
mov
dec
jmp
sub
and
out
lods
xor
mov
jns
ret
aad
or
int
sub
idivb
fldcw
add
or
sub
push
adc
out
imul
inc
add
jecxz
pop
mov
and
pop
cli
repz
stos
xchg
int3
bound
stc
pop
shl
or
rcll
sub
loope
dec
pop
push
dec
add
or
imul
mov
adc
mov
dec
mov
add
push
and
inc
pop
fisubl
aaa
fwait
repz
jns
loope
pop
insl
mov
das
pushf
rcr
sub
pop
cmp
add
add
divb
jmp
nop
mov
mov
repnz
xor
sub
xchg
dec
fwait
and
ljmp
shrb
xchg
lea
pop
repnz
mov
lods
push
jns
pop
sbbb
out
icebp
mov
mov
sbb
cmpsl
das
push
and
cmpsl
push
mov
xor
das
sbb
push
sub
je
outsl
sub
rcrl
adc
das
loope
pop
mov
and
std
adc
ja
in
cmp
mov
jne
in
or
dec
inc
xor
ljmp
inc
and
pop
out
adc
sarl
sti
add
jnp
xchg
fisubrl
js
iret
leave
lds
out
jo
jmp
cmc
cmp
sarl
jne
scas
and
mov
rol
fwait
push
add
inc
cwtl
or
cld
clc
das
jno
pusha
cmpsl
enter
les
xchg
hlt
mov
je
cwtl
int
idiv
cs
scas
add
jmp
in
and
les
lds
jmp
dec
pop
mov
or
push
add
cmpsb
push
andb
pop
call
or
jmp
cmp
orl
ds
xchg
cmc
test
popa
aaa
mov
adc
mov
xchg
repz
mov
rcl
jno
sbb
neg
psubusb
and
mov
dec
add
fcompl
and
and
outsl
sub
pop
adc
or
call
inc
icebp
fiadds
sub
pop
inc
mov
add
fcomps
inc
insb
inc
iret
push
repz
std
mov
stos
push
das
add
ljmp
cltd
in
lea
adc
pop
addb
mov
insb
stc
push
into
out
iret
push
xor
sbb
or
ret
or
shrl
daa
mov
inc
mov
sarb
add
inc
adc
sub
loop
jmp
jecxz
adc
lock
iret
or
sub
ljmp
or
pop
arpl
repz
fwait
inc
shlb
cmp
adc
sahf
push
cmp
loop
stos
add
mov
cltd
and
repnz
jmp
scas
cmpsb
popf
adcb
xor
sub
xor
dec
jp
call
cmp
or
es
lods
jno
push
pop
dec
or
jb
mov
lahf
mov
orb
jbe
xor
push
mov
icebp
or
adc
ja
roll
inc
mov
jns
cs
shll
fs
outsl
lods
lods
push
dec
in
sub
call
push
pop
lds
add
jmp
lar
xor
xor
add
add
xor
add
inc
inc
and
cmp
jl
mov
and
pop
adc
lret
jg
pop
fwait
dec
adc
pop
js
pop
cmpsb
adc
pop
lret
sbb
jmp
mov
pop
or
mov
adc
and
fistpll
imulb
jecxz
xor
cld
insl
xchg
add
mov
sub
push
adc
aad
outsl
mov
imul
add
xchg
pop
jns
ret
bound
dec
mov
and
adc
loope
ds
mov
lret
cmpsb
push
adc
sub
inc
pusha
sbb
mov
mov
inc
cmp
nop
add
loopew
addb
jp
cmp
into
jmp
shlb
add
shlb
push
out
jnp
test
xor
dec
sbb
add
inc
or
push
pop
inc
pop
inc
pusha
ficoml
and
pop
push
mov
add
in
aas
orl
jmp
aam
pushf
je
add
pop
sub
inc
scas
push
cmpb
add
jne
mov
vmread
and
fsubrs
sbbb
lret
push
dec
pop
divl
pop
shl
sub
push
popa
neg
add
push
sbb
daa
imul
imulb
lea
and
fnstenv
int3
and
cwtl
or
imul
repz
imulb
icebp
and
sbb
out
lods
icebp
push
sbb
push
sub
or
mov
ja
and
ret
inc
or
push
mov
lret
push
imul
xor
sub
adc
push
xor
fs
enter
sub
fildll
mov
jbe
das
call
js
or
push
or
jp
notl
mov
and
mov
sub
daa
push
mov
cltd
push
jmp
cltd
inc
leave
test
pop
pop
and
gs
mov
push
mov
loop
popf
jge
inc
mov
cmp
ljmp
add
pop
mov
rolb
repnz
or
pop
sbb
stc
push
push
pop
dec
aas
push
cltd
push
xchg
imul
scas
push
adc
lret
pop
mov
dec
and
jmp
imul
in
or
rcrl
mov
icebp
jns
xor
jmp
daa
mov
push
jb
scas
sub
pop
jmp
and
sbb
jle
cmp
lahf
cmp
jle,pn
lods
fadds
or
xor
add
test
add
aad
sub
xor
clc
sub
sub
mov
jmp
sub
inc
pusha
mov
in
mov
pop
cld
out
pusha
push
mov
jl
add
mov
pusha
sbb
mov
fs
push
push
jmp
adc
int
inc
xchg
outsl
insb
push
leave
sub
scas
sub
mov
addr16
push
push
push
cmovno
add
pop
test
sbb
cmpb
repnz
and
or
cmp
pop
push
jbe
add
push
lods
in
rorl
les
jae
pop
repnz
jmp
mov
dec
jl
adc
mov
sbb
mov
pop
add
mov
push
clc
fs
inc
xor
cmp
push
add
pop
loope
mov
shll
out
xor
or
add
sti
dec
pop
hlt
cmp
pop
imul
cmp
push
gs
out
pop
and
test
and
jle
mov
data16
dec
pop
push
adc
int3
adc
push
xor
pusha
mov
push
adc
pop
push
shr
cmove
je
jecxz
out
lret
xchg
adc
xor
sub
pusha
fcomps
or
mov
cmp
cli
movb
daa
mov
cmp
xchg
push
mov
out
sub
das
and
cmp
xor
push
lahf
xorl
jmp
cmp
cs
pop
xor
dec
and
jg
push
sar
or
inc
cmp
or
pop
and
adc
mov
mov
in
mov
pop
sub
jae
sbb
push
daa
add
inc
out
inc
sub
or
add
or
push
call
push
mov
jl
xorb
fldl
jo
ret
das
adc
gs
mov
out
adc
es
mov
fmuls
cmp
jb
pop
andl
pushf
pop
sub
lret
push
addr16
xor
call
push
add
xchg
mov
dec
xchg
cmp
cli
mov
das
int
movsl
loope
cltd
dec
movsb
dec
nop
or
pushl
xchg
push
push
sar
popl
in
inc
shlb
sub
jb
lcall
repz
or
pop
jecxz
in
ret
mov
cmc
sub
popf
jnp
repz
sti
mov
cmpl
leave
sub
jnp
mov
cwtl
xor
popf
orl
out
das
pop
cmp
test
das
xchg
arpl
mov
adc
cmp
shlb
xor
scas
cltd
or
cmp
sbb
adc
sub
xchg
mov
mov
adc
mov
sarb
std
fcomip
jbe
dec
pop
hlt
outsl
mov
pop
aaa
inc
sub
push
pop
jg
adc
lods
data16
jno
es
lcall
add
mov
xor
dec
and
jo
mov
jnp
call
fcompl
fnstcw
mov
nop
push
adc
xor
insl
cs
inc
push
cld
inc
add
xor
test
xchg
sub
int
or
movsb
lock
fldenv
daa
shr
adc
xchg
pusha
mov
clc
push
sbb
ret
sbb
adc
aas
inc
inc
lods
loopnew
add
or
and
xchg
and
insl
sbb
add
inc
mov
mov
or
or
pop
leave
or
loope
loopne
push
or
fiaddl
add
or
pop
jg
in
mov
mov
pop
rcll
push
pusha
xchg
ret
adc
cmc
cmp
sub
jno
push
sbb
and
jne
dec
add
pop
push
in
mov
out
cmp
dec
fisttpll
or
or
or
mov
pop
add
inc
divl
iret
or
cmpsl
inc
aad
xchg
gs
inc
loope
dec
test
pop
stos
sbb
sbb
sahf
and
and
pop
mov
sbb
push
push
orb
stc
or
or
adc
sub
test
sub
adc
mov
pop
push
cmpb
rolb
pushf
add
sbb
dec
int3
jge
push
inc
sbb
xchg
popf
lods
jl
lods
in
or
add
adc
data16
jb
and
jecxz
rcl
inc
mov
or
sbb
push
xchg
out
pop
ds
xor
pop
xor
sbb
out
lret
scas
cmc
push
add
cli
nop
and
inc
fwait
cs
loopne
pop
mov
adc
push
ss
inc
rorl
int
jle
lret
mov
add
push
jl
jle
je
adc
pop
jmp
popa
mov
xchg
and
cld
daa
push
pop
pop
jo
xchg
cltd
in
adc
jo
sbb
mov
addb
daa
nop
shll
rcrb
ret
ds
lods
xor
pop
jge
mov
pushf
loope
or
sahf
sti
sub
pop
lea
sar
test
add
push
mov
rcl
push
mov
xor
int3
pop
inc
outsb
hlt
adc
hlt
inc
notl
sub
in
push
jmp
fnsave
ret
jle
cmpsl
cld
mov
dec
lea
je
jo
pop
loopne
sub
mov
xor
popf
decl
mov
das
loopne
xchg
js
or
push
dec
sbb
and
gs
loop
adc
clc
push
in
jae
test
and
out
xchg
jecxz
xchg
iret
pop
sub
loop
loopne
and
movsb
shr
add
into
lods
pop
nop
lret
and
shlb
stos
pop
sub
loopne
inc
popf
jns
jmp
push
sbb
inc
jp
add
and
lods
add
ret
cmc
lods
adc
jle
pushf
adc
sub
jne
icebp
or
or
adc
adc
lods
repnz
push
mov
mov
add
ret
dec
es
adc
pop
mov
or
jnp
adc
mov
pusha
add
mov
loopne
push
jmp
and
mov
movsb
push
popa
stc
pop
push
popf
and
ss
scas
xor
sub
push
mov
in
and
pusha
rclb
stc
das
clc
inc
pop
pop
icebp
aas
adc
cmp
lods
nop
in
loop
aam
add
add
sub
mov
pop
aas
fs
mov
nop
lods
jge
es
mov
adc
inc
lock
mov
ljmp
push
mov
adc
cwtl
fnstcw
dec
int3
pop
push
xchg
clc
xchg
cmp
mulb
sub
sbb
aas
jle
dec
pop
mov
lea
cmp
sub
aam
aas
add
mov
inc
movsl
sbb
jle
loop
je
ljmp
cwtl
push
repnz
cmp
jecxz
add
add
out
mov
insl
and
inc
mov
pop
fucomip
mov
sub
mov
pop
shl
mov
test
or
frstor
pop
cmp
test
stc
or
or
inc
insb
pop
out
movsb
adc
adc
push
rdmsr
jnp
jle
enter
add
or
aas
pop
loopne
lcall
sub
mov
add
push
stos
mov
or
fmull
in
nop
aad
fisubs
pusha
shrl
add
sbb
gs
jle
sub
ret
data16
sti
je
lds
fmuls
ret
pop
scas
pop
or
out
jmp
lret
test
jl
iret
int3
in
mov
and
dec
push
lods
adc
mov
rcll
cli
icebp
inc
jnp
scas
cwtl
pop
outsl
pop
js
rcll
scas
idivb
xchg
mov
outsl
lods
sbb
out
lret
ljmp
rclb
mov
cwtl
pop
loopne
andb
lock
xor
mov
js
jmp
mov
daa
or
push
loopne
adc
mov
dec
add
dec
mov
pop
lock
jmp
test
mov
out
pop
ficoms
mov
xchg
flds
dec
test
mov
out
clc
xchg
sub
cmp
test
push
push
pop
inc
shll
add
neg
or
or
and
sbbl
inc
or
jmp
jns
mov
inc
pop
movsl
sub
out
lahf
or
jne
nop
mov
xor
xchg
pop
cmp
mov
ss
das
mov
cmp
push
test
dec
rolb
jg
std
dec
cmp
adc
jbe
mov
arpl
jae
pop
sbb
inc
or
jbe
push
xor
pop
push
dec
push
push
sub
push
adc
jmp
bound
pop
push
pusha
out
or
pop
jmp
or
mov
je
mov
bound
or
mov
rcrb
or
mov
pop
lcall
fs
sahf
rclb
pop
es
jo,pt
enter
sub
stc
mov
jae
pop
mov
or
cli
rol
std
or
jl
arpl
loop
push
cmpsl
sbb
xchg
clc
hlt
xchg
jo
scas
pop
inc
cltd
cmp
sahf
xchg
mov
cmp
jl
out
jbe
and
adc
lods
add
pop
icebp
jns
or
mov
les
scas
test
test
popa
sbb
or
mov
mov
inc
insl
and
insb
jmp
movhlps
xchg
push
out
push
pop
movl
faddl
sti
loope
in
pop
add
mov
test
inc
cmp
jne
mov
dec
xchg
fdivl
fcomi
dec
cld
jle
cmc
cmpsl
pusha
xchg
call
cmpsb
negl
addr16
jbe
aas
pop
pop
pop
loopne
cltd
lahf
fldt
mov
in
mov
pusha
push
push
push
mov
inc
push
dec
xor
fisubl
push
pop
pop
xor
xchg
aad
or
adc
movsb
push
fs
dec
jmp
jae
sub
or
hlt
imul
dec
popa
jmp
outsb
popa
test
adc
mov
or
gs
jo
pop
jae
sysret
push
mov
daa
fstps
lock
ret
cli
push
or
jmp
insl
jne
adc
fdivrl
add
stos
fiaddl
pop
push
rclb
loop
xchg
add
sbb
xchg
dec
in
orb
jle
xchg
sarl
shll
push
iret
mov
sub
dec
mov
sbb
mov
nop
or
dec
sub
cmpsl
add
mov
sub
negl
pop
mov
push
imul
push
sbb
sub
and
mov
lock
test
andb
dec
push
add
adc
mov
js
jg,pt
leave
repz
xchg
mov
nop
push
or
pop
fcoml
cmp
add
leave
push
sbb
lahf
and
aaa
int3
mov
xor
xor
xor
hlt
sbbb
mov
in
sub
add
outsb
push
and
idivl
or
leave
add
jnp
xchg
fcmovu
inc
lret
shl
aas
lods
or
das
cmp
mov
pop
fldcw
pop
push
or
clc
mov
mov
jp
gs
dec
inc
push
icebp
sbbb
mov
dec
mov
or
fcoml
adc
clc
pop
in
cmp
mov
jbe
pop
mov
cmp
ljmp
in
cmp
leave
and
add
mov
nop
mov
push
outsl
mov
push
mov
ficoml
sbb
xor
rorb
push
in
or
lcall
mov
push
repz
dec
test
scas
xor
shll
fisttpll
adc
pop
sahf
rcll
cmp
stc
fs
sbbl
dec
lret
adc
push
mov
jne
das
push
pop
jbe
clc
inc
jo
xor
or
fwait
pop
jns
add
incb
mull
popa
push
cmpsb
push
push
mov
adc
imul
pop
fbld
jmp
aas
jo
ror
inc
fs
mov
jnp
xor
jle
fiadds
cmp
jmp
cmp
adc
dec
cmp
xchg
mov
sti
sarl
jg
xor
add
push
lods
push
mov
pop
mov
push
cmc
pop
lret
mov
es
packsswb
lock
pop
aad
bound
mov
add
mov
xchg
push
test
addr16
in
mov
adc
sub
out
punpckhwd
fldl
pop
xchg
loop
loop
popa
daa
mov
es
outsl
mov
jl
and
adc
sub
adc
and
test
idivl
or
mov
out
fcompl
daa
push
loopne
insb
jae
out
lock
xor
cmp
and
add
outsl
fmull
stos
push
dec
or
stos
stc
fistpll
clc
dec
nop
sti
add
mov
sub
pushf
push
and
ret
mov
sub
mov
pop
sbb
and
cmp
mov
cmp
addb
in
jl
mov
xchg
lock
stos
mov
aad
push
out
cmp
lahf
aam
jnp
js
clc
je
aaa
push
mov
jb
data16
and
pop
fcomps
sub
sbb
inc
mov
pop
sbb
imul
data16
pop
or
or
test
add
ljmp
bnd
lock
push
test
cmp
mov
lcall
pop
roll
and
sub
stc
adc
or
cmp
jecxz
cmp
pop
and
pop
out
mov
xchg
lret
imul
arpl
pop
movb
aad
push
xor
fstps
jbe
scas
icebp
mov
pop
push
sub
jmp
ret
or
jmp
mov
mov
add
cmp
inc
jno
pop
adc
sub
pop
xor
sbb
sbb
ljmp
test
mov
neg
pop
pop
or
aas
aas
rorl
adc
sub
imul
icebp
and
das
mov
xor
into
imul
jmp
and
pop
or
push
jnp
adc
pop
or
mov
pop
outsl
and
sub
xchg
inc
cmpsb
pusha
jecxz
jae
dec
pop
mov
or
ss
js
fmuls
jmp
sub
push
jl
xchg
push
iret
jmp
add
cmp
pop
and
ret
divl
mov
inc
sub
pop
inc
insb
push
jmp
das
aaa
ds
push
in
jmp
sub
lret
ljmp
sarb
and
jge
pop
hlt
rcrl
mov
add
push
popa
pop
aas
jmp
mov
pop
gs
mov
adc
das
push
push
add
nop
frstor
inc
adc
push
dec
mov
jb
das
pop
lcall
inc
js
xor
lods
push
mov
ret
shll
das
into
lret
and
das
push
and
push
js
xchg
jns
cli
jb
leave
mov
jmp
inc
lods
dec
and
and
xchg
hlt
gs
loopne
mov
stc
jne
es
cmp
xor
add
shll
jg
mov
sub
dec
mov
lcall
data16
je
ret
subb
dec
jp
sbb
push
sub
jmp
cmc
stos
iret
outsb
pop
scas
cmp
jmp
mov
jl
mov
mov
mov
sub
shl
js
adc
inc
orb
mov
jb
test
mov
pop
jae
jecxz
cmp
dec
pop
jbe
push
jg
aas
dec
pusha
sub
test
repnz
push
jmp
mov
cmp
inc
mov
mov
jb
pop
fcmovu
idiv
es
and
test
andb
push
leave
pusha
bound
fimull
lret
adc
imul
push
pop
ret
fsubs
or
mov
pop
add
sbb
jnp
sbbl
add
sbb
mov
xorb
mov
icebp
push
sub
fcoms
arpl
loope
scas
push
pop
shrb
jmp
stos
xor
in
in
mov
dec
add
lods
push
lds
push
inc
shrb
in
adc
stos
cmpsb
inc
xchg
mov
pop
sar
push
cwtl
push
lods
icebp
or
mov
repz
sti
mov
insl
fidivrl
xor
lods
not
jb
aaa
add
adcb
dec
push
xor
pop
outsl
lcall
add
mov
out
or
jg
inc
cmp
dec
dec
outsl
inc
int3
mov
mov
test
jmp
push
push
and
das
fnsave
negl
pop
xchg
mov
mov
mov
dec
inc
lods
lods
shll
cltd
cmp
xlat
mov
neg
and
cmpsb
ds
loop
pusha
mov
dec
pusha
xor
clc
mov
dec
leave
into
xchg
and
add
rorl
cs
daa
mov
in
or
popf
pop
xchg
sbb
pop
and
rorl
dec
arpl
icebp
push
mov
inc
and
and
addr16
rclb
sarl
mov
push
mov
js
std
xchg
movsl
leave
xchg
sahf
movsl
push
add
pop
lock
sbb
cmp
inc
int
add
cltd
fadd
mov
pop
es
add
fmul
and
xchg
fstl
xor
inc
add
lock
fdivs
or
pop
pop
adc
xor
leave
pop
and
lret
add
push
das
or
clc
ljmp
sbb
push
pusha
sbb
push
and
sbb
pusha
mov
mov
mov
test
or
das
sarb
add
jnp
das
aam
jae
cmpb
add
jns
inc
sub
fucomi
or
inc
push
xor
lods
arpl
mov
adc
int
push
mov
neg
xchg
rolb
push
shlb
out
pop
decl
frstor
and
add
fmull
ficompl
push
ljmp
or
jno
push
pop
push
je
mov
outsb
sbb
sub
adc
test
xchg
rclb
mov
pop
and
popf
lret
mov
pop
mov
xchg
sbb
and
add
cmp
cmpsb
pop
mov
or
xchg
adc
push
jp
jge
dec
mov
int3
popf
push
into
cmp
add
loop
das
stos
jle
add
int
iret
sub
xor
push
imulb
sbbl
push
dec
pop
cmp
dec
or
pop
xlat
add
jns
push
cmpsl
jl
or
icebp
jmp
js
movsl
mov
pop
dec
test
mov
popf
repnz
and
inc
jecxz
bound
ret
sub
mov
stos
dec
mov
cmp
pop
into
or
test
cmpsl
add
or
push
or
push
mov
pop
clc
jp,pn
jnp
pop
clc
fistpl
and
loop
int3
jbe
add
pop
sbb
rcrl
add
pop
push
bound
cmc
test
gs
cli
jmp
pop
jl
popf
push
inc
mov
push
icebp
loope
mov
or
jmp
subps
dec
mov
mov
es
cmp
outsb
xchg
mov
adc
and
mov
xchg
aad
sub
mov
push
or
insb
movsl
push
xchg
scas
mov
sbb
adc
push
cwtl
rcrb
mov
cwtl
xor
sbb
int
jl
adc
cs
daa
pop
mov
lock
stos
repz
xchg
stos
jno
mov
add
clc
hlt
lds
dec
sub
pop
dec
lods
das
gs
scas
xor
pusha
dec
popf
mov
xchg
push
jns
or
mov
sbb
xchg
and
pop
aaa
sti
xor
mov
cld
sub
mov
mov
mov
jae
pop
mov
dec
movsb
inc
stc
inc
mov
mov
jmp
orl
jns
jae
jne
movsl
mov
push
jge
xlat
adc
jae
ficompl
iret
arpl
jmp
or
xor
aad
repnz
mov
sahf
add
push
adc
cwtl
nop
mov
mov
movl
jnp
aad
orl
or
pop
popf
notb
nop
jae
add
xchg
jb
lock
mov
roll
pop
xor
mov
add
pop
pushf
jae
imul
xor
push
inc
in
xchg
cld
dec
xchg
flds
fsubrs
lcall
nop
or
add
fs
and
fcoml
pop
xor
mov
mov
ret
les
popf
push
jle
in
addr16
push
ljmp
jmp
scas
jo
pop
jmp
fs
mov
int3
inc
xor
mov
jno
je
pop
cwtl
pop
repz
dec
stos
xor
and
flds
inc
jmp
inc
pop
shl
in
xchg
popa
mov
adc
enter
lock
imul
jne
jns
pop
std
bound
nop
pop
mov
in
daa
scas
sbb
ret
inc
add
push
enter
setne
cmp
sub
push
sbb
orl
stc
imul
sarl
outsb
xor
roll
cs
das
cmp
mov
rcl
push
push
jl
push
cli
pop
or
imul
ror
add
and
push
push
dec
out
inc
cmp
ret
xchg
adc
mov
jne
pusha
push
pop
mov
sbb
lock
jmp
or
addb
xor
add
nop
fs
lret
push
xchg
lock
mov
pop
mov
daa
pop
scas
lret
xor
pusha
jo
adcl
push
mov
cmc
jl
jmp
mov
stos
mov
adc
push
push
push
push
cmp
insb
out
and
jl
cmp
xor
xor
xorl
cmp
and
sbb
or
ret
jmp
xchg
mov
int
and
insb
mov
xchg
jb
or
jmp
rcll
sbb
ljmp
or
mov
bound
addb
call
cmp
sbb
shrb
mov
pop
js
daa
push
push
aad
cmp
cmp
add
xchg
pop
push
hlt
pusha
inc
outsl
sub
pop
fwait
mov
scas
cmp
or
pop
ja
imul
ss
add
hlt
jl
nop
xchg
mov
xchg
jno
mov
adc
stos
cmpsb
push
or
xchg
push
pop
bound
adc
push
call
pusha
inc
cmpsb
cmp
cmp
sbb
xor
adc
sub
inc
jg
jo
cmp
xchg
cmpl
sarl
sbb
das
jmp
idivl
nop
dec
jecxz
testb
xorps
iret
jp
push
xchg
add
std
jle
mov
add
or
jns
and
testl
imul
mov
push
sub
sub
add
and
cmp
add
sbb
lahf
sub
mov
sbbb
aas
cmp
ljmp
and
and
pushf
pop
inc
mov
scas
popf
push
xchg
ret
inc
repz
insb
add
or
jno
mov
mov
fcoms
inc
fsubr
push
xchg
bound
std
mov
inc
or
or
push
jmp
repz
or
rcrb
mov
adc
pop
dec
jge
test
addl
stc
ss
xlat
mov
daa
push
addl
daa
rolb
sahf
jmp
mov
aam
dec
sbb
mov
inc
ficompl
std
loope
or
push
pushl
xchg
popa
bound
fmuls
ret
hlt
inc
dec
xchg
in
sbbl
cmp
loopne
xchg
push
cld
loopne
jecxz
test
sub
jbe
xchg
pop
iret
inc
test
stc
cmp
add
jg
mov
adc
lret
or
xor
lds
cmc
and
insl
arpl
cli
jmp
stc
push
cmpl
push
jae
push
adc
adc
mov
inc
push
je
pop
sarl
es
push
push
and
push
pushf
jg
inc
ret
ja
xchg
sub
movsl
push
mov
test
adc
xor
jae
inc
mov
out
inc
jnp
pusha
jns
jae
into
push
das
or
jbe
ret
int3
inc
or
push
bound
push
xor
sub
test
mov
jns
ja
add
mov
push
jns
mov
icebp
and
pop
dec
push
cld
xor
shrb
fucomp
dec
mov
jle
inc
mov
scas
iret
cmpl
or
test
xchg
jmp
mov
sahf
push
rcrb
push
lret
cwtl
xchg
push
int3
xchg
repnz
dec
or
pop
cld
leave
jne
fcmovb
pop
mov
mov
or
dec
outsb
pop
popf
gs
and
mov
aam
xorb
pusha
inc
into
fs
push
jae
push
push
rclb
pop
mov
push
push
add
sub
add
call
and
lret
or
or
pop
jbe
pop
adc
sub
or
lock
fidivrl
adc
lock
mov
adc
fwait
pop
lods
pop
dec
xor
ljmp
mov
mov
sub
mov
jns
dec
js
push
mov
or
inc
cmp
or
dec
mov
inc
adcl
inc
sbb
insb
lcall
mov
cmc
cltd
cmp
lock
push
sbbb
xchg
outsb
lahf
push
stos
inc
aad
jecxz
xor
inc
in
and
neg
push
sub
mov
push
rcr
scas
hlt
test
pop
adcl
adc
mov
adc
scas
mov
add
and
and
adcl
data16
repnz
inc
call
loopne
cmp
adc
jp
pop
insb
in
jl
or
mov
int3
aas
bound
sbbb
out
jae
out
and
test
add
in
inc
movsb
jmp
addr16
sub
ror
fld
add
or
inc
test
gs
push
pop
xor
jl
loope
imulb
jp
dec
jl
popf
loop
fnsave
testl
add
jmp
insl
cltd
scas
mov
push
jmp
repz
jmp
mov
inc
xor
add
or
sub
pusha
pop
or
cmp
test
out
stos
xchg
and
das
add
inc
jbe
pop
into
sahf
xchg
mov
iretw
jmp
adc
xchg
or
popf
and
ds
pusha
sub
dec
out
jl
lret
sbb
push
out
mov
pusha
push
dec
sbb
xchg
and
cwtl
xchg
cltd
out
jnp
mov
icebp
cmpsl
jae
cmp
mov
xor
out
int3
jo
dec
or
aam
aaa
les
push
or
dec
aas
push
mov
inc
or
add
inc
ret
jmp
add
xchg
jmp
fadds
shlb
sarb
fwait
dec
mov
stos
psrad
popf
test
sub
adc
sbbb
fnsave
sub
ret
push
mov
or
fs
push
push
jo
popl
adc
or
push
cwtl
or
jmp
xchg
and
lret
jecxz
cwtl
mov
inc
pop
xor
data16
aas
add
shll
and
cmpsl
pop
mov
xchg
mov
in
outsl
jmp
test
cli
pop
push
loop
mov
sbb
add
mov
xor
add
arpl
add
adcb
rcrb
in
mov
xor
aam
jmp
push
and
shll
mov
mov
icebp
xchg
and
jne
or
pop
pop
dec
push
les
or
add
dec
cmpsl
push
add
or
adc
loopne
jmp
das
sti
or
hlt
add
sbbl
lahf
stos
xchg
nop
mov
mov
cmp
testb
outsl
push
or
xlat
lret
fstpl
push
add
push
push
nop
dec
das
sub
and
pop
fidivrs
repnz
pop
sub
pop
cmc
jl
pop
xor
adc
inc
ljmp
int3
sub
ret
or
jb
adc
pop
push
enter
sbb
orb
shrb
loopne
daa
xor
nop
mov
scas
add
mov
ret
mov
lock
push
mov
dec
stos
jbe
inc
cmp
push
aaa
std
pop
sbb
pop
jg
lods
add
dec
jnp
lds
cmpl
test
aad
in
jecxz
inc
fnop
pusha
jl
or
fistps
loopne
mov
pop
push
add
cmpb
aad
mov
loopne
aad
rcrb
mov
fidivs
mov
es
jmp
das
test
test
push
adc
inc
mov
push
jo
push
mov
push
loop
fcomp
jmp
sub
push
movsl
jbe
imul
sbb
xor
jp
mov
ret
dec
call
push
xchg
cmp
adc
mov
fwait
and
add
sub
sti
ret
pop
jne
mov
mov
cmp
dec
clc
loop
sar
repnz
mov
add
xor
sbbb
repz
test
sub
sub
lods
pop
clc
push
lea
and
or
and
mov
icebp
pop
je
enter
out
rcl
in
clc
outsb
pop
pop
jmp
jle
outsl
add
and
aaa
and
jmp
push
call
imul
imul
or
mov
or
add
cmp
mov
in
push
popa
dec
ret
sbb
xchg
dec
or
cmp
pop
adc
stos
int3
sbb
push
xchg
xchg
push
icebp
pop
imul
mov
cmc
bound
pop
pop
jo
add
pop
pop
xchg
pop
aaa
mov
out
popa
xchg
aaa
xlat
ret
mov
mov
dec
mov
stos
sar
sub
cmpsb
dec
mov
mov
push
pop
pop
adc
cmp
mov
xchg
push
mov
and
loop
sub
pushf
rcrb
pushl
jp
sub
lods
fistps
lods
shrl
add
pop
push
cltd
test
mov
inc
cmp
push
jbe
inc
pop
lret
add
repnz
in
test
sbb
nop
mov
sub
jg
mov
push
cmp
jle
dec
pop
ja
js
test
fdivrl
sbb
icebp
in
jbe
push
stc
pop
adc
je
push
dec
mov
test
lods
mov
add
rclb
gs
ds
push
js
mov
testl
sti
repz
mov
push
ja
fimuls
push
adc
push
stc
stc
add
scas
decl
cmp
xor
xchg
sub
or
xchg
and
sub
push
mov
clc
or
scas
sub
enter
rcrl
pusha
dec
push
xchg
aam
add
pushf
ljmp
cmpsb
in
ja
scas
mov
add
gs
std
in
mov
mov
push
in
dec
push
pop
inc
es
xor
rcrl
jmp
mov
pop
lods
jb
rcrb
xor
sarb
test
push
mov
decb
sub
dec
mov
cli
mov
hlt
cmp
jmp
xchg
lret
divps
mov
subb
mov
pop
xchg
pop
lcall
shr
andb
pop
add
test
sub
pop
xchg
call
testl
paddusw
sub
imul
add
fldenv
fistps
mov
xor
sbb
scas
pusha
cmp
push
mov
add
or
mov
mov
inc
xor
mov
sbb
push
push
iret
push
add
push
pop
mov
sub
dec
std
ljmp
xor
mov
and
ss
je
fisttps
cmp
enter
ds
cmp
push
mov
mov
in
mov
daa
lds
mov
cmp
mov
mov
dec
sbb
dec
jo
pop
out
mov
test
add
xor
icebp
jmp
or
push
or
inc
and
jb
sbb
ror
daa
xor
jb
sub
jmp
sub
sub
shl
adc
push
lret
xor
jo
mov
sub
mov
mov
inc
sbb
adc
aad
mov
sti
jbe
xchg
aaa
das
negb
and
jl
jmp
pop
dec
inc
cmpb
dec
loope
adc
xor
push
test
mov
fcoml
fstl
sub
push
push
inc
adc
test
xor
mulb
dec
xchg
repz
mov
cli
rcll
scas
cmp
cmp
sub
push
pop
fnsave
adc
call
test
add
push
lock
add
loopne
out
mov
fistps
lods
inc
mov
dec
shr
cmpsb
insb
xor
cltd
sbb
das
test
jp
jne
xchg
outsb
mov
inc
push
inc
mov
fs
addr16
dec
or
mov
lcall
mov
inc
ret
lret
pushl
push
scas
add
adc
mov
and
imul
lock
or
jne
xchg
test
pop
jbe
mov
test
or
push
jno
rorl
cmpsb
les
xchg
or
add
popa
mov
push
jmp
pop
xchg
mov
mov
and
inc
push
out
dec
sub
mov
into
push
xchg
push
popa
add
out
jp
test
paddb
pop
mov
jbe
lret
mov
dec
mov
jmp
notb
adc
pop
in
mov
sahf
fists
xor
and
inc
add
dec
pop
mov
mov
repz
add
movb
aaa
sub
inc
sarb
data16
push
sbb
add
loopne
sti
mov
sub
shrl
add
add
xor
sub
repz
cwtl
pusha
cmp
daa
jne
test
add
or
add
aaa
cli
or
fadds
sbb
addr16
fisubrl
add
adc
push
jmp
add
aaa
and
pop
sub
jge
pop
mov
mov
stos
cmp
xor
aad
incl
and
gs
mov
jno
add
js
mov
adc
sbb
movsl
adc
fcompl
mov
fadds
addl
mov
scas
sub
pusha
and
sbb
mov
out
jo
push
lock
orb
aam
addr16
xchg
jns
push
mov
jmp
loop
adc
sub
ljmp
mov
and
sub
mov
testl
fldl
pop
not
popf
clc
mov
popf
jmp
testl
xchg
std
xchg
stos
add
insl
or
inc
or
or
jno
cmpsl
adc
pop
jmp
mov
mov
mov
icebp
imul
cs
popa
sub
xchg
xchg
in
and
jno
adc
cwtl
mov
loop
push
cld
mov
stc
jmp
cmpb
xor
mov
dec
inc
dec
jne
adc
out
inc
repz
ret
xlat
out
cmc
fcmovnb
lret
adc
xor
sbb
sbb
push
add
pop
push
pop
hlt
js
mov
fstpl
icebp
shrb
mov
cld
cmc
or
out
push
shlb
sbb
and
or
push
fsts
sbb
ret
pop
cs
jl
call
fistl
inc
mov
mov
stos
xchg
sbb
js
test
stos
ret
jne
mov
push
or
fcomip
pop
les
aam
push
clc
mov
aas
xor
xor
jmp
stc
es
pop
add
push
rcll
inc
push
jge
psubsw
push
rolb
cmc
xchg
jnp
sahf
sbb
push
mov
loope
jns
push
dec
std
jmp
xorb
lret
adc
sbb
ljmp
jge
sbb
jmp
dec
negl
cmp
and
call
int3
ds
into
imul
popf
add
xor
lret
scas
cmp
sbb
or
gs
daa
sub
es
or
and
into
mov
dec
or
lsl
add
call
adc
aam
scas
mov
dec
cmpsl
imul
xor
mov
cli
mov
pop
mov
addr16
sbb
sbbb
cltd
fists
jge
movsl
push
xor
push
mov
mov
pop
sub
popf
sahf
int
push
out
and
jp
imul
xchg
or
push
push
pop
or
jmp
sub
and
and
xchg
mov
lock
pop
cmc
pop
push
adc
insl
sub
jle
adc
loopne
out
sarb
rcrl
pop
add
jae
jmp
or
cmpb
push
fidivrs
pop
mov
dec
cld
lds
cld
aaa
sub
lods
fwait
cmpsl
jb
orb
add
neg
xor
sub
add
dec
jno
es
enter
call
stc
sub
xor
fadds
jecxz
addb
cmp
in
sub
push
int
scas
xchg
stos
mov
pop
dec
ja
ljmp
popf
mov
es
std
pop
jne
into
and
or
xchg
aam
push
sarl
call
lret
out
or
add
movsb
mov
push
and
ljmp
adc
or
icebp
sub
movsb
adc
enter
fwait
adc
ucomiss
or
cmp
insb
sub
pop
mov
mov
lret
pop
jo
push
push
jmp
test
cmp
push
mov
jae
repnz
pop
mov
push
lahf
or
sub
aad
movl
jno
test
or
arpl
or
inc
lret
not
add
add
dec
je
push
mov
clc
adc
sub
add
pushf
and
outsb
add
inc
mov
pop
mov
rclb
imul
mov
in
add
in
cld
out
fdivr
lock
or
loope
pop
shll
mov
iret
adc
mov
and
fldl2t
out
mov
nop
inc
jmp
pop
pop
aad
loopne
dec
push
pop
sub
adc
xchg
xor
orl
js
test
push
and
outsl
dec
popf
jae
xor
mov
data16
jo
lret
jge
add
imul
popa
insb
or
xor
arpl
out
jecxz
dec
sbb
pusha
cmp
or
imul
xchg
xor
cmp
out
leave
clc
xchg
mov
jp
cs
jmp
pop
ja
testl
in
mov
stc
fwait
imul
lret
and
push
mov
pop
sbb
sarl
inc
cmp
gs
cmpsb
pop
mov
add
jmp
push
cmp
sbb
sbb
stos
leave
div
jle
pop
jmp
xor
push
movsl
add
sub
in
aam
push
add
inc
idivb
out
jl
sub
add
jmp
out
pop
notl
hlt
sbb
sbb
jle
lahf
push
sarl
push
test
es
sbb
add
outsb
cld
out
jp
pop
jno
mov
fs
xchg
dec
pop
fstpl
jmp
jge
cli
adc
mov
or
mov
mov
out
and
or
add
cmp
pop
in
and
arpl
aaa
rclb
stc
shrl
xor
in
sub
cmp
mov
mov
stos
mov
dec
scas
jl
jmp
les
sub
jnp
xorb
xchg
adc
and
icebp
lds
push
cmp
cli
stos
add
mulb
sbbb
jmp
add
stos
rcl
jmp
ljmp
bound
dec
mov
cmp
stos
es
mov
mov
stc
mov
dec
cmpsb
jb
pusha
ds
stos
sbb
popf
push
aad
mov
adc
jp
xchg
test
sub
scas
pop
test
jmp
pop
inc
push
adc
or
cmp
test
pop
pop
int3
stos
cmpsl
ljmp
push
mov
leave
xchg
addb
xor
pop
push
cmc
and
iret
mov
mov
push
lret
notb
lds
inc
test
insb
add
popa
fsubr
jp
jno
sub
mov
sub
or
inc
fdivrs
xor
js
pop
int
pop
dec
push
pusha
in
or
adc
add
jle
ja
or
aam
ret
pop
fisttpll
push
das
or
test
adc
pusha
pop
mov
bnd
pusha
xchg
sbb
imul
and
cmpl
jp
and
lds
jmp
dec
xchg
into
mov
jne
xchg
cmp
or
scas
es
adc
mov
push
test
mov
pop
mov
out
adc
cld
sti
lds
add
lds
pop
push
push
gs
hlt
outsb
cmp
les
test
pop
jmp
shrb
in
in
rorb
sbb
pop
out
shrb
xor
cmp
push
push
lds
test
cmpsl
mov
pop
xorb
sbb
pop
out
orl
cltd
or
in
test
sub
les
out
call
or
rcl
or
inc
cmp
push
ss
and
xchg
inc
jbe
fmuls
inc
or
inc
shl
push
popf
clc
mov
roll
sub
sub
lahf
mov
or
mov
cmp
call
push
outsb
xchg
fmull
push
imul
pop
cmp
faddp
dec
sbb
mov
cmp
setb
shrb
les
push
mov
xrelease
ret
push
dec
pushf
das
adc
mov
jae
lds
sub
dec
test
ja
pop
mov
or
lret
mov
sbb
jno
lods
ss
aam
sub
or
adc
jmp
add
nop
jmp
sbb
das
dec
pushf
and
mov
inc
sbb
dec
dec
cld
inc
push
stc
test
dec
adc
pop
push
mov
pop
cmpsb
or
push
out
add
clc
push
ds
outsl
hlt
cmp
gs
or
scas
pop
ret
jb
je
push
push
mov
mov
and
or
std
orl
jl
notb
pxor
sub
jl
test
sub
sarb
cmp
in
test
mov
shrl
inc
sbb
and
stos
shl
mov
int
es
cmc
dec
mov
mov
not
inc
jge
mov
sub
loopne
lods
jns
dec
es
mov
cmp
aaa
or
inc
daa
push
test
or
push
adc
mov
xor
jnp
adc
or
sbb
std
ds
into
fstl
pop
cmp
xor
and
ret
push
lds
or
fsts
pusha
push
push
dec
in
push
push
incb
mov
pop
mulb
sub
cmc
mov
mov
pop
jmp
sbb
js
rcrb
mov
inc
das
jmp
adc
jb
xor
fistpl
pop
mov
shlb
mov
or
or
sbb
add
or
and
adc
cltd
mov
daa
dec
cmp
push
or
and
mov
mov
dec
add
iret
dec
adc
into
mov
lahf
ds
test
adc
mov
stos
add
out
ds
lea
je
test
dec
mov
add
daa
dec
jl
mov
fnsave
dec
ja
inc
out
popa
int
shlb
push
inc
nop
mov
jp
ds
push
dec
mov
push
hlt
movsl
dec
es
std
dec
add
jg
inc
push
add
lods
imul
xchg
aam
std
loope
gs
and
add
add
sub
or
mov
stos
cmp
jnp
fucomi
sub
dec
jle
inc
mov
pusha
pop
push
jg
jno
je
mov
aaa
mov
xor
pop
pusha
push
jmp
sub
repnz
push
dec
jmp
leave
icebp
bound
dec
push
push
push
mov
xchg
loope
mov
adc
dec
pop
mov
inc
push
pop
xchg
dec
js
adc
mov
cmc
inc
inc
xchg
mov
out
mov
push
pop
sbb
andl
fsubrs
test
mov
shlb
add
xchg
push
sub
pop
add
xchg
xor
xor
lock
mov
mov
fdivl
ss
into
cmp
test
mov
mov
cld
incl
xchg
ja
mov
mov
cli
into
movsl
adc
in
xchg
sti
sbb
inc
dec
sbb
sbb
mov
lcall
add
xor
fsubs
mov
imul
add
xor
rorb
xchg
mov
ja
xor
mov
xchg
inc
xor
sbb
pop
call
mov
orb
js
sub
imul
adc
push
mov
and
orb
jns
or
mov
xor
inc
push
push
adc
inc
ds
sbb
movsb
fimull
fwait
insl
or
rolb
mov
into
push
sbb
das
cli
pop
and
push
jmp
push
add
imul
fidivrl
cmp
xchg
pop
dec
and
mov
xchg
not
or
or
ss
inc
ja
addr16
add
push
mov
cli
dec
aam
and
in
push
adc
push
in
and
xor
pop
lock
mov
adc
dec
lods
push
loope
popa
push
mov
andl
xor
push
add
movsb
adc
sub
lret
xchg
inc
mov
lret
loope
daa
ret
and
jmp
adc
pop
bound
gs
sahf
fwait
dec
push
mov
cmp
addr16
in
mov
pusha
push
push
push
push
into
in
pop
mov
adc
jge
je
ljmp
shl
jns
jmp
sti
lcall
sub
cmp
ret
stc
add
imul
inc
shr
repnz
test
push
add
dec
xchg
les
imul
cmpsl
imul
mov
pop
jge
push
shl
fwait
pop
popa
pop
and
int
pop
std
mov
inc
mov
dec
mov
xchg
or
mov
arpl
jmp
push
or
repz
mov
outsb
push
mov
jmp
pop
and
ret
pop
in
jno
adc
jl
fs
mov
out
or
pop
sbb
stc
into
xchg
cld
jg
mov
aaa
inc
xlat
lret
or
cmp
pusha
int
mov
test
xlat
int
cld
cwtl
mov
push
sbbb
xchg
jl
data16
les
pop
decb
scas
enter
std
mov
hlt
rorb
pushf
sub
adc
popa
ficoms
scas
pusha
add
addr16
mov
jmp
jge
enter
aad
rcll
ds
fdivrs
add
jg
inc
adc
addb
jb
xchg
push
data16
or
sub
cmp
pop
and
jne
push
enter
or
ds
daa
push
loop
push
inc
jmp
sarb
ljmp
adc
ljmp
cmpb
and
cmc
call
inc
and
cmp
loope
inc
imul
les
subl
add
sub
and
inc
pop
das
add
xor
sub
xchg
shll
and
inc
add
orl
mov
add
push
inc
cli
or
or
sub
jmp
pop
mov
lock
jecxz
adc
mov
mov
mov
jecxz
subb
inc
push
mov
mov
cmp
in
stos
daa
hlt
mov
push
or
outsb
das
push
inc
lock
or
adc
arpl
dec
sub
sbb
outsl
clc
icebp
lret
push
mov
pop
jmp
mov
test
xor
out
cmp
push
jmp
adc
orl
push
push
xchg
xor
cli
jmp
popf
adc
out
mov
fs
xchg
nop
icebp
pop
aas
pop
or
psubq
cli
adc
jo
mov
or
jecxz
and
cmpsl
outsl
push
aas
and
notl
mov
mov
out
adc
sub
cmp
movsl
cltd
sub
loopne
or
test
dec
or
pop
mov
jg
mov
shlb
dec
inc
mov
cli
push
xor
jp
in
inc
adc
hlt
push
jne
xor
xchg
push
popa
jb
adc
mov
jmp
push
fwait
ret
xchg
push
adc
xor
ss
sub
push
inc
cmp
adc
sti
fadds
lcall
pop
rcll
dec
adc
mov
pop
push
fistpll
test
scas
cld
out
inc
add
mov
in
int
mov
ljmp
lret
push
imul
jne
xor
mov
mov
jmp
out
in
xchg
jle
rolb
fnstsw
or
push
ficoml
inc
mov
push
or
outsb
lods
imul
je
bound
shrb
jns
dec
add
push
or
pop
or
cli
inc
cmp
jne
sub
xor
inc
addl
sub
sub
shl
jb
stos
xor
mov
sbb
mov
add
enter
push
stos
jo
mov
negl
mov
xor
mov
cmp
lods
jne
mov
adc
rcll
and
or
pop
ja
cli
setb
cmove
imul
jmp
sbb
ja
mov
cmp
xor
repz
in
outsb
andnps
mov
aad
fcomps
sub
test
shr
xorb
add
xchg
std
xchg
cwtl
xor
pop
into
sub
enter
rorl
pop
adc
push
pop
mov
push
lcallw
cmp
inc
adcl
push
push
add
fsubr
sub
fisttpl
push
das
lock
and
gs
add
sub
cmp
sub
push
dec
add
leave
sub
lret
pop
hlt
inc
nop
out
or
inc
jo
adc
and
adc
xchg
jp
and
adc
add
jmp
out
repnz
push
fnstenv
popf
pop
add
mov
add
pop
xlat
or
push
out
jg
test
push
push
inc
loop
aas
add
fldenv
mov
stos
mov
pop
mov
insl
movsl
pop
scas
dec
mov
add
std
push
pop
jnp
mov
pop
dec
pop
dec
loop
cmp
imul
fisttpl
push
lods
mov
mov
mov
or
scas
daa
add
or
jmp
push
pop
cmp
ffreep
sti
inc
sbbl
sub
push
mov
pop
cmp
repnz
mov
inc
data16
mov
push
dec
mov
mov
fstl
cs
jge
push
test
iret
xor
push
and
push
jae
or
pop
movsb
xorb
enter
out
pop
push
sbbb
jge
popa
dec
add
lock
dec
rolb
stos
mov
rcr
je
jge
dec
ljmp
imul
mov
dec
dec
adcl
mov
or
pusha
adc
jmp
sbb
or
out
cltd
cmp
jae
mov
adc
sbb
push
sbb
icebp
sbb
mov
aaa
repz
push
idivb
fcom
inc
inc
popa
dec
inc
repnz
mov
pop
adc
out
dec
cmc
sti
ret
pop
add
push
and
xchg
sbb
jle
pusha
int
cmp
xchg
dec
sub
sub
test
cmp
inc
mov
cmp
inc
fldenv
push
movsb
cwtl
pop
cmp
xchg
dec
inc
mov
fbld
and
testl
push
sub
int
out
shll
add
push
mov
mov
scas
cmc
and
cmc
mov
test
test
cmp
aaa
aad
gs
enter
dec
dec
push
pusha
mov
rcrl
push
cmp
das
jne
std
mov
pushf
repz
push
pop
push
adc
jb
out
jecxz
or
dec
decb
lea
mov
insl
faddl
fisubrs
hlt
pop
mov
sbb
dec
cmp
dec
inc
pop
test
repz
cmp
ret
cmp
hlt
jo
or
pop
jmp
adc
pop
push
adc
adc
jmp
sbb
add
add
adc
jmp
sub
imul
inc
test
aad
stos
inc
pop
jmp
mov
hlt
xor
push
xchg
inc
xor
into
push
stc
cmp
mov
or
mov
cld
pop
stc
loopne
mov
pop
push
incl
mov
add
pop
dec
sub
or
and
add
sbb
or
adc
inc
xchg
aam
push
mov
lea
or
jmp
xchg
pop
and
arpl
pop
push
stos
sub
fwait
add
and
inc
add
push
mov
or
cwtl
pop
xchg
cwtl
sub
imul
push
inc
sub
aad
fstpl
mov
les
lods
adc
call
fiadds
or
leave
clc
push
and
lret
jmp
cmpsl
in
pushl
jmp
mov
jmp
mov
ja
push
fiaddl
fisubs
repz
mov
shlb
leave
das
std
repz
add
cltd
mov
xor
imul
fmuls
ljmp
mov
xor
xchg
mov
pop
push
or
cli
negb
das
aam
jb
pop
pop
ficoms
sub
sub
sub
mov
jnp
xchg
clc
popa
ret
ds
lahf
sub
pop
xchg
je
pop
push
cli
mov
sbb
outsl
add
pusha
adc
ss
push
push
pop
push
jmp
mov
test
xchg
scas
mov
adc
add
sub
test
mov
sub
ror
fmul
xorb
push
mov
and
adc
mov
decl
pop
icebp
ret
adc
jne
inc
sbbb
inc
dec
and
enter
add
stos
or
fimuls
dec
dec
cli
sub
inc
dec
imul
jle
push
pop
add
mov
inc
jmp
ret
clc
jmp
mov
adc
add
mov
not
or
jecxz
pop
or
push
mov
mov
add
fstp
add
cmc
in
jmp
or
int
mov
pop
jne
imul
pop
and
push
add
or
lret
jbe
mov
iret
or
xchg
inc
pop
adcb
xor
out
or
in
sub
pop
lock
mov
mov
aad
add
sahf
pop
sub
mov
movsb
gs
repz
popa
test
mov
sbb
mov
test
in
pop
out
fiaddl
pop
jmp
cmp
and
pop
xchg
mov
leave
add
std
jmp
jne
lods
ret
jbe
mov
or
imul
xchg
xor
pop
pop
mov
adc
es
jo
or
addl
leave
sbb
leave
push
sub
test
test
jbe
shll
out
mov
jmp
cmp
inc
cmp
sti
push
mov
add
dec
inc
add
jmp
loop
sbb
rcll
push
xchg
pop
adc
jmp
xchg
aas
push
cmc
jno
test
or
aam
cs
mov
adc
movsb
xlat
inc
dec
loopne
mov
shrb
dec
and
dec
sub
push
lahf
or
je
xor
popf
cmc
pushf
mov
jmp
jo
test
call
mov
rclb
inc
inc
or
sub
inc
push
in
jp
xor
adc
push
mov
outsb
std
pop
sbb
pusha
sub
add
mov
xchg
push
xor
mov
xor
mov
imul
add
fsubrl
xchg
loope
push
push
push
loope
mov
mov
orl
lock
shr
adc
push
or
repnz
dec
or
push
cmp
inc
lret
sub
inc
dec
sbb
das
notb
sub
push
xchg
push
scas
ds
cmpsb
jns
jle
jae
xor
in
push
or
adc
fsubs
dec
repnz
add
cmp
and
out
sub
sarl
rcrl
and
mov
cmp
insl
lret
dec
les
mov
inc
test
popf
push
in
mov
roll
pop
push
or
cmovb
inc
cmp
loop
add
push
jmp
push
stos
and
rorb
or
aas
incb
or
adc
icebp
xchg
mov
cs
lock
mov
out
stos
je
ret
cmp
add
adc
jo
orb
orb
data16
lock
cmp
add
adc
out
fldl
jp
hlt
sti
mov
in
pushf
test
inc
jl
adc
hlt
mov
movsl
shl
into
stc
insl
adcb
mov
ljmp
and
negl
pop
mov
and
sbb
push
loopne
mov
pop
sahf
inc
sbb
aaa
cmc
lret
add
pop
push
jmp
scas
sbb
repnz
pop
loop
xchg
enter
push
xchg
mov
aad
mov
incl
out
aas
aad
andl
loopne
and
push
stos
mov
das
imul
or
push
fimull
mov
sahf
lcall
xchg
push
and
push
fbld
fcompl
push
pop
and
jmp
mov
and
sub
lock
or
movl
xchg
out
mov
push
lcall
fisubl
mov
pop
cmovp
xchg
xor
add
dec
and
pop
clc
rolb
push
not
dec
xor
lea
or
in
cmpsb
mov
lock
push
push
dec
pop
shlb
rcrl
shl
and
lods
cmp
sub
add
clc
imul
mov
xchg
ds
mov
xchg
sbb
test
mov
pop
inc
jbe
dec
cli
sarl
push
ret
mov
xchg
les
dec
sti
fucomi
dec
push
sub
sub
inc
adc
in
movsl
daa
xor
inc
or
dec
mov
sub
adc
sarl
jmp
push
orb
aad
mov
push
inc
push
cmpl
pop
sbb
xor
hlt
aad
loop
add
cmp
inc
in
orb
dec
dec
jg
push
iret
cmp
scas
and
add
stc
or
cmpsl
outsl
dec
out
or
insl
cmp
loopne
pop
mov
sbb
out
shrb
pusha
add
adc
and
mov
add
jg
ljmp
push
dec
mov
out
mov
rcr
pop
mov
jno
lret
pop
xchg
adc
or
pop
fdivrs
fdivs
js
sbb
sub
add
jle
jl
mov
pusha
mov
pop
adc
and
test
pop
or
pop
add
rcrl
mov
push
and
push
fdivrl
mov
sub
nop
roll
loopne
mov
fbstp
xchg
pop
movl
and
push
pushl
adc
loop
xor
test
sub
dec
adc
pop
or
mov
push
lea
push
ds
shl
sahf
pop
test
lahf
jl
je
rcl
out
adc
rorl
and
sub
cmp
sub
sub
push
push
xchg
ljmp
push
sub
add
push
jmp
shll
imul
jge
dec
repnz
pushf
inc
add
xor
rcll
or
movsb
dec
aad
pop
pop
jmp
gs
jns
and
pop
dec
cwtl
dec
mov
xor
ret
into
movsl
jecxz
lock
jae
or
push
xchg
bound
ja
lods
cmp
test
xlat
adc
and
fistl
int
jnp
repnz
sub
pop
add
cs
pop
add
pop
or
push
ss
ret
pop
jb
ja
pop
sbb
sub
in
and
sbb
xchg
jge
pop
inc
daa
test
lds
add
in
out
subb
mov
or
hlt
adc
jle
cmp
jmp
icebp
jle
nop
jae
gs
andl
pop
jg
ret
outsb
daa
pop
xor
dec
sub
shll
dec
rclb
and
addl
sbb
add
jmp
pop
sub
aad
mov
inc
das
cmp
ret
dec
add
cmp
cmp
fwait
addb
mov
pop
loope
sub
sub
lock
data16
sub
jmp
outsl
test
sti
ja
pop
sahf
rolb
out
inc
aam
aam
jbe
pop
fcmove
ja
pop
stc
dec
jmp
mov
push
push
in
loop
sarb
fnstcw
ss
push
add
cmc
mov
inc
cwtl
je
cmp
ljmp
mov
xor
sub
lods
cmp
roll
popa
jle
and
das
lods
and
or
sub
les
xchg
out
pop
repz
leave
add
clc
push
mov
sbb
adc
subb
enter
add
pop
and
daa
lock
jns
imul
push
jae
ret
jne
je
jg
mov
mov
pop
mov
lock
repz
imul
pusha
out
pop
les
add
outsb
push
jmp
jecxz
adc
hlt
scas
add
mov
adc
out
sti
pushf
inc
jmp
jno
cmpsl
and
testl
dec
push
ret
dec
dec
push
and
add
add
cmpsb
inc
inc
shll
jo
xlat
push
stos
pop
out
jno
cmpsb
call
lds
jae
or
arpl
iret
leave
push
add
call
imull
and
ret
shl
jo
mov
jle
out
fs
aad
mov
pop
cld
xchg
mov
jmp
add
mov
xchg
mov
fsubs
fistpl
or
out
pop
or
push
cwtl
pop
or
cmc
jno
sub
sub
mov
jl
cmp
inc
testl
mov
stc
add
scas
gs
pop
clc
ss
jmp
out
lret
sar
mov
mov
xchg
enter
mov
pop
icebp
aas
sub
out
cmc
bound
out
inc
out
dec
loop
shr
or
mov
repz
add
test
add
jmp
clc
loope
push
data16
cld
jb
and
addl
inc
adc
sti
lds
inc
sub
imul
mov
iret
mov
sbbb
in
repz
test
xchg
pop
or
fistpl
jno
pop
sub
mov
cld
lret
inc
pusha
movsl
call
nop
inc
ja
jmp
mov
je
adc
or
cmp
rcrb
jno
adc
lods
and
mov
aam
ja
or
cs
test
push
sub
pusha
sub
mov
ret
jmp
mov
xor
ss
mov
leave
add
dec
loope
add
inc
data16
loope
neg
imul
loopne,pn
addb
xchg
add
dec
dec
and
sub
les
push
ja
outsl
add
cmc
dec
int
bound
icebp
dec
push
sbb
bound
aam
mov
mov
jge
pop
aam
add
push
in
sub
sub
push
in
sarb
or
push
stos
push
push
adc
sub
stos
clc
sub
inc
addl
call
iret
mov
mov
loopne
cmp
sbb
leave
ficoml
jo
iret
sub
je
and
jmp
mov
mov
mov
fiaddl
in
mov
sbb
fucomi
insl
insl
cmp
xchg
jo
sbb
ljmp
add
and
mov
cmp
movsb
xor
ljmp
mov
lods
add
dec
push
adc
rcll
rclb
inc
cmpsb
adc
xor
adc
adc
add
add
push
cmp
pop
add
pop
das
pop
jns
das
jp
sub
lock
xchg
je
pop
pop
push
pop
mov
xor
incl
sub
daa
lods
xchg
or
inc
pop
add
cmp
neg
add
sub
cmp
pop
stos
popa
jl
mov
push
push
lds
push
popa
stos
inc
call
cltd
add
cmp
mov
cmp
imul
and
jbe
fldenv
push
dec
nop
aaa
sbb
xlat
mov
dec
daa
inc
cmp
cmc
pop
or
negl
add
push
mov
and
out
out
jl
adc
add
or
push
mul
add
filds
inc
and
cmp
sbb
add
mov
pop
mov
or
pop
cmp
dec
sub
das
loop
orb
push
sarb
add
pop
fisubs
push
cli
adc
or
push
jnp
push
cmc
push
xchg
mov
fsubs
sbb
ret
mov
cmp
xchg
cld
cltd
rclb
cmpsl
mov
xor
mov
push
inc
mov
sub
mov
mov
add
sbb
sahf
iret
or
idivl
mov
mov
leave
add
pop
pop
lods
pop
movsb
cmc
movb
ret
adc
inc
pop
stos
sub
out
pop
sub
mov
push
add
push
add
fs
xchg
inc
sbb
stc
push
xor
notl
cmp
or
cld
mov
add
popa
or
adc
dec
or
pop
push
adc
cwtl
cmp
mov
movsb
mov
add
mov
jmp
scas
xor
sub
or
or
push
fld
cltd
out
loop
jmp
cltd
cmpsl
push
mov
dec
mov
pop
movsl
ja
jno
sub
ret
movsl
andb
add
jg
mov
push
jmp
add
and
pop
sub
cmc
push
enter
xchg
aas
fsubrl
jae
cmp
mov
jle
dec
popa
jnp
fisttps
adc
ret
sti
inc
mov
mov
lds
ljmp
mov
jns
pop
stos
mov
or
pop
movsl
mov
dec
add
xor
mov
xchg
adc
lds
xor
in
push
les
stos
shlb
daa
lds
jmp
cmp
mov
cmp
dec
jmp
sub
push
fidivrl
jnp
sbb
cld
ret
or
fistpl
in
and
sub
mov
xchg
xchg
jle
mov
add
push
fimull
int3
out
lods
aas
stc
mov
or
aaa
jb
jge
lahf
mov
lret
aaa
xor
inc
pop
repnz
loop
or
movsb
sbb
xchg
push
sub
jg
cmp
pop
mov
xor
add
push
push
mov
sub
repnz
xlat
sbb
je
int
int3
out
adc
cmc
push
push
push
push
jp
dec
stos
stc
jno
enter
subl
jl
stc
jmp
cltd
loopne
sbb
dec
insl
divl
pop
int
inc
inc
outsb
icebp
mov
mov
adc
add
adc
inc
jmp
roll
dec
mov
jp
repnz
loop
add
pop
loop
add
pop
jmp
add
imul
or
cli
addl
orb
int
pop
xor
rorb
sbb
ljmp
cmp
jnp
and
xor
dec
loope
lods
xor
adc
push
inc
scas
dec
adc
or
cld
blcfill
ret
cmp
add
stos
and
std
xchg
lock
hlt
daa
push
xor
and
cs
pushf
ljmp
mov
rclb
or
jns
sub
or
inc
mov
bound
mov
mov
pop
push
out
pop
mov
adc
mov
lods
nop
push
movsb
and
mov
or
mov
add
adc
cltd
or
dec
mov
cmp
dec
pop
dec
or
jg
movsl
or
pop
add
mov
or
jg
stc
inc
imul
push
cwtl
pop
cli
int
fstl
adc
or
dec
aas
cwtl
push
mov
loope
popf
jnp
inc
addr16
pop
pop
mov
mov
add
jmp
xchg
pop
lods
inc
jmp
jno
loopne
mov
pop
xchg
cmpsl
gs
out
pop
jmp
je
jmp
sub
outsb
repz
xchg
xchg
sub
push
lods
in
adc
nop
or
jecxz
mov
sbbb
fs
add
ljmp
test
pop
mov
sbb
aad
out
in
or
cmp
jne
mov
icebp
or
jns
lcall
pop
aas
add
out
pop
jecxz
decl
pop
sub
push
in
add
outsl
call
dec
sub
daa
and
pop
mov
data16
outsb
adcb
push
fnstsw
add
mov
push
outsl
sub
aad
cmpsb
push
test
adc
leave
bound
pop
cmp
sbb
fbld
rorb
fnclex
sub
fiadds
sub
mov
ja
sub
repz
std
adc
sub
xor
adc
jnp
lods
bound
int3
dec
orb
mov
push
push
test
mov
lock
pop
sub
mov
pop
pop
shr
scas
fs
push
dec
adc
loope
and
testl
mov
mov
lcall
fistpl
cli
movsl
mov
int
es
add
loope
imul
pop
xchg
push
push
iret
popa
pop
sub
pop
iret
int3
jmp
icebp
cmp
or
clc
mov
push
push
push
out
dec
arpl
jmp
ss
jecxz
dec
loope
sarl
sbb
push
dec
mov
fdivrl
shlb
neg
mov
insb
pushf
add
insb
sub
jno
jp
xchg
adc
adcb
lock
aad
inc
mov
outsl
add
negl
xor
jmp
insb
or
and
push
push
inc
pop
cs
push
aam
add
xor
fcoms
inc
pushf
test
push
out
pop
aam
mov
out
dec
addb
pop
mov
sub
cs
push
leave
shl
and
add
out
or
pop
push
xor
adc
rclb
adc
xchg
add
pop
jmp
fldl
mov
sub
pop
movb
mov
or
pop
inc
mov
jmp
add
dec
add
mov
push
lret
sti
cmp
push
add
ret
pop
inc
ret
xor
mov
test
imul
push
mov
xchg
repnz
fildl
out
mov
add
push
jns
push
pop
sarb
addl
jnp
mov
outsb
in
push
sub
pop
add
sub
push
les
cmp
subb
enter
inc
lds
mov
xlat
loop
add
cs
dec
xor
or
ss
push
pop
push
mov
aam
je
pop
push
fmull
mov
cli
sub
insb
mov
js
bound
push
jo
xor
mov
pop
call
fistpll
mov
mov
mov
outsl
inc
jg
add
jb
add
xchg
scas
mov
push
and
adc
ret
sub
loopne,pn
or
ss
dec
sbb
ja
push
test
sub
call
gs
mov
mov
push
and
pop
pop
and
cmp
pop
pop
dec
aas
xchg
push
lret
jle
or
add
daa
xor
jns
push
mov
dec
adc
ret
lcall
xor
mov
insl
rolb
dec
dec
jmp
aad
add
lahf
fistpll
test
lret
std
pop
inc
das
lret
add
push
mov
ljmp
mov
dec
popf
out
inc
and
rcrl
fs
imulb
ja
mov
mov
mov
cmp
into
bound
add
xchg
mov
sub
push
cmpsl
mov
adc
sbb
das
mov
push
xor
jmp
jg
out
sub
ficoms
cli
inc
and
or
outsb
clc
pop
push
sub
add
shr
or
pop
cmpsl
mov
add
sub
pop
insb
jge
sub
inc
in
lret
rorb
das
add
loopne
dec
sub
pop
aaa
push
jmp
gs
out
mov
fildl
xchg
dec
repnz
les
xchg
push
cmpsl
add
enter
xchg
fildl
ljmp
add
dec
outsb
inc
mov
cmp
or
or
ret
xlat
test
pop
mov
into
sub
fs
test
mov
sahf
stos
popf
mov
pop
push
das
pop
or
jnp
jecxz
cmpsb
pusha
mov
xor
clc
jno
leave
or
sub
and
sub
fsubl
pop
out
inc
cltd
ljmp
sbb
loop
add
sub
pop
inc
jne
pushw
push
mov
pop
add
mov
inc
add
push
pop
ficoms
push
dec
mov
jp
iret
stos
mov
shll
fmuls
adc
sub
dec
push
mov
pop
push
cld
add
xor
fsubrl
cmp
or
add
xor
cmc
out
push
aad
repnz
xchg
dec
and
jp
lock
or
jecxz
sub
out
add
pop
js
inc
subb
or
scas
cmc
mov
jbe
add
dec
jmp
xchg
jae
dec
inc
push
adcb
cmp
or
stc
push
pushf
push
inc
dec
inc
adc
add
jnp
data16
or
repnz
or
loop
xlat
xchg
lds
mov
cld
out
mov
mov
add
and
pushl
lock
scas
or
add
pop
fdivl
adc
mov
mov
mov
dec
jge
mov
rorb
jmp
orb
push
popa
jmp
icebp
mov
nop
orb
je
hlt
lock
mov
or
leave
jae
or
test
and
dec
pop
add
repz
or
sub
mov
pop
add
add
xor
std
dec
mov
pop
xchg
cs
push
testb
jno
out
daa
and
jae
add
and
pop
mov
push
enter
cwtl
pop
inc
ljmp
mov
push
repz
or
add
dec
sub
rolb
mov
popa
adc
jmp
imul
add
bound
jmp
out
push
add
out
addr16
ftst
cld
test
dec
cmp
adc
push
push
jmp
mov
xor
inc
mov
or
add
pop
and
insb
lock
add
pop
push
push
mov
adc
push
cmpl
xchg
std
mov
mov
xchg
fists
sub
cld
adcb
mov
adc
or
push
inc
dec
mov
clc
dec
mov
and
mov
and
xchg
mov
movb
popf
and
xor
xchg
rcrl
jp
push
test
fsincos
aas
mov
stc
inc
stc
imul
xchg
not
sbb
push
incl
adc
fsubl
cmp
fwait
test
mov
pop
insl
xchg
shll
gs
and
loopne
aas
push
or
cmp
push
inc
push
mov
mov
mov
ljmp
adc
mov
cmp
repz
jne
mov
add
adc
dec
or
sub
mov
shrb
or
sbb
sti
cmpsl
fisttps
movsbl
into
push
add
xchg
or
std
ss
xchg
pop
inc
pop
xor
lcall
mov
lock
adc
adc
or
dec
daa
loopne
testb
repz
stos
push
popa
dec
loope
xchg
add
push
popa
cmp
das
sub
pop
ja
stos
dec
pop
mov
xlat
push
xchg
or
imul
shlb
lahf
or
pop
cs
push
mov
loop
vaddpd
fisubl
inc
pop
xchg
cltd
mov
stc
xchg
addb
xor
pop
and
shlb
loope
bound
out
ret
cmp
icebp
lock
inc
push
addl
adc
out
sub
add
jmp
imul
fadds
sahf
mov
push
adc
pop
pop
push
push
ss
sbb
insb
adc
scas
pop
repz
mov
icebp
je
loop
cmp
in
scas
les
daa
movsb
adc
in
sub
sbb
sbb
stos
andb
sbb
inc
and
inc
out
mov
dec
mov
ss
repnz
shll
dec
xor
out
shlb
and
mov
cwtl
pop
inc
loopne
jmp
test
and
out
push
adcb
sub
or
sti
mov
mov
jns
mov
lock
pand
lahf
ret
scas
xchg
scas
xchg
loope
xchg
idiv
sub
mov
sub
mov
dec
mov
sub
xor
int
cmp
orl
cwtl
sub
jge
xchg
push
clc
jne
jo
sbb
dec
ret
lock
pop
pop
lods
mov
xchg
adc
jle
addr16
mov
daa
imull
add
sub
xor
xor
cs
lahf
mov
sbb
mov
adc
or
js
ret
add
mov
in
cmp
dec
sbb
mov
pop
aaa
not
add
leave
or
push
mov
adc
jp
mov
filds
test
sbb
push
addr16
dec
xor
push
pop
and
jnp
lds
je
jo
or
and
xchg
pop
std
fldenv
sti
idivb
push
xlat
push
mov
xchg
pop
pop
dec
and
mov
inc
sti
imull
out
cld
xchg
xchg
dec
mov
and
lea
sbb
jmp
or
add
fdivr
xor
scas
stc
clc
loop
pop
test
nop
push
jg
ljmp
aaa
dec
mov
pop
repz
push
inc
nop
and
cmp
fwait
mov
xchg
pop
mov
pop
pop
sbb
das
adc
dec
or
pop
xor
lds
sbb
or
fmul
daa
mov
das
hlt
or
cmp
or
in
out
dec
cmc
sbb
sbb
add
inc
mov
or
popa
dec
outsl
pop
push
push
pop
xlat
shll
cld
push
rcll
bound
adc
jmp
mov
test
gs
decb
pop
jp
xchg
jge
cmp
sub
xor
es
jp
dec
and
leave
jnp
xchg
das
imul
jmp
jbe
or
adc
add
jmp
lahf
popf
jbe
imul
hlt
leave
push
mov
xchg
shr
lea
and
cmp
mov
aam
add
or
or
sub
std
jae
dec
wrmsr
iret
gs
xchg
in
push
or
adc
and
mov
aas
sbb
mov
in
adc
scas
aam
adc
in
sti
test
mov
mov
das
inc
push
sbb
es
mov
ficoml
jmp
mov
add
jl
push
inc
pop
jmp
xlat
xchg
pop
cmpsl
rcll
mov
adcb
fmuls
lahf
test
sub
jae
testl
inc
push
movsb
cmpsl
pop
mov
xor
ret
add
test
in
fldenv
pop
and
imul
pusha
outsb
lock
jmp
iret
sub
xchg
dec
sbb
and
mov
pop
jmp
mulb
mov
adc
mov
fnsave
mov
mov
push
push
dec
xchg
lret
inc
in
jae
add
xchg
adc
sbb
ja
and
pop
or
xor
xor
jbe
aad
out
mov
and
sbb
xchg
xchg
rorb
fsin
and
das
jg
stos
jmp
xchg
sbb
enter
pop
lea
xchg
add
push
or
cmp
pop
jmp
xor
call
add
push
lahf
sub
sub
dec
repnz
call
pop
dec
pop
loopne
hlt
inc
or
push
mov
sbbl
pusha
nop
xor
mov
stos
test
sti
sub
lcall
mov
call
mov
sub
add
scas
mov
and
dec
fidivs
add
jnp
stos
les
loop
adc
nop
xchg
dec
les
cmpsb
ret
jg
sub
sub
push
adc
popa
pop
xor
icebp
push
add
mov
imul
mov
std
jnp
push
xchg
test
stos
mov
mov
sub
mov
sbb
fisttpll
mov
stc
and
cs
jo
inc
ret
pop
loop
dec
das
lods
out
lcall
add
loope
scas
lods
lea
popa
aam
sar
pop
mov
dec
jmp
add
dec
push
dec
icebp
xor
pop
sti
cmpsb
sbb
mov
scas
cmp
ljmp
std
push
hlt
pop
mov
out
mov
add
pop
mov
into
push
pop
push
repz
imul
pop
clc
mov
push
mov
or
add
sub
sub
mov
rolb
add
push
jmp
dec
mov
aas
outsl
dec
les
mov
aaa
cmpb
jbe
push
jmp
les
dec
int
xchg
imul
stos
jmp
xor
data16
cmp
jbe
jle
lea
daa
mov
xchg
lcall
push
push
sbb
sbb
dec
pop
cwtl
pop
fistpll
ja
xchg
out
adc
jge
push
mov
cmp
jge
push
add
loope
test
imulb
and
cmpsl
shr
xchg
pop
icebp
inc
pusha
neg
jbe
shl
mov
adc
ret
pop
fwait
aas
add
sub
dec
push
pop
cmpsb
or
xchg
add
lcall
inc
das
shl
xlat
xchg
xchg
movsb
and
xor
repnz
inc
andl
xchg
loop
imul
arpl
push
dec
fcomps
inc
sub
out
cmp
adc
jl
clc
sbb
adc
cmp
in
ljmp
fwait
push
add
data16
dec
cmpb
clc
sarb
aas
add
push
mov
shr
add
daa
jmp
and
xchg
shrl
adc
pop
push
stos
cmp
or
xor
inc
dec
xchg
out
iret
fadds
mov
movsl
xor
loop
cmp
pop
imull
xchg
outsb
and
add
or
sbb
rorb
cli
lret
sbb
inc
push
outsl
inc
lret
pop
int
jge
sub
cmc
or
and
les
jmp
jmp
orb
das
je
rcrl
mov
push
lret
stc
push
loopne
pop
jbe
push
or
xor
adc
mov
mov
lock
fisubl
notl
mov
push
mov
movsl
mov
sub
pop
pusha
stos
ret
ljmp
mov
xor
mov
cld
ret
sub
scas
ret
mov
repz
test
shr
out
das
xor
mov
and
lods
sub
in
inc
dec
xor
sub
stos
mov
pop
add
je
outsb
enter
jecxz
dec
stc
test
adc
sarb
repz
cwtl
in
mov
pop
and
stos
mov
inc
cmp
or
outsl
or
not
lock
xor
xor
and
jg
or
iret
mov
jno
shll
fistpl
mov
movl
fs
test
mov
and
int3
push
xchg
outsb
xor
add
cmp
imul
fcomps
stos
jnp
dec
jg
pop
in
rorl
std
add
icebp
pop
outsl
lods
push
loope
ja
js
xchg
push
test
mov
sub
pop
xor
lret
jmp
int
imul
cmc
cmp
pusha
pop
jmp
xor
in
pop
mov
jnp
jno
sti
cld
push
aad
dec
cmp
xor
or
jmp
cmpb
and
mov
daa
and
lret
mov
out
shlb
fucom
mov
les
push
aas
fnstenv
rorb
dec
pop
jo
cmpb
xchg
xor
jp
add
pop
mov
mov
and
adc
cli
pop
or
add
xor
pusha
adc
rorb
cmp
jne
das
push
xor
mov
mov
flds
pop
mov
inc
pop
jp
lock
jae
ds
movlps
mov
loopne
adc
rorb
ja
jle
add
dec
sbb
sub
loop
sbb
pop
inc
neg
stc
sub
xor
repnz
imul
iret
inc
cmp
jnp
push
jmp
add
aas
cmp
sub
xor
cmp
push
mov
mov
outsl
inc
adc
pop
sti
ss
mov
add
dec
shr
push
dec
test
das
xor
or
out
repnz
fdivrl
ljmp
cmc
inc
push
mov
jmp
push
or
sub
mov
lock
or
jp
add
cs
jne
jp
jbe
xor
inc
into
push
sbb
push
loopne
sub
push
adc
jo
adc
hlt
add
sarb
leave
scas
test
nop
and
and
jmp
pop
call
gs
inc
push
push
push
nop
mov
jle
add
inc
dec
jle
cs
pop
adc
mov
rolb
cmp
outsl
sub
and
push
leave
loope
add
sahf
pop
dec
push
cmp
sahf
cld
dec
pop
les
mov
sub
nop
add
jne
dec
arpl
cmp
mov
or
mov
pop
rcll
jmp
push
push
repnz
leave
jbe
inc
pop
dec
out
daa
jne
xchg
add
jp
push
mov
inc
or
gs
cmp
sbb
cmpsl
loop
fsubrs
mov
and
popa
cli
push
pop
push
cli
xorb
jne
and
cli
sub
or
or
and
mov
sub
sbb
and
jbe
shrb
add
mov
mov
sub
pop
sbb
push
hlt
pusha
in
inc
cs
daa
shl
cmp
add
test
add
add
xor
pop
xchg
decl
mov
loopne
jmp
outsl
mov
jnp
nop
outsl
mov
jae
or
adc
jbe
inc
or
mov
cmp
pop
fcoml
and
push
out
push
mov
add
daa
pop
xor
pop
int3
clc
jmp
les
mov
nop
icebp
aam
xlat
mov
mov
push
push
ficoml
loop
push
lret
dec
mov
lods
dec
mov
push
pop
xorb
negl
mov
fwait
adc
aas
mov
xchg
inc
cmp
pop
out
bound
hlt
and
xchg
mov
pusha
mov
mov
or
ficomps
bound
imul
add
rcrl
das
in
mov
test
xchg
out
cmp
shll
xchg
or
jbe
ja
call
pandn
pop
pop
or
jle
icebp
jnp
sbb
ret
stc
push
jbe
test
add
ja
mov
addr16
icebp
mov
cli
rcrb
cwtl
jnp
dec
mov
pop
fbstp
outsl
sbb
stos
lcall
outsl
arpl
jmp
push
fucomip
incb
adc
or
shlb
pushf
stos
fwait
test
and
orb
sarb
pop
dec
hlt
or
pop
cli
out
out
fsubrs
xor
div
lock
xchg
xchg
enter
mov
xor
inc
adc
fbld
sub
dec
ja
cmp
mov
inc
shlb
push
fsubrl
int
dec
inc
mov
or
mov
push
jmp
cmp
adc
sbb
or
inc
ret
adc
jp
pop
lcall
inc
cmp
push
dec
movsb
lods
sbb
mov
xchg
adc
xlat
enter
into
aad
xor
inc
out
mov
outsl
shr
jle
mov
fisttps
repnz
fnstcw
pop
sbb
adc
in
or
and
pop
pop
dec
xor
aaa
jecxz
call
pop
enter
push
loop
sub
mov
sub
mov
xchg
shr
and
inc
aas
lds
stos
lret
les
add
mov
int
sub
and
gs
imul
jae
call
hlt
in
push
das
jmp
decl
stos
aam
stos
lea
mov
lock
mov
cli
push
mov
rorl
jnp
into
sub
mov
call
fcmovnb
enter
mov
mov
fiadds
pop
or
cmc
hlt
testl
jo
bound
inc
je
cmp
ljmp
gs
das
aam
add
dec
jmp
std
popa
mov
sub
notw
out
mov
mov
hlt
scas
popa
adc
das
scas
ds
xchg
cwtl
mov
push
std
cmpsl
pop
and
cmp
jne
jns
lcall
push
loop
add
sub
pusha
and
rorl
jl
and
test
pushf
outsl
or
testl
pop
addl
fld
cmc
fadds
xlat
out
sti
cwtl
sub
xchg
or
mov
push
jle
cli
push
lret
aam
cli
stc
sbb
pop
sub
aaa
and
jle
jl
pop
jmp
test
mov
sar
lcall
mov
daa
mov
and
outsb
pop
lcall
lea
es
lock
out
sahf
rcrl
ja
imul
push
push
movsl
pop
cmp
dec
xor
cmp
push
push
inc
and
push
sbb
addr16
dec
ss
adc
cld
fs
aam
std
out
xor
add
jb
xchg
mov
inc
fwait
add
push
sbbl
cmp
test
or
sub
sub
push
mov
push
jmp
les
std
gs
pop
jno
bound
cmp
sahf
rcrb
jno
add
mov
flds
xor
adc
insl
es
lcall
idivb
add
scas
sarl
mov
ljmp
popa
cwtl
ficompl
jmp
js
xor
mov
cld
and
in
jecxz
aad
notb
xchg
fildl
rolb
cmp
push
xor
xchg
ret
in
xchg
push
pusha
and
enter
sub
mov
inc
adc
mov
pop
fmuls
das
das
inc
lret
jnp
or
ljmp
inc
push
imul
lods
mov
sub
mov
sbb
xchg
sbb
bound
lahf
mov
orb
add
aad
push
lret
insl
pop
mov
dec
or
pop
mov
push
repnz
jns
inc
sbb
test
adc
dec
adc
add
sbb
test
lcallw
push
mov
jnp
pop
rorb
xor
mov
mov
fldl2t
imul
bound
jmp
add
mov
pop
pushw
pop
push
lock
sub
sbb
jbe
mov
mov
inc
push
inc
in
lods
xchg
lret
daa
push
jo
add
lods
xchg
hlt
ffree
jnp
bswap
repz
rcll
dec
dec
sbb
mov
insb
out
decl
jne
sbb
fwait
mov
sub
mov
inc
gs
ljmp
imull
loope
push
test
dec
stos
jns
das
test
clc
xor
pop
aam
pop
test
sub
clc
pop
inc
adc
push
jne
sbb
add
pop
xchg
lea
mov
dec
xlat
add
clc
add
lock
sub
rcll
out
dec
and
negl
pop
and
insb
jmp
out
xor
adcb
gs
or
or
in
or
adc
and
ljmp
jnp
mov
insl
mov
push
xchg
fwait
mov
lods
loope
or
jp
pop
test
cmpsl
ficoms
inc
push
insb
xchg
nop
mov
pusha
pop
out
or
dec
jge
push
or
pop
mov
add
xlat
push
jb
push
in
dec
dec
sub
jmp
ljmp
and
out
pop
dec
lods
dec
shl
jb
pushf
sbb
and
in
adc
and
push
cld
push
cwtl
xor
fbld
scas
inc
addr16
in
std
mov
aas
loopne
jae
arpl
push
sbb
add
adc
scas
push
push
mov
cmp
or
aas
or
mov
mov
sub
scas
mov
inc
sbb
mov
cwtl
shrb
dec
in
sti
lock
jmp
or
leave
cltd
dec
test
push
popf
dec
inc
inc
retw
lock
jno
das
add
outsb
push
push
add
out
or
test
push
arpl
fwait
call
or
xor
ds
xchg
jnp
mov
in
xchg
dec
inc
test
shlb
sbb
or
in
incl
xchg
cmp
add
sub
sbb
inc
ljmp
dec
mov
jmp
mov
ficompl
inc
pop
sbb
or
add
push
sub
jmp
jnp
mov
cld
popf
mov
sarl
xchg
push
std
test
ss
sub
add
pop
or
lret
inc
jno
pop
jmp
push
push
jb
outsl
leave
cld
and
fsubr
mov
adc
rcll
cmc
jae
test
sbb
sbb
lret
mov
push
mov
dec
dec
stos
sti
jnp
jb
sbb
not
or
wrmsr
mov
sbb
push
imul
mov
and
add
call
and
test
cld
pop
test
and
push
adc
fmul
mov
les
pop
mov
dec
xchg
mov
scas
cmp
xchg
sbb
inc
ds
push
out
add
out
lods
shr
cmc
dec
mov
pop
mov
mov
or
out
in
adc
push
push
pop
mov
imul
cmp
jmp
test
rcr
push
ror
push
popf
push
sub
sub
fmuls
sub
add
addr16
push
mov
imul
adc
mov
aad
icebp
test
add
leave
lea
push
jp
addr16
mov
sub
add
mov
cli
pop
popl
sub
data16
and
jmp
movsl
sbb
adc
aad
dec
mov
pop
and
mov
nop
and
addr16
push
addr16
pop
add
jg
js
in
sub
sub
daa
push
sbb
dec
jo
into
int3
inc
fiadds
jae
jne
sbb
push
and
mov
js,pt
or
test
clc
xor
and
dec
push
cmp
sub
mov
std
sub
xchg
or
hlt
xchg
push
push
xchg
add
dec
cmp
pop
lds
repz
es
pop
scas
pop
repnz
mov
push
es
push
xchg
add
push
popa
mov
sbb
jnp
mov
nop
les
mov
sub
pop
or
push
adc
inc
jnp
sub
sbb
or
in
push
and
push
dec
hlt
cli
ret
add
jmp
mov
scas
ret
cs
ret
mov
push
divb
push
add
rolb
fwait
push
mov
sub
jb
mov
in
jo
push
fnstcw
cs
dec
cmpl
mov
mov
or
adc
jl
xchg
mov
xorb
push
jmp
push
xlat
inc
lahf
jge
adcl
ficoml
ljmp
xchg
inc
inc
cmp
lock
push
out
imul
or
jl
xchg
pop
or
out
in
pop
lock
adc
and
mov
or
jl
in
leave
dec
call
push
inc
cmp
xchg
adc
roll
mov
dec
pop
nop
arpl
mov
clc
testb
sub
jmp
out
mov
pop
negl
imul
stos
jnp
mov
inc
mov
pop
push
mov
inc
out
popa
les
cmpsb
adc
xlat
ljmp
rolb
scas
shlb
pop
dec
dec
test
xor
rorb
pop
mov
add
arpl
push
push
pop
mov
add
xor
fs
mov
push
aaa
jmp
or
xor
clc
addr16
mov
ret
or
repz
jne
test
loopne
or
out
mov
ficoms
or
loopne
imul
aam
jo
fdivr
add
insl
pop
jbe
int
adc
or
mov
push
xchg
scas
xor
push
mov
cmc
add
call
pop
scas
inc
xor
jmp
jmp
subl
in
bound
push
jmp
cmp
push
xor
jmp
mov
or
xor
pop
cmpb
cmc
mov
popf
lret
pop
jmp
movsb
cs
xor
hlt
ds
pop
or
movsl
sub
pop
into
adc
ret
jne
std
adc
mov
imul
or
cwtl
inc
jp
xchg
aad
in
inc
fnstcw
xor
outsl
rcrl
cmc
mov
les
or
lcall
or
pop
decl
mov
sub
inc
add
or
cld
mov
ljmp
shrb
cmp
xchg
pop
add
jmp
leave
nop
cltd
cs
inc
js
jl
pop
sub
pop
cmp
inc
or
sub
loopne
xor
adc
xchg
add
xor
js
daa
sub
pop
lcall
add
pop
pushl
lods
enter
mov
add
lock
mov
inc
in
mov
push
pop
seto
xchg
jl
and
push
push
inc
pop
fmull
mov
daa
ficomps
sub
fsubs
pop
push
jge
gs
sub
je
sbb
lds
movsl
inc
push
mov
jp
jo
out
lahf
rorb
push
push
test
rcll
pushf
rorb
xor
pop
add
pop
or
push
fstps
sbb
stos
insb
adc
adc
fsubrl
pop
adc
xor
push
cltd
cmp
or
jg
pop
scas
imul
mov
sub
xor
or
ffree
movsb
add
in
sbb
fsts
out
inc
push
pop
push
push
stos
std
inc
pmuludq
sar
push
jns
push
or
sub
or
xor
es
pop
push
mov
adc
push
or
incb
rcrb
jne
and
jmp
and
pop
jp
andb
imul
cmpsl
divl
xor
lcall
lahf
or
push
sar
jno
mov
rorb
mov
pop
adc
lods
ja
out
add
mov
jecxz
jne
add
test
xor
xor
sti
jmp
jmp
dec
imul
add
bound
pusha
dec
in
mov
popf
out
or
out
int
push
cltd
pop
movsb
das
pop
ret
sahf
pusha
sbb
xor
sub
or
aam
add
icebp
mov
jne
ret
adcb
movsb
pop
pop
jne
out
inc
es
and
mov
sub
faddl
xchg
push
mov
pop
in
daa
les
dec
pop
out
pop
fadds
or
nop
push
cmp
pop
dec
sbb
iret
rcrb
adc
mov
mov
movsb
push
rolb
aaa
std
push
push
cs
add
shlb
lret
add
enter
daa
cmp
str
fdivs
popw
inc
jo
faddl
xor
sub
cmc
movsb
add
fcoml
shlb
mov
pop
popa
jmp
xchg
inc
and
jmp
sub
or
lock
mov
sub
pop
cmp
ret
push
cmp
pop
insb
je
lods
hlt
hlt
sub
movsb
popa
in
jns
imul
jmp
cmp
sub
test
inc
or
and
mov
xchg
inc
subl
loope
jmp
mov
lods
stc
or
xor
je
js
mov
dec
imul
sub
addr16
xchg
in
adc
push
add
adc
iret
sub
add
rorb
sub
and
popa
cld
push
pushf
add
inc
pop
push
cmc
cmpsb
xor
pop
sbb
adc
jbe
test
jne
pushf
sub
daa
out
cli
push
data16
pop
mov
fsubs
cmp
in
rorl
fucom
fsubr
jl
orb
push
repz
imul
fs
sti
mov
xchg
jno
testb
imul
inc
xchg
and
sbb
push
jle
cmp
push
imul
sbb
jb
mov
xor
mov
sbb
or
inc
notl
jecxz
in
mov
insl
cmc
mov
dec
add
rcll
sti
dec
push
fs
add
xchg
or
add
mov
mov
sbb
and
popf
xchg
mov
das
inc
jp
bound
jmp
andb
inc
sarb
pop
xor
or
xchg
fists
and
dec
add
cmp
std
jb
popf
inc
adc
mov
mov
add
rolb
jl
xlat
jmp
ret
xchg
stos
subb
icebp
stos
sub
out
xchg
aas
sub
push
out
mov
addr16
push
jae
xchg
add
cmpsb
in
outsl
cmp
rorl
add
adc
cmp
pop
sbb
sbbl
push
pop
xchg
pop
xchg
add
sbb
mov
dec
dec
mov
xchg
or
or
call
ret
jo
dec
push
and
ja
and
add
xor
and
scas
dec
or
jmp
xchg
mov
mov
ljmp
fstl
clc
aas
movsl
pop
pusha
inc
dec
jle
cmpsb
jns
sub
push
outsl
test
jmp
ret
or
outsb
xchg
sahf
or
jo
loope
idivb
scas
cmp
inc
sbb
push
pop
inc
ret
or
fcomps
std
and
popa
cs
mov
sti
add
jle
addr16
xor
es
pop
push
loop
adc
jnp
aad
out
jo
lds
and
add
pop
aas
shrb
out
stc
in
aad
jnp
sub
jno
mov
jne
jmp
mov
in
push
or
pop
xchg
lcall
jns
dec
incb
xor
icebp
es
mov
pop
inc
loop
nop
adc
add
sub
inc
push
in
mov
imull
jecxz
ret
insl
or
or
push
pop
mov
jge
push
andb
push
movsl
push
loope
imul
in
jbe
and
sbbb
and
pop
push
mov
hlt
xchg
pusha
sbb
mov
jno
adc
insl
adc
cmc
mov
or
shll
and
mov
shrb
or
pop
and
push
fwait
mov
pop
mov
mov
sbb
sub
push
push
or
add
ljmp
add
and
loope
shrb
mov
or
movsl
and
lods
rcrl
in
insb
inc
dec
aam
stos
into
and
cli
sub
mov
aad
dec
stos
rclb
jne
test
cld
fnstcw
arpl
cmp
mov
jg
add
mov
ret
pop
mov
lahf
bsf
stc
stc
js
jmp
jge
orb
pop
int3
sbb
sti
push
shl
sbbl
xor
cmp
or
adc
mov
and
cmc
xchg
adc
scas
cmp
aad
pusha
js
loopne
clc
mov
mov
das
popf
mov
pop
push
mov
mov
mov
jp
jp
enter
mov
xor
call
in
loopne
jo
inc
push
int3
loop
in
pop
jecxz
push
or
movsb
push
pop
sti
add
and
lcall
scas
cmpsl
or
scas
and
ljmp
mov
shr
fcmovbe
pop
xchg
mov
loop
popf
xor
loope
mov
push
ja,pn
arpl
mov
push
imul
xchg
or
and
adc
or
pop
in
mov
jno
lods
or
dec
and
sub
jbe
lea
cltd
mov
dec
shrb
addl
sti
xlat
sbb
dec
pop
repz
mov
add
xor
shrl
lea
fs
in
jmp
shll
or
lds
push
sub
mov
mov
mov
push
flds
fisubs
aam
jb
or
dec
add
cmpxchg
scas
imulb
popf
mov
mov
leave
inc
dec
pop
dec
scas
mov
mov
jl
test
stos
sub
add
pop
daa
and
push
xor
movsl
pop
int3
mov
das
stos
jae
cmp
push
scas
aam
daa
jle
add
push
mov
dec
fcomip
iret
jle
jmp
jmp
inc
out
mov
adc
out
sar
call
jnp
rclb
cli
push
or
sar
inc
popf
pushf
sbb
pop
cwtl
mov
aas
lods
push
xchg
mov
dec
inc
inc
jo
addb
mov
aad
push
and
jbe
xchg
inc
mov
jmp
fnstenv
ficoms
mov
and
mov
push
cmp
fdiv
loope
sub
mov
jle
fidivs
out
insl
cmp
mov
sbb
aad
xor
add
stc
push
or
pop
mov
test
rcrb
cli
test
mov
jmp
std
rol
mov
xchg
mov
push
pop
sti
jo
mov
mov
les
jmp
repnz
mov
mov
push
push
mov
imull
dec
or
and
imul
push
push
pop
cmp
adc
aaa
inc
movsb
fiaddl
mov
add
add
sub
ret
ret
hlt
dec
push
pop
out
fsub
push
idivl
mov
insl
pop
xor
fisttpll
lret
stos
dec
lret
in
pop
and
add
jno
mov
jle
jnp
pop
call
add
mov
adc
movsl
add
out
fimull
mov
jnp
daa
mov
fidivrs
fsin
jg
int3
push
pop
enter
ljmp
je
fildl
popf
jp
dec
sbb
cmp
sub
in
push
lods
and
dec
add
lea
ds
je
jmp
sub
aas
popf
jbe
and
bound
jp
pop
pop
pop
inc
or
enter
subb
je
push
xor
fidivrl
data16
rorb
insl
add
push
ja
cld
inc
idiv
push
adc
inc
in
mov
or
mov
push
push
jmp
jecxz
pop
mov
cwtl
cs
xchg
mov
ror
push
mov
inc
xchg
xor
add
ja
pop
push
stos
out
shlb
nop
sahf
add
aas
add
dec
nop
fbld
je
or
js
mov
push
fmull
das
fisubs
andb
ja
mov
xorb
addr16
int
inc
and
test
stos
lahf
mov
shl
outsl
xchg
adc
push
cmp
add
jnp
mov
popf
push
cmp
vpshufd
push
mov
popf
push
pop
pop
jmp
nop
add
jle
pop
rcll
jmp
push
bound
fcompl
and
fldenv
mov
xchg
loop
and
es
or
pop
pop
dec
xchg
orl
sbb
rcrl
mov
add
pop
push
imul
mov
ds
xchg
cld
lods
idivl
adc
xor
add
pop
jg
stos
jge
push
sbb
pavgb
clc
mov
test
repnz
cmp
sti
les
testb
push
cmp
xchg
mov
mov
xchg
lds
outsb
dec
cmpsb
lock
xchg
mov
int3
leave
out
aam
imul
sub
jmp
mov
pop
cmc
cmp
add
cmp
adc
dec
repz
add
sahf
jne
push
sub
in
add
or
cld
jns
adc
jecxz
push
pushw
add
jmp
pop
jge
adc
dec
lods
mov
mov
xchg
push
stos
mov
inc
jle
pslld
lret
repz
cmpb
xor
mov
mov
xchg
jmp
lret
push
stos
insb
lcall
cwtl
and
outsb
inc
pop
pop
sub
pop
test
adc
movaps
out
fistl
dec
mov
push
jne
les
mov
cwtl
ret
and
jmp
and
js
pop
xchg
mov
sub
lods
repnz
scas
clc
stos
aad
mov
add
jbe
or
cmpl
shl
mov
push
jmp
push
adc
ljmp
loopne
testb
add
out
adc
pusha
out
xor
xlat
and
pusha
orl
add
inc
pop
push
inc
ror
repz
pop
dec
fstl
and
inc
jo
adc
and
pop
mov
fwait
jg
inc
lret
in
xchg
sbb
popa
xor
jle
cld
lods
jp
lahf
jb
sub
testl
adc
xor
inc
jno
sbb
mov
enter
insb
lock
sub
fdivrl
push
dec
ss
ds
testb
adc
add
popa
add
lock
inc
add
pusha
cmpsb
xchg
andb
subb
xor
jl
or
or
sbb
xor
pushf
test
xchg
std
cmp
mov
addl
orb
xor
adc
inc
rclb
stos
shl
ss
or
sbb
add
movsb
repz
leave
fincstp
cmp
sbb
ret
movsl
lahf
lock
or
add
clc
mov
mov
aas
mov
sbbb
dec
sub
mov
push
or
mov
ret
test
popf
push
fs
maskmovq
imull
and
in
lret
andb
adc
jl
mov
mov
push
flds
mov
xchg
cs
dec
push
pop
arpl
adc
shrl
cmp
jae
and
sub
loop
add
jge
sub
pop
fwait
xor
mov
shr
dec
add
pop
jo
pop
dec
fcmovne
fisubs
lock
fbld
pusha
ja
jmp
sbb
fiaddl
dec
decb
push
jmp
and
jae
xchg
stc
mov
mov
enter
repz
fs
xor
push
aad
fisubrs
aad
inc
aad
push
mov
andb
xor
data16
xor
lea
test
and
out
ret
xchg
fcom
test
pop
add
les
mov
pop
inc
mov
mov
data16
jnp
out
sbb
loope
jnp
stos
xor
test
fnstenv
or
jbe
cmp
cmp
nop
or
xchg
lods
jo
sbb
push
nop
xchg
or
add
push
mov
or
xor
jae
leave
fs
mov
adc
std
add
push
mov
or
xlat
rorl
sbb
pop
adc
inc
movsb
add
xor
pop
xorb
sub
xor
lea
lock
add
sar
xor
jnp
pop
jg
dec
fdiv
pushf
cmp
jge
imul
fwait
and
ljmp
outsl
ja
push
push
sti
in
inc
push
push
rcll
subl
test
repz
outsb
lds
aad
sbb
jmp
xor
icebp
cmp
not
shl
push
push
into
jo
or
iret
dec
sbb
or
aas
arpl
jmp
pop
jno
jp
imul
add
ret
imul
popa
pop
push
lods
inc
push
jo
cmp
xor
jb
fwait
cmp
repnz
sub
adc
sub
cmp
pop
pop
jmp
in
or
push
fcomps
testb
mov
repz
sbb
fcompl
dec
rorb
test
outsl
fbstp
push
inc
mulb
pop
inc
imul
jb
sbb
xchg
sbb
jp
pusha
cmp
jbe
add
jmp
pusha
sbb
or
outsb
insl
xor
iret
mov
inc
enter
fdivs
test
jmp
add
movsl
jp
and
sbb
repz
jmp
mov
mov
sub
jmp
jns
xor
je
add
sbb
cmp
subl
xchg
lea
not
adc
xchg
mov
push
add
iret
jmp
std
lret
sub
add
pop
or
cmp
jg
add
jo
popf
add
fucompp
xor
pop
das
cli
and
into
add
push
sub
pop
mov
add
sub
dec
push
and
sub
inc
icebp
leave
test
or
push
add
out
aad
gs
adcb
and
adc
jg
test
push
sub
and
jns
xor
and
jbe
out
test
sub
jmp
push
dec
add
lahf
sub
popa
pop
inc
add
dec
ret
cltd
inc
arpl
jge
cli
fbstp
add
push
pop
mov
andl
pusha
sahf
push
xor
pop
sti
inc
in
sub
fadds
inc
out
lea
sub
pop
or
filds
mov
sub
push
fldenv
pusha
inc
jb
dec
dec
inc
mov
xor
add
mov
mov
jb
sti
xchg
mov
push
sub
mov
in
mov
mov
repnz
push
in
or
idivb
dec
push
cmc
addb
pop
jge
rolb
pop
pop
jmp
out
pop
mov
jae
xchg
mov
dec
mov
bound
xchg
sub
outsb
pop
or
ss
fcomps
mov
scas
cmp
cmp
push
arpl
int3
pop
mov
mov
test
and
cmpsl
pop
push
push
je
mov
jmp
int3
mov
xchg
jmp
stos
enter
inc
outsl
cld
sbb
shlb
pop
daa
xlat
add
mov
add
xchg
push
mov
jo
rcrl
sub
fdivrl
into
ret
jne
adc
xchg
lea
and
push
mull
dec
js
mov
mov
push
in
mov
dec
cs
add
pop
es
adc
call
ffreep
mov
xchg
mov
or
add
push
cmc
xorb
mov
jmp
inc
sub
rcll
jl
pop
jmp
notb
adcb
aam
jmp
or
xor
cld
sbbl
push
mov
xor
pop
mov
icebp
mov
and
sub
inc
xor
or
and
fisttpll
sbbl
push
pusha
repnz
imul
xchg
out
scas
add
mov
in
and
outsb
rclb
outsb
cld
incl
and
push
adc
add
xor
or
and
sbb
sub
ja
fs
jmp
or
es
cld
les
pop
and
jecxz
leave
pop
loopne
cwtl
inc
cwtl
lret
or
xchg
dec
push
mov
xor
pop
push
movl
sbb
pop
jge
sbb
pop
fisubl
repz
call
sub
mov
bound
mov
fmull
enter
xor
push
insb
fisttpl
push
push
or
cwtl
xchg
jle
push
insl
pop
adc
fisttpll
mov
cmp
or
mov
dec
cwtl
xchg
mov
or
xchg
inc
mov
mov
xor
and
push
mov
push
popf
add
adc
push
lock
sub
fstpl
pop
adc
ret
add
fistps
scas
mov
int
jmp
cmp
and
out
dec
push
popf
and
adc
add
xor
adc
add
loope
add
jmp
inc
and
ljmp
cmp
outsl
push
sti
push
mov
jns
gs
mov
stos
inc
loopne
jb
lock
push
gs
cld
xor
loope
and
add
stos
std
lret
push
adc
dec
inc
aam
inc
std
adc
jmp
pop
jle
inc
popf
dec
stos
into
orl
shl
dec
stos
enter
das
and
scas
mov
in
inc
adc
dec
jp
or
jnp
fildl
mov
inc
add
pop
pop
roll
jp
inc
xchg
push
dec
pop
add
add
mov
adc
mov
sbb
icebp
dec
das
pusha
out
sarb
jl
push
or
push
gs
jmp
jle
pop
add
ret
enter
mov
mov
jge
xchg
pop
jmp
xchg
xchg
ret
pop
out
lret
xchg
movsb
movsl
data16
loop
shrb
popf
jp
lods
dec
dec
adc
shll
ljmp
sbb
add
out
loopne
sub
inc
sahf
gs
aaa
adc
jp
push
push
fiadds
and
jmp
inc
mov
push
push
test
ret
sbb
pop
pop
mul
xchg
cwtl
test
add
mov
xchg
or
clc
add
imul
and
mov
jo
test
add
cli
jno
push
jmp
add
popa
inc
xor
mov
rcl
pop
jecxz
xor
movb
dec
add
sub
sub
cmp
xchg
hlt
stos
xor
add
sub
cmp
jnp
rolb
pop
push
sub
jmp
rorl
pop
jl
stc
iret
push
inc
andl
cmpl
sub
mov
or
dec
ds
pop
jmp
scas
addr16
fimuls
test
sub
xor
and
mov
adc
xchg
lret
dec
sbb
jne
fisubrl
in
in
fucomip
push
and
mov
mov
mov
aam
lahf
jne
dec
mov
mov
adc
mov
fwait
sub
jmp
or
ja
test
mov
iret
inc
outsb
push
mov
or
or
sti
mov
push
mov
cwtl
sbb
filds
dec
hlt
or
pop
scas
mov
aad
sub
push
ficomps
xchg
fists
mov
push
pop
mov
pop
pop
std
or
iret
pushf
sbb
and
and
negb
sub
sbb
shlb
test
andb
loopne
mov
sbb
sbb
or
push
in
fisubs
sub
push
pop
out
adc
dec
in
jb
lods
adc
pop
inc
mov
adc
call
pop
inc
mov
jns
arpl
pusha
imul
or
jl
dec
xchg
mov
int
pop
popf
pop
cmc
pop
lods
sub
and
add
lds
add
and
addb
and
xchg
ja
add
clc
test
push
mov
cwtl
jbe
out
pop
adc
sbbb
pop
sbb
pop
jmp
sub
ds
and
test
inc
inc
sub
outsl
mov
test
in
out
orb
push
neg
stos
add
jle
cmpsb
mov
xchg
test
sahf
cmpsl
or
jl
xor
jno
add
adc
cmp
add
push
es
mov
addb
push
jg
add
add
push
popl
sub
xlat
pop
stos
sub
adc
mov
push
shrl
mov
cs
test
sarl
insl
mov
add
out
loope
and
xor
jno
add
popa
outsl
jo
jmp
movsl
idivl
xchg
nop
loop
sbb
jmp
mov
sbb
repnz
add
jne
stos
aaa
xchg
xchg
push
add
and
xor
lods
jno
idivb
int
daa
mov
ljmp
in
mov
sub
test
in
mov
jge
mov
movl
adc
push
ficompl
dec
sub
mov
ljmp
ja
xor
or
push
arpl
ret
lods
lods
les
and
rcll
mov
xchg
add
xor
xor
rorb
sahf
sahf
dec
stc
imul
push
pop
jmp
mov
fwait
addl
out
jp
js
sub
jnp
mov
push
fisttpll
cmp
aam
out
cmp
mov
stos
test
decb
dec
lds
nop
stos
adc
add
jno
sbb
cwtl
popa
rorl
sub
mov
movsb
roll
ret
push
lds
inc
xchg
and
jge
clc
out
jb
cltd
out
cmp
adc
scas
popl
cmp
mov
jle
sbb
imul
call
cli
dec
cmpsl
pop
leave
lds
in
jmp
sub
inc
imul
and
test
fs
lods
xchg
pop
and
and
insl
aam
push
outsb
add
xorb
into
add
jns
and
add
sub
cmp
aam
inc
jge
pop
xchg
orl
mov
dec
jo
lahf
xchg
jb
stc
vpackssdw
cwtl
adc
jns
xor
or
outsb
xchg
adc
sarb
roll
fldenv
or
pop
jge
not
mov
and
ret
jbe
cld
jo
or
test
mov
pop
jmp
cmc
ljmp
fldl2t
and
test
rorl
clc
jne
add
push
jmp
outsb
nop
sbb
enter
mov
jp
push
or
add
jecxz
adcb
gs
dec
aas
add
push
jmp
pop
test
mov
cmpsb
mov
push
mov
jae
out
adc
add
aad
push
xor
or
fnsave
nopl
mov
repnz
cmp
sub
dec
and
daa
dec
cld
mov
xor
pop
mov
cltd
dec
in
sbb
jbe
je
adc
lahf
add
pop
cs
pop
dec
sbb
pushf
loop
cmc
icebp
vphaddubq
fcomi
lds
popf
cli
roll
out
add
es
mov
push
mov
dec
das
pop
or
sbb
dec
stos
xchg
jno
adc
out
test
cmpsb
mov
je
and
dec
cs
cld
jle
inc
lods
movb
lds
std
sub
mov
shrb
and
cmp
das
adc
add
push
arpl
push
xor
dec
in
mov
or
mov
pop
ss
cmc
es
inc
and
pop
jno
or
movsb
xchg
dec
lock
popa
and
dec
xor
jb
add
test
xchg
add
and
xchg
cwtl
call
iret
jge
icebp
mov
scas
ret
push
jl
fsubp
jp
inc
pop
mov
sbb
add
pop
jbe
cmp
pop
mov
testl
push
repnz
pop
jle
sbb
dec
push
mov
sti
shl
add
add
mov
les
fdivrl
into
inc
lock
jns
es
pop
not
mov
adc
inc
enter
pop
test
out
or
mov
adc
adc
mov
push
loope
xchg
cmp
jge
cld
pop
add
pop
mov
jbe
push
test
loopne
cmc
insb
rorb
dec
push
pop
sub
and
jo
shl
sti
cwtl
adc
cmp
bound
dec
push
cmc
push
xor
mov
mov
fcoml
xlat
loope
jg
out
out
rorb
push
insb
imul
rorb
dec
mov
pop
aad
and
push
add
arpl
jle
cli
ret
stos
ja
rolb
push
dec
or
js
ss
adc
or
xchg
mov
pop
dec
out
les
sub
adc
sbb
test
mov
mov
movsl
pop
loop
aam
test
int
rolb
ljmp
mov
packsswb
cli
xchg
pop
or
sub
mov
dec
and
and
and
or
mov
out
addl
aas
add
out
imul
cmp
addr16
jae
scas
ja
inc
jmp
jp
out
mov
push
jnp
jmp
push
xchg
or
es
popa
fcomp
aas
adc
dec
xor
dec
cs
cmc
push
arpl
sub
daa
dec
inc
jl
jo
pop
mov
add
adc
cmp
xor
dec
push
sbb
js
sbb
cs
jnp
mov
into
jge
push
jbe
pop
jno
adc
xchg
or
or
add
sub
mov
fsubr
jnp
cmp
ror
inc
out
aaa
push
mov
cltd
out
xchg
gs
ss
xchg
lret
pop
mov
add
xchg
nop
enter
push
mov
jmp
add
sub
or
push
sub
cld
ljmp
mov
cli
sbb
sbb
pop
mov
mov
out
sti
push
nop
jnp
pusha
pop
es
xor
push
jge
clc
in
loopne
jb
pop
adc
lahf
mov
push
imul
push
and
mov
and
adc
dec
shrb
call
and
orb
cli
inc
add
inc
and
xchg
mov
jae
pop
pop
add
sub
mov
or
mov
dec
push
jmp
aas
enter
mov
mov
test
clc
cmp
mov
pop
mov
inc
mov
and
loope
cmp
ljmp
mov
adc
push
dec
leave
cmc
rcll
insb
ljmp
call
fcmovb
push
mov
mov
add
idiv
loopne
hlt
pop
xorb
in
xchg
or
hlt
inc
push
imul
shrb
add
push
add
xchg
pusha
arpl
loop
test
mov
xor
pop
pop
adc
dec
aas
sub
mov
incl
and
xchg
push
push
push
add
mov
xlat
push
outsl
rol
mov
push
push
mov
jl
mov
jns
sub
repz
in
sub
add
fbld
or
mov
mov
push
xor
add
lods
jbe
imul
inc
lods
out
adc
pop
mov
push
mov
mov
and
subl
out
mov
orb
add
fstpt
sub
and
adc
inc
gs
sub
cmc
push
jecxz
pop
or
std
cwtl
les
add
or
adc
pop
add
push
jmp
iret
rol
out
sbb
mov
inc
cltd
adc
adcb
mov
add
shrb
lock
enter
repz
xchg
jb
add
inc
pop
imul
sahf
mov
ret
push
fmuls
or
jmp
push
stos
ja
pop
imul
xor
ret
dec
sub
mov
sbb
dec
ljmp
divb
bound
sub
xchg
sub
nop
dec
mov
repz
ljmp
adc
mov
adcb
xor
adcb
lds
inc
cwtl
and
jb
xor
pop
inc
addr16
push
cwtl
xchg
testb
add
push
and
push
cmp
adc
loop
xor
cmp
pop
in
lds
or
mov
ljmp
sbb
movsl
jnp
clc
pop
dec
std
cwtl
mov
fidivs
add
sbb
push
push
jp
xchg
fbstp
clc
pop
das
pop
les
add
dec
int
mov
add
cmpsb
out
and
aaa
add
cs
xorb
jmp
dec
pop
mov
sar
mov
out
add
jae
js
cmp
imul
add
sbb
or
jmp
push
or
push
pop
outsl
sbb
inc
add
jp
int
cmp
addr16
jmp
and
inc
stc
mov
pop
or
dec
add
mov
or
mov
fwait
daa
dec
and
test
ljmp
sub
fstpl
xchg
mov
jp
in
xchg
and
add
mov
jge
mov
std
jmp
mov
pusha
cs
push
movzwl
test
pop
loopne
jno
lcall
mov
jmp
mov
sti
pop
into
cwtl
sbb
sub
cmp
sbb
pop
js
lret
add
add
jo
clc
cmp
repnz
and
stos
out
rcrl
or
gs
add
pusha
cmp
jae
out
and
dec
adc
or
push
jbe
push
sti
or
nop
xchg
je
nop
ret
es
ds
jecxz
leave
mov
add
pop
xchg
push
xor
js
adc
ljmp
inc
pop
loope
int3
push
clc
mov
mov
mov
mov
push
or
aaa
jge
sbb
or
xor
pop
pop
pop
jae
mov
aam
xchg
das
stc
mov
or
push
daa
inc
ret
xchg
dec
add
sti
cmp
push
adc
jmp
mov
sub
adc
lret
sbbl
repz
movsl
sti
add
jo
pop
push
push
xchg
std
and
mov
push
adc
sarl
and
jo
mov
decb
pop
cmpsl
xchg
jmp
out
fs
mov
mov
mov
mov
jo
pusha
into
sbb
or
gs
inc
cli
pop
outsb
stos
fwait
mov
mov
aad
enter
adc
clc
sub
nop
test
mov
inc
in
pop
ja
jo
mov
or
adc
or
cmpl
adc
enter
fmull
std
and
pop
aam
scas
sub
cmp
or
add
pushf
jo
out
jmp
dec
push
fimuls
pop
push
mov
imul
sbb
repz
or
pop
sti
nop
lea
inc
inc
pop
jmp
jb
repz
stos
mov
dec
add
and
fcoms
sar
push
mov
aam
jno
cs
jecxz
int
adc
neg
adcb
add
rcrb
dec
cmp
jp
mov
sub
sub
shll
test
xchg
adcl
scas
mov
lahf
xchg
mov
es
adc
sahf
iret
das
fwait
inc
or
xchg
adc
or
and
mov
js
and
aam
pop
std
jae
imul
jg
xchg
in
mov
adc
and
rolb
daa
pushf
jg
jmp
cli
jl
jmp
cmp
xorl
mov
lret
call
or
sbb
jae
pusha
inc
negl
test
xchg
mov
and
and
mov
pop
sbb
inc
pusha
das
fistps
xchg
sub
xchg
or
bound
and
push
push
mov
inc
xor
or
fsts
lock
repnz
shlb
jmp
sahf
inc
repnz
outsl
jge
dec
call
lret
enter
lods
sub
push
ss
xchg
sub
xor
sti
add
outsl
push
or
mov
jmp
pop
sub
cmp
pop
xor
and
push
jp
xchg
and
or
or
out
jg
rorl
mov
jne
les
pushw
rcrw
ss
pop
fstl
jmp
jb
inc
dec
scas
mov
add
gs
call
cmp
loope
test
push
popa
aaa
mov
fcoms
xchg
push
inc
leave
jo
mov
pop
mov
mov
andl
outsl
icebp
mov
mov
or
jl
loop
sub
inc
sub
fsubrp
sub
inc
pop
push
sbb
fcmovu
push
in
push
pop
or
adc
aas
sbb
mov
lea
loop
bound
xchg
or
push
sarl
fwait
data16
daa
pop
js
xchg
pop
mov
out
mov
cwtl
jg
dec
daa
pop
ljmp
add
jmp
inc
leave
lods
pop
cmp
mov
xchg
add
lret
or
sub
sub
andl
xchg
out
cmc
in
inc
enter
jp
mov
xor
and
iret
mov
push
xor
pop
mov
sub
pop
xor
jmp
pop
sbb
gs
into
xchg
jge
out
sub
pop
inc
aad
clc
add
jecxz
aam
addr16
pop
inc
incb
pop
cwtl
push
loope
into
xor
popf
dec
pop
and
js
out
dec
push
and
jp
lock
bound
dec
inc
or
inc
sub
add
cs
sub
sbb
push
test
test
or
mov
add
lret
push
adcb
and
lahf
fldcw
imul
imul
push
cmp
mov
shr
push
dec
xchg
call
jmp
push
xchg
or
push
roll
sub
push
mov
add
fistpll
call
jmp
idiv
daa
icebp
pop
dec
rcr
add
jg
shl
add
or
jmp
mov
leave
leave
ds
cmp
punpckhwd
pop
mov
push
fsubs
stc
sub
outsb
or
insl
in
add
jmp
jle
mov
sub
sub
jle
lock
cltd
push
pop
jmp
cld
sbb
incb
insl
pop
or
push
fs
add
out
pop
jns
test
lock
push
jns
adc
rolb
sub
leave
or
outsb
mov
dec
xor
add
shr
add
aam
or
cmpl
pop
sbbb
push
inc
lcall
push
cmp
rorl
into
push
fld
mov
sub
mov
push
and
or
adc
mov
pusha
jmp
mov
push
subl
jmp
testl
icebp
dec
pop
add
subb
push
inc
cli
xchg
fisubs
dec
pop
xchg
jae
xor
aaa
cmp
outsl
push
rdtsc
fldcw
mov
into
popf
pop
jmp
push
fldl
push
nop
push
dec
fistps
jo
inc
jle
mov
dec
jb
xchg
mov
dec
xchg
xchg
adc
or
divb
sahf
lods
aaa
or
jne
push
push
push
fcomps
mov
out
cmp
pop
jb
movsb
sbb
sub
dec
cwtl
mov
shlb
sub
sub
movsb
test
jo
cli
loope
and
mov
jp
into
xchg
push
or
adc
sbb
icebp
pop
adc
mov
in
mov
out
or
rolb
push
clc
mov
sti
xchg
out
mov
scas
or
sahf
dec
sbb
add
mov
pop
sub
andl
sbb
dec
enter
pushf
enter
sbb
xor
pop
clc
icebp
dec
scas
das
sahf
or
not
dec
add
fldenv
dec
dec
cltd
das
pop
inc
inc
push
insb
popa
pop
xchg
ja
cs
test
xchg
ret
and
scas
rorl
imul
xor
and
pop
lahf
push
xchg
xor
loop
mov
loope
pop
mov
jb
decl
lods
pusha
sbb
or
mov
inc
pop
gs
add
add
inc
test
fiadds
sub
xor
shrb
and
or
and
cmp
out
filds
das
pop
push
loopne
mov
dec
add
pop
hlt
cs
or
adc
insb
dec
or
adc
push
les
mov
or
clc
outsl
testb
mov
inc
xchg
mov
dec
jmp
mov
js
outsl
add
push
pushl
pop
test
jg
dec
and
les
shll
icebp
inc
add
dec
ljmp
int3
push
add
xor
sub
xchg
or
pop
pop
ljmp
add
out
add
push
dec
nop
pop
pop
cmp
and
sbb
int3
mov
sub
push
or
or
test
or
add
sbb
push
mov
mov
daa
xor
out
mov
pop
jmp
orb
in
sbb
xchg
in
push
push
pop
pop
adc
sub
je
pop
mov
cwtl
addl
sub
daa
sub
cmp
sub
aad
iret
push
or
pop
das
repnz
mov
dec
sub
adc
aaa
punpckhdq
xlat
mov
or
inc
pop
loop
dec
mov
jecxz
jp
jnp
je
popa
repz
add
jmp
adcb
rcrb
je
scas
ret
pop
outsb
daa
adc
add
int
mov
xchg
mov
sarl
sahf
sbb
push
in
adc
stc
inc
mov
mov
sti
mov
xchg
xor
xchg
rcrl
cmp
div
push
pop
daa
or
outsl
push
jnp
fsubl
jns
dec
jmp
cmp
mov
sub
pop
jg
dec
out
or
or
repz
xchg
fdivl
nop
push
in
les
pop
mov
xor
add
mov
pop
fisttps
push
aad
fldenv
mov
sub
pusha
inc
adc
not
jo
sub
dec
or
mov
cmc
xchg
mov
push
mov
or
or
mov
imul
in
jl
rcrl
lcall
and
mov
cld
stos
out
ja
enter
mov
lret
in
dec
mov
pop
rclb
sti
fisubrl
push
repnz
scas
bound
sti
pop
cs
inc
rcrb
pop
mov
testb
popf
and
sub
mov
dec
push
dec
out
lods
or
pop
add
je
adc
sarb
xor
mov
mov
sub
ret
aad
insb
or
das
leave
cld
jmp
les
or
sub
lods
movsl
push
mov
sub
mov
movsb
pop
jp
add
lret
cmp
push
mov
clc
mov
jmp
mov
subb
sbb
mov
gs
or
or
pop
or
cld
dec
or
daa
pop
push
jne
stos
adc
xor
fstpt
sub
push
icebp
sbb
test
xchg
ret
pop
pop
pop
loopne
xchg
mov
aas
movsl
cs
mov
or
addb
imul
mov
cmp
out
add
jmp
push
jmp
movsl
jg
lcall
dec
push
fnsave
add
test
shlb
mov
rorb
or
popf
fbstp
xchg
mov
mov
inc
pop
neg
add
mov
mov
mov
mov
jg
cmp
jo
dec
pop
cmpsl
xchg
push
sbb
aas
clc
ja
xor
push
ret
and
pop
mov
mov
push
into
jecxz
pop
repnz
leave
fcoms
dec
addr16
jp
lods
or
or
aam
movsl
cmp
cmp
int3
pop
sbb
mov
dec
inc
push
or
pop
add
rorb
push
adc
mov
mov
mov
into
or
xor
and
int
enter
rorl
aad
cmp
outsb
mov
adc
adc
mov
push
pop
aam
jnp
popf
cmp
cmpb
test
xchg
add
outsb
bound
fdivrs
bound
and
std
addb
and
mov
jg
enter
out
jnp
push
fisttps
cli
daa
cmp
mov
inc
lret
lret
push
xchg
and
ret
add
mov
inc
ret
pop
sub
dec
push
neg
or
dec
cmpl
pop
push
xor
cli
sti
hlt
fadds
mov
test
cmp
repnz
hlt
lret
clc
adc
lds
inc
jns
dec
xor
inc
bound
sub
xchg
mov
mov
add
mov
loope
aaa
mov
or
sub
adc
inc
or
push
mov
rcll
ja
pop
int3
out
rclb
push
inc
lds
push
jmp
inc
repnz
call
inc
cmp
push
nop
jg
push
shl
jbe
inc
rorl
push
and
arpl
bound
fdivrs
ret
xchg
cli
push
xor
loopne
dec
sub
fisubl
or
stos
or
fsub
xchg
cmp
scas
cwtl
add
mov
mov
add
popa
jne
cmp
or
adc
cmpsl
push
sahf
inc
ja
frstor
jbe
mov
jecxz
ret
lock
dec
dec
test
out
stos
cld
outsl
pop
stc
movsl
dec
sub
dec
pusha
fstps
idivl
sub
xor
and
je
repz
and
dec
ds
movsl
lahf
mov
enter
mov
out
jg
fcoms
pop
add
push
into
jl
mov
notb
popa
pop
lret
mov
fidivrl
out
pop
push
out
fsubr
push
jmp
sbb
sub
addr16
ljmp
insl
push
sub
or
in
mov
mov
in
dec
xor
loope
push
jp
cld
xor
pop
leave
std
add
mov
das
pusha
adc
lcall
pusha
clc
xor
nop
push
pusha
out
ret
sti
xor
sub
out
sbb
pop
adc
sbb
cs
lahf
xchg
inc
inc
adc
das
leave
ja
shll
aas
stos
rcl
jle
lods
das
cmc
adc
xchg
xor
shlb
loop
xchg
adc
dec
es
xor
pop
adc
xor
jnp
mov
daa
xor
daa
gs
scas
pop
nop
push
jmp
and
out
fcmovb
pop
jmp
mov
fadd
push
jecxz
push
push
push
aad
mov
mov
in
aad
pop
hlt
test
cmp
or
or
or
imul
std
add
push
add
lods
add
jne
add
inc
dec
and
mov
nop
sub
stos
notl
adc
or
adc
dec
adc
or
sub
jl
inc
xchg
jnp
inc
lods
or
fisttpl
push
push
sbb
xlat
enter
xor
addl
push
inc
add
andb
adc
xchg
fidivrs
fadds
pop
mov
push
add
out
add
roll
addl
adc
outsb
int3
add
and
dec
ljmp
cmp
add
nop
sbb
mov
add
adc
adc
jg
sti
mov
aad
test
adc
or
push
dec
mov
sub
and
xor
mov
lahf
insb
add
nop
cmp
out
add
add
jl
bound
in
add
push
xchg
jge
sub
addl
outsb
xorl
or
sbb
mov
or
jg
inc
add
incl
jae
call
and
and
and
scas
and
test
aam
and
lret
fldenv
popa
pop
or
jmp
dec
adc
sub
lock
aam
into
add
jb
mov
pusha
add
mov
mov
sub
movsb
inc
mov
les
push
add
outsl
or
mov
mov
push
nop
sub
les
outsb
push
jmp
mov
arpl
cmp
imul
pop
lret
mov
pop
clc
incl
pop
pop
jbe,pn
lds
je
and
mov
scas
movsb
iret
mov
jp
or
imul
cmpsb
pop
test
pop
stc
movsb
popa
sbb
xchg
test
jo
mov
repnz
adc
orb
mov
fcompl
or
leave
filds
inc
adc
mov
pop
mov
xor
mov
lret
scas
sub
mov
hlt
inc
test
push
enter
or
adcb
sbb
sub
sub
dec
inc
lea
add
mov
xchg
scas
out
sbb
pop
cmp
dec
mov
pop
mov
add
inc
adc
add
lcall
jmp
sub
or
data16
lea
cmc
sub
xor
or
test
inc
ret
in
adc
sti
jg
adcb
incb
push
mov
in
in
mov
je
pop
pop
or
push
add
clc
popf
mov
mov
int3
pop
push
or
push
dec
jmp
or
sub
or
pop
loopne
jmp
stos
call
mov
sbb
je
sbb
out
roll
sub
in
ljmp
mov
pusha
pop
xchg
ss
addr16
sub
jmp
push
cld
cmc
pop
mov
push
push
jmp
in
je
sbb
and
ljmp
in
jmp
inc
imul
push
int3
in
sub
or
test
sub
sbb
push
fldt
and
ret
mov
cmp
push
inc
cmp
sub
pop
jmp
repnz
pop
bound
pop
and
dec
inc
jo
ja
sbb
pop
stc
or
out
dec
xchg
and
xor
into
pop
jl
mov
jecxz
test
aaa
out
jo
pop
xchg
push
mov
xchg
dec
dec
jae
push
mov
cld
lea
mov
sub
lret
or
push
push
inc
jge
jecxz
pop
std
sbb
jge
add
dec
dec
sub
int
leave
push
pop
mull
mov
loope
insb
push
lahf
stos
adc
push
pop
stc
sub
xor
pop
push
mov
inc
mov
xchg
repnz
mov
mov
jb
dec
xor
or
adc
jae
mov
cmp
mov
shll
out
inc
data16
adc
sub
loopne
add
push
ljmp
push
adc
repnz
lods
sbb
push
repz
jmp
pop
push
cwtl
sub
xor
mov
repz
dec
push
and
rorb
popa
aam
adc
jo
mov
ljmp
xchg
testb
add
sub
jne
push
xor
loopne
push
cld
xchg
test
sub
cmp
or
mov
aaa
orl
xorl
or
push
scas
xor
enter
mov
adc
lretw
mov
jl
lods
mov
add
jmp
test
or
sti
or
or
jmp
rolb
je
lcall
popa
push
ret
call
or
push
push
push
jp
sub
mov
and
push
das
arpl
adc
popa
and
cmp
mov
push
jp
xchg
shrb
inc
fcomip
inc
pop
cmovo
pop
push
push
push
dec
dec
movsb
mov
push
out
mov
jmp
adc
jb
loopne
pop
ds
aaa
or
jns
imul
jmp
dec
inc
mov
faddl
add
setp
or
xchg
sbbb
and
aas
cmp
lock
fldl
adc
sub
adcb
xchg
cltd
inc
mov
jne
icebp
xor
jns
jmp
inc
mov
and
rcl
jecxz
dec
sub
js
stos
jmp
cmpsl
cmc
sbb
xchg
lock
in
jl
sbb
bswap
push
mov
xchg
nop
sbb
iret
push
gs
insl
or
int3
shrl
addr16
in
sub
xchg
pop
into
stos
inc
adc
sbb
in
mov
xchg
test
gs
sti
sub
negb
pop
clc
mov
mov
pop
push
sub
pop
and
pop
push
sti
andl
cli
leave
movsb
add
sbb
aam
sub
cmp
mov
jge
lock
cs
repz
icebp
orb
xlat
jns
adc
outsb
adc
or
xchg
sti
cs
adc
fucomip
sub
ret
mov
inc
subl
es
stos
out
dec
test
dec
xor
inc
mov
push
mov
pop
jge
dec
lea
aam
roll
or
dec
ret
mov
sub
cs
stc
aad
stos
jno
pop
lods
stos
sbb
jne
or
add
inc
push
adc
add
pop
pop
and
scas
test
jmp
sbb
push
lea
les
add
xor
je
add
xor
pop
jg
iret
xchg
push
out
fstpt
movsb
scas
xorl
xchg
imul
add
jle
lock
push
addl
sub
add
daa
xor
pop
scas
rolb
daa
lret
inc
cmp
pop
loopne
clc
xor
and
xchg
mov
lods
jno
push
in
sbb
or
das
rcl
sub
test
cmp
jne
xchg
pop
cmp
xor
fisttpll
or
push
push
and
cmp
push
add
movsb
pushf
mov
fisubs
or
inc
ljmp
push
add
std
pop
inc
push
mov
push
rclb
pop
jmp
pop
push
pop
fisubl
push
cmp
push
aaa
jmp
mov
imulb
mov
sub
xchg
add
jg
push
jbe
push
out
jmp
add
mov
add
pusha
lea
jb
push
add
push
popa
cwtl
adc
out
add
mov
notb
popa
sbb
dec
push
cld
cltd
in
push
sub
cmc
out
cwtl
jle
dec
movsl
jp
jmp
and
or
cltd
inc
mov
jmp
add
shlb
xor
pop
addb
fcoms
mov
popf
pop
sub
rolb
inc
or
lahf
ret
mov
or
cmp
out
or
sbb
dec
in
mov
pop
pop
lock
jbe
push
ret
pop
fs
repnz
jmp
sbb
jo
mov
and
aad
fs
mov
or
or
adc
out
aaa
sub
mov
or
hlt
pop
scas
imul
jmp
fisttpl
jmp
stos
and
pop
sub
bound
bound
shlb
stos
orb
adc
push
ljmp
ja
les
or
mov
mov
mov
mov
and
push
mov
sub
cli
adc
jl
das
aas
jb
ds
out
mov
pusha
sbb
jns
push
sub
fs
data16
cmp
add
and
sbb
rorl
sbbb
jle
xor
arpl
xchg
in
cltd
movsl
xor
popf
shlb
mov
lret
test
jo
lds
push
pushf
xchg
push
add
lret
jp
je
cli
lods
mov
pop
aad
movsl
mov
hlt
dec
xchg
jg
inc
mov
pop
repnz
test
ret
insb
jp
xchg
lahf
or
loopne
lcall
pop
mov
push
push
out
shrl
movsb
inc
push
jo
idivl
dec
jmp
add
sub
dec
in
adc
pusha
or
jle
sub
push
pop
fcmovnu
pop
stos
or
je
in
lahf
add
sbb
mov
jb
push
pushf
mov
mov
xchg
call
mov
add
jle
and
std
cmpsl
push
pushf
sub
sub
mov
stc
cmp
sbb
jnp
inc
push
push
popa
adc
jno
orb
cmp
fstps
jmp
xchg
cmp
add
sarb
mov
xor
imul
test
xorb
std
cmp
dec
mov
adc
icebp
jmp
test
jmp
or
and
and
sub
test
or
xor
pop
hlt
jnp
xor
sbb
outsb
add
shl
sub
out
fldl
lock
test
inc
mov
jbe
jmp
repz
lret
lods
lods
cmp
dec
jle
cs
shrl
rcrl
imul
add
out
rorl
cmc
jbe
cmp
add
adc
stos
sarl
dec
mov
pop
cmpsb
ja
mov
and
in
addr16
adcb
rclb
inc
xchg
nop
roll
inc
mov
aam
inc
sbb
and
add
sub
push
jp
scas
mov
orb
jmp
outsb
in
lcall
mov
pop
shrl
xchg
sub
add
fisttpll
cmpsb
pop
sbb
dec
or
jne
andl
loop
add
aas
std
fsubs
and
mov
test
mov
inc
les
call
iret
movsb
scas
mov
fprem1
mov
lods
icebp
cmc
stos
je
cli
cwtl
or
aad
push
push
fs
xchg
mov
xchg
fwait
pop
pusha
or
outsl
dec
sahf
and
push
adc
xchg
rorl
bndcl
add
lret
in
cmp
shrl
pusha
add
sub
dec
int
sbb
cmp
lret
cmc
jne
sbb
test
xchg
pop
add
add
pop
mov
mov
mov
mov
sbb
repz
adc
jb
cmp
inc
stos
mov
fdivrs
lods
and
sub
mov
cmp
jp
push
inc
add
fs
call
sbb
push
mov
mov
mov
icebp
imul
jmp
mov
xorl
mov
pop
mov
mov
out
or
mov
mov
adc
push
popa
push
insl
div
es
rorl
mov
mov
stc
pushf
orl
repnz
add
test
js
and
aas
mov
dec
pop
cld
push
fisubrs
pop
or
mov
fstpl
das
sub
pop
lret
sub
inc
ja
addr16
push
or
adc
sub
pop
mov
sbb
daa
push
fmull
mov
shr
daa
mov
push
pop
orb
xlat
jecxz
data16
testl
les
jmp
sub
sub
add
jns
loope
and
push
sbb
jl
movsb
and
or
adc
jns
test
and
mov
orb
or
clc
sbb
xchg
cli
icebp
jg
pop
jns
mov
pop
mov
call
inc
push
repz
dec
mov
sar
dec
add
jo
mov
fldcw
pushf
lahf
insb
mov
popf
test
test
fcompp
add
or
movsb
cmp
dec
faddl
loopne
mov
mov
inc
imul
js
add
or
mov
jmp
dec
or
jno
mov
and
mov
mov
mov
xchg
shlb
sar
icebp
clc
mov
cmpsb
test
fsts
and
bound
loop
xchg
pop
cmovo
aas
sbb
dec
or
xchg
dec
ret
xchg
inc
jmp
aas
mov
out
into
sbb
push
repz
scas
es
jge
and
bound
mov
xlat
popf
pusha
movsb
and
inc
test
shl
sbb
arpl
inc
jns
adc
ret
pushf
xor
mov
frstor
andb
pop
xor
inc
mov
push
andb
push
inc
pop
pop
or
sti
xlat
mov
push
lock
ret
pop
aam
sub
idiv
xor
push
push
add
jmp
mov
inc
push
icebp
add
mov
inc
insl
outsb
shrl
add
jmp
pushf
ljmp
push
clc
sbb
inc
repz
aas
push
ret
sub
mov
scas
addr16
jl
out
imul
loopne
arpl
daa
sbb
inc
cmp
fistps
daa
jle
inc
push
insb
xor
cli
add
ret
stc
lahf
cmp
push
mov
cltd
or
mov
fadds
add
out
xchg
dec
in
fldl
mov
mov
cmp
imul
std
dec
stos
and
dec
cltd
pop
push
loop
inc
lret
jae
pusha
push
pop
or
out
in
scas
test
js
shr
std
loopne
outsl
add
loope
jo
ds
ss
and
out
dec
sub
or
xor
pop
pop
dec
rclb
cltd
loope
test
lock
jae
enter
add
outsb
lahf
retw
shr
jle
adc
or
rolb
sub
jmp
movsb
pop
sbb
sbb
push
cmp
cmp
shlb
add
jae
shr
sub
push
xchg
inc
or
xadd
loope
fsubrs
and
lods
fmul
push
push
sub
test
inc
scas
cmpsl
dec
push
rcrb
out
push
lods
jo
daa
sahf
mov
sbb
jmp
aaa
jno
popa
loopne
mov
int
pop
imul
pop
outsl
and
sbb
jle
dec
jns
dec
sbbb
ror
fmuls
xchg
idivb
xchg
js
mov
popf
pop
stos
and
enter
or
js
cld
std
das
imul
lret
test
sbb
inc
std
inc
cmp
or
vmulss
or
fisttps
and
ret
push
add
pop
scas
jmp
mov
jmp
sbb
add
xchg
mov
in
lods
lds
hlt
in
les
lea
mov
push
stc
pop
inc
out
cwtl
push
or
das
jmp
jb
mov
cmpsl
imul
stos
mov
gs
jne
leave
cmc
iret
mov
and
sbb
inc
ja
or
aad
mov
movsl
or
aad
or
jmp
mov
call
repnz
dec
pop
mov
pop
xor
push
mov
mov
pop
leave
das
xor
mov
or
mov
dec
mov
pop
shll
pushf
pop
jb
sub
bound
in
jle
sub
push
jge
xor
leave
outsb
movsb
sbb
cmp
push
jb
jns
and
jp
or
mov
testl
xchg
in
push
mov
add
subps
cmp
out
pop
or
std
pop
xchg
pop
sub
clc
push
xor
sub
cmpl
jmp
jmp
sub
loope
aam
pop
int3
or
sbb
adc
or
inc
xor
mov
pop
mov
inc
add
or
lcall
ret
adc
add
mov
cmc
dec
adc
imul
pop
pop
add
icebp
cs
mov
mov
mov
sub
pop
push
lock
divl
popf
cmc
mov
adc
jmp
xorb
push
das
loop
xor
xchg
mov
and
xlat
out
push
push
sub
dec
loope
jns
add
imul
pop
mov
add
pop
push
adc
add
sub
lahf
pushf
loop
sub
sub
lahf
imul
pusha
mov
insb
dec
push
sbb
mov
dec
mov
pop
sbb
push
cmp
or
cwtl
cmp
out
cli
ds
ret
fildl
mov
mov
scas
lds
inc
mov
sbb
mov
imul
add
pop
jmp
shl
dec
or
jnp
mov
add
xor
insl
inc
push
rcrl
add
rol
xor
mov
push
movsl
je
pop
roll
push
cmp
pop
jmp
xor
xchg
in
sbb
jp
push
pop
pop
jmp
and
xor
push
xor
inc
cmpsb
out
adc
inc
xchg
call
lret
sub
pop
es
jle
inc
pop
fadd
loop
out
loop
or
or
dec
sub
dec
adc
out
xor
and
pop
xchg
push
dec
incl
inc
dec
es
adc
push
lcall
cmp
clc
or
cmp
rolb
jge
out
mov
inc
xchg
sub
push
add
divl
dec
pop
xor
mov
ljmp
subl
jns
test
and
xchg
adc
outsl
popf
cmpsb
hlt
mov
mov
fldl
fdivp
mov
push
call
mov
pop
out
push
pushf
or
sbb
sbb
adc
sub
std
sbb
pop
xor
mov
movsb
pusha
dec
push
stos
inc
adc
cltd
aaa
mov
ds
xor
pop
dec
popf
xor
ss
ds
mov
jmp
push
ror
out
hlt
sti
jb
mov
mov
inc
xlat
jnp
push
and
xor
add
push
push
jmp
mov
push
outsb
sahf
test
pop
daa
cmp
mov
push
and
or
push
test
mov
mov
xor
mul
out
mov
test
into
add
pop
or
ja
repz
pop
jp
dec
jo
pushf
ljmp
out
stos
add
pop
cmp
mov
jo
or
inc
pop
adc
lret
imul
jmp
cli
pop
ds
stos
xchg
shll
jg
scas
shll
orl
pop
sub
mov
nop
sti
repz
mov
xor
mov
jbe
jne
xchg
lock
add
sub
jb
add
negb
jmp
push
mov
add
xchg
icebp
push
jmp
add
outsl
mov
mov
fsubrl
push
jno
sub
mov
push
xchg
jle
jo
cmp
inc
add
rcrb
ret
mov
adc
mov
sub
pop
out
fsubl
xchg
notl
out
aam
test
cmp
or
leave
sub
add
out
push
sbb
add
lret
cltd
jle
adc
cs
mov
jb
test
push
mov
pop
jae
fs
jmp
inc
ds
ja
call
or
xor
push
push
push
insb
sbb
imul
mov
fsubs
sbb
and
or
dec
std
rcrl
or
xor
addl
lret
jne
xor
pop
xchg
out
pushf
mov
adc
cld
loope
leave
push
call
mov
fdivrp
ljmp
push
jnp
mov
lock
adc
in
mov
push
mov
push
pop
xorb
or
xor
or
mov
sub
test
mov
and
subl
mov
pop
and
pop
push
fs
pop
xchg
add
or
dec
sub
test
add
jb
ljmp
add
js
dec
pop
xchg
pop
mov
inc
xor
xchg
mov
or
dec
aaa
mov
scas
xor
pusha
mov
dec
cmp
ss
xchg
mov
pusha
add
and
jne
movsb
sbbl
pop
xor
sub
subb
add
xchg
mov
add
xchg
cmpsl
repz
cmp
push
and
fbld
adc
mov
movsb
pop
test
lret
cld
addb
push
rcl
loopne
aad
stos
fs
jmp
pop
sbb
sbb
mov
cltd
inc
testb
jmp
sub
pop
push
sahf
or
xchg
jb
arpl
jb
push
int3
inc
inc
cmp
dec
call
jmp
aam
ljmp
pop
jns
stos
pop
shrb
notl
or
add
jl
scas
dec
mov
cltd
mov
out
mov
iret
xchg
inc
test
fimuls
pop
test
pushf
mov
stos
cmp
dec
pop
fidivl
push
sub
lahf
pop
out
sub
push
scas
fidivs
out
push
sbb
pop
adc
addr16
mov
mov
sub
test
xor
jmp
pop
jne
cld
jo
jge
out
test
aad
or
xor
pop
enter
mov
push
xchg
sbb
adc
jmp
dec
mov
movsb
jecxz
shlb
in
jae
mov
xchg
mov
inc
push
cmpsl
imul
pop
push
inc
cmp
and
test
mov
xlat
and
mov
rolb
jmp
ret
loop
mov
gs
mov
test
ret
add
in
push
pop
add
data16
ja
push
pop
jmp
push
pop
movsl
push
outsl
lret
lds
xor
or
lods
sti
mov
and
icebp
sti
cmpb
xor
mov
add
shrb
out
adc
add
sahf
jbe
adc
fwait
dec
std
pop
das
push
add
jl
pusha
repz
mov
push
pop
sub
cld
cmpsl
je
push
mov
sub
iret
nop
cli
pop
pop
popf
ss
insl
or
jg
fdivrp
pushf
js
xchg
xchg
sbb
xlat
and
pop
xchg
pop
push
pop
scas
or
jbe
push
movsbl
or
sbb
mov
push
addr16
push
add
mov
fsubrs
outsb
lock
lds
and
fdivs
icebp
gs
mov
mov
adc
mov
adc
push
rclb
andl
shr
or
shl
out
push
mov
rclb
or
xchg
mov
and
and
pop
cmp
xor
cld
push
pop
push
jnp
sub
pop
jne
mov
lods
inc
add
cwtl
dec
orb
test
or
push
inc
bound
stos
orb
xchg
add
test
mov
ja
dec
pop
xchg
std
xor
out
call
xor
push
cmpsb
add
add
insl
cmpb
bound
xor
xlat
dec
push
xchg
jge
cmp
inc
dec
dec
add
jmp
jb
imul
add
inc
in
shl
fbld
sub
dec
jmp
adc
cmp
out
or
lret
mov
push
mov
xor
adc
pushf
cmp
pop
test
cs
and
inc
or
jg
fwait
mov
pop
or
addr16
xchg
popa
das
pop
pusha
insb
jmp
fbld
not
xor
xchg
in
cwtl
mov
fldl
and
sub
xchg
ds
jmp
mov
test
cmp
ret
xor
sub
and
scas
push
pop
push
aaa
push
jmp
int3
sti
aam
cli
mov
in
sahf
add
push
loopne
comiss
jbe
push
bound
push
sahf
add
mov
push
mov
mov
add
add
popa
test
iret
push
pop
and
repz
dec
imulb
add
jmp
in
cmpsb
int3
outsl
out
arpl
test
sub
inc
dec
out
insb
sbb
and
jmp
jg
pusha
add
mov
sbb
pop
sbb
enter
cmc
in
addr16
adc
mov
or
ja
aam
out
xor
jmp
mov
repnz
cld
adcb
mov
pop
movsl
mov
mov
add
leave
pushf
shrl
hlt
jp
push
mov
add
xor
xor
nop
or
in
mov
outsl
pop
cmp
les
pop
dec
xchg
fwait
aas
rolb
adcb
pop
sub
addl
loope
jle
jge
push
push
and
movups
pop
jae
push
push
loope
jmp
mov
push
js
add
pop
gs
sbb
cmp
jne
pop
push
test
out
mov
ja
xlat
lods
jl
pop
mov
cmc
add
and
fmulp
add
out
pop
punpcklbw
cmp
sub
adc
add
cmp
mov
xorb
ret
inc
add
jbe
sub
dec
das
enter
orb
sbb
adc
lea
loop
xor
or
hlt
bound
sub
push
push
adc
add
lds
push
jmp
adc
and
lods
je
scas
cmovne
or
ret
int
jne
nop
std
and
inc
sbb
adc
jne
flds
mov
fcmovnb
repnz
add
jge
adc
out
mov
jmp
arpl
loop
std
jno
bound
gs
pop
les
std
cli
cmpsl
jmp
in
push
xchg
ror
adc
mov
cmp
adc
int3
lods
pusha
adc
hlt
or
in
pop
mov
movsl
mov
adc
mov
popa
jge
sub
out
mov
dec
jb
pop
sbb
push
push
sub
pop
mov
adc
das
lret
xchg
sbb
inc
ja
popa
push
xor
inc
ret
add
leave
sub
push
xchg
in
int3
push
xor
jo
es
push
add
or
or
filds
jnp
shll
xor
or
sub
or
cmp
pop
dec
xor
sub
inc
mov
pop
enter
in
cmp
out
in
adc
sub
movsb
loop
or
dec
lret
jecxz
xor
cmpsl
xor
pop
sub
sbb
incb
fsts
push
fbld
or
mov
push
les
pushf
pop
adc
jbe
mov
mov
ds
out
add
sbb
aas
and
xor
jb
popf
rcr
dec
addb
sbb
pushl
xor
lds
xor
out
les
jo
mov
ja
ja
les
add
std
pop
mov
aad
daa
cmpb
icebp
std
cs
loope
mov
dec
mov
push
inc
daa
fnstsw
jmp
addr16
pop
outsl
cmp
jmp
fs
jl
mov
pop
les
ja
fs
cwtl
push
jae
gs
stc
int
sub
loop
push
mov
dec
push
xchg
sub
cmp
dec
clc
lock
mov
adc
adc
lods
xchg
jnp
mov
adc
aam
stos
jbe
or
and
sub
fdivs
xor
leave
push
push
pop
dec
jge
loope
xor
mov
and
jmp
mov
lahf
xor
or
adc
push
sti
pop
jmp
push
pop
test
and
pop
in
rclb
shl
fidivrl
scas
pop
pop
push
test
add
bound
adc
mov
add
push
or
jbe
mov
or
ret
dec
sti
les
cmpsb
pop
mov
sarl
add
fsubrs
mov
jmp
and
imul
cli
dec
cli
fiaddl
daa
add
test
xchg
adc
pop
dec
nop
scas
or
or
pop
push
mov
jge
incb
in
jg
enter
ja
pop
pop
outsl
cwtl
jg
inc
shrl
clc
jecxz
lods
ljmp
scas
ja
aaa
fstpl
adc
cmp
cmp
in
jo
and
xchg
jns
pop
in
or
add
xchg
mov
xchg
xchg
and
add
pop
repz
sbb
cmpxchg
xchg
add
push
mov
mov
pop
addr16
push
pop
clc
add
mov
mov
push
mov
shr
cli
xor
out
aaa
jno,pn
push
xchg
cmpsl
pop
adc
ret
imul
repnz
call
imul
cs
lods
leave
les
dec
mov
adc
xchg
mov
add
ror
into
mov
sarb
push
sub
sub
mov
pop
out
pop
std
outsl
adc
mov
ret
pusha
js
jle
sbb
add
sub
repz
mov
pop
shr
and
pusha
inc
cmp
out
jne
mov
mov
aad
sub
adc
adc
and
mov
sub
clc
add
pusha
push
inc
sub
and
test
jg
into
lret
and
sub
push
mov
cmp
inc
and
sub
bsf
test
aam
mov
subl
xor
xchg
xchg
jmp
jbe
or
inc
xchg
push
cmp
fdivl
xchg
push
xor
or
sbb
std
sub
and
out
imul
mov
adc
inc
rolb
in
mov
test
add
daa
clc
jge
jne
or
sub
push
int
movsb
sbb
fsubrs
push
mov
push
pop
inc
pop
arpl
add
mov
call
sahf
subb
mov
sti
in
lods
push
sub
cli
dec
inc
cltd
loopne,pt
push
les
arpl
adc
scas
in
subb
dec
rcr
pop
adc
and
jg
push
shll
int
iretw
popa
cmp
sbb
lret
jmp
push
mov
pop
xchg
clc
rorl
sub
push
pop
mov
add
in
xchg
inc
jae
scas
sahf
dec
in
ja
xor
adc
pop
pop
insb
popa
sub
cmp
das
jo
jl
les
jne
rcrb
sub
xor
lock
or
push
add
call
leave
cmp
push
scas
mov
mov
loope
dec
mov
sub
sbb
into
adc
lock
push
bound
and
adc
divb
hlt
pop
push
mulb
sbb
mov
stos
pop
arpl
rcrb
stos
das
cmp
aad
add
push
jmp
xchg
pop
movsl
ja
mov
sbb
loope
rorl
and
push
pop
pop
mov
push
decb
pop
xlat
xchg
cmp
sti
outsl
sub
cli
mov
pusha
xor
pusha
pushf
es
sti
mov
outsb
pop
adc
mov
popf
pushf
jg
mov
movsb
ret
data16
cmp
aas
xor
cmp
lret
scas
testb
jg
and
push
mov
dec
jno
insb
imul
jne
push
adc
or
push
cmp
push
data16
aas
shrb
rcrl
aad
sti
movsb
inc
and
pop
adc
push
push
jl
inc
addb
or
push
sbb
imul
xor
pop
sub
enter
andl
mov
adcb
pop
fcoml
mov
es
in
mov
pop
push
and
cwtl
pop
jmp
push
lcall
fs
mov
or
jle
inc
jmp
push
or
add
ret
subb
push
jmp
cli
fwait
push
outsb
jg,pt
iret
push
or
pop
mov
cmp
push
test
sub
ljmp
shrl
xchg
mov
add
jns
add
or
xchg
test
sub
mov
icebp
lods
xchg
and
test
lea
call
pop
jbe
not
jle
mov
push
push
and
call
outsl
xlat
jno
push
pop
inc
in
pusha
data16
mov
and
imul
pop
in
add
xor
js
xlat
mov
out
mov
test
das
scas
sub
pop
mov
lds
sub
pop
aad
rcrl
xchg
or
iret
mov
and
or
subb
mov
gs
push
cmp
pop
lods
mov
push
outsl
cmpsl
and
xchg
xlat
sbb
jmp
in
adc
test
and
leave
lock
loopne
out
or
jmp
adc
enter
lods
cmp
cmp
jecxz
sbb
aas
mov
sbb
mov
fwait
call
add
or
dec
jmp
add
popa
and
cmp
dec
call
int3
inc
cmp
jp
xor
dec
es
add
dec
loopne
popf
jo
lahf
aam
les
and
add
jmp
xchg
mov
jecxz
sub
xlat
sar
arpl
mov
add
imul
mov
jmp
pop
and
imul
insb
and
jmp
call
aaa
add
lock
push
cmp
pop
cmpb
or
xor
aaa
popf
jno
pop
addb
add
ljmp
das
adc
inc
js
ds
and
loopne
add
and
imul
in
subb
jbe
push
xchg
jb
orl
sti
mov
dec
out
fisttpll
stc
sub
aad
inc
or
mov
dec
aad
pop
andl
out
arpl
adc
mov
add
ret
adc
sub
loope
repnz
xchg
dec
loope
ja
xchg
sbb
or
call
out
fsubrl
sbb
cld
lds
and
xchg
push
xlat
or
subb
or
sub
sub
push
jge
add
sub
ds
test
fs
adc
push
push
mov
test
ds
pop
scas
les
or
popa
jo
int3
cmp
js
inc
add
popa
icebp
and
push
and
push
mov
cwtl
jnp
pushf
inc
sti
jp
jb
mov
adc
dec
bound
add
inc
jmp
adc
mov
add
push
int
cld
push
push
inc
pop
jmp
mov
rorb
scas
add
or
gs
and
pop
adc
jbe
pop
jo
dec
insb
jmp
repz
sub
arpl
lods
or
mov
push
js
add
mov
pop
add
ljmp
cld
add
adc
push
test
out
and
in
lret
shr
sub
stc
mov
shl
pop
iret
ljmp
add
ret
jmp
sub
clc
negb
rolb
inc
sbb
fisubrs
or
add
adc
rcrl
xor
sbb
mov
aad
fs
neg
dec
add
pop
or
rol
or
pop
cwtl
dec
cmp
aad
sub
cmpsb
jmp
sbb
add
dec
imul
inc
test
mov
mov
pop
imul
leave
mov
xchg
mov
mov
sub
cltd
xchg
or
pop
pop
lods
stc
incl
rcll
mov
add
inc
mov
push
push
notl
pop
jmp
scas
fstp
hlt
xlat
fstl
int3
push
gs
enter
dec
adc
xchg
fildl
add
xchg
fnstsw
fistps
push
in
push
and
ljmp
dec
inc
rclb
add
jp
mov
adc
adc
and
pop
jno
cltd
push
rclb
push
push
leave
add
lock
lea
push
bound
mov
adcb
cmc
push
shl
add
and
std
icebp
cli
sub
orb
jno
or
adc
sbb
cmc
test
pop
adcl
mov
add
neg
adc
inc
lret
fcoms
push
jo
xchg
cmc
sahf
inc
pop
pop
shll
and
sub
push
cmpsb
xchg
push
mov
inc
or
or
push
pop
rcll
jge
pop
sub
dec
inc
pusha
bound
cmp
sahf
push
pop
data16
pop
movb
inc
add
sub
mov
jmp
iret
push
push
rolb
in
aam
mov
push
cli
aam
or
jbe
xor
xchg
ret
mov
jl
xchg
dec
imul
mov
dec
rclb
add
pop
ret
jne
insb
daa
and
sti
adc
add
xor
xor
xor
cmp
and
or
psadbw
cmpl
add
sub
lock
lret
out
call
lahf
sti
or
adc
je
lahf
popf
or
aas
xchg
icebp
sub
movsl
and
out
cltd
add
insl
mov
inc
jnp
rorb
stc
push
sti
mov
push
jne
mov
adc
cli
cld
clc
and
push
mov
out
pop
idiv
inc
divb
rorl
out
mov
sti
fsubrl
mov
loope
and
in
push
lods
adc
or
pop
cwtl
or
inc
ja
jns
clc
sar
mov
and
leave
pop
fimull
xchg
dec
inc
inc
mov
inc
push
xchg
and
pop
dec
push
xor
jmp
jg
jmp
xor
jge
jp
out
insl
test
imul
xchg
xchg
in
test
pop
lds
mov
mov
aas
mov
xlat
mov
and
pop
cmp
jae
push
or
sbb
aam
dec
add
lahf
ret
pop
pop
push
push
sbb
loopne
adcb
push
mov
jmp
cwtl
das
push
push
jns
mov
sub
ds
xchg
mov
dec
les
and
repz
icebp
lock
jae
or
push
mov
pop
js
sbb
cmpsb
das
mov
add
clc
gs
fsubrs
add
aas
pop
xor
xor
xchg
out
out
jp
add
call
add
add
dec
icebp
test
lds
inc
and
ja
daa
and
inc
mov
sub
arpl
add
dec
pop
mov
push
ffree
sub
or
or
jmp
mov
push
mov
push
sbb
adc
xor
xchg
jno
pop
out
cmp
push
sbb
add
popa
jae
into
mov
dec
mov
cli
xor
add
fadd
mov
gs
pop
daa
jne
inc
jmp
push
divb
fmulp
inc
cmp
mov
es
xchg
test
mov
loope
loop
xchg
lds
or
xchg
stos
xchg
pop
dec
in
cwtl
pop
pushf
and
jns
add
xorl
out
sub
push
mov
xor
jmp
pop
loop
mov
or
rcrb
xor
ljmp
push
cmp
fs
and
push
push
in
jl
mov
scas
fwait
sbb
xchg
ret
push
add
inc
scas
inc
mov
add
into
jmp
jp
jb
pop
jge
cld
push
dec
outsb
popf
fisubrs
bound
jne
pop
jl
gs
jp
pop
jg
dec
sbb
lods
rcll
mov
rorb
jb
outsb
sub
jg
add
rclb
cmp
sub
push
mov
jecxz
int
pop
sub
add
addr16
leave
mov
cltd
push
xchg
add
jmp
ds
xor
xchg
mov
popf
pop
lea
jmp
mov
xchg
push
jno
mov
repnz
xchg
sti
sbb
fisubl
jl
addb
inc
sub
gs
int3
inc
pop
pusha
and
incl
jmp
inc
xor
dec
js
out
or
or
inc
roll
daa
inc
and
mov
outsb
or
divb
or
dec
cmp
and
scas
push
ret
adc
xorl
aad
xor
add
lods
jmp
cmp
adc
mov
sub
pop
stos
sub
jmp
not
fldcw
add
sub
neg
xchg
jns
push
daa
stos
push
popf
lret
pop
xor
or
cli
sub
mov
xchg
sbb
es
imul
loope
adc
mov
xchg
scas
fldcw
pusha
pop
je
add
mov
xlat
rolb
nop
add
xor
out
or
cli
jle
ret
add
mov
adc
pop
jle
fildll
cs
lret
cltd
testb
push
cwtl
push
and
push
arpl
test
xchg
sti
enter
jge
stos
inc
add
jmp
mov
sbb
pop
mov
cmp
popf
and
cmpl
cmp
or
es
ds
push
jp
lahf
iret
sahf
ret
fiaddl
or
imul
pop
sub
outsb
xchg
or
jmp
mov
test
add
xor
jmp
cmc
lret
or
push
push
pop
adc
sbb
jmp
xlat
notb
mov
xchg
lods
or
js
test
inc
popa
jmp
scas
sbbb
data16
mov
inc
sar
rclb
sub
iret
sub
mov
add
mov
mov
ljmp
pop
ljmp
mov
loop
adc
dec
lock
repnz
xor
or
xor
push
push
xchg
incb
sub
fsts
add
jbe
neg
adc
adc
mulps
jmp
mov
test
andl
sub
ds
pop
xchg
je
lret
dec
and
xchg
fs
mov
dec
jmp
div
jno
sub
dec
in
adc
jecxz
or
pop
insb
xor
pop
fidivrl
and
xor
jge
hlt
loope
add
imul
rcrb
pop
cwtl
mov
in
data16
dec
push
repz
pop
jno
inc
jo
pop
dec
jne
leave
stc
adc
call
jmp
je
sub
mov
adc
pop
icebp
mov
xchg
nop
fisttps
test
cmpsb
or
lret
or
push
adc
aad
pop
mov
addr16
cmpb
ljmp
in
pusha
pop
dec
repnz
cli
or
loopne
in
cli
jle
add
or
sbb
dec
and
adc
lcall
pushf
adc
jmp
mov
jo
jo
xchg
fidivs
mov
inc
or
adcb
fcoms
je
addr16
xor
addr16
xor
pop
cld
add
fdecstp
sub
xor
outsb
jmp
pop
pop
push
cmp
in
test
test
push
and
cltd
xchg
scas
jg
shll
sub
pop
jmp
jmp
add
pusha
mov
cmp
xchg
or
mov
call
push
shll
push
mov
or
test
inc
nop
aam
add
cmp
dec
rclb
dec
push
sbb
leave
xor
inc
add
call
mov
mov
mov
mov
add
mov
insl
leave
cmp
inc
mov
or
add
sub
cmp
adc
into
pop
sub
rclb
cmp
negb
xchg
push
and
mov
mov
cmp
pop
pop
sti
inc
aaa
sbb
and
mov
xor
ljmp
adc
popa
in
xor
fdivrl
add
ljmp
and
pop
out
and
pop
jg
jnp
leave
inc
add
jnp
cmpsb
adc
mov
lahf
clc
das
pop
pop
push
or
es
cmc
add
pop
or
jb
or
cld
insl
inc
xor
and
or
bound
in
cmc
lahf
aam
mov
aas
lods
sub
enter
stc
stc
mov
push
push
loop
fnstsw
xchg
rcll
jle
inc
jle
ss
sahf
adc
loope
enter
loopne
es
and
push
shlb
inc
jmp
jl
pop
pop
push
jl
pop
dec
mov
and
sbb
jmp
sbb
sbb
xchg
cmp
ret
push
fwait
stos
add
call
adc
cmc
pushf
adc
mov
shr
push
or
punpckhdq
jg
out
enter
lret
or
dec
push
jbe
xor
shlb
out
dec
inc
mov
sub
pop
fldl
dec
xor
pop
ljmp
aas
sub
xchg
push
jmp
imul
add
sahf
outsl
shll
mov
cmpsb
pop
push
pop
and
xor
cmp
cmpsl
dec
cmp
imul
pop
movsl
mov
out
push
test
lods
and
test
push
mov
jecxz
shrl
adc
dec
out
push
rcr
inc
nop
cmpb
mov
mov
jns
ja
dec
pop
mov
pop
popl
mov
pusha
or
pop
mov
jl
push
aad
mov
jmp
jge
xchg
mov
lods
repnz
push
cld
or
adc
cmp
dec
ljmp
inc
add
pop
loop
add
or
aas
push
mov
imul
fldln2
addb
mov
xlat
repnz
xchg
sbb
in
stos
in
xchg
in
imull
or
fdivr
ds
or
jmp
xor
push
cld
aaa
mov
cld
ds
stc
cmp
sbb
mov
pop
ds
push
les
cld
addr16
lea
pop
push
adc
rcr
pop
std
add
das
and
or
mov
adc
shll
push
popa
imul
pop
lret
out
negb
add
jecxz
addb
push
push
imul
jp
mov
fsubl
lss
les
mov
mov
popf
jge
or
or
push
icebp
jmp
mov
cmc
into
sbb
sub
mov
and
lahf
push
das
push
or
mov
push
mov
lock
push
sub
lret
mov
daa
adc
dec
and
push
inc
stc
xor
pop
bound
xor
or
mov
loopne
and
cmp
sahf
lock
push
pop
leave
setno
test
test
mov
pusha
daa
push
dec
dec
es
arpl
mov
pop
pop
and
ljmp
mov
das
je
push
add
xchg
pushf
loopne
sub
add
mov
and
loop
push
loopne
stos
das
pop
ja
cld
ljmp
add
cmp
add
lahf
pop
into
cmpsl
popa
lea
xchg
adc
pop
pop
rol
push
call
aam
xchg
adc
or
dec
dec
pop
test
sub
jo
orl
dec
icebp
in
in
fdivl
push
xor
push
cmp
movsl
enter
sbbb
and
dec
outsl
repnz
or
mov
pop
subl
ret
movsl
test
pop
shr
jle
jecxz
out
std
pop
out
mov
and
add
test
sub
push
xor
dec
ljmp
mov
and
mov
jae
sub
mov
jmp
push
es
imul
fwait
rclb
pop
add
in
nop
pop
adc
sub
add
add
mov
rorb
loopne
push
nop
jle
sbb
push
out
add
xor
pop
or
in
xor
and
lret
sahf
dec
pop
mov
mov
xor
adc
pop
negl
adc
sbb
or
cmp
pop
call
dec
test
nop
fiaddl
lret
out
sti
xchg
aaa
addr16
call
inc
pop
add
fildl
pop
ret
jmp
sbb
push
fistpll
test
dec
xchg
push
adc
xchg
sarb
and
insl
mov
cmp
insb
cmc
sub
into
iret
mov
mov
jge
adc
pop
nop
xor
rol
cwtl
loopne
pusha
insl
adc
xchg
push
outsb
mov
cmpsb
idivl
aaa
xor
out
out
ret
aaa
dec
push
cmp
aad
test
xchg
or
enter
pop
xorl
cmpsb
pop
xchg
cmpsl
or
or
jl
adc
int3
lods
push
fs
aam
xchg
mov
xor
or
xor
cli
add
push
test
mov
outsl
xor
mov
xor
les
adc
stos
xor
mulb
sub
lods
jp
mov
jne
repnz
adc
pop
in
icebp
push
test
or
add
jmp
cld
das
lds
pop
dec
repz
cmp
xchg
mov
push
adc
jmp
cmp
and
sub
mov
jmp
call
lods
mov
js
lret
out
mov
adc
je
add
shrb
or
jl
pop
sti
shll
pop
rol
inc
gs
xor
ds
shl
test
xchg
fimuls
push
jmp
inc
adc
add
mov
addr16
jmp
sub
jae
add
jle
pop
xchg
mov
or
pusha
pop
jg
inc
mov
pop
pusha
sub
sbb
cltd
add
jnp
cmp
mov
sbb
jge
and
pop
xchg
pop
add
xor
jmp
stos
gs
mov
mov
dec
fsubrs
sub
or
xor
lahf
dec
mov
mov
and
or
xor
outsb
push
dec
loope
or
dec
inc
sti
mov
rcrl
test
and
or
sar
adc
push
shr
neg
jmp
addb
push
scas
or
ja
lods
add
out
push
adc
lods
cmp
dec
orb
sub
push
pop
rcrb
shrb
mov
adc
xor
fisttpl
jbe
pop
mov
push
sbb
hlt
pusha
push
xchg
or
inc
jbe
inc
and
and
add
cmp
sbb
adc
or
pop
pop
cltd
call
jo
ds
ret
sub
aad
xchg
movsl
xor
aas
sbb
imul
mov
and
add
xchg
inc
sbb
pop
adc
jmp
notl
flds
add
ljmp
add
push
pop
adc
or
add
xadd
xchg
pop
jne
or
fsubrl
in
fistps
cwtl
cmpsl
or
and
jne
adc
sub
add
mov
dec
divps
repnz
and
movsl
jg
iret
mov
out
or
push
xor
mov
js
ficompl
test
mov
mov
jp
sub
int3
in
inc
out
pop
pop
cld
jbe
cmpsb
pop
pop
imul
adc
clc
pop
dec
sub
adc
cld
testb
sub
sub
imul
push
jo
addr16
pop
cmp
and
jmp
xor
ds
loopne
jnp
cmpb
sub
jge
or
dec
and
jae
popf
adc
sar
and
xor
or
or
daa
ja
cmp
fimuls
enter
mov
rorb
mov
adc
jb
mov
pop
hlt
es
pop
testb
shlb
push
aam
imul
pop
inc
mov
inc
mov
xchg
shl
push
adc
cld
pop
sub
dec
aas
lock
mov
mov
pop
out
mov
dec
xchg
pop
addb
inc
pusha
push
mov
sub
mov
xchg
adc
scas
lahf
pop
adc
scas
out
fcomp
push
mov
mov
imul
mov
pop
gs
jmp
rcr
sbb
loop
xor
clc
rcrl
lret
int3
dec
je
dec
push
dec
fsubl
test
adc
scas
and
mov
fs
lods
in
add
pop
pop
pusha
sbb
lods
orb
cld
int3
jns
mov
sub
test
add
out
mov
mov
scas
inc
lock
jl
sbb
loope
jmp
in
test
add
in
sub
adc
mov
int
push
jne
rcrb
add
sub
je
cld
mov
xor
clc
lret
cmpsb
lods
adc
inc
daa
scas
or
outsb
lock
add
clc
pop
repnz
push
jmp
sbb
jbe
out
into
add
pop
cmc
dec
pop
sarb
pop
sub
pop
pusha
inc
push
jnp
jo
cmp
and
stos
cmp
inc
sub
adc
dec
arpl
add
mov
icebp
and
clc
or
int
aam
das
add
inc
loop
in
mov
push
push
pop
push
mov
pop
pop
test
iret
repnz
or
or
aam
mov
faddl
pusha
push
loop
jmp
vmptrst
fsincos
ret
push
mov
faddl
lods
push
mov
je
addb
js
pop
mov
ljmp
shrb
call
imul
out
xchg
out
xor
outsl
aas
fimull
je
sub
cmc
jg
pop
pop
ret
bound
xor
pop
add
pop
xor
scas
push
nop
orl
xor
jmp
and
mov
testl
cmp
out
in
xor
xor
add
insb
scas
loope
push
or
adc
clc
jmp
rclb
pop
stos
fisubrl
pop
cmpb
out
mov
daa
xor
and
xor
add
mov
sub
das
loop
aad
adc
mov
or
inc
orb
push
mov
cmp
lret
inc
add
sti
dec
fimull
sub
push
fnstcw
jp
das
ret
cmc
fld
xor
rclb
jnp
andb
add
xchg
mov
jne
push
adc
adc
pop
mov
xor
xor
cld
aaa
xor
cmp
outsb
mov
push
fwait
add
push
ret
addr16
mov
int3
rdpmc
mov
iret
std
test
push
clc
jmp
or
imul
je
sub
xor
addb
add
sub
and
push
mov
scas
mov
add
mov
bound
fisttpll
jnp
push
fistl
clc
lahf
mov
ljmp
vpmulhuw
jle
pop
dec
fsubrl
pusha
out
and
jnp
adc
pop
pop
pop
and
mov
mov
popf
je
iret
add
add
push
or
out
jnp
rolb
ds
insl
mov
dec
or
and
sbb
or
pop
jge
sub
sbb
hlt
jbe
jge
jae
adc
mov
push
fcomps
add
pop
mov
ds
sbbb
jmp
adc
pop
dec
orb
out
loope
add
popa
push
cli
add
push
xor
aaa
fwait
inc
xor
fisubrs
jge
pop
loope
fdivr
bound
cmp
jmp
add
mov
fs
inc
sub
adcb
xchg
hlt
inc
add
mov
orb
inc
sub
mov
mov
xorb
leave
orl
or
bound
jo
add
sbb
clc
loope
push
push
aaa
dec
inc
dec
xor
stc
sqrtps
loopne
pop
inc
std
push
ja
push
out
outsl
push
jno
or
dec
pop
pop
es
cmp
ret
es
adc
xor
ret
negl
cmc
jnp
cmpsl
fcmovnbe
mov
dec
and
lods
daa
lock
cmc
xchg
cli
xchg
arpl
push
sub
add
fldl
and
rclb
push
pop
scas
cmp
ljmp
sub
dec
xchg
mov
in
and
repz
dec
icebp
cmpsb
clc
pop
movsl
ret
lret
push
pushf
fnsave
push
divb
cld
iret
shlb
dec
push
addr16
xor
and
pop
inc
mov
push
sbb
pop
jmp
jl
xor
rorl
aad
cmp
scas
aam
bound
xchg
cwtl
outsb
dec
scas
mov
and
mov
adc
mov
mov
rorl
jae
sub
sub
cli
or
enter
ds
mov
shrl
nop
fisttpl
sub
insl
add
test
dec
enter
jno
jge
and
sub
mov
mov
add
xchg
jmp
int
sarb
pop
sub
xor
sbb
xor
movsl
adc
cld
mov
das
cli
push
push
lock
and
leave
movsl
add
call
mov
je
sbb
mov
mov
xor
mov
out
adc
sti
add
mov
or
shr
pop
rcll
lcall
mov
in
pop
or
sub
jecxz
mov
leave
jge
mov
imul
pop
pop
testb
stos
cmp
cmp
jb
push
xchg
add
out
fstps
mov
sti
popa
xor
outsb
loop
dec
inc
push
mov
cwtl
aad
xchg
or
mov
add
sub
push
sub
xchg
sub
xor
cmc
lods
inc
xchg
mov
push
repz
filds
sbb
add
repz
mov
xchg
mov
jmp
adc
pop
test
cmp
xchg
lods
add
xor
rorb
jne
outsb
add
jmp
add
inc
jmp
pop
pop
cmpb
sbb
vpcmov
jmp
mov
ret
jnp
or
xor
mov
mov
rep
jno
add
loop
fstl
mov
mov
lahf
vcvtdq2ps
pop
mov
add
mov
addr16
bts
dec
mov
xchg
hlt
cltd
mov
and
scas
scas
loop
add
popa
pop
dec
pop
jg
icebp
dec
clc
inc
imul
pop
xor
sub
pushf
add
lret
insb
jns
dec
std
mov
pop
es
dec
push
push
dec
pop
sub
scas
fcmovnb
jnp
std
dec
loop
xorb
sub
pop
aad
scas
imul
imul
or
seta
dec
push
pop
add
add
push
das
imul
out
pop
not
shll
push
sub
aas
cmpsl
cld
xchg
add
jg
popa
andl
scas
popf
jo
daa
or
fptan
pop
push
shr
mov
pop
mov
push
mov
inc
add
mov
mov
add
enter
dec
fs
dec
mov
pop
jle
scas
int3
push
push
push
dec
cltd
push
stos
adc
jo
mov
mov
xchg
push
pop
xor
mov
inc
xchg
cmp
push
loope
inc
in
mov
das
push
push
add
popa
add
jbe
jge
repnz
adc
sub
sbb
xchg
inc
aam
add
dec
push
push
or
data16
pop
stc
test
in
dec
mov
xor
push
add
and
cmp
in
jnp
xchg
dec
inc
sub
aam
cmp
rcll
ret
pop
sbb
push
inc
or
cmp
test
sub
adc
sub
fstps
fdivs
inc
jb
inc
fidivl
jmp
adc
aad
mov
push
inc
sub
mov
mov
icebp
sbb
stos
imul
mov
ljmp
outsb
xchg
dec
cmpl
pop
or
daa
mov
repz
mov
and
inc
pop
mov
movsb
out
add
rolb
fs
shll
rcrb
xor
xor
cmpsb
adc
or
push
adc
sbb
arpl
add
add
or
dec
pop
mov
mov
jmp
mov
adc
out
inc
push
lret
mov
aam
neg
mov
or
add
or
push
add
fmuls
cs
mov
ficoml
pop
scas
jg
xor
mov
dec
enter
aam
test
popa
cltd
adc
int3
jp
or
test
inc
outsb
pop
xor
mov
int
repz
sub
push
lahf
pop
out
push
jg
cmpsb
ficomps
add
sbb
xor
sbb
adc
adc
add
add
sti
mov
push
ret
mov
lret
dec
pop
mov
mov
leave
mov
push
xor
xor
test
mov
ret
call
fcompl
inc
inc
cmc
in
repnz
push
xor
mov
fdivr
add
xor
mov
push
jg
stos
sub
push
sti
cmp
pop
xchg
movsl
inc
mov
jmp
push
pusha
sub
icebp
pop
mov
enter
dec
adc
inc
mov
adc
pop
xor
mov
jne
jns
sub
pushl
imul
ss
sub
mov
jecxz
loopne
push
push
iret
push
xorl
stos
aam
push
or
sub
xlat
in
movsl
xlat
mov
sbb
mov
movsl
pop
wrmsr
jge
and
and
sub
adc
icebp
loop
cmpsl
ja
ret
mov
mov
pusha
sbb
jo
mov
and
rorb
xor
jl
jmp
adc
gs
rcrl
dec
cmp
inc
inc
add
or
loope
push
xor
test
mov
push
repnz
mov
jmp
mov
xor
push
xchg
sahf
mov
mov
gs
push
les
add
xchg
adc
dec
out
push
pushf
sbb
add
inc
xchg
je
jmp
or
out
and
xchg
test
mov
mov
inc
push
push
jge
pop
xor
xchg
lods
push
pop
pusha
mov
cmp
or
in
mov
lds
adc
push
add
xor
lock
jmp
lret
inc
rorl
loope
xor
push
hlt
sbb
jmp
pop
lret
mov
mov
mov
test
add
fistpll
pop
subb
pop
popf
xchg
inc
inc
sbb
push
cli
out
sub
push
jle
pop
fstl
and
andb
add
pop
jl
add
jmp
mov
sti
cmp
dec
inc
sub
push
loopne
out
pop
adc
sub
scas
data16
or
or
call
pop
stos
rolb
icebp
in
add
out
add
or
or
and
pusha
scas
cmp
and
xchg
adc
push
ret
cmpsb
ljmp
mov
nop
xchg
popf
fldcw
push
sub
mov
pop
pop
hlt
insl
into
and
in
add
cmp
scas
pop
lock
imull
adc
stos
jb
mov
call
inc
sbb
sub
mov
xchg
test
add
std
inc
das
into
sarb
jae
and
lds
pop
pextrw
xor
push
cltd
ficomps
lret
roll
push
mov
int
xor
roll
sbb
lea
bound
hlt
outsl
dec
ret
xor
push
je
rorl
mov
mov
cmc
rcr
in
or
sbb
add
sarl
dec
push
lods
push
adc
add
pusha
mov
cli
inc
add
out
dec
push
xchg
js
and
jmp
xor
mov
push
mov
push
mov
push
rol
push
imul
mov
sub
or
mulb
pop
xor
mov
dec
loopne
icebp
cmp
jo
imul
sbb
xor
loopne
imul
sub
or
add
aam
shll
lahf
xor
pop
cmp
les
pop
mov
addr16
out
std
pop
incl
sbb
in
sti
mov
mov
xor
scas
mov
pop
add
sub
jmp
dec
and
adc
adc
popa
and
mov
decl
or
push
rorb
push
jmp
xor
test
adc
or
pop
push
and
xchg
mov
jno
push
jmp
push
xchg
cmpsl
dec
pop
and
dec
pop
mov
movsb
lods
adc
push
cmp
add
mov
and
push
sti
sub
popa
popl
cld
cli
push
call
data16
lahf
xchg
pop
aaa
push
mov
add
mov
ficomps
xchg
mov
push
xchg
mov
not
stos
les
lock
sub
sub
push
mov
dec
and
into
push
sbb
or
xchg
rcr
mov
dec
popa
daa
mov
sti
xchg
xor
xchg
xor
pop
cld
mov
add
mov
clc
sub
leave
cmc
inc
out
daa
lds
call
push
adc
call
or
int
sbb
das
sbb
inc
movsb
and
repz
rcr
mov
dec
or
cmc
or
sbb
dec
pop
or
cwtl
ja
add
push
sbb
mov
mov
pop
push
cs
outsb
jo
and
pop
sub
aam
mov
push
add
pop
dec
pop
pop
cmc
pusha
xor
int
or
es
or
out
pushf
add
les
mov
add
fnstenv
insb
and
xchg
xchg
adc
hlt
push
bound
and
add
shr
lret
mov
push
mov
cld
fnstsw
mov
enter
pop
or
and
addb
adc
dec
mov
mov
xchg
xlat
xchg
cmp
sub
pop
add
add
push
jmp
jns
sbb
sbb
insl
rcrb
fisubs
adc
scas
jnp
and
outsb
stos
add
add
ret
mov
jo
pop
add
push
mov
or
stc
ficomps
mov
push
push
xor
loop
push
hlt
jo
jmp
mov
sbb
cmpsl
repnz
push
js
loop
xlat
ljmp
sbb
ficoms
push
push
jo
add
push
mov
xlat
jb
pop
pusha
ret
and
push
pop
aaa
es
xchg
pop
mov
jl
into
mov
push
jnp
imul
mov
mov
cs
sbb
call
repnz
sub
cmp
cmp
loope
icebp
add
sahf
ret
and
push
cmp
adc
add
mov
or
or
cmp
ret
mov
je
dec
inc
repnz
xchg
jo
xchg
pop
cmp
jl
lret
xchg
faddp
ret
jne
inc
mov
fisttps
jge
dec
dec
add
jge
jne
outsl
inc
mov
mov
nop
push
push
jmp
test
pop
dec
cli
fs
popa
in
mov
xchg
jp
or
xchg
neg
mov
sbb
jmp
pop
add
les
mov
fistps
pop
lods
prefetcht0
shr
out
dec
dec
dec
jp
clc
leave
push
out
lahf
jae
cmpsl
xchg
out
xchg
int3
add
cli
adc
or
xchg
adc
cmp
aad
lret
add
xlat
mov
jmp
lcall
push
clc
outsl
xchg
rol
sahf
loopne
mov
sub
cs
mov
in
add
clc
sub
pusha
sbb
enter
jne
push
idivl
mov
inc
hlt
xor
jnp
das
inc
mov
dec
sbb
push
call
push
pop
sub
repnz
jns
addb
sarl
jbe
dec
cmp
out
pop
pop
pop
jmp
adcb
fnstenv
dec
jnp
fistpll
not
push
adc
je
mov
test
mov
mov
cs
push
mov
pushf
push
sbb
cs
inc
xor
and
test
daa
mov
and
lods
pop
lods
xchg
cmpsl
hlt
push
call
sub
cmpsb
int3
orl
sbb
dec
ljmp
pop
lock
dec
pop
lret
xchg
dec
popa
hlt
inc
xor
xor
into
ds
cmpl
pop
inc
mov
addr16
pop
pop
movsl
imul
cld
push
mov
faddl
sub
shrb
enter
jne
insl
sub
adc
in
xor
repnz
lock
pop
inc
fcompl
or
sub
mov
push
mov
shl
shll
cmpb
cmp
mov
insl
dec
lods
in
mov
add
xchg
or
cmp
out
mov
mov
loopne
add
adc
int
add
mov
push
repnz
sub
rcrl
mov
inc
dec
push
sub
add
out
add
fcoms
dec
in
enter
loopne
adc
into
add
push
xor
xchg
pop
adc
addl
shll
push
inc
or
add
add
pop
mov
pop
pop
push
pop
push
aam
or
mov
scas
ret
dec
dec
dec
dec
sti
test
out
dec
push
push
jp
inc
jne
outsl
or
xor
gs
scas
dec
shrb
jmp
xor
jmp
pushf
and
or
repz
adc
pop
adc
mov
sub
jae
jmp
push
in
xchg
push
pop
stos
xor
or
in
sysenter
mov
outsl
subb
test
jmp
lods
jmp
cmp
and
hlt
mov
add
cmpl
sub
xchg
add
outsb
icebp
shrl
movsb
push
insb
ja
mov
in
jb
stc
sbb
jl
daa
inc
into
add
xchg
ss
es
pushf
insl
hlt
das
or
les
aad
or
out
rorb
jmp
dec
mov
int
add
sub
shrb
cwtl
fdivrl
nop
adc
std
xlat
xchg
pusha
das
jmp
push
mov
inc
ljmp
das
imulb
jns
inc
jnp
ja
pusha
mov
inc
xchg
jno
int3
movsl
push
sub
lea
rclb
inc
pop
inc
adc
cmp
pop
pop
sub
jmp
add
mov
mov
jbe
repz
adc
cs
and
sarl
iret
ret
jl
xorb
rcrb
leave
shll
mov
sub
xorl
rcll
insb
or
punpcklwd
mov
jb
cmp
ss
jle
sbb
xlat
int
fadds
insl
sub
rolb
adc
xchg
pop
jmp
inc
imul
xchg
out
inc
pop
mov
mov
sub
push
jne
mov
movsl
xor
pop
add
fdivrs
repz
mov
push
fimull
cmpsl
sub
ja
into
lret
mov
jmp
push
pop
neg
nop
or
mov
jge
pop
add
push
lock
or
and
xor
ret
mov
push
adc
hlt
outsl
out
pop
outsl
sar
add
mov
mov
push
call
rcrl
fdivrl
xlat
or
mov
fidivrs
mov
mov
fnstcw
lret
push
testb
insb
lock
mov
jecxz
sarl
dec
fwait
jg
xlat
mov
mov
or
jg
or
je
out
sarb
divb
sbb
ss
cmp
xor
cs
add
jecxz
test
mov
pop
or
out
cwtl
or
pop
lcall
or
shl
pop
pop
outsb
insl
ja
jmp
and
and
add
inc
lcall
mov
popf
addr16
sarb
lea
jle
and
aam
call
nop
dec
and
pop
cmp
xchg
mov
or
pop
mov
pop
std
push
jp
xchg
mov
out
das
and
scas
xor
or
mov
sarl
sbb
mov
imul
dec
rcrl
lcall
jne
call
jae
das
sub
imull
or
pop
adc
mov
aad
pop
ret
jmp
pop
push
mov
loopne
shrb
mov
scas
pop
cmp
daa
pop
mov
fisubs
push
mov
adc
mov
xchg
push
push
push
leave
cmpb
dec
stos
and
dec
test
add
stos
mov
pop
test
add
push
push
fsubrp
ret
jg
rcrl
adc
ja
roll
push
pop
icebp
mov
mov
jge
adc
jmp
pop
inc
aad
les
push
cmpsb
and
push
push
jp
or
mov
xor
xlat
data16
in
mov
push
add
sub
jb
cs
repz
mov
or
mov
add
add
cs
pop
lods
dec
lock
ret
mov
je
pop
lcall
outsb
mov
sub
inc
outsl
daa
jmp
pop
stos
jge
jnp
pop
jmp
mov
clc
sub
and
dec
hlt
jecxz
shrb
loop
push
mov
imull
in
repz
mov
out
out
pop
pop
mov
push
ljmp
int
test
test
and
push
mov
sub
test
or
jmp
sbb
xor
daa
or
out
imul
addr16
xchg
push
dec
shlb
sbb
or
in
and
or
ss
or
cmp
ds
jmp
cwtl
or
adc
shrb
stc
mov
mov
aas
xor
xchg
mov
loop
in
xchg
or
pop
ja
lds
dec
lods
jle
in
mov
adc
aas
cmp
pop
push
push
add
sub
mov
mov
rorl
and
xlat
iret
lock
insb
ror
pop
into
adc
aad
hlt
mov
cmpb
or
lea
mov
sahf
inc
mov
inc
shlb
jne
in
lock
adc
div
xchg
out
sub
jg
hlt
mov
add
ds
sub
add
inc
pushw
int3
adc
cmp
add
jb
lods
xor
repnz
shrl
pop
leave
imul
les
sub
scas
daa
pop
pop
add
pop
push
push
push
and
mov
ja
adc
sbb
pop
mov
mov
ret
sbb
lahf
pop
cltd
repz
fwait
add
dec
gs
adc
ja
mov
pop
or
or
insb
inc
dec
add
test
or
or
lock
jne
xor
pop
das
inc
fmull
xchg
mov
cmp
push
bound
inc
push
or
sub
adcl
mov
stos
sbbl
adc
jmp
stos
int3
test
add
cmp
pusha
sub
jnp
inc
and
rolb
mov
rcrl
push
inc
cmp
push
cltd
enter
xor
leave
neg
mov
and
and
and
xchg
and
pop
dec
ret
mov
push
ja
mov
cmc
inc
ffree
mov
mov
lds
sub
lock
xchg
jae
ret
dec
push
aaa
push
mov
dec
jge
loope
sub
add
or
clc
mov
loope
notl
pop
in
pop
pop
movsb
jno
das
push
cs
aam
mov
orb
add
mov
mov
or
mov
fsubs
push
pop
popf
jo
sbb
jbe
in
sub
or
xor
adcb
dec
jmp
push
xlat
ss
cmc
xchg
lret
inc
mov
or
aad
push
ds
cld
hlt
push
dec
and
mov
mov
cld
add
push
fldl
push
mov
sub
pop
jmp
xchg
in
in
push
int
push
repnz
cmp
adc
subl
fs
ljmp
jmp
jmp
mov
pop
popf
idivb
das
icebp
push
mov
test
in
push
in
fmuls
out
cmp
pop
loop
aad
mov
pop
push
imul
inc
and
daa
movsl
pop
rclb
sub
mov
mov
dec
aas
bound
scas
fwait
sbb
add
cli
adc
leave
dec
out
jmp
outsl
pop
ret
xor
push
mov
xchg
add
pop
repnz
aad
scas
popf
int3
jp
mov
dec
das
cmpsb
inc
mov
and
push
push
dec
or
shr
aas
xor
and
rorb
out
or
sbb
push
testb
push
jmp
push
push
clc
dec
vmwrite
jecxz
or
inc
pop
negl
adc
into
das
pop
out
popa
cmp
sub
out
push
in
out
push
mov
push
push
cmc
adc
jae
xor
xchg
sbb
sub
adc
and
nop
mov
mov
or
insl
shlb
add
xchg
lods
lea
or
test
inc
shrb
cmpsb
mov
jp
mov
ds
sbb
push
shll
xchg
add
adc
mov
add
dec
daa
xchg
push
jg
pop
cs
adc
pop
sub
movsb
insb
pop
dec
cld
adc
and
aad
addr16
movsl
pop
and
out
or
dec
sbb
or
jmp
pop
test
pusha
sub
addb
rclb
or
inc
push
lock
pop
add
add
sbb
fldenv
push
or
mov
fimuls
add
jmp
pop
ljmp
push
jge
dec
mov
aam
scas
mov
pop
push
pop
pop
adc
subb
mov
adc
lahf
pop
jge
mov
mov
pop
push
push
or
in
out
jns
or
or
call
pop
mov
dec
and
adc
adc
push
mov
lock
mov
pop
pop
popa
mov
mov
daa
call
push
js
pop
rcrb
das
lret
in
jne
dec
cmp
popf
mov
pop
mov
mov
adc
dec
out
mov
add
dec
fsubrs
sub
leave
jg
sub
mov
scas
mov
sub
xchg
xor
and
add
jns
mov
or
push
je
and
add
push
mov
add
movsb
sbb
and
test
popa
rclb
repz
push
ja
aad
mov
inc
out
and
xorl
cwtl
popa
jmp
dec
pop
xchg
inc
rcrb
inc
xor
sbb
or
test
jno
pop
arpl
xor
jl
and
mov
lahf
sub
loope
and
mov
cmp
daa
pop
iret
pop
test
stc
mov
inc
push
push
mov
bound
push
xor
jae
test
xlat
out
and
sti
mov
cld
enter
clc
popf
fisttpl
pop
push
mov
xor
push
mov
pop
cwtl
movsl
popf
fs
fstps
les
ljmp
outsl
mov
push
sti
push
jbe
arpl
stos
and
jmp
lahf
ljmp
repnz
test
pop
clc
jle
loop
add
sub
nop
lret
sub
inc
andb
sub
pop
and
pop
xchg
cmpl
mov
ret
add
ret
xchg
fdiv
gs
cmp
cmpsb
inc
and
addr16
sbb
mov
jge
test
mov
push
jne
cmp
jmp
fmuls
mov
jg
or
dec
cmp
rorb
mov
mov
fdivrs
mov
imul
mov
icebp
cmpl
pop
inc
shll
gs
std
int3
or
mov
pop
mov
sub
cmpsl
cmp
rcll
push
mov
lahf
mov
out
adc
inc
movsb
out
in
pop
mov
jle
int
ret
sub
push
and
pop
outsl
inc
lods
jne
sub
jl
cmpsl
rclb
and
sbb
lret
inc
dec
fcompl
bound
pop
pop
inc
ret
stc
test
jl
addr16
je
pop
nop
test
shlb
cmp
push
pop
daa
aam
push
push
inc
dec
int3
sbb
push
sub
inc
add
xlat
push
in
mov
pop
pop
xchg
out
loopne
pop
pop
jmp
dec
push
mov
dec
pop
cmp
clc
dec
and
cld
nop
fadds
mov
dec
lcall
enter
xchg
lock
xchg
fadds
xchg
add
adcb
push
inc
xlat
fcoms
lahf
bound
imull
or
lret
repnz
jno
cwtl
dec
or
call
lds
not
dec
js
test
data16
jb
push
cmpsb
pop
out
out
or
mov
sbb
loopne
dec
jmp
dec
jle
in
mov
mov
call
test
pop
push
jno
cs
or
add
mov
call
sub
sub
sub
fsubrl
aad
pop
mov
divb
xorl
sub
sarb
sub
dec
xchg
mov
mov
cmpb
mov
xchg
repz
inc
and
inc
xchg
pop
xor
xchg
xchg
outsl
or
xchg
push
in
dec
aad
mov
pop
rcll
repz
jmp
call
add
bound
mov
xchg
iret
push
xchg
call
pop
xor
mov
add
cwtl
xchg
add
pop
repz
imul
insb
out
scas
rcr
dec
les
stos
mov
das
mov
std
jno
dec
cli
out
mov
inc
test
or
xor
or
push
fisttps
mov
push
pop
repz
xchg
movsb
jmp
jnp
jns
adc
test
jmp
ljmp
cmp
jl
mov
xchg
fsubr
pushf
cld
mov
jbe
shrl
jl
les
cvtps2pd
add
cmc
mov
aas
loopne
scas
jne
add
jne
cli
pop
adc
adc
and
mov
jnp
scas
adc
and
sub
cs
push
ds
fucomp
shlb
shrl
jmp
fldt
cmpsb
push
je
cmc
pop
push
scas
cmp
jmp
ja
or
mov
add
add
sub
orl
sub
gs
das
jne
push
adc
inc
mov
jle
sub
inc
lds
sub
push
xchg
jmp
jg
cmp
mov
in
and
and
test
and
push
mov
jmp
pop
xchg
clc
jmp
dec
mov
in
cli
dec
popf
xorl
cmpsl
adc
pop
not
add
inc
inc
sbb
bnd
push
pop
mov
cld
cwtl
xor
sbb
in
hlt
pop
and
pop
pop
in
test
loope
dec
and
test
mov
loopne
pop
jmp
jns
sub
ljmp
add
sub
fsubrs
scas
push
push
xchg
movsb
xchg
jns
cwtl
sbb
lcall
mov
push
shlb
or
xor
or
add
xor
mov
ja
jl
pushf
jae
inc
js
into
movsb
sarb
cs
adc
dec
mov
mov
fs
jge
jle
test
sub
adc
pop
int3
gs
adc
inc
mov
test
xor
mov
mov
cmp
sbb
mov
psubw
sub
in
and
orb
sbb
add
popf
fsts
mov
scas
inc
push
lds
and
popa
xor
enter
or
adc
loop
mov
inc
out
adc
arpl
int
add
push
pop
adc
scas
jns
mov
add
adc
mov
dec
sub
mov
shll
jle
sarb
jmp
rcr
or
mov
mov
lcall
push
jg
inc
daa
cltd
push
cs
sub
jmp
mov
lods
test
imul
xor
daa
mov
stos
push
pop
outsl
pop
push
shrb
shl
or
or
cmp
aad
and
jg
xchg
add
nop
test
xor
sarb
nop
sti
and
test
mov
xchg
add
in
jmp
gs
cmp
adc
xchg
cmp
lret
push
push
jmp
pop
sti
add
and
sbb
push
pop
je
add
dec
jg
or
aam
jbe
cld
and
nop
imul
sub
add
addb
jmp
jbe
ret
shrb
or
fistps
sbb
ss
test
movsb
ret
jne
sub
fst
popa
adc
jns
mov
add
or
leave
imul
jae
xor
push
cmp
scas
cltd
xor
sub
add
jae
ret
pop
and
sbb
jb
and
mov
pushf
jmp
jmp
psllw
cs
cmp
mov
lea
je
shlb
cwtl
push
mov
pop
lahf
fmul
mov
mov
cmp
repnz
and
bound
fnstcw
sbb
sbb
iret
dec
and
jnp
les
dec
mov
pop
pushf
movsl
jnp
jg
shlb
outsb
mov
lahf
and
les
bound
es
repz
icebp
lods
jmp
lret
sub
or
and
sub
sbb
jp
pop
jo
orl
push
aam
je
pop
imul
scas
pop
mov
ret
pop
add
inc
data16
dec
std
xchg
pop
xor
and
push
push
adc
inc
cmp
sahf
leave
out
and
dec
mov
mov
fidivs
das
cmpsl
je
pop
pop
test
xchg
in
ds
push
iret
loop
adc
mov
dec
jae
ja
add
jg
inc
mov
lret
push
mov
adcl
movsb
jle
mov
sti
pop
gs
add
inc
cmp
in
cld
aas
idivb
and
ja
fisttpll
or
pop
push
mov
pusha
add
mov
xor
loope
adc
jmp
loopne
push
push
add
mov
movsb
jmp
add
rcrl
fidivrl
cs
push
or
addl
ret
inc
sbb
repnz
or
into
adc
div
or
js
dec
pop
mov
jne
mov
ds
int3
push
xchg
cli
ja
aaa
call
jns
or
jmp
lret
pop
loope
inc
push
lods
nop
or
mov
sbb
addl
pop
jne
imul
in
push
xchg
ljmp
les
cwtl
adc
push
xlat
xchg
sub
cli
repz
cli
xchg
shl
loop
push
mov
and
xchg
dec
in
push
pop
clc
pop
jmp
out
popf
rclb
aad
jnp
push
out
mov
push
jbe
mov
iret
mov
jo
push
adcb
cli
push
fcmovnb
or
dec
push
mov
je
lods
aam
pop
jg
scas
add
sub
ja
inc
call
adc
in
mov
lcall
adc
adcb
xor
addl
pushf
fldcw
mov
lds
cwtl
daa
mulb
or
mov
lods
mov
inc
push
cltd
in
daa
aad
pop
imul
mov
jb
pop
mov
inc
pop
js
and
addr16
int
add
cli
inc
inc
sub
mov
mov
mov
test
ret
or
gs
lods
jno
or
loope
lds
sub
xor
enter
fldl
int3
cmp
mov
push
nop
fldcw
into
or
mov
adc
bound
aam
rclb
xor
jp
mov
pop
mov
pop
sub
stos
sub
push
aad
dec
or
in
add
mov
adc
mov
mov
or
pop
push
xchg
call
mov
cmc
and
cwtl
loop
xor
nop
or
jmp
ja
jecxz
inc
sbb
and
cwtl
dec
ja
iret
push
je
xor
push
jo
sbbb
mov
inc
and
loop
dec
sub
push
stc
or
adc
mulb
mov
shlb
or
scas
mov
adcb
sbbb
add
shr
dec
notl
sbb
inc
xchg
xchg
sbbb
and
shl
lret
mov
in
push
and
cmp
and
or
lds
or
ret
hlt
dec
lcall
jmp
adc
sub
and
fwait
add
cmp
fsubs
das
sub
pop
dec
mov
add
pusha
jl
addb
cwtl
ret
add
add
int3
and
pop
push
jmp
in
insl
fcmovnb
dec
or
jecxz
rcr
jae
ror
mov
outsb
mov
imul
call
sbb
in
lcall
cmc
jp
rol
adc
je
mov
imul
jmp
jb
cmp
rcl
stos
adcl
pop
mov
lret
or
sub
sbb
jl
sbb
add
pushf
pop
fwait
lods
sti
int3
inc
pop
data16
fnstenv
inc
data16
mov
add
cmpsb
adc
jg
outsl
into
ret
push
sub
jmp
push
or
imul
pop
push
inc
jp
les
jmp
movsb
sub
inc
scas
pop
out
cli
and
test
push
gs
pop
stc
mov
jns
neg
add
psubsw
test
xchg
insl
mov
fistpl
push
and
cmpsl
adc
imul
add
mov
aas
mov
jmp
sti
cwtl
adc
repnz
push
test
pop
fldt
sbb
dec
jnp
xor
lock
mov
neg
xor
add
andl
ret
xor
and
adcl
push
scas
std
add
in
add
mov
daa
jmp
xor
push
dec
in
pop
jmp
popf
push
iret
sti
and
cmpsl
sbb
dec
pop
lds
mov
add
not
sbb
xchg
cmpsl
add
inc
push
sub
imul
out
xor
jg
push
push
jle
jnp
sahf
fsub
and
orb
lret
inc
xlat
mov
cmc
dec
call
cmp
test
insb
mov
xor
push
mov
inc
fwait
sti
mov
daa
roll
push
xchg
mov
out
mov
pop
fwait
add
push
push
cmpsl
ss
dec
imul
inc
adc
xor
sub
xor
ss
sub
mov
hlt
cmp
xchg
sbb
sub
mov
fisubl
sub
mov
add
push
add
push
pushf
inc
push
neg
and
xor
jno
sub
mov
mov
push
xchg
mov
cmp
mov
jmp
call
popa
loope
cmp
or
lret
out
jno
inc
add
jmp
or
stos
movsl
out
std
pop
popf
push
enter
ss
and
pop
mov
mov
ret
lods
imul
and
ret
or
adc
jle
mov
sub
mov
push
pop
scas
scas
das
ret
enter
mov
add
dec
mov
les
add
nop
icebp
es
and
jnp
cld
sub
std
adc
cs
repnz
loopne
outsb
and
jne
pusha
cmp
jno
mov
das
pop
jno
and
xor
jns
sbb
xchg
pusha
push
nop
jbe
inc
adc
in
mov
add
lods
add
adc
neg
dec
mov
mov
shrb
leave
pop
aam
jmp
and
loope
pusha
sub
xor
mov
sub
or
xchg
rorl
ret
pushf
aas
mov
inc
mov
aad
cwtl
or
mov
push
pop
sub
js
adc
mov
sti
out
and
push
jp
sub
imul
lret
xchg
rcrl
add
mov
cmpl
aas
adc
cwtl
inc
mov
ds
mov
or
dec
insl
cmp
dec
pop
fstps
and
cli
add
xchg
pop
nop
cmp
aam
xchg
jl
jmp
lods
loop
fildll
lods
rcr
insl
popa
popf
imul
outsb
int
psubb
pop
sub
aad
jp
mov
pop
lods
adc
push
mov
ds
bound
fisttpll
xor
shlb
inc
mov
mov
mov
push
xor
scas
fmuls
daa
leave
mov
xor
pop
push
popa
jmp
pop
mov
push
and
add
dec
jecxz
jmp
adc
dec
lret
dec
jo
jns
push
jmp
mov
xor
outsb
les
mov
jmp
clc
dec
mov
ret
jno
popa
push
adc
decl
push
lods
das
ss
cmp
aad
jbe
cwtl
push
test
inc
mov
lret
push
test
add
addps
mull
pop
lds
push
in
push
mov
inc
xchg
in
jnp
subb
clc
mov
mov
cmc
jmp
mov
cmpsl
scas
dec
dec
mov
mov
sub
or
subl
cwtl
inc
jmp
jl
pop
and
add
stos
aad
lret
sti
stos
rcll
mulb
mov
xchg
xchg
add
mov
clc
cmpsb
pop
add
push
lods
and
jmp
add
subb
es
out
xchg
pop
lock
mov
jno
sub
add
arpl
or
loopne
testl
mov
mov
cmp
js
stc
andb
sbb
in
xor
ret
jg
dec
jmp
add
inc
subb
enter
or
fisttps
cmc
mov
push
mov
add
es
mov
sar
add
or
pop
pop
mov
aas
addb
mov
mov
mov
or
fidivrl
mov
cmpsl
push
cmp
dec
inc
repz
pusha
in
cld
jbe
xor
jmp
cli
or
sbb
jb
xor
jmp
xor
cmc
push
jbe
ljmp
mov
or
push
call
mov
and
and
add
and
sub
add
sbb
das
mov
dec
push
sbb
jmp
mov
cmpsb
sub
aas
jp
stc
xchg
rcr
sahf
hlt
inc
add
jb
pop
push
jge
ficoms
mov
mov
daa
cmc
or
adc
ds
inc
jne
fs
mov
xor
lods
jmp
add
and
pop
push
pop
dec
lods
sbb
xor
sbb
pop
jl
add
cs
rdpkru
or
and
cmpsl
pop
lds
leave
adc
inc
mov
xor
xchg
std
jnp
sub
into
ret
orb
xor
push
add
jae
jmp
mov
test
inc
push
dec
aaa
push
adc
lret
inc
or
or
mov
clc
and
out
outsb
mov
sahf
inc
into
cld
push
and
lahf
sub
sbb
pusha
sbb
movsl
pop
mov
mov
adc
lret
add
fisubrl
icebp
sub
test
leave
loop
test
pop
shll
fisttpll
adc
push
scas
dec
pop
lret
stos
cmp
fwait
dec
mov
dec
icebp
or
add
in
out
pop
cltd
les
dec
orb
addr16
xchg
push
scas
lret
or
int
frstor
test
mov
jmp
aad
cld
cli
das
add
mov
das
xchg
push
xchg
inc
rclb
mov
and
imul
dec
lods
andb
xor
or
fs
add
nop
cmp
rcll
jle
pop
jnp
fstpl
ss
jmp
cld
imul
xchg
xor
mov
in
inc
xchg
push
dec
lods
or
mov
call
repnz
nop
dec
iret
shll
push
and
je
push
xchg
inc
sarl
bound
push
add
jmp
dec
jb
ja
push
test
pop
sub
cmp
dec
lock
pop
pop
xor
or
push
stos
or
dec
jo
filds
push
jge
leave
imulb
add
push
imul
jp
push
jge
and
or
je
loope
sub
or
out
xchg
mov
popa
add
insl
in
xor
or
and
xor
and
jmp
xlat
stc
cltd
add
in
lret
mov
sbb
insl
test
sub
push
pop
test
hlt
jo
mov
xor
leave
int3
inc
xchg
or
std
imul
add
mov
outsl
aas
cmpsl
xor
bound
in
cmpsb
pop
test
inc
jl
int
and
ficoms
lahf
add
test
mov
faddl
pop
leave
orb
sub
pminsw
aam
jge
lret
xor
mov
test
jecxz
mov
xor
push
xor
adc
out
sub
sbb
add
cli
sarl
mov
jg
mov
jge
movl
in
call
les
jnp
sub
jle
or
pop
inc
or
sub
push
pop
mov
pop
mov
jle
jae
or
jb
add
icebp
xor
or
adc
mov
or
jle
add
outsl
adc
aaa
add
fisttpll
es
mov
or
push
jge
cmp
fcmovne
loope
aam
dec
add
and
inc
dec
orb
add
sbb
movsl
aas
jnp
les
jne
ficoml
cmp
add
jge
sub
nop
andl
movlps
mov
lods
pop
and
test
jmp
mul
xchg
inc
std
andl
and
inc
iret
out
xchg
cmpsb
or
jmp
dec
push
out
pop
stos
jnp
and
mov
cmp
pop
mov
das
lods
mov
js
lea
bound
dec
push
mov
cs
pusha
mov
std
leave
ja
pop
push
mov
aas
ds
mov
hlt
out
lods
insl
test
add
pop
jbe
ret
and
frstor
pop
ljmp
add
sbb
out
dec
inc
in
and
std
jnp
out
ficomps
add
sub
lock
cwtl
mov
jl
xchg
mov
mov
jno
in
mov
and
es
push
addl
mull
jmp
mov
pop
mov
mov
cli
inc
xor
jnp
into
pop
daa
xor
stc
jns
mov
mov
sub
jmp
mov
inc
sbbb
mov
sub
or
pop
mov
je
fbld
xchg
mov
xchg
add
pop
adc
push
negb
mov
out
or
pop
shrl
hlt
adc
sub
sbb
xor
pusha
jbe
sub
inc
outsb
push
into
shlb
aaa
sbb
jmp
push
and
loope
nop
ljmp
fs
mov
xor
adc
xchg
or
or
xchg
loop
jge
xor
xor
cmpsl
imul
sub
popf
mov
ret
sub
push
mov
mov
push
pop
rcl
pop
cmp
sbb
cmp
cmc
and
int3
lods
hlt
enter
hlt
sbb
stos
cmpb
mov
mov
sub
popa
dec
cld
pusha
mov
xor
adc
push
mov
fcmovne
jo
fwait
mov
addl
sti
cwtl
fsubl
pusha
rcll
jmp
fs
lret
pop
inc
xchg
inc
ret
mov
and
jne
sbb
ja
adc
popf
mov
mov
dec
es
cmp
inc
mov
xchg
fucomp
ds
icebp
sbb
outsb
popf
das
dec
test
jns
fs
loope
inc
adc
add
test
pop
cli
mov
scas
xor
mov
cmc
pop
and
sub
lahf
mov
dec
clc
fistl
inc
hlt
pushf
into
jmp
dec
dec
sub
add
add
add
xchg
shl
pop
push
jmp
sarb
shlb
xchg
jl
jno
jb
add
pop
fldenv
subb
jge
lea
inc
xchg
lods
add
sub
inc
ds
add
imul
notl
out
mov
aam
scas
pop
pop
aam
mov
push
or
push
add
add
sub
adc
pop
add
or
jp
pop
int3
das
inc
leave
cwtl
push
or
rorb
sub
push
vpsubsw
push
nop
stc
jne
int3
movb
mov
mov
xor
xchg
xchg
sub
xchg
aaa
push
dec
nop
jecxz
pop
adc
fisubs
xor
dec
pop
mov
add
es
daa
push
cmc
cmp
sub
jmp
inc
addb
jle
fs
mov
cmp
std
pop
adc
test
pushl
lret
pop
xchg
xchg
frstor
dec
inc
icebp
sub
add
rcrl
mov
or
pop
idiv
jb
sarl
add
btc
inc
xor
pop
push
stos
sub
jnp
imul
cmp
add
sarb
cmp
in
rcrl
subb
jns
add
push
aam
jo
jmp
out
jle
dec
xchg
repnz
xlat
mov
adc
leave
jmp
dec
ds
stc
in
and
cmp
add
loop
dec
test
push
jecxz
inc
data16
rorl
pop
in
lock
pop
js
clc
shrb
out
not
fdivrl
mov
lea
loop
or
fldl
roll
enter
pop
mov
pop
push
push
std
cltd
insb
cltd
or
fsubr
cmp
add
dec
hlt
stc
mov
xchg
sbb
adc
add
sub
jl
sub
es
adc
jecxz
ja
pop
cmp
inc
mov
mov
or
and
pop
xlat
jge
adc
in
mov
xor
and
rolb
push
arpl
or
fwait
clc
pop
popf
repz
incb
push
sub
add
sub
adc
test
and
adc
je
sub
push
decl
push
js
push
jge
popf
dec
cmp
add
pop
push
cmpb
or
push
imul
int3
jmp
popa
mov
fsts
jmp
add
adc
cli
repnz
dec
jmp
loope
jmp
xor
in
testb
push
ds
sub
or
xor
sub
sub
je
cli
push
push
mov
dec
stos
ror
mov
jg
das
pop
in
mov
pusha
push
push
inc
fisttpll
fbstp
xchg
ret
in
mov
scas
jns
mov
dec
popf
push
lods
dec
je
push
and
cmp
mov
addb
out
nop
dec
dec
scas
pop
xchg
mov
mov
shlb
mov
mov
xor
jmp
lret
sub
das
jmp
test
pusha
insb
jne
xchg
xchg
add
sbbl
jle
out
pop
cmp
pop
es
or
xor
pop
pop
or
cmp
clc
sub
lret
div
inc
stos
inc
fsub
jge
shll
int
sbb
movb
xlat
push
push
ja
inc
jg
popf
inc
push
push
or
push
xchg
mov
cwtl
sbb
dec
addl
int
movsl
cmp
test
pop
ds
into
mov
pusha
push
lcall
repnz
daa
push
mov
hlt
or
and
mov
sarl
mov
adc
lods
adc
and
jno
mov
dec
push
dec
add
icebp
pop
xor
inc
mov
gs
or
add
sahf
mov
pop
pop
xchg
stos
dec
lret
jecxz
fsubs
pushf
and
das
sbb
test
pop
dec
push
jnp
add
or
add
xchg
xor
fists
popf
aad
movsb
jbe
repnz
dec
inc
xor
or
adc
adcb
xor
pop
ret
mov
nop
fmuls
std
pop
and
or
cmpsb
dec
jae
or
aam
cmpsl
loop
fwait
enter
mov
push
add
test
ret
repnz
invd
and
cmpsl
push
inc
inc
daa
enter
cmpb
or
popf
dec
pusha
sbb
pop
pop
fistps
inc
enter
mov
ds
mov
adc
xor
mov
xchg
out
shl
mov
or
sub
rcr
outsl
mov
xchg
nop
pushl
jl
aad
or
add
jne
cmp
xor
adc
int
fmuls
push
stc
cmp
ret
xor
and
cltd
out
or
jb
inc
nop
push
add
arpl
pop
add
mov
fs
sub
mov
cli
mov
divl
or
in
pusha
mov
push
inc
pop
scas
cmp
repz
hlt
xor
jmp
out
jmp
shll
ret
jne
or
jmp
scas
add
pop
mov
loop
pop
dec
mov
lds
enter
jo
mov
pop
xchg
stc
sbb
or
or
xorl
xchg
dec
shlb
cmpb
addr16
in
testl
dec
xchg
iret
cli
cmp
sahf
mov
mov
mov
push
inc
push
dec
dec
mov
jns
dec
inc
push
push
test
mov
add
add
pop
mov
in
xchg
lock
outsb
jmp
mov
testb
adc
dec
adc
lret
mov
lea
mov
push
and
push
mov
add
repz
jge
adc
push
mov
jne
cmp
mov
mov
ret
rcrl
inc
push
push
push
adc
in
pop
inc
pusha
sbb
sub
inc
add
shr
mov
push
div
inc
pushf
add
sbb
iret
jle
fldl2t
and
push
in
negl
dec
add
and
add
mov
fldl
pop
and
sti
pop
nop
mov
cltd
icebp
xor
mov
or
pop
xchg
sbb
dec
pop
hlt
repnz
push
test
cltd
gs
add
orb
scas
cld
inc
xchg
mov
imul
cwtl
leave
cltd
xchg
test
xchg
insb
adc
mov
shll
movsb
inc
inc
je
dec
aad
mov
mov
ret
orb
and
xchg
cwtl
inc
cmp
or
push
lret
sub
jg
orl
pop
es
or
insb
inc
jmp
flds
mov
add
adc
push
jmp
or
aaa
mov
mov
adc
sbb
xor
call
add
jmp
or
inc
xor
push
jle
inc
mov
mov
adc
or
mov
outsl
add
sbbl
gs
push
dec
mov
cs
inc
lret
sbb
fdivrl
dec
ror
ja
jne
mov
inc
subl
fistl
rcrl
sub
aad
out
out
jmp
xor
jmp
mov
mov
outsl
xchg
das
lcall
loope
pop
sub
sbb
add
jp
and
aad
push
pop
push
das
and
push
push
mov
and
std
popf
or
push
adc
or
jmp
aaa
inc
push
adc
add
dec
mov
push
and
scas
add
or
sbb
int
cmp
test
negl
std
das
and
or
sar
not
pop
sub
push
pop
jbe
mov
mov
rclb
add
jl
xchg
adc
pop
lret
mov
mov
movsl
lcall
push
loop,pn
xchg
xlat
scas
lock
jae
jns
loop
mov
movsb
sub
ja
push
loope
lcall
dec
enter
or
or
dec
pop
jae
test
inc
mov
cwtl
add
insl
es
pop
or
xchg
sbbl
pop
xchg
repnz
add
mov
lret
cmc
adc
js
jae
xchg
pop
or
loopne
push
jbe
scas
or
push
mov
mov
or
mov
nop
inc
and
popfw
js
mov
test
push
mov
add
add
jb
std
push
and
sub
push
int
popa
jno
xlat
pop
aas
mov
lock
dec
ds
or
dec
add
xchg
sbb
loope
xor
js
jle
jmp
shrl
andb
jge
jae
flds
and
insl
aas
and
dec
flds
dec
jne
pop
shll
cmp
push
inc
sbb
jle
daa
jg
stc
sub
cli
movsl
scas
nop
lods
clc
or
add
pop
call
test
adc
xor
add
adc
lret
inc
in
jmp
and
push
jp
cltd
ds
jo
xchg
pop
jnp
jb
bnd
cmc
adc
cmpsl
int3
mov
in
les
movsb
scas
sub
les
xchg
sub
cs
or
in
or
scas
and
adc
out
dec
fimuls
jmp
dec
loope
int
xchg
pop
test
sbb
mov
lds
jmp
add
es
inc
add
stc
push
jnp
and
mov
jmp
xchg
jne
lods
xchg
leave
les
mov
test
push
pop
inc
js
mov
lods
addr16
fcmovne
inc
jmp
pop
int
in
loop
aas
pusha
rcl
das
and
mov
in
inc
cmc
sub
popa
adc
sbb
fdivl
lock
mov
push
adc
xor
mov
pop
pop
sub
arpl
and
push
push
or
aad
orl
or
pop
lret
pop
pop
fucomp
sbb
dec
xchg
mov
addr16
cmp
mov
rcrl
ja
add
sub
aad
push
push
dec
lea
bound
cmc
dec
jnp
jno
inc
dec
xchg
pop
xchg
jmp
arpl
pop
push
pusha
mov
shr
or
sbb
out
loope
xor
das
lock
mov
sub
sahf
xchg
push
clc
out
sub
dec
mov
adc
xor
aad
inc
inc
scas
call
insl
adc
into
popf
das
lds
or
add
or
xlat
movsl
andl
loope
arpl
inc
add
jbe
les
orb
test
push
cmc
mov
inc
pop
xchg
stos
add
std
push
sub
jge
mov
repnz
dec
stc
adc
out
jge
lods
das
mov
cmpb
sbb
daa
jnp
pop
inc
lods
int3
mov
jmp
aad
repz
movsb
lods
icebp
push
repnz
push
inc
sub
mov
shr
cmc
cwtl
test
jg
inc
sub
loopne,pt
insl
adc
sub
pop
jmp
lock
out
out
mov
addb
push
idivb
cmc
inc
cs
inc
mov
lock
jmp
nop
mov
not
nop
shrb
jge
adc
decl
cli
lods
mov
add
sub
ljmp
jmp
fwait
add
into
push
repnz
and
jno
pop
inc
or
mov
jle
ret
jg
push
stc
pop
fiaddl
pop
aas
jl
xor
sbbl
loope
or
inc
repz
inc
xor
loop
push
andb
rorl
test
fcmovb
pop
ret
out
add
push
jmp
test
mov
inc
stos
mov
cmp
ds
lods
jno
push
mov
pop
int3
imul
sub
dec
std
mov
movsb
jns
pop
outsb
cld
mov
push
jae
cmp
jmp
or
pop
jne
cmp
mov
or
aas
fistpll
je
into
stos
inc
jge
ret
mov
dec
mov
std
test
out
or
sbb
loope
mov
sub
add
repnz
clc
hlt
add
shr
and
add
orl
cmp
icebp
mov
mov
add
sub
dec
push
mov
popf
inc
repz
out
aam
xor
icebp
lret
ficompl
nop
ficoml
inc
data16
iret
cld
push
pop
inc
addl
test
mov
jne
add
gs
out
orl
pop
movsb
fbld
add
xchg
js
popf
stc
and
dec
ljmp
sub
call
sub
int
xlat
or
subb
push
dec
les
cmpsb
and
mov
push
add
and
cwtl
fnstsw
inc
int
loopne
adc
or
cld
push
leave
push
inc
test
aam
fbld
inc
push
idivl
mov
push
xchg
mov
faddl
popa
push
sub
popa
out
xchg
out
mov
push
xor
sar
xorl
sbb
mov
pop
clc
notb
bound
fs
push
lret
mov
jge
xchg
nop
popa
xchg
fmull
xchg
icebp
add
jmp
adc
ficompl
sub
xlat
xchg
sbb
add
pop
arpl
push
shll
push
jmp
aad
js
jae
inc
movsb
inc
inc
sub
pop
adc
leave
mov
or
enter
add
push
cmp
mov
xchg
pop
xor
pop
mov
adc
push
and
jl
adc
push
sbb
test
and
sub
loopne
xorb
push
jo
dec
lret
xor
fwait
cmp
dec
mov
push
lcall
dec
cwtl
adc
xchg
ret
arpl
shl
or
mov
jmp
clc
ret
jge
lea
in
outsl
mov
sub
pop
loope
inc
mov
das
push
push
mov
mov
add
add
shrb
adc
in
gs
xchg
xor
rcrb
js
and
add
shr
repnz
xor
sarb
mov
filds
push
pop
push
xor
lret
test
movhps
or
and
insl
mov
mov
add
and
or
add
or
sub
stos
add
lret
test
inc
jg
sub
mov
add
ljmp
mov
or
loopne
lea
fisubrs
mov
pop
add
daa
jmp
mov
shr
notb
add
hlt
jl
dec
xor
pop
push
loopne
and
pop
in
dec
add
jo
loopne
lock
pop
or
out
push
adc
cmp
jge
and
insb
pusha
push
jge
addb
mov
sbb
aam
sbb
lea
lods
repz
jmp
cltd
cli
inc
push
out
pop
and
pusha
sub
xchg
cwtl
jmp
cmp
xchg
pop
lea
push
add
sub
aad
shl
int
xor
or
push
ud2
xor
and
push
std
mov
notl
jmp
rcr
xor
or
or
sbb
cmp
popf
mov
mov
mov
add
mov
aaa
pop
cmp
subb
pop
push
push
jmp
in
loopne
mov
add
dec
ret
sub
jmp
mov
insl
or
imulb
or
jno
dec
pop
mov
dec
xchg
ror
mov
adc
pop
arpl
push
inc
icebp
pop
pop
pop
jecxz
xor
or
or
enter
sti
test
out
mov
pop
cmp
sbb
popf
jns
cmp
push
mov
mov
inc
ja
dec
mov
mov
pop
push
or
mov
pushf
clc
ds
push
decb
push
inc
jns
das
xchg
ficoml
ljmp
inc
ret
push
cmp
inc
ret
pop
in
jns
shlb
dec
lods
mov
adc
mov
add
lret
shl
sbb
adc
fcomi
inc
or
sbb
test
add
pop
xor
clc
lods
mov
xor
movsb
pop
mov
add
dec
out
pop
push
mov
xchg
inc
or
add
xorb
cmp
js
add
mov
jge
adc
mov
and
xchg
scas
cmp
adc
sbb
out
loopne
ret
jmp
movl
inc
sub
add
push
and
or
test
pop
call
mov
mov
mov
mov
in
sbb
sbb
push
or
pop
cmp
addr16
call
add
push
jmp
lret
popf
movlps
lea
js
repz
fcmove
add
inc
repz
sub
sub
rcrl
adc
test
jp
dec
cmpsb
jge
inc
xor
jns
add
icebp
sbb
movsl
jl
jb
lods
stos
in
add
inc
or
xchg
loope
push
iret
sub
sbbl
mov
mov
pop
aaa
mov
push
mov
push
inc
movsl
push
and
mov
adc
pop
loopne
loopne
loope
and
das
test
cs
call
sub
pop
rcrl
push
pushf
mov
push
add
jl
push
mov
ja
frstor
sbb
movsl
push
jge
enter
jl
push
jmp
cltd
sahf
jnp
test
jno
inc
popf
sub
inc
subb
scas
push
or
arpl
repnz
pushf
xchg
mov
mov
icebp
test
les
mov
or
mov
ds
lods
pop
les
sub
jne
lds
push
cmp
push
jbe
fldenv
adc
add
imul
rcrl
fmull
loope
jg
push
iret
push
or
jmp
adc
lds
push
pop
mov
xchg
test
inc
fisttpl
fstps
outsb
mov
xchg
sarb
leave
sub
jle
jmp
pop
dec
and
adc
addr16
sahf
cwtl
aas
loopne
out
inc
xchg
pop
inc
jne
shlb
test
xchg
lods
mov
call
adc
mov
mov
push
pop
imul
nop
or
test
in
test
xchg
popa
mov
push
ret
jmp
pop
inc
push
jecxz
daa
add
popa
mov
xor
cwtl
pop
add
inc
push
outsb
ror
movq
rcrl
sbb
pusha
mov
sbb
or
dec
jl
pop
or
sub
and
andb
mov
paddsb
cwtl
or
sbb
mov
sbb
repz
or
cmp
dec
jge
test
mov
inc
call
dec
pop
push
add
mov
jp
sbbb
pop
out
xor
add
lahf
xor
adcb
mov
sbb
dec
add
sub
std
mov
or
push
mov
and
inc
cwtl
cmp
leave
xchg
or
movb
xchg
add
push
push
je
shl
nop
or
jb
cmp
dec
mov
and
pop
sub
loopne
inc
push
mov
faddl
pop
mov
mov
mov
push
movsl
filds
pop
jmp
aad
add
pop
add
mov
dec
faddl
jl
into
aaa
and
dec
mov
cmp
fnstsw
add
stc
push
pop
orb
ret
test
cmp
dec
or
jge
sbb
jno
inc
mov
add
sub
add
rorl
pop
mov
and
inc
cmc
dec
xor
mov
daa
inc
push
xchg
inc
test
cwtl
inc
aam
cld
push
leave
ja
jp
ficoms
mov
cmp
and
inc
adcl
jmp
jns
movsb
mov
mov
dec
adc
or
and
mov
movsb
jae
adc
fucomi
adc
decb
out
sub
mov
sub
mov
or
sub
push
add
jmp
cld
add
mov
andb
into
and
jg
jno
gs
push
pop
out
lret
jmp
push
daa
xor
mov
testl
insl
sbb
test
mov
mov
lret
sahf
push
xchg
addr16
in
cld
add
loop
imul
xchg
pop
dec
stos
sub
hlt
mov
xchg
das
fsubr
or
or
push
mov
mov
jae
dec
push
inc
dec
pop
hlt
lahf
or
fs
add
ss
push
ret
mov
ffree
call
mov
push
xor
fildl
push
dec
fdivs
mov
rclb
xchg
dec
and
xchg
sbb
inc
sub
pop
xchg
adc
and
jecxz
add
or
xlat
sub
aad
pop
jmp
loopne
mov
add
mov
or
jl
in
lcall
pop
lret
or
mov
addr16
adc
insb
xor
and
call
daa
jmp
cltd
add
mov
sub
test
ds
sarb
push
sbb
pusha
pop
in
sbb
or
or
insb
add
ss
ja
xchg
push
xorb
or
sub
push
dec
jae
in
cmp
pop
repnz
xchg
ss
std
nop
cs
xchg
mov
jge
mov
fsub
int3
xchg
insl
jg
into
movsb
in
mov
cmc
aaa
add
test
repnz
shl
add
arpl
idivl
jle
add
test
cmp
mov
divl
ds
sub
sti
jnp
jle
lods
xchg
mov
fadd
add
adc
adc
imul
rclb
lret
jo
pop
shl
dec
fcoml
rcll
stos
lock
test
add
sbb
or
shll
pop
push
fsubrs
add
jge
push
jae
aad
stc
xchg
xchg
or
jae
sub
repz
jne
push
mov
dec
inc
mov
adcb
push
cmp
xchg
andb
ret
stc
sahf
lods
decb
jmp
mov
and
inc
xchg
inc
xchg
push
sbb
push
rcl
add
cmc
push
cmpsl
push
cmpsl
push
ja
or
xor
mov
stos
xor
jle
lret
imul
xor
jmp
xor
jmp
les
and
out
mov
and
mov
inc
pop
repnz
or
mov
aad
enter
ss
jo
fstl
jp
sub
jne
icebp
pop
out
pop
arpl
xor
in
fadds
lds
add
dec
outsb
adc
out
push
pop
sub
aam
xorl
mov
pop
and
xchg
movups
pushf
adc
add
push
push
jp
or
ja
lcall
scas
divl
lods
std
adc
jno,pt
add
inc
clc
pushf
stos
xchg
das
jo
push
lds
or
loope
push
fldenv
adc
adc
mov
add
pop
iret
jns
add
loop
hlt
fiaddl
cmc
jae
fucomip
add
loopne
and
add
lods
insb
cwtl
out
push
adcb
add
and
add
pop
dec
adc
jmp
lods
cmp
lods
pop
bound
icebp
mov
faddl
pop
hlt
xchg
xchg
pop
sbb
lods
mov
add
mov
and
js
or
ljmp
je
inc
in
cmp
clc
jb
mov
inc
adcb
out
ret
jmp
in
nop
movsl
or
inc
jno
ret
mov
sahf
gs
adc
xor
aas
loop
add
cmpsb
or
mov
cmpsl
pop
mov
adc
mov
out
cltd
sub
and
adc
add
pop
and
aam
jge
pusha
adc
gs
add
cmp
jnp
fnsave
test
fcmovnb
jmp
mov
add
sbb
xchg
mov
leave
jl
mov
mov
ret
rcl
and
enter
push
sub
pop
mov
dec
inc
cli
in
sti
dec
cwtl
sbb
adc
int
rolb
cltd
lds
ret
xor
jecxz
jmp
into
out
add
jne
push
and
cs
das
pusha
shl
add
repnz
lds
sub
insb
stc
and
pop
mov
mov
es
cwtl
sbb
inc
push
ficompl
mov
inc
ret
push
cmp
adc
add
push
shll
sbb
mov
pop
aad
xchg
stos
nop
sub
test
cmovs
inc
das
sub
pop
popa
or
mov
mov
cmp
jbe
out
es
pop
add
loope
daa
jg
loopne
push
js
out
add
fisubrs
sahf
add
aam
sbb
ljmp
xchg
add
imul
test
push
mov
add
mov
sahf
xchg
dec
scas
sbb
dec
aam
ljmp
gs
push
in
and
push
sarb
push
cli
imul
stos
pop
js
push
mov
jg
inc
pop
loope
incl
ja
dec
aaa
nop
enter
xor
cmpsb
js
bound
mov
je
fwait
mov
mov
or
xchg
je
adc
inc
loop
test
cmp
xchg
inc
movsl
jg,pn
mov
cmp
dec
jo
and
pop
add
test
adc
jbe
push
mov
push
push
jge
sbb
xor
add
jle
dec
stos
or
sub
pop
jle
jno
out
add
xchg
push
cmp
ja
add
test
inc
psllw
add
outsb
mul
sub
cmp
mov
mov
jl
subb
add
rcll
and
inc
mov
add
jbe
cli
mov
mov
xchg
ja
rorb
scas
movsb
add
cmp
jb
enter
fst
add
mov
xchg
jnp
aam
push
int
sbb
add
repz
add
sbb
pushf
jp,pn
add
movsb
sub
xor
push
push
cmp
out
add
lods
shl
mov
enter
pop
mov
jnp
lahf
pop
cld
popf
loopne
shlb
mov
add
fs
lahf
add
shr
inc
push
mov
sahf
jg
pop
std
lcall
xor
jne
and
out
add
add
push
cmpsl
insl
in
or
mov
stos
rclb
leave
daa
adc
nop
pop
add
cmp
addl
imul
int3
adc
add
sub
and
push
jb
add
and
gs
jg
inc
jmp
add
dec
rcrb
roll
cmpsl
daa
sahf
notl
inc
or
adc
push
icebp
add
ljmp
pusha
out
out
popa
push
shr
cmpb
scas
jge
insb
not
cmp
clc
add
mov
add
ret
xchg
outsl
fnstcw
fisttpl
lcall
outsb
or
or
add
jg
aaa
or
add
add
mov
ret
xchg
add
inc
loopne
int
in
das
pop
xchg
cld
adc
cmp
mov
mov
xorb
add
aad
push
shl
adc
out
add
aaa
dec
push
mov
xor
jmp
inc
loope
xor
mov
divb
xchg
add
or
mov
shl
in
push
cltd
loop
dec
and
and
shlb
push
sub
add
js
cmp
push
shrb
orl
or
pop
dec
sti
das
jmp
pop
pusha
fists
mov
push
jns
nop
or
pusha
fcmovnbe
sbb
xor
dec
and
stc
sub
add
push
les
add
or
icebp
cmpsb
test
mov
cmp
add
mov
adc
cwtl
cmp
adc
fdivs
push
cmc
insl
cmp
out
and
add
add
jne
insb
sub
aad
pop
sbb
add
lret
dec
dec
lret
inc
mov
arpl
inc
inc
lock
daa
add
nop
subl
popf
inc
push
and
imul
mov
loope
mov
mov
pop
addb
jmp
sub
xchg
xchg
jo
add
lahf
fdiv
ret
pop
xchg
add
into
mov
adc
add
lret
xor
add
iret
movl
jge
stos
and
insb
pusha
mov
pop
or
jle
adcb
xchg
clc
out
push
setb
filds
adc
jae
shlb
adc
or
inc
pop
mov
aas
sbb
pop
add
in
mov
lods
sub
inc
inc
test
xchg
cmp
mov
cmp
mov
std
cmpsb
and
pop
add
jo
xor
or
add
outsb
daa
js
push
cmpsb
pop
inc
nop
xchg
fdivrs
loopne
adc
cwtl
sub
in
xor
enter
add
dec
cli
add
mov
imul
mov
lahf
push
repnz
dec
mov
call
insl
cmp
xchg
dec
pop
mov
add
xchg
cs
add
pop
xor
add
add
dec
jne
push
inc
or
jo
jle
int3
lahf
pop
shrb
add
mov
inc
repnz
movsl
adcb
adc
lods
pop
cmp
jne
pusha
ret
scas
add
fstp
xor
mov
jno
adc
nop
mov
aaa
fnstcw
jb
loop
push
sbb
jp
fsubrs
add
fsubrs
jg
mov
cli
cwtl
cmp
lret
mov
inc
imul
pushf
lods
out
xchg
imulb
dec
inc
and
aad
sbb
pop
jl
sbb
aam
and
testb
add
push
bound
nop
cs
test
jb
fiaddl
or
mov
cwtl
push
mov
inc
xor
and
pop
cmc
fdivrl
add
mov
iret
adc
sbb
testl
dec
or
icebp
push
sub
push
add
xchg
nop
sbb
sbb
and
xor
add
push
mov
inc
lock
loopne
add
in
cmpsl
add
add
mov
jecxz
add
jne
es
ss
add
test
lcall
icebp
sub
sbb
fistpl
insb
mov
out
nop
mov
dec
push
cmp
add
mov
imul
sti
enter
add
je
pop
add
dec
mov
inc
jne
inc
fidivl
and
mov
add
or
dec
add
dec
sub
push
ret
into
add
or
cwtl
ds
xor
inc
sub
loopne
incl
inc
lock
test
pop
test
or
push
mov
add
dec
loop
call
jg
cmp
add
push
xor
mov
inc
stos
or
cmp
aam
out
add
mov
cmp
sbb
movsb
cmpsl
sbb
outsl
xchg
pusha
sti
imul
xchg
push
pop
inc
adc
fsubl
add
xchg
hlt
rclb
cwtl
add
test
add
incl
add
xchg
data16
mov
popf
add
sub
push
mov
xor
int
mov
sub
adc
mov
add
daa
and
fldl
push
sbb
fidivs
push
add
movsl
repz
aad
lods
sub
cmc
add
aam
cwtl
and
fiaddl
xchg
xchg
or
push
scas
or
add
fxtract
xor
jg
aam
cmc
mull
enter
jne
pop
pop
pop
mov
rolb
dec
outsb
popf
add
lods
xlat
add
sbb
je
mov
pop
pusha
aaa
fnsave
and
int
adc
jns
sub
sbb
pushf
jb
dec
sbb
popa
cwtl
ret
add
arpl
insb
add
movsb
int3
in
fiaddl
inc
sahf
cli
adc
add
push
inc
imulb
dec
cmc
fstps
lgs
push
outsl
aas
cwtl
jmp
inc
and
out
lock
push
add
testl
xor
divb
jl
aam
push
dec
lock
shrd
and
out
add
sbb
sub
int
dec
arpl
enter
add
imul
sbb
xorb
mov
icebp
mov
cld
fiadds
add
xor
cwtl
out
pop
xchg
movsb
add
add
lahf
cli
xchg
gs
or
add
mov
loop
int
sbb
push
jge
and
jg
add
sub
inc
shl
add
cmp
dec
cmp
mov
dec
pusha
add
or
add
enter
sub
fisttpll
add
and
pop
mov
leave
cmp
jnp
add
inc
lea
jmp
jnp
out
push
add
movsb
mov
xchg
lret
shrl
add
mov
enter
sub
sub
fbstp
scas
adc
fiaddl
loopne
mov
push
imul
mov
pop
cli
and
lock
mov
pop
or
add
adc
push
pop
lret
fists
gs
sbb
repz
and
or
rorb
imul
adc
nop
into
or
mul
idiv
mov
pop
fs
jp
add
add
push
test
lds
dec
and
push
add
dec
mov
mov
fstps
call
psubsw
stos
rol
sub
cld
pop
jno
pop
rcll
cmp
add
inc
add
jns
aam
add
sub
add
sub
sub
mov
loope
lods
into
inc
add
inc
jp
add
sub
lea
mov
js
cmc
push
test
iret
and
add
in
out
sub
mov
arpl
pop
add
test
mov
add
js
pop
cs
mov
pop
push
repnz
adc
subb
inc
pop
loope
lret
push
add
iret
and
mov
mov
xor
js
pop
dec
ljmp
adc
mov
pop
push
test
or
shlb
fimull
outsb
mov
push
loopne
or
icebp
jbe
pop
cmpsb
into
pop
scas
inc
mov
pushf
xor
or
lods
arpl
addl
push
das
inc
pop
nop
fucomp
repnz
pop
push
push
xchg
jp
mov
popa
std
jmp
xchg
test
hlt
lcall
popf
cwtl
clc
jno
cltd
and
jae
icebp
in
and
mov
add
in
cmp
ljmp
xor
xchg
fmul
out
movsl
insl
add
gs
jbe
inc
xchg
push
mov
push
push
fidivs
pop
jae
add
inc
mov
jmp
xor
push
sbb
adc
out
test
mov
inc
and
mov
fadd
mulb
repz
int3
lret
int3
adc
add
jle
and
xchg
inc
fcoms
pop
jnp
sbb
pusha
lds
jne
mov
add
enter
fdivl
add
push
xor
jp
adc
aad
jnp
je
les
mov
popa
and
in
adc
xchg
aaa
xchg
lds
in
nop
push
add
inc
int
jecxz
or
xor
loopne
into
cmp
jo
dec
cwtl
mov
mov
add
pop
mov
fimuls
les
dec
inc
jnp
push
add
enter
testb
add
mov
mov
hlt
sbb
in
outsl
mov
push
pusha
cmp
loopne
imul
mov
enter
or
push
add
mov
cmpsb
inc
pop
cli
dec
in
add
xchg
jecxz
push
add
fcoml
add
shr
scas
xchg
dec
add
insb
mov
dec
leave
je
cmpsb
push
je
pop
movsl
ffree
insb
fwait
leave
pop
sub
hlt
lods
add
sbb
add
stos
test
fistl
or
and
mov
loope
into
lods
les
push
clc
cmp
sub
in
jge
adc
popa
ret
cmp
pop
stc
jb
mov
mov
pop
xchg
inc
adc
jo
inc
sub
repnz
pop
sub
insl
rclb
add
or
inc
cwtl
cmpsl
add
rcl
mov
inc
add
repnz
movsb
pop
iret
loop
sti
dec
sub
int
js
inc
mov
pusha
push
xchg
inc
mov
fdivrs
and
dec
xor
add
hlt
out
fcomps
add
popf
lret
jmp
cmp
test
and
jae
add
jno
cmpsl
or
outsb
add
mov
xor
fstpt
rcll
mov
sarb
ja
out
mov
pop
and
jle
das
mov
ss
add
rol
pop
or
std
cwtl
roll
in
pop
stc
cmp
dec
adc
cmp
icebp
pop
test
adc
out
ret
rclb
inc
jmp
les
arpl
jns
inc
test
das
ret
scas
sarb
hlt
adc
jl,pt
mov
and
mov
xorl
es
scas
xor
jecxz
push
arpl
sti
sub
sahf
cmp
dec
enter
sub
adc
adc
aam
iret
scas
or
call
roll
sub
pushf
pop
add
mov
cwtl
xor
adc
push
jnp
inc
into
inc
adc
jp
fs
loope
ret
ljmp
cmp
insl
jecxz
stos
jno
add
ret
or
push
mulb
adc
mov
int3
je
add
in
sbb
cmpxchg
cltd
loopne
fisubrl
jns
movsl
pop
repnz
lahf
pop
sbb
inc
jno
or
mov
adc
popa
mov
sbb
dec
enter
pop
adc
xchg
in
dec
xor
xchg
loopne
pop
popa
mov
int3
push
bound
or
aam
mov
mov
pop
jle
or
push
add
jge
add
adc
mov
sub
lret
shrb
sbb
daa
pop
jae
mov
cmc
add
add
cmpsb
aaa
es
iret
add
push
adc
jnp
pop
xor
sti
cmpsb
pop
pop
iret
inc
add
aas
rorl
cmp
mov
in
cmp
pop
in
daa
add
mov
pop
inc
out
push
hlt
inc
jp
add
mov
cltd
mov
add
test
insb
dec
pop
mov
out
xchg
addl
xor
mov
loope
add
insb
push
pop
cld
cmp
in
int3
test
and
add
mov
mov
add
xchg
push
jno
jbe
add
lock
testl
call
xchg
xor
out
sub
fstpt
mov
inc
int
cmp
enclu
or
sbbb
adc
scas
jne
mov
mov
stos
sti
adc
out
clc
add
dec
aas
les
xorb
adc
jg
cmp
mov
and
sub
xor
xchg
dec
jmp
jmp
loopne
xlat
xor
xchg
add
xlat
inc
xchg
nop
mov
out
add
add
inc
popa
dec
push
xchg
add
outsb
sub
add
add
inc
movsl
add
mov
push
lods
insb
sti
add
jo
xchg
mov
add
or
add
hlt
icebp
pop
mov
lock
ss
fcompl
xor
push
popf
jg
movsb
pop
push
xchg
xchg
push
sub
push
push
test
add
jo
xor
ret
add
or
fwait
xchg
lock
in
addr16
inc
and
daa
fldt
jb
out
pop
push
ffree
cmp
mov
add
sahf
pop
xor
cmp
and
xchg
leave
jl
dec
dec
stos
add
or
rolb
push
call
lock
test
test
adc
leave
fsts
clc
add
add
testl
jo
orl
clc
pop
ds
dec
rcll
sti
cmp
stos
add
out
add
mov
scas
push
cmc
pop
sarl
or
sbb
xor
mov
add
and
fiadds
cmp
mov
adc
enter
pop
test
jmp
jle
std
pop
dec
mov
dec
mov
jl
adc
push
enter
add
movsl
inc
or
dec
in
inc
push
aam
pop
mov
add
sub
push
add
cmp
icebp
sbb
mov
bound
xchg
push
mov
mov
out
out
inc
push
int3
test
xchg
aam
dec
dec
ret
xorl
push
and
push
dec
lds
or
gs
dec
pop
inc
cmp
ljmp
pop
fs
push
stos
dec
faddp
pop
test
xchg
inc
shrl
rorb
cwtl
sub
xorl
and
add
pop
or
add
add
pop
arpl
or
dec
mov
cld
std
add
cs
dec
test
inc
inc
jge
xchg
add
mov
negb
cmpsb
in
sahf
jo
adc
lds
aad
push
cld
pop
xor
mov
mov
sub
popf
pusha
xorb
add
sub
aas
xchg
adc
sub
add
mov
ss
daa
sbb
inc
dec
mov
add
hlt
enter
add
mov
inc
mov
or
push
bnd
outsl
push
pop
xchg
mov
and
fstl
add
sbb
or
lock
popa
pop
call
cmp
xor
cmpsb
hlt
aaa
test
mov
pop
xchg
ss
mov
fucomip
push
adc
add
das
lock
push
dec
and
add
xchg
add
icebp
and
imul
lea
loope
and
push
fs
cmp
aaa
pusha
add
scas
fwait
or
ljmp
adc
es
shlb
outsl
push
jmp
pusha
stos
pop
pusha
pop
mov
and
sub
and
inc
pop
lods
sub
and
gs
ss
and
jecxz
xor
insb
iret
add
cmp
mov
shlb
inc
movsb
enter
mov
pusha
adc
inc
cmc
sbbl
cmp
add
xchg
xor
std
bound
bound
dec
mov
aas
int3
jle
inc
faddl
les
in
inc
mov
out
inc
jp
add
xchg
sbb
test
cmp
adc
ret
fwait
inc
pop
mov
inc
in
add
lret
dec
sub
jno
push
mov
push
sbb
mov
cmp
sub
ljmp
shll
iret
fwait
lret
xor
loop
xchg
rorb
addr16
and
xlat
jle
and
push
jno
dec
add
ret
inc
cld
adc
add
xor
cmp
testl
mov
and
rcr
sub
or
mov
add
mov
adc
std
or
inc
cmp
loopne
sub
outsl
and
sub
or
test
leave
xor
sub
pop
les
pop
cmp
test
rolb
test
xor
js
andl
icebp
adc
cld
xchg
out
or
cmp
sbb
cs
and
sub
sub
jmp
test
in
loope
popa
mov
shlb
lock
push
or
stos
pop
sbb
cld
cwtl
mov
pop
es
shll
and
pop
pop
or
xor
fs
std
data16
xchg
mov
mov
and
rclb
mov
push
xor
les
inc
and
clc
test
mov
pop
xor
inc
dec
mov
pop
xor
mov
mov
in
add
leave
arpl
jno
fwait
mov
notb
ret
mov
or
ficomps
mov
mov
aam
xchg
xlat
aam
out
or
bound
and
xor
and
lea
adc
addr16
jle
popa
pop
add
nop
adc
adc
xchg
lds
lods
or
pop
or
cmpsl
add
lcall
sbb
test
lahf
push
cltd
inc
mov
add
sub
sub
pop
test
and
jl
xchg
nop
push
cwtl
pushf
push
inc
gs
mov
mov
pop
es
in
xchg
popf
fcom
and
daa
push
popa
push
enter
scas
lcall
filds
out
cmpsb
fsubrs
push
in
pop
add
imull
inc
loopne
lahf
mov
ljmp
cwtl
cmc
mov
test
mov
stos
and
aam
enter
cld
arpl
pop
adc
roll
enter
push
xchg
add
wbinvd
das
ret
sub
inc
sub
xchg
mov
inc
mov
xchg
call
call
loope
and
mov
and
cmp
xchg
dec
adc
cli
adcl
jb
adc
cmp
sub
imul
push
mov
lcall
push
repnz
mov
sbbl
xlat
or
mov
movsb
jb
lahf
out
xor
or
pop
inc
out
cld
cli
ret
add
mov
sbb
mov
lcall
movsl
sahf
fnstcw
cltd
pop
cld
stos
lea
push
fmull
pop
leave
add
mov
xor
fadds
cmp
push
inc
jns
add
popa
xlat
sub
and
push
icebp
add
je
lds
lret
push
addr16
aas
mov
ret
ja
es
add
inc
stos
sbb
hlt
xor
into
ja
cli
mov
outsl
push
mov
or
xor
and
pop
popa
cmpsl
push
cmp
add
mov
dec
loopne
pop
stos
mov
test
idiv
or
adc
aam
imul
popa
add
insb
in
icebp
rcll
cvttps2pi
test
sbb
pop
icebp
push
xchg
pop
jecxz
dec
add
dec
stc
std
lods
adc
jp
add
movsb
push
int
rep
fdivs
mov
call
lcall
cwtl
je
lods
dec
repz
jns
pop
movsb
cmp
ficomps
inc
das
mov
cmp
push
dec
cmp
fcoms
pop
out
dec
mov
shlb
jl
inc
paddb
push
cmp
mov
pusha
adc
push
iret
lds
or
stc
shl
or
or
cmpsl
clc
push
test
lea
pusha
inc
sbb
cli
cld
add
pushf
push
jns
int
mov
xchg
scas
mov
sub
push
mov
test
push
jg
mov
fyl2xp1
xor
sbb
sub
rolb
in
mov
dec
movsl
dec
pusha
pushf
sub
xchg
fs
pusha
pop
or
lds
int
jo
ss
add
pop
push
sbb
adc
push
pop
cmp
adc
push
adc
add
sbb
imul
loope
and
adc
add
adc
pop
clc
push
les
mov
repz
jns
sbb
cld
or
or
or
xor
push
sub
sub
out
popa
lahf
out
bound
cmp
into
dec
int3
js
adc
cmpsb
or
add
xor
pop
loopne
adc
adc
mov
enter
mov
fisttpll
or
test
or
and
mov
add
jmp
fmull
adc
fs
push
xchg
push
and
pop
pop
mov
pop
and
dec
dec
xchg
dec
and
push
push
mov
lock
add
and
hlt
test
gs
cs
sub
pop
shrb
pop
push
add
stos
roll
out
aaa
adc
call
and
jne
xor
icebp
nop
inc
gs
adc
inc
aaa
add
call
inc
or
add
std
xchg
scas
mov
aas
inc
add
dec
xor
or
mov
xor
add
pmuludq
inc
xlat
sbb
dec
aad
or
mov
push
pop
gs
add
lahf
mov
bnd
and
movsb
dec
cmp
fldenv
mov
gs
sbb
std
sub
or
loop
pop
xor
or
xchg
xor
push
scas
sub
jmp
in
add
inc
lea
lock
pop
lock
scas
adc
repz
cltd
mov
sbb
aas
lods
mov
lahf
pop
insl
rorb
cmpl
inc
arpl
cmp
cltd
jb
popa
add
lea
add
stos
out
lods
jp
ror
loopne
out
adc
or
jb
inc
mov
dec
lods
loop
add
jge
out
cltd
scas
stos
imul
push
mov
icebp
cmc
ds
cld
pop
push
pavgw
push
add
jle
push
cmp
cmp
pop
movsl
sub
fildl
xchg
ljmp
add
dec
mov
pusha
xor
shrb
stc
out
addl
dec
or
in
cmp
and
add
fucom
scas
push
cmpl
add
push
loop
add
adc
in
ja
add
cmp
push
jae
push
and
fadds
loopne
fiadds
lods
push
sub
add
mov
and
ror
xor
and
or
pop
daa
and
adc
xor
add
sbb
and
ret
scas
add
mov
push
add
inc
enter
leave
pop
dec
es
xchg
mov
jo
test
scas
sbb
pop
addl
or
push
mov
inc
hlt
mov
es
add
cmc
scas
lahf
mov
sahf
xchg
inc
xorb
pop
mov
cmpsl
adc
dec
add
cmp
add
inc
mov
ds
pop
adcb
sub
add
mov
psrad
xor
fadds
cwtl
xor
in
jp
ja
jno
js
sbb
arpl
push
sbb
xchg
loopne
movsl
inc
dec
sbb
pop
inc
fldt
mov
cmp
idiv
mov
jmp
insb
dec
xchg
xchg
pop
xchg
lahf
mov
hlt
addb
imul
pop
inc
push
cmp
in
and
flds
jp
adc
add
mov
loope
mov
dec
mov
data16
je
faddl
icebp
fisttps
sub
dec
cmpsl
iret
pop
movsb
add
lea
outsb
cld
or
or
xchg
sbb
and
jo
add
pop
add
cmp
jnp
stc
xchg
sbb
lcall
add
faddl
sti
cwtl
lcall
xor
in
xchg
push
cld
divl
fwait
jns
sbb
iret
cmp
shll
fidivrl
mov
adc
pop
xchg
push
repz
adc
test
add
push
add
or
add
ja
cmp
add
mov
test
adc
mov
mov
lret
outsb
jle
stc
out
loope
sub
jecxz
jb
pop
push
ljmp
and
dec
sbb
mov
push
inc
lock
psrad
fcoms
cmp
rolb
xor
ss
push
adc
push
aas
mov
addl
add
test
icebp
in
loope
xor
adc
in
mov
data16
jns
in
test
xlat
outsl
mov
add
add
lds
ror
add
mov
out
jp
loop
and
frstor
fsubr
popa
fistps
rorl
je
pushf
or
jo
add
test
push
shrb
ret
push
mov
int3
mov
cli
sbb
add
add
jge
rol
insl
add
mov
test
sti
pop
mov
mov
or
aam
leave
rcrl
add
cmpsl
or
pop
xchg
add
mov
stc
imul
sarb
adc
mov
mov
mov
inc
sbb
leave
comiss
pushf
and
mov
xor
sbb
push
stos
lret
in
adc
add
xor
enter
mov
cltd
and
dec
add
mov
add
xor
add
cmp
mov
xchg
cmp
cmpsl
mov
cmp
push
and
mov
pop
push
xor
xor
xchg
hlt
push
or
sbb
das
setae
push
adc
pop
sub
add
outsl
mov
push
lods
fcmove
adc
loopne
pop
jecxz
or
gs
ret
push
sub
gs
or
pop
cmp
lds
or
insb
or
push
ja
into
sub
mov
pop
adc
pusha
pusha
xor
pop
pop
mov
add
pop
and
cmp
push
add
aaa
xor
sbb
pusha
jae
or
push
movl
jg
add
adc
pusha
popf
add
fdivs
stos
rclb
xchg
test
inc
xor
add
dec
xor
in
gs
add
pop
add
jae
psllq
outsb
jb
mov
jno
movsl
addr16
sbb
sub
jle
add
cmp
mov
add
xorb
cmpsb
call
ret
xor
rcll
xchg
arpl
xorb
loope
cld
add
push
sub
jge
lcall
js
add
mov
out
js
loope
ss
mov
mov
xrelease
out
ja
cmp
add
jp
mov
lock
loope
call
or
out
fcomi
jnp
movlps
or
ds
adc
shll
and
add
outsl
cmc
jno
inc
inc
pusha
outsb
or
jle
pop
rcrb
scas
pushf
add
xor
add
mov
xor
out
lods
sti
fadd
outsb
ja
add
xor
push
gs
and
sti
and
scas
pop
inc
jns
xor
xchg
js
adc
mov
lret
rclb
jns
test
sub
push
cmp
adc
jnp
xor
pop
div
sbb
pop
and
add
inc
loop
jmp
leave
ss
in
outsl
sub
adc
or
out
add
adc
jl
cld
jmp
dec
imul
aam
dec
insl
fstpl
mov
add
push
notb
and
dec
adcb
jp
pop
and
test
aad
push
es
pop
xlat
ret
or
cwtl
mov
xor
xor
popf
data16
rolb
add
mov
or
pop
rolb
adc
test
mov
sarb
adc
std
repz
and
js
scas
pop
xlat
add
paddb
scas
sbb
xor
or
jecxz
psubb
out
fdivrs
xchg
dec
out
stos
cmc
nop
xchg
xor
add
xchg
mov
and
imul
in
push
pop
call
addr16
adc
add
enter
or
xor
push
imul
adc
fists
iret
xor
clc
stos
stc
xchg
and
add
loop
inc
lock
pop
fs
inc
or
mov
cmpsb
pop
ljmp
inc
mov
in
mov
scas
pop
loop
cmp
lods
xchg
pop
rcll
incb
xchg
test
ja
add
mov
data16
jno
incb
clc
popa
bound
popa
pop
cmp
sbb
pop
in
cmp
dec
or
add
sbb
mov
shlb
pop
add
mov
add
dec
imul
add
sub
and
fdivrs
hlt
push
inc
add
pop
pop
dec
jbe
rorl
stc
dec
jns
mov
imul
push
adc
inc
sub
dec
and
add
ror
pop
punpckldq
add
popa
js
add
mov
dec
cmp
arpl
push
call
cmc
push
or
jl
pop
clc
rcrb
cmpsb
cli
add
xchg
mov
add
nop
xor
xchg
sarb
pop
arpl
add
popa
cwtl
sti
lock
insb
xchg
xor
bnd
sbb
add
xchg
iret
sbbb
mov
jge
mov
nop
add
dec
hlt
mov
sub
lahf
or
lea
mov
ret
xor
mov
add
lea
or
andb
mov
push
shlb
xor
jl
add
stc
cmpsb
and
int3
sbb
mov
xor
push
xchg
rorb
add
sahf
ret
imul
cmp
loop
add
icebp
lds
mov
inc
pusha
adc
xor
es
popf
imulb
push
mov
mov
lret
sbb
sub
push
sbb
push
xor
inc
mov
dec
sbb
cmp
sarb
and
mov
sbb
adcb
icebp
push
inc
mov
adc
sbb
pop
push
iret
xorl
push
mov
dec
push
pop
xor
je
cli
sarb
lahf
bound
xchg
mov
clc
xor
sbb
out
jns
jnp
mov
js
enter
aaa
push
sub
movsb
pusha
xchg
icebp
pop
lcall
icebp
xorl
stc
test
out
push
and
adc
add
inc
adc
lock
mov
stos
xor
rclb
cmp
pop
adc
mov
add
or
push
sub
inc
call
or
lods
push
xchg
je
mov
and
mov
dec
mov
adc
push
xor
cld
cmp
mov
inc
insb
sub
and
xor
add
aam
or
push
inc
xchg
mov
dec
movaps
and
iret
mov
jl
jo
lods
and
js
fadds
xchg
repnz
and
pop
sbbl
push
shlb
mov
adcb
test
lods
pop
or
adc
mov
mov
xchg
mov
scas
mov
add
clc
popa
add
sub
add
inc
aam
jns
and
sbb
cltd
or
clc
inc
adc
and
adc
jns
mov
xor
pop
sbb
sub
adc
add
xor
int3
hlt
push
loopne
cli
add
rcll
loope
clc
jle
pop
xchg
pmaxub
jo
jnp
lahf
cld
pop
insb
jo
or
popa
or
and
xor
push
inc
std
mov
jp
and
lahf
add
xchg
mov
hlt
jnp
and
enter
orb
bound
popa
mov
divb
xchg
cmpsb
sbb
dec
icebp
xchg
add
add
dec
pusha
pop
inc
add
nop
xor
pusha
rcl
mov
add
sbb
out
mov
sub
repz
arpl
call
test
push
push
out
and
pop
mov
std
shl
push
xchg
push
in
inc
inc
add
out
hlt
inc
fistl
add
push
call
pop
daa
dec
data16
loopne
decb
sub
loopne
mov
cmp
add
jg
divb
das
pop
push
mov
nop
pop
xchg
sub
imul
stos
mov
xchg
add
fldenv
pop
mov
push
aas
inc
dec
add
mov
xor
popa
mov
call
pop
add
jbe
nop
imul
mov
add
push
and
adc
add
jl
cs
stc
fstps
pop
mov
or
xchg
pop
sbb
js
test
loopne
mov
or
jg
mov
push
rclb
lods
cmpsl
notb
jnp
mov
mov
mov
les
add
negl
pusha
cmpsb
loopne
xor
jbe
pop
or
and
divb
mov
jnp
mov
repz
pop
add
jns
jmp
sbbb
mov
inc
sub
lds
jge
jnp
mov
add
xor
shlb
dec
mov
fwait
addr16
lret
stos
xchg
andb
pop
mov
je
cmpsb
mov
or
cwtl
daa
insb
cmp
dec
xlat
jp
push
mull
pop
and
jne
movsb
cmc
mov
pusha
nop
popa
push
cmpsb
push
and
les
adc
test
pop
mov
and
push
add
sbb
add
je
mov
sbb
add
ja
movsb
ret
xchg
ljmp
hlt
imul
cmp
cmc
and
sarb
shlb
addb
inc
sbb
fsubrl
dec
les
and
or
sub
les
mov
jmp
nop
or
js
jl
andl
mov
or
push
pop
addr16
mov
ret
sbb
add
or
ljmp
pop
mov
jbe
add
pop
mov
sarb
pslld
pop
add
ljmp
or
lock
jg
or
lods
xchg
add
subb
fidivrs
or
test
add
and
jnp
xchg
and
push
rcl
sub
xchg
push
push
inc
add
inc
xchg
pop
movsb
out
xor
andb
dec
xchg
mov
pop
sbb
shll
inc
sbb
js
adc
add
add
test
sub
mov
sti
pusha
adc
jl
mov
pusha
mov
cmp
sbbb
pop
mov
lods
add
std
xor
and
insl
in
cmp
sbb
inc
rclb
ffree
push
pop
or
out
les
shlb
and
lds
pop
and
pusha
out
pop
cmc
fstpt
add
add
fwait
rcrb
jae
cmp
addb
std
sbb
mov
cmp
in
inc
addr16
inc
xchg
fld
movsl
loop
nop
es
aad
dec
and
lret
push
inc
enter
cmpsl
cli
out
push
jbe
add
push
cwtl
fnstsw
or
or
add
mov
mov
test
adc
subb
inc
add
add
loopne
fdivrl
cmc
sbb
xchg
dec
call
mov
test
enter
repnz
jbe
js
dec
fcompl
pushf
jnp
jae
adc
mov
adc
and
test
add
ljmp
add
in
lds
inc
pop
aad
rolb
fadd
mov
add
insb
or
movd
pop
jno
das
mov
push
loope
sarb
add
testl
mov
mov
fcoml
shrl
stc
mov
push
sbb
add
push
fidivl
or
push
jmp
in
shlb
add
xchg
loopne
mov
sbb
iret
sub
push
sbb
inc
aam
outsl
inc
rorb
subb
shl
or
xor
add
mov
roll
mov
int3
lcall
mov
mov
mov
push
jne
push
mov
dec
and
nop
shrb
test
inc
jmp
mov
scas
jo
xchg
lock
sbbb
call
jns
test
in
pop
sahf
insb
cld
push
pusha
jl
fwait
fwait
shlb
ds
int
mov
orl
pop
mov
mov
mov
inc
lret
dec
push
xchg
in
pop
and
jns
or
stc
add
call
rolb
inc
and
repnz
xor
and
mov
sahf
push
and
pop
stos
std
cwtl
adc
dec
sbb
pop
inc
or
subb
xchg
pop
lods
mov
andb
xchg
popf
xor
mov
sbb
dec
pop
or
dec
add
or
xor
sub
inc
sbb
sub
out
add
cmp
pop
push
int3
adc
mov
out
xorb
je
test
lret
inc
test
rclb
xchg
inc
test
cs
push
cmp
push
cli
lret
or
add
es
in
jecxz
addb
xor
adc
sbb
sti
sbb
xorl
adc
fisubrl
movsb
call
push
in
jecxz
sub
adc
data16
inc
out
shrl
xchg
sbb
fcoms
fwait
mov
or
push
sbb
sub
sbb
push
leave
jbe
fwait
mov
test
aam
into
cmpsb
mov
pop
pop
mov
out
cwtl
inc
lods
fwait
add
sbb
xor
aam
popa
push
enter
sbb
mov
sti
add
je
in
push
aaa
movsb
sbb
sub
adc
in
pop
mov
push
data16
rcll
mov
test
test
paddb
fimull
xorb
loopne
mov
ja
rcll
lea
ljmp
fsub
xchg
dec
imul
mov
sbb
xchg
jl
orb
mov
inc
adc
pop
fnsave
call
add
sbb
add
hlt
adc
inc
addl
push
fstps
inc
adc
imul
jae
add
jns
sbb
jnp
sbb
shlb
pop
iret
in
lods
aam
fxam
adc
dec
mov
and
sbb
loopne
push
pop
sub
add
fld
fwait
push
xor
cmc
xor
adc
aam
push
loop
dec
dec
cmp
push
inc
icebp
push
subb
sub
jge
in
filds
je
insb
mov
out
pusha
mov
add
mov
pop
mov
orb
cmp
mov
decl
or
inc
lea
shll
pop
and
repnz
cmpb
mov
rol
sbb
push
lock
pop
or
xchg
jb
xor
add
add
push
add
xchg
shlb
insb
push
cs
je
push
lods
das
hlt
jnp
jl
add
push
aas
popa
add
bound
in
sub
sbbb
pop
add
push
loopne
fs
push
mov
jl
andb
mov
or
or
test
je
shlb
jle
ret
shlb
loopne
sub
pop
dec
jp
aaa
push
fnstenv
mull
sahf
jno
sbb
xchg
clc
dec
fs
stos
push
subb
xchg
push
mov
mov
pop
mov
jo
jo
mov
mov
xor
lret
jb
push
cmp
jmp
test
movl
scas
in
lcall
sarb
lods
push
insb
jmp
add
push
adc
outsb
or
rolb
pop
adc
push
jl
push
adc
or
out
test
add
and
add
gs
mov
sbb
fsub
mov
dec
out
sarl
gs
popl
inc
jae
lcall
jg
std
shlb
fsubrp
cmc
push
add
xor
aaa
lar
inc
sarl
shrl
pop
adc
xchg
xor
pushl
mov
push
fcoml
xchg
mov
inc
add
les
ds
jo
add
in
pop
push
add
shll
aaa
xor
cmp
or
test
pop
add
subb
das
enter
lods
test
pushf
lret
push
add
faddl
dec
add
bound
cld
sbb
push
aaa
add
outsl
jb
pop
cs
adc
sub
adc
cmp
inc
push
cmp
dec
add
mov
push
push
or
and
scas
and
sub
add
push
xchg
decl
movsb
jbe
shl
fldt
xor
inc
in
imul
lods
or
jnp
add
mov
adc
add
mov
or
out
inc
xchg
add
ljmp
lcall
hlt
loopne
movsl
jno
push
and
cmp
movsb
stos
xchg
cwtl
add
stc
inc
aam
ret
loopne
in
inc
xor
or
and
sub
pop
jo
jl
or
sbb
iret
enter
sub
cmp
add
ret
push
mov
mov
jg
and
mov
mov
hlt
mov
int
idivl
dec
push
add
sub
and
sbb
pop
addr16
xchg
adc
adcb
sbb
pop
jle
inc
inc
and
add
loopne
cmp
mov
adc
xchg
ljmp
sub
in
add
push
xchg
cmp
dec
mov
es
add
cmpsl
outsb
sti
fiaddl
jl
or
xor
lods
adc
mov
sti
cli
dec
outsb
testl
add
push
aaa
or
imul
add
stos
fidivl
jae
rcrl
mov
andl
jmp
pextrw
jae
dec
std
inc
jb
testb
xor
pop
mov
xchg
add
scas
cmpsb
in
cmp
arpl
xor
scas
lea
cmc
bsf
mov
cs
pop
sbb
add
mov
mov
sub
pop
pop
adc
mov
faddl
xor
cld
insb
stos
rclb
shl
out
jle
add
test
add
je
or
cmp
adc
nop
jl
loopne
pop
jle
inc
fs
inc
cmp
loopne
xor
inc
push
movsl
push
cld
xor
add
jne
adc
push
sub
mov
pop
out
jns
loop
dec
movsb
add
std
add
imul
sar
push
loopne
fisubrl
mov
pop
mov
clc
push
lods
nop
jnp
xor
test
lds
sub
shl
sbb
daa
out
test
ficompl
sti
pushf
shlb
adc
jnp
mov
mov
shl
ds
dec
push
adc
fisttps
xchg
ret
pop
sub
jle
scas
or
daa
inc
jo
mov
sbb
ds
jge
mov
js
jb
mov
or
xor
push
mov
inc
cwtl
mov
mov
cmpsl
and
test
aaa
add
mov
add
mov
adc
pushf
int3
dec
insb
mov
sub
mov
jnp
cmp
cld
lret
mov
push
inc
mov
nop
sub
mov
cmpb
xor
cli
or
push
xchg
pushf
add
jne
mov
mov
hlt
add
pushf
out
sti
aas
add
xchg
cmp
lods
mov
sarl
movsb
in
pusha
pop
mov
adc
fs
mov
sbb
cmp
mov
nop
or
adcl
pop
in
mov
and
mov
fadds
movsb
addr16
jo
test
and
hlt
lock
and
or
push
mov
xchg
push
pop
mov
adc
hlt
pop
jne
inc
mov
sbb
mov
into
test
notl
push
decb
and
js
inc
shrl
fcmovb
pop
adc
fchs
adc
out
lret
mov
roll
rcrb
aam
repnz
loop
lods
jno
add
add
jo
inc
lock
sub
or
or
add
add
mov
loopne
mov
subl
ss
add
pop
xchg
sahf
jno
or
add
push
or
lods
add
daa
hlt
or
inc
dec
enter
in
or
mov
int3
add
sbb
pop
xchg
add
push
push
test
daa
repnz
push
adc
test
adc
outsl
mov
sarb
je
add
dec
loopne
cmp
nop
sbb
add
dec
cmp
xor
mov
adc
incb
dec
cwtl
scas
add
jmp
cs
out
cwtl
inc
shlb
sbb
mov
adc
pop
lods
rcrb
and
or
or
xor
orl
xchg
je
ja
mov
loopne
ljmp
call
fucom
or
movl
loopne
jle
cli
dec
and
adc
popf
pop
dec
and
arpl
js
mov
and
out
add
add
xchg
sarl
test
xor
int3
cmpsb
lods
add
push
sbb
push
popa
dec
notl
repnz
aaa
popa
sbb
js
stos
and
sarl
sbb
in
fs
ficoml
pop
enter
jecxz
nop
pop
mov
fdecstp
into
dec
in
fdivs
or
inc
mov
sub
cmc
mov
ja
pop
pop
add
call
fadd
mov
sub
cmc
cmp
mov
sbb
jbe
adc
sub
lods
addr16
dec
xor
mov
testb
fwait
and
cmpsb
ficompl
clc
sbb
adc
ljmp
call
inc
jne
lret
mov
dec
sub
jae
and
and
shll
cmpsb
push
push
pop
jns
jp
add
mov
or
fstpl
push
pusha
inc
daa
and
movaps
cwtl
xchg
inc
inc
loope
cs
push
and
ret
mov
or
or
sub
mov
xchg
add
push
popa
jecxz
jmp
push
ldmxcsr
cs
dec
pop
inc
mov
lret
clc
inc
jns
clc
xchg
mov
cmpsl
or
add
xchg
nop
xor
jge
xchg
lock
sbb
mov
inc
test
or
lods
jp
cmpsl
rcll
mov
dec
dec
sub
mov
push
sbb
imul
dec
or
fidivrl
shlb
sub
js
adc
pushf
lcall
movsl
popf
fcoms
push
cmp
sub
je
add
cmp
shrl
loop
rolb
inc
ljmp
add
arpl
sbb
outsb
imul
push
or
loope
popf
add
xchg
add
shrl
out
insb
repz
pusha
sbb
hlt
and
and
scas
dec
add
ss
adc
or
pop
shlb
pop
mov
mov
push
aaa
mov
and
xorb
add
mov
push
inc
lock
mov
jno
scas
push
lock
hlt
add
and
hlt
mov
adc
dec
sub
clc
mov
mov
inc
adc
or
or
mov
outsb
add
mov
pop
into
xchg
pushf
roll
bound
add
addr16
xor
add
mov
xchg
add
and
xchg
loopne
or
add
mov
insl
push
mov
cs
rcrb
js
adc
mov
pop
test
pushf
arpl
and
ja
mov
je
jb
mov
sbb
std
sbb
mov
inc
adcl
leave
insb
scas
lahf
pop
sub
repnz
js
mov
popa
fsubrl
daa
test
and
add
into
sub
push
pop
je
mov
xor
fnstenv
jnp
pop
pop
jle
xchg
fsubr
outsl
mov
or
mov
pop
lock
cs
inc
ret
mov
mov
inc
sbb
or
fs
sbb
mov
leave
xchg
lods
add
or
pusha
or
sub
inc
leave
cmp
adc
and
testl
rolb
inc
or
decl
adc
lods
sub
add
pop
js
cmp
cmp
and
adc
sbb
and
cmpsl
add
pop
pusha
movsb
jo
dec
in
and
out
push
sbbb
sub
sti
cwtl
imulb
daa
push
mov
and
and
int
in
and
mov
test
or
popa
fs
and
je
fmuls
or
insb
test
sub
add
mov
iret
dec
je
jg
adc
movsb
mov
rclb
scas
lods
lock
pusha
and
mov
sbb
jae
mov
push
fisubrl
repnz
push
mov
mov
sub
imul
push
jle
add
jp
ret
lock
dec
call
fmull
inc
push
inc
push
mov
test
call
jae
sbb
movsb
add
or
sub
xor
jp
sarb
or
and
pusha
mov
fmull
sbb
in
pusha
in
arpl
nop
pop
shrb
sbb
push
or
mov
movsb
add
cmpb
sbb
repnz
mov
adc
and
cwtl
or
and
sbb
jmp
jns
rolb
hlt
out
stos
mov
dec
aam
or
mov
movsb
jle
in
mov
or
cmc
and
lock
js
adc
xchg
leave
das
xchg
iret
test
inc
pushf
inc
repnz
fdiv
in
add
mov
mov
call
sbb
rclb
arpl
adc
aad
dec
jno
or
sarl
iret
adc
inc
int
je
lock
or
icebp
cmc
mov
sub
push
xor
mov
pushf
mov
ror
push
mov
pop
in
loopne
xchg
adcb
int
fmuls
movsb
fs
lret
test
sbb
add
repnz
or
into
stos
jae
je
sub
and
adc
sbb
cmpsl
cmp
sub
out
aam
pushf
test
push
push
pushf
es
sbb
add
cmpl
in
cmp
add
sub
pop
cmpb
and
cwtl
cmp
sub
fmuls
inc
add
pop
cmp
cmpsb
ss
fs
cmc
cld
inc
push
cwtl
adc
es
inc
stc
nop
sub
loop
cmc
mov
sbb
add
adc
add
cmp
push
sbb
mov
cwtl
enter
test
aaa
gs
sbb
or
stos
adcb
das
cmc
rolb
push
pop
clc
insl
faddl
into
dec
sbb
test
or
aaa
add
fdivrs
cmp
rcrb
fsubs
push
push
xlat
cmp
push
shrb
push
xchg
add
sub
sbb
les
mov
xor
inc
adc
mov
nop
subps
in
bound
add
pop
push
jo
mov
add
mov
pusha
sub
stc
and
jle
dec
bound
xor
roll
cmpsl
mov
icebp
repz
dec
inc
leave
das
pop
testb
or
jle
xchg
push
push
add
loope
jmp
xchg
jecxz
shlb
push
mov
in
scas
xor
and
cmp
push
jle
rolb
loopne
sub
movsl
and
stc
fadds
in
pop
xor
sbb
jle
ficoml
cwtl
subb
jo
mov
test
decl
pusha
inc
sbb
or
jl
add
out
mov
sub
and
dec
push
inc
adc
test
and
lock
leave
gs
sbb
cld
jne,pn
cltd
push
into
add
notb
and
sbb
int3
adc
xor
jp
sub
mov
xor
sub
push
mov
push
test
negb
or
add
push
mov
sub
adc
repnz
jo
outsl
ja
xor
sti
cli
pop
mov
aaa
or
lcall
mov
pushf
and
or
xchg
dec
insb
jno
mov
adc
and
xchg
inc
xchg
repnz
jmp
loope
aas
jae
andb
dec
sbb
sub
lock
sbb
cmp
cmpb
jo
sbbl
sub
sbb
fmull
sub
cld
cmp
xchg
push
fsubp
js
cmp
inc
pop
xchg
pop
repnz
outsl
add
fadds
frstor
add
jb
sbb
enter
push
je
jo
pop
adc
js
sbb
enter
testl
repz
jbe
add
sbb
push
or
lods
or
or
shlb
hlt
cmpsl
sbb
mov
test
in
test
jl
sbb
and
fcoms
push
shll
cli
lods
test
mov
dec
or
mov
or
clc
pop
loopne
negl
in
push
mov
push
inc
sbb
dec
or
iret
add
inc
sub
or
sub
adc
ljmp
xor
pop
add
and
push
sbb
mov
iret
mov
aaa
hlt
mov
mov
jle
jl
notl
mov
lret
sub
sbb
lods
mov
xchg
rolb
xor
andb
popf
xorb
loopne
leave
sbbb
and
pop
js
push
and
mov
and
mov
stc
cmpsb
cmp
aam
pop
or
mov
inc
int
and
mov
mov
mov
xor
or
scas
rcll
xchg
inc
outsb
dec
sbb
xorl
push
mov
pop
sbb
add
loope
ss
shll
rolb
lods
nop
xor
push
mov
add
sbb
loop
fsubrs
out
jo
mov
xor
dec
repnz
add
lock
mov
jb
mov
dec
shlb
insb
data16
xchg
push
sbb
mov
daa
push
or
xchg
pop
adc
jge
aam
ds
loope
jae
and
or
insb
lcall
leave
mov
mov
adc
cmc
test
and
push
mov
cld
and
sbb
insb
pop
xor
inc
dec
pop
sbb
mov
mov
add
mov
shl
data16
loop
xchg
jnp
aas
jl
xchg
stc
xchg
or
add
loopne
fistl
popf
nop
subb
gs
adc
or
shll
jnp
fdivs
rclb
xchg
je
sti
ljmp
lods
and
jno
sbb
xor
xchg
mov
pop
roll
in
jmp
and
rcll
and
push
xor
jmp
jg
adc
aam
rol
lods
setp
ja
or
sbb
or
inc
inc
pop
pusha
into
pusha
hlt
aaa
daa
mov
cmp
into
jle
add
call
mov
or
orb
out
sub
add
mov
jo
rcl
mov
aam
add
mov
je
sbb
cwtl
and
aad
ds
mov
add
mov
loop
add
push
jle
andl
clc
cmp
cld
push
fucomip
push
mov
pop
add
sbb
jl
rolb
fnsave
imul
cmp
jg
outsl
add
jb
mov
clc
push
mov
jmp
inc
imul
push
divb
mov
mov
insl
fidivrs
dec
lods
jno
add
mov
clc
xor
clc
or
orb
in
mov
and
xchg
nop
clc
inc
pop
add
pop
push
mov
push
sub
fsubrs
add
sahf
in
mov
movsl
adc
rorb
call
jecxz
push
xor
in
nop/reserved
inc
mov
and
pop
xor
mov
cmp
xchg
adc
fs
cld
imul
add
add
lret
add
inc
adc
adc
sub
adc
stos
dec
cmp
or
imul
ja
add
test
mov
aam
ja
xchg
call
pop
xor
or
add
fldt
and
sbb
mov
cmp
incl
push
and
pop
insb
test
adc
add
push
iret
fcoms
loopne
clc
sbb
dec
push
pushf
and
adc
pop
sti
adc
mov
adc
mov
jnp
imul
pop
adc
and
imul
mov
test
pop
les
add
jno
or
mov
lock
jp
sahf
mov
mov
fsubl
pushf
adc
push
mov
scas
leavew
loop
call
sbb
inc
xor
mov
andb
push
jg
add
cmpb
call
in
shlb
clc
jl
xchg
mov
or
push
mov
in
mov
mov
movsl
shrb
enter
jle
or
cli
push
das
in
ljmp
inc
or
aam
mov
xchg
into
push
ret
inc
add
aas
or
sub
jns
mov
adc
push
dec
or
inc
or
lock
fs
add
and
sub
and
adc
hlt
or
sub
mov
es
and
add
jno
pop
enter
mov
mov
in
add
cwtd
aam
leave
lret
mov
add
out
sub
sahf
inc
inc
mov
scas
add
clc
cs
lea
push
movups
and
or
pop
or
pop
inc
popa
inc
add
sub
add
xchg
insl
jb
js
jmp
rolb
adc
push
lods
jle
add
mov
ja
mov
adc
push
mov
mov
icebp
shrb
push
or
pop
mov
xchg
xor
scas
insl
les
sbb
mov
push
sbb
pop
lret
fsubrp
mov
push
dec
push
pusha
jnp
test
nop
fdivrl
add
mov
rorb
je
jns
pop
test
add
dec
bnd
or
or
mov
call
call
in
daa
or
fimull
jb
loopne
push
hlt
mov
sub
cs
popa
jle
subb
push
fists
mov
and
mov
hlt
dec
inc
add
loop
adcb
test
aam
add
fisttpl
mov
in
mov
cld
data16
pop
lret
rol
mov
loopne
orl
das
std
and
in
pop
mov
inc
mov
add
xchg
cld
adc
sub
add
je
cmp
push
or
mov
addr16
jl
or
rclb
cli
jo
outsb
sbb
or
and
xor
add
mov
cmc
mov
and
cld
xchg
xchg
arpl
xor
sbb
pop
rcll
adc
or
js
cs
sub
jo
mov
aaa
xchg
insb
adc
add
sbb
cmp
pop
mov
jecxz
inc
mov
adcb
dec
jno
fldcw
push
or
fldt
mov
push
mov
xchg
sub
add
cmp
scas
psrld
xor
leave
fists
in
mov
xchg
rcl
xor
fnstsw
or
cmp
xor
xchg
fnsave
sub
xchg
fisubrl
adcb
lods
out
roll
lcall
add
movsb
test
rcrb
rclb
cs
in
mov
pop
push
test
andl
push
inc
or
adc
les
lds
cmpsl
ret
add
inc
ficoms
cwtl
pushf
into
rcrb
jp
mov
aad
stc
lds
add
pop
inc
mov
roll
test
cmpl
mov
lock
sbb
movsl
adc
pusha
mov
inc
sbb
mov
imul
lock
cltd
add
jl
add
int
sub
fistpll
mov
mov
fistpll
stc
cmp
mov
mov
push
sub
xchg
or
cmp
movsl
cwtl
cmp
add
jge
mov
cwtl
dec
adc
stc
mov
pop
enter
out
mov
hlt
jmp
nop
push
in
cmpsb
adc
xor
pop
mov
fcoms
mov
in
mov
enter
mov
mov
jb
and
add
dec
push
and
fsubrl
cwtl
nop
pop
add
inc
pop
mov
adcl
pop
cltd
ret
add
mov
mov
adc
and
out
dec
add
shll
push
pop
fistl
add
lock
sbb
iret
rolb
mov
jno
aas
cs
push
jo
nop
adc
pop
adc
testl
push
mov
fcomps
xchg
xor
add
xlat
pop
popf
mov
rcrb
adc
inc
loopne
pop
xor
dec
push
cmpsl
dec
sbb
aam
mov
test
into
call
mov
add
pushf
daa
sbb
sbb
shlb
xchg
add
mov
mov
add
jae
in
test
les
pop
push
jmp
push
in
decl
pop
in
push
enter
sub
jno
adc
xchg
xor
pop
fsts
jne
loopne
pop
jge
or
in
add
pop
mov
sbb
or
repnz
aam
jecxz
leave
lahf
out
cmpb
cmpsb
and
sub
add
add
sbb
mov
mov
jae
push
rcrb
cmpsl
mov
fsubrl
xchg
insl
add
fwait
std
jo
dec
lock
dec
or
fsubs
in
sbb
fldenv
push
int3
adc
rolb
dec
add
or
scas
mov
mov
negl
push
pop
mov
adc
fmull
add
jp
pop
or
cmp
test
inc
pusha
or
ss
adc
aad
fidivrs
dec
cltd
add
fsubrl
jns
movsb
pop
shrl
ret
or
push
dec
and
mov
ja
jmp
mov
sbb
les
pusha
dec
pop
lods
add
test
jo
insb
stc
mov
or
ret
sti
int3
rolb
mov
je
mov
adc
pushf
dec
adc
cmpsl
push
and
inc
imull
xor
cmp
div
cs
lock
out
lock
clc
pop
inc
lods
in
call
inc
or
stos
xchg
cmpsb
ret
mov
sub
dec
push
fidivrl
int3
movsl
mov
cmp
cmp
pop
push
inc
inc
das
std
push
xor
or
lock
or
sahf
stc
mov
movb
cmp
les
pop
jae
sbb
inc
or
push
sbb
adc
dec
add
test
push
pop
lods
addr16
pusha
sbb
cmc
negl
insb
mov
dec
sub
jnp
mov
test
mov
cwtl
or
cmp
adc
std
or
and
pop
mov
xor
and
cmovno
mov
pop
xor
or
cld
stos
sub
inc
in
inc
sub
icebp
call
insl
aam
mov
cwtl
adc
fisubs
push
jnp
xor
movsb
dec
add
dec
xlat
sub
add
adc
scas
ja
sub
mov
inc
sub
inc
rcrb
mov
outsb
add
mov
scas
inc
clc
int
cmp
xchg
mov
add
movsb
and
cwtl
adc
outsb
mov
out
shll
sbb
jae
cmpb
mulb
adc
mov
cmp
mov
fildl
and
movsb
xchg
lahf
push
test
or
xchg
pop
dec
adc
dec
dec
and
sbb
ja
adc
cmp
mov
mov
test
jnp
lret
sar
cs
and
test
in
push
xor
and
add
and
pop
ret
push
in
mov
cmp
loope
orb
rolb
leave
sbb
lea
mov
divl
sbb
and
inc
xlat
add
or
sbb
add
arpl
adc
push
sahf
loop
dec
insb
aam
andl
jnp
jae
sbb
push
push
xchg
xor
movsl
fstps
sbb
mov
push
jle
ds
cmp
shl
jge
jp
mov
and
or
testl
call
sub
fiadds
xchg
lods
dec
scas
jl
arpl
or
int3
cwtl
add
test
addr16
imul
cltd
xor
mov
xor
movsb
cwtl
add
test
push
and
fs
sbb
sbb
dec
mov
cmp
rolb
inc
push
je
push
and
gs
sbb
addr16
cmp
add
pusha
jp
mov
jl
mov
notl
enter
add
jne
jg
cmp
dec
add
es
or
ja
daa
add
add
push
push
in
xchg
sbb
sbb
mov
add
mov
nop
notl
add
pop
aam
mov
and
movl
mov
push
mov
pop
stos
inc
mov
rorl
add
clc
je
pop
mov
mov
add
xchg
hlt
jmp
mov
lret
push
aaa
stc
pop
add
mov
mov
add
movsl
or
push
mov
aaa
jle
es
mov
adc
cld
js
lret
and
sbb
popf
add
insb
push
mov
sub
inc
rclb
mov
jns
xchg
sbb
fdivrl
sub
es
push
je
into
push
cli
mov
add
dec
cmc
repnz
add
adc
je
mov
mov
mov
and
pusha
sbb
pop
sub
xchg
jnp
add
aas
mov
scas
mov
sbb
and
or
pop
popa
js
lock
mov
sbb
inc
or
lods
outsl
push
jle
jp
or
inc
ljmp
pusha
and
jo
or
pop
inc
push
add
and
in
addb
xchg
scas
out
or
cmp
call
add
pop
mov
mov
push
ficompl
cmp
add
push
add
pop
fwait
or
mov
les
shlb
into
xchg
mov
out
rolb
mov
jne
push
mov
add
xor
sahf
sub
js
or
daa
sub
mov
inc
dec
xor
cltd
push
lock
addb
mov
push
add
hlt
add
inc
or
push
mov
and
arpl
je
add
cmp
mov
add
mov
or
rcrl
loop
lldt
mov
sub
pop
int
addr16
inc
xchg
cmpsb
repz
mov
sar
dec
jno
add
addl
mov
push
sbb
pop
test
xchg
xchg
cmp
and
inc
jbe
add
jnp
outsb
pop
mov
sbb
dec
nop
dec
fwait
sbb
cmp
addb
in
xorb
add
movsb
pushf
inc
push
fisttpll
dec
out
add
xchg
mov
rcrb
rorb
sub
dec
insb
loopne
es
push
les
rcll
les
lds
negb
pop
lds
sub
push
fisubs
sbb
jne
and
add
dec
or
dec
cmp
jno
insl
jle
pop
inc
sbb
outsl
push
rorl
inc
xchg
add
dec
xchg
loope
fldt
nop
out
loopne
hlt
testb
sbb
jno
push
loopne
or
xor
cmp
jp
ja
sahf
pop
inc
mov
and
sub
jnp
add
insl
in
subl
mov
mov
push
xor
or
xor
push
imul
lods
pop
xchg
imul
sbb
push
add
mov
loop
mov
insb
rcrb
xor
or
sbb
scas
sub
or
add
or
sbb
add
lods
imul
xor
xor
xlat
stos
or
sbb
pop
lds
adc
out
clc
cmp
adc
ss
cmpsb
adc
jns
out
jno,pt
aaa
insl
sbb
loopne
cmpsl
outsl
or
or
pop
xlat
dec
inc
cmp
repnz
adc
and
inc
mov
call
xchg
je
adc
add
sbb
adc
enter
add
xlat
test
push
ds
rcrb
inc
insb
sbb
js
cs
decl
arpl
mov
lds
xor
push
adc
cmp
lret
dec
push
or
cmp
dec
or
sbb
mov
adc
shlb
sub
nop
pop
sub
and
jg
das
sahf
pop
fs
adc
movsb
xchg
sti
push
je
sbb
cwtl
mov
mov
fs
jns
mov
mov
pop
add
inc
adc
xor
mov
cmpsl
mov
movsb
imul
mov
lahf
cmpsb
inc
andl
xor
lods
xor
and
sub
stos
jl
bound
or
popa
icebp
cmpsl
inc
add
mov
dec
ret
xchg
mov
pushf
jg
pop
cmp
lods
xchg
in
aam
cmp
cmpsb
fs
inc
or
aas
jne
sahf
xchg
stc
push
js
inc
shlb
mov
dec
adc
pusha
mov
test
ret
xor
loopne
inc
sub
ja
mov
les
cmp
inc
repnz
inc
adc
inc
les
add
imul
stc
mov
xor
and
loopne
jo
das
mov
stos
cwtl
rcrl
repnz
jbe
js
fiaddl
add
ret
sub
jle
add
inc
sbb
nop
dec
loop
and
sub
mov
inc
icebp
inc
dec
push
test
xchg
sbb
push
aaa
push
sbb
push
xchg
and
xchg
push
sub
test
jle
push
adc
sbb
dec
sbb
es
adc
cmp
loop
push
jo
inc
ret
test
out
clc
mov
cmpsl
push
scas
inc
add
mov
in
out
or
je
adc
es
or
pop
inc
data16
pop
pop
fcomps
mov
sub
mov
test
mov
hlt
mov
shll
cmp
dec
test
adc
push
mov
mov
mov
adc
xor
test
hlt
mov
and
test
mov
jo
fcompl
icebp
outsb
add
mov
out
add
test
push
rcl
xchg
push
inc
xlat
push
xchg
add
add
cmp
cmpsb
aam
mov
xor
cmp
inc
jp
add
mov
xchg
add
pop
xchg
popa
adc
or
decl
and
and
add
push
pminsw
inc
ja
and
dec
lcall
mov
cwtl
push
ret
les
scas
sbb
aad
add
lret
insl
sbb
dec
mov
inc
insl
cmp
or
cmp
cmp
test
lea
push
and
push
popf
das
add
push
fs
mov
inc
scas
cwtl
add
es
xchg
push
jns
cmpsl
imul
xchg
push
xor
rcrb
enter
fldenv
movsb
scas
cmp
mov
add
lods
addr16
and
pop
scas
sbb
into
or
imul
push
mov
pop
loopne
add
adc
fs
lock
loop
add
lods
add
imul
je
jle
push
pop
outsl
imul
clc
out
xchg
mov
or
sbb
fs
mov
xorb
fldcw
mov
dec
and
test
push
enter
jno
les
cmpsb
push
aas
push
out
adc
dec
inc
add
punpckhdq
and
jbe
jge
pushf
bound
push
xchg
xchg
incb
sbb
adc
ret
push
clc
clc
lahf
pop
mov
mov
sbb
test
adc
test
nop
repnz
fcomip
sbb
mov
cmp
pushf
pop
adc
test
jge
aad
push
sub
and
insb
xchg
and
inc
ret
sbb
and
mov
insb
subb
sbb
and
imul
and
subb
sub
test
or
xor
inc
lret
and
sub
and
add
add
jecxz
xor
adc
xor
imul
mov
insb
add
cli
xor
mov
sbb
sub
lock
das
imul
repnz
lret
sbb
dec
scas
sub
adc
mov
dec
push
add
xchg
mov
pop
adc
push
xchg
aas
mov
and
loop
sbb
icebp
je
mov
dec
mov
lods
cmpsb
sbb
push
pop
xchg
and
arpl
ret
and
pop
mov
cli
mov
je
bound
xchg
std
cmpsb
in
mov
jne
aas
loopne
add
jbe
out
pop
test
subl
nop
js
jns
and
pop
sub
add
outsl
movb
xchg
add
and
rclb
pusha
ret
nop
enter
jmp
lods
jbe
add
imul
clc
push
jo
push
cmp
push
push
sarl
popa
aam
inc
inc
sub
xor
out
pop
popa
mov
hlt
adc
sbb
sub
je
cmp
hlt
mov
into
stos
pop
inc
je
jl
cmp
sub
sbb
pop
dec
sub
mov
dec
and
add
sbb
call
add
enter
pop
das
pop
cmp
cld
sub
inc
repz
popa
and
jnp
xchg
mov
lods
das
push
xor
movsb
sub
loope
or
push
add
inc
cld
or
push
xlat
jnp
sbbb
add
scas
xor
clc
scas
jecxz
pop
xchg
xor
loope
pop
add
lret
mov
andb
add
test
add
xor
sub
std
outsl
xchg
incl
aas
inc
push
adc
loopne
test
push
mov
mov
mov
sahf
insl
dec
push
sbb
jne
cli
add
cld
jmp
jnp
mov
add
dec
sub
and
cmp
jbe
xchg
inc
repnz
das
clc
insl
cwtl
mov
push
aam
iret
add
repz
cmp
roll
xchg
add
and
hlt
push
jo
mov
add
aaa
dec
stc
outsb
popa
pop
add
jg
jecxz
clc
loopne
adc
pop
and
cs
decb
dec
push
int
push
jns
jnp
mov
jecxz
mov
pinsrw
paddd
fldln2
add
sbb
leave
cmp
push
add
test
push
jge
push
pop
out
sbb
xchg
pusha
xchg
pop
outsb
add
call
cmp
add
rolb
add
inc
xor
xchg
shl
jae
insb
cmp
jb
js
pop
add
jne
sbb
or
clc
call
fwait
mov
roll
aam
adc
sbb
mov
mov
pusha
lahf
push
test
push
addl
sbb
aas
das
icebp
outsb
xrelease
add
es
loopne
add
mov
fadds
mov
mov
lods
mov
jne
push
add
test
sahf
sbb
xor
adcl
ds
in
jl
add
mov
inc
cmpsb
cmp
push
dec
ja
add
ficomps
mov
mov
adc
push
test
pop
push
aam
sub
hlt
test
icebp
into
inc
xor
mov
cmp
pop
cmp
push
mov
or
test
add
push
arpl
stos
and
into
imul
adc
push
orb
cmp
jg
and
sbb
mov
sti
insl
sub
pop
in
jecxz
ret
aam
fs
sbb
dec
cmp
orb
jne
fs
add
pop
popf
sub
sahf
add
ret
dec
lahf
cmp
out
lret
add
pop
gs
clc
cli
fidivrl
enter
inc
dec
cwtl
push
push
cmpb
push
jo
jnp
pop
js
add
lret
or
sub
inc
xchg
add
movsl
add
push
jne
std
dec
imul
push
jmp
scas
addr16
push
add
stc
mov
dec
outsl
add
sub
mov
pop
and
loopne
add
dec
xchg
add
sbb
jns
cwtl
mov
mull
push
rolb
add
fcom
pop
adc
jno
mov
rcrb
lret
std
fdiv
add
sbb
sub
cmp
and
mov
scas
in
jnp
inc
sub
fidivl
mov
sub
add
sub
fiadds
std
add
jl
call
xlat
iret
int3
addr16
pop
mov
xchg
add
inc
push
in
pop
das
sbb
mov
mov
fmull
insl
loope
jbe
pusha
std
nop
aas
mov
fsubrs
xchg
or
mov
aas
adc
and
clc
add
mov
jp
cld
sbb
pusha
stos
fisttpl
bound
xchg
or
pop
xor
jmp
test
mov
popa
dec
inc
cwtl
rolb
pop
dec
mov
frndint
fadds
add
add
pusha
jne
sahf
sti
loopne
sbb
mov
inc
pusha
fiaddl
or
sbb
int
mov
and
roll
loopne
jns
mov
fdivs
aad
adc
mov
adc
add
cs
dec
sub
and
mov
pop
psubb
sub
je
in
cmp
mov
sbb
jo
inc
or
lock
sbb
add
cmpsl
popa
shrb
or
push
jbe
inc
add
mov
inc
add
add
test
dec
loopne
cli
loopne
jle
xchg
scas
movsb
stos
loopne
jns
add
scas
movsl
mov
data16
add
imul
daa
add
mov
lods
jno
fld1
cmp
xor
inc
and
mov
xchg
daa
dec
test
and
adc
add
add
adc
aam
add
mov
js
popa
sbb
insl
leave
sub
pop
pushf
or
inc
imul
and
and
mov
xchg
inc
xor
shlb
sbb
add
aas
lret
je
test
add
mov
call
dec
daa
pushw
dec
add
in
add
mov
repnz
sbb
pusha
inc
sub
and
pop
push
ret
cmp
mov
jg
imul
ja
pop
dec
repnz
jnp
add
add
add
bound
add
inc
cmpb
pop
shlb
out
add
rol
sub
sbbb
retw
and
jle
or
xor
pop
inc
imul
mov
cld
addr16
mov
sbb
call
cmp
loopne
add
inc
xchg
cmp
sbb
aam
ds
mov
aas
clc
dec
dec
clc
aaa
add
cld
cli
xchg
pop
bound
add
sbb
add
xor
push
fwait
cmpsb
pop
add
les
test
dec
push
add
mov
stc
call
xchg
divb
outsl
adc
gs
xchg
sbb
push
jl
in
call
xor
xchg
inc
pop
and
push
mov
inc
ret
xor
addl
in
adc
pusha
fs
lea
cmp
lcall
cld
xor
jnp
jle
aaa
pop
xchg
mov
xor
or
fadds
or
fbld
xor
outsb
cmp
loope
or
sub
pop
out
xchg
push
pushf
lahf
test
xor
add
sub
pop
add
sbb
pushf
js
add
rorb
nop
ficompl
pop
and
btc
fwait
xor
shll
fidivs
xchg
loopne
les
cmp
sub
mov
adc
inc
fldt
daa
mov
add
out
adc
cwtl
push
xchg
xchg
add
cmc
cs
int
mov
inc
ret
add
adc
jno
xor
pop
nop
mov
aam
xchg
jmp
push
insb
in
out
pusha
adc
les
mov
popf
andl
mov
nop
pusha
mov
fsub
inc
out
arpl
xchg
mov
subb
loopne
pop
dec
mov
int3
mov
inc
xor
popa
popf
or
add
pop
and
sbb
xchg
call
ja
cmc
sbb
or
ljmp
and
jl
rcr
mov
jae
lds
jns
clc
add
rorl
js
or
dec
xor
or
mov
and
cli
pop
movsb
sbb
or
mov
sub
ficomps
call
shrd
push
push
inc
xchg
popl
lock
ss
add
adc
js
scas
mov
add
addl
addr16
push
shll
inc
test
call
jmp
jbe
mov
sub
sbb
add
sbb
cmpsb
divb
ljmp
out
add
cmpsl
pop
mov
add
or
movsl
stos
xchg
or
add
jp
stos
jns
add
jne
xor
test
push
shrb
pop
xor
cs
lret
xchg
setae
or
rclb
sti
test
daa
ja
ficomps
cmpb
stc
fsts
cli
pop
cwtl
pusha
adc
mov
fdivs
in
xchg
rolb
pop
adc
add
jge
xchg
cli
repz
mov
mov
push
adc
pop
inc
add
jns
mov
cmp
js
mov
xchg
mov
cmp
sahf
jns
xor
loop
mov
mov
sbb
clc
xchg
insb
cmp
mov
jmp
mov
dec
lret
fnstcw
mov
mov
xor
push
inc
outsb
adc
popa
fisubrs
cmp
jge
or
jl
inc
test
or
sub
xchg
cmp
sti
mov
add
pop
add
pop
fidivs
adc
add
pop
fsubl
movl
or
das
lods
add
add
gs
scas
and
ja
sbb
aaa
xor
mov
add
sbb
pop
in
data16
mov
inc
xor
sub
call
jnp
or
mov
pop
add
outsl
jle
lahf
mov
cwtl
movsl
mov
icebp
cmpsl
fwait
roll
xor
mov
or
fstpl
mov
jle
out
call
mov
sbb
push
rol
cld
mov
pop
sub
arpl
outsl
push
repnz
add
into
push
add
push
iret
movl
cmpsl
fbstp
ret
cwtl
fnstenv
and
mov
pusha
xchg
add
or
pop
fcoml
test
sub
sub
adc
sub
std
out
cs
cmp
xor
loope
hlt
insl
push
xchg
xchg
pop
or
sarl
cmp
sub
pusha
and
addl
mov
jne
dec
faddl
push
lds
cli
dec
mov
scas
cmp
and
sub
mov
lahf
jl
sub
mov
aaa
mov
jo
in
popf
icebp
jnp
sbb
pop
mov
cwtl
mov
push
in
and
and
sub
add
shlb
les
imul
rorl
dec
mov
pushf
aad
pop
add
fnsave
pop
mov
inc
add
sbb
ljmp
push
mov
sub
hlt
xchg
adc
lods
adc
aam
cwtl
or
in
movsl
out
fistl
orb
shlb
insl
lcall
dec
int3
int3
add
xor
enter
aad
sub
imul
jbe
cmp
xor
mov
clc
dec
lock
add
sahf
cmc
and
jl
sbb
pushf
adc
add
shrl
inc
jmp
inc
daa
fwait
jne
pop
sub
imul
movsb
sbb
imul
xchg
cmp
je
lret
add
push
adc
sti
cmp
stos
and
inc
flds
xchg
pusha
dec
sub
add
pop
sub
add
add
daa
loop
test
fdivl
push
pop
in
pop
jg
loopne
inc
xor
xchg
jo
leave
lea
add
es
add
and
ret
and
pop
xchg
lock
insl
and
subb
and
jge
ds
push
loopne
push
xchg
pushl
nop
je
pop
push
inc
or
mov
ljmp
and
push
add
outsl
sbbb
decb
adcl
jnp
and
mov
cmpl
rcrb
cmpb
cmc
jns
mov
push
iret
lock
jg
jecxz
add
pop
fidivl
mov
jae
fwait
xor
adc
test
xchg
adc
lcall
pop
mov
ljmp
mov
test
enter
movsl
mov
mov
dec
or
push
int
loop
ret
jbe
cmp
push
adc
and
mov
add
jno
jo
dec
std
inc
pop
sti
add
add
test
cmp
outsb
push
push
daa
add
pop
int3
loope
xchg
add
dec
mov
mov
xor
push
fldcw
xchg
lods
lahf
sub
xor
mov
mov
pop
and
push
sub
xorb
sti
ror
clc
shll
mov
mov
rcr
incl
pop
mov
loopne
jl
stmxcsr
xor
loope
cmp
add
cwtl
aad
mov
add
mov
mov
sub
dec
pop
mov
out
xor
jnp
and
notl
jb
xor
aas
int3
in
jmp
sub
adc
lahf
ficompl
dec
push
in
jns
mov
mov
subb
mov
popa
inc
movsb
mov
cmp
or
ret
sbb
je
cwtl
xchg
add
mov
out
add
xor
sti
mov
rcr
lods
loope
add
outsb
push
pop
lret
dec
repnz
cs
mov
sbb
jg
repz
lret
je,pt
add
lods
iret
movsb
nop
test
jecxz
xor
shlb
in
jg
add
sub
aad
cld
add
add
mov
lock
add
push
push
xchg
jp
add
imul
pop
xor
test
xor
pop
lret
jns
xchg
add
lods
je
in
and
dec
add
aaa
sbb
mov
movsb
ret
dec
add
add
mov
test
outsl
pop
daa
int3
add
ds
push
mov
out
jne
ja
pusha
push
xlat
add
test
adc
inc
xor
mov
daa
je
add
dec
loop
pop
cwtl
sub
xor
clc
out
sub
mov
sub
xor
mov
and
bound
icebp
test
and
int
sub
inc
lcall
mov
xchg
inc
dec
pinsrw
cmp
jp
in
orb
test
cmp
cli
repnz
into
scas
pusha
or
cmp
adc
inc
mov
add
inc
xchg
dec
xor
fisttps
loopne,pt
daa
sbb
pop
add
repnz
or
rolb
add
mov
add
in
add
sbb
call
outsb
gs
adc
inc
shlb
inc
add
mov
mov
pop
xchg
cmp
cwtl
addb
bound
ret
scas
add
and
add
mov
sub
cwtl
loopne
mov
nop
jno
xor
mov
sahf
xchg
jo
test
push
xlat
sbb
in
js
mov
adc
neg
sar
scas
or
pusha
fistps
pop
inc
scas
add
sti
mov
fldl
jl
ret
incl
test
inc
pop
inc
sub
fsubs
pop
aam
mov
and
int3
sarl
xor
addb
pusha
mov
sbb
outsl
repnz
cmp
pop
fmull
jl
cmp
sub
icebp
sbb
imul
dec
or
cmp
push
sub
push
out
or
jno
call
clc
add
dec
jl
pop
int
inc
std
cmp
mov
add
mov
mov
les
cmc
add
imul
cmc
add
inc
bound
add
add
push
pop
add
jp
mov
pop
jg
xlat
pop
xor
cmpsb
add
inc
negl
mov
push
orb
stos
and
cwtl
mov
add
fdivr
mov
mov
add
outsb
out
inc
add
mov
andb
mov
mov
in
loope
scas
xor
cltd
add
inc
ljmp
addr16
push
pop
outsl
sarb
pop
ss
mov
dec
inc
mov
push
lret
lock
pop
sub
jne
cmp
dec
add
loop
ficomps
call
inc
or
pusha
pop
ljmp
xor
ret
push
in
sub
subb
add
icebp
lods
mov
lock
jmp
scas
ror
sarb
adc
xor
jl
retw
jmp
nop
add
pop
into
rclb
add
or
lcall
xchg
mov
iret
or
mov
xchg
dec
add
jno
dec
lahf
fmulp
mov
mov
mov
add
dec
mov
xor
pop
xchg
sbb
clc
popf
mov
movb
and
sub
mov
adc
add
fdivrl
add
repz
ss
mov
aam
mov
push
in
sbb
leave
mov
sbbb
gs
ljmp
int3
femms
adc
xchg
sub
mov
addb
addr16
xchg
movb
in
add
cmp
add
xchg
lret
pop
test
rcrl
mov
inc
je
mov
mov
addb
mov
and
add
or
mov
rcll
mov
sbb
add
push
in
clc
sbbb
adc
lret
jno
ja
test
mov
jl
inc
aam
pop
add
aaa
jbe
add
negl
xorb
add
movsl
mov
cs
add
out
xchg
dec
xchg
pushf
add
out
cltd
add
xchg
pop
push
cmp
add
mov
inc
test
sahf
adc
lock
push
lea
mov
fwait
into
rcr
pop
test
in
jg
mull
pop
mov
add
adc
jecxz
dec
add
mov
adc
inc
dec
sub
aam
mov
pop
stos
mov
xor
mov
sbb
sub
pop
cmp
decl
or
cmpsb
add
and
xor
add
pop
rorl
pop
stos
out
jl
adc
sbb
cmp
xor
insb
sub
mov
scas
add
jbe
add
aaa
loopne
push
out
mov
cmp
sbb
adc
loop
mov
in
jnp
inc
push
add
aam
pop
shll
push
xchg
xchg
xor
inc
inc
dec
ret
add
insb
cmp
dec
add
out
sub
pop
inc
mov
into
add
xchg
inc
movsl
xchg
sub
jno
adc
in
fdiv
mov
sub
test
bound
inc
mov
es
cmpsb
and
mov
lds
or
jecxz
jmp
jno
fstps
dec
inc
ja
xchg
and
popf
pop
xor
xchg
insb
cmp
add
nop
ja
sbb
movsl
push
stos
subl
cs
das
decl
int3
xlat
mov
mov
lcall
cmp
push
int3
popf
add
add
xchg
fmul
or
loopne
cmpb
loopne
sbb
add
movsb
push
xorb
lock
call
inc
rclb
and
les
xchg
cmpsb
in
subb
fmuls
ffree
arpl
mov
mov
add
insl
cmpsb
jecxz
or
xchg
in
xchg
push
add
jmp
xchg
cmc
popf
or
mov
sbb
adcl
pop
lret
jl
dec
inc
sar
roll
push
hlt
jbe
cmp
adc
xor
fdecstp
dec
fsts
call
testl
roll
fsubrs
idivl
into
cmpsl
lret
addb
mov
add
fiaddl
flds
shlb
enter
mov
sub
stc
jb
add
dec
mov
dec
add
push
lret
push
lods
xchg
roll
roll
loope
insl
out
fildl
nopl
es
mov
mov
ja
jg
fimuls
frstor
in
loopne
lcall
xchg
add
cmpsb
xchg
xor
adc
dec
add
scas
mov
loop
sub
test
das
bound
loope
sub
mov
out
test
mov
in
add
inc
es
sbbb
daa
and
xor
test
cmp
jns
jo
enter
enter
pop
fdivl
lock
mov
sub
sbb
mov
sub
sbb
enter
scas
jb
pusha
into
adc
enter
push
shlb
mov
xchg
outsl
add
loopne,pn
aam
add
scas
sub
fisubrl
cld
adc
cli
cmpsl
aam
dec
repz
ds
add
add
inc
test
in
add
xchg
aas
xor
xor
int
loop
add
lret
mov
cmp
stos
es
clc
jno
dec
and
loopne
test
outsl
xchg
xchg
sarb
pop
iret
xor
ja
push
sbb
test
and
mov
sarb
loop
mov
enter
dec
scas
test
pop
ljmp
roll
jg
pop
sub
pop
sbbl
daa
cmp
mov
jae
rclb
popf
adc
jp
add
mov
add
adc
lock
leave
mov
push
lods
or
mov
add
iret
cwtl
xchg
inc
push
add
int
gs
sbb
fcoms
jae
add
adc
aas
femms
movsl
inc
in
movb
add
les
in
add
in
xchg
add
lock
in
or
adc
pop
sub
jo
xchg
jne
fwait
imul
xor
or
adc
adc
xchg
or
es
scas
test
testl
dec
adc
push
or
inc
dec
mov
adc
dec
sbb
inc
jb
push
sbb
sbb
or
and
jb
sbb
lods
push
and
add
lods
int3
or
inc
rcpps
add
rcrb
and
or
ja
lret
add
and
push
mov
or
inc
inc
mov
adc
mov
mov
jg
add
cmp
movsl
je
roll
into
rclb
jle
aaa
add
pusha
add
cltd
ja
mov
aad
xchg
out
gs
pop
mov
fistpl
push
scas
xchg
xor
mov
add
and
xlat
outsb
cmp
inc
aad
lret
insb
or
div
and
mov
jge
jnp
add
push
fbstp
xchg
xchg
inc
push
jns
mov
inc
dec
ss
hlt
bound
pop
fsincos
loopne
inc
add
xlat
mov
push
push
or
nop
outsb
inc
sub
movsl
imul
add
andl
sbb
lods
mov
inc
sub
sub
repz
jns
divl
call
xor
test
xchg
out
mov
std
inc
andb
cwtl
ja
sub
lds
sub
lret
push
add
in
jle
mov
fiadds
jne
dec
aam
scas
pop
insb
add
sub
fsubrs
fidivl
outsl
mov
testb
daa
mov
xorb
aas
mov
cmp
sbb
inc
jae
test
dec
test
or
sub
xor
rcrl
jb
stc
add
sbb
bnd
add
js
and
add
jo
mov
mov
xchg
mov
add
stc
sub
add
cld
jne
xchg
fucomp
gs
jno
push
stos
push
mov
mov
jnp
inc
mov
inc
xor
or
out
ja
add
and
adc
jno
push
dec
or
mov
sar
scas
jl
add
jge
add
jnp
add
and
enter
xor
add
cmp
add
sub
cmp
movlps
dec
and
mov
sub
mov
add
hlt
mov
add
or
pop
lods
sbb
fcmovbe
xor
aaa
shlb
xor
dec
add
test
sbb
sub
clc
inc
push
jne
add
pop
jge
dec
into
repnz
add
mov
adc
push
xchg
fadd
js
aam
hlt
xchg
add
jg
int3
jmp
mov
jp
jne
push
ret
dec
pusha
mov
insl
jb
stos
add
inc
outsl
pop
or
jo
mov
lret
cld
lret
push
pop
inc
aaa
call
mov
lods
mov
inc
mov
pusha
push
jg
add
ss
inc
imul
rolb
divb
testl
mov
add
mov
and
dec
incb
movb
loop
dec
pop
xchg
adc
cmpsl
unpckhps
aas
lret
sub
push
addl
xor
loopne
jnp
jae
inc
jecxz
or
testb
out
faddl
pusha
adcb
sub
bound
sbb
lret
mov
incl
fs
es
jo
filds
faddl
fimull
flds
insl
fmuls
pop
pop
and
jbe
pop
repnz
push
and
add
lock
shl
add
xor
jbe
lcall
mov
pop
les
xor
stos
push
paddsw
incl
subb
cmp
sbb
dec
fucomip
push
scas
outsl
push
dec
add
adc
and
add
sub
inc
fiadds
scas
add
stc
sti
std
pop
pop
add
sbb
pop
aam
jg
sar
adc
and
sahf
xchg
add
insl
or
jae
jl
lds
pop
push
sbb
push
stc
or
or
add
scas
aaa
pushw
mov
jne
ror
and
test
inc
sbb
and
inc
or
push
je
test
add
mov
jle
or
fstp
add
insb
nop
testl
mov
vpmovm2w
add
jbe
test
sub
repnz
xlat
or
push
jno
jmp
loop
insl
push
hlt
add
data16
mov
pop
add
xchg
push
cmpsl
inc
andl
pop
cmp
mov
mov
test
jnp
lds
cmp
bound
mov
shll
push
cmpsl
adc
ds
jg
pop
jp
movsl
aas
rol
stos
dec
add
push
repnz
out
cmp
pop
das
pop
push
mov
ret
arpl
clc
mov
mov
push
enter
addl
add
lcall
xchg
ret
flds
ljmp
cmp
xor
daa
outsl
push
clc
call
dec
stc
xchg
dec
popl
dec
jg
lcall
mov
add
pop
rolb
or
ror
mov
inc
add
cmc
lret
xchg
and
outsl
add
xchg
fidivl
mov
xor
icebp
mov
xchg
mov
sbb
insb
daa
jmp
add
xchg
sbb
loope
into
sub
fsubl
xchg
and
push
dec
idivl
push
js
das
or
push
jo
push
xor
fs
add
dec
add
jge
jo
add
xchg
mov
dec
push
shrl
push
jle
scas
inc
iret
inc
dec
je
add
add
mov
add
sar
cli
mov
pop
shrb
pop
aam
scas
pusha
inc
sub
imul
jno
push
sbb
jbe
add
pop
mov
das
lcall
sti
out
or
inc
and
ret
mov
xor
and
leave
mov
jb
cwtl
cmp
jecxz
mov
outsl
push
popa
add
es
add
shlb
add
loop
rcr
mov
inc
inc
lock
mov
scas
sbb
out
int3
xchg
imul
icebp
sbb
xchg
sti
sbbl
add
and
rolb
mov
dec
pop
shrb
out
fdivl
lcall
mov
or
adcl
subl
adc
cld
dec
jp
push
stos
pop
js
mov
out
enter
cli
arpl
add
aas
imul
mov
add
mov
cmp
add
mov
je
stos
cld
subl
pusha
cmp
sub
fstl
add
xor
xchg
jnp
movsl
cli
idiv
xor
filds
je
subl
xchg
addb
cmpb
jne
xor
divl
adc
xchg
lret
add
fsts
and
push
std
add
in
les
clc
pop
out
mov
cs
jl
rolb
inc
shlb
int3
push
sbb
pop
jo
push
and
adc
jbe
das
or
mov
xchg
dec
cmpb
mov
popa
rcrb
je
addb
inc
sti
insl
stmxcsr
lods
loope
aam
shlb
sbb
fiaddl
stos
rclb
pop
cmpl
add
js
adc
cmpsl
xchg
add
pop
insb
jns
flds
out
dec
pop
jne
leave
les
cmc
repz
pop
push
push
pop
adc
sbb
jl
add
cli
stos
scas
rorl
call
movsb
popf
mov
shrl
push
repz
or
pushf
or
mov
inc
out
loopne
loop
adc
mov
movsb
add
xchg
and
push
jge
pop
ret
fcompl
es
rcl
pop
or
push
pusha
fimuls
mov
mov
inc
mov
inc
aas
ret
loop
cmovbe
jb
shr
popa
dec
outsb
imul
mov
xchg
loopne
mov
jle
add
mov
pop
adc
add
cmpsb
imul
jl
roll
add
xchg
insl
cmp
nop
into
cmp
in
jmp
add
jbe
fs
ret
push
jno
ficomps
and
sbb
cmp
int3
scas
bound
ss
je
jnp
jg
add
sti
repnz
addr16
fsubs
adc
add
add
cmp
jle
push
xchg
sbb
inc
mov
mov
or
lcall
mov
es
inc
call
mov
and
mov
out
addl
das
andb
xchg
nop
sbb
popf
popa
jmp
dec
test
add
xchg
out
outsb
leave
xchg
test
ret
sub
add
xor
mov
jae
loopne
mov
xor
imul
nop
rolb
pop
push
mov
insb
inc
or
cmp
cmp
scas
xchg
lods
fisttps
xchg
fldcw
pop
sub
xor
add
cwtl
add
and
stos
fs
test
pop
cld
sbb
jae
push
lahf
enter
or
sahf
in
popa
or
sub
ja
stc
in
cli
sub
dec
mov
sahf
cld
daa
nop
insb
jae
adc
cltd
or
pop
add
fcmovnu
pop
push
cmp
adc
negl
popa
iret
add
ljmp
add
xchg
mov
int
addl
sub
shlb
lret
mov
mov
mov
lcall
pop
adc
mov
sub
push
inc
add
cmp
fnclex
add
pusha
inc
push
mov
sbb
push
leave
subb
push
dec
pop
scas
dec
sub
add
xchg
push
movsl
xchg
subb
outsl
pop
mov
push
add
shll
dec
nop
cli
sbb
or
cltd
in
or
movsb
or
ja
add
loope
xchg
push
lcall
mov
outsl
add
arpl
rcrb
xor
pusha
fcmove
mov
insb
sbb
iret
repz
jnp
dec
add
adc
out
push
add
popa
push
inc
mov
in
sub
lret
fiaddl
pushf
add
insl
ret
jno
sbb
mov
ja
lds
pusha
fmull
jmp
push
bound
sbb
push
fcomps
pop
jmp
rorb
mov
adc
and
imul
add
in
xchg
repz
je
dec
add
inc
out
adc
jno
add
push
jae
adc
add
adc
jns
add
add
jp
xor
cld
pop
jbe
mov
lock
fistps
mov
add
cltd
add
stos
ret
xor
push
add
js
ljmp
sbb
sbb
stos
add
nop
ss
or
clc
adc
add
push
sbb
nop
xchg
andb
scas
jae
es
push
inc
rcrl
adc
inc
cwtl
aaa
jnp
or
sbb
or
add
fwait
decb
cwtl
xor
and
pop
jp
call
cmc
xchg
adc
add
rol
and
dec
pop
and
mov
cs
pop
add
push
sahf
in
test
aas
mov
fidivs
orb
mov
movb
push
add
pop
push
mov
pusha
out
or
outsl
adc
jl
mov
push
mov
loopne
cs
fisubrs
loop
add
push
adc
stc
out
xor
in
xchg
add
ljmp
jmp
imul
or
arpl
add
lcall
xor
cli
sarb
cmp
mov
add
repz
je
or
dec
pop
add
nop
and
popf
jecxz
jae
pop
mov
jp
fildl
dec
movsb
jecxz
test
loopne
leave
filds
lock
inc
push
ds
pop
shlb
sbb
test
fsubs
inc
imul
or
sbb
or
xor
fisubs
xchg
fldt
rcrb
lock
sysret
dec
xor
xor
mov
pop
jns
mov
fcmovnbe
pushf
xor
mov
sbb
push
outsb
push
jb
inc
cmp
sbb
flds
mov
inc
jle
gs
iret
mov
add
clc
jl
add
push
xor
xor
push
mov
les
add
in
data16
cwtl
outsl
xor
jg
add
inc
inc
sbb
data16
rclb
inc
iret
sub
andb
ficoms
xorb
jae
test
ret
xchg
pop
pop
sub
push
add
dec
in
nop
adcl
imul
int
sub
add
adc
nop
dec
cwtl
leave
data16
push
add
cmpsl
aad
xchg
pop
add
movsb
xlat
adc
adc
fidivrs
mov
sbb
sarb
rclb
mov
adcb
add
mov
call
sub
pusha
mov
jecxz
out
add
or
or
xchg
fdivs
cld
add
pop
jno
inc
out
sarl
jecxz
add
mov
sbb
les
adc
add
lret
loopne
out
call
hlt
or
or
jo
std
mov
popa
lret
jge
xchg
xor
enter
xor
into
sbb
std
jns
pop
xor
sub
dec
lock
adc
jg
mov
sub
sub
add
fwait
xchg
cmpsb
add
and
or
outsl
add
push
loope
notb
js
push
rolb
jbe
pop
stos
add
cltd
jp
test
pop
sub
add
test
mov
add
jnp
stos
js
rorb
pop
and
inc
je
aad
xorb
sbb
jno
fs
pop
add
aas
popa
outsb
add
sub
aad
sub
popl
xor
cmp
out
and
sub
and
inc
mov
add
push
mov
jp
xchg
add
mov
cmpsw
jl
call
ret
sub
daa
je
jge
jno
bound
addb
ljmp
xchg
lahf
inc
pop
mov
add
aam
add
mov
rorb
add
mov
or
pop
mov
xor
cmovg
ss
mov
push
rorb
addb
jb
cmp
cmp
lds
cmp
push
sbb
and
mov
nop
fsub
stos
add
test
into
mov
inc
push
add
mov
test
push
call
std
mov
mov
ljmp
pusha
cltd
std
jg
fucom
mov
push
jae
mov
xor
pop
or
jbe
cmc
inc
sbb
push
subl
add
inc
cmp
mov
cmp
xchg
mov
adc
mov
and
pop
jno
sub
cld
and
mov
mov
jmp
add
sub
out
add
outsb
enter
mov
or
or
jg
add
iret
adcl
add
add
pop
add
loope
push
cltd
lods
xor
add
andl
bound
and
scas
mov
lret
notb
ret
in
add
popa
adc
test
add
inc
dec
pop
add
lock
mov
jne
ss
repnz
pop
jbe
je
lmsw
imul
sbb
hlt
outsl
and
cmp
pushf
loope
cmp
pop
lea
daa
xchg
sbb
or
and
xchg
mov
cmp
incl
adc
add
outsl
pop
fsubl
pop
and
inc
and
add
imul
hlt
outsb
in
pop
jp
add
loop
shl
loopne
enter
rcrb
mov
jne
add
mov
in
mov
cmpl
add
mov
bound
add
xor
sbb
fwait
xor
ljmp
sub
daa
mov
enter
repnz
pusha
cmp
sldt
pop
sbb
ss
add
es
fcomps
in
das
jecxz
pusha
cmp
add
jg
loope
jo
mov
mov
and
rolb
push
lcall
mov
mov
mov
adc
push
add
test
add
add
sub
stc
push
xchg
jl
add
add
js
add
addr16
add
pop
sbb
cmp
xor
sbb
mov
arpl
mov
and
cli
inc
sti
out
in
mov
sub
jb
adc
add
addb
cmp
jne
add
dec
mov
fisttps
addb
cld
test
cmp
cwtl
aam
cli
rcl
add
es
pop
add
add
into
sub
jecxz
js
add
insl
inc
dec
jnp
add
hlt
jp
xchg
xchg
pop
and
shll
dec
sbb
es
inc
add
jo
cmpl
iret
pop
xchg
fisubl
roll
sbb
mov
idivb
pop
insl
inc
or
cltd
rorl
and
mov
aad
js
sbb
and
inc
cmpsl
mov
pop
add
jnp
je
and
xchg
mov
loop
jno
pop
sub
or
jb
or
shl
dec
pop
ja
in
mov
setb
shlb
leave
fistps
sbb
dec
popw
pop
shrb
add
sbb
mov
cmp
jmp
sbb
repz
scas
sbb
push
pop
add
sbb
cmpl
fdivrs
mov
scas
clc
add
mov
adc
shrd
aam
cmpl
lock
sbb
sub
lods
mov
or
and
cwtl
mov
stos
pop
jae
in
daa
mov
and
or
fdivrs
xor
rolb
fadds
rorb
popf
cmpsl
push
or
dec
filds
cmp
gs
add
xchg
mov
test
pop
jp
add
adc
fwait
ror
sbb
pop
lods
jle
mov
cmp
xchg
push
push
outsb
sub
mov
pop
or
inc
fsubl
loopne
ds
bound
das
inc
sub
mov
jle
lret
out
add
ret
dec
call
in
js
dec
fnstcw
imul
testb
xchg
sub
and
test
outsb
xchg
sbb
loop
fisttpl
cmp
popa
subb
aad
clc
jl
jg
push
jae
ljmp
mov
add
sbb
in
outsb
add
push
pop
and
cmp
jge
mov
insb
dec
xor
ljmp
mov
sbb
jo
push
push
in
fldt
mov
lock
or
ficoms
bsr
rorb
insb
push
or
jo
shrb
je
ljmp
pop
mov
pop
add
pop
dec
push
test
pushf
dec
mov
xor
lcall
sub
int3
inc
xchg
push
mov
push
jns
sub
jo,pn
add
sub
cmp
shl
adc
add
outsb
inc
repnz
jbe
lock
adc
push
cmp
aas
and
inc
sub
and
daa
cwtl
mov
xor
sti
xchg
out
mov
add
jle
clc
add
repz
cmpsb
mov
mov
or
nop
addr16
lock
push
sub
mov
shl
sarb
pop
sbb
push
test
add
stos
xchg
pop
pop
sub
outsl
push
jo
shl
cld
add
jae
fcmovbe
out
push
cltd
pmullw
sub
subl
add
push
cmp
cmpsl
pop
jns
add
push
testl
lcall
mov
lock
outsl
loopne
pop
and
cmp
inc
fsubs
outsb
sub
pop
fldl
jle
nop
cmp
fcmovnbe
data16
ret
ret
outsl
addl
mov
mov
das
pushf
rcrl
add
xchg
xchg
punpckhbw
outsl
add
xchg
add
jle
pop
add
push
cmpb
lcall
or
fsubrl
mul
fidivrl
mov
xlat
enter
filds
aas
add
mov
mov
das
sti
loope
fs
rcrb
lds
loopne
jne
daa
into
push
aad
adc
and
shl
xor
ljmp
add
dec
sbb
or
push
lock
push
test
shlb
test
in
aad
pop
push
jae
adc
mov
xor
popa
movsb
jo
insb
rcr
mov
push
pop
in
aam
jo
fcoms
cmp
inc
out
or
cs
pop
push
loop
enter
movsl
add
out
add
stos
pushf
sahf
mov
mov
pop
mov
mov
stos
mov
jle
rcr
jae
ja
add
dec
mov
sarb
jns
mov
cs
add
add
insl
sysret
mov
popl
pop
nop
jmp
and
add
jno
mov
icebp
mov
test
imul
adcl
pop
jg
cwtl
out
add
adc
dec
add
movsb
add
inc
cmp
jmp
lds
jno
out
clc
loopne
jno
mov
add
out
es
je
andb
rorb
test
dec
inc
nop
lea
stos
push
cmp
incl
cmp
dec
cmc
pop
mov
in
je
add
cli
add
jle
stos
sahf
movl
imul
cmp
inc
sbb
shrd
imul
add
arpl
loopne
call
inc
add
push
and
aad
loopne
pusha
mov
out
xchg
and
sub
mov
push
cwtl
add
test
insb
leave
mov
inc
int3
add
lret
sti
add
out
das
adc
popf
add
int3
jns
cld
sub
rolb
inc
jecxz
test
xor
mov
inc
and
por
jbe
or
add
push
push
shrb
rorl
call
aas
mov
popa
rolb
in
jbe
es
mov
stos
push
sbb
and
add
call
repnz
rolb
dec
gs
xchg
add
inc
pop
inc
imul
pop
lock
adc
mov
stc
jmp
stos
add
pop
mov
sahf
inc
clc
flds
iret
or
lret
in
lahf
out
mov
ljmp
mov
jo
mov
dec
cmpsl
idiv
mov
jbe
push
rolb
out
popa
sti
and
jp
cwtl
out
mov
push
push
aaa
addb
push
movsb
enter
in
xchg
jno
cmp
inc
mov
dec
push
pop
add
sub
adc
sbb
add
jmp
mov
mov
popa
arpl
inc
xchg
adc
fcmovnu
scas
add
mov
mov
add
push
enter
xor
inc
cltd
mov
sbb
aam
vmulpd
add
out
pop
xchg
push
add
mov
jl
add
loopne
dec
or
imul
dec
repz
int3
in
add
add
add
andb
sub
call
orl
jne
repz
imul
cmp
pop
stos
xchg
pop
icebp
add
out
xchg
adc
or
pushf
popa
clc
cmc
sbb
xchg
jg
add
mov
std
sahf
cli
sub
into
in
dec
add
mov
or
jecxz
enter
pop
mov
dec
cmp
mov
add
stc
in
int
cmpsb
shl
jmp
push
sbb
test
sbb
pop
mov
add
or
push
push
mov
addb
add
loopne
mov
insl
xchg
adc
add
sbb
dec
jno
pop
cmp
sub
cmp
sub
mov
add
movsb
inc
push
lock
sbb
lahf
mov
out
popa
sbb
cmp
rolb
mul
add
arpl
and
repnz
mov
add
icebp
sarl
xor
pusha
add
sbb
dec
jecxz
push
sub
lret
out
clc
sbb
lods
cmp
cltd
daa
mov
xor
test
mov
sbb
test
adc
add
fdivrs
mov
dec
icebp
adcl
add
sub
les
add
int3
int
inc
pusha
xor
and
fists
jl
mov
pop
mov
jbe
es
mov
push
addr16
faddl
shl
sbb
in
jns
add
dec
imul
dec
pop
or
pop
inc
jge
cmp
and
hlt
dec
cwtl
pop
add
daa
out
rcl
fadds
push
insl
mov
flds
add
cmp
addl
dec
jns
das
enter
mov
or
mov
jno
pop
mov
ss
test
push
sbb
jp
dec
pusha
mov
pop
sbbl
xor
roll
shr
fidivl
adc
cmp
xor
pop
loopne
fwait
nop
mov
add
jnp
add
add
jge
push
mov
push
xchg
insb
sarb
aam
lock
add
popf
std
test
sbb
add
es
mov
gs
push
and
dec
div
aam
out
jl
add
jnp
fiadds
addr16
mov
cwtl
aam
pushf
add
ljmp
arpl
inc
adc
or
dec
cmpsl
insl
xchg
rclb
mov
iret
add
cmp
add
push
rcrb
js
stos
fdivl
pop
fmuls
pop
loopne
xchg
and
push
jo
or
dec
ret
sti
inc
and
jmp
add
adc
push
out
mov
mov
inc
inc
loope
out
test
insl
insb
loope
in
jmp
dec
inc
inc
outsb
lret
push
add
and
enter
or
aas
dec
enter
jmp
popf
cmpsb
dec
or
dec
push
push
in
loop
cmp
test
faddl
ret
add
or
pop
pushf
sub
popa
shl
les
pop
arpl
push
or
mov
mul
call
xchg
mov
lds
imul
lock
fnstsw
ror
aad
mov
xor
mov
adc
add
push
mov
popf
mov
push
inc
push
subb
cwtl
sub
xchg
xlat
xchg
mov
adc
push
xchg
xchg
shrl
js
add
push
cmp
mov
add
fidivrl
or
lar
mov
pop
inc
js
imul
add
cmc
aam
jl
fwait
add
or
sub
shlb
loopne
std
cs
orb
jb
and
add
cmovno
fs
enter
inc
jnp
rorl
adc
mulb
repnz
mov
jp
cmc
pop
mov
nop
add
mov
shl
jns
aas
xor
add
adc
dec
aas
pop
clc
mov
or
int
aam
int3
ja
cltd
aam
adc
xor
mov
mov
aad
shll
ljmp
fwait
add
ds
push
add
add
stc
mov
add
or
mov
rol
jmp
dec
or
mov
add
lods
pop
fs
xor
or
mov
cmp
loop
add
jnp
push
movsl
jp
xchg
add
pop
dec
pop
add
fnstcw
mov
lods
mov
jo
push
pop
mov
daa
cmp
mov
jns
add
mov
push
das
add
sub
fistpll
adc
cmpsl
mov
pop
fdivrl
jecxz
jnp
sbb
xor
lret
repz
adcl
sub
jle
mov
aam
sbb
jl
pop
xor
cld
adc
or
sbbl
add
call
jno
sub
enter
add
mov
in
ror
push
add
or
lcall
popa
add
cmc
shll
sub
inc
pop
or
mov
rolb
adc
scas
add
popa
and
nop
rcrb
xor
ss
jb
dec
mov
popf
vxorps
cmpsb
out
dec
push
sbb
add
and
les
xor
out
and
ss
push
xchg
subl
cmp
cmp
stos
test
fnstsw
mov
pop
outsb
adc
add
movsb
lret
inc
mov
in
jp
sub
stos
imul
loopne
lock
add
test
xor
jg
shrl
jo
clc
adc
les
dec
and
loopne
or
mov
push
and
jae
cmp
nop
lock
add
add
mov
add
cmp
sbb
add
jnp
fdivrl
and
or
adc
jmp
jno
jle
push
mov
test
ja
rcll
jmp
add
jnp
add
mov
bound
loop
scas
add
xchg
clc
iret
add
inc
sub
inc
int3
xchg
push
loopne
test
push
add
andl
and
sti
enter
jo
in
pop
repz
out
cmp
jnp
orl
add
xchg
int
cmp
das
push
add
jns
rcrb
mov
es
aaa
js
add
aas
popf
pmulhuw
shl
dec
movsb
cmc
jae
sti
mov
movsb
pop
arpl
ja
push
jbe
xor
fs
pop
dec
sahf
fiadds
fwait
mov
inc
loop
lahf
mov
je
add
mov
mov
inc
push
adc
xlat
sbb
mov
add
std
pop
and
mov
dec
sub
nop
loop
test
add
sbb
add
aam
mov
outsl
sub
gs
incl
jp
mov
loop
add
cwtl
xchg
das
xchg
dec
sbbb
sbb
add
push
push
shrl
aas
insb
fxtract
sbb
jbe
lock
add
in
mov
dec
loopne
scas
add
jb
push
inc
call
pushf
test
pop
dec
dec
mov
enter
iret
push
les
mov
mulb
insl
out
aam
ljmp
cmpsl
dec
jl
cmp
repnz
jbe
addr16
xchg
popa
mov
or
push
adc
xchg
sbb
scas
jb
mov
adc
or
stc
pop
cli
push
xchg
lcall
add
bound
xchg
add
ss
sti
sub
add
cmp
xlat
fwait
jmp
sub
jmp
pusha
or
outsb
sbb
cmpb
mov
inc
cmp
push
cmp
push
popa
pop
cmpsb
cli
dec
jmp
sbbl
add
leave
add
test
add
pop
add
cmp
aam
push
mov
nop/reserved
ret
scas
cmpb
add
out
cmp
jg
push
jle
add
data16
cli
loopne
int3
jge
push
sti
cld
or
and
icebp
lret
add
jl
movsl
adc
push
fst
sti
jb
sbb
lcall
flds
int3
in
add
pop
push
hlt
int3
mov
jle
mov
leave
rcll
ja
pop
dec
lods
lods
add
sbbb
fimuls
cwtl
fldenv
mov
mov
pusha
pop
add
add
push
add
lret
popf
add
movb
add
test
or
inc
pop
pop
ds
aam
rcr
icebp
adc
jo,pt
repnz
cmp
sarb
add
outsl
xchg
jp
call
aaa
arpl
push
pop
sbb
xor
mov
ret
jp
add
dec
ss
push
jl
in
cwtl
fldenv
add
jecxz
in
sub
xor
push
mov
push
mov
std
es
mov
and
add
cmp
or
xchg
call
dec
test
lahf
cltd
pusha
out
andb
xor
pusha
and
xchg
push
mov
flds
sbb
out
sub
insl
testb
add
mov
rclb
push
out
add
dec
std
xor
leave
or
sub
jle
lock
sub
insb
imul
add
leave
jne
dec
shll
pop
inc
jge
dec
adc
sbb
pop
pop
pop
lods
icebp
fidivl
in
sub
sub
mov
lods
sbb
ljmp
add
fwait
jo
add
and
bound
pop
add
jb
jl
jns
incb
cmp
push
es
sbb
push
inc
inc
mov
outsl
addl
stc
push
xchg
nop
add
pop
mov
imul
mov
jge
push
cs
ja
and
sahf
insb
add
dec
and
scas
cwtl
adc
ficomps
add
inc
cld
fadds
add
inc
js
insb
add
das
add
and
cli
clc
or
in
push
adc
sub
aam
dec
xor
clc
fisttpl
add
or
aas
sub
xor
ret
clc
xor
mov
outsb
pop
push
jbe
add
or
add
leave
jb
lret
in
sahf
jo
out
dec
shlb
push
dec
lds
add
lea
fadds
dec
xor
or
and
lahf
and
mov
movsl
xchg
cmp
lret
adc
cld
es
mov
nop
dec
jg
and
ret
mov
or
mov
subb
sbb
sti
adc
xchg
add
adc
or
add
in
fnstcw
scas
xor
add
xchg
cmp
fldt
xor
in
push
jne
add
ffree
fldt
into
jge
add
xor
cwtl
sub
adc
add
aad
push
mov
addr16
push
jl
push
mov
pusha
add
or
push
cmp
dec
add
fistpl
jp
jnp
add
or
lods
dec
pop
push
dec
jp
sbb
or
add
xor
and
add
int
add
and
xchg
dec
ret
roll
pop
fs
in
aaa
cmp
push
fstps
jno
pop
dec
or
add
jp
sub
rcrb
add
push
pop
mov
and
fstps
push
push
ds
mov
nop
out
add
or
add
jae
xchg
mov
aam
in
mov
stc
cmp
or
clc
jg
loopne
shlb
aad
add
xchg
sbb
xchg
lods
aad
push
into
mov
shl
mov
sub
or
xchg
and
aas
jb
adc
and
add
sub
add
rcl
and
fcomi
scas
test
push
shr
loope
push
xchg
add
fstp
pop
push
mov
push
push
add
jno
mov
push
xchg
add
repnz
leave
jb
jne
mov
sti
lock
out
mov
clc
mov
add
test
sbb
sbb
and
pop
addl
jmpw
xchg
or
xor
test
sub
std
sbb
sbb
push
add
dec
shr
loop
add
ljmp
notl
shl
movb
dec
push
repnz
fmuls
pushf
sbb
aaa
xorb
les
outsb
sbbl
adc
pop
and
loopne
pop
fcompl
into
pop
inc
sbb
popa
divl
adc
xor
xchg
rolb
pop
push
mov
sbbb
add
divl
test
divb
add
jmp
cwtl
in
add
fwait
xchg
jno
shl
cli
cltd
addr16
sbb
popa
out
scas
nop
adcb
mov
add
pop
in
pusha
jle
xchg
sti
into
jmp
and
dec
pop
sub
push
and
or
add
lahf
scas
fisubrs
dec
jge
sbb
loopne
add
sbb
mov
sbb
repz
adc
xor
cltd
mov
leave
jno
xchg
add
fnsave
add
idiv
rorl
jle
getsec
rorl
out
and
mov
out
pop
cmpsl
jno
inc
in
fneni(8087
mov
icebp
xor
xchg
or
das
cmpsb
sbb
dec
lds
sarb
cmp
or
stos
fadd
mov
inc
adc
adc
sbb
cmp
jno
xchg
cmp
das
adc
stos
mov
enter
mov
cltd
enter
sbb
pusha
shlb
loope
inc
add
cmpsb
ds
xchg
test
push
or
aam
add
clc
fists
movl
add
loopne
inc
out
push
fadds
mov
mov
jle
jbe
pop
mov
shlb
out
dec
mov
mov
pop
into
add
add
mov
or
pop
cpuid
dec
aam
ficoms
add
sbb
jno
add
xor
xor
testl
pop
je
testb
lock
pop
and
addl
test
cmp
fwait
push
sbb
jecxz
rolb
rorl
out
and
in
jo
fldl
scas
jne
imul
arpl
or
lret
enter
in
xor
nop
shll
bound
jl
sub
add
or
stos
mov
cmp
das
call
mov
mov
sub
cmp
scas
lock
xchg
movsl
dec
xchg
dec
mov
inc
jb
fisttps
sbb
pop
sub
add
pushf
sbb
mov
inc
aas
inc
jae
jne
lret
insl
scas
std
jo
add
mov
cld
jno
adc
out
scas
xchg
shlb
push
popf
pop
mov
and
xchg
add
fwait
xchg
adc
sbb
std
add
add
addl
pop
addl
icebp
test
mov
jne
sbb
jecxz
and
call
xor
push
pop
xor
inc
out
add
jle
outsl
mov
daa
sub
in
xchg
add
cmp
gs
pop
inc
loope
fstpl
aas
test
mov
sbb
cwtl
stos
mov
aam
sub
mov
add
dec
outsl
push
mov
inc
adcb
jnp
icebp
add
jo
xlat
test
dec
xchg
test
in
pop
fstl
inc
adc
test
dec
add
rcrb
sti
jge
and
add
cwtl
xor
pop
inc
data16
inc
mov
inc
test
sub
nop
pop
xchg
cmp
mov
mov
in
pusha
shlb
mov
sbb
ds
cmc
adc
adc
inc
enter
fiadds
aad
imul
pusha
test
fs
mov
xor
gs
cmp
xchg
sub
or
daa
adc
or
hlt
push
addr16
jg
mov
aad
aam
test
mov
push
in
inc
and
push
sub
fidivl
mov
enter
addb
outsb
xor
xchg
adc
ret
lds
sub
mov
jle
in
loope
dec
movsb
pushf
sub
adc
hlt
mov
in
mov
inc
add
mov
adc
insb
dec
dec
divb
push
sbb
mov
push
mov
pop
sub
sbb
add
or
sbb
shll
cmp
cmp
iret
mov
push
shrl
jns
mov
enter
push
jp,pn
test
shl
xor
inc
add
jb
in
mov
scas
adc
out
sbb
cs
dec
das
inc
hlt
repnz
dec
sbb
add
jb
sahf
das
mov
dec
add
jle
jnp
scas
mov
pop
mov
outsb
pop
push
push
jp
add
or
loop
mov
dec
sbb
jns
leave
adc
cmp
pop
or
mov
and
in
mov
das
test
shll
lock
add
sbb
imul
pop
shlb
mov
xchg
add
push
iret
xchg
rol
jno
mov
call
dec
add
push
sarl
mov
in
data16
adc
pop
cmc
xchg
push
in
add
mov
jecxz
rorb
or
nop
dec
insb
mov
dec
or
mov
jle
xchg
imull
dec
pop
adc
popa
push
mov
rorl
movsb
adc
adc
pop
cmp
cmp
clc
leave
in
out
adc
jnp
inc
dec
imul
test
inc
popa
in
outsl
xor
cli
xor
data16
adc
mov
pushf
in
mov
inc
push
and
test
loope
stos
jb
xchg
add
add
mov
fadd
rorb
pusha
test
clc
xchg
add
xchg
loopne
push
xor
or
push
jae
pushf
loopne
sbb
or
dec
sti
add
sub
add
cmp
xchg
xchg
mov
jae
pop
add
inc
xor
mov
or
adc
add
icebp
mov
std
decb
xchg
add
add
sbb
repz
js
mov
dec
add
cmc
sub
jecxz
add
jg
stc
sub
or
xor
push
pop
lock
add
mov
dec
call
jns
mov
pop
scas
cmc
push
or
xchg
inc
adc
fcompl
cmp
mov
push
jo
mov
push
dec
iret
lock
xlat
adc
and
daa
sbb
and
push
lea
rcll
iret
and
mov
hlt
dec
adc
insb
adc
mov
xchg
rol
loop
fwait
incb
cltd
pop
ficoml
sbb
or
push
sbb
mov
xchg
sbb
push
out
xor
jne
negl
scas
add
add
sbb
add
adc
imul
push
test
ret
daa
pop
cltd
pop
hlt
add
jne
push
add
inc
stc
push
push
fnstsw
in
pop
mov
idivb
pop
imul
pusha
insb
mov
xor
nop
xor
add
mov
out
sbb
xor
dec
xor
lods
or
and
sbb
jns
out
push
fidivrl
add
xor
mov
lcall
das
sarl
adc
pop
aam
pop
push
repnz
push
xchg
and
lock
or
sbb
adc
mov
add
in
xchg
lcall
mov
xchg
movsb
dec
xlat
pop
push
movsl
jmp
sbb
pop
popa
add
sbb
int
add
add
cmp
sbb
orb
mov
xchg
loop
sub
addr16
adc
add
cmp
sbb
test
leave
mov
daa
add
popa
shll
mov
and
cmp
or
jg
shlb
ljmp
int3
clc
movsl
push
test
mov
lods
and
add
outsl
mov
sbb
push
in
orl
shl
and
movsb
sbbb
adc
push
andb
in
ja
sbb
adc
sahf
pop
add
je
lahf
std
dec
jg
leave
xchg
and
scas
vmwrite
aaa
jp
push
mov
scas
cmp
dec
add
gs
add
mov
scas
push
xor
insl
movsb
hlt
loop
cmc
jmp
xchg
add
inc
mov
sbbb
shr
insb
xor
fildl
cwtl
std
jle
orl
mov
shrb
push
ljmp
enter
js
inc
adc
jne
adc
pop
rorb
jecxz
aas
add
xchg
and
arpl
out
or
adc
add
out
push
outsb
mov
adc
or
dec
inc
xchg
loop
js
pop
subl
sbb
add
imul
mov
adc
jmp
fildll
leave
fcomps
gs
jge
shlb
jl
add
pop
pushf
push
cli
loopne
imul
int3
icebp
adc
mov
push
lret
add
pushl
and
loopne
lods
add
mov
adc
ror
or
pusha
adc
dec
in
sar
mov
jns
adc
ret
adc
stc
xor
mov
inc
bound
add
sbbb
add
fldt
daa
dec
mov
clc
addl
int3
mov
mov
loopne
cmp
data16
cld
jno
sbbl
out
add
mov
add
jns
mov
dec
mov
js
add
pop
int3
cli
sub
adc
pusha
pusha
movsb
cmovnp
pop
std
mov
and
or
xchg
fcomps
add
cwtl
mov
in
scas
cwtl
sub
cmp
addb
add
movsb
inc
push
out
and
xorb
xor
aam
push
mov
jmp
fimull
imul
shr
lahf
add
popf
pop
pop
out
dec
or
into
add
ret
rcr
xchg
sbb
shlb
pop
add
cltd
fldt
jl
pop
push
mov
mov
cmp
jne
cs
adc
fsubrl
sahf
mov
sub
sbb
xchg
nop
xor
enter
int3
add
jb
or
adc
fistpl
sbb
call
clc
test
or
push
pop
pusha
add
out
cmp
push
push
cmpsl
jle
push
pusha
add
js
xor
imul
add
js
cmpb
mov
push
adc
xor
push
fneni(8087
lods
xchg
or
inc
jle
scas
enter
bound
nop
inc
add
cltd
loope
rolb
or
outsb
sbbl
inc
in
jle
mov
sbb
fs
add
cs
jae
jb
cmp
or
add
xchg
adc
shrb
test
mov
cmp
mov
and
jp
add
mov
push
jg
add
fsub
add
rcrl
je
fbld
add
lock
movsb
out
inc
add
cmp
mov
aad
mov
mov
shlb
jmp
xchg
daa
push
lock
mov
xchg
addr16
and
or
pop
sbb
fistl
adc
lret
jae
push
daa
iret
imul
lahf
mov
adc
lcall
mov
jne
push
pop
mov
inc
mov
lcall
xor
and
add
or
ret
lea
aaa
dec
inc
or
lock
mov
imul
leave
add
repnz
add
mov
cli
jo
test
add
ja
pop
notb
fsubs
arpl
jb
add
inc
pop
and
cld
pop
movsl
icebp
xchg
in
cltd
repnz
pop
movsb
test
pop
jmp
cmpl
and
popf
pushf
sub
pop
and
mov
jbe
rcrb
xor
pop
call
adc
add
xchg
js
dec
arpl
inc
xchg
dec
inc
xor
sarl
sub
out
add
and
outsb
push
enter
inc
xor
jle
push
cmp
cmpsb
push
loop
add
pop
xchg
mov
stos
inc
pusha
sbb
pushf
xor
and
repz
shrb
adc
push
or
icebp
sub
add
or
add
or
pusha
inc
es
push
inc
dec
jb
das
pop
testb
mov
jno
testl
xchg
rcll
movsl
outsl
push
mov
xchg
stos
outsb
ljmp
add
jnp
xchg
mov
push
pop
jecxz
and
push
fdivrl
loope
pop
jb
add
adc
cmp
adc
mov
jg
or
mov
add
add
pop
adc
in
add
addr16
mov
xchg
in
inc
push
adc
mov
push
je
rorl
es
add
pop
and
in
mov
xchg
adc
inc
adc
inc
push
mov
arpl
out
or
hlt
add
sub
adc
xchg
mov
push
out
sub
and
add
test
lock
shrb
out
jno
cmp
pop
repnz
cmp
add
stos
adcb
and
shlb
idivl
adc
in
outsb
cmp
movsb
xor
scas
es
sldt
aaa
fistl
mov
shrb
pusha
cmp
jp
add
imul
bound
adc
ds
out
pop
pop
add
jae
fmuls
into
fisubrs
aaa
shlb
or
xchg
sbb
hlt
jmp
jp
add
ret
pop
xchg
jno
sbb
into
sbb
repz
nop
mov
sub
mov
es
add
and
inc
sarb
subl
jns
add
inc
or
shlb
test
add
mov
cmp
lods
add
addr16
or
subl
or
hlt
inc
or
cli
mov
adc
test
mov
mov
and
mov
ret
jno
xor
cmp
sbb
add
cltd
ss
sub
shrb
les
xchg
lcall
add
xchg
xchg
adc
cwtl
xor
or
hlt
lock
inc
inc
js
pop
inc
xchg
ja
bnd
ret
sbb
xor
inc
add
push
xchg
outsb
lock
jne
jbe
add
mov
add
data16
andb
out
sub
mov
add
ret
pop
cmpsb
inc
je
cmp
nop
iret
lock
pop
cli
sbb
jge
rorl
ret
mov
add
add
xchg
lret
in
xor
mov
mov
mov
mov
pusha
mov
cwtl
sbb
shlb
xor
add
xchg
mov
int
adc
add
and
sbb
jne
or
loopne
jne
push
or
add
inc
lods
aaa
xchg
loopne
rcrb
add
xor
mov
aam
mov
sub
inc
subb
pop
icebp
mov
fs
imul
loop
subb
je
jl
sub
inc
js
jns
test
pop
bswap
add
sahf
lock
push
ficoms
mov
mov
add
xchg
xor
add
pop
movsl
ret
pusha
iret
cmp
adc
mov
inc
inc
pop
pusha
sub
stc
adcl
shlb
jle
pushf
movsb
sub
inc
stc
clc
sbb
push
and
sbb
out
mov
push
and
and
and
pop
push
mov
or
shl
jecxz
jg
aas
or
iret
dec
jle
add
stos
xchg
mov
call
add
in
into
jle
inc
push
aas
rcrb
fnstenv
cmpsl
notl
insb
add
and
cwtl
inc
pop
cli
push
scas
nop
shlb
fstps
in
lret
jno
std
loop
pop
sar
out
rolb
leave
mov
inc
inc
mov
add
xchg
dec
and
push
mov
in
loopne
jo
add
hlt
push
addb
clc
and
cmpb
mov
add
sbb
lcall
imul
in
inc
cld
popf
sub
iret
sub
cmpsl
mov
push
add
sarl
sbb
dec
pop
fcoml
shrb
add
iret
mov
lds
mov
or
sarb
dec
adc
dec
adc
aad
pop
out
or
cmp
es
mov
push
adc
or
clc
test
das
adc
add
lock
inc
add
cli
sub
data16
lods
lret
sbbl
ljmp
and
testl
das
pop
clc
add
xor
push
add
loopne,pt
imul
stos
mov
aaa
shr
popa
push
data16
fmull
or
cltd
add
push
inc
add
mov
incl
insl
cmp
mov
mov
loope
adc
cs
movsb
jbe
pop
dec
fstl
add
mov
jbe
clc
mov
pop
pop
add
leave
fbld
enter
cmp
xchg
test
rcll
sub
fsubrs
std
in
pop
dec
mov
cmc
xchg
add
inc
ret
addr16
ret
or
jmp
jbe
aad
xor
out
enter
call
gs
in
pop
lods
lahf
push
and
loop
xor
jb
in
test
adc
sbbb
xchg
repnz
mov
es
inc
add
xchg
rorl
in
imul
ljmp
add
popa
and
lahf
and
jg
pusha
or
and
pop
cmpsl
loope
xor
nop
and
jl
rcr
iret
cmp
mov
sbb
out
inc
adc
shr
test
xchg
jns
out
mov
dec
push
rcrl
xor
or
pop
pop
lock
mov
inc
cmp
outsb
fdivr
or
movsl
dec
pop
fwait
ljmp
call
out
rcr
arpl
cmp
gs
dec
pusha
cmpsl
jno
jle
add
pcmpeqd
lds
fidivl
rcll
je
lods
and
in
add
lds
mov
xor
lea
jg
adc
es
lahf
mov
sbb
dec
frstor
mov
test
cli
imul
hlt
pusha
dec
inc
xchg
mov
fldl
ja
mov
pop
js
rcl
push
test
sub
mov
add
das
sarl
add
xor
jp
sub
popa
divb
jae
and
add
loop
inc
push
add
mov
mov
sub
jp
aas
jg
sbb
aaa
jo
mov
lret
push
add
inc
mov
fsubrl
push
add
jb
and
lcall
jne
fcmovnbe
out
dec
les
in
push
cmpsb
es
loopne
rcrb
adc
repnz
mov
test
mov
cmp
stos
test
xor
outsl
scas
lea
xor
call
push
xchg
inc
mov
inc
xchg
and
mov
add
mov
test
push
xor
cld
add
push
xchg
sbb
mov
jmp
dec
test
fsts
adc
mov
add
push
clc
fs
xor
movsb
push
pop
repz
cmpsl
mov
pop
ljmp
xchg
into
rolb
incb
pop
jge
lret
ret
add
push
inc
pop
add
sub
fisttpl
int3
fdivrs
add
loope
es
shll
add
in
lock
sti
adc
mov
xor
stc
hlt
add
fildl
push
mov
fwait
out
sub
mov
pop
pop
xorl
adc
aaa
jo
sbb
dec
mov
mov
cmp
add
xor
dec
or
jne
cmp
mov
add
cltd
push
add
popf
jl
stc
xlat
pop
xorb
js
les
mov
sub
insb
add
imul
call
or
add
js
rcll
jg
and
cltd
enter
setl
xor
mov
iret
mov
xchg
sar
or
or
outsl
jmp
sbb
jle
leave
movsb
and
lahf
jns,pt
bswap
add
rorb
xchg
add
shr
lret
add
shlb
cld
jns
pop
or
out
aas
bound
xor
or
add
divl
inc
push
out
adc
out
push
aas
dec
dec
push
jl
adc
lods
sbb
adc
loop
or
cs
dec
add
out
xchg
add
incb
push
aam
jg
push
pop
cmp
loop
test
mov
push
adc
cwtl
fidivrs
sbb
push
xchg
and
scas
lods
mov
and
sub
mov
xorl
daa
cmp
dec
mov
pop
popa
push
insl
add
std
xor
xor
add
inc
dec
sub
xchg
stos
dec
sub
mov
lock
push
xchg
and
jge
loopne
push
push
loop
clc
cld
push
movsl
mov
jge
fldl
adc
mov
push
hlt
pop
sbb
ret
jo
add
addr16
adc
orl
adc
pusha
cli
add
jp
jne
mov
mov
fcom
or
ficoml
movsl
pusha
mov
outsl
cmp
mov
jmp
negl
testb
xchg
aad
push
sti
out
add
lock
mov
into
or
arpl
jnp
jge
test
jbe
in
enter
jecxz
setno
mov
add
lea
mov
mov
add
loope
xlat
loop
lea
sbb
lods
jmp
xchg
and
lret
add
cwtl
andb
cmp
fwait
or
add
mov
cwtl
inc
iret
add
dec
sub
sub
cmp
scas
add
inc
movsl
and
insb
add
andb
push
mov
xor
jo
pop
push
cld
popf
inc
lods
xchg
lahf
xor
sbbl
cmp
xchg
mov
add
pop
push
cmpsl
pop
and
push
sti
cmpb
sub
lcall
sbb
add
mov
add
inc
sbb
xchg
dec
mov
add
jne
mov
outsb
cmp
dec
ljmp
scas
out
mov
mov
dec
stos
and
or
jl
sbb
adc
scas
les
sub
ret
fucomip
pusha
mov
sbb
mov
ss
jae
bound
push
xchg
out
scas
xchg
add
stos
subb
or
icebp
arpl
sahf
sbb
test
or
mov
push
and
add
mov
subb
testl
mov
ja
jge
xchg
in
xor
xchg
xor
test
push
dec
daa
jnp
and
mov
shlb
js
test
pop
mov
xorb
adc
mov
inc
stos
aas
sbb
out
or
mov
daa
and
add
in
test
xor
adc
push
scas
stos
push
cli
fimull
jne
out
inc
fimuls
data16
insl
add
jle
shlb
mov
shlb
pop
iret
sbb
jns
jb
add
adc
push
and
jno
nop
jno
cmp
fidivs
and
or
aam
add
pop
test
dec
hlt
popf
jae
add
ret
and
jecxz
fadd
add
iret
and
jp
pusha
add
mov
popa
add
push
adc
push
popf
xor
out
hlt
mov
leave
xor
add
sbb
daa
rcll
in
sahf
inc
add
stos
lret
or
xor
or
inc
or
pop
dec
inc
cmp
dec
fistps
pop
lcall
ret
lods
sbb
jb
xchg
add
pop
std
jno
int
orb
jo
mov
xor
jge
sbb
das
les
inc
ret
add
adc
and
negb
add
sub
jl
sbb
or
flds
push
pushf
push
or
push
push
test
jnp
sub
cmp
test
popa
xor
loopne
pop
rcrb
pop
rol
sbb
orb
or
cmpsb
adc
adc
loopne
sbb
push
fs
jo
mov
adc
fs
push
aam
pop
adc
inc
add
pop
xchg
jp
loop
inc
dec
jmp
pop
insl
or
mov
add
shlb
jo
mov
rorb
push
mov
push
xchg
sub
cmp
lock
daa
cltd
dec
mov
ds
jnp
mov
xlat
mov
daa
or
loopne
js
inc
pop
add
pusha
pop
mov
adc
or
lods
andl
add
sub
pop
lods
jbe
pop
inc
test
mov
nop
push
bound
push
fcmovu
mov
jmp
imul
sahf
cmp
nop
jns
loope
lods
mov
inc
outsl
mov
orl
mov
faddl
sub
add
jl
das
movsl
cmp
xchg
es
jle
test
mov
or
cmpsb
adcl
inc
mov
sbb
es
arpl
add
mov
jle
adc
mov
push
enter
loop
pop
adc
pusha
call
rcrl
mov
xchg
and
mov
mov
mov
movsb
xchg
jns
inc
fst
cmp
int3
or
xor
mov
ss
xlat
mov
add
inc
add
push
mov
dec
push
add
mov
add
mov
cmp
cld
add
push
add
pop
pushf
sbb
add
adcl
lock
add
or
subl
js
mov
pop
dec
add
cmp
test
jmp
add
imul
cmpl
push
cmp
xchg
add
sbb
xchg
outsb
imul
dec
xchg
sbb
mov
pop
sub
jo
jl
sub
lds
add
aas
cmp
dec
in
push
adc
xor
add
loop
enter
pop
jge
add
jo
fidivrl
cli
nop
dec
pushf
out
mov
add
addr16
sbb
jnp
in
icebp
fs
imul
add
sbb
lods
jo
loopne
add
mov
loopne
add
mov
loop
cwtl
jbe
fs
inc
jp
or
push
mov
sbb
or
xchg
push
dec
mov
inc
nop
andb
scas
xchg
push
add
pop
sbb
cmp
popf
and
adc
add
clc
xor
nop
mov
lret
add
or
test
rcl
adc
push
add
addr16
into
pop
sbb
ds
mov
add
jge
mov
dec
and
sbb
pop
sbb
jecxz
hlt
and
cli
dec
out
and
cmp
xchg
push
mov
mov
jmp
adc
mov
add
and
jae
rcrb
out
mov
mov
adc
inc
subb
sub
and
xchg
cmp
stos
imul
sbb
inc
outsb
unpcklps
xchg
arpl
aam
out
stos
sti
ficompl
add
ret
das
movl
xchg
cmp
add
dec
dec
push
test
arpl
out
addr16
xchg
das
add
jp
sbb
cmpsl
push
int3
mov
sti
jnp
cmp
mov
or
subl
dec
xor
sub
cbtw
and
mov
scas
fs
nop
clc
push
push
test
push
mov
push
cld
xor
movlps
inc
out
fdivrl
add
mov
add
and
mov
test
jo
outsb
push
shl
or
add
aam
jb
jns
mov
cmp
faddp
pop
add
mov
pop
neg
add
addr16
out
sbb
jbe
andb
sub
mov
filds
out
add
add
fs
pushf
xor
add
dec
inc
push
std
lret
add
loope
push
lcall
out
mov
andb
movsl
sub
and
lods
add
sbb
sub
pushf
sbb
push
add
imul
lahf
cmp
movsb
cli
pop
sub
lret
xchg
add
test
jmp
add
pop
pop
cltd
pusha
add
and
cmp
sub
dec
push
lret
jmp
and
xor
add
hlt
inc
jg
lcall
lock
popa
adc
inc
nop
push
sbbb
movsb
dec
jbe
adc
rcrb
pop
add
insl
inc
inc
ret
out
sub
loope
int
mov
cltd
insl
repnz
jae
addr16
mov
xchg
call
pop
fidivrl
sahf
icebp
cmp
enter
cmpsb
add
xor
add
out
filds
push
fisubrs
sbb
xchg
arpl
sbb
mov
or
sbb
ja
jb
inc
arpl
mov
mov
cmp
outsl
rcr
add
push
add
xorb
stc
gs
push
jae
mov
pop
leave
cmp
push
push
aaa
lret
jecxz
jb
sub
out
jp
incl
or
lds
mov
in
jnp
or
sysenter
fiadds
daa
inc
lods
daa
mov
push
pop
fildl
fcoms
push
add
jb
shlb
inc
cmp
jae
ret
push
cmp
mov
pop
dec
sti
dec
jnp
das
addl
add
or
push
sarb
dec
mov
add
add
aam
mov
pop
add
inc
jecxz
into
pusha
loopne
mov
mov
imul
lcall
scas
cmp
or
jo
cld
add
stos
std
jne
int
add
jle
jb
dec
popl
push
cmpsb
sbb
cmpsl
push
data16
or
cwtl
add
xor
insl
and
dec
mov
mov
add
fbld
outsl
es
adc
adc
cmp
ret
or
add
adc
and
rcll
xor
pop
mov
xor
push
ja
stos
orl
rcrb
pop
or
inc
scas
mov
jmp
sbb
movsl
cwtl
filds
data16
pop
jmp
lcall
and
mov
repnz
sub
popf
adc
sbb
or
xlat
lds
loopne
add
mov
stos
and
add
shr
insb
sbb
pmulhw
outsb
dec
or
push
subl
sbb
cmp
xor
setp
loope
xchg
xor
adc
arpl
mov
popa
call
add
inc
testl
pop
ror
mov
push
test
lcall
ret
nop
lret
inc
sub
scas
and
loope
push
or
fadds
cld
lcall
lcall
cmpb
add
add
sbb
sub
sub
jmp
das
in
push
ss
cmp
cmp
push
mov
imulb
cld
out
pop
xor
jmp
fwait
adc
and
add
adc
and
push
into
sub
mov
aam
ret
cli
add
cmp
add
dec
dec
test
and
or
add
or
xor
inc
cmp
cwtl
add
mov
push
lahf
add
pop
aas
and
das
pop
inc
push
or
addr16
orl
imul
std
addb
out
cmp
cmp
sbb
fisttpl
leave
loop
fadds
cmp
jle
sub
add
dec
dec
add
jecxz
and
or
scas
xor
addb
rorl
push
pop
mov
loopne
inc
cmp
push
pop
rcrb
pop
out
xchg
sub
sub
adc
popf
mov
cmp
nop
sbb
repz
arpl
dec
push
xchg
je
int3
and
call
cltd
adc
insl
jo
xchg
add
rcrb
xor
pop
sbb
lret
mov
push
add
out
mov
cwtl
mov
push
mov
jge
int3
ss
mov
pop
mov
clc
add
mov
loop
orb
movsl
inc
test
push
mov
mov
test
sbb
add
mov
idivl
inc
jo
xchg
cltd
and
mov
mov
mov
cld
or
mov
movsb
pop
mov
mov
out
dec
scas
dec
mov
fsubrs
insb
bound
or
out
add
add
test
pop
or
arpl
mov
mov
fcmovnu
scas
lret
pop
out
add
jle
insb
mull
mov
add
pusha
out
and
jl
jae
add
leave
aaa
rorl
pop
add
popa
not
jbe
sbb
or
lret
std
addb
or
mov
push
insb
or
pop
clc
rcl
mov
call
sahf
and
xchg
lock
add
cmp
inc
mov
cltd
add
outsl
dec
or
insb
jp
and
loop
seto
orb
aad
cmp
call
imul
add
lcall
sbb
xchg
repz
mov
mov
pop
or
imul
push
add
or
mov
jg
xor
or
xor
mov
sahf
stc
pop
jno
jl
mov
mov
dec
ja
int
xchg
adcb
lock
ds
cmp
or
pop
or
xchg
pop
aaa
and
aas
insb
add
ret
jbe
mov
xor
dec
sahf
in
and
pop
xchg
add
push
int
or
loopne
in
aad
loope
xchg
add
sbb
rcll
addr16
ret
scas
push
or
in
repz
add
mov
ja
xchg
push
add
pushf
xor
imul
loop
add
push
or
out
lock
cmp
adcl
pushf
add
ss
add
cmc
js
xor
rclb
loope
push
repnz
push
repz
xchg
add
add
out
add
outsl
mov
xor
mov
cmp
sub
pop
icebp
add
popl
fyl2xp1
inc
test
rolb
rorl
sub
xor
call
push
movsb
dec
add
push
das
fcoms
sbb
sbb
add
lock
scas
adc
lods
or
mov
sbb
fldl
cmp
push
adc
sub
movb
mov
pop
xchg
cmp
lock
push
xor
icebp
mov
stc
sbbb
in
test
imul
mov
xorl
repnz
ss
pop
xor
into
pcmpeqb
inc
inc
insb
cmp
call
pop
pop
add
pop
inc
scas
cmp
adc
es
loope
outsl
inc
cwtl
and
int
test
popf
add
sbb
mov
xchg
pop
lods
pop
inc
lock
lahf
add
scas
inc
idiv
push
js
and
inc
inc
add
push
test
dec
add
add
cmp
add
aad
sahf
mov
push
xor
sbb
mov
or
mov
nop
inc
and
add
push
jb
add
mov
sbb
add
inc
push
cmpsl
ret
inc
das
add
fadds
notb
mov
pusha
into
push
xchg
xor
jbe
cld
xor
dec
dec
and
add
ss
add
cmpsb
dec
movsl
enter
in
sbb
mov
inc
push
ss
test
add
loop
int
add
sbb
das
dec
push
outsl
add
imul
pop
jns
sbb
ljmp
pusha
jae
add
push
add
pop
sub
push
add
jbe
adcb
pop
inc
insl
faddl
cs
pushf
pop
add
add
or
ljmp
psubsw
jne
sub
arpl
add
mov
jae
shrb
subb
addl
mov
into
mov
mov
subb
inc
lods
scas
sbb
es
dec
les
pop
mov
jb
or
adc
sub
mov
adc
aam
push
add
xchg
mov
in
xor
ss
sbb
inc
or
es
nop
and
cwtl
cmpsl
pop
xor
cmc
push
nop
dec
inc
cld
jnp
adc
loopne
std
and
dec
inc
clc
xchg
add
scas
cmpsb
pop
jns
xchg
push
xor
xor
push
cmp
push
rcrb
add
pop
in
ret
xor
add
sbb
inc
fbld
ret
and
or
xor
iret
inc
push
mov
movsb
daa
ret
in
mov
or
add
pop
adc
enter
jmp
div
pop
int3
pop
jecxz
add
push
stos
cmp
adc
add
or
jae
leave
inc
ret
sahf
push
flds
jp
test
mov
lds
add
mov
addb
enter
ja
call
out
sub
aam
and
mov
jbe
arpl
mov
sbb
pop
hlt
movsl
dec
aam
add
xchg
xor
testb
xchg
and
cmp
or
add
xchg
fbld
jle
dec
negl
mov
xchg
jo
jg
add
nop
nop
mov
add
incb
popa
jb
cld
push
mov
pop
push
pop
shlb
mov
pop
sub
add
xlat
jl
repnz
push
push
mov
mov
and
adc
cli
xchg
or
cmpsl
and
addr16
mov
inc
cltd
pusha
mov
cmp
stos
call
jl
xor
and
ret
pop
dec
jmp
stos
pop
mov
out
sub
cs
cli
mov
rclb
sub
inc
pop
and
xchg
inc
mov
stos
add
test
subb
add
fchs
jp
bound
in
xor
daa
bound
or
inc
jg
dec
cmp
sbb
mov
movsl
push
sub
xor
sbb
sbb
pop
or
mov
jnp
in
popa
add
xchg
call
xchg
add
xor
ds
fsubr
test
mov
mov
sbb
hlt
lea
das
shr
add
aad
mov
jmp
lcall
xor
adc
sbb
cmp
add
out
xchg
repnz
xchg
mov
jle
sub
ss
fcoml
push
inc
xchg
push
imulb
add
pop
out
cmc
pop
ret
pop
add
add
xor
cmp
and
in
stos
dec
repnz
popa
outsl
add
aaa
push
add
cmp
rolb
jns
jb
sbb
movsl
scas
les
aam
and
jbe
push
add
sub
adcl
add
sar
insb
jo
mov
add
or
jb
jns
ja
sbb
fs
sub
ja
insl
inc
adc
xchg
mov
mov
jecxz
push
add
pushf
xor
sti
fisubrs
pushf
into
dec
add
adc
aam
cmc
cld
pop
mov
mov
xchg
adc
faddp
add
pop
aaa
xchg
inc
lahf
repz
add
jecxz
xchg
pop
jmp
adc
xor
nop
cs
and
and
pop
jmp
insb
mov
mov
pop
cwtl
pop
add
pop
shrl
push
incb
lahf
dec
mov
fstpt
imul
add
push
not
cmpsl
add
sub
ret
xchg
popf
and
xor
add
movsl
in
gs
mov
jg
sub
push
mov
add
sub
jne
outsb
jns
add
jmp
sub
mov
add
xchg
cmp
sub
xchg
pusha
cmp
add
insb
shll
mov
lods
sbbl
pusha
sub
sbb
out
push
mov
out
mov
int
nop
ss
cli
mov
pop
sub
dec
popf
movsl
loopne
sub
add
mov
xchg
sub
aam
leave
add
mov
add
inc
scas
mov
ja
rcrb
add
ret
mov
add
mov
pushf
cmpsb
dec
push
rclb
fldenv
and
xor
jns
xchg
sbbb
mov
xor
jnp
push
nop
dec
sbb
int3
or
hlt
xchg
ret
std
movsb
clc
or
xchg
sub
mov
pop
cmp
sbb
es
add
out
add
mov
add
ja
test
icebp
shrb
xor
jg
sbb
and
rcrb
pop
mov
cmpsb
outsb
scas
out
inc
cltd
add
xchg
add
xrelease
lock
outsb
and
xchg
push
repnz
add
aad
adc
add
xchg
out
xor
and
cltd
lret
in
mov
dec
scas
daa
adc
cli
adcb
rolb
mov
sbb
xchg
mov
idivb
pusha
mov
sub
shl
nop
xchg
lcall
cltd
lahf
add
and
cld
test
mov
add
out
jns
xor
insl
mov
scas
inc
add
bound
mov
pusha
adc
dec
movsb
push
add
test
rcrl
cmp
std
and
shlb
scas
call
sahf
pop
xchg
lods
dec
sti
and
jns
add
movsb
dec
cmc
adc
jno
mov
aam
adc
fldt
sbb
mov
das
pop
cmp
ret
mov
sub
ret
sbb
add
lcall
xchg
fdivrp
add
sub
pop
dec
clc
in
in
adc
int
stc
arpl
enter
pop
and
pop
sub
push
jl
cmpb
cltd
insb
fs
xchg
in
push
mov
mov
iret
sbb
dec
lahf
jecxz
imul
nop
call
mov
mov
add
mov
decl
sub
add
inc
adc
hlt
mov
inc
mov
push
enter
dec
xchg
je
mov
mov
add
jo
lret
jp
aaa
mov
jl
xchg
jae
pop
ja,pt
andl
add
loop
add
dec
arpl
leave
add
ja
jne
rolb
xor
loop
push
pop
xchg
pop
out
outsb
adc
add
pop
jns
add
cwtl
sub
sub
or
mov
xor
fs
pop
sub
or
mov
lock
jge
fisubrl
xor
xorb
jo
push
imul
cmpsb
test
pop
clc
fistpl
addr16
inc
mov
mov
stos
push
adc
pop
dec
mov
xor
add
mov
xchg
loopne
stos
shlb
jge
out
test
jecxz
sbb
mov
push
dec
sbb
sbb
decb
mov
mov
ret
sub
cmp
add
and
loopnew
cmc
sbb
mov
pop
in
test
call
shl
jno
adc
mov
lods
or
movsb
fisttpll
subl
adc
in
ja
mov
out
mov
into
sbb
mov
pusha
cmp
bound
sub
adc
in
scas
divps
mov
mov
cmp
add
adc
add
mov
sbb
lcall
add
punpckhbw
mov
or
xchg
cmp
sbbb
cwtl
cmc
out
out
or
xchg
pusha
movsb
adc
iret
negb
xor
lret
imul
xchg
adcb
sub
je
add
pop
adc
jp
mov
xchg
cli
cwtl
mov
pop
rorl
dec
adcb
mov
xor
ss
mov
aas
adc
sbb
data16
or
jle
mov
test
adc
cwtl
mov
jae
xchg
push
aam
cmp
mov
sub
push
scas
cmp
mov
mov
in
das
cmp
lret
ds
mov
sub
adc
in
movsl
cmp
jnp
addl
mov
out
mov
cmp
xor
mov
xor
ljmp
into
test
mov
inc
add
fadds
testb
inc
or
jg
cli
push
jp
push
or
insl
add
push
hlt
aas
jno
pop
shlb
lods
mov
and
nop
imul
mov
dec
scas
nop
scas
mov
call
xchg
push
mov
xchg
pop
or
mov
xor
inc
cmp
popa
je
xor
lret
pop
jns
xchg
lret
push
sbb
inc
mov
data16
mov
add
cmp
push
xchg
ljmp
pop
jb
dec
cli
sarb
lock
sbb
sarb
aas
mov
in
mov
sbb
outsb
add
mov
dec
aad
testb
adc
cmp
lock
or
les
sbb
xor
ret
jecxz
sbb
mov
ljmp
pop
inc
jbe
pop
leave
int
movsl
mov
or
aaa
or
test
lock
sbbb
push
addl
xchg
xchg
add
insb
and
add
ret
sub
push
mov
xchg
loop
mov
add
cmp
add
lods
stos
std
jmp
inc
loopne
scas
cld
test
or
shl
xor
mov
cld
cmp
xor
hlt
addb
and
and
or
fxch
cmpsl
add
inc
xor
insl
adc
pop
sbb
stos
or
imul
and
lret
xor
and
or
andl
adc
add
inc
fisttps
outsl
or
fdivrl
mov
inc
mov
loopne
push
loop
jo
aas
popa
push
xchg
inc
sbb
ja
subl
sub
add
adc
sbb
adc
addr16
xlat
repnz
cs
add
nop
xlat
inc
movsl
add
jb
add
lsl
adc
sbb
sbb
in
inc
stos
sbb
add
xlat
mov
shlb
cmp
inc
shlb
imul
inc
jl
dec
xor
xchg
cli
xor
hlt
add
sahf
or
pop
or
mov
clc
hlt
cmc
orb
or
cwtl
sbb
cmp
dec
in
mov
pop
cmc
out
xchg
sub
or
addr16
cmp
and
ds
add
dec
mov
cwtl
jo
cli
pop
mov
add
lds
rcrb
scas
movsb
adc
and
ljmp
in
dec
fidivs
lcall
sub
pop
leave
add
leave
sub
out
dec
mov
shlb
adc
add
mov
imul
jno
cwtl
in
push
jae
sbb
in
mov
pop
mov
cmp
ret
push
leave
in
mov
and
pop
inc
mov
and
loope
aaa
jno
aam
and
push
imul
cwtl
sbb
jne
mov
mov
lods
and
ret
rcl
ljmp
das
pop
mov
mov
rcrl
in
and
femms
lcall
fdivr
sub
dec
mov
mov
pop
adc
pop
sahf
add
xchg
adc
pop
ret
push
pop
adc
icebp
arpl
xchg
pop
repz
popl
dec
jecxz
cmp
pop
jo
cmp
les
pop
aas
dec
xchg
xor
aam
jp
mov
mov
mov
cwtl
movl
rdtsc
mov
jb
imul
pop
das
scas
sbb
mov
int3
xor
roll
mov
loop
push
test
inc
and
push
test
int3
and
xor
movsl
adcl
pop
add
sub
add
test
addr16
jb
or
adc
mov
out
das
or
cwtl
add
xchg
jmp
popa
cmp
pop
pop
xchg
mov
dec
nop
cmc
cmp
xchg
inc
cli
xor
sub
jle
sbb
add
cwtl
or
pop
mov
mov
add
je
pop
add
pop
sub
adc
cli
dec
inc
mov
out
add
add
xchg
jno
std
push
out
subb
fidivl
add
in
push
lock
sub
scas
or
lods
push
mov
out
push
xor
in
lahf
movsb
loope
andb
mov
out
out
lahf
or
mov
leave
pusha
push
or
push
dec
pushf
add
sub
or
adcl
pop
jns
sbbb
int
sub
jb
icebp
mov
jg
cld
dec
je
mov
orb
pop
test
pop
xor
xor
cmp
jbe,pn
add
xchg
lcall
xorl
mov
push
add
push
mov
cmp
sahf
jg
test
arpl
add
cs
adc
sub
push
adc
andb
sub
ljmp
dec
das
xchg
or
push
mov
outsl
push
or
push
mov
xor
mov
and
pop
int3
rclb
lock
pop
inc
outsl
push
adc
rcll
adc
sbb
cmp
mov
dec
and
or
mov
pop
notl
inc
pop
push
subl
popl
pop
push
push
or
fldl
sbb
dec
pop
jmp
add
xchg
cli
movzwl
mov
add
cld
loopne
add
mov
cltd
fnstsw
cs
je
add
mov
call
mov
add
jo
repz
mov
mov
mov
xor
adcl
jo
push
mov
pop
pop
clc
decl
cmp
or
mov
sub
mov
repnz
add
mov
push
js
add
pop
xor
mov
push
mov
add
add
call
or
or
test
or
clc
cmp
loope
leave
in
xchg
mov
mov
sub
jmp
cld
cltd
call
popf
out
lock
dec
das
push
jmp
inc
lret
leave
shrb
in
mov
scas
es
loopne
add
out
fstpl
add
fldcw
pop
sbb
push
jge
dec
and
add
divl
xor
cmc
nop
push
mov
xor
stos
add
adc
imul
scas
ljmp
and
int3
adc
add
inc
jl
scas
out
or
int
enter
fidivrl
jge
cwtl
sbb
add
dec
sbb
mov
nop
outsl
jp
loop
movsl
pop
sub
sbb
sbbb
into
outsl
insl
cmc
sbb
add
sbb
push
mov
dec
lret
xor
sbb
mov
das
or
jno
or
pop
dec
cmp
int3
lock
lret
inc
push
hlt
add
jge
popa
fisttps
int3
shll
xchg
hlt
popf
adc
jo
mov
or
add
loope
sarl
adc
mov
sub
inc
test
insl
sub
add
cmp
jns
test
xchg
or
or
sahf
sarb
add
jns
es
xlat
popf
xchg
add
push
pop
push
stc
insb
jbe
push
jle
jno
popa
jge
out
test
jbe
mov
outsl
cld
xchg
pusha
shll
and
mov
sub
sub
and
add
and
push
out
add
lret
pop
cmp
jo
les
lock
inc
adc
out
rcrl
push
arpl
cwtl
or
lods
cmp
aam
xor
mov
movsb
in
enter
subl
push
ror
sub
pop
or
add
cmpsl
ja
mov
lods
dec
xor
shll
out
aas
je
loopne
cli
test
xor
pusha
push
adc
enter
add
lock
mov
lods
in
jns
outsb
divb
and
xchg
fdivl
push
jb
fcmovb
pusha
mov
scas
lret
sbb
lods
dec
mov
outsl
push
nop
lock
and
xor
and
stc
pop
sbb
mov
call
push
sub
cmp
hlt
bound
adc
sbb
jge
nop
dec
mov
insb
lods
or
test
sbb
adc
rclb
sbb
loopne
add
sbb
cmp
mov
pop
lea
fwait
mov
call
sahf
ret
and
nop
adc
lods
cmp
fincstp
adc
jo
je
out
or
add
cmp
pop
ret
test
lsl
push
mov
aas
mov
xchg
negb
dec
imul
out
jl
xor
shlb
sub
sub
aam
fadds
outsl
jae
jns
pusha
mov
bound
outsl
and
in
divb
lahf
dec
mov
add
pop
test
std
cwtl
xor
nop
mov
add
inc
xorl
sbb
lods
sahf
mov
push
push
and
and
and
pmulhw
cli
sar
imul
cs
popf
test
inc
jo
nop
popa
stc
fsub
xchg
pop
and
hlt
adc
ja
jo
test
fcompl
or
lahf
fwait
loope
pushf
movsl
pop
addr16
js
insb
and
outsl
les
push
xor
or
jae
lods
jle
test
xchg
pop
inc
imul
ret
leave
push
mov
roll
push
dec
and
xor
shl
mov
pusha
xchg
or
ja
imul
outsl
adc
hlt
xor
lret
or
jp
jb
lcall
call
popf
mov
inc
rcr
or
add
push
sbb
clc
mov
iret
sbb
sub
jp
insl
idivb
lret
fmull
jmp
in
mov
pop
loopne
shlb
fwait
inc
dec
insb
cmpps
inc
and
out
xchg
jo
push
outsb
test
mov
add
movntq
push
fiadds
jl
imul
push
cmp
push
stc
js
jno
adc
sub
int
jg
das
rorb
fldl
xor
insl
pop
js
hlt
call
sarb
repz
cmp
daa
push
enter
fildll
mov
or
jecxz
ja
or
aas
add
jo
movsb
pop
add
jno
add
mov
jae
cwtl
add
cmp
jo
jne
adc
pop
mov
pop
or
pop
ret
jge
lods
pop
addr16
cmp
sub
pusha
or
mov
mov
pop
xchg
fnstenv
jnp
dec
sbb
jg
leave
or
adc
setg
pop
sbb
and
inc
ret
mov
pop
insl
mov
pop
lds
adc
call
mov
je
stos
popf
sahf
nop
jecxz
adc
mov
cmp
and
popa
mov
sub
adc
ret
mov
arpl
lcall
or
stos
xchg
push
mov
inc
jle
mov
outsb
cmp
pop
adc
add
sbbl
cld
out
in
pusha
jmp
or
pop
fs
lds
lods
mov
aaa
or
jecxz
sbb
insb
mov
js
inc
pop
outsl
aas
dec
and
pop
loopne
test
in
mov
shrb
push
enter
mov
sub
xchg
pusha
add
jb
lcall
xor
xchg
daa
pop
push
lock
and
pusha
jmp
or
mov
popl
addr16
stos
je
shlb
sbb
sbbb
push
adcl
in
xor
scas
and
add
xchg
ror
out
ja
or
or
popf
sar
lret
pop
testb
mov
js
and
imul
push
shrl
add
dec
pusha
testb
inc
cltd
movsb
int3
popa
mov
pop
enter
and
pop
out
mov
or
mov
push
add
pop
sub
aad
add
dec
and
or
xor
and
add
mov
xor
adc
push
push
cwtl
shlb
or
dec
lods
dec
js
imul
xorb
pop
jae
push
cmp
das
andb
daa
ret
fs
pop
arpl
shrb
sbb
fmuls
push
or
adc
outsl
das
and
cmp
ja
mov
mov
je
add
sarl
cmp
jo
add
rolb
jnp
and
jo
data16
addr16
jnp
bound
inc
pop
cltd
push
adc
sbb
adc
pusha
lods
and
mov
xchg
xor
dec
dec
and
push
add
mov
pop
hlt
inc
pop
adc
es
add
js
jg
xor
xchg
sarb
pop
pop
pop
ret
lock
jmp
je
test
adc
push
mov
pop
or
pop
add
test
out
fimull
dec
rol
insl
nop
mov
jnp
xchg
ret
pop
mov
pop
and
cmp
and
addb
aam
pusha
mov
jb
loop
xor
rcll
sub
adc
add
ja
pushl
pushf
pop
adcb
scas
push
mov
and
jmp
mov
test
dec
test
lcall
adc
mov
cmp
add
rcrl
iret
lods
xchg
inc
add
push
in
aad
pushf
fsubl
imul
jecxz
test
mov
and
sub
and
and
int3
cli
test
add
push
les
sub
add
xchg
mov
and
shrb
mov
cwtl
pop
and
loope
sbb
cmpsl
jecxz
xor
and
add
mov
mov
add
pop
and
das
shlb
add
std
lea
inc
insb
mov
movsb
cli
jle
add
jns
and
sahf
dec
xorl
sub
add
out
xchg
pop
lock
daa
inc
jge
fcoml
xchg
dec
sbb
cmp
cmp
or
push
inc
add
outsb
mov
mov
mov
shlb
xor
add
push
mov
dec
and
xchg
push
negl
inc
xchg
rolb
push
mov
push
sbb
and
rorb
pop
xchg
add
pop
xor
lret
ja
push
mov
movb
mov
add
mov
sub
loopne
loop
and
add
call
mov
inc
add
pushf
lahf
sbb
mov
sub
mov
sbb
add
push
in
sbb
stos
adc
push
addr16
jne
out
or
dec
mov
mov
cmp
add
sbb
mov
push
xor
or
cmp
inc
dec
push
adc
mov
inc
call
dec
test
adcb
iret
popa
sbb
sbb
lods
jp
and
mov
fcomps
es
add
sbb
lret
push
sbb
pop
and
dec
inc
xchg
nop
cmp
popl
mov
gs
sbb
push
lfs
mov
in
dec
ss
cmp
jb
es
pop
adc
test
push
mov
mov
cmp
cwtl
int3
jno
and
je
xor
cmp
pop
add
push
cmpsl
xchg
and
xchg
iret
add
mov
sbb
pop
dec
cmp
add
aaa
dec
popf
jo
inc
mov
test
ror
xchg
dec
cmpl
clc
mov
lock
aad
loopne
jge
notl
sbb
mov
setp
add
les
add
cmc
lock
adc
sbb
mov
xor
mov
add
sarb
dec
sbb
cmpsl
popa
jp
push
inc
les
arpl
and
lds
imul
mov
pop
adc
sub
hlt
add
insl
rcrl
inc
scas
push
lret
xchg
mov
shlb
std
sbb
adc
test
outsb
pop
inc
loopne
push
aaa
add
insb
fstps
imul
scas
push
aas
sahf
scas
add
loope
dec
push
xchg
mov
xor
or
jle
jnp
je
and
stc
mov
test
lock
in
push
aad
scas
repnz
jge
jo
push
test
mov
stc
add
insl
imul
xor
hlt
pop
inc
inc
add
sahf
je
int
push
mov
xor
insb
or
cmpb
jmp
add
pop
repnz
xor
arpl
mov
or
xor
in
pop
sbb
push
and
addl
test
or
sub
leave
lods
jbe
adc
and
jecxz
sub
pop
add
and
test
xchg
cltd
js
inc
adc
lcall
adc
sub
mov
or
lods
mov
xlat
bound
js
sahf
or
cld
or
mov
popf
insb
pop
sbb
loop
xor
adc
lea
inc
jae
push
mov
sub
enter
push
nop
decl
nop
sub
cmp
popa
xchg
mov
jl
mov
and
add
popf
xor
xor
in
lahf
test
mov
cmc
shlb
add
xor
sub
sub
imul
mov
fwait
xlat
sarb
andl
mov
cmp
stc
mov
add
xchg
nop
fdivrs
adc
cmpsl
es
add
xor
je
and
adc
movsl
add
xor
mov
js
cmp
sub
mov
dec
mov
add
jno
mov
shrb
and
jo
push
pop
mov
repz
fcoml
es
mov
jp
stos
fistpll
ss
ret
adc
adc
jo
mov
in
add
ja
outsl
enter
and
aad
int
add
stc
imul
nop
and
ja
add
dec
cmc
frstor
fistl
inc
rolb
lahf
and
test
fldenv
pop
sbb
push
sub
mov
jns
loope
or
inc
and
inc
je
add
fiaddl
jns
push
jb
and
cmp
pusha
push
call
cltd
jo
fbld
inc
adc
pcmpgtw
out
mov
ss
dec
dec
and
mov
sub
into
rcrb
outsb
push
pop
dec
sub
pop
inc
mov
xchg
clc
add
imul
xchg
movsb
fcoml
jmp
rcl
fdivr
jle
pop
ljmp
mov
enter
and
loope
xorb
sbb
adc
sub
fdivrl
pop
mov
xchg
mov
adc
cmp
addl
lods
dec
lods
sub
movsb
sbb
xchg
mov
add
dec
and
repnz
shl
test
add
call
sahf
or
movb
push
fmull
movsl
sbb
mov
sbb
aaa
bnd
inc
outsl
addr16
loopne
adc
loopne
inc
cmp
push
fisttpl
mov
add
sbbb
mov
std
lahf
adc
sub
add
pop
and
pop
inc
bound
loopne
dec
inc
int3
les
push
out
and
movhps
lds
leave
xorb
dec
pop
outsb
inc
sbb
bound
push
outsl
pop
enter
dec
sbb
add
cmpsb
and
loope
lret
mov
lret
and
rsm
jl
repnz
xor
hlt
inc
jge
or
lds
pop
adc
add
xchg
adc
movsl
cmp
mov
jo
xchg
cmp
adc
xor
cmpsl
mov
jo
shrb
icebp
imul
push
in
into
xor
sub
call
mov
push
mov
leave
jmp
add
lret
cmp
cld
inc
in
arpl
jnp
pop
inc
les
andb
test
inc
add
mov
out
xchg
pop
dec
or
hlt
sti
rcrl
jle
adc
or
mov
xor
xchg
push
pop
aas
sub
push
int3
sbb
inc
lret
add
fldt
mov
cmp
add
outsl
shrb
es
add
cwtl
cltd
sbb
bswap
pusha
orb
dec
pop
ljmp
cwtl
add
and
xor
imul
or
mov
xor
mov
dec
push
rorb
cmp
es
adc
lock
dec
dec
push
pop
cmp
pop
sbb
lds
les
push
inc
lock
and
rcrl
sti
test
mov
add
push
ret
leave
xchg
push
jle
test
add
fisttpll
cmc
addr16
lods
jae
adc
dec
push
cs
lods
inc
and
cli
or
xor
int3
shl
pcmpgtw
or
sarb
add
bnd
inc
lds
call
add
dec
xchg
or
lea
loopne
fmuls
cmp
xchg
jp
jbe
insb
lods
and
pushf
sahf
cmp
test
xor
stos
in
test
add
xchg
cmp
test
nop
sub
dec
dec
add
cwtl
or
add
in
mov
add
addr16
mov
sub
or
inc
or
fcompl
dec
aas
adc
xchg
dec
dec
stc
enter
adc
out
add
sahf
in
sbb
int3
inc
mov
int
jl
sbb
inc
je
pop
or
adc
push
mov
add
insb
lods
cli
mov
xor
fiadds
inc
xchg
mov
jb
jg
inc
lea
sahf
cli
pop
in
in
hlt
insb
mov
lret
mov
add
add
iret
xchg
mov
jne
fs
sbb
popa
adc
mov
cli
add
pushf
dec
xor
adcb
or
cli
imul
adc
xchg
cli
add
xor
subb
mov
les
addr16
loope
push
mov
add
or
jle
push
inc
lret
fnstcw
sub
xor
enter
jo
adc
xorl
sbbl
and
in
pusha
shrd
je
inc
cmp
rclb
inc
mov
jl
push
lds
fmull
js
sub
push
out
das
test
cwtl
dec
loopne
add
mov
js
out
js
leave
xchg
into
lock
orb
loope
js
adc
pop
dec
fcompl
and
inc
add
add
ret
icebp
or
mulb
jae
inc
push
pop
adc
xor
push
add
repnz
and
out
jno
and
pop
sub
lds
int3
jl
or
addr16
shll
les
xor
sbb
xchg
test
push
loope
sub
cmp
inc
inc
dec
inc
stc
scas
out
mov
es
mov
sbb
xor
and
adc
out
add
sbbb
add
addb
jg
cmp
idivb
pusha
pushf
mov
adc
xchg
shlb
cwtl
add
pop
test
lret
dec
inc
sarb
mov
mov
xor
adc
push
push
enter
pop
mov
das
das
or
and
ficomps
sbbl
pop
and
clc
in
popf
push
or
andb
aaa
inc
or
ja
iret
xor
pop
and
aas
xor
lods
and
incl
mov
pop
and
jbe
fdivrl
cwtl
xorl
xchg
add
jmp
popa
pop
and
or
js
jl
sbb
push
or
add
jp
inc
cmpsl
repnz
dec
sbb
pop
test
adcb
adc
push
inc
cmp
es
je,pn
sbb
jecxz
sbb
push
inc
mov
stc
dec
jns
sbb
add
iret
and
loopne
dec
cmp
ret
addl
inc
rclb
cmp
fiaddl
mov
push
movsb
fmuls
jle
xchg
fcoms
jmp
stc
sbb
jns
in
mov
scas
xor
out
icebp
add
stos
inc
pop
push
test
int3
and
push
pop
stc
push
or
imul
cmp
dec
into
mov
lock
pop
xor
mov
jns
in
add
mov
push
cwtl
xchg
cmp
push
add
outsb
dec
sbbl
in
es
xchg
push
cmp
sbb
ja
rcrb
jbe
mov
dec
inc
test
xchg
jp
pusha
push
test
call
psubb
adc
push
push
and
cld
sbb
mov
pop
je
clc
sahf
pop
mov
jle
nop
lock
ljmp
orb
popf
add
cmove
popl
add
data16
nop
fisubrl
cmp
jecxz
pop
jno
sub
mov
call
popf
cmpsb
sbb
xchg
das
pop
pop
xchg
cwtl
or
cmp
dec
pop
out
add
sar
sbb
cs
push
inc
lar
push
dec
pop
and
push
pop
pop
repnz
ds
add
bound
stc
orl
outsl
add
cmp
xchg
inc
push
cltd
xor
lcall
and
xchg
jbe
and
mov
aas
movsb
xor
cmp
popf
sbb
push
adc
push
adc
pusha
sub
push
dec
mov
add
mov
rolb
push
dec
or
arpl
adcl
into
mov
shlb
sbb
dec
les
adc
push
cmpsl
sub
popf
mov
aas
and
cmp
outsl
cld
jne
jle
imul
cmp
cltd
pop
xor
mov
divb
cmp
dec
shl
shll
xor
inc
mulb
lds
xchg
cmc
scas
add
push
mov
and
add
sbb
dec
pop
add
xchg
dec
push
mov
add
subb
jo
cmp
pop
xchg
mov
mov
jl
jbe
test
mov
out
gs
add
cmp
adc
sbb
xor
and
mov
popf
sbb
push
aaa
push
arpl
daa
cmpsl
adc
adc
mov
loop
push
cltd
add
and
sbb
dec
pusha
adc
cmpsl
adc
fs
dec
add
adc
test
loope
lock
std
and
adc
mov
and
pop
and
push
and
add
lahf
inc
test
dec
dec
mov
not
adc
pusha
enter
dec
mov
ret
xchg
fsubr
adc
imul
or
dec
pop
mov
mov
call
pop
ds
movsl
mov
roll
push
jae
ja
stos
mov
xchg
mov
mov
xorb
pop
les
mov
ret
stos
int3
cltd
mov
ffree
and
and
std
fdiv
add
icebp
lods
ss
mov
shr
jge
aad
nop
push
lods
cmp
inc
inc
sbb
stos
sbbb
sub
or
cwtl
faddl
dec
add
fdivr
and
out
or
add
xor
mov
xchg
mov
fs
pop
stos
filds
jns
into
int
js
pop
adc
inc
cwtl
add
sub
pop
mov
mov
dec
into
aam
add
lods
xchg
xlat
jle
and
into
popa
xchg
es
sbb
jbe
xchg
outsl
rolb
daa
xlat
je
jecxz
dec
xor
fldt
aaa
sub
inc
xor
jbe
loope
mov
js
or
mov
cmp
sti
or
in
push
lret
mov
add
pushf
ffree
or
jle
mov
jns
adc
jge
cmpsl
rcll
mov
and
aam
sbb
cmpsl
mov
lea
test
out
loopne
and
int3
roll
mov
lods
sbb
imul
and
icebp
add
std
mov
add
jae
in
dec
cmp
mov
push
mov
inc
jo
adc
mov
mov
push
add
inc
add
in
inc
pop
inc
test
pop
fimull
mov
inc
push
mulb
enter
fwait
imul
or
sbb
cwtl
jl
add
clc
inc
aam
cltd
enter
sub
sub
insl
xchg
decb
lea
mov
int3
and
mov
jne
add
mov
lods
fwait
aam
mov
mov
pusha
inc
inc
cmp
mov
mov
mov
pop
add
jle
in
sti
out
inc
lods
add
push
out
xor
imul
fistpl
or
add
mov
sbbb
push
leave
lret
or
and
add
jne
mov
mov
mov
nop
ficompl
lock
xor
add
xchg
inc
push
stc
sbb
mov
sti
add
adc
add
pop
inc
mov
or
popf
fdivrs
mov
cmp
ds
xlat
add
fwait
add
push
shr
sub
inc
cmp
aas
test
outsw
loopne
jge
add
inc
sbb
add
and
mov
or
push
mov
add
ljmp
ja
mov
mov
sbb
cmc
or
add
add
mov
bound
mov
aas
out
jnp
ror
enter
mov
adc
and
enter
dec
mov
xchg
nop
and
and
pop
xchg
jge
test
sub
clc
xchg
mov
cmpsl
ss
outsb
and
xchg
add
movsl
lcall
out
xor
imul
clc
sub
mov
or
ret
mov
add
mov
push
xchg
aaa
pop
add
les
sbb
stos
out
cmp
in
cmp
in
arpl
and
inc
dec
sub
pop
mov
mov
rol
sbb
sub
je
pusha
std
adc
sbb
cmpsl
adc
enter
lods
mov
mov
add
push
jle
and
jne
test
mov
sub
fstl
xorl
add
dec
pop
sub
adc
cmpsl
sub
inc
inc
xchg
inc
mov
jo
fs
lahf
pop
push
sbb
shl
dec
push
js
sar
jl
lahf
mov
push
pushf
std
dec
cld
idivb
nop
inc
xchg
in
and
enter
incb
repz
push
or
push
push
pop
mov
add
push
push
mov
faddl
sub
jmp
xacquire
daa
stos
test
inc
out
repz
pop
lea
or
jno
dec
out
or
jp
inc
in
jo
xor
popa
add
jge
lcall
xor
or
pop
sbb
dec
adc
loopne
arpl
sbb
jo
jne
sub
insl
inc
fimuls
cmpsl
mov
adcb
xchg
mov
mov
mov
jbe
outsb
jns
call
adc
dec
icebp
jge
movsl
rolb
jb
rcrl
repnz
rcrl
fimull
shll
cld
xchg
pop
cmp
xchg
insl
add
movsb
push
lods
add
cmp
jbe
mov
add
icebp
arpl
das
cmp
push
sub
pop
daa
inc
outsl
nop
enter
cltd
push
aad
adc
mov
xchg
call
in
dec
popa
pop
add
mov
add
cmpsl
mov
push
es
xor
loopne
ds
hlt
add
jbe
mov
testb
sub
push
mov
adc
in
rorb
add
ds
cltd
mov
sbb
xor
add
mov
inc
movsb
int3
inc
sahf
and
adc
mov
mov
push
scas
aam
sti
adc
cmp
mov
cmp
sub
popa
rcr
xor
pop
enter
sub
lock
add
int
xor
fadds
shlb
pusha
decl
lahf
popa
shll
daa
and
push
mov
push
faddl
add
push
pop
mov
cmp
int3
nop
into
pop
mov
aam
adc
pop
inc
inc
cmp
cwtl
and
add
fstps
sub
icebp
and
xlat
pop
pop
shr
lret
stos
aas
jb
mov
or
pushf
popa
gs
mov
cmpsl
in
add
icebp
movsb
fs
out
sub
call
into
lods
jg
sub
loopne
movsb
mov
or
mov
sbb
pop
ficoms
mov
rcrl
jne
xor
insl
mov
clc
cmp
andb
cmp
not
pop
addr16
aam
jb
push
cmp
adc
push
push
jo
fimuls
push
sbb
add
gs
push
fwait
mov
sbb
js
dec
pop
ja
fiaddl
mov
pop
mov
cmpsb
fsubs
jg
adc
flds
cld
subb
fwait
popf
add
sti
add
cli
mov
pop
enter
jnp
sub
and
insb
cmc
xchg
data16
add
divl
add
incb
int
add
or
sub
jbe
sub
cmp
sbb
test
adc
movsb
and
add
fs
inc
cmp
and
and
inc
bound
dec
push
push
sbb
outsl
js
insb
fwait
pop
mov
push
ds
add
push
outsb
inc
dec
bound
roll
add
and
dec
lock
cmp
shld
jecxz
popf
daa
or
xchg
xlat
je
xchg
inc
jmp
mov
sbb
xor
mov
inc
insb
inc
jo
add
lahf
push
add
data16
add
push
lock
sbb
mov
fnstcw
incb
fmull
and
dec
addr16
add
lea
or
and
outsb
add
or
add
sahf
add
push
xchg
push
ud0
sub
lcall
and
pop
adc
xor
jl
bts
aad
mov
in
xlat
cmpsl
or
push
jno
jg
insb
arpl
rol
xchg
in
mov
sbb
out
cmp
lock
cmpb
sub
sbb
add
mov
stc
enter
push
loope
sbb
cmp
pop
jecxz
fidivs
fmul
or
and
dec
fsts
scas
insb
and
sub
dec
and
loopne
das
mov
cli
and
and
flds
add
call
fs
xchg
movsb
popf
dec
mov
mov
mov
mov
add
pop
mov
inc
insl
push
imulb
dec
or
mov
or
add
dec
es
les
lahf
mov
aas
jns
lret
es
push
or
in
outsb
lcall
sub
loopne
and
pop
xchg
nop
and
add
cmc
cwtl
dec
les
mov
in
insb
ljmp
adc
xchg
xor
xor
pop
sub
cmp
cmp
cltd
lock
jge
or
push
cmp
add
popf
cmc
jae
call
cmp
cmpsl
and
push
or
and
orb
int3
sub
test
xchg
mov
sub
pop
add
add
adc
sahf
dec
and
adc
sbb
int3
mov
push
rcr
addr16
lds
dec
push
sbb
or
outsl
mov
call
mov
les
jp
inc
xor
fidivl
cmpb
fldl2e
mov
es
enter
arpl
mov
mov
fs
in
orb
and
jmp
cmp
push
jne
sbb
out
pop
out
inc
daa
xchg
sbb
cld
push
or
add
add
jmp
push
test
add
mov
jne
gs
push
sub
test
mov
xor
test
pop
cmp
mov
sub
mov
stc
push
ljmp
stc
sbb
push
cmp
push
aas
push
cltd
aas
ret
ja
jl
test
cwtl
mov
in
push
test
and
push
sahf
arpl
pop
inc
push
xor
mov
or
jge
test
jo
loope
adc
cltd
in
pop
sub
cmp
add
popa
cli
jle
ljmp
or
adc
cmp
mov
add
hlt
les
xlat
cmpl
daa
cld
pop
inc
mov
jns
and
inc
stos
nop
adc
cltd
out
sub
movsb
lods
inc
nop
push
dec
mov
and
mov
sarl
dec
lahf
and
dec
xor
cmp
outsb
add
push
loope
faddl
subl
cmpsb
xlat
sarb
add
lock
pop
arpl
and
cwtl
shl
push
nop
push
ss
aas
pop
incb
and
push
movsl
dec
pop
das
add
mov
ss
enter
sub
and
gs
sbb
push
xchg
int3
icebp
xor
cli
xor
adc
inc
lods
xchg
xchg
jmp
mov
jno
adc
enter
dec
jecxz
xchg
shll
call
pusha
sub
xchg
mov
mov
mov
jecxz
add
dec
xor
ds
sbb
pusha
mov
add
ds
enter
cwtl
add
xor
mov
or
and
je
mov
mov
sarb
mov
arpl
push
inc
shrb
mov
cmp
push
nop
sbb
pop
fcomps
andl
ficoml
cmc
mov
mov
cmpb
inc
sbb
add
inc
in
add
mov
add
lds
mov
loop
popa
add
roll
clc
add
popa
fs
or
mov
inc
add
test
lods
nop
insb
and
lret
xlat
mov
inc
add
dec
inc
inc
cltd
outsl
in
add
aam
mov
cmp
adc
roll
mov
cli
push
push
clc
xor
xchg
xchg
call
leave
jbe
pop
adc
fwait
mov
jo
into
and
aas
xor
sahf
fimull
js
mov
add
rcll
push
test
mov
repnz
sub
es
and
loopne
aad
adc
inc
mov
mov
add
inc
mov
push
push
aam
mov
adc
push
inc
lock
pop
cwtl
lahf
test
inc
jg
pop
aad
adc
lcall
incb
mov
mov
stc
dec
mov
fcoml
adc
push
mov
insl
xor
or
add
cwtl
outsl
insb
pushf
sbb
out
jno
pop
loope
rorb
dec
or
insb
aas
pop
sub
add
cs
cwtl
fs
or
fs
lds
inc
bound
mov
test
xchg
roll
mov
fcomps
mov
add
and
cld
dec
push
je
fwait
or
and
add
add
and
sbb
jge
or
es
mov
outsl
nop
mov
lcall
stc
push
xchg
lock
test
mov
mov
or
xor
jo
fs
jo
and
sbb
sub
cmp
and
iret
jae
sub
push
pop
stos
xor
rclb
cs
imul
or
sub
es
xchg
jg
or
popf
movsb
adc
push
inc
sub
and
jb
cwtl
cwtl
loop
sbb
dec
in
incb
fiadds
movsb
fs
lcall
call
test
cmp
mov
cmp
sbb
addr16
test
stc
inc
sbb
rcrb
mov
nop
insl
dec
mov
mov
insl
pop
repnz
jno
data16
add
mov
test
mov
and
dec
xor
fisttps
and
xchg
sub
pop
movsl
sti
fidivrs
fsubs
pop
sub
push
fmull
sub
cld
aaa
add
shl
dec
out
add
xor
repz
inc
stc
or
and
cmp
loopne
inc
pop
xchg
and
xor
aam
mov
and
mov
dec
andb
nop
insl
sahf
rcrb
push
pop
ret
ret
popf
add
mov
add
ss
mov
inc
mov
or
pop
mov
pushf
in
pop
cmp
test
cli
add
mov
xchg
nop
imul
fisttpl
or
or
loopne
and
xchg
xorb
test
addr16
insb
push
ljmp
iret
mov
xor
jl
mov
xor
and
or
ds
sub
faddl
pop
and
rolb
aam
xchg
cwtl
clc
or
lods
jmp
adc
fcoml
xor
jns
cmp
jno
les
adc
data16
jle
sbb
xchg
gs
movsl
mov
or
mov
adc
aam
test
mov
out
div
sahf
lahf
cmp
xchg
pop
cltd
fs
leave
aam
pop
mov
sbb
leave
stos
jo
push
jg
outsb
jne
cmpsl
mov
int3
aad
aas
dec
cwtl
xchg
sbb
mov
add
mov
loop
xor
subl
jo
jns
mov
mov
adc
cwtl
les
addr16
test
in
inc
add
jb
push
or
push
cwtl
lret
inc
stos
push
inc
xchg
add
test
mov
sub
jno
popf
add
and
push
arpl
mov
adc
sub
push
dec
aam
mov
dec
test
inc
call
insl
dec
loop
pushf
les
dec
fadds
in
push
lret
mov
cwtl
inc
and
add
das
and
mov
sbb
pop
and
test
call
push
jo
dec
lret
xor
or
clc
pop
repz
movsl
ror
out
mov
les
inc
push
test
adc
cli
pop
sub
pop
adc
stc
outsb
xchg
sub
push
mov
xchg
lds
push
cld
pop
sbb
in
mov
incb
inc
lods
in
js
inc
or
dec
negl
pop
dec
nop
imull
mov
jo
add
out
enter
xor
push
xchg
mov
je
fwait
addb
cwtl
add
pop
pop
xchg
test
out
and
nop
or
repz
inc
jo
aam
ljmp
stc
cmp
dec
adcb
movzwl
andl
adc
dec
and
and
sub
pop
lock
leave
mov
pusha
and
cmp
and
mov
pop
test
ja
pcmpeqb
jge
inc
jo
dec
adc
mov
sbb
adc
inc
jb
dec
sub
enter
jmp
mov
test
inc
js,pn
and
xchg
lcall
or
test
add
push
add
xchg
sub
pop
adc
pop
inc
pop
xor
inc
enter
or
outsl
sub
jb
jle
test
orb
add
xchg
dec
test
lea
xor
icebp
mov
fwait
and
shll
repnz
add
popa
lods
cmpsb
mov
mov
repnz
bound
mov
dec
bound
cwtl
jp
xchg
push
cmp
push
outsb
mov
adc
add
jno
inc
std
lock
pop
shrl
sub
push
inc
add
mov
cld
xor
clc
ljmp
add
js
or
ret
pop
add
xchg
loop
or
repz
dec
bound
mov
bound
cmp
inc
push
hlt
in
add
scas
jbe
subl
aam
sbb
decl
nop
push
icebp
cmp
or
aas
add
ljmp
mov
aas
dec
pop
add
mov
ds
adc
shrl
mov
sub
sbb
add
jl
jns,pn
mov
inc
mov
daa
dec
pop
lods
sbb
pop
insl
cmp
mov
sbb
adc
aas
add
jg
mov
or
mov
lods
cmpb
sub
les
rolb
mov
std
push
pop
inc
sbb
mov
and
add
jb
or
and
ljmp
shrl
sbb
pop
dec
pop
ret
mov
aad
test
in
sbb
mov
das
hlt
xor
rclb
sbb
sbb
cmp
mov
rcrb
fwait
loopne
outsl
lock
cmp
aam
inc
pop
adc
jns
popa
aam
push
lods
dec
mov
sub
ss
faddl
inc
pop
std
pop
or
push
sbb
mov
sub
shlb
lea
cld
or
out
xchg
cmp
mov
mov
sbb
addr16
popf
in
mov
movsl
out
ja
push
lahf
push
xlat
add
xor
icebp
repnz
adc
das
cmp
negl
mov
pushl
add
dec
test
jns
cltd
cli
xor
pop
mov
stos
or
shll
add
jne
lds
cmp
pop
add
lods
aam
mov
xchg
das
adc
jg
and
enter
add
xor
add
cmpsl
fs
dec
roll
outsb
push
ds
bound
or
and
in
shll
add
add
sub
pop
adc
adc
fimuls
jge
add
xor
and
vprotw
lods
insb
dec
shrb
and
mulb
mov
mov
cmp
cwtl
inc
fldcw
fadds
pop
aam
xor
in
jl
dec
lret
mov
adc
add
in
mov
mov
pop
scas
mov
mov
jl
cmpsb
bnd
mov
push
sbb
mov
xor
add
je
aam
mov
mov
dec
pop
andb
daa
aam
cmpsl
cmppd
pushf
cwtl
mov
sahf
add
and
mov
sub
add
mov
enter
xchg
xor
mov
or
add
push
mov
add
dec
pop
push
mov
in
fnsave
gs
cmp
sbb
pop
aad
inc
mov
dec
and
add
dec
and
sbb
jb
add
add
out
sbb
mov
loop
push
pop
incb
add
pop
and
xchg
push
adc
or
add
and
call
add
xor
xchg
xor
aam
aam
fildl
ljmp
push
pop
push
fdivrs
add
enter
hlt
push
les
adc
add
xchg
and
out
fstps
fs
bound
mov
inc
pop
popf
sub
lahf
add
in
sbb
push
sub
mov
dec
pop
loopne
cmc
push
or
dec
in
or
mov
add
xor
sbb
sub
pusha
loopne
popf
sbb
shll
inc
es
mov
pop
jbe
daa
and
sub
roll
inc
mov
jo
in
outsb
adc
add
fsubrl
cwtl
or
adc
inc
pop
mov
icebp
incb
add
sahf
cmp
das
sub
sub
mov
outsl
or
stos
aas
stos
loopne
mov
mov
test
cmp
sub
lea
dec
outsl
js
xchg
add
ds
sub
pusha
sbb
mov
xor
jae
and
rclb
inc
add
sbb
cwtl
ret
stc
loopne
mov
add
cmp
insb
test
aad
sub
pushf
add
shrb
sar
or
inc
or
inc
ds
sub
jno
add
cmp
lock
and
loope
mov
shl
imul
cwtl
push
rcr
mov
fwait
js
mov
push
jns
in
add
scas
arpl
jl
xchg
out
xchg
scas
cmpsl
add
inc
mov
movsb
insb
add
imull
push
bound
pop
call
bound
sti
mov
mov
or
adc
sarb
mov
lea
sub
sbb
pop
adc
or
push
fnstcw
adc
xor
sbb
dec
stos
adc
xor
movsl
sub
inc
call
inc
fwait
dec
and
xor
out
xchg
sbb
sahf
test
and
or
insl
mov
adc
jecxz
das
inc
aaa
rolb
xchg
in
rorb
inc
andb
fsts
and
popa
cld
xchg
adc
mov
inc
pusha
dec
data16
dec
jl
mov
je
inc
flds
bound
clc
sbb
inc
addb
and
loopne
insb
add
sub
sbb
xor
int3
and
push
in
lods
and
hlt
cmp
add
cltd
lods
cmp
lock
dec
aas
xlat
int3
add
dec
test
leave
shll
inc
lods
cmc
pusha
cmpb
dec
sub
loopne
and
dec
and
xchg
xor
nop
sbb
add
xor
aam
pop
push
outsl
gs
xor
insb
das
mov
push
pop
lcall
pop
dec
nop
inc
test
push
mov
lahf
lods
rorb
jbe
mov
pop
mov
jb
adc
sub
xchg
addb
sbb
and
mov
clc
loopne
dec
aas
in
js
loope
dec
es
jnp
sub
adc
ljmp
add
xorb
je
daa
mov
cs
xchg
xor
push
inc
push
lret
int3
enter
push
jno
add
cmp
test
aas
jp
add
mov
stc
mov
ret
rolb
cmpsb
push
add
sbb
mov
sbb
push
int3
ret
lahf
dec
sub
cs
je
sbb
in
and
push
lods
mov
das
inc
cwtl
adc
dec
loopne
inc
cmp
jle
int
fwait
or
movsl
push
jbe
mov
movb
sbb
and
xchg
add
and
std
scas
mov
push
stos
xlat
mov
or
out
mov
loope
cmp
mov
aam
pushf
repz
cmp
into
mov
nop
sbb
std
movsb
cwtl
fsubrl
and
int3
imul
inc
or
cmp
popf
mov
inc
inc
inc
out
popa
or
dec
fs
call
sahf
push
sbb
bnd
loopne
add
xor
sbb
gs
or
aas
nop
pop
pusha
mov
sbb
add
insb
inc
jmp
loop
mov
xor
inc
or
std
fs
pusha
cmp
jmp
adc
mov
decb
mov
js
lock
inc
in
int
or
adc
sub
adc
pop
sub
mov
test
mov
testb
cwtl
push
mov
add
mov
fucomp
lods
pop
lret
add
mov
out
lds
adc
inc
loopne
or
push
pop
pusha
int3
mov
xor
mov
fistpl
rorb
cli
into
mov
sbb
leave
push
or
jae
ret
mov
pop
aam
inc
sbb
jge
cs
mov
mov
and
lahf
cltd
or
repnz
mov
sub
jno
sti
fisubs
mov
shlb
mov
cs
rol
add
push
ficoml
jno
jo
mov
pop
sbb
or
sub
sahf
mov
mov
pop
push
mov
inc
test
das
or
sub
xor
in
pop
add
add
pop
imul
mov
sub
mov
imul
leave
inc
mov
out
inc
cmp
test
or
mov
pop
add
stc
mov
add
adc
mov
movsb
inc
inc
je
cld
shrb
loopne
test
push
mov
push
xchg
jecxz
pop
scas
and
mov
int
sarb
lret
adc
sbb
sbb
pop
mov
pop
xchg
out
mov
sbb
and
xor
cmpb
insb
xchg
adc
dec
ss
test
sub
inc
add
push
call
mov
gs
hlt
mov
mov
mov
divl
inc
aaa
adc
pushf
jnp
clc
adc
loopne
ds
xchg
mov
push
iret
push
mov
mov
cmpsb
lock
fdiv
setne
adc
ds
loope
mov
xor
jb
jmp
mov
mov
or
repnz
jmp
pop
out
repnz
push
cmp
push
xchg
adc
inc
sub
or
movsl
add
mov
lods
int3
xchg
rcrb
adc
dec
shrl
outsl
pop
aam
dec
mov
push
dec
inc
clc
cmp
dec
repz
nop
dec
jge
sbb
cld
push
add
mov
dec
mov
dec
aam
mov
testb
mov
sbb
popa
push
loope
jp
movsb
popf
sahf
cmp
fprem
arpl
sbb
fs
dec
jnp
pop
dec
nop
xchg
jecxz
pop
push
pop
mov
daa
cld
and
jne
arpl
cmp
loope
cmp
test
out
cwtd
insb
dec
pop
out
ret
mov
in
jns
sbb
jnp
sbb
cmp
loopne
xor
mov
lret
rcr
out
push
mov
outsb
std
cmp
fisubrs
add
mov
repz
fadd
and
inc
in
mov
insb
lds
sub
xor
testb
pop
mov
aas
test
lock
and
incb
adc
leave
dec
inc
mov
push
shl
in
pusha
cmpsb
adc
cmp
les
or
jbe
xchg
cmp
pop
add
or
out
mov
and
pop
fstpt
xchg
adc
icebp
jbe
push
mov
dec
vpsrad
mov
pop
aas
rcrb
mov
loop
push
mov
mov
ss
mov
dec
xlat
mov
jmp
dec
inc
movl
add
outsb
popf
cmp
loopne
in
push
hlt
ficompl
lret
cwtl
enter
sbb
mov
andb
inc
shlb
out
dec
mov
fsubs
nop
fcom
ret
pushf
shlb
jno
add
cs
imul
push
stos
fdivs
mov
xchg
clc
xchg
arpl
movsl
jle
aaa
lcall
ss
xor
mov
dec
shlb
inc
inc
jecxz
sahf
popf
sub
adc
movsb
and
fisubrl
jbe
sbb
rcll
ss
mov
mov
jl
mov
jns
fcomps
mov
push
add
xchg
loope
jge
sahf
add
out
inc
mov
push
cmc
push
and
loop
xchg
sbb
outsb
mov
and
pop
adc
gs
ds
js
mov
add
test
cmp
or
lds
movsb
and
pop
icebp
popa
imul
sbb
loopne
or
rclb
fldenv
popf
and
test
int3
and
or
lahf
scas
test
xor
out
add
outsb
mov
dec
popf
dec
cmpsb
lret
test
push
test
mov
int3
sahf
dec
hlt
inc
mov
fs
xchg
and
jno
sbb
jnp
add
mov
mov
mov
xor
test
xchg
call
push
popf
fcmovu
fadds
outsl
jecxz
adc
jno
mov
out
sub
mov
add
mov
cmp
out
jns
sbb
daa
les
inc
call
or
or
cmp
adc
inc
in
jge
lods
mov
aam
in
mov
leave
sbb
sub
mov
sub
add
pushf
sub
sbb
cwtl
call
adc
jecxz
or
out
push
and
and
jnp
test
fsubl
test
mov
rcrb
add
out
mov
aam
mov
add
mov
adc
imul
gs
dec
inc
inc
pop
popf
mov
lods
mov
and
add
lock
and
lock
test
add
repz
out
mov
inc
add
dec
inc
stc
push
enter
adc
addb
sbb
inc
scas
sub
pusha
lea
add
dec
dec
nop
and
out
mov
add
js
pop
mov
add
out
sbb
xchg
or
nop
into
filds
call
in
jl
sub
push
movsl
ret
add
pop
mov
sbb
iret
lods
mov
jbe
or
push
lds
jle
aas
dec
pop
xchg
cwtl
test
cli
movb
clc
clc
mov
lcall
shlb
xor
ja
mov
das
push
pushfw
adc
push
jns
xor
adc
repz
dec
pop
pop
sbb
xor
add
inc
sub
hlt
aam
int3
fildll
dec
mov
fcoml
sub
in
and
push
push
scas
inc
fdiv
xchg
add
jno
mov
mov
pusha
stos
push
push
dec
inc
test
into
jnp
jo
stos
add
or
mov
lods
hlt
dec
dec
nop
les
adcb
in
sbb
aad
pop
dec
add
jmp
mov
mov
shlb
loopne
cltd
push
les
push
clc
sbb
adc
fucompp
popl
rcrb
mov
daa
mov
sub
cld
mov
daa
mov
and
and
jle
xor
jae
push
popf
push
cmp
lods
mov
outsl
lock
push
add
ds
and
pop
pusha
pop
mov
decb
fisubrl
negb
or
rorl
add
les
add
push
aam
push
fmuls
mov
jns
sbb
cwtl
and
adc
jg
fdiv
sub
adc
jo
jo
lret
js
cli
mov
mov
sub
inc
and
ljmp
je
test
outsl
lret
adc
lahf
clc
pop
roll
neg
test
and
mov
xor
enter
out
stc
add
mov
mov
push
and
or
inc
dec
jns
mov
pop
pop
punpcklwd
adc
fidivl
xchg
mov
mov
xor
out
and
decl
repnz
xor
add
aaa
fs
arpl
jno
out
mov
pop
mov
scas
dec
xchg
push
cmp
enter
loopne
jmp
inc
js
inc
fucom
aad
sub
and
push
add
pop
jle
sub
xchg
sbb
pusha
and
in
cwtl
jb
xor
das
adc
push
ds
mov
push
imull
sbb
cmpsb
inc
stos
push
mov
cmp
cmp
cmp
and
sbb
xchg
inc
lldt
mov
cltd
mov
add
stos
out
sbb
jl
es
and
mov
adc
push
es
add
lcall
sti
dec
scas
sbb
xchg
cmp
pop
movsl
cld
xchg
push
xchg
js
jne
testl
daa
push
aad
mov
dec
sub
popf
push
ficompl
xor
cwtl
add
or
add
into
call
adc
sbb
inc
push
popa
mov
mov
cmpsb
dec
jno
or
or
or
in
xlat
inc
inc
pop
and
stos
push
xchg
adcb
clc
and
je
lods
inc
sub
cmpsb
lods
mov
jb
mov
aad
pop
adc
jnp
and
mov
sub
push
in
ret
in
cmp
movsl
pop
cmp
and
loopne
pop
push
decb
scas
rclb
aad
xchg
fistpll
aam
mov
mov
mov
daa
data16
sbb
dec
icebp
loope
in
add
inc
rorb
mov
aam
add
mov
js
adc
cltd
jns
push
subb
xchg
pop
mov
inc
xor
jmp
je
mov
insl
add
jl
je
add
sbb
add
mov
jo
shlb
in
push
push
cmp
lock
add
add
mov
mov
enter
adc
sbb
sbb
out
or
pop
and
aam
push
jno
mov
shlb
stc
ss
je
cld
ret
lcall
inc
in
xor
es
mov
pop
popa
aas
mov
cs
nop
jo
testl
adc
sub
mov
addl
add
mov
orl
cmpsl
xor
ss
mov
adc
cwtl
roll
mov
push
stos
push
push
mov
dec
dec
enter
test
sbb
fs
in
jl
or
leave
insb
sub
lahf
add
movsb
jg
and
sbb
dec
popf
cmpsl
xor
xor
and
or
je
xchg
pop
xchg
lods
fmull
add
pop
or
xchg
loope
sahf
cmpsl
xor
incb
int
xor
addl
xor
xchg
pop
fstpt
ficoml
lret
loop
add
popf
iret
cmp
add
addr16
dec
cmp
lods
xchg
mov
cmp
rcl
push
repnz
adc
pop
blcfill
sarl
cli
adc
pop
sub
movsl
mov
aaa
mul
sub
orb
aam
mov
xchg
xor
xchg
mov
add
cs
ds
dec
xchg
or
and
adc
out
mov
sahf
stos
inc
xor
or
movsl
or
push
adc
cld
sub
jo
popl
sub
mov
sbb
ret
cmp
addr16
sbb
add
in
add
ljmp
fsubrs
fcoml
and
push
rolb
xchg
add
negb
popa
mov
sub
and
and
sbb
leave
insl
outsl
or
add
fstps
sbb
loope
push
adc
sbb
rcr
mov
lahf
out
ljmp
lock
outsl
cwtl
popa
sub
aam
adc
mov
ja
decl
repz
xchg
inc
add
enter
lahf
movsl
and
xchg
testl
iret
mov
adc
lds
or
and
iret
lock
sub
xlat
or
mov
ret
push
push
inc
sbb
pushf
cs
lea
add
and
mov
imul
loopne
sbb
add
je
int3
mov
clc
inc
add
push
stc
pop
das
jecxz
dec
rolb
adc
sbb
and
ds
test
xchg
mov
pop
daa
add
jg
dec
lods
adc
nop
mov
push
ficoms
fmul
mov
orl
mov
cld
in
ret
pop
mov
adcb
mov
or
sarl
mov
adc
pop
sub
sbb
push
jnp
sbb
pop
hlt
out
jns
fwait
cli
push
and
out
or
cbtw
les
lret
sub
fildl
insb
add
jle
enter
cwtl
pop
xchg
mov
mov
or
sub
incb
rcrb
fildl
cltd
inc
negl
lds
fwait
or
push
stos
imul
hlt
jno
pop
add
sbb
inc
comiss
daa
call
pusha
or
sub
mov
mov
add
jecxz
adc
fs
inc
pop
mov
sbb
inc
push
dec
fs
ja
xor
aas
mov
add
jge
pop
dec
insb
ret
es
mov
cld
mov
mov
fbld
or
repz
lcall
cmp
push
adc
loopne
cmpsl
adc
pop
and
jne
mov
sbbb
or
push
or
adcb
add
rclb
jno
mov
xchg
pop
pop
aas
mov
shrb
add
cltd
mov
jo
xchg
aaa
cmp
mov
sub
dec
testl
in
nop
sbb
adc
cmp
sbb
and
or
cmp
add
insl
sbb
ret
ret
xchg
fdivs
fcomps
xchg
sub
mov
das
and
dec
add
popf
and
hlt
jl
inc
push
pop
sub
adc
push
data16
add
cmp
add
aas
lea
mov
xor
sbb
imul
xor
nop
pusha
test
mov
mov
pusha
and
aad
mov
lock
sahf
cwtl
pop
inc
and
push
mov
dec
insl
lahf
ds
insb
sbb
xchg
mov
add
gs
mov
lods
lods
and
xor
and
paddw
and
mov
fwait
jge
xor
cwtl
mov
adc
or
aas
inc
sarb
add
iret
js
sbb
addr16
xchg
pop
mov
cmpl
mov
sahf
add
into
movsb
fwait
testb
shl
pop
in
lcall
lea
or
pop
shrb
pop
push
inc
add
ss
imul
add
mov
outsb
pop
mov
hlt
push
repz
sarb
je
push
movsl
mov
xor
or
jns
rorl
dec
das
mulb
mov
sar
cmc
add
xchg
mov
enter
sub
jmp
mov
xchg
in
xchg
lea
shrl
call
testl
jne
rclb
inc
lret
pmulhuw
add
and
lock
shl
mov
pop
dec
cmp
add
call
ret
cwtl
dec
loopne
mov
das
ret
inc
cmc
or
fsubrl
sbb
mov
add
test
int3
add
pop
outsl
mov
push
iret
and
push
xor
mov
pop
sub
inc
mov
add
cmp
ja
or
inc
fisubl
movb
jg
mov
dec
xchg
pusha
push
jecxz
inc
jae
add
imul
notl
or
jns
or
lcall
pushf
jg
inc
cltd
leave
lds
mov
sbb
and
pop
cmpsb
adc
push
dec
pushf
mov
mov
pop
add
mov
ja
dec
cli
add
outsl
add
pop
addr16
xor
lods
pop
or
add
and
push
add
aaa
pop
and
sub
inc
sub
xor
dec
fcom
stc
sahf
jmp
cmp
mov
xchg
mov
int
and
push
call
out
mov
fcmovnb
cmc
adc
lahf
mov
xchg
ret
pop
inc
icebp
fs
add
xor
out
sub
push
div
shlb
sar
lock
pusha
mov
lret
nop
sbb
mov
cmp
lock
out
je
in
adc
repnz
loop
pusha
cltd
cld
clc
into
inc
aam
cmp
add
xchg
push
adc
sbb
and
aaa
pop
adc
xor
jne
add
mov
loopne
inc
repnz
orb
les
mov
in
sbb
cmc
and
mov
and
mov
sahf
xchg
add
inc
sbb
loope
lret
flds
dec
je
or
lret
sub
arpl
cmp
andb
add
es
adc
jo
or
mov
or
sbb
mov
push
push
and
stos
insb
xor
jnp
lds
sbb
add
xchg
punpckhdq
add
and
sub
inc
inc
loop
mov
push
test
fistpl
ds
bound
pop
mov
test
and
movd
mov
mov
dec
and
addl
rclb
rcll
cli
and
add
test
add
mulb
shlb
shl
rcrb
push
enter
and
mov
sbb
mov
pop
scas
mov
cmp
mov
sub
test
and
add
mov
inc
xchg
sub
xchg
add
cmp
and
movl
jnp
push
sbb
add
ret
inc
jle
or
daa
test
dec
mov
jp
mov
cmpsl
je
pusha
adc
data16
call
mov
std
mov
adc
lods
mov
clc
add
cmp
push
addr16
xchg
lock
jg
cmp
test
cmp
jl
ja
rclb
push
and
inc
je
add
jae
cld
ja
mov
mov
test
jo
inc
jbe,pt
push
add
mov
push
add
jp
mov
mov
in
sub
jp
aam
mov
cs
imul
scas
jp
mov
adc
insl
pop
jp
mov
mov
adc
call
push
fildl
mov
sbb
je
or
dec
int3
lahf
adc
nop
mov
jmp
and
cmpsl
pop
mov
xor
jns
inc
and
xor
divl
add
fstpl
add
es
in
fidivrs
add
push
test
stos
ficoml
mov
lock
dec
imul
cs
pop
mov
xchg
jmp
lods
push
add
mov
push
sbb
jg
push
dec
das
ret
add
orb
pop
in
cmove
jmp
rol
dec
cmp
xchg
in
or
and
xor
clc
ss
and
int
fildl
add
fisttpll
inc
pop
shll
or
mov
ret
scas
shlb
out
test
cwtl
add
mov
jno
push
adc
pop
scas
cwtl
mov
add
pop
test
mov
push
addb
mov
cmp
cwtl
rcll
loope
pop
or
scas
shll
andl
mov
or
dec
xor
sub
sub
mov
dec
mov
add
outsb
aam
inc
add
lods
jmp
dec
lock
fcoms
add
mov
mov
adc
add
andb
add
repnz
mov
andl
pop
dec
lcall
outsl
aam
sbb
or
add
mull
pusha
inc
in
mov
pop
orb
add
adc
mov
or
pop
dec
dec
add
out
shlb
out
add
mov
xlat
adc
push
cmp
xor
xlat
shlb
cs
rcl
push
add
sbb
xchg
ret
ss
fmuls
pop
and
jo
push
add
and
dec
cmp
daa
add
add
sbb
mov
imul
xor
sub
test
mov
or
jecxz
lds
sarl
or
or
fistpl
push
adc
sbb
cs
or
push
mov
jp
mov
imul
out
push
rorl
movnti
cmpsl
add
add
lret
cli
or
push
sti
stos
inc
imul
add
mov
sahf
fsubrl
mov
pop
or
add
adc
sub
aaa
mov
pop
adc
or
stc
sub
pusha
imul
nop
cmpb
test
inc
sbb
push
mov
and
das
push
push
inc
xchg
sub
jo
sahf
add
cmc
pop
movsb
mov
mov
dec
xchg
das
push
and
std
sbb
push
mov
orb
mov
push
jl
sbb
je
jp
les
add
xchg
mov
jl
mov
add
and
push
loop
cmp
cli
lea
mov
add
leave
cwtl
xor
xchg
lods
gs
add
pop
rclb
mov
mov
push
outsb
iret
mull
inc
xor
cwtl
and
add
dec
dec
sti
or
andb
add
sub
nop
pop
call
dec
cltd
pop
ja
in
icebp
jge
mov
nop
movsl
dec
cld
jmp
cmc
sbb
outsb
dec
or
mov
and
jge
pushf
adc
rorl
pusha
out
mov
dec
add
add
mov
cmp
cmp
test
mov
and
push
leave
cmp
movsl
and
dec
lods
dec
pop
pop
int
and
test
jmp
loopne
or
cli
or
sub
adc
inc
cmp
and
add
push
loope
jnp
mov
subb
std
cmp
xchg
scas
loopne
ds
push
pusha
fwait
and
movsb
stos
and
pop
adc
push
cmp
rolb
fiaddl
mov
loope
rorb
fsts
lret
adc
cwtl
xchg
fs
arpl
xacquire
in
add
and
adc
or
test
shr
orb
adc
addb
lahf
ljmp
cmpsl
xor
cmp
add
es
mov
iret
cwtl
mov
adc
sti
fwait
mov
add
jae
xchg
push
add
popf
cld
mov
repnz
and
add
test
rcrl
sub
sbb
adc
int3
jb
push
mov
add
sbb
mov
std
xor
mov
jl
dec
push
int3
jns
sbb
fisubrl
fs
sbb
dec
ret
shlb
in
addr16
setg
in
cmp
mov
adc
cmp
subb
sub
jns
add
mov
or
sti
jecxz
or
jno
cld
aaa
into
dec
mov
and
lcall
addr16
or
mov
lcall
sbb
xorl
pushf
ret
into
fs
push
fcompp
jb
inc
and
mov
add
int3
daa
cmp
add
shl
cmp
and
cmp
sbb
addb
and
mov
add
add
mov
xchg
jno
mov
pop
cmp
and
call
add
push
or
mov
imul
jo
daa
push
push
xchg
jle
stc
push
dec
sbbb
shrl
call
adc
sti
repz
mov
mov
pop
leave
add
or
xor
mov
or
stos
ror
inc
inc
idivl
ficompl
inc
hlt
jmp
adc
mov
xor
inc
pop
add
out
rcl
inc
adc
mov
js
insb
sbb
stos
push
add
add
lgs
xorb
aam
and
ds
addb
sub
popa
or
sub
enter
pop
incl
rcl
lock
cmp
push
or
mov
jo
mov
mov
jmp
sti
les
push
pop
dec
mov
push
out
add
xchg
mov
mov
and
std
test
jg
add
and
mov
mov
fadds
pop
sarb
sub
cmc
add
sti
aam
add
ljmp
sub
nop
or
popf
and
push
and
jp
mov
push
lock
shrl
dec
nop
jns
mov
mov
pushf
mov
jge
push
leave
mov
shlb
movsl
xchg
or
jecxz
ffree
aam
outsb
add
pop
xchg
loopne
inc
sub
dec
in
push
mov
popa
cmp
aas
dec
adc
add
sbb
add
sbb
xor
jge
add
push
sbb
inc
aas
jp
sbb
lock
xchg
inc
les
jns
sbb
add
ret
pop
mov
rorb
add
push
andb
mov
xor
xor
push
rolb
mov
sbb
adc
push
mov
pop
sub
into
mov
inc
ret
repz
call
out
add
pushf
mov
popa
add
sub
in
ret
xorb
fucom
pop
mov
xor
sbb
xchg
inc
or
sbb
and
pop
mov
push
add
and
sahf
xchg
xchg
adc
loop
add
cmp
mov
or
mov
imul
jns
sbb
jne
jecxz
xchg
js
jnp
pusha
out
cvtps2pd
xor
inc
or
rcrb
xchg
pop
or
test
xchg
dec
enter
push
xor
cmp
popf
sbb
je
clc
pop
dec
ret
into
rorb
push
jo
frstor
enter
lods
sbb
xchg
divb
or
les
sbb
cmp
adc
cwtl
ret
xchg
sbb
push
xchg
or
sub
mov
xor
fsubrs
pop
sbb
cmpsl
inc
les
popf
insl
sbb
mov
mov
mov
pushf
mov
outsb
roll
sub
jl
add
in
dec
in
insl
mov
fnstsw
add
mov
and
sub
pop
dec
arpl
xchg
sbb
jge
xchg
mov
mov
mov
or
mov
push
mov
daa
adc
mov
add
and
add
pushfw
mov
pushf
aas
addl
hlt
sub
and
sbb
push
cmp
or
xchg
pcmpeqb
pop
adc
lcall
add
dec
sarb
dec
add
and
xorb
insb
out
pop
pop
adc
xor
pop
dec
dec
dec
sbb
sti
insb
xchg
aas
xor
sbb
pop
and
movsl
movsb
mov
jns
aaa
add
dec
outsl
add
add
or
adc
mov
clc
and
add
movsb
repnz
adcb
cmp
and
inc
in
adc
into
xchg
or
mov
dec
and
fdivrs
gs
add
lock
inc
outsl
inc
into
dec
insb
jae
add
cmpl
or
cmp
movsb
adc
orb
sub
roll
fwait
add
cmp
out
mov
mov
add
daa
jecxz
mov
xor
add
push
sbb
xchg
jl
adc
push
loopne
js
xor
mov
test
dec
and
mov
pop
adc
adc
int3
dec
dec
add
jo
and
cltd
xchg
add
mov
fsubrs
imul
inc
in
fisttps
xchg
mov
lock
push
adc
and
mov
add
nop
mov
filds
and
mov
inc
adc
mov
mov
pop
mov
lahf
push
sub
adc
loope
xchg
adc
mov
daa
jno
mov
add
adc
call
call
add
adc
jecxz
int
stc
adc
mov
add
in
cwtl
scas
mov
inc
movsl
cli
loopne
jnp
add
dec
fimuls
cmp
inc
jge
pop
mov
faddl
ds
ja
jmp
add
ljmp
psubw
test
subl
sbb
jns
add
cmp
test
nop
loopne
lahf
insl
js
mov
stos
cld
xchg
or
xchg
pop
leave
jne
and
fsubs
mov
in
and
add
scas
dec
out
mov
ds
daa
mov
sbbb
push
push
nop
roll
jno
mov
jmp
clc
xchg
adc
outsl
push
nop
sbb
and
out
add
mov
call
xor
test
mov
hlt
add
shrl
dec
pop
mov
mov
and
fnstsw
jmp
jo
mov
jg
shlb
sub
call
sub
inc
add
out
ficompl
xor
lret
add
and
mov
add
mov
push
enter
setno
cmpsb
xrelease
xor
sbb
fistl
aaa
js
inc
xchg
cmp
add
push
dec
add
mov
jp
mulb
cltd
push
push
lea
hlt
aas
pop
cmp
arpl
int3
or
hlt
xchg
push
sarl
xor
add
es
roll
data16
pop
pop
add
inc
mov
cltd
or
aas
int3
movsb
roll
add
jmp
add
js
jl
fimull
fs
or
add
sbb
inc
imul
data16
icebp
fwait
ljmp
loope
out
andb
loopne
mov
mov
jb
and
mov
loop
imul
push
jl
imul
movsb
add
add
xchg
loope
scas
mov
sbb
popa
sub
jl
push
hlt
testl
addl
orl
shl
or
mov
mov
adc
test
test
das
add
mov
jge
daa
fiadds
cmp
out
dec
mov
in
mov
movl
ret
mov
out
shl
popf
adc
shll
cwtl
or
mov
push
mov
or
sahf
lea
fstps
add
aas
jno
inc
jnp
sbb
jecxz
popa
cmp
out
or
mov
or
or
mov
out
mov
mov
js
xchg
xor
fdivrs
or
icebp
jp
fidivs
add
lret
in
xor
subb
jo
sbb
or
inc
and
mov
adc
and
jmp
adc
and
and
sub
hlt
loopne
xor
nop
dec
mov
sbb
movsb
xlat
idivb
push
and
ss
push
mov
push
out
outsl
out
jo
insb
shlb
sub
repnz
out
into
adc
sbb
fiaddl
sub
js
cltd
rcrb
mov
stos
inc
xor
sub
mov
rcrb
fmull
popa
leave
insb
sbb
sub
mov
or
shlb
pop
adc
jnp
addb
out
or
and
mulb
bound
push
repz
jne
and
ljmp
mov
and
cmp
inc
adc
fwait
add
sub
mov
xchg
pop
insb
jns
xchg
mov
mov
or
inc
hlt
or
icebp
add
mov
sub
pop
out
push
and
insb
and
mov
test
push
outsl
stos
or
cli
push
gs
pop
xchg
mov
adc
pop
xor
hlt
sbb
pop
sbb
xor
add
or
cwtl
or
fsubs
cmp
xor
push
xor
nop
add
jecxz
std
outsl
push
sarb
add
adc
mov
ja
sbb
jo
xchg
mov
out
das
fisubrs
adc
push
push
lods
pop
adc
mov
add
cltd
dec
inc
sbbb
mov
push
mov
or
add
cmp
pop
bound
lcall
adc
push
inc
dec
jo
shrb
negb
loopne
popa
movsb
add
inc
fnstcw
cmp
movsb
fcoml
mov
in
sub
popf
cli
dec
add
push
or
mov
mov
lods
enter
mov
and
push
xorb
mov
or
outsl
adc
test
cmp
xchg
rorl
cmp
xchg
xor
pop
add
dec
daa
mov
int3
or
and
aaa
dec
mov
adc
or
xchg
push
decb
imul
in
ss
std
adc
add
ja
mov
and
mov
push
call
test
ljmp
int
je
lock
mov
fisttps
mov
rcrl
mov
adc
mov
test
and
jo
test
cmpsl
shr
xor
outsl
dec
cmp
stos
mov
pop
pop
xlat
popa
cmp
jbe
add
mov
adc
mov
jb
dec
cmp
ds
xchg
test
inc
cmp
push
aad
hlt
aaa
dec
cmp
sarb
and
jno
mov
data16
jl
push
add
add
inc
mov
mov
push
dec
imul
mov
lods
or
dec
lods
and
add
shl
pop
sbb
and
bound
ja
mov
loop
js
movsb
dec
mov
adc
mov
inc
loopne
inc
ds
add
fisubrs
aaa
cmp
inc
rcl
daa
ret
push
insb
and
and
aas
or
mov
adc
out
add
xchg
sbb
mov
out
mov
or
mov
xor
pop
xchg
std
ds
xchg
adcl
fisubrs
push
inc
and
icebp
cmp
jbe
in
xchg
pop
pop
mov
push
and
pop
cmp
or
ror
add
hlt
adc
idivb
cmp
jo
pushaw
sbb
adc
mov
add
mov
jle
lds
add
add
xchg
rol
dec
xchg
xor
sub
xor
xchg
dec
inc
and
cs
mov
sub
movsl
cmp
stos
jle
arpl
add
add
sbb
fisubrs
gs
fdivl
jo
stc
mov
ret
push
loop
jp
fdivs
sub
sub
mov
int3
jno
xchg
mov
sub
cmp
aam
xor
rcrb
mov
ds
xor
sbb
dec
push
sub
ljmp
negb
arpl
ds
push
fsubrp
lret
add
push
into
pop
out
jo
cs
mov
and
ficomps
add
inc
add
add
leave
adc
inc
mov
add
sub
mov
push
movsl
push
inc
arpl
aam
loop
add
xchg
cli
add
loop
sahf
nop
adc
adc
add
pop
aam
and
rcrl
out
testb
rorb
cli
xor
loop
mov
add
jns
movsl
les
popa
call
inc
adc
mov
popf
call
enter
ds
es
jbe
sub
mov
mov
xchg
sti
add
sub
ffree
cmp
and
push
cmp
cmp
fcoms
push
mov
test
call
adc
xor
insb
or
add
movsb
test
scas
xor
sbb
cli
and
push
mov
lods
xchg
pop
popf
lea
add
cmpsb
fwait
cwtl
xchg
add
pop
jmp
rcr
jns
add
fsubs
xchg
pop
fnstcw
lds
pusha
mov
repnz
int
inc
jecxz
divb
xorb
jo
mov
aaa
add
ret
jno
or
cmp
loope
insb
jo
xchg
xor
inc
test
dec
dec
movsl
push
les
or
add
sub
rcr
adc
push
loopne
mov
hlt
cmp
and
test
int
hlt
push
cld
aas
sbb
filds
xchg
jbe
enter
sub
leave
out
imul
aam
and
testb
hlt
cmp
add
popf
out
cmp
mov
inc
or
xor
dec
lock
out
pusha
bound
stos
push
or
clc
mov
mov
push
and
nop
jo
add
ficompl
scas
loopne
jo
push
imul
add
je
hlt
out
sub
mov
enter
test
test
rorb
adc
mov
jle
push
add
inc
push
insl
and
es
shlb
xchg
push
xchg
adc
xchg
inc
packsswb
mov
jb
mov
dec
xchg
pop
cwtl
jmp
dec
lea
push
inc
jl
imul
or
ss
mov
cwtl
or
add
push
shl
mov
cmp
pop
xor
rcrl
cmp
jns
sub
in
xor
lods
xchg
sbb
out
adc
xchg
mov
addb
dec
or
adc
scas
dec
sbb
xchg
dec
dec
mov
dec
shlb
andb
cmpsb
add
dec
adc
add
xchg
xchg
inc
mov
mov
add
cmpsl
cltd
movsb
mov
xor
mov
movsb
or
cmp
add
imul
push
xchg
or
out
in
fidivs
cmp
repz
xor
add
int
add
push
fsubrs
add
xor
sub
adc
jg
and
mov
add
jmp
cmp
pusha
pop
pop
xor
fsubl
cwtl
jmp
adc
and
popf
push
mov
adcb
ret
jge
push
cltd
mov
and
scas
add
push
mov
push
adc
scas
jne
add
mov
aad
out
push
test
xchg
fwait
cld
rorb
lds
jo
xchg
and
sbb
ljmp
pusha
xor
mov
cmp
pop
xor
hlt
xor
adcb
loope
and
in
pusha
or
jno
out
dec
xchg
pop
push
add
or
bound
pop
sbb
inc
repz
icebp
das
mov
jns
adc
test
push
push
mov
shlb
xor
call
dec
adc
test
bound
add
mov
mov
pusha
faddl
adc
inc
and
lock
adc
pop
add
hlt
call
pop
cwtl
mov
in
in
adc
orb
mov
pop
add
push
lock
ret
rcrb
add
lret
xor
fldt
add
dec
sub
adc
push
push
xchg
movsb
aaa
mov
lock
sti
nop
xchg
loopne
mov
mov
cli
dec
sbb
mov
xor
mov
enter
mov
adc
or
jl
call
add
sub
clc
call
repz
nop
or
cmp
cmp
arpl
icebp
sub
and
test
pop
mov
add
ret
mov
leave
push
insb
xchg
lods
pop
jnp,pn
sub
inc
jle
or
loopne
addb
lret
inc
loopne
jne
mov
dec
dec
cmp
bound
pusha
pop
stc
andl
xlat
dec
lret
jl
push
cmc
add
inc
rcll
mov
repnz
xor
cmp
lock
es
clc
or
mov
sub
aas
inc
add
cwtl
xor
lret
add
aad
fisttpll
pusha
in
adc
pop
mov
lea
inc
sbb
or
loop
xor
add
and
push
stos
fwait
xor
shrd
test
jo
out
outsl
mov
inc
adc
ret
push
add
cmpsl
and
xor
dec
adc
mov
jo
dec
push
fbstp
mov
inc
adc
mov
sbb
sahf
subl
add
movsb
mov
test
jne
jns
push
fsubrl
mov
mov
movsb
ret
pop
lock
out
cwtl
sbb
xchg
cmpb
mov
lahf
cwtl
sub
aad
nop
pushf
nop
add
repnz
add
push
xor
std
das
aam
add
push
and
imul
enter
sahf
and
sub
push
repnz
cmpsl
jl
sbb
stos
out
mov
adc
rcrb
stc
jge
adc
dec
push
testb
cmp
popf
sbb
sub
mov
in
push
and
ja
pop
movsb
add
or
cwtl
das
mov
xchg
cltd
pusha
rcrl
into
add
into
cmp
inc
lods
add
pop
xchg
xor
and
push
mov
insl
cmp
mov
xchg
push
rcr
fbld
mov
dec
call
mov
rol
subb
arpl
idivb
fdivs
mov
and
or
fists
mov
cmpsb
inc
shrb
dec
aas
dec
dec
mov
cwtl
mov
inc
xchg
jno
jmp
adc
outsb
inc
add
push
sbb
rcr
add
xchg
insb
or
xchg
sub
arpl
add
pop
pop
xor
adc
into
idivb
adc
faddp
add
das
add
mov
xor
daa
sub
mov
and
mov
loop
les
xchg
lods
pop
jo
and
xchg
adc
mov
dec
stc
xchg
add
mov
pop
adc
cmpsb
mov
adc
in
cli
imul
xchg
push
push
sub
mov
pop
test
decl
js
dec
jnp
clc
cmp
add
mov
imul
imul
add
add
pop
jno
push
adc
test
clc
pop
jnp
mov
push
outsl
nop
and
pop
add
push
mov
sub
mov
popl
push
push
adc
sub
icebp
dec
rcrb
mov
stos
cmc
test
add
pop
mov
add
cmp
pop
sub
push
mov
lahf
mov
cmp
jg
push
hlt
rcr
push
and
das
mov
add
es
inc
xor
pop
inc
cmp
mov
in
pop
mov
add
dec
inc
test
sarl
pop
andl
pop
adc
pop
mov
sar
dec
inc
and
iret
and
stos
jae
add
xchg
adc
add
sbb
int3
fsubl
addr16
push
pop
push
and
imul
nop
movd
ljmp
cmp
add
out
pop
push
push
mov
daa
mov
mov
inc
inc
andb
cmpb
pusha
in
mov
xchg
inc
adc
mov
mov
shlb
add
cmp
adc
cmpsl
pop
and
lret
jecxz
dec
pushf
or
mov
imul
inc
jg
cltd
rcl
imul
hlt
or
adc
pop
fsubs
in
xor
xor
and
xor
imul
add
cwtl
loope
fnsave
fs
out
jge
js
cli
lret
je
adc
sbb
out
add
loop
push
scas
clc
enter
cltd
xor
push
push
mov
xor
xor
jno
and
push
jl
lret
nop
rcr
inc
pop
ficomps
jo
lcall
mov
mov
lock
mov
xlat
push
and
int3
dec
mov
daa
jmp
add
add
and
cmpsb
fs
fwait
add
push
sbb
in
push
insl
inc
shlb
xor
push
dec
dec
sbb
dec
iret
div
dec
in
sub
push
scas
pusha
inc
push
js
cmp
adc
rorl
xor
scas
mov
push
xor
aaa
xor
ja
int3
lret
dec
add
mov
pop
xor
jl
fdivrp
push
add
mov
sub
sbb
mov
cmp
xchg
push
push
popa
add
hlt
iret
aam
imul
mov
add
add
pushf
dec
or
shlb
sbb
inc
sub
push
js
rorb
addr16
cmp
aas
fistps
idivb
or
divb
inc
jno
add
push
pop
inc
popa
add
xor
mov
lock
addr16
xchg
aam
add
call
cmp
sbb
add
mov
mov
add
push
add
cmpsl
pop
pop
out
dec
pop
lea
out
cwtl
popf
nop
cmp
mov
pop
add
stos
sbb
jl
sarb
daa
out
loop
jl
pop
mov
mov
or
in
pmulhw
fcomp
xchg
rcrl
lea
loope
imul
mov
add
addb
xchg
shl
mov
jo
loopne
adc
fisubl
stos
pusha
ljmp
cmp
xor
icebp
push
or
cli
mov
les
adc
subl
les
imul
repnz
xor
and
xchg
add
shr
sbb
loope
xlat
mov
jl
sub
enter
lcall
or
ljmp
fwait
mov
mov
mov
mov
data16
mov
daa
add
dec
mov
insb
add
cmpsl
dec
xor
sbb
adc
outsl
in
lds
pusha
adc
pop
and
hlt
pushf
pop
inc
arpl
xchg
or
pop
jo
lock
cmp
sbb
loop
ror
mov
push
fiadds
fs
jecxz
cli
jne
or
in
add
pop
push
jo
dec
xchg
inc
add
push
dec
mov
in
lar
cmpsb
fisubrs
fstpl
push
es
push
movsb
xchg
sub
add
and
movsb
outsb
xor
push
int
adc
push
sbbl
pusha
mov
jp
in
aam
dec
fwait
es
pusha
in
mov
push
mov
mov
jmp
xchg
add
inc
xchg
add
inc
and
test
pushf
mov
sub
lds
or
lods
gs
js
add
lods
ret
mov
ficoms
loop
or
push
pop
std
sbb
test
adcb
in
mov
xor
mov
add
inc
int3
xor
add
orb
push
call
inc
cwtl
mov
int3
popl
negb
in
sbb
aam
das
xor
scas
popa
int3
test
add
jbe
mov
mov
add
cmpsl
imul
cwtl
push
outsl
pusha
sub
call
add
test
or
test
fs
add
mov
push
add
shlb
pushf
add
adc
add
and
adc
pop
and
xchg
sbb
sahf
dec
cmpsb
push
and
add
add
cli
test
cmpsl
ja
add
mov
loopne
outsb
test
lahf
movsb
sarb
rcrb
testb
outsb
or
pusha
adc
adc
loopne
iret
push
loope
push
fcoms
shll
int
cmp
sahf
call
fimull
push
or
adc
lret
and
dec
data16
enter
and
dec
pop
lods
sub
fisubrl
hlt
test
fbld
fstl
mov
push
pop
sbb
push
adc
mov
push
jmp
xor
repnz
mov
sahf
add
pop
addr16
out
daa
jno
add
inc
add
xchg
pop
das
not
out
xchg
cmp
loopne
push
push
rolb
push
cmpsl
out
xor
and
dec
push
add
pop
xlat
nop
std
lcall
jae
shll
xor
addr16
mov
out
add
mov
pusha
ss
jmp
sbb
ret
and
cmp
shlb
mov
ror
and
nop
fs
jle
fs
jne
js
inc
mov
jnp
sub
shll
enter
in
inc
test
inc
shll
ljmp
inc
gs
sbb
cli
mov
mov
xor
mull
dec
dec
mov
test
test
call
bound
mov
push
loopew
inc
adc
arpl
das
inc
mov
je
xchg
fwait
lock
int3
pop
lods
add
add
push
jge
fnsave
mov
xchg
mov
cmp
repnz
and
mov
popf
mov
loopne
sbb
aad
lods
daa
mov
dec
call
push
jle
add
popa
xor
add
lods
and
jb
mov
std
add
mov
mov
and
adc
cmp
and
es
or
scas
inc
adc
xchg
dec
insl
aam
and
or
adc
or
cmpsl
lock
mov
cld
stos
sbb
xor
adc
movsl
add
cwtl
cmpsb
ficoms
jle
cwtl
add
or
outsb
enter
out
push
xchg
pop
jle
xchg
enter
adc
fidivrs
add
pop
cmp
lahf
arpl
push
faddl
enter
mov
mov
in
adc
push
leave
mov
fcmovbe
shrb
add
cmp
xor
shlb
push
int
or
addl
ficoms
mov
mov
movb
push
jecxz
jns
or
out
xchg
inc
subb
mov
sbb
stos
xor
out
inc
push
jbe
xchg
sub
add
call
push
cmp
fdivs
ficompl
pop
enter
xchg
sub
sub
push
jns
xchg
popf
jno
js
movsb
or
cli
mov
and
fldlg2
xchg
insb
push
pop
fstpt
and
lcall
hlt
orb
and
add
sub
mov
ss
pop
fcmovnu
mov
sub
inc
push
ret
test
rorb
out
mov
pop
femms
or
add
adc
popa
sbb
ret
jle
pop
xchg
shr
or
mov
xor
loop
popa
xor
loopne
xor
add
pop
ret
in
push
pop
and
addl
ret
pop
add
fcomps
adc
rcl
loope
push
ret
les
mov
push
je
and
mov
mov
inc
add
or
enter
xchg
and
inc
push
ret
add
mov
cs
push
push
int3
jg
add
xchg
jno
shlb
call
cmpsb
mov
enter
push
rcll
mov
add
pop
ret
in
inc
dec
and
jp
mov
out
jg
mov
repnz
mov
lcall
ret
fidivl
inc
in
jno
loop
xor
call
jno
mov
mov
mov
es
pusha
xor
popa
sbbl
loope
sbb
les
loope
mov
addr16
sbb
ret
and
inc
push
ret
std
mov
or
mov
mov
xor
lods
push
cmpsb
inc
mov
add
adc
push
pop
and
pop
mov
sbb
pushf
dec
add
fwait
sahf
jle
xor
insb
pop
and
pop
ret
adc
je
loope
push
and
lds
rorl
adc
aaa
xchg
sbb
sbb
xchg
std
pop
add
cmp
paddsw
jne
and
cmp
cmp
push
mov
fdivs
sub
leave
or
sub
sbb
and
test
or
xadd
and
mov
adc
mov
adc
pop
ret
and
cld
push
cmp
inc
dec
pop
test
push
mov
hlt
test
jl
lret
add
cli
dec
clc
sbb
outsb
int3
call
dec
pop
lods
add
mov
pop
sub
movsl
imul
pusha
push
outsb
shll
cmp
jo
xchg
cmc
icebp
sbb
rolb
xchg
inc
mov
icebp
mov
jmp
sbb
ret
and
insb
outsl
jo
push
add
fcomps
nop
test
js
push
xorb
mov
es
jb
and
jp
cmp
sbb
mov
arpl
imul
out
movl
add
cmpsl
rolb
scas
dec
imul
movswl
xor
mov
incl
dec
adc
test
popf
inc
sub
pop
repnz
in
enter
sbb
and
loop
or
nop
jno
sbb
add
xchg
adc
dec
addr16
cmp
bound
pop
enter
pop
sub
into
lock
push
pusha
popa
jno
pop
nop
mov
adc
fnsave
jmp
pop
add
rclb
xlat
lods
adc
jmp
roll
jns
inc
sbb
add
dec
xchg
mov
aaa
repnz
pop
dec
adc
adc
jnp
dec
or
and
add
adc
and
sbb
mov
dec
xor
pop
mov
jmp
inc
sub
mov
jo
pop
mov
nop
shrl
jbe
ljmp
dec
std
jnp
jmp
push
push
add
adc
add
mov
sub
jmp
cmp
and
cld
addr16
or
adc
dec
inc
pop
str
lea
roll
lds
mov
enter
mov
mov
jnp
cmc
cmp
test
jb
lea
mov
incl
test
jp
add
dec
push
ss
sahf
push
and
mov
and
pop
cmp
repz
rdtsc
pop
pop
xchg
sbb
dec
pop
shll
mov
nop
dec
and
movsl
xor
pop
sbb
push
sub
cmp
inc
and
sti
shlb
adc
xchg
add
iret
push
dec
mov
mov
orl
mov
into
repnz
dec
lcall
rolb
ljmp
arpl
mov
xchg
enter
nop
mov
or
mov
mov
mov
sub
sub
sti
or
je
or
sub
add
push
push
call
insl
push
loopne
jbe
jmp
test
fldcw
jns
bnd
call
in
shrl
ret
add
lcall
push
aam
popf
pop
or
mov
inc
mov
jecxz
ja
mov
adc
fildl
cmpl
test
adc
jmp
loopne
xor
popa
popl
aas
mov
dec
jb
inc
sbb
jo
xchg
std
hlt
adc
push
pop
xor
add
ret
and
decb
ja
xchg
hlt
jg
sbb
divps
andl
gs
sbb
pushf
mov
adc
in
or
fucomi
inc
rorl
subl
testb
ret
rol
adc
sbb
inc
imul
orl
xor
clc
fsubrl
jle
adc
adc
add
mov
jmp
roll
sbb
and
lods
add
pusha
push
jecxz
pop
dec
dec
cmpsl
inc
or
ret
xchg
inc
sbb
mov
or
xor
ljmp
dec
enter
dec
sbb
out
sub
jno
rcll
and
jne
add
mov
daa
add
mov
jnp
movl
xor
xchg
repnz
mov
inc
mov
pusha
mov
inc
and
popa
push
ret
lcall
mov
repnz
aaa
and
xchg
sbb
or
data16
clc
and
add
pop
pop
shll
icebp
cmc
sub
mov
dec
iret
sub
std
sub
cmpb
sub
add
insb
mov
nop
out
test
and
push
add
int
xchg
xchg
gs
lods
dec
aas
fldcw
out
cwtl
and
test
in
xor
mov
jge
shrl
xchg
and
lahf
cmp
xchg
or
repnz
push
xchg
fiaddl
adc
mov
mov
cmp
add
push
cltd
adc
hlt
aaa
shll
mov
jmp
insb
dec
sub
xchg
mov
testl
pop
xor
dec
lods
mov
sub
add
adc
mov
fistps
dec
mov
inc
sbb
xchg
dec
mov
sub
inc
sbb
pop
pusha
sbb
push
aas
cmpsb
push
mov
out
js
push
sbb
enter
inc
rcrl
testl
xor
pop
leave
adc
push
test
sub
mov
push
xchg
sahf
fs
and
adc
pusha
cwtl
ret
pop
add
cmpsl
push
mov
pop
or
shrb
cli
test
push
clc
cwtl
xor
dec
sbb
pop
pop
mov
xchg
inc
pop
inc
adc
insl
cmc
test
mov
enter
lock
testb
xchg
inc
and
mov
xor
icebp
adc
jns
cmp
fwait
and
int
push
mov
mov
sub
out
xchg
cmp
xlat
mov
rorb
mov
push
test
sub
push
imul
rcr
mov
je
cmc
pop
pop
arpl
adc
sub
jno
outsb
stc
push
add
in
inc
pop
cmp
rorb
testb
add
imul
and
nop
fmull
xor
push
jo
pushf
sub
fsts
jmp
stos
push
mov
repnz
add
push
stos
and
dec
inc
pop
mov
pop
xchg
clc
xchg
add
push
aas
jnp
add
cmp
mov
add
repz
call
pop
mov
movsl
jnp
jo
sbb
mov
mov
push
sbb
or
data16
mov
ret
mulb
or
sbb
jecxz
loope
add
lret
enter
cmc
mov
and
xor
icebp
xlat
and
jns
xor
sbb
mov
hlt
idiv
mov
push
cmp
xchg
inc
mov
mov
lea
add
push
lcall
test
dec
mov
fiadds
push
xor
sub
xchg
mov
inc
adc
loopne
imul
adc
cmpsb
popa
pusha
imul
add
adc
test
xchg
je
es
or
cmpsb
movd
fldl
test
mov
mov
mov
addl
push
inc
das
pop
push
lret
xlat
or
bound
or
adc
cmc
cwtl
xchg
cmp
push
sbbb
and
add
andb
lret
or
mov
cld
mov
xor
int
sub
filds
mov
or
mov
imul
frstor
mov
pop
daa
xor
arpl
fsubrs
push
mov
inc
mov
movsl
sbb
stos
stos
leave
and
or
mov
and
sbb
stos
or
test
or
jmp
inc
and
lret
shrl
sub
sub
sub
and
jmp
sbb
sub
xchg
fwait
leave
movsb
or
adc
adc
mov
mov
mov
pusha
and
sub
pusha
leave
mov
pop
cmp
mov
sub
and
fistpl
xchg
mov
mov
mov
mov
push
aaa
sub
cld
fsubs
pop
test
mov
aam
into
adc
rcrb
pop
dec
jle
push
or
bound
xor
movl
add
cli
push
pop
mov
fwait
call
rclb
add
rolb
mov
xchg
cmp
inc
je
pop
add
stc
and
jmp
orl
clc
lods
enter
dec
insl
stc
adc
jno
aas
sbb
xor
into
sbb
dec
je
repnz
loopne
add
jo
cld
add
sahf
add
js
mov
sar
pop
pop
scas
or
adc
call
mov
and
lods
test
cmp
rorb
mov
push
enter
or
xchg
sbb
jmp
adc
push
adc
push
mov
loope
notl
jl
push
outsb
adcb
ret
push
shl
jmp
loop
lods
add
add
mov
cmpsb
add
leave
cltd
mov
sbb
push
jno
addl
jl
add
call
push
sub
sbb
mov
test
cmp
adc
inc
add
cltd
sbb
inc
inc
xor
jno
sbbb
mov
stc
fisubrl
inc
or
ss
repz
jo
add
cmp
inc
xor
or
add
and
loopne
pusha
pusha
inc
sub
les
test
sub
and
inc
jmp
int
push
push
loop
push
xor
cltd
in
add
xchg
adc
mov
adc
dec
mov
andb
or
loopne
add
and
cmpl
or
adc
adc
std
jae
add
pop
dec
sti
mov
add
push
mov
cwtl
jne
mov
inc
mov
sbb
push
xor
sbb
mov
xchg
out
add
add
cmp
enter
std
jo
shrl
lcall
push
iretw
sub
mov
adc
sbb
std
scas
xchg
xchg
or
inc
sbb
add
jp
fs
imul
lea
arpl
or
or
cmp
xor
test
adc
test
adc
shr
inc
lods
add
add
pop
dec
out
sbb
pop
mov
enter
mov
add
jmp
ret
xor
pop
push
cli
mov
inc
add
out
pop
sbb
mov
pop
jne
lock
sbb
fsqrt
xchg
xchg
ret
sbb
cmp
xor
mov
dec
fwait
notl
add
jmp
or
fldt
cli
les
inc
pop
jmp
or
ss
sub
and
mov
mov
xorl
inc
add
insb
jmp
sub
or
jecxz
fs
nop
and
or
outsl
jne
dec
or
adc
sbbb
pop
mov
mov
jbe
repnz
cmp
pop
dec
lahf
sbb
push
xchg
and
cmpsb
xchg
inc
stc
or
xchg
and
mov
decl
pusha
ret
and
out
xchg
cmp
int
test
cmp
mov
push
hlt
add
push
sbb
std
inc
xor
or
test
pop
pop
rol
leave
ret
pusha
sbb
mov
and
or
sub
or
xchg
xor
inc
filds
push
and
sbb
xor
sbb
cwtl
cwtl
adcb
dec
pop
and
in
mov
push
cmp
rolb
sbb
xchg
jmp
enter
addb
data16
push
ret
push
jns
cmc
mov
addl
xchg
add
and
test
adc
mov
loopne
mov
add
or
add
test
adc
rolb
mov
loope
mov
addb
cmpsl
lcall
xor
call
mov
lock
and
push
add
je
sub
sbb
jb
add
mov
pop
pop
sbb
in
push
mov
inc
jnp
mov
int
mov
sub
popf
xor
mov
sahf
pop
ds
pop
cmp
hlt
mov
and
add
or
push
mov
pop
pop
mov
pushl
add
ret
pop
test
push
sbb
loop,pn
mov
xchg
fldl
and
or
cmpsl
xchg
sub
add
pushf
or
mov
addb
mov
pop
mov
and
icebp
dec
nop
insb
dec
mov
addb
outsl
add
jge
ljmp
repz
jnp
fucomp
xor
inc
and
sbb
add
mov
fneni(8087
xor
jbe
rcr
popa
jae
add
push
fldt
xor
add
pop
sbb
add
pop
sarb
repnz
push
dec
bound
loope
into
js
pop
and
or
rcrl
xchg
mov
cmpsb
test
ljmp
and
incb
inc
sbb
es
xorb
or
add
sbb
and
lods
rclb
mov
push
and
xor
repz
cmp
inc
xor
pushf
sti
lcall
push
cmp
sub
jne
in
mov
add
dec
bound
int3
or
and
jecxz
and
mov
call
mov
and
lahf
popf
pop
or
dec
inc
or
lock
mov
and
and
stos
cs
rorb
shlb
jne
mov
rolb
fwait
movsl
mov
lret
arpl
out
sbb
std
and
xor
pop
in
leave
push
xorl
lods
mov
out
lcall
adc
outsl
imul
js
push
xor
sub
outsl
imul
ss
push
push
and
sbb
icebp
mov
out
mov
test
aaa
ret
or
push
xor
mov
jle
dec
cli
or
cmpsb
popw
arpl
mov
add
rclb
sbb
push
and
sub
push
outsl
and
xor
lret
subb
add
sbb
rcr
fidivl
mov
enter
movsb
or
mov
or
lods
mov
and
add
push
dec
aaa
push
push
movsb
xor
sub
add
or
or
rcll
xor
shlb
cwtl
aad
mov
mov
nop
mov
dec
adcb
test
mov
es
roll
in
cmpsl
jb
ds
and
fcmovne
xor
inc
mov
fs
mov
or
add
ret
cmp
loope
shll
lret
cmpb
sbb
pushf
or
iret
out
lods
and
js
sahf
adc
or
dec
pop
adc
out
cmp
dec
add
out
add
aaa
dec
add
es
arpl
orb
data16
jae
adc
pusha
adc
sbb
add
lods
test
adc
inc
out
lods
sub
hlt
sbb
pop
mov
pushf
sbb
in
inc
or
cmp
pushf
jp
add
popa
push
and
aad
inc
mov
hlt
add
jno
sarl
and
jnp
cmp
mov
cmpb
sub
popa
fadd
cli
jmp
pusha
dec
shl
rcrl
inc
iret
popa
adc
icebp
cmpsl
xchg
sti
push
push
movsl
hlt
jo
gs
not
mov
jp
je
loopne
aaa
ss
mov
add
arpl
dec
add
cmp
ds
fmuls
inc
aaa
lret
popa
pop
or
cmp
pop
xchg
movsb
add
dec
notb
lea
xor
xchg
inc
adc
lock
mov
lds
add
adc
ret
xchg
hlt
adc
xor
adc
adc
lcall
sbb
dec
int3
lock
or
insb
mov
test
xchg
les
in
lods
loopne
mov
jne
faddl
sub
add
push
inc
adc
pusha
sub
test
and
out
lcall
mov
mov
leave
lods
jp
mov
scas
push
sbb
mov
and
test
mov
shrb
mov
cmp
jle
loope
sbb
ret
inc
inc
sub
and
fxch
pop
jo
or
insl
lods
and
aam
push
add
sbb
mov
push
cltd
xchg
mov
pop
movsb
fs
shl
mov
pushw
arpl
scas
pushw
mov
xchg
roll
add
enter
xchg
sarl
sbb
cmp
dec
ffreep
addb
inc
inc
pop
inc
das
pusha
loop
fcomps
sbb
or
ret
pop
or
mov
add
cmp
inc
movsb
add
addr16
add
xchg
daa
and
cmpsb
pushf
and
xor
xchg
movsl
ret
repz
popl
adc
cltd
and
dec
mov
cmp
xchg
push
push
add
ds
test
repz
in
add
mov
add
or
ficoml
mov
add
clc
ss
aas
sarb
clc
lods
or
add
push
sbb
mov
push
cltd
add
int3
add
xor
add
add
pop
dec
dec
nop
push
aam
mov
adc
in
adc
fs
sbb
bound
push
movsl
sti
inc
add
jp
add
pusha
adc
dec
adc
cmovo
jle
orl
pop
or
sbb
fistl
mov
mov
inc
in
add
inc
pushf
sbb
out
pop
cmp
addr16
add
xchg
pop
sahf
push
lods
popa
mov
pop
sbb
mov
or
or
push
subb
inc
xlat
daa
jmp
es
add
movsb
xchg
mov
push
movsb
xchg
add
movsb
into
les
xor
add
mov
mov
add
fcoml
push
or
mov
push
and
sti
and
fidivl
mov
rorl
add
pop
inc
test
mov
xor
pop
bsf
subl
popa
ret
push
andb
cmp
sbb
sbb
mov
sbb
xor
dec
pop
pop
adc
in
and
add
arpl
int3
stos
cmp
test
mov
es
out
jo
add
enter
sub
add
inc
pop
mov
inc
loopne
aad
mov
jno
ds
dec
xor
and
pop
xor
subl
pop
pushf
jb
mov
xor
gs
pusha
pop
mov
loope,pn
test
fnstcw
pushf
push
mov
loopne
daa
jmp
popa
or
xor
pop
mov
and
add
lods
mov
inc
xor
cmp
lods
sub
sub
cmp
mov
cs
fistps
fcom
roll
cmp
xor
inc
sub
add
mov
or
negb
sub
je
xor
mov
xchg
mov
adc
push
inc
sub
pop
sarl
sub
popa
mov
fwait
or
sbb
pop
inc
into
add
stos
shr
cmp
sub
add
jp
mov
pusha
pop
adc
test
testb
dec
call
and
add
fwait
xbegin
mov
loopne
flds
scas
pop
cmp
inc
mov
add
sbb
movsl
pop
enter
test
mov
and
movsl
and
popa
js
mov
jne
mov
cld
and
inc
test
mov
pop
adc
in
aam
test
scas
and
adc
sub
sbb
push
mov
pushf
cmc
rclb
outsb
pop
push
sub
pop
adc
loopne
rclb
aam
adc
add
xchg
repz
pop
mov
fildll
stc
leave
cmp
test
xor
xlat
stos
jmp
movsb
xchg
jp
pop
fisttps
cwtl
push
xchg
push
pop
dec
pusha
xchg
add
push
jmp
and
mov
sub
add
mov
cmc
insb
push
xlat
adc
sbb
popw
mov
inc
mov
fldenv
pusha
rcll
and
faddl
add
mov
inc
mov
js
int3
add
xor
imul
xchg
lea
fmull
push
insb
and
push
mov
pop
out
aam
test
mov
jecxz
loopne
adc
stos
add
xchg
imul
push
rol
pop
and
lea
ficompl
inc
add
movl
pusha
add
loope
inc
js
negl
les
test
pop
dec
sbb
xchg
leave
repnz
xchg
sarl
repnz
add
sbb
and
adc
mov
sbb
pusha
pavgb
dec
fsubs
sbb
out
insb
imul
mov
imul
or
mov
loope
push
or
call
pop
push
and
hlt
jle
repz
addb
popa
lret
dec
andb
cwtl
aas
arpl
add
inc
cmp
inc
gs
aad
ljmp
mull
xor
xor
xchg
ds
xchg
mov
inc
jbe
loopne
push
mov
and
xchg
cmp
xor
inc
fcom
mov
pushf
xchg
loope
movsb
scas
mov
add
loopne
sub
pop
rolb
mov
pop
pop
inc
imul
ja
mov
nop
mov
lahf
mov
cli
push
test
outsb
sbb
push
shl
lret
fsubs
or
pusha
jl
jmp
cmp
imul
adc
jns
testb
xor
xor
dec
stos
popa
nop
push
test
mov
movb
jne
test
xchg
scas
std
movsl
sub
and
pop
lods
pop
pusha
push
ret
jno
ds
loop
push
testb
add
adc
adc
imul
push
adc
faddl
add
sub
cmpsb
push
jmp
jo
loope
in
pushf
test
push
fistl
fnop
popf
fiaddl
shrl
in
pushf
shrb
mov
inc
mov
jge
xor
sahf
xchg
pop
lock
ret
add
fs
add
mov
xor
mov
and
std
sub
jb
fs
fildl
push
loope
push
fsubs
add
inc
add
and
stos
shr
or
es
adc
addr16
mov
pusha
insb
push
adc
gs
pop
dec
push
inc
pushf
hlt
mov
fcmovnbe
xorb
xchg
cmp
and
jno
sbb
add
push
mov
test
and
push
mov
nop
dec
mov
add
cmp
mov
dec
ret
mov
or
js
pop
jne
sbbb
rorb
icebp
sub
sub
xor
inc
xor
cli
cmp
fldl
mov
mov
mov
scas
ds
dec
pop
cli
push
test
push
addr16
iret
xor
or
adc
dec
loope
inc
add
int
add
pop
mov
xlat
mov
pop
mov
loop
idiv
inc
addl
test
push
pop
fcoml
roll
shll
in
or
jb
ljmp
add
cmp
push
lods
xchg
imul
add
lcall
add
rcrb
ja
loopne
adc
dec
inc
lret
xlat
mov
inc
jecxz
add
and
cs
jno
pop
subb
and
clc
dec
mov
inc
fimull
or
push
popf
pop
pop
inc
fldcw
sbb
outsl
aas
aam
and
mov
clc
sahf
sar
call
xchg
inc
insb
jne
mov
test
rclb
mov
add
aas
fisubl
shll
or
call
sbb
int3
or
cwtl
cmp
add
mov
sbb
incb
or
add
fisubrl
push
rcll
pop
dec
imul
push
mov
aad
shlb
in
xchg
push
sub
xor
sahf
cmc
lcall
dec
sbb
cld
or
lods
cmp
nop
add
sub
mov
add
clc
pushf
jo
dec
rolb
aad
shll
mov
pop
pop
in
add
push
arpl
mov
pop
add
add
sbb
ret
insl
inc
fdivs
xchg
dec
pushf
popl
imul
insb
mov
fistpll
add
sbb
movb
mov
cmpl
rcrb
xabort
or
pushf
mov
nop
xchg
js
shrl
gs
push
mov
das
lret
in
add
and
push
sbb
and
mov
or
add
insl
fists
dec
add
pop
add
mov
fldcw
add
rcrb
add
push
pop
paddw
int3
add
into
dec
cmp
push
loopne
and
daa
add
add
push
push
nop
push
xor
add
mov
mov
push
lret
dec
mov
aam
jge
dec
xchg
lcall
inc
push
push
pushf
add
adc
inc
sub
xor
mov
clc
push
mov
adc
mov
mov
in
mov
xor
sbb
push
push
xchg
in
pop
sbb
stos
in
jne
cmp
mov
imul
sti
jae
adc
js
inc
push
sbb
mov
and
out
fdivl
out
add
inc
sarl
and
icebp
dec
add
lds
insb
dec
add
jns
fsubs
or
dec
cmp
add
bound
jmp
dec
and
cwtl
jo
inc
add
fdivs
add
sub
enter
dec
fsubrs
xor
xchg
sbb
add
pop
jle
pop
inc
xor
in
in
xor
pop
xor
sahf
leave
fisubrs
mov
add
or
shrb
enter
stos
pusha
adc
xor
mov
or
les
pusha
dec
pop
or
cmp
pushf
xchg
ret
lock
add
cmpsb
cmp
stc
pop
rcll
loopne
cmc
leave
inc
jl
lock
test
mov
ror
leave
sbb
in
lds
shlb
pop
mov
sub
inc
add
imulb
rcll
dec
cmp
inc
fsubs
xorb
call
clc
add
dec
sub
add
mulb
fstpl
nop
push
pop
push
adc
movsb
bound
or
pop
mov
add
push
and
xchg
cld
sub
add
hlt
add
sti
add
in
pop
or
fiaddl
stos
pop
daa
push
insl
and
div
sti
pusha
or
in
jp
pop
xchg
mov
leave
add
jl
mov
subb
ja
in
test
mov
test
jns
cmp
data16
mov
shlb
xchg
aaa
adc
sahf
push
dec
add
or
sbb
dec
rolb
aaa
sub
add
cmp
cli
pop
xor
add
and
shrl
nop
xchg
cmp
fcmovb
pop
sbb
les
pushf
sub
in
xor
outsl
inc
aam
jae
int3
gs
je
push
pusha
loopne
mov
xlat
mov
ficoms
jecxz
add
or
mov
push
cmp
nop
pop
fdivrs
aam
jecxz
inc
adc
test
test
mov
add
outsb
subb
mov
popf
repnz
sub
sar
fs
mov
xchg
pop
es
es
cmpl
add
dec
insl
or
call
push
loope
dec
cld
or
shll
addr16
sbb
cmp
imul
dec
inc
push
sbbl
mov
outsb
mov
divl
es
push
inc
mov
test
addb
cwtl
xor
orl
or
sarl
cwtl
mov
outsb
mov
sub
loopne
inc
or
out
cld
cmp
in
xchg
sbb
xor
sets
or
or
and
add
or
push
mov
stos
les
mov
add
push
shll
mov
lahf
popf
dec
adc
push
sbb
add
push
adc
stos
mov
loopne
sub
cmp
mov
ss
outsl
inc
and
adc
jb
cltd
lds
into
mov
dec
cld
jno
sahf
xor
jl
popa
testb
inc
cmp
popa
les
cwtl
pop
push
shlb
imul
adc
enter
scas
inc
lods
cwtl
mov
inc
xor
sbb
push
jns
mov
pop
mov
aam
pop
mov
sti
pop
das
dec
pop
and
aad
inc
cmpsb
dec
movsb
mov
push
push
jae
xchg
cwtl
clc
or
or
adc
scas
xchg
movsl
into
cs
jo
mov
dec
mov
jae
cmp
lea
es
inc
aad
mov
mov
xor
jbe
add
pushf
xor
fimull
movsl
inc
aam
jbe
cwtl
hlt
in
jb
shlb
dec
cmc
push
insb
enter
pushf
push
and
rcrb
pop
inc
imul
sub
add
fnstenv
fidivs
loopne
insb
call
xlat
addr16
pusha
or
inc
loopne
xchg
mov
in
push
pop
add
adc
add
outsb
xchg
loop
mov
or
lahf
adc
adc
pop
inc
dec
push
andl
sbb
loop
mov
sbb
jp
clc
inc
inc
daa
add
fs
mov
inc
in
add
dec
adc
loopne
fcomps
data16
mov
mov
loopne
scas
add
or
pop
sub
and
js
shl
mov
cmp
fdivs
xor
cmp
enter
sbb
mov
lods
adc
pop
aaa
mov
add
mov
nop
pushf
push
movsl
pusha
mov
data16
xor
or
jecxz
bound
dec
add
lret
mov
inc
mov
shrl
dec
jecxz
adc
cmp
addr16
mov
add
stos
push
pop
cltd
adc
rclb
xlat
pop
add
cmpsl
push
cmpsb
pushw
jmp
dec
aad
pop
movsl
pushf
daa
mov
dec
rcl
call
je
lret
cmpb
and
pop
out
add
mov
or
pop
jge
sub
pop
cmpsl
pop
adc
jp
pop
enter
cwtl
push
addr16
lock
and
sbb
push
fisubl
fsubrl
fdivrl
jmp
scas
cmp
pop
std
cmp
xor
sub
jge
imul
cld
orl
push
pop
adc
mov
pusha
cmp
in
ret
push
cwtl
add
mov
add
inc
or
sub
scas
adc
mov
add
adc
test
and
sbb
out
pop
je
cmpb
mov
enter
or
push
rclb
loop
in
cmp
inc
pop
imul
push
int
lret
imul
cmp
rcl
push
pop
pop
xchg
mov
cmp
or
mov
cmovg
mov
clc
adcl
mov
imul
test
jmp
add
rorb
arpl
sahf
test
mov
or
lock
inc
cmp
add
adc
loopne
outsb
add
jmp
fmuls
cmpb
or
push
fcoms
cmpb
and
xchg
fiadds
in
and
fistl
hlt
sub
mov
inc
add
sbbl
pop
loopne
or
add
xor
test
shrb
and
mov
arpl
pop
insb
insb
or
dec
in
dec
inc
jl
cmp
add
ja
push
or
rorb
cmp
cmpb
test
pop
or
fbld
adc
cmp
push
jns
stc
add
xchg
mov
outsb
repnz
xor
mov
popa
push
stos
xchg
add
inc
push
jno
das
and
sub
inc
clc
shll
enter
jp
push
add
rolb
add
cltd
bound
pop
nop
rcrb
xor
pop
pop
or
divb
mov
adc
cmp
cmp
ret
je
adc
pushl
mov
bound
dec
adc
js
inc
dec
inc
shlb
jae
pop
dec
lods
xor
jp
mov
js
insl
aas
xchg
push
lods
jo
call
xor
icebp
pusha
ret
sub
xor
push
lahf
int3
sub
jns
ja
pop
mov
out
rorb
into
fdivp
andb
or
fadds
out
push
aam
addb
loope
mov
in
add
push
add
movsl
and
les
mov
mov
mov
bound
faddl
cmc
push
shrb
nop
pusha
push
das
pushf
lods
leave
adc
int
rorl
jp
cmp
pop
add
add
in
inc
pop
or
mov
add
push
int
mov
dec
push
xor
and
sbb
push
or
push
add
int3
mov
jecxz
push
xor
cmp
push
pop
std
mov
fs
add
pushf
lock
in
mov
xorl
sub
add
out
and
loop
xor
mov
or
pop
das
cmp
arpl
lock
fs
push
pop
es
or
push
adc
add
inc
push
or
das
rcl
mov
imul
xchg
add
mov
push
inc
filds
mov
outsb
xchg
fsubrs
mov
mov
pop
pop
add
test
popa
cmc
push
add
scas
add
leave
ficompl
pop
cmp
add
push
out
out
jmp
in
sbb
bound
pop
xor
sbb
ss
xchg
aaa
push
cmpsb
pop
faddl
mov
inc
js
and
add
sbb
lods
and
pop
xchg
das
std
fsubs
add
push
adc
movsb
xor
mov
push
push
imul
jae
push
inc
mov
imul
sbb
scas
inc
fisubs
fs
mov
jl
movsb
dec
faddl
outsb
sarb
sarl
pop
rcrl
pop
psllw
or
shll
sub
bnd
inc
xor
cmc
adc
data16
loope
aaa
xchg
loope
ss
pop
scas
pop
inc
rorl
int
lods
add
out
test
inc
fnstenv
fucomip
data16
xor
xlat
cmp
je
xlat
push
lods
arpl
js
or
bound
and
aam
rcrl
xor
cmp
das
add
mov
push
aam
mov
sbbl
fsubr
sub
sahf
dec
jbe
cld
pusha
add
into
inc
popa
adc
arpl
xlat
rorb
daa
pop
cmpl
je
dec
inc
fistps
aas
rcr
lds
popf
out
scas
sarl
inc
loopne
push
insb
push
pop
lods
mov
or
mov
pop
inc
mov
nop
pusha
pop
arpl
ja
sbb
xor
add
std
dec
pop
rolb
pop
popa
in
loope
push
xchg
fadds
sbb
inc
xchg
jecxz
fcom
sub
pop
cmp
cmp
and
inc
gs
stos
clc
js
shll
push
dec
movsb
fiadds
mov
mov
ds
movsl
jae
xor
test
clc
dec
hlt
rcll
mov
shlb
cmp
dec
inc
or
jbe
inc
fisubs
cmc
sub
fistl
pop
fs
cmpsl
jmp
test
cmpsb
mov
push
fildl
pop
or
pop
jge
xor
mov
jl
aaa
push
jle,pt
sbb
sub
mov
ja
cmp
xchg
call
bound
mov
cmp
iret
cmp
popf
fcmovu
jbe
or
out
pop
rclb
xor
jp
incb
aad
pop
andb
insl
fcomps
push
push
inc
or
mov
xor
shrb
jo
add
mov
mov
sub
rorw
cmp
push
pop
test
sahf
gs
or
das
add
adc
ret
pusha
push
popa
movsl
xchg
mov
outsb
lcall
shrb
sub
mov
outsl
adc
and
ja
icebp
mov
sbb
pop
jb
cwtl
and
jl
imul
lds
and
push
mov
push
pushf
loope
mov
jmp
inc
mov
mov
outsb
mov
xchg
cmp
sub
addr16
inc
cmp
xchg
aad
addr16
and
insl
and
pop
ret
jmp
in
jae
jno
call
rclb
lods
add
jne
loop
bound
loopne
insl
jb
cmc
cmp
fadd
aad
test
in
mov
shrl
add
inc
xor
fsubs
push
add
lods
or
mov
push
xchg
mov
dec
adcl
cmpsl
pop
cwtl
cmp
and
out
and
jg
and
xchg
fadd
orl
or
fs
arpl
mov
mov
or
jmp
fs
stos
and
pusha
add
nop
es
adc
into
cli
adc
or
out
fadd
and
nop
fldenv
push
xchg
cmpsb
add
loopne
push
shll
lock
inc
cwtl
mov
mov
cmpb
mov
mov
dec
std
loop
add
andb
clc
xor
aaa
push
push
sbb
repnz
pop
sti
and
fs
fiadds
iret
add
rcl
inc
test
or
mov
xchg
sbb
cmp
push
add
mov
sbb
cmp
mov
xchg
mov
jo
nop
outsl
mov
sbb
enter
int
bound
enter
inc
push
arpl
mov
out
data16
add
enter
mov
fldcw
cmpsb
lock
add
push
sbb
in
ficoml
mov
xchg
repnz
gs
cmpxchg
popf
mov
mov
push
xor
and
xlat
addl
inc
xchg
inc
in
and
shlb
loope
sub
fld
test
mov
inc
sub
enter
inc
aam
inc
ds
jo
adc
xor
push
in
add
push
ret
sahf
jb
add
fdivr
clc
inc
insb
dec
int3
jo
popf
nop
cmp
or
push
xor
lods
inc
pop
cwtl
mov
out
inc
fs
popa
mov
dec
and
add
out
aam
lret
pushf
test
xor
mov
inc
adcb
xchg
out
inc
inc
rcll
mov
int3
enter
adc
lcall
xchg
add
rcrb
mov
outsb
sub
push
pop
and
cmpsl
xchg
and
rcll
scas
or
popa
pusha
jno
add
movsb
aad
pop
inc
sub
cmp
inc
push
test
add
mov
push
lahf
dec
jp
inc
mov
cld
insl
jge
cmp
mov
pop
call
fs
pop
push
xorb
cmp
lret
divl
imul
loopne
lea
mov
xorb
pop
add
adc
mov
or
cmp
inc
fildl
clc
packsswb
popa
inc
and
and
fwait
pop
call
xchg
sbb
fsubl
sbb
in
jl
jno
add
push
jge
push
mov
xchg
loope
xchg
xor
addr16
inc
and
loopne
mov
xchg
mov
adc
cmp
add
xchg
jns
lods
orl
shr
rcrb
movsl
or
iret
pop
push
inc
loop
leave
and
jbe
jge
add
fistl
cmp
or
data16
aas
inc
xchg
fs
iret
push
call
mov
loopne
aam
mov
xchg
mov
fisubs
add
cmp
in
adc
add
inc
cmp
test
je
ret
out
cltd
dec
or
jns
add
or
inc
mov
fidivl
or
sbbb
cmp
pop
xchg
jecxz
and
push
ret
mov
loopne
fisttpl
lcall
aam
pusha
sub
mov
xchg
add
mov
cmp
fwait
push
and
or
mov
lock
shl
cli
ror
call
cltd
pop
push
pop
fldt
fs
jno
js
add
lcall
ret
cmp
cmp
mov
lock
fmuls
ljmp
jecxz
sbb
shlb
hlt
fcom
sbb
or
sahf
leave
push
pop
js
adc
jno
ds
add
leave
sub
bound
mov
jecxz
inc
inc
enter
or
or
cmp
movsb
lahf
je
and
insl
push
dec
or
push
stos
bound
jno
jg
test
sbb
insb
sub
out
dec
ret
xor
push
add
mov
sbb
jne
rcr
ret
or
pop
repnz
xor
in
fdiv
add
xchg
popf
cmp
lods
mov
or
xor
sub
sahf
fsts
pop
test
lret
loop
daa
dec
shlb
push
dec
and
and
icebp
pop
int
in
dec
adc
daa
mov
imul
ljmp
push
loopne
push
sbb
add
sbb
and
mov
ffreep
pop
subb
pop
push
roll
out
add
mov
mov
fsubs
sub
sub
aad
cmp
es
insb
daa
aas
xchg
pop
insb
jo
mov
mov
jno
call
in
mov
mov
insl
sbb
sbb
dec
jno
or
shrb
das
add
loopne
or
rcll
jns
dec
sub
jno
push
rcrb
xor
enter
cld
xlat
adc
dec
mov
cld
lods
in
pop
loopne
push
jae
inc
pusha
clc
push
adc
push
xor
loopne
and
sub
lods
push
or
add
jno
cmp
in
push
fsts
pushf
fs
js
call
sbb
push
imul
xchg
arpl
add
mov
imul
sub
mov
movsl
pusha
inc
ljmp
pop
and
add
aad
insl
mov
mov
add
sbb
imul
pop
dec
lods
mov
mov
and
test
add
and
jnp
sbbb
xchg
add
loop
or
in
loop
sub
test
sub
mov
sbb
fwait
push
bound
jge
rolb
mov
rorb
mov
in
mov
pop
lahf
testl
xor
pop
push
xor
xchg
test
cmp
sbbl
or
mov
loopne
sbb
mov
xchg
dec
sbb
xlat
imul
xchg
xchg
pop
pop
push
lods
fs
mov
cmc
inc
dec
cmp
xor
adc
shlb
mov
xchg
out
pop
pushf
mov
mov
cmpb
cmp
add
sbb
shlb
sbb
xor
add
dec
cmp
mov
mov
scas
das
pop
adc
ss
mov
jmp
icebp
nop
aas
sbb
pop
cmp
rcl
fidivl
es
insb
add
sbb
cld
or
add
and
xchg
lock
pop
pop
sbb
insb
add
pop
in
outsb
lock
adc
jp
sub
add
mov
cld
cli
mov
dec
or
jbe
sahf
daa
outsb
mov
fnop
mull
iret
ds
pop
mov
mov
outsb
dec
add
lea
pushf
sbb
jno
repz
push
add
add
push
and
es
pop
pushf
fdivrs
mov
fs
loop
fstpl
aaa
das
dec
loope
cltd
or
sub
ret
add
in
adc
mov
rolb
mov
jmp
popa
gs
pop
jo
mov
add
cmpl
popa
sahf
add
imul
mov
movsb
fcoms
sub
sarl
xor
and
mov
or
imul
dec
inc
aad
dec
faddl
scas
mov
rolb
cmp
and
add
in
pusha
mov
add
into
scas
dec
repnz
iret
es
ret
shlb
lods
mov
inc
faddl
mov
in
inc
mov
ret
mov
jg
inc
mov
inc
xchg
imul
xchg
in
cltd
hlt
mov
fld1
data16
sub
stc
je
inc
stos
mov
lcall
or
pop
roll
imul
out
ss
add
jo
ffree
shrb
pop
mov
jge
add
cli
or
sub
insb
movsb
ja
test
and
cmp
inc
cmp
pop
stos
adc
mov
in
imul
loope
push
xchg
jne
hlt
pop
or
xchg
popf
cmp
divl
inc
aam
loopne
outsb
sbb
xor
push
les
fldt
cmp
add
and
repz
ds
hlt
enter
inc
loop
jno
xor
sbbb
pop
add
insl
sbb
cmpsb
mov
nop
dec
sahf
test
jmp
sub
lock
jge
xchg
add
or
stc
sub
rcrb
mov
ret
push
jmp
and
cltd
sbb
jns
cmpsb
decl
adc
aas
cmp
or
and
xchg
mov
cmpsl
mov
and
scas
and
orb
addr16
mov
outsl
mov
mov
add
mov
mov
cmpsl
pusha
mov
or
cmp
dec
push
sub
sbb
outsl
test
mov
out
aam
in
sti
rcl
adc
dec
jno
pop
gs
popa
or
nop
sbbl
pop
ds
mov
pop
mov
jg
leave
push
outsb
shlb
int
or
add
and
and
push
leave
pop
rol
shlb
and
push
in
fwait
addl
aas
mov
or
fwait
aam
sbb
add
cmp
rol
ret
adc
adc
decb
lcall
sahf
imul
aaa
sarb
stos
loopne
inc
daa
sahf
arpl
mov
dec
add
xor
jmp
or
cmc
or
fdivl
cli
and
push
sbb
mov
nop
cmp
repnz
cmc
jp
dec
sti
cmp
mov
aas
xor
xchg
cltd
rolb
lcall
in
ja
pop
sub
loope
xchg
out
pop
mov
rcrb
fstpl
mov
lret
add
loop
fidivrl
in
out
mov
mov
ds
decl
xor
mov
fidivrl
mov
jo
jbe
push
std
cmp
addb
jmp
push
xchg
sbb
inc
jne,pn
cmp
sarl
shlb
pop
and
mov
lahf
test
outsb
faddl
push
hlt
scas
mov
sbb
push
and
cmp
push
or
sbb
int3
jmp
mov
rorl
adc
xor
push
add
mov
sahf
loope
pop
mov
mov
stos
adc
jge
in
nop
in
aam
add
ret
cmpsl
jae
xlat
icebp
cmp
inc
add
aam
inc
lods
pop
adc
and
dec
stc
test
push
pop
cmp
mov
int
nop
or
push
add
mov
mov
cmp
popa
enter
xor
enter
dec
or
hlt
rorb
jo
xchg
push
test
std
shll
test
or
in
inc
stc
outsb
pop
testl
cmc
mov
or
dec
pop
mov
xchg
jecxz
fwait
xor
add
and
lea
and
enter
bound
pop
jae
lds
pop
add
push
adc
jo
mov
dec
ret
nop
inc
mov
popf
in
jns
ror
sbb
add
sarl
or
fistpl
xor
xchg
clc
dec
xchg
mov
cmc
inc
in
sub
aam
and
aad
movsb
xchg
mov
add
nop
in
lock
add
jle
push
sub
dec
idivl
pop
mov
pushf
add
mov
mov
mov
inc
pop
push
dec
int3
outsb
and
add
fcmovnu
test
fldl
mov
adc
add
pop
adc
add
mov
dec
cmpsl
pop
dec
sub
and
sub
jmp
nop
push
adc
mov
mov
lret
push
adc
dec
lods
test
insl
inc
decl
cmpsl
cltd
mov
mov
mov
dec
mov
jo
or
sbb
push
mov
mov
add
cmpl
add
loope
cmp
push
jg
xlat
popf
sbb
pop
mov
cli
aas
add
les
push
jl
sar
jo
outsl
pop
inc
pop
mov
add
add
sbb
sbb
int
loopne
push
inc
test
xor
bound
or
clc
iret
add
fistpll
scas
aam
mull
mov
mov
imul
pushf
adcb
ja
test
call
rclb
dec
xchg
fwait
push
rcrb
clc
mov
cwtl
and
add
aaa
dec
add
xor
jmp
xchg
or
ja
test
popl
iret
push
std
loopne
loope
mov
xchg
xchg
nop
shlb
jae
dec
fisubl
orl
pop
mov
inc
sub
fsubrl
lcall
mov
aas
mov
dec
enter
fistpll
push
add
fimull
dec
mov
push
fld
mov
sti
add
xchg
add
lcall
fldcw
imul
daa
mov
fldenv
gs
inc
mov
pop
inc
cmp
inc
insl
sti
test
lret
sub
mov
dec
push
loope
xchg
in
outsb
cmp
or
add
jmp
push
or
outsl
add
js
add
hlt
adc
dec
or
cmp
je
mov
out
out
cmp
stos
int3
nop
loope
in
push
sbb
adc
mov
xor
mov
loopne
xchg
mov
enter
mov
gs
add
jg
dec
fdivs
stc
sub
sub
add
aad
xchg
insb
mov
add
jge
push
and
sub
add
jne
incb
jb
mov
dec
add
inc
les
nop
mov
mov
mov
pop
mov
lods
cld
pop
mov
mov
add
xchg
sub
add
jne
pusha
je
push
dec
fisubl
inc
add
pop
or
shll
cwtl
dec
jmp
mov
loopne
fcomps
xlat
xchg
clc
das
sti
fs
sub
enter
add
pop
fmull
add
ret
cmpb
test
push
xchg
out
dec
inc
ret
push
sbb
pop
js
bound
push
add
mov
pop
mov
pop
mov
adc
in
pop
push
add
and
mov
xor
rclb
inc
test
arpl
fwait
add
add
xor
xorb
cmpsl
out
out
lret
jecxz
nop
cmp
inc
or
add
aam
add
jg
mov
fsubrl
sbb
adc
das
xor
shll
ds
push
xlat
mov
fildl
and
addl
fcoms
or
enter
pusha
imul
pop
mov
popa
test
cmp
test
adc
test
stos
dec
push
sub
lods
sub
dec
pop
jp
cmp
aad
scas
dec
out
and
adc
hlt
cmp
cmpsl
popf
or
aam
cwtl
cld
cmpsb
daa
ds
pop
addl
cs
jl
cmp
and
test
int
lock
inc
add
call
ds
sahf
scas
or
xor
in
cld
add
loopne
inc
inc
cmp
inc
jge
andb
and
ds
fnstcw
xlat
cmp
jmp
insb
sbb
add
pusha
test
sub
or
jg
adc
in
fdivs
push
add
mov
mov
push
xlat
jbe
pushf
push
andb
sbb
adc
sbb
mov
mov
imul
adc
mov
popf
jne
popf
out
add
je
pop
js
dec
out
jno
sub
in
adc
in
jmp
pusha
and
push
movsb
mov
lock
stos
daa
adc
push
pusha
movsl
dec
and
sbb
push
add
mov
mov
aam
in
xor
mov
or
sub
daa
add
rclb
sbb
jns
sbb
scas
push
dec
inc
xor
cld
or
stc
sahf
sub
shll
std
stc
jbe
out
int3
ss
add
gs
vpcmpgtb
sub
mov
or
push
sti
jns
xchg
adc
cmp
ss
add
push
test
fcomi
sbb
int3
mov
loop
or
cmp
add
jmp
sbb
subb
jp
cltd
mov
pop
in
loop
int3
fs
mov
adc
pop
mov
sbb
rcrl
popa
or
out
sbb
nop
hlt
push
stc
add
xchg
addr16
jecxz
cltd
hlt
icebp
imul
ds
cmpb
or
ret
fcoms
add
adc
cwtl
addl
dec
sub
popa
or
push
lahf
data16
xor
mov
pop
or
shl
fs
xorb
sbb
dec
orb
ds
inc
and
add
cli
aas
push
xor
sarl
sbb
add
sub
loop
test
dec
sub
test
or
or
inc
add
cld
add
dec
lock
lea
fdivrs
ret
divl
leave
fdivrs
sbb
rolb
jp
stc
add
add
push
cmp
pop
std
mov
test
sub
push
insb
inc
or
int3
cmp
idiv
adc
pop
or
push
pop
sub
dec
xchg
add
sbb
lock
fldl
add
add
imul
add
xor
outsl
jno
jns
xchg
test
mov
cmpsl
and
inc
adc
fdivr
dec
mov
shlb
aad
cli
and
or
ss
faddl
xchg
push
es
lahf
dec
fmul
push
call
ja
sbb
dec
clc
add
sub
dec
sbb
imul
add
jp
mov
rcrb
add
jo
inc
shll
jmp
popf
sbb
push
add
pushl
cltd
rcrb
adcb
imul
loope
bound
lock
and
mov
out
add
push
sbb
or
orb
std
adc
push
prefetchw
add
cmc
or
pop
add
jb
inc
mov
fwait
call
push
pop
add
jl
movsb
movsl
inc
sub
shll
mov
pop
movsl
insb
mov
shr
repnz
dec
mov
call
and
mov
push
pop
add
cmpsb
in
iret
inc
stos
lcall
movsb
mov
cltd
pop
jle
and
mov
and
push
push
dec
or
int3
jno
adc
and
inc
add
and
add
setge
dec
adc
cwtl
iret
test
add
lahf
mov
and
pop
scas
mov
xchg
enter
cs
stc
sti
pop
push
jns
sbb
xor
sbb
movsl
and
ljmp
shlb
lock
sbb
mov
pushf
mov
inc
and
dec
xchg
fnsave
test
insb
mov
fldlg2
movsl
or
lahf
jp
ja
add
adc
push
jmp
cwtl
jo
and
arpl
sub
nop
loopne
pop
add
fiaddl
gs
push
pop
cmp
clc
in
sti
or
push
xchg
or
push
xchg
shrl
sbb
add
addr16
fidivs
fsubs
test
js
push
mov
mov
or
or
bound
jmp
sbb
dec
sbb
leave
das
push
insb
repnz
add
push
adc
test
fucomp
or
add
imul
pop
ret
sahf
popf
adc
cmpsl
stos
adc
inc
imul
push
pusha
add
pop
cwtl
dec
and
and
cmovns
addl
pop
xor
fldl
jbe
orl
std
adc
and
adc
or
into
fmul
dec
shlb
push
add
add
nop
js
dec
add
jle
sbb
cld
xchg
cmpsl
add
xchg
or
pop
js
push
push
out
lahf
sbb
and
sahf
xchg
hlt
movsb
mov
pop
rorl
out
mov
jecxz
push
mov
negb
movsl
insb
cmp
orb
xchg
xchg
in
lock
mov
dec
sarl
pop
inc
jo
cmp
imul
mov
aam
dec
dec
jge
cmp
or
mov
jl
jne
pop
filds
aam
lock
xchg
je
sub
fistpll
inc
push
shrb
add
inc
inc
xor
out
fdivrl
fiaddl
shll
adc
inc
mov
pop
fs
add
adc
divb
pop
add
notl
sbb
out
and
in
or
js
pop
call
mov
cli
popa
fsubs
cmpsl
scas
movsb
leave
push
and
sbb
jns
push
xchg
aaa
mov
cwtl
and
and
pop
sbb
xor
mov
mov
add
jb
xchg
pop
inc
cmp
adc
into
ret
imul
add
imul
repnz
jecxz
xorb
aam
jnp
cmp
addb
pop
cmpsl
push
rolb
sub
je
dec
add
in
mov
mov
pop
or
adc
cmp
int
fldt
add
pop
mov
sti
cwtl
mov
add
clc
inc
fcomps
test
cmpsb
rcrb
movsb
push
pop
rcrb
sbb
rol
fs
jmp
sub
xchg
xor
add
xor
enter
add
fs
push
sbb
cld
loopne
test
jp
fidivrl
jp
add
add
or
cwtl
xchg
dec
rcll
and
mov
or
inc
mov
xchg
orl
loopne
xor
sub
xor
rorb
and
dec
mov
or
pop
adc
mov
das
negl
in
cwtl
daa
movsl
les
pop
fldcw
faddp
sbb
add
rclb
jbe
sub
insl
popa
mov
pop
data16
dec
fsts
adc
cmp
pop
inc
jo
jne,pn
inc
add
inc
push
add
out
mov
jae
push
sar
pop
xlat
sarb
dec
ret
or
add
dec
sbb
adc
test
adc
rcl
push
inc
popf
xor
jmp
push
aam
lock
nop
cwtl
inc
inc
push
push
dec
stos
inc
int3
aam
rcr
int
cmp
xor
mov
inc
add
push
or
out
movsb
fdivp
push
xor
outsl
xchg
pusha
sti
ret
cmc
cmp
xor
jns
imul
sbb
jp
mov
lret
sbb
das
fldl
pushf
rorl
add
movsb
int3
clc
pop
push
sub
std
test
clc
cmp
cmp
movsb
mov
test
insl
add
test
out
add
or
push
dec
inc
mov
mov
xchg
dec
inc
call
add
mov
lods
orl
test
sbb
movsl
cld
inc
dec
pusha
fsts
add
dec
movsl
popf
shlb
push
aaa
stos
adc
out
adc
nop
in
jecxz
fnstcw
shr
fisttpl
test
in
mov
or
ficomps
or
or
dec
call
or
sub
mov
pop
test
and
notb
scas
mov
mov
ljmp
or
add
dec
xchg
in
cmp
mov
fdivrs
add
fiaddl
daa
je
mov
cmp
movsl
call
add
fs
in
push
sbb
mov
stc
dec
loopne
ja
and
xlat
pusha
xchg
ds
daa
shlb
and
or
outsb
imul
inc
jno
sbb
popf
mov
mov
ficoml
xchg
or
fadd
fmull
mov
nop
push
or
mov
adc
push
xor
push
cltd
xchg
mov
jne
push
fnstenv
nop
pusha
mov
xchg
cmp
lods
cmpsl
sahf
add
dec
push
push
inc
jl
xor
ret
js
mov
xor
in
xor
in
jecxz
mov
xchg
inc
mov
std
add
test
iret
shrl
sbb
add
fwait
mov
mov
mov
xchg
adc
mov
adc
in
adc
mov
call
xchg
jns
add
and
loop
sub
lret
int3
mov
loope
jp
add
ret
in
xor
pop
cld
xor
jle
scas
pop
fadds
sub
mov
ret
pop
adc
sbb
sub
pop
loopne
hlt
mov
imul
mov
mov
movsl
cmpsl
cltd
mov
les
inc
movl
sub
push
mov
pop
mov
movsb
jnp
mov
jl
jmp
dec
mov
xor
xor
leave
dec
push
popf
test
faddl
popa
or
mov
int
loopne
out
mov
adc
popf
loopne
sahf
test
call
addb
adc
aam
iret
push
fadds
testb
jno
pop
jle,pt
addl
or
les
add
mov
xor
add
lahf
jbe
loopne
jg
mov
adc
inc
cmp
cmc
roll
mov
repz
jo
pop
sbb
fildll
jge
mov
mov
mov
cmpl
xor
or
iret
dec
pop
adc
mov
sub
add
stos
or
les
rcll
add
dec
or
add
cmp
inc
dec
jbe
repz
out
cli
push
jge
icebp
ljmp
add
mov
mov
xor
jge
add
imul
gs
jne
fs
xchg
pusha
sbb
mov
cmp
leave
sub
ret
stc
dec
push
daa
sti
mov
and
jle
decl
cmpsb
or
add
in
cmp
mov
enter
push
nop
call
add
push
mov
push
cli
push
mov
loope
add
test
and
data16
fwait
mov
lcall
and
add
cmpsb
sbb
inc
adc
in
imul
mov
mov
xchg
sbb
fisttpll
pushf
and
sbb
or
scas
lahf
rorl
insl
in
divb
in
int3
inc
fcoms
jle
push
test
clc
bound
subb
ss
in
in
call
push
xchg
in
scas
int
inc
mov
xchg
addr16
pushf
leave
adcb
rcrl
sbb
xor
mov
or
adc
pop
add
mov
inc
and
fneni(8087
subl
insb
mov
inc
sbb
aam
fcmovnb
add
das
mov
adc
sub
or
push
mov
jne
arpl
call
xlat
mov
xchg
data16
push
cmp
jne
test
popa
sahf
test
leave
jb
int3
xchg
mov
movsb
in
jnp
cld
sub
int3
iret
push
loopne
arpl
pop
sub
fdivs
add
sbb
ds
cmp
or
pop
cld
hlt
inc
cmpsb
sti
mov
add
push
sbb
add
mov
outsl
mov
out
mov
xchg
jns
or
jmp
fisttpll
pop
add
popa
sub
daa
adc
sub
outsb
add
ja
les
xorb
inc
fcoml
xchg
adc
ljmp
je
sub
fidivrl
adc
fwait
push
inc
shufps
es
lahf
rorb
dec
inc
pusha
sbb
out
repz
add
add
rcl
add
jg
mov
pop
sbbb
dec
aam
imul
inc
call
hlt
inc
and
pop
xor
std
pop
add
ret
pop
jbe
subb
sub
sub
lea
outsb
test
outsb
jnp
imul
ja
fdivrs
mov
dec
fsubrl
xchg
rcr
xor
movl
sarb
stos
mov
aaa
jnp
clc
leave
mov
sub
xor
or
jge
call
xor
jno
xor
outsb
test
rclb
dec
pop
push
sub
nop
fdivrl
add
mov
cmp
lret
int3
jl
mov
push
loop
rcrb
jecxz
ljmp
mov
and
fldl
pop
pop
inc
mov
aaa
push
jb
lods
ror
std
loopne
xor
testb
inc
hlt
icebp
outsl
int
add
fldl
xchg
loopne
ljmp
imul
cwtl
mov
loope
addl
and
dec
sbb
loope
adc
sub
and
push
mov
pop
add
pop
pop
mov
mov
insb
shl
sbb
aaa
inc
pop
enter
jne
add
sub
in
adc
jge
dec
std
and
mov
bound
nop
ficompl
dec
daa
push
daa
pusha
movsl
gs
andb
inc
jo
add
mov
ret
add
shrb
xor
jbe
cmc
sbb
pop
mov
sbb
out
inc
adc
cltd
xor
std
jns
dec
mov
shll
cld
adc
pop
aam
aam
push
mov
dec
xorl
fldcw
inc
pop
popf
in
ror
push
rclb
stos
and
pop
iret
xor
cli
icebp
add
fists
loop
xor
mov
roll
adc
in
xchg
inc
adc
fistpl
repnz
lds
movsl
and
xadd
loop
push
adc
dec
ja
xor
jno
hlt
mov
loope
cmp
movsb
jg
dec
or
or
aad
jmp
in
or
sbb
addr16
loop
or
adc
adc
ffreep
loopne
xlat
push
mov
sti
sbb
pop
add
sub
sar
push
bound
sub
fistl
pop
mov
mov
in
mov
mov
dec
or
stos
js
add
or
ret
in
xor
jge
pop
aaa
fldcw
push
push
std
sbb
in
cmp
push
pop
pop
aam
in
sti
and
add
sbb
xchg
or
movsb
pop
movsb
jae
xchg
mov
or
sbb
sub
sar
fs
inc
js
fcoml
inc
jmp
lock
je
inc
lret
clc
ffreep
out
jl
lds
outsl
stos
data16
mov
mov
movsb
jns
stos
cmp
sub
daa
cmc
cmp
int
loop
add
mov
loopne
push
jns
dec
mov
nop
popa
dec
add
fistpll
lret
dec
add
movsb
repnz
xchg
scas
add
push
mov
pushf
add
jnp
sub
sub
stc
adcb
clc
xchg
sub
mov
inc
lock
pusha
add
dec
sbb
and
mov
aaa
bound
add
xor
and
in
fnstenv
push
inc
jmp
add
repnz
add
sarl
lretw
lock
fisubs
push
in
cmp
and
or
in
adc
cmp
jmp
mov
push
fisubl
adc
insl
jmp
lret
orl
scas
bound
jg
int3
and
adc
out
push
add
and
shl
shll
pushf
fs
pop
mov
in
addl
mov
inc
dec
xchg
scas
jns
push
add
sahf
lea
fs
inc
xchg
movsb
sti
inc
cmp
pusha
adc
int3
sub
or
xor
shlb
in
ljmp
gs
aaa
cmp
mov
xor
in
into
add
fdecstp
add
pop
mov
inc
cmpsl
lods
add
push
mov
sti
pop
cmp
jb
adc
sbb
imul
dec
xchg
movsb
and
dec
mov
test
les
mov
test
add
lea
outsb
loopne
add
xchg
xchg
pop
dec
cld
xor
and
xchg
pop
hlt
in
pop
std
adc
cmp
imul
repnz
jbe
or
jle
scas
inc
ds
mov
add
bound
dec
hlt
push
pushf
mov
sub
insb
mov
adc
xor
test
loop
add
repz
out
dec
cmpsb
add
mov
or
mov
ljmp
pusha
add
jp
mov
and
test
xor
jmp
mov
mov
popa
adc
lea
inc
push
into
data16
pop
pop
push
fadd
xchg
add
or
rcl
call
stos
das
and
sbb
movsl
or
fwait
push
andl
shll
ret
dec
xchg
cmpl
xchg
adc
mov
out
popf
xor
and
add
cld
mov
mov
pop
stos
das
loope
sbb
jae
loope
mov
sbb
or
xor
sub
mov
adc
add
loope
and
mov
sub
stos
add
sub
add
push
stos
das
js
push
add
bnd
push
adc
adc
xchg
sbb
or
mov
ljmp
fdivr
fisttpl
sub
lahf
push
add
sbb
pop
and
add
or
mov
repz
mov
jbe
test
cmpb
pop
mov
leave
push
add
js
xor
mov
push
rorb
and
sti
pusha
mov
xchg
xor
ss
mov
loopne
jne
inc
loope
verw
inc
sub
dec
loopne
aam
mov
push
out
shlb
xlat
xorl
adc
movsl
sub
call
sub
push
or
test
and
cmp
pop
std
add
clc
xlat
flds
cmp
push
pop
out
outsb
scas
adc
rclb
js
call
xchg
add
cs
or
lahf
pop
xchg
sbb
inc
add
out
aam
mov
sahf
mov
aas
pop
fwait
push
pop
rclb
or
jb
je
out
js,pt
add
dec
cltd
pop
or
int
sbb
sbb
cld
fcoms
sub
jecxz
decb
adc
pop
xor
les
dec
or
cmp
and
add
in
and
or
lcall
leave
rolb
inc
fildl
mov
xchg
incl
push
pop
push
pop
jg
xchg
jecxz
pop
jmp
xchg
add
sub
or
push
inc
mov
popa
sbb
push
dec
push
add
dec
leave
jo
push
repnz
xor
and
push
rolb
or
subb
adc
jb
dec
sbbl
cmp
sub
pop
in
shrb
inc
pop
push
jbe
xchg
mov
hlt
jo
data16
cmpsb
push
mov
mov
mov
adc
aaa
rclb
jb
push
add
addb
push
fmuls
and
mov
and
adc
out
push
gs
enter
inc
rclb
pop
stos
shll
movswl
xlat
movsl
movl
mov
test
daa
pop
dec
gs
xchg
shr
jg
cmp
iret
std
ret
loope
and
jmp
mov
hlt
dec
jle
add
faddp
pop
or
adc
or
lods
inc
popa
add
call
pop
aas
dec
add
pop
sub
jne
aaa
jmp
ss
fs
pop
sbb
sub
and
sbb
adc
push
daa
sbb
std
mov
and
call
mov
mov
xor
mov
xlat
add
xchg
jo
rorl
movsb
push
test
sub
cmp
mov
rcr
pop
adc
ret
or
sbb
or
adc
int3
movsl
sub
addb
out
pushl
adc
xchg
inc
xor
mov
xchg
aas
js
jmp
mov
pop
out
pop
mov
xor
in
jl
inc
loopne
and
push
add
mov
xchg
push
cmc
pop
imul
fld
outsb
sti
jecxz
or
lret
inc
subb
inc
jbe
xchg
jne
mov
movsl
into
das
jle
faddl
pop
mov
popf
push
sbb
les
call
out
loopne
js
or
test
notb
xor
test
adc
mov
je
jne
and
insb
cmpsb
hlt
out
add
flds
inc
loopne
sub
les
cmp
sarl
rorb
jmp
xchg
jmp
xchg
mov
lods
and
ret
shll
mov
mov
mov
loop
test
push
and
stc
mov
cmp
mov
lock
ds
adc
add
dec
mov
pop
and
popf
in
xorl
cmp
cs
and
pop
insl
stos
push
lock
hlt
sub
andb
pop
int3
add
pop
add
push
pop
sarb
aas
add
or
test
sub
sub
dec
orl
cs
xor
sbb
mov
pop
xor
mov
push
add
paddw
test
mov
mov
sub
sub
mov
pop
test
out
lea
push
loop
lret
or
cmp
mov
hlt
jae
adc
popf
popa
ret
sarb
out
or
xor
push
fimull
data16
adc
mov
rolb
les
or
xorb
inc
repz
cld
cli
add
aad
sub
pusha
adc
cld
push
push
pushf
xor
imul
jmp
xor
popf
loop
adc
call
mov
cmpsb
sarl
adc
popa
add
andl
faddl
add
pop
cwtl
mov
out
pop
mov
in
cmp
add
ljmp
pop
and
sub
sub
arpl
call
jae
popf
cs
jge
in
cmp
subb
stc
loope
lret
jno
leave
xchg
mov
mov
sub
xlat
jmp
sub
js
movl
pop
inc
jmp
outsl
cmpsb
xor
jns
push
or
sub
or
rclb
mov
test
add
jb
add
push
cmovs
adc
mov
aam
dec
add
imul
test
jae
mov
enter
jecxz
cwtl
fldenv
xchg
sub
jle
sarl
or
imul
xchg
lret
add
add
add
test
ja
nop
xchg
push
das
jbe
inc
mov
push
popa
and
pop
xchg
daa
pop
int3
lock
push
and
xor
ss
and
push
inc
int3
or
push
dec
int
adc
push
in
cltd
jl
nop
insl
mov
stc
cmp
mov
shr
jmp
orb
jnp
jp
out
mov
mov
pushf
or
mov
ficoml
sahf
movsb
dec
mov
sub
pop
mov
mov
add
adc
lock
roll
cmpsl
xor
sub
dec
or
test
pop
and
imul
xlat
and
clc
and
sbb
push
mov
xor
or
mov
sub
inc
in
or
test
pop
in
or
addr16
mov
adc
and
gs
push
mov
dec
addr16
mov
mov
xchg
and
repz
jo
sub
mov
mov
insb
es
repnz
xor
mov
xor
push
mov
out
das
mov
jo
out
push
sbb
loop
movsb
or
mov
int
pop
jmp
popf
imul
mov
mov
lret
out
push
cs
mov
sub
lock
push
inc
loop
xor
in
into
and
xchg
push
das
pop
pop
cmp
popa
push
xor
xchg
fstpl
cli
add
call
or
lahf
mov
sbb
dec
and
in
add
stos
test
mov
jns
mov
mov
add
repnz
mov
dec
in
pop
inc
add
cltd
stos
add
pop
inc
aam
dec
je
inc
imul
push
inc
pop
cmc
inc
test
adc
leave
pop
movq
mov
mov
mov
add
cmp
adc
jg
push
pop
ret
or
out
xorb
add
jecxz
adc
int3
scas
jge
sbb
in
jne
or
jno
jns
dec
lret
jg
pusha
adc
rcrb
nop
cmp
push
ret
or
mov
jns
push
and
js
es
xchg
jl,pn
andb
xor
and
sbb
pop
adc
mov
inc
add
dec
mov
fisttps
push
sub
mov
xor
pushf
xchg
xchg
jb
stc
push
stc
and
jae
or
inc
add
roll
add
lea
sahf
dec
jnp
xor
or
add
movsb
jnp
jns
int3
stos
in
mov
clc
mov
cmp
mov
repz
push
xor
pop
mov
add
shlb
cs
ret
pop
rorb
hlt
jmp
push
movsl
shlb
mov
add
out
fstps
lods
or
xor
or
adc
or
test
popf
xor
or
mov
push
fst
loopne
xchg
or
sub
and
cli
popf
adc
dec
popa
mov
dec
movsl
or
mov
jmp
dec
outsl
test
loope
mov
pinsrw
idivl
sub
sub
xchg
mov
popf
jmp
dec
hlt
mov
lock
add
jp
dec
cmpsb
mov
lods
movsl
pop
pop
loop
ror
mov
popf
and
shrl
inc
pop
je
dec
lea
dec
add
sbb
jmp
cmpsl
sub
and
in
fs
les
stos
out
mov
cmp
add
cmp
iret
lahf
jl
xor
pop
dec
pusha
xchg
data16
add
jbe
or
adc
addl
xor
jae
rorl
popf
sbb
loopne
sub
pusha
loop
loopne
cmp
xchg
shrl
or
push
push
jno
pop
popa
ret
pop
pop
dec
enter
mov
adc
pop
or
and
jno
inc
cltd
nop
adc
push
aaa
or
hlt
mov
add
dec
mov
aas
shrl
pop
sbb
test
or
pop
add
push
addb
add
enter
mov
mov
das
add
add
test
jmp
cmp
sub
shll
mov
mov
jmp
and
sbb
test
idivb
nop
ss
shll
add
lahf
clc
imul
pushf
call
and
xchg
ret
je
inc
adc
mov
add
cmp
or
mov
dec
xlat
movb
mov
jmp
cmp
sti
push
xchg
sarl
stc
je
xchg
xchg
sbb
xor
push
lds
and
test
pop
mov
cld
mov
push
fsubs
std
inc
or
arpl
ss
adc
mov
sbb
or
fmulp
adc
dec
xchg
xchg
add
ljmp
jmp
pop
test
xor
add
mov
in
mov
pop
inc
or
cmp
aam
push
rcrl
mov
popf
adc
sbb
data16
sbb
mov
sbb
dec
dec
adc
out
dec
mov
lods
mov
add
loopne
ljmp
popa
pop
mov
rcl
cld
stos
add
fcoml
xchg
repz
movsb
add
popf
inc
sbb
add
cmp
sub
inc
sbb
add
icebp
cwtl
push
daa
push
inc
icebp
push
pusha
lea
push
fwait
jbe
dec
nop
std
add
jge
dec
fadds
adc
mov
mov
inc
inc
xor
sub
add
mov
mov
mov
mov
and
or
xlat
and
je
push
or
out
sbbb
or
xor
rol
test
push
add
push
adc
mov
jae
or
popl
ret
es
xor
out
call
sub
or
pop
addl
cs
fdivr
jmp
popf
mov
mov
cmpsl
mov
sbb
inc
inc
cs
cs
cmc
cs
jg
or
stos
lea
das
pusha
push
outsb
pop
sub
xor
insb
cld
adc
push
addr16
dec
cmc
dec
fidivrl
jne
imul
push
repz
jbe
mov
lock
popa
rorb
jmp
push
ret
xchg
sbb
lea
mov
insl
leave
loop
add
mov
jle
addb
mov
das
adc
mov
popf
and
fsubrs
das
call
xchg
adc
popf
scas
add
mov
je
and
pusha
xor
sub
pop
test
lods
js
cmpsl
or
test
sbb
ja
xchg
cld
mov
mull
pop
mov
arpl
in
lcall
cmc
xchg
subb
lock
inc
mov
adc
mov
or
daa
cmp
pop
jno
cmc
sub
pop
pop
shlb
mov
out
popa
ss
xchg
fistpl
jnp
nop
subb
xor
rcrb
addb
pop
arpl
add
jge
push
adc
cmpl
inc
push
or
ds
push
mov
mov
sub
or
push
movsl
lds
cltd
fs
dec
shr
add
dec
cltd
push
call
dec
sub
mov
or
jl
rorl
mov
aam
push
adc
sbb
outsl
out
pop
xor
js
xchg
cmp
adc
pop
ljmp
dec
imul
cli
lock
mov
es
rorl
adc
mov
insl
or
dec
lock
xchg
cmp
pop
sub
cs
fidivs
nop
cmp
aaa
or
shll
orl
pop
xchg
cld
and
cmp
dec
and
in
out
xor
iret
sbb
inc
mov
nop
in
sbb
jb
test
push
in
cmp
pop
jnp
js
call
stos
inc
xor
sub
mov
ror
adc
stos
movb
and
mov
inc
sub
addb
call
sti
rcr
or
pop
jns
orb
aaa
pop
lods
add
push
loop
lock
test
cmpsb
xchg
loopne
mov
fildl
shl
addl
jge
mull
xchg
gs
sub
ljmp
push
clc
inc
mov
sbb
jne
test
push
sub
shrl
adc
mov
addb
pop
pop
jno
fistps
inc
fs
push
mov
loopne
lret
in
push
cmc
and
nop
fcoms
or
in
leave
in
push
mov
push
les
dec
push
adc
push
jmp
icebp
ja
inc
fld
sahf
faddl
faddl
cmp
jecxz
mov
mov
pusha
rcll
test
and
addl
int
xor
aam
adc
cli
insl
and
fisubrl
stc
in
mov
insl
and
or
nop
insl
rclb
test
hlt
xor
mov
xchg
fistpl
lea
inc
dec
clc
movsl
out
mov
xor
and
mov
or
or
mov
mov
sub
sbb
jo
adc
cli
aam
lods
adc
in
out
nop
out
and
adcl
aaa
and
mov
fs
test
addr16
mov
scas
jns
pop
cltd
add
sahf
inc
sti
cwtl
pop
mov
in
adc
lea
or
lock
sbb
sbb
add
pop
push
xchg
rcll
xchg
mov
fdivs
mov
xchg
adc
add
pop
sub
push
jecxz
fisubrs
lods
addr16
movsl
data16
xorb
inc
test
mov
fisubl
push
inc
leave
mov
cmpb
shll
and
add
pop
test
dec
jnp
arpl
sbbl
ds
and
sbb
or
fistl
lret
push
lds
repnz
shll
pop
inc
or
pop
outsl
lea
sub
imull
mov
xchg
xchg
xor
push
lret
inc
mov
stos
jl
xor
jl
lock
fldenv
jg
hlt
mov
outsl
daa
loope
adc
movsb
add
dec
mov
add
popaw
xchg
xchg
dec
jno
movsl
aaa
cmp
sbb
mov
dec
rcr
dec
mov
stc
and
push
pop
mov
cmpsl
add
aaa
ds
jmp
bound
push
int3
pop
adc
fisttpll
dec
push
test
leave
mov
xchg
lcall
loope
inc
js
faddl
divb
mov
inc
push
jp
sub
push
push
push
add
xchg
jmp
push
add
outsb
sub
push
xchg
pusha
aaa
fcmovnb
dec
and
outsl
xchg
xor
sub
adc
cmp
mov
xor
inc
push
or
pop
add
adc
inc
fisubrl
cld
jge
or
xor
pop
lahf
xchg
mov
jno
movsl
pop
mov
xchg
add
add
push
dec
int
add
pop
jecxz
ja
push
clc
jmp
pop
int3
push
sub
shlb
push
or
inc
pop
push
mov
shll
icebp
enter
mov
mov
mov
mov
fcoml
cmpsl
aaa
mov
cmpsl
popa
sub
pop
test
cmp
or
in
and
add
dec
dec
sbb
pop
or
xchg
dec
xchg
ja
aad
mov
sub
sub
lods
sub
test
mov
outsb
inc
adc
shlb
jnp
aaa
and
sti
mov
scas
movsl
pusha
xchg
mov
les
pushf
icebp
sbbl
sahf
dec
loopne
test
andb
and
jecxz
mov
pushf
push
incl
mov
fwait
adcb
in
mov
popl
out
mov
xor
arpl
repnz
mov
sub
mov
call
mov
add
sub
sub
mov
les
lcall
ljmp
cmp
daa
mov
inc
cmp
and
pop
or
loop
xchg
xor
xchg
mov
adc
mov
pop
push
mov
and
fcomps
jnp
pop
or
popf
lret
mov
loopne
push
pusha
call
pop
pushl
adc
popa
fdivrp
inc
xor
add
add
jno
idivb
jo
pop
and
xchg
mov
xor
sub
cmpsl
repz
dec
adc
push
adc
jbe
or
mov
mov
jmp
adc
push
inc
xchg
sbb
mov
add
add
mov
fsubr
push
jp
add
xor
fstp
push
cmpsl
and
lds
mov
xchg
jmp
outsl
push
aam
cs
movsb
add
pop
leave
cmpsl
movsl
pop
xchg
xchg
pop
idivb
add
sbb
push
and
add
shrl
mov
mov
and
inc
push
adc
call
in
jb
adc
add
cmc
lahf
add
mov
jle
xorb
or
dec
pop
out
je
mov
add
jbe
mov
xchg
pop
int3
push
jae
and
mov
mov
xor
pop
sbbl
dec
scas
aas
sbb
mov
fisttpl
enter
sti
xchg
or
adc
lcall
mov
clc
xchg
scas
pusha
xor
ljmp
stc
xchg
scas
test
or
and
cmp
fisttpl
pusha
or
or
movsl
push
xchg
insl
push
in
pusha
xlat
sbb
add
dec
or
sbb
fsts
loopne
fcomps
mov
mov
pushf
fldl
sbb
in
xchg
and
jl
jae
pop
mov
pushl
jle
call
fldt
push
lahf
or
xchg
in
add
mov
sub
mov
mov
dec
xor
pop
mov
add
addr16
add
xchg
hlt
int
adc
js
es
popf
adc
inc
icebp
xchg
add
test
pop
sbb
jmp
xchg
xor
pop
mov
data16
adc
lea
popa
cmpsb
jecxz
sbb
into
xor
adc
repnz
in
addr16
push
inc
enter
add
pop
in
dec
pop
mov
pop
lcall
daa
test
inc
inc
lock
jne
repnz
or
testl
and
adc
pop
loopne
aaa
popa
jb
xchg
imul
mov
and
xor
test
xchg
js
pop
mov
pop
mov
out
lret
push
or
jno
adc
push
fwait
pop
inc
int
dec
inc
sbb
je
das
mov
or
lods
mov
pusha
add
xchg
mov
popf
lods
inc
adc
mov
pop
add
adc
mov
and
push
data16
cmc
and
into
push
push
sti
pop
xchg
mov
clc
mov
arpl
sbb
jecxz
cwtl
xchg
xchg
addl
xor
dec
cmp
test
ret
mov
dec
scas
inc
adc
popf
aad
aas
add
add
add
popa
or
fidivrl
xchg
push
mov
mov
xor
mov
jmp
mov
out
nop
cmpsl
mov
dec
shll
mov
adc
clc
not
mov
xor
sub
cmp
or
cwtl
pop
pop
push
mov
andl
or
loopne
rorl
jae
pushl
push
add
test
and
out
repz
sbb
jp
jo
mov
popa
cmp
pop
sbb
cmp
addb
pop
subb
jb
xor
dec
adc
and
ret
mov
or
add
sbb
mov
dec
iret
cmp
fisubrs
adc
inc
xchg
les
jge
sub
loopne
movsb
pop
adc
popf
mov
mov
pop
xlat
nop
pop
inc
in
out
or
aad
pushf
lock
add
loop
daa
jge
inc
sbb
push
stos
add
adc
add
aad
je
call
neg
push
xor
sub
adc
xchg
rcll
fcoms
in
dec
les
pushf
lret
daa
fists
rclb
xchg
dec
mov
xchg
xor
dec
pop
movsl
cs
out
cmp
adc
push
lods
cmpsl
mov
sbb
push
stos
sahf
push
add
leave
fcoms
add
mov
jg
xchg
insl
mov
lret
dec
mov
dec
cmp
push
clc
sahf
mov
out
xor
fsubs
in
test
sbb
fst
test
cmp
imul
lea
sub
adc
sbbb
lahf
jns
out
in
or
push
add
lret
pop
outsb
xchg
add
fnstsw
xchg
and
add
jno
cmpsl
shrb
lea
scas
jnp
cmpsb
loope
sub
scas
bound
daa
sub
pushf
cmp
add
mov
cmp
mov
sbb
xchg
push
cwtl
lea
cwtl
jge
pushl
int
je
mov
xchg
push
pop
mov
popf
xor
negl
add
fsubrs
clc
sbb
xlat
or
into
pop
popa
mov
xchg
push
out
jo
cmp
sub
rol
mov
stc
fucom
sbb
ja
icebp
repnz
fiadds
mov
in
js
icebp
sub
das
or
scas
rorl
jmp
mov
xchg
shll
push
stos
aaa
adc
mov
pop
xchg
mov
in
std
add
int3
fstpt
lds
pop
sbb
cmp
out
xor
in
ret
cmp
add
sbbb
loopne
sub
lahf
addr16
mov
push
jg
jp
jae
inc
pushf
mov
jae
mov
pop
jns
movsl
inc
pusha
dec
scas
imul
shlb
xor
jb
dec
movsl
iret
cmp
sahf
out
inc
icebp
clc
jge
add
pop
inc
push
fistl
pushf
mov
or
mov
dec
jo
xor
mov
add
lods
cmpsb
cwtl
loopne
popf
push
add
aaa
les
rol
push
leave
sahf
mov
sbb
addr16
mov
xchg
xor
sub
lods
cld
in
das
lahf
add
sbb
fwait
mov
cmpsl
iret
cmp
dec
jmp
loope
adc
push
add
lods
adc
xor
jnp
loopne
jmp
fs
shlb
enter
mov
hlt
cmpsb
imul
daa
repz
jo
movsb
add
int
jle
pop
or
push
mov
jnp
lea
mov
loope
dec
inc
clc
mov
cwtl
in
xchg
sub
daa
popa
cmp
repnz
roll
sbb
push
pop
xor
lret
sub
mov
mov
daa
fsubs
pop
cwtl
mov
mov
dec
sub
jp
xor
insl
cmpb
out
cmp
in
dec
xchg
and
mov
dec
mov
ret
outsl
jmp
mov
pop
aad
sbb
popa
pop
daa
pop
push
push
adc
sbb
mov
stc
pop
jecxz
or
lea
adc
mov
mov
cli
int3
push
add
push
mov
mov
cltd
leave
xor
sbb
imul
bound
popf
icebp
and
push
pop
add
insl
mov
out
mov
bnd
outsb
dec
add
xchg
mov
sub
xchg
das
outsb
and
out
push
pop
xchg
inc
sbb
mov
rcrl
loop
mov
popf
sbb
mov
je
stos
push
push
loopne
ficompl
repnz
sub
cs
cwtl
mov
int3
dec
inc
mov
mov
sub
xchg
testb
add
push
icebp
push
nop
or
cwtl
stos
test
sub
adcb
mov
cmp
xor
push
cwtl
mov
push
inc
add
sbb
lret
ds
xor
imulb
mov
ljmp
nop
or
sub
idivb
sbb
leave
popf
add
mov
inc
add
inc
mov
popf
mov
testl
das
adc
cmpsl
or
jnp
adc
add
jl
jp
in
popa
pmuludq
das
sub
loope
jg
xchg
ret
nop
or
sub
in
orl
mov
and
and
add
dec
xor
loope
mov
jo
add
pop
and
add
lret
adc
jmp
push
cmp
fdivrs
push
pop
sub
outsb
call
pop
mov
add
xlat
sbb
xor
cmp
gs
push
testl
outsl
insl
dec
test
and
cmpb
inc
sbb
and
inc
pusha
call
pop
add
shrb
mov
loopne
mov
repz
and
add
or
imul
stos
hlt
sbb
xchg
clc
mov
pusha
jae
scas
std
aam
and
or
lahf
mov
jns
andb
inc
xchg
mov
adc
pop
mov
fs
arpl
or
mov
mov
adc
mov
icebp
or
push
data16
jmp
add
outsb
mov
mov
mov
in
fsub
out
mov
mov
fimuls
or
sbb
mov
scas
out
test
mov
sub
jl
je
call
imul
jnp
subb
cwtl
adc
xchg
add
jge
jmp
pop
pusha
mov
rcrl
mov
insb
ljmp
dec
adc
adc
or
mov
stos
jecxz
aas
xchg
jl
ror
jae
adc
add
sub
inc
repz
or
jnp
add
scas
out
imul
mov
imul
ja
push
add
push
push
adc
mov
add
mov
sarl
add
shl
pop
popa
xchg
aas
fwait
pushf
lahf
add
dec
out
lcall
aam
inc
mov
sbb
push
mov
cmpsb
push
lock
shll
dec
test
dec
das
sub
rorl
lahf
out
adc
xlat
orl
adc
int3
cltd
or
faddl
repz
add
addr16
and
pop
sub
cmp
and
push
std
add
and
ljmp
mov
bound
int3
popf
mov
sub
push
adc
fldt
xorb
pop
cmp
psraw
push
ret
mov
aad
sahf
push
dec
adcb
sbb
jmp
mov
xchg
jne
lods
xor
add
sarl
push
add
cmp
mov
mov
aaa
popa
push
inc
fistl
adc
push
add
adc
insl
dec
sub
cmpsl
dec
rcl
fists
cmp
pop
lret
add
adc
sti
lods
or
lahf
fmull
sub
loopne
jb
sub
test
and
les
scas
scas
xor
andl
adc
pop
popa
jmp
jb
push
mov
xchg
shrb
lods
add
out
inc
popa
jo
mov
fwait
outsb
pop
pop
adcl
mov
xchg
dec
outsb
adc
xor
xchg
mov
mov
sub
popl
bound
cld
out
imul
call
mov
bnd
divb
add
add
bound
leave
mov
xchg
loope
cmp
or
push
xchg
pop
es
divl
ret
or
inc
inc
leave
pop
add
and
int3
xchg
popf
adc
and
push
lahf
mov
loop
mov
inc
add
aad
xchg
add
test
mov
jmp
test
cltd
adc
xchg
dec
test
push
aam
jmp
mov
test
add
mov
jmp
out
jno
xchg
fdiv
and
pushf
fisttpll
add
xor
dec
sbb
add
mov
test
test
and
add
out
lock
pusha
mov
sti
sub
popa
testl
mov
or
fistl
iret
push
mov
shlb
mov
test
int
sub
outsl
jno
movsb
jae
or
sbb
add
push
add
cwtl
mov
std
sub
mov
cmp
add
push
xchg
mov
pop
inc
inc
or
rcll
test
jno
scas
inc
push
mov
fs
loope
mov
adc
mov
and
test
lret
jns
add
bound
cltd
mov
lea
fsts
js
xchg
add
mov
fs
loopne
in
movb
xchg
push
sub
movzwl
sub
outsb
push
inc
lock
pop
and
and
mov
inc
xchg
adc
jo
jns
dec
sbb
enter
pop
add
inc
aam
lock
mov
dec
in
out
dec
cmc
sar
push
and
jnp
jmp
inc
dec
test
pop
jmp
or
sub
xchg
mov
jbe
les
inc
mov
pop
out
enter
mov
inc
lahf
decb
sbb
and
ljmp
psrlq
cmp
push
xor
orb
lahf
dec
test
mov
inc
inc
test
xchg
mov
xor
mov
hlt
or
xor
js
out
cmp
inc
test
jle
or
dec
in
lock
push
adc
cmp
pop
shll
jno
stc
pop
mov
mov
inc
leave
sbb
test
jge
ljmp
divl
push
mov
or
sub
cltd
or
insl
cmp
call
dec
jo
pop
pop
je
mov
mov
jns
sbb
pop
enter
pop
imul
addb
xor
push
add
mov
lods
mov
sub
jnp
jo
or
adc
mov
mov
pusha
or
gs
aaa
clc
sub
in
dec
fidivl
cmpl
pop
loope
or
int
leave
xor
adc
dec
push
out
fildll
mov
sbb
pop
cmp
xor
out
mov
adc
inc
iret
jg
or
or
sbb
shll
mov
int
adc
jns
decl
adc
les
cltd
or
adc
jns
jmp
stos
orl
je
jmp
jae
mov
and
vmwrite
sub
cmp
fnstcw
hlt
addr16
pop
clc
lret
jb
pop
cmpb
jbe
add
ret
test
pop
sarl
and
mov
mov
mov
or
sub
outsl
pop
xor
pusha
xchg
mov
push
out
negl
cmpl
cs
jb
int3
mov
xchg
aad
mov
push
aas
int
imul
pop
rorl
add
xchg
add
push
sub
mov
add
sub
and
jnp
daa
gs
xchg
push
fs
push
add
in
add
mov
outsb
mov
sbb
adc
jle
fisubl
dec
pop
or
movswl
sarl
xrelease
rcrb
out
xlat
inc
mov
or
dec
mov
out
in
shll
and
pop
loopne
repz
jne
or
jne
inc
clc
mov
and
out
cmp
outsl
out
in
and
icebp
push
inc
pushf
push
inc
out
mov
cmp
lods
test
push
mov
shrl
mov
les
push
lock
and
and
jg
jl
jno
sbb
inc
inc
ret
jg
cmp
mov
dec
movsb
jno
in
jbe
les
sub
add
movsb
fwait
mov
call
jno
add
test
cwtl
arpl
loop
pop
push
nop
in
pushf
shrl
movsb
pop
out
or
inc
mov
ret
mov
int
push
pop
dec
stc
mov
dec
mov
mov
push
pop
jp
add
rcll
faddl
jle
jge
mov
jmp
xorb
nop
xor
popf
fs
popf
lahf
and
mov
or
pop
leave
add
insl
add
orl
shlb
mov
mov
sbb
icebp
jle
push
inc
mov
cmp
gs
cli
push
mov
test
push
shll
adc
in
sub
gs
cld
cs
out
dec
lcall
scas
repnz
shrl
pop
and
push
or
sbb
xchg
popf
lds
push
pop
inc
adc
jbe
cltd
clc
mov
in
add
mov
inc
sub
xchg
jp
ss
pushl
mov
dec
gs
fs
repnz
mov
jne
stc
sub
das
adc
sbb
mov
jae
push
xor
cmp
filds
jb
lret
and
mov
leave
xchg
loope
insl
ljmp
inc
popf
add
popf
adc
xorb
pushf
sub
push
out
lea
les
add
sub
jns
lods
inc
push
imul
and
sub
push
push
push
xor
mov
mov
cs
daa
je
pop
pop
xchg
jbe
jno
add
lock
das
adc
xchg
mov
stc
pusha
dec
sub
sbb
xchg
xchg
xlat
inc
fs
mov
or
mov
shrb
mov
insb
sub
das
in
jmp
sub
push
pusha
xor
mov
hlt
cmpb
fadds
testl
mov
jo
dec
test
popa
cmp
inc
pop
fnsave
orb
loope
pop
jae
sbb
das
je
test
adcb
dec
jo
add
inc
mov
or
push
mov
popa
dec
les
add
fadds
and
sub
and
xor
cltd
add
add
mov
cmp
shll
and
out
mov
xor
clc
mov
punpckhbw
ja
add
cltd
adc
add
test
mov
add
sub
fimuls
sbb
push
xchg
testl
rcl
add
popf
jo
in
xor
xchg
xchg
inc
dec
mov
bound
mov
or
nop
push
cmp
addb
cmp
or
test
sub
std
mov
pop
push
pusha
jmp
pop
sti
cmp
lds
mov
xchg
out
lahf
mov
jge
cs
push
sub
jl
pop
repz
push
pop
shrl
or
and
popf
rolb
rcll
fsubl
adc
rorl
pop
sbb
je
mov
hlt
pop
adc
into
das
gs
cmc
pop
sbb
js
mov
jecxz
add
xchg
fsubl
ficomps
add
add
mov
lock
mov
adc
or
cmp
das
mov
add
icebp
and
push
clc
loopne
mov
popa
cmp
inc
xchg
mov
stos
push
dec
push
xor
pop
xchg
pop
nop
outsl
mov
outsb
push
push
dec
sbb
jno
int3
sbb
sbb
je
cmp
out
stos
inc
or
add
je
sti
or
nop
flds
jp
mov
insb
adc
push
mov
gs
mov
rolb
sub
xchg
nop
add
mov
push
cmp
pop
pop
lcall
xchg
add
dec
push
or
sub
test
lods
lahf
or
or
fwait
xchg
mov
loope
sub
iret
test
in
aad
add
mov
mov
outsb
pushf
stc
mov
popf
out
xor
mov
outsb
negl
xchg
pusha
sub
jno
xor
ret
sub
mov
pop
add
cmp
sub
or
add
or
adc
push
lret
xor
ret
mov
popf
sub
mov
and
addb
mov
sub
ficompl
xorl
xchg
push
jl
pop
inc
std
dec
int3
les
add
ret
sbb
and
dec
pop
adc
push
xor
cmp
mov
dec
imul
and
les
sbb
push
or
cmp
lret
jae
lods
push
pop
test
mov
cmp
push
cmpsb
xchg
cmpl
movsl
pop
int3
jb
adc
lock
inc
mov
lret
and
lods
sbb
inc
sbb
leave
mov
dec
xchg
jge
lds
cli
dec
mov
loopne
repz
add
bound
fstpt
addr16
adc
xor
mov
cld
popf
mov
add
std
in
cmpl
dec
stc
ds
sub
jle
sbb
andb
shll
imul
cwtl
mov
mov
or
hlt
add
and
sbb
xchg
push
add
sarl
test
cmp
sar
arpl
mov
or
add
pop
out
lret
inc
mov
outsl
cmp
lock
mov
inc
popa
in
adc
mov
mov
add
add
test
xor
mov
sub
imul
clc
aad
fpatan
fstps
sbb
test
mov
and
or
jnp
daa
xchg
jp
push
hlt
inc
sbb
dec
and
wbinvd
test
and
fwait
loopne
fisttpl
sub
pop
mov
je
pop
sub
shrb
icebp
push
pop
push
add
jp
push
outsb
mov
sub
nop
and
enter
add
fildll
mov
stos
or
jmp
mov
push
sub
inc
mov
fnsave
scas
aas
dec
xor
addl
nopl
add
leave
int
ljmp
filds
insb
xchg
inc
push
loope
inc
xchg
mov
pop
push
js
ret
paddusw
out
and
aas
rcrb
add
addr16
enter
add
insb
movsb
js
sub
in
push
int3
pop
stc
subl
add
jne
jmp
xchg
cmc
adc
sar
push
add
jge
cltd
and
out
iret
pop
mov
push
adc
mov
add
push
mov
dec
mov
adc
popf
sub
sub
movsl
js
daa
push
pop
pop
mov
aam
xchg
pop
pop
sti
pop
pop
mov
cmc
push
push
imul
cld
push
aam
movntps
sbb
cltd
les
sub
shr
inc
pusha
push
pop
sub
mov
sbb
inc
pop
cwtl
push
sub
add
cmp
lea
lock
mov
icebp
pop
fisttps
in
mov
jmp
xchg
lea
mov
or
out
ss
aas
idivl
sbb
test
add
dec
jle
push
sub
rcll
add
mov
subl
loopne
test
and
lret
adcb
adc
or
daa
out
inc
sbb
mov
jae
adc
pop
dec
adc
loop
lock
mov
mov
sbb
mov
in
pop
ficoml
out
add
popa
fldt
add
push
popf
jp
xchg
dec
push
sbb
pusha
sbbl
psubsb
imul
mov
dec
xorl
in
dec
leave
inc
xor
or
rcrb
sub
divb
or
xchg
dec
ss
loopne
add
push
lret
daa
sub
movsb
cmp
add
clc
add
inc
fmul
jno
add
int3
sub
loop
xor
mov
pop
in
pop
hlt
in
lods
rorb
sub
stc
xchg
test
xchg
inc
mov
push
lret
push
cs
pop
les
jle
xchg
int3
and
imul
mov
add
mov
cmp
dec
andl
shll
pop
add
jecxz
aaa
sbb
xchg
mov
sub
ret
adc
jno
pop
xchg
ss
sub
cmp
xor
xchg
dec
movsl
fs
popa
in
mov
jmp
mov
sbb
or
jae
jo
testl
mov
jge
xor
jnp
sbb
lret
lea
das
push
mov
pop
mov
int
hlt
repz
mov
xchg
adcb
add
cwtl
mov
xchg
out
fistpl
sub
mov
mov
xor
inc
out
mov
std
push
int
fbstp
xchg
add
add
push
call
mov
xor
mov
push
pop
push
filds
mov
aas
mov
xor
je
add
dec
xor
sti
mov
adc
inc
sbb
dec
xchg
push
cmpsb
adc
popw
mov
sub
jmp
popa
jge
rclb
shlb
icebp
shrb
sti
pushf
or
cmpsl
lret
popf
jbe
shlb
adc
push
sahf
cmpsl
xor
or
mov
xchg
inc
movsb
adc
or
test
out
cmpsl
mov
dec
dec
adc
add
xchg
push
fcoml
xchg
fisttpl
xchg
dec
and
es
pop
mov
sahf
pop
and
loop
xchg
pop
fidivs
jae
xor
xor
dec
jle
ret
fistpll
cmp
stc
sbb
sub
repnz
mov
cmp
das
outsl
jbe
sbb
cltd
test
xchg
subb
gs
xchg
stc
mov
test
icebp
lcall
pop
pushl
ret
inc
dec
bound
fnclex
and
adc
add
icebp
xchg
inc
mov
enter
jmp
dec
sbb
and
cmc
jnp
nop
jo
push
icebp
inc
movsl
pushf
xor
std
push
outsb
and
outsl
or
pop
pop
nop
sub
mov
pusha
add
xlat
mov
dec
fs
cmp
ficomps
ret
hlt
shlb
mov
pop
popf
add
mov
mov
and
sbb
mov
pusha
dec
or
push
call
inc
dec
imull
loop
push
fisubrl
mov
add
adc
lret
mov
pusha
and
mov
mov
popa
mov
dec
and
cmc
jbe
jmp
in
shlb
mov
stc
int3
add
push
test
ret
add
or
shrl
popf
dec
push
test
repnz
dec
les
je
imul
mov
nop
cmpsb
xchg
jle
add
pushf
test
cli
push
pop
pop
sbb
call
fisttps
jmp
jg
add
clc
cmpsb
popf
sbb
and
mov
xor
cmp
pop
fadds
mov
xlat
scas
les
rorb
dec
mov
jno
mov
xor
in
adc
gs
cmpsb
adc
push
cmpsl
pop
scas
push
mov
mov
push
fmull
xchg
mov
imul
shll
or
push
int
shlb
sbb
mov
popf
jne
sbb
test
subl
addr16
mov
and
lahf
sbb
mov
add
mov
mov
push
out
pusha
mov
inc
mov
adc
dec
out
in
add
add
jnp
and
or
into
pusha
fisubrl
or
popf
popa
xor
sbb
mov
subl
lcall
test
pop
adc
daa
push
dec
and
pop
cmp
sarb
and
aam
imul
andb
or
jl
push
call
cli
add
cmpsb
sub
fmull
fsubs
cmc
in
push
cmp
mov
or
sub
jmp
and
mov
sbb
adc
and
test
sahf
cmpsl
pusha
xchg
jle
clc
cmpsl
jecxz
ss
call
add
or
dec
popf
cmp
ficoms
aam
xor
jo
or
imul
lcall
mov
jmp
popf
adc
mov
add
xlat
cwtl
or
arpl
mov
cmp
adc
cmpsb
add
and
into
or
mov
push
or
jmp
xchg
jnp
cmp
mov
arpl
shr
int3
mov
jg
cmp
aam
out
jle
mov
push
inc
rcl
call
jns
lret
cmp
jle
xchg
test
sbb
xchg
cmc
lock
mov
inc
nop
fbld
pop
and
dec
xlat
sbbb
jb
in
and
cmp
jae
out
data16
xchg
adc
mov
and
loopne
mov
mov
pop
rcrb
xchg
xchg
fcompl
cmpsl
ss
cmc
repz
mov
add
popa
call
in
add
inc
adc
mov
scas
jp
or
les
jae
and
cmp
fcmovnb
mov
daa
sbb
inc
in
sbb
fistps
jo
push
add
lods
stos
pop
sbb
pusha
cmp
andb
adc
mov
mov
xor
mov
and
clc
lods
insl
aaa
shrb
mov
push
xchg
jno
pusha
push
jge
cmpsl
adc
jg
dec
fwait
rol
add
add
cs
jmp
arpl
push
adc
or
or
mov
scas
mov
dec
push
arpl
xchg
iret
add
dec
in
adc
clc
xchg
mov
pop
push
or
or
fs
stc
add
pusha
jno
stc
sarb
or
mov
jo
add
out
and
mov
out
imul
cwtl
inc
add
cmp
or
pop
pushf
int3
loop
cld
push
or
xchg
mov
test
mov
or
outsl
xchg
rcl
dec
scas
fnstenv
dec
into
lods
sbb
mov
xchg
not
pop
and
or
cld
imul
push
add
add
xor
xchg
xor
or
or
mov
out
imul
mov
in
and
or
rolb
sbb
insl
into
scas
ficoml
sbb
cwtl
ljmp
push
fs
iret
jp
or
mov
test
mov
xor
popf
cwtl
dec
sub
push
ret
push
adc
push
mov
js
mov
jle
push
movsl
adc
leave
add
mov
aaa
movb
xor
adc
rorb
test
cwtl
call
rolb
pop
mov
push
pop
imul
icebp
pop
das
imul
sbb
andb
stc
jbe
cmp
dec
rolb
pop
nop
jne
pop
jmp
std
add
jns
aaa
aas
or
imul
and
add
xor
adc
mov
pushf
test
daa
leave
sbb
sbb
and
sti
shll
test
xor
repz
aad
pop
xor
pop
push
lcall
cld
cmpsl
ret
insl
lret
cwtl
adc
sub
insl
and
sub
jo
mov
std
sbb
inc
lea
cmp
std
jb
loopne
adcb
movsl
repnz
dec
and
gs
jb
xor
mov
cmp
pop
add
in
mov
and
sbb
mov
xchg
pop
sub
cltd
pop
mov
mov
sub
jl
push
dec
xchg
rcrb
cmp
sti
pop
fdivr
shlb
sbb
mov
imul
sbb
xor
ret
sbb
inc
sbb
insl
push
xor
popf
sbb
xchg
js
mov
out
imul
mov
aam
nop
ja
int3
mov
mov
jg
mov
xchg
out
mov
dec
sub
pop
aaa
aam
cs
loopne
cmp
out
or
fldenv
movsb
add
mov
insl
xchg
jle
stos
lcall
mov
sbb
lods
in
add
mov
ret
lods
push
lods
mov
insl
mov
int
dec
js
mov
add
add
push
cs
imul
pop
shrl
adc
inc
mov
mov
cmp
inc
outsl
loopne
and
mov
jle
stc
jmp
mov
xchg
sti
ja
inc
sbb
mov
pop
inc
jmp
pop
icebp
jno
in
push
push
pop
mov
jmp
in
pushl
mov
add
lods
ja
cld
cltd
call
mov
in
jns
add
dec
lret
sbb
gs
fs
loopne
and
jne
cmpsl
aam
pop
jnp
ficoms
fwait
mov
or
test
cmpb
inc
push
mov
out
add
fdiv
ljmp
cmp
clc
pop
call
cmp
xor
hlt
mov
add
push
pop
clc
mov
dec
push
and
test
fs
and
xchg
push
lret
notb
sbb
sub
test
inc
test
or
cs
inc
add
aaa
lret
inc
and
lahf
pop
aas
push
lret
sub
pop
mov
inc
cmp
fsub
adc
mov
cmpb
mov
or
popa
cmp
cmpb
and
xchg
mov
jmp
mov
das
mov
add
aas
dec
inc
hlt
les
sbb
dec
adcl
pop
movb
into
negb
xor
pop
cwtl
dec
sub
dec
in
mov
std
jmp
mov
loopne
in
xor
shll
das
push
add
rorl
push
and
lock
jns
test
sbb
andl
es
push
das
pop
add
sub
loopne
repnz
xchg
mov
rorl
pop
daa
pop
nop
int
ret
test
jp
jo
jb
dec
loope
clc
sub
pop
dec
push
adc
or
fsubl
pop
jbe
push
xlat
adc
in
out
mov
mov
gs
test
inc
cmp
add
icebp
jae
sbb
add
cmc
js
pop
xchg
das
jg
int3
mov
mov
push
mov
adc
and
scas
jae
clc
adc
repnz
add
mov
mov
mov
nop
hlt
mov
sub
cmp
cmpsb
mulb
sbb
call
cmc
ficomps
cmp
mov
inc
dec
je
or
test
mov
adc
test
in
dec
xchg
add
aas
xchg
and
stos
add
mov
mov
cmp
push
jno
sbb
dec
mov
and
xchg
sbb
mov
xor
ss
push
pop
imul
sub
dec
adc
xchg
and
jo
mov
jmp
loope
add
mov
mov
test
cmp
test
add
jbe
sub
or
in
jg
mov
ret
call
inc
sub
add
add
aas
shrl
pop
push
mov
add
add
out
add
lcall
cwtl
loope
mov
jo
or
jmp
sbb
mov
fs
test
into
add
mov
insb
add
xchg
xor
mov
sbb
push
mov
ds
pop
cmp
mov
fisttpl
dec
cli
fdivs
pop
clc
pushf
out
sub
insb
dec
loope
sub
jo
int
loop,pt
dec
push
lret
add
in
negb
int3
dec
or
or
aad
sub
sub
call
aad
lds
adc
mov
add
or
jecxz
cld
adc
lods
movsb
mov
jmp
into
inc
dec
pop
sub
int3
test
add
incl
sbb
gs
mov
xor
loop
ffree
or
mov
orl
test
dec
push
inc
cmc
in
fs
pusha
or
push
insb
or
rol
lret
dec
test
mov
cmp
jmp
mov
call
pop
clc
iret
jmp
daa
in
outsb
js
repnz
daa
mov
fs
push
mov
stc
or
dec
push
jbe
adc
inc
xchg
jmp
and
add
mov
cwtl
loopne
jbe
dec
add
mov
sub
sub
sarl
adc
mov
fisttps
imul
mov
cs
sub
add
aad
mov
loopne
cmc
adc
das
add
shr
sarb
push
enter
xor
cs
pop
jle
lods
xor
daa
xchg
adc
es
rorb
aas
pop
or
sbb
lcall
lret
fnstcw
inc
sbb
add
orb
push
pushw
mov
pop
xlat
cwtl
mov
adc
cmp
fsubs
add
pop
cli
pop
push
cmp
sti
cli
mov
add
jmp
sub
dec
mov
add
outsl
cmpl
inc
pop
loopne
outsl
inc
loope
mov
xchg
add
cld
sarb
call
mov
inc
xor
sbb
or
clc
xchg
mov
test
mov
mov
enter
add
lods
push
adc
sbb
sub
in
inc
mov
je
push
inc
add
xchg
cmpsl
lahf
test
bound
movsl
mov
push
popa
out
test
lret
stos
movsb
mov
adc
dec
test
insb
loopne
or
pop
lret
pop
or
fildl
xor
repz
inc
mov
add
mov
mov
insb
nop
rcrb
sti
incb
rcrb
out
mov
call
jmp
dec
loope
stos
je
xchg
emms
stos
data16
imul
mov
xchg
cli
cli
xor
jo
pop
push
out
pusha
lods
es
xchg
movhlps
fs
pusha
gs
outsl
or
cld
push
rolb
sar
add
popa
or
je
xchg
imul
repz
sub
pusha
movb
pop
or
lcall
clc
jmp
xor
test
sub
sub
fcoms
or
pusha
mov
push
pop
popa
popf
lcall
push
out
clc
pop
dec
push
lret
and
call
or
fstps
xor
xchg
test
adc
pop
loopne
ficompl
faddl
lcall
add
cmpb
sub
sti
jbe
hlt
and
outsb
testb
data16
add
aaa
add
test
sahf
arpl
push
jbe
inc
aaa
mov
add
jbe
lock
lds
lock
loopne
out
mov
test
and
sub
jbe
mov
jle
mov
inc
mov
inc
add
lds
and
push
pop
pop
pop
mov
cmp
pop
jmp
call
repz
add
fsts
or
dec
ja
imul
mov
repnz
out
icebp
mov
sti
mov
adc
jg
cmp
and
pop
pusha
sub
fstpt
dec
popa
lock
cltd
jb
in
jb
mov
test
add
mov
mov
jmp
xor
into
mov
stc
mov
or
sbb
xchg
xlat
inc
dec
jnp
ss
and
ss
imul
add
clc
pop
dec
in
xor
daa
cltd
xor
adc
cmpsb
int
das
lcall
adc
adc
push
push
sub
or
push
jmp
or
mov
mov
add
fisubrl
push
adc
xor
mov
lret
decl
xchg
mov
fsubrl
sarl
cltd
jecxz
imul
je
out
cmp
xor
pop
fbstp
inc
int3
mov
and
lods
lods
inc
mov
inc
sbb
insl
add
and
enter
dec
add
out
mov
push
adc
mov
lea
mov
mov
sub
sub
dec
idivl
adc
iret
sti
or
test
cli
addr16
add
mov
cld
jle
bound
dec
push
lods
xor
movsb
icebp
and
rorl
ds
or
cmp
push
dec
fisubrs
movsb
outsl
das
adc
sbb
pusha
push
jle
add
cmp
pop
aas
mov
stc
fisttpll
push
add
les
lock
inc
add
popa
and
mov
add
f2xm1
mov
popa
push
mov
cs
repz
push
test
outsb
cltd
mov
push
or
pushf
mov
je
add
mov
push
cmc
sbb
jg
xchg
test
dec
test
dec
lcall
cmp
sub
outsl
mov
dec
jae
sub
cwtl
fidivs
dec
adc
invd
or
lea
push
dec
testl
jno
pop
icebp
mov
orl
xchg
pop
jne
xor
jo
jecxz
or
fnstsw
add
aad
mov
dec
xchg
outsb
inc
add
pop
loopne
dec
imul
and
pop
jl
pop
insl
mov
add
cmp
enter
pop
lods
mov
lock
adc
jno
cmp
ficoml
dec
mov
lret
in
movsl
in
inc
fbstp
dec
lock
aas
rcr
orl
push
adc
cmpsl
lea
cltd
and
pop
sti
or
ja
push
ret
lret
sahf
iret
orb
mov
mov
shlb
mov
add
and
dec
mov
aaa
adc
cmpsb
inc
cmc
adc
mov
mov
push
adc
loopne
std
adc
pop
push
ss
and
add
push
enter
ret
xchg
ljmp
pop
loop
mov
adc
pushf
adc
imul
outsb
popa
xor
les
xchg
push
jno
fldenv
ds
daa
popf
push
or
rorl
mov
cmp
scas
shr
inc
adc
dec
fidivrl
out
rclb
add
aas
dec
dec
pop
call
dec
mov
in
in
cmp
jno
adc
xor
mov
sub
sub
addr16
out
inc
mov
sahf
fnstsw
cwtl
push
lock
aad
lds
fsubrl
les
loop
and
int3
dec
test
loop
xor
or
or
cmpb
and
mov
xor
es
sbb
or
or
jns
insb
lock
add
xor
cmp
push
out
mov
push
jg
add
mov
fists
sahf
popf
or
lcall
add
les
pop
xorl
pop
faddl
pusha
out
pusha
mov
cmp
mov
loopne
lret
mov
fimull
jne
rorl
pop
lahf
int3
enter
rolb
sarl
pop
push
flds
mov
in
jae
push
lret
sbb
inc
cli
pop
out
mov
das
mov
add
call
loop
inc
ljmp
sbb
dec
jae
fsubrs
lds
add
sub
or
xor
pop
dec
add
cli
pusha
and
xlat
xor
mov
popa
popf
mov
push
adc
add
inc
and
call
popa
fisttps
mov
dec
out
shrl
pop
xor
xchg
pop
mov
rorb
shll
jmp
cli
sub
icebp
push
das
rcr
push
inc
xchg
insb
jbe
leave
inc
sub
movsb
add
inc
cmp
stc
cs
sbb
pop
jmp
dec
cltd
in
test
imul
jno
or
and
push
push
mov
arpl
mov
adc
cld
pop
xchg
adc
mov
lods
pop
loop
adc
jns
dec
std
push
test
lods
adc
cmpsb
mov
lcall
pop
add
jmp
cmp
inc
mov
je
ret
or
sub
jno
out
xor
push
fs
sar
xor
cmpsl
adc
cmp
enter
adc
stc
rcll
sub
rolb
fwait
rol
rcrl
hlt
lret
cwtl
pop
jle
aam
sbb
cli
jno
aam
lods
insl
xor
mov
add
or
sbb
fbstp
shl
pushf
add
adc
add
mov
mov
and
orl
sbb
pop
cmp
loopne
jo
jge
pop
imul
aas
push
cmp
mov
add
int3
iret
mov
mov
ss
in
mov
sub
add
lock
cmpsb
inc
nop
or
das
das
cmc
pop
jp
jmp
filds
sbb
cmp
cmp
mov
out
sub
or
test
cs
sub
xchg
and
add
shlb
mov
out
adc
mov
and
sti
mov
stc
mov
add
imul
push
mov
pop
mov
insb
std
enter
adc
lcall
enter
cs
jo
sub
jecxz
add
or
cmp
cmc
pusha
mov
add
add
cmp
pop
nop
push
test
and
arpl
adc
xor
bound
jbe
fs
and
cmc
mov
nop
pop
mov
pop
inc
arpl
and
xrelease
pop
cs
aas
inc
xor
push
mov
clc
ja
dec
mov
rcrb
dec
and
ficomps
add
and
sbb
add
lret
and
cltd
pop
sti
enter
lds
sahf
in
frstpm(287
shr
add
dec
xchg
pusha
rcrb
insb
dec
dec
ret
pop
cs
pop
mov
dec
std
pop
shl
sbb
mov
sti
xchg
mov
xorb
dec
in
movsb
data16
adc
dec
fisttpll
fdivl
push
data16
fstl
cmpsl
negl
les
add
jno
xchg
pop
push
mov
adc
movsb
fistl
mov
sub
das
adc
mov
scas
stos
cld
into
aam
sarb
dec
or
pop
out
fucomi
mov
js
sbb
push
cmp
pusha
jmp
sub
mov
rol
aas
bound
push
jns
test
mov
pop
sbb
add
daa
inc
jns
insl
js
lock
mov
xchg
inc
enter
or
mov
mov
push
sbb
push
cmp
iret
iret
popa
cmp
in
shrl
adc
fs
fisubrl
pop
gs
pop
jl
add
nop
sub
jp
daa
xchg
dec
adc
fmulp
mov
or
and
cmpsb
push
sarl
push
jnp
xchg
inc
insb
jg
int3
jno
inc
cmpsl
lds
cmpsb
push
stc
xor
jbe
fsubrp
sbb
xchg
add
xor
sub
cwtl
cwtl
iret
stc
push
cwtl
sbb
and
cmp
loopne
iret
cmp
cld
clc
popf
adc
mov
sub
or
sbb
neg
mov
data16
popf
rcl
xchg
or
scas
ret
adc
outsb
stos
xchg
xor
arpl
push
in
dec
xchg
sar
addb
hlt
fldl
cmpl
push
lods
dec
out
aad
decb
ds
push
sub
inc
shrl
andb
fisttpll
dec
add
jle
fisubl
shlb
out
rcrb
inc
jecxz
and
adc
jmp
fs
adc
stc
int
outsl
repnz
loopne
mov
lods
sub
cli
mov
loopne
int3
in
add
lcall
daa
mov
fcoml
xor
lret
push
repnz
cmp
or
cltd
les
out
pop
outsw
mov
fnstsw
mov
sub
xchg
pusha
pop
push
push
sub
and
sbb
in
xchg
popa
xchg
mov
aaa
fiaddl
cmp
xchg
pop
pusha
in
inc
push
and
popa
adc
jnp
lods
je
aam
jg
fs
push
cli
push
mov
inc
dec
scas
mov
add
push
mov
iret
rep
dec
adc
call
stos
sahf
push
cmpb
jge
add
push
rolb
adc
clc
das
and
pop
pop
cmp
and
mov
inc
rclb
or
pop
stc
lret
in
lea
out
movsl
aam
test
or
addl
mov
xlat
or
les
rcrb
mov
test
cmp
sbb
jo,pn
jge
addb
mov
add
push
xor
cmc
mov
cmp
rolb
fldl
insl
mov
dec
pop
int
push
push
add
ds
xchg
outsl
inc
pop
pop
sti
sti
xor
mov
push
jle
jmp
pop
dec
push
movb
mov
sbb
dec
sbb
clc
xchg
rorb
or
jmp
dec
jo
mov
xchg
getsec
jb
sub
push
cmpsl
fisttpl
and
in
dec
mov
mov
add
nop
lds
lds
lea
into
aad
lods
addr16
inc
pop
nop
dec
xchg
loopne
dec
sub
add
pop
cmpsl
push
and
xor
adc
fcoml
dec
data16
xchg
adc
in
adc
nop
mov
lock
add
cmp
scas
push
in
add
arpl
popl
mov
adc
in
xchg
stos
ret
pop
mov
cmpb
xchg
mov
mov
or
and
jnp
cmpsl
int
inc
ljmp
bound
xor
dec
out
loop
lods
test
outsl
cltd
adc
push
dec
mov
adc
cltd
mov
mov
cmp
mov
jns
adc
add
mov
sub
dec
mov
pop
jmp
lcall
clc
lds
xlat
mov
imul
nop
push
test
push
push
add
mov
add
fnstcw
outsb
fimull
mov
mov
jno
mov
mov
daa
jmp
inc
icebp
sub
add
in
mov
mov
fisubl
pop
and
mov
pop
jnp
je
push
push
into
or
shll
adc
movsl
loop
add
iret
inc
xchg
sbb
imul
mov
fs
ja
lahf
pop
pop
mov
clc
pop
add
pop
push
add
pop
jge
inc
daa
xor
sub
in
add
test
and
iret
mov
inc
int3
cltd
push
xchg
fwait
cmpl
mov
pop
iret
adc
mov
push
cmpxchg
mov
add
std
scas
mov
cmp
cmp
stc
mov
jnp
test
sti
sub
sub
mov
popf
xor
shrb
pop
xchg
add
shrl
push
cmp
sbb
fwait
cmp
aad
jnp
mov
jl
push
int
adc
mov
bound
in
jno
cltd
add
popf
sarl
popf
cwtl
mov
je
jmp
dec
les
cmp
fildll
mov
ds
lahf
mov
and
add
sbb
sub
stc
pop
sub
enter
add
js
xchg
add
leave
or
ret
sub
mov
mov
cmp
xor
repz
xor
sub
or
mov
sub
fistpll
xchg
clc
mov
mov
push
push
xchg
daa
or
lahf
outsl
and
ljmp
fistpll
dec
xchg
sbb
stos
xchg
call
push
adc
in
xchg
out
mov
jp
dec
xor
pop
stc
mov
imul
or
sbb
ss
pop
xchg
fwait
inc
dec
ficoms
mov
ljmp
repnz
mov
mov
leave
sub
mov
sbb
and
and
out
divb
fmull
and
inc
dec
mov
xchg
adc
inc
fisubrl
sub
pop
inc
js,pn
aas
xchg
xor
or
jno
ret
jle
hlt
adc
xor
test
aas
mov
lds
roll
mov
or
ficompl
xor
inc
add
insl
jge
loope
jbe
in
xor
inc
add
or
add
push
andb
lahf
and
xchg
je
push
cmc
adc
mov
insb
inc
add
movsl
js
outsl
add
nop
pop
pop
push
pop
xchg
xor
xchg
jmp
or
and
les
mull
out
icebp
and
fs
add
test
pop
push
dec
test
les
out
push
dec
test
dec
aad
xchg
adc
nop
mov
leave
mov
xchg
insl
into
outsb
cmpsb
js
push
iret
xor
inc
add
stos
inc
movsl
js
roll
out
loopne
and
xor
mov
sbb
pop
jno
popf
mov
mov
mov
or
sarl
jne
xor
int3
push
adc
addb
in
addr16
mov
inc
inc
ljmp
pusha
adc
xchg
nop
ret
add
dec
in
loopne
and
insb
xchg
fistps
popa
pop
insl
fsubl
das
fbstp
icebp
add
out
jnp
and
mov
ja
xor
dec
or
icebp
push
into
pop
icebp
into
scas
jnp
push
sub
add
out
pop
test
xchg
add
xchg
push
push
push
pop
pop
mov
and
mov
out
aam
xor
xlat
pop
jecxz
dec
call
push
clc
pop
repnz
sub
add
dec
or
push
dec
pusha
scas
addr16
adc
rcrl
loopne
rolb
sbb
dec
in
or
sbb
add
and
pop
int
cmp
sbb
imul
add
outsb
mov
adc
ljmp
pop
rol
clc
loopne
sbb
test
jo
decb
int
out
shrl
mov
xchg
and
adc
iret
mov
pushf
mov
dec
daa
mov
sub
jmp
addb
xor
cmp
sti
push
add
out
gs
idiv
and
inc
sbbl
add
pop
add
enter
lods
add
lcall
mov
adc
out
jp
pop
cld
cmp
xor
scas
loopne
div
cmp
int3
inc
adc
xor
inc
sbb
popf
inc
and
jg
test
pop
mov
add
xchg
pop
es
negl
ret
or
mov
xor
shrl
push
push
push
bound
and
aaa
cld
or
aam
imul
add
jmp
push
mov
int3
lret
out
jp
xchg
sub
enter
sti
cs
std
stos
xchg
scas
popf
rcr
lret
lods
xor
lods
jg
std
loopne
jns
adc
dec
inc
xor
jno
inc
xchg
inc
out
das
inc
mov
outsb
add
jns
mov
mov
test
pop
mov
jne
mov
xchg
mov
scas
add
cmpsl
cld
mov
lret
dec
inc
fsubr
and
jg
roll
sub
pop
cmpsb
mov
sbb
test
imul
add
add
test
fdivrl
jg
add
push
xor
dec
in
imul
pop
iret
and
xchg
push
scas
xor
push
pop
pop
dec
push
in
insb
cmpb
divl
jae
xor
bound
jne
test
shr
and
fdivs
lods
xchg
adc
lea
shll
inc
insl
sbb
push
mov
xor
stc
and
mov
mov
inc
add
dec
and
mov
sbb
lock
test
popa
xchg
push
lods
pop
xlat
sti
outsl
jb
adc
stos
jne
scas
add
mov
pop
pop
jb
cli
imul
cwtl
jmp
adc
jle
loope
outsb
lret
insl
je
loop
or
add
ljmp
xor
add
xor
outsb
pop
xchg
dec
shlb
outsl
push
scas
in
loope
in
adc
in
addl
clc
call
popa
fimull
mov
add
xchg
sahf
fstps
stos
and
fcoms
out
or
jmp
push
mov
xchg
test
int
rclb
faddl
clc
xchg
mov
cld
pop
pop
jmp
orl
shlb
popf
pop
popa
aas
dec
scas
and
pop
pop
sub
movsb
mov
jle
and
rcrb
or
push
jo
mov
add
aaa
sub
mov
mov
push
mov
scas
and
fimuls
lock
mov
push
outsb
cmp
push
cmp
rcll
inc
cltd
pop
into
push
movsl
scas
outsb
imulb
shlb
out
cwtl
daa
insl
xor
cmp
add
dec
fisttpl
fiadds
mov
int
sub
xchg
in
mov
cmp
aas
and
jno
outsb
jnp
pop
mov
add
mov
pop
push
add
mov
push
add
adc
mov
mov
push
dec
ljmp
sbb
jle
pop
dec
lds
push
pusha
cmp
mov
jmp
or
mov
jbe
mov
rorl
cmpsb
sbb
sbb
mov
push
leave
cmp
cmp
mov
cmp
dec
shll
out
and
loope
adc
lock
cmp
add
mov
cs
jo
mov
push
pop
push
jb
aad
and
ficomps
clc
push
add
cs
and
xor
pop
mov
add
fimull
aad
lret
xlat
ror
fildll
ljmp
dec
mov
add
pop
mov
dec
dec
outsb
or
xor
add
jns
pop
pop
adc
fistpll
jmp
and
xor
jo
fnstcw
push
mov
out
pop
dec
add
push
mov
nop
pop
sub
js
cwtl
push
or
mov
adc
add
xchg
jno
in
in
ficoms
test
add
mov
mov
addl
xchg
push
pop
inc
inc
mov
sub
movsl
shlb
adc
cli
ljmp
test
faddl
sub
lods
add
jmp
fidivrl
ds
inc
sbb
ret
repz
call
xchg
mov
nop
fdivrs
adc
cmp
jne
jp
scas
xorb
pop
cmc
sub
outsb
fadds
das
xor
xor
and
popf
jp
mov
aas
inc
sub
test
ffreep
inc
sub
das
and
mov
das
insl
add
push
add
push
mov
cmp
lock
mov
js
add
mov
and
inc
ret
mov
int3
xor
add
xchg
rolb
inc
cld
adc
jl
xchg
cmpb
bound
stos
lret
ss
mov
shr
mov
pop
int3
test
lds
mov
mov
mov
insl
btr
lock
mov
cld
or
mov
das
or
adc
ja
xchg
lods
fsubl
dec
lahf
push
or
stc
fmul
inc
cwtl
lret
int3
push
push
xchg
pushf
add
mov
adc
repnz
popa
jge
ret
xchg
and
dec
scas
mov
loope
sahf
rcl
clc
mov
pop
jge
mov
mov
jecxz
push
xchg
xor
sbb
and
or
add
in
push
cld
in
ret
gs
mov
movsl
add
jns
sti
ja
bound
pop
add
pusha
jnp
jo
cmp
scas
arpl
ds
test
jnp
loopne
sub
mov
jnp
add
loope
mov
lcall
stc
and
inc
sbb
mov
sbb
and
cmpsl
or
mov
sahf
loop
cmp
or
mov
lds
xchg
xchg
scas
lcall
adc
ficoml
xchg
nop
push
mov
pop
jg
sbb
sub
jge
nop
je
or
sub
sbb
xor
xchg
push
outsl
push
es
shlb
les
jecxz
outsb
mov
dec
dec
cld
test
cmp
and
jb
jno
jmp
inc
mov
add
fs
fdivl
xor
push
sub
lods
adc
ficoml
sub
jnp
add
jb
clc
cmp
push
jge
xchg
dec
stc
pop
mov
or
out
icebp
add
insb
lcall
ret
or
jmp
push
pop
mov
pop
cmpl
out
nop
shrb
jno
hlt
notl
push
jmp
mov
rolb
lock
int3
mov
sbb
jb
adc
dec
mov
pushf
sbb
xorb
push
lcall
xor
mov
ljmp
adc
pop
sti
pop
aas
inc
jae
push
int3
inc
testl
jle
and
pop
push
push
test
mov
pop
sbb
lcall
pop
add
mov
sub
lret
mov
sti
imul
push
push
xchg
or
push
sub
add
mov
dec
in
mov
int
ds
ret
dec
js
adc
loop
inc
push
jbe
pop
mov
lock
pop
or
xchg
ss
rolb
into
add
or
sbb
mov
pop
aam
mov
movsl
xor
xchg
faddp
mov
sub
imull
shlb
lcall
loope
pop
and
adc
aaa
pusha
jbe
sqrtps
dec
fimuls
sub
das
idivb
mov
mov
add
add
and
insl
lcall
adc
lahf
adc
int3
sub
or
adc
sbb
add
in
aad
inc
inc
pop
cmp
into
sub
mov
jl
test
push
dec
pop
jns
imul
cs
mov
popf
mov
mov
fmul
add
fs
xor
lea
fldcw
push
pop
popa
cmc
xor
test
cld
add
ss
sbb
mov
mov
xchg
inc
stos
pop
xchg
mov
push
ljmp
adc
fucom
mov
test
ret
mov
jbe
jnp
push
int3
dec
sub
rorb
jmp
jne
fcoms
dec
clc
lods
mov
xor
pop
pop
inc
fstl
mov
push
stos
add
in
sbb
push
jnp
popf
xchg
or
popf
fldenv
cmpsl
sbb
and
sub
das
mov
add
dec
jno
pop
repz
ret
out
dec
scas
int
cs
call
cmc
les
insl
test
sub
popf
cmp
mov
mov
or
cmpsl
mov
mov
push
or
call
insb
cmc
mov
push
cmp
mov
jg
adc
dec
sti
call
scas
test
mov
pop
pop
arpl
or
or
push
jne
fstpl
in
insb
cld
cld
xor
pop
mov
add
repz
xchg
cwtl
int3
sbb
scas
lret
pop
dec
cld
pushf
xor
jg
add
push
in
stos
cmp
or
mov
out
add
imul
push
dec
adc
scas
dec
negb
lds
and
adc
lods
sahf
push
mov
pop
leave
fistpll
scas
xor
pop
sub
xor
jns
mov
dec
fldcw
fisubs
mov
sub
dec
aas
or
test
xchg
repnz
mov
out
mov
inc
mov
and
pushf
mov
push
movsb
sub
mov
bound
incb
loopne
cmc
adc
push
inc
mov
mov
or
cmp
stos
inc
das
xor
in
dec
cmc
jmp
add
nop
mov
jmp
sarb
xchg
test
scas
popa
push
adc
ja
mov
add
std
inc
out
add
popa
or
jbe
cmp
add
shrb
fiaddl
mov
adc
dec
xor
adc
mov
or
pmaddwd
add
lea
push
xchg
fwait
lahf
xor
and
mov
mov
scas
cmpsl
inc
mov
andl
mov
popa
xlat
jle
jbe
shr
pushf
sarl
je
and
pop
fldl
jae
ss
gs
in
leave
add
mov
addr16
jp
fldl
icebp
inc
orb
stc
mov
jb
mov
pop
insl
popa
add
fnstsw
fdivp
icebp
enter
je
add
pop
xchg
adc
xor
or
add
cmp
sbb
mov
nop
loope
in
push
stos
rcll
add
imul
movsb
mov
jo
xor
nop
mov
cmpb
adc
popf
add
test
add
lret
fldenv
fcom
pop
pop
or
inc
and
pushf
mov
adc
push
bts
or
push
ja
or
xchg
and
jle
ss
and
xchg
fsubl
adc
mov
add
fldt
jmp
aad
sub
mov
movsl
dec
in
stos
add
sti
dec
xchg
int3
or
and
orl
loopne
xor
cwtl
mov
cmpb
adc
fmull
dec
in
push
dec
xchg
pop
jno
clc
pop
add
hlt
jbe
leave
xchg
mov
enter
sbb
inc
inc
push
adc
and
ljmp
cmp
pop
pop
fs
add
and
fmuls
cltd
pop
ljmp
adc
add
xchg
int3
jg
add
insl
pop
loop
sub
add
sbb
push
add
sbb
cmp
or
inc
fidivrs
pusha
ss
int
xor
or
xchg
jp
shlb
in
xlat
out
push
pusha
push
jg
sarl
jno
sbb
mov
xchg
add
ret
stc
cmp
push
add
adc
mov
xchg
cmp
push
scas
xor
mov
and
pusha
inc
mov
cmc
mov
pop
jle
add
pop
jmp
or
or
cmp
inc
rclb
flds
into
popa
dec
cld
or
dec
out
cmpsl
lea
mov
push
jecxz
mov
test
ja
int
push
sbb
gs
push
jno
push
in
or
and
add
sub
sbb
shrb
lods
push
cmpsb
jl
jg
pop
cmpsl
sti
lret
xchg
popa
add
ror
jne
daa
pop
ss
xchg
movsb
mov
mov
inc
push
adc
es
adcl
inc
mov
add
pop
stos
jno
xchg
mov
outsb
add
mov
repz
in
jnp
add
sahf
aaa
pop
jno
cmp
rclb
rolb
scas
out
pop
fnsetpm(287
or
and
inc
in
add
jne
sub
fs
outsb
mov
pop
jnp
sbb
mov
loop
lds
sub
popa
mov
inc
fildl
dec
cmp
leave
ss
in
sbb
imul
sbbb
or
imul
cmp
and
cmp
out
sbb
mov
cmc
add
insl
mov
jg
mov
sub
push
in
shrl
xor
loop
incl
add
mov
movsb
add
out
xchg
js
push
clc
in
pop
add
xchg
lock
lahf
add
jnp
ja
shlb
pop
cmp
sahf
inc
ret
in
mov
mov
add
xchg
jl
push
and
jge
rcl
jbe
insb
testl
xorb
xorb
sbb
mov
or
movsb
incb
cmpsb
jbe
add
outsl
sbb
popa
in
xchg
minps
pop
pusha
pop
push
add
repz
cs
aam
mov
mov
push
add
jo
lret
and
jae
xchg
xlat
xchg
incl
jl
ret
cmc
pop
and
out
mov
cmp
add
hlt
lret
xchg
in
popa
push
leave
clc
add
imul
pop
decb
inc
pop
cs
add
es
cwtl
xor
and
lcall
dec
xlat
xchg
xchg
cmp
inc
add
outsb
fisubl
in
push
sbb
cmp
lret
scas
add
mov
arpl
xor
xor
cmpsb
cmp
mov
loop
rcrb
sbb
ret
sti
add
orb
leave
insb
sbb
in
sarl
jae,pt
mov
add
push
loopne
pop
mov
xchg
fdiv
fidivl
adc
add
popf
aam
pop
xchg
lds
adc
sub
das
filds
stos
xchg
pop
xchg
mov
subb
adc
testl
xor
pop
loope
add
sarb
add
mov
xchg
jnp
out
cmp
jb
stc
xchg
xor
jge
loop
inc
mov
dec
insl
sbb
and
rorb
sub
popa
cli
les
aam
hlt
pop
xor
add
mov
adc
add
sbbb
sub
lea
fdivrp
mov
mov
sub
push
add
mov
ljmp
add
add
aam
int3
jb
stc
mov
clc
mov
mov
pop
mov
shlb
cmpsb
jle
sbbb
into
or
out
add
scas
sub
outsb
mov
mov
xchg
add
imul
imul
push
mov
jge
adc
xor
dec
cmp
mov
pop
push
xlat
aaa
mov
daa
movlps
cmp
sbb
mov
addr16
not
in
sbb
sbb
inc
mov
aam
mov
shll
or
fisubs
ds
jle
cwtl
add
pop
imul
sub
stc
cltd
push
dec
orb
pusha
repnz
leave
and
sub
aad
scas
lods
and
mov
in
ret
sub
add
or
loope
imul
pop
inc
add
inc
cwtl
jb
or
in
dec
pushf
cmp
cmp
and
jmp
and
add
cmc
cs
push
mov
shlb
out
sub
ljmp
xor
cwtl
add
push
sbb
jae
add
dec
and
xor
movsl
rclb
sbb
imul
xchg
sub
add
sti
jmp
xor
testl
cmpl
loop
repnz
jecxz
sbb
loope
es
arpl
add
adc
sbb
or
xlat
push
xchg
arpl
rcrb
pop
jns
movsl
add
notb
push
mov
xchg
cmp
loopne
lcall
pushf
add
mov
cld
loop
pcmpeqb
adc
pop
loopne
scas
insb
dec
xchg
mov
dec
cmp
jl
add
jnp
andb
dec
mov
fs
inc
std
add
pop
cmp
add
into
mov
or
test
pop
rcl
jo
mov
dec
dec
mov
mov
xchg
sbbb
dec
pop
iret
jg
adc
add
push
push
add
mov
sub
lods
add
fbld
mov
fisubrl
and
faddl
mov
jmp
push
in
jnp
push
pop
cli
pop
je
inc
inc
inc
sub
shlb
std
inc
repz
add
fistpl
pop
add
or
popf
add
add
dec
lcall
hlt
mov
fcmovnbe
add
rcrl
cmp
xor
jle
mov
jo
les
inc
add
faddl
xchg
out
ret
subb
stc
adc
lock
or
shl
xchg
jno
pop
cs
cmpsb
pop
add
mov
inc
jbe
add
and
xchg
sbb
test
push
adc
jmp
mov
repz
add
or
push
pop
cli
sub
push
in
and
dec
mov
xchg
test
push
sbb
out
add
stos
sbb
insb
add
cmp
add
cltd
mul
add
xchg
add
mov
pusha
xor
jnp
inc
pop
and
add
movq
push
inc
sbb
js
lret
inc
insl
cmp
mov
pusha
xchg
sub
nop
sahf
cmpsl
jle
pop
mov
mov
adc
stc
test
add
sub
repnz
xor
pop
and
lock
filds
lods
movsb
lock
hlt
insl
mov
ja
and
out
lods
xchg
jge
in
push
dec
dec
enter
fldl
mov
adc
repz
insl
iret
add
mov
and
out
and
push
jae
lds
xchg
jo
shl
clc
and
mov
add
xor
xchg
and
sub
fwait
adc
ja
shlb
pop
iret
in
adc
add
mov
lahf
js
dec
xchg
mov
jg
mov
sub
add
js
in
lcall
sbb
inc
xchg
nop
lret
iret
aas
or
mov
jle
cmp
xor
push
dec
lock
ds
cmp
mov
cmp
cmp
sarl
cltd
add
stos
insb
sbb
mov
lret
and
or
jecxz
iret
push
inc
fisubl
lds
pop
jae
out
dec
mov
cmp
lret
mov
loope
jb
push
andb
mov
push
jne
mov
cmpsl
xchg
aaa
mov
mov
xchg
subb
out
mov
subb
add
js
rolb
add
daa
in
sbb
je
mov
inc
or
jmp
lret
in
add
js
rclb
call
xor
jo
imul
notl
or
xor
hlt
adcb
push
mov
xchg
push
sahf
hlt
add
lods
xchg
push
daa
cmp
add
and
or
shll
or
stos
cmpsb
mov
je
add
add
out
sarl
fsubl
ds
pop
add
push
cwtl
outsl
mov
popa
mov
test
jl
decl
ficoml
mov
xchg
push
pop
in
movsl
jbe
pop
cld
les
popf
and
jae
add
fdivs
or
cs
test
popa
outsb
shl
cmp
loope
jle
xchg
add
ffree
popf
mov
stos
add
jnp
add
enter
add
xchg
test
mov
jbe
add
jbe
xchg
sarl
xchg
aam
cmp
add
int3
cwtl
add
mov
adc
out
add
scas
sub
outsl
popf
inc
sbb
cmp
or
hlt
jg
insl
adc
lods
std
add
repz
loopne
mov
lds
pop
lcall
push
int
cmp
jecxz
addb
add
pop
dec
icebp
and
xchg
lock
lods
lret
sub
adc
sub
jbe
jecxz
cmpl
fs
mov
mov
xor
xchg
aaa
les
repz
pushf
fdivs
jne
inc
mov
int3
popf
mov
repz
push
add
arpl
movsb
sub
inc
mov
add
cmp
mov
outsb
cmp
cld
leave
les
jne
outsl
add
fistl
sti
pop
sub
adc
add
fisubrs
stos
add
dec
push
add
jmp
movsb
adc
orb
movhps
ljmp
fisttps
arpl
adc
or
lock
ret
aam
sarb
cmpsb
add
jo
in
mov
sbb
mov
inc
cmpsb
add
imulb
jnp
mov
jl
mov
xchg
fldl
movsl
lods
add
dec
sbb
add
push
aam
test
jbe
lock
out
fidivs
jo
ret
add
xor
mov
sarl
dec
int
xlat
aad
push
add
pop
jae
sbb
and
jl
imul
or
sbb
mov
mov
shlb
sahf
add
mov
mov
add
call
ljmp
xor
push
loopne
push
add
lcall
in
jg
cmp
popa
cmp
add
cmp
in
xor
xchg
add
mov
sbb
pop
int
mov
in
add
lock
out
cmp
jo
push
lret
lds
jbe
mov
fsubr
jns
lea
cmc
cld
sub
jmp
push
aam
push
roll
aaa
inc
mov
mov
repnz
mov
inc
fnstsw
rcl
lret
shrl
xchg
push
nop
add
imul
sub
jne
repnz
sbb
call
rol
js
std
push
xor
mov
pop
ja
sahf
lret
adc
fisttpll
sub
out
mov
fsubrl
sub
inc
loop
xchg
push
add
jl
xchg
fwait
or
push
cs
mov
sub
add
pop
dec
lods
stos
and
test
lahf
ds
pop
cs
or
andb
xorl
orl
out
add
aas
push
sub
pop
out
mov
push
ljmp
jge
lea
sbb
rolb
sbbb
push
addr16
dec
add
and
adcb
xorb
mov
dec
lret
mov
cwtl
ja
push
dec
int
js
add
fmuls
dec
adc
jo
bound
mov
pop
pop
lock
and
cwtl
and
iret
out
adc
push
into
bound
rcll
adc
xor
add
or
rep
leave
inc
add
pop
mov
or
lahf
into
pusha
in
das
ror
or
insl
orb
sarl
gs
pop
cmpsb
jnp
add
push
repz
or
xchg
adc
mov
xor
jb
stos
in
sbb
js
inc
scas
sahf
and
pusha
sbb
cmpsl
out
in
aad
add
sbb
test
imul
mov
adc
out
clc
ficoms
mov
add
icebp
push
add
cmp
pop
mov
add
push
add
pop
inc
mov
clc
jbe
add
int
aas
cld
mov
add
in
pop
sarb
or
add
repnz
loop
in
add
and
call
inc
pushf
loope
dec
add
mov
add
int
xor
sbbl
add
lock
mov
mov
test
mov
xor
popa
out
call
outsb
xchg
cwtl
mov
xchg
push
nop
and
lock
inc
dec
and
push
es
pop
xchg
add
js
adc
pop
cli
test
movsl
mov
inc
add
mov
pop
mov
push
out
dec
rclb
rorb
dec
and
add
jae
repnz
mov
fcomps
jns
push
xor
pusha
pop
test
xchg
ds
jmp
lea
xor
or
xlat
dec
pusha
in
cmp
mov
shll
addb
sub
dec
xor
sbb
out
sti
mov
addl
in
ss
sbb
pop
data16
mov
and
jg
dec
xor
in
je
ds
mov
dec
fsubrs
adc
pop
repz
jge
mov
aad
dec
inc
inc
stc
test
movq
cmp
imul
arpl
mov
add
ret
xchg
in
sub
stc
xor
addr16
test
xor
sbb
aad
jo
scas
sub
rcrb
cltd
roll
lock
ret
sbb
mov
loope
cmpsl
shlb
xchg
adc
push
lods
jl
sub
mov
scas
bound
arpl
and
cmp
cmp
mov
or
xchg
jmp
rorl
adc
addr16
shll
pop
out
imul
push
cmpsb
inc
add
popa
jno
and
jmp
push
add
addr16
push
cmp
or
jmp
mov
mov
insl
add
jmp
sbb
jl
or
mov
pop
aam
lret
inc
push
jns
mov
test
enter
add
sub
xor
add
mov
push
bswap
lahf
sbb
and
xor
cmp
sub
popa
pop
or
and
bound
scas
enter
push
push
xor
cmp
mov
sbb
sbb
int3
or
and
pop
jae
add
movsb
add
sub
mov
dec
jb
adc
inc
add
or
nop
and
sbb
push
sbb
inc
add
cmp
cmp
inc
inc
inc
orb
adc
cmp
fstps
shlb
cld
int3
push
ds
mov
adc
aaa
lods
push
jne
cmp
arpl
adc
pusha
out
shlb
add
sti
bound
lock
cmp
add
in
mov
sub
push
xchg
jp
sbb
fiaddl
shl
stc
and
or
mov
pusha
inc
mov
dec
into
pop
fists
sub
cmpsl
or
and
daa
imul
rol
sbb
leave
add
mov
inc
arpl
xchg
or
mov
movl
dec
push
push
aaa
icebp
add
mov
insl
aas
jns
sbb
xchg
sbb
jo
mov
iret
cwtl
push
out
add
nop
mov
sbb
adc
sub
test
jp
cs
movsb
or
adc
push
shl
add
jae
mov
cld
push
push
scas
mov
xchg
sbb
inc
fistpll
sbb
xchg
andl
fnstcw
loopne
mov
cs
pusha
adc
sub
lret
int3
xlat
iret
and
dec
dec
ljmp
movsb
js
jne
fistpll
sbb
fnsave
jnp
sub
sbb
xlat
fisttps
stos
adc
ljmp
repz
jmp
cltd
aas
add
add
je
out
out
les
shr
insb
int3
out
cmp
push
cwtl
lret
loop
jp
cmpsb
jo
jae
outsb
push
roll
jnp
mov
mov
cmp
lock
and
dec
xchg
movsl
add
mov
pop
dec
insb
push
cwtl
or
cmp
add
aaa
call
sbb
imul
adcl
jo
pop
bound
inc
je
addr16
arpl
pop
add
jb
cmp
aam
push
and
stos
fbld
cmpl
cli
pop
repz
je
cmp
jmp
inc
push
cmpsb
mov
imul
xor
les
inc
loopne
frstor
aad
pusha
push
mov
lea
jns
ret
sarl
add
and
cld
ret
sbb
repz
imul
push
and
cmp
aam
cmp
adc
cmp
scas
adcl
or
mov
add
in
test
mov
ficoml
imul
loope
sbb
jle
jl
lods
sub
or
and
movsl
add
dec
cli
cmp
jl
fdivl
int3
aas
jae
add
xchg
or
cwtd
mov
mov
and
adc
addl
popf
add
movsl
sub
cmpsb
sub
adc
lcall
sub
rolb
pop
add
and
cmp
addb
cmpsb
xor
adc
push
cli
jecxz
repz
fcompl
loop
push
fiadds
jp
out
imul
xchg
push
add
pop
mov
out
dec
xchg
add
mov
sbb
cmpsl
in
add
insb
into
in
ds
sbb
mov
add
pop
cmp
pusha
add
popf
out
push
aam
or
or
xchg
decl
je
popa
xchg
mov
mov
fadds
mov
push
xor
push
inc
pop
add
add
mov
add
mov
jecxz
add
xchg
mov
push
push
pop
movsl
sahf
outsb
pop
aas
add
adc
out
lcall
out
jecxz
movsb
rcrl
mov
jb
sarb
jae
in
outsl
mov
jns
add
fldl
ss
inc
test
fnstenv
rcll
f2xm1
mov
imul
adc
sub
ficompl
leave
pop
inc
aad
movsb
jbe
sbb
jmp
loopne
rdpmc
mov
xchg
push
push
add
and
push
xchg
push
je
inc
imul
inc
inc
imull
icebp
in
adc
lds
cmc
int
push
aas
mov
xchg
stos
pop
mov
jnp
adc
icebp
jne
lea
es
push
pop
adcl
loopne
call
popa
pop
xchg
mov
mov
adc
jl
leave
jne
add
jmp
test
pop
add
nop
mov
inc
xor
nop
clc
test
ret
dec
ds
pushf
mov
and
jl
add
add
jecxz
es
imul
aad
and
imul
add
xor
sbb
cwtl
jo
pushf
mov
add
test
das
out
adc
rolb
icebp
orb
aas
dec
stos
push
test
cmp
sub
fdivl
lret
pop
xor
sbb
push
dec
jnp
mov
push
push
push
inc
leave
aas
dec
shll
int3
aaa
sub
shlb
leave
pusha
mov
int3
cmp
sbb
test
loope
push
jecxz
testl
shll
xor
jg
add
mov
hlt
jno
add
sub
mov
mov
sbb
int
push
xchg
ds
add
in
pop
stc
test
lahf
cmp
rolb
and
xlat
gs
add
jns
jae
push
aas
inc
ret
fimuls
xor
push
push
comiss
aas
pop
in
push
mov
fwait
and
out
and
add
lds
adc
add
mov
xchg
mov
pushf
cmp
leave
popa
jne
add
inc
insb
push
push
sub
xchg
dec
enter
cmp
inc
rcr
divb
fisttps
pusha
out
iret
inc
mov
daa
loope
xchg
fcom
xchg
mov
adc
adcb
cmpsb
ret
sub
xor
pop
iret
aaa
add
lods
sarl
dec
adc
scas
lea
mov
fdivrl
lcall
mov
mov
jbe
pop
test
out
push
in
jg
dec
add
jmp
jge
xchg
jns
rclb
xor
arpl
cmp
jno
add
sub
add
pop
sti
idiv
mov
pop
push
or
pop
or
call
adc
mov
out
inc
mov
dec
ds
xor
repz
sbb
mov
sub
pop
orb
add
add
in
out
xchg
sub
mov
imulb
lock
outsl
jmp
cmp
xchg
jns
add
xor
int3
pop
dec
sbb
test
adc
add
or
ss
dec
enter
aaa
adc
dec
jnp
xor
push
inc
jae
test
add
mov
pop
cli
push
push
push
orb
mov
fiadds
add
pop
sub
add
scas
test
jo
leave
js
add
loop
data16
aam
mov
test
jp
repnz
jecxz
add
aas
stos
cmp
jb
arpl
add
loop
push
dec
rorl
jnp
adc
loopne
enter
add
aas
in
jno
add
pop
pusha
jg
fwait
adc
or
add
inc
mov
mov
mov
sub
xchg
mov
pop
in
add
sbb
or
fstpt
outsb
lret
arpl
negb
add
icebp
loope
ret
dec
jb
mov
and
lock
push
orb
cmp
cmp
mov
add
flds
lea
jo
add
xor
xchg
push
add
jnp
pop
add
scas
cli
inc
xor
mul
into
jnp
add
ja
orl
inc
cmp
jp
add
test
sbb
pop
and
push
aam
rclb
add
or
int
adc
das
mov
pop
rolb
lahf
nop
ja
test
xor
jg
pop
fsubr
mov
outsl
xor
stc
adc
pop
ficompl
addb
fcomps
out
pop
cmp
pop
and
cmp
add
mov
mov
xchg
cmp
add
adc
std
je
add
add
inc
ret
cmpsb
add
aad
sbb
inc
sbb
andb
add
lods
popf
dec
into
sbb
push
pop
sbb
mov
popf
insb
icebp
jbe
test
add
add
jl
pop
pop
pusha
test
outsb
dec
sbb
add
dec
push
addl
mov
in
cmp
pop
pop
movsl
add
gs
mov
outsb
sahf
mov
inc
pop
mov
ljmp
xchg
adc
andl
sbb
push
mov
push
sub
xor
imul
cmp
cmp
add
loope
faddl
daa
ljmp
cli
mov
sub
fwait
sbb
sub
xchg
shlb
cmp
xorb
addl
ret
dec
fxch
addb
jge
sahf
adc
stc
xchg
add
push
add
mov
pop
aam
xor
js
outsl
jbe
jno
repz
jmp
mov
jg
inc
sbb
popf
lret
push
mov
dec
push
inc
ficomps
mov
mov
std
or
mov
aam
loopne
mov
imul
fnsave
jno
add
pop
fimuls
mov
jle
and
adc
insl
dec
cmpsb
fmuls
out
xor
mov
add
shlb
add
push
push
xor
adc
bound
pop
andl
sub
iret
xlat
sbb
add
push
mov
dec
and
in
nop
cli
pop
xor
sub
cmp
xlat
xor
mov
pushf
or
test
int
mov
cli
jle
into
inc
cwtl
lock
negl
mov
pop
dec
insl
xor
dec
nop
pop
sub
pop
inc
mov
je
ljmp
sbb
cld
insb
add
popa
inc
sbb
inc
push
rolb
loopne
xchg
add
xchg
fsubl
daa
pusha
add
dec
subb
or
psubusw
fldt
out
mov
repz
je
xchg
sub
sub
pop
imul
push
mov
push
sub
popa
mov
add
mov
pop
loope
mov
xor
ja
add
int
xchg
jg
add
push
arpl
push
ljmp
hlt
mov
repz
sub
test
stos
pop
repnz
cwtl
testb
sbb
in
add
cmp
out
mov
sti
add
andl
lret
rolb
mov
mov
add
ds
fisttpll
xchg
add
cmp
xor
lcall
sbb
xor
inc
push
add
jl
scas
jp
subb
pusha
inc
mov
loopne
push
mov
sbb
hlt
push
lock
imul
jns
add
xchg
test
int
in
pop
or
mov
or
fists
inc
mov
add
xor
pop
add
arpl
push
mov
cmpsb
ret
jmp
jns
cmc
addb
cmp
pop
mov
pop
movsb
loop
add
out
stc
push
add
loopne
cmc
dec
add
xor
add
leave
stc
and
lret
icebp
subl
rolb
or
cmp
sahf
push
sbb
push
cs
add
popa
add
js
inc
adc
and
mov
inc
movsb
push
jl
push
add
push
pusha
inc
cs
add
les
add
mov
ss
mov
or
add
fxch
xchg
cs
loopne
sub
jmp
xchg
mov
xor
jp
rorl
in
stos
add
in
inc
cmp
add
dec
scas
test
cmp
xor
dec
adc
inc
xorl
out
pop
sbb
mov
push
push
jae
sub
add
add
in
xorb
out
add
adc
fildl
mov
pop
jp
dec
in
out
and
push
pushf
adc
fsubl
push
fbld
xchg
xchg
inc
int
add
add
mov
jecxz
pop
add
dec
mov
adc
and
cmpsl
in
cmp
pop
mov
inc
add
test
rclb
lea
push
jo
out
ret
inc
cmp
or
pop
pop
add
cmp
xor
lods
and
mov
inc
insl
out
adc
loopne
add
mov
mov
js
les
iret
mov
sub
ret
ljmp
pushf
sbbb
repnz
adc
dec
fmuls
cs
cmp
pop
arpl
push
xchg
ret
repz
mov
pop
add
and
mov
add
jp
inc
ds
and
rdpmc
loope
push
cmpsb
jnp
fdivs
add
adc
and
xchg
push
addr16
xor
subb
imul
clc
fidivl
dec
mov
lock
adc
mov
xor
hlt
add
or
cs
or
pop
and
pop
outsl
aam
or
or
push
xchg
fldl
scas
aad
repnz
lods
shr
scas
mov
movsl
xor
mov
jle
aam
jo
add
test
bnd
inc
xor
mov
clc
add
push
imul
mov
add
mov
add
xor
sub
mov
mov
or
out
pop
lock
pushf
je
das
stos
aas
jge
add
bound
out
cs
lea
scas
lret
jne
cltd
sub
inc
sub
mov
jl
ljmp
add
hlt
shr
inc
imul
mov
add
jbe
xor
mov
dec
add
scas
cld
xor
scas
sub
mov
out
cmpsb
mov
xchg
rorb
jecxz
fistpll
push
out
pop
lret
ret
mov
and
sti
xchg
add
pop
ljmp
sar
add
in
aas
nopl
or
insb
xchg
or
add
push
sarl
sub
and
xor
rclb
add
insl
dec
jmp
arpl
mov
test
jl
subl
ret
dec
or
mov
fs
shr
shl
and
mov
push
enter
adc
andl
cmp
jb
imul
pop
push
lahf
xchg
xor
mov
sti
std
push
orb
loop
add
pushf
outsb
pusha
add
mov
test
xor
mov
in
cwtl
dec
movsl
sbb
xchg
lcall
cmp
sbb
mov
pop
lds
into
and
mov
cmp
sbb
ds
pop
xchg
mov
imul
jl
es
inc
add
pop
arpl
jae
addr16
pop
or
adc
outsl
repnz
add
cs
push
or
movsb
sub
pusha
adc
stos
inc
in
and
into
add
cwtl
test
cld
mov
ja
add
aaa
pushf
orl
or
fs
incl
cmpsb
sbb
lea
aas
mov
in
std
icebp
sub
add
clc
movsb
cmp
fidivs
lods
add
jbe
xchg
mov
fdivl
testb
pop
sub
out
cmp
adc
pop
ret
pop
mov
add
xor
repnz
sub
xchg
inc
adc
xchg
js
pusha
xchg
sbb
and
lahf
push
add
mov
jb
add
shlb
sbbb
xor
or
pushf
pop
lods
and
and
std
sbbb
outsb
push
inc
lea
mov
rcr
dec
clc
xor
add
dec
add
sbbb
jl
cmp
dec
pop
bound
lahf
lcall
loope
loopne
mov
push
popa
xor
xchg
adc
pop
imul
out
inc
sbb
sbb
xor
dec
data16
xchg
xchg
pop
jno
clc
jb
xchg
out
fiadds
test
dec
dec
fs
add
ss
dec
dec
jl
sbb
data16
sahf
adc
push
out
rcrb
enter
fadd
dec
push
in
adc
mov
data16
stc
push
clc
mov
mov
add
mov
push
shrb
cmp
jae
add
lret
pop
test
sub
nop
push
mov
imul
push
mov
and
and
jo
rclb
lods
mov
dec
cmpsb
push
add
xlat
in
xor
or
dec
jno
and
fldt
hlt
lcall
jmp
jne
lret
mov
rorl
add
rcrb
lret
xor
add
inc
lahf
int3
add
rcrb
sub
jge
aad
add
in
mov
and
dec
js
mov
or
cwtl
in
push
sub
sbb
loope
out
sbb
ja
add
mov
or
sub
jmp
dec
pusha
mov
and
faddl
fucomip
imul
and
pop
int3
cltd
fs
xchg
stos
test
lds
push
sub
jbe
lahf
push
shlb
pushf
mov
insl
out
mov
dec
rcrb
mov
add
fisttpll
add
mov
push
cwtl
cmp
or
lea
add
loop
push
pop
pop
cltd
in
add
mov
push
adc
ret
movsl
sub
mov
or
daa
push
add
cmpl
fnstsw
sbb
mov
inc
cmpsl
int
mov
cwtl
xchg
cmp
mov
jmp
jbe
jl
call
stos
popa
repz
sub
push
je
cmp
mov
push
arpl
fadd
loopne
add
mov
test
ljmp
gs
bound
add
dec
mov
sarb
push
add
pop
fsubp
add
out
aaa
iret
enter
jp
into
cltd
sub
pop
sbb
push
jmp
mov
sub
int
xchg
fadds
adc
fwait
xchg
insl
add
out
movb
push
mov
fstpl
or
popa
fadds
mov
mov
out
jne
or
pop
aaa
pop
repz
mov
adc
fadds
add
push
lahf
jbe
jne
mov
push
fstps
add
cwtl
dec
pushf
scas
mov
pop
jle
fwait
mov
js
xor
ds
cmp
je
mov
hlt
inc
jns
mov
push
insl
sbb
mov
add
and
or
ret
xchg
adcb
fnstcw
sub
push
jb
or
scas
test
fimuls
jp
pop
jp
xchg
lods
push
faddp
sbb
clc
fwait
negb
add
stos
pop
sbb
int3
dec
or
add
xchg
hlt
stc
add
adc
and
mov
imul
imul
insl
hlt
stc
jne
add
scas
aaa
adc
or
pushf
repz
jne
fsubrl
add
cltd
jmp
and
rclb
leave
adc
add
lret
movb
cs
add
pop
pop
mov
loop
hlt
stos
cmp
test
sbb
or
into
jo
pop
jg
inc
pop
mov
sahf
fcoml
add
in
sbbl
test
test
leave
add
push
mov
add
movb
mov
push
dec
insb
lret
add
das
test
xchg
pop
add
test
mov
add
sub
and
shl
cmc
xor
xor
jmp
gs
or
cltd
test
fs
mov
add
rolb
movsb
xchg
sub
fadds
dec
xchg
push
test
rcrl
xchg
adc
inc
mov
sub
add
xchg
pop
sub
lods
rorb
imul
repz
lea
nop
add
xor
outsb
or
negb
push
mov
iret
jle
add
cli
sbb
call
imul
push
xchg
inc
pop
sub
cmp
das
and
mov
cmp
test
into
adc
addl
push
push
rolb
outsb
jmp
loopne
xchg
bound
cmc
pushf
push
dec
ds
or
jle
lock
out
cmpsb
sub
sbb
push
add
fldcw
loopne
inc
mov
adcb
jmp
add
cld
xchg
in
rcr
jp
sub
aam
xor
jbe
mov
or
fwait
cmp
adc
call
fwait
add
das
pop
jb
ret
push
icebp
out
les
jo
mov
or
std
bound
loopne
aad
sub
cmpsl
add
cwtl
addb
fndisi(8087
mov
pusha
mov
dec
cmp
dec
add
cmpsb
push
add
test
mov
sub
add
cmp
push
mov
cmp
add
insl
jne
loopne
xchg
es
fcomp
adc
iret
pop
pop
lock
mov
jp
sbb
add
imul
xchg
sbb
loopne
aam
ret
and
lea
add
scas
sahf
in
inc
loope
sub
push
in
in
lock
imul
sub
lea
mov
hlt
add
jl
aam
bound
and
stc
faddp
lret
shlb
adc
dec
bound
arpl
loope
sbbb
test
mov
es
adc
add
and
stc
and
fistps
scas
push
or
push
push
les
sub
dec
addb
mov
mov
rolb
pop
cltd
sbb
dec
pop
stc
mov
rolb
add
iret
movsl
jae
and
cs
cmp
mov
mov
add
jns
insb
add
push
sarb
and
add
mov
push
push
push
inc
push
imul
cmp
add
jbe
lods
xor
rcrb
gs
adc
int3
add
and
lds
cltd
outsb
jmp
fadds
adc
xor
pop
test
and
mov
sbb
pusha
pop
jmp
lret
jno
faddl
int3
test
pop
cs
cmp
push
mov
xchg
lock
mov
sbb
rclb
xor
pop
or
add
scas
stos
jl
ret
mov
jmp
rolb
lds
and
add
dec
push
popa
jp
lret
xchg
cwtl
mov
popa
stos
add
add
sbbl
jae
and
add
repnz
lcall
rcrb
subb
push
sub
add
das
cwtl
mov
fldt
lds
movq
sbb
and
push
pusha
jecxz
mov
dec
sbb
add
int
cld
xor
loopne
popf
pop
filds
sub
fwait
push
das
mov
shll
lds
mov
xor
mov
lea
push
dec
xlat
aaa
andb
fldcw
popf
ljmp
sbb
inc
es
xor
outsb
pop
mov
and
mov
fnstenvs
fcmovnb
out
add
popa
loopne
cs
cmp
addr16
add
jge
outsb
and
push
xor
cld
outsl
add
and
xor
lods
add
mov
dec
jno
add
add
rorb
movsb
shll
adc
inc
mov
test
push
call
stos
sub
pop
sbb
dec
mov
shll
push
jp
add
push
sti
pop
add
push
andb
add
mov
inc
shll
into
adc
clc
jnp
and
loope
add
ljmp
imul
mov
mov
in
sub
xor
cmpl
testb
add
mov
pop
adc
fistps
loopne
xchg
adcl
test
pop
lock
ficompl
jle
or
xorb
dec
fdivr
xchg
add
xchg
test
ficoml
pushl
in
cwtl
pusha
jmp
aam
xor
or
add
stc
into
mov
pop
dec
fiaddl
inc
in
mov
jg
mov
sbbl
inc
cmp
dec
pop
fistl
mov
add
push
psubusw
mov
mov
xor
jl
add
adc
cmp
fidivrs
mov
jb
test
stos
arpl
sub
mov
nop
dec
sbb
scas
rolb
sub
cwtl
pop
add
subl
or
loope
sub
jno
pop
mov
das
jmp
ret
add
imul
rorb
and
mov
andl
adc
cmpsl
mov
mov
dec
push
add
mov
mov
add
fs
clc
or
pop
jg
add
jo
sahf
xchg
mov
add
rorb
faddl
std
test
jno
add
scas
add
add
shll
sub
xchg
cmp
cmp
scas
jp
js
cmp
addl
es
cmp
cmc
mov
add
cmpsb
xor
add
rclb
add
xchg
and
or
mov
out
fnsave
xchg
xchg
add
mov
std
bound
add
enter
xlat
and
mov
pusha
iret
add
enter
nop
pusha
push
adc
fldl
mov
push
in
add
aam
into
clc
loopne
mov
xchg
scas
aas
roll
mov
aam
or
xchg
int3
add
ret
pop
leave
shlb
cmp
sbbl
sub
mov
dec
sub
xchg
add
movsl
xchg
bound
add
sub
dec
jp
nop
fwait
movsb
nop
lcall
push
outsb
popf
pop
jns
cli
or
clc
add
movsl
add
loope
aam
es
and
xchg
push
rclb
or
mov
sbb
push
mov
xchg
vpmacssdqh
daa
jo
push
xchg
add
add
xor
mov
inc
inc
adc
lret
out
sbb
add
ds
ja
mov
testb
inc
jge
cmp
mov
mov
add
add
cmp
leave
jno
in
faddl
mov
xlat
pusha
inc
jge
add
sub
outsb
push
add
xor
add
ret
dec
data16
mov
mov
push
add
adc
cmp
mov
int
cmpl
pop
ret
add
test
push
ja
push
and
xchg
in
incb
add
adc
loopne
lock
add
dec
das
cmpsb
cmp
mov
sbb
and
xchg
jns
mov
out
mov
xorb
sbb
pop
add
in
cmpsb
ja
lock
mov
inc
inc
incb
xchg
leave
pop
mull
add
add
cmp
xchg
ja
or
cltd
and
das
ljmp
mov
cmp
sarb
cmpsl
orb
xchg
pop
inc
shlb
mov
lcall
out
fistps
into
or
sbb
add
xor
push
cmpsl
xor
add
pushf
jg
call
rorl
push
sub
mov
daa
inc
jno
pop
vmread
scas
pop
loope
xchg
bound
pusha
mov
and
and
movsb
sub
mov
xchg
call
fsubs
rolb
cmp
add
cmpb
cmc
pop
add
rcll
add
outsl
ljmp
insl
pop
mov
mov
xchg
add
mov
lcall
pop
dec
dec
push
cmp
add
xchg
pop
inc
lret
decl
js
or
and
xchg
gs
adc
shl
lods
jnp
xchg
xor
repz
mov
add
cld
pusha
in
xchg
mov
and
sub
xor
xchg
push
and
lahf
and
mov
jp
es
lcall
in
cmp
nop
mov
lea
push
add
adc
icebp
orl
jmp
push
push
add
aaa
cmpsl
sbb
or
lock
jb
mov
lods
xor
pop
mov
or
push
inc
nop
pop
cwtl
andb
mov
xor
in
movb
hlt
in
int
pop
fnstcw
xor
mov
mov
jo
fisubrl
clc
jle
mov
inc
fnstsw
mov
fdivs
jno
std
cmp
sub
cld
fmul
xchg
jmp
and
pop
mov
cmpsl
pop
dec
xor
das
push
and
inc
outsl
sub
push
pusha
and
cmp
jl
sbb
aad
mov
xchg
test
repz
andl
loop
jns
ja
enter
and
cmp
cwtl
cli
mov
dec
rolb
and
push
cmpsb
mov
leave
add
enter
clc
call
xchg
push
cmp
push
cmp
outsb
pop
loopne
cltd
or
mov
mov
insl
mov
add
std
mov
xor
inc
data16
and
pop
mov
icebp
imul
loope
add
xchg
push
loopne
repnz
dec
decb
dec
sarl
cmpsl
nop
pop
int
je
mov
test
movsl
fdivrl
adc
lock
outsb
in
roll
ret
rcrb
add
hlt
das
aas
subb
add
pusha
push
in
and
push
mov
fs
adc
inc
add
stos
and
mov
insb
push
sub
les
out
add
sbb
sarb
sahf
fldcw
inc
insl
add
pop
add
ret
mov
xor
push
pop
and
jo
adc
inc
xor
cli
test
sarb
insl
push
in
clc
repnz
jb
push
or
adcl
push
fdivrs
dec
les
aas
adc
stc
mov
inc
addb
or
add
enter
mov
cmp
leave
add
mov
mov
notb
xchg
hlt
pop
jno
flds
adc
inc
xor
add
mov
xor
lret
int3
sarl
in
aad
cmp
out
adc
mov
inc
dec
scas
xchg
push
xor
jae
in
sub
popa
cmp
add
mov
ss
dec
add
push
cli
push
lahf
jns
popa
push
aam
hlt
shlb
pop
ss
loope
call
sbb
xchg
sbb
mov
push
test
adc
inc
ret
xchg
and
fsubr
loope
cltd
imul
sar
jecxz
aam
aas
mov
mov
roll
and
adc
mov
xor
sbb
add
and
xchg
dec
mov
rclb
sbb
cli
xor
push
out
dec
mov
push
sbb
jmp
inc
adc
xchg
iret
add
pop
adc
rolb
dec
xor
jmp
mov
cli
repz
and
ljmp
iret
sbb
inc
ss
repz
notb
cmp
loopne
pop
icebp
fwait
push
add
xchg
lahf
jno
jae
cmpsl
push
pop
adc
xchg
inc
mov
lcall
adc
addr16
sbb
push
inc
lret
pop
sub
add
mov
add
xor
adc
ret
dec
sbb
insb
inc
mov
jecxz
jg
mov
pusha
sub
sarb
adc
jge
jnp
and
fdivs
cli
arpl
pusha
pop
addb
into
jb
dec
and
iret
stc
aam
pop
mov
xchg
ljmp
cmp
or
and
rclb
add
sti
mov
scas
aaa
add
pop
ret
adc
and
ret
lahf
jbe
cltd
scas
sbb
mov
cwtl
add
sub
mov
jo
scas
add
stc
push
in
daa
popa
fs
mov
in
add
inc
repz
jg
fdivl
aaa
sbb
shll
ret
ret
mov
sbb
ja
adc
lret
xchg
idivb
cmpsb
movl
data16
add
int3
push
xor
divb
xor
push
roll
mov
adc
sbb
rolb
imul
insl
xor
inc
pop
cli
xchg
outsb
pop
mov
and
add
xchg
enter
fxtract
hlt
sbb
add
rclb
jp
sbb
mov
add
cmp
ja
pushf
cmp
xor
mov
movsl
shlb
repnz
cltd
sbb
jo
add
and
je
sub
das
rorb
mov
loope
add
lea
test
popl
pop
lcall
pop
add
or
and
loopne
add
jle
sbb
sbb
jo
jns
in
es
repnz
xor
dec
dec
addr16
jno
push
cmp
pop
sbb
mov
ret
xorb
jo
andb
repz
clc
add
pop
daa
aad
aam
add
es
adc
in
mov
dec
stc
mov
cmp
mov
int
jne
lahf
nop
daa
or
outsb
inc
fbstp
inc
add
sbb
cltd
mov
push
stos
clc
xor
sub
push
push
cwtl
jge
cmp
xchg
xchg
fstpl
jb
push
and
imull
enter
jle
add
push
js
je
rcrb
pusha
sti
adc
loopne
in
hlt
movl
ret
sbb
fnstcw
sahf
imul
int3
add
inc
jl
dec
mov
xor
ror
push
sbbb
cmp
lods
outsl
fwait
pop
xchg
test
cld
data16
or
or
add
or
outsl
push
sub
push
stos
cmp
add
jl
inc
add
iret
and
popf
movsb
xchg
or
push
jno
in
xor
jb
fimull
int3
mov
out
dec
movl
ja
je
add
xchg
dec
dec
insl
sub
bound
inc
pop
xor
cli
push
orl
add
or
rorb
mov
aaa
cwtl
and
fadds
mov
or
and
insl
enter
jle
push
mov
and
in
add
cmp
dec
lock
sbb
cmc
fldt
testl
sbb
loope
xor
aad
mov
rcrb
ficoms
adc
sub
add
push
les
push
xchg
add
lods
jae
mov
cmp
in
mov
push
adc
dec
push
mov
jbe
loop
daa
add
enter
inc
lock
add
sub
jge
inc
dec
mov
movsb
inc
cli
mov
push
add
inc
sbb
push
or
sub
xor
push
jne
cmp
shrl
paddq
enter
inc
add
pop
scas
fnsave
and
loop
push
mov
add
or
dec
dec
hlt
and
into
mov
pop
imul
xor
loopne
add
int3
bound
push
shrb
inc
sahf
dec
add
inc
lea
add
and
mov
mov
test
cli
xchg
cmp
mov
scas
inc
push
dec
mov
fidivl
dec
loop
aaa
xor
pop
or
sub
lds
or
mov
jnp
add
mov
les
xchg
or
stos
clc
sahf
js
add
mov
push
dec
add
in
popf
adc
mov
xchg
add
push
add
shl
mov
dec
ds
je
loope
and
sbb
add
fimuls
or
rcr
dec
push
mov
adc
mov
and
and
inc
xchg
pusha
out
mov
pop
orb
jle
add
out
nop
ds
cmpsl
cmp
cld
mov
xor
add
icebp
xor
adc
addr16
xlat
fucom
mov
int3
lcall
inc
mov
or
sbb
mov
scas
xchg
xchg
out
out
add
pop
or
mov
push
mov
or
fiaddl
setge
jns
shlb
bts
inc
pop
addr16
jg
repz
xor
rcll
dec
mov
repz
ja
add
sbb
mov
shlb
test
add
mov
in
pusha
sbbb
mov
lcall
jg
and
nop
in
das
jns
loop
pusha
add
cmpsl
xchg
sub
cmp
stos
pop
mov
fmull
ds
mov
adc
sbb
mov
in
inc
add
loopne
stos
shlb
pop
or
or
lock
iret
add
stos
andl
cld
lods
popa
pop
adc
adc
or
repz
push
add
pushf
cmp
mov
dec
or
inc
push
sub
pop
test
add
adc
pushf
xor
mov
dec
sbb
mov
loopne
xor
jae
in
mov
add
inc
pop
sbb
sbb
repnz
xchg
xchg
outsb
out
inc
mov
popa
cmc
cmp
call
inc
xchg
mov
cmp
pop
xorl
sub
jle
mov
mov
nop
and
das
xor
ss
pushf
js
add
inc
adc
aam
adc
ds
xchg
pop
push
mov
pop
subl
sbb
add
sub
cmp
shl
mov
jmp
lret
xchg
add
test
mov
cwtl
punpckhbw
add
cld
sahf
add
jb
pop
and
nop
inc
xor
es
lret
movsb
xchg
mov
xlat
inc
pop
inc
mov
imulb
jmp
mov
jae
add
jnp
fwait
in
in
push
push
dec
inc
scas
adc
imul
cmp
adc
cmpsl
jmp
dec
test
shrd
mov
bound
and
cmpsl
push
adc
fs
in
pop
out
push
xchg
add
xor
pop
jns
sub
mov
das
inc
nop
cmc
sbb
dec
arpl
je
popf
leave
jge
pop
out
add
lods
pop
jnp
jge
add
cmp
mov
movsb
push
cli
add
dec
sysret
je
loop
loopne
shl
repz
inc
jg
ljmp
rcr
fldcw
sbb
mov
in
hlt
add
gs
sbb
cmpb
out
add
loope
insb
push
movl
push
xchg
faddl
sub
int3
loopne
imul
cmp
bound
mov
sub
loopne
add
sub
iret
add
popf
int
test
mov
mov
mov
xor
lock
rclb
scas
fisubs
mov
mov
pop
lods
pop
fs
dec
mov
addb
pop
cmp
js
xchg
lcall
cmp
lods
pop
fnsave
shrl
fwait
loopne
and
jo
cmp
pop
mov
clc
jl
adc
out
inc
adcb
pop
cld
mov
add
ret
xor
aas
add
sbb
sbb
mov
add
and
cld
into
and
xchg
jne
sbb
add
or
add
mov
jo
add
test
add
nop
ss
and
mov
push
aas
das
call
push
add
mov
testl
enter
aam
or
pop
mov
and
invd
mov
outsb
cmp
test
mov
dec
adc
pusha
add
stos
ljmp
mov
test
mov
cmpsb
push
add
ret
pop
xchg
ljmp
lcall
sub
stos
inc
outsb
sub
add
int3
push
push
in
push
push
aaa
cmp
in
pop
cmc
ljmp
adc
mov
sbb
or
pop
daa
pop
pushf
sub
int
aaa
lods
cmp
outsl
and
mov
sbb
roll
inc
ss
sub
pusha
jbe
and
push
clc
dec
pop
lock
mov
imul
mov
add
or
sbb
negl
dec
jb
inc
inc
add
gs
incl
inc
jae
xchg
pop
fdivrl
sub
push
out
test
icebp
add
pop
add
cmp
pop
lea
push
fcmovb
push
int3
popf
mov
enter
je
add
mov
lcall
mov
jne
or
inc
xor
and
or
cmpsl
movq
sub
add
pusha
and
jb
mov
ds
outsb
add
jge
push
sub
add
hlt
mov
out
add
dec
stos
call
mov
pop
and
popl
jo
push
mov
pop
das
xor
sub
and
mov
push
arpl
and
mov
jp
and
in
push
add
ret
xor
into
cmp
fidivs
mov
and
scas
pop
fbld
add
adc
js
mov
add
xlat
sbb
sub
push
xor
mov
cmp
jns
jmp
sbb
mov
aas
nop
stos
add
mov
mov
sbb
icebp
cli
jo
cmp
add
cmp
pop
push
cld
add
js
cmpsb
dec
pusha
jo
repnz
aas
out
sbb
insl
xor
dec
adc
add
inc
icebp
mov
sbb
add
lcall
push
sbb
into
xlat
add
aas
jg
call
push
add
add
add
out
xor
xlat
dec
add
daa
xor
mov
enter
jp
or
in
cmp
mov
xor
cmp
pop
push
stos
lcall
cmp
push
xchg
int3
add
adc
inc
pop
das
inc
mov
lret
mov
popa
rolb
adc
int3
pusha
ja
pop
aam
cmpsb
icebp
fdivl
xor
ret
sbb
stos
neg
std
loopne
sub
dec
jp
loopne
maskmovq
divl
sub
cltd
mov
lods
sub
sbb
fildl
rorb
xor
int
pusha
jnp
jmp
addb
incb
add
or
sbb
adc
pop
mov
js
nop
xchg
or
subb
and
in
repnz
mov
mov
cli
test
stos
popf
dec
adcb
pop
inc
testl
aad
add
mull
leave
add
sahf
pop
lods
in
imul
std
xchg
stc
mov
mov
xchg
pop
mov
js
add
in
rcrb
inc
pushf
mov
test
popf
add
ficoms
out
inc
jl
cmp
push
dec
pmulhw
shll
inc
dec
inc
movsl
and
push
sbb
into
jae
gs
cmpsl
stos
cmp
cli
fmul
add
pop
jb
fwait
push
add
mov
enter
andl
adc
test
pop
lock
add
inc
ret
dec
pop
test
cmp
xchg
je
stc
sbb
cmp
push
mov
lcall
cmp
sti
adc
in
das
mov
jle
mov
and
test
les
arpl
fs
adc
add
or
imul
dec
pop
add
xor
rorb
jge
add
xchg
sarb
add
mov
dec
fnstenv
stos
inc
add
lock
jl
add
and
clc
sub
stos
sbb
xor
sarl
jmp
xchg
xchg
ret
das
inc
pop
insb
xchg
xor
pop
mov
cmp
add
mov
gs
aam
lods
cmp
fldl
loopne
sub
mov
add
jae
fisubs
add
call
cwtl
outsb
push
ficomps
push
stc
cmp
in
andnps
add
loop
and
int
lock
xchg
aaa
add
mov
adc
xor
push
dec
pop
jns
inc
cltd
mov
divps
jl
xor
inc
inc
inc
test
not
movsl
and
addl
xchg
test
and
cltd
mov
test
mov
sbb
jge
add
in
sbb
imul
mov
inc
add
shll
in
mov
imul
cmp
cli
xlat
ror
loopne
sbb
fcomps
pop
inc
imul
jecxz
bound
sbb
mov
push
imul
adc
ffree
cmpsl
sbb
jns
idivb
pcmpeqw
push
sub
pop
add
adc
cmpl
mov
push
add
add
inc
lahf
jnp
pop
stos
int3
loope
dec
fsubrl
push
gs
dec
xlat
xor
hlt
pop
add
aaa
or
movsb
push
imul
adc
bnd
shlb
mov
xchg
or
mov
add
pusha
mov
cmp
inc
push
filds
adc
push
push
mov
add
fnstsw
xchg
push
inc
jmp
dec
sarb
ss
in
pop
insb
push
pusha
rolb
mov
fmull
add
sbb
push
mov
ret
ds
orb
jl
popa
out
mov
and
inc
flds
sbb
sub
add
inc
iret
mov
in
es
lods
roll
addb
push
lock
cld
nop
jp
sbb
pop
loope
sbb
fidivrs
mov
insb
mov
ret
mov
add
cmp
nop
or
xchg
jno
add
lds
iret
pop
lock
pushf
fmuls
imul
cmp
push
aas
and
popf
pop
jb
add
lods
rclb
mov
adc
mov
inc
xchg
pop
fmuls
loopne
rol
rcll
xchg
les
pusha
loopne
lock
sub
sbb
loopne
mov
ret
add
xorl
cmp
cmp
mov
test
int
sbb
std
inc
fldenv
push
fnsave
inc
fcmovb
rorl
mov
shl
cmc
ja
pusha
xor
add
cmp
iret
add
pushf
and
mov
pop
mov
or
or
stos
push
bound
mov
add
sbb
pushf
int3
addl
test
fistl
sahf
sub
cmpsl
lahf
mov
and
dec
sub
push
ljmp
lahf
sub
push
xor
adc
mov
jno
popa
shrb
out
jmp
mov
leave
mov
popf
sbb
fcoml
inc
std
daa
flds
pop
add
popa
outsb
xor
aam
lods
rorl
aas
aaa
int
mov
add
sbb
adc
jno
rol
cmp
cs
mov
addr16
rcll
add
push
lods
call
fwait
lahf
mov
inc
mov
mov
xchg
inc
add
adc
cld
fistps
pop
adc
add
mov
pop
popf
sub
outsl
and
test
push
ja
add
mov
sbb
std
push
aas
in
test
push
fisubl
mov
pop
iret
jge
out
dec
add
inc
cltd
ljmp
add
pop
xor
imul
inc
dec
rcrb
addr16
call
jg
mov
xchg
shlb
dec
fdivrs
mov
fldl
and
ds
mov
sbbl
xorl
add
sub
mov
pop
ds
ret
inc
rcrb
mov
mov
inc
clc
mov
mov
js
cmp
add
or
fistps
dec
cmp
xchg
mov
insl
addr16
xchg
lods
jae
xorl
mov
decb
insb
pop
pop
testl
cwtl
lds
xchg
xor
xchg
adc
lret
insl
jb
aam
adc
popa
fisubl
jp
add
adc
cmp
add
loopne
jno
in
mov
pop
dec
cmpsb
shl
popf
daa
jo
aam
ficompl
lea
movb
lcall
or
movups
adc
add
inc
xor
adc
adcb
out
insb
add
adc
ret
push
sbb
outsl
lcall
fs
mov
jnp
mov
lds
xchg
cmp
daa
addr16
xor
std
jp
add
push
sub
add
fs
rclb
xlat
add
sub
popf
adc
cmpsl
nop
mov
sub
loop
lret
sub
popf
test
roll
add
imul
pop
pop
fnstenv
out
xor
add
sti
roll
fldl
sbb
lret
push
loopne
insl
ret
jbe
inc
sbb
jle
dec
outsb
addb
icebp
outsl
pop
sub
into
add
xchg
arpl
xorb
lods
xor
xor
jmp
adc
paddb
outsb
add
cwtl
push
mov
test
xchg
or
dec
inc
out
push
pop
loope
mov
test
add
cmp
flds
in
lcall
mov
cmc
lret
faddl
add
mov
jl
xchg
jo
fs
ljmp
sarb
add
mov
lds
add
adc
or
outsb
jae
add
xor
imul
cmp
fldl
sub
orb
mov
xor
fstpl
addb
add
mov
xchg
sarb
aas
xor
and
cmc
inc
jae
cmp
pushf
vpmadcswd
mov
in
insb
mov
add
jbe
add
test
add
xchg
push
negl
rcrb
data16
mov
mov
imul
xchg
xchg
or
pop
xor
sbb
sbb
sarb
push
fsubs
not
sbb
jns
addb
jmp
cwtl
push
jle
add
or
mov
sbb
pop
xchg
add
in
add
mov
imul
add
repz
rorb
sbb
pop
xor
shr
insb
or
shlb
std
xor
lret
lock
stos
mov
cmp
mov
add
pusha
push
adc
sub
cmp
sarl
inc
jns
add
dec
mov
repz
leave
jbe
add
js
ljmp
and
push
and
adc
sbb
push
push
jb
or
lods
sbb
mov
sub
or
add
icebp
int
aaa
jne
xchg
lret
lods
adc
or
insl
loopne
movsb
leave
push
loopne
mov
lods
sbb
sub
test
pop
or
add
or
cmpsb
adc
add
pop
wrmsr
or
xor
inc
clc
xor
push
pop
mov
aaa
fsubrs
jo
shr
pushf
js
cmp
leave
inc
mov
mov
sbb
or
inc
stc
dec
adc
adc
mov
mov
and
xor
add
or
mov
push
mov
adc
not
mov
add
inc
mov
fisttpll
int3
loope
cmp
add
out
mov
xchg
add
cwtl
test
nop
xchg
lock
add
or
lahf
imul
add
cld
jle
in
dec
pop
pop
add
jbe
push
sbb
xchg
sbb
sbb
retw
dec
inc
clc
jge
or
jnp
mov
push
ret
nop
les
xor
mov
popa
add
mov
mov
cmpsb
jo
lea
call
hlt
pop
add
mov
cwtl
nop
mov
jo
clc
add
movsl
mulb
mov
add
lea
repnz
cmp
cmp
xor
add
push
lds
add
xor
mov
clc
jl
aas
enter
repnz
inc
xchg
cmp
xor
aam
cmc
fimuls
test
das
lret
es
jp
cld
lods
add
dec
mov
dec
out
ret
adc
fistl
mov
rep
fwait
loop
pop
pop
jmp
xor
ret
mov
repnz
pop
pop
sbb
adc
test
imull
pop
inc
cmp
vcvtsi2ssl
ds
and
pusha
xor
jb
add
ret
lahf
std
pop
js
add
ja
mov
cmpl
das
ds
xorb
mov
addl
inc
push
pop
add
inc
clc
dec
push
pop
inc
lds
rorl
xor
test
cmp
in
shlb
stos
rcl
in
fistpl
add
adc
test
adc
xchg
add
lcall
cmp
imul
mov
mov
jmp
popa
ret
adc
xchg
lahf
rol
fidivl
mov
mov
jo
inc
dec
mov
cmc
xor
clc
and
and
call
rolb
fldl
scas
xchg
mov
adc
xchg
shrb
mov
cmp
in
push
pop
popf
mov
sbb
push
adc
clc
add
and
mov
dec
rolb
xchg
mov
imul
mov
mov
add
cmpsb
sar
adc
lds
push
sti
fistpl
std
shrb
mov
add
out
arpl
add
adcl
dec
sub
jbe
aam
add
sbb
jb
add
out
push
or
add
xor
pusha
fldcw
popl
js
out
dec
pop
in
push
or
add
xor
add
dec
aad
jmp
xchg
cmp
add
lds
subb
xor
mov
jmp
xchg
inc
mov
lret
insb
jo
add
cld
adc
rcr
xchg
xor
aaa
push
push
and
nop
sub
shll
push
xor
cmp
popa
pop
les
pop
cs
loope
xor
cwtl
add
hlt
mov
testb
repnz
clc
jne
les
cmp
xor
cs
lds
outsl
and
outsb
mov
mov
in
pop
js
ss
add
mov
xlat
add
push
jge
test
inc
incb
gs
lea
movsl
adc
jle
mov
xor
pop
test
shlb
popf
cltd
pop
lods
and
les
dec
movsb
stos
ss
adc
dec
xor
push
pop
pusha
dec
addl
dec
mov
push
sbb
into
mov
shll
aaa
xchg
mov
xorb
mov
cmp
add
data16
add
mov
lods
repnz
add
push
mov
leave
ret
mov
shrl
sbb
pusha
int3
testb
jge
dec
adc
push
adc
jbe
into
sbb
xor
rcrl
scas
add
icebp
pop
cmpsb
push
enter
and
testb
xlat
ds
mov
sbb
sarb
aam
and
add
js
pop
fildll
movl
adc
lock
out
push
mov
cld
cmp
lahf
icebp
roll
stos
pop
cmp
adc
fcoms
dec
test
mov
mov
add
arpl
xlat
xchg
adc
xchg
push
call
lea
shlb
mov
xchg
xchg
js
popa
dec
sbb
sbb
das
jl
movsb
movsb
imul
lea
mov
hlt
add
sbb
pop
cmpsl
push
sub
pop
add
loopne,pn
inc
pop
push
mov
lcall
jmp
or
orb
add
adc
add
sbb
push
and
enter
push
dec
call
or
cmp
jne
pop
mulb
lods
add
mov
lods
or
ret
loopne
cmp
les
or
adc
lds
mov
and
mov
jo
out
bound
int
iret
int3
andb
xchg
inc
ret
mov
add
sbb
jns
out
inc
aas
add
into
sbb
xor
add
mov
cmp
ret
add
enter
add
cwtl
lods
out
sbb
pop
out
jae
add
pop
cltd
xchg
addb
xor
cmp
subb
mov
and
inc
pop
pop
ds
int
arpl
bound
add
ljmp
add
xchg
test
cld
lret
xor
ret
ret
xor
orl
sarl
mov
push
inc
mov
inc
jb
outsb
shrb
call
jp
test
shl
mov
mov
lock
jge
lods
and
shll
xchg
stos
adc
xor
mov
mov
lahf
xor
and
std
xchg
ljmp
sub
dec
mov
xchg
dec
ret
fdivr
mov
sbb
addl
pop
outsb
rorb
rcpps
test
mov
adc
and
xchg
cmp
mov
int
cmpsl
inc
fdiv
movsb
xorl
mov
dec
stos
cmp
ljmp
and
fldenv
and
clc
jns
rcl
push
icebp
push
pop
push
les
pop
jnp
add
cld
sbb
leave
movsl
lds
mov
mov
push
mov
adc
and
mov
adc
dec
out
xlat
and
mov
clc
xchg
and
std
xor
push
clc
sub
add
cmp
and
aas
fnstcw
push
adcb
outsl
sbb
test
jecxz
test
add
xchg
xor
sbb
jns
aas
out
add
sti
mov
and
push
rcr
nop
inc
negb
aam
adc
cmpsb
into
pop
sarl
jae
xor
push
xchg
jno
mov
std
mov
dec
adc
aam
jo
mov
sarl
sbb
jge
sub
pop
imul
ror
add
cmp
mov
adc
inc
imulb
add
xor
iret
xchg
in
pushf
sbb
pop
jl
push
decl
rorl
mov
sub
dec
into
in
sarb
enter
cmp
cmpsb
aaa
dec
sub
inc
and
cmp
dec
rolb
inc
adc
or
pop
and
repnz
outsl
xchg
sub
sub
add
in
mov
test
cmp
imul
scas
or
aas
jecxz
or
jo
mov
mov
jl
jle
aas
pop
jne
sub
fsubr
push
mov
and
sub
movsb
sbb
mov
inc
mov
add
or
and
fdivl
mov
xchg
jl
pop
xor
mov
xchg
lret
sub
pop
jge
cmp
push
add
lock
pop
repnz
jmp
aam
and
or
mov
int
ja
cvtps2pd
aad
sub
adc
mov
test
adc
pop
pop
jmp
dec
std
cltd
shlb
xchg
add
sbb
enter
add
dec
mov
add
mov
std
pop
scas
sbb
pusha
pop
fldt
xchg
mov
scas
add
ficoms
je
lock
ret
sbb
ja
filds
lcall
test
sbb
add
pop
sbb
push
incb
and
es
xor
sbb
in
add
ja
enter
jo
inc
andl
test
out
lahf
mov
scas
push
rolb
inc
insl
in
mov
and
push
jne
push
aad
cmp
addl
xchg
add
pop
xor
enter
add
nop
subb
mov
test
clc
bound
pop
incl
xchg
sbb
sarb
inc
mov
bswap
adc
cmpsb
pusha
add
test
and
add
pushl
or
nop
cmpl
push
dec
test
jns
push
scas
push
or
test
test
shlb
adcb
cmp
test
dec
and
dec
cmovno
data16
call
shll
add
pop
push
pop
orb
andl
inc
sbb
rorb
ss
push
push
test
movsl
cmp
and
and
lahf
cwtl
pop
adc
test
add
das
inc
rcrl
insb
cmpsl
mov
rcl
sarb
mov
mov
mov
push
xor
push
fwait
sahf
sbb
imul
or
dec
mov
sbb
sbb
pop
push
lret
fisttpl
lods
movsb
sub
mov
insb
adc
and
mov
stc
movsb
inc
or
jno
push
test
sbb
insl
mov
mov
inc
adc
cmp
aaa
or
filds
pushf
test
add
stc
xor
cltd
nop
enter
incl
sbbl
push
sbb
insb
xlat
inc
mov
or
sbb
and
cld
pop
popa
inc
cmp
pop
or
jns
nop
fadd
and
add
es
js
pop
cmp
rclb
fildl
or
or
jno
ja
add
mov
mov
add
jp
nop
das
insb
clc
pop
add
cwtl
enter
fwait
sbb
stc
adc
fdivrs
ss
jns
mov
add
imul
lock
insb
scas
popa
push
adc
in
and
add
outsl
cmp
adc
popa
sub
aam
test
and
cmp
push
pushf
mov
outsl
fdivrs
add
test
andb
decb
xor
in
sbb
cmp
loopne
xchg
add
sbb
xchg
das
int3
push
out
loopne
mov
imul
dec
add
jb
loopne
loopne
arpl
jp
pusha
loope
cmp
popf
add
xchg
das
and
adc
mov
dec
mov
pop
sub
ss
ret
pop
and
jo
enter
sub
aam
das
and
dec
add
jo
daa
stos
andb
cmp
subl
add
jb
sbb
pop
int3
je
sbb
add
dec
push
fwait
enter
add
mov
mov
and
pop
mov
adc
jl
mov
les
push
test
clc
out
push
inc
ljmp
push
dec
lock
mov
mov
ret
mov
add
xchg
insl
pop
into
test
pop
jmp
jmp
outsl
out
loop
add
inc
and
mov
jmp
ds
bound
shlb
dec
push
fs
adc
andb
scas
pop
inc
or
push
addr16
inc
xor
pop
push
fwait
sbb
stos
xlat
sahf
pop
test
aaa
movsl
jae
imul
aas
andb
push
pushf
and
leave
or
add
mov
add
push
mov
rol
sub
pop
add
xchg
cmp
add
jp
mov
aaa
pushf
push
add
dec
movsb
adc
inc
xor
mov
es
mov
or
lret
jnp
inc
out
add
movsl
arpl
add
inc
bnd
lea
cmp
adc
xor
rorl
lods
jp
push
idivb
add
imul
call
xorl
cld
or
aas
pop
add
jmp
popf
mov
out
iret
pop
dec
lcall
add
xchg
in
cmp
shrb
lret
adc
pop
mov
rclb
xchg
fisttpll
cwtl
cmpsb
add
cmp
sub
cmp
jns
pop
test
jmp
jne
mov
and
enter
dec
loope
add
fistpl
add
ds
pop
sub
mov
dec
sub
add
stos
cs
or
pop
xlat
lret
cmpsb
into
mov
adc
incl
dec
push
mov
add
cmp
das
add
fmuls
jge
sub
mov
imul
pusha
adc
sarl
xor
mov
or
test
inc
repnz
mov
cltd
sbb
mov
inc
shl
jae
or
dec
and
mov
aas
add
lock
push
popa
add
dec
sub
add
mov
jbe
pop
dec
cmp
push
and
das
or
aaa
lock
test
xor
adc
push
push
popa
fsubr
and
fs
pop
add
outsb
sbb
fiaddl
jle
add
mov
xlat
rolb
add
sar
lahf
push
push
das
data16
fmull
add
jnp
jg
aad
xchg
fisttpl
add
pop
mov
add
add
ret
popf
mov
pop
cmp
loope
add
jae
sub
psubb
pop
cmc
punpckhwd
pop
cmp
movsl
add
mov
and
loop
push
pop
push
stos
push
mov
insl
andb
add
stos
popf
push
add
pop
xchg
cmp
data16
lds
xchg
push
sbb
jb
add
pop
mov
ljmp
outsl
data16
enter
loope
lds
xchg
adc
out
dec
push
lea
add
outsb
and
push
or
out
faddp
push
inc
push
pop
shr
mov
add
stc
lea
cmpsb
dec
jns
jg
push
mov
sub
cmp
jb
mov
jae
adc
imul
add
and
nop
or
add
cld
rorb
xchg
shrb
iret
fisubrl
call
mov
cwtl
add
jmp
or
dec
pop
outsl
cmpsb
mov
pop
inc
fisubs
add
pop
enter
jmp
into
lcall
add
mov
mov
jp
imul
sahf
sub
adcl
lds
into
xor
sub
xchg
sub
xor
push
sbb
call
loope
aam
sub
iret
sub
fcoml
mov
pusha
ret
xchg
pusha
cmpsl
xchg
flds
jl
add
add
notb
push
out
and
fisubl
fdivs
sarb
push
pop
jne
mov
add
mov
cli
add
xlat
out
mov
adc
add
jno
daa
push
mov
jo
add
rol
inc
add
test
loopne
pop
fnstsw
popa
adc
into
push
sbb
jne
mov
jge
bound
sub
push
add
into
mov
insb
sub
jae
cwtl
and
pop
add
xor
xor
mov
jmp
shlb
add
ret
add
adc
lcall
aad
out
mov
add
inc
aas
mov
outsl
add
sbb
pop
into
hlt
shrw
xchg
lret
add
jnp
loopne
pop
add
test
pause
pop
lods
add
cld
pop
mov
ss
push
mov
push
pop
mov
movsl
add
gs
push
push
push
scas
aam
cmc
cmc
adc
add
cmp
fwait
add
fidivs
add
mov
dec
imul
mov
add
fs
test
add
aad
fldl
out
cmc
outsl
add
mov
out
and
ja
into
jae
pop
aas
mov
mov
loopne
add
aam
scas
sbb
inc
sti
sarl
or
les
in
sbb
jb
add
out
stos
fidivrs
or
lcall
pop
xor
repz
lret
mov
inc
in
inc
ss
call
or
xchg
scas
mov
pop
sti
and
loop
out
add
clc
inc
fstpt
dec
pop
add
negl
add
clc
mov
test
lret
int3
sub
add
xchg
xchg
add
cmp
repnz
inc
jb
add
add
sbb
adc
aam
rorl
je
push
filds
mov
push
or
call
add
ja
push
test
inc
sbb
add
pop
cld
in
dec
dec
add
push
insl
in
cmp
jae
xchg
hlt
add
shl
fiaddl
jg
nop
sub
and
imul
add
mov
rcr
adc
add
inc
push
sbb
outsl
imul
fwait
ds
sub
repz
sbb
mov
add
jno
inc
pop
ja
ds
pusha
jae
fiadds
mov
or
adcb
push
dec
idivb
in
lea
jb
add
fadds
mov
sarb
xor
shlb
push
sub
pop
mov
push
push
es
and
adc
scas
xchg
or
mov
pushf
xchg
adc
add
test
cs
push
out
mov
ret
inc
addl
loope
mov
bound
pop
sub
add
out
dec
pop
jbe
push
push
in
push
lret
movsb
add
inc
push
xchg
enter
pop
out
sbb
bound
test
shll
fdiv
mov
sub
add
mov
push
add
cmp
inc
jge
fldt
add
mov
sbb
lret
test
and
push
or
pusha
int3
add
ss
or
mov
pop
pop
xlat
add
sub
addb
add
or
cltd
mov
xchg
roll
add
xchg
xchg
pop
fisubrl
pop
xor
subb
pop
sub
clc
call
xor
cmc
push
dec
decb
and
jecxz
add
lea
pop
lock
ljmp
mov
adc
dec
test
ret
add
stc
fsubp
pop
orl
inc
sbb
je
or
mov
push
addb
cmp
cmp
inc
sti
fs
test
add
push
add
je
jns
push
imul
add
in
pop
mov
andb
insl
mov
arpl
call
cmpsl
sub
jecxz
or
mov
rolb
push
and
jp
lahf
and
js
cmp
jnp
dec
test
js
je
popf
out
ror
xchg
add
in
lods
leave
rorb
insl
mov
pushf
into
mov
and
repz
adc
jns
stos
jge
and
inc
mov
adc
aad
ljmp
jae
faddp
xchg
add
cmp
mov
leave
xchg
cs
xchg
add
cmp
aam
mov
pop
inc
sbbb
xlat
cmp
sub
xchg
xchg
xor
and
fsubs
call
rolb
and
sbb
xchg
ss
in
add
xchg
and
xor
aad
inc
add
sub
push
add
add
xchg
fidivrl
insb
and
mov
xchg
sub
xchg
pop
pusha
dec
jno
sbb
add
ja
jp
pop
into
stos
cmpsb
imul
pop
ficoms
adc
xchg
add
shlb
mov
mov
mov
leave
nop
aas
mov
mov
push
gs
mov
cmc
lods
into
aas
pushf
ret
sbb
aad
adc
push
andb
add
jmp
add
je
cmp
insb
jae
xchg
jno
mov
jbe
pop
add
ljmp
dec
push
rclb
shl
mov
adc
mov
dec
jae
and
xchg
inc
in
iret
add
xchg
std
push
push
mov
aaa
scas
popa
sbb
add
mov
add
add
bound
add
sub
pop
sub
sbb
pushf
popa
jmp
dec
repz
and
mov
les
inc
cmp
jge
push
add
cmc
xchg
mov
add
mov
lsl
jp
mov
jmp
cmp
aad
push
daa
and
add
mov
add
stc
inc
add
or
repnz
mov
add
sub
ja
add
mov
add
and
push
or
add
cmc
mov
pop
xorb
testl
or
cmp
cmp
shlb
add
pop
insb
sub
add
inc
iret
jo
mov
aam
mov
sub
in
rol
mov
mov
popf
lods
lret
rclb
xchg
int
outsl
sub
and
dec
adc
sbb
xchg
test
pop
inc
nop
mov
fadds
xchg
lods
sarl
test
inc
sub
or
ss
lods
xor
pop
and
dec
cmpsb
cmp
neg
jp
mov
push
jns
xorl
add
sti
test
test
rcr
out
mov
cltd
mov
popf
iret
mov
or
aad
setns
fnstsw
jmp
add
shll
xorb
and
add
jae
aam
addl
scas
jl
cmp
je
adc
inc
lret
mov
fisubrs
or
lret
xchg
enter
push
lahf
and
adc
mov
jp
xor
cmc
bound
push
outsb
enter
jb
add
cmpsb
loopne
lret
push
add
add
arpl
cli
std
test
inc
jnp
or
jle
add
jmp
test
cli
in
test
hlt
pop
adc
gs
jl
adc
faddl
fnsave
mov
add
out
movsb
mov
add
mov
js
xor
inc
add
mov
dec
lock
adc
inc
es
mov
cs
or
or
lock
mov
xor
mov
test
push
lret
mov
aam
popa
enter
ds
mov
std
daa
test
adc
mov
je
popf
mov
xlat
jne
iret
and
mov
ltr
mov
lret
loop
cmp
add
out
loopne
cmp
ret
pop
lock
push
mov
add
popa
add
imul
jne
fisttps
push
adc
outsb
jns
shll
dec
add
into
fdivrs
cwtl
sub
and
push
faddl
popa
mov
loope
xchg
std
xchg
mov
add
inc
rolb
mov
mov
out
scas
test
or
jno
ljmp
xchg
jo
or
sub
xor
pop
cmp
rcrl
loopne
jg
jg
sbb
nop
add
pop
es
rclb
cmp
pop
pop
inc
movsl
int3
add
roll
out
aas
rcrb
xor
sub
aad
xor
int
outsl
push
popa
js
je
test
mov
fcoms
or
jge
pop
pop
call
dec
rolb
iret
jmp
fadds
cld
xor
dec
arpl
mov
notb
mov
jnp
add
jb
cltd
mov
add
shll
stos
inc
cmp
es
pop
sbb
mov
mov
lods
and
imul
sbb
stos
clc
xchg
mov
cld
arpl
cmpsb
sbb
inc
jne
pop
rclb
mov
fs
or
add
adc
push
rorb
push
fcom
add
or
pusha
adc
add
lea
pop
int
call
pop
push
add
jg
cmp
lret
aaa
jl
cwtl
lods
subb
jge
and
sbb
lea
jmp
scas
add
mov
cmpsb
xor
and
add
dec
gs
pop
jmp
sbb
add
inc
sbb
mov
inc
cmp
out
mov
lds
scas
add
gs
add
out
hlt
push
loopne
xor
jnp
and
pop
outsb
clc
jo
adc
fadd
addr16
xor
mov
ljmp
scas
cmpb
cld
bound
cmpsb
or
andb
movsb
jns
call
jl
imulb
rcr
shrl
inc
xlat
add
data16
jge
out
inc
sbb
or
xchg
add
lods
sbb
pop
add
pop
push
adc
adc
add
lods
dec
xor
xor
enter
mov
adcl
inc
jl
sbb
sub
xchg
movb
adc
push
cmp
mov
dec
add
scas
rcll
in
rclb
dec
xlat
add
mov
movsb
push
imulb
inc
fmul
add
in
cmp
mov
mov
xchg
add
add
in
xor
std
popf
add
lods
mov
test
cmp
scas
aas
inc
add
xchg
sti
cltd
dec
popf
adc
hlt
ja
add
fsin
lods
sub
mov
or
fdiv
pusha
xchg
dec
mov
fnstcw
mov
push
push
and
sub
pushf
sbb
adc
nop
mov
add
mov
fisttps
jo
add
into
rcrl
xchg
dec
dec
and
add
or
sub
ftst
add
pop
jge
into
loopne
pop
push
test
stos
mov
adc
mov
jns
int
add
or
insb
mov
pop
or
dec
jp
outsl
add
rclb
sbb
inc
roll
push
or
sbb
cld
das
call
fsubl
push
push
aad
out
aad
sarb
loopne
xlat
cmp
les
test
and
test
add
pop
cmc
inc
add
ret
test
mov
cmp
stc
add
outsb
mov
mov
mov
mov
jbe
xchg
fiadds
xchg
divl
mov
pop
fwait
jbe
test
gs
icebp
daa
pop
in
in
push
push
pushf
jo
shlb
add
out
add
scas
pop
ds
cmpsb
test
pop
jb
rcl
hlt
mov
jnp
inc
insb
jo
dec
and
adc
sub
fstps
fiadds
cmpsl
nop
mov
movb
push
int
fistl
add
mov
xchg
pop
mov
iret
jle
inc
or
jl
jno
or
pop
in
push
push
dec
push
push
push
add
test
add
pop
sbb
repnz
add
insb
cmpsl
or
adc
add
add
mov
ds
shlb
mov
jb
add
or
adc
insl
mov
mov
fwait
rol
add
mov
adcb
ljmp
lcall
add
pop
cmp
sbb
in
cld
call
jmp
addl
pop
xor
sti
xchg
cli
cmp
dec
lahf
dec
pushf
lods
loop
aad
jb
or
push
pop
lcall
je
xchg
push
dec
adc
stos
add
adc
jp
mov
pusha
jae
push
xor
push
sahf
add
clc
add
adc
mov
outsb
pushf
add
push
popf
ret
lcall
and
test
lods
fisubs
jnp
fldl
sarb
fmull
sahf
add
inc
mov
add
daa
dec
jmp
or
pop
inc
dec
outsl
sbb
fistpll
push
jmp
bound
xor
jl
aaa
dec
add
loop
cmp
sub
add
std
out
adc
and
cld
lahf
adc
jge
lret
mov
cmpb
cmpsl
cmp
xor
movsb
xchg
lsl
and
xor
je
add
test
jne
add
inc
mov
add
inc
stc
adc
dec
add
sbb
daa
and
ss
leave
out
mov
mov
enter
cmpsb
into
jmp
add
std
adc
mov
add
sub
ret
mov
sbb
rclb
add
pop
dec
and
cmp
nop
jmp
add
mov
in
dec
pop
sbb
int3
scas
rorb
mov
repz
mov
ss
mov
fldl
ja
fwait
cmp
mov
mov
jae
leave
sbb
cmpsb
add
ss
mov
jns
add
push
push
or
lods
test
scas
adc
rolb
or
js
or
loop
ljmp
iret
int3
push
in
ds
insb
int3
das
filds
dec
inc
dec
inc
jae
popa
sbb
xchg
inc
add
movsl
add
xorl
inc
aad
and
cmp
xchg
mov
dec
cmpsl
jno
sbb
mov
and
add
fwait
xchg
push
push
in
int3
stos
sub
addr16
jo
cld
xchg
leave
jp
cmp
test
mov
jecxz
add
xchg
cwtl
out
add
test
mov
dec
add
sbb
jns
hlt
jle
add
outsl
add
jnp
fsub
inc
add
sub
ja
fbstp
lods
cmp
pop
and
mov
xor
sub
lods
cmp
cmp
mov
movsl
fstpl
dec
xchg
enter
arpl
in
lea
js
xor
jecxz
or
clc
pop
jp
fadds
jb
aaa
jge
decl
in
mov
lret
add
jl
sbb
adc
and
or
repz
jg
arpl
add
scas
js
add
mov
divb
inc
sub
adc
daa
cltd
out
bound
pop
or
arpl
repnz
sbbb
stos
cmp
xchg
dec
iret
jae
gs
scas
cli
mov
xorb
std
or
into
stc
add
adc
xor
hlt
mov
push
jns
outsl
and
in
adc
out
jns
push
sub
and
cmp
aaa
xchg
aas
add
aaa
push
sub
fcom
add
adc
and
push
adc
inc
int3
push
add
iret
jg
add
call
enter
cmp
add
rol
add
push
loope
and
xor
fwait
add
jbe
js
std
add
xor
loopne
and
mov
das
faddl
in
cmp
jb
mov
push
orl
repz
andb
fisttpl
inc
cmp
xchg
loop
add
out
dec
lods
jmp
idiv
clc
xchg
fs
xchg
push
pushf
and
jo
imul
mov
push
jns
loop
add
push
add
inc
pop
inc
sbb
repz
rolb
push
insb
repnz
jbe
or
xor
sub
push
cmpsl
push
rcr
clc
push
add
mov
dec
pop
in
nop
sub
sub
sub
xchg
cmp
xor
pop
jge
xchg
jnp
add
mov
loope
js
fsubrs
repz
lock
mov
arpl
jae
into
sub
outsl
mov
scas
inc
cmc
push
cmp
add
push
out
cmpsb
dec
add
std
push
cmp
push
push
in
xchg
sarl
xor
leave
outsl
pop
cmp
lock
call
add
cltd
dec
add
or
add
in
jmp
xchg
ret
add
adc
rolb
add
mov
mov
call
cmp
loopne
lds
rorb
jnp
lods
sarb
sbb
pusha
rcl
in
aad
cmpsl
sub
out
add
add
inc
sbb
jbe
add
inc
ret
arpl
pusha
dec
or
jmp
fsubr
arpl
or
cwtl
fadds
sub
out
loope
cmp
mov
je
jge
pop
sahf
lret
push
fst
rolb
sub
add
jbe
sbb
pop
or
aas
cmp
ret
jp
adc
pop
outsl
push
mov
xchg
incb
js
jae
xor
lds
cmp
add
sub
xor
jbe
add
push
test
push
sub
fisubs
rorb
daa
ret
mov
in
push
jmp
pop
lret
orb
xor
pop
mov
xor
shlb
sub
leave
pusha
xchg
sldt
xorb
cmp
cmp
mov
cmp
jnp
adc
pop
push
cmp
ja
pop
out
addr16
rcrb
pop
inc
sbb
jns
jne
rorb
clc
pop
out
mov
xchg
stos
shlb
ds
cmp
xchg
movsb
jo
lret
add
in
sbb
out
clc
xchg
jne
add
and
mov
insl
xchg
add
sub
popl
xchg
xchg
out
sub
inc
mov
cmpsl
in
mov
jae
sbb
sub
popf
cltd
loopne
idivl
xchg
and
jmp
out
fs
and
sbb
loope
das
or
pop
icebp
jbe
fiadds
jne
cmp
out
jge
jmp
pop
cmp
add
movsl
ss
shr
shll
gs
addb
ret
pop
pop
jns
outsb
pop
jne
add
ret
add
and
inc
push
int
jg
xor
add
repz
add
pushf
push
or
jb
rclb
loope
add
push
adc
xchg
xorb
xor
cmpsl
loopne
mov
mov
call
inc
cmp
insl
xchg
or
cmp
in
mov
popa
sbb
ljmp
add
cwtl
jnp
enter
xchg
lock
std
outsl
jl
and
pushf
invd
adc
sub
pop
xorb
mov
decb
int3
ret
gs
stc
mov
pop
add
adc
pop
jecxz
add
mov
jo
xchg
xor
pop
pop
dec
mov
add
ss
cmp
into
mov
popf
xor
das
xchg
cmp
aaa
pop
leave
jnp
mov
add
pop
dec
sub
mov
sub
jb
add
adc
xor
cmp
cli
cwtl
xchg
iret
popf
decb
pop
inc
arpl
not
dec
scas
js
jo
cmp
ffree
push
and
ljmp
shll
loope
pop
mov
add
mov
shrb
lea
lds
mov
aas
lock
sub
sbb
addl
rdtsc
mov
jae
fildll
mov
inc
in
ret
xchg
pop
push
mov
pop
sub
or
jmp
scas
xchg
mov
leave
loope
xchg
adc
dec
add
into
xor
dec
cmpb
dec
lret
pop
dec
adc
adc
popf
fcoml
cld
inc
add
repz
or
inc
dec
sbb
or
adc
repnz
push
lahf
test
sti
add
cmc
test
mov
mov
cmc
adc
int
xlat
and
add
sbb
shl
inc
add
or
imul
incb
and
push
shll
aam
lock
add
jbe
and
pop
sub
adc
mov
add
push
push
and
int
add
mov
pop
ret
adc
push
fisttpl
sbb
mov
shrl
cli
add
jo,pt
and
sub
jge
lret
xchg
add
clc
mov
sub
add
xchg
icebp
loopne
mov
add
xchg
pop
pop
push
enter
or
lcall
xchg
int3
fcmovnbe
and
loopne
lea
mov
jns
mov
addb
pop
into
add
ss
pushf
or
shrl
call
or
adc
mov
fldl
sub
lds
dec
adc
add
shlb
xor
sbb
jns
mov
jnp
add
inc
out
mov
dec
sub
mov
pop
add
or
push
dec
sbb
and
adc
add
mov
mov
sti
push
xchg
mov
xchg
out
pop
in
cmpsb
pop
sbb
add
fistl
or
mov
clc
jmp
inc
add
fcoms
adc
shlb
das
xor
cmc
shll
call
enter
andb
push
cmpsb
dec
sub
pop
call
sbb
fsubs
cmp
add
sbb
enter
rorl
or
mov
sti
push
sar
roll
mov
and
push
or
lock
jl
addr16
sarb
dec
or
xor
test
sub
in
and
add
dec
mov
push
mov
mov
rcrl
adc
aaa
jne
lret
or
hlt
sti
adc
push
cmp
or
pop
or
outsl
push
add
mulb
add
je
jge
arpl
xchg
stos
fldl
clc
lahf
mov
push
add
stos
icebp
test
or
scas
test
jmp
insl
xchg
gs
and
mov
mov
adc
jle
add
push
xchg
jno
mov
sbb
lock
insb
fwait
adc
adc
fs
pop
xor
adc
data16
pop
add
push
and
and
sbb
inc
arpl
shlb
and
or
dec
cmpsl
addb
fiaddl
leave
es
xchg
xchg
jl
add
loope
and
lea
pusha
push
les
jnp
add
and
hlt
add
sbb
adc
dec
shll
sbb
adc
pusha
add
jl
lahf
xchg
lds
mov
or
pop
pop
pusha
jp
push
xorl
add
fdivr
push
lea
fisttpll
add
int
add
jmp
add
je
inc
ljmp
xchg
sbb
out
mov
cmpsb
inc
nop
xchg
enter
cwtl
add
inc
push
add
sub
add
movsb
mov
pop
mov
mov
xor
rorl
add
push
xor
pop
mov
icebp
push
add
ret
enter
and
into
cwtl
sub
add
icebp
xor
iret
and
adc
int3
sub
mov
insl
adc
jecxz
xor
mov
es
adcb
xor
mov
push
sbb
add
das
enter
add
inc
aas
fldenv
add
clc
or
loopne
hlt
cmp
add
mov
mull
lea
mov
dec
imul
fidivs
push
repnz
adc
jo
sub
adc
add
icebp
test
jae
add
popa
clc
push
or
add
jno
xchg
sub
add
sbbl
jmp
stc
sub
inc
iret
mov
add
cmpsb
fs
push
popa
inc
inc
sub
add
jb
pusha
outsl
xchg
add
or
dec
push
or
push
add
gs
leave
aaa
add
xchg
xchg
les
popl
aam
out
push
and
nop
sbb
jp
add
xchg
mov
add
xchg
mov
mov
shl
pop
xchg
xor
mov
mov
jp
add
mov
lcall
sbb
cmp
jmp
pusha
cmp
dec
popa
fnstsw
testb
in
add
xchg
movsl
ja
sbbb
lcall
xchg
dec
ds
push
push
cmpsl
jns
mov
add
pop
movsb
mov
add
stos
sbb
lock
and
cmc
ret
sbb
xor
aaa
mov
cmp
iret
sti
call
clc
push
aaa
test
std
icebp
aad
loop
js
cld
pop
push
loopne
lret
add
and
xor
in
mov
adc
addb
dec
pop
inc
pop
sbb
push
cmp
call
mov
rol
or
jno
pop
sub
cmp
or
add
xor
add
cmp
mov
dec
mov
outsb
add
inc
insb
in
sbb
mov
or
add
jl
xor
movb
xchg
adc
pushf
popa
xor
sub
jge
adc
hlt
test
mov
inc
add
mov
sarl
test
jmp
add
jbe
in
and
lahf
push
jge
sbb
xchg
push
xor
add
mov
shrb
pop
sbb
add
insb
xor
jp
jne
add
scas
mov
fcompl
and
add
ss
fstp
push
scas
rclb
inc
jge
sbb
dec
lahf
mov
mov
pop
or
repnz
sti
sbb
pop
frstor
jge
mov
mov
add
lods
scas
or
mov
gs
add
lahf
aad
jns
mov
shlb
add
call
and
frstor
lods
inc
mov
pushf
xchg
add
and
ds
fiaddl
xor
ljmp
test
movsb
ss
mov
inc
add
test
loop
mov
iret
add
jl
xchg
mov
mov
inc
das
sub
or
mov
add
scas
adc
push
jo
inc
add
ljmp
jl
add
notb
stos
jecxz
add
insb
xchg
lcall
and
push
add
scas
dec
fisubrs
push
mov
ja
xchg
xor
inc
push
leave
pop
push
add
jae
mov
addr16
hlt
mov
outsl
movsb
ja
pusha
aad
xor
repnz
xor
jns
sub
stc
pop
inc
jle
scas
add
push
mov
fprem1
sub
fcmovne
add
and
rcrb
pop
mov
mov
jp
mov
repz
cmp
push
ds
inc
insb
sbb
pop
pop
imull
mov
or
test
enter
sbb
inc
call
pusha
andb
push
cs
ss
cmpsb
and
jae
sub
dec
test
add
mov
mov
test
pop
int3
or
push
adcl
cld
xor
fstpt
add
xchg
mov
adc
pop
xor
pop
popf
std
out
daa
jb
add
scas
insl
mov
fs
lods
cli
je
add
aam
pop
cwtl
and
add
mov
arpl
fcoms
testb
xchg
ret
cmpl
push
data16
lea
add
movsb
daa
mov
add
ret
data16
pop
add
mov
js
andb
mov
shll
and
popf
xor
fists
add
gs
inc
leave
inc
mov
in
rol
inc
mov
push
gs
and
sub
pop
daa
jecxz
cli
add
and
in
das
xor
popf
mov
call
sbb
into
inc
ror
in
lock
mov
pop
cmp
rcrb
cmp
sysret
test
sub
repnz
jno
push
pop
jb
stos
xchg
fldenv
and
cmp
jl
stos
icebp
es
add
push
cmpsb
mov
jno
hlt
call
rclb
push
add
scas
cli
or
cs
sub
clc
sti
cmp
xor
popa
mov
xchg
dec
and
add
jg
dec
cmpsb
outsl
call
xchg
mov
xor
clc
stos
lods
jecxz
in
pushf
add
and
mov
rclb
mov
fcomi
popf
jg
jae
sbb
cwtl
cmpb
add
pop
icebp
jmp
sti
mov
xchg
fstps
out
add
fsubrp
cmp
add
push
inc
mov
mov
add
push
imul
in
mov
arpl
pushf
push
and
flds
aas
pop
sub
cmp
add
call
pop
into
cwtl
mov
les
sub
inc
or
sbb
push
loop
scas
xor
adcb
add
lods
cmp
mov
pushf
fbstp
and
jge
dec
push
jg
sub
popa
in
test
adc
pusha
xor
inc
test
pop
out
cmp
lret
fadds
stos
inc
push
clc
out
mov
shlb
pop
nop
xchg
pop
xchg
mov
paddusb
shl
add
dec
push
push
in
push
repnz
xchg
xor
cli
push
sbb
mov
ret
jno
push
mov
nopl
inc
subb
pop
ret
adc
aas
xchg
dec
add
cmpsb
xorb
arpl
or
fcomps
or
lock
mov
adc
scas
push
dec
shl
lea
add
mov
lods
sub
mov
add
iret
mov
push
popa
js
stc
lods
add
test
mov
jne
inc
xor
gs
cmpsl
std
add
pushl
jae
cmp
add
adc
add
cmp
xchg
add
jl
pop
adc
add
test
mov
add
add
and
mov
nop
divps
ja
dec
inc
and
jno
jmp
cmc
imul
pop
sub
adcb
testl
add
das
es
add
data16
add
xor
lret
sbb
in
pusha
jnp
arpl
decl
pop
sbb
loop
call
lea
add
repnz
dec
pop
lahf
clc
xor
in
mov
and
add
mov
repz
lahf
scas
es
loope
sarl
add
mov
pop
adc
dec
insb
mov
add
inc
sarl
add
xor
sbb
push
push
mov
mov
aas
das
adc
xchg
fimuls
inc
mov
stos
dec
or
hlt
xchg
sub
mov
and
lods
ficompl
cmc
pusha
mov
add
into
test
adc
jne
adc
pop
pusha
mov
leave
cmp
std
xor
jae
add
lds
lods
inc
cmp
arpl
and
pop
sub
and
adc
jecxz
stos
out
dec
sub
inc
or
jge
ds
xchg
insb
xor
cmpsl
push
add
mov
clc
mov
loopne
jb
jae
add
das
call
sub
jle
add
sbb
repnz
sbb
inc
pop
stc
lret
test
sub
and
pop
cli
nop
jge
loopne
mov
scas
mov
and
fisubs
ljmp
inc
in
mov
popa
or
or
xchg
push
imul
mov
hlt
and
and
mov
call
sar
cmpsl
inc
fcomps
mov
sub
xor
in
add
mov
adc
add
mov
movb
in
mov
pusha
cmp
pop
daa
stos
aam
inc
xor
inc
pop
sbb
iret
and
add
or
push
mov
dec
dec
es
bound
popf
loop
jbe
test
push
or
inc
xor
sbb
scas
subl
iret
xor
adc
or
jb
insl
add
and
pop
leave
jo
movsb
aam
add
notb
ljmp
cmpsl
mov
lods
dec
jg
pusha
sub
push
pop
fmull
ja
push
mov
sbb
or
mov
dec
mov
xchg
dec
and
pusha
add
sub
push
fdivrs
jg
add
xchg
dec
ficoml
dec
test
lret
cmp
mov
cs
stos
xchg
sbb
lea
insl
pushf
jl
dec
roll
mov
sbbb
dec
xchg
ds
push
aaa
hlt
mov
mov
dec
enter
pushf
outsl
fsubrl
xchg
sbb
inc
pop
aas
fldl
pop
adc
inc
adc
aam
mov
and
cwtl
inc
add
lahf
push
mov
or
sbb
xor
push
add
sbb
mov
add
inc
inc
pusha
mov
add
popa
ja
mov
xchg
dec
insb
popa
cs
push
in
and
mov
or
cmpsl
add
in
loop
rcll
rcrb
leave
add
movsl
jle
je
adc
in
pop
xchg
ja
jbe
adc
mov
pusha
cwtl
push
jl
add
mov
mov
idivl
add
xor
add
sti
mov
out
add
jnp
jae
scas
xchg
or
inc
out
ss
inc
fucomip
dec
xor
pop
cltd
adc
das
movsl
inc
out
and
adc
lock
std
and
fcmovnbe
or
outsb
jecxz
and
add
lcall
xchg
aas
mov
sbb
push
addr16
pop
xchg
mov
jp
lea
jbe
push
pop
push
mov
mov
out
insb
add
lret
mov
aaa
add
pop
jb
sub
cwtl
stos
in
add
mov
mov
imul
inc
fidivrl
les
nopl
sub
push
cld
outsl
mov
mov
out
inc
pusha
mov
push
jmp
mov
pop
mov
enter
hlt
cwtl
in
jp
int
mov
dec
test
icebp
cli
aas
jb
js
add
or
dec
repz
fwait
add
repnz
icebp
mov
lock
imull
inc
and
or
daa
add
jg
fildll
pmuludq
rorb
pop
xor
in
pop
cmpsb
inc
pop
pop
xchg
testb
xor
add
mov
pop
xchg
jmp
addr16
jbe
pop
pop
test
mov
pop
add
inc
adc
jns
push
mov
mov
push
pop
add
out
push
dec
cld
inc
inc
daa
test
and
dec
add
add
add
hlt
stc
fsub
push
xorl
dec
int3
ja
push
das
xchg
push
push
sub
mov
stos
ret
add
icebp
dec
jmp
in
add
add
movsb
add
or
lock
ss
sub
aam
add
xchg
pop
pusha
dec
cmp
inc
dec
movsb
xchg
dec
add
xchg
std
sub
lods
jo
mov
pop
jne
outsb
pop
sbb
pusha
mov
mov
xor
shrb
xchg
push
pmullw
cli
mov
cmp
popf
movsl
scas
fiadds
add
xor
add
or
add
clc
xor
and
push
jae
cmpsl
shrb
popf
clc
add
pop
imul
push
or
pop
push
loopne
cwtl
imul
cmp
scas
jmp
sbb
daa
test
jo
ja
add
adc
inc
mov
addl
fistl
sbb
rorb
xchg
imul
xor
sub
arpl
add
inc
push
adc
data16
and
pop
add
mov
xchg
movsb
fisubrs
add
push
aaa
mov
lea
xchg
add
jge
sub
addr16
aad
or
push
fcoms
push
mov
add
jmp
sarb
imul
repz
lret
adc
int3
and
aam
fistpl
add
test
push
add
out
pop
add
mov
xchg
int3
ljmp
mov
ret
cs
mov
push
add
fsts
xchg
aad
add
add
call
pop
pop
hlt
add
pop
pusha
mov
scas
add
clc
mov
inc
add
test
push
add
outsb
push
mov
mov
cmp
jge
push
mov
sbb
ret
add
loopne
and
filds
ja
add
mov
inc
jl
push
and
add
push
mov
fcoml
add
es
push
mov
add
scas
dec
ljmp
fcmovnb
in
add
add
jle
add
imul
add
xchg
popl
in
arpl
icebp
pop
lods
test
sarl
and
pop
or
shr
addl
lcall
add
std
cli
and
ljmp
lcall
daa
push
xlat
mov
mov
and
mov
sub
aad
dec
cld
push
int
enter
stos
in
addl
gs
fwait
or
cmp
insb
adc
sub
and
popf
jb
out
push
push
outsl
clc
roll
inc
dec
les
subl
in
imul
jnp
dec
adc
pop
fwait
stos
call
dec
punpckhbw
mov
push
cltd
lea
cmp
sub
push
add
mov
xchg
or
add
cmp
push
xor
add
mov
xchg
ja
cmp
or
pop
jns
sbbb
shr
push
pop
xchg
adc
loope
mov
cmpsb
in
jmp
int
clzero
adc
out
roll
jae
mov
cmp
loope
out
lret
mov
sbb
scas
add
adc
clc
loopne
add
rcrl
and
js
nop
sbb
cmc
int3
dec
addr16
add
adc
or
mov
daa
xchg
popf
sub
out
sub
push
and
es
insb
pop
cmp
sbb
addr16
fdivrp
pusha
add
rcl
dec
pop
inc
xchg
pop
mov
mov
mov
push
stos
pushf
inc
and
add
and
scas
dec
add
lock
and
push
add
subb
xchg
popa
add
stos
adc
mov
adc
lods
add
sbb
jle
shll
sbb
cld
data16
lret
sbb
mov
cwtl
sub
lods
mov
rolb
jnp
inc
add
shl
scas
mov
arpl
mov
add
fiaddl
ret
xchg
loopne
push
xchg
jae
xor
inc
adc
notl
adc
push
roll
pop
sbb
inc
fs
cmpsl
jl
add
sbb
push
and
cwtl
add
fcoml
stos
or
out
inc
add
sub
dec
add
sbb
pop
pop
add
in
rorb
xor
sbb
mov
dec
popf
out
jbe
sbb
in
bound
add
lds
mov
iret
out
ret
or
adcb
movsl
add
je
test
insb
mov
das
fcmovnu
jge
inc
lea
repnz
lods
loop
cmp
mov
push
add
add
jne
icebp
shl
add
mov
dec
or
mov
test
repz
jge
add
inc
xchg
cmp
aam
xor
rcrb
arpl
dec
sbb
adc
movsb
adc
sub
int3
mov
and
push
sbb
stos
add
fdivl
in
outsb
adc
pusha
pop
jge
lea
es
cmp
imul
cmpl
add
test
or
rcl
pop
add
push
nop
jl
cli
orb
jns
push
ret
data16
cli
cs
fimull
aaa
popf
test
fldcw
xor
outsb
lock
in
mov
out
daa
cmc
adc
loop
and
dec
sub
xor
jne
xchg
add
pusha
test
daa
adc
es
xchg
jecxz
sbb
leave
push
lret
std
pusha
push
mov
scas
adc
pop
mov
fs
inc
mov
jge
hlt
push
add
std
and
rcrl
sarb
or
or
jecxz
dec
addr16
add
sbb
scas
cmpsb
in
add
sarl
mov
cmpsl
aaa
ljmp
leave
add
or
outsb
push
pop
jbe
xor
pusha
add
es
arpl
daa
mov
sub
pop
sub
ds
push
in
test
jmp
jno
pop
loop
push
ja
adc
cmpb
cwtl
dec
and
cmc
inc
adcb
ret
inc
sbb
push
cmp
sbb
add
stc
inc
pop
je
jns
xor
loop
insl
sarb
add
cwtl
fdiv
mov
mov
shll
or
aad
leave
add
cmp
fs
add
test
imul
cli
add
mov
hlt
xchg
ljmp
in
xchg
or
mov
in
and
sbbb
add
xorb
sub
dec
cs
mov
dec
pop
in
ss
mov
xor
clc
sbb
sbb
loopne
neg
dec
pop
in
lods
shrb
inc
les
das
sarb
loop
adc
xlat
shrb
push
psubusb
add
pop
rorl
lds
stc
out
dec
adc
sahf
out
int
add
adcb
and
popf
sbb
lods
push
fildll
add
lock
sub
fwait
inc
add
pusha
and
int
mov
push
pop
daa
fsubl
subb
push
xor
mov
and
mov
inc
sbb
je
mov
and
ficomps
test
pop
inc
and
insl
mov
lods
pop
add
fisubrl
cmp
int3
popf
push
push
aas
rolb
rep
adc
inc
add
outsb
lcallw
ljmp
bound
add
push
shlb
xchg
add
cmp
add
pop
fsubs
sbb
adc
add
inc
sub
sbb
mov
mov
dec
test
add
dec
dec
test
pop
mov
std
lods
adc
add
bound
popf
adc
xchg
pop
loope
inc
ja
adc
cmp
push
xor
fsubrl
mov
xor
add
mov
sbb
insb
mov
push
sub
add
shrl
dec
push
es
inc
ffreep
dec
jle
add
test
movsb
je
mov
pop
push
jne
add
or
push
sbb
add
adc
lods
outsl
jne
inc
cltd
xor
xlat
fstl
je
rclb
fidivs
dec
mov
or
pop
add
xor
pop
hlt
add
in
add
cmp
sbbb
pop
imul
cmp
add
inc
mov
movsl
xlat
and
add
cmc
shl
push
xor
adc
push
ds
imulb
je
cmc
and
nop
push
mov
pop
repnz
test
jb
test
fucom
jae
cli
es
push
testb
cs
push
aad
mov
int3
jge
push
push
sbb
add
fldenv
or
es
jo
mov
push
daa
insb
cmpsb
out
add
int
sub
ret
cwtl
mov
fbstp
sbb
lods
ret
fidivrl
adc
and
dec
pop
mov
add
mov
add
daa
lret
dec
fldenv
jl
lcall
sub
mov
add
jg
ss
adc
adc
sbb
xor
inc
rcrl
jl
add
mov
and
pop
stos
dec
cmp
mov
add
push
or
sub
das
mov
jb
sti
mov
and
aam
mov
test
out
sub
xor
xchg
lock
xor
jecxz
cmp
idivb
sbb
int
ret
je
aaa
add
jecxz
dec
mov
addl
cmpsl
add
and
mov
cmp
mov
fmul
jmp
cltd
mov
outsl
xor
add
roll
mov
cmp
nop
jle
sbb
jge
add
cmp
mov
ss
inc
dec
mov
mov
add
add
cmp
cltd
mov
iret
push
adc
stos
std
sub
faddl
jae
and
pop
push
stos
ljmp
testb
out
sub
addr16
adc
pop
rcrl
lea
ja
notl
push
add
imul
orb
pop
stos
fcompl
lret
mov
push
cld
std
cmp
pusha
inc
cwtl
jo
lods
xchg
add
aas
mov
jle
int
add
xchg
push
adcl
aam
inc
scas
arpl
adc
cmp
inc
add
sub
ja
or
out
jae
jmp
icebp
insl
push
je
add
fwait
stos
cmpsb
int3
push
push
mov
fbstp
rcrb
cmp
mov
or
outsb
aad
add
cwtl
into
xchg
icebp
mov
inc
or
sbb
lahf
push
xor
xor
out
jp
add
pusha
rcll
jg
scas
add
clc
fcmovnu
inc
jmp
fimull
jmp
sub
mov
cs
jb
filds
rdmsr
pop
sub
test
loope
scas
push
test
bound
and
ds
add
mov
xchg
mov
dec
sub
sbb
out
mov
fbld
mov
and
pusha
testl
fwait
pusha
jecxz
add
add
add
outsl
inc
jle
jno
push
sub
xor
inc
leave
ss
aam
jb
add
xchg
int3
sbb
dec
mov
push
sbb
cli
scas
lret
negb
movsb
jp
xchg
add
lea
inc
sbb
imul
mov
pop
loopne
movsl
dec
mov
out
pop
inc
jb
jecxz
mov
notl
outsl
stos
lods
inc
mov
adc
sub
ljmp
cltd
sbbb
dec
add
into
xor
arpl
add
leave
mov
jb
add
out
cmpsb
add
rcr
repnz
sahf
mov
in
gs
clc
add
or
sub
inc
filds
sarb
es
insl
or
xchg
sbb
iretw
add
std
xor
add
decb
subl
inc
add
orb
mov
add
mov
je
xor
addl
movsl
ja
rorb
push
add
inc
test
cs
add
lea
mov
xchg
add
pop
mov
pop
mov
fidivs
push
iret
testb
mov
lahf
or
test
cmc
imul
or
fstl
push
in
loopne
add
andb
movsl
pusha
ljmp
imul
in
push
and
test
xlat
adc
adcl
arpl
nop
pop
cmpl
mov
aad
push
xchg
dec
out
adcl
clc
rcll
pusha
push
dec
xlat
hlt
add
jecxz
mov
dec
iret
leave
loop
inc
ds
jo
cmp
gs
popl
adc
adc
push
pop
cmp
xchg
push
into
add
jns
mov
adc
xchg
ret
lahf
dec
and
jno
push
xor
mov
ljmp
loope
add
dec
or
xor
jae
std
inc
or
mov
add
repnz
cli
mov
xchg
popf
sbb
or
scas
add
add
xchg
jbe
add
gs
mov
negl
xchg
popa
shlb
sub
mov
mov
mov
dec
scas
lds
addl
movb
add
aad
mov
int3
shrl
pop
addr16
dec
adc
adc
adc
xchg
adc
addb
sub
shl
jle
add
int
in
push
or
adc
outsl
cmp
mov
jae
insb
ljmp
and
aad
adc
loopnew
lret
cmp
push
mov
jg
add
dec
pop
cmc
stos
out
or
imul
popf
lock
xchg
lret
pop
lock
jo
lock
sub
push
jbe
xor
cmp
data16
fimuls
add
sub
push
cmp
rclb
lock
cwtl
add
sub
or
or
in
stc
mov
add
mov
add
aam
dec
add
in
mov
push
jnp
test
add
loope
aaa
stos
push
incl
mov
mov
popf
clc
sbb
jecxz
push
add
add
jae
inc
add
dec
call
shl
loopne
repnz
lahf
push
mov
jne
std
add
int
sub
insl
sbb
outsb
and
inc
xor
pop
popl
pushf
je
lret
rolb
lcall
sub
sub
adc
jbe
add
or
inc
test
xchg
out
mov
outsb
xor
sbb
push
add
jnp
ja
popa
sti
push
add
cmp
xchg
cmc
pop
xchg
add
shll
cmp
adc
adc
cwtl
add
int3
adc
xor
mov
pop
fwait
sahf
add
addb
daa
ret
loopne
inc
xor
add
pushf
adc
or
shr
jno
jecxz
jle
xchg
inc
or
iret
lea
push
lods
mov
jb
popa
ds
roll
mov
mov
iret
data16
imul
adc
negl
and
and
or
cmc
sub
cmp
add
inc
mov
sub
mov
xor
cs
sahf
ljmp
notb
inc
insb
popf
int
add
cmpsl
popa
fwait
es
mov
xor
add
xor
or
cltd
dec
add
test
sub
cmc
inc
and
pop
das
add
xchg
jg
add
cmc
shl
push
push
rorl
addr16
montmul
cmpsb
loope
subl
imul
shl
call
jecxz
mov
dec
loop
add
outsl
cmp
lret
and
mov
roll
jno
adc
inc
fadd
add
lock
xchg
push
add
aaa
aas
ljmp
jbe
push
push
sbb
mov
cmpsb
sub
add
add
loope
xchg
jmp
xorl
push
je
mov
imul
jno
cmpb
cmpsl
mov
pusha
mov
add
outsb
clc
mov
jp
sarb
and
ret
add
sbb
int
into
je
add
fistpl
and
in
fwait
xchg
prefetch
and
notl
je
push
sbb
sahf
mov
add
icebp
lret
sbb
adc
rcrb
loopne
fistpll
or
aad
xchg
sahf
jg
lock
dec
sbb
fbld
push
mov
into
outsb
fsts
imul
mov
je
in
mov
xor
addr16
add
adc
lahf
and
adc
add
fs
jne
clc
or
add
mov
movsl
lret
add
mov
lcall
inc
orb
add
fmul
sub
popa
sbbb
incl
aad
jae
adc
gs
dec
mov
jmp
push
add
icebp
mov
add
in
add
add
ds
sti
aaa
jge
jp
pop
add
lock
sbb
scas
mov
add
loopne
test
cmp
sbb
ret
push
aas
cmp
add
test
into
out
push
faddp
roll
in
mov
rolb
sub
dec
loopne
testl
into
daa
pavgb
jmp
cwtl
mov
add
push
outsl
enter
add
sub
aaa
js
xor
mov
cmpsb
xchg
or
inc
mov
pusha
or
jae
stos
cwtl
das
add
sbb
sarl
fdivl
dec
mov
mov
in
add
dec
pop
mov
filds
subb
aas
mov
mov
and
les
popl
xchg
and
int3
adc
adc
mov
xor
stos
outsb
in
aas
add
jmp
add
push
dec
add
sub
test
add
xchg
mov
mov
imul
pop
in
sbb
add
out
inc
sub
jne
lock
add
loope
push
cmc
test
insb
xor
pop
lret
andl
add
mov
jge
mov
test
imul
jae
cmp
in
xor
dec
mov
sbb
add
daa
stos
add
mov
add
pop
lahf
fiaddl
repz
pop
add
repnz
adc
mov
es
es
pop
xor
leave
aaa
or
psubsb
and
orb
mov
repz
stc
loop
mov
add
test
jns
push
rorl
outsl
sbb
jo
push
movsl
subb
in
cmpsl
hlt
rorl
popf
inc
je
pop
jp
pop
decl
pop
daa
adc
add
pop
rolb
lret
ret
insl
lahf
fsubl
dec
pusha
sub
mov
pxor
adc
jo
sbb
out
fadds
and
mov
mov
lcall
inc
mov
pop
subb
xor
lock
pop
mov
sub
and
test
orl
pusha
sub
add
daa
gs
test
mov
mov
pop
jl
xchg
fldt
shll
pop
aad
andl
mov
inc
incl
push
xor
rclb
ds
out
bound
repnz
xchg
in
scas
xchg
mov
xchg
xor
or
sub
icebp
or
decb
xor
xorl
andb
adc
cmp
push
add
sbb
jbe
push
add
repnz
iret
dec
shlb
sub
mov
pushaw
inc
pop
inc
loopne
inc
inc
adc
sbb
mov
xchg
push
push
cli
inc
add
jo
mov
add
jb
in
aas
cmp
adc
pushf
add
sub
lock
lods
fs
pushf
fisubl
lds
adc
sbb
or
outsb
shlb
mov
add
sbb
cmp
aam
adc
lock
adc
inc
sahf
ja
lahf
mov
and
out
mov
es
pop
adc
xchg
add
lds
push
ret
mov
jbe
ds
mov
daa
add
jg
dec
fcmovne
test
jmp
add
xchg
test
jno
add
xlat
leave
cwtl
add
rorb
jae
int3
fistps
out
add
mov
movsb
imul
add
mov
add
in
mov
xchg
sahf
add
pop
xor
out
aam
or
scas
xlat
shrb
mov
jne
mov
add
adc
out
or
sbb
xor
push
add
lret
cmp
in
ljmp
gs
pop
push
and
es
loopne
adc
xor
lret
add
mov
sub
mov
popa
push
jae
outsb
es
pop
mov
sbbb
and
loop
and
xor
test
idivb
adc
pop
sub
push
dec
scas
dec
add
add
jns
jp
jbe
cmp
daa
adcb
loope
sahf
cmpsl
add
in
lahf
inc
mov
es
add
sti
ret
add
push
jno
add
jecxz,pt
ffree
inc
ljmp
xor
jnp
ret
cmp
or
nop
inc
ja
lcall
loope
mov
adc
mov
insl
or
clc
rcl
pop
cmc
cmp
cmp
test
mov
nop
cwtl
or
andb
and
outsl
mov
add
int3
adc
out
loopne
add
cmc
or
psrlw
mov
aaa
add
xchg
arpl
cmp
inc
clc
js
pop
repnz
scas
add
lea
push
pusha
sbb
or
icebp
or
add
push
adc
sahf
lods
add
adc
fsubl
jne
cmp
mov
add
add
lcall
mov
data16
add
sbb
fsubl
adc
fistpl
cs
into
shrl
int
dec
xchg
shufps
arpl
dec
push
cmc
mov
xchg
imul
out
and
popa
enter
sub
stos
adc
jae
dec
add
dec
pop
push
push
hlt
add
add
adc
mov
nop
ret
data16
and
xor
jb
add
pop
mov
inc
movsl
jle
sti
gs
ljmp
jne
jae,pt
mov
mov
mov
inc
cwtl
add
add
stos
xor
jae
sbb
pusha
ret
rorb
inc
pop
jae
mov
xorb
pop
fidivl
add
mov
stos
inc
cmp
insl
nop
dec
ja
jb
push
pop
out
adc
shlb
or
stos
sub
loopne
daa
dec
push
xlat
loopne
mov
pop
and
pop
or
dec
sbb
add
test
sbb
add
add
inc
ja
push
xchg
lods
dec
cs
loop
add
push
in
jne
add
pop
jle
shl
xchg
add
jbe
pusha
mov
xor
gs
add
xchg
mov
cmp
fistpll
xor
adc
addr16
xchg
push
jmp
mov
inc
xchg
add
test
cmp
push
pop
pop
jmp
adc
lahf
ret
add
imul
or
shl
loop
or
sti
xor
ds
mov
mov
test
test
call
stc
jp
pop
sbb
lock
jb
add
rolb
sbb
decb
and
arpl
pusha
push
inc
or
outsb
mov
int
loopne
jb
and
cmpl
add
nop
sub
data16
test
inc
jnp
mov
repnz
push
mov
mov
push
add
cmc
jno
or
out
and
jle
ret
cmp
inc
les
sub
push
mov
jo
pop
test
inc
mov
sbb
mov
adc
iret
xchg
std
add
push
inc
mov
push
nop
jo
inc
inc
add
adcl
cmp
shlb
mov
imul
es
mov
mov
andl
adc
int
out
frstor
or
shrb
xor
or
lock
das
jmp
popa
pop
mov
mov
jns
in
neg
add
rcrb
dec
in
jmp
scas
add
xchg
push
rclb
ja
inc
fwait
add
rcr
push
cli
addb
add
shrb
jbe
push
test
rcrb
int3
mov
mov
xor
jne
out
mov
add
arpl
mov
add
adc
pop
dec
or
xlat
add
xchg
jns
test
xor
dec
lahf
icebp
jbe
scas
sahf
paddusw
push
push
loopne
cmp
push
cmp
sub
and
xchg
or
out
cli
insl
xor
add
mov
dec
les
add
das
out
sub
and
pop
xor
mov
inc
fldl
jbe
add
inc
icebp
sahf
cmp
adc
xchg
movsl
sbb
popf
sub
pop
mov
jg
dec
xchg
add
mov
add
xchg
mov
jge
sbb
adc
add
mov
repz
add
jns
sub
mov
jmp
and
and
push
dec
fistps
outsl
add
xchg
inc
inc
fiaddl
arpl
flds
jg
add
int
jae
call
enter
lret
bound
inc
mov
push
ds
add
sbb
mov
add
movl
aad
jns
punpcklbw
dec
fcmovb
push
push
jb
cltd
add
mov
mov
pop
gs
push
enter
and
ret
xor
stos
movb
roll
jl
and
pusha
or
pop
leave
js
into
mov
aam
jp
adc
adc
add
repnz
mov
ja
or
add
sti
push
pop
xor
jae
sub
icebp
jo
pop
xor
xor
push
sahf
cmpsl
mov
add
imul
and
movsb
xor
mov
sbb
cmp
lcall
pushf
add
es
sub
sub
imul
hlt
pop
cmc
mov
adc
inc
lea
divb
mov
xor
lret
out
inc
xchg
add
lcall
add
xor
or
sbb
jl
add
jecxz
sbb
out
negl
adc
adc
inc
repnz
bound
lret
gs
fsubrs
sub
or
js
daa
shll
push
jbe
ljmp
pop
fiadds
shlb
sbb
stos
sub
jae
xchg
add
jnp
inc
aaa
pop
inc
push
cmp
stc
add
leave
pop
add
inc
adc
add
aaa
hlt
cmp
ds
cli
lret
outsl
icebp
mov
adc
mov
xorb
icebp
in
clc
adc
pop
xor
cltd
idiv
call
jnp
xor
mov
add
pop
inc
xor
add
adc
add
out
and
dec
sub
push
add
or
fiaddl
ror
jmp
adc
imulb
sub
jo
inc
push
sbbb
inc
inc
xorb
xchg
je
fwait
add
push
subb
mov
add
mov
sbb
lahf
push
sarb
js
add
inc
mov
fcmovbe
shll
add
xorl
frstor
or
lods
sbb
and
out
jecxz
imul
sub
adc
in
push
push
push
stos
popa
sbb
clc
push
inc
movl
test
arpl
and
xor
cwtl
mov
imull
lock
pop
movsb
xchg
out
inc
adc
and
mov
idivl
add
mov
add
add
ret
in
add
rcll
add
into
lods
jo
cmp
in
repz
pusha
loopne
ret
xor
sbb
aam
jge
cmp
dec
fnsave
sarb
mov
outsb
mov
inc
in
push
add
mov
jb
ljmp
and
or
outsl
add
pusha
ret
cld
add
lcall
idivb
arpl
outsb
jo
add
mov
xor
lods
dec
inc
insb
mov
xor
lret
sub
jns
add
and
mov
add
jg
out
fcmovne
inc
add
movzwl
sub
add
sub
cli
mov
push
push
js
and
setg
jne
mov
mov
scas
test
ss
iret
and
xlat
call
xchg
das
mov
xchg
mov
cld
sarl
cmpsb
or
lret
movsb
add
fsubrl
add
and
jae
call
into
xchg
push
sbb
not
cmp
xchg
and
lock
jbe
xor
mov
int3
pusha
pushf
cmp
add
pop
lret
fildl
femms
rcl
jle
pop
add
in
jmp
dec
add
jp
pop
in
pop
sbb
lret
shr
sub
mov
sbb
std
lret
lahf
add
aam
and
mov
xor
mov
dec
fs
sbb
add
or
mov
add
xchg
mov
jecxz
movsb
clc
in
loopne
jp
pop
clc
adc
rcrb
jno
pop
add
leave
and
push
mov
xchg
adc
lahf
in
jp
add
into
jle
pop
cmp
movsl
cwtl
ffree
enter
cmp
xor
mov
les
rcr
das
add
fidivrs
mov
ss
cmp
cmpsb
or
mov
or
stos
inc
or
sbb
or
cmp
imul
repz
mov
sub
add
push
rorl
mov
cmp
xorb
in
cmc
fstps
push
xor
xlat
cmp
push
sbb
jns
dec
nop
cmp
push
and
cmovle
je
xorb
idivl
je
fnsave
popa
mov
bound
cmp
jns
add
nop
arpl
mov
lock
add
ds
in
mov
mov
xor
cmp
and
cmp
sub
test
or
test
fisubrl
add
mov
jbe
sarl
xor
test
ret
xlat
in
decb
loop
sub
xor
pusha
or
scas
push
sbb
jmp
fildll
es
mov
sbb
sbb
xor
movsl
loopne
and
test
test
push
testl
rclb
roll
xor
pop
cld
lea
icebp
repnz
sub
mov
hlt
loope
js
gs
and
andb
orl
sbb
sbb
add
aam
rolb
sbb
jbe
inc
and
sarl
jnp
mov
add
pusha
cwtl
push
ja
and
inc
fists
loop
inc
add
ret
cmc
das
pop
jge
adc
rcll
lret
mov
ficoml
lahf
inc
sahf
sub
xorb
jnp
insl
faddl
add
xlat
icebp
xchg
add
xchg
cmp
add
push
xor
mov
fwait
mov
add
cmp
mov
jl
fiaddl
or
sbb
test
shl
gs
pop
add
mov
pushw
sarl
leave
cmp
dec
popl
ja
int
fistpll
out
add
cli
sub
stos
pop
xchg
mov
jnp
push
shlb
mov
int3
ljmp
sbb
fldt
sti
clc
add
cmp
sbb
popa
sbb
push
lret
in
xor
add
xchg
add
dec
cmc
jl
and
jmp
imul
xorl
ss
jmp
pop
test
jle
popw
inc
sbb
and
pushf
add
add
add
mov
add
leave
inc
cmpsb
adc
js
xor
adc
enter
push
xchg
loopne
in
mov
insl
xchg
test
repz
jle
mov
sahf
add
into
sbb
sbb
push
outsb
jno
mov
nop
add
iret
add
pop
add
jmp
rcl
push
add
pop
out
pop
fsubrs
mov
pop
stos
fldcw
inc
std
inc
leave
dec
lahf
loop
mov
push
xchg
jecxz
add
in
jno
cmp
fadds
push
in
mov
shrl
test
mov
inc
repnz
push
xchg
add
dec
arpl
cmp
xchg
cmp
dec
and
mov
ljmp
enter
ss
cmp
sub
bound
orb
jge
sub
cmpb
add
jo
add
or
add
xchg
mov
ret
int3
je
sub
addr16
sub
lock
jg
dec
in
inc
lods
into
and
and
test
cltd
adc
inc
xchg
test
and
mov
push
iret
and
or
xchg
push
pop
inc
outsl
mov
test
xchg
cltd
sub
leave
sbb
sbb
add
mov
aaa
dec
or
ret
mov
lcall
rclb
imul
push
inc
and
mov
sbb
xchg
or
jno
pop
aaa
jns
jge
add
pop
xchg
bound
stos
lock
add
xor
mov
loope
jb
sti
mov
out
lret
outsb
add
dec
push
mov
jb
jle
lock
add
cmp
mov
pop
cmp
xchg
cmp
aas
jg
ret
pop
push
es
pop
ret
or
jne
daa
rol
mov
mov
or
mov
xchg
add
sbb
aaa
out
clc
enter
imul
pop
mov
add
mov
mov
xchg
pop
ss
add
adc
mov
add
mov
rcrb
jnp
or
lds
jmp
inc
je
cmc
ret
leave
push
loopne
popa
add
in
inc
call
cli
add
jb
mov
pop
add
mov
stos
add
xor
mov
pop
pop
jns
push
arpl
mov
or
cwtl
divl
ljmp
cli
mov
mov
stc
fdivs
movsb
jl
aas
ja
test
dec
cmpsl
sbbl
cmp
js
fidivrs
rol
add
stc
jo
roll
mov
pusha
push
inc
and
mov
das
sahf
push
push
fs
xchg
aad
sub
mov
pop
scas
add
ja
pop
add
pop
pusha
addr16
in
and
mov
mov
add
mov
mov
hlt
mov
clc
pop
and
sbb
add
sbb
xchg
add
fwait
jle
out
subl
stos
xor
dec
or
add
jmp
add
outsb
cmc
add
sbbl
lea
mov
fucom
dec
mov
jl
add
mov
or
mov
jl
lret
push
icebp
mov
add
fadds
xchg
cmpsl
dec
es
shll
das
push
loop
mov
jno
cmp
add
ret
icebp
push
and
dec
pop
sub
add
mov
mov
lcall
insl
es
inc
add
mov
mov
jp
js
cmp
fadds
std
lcall
les
add
movsl
push
add
enter
inc
mov
iret
sub
movsb
jbe
and
push
and
and
push
xor
cltd
lods
jbe
sbb
jmp
or
testb
sbb
mov
add
push
add
adc
arpl
push
add
dec
in
pop
sbb
xor
pop
mov
xchg
mov
push
add
ja
mov
addr16
sub
push
pop
mov
int3
stc
mov
dec
adc
sub
adc
aas
pop
add
cld
push
add
inc
mov
jmp
std
pop
push
mov
lea
lods
add
push
nop
xchg
aas
stos
add
out
mov
add
in
jp
add
sti
pop
jle
sub
inc
inc
cmpsl
mov
stos
mov
xor
in
xor
repz
push
push
xchg
pushf
insb
out
fisttpll
mov
mov
fwait
mov
sti
sbb
je
call
xor
push
movsb
and
cmp
dec
xchg
push
cmp
or
test
cmp
add
mov
xchg
xor
push
das
call
scas
out
adc
loope
jp
pop
add
out
jo
sub
cld
mov
xorb
push
pusha
adc
add
loope
jmp
popa
lret
or
sub
cld
mov
fidivs
enter
insb
cli
adc
test
outsb
cmpb
cs
jecxz
inc
lcall
insl
add
ss
push
sub
repz
sub
cmpb
xor
xor
fldenv
nop
or
lea
adc
sbbb
jno
sbb
push
pop
push
jo
scas
mulb
in
adc
out
xchg
jb
mov
out
arpl
push
sbb
or
mov
stc
test
xor
xchg
js
add
sbb
adc
rcr
pop
pop
mov
lock
out
lsl
mov
push
call
test
out
pop
loop
push
inc
adc
pop
pop
xchg
mov
dec
mov
insl
inc
adc
repz
in
cmp
lahf
fs
repnz
pop
mov
jns
add
out
jl
mov
inc
repnz
loop
add
aad
push
fnstsw
lods
imul
enter
inc
or
add
lds
cmc
dec
add
mov
pop
pop
lock
popa
cltd
xchg
nop
sub
clc
inc
adc
xor
es
nop
mov
test
imul
jo
leave
dec
mov
outsl
push
es
cmp
push
or
pop
dec
popf
jo
dec
add
fnsave
pop
add
cld
out
jp
inc
je
push
add
nop
divl
jnp
add
fwait
mov
outsl
and
add
loop
stos
mov
iret
nop
out
lret
add
cs
mov
mov
rolb
pop
sbb
mov
xchg
setle
mov
arpl
add
testb
js
add
dec
rcrb
pop
adcb
int
out
loop
cwtl
imul
jo
lret
sti
stc
enter
add
cld
movsb
mov
addb
push
jno
test
test
in
adc
int3
add
dec
xchg
shlb
data16
fiadds
xor
sbb
cld
sbbl
lahf
inc
mov
ljmp
and
jb
lret
inc
fldl
or
xchg
movsb
pop
movsl
faddl
push
jge
xchg
push
loopne
roll
std
imul
imul
leave
mov
add
push
add
popa
inc
pop
adc
notl
mov
jmp
push
dec
out
loopne
sub
jb
add
inc
xchg
fiadds
imul
roll
mov
or
add
mov
pop
adc
test
cmp
sbb
mov
mov
fadds
movsb
jb
popf
and
loopne
xchg
sbb
xor
add
pop
cmpsl
add
xchg
pop
lock
add
mov
dec
ret
inc
add
push
push
or
adc
loope
mov
incb
mov
xchg
jg
hlt
or
out
inc
je
or
mov
pop
jne
or
jo
roll
adc
cmp
ret
inc
sub
lock
gs
lcall
adc
orl
inc
add
cmp
fiadds
cmp
jmp
add
mov
dec
push
jge
bound
push
mov
pop
les
or
inc
mov
xchg
jno
cmp
mov
lcall
mov
icebp
dec
pop
add
push
mov
add
loopne
daa
add
rorl
add
aam
aaa
js
fdivr
add
or
inc
scas
sbbb
cmp
jnp
and
cwtl
stc
mov
push
adc
or
or
xor
retw
clc
add
mov
lock
lahf
je
add
xchg
and
popl
mov
incl
add
jle
ja
xor
mov
jbe
scas
add
or
icebp
add
lcall
mov
mov
loopne
mov
stos
ja
sbb
sarl
iret
xchg
cmp
popw
xor
loopne
notl
add
popf
jmp
cmpb
clc
jle
dec
lods
add
inc
daa
setg
sbb
mov
les
fcmovnb
push
adc
outsb
add
push
fld1
or
inc
or
aad
bound
jp
lock
jmp
jns
out
pop
jno
lret
or
cmp
jmp
add
fnstsw
cmpsl
mov
int3
insb
sbb
test
and
xchg
jo
movl
add
lret
ja
nop
jle
sub
lret
icebp
xor
test
lock
in
ja
loope
dec
lcall
jge
js
fcomps
pushf
lds
mov
bnd
mov
sbb
xor
push
fidivrs
or
inc
add
test
outsb
cmp
mov
cmpsb
sub
fwait
add
movsb
xor
testb
push
sub
icebp
fdivrs
push
and
scas
pop
and
lret
jne
mov
jo
mov
lcall
xor
sbb
movups
lods
lret
jno
cmpsb
and
adc
add
xor
pop
mov
push
jo
pusha
add
insb
aad
sbb
or
test
xchg
jp
xor
jl
cli
popa
cmpsl
inc
enter
stos
lods
push
cmp
aas
add
xor
push
mov
out
add
jbe
push
jge
pop
xor
push
push
adc
cmc
filds
xchg
jecxz
cmpsl
cmp
hlt
mulb
push
test
je
clc
daa
add
shlb
add
fistl
pop
add
and
inc
call
xor
and
push
jecxz
shrl
cmp
and
cmp
test
scas
add
stos
and
xchg
in
fbld
ret
dec
push
jge
pop
test
jb
scas
xchg
sbb
jle
cli
mov
lret
push
sbb
out
jbe
rolb
xor
sarb
mov
sahf
sub
push
movsb
add
das
mov
js
pop
imul
insl
push
aam
js
add
jge
adc
cld
arpl
lcall
add
repnz
pusha
inc
sub
and
pop
cmp
movsb
das
lock
filds
xor
aaa
jge
dec
jle
lock
flds
std
lcall
cmp
add
cmp
add
xor
sahf
subb
or
sarl
or
cmp
js
jb
push
lret
add
shlb
push
pop
loop
add
sbbb
std
into
mov
mov
sub
xchg
bndldx
pop
add
and
pop
dec
mov
and
icebp
hlt
mov
test
cmp
fdivrs
add
aas
jg
or
loopne
ss
and
mov
jg
push
or
inc
movsl
dec
jmp
dec
js
add
mov
xchg
add
cwtl
pop
out
mov
call
xchg
sbb
sub
sahf
add
pop
or
lcall
push
pusha
add
push
das
jnp,pn
xchg
add
and
ret
pusha
sbb
and
adc
xlat
jnp
sarb
rcll
mov
in
out
lea
faddl
ds
mov
sbb
out
rolb
rol
test
popf
mov
jb
les
mov
mov
cmp
add
filds
add
cltd
fadd
mov
add
pop
int3
sbb
and
sti
aaa
mov
fiaddl
sub
sahf
add
aas
mov
fsubrs
add
pop
inc
and
jno
rolb
daa
and
in
push
sets
cmp
repz
cmp
xchg
mov
add
loope
cmp
add
pop
incb
mov
dec
lahf
movl
inc
std
xor
or
jp
dec
dec
sub
mov
rcl
test
dec
add
jnp
pop
movl
cmp
setb
xor
into
subb
popa
lcall
xchg
push
mov
pop
add
in
push
pusha
rcr
mov
mov
fsubs
pop
clc
mov
lods
push
inc
test
imull
cmc
lret
shlb
inc
sub
pop
sub
scas
sbb
cwtl
dec
xchg
push
add
sub
loopne
xor
jns
xor
lods
rclb
mov
sbb
adc
sbb
push
test
jle
scas
mov
or
in
aad
movsb
adc
ret
mov
mov
ret
lods
xor
incb
rclb
or
pop
add
inc
insl
mov
das
out
stos
and
xor
test
push
add
arpl
shr
fimuls
cmp
fwait
pop
pop
movb
add
test
add
psrld
cwtl
xor
lahf
scas
xchg
and
lock
adc
fcmovb
cmp
push
into
roll
mov
xchg
jne
add
incl
dec
pop
pop
dec
test
cmpsb
sbb
sbb
or
sub
adc
iret
mov
roll
or
sub
nop
push
in
icebp
test
xor
addr16
jo
sarb
pop
pop
adc
inc
cltd
call
std
test
sub
loope
pop
or
aam
rcll
xchg
cmp
call
inc
les
gs
xchg
xor
icebp
shlb
xor
pop
add
jge
cltd
mov
inc
mov
pop
adc
add
adc
mov
mov
pop
mov
sbb
pushf
cmp
jl
mov
loopne
add
cli
outsl
imul
push
clc
inc
add
inc
repnz
test
aaa
outsl
loope
stc
xchg
sbb
cmp
add
sub
and
adc
fldl
xchg
nop
jmp
push
test
lea
pop
cli
jno
nop
jg
js
stc
fsubrl
add
loopne
xchg
add
pushf
movsb
dec
sbb
fadds
pop
xor
subl
xor
sbb
or
clc
lock
xor
mov
loop
sub
fistpll
cwtl
rcrb
add
mov
inc
adc
jmp
xchg
sbb
add
das
shr
fildll
nop
jne
aaa
mov
dec
or
mov
fsubl
xchg
cltd
xor
ss
test
mov
popf
jle
add
std
idivb
push
push
push
jb
inc
mov
mov
and
xchg
addl
jl
add
push
outsb
hlt
fstpl
or
sub
cltd
mov
call
je
sub
sbb
jmp
xor
movsb
pop
xor
roll
stos
mov
jmp
je
lods
or
jne
loopne
jo
add
call
loopne
repz
add
push
and
push
les
add
sub
pop
out
sti
pop
bnd
movsb
cmp
rcll
fidivs
insl
cmp
push
pop
xorl
jb
add
lock
mov
ja
jg
add
sti
mov
insl
mov
cmp
pop
bound
imul
dec
inc
xor
lods
jb
cmpsl
add
rclb
add
and
fcmovnu
popa
pushf
add
mov
mov
or
push
enter
push
sarb
mov
or
lods
stos
inc
and
push
adc
add
outsl
mov
ljmp
jno
mov
jne
mov
push
and
movsb
shlb
sub
outsl
push
lcall
popa
xchg
dec
sar
pop
push
addr16
xorb
add
test
hlt
and
aas
add
cli
xor
cwtl
push
into
sub
mov
push
sti
mov
out
sub
pop
and
idivb
add
sbb
add
scas
aaa
jg
jae
in
add
sub
fiadds
cmp
cmc
lock
loopne
dec
jg
add
mov
push
xchg
test
push
add
orb
or
sub
sarl
sbb
jno
and
gs
adc
sti
cwtl
fidivrl
add
imul
jmp
adc
add
cld
out
cs
pop
nop
add
push
ja
stc
mov
xchg
test
aas
push
add
mov
push
adc
scas
push
xchg
ret
add
cld
jb
dec
cmpl
add
inc
out
add
addb
inc
rcl
outsb
xor
push
add
jb
and
pop
add
leave
jo
and
jge
jl
add
call
loop
mov
orl
rorl
rclb
inc
add
das
add
push
xchg
pushf
mov
or
dec
lahf
pop
cmp
lods
jbe
dec
rclb
loop
jne
xor
jle
inc
adc
inc
mov
or
movsl
cmp
dec
js
pop
movl
inc
add
jnp
pmullw
inc
and
pop
and
in
outsl
or
xor
sbb
push
int
jle,pn
rolb
pop
or
enter
inc
and
cli
sbb
pop
mov
lret
enter
adc
or
js
or
lcall
test
mov
pop
mov
add
and
mov
adc
add
cmp
addl
add
vorps
or
add
inc
mov
div
mov
aam
insb
int3
loopne
xor
popf
int
fisttps
push
dec
dec
inc
pop
add
cwtl
or
and
lahf
fimuls
add
push
inc
pop
push
jno
loopne
mov
insb
dec
add
jg
and
sub
cmp
mov
add
mov
mov
add
bnd
add
shrl
pop
add
imul
or
and
add
ja
test
outsb
push
loop
sbb
jne
in
call
in
roll
or
inc
mov
sub
jge
arpl
and
test
and
sbbl
add
cmp
and
inc
mov
repnz
add
imul
sbb
pop
inc
add
inc
inc
pop
sti
jecxz
test
rolb
xor
add
arpl
lahf
adc
js
ret
push
add
sub
inc
dec
sbb
call
mov
mov
lods
cmp
mov
xorb
sbb
imul
push
pop
flds
lods
lahf
test
fdivl
mov
fcom
inc
add
xor
cmc
adc
sbb
mov
xorb
rorb
mulb
cwtl
mov
movsl
jge
jo
das
imul
mov
ss
clc
clc
icebp
or
cmp
mov
mov
ja
jns
add
les
js
add
imul
xor
mov
jg
push
cmpsb
js
add
mov
mov
add
mov
cmp
add
jnp
lods
jns
sbb
add
cmp
ds
sub
pop
fildll
cwtl
popa
jecxz
clc
pop
ret
cmp
ds
out
int3
fwait
ss
and
pusha
push
xor
bound
add
and
and
add
dec
int
movsb
fisubrl
jno
add
test
push
mov
mov
sub
es
or
add
lret
lods
jb
loop
pop
mov
aaa
mov
sbb
mov
mov
jae
push
pop
mov
fstl
jg
add
jg,pt
add
pop
mov
xor
cmp
add
jns
jo
add
lods
add
push
pop
lret
add
mov
sub
mov
pusha
rclb
sub
add
aas
push
dec
nop
popl
push
or
mov
push
test
fwait
stc
add
dec
popf
jno
adc
add
mov
loopne
sar
push
adc
sub
notb
and
out
fmuls
scas
cmpsl
and
sbb
add
and
add
xor
ds
subb
jbe
dec
aam
add
sti
jmp
mov
mov
lods
test
push
pop
jle
lds
pop
sahf
add
jnp
jo
add
cmp
lcall
pop
dec
mov
push
or
lcall
loopne
adc
cmp
fisttps
arpl
mov
add
adc
lret
add
xor
fidivs
and
fcomps
rolb
shlb
mov
rorb
jae
ret
jmp
dec
add
in
adc
pop
adcb
lahf
add
lret
xchg
jge
call
movsl
adc
scas
icebp
cld
add
or
imul
lods
add
jle
daa
fwait
std
cmpb
cmp
cmc
xor
mov
loopne
mov
xor
mov
cmp
icebp
add
mov
shl
rorl
add
scas
arpl
lock
test
in
test
push
cwtl
add
and
xchg
adc
or
jne
sarl
or
and
inc
sbb
inc
xor
movsb
pop
mov
mov
leave
out
or
out
push
sqrtps
xor
fdivrs
inc
sbb
test
pop
mov
inc
xor
loop
cmp
pop
dec
sub
mov
push
mov
cli
dec
cmp
xorb
add
push
in
lods
lds
pop
pop
xor
addr16
add
sub
stos
jno
cmp
cmp
xchg
pusha
pop
sbb
nop
stos
les
mov
mov
add
repz
mov
js
dec
mul
jmp
sub
xor
iret
cli
jp
adc
pop
or
stos
add
rolb
sbb
ret
fsubl
imul
jno
add
popa
inc
bound
nop
outsl
dec
dec
out
rclb
and
daa
addb
mov
scas
lahf
push
fucomp
insl
add
pop
mov
xchg
aas
clc
push
sbb
xchg
imul
or
pop
pop
sarl
lds
add
xor
add
sarl
add
dec
pop
movsl
push
test
clc
sub
int3
call
rorl
jnp,pn
sub
ret
mov
pop
ret
out
nop
pop
in
dec
dec
mov
add
or
mov
and
ret
cmp
jo
cmpb
xchg
sti
fldl
lcall
sbb
addl
cld
les
fwait
hlt
sub
push
cmpl
pop
in
sub
dec
xchg
or
jo
orb
add
popl
mov
xchg
and
and
imul
movb
test
outsb
push
push
into
dec
jge
cmpsb
mov
or
sti
rolb
xor
jb
push
xor
std
andb
hlt
stc
or
rolb
cmovp
js
shl
in
add
cli
andb
pop
push
xor
mov
stos
dec
mov
adc
sahf
and
inc
sub
cmc
das
add
mov
pop
in
push
dec
unpckhps
jnp
in
outsb
andb
mov
add
jne
push
int3
sbbb
lock
mov
pop
mov
sub
mov
jl
add
jp
std
push
push
cmovle
jbe
movsl
mov
loope
xor
jg
mul
push
int
lret
nop
or
pusha
inc
mov
inc
cmpsl
add
mov
sbb
mov
cwtl
or
dec
adc
and
mov
lea
test
adc
inc
sbb
xchg
add
mov
and
out
lods
pop
xor
sbb
mov
mov
movsb
fsts
and
divb
std
ret
dec
add
int
cmpsb
fcompl
shlb
test
bound
rcrl
test
movmskps
loop
xcrypt-ctr
cmpsl
fwait
imulb
inc
in
pop
push
add
jle
lret
sub
pop
frstor
sbb
xchg
or
mov
sbb
and
xchg
xchg
ljmp
push
out
enter
scas
or
jae
in
daa
js
into
inc
xorb
clc
jno
xchg
push
mov
mov
jne
sub
inc
imul
sub
fnsave
lret
insb
clc
or
add
not
test
ficomps
add
jecxz
inc
mov
or
jmp
or
fcmove
mov
mov
xchg
sti
and
mov
inc
fnstsw
or
adc
mov
pop
lds
pop
jb
or
pop
xchg
add
ds
es
addr16
jg
test
cwtl
je
cmp
jl
xor
fdivrs
or
pusha
aam
adc
mov
mov
sbb
add
jnp
sbbb
in
sbb
cs
cmp
lods
add
mov
add
add
pop
jnp
sti
int
cmpsl
fisubl
out
cmp
add
push
ljmp
dec
mov
xor
out
push
in
add
loop
sub
jge
daa
dec
mov
sbb
xchg
or
cmp
adc
pusha
aam
pushf
add
sub
aad
cmpsb
xchg
dec
sbb
and
xchg
lock
cmp
stc
add
lods
or
xor
in
shrb
jns
xchg
cwtl
add
pop
test
das
arpl
loopne
jg,pn
mov
add
lret
fs
xchg
pushf
outsl
cmp
add
cmpsl
inc
cmp
leave
les
mov
sbb
jo
pop
pop
xchg
jle
mov
and
jno
mov
mov
push
lock
sbb
pop
adc
test
test
mov
cmp
icebp
or
jo
mov
sub
xchg
xchg
in
call
cmp
mov
daa
and
jg
sbb
arpl
sub
cmp
xchg
int
mov
cmpsb
sti
sbb
nop
leave
in
adc
sbbl
adc
push
test
lcall
cmp
scas
loope
and
es
add
dec
pop
data16
rolb
int3
sti
dec
mov
stos
pop
pop
lret
mov
js
add
lea
sbb
or
adc
mov
mov
add
insl
cmp
es
arpl
cmp
sbb
push
mov
pusha
mov
inc
data16
pusha
imul
xchg
je
cmp
sbb
arpl
push
lea
out
inc
sbb
mov
sbb
add
xor
push
dec
andb
add
cmp
and
pop
mov
ljmp
cmp
add
rcrl
xor
mov
mov
cmp
mov
inc
inc
inc
push
xor
popa
push
out
add
jb
out
lcall
fmuls
pop
cmp
xchg
xchg
mov
ljmp
insl
or
ja
cmpsb
add
call
cltd
addr16
push
into
mov
add
pop
cmp
add
push
shrb
lods
mov
ja
push
mov
fmull
add
lahf
jp
xchg
ret
out
xlat
shlb
jo
sahf
dec
enter
fidivs
sub
mov
test
cmp
stos
or
repnz
cwtl
mov
ja
pop
xchg
push
xchg
adc
sarb
jno
add
push
cmp
jle
jl
push
xor
add
xor
or
xor
stos
rol
movsl
push
push
add
repz
in
mov
xchg
lcall
daa
jle
or
xchg
cmpl
scas
cvtdq2ps
sub
pop
jno
or
in
sbb
xor
push
mov
loop
add
shll
int3
xor
sbb
int
insl
test
dec
nop
pop
imul
sub
out
repz
xor
nop
dec
add
sbb
jecxz
mov
add
push
ds
shl
jnp
pop
mov
lods
xor
in
test
adc
and
pop
stos
rclb
aad
pop
loopne
cld
or
mov
xchg
icebp
in
mov
sbb
in
jle
or
cmp
pop
les
dec
pop
or
jge
ret
testl
rolb
xchg
add
push
movsl
rclb
add
add
mov
sarb
add
adc
and
cltd
add
lahf
mov
xchg
hlt
leave
outsb
push
ret
cltd
cmp
sub
add
and
aad
in
pop
inc
and
leave
add
loope
aas
test
insl
les
xor
mov
mov
xchg
ret
shlb
loope
mov
sarl
cmp
mov
mov
insb
out
and
sbb
add
sub
inc
add
out
inc
scas
dec
jno
sbb
shlb
add
into
mov
add
das
cmc
scas
out
add
mov
or
inc
add
sbb
stos
out
fiadds
xor
lcall
scas
call
aaa
add
adc
jge
repnz
out
fwait
dec
push
inc
test
test
lods
inc
inc
push
pop
mulb
add
or
and
sahf
add
or
dec
and
push
insb
loope
mov
jns
xor
stos
sbb
add
fcom
add
adc
jecxz
sub
add
cwtl
mov
stos
out
jl
adc
push
sbb
pop
inc
add
repz
dec
inc
andl
pop
cmpsl
add
fstpl
sub
cmp
xchg
inc
and
lods
leave
cmp
lds
cmp
gs
iret
push
jo
add
dec
jle
rorb
push
jl
add
dec
jp
outsb
mov
add
in
xor
push
add
cmp
data16
addr16
and
in
scas
xchg
sbb
jmp
xchg
or
mov
lods
das
incl
leave
ja
loop
mov
adc
lar
push
xchg
ret
sub
push
das
xchg
mov
lcall
add
sub
cli
xchg
xor
mov
mov
cmp
orb
lods
add
dec
sub
dec
jno
roll
jnp
push
add
aas
mov
cmp
adc
ret
cmp
sbb
addb
pushw
jns
mov
mov
adc
cltd
add
sub
mov
jo
pusha
cmc
add
outsb
dec
int
mov
dec
shll
add
ss
nop
mov
sbb
les
add
jno
push
xor
push
add
pop
xchg
scas
pop
movsb
sub
inc
dec
add
add
mov
lret
xor
bound
mov
push
inc
xchg
and
cli
imul
shr
movsb
subl
cmpsb
sub
mov
cmp
mov
pop
dec
xor
scas
mov
in
xchg
daa
inc
das
add
aam
shll
xor
cwtl
lea
xor
movsl
popa
add
jb
mov
push
fistl
dec
cwtl
push
testl
into
das
loope
add
vandnpd
js
add
sub
sub
mov
jb
add
das
cld
xor
add
mov
iret
aam
inc
icebp
xchg
lods
mov
push
pusha
je
ret
shlb
int
jne
dec
pop
cmp
sahf
and
fwait
sub
xchg
sub
addr16
das
cmp
sub
push
push
add
jbe
cmpsb
dec
jmp
pop
xor
mov
add
lret
lock
lods
push
push
outsl
clc
mov
lcall
xor
push
bound
add
xchg
cmpsb
mov
dec
cmpsl
mov
or
mov
jbe
iret
add
ljmp
lods
pop
xchg
mov
movsb
and
add
jecxz
int
aad
subb
gs
fwait
imul
out
data16
das
mov
sbbl
mov
push
les
popf
add
and
test
icebp
loopne
test
add
xchg
hlt
xchg
popa
stc
sub
repnz
orb
je
mov
popf
pop
sbbl
movsl
mov
or
lock
fimull
inc
add
iret
roll
ds
dec
jnp
std
cmp
xor
test
add
mov
add
es
pop
mov
mov
mov
cmp
pushf
add
hlt
imul
sbb
enter
test
xor
or
add
adc
pop
jnp
add
movsl
shll
add
mov
clc
pop
xchg
and
mov
sub
jmp
ljmp
fstpt
add
outsb
add
cmpsl
mov
shlb
insb
add
mov
mov
inc
cmp
sbb
call
xlat
inc
inc
sbb
xor
sbb
mov
testl
inc
jae
and
cmp
rolb
outsl
cld
cvtps2pd
in
xor
notl
cltd
jecxz
add
aaa
mov
mov
sub
lock
clc
sti
in
sbb
add
add
popf
je
push
mov
jo
mov
dec
shlb
lock
pop
and
add
cmp
jnp
dec
add
cwtl
sub
stos
lods
or
mov
andl
cli
sub
pop
xchg
andb
mov
flds
mov
out
in
in
cmpsl
repnz
outsb
pop
cld
add
int3
inc
pop
and
pop
xchg
add
cmp
push
add
push
cld
jne
cwtl
adcl
push
xor
and
xor
mov
pop
xor
sbb
sti
pushf
test
leave
push
add
rorl
xchg
stos
addl
push
adc
testb
inc
loopne
push
jnp
or
xchg
mov
sbb
adc
cld
xor
lock
dec
add
or
cmp
shll
add
sahf
sbb
xchg
cmp
cmpl
lock
push
inc
lock
add
test
push
inc
add
das
andb
mov
xchg
test
rol
adc
dec
add
loope
cmp
jmp
jae
loopne
ljmp
push
push
enter
lcall
fildl
mov
xor
fbstp
push
xlat
push
mov
hlt
push
cwtl
scas
ltr
and
add
xor
mov
hlt
inc
adc
jnp
push
scas
dec
sub
inc
icebp
add
mov
push
dec
and
sbb
fisubl
mov
push
aaa
or
xor
add
push
xlat
dec
ja
sbb
mov
dec
xor
or
push
dec
cmp
les
adc
sbb
in
push
xor
or
ficoms
cmp
or
mov
push
xor
stos
sbb
shlb
cwtl
xor
pop
pop
outsb
mov
rorb
sub
push
dec
xor
and
test
ja
jbe
lret
lds
ficoml
inc
andb
dec
jbe
cmpsb
addr16
cli
movsl
cmp
mov
adc
add
scas
ja
enter
pop
fiaddl
clc
mov
sub
xor
sub
xor
in
add
repz
add
pop
add
add
dec
pop
dec
mov
xor
sbb
add
iret
stc
int3
inc
inc
pop
shrb
stos
nop
mov
add
int
push
subps
cld
imul
sbb
adc
pop
js
push
push
jno
test
gs
jl
add
mov
lods
orl
or
out
add
mov
xor
lea
cmpb
int3
cld
add
jl
ret
std
ret
dec
repz
pushf
clc
push
popf
push
ficoms
lea
pushw
add
mov
cli
loopne
add
jge
pop
stos
js
dec
nop
aad
outsb
inc
add
push
jge
test
pusha
mov
or
cs
mov
shrl
test
add
cmpsb
dec
lods
add
dec
sbb
pusha
sti
mov
jae
cwtl
pop
add
in
int3
aam
push
add
push
scas
push
add
stos
adc
mov
mov
sub
rolb
add
push
pushf
arpl
into
jge
add
pop
std
xor
pusha
cs
add
inc
daa
sub
mov
test
inc
xor
xchg
pushf
imul
push
xchg
and
enter
cmp
xchg
add
movsl
sbb
mov
add
bound
add
jge
push
or
cmp
sub
dec
mov
cmp
pop
add
inc
aas
xchg
pop
or
add
mov
outsl
mov
jl
add
movl
or
jne
arpl
nop
xchg
add
icebp
ja,pt
fbld
pop
pop
sahf
mov
xor
repnz
pop
xor
xchg
ficomps
add
rorl
fldl
xor
cmpsb
xor
push
pop
aas
shll
faddp
cmc
xchg
pop
pop
mov
add
cltd
dec
leave
clc
sbb
adc
aaa
dec
add
jo
pushf
add
jmp
sbb
sti
rol
sbb
sub
add
mov
xchg
mov
mov
fsubs
jae
cmp
cld
in
icebp
lock
test
divl
sub
stc
fcomp
jnp
add
xchg
imul
add
imul
nopl
or
push
out
add
add
pop
cli
jmp
jb
and
push
mov
das
xchg
rol
pop
pop
sbb
repz
setge
imulb
loopne
push
jne
arpl
test
inc
sub
int
and
mov
mov
out
inc
fmuls
dec
jae
or
mov
jmp
mov
insb
adc
inc
jmp
inc
jbe
inc
ja
mov
in
call
shlb
test
popa
ret
and
mov
and
int
mov
aam
pop
leave
xchg
mov
insl
adc
dec
adc
xchg
popa
nop
aam
sub
cmp
adc
adc
push
jg
xor
hlt
xlat
popl
bound
sub
dec
lds
mov
dec
xchg
es
mov
add
ret
mov
sub
sbb
add
lahf
jnp
test
pop
mov
push
orb
rcrl
stos
push
sbbb
cmp
scas
add
xchg
rcr
cmpsb
dec
or
or
adc
adc
lret
sub
mov
enter
cltd
cmpsl
add
or
jg
and
adc
insl
lret
lahf
sub
andb
lea
mov
enter
lret
addr16
jle
add
fidivl
cmp
nop
xchg
repz
out
jp
xor
call
xchg
mov
testb
lods
mov
test
mov
pop
leave
jno
cmp
flds
inc
xor
add
aaa
jb
movsb
push
jns
cmp
cwtl
xlat
inc
insl
add
jne
mov
push
jo
lds
andb
lods
inc
sti
and
jmp
dec
xor
jg
push
aas
and
mov
out
sbb
pop
or
add
jae
cmp
mov
das
rorl
sysexit
sub
xchg
in
inc
lcall
aaa
test
mov
mov
cltd
add
xor
cmp
add
mov
cmp
add
xor
and
into
gs
repz
pop
adc
loopne
add
std
fyl2x
sbb
aam
rcrb
adc
clc
pop
aaa
std
xchg
push
in
jnp
mov
push
add
das
sti
xlat
out
aas
int3
daa
add
adc
sbb
adcl
add
rorb
orb
fistps
xor
jbe
add
sub
imulb
sbb
imul
mov
push
sub
mov
ljmp
fsubrl
mov
leave
dec
test
fstpl
adc
jp
shll
loop
test
pop
stos
rorb
push
inc
jge
mov
cli
aas
add
jns
rcll
add
ja
addr16
add
xorl
ljmp
lahf
pop
jb
xchg
pop
lret
mov
dec
or
dec
out
pop
push
xor
dec
repz
repnz
sub
idivb
ss
dec
add
xor
xchg
sub
pop
add
dec
dec
inc
lea
or
scas
ficomps
testb
mov
lods
add
iret
or
inc
mov
sub
pop
cld
mov
push
mov
push
inc
int3
dec
sbb
inc
adc
xor
fdivrs
jg
push
cmp
stos
addr16
lock
clc
int3
cld
add
jmp
adc
cltd
test
jl
cmove
mov
mov
jbe
fsubl
sub
mov
push
push
dec
fildl
dec
add
stos
ja
add
sbb
sbb
push
test
pop
xor
and
cmp
xchg
int3
pushf
cmc
imul
js
and
out
shr
cmp
jl
rclb
pop
sub
xor
mov
mov
int3
cmp
out
cmp
mov
jno
add
lea
dec
sbb
push
lret
sbb
iret
out
dec
add
pop
jns
int3
mov
or
leave
mov
iret
dec
and
imul
and
dec
xor
jg
repz
addr16
mov
std
aam
movsl
add
jae
or
aaa
in
dec
lret
mov
dec
aas
outsb
rolb
rcrb
cmp
test
add
popa
xor
add
popf
xor
xchg
xchg
stos
sub
push
sub
in
pop
dec
push
leave
icebp
jg
and
mov
ljmp
jo
adc
subb
and
add
icebp
out
aad
aas
stos
jecxz
outsb
movsb
add
and
or
dec
cmc
or
pop
fwait
pop
icebp
mov
sbb
push
cmp
lret
jge
stos
sarb
arpl
cmp
jae
inc
sbb
mull
stos
add
enter
sbbl
dec
mov
jbe
icebp
mov
loop
cmpsl
out
out
hlt
add
dec
fcmovu
add
jecxz
jmp
sbb
loopne
pushf
inc
xchg
in
lahf
mov
imul
dec
scas
lcall
movsl
daa
push
add
or
repz
add
dec
mov
test
inc
rcrl
bswap
xchg
out
punpcklbw
add
fstpt
add
ja
xchg
add
in
xchg
and
jnp
jl
push
jle
stos
int3
jle
mov
pop
add
daa
sbb
call
pop
int
or
aas
loopne
adc
add
pop
jle
sub
dec
cli
pop
imul
mov
xchg
enter
xor
pop
sbb
imul
pop
mov
mov
mov
cmp
add
scas
xor
inc
pop
out
pop
push
push
sti
dec
out
mov
jo
out
jb
inc
add
inc
mov
jno
popf
bnd
inc
add
cmp
scas
rcr
add
mov
xor
sub
mov
sarl
and
add
dec
call
sbb
add
mov
jno
jmp
add
aaa
jle
popa
ljmp
mov
adcb
mov
pop
lcall
mov
inc
sahf
xor
or
popa
roll
push
jb
rolb
pop
xchg
fwait
pop
sbb
movsb
aas
jmp
add
negl
repnz
cmp
fldl
add
add
sbb
adc
add
iret
xor
add
sbb
mov
cld
add
loop
fldl
push
mov
rolb
xor
jge
cmp
or
jle
xchg
jnp
fdivrs
mov
add
push
rcrb
fucomi
cmp
add
ja
xchg
inc
pop
or
adc
xchg
pop
test
jg
inc
dec
addb
arpl
ret
pop
in
je
les
lods
cmp
add
cmpsb
adc
inc
add
add
push
mov
es
out
cvtdq2ps
add
in
hlt
int3
pop
jo
out
ret
lret
add
pushf
jno
in
add
mov
sbb
add
popf
xor
out
roll
cmp
movsb
push
and
xlat
sub
lods
add
inc
les
dec
mov
add
clc
jmp
in
js
notb
mov
dec
add
mov
add
dec
popf
stos
cmp
pop
pop
les
ja
movswl
arpl
jnp
add
push
jb
mov
scas
add
mov
mov
pop
shll
mov
sbb
and
xchg
and
stos
jl
add
ficoms
pushf
sub
das
mov
cmpsl
andl
test
test
cmpl
pop
mov
cmp
adc
lret
pop
mov
add
cwtl
in
dec
and
test
xchg
pop
cmp
mov
sbb
pop
inc
shlb
test
pusha
clc
insb
add
or
or
sub
mov
sbb
insl
push
xor
test
and
mov
mov
mov
add
mov
inc
push
dec
lock
cmc
mov
test
movsb
dec
lcall
jae
movsl
insl
cwtl
mov
and
jns
mov
and
or
lds
lods
mov
mov
jno
add
fldl
into
lods
dec
scas
test
mov
and
fcoms
ja
aas
adc
testb
subl
mov
into
jns
add
popf
cmpsb
shlb
cmp
sbb
push
out
ds
daa
lods
mov
mov
jns
and
add
push
pop
fdiv
rorl
jbe
adc
add
fs
and
push
pop
push
jl
lods
roll
js
sbb
dec
adc
add
xchg
mov
in
add
sarb
jns
add
mov
cmp
in
test
mov
fisttpl
hlt
sub
cmp
out
repnz
cs
add
sub
jle
jge
mov
inc
gs
lret
pop
jb
leave
paddsw
lcall
fnstcw
sbb
sbb
add
mov
das
push
jo
add
rorb
add
arpl
dec
clc
rorl
dec
add
movsl
in
inc
fwait
aaa
mov
add
and
rolb
loopne
loop
testl
fs
cmp
frstor
push
mov
push
sahf
sub
loop
dec
mov
add
cmpsb
dec
in
test
pop
repnz
pop
adc
cmp
jl
add
jmp
call
iret
jno
loope
ljmp
lods
pop
inc
add
xor
and
or
xor
cmpsl
adc
repnz
iret
xor
int
ficompl
das
hlt
insb
sbb
test
fsubs
xchg
int3
add
aas
push
js
idivl
jne
dec
jmp
and
xchg
pop
add
ret
inc
cmp
fsubrs
int
dec
pop
or
cmpsl
clc
sub
sbb
pop
mov
or
dec
adc
add
clc
jp
and
add
loop
xchg
lret
sbb
add
addr16
mov
jb
xor
mov
call
xor
add
cmp
add
inc
scas
fnsave
out
cmpsb
cmp
adc
inc
mov
xor
test
inc
mov
insl
mov
mov
sub
orb
xor
jb
mov
xchg
hlt
jo
and
add
lahf
jo
mov
test
adc
push
xor
add
movsb
sbb
xchg
and
mov
loopne
test
jbe
add
xor
lock
mov
dec
data16
rcrl
add
adc
cmp
rep
adc
xor
movsb
ja
movsl
mov
jb
mull
cmp
adc
mov
imul
clc
movsb
lret
in
xchg
ret
stos
push
outsl
call
imul
dec
sub
push
leave
jo
out
in
ja
int3
scas
test
add
sub
sahf
dec
je
and
push
pop
mov
pop
jp
flds
cmp
pusha
loopne
in
add
sarb
add
es
sbb
add
lds
push
in
test
rorl
add
fsts
cs
mov
jbe
mov
dec
jl
xor
inc
jp
add
adc
cmp
pop
push
int
repz
add
mov
pop
cmc
int3
mov
inc
adc
add
shrl
mov
cld
aam
xor
pop
divb
add
sbb
mov
mov
add
out
cmp
adc
subb
mov
add
dec
or
out
push
sub
aas
mov
or
push
jge
add
cli
adc
lock
pop
leave
ss
lea
jb
xor
pusha
jg
add
stc
lret
adc
data16
add
lret
cmpsb
cld
xchg
ficoms
movsb
dec
popf
in
sbb
fiadds
inc
lahf
add
cmp
mov
jae
fs
mov
cmpsl
add
lahf
and
pop
adc
xor
mov
shll
mov
add
cmp
cmp
repz
insb
in
out
sbb
test
pop
pushf
fists
push
sub
sarb
out
inc
pop
or
pop
add
shlb
cmp
iret
aaa
lods
mov
lcall
lds
add
frstor
lock
add
mov
add
mov
add
mov
cs
xor
test
and
add
push
push
fadds
and
pop
addb
add
and
int
mov
fsubs
fcompl
push
mov
push
xchg
xor
aas
lahf
cmpsb
cmpsl
xchg
push
sub
test
pop
dec
jmp
add
out
pop
int3
add
cmp
push
mov
and
mov
dec
pop
jl
addb
int
add
sti
popa
push
lcall
jo
movsl
les
add
addr16
xchg
inc
call
addb
test
or
add
adc
add
or
ds
pop
loop
mov
add
ret
add
or
pop
inc
imul
xchg
je
imul
outsl
scas
sbbb
pop
pop
movsl
or
stos
rcl
push
test
std
jb,pt
fisttps
lods
lret
mov
lock
sub
lods
cwtl
lcall
add
add
and
insl
repz
dec
adc
mov
aad
sub
cmp
lahf
mov
push
dec
clc
pop
aaa
lock
add
cli
mov
nop
or
movsb
xor
inc
add
jo
cmp
push
test
lods
pop
dec
bound
pop
jo
lret
scas
lds
arpl
sub
pop
jbe
cmpl
mov
cmp
movsb
loop
add
mov
dec
testl
add
shlb
dec
mov
add
dec
add
push
adc
adc
sub
str
sbb
movsb
ja
pop
push
das
ret
and
jmp
or
fisubs
push
lret
mov
test
add
inc
inc
cld
mov
add
dec
lret
bound
andb
push
cmp
adc
dec
adcb
or
add
or
fwait
push
loop
push
ja
daa
data16
mov
or
in
and
and
dec
stos
or
and
add
inc
dec
insb
pop
add
aam
pop
rcr
mov
js
push
jg
jno
shr
xor
outsl
cmp
out
add
add
daa
adc
cmpsl
jno
add
pop
addb
out
hlt
cmp
cli
add
or
mov
enter
jp
cmp
sbb
iret
mov
test
push
jnp
cli
lret
add
push
mov
cwtl
je
hlt
add
pop
xchg
jne
fcomps
daa
dec
and
sub
cmp
dec
and
out
pop
popa
dec
lcall
lahf
sbb
mov
xchg
pop
inc
fmul
mov
addr16
mov
add
aad
cmpsl
pop
ret
pop
cli
call
adc
es
je
mov
adc
loop
add
pop
jmp
add
rcl
mov
ret
rol
pusha
int3
daa
lea
roll
inc
adc
and
cs
popf
sub
movsb
jmp
sbb
das
and
cmp
mov
xor
push
pop
and
add
add
mov
jle
or
aaa
or
sub
mov
add
imul
adc
add
sarl
cmp
sub
sbbb
cmc
jo
clc
pop
int
add
inc
in
aad
inc
add
jb
sub
sbb
sbb
push
sub
aaa
add
cmpsb
cmp
add
or
add
out
xchg
rcl
gs
add
mov
push
inc
mov
add
test
jle
outsb
loope
add
data16
inc
mov
mul
sbb
sub
adc
lea
stos
mov
add
movsb
sbb
pop
inc
mov
add
mov
notl
mov
decl
or
add
push
fnstsw
mov
jnp
cmpsb
add
loopne
hlt
rcrb
add
jl
push
lds
test
inc
call
push
enter
inc
dec
in
xor
cltd
add
in
pusha
inc
sub
addb
or
dec
out
enter
lods
fcmovb
jmp
fldl
sti
mov
inc
cs
xlat
xchg
jmp
loop
lods
inc
mov
mov
pusha
jns
dec
cmpsb
xor
mov
cmpsl
add
testl
loopne
push
testb
or
stc
add
sub
xor
fdivs
inc
repz
loopne
xor
fst
cmp
lds
inc
bound
in
adc
loopne
add
shlb
inc
sub
test
pop
inc
in
ss
mov
add
out
fcompl
push
add
into
lods
jg
cmc
cmp
mov
dec
adc
mov
or
mov
js
lret
cmp
sub
mov
mov
push
mov
movl
popa
jns
mov
add
mov
mov
sbb
mov
shl
aad
jecxz
std
mov
or
lea
push
inc
aam
xchg
jns
push
inc
divb
imul
push
add
and
bound
jg
idivl
js
add
xchg
cwtl
xor
shlb
add
dec
pop
mov
xlat
int3
arpl
insl
sbbb
ds
dec
xor
aas
add
or
out
jno
sti
cmp
xor
lahf
rcrl
pop
xchg
add
lcall
jbe
or
addb
dec
in
ljmp
pslld
or
cmp
ljmp
ds
jp
sahf
outsb
and
add
xchg
test
cmp
add
add
mov
icebp
sbb
clc
inc
jmp
add
pop
and
pop
aad
into
mov
or
dec
das
add
repz
repnz
dec
mov
test
jnp
add
jg
imul
rolb
adc
add
add
lcall
in
cmp
jb
or
repz
scas
imulb
pusha
loopne
clc
outsb
add
stc
inc
mov
jnp
pop
rorl
push
add
lds
cmp
mov
es
inc
mov
sbb
rcrl
test
inc
stos
sti
push
loopne
gs
mov
cmp
cmpsl
xor
xlat
or
fmul
sub
add
icebp
push
dec
lcall
mov
mov
jno
push
addr16
push
mov
clc
test
add
cli
cmpl
movsb
mov
rolb
adc
pop
adc
mov
mov
push
mov
jmp
add
cmpsb
or
xor
push
icebp
scas
cltd
push
add
jp
data16
pop
cwtl
popa
xchg
lock
jno
dec
push
ret
and
and
fiadds
loope
cmpb
sub
stos
add
sbb
xor
aaa
fnstsw
fimuls
pop
mov
aad
xorb
adc
add
mov
int3
dec
mov
mov
loop
cli
sbb
lcall
mov
pop
test
xchg
mov
push
hlt
ret
jmp
fimuls
jnp
sub
add
mov
bound
inc
pop
fcoms
xlat
add
xor
cmp
rcrl
iret
faddl
scas
add
imul
xor
shl
cmp
shr
negl
add
stc
out
mov
aam
pop
lret
cmpb
or
mov
xchg
out
inc
add
imul
fists
and
adcl
pop
mov
jnp
andb
data16
out
popf
dec
pusha
xchg
pop
ja
add
sub
and
push
aam
rorb
pop
mov
mov
add
push
lds
push
es
or
inc
jmp
push
insl
rclb
mov
add
arpl
pop
mov
push
or
mov
xor
sbb
pop
push
and
add
xchg
stc
test
adc
mov
xor
xchg
or
lock
je
xor
aaa
and
cli
in
push
test
lds
dec
nop
jle
in
add
cmp
push
ret
push
addr16
cltd
inc
rcr
dec
jecxz
pop
mov
andb
test
inc
dec
addr16
push
sub
movsl
jl
push
mov
sbb
arpl
add
out
adc
test
fisttps
jmp
imul
nop
lock
sarl
dec
mov
aas
out
xchg
leave
test
push
add
mov
loop
jmp
dec
mov
add
scas
in
lods
jge
mul
repz
jg
dec
or
roll
cwtl
mov
sbb
adcl
fneni(8087
xchg
in
out
add
ficompl
fistps
pop
insl
pop
add
fsubrs
mov
test
cmpsl
add
and
or
add
jnp
xor
inc
adc
lock
add
orb
ljmp
gs
cld
idivb
xor
addr16
inc
inc
cld
out
add
adc
cmp
inc
dec
and
add
jl
lds
push
int
in
jle
add
movsb
add
mov
into
roll
xchg
in
icebp
pop
pop
hlt
add
repz
jne
dec
mov
mov
jns
jbe
incb
dec
cs
jno
mov
xor
rcr
loope
dec
dec
jnp
movd
jmp
ret
xchg
jl
outsl
mov
pop
add
sub
in
and
mov
add
push
call
inc
pmaxsw
subb
cmpsl
addl
mov
dec
adc
subl
inc
arpl
in
xchg
mov
nop
popa
notl
sub
jae
pop
fildl
lret
test
into
enter
add
xchg
cmp
mov
xchg
add
jb
add
ljmp
pop
repz
and
out
arpl
push
mov
mov
jp
xor
stos
insl
jno
jns
pop
rcrl
out
ret
nop
mov
xor
adc
mov
add
mov
mov
dec
dec
xchg
ret
sbb
sbb
psubsw
add
mov
iret
cmp
lret
addr16
add
stc
cmp
in
mov
add
push
mov
int
adc
add
mov
adc
xor
sbb
dec
add
int
subl
dec
loop
add
lret
sti
or
rolb
stc
xor
movsb
inc
xorl
insb
out
enter
add
xor
push
add
loope
mov
push
lret
jns
push
aad
add
repnz
test
and
xor
lds
fsubrl
dec
pushl
mov
add
adc
lret
mov
mov
add
push
jb
jo
xchg
iret
scas
sub
dec
add
cmp
inc
cmp
fidivl
pop
addl
addr16
jb
push
dec
push
lock
clc
fwait
outsb
pusha
sub
aam
jo
repnz
cmpsl
push
mov
sub
and
xor
sub
shrb
add
mov
add
mov
sarl
movsl
push
test
add
xchg
mov
inc
dec
push
sub
je
cmpsl
jb
andb
pop
aas
xchg
rorb
les
lds
cmpsb
mov
das
add
call
cmp
mov
adc
add
push
scas
sbb
lock
or
fsubrl
mov
data16
and
add
aam
mov
push
popf
sbb
adc
ds
mov
jg
or
ss
and
mov
loop
es
add
push
testl
jnp
shr
or
jbe
add
xchg
mov
iret
xchg
mov
testb
in
fcoml
fldl
xor
xchg
pushf
pop
sbb
scas
or
xchg
mov
in
lret
and
push
or
js
in
addb
pop
aam
pop
or
add
inc
mov
lock
mov
loopne
add
stc
jno
inc
rorb
xchg
jl
push
add
jg
leave
add
stos
cmp
inc
pop
mov
pop
scas
sbb
loope
jno
and
mov
xlat
mov
inc
adc
pop
hlt
add
jp
cmc
sbb
cwtl
pusha
aam
outsb
adc
add
push
sysenter
popf
cmp
mov
cmpsl
add
lret
xor
inc
or
mov
pop
cmp
add
cmp
clc
xor
nop
imul
ds
add
test
mov
inc
cld
push
add
nop
pop
pop
stc
inc
stos
pop
add
sub
add
inc
and
stos
cmpsb
jo
push
push
add
movsl
pop
and
xchg
cmp
and
fiaddl
inc
ljmp
cmp
dec
add
sbb
xor
adcb
in
repz
mov
test
lods
add
lret
out
ds
mov
sub
inc
lcall
mov
ljmp
pusha
cli
nop
inc
jb
push
add
jl
lret
call
adcb
loop
cmp
clc
in
sbb
xchg
pop
fnsetpm(287
jg
push
int
cs
sbb
pminub
mov
mov
icebp
push
scas
fcmovnbe
sbbl
adc
jp
jecxz
lret
cmp
pop
ss
call
cs
add
push
push
movb
pop
jl
fidivl
movsl
lcall
add
cmpsl
sub
jo
mov
scas
pop
mov
sbb
popa
adc
mov
movsb
jmp
shll
aam
add
xchg
add
cmpb
lock
lds
dec
adc
lods
test
iret
add
stc
jmp
mov
mov
cmp
sub
cmp
or
xor
or
add
ret
cltd
cmc
stc
adc
xor
sbb
stos
in
xchg
add
dec
jge
xlat
in
or
or
add
jp
add
leave
xchg
pop
push
sti
xor
add
xlat
jne
popa
imul
js
add
jb
add
imulb
mov
fdivl
hlt
sub
addb
cltd
cmpl
repz
mov
addr16
rolb
mov
adcb
and
cmp
jb
sar
sub
ss
jp,pt
or
imul
add
pop
das
pushf
aas
mov
and
mov
sbb
lock
push
je
mov
and
pusha
lods
popa
sbb
pop
pop
add
mov
push
sti
lods
add
aad
and
add
jle
fsubs
stos
and
sahf
lock
add
pop
push
mov
xchg
clc
pop
pop
rcr
lret
mov
dec
inc
in
and
ficompl
xchg
sub
loope
push
add
pop
jbe
add
fldl
sub
mov
sahf
jo
and
add
mov
jnp
jbe
cmp
jae
scas
or
mov
and
push
pop
jb
sbb
adc
add
inc
mov
xchg
repnz
cmpsl
jp
add
popf
and
add
hlt
nop
bound
mov
pop
iret
daa
and
jns
sbb
aam
test
mov
or
and
add
orl
add
and
fldl
daa
ret
xchg
stos
fs
add
adc
in
mov
push
mov
cli
add
mov
mov
push
add
shrl
add
cld
push
pop
fwait
repz
loope
add
mov
xchg
add
mov
inc
jecxz
lock
shll
sarl
insl
movl
outsb
in
fcompl
cld
subl
xorb
add
jl
ja
repnz
pop
stos
in
incb
lods
sbb
ljmp
add
das
js
pop
rcrb
add
fs
icebp
sbb
push
adc
in
adc
xchg
stc
add
mov
add
mov
pop
add
aaa
push
mov
jmp
lea
out
rcrb
push
movsb
data16
mov
pop
fdivp
ds
out
aas
xchg
inc
fcmovu
pop
sbb
fs
sbbb
and
xor
push
push
or
push
pop
pop
out
stc
sarb
xor
push
lret
imul
add
fs
rclb
mov
lahf
and
insl
xchg
mov
inc
push
sbb
cld
sahf
repz
test
pop
mov
xchg
push
add
loopne
mov
and
in
sub
inc
fs
mov
out
les
sub
rolb
icebp
push
fbld
xor
push
add
ds
pop
sbb
sub
cmp
or
fsubrs
pop
int
dec
add
in
stc
push
cltd
add
sbb
mov
nop
aaa
and
dec
xchg
sbb
sbb
clc
js
pop
bound
xchg
adc
and
xor
iret
xor
fnsave
add
sbb
push
or
fcmove
mov
and
imul
mov
push
add
sbb
ret
in
adc
lret
imul
jo
adc
add
shll
jne
test
test
rcrb
int3
inc
add
mov
popa
ja
shlb
sbbb
inc
add
icebp
pop
out
mov
mov
arpl
jne
lods
in
add
pop
lea
ja
test
add
push
cli
ljmp
inc
add
int
paddw
add
ja
outsb
add
insl
jo
inc
aad
lds
and
xchg
cmpsb
sahf
mov
mov
fiadds
ss
in
stos
test
loop
cmp
add
pop
jb
fs
test
outsb
or
je
cltd
das
fstl
or
cmp
icebp
in
scas
pusha
inc
jg
pop
sbb
xor
je
add
roll
in
mov
in
pusha
add
and
cmp
loop
or
lret
icebp
xchg
add
cmp
pop
and
add
mov
xor
call
mov
dec
addl
aaa
inc
sbb
idivb
out
mov
and
push
push
sub
scas
fdivs
lret
mov
jp
fucomp
ljmp
or
hlt
test
stc
ljmp
lock
lods
xlat
add
fsubl
add
sbb
dec
gs
rolb
jg
cmp
sub
aas
push
and
scas
call
cmp
add
fdivrl
xchg
cld
movsb
add
mov
sub
setno
xchg
cmp
xor
mov
cwtl
inc
cmp
pop
sbb
das
sub
mov
add
shrl
ljmp
mov
mov
or
jne
movzbl
mov
stos
add
or
cs
add
mov
add
movsl
pop
in
js
pop
cmp
dec
aam
xor
push
mov
sahf
cs
out
mov
jp
pushf
mov
push
lock
xchg
add
jmp
cwtl
jle
add
test
movsb
rclb
add
sbb
in
filds
pop
call
or
dec
jo
add
inc
test
cmp
outsl
call
stc
dec
sub
mov
sarb
mov
fsubrs
xchg
imull
add
clc
test
rorb
fsubl
inc
pusha
push
inc
sub
cwtl
mov
leave
roll
push
mov
xor
push
push
dec
mov
cmp
dec
daa
dec
shlb
xchg
bound
add
mov
add
jne
xchg
sarl
add
mov
add
jno
add
push
insl
mov
shll
push
jo
data16
dec
jp,pt
sub
jle
fbld
sti
sbb
jecxz
clc
xchg
mov
das
inc
lock
into
sbb
je
shlb
mov
rcrb
sub
dec
pop
jp
adcb
js
stos
cmp
jmp
fnstenv
pusha
sbb
sub
add
repnz
cltd
shlb
inc
add
push
mov
cli
adc
into
pop
inc
test
lock
sub
repz
leave
sub
pusha
push
pusha
push
frstor
sub
aaa
and
addl
fs
in
xchg
arpl
or
jp
and
incl
xor
into
mov
push
mov
or
lock
xor
pop
xchg
and
ds
mov
pop
sti
add
stos
sbb
out
fnstenv
bnd
ret
es
xchg
add
jmp
pop
xchg
inc
sub
shrb
sbb
mov
add
imul
jmp
dec
pop
sbb
ss
pop
sbb
xchg
add
loop
decb
test
rolb
xor
cmp
mov
fcomip
pusha
cmp
aas
inc
jbe
mov
sbb
jecxz
push
mov
rolb
enter
es
inc
cmpsb
cmpsl
les
rolb
cmp
mov
sarb
je
dec
mov
gs
repz
mov
aam
jmp
test
cmpsl
mov
sarb
ljmp
shr
cmp
ja
gs
cmp
jo
cld
add
adc
pop
leave
lods
cmp
add
cmc
sarb
sahf
and
stos
stc
dec
les
dec
xor
cwtl
jge
in
adc
mov
cmp
imul
les
and
jge
lret
mov
cmc
pop
cmpsb
jns
cmp
mov
xor
lods
fwait
stc
mov
cmp
les
icebp
push
mov
xchg
and
out
add
pop
xchg
xor
and
test
repz
jo
sub
xor
pop
lock
sbb
scas
and
jp
add
xchg
push
rcll
sahf
clc
cmp
add
out
movl
scas
rcll
pop
add
mov
mov
jo
mov
add
xchg
inc
dec
call
jne
xor
pop
shll
jle
xor
sbb
add
xor
and
add
jb
call
rolb
aaa
add
pop
repz
push
shll
mov
sbb
rol
pop
ja
jl
jo
adc
push
adc
imul
mov
pop
sub
cld
sti
mov
xor
in
sbb
sahf
push
add
inc
sbb
jo
and
pusha
cs
add
enter
out
add
int
add
xchg
das
xor
push
mov
push
add
mov
push
add
lahf
aad
dec
cmpsb
ret
or
add
in
rorl
cmp
push
mov
lret
pusha
and
xchg
mov
add
cs
decl
shrl
add
sbb
mov
lock
add
push
lea
repz
add
add
imul
outsl
push
push
or
fimuls
test
sbbb
add
xor
out
int
adc
in
shll
int3
hlt
adc
mov
sbb
ds
xor
repz
addb
xchg
addr16
cmp
les
sbb
adc
adcb
xlat
or
mov
outsl
in
out
mov
dec
bound
add
je
fldl
inc
aad
loopne
aas
and
sbb
mov
jae
icebp
adc
sbb
push
jp
dec
and
push
loopne
jmp
mov
push
cmp
xchg
sub
filds
mov
add
pop
fstl
mov
xor
dec
jne
xchg
inc
add
push
ret
cmpsl
andb
movsb
int
inc
test
cmp
or
mov
push
sbb
adc
add
loopne
xchg
push
jne
dec
mov
add
jb
and
addl
mov
add
mov
or
mov
inc
test
add
lcall
jnp
or
test
push
cmp
adc
jl
repz
inc
in
cmp
sbb
arpl
rorb
inc
fisttpll
jecxz
sbb
lahf
dec
in
xchg
cwtl
popf
cltd
add
xor
or
aam
or
cltd
add
push
pushf
sbb
mov
jle
lcall
or
mov
lods
adc
dec
pusha
cli
stos
cwtl
dec
jb
add
popa
push
fldl
testl
jle
pop
std
mov
ja
mov
addr16
push
xchg
ret
mov
inc
push
popf
fsubr
cmc
sub
push
das
andb
lahf
pop
xrelease
frstor
inc
xor
daa
lcall
loop
out
adc
lcall
cmc
dec
cmpsl
inc
add
cli
mov
imul
inc
pop
or
xor
std
xor
enter
sbb
into
cmpb
outsb
push
add
mov
jnp
jl
sbb
inc
in
daa
bound
cmp
imul
sub
cwtl
inc
push
add
test
add
mov
dec
imul
cwtl
xor
pop
cld
add
or
clc
fs
add
fdiv
push
mov
clc
fsubr
imul
add
xchg
xchg
test
pop
je
in
das
sub
push
mov
push
pop
scas
nop
cltd
lods
fsubr
int
iret
std
frstor
add
adc
les
add
or
xchg
push
popa
addb
push
jae
mov
add
ffree
out
pop
add
pop
cmp
push
sbb
mov
int
mov
mov
push
add
sub
xchg
mov
mov
push
ret
dec
mov
cld
pop
push
push
add
pop
je
cmp
stos
xchg
add
push
lahf
mov
js
movsl
pop
push
sub
sbb
and
ret
xor
inc
cwtl
adc
dec
or
jae
cmp
xchg
or
or
movsb
into
sbb
loopne
scas
das
dec
cwtl
aad
push
or
call
jg
daa
adc
dec
and
sbb
mov
stc
pushf
push
dec
add
inc
add
xchg
scas
mov
xor
mov
test
int3
lods
add
add
or
gs
arpl
popl
and
jo
stc
jae
mov
or
stos
adc
sbb
leave
jns
nop
add
mov
dec
pop
shll
imul
and
in
dec
shll
leave
lret
push
xchg
jno
xor
xchg
lds
push
mov
or
rcrb
pop
and
ljmp
lret
mov
jbe
dec
xor
aas
fistps
sub
or
cmp
aam
movb
or
xorb
ja
inc
push
sbb
or
movsb
int3
test
sub
mov
sarb
pusha
adc
jae
imul
add
out
push
push
dec
add
lret
and
outsb
test
movsl
aas
and
add
jp
add
cltd
cmp
mov
rcrb
in
sbb
push
cmc
push
or
cmpsb
bnd
xchg
hlt
or
xchg
es
lahf
mov
cltd
jge
add
pop
inc
sti
xchg
hlt
div
inc
pop
mov
add
sub
jg
cmpsb
rolb
jne
xor
pop
lahf
std
into
cmp
mov
cwtl
adc
cli
cs
je
sbb
stos
loope
insw
sbb
sbb
lret
push
inc
sbb
call
scas
rolb
and
fsubs
add
push
xor
iret
cmpsb
orb
mov
daa
fdivrl
nop
adc
sub
testb
dec
push
lods
sbb
adc
or
mov
jb
cmp
jecxz
adc
xchg
mov
out
test
jnp
cmp
add
dec
and
fistpl
cmp
dec
addr16
jno
add
shll
mov
sbb
cmp
shl
push
xchg
jo
or
push
out
dec
add
lret
les
jb
insl
adc
aad
sub
cltd
or
dec
mov
mov
addb
push
lock
mov
in
pusha
and
iret
add
inc
out
fucomi
leave
call
mov
sti
enter
or
pop
xlat
sub
add
int3
mov
mov
sbb
loope
mov
or
dec
cmpsb
in
aas
jnp
sbb
mov
xchg
sub
and
mov
add
sar
test
fstl
jnp
sub
adc
xchg
sub
or
adcl
test
fadds
mov
mov
add
mov
pusha
cwtl
dec
add
sub
int3
stos
add
jbe
jmp
ljmp
add
cli
mov
xorb
test
add
das
adc
out
ret
fwait
xlat
sbb
jmp
add
xor
mov
xor
test
das
out
ja
arpl
call
add
pop
add
mov
pop
add
loope
sbb
inc
out
inc
push
jg
xchg
test
adc
fwait
adc
shlb
fisttps
int
add
jg
xchg
dec
lock
mov
add
sbb
leave
add
mov
faddl
imul
add
jmp
out
add
aas
loopne
cld
jle
fiaddl
scas
mov
and
add
and
jo
ds
shrl
cmp
adcb
cmpsl
mov
hlt
sub
push
xchg
das
sti
dec
add
out
adc
jl
adc
xchg
inc
outsb
push
and
sahf
pop
mov
or
cmp
and
aaa
lods
fwait
or
out
lret
aas
std
jle
push
jbe
sub
sub
icebp
jae
out
mov
nop
into
sub
mov
add
cld
pusha
dec
add
lret
daa
add
mov
mov
pop
xor
pushf
ror
mov
fwait
add
dec
cli
fbstp
lods
lahf
add
dec
rep
jno
test
or
add
movsb
fldt
and
push
sti
jo
and
nop
hlt
add
loope
in
push
je
inc
add
insl
xor
pop
push
mov
in
lret
lds
dec
inc
mov
pop
mov
sub
xor
pop
mov
xor
or
lret
pop
fs
add
outsl
pop
mov
test
bswap
mov
and
mov
movsb
scas
jle
add
imul
add
jo
adc
data16
sub
mov
cmpb
roll
xchg
cltd
push
out
loopne
or
xor
and
xchg
stos
add
pusha
xor
lods
insb
and
mov
add
repz
imul
lock
pop
add
mov
xlat
cmp
add
loope
xchg
jecxz
xor
add
mov
adc
arpl
sbb
push
pop
adc
ja
fstps
arpl
and
mov
addb
ljmp
in
add
add
cmp
mov
xor
push
dec
push
sbb
leave
add
xor
push
adc
fwait
ja
inc
add
call
or
orb
out
das
sub
dec
add
xor
out
movsb
pop
insb
into
aas
xchg
pop
sahf
and
ror
mov
adc
add
jb
rorb
bound
loope
or
push
push
cli
shlb
push
pop
or
inc
push
idivb
adc
jg
icebp
jle
loopne
adc
add
int3
push
lods
pop
push
mov
mov
pop
cmp
mov
sbb
icebp
sbb
pop
fnsetpm(287
pop
xor
rorb
xor
jge
push
push
shr
mov
pop
mov
rcrb
adc
stc
test
add
test
movl
and
xchg
dec
adc
and
push
mov
add
push
mov
inc
outsb
popa
inc
subl
popf
and
jb
neg
lods
in
sub
jae
pusha
divl
loop
add
add
xor
repnz
xor
push
jns
add
xchg
cmp
or
xchg
pushf
push
lock
sub
and
jne
push
cmp
add
hlt
add
push
dec
aam
movl
inc
pop
mov
inc
add
lods
repnz
mov
fstl
lret
lret
stos
test
dec
shll
xchg
sbb
add
pop
inc
cmp
cmc
pop
pop
dec
mov
add
rorl
lret
dec
xchg
adc
dec
loop
les
dec
xchg
ss
push
out
stc
adc
lods
and
add
jmp
out
add
out
popa
stc
enter
gs
imul
dec
cmp
and
mov
es
loop
sbb
data16
pop
add
pop
cs
mov
iret
sbb
mov
shll
jbe
leave
in
or
push
and
popa
inc
pop
cmpsb
add
mov
mov
jne
ret
insl
dec
inc
mov
lahf
add
jae
and
out
fsubr
xchg
add
fnstcw
adc
and
testb
fcomps
jnp
adc
lods
add
outsl
xchg
idivb
pop
iret
ret
cmp
dec
dec
sbb
out
outsl
shlb
inc
mov
fdivrl
inc
or
filds
xchg
aaa
push
out
imul
es
out
hlt
addps
sbb
or
sti
ret
mov
sub
add
sub
pushf
add
xchg
jl
xor
mov
push
add
add
or
fadds
xor
jae
pop
or
into
test
and
stos
addr16
mov
mov
add
lea
xchg
pop
iret
call
scas
pop
stc
push
xchg
mov
xorb
int
orb
cmp
mov
inc
push
sub
add
push
rol
add
pop
je
add
test
addl
and
jb
add
sub
adc
nop
pop
sbb
jg
xor
cs
xchg
push
jae
sahf
add
xchg
lds
add
or
addb
push
shrb
push
call
rorb
or
lock
out
repnz
test
testb
xchg
pusha
pop
and
push
scas
mov
sbb
push
loopne
inc
orb
mov
mov
push
sub
out
mov
or
jns
jbe
mov
and
sbb
add
inc
out
out
int
inc
movsl
js
xorb
pop
mov
add
lcall
movsb
inc
cmp
sbb
lods
daa
jno
mov
jge
scas
loopne
scas
int3
or
test
stc
into
xchg
pusha
clc
inc
das
push
mov
mov
and
xchg
mov
dec
rolb
jbe
or
outsb
pop
xor
rclb
or
inc
dec
mov
inc
in
shl
fcompl
cmc
ret
pop
adc
or
cmp
add
movsb
cmp
mov
add
mov
jl
xor
mov
mov
fldl
outsl
jge
daa
outsb
cmpsl
lcall
and
test
test
cmp
pop
test
xchg
mov
out
jl
push
jecxz
and
inc
lds
cltd
adc
jp
call
inc
xchg
and
push
ds
or
in
popa
push
shrb
aad
and
dec
inc
cmp
add
fdivl
fmul
jl
add
call
lods
push
lret
cmpsb
xchg
pop
imul
jl
ss
pop
and
adc
cmp
add
jl
lret
add
popa
inc
fldl
iret
cmp
cmp
add
jne
jo
mov
fimull
adc
lret
and
add
stos
push
fbld
sbb
cmp
enter
add
or
and
lock
loopne
add
jmp
and
cmp
jo
jle
ret
mov
mov
ficoms
add
enter
push
lcall
mov
scas
add
push
and
and
mov
add
fidivs
mov
jg
xlat
es
adc
push
outsb
adc
fnsave
sub
arpl
hlt
lods
add
and
pop
dec
push
pop
repz
jg
push
pop
mov
pop
imull
lret
sub
and
or
or
ljmp
push
cld
dec
add
insb
add
add
popa
shll
adcb
icebp
xchg
inc
jecxz
push
or
inc
out
hlt
in
cwtl
out
dec
add
jmp
ror
sub
inc
jp
es
xchg
jge
add
or
mov
add
mov
fcmovnu
mov
dec
mov
lret
out
xor
in
adc
pop
shl
inc
iret
test
xlat
push
add
sbb
xor
xor
or
sbb
sbbb
hlt
out
lds
xor
add
xor
add
enter
add
lret
mov
add
outsl
or
arpl
inc
add
insl
sub
xchg
mov
jmp
hlt
mov
add
cld
mov
fildl
insl
xor
jno
lock
mov
jge
outsl
aam
sbbl
fildl
xor
push
jg
sbb
pop
mov
ret
cltd
movsb
adc
test
xchg
data16
mov
mov
or
push
pop
testl
pushf
sbb
pop
arpl
cmpsl
adc
mov
adc
add
push
mov
jb
dec
mov
adc
mov
adc
mov
add
andb
popa
loopne
shl
add
les
add
lock
add
xor
pop
xchg
pop
or
or
sbb
push
mulb
imul
xchg
lret
scas
cli
cltd
adc
push
add
out
clc
dec
xlat
add
andb
mov
mov
inc
sbb
dec
addb
cmp
loopne
cmp
xor
aad
dec
xor
pop
push
scas
int
fdivrl
mov
or
mov
xlat
cmp
cwtl
ss
sar
or
call
sub
mov
rolb
push
lods
mov
sbb
out
mov
or
in
orb
lahf
add
popf
jae
xor
daa
arpl
nop
and
xrelease
and
mov
sub
test
push
popf
jg
push
dec
jb
lret
loop
pushf
cwtl
add
inc
dec
inc
vpcmpgtb
mul
sub
lods
das
popf
ret
cmp
adc
sbb
add
fbstp
or
cmp
jl
ds
in
inc
add
sub
dec
lret
std
out
xor
sti
adc
add
shl
cmp
mov
jmp
jge
sub
mov
ds
push
popl
lods
add
sbb
lcall
add
fbld
pop
add
hlt
jno
repnz
sbb
add
leave
xchg
sti
push
in
mov
jle
jae
add
adc
into
scas
sub
sub
mov
std
add
mov
adc
addb
push
negl
js
cmpsb
pop
add
cmp
add
xchg
sti
sbb
adc
mov
ja
call
and
fstpt
test
daa
scas
rcrb
incl
loop
movsl
pop
out
addr16
inc
xlat
dec
cmp
mov
sbb
mov
mov
lret
mov
mov
fcomps
mov
add
lods
loope
pop
aad
inc
add
push
sbb
mov
lods
cmp
fidivrs
mov
test
aaa
loopne
add
xchg
aas
cli
das
enter
inc
dec
sbb
add
xchg
fimull
add
fsubrs
mov
and
xlat
scas
xor
sti
push
clc
sbb
dec
cltd
addr16
arpl
adcl
push
mov
repnz
cmp
mov
add
pusha
movsb
adc
push
adc
stc
sub
xchg
sbb
inc
add
stos
cmp
jae
push
testb
sub
add
push
pop
add
xchg
and
iret
in
dec
mov
pop
adcl
outsl
jnp
adc
pusha
dec
mov
jmp
popa
xor
mov
stos
test
pop
sahf
mov
sti
icebp
sub
sbb
sub
mov
mov
and
ds
pop
pop
aas
sbb
ss
inc
movsb
call
xchg
add
jns
add
mov
mov
shrl
sbb
pop
or
push
in
mov
jo
pop
sar
mov
movsl
mov
and
ret
stos
mov
add
dec
pop
xchg
mulb
add
push
add
repz
sti
add
mov
add
shrd
sub
inc
jo
arpl
xorl
mov
push
inc
adc
push
mov
adc
add
repz
cmc
jb
mov
add
lret
cmp
mov
repz
push
add
dec
lea
adc
pop
jmp
arpl
add
lds
cmp
cld
and
jb
popf
in
mov
sub
mov
pop
mov
cmp
adcb
ret
sbb
pop
fiaddl
in
or
push
mov
mov
lcall
sub
inc
inc
shll
lods
pop
sarb
jnp
mov
inc
in
or
dec
test
sub
push
xchg
pop
mov
into
xor
sbb
test
adc
mov
add
nop
pusha
scas
jo
add
push
push
add
xchg
jle
add
idivl
mov
add
mov
fcoms
lds
ds
jmp
pushf
or
sbb
jp
sti
add
or
movsb
andl
add
add
imul
cwtl
dec
mov
sahf
xor
sbb
pop
xchg
rcrb
cmp
and
loope
cmc
out
dec
stos
pushf
add
jns
push
mov
or
cmpl
jge
xchg
loope
pop
loopne
mov
adc
insb
and
mov
pop
pop
pusha
dec
lock
and
cmp
jp
ljmp
in
sbb
inc
dec
mov
cmpsl
andb
sbb
mov
dec
add
loope
push
or
ficomps
push
cmpsb
clc
xchg
push
incl
nop
inc
mov
lret
fisttpll
xchg
mov
xchg
dec
mov
cli
or
nop
cltd
test
js
pop
dec
enter
pop
and
add
pop
mov
pop
or
jge
push
or
roll
les
sbb
pop
push
pop
jl
push
in
pop
test
loopne
mov
fdivs
pop
push
mov
mov
pushf
mov
inc
push
add
in
in
sbb
imull
jp
push
xor
mov
ljmp
or
in
mov
fdivs
push
xchg
fs
inc
sub
jecxz
cmp
pop
and
push
push
mov
punpcklwd
loop
rorb
cmp
push
mov
push
mov
push
sub
out
sub
lock
subb
into
xchg
mov
dec
es
inc
adcb
mov
out
rdtsc
jmp
sbb
and
sbbb
dec
push
orb
mov
mov
inc
js
cmp
mov
adc
test
jmp
pop
add
jmp
pop
and
or
out
push
mov
or
mov
jno
dec
mov
mov
pop
push
adc
mov
insb
loopne
mov
xchg
inc
andb
fdivrl
sub
xchg
or
enter
clc
call
mov
fcmove
repz
add
lret
sbb
mov
mov
cs
gs
sub
stos
ret
mov
xor
cli
pop
or
sbb
xchg
add
enter
or
add
dec
ds
or
fstl
pusha
lret
mov
pop
xlat
add
mov
jnp
adc
es
xchg
adc
and
jo
fldl
imul
shrb
sbb
xor
xor
rolb
add
sub
into
outsl
insl
xor
add
mov
push
shrb
or
mov
fists
add
xor
pop
mov
push
or
dec
mov
in
es
fwait
out
push
fadds
add
arpl
shlb
push
sbb
jb
dec
in
jae
sbb
sarl
xchg
cmp
lret
negb
mov
add
mov
xor
js
mov
jl
loopne
jle
or
out
push
pushf
into
lret
push
add
mov
mov
outsb
lods
push
xchg
mov
mov
cmp
inc
ja
xchg
xchg
dec
js
cld
call
jo
pop
lods
add
xchg
push
pop
xchg
je
add
clc
add
xchg
push
out
inc
imul
cmp
and
add
mov
xor
add
adc
and
and
clc
add
aaa
push
cmc
push
push
add
ret
lahf
rcll
clc
add
dec
jl
shlb
pop
push
push
add
jne
mov
sahf
mov
test
push
jmp
cli
mov
jecxz
stc
pop
or
add
and
in
add
rsm
decb
clc
lret
shrl
add
nop
dec
addr16
shlb
dec
push
shlb
loope
adc
mov
add
in
pop
bound
movsb
add
leave
out
cli
cltd
lret
or
add
push
push
or
sbb
stos
pusha
xchg
int3
mov
mov
jbe
and
mov
in
lret
xorb
dec
add
or
push
inc
fiadds
repz
add
pop
sub
cld
clc
and
pop
std
shlb
jle
or
mov
cs
jg
not
clc
sbbl
add
jns
xchg
leave
sti
xor
push
add
les
insb
add
movd
xchg
sub
push
mov
imul
sbb
sbb
loopne
jecxz
mov
iret
xor
mov
adc
jo
dec
lahf
sbb
or
sti
scas
or
add
in
dec
fiaddl
or
mov
arpl
lret
incb
or
add
loop
das
and
aas
or
je
inc
ds
xchg
inc
aam
pop
nop
and
test
out
shll
jns
addl
stos
les
add
sub
mov
add
fdivp
repnz
and
lock
mov
out
andb
add
xlat
cmp
mov
push
scas
test
stos
inc
out
ret
repnz
fbld
sbb
ja
pop
lods
jnp
jns
lock
push
fidivs
pop
add
jg
ret
mov
sbb
sub
pop
mov
out
sub
cs
sbb
js
xor
push
fmuls
add
xorl
out
cltd
inc
cmp
and
cmp
mull
sub
sub
xor
sub
or
push
mov
rcl
sub
fcoml
pusha
xor
adc
daa
sub
loope
mov
or
cmpsl
push
rcl
add
jne
in
int
add
cld
int3
lret
pop
nop
sub
pop
lock
rcrb
add
lods
xchg
xor
add
shl
inc
rorb
test
xor
push
dec
movsl
mov
mov
ljmp
and
repz
push
fstpl
dec
add
inc
iret
inc
inc
push
pop
nop
pop
fstl
mov
fdivl
ret
add
or
jo
mov
jbe
int3
negl
loope
nop
mov
pop
les
cld
in
fistps
mov
push
gs
dec
ss
cltd
xchg
shl
jmp
adc
adc
roll
mov
inc
cli
push
add
icebp
add
sub
xor
or
sbb
add
repz
jp
lret
push
hlt
mulb
lret
add
pop
adc
xchg
inc
shl
jle
pop
jl
add
scas
mov
sub
pop
sahf
add
cmc
add
xchg
hlt
add
das
daa
in
or
ja
repz
test
in
xor
cmpsl
fs
out
jns
dec
add
jb
sbb
pop
push
dec
jbe
mov
call
popf
into
aam
jns
mov
fnstenv
jg
enter
dec
test
aad
push
push
jbe
mov
sub
lea
xor
pusha
in
push
add
pushf
int
add
les
xor
aas
push
add
cltd
ja
rorl
jne
les
mov
negb
jae
add
ret
clc
stos
add
fs
and
loop
xor
int3
adc
fs
popf
or
incl
jge
cmp
cmpsl
ret
mov
psrlq
cmpl
push
gs
add
dec
adc
jecxz
jmp
push
lcallw
push
cld
ljmp
out
or
testl
lret
dec
pop
mov
xor
shrl
mov
mov
or
test
and
cld
fcmovb
jle
ret
jnp
add
das
cmpl
iret
js
push
push
xor
push
ret
adc
pop
std
in
pop
fidivrs
push
test
pusha
push
xor
push
or
sub
mov
pop
push
add
or
mov
in
cmp
mov
inc
add
gs
xchg
mov
and
cmp
adc
mov
mov
add
js
nop
clc
mov
sbb
jae
inc
lea
add
sbb
sti
push
out
mov
inc
and
jno
add
inc
jl
insb
jo
test
xchg
jb
add
dec
push
xor
xchg
es
lea
pop
sbb
cmp
add
arpl
sbb
push
mov
loop
mov
cmp
pop
cmc
mov
and
testl
mov
pop
aam
fs
sti
faddl
fbstp
add
loopne
js
cltd
fs
add
xor
push
jecxz
aaa
or
fistpll
cmp
fldenv
in
add
divl
scas
jnp
push
sub
xor
cmpb
cmp
xchg
lods
ljmp
jns
push
cmp
jb
sbb
mov
add
repz
aad
jg
cmp
mulb
and
dec
adc
inc
stos
icebp
shlb
pop
aaa
std
jl
xchg
and
fistps
push
mov
push
pop
add
cmp
pop
ljmp
cmp
faddl
aam
mov
add
mov
add
and
mov
pop
fnstsw
add
js
jmp
push
inc
and
out
add
and
and
cs
decl
repz
adc
and
out
mov
shr
ljmp
imul
icebp
sub
jge
pop
pop
mov
or
xchg
fsubl
fucomi
add
adc
xor
iret
adc
push
inc
cs
add
out
les
into
and
add
cltd
jae
pop
adc
or
pop
lods
mov
shll
inc
sbb
mov
and
mov
push
add
push
ret
imul
add
xchg
mov
sbb
cld
inc
push
push
enter
xor
push
out
sbb
adc
jle
sub
mov
cmpsb
add
mov
sub
sbb
jbe
out
sbbb
xchg
sub
or
lds
imul
sbb
pusha
cwtl
cmp
add
cli
mov
enter
mov
cmp
repz
pop
add
or
pop
fdivrs
cli
push
jp
cmpsl
push
pop
insb
xchg
cmpsb
aas
call
fadds
inc
frstor
in
add
xor
inc
dec
add
fcom
push
jge
loopne
dec
mov
add
lds
gs
push
subb
add
test
adc
lds
dec
out
imul
cmpsb
mov
add
sarb
test
jbe
push
or
call
add
fimuls
sbb
sub
add
mov
jb
mov
xchg
and
sti
pushf
pusha
cmp
aaa
add
xchg
xor
test
incb
mov
popf
push
mov
jns
add
scas
cmp
std
xor
pop
add
jmp
mov
sarb
fistpl
out
outsl
mov
jmp
subl
clc
pusha
xor
add
push
mov
add
push
in
jecxz
stc
add
mov
pop
out
test
xchg
test
cmp
in
clc
or
movb
xor
jae
and
aas
add
es
add
add
idivl
sbbb
mov
movsb
mov
jne
add
shlb
stos
icebp
addb
mov
js
sub
nop
push
and
rorb
xchg
ret
loope
dec
test
hlt
lret
pop
push
add
pop
mov
mov
movsl
nop
add
hlt
dec
cmp
fstps
xor
fs
inc
in
mov
out
hlt
inc
ficompl
lahf
cmp
in
ja
out
adcb
xorb
imul
fwait
rcl
sbb
pop
gs
pop
pushf
xchg
dec
add
add
or
hlt
arpl
pop
dec
fs
sbb
outsb
mov
cmp
mov
push
leave
test
jg
pavgw
cmp
pop
jnp
lods
into
inc
adc
inc
xchg
cmp
push
cmpsl
push
mov
push
lea
arpl
sahf
fdivrp
pop
dec
stos
mov
add
mov
mov
cmp
loope
inc
add
andl
sub
add
xchg
out
loopne
fisttps
mov
ljmp
lahf
xchg
add
je
dec
mov
xchg
sti
jae
fiaddl
add
pop
xor
ss
dec
lods
dec
in
nop
cmp
add
sub
push
lds
add
cld
or
lret
jb
mov
roll
pop
mov
inc
add
adcb
xor
lods
pop
xchg
ret
test
adc
sbb
adc
jnp
and
sub
out
fwait
lods
jmp
mov
adc
push
mov
jmp
loop
stos
inc
shll
jnp
and
sbbb
push
jb
add
ret
lds
scas
push
lods
clts
pop
andb
mov
div
inc
mov
call
and
adc
jecxz
rcr
push
or
mov
ret
inc
aad
pusha
jne
xchg
mov
add
loope
in
mov
imul
xchg
mov
add
mov
nop
push
cld
ret
ret
sub
xchg
sbb
add
sub
add
shrb
add
jae
sbb
xchg
aas
pop
xor
pop
push
cmp
clc
mov
mov
mov
add
add
fbld
outsl
and
dec
mov
add
push
push
addr16
and
jb
nop
dec
add
cmp
mov
dec
and
cmpsb
xchg
out
sbb
das
cmp
es
cmp
sarb
mov
push
add
sbb
add
pop
mov
adc
push
mov
mov
dec
adc
add
data16
int3
push
or
js
pop
add
mov
insb
ds
test
mov
mov
pop
call
add
add
lret
xchg
leave
sahf
adc
mov
inc
aas
fs
add
mov
push
imul
mov
push
sub
push
les
lock
faddl
lret
and
jge
icebp
ja
push
test
ljmp
fstpl
adc
jl
push
sbb
cmpsb
cmpsl
or
and
sahf
shr
mov
cmp
xor
sub
jmp
sbb
add
mov
ret
or
sar
add
inc
lods
stos
movsl
add
adc
stos
add
and
icebp
in
inc
mov
xor
jno
add
fnsave
inc
ljmp
jae
cmc
add
adc
add
aas
or
pop
in
adc
int3
notl
add
fmuls
xchg
pmulhuw
test
les
cwtl
mov
mov
shll
sbb
add
mov
or
enter
sahf
add
add
popl
lretw
out
outsb
adc
addr16
mov
jnp
xlat
mov
clc
movsl
add
xchg
or
push
dec
popl
push
out
cld
jb
out
add
adc
popf
xchg
xor
inc
sbb
xchg
ss
dec
pop
fisttpl
hlt
fistps
add
es
adc
ds
fdivr
sbb
jg
out
xlat
xchg
subb
adc
add
pop
clc
std
in
jl
jb
add
bound
cmpsb
int3
dec
shrb
add
mov
xchg
js
xor
repz
icebp
push
outsb
xchg
jnp
add
out
or
sub
add
add
int
je
add
outsb
push
sub
push
icebp
fdivp
ror
cmp
inc
subl
mov
outsb
mov
add
ljmp
mov
pusha
or
pop
cmp
into
mov
cmpsl
rolb
mov
lods
cmp
fistps
inc
inc
ret
and
out
and
jle
add
mov
je
add
add
add
popa
fldcw
pop
cmpl
mov
sbb
mov
in
xor
test
nop
xchg
push
adc
xchg
mov
mov
dec
cmp
sub
imul
aaa
sub
jecxz
mov
mov
scas
mov
test
mov
cmp
cmp
push
fsubp
xchg
pusha
lcall
xchg
addl
popa
pop
flds
mov
fwait
mov
inc
mov
imul
push
xchg
mov
pmaxsw
in
pusha
fbstp
jo
add
fsubs
clc
int
sbb
add
enter
into
sbbl
andb
add
mov
mov
icebp
pusha
jo
out
mov
push
je
add
inc
add
repnz
cltd
pop
orb
pop
dec
jg
clc
or
dec
add
mov
in
add
enter
lock
sbb
in
repz
iret
mov
sub
out
imul
add
cltd
pop
int
xchg
or
subb
or
xchg
adc
or
sub
or
add
push
aas
push
push
addr16
mov
xchg
and
mov
mov
sbb
fbstp
dec
mov
add
jne
or
and
add
push
sub
pop
rclb
pop
mov
jo
xchg
sub
lods
push
cmp
xor
and
sbb
adc
aam
push
jmp
test
mov
fnop
jl
out
add
gs
cmpsl
cmpl
inc
je
rcr
add
cli
and
icebp
or
fidivs
in
jno
and
add
mov
jmp
mov
pop
sahf
inc
shl
xchg
mov
orb
xchg
fwait
xchg
lret
add
inc
push
int3
popa
je
mov
add
mov
inc
mov
add
jbe
dec
daa
mov
and
test
jae
add
sbb
in
jp
jnp
add
aam
mov
or
out
sub
clc
roll
jecxz
add
and
adc
add
int
push
inc
jge
cmp
add
sahf
push
cmp
pusha
cmp
cmp
mov
das
inc
pusha
add
orb
sub
loope
sbb
bound
aas
sbb
add
cmpsb
cmp
pop
xor
add
test
movl
lret
int
int3
add
dec
sbb
pop
mov
mov
lods
add
test
xor
in
dec
mov
add
jns
and
lcall
cld
test
pop
jno
idivl
jge
mov
push
addb
sbb
int
fsubrs
adc
dec
dec
sbb
loopne
jg
mov
lret
cmc
add
cmp
sbb
add
mov
fwait
inc
fadds
scas
fstl
out
movsb
jle
add
xchg
dec
cmovg
and
adc
mov
push
ret
addr16
hlt
das
leave
inc
mov
pop
add
dec
insb
mov
movsb
leave
shl
arpl
inc
fcoms
std
clc
adc
add
jl
dec
push
hlt
lret
pop
add
sub
hlt
cmc
add
aad
sbb
sbb
lret
fadd
popa
xchg
aaa
jecxz
in
add
cmp
je
add
enter
imul
fdivrs
add
popa
push
dec
fidivrs
aaa
lea
dec
sbb
xor
inc
pop
add
fldcw
int
sahf
push
and
jo
or
mov
hlt
ret
lret
and
add
loope
cmp
or
shll
rclb
add
mov
ljmp
push
psrlq
add
lock
cmp
pop
xchg
filds
sbb
mov
push
mov
roll
mov
xlat
add
jbe
sbb
sub
add
mov
push
arpl
fstl
add
cmp
fucomip
into
rol
lods
jo
add
pop
jp
ficoml
mov
sbb
pop
add
arpl
pop
add
adc
outsl
mov
in
insl
pop
imul
sub
jno
add
decl
xlat
inc
lock
loope
shl
xor
add
aas
xchg
pop
test
nop
ret
sub
xor
std
mov
mov
pop
mov
push
cmp
add
dec
xor
pop
sar
mov
add
cmp
lahf
enter
arpl
mov
mov
lret
fisubl
scas
cmp
adc
pop
mov
pop
or
cs
loope
test
aad
fdivl
in
add
cmc
mov
fs
add
ljmp
fildl
mov
addl
stc
int3
mov
jl
aad
xchg
sahf
and
xchg
push
and
repnz
mov
add
data16
pop
outsl
rol
mov
cltd
cmp
dec
repz
xchg
pushw
dec
pusha
andb
add
sbb
out
ss
add
out
mov
ljmp
leave
test
enter
and
cmp
fcmovnu
pop
and
inc
add
ljmp
bsf
lock
and
sbb
xchg
icebp
test
mov
dec
push
cmp
cld
popf
int3
adc
sub
icebp
add
mov
lret
jae
mov
pmuludq
nop
jge
imulb
sahf
mov
test
xor
aas
aad
repnz
lock
add
cmp
imul
jl
loopne
mov
pop
les
add
cmp
jns,pn
add
mov
xchg
xchg
add
sub
and
mov
jo
lcall
jne
pop
add
xor
nop
int3
sbb
ds
cs
addr16
in
dec
orb
cld
inc
pop
cmp
outsb
je
add
ja
test
into
mov
push
stos
add
call
fimuls
fisttpl
and
or
mov
add
pop
cwtl
loopne
add
outsb
movsl
je
fisubrs
and
add
jo
jb
into
jo
pop
add
lcall
clc
xor
add
mov
sti
add
aaa
jge
xor
inc
push
ja
pop
adc
add
jle
push
das
xchg
or
das
and
call
ret
jae
negb
add
and
inc
cmovbe
ss
dec
jns
pop
xchg
xchg
jne
push
rcrl
cmp
jns
loop
inc
inc
pop
ja
jae
pop
sub
and
mov
jno
push
dec
jp
add
int3
and
std
cmp
add
lret
mov
imul
scas
xchg
das
push
outsb
dec
movsb
cmp
jns
add
push
mov
pop
pop
add
in
xchg
mov
adc
jne
cmp
pop
or
add
sub
gs
ficoml
mov
es
insl
in
out
push
push
repz
negl
fiadds
or
pop
and
push
dec
lock
cmpsb
jp
inc
sarb
xchg
popa
sbb
pop
mov
and
cmpsl
and
sbb
cli
pop
and
jne
shll
dec
jo
loopne
sub
jmp
pop
add
push
inc
ret
jg
cmp
add
aaa
adc
lock
lock
and
adc
add
aad
subb
mov
jp
jg
out
jmp
mov
jge
mov
scas
xor
in
rolb
fcoml
aaa
jmp
or
jnp
mov
lret
loop
add
ds
mov
push
add
sarl
call
or
mov
outsl
lahf
add
mov
mov
sub
jg
add
pop
sar
lds
add
int
and
push
dec
shlb
and
adc
mov
sbbl
psubw
and
inc
dec
ds
sub
movsb
clc
sti
movsl
fsts
push
nop
lds
adc
add
scas
cmp
push
nopl
sarb
adcb
adc
sahf
mov
mov
incb
adc
lea
pop
in
add
mov
cwtl
jmp
xorb
dec
xchg
jb
aas
jnp
dec
ret
pop
movsl
pop
in
scas
add
mov
es
popf
xchg
out
repz
lds
or
cmp
jno
jmp
loope
scas
stos
lods
inc
xor
dec
sbb
lcall
outsb
in
push
mov
sti
add
dec
and
aad
mov
inc
or
inc
insb
enter
imul
add
dec
jecxz
dec
push
push
pop
push
jns
inc
popf
xor
scas
out
arpl
imul
push
mov
mov
and
pusha
andb
lea
int3
pop
push
or
cmp
aam
xor
jl
es
add
jne
roll
ljmp
add
adc
loop
add
sahf
add
xor
dec
add
mov
mov
jno
ret
or
adc
mov
test
lock
into
pop
inc
sbb
iret
pop
inc
loop
sbb
sub
adc
jge,pn
pop
add
lret
cmp
mov
popa
fldl
pop
dec
push
jns
dec
push
scas
mov
movsl
add
popl
lock
sbb
dec
test
subb
push
mov
inc
ss
hlt
pop
gs
add
add
leave
xchg
mov
rorb
ret
pop
push
in
addb
xor
and
sbb
fwait
dec
sub
sbb
add
push
fistps
mov
and
add
jne
gs
xor
inc
add
lds
subl
orl
and
scas
stos
mov
adc
push
mov
inc
loopne
lret
add
push
sti
fs
mov
mov
pop
icebp
add
xchg
lock
xchg
frstor
lret
fmulp
add
leave
adc
cmp
shll
cmp
test
shll
add
mov
lods
pop
lcall
fnop
das
push
mov
fsub
jo
clc
roll
xchg
cmpl
rol
sub
add
push
mov
stos
rclb
cmpsb
les
incl
stc
jecxz
fcomps
add
push
jo
xchg
test
lds
pop
subb
add
lock
leave
cwtl
shll
loopne
xor
and
dec
cltd
inc
or
cs
sub
add
xor
data16
adc
sub
add
lahf
shr
rorl
repz
andb
or
jl
xor
adcl
fbld
fs
js
add
xchg
dec
push
mov
jge
rcrb
add
mov
arpl
clc
pop
adc
add
in
xchg
mov
int3
dec
and
inc
inc
xchg
add
inc
pusha
pop
inc
jmp
ficoml
lret
je
mov
int3
icebp
leave
sub
add
scas
call
jbe
adc
mov
fdivl
cmp
push
xor
sbbb
add
ss
add
dec
lret
add
loope
push
add
adc
lret
pop
jl
jle
lock
add
shl
call
fwait
out
add
and
jbe
add
std
cmp
dec
sub
mulb
int3
add
out
jo
xchg
sub
fcmovbe
add
add
adc
xor
mov
pop
jp
ja
jl
das
xor
inc
movl
je
daa
lock
add
dec
lret
ss
fiadds
cmp
jno
aas
inc
rcrb
add
ja
push
add
dec
sub
ret
add
jecxz
in
mov
lds
inc
or
repnz
adc
es
pusha
inc
and
pop
add
push
sarb
pop
or
rcll
sub
push
push
sbb
push
xchg
sbbb
sub
mov
clc
or
xor
dec
bound
pop
out
add
inc
pop
sbb
xor
rclb
sbb
repz
inc
push
mov
shll
mov
loope
pop
fdivrs
pushf
test
add
into
add
std
xchg
push
pop
or
sub
lock
jno
cmp
pop
and
pusha
add
mov
icebp
fstpl
movsb
lahf
and
fcoml
adc
sti
sahf
push
mov
mov
sub
mov
adc
js
je
lds
test
and
mov
dec
jbe
outsl
sti
add
and
mov
out
xchg
test
push
or
dec
xchg
jmp
add
enter
cmpsl
pusha
pcmpgtb
arpl
ljmp
in
dec
push
loope
inc
sahf
cwtl
in
inc
xchg
pop
xchg
mov
mov
aas
popa
repz
lret
sbbb
sti
xchg
cmp
adc
lods
adc
daa
cli
add
stos
std
dec
add
mov
pop
pop
mov
pop
dec
lods
lret
cmpb
mov
std
and
cmp
enter
xor
sbb
add
sahf
loop
lods
call
push
add
sub
and
addr16
cmp
mov
loopne
sti
jno
pavgw
cmp
push
test
int
add
pushl
icebp
add
int3
pop
xorb
lds
fcmovne
xor
xchg
lahf
in
orb
jns
add
mov
inc
clc
add
inc
xchg
mov
mov
mov
adc
push
push
add
jnp
and
ja
add
xchg
leave
cmp
insl
hlt
add
xorb
lahf
lret
mov
add
xchg
in
add
lds
movsb
arpl
mov
add
mov
int
jo
ret
cmc
inc
test
hlt
or
xchg
sti
bound
jge
ljmp
xor
pusha
ss
add
cli
dec
ret
push
mov
das
inc
or
jl
and
jb
ret
pop
add
mov
ficoml
pop
push
lea
clc
mov
adc
decb
add
inc
mov
jb
cmp
orb
sbbl
loop
jnp
push
add
je
fsubl
adc
pop
cli
icebp
add
jns
mov
rorl
sub
test
add
and
loopne
add
pop
cmp
out
aad
cmp
dec
loop,pn
add
mov
loope
in
jl
dec
jne
add
test
pop
lock
orl
mov
xorb
xor
fucom
es
sahf
add
push
sub
push
xchg
ficompl
arpl
clc
jae
lds
jb
xchg
hlt
into
scas
and
lcall
and
int3
adc
mov
xor
fs
or
filds
or
jns
shrb
paddusb
out
adcb
imul
cmp
lock
or
mov
js
mov
mov
add
push
in
inc
lahf
fucomp
mov
enter
mov
lret
mov
subb
mov
cld
lds
xor
sub
fldenv
int3
mov
jg
cwtl
mov
add
sbb
pop
rolb
popa
adc
or
jp
push
adc
pop
add
inc
je
ds
add
dec
daa
pop
inc
mov
inc
inc
fmuls
cmp
sub
test
or
in
imul
sbbb
jmp
cmpsl
xor
das
jo
in
xchg
add
out
call
cmpsb
mull
or
mov
inc
out
xor
les
and
rcr
sarb
iret
imul
scas
inc
fldl
dec
shlb
add
fdivrl
push
sbb
pop
mov
add
ja
inc
icebp
inc
add
daa
mov
xchg
sub
jo
mov
leave
sbb
lds
pusha
xchg
aam
ja
jno
push
roll
stc
sbb
nop
fistpll
pop
xchg
mov
rclb
rcrl
dec
pop
jbe
pop
add
es
add
fimull
and
fucomp
call
jmp
push
test
movsb
outsb
loopne
hlt
addr16
add
cmp
aas
xchg
or
mov
pop
mov
xor
repnz
add
les
jo
mov
nop
dec
mov
cmp
incl
sbbb
nop
mov
loop
xlat
gs
pop
out
mov
les
subl
add
repz
repnz
add
mov
dec
jnp
dec
add
or
in
sub
fwait
rorb
aad
sbb
jne
sub
add
shll
xchg
pop
cmp
pop
add
out
das
jp
xor
xor
and
ds
mov
xor
mov
lock
and
add
pop
sub
adc
out
mov
fsubrs
loope
cltd
lcall
xlat
imul
add
and
add
aad
stc
push
push
cmp
aas
addr16
mov
add
movsl
mov
movl
jg
int
add
repz
stos
dec
mov
pop
cmp
out
ror
mov
jmp
mov
fcomps
pusha
jle
add
pop
push
or
push
pop
add
out
stc
mov
add
sub
add
out
add
push
stos
les
mov
popa
cmpb
loopne
ret
jp
daa
jg
push
into
dec
and
and
xchg
mov
movsb
and
pushf
pop
jno
add
push
cmp
push
push
inc
jns
std
dec
je
jbe
dec
xchg
nop
cmp
rolb
fsubrs
cmp
push
mov
cmpsl
outsb
lcall
hlt
pop
mov
push
sub
loopne
fiaddl
dec
iret
push
lahf
and
in
add
adc
and
movsb
or
mov
fiadds
stc
call
pusha
fdivs
je
and
icebp
push
or
jno
inc
or
xchg
add
dec
jne
add
js
call
inc
mov
mov
and
adc
mov
les
cmpsb
call
and
scas
sbb
aas
test
cld
push
ja
inc
add
mov
add
lcall
add
cltd
in
mov
sub
mov
cld
mov
sbb
pop
mov
push
lret
je
sti
lcall
pop
daa
out
jb
in
xor
adc
imul
add
xor
mov
popa
imul
xor
adc
test
pop
dec
lcall
jle
add
outsb
shll
pop
nop
fcomp
aas
subb
pop
popa
jle
enter
jmp
int3
xor
and
nop
and
push
mov
stos
add
movsl
cwtl
fucom
sti
add
fiaddl
loop
add
scas
nop
sbb
adc
jge
add
sarb
add
fs
mov
outsl
int3
imul
js
or
mov
repz
push
xchg
jecxz
outsl
fcoms
cmp
out
add
loope
out
adc
imull
add
bound
push
pusha
sub
jg
popf
inc
loop
insl
or
int
jns
add
and
push
adc
push
jmp
pop
or
pop
in
test
sbb
xchg
enter
scas
xchg
fisubrs
cwtl
popf
imull
add
shl
and
imul
xchg
outsb
adc
int
mov
fadds
pop
test
add
lock
lods
pop
cltd
mov
or
jb
lock
addr16
cli
cmovae
cmpsb
xor
pop
shlb
jns
mov
bound
test
jo
push
inc
add
jle
test
add
inc
rcrb
pushf
mov
add
and
add
insl
loopne
jbe
sub
xchg
dec
xor
out
push
aam
inc
add
cmp
ret
into
in
flds
js
mov
cltd
xlat
pop
dec
dec
inc
mov
pop
add
loopne
add
insl
mov
scas
test
data16
or
out
push
mov
pop
mov
shlb
add
fldenv
jbe
repz
sahf
jno
cltd
push
push
orb
lcall
add
jae
dec
or
or
add
mov
xchg
mov
jp
jb
sub
mov
or
add
jb
add
push
lea
sbb
pop
lods
add
mov
xchg
push
cmp
pop
sahf
xor
mov
jns
xor
cmpsl
sub
push
xor
andl
in
push
xchg
sub
cli
add
in
idivb
pop
jbe
cmpsb
and
jle
cmpsl
or
movsb
push
mov
pop
adc
or
lods
dec
js
add
dec
inc
pop
cli
in
xchg
add
lret
xor
loopne
pop
popf
cmp
mov
mov
sub
ja
loop
outsl
pop
xchg
add
jae
notb
and
add
inc
out
mov
add
popf
push
sub
and
add
dec
pop
push
lock
fwait
lods
or
imul
test
pop
add
cld
scas
filds
out
cltd
divl
das
sub
dec
fsubs
jno
arpl
add
sbb
inc
add
scas
outsb
aaa
add
jno
mov
add
and
loopne
pop
jns
aaa
sub
inc
dec
inc
sbb
adc
xchg
pop
int3
add
loopne
mov
push
dec
mov
and
lock
scas
leave
fidivs
jnp
add
sar
sbb
jne
int3
or
cmp
and
jo
push
je
sub
ja
jmp
push
sbb
dec
jp
sub
add
movb
xor
ffreep
inc
fcomp
lret
fsts
xchg
push
or
add
inc
jo
sub
in
push
shrb
pop
iret
xchg
lods
in
wrmsr
and
add
jmp
sbb
fs
inc
mull
dec
push
fidivs
xor
inc
add
lret
add
push
or
fdivrs
ficoms
loope
lret
imull
fidivrl
lds
or
lahf
dec
push
cld
push
add
imul
push
add
dec
xchg
scas
aaa
pusha
daa
test
add
loop
pop
daa
nop
int3
bts
xchg
dec
dec
mov
inc
adc
jg
push
sbb
mov
test
icebp
cmp
mov
cmp
push
lods
filds
out
movsb
subb
pop
cwtl
icebp
jne
jecxz
push
sti
loopne
cmp
pusha
add
test
cmp
add
cmp
in
jo
push
push
adc
inc
js
xchg
pop
mov
dec
jae
mov
lock
rcr
lret
cmpsb
dec
idivb
add
add
mov
lods
xchg
sbb
jns
pop
rorb
stc
iret
cli
in
push
jmp
int
mov
int3
push
pop
addr16
cmp
inc
mov
pop
pop
int3
mov
inc
inc
out
in
fstpt
out
stos
outsb
mov
jno,pn
add
in
cmp
cmp
jl
sub
pop
cli
mov
lds
jmp
push
pop
das
cmp
adc
incb
mov
dec
mov
sbb
or
test
jmp
xchg
cmpb
adc
push
adc
fisubl
cmpsl
sarl
jnp
sarl
movsb
mov
cmc
jns
es
shll
out
or
jae
add
lret
push
xchg
inc
and
cmp
push
jo
push
ficoml
repnz
lds
xor
mov
std
inc
xor
pop
xchg
rorl
cmp
sbb
add
or
pop
in
rcll
mov
cmpsb
int3
adc
lods
ds
xchg
loopne
sti
push
pusha
std
push
push
test
stos
push
js
mov
cld
mov
push
or
dec
loop
pusha
mov
inc
int3
xor
sbb
mov
xchg
imul
je
jnp
add
sbb
mov
cld
lcall
lea
pop
pusha
pop
cmp
inc
mov
mov
push
ret
gs
shrb
mov
js
sub
xor
jbe
mov
jle
leave
adc
xorl
xchg
fldln2
cld
push
pop
rclb
fistps
fs
cmp
pop
sbb
shll
adc
out
xchg
inc
jo
ret
sarl
inc
or
aad
loop
xor
sbb
ja
push
iret
in
jl
add
pop
adc
sbb
jbe
push
cmp
loop
push
sub
adcb
xchg
sub
mov
jnp
and
add
ret
pushf
in
cmp
mov
ret
dec
sahf
add
popa
mov
jno
add
fsubs
in
push
pop
xor
adc
or
and
add
into
loopne
add
rcrl
lret
sub
mov
insb
add
adc
sub
xchg
repz
test
sti
mov
jns
jecxz
adc
hlt
and
subb
mov
ja
xor
rcrl
xchg
cwtl
cmp
add
mov
mov
test
loopne
xor
mov
pop
jne
push
xor
add
sti
cld
jb
movsl
addr16
jno
add
ret
shrl
push
mov
incl
out
hlt
adc
push
nop
rcr
adc
pop
xorb
jbe
lcall
lods
or
add
in
movsl
popa
jecxz
in
mov
pop
and
clc
sub
popa
lock
push
sahf
jnp
inc
xchg
in
push
add
aaa
pop
or
xchg
iret
rcrb
sbb
cmp
bound
inc
in
aam
mov
ljmp
pop
jl
jl
add
adc
fnstcw
mov
mull
inc
pop
in
jmp
sbb
aaa
mov
sbb
dec
inc
dec
into
jno
out
icebp
or
pop
adcb
subb
lahf
add
lcall
add
enter
ret
hlt
sbb
or
call
push
sbb
and
ja
les
out
sbb
sbbl
pop
outsb
mov
push
fadds
ds
roll
dec
lahf
inc
sbb
gs
out
mov
push
or
mov
push
dec
je
bound
pusha
popa
and
inc
cmp
inc
cmp
pop
andl
loop
call
push
loope,pt
sti
push
xor
rcr
jge
test
sbb
std
jecxz
mov
mov
pop
pusha
jne
xlat
pop
dec
cld
push
mov
pop
aad
andl
add
adc
push
sbb
sahf
sub
or
xor
shll
arpl
push
mov
stos
int3
test
mov
pop
jns
xchg
or
in
xchg
inc
sbbb
mov
outsl
sbb
dec
inc
bound
xor
stos
xchg
jp
jle
sahf
pushw
fiaddl
outsl
sub
movsl
mov
sub
or
sub
xchg
ja
or
imul
adc
sub
lock
repnz
jecxz
es
push
rorl
xlat
nop
data16
inc
adc
jno
pusha
popf
fldenv
pop
push
inc
outsb
faddp
sub
cli
add
mul
or
clc
jns
int
stc
xor
push
cmp
pop
pop
cmp
loope
cld
cmp
test
stos
or
inc
and
sbb
lret
sub
fidivs
cmp
pop
mov
scas
add
ret
and
sbb
sub
repz
stc
mov
cs
outsl
adc
push
cmp
jmp
cmp
pop
pop
pop
or
in
mov
rorb
mov
call
arpl
enter
or
sbb
sbb
sbb
xchg
fdiv
aaa
jno
mov
mov
pop
outsl
jl
loop
add
xor
adc
shl
arpl
xor
pop
out
popa
dec
pop
stos
xchg
add
sbbb
andb
mov
outsb
pusha
cmp
rcll
cmp
loope
pop
negl
shlb
xorb
fwait
inc
shl
fmuls
pop
adc
call
shlb
sub
add
mov
add
adc
xor
push
jmp
ja
fs
mov
inc
jmp
pop
jno
add
xchg
sarb
loopne
jbe
fadds
js
adc
and
sarb
in
pop
adc
pop
rclb
xchg
shlb
sbbb
push
xor
adc
jmp
add
gs
paddw
mov
sbbl
pop
dec
sub
repz
add
sub
pop
xor
popf
inc
cmp
jge
fs
xchg
sbb
outsb
cmp
loope
cmc
push
nop
sbbl
mov
mov
or
add
mov
xor
shll
sub
sub
add
push
and
mov
popf
lret
or
aad
int
xor
dec
or
mov
adc
jmp
and
outsl
xor
adc
or
jno
jg
xchg
or
mov
mov
xchg
std
push
js
lods
pop
jo
xor
aad
lret
sbb
popf
xchg
adc
sbb
xchg
xor
andl
adc
psraw
pushf
imul
jo
push
and
jns
jne
inc
outsl
push
nop
inc
movsl
add
mulb
adc
outsb
imul
push
movsl
movsb
push
mov
adc
popf
dec
sub
push
das
jge
adc
ljmp
notl
mov
sti
in
repnz
fld
xlat
add
cld
pushf
jl
or
jnp
jp
lret
and
xchg
dec
push
pop
dec
push
mov
into
lock
add
cltd
pop
cmp
das
mov
std
add
mov
mov
add
xchg
lods
insl
pop
dec
dec
jae
jnp
add
in
dec
rclb
mov
and
push
add
mov
adc
add
or
testb
and
sbb
xor
push
insl
arpl
shrb
ret
adc
addb
inc
push
idivl
xor
mov
shlb
leave
sbb
jmp
div
das
add
mov
sbb
stos
in
rolb
inc
pushf
inc
cmp
and
pop
cwtl
lods
pop
in
roll
push
xlat
shlb
aam
xorb
push
sbb
pop
add
xchg
add
add
inc
orl
iret
lcall
sub
mov
repz
aam
dec
push
in
or
and
cmc
scas
pusha
xor
rorb
mov
in
cmp
mov
imul
cltd
mov
sub
rolb
fnstenv
push
fiaddl
dec
push
aas
add
test
inc
mov
adc
dec
lret
cmp
shrl
xor
or
aas
shlb
push
and
es
inc
out
push
sbb
pop
out
lods
adc
dec
add
inc
pop
orl
sub
adc
dec
mov
andb
push
dec
outsl
add
push
add
adc
mov
in
inc
loop
arpl
sub
stos
aaa
shll
and
mov
jbe
inc
jp
mov
jecxz
push
dec
test
rorl
xor
sbb
inc
ja
insb
stos
imul
stc
add
aam
mov
and
add
leave
adc
and
leave
or
pop
sbb
sub
jp
add
jnp
imul
enter
add
pop
test
lcall
in
popa
repnz
sbb
in
cmp
or
stc
jl
sub
pop
shll
rolb
mov
add
mov
out
ficoml
in
fwait
arpl
cmp
call
mov
pop
outsl
mov
out
inc
and
push
js
popa
cmp
cwtl
add
mov
jns
cmc
push
divb
add
and
fwait
pop
mov
inc
aad
cwtl
dec
adc
mov
push
dec
inc
cmp
or
popa
adc
cmp
add
nop
push
or
sbb
cld
lock
adc
and
add
pop
aaa
repz
in
xor
arpl
cmp
aaa
adc
int
add
jecxz
jbe
mov
xor
inc
cltd
xor
jbe
pop
inc
push
test
stos
jmp
pusha
dec
sub
pop
scas
dec
cmpsl
push
js
mov
bound
inc
push
les
sbb
sub
add
xor
hlt
addb
add
fildll
and
lds
pop
lea
in
and
andl
aaa
add
mov
mov
xorb
cmp
dec
and
mov
ror
mov
iret
stc
fchs
fdivr
sub
add
call
test
imul
imul
sbb
add
stos
pop
adc
add
and
dec
sub
sub
add
fstl
dec
lahf
stos
test
mov
shlb
and
or
adc
repz
push
push
or
or
hlt
sbb
pop
aad
mov
in
xor
push
mov
mov
fs
loopne
add
hlt
dec
sub
cld
mov
outsl
in
adc
and
cwtl
test
movsb
hlt
pop
mov
aaa
add
jle
cli
pusha
sub
inc
lods
push
mov
xor
pop
pop
xchg
xor
outsb
out
and
mov
add
and
div
push
push
pop
cmp
pushf
call
mov
repz
push
shrl
inc
test
stos
add
ljmp
test
and
out
fmull
push
pop
dec
dec
push
push
cmp
sub
jb
add
in
aas
ror
test
pop
repz
xor
inc
cmpsb
push
push
and
and
aam
mov
jae
arpl
loopne
enter
adc
leave
rcrl
cmp
cmc
in
aam
inc
sub
mov
sbb
pushf
push
incb
sub
dec
mov
shlb
push
xchg
in
and
adc
mov
dec
fdivl
nop
adc
push
test
and
pop
leave
mov
mov
add
push
push
or
and
call
fisubs
add
cli
sti
xchg
sbb
inc
inc
stos
sbb
ret
es
hlt
add
xchg
push
test
dec
xchg
and
pop
xchg
movsb
mov
add
in
sbb
sbb
syscall
nop
sahf
popa
xor
sarb
sti
enter
addb
mov
rclb
xchg
push
loopne
add
jo
fld
inc
mov
jb
aas
inc
push
push
dec
mov
and
cwtl
xorb
imul
lds
sbb
subb
jo
insl
imul
mov
das
xchg
push
in
pop
int
shrb
int3
inc
or
xor
push
add
lock
inc
inc
mov
in
stos
sbb
mov
or
cmp
add
jge
xor
jmp
pop
adc
and
xchg
insl
lock
add
dec
inc
mov
mov
loope
in
sbb
inc
pop
add
and
std
in
dec
add
fiadds
add
dec
pop
imul
fsubs
push
dec
in
popl
mov
inc
mov
shll
pop
pop
add
adc
pop
push
pop
add
mov
shll
pop
lds
jo
adc
call
dec
mov
sbb
fldl
adc
jno
test
scas
xchg
cs
mov
add
inc
xchg
sbbb
inc
dec
add
inc
lret
pop
inc
inc
sbb
sbb
sbb
dec
je
cmp
in
stos
test
pop
in
js
add
push
das
dec
scas
and
daa
mov
xchg
add
adc
xchg
sub
test
xor
test
jp
adcb
bound
js
add
pxor
test
or
faddp
xchg
and
add
xchg
cwtl
push
shrl
out
out
or
cs
cltd
nop
push
imul
jl
dec
iret
inc
sub
mov
add
imul
jp
cmpsb
shlb
sbb
lahf
add
push
cld
daa
pop
loope
mov
into
add
ss
cli
in
in
mov
mov
cmp
ret
out
rolb
repz
mov
mov
push
scas
push
xchg
aam
popf
bound
dec
mov
dec
in
mov
mov
aad
xor
jmp
negb
inc
push
mov
shl
popf
pop
or
in
int
mov
xchg
dec
push
and
cmp
test
data16
testl
sbb
int3
aam
and
mov
inc
roll
ss
dec
cmp
add
leave
sbb
out
pop
adc
test
adc
add
dec
inc
lahf
add
movsl
xor
icebp
xchg
sub
inc
push
jno
imul
ret
rorl
orb
mov
mov
out
xchg
sub
dec
jbe
lock
pushf
sub
subl
movd
enter
call
add
pusha
inc
adc
and
nop
jl
sti
add
lock
adc
shrb
shlb
inc
dec
and
loope
add
xor
stos
ret
nop
leave
jae
mov
mov
cli
or
pop
xchg
lods
or
aam
roll
sub
das
mov
mov
insb
adc
sbb
or
push
xor
xchg
stos
nop
add
sbbl
lock
test
mov
rolb
push
xor
inc
repnz
add
cli
sub
xor
sbb
in
jo
fs
js
add
jne
pop
insb
test
enter
or
leave
jl
xor
lods
mov
add
or
rcrl
mov
in
imul
dec
push
jmp
aas
add
repnz
cmp
add
repnz
adc
xor
dec
daa
shlb
pop
mov
sub
fildl
js
cmpsb
imul
inc
je
in
xorb
adc
push
mov
pop
push
sub
repnz
pop
add
icebp
pop
js
pop
add
add
mov
inc
sub
mov
inc
iret
mov
shlb
xchg
fwait
adc
xchg
xor
dec
flds
out
shl
adc
add
mov
push
xor
adc
cld
xor
mov
adc
xchg
inc
fcomps
adc
mov
mov
pop
cmc
or
adcb
add
arpl
das
cmpsb
sub
mov
fisubl
imul
sbb
add
add
pusha
aam
pop
in
mov
pop
test
mov
add
and
mov
leave
int3
inc
or
out
gs
add
xor
and
insb
mov
pop
push
and
aaa
imul
int
mov
out
pop
rolb
jae
mov
dec
sarb
pop
stos
xor
xor
imul
adc
ljmp
ret
and
rolb
leave
das
shll
nop
rol
jecxz
inc
xchg
dec
aas
das
xor
xlat
repz
add
jecxz
cmp
push
mov
cmp
shll
mov
add
sub
bnd
int
je
inc
push
imul
add
xchg
shrl
nop
lea
in
inc
add
sti
dec
pop
faddl
mov
fmul
sbb
push
hlt
sti
icebp
fiaddl
mov
xor
pop
cmp
into
sbb
test
mov
loopne
or
xchg
add
imul
shrl
sbbl
jo
jp
mov
cltd
xchg
fildl
in
sub
mov
nop
mov
sbbb
cmp
aam
testb
or
ljmp
add
sub
sbb
mov
je
xor
mov
inc
add
rclb
add
mov
dec
push
hlt
xchg
push
add
sbb
jmp
test
mov
or
add
fdivs
nop
movsl
dec
or
xor
adc
sub
aaa
aas
stos
pop
mov
lret
movsb
xchg
rcrb
aam
sub
mov
pop
lock
subb
inc
cwtl
mov
mov
loopne
sti
add
shll
ds
sbb
inc
movsb
jno
xchg
push
je
push
shrb
mov
and
ret
aam
test
lret
sbb
or
xchg
sahf
add
mull
sbb
cmp
fisubs
jbe
cltd
and
push
test
inc
adc
dec
imul
imul
out
rcr
add
push
mov
and
and
jnp
mov
shrl
push
sbb
cwtl
lock
sbb
mov
mov
sbb
jb
add
mov
sbb
lcall
test
nop
sub
fs
stc
mov
jg
in
push
cmpsb
icebp
pop
cmp
sub
in
jmp
push
fsubs
and
push
fdivs
add
nop
jp
push
add
add
ret
mov
jns
xchg
mov
add
pop
test
dec
xchg
fldcw
cwtl
js
mov
mov
add
dec
arpl
mov
leave
adc
mov
cwtl
insl
mov
lock
gs
adc
insb
mov
dec
in
push
sbb
pop
addb
mov
loope
pop
xor
add
test
cmp
icebp
adc
loop
push
or
dec
cmpb
ds
mov
movsb
lret
mov
daa
nop
xor
cli
adc
inc
enter
movsb
inc
test
leave
mov
jmp
adc
rorb
lea
popf
add
fwait
hlt
cwtl
and
in
mov
xor
test
add
pop
in
addr16
mov
cmp
inc
sbb
adc
outsl
add
or
fs
aaa
add
rclb
push
bound
lret
repnz
outsl
adc
out
int3
add
cmp
ficoms
sbb
fsubl
pop
hlt
sub
fdivs
lods
gs
sahf
mov
cld
mov
insb
and
pop
sbb
lds
lahf
adc
sbb
cmp
add
and
sub
lahf
loop
cmp
das
sahf
xor
mov
sahf
inc
and
push
push
mov
clc
fistpl
adc
xchg
push
sahf
in
sbb
cmp
es
out
add
nop
fwait
scas
or
shll
shrl
cmpsb
sarb
mov
add
test
scas
fistpl
xchg
inc
pop
loop
sar
pop
arpl
test
clc
js
cltd
pop
mov
incl
sbb
adc
xchg
arpl
flds
leave
xor
cmp
inc
add
cmpsl
push
mov
mov
fcoms
inc
inc
test
adc
arpl
xchg
daa
sarb
push
mov
xor
fdivrs
mov
add
jae
sub
rcll
dec
neg
dec
or
decb
cmp
out
cmp
push
inc
sub
cmp
pop
and
inc
pusha
aas
mov
adc
imul
cmp
aas
push
pop
dec
push
ret
push
inc
adc
sarb
cmp
mov
or
les
out
cmpsb
pop
xchg
adc
sarb
insb
mov
call
in
addb
push
imul
aaa
dec
leave
pop
xor
add
fisubs
cmpsb
movsb
push
mov
xchg
jle
lds
and
adc
sti
ret
sarl
pop
mov
or
dec
iret
roll
test
fdiv
add
pop
pusha
mov
cmc
pop
notb
inc
mov
add
mov
sub
mov
and
lcall
mov
xor
jbe,pt
mov
and
cmp
dec
or
and
testb
enter
sahf
add
aas
out
push
movsb
imul
lret
lock
cwtl
mov
fistpll
arpl
jmp
inc
das
xor
movsb
jmp
pushf
stos
pusha
fcoms
data16
data16
pop
xchg
xchg
xchg
mov
ljmp
xchg
subb
adc
adc
adc
add
inc
lret
adc
clc
mov
xchg
or
push
xchg
mov
mov
enter
loop
sbb
mov
ficoms
or
nop
cwtl
cs
add
adc
popf
les
mov
lcall
sub
pop
dec
and
mov
add
cmp
clc
loope
jb
inc
shl
lock
pop
imul
lock
arpl
xchg
faddl
mov
cmpsb
popa
push
cmp
loopne
loopne
and
sub
xor
leave
jge
dec
push
add
in
dec
sahf
test
aad
xor
nop
mov
fcoms
add
fld
inc
cli
cmp
add
mov
push
or
cmpsb
mov
sub
lret
push
daa
inc
out
dec
jae
pop
je
cmp
pop
cmpl
sbb
je
or
lock
and
int3
xor
test
jae
scas
xchg
mov
test
sub
sar
and
mov
mov
inc
add
adc
dec
xlat
xor
jecxz
cmp
add
push
dec
pushf
mov
sarl
pop
or
fs
and
enter
sbbb
xchg
cmp
sbb
adc
loope
jae
add
mov
in
pop
jno
sub
in
jl
adc
pop
push
andb
insl
popl
add
fbld
roll
sbb
in
hlt
add
shll
in
pop
pop
in
inc
fstl
sub
imul
jo
cwtl
in
repnz
mov
inc
pop
push
push
mov
mov
xchg
adc
push
cmpsb
sub
lcall
mov
pushf
inc
add
push
fxch
and
adc
mov
mov
add
test
pop
add
inc
ficoml
sbb
sbb
gs
leave
cmp
pop
les
stc
stos
icebp
lock
in
adc
dec
pusha
mov
loopne
hlt
loope
inc
sub
pusha
jo
inc
or
call
add
dec
or
test
add
jp
adc
stc
pop
loopne
add
mov
push
aas
andb
test
push
mov
jo
and
fldcw
dec
test
int
mov
mov
inc
add
jno
and
inc
ret
and
add
imul
fldenv
sbb
filds
loope
cmc
mov
and
sub
or
fildll
add
dec
shrb
pop
arpl
mov
cmp
subb
getsec
pop
filds
aad
push
pusha
fsubrl
add
dec
xlat
clc
mov
fiaddl
out
mov
add
flds
dec
loop
add
adc
and
jae
inc
sbb
cltd
xlat
mov
mov
je
repz
ret
jp
fwait
sbbl
dec
divl
push
pop
push
out
fwait
xor
push
add
cld
push
add
pop
and
or
push
jmp
pop
and
roll
mov
lea
push
ds
mov
xchg
fcoms
push
mov
shlb
aad
jno
dec
mov
jae
inc
add
imul
popa
sbb
scas
cli
and
add
testl
mov
mov
sub
fildl
xchg
rorb
mov
nop
lock
jae
in
sbb
jnp
icebp
dec
pop
stos
lret
add
aas
cmp
or
xor
sbb
lds
fwait
push
or
leave
ja
cmp
outsl
mov
test
fiadds
inc
dec
fcoml
xchg
test
loopne
imull
mov
lahf
shlb
repnz
pop
jp
push
mov
enter
inc
cwtl
outsb
add
sub
push
pushf
mov
inc
mov
test
ret
adc
fdivrs
jl
add
adc
adc
inc
movsl
push
js
sub
adc
insb
add
dec
pop
pop
dec
mov
and
xlat
cmp
mov
arpl
negl
sbb
lea
inc
dec
loop
add
pop
enter
fcomp
push
enter
inc
add
mov
mov
sbbl
dec
aam
and
rol
pop
adc
es
call
mov
fdiv
add
push
hlt
sub
pop
jo
clc
mov
add
fwait
aad
or
dec
jge
mov
fs
insb
inc
mov
xchg
add
scas
cmp
push
pusha
mov
rcr
cmp
shrl
or
inc
movsl
cmp
cvtdq2ps
aas
inc
mov
sahf
test
dec
push
sub
adc
add
mov
push
cmp
xor
mov
pop
add
xor
rorb
ja
enter
into
xchg
mov
dec
add
aaa
pop
jg
add
pop
adc
enter
stos
mov
inc
sahf
sub
cli
fxch
add
xor
xchg
cwtl
outsl
add
or
cmp
andl
loopne
std
mov
xchg
adc
pop
aas
movsl
mov
dec
dec
or
mov
rolb
sub
pop
pop
inc
add
lahf
pop
mov
jl
repz
adc
mov
add
cmp
ljmp
and
mov
sbb
push
ret
jle
sbb
mov
add
add
pop
shrb
and
out
in
jle
or
test
and
pop
mov
xchg
sbb
cs
or
test
je
dec
push
lahf
ds
enter
and
stos
movsl
add
sub
mov
xchg
into
popa
cmpsl
inc
jno
push
mov
stos
test
push
dec
mov
push
add
ret
sbb
lahf
gs
call
cwtl
sub
dec
rol
iret
pop
pop
pusha
lret
pop
add
rorb
pop
adc
jb
add
xchg
fbld
mov
add
cli
out
cltd
in
int3
pop
js
cmp
jnp
out
in
push
std
inc
xchg
or
ret
rorl
adc
fbld
ds
pop
sub
cmp
fistpll
sub
xor
popa
add
mov
shl
adc
ror
lds
aam
repz
ds
dec
jl
jl
sbb
and
pop
das
dec
fldl
cmp
imul
inc
sbb
sbb
push
popa
xchg
add
and
sub
mov
int
andb
xor
mov
je
mov
imull
and
push
lcall
sub
add
and
pop
adc
cmp
in
mov
test
jne
xchg
and
cmpsl
call
lds
and
mov
and
add
outsl
inc
lods
test
cmp
mov
iret
mov
sbb
mov
out
inc
push
sub
cmp
orb
add
mov
js
nop
and
add
cmp
imul
cmpsl
inc
cmpsb
cmp
rclb
mov
and
push
inc
cmpsl
and
lods
xlat
mov
add
loope
sarb
fiadds
xchg
xor
mov
push
cmovge
jmp
movsb
call
test
dec
fldt
push
je
xor
add
call
mov
fldcw
loop
add
notb
insl
orl
popf
cld
cmp
rcr
add
add
add
pop
gs
in
push
inc
inc
mov
add
repz
imul
fchs
add
ret
xchg
sarb
push
inc
add
mov
int3
add
sbb
xchg
fcoms
shlb
pop
adc
inc
and
ja
adc
jg
pop
mov
icebp
dec
dec
mov
jecxz
fwait
mov
cwtl
xchg
cmp
lcall
inc
sbb
jle
cmp
adc
mov
jmp
jo
mov
mov
mov
xchg
xor
or
pushaw
sbb
hlt
sahf
mov
fsubr
cmp
and
mov
and
lods
pop
imul
add
js
jmp
hlt
leave
sub
movsb
adc
add
insb
pop
sub
cwtl
sub
int3
mov
jb
pop
dec
add
or
imul
and
jae
push
pop
jbe
inc
mov
das
in
cmp
xor
or
adc
nop
xchg
sbb
push
je
lods
add
cmp
and
sbb
mov
adc
cs
shrl
lods
nop
mov
pop
adc
ljmp
mov
rcrb
stos
sub
mov
push
stc
push
dec
movsl
shrb
jbe
xchg
adc
idivl
test
inc
adc
sarl
shl
mov
xor
ficompl
int
movsb
inc
xor
push
aas
mov
in
lods
inc
fdivrl
movb
decb
xchg
lea
xor
lods
enter
rcrb
test
addr16
jne
xacquire
mov
sub
fmuls
adc
dec
fadds
or
mov
adc
dec
ficomps
mov
nop
cmp
shr
mov
mov
sbb
or
add
movsl
and
imul
dec
pusha
fmull
sbb
mov
cld
pop
hlt
cmp
sub
shlb
jo
mov
jno
loope
ja
movsl
xchg
push
enter
pushf
mov
fs
sub
add
push
adc
ja
loopne
cli
in
cld
lods
aas
mov
je
ds
stos
sbb
das
push
adc
add
mov
pop
das
jp
imul
xchg
jb
in
loope
xor
push
xor
add
xor
in
das
leave
iret
insb
xchg
sarb
mov
sarb
and
stos
fdivrl
cs
test
sbbl
movsl
jo
or
shl
repz
incl
pushf
xlat
add
cwtl
cltd
rolb
scas
sbb
and
dec
jecxz
jne
push
push
mov
ss
inc
into
loopne
out
add
stos
cmc
clc
lds
jae
fisttpll
ret
mov
addr16
inc
push
push
inc
mov
add
mov
push
popa
aaa
xchg
push
mov
or
cmp
mov
or
insb
enter
cmp
mov
ds
movsb
aam
bound
adc
add
ljmp
inc
popl
repnz
out
mov
xor
aam
es
jmp
dec
add
call
mov
out
psubd
cltd
adc
mov
addr16
pop
sub
xorb
popa
dec
xor
jle
cld
xorb
repz
test
mov
inc
mov
aam
adc
add
lods
sbb
push
stos
arpl
add
mov
inc
inc
lock
or
lods
arpl
leave
mov
nop
flds
inc
or
mov
jo
movsl
inc
mov
inc
push
adc
loopne
xchg
dec
loop
sbb
pop
jo
loopne
and
cwtl
int3
xchg
bound
inc
rorb
cmp
in
add
or
mov
push
mov
push
and
gs
mov
mov
fdivrl
sbb
push
and
hlt
or
call
and
test
out
jl
jns
das
pop
mov
pop
pop
push
sub
fcoms
ret
xchg
mov
sub
xor
in
ds
push
rolb
lret
jle
rolb
decl
xchg
leave
sub
cld
enter
mov
addr16
adcl
add
and
sbb
add
insl
add
fs
js
int3
pushf
sub
stos
inc
movsb
mov
mov
lret
push
push
roll
cmpl
add
or
adc
mov
es
push
sbb
inc
adc
and
jno
pop
clc
arpl
ljmp
adc
mov
mov
mov
arpl
lret
pop
mov
outsl
push
pop
test
mov
jmp
jp
add
xchg
fs
movhlps
lods
jno
test
in
inc
xchg
mov
subb
adc
jg
or
and
test
int3
popf
imull
mov
push
mov
xchg
push
jge
add
loop
pop
mov
mov
les
push
stc
add
push
fxch
in
repnz
pop
in
imul
push
and
jbe
mov
dec
nop
pop
ret
or
mov
sbb
clc
pop
xchg
and
and
filds
cmp
nop
inc
xlat
pop
add
jl
mov
dec
in
sbb
cmpsl
sbb
mov
pop
pop
lea
mov
pusha
inc
ret
rcrl
add
adcb
mov
shlb
add
loope
lret
inc
pop
incl
cmpsl
cmp
mov
mov
xor
adc
hlt
mov
mov
mov
icebp
xor
hlt
sbb
inc
cmpb
and
sub
pushf
adc
rcll
out
add
cmp
pop
push
mov
sub
imul
mov
in
xor
cmp
mov
lea
jp
mov
or
dec
push
movsb
shlb
push
add
adc
je
inc
push
aam
jae
xor
pushf
cmp
in
mov
push
add
fistps
lahf
push
cmpsl
add
jle
arpl
cmp
je
add
dec
out
lret
push
daa
cmp
sarl
nop
repnz
pop
and
lret
rcr
les
mov
sbb
clc
lds
in
sbb
test
sub
and
pushf
add
mov
jo
mov
inc
mov
pop
mov
cmpsb
movsb
cmp
add
or
add
push
fistpll
dec
add
aad
add
jb
daa
and
pop
inc
stc
cld
mov
pushf
push
add
cltd
sahf
sbbb
jo
sbb
clc
test
mov
cwtl
mov
inc
xchg
mov
inc
xchg
gs
arpl
push
add
movl
push
fisttps
xchg
loopne,pn
inc
enter
mov
xor
enter
das
insb
mov
adc
fwait
ds
std
jnp
ss
cmp
jne
pop
sahf
xchg
xchg
add
repnz
cmp
adc
scas
mov
dec
sub
sub
adc
mov
or
add
test
dec
daa
sbb
xchg
adc
add
and
cltd
mov
pop
sub
mov
test
adc
cmp
loop
mov
jge
dec
ljmp
das
stos
adcb
shr
add
lods
pop
leave
ljmp
ret
jo
or
sbb
loop,pn
inc
and
and
or
dec
test
and
xchg
push
loopne
fidivrs
imul
inc
or
ret
adc
int
pushf
sbb
add
into
es
out
pop
jb
lcall
jno
lahf
std
lock
pushl
pusha
mov
test
in
insl
enter
mov
push
pop
mov
insl
add
xor
pop
arpl
pop
stos
rcll
push
push
sbbb
rcr
and
addl
inc
sahf
imul
call
add
ret
inc
xorb
add
cmc
xchg
push
push
push
jge
add
call
inc
fsub
pop
jo
inc
or
mov
addb
movsb
dec
cltd
shlb
and
mov
test
int
push
pop
adc
cmpsb
in
add
sarl
enter
xchg
hlt
subl
and
push
mov
push
xor
add
dec
mov
add
rcrb
and
cmp
sbb
filds
lret
push
insl
hlt
xchg
jbe
sbb
sub
je
add
int
pop
popa
lret
mov
push
or
fildl
ret
dec
adc
mov
test
cs
pop
outsl
popa
insl
std
lock
sbb
or
rorl
dec
enter
cmpsb
pop
push
faddl
enter
add
jne
test
in
fdivrl
adc
paddd
fmuls
add
icebp
jo
adc
xor
ret
arpl
inc
lods
and
adc
pop
pop
movsb
mov
or
fcmovb
push
push
add
insl
pop
gs
add
sbb
lahf
js
nop
jo
aas
jecxz
pusha
inc
repnz
adc
sbb
int3
pop
push
or
orb
mov
mov
mov
mov
cld
pushf
pop
inc
push
stos
jg
add
jne
aad
xchg
xchg
movsb
andb
fwait
dec
shll
pusha
lods
rolb
jo
pop
add
add
push
jns
aas
aam
xchg
je
push
mov
out
inc
push
or
loop
mov
lock
dec
mov
lds
and
cld
addr16
push
mov
and
test
inc
add
imul
fsubr
addl
add
int3
int
jb
pusha
pop
scas
adc
lock
cmp
pop
xchg
cmc
mulb
lods
jecxz
rclb
dec
mov
xor
sub
movsl
inc
pusha
add
mov
lahf
pop
das
push
push
add
or
push
xchg
subb
insb
sub
xor
mov
cs
stos
mov
sti
sub
pushf
mov
popa
stos
sub
mov
mov
jae
stos
jge
or
mov
fs
jmp
pavgw
pusha
cltd
adc
pop
fisubl
jnp
add
or
clc
shll
jmp
imul
divl
sub
insl
add
mov
pop
push
ret
popa
ljmp
add
mov
xor
cmpsl
inc
cltd
in
aam
daa
jb
call
jns
out
inc
push
roll
and
jno
mov
imul
or
loopne
dec
or
test
mov
mov
rolb
dec
aas
ret
aam
or
add
das
pop
sbb
adc
mov
add
jg
xlat
and
out
psllw
sbb
es
nop
adc
loop
dec
in
rcll
mov
dec
rcl
les
sub
mov
sub
jae
xor
jmp
xchg
nop
push
bound
mov
cmp
fdivl
into
or
iret
xchg
push
mov
data16
icebp
ret
add
add
aad
or
lea
inc
call
or
mov
pop
mov
sub
cmp
add
add
sbb
jl
sbb
into
cld
adcb
add
add
loopne
jecxz
cmp
popf
mov
cld
cmp
les
add
pop
outsb
mov
mov
push
lock
mov
and
pop
das
jno
mov
inc
shll
xlat
aas
dec
movsl
add
jns
ds
inc
rcrb
jg
or
push
sbb
mov
mov
shlb
jecxz
adc
or
add
inc
mov
xor
xor
xchg
push
addr16
in
andb
mov
imul
nop
pop
in
sahf
dec
pop
xor
add
mov
mov
cs
test
and
add
and
dec
jge
push
stos
fildl
or
je
pusha
jnp
pop
dec
or
add
mov
icebp
mov
in
mov
or
nop
inc
rclb
or
in
mov
add
and
and
push
jae
mov
inc
adc
push
dec
clc
adc
xchg
das
dec
and
out
mov
pop
push
sbb
xchg
and
nop
in
inc
mov
cmp
loop
adc
daa
loop
in
add
mov
addr16
jmp
ret
add
or
add
push
and
in
sub
test
mov
lods
mov
test
and
les
rcll
aam
sub
sarb
add
enter
mov
cwtl
or
sbb
cmp
movsl
inc
imul
repnz
cli
das
fadd
xor
aas
adc
jo
mov
jecxz
hlt
push
enter
lcall
inc
sbb
icebp
push
insb
push
decb
cmp
iret
pop
sti
orb
cmpb
movsl
push
mov
pop
aad
adc
cmp
das
ja
push
scas
xor
inc
sub
cmp
aas
add
aas
into
or
testb
mov
sbb
cmp
mov
pop
int
and
dec
mov
push
les
xchg
aad
inc
iret
shlb
ret
cmc
call
or
inc
mov
add
mov
and
fsubp
sbb
mov
data16
adc
andb
cmp
mov
dec
les
fld
inc
fs
and
sbb
or
clc
ds
sub
jae
cmpb
jae
fadds
lods
or
cmp
data16
push
xchg
stc
rorb
pop
fs
mov
adc
popa
add
std
arpl
cmp
cmp
lods
imul
sbb
sbb
out
sub
js
neg
inc
fbstp
push
js
jl
outsb
jmp
call
in
lods
and
add
cmp
jno
pop
das
and
pusha
mov
push
jb
lds
shrb
pop
dec
add
pop
mov
int3
jnp
add
jne
lahf
dec
imul
idivl
push
enter
jl
xchg
pusha
pop
roll
jmp
jo
add
jmp
xorl
cwtl
push
nop
lcall
jmp
mov
daa
or
shl
fwait
ja
pop
and
xchg
inc
push
add
aad
in
pop
mov
clc
add
cli
mov
xchg
mov
ret
pop
loopne
inc
test
sub
sub
icebp
in
push
mov
enter
mov
ret
mov
rclb
jp
repz
mov
jmp
add
addl
cwtl
aam
iret
add
fwait
rorl
dec
jo
in
shlb
into
mov
mov
inc
in
out
sbb
add
sbb
shll
adc
adc
xlat
adc
jg
nop
fistpl
ss
lock
cltd
lret
mov
jb
pop
sbb
outsb
stos
ds
enter
dec
adc
add
pushf
inc
int
pop
stc
dec
pop
mov
add
nop
mov
adc
andb
shll
inc
loope
and
add
test
gs
pop
cmp
push
add
jle
jmp
jmp
mov
fiadds
mov
inc
cmpsl
mov
mov
movsb
cmp
xchg
push
adc
fs
in
or
leave
mov
inc
sti
sahf
call
test
cwtl
fdiv
sbb
jmp
jmp
les
push
outsl
cmc
in
inc
adc
mov
sbb
lret
daa
add
mov
add
or
mov
push
cmpsb
shll
andb
sub
push
scas
shlb
daa
addb
dec
xchg
rolb
dec
xchg
dec
rclb
push
cmp
add
rolb
mov
lods
sbb
sub
sub
and
sarl
outsl
dec
add
xor
movb
lret
in
cwtl
les
push
push
shlb
inc
add
mov
sbb
ret
mov
push
outsb
add
pop
ja
push
xchg
adc
paddw
xor
adcb
lods
add
mov
add
sub
popa
cmp
xor
leave
and
popf
inc
std
mov
fiadds
cmp
mov
inc
nop
daa
sbb
shl
cmp
dec
cmp
pushf
enter
mov
add
lcall
jle
add
in
pop
insb
mov
pusha
sbb
lods
add
rol
loop
jl
cmpb
add
fidivl
add
lret
scas
inc
xlat
andb
xor
das
adc
imul
scas
cltd
clc
xorl
mov
mov
test
adc
mov
int3
sbb
pop
push
adc
les
cmpsb
xchg
mov
cmpsb
adc
add
push
inc
aad
fadds
inc
cld
xor
cmpb
push
and
add
repz
aam
xchg
imul
lcall
adc
ds
jb
dec
aas
xchg
call
mov
add
jge
repnz
dec
stos
lock
pop
sbb
pop
push
sbb
je
adc
pop
xchg
aam
aam
mov
cmpb
data16
add
sbb
or
xor
ljmp
pusha
fcomps
mov
inc
push
mov
add
mov
push
nop
test
sub
add
jbe
push
mov
into
xchg
mov
shrl
scas
lds
popa
dec
add
adc
mov
out
mov
aad
push
mov
add
cmpsl
fldenv
daa
push
sbb
add
mov
cmp
ljmp
fsubrs
into
mov
add
bound
rorb
scas
je
aad
mov
mov
lods
or
inc
xchg
inc
call
loope
and
mov
pop
out
jge
enter
int3
fmuls
mov
inc
xchg
adcl
inc
adc
adc
adc
stc
test
lock
dec
adc
pop
adc
stc
shlb
push
sbb
mov
sbb
sub
xchg
dec
mov
or
xchg
mov
inc
inc
push
sub
mov
cmc
fbld
pop
fsubrl
neg
xor
mov
cmp
test
jne
cmp
lcall
hlt
xchg
mov
sbb
fldenv
xchg
dec
cmc
mov
mov
or
or
and
andb
lcall
xchg
xchg
ds
add
insl
enter
push
orb
pop
inc
inc
outsl
cmpl
test
pop
pop
adc
dec
mov
lock
jne
das
ja
dec
lock
mov
push
jo
push
addr16
mov
imul
cwtl
dec
adc
mov
cmpsb
add
ja
clc
insb
addr16
add
ret
mov
sub
and
mov
loopne
addr16
and
pop
jmp
das
lock
xchg
pop
jg
fidivs
add
xchg
lods
mov
rcrl
jo
inc
or
push
mov
enter
and
xor
add
test
loopne
dec
ja
int3
stos
scas
add
call
pop
add
and
cwtl
or
and
ficoml
sbb
je
pop
in
shrl
popa
mov
xchg
xchg
sub
mov
xchg
jle
add
adc
rcrb
push
rorb
aad
in
jle
add
cmpb
fsubrp
cmpl
dec
xchg
adc
cmp
outsl
cmovp
add
cmp
rolb
loopne
pop
push
repnz
popl
nop
popf
arpl
sub
jmp
pusha
add
insb
mov
lods
push
std
adc
pusha
inc
das
add
push
sahf
inc
and
rcll
jecxz
xchg
dec
pop
xchg
push
xchg
mov
test
add
or
adc
imul
adc
shl
xchg
push
sbb
das
xor
mov
enter
add
push
push
push
jae
mov
in
idivl
fimuls
cmc
or
xor
sub
mov
mov
dec
sub
mov
lock
pop
jno
cmpsl
addr16
adc
and
cmp
lahf
subb
sbb
rorl
movsb
orb
xchg
and
push
icebp
cmpsb
mov
lahf
lock
jo
ret
js
add
xchg
add
cmp
sub
into
cmpb
adc
pop
test
call
fisubrl
push
aad
or
pop
push
or
bnd
nop
push
add
les
push
lcall
add
push
cmc
lods
and
call
enter
xchg
cld
mov
adc
jcxz
faddl
mov
pop
lahf
inc
dec
arpl
mov
push
pop
mov
dec
in
sbb
sbb
add
stos
aas
jmp
lea
and
xchg
rcrb
pop
xor
jnp
in
add
cmp
loopne
lock
fdivs
cwtl
sub
add
out
xor
cmp
mov
add
jle
mov
pop
dec
call
sub
mov
shlb
pop
mov
push
cld
fmul
inc
out
xchg
fs
adc
lcall
imul
aad
and
sti
dec
dec
mov
lock
int
adc
ret
add
movb
xchg
inc
cltd
add
jge
add
jl
pop
mov
xchg
nop
sub
pminsw
inc
pusha
mov
add
pop
dec
or
pushf
in
mov
adc
add
ficompl
adcl
dec
iret
inc
add
test
mov
lock
inc
mov
add
in
cmp
push
sahf
cmp
inc
mov
push
and
xorb
push
mov
add
jl
pop
test
pop
inc
stos
mov
add
or
add
pop
leave
adc
or
rcll
movsl
mov
cmp
shrb
roll
push
jns
fiadds
xchg
mov
and
pop
add
mov
and
inc
dec
or
mov
mov
addr16
add
fdivrs
loopne
call
outsb
push
mov
and
cmp
cmpsb
sub
inc
js
loop
pusha
push
sub
test
pop
loopne
mov
add
push
movsl
lret
add
pop
or
hlt
iret
aad
sbb
add
mov
lret
arpl
inc
gs
ret
and
and
mov
out
mov
sub
push
xor
testb
mov
dec
gs
sbb
test
lds
fsubrl
push
hlt
orb
sbbb
push
jae
xor
add
inc
pop
lds
push
into
mov
das
pop
adc
and
cmp
jg
test
xchg
push
dec
ja
add
pop
insb
jecxz
test
xlat
test
stc
push
mov
xchg
enter
cmp
pop
fsubrl
mov
shlb
cld
fs
and
pusha
addb
out
jno
clc
push
or
out
scas
nop
lock
xchg
mov
test
scas
adcb
pop
dec
arpl
rcll
xchg
push
lahf
jge
pop
mov
sub
push
push
mov
in
loopne
lcall
dec
mov
and
stos
add
sub
xor
add
hlt
int3
adc
push
aam
das
or
mov
mov
jl
imul
dec
push
mov
jns
adc
cli
enter
or
adc
rol
pop
lret
insl
mov
stos
or
inc
dec
inc
repnz
fldl
mov
aam
mov
lds
pop
mov
jmp
cmp
bound
loop
sahf
mov
std
adc
daa
jns
scas
inc
or
in
add
pop
ret
cltd
mov
rcrl
dec
xchg
rorl
xchg
out
mov
nop
aad
pushf
sbb
add
loop
enter
sahf
mov
dec
aas
pop
push
add
add
aas
pop
lea
icebp
sbb
aaa
rorb
fdivrl
add
inc
stos
dec
push
mov
das
or
scas
push
ret
push
iret
jo
jbe
ret
jge
xor
add
or
mov
mov
invd
bound
jg
mov
mov
mov
lock
repz
sub
testl
xor
mov
add
and
pop
push
push
push
imul
mov
test
and
push
addr16
xchg
in
rclb
pop
out
cmp
popa
movsb
aam
icebp
insb
mov
daa
add
or
dec
xor
add
in
testb
adc
stc
sub
push
xchg
lods
ja
out
push
test
fildl
inc
sub
int3
test
pusha
dec
lahf
insl
dec
popf
inc
cld
add
sbb
rolb
mov
fildll
stos
xchg
mov
and
push
aas
dec
scas
and
add
or
aam
ret
test
shrl
mov
add
adc
push
outsb
fbld
xlat
in
rorl
test
push
fwait
or
add
jecxz
imull
int3
popf
jg
push
js
adc
mov
push
repnz
xchg
nop
sub
shlb
test
add
jmp
push
or
cmp
cld
pop
push
add
mov
and
popl
nop
iret
cs
xor
adc
add
aam
dec
addr16
add
insl
sarb
inc
imul
sub
mov
add
pop
sahf
sub
add
std
test
xor
pop
dec
pushf
sub
adc
mov
mov
jo
loopne
mov
imul
xor
sbb
jns
dec
loopne
gs
aam
rcrb
out
and
movsl
jo
sbb
aaa
mov
cmpsb
mov
cmp
inc
inc
mov
out
sbb
sbb
inc
aad
stos
cmp
or
add
imul
aaa
pusha
add
xor
sub
lcall
popa
rclb
int3
pop
inc
in
test
gs
loope
dec
loopne,pt
mov
loop
push
and
in
mov
shrb
and
and
jns
cmpl
push
or
std
xlat
das
push
loope,pn
add
adc
add
inc
fistpll
lahf
cltd
loopne
popa
xchg
stos
push
ret
dec
ja
add
jmp
jae
mov
ficoml
into
cld
dec
mov
adc
adc
popa
lcall
push
mov
sarb
add
mov
xchg
pop
shl
adc
sub
popf
cmpsb
or
cmp
and
push
sbb
dec
scas
std
xchg
xchg
loop
jmp
addb
and
pop
aas
cmp
ret
add
ja
aad
cld
clc
outsb
rolb
pop
add
jnp
mov
loop
push
sub
test
adc
call
or
or
add
pop
call
adc
mov
or
xchg
cmpb
into
mov
pop
andb
or
push
movhps
inc
xchg
repnz
inc
mov
xchg
adc
js
mov
mov
cwtl
or
std
jne
push
add
rclb
les
movsb
push
aaa
data16
outsl
popf
dec
test
pushf
scas
or
bound
cmp
mov
inc
andl
or
xor
mov
punpckldq
add
or
xor
dec
pop
or
mov
or
dec
inc
mov
push
mov
add
pop
sub
fsts
xlat
mov
adc
inc
mov
mov
aam
sbb
push
dec
pushf
sbb
jno
fsubl
sub
sub
inc
adc
xchg
jae,pt
mov
inc
push
mov
rcr
mov
outsb
clc
stc
jno
xor
ss
xchg
mov
das
sbb
add
aas
iret
decb
cld
sbb
lahf
hlt
cmp
xor
popa
loop
or
cmp
stos
mull
add
cwtl
xor
or
flds
push
push
stos
add
mov
shrl
fs
outsl
sbb
mov
and
mov
fsubl
push
inc
mov
cmpsl
lahf
add
mov
es
fmull
dec
test
gs
mov
push
subl
shlb
push
jno
or
pop
dec
in
pop
pop
into
push
add
fdiv
jp
lea
mov
push
jp
repnz
jnp
pop
je
cltd
add
push
adc
fistps
cmp
mov
call
addr16
adc
mov
mov
push
xorb
fsubl
jmp
or
inc
ret
add
hlt
add
cld
pushf
cld
pop
mov
add
dec
cmp
in
fmuls
or
push
loop
rolb
in
nop
movsb
pop
jg
pop
clc
add
hlt
loopne
leave
dec
jne
pop
cmp
lods
mov
push
add
hlt
fisttpl
pop
mov
mov
or
stc
push
or
out
fdiv
loop
push
notb
mov
sbb
pop
mov
out
push
out
cmpsl
scas
sub
cld
outsb
mov
aam
mov
xchg
in
add
popf
divb
gs
and
imul
inc
mov
pop
repnz
negb
hlt
mov
push
ds
pushf
mov
scas
bound
cwtl
loopne
add
jle
rorl
xor
rcrl
add
dec
fiadds
push
nop
mov
inc
and
cmp
fdivrl
cwtl
hlt
mov
xlat
repnz
lar
cmp
push
cli
shlb
movsl
sbb
adc
xchg
imul
cs
xor
or
cmp
jb
or
sub
in
andps
push
hlt
dec
imul
pusha
lods
push
dec
mov
test
inc
movsb
mov
daa
scas
add
arpl
pop
aaa
mov
mov
sbb
add
rorl
int
add
add
aam
rcll
cmp
je
sub
cmp
movsl
add
aam
jo
mov
jmp
add
insb
cltd
xor
xchg
int
mov
aaa
jb
pusha
lret
es
or
rcr
icebp
cld
cmp
repz
adc
mov
das
sbb
mov
add
fistpl
lods
rolb
and
and
xchg
shlb
or
pop
imul
xchg
dec
or
je
or
mov
adc
aas
dec
cmc
mov
mov
hlt
add
pushf
sbb
mov
push
rcrb
fwait
adcl
adc
sbb
sub
adc
cltd
mov
jl
sbb
outsl
sub
and
pop
sar
jno
add
cmp
xchg
les
cmp
push
hlt
pop
xlat
je
dec
pop
shlb
repnz
outsb
and
arpl
aaa
pop
loop
gs
mov
push
inc
sbb
arpl
push
xchg
aam
loope
mov
sub
loopne
add
arpl
addl
lret
loope
adc
or
jl
ljmp
add
push
dec
add
insb
mov
out
shll
xlat
cwtl
jle
lds
inc
mov
lock
in
pop
inc
roll
jmp
push
xor
dec
lahf
jae
test
cmp
nop
imul
shll
test
jo
aam
sbb
push
pop
cmp
dec
enter
inc
add
cmp
push
jno
dec
outsl
mov
mov
pop
pop
addb
aad
mov
add
rcrl
add
lock
mov
add
scas
jecxz
pop
pop
fcompl
movsb
push
outsb
inc
enter
add
sbb
add
mov
fcoml
jno
test
jbe
and
roll
fisttpl
adc
rcrb
jecxz
cmp
std
add
stos
dec
and
xchg
add
gs
xchg
fcomps
sbb
out
mov
call
pusha
or
fs
ljmp
insb
and
pop
in
push
and
sti
fldl
cmpsl
push
pop
ret
mov
inc
xor
sahf
adc
xor
pop
add
js
mov
jo
add
jge
ljmp
pop
mov
fmuls
jnp
icebp
push
out
sbb
pop
sub
and
jle
adc
add
adc
das
add
ds
cmp
push
gs
pop
cmp
in
sbbb
bound
cmp
rolb
sub
jne
add
pop
mov
add
iret
sbb
or
mov
cmpsl
or
or
cmp
mov
in
add
pushf
nop
lock
repnz
aad
sbb
push
sub
add
call
mov
stc
movsb
rolb
loop
push
rorl
jnp
cltd
lret
js
add
inc
rclb
inc
jge
mov
cmp
jae
daa
or
xor
flds
sub
andb
scas
add
imul
sbb
pop
sub
lods
or
fmul
mov
xor
lahf
xlat
outsl
mov
test
add
xchg
lahf
mov
shrb
adc
xor
mov
clc
dec
add
rcr
mov
push
js
add
insb
inc
and
add
leave
add
dec
ficoms
mov
add
jne
mov
sub
jbe
test
call
mov
add
mov
ds
subb
sbb
sub
nop
nop
mov
mov
ljmp
aaa
and
call
jmp
jae
xchg
add
push
pop
andb
mov
nop
flds
pusha
pop
sbbb
iret
xlat
or
test
popa
sbb
jl
andb
mov
les
jno
add
js
cmpsl
mov
dec
add
pop
pusha
dec
mov
fadds
aam
cmp
xor
xchg
bswap
es
andb
mov
sub
add
xor
lea
test
iret
mov
mov
xchg
mov
add
fs
pop
add
sub
out
mov
add
pop
jge
or
ss
add
jecxz
dec
pop
ja
adc
in
arpl
ljmp
aam
push
pop
mov
add
cmp
jp
lock
add
negb
xor
fidivrs
cmp
loop
dec
arpl
pop
mov
add
fdiv
cld
rcrl
push
mov
xlat
mov
xor
pusha
ror
in
orl
mov
mov
jno
imul
mov
rorb
jo
clc
jno
hlt
add
jp
orl
add
pop
popa
call
add
in
rclb
mov
test
add
xchg
pop
mov
mov
dec
mov
inc
int3
dec
xchg
cwtl
dec
dec
dec
adc
fnstenv
je
leave
fmuls
inc
jl
faddl
inc
outsl
xchg
add
dec
pop
hlt
popa
xchg
jb
lret
nop
arpl
xchg
lock
stc
movsb
dec
and
or
mov
mov
negb
fidivrl
jmp
sub
cld
in
mov
pusha
insl
or
bound
aam
inc
mov
je
add
nop
pop
popa
and
icebp
sub
lret
inc
cmp
repnz
loope
nop
and
iret
popa
pop
icebp
sbb
addb
add
mov
lahf
decb
inc
or
ret
shrb
mov
xchg
ja
add
mov
mov
popa
inc
enter
pop
addb
jl
add
iret
add
mov
fs
xchg
jno
cmc
rcr
je
cmp
mov
mov
loopne
push
jbe
shll
add
xor
xchg
lods
bound
jle
sub
arpl
mov
or
lds
popa
insb
popf
and
iret
loopne
dec
out
push
jnp
xor
popa
loopne
xor
pop
and
outsb
dec
push
and
std
fstps
xor
hlt
les
jmp
push
jo
push
pop
mov
test
lock
leave
mov
cltd
fdivr
mov
xlat
orb
fdivl
in
add
sub
mov
fcompl
add
xchg
addl
fwait
jbe
pop
test
int3
frstor
shlb
sbb
pop
sbb
add
xor
mov
ss
loopne
inc
add
xchg
outsb
push
inc
jb
jp
call
sub
dec
data16
int3
xchg
nop
add
div
cli
add
mov
add
xor
movsl
push
or
xchg
sub
lea
imul
dec
pop
jo
mov
mov
dec
push
addr16
jo
pop
fwait
movsl
xchg
ret
jg
movsb
sti
mov
push
xchg
mov
and
ja
add
xor
into
cmp
popf
incl
jle
jbe
std
add
mov
subb
dec
and
jle
add
add
jbe
les
adc
inc
iret
pusha
push
pop
scas
hlt
incl
pop
jle
pusha
add
xor
orl
inc
ljmp
mov
mov
test
dec
stc
sub
clc
loopne
add
mov
pop
push
lds
inc
sbb
dec
mov
test
aad
sti
jge
mov
mov
out
inc
xchg
ret
xorl
cltd
enter
in
cmp
cwtl
jns
lock
add
leave
ja
jne
add
cltd
loop
or
pusha
sti
popa
push
lods
loope
add
int3
in
sti
add
mov
aad
shrl
rorb
loop
xor
in
cmc
sbb
mov
add
mov
test
addb
sti
add
xor
jae
pop
mov
lds
call
cmpb
imulb
fiadds
popa
sti
aad
mov
adc
rol
int
shld
inc
sbb
mov
stos
ret
and
and
xchg
sbb
add
xchg
lret
cmp
fwait
adc
dec
push
jecxz
add
add
cmp
mov
add
subl
jl
jp
jne
and
inc
cmp
rcrb
or
push
push
call
fcoms
in
and
sub
push
push
mov
adc
std
xabort
add
sahf
mov
add
pop
and
jns
or
scas
in
sub
inc
mov
das
add
movsl
mov
pop
insl
cltd
aad
and
add
icebp
mov
add
pop
shr
outsb
mov
into
sti
add
mov
aas
sub
out
add
icebp
mov
dec
hlt
cld
inc
add
adc
add
mov
cli
sub
and
jg
das
movsb
jbe
cltd
xchg
sub
add
pop
jae
and
mov
fmull
sub
paddusb
adc
outsb
sti
andl
frstor
ljmp
sub
inc
sbb
test
fistpll
test
xchg
jg
cmp
ja
mov
jno
dec
sub
ljmp
mov
xchg
test
mov
lret
shlb
pop
scas
cmp
add
js
pusha
mov
sahf
and
xchg
push
dec
xor
insl
or
adc
mov
ja
jg
fs
jae
dec
adc
scas
adc
in
and
inc
add
push
jl
aas
aad
nop
sub
pop
cmp
push
loop
cmp
les
lret
shll
pop
cld
pop
add
cs
insl
in
add
xorl
subb
push
adc
or
andb
dec
insl
add
es
xchg
ret
push
in
add
mov
jmp
movsb
inc
mov
push
add
xor
add
and
mov
xchg
push
pop
push
test
add
dec
add
aaa
sub
mov
xor
push
and
add
jnp
sbb
adc
popl
pop
add
add
cmpsl
push
pop
loope
sbb
dec
add
inc
int
sub
mov
and
add
daa
in
jecxz
cltd
inc
test
loop
mov
stc
pop
int3
inc
lds
pusha
or
sbb
xor
lret
cli
pop
add
or
add
pop
stos
xor
sbbb
out
mov
xchg
pcmpeqd
jge
mov
add
rep
jg
pop
mov
out
dec
cmp
movsb
clc
ss
xchg
outsb
cmpsl
test
add
sarl
stc
dec
jl
push
or
jmp
push
cmp
add
je
pop
rcrl
inc
or
divb
rcrb
jmp
add
pop
dec
pop
inc
in
xchg
mov
or
sub
bnd
lock
add
leave
jne
mov
or
xchg
incl
inc
mov
outsb
shrl
lds
add
jp
das
lods
add
cld
xlat
push
adc
inc
add
pop
cmp
dec
jp
out
mov
xchg
addr16
orb
add
mov
bound
push
xor
pusha
mov
add
je
insl
adc
jns
add
inc
dec
lods
adc
cmp
sbb
xor
and
jmp
andb
sub
ret
pop
pop
add
ds
stc
ficoms
flds
inc
mov
adc
pop
inc
shrb
outsl
setno
cmpsl
sbb
add
mov
movl
popf
mov
push
xchg
xor
mov
adc
pushf
add
arpl
or
push
stos
cvtps2pi
repnz
xchg
fiadds
mov
in
test
mov
push
jg
push
mov
xor
arpl
mov
sbb
jle
inc
inc
sbb
add
cltd
data16
add
push
xlat
in
and
and
repz
add
push
stc
dec
mov
push
or
ficompl
dec
repnz
lret
push
sbb
add
cwtl
adc
cmp
add
xchg
jno
mov
adc
sarb
pushf
xchg
inc
arpl
popf
mov
pop
movsl
dec
ret
in
es
add
xchg
cs
cwtl
cli
add
push
jp
add
daa
inc
adc
add
movsl
xchg
icebp
lds
push
add
sti
adc
and
je
xor
pop
adc
shll
aad
xchg
push
jo
pop
inc
lea
pop
jnp
push
add
jo
add
dec
add
mov
dec
pop
out
push
lock
std
jle
mov
aaa
add
jmp
cltd
shlb
mov
sti
cmpsb
xchg
xor
lds
add
pop
sbb
mov
xchg
aam
xor
or
fadds
mov
leave
andb
adc
jle
dec
add
push
mov
add
adc
cltd
cmp
rcl
inc
xchg
sub
int3
bnd
test
jo
mov
sub
push
rorb
shl
jle
fwait
mov
push
je
jo
clc
adcl
cmp
or
repz
mov
jmp
imul
je
out
xchg
jge
push
ret
push
or
pop
jbe
in
mov
pop
xor
cmc
cmpb
and
testl
push
stos
jmp
rcrb
jbe
inc
add
jo
cmp
pop
sub
push
int3
lods
rolb
popf
jge
add
pop
test
jl
xor
rdpmc
cmp
addl
call
xor
sarl
xlat
jge
add
movl
mov
jno
shll
sbb
adc
bswap
dec
jg
cwtl
sub
addr16
enter
mov
ss
or
jo
add
js
dec
add
dec
out
int3
call
inc
inc
lods
add
push
xor
push
adc
mov
jge
iret
cmp
nop
enter
mov
push
in
inc
movsl
lahf
xchg
nop
mov
cmp
fstl
rolb
imul
bound
mov
xchg
les
cli
xor
sub
and
mov
test
and
add
xor
lods
repnz
lods
add
mov
cli
shl
sub
insl
aas
cmp
repz
sahf
js
inc
mov
stos
or
imul
push
add
or
pop
and
add
and
shll
push
jnp
popf
add
aam
add
ffree
add
or
popa
sub
int3
sub
das
subb
pop
push
div
mov
fs
mov
add
nop
adc
rcr
rolb
test
push
clc
dec
jns
mov
sti
push
sbb
stc
sahf
add
rol
imul
rcrb
cmp
hlt
insl
mulb
out
pop
push
mov
stos
and
and
popl
ja
mov
int3
leave
adc
xor
xor
ficoms
sarl
xor
hlt
popa
arpl
lahf
insl
ret
xor
cltd
add
pushf
cs
into
pop
adc
popa
sbb
or
cmp
adc
mov
inc
jo
loope
popa
pusha
mov
out
fists
cmp
outsb
cwtl
xchg
push
dec
dec
and
adc
fcmovne
test
mov
sub
and
xor
das
shl
iret
movsb
nop
dec
add
lcall
add
push
sbb
call
pop
mov
add
insl
push
mov
mov
arpl
or
rclb
enter
add
jns
lea
add
dec
jo
mov
imul
pop
jb
mov
cmp
push
add
jge
adc
jno
and
into
pop
jbe
push
cmp
mov
lahf
cmpsl
js
and
dec
addb
sbb
lods
pop
or
movl
in
out
add
push
lock
push
sub
sbb
xor
pop
addr16
pop
add
pop
and
lds
push
cmpb
shl
pop
jl
cwtl
notb
xchg
jo
xchg
mov
dec
test
push
or
js
cwtl
orb
insb
outsb
and
sti
out
cld
adc
mov
cmpl
or
mov
pop
jo
xchg
insb
jae
pop
or
mov
mov
and
jmp
mov
stos
scas
lcall
xchg
mov
add
sub
hlt
cmc
popf
les
sti
cmp
pop
xchg
out
pop
popa
inc
pop
sbb
mov
outsb
add
mov
xchg
lock
cltd
adc
bound
push
loop
add
add
lds
stos
xchg
fwait
xor
jns
inc
or
data16
mov
pop
jp
sbb
cmp
mov
sbb
cld
loopne
add
sub
jae
mov
adc
jle
dec
or
push
xor
jg
jp
cmp
mov
xchg
xor
xchg
mov
pop
cmp
fsts
dec
pop
add
sub
mov
xchg
ret
xchg
push
add
bound
dec
in
cmp
push
fisttps
adc
push
pop
xchg
xor
addr16
clc
push
inc
xchg
cmp
mov
sub
adc
shrl
xchg
and
pop
add
sbb
xor
andb
sub
cmp
lods
inc
xchg
cmp
pop
ja
in
push
lcall
rcl
add
enter
push
xor
sarb
add
insl
dec
xchg
sbb
add
mov
mov
aam
push
sub
mov
je
cmp
rolb
or
mov
int
add
lret
test
movsb
ret
add
int3
cwtl
in
divl
dec
mov
inc
test
add
push
loopne
xchg
ljmp
into
int3
xor
xchg
push
push
mov
push
push
fstl
sbb
lret
data16
mov
sub
push
add
pop
sub
push
mov
std
and
les
shl
ds
mov
sub
icebp
push
loop
lcall
add
mov
adc
fisubrs
xchg
call
pop
std
mov
pop
push
xor
add
push
xor
mov
or
jge
loopne
subb
insb
nop
cmp
pop
xor
and
mov
jo
ss
push
cli
in
pop
sub
hlt
jp
mov
xlat
lret
fisubs
lds
jbe
ret
push
mov
fbstp
icebp
mov
and
jnp
jle
jecxz
jne
xor
push
sbb
into
adc
cmpsl
push
icebp
add
pop
sub
jle
inc
sbb
add
push
add
pop
mov
pop
aam
jp
stos
and
adc
add
add
notb
stos
push
fmuls
and
push
cmp
sbb
mov
sub
xchg
and
sub
subb
inc
ret
inc
fcoml
cmp
mov
add
fcoms
call
jb
sub
and
jl
mov
inc
mov
testb
xor
dec
push
pop
test
add
xlat
in
js
cmp
lods
std
ds
clc
cmp
add
icebp
rorl
test
push
and
nop
and
popa
cltd
add
fdivrl
stc
loopne
mov
js
or
mov
sbb
cld
out
add
sti
pop
cmp
jno
add
mov
into
hlt
lock
add
sbb
add
mov
xchg
add
push
inc
adc
inc
js
cmpsl
rol
dec
into
mov
jle
fcoml
inc
sub
leave
pop
sbb
ret
fimuls
inc
hlt
jo
sub
cmp
fstpt
test
pop
cli
je
data16
dec
adc
push
sbb
jle
flds
xor
jno
pop
push
js
das
push
sbb
and
sbb
xor
cwtl
loop
rcl
jb
sbb
jg
mov
fadds
add
inc
ja
jle
push
fsubs
inc
stc
sbb
or
push
cwtl
jg
call
pcmpgtb
xor
cmpsl
xor
hlt
fbstp
out
lds
pop
ds
jecxz
mov
inc
xorb
inc
push
rolb
add
aam
jns
orl
ret
xor
push
cwtl
mov
mov
into
stc
xchg
fbstp
or
int
outsb
xchg
add
jge
jae
add
add
dec
inc
sbb
pop
into
pusha
jnp
loopne
in
jbe
mov
xor
icebp
fists
add
jmp
pusha
repnz
sbb
fs
daa
jae
add
pop
jo
mov
pop
icebp
adc
jmp
js
sar
mov
mov
movsl
sbb
add
adc
push
push
jae
movl
clc
or
push
aam
pop
add
pop
in
ljmp
jb
jbe
mov
or
add
and
ds
add
aam
xor
cmpl
and
sbb
stc
outsb
xchg
sbb
ret
out
cld
add
lret
cs
scas
mov
or
js
pop
jg
add
addr16
stc
shll
test
ja
add
data16
pusha
xchg
aam
add
repnz
ja
shll
lahf
or
add
or
sbb
xchg
jo
icebp
add
stos
loop
xchg
mov
jns
add
or
mov
jle
jecxz
mov
adc
cmp
push
pusha
add
push
or
cmp
adc
add
je
adc
test
mov
cs
pop
mov
cmpsl
punpckhdq
push
shll
inc
scas
in
mov
clc
andnps
mov
cld
add
mov
mov
push
or
push
loopne
xchg
add
push
ss
jle
into
addr16
lock
xlat
mov
or
orl
shlb
xor
sbb
scas
subl
jge
sahf
xchg
lods
sbb
iret
loop
add
xor
mov
mov
stmxcsr
gs
xor
es
mul
add
mov
roll
in
jle
lods
sbb
add
cli
mov
ljmp
and
xchg
outsl
cmp
jg
rcrl
add
mov
rclb
push
pop
je
cltd
xchg
rorl
jns
add
push
inc
aam
incl
pop
in
out
sarb
test
dec
adc
mov
shll
cli
movsb
or
imul
out
inc
mov
lods
add
divb
mov
cmp
or
push
xchg
xor
sbb
pushf
mov
inc
pop
lock
test
sbb
clc
icebp
iret
jmp
loop
imul
add
push
lahf
xor
ss
and
outsb
adc
ror
in
push
mov
loopne
xlat
pop
movsl
jns
jmp
out
cmp
loop
pop
jl
add
ret
pop
pop
scas
mov
jle
dec
add
sbb
jne
add
xlat
addr16
mov
cld
lcall
cmp
adcb
push
imul
or
jb
mov
and
ss
int3
add
jmp
shr
leave
jl
add
into
aad
sti
push
xchg
jge
scas
mov
push
mov
or
and
sahf
sbb
sbb
push
mov
loopne
fwait
pop
les
xchg
push
jp
cwtl
jo
imul
in
sbb
push
and
jb
popa
data16
jno
jp
push
insl
mov
cmp
add
pop
mov
ror
hlt
jp
push
inc
cmp
movsb
inc
push
fnstcw
add
mov
mov
jle
xor
xchg
cmpsb
addb
mov
fdivs
arpl
aad
xchg
nop
not
fcompl
paddsw
lods
test
aam
jo
sahf
add
sub
xchg
insb
mov
sbb
jne
and
sub
in
sbb
add
fsts
add
aad
add
fcoml
sbb
aas
add
xor
icebp
inc
mov
inc
sbb
inc
add
sub
add
lcall
fstl
push
inc
js
enter
jno
sub
push
inc
fists
les
leave
std
test
call
mov
mov
js
add
xchg
adc
int3
fsubrs
cli
mov
xchg
dec
loop
add
roll
rcl
pop
push
add
add
pop
pop
inc
iret
in
mov
xchg
dec
sahf
mov
es
mov
arpl
and
dec
jmp
sbb
pop
std
xorb
xchg
jne
jns
add
inc
sahf
sarb
push
mov
add
and
add
popf
jg
mov
add
jge
sti
inc
and
inc
add
push
add
xor
aad
mov
jg
icebp
mov
in
add
or
icebp
and
rolb
pop
sahf
push
add
test
insb
xor
jmp
mov
rorb
addb
mov
pop
out
sahf
js
add
xor
div
pusha
xor
pop
xchg
xlat
loope
aas
mov
xchg
add
pop
xchg
loop
dec
loopne
dec
mov
ret
push
cmp
add
xchg
add
iret
inc
bound
jg
aaa
out
nop
outsl
fmull
sbb
shll
pop
inc
xor
rorb
test
jp
dec
pop
push
add
xchg
adc
aas
push
repnz
mov
es
scas
dec
pusha
xor
dec
inc
enter
outsl
pop
dec
cld
data16
sbb
notb
mov
add
mov
ljmp
out
xchg
add
sub
add
jbe
sahf
push
outsl
sbb
xchg
imul
inc
inc
cmp
push
frstpm(287
hlt
lods
enter
fwait
aaa
shlb
pop
in
cmovnp
int
movb
adc
ret
cmp
lods
mov
dec
sbb
icebp
pop
xchg
jo
push
jmp
sbb
sti
jne
cmp
arpl
inc
aad
mov
mov
sbb
mov
cmp
repz
add
adc
stc
call
or
and
dec
mov
fimull
movsl
add
push
fsubrl
push
pop
cmc
jns
add
or
or
lret
mov
push
addl
sti
jmp
add
loop
outsl
imul
mov
lock
pop
lock
add
mov
push
rolb
inc
roll
add
test
sub
jg
movsl
add
stc
add
clc
dec
sbb
out
or
inc
add
mov
lods
dec
rolb
inc
mov
test
shl
mov
fnstcw
add
mov
jbe
add
mov
xchg
and
push
add
loopne
out
insl
pop
mov
xchg
jne
adc
aas
push
cmp
jns
sbb
adc
inc
lcall
shll
pop
les
mov
mov
gs
mov
loope
sub
jae
add
cmp
pusha
xchg
xorb
push
pop
test
lock
add
mov
xlat
mov
sbb
pop
loop
in
ror
or
xor
inc
fwait
jae
or
hlt
add
adc
push
lcall
push
push
outsl
loope
loopne
add
inc
ret
cmp
add
xchg
push
lret
insb
sbb
mov
call
xor
in
add
leave
mov
iret
lahf
addl
mov
xchg
cld
test
outsb
xchg
fimuls
add
aas
push
mov
jle
fcomps
xorb
jo
test
mov
mov
rcll
loopne
dec
add
int
mov
test
push
outsb
jg
add
insl
js
add
mov
rclb
push
imul
pop
mov
add
ja
sti
xor
in
dec
add
cwtl
in
adc
pop
add
sbb
ljmp
data16
clc
stc
test
xadd
les
into
divb
and
mov
cmp
or
or
jp
add
sbb
imul
mov
out
jns
mov
aas
and
and
out
xorb
cmpsl
lods
ss
inc
incl
pushf
mov
fwait
pusha
add
ret
rcrb
mov
mov
or
clc
cmp
mov
sub
pop
mov
adc
mov
pusha
cwtl
mov
loopne
and
nop
inc
dec
add
sahf
je
roll
daa
cmp
out
popl
jmp
inc
fnsave
pop
cld
cmp
dec
mov
inc
mov
lock
xor
hlt
cmp
lret
or
cltd
jl
idivl
aas
sub
add
jnp
or
imul
cld
mov
add
out
xlat
cmp
popl
mov
loopne
pusha
cs
adc
add
cmp
jl
in
add
sub
xor
dec
sbb
jno
arpl
jo
cltd
mov
pop
add
mov
sbb
cmc
cmp
add
cmp
jb
popa
mov
outsb
add
jns
icebp
stos
inc
add
fldenv
bnd
adc
lods
in
add
jne
dec
jecxz
and
loope
push
xchg
and
jbe
push
adc
imul
cwtl
and
add
inc
add
fs
pop
jae
pop
push
pop
adc
dec
aad
inc
jmp
cmp
je
xor
lock
add
ljmp
outsl
add
mov
cmp
repz
cltd
cmpb
loopne
add
jmp
testl
xor
jo
lods
add
or
in
stc
inc
push
and
scas
int
xlat
adc
and
sub
hlt
jb
xor
jae
dec
es
outsb
dec
cmp
ret
mov
pop
dec
add
js
das
faddl
and
movsl
addb
je
or
repnz
adc
es
lods
faddp
jo
frndint
xlat
xor
loopne
or
lret
push
lahf
idivl
fbstp
add
sarl
movsbl
hlt
call
xor
pusha
das
sbbb
scas
mov
jno
xchg
fsubrl
stos
inc
test
dec
enter
cltd
addb
mov
adc
arpl
xchg
inc
mov
jle
xchg
push
add
cltd
inc
es
lret
lcall
add
pop
and
mov
cwtl
and
stos
push
or
test
loope
andb
and
cwtl
sub
mov
mov
add
mov
cmp
add
jmp
dec
add
and
add
mov
xor
dec
enter
les
test
in
andnps
mov
test
add
cwtl
pop
pop
out
push
clc
push
add
and
push
xchg
add
faddl
hlt
ja
arpl
cltd
mov
mov
lea
ja
cld
popa
lods
inc
aaa
arpl
add
lret
sbb
icebp
push
mov
push
aad
jmp
out
push
cmpl
out
stos
hlt
and
int
shll
sub
mov
pop
movnti
sub
lret
add
dec
sub
jl
and
ficomps
out
add
and
sub
sub
aaa
add
daa
mov
cmp
loop
mov
xlat
rorb
cli
sub
cmp
loope
loopne
pop
icebp
out
add
xchg
or
cmpb
jo
mov
and
loop,pn
add
addb
xchg
and
mov
adc
mov
add
sub
test
add
inc
add
fstpl
sbb
call
add
leave
movsl
or
aad
sbb
sti
js
and
roll
mov
xchg
add
outsb
ret
lahf
in
je
pop
fs
movsl
addr16
xchg
mov
mov
mov
pusha
mov
sbb
add
negb
add
mov
or
xchg
cmp
fs
addr16
add
dec
mov
fidivs
add
iret
test
mov
fdivr
or
cmpsl
or
dec
add
ljmp
loop
dec
loope
jo
adc
sahf
lock
lret
jge
add
out
test
repnz
lock
add
stos
stc
push
fcoms
sub
clc
lods
testl
aad
push
out
sub
mov
add
imul
dec
push
or
dec
jmp
mov
jl
mov
mov
scas
cwtl
push
imul
hlt
punpckldq
xchg
add
filds
mov
jl
sub
hlt
mov
std
adc
mov
in
add
pusha
add
xor
stos
insl
mov
push
adc
loop
clc
sbb
mov
rorb
imul
mov
ficompl
out
add
mov
inc
xchg
pop
jp
add
test
dec
add
loop
pop
sub
mov
push
outsb
jecxz
sbbb
xor
lret
or
push
adc
add
adc
testb
mov
aam
insl
dec
inc
xor
sub
fsts
push
sarb
add
mov
stos
inc
repnz
sub
jle
nop
lcall
test
mov
jnp
sahf
pop
and
je
sbb
dec
arpl
inc
shlb
jge
xchg
repz
mov
jns
cmpsl
add
sbb
lret
pusha
inc
shll
fisttpll
jns
fldenv
ja
mov
sarl
cmp
in
xor
aam
jae
iret
add
inc
pop
adc
mov
and
xchg
xchg
lret
test
nop
pusha
dec
mov
fdivrl
sbbb
rolb
unpcklps
xchg
std
outsb
add
add
or
outsl
push
jecxz
mov
add
pushf
or
jne
cmpl
xchg
add
scas
adc
add
aam
call
mov
inc
jg
mov
cli
mov
xchg
mov
mov
cmpsl
jae
fdivrp
and
incl
cld
pop
xchg
mov
mov
xchg
pop
mov
add
mov
int3
in
outsb
ficompl
push
les
fwait
call
js
dec
pop
sbb
in
pop
mov
cltd
sbb
jge
xchg
loope
loopne
ficomps
push
xchg
ret
adc
js
add
push
or
jns
loop
dec
stos
mov
lret
mov
xchg
and
es
loope
addb
addb
rorl
mov
dec
jbe
iret
mov
mov
cmp
sti
arpl
arpl
call
ja
inc
movb
subb
mov
out
jl
pop
bnd
add
mov
add
cmp
and
pop
sahf
or
xor
pop
add
lods
mov
dec
mov
addl
fldt
add
jle
pop
xrelease
add
call
pop
mov
jg
or
popa
nop
push
inc
mov
lds
sub
cmpsl
push
inc
test
cmp
adc
and
mov
mov
add
mov
xor
add
jb
int3
push
lcall
gs
popf
aad
add
mov
mov
and
lods
xorl
pop
xor
outsl
cmp
shlb
sbbb
fdivrp
iret
insl
adc
cwtl
adc
xchg
fsubrl
mov
cmp
pop
jbe
sbb
sub
jg
popa
mov
dec
es
xchg
jb
xchg
mov
shl
das
outsb
add
mov
shll
cmp
add
and
or
hlt
xlat
pop
inc
mov
stc
mov
fwait
js
add
aad
movsb
lahf
es
pshufw
repnz
xchg
in
stc
and
sti
mov
adc
push
sbb
and
xchg
pop
inc
ror
dec
lahf
in
jo
nop
dec
mov
aad
sub
adc
mov
jno
sti
sbb
push
dec
inc
ds
adc
cmp
std
add
mov
mov
jle
popf
mov
push
jo
sahf
push
mov
mov
jb
ds
or
mov
sbb
or
hlt
adc
xchg
sub
movsl
mov
cmp
sub
xchg
or
or
add
push
lret
lods
push
out
push
adc
sbb
ds
and
add
inc
fnstcw
ljmp
mov
gs
dec
or
cltd
pushf
sub
loope
xchg
pushf
mov
pop
test
das
negb
gs
mov
mov
jb
shr
add
sbb
js
lret
lods
rorb
cld
arpl
dec
jae
clc
adcb
jnp
mov
add
sbb
loope
aam
and
fwait
in
xchg
dec
adc
dec
test
adc
lahf
or
sub
ljmp
xchg
add
xlat
jge
cmpsb
dec
aad
add
push
inc
lock
inc
leave
add
or
add
cmpsb
cmpsl
pop
mov
inc
xchg
insl
inc
fcoml
hlt
add
inc
ss
push
repz
add
add
mov
lock
push
test
add
sbb
enter
lea
sbb
mov
in
push
loop
movsb
cmp
mov
dec
add
sub
jmp
int
shlb
add
inc
call
ljmp
hlt
add
shrb
les
lahf
shl
pop
mov
sub
mov
dec
xor
lock
fwait
cmc
add
cmp
imul
shlb
test
add
das
call
lcall
inc
clc
inc
or
nop
orb
xchg
repz
cwtl
das
add
inc
out
out
ret
movsl
jg
jge
cmp
popa
push
in
and
loopne
stos
shrl
js
jns
pop
sub
inc
cwtl
loopne
test
in
add
pop
jp
add
lret
xor
add
pop
xchg
adc
test
jg
fstpl
add
es
sbb
jne
add
mov
negl
jo
sti
movsl
das
vprotq
lea
or
shll
add
inc
jb
dec
ds
add
adc
add
idivb
in
jns
cmp
sbb
push
mov
inc
fs
push
xor
and
enter
test
imul
mov
pop
popl
mov
cmp
and
cmp
movsb
jge
lods
cwtl
push
adc
imul
push
mov
in
lret
add
in
fs
xlat
inc
xchg
pop
add
xchg
into
push
repnz
adc
std
lods
hlt
add
and
or
mov
push
int3
out
rcl
cmp
pop
add
addl
xchg
das
adc
pop
mov
int
mov
cmp
adc
jmp
push
mov
shll
dec
sbb
xor
movsl
movsb
les
stos
mov
mov
push
pop
add
insl
push
jns
ror
mov
pusha
sti
testb
mov
jbe
loop
lods
add
xchg
sbb
push
fdivs
add
jecxz
ds
adc
sbb
jne
push
add
inc
addr16
std
xchg
mov
pop
jmp
xorb
adc
inc
jae
adcb
std
cltd
inc
into
mov
bound
ret
push
scas
inc
pop
fnstsw
fdivrs
shlb
or
cmpsl
add
push
mov
icebp
add
jl
push
add
pushf
out
and
clc
out
xchg
xor
and
inc
cmp
mov
lods
aaa
cmpsb
sbb
mov
jbe
push
shll
mov
pop
pop
inc
lcall
pop
add
mov
stos
int
nop
add
popa
stc
js
testb
dec
pop
dec
pop
in
inc
dec
xchg
dec
es
add
add
cmp
jecxz
test
fwait
adc
add
cmp
sbb
repz
cmp
add
mov
sub
fidivs
scas
cmp
jbe
int
movsl
je
lods
mov
xor
jge
mov
cmp
shl
outsl
outsb
and
dec
mov
mov
push
push
push
roll
pushf
popf
xchg
adc
xchg
push
test
xchg
dec
add
jle
mov
je
and
inc
pusha
add
nop
push
mov
adc
enter
pop
add
fldl
bound
ror
and
add
dec
xchg
pop
cmp
ds
std
mov
add
push
add
and
adcl
roll
out
sub
add
adc
mov
xor
add
outsl
or
std
push
add
testl
daa
xchg
push
xlat
xor
cmp
jp
repnz
loopne
xchg
popa
lods
sbb
dec
sbb
xor
add
mov
dec
or
clc
repz
aad
push
gs
sbb
mov
and
clc
or
add
jo
cmp
and
adc
dec
or
jno
test
jb
aad
cltd
xor
mov
xchg
enter
cmp
cli
pop
fmull
and
cmp
int3
cli
js
mov
lahf
jge
add
inc
das
ror
xor
popa
mov
mov
out
push
adc
pop
notl
and
lods
xor
mov
popa
or
lret
add
sbbl
xchg
adc
sarb
jbe
xchg
fcmovu
jp
sub
out
les
pop
inc
repz
mov
xchg
pop
pop
or
inc
popa
nop
daa
repnz
add
adc
inc
add
aaa
pop
push
notl
push
out
inc
jo
pop
xor
xor
lcall
hlt
data16
dec
mov
rcrl
addl
out
data16
mov
inc
movsb
insl
hlt
push
add
inc
dec
lock
pop
pop
mov
mov
in
scas
push
movsl
enter
dec
mov
in
test
add
ljmp
inc
xor
adc
inc
add
cwtl
ficoml
add
add
in
daa
jo
adc
adc
and
ds
lahf
push
cmp
mov
inc
add
repnz
xor
or
lds
js
add
fcmovnu
push
cltd
sahf
cld
in
add
inc
out
adc
or
sbb
and
insb
sbb
mov
test
movsl
mov
xchg
add
data16
pop
int3
jno
dec
pushf
subb
jl
or
adc
sbb
out
adc
or
cmp
add
mov
das
mov
mov
and
jno
clc
test
flds
nop
pushf
mov
cmp
fcom
insb
or
inc
mov
les
out
stos
add
mov
add
orl
add
xor
jns
clc
stos
add
and
add
sbb
jns
and
shll
cmc
aas
arpl
mov
inc
add
mov
pop
xor
mov
xchg
fs
test
inc
push
rorb
push
push
sti
push
xor
pop
dec
cmp
cmp
addr16
xor
add
jl
inc
mov
cmp
sub
in
push
sub
and
cltd
and
enter
jns
jb
add
leave
mov
mov
lock
add
out
cmp
and
mov
icebp
shlb
dec
fwait
sbb
add
mov
out
pop
int3
bound
pop
sub
ja
fwait
pop
dec
xchg
ds
jl
inc
push
add
ret
jno
enter
test
mov
push
outsl
push
iret
dec
adc
mov
mov
shlb
gs
push
mov
add
jne
inc
scas
jo
adc
xor
pop
pop
push
nop
cmp
mov
xchg
jb
add
imul
jbe
cmpsl
xor
aas
xor
push
inc
pop
push
pop
clc
add
or
mov
rorb
sbb
push
outsb
decl
mov
jecxz
and
add
pop
xchg
or
in
sub
in
pop
hlt
nop
xchg
bound
out
add
pop
int
fldl
cmp
fdivrl
mov
xor
jge
cmp
add
frstor
add
and
add
jno
jns
pusha
add
adc
icebp
sub
jg
dec
jb
sub
add
sub
cvtpi2ps
xchg
outsb
jae
in
loop
stos
rcll
xor
pop
inc
gs
mov
mulb
movsl
loop
add
push
xor
sbb
jo
xchg
mov
outsl
add
sub
lret
add
adc
cld
push
pop
push
lock
add
stos
cltd
mov
sbb
xchg
lock
mov
sub
cli
sarb
or
aam
jae
inc
int
or
aad
imul
and
xchg
jo
mov
test
cmp
flds
pop
lock
add
mov
mov
or
add
cmp
xchg
insb
je
test
add
or
lahf
or
enter
adc
adc
iret
lds
jmp
loopne
out
or
push
add
call
aas
add
xor
push
xor
test
xor
and
inc
cmp
xchg
icebp
sbb
testb
jmp
test
ret
cmpsl
add
aad
inc
xor
mov
or
xorb
sub
fstpt
add
sub
add
add
push
jmp
jge
das
sbb
mov
or
push
ror
out
and
adc
mov
sub
inc
leave
cmc
pushf
add
shl
data16
hlt
sbb
add
xchg
mov
aaa
call
icebp
add
mov
sub
xlat
xor
clc
xor
in
push
push
or
aas
jmp
cmp
aaa
push
cmpsl
inc
add
cmp
ret
arpl
jae
adc
push
rcl
sub
or
aam
jne
out
clc
dec
fwait
sbb
ret
stos
xor
pop
loop
xchg
add
mov
cmp
in
cwtl
and
cmp
repnz
add
mov
xor
inc
scas
iret
push
dec
hlt
movups
out
pusha
ror
sbb
leave
cmp
pop
add
push
lea
pop
jns
add
addr16
add
arpl
mov
add
mov
sti
outsl
jle
xor
push
fwait
xor
add
mov
push
mov
mov
and
cmp
pop
rorl
sub
aad
fstl
inc
and
jae
lods
add
adc
or
mov
fcmovnu
data16
add
les
mov
fs
rorb
adc
cmp
mov
nop
loopne
pop
cltd
and
add
js
push
inc
xor
add
sbb
setns
mov
pop
add
andl
cmovo
test
add
xchg
out
cmpsb
add
or
jge
pop
mov
daa
inc
jo
insb
mov
mov
bound
unpckhps
jp
sbb
or
pop
push
mov
fdivs
jecxz
loop
movsl
adc
lods
in
nop
call
das
pop
xor
pushf
out
add
sbb
adc
inc
enter
pop
pop
jge
mov
cltd
rclb
ret
repz
ret
and
imul
pop
fcoml
xor
add
enter
xorl
and
add
aas
jmp
pop
xchg
xchg
or
hlt
fnstcw
add
mov
fdivrl
mov
inc
xchg
add
icebp
ror
bound
test
cmp
in
cmp
sbb
je
add
cld
addl
pop
xchg
fldl
pop
popf
xor
js
jge
dec
loopne
sub
leave
sbb
dec
test
out
xchg
js,pt
pextrw
cmp
push
xor
mov
loopne
mov
aaa
xor
pop
sbb
gs
les
xchg
xor
inc
insl
in
xor
fldl
and
cmp
dec
aad
add
push
popa
fldcw
dec
add
frstor
mov
data16
xchg
out
test
cld
dec
into
add
cmp
lahf
subb
pop
mov
in
sub
and
cmp
mov
test
pop
xchg
inc
push
loope
pop
push
loopne
loopne
out
outsl
xlat
add
jmp
sbbl
inc
sub
push
cmp
adc
in
adc
push
pop
and
mov
ds
pop
mov
sbb
jns
aas
cwtl
mov
push
push
cs
repnz
mov
sub
sbb
xchg
lret
lock
mov
jb
mov
push
enter
ds
aam
ret
pusha
es
lret
jb
add
das
add
push
xor
pushf
mov
pop
xor
addl
mov
pop
jecxz
cmp
shlb
sahf
add
sub
imulb
test
or
inc
add
dec
ds
or
mov
xor
lock
xor
dec
insl
add
leave
sti
jns
add
and
out
xlat
add
push
daa
addb
test
and
sbb
mov
push
and
xlat
sub
fidivs
add
add
outsb
mov
out
xlat
inc
fldt
shlb
mov
aaa
push
and
add
push
dec
or
add
xchg
pop
jns
push
fs
lea
mov
mov
shr
mov
xor
stos
jmp
pop
mov
mov
jle
fnstenv
push
add
dec
lret
shl
je
and
cmp
xchg
inc
rorb
mov
push
ss
add
cld
daa
roll
mov
es
loopne
lahf
add
jns
add
lods
mov
push
or
adc
test
sbb
xor
loopne
sbb
add
sbb
xchg
or
add
jle
lea
ljmp
jg
and
scas
cmp
xchg
or
push
insb
mov
and
mov
and
scas
jge
test
enter
sahf
sbb
aad
pop
gs
dec
mov
jg
movsl
sahf
and
push
out
add
add
jo
ror
mov
out
daa
cltd
mov
notl
bound
aas
adc
inc
add
jge
jnp
or
sahf
shll
inc
xor
jle
cmp
cwtl
push
ljmp
loop
out
add
adc
cli
mov
out
dec
daa
add
mull
stos
xor
or
stc
inc
inc
push
cmp
add
fsubl
call
cmpb
jbe
mov
repnz
imul
cwtl
add
ja
adc
cmp
jo
je
popf
push
add
mov
lock
add
jg
jns
xchg
dec
cmpb
cmp
dec
int3
mov
ret
inc
add
nop
or
sub
cmp
add
scas
je
push
popf
shll
hlt
pop
les
in
mov
shlb
push
das
add
ja
lds
cmp
jne
pop
dec
movsb
test
js
or
or
cli
jp
adc
clc
mov
xchg
add
repnz
add
push
sar
ja
fdivl
push
mov
xor
add
inc
test
cmp
ds
insb
cmc
mov
clc
or
adcb
sbb
mov
add
pop
dec
push
in
imul
push
stc
out
and
xchg
pop
add
fdivrs
stc
xor
xchg
inc
push
pop
popf
add
or
mov
divl
add
pop
inc
cld
xor
inc
add
and
movsb
mov
pop
je
inc
cmp
test
lock
mov
scas
jb
sbb
push
das
xlat
sub
pusha
add
jmp
popf
cltd
add
dec
iret
scas
shll
or
test
and
fldt
adc
sbb
mov
add
jb
and
xor
jbe
ja
sbb
mov
push
add
mov
cmpsl
jae
mov
arpl
test
add
ljmp
inc
sbb
in
repz
cwtl
mov
add
cmp
rcrl
adc
mull
movsb
add
lods
xor
daa
outsb
or
or
shlb
rcrl
in
jmp
jnp
mov
adcb
xor
aas
cmpsb
enter
cmpsb
mov
cmp
or
add
icebp
lods
adc
das
cmc
scas
dec
cwtl
js
add
aaa
xor
inc
mov
sub
pusha
ljmp
insl
sbb
std
add
das
dec
movsb
add
push
push
loope
lods
adc
imul
xor
push
push
jbe
sbb
je
jle
add
xorb
imul
lret
leave
jecxz
jmp
stos
dec
loope
adc
adc
jp
add
faddl
rcrl
pop
sbb
push
push
add
dec
dec
cld
loopne
mov
add
leave
scas
fists
xchg
jo
cmp
push
mov
roll
call
int3
push
cmp
sub
jns
or
xchg
pop
mov
pop
fadds
dec
int3
sti
out
popf
pop
xor
andb
int
jge
jecxz
cltd
ljmp
add
pop
inc
icebp
dec
sbb
add
aam
enter
in
xor
ret
lret
jns
test
xorb
std
jle
or
adc
mov
into
add
test
inc
inc
mov
cmp
jne
inc
add
imul
push
lret
icebp
push
xchg
call
lea
add
jns
xor
dec
xchg
sub
dec
push
adc
mov
data16
add
inc
dec
scas
sysexit
dec
iret
sub
or
loop
mov
xchg
nop
js
mov
jns
pusha
pop
pop
xchg
std
lock
dec
rcll
and
sarl
into
fbstp
notb
add
stos
adc
mov
shrb
xor
push
add
cmp
push
es
dec
jno
dec
inc
inc
add
icebp
or
mov
and
psrlw
ds
pop
push
lock
dec
dec
dec
pcmpgtd
push
push
gs
incl
adc
fs
dec
push
adc
or
xor
inc
pusha
fimull
dec
das
or
sahf
xor
neg
ret
push
ret
push
aam
pop
lods
call
add
out
add
test
add
adc
sbb
inc
outsl
push
cli
push
xchg
shll
das
out
xor
mov
sub
or
aam
das
sbb
cmpsb
xchg
sub
sbb
out
xchg
inc
out
xchg
push
lods
mov
cmpsb
repz
jmp
dec
cltd
add
aas
dec
or
mov
aam
add
adc
inc
pop
push
nop
out
sbb
xchg
inc
inc
icebp
jno
ja
add
jl
lret
ss
addb
loop
mov
je
add
xor
xor
mov
xor
int3
mov
pop
mov
add
in
cmpsb
push
movsb
loopne
xor
mov
test
scas
push
sar
out
jne
add
push
sbb
add
push
add
add
xchg
adc
pop
fucomp
in
ret
nop
mov
mov
repz
out
adc
sub
fcomps
sub
fs
cs
shl
xchg
fldl
sbb
adc
sbbb
js
push
pop
pop
inc
arpl
xchg
popa
lret
sar
aam
add
cli
inc
mov
fadds
dec
dec
mov
fstps
imul
gs
lock
push
sbb
dec
rol
mov
shl
xor
inc
cmpsl
push
inc
imul
add
mov
xchg
mov
sub
add
icebp
fucom
xchg
lea
xchg
xor
adcl
out
stos
dec
rorb
das
addr16
shll
jecxz
fisttpl
paddusw
daa
testb
and
lods
add
sub
scas
cs
fcoms
lods
or
je
or
and
inc
das
xchg
cltd
add
nop
fadds
insb
add
mov
sub
test
lahf
subb
and
xchg
cs
or
adc
imul
add
movsl
gs
add
mov
add
xor
add
mov
pop
add
in
mov
enter
pop
push
push
outsl
call
add
in
or
test
add
popa
push
nop
std
add
xor
mov
and
fmull
lar
adc
in
dec
xchg
inc
movb
add
dec
test
sub
push
sbb
les
in
add
jnp
lret
push
nop
dec
add
repz
xchg
sub
cwtl
pop
mov
js
cmp
xchg
mov
add
dec
xchg
dec
test
xlat
mov
xor
add
cmp
push
xor
add
xchg
jge
pop
add
data16
cmp
xchg
xchg
out
mov
cmp
popa
jmp
mov
loope
xor
and
pop
aad
lock
je
nop
notl
jmp
cld
nop
push
mov
sub
or
inc
mov
push
and
arpl
and
and
jl
cltd
inc
jae
xchg
adc
enter
mov
mov
shl
cli
test
cmp
or
es
add
inc
fsubrl
pop
add
xor
ja
sub
jg
xchg
inc
clc
add
cmpsb
mov
stos
ret
jo
add
xchg
es
xchg
xchg
adc
mov
xchg
into
pop
jb
add
ud1
add
or
lock
add
and
dec
pop
sti
testb
add
aas
je
out
loope
arpl
add
sti
inc
mov
dec
das
pop
pushf
mov
mov
cmp
test
js
sbb
dec
cmp
jo
sbb
cmp
xchg
mov
aam
xchg
lods
inc
aad
push
sub
lock
leave
add
and
clc
sti
mov
add
addb
add
pop
dec
adc
or
cmp
cmp
fildl
test
push
out
sbb
xor
cmp
pop
movsb
pusha
xchg
mov
imul
ds
js
mov
cmp
jns
inc
mov
mov
int
add
mov
dec
adc
es
and
rolb
pop
mov
imul
outsl
call
mov
pop
loopne
inc
movsl
add
add
pop
inc
in
arpl
aas
and
je
inc
pop
sbb
test
insb
xorl
xorb
sub
mov
frstor
inc
jg
sbb
xchg
addb
pop
pop
ja
or
xchg
and
testl
loop
repnz
jo
inc
inc
sbb
mov
mov
xchg
xor
xchg
rolb
out
mov
push
fstpt
pop
lods
sbb
sbb
or
outsl
lcall
add
xor
add
pusha
mov
je
arpl
jle
add
insb
test
leave
jge
dec
lock
cli
add
inc
push
test
das
or
arpl
lods
insb
sub
nop
xchg
inc
rolb
mov
call
xor
add
push
adc
push
push
jnp
mov
orb
mov
sub
xchg
lahf
or
or
sbb
add
cld
xchg
rcr
xchg
add
orb
add
lahf
scas
dec
and
mov
pop
bound
sbb
or
or
scas
sub
roll
shlb
add
jp
jge
add
ss
jp
dec
call
sbb
test
stos
adc
xchg
icebp
je
jns
mov
add
dec
cmp
push
test
aam
pop
cmp
sub
and
pop
lock
and
push
and
ret
jle
add
aas
add
sbb
in
psubusw
cmp
pop
and
gs
jle
add
loopne
out
xor
xor
into
pop
xchg
mov
sbb
ja
sbb
stc
testb
cltd
stos
mov
mov
sahf
add
sub
iret
out
lds
test
mov
jnp
dec
jo
jno
pusha
mov
or
pop
push
out
in
lock
ljmp
cmpl
loope
insb
fstps
add
mov
ss
pop
mov
or
int
repnz
imul
aad
add
call
fwait
out
sub
cli
jbe
in
xlat
in
pop
scas
add
mov
imul
pop
cmpsb
add
aaa
pop
mov
subl
xchg
les
mov
xor
outsb
cmpl
xchg
or
cld
mov
pushf
push
test
scas
in
cmp
repz
sbb
add
enter
push
cmpsl
add
mov
pusha
jle
sbb
xchg
das
mov
mov
gs
repz
jo
mov
rorl
scas
insl
cmp
and
lahf
add
scas
mov
mull
mov
pop
jnp
shlb
lahf
cltd
pusha
pcmpgtb
sti
in
fsubrs
lds
add
sbb
je
addr16
add
nop
inc
loopne
mov
add
push
out
add
push
out
and
jo
rorb
roll
or
dec
mov
add
add
inc
cmpb
and
loopne
adc
dec
cmp
xchg
cmc
hlt
push
out
add
lcall
mov
call
sbb
mov
incl
rcrb
xchg
dec
out
orl
pusha
xchg
data16
std
mov
sbb
jnp
mov
clc
xchg
dec
mov
pop
movsb
arpl
or
pop
and
divl
jmp
add
xchg
add
ljmp
or
inc
lcall
xchg
push
add
outsb
fnstcw
ret
pop
repnz
subb
std
mov
cmpb
out
push
inc
pop
add
jp
and
enter
adc
sub
lods
gs
adcb
push
push
pusha
daa
mov
add
mov
popf
add
push
pusha
roll
mov
mov
push
cmp
sahf
mov
xchg
aas
sub
sub
mov
cmp
lret
cmpb
rcrl
sbb
jle
out
add
mov
arpl
mov
xor
add
iret
inc
addb
je
incl
add
push
outsb
mov
xor
pushf
or
pop
fcmovb
data16
scas
add
outsb
dec
adc
adc
pop
es
ficompl
loopne
add
mov
and
add
scas
mov
push
shll
lret
mov
scas
jns
push
insb
inc
std
repz
and
cmp
mov
sbb
mov
shl
das
mov
enter
add
int3
mov
push
cltd
add
arpl
lock
cmc
stc
push
sub
cmp
add
xchg
dec
rolb
mov
add
aam
test
ds
pushf
insb
xchg
cmpsl
ficoms
lahf
inc
jecxz
sti
mov
dec
add
rcr
inc
and
cmc
add
icebp
lcall
push
enter
rorb
ljmp
not
add
pushf
xchg
enter
inc
fmul
int3
rcll
std
pop
add
jo
aas
jle
push
rcrl
mov
outsl
add
enter
xchg
enter
sbb
add
add
ss
sbb
pop
jmp
add
pop
outsb
aas
sub
aam
fadds
sbb
jb
add
or
xor
movsl
push
sub
scas
adc
xchg
sbb
xchg
jo
inc
jo
jg
sbb
mov
and
fidivrl
mov
in
push
lds
cli
lret
cs
add
sbb
jb
aam
int3
or
and
negl
xor
mov
or
test
add
ljmp
sbb
das
cmpsl
and
cs
and
add
out
gs
fsubs
lds
push
stos
sbb
in
inc
xchg
xor
fcompl
push
add
int
test
decb
cmp
xor
jge
add
mov
sbbl
lock
fadds
orl
xchg
cli
push
andl
sbb
add
push
mov
sbb
stos
daa
add
push
cmp
push
or
movsl
mov
add
xchg
out
jae
shrb
neg
xlat
fidivrl
push
cmp
sbb
decb
sbb
cmp
enter
mov
add
mov
push
lds
mov
cmpl
dec
sbb
pop
aaa
pop
and
ljmp
ret
scas
aas
mov
ror
insb
add
xchg
shl
cmp
add
mov
in
data16
xchg
test
cmp
push
popa
sahf
mov
daa
add
and
test
mov
mov
cmp
mov
mov
fadd
pop
cs
addr16
insl
xor
sbb
add
repnz
jp
and
jno
ret
mov
nop
pop
jle
xor
mov
push
add
push
fiaddl
and
jb
mov
pushf
hlt
dec
sbb
scas
add
push
bound
int3
rolb
cltd
movsb
xchg
sbb
cmp
andl
xor
add
xchg
pushf
add
jmp
mov
jno
inc
call
clc
and
inc
bound
dec
das
push
js
add
dec
add
es
je
sub
iret
add
sbb
pop
mov
ja
add
or
and
dec
add
insl
push
push
mov
mov
test
clc
mov
mul
add
fmull
inc
jno
jecxz
jle
or
push
rcl
xor
add
mov
add
pop
adc
stos
arpl
pop
in
out
adc
cwtl
add
faddp
scas
push
mov
or
inc
aam
xor
int
and
add
out
nop
loopne
stos
notb
jns
mov
pusha
add
and
std
lds
add
repnz
push
xchg
iret
out
gs
jae
loop
adc
sub
shl
pop
inc
out
or
pop
cmp
sbb
push
ljmp
mov
sub
fstpt
nop
add
orl
call
or
add
sub
pop
add
pop
xor
add
dec
rcrb
ret
out
xor
nop
inc
cmp
dec
add
insb
sbb
add
jne
ljmp
and
enter
test
sbb
dec
jns
add
add
jmp
sub
add
push
add
dec
in
mov
pop
mov
mov
sbb
imul
push
push
in
cmp
xchg
push
roll
imul
and
fcmovnu
cmpsl
es
jns
and
imul
sbb
add
fimull
adc
adc
inc
ss
clc
mov
aam
sub
pop
fiaddl
mov
add
mov
pop
mov
in
xor
test
cmp
lret
add
xchg
dec
movd
jecxz
mov
inc
into
outsb
repz
dec
jbe
hlt
and
add
aas
and
insb
out
add
filds
mov
dec
pop
mov
fs
fimuls
insb
pop
inc
leave
adc
pop
and
loopne,pt
dec
das
sub
ret
add
cld
vcvtpd2dq
mov
add
loop
jmp
cmpb
lods
faddl
xor
ds
push
mov
pop
fisubl
add
push
cmp
push
std
jo,pn
lds
cli
cmc
push
iret
and
mov
lahf
add
leave
jno
popf
insb
pop
dec
add
jne
sbb
cmovns
mull
adc
jae
cwtl
cmp
fwait
lahf
xor
test
xor
add
mov
or
popa
mov
fsubr
or
cmp
loope
outsl
in
lret
and
stos
aas
pop
sbb
sbb
andl
or
lret
iret
mov
add
mov
sub
sti
inc
add
cmpsb
ljmp
scas
in
pusha
pop
mov
int
add
leave
mov
add
lods
jecxz
pop
jne
nop
add
mov
sbb
pusha
xchg
xor
add
mov
test
xchg
movsl
add
movaps
sbb
xor
mov
jge
sub
sub
add
cmpsl
or
mov
dec
pop
faddp
into
popf
ss
jb
mov
decb
inc
pop
sub
dec
pop
cld
nop
xor
aam
leave
mov
mov
add
mov
rolb
sti
ja
in
sbb
push
sahf
push
mov
add
sub
in
cmp
adc
add
inc
cwtl
mov
xchg
lods
dec
add
cmp
add
jns
cmpsl
push
lea
fsub
dec
out
xchg
pusha
sti
ret
inc
xor
pop
xor
jb
add
xchg
add
ds
mov
aas
push
and
stos
mov
mov
roll
inc
insb
mov
in
mov
and
jae
loop
imul
xchg
cmp
jl
popf
dec
jmp
jb
sbb
cmp
mov
push
lds
push
loopne
jbe
xchg
sbb
ror
xchg
es
cmp
decb
sub
mov
adc
andl
test
adc
mov
pushl
sub
dec
pop
xor
test
cmp
std
sbb
sti
jo
add
mov
sarl
or
jecxz
xchg
add
cmp
add
dec
mov
jbe
in
pop
add
inc
and
add
test
pop
test
mov
add
sub
lret
sub
out
pop
mov
pusha
cld
sbb
popf
xorl
cmp
add
cltd
mov
hlt
cmp
xor
jmp
mov
jge
mov
das
add
or
xchg
clc
mov
bts
enter
jp
cmp
xor
pushf
add
sahf
nop
scas
dec
jmp
add
ss
adc
int3
sub
jno,pn
in
add
dec
mov
cmp
add
push
push
mov
in
add
movsl
push
lcall
jns
repnz
div
inc
outsl
jne
cmp
pusha
xchg
cmp
mov
add
stos
orb
ret
pop
es
mov
xchg
insl
ja
jle
add
nop
or
in
dec
cld
fisttps
add
pop
sub
xlat
push
stc
fsubrp
gs
lret
inc
mov
add
jge
xchg
add
sbb
add
cwtl
iret
adc
push
movsl
call
jnp
mov
mov
ret
std
xchg
and
sub
mov
sbb
mov
cli
shl
ret
xor
add
pop
testl
mov
dec
aad
call
xor
add
mov
enter
xchg
filds
icebp
pop
inc
ss
push
xorb
insl
bound
push
cld
es
scas
and
add
jne
sub
test
fyl2x
xchg
aas
jno
xor
push
push
inc
pop
rolb
fbld
cwtl
push
into
pop
int3
or
xor
ljmp
daa
pop
and
pop
mov
mov
mov
dec
lea
mov
add
test
and
out
mov
add
fldcw
pop
repz
add
es
add
push
lock
repz
movsl
mov
pop
fmuls
jae
aam
jbe
add
inc
imul
or
dec
xacquire
sbb
inc
sarb
mov
int
mov
mov
pop
mov
lcall
and
dec
loop
add
fwait
aaa
sahf
or
fiadds
add
mov
add
daa
mov
adcl
mov
cmp
lret
push
out
dec
jne
les
sub
add
jmp
xor
add
pop
nop
pop
jb
add
jmp
popa
xlat
int3
or
out
xchg
mov
incb
sub
push
fsub
cmp
jno
cmpb
mov
scas
add
lods
cs
push
inc
add
pop
enter
fsubrl
negb
jbe
add
sbb
subl
jecxz
aas
add
inc
shrl
dec
out
loopne
jbe
adc
add
xor
lea
add
sbb
lcall
add
push
test
test
jp
lock
mov
lret
mov
pop
xchg
mov
jg
jbe
nopl
mov
sbbb
pop
testl
dec
in
cli
popa
add
push
adc
pop
pushf
adc
sbb
or
add
int
dec
xchg
pop
add
jge
fs
psubusb
add
lods
lds
sbb
cmc
jp
icebp
je
add
loope
jnp
push
fimuls
add
or
xor
jle
aad
mov
sbb
std
inc
subb
ds
jbe
dec
pop
popf
mov
sbb
add
xor
pop
add
jmp
sbb
and
cld
xchg
lret
add
dec
ja
aam
daa
and
pusha
js
dec
xor
add
adc
movb
mov
test
ret
jbe
in
mov
arpl
add
fstps
out
shll
add
filds
repnz
pop
into
jle
repnz
rcrl
jg
stos
insb
add
and
pop
cmc
popa
sbb
rcrb
icebp
cmp
sahf
or
dec
add
sbb
stos
and
inc
fwait
xor
sub
jmp
sti
fmuls
mov
jle
loopne
sbbl
sahf
xchg
mov
faddl
mov
or
or
adc
repnz
subb
jno
cmc
and
or
icebp
xchg
hlt
add
cmc
dec
rolb
sub
jnp
into
stos
pop
cwtl
int3
ja
pcmpgtb
mov
clc
sbbb
jne
lods
fisubrl
and
daa
shll
xlat
cli
sbb
aas
add
loopne
cmp
inc
je
and
add
cmpsb
sbb
movsl
inc
adc
or
cmp
ret
imul
int3
mov
add
test
xor
fldenv
scas
je
jg
out
sti
mov
gs
xlat
lds
jae
add
movsb
jno
jb
xchg
push
pop
cwtl
enter
mov
lcall
push
mov
cltd
jg
pop
xchg
mov
imul
cmp
xorb
mov
mov
lock
shlb
ds
lds
in
stos
mov
or
mov
je
ja
int3
popf
xchg
add
jge
inc
add
std
or
add
popa
mov
add
add
jge
stos
sub
jne
inc
aad
pop
add
push
out
or
pusha
sub
shrl
sub
shrb
mov
add
repz
pop
cmp
push
out
mov
jmp
sbb
dec
and
cmp
xchg
pusha
fadds
scas
mov
je
cmp
xor
push
dec
sbb
add
cli
mov
push
repnz
es
jle
pop
scas
fistpll
jae
jmp
lods
pop
lret
add
lock
jnp
mov
add
cltd
add
pop
push
addb
sarb
mov
xchg
lds
out
stos
loopne
adc
and
xchg
pop
es
stos
rol
fadds
mov
clc
shll
cltd
pop
mov
fcmove
push
hlt
orb
lea
mov
mov
daa
cwtl
lcall
jmp
dec
pop
cmpsl
or
in
rolb
jnp
clc
dec
icebp
test
xor
mov
imul
cmpsb
lock
adc
ret
test
cmp
sbbb
or
add
fwait
mov
pop
movsl
add
jp
das
imul
jb
add
jno
lret
add
sub
fnsave
push
arpl
test
insb
into
or
mov
add
inc
imul
mov
mov
xor
mov
cmp
add
jae
filds
stos
push
call
inc
rol
pop
jecxz
or
cmc
add
movsl
adc
jp,pn
pop
sbb
imul
fucompp
mov
bsf
and
enter
popa
cmpsb
aaa
jns
xchg
arpl
shlb
add
ss
add
sub
pushf
lods
loopne
orl
stos
mov
ja
inc
add
jle
or
mov
mov
fs
je
add
pop
push
inc
scas
dec
inc
in
jo
sub
pop
mov
fidivl
shrl
jmp
pop
sbb
out
mov
out
aas
jmp
add
mov
ret
dec
xor
movsl
mov
pop
add
loopne
mov
notb
add
mov
push
pop
and
cmc
ljmp
mov
add
test
rol
mov
pop
filds
xchg
inc
sahf
mov
cmp
mov
sub
imul
mov
movsl
test
adc
mov
or
jbe
enter
dec
fnstenv
jle
add
popa
xchg
mov
push
dec
xor
pop
adc
pop
add
aas
sbb
push
in
fiadds
pop
faddl
sub
inc
add
loopne
pop
add
js
or
mov
aaa
add
jle
movsb
jns
andl
pop
cltd
iret
pop
add
lock
adc
pop
stos
ret
jns
xor
test
scas
add
pop
sbb
test
adc
mov
inc
sub
and
push
movsb
je
sbb
inc
aas
outsb
and
aad
xchg
jmp
pop
and
sarl
push
jl
out
push
rolb
jne
and
cmp
or
cld
push
or
cwtl
out
adc
xor
rcrl
inc
cmp
ss
mov
push
pop
test
loop
xchg
pusha
inc
and
jle
daa
roll
sbb
inc
jbe
jp
ja
add
cmp
rorb
or
inc
imul
adc
in
pusha
mov
sub
inc
ja
mov
mov
enter
jbe
jle
or
lods
sub
adc
adc
xorb
nop
cmp
or
and
les
xchg
paddsw
insb
mov
out
dec
add
imul
in
jge
sahf
pusha
addb
cli
aam
sbb
fisttps
and
jo
loop
scas
mov
adc
jg
push
aad
inc
push
push
cmc
aaa
pop
adc
call
add
lcall
fmul
mov
aad
push
add
mov
xlat
xchg
mov
pop
in
out
aad
sbb
push
jbe
loope
rolb
out
clc
sub
loopne
orb
pusha
lock
cmp
mov
iret
sbb
xor
add
or
sub
add
push
lods
outsb
mov
jnp
cmpsb
add
fwait
pop
popf
shrb
mull
pop
and
call
cmp
fldenv
lea
push
jle
cmp
push
mov
sbb
add
subl
movsl
sbb
addb
lcall
les
add
test
stos
fcompl
rclb
and
in
das
adc
mov
scas
int
mov
aam
xor
mov
shlb
enter
aaa
js
xorb
jo
clc
xor
push
test
decb
push
sarl
sub
add
inc
and
add
xchg
mov
cmc
jno
add
clc
movsb
push
ret
dec
or
cmp
inc
sbbl
adcl
add
sbb
jmp
add
xchg
push
repz
lret
adc
add
mov
fucomp
in
sbb
rorb
inc
sti
add
insl
arpl
cmp
mov
sub
add
pop
leave
imul
js
add
mov
popw
push
add
cmpsb
movsb
sub
jo
pusha
pop
xor
mulb
adc
add
out
add
fdivp
testl
jecxz
xor
dec
mov
add
and
out
fs
xor
jb
stos
ret
aaa
stos
xlat
mov
in
jp,pt
inc
cmc
ja
or
jo
pop
push
rolb
fldenv
add
mov
loopne
add
xchg
push
lods
cmp
pop
sbb
roll
popa
lret
fiaddl
or
jl
enter
dec
or
mov
es
cmc
push
inc
jo
add
pop
ja
add
jno
push
add
ficompl
lods
or
xor
dec
scas
push
add
push
das
add
daa
push
lods
lret
sbb
sbbl
lds
sahf
iret
xlat
adc
add
insl
mov
and
inc
add
aas
or
data16
dec
movsb
push
iret
mov
enter
aas
or
jp
shll
mov
mov
fcoml
repnz
shr
orl
jl
or
adc
fs
rolb
daa
outsb
push
cltd
jae
push
movsb
cmp
nop
add
and
adc
test
jbe
add
xchg
dec
popf
pop
lahf
aas
mov
leave
mov
addr16
and
int3
cmp
add
into
sub
and
pusha
test
add
push
rclb
xor
ret
mov
imul
popa
pop
or
mov
les
and
inc
adcl
repz
push
sbb
inc
sbb
ja
jl
test
flds
inc
add
lock
lcall
xchg
ret
inc
inc
jl
add
mov
call
or
insl
pop
or
jne
xor
lea
mov
or
and
outsb
nop
sbb
mov
add
mov
sub
mov
mov
fwait
add
stos
xor
add
mov
or
add
jge
inc
cmp
push
add
inc
out
xor
or
mov
cmp
jb
pop
adc
mov
lods
xorl
sbb
cltd
mov
and
in
mov
add
in
mov
aas
add
xchg
mov
cmp
add
add
jb
jge
add
lods
stos
cmp
add
or
xor
add
dec
mov
sarl
cmc
dec
jmp
scas
cmp
inc
lret
add
jl
popa
repz
add
push
nop
das
out
xchg
add
inc
push
les
pop
insl
dec
cld
push
jne
and
pop
lods
test
mov
mov
or
mov
cmp
inc
mov
push
add
ds
pop
cmp
add
mov
xor
addb
push
std
mov
es
cs
fiadds
outsl
orb
stc
xchg
hlt
fmull
test
inc
push
out
rorb
nop
lock
adc
pop
hlt
paddsb
add
leave
aam
rcrb
cltd
add
push
add
jge
add
cmp
cwtl
add
sahf
enter
or
and
jp
test
adc
ret
push
adc
sbb
add
rep
popf
and
pop
pop
push
add
leave
mov
jl
sbbb
fucomi
hlt
add
pop
dec
faddl
push
aam
xor
fcomps
test
sub
and
popa
aas
mov
xchg
sbb
pop
add
push
add
shlb
outsb
rcr
push
out
mov
bound
pop
pop
and
cmp
cmc
shrl
mov
test
mov
sbbb
add
nop
mov
js
pusha
or
mov
call
pop
je
fcomip
cmpsl
add
xchg
add
addr16
pusha
ficoml
inc
loope
rorl
xchg
mov
mov
call
inc
pop
xchg
hlt
in
cmp
sub
enter
cmc
pop
sub
pop
mov
add
jnp
adcl
jge
insb
idivl
add
inc
lcall
mov
add
in
icebp
push
and
push
mov
push
nop
cmc
push
sbbb
add
loop
add
clc
pop
movl
addr16
sub
xor
mov
dec
push
bound
xor
sub
jb
mov
cwtl
add
insb
ret
jl
mov
mov
je
push
mov
add
and
cld
mov
mov
outsb
pop
pusha
dec
out
sysret
mov
dec
sbb
sbb
jle
cmp
ret
add
push
and
mov
adc
sahf
add
pusha
xor
add
mov
popf
ds
arpl
mov
jmp
test
inc
subb
cmp
movsb
pusha
dec
cmp
sub
imul
test
testb
add
pushl
push
jae
jmp
leave
cwtl
xchg
push
int
lock
popl
mov
inc
jnp
add
repnz
inc
jge
ret
sahf
adc
pop
int3
fwait
and
add
mov
aam
adcb
out
repnz
lea
mov
xchg
flds
movsl
push
push
scas
jns
sub
in
loope
adc
sbb
lods
in
je
pop
push
mov
add
aas
test
add
push
adc
shl
pop
sbb
sub
push
add
add
xchg
pop
int
add
insl
xchg
fcoms
pop
cmp
es
loop
adcb
jne
pop
ds
js
add
dec
out
pop
outsl
pop
cmp
pop
mov
push
xchg
mov
sub
push
cwtl
push
push
push
add
pop
pop
fs
stc
sub
mov
pushf
xor
clc
add
and
enter
dec
cmp
lds
imul
fs
sub
mov
pushf
add
in
pop
bound
in
idivb
loopne
add
adc
cmpsl
add
cmp
rcr
lahf
pop
pmulhuw
mov
and
mov
add
jnp
fnstsw
mov
mov
int
lcall
sbb
movsb
mov
jnp
pop
iret
roll
popa
add
mov
jge
jo
nop
dec
add
outsb
jg
fs
adc
jmp
add
fwait
scas
stc
add
xor
lret
cwtl
dec
add
jle
lahf
dec
in
imul
dec
out
push
add
mov
gs
mov
mov
lods
jp
adc
movsl
stos
popf
add
test
xchg
sub
mov
out
push
rcrb
pop
mov
ja
xchg
xchg
testl
jb
sbb
add
mov
fs
jnp
fmuls
xor
jp
add
leave
int
add
into
in
jge
xor
push
sbb
pop
add
mov
jo
aas
or
or
sti
add
adc
ss
mov
ljmp
orb
dec
add
cltd
adc
push
pusha
and
or
addl
mov
adc
int3
jl
sub
xchg
fwait
cmp
add
roll
and
push
add
jno
lahf
inc
mov
add
mov
push
xor
add
dec
ds
mov
push
les
stos
inc
loop
and
dec
lcall
push
sub
pusha
add
test
add
jecxz
ret
mov
or
xchg
movsb
and
push
dec
cmpsl
push
ficomps
sbb
or
adc
xor
jle
mov
pop
mov
jp
dec
testb
pop
arpl
lret
loop
loopne
addr16
xchg
jbe
nop
mov
add
sbb
xor
adc
bound
data16
sbb
outsl
pop
nop
inc
xchg
pop
xor
add
shrb
xor
scas
repnz
inc
cmp
lret
dec
lods
popf
aas
adc
clc
or
and
adc
loope
inc
xchg
cmc
add
cmpl
push
movsl
mov
jbe
pop
xchg
mov
mov
lock
sbb
xchg
inc
mov
enter
sbb
and
jne
add
shl
push
mov
add
push
lea
mov
lret
mov
pop
and
add
negl
cmp
aad
xor
and
dec
shrb
and
sbb
es
adc
les
push
dec
cld
outsb
roll
je,pn
int
int3
insb
cmp
lock
sub
pushf
or
xor
test
mov
cmp
dec
jecxz
dec
xor
cmp
jle
add
out
insb
icebp
add
dec
cmp
loope
cmp
ret
add
cmpsb
dec
data16
mov
insl
adc
xor
addr16
jecxz
stos
mov
pop
mov
xor
daa
mull
imul
mov
enter
jmp
inc
push
rcl
sahf
push
add
test
xchg
clc
pop
cmp
dec
cmpl
ret
or
xor
sub
mov
cld
testb
sbb
cltd
lea
cli
jl
sub
or
int3
add
sub
stos
mov
loopne
xchg
add
mov
pop
pop
sub
sarl
lahf
aas
enter
push
mov
jno
adc
fldl
lods
mov
add
pushf
pop
add
pop
test
mov
repz
xor
movsl
sbb
popf
lods
jmp
add
push
xlat
rclb
pusha
leave
jg
add
rcrl
sub
out
shlb
add
rcr
jno
inc
mov
out
sar
push
pop
sbb
jae
add
call
and
pop
push
ret
sarb
loop
sub
mov
cmp
xchg
inc
jge
push
xchg
pop
add
add
xorl
imul
pop
aam
xor
add
pop
clc
mov
jne
icebp
js
mov
insl
ret
mov
push
dec
push
mov
add
je
shll
add
hlt
and
add
and
xchg
das
adc
shrb
and
and
pop
push
and
addr16
jo
je
xor
jl
iret
rorl
sbb
ds
add
dec
jle
inc
xor
sbb
add
pop
sub
mov
roll
es
inc
daa
inc
add
add
sbb
jnp
push
and
pavgb
and
push
int3
push
rcl
dec
mov
fcoms
sbb
cmp
outsb
mov
ret
inc
xorl
ja
sbb
insb
js
popa
sahf
mov
mov
loopne
inc
test
jo
fiaddl
sub
mov
loop
add
mov
jnp
es
mov
add
xchg
jbe
mov
add
ss
out
mov
adc
xchg
inc
xchg
dec
jb
sbb
dec
test
xlat
inc
mov
sarb
push
add
mov
mov
pop
test
hlt
scas
sub
mov
add
cld
mov
test
jns
movhps
mov
push
mov
repnz
xchg
mov
sahf
scas
mov
push
push
add
fwait
imul
test
ljmp
push
fisubs
mov
dec
lock
or
xchg
and
mov
mov
lock
inc
inc
add
push
repnz
mov
sub
adc
add
stos
fildl
dec
cmp
cli
jl
pop
pop
pop
cmpsb
add
in
divl
xchg
pop
and
cli
test
sub
mov
addl
inc
push
leave
xlat
inc
push
fimuls
and
mov
inc
add
jae
dec
repnz
cmp
das
sbb
sbb
stc
and
add
cmp
mov
adc
add
jle
pop
and
xchg
or
ret
cmp
sbb
pop
push
mov
pop
dec
das
add
shrl
sbb
call
test
mov
add
mov
mov
or
and
mov
xor
sbb
call
mov
mov
or
or
in
repz
add
into
stos
sbb
lods
jae
inc
dec
push
or
mov
stos
or
add
inc
insb
shlb
pop
je
sub
gs
mov
iret
pop
mov
xor
inc
dec
cmp
test
mov
mov
enter
inc
lods
int3
jo
add
or
push
shlb
mov
cmc
aad
jo
repnz
or
inc
inc
lods
mov
mov
int3
push
hlt
fcoms
mov
add
add
lret
mov
dec
insb
mov
and
add
movsl
cmc
add
mov
push
int
cmp
subl
mov
pusha
mov
imul
hlt
mov
fmul
cltd
movsl
add
cmp
push
dec
jne
add
jbe
dec
pop
sbb
loop
sbb
arpl
test
xor
scas
cld
add
or
and
or
loopne
cld
mov
jne
fmuls
cmp
jns
pop
cmp
addb
mov
mov
add
adc
add
cwtl
fimuls
jno
outsl
pop
in
test
and
and
adc
add
in
popf
mov
lods
in
leave
in
sahf
or
sub
jp
sbb
sub
shlb
cmp
sbbb
outsl
dec
cmp
add
cwtl
mov
lods
push
mov
das
pop
es
popf
sbb
inc
add
imul
push
mov
sbb
xor
sti
enter
jmp
cli
add
pop
pop
bound
ret
sbb
add
cmp
ss
testb
xlat
cld
ja
cmp
inc
cmp
inc
add
or
dec
jl
push
int3
dec
lock
dec
push
lret
addb
aas
jae
cmp
sbb
inc
mov
xor
push
or
inc
test
pop
jb
add
ds
incl
xor
inc
rorb
xchg
inc
dec
sbbb
pusha
cmp
iret
and
rclb
inc
xor
cmpl
mov
add
movl
ja
sbb
mov
add
hlt
jg
add
js
nop
dec
cli
mov
repnz
inc
sarb
and
xchg
mov
ds
cwtl
add
icebp
add
out
sti
in
test
jge
inc
mov
jp
stc
jnp
or
js
ret
or
lcall
in
jb
int
movsl
sbb
pop
nop
clc
loopne
add
shll
add
jecxz
stos
stos
testl
pusha
and
dec
and
lcall
jnp
push
sbb
frstor
bound
jmp
mov
mov
arpl
inc
pop
repz
cld
xor
inc
aaa
add
stos
xchg
push
add
aas
dec
add
mov
cli
test
push
jecxz
or
mov
add
pop
cvtpi2ps
aaa
iret
add
add
enter
adc
movsl
push
cmp
ud1
pusha
ja
insb
cmpsl
sub
rorb
jae
fisubs
stos
in
test
push
cmpsb
add
push
sbbl
add
faddp
cmp
inc
testl
sbb
add
add
aad
or
pshufw
add
sub
push
add
and
sbbl
mov
jg
pop
push
dec
std
xchg
andb
cmc
add
dec
or
mov
and
and
adc
add
test
std
sti
lock
rcrb
jg
sbb
push
insb
mov
push
or
jo
div
pushf
popf
add
mov
int
jecxz
push
cmp
add
or
aas
mov
fcomps
in
adc
adc
add
mov
add
adc
daa
hlt
push
cltd
in
jge
prefetcht2
rorl
fists
mull
pusha
pop
mov
cwtl
fildl
or
mov
js
mov
jb
test
adc
int3
in
dec
jns
add
mov
mov
add
push
pop
push
scas
sbb
push
mov
push
mov
adc
mov
movl
lret
ret
cmc
xorl
push
sti
push
mov
push
or
push
gs
pop
dec
mov
int
shr
pop
pop
add
in
dec
dec
push
sbb
and
mov
sub
or
nop
pusha
test
mov
jb
gs
test
push
ds
add
add
repnz
fcoms
sbb
test
jecxz
icebp
jo
cmp
jl
or
icebp
pop
and
dec
add
adc
sub
inc
data16
adc
pop
pop
test
dec
sub
jg
inc
ja
fwait
add
or
stos
jnp
mov
lds
pop
lea
push
pop
and
outsb
adc
mov
repz
jns
and
push
sub
xor
push
sub
ja
mov
sub
lods
rol
aas
push
mov
clc
mov
hlt
loopne
aad
mov
jno
in
sub
add
lds
mov
add
mov
xchg
lahf
jne
inc
add
push
out
xchg
xor
push
jae
add
xchg
mov
add
sub
jmp
and
mov
push
bound
adc
loop
sub
jne
add
or
dec
or
cmpsl
mov
ret
fsubrl
lock
cltd
jmp
xchg
mov
and
add
pushf
clc
pop
cmp
icebp
adcb
add
cmp
stos
jl
add
call
pusha
insb
add
mov
es
mov
mov
lret
dec
dec
fildl
sub
add
je
add
sbb
cs
imul
orb
js
jmp
pop
test
sbb
in
out
mov
je
iret
pop
cwtl
pushf
or
dec
nop
movsl
fs
mov
add
in
rorb
mov
fsubl
dec
cmpsl
xchg
fcomps
xor
pop
push
add
and
jns
call
inc
orl
and
xchg
sbb
and
and
mov
xlat
push
sbb
enter
inc
xchg
in
mov
jmp
mov
adc
or
in
push
or
push
mov
pop
sbbb
je
mov
mov
shll
push
push
lock
mov
xor
mov
fs
and
stos
pop
lds
std
and
pop
jnp
push
xchg
lock
pop
mov
and
push
adc
and
add
add
mov
jle
xor
lret
inc
mov
mov
add
daa
rclb
xchg
sahf
sar
or
aas
push
popa
roll
scas
mov
mov
jl
jmp
call
addl
gs
das
sub
add
xchg
jle
cmp
inc
jl
divb
pop
shlb
push
mov
test
in
inc
lds
rol
add
bound
push
lock
jnp
test
pusha
sbb
ret
sbb
add
aad
das
js
rcrb
jno
or
testl
pop
lds
add
add
mov
lret
add
xor
loopne
stc
jb
fs
push
jno
movsb
push
cmp
lret
pop
add
cmp
add
push
mov
adc
cmpsl
push
leave
outsl
inc
and
add
mov
or
adcl
sbb
add
xchg
mov
call
dec
adc
inc
cmpsl
enter
cld
out
std
adc
in
add
data16
pop
les
jo
aad
lcall
scas
sar
push
mov
push
pop
cwtl
cmp
mov
xchg
push
mov
and
add
int3
fldenv
scas
icebp
mov
test
dec
lret
mov
gs
int
lahf
enter
add
mov
fildl
xor
mov
iret
out
cld
push
add
icebp
test
out
mov
inc
addr16
cltd
add
js
stos
add
lock
sbb
sbb
iret
in
loop
xchg
inc
lret
add
inc
rorb
int
inc
xchg
inc
jbe
xchg
sbb
pop
sti
fsubs
fsubl
add
rol
add
subps
mov
dec
add
js
pop
pcmpeqb
ja
xlat
int3
shrl
lret
dec
popf
jecxz
cwtl
fucom
roll
ljmp
sub
loope
imul
sbbl
cli
pop
push
les
insb
inc
ljmp
es
inc
sbb
sub
out
daa
testl
jnp
shlb
add
add
add
insb
rcrl
xor
mov
aad
add
imul
or
lea
xor
mov
jnp
add
and
mov
add
scas
loopne
cs
cmp
sbb
popf
nop
jae
lock
xor
jle
test
push
icebp
mov
movb
sbb
sbb
mov
dec
sub
enter
pop
inc
cwtl
aas
jecxz
add
mov
xchg
comiss
jnp
adc
xchg
insl
add
icebp
push
pop
movsb
aas
dec
cld
lock
add
push
add
mov
jge
aad
cld
icebp
daa
or
or
out
xchg
fiadds
cmp
jns
inc
test
jne
push
faddl
ficompl
lret
add
jae
sti
xchg
mov
add
push
jbe
into
jle
sub
inc
lahf
in
add
les
popl
jo
aas
mov
fs
and
sbb
jle
rol
xlat
and
sbb
mov
cmp
cmpsb
stos
pop
or
inc
add
cmp
sbb
or
push
lds
gs
add
push
les
fnstcw
add
loope
xor
xor
sbb
divb
daa
mov
xchg
pop
add
mov
add
push
test
movsl
loopne
inc
cmp
icebp
add
sub
sti
adc
mov
rorl
les
push
mov
inc
add
pop
and
rolb
add
mov
sbb
and
mov
or
inc
jle
and
imul
add
gs
xor
pop
out
add
sbb
arpl
add
cmp
add
lret
fwait
stos
add
ss
pop
add
push
adc
negb
addl
jae
repz
mov
and
pusha
cwtl
xchg
add
ja
lds
loopne
mov
add
addr16
addb
or
sub
enter
cmp
cwtl
sbb
add
insl
ljmp
pop
daa
xchg
popa
aas
pop
shlb
and
jle
rcrb
lods
and
xchg
sbb
inc
cs
xor
add
test
mov
add
xchg
add
fldl
pusha
mov
sbb
jns
xchg
sub
test
loope
ljmp
xor
add
andl
push
adc
sarb
dec
jne
call
incb
pop
mov
add
adc
and
xchg
jg
mov
ds
add
jmp
add
mov
xchg
pop
dec
xchg
scas
push
add
ds
xor
add
aaa
jno
sbb
push
imul
and
dec
stos
lcall
add
or
add
div
xchg
cmp
orb
pop
orl
mov
lods
cmp
decb
cmp
cli
js
add
lcall
out
ja
data16
cmp
push
daa
fistpll
cld
cs
into
addl
jne
xor
or
push
push
add
aad
mov
add
idivb
add
je
popf
call
mov
add
cwtl
imul
push
arpl
mov
mov
test
icebp
inc
mov
pop
add
xchg
lret
decl
add
add
mov
data16
adc
pop
flds
cmp
hlt
lcall
pop
daa
sbb
sub
pop
test
mov
into
rclb
ds
cmpsl
jle
push
pop
push
movsb
mov
sti
jne,pt
ret
int
jb
roll
aad
mov
and
dec
shr
enter
push
aad
cli
mov
add
test
pop
jg
add
test
scas
push
iret
loop
mov
pop
jg
dec
jno
sbbb
out
push
adc
leave
mov
loope
push
or
faddl
push
add
xchg
test
icebp
jb
sti
add
movsl
lcall
gs
pop
stc
mov
jbe
or
lret
sub
mov
xor
or
xor
and
mov
iret
mov
pop
add
js
xor
into
sbbl
scas
add
lods
daa
cmp
push
hlt
inc
cs
shrl
mov
stos
movsb
mov
insb
add
xor
add
push
inc
mov
inc
lahf
cmp
jge
xor
add
ljmp
xchg
jae
xchg
adcb
xchg
and
jns
sbb
out
fstpt
lea
mov
pop
frstor
xor
xchg
mov
inc
add
mov
ljmp
cmp
xchg
test
int
and
add
fs
adc
aad
in
incb
mov
dec
repz
sbb
mov
movb
shrl
xchg
lds
ret
cli
fwait
out
push
add
iret
or
out
adc
into
movsl
xor
ret
jmp
and
pop
push
jb
xchg
roll
cmp
mov
sbb
lods
pushf
sbb
cmp
dec
jnp
pop
add
jmp
cwtl
add
jmp
addb
rcrl
xchg
add
pop
or
and
not
xor
fldenv
arpl
push
out
inc
add
and
mov
mov
mov
jno
lahf
cmp
xlat
push
fcomi
dec
xor
pop
xor
push
sub
repz
lods
add
xchg
pushl
fmull
lock
pop
das
out
pop
in
sarl
sub
xchg
inc
add
dec
rolb
out
sahf
sbb
push
test
pushf
sbb
out
adc
add
sbb
add
adc
in
popa
fiadds
cmc
sbb
xchg
push
add
mov
add
sahf
dec
lcall
dec
jmp
loopne
les
jno
popf
add
loope
lahf
pop
nop
lds
ficompl
jb
les
flds
pop
xor
out
popa
add
cmp
sub
pop
sbb
mov
jg
sldt
ror
test
cmp
enter
lds
arpl
add
jp
cmpsl
push
in
int3
ret
out
lods
jl
mov
mov
aaa
add
arpl
add
cmpsl
or
sbb
xchg
add
pop
in
aaa
add
mov
sahf
xlat
loopne
and
je
xchg
dec
cmp
sbb
add
mov
arpl
xchg
cmp
xchg
roll
das
std
and
add
push
ds
push
insl
cmpsl
andl
int3
add
pushl
rcrb
mov
mov
jo
hlt
jb
push
add
sbb
xchg
sbb
rcl
add
call
and
imul
xchg
add
iret
push
mov
test
cmpsl
sbb
aad
mov
adc
in
lea
mov
stos
nop
popl
cmpsl
and
dec
add
cmp
pop
dec
clc
testb
aam
xchg
ret
push
add
mov
clc
add
add
add
cmpsl
in
ss
andl
sbb
mov
shll
test
pop
xor
leave
xor
mov
shlb
mov
nop
stos
add
fs
ret
push
mov
xchg
testb
daa
dec
mov
js
xorb
iret
mov
adc
lods
ret
and
imul
cwtl
addb
lret
and
fwait
xor
push
rcll
nop
or
dec
add
test
aas
out
mov
add
mov
rolb
cwtl
mov
in
je
add
in
movl
cmp
cltd
outsl
sub
mov
xor
fidivs
dec
daa
add
in
iret
sub
add
imul
orb
in
movsl
loop
add
inc
sarl
lret
popa
ret
fdivrl
xchg
jnp
jle
fwait
cmpsb
add
scas
inc
fcmovb
mov
add
fcoms
add
loop
sub
dec
jl
xchg
inc
pop
cmp
add
nop
enter
ret
jae
aas
lahf
mov
add
push
jp
pop
cmp
movsl
dec
sahf
inc
xor
rcl
test
add
mov
cmp
loope
add
in
lods
adc
outsl
xchg
push
mov
js
mov
jbe
and
pop
add
mov
adc
insb
sub
or
adc
sub
sbb
fdivrp
inc
call
inc
add
aas
jno
fstps
mov
insl
es
add
and
or
xor
call
ja
xchg
iret
push
adc
pushf
ret
std
data16
or
add
test
insb
pop
mov
mov
fldl
push
add
out
cmpsb
shlb
scas
outsb
arpl
mov
xor
mov
cmp
push
adc
movsl
inc
clc
shrl
aam
adc
jb
loop
mov
push
add
push
negl
sub
push
imul
cmpb
cmp
lds
cmp
add
scas
dec
addr16
or
add
sbb
pushf
lret
sub
shr
add
loopne
mov
sbb
jb
add
cwtl
pop
popa
mov
cmpsb
jns
bound
daa
mov
add
imulb
lcall
stos
xchg
xchg
test
loopne
filds
xchg
add
mov
pop
aaa
fwait
insl
adc
cmp
xlat
mov
dec
or
add
pop
fwait
aad
ljmp
mov
fs
das
in
sbb
aad
pop
psllw
push
jns
sbb
ja
add
push
movsb
pop
js
mov
push
int
xor
loop
dec
aam
jno
dec
mov
rcr
in
std
add
hlt
popf
stos
inc
and
pop
movl
dec
test
mov
loop
pcmpgtd
cmpsb
cmpl
nop
and
sub
dec
in
fiaddl
mov
jnp
fsubrl
pop
mov
dec
add
test
mov
add
out
decb
test
aam
jge
imul
add
test
fcomp
imul
add
hlt
or
bound
les
and
add
stos
xchg
dec
or
adc
insb
jp
add
dec
cmp
pop
push
add
and
das
pop
daa
sub
orb
sub
pop
inc
hlt
sarb
mov
sar
cmp
into
xlat
cld
add
lret
sbb
inc
add
mov
jle
es
cmp
jmp
jecxz
aam
daa
add
dec
in
movsb
int3
insl
inc
add
aad
insb
add
mov
add
aas
inc
push
mov
xchg
inc
ja
loopne
jge
mov
cmp
add
lods
pop
push
test
andl
aad
add
hlt
flds
pop
dec
cmp
sbbl
call
pop
and
push
jnp
mov
adc
and
jecxz
cwtl
ds
dec
fs
imul
mov
and
outsb
add
cmc
mov
jb
ja
cmp
mov
jo
cs
adc
inc
mov
add
sub
xchg
loop
adc
add
mov
or
mov
sub
dec
insl
jp
add
clc
push
int3
aad
fs
add
add
mov
out
clc
mov
pop
mov
cmpsl
dec
dec
push
subb
cwtl
fadds
sbb
adc
inc
rcl
xor
dec
adc
pop
dec
les
inc
cmp
add
mov
add
loop
jae
xor
sbb
cwtl
pushf
and
mov
add
pop
jae
add
push
int3
pop
and
push
in
lock
sbbb
popa
lods
add
lds
lret
lock
lsl
int
sahf
aad
xlat
push
jbe
sub
pop
xchg
and
push
sub
inc
stc
add
ret
mov
push
or
xor
repnz
out
mov
pushf
rcrb
xorl
jl
dec
sub
notb
rolb
and
mov
pop
fsubl
inc
pop
xchg
cmp
and
scas
ror
sbb
add
scas
cli
cmp
enter
xchg
mov
mov
sbb
add
loop
adc
inc
movntq
pusha
rorl
or
lea
cmpsb
sbb
push
rcrb
xchg
and
add
icebp
xorb
aaa
lcall
pop
rcrb
jmp
into
in
sub
pusha
test
in
push
and
pop
jne
rol
add
loop
pop
add
popf
ficompl
data16
mov
in
cmp
cmp
sbb
push
lods
lock
push
mov
out
and
pop
cld
fcoml
pop
xor
lret
es
imulb
xchg
push
lcall
rcl
inc
mov
add
sarl
lock
add
js
mov
push
xchg
pop
jg
xor
out
adc
push
inc
aad
dec
sbb
xor
andb
inc
mov
nop
add
add
add
rcrl
mov
add
pop
imulb
addb
xor
cmp
out
xchg
xchg
xor
jmp
nop
adc
jp,pt
add
incb
test
pop
jb
ficomps
pop
lcall
sti
clc
clc
adc
es
mov
stos
sbb
add
sbb
push
xlat
mov
jl
add
jmp
and
std
cmp
imul
out
mov
ret
xchg
dec
andl
pop
dec
aad
mov
in
pop
inc
lock
sbb
sbbb
imul
xor
les
das
pop
mov
add
hlt
into
jp
mov
xchg
ret
push
xor
stos
mov
mov
int
push
add
ret
arpl
inc
mov
lcall
add
xchg
faddl
push
clc
inc
repnz
jnp
or
lock
jle
add
out
ds
adcb
push
addr16
rolb
std
lds
add
in
lret
jmp
call
xchg
mov
push
cmp
add
pop
jae
pushf
sbbb
cli
sbb
xchg
je
sbb
js
xchg
xor
mov
imul
test
repz
fsubs
inc
aam
pop
sbb
or
push
jno
sub
xchg
out
add
dec
lret
cmp
add
addr16
mov
mov
and
jno
add
scas
das
iret
or
adcl
leave
mov
pop
dec
test
inc
xorb
scas
add
sbb
fsubr
and
pop
xchg
addb
ss
arpl
outsl
add
leave
int3
sub
push
add
jl
xchg
imul
or
and
in
sahf
add
push
mov
add
lock
into
xor
and
add
and
notl
push
fisttpll
movsl
jnp
test
jno
adc
lds
loopne
leave
pop
adc
add
lcall
lret
in
addb
xchg
into
pop
std
xchg
movl
shlb
int
rclb
bound
mov
jle
sub
pushf
inc
or
pop
pop
add
call
jg
mov
sbb
dec
popa
adc
sub
out
ret
xchg
sarb
jae
add
scas
add
push
mov
adc
dec
ja
int
rolb
and
mov
movsl
and
xchg
add
push
add
add
mov
cmp
inc
jo
jp
outsb
cmp
aam
ljmp
dec
cmp
adc
mov
popf
dec
out
repz
add
int3
enter
adc
adc
add
jbe
pop
insb
mov
adc
sub
ja
xor
lcall
arpl
testb
add
jo
iret
pop
sub
sbb
rorb
int3
xor
push
mov
sbb
data16
pop
or
scas
loopne
pop
and
in
mov
sub
xchg
popa
lcall
mov
pop
inc
jns
add
loope
jp
push
cmpsb
add
mov
adc
dec
or
nop
xchg
incb
mov
add
xor
push
dec
lahf
loopne
mov
jnp
pusha
inc
adc
cmc
movsl
cmp
icebp
sbb
xor
in
movl
jge
add
subb
cmp
gs
stc
and
or
sbb
adc
ret
and
inc
add
pop
into
fisubrs
mov
dec
and
jl
mov
mov
xor
add
mov
std
in
add
add
dec
out
mov
rcll
cmp
push
add
cmp
mulb
gs
shl
xor
xchg
adc
sbb
dec
lret
rcl
mov
cmpsl
add
bound
xor
je
jl
lret
add
adc
add
sbb
mov
push
pop
test
adc
icebp
pop
sti
call
cwtl
imul
xor
mov
mov
jns
adc
jne
rcrl
outsl
outsb
inc
subl
aas
lock
add
iret
stos
sub
and
cli
mov
scas
xlat
mov
push
arpl
and
pop
cli
push
mov
popl
scas
in
cmp
out
mov
pop
jae
lret
dec
jns
call
jg
xchg
aad
test
add
jo
add
xchg
sub
jecxz
pop
outsb
sbb
add
add
cmp
jp
inc
cmc
les
add
push
jne
enter
add
cli
adc
ja
aas
mov
daa
mov
jb
dec
add
imul
mov
pusha
imul
fnstcw
cmp
xchg
adc
lahf
data16
push
jb
mov
cmpsl
or
adc
in
int
outsl
smsw
jecxz
leave
mov
add
stc
mov
mov
repnz
mov
cmp
pop
push
in
cmp
inc
jl
push
sbb
xchg
stc
mov
push
shrb
lea
js
add
pop
out
lock
popa
add
ds
sub
push
movsl
cmovp
adc
pop
outsl
add
sbb
enter
push
lret
add
push
in
push
sbb
mov
fwait
lds
shr
push
cld
dec
add
and
pop
xor
inc
xchg
pop
inc
add
movsl
pop
dec
mov
stos
shlb
in
inc
sbb
movsb
dec
scas
daa
aam
cmp
lret
iret
in
test
sub
jne
push
sub
pop
dec
test
add
clc
mov
dec
jmp
std
ret
rorb
imul
xor
xor
sbb
xor
add
jne
xor
xchg
push
pop
xor
and
add
scas
sub
addr16
test
jns
pop
loop
jmp
jmp
out
push
xchg
popa
xor
sub
in
rol
outsb
loop
add
out
cltd
pop
xchg
sbb
in
or
data16
sub
mov
and
ljmp
insl
add
mov
push
jp
bswap
xchg
adc
adc
cs
cmpb
jle
cltd
das
out
add
shll
loop
outsb
sbb
push
adc
in
mov
aas
cltd
mov
int3
jle
sbb
stos
pusha
inc
cld
lret
cmp
int3
hlt
add
imul
outsw
adc
cmpsl
sbb
or
mov
aas
bound
push
mov
mov
lock
out
add
xchg
pushf
test
cmp
shrl
into
push
jbe
lods
pop
ljmp
inc
mov
xchg
int
pop
dec
subb
mov
mov
add
and
add
in
jge
pop
pop
mov
add
gs
mov
cmp
out
add
stos
and
ficomps
push
lea
lahf
add
add
mov
xchg
jae
int3
jl
int
insl
inc
push
add
daa
jge
add
cs
fldenv
mov
pop
andl
and
test
mov
setns
mov
and
dec
push
mov
add
jge
pop
addl
xchg
roll
aas
pusha
sbb
mov
cmpsb
cmpsl
or
add
push
dec
push
push
push
int
cmpsl
add
loope
sub
pop
stos
fdivrl
xorl
mov
add
sbb
add
movsb
or
pop
pop
inc
mov
call
mov
loopne
add
ret
pop
sahf
add
mov
addr16
sbb
xchg
and
lahf
mov
jno
sahf
push
push
push
push
loope
cmp
hlt
push
pop
add
inc
iret
in
sbb
pop
cmp
mov
add
stos
add
cltd
xlat
mov
incl
jge
orl
outsl
mov
mov
sbbl
xchg
orl
xor
inc
dec
or
pop
test
push
jecxz
fadds
xlat
mov
push
std
and
fs
mov
ljmp
mov
adcb
push
les
and
imull
cwtl
add
popf
jnp
push
jns
sub
xor
jo
in
jmp
inc
clc
stos
or
jecxz
ljmp
mov
dec
int
add
jp
shll
push
and
fdivrs
xchg
inc
add
xchg
loope
jnp
add
ss
cwtl
dec
and
fucomip
and
cmp
inc
dec
and
mov
xorb
out
add
pushf
sti
adc
das
cli
dec
add
pop
iret
inc
loopne
outsb
add
pop
mov
rcrl
jns
mov
imul
add
fwait
adc
decl
cmp
add
jp
cltd
mov
add
mov
sub
and
bound
xor
out
push
sbb
ja
in
es
add
adcb
scas
lock
cmp
scas
in
pop
pop
jg
rol
jle
adc
pmulhuw
in
ds
xor
sub
cs
xchg
add
sub
nop
fadds
enter
xor
loop,pn
into
add
xchg
mov
stos
add
addr16
dec
cs
add
adc
inc
push
inc
inc
jnp
sbb
addr16
and
add
mov
rcl
inc
in
icebp
dec
cmc
push
jb
loopne
ds
add
push
mov
leave
sub
lcall
cs
addl
pop
lea
inc
xchg
pop
jg
inc
loope
add
jb
fcompl
imul
add
sub
or
mov
addr16
add
dec
rcrb
mov
cmp
js
mov
psadbw
test
aas
hlt
rolb
xor
shl
bound
dec
push
xor
pop
sbb
add
mov
lidtl
sbb
pushl
jne
push
mov
mov
insb
pusha
stos
lret
cwtl
pop
xor
cmc
int
shll
loopne
dec
and
inc
xchg
sbb
add
mov
push
lcall
sub
je
jne
es
mov
sbb
mov
ret
lcall
addr16
fists
aad
movb
xor
stc
dec
add
outsb
lock
inc
add
push
xlat
stc
orl
mov
cmpsl
add
dec
test
push
ret
add
and
mov
out
fs
add
xchg
les
mov
pop
scas
adc
into
repnz
loopne
sbbl
or
xchg
sub
leave
adc
nop
daa
out
pop
add
movsb
jmp
push
add
and
fadds
repz
call
add
sub
sbb
das
lea
mov
inc
add
adc
faddl
pop
adc
or
daa
rcll
int
ja
push
lds
pushf
xchg
mov
insl
add
hlt
fs
cmp
call
xchg
rorl
and
pusha
push
fldl
stc
dec
cli
add
pusha
sahf
or
loopne
sbb
hlt
fs
aaa
xchg
push
mov
bound
cmpsb
aas
mov
pop
stc
repnz
push
and
cmp
adc
lods
cld
lahf
add
and
add
in
or
loop
cmp
sub
sbb
or
pop
pop
xor
mov
sub
lahf
add
test
mov
cli
sbb
shrb
add
dec
pop
movsb
mov
mov
enter
jo
cwtl
add
lcall
in
cld
mov
add
das
sbb
cmpsb
xor
pushf
push
or
mov
add
leave
mov
cmp
nop
movsb
xchg
iret
jne
jecxz
clc
movsl
addr16
lods
cmpsb
add
sbb
mov
xor
inc
in
add
cmp
xlat
add
adc
fdivrs
xchg
xchg
jbe
cmp
sub
insl
inc
popf
sbb
add
fistpll
aad
add
arpl
cltd
loop
add
push
rolb
dec
mov
loopne
mov
leave
mov
adc
shlb
xchg
mov
inc
clc
add
xor
adc
push
aam
loop
add
cmp
fmulp
push
mov
xchg
xchg
add
push
enter
push
incl
jo
sbb
pop
sti
push
push
loop
sbb
xchg
out
xchg
cs
add
daa
mov
testl
adcb
push
xchg
rorb
mov
push
leave
repz
add
enter
mov
mov
and
movsl
adc
jg
add
fdivl
sbb
jb
mov
mov
pop
aaa
mov
jg
in
cmp
ret
data16
inc
hlt
loopne
add
out
add
inc
mov
outsl
aas
incb
xor
lret
daa
shll
push
fsubl
andb
add
pop
mov
add
pop
pop
leave
shll
add
sub
push
add
lods
pop
cmp
aas
xchg
push
push
mov
popf
mov
js
add
lods
push
es
loope
xlat
mov
int3
into
repnz
add
jle
mov
add
pop
je
adcb
or
imul
xchg
pop
insl
cmp
cmp
insb
jmp
test
add
cmc
sbb
add
pop
xchg
lcall
icebp
mov
imul
insb
xlat
enter
sbb
addr16
pop
add
dec
mov
pop
addb
dec
or
sbb
test
xchg
dec
mov
int
push
xor
in
or
sti
inc
iret
sub
or
and
lahf
icebp
add
clc
sahf
add
dec
js
sub
loope
mov
add
and
sbb
jns
incl
sbb
push
xchg
jb
jbe
aad
lahf
or
test
add
cmp
out
mov
xlat
jnp
inc
leave
mov
iret
pop
je
in
mov
pop
xchg
add
add
fldl
shl
mov
mov
push
add
mov
dec
xor
cmp
add
ss
mov
adc
adc
sti
cwtl
and
mov
cmp
mov
push
pop
cmp
orb
pop
and
cmpsl
ds
pop
pop
add
add
das
xor
mov
push
sub
push
lahf
add
les
xchg
push
rcl
cmp
pop
das
sbb
out
mov
aaa
jnp
dec
out
and
shl
add
fidivl
jmp
cwtl
test
cmp
ret
jge
cmp
push
sarl
dec
insl
test
add
mov
test
add
lds
fdivp
mov
pop
mov
pop
pop
add
testl
pop
cmp
test
mov
addl
in
xchg
dec
cmp
imul
popa
push
push
stos
and
movsl
xorl
inc
in
jle
add
shlb
or
sti
lods
popf
inc
stos
cwtl
ljmp
shll
loope
gs
mov
test
push
xor
std
sub
inc
adc
sahf
testl
cmp
or
enter
add
mov
pop
das
sbb
or
loop
add
les
aaa
push
testl
add
in
ljmp
add
pop
jg
mov
incb
jnp
ret
inc
cmp
add
stos
inc
add
aam
lock
movsl
sbb
iret
gs
pop
add
int3
jae
popa
loopne
jge
add
loope
test
add
sarb
sbb
addb
sbb
or
sarb
add
add
jbe
mov
pop
mov
and
pop
jg
mov
hlt
push
inc
testb
add
ret
jbe
jno
imul
aam
adcb
shl
fdivrs
cmp
imul
mov
push
fldcw
test
lods
add
cmp
inc
imull
sub
cmpsb
dec
or
rcr
lret
adc
loopne
dec
push
gs
sub
xor
jecxz
sysret
shlb
and
push
jmp
xor
mov
int
add
nop
mov
cmc
inc
add
dec
test
add
pop
inc
repz
bound
popf
repnz
addl
int
add
xor
dec
rcll
pop
cs
test
bound
push
and
or
pop
iret
inc
popf
test
pop
add
or
push
and
add
xchg
test
or
cmp
dec
jle
fiadds
fisttps
xor
push
mov
inc
inc
cmovo
pushf
mov
cmp
push
iret
push
push
js
add
or
cmp
shrl
aas
movsl
stc
add
jbe
cmpsl
add
add
push
cmp
pop
xchg
sub
loopne
add
test
add
push
fbstp
dec
fidivrs
sbb
js
clc
add
lods
in
jmp
add
mov
xchg
mov
push
sub
mov
mov
lret
sbb
cmc
daa
mov
jns
inc
push
add
inc
rclb
outsl
loop
dec
inc
sub
jge
add
xor
mov
out
adc
sbb
cmp
jl
lahf
movnti
mov
aaa
mov
cs
mov
hlt
add
jb
push
cmp
add
and
imul
jno
pop
add
fidivrs
sub
push
cmc
ss
gs
mov
or
add
pop
cwtl
and
mov
ret
mov
ret
test
or
sbbb
add
mov
mov
add
mov
imul
shlb
fsubr
inc
xor
dec
lock
repz
rcl
pusha
movsb
in
cltd
rcll
push
xchg
nop
sti
xlat
add
mov
mov
mov
fdiv
mov
jp
lock
inc
pop
mov
jmp
and
add
mov
jno
pop
dec
jns
add
adc
mov
xchg
pop
add
mov
insl
dec
stos
sub
test
je
adc
jae
loopne
add
dec
aad
ffreep
in
pushf
or
test
add
adc
sub
dec
addw
and
mov
dec
pop
shlb
movsb
push
or
test
add
cwtl
sbb
sub
testl
inc
les
es
test
pop
xlat
xor
inc
cltd
lods
andb
repz
pop
stos
sub
js
and
clc
mov
xchg
mov
cmp
inc
rcrb
aad
mov
rcl
mov
add
jmp
add
jmp
test
stc
jl
cmp
add
arpl
inc
cmp
aas
add
dec
stos
je
dec
add
pop
xchg
cmp
fisubl
pusha
pop
add
mov
lods
and
in
xchg
shlb
xchg
push
mov
cmp
jle
add
loope
push
cmpsl
jp
pop
enter
std
mov
mov
dec
insl
xor
ficoml
pop
cmp
mov
call
sbb
shr
xchg
shlb
add
mov
cmp
cmp
loope
xor
cmp
mov
pusha
out
sub
jge
mov
ret
cmp
lock
mov
out
add
rcrb
add
outsb
inc
xchg
rcll
push
gs
orb
mov
add
mov
filds
pop
cmpsl
dec
cmp
addb
aad
mov
imul
add
out
mov
loopne
mov
repnz
or
mov
lcall
repz
ret
call
call
xchg
xor
sarb
pop
add
add
mov
jne
test
js
add
ss
push
add
into
loope
jp
or
ret
add
xor
pusha
add
imul
jp
fdivrl
add
mov
jmp
popa
test
xchg
push
hlt
lahf
push
add
push
ja
adc
aad
mov
nop
or
outsl
xchg
or
pop
mov
add
add
mov
sub
inc
test
xor
push
or
hlt
int3
and
pop
in
jnp
lock
rolb
push
and
lret
std
sti
enter
inc
call
sahf
push
or
andl
xchg
ret
fldenv
ret
mov
add
xchg
jecxz
add
add
add
lret
rcll
int
jo
adc
imul
loopne
lock
mov
call
push
inc
xchg
jle
popf
pusha
cmpsb
arpl
sub
stc
dec
add
cmp
es
roll
jg
js
fiaddl
adc
jnp
loopne
cwtl
js
bound
or
cwtl
adc
adc
jmp
xor
in
rol
inc
icebp
cmp
rclb
cmpsl
into
outsb
loopne
fsubrl
sbb
in
movsl
shrb
mov
pop
mov
mul
addb
cmp
mov
and
add
sarb
daa
pop
jo
clc
pop
and
add
adc
popf
jnp
sbb
out
into
and
and
out
cwtl
fs
addr16
aas
jp
clc
das
mov
notl
loopne
add
loop
imul
adc
call
fwait
mov
test
push
ja
push
push
mov
sbb
addr16
push
cmp
std
fmuls
mov
sub
aas
dec
add
mov
pop
leave
inc
lret
sbb
sbb
insb
add
xor
aad
mov
sbb
test
xorb
aam
pop
out
rorl
scas
ljmp
fbld
push
add
fisubs
ffreep
xchg
movsb
fstpt
xchg
fcoms
add
inc
lods
mov
xor
fcoms
loopne
mov
mov
pop
ret
sbb
lods
pop
lods
rcr
add
js
das
stos
add
xor
pusha
pop
push
add
jns
xchg
and
or
adc
sbb
std
add
inc
push
imul
inc
jge
xlat
add
faddp
in
je
pop
outsb
or
cld
mov
out
push
add
arpl
ftst
test
divl
mov
add
jbe
inc
mov
fldt
notl
subb
mov
mov
dec
xor
push
add
push
fisttpl
jo
ljmp
std
cmp
add
scas
mov
or
cmpb
pop
adc
add
pushf
xchg
mov
jmp
cmp
jge
push
xchg
repz
and
and
add
ss
pop
insl
insb
btc
push
cmp
mov
dec
xor
lods
fsubrs
cmpsb
add
mov
fucom
mov
jge
dec
cmpsl
in
add
add
imul
adc
out
pop
lds
mov
out
cmp
adc
iret
sub
add
xor
or
loopne
jp
dec
push
jge
add
icebp
add
and
loop
lods
pusha
push
mov
xchg
pop
sub
mov
fdivs
xchg
enter
dec
daa
sbb
test
stc
sbb
add
jge
pop
and
leave
loopne
mov
das
sub
out
add
pop
cmp
and
addr16
std
push
pop
movsb
adc
mov
sbb
or
jno
mov
rcrl
pusha
inc
dec
add
push
je
js
push
loopne
call
movsl
xchg
subb
add
mov
lods
sbb
mov
add
or
fmul
jmp
dec
in
xchg
mov
jno
add
xchg
aad
sub
inc
xlat
pusha
or
jge
adc
adc
or
or
push
and
pop
xor
or
xchg
sub
add
mov
inc
pushf
movsb
xchg
cmp
jo
add
mov
mov
and
aad
cmp
aaa
pop
inc
add
dec
in
adc
mov
sti
jmp
add
call
pop
mov
fsub
int3
add
dec
inc
sbb
inc
xor
aas
xor
lds
or
gs
popa
mov
or
inc
cmp
pusha
add
sub
xor
push
imulb
sbb
invd
pop
pusha
out
mov
fldl
rcrl
popa
xor
mov
adc
push
push
daa
test
loope
scas
enter
dec
pop
out
mov
sbb
dec
jno
pop
movsl
sub
clc
out
bswap
into
outsb
push
push
add
jae
mov
test
inc
mov
hlt
popf
inc
add
roll
cwtl
cs
cmp
in
push
add
pushf
dec
stos
add
aaa
sahf
in
or
add
sbb
fstpt
arpl
inc
cmp
std
push
cmc
add
in
out
mov
repz
xor
movsb
add
daa
fsubl
and
imul
sbb
sbb
shlb
rcl
js
das
xchg
add
jno
sub
or
cld
movsb
push
push
lcall
mov
or
cmpsb
aas
test
add
pop
call
repz
xor
in
fcmove
adc
sub
dec
inc
push
test
loop
jns
repz
rolb
xor
or
sub
xor
cmc
dec
add
inc
ja
jbe
in
cmp
add
lock
pop
and
pop
jno
out
add
pop
enter
add
mov
cmp
movntq
inc
rclb
sbb
addb
psubw
add
jmp
repnz
cmp
fcomps
push
scas
jp
add
mov
jns
stos
xor
clc
cmc
fdivs
add
mov
mov
pop
or
and
sbb
nop
fiaddl
iret
in
cmp
inc
rorb
and
add
aaa
mov
push
punpckhdq
scas
mov
cmp
aam
mov
and
decl
test
int3
xchg
push
or
std
adc
sub
lods
jbe
in
push
shlb
add
xchg
mov
fwait
cld
cmpsl
add
popf
rcll
call
fnstsw
addr16
mov
push
adc
sub
mov
test
sahf
add
lock
jno
or
mov
xchg
sbb
frstor
out
iret
add
rolb
add
mov
add
mov
add
imul
stc
sbb
sbb
ficoms
std
loop
mov
add
pusha
xor
cmp
mov
pop
jnp
je
add
pop
lods
jle
xor
mov
and
or
add
inc
sbb
add
ljmp
dec
leave
pusha
push
pop
mov
jb
xor
jae
mov
hlt
add
lea
arpl
in
or
in
nop
sbb
repz
add
and
xchg
arpl
xchg
jl
repz
sahf
push
out
sbb
in
cwtl
xor
add
icebp
and
push
adc
aam
sbb
or
mov
nop
pushf
ret
sub
loope
ret
and
outsl
loopne
mov
add
inc
jge
cmp
or
lahf
idivb
aas
imul
pusha
fwait
outsl
sbb
add
out
or
aaa
cmp
add
xchg
push
fcompl
mov
js
loopne
shrb
inc
add
aam
pop
sbb
pop
add
xchg
loop
xor
add
ss
cmp
add
in
pop
lcall
pop
cmp
sub
addb
arpl
cmc
pushf
jb
xor
cmp
add
cs
add
sub
aam
jmp
adc
add
insb
stos
in
add
add
mov
add
and
lock
into
pushf
scas
arpl
enter
add
dec
add
sahf
sub
loope
out
adc
movsb
sti
test
dec
hlt
cmp
jge
sbb
xchg
call
ds
xor
repnz
or
mov
daa
dec
mov
test
xchg
adc
mov
jg
add
outsb
dec
fwait
or
insb
xor
mov
scas
mov
or
add
movsb
inc
inc
lret
out
pop
dec
or
jbe
int3
and
sarl
mov
add
nop
adc
cld
lock
sub
lcall
mov
pop
pop
enter
add
jne
push
xchg
push
clc
mov
in
add
cmp
xorb
adc
imul
sbb
scas
rclb
pop
add
lahf
or
test
jns,pn
cmp
sahf
outsl
inc
xor
add
adc
inc
rcrb
in
repz
fs
add
inc
daa
lret
jmp
shld
js
mov
into
pop
mov
dec
sub
repnz
in
jb
sub
push
dec
mov
add
push
testl
push
jo
push
add
into
and
mov
cld
xchg
or
mov
jmp
mov
ret
adc
cld
ds
sbb
pushf
lods
add
sub
stos
cmp
xchg
nop
adc
std
stos
xlat
bound
pop
mov
push
cmpsb
rcr
mov
pusha
test
add
xchg
sbb
mov
mov
inc
cmp
fidivrl
push
pop
mov
aaa
push
xchg
bound
shl
add
outsl
xchg
and
jle
out
imul
cmc
sbb
shrl
push
jle
push
add
shrl
jp
jmp
ficomps
jno
fldenv
add
sbb
cmp
pop
adc
stos
leave
flds
push
add
sbb
mov
jp
ds
sub
daa
std
inc
or
mul
popf
pop
mov
push
jle
jne
add
xor
lds
bound
aam
outsb
fildl
addr16
xchg
call
add
int3
pop
cmpb
or
rorb
scas
out
loopne
add
iret
test
dec
add
pop
adc
mov
pop
cld
shlb
mov
dec
loope
push
daa
sub
pop
or
mov
bound
test
dec
cmp
leave
gs
mov
lods
or
in
mov
sbb
add
rorb
adc
ror
jecxz
mov
in
add
test
push
aam
or
push
dec
cli
or
push
in
cmp
ds
roll
jno
push
in
mov
rclb
aas
subb
and
add
or
adc
out
stc
xchg
fwait
sub
rol
pop
clc
cs
enter
arpl
mov
cli
or
sbbl
pop
or
popf
cs
ja
push
push
rcrl
popa
adc
sahf
hlt
shll
xor
enter
add
stc
repnz
add
adc
into
and
cmp
stc
add
inc
mov
mov
cld
pushf
jecxz
cmpsl
or
fdivrl
dec
pop
popf
add
ljmp
clc
dec
sub
test
aam
pop
dec
add
je
mov
int3
scas
scas
jno
dec
out
cmc
inc
add
jle
incb
icebp
aas
add
add
pop
nop
aaa
pop
xchg
add
stos
xchg
mov
add
into
push
add
std
mov
jl
mov
lock
add
mov
enter
inc
in
xor
push
mov
pop
mov
add
jne
jb
stos
jns
inc
sub
push
add
mov
or
pop
xor
call
cltd
add
dec
out
popf
push
cmp
mov
push
cmpsb
push
mov
cmpb
xchg
or
or
pop
loopne
add
mov
in
jns
pop
xchg
xor
sbb
push
jo
and
adc
add
mov
push
add
mov
add
sbb
add
jb
mov
lret
add
fbld
jnp
loop
add
cli
jmp
cmc
sub
dec
out
popa
push
nop
push
fcomps
jmp
add
pop
and
adc
dec
adc
fimull
push
xchg
and
pop
scas
in
addb
rcll
lds
cwtl
add
mov
sub
mov
je
and
jno
jg
fisttpl
xchg
or
std
and
test
jp
ss
mov
scas
inc
iret
xchg
pusha
ja
jl
mov
add
out
stos
call
sahf
xchg
ret
add
out
cli
pop
add
enter
bound
cwtl
imul
fiaddl
adc
add
mov
add
mov
nop
xchg
sub
aad
hlt
and
jge
dec
fistpll
and
ds
jmp
push
insb
push
lods
sbb
add
mov
rolb
pop
mov
test
dec
hlt
pop
scas
insl
fstpl
rcll
mov
mov
add
test
in
sub
gs
sbb
std
sbb
inc
push
add
lea
add
lods
ljmp
cmp
push
jno
jb
mov
xchg
fcomi
fisttpll
mov
dec
mov
rorb
fisubrs
jo
stc
ss
pusha
loop
add
lock
mov
movb
pop
and
cmc
movsl
flds
push
dec
cmp
daa
lds
insb
xchg
jecxz
mov
lock
mov
mov
xchg
cmp
or
in
mov
add
pusha
sub
pop
stos
fwait
xchg
jns
add
push
outsl
popf
xchg
test
sub
clc
dec
sub
jne
cmp
add
and
stos
lods
ret
adc
hlt
cmp
mov
inc
scas
icebp
add
les
divl
push
and
insl
jno
or
hlt
mov
adcb
enter
pop
adc
inc
xlat
push
leave
add
pop
shlb
aad
pop
aam
xor
sbb
stos
and
int3
push
cmp
dec
add
jp
in
ret
in
leave
add
pop
bound
dec
pop
imul
xchg
addr16
xchg
xor
or
push
mov
jmp
adc
dec
push
pushf
dec
loope
lds
clc
outsl
loopne
sti
add
in
or
add
test
mov
add
jno
add
pop
add
rorl
mov
scas
pop
jb,pn
sahf
push
or
inc
aas
pop
add
test
add
adc
es
and
rclb
xchg
sub
jmp
mov
mov
push
into
push
test
adcb
adc
pop
adcl
jbe
adc
sub
rorb
dec
jb
push
pop
mov
rclb
xchg
fnstcw
stc
push
push
sub
xlat
cmpsb
cltd
les
jg
dec
mov
jnp
dec
hlt
pop
lcall
pusha
test
add
lods
mov
push
icebp
mov
jmp
add
data16
enter
or
fldcw
loope
mov
push
pop
push
add
lds
sub
push
add
lret
je
nopl
mov
inc
shl
mov
dec
add
pusha
sub
fcoms
pop
mov
jg
mov
cmp
repnz
repz
int3
xchg
add
fucom
inc
add
repz
insl
and
inc
add
gs
je
jne
adc
mov
adcb
cmp
int
jp
add
mov
jns
sbb
mov
sbb
xor
into
popa
or
cmp
icebp
xchg
mov
enter
mov
lea
in
iret
test
add
fwait
insb
lahf
add
adc
lret
mov
add
test
cmpsb
push
repnz
add
xchg
pushf
or
into
pop
or
pop
and
fldcw
mov
out
out
fildll
leave
in
sub
outsb
lret
cmp
dec
sbb
mov
and
push
jae
add
gs
js
stc
add
mov
in
arpl
xlat
push
mov
dec
push
in
incl
mov
adc
aas
add
popa
dec
push
fidivl
ljmp
push
mov
xor
add
stc
inc
js
aad
mov
add
lcall
pop
mov
pusha
incb
fnsave
pop
loopne
pop
push
inc
adc
add
out
pop
subb
add
dec
mov
jp
push
add
std
orb
pop
outsb
test
adc
pop
pop
xor
jo
test
mov
or
sbb
dec
int
out
movsb
rcl
rcl
or
add
cmovne
testl
xchg
xor
stos
ss
ja
cmpb
inc
jne
leave
add
clc
movsl
aas
add
dec
inc
push
lahf
addr16
aas
lds
mov
daa
sub
sbb
out
push
xchg
pushf
sub
clc
popl
ja
movsl
push
icebp
jnp
into
add
add
inc
xor
arpl
fwait
sbb
jo
fadd
adc
push
clc
dec
rcrl
add
mov
inc
mov
mov
push
and
add
out
mov
add
jne
int3
cmpsl
mov
es
in
push
push
mov
xchg
xor
in
fnstenv
add
inc
xchg
dec
sbb
mov
jp
jae
outsl
hlt
xor
pop
nop
lods
mov
sub
lea
in
mov
cmpsb
add
popa
loop
or
xchg
jp
and
cmpsl
cmp
inc
jo
pusha
add
call
mov
add
fldenv
add
mov
xor
pop
or
xchg
inc
pop
or
idivl
cwtl
push
add
les
add
sub
mov
mov
pop
add
cmp
jnp
inc
cmp
rorb
sahf
jae
add
ret
xor
add
test
push
adc
stos
aas
into
mov
fdivrl
addl
cli
or
mov
pop
inc
dec
lahf
sti
mov
outsl
and
leave
outsb
cmp
call
adc
xor
sub
pop
test
pop
js
xor
mov
add
fwait
adc
sti
clc
add
xor
aam
add
jnp
sbb
xor
sbb
xchg
stc
mov
cld
in
add
cmc
jne
cmp
pusha
ja
repnz
add
cmp
xor
add
hlt
adc
rsqrtps
jmp
inc
jmp
loopne
lods
push
or
xchg
pusha
ljmp
dec
arpl
out
sbb
in
cmpb
add
lret
movb
cmpsb
add
push
and
or
movsb
mov
inc
das
lahf
insl
in
adc
pop
jmp
clc
xchg
std
mov
stos
mov
aam
mov
jge
rcrb
ja
mov
inc
sbb
mov
cwtl
pop
dec
add
dec
ret
lret
pushl
xchg
mov
inc
push
negl
sbb
or
pop
mov
mov
jo
pop
adcl
aad
xlat
pop
mov
jne
pop
push
hlt
xchg
add
inc
adc
arpl
jne
jmp
pusha
jecxz
sarb
out
stos
adc
xchg
outsb
daa
sub
add
cltd
sahf
xor
loopne
fwait
or
or
or
ja
sbb
mov
jno
rol
inc
mov
lods
movsb
loop,pn
adc
out
pop
loopne
fwait
add
aam
pop
mov
cwtl
shrb
mov
hlt
mov
fdivr
add
clc
push
xchg
cli
aam
ret
pop
ljmp
push
cmp
sub
cmpb
cmc
adc
jbe
add
sbb
add
xor
test
adc
cli
lcall
or
pop
pop
rol
jmp
push
in
ret
mov
sbb
pop
repnz
add
jge
gs
mov
mov
sbb
repnz
jg
aaa
add
repz
mov
jo
pop
or
test
aaa
and
xor
add
fcoml
stos
hlt
in
pop
fcomps
stc
adc
fucomip
inc
mov
ljmp
negb
fwait
xchg
add
adc
sub
fisubs
mov
mov
stc
add
adc
cmp
movsl
testb
mov
in
ja
add
xor
add
jnp
js
mov
leave
mov
pop
sar
mov
or
push
popa
mov
lods
movsb
xor
lahf
lcall
add
add
jnp
sub
std
icebp
mov
sbb
xchg
iret
mov
ficoms
aad
inc
stc
faddl
imul
xchg
hlt
decl
mov
mov
arpl
add
in
sbb
ficoms
gs
loop
push
cmp
ret
jmp
xchg
sbb
sub
leave
add
sbbb
call
out
pop
mov
push
cs
and
push
fs
add
pop
or
mov
add
or
add
addb
and
orl
rorl
mov
ret
sub
xor
add
jb
roll
testl
add
nop
lret
push
ja
ret
add
aam
add
jp
mov
nop
xor
mull
rcrl
leave
push
mov
aas
mov
sub
pop
push
lock
fwait
aaa
loop
xchg
mov
push
rcll
add
sbb
mov
add
push
pop
addr16
xor
mov
jbe
add
loope
mov
mov
mov
add
xchg
push
jo
jbe
add
fdivr
push
add
xlat
pop
lea
push
jp
dec
aam
insb
out
jnp
sti
in
add
out
mov
mov
ja
icebp
inc
jge
mov
or
lock
push
inc
cmp
scas
add
cmp
cld
inc
jg
jecxz
aam
or
loop
nop
subb
ffree
daa
bound
scas
inc
mov
je
add
push
mov
out
add
fdivp
push
lock
lahf
inc
sbb
ss
orb
rcl
lock
add
jns
jno
enter
pusha
and
jmp
xchg
rcrb
add
mov
rcr
sub
add
mov
add
inc
out
or
mov
pop
shlb
jge
push
js
add
fcoms
or
and
add
insl
adc
mov
adc
fwait
imul
push
push
clc
mov
sbb
mov
jo
or
xchg
es
aas
hlt
add
sub
jns
fsubl
in
nop
cltd
les
add
cmpsb
jbe
sub
cmc
pop
int
fldl
jmp
in
jae
add
outsb
and
push
add
inc
sub
hlt
push
push
leave
andl
ljmp
sbb
imul
and
pop
add
not
cld
sti
adc
mov
mov
out
jmp
pop
add
sar
sub
and
sub
add
clc
scas
cli
push
daa
rol
fadds
add
std
mov
jns
mov
and
aad
jbe
sub
jo
das
stos
xlat
insl
gs
adc
sub
pusha
pushf
and
dec
cs
sbb
icebp
repz
push
xchg
adc
jo
adc
inc
int3
dec
mov
mov
sbb
add
sbb
inc
pop
dec
push
add
mov
enter
and
fisttpll
hlt
jge
jo
stos
jp
cmp
jb
mov
jns
xchg
push
cld
mov
add
pop
push
xor
mov
sbb
sahf
lcall
xor
add
movsl
sub
das
dec
rclb
xchg
ja
cmpsl
mov
loop
jb
test
loopne
push
sbb
mov
stos
adc
lock
push
xchg
enter
outsb
shrb
in
jg
jo
mov
dec
sub
mov
adc
or
inc
andb
loopne
icebp
adc
sub
dec
add
pop
loopne
inc
pop
hlt
sbb
loope
cmc
stc
std
jno
add
ss
sti
add
mov
fistps
test
cmp
popl
stos
add
repz
dec
and
out
add
add
add
lret
cmp
xlat
jno
es
scas
cmp
inc
add
mov
out
bound
add
popf
mov
xchg
sbb
sbb
repz
sahf
in
mov
cmp
push
sub
push
in
sub
adc
in
add
lahf
aam
pop
inc
idivl
or
scas
in
arpl
cs
les
mov
sbb
js
iret
mov
in
push
and
ljmp
js
mov
lret
lfs
andb
roll
cltd
shlb
and
add
sub
push
iret
push
inc
and
pmulhw
int
mov
rcr
push
add
ret
movsb
jmp
enter
sahf
mov
frstor
popf
push
aas
inc
mov
jle
add
out
or
add
mov
pop
adcb
ds
int3
cmp
cmpsb
mov
xchg
ds
mov
push
and
pop
inc
out
sbb
adc
fadd
and
hlt
sbb
mov
scas
addr16
and
jo
jle
aad
jl
pop
sbb
shl
lock
cmp
add
push
push
xor
add
sbb
shll
sub
jno
jae
test
mov
repz
fs
rol
out
push
aad
add
fcmovbe
mov
jmp
sbb
inc
clc
rolb
jno
sahf
or
add
pusha
dec
mov
add
test
ret
cmp
pop
lahf
sbb
mov
lds
mov
filds
push
cmp
fnstcw
sbb
pop
adc
test
pusha
inc
adc
fdivl
lock
sub
in
jmp
inc
pusha
add
cmp
daa
push
and
and
mull
jmp
mov
roll
iret
inc
push
add
sbb
push
adc
out
or
jnp
paddq
sbb
sub
push
inc
add
mov
daa
mov
add
xor
xchg
add
into
clc
sbb
test
shll
out
add
subl
sbb
sub
inc
dec
and
mov
mov
shll
sahf
xlat
lahf
mov
scas
pop
and
stc
mov
add
or
cmp
xor
adc
mov
bound
adc
sub
mov
pop
mov
or
jecxz
mov
add
cmp
cmp
and
adc
mov
jns
sbb
subl
std
dec
test
js
add
cmpsb
dec
xchg
xor
inc
add
mov
mov
inc
fs
push
lret
cmc
jbe
dec
movsl
sub
mov
aad
sti
sub
out
aam
mov
fistps
std
int
fistpl
and
dec
scas
pop
push
xchg
dec
ja
add
xor
popa
les
jle
mov
add
aas
aam
add
inc
cwtl
lods
inc
inc
add
ljmp
fisttpll
das
cltd
add
or
stos
push
mov
and
test
pushf
in
inc
add
adc
push
loopne
push
mov
cmp
mov
sub
fsubrl
push
hlt
je
mov
inc
cmp
and
add
adc
cwtl
lods
sbb
inc
ljmp
sbb
pop
and
out
or
add
push
in
push
or
ds
incb
js
inc
add
jg
ja
jp
das
and
mov
cmp
and
push
cmpsb
pop
dec
loopne
imul
sbb
cmp
in
ljmp
cmpsb
jle
add
mulb
fildll
in
push
aaa
fisubl
addr16
out
add
mov
repnz
push
add
jmp
push
addb
dec
jle
scas
dec
mov
je
sbb
add
and
in
das
mov
sbb
addl
xor
dec
lahf
add
fbstp
add
rolb
inc
lock
adc
pop
pop
cld
pop
stos
in
mov
push
pushf
pop
ss
sbb
clc
mov
mov
cmp
add
xlat
outsb
sbbb
add
aad
lock
sub
sbb
add
cmpb
popf
dec
icebp
cmpl
int3
and
jns
sub
push
add
ss
pop
stc
pop
out
xlat
loopne
pmaxsw
lahf
outsl
and
xlat
pop
xchg
inc
enter
add
test
out
and
add
mov
add
arpl
imul
xchg
mov
fistpl
and
add
jg
add
ja
idivb
xor
add
ret
imul
sbb
add
or
mov
pop
xor
iret
jl
jecxz
neg
rol
push
shrl
imul
sub
popf
call
les
mov
inc
cmc
cli
aad
popa
xorb
push
ss
push
rcrl
or
push
ljmp
jmp
mov
add
inc
jg
xchg
pop
push
pop
pop
dec
pop
mov
pop
rolb
add
stos
bound
dec
sbb
stc
push
jae
inc
add
pushf
pop
sub
fbld
lods
xor
mov
into
or
ret
lahf
or
pop
adc
push
jmp
popf
jl
dec
jns
add
xchg
push
pop
push
lcall
cmp
fimull
dec
push
add
lods
in
movsb
fcmovne
rol
out
add
mov
jo
rol
fisubrs
or
arpl
and
inc
xor
push
or
xchg
mov
insl
add
stc
out
push
clc
movsb
add
jp
mov
add
inc
xor
sub
dec
add
pop
mov
mov
xlat
cmp
pop
roll
and
call
xchg
cmp
or
out
mov
mov
sar
addr16
clc
pop
and
add
cmp
inc
decl
xlat
int3
shrb
or
add
inc
and
add
pop
jp
cmc
mov
pop
lcall
cmp
inc
mov
in
add
insl
jmp
out
cmp
nop
or
and
inc
pop
jl
add
scas
outsb
sarl
imul
pop
outsl
addb
xchg
int3
add
pop
out
pop
negl
stc
add
movsl
aad
mov
shlb
mov
stos
jecxz
add
jb
int3
adc
mov
out
or
add
push
xor
add
or
add
add
and
mull
add
mov
inc
sahf
mov
bnd
add
xor
lahf
inc
mov
in
popf
leave
stos
lock
lahf
sub
mov
mov
aad
and
outsl
push
jcxz
pusha
in
js
add
jp
movsl
out
or
add
xchg
xor
add
and
pop
insl
das
jns
xorb
ljmp
pop
pop
mov
dec
and
js
inc
rclb
in
cmp
das
or
fadds
mov
sub
rolb
inc
aaa
cmpsb
popa
add
icebp
add
into
dec
ss
cltd
call
int3
sub
cmp
int3
mov
aam
imul
jmp
testl
js
add
aam
loope
xor
xchg
cmpsl
test
sub
rolb
add
mov
ljmp
inc
into
daa
inc
jo
mov
mov
es
add
ds
cwtl
cmpsl
inc
lahf
aas
fwait
sub
cmp
or
insl
or
jnp
cmpsb
xor
add
into
push
sub
jecxz
xchg
popa
cmp
mov
push
in
add
or
int
inc
sub
fmulp
orb
jg
clc
xlat
add
fildl
and
pop
xchg
push
lret
je
jo
bound
jge
movb
dec
jg
je
imul
jle
jno,pt
sub
movb
mov
jae
daa
xchg
jge
cmp
lock
inc
jle
cld
loop
mov
daa
or
mov
mov
add
xchg
ljmp
loop
adc
sbb
cmc
jb
or
inc
data16
hlt
test
add
push
movsb
imul
adc
jle
jb
add
sbb
push
lret
icebp
xor
pop
int
push
ljmp
cmp
hlt
hlt
fmuls
add
pop
push
adc
adc
ficompl
add
icebp
pop
out
pop
add
mov
jnp
xor
out
xchg
xchg
lods
stc
ret
sbb
push
movsl
rcrb
pop
mov
pusha
sti
adcl
out
pop
jg
es
or
sub
mov
and
xor
stos
mov
mov
add
movb
cld
filds
xor
call
add
add
push
push
fadds
scas
repnz
sub
add
cmc
or
and
jnp
sub
movsl
cs
dec
adc
das
scas
aad
sahf
mov
sbb
cmp
add
test
inc
stos
sbb
call
rolb
aas
mov
and
mov
dec
sbb
sbb
cmpsl
xchg
xor
add
inc
clc
repnz
popa
nop
hlt
bound
pusha
addl
es
push
inc
add
push
sbb
xchg
pop
adc
cmp
mov
push
in
call
movsl
clc
lea
cld
mov
add
mull
fwait
mov
add
xor
pop
mov
add
xor
jns
pusha
xorl
ja
push
add
jle
dec
loopne
sub
add
inc
icebp
fwait
jno
sub
popa
push
popf
push
into
sahf
push
mov
imul
push
push
adc
ret
les
pop
rcrb
mulb
lcall
jnp
fdivs
repnz
js
add
sbb
xlat
nop
rorl
mov
fucom
mov
add
adc
pushf
lcall
add
fsubrs
cld
push
sti
push
pop
mov
scas
push
fnsave
pusha
pusha
rcrl
lods
repnz
push
mov
call
ja
jg
orb
rorl
push
jnp
je
or
cmpl
add
adc
mov
sub
cmovne
jne
fistps
lcall
lods
add
dec
dec
jns
pop
scas
ret
daa
test
popa
das
dec
js
cmp
sahf
cltd
inc
lock
pop
cmpsb
dec
iret
loope
and
clc
in
sub
pop
rcll
rcl
subl
sbb
push
loop
movb
mov
lahf
mov
push
jb
mov
add
aam
mov
pop
pop
adc
andb
jo
add
dec
inc
das
sahf
jl
in
cmpsb
add
aam
sbb
flds
jle
in
stos
mov
xchg
mov
or
call
dec
add
icebp
xchg
jae
cmp
or
push
mov
mov
jmp
hlt
imul
mov
sub
leave
sub
scas
or
ss
sub
mov
pusha
add
std
cmc
in
mov
inc
add
hlt
xor
add
in
adc
popa
xlat
add
xor
pop
dec
call
or
sub
mov
arpl
out
fmull
std
mov
mov
out
adc
adc
cmovle
xchg
lahf
inc
into
call
ja
add
lods
sbb
pop
ds
in
ret
das
mov
cmpsb
adc
rcrl
test
out
inc
pop
gs
mov
std
subb
lock
fstpl
add
pop
push
adc
aam
loopne
xchg
pop
enter
fdiv
add
jne
jp
adc
xchg
push
lea
fnstsw
add
xchg
push
shll
xchg
jo
mov
js
push
add
xchg
inc
scas
mov
shll
jl
sarl
pcmpeqb
test
push
pop
push
xchg
jmp
mov
or
add
aad
dec
cmp
mov
jecxz
dec
cmp
and
mov
add
pushf
mov
test
jp
mov
mov
lods
mov
test
pusha
sub
add
and
shlb
insb
js
add
pushf
jo
add
ja
sub
out
lahf
popa
js
pop
shlb
inc
cmpl
mov
sub
push
pop
repnz
stc
clc
enter
inc
fsubl
fwait
xor
imul
in
pusha
push
test
faddl
movsl
aad
pop
gs
xor
bound
mov
or
xor
add
mov
lods
add
loopne
outsl
fstp
xor
xor
cli
pop
add
xchg
mov
in
fwait
add
push
fxch
pop
roll
xor
mov
in
push
push
sub
arpl
cmp
repz
neg
adc
add
insb
mov
repnz
jno
insl
negl
andb
cmp
addl
call
nop
pop
aas
sti
inc
xchg
inc
push
sub
enter
and
pop
xchg
jb
push
inc
jnp
mov
xchg
in
cmp
adc
popa
ds
or
xor
sub
inc
adc
ds
loopne
sub
fsts
mov
add
mov
sahf
sbb
dec
or
mov
add
push
lock
mov
add
inc
js
xchg
fisttps
out
dec
add
jecxz
xchg
fwait
das
or
add
and
loope
sahf
inc
les
pop
ja
add
rclb
and
inc
filds
xor
pop
pop
add
xchg
pop
or
loop
lods
add
adc
push
xor
pop
test
sbb
in
das
xchg
lret
arpl
cltd
mov
xor
ret
jb
xchg
cmc
xchg
data16
pop
add
pop
jo
loope
adc
add
cmp
mov
out
je
or
hlt
xor
imul
or
adc
xor
and
xchg
or
push
inc
and
mov
cmp
popl
add
leave
jmp
filds
mov
mov
cmp
roll
je
mov
add
fisubs
xlat
add
xchg
mov
and
adc
jmp
mov
dec
dec
call
cmp
fs
dec
hlt
push
add
sbb
movsb
fdiv
push
dec
inc
sbb
sub
cmpsl
movsl
add
cwtl
xor
lock
les
and
in
addb
jmp
push
sub
xlat
gs
add
jnp
in
div
lock
adc
jb
add
inc
into
add
push
mov
sub
push
into
nop
push
movsl
inc
xchg
mov
xor
jnp
dec
and
iret
paddb
jae
loop
mov
sarb
and
sub
fwait
jl
sub
mov
hlt
pop
or
dec
xchg
bound
icebp
adc
mov
stc
and
fdivrs
or
iret
xor
adc
aad
lods
sbb
cld
push
testb
cmp
or
insb
mov
orl
cmpb
cmpl
fbstp
mov
nop
xchg
adc
xor
cmc
xor
pop
orl
pop
push
enter
data16
sbb
or
fwait
or
sbb
add
je
test
insl
sub
hlt
leave
or
dec
or
clc
inc
icebp
adc
add
push
xchg
xor
aaa
mov
out
mov
enter
call
dec
or
push
xchg
cli
inc
nopl
inc
punpcklbw
jb
outsl
inc
and
jbe
aam
xor
xchg
add
lods
pop
inc
jno
clc
cmp
xor
fdivs
movsl
add
cwtl
jns
or
and
mov
fidivl
loopne
dec
xor
stos
addr16
xlat
mov
sbb
sub
cmp
addr16
mov
mov
fiaddl
or
bound
add
and
lock
sbb
add
xchg
add
cltd
jp
push
push
test
sub
ss
test
cmpsl
loopne
scas
pusha
push
adc
inc
in
mov
xor
pop
inc
xchg
mov
lret
lods
test
or
xor
jp
pusha
rclb
mov
mov
js
jb
repnz
or
and
sub
or
stos
loopne
or
and
cmp
mov
push
in
jae
mov
xor
insb
cwtl
mov
int
add
push
dec
nop
subb
ljmp
mov
popf
pop
xor
xchg
in
jmp
mov
lods
js
je
into
sub
aad
mov
inc
jne
bound
sbb
cmp
ret
inc
lcall
leave
and
cmpb
jae
pop
inc
xchg
test
push
sahf
jecxz
or
loop
inc
test
sbb
repz
roll
sbb
cltd
int3
add
call
les
lret
xchg
lods
mov
ficompl
call
dec
shufps
adc
sbb
adc
add
shll
dec
inc
ret
or
fdivl
cltd
or
adc
inc
or
mov
loope
inc
mov
lods
xchg
adc
clc
hlt
adc
adc
pusha
ret
lds
adc
inc
add
and
movsb
call
mov
adc
leave
push
jl
xchg
call
xchg
ret
jmp
incl
popl
xor
das
test
call
punpckhbw
movsl
loope
stos
adcb
push
fs
sbb
test
loopne
lds
mov
and
ds
add
imulb
mov
add
fisubs
int3
push
sets
mov
test
add
outsb
scas
xor
fsubrs
movsb
enter
call
addr16
sbb
sbb
cltd
mov
or
inc
push
xor
push
or
or
sub
repz
sub
dec
out
orl
rclb
pushf
loopne
les
sub
cmp
add
xorb
adc
or
mov
mov
push
mov
insl
sbb
shlb
cwtl
and
and
popf
dec
in
nop
pop
iret
fsubl
inc
clc
mov
cwtl
adc
cmp
sbb
outsl
jo
mov
or
mov
fadds
jg
int3
test
sbb
mov
or
lret
movsb
test
sbb
sbb
shll
sarb
dec
and
mov
push
mov
cwtl
push
movb
xchg
sub
je
push
cmp
rep
xchg
push
sarb
stos
arpl
dec
subb
dec
ror
sub
inc
rolb
enter
or
roll
pop
or
jae
rclb
mov
loopne
add
sub
mov
mov
jae
mov
orb
xor
fwait
aam
into
cmp
test
ljmp
xabort
add
or
pusha
dec
dec
fwait
lret
lods
ds
xor
nop
mov
je
fwait
mov
jae
mov
ret
xchg
or
testb
sarb
push
mov
bound
orb
stos
lds
mov
sahf
cwtl
add
or
iret
out
xor
sbbb
in
stos
push
xor
sbb
aam
mov
out
adc
or
roll
jbe
pop
adc
lahf
sbb
xor
popf
fadds
dec
xor
leave
sbb
add
pop
loopne
and
rorb
mov
xchg
cmp
add
popa
mov
add
cmpsb
sahf
insb
push
adc
jno
xor
aam
or
movsl
shlb
fcoml
fucomp
arpl
sub
jl
stos
lods
sarl
shl
ret
inc
add
and
add
add
inc
or
push
ljmp
sbb
lock
sbb
xorl
mul
jae
sti
stc
inc
loope
pop
adc
or
ret
mov
mov
and
or
or
xchg
popa
jecxz
pusha
pusha
mov
jae
sbb
nop
pop
js
and
mov
push
call
push
inc
in
orb
and
call
cld
xor
adc
xchg
adc
cmc
and
or
out
sub
xor
loopne
xor
cli
push
test
int
adc
cwtl
push
sbb
cwtl
xor
cwtl
push
int3
and
inc
inc
sub
or
pusha
adc
pushf
add
cmc
ljmp
adc
and
adc
ret
enter
std
andb
popf
xor
icebp
in
repz
ret
flds
jne
or
jle
mov
enter
sbb
cmp
jo
sbb
loopne
aad
clc
xor
mov
ds
jecxz
pusha
call
nop
roll
cmp
and
pop
inc
xchg
ds
jo
add
xor
xchg
sbb
rol
adc
and
roll
jl
les
jmp
pusha
adcl
mov
push
add
mov
fwait
push
add
jbe
call
and
xchg
sub
fs
add
xchg
push
dec
jge
jecxz
xor
fdivl
fcoms
sti
int3
js
adc
mov
mov
adc
rcll
push
lea
daa
cmp
or
mov
jmp
sub
cmpb
or
flds
pushf
js
jno
fcomps
mov
js
inc
xor
enter
jge
cltd
adc
imulb
xchg
inc
mov
sbb
cltd
xor
mul
out
mov
push
and
les
sahf
or
cwtl
push
jg
adc
sbb
sub
xor
or
cmp
cwtl
pop
push
js
xchg
and
in
cli
and
mov
pop
sub
outsl
push
or
jno
adc
jo
pop
push
fistl
inc
xchg
adc
repnz
dec
shrb
cmp
stc
jne
test
push
loopne
jo
jne
into
adc
sub
adc
inc
dec
inc
dec
test
push
adc
adc
dec
cmc
shl
sbb
inc
nop
rcr
aas
xchg
mov
repnz
popf
add
xor
mov
test
fsubrp
pusha
dec
push
shlb
xor
lret
pop
add
sahf
cwtl
adc
adc
add
in
jecxz
adc
push
fcomi
or
adc
jbe
xor
les
or
aam
mov
dec
inc
sbb
cli
clc
lock
bound
or
cmp
ret
add
add
nop
lahf
mov
fs
lea
push
or
aas
rcr
xchg
movsb
adc
mov
loope
pop
or
sbb
ret
cli
inc
inc
in
add
or
or
sub
sub
add
loope
adc
adc
jns
sbb
out
xor
inc
mov
add
in
push
mov
orb
aam
andb
jno
jo
ret
add
enter
mov
lret
ja
inc
mov
sub
cld
sub
hlt
fisubrl
push
loope
or
adc
fdivl
inc
mov
lret
test
inc
movb
sub
outsl
push
and
mov
and
mov
or
sbb
cld
or
or
in
sarl
mov
test
shl
xor
mov
lods
xchg
and
add
jo
mov
sbb
pop
iret
lret
push
sarb
lods
test
add
xchg
xor
sbb
or
and
mov
fs
sarb
fdivl
mov
xchg
loop
pmovmskb
push
aas
xchg
xchg
or
jg
and
push
out
cmp
mov
movsb
add
cwtl
loopne
mov
shl
or
add
add
mov
mov
xor
sub
mov
test
xchg
sbb
pusha
sahf
in
mov
shll
sub
sbb
ret
dec
or
xor
addb
adc
ret
mov
and
pop
sbbb
mov
inc
xor
or
ljmp
add
test
gs
cmp
mov
mov
sbb
test
jecxz
and
hlt
add
stc
mov
xchg
or
cwtl
adc
or
jl
inc
cmp
aad
sub
pushf
xor
cmpps
xor
push
push
add
adc
repz
mov
sbb
adc
adc
sbb
pop
sbbb
inc
nop
pop
jo
jmp
sub
shrb
pop
push
mov
push
adc
fldl
inc
inc
add
jge
or
int
and
push
in
dec
add
add
movsb
xor
clc
inc
mov
mov
lods
pop
and
in
insb
xchg
xorb
dec
sub
nop
rorl
pusha
inc
mov
stc
push
ret
push
inc
movsl
mov
rorb
in
les
mov
xor
mov
inc
and
addr16
int3
jno
inc
gs
int
mov
adc
push
or
sub
sub
lds
mov
fsubs
fsubrs
or
aas
sbb
or
xor
add
insb
cmp
fcomp
lods
or
std
int3
je
and
fisubrl
push
adcb
test
xchg
pusha
lods
sub
addl
aas
xchg
jle
dec
push
mov
js
mov
mov
xchg
sbb
sbb
cmpsb
enter
sarb
clc
cmp
add
movsl
sbb
or
xchg
pusha
sbb
int
add
push
data16
cmp
add
or
in
adc
add
sub
outsl
cltd
mov
loopne
std
pop
or
repnz
test
or
add
loopne
testl
pop
or
pop
in
les
and
and
push
gs
mov
add
pusha
pop
sti
mov
inc
inc
lods
pop
insl
push
push
sub
sub
jge
int3
sbbl
xchg
dec
dec
out
jl
lods
inc
or
sub
dec
in
xchg
shr
xorb
xchg
adc
scas
sub
subb
push
cmp
xor
addl
aad
add
mov
jge
orb
xchg
prefetcht0
mov
add
fisttpll
nop
sub
loope
inc
addr16
push
stos
cwtl
sub
testb
lea
cmp
loop
les
cmp
test
int
andb
add
adc
movsb
or
or
add
push
xor
pop
les
insl
cld
add
jmp
xchg
test
sbb
add
mov
lock
or
xchg
mov
push
icebp
add
and
xor
inc
sub
jmp
lods
sti
xchg
xor
movsb
add
rolb
popf
xchg
xor
cmp
lds
adc
ret
xor
sub
ret
cmp
pop
movsb
or
int
or
adc
and
jae
clc
cmc
inc
es
jmp
arpl
xor
int
add
fs
xorb
les
jge
xchg
fs
rclb
loope
inc
or
cltd
data16
push
or
sub
sti
fiadds
mov
cmpsl
ss
push
or
xlat
andl
sbb
arpl
sub
in
add
adc
cltd
adc
xor
out
insl
or
mov
add
mov
push
dec
fidivl
sbb
stc
add
scas
loopne
lods
push
sbb
dec
je
add
and
xchg
aam
add
add
xchg
push
imul
movsb
lahf
pop
inc
cltd
add
mov
sbb
and
xchg
sahf
lahf
dec
test
enter
xlat
fs
int3
or
and
stos
test
cmp
xor
inc
mov
xor
popl
pop
mov
mov
xchg
ds
aad
cmp
test
hlt
sbb
or
or
dec
sbbb
cmpsl
in
das
inc
add
out
xchg
mov
mov
clc
xor
leave
pop
inc
inc
cmpsl
add
rcrb
shll
fmull
outsb
add
nop
cmp
clc
iret
add
adc
fildl
sbb
leave
fwait
call
stc
inc
mull
add
mov
fsubr
es
loopne
mov
inc
outsb
je
ds
pop
or
jl
fs
jecxz
mov
hlt
popa
mov
sbb
fistpl
dec
add
sub
and
mov
fsubl
xchg
out
add
sbb
sub
push
pop
aas
and
cmp
cmpsl
je
adc
fcomip
push
aaa
lahf
jge
add
push
jl
mov
insb
add
xor
fwait
inc
mov
imul
data16
and
push
jp
xlat
into
mov
data16
jo
dec
jnp
jbe
add
clc
in
mov
push
dec
add
movsb
cmpl
xorb
xor
rorl
repz
inc
sub
xor
xlat
test
les
rolb
and
add
in
addb
add
xchg
loopne
gs
pop
lcall
sub
popf
testl
shrb
fadd
popa
cwtl
xchg
xor
outsl
in
push
inc
adc
sbb
addb
cmpsl
xorb
movd
loope
mov
add
add
lds
nop
jo
in
push
stos
jnp
or
sub
dec
adc
fadd
nop
xor
ss
fwait
push
hlt
or
pushf
add
fiaddl
shlb
inc
int3
sub
add
rolb
aad
lahf
push
mov
pusha
cmp
add
aaa
sbbl
jnp
in
pop
mov
add
ja
pusha
mov
cmp
inc
mov
sti
mov
test
std
mov
xor
jnp
xchg
dec
lcall
jge
add
int3
push
dec
pop
cmc
insl
lock
pop
mov
or
in
pushf
test
ss
jecxz
das
add
movsl
or
pushf
xchg
pop
cmp
clc
ljmp
add
jle
mov
popa
aad
mov
fldt
repz
fcoms
icebp
inc
fcoms
or
add
mov
add
jb
mov
sbb
mov
push
out
pop
and
imul
xchg
xor
push
js
mov
dec
lret
inc
add
adc
mov
lcall
rol
xor
add
test
int3
sar
add
jge
int
movsb
xor
or
push
mov
call
repz
mov
flds
rorb
ret
out
mov
mov
xchg
and
jl
or
push
insb
outsl
adc
pop
inc
jnp
mov
pop
cmp
fistpl
bound
addb
orl
sub
add
inc
fldenv
call
push
into
mov
push
adc
cmpsb
jb
je
stc
add
add
sub
pop
pcmpeqb
mov
jle
fldl
push
ljmp
inc
dec
les
jbe
xchg
shll
pop
jns
enter
loope
or
data16
popf
fsts
aas
sub
test
mov
rcrb
inc
push
movsl
sbb
iret
loopne
shlb
add
cmpsl
int3
push
das
outsl
mov
add
imul
iret
add
cmpsb
xrelease
sub
inc
add
or
pop
jmp
imul
outsl
call
pushf
fbstp
nop
add
xchg
adc
and
mov
arpl
jb
faddl
fimuls
rorl
and
cmp
in
test
imul
add
loop
aaa
add
inc
nop
mov
mov
dec
pop
jl
xchg
pop
bound
push
xchg
xchg
or
popa
cmp
fiadds
or
cmc
add
decl
mov
and
push
int3
mov
aad
jb
addr16
pushl
mov
dec
js
add
cmp
add
out
adc
ja
add
repnz
movsb
nop
imul
iret
cmpb
jns
loope
mov
inc
filds
cwtl
scas
or
leave
sbb
dec
mov
xor
das
stos
push
inc
mov
jo
or
in
jns
add
add
aas
mov
int3
inc
xchg
inc
aad
in
lds
xor
add
insb
cmp
nop
xor
fbstp
dec
enter
call
out
jmp
cs
add
dec
insb
mov
test
add
cld
sbb
mov
push
adc
xor
mov
loopne
pop
sti
mov
mov
push
mov
rcr
xchg
push
pop
add
insl
hlt
push
ds
lea
or
andb
cmp
xchg
scas
push
mov
insl
ds
ljmp
and
inc
pop
punpckhwd
pop
jg
push
jle
test
add
xchg
loope
pop
icebp
push
pusha
add
add
pop
loop
lock
add
cld
addr16
aad
or
xor
out
add
add
cmp
imul
pop
ret
es
stc
xchg
icebp
in
xchg
dec
sti
mov
add
jns
cmp
mov
add
cmp
pop
xor
and
lahf
pusha
add
popl
scas
shlb
inc
xchg
jp
testb
add
std
js
cmp
pushf
add
pop
lea
jle
add
fwait
jns
pop
pop
push
and
mov
nop
adc
adc
popa
or
jno
push
in
cld
push
sti
in
cwtl
fildl
push
loope
rorb
add
pop
cld
pop
sbb
test
sbb
cli
repz
add
dec
sub
repnz
dec
sbb
add
jae
add
das
jns
lods
popa
jnp
add
or
jae
jbe
inc
pushf
pusha
cmp
dec
cltd
jns
mov
sbbb
xchg
adc
or
add
dec
mov
adc
or
in
ja
jno
add
mov
outsl
into
stos
jge
xbegin
and
scas
cwtl
cld
and
filds
int3
dec
sbb
cld
add
in
pop
pushf
loop
xchg
sahf
repnz
add
aaa
enter
in
dec
sub
jle
pushf
add
lock
arpl
mov
pop
or
add
and
jo
repz
pop
add
sbb
test
add
or
enter
add
hlt
push
xor
add
sbb
mov
mov
dec
outsl
lods
add
dec
mov
mov
rorl
pusha
push
fiadds
sti
sub
les
in
xchg
fs
push
jae
add
outsl
inc
dec
jnp
add
pop
push
cmp
mov
add
fdiv
mov
mov
cmp
data16
stos
std
loopne
sbb
sbb
jae
pop
pop
cmp
jnp
rol
repz
xor
movsb
cltd
lds
xorb
ret
aam
jne
rcrb
pop
and
push
sub
xlat
and
dec
fmul
add
push
fxch
mov
adc
jle
js
mov
orl
cmc
aad
outsl
add
repz
or
sarl
ds
add
mov
insl
inc
push
aaa
jge
call
jmp
add
fabs
and
or
push
outsb
add
rolb
push
stc
fs
push
push
rcrl
pop
jge
xor
test
fisubs
push
mov
push
jp
or
push
fstps
insb
lea
add
jecxz
sbb
mov
push
fwait
lods
es
fildll
add
dec
push
xor
mov
push
add
cmpsl
addb
mov
cmc
clc
insl
cmpsb
je
cs
jg
add
push
xchg
xor
jl
aam
or
add
cltd
jge
add
xor
cld
andl
xchg
jmp
jl
xchg
push
ret
cmpsb
lcall
add
sub
push
adc
subb
ljmp
into
mov
inc
sbb
sarb
xor
jle
xor
sub
sbb
cmp
je
mov
and
int3
loop
jp
pop
shl
inc
pop
jo
orl
cli
imul
neg
out
jg
pop
sub
mov
add
loope
push
push
jnp
dec
add
pop
dec
les
imulb
sbb
inc
push
add
dec
pop
jle
rolb
xchg
xchg
mov
sub
daa
std
scas
ret
add
fdivp
addb
push
sub
shlb
stos
xor
mov
and
mov
inc
and
add
mov
loope
pop
xchg
movsb
ret
xor
nop
nopl
in
add
and
xchg
mov
ds
movl
sub
repnz
in
push
jl
or
push
ljmp
movsl
enter
cmp
sbbb
pop
out
test
sahf
hlt
sbbb
or
mov
sub
xchg
xor
cld
mov
test
jnp
dec
in
inc
pusha
rolb
pusha
sub
dec
idivb
repz
xlat
jns
call
or
lock
into
push
and
pop
xor
ret
dec
push
and
pop
or
pusha
rcl
add
popa
lock
jb
lret
and
adc
xor
add
mov
fsub
das
xchg
testb
jo
movsl
mov
pop
cmp
ljmp
add
sbb
fildl
arpl
pop
adc
jmp
aaa
fdivl
add
mov
add
out
in
dec
adc
add
jl
mov
add
out
arpl
bound
sub
mov
jo
xor
xchg
stc
mov
mov
mov
jl
add
gs
testl
fcoml
pop
sbb
add
mov
pop
std
pop
xchg
mov
adc
pop
inc
push
imul
loop
push
dec
lock
add
fldcw
push
mov
push
scas
and
incl
fs
lea
enter
ret
orb
shrb
add
sbbb
lds
cld
pusha
das
push
pop
rorl
int
pop
pop
lea
ficoms
test
add
fucomip
jae
push
push
pop
stc
sti
and
pop
push
adc
pop
lods
leave
nop
or
rolb
cli
popa
pop
or
and
insb
mov
add
pop
push
sub
jl
mov
push
lea
or
daa
jmp
jae
call
out
fcomps
pop
dec
das
jle
pop
fstps
rolb
or
ja
add
and
orl
cmpsl
pop
mov
mov
xor
sub
sbb
mov
sub
push
ljmp
mov
cld
inc
cltd
mov
int3
inc
jo
mov
add
pop
cmp
pop
xchg
repnz
test
jle
pop
fs
ror
pop
fwait
sbb
push
sbb
xor
dec
sbb
fmuls
aad
sbb
or
cs
cmp
jmp
mov
str
das
aad
pusha
and
mov
sub
inc
push
add
mov
push
add
sub
lret
scas
add
imul
add
adc
cltd
jle
sub
hlt
or
xchg
add
adc
lcall
cmp
pop
sbbl
pusha
inc
cld
add
pop
dec
mov
mov
add
aam
in
xor
data16
push
xor
aaa
imul
lock
add
sti
stc
cmc
mov
lret
outsb
add
pop
add
and
imul
int3
adc
push
mov
pusha
clc
mov
pop
add
and
dec
je
popf
cli
add
fdivl
add
js
adc
test
shrl
add
in
movsl
mov
leave
xchg
sbb
add
insb
jmp
add
push
and
mov
cli
mov
adc
movsl
mov
cmpl
loop
xchg
xchg
inc
pusha
jo
add
sar
xor
add
sbbb
inc
sbb
dec
or
or
ja
imulb
adc
inc
add
fistps
repz
lds
sub
cs
add
movsb
mov
int
add
mov
add
jge
xor
out
dec
ds
outsb
add
and
and
inc
incl
pop
scas
sub
hlt
dec
mov
aam
jmp
arpl
adc
xor
lods
mov
sub
pop
jo
scas
add
leave
das
add
pop
push
dec
iret
mov
xlat
sbb
jno
cmpsb
scas
xchg
adcb
inc
xchg
mov
mov
mov
or
jnp
inc
adc
jno
push
add
jp
fwait
jne
adc
xchg
push
xor
sarb
test
das
or
addb
cltd
mov
es
int3
and
fdivp
add
movsl
cld
jmp
andb
mov
add
push
repz
repz
jo
add
in
mov
inc
adc
int3
in
addb
aaa
jmp
inc
mov
jg
add
mov
xchg
cld
pop
xor
clc
fcmovbe
pusha
rcll
jge
and
fistpll
cmp
sbbb
ja
rcl
inc
pop
testl
add
pop
inc
sbb
cwtl
lods
add
mov
rcrl
pop
sub
sbb
pop
pop
test
jb
mov
pop
popf
cwtl
fiadds
jns
clc
sub
pop
jb
add
out
enter
pop
inc
inc
jmp
fists
mov
mov
push
lretw
add
add
jge
pop
lcall
out
in
aam
sbb
add
xchg
jge
add
and
push
xorb
lcall
dec
ret
xchg
ds
stos
push
shrb
es
mov
cmpsl
scas
call
fdivrl
push
mov
adc
mov
jle
xorb
sub
roll
mov
lret
cs
in
and
add
divl
cmpsl
add
in
jl
or
shl
xchg
sbb
in
pop
imul
sbb
or
sub
daa
movsb
adc
out
add
scas
add
pop
push
pop
xchg
add
mov
dec
je
sbb
jecxz
movsb
pushf
pop
dec
icebp
cltd
pushl
pop
adc
in
and
xchg
jno
in
subb
icebp
neg
in
sbb
mov
dec
inc
sub
push
mov
add
mov
push
add
sbb
xchg
out
sar
or
xor
push
add
push
mov
mov
inc
jnp
jle
mov
xor
and
add
repnz
add
add
lea
stc
iret
fdivs
add
pop
sub
das
dec
out
addl
in
sub
stos
sahf
xchg
test
fiadds
dec
loopne
arpl
repz
ljmp
test
add
aad
push
sar
push
repnz
fcmovbe
or
notl
test
cmp
clc
aam
xor
fnstenv
push
pop
insb
sbb
jnp
inc
sub
fs
add
mov
push
cmc
or
ror
iret
lret
clc
notb
add
fsubrs
mov
mov
and
in
into
adc
sbbb
add
sahf
push
loopne
dec
pop
add
jmp
nop
lods
sub
adc
movzbl
pop
stc
dec
arpl
add
call
push
sub
pop
addr16
out
loopne
push
mov
cwtl
movsl
add
jnp
ss
pop
dec
add
addb
cmpsl
pop
add
das
fwait
rcll
pop
int3
cs
aas
sub
mov
cli
and
and
aas
out
add
shlb
cli
dec
lods
xor
sub
repz
add
jge
mov
fisubs
add
pushw
jle
dec
clc
pop
cld
add
push
mov
sbb
pop
orb
jb
push
jnp
movsl
outsl
sub
mov
ficoms
lock
adcl
jne
test
std
cs
movsb
add
pop
inc
mov
jmp
sahf
hlt
xlat
add
cltd
jg
fwait
jbe
add
adc
or
inc
enter
cmp
and
mov
xchg
fadds
jmp
dec
xchg
das
test
mov
sbb
adc
dec
xchg
call
inc
xorb
xchg
call
xor
mov
add
push
jne
cmpsb
popf
jbe
jae
add
and
insl
jns
icebp
push
push
sahf
add
sub
out
dec
jno
pop
test
in
add
ja
rcr
mov
sub
movsl
jbe
sbb
fists
lret
add
jle
dec
jne
cmp
sbb
loopne
pop
push
dec
dec
lret
data16
andb
add
mov
cmpsl
ret
sbbl
xchg
or
in
loopne
out
pop
repnz
adc
lds
popaw
int
mov
add
jb
aaa
xchg
mov
jecxz
add
loope
lods
fadds
sub
push
adc
add
mov
add
sbb
jecxz
aad
mov
in
pop
dec
dec
dec
add
arpl
jno
mov
sbb
clc
jbe
call
dec
xchg
add
pop
xor
mov
jmp
fs
inc
test
pushf
or
ja
sti
xchg
jnp
or
add
loope
add
cmovae
mov
pusha
adc
stc
add
loop
dec
mov
add
add
leave
add
mov
xchg
add
jmp
loop
lahf
and
xchg
in
cmp
test
out
or
add
mov
inc
cmpb
icebp
das
or
mov
adc
push
or
cli
xchg
add
js
and
inc
jo
in
add
xor
ret
jb
adc
jno
inc
lret
and
sub
mov
gs
pushf
push
or
mov
call
popf
addr16
add
mov
es
cltd
pop
fldl
inc
movsb
aam
cmp
cmp
rolb
scas
lret
adc
aad
sbb
aaa
jle
arpl
mov
push
inc
mov
mov
lret
add
fs
fxch
or
cmp
jbe
push
pop
adc
inc
push
enter
jns
filds
mov
bnd
jbe
sub
add
xchg
and
mov
add
popa
mov
shlb
xchg
sub
adc
cs
push
fwait
int3
add
inc
sub
adc
jnp
addr16
les
or
add
ret
mulb
sbb
out
add
mov
xchg
xor
push
add
xorb
xor
cmpb
in
cmp
and
cld
sbb
jle
adcl
test
and
xlat
loopne
mov
mov
cmp
jnp
lcall
jle
sarb
mov
or
fildl
adc
inc
fisubl
pop
ret
test
xor
inc
lods
fistpl
pop
xor
or
fwait
jno
sub
ret
jecxz
xor
testb
inc
mov
sbb
pop
out
inc
add
pop
out
push
inc
clc
lret
int3
shl
jmp
push
roll
outsb
push
test
repnz
popa
jo
jge
jo
sahf
inc
les
lock
test
lea
jp
js
add
cmp
loopne
mov
fcoms
ret
xor
into
lods
and
clc
xchg
pop
sbbb
hlt
jno
sar
sarb
jae
andl
incb
inc
add
push
rcrl
pusha
mov
push
mov
mov
cld
xchg
pop
jl
icebp
ret
int3
adc
ja
add
mov
adc
add
or
int3
pop
ret
lods
pop
loope
subb
push
cmp
add
fwait
stc
xor
xor
jno
push
or
rcr
sarl
and
pop
add
fists
add
mov
pop
mov
pop
lahf
fistps
inc
add
gs
add
rolb
mov
or
mov
iret
cmp
mov
lock
add
push
arpl
dec
int3
out
add
in
push
loope
fs
test
push
dec
rorl
inc
pusha
js
repnz
xchg
outsb
lods
jle
jae
movsl
pop
jecxz
fistl
rorb
adc
add
dec
leave
jb
mov
pop
dec
xchg
daa
add
push
cmp
add
ds
out
loopne
push
push
pop
fldl
addr16
mov
cmp
inc
push
repz
lahf
add
mov
aas
adcl
sti
cmovge
cmp
cmp
sub
movsl
jle,pn
test
aad
cmpsb
sub
loopne
add
fnstcw
mov
dec
aaa
cltd
stc
and
pop
cmp
stos
cwtl
mov
ss
add
pop
dec
jg
xor
xor
sahf
cmp
mov
add
dec
push
mov
and
repnz
xlat
pop
cld
dec
or
xchg
cmpsl
dec
faddp
or
sub
fnstsw
jle
cwtl
inc
in
jmp
test
fcmovb
or
pusha
inc
jp
imul
gs
add
mov
add
push
xchg
divb
or
and
bswap
std
mov
jp
add
pop
ja
outsl
stos
and
push
jno
pusha
add
cmpsl
jne
xor
add
adc
push
push
ja
push
sarb
or
in
add
sub
pop
push
int3
mov
cmp
dec
pop
mov
jmp
dec
add
scas
add
lcall
add
pop
in
mov
jecxz
stos
ret
pop
add
test
and
test
lret
add
add
les
sbb
roll
std
fists
stos
inc
push
pusha
xor
je
add
push
loopne
sub
jns
cmp
inc
rcrb
ficoms
jl
pushf
sub
mov
push
mov
pusha
nop
inc
in
aad
xor
add
sbb
pop
add
test
add
shll
clc
inc
mov
hlt
pop
xor
xchg
orl
xor
hlt
sub
adc
mov
jg
jb
add
int3
icebp
adc
push
xor
mov
or
inc
pop
add
in
pop
adcb
pop
pop
and
in
or
add
insb
cld
cmc
inc
out
insl
aam
orl
jnp
add
cmp
sbb
mov
sahf
pop
mov
sub
bound
into
mov
xor
pop
subl
jl
in
shll
and
add
pop
sub
or
insl
add
or
add
sbb
inc
xor
pushf
pop
aas
mov
insb
aad
int3
in
adc
rclb
or
lret
les
xchg
sbb
inc
pusha
add
mov
add
ret
shlb
or
into
mov
pop
pop
mov
inc
inc
jno
dec
cld
ret
sti
xchg
or
push
and
mov
mov
rolb
iret
in
xor
and
add
in
xchg
test
int3
or
insl
fisttps
pop
add
dec
add
sbb
cli
adc
jge
or
ret
dec
add
xchg
loopne
jmp
outsb
out
outsl
int3
add
in
mov
dec
nop
pop
xchg
pop
cmpsb
mov
cld
dec
popa
sbb
lds
mov
scas
cwtl
loop
add
mov
inc
dec
add
insb
shlb
sub
add
xchg
mov
cmp
sub
jge
std
rclb
into
test
rcrb
shlb
inc
xchg
push
and
jmp
and
sub
and
pop
out
xor
push
insb
iret
lahf
data16
in
mov
icebp
push
sbb
es
push
adc
rcll
inc
fwait
add
loop
into
sub
out
or
std
aam
in
pusha
mov
sub
cmp
push
adc
outsl
xor
shl
enter
or
adc
add
pusha
mov
add
lods
mov
into
std
inc
pop
mov
add
clc
push
jae
es
scas
pop
fldt
add
add
andb
inc
repnz
pop
mov
add
sub
icebp
push
fistpl
scas
es
adc
mov
cli
add
mov
lods
clc
add
sub
add
xlat
xchg
std
dec
leave
mov
shr
dec
push
addb
xchg
loopne
scas
sbb
outsb
cmp
mov
ror
jg
or
loopne
xor
inc
sbb
add
testb
arpl
xor
fiaddl
inc
jno
punpckldq
mov
orl
dec
adc
cld
pushf
adc
mov
dec
mov
cwtl
xchg
pop
mov
movsb
inc
sbb
add
rcrb
cmp
push
incl
cwtl
add
pusha
stos
fiadds
lods
fabs
sbb
cmpsl
adcl
push
dec
pop
jae
jns
mov
jge
xlat
lahf
pop
sahf
imul
push
jnp
aaa
pop
rcll
sar
ja
add
fs
add
xlat
xchg
jbe
mov
addr16
fldenv
mov
daa
mov
add
sbb
push
pusha
jo
add
sbb
xchg
or
pop
pop
xchg
enter
add
adc
dec
popa
pusha
in
pop
mov
js
mov
sbb
hlt
cld
inc
adc
imul
fldl
adc
dec
out
xlat
push
outsl
push
gs
movsl
inc
dec
pop
jl
insl
lods
pop
das
shl
or
xor
mov
stos
mov
mov
daa
movsb
rclb
mov
jnp
mov
pushf
lods
fs
cmp
jns
divb
dec
lea
mov
fdivrs
or
inc
push
cmp
xchg
jns
repnz
ja
or
fcomps
addl
dec
rcll
leave
test
lods
popf
mov
mov
lods
shlb
xchg
xchg
dec
add
or
xor
mov
ret
cmp
xchg
mov
aaa
adc
bound
out
push
sub
cmc
lods
add
pop
push
mov
mov
and
mov
rcl
popf
push
test
adc
ss
push
lock
add
push
mov
jp
shlb
add
mov
cmpsb
dec
jl
adc
dec
mov
mov
add
dec
push
push
rorb
cs
mov
pushf
add
adc
dec
add
std
and
adc
shrb
dec
push
addb
mov
pop
cmpsl
dec
orl
rclb
jl
push
loop
sbbb
adc
mov
fwait
dec
std
push
pop
pusha
int
imul
ret
add
sbb
fadd
in
mov
jge
adc
nop
cmc
sub
fadds
mov
addr16
inc
sbb
jecxz
pop
jbe
add
inc
repnz
pop
jmp
test
clc
pusha
sub
mov
andb
jnp
mov
aam
mov
cmc
orb
lock
stc
adc
xchg
and
cmp
adcb
lea
enter
int
cmp
or
mov
sub
xchg
jmp
sub
push
jo
sbb
out
sub
lea
jle
subb
das
in
nop
sub
inc
xchg
xor
sub
repnz
cmp
lock
cmpsl
sbb
fstps
lock
dec
cwtl
je
shl
inc
adc
mov
cwtl
test
inc
mov
data16
ret
fdiv
adc
or
rcrl
dec
add
jb
iret
bound
icebp
add
lret
cmp
fadd
insb
lds
call
add
int3
mov
dec
and
push
movsl
inc
mov
mov
mov
fsts
push
jbe
adc
push
clc
pop
add
aad
or
mov
loope
and
inc
pop
call
xor
pop
aam
or
mov
push
cmpsb
shrl
lret
in
add
jl
sbb
imul
mov
mov
lock
add
lret
aam
lock
aad
pop
lcall
loopne
jns
es
je
adc
mov
and
xor
cmpsb
jae
add
pop
dec
sti
jb
pop
rclb
mov
add
mov
cmp
pop
cld
adc
scas
add
add
mov
xchg
in
test
fwait
call
lret
sub
in
dec
hlt
and
xlat
repnz
cld
in
jg
stos
pusha
mov
int
push
leave
hlt
shl
push
stos
add
or
loopne
mov
add
push
sub
ljmp
jo
faddl
nop
push
ss
hlt
in
xorps
testb
cmp
mov
jge
push
and
std
in
loope
nop
loope
sbbb
mov
jb
add
jae
mov
inc
dec
add
xchg
inc
les
addb
xor
frstor
dec
mov
lea
push
push
imul
dec
inc
cmc
add
repz
lahf
inc
push
into
sub
in
pusha
add
cmp
ss
call
iret
shll
and
add
cmp
lods
add
ja
mov
add
and
cmpsb
pop
cmp
insb
ljmp
cs
fst
xor
xchg
cmp
sbb
add
leave
shll
ja
xchg
xor
add
cs
fidivrs
int
jo
cmpb
imul
adc
jnp
inc
cmpb
leave
add
sbb
cmpsl
add
outsb
rolb
loopne
push
lock
pusha
mov
loopne
ss
mov
subb
fs
pop
fldenv
mov
jno
sahf
add
xor
jbe
nop
push
adc
shrl
insl
add
cmc
mov
xor
in
shlb
pop
pop
cmpsl
sar
xchg
jecxz
cli
add
mov
pop
es
ret
lds
sbb
sbb
hlt
sbb
jb
jmp
adc
sub
out
cmc
aaa
add
sbb
mov
pushf
xor
rcrb
cmpsb
ret
shl
out
loope
pop
mov
jnp
lret
repnz
andb
jecxz
sbb
mov
sub
push
add
ds
and
or
je
lods
add
lods
jbe
or
sbb
xlat
adc
jnp
mov
push
pop
nop
jge
daa
xchg
add
and
loopne
aaa
lahf
out
sahf
adc
popa
cmp
rolb
mov
add
in
je
shrb
inc
and
jns
add
mov
jmp
rcl
xchg
pop
lret
mov
cs
push
test
inc
insb
lahf
faddl
test
and
cmp
pop
jbe
jmp
dec
jle
loop
sbb
aas
pop
inc
dec
mov
je
add
out
cmp
testl
jns
es
mov
addr16
orb
idivl
inc
fisttpl
les
pop
fstp
hlt
repz
xlat
insb
cmpsb
add
and
add
fildl
subl
xchg
imul
pop
add
jne
and
push
cld
and
mov
or
mov
xor
push
aam
repnz
push
cltd
add
add
dec
loope
cmpb
lret
hlt
add
mov
ljmp
xorb
inc
add
jbe
fstpl
add
or
js
pop
out
add
push
and
outsl
rorl
dec
insb
inc
sbb
add
jbe
lret
xchg
add
mov
incl
mov
rorl
add
dec
pop
rorb
sub
mov
fidivl
outsl
lds
add
jae
and
ljmp
add
or
mov
icebp
or
cmp
xlat
add
in
adc
add
mov
add
test
dec
and
sbb
mov
loop
fstl
mul
pop
push
popf
sub
mov
pop
jp
in
dec
mov
or
test
cmpsl
add
mov
lret
pop
hlt
add
inc
das
jg
sub
push
adc
dec
pusha
dec
fmuls
outsb
cmc
xor
jmp
add
icebp
fdivrl
rcl
clc
sbb
mov
fisttps
xor
fnstsw
sub
xchg
scas
fldcw
jo
push
rclb
xchg
jae
push
mov
cwtl
es
mov
cmpl
scas
jns
int
xchg
xchg
loop
mov
imulb
sbb
or
adc
sbb
mov
dec
add
sar
in
pop
ljmp
add
push
and
pop
iret
lret
cmp
mov
or
out
nop
mov
shrl
add
sub
daa
cld
add
mov
shl
stos
add
adc
addb
dec
sub
jge
mov
adc
mov
int3
rol
push
or
or
rorl
jno
les
cli
cmpl
cld
xlat
testb
mov
aaa
das
out
sti
lcall
mov
add
mov
insl
pop
dec
mov
cmp
aam
int
stc
inc
xchg
xchg
jl
add
pop
xor
fcoms
xchg
pop
mov
adc
jbe
add
ss
imul
and
inc
dec
or
mov
fs
in
or
push
enter
loop
add
flds
pop
adc
inc
cmp
xchg
into
jae
add
jnp
test
aaa
add
xchg
popw
add
mov
addr16
jge
pop
icebp
adc
jl
loope
loope
xor
insb
loopne
cltd
jmp
out
jae
push
xor
and
call
and
test
add
cwtl
dec
fnstsw
cmp
enter
xor
push
dec
test
sub
mov
add
add
xor
xchg
sbb
repz
enter
add
add
sbb
fwait
push
cli
in
mov
scas
mov
jp
ljmp
lods
add
add
mov
pop
pop
insl
pop
adc
out
daa
mov
stc
add
push
sahf
cld
shrb
loopne
add
mov
fisttps
mov
push
inc
lock
add
vmread
sub
das
xchg
insb
nop
inc
cmpsb
stos
jae
add
sub
jb
mov
clc
xor
out
cmp
jmp
inc
rcrb
jne
pushf
pop
andb
jl
inc
sbb
lods
lcall
scas
adc
add
add
dec
jno
and
inc
xchg
cmp
test
pusha
call
jbe
mov
push
int3
fwait
aam
icebp
aad
test
add
adc
adc
xor
push
mov
lret
cmpsl
aaa
out
inc
nop
cmp
insl
not
add
dec
dec
pop
add
mov
and
pop
xchg
push
or
ds
mov
and
fisubrs
add
aas
rcll
icebp
fwait
cmp
sti
out
mov
adc
fisubl
push
xchg
push
add
por
mov
mov
xor
jno
dec
mov
scas
sarb
pop
lods
mov
int3
xchg
push
mov
fcomps
add
jp
sub
roll
push
pop
or
jb
popf
push
add
pop
gs
imul
cmp
add
testb
mov
cmpl
add
insb
add
dec
orb
xor
add
push
fimull
add
dec
mov
cmp
jp
loopne
out
jl
pop
xor
andl
xchg
aaa
nop
in
inc
mov
xor
in
and
dec
loope
js
add
or
stos
int3
cmp
das
lahf
aas
lret
stos
mov
pop
mov
movb
lret
imul
pop
movsl
and
icebp
mov
add
lret
test
pop
jle
pop
xor
add
sub
adc
pop
leave
in
dec
jo
sbb
or
cld
and
add
and
add
sbbb
add
data16
add
cmp
ds
out
xor
xchg
call
rolb
sbb
or
jge
mov
push
add
xchg
mov
dec
jbe
and
cltd
push
test
fwait
cmove
jne
add
mov
inc
imul
jl
or
popa
mov
pushf
sub
adc
lods
scas
mov
dec
xor
add
sbb
jae
xlat
mov
push
add
clc
sbb
add
lea
xor
add
aaa
mov
and
add
je
enter
loop
pop
arpl
xlat
pop
sarb
add
pop
dec
imul
pop
aad
cmp
cmp
push
xchg
sbb
nop
add
cli
cmc
sti
add
mov
lea
push
jne
fldenv
in
fidivs
addr16
lods
add
push
sbb
mov
fs
xchg
sub
inc
clc
dec
sbb
shlb
push
addb
cwtl
sbb
pop
ret
add
push
xchg
xor
sti
imul
xchg
jge
add
xchg
sbb
pop
mov
cmp
gs
add
iret
orl
xor
add
sbb
sub
ds
mov
push
imul
add
fdivs
addr16
pop
icebp
mov
add
xor
xchg
stos
enter
jbe
mov
pop
jg
sbb
or
popa
push
notb
inc
sub
pop
imul
xor
jecxz
fwait
add
fmuls
in
decb
arpl
sbb
add
push
insb
and
jmp
add
js
cmpsb
stos
cmp
addr16
in
nop
jns
add
push
jg
outsl
sub
or
and
mov
in
add
adc
lea
in
jbe
add
testb
inc
add
xlat
pop
gs
push
add
push
mov
lods
sti
and
cld
adc
rcr
pop
cli
mov
mov
add
in
and
rcrl
aam
in
inc
pop
pop
mov
inc
cmpsl
pop
out
sub
sbb
or
aas
sbb
and
out
add
arpl
es
mov
adc
lock
inc
sarl
jno
sbb
ror
hlt
iret
cmpb
fmuls
in
pop
or
xor
mov
add
inc
mov
mov
enter
push
imul
mov
in
pop
add
and
sbb
adc
add
lcall
shlb
divl
and
jns
adc
scas
rolb
ds
dec
test
and
addl
test
jl
sahf
add
aas
stc
add
mov
scas
fldl
shlb
push
fimull
dec
add
xor
clc
jecxz
in
sub
jmp
mov
sbbb
and
jle
imul
sahf
pop
mov
mov
cmpsl
jno
cmc
mov
mov
xor
out
jp
add
dec
push
rcll
jmp
push
mov
sbb
and
add
sti
sub
add
pop
fwait
mov
outsb
cmp
sbb
add
cmp
in
inc
dec
or
push
sbb
or
cmp
or
adc
pop
xor
out
sub
inc
xchg
cltd
daa
jns
in
cli
lock
add
stos
pop
mov
mov
add
add
hlt
dec
lret
jae
add
loope
in
pop
pop
jb
add
pusha
push
leave
jnp
xchg
push
add
sbbb
mov
mov
xor
or
jge
test
mov
rcrb
mov
mov
or
addb
xor
jecxz
loopw
fsubs
mov
je
fisubl
dec
pop
add
cmp
adc
xorb
filds
cli
outsl
stc
add
dec
xchg
aas
add
dec
xchg
enter
imul
sub
mov
jmp
cmp
add
pop
dec
pusha
dec
test
call
fistps
add
xor
add
repz
dec
mov
test
addb
iret
lcall
std
test
push
stos
xchg
pop
push
or
ret
lea
add
roll
cwtl
gs
loopne
cmp
push
jae
dec
add
les
repnz
pop
push
or
jno
iret
test
inc
fwait
sbbb
xor
call
jmp
cmp
or
cmp
imul
jnp
mov
movsbl
jns
ret
loopne
aad
pop
xchg
mov
mov
cmp
nop
add
arpl
lock
or
and
or
cmp
sub
sbb
inc
add
ss
add
int
daa
jge
jp
pop
xchg
sbb
scas
jle
sbb
cmp
jnp
es
jb
pop
adc
add
nop
hlt
pop
jle
sbb
roll
or
les
jno
mov
add
std
jge
jae
pop
sub
jb
cmc
push
add
jmp
xchg
cmp
ds
and
mov
fsubr
fucom
rcr
jp
add
cmc
xor
bound
enter
mov
ds
in
cld
xchg
dec
flds
xor
adc
movsb
int
daa
gs
sbb
adc
add
repz
movsb
in
xchg
sti
test
lock
add
jnp
pop
xor
mov
ret
inc
lcall
lahf
lds
int3
repz
hlt
and
insb
add
add
jp,pn
pop
pop
inc
inc
shlb
mov
add
cmpsl
popa
scas
ret
addb
inc
aam
add
nop
hlt
stos
xor
lods
pop
add
popl
scas
stc
shll
fmull
fldl
outsb
xor
jno
popf
push
adc
jle
lods
rorb
xor
adc
inc
int3
push
pusha
xorb
cwtl
test
aas
add
xchg
jns
xchg
imul
aam
adc
and
stos
adcl
xchg
add
sub
jle
ljmp
add
sbb
add
int3
stos
cld
insb
xlat
add
cltd
fidivrl
pop
jb
add
daa
hlt
jns
notb
mov
add
push
adc
add
lock
dec
cmc
add
das
cwtl
sbb
sbb
add
and
test
test
dec
adc
inc
cwtl
adc
add
mov
nop
repnz
add
test
hlt
negb
add
jecxz
xchg
test
add
ds
cmp
inc
push
out
dec
xor
and
add
cmp
xor
je
jg
mov
add
popf
adcl
add
testl
mov
add
and
push
das
mov
rclb
and
add
out
fsubrl
mov
add
mov
sbb
out
push
mov
hlt
jle
aas
jae
cmpb
out
or
add
lods
xchg
add
mov
push
add
loope
test
mov
stos
push
loopne
cmp
pop
pop
sbbb
fistpll
lods
dec
cltd
flds
mov
arpl
xlat
pusha
add
xor
aad
mov
dec
sbb
scas
mov
call
mov
filds
decl
imul
pop
add
pop
out
into
jg
mov
xchg
inc
xor
iret
mov
rcll
fidivrs
add
lret
sahf
fs
ljmp
rcrl
movsl
add
adc
jl
or
mov
leave
int3
mov
add
dec
fwait
add
sub
repnz
aam
std
cmpsb
orb
add
pop
mov
movsb
inc
andb
push
add
pop
push
lea
mov
sub
dec
or
andb
add
repnz
outsb
push
mov
jno
lods
mov
aam
push
pop
lret
mov
loopne
pusha
icebp
xor
gs
movsl
cwtl
rorb
fnstcw
pop
mov
add
sahf
sub
jo
inc
cwtl
icebp
add
sbb
into
add
xchg
mov
xchg
or
int
ret
or
push
fidivrs
dec
xor
fstpt
mov
dec
scas
pop
je
mov
add
dec
xor
mov
cltd
add
stc
mov
rclb
bound
int3
pusha
mov
and
rclb
popl
mov
add
jo
movsl
sub
sub
ret
adc
push
adc
jmp
or
and
sub
repz
inc
mov
call
sub
or
cmp
xor
push
in
sbb
xchg
cmp
or
and
push
rolb
mov
pop
rcll
mov
add
lret
dec
call
movb
mov
sub
repz
mov
cltd
adc
fiadds
sub
leave
cmpsb
dec
add
adc
mov
dec
jecxz
sbb
testb
cmp
sarb
jp
xlat
scas
sahf
mov
enter
out
rcrl
je
and
inc
or
adc
and
jbe
outsl
jnp
lahf
lods
push
and
pmuludq
faddl
nop
inc
cmp
pop
leave
and
and
pop
xchg
test
or
push
js
fcoms
and
popf
movsb
push
add
cmp
cmp
fcmovu
xor
jg
mov
sub
add
in
inc
push
cwtl
icebp
dec
pop
pop
mov
lock
lcall
xchg
pop
lret
stos
add
cmp
add
icebp
inc
xrelease
aaa
aas
fs
stos
sub
lea
js
or
out
dec
adc
add
push
daa
lock
pop
lock
clc
or
call
add
mov
sub
insb
in
xor
loop
mov
sub
push
repnz
cs
mov
popa
xchg
inc
mov
ret
add
adc
add
in
aas
outsb
sub
or
sarb
xorb
dec
dec
pop
push
inc
push
jl
push
lret
sbbb
add
jno
repnz
xchg
xchg
test
pusha
aas
jge
outsl
mov
add
or
loopne
imull
lret
mov
add
adc
jns
add
sub
cmp
leave
not
adcl
orb
rolb
fisttpl
pop
mov
cmp
mov
mov
cmp
adc
xor
icebp
in
add
movb
pop
clc
mov
cmpsl
dec
adc
xor
push
sub
and
inc
das
lds
push
cld
out
inc
arpl
xlat
dec
push
sti
lcall
mull
scas
add
lahf
lea
cmp
pusha
pop
or
mov
leave
js
add
dec
xor
mov
adc
ds
bnd
sarl
out
cmp
stos
sbb
jns
roll
int
test
pop
rcrb
out
add
imul
dec
adcb
repz
aas
bound
add
psrlq
inc
and
jnp
add
jle,pn
jnp
nop
insl
pop
loope
mov
pop
loopne
mov
call
mov
das
xchg
push
jne
fmuls
add
nop
xor
adc
addb
icebp
xchg
push
adc
mov
xchg
dec
inc
pusha
stc
cmp
mov
mov
sbb
mov
hlt
bound
push
mov
pop
mov
mov
repz
aaa
add
jae
inc
lods
shrb
cmp
sbb
add
stc
es
cmc
sub
xor
shrl
arpl
adc
out
add
mov
aas
or
jns
sbb
add
icebp
inc
outsb
cmp
jne
pushf
fwait
pop
xchg
rolb
outsl
pop
and
test
sub
or
fisubl
mov
mov
pusha
dec
js
insl
mov
cmp
rolb
cmp
nop
xor
pop
xor
xorb
add
in
mov
jbe
prefetchw
insl
jnp
mov
ret
add
xchg
popf
hlt
imul
xchg
add
xor
add
rolb
add
aam
and
xor
inc
adc
push
lret
daa
push
pop
arpl
rolb
inc
subl
dec
jnp
sbb
ja
mov
xchg
aad
xchg
pop
inc
clc
sub
adcl
mov
sub
mov
fsubs
cs
mov
add
sub
add
mov
adc
jno
add
jns
int
mov
pop
add
pop
das
jbe
pusha
stos
add
xchg
push
push
add
cli
dec
or
ret
loopne
mov
pop
inc
push
sar
pop
pop
add
pop
call
adc
fnsave
ljmp
push
push
bnd
cs
jmp
shl
fldcw
loopne
pop
iret
stos
push
lret
clc
push
mov
push
movsb
lea
add
jae
xor
dec
add
cmp
sub
push
or
rcll
repnz
js
inc
hlt
pop
shr
pop
in
add
xorl
mov
inc
mov
pop
lahf
cli
or
mov
inc
push
or
pushf
pop
fnstcw
negl
sbb
mov
call
add
out
fcompl
and
imul
push
add
fdivs
lahf
sahf
xchg
dec
mov
or
mov
sub
loop
sti
cwtl
ret
xchg
dec
add
or
inc
mov
xlat
add
outsl
out
fsubs
jg
or
inc
ja
add
aas
pop
outsl
jb
cmpsb
ret
add
and
out
xchg
lods
mov
jne
sub
add
arpl
addr16
cwtl
rcrb
add
mov
cmpb
inc
jae
loopne
subl
cli
adc
xor
pop
std
arpl
jne
jge
and
pop
les
add
repz
scas
mov
int3
cmp
lea
mov
add
add
stos
xchg
fldl
mov
mov
decl
lret
sbb
dec
push
pop
jbe
insl
add
add
into
insb
xor
inc
ljmp
adc
inc
add
into
dec
cmpsl
mov
cmpsb
movsb
jne
adc
add
orb
das
push
in
movsb
lret
jp
jecxz
shll
jb
pop
mov
mov
addr16
filds
pop
add
adc
cmp
adc
pop
xchg
jae
xor
push
cmpsb
iret
inc
xorl
inc
add
imul
sti
jl
and
arpl
movsl
mov
mov
inc
add
jmp
fadd
icebp
add
arpl
out
loopne
test
or
cs
mov
in
pop
adc
ficoms
mov
iret
or
cmp
mov
das
mov
sub
mov
inc
cmp
ljmp
cltd
es
jbe
add
in
insb
sbbb
dec
and
jle
out
add
sbb
xlat
and
xchg
mov
jo
cli
fmulp
add
stos
jno
cmp
js
add
mov
add
rclb
jecxz
lods
add
mov
jbe
add
inc
inc
add
inc
fildl
mov
imul
push
xchg
and
push
xor
jo
mov
shll
xchg
lock
cmpb
nop
imul
add
shlb
dec
lcall
in
lds
jno
add
out
aas
inc
push
mov
add
cmpb
sub
ss
adc
mov
daa
or
xchg
adc
loope
add
sbb
xchg
bound
pop
ss
add
int
lods
pop
daa
testl
cmpsb
pop
ljmp
lret
addb
xchg
mov
xchg
sbb
jg
jae
sarb
or
push
lds
pop
pop
push
add
cmpb
into
xchg
sti
bound
add
push
inc
dec
pop
xor
xchg
movsb
in
test
sbb
or
jnp
jg
sbb
pushf
stos
mov
cmp
jne
pop
xor
push
inc
inc
mov
rorl
ljmp
icebp
in
movsb
mov
mov
lods
mov
imul
inc
inc
mov
push
sbb
es
cld
xor
sub
mov
xchg
cmp
call
imul
or
rclb
les
mov
mov
mov
leave
mov
fwait
xchg
or
lods
add
mov
add
cmp
pusha
stos
loop
mov
cwtl
out
scas
adcb
cmp
or
lods
xor
dec
add
inc
mov
push
dec
cli
adc
adc
add
test
jno
into
sbb
insb
nop
sub
add
fists
inc
add
lcall
xchg
pop
out
call
lret
adc
pop
add
out
fmuls
pusha
fmull
ss
sbb
movsl
repnz
sbb
jae
out
sub
hlt
adc
test
hlt
mov
pop
add
out
les
lcall
repnz
lods
test
shll
or
xchg
cmp
leave
mov
call
out
add
repnz
testl
pusha
sbb
loopne
dec
xor
mov
or
add
inc
aas
arpl
rolb
mov
pop
gs
or
add
mov
pop
adc
add
repnz
sub
cvttps2pi
addb
lcall
add
in
xor
add
imulb
fadds
push
jg
test
iret
rorb
in
mov
xchg
cmp
add
dec
bound
cmpsl
mov
or
adc
cltd
jl
xor
movsb
test
fadds
test
adc
loopne
jb
add
mov
rorl
ds
rcrb
jbe
jae
add
into
add
add
ret
fs
push
setae
xlat
jp
aad
xchg
je
pcmpeqd
mov
inc
add
mov
dec
xor
aad
jmp
adc
arpl
cmp
add
shrb
fildl
cmc
cs
icebp
mov
pop
lods
adc
jle
add
sub
pusha
lret
clc
mov
lret
add
jo
mov
adc
add
sbb
jp
inc
add
push
daa
cmpsb
rorl
add
es
jbe
aaa
xlat
dec
and
mov
add
into
in
mov
adc
add
in
push
cmp
ss
out
cmp
mov
dec
inc
movsb
outsl
adc
add
or
ret
ljmp
or
pushf
and
push
and
loop
sub
push
adcb
popf
add
bound
sbb
jb
mov
push
sub
out
pop
xor
add
jge
loopne
pop
sub
mov
rcrl
jecxz
mov
mov
outsl
mov
mov
cmp
cld
and
enter
cmp
xor
arpl
insl
rclb
sbb
or
in
adc
pusha
int
cmp
add
stc
mov
xor
adc
mov
pop
mov
rol
sti
sub
pushf
dec
xchg
mov
loop
int3
scas
adc
jno
dec
push
pop
lea
shlb
sti
dec
xchg
insb
add
data16
dec
xor
push
mov
shl
or
mov
xlat
add
daa
and
mov
orb
push
and
sbb
xchg
cmc
sub
sbb
add
xlat
imul
inc
push
add
mov
leave
shlb
ficompl
dec
sub
add
loop
bound
push
sbb
call
fcoms
cmp
in
cwtl
lds
mov
mov
pop
pushf
mov
sbb
aad
push
ret
and
xor
in
stos
sbb
xlat
xchg
add
inc
out
jae
or
add
or
test
movb
pop
pop
insb
mov
sub
inc
shlb
adc
push
fwait
dec
inc
pop
loopne
sbb
popf
in
in
les
cmp
inc
cwtl
test
in
or
inc
inc
dec
xor
mov
sbb
mov
fsubs
mov
bnd
fisttps
sub
push
mov
adc
xor
hlt
mov
push
xor
and
sub
and
add
es
sbb
xchg
mov
mov
lods
flds
outsl
pusha
cmp
lcall
into
jge
inc
mov
xor
push
mov
fisubs
add
mov
shrb
pop
push
lods
incl
lcall
xor
pop
movsl
xchg
add
push
sbb
ljmp
ret
add
mov
int
jne
cmpsl
test
inc
xor
pusha
xor
das
mov
mov
add
pop
or
add
jns
mov
lea
pushf
mov
cmp
mov
xchg
aam
or
dec
iret
add
in
js
shlb
add
hlt
mov
cmp
inc
push
scas
add
lcall
inc
frstor
test
inc
push
inc
sub
adc
add
pop
xchg
inc
fwait
cmp
les
push
add
in
add
add
loope
test
out
jae
cmpsb
cmp
jg
jb
add
fidivrs
add
xchg
dec
and
in
mov
aad
mov
push
sub
cmp
inc
cmp
loopne
inc
add
cltd
mov
add
or
loop
mov
cmpsl
mov
jmp
jge
xchg
out
insb
imul
jo
mov
mov
pusha
fisubs
push
and
aam
jp
inc
add
or
push
mov
add
sbb
aam
out
jne
iret
xor
mov
xchg
dec
jl
cwtl
stos
sbb
jecxz
sbb
add
adc
shrl
jl
push
pop
les
sbb
mov
jb
or
add
adc
inc
pop
push
outsl
lahf
pop
testl
ss
lcall
push
test
xchg
xor
or
or
push
add
mov
xchg
sub
inc
pop
loop
inc
mov
jno
in
xchg
push
adc
and
out
cld
iret
mov
repnz
add
inc
add
dec
in
shlb
xchg
sbb
ds
loopne
call
mov
leave
std
aam
repnz
xor
mov
pop
dec
rcrl
adc
dec
pop
pop
add
sbb
jo
adc
add
jp
mov
add
pop
mov
adc
out
add
mov
cmc
cmp
inc
push
lret
mov
add
dec
aas
jmp
push
add
in
scas
cli
mov
jg
ljmp
das
add
movsl
aad
mov
xlat
cmpsl
icebp
mov
inc
fistpll
in
std
and
test
sbb
mov
xor
mov
push
test
sbb
add
add
pop
or
stc
mov
and
imul
push
cmp
les
inc
add
lea
loopne
mov
mov
fidivrs
or
add
xor
inc
mov
dec
loop
pop
test
inc
mov
leave
and
pop
mov
fldenv
mov
xchg
or
fiadds
incb
xorl
repnz
rclb
es
fiaddl
xchg
lret
lock
call
mov
lahf
cmp
add
lods
xor
xchg
sub
movsl
mov
sub
xlat
inc
notl
add
loop
add
fistl
mov
jg
in
pop
add
testl
push
sub
in
sbb
jo
orb
sub
rcll
jns
js
insl
pop
lea
sub
cmpsb
jno
lret
cmp
dec
loopne
push
mov
add
sub
push
and
push
add
sub
jg
outsb
jne
and
push
xor
neg
in
stos
inc
mov
inc
mov
js
add
xchg
rcrb
adcl
jne
mov
mov
or
add
int3
cmpsb
in
rolb
popa
xor
jns
call
add
jns
push
jmp
jle
movsl
jae
fildl
xor
add
in
mov
sbbb
jmp
cmp
lods
and
cmp
add
fsubrs
sub
jl
ret
sub
mov
cld
mov
mov
lods
aaa
cwtl
sbb
mov
adc
mov
pop
cmp
add
add
jb
jne
popa
cli
enter
rcrl
add
test
imul
jge
lret
negb
mov
xor
rorb
adc
cmp
mov
pusha
mov
add
or
add
imul
add
nop
add
xchg
xchg
xchg
xor
adc
cs
mov
cmpsb
push
xchg
fcomps
and
rcr
add
sbb
scas
das
sbb
pop
insl
mov
sbb
or
mov
aas
pop
xchg
add
xchg
ret
scas
outsb
pusha
pushf
cmp
nop
adc
aaa
pushl
clc
add
sub
jo
je
add
jmp
pop
popf
pop
inc
xchg
xchg
fwait
sbbb
or
enter
clc
dec
mov
adc
cmp
pop
insl
add
sbbl
pop
sahf
pop
push
neg
sbb
shll
xchg
ficoml
rclb
add
sbb
mov
xchg
ficompl
add
sarb
jbe
mov
faddl
loop
scas
ljmp
push
jl
add
loope
add
insb
mov
lret
popl
or
mov
out
xchg
sub
mov
push
add
or
in
lock
sub
addb
sbb
sbb
push
jmp
iret
add
pandn
push
mov
clc
test
inc
in
mov
sti
xor
incb
sbb
stos
sub
scas
shl
or
jb
and
push
inc
add
ljmp
rcl
mov
jo
jne
add
gs
lahf
or
mov
repz
les
faddl
xlat
test
add
add
jnp
jns
out
cmc
imul
adc
or
pushf
add
sub
mov
mov
push
xor
mov
gs
es
addr16
jl
mov
popa
testl
mov
pusha
jne
scas
aam
std
mov
pop
and
in
rolb
leave
fnsave
add
clc
and
adc
inc
push
inc
mov
add
cmp
cli
inc
sbbb
add
adc
and
xchg
and
sar
jae
cmpb
adc
hlt
cmpsl
leave
idiv
add
adc
call
fxam
orl
fwait
add
cmpsb
cmp
jmp
inc
lret
cmp
adc
add
or
int3
rclb
jmp
pusha
lea
jge
mov
xor
push
and
sbb
cs
xchg
jle
sbb
add
rorb
jg
add
lds
push
scas
inc
pop
add
fistl
loop
test
testb
mov
sbb
aaa
fmull
or
addb
test
addl
mov
mov
cmp
ret
push
fs
call
js
jno
or
aad
xor
iret
cltd
cs
lods
add
xchg
push
mov
pop
add
cwtl
xor
add
dec
lods
aam
rorb
jnp
jl
btsl
loopne
les
arpl
aas
scas
andb
add
pop
add
aam
mov
scas
mov
adc
stos
pusha
sti
das
lahf
dec
lret
xchg
mov
pop
sbbl
fdivrs
mov
lea
sbb
imul
mov
lods
cmpsb
lods
js
jo
mov
jecxz
ret
cs
add
in
ds
pop
sarl
repz
and
add
fstpl
cmc
fsubl
and
jo
enter
sti
int
in
add
push
call
outsb
adc
dec
jmp
or
add
inc
pop
lahf
jge
sbb
sub
enter
add
or
push
mov
xchg
repz
or
mov
add
mov
cmc
mov
les
cs
sbb
das
mov
add
repnz
in
push
mov
hlt
loopne
xor
decb
nop
outsl
in
mov
cmp
in
cmp
push
hlt
add
into
cmp
enter
call
mov
sbb
cmpsl
xchg
add
mov
add
sbb
add
jb
cmp
out
push
fisubrl
push
lods
pusha
fcomps
popf
add
cmp
mov
shrl
outsb
add
insb
mov
sbb
cmp
sbb
add
jle
mov
dec
loop
in
arpl
cli
sub
daa
xchg
add
cltd
pop
pop
mov
flds
ret
add
imul
or
jb
mov
insl
int
adc
loope
fnsave
and
add
test
jo
movsl
add
jecxz
out
cmp
add
rolb
aad
ret
mov
inc
mov
dec
mov
cli
decl
lahf
pop
clc
mov
mov
push
test
fsts
adc
and
js
roll
scas
ss
pusha
lcall
and
daa
ljmp
inc
mov
gs
add
aam
dec
cmp
loopne
jae
jbe
shl
pushf
xchg
fldt
jmp
add
cmp
in
lea
movl
xor
xchg
ror
jg
add
mov
in
pusha
jecxz
add
clc
js
jb
sub
adc
fwait
mov
movsb
rcrb
aad
sbbl
pop
mov
push
ret
lods
xor
xor
sub
sub
outsl
or
jno
sbb
lock
imul
dec
xor
cmp
pushf
jg
add
push
icebp
lock
cmpsl
adc
mov
int3
test
shlb
bound
adc
cmp
lods
sub
lcall
subb
xlat
loop
nop
push
sub
push
xchg
fadds
xor
pop
lahf
pop
movl
arpl
repnz
sbb
fiaddl
xchg
in
dec
mov
lret
push
jnp
mov
cli
add
fcomps
adc
jle
add
inc
pop
andl
add
data16
adc
pop
add
dec
dec
into
cmp
jmp
push
pushf
lea
add
enter
in
xchg
cmpsl
inc
mov
call
push
mov
cmc
xlat
lock
shr
xchg
add
fs
in
sbb
dec
adc
repnz
mov
pop
pop
mov
push
xchg
add
subb
sbb
mov
fsubrl
inc
cmp
in
jmp
dec
outsb
adc
add
movsl
cwtl
aaa
mov
call
lret
out
and
or
pusha
add
test
adc
adcb
mov
shll
add
pop
iret
lahf
add
mov
xor
fstp
push
mov
test
lds
adc
sub
rcrb
push
filds
adc
and
lds
lret
aaa
mov
dec
dec
add
nop
ja
mov
push
outsb
rcl
pop
lods
add
push
lcall
jne
xchg
and
add
scas
lods
sbb
fs
xchg
cli
dec
add
sbb
fs
ret
fldl2t
dec
inc
mov
jne
jns
pop
push
add
push
jmp
mov
nop
hlt
dec
pop
out
addb
or
mov
sbb
xchg
movsl
sahf
aam
xlat
add
pop
cmpsb
push
bound
pop
add
ss
ud2
push
fisttpll
pusha
js
add
das
fsubrs
js
xor
les
push
cmpl
stc
mov
and
sarl
cmp
add
mov
pusha
inc
mov
jge
stos
addr16
pop
out
add
mov
jae
pop
and
aas
data16
ss
imul
cli
mull
fwait
scas
fcoms
shl
lock
sub
test
pusha
repz
pop
jne
shll
and
movsl
jbe
sbb
dec
scas
filds
cwtl
mov
mov
xchg
push
cmp
and
test
nop
pushf
out
push
fiaddl
out
arpl
xlat
xchg
xchg
jl
in
aad
loope
cmp
or
jno
add
aas
imul
add
jns
shrb
pop
jp
add
mov
push
clc
add
repnz
cli
add
pop
inc
and
xchg
iret
add
dec
in
pop
test
rcrb
arpl
add
aas
outsl
mov
int3
xchg
inc
add
mov
adc
inc
dec
sub
add
cli
gs
add
enter
mov
mov
movsl
std
movsb
mov
pop
dec
fwait
pushf
imul
subb
dec
les
or
not
inc
jb
mov
mov
pop
ret
scas
dec
sbb
ds
add
pushf
mov
enter
aas
cmp
add
sub
fcomip
xchg
pop
dec
loopne
add
in
sub
ret
xor
hlt
adc
adc
add
jg
push
cmp
movl
mov
mov
frstor
mov
loopne
je
iret
mov
push
test
xor
xchg
or
divl
lea
dec
add
mov
repnz
je
add
insl
and
shlb
sbb
xchg
sub
sbb
leave
cmpl
inc
shrl
adc
add
or
fimull
dec
xchg
jbe
rorb
addr16
push
loope
negb
mov
pop
pop
xor
add
or
push
push
cmp
loope
push
pop
mov
push
outsb
inc
jle
pop
fsubl
add
insl
imul
mov
push
fnstsw
inc
call
and
xor
and
mov
enter
cmp
ds
rcrb
inc
pop
sub
lods
xchg
add
mov
xchg
add
xchg
hlt
loope
cmp
push
test
in
or
cs
shrb
jnp
movsl
add
test
push
jl
jno
sub
cmpsl
aas
xor
scas
addr16
sub
push
xchg
pop
sti
add
add
lds
inc
add
js
or
rcrb
push
aas
movsl
add
shll
dec
push
add
mov
push
add
cld
test
add
pop
in
inc
fnstsw
pop
inc
pop
outsl
shl
mov
jmp
popa
xchg
int3
pop
sarb
add
leave
mov
loopne
ds
xchg
xchg
aam
add
dec
add
mov
jnp
jle
or
mov
push
sub
addr16
push
dec
add
cli
imul
leave
mov
mov
cmpsl
faddl
push
sbb
add
arpl
lret
inc
push
xchg
sub
add
daa
stc
aas
rol
push
pop
xchg
out
mov
int3
inc
jmp
xor
pop
adc
lea
mov
adc
dec
push
jb
sbb
je
dec
pop
sub
cmp
ds
add
daa
fiaddl
pop
inc
jae
mov
cmpsb
jnp
xchg
imul
addb
xchg
into
add
xchg
or
mov
xor
add
push
add
or
icebp
ljmp
outsb
cld
enter
add
pop
cwtl
aam
mov
jae
shrb
push
xor
rclb
xchg
mov
divl
xchg
push
fsubrl
scas
roll
xlat
mov
xchg
je
or
mov
xchg
psllq
imul
add
std
and
add
test
push
push
inc
jbe
push
fcmovb
mov
dec
add
repz
or
testl
rcrl
xchg
push
add
jg
add
pusha
in
test
dec
bound
fs
imul
sub
sbb
add
mov
and
inc
mov
imul
xlat
ret
repz
into
xor
sbb
xor
pop
add
lret
vpermil2pd
push
cmp
mov
push
dec
imul
or
xor
mov
dec
push
add
push
popa
mov
add
scas
mov
adc
aas
add
out
cmp
and
and
insl
push
sub
jne
push
push
sbb
les
in
xchg
add
mov
or
add
pop
mov
mov
mov
or
data16
xor
call
std
stc
xchg
sbb
add
add
and
arpl
sahf
movl
add
das
ret
cli
xor
dec
iret
hlt
pop
add
je
mulb
and
xchg
push
loop
dec
lret
movl
inc
jg
inc
add
and
mov
add
jecxz
jo
xor
add
and
xchg
dec
iret
int3
sub
pop
xchg
add
inc
adc
mov
pop
and
inc
cmpsb
sahf
popf
push
sbb
add
mov
push
add
xor
mov
add
push
pop
insl
xchg
cmp
cmp
outsb
popf
mov
add
out
sbbb
adc
jb
sbb
loop
cltd
or
mov
call
pop
and
add
les
pushf
in
iret
cmc
mov
dec
fiaddl
adc
add
push
xor
push
cmp
ret
leave
xor
mov
enter
add
frstor
mov
or
outsl
arpl
call
test
lods
cmpsb
push
aad
cmc
xchg
jl
add
sbb
xchg
adcb
cmp
outsl
cmpb
cmp
mov
ds
pop
inc
xchg
sbb
fcomi
cli
inc
js
add
idivl
mov
and
shll
clc
push
lahf
nop
popa
add
and
inc
pop
add
cmp
out
in
test
or
clc
push
aad
xchg
cltd
add
int
pushf
add
lea
pop
inc
testl
pop
push
mov
mov
test
xlat
and
sti
repnz
outsb
and
add
mov
pop
cmp
jns
add
test
jmp
cmp
negb
shll
adc
mov
jp
ljmp
mov
jae
shrb
mov
sbb
or
push
fadds
or
fiadds
mov
test
push
push
fadds
fnsave
mov
pop
mov
and
add
push
into
cmp
xorb
dec
mov
mov
add
sub
cmpsb
pop
jmp
ja
add
jno
imul
cmp
cwtl
sub
dec
jmp
jnp
stos
dec
xchg
add
xchg
push
mov
sti
or
enter
in
out
add
jbe
loope
imul
outsb
dec
loop
push
xchg
andb
add
movlps
xor
aam
add
add
or
cltd
inc
lods
add
leave
lret
xor
push
lds
cmp
mov
int3
jmp
inc
mov
sbb
add
push
lock
aam
inc
mov
xor
addl
rcrl
or
add
sub
pop
fsub
pusha
rolb
rclb
rclb
lahf
pop
xchg
and
sbb
in
lock
mov
mov
jns
mov
xor
push
sub
cmp
cmpsl
out
mov
dec
mov
rorb
add
pop
in
nop
mov
sub
xchg
stos
xchg
mov
addr16
sbb
push
sub
sbb
jmp
sub
add
xor
test
ftst
adc
add
sub
sbb
xor
cmp
lods
adc
jns
inc
std
xchg
xlat
xor
push
mov
add
stos
mov
mov
aas
cmp
pop
mov
inc
cmc
js
add
fldl
and
iret
mov
sbb
pop
ds
mov
cmp
pop
pusha
cmp
pop
push
das
add
in
int
movsl
inc
add
clc
inc
pop
mov
clc
push
sbb
mov
add
or
xchg
cmpsb
andb
push
or
scas
imul
jmp
add
cmc
test
mov
bound
dec
fdivs
push
subl
add
sarb
jnp
mov
rolb
gs
rcll
pop
add
pop
bound
jecxz
loopne
mov
add
push
stos
jae
mov
push
loopne
mov
pop
jge
adc
lock
xchg
pop
repz
jle
movsb
cmp
jne
jl
add
add
cmc
in
and
cmp
lret
lods
sub
add
xor
scas
add
stc
adcb
int3
pop
sahf
shlb
dec
sti
sbb
push
fnsave
hlt
out
add
lret
inc
int
leave
in
das
mov
fistps
cmpl
fstps
test
mov
icebp
push
sti
push
leave
sub
lock
push
add
or
xor
add
and
sub
dec
iret
dec
inc
sti
in
cwtl
cwtl
sbb
add
xchg
fwait
outsb
add
add
stos
mov
subb
pop
mov
popf
dec
rolb
add
mov
js
add
adc
add
jl
jle
insl
fadds
test
data16
das
mov
lock
into
push
push
and
xor
xchg
in
add
pusha
fldl
adc
roll
int3
add
test
andb
push
lods
sbb
add
fmuls
shlb
fstps
add
bound
push
push
xor
jle
jno
mov
adc
push
ja
or
adc
mov
mov
cwtl
add
xlat
push
sbb
mov
mov
out
fsubr
rolb
sub
xor
push
js
mov
nop
jecxz
jo
fdiv
pop
mov
pop
mov
inc
clc
scas
call
mulb
sarb
or
pop
add
jp
inc
xchg
add
stos
xor
mov
add
enter
popa
jne
es
xor
push
call
std
mov
add
xchg
or
dec
testl
mov
out
add
dec
add
sbb
jbe
add
fistpll
mov
in
mov
loopew
sbb
cli
mov
mov
jo
xchg
in
or
cmp
iret
jp
dec
faddl
jbe
sti
adc
pop
rclb
lcall
add
jnp
dec
push
imul
fcoml
pop
fwait
test
test
inc
popa
lret
and
aaa
mov
xchg
loop
add
fcoms
add
inc
test
add
adc
dec
mov
add
xchg
push
mov
aad
xor
cld
outsl
pop
push
fwait
and
stos
rcrb
and
add
cwtl
mov
outsl
mov
sarb
ret
cmp
clc
xchg
mov
in
add
jno
mov
add
negb
xor
push
mov
aad
add
sub
push
add
mov
inc
mov
out
cmp
mov
lahf
mov
lret
clc
icebp
scas
repz
push
incl
jg
jle
add
add
sub
test
sbbl
sub
jne
add
inc
andb
mov
movsb
es
aas
or
sahf
daa
aam
and
pop
or
or
xor
movl
jmp
pop
or
ror
cli
add
push
xlat
push
xchg
sbb
shl
jle
mov
clc
xchg
dec
lock
mov
pop
adc
cmp
add
cmp
pop
out
pusha
out
adc
push
fldl
js
mov
les
pop
in
or
adc
add
andl
jnp
pop
add
pop
div
imul
push
add
mov
sub
push
mov
push
xchg
inc
sti
test
cld
jae
mov
mov
adc
jecxz
test
fmul
xchg
cli
jb
jbe
or
sbb
sbb
enter
adc
jnp
aas
call
int3
pushf
std
ja
adc
sti
xlat
cmp
rolb
jne
fildll
cmp
push
add
ret
aas
xchg
add
push
jge
stc
or
into
inc
push
test
popa
sbb
pop
ljmp
dec
ret
xchg
cltd
addl
push
sub
shl
dec
sti
loope
jb
jae
xchg
mov
or
xor
xor
xor
xor
xchg
roll
inc
jmp
sarb
push
insl
sub
add
xchg
shlb
sbb
jle
shlb
shrl
in
pop
call
daa
jne
fbld
dec
jle
add
xchg
sub
sahf
aaa
icebp
add
fld
pop
push
or
stos
insl
mov
mov
je
add
mov
push
cmp
add
adc
dec
mov
push
add
mov
sar
cmpsb
sbb
imul
loope
or
push
add
push
ds
cmp
sub
mov
jl
mov
pop
pop
nop
outsb
fadds
rdtsc
adc
jno
sbb
and
mov
cmp
mov
fdiv
subb
fidivs
add
dec
jmp
xor
in
mov
and
xor
rcr
dec
jmp
loopne
push
or
pop
and
mov
add
movsl
mov
inc
test
mov
add
inc
pop
jno
lods
mov
mov
out
pop
add
jb
xchg
jns
cmp
inc
sti
lahf
add
daa
std
push
or
xchg
addb
xchg
aas
mov
out
add
test
sub
lahf
fs
outsb
cwtl
xchg
cmp
push
ret
cltd
jns
mov
icebp
or
or
cmp
sahf
ret
add
lret
and
ja
lods
xchg
xchg
popf
out
add
mov
shlb
aad
addb
cmp
mov
add
sbb
nop
call
cmpsb
pop
faddl
jg
or
add
mov
add
idivl
cmp
and
arpl
inc
imul
fsubs
les
xor
lea
and
jmp
clc
jle
lods
add
pop
dec
pop
ljmp
je
sub
add
insl
xor
inc
push
jbe
addr16
xchg
mov
and
xchg
mov
xor
or
cld
xor
jge
jnp
add
adc
repnz
add
jl
shlb
push
shrl
mov
add
into
dec
stc
mov
mov
lahf
lock
xor
xor
add
js
xchg
add
lds
add
add
sub
dec
roll
add
push
jae
scas
mov
mov
aaa
sub
or
test
mov
jmp
sarb
add
mov
cld
sub
jg
enter
inc
cmp
clc
sbb
and
std
dec
jns
mov
xchg
sarb
sub
pop
sbb
mov
add
add
jl
call
mov
ds
call
loop
aad
dec
movsl
add
pop
mov
sbb
iret
adc
jle
dec
std
add
fldpi
dec
sub
dec
loopne
sbb
xor
insl
in
repz
sti
std
into
pop
int
cwtl
or
or
add
sarl
lea
fistps
or
ss
jmp
jle
jnp
stos
ljmp
add
clc
leave
pop
or
xchg
mov
or
shlb
mov
or
and
and
sub
dec
rorb
push
sbb
sub
je
add
sbb
movsl
dec
call
dec
sub
adc
push
cmp
cs
or
push
inc
nop
popf
pop
cmp
pop
push
out
xorb
or
mov
rorb
sbb
or
mov
fsubrl
dec
rcl
mov
repnz
rolb
jns
inc
push
pushf
int3
movb
sbb
push
inc
hlt
dec
xchg
pop
jmp
std
decl
int
xchg
xor
add
and
jle
dec
or
or
sbbl
push
test
jo
clc
xchg
adc
cmp
adc
adc
clc
enter
aam
mov
lock
daa
fisttpl
icebp
sbb
add
push
sub
sbb
jmp
stc
mov
sbb
add
cld
lods
cmp
inc
ljmp
fwait
ljmp
or
sub
loop
add
sbb
jo
inc
decl
jae
sub
cmpsl
fwait
jae
sub
mov
pop
addl
pusha
clc
lea
movsb
pushf
and
mov
xor
lods
add
xlat
jmp
out
sub
rolb
jecxz
xchg
sbb
jge
add
xor
jns
mov
xor
inc
jbe
xchg
enter
pop
add
xor
and
adc
push
mov
mov
inc
mov
inc
pop
sbbb
fstpl
shlb
jbe
sub
sub
jmp
test
xor
add
mov
fs
add
cmpsl
cmpsb
or
xchg
int
add
push
xor
cld
and
jl
pop
push
sub
xchg
and
push
lahf
sbb
addr16
loope
xchg
enter
jb
add
or
and
inc
imul
lock
into
cwtl
hlt
jl
dec
adcb
xchg
mov
or
repz
inc
jecxz
jl
inc
les
call
fcomp
sbb
or
sub
xchg
repnz
xor
pusha
aas
rorl
scas
xor
orb
int
addr16
or
repnz
add
push
test
enter
rolb
sub
mov
inc
addb
test
in
repz
push
add
das
in
sub
dec
mov
adc
loopne
push
xor
push
pushf
cmp
cmp
insb
mov
in
add
pop
pop
sbb
dec
mov
jle
dec
cld
inc
push
adc
lods
js
sub
add
xor
mov
leave
add
fisttpll
adcb
adc
aaa
jns
and
fistl
inc
pusha
add
insb
inc
sub
xchg
repnz
xor
mov
dec
mov
add
aad
cmpb
and
add
pop
xchg
mov
mov
pusha
out
dec
mov
rol
sbb
pop
xchg
xor
mov
and
dec
ljmp
es
inc
xor
std
js
enter
jnp
jle
sub
in
mov
mov
and
fidivrs
xchg
stos
inc
push
xor
frstor
int3
xor
mov
daa
xlat
adc
leave
xlat
aas
inc
adc
sub
sbb
pushf
add
push
imul
sahf
cld
in
xchg
add
arpl
jg
push
stos
pop
lds
call
dec
add
inc
js
cld
mov
mov
addb
mov
bswap
je
adc
push
and
add
push
and
push
sbb
mov
add
xchg
fwait
or
test
pop
mov
adc
cmp
movsl
std
pusha
adcb
push
mov
cs
xor
inc
ja,pn
int
push
pop
xchg
test
call
cmp
inc
pusha
aad
cmpl
mov
push
es
mov
das
enter
add
mov
xchg
inc
xchg
dec
fdivp
add
or
in
icebp
cmp
push
sbbb
fmull
cmp
or
rolb
push
mov
add
lock
inc
dec
pop
enter
cltd
xchg
lret
leave
ja
cmovo
lahf
icebp
adc
or
sub
daa
push
andl
cmp
mov
outsb
in
and
or
xor
pop
jg
sbb
xor
mov
addr16
enter
push
in
adc
lods
icebp
fsubr
jle
dec
jp
add
mov
push
shrb
mov
ss
jb
cmp
imul
add
adc
mov
out
add
mov
adc
and
sahf
adc
add
xchg
cmp
cs
inc
cmp
dec
sbb
push
xorb
cmpsb
cmpsl
push
pop
cmp
push
ss
movsb
mov
idiv
pop
fnsave
paddq
movq
sahf
push
aas
inc
and
add
rcl
mov
adc
pop
push
cmp
add
mov
leave
into
bound
mov
sbb
push
sub
jg
xchg
nop
mov
popa
rcrl
ja
inc
jp
shlb
test
and
adcl
xor
add
jno
dec
imul
xchg
cmp
push
mov
out
and
adc
add
mov
mov
popl
add
insb
add
cmp
mov
mov
mov
pop
mov
cmc
and
sub
jg
jns
jno
adc
loopne
pop
sbb
add
add
enter
cmp
adc
xor
cmp
mov
adc
cmpsb
out
das
adcb
enter
push
jle
cmp
push
inc
dec
je
inc
pop
cmp
mov
leave
xchg
inc
and
mov
arpl
jnp
lock
dec
mulps
mov
inc
jl
add
sub
mov
repnz
ds
jl
sahf
aam
xchg
xor
bound
sbb
lahf
shl
dec
add
jne
xchg
je
shr
call
jbe
push
xor
fimuls
aam
rorb
ljmp
cmc
sbb
inc
xor
clc
adcl
mov
inc
dec
and
fs
xor
rorl
push
xchg
and
lret
mov
or
sbb
loopne
and
test
test
test
pop
sbb
push
and
sbb
push
or
sbb
adc
loopne
cmp
mov
test
add
nop
jno
and
sub
and
add
pop
dec
addb
jbe
or
sbb
cmp
andb
inc
in
mov
or
mov
adc
jecxz
orb
mov
fwait
ljmp
jno
or
cmp
stc
adc
ret
clc
sahf
push
mov
add
sbb
cli
fisttpll
sbb
loope
das
bound
sbb
and
adc
cmovg
loope
into
xchg
jmp
fbld
xor
mov
popf
sub
sbb
dec
adc
push
aas
add
jae
pushf
cmc
dec
mov
push
test
lods
xchg
add
sbb
or
sub
add
adc
cmp
add
shrl
lret
bound
pop
mov
test
mov
push
shrb
out
imul
pusha
into
mov
sub
cmp
dec
add
test
mov
adc
add
mov
repz
adc
loop
adc
in
test
or
data16
and
mov
sbb
cli
cmp
push
stc
aad
in
sbb
sbb
scas
shl
xchg
inc
xor
test
inc
jnp
mov
gs
out
adc
sub
mov
push
dec
jl
les
aad
inc
pop
jp
add
shlb
jno
enter
fsubs
dec
fisubrl
adcb
adc
inc
test
jp
cmp
loop
mov
mov
push
mov
adc
sbb
addb
and
aas
out
pop
add
xchg
enter
adc
jb
fadds
sbb
or
adc
inc
adc
add
clc
jae
xor
cwtl
movsl
enter
mov
and
gs
xor
add
push
test
add
nop
sbb
out
xor
cs
inc
lods
sahf
or
adc
mov
sub
mov
add
or
xchg
repnz
movb
out
push
sub
lea
and
xorb
sub
and
sbb
jb
es
mov
jge
out
push
dec
fwait
sub
and
mov
mov
add
imul
adc
cli
or
test
repz
push
repnz
add
fists
inc
xlat
test
movsb
add
xchg
mov
or
test
lret
and
orb
inc
inc
cmpl
xchg
dec
and
lea
in
fwait
lods
ret
xor
push
pop
test
adc
xchg
lret
call
dec
or
mov
cltd
inc
push
xchg
add
test
xor
xchg
xor
scas
sub
test
mov
lret
dec
push
sub
js
mov
add
clc
or
adc
add
movsb
leave
xchg
pop
test
inc
pop
xchg
aad
test
lock
inc
xor
cs
sub
add
mov
push
pop
les
mov
and
rcrb
dec
sbb
pop
cmp
les
jecxz
or
dec
xchg
sub
xchg
ljmp
jg
mov
in
or
pop
mov
push
out
and
into
adc
mov
and
mov
pushf
push
and
or
mov
jge
and
xor
test
or
clc
adc
add
or
fdivrs
add
sbb
out
sarl
and
xlat
adc
ja
pop
dec
mov
cwtl
jo
mov
dec
mov
cmp
jae
adc
push
sub
pop
and
mov
mov
pop
repnz
inc
xor
xor
mov
xchg
cmp
xchg
fdivrs
adc
sub
add
ret
add
sub
fmuls
clc
mov
dec
es
cmp
lcall
lock
bnd
add
inc
sub
inc
mov
es
aam
mov
mov
inc
cmpsl
les
jge
xchg
add
add
sub
fcoml
sbb
ret
scas
adcl
cmp
adc
iret
sti
clc
aas
pop
cld
ljmp
push
mov
add
lock
pcmpgtd
add
lds
test
lret
push
fs
jl
arpl
add
mov
cmp
clc
jmp
jge
scas
add
pushf
sar
js
sarb
shlb
movaps
inc
dec
sbb
mov
shll
mov
outsb
mov
cmp
xor
test
add
stos
jp
jns
cmp
decl
mov
add
cwtl
add
add
fwait
or
and
mov
add
pop
xchg
mov
cli
dec
or
ret
jns
jae
mul
and
inc
add
dec
mov
add
add
inc
and
mov
adc
icebp
mov
loop
pop
xorl
inc
out
push
rol
dec
push
mov
mov
mov
fdivrs
jge
repnz
ret
jno
cmp
stos
pop
push
xchg
dec
iret
add
xlat
mov
rolb
mov
add
into
dec
adc
add
lea
add
insb
add
popf
add
test
int3
add
inc
jo
add
dec
insl
inc
add
repz
mov
shlb
rorb
rorb
push
add
mov
mov
adcl
loopne
mov
int3
repz
sbb
push
outsb
stos
dec
mov
int
push
sub
in
add
cld
je
ljmp
pop
nop
adcb
dec
call
pushf
in
outsb
cld
out
negb
punpckhwd
loopne
pop
mov
xor
lods
sub
jp
cmp
push
sbb
dec
je
xlat
mov
sbb
inc
push
adc
fsubr
rorl
dec
iret
aas
daa
cwtl
add
add
ss
lret
addr16
push
add
dec
push
std
sub
cmp
adc
mov
incb
or
mov
wrmsr
inc
pop
hlt
inc
scas
cmpsw
pop
sub
pop
mov
add
ret
pop
add
adc
pushf
mov
lods
jo
lea
pop
add
cmp
mov
mov
je
add
mov
mov
adc
and
add
add
pop
add
cmp
xchg
andl
arpl
leave
sub
fadds
add
mov
imul
mov
aas
mov
addb
mov
ja
jne
xchg
push
lds
jno
cmp
jmp
movsl
sbb
movb
mov
xchg
in
add
in
fchs
inc
mov
add
popa
int3
enter
stos
stc
cmp
sbbb
pop
pusha
ss
fsubp
push
clc
push
ja
adc
lods
mov
shrb
or
dec
add
arpl
xor
add
xchg
xchg
lods
leave
cmp
in
mov
arpl
popa
mov
dec
jne
movsl
mov
dec
or
ljmp
sbb
add
scas
xor
cmc
add
fsubs
sub
cmp
pop
mov
add
xchg
movsl
push
sub
dec
fneni(8087
push
popa
fisubs
cmpsl
or
cmpsb
xor
push
mov
xchg
mov
cmp
movsl
sub
or
out
cltd
repz
call
sub
dec
in
inc
es
push
loopne
fs
adc
push
jecxz
aam
hlt
test
pop
repz
adc
add
stos
lret
push
fs
lahf
jae
cli
subl
push
sbbb
add
aad
andb
xchg
cwtl
xchg
iret
push
sbb
fistl
add
out
loopne
loop
add
jo
jge
aad
add
jae
mov
aam
push
mov
pop
or
lcall
push
inc
testb
and
xchg
or
int
and
dec
testl
jl
and
icebp
push
add
dec
std
jns
xlat
add
cld
inc
sbb
sub
adc
pop
stos
add
pop
push
mov
and
xchg
sbb
push
clc
sub
and
mov
inc
xchg
out
hlt
mov
ret
ja
add
xor
mov
repz
lds
das
xchg
add
je
rcrb
mov
or
add
xchg
sbb
fcomp
les
xchg
rolb
xor
dec
add
addr16
jmp
mov
loopne
add
sub
adc
mov
sub
add
jns
and
in
jecxz
adc
push
pop
aam
push
jne
rcrl
lods
jg
enter
mov
cmp
dec
lock
pop
dec
mov
out
jg
aaa
int3
cmpb
mov
inc
push
aaa
roll
sub
cmc
fld
dec
rcrb
cli
dec
jle
add
push
xchg
xor
fldenv
pop
rcll
in
ret
ret
lock
rcrl
imul
daa
shll
loope,pt
add
jae
ljmp
jbe
out
cmpsl
cmc
adcl
mov
je
add
bound
xchg
out
add
stos
loop
cmp
sub
add
ljmp
shlb
dec
add
xor
xchg
add
fsubrs
adc
push
insb
sarl
imul
cmpsl
mov
lds
nop
add
pop
adc
fldcw
pop
mov
xchg
jo
mulps
mov
push
and
dec
cmc
pop
push
lret
movsb
loope
out
outsb
and
add
mov
jb
es
add
mov
adc
sbb
jo
sub
add
hlt
or
push
mov
stos
or
icebp
xchg
lods
sbb
mov
shr
mov
add
add
in
pop
pop
mov
inc
lds
mov
outsb
mul
mov
adc
push
add
cltd
sbb
dec
jp
je
add
push
shr
add
push
bound
or
addb
and
data16
xlat
or
cmp
movsl
scas
cs
faddp
jo
add
and
stc
cmp
dec
add
or
push
mov
leave
setg
out
fisttpll
cmpsl
shll
add
out
inc
out
imul
jb
rclb
add
lods
dec
mov
and
push
loop
rorb
jp
aad
clc
iret
lahf
add
push
in
aas
mov
jl
mov
cmp
clc
mov
pop
call
cmc
adc
insb
or
xchg
add
jmp
ud2
inc
dec
inc
leave
sbb
sbb
push
push
sbb
adc
dec
std
mov
sub
jns
rorl
mov
xchg
add
shll
fisubs
jmp
jo
test
aaa
inc
add
dec
subl
fsubrl
rcrb
lret
loop
loop
add
push
ljmp
daa
in
pop
jb
pop
test
adc
push
cld
cmpb
add
mov
imul
mov
pop
sahf
imul
inc
mov
inc
xor
std
push
fstpl
inc
lods
test
add
ret
out
fadds
icebp
or
push
add
pop
clc
jmp
adc
aam
mov
cltd
cmp
fildl
ret
pop
sub
adc
dec
rcl
in
incl
mov
pop
sbb
jg
add
stos
pop
daa
or
imul
add
ret
shrb
dec
das
and
xor
ljmp
mov
in
outsl
ret
inc
dec
sti
movl
adc
jbe
cmp
adc
and
ljmp
mov
shrl
dec
ja
xor
add
jno
cmpsl
jbe
out
xchg
push
pop
movsb
scas
add
int
and
filds
mov
jae
shll
repnz
ret
pop
and
pusha
subb
dec
add
js
hlt
pop
pop
jnp
add
sarb
add
mov
iret
xchg
data16
cmpsl
rorl
add
push
add
cmpsb
aas
sti
movsl
outsl
push
dec
xchg
pop
inc
scas
xor
bound
xchg
ja
aas
call
imul
mov
loopne
adc
add
lret
or
stos
or
mov
mov
mov
and
and
enter
mov
jg
cmp
repz
ljmp
inc
js
movsl
pop
inc
add
cmc
xchg
mov
push
sbb
push
add
or
js
push
jmp
adc
inc
hlt
mov
push
mov
fdivs
clc
outsl
and
xchg
add
scas
push
shr
mov
xchg
hlt
sub
xlat
push
jo
push
sbb
pop
test
lret
adc
jmp
add
mull
dec
push
inc
in
jp
mov
add
xor
enter
mov
ret
push
mov
inc
shrb
sbb
cmp
sub
sbbl
pop
bswap
xor
mov
int3
je
add
faddp
movl
pop
adc
xor
push
jmp
loope
icebp
xlat
push
fidivrs
aad
mov
pop
push
cmpsl
xor
sbb
pop
add
mov
or
das
mov
jle
lret
cwtl
inc
cmp
test
xor
sub
stc
sbb
push
fildl
ja
add
int
loop
push
gs
filds
jmp
mov
into
stc
adc
loopne
jl
ljmp
hlt
shlb
cmp
push
xchg
add
mov
xor
xchg
add
sti
in
jne
maxps
pop
in
gs
cmp
add
sub
jno
int3
jmp
rol
fisubl
or
mov
push
fists
rclb
jno
in
aad
pop
popf
add
adc
imul
je
and
movsl
cmp
cmpsl
mov
dec
pop
add
xchg
dec
pop
aaa
sti
in
shlb
and
sar
test
sbb
ret
enter
clc
lcall
mov
lds
cmp
insb
cmp
ficoms
xchg
or
fstps
das
pop
add
rorl
outsl
imul
je
sti
inc
jno
mov
jns
pushf
sbb
loope
mov
sar
cmp
push
sbb
test
xchg
js
add
in
in
scas
fdivrl
add
clc
nop
add
dec
xlat
lahf
ds
inc
xor
adc
fiadds
dec
push
xor
adc
iret
pop
pop
rol
repnz
cmp
imul
mov
les
jmp
inc
add
scas
mov
pop
fmul
add
in
stc
je
aas
lock
or
cmp
mov
add
cmpsb
pop
push
hlt
mov
xchg
jl
mov
shrb
push
add
imul
mov
mov
mov
push
add
sbb
repz
jle
int3
jne
push
ss
sbb
inc
add
mov
inc
int
pop
mov
mov
jnp
test
fs
lea
cmp
cmc
test
fsubs
mov
iret
and
loope
adc
in
dec
fwait
add
pop
xor
mov
mov
ret
std
movsl
jmp
add
adcb
xchg
mov
sub
ficompl
jge
xor
cld
xor
addb
pop
gs
aaa
addb
pusha
sbb
sbbb
cmp
shll
jmp
cld
sbb
add
nop
divl
mov
gs
cmp
call
sub
pop
sbb
add
jl
ss
sub
jle
add
nop
je
add
mov
neg
lds
mov
mov
add
andb
in
roll
add
sarb
pop
jmp
loopne
in
mov
pusha
sbb
mov
add
mov
mov
aas
xor
nop
add
lret
dec
rcl
inc
sbb
enter
nop
pop
jle
add
dec
pop
popa
lds
loopne
cmp
hlt
rorb
jb
pop
add
xchg
cmp
dec
in
cmc
lahf
mov
cld
push
rcl
scas
add
xchg
cmpb
mov
bound
adcl
fstpl
aam
add
rcrl
out
clc
aam
fisttpll
sub
data16
mov
push
fiaddl
push
or
pop
cli
dec
out
add
xor
add
push
add
fldenv
mov
arpl
sarb
add
repnz
add
mov
xlat
mov
lods
out
rol
mov
imul
fnstenv
je
cmp
pop
xchg
lcall
sub
push
js
add
dec
inc
sbb
insl
jns
dec
lods
popf
addr16
push
add
jp
aam
cwtl
and
cmp
or
or
pop
hlt
cmp
lahf
mov
mov
jecxz
add
pop
add
cld
inc
xor
loopne
mov
clc
loopne
leave
rolb
in
popa
jecxz
mov
into
jae
push
pop
adc
push
adc
xor
add
addr16
fstl
cwtl
cltd
clc
dec
sbb
cld
popa
cmp
addl
in
rcrl
add
sbb
add
inc
push
ret
mov
out
mov
std
mov
dec
lret
ret
cmp
iret
out
test
and
nop
cmp
jo
adc
mov
mov
in
cld
pushf
outsb
imul
adc
mov
leave
sbb
and
lcall
into
adc
cmp
xchg
dec
lret
pop
add
clc
add
jmp
add
pushl
jae
test
pop
out
or
js
adcl
jecxz
mov
add
mov
mov
cmp
rclb
sahf
call
lds
push
jne
js
and
lea
lock
sbb
sbb
add
nop
ffree
jmp
add
in
pusha
daa
outsl
sub
lret
mov
add
or
sahf
xchg
mov
add
jecxz
cld
rorl
inc
xchg
repnz
mov
js
sub
pop
mov
mov
call
xor
rorl
mov
add
pop
rolb
shlb
loope
pop
rorl
pop
xor
movsl
xor
adc
mov
add
mov
pop
imull
and
loope
test
jg
call
es
dec
jecxz
mov
push
mov
dec
mov
ja
je
add
in
movsl
mov
mov
cmp
rcl
xchg
and
repz
or
or
aad
dec
dec
fwait
add
gs
pop
fcmovnu
add
sbb
fs
stc
loopne
loopne
mov
push
add
and
mov
fbld
ret
cs
mov
and
pop
or
dec
xlat
stos
incl
fldl
adc
mov
add
lcall
stos
add
jo
fldl
jo
pushf
hlt
rolb
and
xor
mov
mov
iret
add
xchg
ret
pop
loopne
sub
icebp
push
lret
mov
repz
inc
shrl
shlb
jb
or
add
sar
add
mov
jl
add
subl
jo
jbe
cs
add
sbb
jmp
add
jo
test
clc
jns
sub
mov
pusha
std
xor
add
repz
cmp
addr16
test
sarb
xchg
test
enter
add
mov
test
fmul
cmp
xor
add
dec
pusha
mov
xchg
cs
adcb
xchg
jno
arpl
cmovo
lods
xchg
xchg
and
cmp
xor
clc
or
pop
data16
andb
xchg
call
sahf
mov
xchg
icebp
add
fcom
aad
sbb
add
loopne
shrl
mov
test
test
loopne
ljmp
sbb
and
sbb
flds
lods
adc
cwtl
jg
dec
cmp
rclb
jmp
and
push
push
inc
movsl
push
iret
add
dec
ficomps
add
shlb
pushf
cmp
mov
add
add
lea
pop
add
cli
fxch
pop
add
stos
test
mov
mov
insb
je
cmpsb
lock
add
nop
notb
mov
lods
add
mov
adc
icebp
inc
jg
bound
mov
int3
shlb
js
or
popf
cltd
and
add
mov
gs
out
mov
add
or
jmp
subb
sub
fnstsw
es
dec
icebp
ss
mov
test
cmp
cwtl
aaa
pop
dec
fcmovne
ja
pusha
dec
xchg
xchg
sub
cmpsl
sub
jl
or
test
adc
andb
and
pop
add
push
xor
test
sub
or
add
dec
pop
push
insb
push
jns
sbb
mov
pusha
mov
sub
stos
xorl
cli
fmull
cwtl
bound
test
mov
add
xor
pop
aaa
sub
jl
cs
inc
mov
mov
push
push
std
cmp
jb
fsubrs
in
stc
cmpb
cld
mov
inc
pushf
repnz
xchg
addr16
xchg
clc
arpl
jae
xor
mov
push
push
sbb
scas
pop
pop
jns
push
pop
add
pusha
loope
fsubr
fbld
lds
roll
cwtl
repz
push
mov
insl
pop
dec
jne
xchg
adc
jecxz
int3
cmp
pop
or
mov
fadds
xor
lret
pusha
mov
nop
out
add
and
arpl
mov
subb
add
mov
ja
push
adc
or
mov
jbe
push
test
pushf
add
js
add
or
inc
ret
test
push
pop
pop
push
icebp
mov
out
fcoml
adc
inc
add
adc
xor
es
data16
mov
or
inc
mov
add
cwtl
scas
xchg
in
sub
shll
jl
add
aam
mov
popa
fmul
mov
add
idiv
sbb
fmuls
adc
xchg
jnp
add
mov
ja
repz
rcll
scas
jmp
xlat
or
add
cmp
cmp
pop
xchg
faddl
fsubrs
add
stos
lods
mov
daa
jge
sti
faddl
in
jbe
enter
cltd
push
dec
or
and
mov
out
inc
jl
and
or
xchg
iret
pop
jo
push
lret
dec
leave
push
xchg
add
fmul
loop
jno
pop
and
mov
pop
repz
mov
ja
sbb
and
sub
js
push
mov
cmpsb
repz
outsl
pusha
pop
mov
test
dec
push
inc
in
jae
add
lea
shl
addl
stos
xchg
sbb
jg
add
es
mov
xorb
sub
cmp
lret
scas
hlt
xchg
xchg
mov
loope
mov
cwtl
fadds
cli
adc
mov
fs
inc
add
mov
xchg
ret
nop
ljmp
push
fwait
adc
loop
inc
addb
imul
addr16
mov
mov
adc
sbb
or
cwtl
addl
aas
shll
fsubs
loop
add
nop
out
cwtl
mov
add
mov
fsubrl
and
dec
aaa
addb
stc
fldt
sub
rorb
daa
lock
adc
xchg
add
in
out
sub
mov
and
in
aam
das
in
jns
adcl
fldt
sub
cmp
jmp
hlt
jle
int3
push
js
add
scas
daa
out
icebp
js
add
cmp
push
fisubrs
pusha
xchg
bound
lds
cmp
cs
pop
addb
jle
add
jo
add
add
push
sahf
sub
scas
push
adc
mov
sar
cmpsb
add
sub
mov
mov
add
dec
je
ss
and
cmp
test
sti
loopne
pusha
mov
jns
push
cmp
jmp
test
push
dec
je
lret
ljmp
jmp
cmp
cmpb
fdivl
sub
push
fldl
in
into
js
add
addb
cmp
xchg
and
sub
fldt
push
negb
mov
jnp
scas
iret
insb
sbb
adc
or
es
and
pop
or
imul
add
int
in
sbb
loopne
pop
std
fnsave
hlt
and
push
xor
mov
es
repz
add
mov
xor
andb
loop
pop
int
mov
lock
cmpsl
sahf
das
aad
push
add
sbb
pop
dec
hlt
or
add
or
mov
iret
xchg
adc
push
test
and
sub
or
mov
ret
shll
jno
int3
sbb
pop
icebp
cmp
sub
add
insl
cwtl
mulb
sti
cmp
aam
lcall
pop
lds
pop
aas
push
xor
add
inc
fsubs
pop
and
pushf
mov
dec
lmsw
int
dec
sub
add
xchg
jmp
xchg
add
mov
sbb
mov
cli
fscale
pop
in
jg
loope
addb
insl
push
push
loop
cld
push
add
dec
jl
lock
add
add
icebp
xor
add
fsubl
add
inc
loop
pop
push
add
sub
movsl
lds
popf
cld
inc
xor
pop
jbe
sti
add
dec
sub
mov
push
jns
je
add
push
jmp
scas
int3
jno
add
lret
add
cmpsl
mov
loope
es
or
jno
xchg
sbb
pusha
and
xchg
frndint
or
jnp
lcall
add
bound
cwtl
add
movb
imul
sbb
xchg
add
lock
add
fdivrs
add
add
lock
pusha
dec
fwait
sbb
je
inc
outsb
xor
and
roll
and
mov
xor
ret
push
testl
pusha
add
sbb
or
cmc
sahf
mov
add
jge
add
loopne
pop
push
or
mov
mov
mov
hlt
loopne
adc
add
jp
mov
jl
or
pushf
push
sub
rorl
add
add
mov
adc
sbb
sub
out
dec
sub
and
cmp
push
add
or
sti
test
outsb
jb
pop
iret
push
shlb
cwtl
lea
mov
dec
add
aam
pop
aaa
sbb
inc
mov
adc
insl
mov
je
dec
mov
xchg
cmp
popa
xor
stos
clc
add
pop
sbb
les
js
sbb
pop
pop
inc
test
cld
and
out
stc
out
hlt
sub
xlat
dec
cwtl
push
xchg
add
push
cli
sub
and
sti
cmp
push
xor
cmp
add
inc
or
add
ja
rcl
incb
mov
pop
pusha
sbbl
sub
loope
pop
inc
lret
add
mov
negl
mov
inc
test
in
xlat
cltd
add
roll
dec
jne
xchg
inc
or
rolb
das
mov
xchg
inc
and
pop
and
fidivs
push
cmp
sub
iret
insl
outsb
fucomi
movsb
cmpb
dec
mov
push
cmp
lcall
lea
insl
mov
outsl
jno
pop
add
repz
out
mov
movsl
xlat
sub
mov
mov
std
jl
outsl
adc
dec
repz
inc
xchg
in
add
push
mov
leave
das
filds
dec
dec
out
pushf
mov
push
popl
jl
add
mov
fists
test
out
pusha
dec
push
inc
inc
test
insl
sbb
sbb
aad
mov
dec
add
xchg
mov
mov
add
leave
fnstcw
pop
enter
rcrb
xor
add
shll
fsubrl
js
pop
add
insl
inc
pop
push
scas
in
pushf
add
imul
xorb
adc
pop
icebp
mov
add
xor
jb
mov
dec
sahf
sbb
stos
add
jge
cmp
mov
or
js
dec
push
js
aaa
cmp
add
sbb
outsl
lret
sub
lret
daa
fwait
push
push
pavgb
mov
pop
test
adc
mov
shl
out
mov
or
inc
fnsave
xor
in
roll
lock
dec
cmovg
jp
pop
ds
or
xchg
cmp
jns
addr16
vmread
inc
gs
sbb
scas
hlt
ljmp
cmp
int3
cltd
xchg
add
fcompl
dec
jnp
mov
add
push
jmp
and
mov
add
js
jmp
test
sub
dec
shll
bound
sahf
inc
add
test
xchg
add
adc
repz
add
or
jne
nop
adc
cmp
push
push
addr16
fdivrl
fs
add
cmp
sbb
addb
aaa
insl
lahf
push
shlb
dec
jno
add
jnp
or
sbb
push
xlat
je
adc
jno
fdivl
pusha
mov
sti
iret
pop
fidivrl
mov
push
lods
sbb
mov
add
dec
outsb
mov
dec
pop
out
pop
scas
in
or
subl
cmp
push
scas
ja
or
iret
pop
jecxz
sub
jnp
in
fisttps
icebp
push
add
and
xorb
ret
test
ja
mov
adc
sub
cmpsl
loop
sahf
ds
add
iret
scas
aad
xchg
icebp
loopne
adc
aam
cltd
and
add
test
push
mov
xor
push
inc
push
mov
ds
inc
jecxz
push
or
add
lock
out
cmp
add
cmc
rol
mov
std
push
dec
xlat
mov
mov
cwtl
shlb
xchg
fadds
add
push
fcomps
ljmp
mov
je
lret
ja
nop
mov
dec
fistl
movsb
add
repnz
jecxz
cmp
xor
std
lods
inc
sub
fmull
fwait
mov
and
push
add
dec
jge
jbe
add
pushf
mov
xor
lods
rorb
xor
push
jle
and
das
nop
es
mov
dec
repz
sbb
aam
dec
addb
add
adcl
inc
in
sbb
or
xor
adc
movsb
outsl
daa
mov
jp
cmpsl
push
and
jnp
dec
xchg
ss
push
pop
sti
stc
mov
mov
mov
pop
inc
push
sub
shl
and
leave
nop
ja
fcoms
stc
pusha
testl
add
das
sbb
mov
shlb
mov
aaa
add
inc
or
sub
mov
loopne
scas
mov
add
xchg
adc
lea
or
test
xor
cwtl
or
or
ret
push
sbb
test
movsl
ja
call
inc
xchg
add
js
pop
add
jns
adc
jmp
pop
das
add
mov
loopne
jle
add
daa
jge
push
mov
pop
imul
clc
pop
mov
es
inc
lds
adc
adc
std
lahf
cs
jne
or
jmp
shlb
nop
mov
add
or
in
xor
and
add
sbb
jg
mov
xchg
cli
and
mov
sbb
test
add
and
int3
mov
jle
add
add
cmpsb
in
ss
add
std
mov
dec
ffree
pushf
adc
mov
jb
push
test
repnz
outsb
mov
xchg
nop
add
dec
fmull
imul
xor
repz
cmp
jb
shrb
jp
popa
mov
test
cltd
aas
out
sub
and
pusha
fcoml
bound
mov
add
das
sbb
add
cmpsl
out
sub
inc
mov
pop
xchg
rclb
mov
mov
sbb
xor
xor
inc
cld
js
adc
mov
popl
fwait
aad
mov
setge
add
or
sub
sub
mov
add
pop
push
clc
cmpb
subl
clc
stos
mov
cmp
xor
mov
add
mov
xor
dec
mov
fdivr
js
add
aam
ds
and
cmp
daa
inc
enter
dec
enter
nop
je
jo
and
mov
inc
mov
adcl
push
test
jo
fdivp
sbb
js
add
jmp
sbb
mov
add
call
into
shlb
movsb
aam
add
ja
mov
fbld
add
sub
push
test
add
push
ficoml
imul
jno
push
mov
add
and
dec
sbb
aam
ljmp
xorb
shlb
or
popf
adc
loopne
test
and
or
fisttps
movsl
xchg
add
roll
cmpsl
add
mov
insl
inc
std
jns
repnz
mov
cmp
in
movsb
in
dec
and
mov
sbb
mov
fdivrl
inc
js
add
add
aas
and
out
jg
xchg
stos
add
nop
sub
inc
incl
sbb
aaa
mov
outsl
add
ja
dec
add
sbb
pop
test
sub
mov
mov
and
mov
jns
dec
add
and
and
fstpl
repnz
out
sub
imul
daa
jbe
pop
push
pusha
test
jecxz
aaa
jg
lock
lock
add
scas
std
and
add
cmpsb
jmp
clc
push
fadds
inc
xor
gs
pop
cmpsl
or
sbbb
jle
push
and
add
cmp
dec
gs
xchg
shlb
pop
add
pushf
ret
jno
push
cwtl
push
cmp
dec
jecxz
cli
loopne
je
or
pop
xchg
mov
and
mov
cmp
mov
repz
cmp
add
rcll
mov
mov
out
mov
pop
test
lods
dec
push
call
cmp
sub
mov
add
mov
add
add
mov
mov
andb
ja
insb
mul
pop
int3
push
add
cmc
pushf
pop
pop
mov
push
ljmp
xor
outsb
scas
sti
dec
adc
pushf
mov
and
fildl
pop
ljmp
rcl
cmpl
int
pop
movsl
shlb
push
add
cmp
imull
dec
mov
nop
rolb
xchg
mov
int3
or
std
gs
fdivrl
add
out
ds
mov
int3
xchg
cs
divps
roll
pop
inc
in
jb
add
ret
shr
pusha
pushf
nop
ss
and
mov
mov
flds
fnstsw
dec
ja
lret
add
bound
int
lea
or
adc
fidivl
sahf
mov
faddl
test
push
stc
jnp
lea
outsb
dec
subps
cmc
or
xchg
fidivrl
out
es
inc
inc
and
sbb
mov
add
mov
and
int
or
add
daa
mov
enter
cs
add
fiadds
sbb
in
mov
push
sub
mov
adc
and
add
adc
ret
loop
xchg
jl
xor
inc
adc
popa
dec
dec
dec
popa
mov
inc
add
rol
jo
orb
mov
add
sahf
into
xchg
and
mov
pop
jae
adc
mov
in
jb
js
add
mov
ja
pop
xchg
pusha
add
sub
fimuls
icebp
pop
add
adc
pusha
or
arpl
xor
lock
movsl
push
clc
rcl
and
add
aad
and
or
pop
fidivs
dec
jmp
mov
add
es
mov
add
mov
inc
stos
out
rolb
and
cwtl
pop
dec
sub
fidivl
add
pop
jae
call
pop
add
cmpb
and
out
stos
lods
cmp
aad
pop
lods
push
adc
add
iret
mov
mov
inc
je
fcompl
lahf
ret
ljmp
cmp
aam
out
test
pusha
int3
sahf
aas
dec
cltd
subb
andb
into
add
movsl
enter
add
fidivrs
rclb
inc
adc
add
out
dec
add
xchg
add
les
xlat
int
insb
pop
lds
roll
js
adc
fsubs
pop
ret
adc
and
inc
cld
cli
mov
pop
leave
dec
mov
add
push
jecxz
xchg
mov
add
lret
jp
push
mov
cld
notb
xor
or
add
insl
repnz
jg
and
add
mov
add
arpl
jmp
mov
add
fbstp
mov
add
out
lods
inc
jl
in
and
mov
mov
dec
bnd
push
add
fcoms
outsl
push
imul
cmp
pop
xor
adc
cwtl
es
push
add
mov
lods
or
pop
pop
add
cwtl
pushf
data16
movsb
mov
add
mov
add
repnz
add
mov
call
pop
add
out
lret
mov
test
and
lcall
out
lea
cld
lahf
fisttpll
or
loop
out
pop
les
mov
pop
pop
cli
mov
or
xchg
sbb
add
cmpsb
sbb
imul
push
clc
add
add
xor
push
add
mov
adc
mov
push
incl
cs
lret
fisttpl
clc
icebp
or
pop
lods
lds
or
inc
cmpb
lods
adc
lret
mov
add
mov
fldl
in
push
call
and
adc
cmp
push
fs
pusha
mov
mov
pop
sarb
or
in
xchg
mov
mov
scas
dec
xchg
adcb
mov
add
xor
adc
and
pusha
scas
sti
add
xchg
push
add
push
dec
fsubs
adc
and
les
jmp
adc
movl
xchg
test
test
dec
adc
add
fsubl
or
cmc
or
mov
loop
sub
fildl
jo
push
bnd
add
clc
or
ja
and
mov
add
xor
xchg
sbb
sbb
sbb
ljmp
sbb
stos
ret
fcoms
dec
push
sti
xchg
idivb
lods
dec
push
add
dec
push
cmp
add
sbb
cmp
mov
out
inc
xor
pop
pop
faddl
test
or
add
sub
roll
push
dec
jmp
and
or
sbb
insb
aas
cmp
outsl
mov
jle
aam
mov
adc
daa
fimuls
cmp
push
hlt
pusha
pop
repz
sbb
dec
mov
cmp
daa
pop
nop
pop
cmpsb
cmc
stc
shrb
ret
add
inc
into
popa
push
addb
rorl
iret
sbb
stos
hlt
mov
fistps
scas
xchg
cmpsl
mov
pop
xchg
daa
cmp
jle
and
sbb
jno
ds
mov
add
mov
push
cmp
add
movsl
sti
jecxz
sub
or
je
call
add
jae
or
add
dec
in
cmc
inc
xor
add
leave
std
push
mov
es
ss
adc
rol
sbb
lock
dec
add
mov
rclb
inc
pushf
rcrb
sahf
add
roll
daa
movsb
xor
lret
aam
mov
and
pusha
enter
xchg
call
test
sub
popf
shlb
jo
cmp
xchg
pushf
or
sbb
imul
adc
jmp
mov
ja
dec
je
add
mov
xor
aad
adc
cmpb
filds
cmp
mov
sbb
add
jo
add
pop
mov
pop
jns
mov
cmp
dec
in
sbb
roll
mov
cs
mov
lods
xlat
lds
adc
pop
sub
pusha
pop
add
loopne
sub
lcall
mov
cltd
push
in
shlb
int3
les
add
xchg
andb
sbb
test
add
jecxz
mov
das
outsb
rolb
sub
lods
aas
mov
andb
ja
add
inc
js
cmpsl
sub
into
out
xor
fdivrs
dec
mov
jnp
or
fnop
sub
pop
push
push
mov
ret
rolb
sub
pop
adc
xor
outsb
sub
cmc
push
mov
push
lock
xor
pop
pop
inc
shr
lods
fstps
mov
mov
and
dec
cmp
imul
inc
add
sub
out
pop
push
outsl
out
lds
mov
scas
add
adc
enter
inc
cwtl
rclb
lcall
mov
mov
jl
cmp
cs
lea
fsubs
add
xchg
in
xchg
pop
add
dec
movsb
add
sbb
adc
inc
ds
cld
lret
rolb
xchg
add
test
xchg
out
sub
jns
sahf
pop
push
aad
movsb
sbb
mov
add
add
jbe
call
cs
mov
or
pop
mov
cld
loop
jo
push
add
mov
int
les
mov
add
lock
lods
pusha
add
orb
mov
cmp
sbb
sbb
jge
and
cmpb
push
cmp
mov
adc
xlat
subb
jg
push
mov
jecxz
lock
inc
inc
data16
inc
fcomps
mov
daa
js
add
jp
push
lret
dec
hlt
dec
and
les
push
inc
add
lods
or
pop
jle
mov
faddl
stc
movsb
xchg
mov
call
xor
sub
sbb
mov
dec
test
mov
cwtl
jno
add
xor
icebp
fwait
add
pushl
and
call
pushf
jp
or
mov
push
xchg
ficoms
leave
cmpsl
fs
shrb
xlat
push
lea
pushf
mov
pop
incb
lds
pop
sbb
int3
cli
add
hlt
mov
mov
orl
and
cvtpi2ps
push
pop
and
or
dec
pop
xchg
jo
cld
mov
and
les
pop
jmp
sbb
xor
jg
out
jnp
add
mov
xchg
add
push
lcall
jmp
mov
mov
out
add
lahf
mov
lds
das
dec
mov
loopne
test
push
daa
loopne
or
jno
mov
inc
rclb
mov
or
xor
out
call
cmc
adcb
mov
mov
das
sub
jl
ret
xchg
cmp
repz
cmpsl
mov
pop
inc
sub
pop
push
pop
data16
test
xor
cmp
sbb
jp
xchg
sub
add
jo
loopne
inc
adc
adc
nop
daa
in
cwtl
or
sub
iret
setbe
aas
sbb
add
dec
mov
sbb
xor
dec
adc
nop
in
cmp
dec
pop
adc
inc
xchg
aas
jmp
test
mov
outsb
dec
adc
loopne
jecxz
add
shlb
js
jl
dec
loopne
xchg
pusha
push
xor
sub
dec
add
call
sarb
xor
int
jne
pop
lahf
loop
mov
das
sarb
or
push
sbb
imul
out
pop
lods
push
push
sbb
pop
inc
cwtl
pop
nop
push
arpl
mov
and
cltd
push
inc
push
test
sbbl
cmp
ret
popf
lea
xchg
push
xor
mov
mov
iret
icebp
pop
inc
jns
dec
mov
or
and
js
rorb
add
add
out
push
lret
add
into
cmpsl
sbb
add
push
adc
push
adc
aaa
push
push
xchg
add
pusha
sbb
imull
daa
xchg
sysret
les
std
jnp
push
fcmovnb
push
xchg
addr16
add
inc
mov
push
push
sbbl
and
andb
push
jg
add
mov
pop
dec
mov
nop
cmp
xlat
xor
jle
enter
notl
dec
inc
and
cmpsl
lock
sub
ret
lock
mov
sbb
dec
loopne
sbb
jp
repnz
fisubs
inc
dec
mov
add
insb
inc
leave
add
sbb
cwtl
scas
inc
jp
add
sbb
pop
or
cmp
add
out
xchg
cmp
mov
sbb
add
test
sub
push
cmpsl
test
or
test
inc
stos
and
mov
mov
inc
xor
movsb
sbb
sbb
nop
test
mov
push
xchg
fmull
mov
int
in
stos
cmp
cmpsb
push
test
mov
add
imul
rolb
insb
xchg
iret
sarb
mov
adc
add
push
test
movsl
jp
or
movb
test
lods
imul
das
ss
mov
movsl
or
xor
dec
cmp
in
loope
add
pop
out
jg
hlt
inc
test
or
ffreep
call
push
cmpb
movsb
mov
rsm
jo
mov
sbb
lea
inc
sbbb
aam
fimuls
in
test
popa
xchg
rorb
pushf
cmp
rolb
add
out
jb
add
jne
sbb
dec
xor
push
xchg
mov
wbinvd
push
cwtl
out
adc
add
in
fcomp
std
dec
pop
xor
dec
jns
inc
out
pop
js
add
rcll
ror
es
sbb
or
adc
dec
pop
aam
shll
mov
nop
mov
clc
lds
mov
dec
sbb
je
mov
push
out
sub
pop
sbb
xchg
cmp
test
or
push
repz
aam
mov
popa
inc
dec
out
inc
push
cmp
orb
je
shr
or
popa
adc
lds
shll
fistpll
inc
call
cmp
dec
pop
loopne
mov
and
xlat
scas
mov
call
inc
fists
sub
test
mov
and
cltd
add
pusha
loop
jne
out
or
stos
or
decl
pop
call
rcrb
jo
add
in
test
xor
popf
adc
mov
loop
movsb
push
pop
loopne
mov
or
cli
add
dec
sub
and
sbb
sbb
mov
int3
mov
mov
pusha
sub
call
sbb
les
mov
loope
pusha
push
dec
xchg
push
int3
clc
pop
add
mov
or
or
jae
loope
flds
mov
or
adc
hlt
xchg
cld
loope
jcxz
mov
or
mov
mov
imulb
mov
repz
xor
ret
andb
jo
inc
and
adc
and
push
sub
es
xor
and
push
jns
cld
inc
adc
mov
adc
add
iret
mov
xorl
rolb
bound
jnp
add
shll
add
insl
xchg
inc
rclb
scas
xor
add
mov
mov
sub
sbb
pop
or
ret
in
loop
adc
mov
nop
mov
nop
adc
inc
adc
sarl
add
ret
rcll
mov
shlb
push
leave
sbb
add
int3
es
aad
fs
xorl
jecxz
mov
fdivl
jb
mov
pop
adc
cltd
das
sbb
add
and
adc
mov
add
mov
mov
mov
xchg
mov
movsb
clc
xchg
je
jecxz
stc
test
xchg
dec
jle
setge
jge
orb
pop
cmp
pushf
jnp
sub
add
jbe
loopne
repz
bound
add
aas
pmullw
xchg
loopne
cmp
rcrl
cs
sbb
push
cmp
faddl
in
mov
push
add
mov
add
inc
out
pop
mov
push
push
lock
cmp
add
cwtl
addb
mov
out
sbb
jnp
xor
add
mov
andb
fiaddl
jle
xchg
out
add
sti
sbb
pusha
ja
leave
les
mov
cmc
xchg
jmp
jecxz
stos
xchg
in
scas
lea
std
sbb
mov
clc
scas
adc
mov
inc
leave
fwait
and
add
add
add
push
daa
fcomps
dec
xlat
mov
pop
add
scas
es
push
mov
xchg
mov
dec
cmpsl
mov
push
or
and
pop
adc
mov
sbb
stc
out
bnd
aam
movsl
cmp
movsb
or
insl
sbb
inc
cmp
mov
jno
cmp
aaa
or
mov
fisubrl
add
lea
test
orl
rcll
xchg
mov
cltd
or
jns
dec
pop
fcoml
ljmp
jmp
mov
repz
loope
mov
cmp
in
xchg
in
fs
add
mov
xchg
push
dec
xchg
adc
mov
in
pop
ja
lea
out
into
nop
out
jo
pop
stc
push
mov
inc
push
adc
pop
loopne
mov
or
fwait
push
and
dec
add
mov
enter
jp
adc
mov
add
mov
popf
xchg
lds
add
mov
cli
and
push
insb
add
mov
rclb
cwtl
inc
js
cmovle
pop
add
out
mov
pushf
sbb
mov
add
xchg
mov
mov
loopne
inc
cs
and
add
rcrl
call
fs
std
push
out
pop
add
inc
push
pop
rol
add
dec
adc
stos
rolb
mov
add
std
icebp
data16
int
add
loope
iret
pop
add
mov
mov
mov
jl
fcomps
xor
push
push
enter
jg
sub
pusha
mov
sub
add
fadd
es
mov
jle
aad
popf
add
sbb
mov
dec
inc
xchg
addr16
outsl
push
sub
jae
and
and
aam
test
popf
cvtdq2ps
out
dec
call
divb
add
sub
xlat
adc
out
enter
fildl
and
es
fdiv
jp
add
mov
xorb
pop
in
ja
cwtl
mov
cmp
dec
cwtl
add
fcom
lock
add
cmp
dec
add
fsubrs
mov
xor
and
jle
xlat
add
movsl
leave
ss
nop
pop
lahf
cwtl
int
fmull
cmpsb
cmpb
ret
mov
mov
pop
xor
fsubrl
in
ja
icebp
pop
popa
aam
clc
std
mov
add
loopne
ljmp
mov
sbb
add
mov
cli
cld
shll
xor
add
add
sub
je
adc
shlb
dec
adc
imull
cmpsl
mov
inc
lock
enter
cld
dec
and
pop
scas
lahf
push
in
cmp
fs
shll
repnz
imul
addr16
jno
loopne
nop
imul
add
xorb
mov
cmp
xorb
in
pop
push
add
nop
push
aam
add
shlb
aas
mov
fidivl
xchg
stos
sbb
cmp
pop
or
add
xchg
inc
in
mov
mov
and
add
xchg
cmpsl
sub
dec
jae
ja
push
or
sub
cmp
add
push
xor
xor
and
jle
add
jge
test
loop
add
add
pop
pmulhw
sub
faddl
pop
iret
rcl
cli
jno
popf
loopne
add
or
inc
pop
hlt
fstpt
adc
enter
negb
andb
dec
mov
inc
ljmp
add
cwtl
sub
and
sbb
rorb
sub
enter
pop
pop
jne
add
lea
push
add
movsl
mov
add
fsubrl
fdiv
and
mov
add
fimuls
mov
rclb
or
sub
xchg
loop
lcall
dec
jne
xor
sbb
mov
cmp
inc
loop
push
enter
and
and
stos
and
mov
or
pop
add
sbb
lods
mov
cmp
sti
add
out
add
imul
sub
mov
add
ds
bnd
jp
add
inc
shlb
xchg
outsb
add
mov
cmp
popa
add
mov
in
adc
fldl
mov
cmp
push
movsl
jae
add
dec
push
data16
aas
cmp
mov
outsb
mov
out
jo
add
push
into
adc
add
out
lcall
and
jp
jg
je
adc
int3
rolb
xor
movsb
outsb
pop
mov
add
mov
pop
sub
lea
stos
mov
inc
add
rolb
jae
sub
pusha
xor
pop
sub
add
popa
clc
fstpl
sahf
pushf
insb
add
test
and
stos
and
and
xchg
shrb
mov
mov
xchg
add
nop
cmp
enter
add
fcompl
scas
in
notl
add
pop
xor
adc
mov
daa
in
es
jo
decb
out
add
iret
dec
sti
add
jge
inc
pop
jae
clc
add
dec
and
subb
dec
xor
out
cmpsb
leave
aas
push
fwait
lods
add
push
xor
lcall
pop
mov
not
add
repz
shl
xchg
push
insl
mov
add
or
dec
jmp
addl
pop
sarb
pop
mov
xchg
pushf
and
add
adc
push
inc
call
idiv
mov
notl
adc
mov
aaa
add
cmpsl
imul
mov
faddl
negb
cltd
roll
movsl
dec
push
pop
or
cwtl
lods
loope
mov
std
xor
cld
out
lock
add
pop
insb
mov
jle
mov
jne
dec
icebp
push
arpl
into
and
cmp
mov
fistpl
imul
add
call
stc
add
add
lret
add
mov
in
out
orl
flds
lret
add
xchg
sahf
mov
pushf
hlt
popa
add
jbe
cmp
mov
push
sbb
fsub
mov
loop
jmp
mov
arpl
mov
pop
jo
ljmp
lahf
mov
jg
subl
pop
xchg
add
or
adc
pusha
add
pop
rcr
leave
xor
add
cmp
cs
dec
and
add
mov
or
cmp
sbb
js
add
push
push
add
mov
pop
insl
lret
aad
lods
xor
push
or
ljmp
pop
addl
adc
cmpsl
or
sarl
pop
push
or
insb
fnstenv
pop
mov
pop
fiadds
mov
cmp
dec
mov
fistpl
and
ss
cmp
aas
nop
or
fimull
sbb
call
sub
sti
dec
scas
xchg
cmp
add
sub
lret
ret
cli
pop
inc
adc
cmp
inc
repz
push
sub
out
add
shrl
mov
popa
daa
pop
mov
pop
mov
mov
add
gs
dec
push
jle
push
rcr
or
dec
cbtw
add
mov
push
sub
sub
sub
pushf
mov
je
mov
and
shr
inc
pop
or
jg
add
cltd
movsb
and
add
imul
inc
fdivl
insb
mov
fld
loope
and
hlt
mov
das
xchg
rcrl
outsl
adc
push
jmp
xor
cmp
sbb
scas
mov
cmc
or
sahf
repnz
cmp
lret
out
lret
add
inc
das
inc
clc
inc
fs
pop
into
mov
lahf
shl
add
inc
mov
test
lahf
jo
fsubl
or
or
cmp
xchg
loope
jns
dec
ds
cmpb
sbb
outsb
mov
fisubs
xor
add
add
pop
mov
adc
arpl
cmp
push
sarl
add
pop
sub
gs
add
adc
call
dec
ja
fwait
pusha
xor
add
push
mov
add
mov
outsb
xor
pop
pop
das
int
lcall
lock
add
fadds
ja
lret
inc
dec
mov
icebp
add
aam
pop
lods
sbb
clc
in
or
dec
pop
rclb
jnp
iret
hlt
and
xchg
imul
jne
das
fxch
loope
dec
push
jp
fiaddl
sahf
pop
pop
xchg
stos
incb
out
hlt
sub
jge
add
addr16
das
nop
daa
or
es
jle
adc
xor
mov
dec
cmp
cmp
jne
add
lds
add
mov
push
shlb
pop
sti
add
fsubrl
aas
xchg
data16
out
pushf
jno
dec
add
cmp
in
sbb
icebp
add
cmc
mov
in
mov
jae
test
cli
mov
jne
jl
add
pop
cs
ret
add
add
in
add
lret
outsb
pop
add
sbb
in
out
add
adc
dec
ss
pop
jecxz
les
mov
hlt
jne
test
jg
jecxz
jnp
mov
cmc
loop
mov
push
ljmp
or
add
or
xor
dec
add
add
xchg
js
cld
lods
hlt
add
dec
lret
push
mov
aaa
cmp
mov
sbb
testl
sub
int
dec
add
add
or
test
cli
cmp
fwait
sbb
clc
fs
add
push
push
or
shlb
loopne
cli
add
pop
jmp
roll
mov
mov
adc
add
stc
cmp
push
mov
cmp
shrb
les
and
shrb
enter
or
push
addb
pop
clc
xor
aaa
cmpl
sbb
cwtl
adc
cltd
jmp
adc
roll
sbb
mov
fidivl
push
lods
sub
pushf
mov
push
push
cwtl
mov
mov
jo
popa
or
das
cwtl
in
inc
adc
movsl
adc
hlt
add
xor
int
test
xchg
pop
mov
xor
cmpsb
or
pop
fdivl
add
popa
pop
sbb
shlb
je
mov
subb
out
push
pop
test
rcll
jmp
xorb
fcmovb
insb
rcl
push
mov
jnp
test
pushf
mov
jo
adc
mov
cwtl
add
xchg
jle
xchg
pop
push
test
enter
out
popf
sbb
dec
jl
or
das
jo
sbb
imul
xchg
add
xor
sub
scas
rorl
sbb
sbb
jns
in
loop
adc
xor
mov
pop
addr16
or
and
xchg
jb
in
mov
xchg
xor
xor
inc
mov
mov
and
js
and
pop
imul
mov
mov
add
pusha
icebp
cmpsb
inc
dec
shrb
addr16
pop
and
lret
enter
add
xor
das
dec
jp
add
jge
sbb
mov
add
test
in
mov
ficompl
or
sub
dec
pop
flds
lcall
aad
cmpsl
ss
aam
cmp
sti
cs
dec
pop
int
je
aas
xor
andl
xor
popf
loopne
adc
pusha
pop
rorl
add
fisubrl
adc
sub
jmp
adc
xchg
lds
dec
pop
inc
mov
and
inc
call
jp
js
add
push
dec
popl
repz
scas
nop
fmuls
cld
aad
loopne
cltd
insl
xchg
add
fstps
faddl
stc
arpl
call
mov
ljmp
in
add
hlt
and
das
add
sub
jae
add
fcomps
xor
sbb
out
popf
fisttps
adc
inc
in
call
mov
adc
movsb
in
vmovaps
mov
mov
xchg
loop
cmp
mov
lahf
dec
out
add
and
cmp
mov
icebp
out
xorb
cmp
movsl
sbb
inc
adc
pop
pushf
ret
jbe
xchg
jnp
inc
cld
mov
mov
arpl
jae
pop
lods
cmp
jecxz
jmp
testl
add
clc
stos
or
mov
mov
sub
cmp
pop
fisttps
jo
inc
pop
jae
test
mov
mov
rolb
add
test
pop
xor
add
out
add
jl
mov
cmp
insb
cwtl
lds
add
clc
rolb
and
mov
jmp
test
push
clc
cmp
pop
inc
xor
push
add
scas
std
sbb
ja
xor
jo
fimuls
rolb
stos
xchg
sti
jbe
popl
cltd
mov
in
jmp
loope
out
cmp
xchg
adc
xchg
pushf
add
mov
nop
pop
shr
jns
sbb
gs
inc
inc
scas
mov
inc
xor
insb
xor
ret
sbb
pop
sub
xchg
push
adc
inc
add
pop
test
arpl
add
or
outsl
imul
sbb
movsl
pusha
push
inc
cmp
and
pushf
aaa
lock
xor
cmc
test
arpl
pop
xchg
adc
addb
push
cmpsl
pop
movsb
xlat
aam
mov
cmp
enter
aas
cmc
in
add
lods
xchg
ja
or
dec
mov
ds
add
push
mov
jge
das
adc
jnp
test
jecxz
and
lahf
cli
add
dec
gs
bound
enter
out
inc
mov
lret
out
adc
scas
iret
add
cmp
add
mov
jp
not
add
dec
dec
decb
inc
test
subb
pop
and
cltd
pushf
push
cmp
iret
roll
cmp
nop
orb
cmp
cmp
jge
push
push
add
andl
xchg
mov
cmp
int3
nop
filds
ret
pop
cmp
adc
rcrb
mov
jo
mov
and
sbb
test
es
add
sbb
data16
push
add
adc
repnz
test
push
jg
add
mov
pusha
pop
repz
pop
add
or
lcall
faddl
call
or
pop
sbb
sbb
jo
jle
mov
enter
add
in
push
fs
aas
lar
xchg
inc
jge
inc
jno
add
out
add
cmp
adc
jecxz
xchg
xor
pop
dec
mov
cltd
adc
popa
std
cmpsl
movsb
dec
imul
dec
push
push
addr16
mov
sub
pop
loope
rolb
add
mov
dec
rcll
jg
vmread
lahf
and
add
out
sub
fadds
ljmp
addb
cs
xor
push
test
add
jecxz
inc
sbb
cmp
xorb
mov
subl
and
jne
loope
mov
mov
clc
outsb
data16
and
testl
mov
cmpl
xor
xor
push
push
add
pushl
popf
jg
add
or
xor
xchg
test
or
and
push
push
jne
xchg
add
add
dec
sar
imull
mov
mov
loopne
loop
arpl
or
loope
jge
mov
jbe
xchg
jbe
lret
shll
inc
in
ljmp
sbb
loop
jno
rol
and
into
add
jl
pop
cwtl
sub
sub
lahf
repnz
xchg
mov
add
lea
mov
cltd
int
mov
add
cmp
adc
scas
add
fdivrs
pop
cld
jl
dec
imul
mov
push
jmp
int3
inc
out
iret
add
clc
enter
imul
pusha
inc
lea
and
arpl
or
cli
add
adc
cmp
add
push
pop
add
dec
add
jns
lret
mov
pushf
pop
js
enter
sti
mov
sbb
add
adc
or
test
and
push
jo
xorl
inc
xchg
fmull
lret
jge
loop
add
and
or
jnp
add
shlb
sub
pop
pop
push
push
cmpsl
test
mov
test
add
arpl
sub
mov
cmp
xor
ds
aaa
test
cmpsl
inc
jns
or
mov
adc
dec
mov
ja
push
aad
cmp
dec
mov
inc
sahf
pusha
add
shll
cmp
faddl
and
push
pop
pop
xor
rorb
add
xor
aam
insb
stos
mov
nop
and
push
stos
sbb
ficomps
add
outsb
int3
push
cmp
jecxz
or
je
inc
ds
mov
imul
add
adc
cmp
lods
std
test
sub
add
push
je
les
insb
xchg
mov
adc
cmp
mov
lea
pop
cmp
mov
dec
testl
sub
pop
inc
add
lcall
stos
popa
inc
mov
xchg
sbb
inc
mov
add
repz
xor
movsb
dec
adc
and
shlb
scas
iret
jge
push
pop
xor
mov
cmp
push
add
mov
das
jns
lret
inc
loopne
add
adc
imul
or
test
in
in
stc
enter
cmp
add
jnp
rcrl
int
add
xchg
adc
aaa
arpl
stc
rcrl
dec
pop
cmp
call
add
outsl
movb
in
lret
push
and
adc
sbb
ds
pop
ljmp
pop
rcrl
shlb
jns
inc
xor
push
mov
push
pusha
sub
imul
repz
mov
dec
ret
shlb
xor
aaa
xlat
rorb
cmp
fsubs
lahf
jecxz
in
xor
mov
add
lret
push
xor
sbbb
icebp
and
adc
add
inc
jnp
xor
stc
test
movsl
mov
jp
jle
mov
add
and
ss
add
fdivrl
add
cltd
mov
and
jl
pop
in
pop
hlt
dec
fnstsw
gs
nop
sub
jg
sti
cmp
clc
fsubr
andb
adc
mov
add
xor
das
add
mov
and
sub
test
and
sbb
mov
mov
xor
jbe
leave
fstps
jg
sub
aas
jne
sub
sbb
mov
fnstsw
adc
in
push
pusha
les
jne
pop
stc
pop
es
scas
shld
lds
mov
mov
add
mov
testb
leave
cmp
xchg
xor
mov
cmc
in
pop
pop
daa
lock
cmpl
pop
cmp
call
mov
or
mov
add
icebp
and
movsb
lret
sub
popf
test
rolb
scas
jae
mov
or
xor
out
adc
aas
add
sbb
add
pusha
aas
movsb
pushf
add
sahf
leave
popf
and
jge
add
mov
stos
fldcw
add
push
daa
mov
into
jl
pop
xchg
sub
or
rcrl
inc
mov
into
mov
jmp
movsb
das
jge
jne
pop
and
popa
adc
dec
fmull
lock
dec
pop
fs
add
xchg
enter
xor
sub
push
dec
scas
add
jo
lcall
and
jmp
add
in
push
test
shll
sbb
and
push
loopne
jno
shrb
jo
mov
iret
scas
repnz
cltd
jl
clc
pop
ds
sbb
mov
xor
sub
nop
imul
jae
fcmove
inc
in
pop
hlt
add
into
push
cmpsl
add
jb
mov
mov
inc
sbb
add
jno
or
ret
loopne
adc
adc
mov
stos
xchg
aas
andl
hlt
repnz
jg
mov
pop
push
cmpsl
and
enter
or
leave
mov
sub
cmp
mov
cmpl
inc
inc
xor
add
sahf
jb
fldl
in
scas
pop
sub
movsb
or
stos
add
roll
or
arpl
pop
push
jbe
adc
and
jne
aam
jb
loope
call
fistpl
push
add
and
add
outsl
data16
mov
xchg
and
push
add
or
leave
jo
dec
roll
inc
xor
fnstsw
cmp
push
testl
mov
scas
mov
sarb
push
push
lret
orb
push
xchg
jae
stos
ret
xor
cltd
add
sub
inc
and
sbb
add
mov
flds
adc
add
sbb
jp
xchg
jbe
sub
pusha
lock
sbb
inc
and
jge
cmp
dec
imul
ret
pop
sbb
sub
and
jg
or
inc
je
inc
add
dec
imul
adc
add
mov
xchg
sbb
movb
push
test
lret
jnp
add
testl
inc
adc
push
add
or
add
das
popa
or
jmp
xchg
shrl
add
and
add
bound
add
and
insl
jmp
mov
sti
add
xor
clc
mov
gs
shlb
popl
xor
dec
pop
pop
mov
inc
inc
iret
jno
pop
icebp
leave
andb
nop
add
inc
cwtl
in
jb
into
pop
or
bound
mov
loope
loopne
gs
inc
or
sub
shr
add
cltd
sbb
out
add
and
nop
inc
adcb
and
fdiv
push
nop
jp
mov
adc
mov
dec
ljmp
jecxz
notb
fucomip
add
mov
add
xchg
out
out
decb
fnstenv
stc
sbb
lods
clc
popf
add
mov
jo
ljmp
cwtl
or
add
lock
enter
out
nop
mov
pop
push
mov
and
data16
cwtl
mov
shrb
push
lret
bound
repnz
adc
out
movsb
add
sahf
mov
or
xor
mov
pop
cmp
push
add
xchg
shrb
pop
stos
push
pop
insl
loop
mov
pop
ss
jl
add
mov
xchg
pmulhuw
mov
pop
repz
add
bound
lock
adc
adc
dec
not
pusha
xchg
adc
jmp
mov
stos
insl
xor
push
jmp
movsl
ja
add
int
arpl
mov
sbb
jae
add
mov
xor
mov
sbb
jae
sarb
scas
iret
sbb
hlt
jp
cmp
fiadds
mov
push
in
aaa
mov
jns
roll
mov
cmp
pushf
add
mov
jb
ret
add
out
xor
fcmovnb
shl
movsl
pusha
pop
mov
mov
push
aad
adc
mov
scas
bnd
jo
sbb
out
fs
jne
add
in
pop
maskmovq
iret
sub
dec
add
and
incb
push
cmpsl
ljmp
inc
mov
mov
lret
iret
xchg
imul
and
push
pop
cmpsl
inc
mov
sub
push
mov
or
cmp
mov
add
rolb
jne
fs
and
into
add
ret
ret
fdivrs
jo
xchg
add
cs
mov
ja
shlb
pusha
xor
mov
xor
sub
cld
jno
test
xchg
mov
push
jge
lds
pop
cmp
jae
adc
add
movsl
mov
loopne
mov
add
les
call
out
cld
add
nop
imul
add
cmp
es
hlt
jmp
mov
dec
aas
mov
ret
mov
xor
add
sbb
mov
mov
insl
and
daa
mov
icebp
repnz
test
popa
pusha
leave
jbe
cmp
add
lea
popf
xor
fsubrs
leave
pop
pop
or
in
int3
mov
add
mov
xchg
lret
jno
pop
das
or
repnz
add
aad
imul
popl
push
pop
mov
test
pop
push
idivb
add
fistl
add
xor
insl
imul
xchg
stc
mov
les
pop
mov
loope
repz
cwtl
rcrl
mov
insb
pop
mov
add
imul
push
sbb
pop
add
mov
scas
call
sbb
jo
lcall
xchg
in
add
sub
shl
std
movsl
add
lahf
imul
das
push
fs
incb
jl
lret
sbb
mov
repz
loopne
jne
lods
xchg
mov
sbb
or
add
test
shlb
sub
push
mov
ss
add
sbb
jl
cmp
mov
lahf
push
cmp
or
add
bound
in
test
scas
ljmp
ds
add
fwait
in
fdiv
jmp
adc
lea
out
dec
jp
add
inc
jo
test
push
pusha
sarb
cli
sub
push
xchg
mov
inc
and
sbbl
inc
loopne
outsb
movsb
mov
aaa
xchg
add
mov
lea
outsl
pop
sahf
xorb
loop
add
xchg
add
mov
imul
mov
add
sub
std
js
xor
pusha
cmpb
push
sbb
mov
rorl
push
push
mov
jl
push
fidivl
cld
cmpsb
dec
sub
roll
cli
mov
jecxz
std
outsb
cmp
or
js
push
push
push
jno
mov
inc
sbb
add
mov
negl
dec
arpl
movsl
in
stc
loope
les
aam
add
xor
out
inc
gs
add
loope
adc
cwtl
dec
xor
out
leave
inc
inc
xlat
test
inc
and
arpl
sbb
repz
push
pop
jb
inc
jbe
sbb
dec
push
xor
adc
jne
mov
popa
add
repz
mov
iret
aam
push
pop
in
in
jns
sbb
stos
in
push
xor
bound
xchg
inc
lret
push
clc
enter
mov
sub
movsb
addb
sbb
sahf
fcoms
push
add
xor
cli
addl
mov
xor
rolb
inc
jg
inc
movsb
int
repz
lea
dec
mov
mulb
dec
push
fildl
xor
aad
rolb
cltd
outsl
flds
adc
sbb
or
scas
push
add
push
data16
fadd
mov
adcb
xlat
add
sbb
leave
push
dec
pop
in
xorb
faddl
xchg
cli
out
shlb
in
leave
mov
inc
je
add
loope
inc
sbb
out
mov
int3
adcl
inc
gs
ja
add
pop
xor
lcall
int
sub
dec
sbb
mov
and
adc
sarb
mov
pop
add
repz
icebp
xor
jg
test
inc
ret
add
jp
ljmp
mov
inc
nop
or
cmp
jnp
out
ret
out
addb
lea
das
popf
test
jns
add
aam
aas
xor
xchg
icebp
jo
pop
add
xor
adc
mov
addb
mov
test
mov
adc
or
inc
testl
movsb
mov
add
stc
scas
dec
dec
mov
cmp
sbb
pop
mov
int3
xlat
push
je
jbe
mov
xchg
add
shll
inc
add
subl
mov
adc
add
out
aam
mov
sbb
cmp
cmc
or
inc
add
xor
rol
add
das
rcrb
inc
mov
imul
clc
mov
cwtl
mov
push
ljmp
imul
add
jnp
daa
aas
adc
sub
cld
sarl
jo
mov
pushf
add
pop
cltd
mov
or
push
add
mov
rclb
cmpsl
and
push
inc
push
in
sbb
roll
and
push
add
je
push
jecxz
rcrl
scas
pusha
adc
mov
push
cltd
aaa
lahf
and
hlt
cmp
inc
icebp
out
in
inc
push
cmp
mov
cmp
lahf
ficomps
stos
xor
fldl
repz
adc
mov
daa
cmp
inc
pushf
lods
pop
stos
std
lret
push
clc
shr
mov
add
stos
add
sub
sbb
add
pop
dec
or
loop
cwtl
xchg
add
jl
add
cmp
sahf
jb
faddl
jno
cmp
cs
roll
push
hlt
in
mov
in
add
fstpt
int3
mov
icebp
mov
mov
dec
outsb
push
cmp
cmp
fidivs
je
imul
lds
das
add
out
loopne
cwtl
fidivrl
add
sub
out
cmp
imul
cmp
mov
cwtl
pop
mov
add
mov
sub
inc
sbb
inc
jno
add
test
sub
cmp
les
lret
mov
jmp
das
aaa
jmp
sahf
cmp
xchg
ja
add
push
loope
arpl
adc
and
push
pop
fisttpl
jbe
cli
dec
je
mov
push
jmp
testb
adc
pop
or
das
cmp
loope
inc
aaa
setg
je
push
out
test
xchg
add
inc
mov
jbe
or
sbb
std
xrelease
push
test
mov
push
or
in
ja
push
inc
add
lea
or
or
xchg
cmc
out
mul
loop
mov
and
ret
frstor
shlb
pusha
cmp
aaa
add
pop
mov
pop
rclb
dec
in
jnp
lods
ja
into
shrb
iret
jl
psrlq
je
and
outsl
mov
mov
or
jne
add
and
popa
cmp
rcrb
mov
sub
add
insb
dec
movsl
add
popa
sbb
adc
pushf
jmp
push
fdivrs
mov
cmpsl
mov
mov
inc
aas
adc
aas
mov
loop
adc
cwtl
jno
xor
rol
js
inc
in
es
int
dec
outsb
mov
adc
addr16
pop
inc
stos
or
ret
insl
add
cmp
mov
ds
mov
sbb
std
jmp
xor
push
push
test
movsl
loop
mov
adc
lahf
aam
push
xor
xlat
daa
or
pop
xchg
jnp
lret
jge
out
adc
add
xor
pop
dec
and
push
scas
xor
loop
aad
outsb
add
jmp
fdivl
mov
lock
xor
insl
orb
or
cmp
mov
loope
mov
mov
and
imull
sbb
ret
clc
xor
dec
jo
add
xor
mov
leave
mov
lods
in
add
cmp
cwtl
lock
sbb
push
mov
aas
xor
or
dec
sti
pushf
add
jne
mov
push
push
test
add
mov
loope
lret
dec
or
mov
ret
add
xchg
jp
sub
cmp
pop
test
aas
out
sbbb
xor
cmp
jns
int
add
roll
pop
push
mov
ret
movsb
mov
out
dec
lods
int
lahf
add
pop
and
dec
incl
add
fs
in
rcrb
loopne
cmpb
lea
sti
sub
in
cmp
mov
je
dec
xor
adc
notb
insb
dec
ret
xchg
pushf
orl
das
ss
into
iret
add
sbb
jg
pop
aaa
loope
mov
inc
mov
and
ds
and
int
repnz
add
icebp
pop
pusha
jnp
add
pop
std
dec
daa
inc
or
int3
icebp
popa
push
fdivrl
xchg
add
mov
cwtl
add
add
pusha
add
and
lods
lahf
push
add
dec
mov
push
dec
rorl
push
in
inc
clc
jb
adc
aad
jl
mov
popf
cmp
adcb
inc
es
pop
cmp
setl
dec
dec
lds
push
shl
push
jae
cmp
adc
jge
add
test
dec
push
out
cmpsb
in
cmp
jno
adc
outsl
bound
lahf
xchg
and
cwtl
js
push
adc
and
and
mov
add
roll
test
nop
int3
out
add
sub
ja
add
out
leave
mov
or
push
fnstcw
sbb
and
pop
lods
xchg
push
sbbb
popa
cwtl
lock
loopne
inc
cmp
fiadds
leave
adc
sarb
xor
and
xor
out
into
dec
cmp
push
push
pop
in
add
lods
icebp
dec
xchg
jecxz
or
js
inc
repz
or
imul
adcb
aam
js
sub
cmc
push
lock
ja
or
dec
aaa
add
or
out
fdiv
cmp
mov
xchg
aad
lods
mov
test
aas
xor
sbb
add
pushf
sbb
jecxz
roll
dec
jo
insb
cmpxchg
add
dec
xor
push
mov
sub
pushf
ret
pop
hlt
mov
add
xchg
sub
adc
mov
add
das
xor
mov
lock
fcoms
inc
add
jl
add
je
pop
shll
pop
lods
cwtl
popl
mov
cli
push
inc
xchg
jp
add
jae
stos
and
push
je
subb
mov
jl
xor
repnz
xor
pop
or
outsb
jno
add
mov
cmp
pusha
sbb
movsl
dec
xchg
cmp
pop
push
daa
adc
shlb
and
mov
sbb
lret
lret
mov
pusha
sub
fcoml
jne
pop
jbe
add
jnp
sub
jge
cmpsb
test
add
addb
sti
xchg
ja
add
rolb
and
push
and
push
xor
dec
andl
leave
adc
call
fs
outsl
add
push
jb
in
in
add
pop
pop
rolb
out
add
sub
mov
and
in
int3
rorl
mov
jle
push
adc
mov
adc
push
out
or
repnz
mov
pop
repnz
test
jnp
add
test
pusha
dec
sbb
loopne
add
push
faddp
push
js
shlb
inc
cli
add
fildl
testl
xor
rorb
cli
out
inc
in
insb
mov
mov
add
pop
jbe
cmovae
pop
rcl
add
fwait
xchg
dec
rol
bound
shl
add
outsb
gs
in
and
and
jmp
add
pop
jmp
mov
mov
pop
daa
in
mov
das
jle
and
add
outsl
adc
add
mov
mov
adc
sahf
sub
add
pop
ss
and
cmpsl
test
cwtl
adc
sbb
popf
mov
mov
inc
jg
fidivrl
aaa
and
xchg
inc
loope
adc
jp
adc
xor
and
add
xchg
pop
and
mov
and
jl
aaa
push
stos
sub
add
mov
add
dec
push
dec
in
xlat
pusha
push
fwait
gs
pop
test
lcall
adc
add
arpl
xor
aam
hlt
cwtl
scas
add
in
xor
ret
fldenv
es
xor
and
loope
add
push
pop
dec
in
jmp
insl
mov
adc
inc
mov
mov
adc
push
add
xlat
lds
fucomp
jmp
cmp
roll
mov
call
stos
clc
daa
popf
cmp
xchg
jge
xor
pop
inc
jge
add
jmp
mov
jg
popa
and
push
push
jmp
add
adc
jo
add
pop
mov
jmp
pusha
cs
inc
xchg
add
js
xchg
push
dec
jns
add
sbb
fists
adc
rorb
addr16
xor
push
lock
repz
scas
icebp
mov
dec
add
mov
js
mov
pop
jle
cmp
scas
add
or
loop
push
pop
jno
add
inc
mov
jo
insb
jmp
pushf
sahf
inc
clc
push
add
adc
inc
out
pop
xlat
mov
fldenv
test
cmp
push
mov
push
loopne
ja
les
repz
add
scas
xchg
pushf
add
cmp
sbbb
dec
lret
cmp
add
adc
push
and
leave
jecxz
add
push
sub
lock
das
cmp
sub
hlt
int3
or
loopne
inc
mov
das
pop
scas
idivb
jmp
fldl
mov
jge
in
cmp
xor
jae
adc
ret
nop
xor
push
iret
js
jge
push
out
jg
or
add
jecxz
and
sarl
add
scas
bound
add
add
push
shl
add
hlt
cld
add
ds
adc
repz
add
cld
hlt
out
xor
popa
add
xor
inc
pop
mov
adc
aad
or
call
cs
pop
das
or
sub
jno
loop
test
fdivrs
lock
arpl
in
cli
lcall
add
adcl
mov
cwtl
pusha
jne
cltd
jno
pop
cmp
rcl
iret
and
jecxz
push
out
loopne
add
clc
mov
add
dec
pusha
mov
fsub
mov
aas
add
adc
enter
add
scas
push
dec
xchg
add
fstl
xchg
jno
sub
cmpl
fwait
xchg
out
ss
pop
cmp
sub
rcr
mov
mov
mov
jnp
imul
lds
fs
sbb
aaa
mov
cmp
testb
aas
daa
test
or
sbb
add
movsl
adc
push
push
mov
add
sub
inc
push
test
jb
loopne
and
mov
jg
in
cmc
lret
orb
add
pop
add
mov
xchg
adcb
test
cmp
call
and
cmp
and
decl
jecxz
xchg
pop
aam
subl
xchg
add
inc
nop
pop
or
mov
xchg
dec
pop
fisttps
sahf
xor
sbb
xor
into
jbe
int
les
mov
shl
inc
pop
jnp
shll
cmp
add
int3
stc
je
mov
pushf
cli
sbb
xor
arpl
cmp
cmp
pop
adc
movsl
jns
pop
imul
lret
add
or
lret
sbb
ret
or
movsl
addr16
hlt
add
or
pop
dec
addb
lret
ds
loop
add
jg
inc
and
adc
xchg
insl
repnz
xchg
and
add
inc
lods
aad
in
or
add
ljmp
popf
adc
outsb
push
xchg
shlb
and
mov
sub
add
dec
in
pop
jo
pop
adc
push
add
mov
inc
mov
lods
add
imul
ljmp
and
andl
outsl
enter
fdivrp
repz
or
or
push
or
loopne
fcoml
xor
cmp
in
es
pop
repz
fiadds
xor
out
mov
inc
ficoml
movsl
adc
dec
outsl
sub
jno
pop
push
popl
add
inc
xchg
dec
aad
dec
cmp
lock
rorl
sbb
sarb
sbb
sub
nop
dec
mov
inc
jb
cld
iret
or
sub
xorb
inc
cmp
fdiv
or
clc
push
out
mov
testl
mov
cwtl
adc
add
clc
sbb
lret
cmp
cwtl
cli
loope
int
in
add
clc
lret
std
xchg
cmpsb
adc
mov
inc
add
js
push
add
jno
add
mov
out
dec
cmpsl
aam
push
sbb
sbb
mov
adc
enter
gs
pop
outsb
cli
sbb
stos
add
xchg
fisubs
push
cmp
test
dec
dec
jns
jb
jo
and
icebp
rclb
jbe
sbb
aad
loope
fiadds
dec
mov
push
clc
addr16
in
test
add
sbb
sub
or
in
out
push
dec
or
addr16
sbb
enter
jle
movsb
lock
sbb
ds
or
int
sti
mov
out
xor
gs
mov
aam
fstpl
fwait
xor
test
and
out
or
pop
sbb
inc
icebp
or
loope
shll
mov
hlt
lods
and
cld
xor
insb
dec
mov
test
in
loop
sub
ret
push
xor
add
std
jmp
int3
aaa
pop
movsl
xor
das
mov
icebp
out
cmp
adc
or
loopne,pt
rcrl
mov
or
pinsrw
pusha
dec
in
mov
add
add
nop
jo
xor
cmpb
sbbl
in
test
or
mov
mov
push
mov
sub
int3
fstl
shlb
add
inc
xor
add
push
out
out
push
fdivrs
add
or
fs
xchg
push
xlat
pop
aam
arpl
sub
add
leave
ds
sbb
add
jne
add
in
ljmp
pop
and
cltd
inc
sbb
fcmovu
scas
mov
pop
jnp
pop
jns
sub
pop
fildl
popa
jecxz
mov
sub
adc
lods
add
popf
xchg
ss
lods
mov
inc
out
fnstsw
add
push
dec
mov
lock
mov
sarl
push
xorb
pusha
xchg
pop
dec
mov
xchg
mov
fisubs
loopne
std
pop
test
gs
push
sbb
addl
push
cmpsb
shlb
jp
dec
jmp
mov
xchg
push
pop
mov
mov
sub
xor
insl
jg
maskmovq
int
out
or
pop
sbb
lock
notb
mov
roll
cmp
inc
dec
test
add
add
inc
into
bswap
jle
hlt
add
and
sbb
add
sahf
andl
mov
in
iret
push
and
cli
push
cmp
pop
outsl
inc
cmp
mov
pusha
inc
pop
push
inc
jmp
mov
in
int
xor
mov
jl
or
cld
or
cmpl
cmp
add
loop
add
scas
push
mov
xchg
in
jle
stc
jp
out
ret
rcrb
push
add
jmp
pop
orl
push
sub
ss
popf
dec
xchg
push
jp
and
cmp
xor
sbb
push
popa
dec
mov
add
push
shlb
add
repnz
jnp
popa
add
in
adc
pop
add
sbb
sarl
mov
sub
aaa
stos
daa
jno
jp
dec
pop
aas
push
enter
xchg
add
mov
jbe
pop
cwtl
sub
xchg
add
cmp
lock
add
cmc
js
popf
cli
mov
add
push
rcl
or
xchg
bound
in
sbb
jge
sbb
lds
xchg
sbb
hlt
xchg
cmp
adc
ja
aam
adc
addl
pop
xchg
aam
ret
jg
adc
xorb
pusha
loopne
sbb
insl
sbb
inc
add
jns
mov
cld
add
je
push
add
and
ds
scas
fwait
add
cld
out
xchg
sbb
lods
lock
lds
mov
out
push
or
push
aaa
repnz
push
inc
adc
push
add
andl
loopne
testb
fnstsw
sbbb
push
hlt
ret
clc
dec
add
cwtl
mov
push
cld
in
xchg
adc
jg
xor
xor
test
loope
add
mov
add
jae
adc
outsb
push
xchg
dec
mov
subps
inc
mov
mov
aam
data16
lret
lcall
pusha
adc
shrb
stos
cmp
rcll
mov
cli
mov
addb
inc
pop
movsb
mov
loope
jb
ljmp
sub
lea
mov
mov
rcr
push
imul
jg
and
add
leave
nop
fstpl
sarl
adc
je
dec
add
test
clc
in
outsl
push
mov
lock
out
mull
je
dec
push
clc
jno
mov
add
add
cmpsl
or
or
mov
iret
sub
xor
mov
add
sbb
inc
nop
inc
adc
add
mov
syscall
ficompl
cli
aas
ret
movsl
jae
mov
dec
xchg
in
repnz
push
dec
lret
push
jno
add
movsb
andb
aam
call
sub
push
push
jge
pop
flds
xor
enter
fsubr
pusha
iret
add
jb
sbb
mov
jmp
xor
jns
adc
pop
add
mov
rol
hlt
push
sar
mov
xor
nop
and
jge
add
inc
cmpsb
lock
jae
mov
hlt
sbb
cmpsb
add
icebp
cmp
xchg
sbb
mov
icebp
push
int
jae
repnz
iret
pop
cmpsb
or
sbb
test
outsl
inc
add
xor
hlt
adc
mov
nop
sub
repz
xchg
xor
fcomps
lret
and
outsb
lcall
test
dec
or
scas
push
fstpt
inc
jmp
std
aas
movsb
add
pop
inc
add
xor
cs
in
addr16
cltd
mov
add
jne
or
lahf
cli
test
xor
or
stos
jnp
enter
add
loope
call
test
shl
sub
mov
shrl
aas
add
insb
icebp
dec
je
jl
xor
mov
rorl
jbe
inc
icebp
add
and
jb
and
and
aad
call
add
outsl
punpcklbw
or
mov
add
insb
inc
mov
loop
add
sub
cmp
jae
fistl
push
and
paddusw
dec
std
mov
shrb
mov
adc
aam
inc
negl
adcb
sbb
push
je
into
sub
or
adc
fisubs
ljmp
ret
xchg
pop
xchg
xor
stc
add
jno
and
push
cld
mov
and
jno
ljmp
or
sub
dec
fcompl
xor
mov
add
nop
pop
in
imul
ja
test
or
in
cmp
adc
daa
mov
xchg
add
jmp
dec
loopne
fwait
sub
dec
push
cmc
dec
fnstsw
scas
out
aaa
cmp
mov
bound
push
rclb
push
ja
std
clc
jmp
mov
fst
adc
aad
sbbb
std
aam
lret
pop
jae
aaa
insb
dec
fdivrs
push
mov
sub
test
pop
cmp
and
faddl
mov
mov
xchg
xchg
jo,pn
outsb
jbe
mov
push
jecxz
push
loope
mov
inc
ja
lcall
cwtl
test
and
cmpb
mov
cmc
or
cmp
in
push
jecxz
movsl
adc
jno
inc
out
inc
inc
lret
push
es
xor
cmp
data16
jno
pushf
popa
mov
cld
fildl
ret
enter
add
pop
ljmp
add
out
aam
push
ret
xor
adc
jo
mov
mov
add
xchg
imul
xchg
rorb
dec
mov
or
dec
xchg
mov
es
sub
dec
sbb
or
cs
adc
popa
dec
pop
sub
pop
sbb
test
sbb
push
rol
clc
imul
adc
push
push
out
xchg
xor
cmp
or
add
andl
aad
add
cmpsb
es
enter
in
pusha
cmp
into
lds
adc
pushf
adc
mov
rcr
popa
shrb
and
or
icebp
sbb
add
pop
push
pop
into
push
push
adc
rcll
sbb
mov
pop
and
jg
mov
outsl
enter
adc
imul
dec
inc
cwtl
xchg
fwait
add
mov
add
or
cmp
cmp
dec
lret
js
cmp
sub
les
subb
mov
mov
push
les
fwait
dec
dec
pusha
sbb
ud1
int3
cmp
dec
or
adc
or
sub
dec
sbb
adc
bound
call
loop
pusha
pop
mov
rolb
mov
xor
add
sub
pop
js
dec
dec
jae
cmp
pop
dec
andb
pop
rolb
shrb
arpl
sub
sub
lahf
rolb
inc
sarl
add
xor
out
fsubrs
xor
cld
incb
dec
out
fmul
adc
add
mov
imul
mov
imul
inc
add
loope
cmp
imul
push
inc
cld
inc
andps
push
mov
add
adc
ss
mov
hlt
add
cmp
and
cwtl
or
in
jo
push
add
add
push
int3
adc
mov
xchg
pop
cmp
es
orb
add
push
insb
mov
xchg
inc
xchg
inc
and
sarl
cmpsb
add
mov
push
push
mov
sbb
adc
lcall
addr16
outsl
js
add
jle
mov
adc
hlt
ucomiss
pusha
or
or
xor
ficoml
jecxz
fsubr
sbb
and
test
popa
jg
jo
lea
psubusw
or
jne
jb
xor
pop
jo
cld
mov
int3
or
jne
sbb
dec
repnz
cmp
push
lods
mov
add
xchg
xor
inc
mov
and
sbb
in
sbb
test
dec
or
inc
mov
dec
inc
jle
jecxz
pop
adc
ja
js
roll
sub
data16
sbb
orb
mov
pop
push
daa
jge
xor
mov
dec
fnstenv
test
pop
das
mov
stos
add
jmp
fldl
cltd
loope
mov
mov
pop
repnz
mov
mov
jl
xchg
and
push
fcmovb
push
push
loopne
lods
iret
adc
sub
inc
enter
xchg
aad
int
add
xor
sahf
add
and
push
dec
and
lock
pop
test
data16
outsb
fs
mov
push
sbb
loope
icebp
sub
mov
sbb
sbb
xor
cmpsb
add
mov
and
jecxz
std
jnp
mov
shll
mov
aad
dec
leave
or
add
pushf
cmp
outsb
inc
insb
mov
shl
and
cld
mov
cmp
insl
repnz
and
sbb
mov
pop
int3
movhlps
imul
adc
inc
mov
mov
jle
or
add
ffreep
and
pop
int
dec
insb
popa
sbb
nop
add
inc
xor
add
out
push
mov
push
mov
sub
mov
mov
test
loop
inc
pop
addb
jl
sbb
pop
cli
stc
xor
xor
push
lods
scas
in
mov
mov
lahf
and
push
pop
loopne
fs
jno
push
jns
fwait
cmp
add
lcall
sbb
jae
ljmp
push
test
pop
dec
nop/reserved
ljmp
inc
push
outsb
pop
mov
or
jg
lret
cs
mov
out
cs
in
mov
or
enter
pop
add
add
jae
push
xchg
cmp
dec
pop
sub
mov
add
mov
add
push
push
in
adc
cwtl
lds
adc
and
add
push
sub
test
ret
sub
nop
and
xchg
js
xor
push
mov
sub
or
ss
outsb
jo
mov
mov
add
add
mov
xbegin
rcrl
daa
std
aam
push
push
imul
loopne
into
rclb
push
mov
mov
jae
xor
xchg
add
adc
jmp
int
inc
test
inc
dec
dec
dec
shlb
movsb
sub
andl
push
dec
mov
inc
mov
jl
add
jmp
gs
adc
loopne
cld
mov
pop
and
cld
xchg
mov
popf
dec
xor
cwtl
pop
cwtl
rcrb
dec
loope
mov
add
pop
ret
fdivs
out
add
icebp
cmp
dec
add
inc
neg
jae
pop
fs
push
sahf
in
sbb
sbb
jbe
lods
outsb
add
sti
aas
movsl
push
in
or
cmp
decl
dec
cmc
sarl
mov
dec
mov
sbbb
pop
loop
add
push
les
stc
mov
out
add
lret
xchg
sub
sbb
add
jp
std
jbe
and
clc
lret
aam
and
fcoml
cmp
jns
cs
lock
scas
jns
pusha
jbe
add
aam
lods
inc
xor
pop
pushf
lods
fisttps
mov
add
adc
cltd
push
shl
add
leave
push
clc
in
mov
les
fcoms
sub
popa
mov
mov
scas
in
stos
out
xchg
and
cmpsb
sub
aam
add
cli
mov
gs
push
push
dec
imul
rcrl
sbb
aaa
xchg
clc
enter
add
aad
cmp
mov
mov
xchg
push
mov
mov
fs
bound
gs
imul
orb
add
adc
sarb
test
pop
fsubs
cli
mov
js
and
add
jmp
lret
loopne
movsl
mov
mov
imul
imul
dec
shrl
lock
dec
loop
popf
js
clc
jmp
iret
jb
cld
orb
mov
mov
into
cmp
mov
mov
loope
adcl
adc
or
data16
or
cmpsb
mov
pusha
adc
lock
add
sub
add
cwtl
cmp
es
inc
mov
xchg
mov
and
les
imul
adc
cwtl
add
mov
outsb
adc
sub
adc
or
pop
mov
xor
cld
mov
adc
mov
paddusb
pushl
pusha
sbb
jo
rcr
sbbl
bnd
sub
push
pop
pop
into
xchg
jle
fisubl
mov
or
push
int3
inc
xchg
mov
mov
outsl
dec
movsb
mov
mov
inc
call
sbbl
inc
scas
aas
negl
sub
cld
xorb
mov
insb
pop
subb
dec
push
add
fdivp
enter
add
test
mov
sub
cltd
testb
mov
leave
inc
insb
add
and
jbe
or
adc
push
addr16
repz
pushf
aad
add
testb
mov
add
jecxz
xor
pop
mov
xor
add
test
cwtl
inc
addr16
mov
jae
mov
add
mov
leave
jp
sbb
loopne
in
mov
push
sub
push
test
mov
repz
adc
cmp
icebp
scas
cs
aas
xchg
test
sub
clc
fcom
mov
out
xrstors
dec
adc
jle
sub
nop
daa
xor
orl
and
mov
in
mov
imul
inc
decb
in
cmp
push
andb
pop
sub
les
loope
mov
cld
es
add
andb
fwait
cltd
fidivs
int3
ss
rcr
or
cld
sub
imul
mov
je
fdivrl
cwtl
jge
out
dec
xchg
clc
jnp
mov
test
lret
pusha
cmp
loope
imul
inc
push
dec
into
sbb
fiadds
add
movsb
mull
adc
jae
sub
push
lock
addl
mov
add
jne
mov
mov
add
shll
lock
jno
loopne
es
adc
pusha
loopne
cs
push
nop
test
xchg
add
out
sbb
xchg
rclb
xor
orb
pop
std
test
jmp
negb
sbb
stos
mov
pop
clc
sub
cmpl
leave
inc
rclb
mov
in
aam
add
xchg
loopne
mov
in
les
mov
test
dec
jecxz
jle
out
ret
cmp
push
adc
insl
out
cmp
sarl
aas
dec
and
jo
push
shrb
icebp
push
add
int
addb
mov
add
ret
push
cmp
push
add
xchg
sbb
push
pop
int3
adc
mov
lock
adc
push
dec
and
repnz
cltd
xchg
xor
mov
cwtl
adc
and
and
mov
add
jmp
add
aam
dec
cs
jb
ror
mov
enter
push
out
ret
lret
add
sarb
sbb
jb
repz
adc
lret
cwtl
dec
pop
pusha
sub
mov
xor
mov
subb
outsb
shlb
dec
mov
fisubl
loop
add
sub
jb
pusha
or
mov
in
inc
repnz
sahf
dec
inc
lret
jbe
cmp
or
push
nop
jae
pop
les
pushf
xor
mov
notb
add
jl
pop
test
and
loop
xchg
lcall
adc
dec
xchg
popl
xchg
jns
add
or
outsl
mov
xchg
sub
jge
test
jne
sub
cmp
cld
or
flds
xor
push
rorl
aam
call
shlb
jnp
xchg
dec
rcl
and
push
enter
es
roll
jge
in
pop
adc
cmp
pop
test
dec
dec
pop
mov
xchg
mov
push
pop
cmp
sti
clts
xor
jo
mov
dec
or
push
mov
dec
enter
je
jecxz
loopne
rcrb
dec
add
mov
aad
xlat
aas
fisttpl
jle
add
and
fwait
shlb
xor
aaa
lcall
pushf
nop
xor
in
pusha
inc
js
loop
mov
fsubs
repz
push
mov
xor
sub
pop
or
mov
fldcw
add
dec
imul
push
sbb
loopne
stos
cld
clc
jecxz
outsl
cmp
or
mov
shlb
pop
sbb
rcll
sub
cwtl
lret
add
cmp
sahf
inc
pop
sub
xchg
sub
bound
lock
insb
mov
in
mov
push
xor
sbb
mov
mov
shlb
mov
dec
push
mov
mov
shlb
jl
push
push
clc
add
mov
jne
add
xchg
shll
bswap
inc
sub
addb
or
cltd
xchg
xchg
loope
xor
aam
lahf
jg
mov
pop
inc
lock
xchg
jmp
jne
cwtl
je
out
mov
mov
pop
prefetcht1
test
les
inc
loopne
push
jnp
mov
add
jo
cmc
xor
add
test
add
and
pop
jle
nop
inc
jns
lods
insb
cs
dec
les
fsubrl
cwtl
lret
jae
lods
adc
mov
out
gs
es
movsl
sbb
cli
mov
push
push
add
push
outsb
lahf
shll
hlt
icebp
popa
push
loope
pusha
and
mov
inc
xor
jg
out
pop
jecxz
jo
and
or
dec
daa
add
bswap
aad
nop
rolb
lahf
dec
and
ret
dec
jp
mov
or
sahf
add
jp
ja
dec
rcrb
pop
dec
and
jo
in
roll
jp
jno
xor
or
int3
xchg
mov
add
lds
cmp
jo
push
mov
xchg
push
sub
adc
loop
add
mov
push
add
pusha
push
fistps
rorl
mov
repz
adc
push
aaa
hlt
push
clc
mov
pusha
jae
sub
ret
sbb
inc
cwtl
dec
rcrb
add
js
cltd
ljmp
popf
xlat
outsb
int3
mov
add
std
inc
sub
pop
repz
dec
call
subl
cmc
add
cmp
mov
adc
dec
subb
inc
pusha
das
adc
adc
nop
lods
lahf
aas
test
idiv
add
movsl
pushl
cmp
adc
adc
inc
das
dec
rolb
div
out
enter
or
loopne
sarl
mov
dec
cmp
sub
add
sarl
push
mov
jle
imul
or
cwtl
sub
fmuls
push
add
inc
sti
add
and
in
lock
cmp
mov
sub
add
subb
inc
rcl
in
mov
scas
les
inc
mov
pop
cs
sbb
pop
push
test
fnsave
in
and
or
add
scas
mov
sub
mov
push
hlt
pop
lldt
sbb
imul
aad
push
movl
mov
cwtl
inc
ja
jo
ljmp
scas
sbb
test
arpl
xchg
aaa
add
add
jns
imul
mov
jno
push
inc
popf
sbb
mov
mov
shlb
aad
mov
pop
add
pop
mov
mov
and
sbb
cwtl
push
or
adc
pusha
fs
mov
pop
xchg
sub
pop
adcb
dec
lea
xchg
test
rcr
xor
pop
lods
or
sbb
lahf
outsb
xchg
aam
pusha
shlb
sbb
dec
mov
pop
jl
mov
mov
jmp
and
fucomi
pusha
xchg
cmp
or
fwait
dec
xchg
sbb
in
and
mov
daa
sub
pop
dec
jmp
loopne
sub
fwait
xor
in
ficomps
dec
xchg
push
rcrb
cld
xchg
imul
jle
lret
movl
pushf
jno
das
aas
push
pop
orb
dec
repz
and
sbb
stc
stos
sub
lock
pop
test
scas
gs
add
cli
lods
sbb
pop
xadd
add
push
aad
xor
insl
push
inc
jnp
pextrw
mov
and
mov
cmp
add
adc
test
out
cld
mov
nop
pop
add
pop
mov
mov
cmp
adc
aam
pop
jl
xor
hlt
jle
or
call
mov
clc
repz
ja
mov
jae
dec
or
and
sub
xor
enter
loopne
jo
add
and
lods
pop
mov
das
push
lods
adc
push
mov
pushf
dec
rorb
push
push
sub
addb
push
add
fsubr
in
add
inc
mov
fsubrs
movb
push
sbb
daa
dec
insb
jl
add
pusha
rdmsr
fldt
arpl
add
nop
mov
mov
mov
mov
dec
stos
push
sbb
in
rcrl
xchg
jge
mov
lcall
sbb
add
cwtl
push
jecxz
add
je
sub
cltd
pop
aam
pushf
jl
jbe
sub
lahf
inc
jl
and
jno
or
aaa
leave
lea
xchg
mov
inc
call
clc
push
mov
pusha
in
imul
push
sarb
or
and
aam
lods
sub
mov
and
mov
in
add
ss
bts
xor
dec
jae
sub
sub
mov
xchg
or
je
outsb
mov
jo
incb
adc
dec
es
inc
pop
mov
push
inc
sbb
adc
add
add
xchg
ffreep
or
inc
cli
in
adc
aad
enter
jnp
push
stos
mov
sbb
fistpl
xchg
aad
in
out
add
mov
jo
xchg
add
stc
xchg
add
fwait
sub
dec
add
inc
adc
pushf
enter
test
loopne
and
push
test
cmp
mov
push
fucom
mov
sub
fcoms
and
aam
sahf
mov
sub
xchg
mov
loopne
lods
pusha
ja
add
xor
sbb
or
add
pop
add
push
cltd
les
push
push
jns
enter
and
sets
cli
scas
js
pop
iret
popa
push
in
xor
adc
xchg
rcrb
test
pop
sbb
inc
or
jl
stos
inc
mov
and
xchg
push
ds
es
outsl
nop
rclb
pop
mov
cwtl
xchg
pop
and
add
lods
dec
sbbl
mov
lret
inc
push
jae
cli
cmp
lock
das
pop
pop
cmp
sub
pop
rorb
mov
push
shl
inc
push
out
xchg
add
cli
add
adc
sbb
pop
cld
inc
mov
ret
js
flds
mov
sbb
dec
jno
adc
xchg
test
cmpsl
imul
mov
push
sub
aad
aaa
cmp
mov
std
clc
enter
push
fsubrs
mov
xor
mov
add
loopne
add
pop
push
pusha
and
add
test
jae
cs
ss
outsb
mov
bound
pusha
mov
or
mov
sbb
xchg
mov
into
pop
mov
cmp
push
cli
mov
nop
xchg
mov
stc
aam
mov
add
stos
mov
dec
and
or
pop
xor
notl
add
jnp
lret
dec
outsb
in
inc
iret
xor
mov
insb
sub
dec
sub
xchg
xchg
pop
iret
je
jo
ss
fnstenv
test
push
push
mov
andl
loope
add
push
lock
xlat
xor
or
xchg
test
std
sub
push
clc
test
xor
fiadds
aad
xlat
addr16
and
imul
add
loope
sub
in
jnp
mov
pop
xor
rorl
incb
pusha
pop
out
jmp
lock
jp
psllq
add
mov
inc
sar
add
jle
push
outsb
mov
imul
add
imul
lret
addl
and
iret
out
insl
xor
clc
subb
mov
repz
mov
cmp
pusha
sub
adc
push
dec
inc
int
add
sbb
daa
pop
fldcw
notl
and
xchg
add
add
sbb
inc
in
jno
inc
xchg
jnp
pop
mov
sbb
repnz
mov
jmp
mov
and
sti
add
shrl
push
push
into
clc
mov
cmpsb
dec
adc
dec
add
sbb
inc
mov
or
xchg
pop
cli
push
mov
sub
cmp
fwait
out
lods
mov
enter
imulb
and
lds
lock
pop
dec
push
jno
adc
mov
add
daa
notb
cmp
or
or
int
lock
add
ja
sub
add
cmp
and
aas
jbe
fs
and
jmp
or
adc
add
testl
add
repz
shll
mov
sub
in
gs
mov
adc
and
fndisi(8087
mov
imull
xchg
and
mov
add
fsts
add
add
jg
sbb
push
test
sub
sarb
pop
mov
in
pop
ret
out
movsl
les
fcom
in
rep
mov
or
mov
lock
pop
rorl
and
xchg
adc
loopne
or
push
mov
add
lret
lods
mov
sbb
mov
rolb
aaa
add
inc
loop
lods
jo
dec
cmp
wbinvd
inc
popf
jmp
xor
push
mov
dec
jmp
sbb
inc
add
test
addr16
andb
push
inc
mov
gs
test
push
pushf
and
and
add
cmp
repnz
inc
leave
loope
lret
les
or
mov
adc
xor
inc
mov
repnz
sarb
sub
pop
iret
or
or
fdivrs
and
insb
ljmp
push
add
movsb
push
bound
xor
jo
mov
pop
adc
cmp
push
jmp
test
adc
mov
in
mov
mov
ss
xor
hlt
mov
mov
mov
adc
arpl
or
out
xchg
pusha
outsl
or
mov
ret
pop
or
shrb
jo
and
outsl
mov
push
pop
push
add
adc
ljmp
lcall
add
loopne
cs
cmp
mull
lret
cmp
clc
push
inc
and
pusha
cld
or
push
lret
daa
jb
adc
rclb
adc
add
sbb
push
jbe
insb
pop
test
jnp
test
stc
icebp
sub
insl
aam
test
mov
mov
mov
and
inc
das
lock
cs
sti
andb
clc
jbe
dec
push
xadd
cmp
pop
add
dec
or
xchg
sub
pop
nop
sbb
imul
adc
imul
sub
sbb
mov
add
xchg
fs
jo
mov
push
mov
pusha
stos
stos
repz
cmp
inc
jno
mov
add
popf
cmp
xchg
push
and
aas
inc
shlb
inc
push
stc
aaa
xchg
mov
ds
add
outsb
mov
inc
aas
pusha
add
mov
mov
inc
sbb
out
or
add
jge
rcr
push
daa
stc
mov
fidivrs
call
out
adc
xor
xchg
mov
push
cmp
inc
pop
fildll
fcoml
fcompl
stc
mov
push
cpuid
cli
dec
lock
nop
insl
fidivrs
repz
sbb
sbb
pop
stc
mov
mov
mov
andl
dec
cmp
mov
enter
adc
movsl
icebp
stc
push
sub
fcoms
movsl
jns
add
dec
jbe
inc
and
or
dec
and
add
jne
mov
xor
popf
enter
adc
push
inc
divl
push
xor
jp
fs
jg
jmp
inc
sbb
lret
cmp
int
andl
sub
aas
clc
or
fimuls
add
mov
and
cs
dec
repz
adc
jge
xor
cld
cwtl
frstor
ret
les
sub
jecxz
lock
in
iret
in
adc
cmpb
loopne
insl
out
int3
pshufw
jbe
mov
sbb
test
jo
sahf
enter
loope
add
xor
arpl
subb
loopne
fdivr
add
js
scas
and
rclb
adc
call
mov
add
aad
bound
out
add
xchg
adc
sar
dec
sbb
jle
xor
mov
shrd
sbb
cwtl
into
nop
xor
pusha
sbb
neg
inc
adc
xchg
arpl
inc
scas
xor
lret
xor
cs
call
jmp
popf
nop
les
insl
add
push
jge
in
jg
popa
or
push
push
les
adc
cmp
mov
mov
lods
mov
push
shll
xor
sub
rorb
and
je
filds
push
dec
add
loopne
inc
int3
sub
mov
push
arpl
sbb
or
mov
aam
xorl
lods
xchg
mov
fwait
orl
xchg
inc
aaa
data16
sub
imul
add
pop
jo
push
cmp
add
adc
sti
add
mov
xchg
inc
xchg
jb
mov
mov
pop
fisttps
stos
andb
cs
push
addl
cmp
stos
cmp
and
sbb
nop
add
aaa
xor
add
icebp
popf
mov
add
cwtl
in
jge
outsb
daa
inc
adc
mov
sbb
dec
add
int
lods
out
loopne
xchg
adc
sbb
jl
add
push
or
mov
inc
outsb
inc
cmp
xor
iret
ljmp
jo
imul
xchg
adc
std
nop
shlb
mov
loope
xchg
enter
repnz
sub
insl
mov
leave
xor
push
jnp
jb
rclb
sub
lret
mov
repnz
flds
imul
add
stc
sbbb
ljmp
lret
pop
sbbb
sbb
jl
dec
insb
nop
cmp
lods
dec
jmp
mov
adc
je
es
jge
sub
pushf
jecxz
gs
mov
or
rorb
add
push
adcb
stc
test
inc
xor
popf
or
fstpt
mov
inc
sbb
ret
test
int
add
push
movhlps
inc
xor
insl
push
in
pusha
add
push
int
inc
mov
fwait
lds
jb
hlt
je
mov
aam
push
pop
imul
nop
les
addr16
mov
ds
add
xchg
shrl
test
out
fcompl
lret
push
pop
sub
out
mov
int3
push
and
mov
notl
jp
je
cs
jo
adc
or
xchg
andl
and
int3
push
mov
aam
inc
jl
jnp
add
les
dec
or
jb
push
sbb
xor
in
mov
enter
mov
and
xchg
xor
adc
inc
sub
and
mov
jle
aam
add
ret
mov
sarb
add
lods
icebp
xor
cmp
add
mov
imul
scas
loop
out
lfs
cltd
push
or
lock
loopne
fidivrl
push
loopne
out
mov
jb
mov
add
pop
and
rorl
push
add
pop
mov
mov
iret
mov
cli
cmc
cs
pusha
xor
inc
subb
setle
cmp
dec
rcl
lcall
dec
in
daa
pushf
add
mov
push
adc
js
stc
pop
gs
pop
test
jl
lret
and
jecxz
mov
sbb
push
push
mov
add
xchg
cld
testb
iret
lea
adc
cmc
xchg
add
sub
add
imul
jno
push
dec
call
lock
clc
mov
push
add
and
test
cli
sub
mov
lds
pushf
mov
jge
pop
dec
imul
cmp
add
lret
and
push
push
rorb
inc
daa
cmpsl
jno
pop
or
pop
into
and
mov
and
out
lods
loop
fadd
pusha
pop
lcall
mov
sbb
repnz
mov
testl
cli
pop
out
rolb
add
scas
sub
and
xchg
dec
seto
cld
xor
fiadds
xor
add
adc
int
sub
stos
dec
shll
outsl
mov
push
leave
js
cmpsb
mov
xchg
xlat
shrb
mov
sarb
js
shrb
sbb
lds
sbb
adc
data16
pop
add
clc
pushf
popa
add
int3
pop
mov
jo
in
jbe
adc
mov
in
add
inc
mov
subb
out
push
pop
and
into
cmpl
mov
imul
mov
add
fs
inc
shlb
cmp
push
sub
sub
mov
mov
dec
mov
hlt
mov
xchg
pusha
loope
and
push
jno
or
dec
out
sbb
loope
add
mov
leave
adc
jnp
add
sbb
jo
sbb
sbbb
add
mov
inc
js
movsb
inc
push
inc
data16
or
or
lcall
inc
jb
sbb
mov
iret
arpl
and
test
out
jl
lock
xchg
mov
jo
mov
add
push
or
inc
insl
add
cmpb
and
shll
mov
ljmp
add
push
add
int3
orb
movl
popf
sbbl
cmovno
mov
lcall
lret
push
xchg
aad
add
adc
sahf
mov
rcr
or
sub
pop
inc
pop
imul
hlt
pop
call
sub
add
jmp
in
jge
mov
imul
adc
push
xor
inc
dec
push
and
push
shll
dec
sub
adc
addl
nop
mov
aam
dec
in
popf
add
roll
rorl
repz
sarb
xchg
pop
push
mov
push
xor
add
cmp
loopne
orl
add
and
dec
mov
in
inc
ret
mov
add
xchg
and
add
je
mov
cld
mov
add
stos
jb
test
mov
xor
and
test
arpl
cli
mov
inc
add
mov
rolb
or
add
push
mov
adc
add
imul
and
loope
mov
jecxz
movsb
add
loop
in
push
pop
call
adc
pop
push
or
mov
dec
nop
jbe
ret
shl
mov
popa
jo
mov
add
add
movsb
dec
loope
nop
in
adc
movsl
dec
add
and
lcall
adc
sbb
out
jnp
mov
lahf
add
outsb
sbb
add
mov
inc
xor
jno
add
inc
std
mov
lret
cmpb
cmp
lea
add
add
fwait
outsb
or
dec
mov
mov
call
inc
and
xchg
clc
pop
mov
cwtl
clc
movsl
add
jns
outsl
pop
js
fwait
mov
shl
je
insb
mov
cmp
or
fildl
js
xor
clc
add
aas
mov
sbb
imul
outsl
in
or
jns
leave
cld
in
nop
outsb
inc
into
add
add
sbb
add
fldl
pop
add
add
fstps
js
and
push
mov
and
add
outsb
push
inc
jo
inc
and
fwait
add
lret
test
sub
mov
jb
cmpsl
cltd
test
xorb
shll
and
add
fadd
push
cmp
lods
mov
nop
addb
adc
scas
jl
xor
sbbb
mov
fisubs
add
xor
mov
cli
rorb
pop
call
les
cmpsl
es
mov
mov
cld
rcr
add
cmp
mov
sbb
movsb
xlat
sub
ljmp
xorb
test
fcomip
add
outsl
mov
aas
xchg
roll
jnp
xchg
xor
movsb
das
add
nop
cwtl
pop
add
lods
insb
lcall
sbb
cmp
out
dec
inc
mov
or
sub
jne
fsubs
add
pop
and
pop
add
add
arpl
icebp
test
test
add
hlt
cld
mov
call
cltd
mov
fnstsw
push
add
adc
dec
addr16
orl
xor
filds
inc
jl
cmpb
daa
int3
mov
push
add
les
mov
subl
js
lret
shlb
jo
test
pxor
or
cmp
pop
aad
popf
add
cmpsb
scas
fimuls
loop
xchg
xchg
push
adc
and
inc
xchg
dec
pusha
jns
icebp
into
xchg
sti
add
jecxz
dec
ss
ds
rorl
and
out
lods
test
mov
add
mov
test
orb
and
movsl
adc
add
push
fstpl
out
imul
add
lods
dec
movsb
loope
jge
add
add
jae
cs
icebp
add
ret
stos
mov
jo
sbb
shlb
test
outsb
pop
dec
add
lret
lods
cmp
jmp
or
aaa
jns
jecxz
fnsave
add
je
int3
mov
mov
or
dec
add
push
adc
stc
hlt
xor
sub
sahf
mov
out
data16
lret
xor
push
aam
addb
mov
inc
add
int
jl
jb
inc
movsb
iret
popl
in
lods
add
sub
fwait
lock
and
push
iret
js
mov
xor
add
movsl
popa
push
add
add
cltd
sub
mov
xchg
cmpb
enter
cmc
pop
in
loope
sbb
sbb
jne
sbb
test
inc
loope
inc
xor
xchg
or
push
add
inc
scas
xchg
insb
mov
orl
add
xchg
hlt
mov
mov
or
insb
mov
mov
int
add
and
adc
jecxz
or
ljmp
push
add
shlb
cld
and
arpl
add
lds
test
stc
mov
jbe
mov
inc
loop
fbstp
lcall
add
push
add
lock
and
fsubr
imul
outsb
xchg
pop
hlt
or
shlb
xchg
cmp
or
in
cld
scas
xchg
push
lock
repnz
insb
rcrl
jne
inc
or
sub
in
and
outsl
adc
add
test
mov
lock
mov
xchg
cmpsl
fisttpl
inc
int
outsl
adc
in
sbb
push
repz
jl
dec
imul
sub
gs
mov
lds
jae
xor
mov
push
xchg
and
sahf
add
in
loop
jmp
pop
inc
push
enter
push
int3
dec
testl
xchg
or
xor
push
cmp
push
ljmp
fmuls
loope
mov
add
pop
add
or
xor
xchg
fcomps
nop
and
pop
push
movsb
xchg
xor
or
sub
and
and
add
sbbb
mov
add
jae
cs
push
out
sub
inc
and
fdivs
into
adc
adc
wbinvd
loope
subb
int
add
js
ret
inc
and
jo
nop
shrb
in
xor
jbe
in
popa
pop
adc
jp
sbb
rolb
mov
in
and
xor
and
mov
cmp
mov
loopne
inc
mov
vmread
cmpsl
mov
ljmp
adc
xchg
mov
and
xchg
divl
xchg
sti
test
cmp
jmp
loopne
mov
outsl
ss
xchg
movsl
add
and
pop
insl
outsb
xor
fs
ja
pop
fcom
iret
add
cmp
add
dec
jle
add
movsl
in
inc
adc
sahf
in
xorb
shlb
adc
dec
adc
add
adc
int3
scas
sub
arpl
cltd
jb
cwtl
lret
and
and
add
dec
filds
push
xorl
mov
movsl
push
int3
dec
lahf
add
loop
and
dec
mov
fs
sbb
xchg
in
fst
dec
push
inc
cld
lock
add
lds
push
pop
clc
or
mov
mov
insb
mov
or
mov
inc
jecxz
jo
xor
inc
sbb
cltd
jmp
enter
inc
xchg
push
es
addl
mov
aam
mov
inc
fucomip
xlat
dec
out
or
in
ret
xchg
sbb
and
mov
dec
cwtl
lods
into
dec
add
dec
adc
pop
in
rolb
mov
call
xchg
aas
add
in
sub
nop
dec
add
pop
xchg
jl
fdivrl
add
imul
cwtl
and
add
lret
nop
loopne
xor
jl
push
and
push
dec
hlt
test
add
push
out
not
sarb
out
fnstcw
add
cmpsl
scas
dec
in
mov
inc
out
jle
lds
add
or
sbb
neg
ds
mov
or
into
inc
adc
lock
dec
in
inc
jl
icebp
mov
inc
jmp
ficompl
or
add
mov
sahf
scas
leave
xor
add
add
loope
inc
or
cmp
stc
adc
mov
jne
xchg
data16
movsb
xorb
mov
flds
xchg
xchg
and
mov
lock
mov
add
icebp
lods
lock
movsb
xchg
jle
cmova
insb
lcall
lods
dec
or
or
subb
mov
adc
cmc
sub
mov
mov
adc
rorl
dec
sbb
xchg
fadd
movsb
faddp
jns
fnstsw
out
bound
cld
clc
scas
xchg
inc
push
dec
js
lar
fwait
pusha
mov
ret
loopne
fisubl
cmpsl
pop
add
int
mov
call
dec
add
std
add
ret
int3
push
and
rcr
js
lock
sub
push
jecxz
fucomp
inc
mov
pusha
push
loope
jnp
pop
js
pop
jno
sbb
add
ret
sarb
loopne
mov
sti
addr16
dec
cmpsb
flds
pop
es
in
pop
fildl
loop
icebp
je
dec
inc
rolb
aaa
sbb
jnp
xchg
pop
cmp
fmuls
stos
add
xor
jb
dec
loop
push
xor
cwtl
adc
push
arpl
mov
cld
dec
push
mov
cmp
mull
jp
seta
imul
add
mov
and
inc
inc
and
push
test
mov
xor
das
jne
test
in
and
xchg
in
aam
movsb
mov
clc
jmp
sub
call
mov
nop
adc
arpl
inc
jne
imul
inc
xor
shrl
add
sbb
mov
les
nop
inc
bnd
jns
movsb
fsub
out
shll
pop
out
add
push
pop
mov
lds
mov
inc
arpl
mov
pop
cwtl
mov
xchg
hlt
xchg
dec
inc
dec
sbb
xor
jmp
sbb
dec
xchg
and
shlb
xor
in
sbb
mov
out
pop
jmp
mov
jge
lds
push
add
inc
fcomip
loop
add
mov
inc
inc
sbb
in
pushf
adc
test
dec
enter
sbb
push
and
sub
out
xchg
mov
in
mov
and
in
sti
sbb
retw
nop
pushf
call
add
add
jp
repz
lcall
shll
and
add
add
sub
ss
xchg
push
repnz
mov
scas
xchg
mov
fcoms
mov
pop
jl
inc
inc
xchg
inc
lock
arpl
incb
jge
dec
jnp
xchg
dec
inc
add
xchg
out
mov
xchg
push
jmp
push
add
out
mov
lret
jl
dec
push
aam
push
and
push
and
cmpsl
and
loop
cmpsb
int3
pop
adc
add
cmp
imul
sbb
mov
cmpsb
sub
mov
int3
cmp
sbb
les
pusha
xchg
std
cli
cmp
sbb
mov
roll
adc
inc
orb
cmp
aaa
in
dec
movsl
push
pusha
mov
dec
aam
add
in
push
mov
push
ret
lret
add
orb
lods
lcall
sbb
inc
sar
sbb
popa
ret
adc
jb
sub
mov
je
enter
jo
inc
lods
cmp
loopne
inc
add
stc
and
sbbb
add
add
in
lahf
sbb
dec
sarl
mov
decb
stc
mov
add
push
adc
adc
pop
je
in
mov
fimuls
xchg
lock
inc
adc
out
add
popf
loop
sbb
sub
dec
xchg
xor
loopne
xor
mov
in
mov
xor
mov
loopne
inc
cmpsl
or
in
mov
fs
sbb
cwtl
mov
mov
arpl
inc
je
pop
jne
pusha
mov
add
nop
pop
mov
pop
mov
mov
push
adc
outsl
pop
add
adc
or
cmc
sti
insl
hlt
fs
mov
dec
lds
inc
insb
mov
add
or
push
and
inc
inc
add
cltd
sub
dec
cmpsl
cwtl
je
outsb
pop
adc
mov
mov
cmp
xorl
sbb
jnp
mov
dec
inc
pop
or
dec
imul
stos
xchg
popa
hlt
jle
fxch
jecxz
dec
sbb
mov
mov
ljmp
inc
add
movsl
adc
mov
loope
jno
add
subb
xor
add
sub
mov
xor
mov
notl
in
mov
cmp
pop
add
leave
mov
test
shrb
iret
inc
push
orb
aam
mov
and
shlb
cmp
daa
or
nop
dec
adc
ds
pop
testb
lcall
mov
cli
addb
outsb
mov
push
sbb
dec
dec
adc
and
and
insl
sbb
mov
push
rcr
mov
in
or
add
mov
nopl
dec
mov
sub
adc
das
add
faddl
jns
sub
ja
inc
xchg
xchg
and
sahf
fldt
aad
adc
je
or
sbb
push
adc
dec
adc
out
imul
popa
mov
dec
jns
loopne
mov
clc
pop
add
mov
xor
mov
lods
push
lock
or
mov
xor
xchg
inc
test
in
xchg
fisttpll
sbbb
add
iret
jno
xor
call
add
and
std
push
fwait
jg
pop
add
xor
js
sbb
cmpsl
jnp
inc
nop
cwtl
xchg
ljmp
lock
dec
cli
add
or
jle
fwait
je
leave
dec
sub
lahf
sbbb
adc
xlat
imul
xchg
jmp
stos
call
push
div
cli
xchg
or
subb
and
sub
adc
jbe
sub
jmp
int3
movsl
add
push
lods
add
xchg
inc
xchg
or
lods
mov
pop
cmp
mov
cltd
movsb
inc
sbb
imul
popa
loope
test
dec
sbb
add
ss
vmmcall
mov
mull
xor
loopne
mov
nop
jbe
add
enter
in
jns
roll
leave
and
mov
mov
pop
mov
mov
arpl
les
into
adc
jge
add
popa
loop
jns
pop
dec
or
xchg
test
jae
arpl
cmp
mov
mov
sub
int3
pop
pop
mov
add
ret
cmp
mov
cmpsl
add
out
adc
mov
mov
imul
call
pop
mov
jecxz
je
or
push
insb
add
xchg
xor
pop
cmp
add
or
shl
sub
inc
cmp
push
test
jne
xor
sub
xchg
testb
les
jnp
add
ljmp
add
sbb
dec
mov
fucomip
ret
adc
and
mov
cmp
add
rclb
fadds
add
sbbb
sub
mov
mov
mov
nop
xchg
dec
add
scas
add
cmp
loopne
xor
movsl
add
pop
mov
pop
fs
nop
mov
add
adc
lcall
mov
jmp
lea
xchg
pushl
push
adc
sub
dec
or
out
sub
pop
cmc
out
mov
mov
xchg
xchg
les
add
call
and
aas
outsb
test
pusha
xorb
je
fildll
xchg
subb
iret
or
gs
sub
jne
incl
out
inc
out
jbe
sbb
add
aas
js
cmp
xchg
push
cmp
cmpsl
add
adc
xchg
mov
lret
testl
push
enter
jo
in
and
or
mov
inc
dec
fisttps
out
jl
pop
sbb
inc
jp
fldl
or
jo
loopne
add
push
loopne
add
mov
rclb
and
push
sbb
mov
rorl
xor
out
add
dec
test
add
or
mov
stc
and
rcll
inc
std
fcoml
cmovge
pop
outsb
icebp
dec
add
xchg
dec
hlt
rorl
sub
stos
add
xor
in
xchg
movsb
mov
mov
insb
adc
rcrl
xor
or
int
mov
dec
add
adc
sahf
aas
imul
pop
push
loop
mov
sub
adc
or
bound
add
out
jecxz
pop
in
or
lcall
cmp
cmpsl
dec
dec
pop
jl
aad
imul
xlat
divb
adc
mov
adc
jecxz
or
fs
movsl
mov
repz
pop
push
jae
mov
mov
mov
cmp
pop
int3
lock
or
jle
jno
add
pop
aam
dec
inc
cmpb
add
sub
mov
push
mov
or
sbb
push
fwait
test
or
shlb
fst
inc
test
test
jge
push
mov
dec
add
cld
xor
icebp
rcll
jns
roll
dec
lret
mov
mov
loopne
mov
mov
dec
push
add
cld
outsb
mov
or
lahf
nop
and
pop
inc
fdivrs
repz
add
clc
in
mov
mov
mov
or
push
jbe
xchg
mov
adc
lock
data16
mov
mov
lret
cmpsl
cltd
jns
sub
mov
int
add
push
into
or
clc
int
pushf
aaa
xor
and
mov
fidivl
lcall
insb
dec
inc
inc
mov
dec
jg
hlt
adc
into
dec
andl
pop
jp
pop
mov
lds
pcmpeqd
jge
frstor
loopne
xchg
xchg
push
sbb
cli
inc
or
lods
inc
loopne
or
xchg
or
imul
loop
dec
clc
adcl
mov
xchg
dec
mov
mov
mov
jo
mov
pushf
add
out
pop
add
movl
add
sbb
mov
cmp
rcrl
pop
cmp
lock
jae
clc
nop
dec
mov
sbb
pop
test
sbb
jo
js
sbb
daa
fcomps
jo
loopne
push
xchg
add
out
insl
addr16
js
dec
jo
dec
mov
add
xor
les
insl
pop
call
xor
sub
mov
sbb
adc
aam
add
and
xchg
mov
pop
dec
cltd
add
jecxz
icebp
ret
push
cmp
movsl
mov
lahf
xor
xchg
push
dec
cmpb
leave
cld
inc
dec
or
xchg
sbb
movsb
inc
cli
pop
add
cs
mov
out
pop
push
xor
jecxz
or
ds
fs
pop
into
daa
mov
adc
enter
and
and
xorl
ficompl
mov
out
nop
mov
cmc
mov
add
into
test
rcll
xchg
mov
imul
fstps
dec
xchg
in
cmp
add
hlt
aad
add
or
sub
test
sub
insb
call
mov
loope
mov
movsb
cmpsl
xor
and
add
out
pop
cmp
cmp
filds
inc
jo
and
push
rcrl
lret
icebp
out
inc
loope
xchg
push
add
xchg
ljmp
jp
sbb
mov
mov
call
adc
add
jns
jno
add
inc
testb
fildl
std
pop
pop
dec
add
xchg
cmp
clc
jmp
or
push
push
into
pop
xor
and
lahf
call
rclb
mov
enter
shrl
aam
and
rolb
fiaddl
loop
adc
nop
and
sbb
add
loope
push
int
aam
cld
add
add
rolb
sbb
in
out
mov
xor
aam
loop
insb
xchg
xor
ljmp
xorb
jmp
cli
and
ret
std
xlat
ss
adc
pop
in
sub
shl
mov
add
adc
test
dec
jns
pop
in
cmp
jge
cmpsb
cli
adc
xchg
xor
or
inc
sub
test
push
loope
ret
pop
or
push
mov
mov
cmp
cmp
mov
jl
add
rol
out
mov
je
addps
stos
xchg
cmp
dec
and
jb
add
jge
mov
rcr
inc
adc
mov
lahf
sbb
out
add
fdivp
push
mov
scas
and
orb
dec
push
mov
sahf
push
fimull
test
popa
add
out
push
inc
xchg
and
out
sub
movsb
and
es
jno
push
mov
ret
lahf
and
rorl
add
add
adc
adc
add
sub
inc
push
xor
iret
sarl
pop
dec
push
in
add
cmp
aas
sub
aam
out
adc
and
leave
xchg
nop
mov
sub
ret
sbb
pop
das
add
fwait
aas
les
fs
inc
jecxz
stc
test
sub
mov
xor
mov
sbb
fbld
dec
push
or
rcrb
sbb
test
stc
xchg
add
mov
adc
ret
mov
ljmp
cmp
or
pushf
subb
mov
xor
hlt
or
xor
jns
repz
pusha
decb
inc
xor
xchg
mov
call
rcrb
test
add
inc
repnz
ljmp
dec
movsb
xchg
clc
mov
adc
nop
dec
add
inc
mov
mov
mov
fs
inc
and
imul
or
xor
stos
test
mov
mov
add
add
and
add
jnp
push
pop
mov
ret
mov
cmp
xchg
loopne
mov
aad
mov
cwtl
pushf
bound
es
dec
adc
pop
adc
and
adc
add
mov
sbb
add
or
sub
xrstors
ljmp
sbb
sub
inc
mov
mov
nop
adc
jg
lret
inc
push
xor
repnz
jns
jae
dec
sub
out
adc
mov
bnd
gs
jg
xchg
pop
push
test
add
loopne
ret
jmp
inc
std
and
lahf
das
enter
adc
test
inc
loope
add
pand
sbb
and
nop
fs
sbb
jle
mov
fisttpll
hlt
outsl
mov
mov
loopne
push
push
sub
sbb
mov
cmp
or
sub
xchg
aam
fimull
or
pop
popa
sbbl
ret
adc
cmp
loopne
pop
adc
mov
jg
pop
jle
fidivrl
rorb
fsubrs
add
sub
push
fs
add
sbbb
pop
loope
jl
mov
mov
jns
shlb
rcl
dec
cmp
jmp
inc
ret
mov
out
dec
jl
test
lods
les
add
sub
sub
pop
jo
in
xchg
inc
xor
andb
scas
or
pop
loop
enter
and
add
hlt
xchg
aad
xor
rcrb
cwtl
shl
sub
push
shll
cmpl
sbb
push
mov
or
jo
std
adc
cwtl
adc
pop
push
or
pop
jbe
add
fwait
push
xor
sahf
jno
pop
add
lea
xor
outsl
mov
and
imul
adc
shrl
push
adc
sub
daa
loope
and
and
push
mov
xor
out
int3
subl
popf
loope
pop
add
leave
rcl
das
popa
adc
and
jns
dec
and
clc
icebp
pusha
add
aas
ffreep
mov
or
out
adc
and
inc
xchg
add
es
arpl
xchg
sub
pop
mov
inc
in
add
sbb
ret
sub
xchg
push
push
dec
dec
xchg
fisubrl
add
inc
icebp
pop
push
rcrl
pop
sbb
mov
addl
bound
clc
in
subl
hlt
add
and
jae
add
sub
add
mov
jns
or
or
add
dec
sbb
xchg
mov
cli
add
pop
jbe
jne
fnstsw
add
repz
int3
enter
ret
push
cmp
fadd
aas
jns
jg
add
mov
jo
andl
sbb
mov
inc
movsl
out
fs
pop
xchg
cmp
pop
xor
mov
adc
mov
cmp
mov
or
add
add
loope
movsl
in
add
es
push
mov
dec
and
data16
cmp
and
fsubrs
inc
iret
and
enter
push
xor
in
cmpb
add
jnp
mov
pusha
iret
pop
loope
movsb
mov
aam
lmsw
pop
xchg
cmp
xorl
mov
loop
add
xor
xchg
dec
sub
push
mov
lods
inc
push
dec
jns
add
int3
cwtl
ja
inc
or
outsb
and
and
stos
xchg
pusha
faddl
add
popa
lret
inc
pop
shl
cmp
loopne
mov
pop
scas
les
lcall
pop
or
mov
movsb
clc
insb
addb
push
xchg
xlat
addb
pusha
cli
jmp
push
pop
and
cltd
fs
rclb
mov
cmp
test
push
xor
jbe
rol
lret
add
sub
inc
jg
and
and
add
mov
test
dec
or
xchg
sbb
aaa
or
inc
add
and
add
leave
inc
fdivrs
lret
jns
pop
cli
xor
lahf
mov
loope
inc
mov
xchg
or
add
testl
add
lods
cmc
clc
and
data16
out
scas
enter
push
pop
or
scas
out
sbb
inc
sub
sahf
add
cld
push
fdivr
stos
and
out
push
jb
enter
test
jae
lock
dec
repz
or
jae
mov
and
push
imul
push
push
xchg
fwait
movsb
push
jno
add
push
nop
fcompl
test
mov
xchg
cli
inc
lds
fcompl
jp
pop
mov
add
imul
jb
xchg
je
add
cs
in
xchg
inc
rclb
iret
add
pop
dec
mov
insl
ss
pop
stos
add
pushf
scas
fwait
repnz
add
dec
les
dec
sbb
mov
nop
int3
jecxz
fcompl
jp
js
rorb
add
jae
ja
and
andl
daa
xchg
call
cmpsb
add
popf
mulb
mov
movsb
sahf
cmp
dec
test
sbb
lahf
das
fcoml
clc
nop
faddl
jae
dec
mov
sti
cltd
loope
pop
and
testl
sbb
and
jp
push
mov
dec
mov
aas
scas
cli
and
add
pop
test
psubw
nop
xchg
sahf
loopne
cmp
pop
aaa
jp
add
into
mov
cwtl
mov
hlt
rorb
push
aaa
add
popa
pusha
add
xchg
roll
sub
in
data16
inc
imul
fldl
pop
mov
add
orb
lret
bound
lahf
data16
adc
pop
icebp
fs
or
mov
add
inc
clc
jnp
dec
dec
add
movsb
shll
dec
jmp
jno
inc
mov
or
lahf
addr16
sbb
adc
clc
pop
pop
out
jo
fmulp
mov
jge
mov
hlt
add
lahf
xor
xchg
test
inc
xchg
repz
xchg
dec
and
pop
sbb
fwait
lea
and
inc
adc
fidivl
xchg
inc
dec
stos
jb
pop
loop
hlt
adc
xchg
and
sbb
or
pop
xchg
test
mov
jbe
in
sub
xor
cli
fldl
in
xor
sbb
push
or
in
mov
wbinvd
dec
es
mov
dec
rolb
cld
scas
ret
mov
lahf
andb
dec
cli
jns
and
add
ret
push
mov
cld
popa
cwtl
mov
in
xor
gs
lock
je
jg
add
mov
pop
es
rolb
adc
add
cltd
test
adc
push
pop
mov
xor
scas
pushf
add
cltd
shl
clc
jg
addr16
cmp
fcoms
out
jmp
andb
sti
aam
jbe
mov
sub
aam
inc
inc
or
adc
sub
adc
ds
lods
pushf
mov
sbb
add
mov
mov
fsub
test
ret
test
inc
je
add
pop
orb
in
adcb
sbb
inc
jmp
inc
mov
pop
sbb
test
cmp
decb
adc
jl
je
js
add
add
arpl
add
push
out
hlt
sarb
or
int
mov
int3
add
cmp
xchg
frstor
je
sub
push
out
xchg
rolb
mov
adc
lock
or
rclb
adc
push
movsb
sarb
and
push
adc
push
add
shl
icebp
std
popa
lret
mull
roll
cmpsl
or
sahf
cmpl
xor
stc
xor
pop
iret
xchg
pop
js
jo
shr
incl
lret
mov
sbb
xchg
enter
sbb
and
fcoml
add
sbb
pop
inc
psllq
pop
fadds
outsl
sbb
pop
add
push
das
ficomps
cmp
test
rorl
jecxz
mov
cmp
cmp
dec
lds
inc
add
mov
sub
dec
insb
add
jns
sub
sahf
int3
mov
in
sbb
lcall
insl
xor
inc
hlt
aam
repnz
dec
add
in
aad
rcrb
dec
cmpl
or
sbb
adc
cli
or
xlat
and
mov
cli
test
adc
clc
push
fisttps
mov
cmc
xchg
ffreep
add
adc
aam
push
mov
cli
xor
sub
cmp
and
cmp
andb
ret
in
loopne
cmp
jae
int
and
push
cwtl
aas
push
mov
int3
dec
mulps
cwtl
rorb
push
mov
addl
negl
scas
sahf
inc
jl
inc
sbbb
lock
popa
mov
rolb
inc
loopne
sbb
mov
or
call
xchg
add
dec
cwtl
add
or
mov
add
sub
lret
add
pand
mov
and
mov
xchg
sub
push
mov
lods
fwait
pop
leave
loopne
xorl
adc
mov
xchg
nop
mov
inc
pushf
lahf
xor
or
lock
add
faddl
cltd
and
push
sbb
and
jns
lahf
push
popf
arpl
pop
hlt
add
into
test
movsl
cld
fimull
add
push
adc
enter
dec
push
pusha
pusha
pop
jl
rcrb
sbb
mov
sarl
test
add
insl
je
testl
jae
arpl
mov
jno
fs
pushf
add
in
loop
je
inc
xor
outsl
cmp
out
and
ret
loop
xor
jo
clc
dec
add
cli
pop
fiadds
ss
xchg
inc
imul
out
inc
shl
jp
dec
test
scas
xchg
xor
pop
jne
pop
daa
add
xor
push
pop
xor
scas
aaa
jge
loopne
aas
js
enter
xchg
add
daa
push
ret
and
stos
mov
push
test
hlt
xor
sub
sbb
psubw
or
cs
push
or
out
inc
inc
xor
add
lods
lahf
sbb
idivl
lret
adc
in
sub
adc
ret
lock
and
fmul
std
add
andb
cmp
or
sbb
mov
test
jo
mov
pop
in
mov
push
sub
out
nop
cmp
dec
add
popf
add
and
fildl
and
clc
repnz
and
xchg
lods
pop
add
pop
fs
xor
insb
fsubs
sbb
icebp
and
add
jecxz
sub
rclb
aad
inc
lock
loop
mov
addl
pop
outsb
loop
pop
mov
insb
inc
inc
lds
icebp
imul
jns
inc
xchg
lock
loopne
jae
pop
mov
or
pop
add
cmp
cs
cld
mov
int3
cmp
mov
and
sbb
movsl
or
add
mov
out
add
rolb
or
push
push
adc
bound
ja
sub
xchg
pavgb
mov
sub
mov
xlat
dec
out
and
daa
mov
mov
inc
or
stos
dec
push
mov
shrb
or
repnz
pop
xchg
icebp
pushl
cmp
sbb
pushf
cltd
sbb
sbb
paddd
jo
mull
cld
pop
mov
add
inc
stos
ds
cltd
lea
fbstp
aas
lds
ficompl
dec
mov
and
mov
mov
pop
fisttpl
inc
pop
addr16
cmp
lret
ss
add
inc
mov
inc
mov
sub
lcall
push
jge
inc
call
dec
arpl
loopne
lret
adc
xchg
xorb
dec
fxch
pop
inc
xchg
dec
or
shl
jecxz
rorb
mov
xchg
push
adc
out
xchg
mov
mov
cmp
mov
cmp
cmp
inc
enter
pushw
ret
pop
std
mov
jl
add
add
push
test
gs
inc
jns
sub
mov
ret
push
cli
jne
inc
fwait
or
stc
sub
adc
loopne
xor
inc
lret
dec
loop
lea
push
sub
jb
jns
inc
repnz
and
pusha
cmp
cmpsl
fsubr
call
jecxz
jge
stos
loopne
cmp
dec
mov
stos
lods
fs
andnps
mov
sub
add
inc
lea
pop
roll
xor
push
dec
shlb
push
repnz
sub
lret
movsb
icebp
push
mov
leave
ret
xor
lahf
pop
dec
shlb
nop
addr16
jmp
mov
bound
fcomps
xchg
add
aad
insl
push
inc
jp
test
push
mov
stos
inc
inc
and
lock
mov
icebp
add
jne
pop
es
sub
mov
push
insl
xchg
js
add
cmpsl
fidivl
bound
fcompl
rorl
test
in
add
fiadds
mov
cmp
pop
fldl
js
inc
pop
pop
xlat
mov
inc
mov
mov
loope
call
xor
push
mov
or
sub
and
mov
mov
and
inc
sub
insb
inc
fstl
adc
dec
push
lods
enter
push
add
push
cltd
insb
sbb
mov
mov
je
sub
and
fsubs
push
adc
mov
ret
inc
shl
out
mov
push
push
inc
movsb
jne
dec
or
cmc
and
testb
cmpsb
enter
dec
dec
jmp
add
adc
loopne
dec
inc
inc
adc
pushf
or
rcr
push
aam
xor
leave
sbb
lret
mulb
aad
jp
or
call
xchg
add
daa
mov
add
int
addr16
repnz
das
cwtl
nop
sub
repz
sbb
mov
adc
and
shll
adc
stc
jl
push
jmp
mov
filds
mov
incb
add
adc
add
cwtl
les
rclb
add
pusha
out
sbb
icebp
add
dec
lds
xor
notl
int
sbb
mov
pop
xor
sub
je
inc
enter
sqrtps
aad
adc
and
lock
ss
mov
mov
movlps
repz
and
pusha
add
xor
add
jp
das
adc
lock
orl
sub
add
or
or
pop
clc
addr16
inc
dec
int3
sub
insb
addl
jmp
sahf
mov
xchg
push
fadd
push
leave
jae
or
adc
dec
add
add
outsl
inc
and
out
xorb
pop
adc
sbbb
jbe
popl
sbb
adcb
pop
ljmp
enter
lods
aas
mov
mov
add
ficompl
cmpl
ss
cmpsl
xor
jg
sub
imul
rcrb
fcomip
es
pushf
mov
inc
jnp
loopne
mov
cld
push
enter
mov
push
movsb
pop
test
loop
sub
out
adc
jae
outsb
pop
fldl
adc
jg
pop
jp
cltd
mov
cs
mov
mov
popf
cmp
sub
add
out
out
mov
mov
push
dec
and
dec
push
push
xchg
dec
add
imul
pop
push
adc
jno
xor
dec
sbb
cli
rolb
insb
push
push
sub
xchg
inc
popf
push
xchg
jbe
add
sbb
hlt
push
loopne
add
xor
inc
lods
push
mov
jnp
pop
stc
xchg
mov
mov
push
icebp
add
clc
xchg
test
or
xor
adc
mov
push
sub
lret
shrl
add
or
sbb
sub
lcall
xchg
mov
popl
imul
mov
stos
dec
daa
sub
inc
nop
rcrb
jmp
fnstsw
add
mov
sahf
test
pushw
mov
adc
orl
mov
mov
add
mov
push
adc
sbb
jle
cmp
cmc
sbb
pop
lcall
sbbl
add
mov
add
in
inc
repnz
xor
out
pushf
mov
js
mov
enter
add
push
add
iret
sahf
pop
cmpsb
xor
add
xchg
mov
ja
insl
aam
cmp
imul
cwtl
aas
aaa
xchg
cwtl
sbb
stos
ljmp
cltd
or
push
lea
cwtl
sbb
or
pop
mov
xchg
jo
cmpb
pop
mov
pop
in
dec
test
jecxz
or
cmp
pop
ljmp
push
sbb
cltd
or
bound
cmp
add
das
loope
add
ds
cmc
jp
enter
cs
add
xor
loop
mov
lret
lods
mov
xchg
add
clc
fimull
pop
push
cmpsb
testb
and
loopne
cli
jns
adcb
sub
add
je
aas
add
outsl
push
hlt
ret
mov
dec
sbb
es
test
jg
roll
hlt
loope
out
out
xchg
xchg
xor
mov
repz
lahf
out
push
or
test
add
pusha
mov
mov
enter
bound
jmp
test
pusha
add
jbe
jle
bound
repnz
mov
xor
inc
mov
movsb
add
arpl
fsts
dec
nop
inc
addr16
jae
fdiv
stos
add
sub
inc
xor
rcr
xchg
enter
mov
ljmp
js
add
mov
clc
addr16
xchg
cmpb
loop
shrb
jl
in
idivb
inc
aam
pop
inc
sbb
int3
lock
cmpsl
add
fwait
mov
mov
subl
sbb
inc
cwtl
stos
imul
inc
andl
lahf
subl
xor
push
mov
ds
insl
add
xchg
sbb
out
in
je
flds
inc
mov
in
mov
fcoms
in
popl
adc
and
in
pop
push
mov
cmpsb
mov
gs
outsb
loop
mov
inc
push
sub
mov
mov
xor
mov
xor
sbb
enter
aaa
shll
mov
xorl
push
lret
enter
adc
test
xchg
aad
rolb
sbb
rol
in
and
inc
je
jecxz
sub
aas
movb
scas
mul
je
adc
push
push
jge
pop
and
lcall
aas
leave
adc
pop
cltd
call
bnd
and
inc
mov
cwtl
mov
dec
enter
sahf
ds
cmp
lock
movsb
lods
mov
jo
lods
or
stos
roll
mov
es
shll
push
test
pop
inc
loope
in
inc
insb
jo
repz
pop
inc
inc
lahf
and
cmp
add
cwtl
xchg
sbb
or
pop
enter
scas
add
bound
pushf
cmp
cmpsl
packuswb
sub
addb
lahf
or
out
repz
lods
out
leave
movsb
pusha
inc
cmc
pop
fmull
adc
fs
jo
out
add
fidivrs
je
xchg
pop
addb
cmpsl
hlt
fisttpll
pusha
repz
rorl
add
sub
xchg
mov
pop
inc
lods
in
add
lfs
xlat
nop
cmp
aam
fidivl
add
icebp
mov
push
adc
inc
jno
aam
adc
or
pushf
ret
mov
xchg
mov
xchg
mov
lcall
lret
mov
orl
leave
and
xlat
add
neg
jmp
adc
fmull
mov
adc
xchg
data16
movsb
push
in
rorb
stos
add
cwtl
in
hlt
inc
cli
daa
scas
push
adc
jecxz
mov
stos
pop
jb
or
pop
add
nop
cwtl
dec
scas
aas
inc
push
jmp
call
lods
inc
cmp
lea
loopne
mov
inc
adc
dec
aas
add
mov
adc
and
test
dec
sub
pushl
lods
inc
fisubs
ret
adc
xor
add
xchg
mov
add
jb
add
lds
cmp
jae
test
sub
cmp
dec
push
add
out
ljmp
mov
jns
jne
stos
js
sti
add
xchg
add
pusha
adc
ror
jae
aad
sub
mov
in
rolb
cmc
xlat
pusha
jg
dec
scas
cmp
loopne
enter
xor
mov
jmp
ljmp
sub
or
int3
xor
and
inc
sub
movsb
clc
cmp
push
and
testb
enter
add
pop
mov
arpl
jns
int3
add
jbe
ret
push
addr16
add
nop
dec
xor
and
sbb
inc
shll
mov
insb
je
jg
sub
lock
add
dec
jae
js
add
frstor
cmpsb
sti
cli
lret
xor
cmp
sbb
add
mov
jl
insb
jnp
add
imul
pop
dec
cmp
mov
add
stc
add
or
push
fistpll
lock
add
out
adc
xchg
inc
jbe
rorb
pop
push
add
loop
ret
stc
mov
movsb
rolb
inc
inc
mov
mov
sbb
cmp
test
mov
xor
mov
jae
add
movsb
sub
data16
adc
pop
pop
loopne
mov
jmp
sub
fidivrl
xlat
push
sub
popf
mov
sbb
sbb
imul
dec
ret
pusha
loope
inc
into
lods
roll
or
shlb
sahf
cltd
dec
mov
adc
imul
inc
push
repz
shrb
popf
jbe
add
xor
scas
adc
insb
add
pushf
pop
sub
jmp
rclb
dec
add
rcrb
test
je
adc
sahf
or
or
roll
mov
mov
insb
sbb
movsb
jp
or
cmp
sti
ret
push
ljmp
js
push
or
add
mov
outsb
inc
fwait
adc
jnp
push
pusha
pusha
je
movsb
lods
pop
push
loope
lock
sub
repz
jns
xchg
mov
mov
inc
cmp
dec
cmp
add
dec
ja
sub
dec
add
and
iret
aad
mov
fidivs
add
jmp
cld
jae
in
test
les
sarb
sub
pop
jg
scas
add
xchg
movsl
lret
pop
inc
jmp
das
push
jge
add
jge
xor
and
fdivs
mulb
inc
add
fldl
cli
add
inc
inc
in
ja
aas
sub
sti
jp
add
xor
cli
lret
lock
es
cmpsb
mov
pop
add
xchg
nop
std
shrl
adcb
jnp
push
sar
sbbl
dec
push
adc
and
mov
jne
orb
es
pop
sbb
lret
cld
inc
out
push
mov
jns
jmp
sbb
orl
push
pop
sbb
repz
call
scas
roll
xor
pop
cwtl
cmpsb
out
fs
cwtl
mov
mov
call
insl
and
xchg
add
fwait
add
filds
sbb
or
mov
stos
testl
push
in
pop
xor
sbb
arpl
sti
cmp
jle
rcrb
cld
int
push
xchg
sbb
adc
inc
les
xor
pop
mov
add
mov
cltd
add
add
jns
push
scas
movsb
mov
sbb
sub
adc
and
and
notb
addl
push
movsb
jnp
addb
cli
and
cs
cmpsb
cmp
sar
and
or
inc
xor
xor
stos
push
lods
and
outsb
or
hlt
jb
xor
or
cmp
fstl
or
xor
xor
xchg
cmc
pop
add
movsl
pop
bound
push
das
add
call
mov
xor
inc
add
sbb
rol
test
scas
xorl
lcall
pusha
and
push
fisubl
jg
push
cld
test
pusha
jns
push
push
pop
or
nop
inc
mov
mov
pop
andb
shl
jmp
leave
push
sub
testl
mov
push
and
rclb
pop
cld
fidivrs
stos
adc
adc
test
push
shll
push
adc
data16
mov
flds
pop
shlb
and
fnstenv
push
sahf
mov
shlb
add
cmp
push
push
fiadds
or
mov
cmp
and
std
mov
mov
push
push
dec
and
inc
sbb
test
ret
cli
inc
add
mov
pop
push
fldenv
jp
xor
xchg
mov
dec
add
gs
ja
data16
add
cld
enter
into
sub
shlb
or
xor
mov
mov
outsb
lock
cmp
mov
sar
iret
ja
rorb
nop
add
cld
pushl
sub
jns
add
mov
push
xor
mov
test
and
jo
add
push
mov
sub
in
fs
test
pop
mov
sbbl
and
stos
pop
and
cmpb
add
sti
xchg
add
jg
sub
push
fwait
movb
lahf
mov
jae
es
std
push
adc
mov
subb
mov
mov
adc
rorb
jbe
fwait
loopne
cmp
adc
pop
dec
pusha
lods
or
jl
add
xchg
xor
adcl
pop
ret
lea
and
addr16
mov
orl
orb
mov
mov
jp
leave
inc
pop
aad
push
inc
mov
cld
xor
test
testb
or
std
out
pop
sti
dec
fildl
test
add
adc
xchg
mov
jo
loope,pt
and
dec
aaa
call
pop
test
arpl
test
jae
xchg
dec
lea
cltd
loop
mov
popf
test
mov
add
ja
pop
call
pusha
mov
pop
adc
inc
mov
pop
pop
stos
push
inc
cmp
cld
lods
sbb
push
nop
xchg
jo
add
loope
mov
mov
inc
jae
test
adc
or
pop
xor
add
sbb
and
hlt
push
mov
movsl
push
and
dec
imulb
add
lahf
cli
mov
push
xchg
les
push
or
rolb
xor
pop
cmpl
pushf
pop
mov
jno
sub
sbb
sub
lods
lret
mov
scas
mov
xchg
sbb
aad
adc
add
push
sbb
add
xchg
testb
mov
xchg
push
add
and
loopne
cld
jg
das
clc
jmp
cltd
fidivl
in
add
mov
mov
sbbl
les
subb
in
bound
sbb
inc
jl
movsb
les
nop
mov
push
out
push
xor
sub
push
jge
and
repz
rol
inc
nop
mov
std
test
in
pusha
sti
cmp
lds
or
scas
pop
sub
subb
add
or
in
add
or
mov
cltd
adc
iret
cmp
add
into
mov
adc
inc
mov
mov
movsb
cltd
xor
in
test
jmp
adc
push
add
mov
pop
test
mov
ljmp
push
sbb
cld
mov
subb
add
xchg
or
push
xor
xchg
adc
cmpsb
fwait
and
scas
mov
inc
or
sbb
add
jns
jg
cltd
ror
push
push
inc
jb
jl
scas
or
cs
or
sub
sub
cwtl
pop
push
pop
sarb
and
notb
test
lea
lret
and
jb
stos
xchg
ret
cmp
addb
sub
jp
mov
add
lret
cmpsb
mov
push
nop
iret
push
ret
std
jp
mov
hlt
pop
jle
cmc
add
sbb
or
dec
xor
std
sbb
insb
or
test
in
out
pushf
shlb
add
xchg
adc
add
arpl
pop
andl
and
enter
inc
xchg
mov
lahf
sbb
cld
pusha
jns
adc
xor
add
sbb
repnz
xchg
cmp
scas
add
aam
test
pushf
or
lahf
push
add
jo
add
imul
loop
clc
mov
add
sti
test
pusha
inc
jo
pusha
add
in
test
into
sbb
sbb
dec
add
out
inc
pop
mov
inc
add
in
and
les
addb
push
push
xor
add
stos
xchg
and
xor
cld
bound
ret
adc
aam
mov
leave
add
in
ja
jmp
cli
inc
orb
adc
scas
lods
arpl
add
mov
cli
cld
pop
push
orb
or
and
divl
pop
adc
mov
dec
movsb
or
push
dec
mov
or
add
movsb
lahf
sub
outsb
mov
pusha
cmpsb
xor
cmp
in
ds
std
pusha
addr16
js
mov
add
cmp
xor
rol
cltd
add
int
fwait
xchg
or
mov
sub
cmp
cmovb
aas
fstpt
cmpl
ja
or
add
ljmp
loope
out
aaa
and
adc
jl
dec
cmc
cld
dec
push
popa
enter
test
jp
sbb
scas
pusha
sbb
and
or
add
jne
in
xchg
jnp,pt
sub
idivl
push
mov
jae
mov
sub
js
add
sub
fisttpl
fcmove
out
into
in
add
pop
sbb
cli
jecxz
add
sub
sub
xor
adc
jmp
es
or
lret
cmp
ds
lahf
mov
mov
xchg
sub
xchg
mov
adc
mov
movsb
out
sub
clc
push
add
cld
enter
xor
pop
dec
sbb
int3
or
push
cmp
in
cmp
std
pop
sbb
add
pop
call
popf
popf
mov
aam
jno
fwait
sbb
xchg
jns
je
xor
hlt
add
clc
clc
shrb
test
insl
or
xchg
lret
adcb
sub
fcmovnbe
andb
arpl
push
scas
sbb
or
and
or
cmpl
fbld
add
fdivrl
rcrb
jne
cmovbe
xchg
xchg
add
xor
add
pushf
add
pop
in
loop
sbbb
std
mov
fs
add
insl
inc
push
pop
js
adc
adc
aam
jno
push
pop
or
or
ja
xchg
bswap
cmp
pop
clc
push
decl
out
sub
sbb
jno
hlt
and
adc
mov
inc
jo
add
sub
xor
bound
push
push
inc
add
and
jmp
in
popl
lahf
insl
jle
or
add
inc
and
pushf
adc
mov
and
loope
sbb
lods
jl
adc
mov
stos
pop
push
arpl
std
int
or
jnp
into
mov
lret
lods
aaa
xchg
inc
jmp
push
dec
or
je
pop
andb
dec
outsb
pop
xor
add
xorb
in
pop
test
xor
or
push
addr16
pop
sbb
popf
call
cmc
je
cltd
xor
add
push
mov
add
fsubrl
push
mov
adc
xor
push
mov
add
sahf
fs
daa
sbb
add
ljmp
add
aaa
pushf
es
scas
add
xchg
adc
aam
loop
mov
subb
sub
ljmp
clc
sbb
or
call
add
lods
cmp
push
jmp
shlb
sbb
add
adc
jmp
mov
js
popf
or
test
push
xor
xchg
out
add
addr16
and
jo
cmpsb
add
inc
cltd
lea
xchg
rolb
add
hlt
popl
dec
jo
mov
fwait
mov
shrd
sbb
pop
into
lock
shlb
jno
leave
mov
unpcklps
add
inc
xchg
aaa
lock
adc
aas
dec
aas
mov
rorb
mov
test
pop
pop
xor
sub
jg
pop
or
add
aad
pushf
add
add
or
sbb
std
inc
shlb
pop
pop
jns
dec
inc
adc
mov
les
pop
or
in
arpl
mov
sub
adc
xchg
loopne
pop
xchg
jb
xor
inc
push
pop
sub
add
add
pop
jae
inc
iret
shll
sub
lahf
xor
xchg
loope
adc
call
sbb
xchg
or
pop
and
add
cmpsl
std
sbbb
nop
xchg
adc
inc
in
pop
mov
xor
jecxz
and
cli
leave
dec
daa
inc
and
add
inc
notl
insl
sarb
sub
inc
sub
sub
loope
push
push
add
data16
dec
std
movb
push
in
popl
mov
jle
lods
pcmpeqd
leave
movsb
add
add
cmpsl
xchg
outsb
cmp
or
popa
inc
cmp
xchg
mov
adc
or
lahf
and
fcoml
add
leave
lret
test
xor
stos
repz
xchg
js
nop
sub
fcompl
loopne
lds
int3
stos
lcall
cwtl
addr16
insl
add
lds
movsb
ret
mov
dec
jg
cmc
add
sar
bound
rclb
lods
inc
sbb
mov
jno
cmc
cltd
iret
movsl
mov
movswl
mov
test
inc
mov
into
rolb
mov
adc
addl
add
dec
or
js
dec
lock
mov
in
push
push
clc
add
adc
pop
and
outsb
add
dec
stos
rclb
imul
fidivrl
and
add
test
cmpsl
pop
pop
fistl
cmpb
stos
cmp
and
pop
and
inc
xchg
in
xchg
ss
inc
mov
aad
and
cltd
inc
ret
and
pop
lods
dec
and
out
cmp
mov
push
add
pusha
leave
in
adc
lret
add
std
jecxz
push
jnp
dec
or
leave
or
adc
add
mov
add
iret
or
inc
and
int3
xchg
orl
mov
add
lock
add
mov
pop
and
arpl
or
subb
push
cmp
or
mov
mov
jnp
or
popl
jae
cmp
xchg
mov
inc
xor
push
std
into
ja
pop
repz
lds
and
jnp
lock
std
nop
enter
add
jns
mov
sbb
rcrb
loope
adc
mov
inc
cld
add
add
mov
pop
mov
xchg
pop
mov
mov
lds
adc
in
test
in
movntq
sbb
push
and
push
cmc
mov
pop
jg
add
jnp
jp
add
xor
push
loopne
popa
cmp
subb
xor
rcl
add
lcall
pop
stc
dec
lods
or
test
inc
jecxz
aam
cmp
add
ja
sub
or
iret
mov
jl
push
fcoms
xchg
or
or
push
pusha
pusha
lahf
add
fucomip
push
add
sub
adc
push
daa
dec
mov
add
pushf
sbb
fisubrs
faddl
das
adc
mov
xchg
dec
insb
or
bound
shl
stos
dec
adc
sub
std
inc
add
or
daa
cmp
je
pop
add
cmp
jno
lock
or
pop
xor
sub
mov
icebp
pop
mov
xor
add
nop
push
adc
sarb
outsl
sbb
xchg
dec
lods
mov
push
inc
or
pusha
push
arpl
cmp
xchg
mov
add
cmpsb
dec
test
add
movsb
test
ret
push
sub
in
jl
add
repz
in
sti
and
stos
mov
pop
mov
cmp
xor
jno
movsb
mov
mov
int
sbbb
pop
test
add
les
xor
pop
push
push
add
cmp
inc
sub
mov
fadd
mov
dec
lds
sub
push
fldt
cmp
jb
pop
add
pop
push
adc
js
add
pop
into
sub
jbe
test
mov
push
cmp
lret
xor
orb
push
pop
mov
lods
push
aam
pop
test
inc
rolb
inc
push
pop
add
std
leave
enter
add
fimuls
mov
test
add
jbe
xchg
dec
scas
or
arpl
or
stos
daa
add
movsb
cmpsl
les
or
and
adc
cwtl
in
imul
fisttpl
je
sahf
xor
fistps
cmpsb
jnp
sub
mov
and
or
add
lock
das
inc
push
pop
add
stc
mov
and
andl
out
fmul
xor
stc
adc
xchg
call
inc
fwait
mov
lret
testl
or
test
jle
dec
cld
dec
adc
add
cmp
pop
and
xchg
sub
adc
arpl
mov
cld
scas
jp
add
dec
std
add
pop
js
mov
xor
xor
push
cmpsl
jo
les
sbb
xchg
push
orb
mov
out
stos
cmp
jo
inc
jns
add
and
bound
cmpl
cld
rol
in
clc
lds
in
popl
outsb
fcmove
lods
inc
and
add
loop
addr16
xor
add
dec
pop
test
xchg
xorl
xchg
cli
popf
mov
lods
lret
mov
push
test
add
sbb
movsb
daa
push
insb
mov
and
sub
addl
jae
jo
sub
leave
icebp
add
loopne
in
nop
mov
insb
ficoml
add
sbb
jge
stc
xor
jmp
cmp
fidivrs
xor
imul
ss
inc
mov
xor
inc
loopne
lahf
cld
xor
icebp
pop
std
imul
ds
cmp
jmp
adc
enter
add
es
ficomps
xor
dec
sbbb
xchg
push
pusha
push
mov
je
add
lret
adc
or
or
sbb
inc
jns
push
or
push
mov
adc
enter
loopne
rcrb
sub
jnp
fisttpll
jle
push
fiaddl
adcb
push
ds
or
sbb
push
add
ja
push
sbb
stos
mov
sub
push
sahf
lret
mov
pop
mov
pop
imul
add
sub
adc
incb
adc
outsb
pushf
mov
or
mov
jle
popf
xor
mov
ret
add
pop
mov
into
sbb
loop
add
and
pushf
mov
push
jg
out
add
fadds
popf
dec
clc
test
inc
adc
and
fcmovnu
pop
mov
jns
jle
jb
data16
push
cld
sub
push
fs
push
rcll
push
xor
add
push
adc
test
and
or
jmp
dec
js
aam
mov
clc
add
iret
mov
xor
add
clc
adc
adc
stos
stc
in
je
enter
les
in
clc
fiaddl
scas
mov
pop
lock
mov
ud1
loopne
idivl
sub
test
cmpsb
cwtl
cld
sahf
js
and
cmp
pusha
adc
pop
push
je
andl
cmp
test
int
add
or
movsb
sbb
push
cmp
mov
xorb
ljmp
cmpb
pop
add
sbb
scas
fwait
cli
fneni(8087
mov
jbe
xadd
add
hlt
xor
mov
into
aam
sub
mov
test
mov
in
sbb
sahf
add
bound
lret
and
test
cmp
lock
dec
fsubl
jo
adc
ja
cli
movsb
or
adc
push
or
inc
add
sub
or
dec
mov
and
out
add
in
test
lods
sub
push
sbb
xor
stc
add
xchg
push
pushf
scas
adc
add
sbb
or
and
out
dec
cmpsl
cs
outsl
mov
stos
loop
push
inc
or
test
push
pop
add
icebp
push
cld
add
add
sub
sbb
fdivrs
hlt
mov
mov
dec
rolb
xlat
mov
mov
mov
xchg
mov
outsl
lock
xor
dec
ljmp
clc
jg
sub
mov
rcrb
jle
pop
pop
add
out
cmp
cmpb
xrelease
lea
cli
fidivl
std
rolb
lcall
mov
jg
add
sub
push
mov
xchg
fisttpl
sbbb
pop
iret
mov
arpl
pop
pop
lea
mov
and
repnz
inc
subl
test
lods
js
push
inc
push
fists
add
mov
sbb
jecxz
enter
pop
es
gs
mov
cltd
xchg
test
xor
enter
pop
add
sbb
loopne
mov
daa
decb
add
lds
movsl
and
cli
insb
add
add
push
cld
movb
sbb
test
loop
shlb
add
jecxz
test
rcrb
aam
pop
push
mov
rol
in
inc
adc
es
push
pop
adc
adc
mov
aas
arpl
js
push
and
add
test
sti
xor
fs
xor
xor
mov
popf
adc
inc
push
mov
in
lods
add
push
adc
lock
sbb
sub
popf
and
mov
xchg
sbb
jae
imul
push
add
test
dec
sub
pop
pushf
pop
inc
xor
sahf
push
adc
imul
sbb
adcb
insb
push
enter
xor
aam
xor
cwtl
push
add
jmp
movsb
bnd
mov
or
pop
or
mov
clc
adc
push
es
movsl
or
pop
mov
insl
stc
scas
testl
fs
inc
jo
mov
pop
popf
lret
jmp
sbb
inc
loopne
lock
cmc
cld
pop
popl
loopne
int
daa
out
cmp
out
cmpb
and
adc
adc
xor
stc
xchg
add
test
push
repz
test
push
ret
leave
mov
pop
inc
mov
jnp
add
cmpsb
ja
dec
add
imul
hlt
repnz
hlt
sub
fsubl
xor
loopne
mov
lcall
push
push
pop
test
sbb
sub
add
fucomp
add
mov
orb
cltd
imul
movsb
or
adc
mov
push
test
dec
cmpsb
popf
movsb
loopne
mov
jne
push
add
js
jns
cmp
test
leave
xor
add
mov
enter
fs
mov
add
pop
or
sub
jecxz
mov
lret
hlt
aam
in
movsb
les
mov
into
adc
sbb
jne
adc
add
shrl
insb
cmp
jo
push
adc
add
push
jl
fs
jae
sahf
mov
int
test
adc
mov
push
or
or
in
mov
pusha
inc
test
clc
and
mov
xchg
and
add
pop
movsl
mov
mov
adc
and
out
cld
adc
push
lock
jge
push
add
leave
out
mov
push
cld
mov
or
inc
or
ja
adc
mov
push
add
mov
mov
jle
pop
xchg
and
add
test
inc
out
mov
sub
adc
add
out
pop
inc
mov
mov
sbb
inc
dec
sub
cld
push
add
cmpsb
mov
ror
xchg
lea
dec
pop
pop
daa
orb
movsb
into
xor
fistl
adc
mov
mov
sarb
add
cli
adc
std
mov
cmpsb
cltd
and
add
push
dec
mov
fcomps
dec
ja
pushf
inc
imul
xchg
cld
xorb
push
xchg
cwtl
add
nop
mov
std
clc
jp
test
dec
and
mov
in
outsb
inc
mov
add
jae
mov
jecxz
adc
pop
pusha
movsb
sti
cmpsb
or
xchg
adc
add
incl
add
inc
es
or
cmp
and
add
iret
pop
test
insb
add
jno
xor
addr16
xchg
dec
lds
or
jns
mov
dec
xor
loopne
or
jp
je
mov
jbe
ret
enter
mov
adc
xchg
in
push
mov
test
arpl
jno
add
push
into
or
or
and
sbb
push
inc
xchg
inc
jmp
sub
je
nop
in
xchg
rclb
lea
lds
test
in
aas
and
push
xor
insl
mov
mov
xchg
cli
lea
fcompl
xchg
xchg
pushw
pop
pop
sti
addr16
inc
sarb
loop
add
xchg
stos
pop
in
std
inc
push
pop
cs
lcall
out
and
and
mov
or
in
inc
xchg
into
subl
loopne
and
data16
aam
adcb
int
mov
movl
cmpsl
mov
lret
aas
outsl
pop
xchg
leave
push
cld
dec
enter
pop
out
cmp
popa
mov
jge
adc
push
loopne
dec
push
adc
daa
push
lods
inc
fsubrl
sbb
or
mov
scas
cltd
adc
rolb
out
int3
cmp
jle
adc
cwtl
shll
fisubs
add
popa
fdivl
xor
test
and
push
out
repz
movsl
or
aaa
add
in
sbb
movsb
add
and
in
sub
add
mov
mov
xor
mov
xchg
ja
clc
and
clc
dec
cld
add
call
inc
jle
nop
adcl
add
lret
and
add
lods
xchg
in
cmp
inc
sbb
add
xchg
add
pop
lock
nop
push
push
xchg
dec
adc
sub
or
push
xor
push
shl
pop
stc
xchg
bound
or
int3
or
add
in
or
mov
or
arpl
shll
jg
das
xor
cwtl
lock
jge
add
mov
or
add
cltd
into
shr
bound
dec
or
dec
int
add
mulb
outsl
add
dec
push
test
mov
gs
xor
popl
int
add
shr
jb
scas
mov
jecxz
test
lea
clc
fmull
mov
ja
xchg
add
jns
cmp
sub
and
jl
add
fdivp
out
mov
xor
js
or
fcom
test
add
repz
inc
push
add
dec
test
test
mov
ror
stos
fstpl
je
sbb
in
ss
sub
add
mov
or
mov
scas
test
std
dec
ljmp
das
sahf
insl
les
xor
loopne
outsl
rclb
lret
cltd
add
pusha
xchg
fcmovb
out
mov
fs
pop
sti
mov
cmp
dec
sub
inc
arpl
add
pop
ret
sub
shr
and
push
pushf
sbb
test
cmpsb
xchg
loopne
andl
loope
pop
sub
in
push
jo
cmp
aaa
out
inc
ds
dec
mov
mov
in
into
rorb
mov
testl
inc
add
add
and
jae
add
cli
mov
jecxz
add
jbe
add
add
psrlq
jb
nop
adc
push
push
dec
pop
xchg
iret
push
jle
dec
add
shll
jbe
cmp
test
adc
sbb
push
ret
mov
cmp
jle
or
lock
pop
sbb
cmpsb
pop
inc
popa
int3
ja
xor
movsl
adc
std
mov
sahf
add
lock
xor
cmp
fldt
xchg
adc
stc
mov
subb
pop
dec
repz
arpl
movsb
imul
arpl
mov
dec
dec
jnp
add
js
jle
aaa
cmc
andb
mov
dec
pop
jb
xor
nop
icebp
rcll
mov
fcomps
pop
scas
movsl
enter
and
mov
inc
push
shrl
loopne
mov
add
cmp
adc
push
stos
mov
nop
pop
inc
cli
addl
xor
mov
test
xor
push
loopne
add
jbe
hlt
add
cld
push
sbb
mov
pop
ficoms
cwtl
push
and
and
loop
dec
mov
in
adc
xchg
test
pop
sbb
xchg
sti
jo
in
xor
cltd
pop
imul
jecxz
lock
scas
mov
mov
into
enter
add
hlt
cmp
jno
lea
jbe
or
add
push
icebp
fisubrs
push
es
fsts
les
in
cmpsl
xor
add
fsubrs
stos
jno
filds
pop
xchg
xlat
cmp
xchg
inc
test
sub
mov
call
mov
jo
stos
clc
fs
push
rcr
popa
push
aaa
addb
push
insl
inc
mov
sub
mov
or
mov
cmpsb
and
sbb
adc
pop
dec
mov
loopne
aas
pop
int3
lods
int
push
into
and
leave
pop
mov
add
or
out
mov
jl
popf
movsl
jo
or
adc
pushf
mov
push
xchg
add
and
inc
outsb
jnp
dec
mov
and
sub
inc
xchg
dec
std
enter
push
lret
mov
nop
sbb
and
inc
mov
mov
or
mov
lods
jmp
std
popl
int3
cld
scas
adc
or
bound
aam
jl
xlat
add
je
cmc
nop
clc
and
insb
call
inc
les
adc
and
jne
dec
pop
pusha
clc
xchg
jl
pop
sbb
lods
movsb
push
lock
and
add
sbb
push
les
mov
pop
aas
mov
pop
daa
and
mov
dec
pop
push
dec
or
or
push
andl
stos
arpl
into
or
inc
push
test
loope
cld
inc
movsb
push
fdivrl
mov
push
xchg
daa
dec
or
repnz
cmpl
adc
inc
ljmp
pop
push
pop
lods
and
sbb
xor
aaa
and
lods
jl
mov
add
pusha
lret
shr
dec
add
jmp
outsl
nop
add
pop
frstor
and
dec
insb
add
fidivrl
dec
in
mov
dec
pusha
or
add
add
idiv
mov
rclb
mov
sarl
jmp
in
pop
daa
sbb
cmpsl
lods
aad
iret
dec
mov
mov
nop
jno
or
sub
inc
or
add
out
dec
pop
fmull
call
sbb
insl
pop
sub
rorb
sub
in
test
add
ss
seta
mov
and
cli
insl
lret
cmpsb
rolb
sarb
lock
add
insl
filds
fwait
jne
mov
in
xor
inc
dec
pop
icebp
clc
push
aam
sbb
push
cwtl
inc
or
cmc
xchg
cmp
pop
cmp
ss
add
sbb
rolb
lods
test
in
mov
add
mov
sbb
cli
mov
cmc
leave
gs
orb
pop
and
test
sbb
daa
pop
loope
xor
jnp
inc
das
stos
faddl
arpl
or
mov
imul
dec
std
test
arpl
pop
in
jl
pop
lods
scas
popf
push
jge
and
cli
xchg
mov
mov
mov
dec
sbb
test
js
out
dec
scas
inc
cmp
iret
shlb
je
and
xchg
test
mov
orb
and
cld
int
sub
push
sub
je
mov
xchg
inc
push
inc
daa
adc
inc
fdivrs
ficoml
psrlq
call
add
loop
lcall
pop
cmp
sub
push
xlat
mov
mov
stos
add
inc
inc
and
jl
inc
gs
xor
sub
jae
inc
mov
inc
mov
rcrb
sbb
test
into
add
or
stos
leave
adc
adc
inc
ljmp
fmull
xchg
icebp
mov
sahf
popf
add
shl
jg
lahf
xor
dec
fsubl
push
mov
cmpsl
sbb
or
fdivl
adc
push
andb
mov
insb
add
sbb
adc
mov
xchg
xor
shlb
inc
mov
pusha
add
mov
sbb
push
gs
or
mov
and
adc
lods
add
ja
insl
mov
enter
mov
test
inc
sub
inc
fsubrs
or
pop
jp
loopne
mov
shl
std
ret
test
stos
rorb
cs
push
xor
add
ljmp
jp
mov
inc
add
cli
or
rolb
pop
out
pop
gs
sbb
data16
mov
rorb
call
xchg
dec
mov
das
add
popf
inc
mov
adc
mov
xor
adc
sub
lods
or
push
mov
mov
push
xchg
mov
mov
add
mov
add
push
out
add
jg
dec
in
add
sbb
xchg
xchg
pop
icebp
adc
sbb
je
xchg
cmp
and
shr
add
cmp
lods
xchg
adc
add
adc
inc
out
sbb
sbb
and
inc
daa
push
mov
std
faddl
aaa
lods
jb
xchg
sub
push
jecxz
cmc
mov
inc
pop
js
xor
mov
inc
jnp
xor
into
cmpsb
jg
imul
cmpsl
pushf
cmp
scas
sbb
sub
lea
inc
jecxz
push
and
sbb
fs
sbbb
jl
sbb
int
inc
xor
sub
lods
scas
add
lcall
les
jo
adc
scas
mov
cmp
in
xchg
inc
push
adc
into
mov
add
stc
dec
and
mov
fstps
test
cmpsl
xchg
add
pop
xchg
mov
lahf
pop
outsb
mov
push
or
add
inc
inc
jl
sbb
add
in
sub
int3
jmp
xchg
insb
add
hlt
or
nop
add
test
add
mov
scas
and
adc
and
test
xchg
jl
or
ljmp
jge
push
push
jb
jno
and
xor
cmpsl
mov
cltd
cmc
add
icebp
and
lret
jl
add
sbb
pop
clc
and
pusha
mov
jae
sbb
clc
lock
daa
push
in
mov
cld
and
std
add
shrb
xchg
add
mov
arpl
icebp
cs
xchg
nop
aam
push
add
sbb
in
movsb
addb
das
out
cmp
or
les
add
inc
xor
orb
bnd
add
frstor
loope
das
mov
andb
ret
inc
pop
mov
and
xchg
cwtl
add
movsl
mov
hlt
xor
xchg
mov
mov
ror
stos
jbe
add
push
cld
pusha
and
mov
sbb
adc
pop
mov
and
or
scas
add
jmp
leave
inc
push
rolb
mov
cmp
xchg
outsb
in
mov
or
into
in
pop
xorl
test
push
fs
sbb
inc
dec
lret
rorb
lret
cli
sar
add
and
call
sub
jno
xchg
std
cmc
addl
add
dec
loopne
ljmp
cs
push
xor
int
loope
dec
mov
mov
add
sarl
call
fiadds
test
xor
add
mov
or
add
xor
xlat
imul
or
xor
vmread
add
mov
mov
add
std
imul
popf
les
inc
inc
and
mov
addr16
push
xchg
sbb
iret
ja
push
sub
add
mov
in
lret
decb
loopne
jle
mov
inc
cmpsb
es
rcll
dec
mov
pop
inc
jo
push
or
scas
pop
loope
mov
add
xchg
lds
enter
jns
adcb
scas
hlt
mov
lock
ja
shlb
mov
jmp
addl
push
add
jbe
divb
cli
xchg
std
push
out
cli
cmpsb
sub
add
cld
pop
add
cmp
mov
out
sbb
mov
cwtl
fisttpll
mov
insl
push
loope
pop
inc
xchg
push
xchg
mov
lods
cld
std
dec
xor
mov
cmp
inc
call
call
fiaddl
stos
nop
xchg
jmp
and
js
mov
icebp
sub
out
les
jg
inc
jns
mov
pop
add
inc
stos
adc
push
or
jecxz
add
adc
adc
sbb
stos
add
pop
or
push
dec
push
fistl
loope
cld
or
sub
inc
pusha
jns
add
pop
pop
pop
cmpsl
shlb
loope
push
test
hlt
loop
pushf
inc
clc
aam
jg
daa
fwait
sub
aas
cltd
mov
lcall
clc
and
sbb
popa
mov
mov
sbb
push
push
orb
mov
dec
cmp
pop
or
inc
lret
imul
repnz
pop
dec
or
mov
ss
sbb
and
or
idiv
pop
add
mov
push
int
push
rolb
rcll
and
loopne
jnp
xchg
dec
sub
aas
mov
fmul
jge
jle
sbb
cmc
xor
push
loopne
and
sub
add
dec
fwait
rcrl
js
add
xor
add
stos
push
jmp
or
jns
push
adc
sbbl
lods
push
in
fsts
mov
nop
loopne
fists
negb
and
test
adc
add
xchg
adc
cs
daa
adc
jp
or
add
lret
clc
push
lods
adc
rolb
add
inc
add
repz
pop
clc
or
xor
ss
and
scas
cmp
sub
stc
mov
incl
in
int3
dec
mov
add
aas
test
cs
ss
pop
sbb
imul
pop
call
mov
jg
sahf
jl
mov
xor
test
and
or
nop
fs
enter
in
xchg
ja
mov
jecxz
pop
in
stos
add
push
push
dec
add
jo
xor
insb
adc
subb
mov
xchg
or
push
jp
es
mov
mov
mov
out
cmpsb
or
and
sub
mov
jne
mov
pop
adc
fdivp
adc
incl
push
in
push
add
fcompl
push
notl
ss
sbb
js
add
or
aaa
jg
test
pop
sub
mov
adc
pop
cmc
push
xchg
or
adc
push
lock
add
fcomps
imul
sub
or
add
mov
push
dec
imul
out
mov
pop
aas
and
sub
outsb
in
mov
sub
rolb
out
repnz
pop
mov
push
imul
jbe
pop
in
in
lods
xor
inc
js
add
out
lret
sti
sahf
repnz
inc
aas
xchg
jae
cmp
fiaddl
sti
and
insb
mov
xchg
roll
movsl
mov
adc
dec
add
sbb
je
adc
push
aaa
clc
mov
int3
mov
sub
mov
add
in
cmpsl
add
mov
mov
and
sbb
rorb
pop
sub
roll
xchg
add
mov
pop
lret
int3
cmpsb
pushf
aaa
insl
add
add
pop
js
pop
mov
lods
lock
dec
dec
inc
or
movsb
ljmp
pop
hlt
cld
fisttpl
adc
nop
or
mov
mov
add
loopne
dec
lds
nop
add
add
roll
add
cmp
ja
cltd
add
fldl
test
shlb
loopne
sub
xor
xor
xlat
sti
sub
jae
addr16
dec
in
sub
mov
mov
add
and
mov
mov
and
inc
xchg
sbb
add
mov
xchg
sarb
int3
add
mov
jo
add
lds
fstps
dec
call
xchg
sub
int3
push
add
jle
sub
ss
dec
enter
insl
sub
adc
je
aaa
dec
roll
mov
rorb
add
or
imul
pop
cmc
std
addb
cld
sub
rcrb
pop
call
add
pop
mov
add
cwtl
nop
in
xchg
and
movsl
out
cmp
jo
add
mov
sbb
addb
icebp
pusha
enter
and
jae
add
inc
incl
stos
cld
cmp
pop
cmp
or
cmp
subb
pop
xor
loopne
notb
cmp
dec
add
mov
and
mov
loope
pop
pop
adc
shl
rolb
cmpsl
sub
test
insb
sub
in
add
xor
and
pop
sub
jnp
sbb
add
push
cwtl
repz
jb
add
xchg
andl
add
fwait
inc
cli
mov
pop
hlt
out
iret
aaa
test
push
data16
cli
js
enter
adc
sub
add
mov
nopl
mov
mov
push
mov
sub
or
sahf
lcall
sub
push
mov
push
xchg
loopne
inc
dec
leave
lods
pop
sbb
fsubl
and
daa
mov
push
mov
push
xor
sbb
inc
mov
pop
lock
popf
add
push
pop
fstl
jle,pn
add
xor
add
repnz
adc
adc
sbb
pop
jl
or
scas
pushf
adc
shld
sub
in
mov
sub
inc
adc
mov
mov
stos
mov
in
jmp
movsl
xor
push
push
sbb
ret
cmp
rolb
adc
enter
or
mov
push
jno
jo
mov
add
adc
mov
out
movsl
fidivrl
jne
add
icebp
dec
mov
sub
add
sub
xor
aam
mov
push
sbb
push
cli
xchg
jecxz
add
adc
ja
pusha
je
jno
mov
sub
dec
add
outsl
or
xor
or
add
sbb
jno
negb
mov
cmc
leave
fmul
in
cmp
mov
sbb
or
xchg
ret
sbbb
mov
dec
jae
push
enter
test
mov
add
and
fcmovu
adcb
jno
cld
or
and
xor
add
in
cmp
jbe
and
lock
test
lret
adc
cmp
and
nop
dec
pop
inc
jp
mov
add
push
ja
pop
add
movb
xchg
mov
pop
and
lret
out
in
mov
outsl
sbb
sarb
add
jg
mov
add
lods
add
dec
in
cmpsl
mov
xchg
in
pop
loope
or
add
ds
and
xor
sub
add
sahf
add
jmp
xchg
in
adc
ds
addb
pop
fpatan
insl
subb
push
xchg
and
inc
lcall
bnd
push
pop
in
inc
pop
add
dec
xchg
mov
sbb
into
imul
xor
add
repnz
insl
or
add
lock
sbb
mov
mov
jp
repnz
mov
add
cmp
ficompl
in
dec
ja
dec
jmp
stc
mov
add
scas
pop
int3
aas
add
sbb
out
pop
add
or
jns
cltd
xlat
add
mov
loopne
repnz
and
insl
jle
adc
jmp
dec
xchg
test
cli
je
mov
insl
cmp
imul
test
mov
cld
shr
and
mov
lods
xor
mov
add
adc
xor
shll
inc
add
loope
ss
add
clc
pop
xchg
mov
push
jo
xor
add
mov
adc
or
outsl
stos
mov
movb
add
inc
mov
repz
or
les
or
das
ja
mov
mov
arpl
sub
add
pop
ljmp
leave
pop
push
add
fdivs
sub
dec
pop
jmp
sahf
xchg
out
mov
cwtl
add
mov
push
mov
sub
sub
insl
mov
xchg
sub
stos
xor
lock
jnp
test
dec
jmp
cltd
add
enter
add
cltd
and
push
jp
push
mov
cwtl
cli
add
mov
add
stos
ret
shlb
add
lock
adc
ljmp
push
xor
push
dec
fsubrs
mov
test
addb
dec
add
outsl
xchg
xchg
mov
push
mov
mov
pop
dec
inc
xchg
sbb
xor
inc
lret
push
or
outsb
or
add
in
pop
ja
in
cs
scas
lods
dec
sahf
jne
js
xorb
xor
cli
jge
or
jnp
mov
or
rcl
and
adc
out
xor
inc
xor
push
jp
rcrl
add
into
lods
inc
rolb
dec
add
xchg
jbe
jp
jle
add
sbb
enter
shrb
push
popa
icebp
cmp
lock
mov
or
and
xor
jno
out
in
mov
test
jecxz
in
je,pt
es
cmpb
test
jo
add
cs
loopne
add
mov
std
les
repnz
xor
lds
fcmovne
loopne
mov
ss
mov
aam
adc
test
fcompp
inc
imul
js
lret
mov
xor
cmpsl
mov
loopne
xchg
add
add
shlb
mov
int
repnz
adc
jge
sbbb
les
or
mov
add
adc
je
out
add
jae
add
cmp
add
xor
test
sti
adc
icebp
and
cmc
push
jmp
insb
or
call
nop
xchg
jge
gs
fiadds
popf
mov
ds
mov
add
fsts
js
mov
movsl
cmp
add
lret
fidivrs
push
xchg
sub
andl
orb
jnp
cmp
outsb
xor
mov
mov
cmpl
lds
cld
repz
mov
fldt
scas
in
shll
add
test
jbe
andl
cltd
push
mov
imulb
sub
cmp
or
adcb
mov
aam
mov
cwtl
nopl
pop
add
jns
dec
mov
and
jl
push
add
ljmp
loopne
mov
inc
mov
ficoml
mov
mov
jmp
sub
popa
mov
pop
std
call
mov
sbb
xchg
adc
push
pop
mov
pop
movsl
lret
in
and
nop
cld
je
or
xor
sbb
jnp
pop
movsb
call
xchg
add
add
sub
enter
xlat
inc
inc
jmp
into
shll
add
mov
xchg
out
insb
mov
std
adc
les
out
add
pop
movsb
cmp
dec
push
xchg
insl
mov
inc
push
sbb
popf
add
sub
pop
jg
loope
imul
mov
dec
fsubs
dec
pcmpgtd
imul
adc
insb
sbb
sub
or
pop
clc
cmpsl
mov
sub
xchg
add
test
hlt
out
push
rolb
mov
mov
stos
inc
push
fldt
aad
dec
inc
pusha
mov
add
or
scas
test
mov
pop
inc
fsubr
int
mov
cmpsl
insl
enter
fisttpl
mov
dec
xlat
add
ret
dec
test
inc
xchg
add
push
add
ss
sub
dec
sub
push
mov
popa
add
popf
sbb
mov
xchg
or
cmp
add
aad
cli
sti
lods
add
rorl
pop
sub
mov
inc
clc
subb
stos
pop
hlt
daa
or
jb
xor
sbb
sbb
or
adc
or
xor
lea
cmc
mov
mov
inc
mov
loopne
and
xchg
lock
pop
cmp
jnp
jecxz
or
jno
xlat
mov
add
pop
add
mov
add
imul
xor
xor
sti
pop
mov
lcall
jp
nop
add
cmp
mov
adcl
add
jmp
push
mov
lcall
fimuls
gs
mov
add
xor
lahf
or
inc
aam
push
and
xchg
pusha
mov
lahf
jns
pop
fcompl
adc
call
loop
cmp
sbb
imul
mov
dec
popf
jnp
cmp
inc
push
mov
iret
int
xchg
lret
ror
out
sbb
inc
add
daa
mov
mov
mov
or
jg
mov
sub
inc
add
cmp
lret
dec
lock
lock
lea
dec
cmp
leave
push
stos
flds
aas
dec
add
stc
cmc
fiadds
or
xor
lret
push
mov
cs
cmp
cltd
cmp
add
push
xchg
mov
mov
adc
mov
leave
sbb
pop
pop
cmpsl
add
mov
popa
jmp
sbb
lret
jbe
smsw
and
dec
xchg
cmpsb
adc
adc
mov
sub
or
adc
pop
filds
jo
lret
enter
call
sub
loope
in
shl
in
add
inc
inc
int3
dec
cmp
add
sbb
mov
in
push
and
les
int
mov
nop
add
xchg
aaa
sub
xchg
push
sbb
add
add
mov
xchg
gs
and
or
xchg
in
mov
loop
or
dec
dec
xor
mov
mov
je
mov
jecxz
push
sbb
dec
or
call
decl
mov
dec
mov
sub
loopne
cmpb
into
sub
and
pop
pop
dec
adc
or
or
shlb
sbb
je
sbb
mov
push
pop
test
pop
shrb
inc
add
sbb
sbb
cltd
pop
push
cmpb
fwait
cli
jl
or
movsl
jge
push
outsb
fcmovbe
xchg
pop
daa
into
stos
cmc
shll
cmp
pop
xor
mov
js
add
adc
pop
es
loopne
push
add
cmp
ljmp
in
adc
fmull
filds
xchg
add
cli
sarb
sahf
add
sub
add
test
fs
aas
cmp
andb
pop
gs
sbb
rolb
enter
incb
jbe
add
hlt
shlb
ljmp
cld
out
rcrb
in
or
xor
add
outsl
js
lock
dec
inc
mov
out
mov
push
pop
jg
sbb
dec
outsb
sub
rcll
sub
and
or
xorb
dec
dec
jp
addb
ja
pushf
dec
sub
arpl
mov
lahf
xchg
mov
notl
je
pop
cld
jmp
shr
fsubr
lds
out
out
fcomps
xlat
dec
add
xor
dec
add
sub
sub
push
jae
fldt
mov
xchg
scas
nop
mov
add
xorl
sbb
mov
xchg
push
or
std
or
sub
pop
ret
lock
in
add
cmp
xchg
fwait
dec
dec
add
cwtd
aas
inc
lods
pushf
push
mov
xchg
pop
lret
into
fildl
sub
pop
in
out
or
aad
lret
jge
mov
xor
jmp
add
xchg
mov
stos
sbb
in
jl
add
lret
psllq
add
pop
in
cmp
je
cmp
mov
adcl
leave
stc
mov
pop
xchg
xor
in
sub
inc
test
sub
outsb
lea
jno,pt
xchg
addb
lock
dec
adc
shll
sbb
and
shlb
pop
sbb
ficoml
inc
push
mov
ret
xor
cmp
mulb
in
fcoml
sub
dec
and
adc
add
inc
sti
push
pop
push
loope
add
out
rclb
add
out
cwtl
nop
stos
cmc
inc
xchg
sub
clc
testb
jnp
add
add
adc
push
fwait
data16
jp
mov
stos
ja
add
int
push
push
icebp
sarl
cmpb
sub
not
add
popa
cmc
xchg
adc
rcrb
jp
add
bound
xor
sbb
push
adc
and
out
nop
adc
sbb
mov
int
clc
mov
jne
cmpsl
and
lock
jae
mov
nop
scas
add
incl
add
out
lock
andb
or
je
pop
into
lods
xchg
mov
adc
shrl
add
jecxz
jle
adc
add
out
sbb
ja
add
fs
std
sub
nop
add
mov
add
xor
data16
cmp
cwtl
repz
jl
jnp
add
popa
jbe
or
aad
push
movsl
push
add
mov
les
add
fnstcw
pop
sbbb
add
jmp
mov
cltd
inc
mov
push
fwait
lods
in
inc
mov
push
inc
movsb
sbb
add
xor
sbb
add
push
fstp
mov
cltd
push
arpl
fcomi
pop
and
push
insb
dec
ss
jae
sub
mov
lock
scas
add
push
and
adc
icebp
push
insb
inc
add
movsb
div
xchg
pop
mov
cli
push
scas
mov
in
ud1
ljmp
addl
mov
dec
lea
into
pusha
test
in
repnz
testl
sbb
popa
icebp
and
add
push
add
or
addl
ret
sahf
add
mov
jo
cmp
gs
cli
fadds
out
cld
movsb
pop
shrb
mov
push
sti
push
stc
stos
pop
xor
je
fxch
stc
dec
mov
repnz
sbb
ljmp
data16
pushf
loop
mov
jnp
add
fildll
mov
sub
mov
add
pop
cmp
xor
cmp
andl
jmp
scas
mov
push
add
cltd
mov
jmp
clc
add
mov
in
sub
xor
inc
add
fcoms
or
inc
ret
inc
lahf
out
push
xlat
pop
jle
add
jns
add
xor
adcb
add
jbe
pop
xor
ret
cmp
add
sbb
stc
insb
adc
mov
xchg
sbb
rorl
mov
mov
mov
rolb
in
add
jno
loope
and
mov
je
popa
test
testb
xchg
push
add
fstpt
push
js
dec
pop
and
out
ror
mov
pop
ret
add
xor
inc
pop
addl
int
aaa
jge
mov
into
cli
loop
fsub
add
cmpsb
pusha
les
rolb
cwtl
xchg
pusha
jns
lock
adc
inc
or
xor
decb
add
lods
and
lock
pop
ja
mov
push
xor
mov
fsqrt
clc
dec
shlb
rol
add
sub
mov
sub
ret
mov
lahf
enter
add
pop
and
test
add
test
sbb
pop
add
mov
lea
cmp
cmp
sbb
inc
jb
pop
dec
incb
inc
popa
mov
aam
rol
or
pop
xchg
pop
sahf
gs
and
insl
xor
push
in
or
pop
clc
nop
rolb
lret
sub
in
sbb
mov
mov
jne
mov
xchg
sub
add
rcrl
in
lds
fcoml
test
add
iret
xchg
mov
add
cld
cmp
lock
cmpsb
cld
inc
pop
stc
jecxz
clc
test
andb
inc
scas
lret
nop
jb
es
lret
es
pop
repz
nop
fsubrs
or
mov
xchg
mov
pop
jo
fwait
add
pop
mov
mov
xchg
push
cwtl
sbb
and
or
fisttpl
mov
add
fadds
push
mov
movsl
int
icebp
ds
test
fs
push
jl
fsts
pop
add
fcomps
xchg
jo
int3
shll
rcl
int3
cmp
dec
mov
sub
pop
bound
mov
xchg
jo
pop
fdivrs
push
mov
xor
add
pusha
jp
outsb
add
mov
add
xchg
sarb
aaa
dec
ret
xchg
sbb
inc
add
add
inc
pop
inc
test
test
cwtl
mov
adc
inc
outsl
fstpt
inc
lret
sbb
xor
add
add
sbb
jne
add
sbb
xor
push
adc
or
orl
loopne
out
jns
add
outsl
inc
mov
mov
jne
inc
mov
pop
mov
int
rorb
sub
int3
pop
jge
clc
mov
insl
inc
xor
aaa
add
data16
dec
popa
xchg
add
xchg
mov
dec
je
pop
incb
ds
jg
aas
add
mov
sub
add
inc
or
outsb
dec
add
fwait
insl
pop
mov
inc
mov
add
push
add
test
sub
ja
mov
dec
dec
add
mov
add
pop
dec
mov
jnp
add
out
insl
lret
pusha
mov
mov
daa
nop
mov
xchg
sub
es
test
lods
lods
or
mov
jl
jbe
lock
fistpl
and
add
mov
outsb
fcoms
jecxz
lds
add
les
push
add
test
dec
add
ds
lret
mov
cmp
mov
adc
push
xchg
popa
xor
sbb
leave
in
out
mov
push
add
xor
jecxz
test
lcall
push
loop
cmp
fcmovnbe
jae
addb
dec
pushf
dec
mov
fsubrl
push
inc
mov
loope
sbb
cmp
jle
ret
cltd
test
mov
test
and
pop
clc
aaa
add
stc
push
cmc
mov
jnp
and
mov
lret
add
add
add
push
mov
loopne
jb
add
dec
xchg
mul
scas
inc
lret
int
insl
adc
lods
add
shrb
cmp
inc
das
mov
add
test
shr
loop
and
repz
lods
ds
mov
in
cwtl
mov
jg
mov
mov
lahf
pushf
pop
xchg
rorb
dec
mov
add
insl
or
enter
loopne
sbb
std
add
push
add
xchg
lods
mov
cwtl
xchg
fidivs
scas
es
add
shlb
mov
je
lock
push
xor
jmp
sarb
push
jl
lock
adcb
add
jb
stc
mov
dec
stc
mov
cmp
push
jo
movb
xor
xor
cmpb
mov
dec
push
inc
inc
enter
cs
add
inc
xlat
push
jne
mov
mov
out
addr16
aam
mov
lret
xchg
pop
cmp
dec
add
cmp
int3
lods
adc
mov
mov
cmc
in
shrb
mov
mov
add
pusha
fnstsw
cmp
addr16
inc
scas
out
daa
ja
and
push
pop
out
nop
jle
rcrl
fcoms
cmp
sbb
inc
shl
cmp
pop
add
lock
mov
ja
pop
insl
les
les
syscall
mov
aaa
xor
test
pop
mov
xor
jo
xchg
mov
pop
in
jb
repz
ds
sbb
push
sub
pusha
mov
ffreep
dec
sub
add
or
xor
sub
sbb
outsb
mov
shlb
and
psubw
fwait
jp
add
stos
cli
sbb
arpl
ss
mov
pop
mov
and
fildl
daa
shr
add
push
shlb
adc
scas
daa
lds
adc
fucomi
nop
lret
mov
fildl
fistpll
lahf
insb
add
fs
loopne
mov
add
inc
cmpsb
ret
adc
fbstp
not
push
jno
xchg
rcrl
fiaddl
cmp
mov
inc
push
adcl
or
inc
push
pusha
out
fiadds
repz
mov
add
popf
pop
lahf
dec
test
andps
mov
into
and
jg
inc
add
cli
rclb
push
adc
mov
mov
add
push
lods
out
add
shlb
mov
cli
add
aam
pop
loopne
sti
nop
arpl
xlat
mov
xor
mov
jg
es
nop
add
jl
arpl
dec
in
add
mov
fs
and
xor
adc
jne
es
mov
xor
test
mov
mov
mov
scas
sub
popf
and
sbb
out
in
add
test
and
xchg
pop
rclb
roll
imul
imul
and
mov
adc
aas
sub
loopne
dec
icebp
pop
add
shrl
add
popa
cmc
mov
adcb
movq
sub
cli
jp
pusha
xorb
lods
scas
pop
pop
add
cmp
int
mov
lcall
dec
pop
leave
pop
movsb
stos
mov
mov
shrl
in
xor
push
jle
pop
aas
adc
fwait
mov
add
jmp
out
ds
pop
xchg
insb
nop
daa
sub
lods
cmpsl
ret
push
sub
rorb
push
xchg
push
lret
ss
dec
leave
shrl
adc
push
xor
cwtl
add
jge
push
jae
bnd
jb
mov
adc
sti
jo
adc
lds
adc
mov
xlat
decl
jg
add
subb
or
and
cmpsl
cmpb
add
inc
xor
pushf
hlt
jo
lcall
leave
lret
daa
push
popf
add
ja
pop
add
lcall
cli
outsb
jae
add
xchg
or
js
cmc
cmp
adc
or
mov
enter
cs
test
push
data16
testl
add
cltd
adc
add
mov
jo
pop
cmpsl
cmp
scas
mov
lahf
sbb
dec
pop
xor
push
mov
pushf
out
or
lret
or
add
dec
mov
rorb
mov
jo
add
imul
add
movsb
jmp
into
pop
jne
xchg
mov
call
lock
nop
and
sbb
out
add
inc
loope
popa
cltd
jne
add
stos
sub
sbb
aaa
push
push
lds
add
push
pushf
pop
add
aam
push
mov
pushf
loopne
testb
inc
pushf
adc
fwait
sbb
scas
lock
sahf
push
push
mov
hlt
cld
mov
imul
adc
sub
divl
test
sub
sub
mov
pop
xlat
imul
out
cmc
cmp
inc
jo
sahf
rep
adc
enter
add
repz
mov
jge
lds
insb
push
mov
mov
ja
cmp
outsl
sbb
mov
inc
and
loope
inc
shl
cmp
pop
or
add
xor
lret
scas
repz
adc
pop
rcll
mov
add
mov
int
inc
push
cmp
in
daa
aam
jp
cmp
pop
jl
and
xchg
fcmovu
cltd
cwtl
jp
jnp
stc
aaa
addb
sti
cmp
scas
addr16
xchg
jge
loopne
or
popa
mov
sti
dec
aam
rcrb
dec
xor
sahf
push
xchg
dec
movsb
cmpb
pop
xchg
xor
push
cmpsb
xor
cmp
push
loope
sbb
sbb
orl
clc
testb
mov
mov
add
lcall
out
add
loop
test
ror
fwait
add
sub
inc
jo
adc
pop
adc
add
sub
in
xchg
jge
dec
pop
push
lock
or
hlt
lea
std
out
lcall
sub
xchg
ret
pusha
sbb
add
jecxz
mov
sbb
add
mov
aaa
sbb
sub
jno
pushf
add
jl
jge
fstpl
cmp
into
inc
test
test
outsb
mov
adc
pop
fs
lods
or
dec
add
nop
test
fadds
and
sbb
das
add
pusha
aam
mov
loopne
add
jbe
jg
daa
dec
fiaddl
pop
shlb
pop
sbb
icebp
jbe
add
insb
scas
mov
pop
sub
inc
enter
shlb
fisttpll
xor
mov
push
add
mov
shll
add
ret
push
jo,pt
lea
dec
popa
leave
inc
rcrb
hlt
add
xor
in
lds
cmp
add
xor
fdivrs
push
mov
fdivl
repnz
mov
nop
pop
cmp
dec
sbbl
lods
sub
inc
in
jge
pop
stc
int
push
shrl
mov
je
add
pop
push
ds
lea
fldcw
sbbl
xchg
add
add
in
pop
inc
ret
lahf
push
cmp
or
in
and
outsl
ficomps
cmp
sub
out
mov
dec
xchg
xlat
popa
cmp
inc
add
ret
sbb
add
push
dec
lods
mov
pop
dec
aam
mov
adc
cmpsl
mov
mov
in
pop
jne
add
out
mov
arpl
enter
or
mov
aas
push
mov
push
sbb
loope
loop
repz
pop
mov
add
jg
inc
cmpsb
mov
and
clc
cwtl
push
in
jns
clc
or
mov
pusha
fistps
fistpl
pushf
in
adc
xchg
call
cmp
xchg
int3
lods
add
stc
xchg
add
sub
push
outsl
sub
or
xlat
jle
into
lods
add
fisubs
adc
daa
sbb
xor
push
add
and
mov
add
mov
xchg
mov
jg
push
adcb
mov
add
jge
dec
cld
inc
add
push
je
lds
add
sbb
aam
lahf
and
add
mov
stos
das
cmp
xor
lods
mov
outsl
and
test
aam
add
dec
push
enter
inc
mov
adc
sub
add
xor
jne
or
push
jnp
test
testb
mov
fnstenv
sub
pop
scas
mov
adc
jg
lret
pop
loopne
mov
push
icebp
rol
push
sub
sub
or
ds
out
xorb
movsl
jp
add
js
xchg
xchg
nop
in
jnp
aas
mov
outsl
insb
push
leave
or
add
roll
mov
repz
loopne
test
pop
add
in
es
sbb
stc
xor
pop
subl
popa
es
jbe
cmpb
repz
int
mov
ret
cmp
xchg
mov
sbb
cs
sub
rolb
cmp
and
xor
repz
push
jnp
in
fidivs
std
add
pop
xor
add
add
aam
movsl
xchg
and
ljmp
lods
popa
add
push
dec
jbe
add
mov
xchg
inc
enter
popa
jae
inc
sarb
jmp
pop
sub
loopne
ret
xor
inc
cmp
add
loop
fwait
insl
cltd
push
movsl
add
mov
insb
pop
inc
and
add
add
stos
pop
sbb
xchg
cmp
sbb
and
clc
inc
cmc
mov
leave
sbbl
dec
scas
fcompl
xchg
out
mov
in
idivl
sbb
pop
and
loopne
xchg
add
lods
sti
int3
mov
stc
add
jge,pt
popa
push
js
pop
xchg
int3
adc
add
stos
push
add
pusha
mov
rcrl
jns
push
nop
data16
mov
pusha
push
movsl
jl
jmp
adc
jle
adc
jne
popa
jmp
rorb
push
imul
add
sti
jmp
pop
sahf
std
xor
cmp
or
or
je
sbb
jg
mov
lret
out
add
jb
adc
jg
push
add
dec
loope
add
outsb
loopne
mov
xchg
jo
pusha
jb
fstp
das
mov
sub
in
cmc
push
mov
test
jo
repz
cmp
out
in
add
js
ret
popa
push
mov
add
mov
jbe
enter
mov
ds
mov
outsb
add
in
inc
fwait
gs
inc
add
mov
push
enter
out
and
pop
or
cmp
pop
movntq
out
cld
inc
xor
mov
add
repz
push
js
pop
popf
inc
addr16
sub
push
lock
mov
cwtl
cmp
mov
fidivrl
es
sub
or
dec
pop
mov
loop
mov
add
push
iret
mulb
dec
mov
hlt
push
mov
pop
push
sbbb
test
add
addr16
aaa
inc
into
sbb
loop
xchg
sarl
lahf
test
and
pushf
inc
mov
xor
pop
jbe
mov
pop
inc
jo
xchg
add
aad
cmc
cmp
and
mov
add
lret
adc
int3
jmp
add
fld
mov
lods
xchg
sbb
sbb
mov
add
pusha
call
push
add
jae
xchg
je
push
lock
jp
in
jecxz
call
mov
sub
out
int
jp
aam
push
lahf
pusha
out
mov
sbb
inc
je
inc
xchg
mov
mov
add
mov
inc
push
mov
leave
movsl
loopne
inc
dec
dec
test
fwait
das
stos
add
jp
lock
jno
lock
mov
push
mov
add
addl
mov
pusha
fstps
adc
psllq
fstpl
pop
testb
ds
add
sahf
cmp
fiadds
and
jns
inc
xchg
cli
jle
or
call
add
lret
fwait
roll
lds
pop
push
mov
fstpl
add
cmp
rcrl
fcmovnu
pop
push
and
add
xchg
push
mov
fwait
xchg
enter
sbb
aaa
and
scas
mov
in
jo
sub
xchg
mov
movsb
pop
cs
call
arpl
cld
add
pop
ss
xchg
dec
jns
sar
sub
xlat
add
inc
mov
mov
push
jge
outsl
xchg
aas
inc
or
pop
imul
mov
ficoms
rorl
out
mov
lahf
inc
pop
into
sbb
xchg
aam
repz
jo
xor
inc
stos
lea
push
cmp
mov
mov
dec
mov
pop
mov
cmp
jb
mov
daa
inc
arpl
dec
mov
nop
and
add
ret
xor
daa
add
shlb
cmp
sbb
lods
add
lods
ss
cmp
sub
pop
xchg
and
ja
xchg
insb
add
or
jp
ss
add
bswap
mov
fistl
ljmp
pusha
scas
push
add
jmp
scas
int
int3
dec
jae
xchg
imul
iret
cmp
push
xchg
sub
int3
test
js
jae
icebp
inc
data16
fcomip
ds
inc
shr
lcall
sub
mov
and
jecxz
add
adc
je
and
xchg
mov
addr16
or
inc
pusha
add
pop
add
jg
pop
popa
mov
adc
or
add
add
enter
push
add
out
or
cmp
arpl
test
and
out
lahf
jno
cmp
or
mov
cmp
jo
nop
cmp
or
pop
rorb
mov
cmp
add
sbb
xor
add
cmp
add
jne
rcrb
popf
imul
dec
nop
stc
pop
insl
in
mov
pop
sbb
aas
sbb
add
push
aaa
xor
xchg
dec
pop
daa
or
jecxz
pop
nop
addl
push
sbb
mov
lcall
xchg
aad
mov
or
push
mov
ret
and
adc
add
cli
jb
jp
add
sbb
scas
add
cmp
xchg
adc
sub
pop
mov
fidivrs
iret
or
or
loop
mov
shlb
or
fadds
jnp
xchg
inc
addr16
mov
mov
mov
add
js
and
in
jl
imul
cmpsb
test
adc
xchg
dec
mov
jns
mov
out
jb
vpshuflw
push
mov
mov
mov
sbb
mov
pop
xor
je
adc
sbb
push
jae
mov
mov
xor
cli
add
fisubrs
pop
add
mov
sub
test
je
push
repnz
pop
ror
add
cmp
add
arpl
jg
orb
lret
fdivrs
data16
ret
std
addr16
xor
add
lock
in
verr
test
dec
mov
pop
fcompl
movl
jne
aad
add
in
scas
push
inc
insl
adcl
xor
xor
loopne
stos
fwait
sbb
sarl
dec
fiadds
adcl
jne
mov
int
xchg
mov
mov
add
repnz
hlt
cmp
xchg
out
out
push
in
and
jg
cmp
xor
movsl
ret
outsb
add
adcb
push
xlat
shrb
mov
scas
and
arpl
add
add
sbb
ret
mov
loopnew
ret
jno
add
nop
fmul
mov
lret
sbb
mov
std
mov
andb
add
stos
sbb
pushf
add
cld
xor
xchg
std
push
mov
lahf
iret
cmp
imul
clc
dec
mov
push
mov
push
xor
movsl
add
jns
xchg
mov
add
into
mov
push
jmp
add
popa
out
leave
mov
jno
xor
adc
cld
pop
mul
sbb
insb
lahf
xlat
js
push
add
cmp
push
test
in
mov
sbb
imul
cli
jl
inc
mov
in
add
ljmp
vmovdqa
and
add
test
js
cmpl
mov
mov
jno
cwtl
popa
not
outsb
lds
jmp
mov
push
loopne
jge
dec
add
pop
in
push
mov
add
inc
cwtl
dec
dec
cmpsl
jnp
ret
mov
xor
sbb
add
imul
inc
sub
xchg
add
out
pop
movsb
sahf
ja,pt
nop
inc
add
pop
cmp
ss
lret
jne
cmpb
daa
loop
das
xchg
cwtl
xchg
arpl
sub
and
xchg
add
cmp
fldt
sub
jb
push
push
jo
iret
fldenv
das
sub
bound
sbbb
push
add
insb
into
jae
rolb
add
fcoml
xchg
es
arpl
loope
imul
mov
pop
rcrl
rclb
insb
mov
insl
lsl
pushf
mov
push
fadds
pop
mov
mov
clc
mov
sbb
rorb
imul
and
or
adc
iret
jb
add
lret
add
shll
adc
cmpsb
push
xchg
add
adc
pop
faddp
sub
and
hlt
leave
inc
dec
adc
btr
and
bound
xchg
and
sbb
or
or
pusha
hlt
jb
fiaddl
sub
push
in
pop
add
adc
sub
xchg
dec
cmp
add
imull
inc
add
cmp
cmp
adc
jg
cwtl
add
movsl
jnp
mov
xchg
jno
add
shlb
rcll
loopne
stc
jae
add
pop
mov
cmpb
insl
pop
mov
sub
ret
mov
xchg
sub
lret
divl
cmpsl
les
daa
pop
jno
jl
imul
xchg
sub
mov
inc
mov
xor
lock
inc
into
dec
sbb
leave
cmp
mov
shll
cmp
cmp
mov
lods
aam
and
ja
pop
sbb
mov
call
outsl
inc
jb
cmp
ret
add
sbb
adc
inc
outsb
loopne
popa
add
out
cmc
mov
sbb
fdiv
adc
pop
adc
loope
sub
lods
push
mov
cmp
hlt
inc
add
pop
mov
jl
adc
jne
lret
or
add
iret
inc
jnp
test
pop
xorl
jno
lsl
jg
pusha
outsb
jmp
xchg
aas
xchg
sub
jecxz
cmc
push
mov
jmp
loopne
ffree
cmp
jo
les
cmp
aam
add
ja
subb
cld
hlt
shlb
add
add
mov
in
cmc
dec
int
add
adc
sub
mov
inc
int3
popa
out
or
dec
stc
add
repnz
in
mov
inc
js
pop
loopne
jnp
jb
add
dec
mov
lret
jl,pn
add
ds
dec
mov
push
xor
sbb
out
sbb
mov
sbb
ret
inc
mov
test
add
pop
add
xchg
push
bound
aad
cmp
jae
jne
rcrl
and
and
push
stos
cmp
mov
jp
les
aaa
push
xchg
clc
js
add
arpl
mov
add
jmp
addb
loopne,pt
pushf
add
add
cmc
and
mov
mov
sbb
lret
push
int
add
pop
jp
sub
out
add
sub
aad
test
add
jge
dec
cmp
pusha
add
jmp
add
andl
out
divb
add
fbstp
jo
call
mov
fsubs
and
inc
adcb
xchg
mov
ret
add
sub
cltd
pop
cmc
hlt
roll
jnp
cli
outsb
inc
or
xor
xchg
mov
rolb
cld
push
test
jnp
outsb
sub
repz
sub
and
mov
adc
jp
in
inc
mov
loopne
in
sub
sub
add
xchg
inc
mov
cltd
pop
pop
mov
incl
dec
je
lea
xchg
and
xchg
imul
push
fimull
mov
inc
cmp
and
out
dec
jecxz
inc
add
sarl
jl
loope
add
leave
out
mulb
fcompl
cmp
lods
insl
xchg
dec
xchg
nop
mov
std
sbb
mov
in
sub
inc
frstor
mov
adc
push
movsb
setae
fisubs
sti
bound
cmpsb
inc
mul
adc
movsb
gs
js
cmp
fistl
jnp
clc
add
pop
test
in
out
orb
sub
cmc
daa
ror
leave
jnp
arpl
add
xchg
rclb
je
cmp
mov
add
pop
mov
push
mov
ror
cmp
jns
xchg
rclb
push
mov
mov
cmc
add
cmpsl
and
add
mov
in
adc
mov
ja
pop
pop
mov
rcl
or
pmaxub
mov
mov
push
mov
and
rolb
inc
pop
aas
jnp
add
dec
xor
testl
sub
mov
jecxz
add
fadds
mov
test
xchg
xchg
inc
lods
rcll
es
icebp
add
shr
fisttps
ja
xchg
mov
mov
cmp
xchg
adcb
add
mov
jge
add
pop
mov
sbb
mov
inc
mov
add
add
add
loop
cmp
add
sub
in
add
test
imul
add
xchg
and
jg
add
dec
pop
push
mov
mov
sub
int3
xor
mov
add
xorb
iret
and
add
and
push
daa
cld
int3
mov
cwtl
test
loopne
in
imull
testb
popf
pop
movsl
leave
lock
pop
call
inc
filds
sar
add
xor
test
mov
inc
xchg
dec
cmp
test
ficompl
dec
dec
add
shl
jmp
movsb
mov
sti
stc
pop
add
int
daa
fldcw
into
sbb
aam
push
outsb
popa
pop
loopne
sbb
mov
jnp
int3
add
hlt
adc
fistpll
aas
repz
js
or
popa
sub
enter
jge
push
adc
jo
loop
or
hlt
xchg
fcoms
add
stos
or
and
rcrb
mov
adc
mov
dec
hlt
sbb
movsb
ror
push
mov
adc
das
pop
jl
test
and
push
out
xor
clc
cmpsl
mov
sub
sbb
inc
les
daa
pusha
xor
add
inc
fstpt
fs
or
loope
pop
mov
call
xlat
imul
mov
or
and
dec
cmc
xor
sub
mov
in
nop
add
sub
jo
fildll
lret
sbb
dec
mov
cmp
call
mov
jno
fndisi(8087
add
leave
insl
rolb
fst
orl
push
cmp
fldcw
add
popa
aaa
xchg
insb
adc
rcl
movsb
loop
add
inc
add
or
jae
enter
cmp
mov
xor
mov
nop
test
pop
push
jb
sbb
out
inc
add
fisubl
jae
loop
sub
mov
inc
jb
xchg
dec
fcoml
cli
cmpsb
push
mov
outsb
fildl
push
in
xchg
mov
pop
cmp
loope
loopne
mov
imul
shlb
xchg
add
aam
es
inc
mov
add
adc
lea
arpl
add
in
fs
ret
xchg
push
das
add
ljmp
call
or
movsb
imul
cmp
scas
mov
or
push
mov
cmp
mov
mov
or
add
stos
xchg
shll
cmp
push
jo
dec
add
inc
inc
inc
mov
fcompl
inc
mov
cmpb
xor
jmp
cmpb
sub
xor
bound
fstl
jp
filds
outsb
adc
add
sub
jae
cmp
rcl
add
cmp
adc
add
and
jae
add
sub
pop
cmp
sbb
fsubl
pop
movsb
out
add
sarb
aam
xor
xor
jae
add
jb
dec
movsl
jnp
nop
dec
add
push
mov
add
push
xor
lds
and
adcb
mull
test
pop
add
sub
cmpsl
mov
push
ret
dec
divl
fimull
sarl
arpl
sub
rcrb
xor
lret
call
xchg
add
movsl
bound
add
inc
clc
jo
and
enter
decl
xchg
jle
incl
mov
add
push
and
add
jp
sbb
add
in
xorb
les
mov
sahf
aas
or
push
pop
pusha
cld
pop
scas
arpl
enter
imul
add
jg
xchg
add
pop
decl
pop
add
cld
stos
cmp
or
adc
cli
push
add
and
les
cli
fwait
outsl
cmp
add
inc
push
jo
ret
test
mov
fidivl
jp
shlb
or
mov
jo
mov
icebp
in
int3
shrd
jns
loopne
test
stos
or
std
sbb
add
adc
shlb
add
xor
mov
add
cmp
sahf
and
add
pop
xchg
and
add
jns
cmp
add
roll
mov
inc
data16
dec
loope
add
lcall
aam
pusha
cmp
stc
jg
pop
je
add
aad
cld
pop
cmc
enter
in
cmp
mov
pop
pop
jo
dec
pusha
push
xor
enter
mov
rclb
mov
mov
lret
mov
inc
add
scas
fcom
movsb
mov
dec
das
add
xchg
jae
or
pop
outsb
push
mov
xchg
rcrb
insb
xchg
sbb
or
in
push
rorl
call
outsb
sbb
push
vpcmpgtb
sub
loope
lcall
fadds
js
dec
enter
mov
pusha
cmp
sub
in
mov
xchg
leave
add
cmp
out
sarl
jecxz
mov
xchg
int
lods
pop
sbbb
dec
push
sub
or
fcmovnu
and
add
enter
dec
mov
pop
xchg
and
pop
hlt
cmp
or
add
int
ds
push
add
lcall
adc
rolb
mov
jp
pop
mov
shrd
add
add
lds
aas
pop
and
pop
jo
add
or
arpl
loop
pop
sbb
lods
aas
or
add
fimull
mov
ret
add
int3
jl
jb
add
popa
inc
cltd
sbb
ja
add
dec
jbe
fisttps
jmp
lods
and
insb
sbb
orb
ja
fsubr
inc
jg
push
addl
xchg
leave
in
xchg
inc
xchg
stos
test
add
pop
std
mov
jo
push
add
adc
mov
ja
and
test
sub
jb
dec
add
pop
dec
sbb
rclb
out
insb
daa
push
aas
add
and
dec
dec
sbb
stc
inc
add
pushf
xor
cmp
cmp
pop
xchg
pop
sub
sub
mov
cmpsb
insb
inc
xchg
pop
add
add
in
xchg
mov
cmpsl
leave
jle
add
scas
adc
cs
loop
sub
cmpl
cmp
mov
cmp
insb
sbb
add
nop
repnz
add
inc
pop
cmove
imull
lahf
out
cmpsl
mov
nop
out
add
icebp
sub
dec
adc
pop
loopne
add
push
and
js
cmp
out
push
or
sbb
in
fimull
adcb
insl
jbe
sbbb
sbb
or
testb
jp
xor
push
fmul
loop
or
scas
es
enter
jb
inc
jne
cwtl
mov
hlt
push
jecxz
jmp
mov
js
in
adc
jmp
mov
cld
call
nop
adc
cmp
call
pop
mov
pusha
mov
mov
mov
aaa
mov
imul
add
roll
adc
cmp
lcall
jb
add
mov
inc
dec
lcall
fidivrl
add
popf
sbb
addr16
jne
pop
sti
add
jnp
cwtl
xchg
jge
xor
orb
stc
ret
pop
hlt
pop
add
data16
mov
xchg
test
adc
ss
jbe
sbb
sub
inc
and
adc
xor
add
inc
movsb
adc
cwtl
or
rcll
loop
mov
repz
mov
add
fbstp
mov
mov
add
cltd
dec
call
ljmp
mov
decb
pop
mov
andb
into
adc
adc
sub
das
fwait
sbb
repnz
mov
popf
add
inc
mov
xor
flds
insb
push
in
inc
push
int
or
dec
loopne
fldcw
jnp
xchg
jge
loopne
inc
xchg
cwtl
xchg
cmp
daa
fidivs
jbe
add
push
loopne
jmp
lcall
and
subl
sbbl
lcall
ret
mov
xor
test
push
inc
xor
cltd
push
les
xor
cmpb
pop
aas
sbb
mov
push
cmpsl
jnp
sub
sbb
aam
push
jp
and
inc
loopne
mov
hlt
xor
cld
insb
jno
jp
push
scas
push
mov
mov
pop
cmp
add
dec
shrb
mov
push
lea
or
mov
jle
faddl
dec
add
push
xor
inc
aas
roll
dec
fwait
adc
pop
push
cli
jo
clc
rolb
dec
mov
mov
cwtl
pushf
jl
pop
adc
lahf
add
orb
icebp
mov
xchg
add
dec
lret
scas
or
out
and
mov
cld
mov
leave
jb
or
jle
dec
push
mov
lret
sbb
push
sub
ljmp
add
inc
mov
add
sub
pusha
cld
sub
add
lret
pop
mov
xlat
push
dec
lea
adc
add
ret
jmp
lods
pusha
adc
jbe
xchg
push
dec
jno
pop
inc
rorb
dec
mulb
jle
adc
or
and
sbb
jl
test
add
xchg
stc
mov
sub
pop
jnp
push
test
aam
xchg
mov
outsb
jmp
xor
nop
lods
sub
push
adc
adc
sbb
jno
mov
jl
movsl
or
addr16
jle
and
in
daa
rcll
enter
xor
jne
mov
lea
and
arpl
call
xlat
pop
cmpsb
sbb
sarb
add
or
lret
flds
pop
aad
imul
out
enter
add
mov
cmp
mov
xchg
cwtl
iret
hlt
subl
aaa
sarl
sub
stc
push
popf
cli
or
and
xor
mov
js
add
and
push
ja
push
dec
test
inc
or
jg
and
repnz
xlat
mov
add
jecxz
test
imulb
lret
sti
sub
adc
push
mov
test
and
scas
nop
pop
dec
jns
js
and
sti
jae
and
xor
mov
nop
ret
bound
loope
nop
inc
add
and
mov
and
and
push
bound
adc
and
out
jae
cltd
adc
cmp
mov
add
fisttps
mov
das
add
les
add
jbe
and
daa
or
xchg
add
mov
pop
mov
adc
push
cmp
pop
sbb
aaa
mull
les
sub
and
js
lds
or
lods
mov
jnp
add
xchg
rorb
fstpt
leave
and
adc
xor
jl
add
adc
push
adc
scas
add
leave
pop
aas
repz
int
adc
mov
scas
jne
jnp
xchg
and
xchg
arpl
dec
nop
cmc
out
push
sti
das
bound
push
cmpsb
repnz
jge
jae
jmp
or
pop
inc
mov
outsl
out
and
add
iret
pop
add
out
adc
jge
add
shll
push
icebp
loopne
push
push
xor
push
inc
xor
pop
scas
test
ss
testb
jnp
dec
cwtl
dec
data16
leave
hlt
mov
pusha
or
lahf
cs
cmp
fcmovnu
testl
xchg
jns
aaa
str
push
sub
popa
popl
imul
in
lock
hlt
xlat
repz
sub
add
mov
jns
xchg
gs
dec
fsubs
adc
leave
adc
add
and
sub
ljmp
push
daa
jge
in
add
xchg
mov
adc
test
into
add
andl
rorl
add
scas
insb
jge
fsubr
clc
add
addr16
pusha
mov
dec
iret
or
lds
add
pop
in
rcr
test
pop
mov
or
cmc
mov
lds
clc
ds
iret
jecxz
mov
add
xlat
js
testl
stos
rcrl
mov
sbb
mov
cmc
mov
je
sbb
adc
cmp
add
push
jbe
or
out
jne
pop
inc
lock
mov
iret
pop
cwtl
pop
ds
lea
clc
mov
dec
add
add
and
cmp
mov
outsl
jb
push
adcb
inc
das
inc
ficoml
dec
test
mov
andb
mov
movsl
cwtl
fiadds
push
bound
xor
xor
enter
and
sbb
cmpb
push
cld
or
aam
les
daa
xor
jno
lret
aad
clc
push
imul
int3
or
jae
and
ljmp
jge
repz
rorb
xchg
arpl
int3
ljmp
and
sbb
stos
push
clc
mov
or
in
sahf
add
movsbl
add
popf
add
sbb
mov
pop
pushf
dec
push
add
mov
sbb
and
jge
repnz
sbb
xor
jle
clts
jg
pusha
stos
xor
mov
cmpsb
pusha
jp
out
les
add
test
xchg
shlb
xor
leave
mov
push
cwtl
in
fwait
mov
fs
sar
or
lock
movsb
mov
mov
dec
add
out
popa
add
adc
mov
ja
jae
jb
add
mov
sbb
mov
push
das
shll
jns
and
out
pop
jl
add
mov
add
add
sti
insb
cmpsb
add
ljmp
fadds
repz
int3
cli
cmc
push
jg
push
or
cmp
cmp
out
and
cmp
cli
pop
stc
ljmp
mov
inc
add
in
pop
jae
add
cmp
popf
inc
outsb
enter
push
in
sahf
cmpsb
aam
pop
ljmp
sbb
pop
in
inc
cli
add
push
xor
add
dec
or
pop
iret
movsb
lret
inc
scas
adc
mov
dec
pop
push
ret
std
xor
fcoml
cli
pop
cld
je
movsl
ret
cmp
inc
imulb
pop
cwtl
lods
pop
std
frstor
push
ret
enter
pop
cmp
add
outsb
sbb
sub
bound
in
add
test
add
xchg
out
gs
jl
add
aaa
and
push
ljmp
add
mov
mov
push
je
dec
fcompl
movsl
inc
ficoms
mov
fwait
xlat
loope
push
stc
sbb
xchg
ljmp
js
xor
shlb
dec
aas
addl
sbb
test
stos
mov
add
sbb
adc
push
pop
nop
add
or
mov
sti
jne
ror
push
push
jns
decb
fists
dec
mov
out
jno
in
dec
jge
movsl
cli
jo
shl
jg
mov
add
mov
pop
push
loop
jno
mov
adc
inc
push
xor
mov
inc
ret
pop
sbb
gs
das
push
aas
pop
push
ljmp
mov
xchg
repnz
push
jae
cltd
adc
jg
sub
scas
mov
and
cwtl
rclb
add
pushf
enter
cmp
sti
fistpll
loopne
or
std
scas
addb
cs
lcall
daa
bound
add
mov
mov
iret
and
sahf
push
test
lock
stc
push
xorb
addr16
hlt
add
pop
xlat
cmp
push
cmp
pop
dec
ljmp
loope
in
push
scas
add
pop
cmp
and
xchg
inc
push
in
pusha
js
or
cli
sbb
sub
fldt
mov
in
test
sbb
mov
xchg
push
lock
mov
ret
push
mov
mov
pop
fimull
lea
shlb
rorb
add
hlt
roll
jl
insb
push
fistps
xchg
cwtl
push
pushf
xchg
stos
imul
rcrb
xchg
cwtl
or
rorl
add
mov
mov
add
int3
jae
arpl
adc
nop
sbb
ret
inc
shl
add
pushf
scas
sarl
or
sub
rolb
fstpl
or
cld
int3
dec
or
pop
mov
loop,pn
mov
aam
lahf
aaa
jg
in
cwtl
xchg
cmp
cmpb
sub
push
or
xor
push
sub
in
sbb
loope
adcb
cmp
aaa
mov
add
add
inc
xor
add
push
mov
inc
pop
loopne
hlt
pusha
xchg
mov
inc
add
inc
add
mov
test
fists
sbb
cmp
add
pop
pop
mov
sub
loope
orb
notb
pusha
adc
inc
sub
or
adc
jne
repnz
arpl
mov
lahf
icebp
xor
mov
lock
sub
loope
addl
shrl
int3
js
aas
test
mov
dec
sub
add
lea
dec
add
icebp
adc
add
int
cwtl
pop
sub
imul
jo
add
or
add
mov
xchg
aaa
cmpsl
lods
ds
sahf
ret
push
sbb
aad
pop
xchg
mov
adc
xor
shll
mov
xchg
bound
outsl
or
dec
mov
orl
inc
xchg
fsubr
inc
in
enter
adc
test
push
or
xor
int3
inc
jl
in
ljmp
mov
cld
stos
pop
sti
push
add
jae
jecxz
push
ja
jb
nop
sbb
xchg
pop
mov
add
inc
add
call
xadd
loopne
outsb
rcll
and
out
jb
push
xlat
push
cmpsl
inc
pop
insl
cmp
sub
pop
dec
std
or
rcl
and
lds
push
sub
imul
jns
jmp
push
add
cltd
dec
adc
add
or
in
ret
shll
add
subl
jp
addb
add
jnp
mov
sbb
push
ret
push
fstl
adc
adc
mov
pop
or
xchg
lock
leave
aas
addl
nop
loop
and
dec
add
mov
xchg
cmpb
pop
cmp
add
sbb
mov
adc
dec
inc
add
loope
ficompl
jnp
aad
cmp
mov
lcall
sbb
in
add
jns
fistpll
xor
fildl
mov
pop
mov
pop
or
xor
xlat
add
jecxz
add
sbb
cmc
and
xchg
or
or
das
dec
roll
lds
add
pop
sub
mov
mov
into
andl
xchg
pop
and
sahf
or
adc
test
in
lods
fldt
sbb
mov
push
ret
pop
sub
pop
adcb
add
fwait
sbb
cmp
dec
test
lock
insl
xchg
cmpsb
jno
adc
xchg
xor
inc
add
add
mov
mov
mov
popa
outsl
lret
pop
xor
and
sahf
cli
enter
push
call
and
sbb
mov
sti
aaa
add
add
aam
mov
jle
xor
mov
ljmp
mov
add
xchg
push
pop
sahf
xchg
adc
xlat
pop
push
es
bound
mov
pop
mov
dec
popa
mov
scas
mov
pop
add
in
inc
lock
adc
xchg
xor
add
stos
aam
cmpsl
filds
add
inc
jns
cmpl
or
pop
mov
movsb
add
movsl
ret
arpl
rclb
fcompl
xor
push
push
add
call
push
jmp
out
loopne
inc
and
hlt
icebp
add
jg
sahf
adc
nop
scas
aas
clc
jo
sbb
dec
cmpsl
mov
jno
adc
outsb
xor
movsb
shll
add
sub
out
fbld
jbe
xlat
mov
addb
adc
testl
mov
xchg
and
fdecstp
add
pop
ror
test
or
dec
aas
add
cmp
ljmp
jo
add
fwait
pop
mov
mov
add
arpl
mov
rorl
pusha
outsb
add
add
fucomp
cmpsb
xor
jp
and
sbb
lock
in
mov
jo
leave
sub
je
add
gs
push
xchg
scas
or
pop
pop
sbb
aad
ljmp
fistpl
loopne
dec
mulb
ljmp
cld
inc
add
pop
mov
imul
fucom
stos
rcrb
mov
clc
cwtl
sub
repz
stc
mov
add
cmp
jle
aam
call
and
inc
or
add
lods
loop
test
lea
dec
bound
ja
pop
xchg
jge
add
cmc
mov
sub
xchg
xor
add
subb
pusha
xchg
mov
out
popf
xorl
xchg
loop
js
xchg
xlat
add
cmc
jno
add
test
mov
in
rdtsc
fwait
mov
mov
sub
popa
and
jl
fdivr
pop
cmp
out
dec
dec
pop
jl
pop
mov
sub
xchg
or
pop
dec
xchg
arpl
adc
popf
cmp
test
add
lds
fisubs
out
sbb
mov
and
js
fsub
xor
sbb
add
addr16
mov
insl
lock
sub
jae
loope
or
out
add
fcmovnu
js
popf
addr16
sbb
pop
lods
xor
sbb
shlb
cwtl
aaa
xor
mov
mov
outsl
pop
push
push
push
js
out
pop
rolb
cmp
pop
push
lds
cmp
out
jb
sbbb
push
jnp
inc
rcl
inc
popa
sub
leave
arpl
add
mov
xor
cli
jle
add
test
pusha
jp
cmp
rcrb
shr
jnp
sbb
aaa
and
loopne
pusha
les
out
sbb
add
xchg
ljmp
sbb
and
fcoms
cmpsl
pop
inc
mov
mov
xchg
push
mov
popf
call
data16
mov
push
repz
orb
aas
mov
and
jl
sbb
mov
xor
mov
inc
sbb
cmp
cld
mov
adc
orb
movsb
cmp
ds
test
lds
adc
pop
inc
fisubrs
enter
adcb
cmpsb
lcall
jge
add
orb
pop
mov
fadds
lds
cltd
xor
or
and
add
cmp
sub
mov
xchg
pop
pop
add
mov
jge
inc
sub
jae
add
cld
movsl
inc
add
dec
jbe
in
mov
and
xchg
cmp
cmpb
add
or
lea
and
jnp
xchg
inc
inc
data16
neg
cmpl
pop
lods
loope
mov
push
xor
adc
cmpb
inc
add
pusha
xor
out
inc
andl
cmp
mov
pop
or
and
adc
add
mov
push
jl
test
sbb
ds
daa
inc
and
in
aad
cld
lret
add
xlat
adc
addb
sete
fcmovne
mov
xchg
adc
aas
testl
test
pop
aad
sub
call
push
cli
ljmp
loop
popa
repz
add
jne
in
mov
pop
add
mov
pop
add
ret
cmp
fistl
fisttpll
sbb
movsb
dec
mov
pusha
inc
jo
test
mov
mov
scas
sbb
and
ja
fmul
inc
nop
cwtl
or
or
add
pop
jns
adc
nop
popa
xchg
add
mov
fs
jb
add
push
scas
fstps
mov
rorb
mov
inc
sub
jbe
sbb
loop
je
testb
pop
push
push
dec
push
shlb
lcall
cmpsl
add
adc
addr16
mov
add
cmp
add
dec
aaa
and
insl
inc
jmp
daa
mov
adc
mov
push
adc
rcrb
hlt
das
add
imul
mov
and
gs
add
mov
ret
stos
test
lock
into
cmp
push
dec
cmpsb
fsubs
adc
cmp
lods
scas
adc
dec
ljmp
inc
cs
add
je
hlt
push
pushf
sub
add
mov
jle
jbe
add
push
inc
pusha
call
fisttps
and
xchg
aam
sub
add
jle
sahf
imul
clc
clc
outsb
add
popa
sbb
jns
shlb
sti
pushf
movsb
cmp
std
sbb
ret
nop
inc
js
mov
mov
and
dec
fildll
rorb
mov
js
mov
jae
inc
out
add
lods
hlt
jp
xor
mov
xchg
mov
bound
or
loope
cld
add
hlt
mov
jmp
rep
jae
xchg
or
xchg
add
dec
sbb
icebp
cmpb
adc
into
movsl
test
iret
cld
call
nop
ss
addb
sbb
mov
xchg
or
dec
add
fisubs
mov
outsl
dec
push
mov
jl
out
add
sarl
xchg
cmp
call
push
adc
or
mov
aad
add
cmc
mov
pop
cmpsb
clc
push
dec
data16
in
fbld
jno
lock
dec
lods
xor
fldt
pop
testl
fidivrs
repz
add
add
popa
mov
les
cwtl
add
dec
lea
push
mov
xor
mov
dec
nop
mov
cmc
lahf
inc
dec
adc
or
add
jecxz
mov
jns
jo
cld
xchg
call
sbb
rolb
mov
icebp
and
aaa
add
add
stos
push
adc
mov
add
xchg
or
stc
in
xorb
add
fadds
add
xorb
lock
insl
clc
jo
cmpsb
mov
adc
push
testb
cmp
xchg
mov
pop
test
xor
push
sti
add
test
add
cmp
cmc
xchg
pop
mov
sbb
jmp
mov
adc
mov
pop
xchg
xor
cmp
jbe
scas
dec
testl
mov
adc
adc
xchg
cmp
test
test
insb
xchg
add
mov
cld
xor
out
xor
rorb
negl
xchg
pusha
cmp
sbbl
xchg
jmp
or
push
mov
add
mov
imul
out
sbb
decb
jle
js
pop
mov
sarl
imul
and
jb
sbb
inc
shll
ljmp
std
or
push
stos
pop
repz
popa
call
sbb
fbld
in
jmp
xchg
mov
loopne
add
in
or
add
mov
jp
incl
dec
insl
sbb
cmp
loop
paddsb
pop
sbb
add
stc
roll
ds
mov
xor
fdivrl
addr16
cmp
lods
lret
and
sbb
push
push
sbb
xchg
jg
push
rcrl
fsqrt
lods
add
sub
pop
rolb
or
ficoms
les
xor
mov
pop
cmpb
out
test
or
jb
ror
and
in
cli
pop
sub
lds
jo
and
sbb
add
inc
inc
insb
add
je
cwtl
ficomps
lret
icebp
nop
push
add
push
loope
hlt
bnd
sub
add
mov
cmp
fildl
mov
dec
mov
push
jb
pop
add
movsb
call
iret
in
xchg
cmp
jle
cs
xchg
inc
add
add
gs
popa
fs
cmc
add
xor
ljmp
mov
call
pop
loopne,pn
inc
push
xor
adc
add
sub
les
shl
es
mov
std
or
in
leave
mov
mov
dec
lock
and
popa
add
xor
adc
sbb
jnp
pop
and
mov
xchg
mov
push
cmp
pop
enter
fildll
pusha
pop
mov
outsl
jnp
rorl
sbb
hlt
ret
jge
test
add
mov
movups
add
ss
sahf
mov
push
lret
roll
nop
push
inc
lock
cli
mov
dec
dec
ja
push
xor
mov
insl
ja
add
sbb
inc
stc
jnp
movsb
add
dec
data16
lea
pmulhw
cltd
and
push
bnd
repz
xlat
mov
fcmovne
xor
ja
es
add
pop
fdivrl
pop
sti
paddsb
mov
mov
lods
aam
xchg
mov
mov
rorb
fnstsw
addb
addr16
leave
add
sub
test
lcall
sub
call
push
incl
iret
xor
ficoms
push
add
sub
cmp
adc
dec
mov
pop
jb
add
in
in
ljmp
pusha
lahf
xchg
cli
in
mov
add
jg
pusha
jle
cli
pushf
mov
out
pop
popa
call
test
and
pop
xor
iret
mov
jae
rsqrtps
jo
inc
int3
and
sub
cltd
clc
gs
xor
sti
add
push
cmp
xchg
push
xor
xchg
enter
imul
adc
insl
pop
jo
dec
mov
mov
mov
pop
inc
jbe
les
xor
sub
leave
cld
adc
out
xchg
stos
mov
ljmp
enter
stos
scas
addb
and
mov
inc
dec
test
dec
pop
or
movsb
test
add
and
stc
add
lret
into
mov
add
test
cwtl
and
mov
adc
idiv
cmpsl
xor
xor
sub
jns
push
adc
jne
mov
pop
shll
ja
add
loope
or
and
rcll
and
sahf
add
lcall
pop
pusha
add
add
daa
sub
jge
movl
inc
cmp
enter
mov
pop
mov
cmp
test
add
orl
inc
xchg
cltd
or
inc
push
sbbb
add
pop
pop
gs
shrl
jo
call
inc
inc
sarb
cmp
cmc
jns
dec
cmpsl
sub
push
jne
jnp
add
sub
lea
dec
jo
add
dec
mov
sarb
arpl
add
jmp
add
xchg
adc
add
mov
jl
xor
lock
pushf
or
pop
pop
inc
int3
aam
xor
dec
add
and
bound
mov
fstp
adc
inc
push
push
cmpl
fdiv
cltd
lahf
sub
or
arpl
push
inc
jb
add
sub
jb
pop
or
pop
inc
or
add
or
add
ds
sub
in
js
cmp
xor
and
pop
and
or
add
push
xchg
pop
popa
inc
inc
xchg
add
xchg
stc
sbb
push
xchg
dec
nop
andl
shlb
inc
test
cmp
pop
sti
inc
fsubs
add
sbb
shl
push
pop
aaa
xor
fcmovnb
lret
movsl
mov
dec
mov
adcb
pusha
jmp
clc
mov
add
xor
add
in
pop
add
cmp
daa
add
inc
adc
cmpsb
adc
or
cmc
aaa
flds
mov
nop
mov
sub
sbb
push
aas
cs
fstpt
push
icebp
jne
add
ja
js
mov
fsubrl
xor
add
adc
sub
mul
js
cwtl
cltd
pop
or
jp
lock
mov
movsl
fwait
add
es
inc
pop
add
mov
fisubl
sbb
lods
cmpsb
loop
pop
pushf
test
cli
add
pop
mov
mov
andl
mov
sub
insb
add
addr16
arpl
mov
and
fimull
inc
mov
push
fcom
jmp
loop
repz
js
sbb
mov
imul
xchg
xchg
lock
insl
add
adc
inc
mov
test
push
ret
mov
testl
cli
sbb
and
mov
jno
in
lods
pop
xor
add
adc
mov
clc
shrb
mov
js
add
cltd
dec
in
and
es
adc
add
mov
add
xchg
dec
js
mov
aam
sub
sbb
pop
notl
daa
aad
ljmp
fs
pop
xchg
sti
stos
inc
add
cmp
ret
cld
and
or
aaa
cmc
jp
cmp
jnp
xchg
fildl
sbb
int3
add
jp
into
push
push
cmp
das
add
mov
aaa
xor
and
push
mov
adc
cmpsb
cmc
lahf
cltd
sti
rcrb
jne
or
movsb
aaa
test
and
jp
pop
aam
loopne
lret
push
sub
inc
int
cmp
dec
rcrb
and
leave
pop
mov
mov
push
add
gs
adc
mov
fcomip
jecxz
sub
orl
ljmp
int
cmpsb
popf
cmp
push
popf
les
adc
testb
dec
aaa
ficomps
int
jae
xor
mov
ja
xchg
out
sbb
insb
add
add
add
out
cmpsl
dec
xchg
lret
pop
lds
test
sub
adc
sub
push
dec
jae,pn
insb
jne
sub
aaa
add
hlt
icebp
in
mov
push
push
inc
sar
mov
jnp
roll
push
mov
repz
xchg
out
imul
popa
push
insl
jne
add
stos
sub
jbe
adc
inc
lret
lock
sbb
in
and
mov
dec
ror
loopne
clc
push
ljmp
dec
pop
add
and
fcoms
adc
inc
idiv
mov
lret
pop
adc
mov
inc
dec
push
adc
lret
dec
sub
pop
jp
add
jnp
jo
iret
mov
push
pusha
rorb
pop
add
or
fmul
mov
movsb
pop
call
inc
push
or
add
pusha
lcall
sbb
add
sbb
sbb
xchg
iretw
cmc
pop
add
or
ss
add
shlb
mov
adc
cmc
mov
cmp
dec
cmp
in
mov
adc
sub
mov
mov
cmpl
add
sahf
mov
cld
out
nop
test
jecxz
insb
sbb
mov
inc
xchg
fwait
js
adc
test
pop
mov
xor
out
out
test
fwait
repnz
popa
les
aas
mov
lds
ret
push
stos
loope
fiaddl
jle
or
adc
sbbl
fidivrl
or
inc
pop
add
add
lret
or
add
test
stos
jg
loopne
pop
push
push
rcll
mov
lcall
mov
add
in
push
pop
mov
cltd
inc
sbb
sub
cmp
filds
pop
push
rcrl
sub
inc
cmp
repz
jl
add
and
data16
dec
or
lahf
mov
in
fs
ljmp
cmp
dec
inc
int3
or
and
or
jg
add
xor
pusha
leave
push
xor
push
sbb
loope
imul
xchg
or
mov
cs
sbb
push
pop
xlat
aad
adc
aas
fs
shll
or
ss
adc
call
and
or
and
pushf
or
and
push
loopne
iret
pop
jl
or
add
rorl
add
bound
testb
push
add
and
mov
push
aam
mov
dec
pop
xor
movb
das
pop
out
xor
clc
pop
sbb
ja
inc
fcoms
or
aas
push
test
cmp
add
and
xor
mov
test
imul
stos
test
push
arpl
add
bound
nopl
or
mov
js
xchg
cltd
lods
cwtl
mov
push
mov
call
pop
inc
jbe
ret
add
push
pop
mov
cs
sbb
lahf
or
sub
pop
jmp
adc
add
push
push
shr
pop
add
cli
push
js
adc
add
fcompl
xchg
or
movsb
in
fcmovu
shlb
out
or
jno
fiaddl
cmp
rcrl
xchg
stos
clc
xchg
popa
or
mov
add
pusha
add
inc
cmp
add
addb
mov
lret
mov
add
out
pushf
pop
push
fwait
sbb
jns
shl
and
cmpsl
hlt
pop
rcll
adc
push
mov
pop
int3
aam
ja
scas
cmp
leave
dec
mov
adc
nop
or
loope
inc
jae
cwtl
sbbb
and
mov
or
das
xchg
int3
les
inc
inc
or
sti
sub
dec
bound
pop
add
imul
push
aas
sbb
xor
ror
icebp
mov
mov
xchg
sbb
sub
in
pusha
xor
pop
add
aaa
cltd
ror
hlt
add
pop
arpl
inc
push
push
je
test
dec
imul
xchg
pushf
dec
je
fs
mov
sbb
sub
mov
add
push
add
outsb
pushf
jl
sbbb
es
rcrb
push
mov
add
ret
or
stc
jns
add
push
and
sub
imul
xchg
inc
insb
jp
data16
in
es
mov
pop
pop
jo
push
hlt
les
call
mov
test
and
or
sub
push
cs
sbb
mov
rcrb
sbbb
mov
and
dec
jo
cmc
pusha
cmp
add
and
jl
push
imul
push
dec
in
jo
pop
and
mov
adcl
notl
jle
mov
cltd
into
xor
mov
lods
incl
inc
mov
es
ret
dec
pcmpeqb
jge
fcompl
push
pop
leave
dec
mov
xor
in
add
mulb
cld
sbb
mov
sub
sbb
rclb
and
jle
pop
lret
adc
push
inc
pop
mov
in
mov
xchg
int3
mov
xor
push
xchg
pop
insl
sbb
inc
sbb
jne
int
in
decb
ds
cmovae
adc
pop
mov
add
ljmp
mov
or
push
lahf
add
pop
push
ret
stc
add
orl
xchg
adc
clc
inc
sbb
and
mov
push
inc
dec
xor
mov
sub
push
dec
and
push
mov
mov
js
loop
in
sbb
or
fstl
or
les
ret
daa
pop
mov
jo
xor
outsb
push
pop
movsl
add
push
mov
push
pop
ja
or
in
or
add
cmp
or
pop
or
loopne
cmc
mov
in
mov
push
imul
dec
xchg
jnp
cmp
mov
jecxz
sbb
adc
sbb
les
in
mov
cmp
daa
out
mov
add
jge
adc
adc
repnz
ficompl
movsb
xor
les
fstl
fs
or
pop
and
addb
cltd
xor
add
jg
adc
push
sub
mov
sbb
cmp
jo
adc
push
subl
xor
mov
lahf
bound
arpl
pusha
mov
movsl
mov
adc
js
add
add
cwtl
adc
aas
xor
jle
loop,pn
cld
add
adc
pop
cmp
scas
and
cmc
lcall
mov
das
int3
mov
pop
ljmp
and
lahf
pop
cs
add
aam
ljmp
out
loop
fs
inc
sbb
push
stc
dec
and
add
add
cmpsb
adc
or
lods
and
sbb
mov
dec
mov
dec
cmp
mov
out
add
add
or
ds
push
fidivrl
shlb
mov
pop
rolb
cmp
ret
xchg
cmp
cmpb
lock
push
push
pop
or
and
stc
jbe
add
dec
sub
inc
xchg
add
mov
icebp
xchg
mov
jo
or
call
enter
in
mov
pop
inc
shlb
sub
in
sbb
mov
cmpsb
test
rdmsr
cltd
xor
add
out
shrb
stc
and
xor
adc
mov
or
out
addr16
js
add
mov
enter
mov
rcr
sub
in
xchg
pop
push
push
and
mov
call
sbb
outsb
mov
mov
scas
cli
ret
mov
add
sbb
int
mov
lcall
enter
loopne
icebp
pop
or
mov
stos
push
add
movsl
add
addr16
lret
inc
mov
sub
mov
or
pusha
sub
inc
pop
sub
pop
xchg
xor
cld
sub
mov
imul
insb
sbb
sbb
cs
orb
sub
add
ror
mov
movb
add
mov
and
sub
inc
mov
mov
add
or
rorl
mov
mov
cs
xor
cmp
mov
add
jae
and
mov
xor
pop
insb
out
push
adc
mov
fmull
leave
add
push
movsb
adcb
std
sbb
add
jecxz
es
shll
mov
lods
adc
or
fldenv
and
add
push
inc
and
cltd
leave
mov
cld
jo
sub
jbe
adc
dec
add
dec
shlb
add
addl
insb
xchg
jl
loopne
in
shlb
push
jecxz
mov
and
ret
adc
and
popf
sbb
lods
clc
mov
mov
add
mov
fadd
js
jp
and
mov
popf
ficomps
add
push
bound
xchg
sbb
or
push
xor
nop
xchg
sub
out
test
sahf
sub
mov
add
jecxz
mov
leave
faddl
scas
sarb
xchg
xor
push
add
dec
call
adc
out
sbb
and
xchg
mov
es
call
xlat
sbb
push
jp
push
mov
cmp
cvtps2pi
xor
stos
leave
add
push
std
xchg
add
arpl
and
push
jp
loopne
cld
add
out
stos
aas
push
mov
imull
in
repz
popl
mov
jl
clc
sub
xchg
mov
lret
dec
pop
bound
add
or
inc
dec
sbb
sbb
lock
push
rolb
push
mov
xor
mov
pop
fdivrl
add
mov
aaa
sub
adc
inc
mov
xchg
inc
adc
dec
pushf
mov
or
add
loopne
cmpsb
add
jbe
mov
dec
pop
js
add
lods
mov
adc
hlt
dec
add
icebp
or
pop
adc
add
inc
adc
rcll
shll
mov
pop
jae
and
jnp
orb
add
cmpl
xchg
cmc
jo
daa
pop
pop
adcl
sub
es
mov
clc
jb
repz
imul
mov
xchg
movl
push
jmp
sti
add
and
call
push
push
inc
mov
jae
sub
loop
xor
push
push
repz
sahf
aad
insl
push
bnd
add
lods
inc
and
mov
rorl
mov
fcoml
imul
jne
lock
sbb
test
sub
dec
test
add
popf
pop
push
or
ror
xor
std
dec
add
xchg
push
pop
into
aad
pusha
pop
sub
pop
or
or
fwait
ljmp
hlt
in
cmp
test
movsl
xchg
dec
or
and
arpl
enter
testb
shll
jmp
sar
fdivs
int
in
mov
bound
nop
mov
push
je
scas
dec
das
jbe
mov
in
ret
xchg
mov
add
pop
lahf
in
pop
jbe
dec
inc
cmpsb
bound
push
pop
push
sbb
je
pop
mov
mov
xlat
jmp
mov
xchg
popa
push
add
fiadds
push
xor
daa
push
test
leave
mov
mov
clc
add
cld
or
cmc
mov
mov
jle
enter
unpckhps
inc
repnz
cmc
ja
xchg
mov
jl
lods
cltd
jmp
mov
cli
jp
xchg
push
dec
test
sub
jl
push
mov
pop
ret
xchg
test
add
inc
mov
aam
sbb
out
mov
adc
or
imul
cmp
xchg
or
test
outsl
add
scas
notl
add
or
icebp
cli
dec
dec
fst
add
sub
lods
addb
add
out
push
cltd
mov
add
insl
rcl
jno
enter
add
mov
xchg
mov
fbstp
in
loopne
aaa
pusha
cmpsb
pop
dec
int
mov
dec
jmp
jno
xor
lret
xchg
pop
lods
add
aas
xor
and
popf
mov
dec
jl
dec
inc
mov
mov
movsl
push
cmp
ja
lods
imul
test
loopne
stc
repz
lea
cmp
mov
orb
xchg
add
add
or
mov
xchg
in
pop
xchg
pop
pop
outsl
xlat
push
pop
adc
shll
sbbb
add
mov
inc
movsl
cmp
sbb
cwtl
add
imul
pusha
nop
insb
add
in
js
out
imul
pop
loop
jnp
inc
leave
xor
es
add
addb
adc
insb
xor
dec
clc
scas
and
mov
cwtl
out
mov
rcr
jne
inc
add
mov
lahf
nop
fisubrs
out
cmp
push
lock
push
popa
xchg
call
sbb
call
sub
mov
lods
and
xchg
mov
and
clc
xchg
inc
mov
mov
push
cmp
inc
lods
les
jp
cli
clc
xchg
push
add
dec
std
mov
hlt
call
cmpsl
daa
fs
inc
test
insl
sub
fildl
or
mov
add
gs
dec
js
jmp
xchg
adcb
add
push
movsb
cmp
sub
dec
dec
jne
int3
addl
and
dec
jl
inc
push
or
pop
mov
fmull
xchg
loop
mov
out
and
ret
ds
js
aam
mov
sub
mov
aas
incb
test
inc
cs
pop
xor
adc
or
into
mov
inc
pusha
cwtl
int
add
loop
jle
xor
daa
cmp
dec
dec
ret
sub
or
xlat
xor
aad
adc
push
ret
add
add
dec
gs
loop
add
mov
push
out
sub
jnp
pop
sbb
mov
and
scas
into
xor
addr16
aad
push
mov
lds
push
add
jle
cmp
mov
lods
inc
lds
test
lret
dec
sub
out
cmp
shlb
or
dec
xchg
add
mov
push
or
mov
sub
jns
movsl
icebp
mov
add
sarb
cmpsb
add
lret
sbb
cli
js
stos
cmc
cmp
lcall
arpl
pop
mov
xor
cmovb
mov
insl
movsl
adc
dec
inc
cmp
rclb
jp
movsb
sbb
jmp
inc
fwait
cmp
or
fstps
add
dec
imull
and
or
int3
cltd
xchg
sbb
in
add
add
mov
stos
int3
leave
gs
dec
jecxz
pop
fimuls
fdivrl
cmc
dec
mov
add
sub
add
clc
add
notb
ljmp
fadd
dec
push
push
xchg
push
add
insl
cwtl
cltd
out
rcrl
jo
add
dec
add
or
in
pop
idivb
pop
loop
inc
lds
pop
add
xchg
dec
test
add
nop
lret
xlat
hlt
cmp
imul
aam
inc
mov
std
mov
push
xchg
sahf
jae
pusha
dec
lods
test
outsl
add
out
xchg
pop
xchg
mov
add
imul
inc
aaa
mov
add
mov
cmp
xchg
sbb
int3
sub
loope
setno
xchg
inc
lahf
inc
arpl
mov
ja
movsl
rolb
add
nop
negb
sarl
add
add
mov
add
adc
mov
or
or
add
loop
stos
pand
pushf
jmp
pop
add
xchg
hlt
int
mov
dec
dec
pop
adc
test
push
je
add
test
sbb
ds
dec
jle
test
push
push
ja
xchg
roll
sets
mov
xchg
loopne
and
mov
andl
mov
jge
fcoml
mov
cltd
out
add
addl
inc
jns
adc
clc
sbb
hlt
pop
int3
popf
inc
aam
negl
xor
push
cmp
cmpsb
add
fiadds
int
pusha
mov
fcomp
movsb
fadds
mov
fsubl
sahf
mov
enter
daa
ror
xchg
or
orb
cwtl
icebp
push
push
ss
jle
mov
inc
mov
jbe
jnp
sub
aam
mov
shrb
and
xchg
movsl
outsl
in
mov
mov
loop
faddl
cwtl
xchg
jmp
add
jbe
pop
sbb
inc
adc
mov
je
pop
add
xor
jg
cmc
or
sbb
iret
pusha
mov
jle
dec
mov
test
into
loopne
mov
sti
mov
movsl
cltd
add
jp
aad
repz
xchg
out
dec
rol
jbe
xchg
mov
inc
test
loope
sub
cs
out
push
clc
cmp
add
xchg
shll
lock
test
dec
push
xchg
cmpsb
pop
or
lods
in
lahf
or
cmc
jns
pop
xchg
pop
push
ljmp
enter
lock
mov
test
test
or
test
mov
enter
fdivrl
push
xlat
pop
xlat
adc
push
and
jecxz
xor
add
ss
or
es
pop
pusha
cmp
jns
xor
adcb
call
add
push
jno
lret
imul
lods
or
mov
shlb
in
cmp
sbbb
and
sub
push
adc
inc
adc
adc
push
mov
shrb
cmp
dec
testl
cmpsl
cmp
jne
push
add
add
xlat
inc
popl
les
mov
pop
xorl
incb
cmp
cmp
add
mov
add
add
mov
fwait
aaa
push
pop
add
ret
xor
cmpsb
or
mov
and
add
pop
mov
cs
out
lret
sbb
cmpsb
jnp
pop
shlb
arpl
ljmp
rclb
mov
add
hlt
adc
aad
add
out
inc
mov
dec
push
imul
pop
xor
xor
je,pt
adc
adc
sub
cmp
test
adcb
pushf
add
dec
xchg
dec
add
aaa
hlt
sbb
dec
add
cmpsl
movb
call
or
rcl
pop
insl
sbb
add
pop
movsb
push
test
sbb
sub
clc
movsl
cmp
mov
ret
add
or
jb
insb
pusha
insb
push
add
int
cmp
imul
sarb
mov
xchg
in
shlb
ss
add
loop
push
lea
ficoms
cmp
fsts
sub
int3
sbb
dec
inc
pusha
sub
dec
scas
test
add
mov
sub
add
pop
in
js
fnstenv
add
mov
test
push
xor
and
jecxz
or
mov
inc
mov
out
add
pusha
scas
push
int3
mov
add
sbb
rorl
add
push
jns
fcmovbe
push
sbb
xor
imul
mov
adc
cmp
dec
sub
jae
andb
cmp
inc
and
addr16
xor
jmp
testl
subl
xor
jb
ja
mov
shlb
add
incb
add
pop
jmp
pop
test
out
push
movsl
cwtl
xor
insb
lea
sarb
and
adcb
sub
sbb
shrb
out
gs
push
test
inc
icebp
outsl
popa
cwtl
sub
xor
mov
lea
add
fmul
test
mov
add
mov
add
pusha
sub
jbe
add
mov
shll
add
mov
notl
push
add
enter
pop
cmp
add
sti
loope
nop
mov
mov
or
push
in
xlat
mov
or
xchg
cmp
xchg
popa
lret
push
in
loop
cmp
mov
inc
mov
out
xor
add
aas
push
jge
ss
dec
loop
enter
xor
cmp
imul
call
add
xorb
es
enter
inc
int3
pop
sti
ljmp
add
jmp
and
add
stos
add
jge
mov
add
mov
pop
inc
cmp
or
ljmp
mov
es
out
dec
add
outsb
ret
sahf
adc
xchg
rolb
pop
push
out
out
andb
movb
popa
xor
cld
lock
repz
sub
dec
jae
fsubs
sahf
cmp
add
js
add
repnz
fstpt
bound
jp
xchg
ss
mov
sbb
mov
cmp
mov
inc
pushf
shll
push
inc
xchg
mov
mov
js
adc
icebp
subb
jecxz
and
adc
loope
aam
fldcw
or
pop
fmul
add
pop
lock
int
fcomps
pusha
popf
bound
cmpl
in
loopne
rorl
sbbl
push
push
push
push
popf
mov
mov
call
inc
adc
sub
pop
sar
stc
cs
add
sbb
bound
insl
in
mov
cmpsl
mov
adcb
out
inc
fiadds
pusha
and
mov
pushf
adc
loopne
test
arpl
push
push
xchg
rolb
in
pop
lods
and
inc
or
in
out
mov
pusha
mov
xchg
out
mov
cmp
add
and
cwtl
mov
aam
and
addr16
popf
mov
cmp
test
pop
xor
fdivrl
inc
jb
push
push
adc
out
and
add
mov
btr
inc
clc
mov
pop
mov
cmp
dec
stos
jle
mov
cmpsb
xchg
jb
in
xor
icebp
cmpb
xchg
jns
xchg
mov
jnp
scas
cmp
jnp
push
or
add
jmp
or
mov
sub
cmc
int3
or
rolb
lcall
jo
sub
push
add
mov
pop
xor
imul
daa
sbb
popa
xchg
add
in
hlt
movsb
jo
pop
and
jge,pt
sbbb
add
jmp
cmpsl
repnz
push
push
sbb
add
pop
dec
popa
xchg
mov
and
stc
mov
cmc
add
xor
jl
cmpsl
adc
add
xor
in
call
rolb
pushf
cltd
xchg
les
sbb
mov
test
add
xlat
mov
add
ljmp
mov
dec
add
jmp
pop
jl
pop
sti
je
add
mov
stos
add
push
xchg
add
and
inc
sbb
cmp
lret
fiaddl
nop
imul
leave
aas
add
cmp
or
adcb
bound
sub
popa
cld
ret
out
and
shlb
shr
push
imul
filds
mov
sbb
xor
mov
or
outsb
loope
nop
sub
mov
arpl
mov
inc
add
or
mov
std
lock
mov
jg
mov
inc
inc
je
cmp
mov
xchg
aas
test
subb
jmp
cmpsl
inc
call
add
outsb
ljmp
sarl
mulb
jno
js
in
sbb
dec
mov
loop
dec
ss
inc
push
xlat
add
pop
lahf
cmpsb
push
shll
push
clc
lret
add
arpl
scas
pop
inc
bound
jo
pushf
test
clc
dec
sti
pusha
adc
add
icebp
adc
stos
aad
jmp
mulb
inc
pop
pshufw
ret
push
pop
pop
mov
xor
jmp
jge
fstpl
cvtpi2ps
jb
rcl
xor
pop
in
cwtl
add
sbb
add
lock
ja
aad
hlt
lods
mov
sarb
cmp
push
mov
out
mov
jmp
lds
gs
inc
add
lahf
cmp
out
adc
call
sub
add
dec
pop
xor
cmpsb
lret
pop
loopne
cmp
loopne
fucomi
mov
js
andb
inc
insb
xchg
jnp
loopne
clc
aad
jg
pusha
shr
dec
push
cmp
clc
add
mov
inc
xchg
mov
add
push
cmp
add
push
xlat
adc
sub
push
dec
cltd
dec
push
mov
fsts
out
stos
lea
mov
mov
and
ds
sbb
fs
in
lods
sub
xchg
add
nop
pop
sub
add
mov
xor
mov
fcompl
aas
lcall
mov
lock
add
inc
add
add
stos
rep
push
out
icebp
push
clc
cwtl
pop
jp
test
daa
mov
ficoms
add
xchg
xor
add
jnp
sbb
jno
cmp
das
add
mov
leave
shll
imul
outsb
pusha
shrl
fs
cmpsb
flds
leave
pop
add
pusha
xor
pop
mov
jl
repz
mov
push
add
call
mov
cld
pop
or
add
inc
lret
push
cmp
mov
dec
mov
into
std
or
push
dec
push
sub
dec
xchg
add
aaa
inc
sahf
cmp
mov
adc
jmp
push
stos
cmpsb
add
jns
add
jne
push
sub
xchg
pop
pop
pusha
mov
pushf
add
pusha
lds
rorl
leave
add
sbb
es
int3
push
pop
shll
lret
std
orl
pop
popa
mov
add
jmp
cmp
cs
les
andl
lahf
popf
add
in
bound
adc
push
pop
and
movsb
mov
jo
push
push
and
dec
lods
enter
sub
pop
out
mov
add
push
andl
mov
jge
outsl
add
hlt
daa
lds
adc
pop
adc
inc
nop
mov
sbb
rclb
add
sub
push
add
hlt
loop
sbb
lret
push
cmpsl
sub
pop
pop
jge
sbb
xchg
xchg
movsb
jae
add
mov
and
loopne
add
push
adc
out
sahf
fcoms
add
jge
mov
cwtl
sti
add
lods
mov
hlt
push
add
mov
cmp
or
jg
psubusb
push
inc
bnd
push
dec
loop
and
in
pop
movsl
lds
add
insl
mov
movsb
aad
andb
push
and
dec
daa
pop
dec
sbb
mov
movl
push
stos
negb
adc
sarl
aaa
cmp
in
into
fcmovnbe
push
shl
pop
add
mov
mov
pop
pop
loopne
mov
cmp
loop
pusha
add
cli
aas
pushf
jb
arpl
mov
pop
xor
adc
inc
add
dec
add
clc
stos
inc
push
dec
inc
dec
loopne
out
enter
mov
inc
ss
rcll
mov
out
mov
push
testb
jb
add
or
inc
mov
sub
enter
pop
cmpsl
cmp
xchg
or
jecxz
enter
cmpl
pusha
xor
ret
or
test
push
jnp
inc
sbbl
jg
push
fs
leave
xchg
xor
outsl
or
add
mov
jo
push
add
add
jecxz
loop
dec
and
add
xchg
scas
add
out
inc
adc
xor
movsl
pop
add
in
jno
out
fildl
sbbb
sbb
dec
das
test
push
sbb
cwtl
aad
adc
push
pop
pop
in
add
gs
in
fildl
xor
jbe
shlb
jmp
insb
ljmp
call
popa
inc
arpl
popf
xchg
jle
adc
adc
in
push
fstpl
add
cmp
ret
lods
add
jnp
mov
daa
add
stos
bound
jae
icebp
inc
mulb
mov
xchg
add
dec
fstpt
sub
orb
add
jecxz
push
add
cmp
pop
inc
xchg
mov
pusha
es
repnz
mov
adc
lahf
nop
cmp
fwait
ss
jge
pop
fdiv
stc
add
shlb
popa
outsl
ja
gs
pusha
clc
add
test
lret
leave
adc
inc
bound
addb
jb
int3
loopne
inc
jecxz
xchg
orb
inc
add
fmull
cld
inc
cmp
add
call
push
sub
sbb
pusha
jns
push
cmpsb
pop
push
pop
lret
adc
push
lods
add
popf
clc
cltd
or
add
add
testl
add
mov
or
push
lock
add
and
jle
inc
std
mov
push
pop
push
adcb
lds
cmp
or
shrb
xlat
cmp
or
aam
out
sub
ret
fwait
mov
cmpsl
mov
into
inc
jb
mov
mov
inc
out
in
mov
jmp
mov
xchg
and
adc
scas
lods
iret
insb
jns
push
pusha
orb
fisttpl
add
in
xor
imul
mov
add
mov
mov
leave
lahf
mov
xchg
mov
add
je
sbb
xchg
cmp
mov
cmp
inc
or
xor
adc
sbb
icebp
mov
pop
nop
clc
add
ja
push
stc
out
mov
movsb
add
fisubl
inc
push
jne
cwtl
add
fldl2e
aaa
icebp
lods
lock
or
inc
lds
xchg
and
inc
insb
das
pop
sbb
scas
jbe
add
sub
mov
add
pop
mov
and
clc
and
mov
insl
pop
mov
add
xor
int3
movsl
jo
sbb
shll
sarb
pop
adc
or
rcll
pop
inc
and
and
xchg
dec
imull
ret
inc
lds
pusha
pop
out
ficoml
test
movsb
lret
repnz
mov
add
ds
add
outsb
jl
std
fnstenv
xchg
sbb
jle
std
subb
das
mov
fildll
xchg
stc
cmpb
sbb
and
add
es
pop
repz
pop
aad
aaa
inc
aam
xchg
out
pop
push
add
shlb
and
add
inc
push
inc
int
cmc
jno
inc
out
adc
xchg
add
fsubr
push
add
mov
clc
icebp
dec
fstp
adc
jo
scas
push
in
mov
add
sarl
nop
stos
sub
movsl
aas
push
icebp
mov
jmp
xorb
adc
shr
lcall
sbb
subb
dec
add
sbb
adc
sbb
xor
add
inc
xchg
mov
cltd
subb
pop
loope
inc
scas
sbb
fucomp
xchg
sub
mov
push
cltd
pushf
adc
jne
and
aaa
loop
add
fidivrs
dec
insl
iret
enter
repnz
cld
les
lods
mov
push
sti
les
inc
es
cmp
sbb
mov
rol
lret
pop
add
test
mov
movsl
pop
add
inc
adc
mov
out
add
lahf
mov
pop
and
xchg
outsb
xor
sub
xchg
das
pop
add
cmpsb
ret
add
pop
xor
int
add
hlt
inc
jg
movsb
push
or
test
aaa
dec
add
add
pop
mov
sub
inc
xlat
pop
push
test
imul
out
div
cli
popa
inc
in
daa
cmp
subb
adc
inc
dec
aad
mov
outsl
and
mov
cmp
fisttpl
mov
pop
aas
jle
add
pop
xchg
addb
adcl
push
nop
addr16
fstps
test
in
roll
nop
insl
sbb
stos
inc
adc
nop
add
addr16
cmp
push
add
push
sub
outsl
push
adc
add
xchg
sub
push
xor
xchg
cmc
xor
cmp
jns
imul
mov
orb
add
shlb
sbb
fstpt
sub
cmp
arpl
bound
push
gs
mov
lock
or
fiadds
add
fsubl
push
int
xor
pop
rcrl
add
icebp
fs
inc
call
popf
xor
ficomps
push
add
mov
mov
inc
jl
pop
leave
inc
add
pop
dec
loop
cmp
cs
push
xchg
xorps
ret
sahf
add
adcb
testb
sub
add
xor
loop
adc
leave
jne
sarb
ljmp
mov
jo
jge
pop
pushf
jg
inc
loopne
in
mov
pusha
ljmp
xchg
mov
add
loopne
push
add
add
js
add
insb
and
pushf
pop
mov
fwait
movsl
add
into
jle
lods
jmp
mov
jo
test
adc
mov
mov
outsb
add
in
push
push
mov
cmpsb
xor
subl
shr
pop
cli
cmp
dec
scas
roll
in
loop
insb
mov
add
ds
das
mov
mov
dec
out
dec
into
push
addr16
add
add
test
push
add
pop
xor
or
add
mov
loope
or
push
pushf
or
popa
cmpb
lahf
je
add
out
push
jo
adc
imul
pop
xlat
into
ljmp
add
xchg
jmp
xlat
dec
stos
add
xchg
clc
imul
dec
sahf
add
sub
dec
xor
shlb
faddp
push
add
outsb
push
fadds
jge
xchg
test
sbb
push
les
cs
push
add
push
add
and
fwait
add
dec
rol
dec
enter
mov
mov
or
int
test
pop
pop
loop
inc
push
bound
mov
adc
iret
add
cmp
mov
lds
adc
pusha
inc
call
add
add
dec
add
cwtl
jmp
pop
add
xchg
dec
fdivr
cmpsb
mov
adc
or
and
mov
mov
add
int3
pop
jbe
fldcw
testb
std
iret
cmp
inc
call
je
sub
sub
fistpl
jl
xchg
fisubs
sbb
cmp
sarb
data16
int
or
xor
mov
jl
popf
sahf
pop
nop
dec
jnp
jge
sbb
add
cmp
mov
aam
and
add
bound
lods
xor
add
push
sub
or
push
cmpl
jne
lods
lret
jnp
sahf
lcall
cs
mov
mov
mov
sub
cwtl
sub
mov
ljmp
add
mov
cmp
outsl
and
sbb
hlt
and
pop
sar
mov
xchg
in
int
mov
push
sahf
insb
test
inc
cmpsl
outsl
leave
pop
pushl
add
fimull
daa
jnp
mov
mov
mov
sub
sti
rcr
out
mov
sub
or
dec
add
push
push
push
inc
mov
add
enter
cmp
lock
cmp
xorb
outsl
movsl
cltd
and
sbb
adc
xor
test
fcoms
or
and
push
out
mov
lock
pusha
xor
fstpt
into
jae
push
js
or
jmp
fdivr
rolb
fcoms
xchg
inc
push
mov
sbb
fidivs
push
adc
sbb
cmp
add
fmull
stos
mov
jo
loop
pusha
js
ds
pop
mov
pusha
xor
sbb
cwtl
inc
jg
lods
inc
movsb
shlb
fistpll
inc
cmpsl
inc
loopne
iret
add
imull
jns
sbbb
faddl
cmp
rolb
mov
mov
adc
xchg
or
or
lock
cmp
pusha
jecxz
inc
fbstp
cmp
sub
aad
mov
mov
xor
xchg
sbb
xlat
stc
rolb
inc
mov
mov
inc
scas
and
add
out
rorb
xor
jns
sti
scas
test
jno
add
aas
jns
jmp
xor
mov
inc
fsubrs
das
add
pusha
adc
sbb
or
mov
inc
and
test
push
add
push
enter
incb
out
es
or
add
jg
add
dec
adc
and
cmp
test
popf
dec
jne
adc
inc
pop
dec
mov
mov
repnz
pop
or
stc
test
dec
aaa
mov
pop
cmp
hlt
jno
fistpl
adc
ret
pusha
add
std
dec
add
dec
aaa
scas
sbb
mov
loopne
lret
fs
add
jmp
pop
sbb
xor
jl
or
nop
and
pop
sub
dec
js
js
sub
aam
or
cwtl
into
add
jo
pop
add
add
cmpsl
pop
testl
aam
pop
loopne
rorb
add
fiadds
in
stc
pop
jp
add
je
movsl
test
cmp
lds
cmp
mov
loope,pt
es
inc
inc
insb
stc
sbb
adc
and
insl
fs
clc
mov
mov
pop
pop
mov
push
shll
lods
sub
cld
bound
fsubl
push
loopne
rcll
cmpsb
arpl
icebp
pop
out
outsl
add
mov
test
pushf
sbb
sub
cmp
insl
imul
sbb
sbb
scas
mov
jb
sbb
cmp
test
xor
or
mov
push
mov
cmp
inc
cmpsb
jge
pop
adc
movsb
rolb
call
ljmp
in
out
mov
popa
push
sbb
pop
inc
sbb
lcall
lea
xor
mov
lods
jo
mov
das
pushf
in
sub
mov
inc
out
sub
pop
and
into
lods
nop
mov
ss
jbe
idivb
cmp
pop
xor
sar
mov
lahf
sub
add
and
into
xor
shr
out
sub
or
jno
adc
mov
call
in
dec
add
xchg
jns
xor
jnp
in
shlb
popf
ror
mov
adc
adc
pop
add
inc
aaa
pop
dec
jecxz
rorb
add
mov
push
fldt
or
outsb
adc
sub
add
insl
xchg
js
adc
push
mov
aad
and
xor
fsub
test
xchg
and
mov
shrl
fisubs
cmp
xor
sbb
add
jp
push
adc
incl
sub
sub
add
sbb
insb
in
pop
rol
push
popf
jnp
and
jo
mov
stc
shlb
push
mov
add
sar
push
bound
out
add
dec
mov
pushw
cmp
adc
jle
pop
add
cwtl
or
mov
into
mov
loopne
jne
mov
sti
xchg
ret
mov
and
lock
lds
mov
lahf
ss
push
push
xchg
add
loopne
loop
jg
int3
xchg
repnz
data16
push
addr16
xor
mov
std
lret
es
dec
add
popa
dec
rolb
and
mov
sbb
lods
adc
mov
insb
aad
sub
mov
xor
fadds
jo
test
mov
repz
inc
jge
dec
subb
jae
sbb
or
adc
inc
mov
sbb
push
mov
adc
adcb
add
in
xor
dec
sbb
xor
mov
popa
sbb
add
xchg
add
pop
rorb
loope
sbbl
pop
add
ja
lret
add
outsl
flds
lea
inc
jle
cli
push
int
pop
add
pop
inc
rcll
inc
xor
stos
test
lods
inc
cmpsb
pop
ds
into
sub
add
lock
in
adc
sub
dec
fiadds
pop
mov
orb
add
mov
fstpl
mov
shll
sarb
test
pushf
rclb
movl
rolb
sahf
rcrb
jl
xor
xchg
cmpsl
dec
add
pop
cmp
adc
add
cwtl
shl
out
mov
cmp
dec
scas
add
add
loopne
jmp
sarb
jbe
add
jno
mov
ljmp
sub
mov
ret
mov
push
and
lock
mov
mov
xor
loopne
cld
sub
loope
add
add
pushf
inc
movsb
stc
rclb
push
outsb
orb
or
pop
testl
adc
cmp
out
sub
add
xor
push
nop
rclb
dec
scas
add
xor
xor
cmp
and
and
pop
push
pop
loopne
incb
incl
sbb
cmp
xchg
je
adc
add
mov
int
cmpsl
sub
inc
sahf
arpl
jne
faddl
jnp
push
adc
or
lods
mov
or
je
adc
add
movsb
test
xchg
repz
add
arpl
cmp
hlt
push
sub
in
mov
sub
sahf
jp
int3
push
add
outsb
add
leave
mov
adc
ds
adc
mov
mov
cltd
pop
stc
leave
inc
or
cmp
stos
mov
sti
or
adc
repnz
movsb
and
add
mov
f2xm1
dec
add
mov
or
sarl
or
ret
sar
and
cltd
loope
sbb
xchg
push
dec
aaa
mov
iret
dec
imul
fs
sbbb
push
rcll
int3
sub
and
adc
xchg
sub
inc
in
xor
inc
mov
sbb
ds
jnp
push
in
scas
js
mov
js
jmp
pop
pop
cli
sub
sbb
mov
cmp
fimuls
xchg
arpl
sub
pusha
fdivrl
xchg
in
cli
mov
push
sub
mov
add
dec
cld
stc
push
ds
xor
aas
adc
add
fldt
push
fisubl
lcall
cmp
pop
adc
mov
jecxz
inc
jb
shr
lea
add
pop
add
lahf
ret
mov
into
xchg
xchg
and
adc
shrl
add
ja
xor
cmp
out
mov
inc
xchg
push
xor
mov
mov
xorl
sarl
test
and
mov
dec
xor
outsl
adc
int3
sbb
adc
out
fldcw
jb
rorb
cmp
lock
call
cwtl
add
setg
jae
cmpsl
imul
mov
aam
cmp
add
outsl
cld
inc
mov
push
outsb
jle
adc
jecxz
add
imul
jo
and
xchg
fiadds
dec
xchg
jg
xor
test
lea
mov
lods
xchg
loopne
push
adc
arpl
dec
push
iret
lock
into
dec
ficoms
lds
iret
add
adc
add
lock
aaa
cld
pop
or
imul
xor
cmc
add
ret
scas
ljmp
cmp
dec
add
outsb
cmp
xor
mov
scas
dec
movsl
xor
adc
and
inc
les
addr16
xchg
push
idivl
and
jp
int
js
not
or
mov
out
int
add
push
add
orb
inc
add
and
inc
dec
cmp
and
shll
mov
sarl
pop
into
dec
xor
lahf
lret
jns
xchg
adc
out
sub
scas
add
sbb
outsl
sub
jb
es
pushf
nop
das
add
push
js
adc
push
or
pop
loop
xchg
cmp
adc
cs
inc
sbb
fdivp
jmp
rolb
add
imul
out
pop
adc
mov
or
in
loop
mov
out
mov
dec
and
inc
dec
mov
movsl
stc
aas
adc
mov
cmp
xor
inc
clc
test
popa
and
mov
aas
and
pop
sahf
lcall
xor
xchg
mov
std
aas
sbb
cmp
jg
push
test
nop
sarb
mov
stos
mov
sub
daa
test
fcmovne
inc
lods
adc
add
lds
cmp
nop
xchg
and
jno
pop
loope
adc
sbb
inc
jno
mov
loopne
push
sub
pop
xchg
in
or
mov
in
add
enter
cmpsb
jb
lock
jo
or
mov
lods
sub
xchg
dec
arpl
add
jbe
test
loope
je
loope
mov
inc
or
in
push
aad
adc
cmpsl
add
mov
cmp
scas
popf
icebp
add
loopne
shlb
pop
roll
movsl
add
ss
loopne
push
test
add
pop
mov
es
bound
jle
xchg
cmp
rorl
shrb
cmp
or
clc
test
mov
xchg
dec
sbb
fidivrs
das
sbb
jp
mov
aam
add
adc
cmp
nop
mov
loopne
es
incb
outsb
insb
mov
mov
into
pop
stos
pusha
sahf
leave
sub
mov
pop
adcb
add
fiadds
les
jmp
pop
icebp
cmp
inc
dec
inc
jnp
xlat
shlb
cwtl
xchg
outsb
stos
push
cmp
add
mov
add
in
add
xor
out
popa
add
lods
call
out
push
aam
insb
lock
pop
jecxz
adc
push
sbb
mov
adc
pop
inc
push
push
add
aam
hlt
add
jns
sub
add
in
push
out
mov
add
jae
add
jge
stos
call
push
mov
sub
into
stos
mov
inc
or
mov
sbb
dec
dec
adc
clc
dec
sub
sbbb
lods
prefetcht0
cmp
mov
adc
es
sub
dec
mov
pop
sbb
ss
pushf
test
loopne
loop
or
jl
xor
outsb
lods
out
push
lock
mov
ret
push
loop
rorl
out
xor
mov
mov
cmpsl
lahf
add
insl
stos
xlat
pop
inc
jle
pusha
sub
repnz
add
sub
incb
pop
mov
dec
scas
mov
mov
sbb
and
push
jle
mov
push
dec
add
xlat
pop
xor
outsb
inc
mov
dec
hlt
adc
and
inc
adc
add
xor
jno
data16
ret
out
mov
jg
pop
sbb
add
and
daa
cmp
and
movsl
add
enter
pop
out
add
lods
sbb
mov
inc
lock
mov
xor
and
sub
data16
xchg
mov
xor
lret
jle
cltd
faddl
adc
add
sbb
stc
push
sub
mov
push
jmp
repnz
arpl
addb
enter
mov
cmp
int3
dec
add
loopne
sbbb
mov
pop
mov
or
xorl
xlat
in
mov
hlt
inc
jns
ds
or
sbb
sub
bound
mov
mov
fsubrp
add
stos
loope
scas
and
cmpsb
fwait
pop
pop
jmp
adc
loopne
subl
in
mov
sbb
adc
jb
add
cmpsb
pop
call
and
inc
mov
test
popa
addr16
dec
fmuls
xor
xlat
sbb
and
movsb
jne
add
pop
call
jecxz
mov
dec
fdivrl
and
gs
sarl
bound
jg
arpl
push
mov
cmpl
jg
and
or
call
mov
lods
mov
or
adc
sbb
dec
nop
enter
pop
jae
xor
cltd
sub
sub
pushf
stos
sbb
dec
int3
int
and
testl
sub
sbb
add
rolb
cmp
aas
and
mov
jo
fsubrl
add
enter
cld
xor
inc
and
sbb
mov
sti
push
mov
mov
dec
test
and
popa
xor
cmp
mov
and
or
or
cmp
push
add
rclb
mov
cli
clc
xor
orl
testl
daa
stos
pop
faddl
dec
push
movl
inc
mov
or
mov
add
out
roll
loope
xor
push
inc
sub
add
lret
xlat
sub
rolb
int
mov
pop
hlt
add
lahf
ret
femms
jmp
pop
inc
mov
mov
or
add
cmp
add
insb
dec
push
or
decl
test
push
nop
add
xor
enter
out
inc
add
scas
std
sbb
jecxz
mulb
pop
fdivrs
sti
mov
add
stc
push
fnsetpm(287
mov
add
sub
mov
adc
mov
xor
push
pop
rcrb
or
and
push
xor
mov
xchg
loope
cmpb
sub
xchg
inc
push
push
dec
sbb
jnp
flds
pop
cmp
jle
fs
add
xchg
dec
dec
add
sahf
mov
push
xor
int3
dec
cmp
loop
clc
mov
jbe
push
sbb
cmp
dec
push
in
cmp
sbb
repz
jp
dec
imul
insw
pop
push
int3
xor
or
and
inc
cmp
leave
js
out
add
mov
jmp
cli
hlt
jno
mov
adc
mov
js
mov
xchg
out
mov
in
or
ja
js
enter
pushf
shl
mov
xchg
cmp
lods
in
inc
jae
push
xchg
lock
shr
sbb
dec
addr16
std
loope
push
cmp
loopne
ljmp
imulb
mov
dec
inc
xlat
add
ja
clc
add
fimull
cmp
jle
adc
inc
adc
lods
fsubrs
and
add
mov
cltd
cmpsl
pop
sub
mov
gs
adcl
loop
pop
push
and
inc
adc
mov
sbb
fld
movsb
clc
lret
add
fcomps
into
ds
ds
adc
adc
mov
popl
test
inc
imul
outsb
stos
xchg
mov
pop
cs
push
fs
xchg
xchg
sub
sbb
jmp
fdivrs
pop
repz
add
daa
sub
inc
sbb
add
loopne
push
xor
lea
xor
insl
inc
pop
push
pop
in
push
lock
test
add
add
loop
cs
in
mov
mov
sarb
sub
cmpsl
or
mov
loopne
add
test
mov
push
rolb
rorb
aam
and
insl
rolb
addr16
xor
xorb
push
pusha
mov
jo
or
mov
das
mov
scas
fsubrs
jo
lock
aam
roll
pop
sbb
in
pop
imul
xor
add
pop
cmp
std
popa
cmp
xchg
push
jae
add
insl
fldl
cmp
sub
pop
xlat
add
ficompl
pop
das
adc
movsb
stos
jae
shr
test
and
out
imul
std
dec
fcomps
cmp
lds
and
shrb
mov
jae
sub
inc
cmp
mov
movsb
mov
pusha
std
aam
cmp
dec
and
addb
mov
fs
mov
xor
addb
ja
mov
cmp
pusha
cld
push
mull
bound
cwtl
int3
cmp
cmp
mov
stos
shrd
loopne
and
lret
dec
cltd
xchg
push
pop
faddp
inc
pop
movsb
jp
insb
sbb
aam
dec
gs
push
add
imul
pop
stos
bound
sub
insb
mov
mov
outsb
loopne
add
adc
lcall
cmpsb
pop
sub
mov
clc
jo
and
xlat
xor
jle
mov
call
push
and
lea
imul
xchg
mov
shll
stos
xor
inc
dec
sbb
outsb
push
cmp
push
ds
adc
popf
icebp
rcr
aas
loopne
xor
or
hlt
sbb
mov
fs
bound
aam
cwtl
inc
pop
sub
xchg
sbb
add
pop
xchg
out
add
and
je
jp
ret
mov
or
dec
add
mov
pop
and
cmpsl
sahf
into
lock
xchg
divb
mov
add
in
dec
xchg
ds
and
lds
mov
test
push
sbb
cwtl
shrl
scas
cmpsl
cmc
and
ja
sub
fisttpll
jo
xchg
adc
push
and
cmp
dec
lea
dec
mov
sbb
sub
test
push
je
dec
lret
rcll
adc
inc
loopne
cld
mov
adc
out
mov
andb
add
xor
mov
jo
imul
sub
push
loopne
cltd
dec
cltd
fcompl
mov
pop
add
cmc
lds
and
test
in
jo
jno
enter
addr16
add
into
nop
mov
shlb
push
clc
push
loopne
add
fcompl
push
add
pop
add
cmp
xor
dec
ficomps
inc
adc
test
sub
xor
push
mov
lret
dec
subb
les
es
cmpsl
pop
cltd
mov
inc
enter
add
test
dec
imul
and
pushf
popa
out
xor
dec
mov
dec
add
adcb
es
mov
ret
shrb
xor
jl
adc
add
lock
jp
jle
sub
int3
sub
aam
mov
aas
icebp
xor
je
add
jmp
add
sub
mov
test
inc
pop
lods
add
fnstsw
add
lock
and
push
sbbb
in
or
mov
lahf
loope
lret
and
inc
jnp
mov
push
jg
inc
lret
jl
push
in
add
xor
jle
or
data16
lahf
int3
test
fcoml
pusha
pop
xor
dec
jecxz
dec
scas
inc
jle
add
int
or
pushf
adc
inc
add
pop
es
cmp
shrb
and
movsb
jmp
add
or
pop
adc
or
inc
inc
jo
jbe
add
adc
jl
inc
pop
ret
sub
mov
add
out
loop
adc
jle
push
inc
adc
lahf
shll
xchg
add
or
hlt
adc
xor
or
add
sbb
inc
std
les
loopne
test
cmp
mov
or
xor
xchg
push
push
add
jmp
imul
insb
xor
lds
aam
mov
cs
cmpsl
cmp
add
loopne
add
mov
rcl
push
aam
xchg
int3
xorl
mov
add
popa
and
push
lcall
or
int3
mov
mov
lds
lods
adc
pushf
shlb
faddl
mov
sahf
or
pop
jmp
fadds
dec
push
cld
mov
enter
adc
into
stos
out
es
or
add
and
shll
movsl
inc
sub
nop
je
adc
faddp
cmp
xchg
lea
lret
push
add
adc
jo
mov
popf
mov
mov
das
inc
in
push
add
in
cmp
cmovg
mov
add
movsl
insb
fwait
mov
testl
mov
loop
in
ljmp
test
dec
add
addb
lock
push
fsubs
sub
push
add
xor
jnp
enter
dec
xchg
mov
andb
pop
add
ret
clc
pusha
rclb
xchg
loop
test
add
int
cmp
test
lds
out
int
add
lods
movsb
adc
add
pop
pusha
adc
add
movsl
sub
adc
add
icebp
fwait
lods
sbb
ljmp
outsl
cmc
mov
mov
lods
sarl
mov
stos
or
add
mov
mov
cs
mov
sub
stos
and
xchg
push
mov
in
call
sub
movsl
cmp
mov
add
leave
jmp
outsl
mov
and
ficoml
xchg
scas
repnz
cmp
pop
dec
jo
pop
shll
movsb
and
cmp
add
mov
cwtl
movb
inc
iret
popa
add
fadd
inc
or
add
xorl
je
cmp
arpl
add
mov
pop
jmp
sbbb
sbb
aas
in
nop
xorb
mov
es
adc
shlb
sbbb
stos
pushf
push
clc
ret
arpl
add
shll
enter
add
data16
mov
pushf
in
inc
lcall
mov
mov
adc
in
js
shlb
or
enter
leave
and
or
adc
loopne
cmp
pop
andb
add
inc
dec
sub
xor
cmp
ss
jb
mov
les
pop
adc
jo
adc
mov
pop
test
add
mov
fs
xor
push
and
pusha
call
adc
cmp
sbb
pop
sub
add
or
aaa
mov
pop
mov
add
xor
mov
push
arpl
enter
addr16
mov
dec
add
jmp
pusha
das
mov
xor
cmp
add
mov
pop
sub
faddl
inc
mov
jo
leave
mov
std
ja
push
pop
adc
ds
or
movsl
in
movsb
or
int3
xchg
push
mov
aas
sbb
adc
fsubl
sub
scas
add
add
add
popf
stos
and
mov
pop
xchg
pop
push
faddp
add
xor
aas
push
sbb
bound
sti
pop
mov
ljmp
jno
subb
push
adc
gs
mov
push
xor
mul
lret
inc
adc
sbb
lods
sub
cli
jmp
inc
les
dec
enter
mov
inc
xor
push
adc
xchg
add
popf
clc
xchg
mov
add
inc
nop
mov
mov
arpl
xchg
enter
rclb
add
rorl
or
outsl
mov
jae
pop
sub
dec
sbb
push
sbb
and
in
cmp
enter
mov
or
push
mov
in
mov
arpl
jno
in
cmp
sub
incl
shll
jb
paddsw
add
repz
iret
and
pop
xor
and
test
call
and
jl
cmpsl
mov
aaa
pop
dec
sub
sbb
aam
subb
arpl
scas
or
daa
orb
lock
pop
xor
shll
popa
nop
enter
in
inc
jge
mov
jmp
or
es
pushf
xor
sbb
sub
inc
sub
pop
push
ss
fisttps
push
xor
inc
add
push
sbb
or
ja
or
push
lcall
sbb
cmp
popa
scas
mov
add
push
xlat
cld
subl
jne
nop
cmpsl
pusha
jl
ds
add
insb
js
adc
je
push
aam
push
push
xor
mov
cltd
clc
add
sbb
jno
adc
insl
dec
enter
in
xchg
jns
enter
inc
mov
in
add
iret
outsl
or
jmp
sbb
jl
subps
adc
stos
pop
or
inc
dec
fcoml
aas
jns
jns
adc
into
mov
mov
push
enter
das
aas
mov
and
push
add
cwtl
mov
mov
add
hlt
es
aas
add
mov
add
repnz
xorb
or
mov
xor
jle
outsl
add
add
cli
in
jo
push
lods
push
sub
jl
stos
clc
inc
mov
rorb
mov
aaa
mov
xchg
lds
pop
mov
jns
add
enter
rolb
iret
rorl
test
gs
add
cmp
arpl
pop
pusha
cld
aaa
and
add
cmp
int
shrb
pusha
adc
add
dec
push
inc
decl
cmp
or
push
cmp
add
je
and
nop
mov
sbb
enter
popf
out
js
inc
lock
xchg
in
cmp
mov
add
jnp
lods
xchg
jae
pop
cmp
int3
add
lahf
shll
stc
inc
mov
jecxz
daa
mov
xor
ljmp
jg
out
sbb
nop
xchg
cltd
add
loope
pop
inc
mov
push
sbb
lock
test
pop
pop
repz
lds
lods
and
scas
clc
lock
cmpsl
in
cwtl
inc
sbb
dec
pusha
repz
jno
sbb
push
and
addb
cli
xchg
push
push
jnp
popl
mov
jne
lods
add
mov
cltd
xchg
mov
mov
sbbl
pop
push
repz
cmp
es
shll
call
add
lock
add
subb
jle,pt
add
inc
sbb
push
call
fimuls
add
ret
dec
divb
jle
inc
out
les
dec
pusha
and
sub
jne
and
jae
or
inc
rolb
inc
inc
fdivl
int
push
push
add
push
cmp
sbb
add
and
dec
addr16
fcoms
sub
sarb
push
add
pop
or
jo
sbb
dec
jns
sub
outsl
or
nop
insl
jb
or
inc
rorl
enter
jmp
mov
mov
andl
mov
mov
sbb
add
or
sbb
dec
and
fnstenv
and
ja
cmp
jo
cmc
fildl
leave
inc
rcr
outsb
movsb
mull
shlb
imul
adc
push
add
mov
mov
enter
xchg
add
rorb
dec
ret
fadd
xchg
and
xchg
shlb
push
jne
add
pop
scas
mov
dec
cmp
loope
push
test
clc
jmp
mov
imul
mov
pushf
or
add
mov
jne
mov
jns
xlat
add
loopne
lods
adc
jg
sub
mov
cmp
push
or
dec
push
test
add
movsl
or
add
jmp
cltd
jne
and
notl
jo
add
stc
push
in
lahf
cmp
inc
pop
dec
pop
rolb
sub
push
add
add
dec
leave
xor
add
into
cmpsb
rcll
jns
add
and
add
inc
pop
push
lock
movsl
mov
inc
and
cmpsl
xchg
cmp
sub
out
xchg
dec
clc
mov
adc
mov
filds
out
and
sahf
outsl
imul
test
jns
sahf
lahf
add
mov
dec
add
xor
fcoml
lods
cld
stos
sbb
dec
lock
add
jnp
js
notl
add
addl
pop
mov
push
and
ljmp
aas
add
and
xchg
add
rcll
pop
add
push
dec
jecxz
lcall
popa
mov
xchg
xchg
rorb
and
enter
ljmp
jmp
shufps
pop
cmpb
push
or
inc
ljmp
cmp
jl
sbb
lods
or
push
test
xchg
arpl
and
cld
mov
push
add
add
imul
sbb
clc
or
gs
pop
fistps
leave
and
fsts
mov
mov
xchg
pop
inc
jl
pushf
dec
data16
testl
xlat
loopne
pusha
mov
add
push
inc
mov
out
dec
imul
pop
push
lcall
dec
mov
rorb
or
mov
jle
jno
inc
ret
shlb
xor
dec
pop
xor
xor
cli
pop
pop
sub
stos
rorb
add
fldenv
sbbb
cmpl
and
mov
nop
add
mov
repz
roll
adc
cmpb
mov
cli
cltd
and
adc
add
add
lahf
ljmp
imul
mov
push
mov
std
lret
xchg
push
mov
mov
fsubr
push
push
cmc
cltd
add
mov
dec
aam
pusha
add
scas
insl
mov
dec
test
mov
cmp
lret
mov
mov
xorb
repnz
push
jmp
xor
xchg
dec
push
rolb
out
xchg
mov
aaa
jne
bnd
inc
call
sbb
lcall
insb
lods
or
dec
aaa
mov
xchg
push
das
cltd
mov
xchg
push
push
adc
dec
sbb
arpl
lods
cli
add
add
or
push
and
sbb
mov
jns
popa
cld
lock
ficompl
adc
add
sahf
cmp
add
ret
jg
and
stos
mov
jno
ret
punpcklwd
add
adc
lret
xor
xor
push
sbb
dec
loopne
jno
or
daa
mov
lock
ss
inc
mov
sbb
aad
sbb
pop
jb
mov
rcl
mov
scas
xchg
sahf
push
or
push
fdivrs
test
stos
mov
and
xchg
pop
pop
jmp
and
dec
jns
daa
add
repnz
push
jno
add
inc
and
xor
sbb
dec
and
push
and
jg
cmc
jecxz
inc
pop
or
and
cmpsb
das
add
mov
and
pop
jl
jp
mov
jae
add
into
sbb
sbb
push
dec
and
sub
pop
addr16
pop
add
mov
mov
shll
mov
add
hlt
or
loopne
mov
gs
addb
or
ja
sbb
push
ret
or
pop
es
rorb
fcmovu
and
data16
push
insl
and
mov
cwtl
test
push
stc
mov
es
sub
add
movsl
push
add
aaa
rorb
sub
jg
fcomps
and
or
sub
hlt
shrd
push
mov
mov
inc
out
test
outsb
bound
mov
sub
push
inc
ss
add
and
jl
xchg
idivl
iret
ds
xchg
mov
pop
cmc
sub
dec
dec
add
clc
sub
sbbb
lret
adc
orb
pusha
add
jmp
test
or
and
ret
test
and
icebp
std
lret
adcb
adc
out
lahf
and
leave
loopne
incl
out
mov
fwait
push
inc
cmp
push
adc
sub
iret
xchg
cmp
mov
js
add
rorl
push
inc
in
sbb
lcall
mov
push
addl
dec
aaa
mov
and
and
xchg
add
sub
sahf
jl
and
mov
mov
push
and
call
sbb
mov
repnz
inc
pop
and
jnp
mov
les
shrb
call
pop
rorb
pusha
aas
mov
mov
jg
in
enter
xchg
lods
ret
cmp
fcmovnu
dec
inc
add
mov
shlb
in
dec
xchg
enter
jb
jmp
xchg
ficoms
cmp
inc
les
pop
pop
push
pop
push
imul
movb
enter
pop
adc
add
jo
fadds
lret
xor
or
push
inc
and
mov
add
push
adcb
jmp
adc
jne
inc
repnz
xor
mov
or
xchg
push
inc
mov
jo
fcomip
pusha
inc
data16
jp
inc
push
mov
in
sbb
pop
jle
jns
rorb
roll
inc
into
cmp
mov
xchg
sbb
xchg
add
fisttps
test
inc
test
add
pop
shrl
cmp
sub
pop
movsb
add
hlt
shrb
add
lcall
adc
and
jo
int3
add
test
mov
push
fs
stos
push
push
pop
and
inc
jno
sub
cmpsl
push
cmpsb
js
push
or
fs
push
add
jo
pop
popa
stos
fistpl
push
adc
dec
xchg
jl
adc
fsubr
ret
mov
loopne
xchg
fsubl
xor
inc
push
or
or
sub
and
add
push
icebp
ficoml
daa
and
mov
lds
jbe
pop
sub
add
rcrl
add
stos
xor
cwtl
popa
aam
int
popf
sub
fcomip
jmp
mov
push
setge
mov
push
sbb
movsb
add
jmp
push
add
mov
into
jge
xor
mov
pusha
xor
add
jbe
cmpsl
sub
lcall
sub
addl
cmovbe
fildll
add
xchg
jb
mov
add
movsb
and
stc
pop
mov
out
and
sub
push
cmp
ljmp
add
cmp
lret
addr16
aam
fsubrs
shlb
inc
repnz
add
sarl
lret
mov
into
dec
aam
or
dec
push
fistpll
cmc
xchg
insb
inc
push
mov
jae
add
push
sbbb
clc
mov
mov
insb
sti
loopne
adc
xor
jb
add
in
mov
add
sub
lcall
int3
fxtract
mov
bound
loop
test
movsb
adc
pop
add
jmp
push
lods
and
aam
data16
ret
pop
clc
nop
add
sbb
loop
imul
inc
add
into
xor
in
sub
xchg
xorb
dec
push
or
xor
shll
ss
dec
or
outsl
out
or
dec
pmuludq
aaa
and
xchg
cwtl
test
aas
lock
push
mov
lcall
xchg
mov
add
mov
dec
fsts
loopne
pop
jecxz
ret
popa
int3
push
xchg
imul
adc
pop
repnz
inc
loopne
sarl
add
sub
aam
scas
sub
lods
add
lret
pop
or
call
fdivrs
sahf
push
push
pusha
in
pop
shl
and
fstl
test
pop
push
cltd
add
dec
scas
mov
or
add
mov
pop
mov
add
add
lcall
xor
and
add
mov
cltd
scas
xchg
or
lods
sbb
and
roll
xchg
pop
fsubrp
js
xchg
jnp
and
add
cmp
mov
or
dec
lods
insb
and
add
inc
enter
leave
dec
jns
hlt
mov
adc
cmpsl
xor
andb
inc
push
jo
add
and
and
pop
hlt
add
enter
add
xchg
inc
pusha
das
mov
jp
mov
sbb
movsb
sbb
sbb
stos
orb
inc
test
dec
add
jge
push
leave
lods
stc
sub
fisubl
loopne
test
pop
rcrb
xchg
jne
jno
insl
add
mov
js
mov
push
mov
push
or
pusha
xchg
mov
add
sub
pop
mov
rcll
jecxz
jo
andb
sub
add
mov
or
out
or
leave
scas
mov
mov
jne
dec
ret
loopne
mov
dec
pop
jo
stos
sbb
gs
mov
adc
sub
add
mov
mov
add
inc
and
cli
les
add
test
sbb
add
pop
popa
jl
fs
xchg
pop
ret
aam
inc
mov
mov
xchg
mov
fcomps
sub
dec
rcrl
sbb
push
pop
sti
xchg
xlat
int3
and
enter
jg
adc
jb
add
pop
sahf
push
addl
and
mov
add
js
stos
add
call
daa
add
and
sbb
jp
js
dec
sbb
dec
push
sbb
out
xchg
sahf
in
pop
js
pushf
fmuls
fwait
sbb
in
or
aad
incb
push
out
mov
or
jo
adc
dec
mov
pop
xorb
sub
fstpl
add
mov
ror
fldt
mov
xchg
xor
pop
movsl
inc
loopne
sub
hlt
or
mov
jmp
add
clc
je
push
jp
and
cltd
adc
shl
jl
pop
scas
and
or
repnz
pop
out
outsl
sbb
jp
orb
add
mov
fdivrs
mov
cmc
push
pop
or
pop
dec
add
mov
arpl
jnp
sub
lcall
add
mov
movsb
cs
inc
cmp
addr16
cmpsl
push
mov
popa
cltd
sbb
lret
and
add
repnz
lahf
and
fstps
in
loopne
ret
add
xor
ss
jp
sarb
or
inc
movsl
js
aas
adc
add
mov
je
pusha
gs
adc
jne
xor
pop
sbb
push
pop
jnp
push
cltd
repz
cmp
pusha
imul
in
pop
push
sahf
hlt
push
insl
inc
in
sub
adc
pop
or
inc
or
ds
pop
sub
xchg
mov
cmp
test
jecxz
and
pop
out
lods
cmp
mov
adcb
add
push
cmc
repz
orb
cmp
pop
add
inc
mov
add
nop
cld
mov
pop
fsubrp
dec
xchg
add
adc
push
dec
cli
jnp
adc
imul
add
push
in
add
test
ret
sar
ja
int
pop
addl
push
add
dec
testb
jae
sub
mov
unpckhps
ss
mov
add
mov
sha256msg2
add
and
or
add
dec
fnstcw
fdiv
push
insb
add
mov
jmp
cld
xchg
add
pop
pushf
push
and
sahf
jecxz
popa
jne
repz
pop
pop
aaa
loopne
add
jns
pusha
mov
leave
push
divb
cmp
xor
xor
mov
rolb
adcb
scas
iret
add
sbb
js
insl
add
out
aas
inc
push
orb
sbb
and
mov
inc
fadds
sub
shlb
and
sarb
pushf
in
add
cmpl
repnz
xor
xor
xchg
cmp
shlb
pushf
mov
add
and
call
jp
rcll
xchg
pop
negb
lahf
xchg
cmpb
jae
add
adc
pop
sbb
hlt
sbb
fimuls
sub
cwtl
add
fsubrs
jle
add
fwait
xchg
dec
ss
mov
or
sbb
out
out
loop
fistl
mov
add
ljmp
mov
and
loope
subb
in
cmpsl
rolb
scas
add
pop
xchg
leave
or
sti
aas
mov
dec
dec
dec
xchg
inc
mov
daa
arpl
adc
push
or
sbb
mov
scas
add
adc
pop
and
mov
dec
hlt
inc
add
cmpl
in
mov
pushf
jp
shlb
dec
pop
mov
push
ljmp
ljmp
loopne
adc
movb
loopne
xchg
cmc
arpl
push
xlat
jnp
sbb
or
xor
jp
shrb
je
mov
add
xchg
cmpb
mov
jl
add
into
stos
pop
cmp
testb
inc
shr
orl
xchg
mov
add
sti
shlb
leave
add
sub
test
or
push
stc
and
nop
xor
out
loopne
cmpsb
scas
loopne
mov
sbb
loop
cmpsl
or
ljmp
push
add
mov
negb
jno
scas
addl
pop
mov
loope
adc
jo
pop
jecxz
in
xchg
inc
add
cmp
push
cmp
cs
call
je
mov
pop
dec
adc
dec
stc
std
inc
inc
popf
inc
mov
ja
bound
pop
inc
inc
insl
daa
sbb
mov
inc
lds
sbb
jo
push
ds
aas
mov
loopne
xchg
stc
xchg
pop
call
fcoms
xchg
push
loopne
push
ds
sub
data16
pop
daa
xor
ss
cmp
lcall
cmp
cli
stos
subb
add
push
sahf
fsubl
jns
push
orl
pushf
add
xchg
add
add
cmp
push
jg
in
add
pop
mov
add
push
push
add
fsubrs
test
or
cmp
cmp
cld
inc
cs
scas
inc
add
pop
fwait
loopne
xchg
push
gs
or
ret
inc
xchg
inc
add
jnp
pusha
add
out
cmp
pop
xor
add
cli
aam
mov
clc
addl
push
mov
sub
mov
push
add
or
sbb
or
mov
mov
mov
push
shl
xchg
adc
out
or
push
stos
jmp
cli
loopne
sub
cltd
sbb
xchg
push
jno
sub
fcmovnbe
cmc
xor
or
call
add
mov
shrb
add
or
xor
mov
scas
xchg
fdivl
rclb
push
mov
pop
das
jle
add
push
icebp
loope
pop
add
mov
dec
xchg
add
jg
or
rcr
in
dec
add
call
and
lret
sub
les
add
imull
mov
ja
and
ret
pop
sahf
dec
mov
sbbb
in
sub
lods
mov
push
mov
push
add
lea
movsl
incb
dec
xchg
dec
mov
ret
int
push
cli
inc
xor
cmp
mov
sub
insl
popf
jns
add
lods
inc
pop
shlb
test
imulb
xchg
add
push
popa
pop
jmp
push
pusha
mov
add
xchg
mov
lahf
icebp
xchg
je
pushf
jmp
scas
push
xlat
mov
pop
repz
jg
sbb
inc
std
mov
pop
or
adc
stos
fstps
inc
fdivrl
outsl
and
out
mov
insb
add
in
xchg
mov
xchg
pop
add
lods
sbb
dec
repz
dec
inc
add
push
mov
mov
push
movsl
test
hlt
loopne
cli
sbb
or
mov
call
fnstsw
shrl
shr
add
lret
or
clc
jo
and
into
fwait
inc
mov
push
xor
inc
cmp
subb
and
pop
scas
test
pop
sarb
mov
icebp
adc
fdivr
imul
in
lods
xchg
jae
pushf
jo
lock
adc
sub
movsb
sbb
syscall
jo
movsl
lahf
jno
mov
in
lock
test
insl
xchg
nop
push
fstpt
xchg
sbb
pop
push
out
inc
push
jl
xor
mov
sub
mov
shrl
das
in
scas
add
dec
fsubr
and
mov
cwtl
adc
bound
pop
mov
mov
adc
bound
shrb
cmp
or
ficompl
inc
sbb
ret
mov
mov
subb
and
ljmp
repz
shlb
pop
adc
or
xor
add
jne
push
subl
push
addb
lods
push
fsubrp
or
sar
lds
adc
cmpb
push
add
fidivl
cltd
pop
hlt
add
lahf
sbb
repnz
jo
clc
roll
mov
jecxz
inc
pop
add
sti
scas
iret
xchg
inc
cmc
or
mov
mov
xor
sub
jl
cmp
push
fcomip
sub
shll
adc
mov
cmp
or
push
mov
in
dec
les
test
lahf
xchg
jns
add
test
push
jb
jno
nop
fmuls
test
add
inc
or
lahf
add
xor
push
jecxz
pusha
mov
jo
mov
aam
loope
test
xor
dec
adc
mov
mov
dec
hlt
or
into
push
adcb
popf
out
sub
dec
xor
sub
imul
imul
jae
cmp
mov
dec
repnz
mov
add
addr16
pushaw
rorl
sbb
or
divl
repz
inc
loop
or
jnp
shrb
loop
xor
out
int3
push
cmp
icebp
inc
xor
mov
inc
inc
les
sub
mov
pop
ret
xor
mov
pop
ds
loope
lcall
pop
cmp
jb
test
es
add
mov
and
push
mov
add
insl
or
pop
push
or
mov
nop
scas
inc
or
mov
fdivl
lret
outsb
sbbl
inc
or
ja
xchg
inc
inc
mov
mov
add
sub
mov
mov
pusha
pushf
push
popf
repz
xor
pushf
mov
shr
and
push
pop
call
mov
out
and
mov
or
pop
pushf
jbe
add
sbb
mov
mov
out
test
push
mov
mov
and
pop
and
movsb
ja
mov
push
pop
inc
push
idivb
or
movsb
ljmp
lcall
push
shll
xor
stc
sbb
clc
testl
mov
xchg
pop
add
mov
bound
outsb
push
and
lcall
push
or
sub
ljmp
hlt
test
cmpsl
adc
fdivrl
add
push
add
add
out
call
push
fcompl
sbb
aas
data16
movl
rorb
or
xor
iret
mov
loop
jne
movsl
jno
add
jg
jp
mov
cmp
cmpsl
pop
adc
add
or
test
ja
cli
fdiv
mov
arpl
mov
add
jne
jno
nop
sbb
mov
js
sub
mov
cmp
cmp
lea
popa
mov
mov
mov
lret
clc
xchg
stos
inc
out
leave
adc
pop
sub
adc
add
or
pusha
xchg
test
aas
add
add
pop
jl
and
fistps
sbb
fisubl
and
pushl
stos
mov
and
in
jl
mov
add
adc
or
ret
add
icebp
stos
sub
fwait
add
enter
push
test
lcall
popa
sub
fs
sbb
dec
jp
mov
sbb
xchg
sub
push
repz
sahf
mov
cli
fs
inc
mov
fadds
jbe
add
push
popf
sar
xchg
or
sti
out
inc
add
rcl
push
pusha
orb
sahf
push
mov
cmc
sbb
mov
inc
pop
fldl
cmpl
and
outsl
clc
dec
fcomps
sub
add
mov
in
hlt
ret
je
cmp
mov
jmp
fcmovnbe
pop
or
or
add
aas
iret
call
xorb
pop
add
mov
pmulhw
test
sbb
mov
orb
pop
lcall
test
add
jg
or
add
xchg
push
lock
push
into
aam
mov
lock
out
sbb
sbb
adc
cmp
pop
fsubrl
scas
icebp
add
popa
clc
add
cmc
fstl
imul
pop
sub
std
sbb
movsb
or
pop
call
test
xchg
jb
mov
bound
mov
cs
xchg
push
add
add
xchg
push
add
fwait
or
nop
sbb
pop
clc
cmp
mov
jp
cli
push
fistps
cwtl
mov
xor
mov
cli
rorb
fiaddl
xor
and
sbb
push
sub
sti
xor
inc
cs
bound
hlt
cmp
or
shlb
cmpsb
xor
push
int
testl
shlb
in
dec
fisubl
add
jns
repz
adc
mov
push
xchg
ficoml
shll
add
or
dec
and
clc
subb
pop
ja
test
mov
sbb
cmp
sahf
les
sbb
js
sub
add
std
mov
push
sub
mov
addl
pop
add
sub
xchg
mov
push
mov
mov
add
push
mov
sub
pop
xchg
pop
mov
push
mov
push
mov
add
add
add
pop
sub
push
pushl
pop
popl
pop
mov
call
int3
pushl
pop
push
push
pop
add
add
xchg
pop
push
mov
push
mov
mov
pop
mov
mov
add
xor
xor
xor
inc
push
push
mov
add
pop
push
mov
not
shl
or
push
mov
and
neg
and
or
xor
or
pop
push
mov
sub
pop
add
sub
mov
add
sub
add
cmpb
jne
push
push
push
mov
xor
shr
shl
and
inc
xor
mov
pop
mov
pop
push
mov
add
mov
pop
pop
push
mov
add
xor
push
mov
mov
mov
pop
mov
add
push
push
push
mov
push
push
pop
push
mov
neg
xor
dec
not
or
sub
add
pop
sub
xchg
pop
mov
call
push
mov
mov
sub
add
add
mov
add
mov
pushl
pop
push
mov
add
push
mov
neg
shr
xor
add
pop
xchg
pop
mov
sub
mov
push
pop
add
add
xchg
pop
ret
push
mov
add
push
mov
sub
mov
add
xchg
pop
mov
push
push
popl
addl
mov
add
pusha
pushl
subl
mov
add
push
mov
add
mov
add
push
mov
add
add
sub
push
mov
add
mov
mov
add
pop
shr
pushl
sub
mov
mov
xor
pop
mov
add
xor
pushl
subl
pop
push
mov
add
add
shl
shr
sub
add
mov
add
jmp
push
mov
add
xor
pushl
pop
push
mov
add
add
xchg
pop
push
mov
mov
add
push
mov
add
add
pop
mov
add
push
mov
push
mov
add
add
pop
push
push
mov
mov
pop
add
mov
add
or
jne
popa
leave
ret
