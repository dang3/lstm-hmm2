rorb
repnz
dec
outsl
inc
popf
inc
repnz
mov
jnp
ljmp
lds
push
mov
push
cld
push
xchg
jo
jbe
inc
test
pop
call
xchg
shrb
in
dec
in
inc
stos
mov
add
mov
shll
fnsave
fbstp
push
push
push
mov
or
es
mov
pop
cmp
pop
and
and
mov
std
adc
test
mov
mov
push
ljmp
pop
lahf
fisttpl
add
mov
xlat
mov
inc
push
out
in
dec
mov
jge
enter
sahf
inc
sbb
inc
repnz
or
fdiv
shlb
mov
push
fs
pop
in
add
sub
clc
push
clc
test
inc
call
pop
xor
movsb
ret
mov
xchg
stos
pop
or
into
adc
in
cmpsl
push
gs
jecxz
nop
mov
mov
into
mov
in
push
test
push
stos
mov
fistpll
in
jle
icebp
adc
pusha
imul
gs
pop
lock
jae
mov
les
xchg
inc
xor
add
shrl
rcrb
das
mov
mov
pop
or
sbb
sahf
pop
daa
imul
xchg
xchg
int
divps
sti
lcall
sahf
aad
jp
pop
incb
in
or
add
icebp
roll
xor
js
lret
sub
sbb
cmc
sbb
fsubl
sub
pop
in
out
out
and
lock
outsb
push
push
aaa
push
cmp
ret
and
movsl
in
xchg
sbb
mov
jo
sub
mov
lcall
js
jnp
sti
pop
jmp
push
lahf
xchg
outsb
movsb
xchg
scas
orb
pop
pop
push
cmp
push
pop
pop
sti
xor
aaa
insb
adc
push
and
add
push
pop
cmpsl
scas
popf
stos
je
cmpsb
test
inc
ret
and
inc
aad
dec
shlb
adc
movsb
in
repnz
mov
add
data16
pop
test
add
sahf
jmp
jae
mov
push
cmpsl
inc
inc
setg
jnp
pop
inc
xchg
lar
nop
inc
aam
mov
sbb
dec
inc
cmp
cmp
setbe
daa
lods
ja
lcall
cmp
add
add
outsb
xlat
popf
les
fs
push
dec
scas
outsl
popa
pop
loop
pop
out
imul
scas
sub
push
pushf
jle
xlat
lcall
mov
and
aas
rol
inc
loop
jns
jmp
loopne,pn
mov
push
cmpsb
sbb
nop
in
pop
jl
pop
loope
pop
lret
sarl
out
jle
mov
mov
fwait
xchg
xor
add
ja
stos
mov
aad
arpl
sti
mov
push
push
imul
outsb
sub
fwait
stc
sahf
add
or
jmp
mov
nop
dec
aas
mov
sbb
jae
mov
cmpsb
cli
mov
mov
dec
jge
ret
push
pop
adc
add
sbb
mov
loop
stos
cmp
pusha
mov
fwait
push
pop
sub
mov
fdivrl
mov
mov
push
or
stc
std
fsubl
fprem
icebp
adc
int3
fdivl
xlat
mov
sub
mov
cmp
repz
fnstcw
inc
sbb
mov
push
lock
mov
rcl
into
sub
movsl
in
mov
sbb
xchg
lcall
aam
sahf
inc
pop
xchg
add
adc
push
or
mov
sbb
daa
std
add
xor
mov
jae
mov
pop
decl
inc
fadd
add
gs
push
jb
lret
cmp
je
jo
push
mov
dec
int3
or
mov
and
push
or
ljmp
jb
add
test
sti
je
leave
jns
test
or
push
push
pop
mov
ds
mov
popl
ret
inc
xor
out
rorb
pop
dec
dec
adc
js
lret
in
aad
mov
scas
iret
dec
pop
and
and
cmp
sub
pop
sub
lea
push
push
jecxz
pop
fucomi
adc
out
test
cmpsb
sub
mov
dec
push
loopne
lods
outsl
jmp
xor
jnp
mov
xor
scas
push
mov
or
scas
inc
dec
mov
ds
adc
sub
out
repz
jle
jge
ja
sahf
jecxz
push
mov
pop
cmp
sbb
pop
ljmp
lea
ss
out
scas
and
aas
scas
out
ljmp
mov
inc
inc
pushf
adc
mov
data16
xchg
push
pop
mov
and
dec
mov
mov
and
insb
into
sti
int3
xchg
sub
outsl
inc
push
pop
jns
imul
or
sub
ss
mov
lods
or
add
mov
dec
mov
adc
dec
mulb
push
dec
sub
or
mov
xor
pop
mov
cmp
pop
addr16
iret
daa
out
mov
sub
sub
xor
mov
decb
fnstcw
ja
cmp
or
mov
push
lea
test
cmpsl
push
clc
push
push
cmp
call
push
mov
xchg
jmp
stc
xor
ret
mov
fsub
das
xchg
mov
stos
sbb
scas
stos
pushf
fstps
add
shr
cmc
stc
clc
mov
xchg
jg
jl
xor
jge
add
push
push
pop
pop
test
stc
cld
lea
cmp
push
push
push
test
pop
pop
pop
sub
inc
dec
rol
jne
jge
push
push
pop
pop
add
loop
jecxz
mov
lret
jbe
jle
xchg
leave
icebp
pushf
cli
sbbb
je
xchg
je
jge
nop
push
jl
rol
pop
call
or
jl
add
add
or
stc
add
mov
push
push
push
pop
pop
pop
jge
push
mov
pop
cld
stc
add
xor
jno
push
push
pop
pop
push
jae
dec
inc
pop
push
mov
pop
xor
push
mov
pop
cld
mov
xchg
test
cld
sub
and
push
add
mov
pop
push
jno
js
push
pop
pop
push
or
pop
stc
stc
cld
lea
mov
clc
jl
push
add
pop
and
jge
push
mov
pop
push
je
push
or
pop
pop
cmc
cmc
testl
jne
jmp
sub
push
jnp
jnp
push
add
pop
cmc
push
pop
cld
push
mov
add
pop
or
cmp
test
jl
xor
push
push
push
pop
pop
pop
push
mov
pop
push
mov
pop
cmc
push
pushl
xor
pop
pop
loop
jecxz
xor
jge
xor
xchg
iret
mov
jecxz
je
add
fisttps
push
int3
or
aad
jge
inc
push
sar
pop
jae
jb
ja
test
mov
stc
cmc
mov
inc
inc
inc
inc
push
call
mov
cmp
inc
stos
mov
push
inc
jmp
ficoml
or
lods
cwtl
xchg
out
mov
or
xchg
mov
lahf
js
pop
pop
push
push
pop
add
pop
fnop
loop
jecxz
hlt
ret
sti
mov
es
or
and
aaa
aad
mov
sarb
mov
std
jae
repnz
dec
jne
std
cld
je
shr
loop
jecxz
mov
sub
gs
imul
and
mov
int
or
jnp
inc
xor
popa
ss
filds
push
insb
cmp
sub
mov
dec
popa
pushf
jnp
xor
in
dec
mov
mov
and
jb
sub
push
push
jp
and
pop
pop
or
stc
push
dec
pop
ror
xor
je
push
call
mov
dec
xor
sbb
out
stc
inc
mov
and
add
jmp
ljmp
enter
cmc
jnp
add
dec
pusha
adc
cmp
pop
jo
loope
pop
outsl
popa
inc
shrl
xor
call
cmp
mov
hlt
and
add
push
mov
aad
mov
adc
adc
xchg
sbb
mov
push
outsl
jns
mov
push
movsl
mov
imulb
mov
jo
rcll
shlb
arpl
mov
pushf
inc
xchg
daa
in
std
inc
or
popa
iret
and
cs
mov
inc
xor
xchg
sti
rcrb
dec
hlt
sub
mov
imul
sub
fisttps
xlat
lea
adc
iret
popa
jl
ja
test
add
outsl
and
orb
inc
stc
sbb
enter
cmpsb
adc
jge
jecxz
fwait
sbb
mov
inc
pop
mov
jb
ror
adc
aam
cmpsl
mov
out
push
in
mov
arpl
jbe
mov
ret
loop
scas
mov
cmp
jecxz
and
push
mov
xor
cmp
out
fwait
or
scas
xor
andb
daa
nop
lahf
mov
push
add
insb
mov
add
xchg
push
cmp
pop
mov
fldlg2
ja
outsl
data16
inc
inc
popf
icebp
cmpsb
lea
dec
fistl
cmp
cwtl
pop
xchg
push
or
adc
or
push
push
loopne
les
ja
cmpsb
pop
sarl
add
adc
shll
incb
data16
aad
jp
add
cli
pop
push
inc
and
arpl
lea
sbb
add
scas
mov
push
ljmp
rcrl
mov
sub
sub
adc
cmp
test
mov
jecxz
pop
dec
push
mov
xchg
xor
mov
out
clc
or
push
pushf
or
xor
adc
dec
and
mov
les
test
notb
xor
xchg
mov
dec
xchg
out
xchg
pop
inc
pusha
out
shr
push
jp
lahf
cmpsl
lahf
loop
dec
push
sub
cmc
imul
or
fnstsw
dec
xlat
jns
mov
enter
inc
mov
loop
div
std
popa
add
or
xor
mov
stos
dec
enter
fdivs
dec
and
pop
pushl
std
add
loop
fbstp
stos
push
orl
add
imul
adcb
icebp
insb
push
cmp
aad
test
pop
pop
imul
dec
and
enter
loope
jae
jae
daa
lds
sub
aad
mov
test
add
mov
test
hlt
rclb
outsb
push
lock
in
lock
jns
sub
sub
xchg
jno
je
inc
and
rcrl
mov
fs
or
xchg
inc
sbb
sahf
mov
add
in
add
fwait
add
jl
adc
lods
xchg
std
push
sbb
test
rolb
leave
ja
cmc
test
mov
mov
push
ret
and
fs
mov
or
pop
xor
mov
loopne
or
fnstcw
mov
jno
mov
jl
cmpl
aaa
mov
inc
mov
mov
scas
mov
add
fldl
hlt
adc
dec
xlat
addr16
arpl
pop
icebp
or
inc
jno
pop
pop
mov
mov
xlat
inc
mov
pushf
add
jne
sbb
addb
mov
mov
add
dec
jnp
stc
jecxz
inc
sbb
mov
xor
cmp
mov
pop
xor
sti
sub
movsl
lods
adcb
lret
das
sbb
into
dec
push
xchg
idivl
pop
int3
push
inc
pop
leave
adc
xlat
inc
dec
push
mov
jne
ret
jbe
xor
adc
lock
mov
aas
pop
fwait
mov
lods
scas
add
jo
test
movsb
xchg
or
pop
outsb
or
mov
adcl
mov
les
andl
enter
dec
lock
fldt
cmp
dec
inc
cmp
int3
dec
adc
popf
mov
pop
int3
mov
gs
enter
inc
cmpsb
out
rcrb
push
cwtl
test
insb
jg
and
gs
cmpsb
add
cmpsl
push
scas
std
push
mov
cmp
mov
je,pn
lds
jmp
mov
inc
insl
sti
dec
push
cs
inc
jg
adcl
cmpsb
or
add
in
adc
mov
push
inc
pusha
sub
sbb
inc
enter
aad
sub
and
inc
and
lcall
ret
insb
adc
mov
jns
xor
stc
xor
xchg
clc
sbb
or
in
or
sbb
int
and
hlt
fnstsw
out
pushf
je
js
mov
pop
rorb
jo
lahf
in
enter
int
stos
rcll
dec
xchg
pop
not
or
add
pop
push
and
scas
enter
xor
pop
outsb
test
pop
mov
jno,pt
out
ljmp
push
dec
sub
xor
xlat
sub
fmuls
and
push
lea
pop
iret
ret
data16
xchg
clc
lods
mov
lret
xor
cli
pop
and
or
shr
cmpsl
cmpb
pop
add
lret
insl
add
scas
bound
xor
sahf
icebp
loop
mov
jns
outsl
pop
cltd
mov
mov
inc
xor
gs
jnp
cmpsb
sub
popa
insb
mov
xor
jle
popa
push
sti
addb
js
cld
clc
cmp
dec
mov
xchg
call
insl
sbb
sub
rcll
jle
mov
bnd
adc
movsl
int3
adc
or
outsl
inc
repnz
orb
jecxz
mov
xchg
je
adc
jno
add
sub
jbe
mov
xor
sub
jecxz
pop
repz
cmp
mov
mov
lock
jecxz
cmc
fstl
and
lds
push
pop
adc
mov
mov
outsb
xor
aas
pop
and
jmp
jb
lock
dec
clc
pop
sub
in
outsb
jae
xor
mov
pop
enter
mov
fbld
fnsave
jecxz
ret
pop
add
ret
lods
ss
lahf
mov
insb
add
lea
push
pop
jbe
ret
cmpsl
xor
adc
cltd
push
fistl
mov
adc
mov
ljmp
jae
data16
loopne
jecxz
rcl
xor
cmp
and
jne
xchg
and
push
cmp
push
add
lea
cmpsl
insl
out
fmuls
out
or
jl
sti
sub
or
inc
fwait
pop
xchg
jo
outsl
cmpsl
lcall
adc
es
neg
lods
loope
inc
jp
push
push
adcl
std
pop
xor
mov
pop
loop
orb
ret
stos
leave
pop
cmp
cmc
mov
aas
in
dec
sbb
cmp
and
mov
add
sbb
shr
pop
pushf
mov
cmpl
inc
icebp
dec
inc
mov
or
sarb
enter
mov
cmpsl
jne
repnz
jp
mov
push
scas
movsb
dec
ficompl
mov
test
movsl
je
pop
inc
mov
xchg
xchg
dec
or
mov
aaa
pop
mov
pop
jae
mov
lods
sub
pop
cmpsb
jno
cmp
push
push
xchg
in
cmp
test
dec
pop
clc
mov
mov
add
ja
ss
fstl
jge
pop
add
mov
jmp
rcl
xchg
add
xchg
inc
jnp
out
aaa
js
push
cmp
rcrl
mov
mov
mov
cli
push
fwait
and
negl
cmpsl
fmull
xchg
aad
pop
mov
pop
stos
clc
cmpsl
push
cli
push
loope
pusha
mov
rcll
sahf
rorb
rorb
or
mov
mov
add
lahf
jbe
xor
int3
add
pusha
aas
or
scas
stos
xor
lea
inc
cmp
jne
dec
insl
lret
add
inc
or
les
cmpsl
fstpl
fs
setae
sbb
aad
lcall
fcmovnb
mov
cli
pop
in
mov
add
pop
out
shr
push
or
aaa
or
test
lds
insl
dec
mov
js
dec
pusha
ffreep
mov
sub
dec
push
xchg
lea
cmpsb
insb
insb
xor
pop
loope
daa
ds
xchg
mov
jl
mov
xor
dec
in
pop
fistps
push
jl
dec
sbb
push
mov
sub
jg
fidivrl
fisubs
mov
xchg
movd
push
pop
mov
aaa
jp
jno
out
xor
sbb
cmp
xchg
jae
pop
xor
sbb
test
cmp
jae
push
in
push
sbb
dec
icebp
pop
nop
in
lahf
cmpsl
es
out
inc
sbb
mov
scas
mov
fistps
daa
xchg
pushf
leave
mov
xchg
ds
or
jae
push
ficomps
adc
push
in
movsl
loop
ljmp
leave
xor
int3
aas
rcl
dec
mov
ja
and
sbb
stos
xor
out
sub
lret
add
cs
mov
pop
pusha
pop
je
pop
push
mov
pusha
push
insb
out
out
outsb
jmp
test
xchg
and
adc
xchg
insb
loope
add
ljmp
inc
subb
les
hlt
or
xor
adc
das
xchg
push
jmp
cmp
push
iret
ret
pushf
sub
bound
out
adc
adc
hlt
mov
ret
cs
inc
lret
stos
mov
xchg
and
add
or
mov
mov
add
test
int3
mov
popf
jo
daa
mov
stc
xchg
pusha
mov
mov
cli
out
fbstp
inc
scas
pop
inc
cmp
arpl
add
or
pop
lret
push
fsubrl
inc
sbb
je
in
lea
cmc
mov
and
imul
jne
xor
cmpsb
out
idiv
aam
fisttps
mull
push
sbb
data16
out
adc
ret
mov
mov
sbb
ds
mov
xchg
aad
jmp
add
aam
ljmp
adc
mov
repz
pop
mov
fcmovne
cmp
cmp
xchg
in
das
stos
inc
push
ja
adc
or
xchg
cmp
jecxz
lods
in
inc
and
out
ret
push
cmp
mov
imul
sbb
xchg
outsl
xchg
movsb
and
aam
lock
fists
lock
pop
cmp
in
xchg
push
pop
movsl
leave
ret
pop
fnstenv
sub
inc
fisttpll
cmp
adc
aad
leave
mov
lea
xchg
xor
cmc
xlat
pop
ficomps
xchg
ret
mov
lock
in
push
add
stos
ljmp
jnp
jp
inc
jns
in
mov
arpl
clc
out
inc
nop
or
cmp
je
ret
jg
cmp
test
dec
cmpsl
fistpll
sarb
push
xor
fstpt
loop
les
and
jg
mov
les
hlt
cwtl
test
dec
outsl
add
sbb
stos
or
sub
mov
pop
out
scas
inc
out
out
mov
xchg
jge
mov
add
inc
movb
loope
mov
repz
in
pop
jno
xchg
sbb
scas
flds
imul
mov
jbe
mov
ret
dec
xchg
cltd
mov
out
push
and
aam
cmp
push
ret
das
sub
ficoms
insb
lcall
mov
pop
test
mov
lahf
je
mov
flds
ret
in
sarb
lcall
mov
dec
pop
or
adc
in
clc
lods
cmpsb
imul
xchg
popa
pop
cmp
pushf
lods
in
dec
sti
ficoms
inc
mov
and
in
dec
cltd
shr
call
arpl
add
pop
in
and
ljmp
jo
lea
leave
sbb
inc
fdivrl
jb
dec
ja
fidivl
cld
mov
dec
ror
and
push
aaa
popa
sbb
outsb
addr16
inc
rcrl
sbb
scas
sbb
ljmp
mov
fildl
icebp
jmp
loop
shl
daa
inc
lds
add
or
outsb
movsl
imul
xor
xor
add
movsb
cs
jb
fsin
out
push
mov
or
idivb
mul
jno
cmp
sbb
popf
out
jnp
vmread
fstpt
mov
std
mov
xor
push
rcll
or
jl
nop
pop
outsb
cld
xor
stos
lea
fldl
inc
lock
arpl
insb
xor
sbb
jl
sbb
rcr
fidivrs
pop
lds
push
lods
push
xchg
cmpsl
xchg
and
rolb
mov
mulb
stc
sahf
and
mov
or
jb
nop
lods
cmp
xor
jg
sub
xchg
and
add
or
repz
pop
addr16
fs
pop
mov
sbb
xchg
push
xchg
jbe
cmp
or
sarl
loop
stc
pop
xchg
jns
dec
mov
and
imul
aaa
loop
sbb
outsl
in
jnp
clc
mov
lods
xchg
addb
xchg
out
mov
jne
sbbl
cmpsl
or
xchg
xchg
pop
or
xor
mov
rol
mov
fwait
es
fdivr
fadd
inc
push
sbb
jmp
xchg
rcrl
gs
sub
hlt
mov
lods
fstps
enter
scas
pop
into
mov
js
das
inc
mov
aad
mov
mov
mov
mov
push
lods
mov
or
lret
lea
xor
nop
push
push
popa
pop
jp
faddp
aam
inc
rcl
dec
jno
addl
fstpt
xlat
cmc
or
pop
pop
mov
idivb
mov
jne,pn
testl
and
fdivrl
pop
aam
insl
xchg
subb
dec
xlat
dec
test
call
arpl
mov
and
mov
mov
ret
sti
mov
mov
notl
insl
push
test
and
cs
or
lret
fdivrl
push
jnp
imul
push
mov
mov
testl
pop
dec
or
out
xchg
movsl
jecxz
mov
add
lds
or
aad
sub
mov
mov
fsubp
jge
push
test
nop
outsl
pop
mov
adc
cmp
inc
js
les
push
ss
pusha
out
dec
fadds
mov
cmp
cmp
fistl
cmp
push
aas
cltd
jge
jg
aaa
cmpsb
xchg
push
lcall
pop
fimuls
loopne
pop
movsb
jp
xor
mov
jecxz
arpl
in
stos
jecxz
push
ss
daa
push
sub
outsb
mov
cmp
xor
popa
adc
es
psrad
mov
mov
int
pop
mov
mov
adc
jecxz
loop
ja
imul
xchg
cmp
repz
aam
fsubs
jae
insl
fsubrs
mov
shll
int3
xchg
mov
shl
mov
clc
pop
cmp
dec
data16
and
add
out
xor
sub
sub
outsl
jae
clc
pop
out
mov
imul
jg
test
sbb
ret
and
daa
inc
fwait
shlb
repz
sbb
jns
fbld
dec
sub
push
cmpsb
sub
push
jae
lea
mov
mov
dec
add
mov
and
mov
jno
sub
test
mov
mov
test
pushf
xor
xchg
mov
insl
sbb
ljmp
cmp
popf
shlb
cmpsb
xor
mov
xor
int3
xor
sti
aas
mov
sbb
gs
push
mov
frstor
es
popa
sbb
out
shr
mov
aad
or
leave
mov
jno
sbb
in
int3
icebp
das
adc
mov
adc
mov
xchg
in
xorl
dec
push
nop
push
adc
out
mov
and
add
shlb
xor
bound
incb
cltd
fwait
cmp
popf
scas
xor
popa
or
stc
lret
lahf
ficompl
prefetcht2
jnp
outsl
lods
xor
jl
aam
outsb
xchg
fwait
ljmp
or
aam
dec
rcrl
and
sbb
stc
mov
lock
xor
ss
repnz
pop
xor
pop
in
pop
jmp
scas
pusha
mov
test
cmp
push
daa
add
data16
jne
cmc
and
pop
cmp
mov
mov
jmp
mov
clc
jno
pop
ss
insb
inc
or
mov
push
jo
xchg
mov
mov
xchg
sarl
dec
push
sub
cmp
cwtl
call
sti
sahf
or
inc
sub
ficoml
idivb
sbb
inc
and
mov
pop
jbe
addb
data16
pop
push
pop
or
mov
mov
test
mov
mov
xchg
clc
and
filds
ror
loop
imulb
cli
pop
mov
sub
ret
nop
aad
test
jo
int
ja
std
mov
push
sahf
xor
aad
psraw
arpl
xchg
imul
les
rep
sub
popa
mov
ss
jb
cmc
inc
inc
xor
mov
dec
out
dec
mov
les
mov
js
or
add
cmp
fwait
sbb
xor
sub
movsb
je
xchg
sbbb
out
popa
movsl
cmp
imul
jmp
sbb
jnp
repnz
sub
pop
pop
sbb
fisubrs
dec
pop
movsb
fidivrl
cmpsb
out
insl
imulb
push
lret
test
popa
xchg
push
sbb
enter
loop
icebp
popf
mov
mov
jno
jb
ret
inc
xor
hlt
sbb
and
lds
pop
adc
and
xchg
or
dec
hlt
cmp
test
addr16
push
add
cmp
call
push
adcb
sbb
fistps
cld
and
repz
nop
xor
mov
or
sbbb
jae
loope
cmpsl
sub
mov
cld
cmp
xor
add
lcall
cmp
fs
push
subl
in
pop
arpl
scas
insl
inc
inc
loope
loope
es
xchg
js
xor
adc
or
mov
insl
jbe
jo
xor
mov
ret
xor
cltd
push
in
mov
dec
fnsave
jo
mov
es
mov
jno
out
lret
in
scas
pop
lock
and
hlt
xor
divb
lock
or
jb
cmp
adc
cmp
cmp
jb
outsl
js
mov
rcrl
loope
push
lcall
cmp
jns
je
cmpsl
or
sub
inc
mov
xchg
imul
lret
sub
mov
scas
addb
cwtl
and
outsl
pushf
push
int
sub
mov
aaa
shlb
mov
jg
lahf
inc
cmp
sahf
fsubrs
cltd
push
repnz
loop
inc
pusha
int
sbb
mov
psrld
cmpsl
stos
pop
mov
ljmp
mov
and
and
out
push
dec
test
push
dec
cmpsl
mov
cmpxchg
daa
lret
pop
leave
push
push
mull
pop
cltd
enter
dec
and
movsl
in
test
pop
fcmove
sub
mov
out
push
daa
fs
into
stc
insl
adc
or
imul
fdecstp
and
push
inc
je
mov
push
mov
imul
in
inc
test
mov
xor
pop
fcompl
ret
push
fwait
in
xchg
iret
mov
sbb
insl
and
popf
shrb
and
rcr
pop
mov
out
dec
shlb
jecxz
adc
jns
cmp
inc
pop
jb
mov
cmpl
subb
cmp
inc
cmp
iret
adc
xor
jne
pop
aad
out
mov
lahf
test
inc
add
int
mov
cmpsl
or
and
push
lret
jmp
leave
pop
cld
push
sub
pavgw
sub
ss
pop
stos
mov
mov
rep
loopne
mov
sti
dec
and
cmpsb
xor
fdiv
cmp
fcmove
mov
mov
xchg
decb
outsb
sbb
notb
xor
test
pop
mov
mulb
imul
adc
xor
pop
cmp
jne
je
dec
cwtl
mov
rolb
push
test
int
pop
xor
inc
leave
or
dec
mov
jg
cmc
scas
mov
push
lods
call
or
sub
fldenv
jl
pop
ret
mov
xchg
pop
test
mov
scas
div
xchg
addr16
mov
insb
fwait
adc
arpl
addr16
push
fsts
add
call
loop
je
push
adc
cmp
mov
sub
xchg
addr16
jne
mov
mov
aaa
push
push
inc
into
lret
cwtl
cs
andb
pop
mov
cmp
mov
and
iret
rclb
sub
and
xor
pusha
inc
cmpsb
adcb
loopne
add
and
mov
nop
mov
xchg
repnz
into
ret
mov
roll
mov
mov
sbb
push
mov
xlat
scas
pop
cmp
xchg
into
jle
push
adc
mov
mov
and
jmp
es
ret
inc
jp
lahf
lds
jno,pn
mov
mov
mov
sbbl
inc
xor
pop
fwait
adc
mov
pop
push
ja
into
or
rorl
add
mov
sub
icebp
mov
cmp
push
call
js
mov
leave
aam
fists
push
pop
push
mov
adc
sbb
xchg
mov
xchg
popf
dec
sub
mov
push
fildl
loope
push
ja
inc
mov
gs
cmpsb
mov
jb
aas
jbe
imul
dec
inc
jo
sbb
fwait
pop
sbb
push
into
push
pusha
adc
inc
call
mov
add
push
stc
fcmovu
lods
into
sbb
inc
and
mov
filds
adc
enter
outsb
push
mov
dec
pop
push
std
mov
daa
pop
or
decb
outsb
movsl
or
shll
mov
mov
sbb
outsb
addr16
adc
fildl
jg
mov
xchg
loope
mov
sbb
call
or
push
rorl
test
imul
imul
xchg
stc
and
sti
push
in
push
jns
andl
xor
pop
cs
int
lds
sbb
imul
push
pop
inc
addr16
push
sub
inc
push
jne
mov
xchg
mov
iret
dec
xchg
daa
mov
mov
push
xchg
xlat
int
cmp
sbb
pop
dec
jb
icebp
lahf
push
xchg
sub
roll
imul
mov
imul
es
sub
adc
xchg
xor
xor
jl
or
xchg
pop
fptan
lret
faddl
lcall
test
jne
jl
int
movsl
imul
fisubl
popf
in
sub
sub
stos
movb
mov
adc
testb
mov
stc
sub
ljmp
test
filds
sub
fucomp
in
lcall
lret
sahf
stos
dec
mov
andb
fldenv
fsubp
sbb
push
push
cltd
das
popf
push
sub
and
stos
pop
jl
cmp
inc
push
out
push
sub
nop
adc
jg
out
test
inc
mov
xchg
stos
pushf
imul
scas
pop
xor
hlt
mov
jnp
dec
add
cld
xor
push
and
mov
sbb
cmp
orl
dec
or
xchg
mov
jmp
cmp
jmp
push
insl
adc
clc
xor
xchg
in
jmp
mov
fcmovb
add
push
mov
mov
cmp
pop
mov
ds
mov
pop
out
and
insl
mov
add
subl
repz
aas
bound
cltd
cmp
sbb
jbe
out
pop
xor
lcall
push
mov
cmp
insl
lahf
adc
cmp
mov
sbb
sub
subl
xchg
pop
cs
jne
leave
mov
pop
add
xchg
out
mov
cmp
and
xchg
and
fbstp
divl
stos
jbe
rcll
mov
cmp
push
pop
pop
pushf
mov
shll
mov
popa
pop
test
xorl
gs
movsb
outsb
outsb
test
int
sbb
jns
test
aas
jbe
cmp
movsb
insb
sbb
vpaddsb
sbb
xchg
jle
test
nop
add
inc
ds
lods
sbb
adc
pop
mov
xchg
aam
jmp
jno
stos
in
or
stos
and
jg
sub
mov
dec
pop
addr16
inc
dec
cmpsb
push
cli
fwait
shl
ret
nop
mov
or
push
test
cmpsl
cmp
push
xor
pop
cmp
adc
pop
imul
stos
xor
sbb
iret
jbe
mov
in
jbe
mov
pop
stc
mov
test
outsl
mov
movsl
cmp
add
fisttpl
leave
sbb
sbb
loop
pop
cmp
pop
mov
xchg
add
cwtl
out
push
dec
mov
scas
ds
aas
inc
mov
adc
jo
sub
xor
inc
aaa
scas
xlat
stc
jmp
dec
jnp
pop
loop
adc
testb
mov
fs
jmp
int3
adc
lret
out
xor
mov
mov
scas
bound
cmp
shll
inc
cmp
adc
test
inc
fsts
inc
jp
jp
sahf
mov
lock
jge
jg
jb
cwtl
sub
flds
andb
xchg
pop
push
jp
int3
icebp
pop
test
mov
test
add
jecxz
jge
cs
and
pusha
enter
ja
mov
mov
cs
jbe
sub
push
cld
repz
aaa
xchg
stos
xor
pop
sti
push
sub
test
inc
cli
inc
push
rcr
mov
movsb
cmp
xchg
scas
push
stos
mov
dec
pop
add
ret
je
cld
push
cwtl
xchg
push
int3
jecxz
daa
dec
cmc
pop
pop
push
dec
cmc
icebp
sbb
fdiv
xchg
mov
data16
shlb
jns
inc
xchg
test
lret
int3
sbbb
add
jl
pop
and
outsb
icebp
out
lds
hlt
stc
push
xor
aaa
aam
dec
jecxz
test
mov
idiv
lods
insl
or
adc
cltd
push
not
out
sbb
jecxz
add
stos
orl
adc
insl
imul
cmp
push
scas
jnp
lahf
loopne
stc
aaa
mov
push
pop
and
bound
std
xchg
es
fildll
xchg
add
into
xchg
cmp
fwait
jae
push
xchg
fcmovb
insb
cmp
out
stos
ljmp
adc
inc
ficoml
jle
xchg
lcall
mov
cs
adc
adc
push
icebp
mov
lea
lods
or
or
push
cmp
push
pop
jo
into
fidivrl
cmp
mov
pop
loopne
mov
test
or
inc
cmp
js
nop
scas
fisttps
lret
dec
lahf
jne
mov
sbb
add
pop
outsb
idivb
and
mov
mul
inc
call
mov
sub
fimuls
mov
mov
inc
sbb
outsb
fnstenv
inc
je
push
sti
lods
dec
ss
out
insb
test
call
in
movsl
jae
sbb
adc
pop
cmpsb
fnstenv
jae
add
hlt
mov
pusha
aam
dec
jb
cs
bound
jge
mov
movsl
aas
sbb
dec
add
sub
out
fst
push
and
popl
push
nop
xor
add
cmp
gs
movsl
rcr
aad
xchg
fnsetpm(287
jbe
cmpsb
outsb
xchg
cld
fcmovnu
xchg
jnp
push
imul
sub
push
rclb
mov
ret
or
cmp
and
cmp
cwtl
or
add
lcall
cmp
insb
loope
ret
je
mov
lahf
xchg
inc
das
js
add
cmpsl
push
fdivl
jne
mov
ret
roll
cmp
mov
sub
cld
push
sub
jae
inc
mov
out
jnp
shll
insb
insb
ljmp
sarb
stos
pop
pop
mov
dec
rcll
filds
cwtl
ficoml
sbb
lds
cli
lea
cmp
cwtl
adc
xchg
orl
adc
daa
jg
aas
xchg
enter
adc
xor
dec
lcall
or
jno
incl
mov
test
rclb
and
lea
imul
xor
push
mov
movsb
cmp
sahf
push
mov
cmpsb
subl
cmp
mov
pop
clc
enter
pop
lods
movl
and
movsbl
les
mov
aad
mov
cltd
or
mov
xchg
mov
loopne
pop
or
stos
cwtl
lcall
test
sbb
gs
mov
ret
adc
xchg
clc
clc
js
je
mov
mov
mov
mov
insl
call
jl
in
jne
mov
mov
rcl
lcall
sbb
jge
jp
mov
mov
cmpsl
mov
mov
fwait
jo
mov
je
sbb
out
mov
fistpl
cltd
mov
sbb
dec
xchg
lret
iret
outsb
xchg
push
cmp
sub
sbb
cmp
cli
mov
js
jmp
jecxz
popa
insl
inc
or
in
cs
jmp
jp
dec
xor
xchg
adc
or
mov
mov
mov
adc
inc
in
mov
or
jae
xchg
mov
out
adc
inc
pop
pushf
xchg
lret
ret
inc
mov
pop
out
jns
cmp
int3
or
leave
dec
push
insl
jbe
sbb
faddl
push
shll
adc
int3
dec
mov
xorb
mov
cmp
ds
rol
sub
pop
pop
std
jge
adc
pop
fisubrl
jl
push
mov
std
or
into
ret
adc
imul
inc
or
faddl
shl
mov
bound
jb
adc
jmp
clc
fiaddl
jg
inc
subl
cltd
jp
mov
pop
sbb
dec
lahf
vaddps
dec
mov
jne
insl
out
out
jno
jo
ret
jp
cmpsb
inc
mov
mov
push
hlt
push
sub
mov
mov
xchg
xchg
fs
or
dec
push
lret
fcmovb
in
js
jmp
or
sti
or
and
inc
mov
imull
cmp
clc
stc
lods
inc
dec
add
ds
xor
inc
bound
pusha
stc
into
and
mov
imul
in
bound
mov
das
push
imul
dec
repnz
push
mov
mov
into
xchg
pop
mov
pop
stos
add
add
pushf
loopne
leave
hlt
and
daa
jmp
push
out
jne
scas
xor
xchg
xchg
sub
adc
lret
out
iret
xchg
lret
in
cs
jp
test
dec
sbb
jae
fmuls
pushf
stos
add
xor
inc
jmp
dec
insb
jnp
dec
test
imul
popf
cli
adc
into
mov
adc
movq
imul
lret
jl
mov
orl
je
xchg
jae
dec
add
mov
cmp
xchg
sbb
push
fldcw
fsts
mov
sub
and
and
mov
push
and
test
fldenv
jbe
popf
cmp
push
adcl
xor
adc
scas
dec
or
sub
sbb
insl
or
push
pushf
and
push
sub
bnd
add
mov
loop
lret
insb
xchg
mov
jae
add
and
mov
pop
push
sarl
push
sub
cmp
jns
cwtl
scas
sbb
stos
pop
inc
cmpsl
jg
repnz
push
inc
ljmp
pusha
pop
mov
cmp
or
add
arpl
popa
sti
test
mov
sti
popf
sbb
stos
movsl
lret
das
ds
mov
sub
add
icebp
pop
iret
enter
mov
or
les
roll
das
or
lods
fs
pop
test
mov
dec
mov
lods
pop
push
cmp
xor
jge
test
lods
dec
stc
jmp
fnstsw
jae
mov
xlat
mov
cmpsl
push
gs
dec
sbb
cmp
sbbl
stos
cwtl
sbb
xchg
or
dec
xchg
jg
mov
sub
or
mov
dec
jae
sub
dec
nop
pusha
jp
pusha
mov
dec
aad
jne
inc
sub
rorl
push
cmc
jg
movsl
push
xchg
iret
mov
xchg
test
aam
repnz
fcmovbe
sahf
or
mov
sbb
outsl
nop
or
mov
fldt
dec
sub
jg
scas
sarl
leave
xchg
into
into
int
imul
push
adc
or
mov
ljmp
pusha
idivl
lods
xchg
cli
adcb
in
inc
iret
sbb
mov
outsl
xchg
leave
fmul
into
xor
push
jle
mov
cli
std
jmp
sub
mov
test
aad
addr16
stos
jb
xor
push
pop
fwait
sbb
rcrb
and
mov
or
leave
sub
mov
daa
loopne
jl
mov
inc
insl
insb
rorb
pop
sar
jp
pop
mov
aam
inc
or
imul
js
pop
push
ret
mov
xorl
pop
dec
or
rcrb
hlt
xor
out
loop
test
negb
adc
mov
mov
pop
divb
cmp
inc
push
jp
adc
pusha
popa
outsb
lods
sbb
push
push
add
enter
push
fs
jl
cmpsl
pop
je
jge
add
sub
jge
xchg
jns
fildl
je
cwtl
repnz
fists
rorl
mov
mov
and
inc
in
jnp
loope
shlb
xchg
jmp
loopne
inc
xchg
jo
dec
xchg
les
push
stos
test
add
loope
idivl
mov
jo
ja
popa
xchg
js
outsb
adc
add
jb
das
or
int
dec
jo
loope
adc
adc
pushf
sti
sub
pop
cmpsl
xchg
sbb
lock
in
je
repz
imull
or
pop
cmpsb
xor
pop
mov
ja
mov
test
xor
lock
pusha
mov
mov
push
imul
js
aas
rclb
push
mull
adc
pop
mov
pushl
push
adc
pop
xchg
pop
sarb
int
jno
out
pop
push
cwtl
lahf
loop
sbb
loop
add
lret
sti
ljmp
ret
stos
in
loop
out
adc
fistpll
jle
sbb
inc
cmp
fstpt
sbb
mov
lock
gs
dec
call
mov
mov
cmp
divb
int3
cmpsb
jne
pop
pop
psubusw
ret
js
sbb
mov
sub
sbb
dec
mov
xlat
xchg
adc
scas
mov
inc
jbe
mov
jle
stos
cmp
add
es
in
mov
xor
and
popa
scas
lds
in
dec
into
pop
data16
pop
aad
addr16
mov
xchg
push
push
loopne
jl
and
push
cli
fiaddl
imul
loope
into
pop
out
cmp
inc
push
std
insb
pop
repz
cli
loop
mov
jbe
dec
out
cmp
dec
xor
or
js
stc
pusha
scas
and
test
andl
enter
adc
sbb
and
or
dec
das
or
fbld
mov
mov
lret
rcl
in
popa
popf
mov
popa
inc
fsubrl
mov
dec
into
arpl
push
fstpl
adc
pop
mov
sub
sbb
pop
cmp
loope
adc
cmpb
out
stc
push
push
ljmp
push
sub
in
push
gs
or
scas
cmp
mov
sbb
movsb
and
xlat
xor
xor
sub
pop
dec
xchg
imul
ss
stc
mov
iret
loopne
lds
xor
pop
sti
jecxz
or
add
int
jo
pop
and
dec
ret
insb
dec
shlb
and
lret
movsl
pop
leave
cmp
push
sub
sub
sub
and
ret
cli
jne
mov
clc
shlb
movsl
int3
push
xchg
push
mov
repnz
loop
pushf
pop
push
addb
outsl
rolb
pop
or
out
mov
addr16
pop
les
push
jae
lret
jb
adc
call
cwtl
add
hlt
mov
mov
ret
push
mov
sub
sbb
mov
ljmp
xchg
dec
mov
faddp
test
pop
sti
testl
pop
shlb
sub
lds
push
aam
mov
je
je
sub
stos
pusha
les
adc
test
pop
jecxz
iret
sbb
jmp
mov
cmpsl
push
gs
ljmp
mov
stos
push
aad
mulb
pop
mov
shlb
shl
js
idivl
mov
pop
mov
scas
sti
cmp
jge
push
aas
inc
idiv
fldcw
adc
mov
mov
out
jp
xchg
adc
and
lods
xchg
arpl
nop
xchg
lret
sub
rep
add
cmp
dec
es
movsb
push
xor
cmpsb
cmp
sbb
or
fs
fldcw
bound
mov
loopne
stos
push
inc
mov
mov
es
std
xor
push
popa
sub
add
add
jo
cmc
jne
xchg
inc
addr16
sub
aad
js
inc
xor
arpl
call
xchg
or
lahf
or
repz
mov
jg
lret
inc
cmp
pop
cltd
les
inc
repnz
pop
mov
cs
xor
insb
int3
jge
aam
popa
pop
mov
or
insb
cmpsl
xchg
push
dec
lcall
repz
dec
mov
cmp
ret
repz
arpl
lods
fs
pusha
xor
inc
and
bound
add
popf
movsb
xor
jb
dec
mov
mov
mov
jmp
dec
fsubrl
cmp
pop
outsl
and
sbb
sbb
or
and
ret
jns
cmpl
mov
mov
dec
movsl
in
pop
pushf
test
pop
mov
push
out
xchg
mov
fs
imul
outsb
enter
cmpsl
sub
in
inc
or
sar
mov
pop
xor
dec
out
aad
sbb
and
pop
mov
jnp
loopne
sbb
lods
jbe
fsubs
sbb
xchg
cld
sbb
scas
cltd
stos
pop
and
pop
fscale
jecxz
in
jge
lcall
gs
sahf
lret
ret
jmp
pop
inc
adc
out
cmc
shrb
test
sahf
pusha
xor
aaa
hlt
adc
repnz
icebp
adc
ds
nop
cld
in
cmpsl
cmp
push
pop
mov
lahf
test
xchg
stos
leave
andb
xchg
gs
sbbb
sub
imul
enter
icebp
mov
movswl
lock
jo
fneni(8087
in
into
fwait
ret
sub
add
adc
pop
adc
mov
sub
jne
aaa
dec
mov
bound
xchg
ds
in
fmull
cmp
xlat
shlb
dec
loope
loop
ret
pop
jge
ja
sti
push
cwtl
add
das
in
xor
add
push
or
add
add
sub
xchg
rsm
add
xchg
cli
cmpsb
test
cmpl
push
mov
jno
xor
int3
dec
out
arpl
push
cli
out
test
cltd
jbe
pop
jne
testb
fdivrs
jp
cmp
cmc
je
or
movb
sub
popf
push
push
mov
cld
sub
int
mov
cmp
dec
mov
or
cmp
cmp
add
xchg
jbe
faddl
and
jo
mov
jae
roll
inc
lods
jge
adc
pshufw
xlat
mov
pop
outsl
outsb
push
cmp
fiadds
jl
arpl
cmc
loop
scas
mov
pop
dec
mov
shrl
mov
popa
nop
lahf
pop
pop
pop
mov
cld
xchg
xor
mov
out
hlt
dec
mov
push
rcrl
cmp
mov
arpl
jecxz
push
in
xchg
pop
ret
cmp
mov
jae
cmc
test
inc
mov
sbb
mov
or
xchg
dec
add
int3
jp
push
add
jo
aad
xor
lahf
fsubrs
ret
fidivl
addr16
and
cmp
aas
lock
nop
sub
in
jl
inc
xor
mov
and
mov
mov
movsl
leave
negl
les
add
or
pop
test
arpl
cwtl
iret
sbbb
aas
and
or
cld
push
out
fstpt
jle
mov
lods
fcmovbe
mov
dec
cmpsb
fsqrt
int
xor
add
loope
mov
fisubs
in
into
clc
js
repz
jge
rcrb
adc
mov
mov
lock
inc
mov
popa
push
pop
push
pop
push
cs
inc
rcl
dec
in
mov
xchg
ja
pushf
cmp
lret
cltd
sbb
dec
push
or
pusha
add
popa
lods
std
jg
sub
and
nop
leave
push
lods
pushf
rcl
mov
inc
test
jmp
jmp
imul
xchg
push
das
icebp
jo
adcb
or
divb
lahf
insb
push
rclb
xlat
dec
inc
ret
mov
inc
jp
sbb
pop
sbb
repz
and
in
sbb
and
cs
addr16
inc
fwait
jbe
rcrl
xchg
or
jecxz
ds
sub
add
mov
mov
xchg
cmp
fdiv
mov
jmp
addr16
enter
insb
fs
fbstp
stc
repnz
insb
cmp
sbb
jg
inc
add
mov
test
jg
das
xabort
nop
bound
cmp
xor
push
incl
outsb
rcrb
outsb
dec
jne
jae
or
dec
or
jnp
push
cmp
repnz
add
lods
pushf
and
repz
ret
mov
loop
aam
je
arpl
jnp
mov
jns
mov
mov
mov
shrl
popf
ljmp
mov
lds
enter
cmc
xor
add
xor
push
jno
inc
or
jne
ss
imull
sbb
fiaddl
mov
fistpll
enter
xor
inc
aaa
mov
sub
int
inc
sahf
lret
insl
mov
test
les
and
cmp
addb
mov
fildl
jecxz
sahf
insb
mov
shll
inc
xchg
xlat
xchg
xchg
icebp
sub
mov
popf
inc
in
pop
mov
pop
cwtl
xchg
icebp
repnz
or
pop
aam
add
and
inc
mov
pop
mov
fwait
outsb
jno
xchg
in
xchg
jno
pusha
shrl
shlb
je
sahf
repnz
orl
in
sar
addb
das
pushf
loope
movsl
pop
mov
testb
movsl
sbb
shll
movsb
loopne
mov
in
cmpsl
sub
andl
dec
nop
cmpsl
mov
cwtl
xchg
sub
jnp
jmp
mov
pop
movsb
adc
push
adc
mov
loope
out
lcall
jp
pop
push
dec
mov
rcr
iret
pop
inc
dec
test
push
mov
fldcw
flds
push
cwtl
popf
or
cmp
loopne
xchg
push
lods
xor
das
sti
and
or
xor
jo
xor
incb
movsl
push
test
dec
pop
scas
lods
cmpxchg
mov
jle
iret
push
mov
pop
push
or
push
dec
hlt
cmp
push
loopne
xchg
lret
xchg
andl
xor
dec
cmp
jp
notl
and
sub
insb
push
int
ret
lahf
orb
into
mov
mov
fstps
push
jg
jno
fld
mov
add
inc
cmp
lahf
shll
mov
ds
mov
dec
pop
popf
daa
aas
je
xor
jbe
add
cmp
mov
idiv
popf
push
jae
mov
icebp
jns
pop
push
mov
sbb
call
addr16
pop
xchg
lds
cmp
dec
mov
xor
test
bound
sub
dec
push
sub
pusha
imul
pop
mov
cld
lea
add
pop
nop
inc
adc
mov
sub
loopne
jns
movsl
jne
jne
push
push
ss
insl
mov
addb
mov
pop
das
pop
ret
fs
in
ss
lds
loope
movsl
jbe
xchg
add
mov
lcall
push
rorb
dec
loope
sbb
ss
fnstcw
pop
popa
leave
pop
inc
movsb
cwtl
sub
xchg
push
add
pop
idivb
add
pop
ret
fstpl
out
int3
push
clc
xchg
inc
cs
popf
or
cmp
xor
fnstcw
icebp
sti
sarb
lods
xchg
lods
and
xor
lds
pop
movzwl
and
int3
lds
or
adc
ljmp
outsl
stc
sbb
jns
lahf
jl
xorl
orb
mov
mov
push
aaa
mov
xchg
je
js
push
loope
test
aam
mov
stc
ficompl
shl
mov
jge
mov
mov
dec
inc
pop
sub
mov
call
push
mov
fbstp
and
movsl
xchg
mov
lea
pop
push
call
mov
inc
scas
xchg
sar
cmp
jge
adc
mov
pop
adc
push
dec
xchg
mov
vhsubpd
mov
mov
push
pop
xchg
dec
rclb
nop
lock
andl
cmpl
aas
aaa
and
mov
icebp
or
inc
test
pop
mov
test
fcmovu
fcoml
test
nop
push
inc
add
and
mov
shll
mov
push
addr16
mov
push
cmpsb
mov
dec
in
sbb
jle
and
sbb
xchg
dec
inc
xacquire
inc
rol
jg
jae
sbb
xchg
jp
test
mov
pop
or
dec
dec
sbb
dec
sbb
sbb
out
mov
lds
lods
testl
stos
pushf
fnstenv
adc
inc
jp
insb
jp
mov
in
mov
sbb
in
or
pop
mov
sub
add
jmp
outsl
cmp
add
push
cmc
stos
mov
bound
push
pop
and
and
pusha
pusha
fsubs
add
mov
lods
mull
js
lea
out
xor
mov
sub
cmpsl
sub
jns
rcll
daa
jbe
outsl
mov
das
mov
or
or
mull
add
mov
mov
push
pop
dec
add
js
shrb
add
pop
mov
push
push
dec
sbb
jo
dec
and
sarb
mov
xorl
push
add
mov
sbb
cltd
or
adc
push
add
outsb
cmp
lock
sahf
and
cmp
jns
add
xor
aas
and
cmpsl
dec
cmpleps
loop
sbbb
jmp
mov
mov
mov
repz
ror
lcall
cmp
mov
aam
ljmp
les
jecxz
push
test
xor
aaa
dec
insl
mov
and
mov
in
mov
cmc
jns
lret
mov
in
out
popa
loope
test
in
mov
ret
mov
cmpsb
jp
mov
pop
js
mov
jmp
mov
fmuls
ret
mov
jge
adc
inc
lret
aad
push
push
mov
and
sbb
pop
mov
ret
gs
adc
xor
out
icebp
aaa
pop
cwtl
sub
inc
xchg
test
iret
xor
push
out
xor
lods
aad
dec
cmp
jmp
mov
test
dec
jne
aad
sbb
gs
rorl
inc
imul
mov
jbe
push
aad
sbb
xchg
cs
xchg
xor
into
mov
xchg
out
cmp
or
jae
outsl
mov
push
int
push
mov
das
mov
ds
mov
bound
mov
pop
pushf
adc
mov
xor
call
pop
jecxz
ljmp
add
sub
add
pop
mov
sub
cmp
leave
sub
push
adc
xchg
fnsave
dec
sub
lcall
inc
mov
sbb
sbb
xor
repnz
cmp
push
fisubl
les
jne
sti
pop
xchg
test
adc
clc
outsl
addr16
inc
sbb
stos
or
into
add
push
fcomps
dec
xor
mov
xchg
xchg
and
jno
pusha
mov
popa
popf
ljmp
repz
arpl
sub
jne
pop
mov
andl
xor
loop
adc
fsqrt
call
pop
imul
repz
out
jmp
jg
fsubrl
inc
inc
sbb
imul
mov
sbb
push
mov
sbbb
mov
imul
ret
test
ss
sub
pop
cmp
xchg
fists
repz
jmp
test
xor
sbb
sub
test
mov
orl
pop
mov
sub
mov
or
loope
testb
push
xchg
clc
cmp
or
daa
shrb
popa
mov
in
ljmp
pop
in
cld
push
jmp
jl
out
pop
arpl
das
mul
dec
cmp
lahf
roll
dec
pop
std
in
pop
outsl
icebp
je
mov
pop
loopne
fsubs
or
lahf
push
gs
pop
mov
je
shlb
in
add
aaa
ljmp
dec
jl
jb
pop
popf
sbb
ljmp
inc
iret
jbe
cmpsl
mov
test
xchg
std
pop
lahf
pop
and
stc
pushl
fwait
xchg
in
push
lock
mov
jmp
xchg
aas
out
out
pop
roll
sub
mov
rclb
leave
in
jno
ret
cwtl
lahf
adc
xchg
neg
sbb
mull
or
andl
leave
les
and
flds
xlat
and
xchg
shlb
lahf
xor
scas
dec
inc
mov
loop
lret
cmp
mov
pop
sahf
pop
clc
mov
mov
cmp
fwait
add
insl
daa
xlat
xorl
mov
inc
mov
sbb
cs
jp
xor
or
jg
or
push
cmp
fcoms
mov
push
lds
jle
push
and
pop
outsl
ss
test
sbb
xor
aaa
loope
xor
inc
jmp
jecxz
xor
sub
or
bound
dec
test
xorl
leave
loopne
ret
jbe
dec
xor
cmp
push
pop
push
lret
ret
clc
iret
lods
fsubrl
scas
out
orl
mov
pushf
loop
sbb
or
lock
jbe
lods
das
mov
popa
jne
cwtl
adc
insb
cld
pushf
fstpt
fcmovu
sbb
bsf
jno
je
jnp
pop
call
adc
mov
xor
push
or
lods
outsb
ss
movsb
daa
iret
lods
push
inc
outsl
fnsave
cmp
adc
xchg
ret
lds
inc
cmp
mov
loop
mov
ja
out
xchg
dec
ud1
pushf
mov
jge
sub
mov
out
lret
sbb
inc
jb
mov
adc
es
jmp
and
jnp
jp
xchg
stc
enter
mov
mov
pop
mov
or
pop
sbb
sahf
mov
out
ficoml
mov
out
in
in
clc
jne
xchg
inc
imul
mov
jnp
scas
fsubrl
cmp
lahf
cltd
lock
in
inc
imul
cmp
lods
loop
rorl
inc
jnp
xor
es
xchg
or
cmpsb
jge
sbb
sbb
fwait
cmc
mov
mov
mov
insb
jno
jmp
or
jns
inc
js
imul
cmp
in
dec
scas
or
or
cmp
cli
push
sahf
jne
xor
and
lret
xchg
int3
lods
push
xor
cwtl
adc
in
lods
push
aad
ret
hlt
fucomi
cmpsb
popf
int3
iret
inc
add
les
jbe
js
scas
je
jmp
lock
gs
push
jo
dec
sti
arpl
ds
adc
bound
fwait
mov
and
inc
mov
pusha
adc
fadds
leave
jne
jnp
out
fimull
insl
test
adc
test
and
lret
fistpll
lcall
push
push
je
cld
cld
jge
test
fstpt
arpl
fdivrs
enter
and
or
cmp
cmpsl
data16
or
xor
jl
pop
fdivrp
enter
in
jo
iret
bound
jbe
xchg
loope
imul
add
jge
xchg
loop
imul
shl
add
imul
mov
pop
dec
xor
stos
test
sbb
jne
sbb
icebp
addl
or
fdivr
pop
jp
fbstp
jp
fdivrs
push
jmp
sbb
pusha
movsb
add
mov
imul
cmp
push
cli
es
popa
popf
adc
fidivrl
sarl
inc
cmpsb
fwait
push
xor
test
or
cli
xlat
mov
mov
cmpsl
fldcw
out
jecxz
imul
pop
lods
inc
cmpsb
push
pushw
jae
sahf
cli
hlt
outsb
ss
data16
cltd
mov
mov
pop
ja
stos
mov
xchg
pop
lea
inc
popf
ds
outsb
jnp
add
jno
es
xchg
jnp
out
repnz
add
imul
and
roll
icebp
add
xor
inc
and
leave
sbb
mov
test
xchg
inc
add
fs
lahf
inc
xor
fstcw
shlb
xchg
lods
insb
orb
adc
mov
or
mov
mov
dec
cmp
xor
cmc
mov
fucomi
cmp
pop
gs
mov
and
sub
mov
aam
adc
mov
or
xchg
jae
mov
xchg
xchg
movsb
jp
mov
in
xchg
ret
pop
leave
scas
filds
sbb
test
jb
adc
inc
lock
lock
mov
push
xor
leave
xor
rorb
arpl
mov
loop
mov
scas
pushf
xchg
or
lea
cltd
push
xorl
jmp
mov
mov
xchg
push
sub
adc
or
sub
je
and
push
dec
dec
adc
jb
sti
out
jae
aad
dec
cld
mov
loope
popf
not
cmc
sbb
sbb
jl
mov
jle
repz
push
aam
cmp
cmp
mov
xchg
fmuls
push
push
cmp
adc
sbb
outsl
test
int
lcall
imul
roll
push
bound
cmp
movsb
subl
pop
mov
cmpsl
pop
stos
lahf
push
and
jmp
xorl
fistpll
cmp
adc
lahf
rorl
inc
dec
mov
push
push
mov
movb
push
sub
dec
cmp
arpl
push
cmp
test
rdmsr
cmpsb
xchg
out
in
pop
out
hlt
repnz
cmp
scas
fbstp
mov
int
lods
jg
pop
xor
pusha
inc
jmp
mov
mov
lds
sub
fwait
aas
fildl
fs
incb
incb
aas
movsb
xchg
mov
lods
fidivrs
push
mov
aas
pop
adc
andl
jae
xchg
shrd
outsl
leave
out
ds
fwait
mov
imul
leave
or
adc
int
inc
cmp
push
insl
shr
jg
adc
mov
pushl
shl
xor
lahf
lret
stos
gs
data16
popa
dec
pop
mov
lds
arpl
rol
cmpsl
lds
jg
fsubrl
imul
bound
andl
scas
in
mov
iret
push
mov
jne
rolb
sub
xchg
inc
stos
xchg
test
loopne
xlat
mov
lahf
xchg
pop
or
pop
popf
insb
pop
sub
testb
and
lds
ss
push
and
mov
std
push
sbb
push
rol
ret
xor
sbb
push
jo
jmp
cwtl
test
or
jle
mov
pop
jp
pop
jg
setl
mov
or
fs
mov
push
pop
mov
int3
dec
lea
jnp
mov
or
dec
adcb
add
cmp
push
cmp
cmp
sti
pop
rorb
jno
push
push
and
fnsave
outsb
in
rcrb
aam
lcall
imul
shrb
sbb
stos
and
aas
xchg
sub
stos
outsb
add
push
push
jno
jnp
cmp
push
and
add
gs
push
cmp
outsl
stc
aas
bound
adc
push
call
mov
mov
and
sbb
ljmp
xchg
pop
out
fs
xchg
lret
jg
aaa
mov
jo
jge
movsb
and
mov
arpl
fcmovnu
cmp
insb
push
push
and
sub
lret
sub
inc
xor
pop
adc
xor
cli
idivl
sbb
shrb
fsubl
lahf
in
push
into
leave
cmp
xor
pop
insb
xor
and
xor
ss
int
enter
adc
mov
and
sub
sub
jl
cmp
and
nop
pop
pop
sbb
jg
and
jne
xchg
inc
lods
loopne
insb
std
enter
mov
or
inc
adc
pop
push
xchg
add
pop
and
imul
jno
adc
push
scas
cmp
jmp
xchg
jge
pop
push
xorb
ljmp
fsub
mov
mov
fists
xor
out
mov
xor
insl
xchg
repnz
adc
pop
outsl
sahf
aam
jp
imul
clc
add
outsb
insb
das
cmp
and
fsubr
sub
sbbb
sub
xchg
bound
xor
and
fnstenv
cmp
cmp
leave
ret
mov
mov
jnp
outsb
sub
in
push
mov
dec
mov
or
mov
xchg
sub
jno
lods
popa
mov
sub
inc
aaa
xchg
mov
mov
loop
ret
stos
inc
sub
adc
aaa
lods
daa
adc
fstps
mov
cmp
lret
or
mov
or
andl
call
mov
out
lods
fisttpll
or
jl
sbb
cmp
je
adc
sbb
mov
jnp
xchg
adc
sub
movsb
int3
cwtl
add
out
mov
cmp
push
call
ss
loop
lods
out
adc
in
adc
xchg
jle
mov
or
mov
aas
pop
pop
push
push
jnp
js
ret
jns
fisubrl
xor
movsb
xchg
imull
fcoms
lds
faddl
and
cld
cmp
lea
test
mov
int
fiaddl
push
addr16
insb
clc
outsl
mov
mov
and
ss
insb
repz
in
loopne
mov
in
dec
and
popa
xorb
idiv
xchg
and
inc
push
cli
add
push
mov
jecxz
aas
cmp
test
inc
pop
sti
loop
xlat
jns
add
sbb
pop
jo
bound
ds
fiaddl
pop
pusha
mov
mov
mov
mov
in
jg
shlb
addr16
out
out
rclb
jbe
jle
xor
leave
aad
ret
adc
and
stos
adc
popa
sbb
adc
in
push
fistpll
push
dec
rolb
jl
jl
sub
scas
ficoml
xchg
or
xor
aad
aaa
xchg
xlat
push
ljmp
and
jns
pop
rclb
out
cmp
add
push
xlat
fnsave
lods
js
xor
dec
sub
dec
mov
fisttpl
inc
push
mov
sbb
loopne
pop
dec
mov
sub
sub
xor
loopne
sbb
test
outsb
pop
xor
or
adc
mov
dec
or
shll
cli
cmpsl
ficomps
mov
push
call
jo
mov
dec
mov
stc
add
lock
mov
test
or
daa
add
and
cmc
mov
xchg
pop
flds
adc
pop
xchg
and
cli
sbb
cwtl
int3
xor
push
fs
adc
xor
pop
movsb
sbb
sbb
in
ds
loopne
jg
xor
and
insl
xor
cmp
dec
push
mov
aam
imul
int
dec
je
mov
xchg
jecxz
loope
repnz
mov
mov
andb
aad
insl
cmp
test
and
ljmp
jl
inc
xchg
imul
cld
sahf
bound
pop
mov
xchg
lods
xor
pop
aaa
jns
repnz
bound
or
xlat
mov
mov
shlb
in
inc
jns
pop
pusha
fdivl
pop
jne
sub
faddl
pop
push
out
fstps
add
in
or
adc
and
dec
xor
mov
inc
leave
add
mov
imul
xor
sub
cmpsb
bndldx
dec
int3
idiv
jl
fwait
outsl
pop
outsl
pop
mov
nop
pop
lea
pop
js
out
push
rcll
mov
int3
sbb
out
mov
shlb
in
ss
stc
sbb
ds
outsb
je
or
les
jae
jle
xor
sbb
fcmovne
dec
add
jl
cmpsb
sbb
loop
pop
sbb
xchg
mov
adc
xchg
movsb
push
xchg
jnp
add
pop
sbb
jae
enter
addr16
stos
sbb
arpl
dec
cmpsl
sub
xor
mov
inc
and
or
rcll
push
adc
sti
adc
aad
inc
lea
jns
xor
js
mov
fstl
mov
pop
pop
push
or
decl
mov
mov
bound
adc
sbb
xorl
ret
pop
mov
pop
mov
cmp
fwait
push
lods
mov
lds
xchg
inc
or
test
cmp
mov
aad
imul
sub
jb
jecxz
mov
mov
jl
push
push
out
and
inc
pop
add
rclb
fwait
or
mov
fstps
push
mov
mov
sar
or
cld
ja
cmpsb
and
xchg
out
dec
dec
ja
fs
leave
in
sbb
data16
xchg
dec
mov
mov
lock
popa
das
rcrl
mov
jp
mov
jl
and
push
in
inc
mov
stos
int
scas
dec
lock
mov
cmp
and
outsb
mov
mov
lcall
pop
cmp
push
in
dec
mov
sbb
adc
dec
ljmp
sub
aad
jl
cmp
add
jno
test
pop
pop
dec
adcl
andb
mov
sahf
sub
int3
mov
jb
xchg
xorb
jbe
xchg
lahf
xchg
mov
into
cmpsl
sub
fsubl
xlat
and
inc
test
jle
jecxz
or
xor
stc
test
mov
jno
scas
hlt
test
cli
sbbb
in
cmpl
inc
or
ljmp
cs
add
into
enter
xlat
out
mov
sub
ds
mov
mov
mov
cltd
mov
into
cwtl
sbb
icebp
xchg
push
lea
jno
dec
dec
push
shlb
lods
mov
rolb
insl
or
adcb
ljmp
lret
xor
insb
cmp
or
std
repnz
jo
ret
gs
sub
mov
out
xlat
fisubs
sub
add
mov
jmp
mov
fcmovb
jecxz
pop
jo
or
sahf
outsb
add
aaa
push
aas
int3
clc
testb
imul
jbe
repz
push
mov
inc
push
outsb
rclb
jp
lcall
sbb
aam
jae
test
jnp
jnp
pushf
xchg
xchg
in
dec
pop
stos
or
inc
adc
mov
jae
jae
jns
ss
sub
lock
lret
add
aad
push
aas
inc
push
insl
and
push
cld
dec
xorb
lret
inc
popa
pop
mov
pop
addb
mov
inc
mov
sbb
mov
cmpsb
push
pusha
xchg
xchg
pop
cmpsl
fidivrs
cwtl
add
mov
fdivrp
test
dec
xchg
ret
repnz
xorb
inc
xlat
jp
cmc
or
icebp
filds
andb
adc
ret
inc
dec
pusha
arpl
jl
jnp
and
pop
mov
cltd
xor
insb
pop
int
push
jecxz
addr16
xor
ret
push
sbb
mov
in
push
cmc
xchg
in
stc
xchg
push
lcall
sub
cmp
xchg
stc
xor
push
ds
shl
ja
mov
push
subb
push
sub
mov
call
in
fisubrs
je
push
les
sub
fdivrs
loopne
jmp
xchg
push
xor
loope
ret
push
jnp
sbb
dec
xchg
mov
or
loopne
nop
gs
popa
mov
out
out
jns
jecxz
push
cmp
mov
stc
jnp
sahf
or
mov
pusha
dec
inc
or
les
fiadds
jg
inc
push
cmp
and
lret
pop
mov
cli
xchg
bound
xor
call
mov
mov
jbe
pop
fildll
int
xchg
loop
inc
lret
hlt
jo
add
outsb
or
test
nop
add
and
jmp
fistps
add
sbb
aas
notl
rcrl
xor
xchg
fcoms
pop
or
xchg
outsl
add
mov
sbb
sbb
loopne
push
hlt
out
mov
or
arpl
into
push
aam
jp
aam
mul
roll
mov
or
gs
jg
imul
or
sub
lea
xor
fsts
lcall
jno
into
scas
dec
mov
push
dec
push
in
dec
stc
gs
les
inc
xchg
icebp
lock
mov
sub
and
pushf
lcall
mov
imul
sub
mov
adc
sbb
dec
arpl
push
rolb
cmp
into
push
enter
es
jp
jnp
aas
aaa
repnz
adc
or
popa
inc
dec
inc
insl
in
sahf
mov
mov
call
ljmp
xchg
mov
mov
cmp
aad
jo
dec
jne
and
jae
orb
fnstenv
lea
jmp
outsl
sub
adcb
sub
int
mov
lret
test
lahf
push
shll
or
out
iret
cmp
fwait
aas
out
repz
pop
mov
bound
and
cmp
pop
pop
sbb
jno
lods
push
add
jae
jbe
repnz
inc
inc
nop
cld
pop
dec
gs
jmp
sahf
in
dec
or
xor
lock
lods
mov
push
push
scas
push
movsb
pop
mov
test
mov
daa
popf
jns
pop
xlat
fisubs
mov
jg
pop
pop
mov
repnz
ret
xor
mov
mov
sub
and
mov
fdivrs
std
repnz
aas
cmp
sahf
addr16
inc
leave
cli
into
test
cmp
test
loopne
arpl
lds
into
mov
pop
mov
dec
mov
cmpsb
mov
cmpl
mov
xor
add
push
outsb
adc
cld
insb
xor
jno
mov
push
outsb
inc
int3
lock
push
test
ja
pop
inc
cmp
idivl
jb
push
je
into
and
dec
popf
fstpl
in
pop
cmp
push
mov
gs
fnstsw
pusha
int3
mov
pop
or
and
pop
mov
je
stos
fdiv
jno
cltd
insb
popfw
sbb
pop
mul
ficomps
aas
in
push
adc
jnp
je
push
cld
mov
inc
into
je
cwtl
lahf
iret
sti
xchg
jp
loop
push
repz
cmpsb
dec
lock
xchg
repnz
jl
inc
pop
jnp
xchg
mov
sbb
sbb
mov
icebp
jne
adc
xor
imul
int
movsb
sub
imulb
mov
xchg
test
je
js
add
push
sub
les
add
icebp
arpl
or
pop
test
jg
sahf
jmp
les
rcrl
repnz
out
mov
mov
stos
lcall
pop
lods
jns
fsts
scas
idivb
test
fnsave
mov
aaa
sbb
arpl
shll
sub
push
add
ficoms
xchg
add
cmpsl
in
lret
test
mov
out
cmp
sbb
xor
arpl
es
add
ja
adc
jp
xorl
sar
dec
xchg
or
loopne
leave
pop
and
cs
aad
loop
repz
jge
into
pop
xor
sarl
pusha
mov
int3
roll
mov
cmp
cwtl
mov
mov
lods
and
jbe,pn
insb
or
mov
pop
push
fcoms
nop
arpl
stos
in
lods
push
loope
jle
add
ret
and
out
leave
mov
mov
adc
and
out
inc
sbb
jge
adc
cmp
push
in
jne
push
andnps
xlat
fidivrl
xor
pusha
scas
jge
subb
cld
inc
bound
aaa
mov
push
jne
mov
ret
mov
loopne
stos
sub
ds
punpckhdq
mov
lds
nop
sub
mov
xchg
and
call
xor
or
jno
xlat
add
push
xor
mov
into
push
sbb
lret
add
pop
lret
sar
cmp
mov
xchg
js
jb
pop
int3
or
pop
sub
outsl
outsl
mov
incl
push
cmpsb
cmp
movsl
sti
stos
imul
cmp
mov
psubw
add
incb
das
push
jecxz
sub
push
xchg
loopne
mov
aas
cmp
cwtl
mov
mov
aad
js
sti
mov
and
and
test
sbb
dec
jb
cmpsl
adc
imul
mov
jbe
sahf
and
push
in
repz
adc
out
add
sahf
ds
add
test
and
nop
sar
clc
adc
outsb
xchg
aam
shll
jl
lds
add
dec
xor
and
insb
and
cmpsl
xor
ja
adc
clc
mov
push
xchg
add
das
or
incl
push
jnp
test
inc
mov
leave
cli
pop
sbb
push
pop
ss
push
xchg
pop
daa
in
inc
orb
mov
dec
jbe
dec
sub
loope
sub
rorb
xlat
orl
push
xor
push
insb
inc
inc
fdivrp
cmovo
lret
daa
xchg
mov
gs
aaa
roll
jnp
pop
in
mov
and
adc
or
dec
fisubl
in
scas
mov
and
mov
add
mov
test
outsl
clc
clc
mov
xchg
mov
and
adc
inc
xor
fldcw
lods
dec
popa
mov
pop
movsb
xlat
lret
and
pop
pop
xchg
pusha
mov
mov
cmp
mov
or
sub
add
xchg
add
jl
add
lods
inc
mov
push
cld
xchg
aam
dec
jmp
jge
xchg
ret
int3
pop
outsl
inc
dec
dec
adc
pushf
mov
jmp
pop
cs
hlt
mov
leave
fimull
mov
mov
das
in
or
fldl
xor
cmp
xchg
mov
sarb
ror
jne
jecxz
add
js
inc
pop
jne
mov
nop
mov
aad
ja
xlat
jmp
mov
dec
sar
push
cmp
jbe
or
sbb
lret
ja
lret
inc
in
mov
push
pop
cmpl
popf
test
dec
jne
mov
subl
mov
dec
push
out
mov
ljmp
mov
mov
dec
cwtl
mov
mov
or
aad
ret
push
lea
adc
iret
add
fwait
inc
add
add
push
popf
les
jmp
jo
mov
pop
or
mov
mov
cmp
movsb
xor
gs
jg
pop
push
jmp
aas
pop
arpl
fwait
cmpsb
clc
sbb
pop
rcll
adc
cmpsb
es
mov
inc
adc
test
stc
push
add
jmp
rcrl
aaa
adc
hlt
enter
out
and
add
fxch
xor
mov
fisubrl
mov
and
inc
add
insb
cmovge
outsb
not
clc
dec
or
pop
cmc
outsl
pop
hlt
add
fildl
and
inc
sarb
xchg
sahf
sub
pop
enter
mov
lods
xor
sub
out
push
into
je
push
stos
mov
dec
icebp
add
sbb
jne
inc
int
push
mov
test
ss
jne
mov
dec
lds
jno
fdivl
dec
into
or
and
lods
arpl
or
adc
shrb
and
int3
push
lahf
jl
mov
sbb
or
xor
add
xchg
in
mov
ss
in
add
in
fs
adcl
fisubrs
sbb
cld
lea
cwtl
mov
aaa
pop
pusha
fwait
imul
adc
push
xchg
int3
inc
inc
and
mov
lods
jnp
or
test
addr16
mov
aas
pop
mov
arpl
inc
loopne
cwtl
sbb
insl
int3
js
and
or
scas
subl
pop
xor
xor
out
mov
out
loope
ljmp
faddp
test
sbb
jno
divl
ds
adc
jge
cmp
cwtl
push
icebp
xchg
aad
decl
pop
fs
test
xchg
cmpsb
mov
jae
jl
scas
fcmove
pop
adc
push
xchg
adc
jo
pop
in
dec
lods
cwtl
adc
mov
mov
cmc
push
cs
fcoms
sub
jae
and
jge
out
lcall
pop
out
or
jae
xchg
pop
cmc
mov
pop
insl
ret
mov
pop
lret
add
mov
jmp
sbbl
imul
ror
cmp
popa
lret
pusha
repnz
push
jb
jge
sub
cs
lahf
addb
push
xor
in
lods
mov
js
cmp
inc
movsb
push
sbb
je
dec
adc
or
repz
mov
xchg
dec
lcall
add
mov
adc
mov
ret
scas
cld
leave
pop
dec
mov
sub
pusha
mov
mov
and
sub
or
xor
mov
inc
dec
lret
or
pusha
inc
mov
cs
outsb
js
stc
mov
sar
and
xchg
mov
jns
and
hlt
sbb
in
arpl
movsb
or
in
mov
insb
adc
ret
negl
shll
lahf
dec
xchg
mov
sbb
xchg
push
fisttpll
pop
jle
into
aad
nop
shll
inc
jo
inc
cli
mov
arpl
les
lods
pusha
ljmp
dec
jne
fisubrs
jl
popf
sub
imul
or
pop
pop
pop
js
fistps
hlt
sar
xchg
addr16
lret
pop
jnp
movsl
cmpsb
in
je
adc
popf
inc
in
cmpsl
jmp
rcll
jns
jge
xchg
lahf
lret
es
lcall
and
fldcw
push
mov
mov
push
stc
mov
hlt
mov
insl
arpl
cmp
pop
xor
out
sbb
or
jns
loop
pop
cmp
mov
out
xchg
xchg
or
imul
fcmovne
sub
adc
adc
pop
daa
lea
jecxz
data16
push
or
sub
mov
or
mov
push
cmp
sub
lea
cmc
stos
insl
inc
push
jns
jno
fmull
test
sub
scas
leave
rorl
or
imul
mov
stos
or
sbb
dec
mov
inc
ficomps
imul
sub
jg
mov
stos
sti
sub
rclb
sub
pop
js
adc
xchg
adc
stos
xchg
mov
inc
push
cs
hlt
or
stc
lahf
fisttps
inc
jle
and
movsl
dec
in
int
in
test
or
test
xchg
fwait
cmc
and
inc
dec
jp
cltd
sbb
out
cmp
xor
jo
adc
or
push
ret
jmp
xor
ja
ror
mov
adc
pushf
lret
popa
mov
xchg
repz
lret
sbb
mov
stos
lea
pusha
inc
scas
das
xor
jnp
push
loope
mov
xchg
jnp
rol
fld
cmp
pop
orl
mov
movsb
rorl
mov
push
and
push
iret
cltd
stos
ret
pop
pop
xchg
dec
sub
imul
mov
hlt
inc
sub
xchg
sahf
js
data16
cmp
ja
inc
jae
push
sub
xchg
mov
sub
jne
push
dec
pop
or
and
pushf
lret
arpl
jne
push
ljmp
cs
cmpb
aam
xchg
push
stos
mov
fdivp
arpl
repz
push
fcoms
jge
rcr
pop
jae
ret
mov
test
jmp
aad
pop
inc
fwait
lds
or
lahf
inc
xchg
dec
jns
int3
cld
lret
fcoms
in
dec
js
fs
dec
lea
push
mov
test
popf
aad
test
pop
inc
mov
push
inc
movsl
fdiv
dec
xor
cld
adcb
dec
xchg
push
xchg
dec
adcb
add
cmpsl
mov
pop
popa
loop
pop
push
movsl
imul
imul
jns
test
icebp
subb
sbb
cld
xlat
sub
mov
push
xchg
div
cs
xchg
pop
cmp
mov
jnp
aaa
sub
inc
or
ret
das
add
mov
in
mov
push
sarb
add
mov
inc
loopne
add
cmp
pop
loopne
dec
imul
cld
aaa
in
outsl
or
jecxz
cmp
insb
popa
sbb
cwtl
or
mov
out
push
xor
sub
pop
loopne
sbb
push
xlat
or
stc
cwtl
inc
in
leave
mov
jae
ja
xchg
imul
and
push
mov
into
je
cmp
into
adc
and
js
add
pop
outsl
push
arpl
inc
cmp
jbe
repnz
out
inc
into
push
push
inc
in
test
dec
lea
and
xlat
adc
xchg
cs
stos
jb
adc
mov
sbb
pushf
xlat
mov
movsl
pop
adc
stc
mov
mov
iret
mov
sbb
in
mov
push
adc
jmp
out
push
jecxz
xchg
aam
loopne
dec
ds
dec
movsl
pop
mov
adcl
mov
pop
cld
incl
xlat
shrl
out
xor
gs
pop
aaa
test
dec
mov
ret
adc
cmp
ljmp
mov
sub
test
call
imul
jmp
mov
or
in
push
hlt
iret
jge
enter
shll
les
push
add
mov
pop
mov
test
fcompl
ljmp
xchg
outsb
sbbl
add
mov
mov
adc
lret
sbb
adc
xlat
movsb
lods
inc
outsl
pop
lods
cmpsb
mov
add
sub
cmc
inc
ret
mov
add
xchg
test
enter
add
mov
les
mov
out
mov
adc
aas
pop
and
mov
xchg
xchg
aad
daa
push
mov
popa
aad
xor
nop
cs
sbb
mov
jno
outsb
stos
jmp
repnz
pop
mov
mov
leave
addr16
std
mov
fadds
or
jg
mov
xlat
mov
jbe
jl
test
inc
shl
movsl
xlat
sti
lods
add
mov
mov
xorb
sar
mov
xor
xchg
pop
jmp
xchg
sub
inc
jne
in
ja
aad
and
mov
subb
into
sub
jae
outsb
pop
je
dec
mov
fcoml
jo
popa
mov
sahf
mov
in
xor
push
or
xchg
jp
cmc
mov
jmp
xor
cmpsb
rol
imul
push
cmc
lahf
mov
aaa
call
sahf
mov
pop
xchg
fdivrl
cmpsb
cmp
push
xor
clc
push
adc
fs
outsl
ljmp
jge
ja
test
fstps
xor
fildl
ss
xor
adc
jecxz
add
ret
sub
shrb
and
push
ss
xchg
decl
fwait
test
test
rorb
adc
xchg
pop
testl
mov
lahf
test
jnp
jmp
sbb
mov
jg
insl
decl
shlb
call
sbb
stos
sahf
xchg
xchg
fs
je
fldl
push
aam
mov
push
cmc
popf
adc
in
sti
mov
jbe
inc
popa
or
cmp
pop
sbb
pop
lahf
xchg
and
cmc
scas
jle
pop
mov
jecxz
aaa
lret
pop
push
movsb
or
stc
iret
push
das
xlat
je
jnp
and
jb
daa
dec
shr
jns
xchg
cmpl
fs
aad
push
addr16
mov
cli
cmp
call
xor
xchg
or
push
mov
mov
sub
ret
int3
push
mov
sbb
mov
pop
pop
dec
mov
cmc
adc
push
mov
das
adc
out
adc
mov
das
mov
mov
cmp
adc
sbb
adc
pop
cmp
adc
out
in
dec
mov
xor
pop
adc
push
repnz
xchg
adc
sar
mov
ja
sbb
sarb
jl
mov
inc
pop
loope
popa
sti
ret
loopne
push
xorb
add
mov
inc
sbb
iret
cmp
sub
js
cmpsl
cltd
mov
mov
les
repnz
xor
fisubrl
xchg
jl
setb
pusha
rolb
cmpsl
xor
jbe
push
lods
mov
out
and
dec
mov
repz
aaa
bound
xor
lods
pop
cmp
push
mov
in
jmp
arpl
mov
nop
ficomps
lods
fisubs
mov
addr16
popf
addr16
mov
lret
fs
push
es
aam
data16
movsb
dec
leave
je
repz
mov
pop
cwtl
mov
mov
outsl
or
mov
out
lods
cmp
adc
lds
or
sbb
or
sbb
push
dec
sti
xorb
xchg
int
mov
lahf
xor
imul
je
push
or
xor
mov
and
popa
lds
sahf
jmp
jnp
aaa
cmpsb
cltd
shlb
sub
out
xchg
out
clc
test
fwait
mov
in
leave
loopne
jmp
push
sbb
xor
outsb
scas
add
mov
adc
popa
loopne
imul
xor
cs
mov
enter
fists
add
xchg
sub
sbb
lret
int3
or
stos
daa
fs
shlb
sub
jge
into
sbb
pop
pop
outsl
mov
std
fisubrs
std
pop
into
jp
addr16
test
fidivl
test
dec
add
adc
dec
notb
loopne
js
enter
sub
cmpsb
push
imul
jge
adc
dec
repz
or
dec
or
leave
push
outsb
jmp
xchg
fstpl
addr16
xchg
push
sub
mov
stos
mov
pop
mov
bound
mov
in
fbld
mov
xlat
push
cmp
leave
xor
shrb
es
loop
xor
outsl
cwtl
shll
je
pop
lret
inc
cmp
mov
test
jg
cmp
inc
inc
das
mov
imul
dec
cmp
popa
loope
inc
dec
das
xor
loope
cmpsb
daa
cmp
cmpsb
in
aas
mov
sub
dec
loopne
fistpll
fcmovb
or
jecxz
push
bound
rcr
inc
ret
test
adc
mov
mov
shl
dec
stc
into
les
stc
loopne
popf
sbb
lahf
or
sub
ds
jmp
movsl
push
cwtl
or
pop
xchg
mov
out
push
ds
lahf
dec
enter
hlt
add
aaa
mov
xchg
push
push
pop
push
sub
push
loope
imul
lods
adc
lret
pop
rolb
mov
leave
add
xchg
adc
mov
or
jl
and
cmc
sbb
out
in
mov
movsl
add
and
inc
cmp
jb
nop
cwtl
xor
or
movl
mov
add
idiv
imul
dec
data16
es
adc
out
flds
sub
add
loope
repz
scas
mov
mov
jbe
or
push
fiadds
dec
mov
pusha
sub
jno
in
hlt
loope
hlt
jb
mov
dec
roll
enter
daa
and
test
xor
adc
xchg
cmp
push
xchg
shlb
sahf
dec
mov
push
int3
iret
pop
xor
gs
mov
notl
sub
fsubr
mov
and
pop
aas
add
lcall
les
mov
iret
loope
sbb
and
lea
cmp
sbb
pop
xor
mov
inc
movnti
pusha
mov
mov
lcall
and
imul
push
fld
lods
enter
incl
test
sti
negb
mov
add
insl
testl
movsb
mov
inc
add
inc
xor
outsl
lods
in
and
sub
out
pop
dec
movsl
xchg
xlat
pusha
into
jp
ja
xlat
mov
fimuls
in
adc
in
dec
sub
mov
into
in
pop
jno
mov
or
mov
call
push
dec
or
xchg
sbb
in
xor
cmc
jmp
sbb
mov
mov
mov
lds
xor
push
mov
ret
sub
mov
lock
arpl
rcrl
mov
movsb
movsl
insb
stos
cltd
jae
imul
or
vcomisd
mov
aam
cmp
shl
ds
lea
jge
push
adcb
push
push
loopne
clc
inc
sub
mov
dec
test
adc
hlt
ss
iretw
cli
xchg
push
and
dec
fs
loope
mov
mov
neg
add
mov
lds
inc
mov
mov
mov
mov
aam
stos
inc
pushf
lret
ja
test
outsl
loope
xor
mov
jno
cld
inc
rol
js
pop
inc
lea
sarl
std
pop
insl
jns
out
scas
aas
pop
inc
fstpl
imul
mov
or
fs
xor
aad
insl
lods
xchg
push
xchg
rol
mov
dec
sub
leave
xor
call
and
mov
lahf
out
out
lock
outsl
or
jl
sub
push
sahf
push
dec
inc
dec
sarl
xor
dec
sahf
and
sahf
int
inc
push
xorl
ljmp
mov
ret
push
mov
adc
arpl
std
xlat
jmp
aad
mov
pusha
xchg
push
push
pop
jg
sub
cmpsb
rcl
sar
mov
dec
push
jns
mov
xchg
clc
js
test
insb
subl
jecxz
inc
movsl
clc
jmp
and
push
in
ficompl
leave
sub
mov
jle
data16
or
pop
push
fucomi
lahf
xchg
shl
test
movsb
fidivrs
push
push
push
mov
lods
push
mov
mov
push
mov
lock
out
dec
cmp
mov
jnp
or
shlb
mov
in
iret
cmp
sub
lock
stc
add
mov
je
pop
push
adc
or
adc
push
or
xor
bound
loopne
xor
add
xlat
jmp
sahf
outsl
dec
sbb
lret
push
sub
xchg
or
mov
int
add
mov
addr16
popa
ret
xor
cld
xlat
cld
push
mov
or
and
scas
pop
inc
cmp
mov
xchg
in
cmp
cmc
mov
xchg
xor
cmp
or
cli
in
jae
mov
sti
ja
outsl
les
add
jp
lock
aam
mull
daa
data16
cmp
jecxz
mov
gs
sub
nop
mov
jno
rcr
xchg
pop
xor
popf
pop
nop
cmp
call
dec
data16
scas
add
adc
lahf
inc
jg
jbe
dec
pop
xlat
fwait
testl
loope
or
dec
and
cmp
xchg
pushf
xor
sub
xchg
mov
gs
pop
aaa
xchg
dec
test
mov
ret
mov
lds
gs
jl
bound
mov
lret
popl
mov
je
mov
aam
mov
or
mov
or
daa
adc
lea
rorb
fdivrs
pop
in
movsl
mov
and
push
mov
mov
sbb
rcrl
push
sti
mov
out
pop
lret
xlat
aaa
cmpsb
movl
sbb
adc
pop
jl
imul
in
sub
out
in
mov
push
popf
jae
lea
mov
loopne
sahf
lcall
addl
into
call
in
ret
push
jecxz
popa
mov
cwtl
nop
cmp
pop
imul
add
mov
sbb
leave
ljmp
cli
fiadds
dec
push
mov
rcl
inc
jb
loop
movsb
sub
lret
inc
cs
movsl
enter
scas
jnp
mov
add
push
les
outsl
pop
rclb
cld
mov
das
xchg
jle
iret
xchg
dec
ret
das
sub
gs
xchg
adc
arpl
sbb
pushf
adc
cmp
jle
sub
gs
mov
push
fcmovne
insb
add
push
mov
imul
cmpsl
dec
and
enter
loop
mov
sti
dec
or
and
cli
mov
outsl
inc
dec
pop
jle
call
sbb
xchg
lret
adc
pop
jle
repz
xor
and
mov
pop
sub
mov
inc
repnz
dec
hlt
xchg
test
shrb
lret
sahf
loope
xor
das
lahf
pushf
test
lock
adc
pop
cltd
ret
daa
outsb
jmp
call
movsb
mov
xor
push
call
push
push
fwait
sub
lds
jmp
cmpsl
xchg
xchg
loopne
jbe
xor
std
fs
jmp
xor
cmpsl
pop
rorb
je
dec
cmp
sbb
nop
xlat
orb
sub
push
sub
mov
dec
sarb
daa
mov
cmpsl
mov
xchg
jne
add
pop
test
adc
jge
loop
jmp
or
add
jno
inc
nop
sti
cmp
out
dec
imul
pop
mov
pop
and
into
mov
cltd
jns
insb
in
jl
test
xchg
arpl
lcall
jb
inc
pop
call
call
movl
loopne
ret
fsubrl
pop
mov
ljmp
test
pop
pop
push
xchg
mov
lret
mov
daa
push
shrb
jb
imul
push
insl
mov
xchg
rol
lret
adc
pop
mov
cmp
daa
sub
jp
lcall
mov
outsb
xchg
nop
cs
push
mov
jo
aad
lods
stc
and
pop
rclb
mov
xchg
cltd
aam
test
aas
pshufw
sub
jne
mov
and
mov
ljmp
inc
pop
dec
add
daa
inc
mov
js
lock
inc
ret
sahf
inc
mov
and
int
out
fsubs
jae
dec
adc
loopne
fnsave
jp
jl
aaa
aam
mov
sbb
pop
push
jl
mov
aad
shlb
call
pop
fwait
pop
cmp
rorb
pop
pop
pushf
lcall
aaa
enter
dec
mov
cmp
leave
stc
iret
test
adc
outsl
inc
jo
xor
stos
imulb
fidivrs
cmc
mov
ljmp
mov
cmp
xchg
mov
add
xlat
inc
test
sbb
out
sub
in
les
sub
push
movsl
sub
lods
loope
pop
sub
mov
iret
pop
pop
jl
push
testb
lahf
cltd
arpl
mov
popf
cmp
jp
rorl
inc
dec
sub
push
cwtl
decb
incl
stc
jne
push
test
in
push
mov
cwtl
adc
or
adc
cmpsb
mov
in
sub
xchg
iret
leave
and
daa
inc
mov
je
pop
pushf
inc
faddl
xchg
cmp
xlat
jmp
xor
sub
out
idivl
daa
dec
dec
sub
cmpl
fdivrs
cmp
leave
or
in
ljmp
leave
imul
mulb
jp
daa
out
ret
movsl
mov
lock
sbb
lret
repnz
push
or
xor
pop
jg
mov
cwtl
aam
stc
sbb
sub
loope
shl
jge
xchg
and
mov
lods
arpl
outsl
lret
sbb
insl
mov
pusha
sbb
mov
inc
mov
jne
sbb
sbb
pop
xor
push
adc
sarl
push
cmp
mov
les
inc
jg
popa
popf
xor
xchg
xor
sar
jp
pusha
scas
in
mov
popa
lock
jbe
cmp
inc
dec
pmulhuw
sbb
idivb
jbe
test
addl
pop
jg
movsb
adc
jmp
lcall
push
add
andl
cwtl
xor
and
or
xor
mov
fbld
mov
xorb
cmpsl
mov
fisubs
jle
xor
mov
repz
push
daa
xchg
xor
or
loop
sbbl
cmp
jo
xor
aad
gs
cmp
daa
in
ss
ds
push
hlt
hlt
sub
aad
dec
sbb
fwait
sub
iret
out
mov
mov
dec
or
xchg
repnz
mov
mov
pop
enter
mov
ljmp
ret
imul
shll
int
and
rcll
mov
jl
add
insb
xor
mov
ja
mov
cmp
and
dec
je
movsl
aam
xor
stc
fsubp
test
or
add
jmp
xchg
add
xor
stos
gs
into
pop
add
xor
test
dec
gs
pop
cmp
mov
cltd
mov
xchg
dec
xor
inc
mov
hlt
in
dec
push
dec
das
adc
outsl
out
daa
mov
test
push
mov
inc
jg
mov
mov
mov
ficomps
js
in
push
fisttps
add
cmpsb
imul
push
std
or
aad
popa
in
subl
pop
lods
lahf
leave
pop
sbbl
loopne
jb
jp
mov
insl
jecxz
es
inc
mov
jo
push
ret
jecxz
adc
lock
sub
clc
test
adc
les
adcb
shll
push
repnz
shl
mov
inc
inc
fiaddl
jge
gs
push
outsb
or
movsb
ljmp
lock
and
sbb
pop
inc
sbb
add
shll
stos
ljmp
loop
or
jl
out
jnp
push
push
scas
xchg
mov
dec
insb
adc
rcll
pop
negl
xchg
or
fisubl
xor
iret
mov
out
or
cld
push
inc
pop
shll
sub
or
stos
imul
bswap
add
out
loop
cwtl
not
sub
cltd
nop
fidivrl
ret
push
das
lods
rol
cmp
repz
int3
pop
test
or
push
xchg
arpl
test
lods
sub
movsl
faddl
scas
jmp
cmp
ljmp
sub
shrl
test
jge
xchg
imul
dec
pop
mov
stos
das
outsl
push
xchg
adc
mov
and
aad
pop
hlt
mov
lods
pop
sbb
mov
and
stc
ljmp
adc
lcall
mov
sub
roll
shll
cmc
ds
test
push
jle
pop
xor
jl
js
aad
cmp
mov
jnp
mov
jnp
mov
pushl
outsb
repz
dec
ret
push
aas
dec
cmpsl
sbb
or
jae
fwait
sbb
add
xchg
rorb
adc
mov
cwtl
test
xchg
add
push
cmc
adc
add
cmp
mov
incb
xchg
inc
cmpxchg
and
cmc
sbb
jl
xor
push
add
jae
sub
and
in
pop
data16
push
mov
add
jns
addl
ss
pop
push
push
nop
ficoms
adc
cmpsb
je
stos
cwtl
xor
mov
and
fldt
nop
arpl
xor
push
femms
loopne
or
dec
cltd
cmp
sbb
push
inc
mov
in
out
iret
pushf
or
push
lret
jne
pop
xlat
sbb
or
ss
out
jl
add
mul
xchg
fisubl
jg
jl
repnz
sbb
outsb
mov
xor
mov
movsl
mov
mov
xchg
push
scas
mov
add
outsb
adc
f2xm1
and
mov
lcall
pusha
movsb
dec
mov
sbb
mov
int
loop
adc
aas
idivl
pop
cltd
push
in
arpl
incl
fs
cmpsl
je
ret
jecxz
lds
scas
pushf
popa
and
jecxz
mov
jg
lods
sub
je
push
adc
rcrb
mov
aam
jge
fimuls
xor
int
jl
mov
rcrl
pusha
sub
shrl
imul
shll
xrelease
je
inc
and
cmc
es
jp
scas
cmpsl
icebp
loopne
xor
add
xchg
add
push
fmull
push
mov
pushf
jle
pop
xchg
mov
movsl
dec
mov
and
mov
popf
mov
dec
fdivs
sbb
es
sub
addr16
xchg
imul
dec
repz
cwtl
subb
stos
mov
xlat
jb
push
mov
loop
dec
loopne
adc
icebp
sub
fstpt
into
pusha
lret
mov
inc
xchg
and
jne
cwtl
pop
adcb
push
std
inc
movsl
cwtl
repnz
mov
pop
mov
lret
fidivrl
and
sub
xchg
orl
test
andps
sub
xor
mov
in
inc
mov
jp
movsl
xor
mov
jae
sub
pop
lcall
jecxz
fmull
sbbl
cmpsl
or
pop
arpl
dec
push
inc
xor
fsubrs
sub
mov
adc
cmp
or
dec
jno
or
push
inc
out
outsb
out
scas
mov
daa
fs
sti
leave
dec
dec
inc
mov
mov
daa
and
movsb
jge
push
mov
push
dec
sub
or
sbb
fwait
sbb
jbe
push
mov
push
pop
pop
out
rorl
cld
mov
fwait
js
enter
lods
clc
sub
dec
sub
pop
outsb
sahf
push
mov
imul
loop
stos
mov
mov
jmp
inc
fwait
outsb
add
pop
mov
enter
clc
fs
push
sbb
in
pop
jle
jae
adc
roll
mov
std
call
cmp
cltd
mov
jno
pop
test
nop
ljmp
mov
push
div
push
into
popa
dec
shr
stos
mov
cmp
scas
je
arpl
in
inc
dec
cmpsl
mov
inc
lods
cmp
add
xchg
filds
enter
ret
dec
addr16
pop
sbb
imul
lds
or
sarl
ret
ja
xchg
cltd
cs
inc
pop
data16
sub
xchg
jmp
in
int
cmp
and
add
xchg
xor
pop
push
lods
in
and
dec
iret
scas
mov
negb
les
cmc
out
outsl
outsb
mov
mov
mov
bound
ljmp
fiadds
mov
add
jp
add
aas
adcl
mov
std
aaa
cmc
cmpsb
testl
push
pop
mov
xchg
or
sbb
sbb
rcll
and
pop
push
xchg
jnp
fisubl
xchg
lock
push
fstps
jle
dec
mov
jp
out
mov
enter
cmp
sbb
jne
in
cmp
jmp
push
xor
lahf
mov
cmc
pop
sbb
adc
arpl
aam
xchg
out
adc
or
loop
xor
ja
push
mov
divl
xor
sti
sbb
inc
sti
jbe
movsl
leave
cmp
add
aad
pusha
jle
adc
jmp
rcll
outsb
and
mov
sbbb
inc
fmulp
fimuls
push
insl
pop
jnp
pop
xor
jo
push
mov
les
gs
ljmp
lahf
aam
push
pop
inc
test
or
and
out
dec
cmc
add
and
mov
data16
adc
push
inc
sub
sbb
cmp
push
stos
mov
test
mov
repz
cmpb
jo
jl
push
mov
lret
inc
shll
shll
imul
sbb
xchg
inc
xchg
cwtl
inc
add
pop
sar
les
imul
xor
fldt
jle
lret
xor
add
xchg
movb
sbb
into
push
and
fwait
gs
in
outsb
jl
pop
int3
push
inc
adc
dec
jbe
lds
aas
mov
into
jle
or
xor
pop
add
testl
sbb
cmp
dec
mov
sub
add
test
out
push
popf
pop
jle
fisubl
mov
testl
arpl
lret
sbb
xchg
xchg
adc
xor
xor
pop
outsl
shlb
cmp
jge
xchg
lret
fimuls
stc
mov
jecxz
xor
mov
adcb
jp
mov
ljmp
sub
add
inc
xchg
aaa
cmp
cs
jne
mov
cld
test
insb
sub
sub
push
dec
fwait
das
pusha
inc
jmp
and
imul
xchg
arpl
cmp
out
sarb
mov
inc
xchg
cwtl
rorb
jne
jnp
jl
adc
imul
icebp
xchg
dec
push
mov
call
sbbb
fsubrs
pop
xorb
jmp
or
push
loopne
outsb
pop
sbb
push
xchg
xor
pop
je
cmp
and
mov
fs
mov
je
lods
adc
cmp
xor
lcall
sbb
and
mov
test
mov
lret
lods
and
jmp
and
xchg
daa
lcall
cmp
xor
data16
inc
icebp
xor
mov
or
in
lds
stos
cwtl
or
fwait
cmp
mov
and
pusha
outsb
imulb
lahf
outsl
push
xor
lcall
jns
fisttpll
sub
lea
jg
push
or
adc
pop
fwait
jg
pop
je
sbb
xlat
out
adc
jno
pop
dec
mov
add
in
dec
mov
mov
ds
gs
mov
das
scas
push
decl
scas
inc
adc
or
mov
pop
cmpsb
fsubs
jmp
pop
mov
push
adc
scas
test
sub
lret
bound
mov
mov
adc
cmp
mov
iret
or
sahf
aaa
mov
push
cmp
rcll
xchg
repz
and
stc
pop
fsubl
mov
fcoml
and
pop
hlt
fwait
push
push
enter
neg
dec
shrl
lods
outsl
sbb
dec
xor
push
jge
stos
mov
std
sbb
into
dec
mov
loop
mov
cli
repnz
cmp
xchg
sahf
cs
mov
push
sub
xchg
push
fidivl
psubsb
stc
stos
jno
out
push
js
fnstcw
pop
enter
inc
aad
prefetch
or
mov
push
out
loop
cltd
jne
mov
nop
icebp
and
add
fisttpl
mov
das
mov
aaa
enter
stc
stos
cmp
bound
ljmp
sub
pop
sti
lods
ret
lock
xchg
jecxz
jne
icebp
push
clc
or
mov
add
pop
mov
xchg
mov
les
inc
test
popf
dec
xchg
call
pop
cmp
mov
sahf
xor
mov
pop
je
test
or
xor
cltd
lock
call
add
and
adc
inc
inc
mov
out
das
adc
sbb
popf
movsb
inc
lret
movsl
in
repz
and
jbe
aaa
pmaxub
inc
mov
sbb
xor
cmpsb
cmp
sbb
mov
into
dec
push
mov
and
adc
push
pop
and
add
lock
pop
cmp
sub
pop
negl
xor
adc
in
mov
lods
out
imul
sbb
lahf
jno
pop
daa
xchg
stos
out
data16
stos
cmp
pop
mov
jl
in
lods
adc
std
jle
pop
sub
test
cs
pop
xor
jl
mov
fucomi
sbb
lcall
shll
lds
lea
xchg
loop
inc
or
loopne
arpl
call
loop
mov
jecxz
test
mov
jmp
inc
pop
cltd
mov
cmp
jbe
sahf
and
push
or
imul
pop
sahf
rcrl
scas
mov
push
ja
xchg
mov
pop
stc
adc
not
mov
and
out
into
lcall
sbb
add
push
sub
fdivrl
call
and
jmp
cmpsl
mov
inc
cs
sub
cmp
pop
je
aas
bound
mov
shrb
sub
faddl
sub
out
mov
leave
push
mov
mov
xchg
fldt
jge
bound
pop
jb
and
jge
out
sub
mov
adc
jle
push
loop
xchg
mov
and
jg
mov
xchg
std
pop
inc
adc
xor
scas
movsb
out
cmc
jno
pop
sub
test
push
test
in
cli
xor
lcall
pop
mov
test
cli
or
push
mov
inc
sbb
fmull
icebp
xchg
inc
jo
cmp
pop
jmp
into
test
test
xchg
add
and
jb
pop
mov
sub
dec
jno
mov
sahf
mov
imul
push
imul
and
cmp
push
fiadds
addb
loop
in
mov
dec
mov
and
outsl
call
in
mov
cmp
add
jmp
test
fdivl
repz
push
arpl
add
dec
insb
lock
xchg
pusha
out
xchg
enter
stos
cwtl
jle
idivl
ret
jmp
frstor
jne
aas
pushf
stc
mov
dec
dec
std
test
mov
daa
xchg
pop
pop
dec
mov
xchg
inc
mov
lret
lods
push
add
stc
rdrand
stos
sbb
nop
mov
inc
f2xm1
int
inc
jl
mov
push
scas
mov
flds
imul
push
dec
mov
pop
mov
adc
outsb
outsb
aaa
jbe
stos
dec
in
cltd
movsb
imul
hlt
je
add
mov
dec
loop
pop
adc
adc
ss
int
adc
xchg
call
lds
in
shr
fdivp
jbe
mov
xchg
mov
jnp
ja
hlt
shlb
adc
bnd
mov
pop
or
or
nop
and
test
ss
or
int3
sub
cld
enter
subb
inc
lcall
mov
xorb
inc
sub
mov
leave
arpl
lock
test
jbe
lea
mov
mov
addr16
std
or
mov
dec
sarb
inc
stos
jne
inc
loop
inc
lahf
push
dec
push
ret
pop
repnz
mov
cmc
dec
mov
xchg
jno
xor
dec
daa
test
add
insl
fistl
fcompl
repz
pop
jbe
insl
dec
cmpsb
xchg
adc
cmc
loop
cs
cmp
mov
insl
mov
fdivl
insb
lea
ljmp
xchg
adc
push
push
mov
int3
cli
and
lea
push
and
add
xchg
push
jge
imul
pushf
cmp
push
shlb
nop
mov
ret
int
pop
mov
insl
or
xchg
pop
jns
scas
scas
cli
call
xchg
test
cmp
adc
mov
push
xchg
int3
scas
fyl2xp1
cmp
pop
pop
jge
sbb
clc
mov
sub
fsub
and
dec
or
and
and
sti
xor
inc
mov
jns
pop
call
outsb
pslld
pop
mov
addl
xorb
nop
jg
lcall
lods
dec
je
cmpsb
test
cmp
hlt
push
repz
or
lahf
cwtl
jo
push
stc
xchg
repz
cli
sbb
or
call
rcrl
cmp
dec
pop
call
sbb
mov
push
mov
sub
jo
addb
mov
loop
pop
and
std
dec
jnp
fisubl
jg
cmovs
lret
or
jno
add
rcll
or
test
or
xchg
daa
jp
lea
jmp
mov
push
lret
mov
sbb
mov
lret
imul
shl
push
aas
popa
xchg
dec
iret
mov
in
sub
cld
mov
inc
mov
adc
adc
inc
int3
xchg
sub
sub
mov
add
sahf
xchg
jmp
pop
add
inc
xor
jns
push
mov
out
push
inc
out
mov
mov
shll
stos
sub
sbbl
out
xor
cmp
dec
cmp
add
test
add
xorl
aas
inc
push
jle
and
insl
inc
daa
xor
decb
pop
xor
cmp
push
dec
sub
in
mov
push
mov
addr16
aad
fnsave
or
ss
lahf
mov
sbb
stc
sbb
xlat
cmpsl
pop
lret
push
or
add
mov
adcl
imul
add
fidivrl
int
mov
stos
sub
and
das
movsb
gs
sbb
imul
push
pop
cmp
test
call
cmp
dec
mov
pop
test
push
add
jo
clc
sarl
mov
mov
repz
out
jb
jno
ficoms
push
push
mov
inc
pop
jb
adc
xchg
mov
jl
xchg
mov
jne
push
or
inc
outsb
adc
and
mov
fcompl
jae
cld
or
jg
test
dec
sub
sub
into
imul
jno
test
stos
scas
out
pop
pop
test
xchg
sub
cltd
inc
cs
ret
inc
mov
push
fxam
imul
pop
in
bound
xlat
testb
lcall
filds
loopne
test
add
pop
or
sbb
movsl
push
shrl
sbb
dec
or
pop
insb
int
inc
and
mov
in
stos
gs
adc
in
sbb
push
xchg
mov
pop
xchg
or
daa
and
xchg
push
rcl
xchg
ret
mov
mov
inc
jl
xor
add
sarl
or
test
push
cmp
jl
adc
jmp
mov
cmp
xchg
sub
clc
negb
jae
clc
mov
mov
and
jno
sub
mov
xlat
jae
imull
lahf
js,pt
aam
mov
jp
out
cwtl
js
clc
or
nop
fisubs
pop
dec
xchg
cmpsb
push
pop
scas
mov
push
add
mov
dec
push
fistpll
push
and
push
lock
inc
xchg
ret
xlat
adc
jno
xchg
mull
inc
push
data16
dec
push
push
mov
sbb
fists
fdivrl
bound
jnp
pushf
cmp
sbbl
outsb
add
mov
stc
xor
test
divb
repnz
shlb
and
jns
and
mov
adcl
cmp
es
pop
call
xchg
orb
lds
inc
fs
mov
movsl
push
aas
dec
in
iret
les
fistps
in
int3
push
test
enter
add
faddl
xchg
add
dec
pop
jge
mov
push
rcrb
filds
movsl
sub
mov
fs
jne
and
xor
cltd
cmp
xchg
add
popa
loopne
lods
jecxz
mov
lods
fwait
shrl
mov
sub
pop
fwait
iret
dec
mov
das
icebp
sbb
fs
mov
pop
fdivs
sub
daa
mov
and
fcoml
idivb
movsl
jbe
inc
mov
xchg
lahf
adc
nop
cs
xchg
or
xor
mov
call
inc
test
cld
sub
jmp
sbb
rep
popa
arpl
add
addr16
dec
clc
xchg
and
out
lret
sub
add
loop
xor
adc
std
jb
sti
mov
xchg
hlt
leave
adc
sbb
ja
sub
xor
inc
push
jp
dec
add
jnp
sar
ja
cmp
scas
mov
test
or
xor
push
mov
lcall
stc
push
stos
pop
xchg
andl
loopne
push
pop
cmpsb
ljmp
cmp
fidivl
sub
sti
scas
jp
jl
stos
jp
imul
xchg
add
dec
test
imul
lahf
std
fldcw
out
mov
ja
ds
lods
scas
and
mov
pop
test
gs
or
or
pop
sti
push
xchg
and
xor
and
sub
cmp
js
xchg
sub
test
dec
add
mov
lahf
fldcw
jg
and
sub
xor
mov
fimuls
adc
lds
push
xchg
je
mov
or
dec
add
add
rcrl
push
inc
sbb
insb
push
adcl
inc
das
call
add
adc
jns
mov
sarl
inc
mov
lock
push
fistl
rep
sbbb
sbb
fistps
sub
xchg
pop
popa
mov
std
scas
addr16
mov
push
cmp
xor
mov
cltd
dec
xchg
lock
cltd
mov
daa
and
imul
adc
mov
orl
sti
lret
jge
sub
mov
push
ficomps
bound
mov
add
leave
sarb
xchg
repz
mov
lods
inc
inc
xchg
arpl
dec
iret
fiaddl
packuswb
pop
xchg
dec
fsubl
sub
ret
in
add
inc
mov
sub
daa
adc
idivb
mov
gs
repz
out
hlt
sub
mov
cmp
insb
repz
orb
dec
rcrl
push
popf
add
mov
psrlq
repz
jg
in
sbb
jbe
dec
add
fbld
punpcklbw
jg
inc
and
out
dec
jno
cmpsl
jbe
data16
shrb
lods
sub
stos
sub
and
xchg
or
sbb
inc
lcall
and
cmp
daa
add
cmp
inc
xchg
add
push
nop
or
scas
hlt
inc
mov
mov
adc
insb
ret
cmp
sbb
push
xor
xlat
imul
data16
mov
add
js
fldl
xchg
cmp
cmp
adc
aas
xchg
andb
jnp
pushl
dec
leave
mov
rolb
cmp
dec
jl
pop
or
cmp
ficomps
int
ret
pop
push
xchg
fdivrs
cld
test
pop
andl
cwtl
cmpsl
push
mov
and
les
shl
iret
xor
push
pop
xchg
pop
imul
rol
lcall
jge
sub
jl
mov
mov
inc
adc
mov
repnz
outsb
test
in
jecxz
jecxz
movsl
pop
xlat
rep
cmp
adcb
imul
mov
scas
mov
xchg
repz
subb
inc
add
add
jge
in
sahf
sahf
jecxz
cmpsb
dec
in
mov
shrb
push
and
ljmp
ja
mov
mov
adc
sub
mov
mov
lock
sti
jmp
in
bound
xor
mov
insl
push
cmpl
mov
push
and
shl
loop
sub
jnp
shlb
addr16
scas
pop
addr16
xchg
sbb
dec
pop
pop
pop
add
xchg
xchg
lock
cli
and
jl
mov
stos
xor
sbb
mov
inc
mov
add
cs
pop
push
push
push
dec
mov
and
jo
mov
aam
pop
out
pop
les
les
ror
adc
xor
cmpsb
lea
pop
mov
adc
clc
or
out
pop
cmpsl
dec
scas
mov
std
out
jns
dec
lahf
mov
lods
out
sbb
aad
add
push
mov
xchg
outsl
movsb
ret
add
and
mov
push
and
sahf
int
repnz
jg
pusha
push
inc
mov
pop
cwtl
push
pop
rcrb
popa
xor
xchg
stos
cli
inc
call
push
xlat
sbb
cmp
jo
mov
in
jecxz
pushf
pop
and
sub
aas
mov
or
pop
jle
sahf
es
ret
dec
push
fcoml
mov
movsb
mov
push
xchg
cmpsl
pop
cmp
pop
dec
out
cmp
lea
popf
dec
jnp
stos
dec
xor
mov
lods
or
pop
int3
jns
or
int3
pop
mov
cmpsl
inc
sarl
dec
sti
xchg
dec
or
outsb
sarb
sbb
sbb
leave
or
mov
aam
insb
js
cmp
push
jo
jl
loopne
icebp
lds
and
and
pop
in
daa
test
lret
xor
mov
xchg
pop
leave
mov
mov
cmp
push
dec
rcll
and
fnstsw
jge
test
rorl
ret
ret
fstpl
rol
mov
adc
jae
adcl
subb
pop
jo
and
mov
xchg
pop
pop
or
and
sbb
lcall
cmp
call
cmp
sub
cmpsb
jle
inc
out
test
mov
xchg
scas
sbb
mov
js
movsl
sbb
push
push
or
out
dec
jecxz
mov
dec
iret
sub
into
cmp
stos
push
popa
imul
fmull
dec
sbb
in
and
xor
sbb
or
enter
cmc
pop
sarb
shlb
clc
xchg
and
insl
add
jle
push
or
cmp
mov
add
cmp
cmp
lods
jg
outsb
mov
pop
or
bound
xorb
xchg
fisttps
ret
add
xchg
js
adc
pop
lds
mov
decl
aas
aas
mov
push
les
sbb
dec
adc
inc
aas
fwait
dec
cmp
lods
jns
imul
lds
pop
mov
add
sti
addb
sub
daa
aaa
hlt
ds
dec
ja
pop
ljmp
or
xchg
and
and
mov
aaa
adc
cltd
std
adc
xor
xchg
push
es
push
cmove
js
sub
sbb
dec
js
xor
fldl
push
jae
lods
cmp
pop
repnz
jne
pop
fs
adc
movsb
js
or
call
in
shrl
adc
insb
in
cli
pop
jnp
cld
xor
xchg
lds
bound
push
cli
mov
xchg
out
ret
rcll
xchg
sbb
arpl
mov
addr16
mov
roll
cld
sarb
xchg
add
push
fisubl
sub
lock
leave
push
cmp
jmp
insb
subb
sahf
mov
movsl
mov
cmp
dec
das
sbb
jmp
test
pop
mov
dec
pop
in
and
dec
mov
jbe
fisttps
stos
jmp
jge
fbld
add
fnstsw
outsl
and
cmpsl
sub
imul
xor
inc
in
movsb
sub
or
test
and
out
js
jno
mov
and
aas
sbb
rcl
mov
mov
or
ja
adc
fnstenv
movsl
jp
jp
push
xor
adc
lahf
mov
push
scas
outsb
ficompl
inc
sbb
and
xor
mov
push
stc
mov
inc
sbb
xchg
mov
mov
xor
sbb
add
cwtl
cmpb
call
mov
mov
push
or
xchg
or
leave
repnz
mov
sbbb
shll
je
jbe
imul
pushf
lret
into
out
sahf
addr16
les
jns
xlat
push
mov
jb
in
push
xchg
loopne
push
mov
pop
lock
test
rcrl
test
xor
and
sbb
int3
sahf
in
mov
jp
roll
inc
xorl
sar
xchg
stc
jecxz
mov
fwait
add
mov
sbb
clc
and
rol
out
jl
add
dec
push
xchg
jp
xchg
mov
xchg
mov
insl
inc
repz
mov
aas
pop
xchg
mov
mov
popa
mov
pushl
loope
cmp
aaa
sub
pcmpeqw
and
cmp
icebp
mov
xor
mov
pop
push
dec
and
shll
push
lahf
xor
cmp
xlat
jno
pop
xchg
lea
pop
fcmovnu
xchg
lods
rcrb
xchg
rclb
sub
into
out
add
arpl
in
adc
cmpsb
jge
testb
popf
lock
push
insl
test
into
arpl
mov
cmp
mov
and
and
and
xchg
rep
add
fldt
cmpsl
mov
scas
pslld
int
dec
shlb
and
cmp
repz
push
into
pop
and
out
pop
mov
push
cmpl
sub
outsl
adc
rorb
outsb
out
data16
sub
aaa
rcrb
aam
in
cltd
mov
call
lods
sub
cmpsl
daa
mov
into
push
jg
test
inc
rorb
pop
in
sarl
je
out
dec
and
mov
mov
arpl
test
push
fdivrs
sbb
push
push
daa
pop
mov
sbb
mov
shlb
adc
rorl
pop
dec
xor
sub
loope
xor
cmp
xchg
movsl
out
sbb
int
dec
cmp
and
std
pop
movsb
xor
xchg
pop
sbb
xor
pop
mov
cmp
nop
push
imulb
sub
jo
add
ficoml
pop
ds
dec
in
or
or
imul
addl
cmp
lock
pop
mov
sbb
cld
push
ljmp
jne
les
pop
sti
xchg
jb
in
sti
popf
sbb
shrb
mov
repnz
fdivs
xor
outsl
cli
xchg
ss
testb
fdivl
shlb
dec
fidivrs
inc
imul
repnz
dec
xchg
mulb
xchg
out
push
lock
cld
sti
cmp
jo
sub
cmovle
call
lods
xchg
mov
jmp
add
fs
push
test
test
xor
mov
cmc
inc
pop
xorl
stos
adc
lods
push
cmpsl
rclb
cld
xlat
adcl
jno
and
sbb
lret
pop
adc
push
ljmp
outsb
test
stc
pop
fmulp
push
test
mov
repnz
cltd
daa
sbb
inc
ret
sub
mov
push
jns
mov
or
imul
xchg
xor
lret
cmp
jmp
mov
xor
mull
and
pop
sbb
sbbl
outsl
push
jne
cmpl
std
pop
mov
stos
out
jno
ljmp
add
push
fdivrl
imul
sbb
add
lret
add
lret
add
outsl
inc
lea
add
mov
in
pop
pop
loope
es
dec
mov
xchg
jl
test
jecxz
pop
and
cmp
rorl
sub
cwtl
sar
dec
add
je
js
clc
cli
dec
inc
push
xchg
dec
mov
enter
xchg
outsl
mul
xchg
lret
xchg
mov
mov
repnz
dec
notb
inc
xor
or
rolb
jo
jecxz
jmp
sub
add
in
pop
jns
ds
imul
xor
mov
popf
mov
jmp
or
lret
ljmp
push
jecxz
push
dec
test
mov
xchg
mov
inc
adc
std
dec
rorl
sbb
push
mov
push
leave
loopne
inc
xchg
push
fadd
fs
ret
mov
and
mov
jo
aaa
cltd
xchg
mov
xor
lock
adc
pop
jb
imul
js
fwait
cld
arpl
icebp
jg
xchg
push
adc
push
push
jg
mov
fsubr
jp
inc
inc
mov
stc
aas
mov
pop
outsb
je
dec
out
inc
das
out
popa
mov
ljmp
mov
pop
fwait
jae
cld
and
sbb
aam
pop
push
popf
in
cmpsl
test
std
xchg
lret
fcomps
cld
call
or
xchg
incl
mov
sbb
mov
cmp
cmpsl
jg
mov
add
cmp
out
jmp
cmp
mov
jmp
mov
mov
adc
mov
xchg
mov
ds
adc
xchg
aas
fidivrs
pop
sbb
loope
xchg
lcall
pushf
xchg
inc
mov
mov
les
xchg
lds
xlat
push
dec
mov
pop
xchg
fwait
stos
in
shlb
popa
mov
orb
fiadds
adc
jp
mov
mov
jge
int3
adc
and
aaa
cmc
and
repnz
imul
adc
fadd
aad
pop
in
popf
add
addl
cltd
dec
addr16
repnz
inc
mov
or
das
mov
mov
mov
out
xor
addr16
test
movsl
test
pop
dec
sbb
outsl
jns
mov
push
loope
sub
aam
inc
pop
int
scas
or
lret
mov
add
lods
pop
jnp
mov
dec
adc
add
sub
call
stos
mov
mov
add
in
mov
arpl
cld
int
icebp
mov
jmp
inc
iret
in
movsb
inc
daa
xor
and
fidivrs
mov
push
ljmp
xor
stos
inc
mov
mov
stos
loope
stos
push
out
lods
int3
lods
xchg
arpl
inc
cld
cmp
xchg
inc
rorb
in
hlt
add
mov
in
sub
sbbl
mov
jecxz
inc
sbb
dec
sti
movsb
xchg
mov
push
push
or
push
rclb
inc
jg
movsl
loope
nop
test
inc
cwtl
xchg
mov
sub
mov
int3
enter
or
xchg
out
or
push
into
jg
inc
sti
out
jmp
aad
test
lret
pop
insl
in
test
xchg
in
jne
sub
scas
pop
push
loop
jb
ffree
xchg
adc
jnp
dec
fcmovnb
add
cmp
inc
fidivrl
test
dec
cmp
sbb
sahf
mov
mov
dec
out
or
sbb
add
sarb
mov
imul
nop
loop
jl
pop
ret
hlt
jns
and
mov
hlt
jnp
movsb
adc
ret
adc
fstps
enter
dec
rorl
cmp
jno
loopne
xchg
mov
stc
push
sub
xchg
mov
add
into
xchg
add
popa
add
orl
xlat
or
ljmpw
and
and
and
xor
sbb
movsl
iret
aaa
test
adcl
insl
lret
loope
inc
daa
dec
in
or
popa
movsl
icebp
imulb
ret
jne
xor
inc
or
mov
inc
stos
mov
lea
pop
sbb
adc
imul
push
nop
mov
lods
imul
test
cmp
rol
or
push
mov
mov
jnp
jno
xchg
clc
add
jge
jns
lds
mov
mov
in
ss
das
xor
and
inc
push
lcall
pop
or
jb
mov
push
pop
fbstp
pop
loope
shll
outsb
sub
adc
dec
cmp
and
or
adc
test
mov
mov
pop
jns
imul
leave
pop
shl
and
call
push
fwait
sbb
and
mov
fstps
jmp
add
jg
scas
xchg
add
daa
dec
lcall
into
xchg
loop
popa
cmp
std
mov
jl
gs
or
inc
xor
sbb
fcomps
rcr
or
test
aam
push
iret
les
fwait
test
stc
jo
shlb
cltd
mov
jmp
aad
xchg
inc
cmp
ja
out
mov
das
loop
into
popf
push
adc
inc
popa
repz
pop
sbb
lea
jmp
sbb
mov
leave
pusha
stc
test
push
or
and
repnz
mov
sbb
xchg
shll
sub
mov
out
sbb
dec
imul
imul
loopne
sub
stos
jae
jnp
sbb
or
inc
dec
out
mov
out
flds
fisubl
fwait
repz
jns
pop
clc
mov
test
pop
jo
mov
mov
xor
xchg
mov
cmpl
and
pop
movsl
cmp
push
xchg
imulb
mov
jnp
mov
sar
hlt
test
lods
adc
mov
les
inc
clc
push
aam
and
or
int3
xor
pop
inc
fidivrl
or
sub
das
pop
push
mov
pop
adc
std
fiaddl
adc
je
lods
or
xchg
push
xchg
mov
xchg
inc
dec
test
movsb
unpckhps
sub
xchg
xchg
sub
aas
inc
ss
dec
rcrb
sbb
ret
mov
sub
fwait
aam
add
mov
bound
mov
les
fidivs
popf
aam
or
sub
inc
dec
mov
or
sahf
add
lock
out
int
jecxz
decl
push
push
sbb
mov
dec
dec
pushf
sbb
push
inc
sub
cmp
pop
sbb
xor
mov
pop
es
or
sub
icebp
xlat
cli
add
mov
cmp
jl
add
cmp
pop
push
divl
jbe
push
dec
mov
pushf
fists
pop
insl
mov
shl
rolb
icebp
cmp
mov
insb
lods
mov
insl
cmc
mov
lock
push
jnp
scas
push
por
das
subb
xlat
mov
sub
fsts
jmp
inc
dec
sahf
or
fcmovbe
lahf
pop
js
or
repnz
lcall
movsb
shrb
mov
sub
dec
adc
and
shrb
pop
stos
pop
cmp
icebp
inc
mov
sbb
mov
push
sti
pop
add
pop
mov
inc
jae
push
xlat
les
xor
jns
mov
sub
mov
rol
mov
mov
dec
inc
fsubrl
repnz
movsb
pushf
sbb
jecxz
xor
outsb
mov
jno
popf
dec
or
lods
jmp
dec
mov
add
pop
das
xor
cmc
dec
push
stos
sub
jno
xor
add
adc
mov
lcall
repz
mov
fisubrl
jo
or
xchg
je
and
mov
loop
push
push
insl
jp
adcb
ffreep
xor
pushf
cs
mov
ja
mov
pop
mov
xchg
enter
mov
je
adc
in
movsl
mov
adc
cwtl
xchg
xor
enter
cmp
cmpb
mov
fldcw
push
icebp
sbb
cmp
xchg
scas
push
xchg
jecxz
lcall
shlb
or
aaa
scas
sub
inc
mov
push
nop
les
xlat
rcl
dec
and
inc
mov
pop
and
jo
push
aam
mov
jne
push
xchg
hlt
sti
daa
sbb
mov
lods
mov
mov
out
scas
sbb
es
mov
xchg
xchg
in
ret
jns
pop
xchg
mov
or
pop
cmp
ret
dec
in
imul
mov
notb
and
gs
mov
mov
adc
cmpsb
div
lods
mov
dec
mov
lods
inc
xchg
popa
rcrb
leave
cltd
lock
nop
pop
push
push
dec
fbld
mov
stc
fs
rorb
scas
scas
xor
pop
inc
hlt
and
jecxz
int
push
aaa
jbe
xor
sbb
push
mov
les
or
mov
in
xlat
mov
pop
insb
xor
xlat
int3
cs
bound
jmp
or
sub
insl
gs
mov
stc
cwtl
sbb
xchg
mov
and
test
repnz
adc
mov
jo
sbb
cmp
mov
sarb
adc
pop
mov
pop
push
adc
pushf
push
jl
and
sub
dec
mov
mov
inc
mov
nop
setle
cmpsl
nop
sbb
scas
lea
xchg
out
dec
xor
pop
cli
jl
fwait
divl
jo
mov
mov
test
ss
push
dec
mov
cs
sbb
add
hlt
xor
and
add
dec
dec
adc
cmpb
pop
lahf
cmp
out
jno
incb
dec
adc
test
mov
mov
push
fwait
lods
mov
andl
sub
mov
jmp
std
adc
mov
mov
repz
stos
flds
adc
fstpl
imul
jbe
or
xor
rolb
dec
test
lock
fwait
cltd
jmp
movsl
sbb
ret
aaa
cmp
mov
and
test
es
push
popa
xchg
mov
xchg
das
or
push
sbb
mov
lods
xor
sub
sub
mov
mov
mov
adc
pushf
out
push
cltd
mov
insb
inc
stos
ret
insb
mov
push
inc
cmp
stos
es
lret
addr16
and
fst
adc
sbb
shrl
call
leave
shrb
jp
nop
ljmp
push
fcoms
int
rcrb
pop
jb
pop
fsub
add
mov
sbb
add
fcomip
aam
push
sbb
stc
je
ret
push
cmp
jp
int
lcall
lock
add
repnz
mov
es
call
or
sub
xlat
jne
jns
dec
add
xlat
xchg
dec
jge
ret
sbb
out
inc
fsubrs
std
sbb
xorb
push
mov
out
out
inc
pop
pushf
inc
sarl
movsb
movsl
imul
pushf
ret
sbb
test
out
dec
xchg
cmp
sarl
and
or
pop
sub
aam
jg
mov
pop
mov
rcrb
leave
dec
mov
adc
dec
jmp
clc
pop
fwait
jg
ss
gs
inc
pop
add
jmp
cs
int
mov
cmp
mov
push
sub
imul
xorl
cmp
test
adc
xor
inc
inc
imul
je
xor
jp
mov
dec
test
inc
lret
imulb
cwtl
jecxz
js
lahf
xchg
dec
sub
les
aad
movsl
or
ss
leave
or
dec
popf
stos
mov
mov
xor
cs
mov
mov
shlb
das
int3
jmp
pop
sub
or
sub
inc
std
jo
loope
frstor
mov
mov
mov
mov
or
sbb
shl
gs
sbb
stc
cmp
leave
aam
int3
jae
add
rcll
mov
mov
cld
test
cmp
sub
inc
and
loop
xchg
dec
sub
inc
sbb
mov
push
push
lcall
scas
mov
lods
aad
cld
and
sbb
adc
sbb
les
loopne
jle
sub
stos
outsb
xchg
sbb
in
xchg
push
cmp
push
fldcw
inc
dec
in
test
jo
jb
sub
jae
lret
mov
outsl
add
fcmovu
ja
icebp
mov
push
inc
inc
push
xor
enter
fidivs
repnz
pop
pop
mov
ficoml
mov
mov
je
scas
icebp
jmp
fchs
mov
stos
push
movsb
movsb
xlat
fidivrs
aam
sbb
insb
sub
jbe
xor
jp
pop
fs
setle
mov
stos
pop
in
and
addr16
add
xchg
clc
pop
pop
pop
mov
push
mov
xor
jecxz
add
jne
fwait
lret
mov
test
fisubrs
dec
mov
rclb
fisubs
in
and
les
outsb
out
rcr
mov
mul
outsl
out
hlt
xchg
dec
xchg
mov
mov
aam
xor
call
cmp
sub
lahf
xchg
or
inc
repnz
pop
add
sarl
outsb
arpl
mov
ljmp
mov
lock
push
jns
sub
add
loop
dec
cmp
out
push
and
loop
adcb
insb
nop
pusha
push
or
in
push
inc
cmp
mov
dec
repz
xor
xchg
idivb
dec
pusha
jl
sbb
das
cmp
cltd
sub
js
fidivs
in
dec
xchg
lods
mov
mov
push
test
push
popa
std
lea
push
lods
pop
popa
shlb
xor
jmp
and
imul
or
or
sti
pushf
nop
sbb
sbbl
sahf
shrl
sbb
add
sub
add
xchg
lret
add
mov
fsubs
dec
ret
repnz
insb
sbb
dec
push
push
mov
rclb
mov
daa
push
lds
ja
dec
mov
loope
mov
mov
add
iret
add
shrb
push
int
mov
inc
xchg
mov
cwtl
mov
clc
jmp
aas
dec
inc
jno
les
das
xchg
cmpsb
iret
sarb
rcrl
cmpsl
nop
loope
jno
sbb
adc
clc
push
mov
adc
xchg
jbe
push
daa
mov
imul
dec
loope
sarl
outsl
test
jmp
pushf
movsl
incl
pop
sub
out
dec
inc
fadds
xchg
jmp
aam
cmp
out
sub
xchg
or
add
rolb
mov
loopne
out
pop
dec
mov
xor
shlb
sub
xchg
xchg
mov
insb
ja
pop
clc
lods
lret
ss
testb
inc
push
mov
data16
and
mov
scas
addr16
inc
iret
xchg
cmp
rol
call
and
lret
sbb
lds
add
mov
mov
adc
imul
jp
addr16
add
cmp
setb
ss
movsb
inc
insb
push
sub
repz
enter
nop
sbb
cmp
rcrb
popf
rcl
mov
fxch
xor
cmp
out
lock
push
fdivrl
ja
jnp
fimull
popa
cmp
jne
mov
xor
adc
loope
ret
shlb
sti
aas
and
test
dec
adc
inc
jmp
cmp
shrb
cmp
in
pop
shlb
inc
jae
sub
jbe
and
cld
mov
and
aas
xor
scas
outsl
mov
inc
add
or
lret
movsb
imul
out
xchg
pop
inc
repz
daa
pop
jbe
frstor
sbbl
push
out
out
loop
mov
lret
sub
adc
popf
sbb
and
add
add
iretw
addr16
push
aam
or
aam
in
adc
jo
mov
js,pt
cwtd
jae
scas
or
icebp
cmp
jae
lahf
mov
mov
sbb
repz
jp
adc
cmpsb
push
pop
add
es
imul
mov
pop
cmpsl
jns
push
pop
and
push
jbe
cmc
ds
cmp
jbe
inc
outsb
mov
repz
pushf
jno
out
jbe
jbe
inc
or
scas
cwtl
sub
xchg
mov
test
cmpsl
jae
loope
cld
cli
xchg
les
cld
jns
pop
add
add
sbb
cmc
fsubs
mov
dec
pop
mull
push
or
mov
fidivs
sbb
mov
jmp
enter
lods
or
leave
rcrl
inc
push
fadd
int3
mov
icebp
or
pop
in
adc
sbb
aas
xchg
loopne
aaa
sub
adc
icebp
rcl
enter
add
cmp
ds
shr
jl
lock
adc
repz
or
pop
push
mov
stos
mov
pop
fninit
jle
xor
sub
xchg
sub
sarl
cmp
adcw
lret
push
pop
jo
scas
aam
mov
out
jno
sub
call
dec
push
xchg
addb
add
mov
xchg
das
xchg
jne
divb
lods
loopne
add
jae
pop
int3
jg
adc
jecxz
pop
xchg
pop
lock
bound
fmull
xchg
dec
jp
cli
lret
sahf
pop
dec
dec
lcall
sub
pop
push
addr16
pop
popa
cld
es
leave
aad
mov
in
movups
adc
ffreep
jecxz
sub
sbbl
inc
and
mov
mov
outsl
mov
pop
adc
jo
push
xor
movsl
aaa
gs
sahf
and
outsb
add
cltd
xchg
sbb
cltd
lock
stc
daa
test
xor
pop
nop
and
loopne
pop
int
testl
shrb
sarb
cli
aaa
insl
push
fdiv
push
testb
cltd
fldt
jmp
aam
mov
and
adc
lret
fdiv
jmp
and
dec
push
pop
sub
mov
js
fnsave
xor
push
fisttpll
ja
mov
jnp
fidivrs
rorb
iret
lret
and
cmpsl
test
cs
stos
outsb
repnz
dec
or
loopne
add
addr16
push
lcall
mov
xchg
adc
push
push
xorb
sub
sti
arpl
xchg
cwtl
inc
push
mov
or
sub
out
inc
fistl
js
cmp
pop
lods
js
clc
cmp
ret
xchg
sarb
mov
mov
aam
jmp
adc
jno
push
roll
jmp
sbb
movsb
cmpb
mov
sbb
imul
jge
rorb
add
fldenv
das
adc
sub
mov
mov
fstpl
jecxz
shrb
add
hlt
cmp
and
sub
in
loope
cmpsb
addr16
push
cmpsl
fwait
mov
scas
pop
hlt
and
pop
dec
xor
or
js
fsubrs
scas
dec
add
dec
int
popf
push
push
mov
scas
and
dec
sbbl
push
pop
push
mov
clc
adc
jne
and
pop
jmp
roll
xchg
fdivr
inc
std
cmc
adc
mov
pop
sbb
inc
adc
push
inc
cmp
popa
mov
dec
xchg
shll
sub
sahf
fbld
xchg
sbb
xchg
inc
push
cmp
push
sti
inc
add
xchg
fsubs
push
sub
daa
imul
ret
loopne
clc
add
pop
xchg
and
pushf
mov
mov
push
add
hlt
hlt
lret
add
mov
mov
repz
jae
or
pop
sub
xor
inc
add
std
jle
mov
sbb
pushf
sti
fisubrl
cltd
sub
add
imul
add
in
mov
jns
imul
in
jb
repnz
andb
pop
mov
ds
shr
insb
sbb
fldl
cs
mov
lods
xchg
inc
out
sub
dec
enter
cmc
xor
enter
pushf
add
xorb
popf
int3
dec
or
movsb
mov
jbe
popf
rcrl
fdivrp
shr
test
xor
mov
sbb
shlb
pop
pushf
dec
jbe
cs
testb
iret
mov
cmp
push
adcl
sub
stc
cmpb
fincstp
setno
xchg
push
int
aaa
lods
jmp
ljmp
dec
aad
dec
jl
test
xor
out
push
scas
ljmp
push
mov
mov
test
mov
int
xor
out
jnp
aas
das
adc
bound
jo,pn
std
inc
add
out
imul
test
test
xor
in
sahf
add
mov
sub
dec
stos
jb
pop
out
and
test
daa
or
mov
push
and
cmc
cld
push
and
fsubl
call
aaa
sbbl
inc
inc
int3
xchg
out
lock
js
jbe
mov
mov
dec
pushl
out
adc
pop
push
ss
sbbl
stos
sub
pushf
sub
sar
cltd
mov
push
inc
int
popa
jle
rorl
hlt
fnstenv
adc
mov
cmp
out
mov
in
mov
add
or
es
push
sub
and
xchg
sbb
jle
test
pop
jae
jmp
in
fiaddl
inc
insb
xchg
lds
jmp
mov
mov
iret
ret
mov
cli
scas
push
mov
stc
and
rclb
cld
sub
das
xchg
jg
push
into
sub
dec
ret
or
inc
or
mov
fdivr
fnstsw
mov
out
pop
adc
insb
shrb
and
sti
mov
shll
lds
push
pop
and
pusha
mov
mov
test
repnz
lahf
call
je
ss
inc
push
add
mov
shlb
cmp
cmpsb
hlt
sub
popf
xor
mov
adc
mov
push
mov
push
pop
push
aad
adcl
outsl
nop
fdivrl
sub
pop
cmp
mov
imul
lock
push
shr
mov
pop
ret
sbb
in
out
push
cmc
inc
stc
and
shrb
lods
push
rolb
test
enter
push
or
and
ret
mov
sub
inc
xchg
jl
stc
push
lret
pop
insb
repnz
inc
sbb
jge
jge
mov
add
sysret
sar
lcall
dec
dec
add
pop
dec
jp
fidivrs
fnstenv
adc
scas
cwtl
cmp
mov
mov
fdivr
or
in
iret
pop
pop
rcrl
pop
xchg
imul
or
ss
lds
sahf
clc
in
rcrl
das
cmp
mov
cmp
or
dec
mov
sarb
sub
mov
int3
xor
loopne
dec
xchg
cmpsb
imul
add
push
adc
push
cmpsl
mov
push
inc
sbb
mov
sbb
loopne
nop
out
and
shl
sbb
mov
xchg
xlat
rorl
fdivrl
les
pop
jmp
aas
xchg
clc
cmp
mov
cmpsl
sbb
mov
repnz
jns
xor
add
pop
repz
clc
movsl
fnsave
sbb
xor
xor
stc
in
pop
pop
out
out
pushf
pushl
sti
push
jmp
and
push
test
jmp
sbb
test
inc
shl
cmpb
shrl
in
mov
jns
imull
popf
scas
popf
je
test
fidivrs
sub
movb
addr16
mov
push
add
pusha
popf
mov
fadd
cmovne
or
in
xchg
mov
push
aaa
and
fcomps
adc
and
adcb
xchg
dec
sbb
popa
jecxz
aaa
cmc
adc
cld
gs
sub
enter
mov
sti
jle
mov
xchg
fisttpl
enter
xchg
daa
mulb
mov
sbb
xor
xor
and
insb
push
lods
aam
insl
fucom
mov
int3
cmp
leave
dec
stos
cmpsl
xchg
ret
cmpsb
movsl
sti
mov
cmp
cmp
inc
cmp
sbbl
adc
test
iret
xor
pop
or
xor
scas
push
call
sub
insl
jbe
mov
or
fs
xchg
test
xchg
xor
leave
lock
out
jnp
mov
cmp
cli
jg
hlt
call
pushf
mov
adc
fidivrl
inc
jle
and
or
inc
pop
addr16
inc
jge
and
scas
iret
jp
or
mov
movsl
add
adc
dec
cwtl
sbb
adc
and
push
imul
sub
in
call
or
fs
inc
movsb
mov
adc
mov
push
movsb
cmp
push
mov
arpl
pop
jae
xor
inc
daa
mov
sti
push
cltd
popf
xchg
push
icebp
xchg
loopne
repnz
or
mov
ja
frstor
nop
jb
mov
adc
outsb
jecxz
stc
and
adc
movb
xchg
bnd
sub
and
cmpsl
cmp
es
push
xor
sub
ljmp
and
inc
cmp
aad
mov
or
xchg
sub
xchg
xor
or
leave
xlat
sub
xchg
and
add
dec
mov
pushf
ret
push
mov
fldl
or
jge
push
mov
sbb
xor
sub
fnstsw
psrad
add
pushf
test
dec
inc
mov
pop
popa
push
out
out
inc
imul
cmp
shrl
in
jae
xchg
xor
push
pop
dec
adc
inc
lods
imull
sub
clc
jmp
testb
mov
adc
sub
and
fsubl
or
push
cs
dec
imul
jae
scas
setl
or
cmp
sub
scas
cwtl
xchg
mov
test
popa
mov
and
repz
cld
xchg
mov
aad
dec
push
bound
imul
imul
lods
sub
sbb
add
mov
adc
cli
sti
pop
lahf
mov
xchg
daa
int
in
xchg
cmp
jb
lret
dec
popa
aas
repnz
dec
lcall
iret
or
js
imul
arpl
insl
jae
cmp
lcall
enter
jno
stc
clc
adc
add
mov
jns
icebp
ret
mov
mov
dec
inc
and
icebp
movsl
ds
add
outsl
add
loop
push
jo
mov
andl
loop
mov
jbe
cmp
mov
in
xchg
std
pop
dec
enter
clc
sbb
aam
mov
enter
jnp
mov
xor
and
les
jp
stos
lret
cmp
jbe
mov
movsb
cmp
mov
sbb
iret
sub
fsubrs
sub
mov
xor
xchg
mov
das
fs
shl
pop
shll
or
imul
aas
pop
jle
sbb
jno
jecxz
mov
inc
or
stos
cmp
jmp
mov
inc
or
sar
jg
movsl
push
dec
cmp
jecxz
add
mov
mov
fcmove
test
cs
cli
xor
das
sbb
push
shll
pop
jb
fs
dec
add
jbe
dec
xlat
sbb
sbb
int3
sarb
jmp
push
xor
notl
in
sbb
adc
scas
sub
mov
and
push
adc
lock
lock
repnz
or
xchg
pop
cmp
push
imul
add
push
test
jmp
stos
rcrl
or
xchg
xchg
mov
mov
add
and
negb
or
dec
cmp
stos
inc
ljmp
stos
jecxz
inc
cwtl
jecxz
jae
pop
outsb
inc
and
xchg
pop
inc
xchg
stos
out
inc
test
sbb
ja
fwait
sbb
js
call
mov
js
aad
fldl
test
or
imul
popf
jb
or
cltd
pop
lret
lcall
xor
cmp
cs
inc
dec
ds
orps
mov
in
dec
xlat
add
push
mov
or
popw
xor
mov
fdivrl
fdivrl
fldenv
out
and
lods
addr16
sub
enter
inc
stos
add
xchg
push
sbb
push
test
clc
in
mov
in
lcall
fnstenv
or
add
mov
rolb
or
or
test
jbe
pop
sub
rcll
negb
jecxz
int
hlt
add
ret
repnz
repnz
call
fnstenv
hlt
pusha
ja
and
mov
addr16
in
push
dec
adc
jae
and
pop
ss
outsl
xor
or
pop
adc
mov
add
and
mov
mov
mov
push
and
inc
cmpsl
js
sarb
loopne
push
mov
insb
dec
cwtl
cmc
lods
out
inc
repnz
ja
push
jge
xchg
dec
cmpsb
roll
inc
loopne
pop
dec
dec
movsl
fisubrs
fs
cmp
push
in
mov
dec
xor
imul
aam
aaa
out
mov
daa
push
dec
inc
pushf
xor
inc
adc
cmp
call
xchg
lret
in
add
popa
cli
push
mov
or
dec
pop
fldt
pop
pusha
fcoms
in
rorb
in
push
mov
mov
push
bound
mov
push
sub
test
cmpl
mov
stc
subb
add
pop
stos
mov
or
inc
inc
sbb
out
push
addl
xor
fldenv
es
pop
sbb
mov
xchg
sbbl
icebp
sbb
sbb
pop
lock
out
mov
inc
pushf
cmp
arpl
pop
inc
sbb
xadd
sbb
in
sbb
or
sub
aaa
sub
loop
in
or
sub
sub
jp
or
out
lods
adc
push
mov
mov
pop
shrl
cmpsl
adc
shlb
mov
cmc
push
leave
outsl
dec
pmaddwd
push
jno
enter
inc
mov
test
imul
aad
jbe
pop
notb
or
and
js
jo
test
adcl
dec
inc
pop
push
loop
lds
cwtd
push
data16
xor
push
cmp
adc
sti
cmp
pop
xchg
mov
xchg
imul
jp
fsubs
int3
sub
add
mov
stc
sbb
mov
aam
dec
inc
inc
lret
movsl
insl
movsb
mov
int3
jecxz
cwtl
arpl
xor
pop
shl
mov
fistpll
xorl
in
cmp
data16
pop
cmp
rolb
dec
mov
pop
mov
icebp
ret
jle
push
subb
pushf
aaa
push
stos
cmp
stos
or
jecxz
fwait
pop
sbb
stc
jbe
sub
push
jle
cltd
int3
call
push
movsl
cmp
add
add
cltd
add
fs
add
adcb
xchg
push
aaa
hlt
mov
sub
sbb
rorb
xlat
xchg
and
mov
scas
stc
std
lods
imul
notb
fisubrl
lret
inc
xor
cmp
push
icebp
push
pop
pop
popf
push
or
push
xor
xchg
and
inc
add
inc
imul
xor
pop
lock
fs
push
data16
les
pop
adc
inc
jo
sbb
outsl
notl
mov
cmp
fimull
jne
cmp
push
adc
push
adc
dec
int3
sbb
sbb
pop
data16
or
or
sub
mov
jns
jne
test
jne
aaa
and
adc
fiadds
pop
push
bound
lret
cmpb
push
rorl
mov
mov
push
mov
push
lahf
sub
mov
nop
jne
mov
xlat
scas
btr
insb
or
push
jo
jne
fnsave
in
jp
dec
jmp
mov
push
push
ja
jne
in
js
mov
lahf
pushf
add
decl
xor
hlt
pop
dec
ljmp
push
adc
cwtl
pop
cmp
into
jge
fistps
xchg
popa
cwtl
xorb
int
ret
xorb
aad
fwait
out
mov
stos
push
std
push
aad
add
sub
push
pop
fnstsw
inc
adc
inc
xchg
mov
push
xchg
fs
orb
jg
pop
stc
outsl
or
xor
js
nop
inc
jmp
lods
arpl
mov
adc
sub
outsb
xchg
xor
push
push
push
xor
cmp
lods
dec
fsubl
shrl
call
out
into
in
test
lock
cmp
icebp
mov
subl
mov
shlb
adc
push
push
inc
jnp
jnp
mov
cwtl
loopne
mov
xor
mov
movsl
mov
lcall
hlt
pop
sbb
add
jns
pop
insl
test
lahf
cmp
mov
pop
mov
fists
mov
xchg
mov
lock
rorl
clc
stos
add
outsl
lea
xlat
push
dec
sarb
aas
push
pop
clc
cli
pop
add
or
call
leave
sub
test
ja
bound
mov
pop
cmp
push
add
jb
cmp
daa
adc
dec
mov
sarb
mov
out
arpl
mov
xor
pusha
stos
add
inc
and
xchg
dec
xchg
jg
test
push
shrb
test
in
les
push
mov
xchg
push
cmp
mov
add
data16
rcr
outsl
cmpsb
xchg
lret
cmpsb
in
sub
or
jnp
gs
iret
and
testb
imul
repz
adc
jae
sahf
outsb
jb
cmp
adc
pop
push
fstp
sbb
xor
xor
loopne
and
clc
mov
cld
pop
icebp
loopne
repnz
rclb
movd
daa
xor
insl
inc
mov
int
sub
xor
xchg
jns
xchg
out
lgs
and
dec
ds
xor
imul
daa
daa
jmp
inc
arpl
mov
lret
dec
pop
in
mov
push
ret
imulb
sub
imul
mov
adc
movsb
movsb
imul
adc
frndint
jl
xor
adc
int
mov
cmpl
adc
adc
mov
sti
jo
das
incb
subb
mov
ds
mov
xlat
xlat
ljmp
ds
popf
out
sarl
imul
sarb
pop
test
cmc
or
or
push
and
jmp
jmp
pop
push
daa
daa
push
out
cmp
call
jbe
cld
lock
mov
push
xchg
or
sbb
inc
xor
pusha
sbb
ss
test
xor
jo
or
jge
inc
lcall
mov
lret
dec
bound
jg
fs
mov
mov
mov
cs
ljmp
std
imul
mov
out
sbb
xchg
pop
test
stos
add
xor
and
movsb
sbb
mov
int
sbb
mov
nop
neg
lret
xor
add
dec
imul
sub
aaa
dec
mov
je
mov
push
mov
repnz
mov
in
push
dec
lods
pop
dec
lahf
pop
adc
xadd
xor
data16
cmpsl
stos
outsb
mov
cli
movsb
cmpsb
push
xor
mov
and
aad
sbb
jmp
cli
jecxz
in
xchg
nop
movl
pusha
jno
jecxz
test
adc
push
loop
jnp
pushf
into
and
and
call
sbb
inc
xchg
inc
int3
out
test
lods
push
pavgw
mov
out
and
call
bound
or
push
nop
sub
lods
mov
cmp
push
mov
dec
test
orb
fisttpl
or
fcoms
mov
out
fwait
dec
repnz
xor
nop
push
lods
mov
inc
jmp
sub
lret
sub
aas
outsb
andb
cltd
int
cmp
cmpsb
jb
sub
rorb
hlt
xchg
cmp
arpl
jge
cmp
pop
xor
test
sbb
xchg
mov
inc
divl
movsb
mov
addr16
jnp
inc
sbb
xor
add
push
daa
xchg
cmp
sbb
push
adcb
xor
cmp
jecxz
jns
cltd
lds
cmp
sub
je
sbb
lea
rcll
pop
jnp
pop
push
lahf
push
shll
mov
rcrl
pop
push
les
lahf
ja
xor
iret
orb
cltd
mov
and
push
push
xchg
sti
inc
lock
mov
pop
fldl
aad
sub
push
test
lcall
xor
push
xlat
testl
fsubrl
jmp
sub
loope
gs
sub
lods
mov
scas
push
leave
add
and
push
dec
fmull
loopne
sub
clc
mov
sub
push
and
pop
aad
push
pop
lods
mov
push
fadds
mov
out
fstps
cmp
in
cmp
repz
mov
test
ja
test
sub
jnp
sbb
insb
xchg
gs
push
incl
mov
jmp
addr16
fsubrs
sbb
filds
mov
scas
pop
gs
ja
xchg
jnp
push
not
ror
test
orb
data16
mov
sbb
pop
cmc
sbb
xchg
push
imul
and
pop
lahf
and
cmp
dec
sub
repz
std
mov
add
dec
icebp
in
arpl
mov
std
mov
aad
outsl
lahf
xchg
xchg
cmpsl
fldcw
ljmp
rcll
repz
pop
inc
push
pop
pop
or
movsl
enter
add
mov
pop
push
into
pop
sub
out
dec
ds
out
shr
repz
aad
pop
loopne
push
fstl
xor
inc
fistl
mov
sub
sarb
jle
inc
push
mov
mov
mov
ja
aas
loop
pushf
sbb
push
mov
jb
daa
xor
shr
dec
leave
les
mov
pop
adc
mov
push
ret
lods
sbb
shll
out
out
call
and
xchg
out
mov
ret
sbb
or
es
or
or
cs
mov
daa
cs
js
jns
sbb
pop
out
fs
or
mov
std
lret
xor
pushf
ds
and
add
mov
sub
orl
sub
repnz
pop
or
movsb
lret
dec
lret
or
push
sbb
jo
test
mov
push
cmpb
dec
jl,pn
es
jg
ds
add
je
popf
and
jne
add
or
popl
bound
or
popf
imul
shll
mov
into
pop
sub
imul
and
pop
xchg
lahf
or
fcomps
and
and
add
cmp
pop
xchg
ljmp
push
stos
xor
xor
mov
cmp
xlat
cltd
sbb
add
iret
aas
push
pushf
xchg
cs
or
pop
sub
adc
or
fiadds
cmpsl
cmp
nop
sub
mov
ret
sub
stos
push
jo
pop
xlat
jns
enter
inc
outsb
xor
or
add
fdivrs
fstpt
scas
out
jecxz
sub
pop
push
imul
pop
add
xchg
mov
sete
add
cltd
lock
les
arpl
ficoms
popa
inc
scas
add
or
jae
mov
mov
mov
xchg
push
mov
pop
xchg
jno
jmp
inc
clc
pop
cli
push
cltd
lahf
cmp
sbbb
arpl
pusha
lock
fwait
sub
inc
subl
pop
sti
jecxz
imull
cmp
insl
add
inc
lds
in
out
testl
aam
xor
push
ret
xchg
pop
pop
pop
das
repnz
jp
in
inc
cmp
xchg
pop
bnd
int
bound
pop
pop
xor
int
inc
pop
in
xor
mov
scas
mov
scas
pop
pop
fs
and
cmp
out
sti
int
jbe
cwtl
pop
dec
xor
jmp
or
sbb
inc
sub
cmpsl
pop
mov
mov
cli
pop
mov
scas
fldenv
outsl
les
jmp
jp
add
lcall
jnp
je
cmp
jge
add
in
scas
sar
pop
cs
loope
add
enter
mov
je
aas
sub
hlt
xchg
sbb
ds
push
sahf
mov
test
leave
adc
out
out
pop
jnp
or
push
in
sub
enter
outsb
fldenv
daa
sbb
dec
cmp
pushaw
js
lret
call
lcall
add
lock
frstor
out
push
mov
and
dec
enter
fistl
mov
inc
ja
adc
sbbl
add
les
movups
pop
movl
add
push
xor
shlb
test
or
dec
xchg
jb
push
and
jns
das
insl
inc
push
mov
cmpsl
scas
out
xor
jecxz
clc
negb
addl
xchg
pop
lea
aaa
mov
shl
cmp
call
or
jmp
dec
jg
jno
mov
ja
bswap
fistps
pop
loope
outsl
jno
cli
mov
es
imul
imul
pop
sbb
xchg
push
pop
gs
jne
xor
jge
sub
and
xor
and
ret
aad
mov
fdivl
adc
outsb
jb
push
jbe
insb
ss
mov
das
xchg
fimuls
loope
popf
jle
cmp
pusha
shl
or
adcl
das
xchg
and
dec
lret
xchg
push
cmpsl
jae
das
jne
jle
rcrl
cmp
mov
lea
subl
test
jns
push
dec
nop
mov
imul
arpl
add
xchg
lret
pop
sub
hlt
mov
or
xor
mov
es
out
in
out
jg
or
addr16
fcmovnbe
stc
dec
sahf
mov
fldcw
add
xorl
rcrl
and
jmp
dec
sub
ret
clc
out
inc
pop
sbb
aam
out
and
xchg
push
int3
sbb
pop
adc
dec
sbb
imul
dec
and
mov
push
or
out
nop
xor
or
int
shlb
jmp
xchg
push
pop
test
sbb
faddl
mov
xchg
mov
stc
imul
std
pusha
adc
push
sti
push
xor
jle
idivl
movsb
ss
sub
push
dec
negl
pop
das
cmp
nop
pop
mov
cmpsb
sahf
rcll
sbb
xchg
xchg
cltd
dec
mov
lods
imul
mov
pop
xor
jge
js
das
sub
fcmovnbe
and
into
xchg
popa
xchg
xor
shrb
mov
leave
inc
sti
xor
std
aam
pop
cmc
addr16
cmp
les
in
sub
stos
jmp
lret
mov
push
jle
mov
push
loop
or
dec
in
leave
cmpsb
sahf
pop
lea
iret
cltd
add
mov
repnz
jmp
jo
cmp
xchg
jecxz
insb
inc
nop
iret
popa
and
jo
leave
into
int
fists
insb
arpl
stos
adc
pusha
or
jg
sbb
mov
cltd
shlb
movsl
mov
pop
outsb
sub
dec
sbb
scas
and
ror
fdivs
push
adc
xchg
pop
fldenv
aas
push
xchg
and
repnz
push
hlt
or
jle
sbb
lea
int
jbe
imul
cmpsl
xor
fbld
cmp
out
clc
lds
pop
adc
adc
mov
rorb
pop
gs
push
xchg
or
aaa
sub
xchg
push
xchg
loopne
pop
fnsave
sub
mov
nop
dec
mov
dec
push
pop
fsubl
outsl
pop
es
in
or
add
add
jg
xchg
inc
insl
xchg
mov
ss
sub
ret
xchg
les
aas
xor
aam
mov
cmp
dec
outsb
jg
fwait
std
adc
es
and
rclb
jne
movsl
mov
mov
xchg
test
mov
fnsave
sbb
push
decb
or
push
mov
scas
sub
fistl
cltd
outsb
mov
add
jb
in
add
pop
push
xor
or
lcall
sbb
jge
or
cmp
adc
fidivrs
andl
pop
jg
push
jnp
test
hlt
in
xchg
pop
pop
repnz
mov
push
mov
jne
or
ja
cwtl
adc
dec
dec
sbb
fisubl
xchg
jno
lock
aaa
rorb
cs
insb
sbb
xchg
pop
frstor
adc
ret
dec
sub
loop
adc
mov
mov
mov
pop
adc
push
fmull
aad
cli
mov
in
push
inc
faddl
jns
mov
loopne
dec
int
sbb
imul
mov
js
cli
js
ss
stos
fistpll
subb
fdivl
int
mov
in
fdivr
and
xchg
mov
int3
jb
mov
adc
fdivl
les
pop
sbb
lcall
xor
mov
pop
mov
in
test
adc
fcmovu
and
cmp
mov
lret
push
in
ljmp
daa
jns
data16
dec
xorb
mov
jg
xchg
popa
xchg
mov
psrad
xchg
xor
aas
adc
gs
js
int3
idivb
inc
jp
stos
addr16
fisubs
xchg
pop
pop
cmp
push
jmp
xlat
fwait
sub
rol
pop
jle
push
jne
fcoms
into
fs
repnz
out
std
or
cmc
lods
int
cmpl
mov
adc
dec
ret
push
xchg
jle
mov
and
daa
or
dec
cwtl
jo
pop
jp
fstpl
call
ljmp
push
jg
sbb
sbb
xor
add
aad
int3
clc
add
sub
mov
xchg
in
push
ljmp
je
fs
ficoms
mov
jl
test
cld
test
dec
xlat
dec
or
inc
inc
or
inc
fsubrp
or
or
inc
mov
addr16
dec
outsb
enter
in
stc
pop
iret
popl
pop
jns
xchg
or
inc
or
sti
adc
mov
int
std
in
leave
push
enter
loop
cmp
xchg
insb
aaa
mov
push
fisubrl
inc
lods
repnz
ret
iret
xchg
leave
or
jbe
ds
dec
je
mov
lret
leave
mov
xor
inc
imul
or
gs
aaa
sub
fnsave
inc
lret
sub
mov
xchg
xchg
add
or
rcl
sub
cld
sbb
mov
xor
xchg
ja
les
sbb
or
das
lock
mov
mov
mov
push
lock
in
loope
arpl
push
xchg
cltd
lods
mov
and
jmp
les
rol
pinsrw
and
adc
cmp
out
push
pushl
add
cltd
adc
test
or
xorl
xlat
mov
cmp
loope
dec
dec
pop
push
sbb
aad
xchg
add
mov
mov
add
pop
xchg
jmp
daa
xorb
cs
lods
cmpsl
cmpsl
dec
cwtl
adc
mov
mov
not
adc
inc
aaa
je
shll
mull
jmp
stos
pop
cmp
ret
sahf
xchg
xchg
mov
fwait
adc
enter
jmp
icebp
cmp
adcl
and
add
mov
inc
pop
mov
or
in
jg
ret
test
jl
xor
out
mov
stos
rclb
les
inc
push
cmpsb
xor
fiadds
mov
popa
sarl
sahf
inc
pop
dec
out
xchg
js
xor
popf
les
ljmp
clc
popf
xor
cwtl
in
cli
and
sub
xchg
push
fcmovnbe
je
je
sbb
dec
mov
xor
sbb
fcoms
test
in
sbb
jle
rclb
or
mov
gs
mov
aas
jg
das
xchg
test
mov
fbstp
adc
imul
lcall
test
outsb
shrb
xchg
jmp
add
push
xchg
lret
cmp
pop
stos
mov
das
and
jg
xor
push
cmpsl
aam
test
mov
repnz
mov
aam
jmp
loopne
add
sbb
lahf
mov
inc
lock
pop
loopne
sub
aam
mov
and
loop
cwtl
dec
jecxz
mov
jb
arpl
adcl
int
xor
mov
dec
aam
cmp
xlat
pop
test
dec
dec
bound
ficompl
jl
pop
jae
leave
xchg
insb
cwtl
pop
pop
sbb
loope
adc
inc
and
dec
adc
sub
dec
cmpsb
pop
jno
push
cli
out
dec
rcl
cwtl
test
pop
pushf
mov
jge
subw
dec
mov
stc
pop
aam
test
aad
in
and
xchg
pop
scas
lcall
and
ret
ja
push
loopne
sub
fnsetpm(287
pushf
pop
repz
inc
jge
adc
out
jbe
mov
add
out
testl
push
lret
out
dec
pop
xchg
jne
adc
and
inc
sub
les
push
test
jo
neg
sbb
pop
or
push
nop
outsb
insl
aad
movsl
lods
xchg
jl
xorb
ja
push
fldl
sub
repz
sahf
leave
jg
jmp
ds
push
jb
mov
es
or
sub
clc
arpl
lea
notb
int
pushf
pop
cmp
lahf
cwtl
push
lcall
pop
sbb
jne
push
sub
xchg
xchg
jmp
dec
dec
push
scas
inc
inc
xlat
sub
adc
pop
pop
add
test
sbb
push
jmp
push
frstor
dec
andl
inc
movsl
or
fisubs
insl
mov
repz
fsub
outsl
pop
mov
outsl
dec
shlb
sbb
dec
movsl
cmp
mov
push
mov
lret
mov
or
mov
inc
pop
inc
out
inc
rorl
shlb
and
stos
cs
in
fists
adc
xor
cmc
inc
rcll
jnp
in
mov
cld
jmp
and
and
adc
sbb
pop
sarl
aas
lods
xor
mov
mov
lods
push
mov
ljmpw
aad
stos
data16
and
cmp
inc
push
shl
mov
jp
fldt
jbe
xor
arpl
addl
mov
call
xlat
in
sub
enter
arpl
pop
jo
insl
mov
mov
adc
push
gs
stos
aas
movsb
lea
push
pop
mov
loopne
jp
xor
inc
sub
pop
xor
daa
mov
fildll
push
sub
and
daa
xchg
jne
sbb
lea
xchg
imul
pop
push
dec
push
out
dec
pop
lea
xor
adc
inc
enter
push
xor
add
mov
in
xchg
movsb
push
add
ja
and
or
movsl
push
mov
aam
daa
cwtl
pusha
add
std
cmc
loop
insl
psubq
aaa
lea
jmp
jnp
and
pop
mov
cld
pop
xor
push
sbb
outsb
icebp
jecxz
inc
push
imul
mov
aam
mov
mov
clc
mov
inc
icebp
scas
push
iret
add
inc
adc
push
cmp
mov
aaa
dec
out
mov
out
xchg
imul
popa
add
es
popf
cmp
bnd
pop
cmp
pusha
sub
lcall
das
dec
pop
sub
js
test
ljmp
dec
cmpsl
mov
lock
xor
xor
lds
sub
pusha
jne
faddl
cmpsb
dec
mov
aaa
fs
sub
xlat
xchg
lea
cli
mov
cld
jle
lea
jmp
fsts
test
std
push
idivl
inc
inc
mov
lock
adc
popa
pop
stos
cmp
xchg
shlb
inc
pusha
inc
test
lret
inc
dec
mov
mov
sahf
add
mov
xchg
and
xchg
das
mov
xchg
test
aaa
mov
popf
jle
fidivs
repz
jns
ret
pop
loopne
jle
xchg
rcr
gs
jl
adc
sub
adc
ror
xchg
cmpsl
sbbb
or
dec
sub
in
push
movsb
dec
nop
and
push
xor
push
xor
out
sub
pop
mov
out
lods
push
inc
aad
push
mov
push
adc
mov
adc
inc
push
pop
dec
xchg
imul
fmuls
push
jae
push
push
jle
adc
call
movsb
sbb
xchg
mov
leave
and
sbb
xor
pop
sbb
pusha
ret
mov
push
out
push
adc
addb
into
pop
gs
or
mov
call
fs
xchg
cmp
jge
pop
inc
pop
add
push
jnp
orl
cld
mov
dec
ljmp
cmp
out
xor
xchg
pop
out
ficoms
sbb
push
mov
push
movsl
inc
in
dec
and
adc
jg
sbb
subb
inc
adc
mov
push
jg
std
adc
in
enter
sti
or
cmpsb
sbbl
cwtl
js
mov
imul
cmpsl
mov
rol
cmp
mov
call
adc
outsl
je
pop
inc
hlt
hlt
jno
xchg
lahf
sahf
pop
inc
push
mov
cmp
inc
xchg
and
or
rcll
mov
mov
dec
add
and
mov
or
lds
cs
jnp
fadd
lds
dec
popl
hlt
or
lret
hlt
lret
stos
stos
mov
mov
add
enter
loop
cmp
lock
shrl
aaa
ret
fildll
add
adc
sbb
jl
arpl
mov
mov
xlat
cmc
inc
xor
test
or
jnp
lods
cmp
cmpsl
stc
xchg
shll
dec
in
sub
cmp
cmpsl
pop
imul
mov
outsl
xor
xlat
dec
cmc
scas
ret
jae
dec
out
dec
jge
mov
or
and
data16
xchg
mov
leave
dec
pop
jae
jns
inc
decb
push
xchg
xorl
inc
sbb
inc
cmp
mov
outsl
neg
adc
ja
fnstenv
lea
std
roll
je
push
fisubl
add
sti
arpl
mov
aam
sbb
cld
adc
out
jbe
sub
aam
jnp
shll
adc
pop
ljmp
push
xor
push
movb
cmp
test
mov
mov
test
insb
faddl
sbb
jno
lahf
rorl
mov
ficompl
mov
xlat
pop
pop
sahf
push
cmp
sbb
mov
in
sub
popa
rcrl
popa
lods
jns
inc
cltd
leave
mov
sub
xchg
cmp
cmp
mov
insl
mov
orl
fnsave
pop
pop
or
insb
pop
adc
int
test
popf
add
leave
sub
cmpsl
jg
or
sahf
pop
sbb
pop
or
xchg
or
pop
icebp
add
jl
les
shrd
dec
sbb
or
daa
sti
jmp
push
std
lret
sahf
test
cmp
mov
lods
sub
push
fistpl
or
ds
sbb
pop
pop
arpl
cmp
dec
add
movups
aad
or
pusha
mov
sti
cli
sar
pop
out
add
mov
cmp
mov
fimuls
xchg
pop
mov
gs
js
push
aaa
or
inc
dec
leave
pop
xlat
enter
bound
add
mov
movsb
mov
in
out
outsl
inc
icebp
mov
sbb
and
pop
push
std
xchg
clc
dec
out
cmc
mov
xor
adc
dec
inc
mov
push
daa
sbbb
adc
add
pop
jb
insl
into
repnz
cli
lock
mov
and
inc
inc
aam
mov
cmp
leave
sub
mov
cmpsl
movb
loopne
mov
cmp
mov
pop
push
xchg
push
in
xor
hlt
pop
lea
fidivs
fsin
xchg
xor
and
mov
xor
insl
rclb
sar
and
xchg
out
pop
push
stos
icebp
cmp
inc
add
orb
xchg
imul
mov
xor
test
sbb
aas
mov
pop
add
test
xchg
mov
fldl
sub
insl
adc
mov
mov
or
sarl
xlat
shl
xorb
add
push
pop
push
mov
inc
jmp
push
sbb
sub
dec
les
dec
cmc
xchg
push
popa
xchg
xor
int3
in
xchg
xor
orb
loop
sbb
push
out
arpl
clc
and
int3
sbb
loop
xchg
fwait
cltd
nop
pop
pop
aas
out
cmp
or
mov
or
sbbb
jb
mov
jg
and
dec
jae
shl
lret
fsubrs
add
pusha
xchg
flds
cmc
adc
and
mov
cmp
in
les
adc
dec
cmp
add
pcmpeqw
dec
insb
repz
jmp
clc
sub
push
push
sbb
add
clc
enter
xor
sbb
cli
call
leave
lods
loop
int
cmp
into
pop
test
das
and
ret
mov
int
mov
lock
bound
iret
cmpsb
aas
mov
jno
cltd
mov
sbb
mov
aaa
mov
aam
pop
xor
dec
dec
push
xchg
rcrb
test
icebp
das
dec
mov
push
es
mov
out
stos
xor
pop
cwtl
adc
add
push
jg
xor
push
aad
es
lcall
gs
repz
fnstenv
in
push
fwait
pop
in
push
bnd
sti
das
ficompl
outsb
rorb
in
int
mov
push
aaa
outsl
and
xor
scas
rorb
insl
sbb
pop
xchg
inc
and
repnz
adc
jnp
adc
rcll
lock
imul
pop
cmpsl
and
push
pcmpeqb
xchg
pop
mov
or
into
out
push
insl
add
test
in
mov
mov
mov
test
push
inc
addr16
repz
mov
and
jns
pop
push
lret
sbb
mov
and
adcb
sub
jo
sub
sbb
stos
mov
pusha
dec
sub
xchg
pop
jne
push
je
pushf
xor
mov
icebp
sbb
dec
pop
jno
mov
adc
aaa
mov
testl
fbld
adc
push
pxor
adc
jmp
or
xlat
mov
repz
pop
nop
jecxz
inc
sub
adc
or
xchg
pop
ja
ret
ds
mull
push
lock
mov
sub
cmpsb
jl
movsl
je
lods
cmp
fistpll
jecxz
xchg
xor
sub
mov
adc
mov
sbb
lods
push
shrl
xchg
or
cwtl
dec
test
test
xor
jl
xor
repnz
pushf
ss
mov
fstpt
xchg
xlat
and
xorb
or
iret
jmp
inc
test
and
mov
mov
sbb
aad
adc
rclb
gs
out
xchg
stos
mov
add
inc
cs
test
scas
shr
add
mov
xchg
push
enter
pop
mov
cmp
scas
jo
into
push
sbb
mov
push
mov
sub
ljmp
pop
adc
repnz
jg
out
push
in
aaa
test
push
add
ja
leave
pop
ljmp
or
div
and
mov
cmpl
inc
and
iret
adc
cmp
mov
sahf
notl
lret
in
nop
hlt
xor
inc
cmpsb
inc
shll
inc
mov
in
inc
dec
cmpl
pop
test
shl
inc
mov
ljmp
inc
jno
mov
push
or
shl
mov
add
outsb
gs
gs
cmpsb
fs
inc
cmp
xchg
push
cmp
pop
pop
dec
jg
or
push
insl
aad
dec
addr16
and
adc
add
inc
mov
and
or
mov
push
subl
inc
xor
xor
add
mov
inc
sub
int3
inc
lods
xchg
adc
ljmp
jno
xlat
or
xchg
ror
test
lcall
repz
push
aaa
jbe
mov
loopne
or
mov
stos
or
sub
ficoml
mov
mov
or
push
iret
jo
mov
push
loope
mov
mov
hlt
push
or
bound
xor
and
notb
add
sbb
testl
adc
push
push
lcall
lret
cmpb
shrl
outsb
cld
cmp
mov
lds
mov
popa
jne
push
jmp
cwtl
mov
repnz
sbb
mulb
insl
es
out
push
xor
test
ss
lea
xchg
inc
xchg
jle
pop
adc
add
in
nop
xor
pop
data16
mov
popf
inc
pop
test
sarb
fiaddl
std
data16
aaa
inc
sub
adc
nop
inc
clc
mov
rcrl
jae
pop
imul
push
add
mov
outsl
std
mov
subl
adc
shrb
mov
lds
ret
xchg
movsl
test
inc
xchg
mov
or
cmp
iret
out
jb
adc
adc
mov
out
jno
add
gs
jns
mov
fs
sbb
xchg
cwtl
andl
ficoml
or
adc
cld
xchg
jl
jo
add
mov
xor
adc
or
out
dec
ljmp
cltd
cmpsl
out
dec
mov
jmp
jnp
dec
and
hlt
cmp
imulb
ljmp
cmp
push
push
dec
push
inc
inc
sbbl
push
out
out
daa
decl
dec
mov
push
xchg
or
shrl
mov
jp
pusha
add
repz
stos
ds
xor
fistpll
push
add
ret
iret
xchg
mov
mov
cli
mov
test
movsb
cmp
sbb
push
and
in
mov
or
cmc
loopne
push
loopne
push
jb
adc
out
int
sbb
and
fcmovnb
fs
mov
addr16
sub
sub
pop
insb
or
cs
call
out
ss
mov
lcall
ss
push
pop
adc
stc
imul
cld
mov
into
sub
add
in
movsb
push
cs
cmp
fdivs
push
cmp
frstor
fisttpll
test
add
and
sbb
push
int
int3
repnz
clc
jo
push
xor
int3
push
aam
sub
repnz
cmp
bound
test
gs
in
xor
out
lret
out
gs
dec
mov
jnp
pop
out
leave
jle
adc
fwait
mov
mov
and
lahf
xchg
mov
xor
pop
xor
sub
or
loope
add
adc
mov
daa
cltd
sahf
xor
push
fwait
incl
in
bound
dec
xor
push
lods
jge
std
iret
jae
fsubrl
sbbl
and
mov
pop
test
shrl
xor
and
roll
outsb
jl
es
fcoml
outsb
je
xor
add
fldpi
popa
push
clc
cmp
or
lods
inc
fisubs
inc
pusha
push
jne
sub
clc
xor
sti
push
adc
das
imul
cmpsb
aaa
loope
sub
cmp
or
ja
je
adc
mov
jp
rolb
lahf
sbb
mov
sbb
pop
jmp
pop
adc
cli
and
dec
adc
arpl
and
loope
pushf
ss
push
mov
nop
mov
or
neg
loope
test
les
addr16
je
or
add
pop
pop
sub
popl
jmp
mov
aas
and
xor
mov
mov
aam
inc
in
mov
std
sbb
sub
xor
cmp
dec
or
nop
or
pop
dec
dec
loope
push
cmp
fistpl
scas
mov
addl
push
mov
pop
insb
movsl
out
xchg
insb
fisubrs
xor
hlt
adc
je
mov
shl
push
push
push
test
imul
shl
cmp
jne
xor
aam
les
dec
xor
jmp
fistl
and
or
pushl
adc
push
imul
pop
cmp
rolb
push
shll
sbb
xchg
sub
cwtl
jno
lahf
inc
mov
pop
mov
shll
fucomi
lds
dec
adc
push
sbb
sub
adc
cmp
xchg
or
adc
jmp
mov
into
jecxz
dec
push
in
stc
mov
inc
mov
addl
sbb
jg
ja
loop
movsb
inc
lods
test
out
pop
lahf
iret
stos
adc
dec
popa
stos
incl
aaa
int3
push
cmp
jns
pop
call
inc
inc
or
push
lods
xor
sub
inc
insl
pop
sub
push
mov
imul
sbb
fldl
daa
int
sbbl
imul
arpl
sarl
addr16
push
cwtl
clc
add
sbb
jl
pop
testb
push
inc
and
arpl
pop
divb
and
leave
xor
mov
pop
or
fsts
xchg
repz
mov
outsl
lods
cs
cmp
out
stc
mov
jnp
movsl
mov
cmp
addb
in
aad
pop
sub
cmp
mov
arpl
mov
cmp
jns
enter
femms
mov
sbb
and
or
sbb
and
imul
pop
cmp
aad
data16
push
xor
mov
pop
adc
pushf
in
mov
mov
in
addr16
loope
fxam
pop
add
addl
and
pop
addr16
cs
inc
dec
sub
lret
test
cmp
or
leave
lcall
mov
repnz
leave
scas
inc
mov
ret
int3
xchg
lret
mov
movsbl
pop
push
jo
std
push
sahf
in
ja
mov
in
mov
cmp
movsb
insb
aas
stos
lahf
mov
repnz
mov
movsb
xchg
or
jl
cmpsb
mov
pop
and
mov
pop
xchg
in
aas
push
add
popf
aad
pop
orl
scas
movsb
add
dec
adc
lock
ret
lods
pushf
or
push
cmp
aad
adc
lcall
in
clc
jp
adc
pop
in
sbb
mov
xchg
in
insl
in
cltd
idivb
orb
mov
cwtl
mov
mov
les
and
imul
xor
jmp
cmp
mov
adc
outsb
mov
lock
mov
cs
sbb
or
insb
sbb
scas
cmp
mov
sub
mov
pop
adc
fildl
dec
sbb
add
fdivrs
adc
jbe
les
mov
into
xchg
and
lret
std
fists
mov
pop
mov
das
inc
sub
jbe
sbb
mov
fimull
pop
add
aam
push
add
sub
sub
mov
push
xor
mull
mov
repnz
and
mov
push
insb
push
jp
in
inc
out
arpl
enter
pop
cmp
mov
mov
and
test
add
and
inc
push
adc
or
les
sub
mov
fwait
pop
add
mov
ds
sbb
push
fxch
mov
and
mov
pop
push
mov
cli
mov
push
inc
addr16
jl
cmp
pop
ret
mov
sbb
xor
push
icebp
push
fists
push
push
stos
fdivr
in
cmp
jbe
cmpsl
cs
addb
mov
in
mov
add
push
add
aad
call
aad
fsubp
repz
scas
mov
stc
clc
daa
mov
mov
test
iret
mul
adc
pusha
and
lods
fs
sahf
mov
xor
call
jno
push
push
lods
outsl
jns
push
cmpsl
xor
std
es
lds
inc
leave
ljmp
push
or
xchg
lret
mov
popf
sbb
sbb
rolb
mov
jg
jg
xchg
insl
divl
jp
test
or
and
mov
movsl
xchg
test
adc
cs
pop
movsb
aaa
inc
cmp
and
lea
mov
add
pop
sub
ss
cs
adcb
add
enter
inc
notb
xor
dec
aad
lcall
mov
jge
stos
xchg
inc
xchg
cs
pop
pop
rcll
xchg
pop
movsl
and
adc
dec
stos
out
loope
cli
add
int
shrl
lcall
pop
xor
sahf
rolb
or
mov
aam
fldcw
add
xchg
shll
fcomp
inc
mov
test
adc
movsb
mov
sysenter
sbb
aaa
lods
mov
mov
lahf
xchg
push
jo
dec
mov
and
clc
or
call
notb
cmpl
sar
or
mov
sti
movb
fisttpl
test
shrl
xor
mov
mov
push
sbb
shll
jno
arpl
scas
jae
popa
xchg
pop
push
ror
movsl
push
cmp
xorl
adc
add
dec
imul
xor
mov
cmc
add
addr16
into
ret
cmpsb
shll
add
orb
loopne
inc
negl
sub
jp
mov
or
and
movsb
test
xchg
sub
outsb
iret
cmp
sti
aam
hlt
ficompl
mov
pop
xchg
pop
insb
aam
scas
cs
mov
icebp
stos
arpl
push
stos
push
dec
pop
in
lret
or
xchg
push
push
or
cmpsb
mov
and
imul
shll
and
xchg
lods
jecxz
ds
in
push
adc
in
pop
jmp
shlb
or
loopne
and
and
fiadds
sub
mov
dec
imulb
fwait
mov
xchg
cmpsb
mov
mov
ret
jae
repz
cmp
pop
dec
leave
sarl
inc
xor
mov
movb
bnd
ds
fnstenv
outsl
ret
add
or
jne
or
cwtl
jne
arpl
lahf
jo
mov
mov
ja
ljmp
mov
cmp
and
test
std
mov
xorl
test
mov
xchg
outsb
test
mov
or
adc
jge
mov
nop
xchg
in
push
test
add
mov
sahf
sbb
mov
mov
ret
xor
mov
push
sbb
sbbb
out
fmul
pop
in
out
push
aad
jo
mov
nop
mov
or
sub
cmpsl
and
mov
mov
and
cmp
mov
insb
lret
int
scas
xchg
pop
push
jmp
adc
dec
fdivl
push
fs
mov
cmp
data16
mov
inc
repz
adc
adc
push
lret
stos
and
sbb
jle
mov
add
rclb
jl
iret
mov
test
or
mov
js
movsl
cld
and
in
mov
jns
jl
loop
cmp
cmp
pcmpgtb
ds
outsl
lret
mov
mov
xchg
outsb
call
das
and
mov
stc
int
insl
pop
mov
and
das
test
sub
xor
jmp
mov
mov
pusha
add
arpl
out
dec
mov
call
inc
inc
sub
inc
mov
mov
ret
push
xchg
add
mov
or
xchg
mov
in
fisubl
sbbl
pop
ret
outsb
xor
xchg
and
pusha
jp
mov
or
jge
mov
mov
xor
xor
push
dec
add
cld
xor
frstor
stos
cs
mov
int3
or
or
xor
pop
xlat
cs
outsl
aaa
cwtl
idiv
addr16
add
dec
lcall
and
dec
jg
xchg
adc
or
jmp
push
insl
pusha
xor
sub
and
mov
hlt
xor
cmpsl
lock
mov
pop
fwait
pusha
sub
loope
cwtl
lea
arpl
scas
xchg
out
inc
cwtl
inc
sub
dec
lcall
or
test
lret
and
addb
push
int3
mov
leave
dec
and
push
pop
jb
cltd
jecxz
testl
lods
out
test
jno
mov
cltd
insl
adc
in
xor
push
hlt
xor
jae
fdivs
dec
jae
xor
and
imul
arpl
pop
test
shrb
in
pop
mov
cmpsl
or
call
rorl
out
fstpl
adc
xchg
adc
xchg
dec
mov
repz
fidivrl
mov
push
addr16
les
mov
mov
cmpsl
arpl
daa
mov
xchg
enter
in
lods
mov
cmp
bnd
outsb
sbb
in
pushf
xchg
adc
lahf
dec
ret
or
sbb
or
lods
mov
mov
iret
mov
repnz
in
cmp
push
and
imul
jp
inc
xor
jno
outsb
pushf
xchg
xorb
or
xor
lret
inc
push
xor
adc
in
sbb
pop
dec
mov
std
pop
test
cmp
dec
fldcw
jecxz
cltd
mov
movsl
addl
mov
mov
and
adc
lahf
dec
xchg
daa
xor
jp
icebp
xchg
enter
dec
lea
adc
sbb
idivl
mov
sub
and
test
movsl
add
in
cmp
xchg
or
add
sub
pop
inc
dec
aas
movsl
dec
shrb
mov
pushf
aas
and
pop
or
push
or
xchg
cs
add
stc
cld
out
sbbl
sbb
dec
mov
mov
pushf
inc
sti
scas
and
dec
imul
push
jle
mov
call
call
outsb
insl
mov
jle
cmp
daa
push
push
int3
jbe
cmp
mov
dec
out
movsl
mov
jge
leave
xorb
ja
inc
das
outsb
ret
pop
sub
ret
arpl
arpl
inc
inc
or
popa
es
inc
int3
repnz
cmpsl
mov
sub
aad
add
xchg
jmp
add
xor
loop
mov
sub
pop
and
enter
icebp
jg
out
xor
lcall
xchg
xchg
lods
andb
mov
dec
es
out
cmc
mov
and
aaa
xchg
lds
popa
loopne
fstpt
rorb
stc
xor
dec
or
sub
sub
push
out
cwtl
or
loop
mov
add
cli
pop
mov
jg
insb
popf
mov
and
xchg
sarl
in
lret
mov
lahf
clc
mov
jno
aam
rcrl
icebp
nop
mov
or
std
test
mov
cltd
push
fs
movsb
cmp
in
in
outsl
xlat
push
lods
test
dec
pop
cmpsb
stos
lret
out
push
jnp
or
mov
testb
test
and
push
jae
push
enter
in
add
push
lock
cmp
cbtw
insl
outsl
adc
icebp
jg
nop
cwtl
push
push
mov
mov
mov
mov
dec
or
xchg
or
jae
jbe
psrad
nop
push
std
jecxz
fsubr
rcrl
pop
or
jge
xchg
sub
jnp
cli
adc
pop
xchg
fwait
push
adc
xor
cltd
lods
dec
imul
sub
sbb
jmp
jmp
adc
shlb
or
inc
loopne
js
inc
rep
sub
lock
in
scas
movsb
add
lret
pop
pop
fdivrs
fxch
mov
test
sub
test
gs
repnz
xor
movsb
adc
push
cmpsl
sarb
add
lock
iret
jmp
pop
negl
or
in
dec
cmp
push
dec
sub
add
inc
lock
xor
add
dec
lock
pop
lock
add
add
dec
lock
pop
lock
add
add
imul
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
