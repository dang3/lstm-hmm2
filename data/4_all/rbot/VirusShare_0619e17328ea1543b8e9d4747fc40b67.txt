cmp
xchg
out
lods
mov
jb
in
add
outsb
stos
mov
cli
jle
cmp
stos
gs
scas
dec
mov
xchg
or
fwait
cmp
push
cld
insl
or
sub
lahf
jae
mov
pop
pop
push
dec
addl
mov
sbb
mov
push
insb
or
ljmp
std
mov
push
hlt
outsl
jbe
in
aaa
cmp
push
cmp
js
pause
inc
push
cli
jmp
gs
mov
sub
xor
test
jle
loope
test
outsl
nop
xor
mov
push
leave
cmc
lret
jge
shl
insl
inc
sub
mov
iret
add
mov
jnp
repnz
sarl
and
sub
dec
das
jl
add
xchg
pusha
cmpsl
jno
add
pushf
fcmovnu
cmp
inc
cld
insl
mov
sbb
in
shl
mov
push
jno
call
push
mov
inc
push
mov
ss
es
xor
cmc
jmp
mov
xor
lahf
or
call
iret
ja
mov
fcmovne
inc
dec
xor
movsl
mov
fcmovb
ss
jle
sbb
daa
out
add
xor
push
sahf
fisttpl
sbb
ljmp
add
repz
iret
cmp
cmp
leave
clc
es
and
mov
mov
pop
bound
xor
gs
das
or
mov
fsubs
in
xchg
rolb
cld
cwtl
push
out
dec
lds
xchg
jp
ret
jo
les
ss
jns
test
mov
fcmovbe
and
dec
test
out
xchg
out
cmc
bound
fistps
in
sub
out
inc
cmc
pop
jns
adc
dec
fwait
sbb
xchg
mov
xchg
pop
out
popa
push
mov
imul
cmp
jge
cld
jl
mov
or
push
gs
cmp
scas
sub
orb
in
jmp
out
or
outsb
inc
mov
dec
mov
testb
repz
cmp
test
test
xchg
pop
xchg
into
xchg
jbe
gs
jmp
mov
cmp
popa
idivb
dec
sub
push
mov
xchg
repz
and
test
pop
in
sub
cmpsb
stc
stos
ficoms
fcmovnb
adc
pushf
rcrl
rcl
xlat
xchg
push
shll
mov
mov
inc
cmp
cmp
dec
rorl
imul
faddl
scas
fcompl
lea
jne
xor
add
imulb
inc
or
fidivl
and
fimuls
sbb
addb
lods
pop
cmpsl
jne
inc
notl
stos
sub
inc
nop
fisubl
ljmp
pop
add
movl
repz
or
mov
popf
cmc
lods
bnd
insb
xor
pop
and
pop
call
jno
ret
cmp
dec
test
mov
fsubrs
mov
lock
ljmp
jmp
inc
aam
loopne
fbstp
testl
or
sbb
jne
aas
add
dec
cmp
movsl
mov
or
inc
js
sbb
insl
outsl
push
xor
cs
movsbl
push
or
test
mov
or
into
inc
cmp
not
inc
xor
scas
js
push
lods
jp
lea
repnz
dec
mov
mov
fs
xor
mov
push
dec
and
xchg
cwtl
out
jnp
or
flds
test
jo
fnstcw
cmpsb
js
daa
repz
pop
stc
jp
xchg
and
pop
jl
adc
in
shlb
lret
pop
jbe
sub
mov
xchg
enter
lods
clc
push
cmc
in
notb
test
pop
sarb
pop
adc
pop
sbb
mov
popf
add
cmp
dec
cwtl
mov
cmp
jne
xorl
inc
sti
pushf
pop
addl
mov
adc
into
insb
mov
outsl
repnz
mov
xchg
repnz
lret
or
je
fwait
je
mov
adc
jg
mov
xchg
inc
sub
push
push
ret
jnp
or
mov
jmp
push
das
popf
in
call
ret
daa
sbb
inc
push
inc
sbb
hlt
outsl
in
mov
inc
das
jno
mov
pop
test
sbb
or
repnz
mov
ss
stos
je
inc
add
xlat
pop
push
jge
aaa
aaa
nop
push
lods
addr16
shll
lea
outsl
mov
mov
sub
lret
sarb
loop
sub
lret
jecxz
sub
mov
mov
adc
aad
popa
jno
in
xor
push
outsb
xchg
test
cwtl
test
and
cmpsb
stos
jecxz
or
cmc
adc
xor
push
les
push
xchg
pusha
push
call
mov
repz
and
pusha
insl
or
pop
pop
push
pop
push
test
pop
add
stc
mov
jp
test
xor
push
test
pop
stc
jnp
jle
jl
cmp
push
cmp
pop
jmp
jmp
call
inc
dec
test
test
jno
push
push
std
cld
pop
pop
jno
jno
push
shr
pop
mov
add
loop
jecxz
sbbb
add
movsb
sbb
out
adc
rcr
out
std
out
daa
add
add
push
pop
pop
or
lea
mov
push
jg
push
mov
pop
pop
test
nop
clc
add
push
sub
pop
clc
xchg
cld
cmc
xor
add
jl
cmp
or
clc
test
je
push
push
jb
push
xchg
pop
pop
pop
push
push
jo
sub
pop
pop
rol
jnp
cmp
jl
test
ror
clc
cld
push
add
pop
cmc
jmp
mov
hlt
in
cmp
xchg
aad
fwait
xchg
inc
mov
xor
mov
pop
mov
add
pop
mov
in
fstpl
xor
mov
sub
xor
outsb
iret
and
loope
ficoml
push
xor
pop
push
call
push
add
mov
inc
in
mov
cmpb
xchg
sbb
xor
lahf
mov
pop
mov
inc
inc
inc
inc
push
push
or
pop
pop
shl
cmc
nop
push
jg
push
test
pop
pop
clc
jno
push
jg
jo
clc
pop
test
not
not
test
push
push
pop
add
pop
jo
jae
push
dec
pop
push
push
test
pop
pop
clc
dec
jne
shl
cld
loop
jecxz
xlat
sti
inc
ja
daa
pop
pop
dec
out
repnz
xlat
jnp
ja
cmp
pop
inc
add
sbb
movsb
iret
ljmp
push
pushf
add
sbb
jno
loop
jecxz
popa
adc
and
cli
or
xor
lods
cli
aad
push
inc
das
dec
push
pop
push
pop
or
std
adc
sahf
push
pop
sbb
sub
sti
subl
cmp
and
std
sti
out
andps
mov
and
pop
mov
and
jl
xor
xchg
jmp
pop
cmp
adc
enter
push
or
inc
jp
lea
loop
jecxz
outsl
lea
mov
loopne
pushf
jecxz
mov
push
pop
pop
sti
ret
sub
aad
sub
jmp
pusha
inc
mov
inc
and
inc
in
push
push
adc
and
add
push
push
ror
pop
pop
cmc
ror
and
nop
jmp
jmp
sub
clc
cmpsb
add
adc
jae
repz
pop
cs
jo
sub
imul
push
cltd
push
scas
cwtl
cld
sbb
pop
enter
movsl
scas
imul
or
fldt
lret
sub
les
xor
sub
xchg
add
cmpsl
les
mov
loopne
add
ret
outsb
mov
pusha
cltd
cwtl
xchg
jl
sbb
push
xchg
repnz
xor
dec
das
out
push
xlat
jg
dec
push
leave
jecxz
jecxz
out
ja
roll
std
sub
daa
mov
mov
mov
jp
lock
cmp
fwait
dec
dec
xor
das
dec
data16
out
adc
aad
js
mov
fsubrl
mov
lretw
cmp
adc
mov
call
lock
jo
inc
jle
mov
mov
leave
push
cmp
cmp
and
or
dec
lods
ljmp
or
lods
sub
ss
cmc
inc
xchg
sbb
xchg
out
ja
cmp
pop
mov
call
inc
lods
data16
mov
imul
into
lods
in
jecxz
adc
and
sbb
pop
fs
cmp
sarb
andl
xchg
nop
and
cmp
jge
xor
shll
pop
inc
push
std
jecxz
jno
out
fs
cltd
fnstenv
stos
nop
out
lock
adc
clc
pusha
jle
cmp
outsl
loope
lea
outsb
loop
enter
daa
jmp
gs
mov
mov
mov
movzwl
push
pop
cmc
push
enter
pusha
aaa
push
sar
cmp
cmp
fidivrl
xchg
pusha
je
push
inc
pop
push
push
enter
dec
pushf
dec
xor
push
ljmp
imul
inc
cmpsl
out
stos
in
popl
cmp
das
pop
cmp
loopne
cmpsl
and
mov
mov
dec
fwait
adc
cmpsb
push
fsubrs
enter
xor
cmp
cmpl
mov
mov
push
out
ja
cli
fldcw
mov
popa
mov
cwtl
pop
insl
jg
lcall
jmp
mov
push
popf
in
push
lret
push
adc
mov
pop
imul
leave
or
lods
scas
cwtl
aam
inc
rol
arpl
or
xchg
lock
sbb
imul
out
xor
lea
push
cmc
enter
jns
jge
cmp
subl
fwait
push
inc
shlb
shrl
pop
mov
data16
mov
movsb
andl
mov
add
mov
dec
ja
pop
mov
sbb
pop
lock
rcr
lcall
sti
jecxz
push
sub
adc
adcl
into
sbb
jb
aaa
andl
ljmp
in
movsb
fsubr
roll
aam
test
test
popf
inc
mov
mull
push
scas
jnp
shll
add
sbb
pop
xor
es
iret
arpl
sbb
loope
popa
test
bound
xor
mov
repz
or
outsb
mov
mov
cld
mov
pop
out
mov
in
stos
jp
sbb
sbb
lret
loope
cmpps
dec
jno
pushf
cmp
mov
mov
rcll
jo
push
mov
outsl
or
dec
and
lret
pop
repnz
xchg
xor
pop
movsb
popf
push
xchg
adc
sbb
inc
and
xchg
add
dec
int
jg
jne
cs
cmp
scas
fildl
push
dec
jl
mov
jl
int3
popa
xchg
pop
pop
shlb
sahf
sahf
jecxz
bound
dec
cmpsl
adc
ss
sbb
push
fldl2e
add
cmp
mov
mov
jne
scas
cmpsl
in
or
mulb
lret
sub
jmp
aam
rcl
mov
sbb
movsl
xor
and
icebp
mov
not
test
mov
and
in
inc
divl
and
push
jnp
cmp
inc
inc
roll
negl
std
in
ljmp
ljmp
jle
xchg
xchg
out
inc
jno
mov
jecxz
pop
mov
popf
std
push
pop
mov
stc
pop
inc
mov
cld
jae
fstl
int
mov
je
je
and
mov
mov
popf
aad
shrl
jbe
int3
iret
pop
shlb
jmp
add
orb
aam
fcmovnbe
movsl
pop
paddd
ds
lret
rcrb
push
bound
xorb
negb
jecxz
int3
pop
push
bound
pop
mov
add
jmp
lret
add
cmp
pop
aam
icebp
icebp
sub
mov
pop
ljmp
sahf
sub
test
fcomps
add
je
mov
test
mov
icebp
mov
hlt
xchg
inc
dec
aaa
fimuls
and
xchg
shll
loop
ja
fldcw
push
dec
mov
ftst
pop
and
cwtl
jo
dec
bound
dec
mov
insb
arpl
push
in
popa
fisubl
lret
ret
jns
jl
cld
xchg
or
bound
bnd
int
jne
rorl
or
mov
sbb
clc
mov
sub
jg
or
mov
pop
testb
outsb
mov
xchg
mov
mov
dec
mov
fwait
loop
push
mov
fmull
rorl
push
xor
mov
push
mov
pop
scas
lods
mov
sub
mov
repnz
mov
mov
or
dec
aad
mov
xchg
xorl
cld
int3
scas
jbe
inc
mov
adc
movsb
pop
movb
pop
rclb
mov
add
gs
pop
test
jge
and
imul
inc
mov
lahf
pop
pop
rep
jo
jbe
adc
push
sbb
lds
jl
lds
xchg
ficompl
leave
fistl
mov
je
lahf
mov
push
push
test
hlt
dec
or
hlt
xor
repnz
lret
adc
dec
int
cmc
rcrb
pop
mov
in
cltd
cmp
test
cs
loop
or
adc
loop
ds
mov
daa
psrld
add
addb
bound
add
adc
or
cli
jb
insl
std
sbb
insl
add
sub
loope
xorb
in
mov
hlt
or
xchg
mov
andb
dec
xchg
inc
xchg
dec
out
jge
outsl
mov
adc
sbb
mov
mov
fstl
mov
xchg
cmpsl
ljmp
jp
inc
and
mov
mov
sub
fisubl
pop
or
jp
enter
xchg
insl
mov
dec
fst
ja
pop
gs
sub
aad
sbb
mov
or
mov
dec
pop
cmp
mov
inc
mov
dec
inc
mov
leave
sarb
lahf
and
into
mov
cmp
int
push
popa
push
cmp
xchg
lods
addr16
sbb
les
test
sbb
pop
mov
repz
pusha
xchg
dec
test
pop
adc
les
xchg
cmpsb
mov
int3
orl
jmp
mov
pusha
sub
pmaxub
pop
iret
je
mov
lcall
loopne
out
ljmp
call
xchg
mov
xchg
aas
sbb
cmovs
ficoml
shll
or
je
aas
sub
insb
mov
rcll
jne
dec
jecxz
add
mov
xchg
lret
pusha
nop
loopne
xor
jp
mov
push
dec
cld
inc
and
jecxz
in
xlat
sbb
adcb
in
add
hlt
fistpll
out
push
sahf
add
or
push
lods
lods
xor
in
jae
push
or
or
adc
shrb
xor
mov
daa
imul
pop
aad
adc
repz
mov
xorl
mov
jno
shlb
cmp
jns
push
sbb
pushf
push
xchg
or
shl
stos
jno
dec
or
ljmp
cmp
and
jle
add
scas
mov
adc
xchg
fmul
lret
outsl
daa
cli
call
sbb
aas
adc
imul
daa
lret
in
cmp
add
insl
in
jg
popa
mov
out
adc
push
mov
scas
pop
lds
adc
adc
mov
mov
stc
xchg
sbb
mul
inc
loop
orb
xchg
popf
pop
roll
adc
add
jl
cmp
ss
cwtl
adc
cmp
mov
adc
sbbl
test
push
mov
sahf
inc
inc
fstps
add
out
mov
popa
xchg
inc
scas
dec
nop
ljmp
les
fs
xchg
vmovdqa64
sbb
clc
adc
pop
aas
es
mov
xchg
inc
push
mov
adcb
mov
pushf
sub
cmp
jecxz
xor
imul
out
sbb
or
cmp
loope
sbb
lcall
dec
arpl
xchg
jae
adc
push
cmpsl
sub
mov
push
sbbl
scas
jmp
lods
loop
inc
ljmp
push
test
enter
stos
mov
add
xor
int
sar
xlat
xorl
or
out
mov
ds
fisttpll
loopne
push
xor
jg
sbb
jbe
stos
push
add
cld
aad
shrb
dec
fwait
aad
push
jae
add
xchg
mov
lea
add
lock
ja
xorl
movl
out
sub
je
negb
mov
pop
fidivl
cli
sarb
lret
lret
out
fisubl
xchg
shlb
popa
test
imul
jp
and
out
call
adc
or
mov
scas
sub
test
push
and
adc
xor
int3
mov
pop
add
push
in
rcrb
lcall
icebp
pop
in
adcb
je
rcl
inc
xchg
cltd
or
add
pop
inc
or
cmp
clc
pop
fidivl
pop
dec
jmp
and
pop
mov
mov
jge
cmp
cmp
push
rol
pop
lods
sti
mov
jno
test
sub
nop
adc
jle
add
in
clc
push
sahf
repnz
das
vmovapd
js
fisttps
fwait
add
popa
push
push
fcoml
and
inc
adc
push
sub
imul
clc
bound
aam
jno
das
mov
out
notb
inc
xchg
xchg
ja
repz
push
mov
das
push
sahf
push
imul
icebp
jae
sub
and
stos
mov
int
sbb
inc
xchg
arpl
outsb
sbb
fstl
or
daa
std
lods
shrb
movsb
or
jb
lds
jnp
mov
cmp
fmulp
push
pushf
dec
mov
icebp
test
cmp
lret
sbbl
sahf
push
pop
stos
scas
push
push
lret
cltd
out
or
mov
push
call
inc
movsb
sub
mov
ljmp
dec
or
cltd
insb
add
mov
loop
imul
cmp
stc
sub
inc
mov
insl
push
into
mov
imulb
fcompl
stc
mov
sub
rol
sbb
sub
fdiv
test
das
cmp
fwait
ljmp
mov
rsqrtps
repz
imul
leave
jp
cmp
add
decb
test
adc
in
mov
inc
aam
mov
stos
dec
push
xchg
jp
and
mov
inc
in
cmp
mov
xchg
xchg
test
test
or
subb
cmp
mov
push
sti
sub
xor
jns
xchg
dec
sbb
inc
cmc
sub
mov
sub
test
loope
loop
popa
add
xchg
push
enter
adc
fists
leave
ja
mov
mov
or
movsl
inc
call
mov
cmp
mov
or
pop
adc
inc
add
imul
pop
sub
add
xlat
outsl
adc
inc
lods
in
jp
fwait
movsl
int
sub
jecxz
mov
inc
adc
adc
ljmp
fisubrl
outsl
pusha
mov
jns
and
imul
out
out
dec
out
cmpsl
sahf
nop
or
fwait
mov
pushf
pop
xchg
and
push
mov
or
sbb
mov
pop
pop
and
cmp
cmpsl
and
add
jbe
dec
cs
jne
sub
mov
dec
fcompl
mov
cli
adc
divb
int3
sub
insb
imul
daa
mov
pop
movsb
pop
es
push
sbb
pushf
shlw
cmp
rorl
push
cmp
mov
cld
adc
jns
xchg
sbb
and
add
push
xor
aad
push
adc
jnp
test
ret
inc
imul
xlat
in
mov
or
sbb
or
cmp
add
or
pop
adc
ja
lock
ret
in
addr16
iret
sbb
dec
pusha
jge
jae
outsl
mov
mov
pop
sti
mov
ret
push
bound
rcpps
inc
test
inc
and
jb
jns
insl
fiadds
or
xor
scas
jp
jge
push
leave
bnd
ja
xor
outsl
les
pop
movsb
cmpsl
jne
add
push
push
out
in
lods
divl
mov
push
add
sti
push
mov
push
mov
out
ljmp
jmp
leave
repz
inc
adc
int3
dec
sbb
sub
into
cltd
in
xchg
mov
fsubrl
fs
sbb
inc
cwtl
jmp
fucom
sub
or
mov
xchg
dec
adcl
and
cmpsb
sbb
out
mov
xchg
std
fistl
cld
mov
inc
dec
add
sbb
sbb
daa
inc
or
mov
das
std
cli
sahf
mov
inc
in
add
stos
das
pushf
jb
sub
test
add
cmpsb
aad
popa
adc
cmp
movsb
aam
jle
iret
lret
cmp
sbb
call
je
jno
mov
add
push
dec
rol
stos
out
push
lea
mov
dec
pusha
push
fisubs
cmp
mov
sbb
fbstp
ret
lahf
psraw
ljmp
into
jns
call
js
push
add
imul
shlb
and
mov
mov
aaa
out
fstp
repz
xchg
xor
inc
cmp
mov
xchg
mov
rolb
jnp
pusha
daa
mov
ja
scas
mov
cmpsb
fldt
outsb
add
mov
push
jg
xor
dec
sbb
push
dec
cli
out
fs
lods
jae
jecxz
mov
push
rclb
mov
cld
bound
mov
cli
push
xchg
dec
lcall
insb
cmpsb
pop
mov
mov
sub
pusha
add
mov
popf
int3
movsl
popl
xor
mov
popf
push
js
sbb
adc
into
scas
aam
xchg
les
xchg
mov
pop
sbbl
mov
roll
loopne
cmpsb
and
jno
pop
jl
push
sub
xchg
out
and
push
hlt
jmp
push
pop
mov
stos
mov
daa
push
test
jo
or
jle
sbb
fldcw
lahf
sbb
mov
mov
sub
lods
inc
mov
push
mov
shll
push
add
gs
je
mov
sahf
in
imul
sbb
lret
loop
cmp
aas
loope
repz
sbbb
mov
mov
out
je
das
ljmp
dec
mov
lret
mov
cmp
add
jl
mov
dec
dec
popf
icebp
or
sbb
hlt
inc
xor
flds
and
jmp
mov
jbe
mov
xchg
or
int3
inc
mov
cmc
inc
and
outsb
pop
mov
pushf
inc
mov
push
stc
addr16
test
fldenv
pop
xchg
das
adc
push
jne
loop
push
dec
ja
out
push
into
mov
in
sub
ljmp
sbb
mov
imul
lock
sub
mov
les
and
enter
push
jno
cmpsl
adcl
dec
sbb
rcrb
into
ds
shll
lock
dec
dec
lock
lret
mov
ljmp
cltd
add
aaa
push
pop
sub
jl
pop
scas
or
in
sbb
adc
divl
and
cmpsl
subb
pop
lods
mov
lahf
jle
scas
outsb
aaa
stc
and
pop
mov
cmc
hlt
nop
ljmp
add
cltd
das
dec
loopne
and
mov
pop
mov
jno
sbb
jge
push
loop
aam
movsb
pusha
loopne
adc
int
in
mov
xchg
and
pop
int3
push
mov
movsb
push
gs
xchg
gs
push
loop
mov
inc
insl
adc
outsb
cli
sub
sub
and
cwtl
ret
enter
jp
push
jmp
sub
xchg
adc
iret
or
jno
inc
adc
mov
inc
or
stc
add
arpl
and
jb
push
movsl
testl
xor
push
xchg
inc
in
xor
or
insb
insl
mov
jle
cmpsb
mov
loop
mov
and
loopne
jo
mov
jns
iret
and
dec
mov
sub
cmp
es
xlat
mov
xor
add
mov
sub
popf
fcmovbe
out
jecxz
or
mov
aad
inc
inc
loopne
push
add
in
push
jp
lea
sbb
lret
negb
inc
out
mov
mov
add
imul
add
loopne
mov
xchg
mov
jl
xchg
jle
into
ljmp
cmpl
jg
pop
out
pop
mov
movsb
adc
mov
scas
xchg
xor
dec
das
push
jle
xlat
sarb
cmp
arpl
pop
add
and
and
mov
fistpll
pop
sbb
out
enter
mov
std
sub
shlb
pop
jg
pop
or
add
loop
sbb
xchg
cs
inc
push
andl
icebp
dec
pop
mov
call
sub
scas
subl
cmp
rep
xchg
mov
add
sbb
pusha
repnz
das
xor
push
mov
mov
outsb
inc
incl
jecxz
xlat
ret
and
idivl
test
push
mov
push
mov
or
loopne
sti
mov
pop
jecxz
mov
xchg
daa
into
testb
pusha
sub
xchg
sbb
loop
stos
and
addr16
scas
dec
pop
xchg
filds
cmp
rorb
sarl
cmp
cltd
jg
lock
fwait
push
arpl
sbb
cmp
lahf
hlt
sub
out
push
nop
push
adc
inc
xor
jb
adcl
ret
add
sahf
test
xor
ficoms
rcl
lret
inc
imul
sub
sahf
mov
pusha
enter
jns
xchg
push
push
das
fldl
jno
pop
mov
je
adc
jb
sub
mov
push
inc
aad
jecxz
pop
fcmovnbe
cltd
mov
rcr
int
test
insb
xor
in
daa
insb
mov
sbb
lods
mov
xor
pop
and
icebp
inc
or
jo
lret
mov
or
cmp
outsl
cli
adc
popa
ficomps
adc
or
mov
inc
test
sub
mulb
and
lret
adc
push
sub
movsb
repnz
jmp
mov
jae
pusha
pop
stos
imull
cmp
sub
inc
push
movsl
loop
mov
mov
cld
and
push
xor
inc
jmp
add
mov
loope
adcl
into
inc
testb
lea
sbb
sub
xchg
rcrb
push
inc
add
mov
xchg
cltd
xchg
mov
xchg
into
xor
inc
or
push
lea
aas
add
jo
in
pop
adc
fisubrl
mov
sbb
jle
movsb
fsubl
jbe
lods
cld
cmp
cmp
aad
rcr
push
sbb
dec
cwtl
jmp
sub
stos
jno
ret
aad
push
js
rolb
or
dec
jae
aaa
aas
fdivrl
and
xchg
pop
xor
and
repz
mov
or
mov
scas
mov
xchg
adc
cli
cmpsb
pop
cmc
and
js
jge
js
inc
mov
lret
push
jno
ljmp
mov
pusha
faddp
or
sbb
mov
aad
mov
lahf
jp
repnz
cld
add
pop
pop
cmp
je,pt
mov
push
jnp
jbe
insb
xor
cwtl
movl
insl
jae
out
hlt
bound
add
sbb
mov
cmpl
and
jbe
add
cmp
fs
and
push
in
dec
pushf
dec
rcrb
dec
sbb
push
scas
mov
imul
jge
cmc
cli
inc
dec
rcll
add
push
mov
mov
leave
pop
or
call
cwtl
dec
push
add
mov
push
mov
xor
xor
pop
xor
cmp
imull
mov
xchg
pop
mov
adc
jge
aas
jmp
movsb
pop
lahf
xor
testl
fcomps
subb
insb
lea
pop
lret
lahf
lods
call
iret
shrb
mov
test
inc
pop
add
add
sbb
mov
pop
cmp
lret
pop
scas
stos
cmpsl
pop
xchg
mov
lods
cs
mov
inc
inc
pop
dec
mov
hlt
and
jne
mov
cmpl
pop
into
hlt
push
add
dec
arpl
sbb
unpckhps
adc
xlat
sub
add
popa
push
mov
pop
leave
dec
loopne
sbb
ljmpw
inc
imul
push
dec
imul
aad
lods
lret
bndldx
pop
popf
std
scas
add
mov
les
mov
dec
mov
sbbb
adc
mov
mov
mov
pop
inc
fwait
or
aas
adc
add
stc
hlt
lods
sbb
push
notl
and
dec
out
mov
mov
lret
add
loope
and
cld
hlt
xor
jbe
push
test
lds
mov
clc
mulb
jmp
jle
popf
mov
jmp
pop
stc
fidivrl
xchg
outsl
out
mov
pop
int
jmp
fcompl
jecxz
ror
mov
xor
addr16
pop
xor
or
aaa
push
mov
lods
in
fiaddl
jecxz
xor
pop
aad
dec
xor
sbb
push
inc
or
mov
inc
ss
dec
and
aas
es
loop
and
jae
jg
cli
sub
jl
add
cmp
stos
inc
mov
int3
mov
adc
sub
push
dec
inc
ror
lds
repnz
cmp
mov
or
lret
mov
mov
jle
and
push
cmp
inc
push
or
or
mov
and
mov
add
movsl
je
ja
mov
inc
adc
outsb
popa
ss
xchg
in
fisubs
cwtl
and
leave
xchg
cmc
fwait
mov
add
push
test
sbb
cmpsb
inc
jnp
inc
pop
or
xor
ljmp
mov
add
aaa
insb
push
dec
jns
pop
icebp
decb
sbb
push
lds
pop
jne
or
cmp
rolb
popa
adc
sbb
pop
dec
pusha
repz
cmpps
or
cmp
and
push
mov
jbe
shlb
out
jne
xlat
inc
jg
and
fwait
jge
inc
or
sub
loope
xchg
xchg
jbe
cmp
and
lret
xlat
lods
add
out
mov
dec
push
jb
pop
xchg
test
ficoml
adc
jo
daa
inc
mov
fwait
pmullw
mov
or
cwtl
gs
mov
pop
hlt
dec
iret
pop
sbb
adc
inc
inc
ret
sarl
scas
jo
jo
ret
or
rcrb
or
sbb
push
orl
mov
mov
jl
xchg
movsl
sbb
pop
cli
popa
ret
add
cltd
sbb
xor
cld
jecxz
cld
mov
xchg
in
mov
dec
push
adc
stos
cmp
sbbl
or
cmc
lcall
add
daa
mov
mov
jnp
dec
in
mov
ja
mov
fbstp
jmp
inc
pop
and
das
xor
bound
pop
lds
jnp
jae
in
sub
xchg
push
mov
xor
adc
nop
popa
stos
and
xchg
lock
fwait
test
mov
jo
mov
and
scas
fcomps
bound
outsl
cmp
fwait
xchg
jno
roll
jg
sbb
les
pop
std
pause
pop
mov
cmp
pop
push
dec
in
mov
pop
mov
insb
in
loop
lahf
cmp
xor
mov
stos
fiadds
mov
jb
push
xor
sahf
sbb
ret
std
jns
cwtl
xlat
pop
mov
jo
nop
push
test
adc
and
jp
push
bound
out
mov
loop
fsubr
sbb
jns
xchg
sbb
pop
icebp
xchg
dec
add
pop
xchg
sarb
insb
and
lds
inc
mov
xchg
repnz
mov
lock
sub
push
sti
ror
lret
push
cmp
sbbb
sbb
adc
sahf
fcmovnbe
sub
and
mov
mov
shl
pop
jae
loopne
pop
mov
enter
mov
gs
pop
and
inc
xor
and
and
inc
pop
xchg
fisttps
mov
std
in
lods
sbbl
jl
divl
inc
and
lock
test
xchg
lods
lods
into
cli
rolb
mov
pushf
sbb
rorl
sbbb
cmp
mov
inc
test
mov
jb
and
jne
mov
arpl
fmull
mov
inc
fisttps
les
pusha
mov
jge
push
or
lret
call
or
insb
jo
push
cmpsl
int3
xor
scas
inc
mov
jg
mov
aaa
add
mov
les
or
shll
dec
push
add
leave
icebp
xchg
test
stos
jo
int
into
xor
ficomps
ret
pop
cmp
mov
and
mov
mov
cmp
inc
lret
inc
and
sub
inc
loope
lods
mov
insl
add
bnd
je
fs
lea
or
fstpl
stos
fistpl
test
and
jbe
imul
repnz
jbe
xchg
fdivrl
pop
dec
sub
ret
sbb
sub
xchg
adc
loopne
jge
stc
mov
call
loopnew
mov
mov
mov
pop
push
pcmpeqw
gs
xchg
ret
shll
pusha
pop
sub
adc
sahf
insl
movsl
mov
mov
movl
pop
jle
jecxz
pop
loope
outsb
inc
aas
push
insb
jl
cwtl
int3
xchg
xchg
mov
jmp
insl
fcmovb
test
and
lods
stos
adc
mov
jle
in
addr16
mov
or
mov
xor
mov
repz
mov
insl
and
xchg
jnp
pop
mov
adc
stc
inc
jecxz
add
inc
sub
mov
and
add
mov
mov
mov
loopne
test
and
mov
mov
sbb
jno
rclb
loop
add
lret
push
and
adc
push
mov
and
dec
scas
mov
sbb
ficoms
mov
stos
mov
jg
clc
data16
sbb
push
add
shll
xchg
add
add
out
call
fldl
popa
fwait
dec
pushf
xchg
push
mov
cld
shl
and
aaa
sub
push
xor
xchg
sub
lret
je
mov
popf
push
dec
mov
clc
inc
lea
jmp
test
repnz
dec
sub
add
push
add
xlat
inc
imul
sbbb
stc
fwait
jae
fldt
adc
pushf
jnp
outsl
mov
pop
adc
pop
loopne
jmp
cmp
das
cmp
pop
and
jnp
cmp
push
fcmovnbe
adc
xchg
aad
scas
or
fldt
jae
or
xor
test
push
fsubs
pop
andl
daa
push
mov
not
test
xchg
and
xchg
push
pop
lock
sbb
mov
sbb
popl
dec
jp
daa
clc
lahf
adc
enter
sub
movsb
je
outsl
xchg
fwait
hlt
outsl
cmp
inc
mov
mov
movsb
loope
cmp
xorl
mov
das
sarl
inc
popf
sti
dec
ljmp
jp
ds
dec
mov
pop
inc
mov
sub
pop
adcl
dec
push
fcmovnbe
mov
xchg
dec
outsl
arpl
pop
jmp
xor
jnp
add
orb
in
xor
les
add
or
aaa
in
fsub
pop
ficompl
add
pop
sub
inc
and
dec
addr16
push
bound
mov
fcmovu
jnp
gs
pop
pop
xchg
and
xchg
in
sbb
and
sbb
and
aas
outsl
lcall
inc
repz
push
sahf
out
fcoms
in
int
js
repz
mov
jge
mov
enter
gs
adc
out
mov
test
push
mulb
mul
xchg
jl
pop
je
mov
into
mov
pop
and
out
sub
aad
cmpsl
shl
in
divl
orb
dec
add
pop
loopne
rolb
jb
test
mov
pop
imul
dec
jmp
mov
cltd
insb
and
mov
mov
pop
pop
fdiv
mulb
push
in
adc
aam
jmp
and
dec
rorl
xor
jae
xchg
fcmovb
adc
add
fcoms
enter
ret
pushf
lret
mov
mov
xor
push
nop
es
in
call
or
pop
inc
add
repz
lock
subb
rol
dec
std
xchg
cmp
sub
cmc
lods
loop
xor
mov
ret
hlt
ss
movsl
pop
repz
push
lds
push
shll
jae
int
inc
sub
jle
mov
jnp
xchg
and
jge
testb
in
aam
inc
pusha
add
fadds
test
fptan
xchg
lock
pop
dec
ljmp
cmp
sub
dec
mov
pushf
je
out
ss
rcrl
push
hlt
std
mov
fadds
and
mov
xchg
in
ficoml
pushf
push
push
lret
popl
xor
mov
jecxz
fldcw
cmovs
cmp
dec
je
sub
loop
xor
and
fldt
mov
enter
sahf
ja
dec
xor
push
mov
loop
imul
ja
addr16
sbb
mulb
std
lea
mov
fiadds
pop
or
pop
mov
pusha
ljmp
ds
mov
sbb
nop
pop
fisubrl
cmp
hlt
bound
cmpsl
sbb
scas
mov
in
outsl
mov
test
jo
in
movsl
dec
or
popf
bound
adc
push
das
fldl2e
dec
or
adc
or
and
incb
xchg
push
stc
ljmp
push
inc
add
popf
mov
std
inc
fwait
push
jns
idivb
mov
mov
in
mov
dec
in
ja
dec
adc
mov
cs
sbb
outsb
divl
repz
dec
or
loop
push
scas
js
not
xor
lcall
pusha
stos
xor
test
xorb
mov
shll
cmp
add
and
xor
and
push
sbb
xchg
inc
daa
lods
push
js
jno
xor
xchg
enter
mov
xorb
xchg
pop
into
add
iret
xor
jle
std
fists
pop
pop
mov
aas
pop
pushf
es
or
push
jno
fs
adc
mov
outsb
lea
cli
mov
test
and
adc
lods
iret
insl
xor
insl
or
mov
movsb
popa
sub
lods
pop
sub
or
push
in
mov
les
mov
pop
adc
fidivl
jmp
inc
jl
fdivrs
mov
jae
out
mov
aaa
inc
mov
pusha
notl
mov
lret
cli
cmp
dec
or
sahf
out
inc
mov
insb
dec
or
cmp
cmpsb
jb
jp
mov
pop
lret
inc
lret
mov
iret
jb
movsl
sbb
lea
test
or
cvtps2pd
testl
notb
stc
mov
repnz
sub
iret
in
or
xchg
jae
add
hlt
or
test
pop
add
imul
sub
inc
orl
xorb
adc
pop
dec
orb
shrb
aaa
mov
add
pop
cld
scas
out
inc
out
xorb
mov
mov
cmpsb
js
sub
les
ss
xchg
push
cli
pop
int3
mov
inc
push
cmp
push
ds
mov
loopne
dec
jo
push
push
loopne
adc
std
mov
aam
push
pop
insb
imull
mov
idivb
lret
push
dec
push
std
push
xchg
test
lock
call
outsb
cmp
add
cs
les
into
push
popa
test
scas
scas
cmpsb
outsb
mov
pusha
xor
test
inc
jle
lret
mov
jg
xchg
shl
int
pop
cli
pop
jbe
sarb
add
notb
mov
adc
flds
mov
jnp
adc
pop
mov
loop
xchg
push
add
adc
cmpsb
jb
daa
les
ljmp
cmp
movsb
repnz
rol
addr16
mov
in
stos
mov
mov
add
shlb
loope
cmp
jb
popa
lods
insb
arpl
sti
fs
push
lret
popa
das
sub
xor
push
aaa
loopne
xchg
data16
bswap
dec
cmpsl
sbb
mov
and
lods
and
adc
in
outsl
and
daa
sub
lcall
sub
add
outsb
sbb
outsl
aam
add
subl
and
lahf
std
mov
push
gs
aad
push
stos
mov
mov
movl
jg
cmp
std
int3
lahf
dec
adc
inc
je
lret
mov
imul
xor
inc
push
pop
movsb
ficomps
cmpsl
jle
int
dec
jae
sbb
imulb
mov
sub
ss
adc
dec
mov
repnz
adc
shrb
inc
mov
cmp
stos
subb
inc
mov
mov
rol
mov
fsubrp
outsl
popf
aam
cmpsb
enter
gs
xchg
dec
insb
hlt
ljmp
fists
pop
adc
pop
add
lret
push
faddl
fmuls
mov
xor
mov
cmp
int
inc
ret
adcb
or
cmp
out
jb
xchg
or
hlt
mov
jle
scas
fcomp
xor
jno
dec
das
mov
jl
sbb
fbld
leave
mov
cmp
mov
imul
pop
arpl
xchg
or
in
xor
mov
cli
mov
mov
test
inc
test
mov
mov
mov
js
cmpsl
adc
jo
fst
and
sbb
add
inc
sahf
int
orl
ja
aas
aas
in
ss
jbe
and
ja
sub
xor
jns
imul
pop
cli
pop
adc
or
sub
mov
sbb
jle
cmpsl
or
add
push
fsts
push
pop
sbb
or
fcoml
movsl
test
mov
in
jge
outsb
add
sti
add
sbb
cmpsl
dec
in
in
or
sbb
mov
inc
and
je
mov
test
iret
pop
pop
leave
sbb
xchg
add
jl
shll
sub
test
int
dec
dec
popf
push
mov
xchg
popf
push
lret
arpl
dec
cs
dec
test
xlat
jns
jno
movsb
add
mov
test
add
and
test
or
cltd
jp
ja
pop
sbb
sub
adc
pop
xor
sti
sub
int3
cltd
xor
dec
stc
push
repz
inc
mov
add
iret
mov
insl
outsl
insb
popl
adc
movsl
test
cmp
mov
dec
jno
int3
add
mov
lahf
jge
sbb
dec
push
pop
iret
dec
cmp
aas
inc
adcl
xor
push
cld
add
dec
jl
cmp
pop
pop
arpl
orb
insl
xorl
jle
paddsw
into
xor
push
test
add
or
cmpsb
imul
out
or
mov
andb
rclb
add
and
jns
notb
clc
xor
in
jle
test
pop
pop
loop
ds
cmp
xlat
dec
cld
cmp
mov
push
push
sbb
xor
aas
jns
push
jl
daa
fs
mov
add
sub
cmpsb
mov
adcl
pop
aad
xchg
adc
sub
sub
scas
lret
call
inc
pop
pop
aaa
fdivrl
push
dec
push
xchg
push
mov
push
lea
cmp
dec
jno
loop
cltd
outsb
mov
inc
sbb
scas
movsb
aam
pop
mov
sub
sbb
mov
cld
popl
mov
ja
xchg
sbb
das
adc
pop
adcl
mov
jo
mov
pop
scas
push
int3
mov
ljmp
lret
sub
or
or
mov
lret
fmuls
sti
cmpsl
in
mov
fs
and
outsl
pop
or
insb
subb
xchg
or
xchg
popa
das
test
or
fwait
jl
call
sub
data16
mov
sub
sbb
mov
fidivs
lahf
fbld
popa
enter
xchg
jbe
and
push
jae
xchg
mov
inc
popf
decl
jb
lods
or
in
mov
repnz
inc
insl
cmp
call
out
rolb
addr16
jnp
mov
sub
xchg
ret
ja
push
adc
add
movsb
hlt
sahf
pop
movsl
xchg
lock
mov
int
ficoml
inc
xchg
push
sub
push
inc
mov
inc
cmp
xchg
cmp
inc
xor
loop
jno
mov
pop
add
cmp
adc
std
lds
les
push
xorb
mov
fstl
scas
mov
ficomps
cmpsb
push
loop
mov
jecxz
rclb
jmp
enter
scas
pop
mov
jne
pop
sbb
pop
mov
dec
imulb
clc
mov
inc
pop
out
ficomps
iret
add
je
lret
add
movsl
cmp
mov
fdivrs
outsl
nop
aaa
cmpsb
cs
lret
push
sahf
movsb
sub
subb
ficoml
xor
es
in
aam
scas
mov
dec
sti
popa
test
sarl
je
lods
es
fnstenv
pushf
add
mov
pop
or
inc
outsl
enter
push
outsb
leave
dec
les
xchg
lret
xor
mov
das
xchg
mov
adc
mov
jns
pop
push
int
xor
iret
test
push
les
pushl
add
iret
xchg
sbb
daa
sub
jne
inc
jbe
hlt
out
ss
fs
daa
pop
jmp
and
mov
mov
add
daa
in
dec
loope
fildl
pop
repnz
nop
cwtl
rolb
push
cmp
lret
or
pusha
les
xchg
ja
push
inc
and
push
cmp
or
aam
jns
mov
vpaddsb
cmpsl
mov
loop
insl
decb
lds
mov
test
mov
sbb
imul
push
into
cs
aaa
sti
xchg
pushf
xor
mov
jbe
jns
sub
mov
cmpsb
sub
imul
dec
push
push
cmp
dec
aad
mov
fisubs
sarl
cs
xor
inc
dec
mov
gs
push
dec
jno
dec
pop
sti
jg
dec
iret
fisttpll
cli
jbe
cmp
jg
push
imul
cmc
lea
mov
lds
std
rcrl
sub
mov
lret
pop
adc
mov
jge
fs
std
adc
sbb
decb
shrb
mov
into
loop
lret
loopne
popa
jo
inc
in
add
mov
enter
push
scas
jns
mov
fs
repz
jle
out
jl
push
or
fistpl
outsb
pop
aad
je
add
add
jmp
stos
push
scas
int
push
mov
aam
sub
int3
dec
xchg
in
jp
jl
sub
fdivl
dec
gs
mov
mov
cmp
mov
or
or
jb
stos
jmp
js
iret
out
test
cwtl
push
push
and
roll
sub
sahf
lock
jnp
and
and
in
adc
dec
ret
adc
inc
pop
inc
push
lcall
xchg
mov
or
xor
sti
pop
mov
mov
scas
je
adc
das
sarl
movsb
xchg
mov
cmp
mov
outsl
jne
test
mov
scas
lea
inc
int
push
gs
or
cmp
neg
xor
jne
loop
imul
add
int3
movsl
inc
fstpl
mov
mull
jo
popf
or
jmp
mov
fwait
cmpsb
enter
js
sbb
stos
fcmovne
cmpsl
aam
dec
mov
mov
and
insb
mov
adc
test
rclb
xchg
outsb
jecxz
scas
enter
and
pop
xchg
xlat
gs
mov
mov
sub
add
lea
clc
faddp
xchg
jg
sarb
cs
rcr
test
subb
add
xorb
adc
xor
xchg
in
nop
sbb
push
pop
mov
inc
jno
gs
pop
int
push
lods
mov
cld
je
push
fmulp
mov
mov
add
imul
pop
ret
xor
dec
jmp
out
mov
ja
adc
test
cli
cs
cmp
pop
lcall
test
push
cmp
mov
jmp
and
cmp
jne
insb
mov
in
inc
xchg
fisubrl
sub
mov
mov
out
push
pusha
adcb
xor
pop
leave
jp
lret
lods
xchg
rclb
sbb
or
jno
sbb
loopne
push
inc
repz
rorb
or
mov
cltd
sbb
mov
add
popf
lret
rcrb
popa
lret
fidivrl
sbb
xchg
pop
cmp
mov
cmpsb
fs
mov
pop
imul
mov
add
nop
js
dec
mov
jmp
xor
push
inc
divl
shl
test
or
flds
fcomip
fidivrs
imul
cs
bound
push
out
dec
adc
test
pop
jmp
xchg
cltd
sbb
ljmp
ja
xchg
cmpsb
push
pop
hlt
mov
sbb
ja
add
cmc
sahf
cli
xchg
mov
out
push
cmp
dec
in
rorb
cltd
pusha
outsb
or
or
pop
lret
scas
notl
xor
adc
mov
cmp
int
cmp
outsl
fisttps
cld
daa
repnz
aas
mov
xlat
jno
fcompl
out
lret
aas
ret
sbb
jmp
insl
lret
xor
sahf
cmc
fs
mull
les
xchg
lret
in
cld
push
jae
mov
jb
lahf
sub
mov
jecxz
or
idivl
push
sbb
rcll
loop
mov
push
mov
push
mov
insb
xor
or
push
test
adc
cmp
sub
pop
add
sub
and
mov
pop
pusha
mov
push
add
inc
out
ss
ficompl
mov
sti
loopne
divl
pushf
push
jo
inc
es
mov
mov
sbb
popa
push
mov
inc
add
repnz
or
mov
test
les
adc
adcb
jnp
js
xchg
inc
add
adc
sub
mov
jae
cmp
addr16
scas
inc
cmpsb
imul
aaa
inc
sub
adc
into
push
imul
pusha
out
test
jmp
pop
xorl
pop
xor
insl
cltd
icebp
cmpsl
movsb
pop
or
js
xchg
push
push
push
jmp
loopne
sbb
xor
movl
and
cs
inc
mov
mov
xchg
mov
sahf
push
push
sti
int
inc
dec
sub
xor
test
lock
ret
js
addr16
rcrb
xchg
cs
mov
stos
mov
inc
lea
xor
xor
mov
jle
mov
leave
out
lds
xchg
outsb
in
aam
andb
cmc
dec
inc
adc
xchg
mov
call
push
out
in
js
gs
lea
arpl
jp
inc
cltd
leave
mov
mov
mov
xchg
ficoms
int3
pop
stos
sbbb
sbb
or
aam
or
and
mov
mov
sahf
rcrb
fwait
test
mov
dec
in
or
movsl
cmpsl
mov
movsb
mov
scas
data16
imull
mov
xchg
sbb
out
xlat
or
clc
popf
out
xchg
lds
push
sbb
inc
pushf
insl
test
jecxz
in
inc
sbb
movsl
jno
mov
jo
dec
mov
in
test
dec
dec
inc
jp
sub
or
xchg
push
xor
movsb
in
jg
cmp
sub
lcall
mov
nop
je
ds
loopne
out
xchg
adcl
sbb
movsb
pop
dec
or
repnz
and
pop
push
addr16
mov
in
in
shl
xor
ljmp
fmuls
fsubs
je
leave
shll
sbb
ds
rcr
fldl
push
jp
xor
fldcw
or
inc
xorl
xchg
pop
add
test
je
shrb
sbb
push
pop
push
mov
into
sbb
inc
or
cmp
jo
push
lret
decb
add
mov
mov
lahf
out
cli
adc
xor
cmpsb
stc
clc
and
outsb
sub
or
add
cltd
in
testb
jg
xchg
aas
xor
stos
mov
cmp
insl
cltd
xlat
push
call
dec
es
xchg
adcl
sub
test
pop
fmuls
mov
add
mov
lds
cld
pusha
sub
mov
cmp
arpl
loopne
ljmp
test
rcrl
fcmovnu
in
cmp
and
mov
popf
pop
adc
inc
xchg
mov
scas
iret
cltd
add
mov
jl
sbb
mov
xor
sbb
mov
pop
mov
mov
aas
push
mov
and
mov
xor
inc
dec
test
and
adc
push
repnz
lods
push
incb
mov
roll
pop
dec
pop
inc
mov
pop
stos
dec
and
in
test
push
lods
mov
bound
add
lods
adc
pop
stc
mov
bound
add
push
jb
xchg
call
sbb
xor
in
jns
push
mov
push
lods
inc
adc
add
js
addl
and
fsubp
sub
sub
inc
jecxz
aas
xchg
out
outsl
xor
pop
sub
push
cmp
loope
stc
stc
aad
jecxz
push
addr16
dec
add
dec
mov
pop
sub
jge
stc
xor
sarl
outsl
sbb
mov
sbb
lock
mov
sti
fnsave
dec
or
and
sub
int3
ret
jnp
mov
mov
inc
add
outsb
cmp
pushf
inc
cmc
mov
and
daa
inc
stos
xlat
test
jb
or
ss
das
popa
sub
aad
adc
add
xor
and
mov
xchg
orb
aad
stos
paddsw
rclb
mull
xchg
or
adc
mov
loopnew
and
sbbb
sub
cmp
adc
inc
sbb
enter
pop
dec
pop
and
push
mov
orl
daa
xchg
inc
push
js
pusha
adc
dec
xchg
jg
xchg
out
lret
dec
je
les
jno
sub
fildl
jl
lahf
xchg
test
xchg
mov
or
inc
cmpsl
jo
adc
sub
xchg
push
std
jge
and
mov
addl
add
dec
jb
jp
les
pop
mov
es
sub
add
mov
mov
jne
inc
fisubrl
cmpsl
mov
mov
cmp
xorl
shll
xor
sbb
inc
dec
sub
push
push
fs
scas
fmull
push
out
nop
inc
clc
pop
ret
mov
add
fistpll
leave
push
out
push
add
mov
or
push
xor
gs
pusha
call
add
mov
repz
decb
mov
inc
subl
dec
mov
scas
fwait
mov
mov
jno
sbb
imul
or
in
jge
mov
push
mov
sbb
lcall
push
mov
xor
cmpsl
sbb
icebp
lret
jno
jg
mov
push
clc
imul
or
ds
daa
and
push
mov
inc
xor
movsb
addr16
xchg
mov
aaa
xchg
repz
out
ficomps
ret
inc
pop
inc
lds
into
jbe
loope
xchg
or
les
out
mov
cmpb
jecxz
in
sbb
int
mov
aas
outsl
fnsave
dec
inc
shl
jmp
aad
stos
mov
repz
stos
push
sbb
jl
adc
scas
addr16
scas
int
mov
push
push
outsl
cmpsl
or
in
fldenv
lahf
nopl
pop
loopne
add
orl
sahf
popa
inc
xor
rolb
adc
popa
mov
stos
popf
dec
call
pushf
andb
and
arpl
mov
push
nop
mov
jae
xchg
xor
mov
adc
call
je
mov
ret
aam
inc
jmp
daa
inc
into
mov
jp
sbb
ret
push
enter
js
push
sub
mov
and
ss
dec
mov
in
mov
adc
adc
cs
sub
jmp
cmp
pop
mov
andl
dec
jg
fcoms
dec
mov
andl
cmc
xor
push
lret
adc
roll
sbb
xor
popa
xor
and
mov
test
scas
sub
mov
inc
mov
sub
mov
inc
and
je
xlat
loope
cli
popf
sbb
jle
push
sti
lcall
movsb
enter
stos
mov
filds
cli
icebp
rcr
movl
and
adc
fsubrl
jae
push
jb
and
xchg
rorl
xor
fistpll
shll
xor
mov
mov
sbb
xor
mov
adc
enter
or
imul
ret
scas
add
jb
pop
fldt
push
pavgw
sbb
push
shlb
into
test
imul
mov
push
jl
fists
xor
into
aam
mov
test
fidivrl
inc
daa
pop
mov
mov
cli
clc
jbe
xlat
clc
fwait
dec
xchg
fdivrs
aaa
fbld
lret
inc
dec
sub
push
xlat
shlb
adc
pop
dec
loope
fld1
test
push
pop
push
and
xchg
call
inc
ret
fldenv
inc
lahf
inc
adc
xor
or
add
cmp
fnstenv
sub
test
pop
es
inc
and
add
push
jnp
sti
sbb
rcrb
sub
sbb
dec
jg
pop
scas
pop
and
xchg
or
xchg
xchg
int3
dec
int3
cmp
jb
bound
fisubrs
lret
dec
mov
stos
fisubl
shrb
addb
scas
adc
scas
mov
xchg
xchg
lea
jnp
and
push
jno
mov
pop
fbstp
mov
jbe
and
sub
movsb
adc
lcall
test
inc
in
in
xchg
mov
or
inc
sbb
lods
ja
shlb
push
jne
movl
and
pop
cld
or
cmpsl
push
adc
mov
dec
aam
loop
mov
jnp
cmp
rolb
out
fcomp
and
cmp
cmp
dec
outsl
cmp
lret
xor
subl
sub
xor
loop
fcompl
lods
xchg
mov
push
lds
jno
jg
enter
js
addr16
mov
sub
lock
pop
jle
mov
mov
movsb
and
int
inc
cmp
cli
push
mov
or
and
push
sbb
std
jb
out
jns
mov
shlb
stc
or
cltd
ret
insl
or
in
test
lret
test
sub
sbb
mov
adc
cmp
push
cmpsl
pop
jbe
lds
sbb
mov
psraw
lret
cmc
xor
mov
xor
xor
cli
fstps
push
mov
cmp
fnstsw
cmpsl
arpl
lock
adc
mov
pop
pop
enter
rolb
xchg
xor
pop
add
xor
push
add
pop
cmp
add
sub
mov
into
mov
sbb
stos
mov
out
mov
int3
roll
pop
hlt
push
loopne
cmp
jne
cmp
mov
add
jns
add
inc
jo
bound
icebp
inc
add
mov
xchg
jle
mov
outsl
xchg
dec
sbb
cs
lds
mov
add
dec
enter
stos
sbb
xchg
adc
out
sbb
outsl
sbb
outsb
mov
push
into
ja
lret
mov
cmc
mov
sub
pop
adc
or
lret
notb
clc
cli
stos
vucomiss
fldt
mov
mov
dec
jb
pop
push
scas
push
xchg
in
sub
test
inc
hlt
inc
pop
xor
pop
arpl
mov
sbb
or
lea
inc
push
es
mov
lret
sarb
std
test
loopne
mov
xor
stc
push
shr
pop
sbbl
shlb
andb
xor
test
out
mov
xchg
xlat
jb
push
icebp
test
pushf
out
popa
adc
rcl
cmpsb
pop
shlb
jle
mov
or
jmp
std
jb
sub
out
pop
testl
pop
fidivrs
cmc
xadd
iret
mov
outsl
sbb
stos
xchg
out
add
fldl
test
pop
dec
jmp
dec
mov
inc
cmc
sbb
flds
mov
jmp
sub
mov
pop
shll
sbbl
xchg
pop
cli
fnstsw
mov
mov
sub
cs
andb
mov
inc
test
xchg
in
ror
movsb
repz
test
fiaddl
mov
mov
pop
adc
or
xor
mov
jne
imul
mov
stc
mov
es
xor
xor
and
xchg
or
or
lea
mov
insl
mov
repnz
inc
mov
test
push
hlt
das
mov
mov
mov
test
test
loop,pn
adc
icebp
daa
dec
insl
jle
popa
stos
pop
daa
pushf
popa
sbb
sub
jle
push
fisubrl
xor
jmp
and
mov
std
sbb
clc
xchg
jecxz
mov
call
add
loopne
loope
mov
inc
xchg
sbb
aam
mov
icebp
daa
ja
movsb
pop
std
adc
fcoms
jmp
pop
out
mov
dec
inc
inc
insl
pop
add
rcll
dec
lea
pushf
xor
xor
sti
aaa
ss
daa
sbb
lods
ds
jno
inc
xchg
inc
xor
push
pop
adc
cmp
in
leave
adc
add
cmpsl
lods
aas
and
movsl
sbb
jnp
mov
sub
fxch
cmp
stos
sub
pop
inc
mov
cs
xchg
fidivl
in
imul
loop
jl
xchg
sahf
imul
in
pop
inc
cltd
dec
rcrl
push
mov
jmp
xor
loopne
mov
lahf
push
xchg
cwtl
js
inc
mov
pop
inc
ss
cltd
mov
or
adc
cmp
pushf
iret
enter
push
xchg
mov
call
xchg
jp
inc
cmp
sbb
pop
jb
xchg
cmp
mov
nop
jbe
mov
inc
xlat
aaa
jb
ret
repz
xor
mov
mov
ret
insb
sbb
and
bound
bound
imulb
add
sahf
mov
div
mov
insl
or
nop
out
in
ja
xor
sbb
mov
ljmp
ret
xor
and
ret
outsb
leave
ja
lods
loop
mov
jmp
jno
pop
pop
or
mov
rcrl
pop
xchg
cmpsl
inc
pushf
out
mov
xchg
cmc
aad
adc
cmp
jge
cltd
ljmp
cwtl
fwait
js
adc
outsl
test
enter
mov
mov
or
out
adc
mov
xchg
push
pushf
mov
movsb
or
ljmp
push
inc
loopne
xchg
push
or
add
push
dec
sub
mov
stc
mov
cmp
nop
jno
int
push
pop
sub
push
stc
loope
cli
movsl
add
dec
sbb
jae
sub
stc
fwait
cld
mov
ss
xchg
sahf
pushf
lcall
xchg
xlat
xchg
lret
and
call
into
or
fldenv
scas
xchg
imul
out
sbb
mov
cli
mov
ja
lahf
ja
pop
cmp
jge
xor
pop
mov
mov
sbbl
jbe
gs
into
nop
ficoml
enter
and
lea
push
dec
sub
bound
add
lahf
sbb
daa
out
pushf
cmp
lcall
int3
lret
and
enter
push
mov
int3
push
sbb
dec
not
inc
enter
cmpsl
xor
xchg
xchg
test
cld
movzbl
cmpsl
xor
rorb
add
sub
mov
dec
imul
adc
ret
fcomps
das
iret
or
sub
dec
ret
sbb
in
mov
pop
sub
popa
jne
sbb
jbe
pop
fsubs
and
adcl
push
or
dec
mov
call
add
cvtpi2ps
sub
mov
pop
movsl
mov
in
add
add
test
adc
nop
mov
xor
jp
xchg
test
lods
pop
push
sbb
xchg
cli
and
xchg
pushf
mov
dec
or
sub
dec
sub
lods
sbb
mov
pop
lods
repz
inc
xchg
push
or
cld
scas
inc
mov
pop
inc
adc
push
sub
xchg
mov
fucomp
jb
push
mov
out
sarl
inc
or
lods
aaa
mov
ljmp
push
push
sbb
subb
orl
xorb
mov
jno
dec
data16
je
fdivl
pminsw
fdivp
add
mov
aas
and
sbb
bound
jb
or
cmp
mov
mov
cmp
mov
and
push
push
roll
inc
mov
mov
mov
test
push
bound
test
dec
mov
jnp
jge
mov
dec
push
test
out
js
addr16
cmp
leave
test
testl
and
lods
outsb
movsl
push
inc
jns
lret
test
lock
cmp
inc
dec
xchg
inc
leave
loopne
inc
push
jle
sbb
ss
jmp
pop
sbb
adc
jp
out
data16
ljmp
dec
inc
and
in
mov
and
lock
add
jae
leave
and
lahf
mov
cli
out
dec
fs
fidivl
dec
lock
lret
out
jp
sahf
mov
dec
rcrb
stos
xchg
jo
scas
test
adc
push
das
pop
pushf
xor
jo
clc
sub
mov
iret
jle
insb
fildll
into
mov
mul
push
push
cmpsb
mov
xchg
scas
in
repz
pop
push
push
sub
mov
jp
jnp
sbb
fsubrs
cmp
xlat
jo
lea
push
cmc
lcall
sbb
in
ret
sub
ret
insb
lret
js
push
inc
lcall
cli
mov
jle
cld
inc
test
mov
aam
cmp
outsl
movsb
rolb
movsl
dec
in
jl
js
mov
leave
cs
add
cmp
pop
add
mov
movsb
cwtl
sbb
movsl
leave
lcall
and
fidivrl
into
mov
sbb
dec
mov
std
out
jp
fwait
mov
push
push
cmpsb
aaa
push
push
mov
xchg
push
mov
push
adc
lret
outsb
ss
mov
mov
sarl
jmp
jbe
or
decb
pop
iret
add
repz
int3
aad
cs
stos
jecxz
daa
xor
nop
mov
in
xlat
rcrl
inc
arpl
mov
cltd
sbb
pop
xchg
xor
in
fldenv
mov
adc
or
pmaxub
lds
gs
pop
dec
fstps
lods
cwtl
xor
ja
sub
cmp
jp
gs
xor
jo
xor
orb
lea
mov
loopne
fcmovu
stos
out
mov
outsl
xchg
xor
jb
mov
push
sbb
add
mov
jo
dec
mov
into
jno
mov
bound
hlt
daa
push
cmp
and
xchg
sbb
and
sbb
mov
xchg
or
loopne
mov
ret
out
add
ret
pushf
sbbl
out
xchg
xchg
into
jb
xchg
outsl
or
popf
pop
lds
icebp
push
add
iret
and
dec
add
out
aad
icebp
push
setb
out
mov
loop
stos
lcall
movsl
mov
xchg
aas
cmp
xor
cltd
icebp
aam
inc
inc
aam
ret
cmp
lea
scas
mul
dec
test
ss
clc
or
adc
ljmp
loope
add
push
rolb
and
push
and
sahf
jg
fstpt
fst
dec
iret
popf
mov
xchg
jo
aad
add
pop
rclb
jg
icebp
pop
sub
cmp
mov
iret
addr16
fdivrs
xlat
lahf
es
imul
fsts
add
adc
sbb
xor
mov
cld
and
out
sbb
fidivrl
not
idivb
pop
ja
fdivp
inc
es
xchg
cmp
sub
jg
ret
pusha
mov
cmp
lret
fld
mov
cmp
in
lahf
push
lahf
jns
insb
mov
shrl
xchg
push
bound
stos
jmp
es
arpl
hlt
add
jne
and
out
adc
push
insb
pop
mov
cmp
fisttps
outsb
inc
adc
andb
cli
dec
adc
aas
in
inc
jmp
rcr
jns
mov
jp
sbb
movb
stc
sub
jnp
push
pushf
imul
jbe
addl
imul
adc
push
pslld
cmp
pop
pop
mov
sbb
aaa
mov
je
jns
lcall
pop
jp
adc
dec
icebp
xor
loope
cltd
das
lea
add
xchg
cmp
xchg
repz
test
dec
inc
jno
sbb
mov
arpl
pop
lret
test
push
loope
xchg
pop
pop
and
xchg
lock
or
je
movsl
dec
ficoms
in
test
dec
and
imul
pop
fwait
das
andl
mov
lods
das
in
stos
data16
jp
cwtl
aaa
ljmp
fidivs
das
cmp
jo
repnz
leave
pop
sub
fistpll
lods
gs
xor
push
cmpsl
mov
add
scas
cmpl
dec
sub
shrb
push
icebp
cld
add
fisubrl
nop
daa
or
dec
dec
enter
daa
add
ss
mov
pop
push
cmc
sub
xchg
insl
arpl
pop
ds
sub
int3
mov
or
or
cmp
mov
push
loope
ljmp
xchg
push
jecxz
jmp
sub
ja
add
add
lea
inc
jno
add
cmp
mov
fcompl
cmp
std
mov
jbe
mull
cmpsl
mov
mov
xchg
xorb
int3
or
popf
pop
cwtl
lea
mov
daa
sbb
mov
test
dec
mov
dec
jae
out
mov
cli
adc
mov
mov
jne
cmc
lret
outsl
sub
divps
and
arpl
mov
xor
inc
fs
mov
adc
lret
pop
jns
pop
dec
lods
movsl
cli
push
dec
cmp
icebp
scas
sbb
xchg
shrw
addl
fstpl
dec
mov
mov
jle
lock
fidivrl
rorl
in
pop
repnz
les
inc
es
sahf
lods
pop
movsb
scas
mov
cmp
iret
cli
sbb
pop
in
and
add
insb
inc
cmp
imul
in
fists
aad
orb
mov
les
int3
lods
mov
out
lahf
aad
sub
xor
and
out
shlb
scas
cmp
out
sbb
mov
add
pushw
or
ljmp
mov
cmp
push
imul
pop
xor
jno
mov
shl
add
sbb
inc
jl
scas
stos
mov
xor
push
loop
std
jo
leave
enter
notl
lret
pause
mov
sbb
loope
sub
in
inc
sub
ret
loopne
push
cmp
sub
xchg
pusha
adc
xchg
inc
and
out
xchg
and
sbb
repz
into
xchg
cmp
push
dec
andb
push
data16
sbb
push
push
jge
imul
pop
stos
movsl
lods
jp
mov
iret
cs
cmc
lods
mov
bnd
push
jo
push
divb
sub
lds
pushf
mov
out
fidivs
adc
test
xchg
inc
test
je
popf
stos
inc
jnp
cmc
movsb
loop
sbb
and
sub
ljmpw
xor
outsl
lock
mov
in
cmp
push
aad
push
inc
pusha
shlb
sub
rorb
lcall
sbbb
pop
ret
push
add
lret
adc
test
int
ficoms
mov
push
sub
loope
mov
lret
adc
je
push
inc
or
pop
setnp
jno
pop
jecxz
mov
push
arpl
out
adc
leave
jns
cmpsl
or
xlat
sub
and
bound
mov
out
mov
pop
outsl
movb
mov
push
jbe
xor
out
ficoml
jmp
xchg
out
xchg
xchg
jno
lret
dec
adc
loopne
aas
fdiv
fbstp
dec
jnp
cmc
push
dec
or
test
jo
inc
inc
and
mov
inc
leave
stc
test
mov
js
xchg
ret
aaa
push
and
jmp
sbb
jo
insl
sub
fcomp
lock
add
sahf
adc
xor
cmp
push
test
xor
cli
or
cmc
xchg
fsubrl
es
jno
jb
cmc
fimuls
dec
test
int
addr16
jnp
iret
outsl
pusha
jmp
adc
mov
rol
jp
inc
mov
mov
mov
ss
jl
int3
aam
dec
sbb
sar
and
je
cmpsb
lods
aaa
sti
pop
or
imul
bound
lods
or
loopne
loope
in
in
fadd
xchg
mov
ljmp
test
std
mov
mov
fs
dec
mov
push
aas
lret
gs
scas
pop
fwait
data16
pop
popa
clc
mov
dec
inc
sahf
popa
push
adc
sbb
test
xchg
fisubs
xor
jo
rcr
lahf
push
sar
stc
xchg
cld
pusha
ss
mov
push
adcb
jecxz
inc
cmpb
test
ror
pop
sbb
cli
mov
jae
or
shl
push
loop
mov
in
les
loopne
out
jne
mov
cmpl
cmp
fisubs
aaa
xchg
or
xor
xchg
aaa
in
out
jg
and
lret
ror
adc
or
xchg
nop
int3
repz
jp
push
cmp
add
inc
aas
mov
mov
sub
fs
jmp
jmp
xchg
jge
mov
dec
or
jne
pop
pop
xchg
mov
shl
add
add
arpl
mov
xor
add
in
push
xchg
xchg
cwtl
cltd
rsqrtps
or
out
movsb
cltd
mov
push
and
test
jne
sahf
data16
inc
in
data16
rcr
mov
jo
xchg
mov
cmpsb
xchg
leave
aas
rcr
stos
mov
lcall
ss
xchg
repnz
jle
pushf
mov
aaa
int3
out
pop
fs
dec
jo
stos
insl
rolb
outsl
insb
sub
pop
xchg
pop
into
inc
sti
push
loop
mov
jp
add
in
lahf
xor
sub
imul
push
dec
orb
out
xor
fsubp
addl
insl
sbb
and
jbe
jmp
sbb
push
pop
shll
data16
and
push
in
fcoms
or
pop
or
push
or
or
mov
inc
loope
push
xchg
fstps
xchg
test
dec
mov
addb
pop
movsl
fstpt
int
arpl
loope
xchg
je
loopne
jnp
mov
push
mov
icebp
mov
push
outsl
mov
ss
adc
mov
sub
mov
bound
push
outsl
mov
aam
leave
and
mov
mov
xor
clc
jne
insb
push
dec
xchg
xchg
adc
popf
je
or
decl
adc
sub
movsl
xchg
flds
bound
imul
add
jecxz
cwtl
ja
fldl
pop
ret
mov
in
push
sub
and
fnstsw
pusha
repz
push
pusha
mov
lds
xor
test
mov
jne
lods
rclb
or
out
push
aaa
shrl
push
aad
bound
mov
gs
movsl
ficoml
pop
pusha
sub
mov
pop
push
jnp
jb
les
pop
fs
xchg
sub
mov
cmp
cs
sub
xor
scas
popf
jl
ss
mov
dec
out
mov
ljmp
imul
mov
daa
inc
adc
jmp
mov
cmc
cmpsl
pop
sub
cmp
out
sub
lret
imul
je
nop
mov
pusha
cs
arpl
aad
aaa
xchg
dec
adc
jae
or
mov
push
in
xor
ss
xor
mov
pop
mov
stc
pop
cmp
xor
testl
push
inc
ret
jno
mov
jo
jnp
and
cmp
ds
adc
sub
mov
mov
xchg
mov
add
xchg
addr16
outsl
pop
lret
not
xor
fmul
mov
sarl
xor
popf
adc
dec
bound
cld
xor
and
inc
ljmp
pop
nop
mov
push
insl
adcl
in
movsl
test
fwait
loop
imul
mov
addl
fisubl
aaa
enter
ret
jae
fnstsw
iret
ja
jb
fs
jae
mov
xchg
pop
scas
aas
cmp
lahf
in
or
data16
cmp
cmp
or
into
add
or
mov
pop
mov
push
aam
mov
pop
or
das
jmp
outsb
or
add
jmp
inc
mov
movsl
dec
iret
or
pop
addr16
and
adc
jno
mov
sub
lcall
sub
ljmp
cmp
data16
es
gs
arpl
xor
std
lret
arpl
xchg
lods
sub
loop
cmp
daa
stc
int3
imul
dec
iret
repnz
fsin
stos
popf
mov
mov
repz
repnz
dec
popf
dec
test
xlat
push
pop
or
mov
push
jmp
mov
pop
out
lds
mov
mov
andl
jne
dec
scas
cli
popa
adc
testb
and
mov
jge
fisttpll
push
or
jmp
pop
jl
fstpt
mov
adc
loop
outsl
add
push
out
add
insb
and
sub
mov
mov
pushf
xor
push
stos
mov
roll
sub
test
jne
push
mov
ja
jns
push
dec
sbb
addr16
xchg
pop
xchg
jmp
gs
mov
pop
pop
mov
test
in
or
icebp
or
and
adc
mov
daa
repnz
ljmp
adc
ret
sub
mov
data16
or
cmp
pop
jno
ret
pusha
push
or
pop
fstps
insb
shll
in
xor
mov
imul
js
xchg
mov
cmp
mov
and
add
and
das
push
rcll
adc
not
insb
jb
mov
ja
sub
rcrl
push
jb
fcoml
sbb
push
fildl
mov
jne
rep
lds
shlb
xchg
xor
jge
daa
mov
push
loope
arpl
fwait
mov
push
in
jno
or
les
mov
mov
les
ret
das
cmp
shlb
enter
cwtl
push
jbe
call
loopne
pop
cmc
push
or
mov
mov
int3
loop
pop
mov
add
cmc
loope
iret
push
int
mov
push
mov
psrlq
xchg
shll
out
mov
test
cmp
ljmp
insl
and
pop
int
mov
add
adc
hlt
repz
jns
sbb
ja
jne
xlat
xchg
mov
xchg
pop
das
aas
pop
and
or
lret
out
out
jb
mov
fildll
jbe
or
movsb
repz
cs
paddusw
rolb
scas
push
pop
xor
adc
add
daa
pop
in
rcr
mov
push
mov
inc
bound
lret
fisubrl
nop
aas
xor
xchg
inc
inc
call
pop
psubd
add
or
xlat
gs
arpl
or
dec
sbb
or
pop
pop
jbe
stc
cld
pop
mov
and
pop
sbb
and
mov
pop
outsl
fnstenv
xchg
fldl
mov
decl
jae
xchg
mov
mov
insb
movsl
ljmp
outsb
insb
outsl
repz
mov
inc
push
aad
sahf
stos
subb
sub
push
mov
push
in
ficompl
nop
inc
aam
out
test
out
mov
clc
test
call
insl
pop
sub
jnp
sbbl
bound
ss
lret
and
adc
out
aad
js
xor
aad
adc
push
ficoml
dec
loopne
decl
pop
adc
lcall
pop
xchg
ljmp
add
fnstcw
cmp
outsb
jecxz
cmc
movsl
aas
jecxz
sbb
xchg
in
js
or
clc
mov
movsl
movb
xlat
cmp
movsb
fsubrl
sbb
insb
xchg
jmp
cmp
or
mov
je
sbb
pusha
scas
xchg
cli
ret
sbb
or
dec
fildl
sub
popf
sbb
ret
pop
inc
ror
ss
xchg
imul
lret
daa
sahf
std
push
sbb
in
lahf
jnp
adc
lea
out
sub
jecxz
sbb
pop
mov
jo
psubsb
or
in
mov
fsts
sub
sbb
out
inc
popf
jl
arpl
test
and
cmpsb
aam
or
aam
movzbl
sub
mov
mov
xchg
mov
out
jnp
sti
lods
inc
cmp
cli
jno
stos
jne
insl
in
pushf
mov
lahf
inc
adcl
in
pop
dec
fbstp
repnz
adc
jmp
jle
mov
in
mov
sbb
push
xchg
enter
and
push
inc
or
and
mov
xchg
mov
addb
sbb
sub
cmp
pop
loop
repz
inc
inc
into
testb
push
push
pop
and
outsl
pushf
add
fcmovnu
mov
add
sub
inc
test
in
mov
fisttpll
cld
jo
inc
sub
lahf
adc
push
or
aad
int3
and
orl
xchg
in
jae
out
in
outsb
std
sbb
cld
sub
in
arpl
push
aaa
push
push
add
cmp
inc
xchg
push
xchg
outsb
jae
jg
mov
mov
aad
jns
push
push
cmp
loope
jb
gs
in
adc
jp
and
push
or
inc
lock
dec
outsl
mov
push
shll
pop
mov
test
andl
xchg
aas
inc
scas
pop
sbb
mov
loopne
cli
cmpsl
je
push
add
orl
lock
adc
fldt
into
sbbl
adc
jo
add
pop
sub
lahf
push
es
pop
pop
pop
pop
lret
xor
ret
pop
jecxz
sub
lahf
stos
jno
and
jp
sub
mov
inc
rorb
adc
push
mov
lds
push
pop
xchg
mov
jg
cmp
andl
shlb
jns
xor
das
int
insl
mov
aad
mov
push
push
jg
pop
mov
cs
mov
sbb
jno
push
cs
sbb
jmp
xchg
test
icebp
ficomps
and
or
lock
test
dec
pop
lret
dec
push
add
add
ja
rdtsc
xchg
cmp
add
adc
lcall
xor
popa
std
mov
mov
lea
ja
mov
std
scas
clc
mov
cmp
inc
xchg
jl
pop
mull
mov
test
pop
cmc
xchg
xchg
adc
leave
loopne
jbe
pop
enter
dec
repnz
xchg
cld
rolb
push
cmp
in
xchg
pop
cli
cmp
pushf
cmp
stos
fdiv
mov
xchg
rolb
and
mov
loope
sbb
add
pop
mov
or
push
sbb
pop
and
push
inc
das
and
test
ljmp
mov
lods
das
shrb
fisubrs
xor
cwtl
xor
jbe
les
or
inc
clc
push
mov
jo,pn
adc
mov
test
dec
cmova
into
push
pop
sbb
stos
imul
iret
pop
movsb
sbb
adc
fnstcw
mov
stos
xchg
out
dec
popf
mov
dec
adc
stos
ficomps
mov
movsl
in
add
mov
jg
inc
pop
or
cwtl
mov
testb
xchg
bswap
mov
test
das
jb
push
adc
decb
xchg
adc
push
int
js
dec
mov
in
cmpsl
inc
mov
pushf
lock
inc
lods
push
mov
pand
lea
cld
pop
int
xorl
jo
cmp
imul
lods
jbe
mov
bound
iret
push
cmp
popf
xchg
fs
outsb
mov
pop
int3
dec
inc
stos
dec
das
mov
and
mov
add
push
cmp
xchg
inc
mov
pop
xor
jmp
sub
ficoml
sarl
and
in
cmp
out
leave
stc
push
xor
lds
outsb
dec
loop,pt
div
inc
sub
fadds
mov
mov
cmp
and
cwtl
ds
push
mov
and
push
test
inc
sub
movsb
scas
in
xor
hlt
dec
and
ds
fsts
pushf
ret
in
push
add
enter
add
andb
cmc
out
pop
stos
fwait
pop
jne
loop
addr16
insl
ficoml
aaa
scas
add
mov
mov
cmp
pop
pop
je
sahf
sarl
xchg
push
test
lar
mov
lock
mov
add
notb
arpl
adc
and
xor
mov
xor
in
sub
cmp
mov
add
mov
lcall
in
loopne
pop
jae
fs
mov
adc
pop
sbb
popa
inc
mov
std
dec
pusha
mov
xchg
xchg
shlb
xchg
rorb
pop
popf
sbbb
push
and
xor
ret
or
orb
inc
dec
cmp
push
add
repnz
js
cmp
shll
lods
or
out
cs
jle
adc
adc
add
popa
shr
shlb
aad
popa
mov
inc
xlat
mov
lahf
mov
aam
dec
jmp
test
mov
xchg
xchg
movsl
inc
insb
xorb
pop
mov
mov
ds
sub
or
fidivrs
pop
pop
push
pop
pop
and
xor
xor
mov
mov
mov
cltd
jae
test
call
mov
fistpll
nop
test
sub
cli
stos
jle
in
ss
mov
into
mov
adc
adc
sbb
xchg
popa
and
fbld
xorl
adc
xchg
loop
daa
mov
cmp
pop
cmp
or
mov
and
cmp
push
pop
inc
aaa
std
push
and
stos
jne
and
shlb
in
jecxz
les
xchg
movsl
cmp
outsl
fs
xchg
xchg
add
mov
int3
sbb
xchg
hlt
sbbl
push
int3
mov
out
fisubrl
and
cmp
movsl
jle
out
add
cmp
arpl
sub
push
mov
ja
adc
mov
jbe
mov
imul
hlt
mov
xor
gs
pop
jge
sbb
cld
scas
jge
xchg
ret
pop
ss
and
lods
ja
jge
sbb
dec
mov
outsl
inc
xchg
add
outsb
mov
cmc
cmpl
imul
addb
xchg
je
sbb
mov
add
sbb
add
pop
repz
arpl
test
test
push
xchg
cwtl
xchg
fnstcw
out
scas
shll
in
jns
jg
mov
and
mov
in
pop
nop
dec
lcall
fsts
addl
or
mov
or
ret
or
mov
sahf
aam
pop
test
int
adc
sbb
add
sbb
cwtl
push
pushf
jl
xchg
mov
movsl
xor
dec
andb
inc
mov
xchg
dec
push
ja
mov
sti
or
or
dec
inc
lea
or
lret
sub
popa
scas
xor
addr16
rcr
dec
negb
negl
in
inc
jb
or
lahf
lock
popa
mov
dec
add
das
and
fwait
cmp
inc
mov
add
cmc
mov
inc
inc
mov
adc
nop
cwtl
adc
or
or
jb
push
jge
addr16
fadd
mov
in
pop
insl
stos
ror
mov
mov
call
mov
jno
push
pop
js
shlb
xchg
dec
std
jmp
es
out
insb
seto
push
and
sbb
das
adc
mov
int
mov
popa
mov
into
jmp
mov
inc
or
pop
xor
cmp
adc
popa
mov
ja
ret
jl
inc
insl
pop
push
imul
repz
and
movsb
bound
push
mov
call
dec
add
pop
test
push
push
scas
not
aaa
pop
test
dec
mov
jg
test
mov
int3
rcll
aas
gs
or
jae
inc
shl
xchg
pop
mov
je
cltd
pop
cmp
ret
fdivrl
jno
int3
cmp
rcr
push
cmp
jne
fmulp
sbb
js
test
movb
pop
lret
pop
nop
icebp
js
pop
inc
scas
cli
sub
add
push
mov
add
xchg
inc
cwtl
hlt
fs
mov
xchg
xchg
fcomps
pop
sub
das
fldl
xchg
adc
shlb
in
enter
sub
outsb
pop
inc
cmp
fildll
fprem1
add
xchg
pop
arpl
ret
in
mov
adc
mov
inc
pop
movsl
and
loopne
jbe
pop
ss
test
test
or
subl
repnz
sbb
in
jmp
jne
in
cld
push
popa
dec
int
mov
lret
in
mov
cmp
cmc
jbe
cmp
aas
mov
jnp
push
sub
out
or
and
push
inc
cmp
mov
out
mov
mov
jb
push
sti
push
and
mov
outsb
dec
sub
cltd
lods
test
and
ljmp
jmp
pop
cmc
std
insb
jle
inc
test
inc
rcrl
jp
mov
or
enter
pop
dec
sbb
xchg
mov
push
stos
bound
js
pushf
xor
in
push
cmp
out
or
mov
das
dec
rclb
fcomps
adc
inc
mov
lock
sbb
orl
push
inc
outsl
movsl
add
push
ret
mov
arpl
fcmovnu
icebp
xchg
mov
push
push
cmc
lcall
imul
inc
je
andb
push
lcall
mov
iret
aas
in
pop
add
pop
dec
in
jp
jle
pop
push
and
mov
popf
sub
jle
or
scas
push
mov
das
mov
jmp
outsb
icebp
jmp
mov
adc
mov
sub
loope
sub
pop
dec
loope
lock
cmpsb
iret
aad
cmp
cmp
pop
stos
repz
push
pop
ljmp
and
push
push
in
and
aaa
mov
fistl
jecxz
imul
add
jbe
fwait
movsl
sub
imul
js
jns
scas
mov
jle
aas
int3
sbb
jb
outsl
dec
flds
push
cwtl
inc
adc
ljmp
ficoms
mov
mov
and
std
inc
js
xchg
cmp
pop
add
or
xor
lret
cmp
jmp
imull
xchg
outsb
push
add
out
in
test
push
insl
mov
inc
sbb
fwait
and
maxps
out
jl
pusha
sub
or
xor
cwtl
inc
jecxz
ljmp
mov
lret
pop
cmp
rcrl
pushf
bound
or
cltd
and
movhps
and
inc
imul
xchg
inc
pop
bnd
adc
das
or
mov
cltd
les
pop
sub
hlt
in
cltd
mov
xchg
hlt
jno
repnz
out
fwait
lods
loope
cmp
mov
mov
add
inc
cmp
cmpsl
cmp
push
sti
imul
loopne
outsl
rorl
add
cwtl
nop
pop
mov
dec
xchg
add
incl
movnti
shlb
shll
sub
jmp
inc
mov
jae
je
mov
nop
dec
dec
jae
adc
hlt
inc
dec
sbb
mov
enter
cmp
mov
adc
orl
fbld
pushf
add
adc
sub
ds
pop
movsb
sub
and
mov
mov
sar
push
add
cmpsb
test
ficoms
inc
and
xchg
mov
rolb
data16
fnstsw
adc
repz
test
xor
sbb
mov
or
movsb
fldl
inc
mov
cwtl
jmp
xlat
xor
xchg
xchg
fs
inc
sbb
fwait
sbb
mov
cwtl
je
and
fldcw
std
sti
mov
push
cmp
or
test
testb
leave
sbb
fldt
in
mov
xor
das
aaa
sbb
faddl
mov
pop
or
lods
mov
sub
push
sub
and
add
mov
enter
cmp
mov
scas
xchg
pushf
adc
testb
pop
xor
and
push
cld
and
sbb
es
loope
pushf
pusha
push
dec
lea
adcb
movsl
mov
or
hlt
mov
rorl
loop
sarl
roll
lret
cltd
jb
ds
ljmp
leave
sbb
mov
cmp
cmp
push
mov
out
mov
and
loope
push
jns
xor
call
pop
xchg
xchg
icebp
xchg
sbb
sub
mov
jnp
jne
out
mov
pop
lret
inc
in
mov
fisubl
sub
push
call
pop
popa
inc
std
fstpt
sti
add
pop
dec
dec
icebp
mov
or
lret
mov
pop
pop
and
ret
lods
ss
sub
mov
inc
xor
jns
adc
hlt
xor
cld
ja
dec
mov
sub
cmpxchg
bound
xchg
xor
xchg
hlt
push
jecxz
movsl
aad
push
xchg
imul
mov
sub
and
cmp
mov
sti
in
out
push
add
mov
cmc
clc
push
cmp
push
addl
sub
mov
mov
adc
inc
xchg
xor
in
add
and
and
popa
cmpsl
movsb
xchg
mov
repnz
mov
inc
xchg
js
outsb
test
icebp
adc
lock
jge
sbb
jle
dec
sbb
lock
xchg
subl
mov
inc
stc
aaa
sub
push
lock
lock
call
insb
lods
lcall
jne
sub
enter
mov
cltd
cmp
fcomps
sbb
into
pop
bound
insb
rol
add
je
push
dec
lret
and
cmp
movsb
jmp
and
js
dec
xchg
jle
and
xchg
mov
clc
paddq
fmul
ljmp
repnz
or
push
push
loop
lods
push
cmc
out
jne
mov
icebp
shrl
ja
and
jns
setbe
dec
sub
into
fwait
adc
fildll
push
pop
pop
aas
daa
sub
mov
call
call
cmp
jnp
rcll
pop
push
or
push
sbb
cld
ss
cld
dec
les
loopne
jge
inc
xchg
leave
mov
fsubrs
jge
lret
adc
in
pop
test
sub
dec
inc
icebp
mov
inc
cs
in
in
and
push
ror
icebp
add
dec
or
pop
xchg
sti
or
inc
ja
add
data16
cmc
jle,pt
int
movsl
je
cli
sarb
inc
into
sbbl
push
sbb
push
sub
lea
and
repz
popa
add
pop
ds
loop
gs
sbb
push
push
xor
sbb
cmp
fisubrs
inc
cmpb
aaa
cmp
cmc
mov
loope
in
mov
rcl
mov
loope
sbb
push
into
inc
add
push
shrb
and
aas
mov
sub
mov
in
pushf
jo
int3
fisttps
lret
jg
jmp
add
rcl
pop
cmp
push
stos
aaa
loop
dec
mov
xor
shll
cmp
cmpsb
xchg
lret
xor
fs
ja
add
jne
cmc
fnstenv
addr16
dec
or
xchg
ljmp
imul
in
ret
jge
in
adc
sarb
cmp
jg
sub
xchg
adc
jae
and
mov
push
xor
pop
shlb
imul
lock
fs
lods
xchg
xor
negl
stos
pop
in
sbb
dec
xor
and
das
test
into
mov
xchg
lcall
sub
ret
pop
ret
pop
sahf
mov
stos
dec
and
sbbl
xchg
push
pop
stos
push
lods
test
insl
je
sub
inc
and
push
int
fnsave
bsr
pop
sub
sub
repz
cli
dec
rorb
pop
loope
adc
out
int3
jp
iret
test
insb
cli
and
outsl
sbbb
pop
fwait
jecxz
pop
inc
lea
je
pop
cwtl
push
sub
xor
je
pushf
sahf
dec
lcall
or
outsl
or
hlt
pusha
mov
int3
popa
push
push
and
shlb
mov
and
cmp
push
push
push
stos
repnz
mov
fdivs
fxch
sti
lock
sbb
mov
xchg
iret
mov
dec
jne
cmc
stos
fwait
push
mov
and
in
insb
daa
add
mov
add
pusha
scas
stc
adc
pop
adcl
push
stos
outsl
add
movsb
inc
dec
sbb
xchg
push
mov
repz
push
jmp
clc
or
arpl
push
mov
fwait
dec
xor
sub
add
test
push
test
mov
in
xorl
mov
cmp
aam
arpl
ljmp
jb
xchg
ret
sbb
sbb
adc
insl
clc
iret
loop
mov
mov
and
ret
push
mov
mov
popa
mov
push
faddl
xlat
fs
sbb
pop
cltd
push
mov
nop
adc
jmp
push
and
push
fdiv
dec
mov
js
pop
neg
lds
ss
in
xchg
mov
push
inc
and
mov
pop
lcall
push
jns
pop
flds
mov
or
jbe
pop
or
adc
hlt
shlb
jne
int
je
mov
sub
imul
xor
jp
xor
imul
sub
leave
adc
inc
imul
mov
imulb
dec
lods
push
pushl
int3
inc
cmp
leave
mov
fildl
mov
xor
add
cmp
jae
inc
scas
cmp
aad
jbe
sti
out
fdiv
outsb
lds
js
mov
add
or
or
mov
and
or
push
or
call
popf
push
adc
xchg
jg
dec
adc
push
pop
push
push
dec
inc
pop
sub
mov
add
mov
push
sub
and
add
jo
stc
and
notl
bound
sub
lds
mov
mov
sbb
jo
add
stc
into
push
push
inc
and
jo
adc
inc
and
les
dec
jmp
jmp
push
xor
pusha
arpl
cmpsb
cmpsb
or
insb
aam
adc
pushf
aam
pop
jno
insb
popa
cmp
dec
or
and
mov
into
popf
xor
xchg
mov
inc
inc
mov
ror
and
and
cmp
fadds
and
add
xchg
repz
dec
lods
inc
repnz
adc
in
mov
mov
cmpsl
and
jnp
scas
arpl
pop
mov
loope
and
outsl
int
push
cmpsb
out
pop
push
pop
aas
xorb
cld
lods
lds
or
outsb
icebp
movsb
cmp
or
frstor
push
imul
push
lods
mov
xchg
sub
aam
pop
and
inc
mov
dec
movsl
int
cltd
test
dec
movb
cli
pop
shl
xor
insl
add
notl
ret
aad
stos
adc
and
repz
sub
ret
test
jae
pop
mov
sub
ret
lahf
dec
scas
sahf
lea
mov
jmp
push
mov
xor
stos
pop
mov
pop
out
push
cmc
ljmp
xor
std
enter
mov
inc
jp
mov
movl
ror
mov
testl
jae
call
inc
sub
nop
push
in
outsl
shrb
jnp
fdiv
js
mov
jge
xchg
jg
repz
adc
sbb
xor
cltd
mov
mov
popf
cld
or
jo
inc
mov
xchg
mov
das
add
mov
sub
pop
mov
mov
pop
dec
sub
xor
sbb
pop
pop
in
xchg
push
pop
mov
mov
pop
pop
repz
dec
dec
daa
push
je
add
add
stos
push
cltd
jg
test
push
popw
jg
fdivrl
pop
jl
xchg
xor
jecxz
or
hlt
out
into
bound
fsts
xor
inc
adc
loopne
cmp
popf
sub
repz
mov
push
aad
sahf
rclb
or
into
ret
imul
dec
out
pushf
frstor
dec
push
imul
inc
push
sarb
push
push
mov
bound
and
daa
inc
cwtl
cltd
cmp
or
aas
push
inc
mul
je
xchg
movsb
mov
std
jp
cmp
scas
adc
sub
repnz
jns
mov
push
push
push
xchg
mov
negl
roll
ret
out
pop
xchg
mov
xor
mov
push
fisttpl
in
mov
push
sub
inc
sub
popa
into
cmpsb
roll
fwait
dec
stc
push
and
cmc
adc
cmp
daa
test
andl
xor
fsubs
ret
test
push
dec
in
stos
inc
lds
cmp
sbb
mov
dec
pop
arpl
pusha
mov
out
dec
ret
aaa
incb
nop
xchg
mov
bound
adc
cmp
mov
lds
and
adc
stos
cmp
outsb
lods
cli
and
in
inc
pop
pushf
into
inc
rcll
shlb
jns
mov
jb
add
or
or
jns
adc
ljmp
push
adc
jae
out
pop
and
xor
test
sahf
fisubl
xor
xchg
outsl
xchg
pop
into
outsl
mov
sub
lods
mov
mov
add
pop
flds
adc
mov
stos
ret
sbb
aam
xchg
lahf
fnstsw
and
sti
jle
adc
lret
stos
cmp
cli
pop
pop
pop
je
ret
stos
sbb
sub
adc
lods
ret
fidivrl
outsb
lcall
sahf
aad
lods
inc
or
pop
push
imul
push
mov
xchg
shlb
std
aad
sub
and
mov
cmc
pushf
dec
jns
adc
orl
or
call
sbb
pop
dec
cli
pop
mulb
add
cld
mov
shlb
sti
xchg
cmpsl
fstps
ret
adc
sub
call
fsubrs
xchg
and
outsl
mov
in
mov
stos
pop
jle
push
dec
pop
les
lcall
mov
jbe
jle
add
sub
bound
mov
push
mov
test
jae
pop
popf
push
ds
mov
sbb
test
cmp
adc
push
sbb
sbb
clc
leave
lock
jbe
or
fildll
jg
cmp
mov
cmp
mov
data16
push
push
shrl
mov
mov
jno
xor
les
aas
cwtl
addr16
cmpsb
imull
push
xchg
cmpsb
dec
cmp
mov
pop
mov
cwtl
mov
sbb
mov
mov
push
mov
xor
ret
fbstp
xchg
imul
leave
popa
mov
mov
scas
jle
pop
movq
pop
inc
cmp
les
stos
sbbb
and
andb
add
jmp
pop
cmpsb
cld
pop
pop
mov
jbe
jmp
imul
imul
or
loope
mov
or
dec
sar
xchg
push
sahf
sahf
sub
mov
pop
pop
fldl2e
icebp
xor
jg
imul
test
and
sbb
out
push
push
dec
filds
neg
xchg
mov
lcall
fldt
mov
inc
pop
dec
repnz
push
fwait
dec
mov
xor
pushf
inc
shlb
outsl
pop
rcrl
push
shll
xor
push
lcall
jmp
das
dec
xor
inc
add
cli
push
call
enter
int3
test
ja
and
xlat
sarb
in
and
jae
add
sub
in
mov
cld
loopne
xchg
push
and
insb
fnclex
dec
mov
mov
or
adc
fsts
popf
mov
xchg
movsl
push
dec
sbb
jecxz
fwait
jmp
pop
ret
adc
gs
cmc
cld
jecxz
cmp
mov
notb
mov
in
roll
ss
int
sub
jne
lock
repz
sbbl
inc
idiv
loopne
sbb
dec
adc
xchg
inc
scas
popa
rcr
jp
roll
mov
inc
lcall
push
movl
mov
sub
mov
jnp
scas
xchg
cltd
in
test
mov
mov
push
setb
jp
aam
xchg
daa
push
dec
sub
aad
dec
mov
xor
aas
cs
push
jnp
dec
jns
test
mov
daa
ss
sub
sbb
lret
addb
pop
stos
inc
xor
shlb
mov
ds
std
xchg
mov
or
les
stc
repz
xor
xchg
jmp
sbb
mov
mov
lahf
sbb
pusha
pop
gs
imul
add
add
dec
xor
shrl
ds
push
lock
sbb
mov
jb
shl
push
sbb
jae
cli
icebp
daa
mov
rcr
jp
decb
mov
mov
loope
nop
mov
mov
divb
popf
les
outsb
popa
xorl
iret
test
adc
cmp
je
stc
mov
xor
insl
dec
add
xor
std
cltd
pop
pop
cmpl
or
shrb
mov
daa
pop
fwait
pushf
daa
jmp
dec
inc
push
cmc
and
cli
jge
pop
cmc
push
test
sahf
ss
lret
out
imul
xchg
sbb
push
jbe
js
movsb
ljmp
xchg
inc
jmp
pop
xor
daa
int
add
jle
push
out
cmp
imulb
xor
sbb
repz
xor
inc
lock
mov
push
imul
mov
mov
mov
and
or
in
and
and
fcompl
mov
jl
scas
aaa
jae
mov
lock
scas
sub
jle
mov
and
sahf
loop
fs
dec
inc
loope
mov
jb
push
popf
mov
xor
xchg
lods
sbb
nop
stos
test
sub
xor
cwtl
mov
jns
push
cmp
jns
dec
xchg
mov
push
jae
adcl
decl
cmc
andl
hlt
aad
dec
sahf
push
push
and
roll
es
sbb
sbb
or
push
sub
shrl
hlt
jecxz
xchg
fwait
xchg
shrb
or
scas
xchg
loope
fistpll
mov
out
pop
lret
push
and
cmpsb
jg
idivl
mov
cmpsb
cmpb
or
fs
test
lock
mov
ret
int3
pop
mov
mov
stos
nop
jae
stos
cmp
pop
and
test
push
jmp
test
adc
cld
xchg
in
sbb
insl
pop
insb
cmp
clc
inc
sub
ljmp
ja
fwait
out
jae
fstpt
cltd
call
adc
adc
cwtl
aas
movsb
mov
xor
in
ljmp
stos
cltd
mov
cltd
sub
jge
adc
movsl
xor
stos
sbb
or
aas
jnp
mov
lahf
in
jp
orb
int3
or
mov
push
clc
sbb
mov
sarb
aas
push
fs
js
popa
sub
mov
jns
stos
ret
cltd
jnp
std
xor
or
cmp
lock
decb
inc
add
cmp
out
push
loop
jo
sar
jmp
push
call
leave
jns
pop
lea
adc
inc
cmc
test
test
out
mov
ret
iret
sub
and
lret
dec
jg
or
or
addl
or
movsb
fcomps
fbstp
mov
cmp
xor
push
xor
sub
lahf
in
adc
test
aas
push
jg
xchg
imul
lock
pop
aaa
push
mov
jbe
je
insl
sub
pusha
insl
cmp
js
ja
and
sbb
sbb
repnz
out
aam
sbb
xchg
sbb
jns
inc
inc
ljmp
scas
insl
ret
fmulp
sbb
sbb
pop
mov
xor
pop
scas
xchg
in
fsts
and
sbb
mov
test
sbb
mov
cmpsl
inc
ja
imul
push
movsb
cmpsb
jb
and
mov
add
jns
adc
sbb
push
mov
jp
movsl
lock
inc
sub
dec
test
push
push
cltd
add
mov
xor
cmp
test
aam
fcomi
xchg
inc
cmc
insb
adc
mov
xor
stos
test
cmp
push
inc
pop
int3
dec
daa
push
clc
lea
jp
iret
cmc
mov
jnp
cmc
test
shll
mov
xor
dec
pop
sarl
push
mov
outsb
leave
cmp
stos
sbb
fistpl
cmp
into
add
or
dec
cmp
sbb
call
loopne
mov
push
push
mov
push
mov
mov
adc
stos
out
call
loope
loopne
loope
les
mov
and
mov
test
test
push
push
add
stc
decl
fcoml
xchg
sub
pop
fs
ljmp
pop
add
mov
ret
jns
lret
call
adc
andl
add
xor
js
sbbl
mov
test
aas
les
push
xchg
xchg
pop
dec
mov
push
xchg
xchg
dec
add
dec
mov
sbb
mov
stos
xor
popa
roll
lret
jecxz
aam
dec
lea
jecxz
pop
push
mov
adc
leave
xchg
sbb
pop
xor
xchg
and
mov
pop
cld
movl
lret
pop
sbb
loopne
jno
add
mov
pop
jmp
addr16
sahf
mov
andl
imul
inc
and
in
push
stos
inc
mov
jmp
pop
sti
ds
xor
mov
xor
sti
xchg
movsb
mov
arpl
xchg
pop
jle
out
jbe
fbld
pop
push
sub
push
adc
notb
rorb
lock
mov
cmc
shl
sbb
cmp
into
adc
mov
sbb
jle
rcrb
int3
dec
enter
nop
outsl
outsb
pop
or
inc
insl
dec
roll
or
mov
adc
xchg
pop
lock
push
push
bound
mov
shl
and
xchg
or
fnsave
xlat
repnz
cmp
stos
test
mov
or
jae
jmp
fdiv
or
insl
sub
enter
rol
mov
mov
mov
mov
sub
push
andb
dec
cs
les
test
inc
inc
sbb
cwtl
mov
mov
push
int3
mov
cwtl
pop
popf
mov
adc
insb
test
sbbb
jb
pop
and
loope
js
insb
inc
mov
mov
jbe
ss
loopne
lock
imul
movl
movsb
pop
fs
lcall
mov
outsb
pop
inc
push
movsb
data16
cli
or
dec
bnd
mov
jae
rorb
add
stos
add
lret
add
test
incb
add
test
aad
xor
mov
inc
lret
add
pop
ss
je
lahf
mov
decb
enter
stos
dec
cmpsl
mov
push
aam
xor
push
ja
lods
test
cmp
dec
xor
xchg
mov
push
sub
outsl
imul
mov
std
rol
rorl
shrb
sub
add
xchg
lods
mov
stos
dec
mov
fdivp
nop
nop
bound
mov
dec
mov
push
cwtl
cmp
add
push
dec
mov
shl
pop
sub
sub
mov
xchg
movsb
inc
fcmove
fmul
inc
sub
faddl
dec
mov
cmp
mov
inc
xchg
sub
shlb
adc
or
and
add
push
inc
jp
and
inc
xor
and
xor
cltd
add
ljmp
adc
push
pop
rcll
dec
xor
negb
mov
push
pop
sahf
and
lahf
fwait
dec
shrl
mov
jns
inc
push
int3
push
je
mov
adc
or
fildll
inc
mov
and
sbb
subb
cmpsb
int3
mov
inc
fs
popa
push
loop
test
dec
out
cmp
and
add
sub
or
js
test
push
test
shll
mov
mov
lret
js
push
movsl
gs
inc
gs
xchg
scas
cmp
daa
imul
repnz
mov
fsubl
xchg
push
mov
sub
sbb
cli
lds
push
shlb
icebp
dec
jl
push
dec
pop
enter
dec
mov
lods
mov
js
mov
jmp
push
lcall
add
lcall
insb
xor
testl
mov
stos
lods
lret
shrl
add
pop
mov
insl
mov
cmp
imul
mov
mov
mov
pop
mov
or
sub
sti
into
pop
out
sub
lea
lods
outsl
in
or
adc
lds
mov
imul
sub
adc
nop
pop
pop
xchg
pop
mov
xchg
mov
jae
sbb
jno
or
popa
aam
mov
inc
sahf
xchg
mov
data16
imul
cmpb
jnp
pop
les
fldenv
cld
xchg
dec
sub
adc
dec
in
mov
in
cltd
pop
pusha
int
test
dec
lods
pop
inc
mov
pusha
movsb
jns
jg
icebp
and
pop
jb
mov
fmul
lock
pusha
fstp
aaa
jmp
or
data16
sub
orl
sub
leave
gs
push
neg
mov
push
sti
rorb
jecxz
rclb
hlt
xor
push
movsb
mov
cmpsl
hlt
out
xchg
adc
fwait
adc
mov
adc
xchg
int3
sub
rcr
fidivrs
repnz
shlb
out
pop
movsl
outsl
dec
mov
test
mov
push
stc
notl
pushf
dec
mov
add
shl
sbb
jmp
negb
push
cltd
jbe
lea
inc
iret
pusha
divb
mov
jmp
adc
cltd
fcomps
inc
push
lret
mov
push
test
inc
mov
add
adc
dec
icebp
dec
fidivs
stos
addr16
rcll
sub
dec
rclb
mull
xchg
aam
push
adc
push
insl
movsl
pop
icebp
mov
jle
adc
jl
mov
out
insb
inc
push
sub
adc
dec
inc
lret
popa
and
lock
and
jbe
push
int
mov
xchg
xor
push
jno
movsl
mov
lret
sbb
jns
mov
arpl
mov
testl
cwtl
dec
pop
pop
stos
cmpsb
adc
mov
fidivrl
rorb
sbb
mov
pop
ss
dec
es
int
push
xchg
out
pop
lods
adc
inc
xchg
daa
outsb
mov
lds
addb
pop
inc
mov
lods
pop
ss
pop
ss
inc
push
pop
adc
gs
xchg
lods
jo
sub
stos
mov
out
or
mov
fwait
jp
or
pop
or
mul
loopne
call
xor
mov
andl
in
sti
add
icebp
sbb
inc
push
jno
out
adcl
scas
jp
xchg
leave
push
mov
lds
cmp
push
lret
xorb
jno
jae
pop
adc
inc
incl
jne
stos
inc
mov
outsl
adc
or
aad
lret
lcall
xchg
enter
lcall
ljmp
mov
jecxz
xor
fimull
sbb
inc
jge
sub
cmp
jmp
sbb
push
xchg
lret
movsl
loop
les
add
leave
add
xchg
push
or
fdivrl
mov
fs
jmp
std
std
mov
adc
push
pop
std
pop
or
daa
and
stos
imul
xchg
js
or
add
fildll
js
pop
sub
dec
gs
and
insl
imul
nop
mov
fisubl
fucom
xor
jns
adc
jb
cld
aaa
bound
add
xchg
jle
repz
sbb
in
pop
movsl
mov
movsl
jae
adc
out
repnz
ds
call
popa
xor
in
enter
and
fnstenv
out
or
and
enter
fstpt
sub
mov
cld
inc
mov
lcall
mov
push
mov
movsl
xchg
cmpsb
ss
or
jbe
jge
icebp
inc
jne
leave
ja
mov
lcall
mov
jl
mov
enter
mov
adc
mov
test
adc
pop
mov
push
inc
mov
jg
icebp
sbb
lret
test
mov
mul
sub
enter
arpl
ss
jnp
stos
push
stc
fsubs
dec
pusha
cmp
inc
add
xor
cmpxchg
lock
or
loop
cli
scas
lods
loopne
sub
push
and
inc
cmp
cmp
mov
xor
inc
and
inc
push
outsl
mov
jo
sbb
mov
jno
jmp
mov
pop
mov
daa
bound
int3
hlt
fistl
mov
pusha
lods
daa
lret
sbb
xchg
pop
and
adcb
or
sarl
movsb
lds
lods
fimuls
pop
aam
mov
and
xchg
xchg
lcall
out
in
gs
mov
lods
in
lea
or
jmp
sub
out
push
inc
jge
mov
lock
loop
out
sti
pop
fidivrs
divl
sti
cld
sbb
and
xlat
int
jge
mov
mov
scas
xchg
pop
or
add
xor
int
je
popf
push
mov
xchg
mov
shl
cmp
into
test
mov
imul
int
push
aad
adc
cwtl
jmp
push
dec
ds
aas
push
lods
ret
push
dec
shrb
sbb
add
xchg
jno
mov
mov
je
sbb
and
insb
imul
sub
and
jb
push
pusha
jae
scas
outsl
stos
cmpsl
repnz
subl
jp
jge
mov
pop
mov
iret
sahf
mov
iret
arpl
imul
mov
mov
hlt
into
mov
cs
or
xor
cmovp
movsb
sub
aad
jb
jae
nop
les
xlat
cmp
push
out
xchg
jnp
pop
shl
cmp
mov
xor
movsl
adc
iret
add
push
adcb
fistpll
enter
push
aad
mov
icebp
mov
or
lods
js
adc
mov
ljmp
nop
or
movl
push
or
xor
js
mov
or
inc
mov
jo
mov
incl
pop
gs
shll
xchg
hlt
enter
or
clc
hlt
bound
mul
repz
sbb
cltd
mov
out
shlb
inc
sub
cmpl
xchg
movsb
pusha
adc
xchg
pop
xchg
popf
push
in
and
fldt
add
test
adc
lahf
xchg
lret
sbbl
inc
mov
sbb
sarb
hlt
jmp
shlb
mov
testl
cld
dec
cmp
sbbl
out
push
fwait
push
sahf
ss
lcall
jo
jae
imul
ljmp
sub
xor
orl
iret
push
push
jp
sahf
jg
mov
test
jno
aas
cmpl
dec
mov
sbb
lret
ss
mov
ja
stc
ja
nop
mov
popa
sub
pop
jo
pop
mov
pop
xchg
scas
aam
jbe
sub
sub
push
lahf
push
jle
insb
hlt
das
jl
mov
enter
add
stc
fisubs
push
fcoml
xchg
mov
insl
sar
subl
jg
xor
insl
shrl
repz
popa
movsl
push
mov
aad
xchg
insb
loop
jg
inc
xchg
out
mov
pushf
xor
dec
int3
push
xchg
mov
rolb
mov
add
mov
cmp
outsl
stc
lcall
mov
shld
sub
insb
clc
mov
insl
adc
outsl
sbb
or
or
mov
xchg
ljmp
repnz
mov
xorb
adc
das
fdivs
mov
test
mov
push
outsl
addr16
dec
jnp
addb
or
add
les
nop
in
and
push
in
shrl
scas
ja
loop
test
into
add
pop
loopne
sub
cmp
int
je
mov
dec
stc
into
or
pop
push
inc
xchg
ljmp
xor
sahf
add
popf
xlat
std
mov
imul
out
sti
gs
sub
xchg
xchg
icebp
dec
push
in
add
popa
fmulp
and
cmp
dec
sbb
push
add
in
popa
imul
mull
aam
pop
and
pop
xor
jmp
test
jge
loop
sub
out
addr16
push
xchg
push
mov
push
jne
clc
mov
jbe
outsl
lret
rclb
shll
adc
or
mov
xchg
push
xchg
insl
add
mov
mov
cmp
jno
push
sbb
dec
pop
add
dec
mov
xor
dec
orb
pop
je
jb
iret
push
mov
sub
adc
xchg
imul
mov
adc
mov
jne
cltd
dec
cmp
imul
cmpb
out
into
push
pushf
lret
clc
fsubrl
pusha
jge
inc
mov
ja
xlat
dec
mov
and
adc
ds
pop
adc
sub
sbb
push
xchg
shlb
in
jmp
aad
sbb
adc
and
mov
js
fisttpll
hlt
mov
shr
mov
inc
and
cmpsl
mov
push
push
or
adc
inc
ljmp
je
jno
fstpl
cli
aas
cmp
ror
push
cmp
sbb
das
adc
loope
or
in
in
lcall
aaa
icebp
shlb
xor
inc
cmp
inc
and
fisubl
in
testb
movsb
xchg
pop
sub
fisubl
sahf
mov
xor
sbb
jecxz
loopne
into
ret
mov
arpl
mov
dec
cmpsl
popa
and
int3
sub
dec
xchg
cmc
repz
fidivs
ljmp
cmp
pop
sub
sub
and
lret
testb
cltd
fcmovnb
xchg
jmp
sub
jle
daa
stos
mov
mov
mov
sbb
push
test
dec
mov
or
inc
sbb
jp
dec
sbb
inc
es
gs
fstp
mov
pop
mov
mov
pop
xchg
notb
xor
xchg
hlt
add
cmp
cmpsb
hlt
or
mov
or
mov
arpl
movsb
addb
pop
pop
lock
lahf
es
cs
lcall
sub
sub
xchg
pop
sbb
mov
or
cwtl
dec
das
jmp
lock
pop
js
inc
mov
loope
mov
outsb
and
cld
mov
fs
ret
ja
add
xor
inc
add
mov
scas
pushf
out
and
or
cmp
loope
jle
out
loopne
add
push
or
jo
lret
inc
les
int3
insl
jecxz
and
aad
xchg
sub
scas
xor
outsb
xor
mov
in
xlat
push
xchg
push
add
aaa
paddw
jbe
addb
hlt
scas
repnz
jle
push
jl
mov
xchg
mov
pop
add
adc
dec
lock
lock
mov
lock
outsl
outsb
lods
bound
in
mov
lods
adc
cmpxchg
sub
adc
stc
loope
inc
sub
fldl
xchg
mov
ja
xor
imul
adc
fsubl
lock
test
add
jo
pop
stc
mov
roll
xchg
repz
cld
inc
cmovae
dec
in
mov
xor
pop
sub
lods
jns
xor
ret
outsl
rorb
adc
test
fs
lock
decl
inc
mov
imul
cltd
imul
dec
mov
lcall
xor
xor
sbb
loop
push
sbb
daa
mov
jg
add
dec
xor
xchg
sbb
push
xchg
jb
scas
test
mov
sub
dec
or
xor
adc
dec
sti
rcl
adc
mov
rsm
aad
dec
mov
pop
or
test
outsl
stc
sbb
cmp
pop
push
sbbl
shlb
imul
xor
fists
xchg
ret
test
and
mov
add
adc
push
shrb
mov
dec
enter
lods
jmp
mov
cmpsl
add
fnstcw
jmp
add
xchg
dec
jmp
mov
ret
les
hlt
jo
cwtl
xor
dec
adc
lds
inc
mov
daa
adc
dec
add
in
loop
test
sbb
sbb
pusha
push
insb
or
dec
adc
dec
pusha
lahf
aas
mov
in
inc
mov
dec
aam
ret
or
xor
lahf
imul
lcall
xchg
into
push
andl
dec
lcall
repnz
cli
xchg
out
jp
xor
or
test
push
imul
push
mov
stos
clc
enter
repz
xchg
clc
insl
mov
push
lcall
and
mov
inc
addb
add
orb
cli
je
adc
mov
mov
cmp
xor
shrl
test
jbe
insb
es
popf
addr16
ret
xor
sub
rcr
mov
or
andl
cmp
mov
nop
in
and
nop
fucomp
xchg
mov
xchg
repz
jl
repz
je
and
insb
in
sarb
mov
ja
dec
fwait
and
inc
or
aad
inc
xorl
pop
jl
stc
idivl
test
and
into
rcl
cmc
dec
adc
scas
or
and
xchg
inc
scas
mov
fwait
add
dec
fsubl
and
push
ja
rcll
daa
push
sbb
and
xchg
sub
ds
cltd
cmpsl
outsl
ja
fmul
sbb
or
adc
add
adcl
dec
test
xchg
in
push
sub
cld
daa
adc
sub
mov
clc
sbbl
pop
clc
cmc
lods
fcoml
data16
ror
stos
aaa
cmp
pop
sbb
outsb
icebp
in
ret
shlb
ds
mov
insb
jecxz
or
xchg
push
jno
adc
xor
pushf
inc
cmp
stc
enter
popf
mov
inc
sbb
cmpsl
cmc
jmp
enter
mov
mov
mov
iret
adc
dec
mov
pusha
jg
scas
push
jae
cmp
in
shll
ss
dec
dec
mov
aad
xlat
fwait
mov
movsl
mov
xchg
ljmp
std
xchg
outsl
mov
and
sbb
inc
enter
sbb
push
cmp
insl
sbb
adc
push
and
add
push
sub
je
xlat
push
add
mov
or
pop
cli
sbb
cmp
shll
xchg
jge
fldl
cltd
mov
pop
insl
aad
jae
or
xchg
cltd
mov
push
jge
call
lret
rcl
and
or
cmp
scas
or
push
out
icebp
jmp
adc
sahf
inc
scas
lods
test
stc
dec
arpl
in
fdivs
dec
mul
iret
pop
in
out
jnp
mov
pop
ds
and
inc
sub
test
outsb
mov
cld
out
sahf
xor
aad
out
leave
pusha
push
das
enter
lcall
pop
int
xchg
pop
mov
add
cli
cmp
sbb
push
or
fisttps
dec
push
repnz
pusha
lcall
iret
aas
es
fcmovu
jl
jecxz
dec
mov
jge
dec
ds
xor
mov
jge
data16
mov
out
and
mov
fsub
jnp
and
push
movsl
scas
test
shlb
jmp
loope
cmp
js
int3
movsl
or
fmuls
icebp
pop
jne
jae
fwait
jg
cwtl
fmull
pop
pop
mov
or
fldl
xor
sbb
dec
mull
mov
lds
mov
mov
cmpb
dec
jne
bound
xchg
popf
imul
xchg
sbb
nop
mov
iret
lcall
ss
je
jl
push
jbe
cmp
sbb
sub
ret
and
mov
sub
add
in
push
push
jecxz
lret
xchg
pusha
insl
inc
leave
or
in
mov
nop
dec
push
movsb
cmc
std
popa
mov
xor
mov
pop
pop
mov
inc
mov
je
es
mov
add
xchg
or
cmp
sub
les
cmp
stc
lret
jb
xor
repz
jge
dec
repz
roll
mov
mov
pop
jg
fstps
jb
xor
scas
data16
push
mov
cmc
add
lahf
dec
cs
ss
or
sub
dec
push
sbb
dec
sbb
sub
mov
aad
jp
test
and
cmp
mov
imulb
push
xchg
dec
repnz
out
cs
add
mov
addb
idivl
hlt
iret
test
or
int
sbb
sub
push
xchg
lods
and
enter
xor
cmp
lds
divl
dec
push
shrl
sub
orl
dec
int
lcall
cli
lea
pop
add
adc
iret
addl
testb
inc
popa
jns
test
je
inc
or
jp
mov
rcr
in
ret
test
adc
adc
idiv
sub
popf
mov
scas
ds
clc
mov
cld
loopne
cmpsl
js
cmovbe
adc
cmp
loope
mov
data16
std
sahf
mov
mov
push
adc
movsb
pop
stc
pop
xchg
or
fwait
cmpsl
jl
lds
push
pop
and
fstpl
xchg
adc
outsl
pop
dec
cmp
pop
lds
fldt
sub
sbb
imul
rolb
jmp
adc
pop
lods
lcall
dec
ljmp
jle
push
xor
in
outsl
stos
xor
adc
mov
insb
mov
in
das
insb
sbb
sti
mov
je
push
ss
xor
add
loope
in
js
mov
mov
add
stc
push
out
popa
stos
data16
ret
test
jmp
out
or
insl
loop
rorb
add
ss
mov
sub
std
leave
jae
sahf
shrb
pusha
int3
xchg
in
xchg
xchg
push
call
mov
xor
das
or
mov
sub
je
shrl
out
in
rcrl
mov
adc
jae
loop
push
addr16
dec
fcmovbe
cmpsb
sbb
mov
push
mov
or
mov
loop
lods
repz
bound
daa
into
adc
cmp
sub
std
dec
sahf
jg
sbb
dec
rorl
sbb
mov
pop
xor
subl
jbe
sbb
sub
int3
mov
popf
shrl
enter
jge
or
cmp
sti
fcmovnb
in
rolb
mov
jp
das
lock
add
or
outsb
imul
inc
sub
mov
pop
adc
mov
mov
mov
xlat
pop
mov
mov
rcrl
xchg
jmp
pop
push
push
rol
adc
ret
popf
nop
sub
sub
or
add
push
call
testb
leave
push
push
test
fisttpl
cmp
out
push
sub
arpl
jae
pop
cmpsl
push
jle
repnz
lods
mov
ret
sti
out
sbb
pop
mov
adc
xchg
test
add
cmc
jno
xchg
xchg
jbe
fstpt
cmp
ret
mov
je
jns
jmp
sub
loope
aaa
mov
cmpl
push
cs
jecxz
dec
mov
sahf
lea
add
and
fsubrp
add
jno
lcall
hlt
loop
imul
clc
scas
ds
lds
lret
xchg
cmpsb
ja
out
mov
xor
aad
push
mov
fistpll
xor
xor
mov
xchg
lcall
pmaxsw
iret
scas
inc
mov
jmp
js
rcrl
or
sbb
lret
sub
xlat
jns
mov
jmp
and
pop
testb
inc
lahf
aas
loope
test
sqrtps
xchg
push
jmp
out
rclb
mov
adc
pop
in
sbbl
mov
icebp
mov
lahf
fs
jmp
sub
push
outsb
or
loopne
mov
ret
mov
into
sub
add
shll
int3
lods
xchg
aas
mov
mov
jecxz
adc
std
in
and
movsb
cmp
jns
imul
dec
sub
push
mov
and
cld
inc
inc
xchg
out
xor
jns
sub
leave
pusha
or
pop
or
sbb
push
push
gs
pop
xchg
xor
mov
sbb
out
xchg
outsl
lds
cmpsb
pusha
sbb
mov
ret
xchg
jae
dec
jae
and
push
and
imul
jecxz
neg
js
or
jne
scas
and
orb
leave
subb
adc
cmp
push
pop
xchg
mov
mov
aas
lock
push
sbb
add
mov
mov
inc
add
rorl
cmp
nop
mov
repnz
and
addr16
sub
sub
int3
add
xor
push
mov
in
xchg
rol
stos
inc
cld
inc
repz
pop
add
fwait
jne
mov
arpl
mov
fildll
cs
xor
mov
test
in
sub
xchg
add
aam
aaa
insb
fnstenv
sub
in
test
loop
sbb
mov
inc
invd
jne
in
in
gs
xchg
mov
jecxz
jmp
ret
jecxz
mov
or
inc
mov
leave
sbb
dec
xor
shl
out
rolb
adc
pop
rcr
push
pop
mov
test
xchg
xchg
std
aas
dec
ret
sub
push
add
scas
inc
mov
daa
hlt
pop
ret
test
jl
in
sub
sub
mov
mov
fdivs
hlt
clc
dec
negl
or
sbb
push
and
call
fcmovne
jecxz
jno
push
jge
push
adc
pop
push
cld
pop
into
mov
frstor
idivl
pop
xchg
fwait
gs
cmp
lds
xor
inc
mov
sub
add
pop
cld
mov
ret
out
dec
jmp
inc
xchg
push
mov
sahf
add
dec
xchg
negb
int
mov
shll
jno
push
jbe
fcomps
ds
sub
loopne
fistpll
jge
sub
inc
xchg
pop
dec
out
adc
addl
cmc
mov
in
test
orl
imul
or
in
xor
xchg
aad
in
mov
dec
sbb
outsl
mov
imul
mov
push
and
inc
sahf
mov
or
mull
das
and
pop
xchg
stos
imul
jle
cmpsl
mov
rolb
ror
inc
cli
cmpsb
xchg
movsl
push
mov
insl
pop
push
roll
cmpsb
es
xor
adc
shrb
clc
inc
scas
lcall
cwtl
roll
aas
inc
jne
dec
fs
xor
mov
mov
mov
mov
sub
dec
scas
mov
push
mov
xchg
xchg
test
ficoml
adc
jl
gs
aaa
fstl
push
fnsave
hlt
adc
xor
xor
lods
xor
imul
and
icebp
mov
test
jl
adc
jne
push
mov
mov
mov
popf
aad
xchg
lods
sbb
imull
cmpsb
mov
inc
mov
jbe
ds
sarb
outsl
stos
mov
and
sbb
push
jne
add
push
stos
xchg
in
in
cmpsb
pushf
mov
mov
test
push
xchg
dec
pop
pop
cwtd
push
in
dec
dec
jl
test
jb
lret
xor
inc
das
xchg
xchg
dec
adc
mov
aam
mov
icebp
and
mov
and
push
push
std
popf
jns
add
and
add
inc
cmc
mov
sbb
inc
das
out
test
pop
mov
dec
inc
cwtl
push
xor
addl
xchg
pop
ret
xchg
or
shlw
inc
cwtl
movsl
inc
fs
xor
repz
cld
jae
hlt
xor
jo
mov
pop
sarl
lret
or
in
aad
jae
push
adc
fisttpll
jl
stc
roll
dec
mov
jg
xor
icebp
xchg
fsubr
scas
ss
lods
cmp
loope
cmp
in
pop
jno
repz
jge
xor
adc
adc
sti
into
pop
aaa
xor
scas
jno
lret
ja
inc
mov
jnp
inc
jmp
call
cmp
out
cmovae
in
aas
cmc
and
scas
lret
loopne
lock
aad
and
jmp
and
mov
negb
or
in
sub
int
test
iret
pop
jnp
notb
and
movsl
sbb
jl
ljmp
sub
push
push
fcoms
xchg
insl
and
cmpsb
lods
inc
add
imul
inc
pop
sbb
xchg
ret
or
adc
sahf
push
and
dec
push
movsb
jno
mov
sub
clc
jae
jns
dec
repnz
sbb
push
and
and
cmc
int
in
adc
xor
data16
js
in
dec
loopne
cli
scas
xchg
or
mov
add
loopne
jae
outsl
sbb
popf
push
sbb
sahf
lods
pop
cmc
xchg
pop
xor
iret
orb
mov
stc
sarl
mov
lds
cmpsl
push
sub
lock
jg
loope
movsl
jmp
lock
sbb
cli
mov
bound
cmpsb
jp
mov
xor
xchg
push
lock
inc
jns
repnz
imul
cwtl
scas
mov
cmp
lret
push
add
sbb
cltd
jp
dec
mov
aad
mov
xchg
add
sbb
iret
xor
fcmove
les
cmp
push
xchg
push
iret
jle
shlb
test
xor
and
jno
dec
mov
and
jnp
mov
inc
cmp
jmp
mov
leave
repnz
adc
inc
pop
pop
and
push
pop
fdivrs
sbb
ret
imull
jl
dec
mov
fsubl
dec
pop
xorb
xchg
lea
cltd
and
pop
push
leave
xchg
or
sbb
loope
js
jmp
mov
ret
test
sub
ja
lods
repz
lods
sub
lret
cwtl
sub
sarb
and
ret
into
insb
fsubrl
add
lock
pop
pop
aas
add
adc
shlb
emms
mov
stos
mov
cli
push
ret
xchg
aad
stos
dec
xor
mov
mov
xor
jae
xchg
fisubrs
or
and
pop
clc
mov
inc
out
mov
pop
push
lahf
mov
jae
movsb
xchg
inc
test
inc
daa
push
or
mov
sbb
mov
lcall
test
pop
jnp
faddl
xchg
pop
cmp
repnz
xchg
mull
stos
ficomps
xchg
out
out
or
cmpl
mov
repz
ja
xchg
sub
pop
rorb
subl
add
pop
xor
cmp
xor
jb
or
mov
sbb
stc
and
icebp
mov
jp
and
jmp
sbb
and
push
cmp
dec
sub
in
mov
in
loopne
jp
std
fsubrs
pop
jbe
out
lock
add
sti
mov
or
push
mov
fdiv
xor
xor
sbb
and
ret
cld
mov
cmp
scas
sti
push
push
shrb
add
jbe
push
in
mov
adc
mov
and
ret
cmp
jmp
adc
in
add
push
xor
cmpsl
cmpsl
mov
push
add
clc
shr
aam
push
cs
pop
push
gs
and
push
pop
mov
mov
in
mov
aad
adc
lock
mov
std
cmp
inc
xorl
cli
mov
mov
fidivs
pusha
addr16
push
imul
xchg
sti
inc
hlt
mov
sbb
testb
dec
jae
pop
add
imul
ljmp
xchg
loop
aaa
sti
pushf
pop
xor
mov
mov
and
scas
pusha
mov
inc
cmc
movsb
or
pushf
mov
mov
jo
add
into
jle
jae
sarl
add
mov
xchg
xor
xchg
inc
jg
pop
scas
movsl
pop
test
jmp
mov
inc
iret
mov
aad
mov
loopne
outsb
icebp
push
or
les
rcll
push
sbb
icebp
sbb
sbbb
dec
mov
mov
inc
jb
iret
orl
jmp
mov
xor
push
js
les
jecxz,pn
ret
daa
jo
and
mov
stos
cmpsb
pop
imul
add
push
adc
inc
mov
add
out
das
cmpsl
sarl
shlb
cmc
pop
cmp
push
lahf
xor
cmp
fwait
xor
and
inc
ss
sub
push
push
fsubr
lds
xchg
sahf
ja
out
imul
push
fdivrl
or
cld
add
lods
pop
mov
cmp
mov
inc
xor
mov
jecxz
outsl
xchg
dec
xchg
fistps
sti
mov
ret
loopne
mov
jp
push
repz
mov
cltd
mov
popa
xor
popa
cltd
xchg
fstpt
ficompl
sbb
insl
int3
inc
call
int
adc
in
je
jg
jge
or
leave
cli
fsubl
add
mov
arpl
dec
cmp
xlat
addr16
sub
mov
jg
pop
ret
push
push
sbb
jl
inc
inc
lcall
xchg
xchg
add
dec
sahf
ret
outsl
or
jl
push
mov
pop
push
cmp
jae
xchg
movsb
in
or
outsl
dec
sbb
test
mov
mov
inc
lret
xchg
push
out
stos
cwtl
mov
pop
lock
lock
xor
mov
adc
pop
mov
ja
sbb
call
ret
fwait
or
jle
adc
pop
shlb
inc
or
xchg
mov
sub
mov
clc
xchg
int3
cmpsb
dec
lret
push
xchg
adc
loope
xchg
jp
inc
jecxz
lret
push
or
push
lcall
repz
xchg
rcll
pop
inc
jge
push
push
sti
sbb
in
mov
lods
add
mov
xor
hlt
sub
xchg
pop
pop
add
mov
mov
xor
inc
mov
inc
popa
outsl
in
xor
jae
lods
cmp
cmp
pop
sub
mov
imul
sbb
repz
popa
adc
stc
cmpsl
lret
fldcw
adc
mov
sub
sti
ds
in
ret
mov
mov
hlt
mov
test
lods
dec
or
mov
sub
push
cmp
add
movd
dec
int3
fucomi
xor
push
cmp
rorb
stc
pop
in
mov
adcl
sub
addr16
fcmovne
mov
pop
add
ja
pop
repz
ror
out
jns
stos
push
incb
ss
inc
mov
dec
clc
xor
shrl
sub
cmc
aas
ret
pop
in
xchg
xor
mov
aas
and
add
fwait
jbe
or
loop
or
mov
pop
xchg
mov
push
sub
push
int
cli
pop
inc
pop
jle
pop
jmp
fwait
sbb
push
cmp
enter
cmp
shlb
pop
js
mov
adc
push
jae
push
or
loopne
push
or
xchg
mov
inc
mov
mov
pop
pop
inc
loopne
add
push
icebp
clc
inc
add
in
lcall
daa
sarl
insl
sahf
pop
out
imull
mov
or
aad
sbb
lods
sub
int
push
cmp
fsts
dec
pop
add
adc
loop
mov
inc
push
ss
outsb
mov
hlt
orl
sbb
push
jbe
pop
in
mov
sbb
cmp
lods
out
orl
sahf
in
mov
shlb
test
stos
mov
xchg
xchg
xor
push
fwait
imul
insb
mov
data16
in
sahf
mov
lahf
dec
mov
pop
daa
je
mov
add
push
pop
inc
mov
test
out
sub
pop
addr16
icebp
cs
pop
int
or
sub
pushf
sub
repz
cli
sub
scas
insl
adc
mulb
cwtl
loope,pt
lods
mul
cld
neg
mov
jb
bnd
aad
test
cmp
cltd
mov
ret
rcr
sbb
fcoms
dec
rorb
push
les
lods
fcmovu
sub
xchg
stos
ja
and
push
out
in
sbb
push
xor
push
and
jp
aad
sub
in
cmpsb
pop
and
movsl
sahf
cmp
dec
int3
cmc
xor
mov
sub
or
out
mov
adc
pop
mov
jae
aam
std
stc
pusha
call
jb
subb
into
jmp
sub
or
add
or
push
jno
leave
dec
fildll
cmp
sahf
ds
push
mov
testl
nop
subl
and
es
xchg
fwait
xchg
outsl
pop
aad
inc
sub
inc
and
mov
pop
in
xor
pop
pop
mov
and
xor
rcrl
mov
mov
lcall
push
int
mov
mov
jp
loope
dec
out
xor
push
jmp
jp
sti
outsl
or
or
repnz
cmpsb
sbb
dec
and
sub
jbe
cmpsb
adc
sbb
out
ljmp
loope
xor
mov
pop
push
aad
movsl
pushf
xchg
stos
push
xor
adc
sub
mov
inc
xor
mov
inc
push
scas
loope
test
dec
adc
xchg
lock
stc
cmp
cmpsl
insb
ss
mov
sarl
ds
adc
mov
and
push
mov
mov
int3
ds
sbb
dec
add
cmc
imul
and
hlt
fnstsw
mov
repz
pop
pop
sbb
sbb
or
dec
dec
jns
or
sahf
negl
loop
cld
cltd
lods
dec
sbb
roll
pop
outsl
stos
add
push
repz
cmp
adc
sub
dec
jle
adc
fnstenv
jl
mov
lcall
xchg
dec
pop
into
push
and
int3
mov
or
loop
dec
pusha
push
jns
pop
insb
adcl
repz
push
or
sbb
pop
xchg
mov
cmpsl
lahf
cs
clc
popf
adc
adc
jmp
mov
fs
lahf
loop
mov
or
pop
test
dec
xchg
dec
sub
mov
pop
jmp
cmp
cmp
fildl
sub
jmp
mov
mov
inc
dec
jae
dec
mov
dec
xor
sahf
lcall
xchg
addr16
dec
xchg
lods
push
push
xchg
jb
dec
lahf
pop
pop
lahf
jb
rclb
lcall
dec
les
pop
mov
loop
pop
dec
add
cmp
fildl
sub
ret
movsb
cmp
mov
fcmovbe
mov
addr16
cld
das
sbb
addr16
mov
in
loopne
adc
xor
jle
xor
popf
pop
xchg
add
loopne
push
mov
xor
push
rcl
cs
or
lret
into
jp
jbe
add
fldt
dec
add
scas
in
idivl
into
mov
pop
push
mov
xor
cli
adc
ljmp
mulb
movsl
fwait
mov
sbb
push
jne
clc
shrl
xor
jns
inc
popf
je
roll
es
popf
pop
xor
sbb
imul
dec
pop
mov
sub
and
lods
sarl
lock
loopne
adc
pushf
sub
aaa
pop
sub
dec
arpl
mov
mov
add
lock
insl
xchg
leave
iret
add
into
aaa
jnp
imul
jecxz
push
mov
aam
daa
outsl
out
mov
insl
xor
xor
dec
pop
cwtl
popa
test
insb
in
mov
bound
cmpsl
sub
lahf
enter
sahf
loop
cli
sub
jle
aam
sbb
xor
push
jl
adc
shlb
stc
frstor
dec
test
gs
push
xchg
mov
popf
imul
mov
or
xchg
mov
pop
andl
push
movsb
insb
sbb
nop
push
sbbl
cmp
loope
int
mov
jmp
add
std
cmpsl
mov
mov
addl
aad
cmp
fstpl
pop
data16
jmp
dec
push
pop
jb
or
sbb
popf
popf
movsb
pop
xlat
inc
mov
and
les
xorb
je
lret
mov
scas
mov
lds
pop
movsl
into
cmpsb
cmp
in
inc
xor
mov
les
mov
mov
mov
bound
mov
dec
and
dec
push
inc
loope
in
ss
in
inc
cld
aaa
push
pop
negl
jmp
sub
xchg
pop
adc
pop
xor
cmp
dec
movsl
xor
pop
cmp
xchg
in
sbb
lahf
andb
push
das
inc
xor
out
cmpsb
and
inc
pop
and
idiv
ret
test
lea
fidivrs
fmul
jecxz
jo
and
call
sbb
push
movsb
repnz
loope
ret
outsl
xchg
fsubrl
lret
loop
adc
in
stos
movsl
xorl
negl
inc
int3
sub
icebp
ljmp
icebp
lcall
adc
fisttpl
test
rolb
mov
shll
outsl
lret
push
jns
jo
xchg
lds
iret
mov
sqrtps
sbb
push
pop
stos
or
mov
sub
mov
es
cmp
aam
xor
sub
loopne
pop
sub
xchg
xor
jne
call
cmp
lret
mov
and
xchg
rorb
out
sub
call
inc
outsb
subb
mov
inc
pop
lods
add
test
cmp
push
sbb
into
fisubl
inc
repz
adc
cwtl
cs
mov
stos
push
pop
shlb
pop
mov
and
sub
or
pop
nop
cmpb
cli
mov
clc
adc
jg
sub
push
jbe
xchg
jmp
jb
cmpsl
scas
push
fdivp
out
lods
arpl
fidivrs
jp
fstl
je
pushf
fxch
xchg
mov
into
mov
aaa
add
pop
xchg
xor
test
push
sarl
into
push
push
inc
and
mov
js
shr
dec
aaa
fisttpll
xchg
test
shlb
rcr
push
push
or
sub
add
push
std
lea
jnp
sub
int
or
fadds
add
enter
pop
mov
orl
in
jl
pop
fstpl
neg
in
sahf
xchg
ljmp
push
mov
loopne
movsl
cmp
push
in
xchg
push
ja
push
shl
jle
orl
mov
fcoms
aaa
xor
mov
in
in
movsb
adc
lahf
mov
cmp
mov
push
or
push
adc
cwtl
lds
cmp
insl
inc
bound
push
jnp
rcl
add
in
xor
ficomps
cmp
sbb
adc
xchg
inc
je
and
lcall
sub
dec
stos
sbb
testl
push
inc
divb
or
xor
jne
lret
fdivrs
cmp
aaa
xlat
jae
jl
sub
jae
push
xchg
sub
mov
cmpsb
out
inc
popf
mov
inc
jnp
dec
insb
sar
adc
cmpb
sbb
ja
test
loope
push
notb
mov
movsl
cmp
and
sub
add
sbb
adc
es
in
leave
jmp
and
out
jmp
adcb
ljmp
pop
stos
lahf
rcrl
push
xchg
test
call
cmp
cmp
test
mov
notl
jecxz
cltd
dec
fiaddl
incb
mov
lea
cld
lret
xchg
xor
jge
shrl
js
jle
mov
sbb
cwtl
xchg
rcrl
jno
dec
fwait
sub
cmp
jp
int3
push
movsb
call
xlat
mov
test
imul
dec
xchg
mov
xchg
movb
ret
fsubs
cmp
cmc
cld
push
pop
xor
sahf
nop
mov
daa
pop
push
insb
pop
loopne
sbb
insb
es
mov
mov
adc
jnp
push
fcoms
xor
int3
mov
sti
jae
shlb
sbb
stos
or
jo
lds
repz
mov
fldenv
pop
cmp
fcompl
outsl
jne
cld
xlat
sti
dec
add
sbb
add
stos
cltd
sbb
push
adc
xchg
sbb
mov
sub
das
jp
in
pop
js
mov
incl
insl
mov
rcr
in
jae
jp
sbb
push
xor
sub
push
push
fs
daa
and
mov
add
dec
xchg
jne
add
cs
inc
add
out
imul
xor
pop
mov
int
imul
pop
sub
inc
mov
sub
mov
imul
pop
jnp
je
dec
test
stc
ja
pop
xor
ja
or
cmc
aam
outsb
lea
mov
fadds
inc
jo
lret
daa
push
shlb
aam
mov
js
lahf
mov
jno
adc
pushl
push
lods
loopne
daa
xchg
lahf
mov
stc
sub
ret
mov
into
lds
mov
pop
test
cmpsl
push
pusha
jb
add
and
aam
ret
pushl
or
lcall
push
mov
jb
jmp
in
ja
loope
int
fmulp
sub
sub
dec
jae
aaa
cmp
xchg
pop
mov
jl
cltd
pop
dec
fdivr
jno
jmp
repnz
push
sub
mov
shr
pop
xchg
aam
and
mov
push
push
enter
mov
mov
or
or
fsubrp
fs
add
jecxz
js
gs
mov
adc
cltd
ds
in
mov
cwtl
call
dec
daa
inc
mov
dec
into
xchg
in
xchg
hlt
inc
mov
rcrb
mov
int3
xor
sub
mov
pop
data16
sbbb
ja
or
fisttpl
dec
subb
test
cwtl
jle
ja
xchg
add
add
lret
cmc
pop
push
or
mov
pop
imul
inc
bound
ret
notb
jns
jnp
inc
sub
lret
and
add
int3
adc
mov
sarb
cmp
jecxz
lret
mov
leave
lds
stos
push
sar
ret
shlb
and
add
jecxz
mov
pop
fdivrs
or
das
adc
cmpsl
jno
push
xor
add
data16
lahf
out
push
ljmp
stc
call
iret
daa
sbb
lret
in
outsl
cmpb
scas
int3
push
push
rcll
pop
loop
fimuls
mov
js
lea
adc
inc
xchg
std
mov
sar
xor
loopne
lods
adc
int3
xor
push
jns
xlat
mov
or
xchg
outsl
lods
or
mov
push
loopne
in
xchg
xor
adc
jbe
and
pop
xchg
orb
fwait
ja
jmp
in
pop
fdivrl
in
and
stos
imul
adc
mov
cmpsl
cli
stc
pop
lods
jbe
lods
push
jbe
mov
sub
sahf
mov
push
fnstsw
dec
ja
popf
cmpsb
sbb
or
cltd
add
cmp
or
mov
scas
sarb
enter
mov
movsb
rcll
adc
push
lahf
mov
mov
test
or
sarl
xor
sub
ficoms
popf
and
iret
mov
test
lret
xchg
dec
dec
xor
sahf
arpl
sub
add
loope
outsb
out
mov
or
shll
testb
inc
lahf
aad
lret
dec
dec
inc
cmp
adc
or
sbbl
xlat
scas
push
push
pop
fs
pop
enter
adcl
sub
pop
xchg
subb
or
xor
sti
js
dec
pusha
popa
mov
and
inc
out
mov
fld
popf
movsb
lock
add
jge
sar
sbb
or
inc
sbb
mov
add
fwait
dec
fistpl
push
rep
shll
je
fdecstp
cmp
dec
fisubrs
xchg
cmpsb
xchg
or
test
xchg
jo
cmpsl
xorl
iret
sub
push
fcmovu
repz
pusha
jae
mov
adc
ds
inc
lods
cwtl
push
andl
scas
sub
xor
insb
sahf
data16
fldenv
jnp
jae
push
adc
dec
sbb
lock
dec
mov
in
das
mov
adc
dec
mov
dec
push
int
adc
push
outsb
xlat
jo
jg
push
shlb
bound
frstor
push
mov
movsb
enter
rcrb
push
inc
divl
shrl
dec
ljmp
cs
popf
lcall
cmpsl
lods
imul
cli
fildl
lahf
nop
pop
aad
int
push
les
cmc
stos
sbb
mov
loopne
cmpsb
cmpsl
jle
adc
adc
and
and
inc
mov
xchg
fwait
add
mov
jge
push
pop
push
test
cmp
pushf
cld
jecxz
adc
cmc
in
pop
cmc
fbstp
pop
dec
out
dec
int3
adc
push
das
addr16
xchg
jo
push
sbb
sbb
negl
mov
ljmp
pop
dec
int3
jle
lods
mov
jo
cld
mov
xchg
mov
fsubrp
push
and
orb
insl
cmp
mov
mov
cmp
push
mov
sahf
sbb
push
and
pop
enter
cltd
lret
lcall
xchg
dec
lret
push
cltd
gs
sbb
jmp
inc
mov
outsl
xchg
pop
xchg
outsb
push
inc
movsl
je
into
adc
dec
mov
mov
shll
cmp
sti
sub
dec
xchg
aaa
xor
scas
and
aaa
pop
inc
pop
nop
push
pop
mov
aas
outsl
das
test
fsub
xor
fucomip
xor
sbb
mov
fists
sar
sti
push
jge
jnp
loopne
jecxz
jae
je
inc
sub
imull
std
sub
pop
lods
cmp
fstl
cmp
insb
mov
jge
dec
jbe
xchg
test
mov
mov
fisubs
cmc
outsl
and
xor
pop
movsl
mov
lods
js
cli
jnp
enter
int3
push
repz
in
js
lret
psadbw
rorl
fbld
jnp
in
mov
mov
popa
out
gs
ret
scas
std
adc
int
loope
mov
mov
inc
sub
cs
std
scas
add
imul
aaa
add
je
mov
cs
adc
movsl
scas
push
inc
jne
inc
mov
sub
or
fisttpl
or
jle
pop
mov
mov
xchg
iret
adc
jmp
je
or
pop
push
mov
lret
mov
loop
fdiv
mov
mov
jns
out
or
jo
stc
mov
inc
adcl
ret
scas
pop
stos
cmp
pop
aas
xor
roll
lahf
imul
or
inc
push
leave
rcl
add
mov
jb
stos
mov
loop
pushl
and
cmpsl
push
pusha
pop
xchg
push
dec
fimuls
add
or
sub
inc
mov
dec
js
xchg
dec
rol
leave
lea
add
call
cmpsb
sub
repz
push
out
adc
mov
pop
jp
push
loop
jle
scas
fucomip
jno
mov
int
fidivrs
mov
call
push
rcrb
outsb
leave
call
jle
sub
xchg
mov
jl
pop
repz
ud0
mov
mov
lock
mov
add
in
rcll
out
jmp
insb
fwait
xchg
in
aam
inc
clc
fnstsw
fsubrl
push
call
lret
lock
or
mov
cmp
pop
ret
cmp
push
lds
mov
notl
inc
shlb
xor
xchg
or
adc
adc
cmp
bound
movsb
xor
push
pop
lea
mov
cmp
mov
mov
and
out
out
ret
mov
arpl
sahf
pop
push
dec
xchg
lods
imul
jne
cmp
aaa
ret
lods
jns
mov
test
lret
mov
ret
lock
mov
push
mov
add
daa
pop
lods
inc
adc
rolb
mov
out
repz
xor
xor
mov
repz
test
scas
and
xchg
xor
in
jo
mov
loope
pop
and
out
mov
fimull
std
lods
mov
or
stc
mov
test
jle
cmpsl
sub
pop
sbb
std
jge
sbb
pop
xlat
test
rcrb
imulb
push
jle
mov
jne
jo
sub
and
or
ja
stc
outsl
es
sub
cmpsb
mov
and
push
sub
jcxz
imul
repnz
enter
or
pop
fs
out
lds
jp
xlat
pop
pop
cs
cmp
ja
divl
jp
fldenv
mov
cmp
fsubp
lea
cmpsb
outsb
ret
inc
sbb
aam
cmc
int3
stos
and
xchg
xor
popa
enter
jo
xchg
add
arpl
faddl
mov
imul
sbb
jecxz
push
imul
sub
aas
cld
push
add
shl
push
sahf
add
mov
out
enter
sub
and
xchg
movsb
xchg
std
daa
dec
mov
dec
jo
mov
mov
pop
cmpsb
and
or
xchg
std
sarb
sub
mov
or
and
sub
add
inc
sbb
pop
jge
xchg
stc
pop
and
call
lock
dec
loop
inc
cmpsb
std
movsl
jno
test
fimull
imul
jle
daa
mov
shll
jge
cmp
push
xchg
xchg
jb
mov
xchg
inc
aas
cmp
int3
mov
lods
cmp
aas
ss
lret
lahf
and
aad
or
lret
xor
rcr
ds
sbb
loopne
xchg
cmp
sti
in
pop
daa
and
dec
add
lret
cltd
movsb
adc
mov
in
ljmp
movsb
ljmp
cwtl
int3
arpl
lret
add
shrb
cli
cmpsl
out
jmp
cltd
adc
jl
data16
mov
bound
mov
jno
add
test
das
rcll
xor
push
mov
mov
and
lcall
into
lock
fisttpl
shll
dec
in
jecxz
insl
call
addr16
bound
stc
pop
push
es
push
mov
xor
push
cmpsl
out
mov
hlt
or
jb
lea
mov
arpl
pop
data16
xchg
jp
xor
adc
lret
push
mov
push
pop
dec
int3
or
pusha
gs
and
mov
sub
xor
movsl
pop
pop
int3
sub
adc
adc
sbb
xchg
stos
ror
add
push
sbb
sahf
loope
jno
in
mov
pop
add
into
movsl
cltd
test
imul
fwait
xchg
adc
test
lret
pop
rcrl
mov
lods
xchg
cltd
cmp
dec
fdivrs
xor
dec
mov
aaa
loope
jnp
cmp
jp
int
out
bound
filds
mov
out
jnp
sub
lods
mov
inc
fstps
or
mul
rcr
mov
mov
xor
jg
fwait
test
lcall
aas
dec
mull
cmpsl
mov
cmpsl
or
test
stos
cmp
or
pop
loop
push
inc
xchg
mov
loopne
xor
mov
xor
ficoml
ljmp
xlat
lods
cmpb
pop
sub
rolb
push
pusha
xlat
or
bound
xchg
add
hlt
mul
xchg
jecxz
scas
and
sbb
sbb
push
outsl
fildll
aad
test
mov
sub
fnstcw
inc
mov
add
jnp
iret
dec
inc
cmc
outsl
ficoms
adc
and
xchg
je
add
and
cmpsb
xchg
loop
sbb
jmp
pop
mov
sub
xchg
sbbb
or
cli
mov
bnd
pop
mov
xor
iret
int3
push
pop
stos
iret
add
add
cmpl
test
xchg
pop
test
xor
insl
test
dec
pop
iret
push
or
sub
lcall
push
dec
cmp
jb
push
mov
sbb
mov
test
sti
lret
xor
jg
js
cli
inc
pop
lods
xchg
mov
rep
inc
cmpsl
sbb
inc
cmpsb
ficompl
mov
mov
xor
push
icebp
pop
push
cs
insb
loope
dec
sub
xor
daa
mov
jg
sbb
shlb
dec
leave
xchg
les
outsl
imul
adc
inc
jno
sub
test
or
lcall
scas
xor
aam
scas
cmp
mov
or
cmp
and
sub
repz
pusha
lods
mov
imull
push
add
rcrl
in
mov
shll
dec
adc
push
les
fisttpll
cmp
jmp
lods
aam
push
push
jle
pusha
lahf
pop
sbb
jl
jae
in
xchg
rol
test
gs
lahf
je
or
outsb
cmp
test
sub
popf
in
fstpt
push
xor
cmp
ss
mov
hlt
push
lahf
pop
add
lds
pop
loope
push
stc
int3
icebp
movsl
cltd
fwait
pop
inc
imul
mov
jecxz
mov
jo
inc
hlt
inc
xchg
and
sbb
pop
shll
stos
or
in
mov
in
xchg
adc
mov
icebp
adc
adcb
mov
dec
inc
lock
sbb
rolb
test
insb
xchg
loop
or
es
jg
or
lea
lahf
and
push
outsl
ds
pop
lods
inc
mov
shlb
andl
inc
fildl
cmp
clc
sahf
and
mov
dec
test
jl
jl
pop
mov
add
mov
jmp
mov
xchg
fcomip
std
jae
sbb
adc
and
dec
inc
out
lret
and
test
jmp
pop
push
or
and
mov
dec
cmp
movsl
test
and
nop
fsubl
sar
sub
push
dec
jbe
xchg
jl
out
inc
das
xchg
inc
mov
push
ja
repnz
inc
xor
jnp
mov
stos
push
push
cmc
stos
push
enter
xorl
and
sub
jns
mov
fwait
xchg
mov
xor
mov
mov
into
jne
std
gs
and
outsl
add
imul
xor
lahf
mov
mov
dec
fsubs
mov
std
call
ss
mov
or
mov
pop
popf
xchg
jle
addr16
push
jmp
cltd
jp
jns
hlt
dec
xor
xlat
adc
pop
add
sahf
xchg
arpl
hlt
push
sub
jo
push
rcrb
and
mov
xchg
cmp
arpl
pop
push
jns
pop
ficompl
mov
hlt
fidivrs
pop
imul
xchg
mov
aam
push
leave
adc
inc
push
xor
outsb
pop
daa
push
icebp
pop
and
jl
mov
hlt
fidivl
pushf
and
push
pop
lret
lods
bound
outsl
insb
std
insl
out
add
leave
push
push
arpl
push
popa
loope
push
xchg
rclb
pop
das
inc
cmp
sub
mov
ds
push
jae
xchg
xor
dec
mov
add
daa
cmp
xchg
imul
leave
es
sub
jns
test
jle
pop
stos
adc
cvtps2pd
fsubrs
inc
bound
sbb
xchg
rcl
aad
xchg
inc
push
insl
int3
xchg
filds
addb
mov
dec
sub
pop
adc
mov
setl
xor
clc
push
xchg
hlt
sarl
pop
stos
movsb
dec
mov
movsb
pop
sub
dec
fwait
mov
dec
cld
or
ficoml
popf
pop
pusha
jno
shll
mov
gs
mov
stos
mov
mov
mov
div
push
sbb
mov
jb
xchg
pop
js
adc
fwait
pop
push
hlt
fidivrl
cmp
in
mov
test
mull
test
sub
push
jnp
std
dec
mov
xchg
negl
jp
jae
push
insb
mov
pusha
xor
and
nop
inc
jo
mov
leave
pop
adc
mov
mov
nop
gs
add
fwait
daa
incl
ds
xchg
mov
cmpl
mov
xor
jnp
fisttpll
mov
pop
insl
rcl
pop
sbb
pushf
call
push
sahf
or
xlat
pmulhuw
jnp
rcrb
add
xchg
lahf
mov
shll
stc
test
loope
insb
rorl
shrb
ret
iret
outsl
adc
out
add
add
lahf
loopne
push
scas
add
leave
ret
loop
sbb
adcb
test
out
mov
sub
sbb
push
sub
aas
xchg
lock
je
icebp
add
iret
and
push
fcmovnbe
imul
sbb
xchg
aad
inc
pop
xchg
mov
repz
mov
sbb
arpl
adc
sub
nop
negb
mov
test
jne
pop
mov
rorb
pop
push
or
das
pop
jp
fidivl
sti
jo
jmp
mov
lretw
sub
sbb
mov
xor
xor
in
xchg
dec
inc
jg
dec
and
test
inc
jo
lret
adc
mov
fwait
mov
and
add
pop
push
and
and
iret
test
je
pop
jg
pop
test
jbe
les
adc
daa
pop
sti
dec
jp
fdivl
mov
and
mov
popf
mov
xor
pop
ja,pn
lods
aad
sub
inc
mov
jle
mov
jns
mov
lds
or
push
rcll
insl
loope
cltd
fnsave
cmp
or
mov
jae
xor
push
jne
shll
xor
push
jmp
popa
push
pushf
dec
imul
jg
adc
pusha
jns
jl
xlat
mov
dec
pop
sub
fst
push
xor
fsubrp
rcrb
insb
push
sub
call
arpl
pop
add
push
dec
jnp
pop
sub
jecxz
jecxz
sub
xor
jecxz
push
dec
fldcw
scas
pop
repz
inc
dec
scas
mov
or
xor
lret
lods
or
jae,pt
jecxz
fwait
pop
cmc
push
cmc
pop
inc
das
or
test
push
xchg
addl
dec
xchg
lds
pop
cs
and
xor
stc
sub
adc
js
jo
push
push
jnp
rcll
jns
rcrb
insb
adc
out
dec
int3
push
jnp
movsb
iret
push
insl
cmp
pop
into
inc
pop
mov
pop
cltd
ret
shl
ret
push
aad
mov
mov
xchg
sub
mov
lret
clc
push
ds
rcrl
in
jecxz,pn
sar
sbb
pushf
dec
xor
mov
pop
add
test
enter
dec
sub
or
das
pop
movsl
and
lock
xor
or
lcall
in
xor
jmp
jmp
pushf
adc
dec
cld
adc
pop
das
mov
stc
xchg
pop
mov
pusha
test
adc
xor
std
mov
orl
cmp
mov
js
lahf
sbb
pop
shll
sub
inc
cmp
xor
cmpb
je
dec
add
mov
push
je
mov
stc
xlat
lret
fbld
dec
dec
add
mov
xchg
das
pcmpgtw
mov
cmp
imull
xchg
pushf
aaa
jo
cs
add
mov
fsubl
push
push
shr
pusha
or
mov
push
nop
movsb
inc
adc
scas
pop
pop
cmp
hlt
xchg
incl
xchg
sub
rclb
outsb
mov
sbb
or
jae
out
mov
clc
bound
inc
cmpsb
clc
orb
nop
xchg
jae
xchg
pop
add
in
data16
pop
ds
rorb
dec
jbe
mov
pop
add
jo
lret
movsl
mov
push
lods
sub
shld
pop
stos
pop
nop
pop
aam
xchg
xchg
mov
mov
pop
xor
pop
or
rorb
mov
pop
inc
mov
push
push
push
jb
mov
repz
jne
mov
fsubrs
imul
push
push
xor
lcall
std
cmpsl
mov
pushf
mov
push
mov
mov
shrl
jp
pop
cmp
rorb
daa
add
test
stos
push
xchg
jge
adc
shl
gs
ja
insl
je
das
cmp
mov
sub
int
test
mov
enter
shrb
lcall
or
or
outsl
jp
mov
loopne
cmp
imul
shrl
sti
or
push
shrb
jmp
sbb
icebp
jb
cwtl
out
adc
rorb
leave
in
add
lret
pop
sbb
fldcw
shlb
jns
inc
inc
pushf
cmp
push
out
push
adc
andl
push
fwait
mov
jp
test
xor
imull
mov
jl
pop
popf
js
das
imul
mov
sub
mov
cmp
push
lret
or
loopne
mov
mov
adc
popf
pop
inc
scas
movl
mov
pop
cmp
sub
imul
movsl
adc
fists
mov
stc
inc
jbe
sbb
stos
dec
or
pusha
bnd
cmpsl
data16
dec
inc
mov
pop
fidivrs
mov
mov
cmpl
jmp
jmp
in
mov
mov
icebp
call
aam
cmpsb
loop
mov
mov
mov
int3
and
ror
loopne
in
sbb
adc
ficomps
add
xchg
pop
insl
mov
jp
fidivrl
popa
cld
hlt
clc
or
mov
dec
aas
adc
ljmpw
inc
stc
sbb
mov
orl
cli
data16
shr
or
push
cmc
mov
cwtl
insb
or
cmpl
jae
mov
xchg
lea
jg
jle
shl
scas
mov
xchg
mov
adc
fmulp
pop
xor
sbb
fists
push
adc
mov
lods
outsl
xchg
jl
stc
mov
pop
mov
and
ss
xchg
lods
push
enter
int3
add
and
test
into
iret
nop
jg
and
mov
mov
fcoml
in
lock
mov
jns
mov
inc
sub
icebp
sub
in
add
adc
and
sti
dec
addl
push
lret
repnz
out
bound
repz
inc
cmpb
fidivl
dec
adc
cmp
sbb
dec
mov
xchg
scas
lcall
arpl
xchg
xor
test
cmpsb
add
nop
leave
cmp
pop
push
ljmp
adc
jns
mov
or
sbb
repnz
repz
adc
push
and
out
push
xor
and
cmp
pop
loope
inc
mov
scas
test
into
mov
cmp
out
cli
out
jbe
and
and
jp
fsubrs
push
fadd
in
mov
cmp
push
pop
gs
sti
and
lret
out
sub
popf
push
xchg
lock
sbb
test
clc
inc
testl
jo
lods
xchg
shlb
jecxz
sbb
dec
sti
call
mov
xorb
mov
xor
mov
sub
enter
pop
aad
xchg
sbb
std
mov
movsl
stos
push
loopne
xorl
int
pop
jecxz
out
xlat
cmpb
add
dec
mov
or
cmpsl
adc
adc
mov
mov
sub
loop
mov
inc
scas
add
stc
aam
mov
addr16
lret
outsb
leave
xchg
and
das
xor
or
or
cs
sub
sbb
xor
dec
divl
mov
push
sbb
xor
add
iret
call
movsl
push
scas
ljmp
push
test
mov
jae
or
pushl
clc
sbb
les
das
mov
or
mov
inc
mov
dec
lods
dec
in
mov
outsl
mov
add
mov
mov
push
shl
xor
xchg
shrb
incl
cmp
xor
mov
jg
jae
icebp
push
fsubrs
cwtl
aaa
mov
jb
rorb
rol
jecxz
xor
jne
into
xor
lahf
inc
sub
jecxz
or
push
fwait
cmp
pop
arpl
adc
out
adc
or
inc
mov
insl
and
bnd
bound
aam
ljmp
cmpsl
or
ret
inc
cmp
sbb
pop
mov
outsb
in
xchg
mov
inc
jmp
inc
sti
lods
loopne
rclb
mov
and
pop
pusha
and
mov
scas
jle
jnp
or
sbb
mov
push
iret
dec
or
lret
in
arpl
lcall
ret
jmp
bswap
cltd
sbb
add
gs
lret
pusha
and
jg
jo
or
pusha
cmp
fisubl
xchg
jg
dec
bound
and
iret
mov
mov
xchg
fbld
push
cmp
clc
mov
outsb
ja
xor
popf
lea
or
call
testl
call
jecxz
pop
push
push
push
sti
push
out
ss
hlt
or
pop
je
xchg
popa
push
dec
jns
xchg
add
pop
leave
push
or
and
adc
cmp
mov
out
je
ljmp
imul
rcrb
fwait
lret
repz
jecxz
xor
out
xchg
mov
or
lret
sbb
iret
loopne
xchg
insl
sbb
fidivrl
pop
test
pop
insl
pop
lahf
mov
adc
jne
mov
push
outsb
adc
stos
in
mov
leave
int3
xor
test
sub
aad
sub
pop
loope
lret
dec
adc
mov
inc
mov
int
cs
aam
inc
inc
loopne
mov
or
aam
mov
mov
sub
imul
mov
sub
popf
outsl
jg
push
into
and
movsb
ret
xorl
xor
sub
inc
nop
push
jo
jae
mulb
shrl
pusha
stos
jge
cmp
mov
sbb
testl
stos
jge
dec
or
adc
push
fwait
aam
cltd
shll
jl
sub
pushl
jg
push
psubsb
or
fstpt
ljmp
scas
xor
mov
adc
lds
push
fstenv
stos
fdivs
sti
clc
xchg
or
cltd
fstpl
adc
jno
pop
jb
into
in
mov
push
sti
ss
test
mov
mov
aaa
sbb
pop
pop
xchg
mov
adc
xor
fidivrs
fidivl
push
fiadds
mov
fdivs
mov
jb
sbb
fnstenv
xchg
cmp
test
jg
lahf
add
les
mov
and
testb
mov
xor
and
lea
sub
mov
in
cmp
cmp
pop
lea
xchg
mov
cmp
in
adc
jbe
lcall
xor
dec
adc
jae
push
in
or
sbb
shl
and
cmc
jb
data16
xchg
sbb
jno
push
lahf
enter
pop
and
insl
mov
out
cmp
orl
mov
in
mov
fiadds
imul
leave
iret
int3
mov
in
jbe
outsb
jl
lret
and
repnz
test
push
mov
push
mov
push
or
fistps
int3
iret
cs
cmc
insb
sub
push
cld
add
xchg
mov
jae
mov
repz
into
or
inc
out
cmpsl
and
jne
mov
push
cltd
repz
sbb
mov
inc
xchg
cmpsb
jl
fisubrs
mov
push
cmp
lcall
mov
scas
and
sub
out
and
push
test
xor
mov
ljmp
cmpsl
aad
or
inc
movsb
cmc
orl
pusha
pop
addr16
rorb
or
stos
clc
fsubl
push
cld
mov
pushf
inc
and
mov
pop
je
aas
into
fsubrs
xchg
rcr
jl
out
test
xor
rcrb
dec
je
dec
push
pop
movsb
sbb
adc
aam
repnz
sbb
xchg
scas
mov
leave
test
negb
add
mov
aad
pop
repnz
inc
inc
pop
lret
adc
inc
pop
mov
push
push
outsb
loope
adc
add
jns
cli
sahf
push
fmull
adcb
add
inc
out
fmul
cwtl
loop
jp
mov
mov
mov
push
sahf
scas
xchg
into
into
dec
in
stos
fiaddl
push
lods
lods
or
mov
and
jle
mov
rcr
mov
into
rclb
test
call
call
mov
mov
xchg
ss
int
pop
mov
outsb
xchg
cwtl
jnp
mov
pop
pop
or
les
jge
xchg
cmp
test
test
jno
and
and
mov
jno
xor
cmp
stos
inc
fistps
hlt
mov
outsb
mov
sbb
dec
mov
scas
mov
adc
xlat
pop
ds
add
mov
mov
dec
push
mov
loopne
fstl
stos
loopne
sub
test
sbb
stos
roll
lret
jo
push
lret
mov
mov
and
dec
dec
insb
sub
pop
loop
or
pop
adc
jae
outsb
lock
xchg
aaa
add
add
or
movsb
shrb
aam
dec
jno
jae
repz
push
adc
or
inc
mov
inc
xor
inc
dec
fldt
mov
jp
outsl
add
add
inc
mov
dec
clc
mov
faddp
push
test
add
mov
jns
jg
popf
dec
mov
mov
clc
jnp
add
push
and
dec
cmp
jae
adc
xchg
adc
push
pop
add
or
mul
movsb
jl
aas
fsubp
jmp
aas
and
pop
pop
jl
jbe
sbb
repnz
scas
adc
mov
sub
cmp
jo
sbb
pop
xchg
fxch
cmpb
sbb
push
push
jae
mov
pusha
fdivrl
popl
imul
leave
loopne
rolb
add
addl
jg
std
bound
repnz
in
mov
pop
fwait
sbb
int3
rolb
jecxz
xchg
aas
cmp
movsl
add
dec
mov
dec
lea
cmpsl
cmp
pop
sub
mov
bound
cmp
jae
jno
xor
dec
add
xchg
test
lret
fimull
imul
push
ret
xchg
scas
cmp
push
out
stc
cmpsb
test
jle
fnsave
pop
mov
movsb
sbb
jb
add
fistpll
sbbl
pop
xor
cld
push
out
sti
and
fucomi
pop
int
xor
xchg
jge
or
mov
cmp
cmp
in
and
pop
adc
mov
cwtl
mov
inc
repz
imul
aad
fwait
scas
xor
ja
lods
rcl
cmpsb
in
mov
ljmp
rcr
mov
mov
mov
shl
shl
adc
sbb
fisubs
into
push
loope
dec
lea
dec
sub
push
loopne
div
and
aad
add
movl
mov
and
mov
mov
dec
imulb
sub
mov
jns
clc
pop
mov
js
repz
fs
push
rcrl
pop
test
imul
ljmp
add
adc
jnp
mov
shr
and
stos
dec
mov
popf
push
xor
int3
in
xchg
jo
inc
cmpsb
push
dec
or
xchg
push
cs
or
xor
cmp
sub
xor
cmp
pop
sub
lret
mov
inc
mov
fbld
mov
push
sbb
adc
icebp
mov
out
fimuls
addb
fldenv
pushf
xlat
cmp
cltd
fildl
test
enter
in
lods
movsb
pop
loop
push
test
aad
sahf
mov
pop
push
add
iret
adc
sbbl
xchg
jge
add
in
push
adc
fnstenv
push
je
aam
aaa
inc
lret
cmp
xchg
in
test
or
jle
dec
sub
pop
dec
call
sub
mov
sahf
and
test
cs
mov
add
xor
xchg
push
inc
sahf
pop
mov
sub
cmp
xor
scas
xor
cmpsl
inc
and
insl
adc
mov
cmp
mov
xor
adc
bswap
lea
mov
mov
divl
sarl
sbb
xchg
add
mov
test
hlt
push
push
and
jg
stos
test
decl
push
inc
pop
adc
or
mov
shrb
dec
inc
das
adc
dec
and
mov
sub
mov
aaa
fiadds
sbb
leave
and
fimuls
js
ret
jns
sub
ret
sar
jecxz
or
lods
loope
scas
test
popf
test
data16
mov
test
addl
cltd
mov
addr16
add
sub
xchg
mov
xchg
cmp
cmpsb
je
in
ja
xchg
aad
repnz
mov
jmp
in
sbb
mov
js
cmp
cmp
ret
stos
loope
inc
popa
je
dec
xchg
jg
adc
mov
pop
pushf
jae
das
pop
call
sub
adc
push
jns
mov
dec
cmp
xchg
and
pop
sbb
lock
jbe
enter
in
xor
push
hlt
xchg
cmp
or
fwait
add
push
xor
out
dec
add
pop
xchg
shr
mov
cld
pop
sub
out
in
pushf
insb
jmp
push
add
mov
das
adc
test
dec
aaa
jae
loope
cwtl
les
mov
loope
pop
push
add
mov
xor
cmp
add
stc
ud0
dec
ss
sub
mov
sub
mov
jne
sahf
cld
ljmp
mov
fs
bnd
iret
pushf
int3
test
cmp
cmp
jo
mov
aaa
lret
notb
mov
pop
mov
cmp
sub
sbb
dec
mov
sub
filds
xor
mov
ret
mov
jge
fwait
rcr
and
out
js
mov
vgetmantps
jne
js
lea
imul
and
and
in
ss
addl
test
sbb
dec
test
outsl
ljmp
mov
or
insb
mov
mov
pop
lds
jno
sar
add
add
dec
sbb
sbb
out
mov
xchg
inc
pop
aas
fwait
jbe
fnsave
xchg
and
sbb
hlt
xchg
xchg
mov
scas
mov
xchg
mov
out
subb
jns
push
stos
pop
insb
pop
mov
jle
mov
pop
int3
xor
insb
pop
test
es
testb
fsubr
cltd
movsl
jbe
fdivrl
les
mov
push
jno
push
push
inc
fmulp
jmp
enter
pop
loope
xchg
ret
jbe
dec
pop
mov
cld
aas
mov
cmp
sub
loop
adc
leave
pop
in
mov
mov
sbbb
dec
lret
aam
push
nop
xor
jl
pop
orl
lds
and
sbb
xor
pushf
sti
sub
int
call
mov
sti
mov
mov
jae
lock
int3
mov
push
push
lret
loope
fldl
stc
clc
inc
cmp
push
lods
adc
popa
pop
rolb
fidivs
mov
pop
pop
pop
xor
sbb
xchg
adc
mov
cmp
or
jb
pop
out
das
dec
mov
pop
daa
fidivl
fs
xor
lcall
adc
push
jl
mov
sahf
pop
test
into
fsubrs
inc
nop
mov
cli
inc
fdiv
pop
xchg
dec
lret
pop
testl
and
and
xchg
dec
pop
mov
pop
dec
mov
push
adc
mov
xadd
cs
xchg
pop
cmpsl
cs
push
imul
or
jge
adc
or
insb
sbb
addb
mov
je
aas
inc
scas
sbb
xchg
cs
sub
xchg
xchg
lds
adc
cmp
or
cmp
add
push
int
add
pop
sub
loopne
mov
test
mov
push
insb
pop
movsl
pop
shrl
pop
add
test
clc
dec
or
dec
mov
call
or
aad
add
cwtl
xlat
jns
and
sub
pop
add
cmp
stos
rorb
or
les
dec
mov
mov
imul
and
mov
aad
sub
shlb
mov
lods
push
adc
repnz
fmuls
aam
xchg
jb
push
inc
push
out
mov
cmpb
ret
jae
std
push
leave
lock
and
fidivs
sti
dec
aas
fbld
es
mov
push
add
ss
lcall
mov
imul
mov
aam
mov
addl
mov
scas
inc
aas
jne
cmpsb
sti
mov
outsb
jo
mov
push
call
insb
or
movsl
daa
int3
jl
jecxz
and
push
sbb
rcll
mov
stos
inc
fnstcw
cmpb
dec
int3
jp
xor
cwtl
call
adc
pop
sbb
movsl
sub
jns
xchg
xor
popa
mov
and
add
fsubrl
and
push
ja
fldt
mov
sbb
shlb
insb
sub
aam
leave
adc
dec
pop
rolb
xlat
cmp
enter
leave
cwtl
or
mov
sbb
test
jp
mov
push
les
xor
les
mov
scas
jae
outsl
rcr
jmp
sbb
jo
mov
adc
movsb
cmp
jle
into
sbb
fdivrl
sub
adcb
scas
outsb
outsb
mov
arpl
pop
jne
stos
ret
insb
dec
adc
in
push
nop
or
push
out
in
outsl
mov
std
cmp
sahf
pop
rcr
push
push
aad
xchg
sub
mov
push
ja
lahf
cli
push
fnstsw
leave
ret
rcrb
scas
popa
arpl
inc
int3
sarl
and
test
aad
hlt
jo
repnz
aad
and
fidivl
mov
push
aas
bound
inc
cmp
rorb
dec
or
dec
inc
inc
jbe
or
jae
mov
jle
pusha
out
shll
rol
pop
and
mov
jp
jb
cld
repnz
jmp
mov
into
arpl
dec
out
xor
call
jge
push
je
fldenv
jno
pusha
mov
push
inc
jl
jge
sbb
lock
jmp
bound
add
pop
dec
xor
fcompl
mov
mov
xchg
scas
in
or
test
jb
rcll
pop
xchg
jle
call
add
xchg
loop
xor
xchg
and
cmpl
xchg
push
in
and
pusha
jb
pop
insb
lods
cmp
mov
das
or
mov
bound
pop
in
out
fxtract
mov
cwtl
clc
shrl
addr16
mov
adc
decl
je
mov
cmpsl
std
push
sub
mov
cmpsl
push
aas
or
divb
pusha
nop
icebp
stos
add
pop
inc
lods
popf
cmpsl
insb
jns
or
stc
outsb
stc
out
cs
dec
dec
inc
push
mov
sub
outsl
out
cwtl
test
cmp
pop
lcall
sub
fcoms
xchg
add
jo
add
push
xchg
xor
test
push
pop
pop
and
aaa
jnp
lds
adc
in
and
jge
push
push
mov
xchg
fidivrl
daa
ljmp
mov
lret
loope
xor
inc
push
cld
imul
insl
mov
or
cli
adc
je
mov
mov
inc
loop
sbb
ja
ds
dec
inc
and
mov
push
cmc
push
cwtl
add
aad
jbe
dec
jno
in
in
stos
pusha
mov
pusha
xor
cmp
push
incl
in
fwait
sub
rcrl
cmp
fs
dec
test
and
lahf
mov
in
mov
xlat
push
pop
or
fimull
push
test
or
js
jo
je
xchg
inc
cmp
pushf
cwtl
xchg
andl
cwtl
mov
adc
cmp
cld
ja
adc
jle
arpl
xchg
jge
jb
ss
shll
stos
pop
mov
mov
add
mov
lret
sub
or
rcrl
cmpl
and
and
or
adc
inc
push
lahf
scas
sub
popa
jne
inc
cmpsl
sbb
inc
aam
mov
xor
lret
mov
lahf
add
mov
mov
xor
push
pop
lods
xor
stos
call
jg
mov
sbb
daa
sbb
lock
pushw
mov
sub
lcall
enter
orb
adc
mov
insl
popf
mov
add
pushf
or
sbb
mov
and
mov
mov
sub
or
repz
inc
rolb
xchg
lods
sbb
xchg
ds
dec
xchg
xchg
sahf
outsl
mov
test
jmp
inc
sub
add
push
fbstp
dec
pop
xchg
mov
test
mov
stos
clc
jbe
add
pop
xor
push
into
inc
int
jmp
jbe
inc
jp
push
adc
aam
fsubl
pop
jge
inc
lcall
pushl
lss
addr16
push
dec
jp
add
inc
push
movsb
aaa
push
fimull
push
loop
push
test
cs
aad
das
sbb
jb
lret
icebp
arpl
adc
adc
xchg
xor
in
lods
nop
int
andl
mov
es
push
or
mov
mov
push
lds
std
jb
cmpsb
mov
in
rorb
mov
arpl
call
popa
out
sub
mov
int3
fwait
sub
movsb
sahf
add
or
adc
xchg
lock
mov
inc
ficoms
test
ds
dec
mov
jl
xchg
sbb
pop
dec
in
push
ret
inc
neg
shl
cmc
je
add
cmpsb
fdivrp
in
je
cmp
push
inc
xchg
add
push
in
jmp
mov
or
cmp
pusha
cs
imul
fcmovu
out
loop
cmc
push
jecxz
bound
push
push
mov
or
out
leave
push
sbb
scas
shll
add
fstl
dec
pop
outsl
or
and
jecxz
jne
push
loope
push
jno
cs
mov
enter
fstpl
int3
lret
mov
add
faddl
mov
pop
pop
xchg
in
sub
popa
mov
add
push
gs
ret
mov
cs
in
fiaddl
pop
cmp
jecxz
jle
fisubrl
ja
sub
iret
jmp
pop
xchg
scas
or
out
dec
mov
aas
pusha
std
dec
test
xor
stos
push
adc
cli
sbb
pushf
or
loop
push
ljmp
dec
movb
ss
push
mov
sbb
and
negb
mov
pop
push
sti
xor
cs
dec
in
aaa
nop
in
ret
sub
cs
out
in
and
add
sub
cmpsb
fadds
mov
enter
ja
daa
xlat
mov
or
out
scas
dec
xor
cmp
scas
ror
or
inc
inc
test
inc
js
mov
dec
jnp
pusha
push
sub
fiaddl
sbb
push
push
jbe
dec
push
push
jmp
mov
mov
addr16
in
mov
into
add
sbb
hlt
push
add
idivl
insb
lds
cmovle
xor
push
ljmp
or
repnz
sub
out
lret
iret
jnp
dec
adc
dec
mov
xor
int3
sbb
jns
cwtl
lods
jnp
and
jae
xchg
fbstp
pop
jl
sarl
ja
jb
add
pop
scas
pop
test
pop
lea
les
in
shll
movsb
ss
jp
dec
lea
mov
iret
imul
dec
scas
es
adc
mov
cs
sub
pop
roll
loope
ret
lea
dec
push
test
test
into
lods
push
popf
aas
lahf
jp
arpl
sbb
xchg
push
cli
jns
incb
jo
jo
xor
inc
push
popa
xchg
test
repz
xchg
pop
lret
and
and
shlb
pop
add
pop
dec
dec
cmp
pop
mov
and
add
ficompl
cmc
dec
testl
cmp
cmp
push
xor
pop
iret
std
push
out
dec
and
mov
mov
cmp
mov
lea
mov
jle
sub
mov
imul
or
push
idivl
lahf
fstps
or
jns
or
aaa
scas
addr16
cli
loopne
jne
test
iret
mov
and
pop
cmp
arpl
adc
aad
adc
je
loope
rorl
ret
cmp
xor
shlb
inc
and
ja
push
or
mov
fstp
rcpps
insl
mov
decl
sub
aaa
lcall
jle
lcall
lods
pop
pop
int3
mov
add
adcb
cmpxchg8b
push
pop
iret
jp
arpl
mov
loopne
push
inc
lret
mov
xlat
dec
and
aaa
jb
out
mov
insb
cmc
lds
or
in
pop
cltd
and
push
mov
jg
push
int
xchg
and
in
jg
sub
push
sbb
mov
mov
push
and
lret
sbb
inc
jo
xchg
andl
loopne
dec
std
movl
pop
pop
pop
lahf
jnp
mov
inc
xchg
dec
loope
xor
cwtl
jno
mov
cmc
inc
ret
push
pop
adc
jg
aas
sub
add
or
xchg
insb
ds
sub
mov
loop
adc
sbb
xor
dec
inc
and
inc
dec
shrb
rolb
xlat
iret
pop
xchg
mov
adc
dec
jecxz
sarb
sbb
push
jnp
lahf
out
aad
xlat
clc
dec
xchg
clc
mov
cs
cmpsb
pusha
ret
das
push
cmp
insl
loope
xchg
sub
inc
lds
add
dec
int
sub
into
stos
cmp
mov
jge
inc
test
movsl
mov
or
loope
pusha
push
loopne
aam
bound
in
cmp
std
mov
jle
outsl
loop
negb
adc
je
push
shl
movsb
jne
lods
and
jp
add
std
data16
dec
jo
add
mov
gs
xchg
adc
imul
jne
jmp
leave
cmp
lods
inc
xor
mov
or
sbbb
repnz
xchg
filds
sbb
fwait
sub
rolb
jp
stc
sbb
bound
sbb
mov
jns
insl
dec
and
pop
mov
mov
and
add
pop
lret
popf
push
mov
mov
movsl
mov
xchg
stc
fnsave
out
dec
sbb
out
or
fcmovu
jae
rclb
orb
adc
dec
out
sub
fcom
mov
mov
sbb
mov
mov
pop
jle
inc
mov
jge
insb
movsl
int
mov
rol
lock
adc
fnop
aam
test
cmpsb
pop
pop
adc
sub
frstor
sbb
mov
shl
test
ret
dec
das
push
jp
sbb
rcll
dec
jle
outsb
add
sbb
sbb
arpl
sbb
cs
xor
inc
addr16
fnstcw
mov
push
pop
in
or
xchg
xor
fisttps
in
lahf
xchg
xor
ret
mov
ljmp
xor
insl
pop
stos
sbb
xchg
cmc
add
stc
and
lret
aad
addr16
add
ftst
movsb
and
push
mov
stos
add
cmpb
std
aam
fsubp
xchg
sub
pusha
adc
sub
sbb
add
and
das
dec
mov
cli
adc
call
out
jnp
dec
cmp
sbb
sub
test
js
testb
std
out
stc
hlt
adc
xor
jmp
jns
inc
add
add
gs
or
lahf
sbb
lock
aaa
sub
jne
int
inc
mov
rol
scas
sbb
int3
stos
inc
popa
cmp
ret
dec
hlt
push
pop
add
in
inc
outsl
and
addr16
and
pop
jae
inc
jle
push
out
xchg
jle,pt
test
fcmovbe
xor
sarb
cmp
and
fsubrl
fwait
add
cltd
data16
sbb
push
mov
cmp
add
push
addb
test
add
mov
mov
jl
lods
les
lea
mov
pop
pop
add
lret
iret
in
adc
or
sahf
xchg
fwait
inc
sub
repz
movsb
and
test
repnz
dec
inc
outsl
or
jecxz
popl
rcl
sbb
fistl
add
loop
lret
ficomps
push
or
push
arpl
paddusb
fistl
dec
in
insb
sbb
enter
push
out
mov
mov
xor
lret
iret
lret
repz
jmp
push
add
and
pop
sub
mov
aas
insl
rorl
sub
xor
cmp
push
lcall
jns
rcll
mov
cwtl
sbb
shlb
dec
ds
adc
xor
inc
xchg
sub
xchg
pusha
test
jmp
push
mov
into
dec
out
adc
sub
fs
mov
call
scas
fnclex
add
jne
inc
xor
dec
sub
dec
xlat
out
enter
fnstsw
dec
mov
pushl
pop
adc
stos
cmpsl
sbb
lock
xor
or
int3
jp
dec
sbb
cmp
aas
fsubs
dec
in
test
in
ret
sti
dec
mov
arpl
daa
js
and
nop
ds
sarl
mov
fs
and
mov
out
cmc
ljmp
or
inc
aad
mov
dec
lock
dec
jae
jno
push
pop
scas
xchg
popf
push
sbb
clc
inc
iret
mov
push
fwait
jle
in
mov
in
and
aas
ret
in
das
cmc
lea
loop
xor
pusha
call
mov
cmp
int3
enter
imul
push
fisttpll
test
scas
xchg
test
mov
inc
push
fwait
mov
movsl
fcmove
lcall
lret
mov
push
mov
push
lret
sub
push
fsub
shll
lods
mov
pushf
js
add
inc
mov
sti
push
inc
rorl
pop
cmc
adcb
pusha
pop
imul
and
pop
imulb
out
mull
addl
in
push
mov
push
push
jl
jg
bound
or
jecxz
and
in
stos
sbb
test
xor
sub
cmp
mov
lock
bound
mov
mov
jne
pop
pop
neg
xchg
mov
mov
and
jge
jo
popa
mov
pop
xlat
pop
loop
lds
loop
xchg
hlt
loop
rorb
iret
and
or
push
and
aas
jmp
mov
sub
inc
add
jl
aas
xor
repz
pop
fildl
cli
inc
sbb
inc
push
lock
sbb
mov
aad
dec
mov
lods
dec
pop
int
inc
ret
jb
cmp
outsb
aam
or
xor
or
sbb
pop
dec
cmpsl
enter
adc
ficoms
jo
movsb
sbb
add
pusha
out
fistps
sbb
dec
fidivrl
std
cmc
cmp
sbb
mov
mov
popf
push
inc
dec
ds
cltd
mov
sarl
mov
cmp
jae
pop
push
jecxz
mov
out
cmp
mov
stc
pop
repnz
js
test
out
or
roll
xchg
mov
cmp
dec
sub
mov
enter
inc
adc
jle
xlat
scas
sahf
in
mov
test
pop
lcall
inc
adc
leave
and
pop
inc
cmc
les
sub
xchg
fldl
jo
cmp
rclb
add
push
sbb
sbb
mov
lods
cs
and
push
pop
and
cmp
xchg
dec
hlt
lock
fldenv
fcompl
jmp
and
jbe
xor
pusha
adc
jb
insl
push
xor
dec
or
cmp
cld
ffreep
scas
cmpsl
lret
fisubrs
test
pushf
movl
dec
shrb
push
mov
sbb
add
andl
out
jge
pop
aas
pop
adc
mov
jecxz
out
lea
notl
inc
or
out
inc
lret
and
xchg
fildll
ds
test
stos
mov
test
and
frstor
sbb
hlt
out
push
clc
in
xchg
popf
or
jle
mov
cmp
inc
sbb
xor
pop
pop
dec
jno
bnd
xchg
mov
add
out
inc
jg
test
jl
sbb
mov
cmpsb
push
jmp
xor
jmp
loopne
lret
lods
in
lcall
rorb
xor
push
pop
pop
or
mov
mov
iret
test
insb
and
jo
hlt
cmp
dec
jmp
movl
pop
iret
push
dec
scas
mov
sbb
leave
lcall
xlat
icebp
sbb
test
pop
mov
xor
stos
pusha
and
push
ret
add
insb
movsl
mov
push
mov
lods
fiaddl
mov
sahf
xchg
jmp
xor
mov
jge
add
jb
out
out
jae
cmp
xlat
jb
xor
stos
push
jg
inc
stos
push
inc
repz
jb
ret
adcb
push
int
jb
cli
sub
neg
mov
xchg
dec
ficoms
les
bound
arpl
mov
jl
dec
pop
mov
lea
sbb
ficompl
in
xlat
add
and
cmp
rcr
xlat
ret
adc
adc
pop
xchg
cmc
mov
pop
mov
adc
add
stos
push
pop
adcl
adc
out
fimuls
test
int
mov
mov
bound
test
sub
dec
call
imul
neg
sbb
cmpsb
cmc
mov
call
jecxz
cld
mov
mov
fists
fwait
xor
sbb
popa
pop
and
sbb
xor
jae
scas
daa
sbb
mov
lods
js
bnd
mov
add
cli
pop
dec
cmp
or
cli
jge
popa
movsl
mov
push
sahf
mov
ror
orb
jbe
mov
sub
mov
xchg
movsl
stos
cmp
scas
mov
rorb
or
in
div
xchg
pop
cwtl
lahf
daa
fldt
js
dec
test
and
je
loope
pop
mov
xchg
test
dec
into
push
fldl
mov
inc
icebp
inc
ret
mov
cmc
push
pop
sarl
cmc
ljmp
cmp
jnp
outsb
adc
or
mov
jle
inc
scas
add
out
pusha
push
dec
or
adc
ret
jl
inc
or
daa
stc
xchg
cmp
cmpsb
inc
test
push
gs
push
mov
or
out
or
cmp
ja
mov
test
xchg
cli
lahf
mov
xchg
push
dec
or
sub
imul
and
or
movsl
pop
sbb
xchg
movsb
jno
ja
dec
mov
inc
xlat
nop
insb
inc
push
or
mov
js
push
adc
push
mov
inc
or
push
cmp
dec
out
stos
nop
xor
push
out
sub
push
add
dec
or
mov
aaa
in
xchg
dec
bound
sub
into
stc
inc
sub
outsl
add
mov
cmp
mov
jo
jmp
sbb
mov
and
xchg
jae
pop
nop
or
ss
dec
jb
and
sub
mov
icebp
pop
ret
dec
cmp
sub
arpl
pop
cmp
push
loopne
loopne
sub
int3
adc
push
cmp
cs
cmp
aaa
or
in
fisubrl
push
ja
pop
add
inc
aas
aaa
push
push
mov
inc
mov
pushf
and
insl
test
leave
es
jbe
les
call
aaa
pop
sbb
in
inc
neg
xor
push
fiaddl
pop
jmp
das
xchg
shlb
out
or
lds
in
pop
add
sub
xchg
test
jae
sbb
daa
or
mov
cvtps2pi
mov
ret
cmpsb
insb
and
xor
test
pcmpgtd
shll
and
pop
xchg
ljmp
jnp
gs
xchg
cmp
js
lods
pop
pop
cs
and
xor
lcall
cmp
xchg
fcmovnb
pusha
xor
fmuls
push
stc
sub
pop
rorl
and
mov
ss
scas
pop
aam
shr
rcrb
lret
arpl
out
aam
mov
dec
mov
cmpsb
ja
mov
xor
jae
jecxz
lods
loop
or
mov
xor
test
sbb
sub
pop
jnp
adc
inc
push
pop
xor
jecxz
xor
inc
in
jno
push
fsubrl
sub
xor
cmpsw
jle
dec
sbb
adc
push
jb
adc
xor
mov
nop
add
clc
popa
daa
and
shll
and
cmpsb
xor
pusha
fistl
mov
cmp
in
mov
ss
aam
sar
je
xchg
cli
push
ja
es
xor
neg
jmp
mov
adc
sbb
pop
xchg
arpl
add
loopne
push
out
aaa
and
decl
dec
inc
dec
imul
mov
cmp
cli
repz
aad
mov
inc
enter
cmp
popf
in
mov
icebp
adc
cwtl
jne
mov
int3
jl
mov
sbb
ret
adc
idivb
js
lods
inc
mov
pop
mov
popa
mov
arpl
out
mov
rcrl
inc
cmp
int3
mov
pop
jecxz
jp
repz
cs
stos
inc
cli
mov
xor
mov
add
mov
push
mov
lods
inc
dec
int
mov
jbe
mov
outsl
xor
mov
fmuls
pop
mov
mov
js
fsts
enter
cs
add
or
or
inc
dec
pop
ret
fidivl
dec
fldcw
sbb
in
sub
xchg
pop
sbb
mov
mov
jle
lods
mov
lods
cmp
cmp
dec
and
in
sahf
fbld
lahf
mov
cli
jnp
mov
xchg
xlat
pusha
sub
stc
clc
bnd
jnp
adc
mov
test
dec
mov
roll
pop
xchg
jae
jecxz
js
cld
fdivl
popa
call
int
movsl
dec
les
ss
das
aas
sub
hlt
cmp
into
leave
push
stos
or
in
cmp
pop
sahf
or
out
xchg
or
movsb
movsl
and
push
insb
xlat
adcb
xchg
out
xlat
stc
clc
mov
mov
adc
imul
lahf
push
js
pusha
jmp
or
push
mov
pop
sbb
xor
sbb
loope
in
jl
popa
sbb
pop
mov
into
sbb
jl
sbb
cltd
lods
push
sub
rorl
and
push
mov
aam
sub
arpl
xchg
fmulp
popa
mov
mov
sub
int
pop
shr
xchg
pop
xor
pop
add
fwait
or
das
mov
mov
xor
jb
dec
std
mov
test
dec
jle
sbb
hlt
mov
lods
dec
sub
jbe
lret
imul
movl
mov
fmulp
out
daa
leave
cwtl
dec
jl
jb
mov
loopne
xchg
or
clc
cmpsb
sbb
xchg
mov
sahf
sub
inc
int
push
ljmp
pop
xchg
sti
push
push
shlb
shrl
jae
mov
pop
into
adc
mov
out
test
cmp
add
shr
das
pop
rol
sbb
cld
xchg
push
push
in
dec
adc
ret
or
insb
mov
pop
iret
sub
cli
jnp
in
test
adc
jle
popa
or
pop
mov
adc
dec
pop
lods
dec
jb
fmuls
push
movsl
stos
insl
aas
pushf
cmp
gs
dec
stos
lods
xchg
xchg
mov
sub
fsubrl
lock
dec
push
cltd
cmpsb
sub
mov
xchg
sar
mov
arpl
jle
mov
mov
mov
in
movsb
sbb
mov
add
sti
and
insl
call
inc
iret
mov
icebp
jb
or
fxch
sahf
sbb
inc
repz
std
and
call
jae
jno
mov
std
add
sbb
out
add
fcmove
pop
mulb
xor
sbb
das
mov
pop
jne
aas
jae
add
mov
sahf
outsl
ds
push
cld
xor
sahf
xchg
xchg
int3
mov
sbb
adc
or
mov
pop
pop
add
fucom
in
fnsave
mull
test
test
lcall
iret
cmp
stos
inc
in
jecxz
loop
dec
leave
pop
int3
push
stos
pop
jnp
xorl
int3
mov
int3
xchg
mov
mov
xor
mov
lea
xor
sub
dec
addr16
jecxz
scas
push
int
pop
gs
or
and
xor
lods
adc
lods
inc
enter
mov
addr16
or
lods
dec
aaa
and
imul
push
nop
xor
in
sahf
clc
std
and
cmpsb
dec
mov
aad
dec
ds
into
call
pop
xlat
cmp
dec
loop
push
jnp
mov
mov
and
inc
cmp
jg
out
clc
enter
mov
pop
adc
and
cld
pusha
ljmp
sub
mov
jmp
pop
enter
add
dec
movsb
and
mov
mov
and
fldl
lcall
push
pop
loope
adc
mov
ja
je
mov
hlt
ret
adc
mov
xor
out
push
scas
dec
or
popf
je
orl
out
cld
addr16
adc
out
cli
aas
dec
cmp
or
loop
rolb
inc
push
pop
jl
push
pushf
repz
scas
out
bsf
xor
loop
cmp
popf
jo
ret
repnz
cmp
jmp
addr16
mov
movsb
dec
scas
mov
sub
insl
hlt
sahf
mov
cmp
mov
repz
push
aad
mov
nop
scas
cs
and
sub
faddp
jae
out
repz
inc
pop
jae
cli
enter
pop
mov
dec
fistps
pusha
xor
fstps
cltd
pop
mov
dec
and
cmp
lahf
int3
in
out
decl
xor
sbb
inc
sbb
les
data16
jg
int3
mov
clc
out
arpl
fwait
psrld
xor
dec
xchg
nop
int
jp
xchg
mov
xchg
sbb
dec
dec
adcb
adc
mov
aas
jecxz
repz
xchg
sbb
mov
inc
add
jl
push
outsb
push
cmpb
or
mov
test
shll
enter
mov
inc
loope
xchg
push
fmulp
xor
repz
push
mov
test
and
push
cmp
lods
popf
xlat
ror
clc
adc
adc
cld
outsl
andb
jmp
jb
nop
add
mov
rcrl
ja
xor
xchg
ret
stc
jmp
aam
inc
mov
push
fcoms
jle
addl
icebp
fcom
cmp
pop
aaa
jl
cmp
hlt
sbb
ret
jne
bound
decl
push
cltd
aad
adc
sbb
test
icebp
adc
aas
nop
push
mov
pop
cmp
push
xor
out
xchg
xlat
xchg
rcll
or
je
sbb
lock
sbb
or
aaa
cmp
sbb
fs
fst
pop
or
push
and
mov
imulb
lret
xlat
mov
addb
pushf
insl
test
shl
mov
stos
rorl
test
lret
std
adc
incb
cmpsb
inc
pop
les
lret
mov
xchg
push
shlb
xchg
ret
adc
loop
mulb
fs
mov
dec
mov
test
dec
or
ds
movzbl
sub
aam
ds
pop
mov
fmuls
push
sub
dec
call
or
mov
jle
int
and
sbb
insl
pop
lods
loope
ss
xchg
cwtl
aad
outsl
xchg
xchg
test
sbb
shlb
mov
inc
add
addb
xchg
xor
dec
ficoml
shlb
loopne
movsb
mov
xor
xlat
test
mov
addb
pop
rorb
jb
movsl
cmp
pop
mov
stos
cmp
lods
into
fisttpll
push
or
inc
std
add
js
gs
cmpb
or
cmp
pop
dec
mov
dec
leave
cmp
mov
ja
ret
adc
cli
iret
sub
pop
mov
mov
xchg
lahf
rcl
imul
mov
daa
in
enter
push
or
xor
lods
xor
add
fistpll
xchg
or
je
or
mov
ds
test
sbb
xlat
pop
std
call
insb
xchg
dec
addr16
xchg
jecxz
fsubs
call
lea
out
std
fsubl
fsubr
sub
cmp
add
pop
loope
or
xchg
jge
xchg
sbb
lret
scas
xchg
gs
stc
loop
cmp
adc
inc
fstl
push
jmp
aaa
fwait
rcrb
jle
adc
imul
sub
jae
xor
cli
push
push
loope
pop
lcall
push
dec
outsb
in
xchg
mov
out
outsl
lods
roll
mov
lret
mov
sbb
loop
xor
ficompl
in
sub
int3
orb
jle
daa
sub
sbb
sub
stc
dec
scas
loope
mulb
jb
test
mov
inc
cli
xlat
push
ja
mov
leave
idiv
xchg
mov
jl
push
cmpsl
lods
arpl
cmp
pop
fisubrs
std
icebp
pop
mov
add
mov
je
or
mov
jnp
xchg
and
xor
daa
sbb
sbb
imul
test
cmp
mov
push
cmp
rorl
push
mov
adc
mov
jl
pop
pop
jo
add
push
or
jo
js
clc
pop
cli
stc
xchg
sarb
stos
aas
pop
adc
aas
addr16
lcall
stos
into
and
mov
add
sub
out
sbb
mov
mov
mov
int
pop
leave
dec
pusha
idivl
test
xor
rolb
addr16
and
fidivrl
pop
adc
or
sub
mov
and
into
xor
loop
and
sbb
gs
imul
into
cld
or
push
jg
jns
outsb
cmp
inc
pop
mov
pop
andb
sbb
xchg
dec
lret
cs
and
aad
out
jmp
xchg
enter
dec
test
inc
lods
std
dec
cmp
lods
out
or
xchg
mov
loop
in
add
mov
lret
mov
xchg
cmp
sti
out
clc
js
jae
mov
pop
fcomp
dec
scas
fs
data16
nop
pop
jp
test
or
shrl
repz
fcomps
mov
adcb
push
insb
mov
mov
ja
js
rclb
jne
imul
push
lret
arpl
and
dec
dec
mov
nop
rcrb
jle
jmp
adc
insb
popf
cmp
xchg
xchg
hlt
and
push
in
push
inc
das
add
inc
cmp
mov
ljmp
iret
adc
stos
sub
jp
data16
lods
stc
fdivs
ffreep
jnp
imul
jg
enter
or
sub
jb
jl
or
loop
or
shlw
inc
hlt
test
mov
rcll
pop
test
ja
add
add
orl
dec
cmp
ret
xlat
pop
adc
repz
mov
mov
sbb
lret
mov
cli
fiadds
push
ret
jmp
enter
pop
ret
jl
cld
push
movups
dec
out
sbb
and
adc
sub
sub
cmp
add
jae
lahf
leave
cs
or
mov
out
push
push
sarl
mov
mov
inc
cmp
xchg
xor
and
movsb
jb
adc
cmpsl
fs
stc
je
testl
inc
xchg
mov
fsts
imul
sbb
and
ss
pop
or
add
ja
bound
int
fisttpll
rcl
sbb
push
lods
or
mov
cmp
shr
adc
inc
xor
lret
sub
xchg
inc
test
das
repnz
sub
stc
stos
inc
cmp
shl
das
sub
addl
jne
sbb
js
shlb
adc
mov
out
cmp
inc
sbb
sbb
xor
or
in
jge
mov
lea
cmp
cmpsb
mov
xor
arpl
popf
mov
adcl
or
imul
ds
push
cmpsl
mov
sahf
inc
push
int3
data16
mov
mov
mov
add
jmp
mov
insb
and
cmp
mov
negl
flds
mov
pop
arpl
movsb
add
jb
pop
mov
lds
iret
in
inc
shr
in
sub
filds
into
jp
rcrl
sbb
fdivrp
xor
in
lret
push
dec
je
lea
rcrb
ret
push
gs
xchg
divb
pushf
jl
pusha
out
jge
jg
stc
adc
mov
add
sbb
mov
jns
test
adcl
es
data16
push
fwait
les
popa
es
mov
ficomps
adc
inc
mov
jno
cmpsb
dec
ficomps
stc
cld
je
adc
mulb
gs
pop
ret
fisttpl
mov
cli
or
cmc
les
jge
dec
ret
cmp
jo
je
orb
in
dec
in
mov
sub
shrb
ret
dec
movl
dec
mov
js
loope
pop
mov
fsubrs
repnz
fbstp
outsl
jecxz
aad
lahf
jp
mov
mov
push
push
mov
es
sbb
mov
sub
mov
jmp
xor
dec
repnz
push
and
and
add
out
add
adc
and
inc
pop
or
add
hlt
ds
cmc
push
lcall
sub
mov
push
xchg
jl
daa
sub
xor
rolb
sub
mov
int
push
or
lret
leave
lock
test
mov
js
inc
test
cwtl
xor
jg
into
mov
push
push
push
lock
mov
mov
aas
lahf
push
sbb
sti
js
inc
add
lods
mov
test
sahf
jo
sbb
ficomps
das
adc
pop
mov
aaa
jg
fsqrt
jmp
push
mov
fnstenv
aas
call
test
lods
lock
jno
mov
ret
imul
and
sti
cmpsb
lcall
movsl
and
fildll
mov
push
jb
addr16
arpl
repnz
add
fs
sub
or
jb
pop
imul
fsubs
imul
mov
cli
push
dec
cmpsb
out
add
xchg
push
ret
fsub
shll
popa
adc
andb
js
mov
sub
or
or
outsb
test
subl
daa
or
aaa
sti
and
stos
sbb
sbb
dec
add
sarb
push
loop
mov
lret
inc
ljmp
aaa
gs
loope
je
add
icebp
lods
sbb
out
loop
xor
add
jns
cmp
fmull
cmp
insl
xchg
sub
dec
xor
mulb
aas
shll
sahf
fimull
in
shll
sbb
jb
pop
xlat
int
mov
movb
aas
or
repz
daa
push
mov
clc
mov
mov
sti
mov
add
psrld
repnz
ret
sub
sbb
and
jb
mov
cli
add
inc
add
arpl
mov
fiaddl
adc
nop
push
je
fsts
dec
jae
jecxz
mov
jno
insl
xchg
dec
outsl
cmp
into
pop
add
outsb
rcrb
in
jnp
movsb
dec
mov
cmp
push
add
add
mov
jge
out
jae
sub
ja
lahf
fnstcw
aad
mov
fdivrl
ficoml
out
je
mov
mov
repnz
sub
jo
push
jecxz
je
cli
xor
iret
sbb
lahf
cmp
sarl
repnz
notrack
aad
and
lret
mov
push
orl
dec
shlb
and
repz
adc
inc
sbb
add
jl
movsb
sub
pop
pusha
das
dec
dec
shl
mov
es
loope
jo
outsl
add
pop
adc
xchg
jo
sbb
pop
mov
xor
lcall
stos
cmp
fistpll
cwtl
add
push
push
jmp
in
push
lock
fs
mov
dec
lds
test
shrb
icebp
sbb
adc
outsb
movzwl
mov
dec
mov
or
loope
inc
into
jo
fnstcw
cld
scas
inc
enter
jl
adc
sbb
dec
pop
xor
dec
sub
sub
jae
mov
add
insb
cmp
push
sub
negl
cmpsb
push
adc
add
fimull
imul
cmp
not
mov
fs
shlb
pop
push
ret
idivl
or
push
scas
fwait
xchg
pop
cmpsb
stos
test
inc
xchg
sbb
xor
jecxz
and
xlat
leave
xchg
popa
int
mov
push
out
dec
hlt
mov
lret
pushf
ds
fs
ret
and
cmp
inc
mov
out
fidivl
ljmp
jg
ljmp
cmp
push
hlt
data16
mov
jnp
cmpsb
lods
xor
sbb
and
sahf
xchg
outsl
jle
and
xor
push
lea
jg
cmc
xchg
mov
movl
js
add
add
adc
sub
nop
out
pop
out
insb
movsl
fdivrl
insb
ds
cli
shl
js
inc
dec
lret
popf
in
xchg
add
push
inc
push
jge
xor
cs
xchg
ret
out
in
cmp
xor
sbb
in
xchg
lods
aaa
mov
jne
fwait
sbb
pop
mov
dec
les
lcall
cltd
ret
or
cmp
lds
das
lea
adc
jmp
xor
cmpsl
xchg
out
gs
ljmp
jnp
scas
repz
shl
jmp
or
add
aaa
cmp
add
pop
arpl
dec
nop
fwait
sub
jg
fcmovne
jl
nop
adc
stos
xor
mov
sahf
fidivrs
xchg
pop
lods
xor
ljmp
movsl
mov
lret
inc
xor
test
jno
xor
sub
push
dec
cmp
and
push
mov
js
popa
enter
ret
loopne
daa
and
sub
pop
push
gs
mov
add
lods
pop
or
cmc
jae
mov
push
push
sbb
int3
in
inc
push
dec
xor
or
out
cs
jg
jp
cwtl
or
dec
xchg
adc
or
add
push
pushf
scas
sti
sbbb
cwtl
ds
sbb
popa
jnp
repz
shll
mov
inc
mov
cmpsb
imul
cld
jnp
jg
jno
and
adc
add
sub
lahf
fdivrs
sarb
add
mov
mov
add
nop
mov
push
sbb
xchg
mov
and
aad
inc
sarl
fldenv
push
jg
fcomp
nop
scas
cli
xor
inc
aam
popa
push
xchg
pop
in
lcall
sbb
clc
cmp
ror
push
ss
leave
pop
dec
aas
out
mov
lret
in
or
fs
fcoml
inc
jnp
sbb
pop
jae
cmp
iret
and
sti
sub
imul
clc
push
push
andb
fstps
test
mov
imul
pop
jecxz
pop
add
cmpsb
jmp
dec
push
xchg
frstor
push
adc
cwtl
add
mov
in
insb
std
lods
sbb
add
and
dec
cli
rolb
movb
jmp
subb
inc
mov
fwait
jo
xor
loope
ret
sti
seto
dec
out
push
aaa
sub
inc
int3
sub
cmp
push
int3
inc
dec
bound
push
imul
jns
fbstp
and
aad
in
andb
or
mov
std
pop
push
popf
or
movsl
jl
insl
jmp
packssdw
jle
cmc
xor
mov
mov
mov
fsubrl
jle
sub
lock
inc
mov
imul
dec
add
fsubs
dec
xchg
test
xor
sub
mov
ficomps
mov
cmp
shrb
or
or
jle
test
lds
mov
lret
cmp
ds
push
sbb
jo
jmp
pop
scas
lds
xchg
rclb
adc
je
nop
sbb
push
stos
push
mov
movsb
mov
sub
clc
jbe
lcall
mov
inc
dec
pop
adc
pop
daa
xchg
rcrb
push
and
xchg
stc
jge
enter
push
lret
fidivs
push
stos
jmp
xchg
aas
cmp
push
popa
pop
mov
popf
subl
mov
aas
movb
ss
subb
test
adc
ret
das
out
fists
xchg
aaa
test
sub
dec
popa
cld
addl
jns
es
or
sbb
mov
add
push
iret
inc
sub
sub
mov
ss
call
in
sbb
cmpsl
inc
sub
lea
sbb
or
daa
push
loope
mov
stos
cmp
mov
add
out
xor
in
pop
or
dec
pusha
mov
aad
inc
or
popa
aaa
test
orb
inc
add
movsl
mov
cmpsl
xchg
cmp
shll
dec
push
mov
call
cmove
cmp
add
mov
inc
je
xchg
push
jns
mov
sbb
mov
mov
sub
mov
mov
and
add
in
outsl
aad
sub
hlt
in
cli
int
sbb
popf
pusha
jb
popa
dec
int
jae
js
jp
sarl
shl
inc
sub
into
pushf
out
xor
call
push
sub
fidivs
push
pop
shrb
lea
mov
in
pop
sbb
inc
repnz
dec
int3
cwtl
sbb
add
fadd
push
fidivrs
adc
call
addr16
out
fdivrs
enter
push
dec
leave
mov
test
dec
fcmovb
pop
sbb
push
sbb
inc
scas
es
into
jg
cmc
outsb
shrl
adc
cmpsb
popf
xor
mov
or
adc
xchg
jmp
pushl
fldt
repz
out
add
mov
lea
in
sub
xlat
mov
xlat
rcr
pop
popf
cmp
xchg
arpl
arpl
into
push
ror
pop
or
push
je
pop
lret
add
jne
bound
mov
dec
daa
fwait
bound
mov
mov
popf
das
out
std
lret
inc
push
mull
xchg
mov
and
into
mov
pop
mov
out
sbb
leave
into
inc
scas
addl
repnz
mov
add
jo
and
mov
jns
or
cmpsb
call
ret
popa
jbe
lcall
and
mov
test
mov
xchg
jg
je
pop
outsb
mov
fdivl
xorb
sbb
jl
cmpsl
stos
or
into
inc
out
in
push
sahf
arpl
fcoml
ret
fadd
fsubrs
out
xor
stos
xor
mov
das
pop
dec
data16
push
dec
das
lods
les
insb
sub
iret
sub
or
xchg
leave
mov
fmull
mov
fwait
cmp
cld
jmp
or
xchg
or
ja
pusha
inc
pop
rcl
pop
pop
jno
popa
jns
pop
mov
pop
mulb
out
mov
xor
lock
jmp
pop
cli
push
push
test
ja
pushf
iret
pop
dec
ds
sahf
ficomps
and
cmp
sub
insb
imul
adc
shll
imull
dec
or
imul
jno
mov
and
jbe
and
subl
push
sub
adc
adc
ja
jne
xchg
je
sbb
sub
push
add
fs
jae
popa
fcoms
cmpsl
sbb
scas
addr16
mov
push
pop
dec
lret
and
ret
push
jb
adc
or
into
adc
mov
mov
jg
lock
jp
loopne
pop
mov
and
mov
clc
shll
addr16
pushf
xchg
jne
gs
loopne
sub
xchg
mov
loope
into
insb
push
xchg
xor
andl
jge
stos
arpl
and
xor
mov
insl
repnz
pop
push
imul
fstps
dec
cmpsb
bswap
cld
inc
in
mov
push
shr
or
movsl
push
adc
fnsave
insb
xchg
mov
icebp
sbb
mov
cmc
cmp
inc
aad
je
push
jo
pop
test
jbe
faddl
call
scas
cwtl
arpl
mov
pop
sub
outsb
ret
sub
mov
pop
jg
jecxz
mov
mov
adc
inc
lahf
mov
fdivs
push
xor
rol
pop
jb
stos
or
rcrl
jb
ret
stos
ror
add
int
and
push
mov
into
fmul
mov
jp
cwtl
inc
xchg
ljmp
mov
rcrl
inc
out
int
mov
insl
rcrl
incl
imul
dec
dec
pop
pushf
xchg
cmpsb
shl
push
dec
lods
scas
cmpb
cltd
cmp
ljmp
sbb
or
pop
ljmp
loope
sti
movsl
ret
fisubrl
mov
adc
stc
enter
xor
lret
jl
jne
sub
push
ret
pop
mov
jle
xchg
loope
push
popaw
imul
loopne
mov
add
push
pushf
sub
daa
fsubrl
xchg
adc
dec
aas
repz
out
pop
fwait
and
push
popf
pusha
fnstenv
xlat
andl
gs
inc
xorl
cmp
aas
rcrb
sub
pop
inc
mov
dec
sar
mov
jle
xor
sbb
adc
and
and
push
stos
es
subl
test
divb
movsb
inc
adc
shlb
int
adc
inc
inc
outsl
orl
and
cmp
push
ja
inc
test
push
mov
lds
inc
mov
clc
xchg
add
fsubrl
push
movsb
pop
xchg
pop
fwait
cs
rorb
mov
cltd
add
jmp
je
sbb
adcw
stc
pop
jecxz
imull
sbb
jle
pop
xor
inc
cmp
popf
fs
dec
pop
xor
leave
mov
insl
shlb
lods
push
aad
imul
pusha
xor
xchg
lcall
aas
cmp
js
retw
sub
lds
fnstsw
jae
fisttpl
das
xchg
xchg
mov
lods
and
imul
or
jne
jbe
daa
jbe
nop
das
or
xchg
mov
cltd
aaa
mov
js
bound
fwait
fwait
cmp
and
jae
xor
sbb
mov
roll
jl
call
rorb
call
aam
fistpll
mov
add
outsl
mov
sub
cmp
cmp
aam
inc
mov
loopne
add
jg
push
int3
jmp
fsubrs
and
subb
fisubrl
loope
cmp
dec
stc
adc
outsl
adc
pop
gs
or
fnstenv
sbb
subl
out
fisttpl
inc
imul
es
jb
mov
push
cmp
jg
fs
sbbb
mov
ret
out
jp
add
rolb
jbe
loop
or
pop
sub
jb,pn
scas
sarb
push
ja
and
pop
cmp
xchg
push
ffree
in
das
insb
shlb
mov
out
jge
adc
xlat
repz
jge
ret
into
push
ds
xchg
mov
add
pop
lea
mov
xchg
push
ffree
jnp
lcall
push
hlt
add
sbb
mov
test
adc
or
fwait
scas
dec
mov
cltd
add
lcall
mov
sbb
sub
insl
xor
nop
adc
fwait
lret
rorl
sbb
or
jl
mov
outsl
adc
mov
lock
mov
cmp
sbb
xchg
add
mov
xchg
sahf
fldenv
js
sub
add
xor
push
xchg
arpl
lods
sub
into
lods
cmc
add
test
aas
mov
cmp
aam
mov
mov
xor
addl
jl
insb
sbb
xchg
cmc
divb
cmp
inc
hlt
jns
shlb
push
xor
pop
aam
fsubl
push
std
rep
jmp
xchg
mov
dec
pop
out
adc
mov
cmc
lock
jle
cmp
sub
aad
outsl
mov
hlt
or
out
loop
les
push
addr16
hlt
cmp
icebp
add
aam
stc
clc
pop
dec
stos
push
in
clc
fdivs
sub
sahf
in
in
cmpsb
sbb
cmp
xor
pop
insb
ljmp
cmp
out
dec
test
loopne
mov
jge
insl
es
cs
lret
testb
mov
mov
dec
cli
pop
cmpsb
and
ljmp
mov
cmp
dec
je
je
les
imul
lahf
stc
mov
int
pop
repnz
mov
pop
jb
cmp
adc
notl
and
sub
pushf
cwtl
cmp
lret
mov
faddl
test
lods
cld
pop
cmpsb
pop
xchg
mov
jge
pop
scas
std
pop
popf
adc
xor
cmp
std
gs
sub
xchg
int3
in
in
sbb
push
pop
xchg
jle
xchg
inc
lods
ror
pop
mov
sub
xor
mov
push
sbb
sub
mov
mov
arpl
std
loope
mov
repz
jge
xchg
sub
ds
dec
fsub
sbb
andb
shr
inc
cmpsb
jp
mov
push
mull
sarb
mov
lahf
aas
pop
mov
xchg
inc
mov
mov
or
lds
lods
test
pop
dec
adc
xchg
leave
jno
lods
adc
fsubl
sbb
insl
jbe
mov
addr16
inc
sbb
inc
addr16
out
cmp
adc
and
adc
and
or
dec
dec
ficomps
jo
and
xchg
clc
cli
addr16
pop
sar
int3
mov
fwait
adc
lods
shl
movsl
cs
out
lret
fs
loopne
dec
enter
mov
cmp
dec
mov
insl
pop
stos
adc
aas
mov
lea
push
mov
outsb
sbb
cli
mov
push
clc
or
xor
adc
mov
push
sub
scas
mov
add
out
loope
test
clc
and
fdivl
add
pop
pop
shrb
sbb
cmp
adc
pop
dec
shlb
int
mov
cwtl
nop
scas
push
inc
stos
sub
dec
mov
mov
dec
push
ret
dec
es
push
test
pop
aad
mov
mov
mov
lahf
cmp
mov
jb
lret
cmp
push
and
aad
fstpl
xchg
pop
or
push
mov
test
push
cmp
sti
sub
jmp
jbe
out
fcomps
xchg
mov
xchg
xchg
test
mov
cli
roll
nop
icebp
push
pop
cltd
xor
enter
mov
rorb
stos
gs
jg
mov
push
cld
adc
fisubs
push
xor
andb
stos
ret
dec
pop
cli
xchg
cmp
adc
scas
bound
dec
aaa
fbld
sahf
dec
inc
mov
push
jle
sarb
out
xchg
push
vpcmpgtw
inc
mov
scas
out
cmpsl
and
jle
call
adc
sbb
aam
negl
loop
cmp
int
mov
mov
ret
jno
ret
nop
push
jo
add
pusha
push
dec
xchg
movsl
push
jecxz
jmp
xor
mov
sbb
adc
ret
sbb
jbe
iret
sbb
cmp
in
into
and
jge
inc
sarb
jbe
cli
pusha
sbb
cmpl
in
mov
rcrl
inc
rcrb
in
lds
icebp
xchg
jl
cmpsb
pop
dec
pop
sub
shlb
lods
lahf
out
repz
lds
movsb
xchg
mov
fs
roll
pop
inc
inc
cmpsl
xlat
sbb
scas
or
dec
push
pusha
mov
shlb
out
jecxz
dec
fs
dec
in
inc
xchg
jecxz
jbe
stos
adc
loopne
test
inc
xor
hlt
xlat
sbb
imul
les
lods
adc
mov
adc
inc
sub
insl
pusha
mov
data16
cmpsl
jne
mov
xchg
aad
sub
dec
sbb
popf
gs
rorb
popa
lds
push
xchg
add
scas
stc
neg
mov
loopne
jmp
add
insb
xor
jmp
push
push
xor
dec
shrl
rcr
cmp
xor
sbb
xchg
fsubs
or
arpl
mov
mov
into
leave
dec
pop
movsl
aas
es
inc
and
cld
sbb
push
add
hlt
dec
adc
jne
jmp
xchg
mov
pop
adc
out
pop
push
pop
scas
adc
push
scas
cmp
add
jg
lods
and
mov
sbb
jnp
mov
les
adc
and
dec
popf
inc
int3
loopne
sub
pop
lret
test
movsl
data16
in
into
push
jl
lods
sbb
push
mov
icebp
xor
ficoml
pop
incl
fidivrs
ja
in
push
sub
out
add
inc
inc
cs
aaa
sub
push
pop
or
popf
xchg
push
addl
testl
loopne
jecxz
fdivs
inc
lea
nop
stos
nop
lcall
ss
scas
imul
push
js
arpl
inc
push
ss
cmpsl
call
ret
mov
sahf
rol
inc
flds
push
cwtl
push
jns
push
sbb
dec
dec
jg
xchg
mov
addl
xchg
sbb
xchg
sahf
sti
out
sbb
adc
xchg
lcall
dec
add
jecxz
rcl
leave
repnz
rorb
mov
outsb
inc
sub
inc
ret
add
adc
add
dec
lds
pop
cmpsb
jns
push
mov
popf
hlt
hlt
mov
addl
ss
inc
mov
rcl
push
cmp
aas
in
pop
test
fdivs
movsl
or
ret
stc
mov
mov
cmp
insl
xchg
mov
lods
add
pop
lea
daa
sbb
dec
pop
adc
jle
mov
repnz
pop
or
push
push
je
lahf
sub
jl
and
sub
int
ja
pop
insb
sbbl
push
and
push
test
push
popf
jb
data16
push
sub
push
xchg
adc
out
rcll
movsl
fwait
push
iret
rcr
mov
ficompl
jns
pop
push
ja
pop
ss
pop
flds
pop
cmpsb
cmp
cmc
out
mov
push
push
mov
pop
insb
sbb
cld
mov
mov
cwtl
add
sub
fwait
test
incb
lea
movsb
mov
dec
add
xchg
inc
addr16
popf
pop
or
xchg
ss
and
hlt
mov
mov
testl
pushf
std
cmp
mov
push
fidivrl
imul
les
insb
lcall
cmp
lea
lahf
dec
popa
pop
mov
cmp
mov
jle
in
lret
and
cwtl
jg
dec
add
call
movsb
out
pop
xchg
and
sub
stos
mov
divb
roll
inc
cmp
xor
es
aam
mov
sarl
pop
xlat
mov
pop
cs
push
add
adc
push
setg
test
into
jns
repnz
xchg
enter
lods
insl
fildl
daa
xchg
js
add
movsb
cmpsl
fmul
rcll
andl
shrb
xor
and
xlat
mov
adc
adcl
dec
jne
aaa
or
in
sub
into
xor
jo
cmpsl
mov
aas
cmp
packssdw
cmp
push
lret
enter
mov
jo
cmp
les
adc
sub
push
in
mov
xor
xchg
rclb
xchg
loopne
out
lods
sbb
fistpl
fsubl
add
scas
iret
jge
mov
pop
sar
subb
in
xor
into
jmp
iret
cltd
popa
negl
clc
push
popf
bound
and
sbb
pop
icebp
dec
out
or
mov
sub
dec
adc
dec
dec
loope
pop
hlt
adc
mov
idivl
mov
ficoms
test
ror
outsl
mov
rorb
insb
pop
xor
cmpsb
insl
pop
cwtl
sbb
pop
inc
push
je
aad
lock
adc
aam
int3
lcall
mov
hlt
xchg
push
push
xor
push
stc
sti
lods
fwait
rcll
inc
leave
jne
jecxz
dec
mov
pushf
and
jns
mov
and
jp
int
imul
subb
cmp
jb
mov
mov
or
sbb
lcall
ret
lock
fs
daa
cmp
mov
scas
sub
jo
shlb
fistl
xchg
inc
shr
in
add
mov
std
xchg
mov
jmp
cmp
jo
clc
cmpsb
adc
cmpsl
mov
dec
sbb
lret
faddp
push
fnstenv
out
or
xchg
imul
fidivs
mov
arpl
jnp
outsb
xchg
xchg
mov
jp
add
jmp
xchg
pop
jae
loope
repz
cmp
dec
pop
and
or
aad
mov
xchg
xchg
aaa
mov
pop
mov
or
or
sub
sahf
dec
push
dec
and
rclb
xchg
and
sub
incl
pop
clc
mov
loope
mov
int3
push
or
ds
imul
and
push
mov
sub
cmp
movsb
add
dec
sub
push
xchg
test
fidivs
push
mov
arpl
push
cmp
push
aaa
push
sub
js
mul
iret
mov
add
and
out
mov
insb
imul
jge
jg
js
daa
mov
shrl
and
xor
loop
jp
pop
jb
dec
xlat
cmpsb
xchg
adc
inc
xchg
ds
and
mov
mov
mov
adc
icebp
sahf
inc
push
mov
jle
hlt
xchg
dec
mov
xchg
ja
xchg
ficomps
mov
inc
xor
cmc
pop
stos
xchg
pop
mov
rcrl
jecxz
pop
and
lds
mov
pop
sub
pop
and
pusha
enter
mov
ss
iret
lahf
montmul
cmpsb
adc
shll
cmp
jo
add
push
sub
xorb
push
dec
loope
mov
fbld
mov
aad
lahf
insl
and
in
and
dec
aad
push
jle
mov
mov
adc
cmp
pop
add
and
imul
lods
push
sub
mov
test
loop
mov
mov
fimull
sahf
lds
sbb
xchg
lcall
sub
lods
pop
and
gs
sti
xchg
sbb
xor
jg
jg
test
je
add
jmp
sub
push
jmp
scas
pop
loop
lret
inc
call
rol
jge
jp
cs
push
add
sub
loop
out
add
cmp
mov
and
push
clc
inc
shrb
jp
xor
in
outsb
xchg
or
sub
lea
sub
xchg
shlb
out
xor
adc
cld
movsb
push
icebp
movsl
scas
add
mov
imul
test
add
enter
dec
out
pop
jbe
ljmp
aas
xchg
lea
mov
push
andl
mov
add
xlat
jle
cwtl
sbb
arpl
pop
pop
mov
iret
inc
push
push
iret
adc
xchg
stos
mov
or
sar
mov
mov
sbb
mov
mov
sub
or
shll
sbb
test
es
inc
fwait
in
xchg
insl
mov
inc
adc
add
imul
iret
ficoml
sbb
movsl
cmp
es
in
xor
out
add
pusha
lret
das
fldenv
mov
test
lret
and
aad
lret
xchg
test
dec
cmpb
movsl
mov
or
and
ja
xchg
adc
jl
adc
and
lds
dec
sbb
inc
mov
pop
imul
and
pop
jbe
outsb
outsb
cmp
mov
ja
imul
scas
shll
mov
leave
fs
push
insb
enter
repnz
inc
xlat
pop
pop
lahf
out
pop
adc
ret
test
mov
or
mov
sbb
fbstp
mov
sub
mov
dec
stos
stos
in
push
mov
mov
les
pop
and
mov
xor
std
dec
dec
mov
stos
fwait
xlat
sub
subl
out
sahf
jmp
repnz
jo
add
ret
test
call
dec
sub
cmp
pushf
dec
fs
decl
mov
xor
ror
or
add
or
cmpsb
inc
adc
push
push
test
push
mov
sahf
sbb
cs
outsl
scas
lret
stc
je
inc
fdivrl
jnp
mov
sub
imul
xor
add
imul
arpl
jge
scas
std
push
sub
mov
sbb
mov
jl
xor
push
mov
fildll
mov
addb
int
aas
add
stos
add
outsb
outsb
adc
pusha
outsl
cld
push
int3
jg
adc
lcall
and
mov
and
scas
xchg
push
ss
sbb
push
lock
lods
insl
cmp
sbb
lds
rcrb
jbe
mov
ret
push
inc
adc
mov
testl
xor
or
stc
or
xlat
push
jp
sbb
push
lret
jmp
and
mov
push
data16
add
cmp
sarl
and
int
nop
leave
cmp
imul
outsl
fldt
mov
sbb
jmp
fdiv
sbb
scas
sub
fs
scas
pop
inc
ja
push
std
push
es
clc
xor
fsts
js
push
out
pop
fisttps
iret
pop
loopne
nop
fistl
dec
repz
std
pop
push
aad
pop
xchg
mov
and
lea
mov
sub
movsl
push
xchg
adc
cmp
inc
adc
xlat
nop
sarl
jg
popl
inc
testl
and
jns
push
rorl
sub
xchg
adc
jp
sub
xchg
add
enter
hlt
fs
xchg
notb
push
xor
and
ljmp
repnz
xchg
jl
inc
cltd
xchg
or
fdivrl
mov
lahf
xor
lret
inc
mov
mov
dec
push
inc
ja
daa
add
jno
aam
daa
movsb
xor
pop
movsl
mov
inc
jnp
sub
push
xor
dec
insl
push
icebp
sahf
add
popf
in
mov
xchg
mov
inc
std
fxch
insb
in
lock
lret
les
and
push
je
mov
shll
sub
push
loope
sbb
sbbl
mov
jmp
lods
and
xor
cmpb
fs
cmpsb
int
sub
mov
jp
add
sbb
movsl
in
or
jmp
add
mov
bnd
jns
and
cmp
fs
decl
hlt
push
out
mov
xor
pop
xchg
cld
out
or
lock
push
icebp
inc
loopnew
outsb
xor
iret
pop
jns
and
cmp
cwtl
int
std
xor
pusha
les
push
movsb
mov
or
aaa
jmp
rorl
push
mov
movb
in
pop
inc
xchg
jne
ret
orb
jae
adc
subl
out
dec
aam
out
add
les
mov
loope
iret
shr
mov
pop
pop
mov
pop
fdivrs
inc
lret
adc
jle
add
and
test
std
pop
movsl
xchg
arpl
mov
clc
mov
in
mov
mov
into
or
mov
lds
mov
adcb
mov
push
or
and
ss
iret
cmc
or
jle
cli
jmp
jl
jg
xor
stos
sbb
pop
mov
cmc
loop
lcall
pushf
mov
mov
mov
adc
arpl
cs
dec
sbb
xchg
mov
pop
pop
jge
jns
pop
fcoms
xor
mov
xlat
cmpsb
ret
pop
fwait
rcll
inc
adc
aas
mov
ljmp
hlt
fs
icebp
leave
das
inc
mov
push
mov
pushf
or
shll
pop
mov
in
sub
lahf
ljmp
das
in
test
xor
lock
xchg
jbe
ret
data16
dec
dec
cmpl
enter
add
mov
lea
cmpsl
and
dec
inc
iret
negb
loop
loop
lea
ja
xor
pop
gs
je
cwtl
lds
les
inc
inc
sub
adc
scas
fcos
xchg
xor
cmp
sub
fidivrl
clc
leave
imul
idivb
adc
xor
mov
dec
sub
out
add
inc
js
jb
mov
xchg
pop
je
icebp
jae
outsl
sbb
jle
push
outsb
mov
jns
inc
mov
sub
mov
in
in
push
pop
cld
and
xchg
das
mov
sub
add
add
add
inc
nop
or
xor
or
dec
nop
or
pop
nop
or
add
add
dec
nop
or
pop
nop
or
add
add
imul
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
