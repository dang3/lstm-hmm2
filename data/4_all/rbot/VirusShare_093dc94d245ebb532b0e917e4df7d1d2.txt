call
in
sub
push
push
lea
push
push
xor
call
cmp
pop
and
add
je
push
mov
add
push
push
cmp
lea
push
xor
jl
adc
aaa
jnp
push
dec
adc
cmp
les
fdivrs
pushl
pop
inc
push
ds
push
or
add
mov
push
add
and
or
leave
ret
fucomip
leavew
cmpsl
push
cmp
test
pop
jle
mov
pushl
add
cld
pop
add
sbb
sub
adc
lods
bnd
jbe
jo
aaa
mov
inc
cmp
push
je
cmp
ja
mov
xor
and
cwtl
add
mov
and
mov
mov
add
mov
push
mov
sbb
add
add
mov
outsb
mov
xchg
pushf
push
int3
imul
mov
add
cwtl
sti
ja
popa
jg
sarb
sbb
inc
or
pusha
out
test
add
pop
lea
cmp
std
push
push
xchg
push
movsb
test
and
out
in
xlat
mov
and
data16
sub
ficomps
stc
push
mov
std
out
fisttps
leave
xor
cmp
mov
sbb
inc
out
add
push
jmp
xor
or
out
add
sbb
mov
push
add
icebp
mov
add
or
or
push
push
sbb
sbb
in
pushf
pop
pop
je
mov
mov
sbb
sbb
sub
or
ja
es
inc
dec
jmp
lcall
adc
inc
push
or
and
fwait
rcrl
stc
push
pop
xor
adc
js
xchg
inc
ret
push
inc
sbb
xor
in
fsubs
mov
and
pop
pop
pop
pop
and
and
jmp
jo
or
jae
sub
fmuls
pop
fldt
cmpsb
das
movsb
pop
adc
cmp
rep
or
mov
cmp
pop
mov
or
fnsave
jne
add
cld
lock
lea
pop
jbe
xor
jmp
cmp
push
fiadds
ds
outsb
int
hlt
mov
and
jle
lcall
inc
hlt
clc
fbld
pop
es
cld
cld
mov
cmp
jne
insb
divl
or
adc
or
add
rorl
pop
push
and
mov
incl
popf
push
mov
ret
xlat
fisubrs
mov
cmp
pushf
outsl
or
movw
call
sbb
mov
jle
add
push
sub
in
pushl
push
or
inc
inc
adc
out
or
rcl
loopne
mov
or
mov
mov
or
shl
outsl
imul
setg
pop
xchg
icebp
mov
jge
mov
lahf
push
pop
lea
mov
ret
mov
dec
mov
xchg
icebp
mov
add
pxor
and
andnps
div
pop
jmp
pop
scas
pop
jnp
mov
xor
arpl
shlb
imulb
adc
addl
inc
adc
sub
xor
fistpll
inc
sub
jge
pop
jnp
pusha
push
pop
sbb
sub
push
mov
outsl
insb
das
in
scas
sub
insb
add
jle
insl
sub
jne
mov
mov
mov
sbb
xor
jae,pt
sbb
movl
mov
mov
insb
clc
cmc
and
aaa
sub
mov
or
jns
cmp
ficomps
mov
or
in
test
xchg
jb
mov
or
mov
test
cwtl
lea
cld
out
ret
mov
mov
les
cld
loope
fldt
mov
jnp
addl
xchg
jns
popf
cmp
test
push
loope
xor
out
and
adc
add
push
lock
idivb
mov
into
mov
dec
aam
dec
adc
les
cmp
push
mov
cmp
push
shll
mov
or
in
roll
mov
ret
jnp
aaa
cmpb
cwtl
jne
push
sbb
mov
fs
push
scas
les
inc
mov
out
push
jnp
out
ret
aam
xor
cmc
dec
mov
inc
andb
hlt
push
aam
fsubrl
jnp
es
xchg
jb
pop
js
xchg
add
imul
mov
dec
inc
je
xor
xor
sub
insb
fs
mov
sub
call
inc
cmp
aaa
add
shlb
ljmp
jle
and
cld
je
jmp
fcmovnbe
out
fdiv
and
add
rorb
into
mov
dec
or
stos
ja
test
and
pop
push
or
or
mov
cmpsb
and
or
aam
push
outsb
pop
clc
fs
push
andl
push
mov
mov
jle
ds
push
sbb
arpl
aas
in
add
cmp
add
inc
les
imulb
inc
not
xlat
sahf
cmp
in
push
cmp
out
mov
push
cwtl
adc
fdivs
add
mov
popf
and
aam
push
shlb
adc
sub
push
or
push
sahf
lcall
lods
outsl
sub
and
cmp
or
dec
cmpw
add
ja
push
dec
setnp
push
mov
mov
pop
lods
push
dec
not
adc
cmp
out
cmc
sub
xchg
push
mov
fidivrs
movzwl
jns
scas
push
pop
cli
add
lock
bound
mov
sub
dec
call
fsubr
inc
push
push
out
mov
xorb
mov
add
repnz
cmc
cmp
and
daa
jne
push
pushl
push
add
loop
pop
sbb
sub
jle
lret
fld
push
ret
adc
lret
mov
ret
jne
or
lods
imul
popf
sbb
insl
push
pusha
mov
in
sar
pop
pop
push
ss
cmp
mov
ret
jb
adc
jne
push
jb
or
xor
sbb
mov
pop
push
std
sahf
or
gs
lods
je
jne
ss
mov
cmp
cmp
mov
cmp
sbb
cld
bound
push
insb
adc
shll
or
insl
enter
jno
dec
fimuls
xor
xor
divb
insb
mov
and
pop
call
dec
push
xchg
sub
xor
iret
ret
aam
jno
cmp
mov
add
gs
cltd
aas
mov
outsl
add
mov
jno
pusha
out
inc
add
cmp
je
aam
mulb
scas
mov
xor
jno
jmp
or
pop
adc
mov
sbb
xchg
jb
inc
mov
add
rcrl
mov
sbb
call
push
lret
pop
stc
pop
jl
mov
dec
call
xor
sbb
push
call
dec
insl
lcall
in
jl
xchg
jmp
repz
push
shll
mov
out
das
lock
push
push
es
movl
mov
ja
je
mov
xor
lcall
cld
or
add
mov
adc
sahf
cmp
mov
adc
aaa
sbb
outsb
cmp
jp
xor
inc
flds
cld
sbb
test
dec
push
push
adc
sbb
push
mov
push
std
imul
mov
and
pop
das
push
pop
leave
movsb
jecxz
add
out
mov
or
and
sbb
call
push
pop
push
lea
pop
pop
inc
pop
test
mov
and
lcall
decb
or
mov
push
push
orb
push
xor
in
icebp
mov
sub
push
movsb
mov
dec
mov
mov
push
or
push
hlt
add
sbb
call
dec
jae
incl
or
mov
mov
jmp
mov
mov
nop
xchg
push
fsts
pushf
mov
sbb
pop
push
pop
lcall
xor
jnp
inc
push
test
cmp
stos
mov
mov
add
mov
add
mov
push
sub
xor
pop
fidivs
sbb
ja
mov
mov
mov
add
mov
popl
orb
mov
int
ds
test
mov
mov
shl
jbe
pop
ja
add
push
rorb
add
mov
mov
les
pop
enter
mov
mov
lods
push
add
push
push
push
sbb
push
aaa
mov
sub
dec
push
icebp
pop
insb
int
rcrb
jmp
lret
sbb
sti
call
mov
sub
inc
ds
or
nop
aam
div
push
or
jmp
or
mov
or
inc
in
cli
add
push
in
inc
or
dec
enter
in
push
and
adc
ja
adc
adc
rcll
rol
sub
test
push
int3
push
push
push
fidivs
and
jge
lods
leave
sub
or
add
arpl
popa
sbb
out
mov
sub
cmp
or
inc
insb
jae
ret
pop
aaa
outsb
adc
dec
sahf
add
sub
adc
lock
add
pop
or
cld
into
jno
loopne
das
mov
mov
loop
push
adc
pop
adc
adc
and
or
lret
mov
and
sub
ds
mov
lea
cwtl
imul
cmp
or
or
push
sbb
sbb
jle
clc
std
jle
add
enter
stos
adc
lret
push
xor
or
sbb
shll
jne
cmp
aam
adc
and
sbb
ja
insb
adc
cwtl
dec
cmp
nop
adc
cld
adc
add
test
sbb
sti
pop
push
hlt
mov
imul
inc
sbb
push
lea
add
push
dec
push
mov
into
rolb
aam
pushf
push
movb
gs
xchg
in
add
adc
push
push
sbb
jno
xchg
mov
sub
test
pop
popa
push
sbb
hlt
add
mov
and
lea
outsl
dec
mov
and
add
sbb
xchg
cld
push
fidivl
cs
je
xor
jbe
loopne
inc
pusha
imul
iret
jl
pop
loope
and
push
out
add
push
daa
movsl
or
sbb
sub
adc
adc
pop
lahf
int
dec
mov
sbb
call
push
inc
pop
loopne
fistpl
adc
cmp
negl
loopne
jmp
push
sub
push
insb
mov
addr16
or
mov
lea
xchg
add
daa
mov
jmp
adc
call
push
ss
xchg
addr16
pop
jmp
in
add
push
rolb
in
loope
inc
inc
hlt
cmp
inc
xchg
lods
cs
arpl
jl
ds
dec
and
ja
call
fnstenv
ret
shr
mov
inc
dec
jo
jp
jne
pop
call
sbb
cli
push
imul
mov
jbe
xchg
bound
dec
sub
pop
push
mov
push
inc
imul
imul
push
ret
mul
add
outsl
or
jg
testb
je
dec
daa
add
adcb
sbb
ss
cli
push
pop
push
jne
jbe
mov
arpl
ret
sbb
fidivl
fcoms
mov
test
in
sbb
sub
icebp
out
fsubrl
lds
sbb
rcrb
rcr
in
aas
clc
push
call
std
icebp
imul
incl
add
mov
jmp
sub
fistpll
mov
add
or
push
pop
mov
jmp
adc
cmp
mov
cmpsb
inc
or
pop
cs
movmskps
test
popf
movsb
mov
cwtl
mov
or
pusha
notb
test
push
enter
push
icebp
add
fsubl
jb
in
ljmp
imul
aas
popf
mov
pushf
loopne
insl
pop
sbb
sub
loopne
loopne
jge
loope
in
fdivr
or
push
mov
push
ret
jl
cmc
leave
pop
mov
add
call
push
int3
leave
adc
shrl
orl
shlb
jae
push
jmp
mov
inc
adc
push
bound
mov
jnp
jle
aas
cltd
fwait
int
test
pop
or
ficoml
daa
sub
mov
push
test
sub
nop
mov
pop
js
jmp
adc
call
data16
in
inc
enter
pushf
dec
sti
dec
sti
jle
xchg
inc
andb
or
nop
cmp
adc
inc
sub
imul
add
aaa
movsb
adc
sub
adc
ss
mov
or
icebp
mov
add
lea
mov
mov
and
xchg
and
cmc
call
lds
mov
sarl
test
xor
push
push
jb
jl
push
test
subl
or
jne
cmp
push
pop
adc
jmp
jle
mov
or
pop
push
pop
jmp
jle
push
mov
and
push
pop
push
pop
or
adc
push
push
leave
add
lock
lock
bound
or
adc
clc
sub
jae
push
mov
xchg
add
hlt
inc
push
jne
loopne
test
call
inc
add
adc
inc
and
jae
dec
shlb
rorb
fcompl
mov
sbb
enter
sti
scas
push
mov
and
inc
adc
enter
sbb
inc
xchg
insb
xor
leave
mov
dec
out
lock
rclb
push
scas
arpl
movsl
dec
push
imul
mov
inc
mov
mov
push
pop
pop
jmp
adc
xor
xor
xor
sbb
mov
roll
and
push
sbb
pop
fwait
je
push
cmp
insl
add
mov
fstps
rol
dec
or
gs
add
insl
mov
mov
push
xchg
std
pop
or
cmp
jmp
or
inc
xor
push
ja
push
jbe
aaa
dec
lret
rclb
rcrb
insb
inc
aam
pushf
cmp
xor
sub
ja
lods
rorb
ss
cltd
lods
insb
inc
and
mov
or
add
testb
movsbl
mov
cld
stc
sub
jmp
popf
insb
sub
jbe
push
push
cwtl
jp
jmp
push
push
jb
mov
add
xor
xor
loop
push
sbb
xchg
test
jb
adc
aam
push
insb
and
pusha
scas
push
add
inc
mov
push
adc
and
cmpl
loop
insl
mov
push
cmpsb
add
flds
fcompl
and
xor
xlat
mov
addr16
fsts
in
in
mov
add
xlat
pop
sbb
or
xor
push
jmp
push
cmp
jl
jge
lea
cld
cmc
out
push
repnz
cs
cmp
cmp
loopne
rcrb
push
adc
outsb
add
xchg
push
cltd
add
cmp
sbb
push
hlt
aas
repz
shrl
cld
or
sub
pop
mov
mov
cmpsb
inc
orb
sbb
adc
add
mov
mov
add
jnp
sbb
adc
mov
add
mov
insb
dec
pop
and
and
fcoml
jb
push
mov
dec
push
pop
jbe
push
push
jne
repnz
in
push
dec
jmp
inc
mulb
inc
sub
int
cmpsb
dec
mov
push
xchg
in
popf
pop
push
push
push
pushf
or
jg
jns
test
pop
ss
insl
pop
inc
fiadds
pop
inc
shll
or
in
ss
or
fadds
loopne
inc
xchg
add
repnz
push
inc
cmp
and
mov
and
add
cs
testb
add
and
adc
add
pop
or
pop
mov
pop
mov
dec
inc
popa
jmp
xchg
xor
cwtl
jg
jo
adc
in
jns
call
add
subl
and
pushf
add
popa
mov
push
jnp
jp
shll
or
js
jbe
xchg
xchg
pop
sbb
pop
in
xorb
pop
push
adc
je
mov
add
cmc
or
mov
insb
inc
xor
sbb
or
jnp
hlt
mov
mov
push
bsr
or
rep
stos
mov
push
pop
loopne
xlat
sbbl
stos
and
test
push
xor
mov
lea
dec
fsub
push
fildll
idivb
mov
out
sbb
mov
fsubs
sub
insb
mov
adc
js
mov
or
pop
mov
rcll
adc
andl
pop
lret
loop
fdiv
mov
fidivl
loop
pusha
mov
loope
out
adc
sbbl
loope
add
mov
cmovle
call
test
pcmpeqw
pop
inc
ss
add
out
mov
adc
iret
mov
adc
imul
cmpsl
scas
mov
sarl
and
out
add
nop
inc
adc
shl
and
or
xor
aaa
cmp
mov
push
inc
cmp
insb
fs
mov
inc
je
xor
add
dec
int3
pop
idiv
cmp
jne
cmpl
push
cmpsb
or
add
adc
or
push
dec
or
push
out
out
out
and
xchg
mov
lea
xor
mov
aad
sub
aaa
push
push
int
lods
cmp
out
cmp
mov
mov
push
mov
ret
add
add
push
add
xchg
out
mov
cmp
or
or
cltd
fs
jl
xchg
dec
inc
xorb
mov
int3
int3
les
sbb
icebp
lea
or
loopne
and
enter
cli
push
or
mov
mov
mov
pop
or
repnz
xchg
adc
add
mov
cmp
and
or
in
js
ret
adc
inc
inc
adc
xchg
jl
or
nop
inc
fsubrl
or
adc
push
dec
dec
ds
movsl
shlb
jne
es
lds
addl
cltd
les
and
cmpb
or
test
std
push
adc
xchg
add
push
scas
cli
adc
xchg
sbb
test
xor
push
jge
jle
js
cmp
in
cld
inc
mov
and
out
rcll
cltd
mov
jbe
sub
push
pop
cmp
mov
pushf
filds
call
pop
fsubrp
xchg
ficompl
clc
fistl
or
popf
out
inc
cmp
add
and
mov
mov
loopne
mov
inc
xchg
mov
jb
repz
in
sbb
lods
jmp
cld
cld
popa
orl
jmp
icebp
movsb
or
push
shlb
dec
and
enter
mov
jne
daa
pop
clc
or
daa
adc
adc
in
push
add
loop
adc
inc
lcall
cli
ljmp
jb
adc
add
mov
das
inc
dec
push
jl
jmp
fmul
subb
movsb
in
pusha
pusha
mov
js
sbb
dec
mov
push
jne
inc
dec
jecxz
nop
shrb
or
mov
cmpsb
mov
jbe
call
out
test
adc
ljmp
jae
out
into
lock
and
push
and
jbe
nop
mov
push
leave
push
sub
dec
and
int
ret
ljmp
inc
addl
dec
and
scas
mov
lods
insb
adc
lret
xor
push
cmp
fcompl
adc
in
cld
add
fs
mov
xchg
out
sub
push
jmp
xor
aaa
dec
inc
mov
dec
out
out
add
test
int
mov
inc
push
in
jge
in
loopne
mov
pop
jne
scas
icebp
add
xor
in
in
in
fdivs
add
js
sub
xchg
add
movsl
or
lock
adcb
xlat
test
je
push
data16
jno
mov
mov
mov
jae
add
cmp
mov
fwait
add
sbb
sub
test
push
aaa
inc
test
fists
push
mov
outsl
xor
mov
add
addl
cmp
sbb
lcall
pop
sbb
mov
push
insb
mov
rcrb
push
imul
test
or
mov
sub
cmp
pop
outsb
lret
adc
add
pop
rol
inc
aam
aad
dec
fidivrl
fdivrl
iret
movzwl
cltd
mov
sbb
pop
push
push
xor
pop
in
aad
xchg
repnz
jbe
mov
hlt
push
stc
add
push
frstor
stc
add
push
sbb
jmp
push
mov
jae
cltd
push
lods
cmc
dec
add
ficompl
rolb
mov
push
xor
cli
xchg
or
incb
adc
push
add
push
push
repnz
mov
push
mov
add
adc
jne
negb
push
call
ss
push
jae
add
call
sbb
or
cmp
clc
pop
or
jecxz
mov
data16
psubusb
pushf
add
sti
mov
push
xchg
fprem1
lret
xchg
mov
mov
popf
adc
insb
adc
pop
sbb
xor
pushf
sub
in
pop
sbb
test
and
lock
push
xor
pusha
inc
sub
xchg
xor
test
sub
enter
pop
aam
add
pop
lds
inc
test
inc
enter
mov
ret
sti
mov
sbb
mov
jl
aaa
popa
pop
pop
movsl
push
je
xor
jo
adc
inc
fucomip
roll
adc
lcall
addl
mov
mov
scas
loopne
mov
dec
sbb
sub
xor
or
xor
xor
adc
inc
call
cltd
testl
inc
stos
xor
or
inc
inc
scas
mov
fs
sarb
sbbb
lea
add
add
pop
lods
mov
ss
insb
sarl
sahf
jae
sbb
cli
inc
mov
mov
push
pop
shl
cli
or
fnstcw
cmp
xor
sbb
push
jge
pop
sub
mov
test
mov
add
adc
imul
cmp
insb
or
push
fsubr
into
mov
loopne
mov
je
mov
xorb
sahf
or
test
adc
lret
sub
cmp
insl
cwtl
in
jbe
mov
incb
lret
jbe
mov
push
les
jge
ja
mov
shr
daa
mov
inc
mov
xchg
push
jge
add
push
push
andb
js
xor
mov
orb
aad
dec
dec
je
negb
push
jp
pushf
in
push
push
xchg
dec
sbb
mov
cmp
xor
fcmovnb
sbb
div
or
or
in
jecxz
test
out
pop
mov
scas
pop
mov
adcl
sbb
mov
pop
in
dec
das
adc
mov
cmp
adc
mov
movsl
fildll
jge
fmull
ss
adc
push
inc
adc
in
xchg
jb
pop
sbb
mov
in
add
xor
pushf
push
push
daa
in
popa
cwtl
insl
rcrb
xchg
test
or
js
and
gs
fistps
xchg
sub
ja
or
pop
push
les
sbb
fdecstp
nop
es
rcr
sub
push
int
scas
rol
fsts
cmp
sub
or
and
icebp
pop
insb
ja
mov
jmp
adc
int3
cmp
adc
or
std
and
jp
negl
mov
jno
jl
cli
pop
mov
xor
mov
mov
pop
xor
inc
cmp
jl
cli
loopne
adc
mov
std
mov
daa
sub
outsb
and
xor
andb
fmull
pushf
fistl
xlat
pop
or
clc
or
cmp
inc
push
insb
or
xor
das
jno
jo
aaa
or
inc
or
push
in
add
sbb
test
aaa
lds
std
movb
inc
jmp
pop
in
push
mov
inc
dec
popa
adc
cmp
jae
andb
push
sti
movsl
andl
out
dec
je
dec
add
add
clts
mov
xchg
xchg
xchg
mov
add
popf
xchg
mov
enter
mov
into
in
mov
adc
daa
mov
clc
and
lock
inc
pop
mov
add
call
mov
arpl
mov
add
add
adc
shl
pop
mov
push
jns
call
push
cmpsb
xchg
lock
hlt
xchg
clc
cld
mov
add
sbb
imul
mov
std
jp
call
push
and
xor
lock
dec
ja
push
es
mov
push
mov
loopne
gs
testb
aas
sbb
icebp
sbb
outsl
mov
sbb
jae
adc
dec
stc
inc
in
addr16
sub
add
in
xlat
lcall
add
ficoms
push
push
test
and
fwait
sbbb
xchg
pop
sub
add
cmp
cmp
xor
addb
int3
add
lock
aad
xor
and
aam
inc
jae
sar
int
add
mov
mov
mov
outsl
daa
pop
sub
jo
push
adc
pop
mov
je
push
in
gs
push
dec
loopne
push
push
push
jne
push
add
je
xor
jb
xchg
jge
or
and
aaa
and
pop
dec
push
imul
add
test
xor
lods
pop
push
or
cmpsb
loop
movsb
std
popf
and
mov
push
dec
in
fsubl
test
mov
add
fidivl
ss
imul
sbb
mov
push
hlt
movsl
fs
cmpb
push
test
and
mov
pop
dec
jb
pushf
jmp
popa
jb
add
fs
icebp
testl
jmp
bound
pop
popa
pop
pop
popf
sbb
pushf
pop
fs
cmp
ds
mov
push
mov
fprem
sbb
push
mov
sub
es
push
pop
push
add
pop
adc
mov
pop
push
inc
mov
dec
add
jnp
subl
mov
popf
sub
inc
ja
adc
push
outsb
mov
jbe
jno
sbb
je
cmpb
outsb
mov
jmp
je
in
in
push
popf
inc
mov
sbb
jbe
inc
or
adc
cld
push
add
or
out
fmul
fs
or
xor
push
cld
lods
fisubrl
call
insl
aas
xchg
push
add
sbb
lods
in
dec
nop
insl
and
mov
push
sub
test
aam
mov
or
jge
sub
adc
jle
pushf
je
dec
inc
cld
and
inc
cmp
jl
xor
test
adc
sbb
push
decl
dec
push
je
addl
cmp
push
mov
movsb
add
add
inc
cmpsb
push
jns
dec
sar
sbb
and
jmp
out
iret
lcall
leave
jne
pop
mov
push
add
or
xchg
push
xor
mov
leave
popa
adcl
call
push
sar
sbb
pop
mov
and
xchg
pop
jae
xor
fistpll
gs
gs
push
fiaddl
push
insl
mov
add
xchg
cs
jae
es
pop
or
outsl
setge
inc
jmp
es
cmpsb
es
negb
push
mov
jp
xlat
mov
ret
inc
cmp
in
add
adcl
xor
push
int
push
popa
mov
cmpsb
mov
sub
jnp
addb
pop
test
aam
xchg
test
test
iret
stos
mov
mov
mov
cmp
adc
sbb
add
in
push
mov
add
mov
add
jge
inc
sub
jbe
push
push
sti
adc
cld
aam
out
nop
int
inc
add
mov
mov
mov
dec
sub
lods
sbb
add
pop
inc
stos
aad
or
clc
int3
inc
pusha
testb
leave
test
jbe
cmp
lret
jb
add
sbb
mov
mov
pop
mov
pop
or
inc
cmp
test
mov
enter
sub
fwait
add
sbb
adc
jg
or
sub
jnp
push
rolb
cmp
ret
pop
lods
jge
sbb
mov
push
mov
data16
shll
xchg
daa
int
sbb
push
and
pushf
je
stc
cmp
std
ja
addr16
test
test
fisubl
push
pop
fwait
pop
add
adc
cmp
ss
pop
pop
fistpll
inc
add
or
mov
adc
or
adc
dec
repz
cmpl
xchg
mov
popa
fdivrs
cmp
pop
jb
xchg
adc
out
enter
jmp
das
iret
mov
imul
pop
ljmp
cmp
xor
mov
dec
lods
xor
or
inc
jl
aad
and
mov
cld
test
push
std
mov
xchg
movsl
clc
mov
out
sbb
pop
push
popf
mov
jne
push
sbb
lods
sahf
jl
mov
cli
fists
mov
xchg
pop
adc
dec
mov
cs
in
push
xor
sti
pusha
in
and
dec
lods
add
cld
jo
je
rcll
or
adc
mov
into
test
cmc
test
repnz
cwtl
pop
mov
cmp
inc
dec
jo
pushf
and
xchg
xorb
push
adc
cli
leave
insb
cmpl
mov
xor
pop
xchg
imul
pop
push
mov
clc
cmp
jns,pn
sbb
push
sub
push
fisubs
test
and
fs
flds
leave
jne
cmc
sbb
fsub
roll
push
jb
sbb
xchg
popa
sbb
dec
icebp
add
push
sbb
call
sbb
test
shrb
test
std
nop
clc
mov
lret
or
adc
sbb
mov
jle
movb
push
data16
pusha
ss
ret
int
jae
fwait
inc
jbe
ds
sub
icebp
inc
mov
xor
adc
jne
div
and
inc
movb
pop
and
sbb
sub
fldenv
pop
inc
jmp
push
mov
sub
jb
lds
mov
pusha
movsb
in
or
adc
adc
dec
mov
sub
mov
enter
push
in
add
jg
mov
out
std
insb
pop
add
cmp
popf
cmp
push
xor
je
adc
push
mov
jno
pop
adc
and
adc
cwtl
lcall
inc
out
xchg
inc
sbb
shlb
mov
dec
fmuls
mov
push
pusha
daa
xchg
nop
faddl
scas
or
leave
inc
add
pop
ss
lock
push
test
xchg
inc
sub
aam
adc
add
clc
gs
xchg
notrack
lret
dec
or
or
add
dec
cmp
inc
outsl
pop
push
jno
cmp
xorl
lahf
xor
and
popa
lock
sbb
xchg
add
push
mov
out
dec
inc
push
push
inc
or
notb
mulb
sub
dec
popf
sub
js
sbb
dec
dec
xor
sbb
inc
mov
xchg
int
mov
push
movsb
xchg
add
lgs
pop
flds
or
adc
inc
insb
xchg
pop
stc
xchg
gs
out
ja
movb
push
dec
dec
mov
xor
inc
sub
pop
jmp
pop
cltd
inc
mov
imul
or
fwait
lock
stc
cmpb
je
dec
jne
inc
push
xchg
and
sub
and
mov
pop
enter
or
cld
xchg
adc
sbb
mov
fstps
adc
pop
and
insb
add
mov
leave
xchg
xorl
rcrl
call
fwait
sub
cmp
mov
xchg
sub
sahf
into
mov
dec
repnz
add
mov
push
sbb
test
insl
test
xor
in
inc
lcall
mov
adc
sbb
adc
add
inc
into
sbbb
pop
jo
sub
orl
cmp
mov
ds
pop
out
fs
enter
add
adc
pop
cmp
sub
pop
dec
jbe
in
lea
pop
and
rclb
nop
push
pop
push
sbb
test
cmp
hlt
test
adc
push
and
loope
cmp
mov
outsw
push
in
cmp
and
rcll
xor
shlb
pop
pusha
out
inc
enter
push
mov
push
rcrb
push
fiaddl
test
dec
sbb
and
push
jb
push
jo
pusha
adc
jp
sub
mov
faddl
xor
mov
or
or
push
add
js
js
cs
sbb
sbb
dec
xor
dec
and
sub
inc
inc
xor
and
ret
jb
push
sbb
xchg
fadds
mov
stos
mov
inc
insb
or
insb
das
add
add
mov
adcb
addl
add
fcomps
add
inc
addr16
or
je
pop
sub
jno
add
in
adc
cmp
push
mov
jno
aam
cmp
sub
test
bound
push
mov
xchg
shlb
fcom
add
ds
push
inc
cmp
insb
out
inc
ljmp
mov
pop
fdivrs
sbb
sbb
inc
or
cmc
sub
pop
mov
je
aam
movsb
jno
inc
mov
incb
aam
mov
adc
sbb
ss
push
mov
push
sbb
lcall
or
cmp
fsubp
mov
adc
push
adc
subb
mov
call
mov
nop
mov
sbb
mov
inc
adcb
cld
fistpl
int
pop
lods
jl
out
mov
inc
outsl
push
sbb
dec
lds
inc
push
orl
lea
nop
in
xchg
add
mov
push
pusha
dec
cs
pop
js
jbe
adc
pop
xchg
sarl
in
push
cs
in
sbbb
push
inc
xchg
add
xchg
sub
cmp
sub
mov
pop
enter
sbb
out
mov
inc
aaa
cwtl
aam
mov
insl
out
sbb
and
adc
sub
and
dec
and
fadd
jecxz
or
inc
mov
inc
jmp
fsubl
mov
add
sub
std
add
movsl
out
push
pop
lock
nop
cs
pushf
mov
inc
pop
adc
movsl
loopne
xlat
push
ss
les
push
mov
lds
out
aas
add
shl
icebp
cmp
jbe
rcrl
cmpsl
ss
sub
out
loopne
enter
rol
jmp
int3
or
and
arpl
or
and
shll
mov
xor
push
stos
mov
je
cmp
pusha
pusha
and
pop
inc
dec
dec
mov
test
adc
mov
add
sbb
cmp
push
mov
mov
in
push
jmp
cli
adc
fidivrs
cmpsb
xor
das
aam
jns
lcall
push
sbb
enter
add
dec
aam
ret
or
pusha
add
mov
sbb
mov
enter
or
and
add
push
in
xor
xchg
jo
push
pop
ror
xor
lret
add
inc
jns
int3
mov
pop
arpl
pop
and
mov
push
adc
cs
jno
adc
adc
lds
xor
push
inc
push
dec
loop
cmp
cmpsl
cmovge
or
or
mov
insb
push
insb
mov
test
sub
push
js
inc
sbb
or
sbb
mov
xor
fs
ret
xchg
inc
enter
shrb
lcall
arpl
adc
test
movups
rorl
mov
jo
and
and
and
mov
divb
inc
jmp
mov
and
scas
cli
pop
push
dec
sub
cmp
cmp
mov
xor
bound
andb
orb
dec
push
fmull
andl
sbb
and
dec
jbe
and
add
or
sub
sub
adc
xchg
mov
xchg
add
or
inc
adc
and
cmp
daa
frstor
inc
inc
divl
sti
mov
xlat
adc
subb
mov
xchg
lret
inc
iret
inc
jl
cmc
mov
add
xchg
sub
les
push
fsubrl
flds
pop
stos
mov
mov
push
cmpl
popf
std
test
jns
push
sbb
pop
sbb
jle
cmp
jle
add
jge
movl
sub
mov
xor
add
jb
fidivs
xor
andl
das
mov
orl
movsb
adc
faddl
mov
or
mov
cmpl
push
mov
je
jg
inc
inc
cwtl
pusha
and
mov
push
mov
adc
das
outsl
add
je
add
jne
xor
inc
aad
pop
or
pop
sbbb
mov
pop
adcl
push
mov
or
sbb
inc
push
mov
jl
add
jb
push
gs
subb
and
hlt
or
inc
shll
lgs
push
das
or
cmp
push
mov
inc
je
ret
or
cld
xchg
add
rorl
cmpl
stos
outsl
add
xchg
rorb
inc
pop
push
cmovl
or
lds
jp
cmc
clc
aaa
and
popa
mov
inc
inc
pmaxub
jl
xor
ljmp
sub
xor
enter
sbb
inc
enter
in
and
jo,pn
mov
xor
mov
dec
outsl
mov
adc
or
leave
add
adc
sbb
mov
or
dec
and
aas
sbb
add
icebp
sahf
cmp
inc
inc
push
inc
add
mov
mov
or
dec
sbb
xchg
or
or
pop
adcb
push
jne
sbb
and
stos
jne
pop
clc
clc
jae
add
adc
neg
lods
popf
add
xor
sti
pop
shlb
inc
add
cld
push
xor
insb
mov
add
arpl
ret
movl
rcrb
popa
inc
addb
mov
cld
cs
daa
sti
jbe
test
add
pop
push
push
dec
push
inc
inc
dec
add
call
adc
push
leave
and
cld
push
imull
mov
xorl
sbb
sbb
jecxz
mov
out
test
repnz
xor
inc
ds
mov
insb
nop
pop
in
into
dec
inc
je
sbb
rorb
inc
cmp
insb
cwtl
dec
dec
inc
loopne
inc
shlb
and
sub
pushf
cmp
push
jbe
sbb
je
jl
cmp
jge
pop
je
movhps
insb
sbb
rclb
sub
aad
lcall
inc
jle
add
inc
insb
adc
hlt
push
jmp
jmp
lcall
es
int
and
sub
adc
popf
and
sbb
or
repz
xor
in
in
imul
fmul
and
sbb
or
leave
out
leave
pusha
mov
push
mov
mov
out
jl
adc
pop
and
pusha
pop
les
mov
push
jns
cmp
and
mov
je
mov
clc
and
pop
adc
movsl
sbb
pop
jmp
sub
jecxz
cmp
imul
movsb
jnp
add
inc
loopne
cmp
cmp
and
xchg
xchg
sbb
sbb
adc
pop
ret
or
pushf
loopne
sti
cmp
add
cmp
xchg
jl
fsub
jnp
nop
cmp
push
fsubrs
push
ret
test
faddl
dec
adc
mov
popf
cmp
mov
push
sbbb
rcrb
mov
dec
je
xor
orl
pop
sbb
pusha
rol
push
enter
lods
xor
fsubl
iret
ficomps
and
cmp
push
out
fistpll
pop
xchg
xchg
xchg
mov
or
int3
mov
mov
leave
fmul
enter
es
test
cmp
xchg
addr16
dec
mov
pop
mov
outsl
jns
mov
mov
jns
mov
loopne
lret
inc
in
and
imul
insb
imul
daa
push
or
pop
inc
sbb
xchg
mov
mov
push
nop
out
sbb
imul
shrb
lock
dec
or
push
or
fdivl
inc
jo
insb
les
and
inc
lods
pop
mov
daa
arpl
shrb
and
in
jb
push
in
jnp
pop
subb
je
fs
fs
sbb
or
fs
adc
test
repnz
fs
xor
sub
jno
sbb
int3
call
insl
outsb
sub
add
pop
fs
jl
add
in
add
enter
rcrb
lock
sahf
and
xchg
leave
or
mov
inc
inc
inc
cld
movsl
mov
inc
inc
inc
inc
jo
insb
adc
je
pop
rcrb
repnz
aam
mov
pop
pushf
shl
sub
push
mov
nop
xchg
addl
adc
and
pop
hlt
sub
xchg
push
hlt
cld
loopnew
movsb
pop
cmp
ss
mov
sbb
movsb
es
xchg
inc
pop
mov
sbbb
mov
addr16
inc
outsl
adc
addr16
pop
cmp
lock
lret
xor
sub
lret
nop
inc
dec
ds
pop
js
mov
add
push
add
jno
inc
mov
call
lret
and
movsl
pop
pop
jo
xor
mov
in
pop
mov
sar
pushf
cld
js
cld
in
data16
pop
cld
and
pusha
lock
loopne
jle
push
xor
pusha
pop
fsubl
fxtract
sahf
in
dec
xchg
data16
jb
push
or
mov
jb
lock
add
dec
sahf
and
test
push
mov
inc
lret
dec
mov
repnz
rorl
pop
repnz
add
push
stc
lock
or
pop
lock
xchg
sub
and
ds
sub
imul
cwtl
pop
pop
jnp
pop
ss
jo
nop
xchg
xor
mov
call
js
mov
loope
pop
push
push
sbb
sbb
adc
adc
mov
and
jb
pop
fdivrs
enter
gs
mov
nop
xchg
sub
in
dec
dec
push
sbb
pusha
nop
lea
adc
fs
fsubl
xor
repz
fs
cmp
add
push
jb
enter
mov
mov
sahf
daa
js
enter
fs
dec
cwtl
xchg
pop
out
call
pop
jne
sub
stos
or
cmp
fsub
adc
pushl
in
nop
lods
outsb
adc
fs
add
and
xor
mov
xchg
dec
cs
cmp
js
dec
push
cmp
in
inc
mov
mov
pop
sub
sbb
sub
dec
push
cmp
push
clc
insl
insb
jo
enter
je
or
xchg
pop
les
sbb
xchg
lods
test
nop
mov
push
jb
nop
js
insb
xchg
pop
xor
xor
inc
pop
jne
in
push
sbb
mov
mov
sub
stc
rcr
enter
mov
test
mov
add
push
subb
pusha
push
push
add
dec
sub
mov
sub
mov
incb
ja
pusha
sbb
iret
adcl
pop
cmovs
inc
adc
pop
adc
push
aas
xchg
pop
fldcw
inc
adc
xor
jmp
sub
push
dec
push
push
shlb
lock
push
loop
hlt
or
push
movsl
dec
rorl
jne
xchg
and
js
mov
push
mov
inc
std
ja
mov
cmpsl
ja
loopne
clc
sub
pusha
dec
lods
mov
jae
mov
shrb
sub
sbb
or
je
shrl
mov
inc
jnp
aas
add
stos
add
mov
xor
dec
and
dec
mov
xchg
rolb
jns
or
add
cltd
shl
mov
lock
cli
test
jo
and
mov
mov
enter
pusha
jecxz
icebp
jnp
adc
push
pushf
fisttpll
pop
inc
or
in
outsb
and
leave
dec
ds
aas
or
jmp
bound
movsl
push
xlat
inc
les
fdivl
sbb
in
xchg
fs
mov
jbe
add
cmp
mov
cmp
jl
mov
fwait
dec
leave
dec
jbe
push
mov
push
pop
push
adc
xchg
xor
push
xor
in
lock
add
push
or
test
mov
fldt
test
push
pop
shrl
mov
mov
mov
add
xchg
and
pop
xor
jne
mov
adc
jbe
adc
shlb
popa
mov
cwtl
es
inc
jb
loopne
ret
in
shl
xor
jbe
int
mov
sbb
inc
mov
inc
sub
sbb
enter
xchg
push
jno
mov
insb
adc
cmp
cmpsl
cld
adc
push
push
push
cs
lock
outsb
loope
dec
fmull
inc
je
sarl
push
lret
sahf
shll
mov
stc
jle
rcll
test
dec
loopne
test
xchg
clc
or
dec
jnp
inc
sub
aam
sub
xchg
lea
adc
shrb
or
sbb
inc
adc
mov
and
xor
out
lahf
in
jl
xor
mov
jecxz
jno
arpl
jb
push
inc
lods
in
dec
sahf
notl
test
jb
out
es
es
mov
ret
jae
lock
lods
ja
push
jmp
mov
inc
sub
sbb
fisubl
dec
pop
mov
je
nop
nop
sub
cmp
addr16
cmpsb
xchg
inc
movsl
mov
or
dec
jge
inc
jno
mov
push
mov
push
cmpb
insb
lock
add
popf
and
movsb
sub
outsl
inc
sub
inc
js
add
inc
jecxz
andb
outsb
xor
sub
sbb
fisubrs
push
and
push
jg
pop
xor
sbb
call
sub
shrb
sub
mov
inc
mov
cmpb
sub
mov
cmpb
je
add
jne
mov
inc
cmp
jl
xor
and
cmp
dec
cld
outsl
inc
aad
xor
cmp
je
cmp
push
or
inc
inc
cmp
jl
cmp
jb
shrl
and
sbb
and
adc
inc
ljmp
lea
jl
aas
mov
adc
xchg
pop
inc
mov
mov
pop
mov
idivl
pop
cmp
inc
sti
jmp
popa
pop
jl
cmp
jg
adc
or
popf
pusha
adc
xchg
popf
or
into
dec
push
stos
push
scas
sti
mov
out
adc
data16
xchg
jb
dec
jl
xor
loope
mov
or
pop
or
mov
pop
js
mulb
mov
mov
mov
jle
mov
add
stc
jge
dec
lea
aam
mov
dec
or
push
out
dec
mov
dec
shll
dec
pop
jg
aad
andb
cmc
mov
mul
inc
aad
jne
adc
push
xchg
je
adc
aas
xor
mov
mov
cmp
jg
add
add
xor
repnz
mov
sbb
je
orb
and
mov
pop
adc
sarl
push
push
rcrb
inc
insl
push
test
add
mov
imul
mov
sbb
xchg
jae
jae
or
ljmp
or
mov
sbb
out
fwait
mov
mov
inc
mov
inc
scas
pop
daa
jl
add
push
push
pop
inc
sbb
push
adc
stc
and
leave
ret
leave
xor
sub
data16
movsb
inc
or
dec
mov
repnz
and
fldt
pop
jae
fisttpl
pop
inc
jge
mov
mov
in
mov
mov
scas
clc
lds
test
mov
mov
add
mov
push
xor
jae
repnz
out
lret
and
aam
out
jmp
mov
fsubs
lcall
lds
and
xchg
ljmp
or
push
pop
stc
stc
js
movsl
jno
sbb
mov
lahf
lods
fsts
cmc
mov
adc
add
xchg
push
dec
mov
xchg
mov
inc
cmp
dec
mov
inc
mov
popa
insb
or
daa
flds
in
push
test
push
push
mov
test
mov
movsl
xchg
je
inc
push
sbb
inc
mov
pop
daa
inc
push
adc
js
test
cmp
or
sbb
lods
jo
imul
sbbl
add
mov
pop
scas
xor
mov
movsl
push
dec
in
push
cs
pop
push
fcoms
sub
jbe
pop
faddl
in
mov
add
or
pop
push
adc
enter
clc
pop
adc
mov
cmp
mov
sbb
stos
rolb
pop
sub
cmp
push
or
cwtl
arpl
mov
or
call
add
int3
ret
xor
shl
fildll
ss
sbb
xchg
xor
push
loop
int
xor
lods
sbb
adc
push
cmp
sbb
sbb
xlat
call
add
and
push
jne
sahf
pusha
fsub
mov
das
fnstsw
xlat
push
stc
mov
clc
sub
std
jg
inc
dec
sbb
and
fdivs
add
xlat
push
ss
dec
inc
orb
jnp
nop
data16
sbbb
inc
add
pop
push
lret
mov
inc
mov
xor
dec
dec
or
or
inc
or
jae
jns
and
push
enter
rolb
addr16
pop
jno
mov
fwait
orb
mov
scas
mov
insl
xchg
add
and
pop
pusha
pop
addr16
xor
sub
pop
movsb
jo
xor
and
insb
inc
xorb
js
adcb
inc
enter
and
nop
rcll
add
or
int3
inc
cmp
out
jge
push
je
and
loopne
cmp
dec
sahf
cs
and
sbb
push
movsl
leave
shlb
test
lods
xchg
adc
mov
push
cmp
data16
and
addl
push
jb
xchg
and
cld
sbb
inc
adc
cmp
call
enter
mov
xor
imul
add
jo
jle
js
pop
sub
mov
outsl
adc
mov
mov
inc
push
jmp
sub
nop
mov
add
adc
ja
ret
pop
push
sbb
push
cmp
cmp
adcl
aam
pusha
or
sahf
inc
jne
sbb
jne
incl
mov
cmp
sbb
add
add
mov
clc
cmpsl
sub
jl
aaa
push
xchg
fwait
sub
jg
pop
xor
push
rcrb
ja
adc
adc
push
addr16
aaa
lods
push
inc
adc
pop
movl
vmread
enter
adcl
sar
ja
xchg
enter
cmp
push
and
push
je
add
or
pop
pop
cmpb
adcb
xor
popa
or
test
out
mov
xchg
sub
pop
xchg
je
mov
mov
adc
pushf
or
jg
and
nop
push
jbe
xor
arpl
aas
outsl
push
mov
insl
je
lea
aaa
addl
mov
sti
xchg
inc
inc
and
roll
push
fdivrs
cmp
das
push
cld
sub
jl
push
adc
xchg
sti
mov
or
loopne
mov
push
ret
jge
scas
and
lods
adc
mov
ffree
jge
test
cltd
mov
lcall
add
add
add
add
add
or
mov
inc
aad
jecxz
es
add
in
xor
add
je
pop
adc
push
es
xor
adc
ljmp
clc
push
test
jle
cmp
mov
mov
dec
je
add
sub
add
mov
test
and
push
sub
xorb
js
insb
addb
inc
mov
push
push
cmp
push
aas
or
loopne
pushl
mov
nop
es
mov
add
je
inc
cld
mov
in
mov
clc
rorl
mov
inc
movsl
cmpb
cli
rol
cwtl
add
test
xorl
aam
or
xchg
dec
cmpl
push
mov
and
into
jne
and
fimuls
xchg
aam
loope
leave
sbb
or
cltd
sti
sbb
push
movsl
dec
xchg
pop
lahf
add
xor
aaa
lret
adc
push
and
in
inc
dec
pop
cmpb
jne
push
int3
push
push
stos
push
test
add
aam
add
negb
test
xchg
sub
or
cmp
lods
je
pop
lret
cmp
cmp
mov
cli
pop
pop
pop
test
mov
xchg
orb
jo
pop
and
push
adc
pop
add
test
inc
inc
gs
mov
inc
orl
hlt
add
stos
sub
xor
fldcw
or
stos
pop
insb
nop
insb
lcall
test
ficoms
dec
cmpsl
or
call
in
les
sti
clc
lea
mov
sbb
lods
or
aad
mov
fmul
mov
or
and
add
dec
mov
ja
les
inc
rolb
dec
sbb
sub
daa
sbb
dec
cmp
push
push
dec
cmp
pop
push
aad
ljmp
hlt
cmp
xor
rolb
lds
pop
adc
pop
test
sub
outsb
or
adc
fdivrl
inc
aas
pop
shlb
in
push
fistl
or
mov
inc
mov
jmp
loopne
sbb
inc
jae
dec
xor
xchg
in
lahf
pop
mov
and
cmp
sbb
aam
mov
int
cmp
mov
inc
or
lock
movsl
mov
mov
into
and
test
pop
ret
adc
test
sub
insb
push
cmpsb
add
ljmp
pop
repnz
data16
xchg
insb
es
and
jo
rolb
mov
cmpb
mov
or
in
add
lock
call
fsts
push
or
inc
push
mov
push
mov
xchg
add
ret
test
pop
repnz
add
push
loopne
sbb
sub
push
xor
mov
mov
push
cmp
push
jno
sub
fdivs
xor
rolb
mov
push
icebp
sbb
push
stos
and
fstpl
jmp
xor
daa
xchg
sub
mov
xchg
inc
pushf
push
add
jl
or
mov
aas
mov
and
repz
into
in
addb
pusha
out
mov
adc
push
leave
pusha
lret
dec
sbb
leave
and
cmp
sub
and
adc
nop
test
xor
enter
andb
xor
push
sub
enter
xor
cmp
enter
cmp
dec
je
push
xor
inc
pusha
inc
sub
xor
leave
pusha
outsl
cmpsb
jmp
push
sub
insb
push
test
and
xor
or
imul
cmpsb
add
pop
jl
inc
in
adc
aaa
cmp
cmp
loop
or
fildll
or
cmp
cmp
stc
dec
repnz
push
call
or
sbb
mov
sbb
push
in
mov
popa
test
dec
pushl
adc
pop
ds
xrelease
inc
cmp
ret
jmp
mov
test
xorl
sbb
sbb
int
jno
popf
cmp
jge
push
push
sbb
cs
and
lret
push
jbe
push
enter
push
insb
shl
pop
pop
or
aas
and
mov
pop
je
stos
in
mov
or
pop
and
clc
push
or
nop
fs
ret
xchg
or
inc
es
test
sarl
inc
leave
sub
lock
js
and
xor
xchg
jbe
and
pop
jo
lds
xor
lods
or
inc
aam
outsb
fistl
xor
dec
ja
out
imul
push
test
sub
inc
fldt
jp
clc
call
mov
dec
inc
aam
bound
and
test
rorb
sbb
jl
clc
pop
icebp
enter
jo
or
pop
clc
movsl
add
mov
mov
cld
cmp
es
push
lahf
out
adc
push
add
in
cld
adcb
out
xchg
jge
adc
sub
cld
lods
sub
or
sub
ljmp
push
lahf
jnp
push
and
icebp
mov
add
add
add
stos
sbb
or
enter
xchg
dec
mov
inc
adc
ja
mov
jb
fsubr
lock
push
clc
das
dec
mov
jbe
inc
pop
test
loope
movsb
mov
notl
test
in
xchg
adc
xchg
rolb
pop
jne
lds
push
pop
sub
sub
rcrl
jne
cltd
sbb
sbb
ret
xor
into
dec
lea
sub
mov
push
pop
add
push
pop
decl
pop
or
test
mov
rcrb
cmp
div
mov
mov
sbb
icebp
je
sub
shrb
or
enter
hlt
pop
shlb
popa
or
jno
dec
and
ret
push
inc
popf
orb
add
lds
pop
je
mov
and
jo
cmp
inc
and
daa
test
insb
xchg
rclb
jns
enter
les
cmp
xor
adc
sti
mov
insl
cmp
imul
addb
hlt
ret
adc
mov
fmuls
and
out
pop
test
decl
rcrb
xor
and
in
pushw
fs
fcmovnbe
addr16
and
dec
mov
ret
add
push
cmp
xor
sub
add
fisttpl
hlt
aam
movsl
pusha
mov
aam
or
iret
add
popf
loope
movsb
shlb
cwtl
test
mov
mov
or
sbb
mov
and
mov
pop
xor
inc
lds
xchg
push
cmp
sbbl
xchg
mov
dec
test
pop
pusha
addl
cmp
pop
enter
aam
or
in
sbb
cmp
clc
jbe
or
fisubrl
mov
mov
or
mov
mov
and
xor
jo
xchg
pop
bndldx
les
mov
loopne
inc
jns
mov
xchg
call
fisubl
mov
sbb
shrb
xchg
je
test
je
mov
push
xchg
repnz
sbbb
test
mov
addr16
fwait
ljmp
ljmp
data16
and
lret
jo
xchg
sub
call
inc
cs
sub
lods
mov
into
adc
and
cmp
sbb
mov
or
dec
dec
pop
sbb
jb
aaa
and
push
fdivr
sbb
mov
dec
lcall
xchg
out
and
and
cli
inc
cmp
mov
xchg
mov
and
pusha
sub
lret
mov
inc
sub
xchg
hlt
je
cli
mov
adc
or
sub
cmp
adc
and
push
xor
sbb
add
hlt
ja
xorb
shll
sub
das
pop
adcb
pop
push
sarl
fnstsw
jmp
adc
clc
lret
xor
mov
jl
rorb
cwtl
mov
cmpsb
pop
sub
lock
mov
mov
xlat
or
sbb
adc
dec
mov
mov
fdivrs
or
add
insb
xor
or
sbb
dec
sbb
jb
or
pop
fs
push
ficoms
xor
std
xchg
push
sbb
push
insb
dec
lret
and
ljmp
mov
and
mov
popf
aad
push
pop
stos
mov
je
dec
push
push
test
cmc
mov
xor
test
movsb
neg
lods
xor
pushl
mov
xchg
xchg
sbb
xchg
add
sbb
fiadds
stc
push
lea
xor
lea
add
mov
adc
xchg
pop
aaa
xchg
xchg
xchg
pop
dec
and
pop
movsl
mov
daa
pop
divb
pop
mov
pop
add
ss
insl
pusha
dec
adc
mov
fnsave
mov
add
addl
adc
sub
pushf
shl
inc
add
ret
pcmpeqb
cwtl
mov
iret
adc
clc
leave
je
jmp
and
rcl
inc
push
popf
xor
nop
call
js
enter
pop
pop
stos
int
sbb
add
jge
add
pusha
outsb
out
js
xor
jmp
push
outsl
push
sub
outsb
mov
sub
lea
ret
mov
jbe,pt
lea
jg
insl
pop
mov
pop
adc
sbb
jb,pt
jmp
test
loope
push
es
fistpl
mov
mov
adc
xchg
jmp
xorb
cmpsb
adc
add
cli
push
lea
mov
arpl
scas
inc
movzbl
push
mov
push
add
enter
lock
lods
and
andb
clc
push
jle
lea
push
shr
inc
fdiv
fimuls
or
mov
sbb
inc
inc
cltd
negb
add
or
test
push
add
mov
and
bnd
outsl
jg
pop
mov
shr
shl
out
test
sub
push
test
mov
mov
pop
pushf
xchg
scas
or
pop
mov
imul
ja
cmpsl
and
mov
faddl
xchg
pop
adc
movsb
inc
mov
adc
or
inc
leave
add
lret
push
adc
or
inc
and
adc
fwait
test
inc
outsb
cmp
pushf
das
ja
mov
mov
dec
enter
jae
aam
mov
and
mov
cmp
push
push
int3
pop
dec
mov
ret
test
add
add
nop
test
scas
lock
filds
stc
adc
aaa
inc
sbb
xor
xchg
sub
daa
xchg
mov
mov
test
pop
pop
pop
push
xor
fucomi
test
lods
popa
lods
icebp
test
add
nop
adc
dec
hlt
pushf
add
cltd
popa
imul
inc
sbb
imul
imul
inc
je
daa
push
dec
cs
nop
mov
and
gs
and
cwtl
in
test
push
and
std
clc
fists
pop
pop
mov
sbb
or
test
test
sbb
lock
faddl
shlb
jbe
test
dec
mov
and
enter
int3
cld
or
mov
lcall
mov
lret
mov
adc
fsts
pop
dec
mov
jb
mov
pop
fdivrs
aam
mov
and
lds
jge
popa
xchg
pusha
push
popa
pop
dec
call
decb
insb
inc
les
add
mov
push
jae
jge
adc
push
enter
out
xor
xchg
cld
inc
cli
sti
pop
aam
inc
incb
jne
jl
push
mov
int
cmp
xchg
push
mov
or
or
pusha
mov
test
insl
or
shrb
std
or
sbb
sbb
add
bnd
stos
push
int3
sahf
add
in
mov
int3
fucom
jp
cmp
int3
push
nop
nop
roll
mov
sbb
or
mov
push
fdivr
inc
push
sbb
xorb
or
jo
mov
pop
jae
and
shr
inc
fsubs
shlb
cmpb
lret
jge
jle
fisubrl
jl
mov
out
sarl
orl
sub
xor
imul
insl
dec
aam
ret
mov
xchg
sbb
aam
fdivrs
dec
jne
test
jp
xor
cmpb
sarb
pop
cmp
adc
das
mul
push
stc
les
xchg
lea
push
add
and
es
insl
or
sub
push
mov
aaa
dec
dec
xchg
add
mov
mov
mov
leave
mov
pop
push
lock
dec
jp
adc
mov
push
ljmp
outsb
xor
mov
gs
insl
inc
mov
add
enter
xchg
daa
rorb
popf
dec
dec
push
mov
or
sahf
cmp
negb
add
xchg
int
mov
and
pop
sbb
and
sbb
inc
sub
je
mov
mov
lock
add
mov
pusha
jb
scas
cmpsb
and
jg
dec
push
mov
std
mov
lods
cmp
jo
scas
pop
add
jb
mov
or
xchg
inc
lcall
sarb
add
or
mov
sub
inc
inc
jmp
adc
mov
les
cmp
xchg
and
adc
pushf
dec
ret
xor
ret
and
mov
adc
push
mov
xor
add
cmp
mov
daa
sub
jne
push
add
rorl
mov
ficompl
in
add
cmp
add
pusha
inc
sbb
popf
clc
adc
dec
or
push
pop
test
and
int
mov
pusha
outsl
enter
pop
dec
push
xchg
hlt
push
imul
or
and
xchg
fimull
adc
push
and
adc
arpl
jle
sub
stos
pushl
cmp
xchg
test
ret
push
cmp
add
cmp
add
inc
xchg
or
rcll
mov
mov
dec
dec
push
mov
andl
add
xchg
xchg
in
inc
dec
lcall
inc
push
fs
rclb
pop
in
and
jge
mov
ret
and
test
call
push
clc
dec
xlat
inc
mov
lahf
cwtl
sbbb
mov
adc
push
insb
or
push
adc
int
je
cmpsl
push
sbb
jne
mov
mov
lcall
push
add
xor
or
les
fwait
push
sbb
inc
jae
aad
test
jne
jb
scas
fwait
in
sbb
outsl
and
pusha
push
adc
mov
loop
pop
add
add
jae
sbb
inc
push
lods
sbb
les
pop
sub
idivl
mov
punpckhbw
sub
mov
mov
push
pop
lock
inc
insb
pushf
jp
dec
inc
mov
sub
bound
test
xchg
repnz
push
mov
icebp
mov
push
fiaddl
sbb
gs
mov
jne
test
dec
loop
adc
fdivl
add
fs
add
rolb
js
sub
hlt
js
push
out
push
fdivrl
add
push
dec
xorb
cmp
out
or
mov
sub
push
jno
adcb
or
adc
sahf
add
rcrb
or
xor
inc
pop
push
xor
jl
test
jp
or
lock
mov
dec
and
mov
xchg
and
popa
lahf
in
inc
and
clc
jb
mov
jae
adc
adc
and
enter
xor
shr
out
outsb
fwait
ljmp
lock
sub
pop
inc
inc
cmp
adc
pop
push
mov
movsl
jp
or
pop
pop
loopne
fs
or
push
sbb
jp
sub
adc
inc
add
fsub
pop
lock
lcall
addl
bound
or
lea
out
mov
rolb
lds
adc
sub
aam
mov
push
cmp
pop
push
sbb
fsubl
data16
stos
testl
cmpl
inc
mov
mov
outsb
cmpsb
lock
pop
xchg
push
cmp
mov
push
cld
cmp
je
sbb
adc
js
mov
adc
xchg
mov
aam
decl
push
adc
xchg
adc
or
lret
push
icebp
add
push
les
dec
fstps
or
pop
add
popf
loop
jmp
cmp
inc
pop
sahf
xchg
mov
imul
or
push
adc
in
inc
mov
call
xchg
sub
fs
xchg
mov
mov
jle
movsb
push
xor
sbb
push
push
jb
orl
sub
ljmp
push
rclb
repnz
lahf
pop
sti
jg
inc
in
inc
xor
and
jecxz
jmp
enter
mov
push
xchg
faddl
push
mov
icebp
pop
xlat
mov
xchg
add
outsb
push
lar
faddl
in
pop
pop
addr16
push
push
fldt
push
dec
push
out
aam
cld
mov
and
push
cmp
push
std
jge
push
jl
stos
add
mov
gs
cli
je
mov
lods
push
fcmovb
push
test
mov
setp
mov
cmp
dec
or
lahf
or
dec
int3
data16
push
or
imul
in
decl
pop
xor
push
sbb
nop
add
jo
lods
or
inc
pusha
add
add
andb
jge
and
out
cmp
sbb
inc
add
cwtl
add
push
subb
pop
or
movsb
or
mov
push
test
mov
sbb
inc
inc
push
outsb
sub
daa
adc
sub
lock
jne
fbstp
ljmp
mov
mov
adc
push
outsl
fidivrl
inc
cmpsb
xor
mov
sub
mov
or
add
cmpsb
pop
sahf
jmp
add
cwtl
mov
push
in
push
int3
rorl
jmp
add
stc
adc
add
jo
inc
into
add
xor
sbb
dec
jne
not
cli
pop
out
fs
adc
das
sub
addr16
shrl
fxch
add
pusha
call
test
lods
notb
adc
lock
imul
xchg
bound
outsl
popa
push
lock
adc
xchg
push
mov
jle
adc
loopne
mov
arpl
hlt
sti
jle
dec
mov
and
dec
adc
push
xor
cli
loop
inc
aad
and
pushl
ss
lret
lods
mov
dec
adc
loopne
pop
adc
jmp
cmp
je
add
je
adc
mov
or
mov
jl
out
adc
imulb
push
pop
xchg
stc
jnp
sub
mov
cmp
imul
je
pop
addr16
int
lcall
icebp
add
dec
sbb
dec
fdivl
hlt
aaa
dec
mov
fnstsw
or
aas
sub
aas
push
sbb
xor
ljmp
orb
loope
push
sub
mov
inc
xchg
mov
push
pop
outsl
and
ljmp
mov
imul
jo
pop
add
enter
add
push
pop
test
out
lea
cmpb
xchg
arpl
std
cmp
jne
movsbl
mov
movb
push
jl
mov
add
dec
jns
test
popf
mov
sahf
lods
push
sub
push
lods
cmc
dec
sbb
or
mov
repnz
mov
fldl
mov
lret
dec
pusha
aad
and
in
fistpll
cmp
push
lret
and
in
sbb
das
push
xor
cs
mov
push
and
mov
pop
enter
jns
jo
testl
adc
dec
inc
mov
leave
stos
and
and
cmp
push
xlat
popa
mov
pop
push
fdivrl
mov
cmp
add
xchg
jmp
outsb
push
or
pop
add
jle
xor
jne
jecxz
pop
nop
nop
add
push
inc
sub
test
jbe
sub
fdivs
popf
mov
adc
inc
mov
xchg
cwtl
sub
rcrb
test
mov
or
test
sub
jnp
data16
enter
adc
fildl
jmp
and
daa
add
sahf
lods
mov
mov
inc
hlt
fsts
and
mov
ljmp
jle
xchg
push
fcmovnb
push
pop
inc
dec
leave
adc
adcb
jnp
fmull
mov
jne
shrb
and
out
sbb
inc
lret
pop
orps
jge
fstpt
pop
je
mov
mov
push
std
push
inc
add
add
pushf
or
mov
pop
pop
cmpsb
arpl
add
fidivrl
ja
aas
shl
xchg
sbb
imulb
lds
les
sarl
xchg
push
enter
sarl
mov
add
adc
or
lods
push
fidivs
cmp
xchg
mov
and
sbb
fisubrs
sbb
xchg
loope
andl
dec
arpl
xor
cmp
insb
push
jae
bound
xchg
xchg
es
mov
jle
sbb
xchg
in
pop
insb
ret
dec
cmp
loope
aad
loopne
sbb
push
add
loopne
fimuls
and
outsb
arpl
dec
adc
aaa
inc
loope
testb
inc
insb
lods
pextrw
loopne
test
mov
xor
pop
test
rorb
pusha
push
add
pop
stos
call
es
mov
test
mov
jbe
xchg
mov
adc
inc
stc
inc
or
mov
add
ss
inc
es
clc
or
js
sbb
in
nop
out
out
cmp
adc
cmp
inc
xchg
addr16
cs
lea
push
sub
rcll
push
bound
movsb
popa
push
popl
je
and
add
je
adc
loop
dec
aad
cmp
pop
jmp
cmc
ss
shll
sbb
inc
xlat
outsl
insb
or
adc
pop
inc
pushf
sub
sub
sbb
push
mov
and
loop
cmp
or
and
inc
mov
push
shlb
cmp
push
push
or
cmp
into
std
mov
mov
fcoms
test
les
iret
addr16
sbb
push
stc
and
dec
dec
popa
daa
add
les
pushf
nop
xchg
les
add
and
adc
xchg
pusha
cmp
data16
sbb
je
mov
push
and
jns
and
adc
fldenv
and
and
or
adc
dec
add
sub
aas
cmp
dec
pop
lret
sarl
sahf
push
adc
and
ret
popa
test
inc
jne
mov
pop
fsubrl
fs
or
xchg
or
mov
push
sub
adc
pop
test
cmp
ror
lds
out
subl
mov
dec
add
inc
sub
mov
add
clc
and
push
push
scas
xchg
jl
std
add
paddq
pop
or
call
inc
insb
jo
lret
lahf
mov
pop
pop
add
hlt
push
aad
aam
pushl
hlt
push
inc
jnp
stos
adcb
dec
loopne
jbe
sub
out
loop
mov
mov
xor
ljmp
faddl
movsb
sbb
push
xlat
sbb
mov
lods
sub
pop
in
lcall
pop
or
mov
loopne
or
mov
push
sub
fdivrl
cmp
sub
aam
adc
jbe
mov
loopne
inc
dec
fcoms
leave
pop
int
rcr
sub
repz
or
jne
sbb
fdivrs
pop
adc
push
xchg
insl
cmc
ret
dec
adc
movsb
pop
mov
ja
repnz
sbb
mov
or
pop
dec
push
sti
cmp
push
daa
lods
in
sti
inc
lds
adc
mov
popw
sbb
mov
and
add
repz
or
dec
ret
mov
push
rcrb
dec
cmp
out
call
daa
adc
pop
enter
push
pop
add
push
roll
xchg
ja
fisubrl
mov
int
push
pop
out
mov
loope
dec
cmp
pop
test
ret
call
or
adc
sar
div
movsb
ret
pop
enter
dec
mov
mov
or
mov
daa
hlt
dec
xchg
inc
adc
mov
nop
sub
pop
mov
or
nop
out
loope
or
xchg
or
je
insb
iret
or
mov
pusha
push
xor
push
push
or
sbb
pop
mov
sbb
sbb
xor
cmp
cmp
xchg
jl
inc
sbb
clc
ret
int
nop
ret
fadd
int3
and
or
lods
and
or
nop
and
push
push
pop
enter
pop
push
sub
pop
enter
sub
cmp
mov
inc
sub
inc
inc
cs
rolb
adc
or
pop
mov
rol
imul
loopne
aam
das
jns
inc
pop
push
cs
cmp
jl
movsb
adc
jb
ret
sub
or
jnp
and
sbb
in
adc
inc
cs
rolb
jb
pop
je
fs
or
inc
enter
insb
test
pop
xchg
pusha
and
outsb
add
addl
push
pop
pop
loopne
and
dec
push
dec
sbb
data16
mov
inc
dec
inc
repnz
mov
add
jns
iret
or
inc
add
inc
and
in
aam
shlb
xor
mov
xor
aas
ds
in
and
fsubr
inc
fsub
test
aad
rolb
nop
int3
jno
in
and
cmp
shlb
das
out
pushf
sub
pop
enter
test
jns
xchg
and
out
cmp
das
fnstcw
repnz
cmpb
adc
rcrb
push
push
stos
dec
roll
jo
mov
jg
scas
pop
mov
cmp
icebp
or
addl
rclb
and
shl
pop
jecxz
mov
add
jae
shlb
adc
cmp
or
iret
or
cld
mov
pop
xor
call
jb
pop
aam
in
and
shl
cmp
enter
xchg
mov
enter
mov
iret
shlb
cwtl
test
nop
dec
rolb
jae
and
mov
ds
test
jl
pop
enter
xor
in
dec
jo
insb
cs
or
enter
push
pop
or
jnp
push
xor
pop
dec
pop
enter
sub
pop
jb
inc
xor
dec
pop
enter
xor
pop
jb
inc
ret
stos
inc
es
pushf
push
push
pop
mov
popf
fadds
add
nop
xchg
pop
xor
mov
sbb
inc
push
mov
nop
or
or
add
and
das
cmpsl
xor
nop
sbb
clc
mov
nop
or
lock
or
and
in
sbb
test
loopne,pn
pushf
mov
sub
test
enter
rorb
jns
lods
sub
daa
das
fs
xchg
mov
sub
movsb
hlt
ret
test
add
sub
stos
pop
or
add
loope
mov
lds
and
sbb
cmp
or
adc
mov
adcl
xor
xor
mov
rcrb
repnz
mov
test
std
xchg
cld
nop
mov
sbb
and
leave
dec
and
loope
cld
sbb
cmp
push
push
shrb
nop
fstpt
inc
in
orl
test
dec
mov
mov
cmpsl
jne
sti
or
inc
jo
popa
dec
cwtl
mov
nop
adc
std
lock
push
push
or
insb
inc
add
imul
lret
lret
movntq
out
lahf
test
sub
movsl
lar
pop
xor
fs
inc
nop
fldt
jns
add
cmp
cmp
sbb
mov
arpl
xor
bound
adc
dec
or
into
or
mov
je
mov
add
and
and
cwtl
cld
add
imul
dec
sub
and
bound
int3
add
imul
fs
or
leave
sub
mov
test
or
sub
mov
xor
pop
cltd
and
pop
cmp
adc
add
and
jecxz
jmp
adc
ficomps
cs
test
fisubrl
mov
push
jmp
mov
inc
int3
or
data16
xchg
pop
fmuls
add
xor
data16
push
or
fs
divb
filds
movsb
addr16
subl
or
and
or
pop
push
ljmp
jb
jmp
adc
mov
mov
rcrl
mov
push
lds
adc
lods
je
sub
or
fwait
mov
in
jb
lea
push
insb
jecxz
push
push
sbb
jnp
in
push
sub
inc
jo
sbb
and
mov
pop
pop
push
jmp
jb
inc
dec
and
push
or
in
or
push
and
push
and
das
jmp
lret
enter
repnz
loop
push
mov
cs
sub
inc
push
mov
enter
fdivl
jns
sbbl
pop
fs
or
int3
int3
les
shlb
inc
push
mov
enter
lods
xor
test
mov
cltd
sbb
nop
inc
xchg
inc
nop
or
in
mov
sbb
mov
and
sbb
das
fs
lods
jo
sbb
jb
jecxz
and
repnz
sbb
daa
in
mov
test
jno
dec
pop
nop
inc
cs
aaa
inc
enter
iret
push
cmp
nop
xchg
pop
xor
cmpsl
adc
mov
or
fists
and
adc
inc
es
xchg
data16
inc
dec
dec
ds
daa
enter
les
adc
adc
inc
dec
pop
adc
adc
adc
inc
jb
adc
in
sbb
push
hlt
mov
cs
imul
pusha
push
in
nop
xchg
pop
xor
pop
or
mov
test
jb
push
or
jl
cmp
pop
sbb
test
mov
test
push
insl
inc
dec
pop
enter
movsb
nop
or
in
mov
fs
int3
add
jb
mov
jl
add
inc
push
mov
mov
push
testb
push
push
cmp
mov
mov
or
enter
in
push
xchg
fmull
addb
push
int3
push
loopne,pn
adc
out
push
mov
mov
or
leave
aaa
pop
lret
js
data16
std
fs
adc
mov
fisttpl
or
or
cltd
jno
andb
cwtl
adc
leave
and
pop
add
add
mov
mov
movsb
loope
xor
mov
shrb
add
jo
push
movsb
in
inc
add
push
sbb
data16
subl
add
push
inc
inc
pop
clc
mov
mov
add
pop
inc
call
and
test
xor
add
incl
adc
stos
test
aad
or
or
lods
sbb
or
inc
xchg
in
out
insb
ss
push
loope
movsl
loopne
mov
xchg
or
icebp
fs
mov
jo
adc
sbb
sbb
xor
lcall
cmp
mov
nop
mov
scas
mov
mov
jg
and
enter
aaa
dec
jo
mov
mov
sti
or
jmp
jge
cmpsl
or
push
popa
mov
sbbl
add
fdivs
test
xor
pop
adc
mov
dec
loopne
or
mov
mov
xor
je
mov
sub
mov
dec
sbb
cmpsb
imul
je
add
stos
shld
dec
xor
cld
sarb
movsl
mov
cmc
lret
lcall
pop
adc
sub
popf
and
xor
call
cmp
pop
add
mov
dec
lcall
cmp
or
jle
mov
and
adc
xchg
push
nop
mov
cmc
sbb
icebp
jp
js
push
adc
std
stos
lds
push
je
adc
and
mov
das
cld
cmp
outsb
inc
mov
sti
xchg
mov
add
adc
add
sbb
mov
sbb
sbb
pop
mov
mov
push
mov
mov
or
inc
sbb
or
add
stc
add
mov
jns
lock
inc
in
out
mov
clc
popf
xchg
sar
lcall
int3
sub
add
push
es
add
repz
fcmovu
inc
fmull
mov
jmp
mov
push
adc
cmp
inc
repnz
movsb
cmp
enter
mov
and
adc
aam
lea
push
js
xor
pushf
push
loope
gs
dec
clc
mov
cmp
xchg
pop
push
mov
pop
add
insb
jae
push
pop
mov
or
pop
cmp
jbe
lea
sbb
loopne
int3
lea
cmp
pop
and
orl
aam
mov
mov
mov
add
jl
sbb
dec
adc
sbb
jge
ret
jmp
mov
enter
in
mov
mov
sbb
or
xor
and
or
xchg
clc
aas
and
out
stc
dec
mov
into
xchg
js
xchg
into
insb
xor
insb
push
loop
out
mov
cmc
scas
pop
mov
adc
pop
mov
sbb
in
sub
cmp
push
xchg
or
mov
notl
push
and
jbe
cmc
into
mov
stc
insb
dec
shrl
ss
je
xor
push
das
inc
inc
lods
and
add
cmp
mov
mov
jle
dec
movb
sar
pop
clc
insb
xor
movsbl
cmp
jl
int3
xor
or
jb
xor
fs
mov
and
mov
add
fs
in
cmp
in
push
sbb
les
roll
sub
or
cld
pop
test
add
fistpll
pop
js
mov
mov
movsb
push
mov
rorb
int
notb
add
or
movsl
pop
inc
mov
xlat
ds
call
push
stc
inc
pop
in
jb
je
or
cwtl
cli
ret
clc
pop
jno
cmp
or
xchg
jnp
lods
mov
js
fldenv
inc
lock
mov
or
inc
cmpsb
movsl
xor
fs
add
mov
push
cld
mov
inc
xor
rclb
data16
cmp
data16
inc
clc
fnsave
sub
sbbl
ljmp
xorl
aas
push
xor
jo
add
push
mov
or
push
and
cmp
or
fcos
adc
sub
inc
mov
sub
stc
or
inc
lock
mov
call
or
bnd
push
pusha
fsubrs
sbb
sbb
or
call
sti
mov
fisubs
mov
or
js
movsb
cltd
inc
sahf
fsubs
cmp
sti
shll
cld
ja
repnz
add
loope
cld
adc
int3
leave
loop
push
sub
out
mov
hlt
in
enter
shl
out
icebp
hlt
out
je
outsl
fsubl
in
imul
cs
stos
lock
out
and
dec
adc
add
inc
fs
cltd
xchg
mov
mov
xchg
cld
out
in
in
mov
and
out
sub
push
nop
in
or
mov
mov
out
cmp
adc
icebp
pop
add
ja
lds
scas
push
int3
adc
in
adc
jmp
add
inc
repnz
sbb
add
decb
lods
repnz
movzbl
push
sbb
repnz
sbb
js
sub
daa
mov
push
lcall
jb
and
inc
mov
mov
inc
scas
in
repnz
add
dec
sbb
cmpb
mov
idiv
out
pop
psubsw
or
xor
or
xlat
jp
mov
test
in
inc
cmp
or
inc
push
jb
out
in
dec
xchg
sbb
outsl
push
out
jns
daa
in
out
loop
jecxz
pop
enter
sub
sub
imull
and
std
testl
xor
cmp
loop
jb
and
or
loop
movsb
loop
aas
sbb
mov
push
sub
into
stos
loopne
das
stos
daa
add
and
loope
in
test
call
sub
push
xchg
jmp
pop
push
and
mov
push
adc
push
pop
push
xor
test
or
sub
dec
jmp
loopne
in
sbb
or
sbbb
mov
inc
jmp
aaa
nop
and
in
sahf
ret
enter
movsb
mov
adc
adcb
mov
and
int
in
inc
stc
fldenv
sbb
not
and
stc
mov
sub
int3
divl
add
mov
or
nop
lret
popa
loopne
cmp
mov
push
enter
bound
stc
dec
mov
push
stc
push
daa
push
enter
jecxz
and
pop
xchg
hlt
mov
sbb
add
and
sbb
fsub
pop
xor
mov
jns
or
pop
cs
rorl
in
sub
pop
and
cs
psubusb
cmp
mov
jmp
pusha
aam
ret
mov
cwtl
sbb
loopne
in
aas
jno
addl
mov
push
jmp
nop
add
test
in
mov
rclb
nop
xchg
pop
call
pcmpgtb
cld
in
push
or
std
sbb
adc
pop
adc
or
adc
pop
fisubl
addr16
lods
lsl
ret
mov
repz
push
movsb
sbbb
movsb
sbb
push
add
jecxz
out
push
push
call
pop
test
mov
jge
pop
dec
aaa
cld
inc
repz
xorb
outsb
mov
int3
mov
mov
movsl
icebp
movsb
repnz
push
mov
and
inc
inc
test
add
nop
and
dec
inc
sbb
adc
and
mov
dec
add
mov
adcb
repnz
movsb
test
lds
test
aad
cmp
je
test
mov
push
add
lcall
or
add
xchg
imul
xchg
pusha
cvtps2pd
lcall
cld
lea
add
sbb
push
je
sahf
push
dec
test
stos
sbb
inc
sarb
sbb
xchg
sub
add
lods
daa
pusha
cld
or
dec
xor
adc
sbb
add
adc
push
or
ficoms
dec
and
jnp,pn
data16
xchg
test
nop
sub
clc
inc
call
and
fcoms
sbb
cwtl
mov
add
pop
add
push
push
int
sbb
mov
sub
scas
mulb
xchg
sbb
popa
jo
imul
inc
mulb
in
sub
sub
scas
pop
or
test
add
or
sub
nop
nop
xchg
popf
les
leave
lods
xor
mov
sti
orb
pushf
mov
loope
in
daa
pop
mov
adc
int3
mov
pop
mov
pop
xchg
inc
nop
or
mov
je
inc
enter
insl
adc
loopne
sbb
xchg
mov
jb
adc
mov
add
push
push
sti
shr
jns
push
jno
lcall
mov
jg
or
dec
add
je
push
mov
ret
cs
push
das
aam
and
adc
inc
add
insb
lods
scas
xchg
add
loop
out
out
mov
mov
xchg
cmp
shl
pop
int3
mov
push
cmp
and
inc
punpcklbw
cs
or
scas
dec
add
pop
scas
or
insl
scas
lret
bound
dec
and
data16
or
push
scas
mov
push
adc
mov
pop
and
stos
test
shlb
fadd
push
mov
or
lock
xor
xchg
call
lcall
jl
mov
jge
adc
je
push
rcrl
mov
xor
js
mov
dec
cmp
fwait
and
xchg
pop
repnz
loopne
dec
push
movsl
roll
cmp
add
test
xorl
add
clc
je
cmp
pop
andb
pop
push
xchg
fs
sub
outsl
or
sub
mov
and
rolb
mov
sti
pop
shrb
mov
mov
add
mov
popf
or
pop
or
sub
sarl
dec
push
inc
mov
lods
lds
xchg
adc
xchg
or
pop
lret
cmc
testl
mov
sub
dec
lods
dec
push
shll
xor
lods
bound
dec
arpl
lock
adc
ds
inc
lret
fsub
cltd
sbb
loop
jnp
pop
and
jbe
lds
xchg
cmpb
popf
addr16
sbb
out
inc
push
mov
repnz
out
call
add
fdivs
adc
dec
shrb
lods
ljmp
gs
mov
mov
pop
test
call
pushf
test
push
pop
sub
nop
stos
push
mov
addl
lret
mov
add
mov
mov
inc
pop
adcb
subb
ret
adc
inc
and
add
stos
mov
lea
or
stos
dec
movsl
xor
adc
pop
xchg
lret
das
test
fimuls
sbb
mov
stos
stos
les
insl
inc
adc
insb
add
push
push
mov
mov
enter
je
and
rolb
inc
fs
push
ret
xchg
cmp
xchg
stos
cmp
push
out
fxch
mov
jmp
push
cmp
add
mov
dec
aam
leave
sbb
std
dec
push
je
and
mov
mov
clc
movsbl
fsubrl
fsts
adcb
xor
mov
lods
dec
xchg
mov
pop
popa
mov
jl
and
mov
add
inc
xchg
xor
cs
rcr
sbb
pop
mov
add
mov
push
push
lea
pop
imul
pop
sub
inc
sub
jo
jmp
ret
push
repnz
mov
ds
pop
and
je
test
nop
test
add
mov
mov
push
fisttps
js
test
dec
push
adc
pop
adc
in
inc
add
cwtl
mov
or
test
adc
mov
adc
and
inc
or
adc
rclb
shlb
or
add
adc
push
in
bound
pop
inc
mov
mov
mov
pusha
std
pop
and
pop
dec
test
inc
rorl
pop
push
mov
aaa
repz
inc
dec
icebp
push
mov
test
mov
cmpsl
adc
shlb
je
xchg
adc
add
and
add
inc
sub
mov
cmp
popa
inc
insl
sub
icebp
xor
mov
bound
jecxz
mov
pop
cmp
es
icebp
mov
or
ja
test
or
out
adc
push
clc
aam
pop
sarl
xchg
jl
cmp
in
or
cmp
iret
and
pop
adc
xchg
ret
nop
push
push
cmp
in
sbb
test
repnz
jae
je
arpl
inc
arpl
dec
pop
mov
in
cmpsl
inc
icebp
cmpb
andb
addl
or
fs
mov
sbb
pop
pop
js
pop
cmp
insb
cmpb
and
inc
push
sbbl
sub
push
push
jb
cmp
inc
enter
adc
push
mov
dec
cs
loop
sar
or
jmp
or
aam
sbb
or
mov
or
mov
xchg
adc
test
cmp
repz
andb
push
sub
sub
mov
aaa
jmp
test
clc
call
and
sub
push
sub
mov
sub
dec
sub
cwtl
cmpsb
mov
xor
adc
mov
dec
adc
iret
test
pop
fs
add
das
pusha
or
mov
or
adcb
jae
add
mov
mov
inc
shlb
push
mov
loop
pushf
adc
push
jl
cmpsb
adc
cwtl
test
mov
roll
jle
lret
mov
leave
inc
and
cld
fsubrp
mov
cmpsl
jo
jne
mov
sub
add
add
add
ret
sub
adc
enter
adc
inc
sbb
sbb
roll
push
fistpl
leave
mov
fsubrp
inc
pop
inc
pop
adc
shlb
pop
adc
and
sbb
xor
sub
insl
cs
ljmp
or
fs
ffree
je
popf
test
jmp
push
push
inc
jl
orb
outsl
daa
int
out
rorb
inc
divb
enter
stos
sbb
outsb
or
nop
out
sbb
testl
test
mull
in
idiv
nop
loopne
out
pop
or
push
dec
sub
inc
push
jb
clc
sti
test
test
push
rol
xor
mov
bound
pop
mov
mov
enter
pop
nop
and
push
add
and
inc
dec
jb
inc
mov
dec
and
enter
and
ss
cmp
lret
mov
push
ret
or
inc
inc
adc
mov
pop
inc
jl
lea
movsb
mov
and
dec
xor
and
test
aam
icebp
std
jp
dec
in
mull
xlat
lret
add
adc
push
jnp
pop
dec
sbb
es
lcall
inc
adc
dec
cld
not
bound
pop
call
cmp
pop
jmp
movsb
and
xchg
adc
cmpb
jmp
sti
loopne
sub
cld
je
and
loopne
jle
sbb
or
clc
inc
push
repnz
push
jg
mov
xchg
cld
cmc
je
add
adcb
notb
dec
sub
dec
cmp
iret
pushf
mov
cld
jmp
js
jl
cld
dec
mov
xor
mov
mov
sub
enter
xchg
jbe
dec
sahf
pushf
xchg
add
xor
jl
iret
movsl
sub
push
push
push
and
test
mov
xor
xor
les
cli
mov
add
aad
inc
mov
or
dec
adc
mov
sub
or
adcb
mov
and
mov
sbb
mov
push
push
nop
and
pop
adc
stos
ret
addb
aad
mov
loop
or
fildl
cs
cld
int3
push
jl
and
jle
sbb
lock
int3
push
inc
or
inc
je
adc
sbb
xchg
imul
sbb
dec
in
jb
nop
xchg
shlb
lods
add
jo
inc
mov
lret
mov
push
pushl
add
inc
add
jge
pop
and
insb
push
sub
dec
and
jmp
imul
and
mov
ret
pop
add
jg,pt
push
sub
adc
or
jb
dec
iret
mov
mov
mov
adc
add
sub
cmp
jo
mov
in
inc
iret
dec
mov
push
andb
shll
nop
inc
aam
add
dec
add
jne
xchg
and
adc
add
add
dec
inc
push
daa
mov
and
xor
inc
into
push
clc
pop
loopne
mov
pushf
scas
test
push
mov
cwtl
mov
sbb
add
sbb
fldt
ficoml
rorb
adc
fdivrl
mov
cmp
or
jl
inc
rolb
and
mov
or
enter
les
jne
push
cmp
mov
je
gs
push
stos
mov
adc
nop
inc
sarb
fdivrl
mov
xor
jne
test
test
sbb
push
jp
jmp
inc
aam
mov
ror
xor
call
push
adc
fld
adc
unpcklps
mov
push
aad
adc
and
lret
movsl
in
gs
in
fistpl
xchg
xor
or
xchg
ret
lahf
fs
xor
jo
push
pop
mov
ror
lea
xor
adc
cmp
push
or
enter
dec
cltd
andl
and
mov
xchg
cld
xchg
jo
inc
ss
lret
mov
mov
sbb
femms
add
pop
ss
mov
ret
rclb
dec
out
adc
adc
xor
or
xor
fidivrl
adc
ds
cmp
sbb
sbb
inc
sub
sub
adc
push
mov
enter
je
cltd
int3
mov
adc
adc
add
popa
xchg
in
cld
dec
push
push
out
fcoms
xor
inc
inc
sbb
add
call
push
mov
mov
xchg
xor
fistl
test
cmpsl
mov
sbb
adc
subl
faddl
jg
cs
mov
inc
inc
cs
in
std
insb
scas
xlat
or
or
push
addr16
lock
inc
cmp
pop
dec
cld
jne
xor
in
lret
lock
add
xlat
jbe
fsubs
jmp
jle
jbe
shl
sub
push
or
cmp
inc
add
inc
test
fs
mov
cli
int3
fsubrs
push
pop
mov
ljmp
scas
add
pop
fyl2x
push
sub
inc
adc
add
push
in
and
pusha
and
inc
in
add
mov
add
sub
faddl
add
in
cmp
outsb
xlat
and
xor
add
or
add
mov
popa
xlat
addl
jae
push
addl
cmp
xlat
dec
js
push
outsl
xlat
shrl
pop
in
push
and
aam
rol
xor
fstpt
or
lds
bound
push
push
lret
mov
imul
lret
dec
arpl
adc
pop
jecxz
filds
push
xor
mov
mov
cmp
fsubs
push
jge
arpl
aam
and
cmp
sub
mov
jmp
push
push
mov
lods
outsb
inc
add
sub
push
inc
xor
cmp
adc
mov
pop
sub
andl
xor
jnp
fsubrl
imul
data16
aam
js
cld
fsub
inc
add
leave
push
pusha
cmp
pusha
fadds
xor
hlt
push
jge
ds
aad
xchg
xor
lcall
sub
fs
xchg
inc
pop
or
inc
mov
sub
jg
or
mov
add
pop
out
inc
pmullw
jo
cltd
or
push
xor
inc
int3
sbb
aam
cmp
mov
sbb
mov
inc
or
pop
ljmp
mov
push
xor
mov
sub
maskmovq
ss
or
mov
flds
sbb
sbb
out
sbb
pusha
adc
nop
cmp
inc
adc
rolb
dec
loopne
inc
pop
xchg
pop
flds
push
inc
xor
loopne
push
movsb
mov
mov
cmp
test
sarl
notb
shlb
jne
imul
xchg
xchg
add
push
pop
adc
out
ljmp
andb
mov
sbb
out
ret
andb
in
std
lods
nop
or
jae
pop
cli
mov
in
sbb
jge
es
push
mov
pop
cwtl
cld
sub
sub
and
mov
popa
hlt
xor
loopne
arpl
push
jmp
in
sbb
sbb
mov
daa
mov
xchg
outsb
adc
add
pop
jmp
aad
setno
clc
push
lock
add
or
jbe
push
pop
and
xor
lds
cmp
enter
in
sti
sbb
dec
jb
leave
in
sti
or
nop
inc
lcall
out
nop
and
inc
add
shrb
inc
popf
pop
adc
and
mov
cmp
mov
and
out
cld
mov
shl
insb
dec
push
enter
sti
push
push
adc
inc
ret
pop
adc
stos
inc
inc
lods
rol
jp
mov
sub
xchg
sbb
pop
push
lds
shrl
es
call
lret
aad
fisttpll
ficoml
inc
addb
testb
inc
mov
add
test
inc
or
idivb
jp
pop
inc
cmp
jl
and
ljmp
or
adc
je
mov
push
fistpll
push
mov
lods
pop
add
lods
enter
inc
lods
mov
orl
in
adc
das
and
orl
push
sbb
or
or
cwtl
fnstenv
xchg
cmpl
add
or
data16
or
sub
add
mov
or
mov
and
dec
pop
jne
mov
sahf
out
add
sbb
lods
sti
in
adc
add
adc
ret
jns
or
sbb
mov
aam
test
pop
es
jns
lock
fs
scas
xor
dec
cwtl
in
loope
push
jg
or
psubusw
jmp
and
dec
int
push
sub
das
mov
pop
jbe
ss
sub
mov
inc
sub
push
popa
pushf
cmpsb
andb
cmp
lea
dec
je
push
pop
push
xor
rorl
mov
dec
or
mov
stos
in
mov
inc
mov
sbb
add
call
jae
jnp
adc
imul
add
mov
and
dec
jg
sub
push
cmovl
fs
dec
lods
push
cmp
cmp
aad
adc
xor
fs
adc
pextrw
je
inc
outsb
push
enter
push
imul
sub
jmp
push
xchg
push
dec
stos
sahf
xchg
push
enter
pusha
sbb
lahf
ja
leave
ret
xor
int
repz
and
xor
add
mov
aam
mov
sar
pop
lret
adc
movsb
fadd
repz
les
clc
sub
es
xorl
xor
pop
call
jmp
mov
js
mov
je
inc
test
ds
pushl
sbb
loopne
and
or
les
sub
add
data16
inc
push
sub
andl
in
cmp
es
jmp
or
insl
mov
inc
inc
mov
arpl
adc
andb
sbb
fiaddl
pop
sub
loopne
mov
lahf
test
mov
cli
ret
sub
mov
pop
mov
in
int3
int
mov
dec
repnz
es
jmp
pop
add
test
pop
adc
add
icebp
sub
pop
mov
int
fs
aam
pusha
inc
cwtl
sub
and
gs
cmpsb
lahf
cmp
sti
add
or
push
push
or
mov
xor
stos
xor
fs
sub
add
hlt
pushl
sub
inc
insl
mov
jp
inc
and
cmc
mov
int
inc
dec
inc
jo
ret
xchg
jne
cmpsl
pop
or
roll
data16
xchg
test
fmull
push
dec
int3
addb
sbb
ss
cmpl
aaa
mov
jge
xchg
in
cmp
lock
leave
adc
fnstsw
je
dec
xchg
sub
xorl
mov
loope
dec
mov
aas
lock
jecxz
lret
pop
push
lret
or
je
sahf
adc
movsl
test
and
xchg
sub
dec
and
and
leave
push
dec
iret
push
in
xchg
sub
sub
adc
push
cltd
xchg
and
pop
loopne
add
inc
loopne
aam
inc
xchg
and
aam
and
into
push
push
popa
mov
sbb
xor
mov
inc
pushf
popa
jmp
cs
loopne
into
or
cmpsl
mov
sub
jp
lahf
adc
hlt
adc
in
lds
pop
add
mov
mov
loop
add
xchg
mov
aas
mov
mov
and
fnsetpm(287
in
push
adc
mov
push
mov
jno
test
dec
push
out
fs
and
call
jo
das
jmp
shll
cld
lods
inc
sub
cld
xchg
cmp
rcrl
pusha
int
push
pusha
xchg
lock
mov
les
sub
punpckldq
xor
xor
sbb
addr16
and
dec
add
aas
subl
or
cmp
pusha
pop
xor
test
pop
shl
fcom
mov
or
or
dec
enter
mov
xor
and
pop
ss
jbe
jne
into
mov
inc
mov
push
pop
adc
adc
in
or
cmc
int
stos
jae
or
ret
je
dec
push
add
push
adc
in
mov
das
mov
xchg
mov
xchg
adc
sbb
sub
adc
xor
das
sbb
sbb
push
add
dec
or
xlat
or
push
pop
sbbb
or
pop
sub
or
xorl
fnstcw
test
lds
fmuls
mov
push
xor
add
sarl
call
and
mov
into
pop
aaa
push
insb
xor
and
add
dec
jb
jmp
int
jo
js
mov
insl
or
test
adc
cmp
jle
jne
pusha
mov
pusha
stos
imul
lods
and
mov
xor
adc
outsl
or
sbb
icebp
push
fisttps
xabort
pop
inc
test
pop
sbb
xchg
adc
push
xchg
xchg
loopne
lock
ljmp
add
add
mov
fcomp
inc
cmp
sbb
insl
push
add
inc
and
xchg
rclb
or
inc
and
adc
mov
or
adc
rorb
add
xlat
mov
mov
das
jmp
push
std
mov
xor
out
int
sub
or
test
jle
sbb
test
mov
cmp
inc
pop
lea
mov
cmc
call
sbb
out
sahf
gs
enter
mov
stos
cltd
insl
je
push
rcrl
popf
faddl
addb
mov
add
xor
pop
mov
or
loop
jl
mov
bswap
cmp
ret
pop
cmp
or
loop
push
sub
testb
push
mov
in
aaa
inc
jmp
cmp
jne
inc
lcall
shrl
sti
cld
or
mov
xor
fisubs
inc
inc
jbe
xchg
ljmp
xor
inc
xor
outsl
adc
jbe
dec
inc
or
popa
sbb
shr
push
stc
adc
aaa
aaa
push
xchg
inc
jne
insb
ret
adcb
leave
xor
jmp
mov
or
jmp
xchg
lock
inc
shrl
mov
sahf
adc
shl
xchg
xlat
add
adc
cmp
loopne
outsl
js
das
pop
pop
cmp
pop
jae
stos
fs
ds
sbb
adc
jg
test
in
lea
mov
add
outsl
push
pop
mov
sub
mov
add
mov
je
loop
lret
je
iret
leave
mov
push
adc
fadds
aam
testl
out
daa
jae
adc
and
add
push
inc
mov
adc
mull
aad
xor
cli
fnsave
adc
adc
adc
push
aas
push
cmp
adc
cmp
int3
out
aam
push
sbb
out
inc
mov
std
push
sbb
jl
jl
xor
sbb
pop
pop
pop
pop
lods
add
test
cld
test
jne
inc
mov
push
lds
cld
add
jbe
push
adc
in
ss
sti
sub
je
shlb
inc
mov
in
idivb
jbe
mov
mov
shr
cmp
or
and
cs
pop
and
ret
loope
popf
daa
push
rcr
ret
sbb
arpl
daa
xor
push
mov
movsb
lcall
shlb
mov
xor
dec
dec
or
inc
mov
xorl
lret
imul
lahf
adc
ja
pop
aad
adc
les
aaa
ret
add
pop
push
add
jbe
out
jmp
pop
sbbb
or
loopne
xchg
ljmp
lret
mov
call
repnz
sbb
fadds
pop
sti
add
add
sub
pop
xor
push
hlt
jg
test
sub
and
mov
adc
jns
jb
out
test
into
push
daa
and
test
jge
adc
andb
or
stos
sbb
int3
inc
arpl
ja
sahf
insl
and
add
adc
add
dec
add
leave
cltd
popa
enter
rcrb
lahf
inc
pop
rclb
incb
test
test
subl
or
adc
nop
rorl
xor
or
adc
push
or
aam
pushf
jl
or
sub
pushl
jo
rolb
cltd
lea
jmp
mov
test
imul
jnp
push
movsl
mov
mov
xor
or
icebp
popf
inc
cmpb
imul
add
cmp
je
mov
inc
mov
mov
sarb
sub
stos
out
testl
xor
push
inc
push
add
sti
adcl
ss
and
xor
push
add
push
daa
xor
xor
pop
js
mov
orl
push
add
nop
lret
inc
outsb
je
and
dec
pop
or
call
mov
dec
popa
pop
pop
ret
push
or
xor
mov
test
addl
lock
or
xchg
test
push
inc
add
xchg
add
out
add
add
jecxz
add
and
or
cmp
adc
cli
jge
inc
add
push
push
pop
adc
mov
mov
push
xor
sbb
add
cld
cli
je
cmp
adc
push
fs
int3
addl
and
push
inc
cmp
ljmp
in
inc
add
push
push
lea
lcall
xor
push
xor
dec
xor
mov
inc
xchg
sbb
addb
and
inc
adc
sbb
push
or
fs
scas
in
push
ds
pop
or
cmp
push
test
add
mov
pusha
shll
adc
adc
lret
and
in
test
les
mull
sub
lds
jge
add
cmp
je
jle
sub
divb
cmp
pop
adc
and
push
mov
mov
push
les
cmp
push
sub
sahf
cmpb
add
and
xor
aam
mov
sbb
cld
das
push
xor
and
mov
mov
cmp
cld
loopne
insb
push
cld
dec
jo
shrl
or
pop
adc
subl
pop
rcll
mov
dec
adc
fmul
and
arpl
sbb
es
adc
ss
add
sbb
push
in
or
movsl
jmp
lahf
add
xor
pop
push
pop
push
adc
loope
xlat
ret
push
in
in
mov
dec
stos
in
jns
dec
add
stc
adc
cmp
or
call
add
lock
xchg
jo
enter
lock
in
insb
shl
and
incl
addl
adc
loopne
xchg
mov
add
hlt
je
and
mov
shl
adc
adc
or
add
movb
pop
xchg
inc
adc
in
movb
lds
jmp
call
and
pop
es
pop
add
add
push
or
fdivrp
lea
inc
adc
sub
rcl
adc
or
nop
int3
rcl
loopne
sbb
inc
inc
lock
adc
adc
in
inc
xchg
dec
pop
int3
push
addb
inc
lret
adc
inc
leave
test
adc
xor
clc
cld
jg
and
cmp
repnz
in
cmpb
adc
orb
ds
add
sub
cs
lcall
adc
cmpsl
cmp
sub
imul
sbb
divb
lret
pop
jnp
notl
push
push
inc
xor
pop
adc
mov
mov
xor
mov
xor
cmp
sub
push
sbb
push
fs
mov
mov
add
fbstp
cmp
add
push
pop
mov
or
rolb
jb
orl
add
ja
adc
ja
cmova
int
sarb
xor
and
cmp
sbb
sbb
lock
jl
sub
pop
sbb
add
adc
lea
or
adc
push
loop
stos
lods
orl
add
push
imul
add
enter
add
and
xchg
daa
jo
mov
leave
rcll
and
jne
sbb
sahf
das
enter
jne
sub
sub
jns
dec
add
adc
add
jl
out
sahf
and
das
cmp
je
mov
lea
mov
xorb
add
mov
adc
std
stc
push
std
mov
mov
or
out
lea
push
call
jno
sbb
jbe
push
hlt
jp
rclb
add
mov
inc
push
scas
dec
jg
push
scas
add
push
pusha
nop
sub
push
outsb
xchg
sbb
add
sub
stc
push
enter
pop
or
adc
and
xor
gs
cwtl
divb
sbb
or
cwtl
stc
push
dec
adc
out
xchg
movsb
popf
or
pop
mov
imul
cmp
add
mov
mov
or
shl
dec
fcom
vmread
call
sub
mov
ljmp
scas
imull
add
add
cmp
adc
adc
inc
xchg
and
adc
repnz
div
and
test
rolb
add
or
ja
jmp
test
jmp
mov
fsubrs
push
mov
and
inc
mov
and
adc
mov
repnz
test
inc
add
and
inc
nop
sar
popa
mov
pushf
and
mov
cmp
xor
dec
xchg
notl
sar
jns
add
sahf
pop
mov
sti
push
mov
pop
xor
pop
push
rol
xchg
nop
cmpb
test
xchg
xchg
int3
jne
jge
and
fcom
xor
sbbl
mov
insl
xor
and
les
repnz
mov
pop
pop
lret
mov
sbb
aas
dec
mov
fchs
int3
push
fs
push
xor
faddl
mov
imul
adc
fadds
or
add
loopne
jmp
ret
mov
enter
gs
sub
cmp
xor
push
lock
jmp
push
rcrb
mov
cmpsb
or
call
subl
or
mov
in
in
pop
xor
adc
cmp
add
sbb
adc
test
lock
dec
lods
les
lcall
pushf
mov
ss
inc
pop
cli
add
bound
inc
xchg
cmpsb
pop
pushf
pusha
inc
test
or
pop
gs
aam
test
mov
and
inc
pop
pusha
fiadds
test
mov
aad
push
pop
scas
cli
or
rolb
cmc
mov
or
std
insb
nop
add
movsb
xorb
adc
cmp
and
lods
add
pop
addr16
and
adc
test
andb
jb
popa
mov
mov
jb
pop
xor
mov
and
ret
mov
pusha
add
lock
dec
test
clc
mov
fadds
cmp
repnz
sbb
test
cmpb
mov
push
dec
mov
push
cmp
mov
push
repnz
inc
rcrl
decl
xor
add
cmpb
fs
insb
enter
out
loopne
in
or
loope
adc
inc
outsb
jecxz
stos
cwtl
jno
jmp
rorl
inc
sbb
hlt
and
bound
int3
add
ss
cmpl
xchg
test
and
rol
add
mov
iret
mov
dec
sbb
xor
pop
sti
lea
dec
xor
or
out
inc
jo
mov
mov
pop
in
sub
addr16
add
sub
pop
add
mov
sub
or
sub
ljmp
inc
mov
test
inc
daa
sub
and
mov
add
inc
adc
jns
js
pop
lahf
adc
faddl
push
add
adc
push
aam
add
dec
pushf
push
inc
xor
jnp
xor
aam
mov
jbe
push
ss
mov
dec
jae
and
pop
sub
in
jno
std
hlt
sub
sub
data16
mov
test
mov
stc
add
std
scas
jge
shlb
adc
jmp
inc
mov
sti
inc
adc
mov
add
cwtl
adc
sub
push
dec
push
scas
test
mov
sbb
hlt
lods
inc
add
pop
or
inc
les
inc
cmp
dec
sbb
or
dec
jo
xchg
jg
shll
mov
int3
jmp
pop
cmp
mov
dec
jp
inc
xchg
imul
call
inc
rolb
syscall
mov
push
jg
out
jmp
push
mov
lret
ror
sub
sarl
xchg
sbb
sbb
cmpsb
aad
cmpsb
into
cld
insb
push
or
pop
push
mov
sbb
or
ds
ret
sub
shll
mov
xchg
inc
or
rcrl
or
dec
insl
cmp
andb
fidivrs
cmp
fcmovnu
mov
add
or
pop
scas
xor
test
inc
sbb
add
pop
push
insl
mov
fldenv
test
sbb
fcmovnb
xchg
and
sarl
lock
jno
out
mov
and
aas
add
pop
pusha
jle
adc
mov
and
inc
stos
jbe
scas
mov
imul
fisubl
and
cld
pop
mov
mov
pop
mov
pop
pop
pop
sub
out
push
push
subb
inc
or
inc
mov
push
daa
add
mov
or
cs
jnp
xchg
cmp
inc
and
push
je,pt
sub
fs
mov
dec
add
dec
push
inc
jae
inc
hlt
or
cmp
notb
cmp
sbb
shll
pop
lock
cmp
and
popf
pop
add
sub
cmp
je
and
or
xchg
pop
ret
mov
add
roll
rorb
and
add
int
jbe
jle
ds
dec
loop
add
inc
dec
mov
push
sbb
popa
adc
add
push
rcrl
test
cmp
add
cmp
mov
scas
mov
jmp
adc
out
pop
mov
iret
xchg
es
cmp
rcll
push
inc
xchg
test
mov
dec
add
aas
loop
jecxz
fnstenv
out
jmp
jb
fs
mov
mov
push
add
and
push
jne
xor
jne
scas
in
mov
in
les
xchg
mov
or
cltd
or
inc
sbb
rolb
pop
mov
and
jl
insb
insl
inc
mov
hlt
hlt
xor
roll
fsubl
and
es
mov
xchg
and
fld
adc
and
inc
adc
and
aam
aam
push
pop
and
aam
aam
and
in
enter
push
movsb
cld
inc
daa
mov
mov
mov
ss
lds
inc
sbb
pop
movsb
cmp
xorb
stc
lock
lock
and
push
aaa
push
adc
cmpsb
mov
movsl
ljmp
inc
mov
lea
sarb
push
adc
jecxz
int3
jbe
jo
mov
xchg
or
movzwl
sbb
cmpb
sbb
cmpsb
sbb
jnp
in
call
dec
inc
les
sbb
inc
adc
into
push
push
jne
or
inc
mov
and
int
std
out
popf
fistl
popf
inc
inc
push
add
in
mov
mov
out
sub
push
sub
and
push
xlat
sub
mov
and
stc
lds
jmp
mov
std
movsb
movsb
cli
fwait
inc
push
xchg
cwtl
movsb
test
inc
cs
shrb
pushf
and
adc
inc
test
out
fsubrl
shrb
add
pop
addb
ficoms
cmp
dec
push
dec
sub
inc
push
cld
pop
mov
mov
arpl
pop
outsb
push
lods
gs
or
sbb
adc
fidivs
pop
jge
fs
fsubr
lds
dec
push
push
cs
out
rol
add
enter
xor
cmp
sahf
insl
cld
adc
lret
adc
xor
adc
cwtl
cbtw
jmp
mov
pop
lea
aaa
lock
inc
inc
inc
dec
jb
mov
divb
inc
shlb
or
enter
stc
jb
adc
push
add
push
push
cmp
xor
mov
xchg
push
and
adc
mov
mov
dec
pop
addl
subb
movsl
sub
test
sbb
push
mov
dec
adc
push
rolb
and
push
push
push
add
int3
pop
jmp
and
xor
adc
and
sbb
or
fists
addr16
jmp
mov
mov
mov
test
je
push
xchg
mov
ja
je
add
je
pop
and
cmp
mov
jmp
stos
mov
scas
test
fisttpl
pop
mov
outsl
jmp
rcll
dec
dec
fildl
pop
and
mov
lods
movsb
jmp
pop
and
test
pop
repnz
ficoml
jne
adc
inc
add
inc
xchg
loopne
push
fsubs
rorb
scas
clc
clc
inc
cmpb
filds
inc
mov
pop
mov
pop
adc
pop
jne
cmp
idivb
or
sub
mov
push
cmp
jge
cmp
je
outsl
add
add
inc
mov
mov
fnstcw
fdivrs
xor
sbb
sbb
fdivrp
add
in
xor
stos
dec
clc
adc
mov
cmp
pop
rcrb
adc
add
mov
push
push
jmp
mov
xor
jg
lcall
push
mov
mov
cmp
cmc
fcmovnbe
jne
jmp
inc
mov
in
clc
adc
xchg
scas
mov
adc
or
pop
push
push
push
mov
jne
je
inc
jo
mov
xorb
adc
mov
shrl
push
insb
inc
aaa
xor
jns
leave
bound
roll
int3
add
ljmp
inc
lock
push
pop
and
movl
jl
movsb
pop
inc
xchg
or
push
mov
add
xor
ret
push
adc
test
call
fldl
es
test
je
adc
repnz
in
jnp
dec
jmp
sub
jmp
add
jmp
adc
test
mov
add
jmp
mov
inc
bound
mov
inc
dec
je
sbb
jmp
mov
and
cmc
and
dec
xchg
popf
and
mov
pop
pop
out
daa
ret
out
lods
imul
adc
ds
xorl
mov
add
mov
cmp
test
je
test
aam
or
or
dec
ss
mov
bndldx
add
add
inc
or
dec
push
push
sub
or
or
aad
mov
push
mov
jp
inc
and
sbb
aas
dec
rolb
neg
dec
mov
or
pop
add
sbb
jae
je
mov
ret
jp
push
and
add
outsl
jmp
mov
xor
dec
and
fsub
or
jecxz
and
ret
or
out
jmp
push
mov
cmp
test
fwait
cmp
cli
jle
nop
data16
sub
shlb
or
add
imul
or
pop
popa
fsubrs
test
xor
mov
adc
mov
mov
xor
cmp
jbe
mov
aaa
jbe
mov
mov
loop
stc
or
loopne
shrl
and
sbb
mov
add
jae
outsl
fisttps
loopne
add
pop
test
outsl
push
lea
fucomp
lcall
add
or
and
sub
mov
mov
add
xchg
lods
or
pop
int3
xchg
gs
add
jmp
es
nop
and
inc
aas
scas
jmp
in
clts
cld
jae
add
pop
in
aam
mov
sar
mov
mov
call
xor
shl
lock
hlt
clc
ja
xor
clc
cld
cld
jnp
testb
lock
negl
push
xor
cmp
fsubr
fdivrs
ficomps
nop
popf
or
adc
adc
sub
mov
or
cmp
jg
or
pop
jecxz
ja
jno
out
lea
enter
stc
sub
mov
call
add
outsl
add
dec
push
mov
or
fimuls
mov
enter
mov
lock
out
mov
mov
pop
lret
pop
fs
insb
add
jl
mov
jno
sbb
sbb
shll
adc
shll
add
jmp
pop
pop
rolb
pop
ret
xchg
mov
xchg
adcl
adc
mov
mov
insl
cmp
mov
inc
js
ret
sahf
add
sar
and
jmp
jle
lret
insb
clc
in
ljmp
lcall
sbb
adc
add
inc
test
add
roll
addr16
xor
je
div
or
call
rol
incb
dec
xor
cld
pop
insl
insl
jge
push
jne
sbb
mov
pop
xor
popa
sub
rol
out
adc
sbb
mov
lret
je
rep
cmp
fldenv
xchg
jmp
out
cmp
popf
popa
push
jle
je
adc
test
pop
jae
testl
mov
inc
add
ret
icebp
adc
add
cld
add
mov
cmp
or
cmp
and
add
inc
pop
sbb
mov
mov
in
adc
jne
sub
fcmovbe
loopne
cmp
cmp
add
inc
inc
jmp
lahf
lods
loopne
add
rclb
pop
repz
leave
rorl
inc
nop
or
mov
aam
pusha
jo
adc
mov
push
sub
push
insb
int3
inc
dec
loopne
dec
pop
inc
xchg
bound
in
cmp
jle
movzbl
push
xchg
push
push
mov
inc
sub
adc
jmp
adc
mov
xchg
jne
movups
mov
pushf
cmp
mov
sti
divl
addl
xor
iret
cmp
cmpsb
pop
subb
cmpsl
dec
add
pop
mov
mov
adc
push
shrl
jnp
cmp
add
adc
inc
mov
add
data16
out
sbb
or
adc
jg
stos
loop
sti
mov
js
testb
sbb
add
cwtl
fnstsw
in
shrb
insl
add
je
jne,pn
pop
and
mov
inc
mov
rcll
iret
cmp
orl
add
push
sti
icebp
les
xchg
jb
sub
adc
lods
jns
xor
dec
adc
add
jb
ds
push
sbb
sbb
sub
jae
and
jecxz
push
loopne
ds
sbb
and
sub
and
xchg
sub
mov
sub
and
pop
outsb
jbe
push
push
in
test
je
call
test
es
push
std
or
and
mov
adc
in
sub
cmp
xor
adc
testb
fmull
data16
dec
ret
orl
outsl
push
add
ja
shll
push
push
iret
rorl
cmp
mov
cmpsl
je
jg
lds
cmpsl
cmp
mov
emms
aas
test
ret
sahf
inc
std
fucomp
sub
jo
and
xor
adc
fdivr
inc
pop
int3
sbb
push
sub
hlt
mov
fsubrs
fcomi
jne
add
sub
sbb
outsb
push
mov
mov
test
mov
inc
mov
jne
test
test
lock
jbe
mov
iret
adc
sbb
or
mov
inc
adc
add
push
or
test
mov
adc
jge
aad
pop
cs
test
jp
xor
iret
fcom
rcr
cmpsl
add
jecxz
inc
add
in
scas
pop
add
add
pop
mov
dec
into
pop
sub
jecxz
loope
mov
sbb
fnstenv
inc
jmp
lds
or
and
and
cmp
and
and
inc
mov
ret
mov
ret
adcl
lea
testb
orl
daa
std
adc
mov
cmp
test
push
cmp
fidivrs
push
push
shl
push
or
xor
divl
lret
aas
loope
decl
ss
push
iret
xor
cmp
iret
out
jne
and
cmp
push
sbb
jne
cmp
mov
cmp
ja
fdivrs
out
cmp
je
test
popf
adc
xchg
sub
mov
aaa
push
std
cld
mov
movsl
ret
push
jg
push
scas
ss
shrl
jp
popa
jmp
js
push
and
mov
mov
pop
shrl
fisubrs
push
pop
and
sub
andb
hlt
inc
mov
xchg
les
xchg
and
dec
push
cmpsl
cs
lret
mov
loope
add
lcall
dec
clc
sbb
cltd
sbb
mov
shrl
stos
rorb
cmc
jne
loope
sti
dec
jge
lock
mov
cmp
add
mov
scas
mov
je
jmp
das
xor
ret
mov
test
and
jbe
movl
xor
add
pop
ja
loopne
ret
push
push
or
mov
and
and
ss
sbb
iret
sub
addr16
loopne
imul
je
push
jns
div
or
inc
leave
mov
adc
xchg
adc
mov
je
push
mov
sbb
jo
jno
or
mov
test
sub
sub
add
outsb
add
loopne
dec
cmp
jb
fildll
je
xor
movsb
sbb
push
cmp
mov
jg
sub
fadds
rorb
mov
xchg
jns
add
or
jbe
push
adc
jg
je
cmpb
pop
mov
in
push
enter
cs
push
fwait
es
adc
mov
sahf
or
cld
mov
jb
ja
or
or
pop
or
or
mov
dec
adc
jmp
ss
cli
je
pop
loopne
sub
xchg
push
lods
mov
dec
push
dec
or
out
mov
dec
and
fwait
dec
push
dec
inc
adc
enter
sbb
xchg
cmp
test
adcl
adc
add
ficomps
int3
adc
ja
divb
push
and
test
push
push
aad
sub
xor
mov
jo
sub
rcrl
shr
rorl
mov
dec
inc
mov
xor
xor
add
pop
insb
add
push
out
int3
data16
pusha
xor
adc
inc
inc
jmp
js
pop
or
and
shrl
out
or
adc
dec
fwait
add
ds
and
push
push
xchg
leave
int
out
or
push
add
mov
mov
movsb
xchg
dec
dec
push
jns
or
cmpl
mov
sbb
mov
mov
push
out
jmp
jecxz
add
jb
and
add
xor
dec
mov
and
cmp
data16
jecxz
or
enter
pop
jl
loope
adc
inc
scas
in
jl
fldl
lods
out
push
movsl
mov
cmp
add
dec
and
fmuls
mov
sub
add
dec
mov
imul
notb
mov
ret
sti
sub
jmp
mov
mov
jge
jmp
sub
cmp
jb
les
push
movsbl
pop
cmpsl
dec
cmp
cltd
incl
stos
push
mov
dec
movsl
pop
cmpsl
add
mov
xor
cld
sub
sub
frstor
sub
mov
pop
cmp
popa
push
in
js
fsubrs
xor
xor
inc
inc
pushaw
icebp
pop
aaa
sbb
add
inc
ret
enter
bswap
jne
inc
mul
ret
add
js
divl
add
js
add
add
mov
out
or
ret
mov
outsb
fwait
xchg
aad
mov
loopne
push
rep
mov
sbb
pop
shlb
mov
shl
pop
inc
or
sub
and
xchg
pop
in
test
dec
je
mov
dec
cmp
shll
mov
add
add
rorl
test
mov
lahf
mov
in
jmp
jmp
pop
sbb
xlat
xor
fcmovnbe
ljmp
div
fucomi
sbb
sti
out
das
inc
inc
push
push
cmp
ja
jb
cmp
fld
push
mov
rolb
mov
data16
sub
outsb
mov
icebp
inc
jmp
outsb
sbb
mov
adc
add
cmpsb
sbb
jbe
insl
cmpsb
fstpt
pop
or
or
fiaddl
jl
fistpl
addl
fisubl
adc
cmp
sbb
adc
and
sbb
es
aas
pop
sbb
sbb
fldenv
leave
enter
icebp
sbb
dec
orl
adc
inc
mov
ret
mov
mov
dec
stos
mov
push
das
shrl
or
mov
jmp
fmuls
cmp
jne
inc
inc
dec
hlt
or
push
je
jne
mov
mov
or
pusha
outsb
mov
jecxz
addl
cmpsl
inc
int3
mov
and
cld
and
adc
ljmp
xlat
mov
and
les
lret
neg
jne
arpl
cmp
jne
push
adc
jg
movsb
outsb
filds
int
pop
and
stc
pop
xor
pop
adcb
rcll
mov
sub
mov
mov
cli
loop
sbb
cmp
jg
pop
jg
es
je
int3
hlt
ljmp
pop
jge
cmp
or
push
push
or
test
pop
jmp
mov
andb
enter
pop
adc
add
add
std
mov
pop
jmp
push
or
or
or
push
pushf
leave
arpl
ret
cmp
stc
push
inc
inc
or
add
or
add
cwtl
inc
loopne
pop
or
inc
insb
or
scas
fsubrp
ljmp
rcl
dec
cmc
dec
frstor
inc
push
lods
mov
push
test
pop
rolb
in
fimull
jne
jbe
lods
fstp
pop
test
xor
or
inc
sahf
pop
in
jne
inc
gs
mov
push
add
mov
shr
sub
lods
sub
sti
adc
cmp
mov
dec
sub
adc
dec
sbb
sub
movsl
cmpsb
mov
inc
xchg
rcr
cmp
in
xchg
jne
jmp
lods
or
leave
pop
sti
push
push
jmp
push
push
test
xchg
push
mov
and
outsl
jo
enter
dec
add
shrb
and
mov
inc
jbe
push
push
sub
inc
lret
cmp
pop
stos
test
rcrb
sub
push
fistpll
clc
xlat
stos
sarb
enter
rolb
ja
cmp
dec
sub
cwtl
and
idivb
xchg
or
jno
cmp
jb
mov
xchg
mov
out
mov
pop
push
pop
push
inc
mov
movsl
or
jp
shrb
xchg
in
leave
jbe
mov
push
movb
loop
mov
ret
sub
sbb
xor
and
fisttpll
adc
idivb
repz
ljmp
inc
jmp
loopne
push
push
xor
add
or
push
sbb
mov
mov
data16
imul
sub
mov
cld
orl
cmp
adc
outsb
aaa
sahf
or
sub
pop
sub
mov
add
pop
add
push
mov
adc
fcmovne
mov
jb
popf
mov
jmp
movsl
nop
cmp
sub
out
cli
popa
jmp
mov
aaa
cmp
jae
jle
insl
lods
jno
insl
jb
jns
cmp
jbe
pop
sub
add
or
or
push
mov
clc
cmp
mov
sbb
push
adc
mov
inc
scas
push
or
xlat
adc
ds
sub
mov
sub
or
loope
cmpsb
dec
rclb
clc
and
mov
subb
daa
divb
movsl
and
and
fcmovbe
fistpll
neg
sbb
neg
mov
mov
pop
add
add
sub
mov
sub
fisttps
dec
lods
mov
push
mulb
xor
aam
or
add
push
inc
stos
adc
aas
push
pop
sub
and
es
adc
pop
das
inc
stos
out
repnz
xchg
lret
adc
mov
test
leave
cmp
dec
mov
decb
not
mov
jle
jp
pop
jno
ja
je
jnp
sub
or
test
pop
and
or
adc
push
mov
out
lods
fldl
pop
and
and
mov
adc
add
sub
stos
mov
in
mov
add
pop
cmp
push
push
insl
fisubrl
push
jne
roll
add
dec
cmp
gs
repz
xor
mov
mov
aam
mov
and
push
sar
or
adc
roll
dec
push
push
mov
sub
shl
sub
out
movswl
gs
fisttpl
outsl
sub
sub
call
add
insb
out
push
popa
aam
or
add
shll
add
inc
lea
fistpl
push
push
aaa
mov
push
fsubrs
jmp
or
pop
shll
or
sub
popa
scas
das
and
push
jno
adc
dec
or
xchg
mov
xor
sbb
inc
fcomi
mov
add
data16
pop
fcmovne
sbb
pop
insb
dec
or
mov
mov
roll
or
test
sbb
std
and
xor
rolb
jg
xor
vmulps
or
ds
lods
push
pop
sbb
inc
cmc
scas
imul
inc
adc
in
xor
add
cld
lret
fisttpl
dec
cmpsb
pop
loope
jmp
aad
not
add
mov
testb
shlb
lea
mov
or
push
or
in
gs
mov
sti
mov
xor
and
or
mov
rcrb
pop
sbb
insb
inc
lcall
in
mov
add
hlt
push
js
lock
cmp
or
push
in
jp
lret
sub
and
js
push
cmp
out
mov
jnp
jnp
lods
push
enter
ljmp
lcall
fnstcw
rorl
enter
in
fmull
lret
movsl
in
add
je
cs
sub
adc
fmul
inc
cmp
or
or
inc
xchg
mov
adc
cmp
sti
sub
jge
shrl
popf
lea
inc
add
pusha
mov
jo
leave
pop
sarl
inc
shr
jmp
mov
cmp
cmp
xor
mov
cs
je
insb
je
xor
out
mov
xor
add
jne
jg
xor
push
inc
inc
rcll
je
xorb
shlb
sbb
ret
inc
adc
std
jae
mov
sub
sbb
inc
jo
push
push
fsubrl
adc
gs
cmp
sbb
mul
js
sub
clc
pop
call
mov
insb
adc
aam
push
xchg
lods
xor
test
or
std
xor
femms
sbb
adc
int
addl
mov
adc
mov
dec
xor
dec
int
sub
and
insl
or
sbb
and
add
loopne
sbbb
inc
lea
imul
lock
outsl
ss
lret
jg
lea
or
clc
sbb
mov
gs
pmuludq
ljmp
es
sub
dec
jl
add
add
enter
pop
mov
mov
and
mov
loopne
je
mov
les
int3
mov
pop
js
out
mov
fdivr
sbb
loope
mov
hlt
dec
push
mov
adcb
lock
test
fisubrl
into
outsb
or
pop
dec
dec
mov
mov
enter
cli
adc
pop
insb
adc
out
xor
shll
and
in
pop
pop
adc
and
cltd
push
in
sub
test
sub
mov
push
imul
roll
add
mov
test
xor
and
addr16
leave
rcrl
pushf
adc
cmc
cmp
inc
std
mov
inc
cwtl
idivb
lods
jne
add
icebp
es
push
shll
pop
dec
add
jnp
aam
mov
adc
mulb
js
add
pop
add
jmp
dec
and
cmp
mov
xchg
mov
xor
sub
lahf
in
sbb
add
pop
push
cmc
push
mov
cmp
cmp
mov
or
call
push
inc
cmp
in
or
dec
or
mov
or
leave
fs
mov
jmp
and
jmp
pop
rcr
scas
rorb
je
jecxz
pop
jl
rorb
rolb
ljmp
mov
jmp
or
out
push
mov
jl
jge
std
sbb
mov
mov
or
jne
in
mov
sub
popa
movb
adc
in
sbb
pmuludq
mov
sbb
das
push
xchg
retw
xor
outsb
arpl
sti
cmp
add
pop
out
pop
mov
inc
clc
clc
mov
jmp
push
sub
insl
lret
inc
mov
sbb
sbb
test
mov
aas
mov
jge
into
hlt
or
pop
cld
test
es
mov
pop
sub
or
je
movsl
mov
shl
loopne
adc
mov
add
sbb
test
mov
lods
stc
and
outsb
movsb
or
adc
adc
fwait
sub
xor
aam
or
mov
je
add
mov
mov
js
andb
pop
fldl
inc
inc
enter
in
popf
mov
xor
subb
fcmovnb
adc
and
push
lods
loopne
adc
into
sar
jge
adc
mov
loopne
xor
xchg
lea
cmpsb
imul
filds
adc
decl
js
cmpsb
pop
xchg
loopne
mov
in
add
xor
cwtl
mov
shl
aaa
orl
add
push
inc
inc
iret
test
mov
mov
mov
pop
xlat
cs
mov
xor
cmp
xor
out
xor
push
inc
sbb
ss
clc
add
loop
xchg
addl
or
push
or
insb
inc
push
out
mov
arpl
sbb
sbb
xor
dec
gs
adc
adc
dec
mov
orl
mul
or
popf
pop
xchg
nop
dec
sbb
rol
insl
add
pop
push
push
dec
inc
fsubs
pop
adc
divl
je
inc
add
enter
clc
push
mov
adc
cmpb
mov
or
xor
testl
sub
add
inc
jl
loopne
repz
sbb
push
mov
inc
pop
sub
adc
xchg
ss
rolb
jmp
dec
dec
jg
pop
sub
je
push
sub
dec
xchg
clc
in
lret
je
dec
jne
arpl
inc
cmpb
sub
fistl
add
add
cmp
push
xchg
cmp
sub
and
jmp
mov
push
je
icebp
jmp
test
stc
int
pop
sti
jmp
decb
sti
cmpb
lods
lds
push
push
sbb
cmp
cmc
or
or
add
aam
jge
je
adcb
pop
push
dec
cmp
add
cmpb
ss
dec
add
leave
xor
xor
in
pusha
jnp
je
pop
arpl
jnp
imul
jp
outsl
mov
inc
pop
jl
decl
inc
or
loopne
cmp
pop
das
sahf
lret
cs
outsl
pop
add
fldl
or
shrb
ja
mov
addr16
add
jmp
sbb
faddl
xchg
mov
or
and
gs
pop
xchg
in
cmc
inc
ltr
sub
popf
push
mov
adc
mov
shrb
in
mov
or
cmp
push
cmp
mov
mov
xor
push
or
add
cmp
cld
pop
pushf
jle
or
xchg
dec
or
jbe
push
or
push
in
push
inc
xchg
in
jle
pop
mov
jne
sub
aaa
pusha
and
inc
insl
fwait
or
bound
inc
pop
push
cmp
push
gs
xchg
inc
es
sub
jmp
adc
stos
packsswb
adc
xchg
sbb
lahf
je,pn
xor
fistpl
andb
inc
jmp
adc
push
jae
push
cltd
cs
stc
dec
push
call
sbb
push
sub
clc
cmp
push
loopne
jle
ljmp
jae
and
lret
enter
add
push
cs
fsts
xchg
ret
pop
mull
sub
and
cmp
dec
sub
mov
sub
jo
mov
incb
dec
cmpsl
jnp
mov
push
jno
and
cli
pop
xchg
pop
inc
shl
jmp
xchg
popl
or
jbe
push
sbb
sbb
das
pusha
jo
fadds
pop
push
js
adc
out
test
push
pop
pop
mov
cmp
stos
cmp
test
and
push
jmp
lar
gs
nop
sub
cltd
pushf
nop
jge
fisttpl
insl
movsl
jnp
lds
mov
inc
sub
and
mov
mov
xchg
pop
inc
cmp
orb
and
idivb
shll
mov
jmp
ret
cmp
ja
xor
lock
inc
mov
mov
and
mov
add
pushf
or
inc
dec
jne
xor
jmp
cli
push
push
rcrl
fwait
jne
xchg
in
cwtl
add
add
stos
inc
shll
sbb
loopne
inc
push
fs
add
ljmp
or
pop
and
pop
call
add
loope
mov
dec
jnp
lret
test
je
into
jne
add
ljmp
inc
mov
dec
or
decl
fiadds
ret
push
cmp
lods
ret
add
int
mov
jmp
jae
pop
mov
scas
cmp
int
add
in
ficompl
dec
aam
fmuls
je
cmc
and
jne
jmp
add
xor
in
rolb
jae
add
push
add
pusha
xchg
fs
push
push
lahf
or
ret
push
mov
fadd
pop
jl
in
daa
push
insb
push
mov
mov
rolb
adcl
dec
push
jnp
fnstenv
mov
jge
dec
add
mov
mov
add
mov
je
lea
add
in
dec
and
xor
pop
in
popf
push
cmpsb
push
mov
fmull
add
mov
or
and
mov
mov
daa
je
add
je
les
insb
shl
jmp
lea
shl
jmp
dec
add
or
xor
std
jae
mov
aam
sub
fisttps
scas
adc
into
ljmp
fcmovnbe
and
dec
jg
mov
aaa
add
popa
repz
push
insl
arpl
lods
data16
jmp
rolb
mov
dec
sub
sub
or
adc
mov
push
enter
or
and
jne
outsl
cltd
mov
jne
test
mov
mov
lock
negb
sbb
mov
mov
pop
and
push
jnp
adc
cmp
adc
stos
insb
mov
xchg
or
pop
push
mov
bswap
jne
mov
ja
das
out
pop
cmc
subl
clc
xlat
decl
jg
das
and
mov
call
jno
out
mov
es
es
jbe
push
and
push
xor
aad
out
xor
aad
push
emms
or
pop
push
jmp
jne
pusha
sub
xor
push
lds
gs
outsb
push
sub
std
shrb
aad
repnz
jl
lods
pop
dec
or
arpl
push
inc
or
sbb
pop
insl
stc
sbb
testl
and
inc
dec
push
movsl
fstl
or
mov
push
jnp
aaa
cli
cmp
or
rcrb
jle
mov
je
xor
mov
mov
jl
into
xor
push
sub
and
xchg
mov
fdivrl
andb
pop
jg
inc
call
stos
mov
outsl
cmpsb
arpl
xchg
out
jno
stos
out
mov
pop
or
push
or
fildl
clc
mov
ret
xchg
and
push
ljmp
push
sbb
shl
stos
lea
mov
sub
push
add
xchg
add
cmp
sub
mov
inc
test
adc
inc
inc
imul
mov
or
ret
mov
add
sarl
add
mov
inc
push
mov
lods
or
cmp
pop
mov
mov
jns
cmpsl
pop
icebp
cltd
loope
imul
fdiv
push
cmp
es
negb
or
dec
stos
add
push
and
fldz
jecxz
adc
arpl
jo
cltd
int3
and
push
adc
or
ret
je
cmp
adc
fdivs
push
jge
jne
mov
aad
shrl
add
mov
outsl
call
je
push
mov
jbe
add
push
and
and
insb
pop
xor
stos
mov
adc
ficomps
mov
adc
dec
jmp
mov
push
xor
mov
addb
add
mov
xlat
out
push
push
movb
lea
add
mov
mov
rclb
pop
lret
sub
lea
adc
cmc
iret
rep
rep
inc
inc
mov
push
pop
mov
pusha
cli
xor
cwtl
jp
push
out
es
into
fsubs
std
sbb
in
add
xor
and
add
daa
mov
pop
lret
jb
adc
ret
test
pop
cli
adc
nop
sbb
jns
jmp
sbb
je
and
aaa
xor
out
jecxz
mov
mov
and
adc
xchg
enter
mov
sbb
sbb
ja
and
or
loopne
dec
mov
sti
les
std
test
ds
fistpll
adc
jns
imul
push
rcrl
push
push
arpl
adc
mov
mov
out
mov
dec
jbe
xchg
je
inc
inc
sbb
or
or
lods
adc
mov
push
jne
or
pop
and
add
push
outsl
pop
pop
pop
xor
add
pop
pop
pop
add
push
test
xor
lock
cmp
or
inc
mov
mov
mov
mov
or
mov
fs
push
daa
pop
popf
fildl
fwait
or
add
or
dec
aaa
add
xchg
je
cs
ss
nop
adc
push
inc
xor
pop
loope
mov
rolb
lret
and
adc
add
jl
test
test
add
jg
shrb
in
inc
push
and
cmp
and
mov
lds
fs
ret
sub
push
orb
adc
push
ds
orl
xor
cmp
fistps
pop
mov
sbb
cmp
jecxz
mov
jbe
xor
rcrb
daa
inc
pop
xchg
mov
or
dec
add
push
add
test
clc
or
ljmp
adc
dec
ja
xchg
mov
adc
push
jne
ds
loopne
push
rcll
addb
dec
pop
test
daa
pop
xor
add
fisttpll
outsb
addr16
xor
add
int3
add
push
les
pop
pop
mov
mov
or
cli
add
pop
int
call
subl
jno
add
sub
shrl
mov
mov
imul
inc
rolb
dec
mov
aam
jecxz
or
lea
adc
lea
sbb
mov
clc
mov
dec
jnp
rcll
dec
cmp
jbe
push
lcall
decl
jae
lahf
add
jmp
dec
add
shrl
je
and
decb
jne
andl
sarl
pushf
mov
cli
mov
add
push
add
pop
inc
pop
add
mov
lods
sub
xchg
mov
push
xchg
pop
sarl
push
mov
hlt
mov
ja
cmp
sar
sbb
dec
pop
cmp
jbe
mov
adc
adc
cmp
je
mov
mov
jno
cmp
mov
lret
shr
not
and
add
outsl
ss
jnp
dec
loopne
sbb
mov
inc
pop
lods
popf
push
inc
dec
cltd
dec
out
sub
add
inc
mov
sub
pop
or
or
or
inc
imul
pop
jae
xchg
pop
xor
cs
add
or
push
scas
inc
mov
stos
imul
dec
sub
jae
cmpsl
por
in
adc
or
insl
inc
lods
or
jmp
and
lock
xor
and
adc
xchg
mov
or
addl
xor
insb
or
xchg
cmp
out
test
or
add
lsl
push
sti
inc
test
call
pop
negb
sub
xor
push
or
cmp
dec
movsb
mov
add
cmp
dec
out
jns
pop
call
add
adc
mov
jo
pop
adc
adc
mov
adc
add
xor
sub
dec
adc
inc
xor
sbb
aad
fbstp
cmp
das
cmp
movsb
pop
dec
insl
or
push
push
hlt
mov
mov
xchg
sub
gs
cmp
sbb
lea
loope
and
dec
cmp
jge
addb
mov
mov
nop
xchg
enter
not
call
dec
add
addr16
fisttpl
and
decb
iret
scas
add
adc
sbb
in
fnsave
pop
jne
mov
cmp
es
insl
jmp
sbb
and
scas
jnp
inc
sahf
popf
jae
adc
jmp
es
pushf
mov
and
jnp
fildl
pop
inc
jno
rcll
popf
test
jmp
sarl
sbb
ljmp
mov
scas
daa
nop
inc
mov
mov
jo
cmpsl
or
push
frstor
pop
jecxz
inc
or
or
mov
pop
or
or
je
dec
xchg
xor
pusha
adc
dec
push
into
cmp
or
and
jl
shl
inc
jmp
mov
fnsave
push
stc
inc
or
push
icebp
cmp
sar
dec
cmp
jle
pop
scas
or
dec
lret
or
popa
cmp
sub
stos
dec
add
call
add
mov
decb
jne
mov
inc
cltd
jns
and
jmp
dec
adc
sub
test
sub
sub
lods
inc
sub
add
ss
jl
jns
jne
or
push
test
test
mov
icebp
mov
mov
add
pop
sbb
decb
jge
shrl
push
xchg
or
adc
fldt
or
or
in
bound
mov
sub
sub
cmp
divb
or
dec
ja
test
add
clc
insl
out
jb
loop
lock
and
adc
cld
cld
jbe
pusha
lahf
shlb
lea
jne,pt
cmp
in
hlt
dec
cmp
push
outsl
adc
rolb
or
or
and
mov
xor
push
pop
inc
mov
mov
enter
les
loopne
inc
xor
xorl
lea
pop
add
add
cmp
mov
sbb
or
pop
xorps
pop
imul
out
dec
and
lds
mov
add
stos
inc
dec
mov
push
rol
push
pavgb
jno
inc
mov
ret
inc
ret
aaa
mov
sbbl
mov
testb
add
dec
push
mov
lods
pop
sti
test
out
push
mov
mov
xchg
negb
lahf
popf
lods
lea
ja
lea
out
out
clc
rorb
orl
cld
push
movl
xor
mov
movl
sub
lock
fiadds
pop
mov
or
popl
sahf
inc
inc
xor
sahf
jecxz
inc
inc
mov
sbb
jne
or
mov
pop
ljmp
mov
cld
pop
and
cmp
hlt
push
je
pop
sub
or
ljmp
orb
cmp
lock
cmp
or
ret
orb
mov
popl
sbb
or
lea
dec
pop
rcrl
lret
lret
adc
pop
dec
cmp
push
repnz
clc
icebp
add
jo
pop
and
shr
push
leave
nop
dec
or
or
and
jg
sub
add
mov
fwait
stos
jo
and
incl
inc
xor
cli
pop
insb
imul
mov
aas
mov
rcrl
add
mov
lret
dec
pop
pop
pop
pop
jmp
repnz
pop
and
addr16
and
iret
in
mov
dec
mov
test
push
repnz
pushf
inc
xor
add
or
jmp
adc
loop
and
mov
cmpsb
pop
xchg
fcmovnu
sub
dec
ss
xor
adc
adc
jbe
xor
ljmp
negl
sbb
and
cltd
in
dec
inc
cmp
je
xchg
pop
inc
xchg
imul
rclb
or
jns
push
icebp
loop
jno
or
mov
mov
mov
ret
loope
pop
push
add
enter
pop
in
punpcklwd
dec
ret
mov
psrad
inc
mov
jae
pmulhw
pop
xor
jns
push
sbb
test
dec
sbb
ljmp
jb
push
mov
push
lea
mov
jb
shlb
inc
sub
shlb
sub
add
lcall
scas
mov
push
mov
les
or
pop
or
inc
sbb
pop
jmp
inc
mov
or
mov
xchg
mov
inc
sbb
mov
stos
lret
in
mov
outsl
push
rolb
ret
rorl
mov
dec
xchg
cmp
mov
jecxz
ljmp
add
cmp
jae
orb
jne
addb
inc
add
or
rclb
add
daa
cmc
insl
mov
dec
cmp
inc
inc
decl
mov
sub
xor
xor
sbb
inc
and
inc
mov
pop
loope
aam
movsl
test
push
nop
or
mov
push
cmpl
xchg
fsubr
ljmp
mov
pusha
jl
lock
push
aas
mov
inc
sbb
push
test
add
lods
push
in
inc
and
outsl
mov
jmp
fidivrl
loop
out
or
jge
and
inc
or
pop
loop
sub
jns
jo
clc
lds
inc
and
or
push
cli
mov
xor
cmc
sub
mov
or
push
and
and
mov
inc
jbe
add
jb
mov
je
pop
test
orb
sub
mov
and
push
inc
movsl
enter
inc
mov
sub
push
rcll
aaa
sbb
lock
xchg
ss
out
sbb
sub
stc
or
rclb
push
enter
mov
aam
add
and
cmp
inc
les
push
inc
add
lea
and
add
inc
pop
and
sub
mov
xchg
or
pop
inc
mov
sub
sbb
js
mov
cmp
out
jae
mov
int
lret
jo
pop
loopne
sbb
gs
push
movsl
cmpsl
fldln2
aad
lcall
adc
xorl
call
cmpsl
jle
aam
adc
mov
fstpt
sbb
orb
cmpl
imul
inc
cmp
inc
cmp
push
mulb
pop
mov
shld
shrb
push
add
lock
adc
call
sbb
xor
testl
ja
cmp
adc
ljmp
je
rcl
add
push
or
mov
or
cmpsl
mov
inc
mov
cmpsb
mov
dec
movsl
jle
mov
orb
mov
or
cld
mov
inc
pushf
fwait
test
test
jle
mov
ss
jae
fldt
mov
jmp
or
jge
jo
inc
or
aas
adc
sub
sub
mov
mov
cmp
jmp
jbe
inc
adc
pop
sbb
jne
mov
sub
push
and
sub
lea
push
add
inc
add
adc
push
or
cltd
sbb
push
cld
add
adc
pop
movsl
jae
adc
inc
movsl
push
push
dec
popa
cld
push
mov
lret
xchg
cmpsb
mov
mov
xchg
xchg
addr16
test
bound
sbb
mov
sbb
aas
push
jae
pop
lods
ret
dec
mull
jmp
and
fdivl
sbbb
aad
or
inc
dec
stos
mov
jo
lea
divl
jp
xor
test
push
pop
add
inc
inc
in
stos
xchg
sub
xchg
push
cwtl
jno
mov
sarl
ret
sub
jb
out
jmp
int
imulb
cmpsl
aaa
push
ret
pop
js
rorb
leave
jbe
js
and
sbb
or
push
enter
inc
aas
sarb
mov
or
stc
sbb
and
sub
mov
insb
dec
xchg
testl
gs
add
mov
xor
adc
jae
jbe
pop
shlb
inc
mov
shrl
xor
add
shlb
pop
jbe
sub
jae
jle
xor
push
gs
cmpb
mov
repz
inc
add
jne
or
jo
and
mov
rorb
push
sub
insb
loopne
in
cmp
cmp
jl
mov
sbb
pop
lea
pop
pushl
inc
xor
je
xor
pop
sti
xor
push
push
push
insb
jns
push
push
mov
pop
pop
cmp
sbb
test
pop
rolb
aad
sbb
or
in
sbb
lods
mov
pop
sbb
pop
pop
xor
adc
adc
lahf
or
dec
push
xor
sbb
ljmp
add
data16
sti
test
sub
add
pop
adc
add
pop
loopne
std
or
jl
inc
or
inc
neg
loopne
inc
test
cmp
xor
enter
imul
cmp
aaa
test
xor
ljmp
inc
enter
insb
push
sbb
and
pop
adc
add
sub
dec
inc
mov
sub
and
jle
mov
insl
test
jecxz
lock
inc
mov
push
mov
test
pop
jbe
adc
lret
fiaddl
insb
sbb
or
inc
cmp
push
jo
leave
mov
push
mov
mov
sbb
add
lcall
add
mov
mov
mov
insb
cmp
pop
andl
ret
xor
push
push
cs
stc
jmp
stc
inc
test
out
pop
cmp
cmp
jmp
mov
filds
and
dec
sub
cmp
jle
jne
lock
dec
mov
push
sbb
push
dec
addr16
inc
loop
adc
sbb
inc
das
ret
mov
pop
push
cmp
adc
sub
popa
je
cmp
shll
pop
loopne
ja
mov
dec
sbb
add
jmp
mov
or
popa
pop
mov
inc
cmp
mov
popf
sub
sub
clc
push
jg
pusha
out
insl
arpl
sub
sbb
xlat
dec
dec
or
cld
jle
testb
jmp
adc
xchg
fcmovu
pop
adc
mov
or
cwtl
outsl
dec
or
scas
jne
pop
pop
cld
lar
scas
orb
mov
pop
or
test
je
je
cs
or
jmp
adc
add
les
push
mov
bound
and
xchg
push
pop
into
notb
lds
mov
or
and
mov
subb
adc
adc
iret
fwait
loop
and
push
or
jge
sbb
rorb
pop
bound
add
add
adc
cmp
cmp
mov
adc
push
jle
mov
adc
jno
int
testb
inc
pop
sub
pop
push
in
jmp
mov
jmp
and
clc
and
out
mov
or
cmp
loope
mov
jbe
cmc
out
inc
decl
pop
flds
or
cs
inc
or
pushf
clc
mov
aad
stos
adc
scas
lds
adc
xchg
lret
stos
mov
mov
fsubs
aam
mov
subl
loopne
push
push
mov
aad
adc
add
pop
or
leave
inc
add
adc
dec
add
icebp
add
mov
fists
sub
xor
jl
mov
cmp
push
pop
mov
adc
fs
sub
mov
rolb
sub
pop
dec
add
mov
testl
sub
test
or
rolb
push
enter
sti
mov
maskmovq
mull
ficoml
enter
jl
test
int
add
lea
mov
test
cmp
lods
out
dec
sub
and
lods
dec
push
mov
aas
adc
inc
inc
jmp
lret
or
jns
sub
ljmp
rorb
add
test
or
je
bnd
jl
pop
adc
mov
inc
mov
mov
stos
shr
sub
cmpb
add
loop
jmp
decl
sbb
mov
xchg
iret
mov
jne
pop
je
push
jp
add
aad
inc
dec
xchg
out
sub
inc
or
mov
or
or
add
icebp
cmpsb
and
lret
repz
or
add
bound
lods
lahf
pusha
dec
mov
scas
inc
lea
in
push
push
lods
xor
clc
inc
push
pop
or
inc
push
outsb
test
push
sbbb
pop
or
sub
inc
ljmp
or
ljmp
or
movb
mov
sbb
xchg
sub
lret
push
int3
fwait
shlb
icebp
cmp
jns
ficoml
xor
xor
test
test
mov
fcmovnu
imul
and
push
and
fadd
mov
inc
sbb
jae
fs
mov
lock
cmp
out
inc
sbb
sahf
xor
pop
int
xlat
sbb
and
lahf
lock
adc
std
ljmp
pop
pop
lret
fldl
xchg
lods
frstor
inc
gs
fmull
insl
lock
call
call
fnstsw
sahf
jbe
pushf
es
fs
dec
test
les
jo
xchg
lods
push
je
shrl
lock
fsubrl
and
mov
mov
or
or
mov
inc
mov
cwtl
mov
add
add
decl
cmp
cmp
je
mov
inc
fsubrs
push
je
sbb
shlb
stc
inc
in
or
xchg
mov
pop
inc
xor
adc
dec
mov
inc
push
mov
fisttpl
testb
ljmp
xchg
daa
add
mov
dec
out
mov
dec
mov
mov
imul
jns
and
cmp
add
je
mov
add
fisttpl
lahf
rcll
sbb
jle
sub
rcll
insl
cmp
jb
fidivl
out
adc
sbb
inc
pop
ja
sbb
cmp
ror
xor
cmp
cmpsb
pop
sbb
outsb
aaa
dec
shl
inc
sbb
xor
inc
jnp
pop
jae
or
push
xchg
js
adc
sti
enter
insl
cld
lea
enter
lea
call
mov
dec
jns
neg
adc
adc
fs
pop
idiv
add
cltd
push
mov
push
mov
or
add
jne
add
pop
dec
inc
xchg
and
aam
fcompl
or
mov
mov
pop
jmp
cmp
xor
xor
test
mov
and
js
ret
or
lds
std
jne
movb
or
pop
push
pop
jg
enter
pop
loopne
divb
pop
inc
rolb
sbb
cmp
xchg
add
add
roll
xchg
jge
scas
and
in
fsubrp
push
add
fidivrs
sub
push
mov
adc
bnd
ret
loope
mov
mov
sub
cmp
jmp
or
ljmp
mov
dec
sub
imul
setl
mov
sbb
dec
lahf
mov
jge
add
add
push
xor
add
and
push
xchg
mov
add
es
adc
shlb
ljmp
add
movsb
dec
mov
andb
repnz
xchg
mov
fnstenv
popf
inc
mov
add
loope
cmp
add
sub
pop
enter
mov
jmp
adc
dec
aad
jb
push
dec
or
inc
movsb
mov
sub
push
outsl
inc
ds
push
les
adc
adc
mov
xchg
mov
insb
and
add
inc
cmp
add
iret
adc
add
ja
loopne
mov
aad
sub
cltd
in
push
inc
jb
pop
lret
dec
and
pop
jle
inc
xor
ja
jp
test
jne
or
or
in
arpl
jp
cld
xor
test
arpl
data16
je
stos
mov
pop
inc
inc
adc
jnp
push
inc
movsl
pop
add
push
mov
cli
jno
dec
sub
pop
add
dec
les
fstl
add
push
pop
sub
push
add
ljmp
or
ficompl
pop
and
pop
push
pop
and
push
sbb
imulb
jne
push
push
jns
dec
subl
sub
sahf
scas
and
and
pushf
lcall
addb
inc
pop
add
adc
adc
movntps
xor
sbb
int3
and
pop
push
dec
jmp
sub
roll
subl
cs
and
int
add
inc
pop
adc
adc
insb
add
fwait
add
mov
and
fimuls
fidivrl
pop
or
adc
mov
es
hlt
adc
data16
popa
out
fs
and
dec
in
sbb
inc
aad
aaa
cmp
idiv
testb
je
ds
data16
mov
xor
inc
inc
shrb
xchg
andb
gs
sub
jnp
and
mov
pop
loopne
mov
pop
in
xor
mov
fbstp
fs
aad
int
je
mov
add
fldt
xchg
aad
add
mov
adc
inc
sub
mov
dec
orb
and
dec
repz
or
faddl
sub
add
push
rol
xchg
popa
jl
jg
jg
dec
mov
fnsetpm(287
cmp
xchg
mov
add
in
addb
imul
add
jns
xchg
bound
xchg
insl
jo
pop
add
rorb
fiaddl
mov
stc
adc
cmp
ret
pop
psadbw
push
insl
xor
mov
adcl
push
jno
or
pop
inc
xchg
test
push
inc
or
std
add
mov
cmp
loopne
ja
inc
mov
add
jge
rclb
pop
or
jecxz
pop
mov
add
inc
xchg
add
mov
mov
cld
fsubrs
fdecstp
ret
push
pop
into
outsl
aaa
mov
cli
fsub
pop
mov
dec
std
das
sub
and
add
adc
icebp
xor
dec
adc
push
push
pop
sbb
jae
or
cmpsb
mov
jp
sbb
fsub
enter
sub
ret
mov
xchg
push
jo
sub
insb
hlt
sarl
inc
xor
aaa
jae
mov
mov
inc
inc
or
cld
fwait
jb
ret
xor
or
loop
add
fildl
js
push
inc
pushf
push
sbb
sub
lea
rcrl
jae
adc
cwtl
pop
or
jne
add
mov
dec
add
ds
mov
movsl
jno
cmp
sbb
push
cmc
test
sbb
mov
add
push
cmp
jge
lea
sub
add
push
andb
mov
xor
push
jae
dec
or
dec
jo
add
sbb
cmp
lahf
test
xchg
test
cmp
add
cmp
in
adc
lock
push
rcrl
jbe
jmp
cli
push
adc
mov
sub
pop
or
mov
or
ds
in
loopne
mov
pusha
add
jmp
movsl
ss
shlb
aas
ljmp
dec
pop
add
or
inc
popa
push
imul
call
sub
int
jne
mov
pop
dec
sub
inc
xchg
adc
push
jge
mov
adc
inc
out
and
clc
or
jbe
or
ja
xor
inc
loopne
mov
pop
mov
cmp
xor
xchg
je
cmp
je
inc
add
mov
in
push
jmp
jno
add
mov
xor
or
cmpsl
xchg
pop
cmp
inc
js
push
push
cmp
call
dec
and
sbb
lret
push
push
cs
inc
sub
popf
int
adc
negb
std
aaa
jne
pop
incl
sub
ljmp
push
inc
out
xchg
mov
mov
adc
jl
mov
pop
sbb
inc
or
adc
fmuls
push
cmp
mov
pop
and
pop
xor
inc
dec
pop
sub
mov
fisubl
inc
rolb
jo
and
mov
xchg
mov
test
les
xor
or
jno
mov
inc
cmp
sub
pop
adc
inc
shrb
bound
roll
adc
dec
lods
fcoms
adc
inc
sub
sbb
inc
push
add
mov
inc
sbbl
in
mov
je
or
or
adc
sbb
dec
mov
rolb
cmp
in
out
imul
push
data16
sbb
pop
enter
movsl
add
pop
or
test
jge
jl
pusha
inc
sub
mov
ja
cs
dec
and
add
mov
icebp
pop
stos
push
sbb
mov
dec
sbb
sbb
inc
mov
push
pop
inc
mov
mov
dec
add
mov
je
adc
lods
fstpt
je
sub
loop
pop
jae
ret
cmovo
adc
inc
dec
mov
push
sti
push
mov
mov
ret
push
inc
dec
mov
fwait
orb
xor
rorb
add
xlat
mov
or
fs
jae
sbb
mov
popl
sub
insb
daa
ret
push
jae
insb
mov
stc
push
jno
sub
repnz
adc
clc
subb
mov
pop
add
call
xor
sub
and
sbb
lcall
into
out
push
sahf
pusha
sub
cltd
imul
dec
movsl
test
push
pop
pusha
mov
mov
imulb
rcl
xchg
mov
push
into
lods
negb
sub
movsl
mov
jo
mov
cwtl
cmpsb
and
and
in
inc
push
dec
test
inc
cmp
sbb
pop
xchg
es
jne
aaa
and
scas
ficompl
jmp
shll
mov
dec
jne
add
inc
xor
addr16
mov
stos
mov
jo
sub
hlt
xor
es
subl
es
mov
int3
dec
jecxz
repz
mov
jae
andb
sub
inc
cmpsb
hlt
int3
xor
xlat
sarl
jl
loop
mov
mov
sti
sarl
movsl
loop
push
sbb
mov
shr
sbb
sbb
or
xor
push
dec
iret
outsb
sarb
mov
mov
das
mov
inc
inc
adc
pop
pop
clc
lods
mov
mov
push
fdivs
jmp
mov
add
mov
negb
push
fstl
popf
shl
jo
xor
movaps
pop
push
data16
shr
inc
jb
rolb
orb
mov
xchg
or
bound
ja
jmp
add
jl
mov
ss
test
rol
pop
push
xchg
push
or
inc
call
in
clc
dec
adc
testl
setne
mov
mov
fadds
pushf
push
push
push
push
xlat
sbb
or
lods
fistpl
sti
lods
nop
and
jbe
or
mov
xchg
dec
fisttpl
jl
add
pop
add
insl
jmp
sub
push
or
ret
popl
gs
mov
ljmp
push
add
add
mov
sbb
lods
cmpsb
rclb
inc
xchg
arpl
jg
imul
ret
int3
push
inc
xor
pop
inc
xor
invd
fildl
jl
inc
in
es
pop
lcall
ds
ja
and
or
popa
jge
mov
lods
std
lret
je
push
push
lea
test
pop
pop
inc
or
cmpsl
fmull
xchg
js
and
add
mov
jne
push
or
or
add
ss
fimuls
cmp
ja
or
sbb
fucomi
sbb
leave
jle
leave
jmp
pop
push
aas
pop
push
inc
or
cmp
aam
and
sbb
loope
add
stos
jmp
add
and
push
loopne
scas
mov
ret
dec
adcb
adc
cmpl
pop
mov
decl
adc
cmp
rcll
pop
icebp
jbe
xchg
sbb
bound
fcompl
insb
mov
add
jo
push
cmp
jne
icebp
inc
pop
mov
jg
xor
sub
fcmovb
pop
xchg
or
xchg
and
pop
pushf
mov
gs
sub
push
xorl
mov
push
movsb
add
in
je
es
popf
and
fisttpll
sbb
add
push
or
call
daa
dec
mov
pop
sub
jmp
rolw
lea
dec
ss
sub
hlt
lahf
shl
adcb
leave
inc
cmp
dec
hlt
inc
loope
pop
xchg
popf
orl
mov
pop
adc
inc
adc
adc
or
sbbl
jb
sub
test
push
lea
mov
push
sbb
mov
pop
xchg
mov
shll
xor
mov
or
fimull
pop
mov
xor
sbb
movsb
sbb
push
ljmp
outsl
adc
jp
adc
inc
or
xchg
mov
fbld
push
lock
sbb
xor
sbb
adc
dec
cmpsl
mov
cmp
push
fldl
jnp
es
ret
call
add
mov
scas
adc
ja
push
push
mov
push
pop
sbb
hlt
push
cmp
lods
push
inc
inc
sbbb
test
add
push
or
inc
les
dec
dec
or
adc
mov
test
add
xor
sbb
data16
cmp
mov
mov
sbb
mov
js
push
rorb
std
jle
cmp
add
mov
jl
xor
adc
inc
mov
shrl
mov
jne
sub
cmp
cmp
xchg
xchg
mov
lret
rol
push
adc
outsl
jns
lret
dec
test
push
push
stc
add
mov
and
xorb
shld
shl
and
cmp
outsb
mov
loop
adc
adc
pop
push
je
sbb
add
adc
mov
subl
addl
mov
gs
adc
lods
mov
sub
decl
pop
xor
sarb
mov
adcl
cmp
and
inc
mov
adc
xor
mov
sbb
or
movsb
cltd
ds
loopne
xchg
sub
cmp
mov
add
sbb
jl
xor
adc
pop
insb
add
inc
or
fcompl
push
sbb
dec
add
ss
cmpsl
js
sbb
xor
inc
lea
inc
and
sbb
loopne
arpl
add
cmp
push
aam
push
push
sub
ret
cmp
push
xor
jg
dec
loope
mov
loopne
pop
sbb
push
pushf
pop
rorb
jmp
add
int3
int3
add
sub
jge
lahf
adc
pop
rolb
push
adc
jg
push
cmpb
or
jl
je
mov
pop
push
dec
fisttpl
or
movsb
mov
add
sbb
xor
loopne
pop
idivl
cmp
sub
dec
or
nop
enter
fdivrl
fstpl
in
xor
pop
fnstenv
add
cld
add
dec
inc
fwait
data16
daa
fnstsw
cmp
add
inc
add
inc
fwait
pop
insb
fnstsw
pop
subl
xchg
mov
adc
pop
in
mov
jae
or
es
mov
sub
clc
push
loopne
xorl
and
shll
cltd
or
jmp
into
or
shll
inc
or
push
ret
push
clc
int
push
adc
adc
jmp
shl
inc
and
push
add
jge
out
jae
ss
insl
stos
push
xor
jp
data16
sbb
xor
je
dec
mov
jg
stos
in
jmp
add
jmp
imulb
test
mov
pop
mov
inc
pop
adc
jbe
or
push
mov
aaa
fisubl
push
cmc
xor
push
cmp
mov
mov
push
xor
or
inc
push
or
jb
inc
xor
add
shrl
adc
cmp
jge
push
cmp
ds
inc
and
and
jnp
push
push
les
cmp
push
adc
mov
jnp
test
push
mov
aaa
lods
loopne
mov
adc
andb
jg
pop
cwtl
in
jno
mov
test
inc
fnstenv
adc
incl
push
rcrl
popf
sub
inc
and
cmpsb
mov
xor
aad
or
adc
inc
jmp
sbb
or
jnp
es
je
adc
push
pop
xor
mov
push
adc
fmulp
mov
xor
add
jge
aas
lret
enter
shrl
iret
je
jl
in
or
xor
add
outsb
outsb
sub
push
iret
inc
aaa
or
cs
clc
jmp
sub
add
iret
mull
pusha
inc
adc
cmpsl
orb
add
or
and
aaa
aaa
pushf
fdivrs
daa
test
mov
nop
psadbw
divb
test
adc
fdivs
pop
or
inc
xor
mov
jmp
jle
inc
adc
sbb
push
insb
inc
cwtl
push
or
stos
loope
xor
lret
add
or
je
rol
add
loopne
loope
dec
sbb
or
or
mov
sub
pop
clc
lret
mov
or
dec
jbe
inc
or
or
outsl
sbb
sbb
idiv
add
and
adc
cmp
jne
andl
sbb
add
subl
jne
jle
insb
inc
negb
sti
lock
xor
ds
flds
push
or
pop
sbb
mov
inc
xchg
outsl
rorl
lock
xor
movl
rcrb
pop
popf
not
and
or
or
lock
mov
xor
or
fldcw
push
or
out
and
pusha
aam
dec
rclb
xchg
bound
and
push
je
sub
pop
or
jbe
or
mov
add
add
add
add
pop
fnsave
or
pop
xor
pop
bound
mov
test
pop
adc
lcall
rorl
mov
int3
scas
sub
sarb
int
inc
mov
ss
pop
test
pop
pop
cmp
push
jp
pop
mov
add
scas
push
stos
ret
xchg
arpl
out
mov
mov
add
adc
into
shlb
jnp
sbb
mov
add
test
ss
fnstcw
daa
daa
or
fidivrl
into
or
pop
dec
orb
adc
push
push
or
add
cltd
or
sub
pop
ljmp
rolb
sub
jge
shll
adc
repnz
jl
test
arpl
inc
ret
dec
dec
adc
xor
push
pop
pop
sub
outsb
push
mov
fmull
sbb
add
sbb
dec
add
stos
adcb
inc
or
sub
out
repz
inc
cmp
pop
pop
mov
fmull
popa
cltd
mov
dec
cmp
enter
fst
mov
sub
pop
inc
pop
mov
pop
and
sahf
std
and
mov
aam
jge
mov
sub
mov
mov
and
xchg
cmp
mov
dec
ret
stos
add
pop
mov
sbb
mov
add
movsl
or
loopne
test
lret
ds
insl
in
xchg
scas
into
rcr
add
cltd
test
cmp
xchg
hlt
sbb
push
xor
insl
out
stos
mov
adc
or
adc
pop
movsl
xor
dec
mov
scas
add
hlt
mov
pop
mov
push
pop
faddl
jno
xadd
pop
test
lods
imul
out
sub
push
sbb
dec
sbb
add
xchg
mov
jmp
dec
rcr
sti
mov
dec
push
add
fs
push
and
pop
jne
sbb
outsl
adc
add
incl
stos
or
push
pop
aad
push
pushf
jnp
enter
pop
mov
cmpsl
loop
adc
add
ja
and
pop
xchg
outsb
aas
inc
inc
add
inc
add
sub
xor
xchg
sub
cmp
fdivrs
jo
ja
imul
in
push
dec
aad
in
ss
daa
inc
or
and
in
mov
jnp
cmp
jl
push
daa
mov
and
andb
ja
test
cwtl
add
mov
pop
into
push
adc
idivl
add
and
rcrb
jg
xchg
inc
notl
pushf
sbb
or
adc
xlat
jg
push
xor
clc
lcall
outsb
xor
add
sub
pusha
and
mov
add
adc
in
jno
add
cmp
cmp
mov
or
addb
mov
or
jle
movb
test
dec
jle
mov
sbb
jnp
rolb
pop
mov
inc
or
cmp
ss
push
mov
adc
les
inc
mov
incb
xor
incl
adcb
fs
les
inc
mov
pusha
push
pushf
fadds
adcb
pop
push
add
cld
movsl
push
in
outsb
int
int3
mov
add
mov
pop
movswl
loope
add
jmp
movl
cmp
into
xor
add
push
cmp
insb
insb
pusha
adc
flds
mov
bswap
stos
call
and
mov
aas
mov
and
push
shrl
sub
insb
pop
mov
add
sub
pop
stos
pop
inc
mov
enter
loop
mov
lret
adc
leave
mov
xlat
jle
cli
shr
or
xor
mov
add
fnsave
jmp
adc
iret
mov
xor
add
out
add
mov
pop
mov
pop
sub
sbb
pop
push
rolb
jmp
jne
aaa
pop
sub
js
pop
add
inc
sub
je
bound
pop
push
nop
sub
mov
js
push
jg
cltd
jmp
or
inc
or
mov
add
js
or
xchg
adc
add
pop
or
push
adc
and
push
mov
ja
inc
and
pop
cmp
nop
mov
sbb
mov
inc
jge
cmp
inc
fstpl
mov
addr16
adc
aas
push
in
inc
xchg
cmp
cmpsb
pop
xor
sbb
mov
mov
and
push
jmp
mov
mov
xchg
pop
mov
in
lods
inc
das
and
loop
add
or
add
adc
pop
and
xor
and
testb
mov
mov
push
stos
and
cmp
xchg
xor
pop
push
lods
jecxz
add
test
lret
xchg
pop
jmp
adc
and
pusha
insl
mov
outsb
adc
adcl
in
shll
adc
or
cmp
jge
xchg
ds
sub
test
ss
das
or
jmp
xor
and
js
jne
pop
lods
je
cwtl
mov
jge
push
aaa
jae
adc
mov
inc
mov
neg
gs
add
adc
mov
iret
mov
add
mov
xlat
mov
dec
xor
inc
sbb
jae
lods
push
adcl
mov
data16
sub
aam
aaa
mov
add
out
add
pop
xor
add
inc
or
movsb
mov
or
fisubrs
xor
mov
into
add
popf
xor
cli
hlt
decl
mov
mov
mov
shr
shl
or
pop
mov
cwtl
int3
shrb
pop
mov
push
sub
mov
movsl
ffree
out
shr
std
sub
mov
mov
push
or
call
and
in
lret
dec
inc
adc
jbe
push
mov
add
jge
sbb
xchg
fsts
xchg
out
push
add
jnp
xchg
adc
gs
or
mov
sbb
inc
cmpsb
or
outsb
mov
add
outsb
arpl
push
in
add
roll
cmp
jle
xchg
out
adc
loope
rcl
cmpb
pop
jae
pushl
add
sarl
aaa
adc
clc
jmp
add
pop
data16
or
sbbb
clc
mov
test
rcrb
pop
xchg
int
and
std
or
in
mov
xchg
and
or
or
push
ja
push
pop
and
aaa
dec
push
mov
ja
mov
inc
sti
xor
cmp
mov
and
fwait
lods
loopne
cmp
add
lret
add
je
into
jge
sub
cmp
sub
fcmovbe
fildll
ss
mov
pop
jmp
mov
xchg
jmp
dec
mov
inc
xor
push
jle
dec
test
and
sub
je
leave
push
add
in
jge
jle
jle
arpl
mov
inc
gs
jge
push
pop
mov
xor
or
jae
push
pop
or
mov
ret
in
jbe
ficoms
cmp
and
leave
mov
push
outsb
inc
xor
adc
or
jae
call
adc
mov
mov
push
and
addr16
pop
test
add
adc
push
pusha
arpl
sbb
push
sbb
or
inc
mov
or
jbe
pop
jne
adc
mov
mov
testb
imul
fs
rolb
jmp
pop
loopne
jl
ja
add
mov
inc
imul
push
and
or
pop
sub
or
inc
jmp
int3
mov
je
pop
insb
lcall
adc
mov
loop
pop
mov
push
pop
pop
fnstenv
sahf
sub
or
jg
movsb
xchg
sub
cwtl
adc
pop
loope
lods
mov
mov
lret
sub
sub
sbb
mov
je
rolb
push
adc
jg
mov
sub
rcl
stos
test
sbb
cmp
fstps
cwtl
decb
inc
cld
jbe
jge
add
mov
xor
dec
and
cmpsl
jbe
inc
jl
ficompl
repnz
mov
fnsave
push
dec
test
jge
mov
mov
and
loopne
clc
jge
mov
sbb
sub
cmp
rolb
jl
mov
test
outsl
adc
fs
cmp
addr16
inc
and
push
nop
pop
cmp
jmp
mov
cmp
out
cmp
dec
mov
pop
xchg
ret
pop
mov
sbb
jmp
or
push
cmp
rclb
mov
or
mov
jno
pop
add
stos
fldenv
out
cmp
pxor
xchg
or
inc
dec
shll
movsl
pop
sahf
cmp
xor
sbb
mov
int
mov
test
push
shll
in
out
dec
shll
in
out
lds
push
xchg
sti
out
aas
mov
xor
std
adc
inc
add
mov
mov
mov
mov
and
and
sbb
add
loope
fdivl
xor
pop
jp
dec
mov
mov
data16
push
mov
or
inc
cltd
loop
test
loopne
or
mov
cs
mov
and
sbb
or
add
fildll
push
loope
push
push
sbb
iret
and
sbb
adc
pop
mov
dec
out
or
incb
push
cli
imul
testb
aam
mov
repnz
repnz
fdiv
fmuls
jle
jb
jge
aas
jb
in
sbb
cmpb
push
sbb
inc
xor
je
data16
xor
nop
jecxz
pop
or
adc
mov
jne
sub
jo
sub
xchg
outsb
mov
sbb
jne
xor
insb
and
add
sbb
pop
dec
sbb
jmp
fldenv
cltd
sbb
push
stc
push
xchg
fsubrs
jns
push
or
dec
mov
mov
sahf
adc
mov
in
xor
or
stos
adc
adc
add
mov
mov
xor
pusha
stos
mov
adc
sbb
xchg
out
and
jmp
int3
inc
decw
stos
lock
sub
mov
andb
loope
add
das
adc
push
sub
flds
sub
sub
xor
test
dec
pop
pop
dec
inc
jae
lea
add
les
mov
or
xor
and
push
subl
leave
subb
sbb
mov
and
or
ret
addb
mov
and
mov
shlb
push
into
in
jg
mov
in
inc
addr16
mov
ret
in
mull
lret
jge
cmp
push
or
fld1
mov
and
in
cli
std
mov
aas
ja
icebp
add
cmp
insb
add
jbe
test
aaa
inc
sub
insb
adc
cmp
pop
imul
push
push
sarb
into
lret
ljmp
push
and
mul
pop
mov
or
lret
lock
push
mov
dec
jmp
dec
es
push
xor
test
or
ficoms
inc
mov
fld
inc
or
add
shlb
adc
and
push
cmpsb
daa
lods
jo
sbb
insl
hlt
add
call
imul
or
jg
adcl
jle
into
out
les
and
inc
xorl
inc
sbb
adc
xor
cmc
push
xchg
add
mov
test
cmp
mov
mov
and
sbb
test
mov
push
push
mov
mov
or
xor
ja
mov
sbb
add
loop
loop
sub
rclb
or
cmp
sub
pop
jmp
inc
loopne
jmp
stos
cmpsb
jae
or
sub
orl
cmp
inc
pop
mov
add
jmp
imull
addl
fistps
decl
rcr
add
gs
jg
push
mov
pop
lds
jmp
cmp
stos
mov
sarb
outsl
push
mov
adc
and
sub
sub
ret
push
add
test
clc
dec
daa
stos
mov
mov
pop
adcl
or
add
imulb
aaa
sub
xchg
popa
jmp
js
adc
or
daa
movswl
add
sbb
addb
sub
sub
push
out
mov
les
decl
movsl
arpl
mov
mov
push
movsb
mov
aad
mov
rclb
mov
sub
mov
sbb
dec
jno
repz
test
ficompl
jmp
mov
hlt
movl
imul
std
in
leave
mov
add
fldcw
arpl
or
pop
adc
in
pusha
aad
jno
mov
incl
add
std
test
movsl
cli
test
xor
leave
mov
lods
jecxz
fdivs
pushl
filds
or
shrl
cmp
ficoms
push
xlat
enter
mov
jmp
les
iret
shld
sub
mov
and
or
call
dec
push
sarl
fdivl
jno
add
aad
mov
lcall
mov
push
movsl
in
lahf
xor
mov
js
stc
and
ljmp
push
loope
or
insl
or
pop
arpl
hlt
push
imul
insb
sbb
fdivs
test
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
ljmp
cld
fistps
ficoml
gs
aam
pop
popa
mov
into
push
lcall
cmp
mov
inc
movsl
fisttps
xchg
fsubs
shll
ljmp
imul
mov
sarb
add
in
add
pop
dec
or
cmp
add
daa
adc
or
and
test
or
mov
popa
into
decl
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
fdivrs
lcall
mov
cmp
ljmp
rcrb
adcl
jae
or
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
imul
aaa
and
jmp
jno
insb
sbb
push
imul
aam
loopne
pop
jp
ficoml
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
shll
fdivrs
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
testb
incl
ss
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
fistpll
mov
loop
push
xchg
ja
int3
add
mov
das
es
inc
sub
mov
sub
mov
cmpsl
call
ret
shlb
sbb
ret
lcall
pushf
mov
insl
add
ss
jmp
addr16
jb
push
add
call
scas
sub
or
mov
xchg
or
out
fdivrl
fisttpl
aam
sar
incl
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
jg
or
jge
aaa
lret
pop
or
outsl
cld
incl
adc
sahf
gs
clc
sar
imul
push
js
or
push
incl
add
popa
cmpsl
notl
pusha
rorb
imul
push
scas
fcompl
fldenv
icebp
decl
filds
cmp
aaa
push
scas
mov
fidivrs
mov
jmp
sub
mov
lret
mov
cmpsb
mov
sarb
sub
call
fldenv
jp,pn
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
add
pop
out
add
jnp
inc
add
sub
add
push
add
add
scas
jge
inc
add
and
cmp
pop
or
int
std
aaa
xor
push
push
pop
mov
add
pusha
push
outsb
repz
js
pop
adc
jae
push
add
add
jne
insb
add
jns
jg
outsb
jne
insb
or
inc
dec
dec
inc
inc
dec
pop
dec
inc
inc
push
pop
push
inc
dec
inc
inc
push
inc
inc
add
enter
push
push
inc
push
push
cltd
push
js
pushf
lock
int3
jle
push
inc
jnp
ljmp
inc
inc
dec
jae
jb
arpl
jae
jb
gs
je
jb
xadd
fidivrs
and
push
dec
inc
xor
add
stc
mov
jns
sub
add
xlat
fistpl
adc
inc
mov
insl
jg
insl
and
pop
jb
push
lods
add
in
push
push
or
dec
dec
inc
push
outsb
jg
testb
dec
dec
mov
push
xor
cmp
sub
fiadds
bound
imul
mov
push
aaa
lods
std
outsb
outsl
je
add
addr16
shll
data16
add
imul
jb
outsb
aaa
ss
fs
iret
inc
xor
imul
and
movsl
arpl
and
insb
fistl
lds
pop
xor
sub
mov
mov
pop
das
pop
push
fsub
pop
xor
test
jo
pop
xor
mov
mov
arpl
cmp
fcompl
inc
and
gs
aaa
adc
aaa
insl
in
jbe
inc
lods
je
mov
arpl
pop
and
lcall
and
add
imulb
popa
insl
and
ss
or
das
xor
dec
adc
sbb
insl
outsl
sub
inc
clc
test
addr16
jae
shrw
subb
ret
bound
adc
dec
sub
pusha
cmp
push
imul
outsb
shufps
pushf
dec
imul
sub
push
inc
push
and
push
aam
pop
mov
cmp
in
aad
xlat
loopne
sub
insb
jno
sbb
sub
add
je
popa
inc
inc
mov
jbe
mov
xor
mov
xorps
popa
sub
fisttpl
testl
push
dec
inc
or
in
lea
inc
push
pop
add
movsb
sub
jg
in
mov
inc
jae
nop
mov
bound
or
pop
pusha
addr16
add
js
movsl
sti
pop
cmp
outsb
gs
imul
sbbl
stc
sti
adc
jo
jae
or
push
cmp
mov
arpl
xor
xor
xchg
inc
cmp
test
pushf
add
outsl
or
add
sbb
jle
das
in
sbb
jno
dec
push
push
push
dec
or
adc
bound
insb
xor
inc
cmp
in
mov
inc
cmp
in
add
xchg
xor
outsl
out
and
mov
test
insb
jae
or
mulb
popa
fbld
out
outsl
and
jo
imul
nop
lret
push
or
outsb
jo
das
xchg
out
mov
and
xor
and
iret
es
repnz
iret
inc
or
add
cs
test
ficoml
jb
cs
adc
das
sub
jne
outsb
xor
or
inc
cmp
mov
divb
bound
or
shrl
sbbb
and
stos
call
popa
insb
cmp
and
adc
adc
pop
push
inc
inc
dec
pop
inc
js
insb
outsl
mov
mov
stos
push
sub
dec
aad
and
push
arpl
js
stc
pop
notb
cs
inc
jne
jb
outsb
in
mov
jnp
push
cmp
dec
push
daa
inc
sbb
adc
gs
pop
lods
mov
jb
jb
mov
cmp
fwait
in
insl
jg
dec
das
push
pop
and
push
int
dec
out
outsl
outsb
push
cmp
mov
out
stos
and
jge
jns
pop
sub
inc
data16
pop
out
mov
sub
fs
daa
je
iret
mov
push
dec
dec
pop
or
jno
fcmovne
fidivl
and
add
add
into
xchg
negl
pop
inc
cmp
sbb
inc
pop
imul
movl
pop
cld
jae
cltd
xchg
or
lock
data16
js
imul
jne
sub
imul
popa
fldcw
outsl
or
imul
out
data16
add
push
add
dec
scas
arpl
sbb
xor
cmp
add
sub
or
fistpl
in
imul
and
add
dec
or
add
jns
fwait
pop
xor
dec
inc
push
insl
ds
int3
cltd
mov
and
sbb
fdivs
imul
cmp
daa
mov
imul
inc
pop
sbb
cwtl
daa
cmovae
cmpsl
pushl
pop
sub
sub
ljmp
out
das
xor
sbb
xor
xchg
in
push
js
das
das
jae,pt
add
add
push
dec
inc
pop
add
cwtl
jmp
fadds
rolb
imul
lcall
xchg
cmp
cmp
cmp
mov
imul
cmp
add
addr16
in
add
in
mov
das
cwtl
nop
or
fs
fs
mov
sbb
mov
push
shlb
pop
cwtl
sbb
test
sbb
in
and
xor
sbb
or
dec
mov
xorb
fs
inc
and
xor
dec
push
mov
fldenv
sbb
shlb
and
test
nop
xor
adc
fsubrs
aam
int3
add
fs
add
xor
xor
pop
sub
jns
dec
call
xchg
mov
addr16
cmp
das
daa
lock
xchg
shrb
enter
push
sbb
and
fs
or
pop
enter
sub
mov
nop
xor
dec
cmp
adc
cmp
add
sub
int3
pop
rolb
and
lods
pushf
xchg
pop
push
pusha
xor
and
test
dec
gs
cmp
ljmp
addr16
test
add
pop
fiaddl
mov
nop
shrl
cvttps2pi
aaa
xor
jnp
push
push
sti
iret
fdiv
mov
xor
outsb
arpl
pop
add
loop,pn
inc
adc
pop
shrl
rcl
push
add
ja
pop
pop
push
pop
cmp
push
dec
pop
xor
je
ja
inc
pushl
data16
jo
add
roll
adc
pop
mov
jae
inc
insb
imul
mov
shll
and
sti
outsl
jne
dec
gs
lods
mov
rorl
insb
insb
mov
jnp
adcl
sbb
pusha
inc
dec
div
rcrb
sbb
das
sbb
adc
mov
push
jne
and
push
jge
ficompl
popa
aaa
inc
push
mulb
pop
arpl
dec
jne
sti
dec
ret
outsb
xchg
cwtl
push
push
push
sub
mov
pop
dec
pop
pop
push
int
outsl
scas
fcmovnu
imul
dec
and
and
mov
pop
insb
or
mov
imul
enter
and
xchg
add
fimuls
shlb
cld
jmp
sub
lea
push
popa
or
or
pop
rcll
lea
push
outsb
pop
push
sub
cmpsb
stos
cmp
xchg
push
je
je
outsl
push
ret
pop
inc
push
inc
dec
push
dec
dec
inc
dec
inc
mov
std
jb
arpl
mov
fistpl
rolb
jae
in
lret
inc
push
jo
or
pop
arpl
and
fsubs
dec
xor
add
in
and
xchg
inc
fs
outsl
lea
xor
in
xor
inc
inc
or
and
leave
push
and
stos
test
outsl
repz
dec
gs
adc
add
xlat
fs
jmp
xor
inc
push
pop
enter
inc
inc
rolb
scas
pop
outsl
lahf
aaa
jmp
nop
or
or
pop
insb
popa
add
imul
pop
sub
jne
andl
pop
test
int
dec
adc
inc
pop
outsb
test
test
push
mov
cmp
int3
xchg
imul
mov
and
jnp
mov
imul
insb
push
mov
jg
lret
fwait
addb
movsl
and
bound
dec
add
sbb
inc
pusha
xchg
mov
dec
adc
cmp
sub
rcrl
push
dec
popf
jae
jno
sub
aaa
cmp
sbb
pop
inc
fs
or
scas
or
mov
and
inc
andb
push
inc
dec
mov
push
dec
xor
cmp
inc
pop
arpl
push
push
inc
push
add
dec
adc
xchg
inc
add
outsb
add
mov
insb
xor
xor
imul
xor
popa
sub
pop
push
push
rcrb
and
push
push
stos
cwtl
ret
push
in
jne
rolb
xor
sbb
nop
outsl
push
sbb
je
lret
imul
dec
inc
jb
pop
and
arpl
inc
rolb
ret
cmp
mov
inc
pop
xor
inc
pop
and
jb
test
jo
dec
and
and
add
mov
insb
out
mov
xor
pusha
das
and
sbb
jns
inc
sbb
in
divb
xchg
push
push
xor
popa
inc
push
and
fwait
orb
and
fidivs
jne
sub
add
dec
iret
xor
or
lds
pop
bound
outsb
xor
xchg
fisttps
pushw
mov
jb
jb
scas
push
xchg
sbb
adc
ss
jns
sub
xor
mov
hlt
sbb
insb
dec
popa
addr16
inc
jmp
xchg
fbstp
cmp
icebp
leave
xchg
outsl
xor
xor
inc
xor
pop
xchg
into
fnstcw
aam
test
jbe
mov
in
dec
das
dec
and
or
cmpsb
shrl
outsl
adc
dec
imul
push
jnp
leave
sbb
int
lret
pop
dec
jae
or
cmp
cmp
lret
inc
insb
movsl
imul
xor
push
not
mov
imul
or
jns
insl
lahf
xor
inc
add
aas
jne
sub
imul
lret
sub
sbb
aam
out
push
imul
iret
inc
and
push
xor
repnz
pop
bound
adc
inc
inc
cmc
sub
or
jmp
pop
dec
xor
mov
xorb
loop
pop
push
shlb
jo
cwtl
cltd
cltd
ret
and
mov
jmp
xchg
adc
ljmp
add
out
jg
mov
lea
adc
shrb
xchg
rol
pop
push
popf
fdivrl
pop
adc
mov
lcall
or
das
pop
js
push
push
or
arpl
outsb
sbb
adc
insl
sti
repz
xchg
lret
iret
data16
gs
push
pop
mov
lock
add
cwtl
repz
adc
ja
sti
lcall
pop
adc
popf
repz
lret
sbb
jg
aaa
sbb
adc
inc
sbb
adc
fbld
xchg
movsl
fstps
mov
lret
adc
mov
iret
lret
fucomi
jmp
lret
movsl
cli
hlt
std
adc
jno
xor
sbb
in
pusha
enter
ret
shlb
ja
jno
addr16
fdivrp
in
leave
jmp
cli
fdivr
std
jmp
ljmp
in
cld
or
negb
sbb
idiv
std
aad
sti
jmp
jmp
sbb
ljmp
fmul
sbb
lock
lock
jmp
test
std
dec
dec
dec
dec
push
aam
jecxz
cmpl
xor
add
test
mov
xor
xor
fs
mov
push
pop
mov
mov
mov
insb
sbb
cld
in
add
mov
push
fwait
sti
jnp
jno
stc
jg
pop
aad
ja
fs
jo
enter
xor
fcomi
and
mov
push
es
cmp
add
nop
and
jbe
jne
push
xchg
es
sbb
adc
add
jb
adc
inc
arpl
stc
out
add
cli
je
and
mov
iret
ljmp
mul
in
push
insl
xor
aaa
aas
xor
xor
xor
add
xchg
stos
add
push
jp
out
rcrl
jg
pop
xor
add
xor
xor
cmp
inc
lods
mov
push
test
adc
jnp
inc
inc
mov
push
or
mov
cmp
sti
enter
add
inc
movsl
sub
push
mov
std
pushf
xor
jbe
cs
push
adc
aad
push
pop
push
jb
jae
push
lcall
pop
mov
or
pminub
and
enter
in
xor
cwtl
jl
je
add
inc
dec
inc
push
add
repz
outsb
daa
lods
js
pop
adc
xor
inc
bound
push
lret
outsb
and
pop
mov
test
out
popaw
stos
lods
adc
icebp
aas
cltd
mov
aam
mov
jg
data16
lret
jecxz
sub
mov
sub
and
insb
fs
imul
aaa
dec
adc
dec
jg
push
rclb
jae
shr
add
mov
outsb
leave
incl
leave
adc
adc
add
cmp
add
add
pop
jg
inc
push
fbstp
and
std
int3
inc
fs
mov
std
sub
shlb
or
jl
or
dec
adcb
adc
es
fisttps
sti
test
inc
xor
test
pop
cmp
pusha
outsl
add
push
jbe
lcall
xor
sub
add
or
aaa
sti
test
fmul
add
incl
rolb
les
int
fs
sbb
sbb
setb
sbb
xchg
and
lods
stos
jae
sub
shll
nop
inc
adc
rcl
inc
and
jg
dec
mov
and
add
nop
pop
loope
pop
dec
add
push
or
notl
xor
sbb
lcall
cwtl
xchg
cwtl
dec
rclb
test
daa
sub
push
and
testb
add
add
sarb
call
lds
add
icebp
mov
xor
in
jp
add
out
xchg
cld
adc
or
mov
or
pop
inc
jmp
aas
adc
inc
push
sbb
cmp
pop
pop
add
rol
sarb
xor
das
push
xor
jnp
movb
ja
xchg
sub
and
or
imull
mov
mov
call
xchg
inc
popa
sub
or
addr16
mov
jg
xor
lds
out
popf
adc
pop
sub
cmp
push
arpl
insb
test
sbb
aaa
add
pop
mov
push
sub
xorb
loopne
out
and
out
call
rolb
push
jne
cmpl
push
out
add
nop
add
data16
lahf
cmp
pop
push
aas
getsec
xchg
shlb
xor
xor
pushf
or
jmp
inc
add
repz
rcrb
add
sti
call
jl
mov
ja
mov
pop
inc
add
cld
ja
inc
inc
outsl
sbb
adc
and
or
xor
ret
lret
lock
and
mov
add
push
fs
in
outsl
jae
push
mov
inc
mov
je
mov
dec
inc
loop
loopne
jle
adcl
sub
inc
jae
push
or
adc
push
daa
rolb
loopne
jo
mov
ret
mov
add
xor
xor
les
mov
retw
loope
inc
sets
push
shrb
pop
test
mov
pusha
cmp
outsb
insb
push
fsts
xorb
fwait
or
push
inc
mov
push
add
or
xchg
fs
fwait
jae
lods
push
cmp
xchg
arpl
test
das
sbb
mov
test
aaa
mov
and
pop
inc
mov
xor
xor
sbb
je
push
mov
jecxz
repz
stos
push
xchg
ret
imul
sbb
fs
mov
inc
dec
add
mov
iret
jo
test
sbb
inc
jb
xlat
add
je
sub
rcrb
popa
jbe
push
xor
mov
rorb
push
jns
inc
cmp
aas
inc
ds
add
popf
or
shlb
aam
ljmp
xchg
cmp
jo
cmp
mov
pop
sub
idiv
pop
xchg
and
add
mov
ret
loopne
mov
add
dec
add
dec
aaa
decl
mov
push
xchg
lret
adc
or
push
addb
lcall
stos
jns
imul
movsb
pop
cmovnp
sbb
call
incb
cli
addr16
lahf
inc
inc
push
and
das
xor
xor
adc
push
xor
mov
pop
push
inc
jecxz
gs
inc
shrl
sub
insl
movsl
jb
and
cmp
mov
test
sub
or
mov
push
and
aaa
mov
inc
clc
sub
adc
fcmovnb
movsl
imul
jo
push
mov
scas
cmp
inc
or
fnsave
testl
testb
cmp
test
sub
mov
aad
dec
fdivs
idivb
imul
sti
out
adc
cmpsb
ss
hlt
cmp
cmp
add
into
add
jns
mov
or
lret
outsl
mov
adc
push
or
je
insb
push
sbb
aaa
push
pushfw
mov
dec
cmpsl
and
adc
and
sbb
imul
cmp
push
or
in
idiv
dec
push
push
inc
dec
cmp
cmp
adc
push
jge
hlt
fs
inc
inc
in
inc
dec
inc
pop
loope
jnp
or
push
push
dec
push
dec
push
inc
push
rcrb
jnp
jp
hlt
fimuls
xor
pop
sub
es
jge
mov
fistps
dec
xchg
in
movsb
add
sub
or
pop
sar
and
dec
inc
jb
xor
into
inc
jbe
imul
add
lahf
int3
sbb
xor
jae
pop
enter
cmp
out
lret
xchg
mov
fs
out
sbb
sub
aad
jae
mov
xlat
xor
push
and
pop
cmpsb
or
ds
and
inc
inc
or
adc
adc
sti
xor
das
add
rclb
cmp
xor
movsl
ret
fidivl
inc
gs
mov
dec
sbb
pusha
int3
inc
notl
dec
call
mov
sub
test
jecxz
mov
idivl
or
jno
inc
movzbl
and
dec
xor
xor
mov
popa
in
mov
and
ret
fisubrs
and
push
or
and
push
call
adc
inc
mov
sbb
dec
outsl
adc
mov
aaa
pop
dec
inc
dec
push
jbe
push
sbb
sbb
mov
xchg
mov
adc
push
outsl
and
push
push
ret
fimuls
add
add
dec
push
sub
push
inc
push
mov
dec
inc
mov
dec
mov
stos
notb
inc
cs
sbb
je,pn
xchg
movsl
mov
fldcw
sub
test
std
das
rcrl
xchg
and
push
inc
clc
xlat
or
xor
and
inc
inc
cmp
mov
pusha
push
mov
lock
cmp
repz
xor
imul
mov
data16
adc
enter
pop
inc
push
inc
pop
lret
mov
pushl
xor
pushf
pushf
mov
xor
jb
pushf
pushf
mov
xor
pushf
mov
pushf
pushf
mov
pushf
pushf
mov
aaa
ja
pushf
mov
jl
popf
popf
jns
xor
push
adc
mov
fwait
enter
jle
jnp
add
adc
mov
mov
inc
xor
stc
xchg
xor
adc
add
and
lcall
nop
outsl
adc
cmp
adc
inc
mov
adc
xor
jl
xor
adc
mov
pushf
pop
mov
push
xchg
pop
xchg
pop
push
xor
jno
icebp
pop
jbe
xchg
or
inc
popa
push
xchg
push
inc
adc
lret
push
iret
or
push
or
xchg
sbb
or
push
imul
imul
mov
xchg
mov
or
jo
cmp
or
fistl
jnp
repnz
fldl
adc
jnp
jb
popa
popa
push
rorl
cmp
outsl
cmp
xchg
or
inc
inc
mov
or
dec
sbb
shrb
dec
push
in
sbb
dec
imul
lods
cmp
adc
cmp
fisubs
mov
je
and
or
inc
mov
xor
dec
or
sahf
lret
int3
inc
or
push
fwait
shll
inc
pop
mov
bound
adc
rcr
add
or
daa
int
fistpll
int
cs
daa
cs
fcompl
out
jl
inc
insl
dec
pop
push
lods
add
sbb
pop
push
pop
push
xchg
mov
push
adc
push
testb
pop
push
push
aad
push
or
outsb
out
cmp
adc
scas
dec
leave
push
lock
dec
dec
inc
pop
push
mov
dec
inc
push
push
push
outsb
idivb
stos
push
adc
adc
mov
inc
cltd
push
inc
fwait
pop
call
pop
push
adc
int
out
pop
push
daa
daa
mov
repz
inc
dec
push
sub
iret
aaa
jnp
pop
push
adc
imul
out
sub
sbb
sub
push
or
push
mov
xor
in
dec
xor
nop
dec
push
gs
mov
push
mov
inc
cmp
stos
push
cmc
pop
dec
inc
pop
mov
mov
mov
pop
mov
fbld
repz
adc
in
sbb
repnz
rorb
data16
sbb
inc
push
add
or
push
push
arpl
pop
sub
mov
popa
jo
push
dec
jb
scas
pop
fistl
arpl
jo
fidivrl
inc
sub
add
mov
jbe
arpl
adc
pop
decb
pextrw
dec
or
insb
imul
mov
cmovne
ljmp
jbe
je
jb
and
fwait
nop
inc
push
pop
bound
imul
popa
jno
dec
fisttpll
stos
data16
or
push
jne
inc
mov
icebp
mov
push
mov
arpl
movsl
xor
xor
mov
inc
inc
ficoms
mov
sub
sub
jb
add
les
cmp
dec
shlb
or
mov
popa
mov
jo
insb
jo
ljmp
jae
inc
icebp
or
push
popa
or
cmp
push
mov
pop
ret
push
add
jg
dec
subb
mov
mov
pop
jne
or
pop
or
jnp
cmp
out
addr16
mov
pusha
xchg
adc
fs
dec
outsl
mov
cwtl
mov
and
das
pusha
punpcklbw
sub
sub
inc
dec
arpl
insb
sti
or
cmovae
pusha
mov
rdpmc
fwait
or
imul
les
das
xor
sub
scas
sub
ret
push
insb
dec
adc
testb
push
pop
dec
daa
jb
add
and
adc
pop
fmul
notl
adc
pop
arpl
or
dec
mov
das
ret
mov
adc
cwtl
push
dec
shlb
test
cmp
add
pop
sbb
pop
pop
test
mov
in
push
js
xchg
or
bound
xchg
mov
nopl
gs
or
add
adc
xchg
pushf
sbb
dec
outsl
inc
xlat
jns
dec
iret
inc
push
mov
mov
mov
mov
pusha
lea
imul
call
fnsave
push
push
mov
or
shll
pop
push
add
int
filds
push
inc
add
jo
hlt
mov
cmovns
fidivs
lods
pop
or
push
xor
jbe
jb
push
setle
data16
inc
or
sub
lret
dec
bound
sub
mov
cmove
inc
imul
dec
and
sub
inc
mov
out
push
dec
adc
adc
dec
inc
adc
inc
lods
push
jnp
mov
push
aaa
adc
push
inc
xor
xor
sbb
cwtl
stos
xchg
dec
jae
rclb
mov
xchg
xchg
jns
popf
push
xchg
test
jae
xor
xchg
push
adc
int
mov
adc
das
pop
test
or
pop
rorb
inc
dec
dec
xorl
out
push
outsl
imul
xor
imul
xchg
lods
dec
jb
jo
jne
and
clc
jae
sub
and
test
xor
push
inc
jns
js
hlt
push
xor
in
adc
mov
inc
adc
adc
aaa
jnp
or
aam
push
inc
mov
mov
adc
push
es
and
lea
and
loope
push
adc
and
iret
arpl
aaa
roll
jb
mov
leave
bound
or
lret
xchg
and
xchg
fisttps
sbb
xor
addr16
sbb
inc
hlt
pushl
int
inc
js
jmp
jb
pop
and
or
shl
xor
pusha
insl
out
iret
xchg
or
xchg
cltd
add
lds
iret
inc
ret
mov
bound
orb
fcoml
in
sarb
add
push
jl
pop
push
push
nop
stos
mov
ret
jb
sub
adc
cwtl
nop
insb
cltd
mov
je
mov
jo
outsb
fwait
in
lret
aas
mov
test
xorb
mov
push
pop
inc
dec
dec
and
pusha
xor
inc
scas
je
mov
fs
push
dec
mov
lods
in
sbb
add
mov
inc
lret
dec
out
sub
sbb
pop
fmuls
push
lods
sub
adc
dec
fstps
inc
fs
scas
adc
mov
jg
sbb
lret
dec
jnp
cs
lcall
bound
pop
mov
std
cmp
pop
mov
xchg
adc
add
icebp
fists
push
int
adc
inc
jl
sbb
jne
icebp
jmp
outsb
mov
iretw
mov
flds
sti
push
fwait
or
adc
dec
adc
mov
lret
shll
icebp
adc
dec
sar
ljmp
movsl
mov
pop
fnstsw
movsb
adc
mov
adc
int
enter
bnd
cwtl
add
test
data16
fistpll
xchg
enter
movsl
adc
mov
lcall
insb
stos
push
call
fdivs
pop
stos
inc
xchg
daa
mov
push
xchg
lcall
in
jle
adc
mov
lret
idiv
adc
dec
sub
mov
call
mov
jne
sub
pushf
push
jbe
jns
push
popf
dec
mov
nop
insb
xor
pusha
xor
jle
pop
loopne
scas
push
cmpb
test
mov
mov
das
in
push
pushf
shlb
dec
mov
int
push
jnp
inc
mov
popf
add
ss
mov
mov
mov
jl
outsb
xchg
inc
mov
cmp
lret
jbe
and
add
xlat
sbb
sti
push
or
inc
pop
lock
call
inc
sbb
iret
adcb
decb
incl
dec
inc
push
push
dec
push
dec
and
dec
inc
and
fidivl
inc
dec
dec
add
push
cltd
sub
cs
in
cmpl
xor
xor
dec
and
fisubl
sbbb
xor
xchg
in
or
and
xor
add
movsb
jae
add
or
and
add
or
imul
push
dec
hlt
daa
mov
orb
bound
push
push
out
outsb
fcmovnu
push
scas
imul
pop
or
fidivs
xor
or
jae
or
ficoml
shlb
lahf
add
inc
mov
pop
inc
icebp
lahf
sbb
add
adc
pop
adc
cld
ljmp
sbb
repnz
sbb
scas
xor
rcrb
pop
fbstp
pop
sahf
inc
xor
add
pop
mov
inc
jmp
cs
add
pusha
adc
xor
aas
add
mov
or
add
add
or
pusha
sbb
mov
es
sub
add
sub
test
insb
frstor
jo
adc
dec
outsl
pushf
and
cmpsl
adc
jmp
push
adc
addr16
and
xor
not
inc
imul
and
mov
pop
sub
cmp
rclb
fwait
test
rorb
cmc
cmpsl
or
jl
xchg
hlt
pusha
mov
in
or
or
xor
cmp
or
in
adc
insb
push
and
xchg
adc
push
inc
ss
jl
inc
stos
pop
incb
outsl
inc
adc
adc
stos
pop
cmpsb
jmp
pop
adc
das
incl
push
das
or
testb
nop
push
mov
jl
add
mov
or
pop
xchg
fsubrs
stc
sub
sbb
jo
getsec
cmpb
xchg
sldt
orl
repnz
ltr
or
adc
pop
repnz
popf
lods
call
cmpsb
mov
mov
or
add
loop
jno
pop
and
dec
mov
add
bound
in
imul
popa
dec
repnz
pop
cmp
adc
dec
sbb
fsubrs
xor
pop
pop
sbb
add
imul
and
push
add
mov
jg
arpl
sub
jmp
test
add
insl
dec
push
add
inc
cmp
imul
add
add
cmp
and
call
das
arpl
or
fistl
rcrb
jg
inc
jo
push
cmp
pop
sub
jbe
and
imul
mov
fs
jae
pop
fstpt
bound
dec
jge
push
adc
sub
lahf
add
dec
sub
mov
mov
insl
cmpsb
mov
mov
pop
fs
push
daa
ret
push
arpl
cmp
subb
pop
add
shrb
add
paddusw
pop
adc
inc
or
push
push
mov
add
insl
movsl
lods
push
pushf
sbb
sbb
push
mov
cmp
mov
insl
mov
add
and
daa
fwait
inc
lcall
lcall
in
add
andb
push
add
jb
pop
sbb
insl
shlb
pop
movl
jo
pop
xlat
jo
sub
jl
xor
mov
xchg
scas
addb
fs
pop
xchg
mov
enter
add
clc
add
std
and
arpl
inc
xchg
jae
loopew
pop
xor
daa
cmp
cs
aam
out
cld
mov
iret
mov
outsl
arpl
add
adc
add
inc
jae
out
adc
sarl
inc
push
adc
jnp
popf
push
cli
cltd
bound
cld
and
ret
or
out
rol
xchg
pop
icebp
add
inc
xor
into
xor
mov
arpl
cmpl
and
pop
fldcw
cmpl
adc
pop
imul
add
insb
addr16
sub
push
and
fisubrs
pop
jbe
pop
outsl
push
xor
add
sub
and
fsubs
sar
xor
pop
lods
subb
scas
and
jae
sbb
or
das
and
arpl
mov
popa
or
inc
inc
mov
mov
pop
add
jmp
bound
jo
lret
das
xchg
shlb
sbb
cmpsl
mov
mov
mov
daa
imul
pop
icebp
push
adc
les
xor
sbb
adc
and
pop
mov
int
dec
cmpsb
push
jo
data16
adc
fadds
lods
sub
mov
leave
mov
ljmp
push
fmuls
adc
mov
mov
addb
imul
xchg
adc
adc
xchg
xor
inc
jb
sub
pushf
inc
fisubrs
mov
mov
out
and
fadds
mov
sub
adc
cmp
nop
imul
repz
cltd
ret
dec
lods
mov
push
xor
mov
push
and
ljmp
imul
xchg
mov
or
or
xor
mov
scas
or
cmp
sti
mov
xchg
xchg
push
fnstenv
or
loopne
insl
jb
push
add
push
test
pop
sbb
add
and
loop
ret
xor
mov
idivb
add
pop
insb
push
xor
inc
xchg
mov
into
pop
adc
sub
enter
add
ljmp
or
inc
and
jnp
sub
iret
cltd
inc
faddp
pop
xchg
mov
sub
sub
ret
mov
sbb
ret
add
fcoml
mov
aaa
push
sbb
call
dec
popa
js
dec
insl
movsb
cwtl
xor
sub
push
orb
andb
add
fs
fldl
ret
jmp
adc
dec
or
jp
and
adc
sbb
mov
movd
testl
popa
pop
pop
push
xor
ja
sbbb
sub
insb
adc
jbe
xchg
dec
outsl
or
xor
inc
jne
xchg
push
mov
inc
insb
shlb
cmpsl
daa
pusha
scas
insb
jbe
jne
adc
or
mov
out
pop
inc
mov
and
push
test
adc
pop
or
mov
pop
mov
pop
push
inc
sub
adc
sub
sub
inc
out
das
test
scas
fwait
sbb
mov
jo
cmp
push
mov
pop
aaa
lods
ljmp
xchg
push
pop
ss
lret
shll
mov
aaa
outsl
scas
inc
push
inc
jo
inc
adc
inc
sub
scas
pop
adc
push
je
sbb
imul
sahf
sub
xchg
aaa
gs
gs
and
and
xchg
or
outsl
xorb
sub
out
insb
jns
mov
idivb
push
div
data16
shrl
sub
push
popa
or
inc
and
pop
dec
outsb
movsl
push
or
xor
adc
pop
mov
pusha
and
cld
push
pusha
adc
fists
or
daa
outsl
jb
cs
adc
jne
stc
lods
test
and
ror
xor
ret
mov
xchg
add
mov
or
adc
xor
loopne
mov
and
outsl
push
xor
cmp
or
push
in
mov
cmp
ds
adcb
or
out
push
sub
and
and
fidivs
subl
pop
or
inc
inc
add
xchg
adc
sub
pop
add
add
pop
ja
mov
dec
mov
test
pop
lret
adc
adc
sbb
pop
sub
dec
das
mov
push
mov
xor
pop
cmp
xchg
insl
pop
and
inc
cmp
imul
sbb
or
cwtl
or
repz
mov
mov
pop
out
pop
jl
or
outsl
addb
inc
dec
push
dec
sub
mov
inc
in
ja
xchg
sahf
xchg
inc
and
dec
fcoms
inc
push
push
and
sub
mov
jnp
inc
dec
ret
imul
push
dec
outsb
fdivrs
or
fldcw
cs
sub
xchg
inc
inc
cmp
inc
sbb
lods
les
imul
dec
dec
repz
mov
or
pop
rol
mov
pop
aaa
xor
adc
fnstenv
cmp
xor
lods
lods
jbe
or
sahf
cmp
pop
pop
or
mov
lahf
cmp
subb
outsl
fistl
lods
fildll
xor
cmp
imul
or
xor
xor
fsubrs
add
add
and
jae
insw
and
sub
or
add
and
lret
stos
orb
daa
test
push
inc
push
mov
xchg
rorb
inc
mov
xchg
dec
lret
lea
jne
cs
pushf
shll
push
dec
inc
sub
adc
cld
lcall
aam
mov
mov
xchg
mov
pusha
les
xor
imul
xor
cvtps2pi
or
jae
outsb
out
loopne
or
xor
ret
pop
jno
push
adc
outsl
add
test
mov
or
xchg
or
sti
or
negb
push
inc
dec
inc
push
push
and
arpl
int
mov
inc
or
dec
popa
add
xchg
into
push
xor
je
imul
sbb
sbb
popa
add
daa
jbe
insl
mov
mov
push
prefetch
push
leave
int
xchg
or
jbe
inc
int3
mov
sbb
addr16
push
int
cwtl
loopne
sbb
and
push
sub
push
xor
test
push
dec
mov
add
inc
not
nop
ret
aas
pop
mov
adc
and
xor
daa
mov
outsb
jmp
mov
cmp
insb
mov
adc
sub
or
inc
and
xchg
or
pop
sbb
nop
sub
or
pop
or
inc
xchg
fs
pusha
jle
or
inc
and
popa
inc
enter
add
sub
xor
inc
enter
adc
test
sub
inc
enter
enter
pop
cmp
aas
daa
inc
enter
jle
xchg
and
imul
jb
and
test
and
and
adc
adc
test
sub
sub
pop
enter
cmp
inc
daa
pusha
inc
enter
and
gs
pop
inc
enter
and
or
or
cs
push
inc
or
pop
pop
and
out
aas
pop
mov
xchg
and
js
js
adc
test
jns
inc
xchg
loop
sbb
and
and
dec
dec
inc
dec
sub
pop
dec
push
inc
push
sub
add
and
cmc
adc
test
leave
sub
sbb
push
push
mov
pop
push
inc
push
push
addr16
xchg
or
add
pop
add
fxch
pop
das
cs
add
inc
dec
dec
pop
stos
push
fcoml
inc
mov
sbb
add
ja
cmp
push
test
inc
pop
xchg
push
ss
inc
iret
adc
add
mov
das
push
jne
mull
sbb
cmp
sahf
push
sbb
sub
push
xor
outsl
inc
adc
add
inc
xor
gs
xorl
aad
sahf
cmp
add
movsb
jmp
and
cmp
push
or
or
mov
cs
hlt
cld
mov
or
sub
dec
mov
loopne
sub
sub
inc
xor
jne
mov
ljmp
aaa
and
in
ljmp
adc
and
ds
fwait
adc
sbb
ja
push
add
int
je
int3
and
mov
dec
popl
xchg
in
add
xor
push
pop
imul
jnp
nop
imul
add
iret
pop
lea
adc
imul
push
testl
add
cmp
inc
adc
pop
dec
jno
imul
btl
pop
sbb
add
xor
mov
add
sahf
in
in
aam
dec
rcl
int3
enter
xor
fists
and
cmpsb
lods
movsb
cwtl
nop
mov
test
lcall
cmp
sub
sbb
xor
outsb
mov
xchg
add
clc
popf
lock
fsub
cmpsl
popf
popf
rol
shll
mov
test
dec
shll
insb
imul
cmpsb
imul
imul
imul
imul
lcall
mov
cmpsb
nop
mov
fwait
pushf
add
dec
shll
pop
push
inc
cmp
xor
shll
sub
out
lock
xchg
rcrl
mov
xlat
movsb
pop
enter
jg
pop
shll
insb
add
shll
push
push
dec
inc
shll
and
gs
sbb
pop
inc
and
aaa
out
adc
inc
xchg
jecxz
and
xchg
or
in
stos
jl
adc
mov
stos
adc
mov
ja
jo
lret
leave
jge
push
mov
jno
push
ljmp
adc
bound
imul
jmp
out
outsl
mov
aaa
bound
xor
xor
pop
add
adcb
mov
gs
sbb
bound
or
mov
pop
or
pop
ud2
test
pushf
sbb
scas
cmpsl
pop
test
mov
js
insb
jne
add
arpl
bound
sbb
sbb
pop
sbb
pop
inc
sbb
and
add
popa
pushf
or
adc
dec
push
fwait
sub
aas
inc
addr16
xchg
dec
lret
imul
or
mov
imul
aad
jae
mov
inc
pusha
pop
xor
addr16
outsl
push
push
xlat
sub
std
clc
lods
mov
pop
push
push
pop
outsl
bound
jno
loope
insl
sub
sbb
jp
jno
pop
rorb
cwtl
pop
ljmp
mov
gs
and
cltd
enter
add
dec
jp
imul
or
or
aad
push
out
or
imul
cmp
xor
add
jb
inc
ja
cmp
push
add
sbb
xchg
insb
pop
or
js
xor
pop
cmp
scas
data16
or
jg
inc
push
stc
pop
xor
xor
lds
xor
aaa
out
mov
xchg
add
add
fwait
pushf
pushf
or
add
add
lahf
daa
jo
ja
popa
outsl
sbb
pop
daa
lods
pop
mov
inc
lods
mov
xor
adc
and
repz
adc
adc
addr16
pop
andl
add
jne
in
inc
push
add
shl
xchg
push
cmpsl
pusha
fisttpl
sbb
rcrl
sbb
sub
insl
pop
test
cltd
jbe
xor
dec
sahf
rolb
or
mov
lret
push
scas
pop
xor
jno
mov
xor
sub
add
sub
adcl
clc
call
mov
ror
imul
inc
push
xchg
inc
sbb
stc
or
ret
aaa
push
daa
dec
imul
adc
cmpsl
pop
aaa
mov
inc
add
mov
sbb
pusha
jmp
pop
push
loopne
pop
inc
push
das
inc
push
and
jae
insb
test
sub
pop
shll
add
je
clc
mov
cli
and
movsl
mov
ljmp
and
lods
pop
cmp
or
dec
dec
push
push
sti
push
lods
rorb
xchg
arpl
add
cmp
add
jae
sbb
loope
ja
mov
sbb
jbe
loop
dec
sbb
and
fistps
dec
and
xchg
dec
ljmp
popf
inc
rorl
sub
jnp
and
add
mov
push
dec
jnp
lock
and
push
cmp
mov
add
scas
imul
adc
aad
mov
mov
es
and
orb
cwtl
pop
test
mov
lea
inc
inc
cwtl
rcpps
mov
pop
dec
push
xor
pusha
mov
dec
divl
adc
lret
mov
jnp
hlt
or
testl
aaa
and
xor
or
adc
imul
popa
xor
pop
gs
pop
enter
cmp
jae
add
pop
or
sbb
pop
cmpsb
movsb
dec
add
in
inc
inc
int
inc
js
lret
add
push
add
push
aas
imul
subb
cs
addr16
push
xchg
in
push
push
ss
add
cmp
fwait
xor
xor
inc
add
fsubrs
insb
xchg
aaa
rclb
sbb
sub
les
inc
pop
ret
sbb
repz
pop
or
inc
mov
xor
cmpsl
mov
dec
mov
inc
cmovl
pop
adc
ss
lret
mulb
aas
mov
push
pop
ret
in
mov
xor
sbb
sbb
cmpsb
and
sub
xchg
or
pusha
es
mov
mulb
out
inc
fwait
test
outsl
xchg
rcr
adc
cwtl
mov
push
dec
and
pop
or
adcb
stc
icebp
popa
stos
movsb
add
test
dec
or
sub
adc
or
push
pop
lret
data16
dec
outsl
rclb
inc
push
push
test
fs
insb
jo
daa
ja
mov
add
insb
pop
sub
pcmpgtb
pop
popa
pop
sub
inc
xor
push
sub
cmp
je
add
rorl
aaa
insb
mov
or
inc
sub
sarb
adc
loopne
arpl
dec
inc
dec
dec
adc
inc
pop
jo
popa
or
jnp
test
jge
dec
ss
mov
jb
inc
sub
pop
cmp
mov
lret
and
sbb
outsl
lds
sbbb
add
aaa
xor
or
inc
sub
or
push
shrb
xchg
pop
mov
sbb
push
es
cmp
loop
adc
xchg
seta
and
and
dec
jbe
outsl
and
inc
lods
lods
lock
dec
push
jmp
xchg
push
shrl
dec
mov
adc
mov
add
sub
adc
adc
jo
and
mov
xor
mov
imul
push
test
dec
push
dec
and
push
push
adc
sbbl
mov
fs
inc
mov
test
push
fldenv
scas
cmp
add
into
jnp
sahf
add
sbb
cmp
iret
ss
jbe
push
adc
cmpsl
insb
fldcw
mov
stos
xchg
das
push
in
or
data16
add
sub
cmpsb
insb
inc
ret
and
ss
xor
adc
sbb
mov
mov
stos
jg
mov
dec
mov
cmpsb
xchg
sub
jecxz
dec
int3
push
xor
inc
sub
mulb
push
ret
dec
cmpsb
xchg
add
mov
sbb
cs
ror
sbb
sub
cmpsl
movsb
int3
adc
imul
jae
pop
sbb
andb
sbb
addb
cmpb
rcll
inc
rorb
movsb
cmp
inc
sbbb
lret
dec
and
adc
pop
cmp
xchg
pop
ss
cmp
inc
push
int
gs
outsl
mov
xchg
cmp
push
mov
cwtl
cmc
sub
mov
lea
das
adc
mov
repz
ja
mov
test
push
inc
fldenv
push
adc
pop
inc
and
icebp
jb
xchg
mov
bound
xlat
xor
pop
fsubrs
inc
xor
sub
add
ja
mov
data16
jne
insb
dec
adc
push
outsl
push
inc
imul
xor
mov
inc
inc
imul
sbbl
ret
dec
mov
aaa
xor
repnz
or
cmpsl
out
jb
pusha
push
jge
mov
push
add
xor
mov
cmp
jnp
mov
mov
adc
jne
push
mov
lahf
push
pop
arpl
lock
sub
aaa
inc
scas
call
int
popf
andb
jmp
pop
sbb
xor
add
push
pop
push
pop
sub
cmp
jmp
add
pop
mov
add
rolb
out
aas
xchg
inc
and
xor
xorl
arpl
addb
les
dec
mov
inc
sbb
mov
adc
jae
lds
cvtpi2ps
lock
add
dec
dec
fiaddl
push
fcomps
popa
mov
outsl
notb
push
sahf
push
bound
mov
popa
mov
sbb
pop
xchg
and
lret
xor
adc
mov
dec
bound
arpl
insb
pop
xchg
mov
xor
cmp
add
das
jae
dec
and
ljmp
outsl
inc
in
imul
adc
pop
add
mov
sbb
jp
inc
inc
lock
cmovl
dec
push
shrb
and
xor
sub
inc
push
pop
in
das
adc
inc
xor
jne
mov
xor
data16
xchg
sub
mov
cmpsl
and
adc
mov
cli
xor
into
sub
sub
pop
sbb
das
xchg
sub
orb
outsl
and
sub
xor
xchg
and
inc
adc
sub
add
push
scas
imul
test
test
stos
fdivs
ja
dec
cmp
mov
or
test
out
dec
jae
or
inc
mov
aad
sbb
mov
push
push
or
sub
dec
adc
jae
jae
mov
jbe
sub
or
test
mov
adc
imul
pusha
xchg
sbb
sbb
add
popa
mov
lahf
sbb
push
popl
arpl
add
or
pop
bound
add
inc
rcrb
sbb
mov
or
add
fldcw
add
add
mov
inc
les
insl
jbe
in
mov
cmp
daa
aaa
mov
add
addr16
out
cmp
or
out
mov
add
or
out
lock
and
sar
sbb
insl
add
or
ljmp
adc
es
pushf
cmp
ret
adc
cmp
test
sub
popa
pop
dec
adcb
adc
sub
push
notb
dec
dec
nop
xchg
clc
xor
mov
dec
mov
pop
add
sub
sbb
add
sbb
lcall
sub
cwtl
stos
mov
push
ss
sbb
xchg
lds
inc
into
or
or
add
test
or
cmp
ja
and
sbb
iret
inc
sub
sub
mov
dec
pop
sbb
mov
sbb
sub
xor
ret
add
cs
cs
xchg
pushw
push
out
xor
popa
sub
lret
push
pusha
xchg
xor
rclb
jl
and
add
sub
daa
and
lret
and
out
lret
cmp
dec
data16
adc
ret
xor
leave
sub
xchg
sub
mov
scas
xor
arpl
adc
jbe
or
mov
and
pop
fisubrs
xor
je
add
loopne
cmp
mov
and
orb
sbb
loop
jp
es
iret
adc
inc
scas
pop
add
lea
or
loope
testl
sbb
lods
jo
in
negl
mov
shll
fwait
rorl
stos
mov
insb
fsubrs
adc
arpl
or
cmpsl
rolb
insb
sbb
sub
xorl
push
test
xchg
arpl
lret
dec
xchg
dec
pop
pop
push
inc
ret
mov
inc
add
ds
sub
or
push
ja
or
pop
sub
xchg
outsl
test
shl
out
sub
mov
sub
ret
sarb
adc
jo
lahf
jmp
fs
jo
js,pt
add
jae
insl
push
sbb
jae
mov
stos
popa
pop
add
pushf
dec
loopne
sub
xchg
mov
sub
xchg
or
pop
bound
sub
fcmovnbe
insb
fldpi
sbb
sbb
mov
pop
pop
and
xchg
xchg
loope
and
lret
mov
jg
and
out
or
jbe
lds
or
adc
lret
add
mov
pop
jmp
ret
add
inc
sysret
cmp
and
and
filds
data16
and
push
pushf
addl
push
adc
push
xchg
insb
dec
jecxz
fwait
adc
cmp
pop
sbb
sub
sub
xchg
jl
das
xchg
fs
sbbl
or
mov
mov
testb
jecxz
add
xor
add
push
and
divb
xor
add
mov
outsl
shlb
jae
dec
rorb
imul
jae
pop
add
popa
insl
pop
pavgw
ret
push
mov
xchg
xchg
push
push
dec
unpcklps
add
xchg
xor
and
and
mulb
xor
outsb
push
and
add
mov
pop
jae
sub
xor
inc
cs
adc
inc
enter
pop
mov
dec
and
aam
xchg
aam
push
dec
outsl
pusha
int3
xor
dec
inc
push
and
ja
mov
sarl
adc
and
add
sub
pop
mov
push
pop
lods
add
jbe
adc
and
mov
push
and
adc
cli
pop
xor
jg
int
pusha
xchg
mov
stos
mov
xor
daa
pusha
inc
mov
push
je
scas
jmp
add
outsl
outsb
dec
xor
lods
pusha
pop
movsb
xor
fs
cli
xor
xor
sbb
cmpsl
dec
add
or
or
jb
daa
jecxz
jle
cmp
sub
sub
push
mov
push
and
adc
faddl
addl
adcb
arpl
cmpsl
sub
sbb
fildll
push
dec
sub
or
ret
push
add
cli
and
jo
out
add
or
andb
inc
add
pushf
adc
fldl
sub
mov
ret
dec
testb
jbe
push
pop
cmp
push
rolb
cmp
pop
popf
mov
daa
int3
lods
push
sub
shrb
popf
bound
lds
scas
lock
sub
shlb
subl
popf
xchg
mov
sub
push
xor
cmp
inc
and
aas
push
pop
mov
dec
enter
je
xchg
cmp
or
lods
and
or
push
rolb
xor
mov
mov
stos
mov
es
lods
or
push
cmc
enter
add
nop
adc
adc
cmpsb
sbb
adc
lret
je
inc
fs
sbb
inc
inc
jl
popl
pop
jl
add
dec
sti
or
or
pop
push
jae
cmp
pop
cmp
dec
push
xor
das
pop
mov
int3
sub
add
inc
pop
or
xor
lods
arpl
subl
aam
mov
je
pusha
pop
mov
add
jb
cmp
pop
inc
inc
inc
pop
les
dec
dec
dec
dec
or
or
arpl
push
sbb
sub
or
das
cmp
push
xor
dec
fsubrs
push
daa
xor
rcrb
sbb
jae
or
dec
jae
stos
insb
push
xor
push
subb
stos
cwtl
je
sub
fs
pop
inc
popa
aaa
and
xchg
add
dec
xchg
mov
sarl
and
push
imul
jns
push
mov
mov
sub
dec
pop
adc
sbb
sbb
add
and
cmp
adc
or
xor
add
pop
and
es
and
dec
xchg
add
ret
pop
lock
dec
or
add
in
xor
cmp
mov
inc
pop
add
sbbb
dec
jo
shll
add
and
iret
sub
or
xor
scas
pusha
mov
inc
movsb
pusha
add
adc
and
rcrb
popa
jp
es
xchg
add
std
fldcw
sbb
fwait
insl
pop
repnz
and
jno
and
mov
adc
xchg
popf
call
insb
pop
inc
roll
jp
add
outsl
sub
xor
push
xorb
je
idiv
inc
loop
pop
mov
or
inc
sar
shlb
js
jo
fcmovnu
sbb
push
or
or
lea
mov
mov
add
add
adc
decl
mov
mov
add
stos
push
push
adc
out
mov
or
or
je
or
cmp
mov
je
mov
cli
push
dec
mov
push
call
hlt
mov
jns
or
add
call
out
pop
rolb
pop
push
sub
sahf
mov
call
adc
stos
mov
stos
push
push
push
push
mov
add
pop
mov
and
movsl
ret
das
xchg
andb
int
or
or
jp
sbb
pop
aas
push
adcb
mov
cmp
add
xchg
mov
xchg
jmp
adc
incl
inc
push
xor
bound
add
add
xor
xor
xor
cld
xor
xor
or
pop
and
lock
dec
add
and
imul
xchg
jb
mov
inc
dec
sub
fists
ss
dec
dec
jp
pop
add
stos
or
orps
add
mov
push
sbb
loopne
xor
dec
into
xchg
or
push
out
push
in
ret
lds
sbb
sub
cs
mov
orl
mov
push
jb
dec
stos
pop
and
int
popa
scas
leave
sub
push
imul
or
out
jae
cmp
add
test
int
popl
push
addl
cmp
imul
push
mov
mov
inc
pop
sub
rcpps
inc
or
mov
or
pop
add
inc
sbb
adc
dec
xor
test
add
ret
and
add
adc
lock
das
lods
int
fdivs
dec
inc
or
or
addr16
push
mov
outsw
xchg
sub
smsw
xor
aas
xchg
sub
test
inc
and
sbb
adc
push
icebp
or
jecxz
push
sub
sbb
push
sub
in
cwtl
cs
mov
pusha
sbb
loopne
imul
js
dec
and
popa
adc
fdivs
call
cmp
jo
sub
sub
mov
xor
add
mov
imul
daa
out
js
insb
jne
and
sbbb
nop
and
adc
sub
mov
cmp
insb
and
mov
push
cmp
lea
add
aam
cmp
mov
and
das
das
rolb
pop
adc
sub
mov
jl
pop
or
fs
enter
mov
sub
push
inc
dec
cmpsb
repz
add
add
adc
stc
addb
pop
mov
lar
push
xchg
add
or
pop
dec
add
add
push
nop
mov
dec
add
test
inc
push
fs
addl
adc
inc
adc
stos
aaa
cs
in
addb
or
movsb
add
jns
and
xchg
addr16
cmpsb
filds
mov
cld
das
test
out
inc
jle
cld
test
mov
push
cmp
incb
inc
mov
mov
pop
iret
mov
in
call
nop
pop
jle
push
add
lret
pop
fldcw
pop
fisubrl
xor
rcr
fsubp
stc
xor
inc
mov
jle
adc
pop
sbb
jae
add
incl
lock
add
inc
mov
add
cmp
adc
jmp
add
sbb
cmpsb
imul
inc
lcall
jnp
sbb
push
cmp
cmovs
fsubs
adc
adc
adc
insb
nop
das
pop
and
inc
push
inc
push
xor
mov
push
sbb
push
pop
pop
jnp
cmpsb
sbb
insl
stos
and
mov
add
xorb
pop
sbbb
inc
lcall
sahf
push
sbb
movsb
outsl
cmpsl
mov
popa
mov
lahf
into
pop
xlat
or
pop
mov
xadd
sbb
nop
inc
xchg
lea
sbb
nop
add
nop
add
nop
xchg
add
pop
mov
or
add
xchg
out
xor
mov
or
enter
lcall
dec
adc
int
imul
sbb
xor
rcrl
int
jmp
js
push
jns
xchg
pop
shll
sar
inc
mov
pop
insb
add
adc
pop
add
add
fnstcw
pusha
outsl
add
add
nop
xchg
dec
sub
cld
xor
aad
mov
add
dec
testb
inc
or
add
cli
or
or
in
cmp
ret
mov
adc
stc
daa
aas
and
sbb
into
sbb
call
dec
inc
and
sahf
mov
sub
inc
rcrb
and
sbb
addl
xlat
xchg
inc
idiv
decl
add
inc
stc
mov
adc
mov
decl
js
incl
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
jmp
call
repz
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
dec
pop
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
inc
push
movsl
mov
popa
sar
mov
and
xchg
clc
repz
mov
subb
fwait
xchg
and
and
sti
lahf
mov
add
sti
aas
jno
or
mov
pop
fs
decl
xchg
outsb
adc
sub
sbb
pop
pop
mov
icebp
aas
rorb
and
cmpsl
out
aas
incl
mov
insb
scas
add
aas
xor
aad
mov
std
std
into
popa
test
ja
dec
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
cmp
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
jl
mov
in
call
out
das
lea
mov
inc
and
movsl
jmp
jg
sub
jge
mov
jmp
rcr
push
arpl
int3
and
call
cmp
jp
and
cmp
decl
xchg
mov
fmull
call
cmp
test
pop
mov
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
call
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
faddp
jge
call
jmp
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
sub
inc
inc
add
enter
fmuls
jae
add
inc
add
push
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
mov
push
lahf
or
lock
add
gs
pop
push
inc
call
add
pop
mov
sub
xchg
lock
pop
dec
add
mov
jbe
stos
push
add
adc
dec
push
adc
add
or
and
sub
fs
jo
outsb
es
add
faddl
dec
outsl
adc
mov
xchg
push
push
test
push
sub
mov
mov
adc
idivl
cwtl
sti
out
push
outsl
imul
test
adc
and
cmp
clc
adc
inc
jns
outsl
push
imul
in
enter
test
pop
push
fs
imul
out
sbb
sub
dec
pop
insb
fmuls
mov
js
pop
lods
xor
cmc
cmpb
mov
inc
int3
movzwl
stc
in
jnp
inc
pusha
je
inc
popa
je
push
push
arpl
je
outsl
fidivrs
adc
popa
pusha
adc
mov
xlat
add
ss
cmpsl
outsl
ret
jno
mov
jnp
jbe
add
push
mov
popa
lea
push
jbe
mov
gs
data16
fcoml
enter
inc
in
sub
inc
or
jo
dec
inc
adc
add
or
add
cmp
jo
inc
sbb
inc
push
arpl
and
pop
nop
sbb
jo
jns
push
push
mov
movb
es
ret
in
adc
arpl
das
ret
pop
push
inc
fildll
xor
inc
xchg
cmp
push
push
shr
and
adc
js
fadds
xchg
outsb
mov
jbe
arpl
testb
scas
mov
imul
inc
pop
sbb
and
cmp
push
push
outsb
and
and
cmp
inc
xchg
pop
dec
add
mov
xchg
push
jo
pop
sti
sub
insl
fs
jbe
mov
dec
jnp
push
jne
out
dec
cwtl
adc
lods
imul
int
ljmp
mov
dec
xchg
insl
in
popf
and
inc
or
and
arpl
dec
inc
dec
or
test
push
popa
popa
bound
dec
cwtl
dec
sub
xor
mov
mov
or
loope
pop
xchg
dec
inc
mov
movl
popa
js
jo
mov
pop
dec
enter
insb
jbe
mov
push
or
push
outsl
pop
shr
test
adc
jo
jae
insl
push
je
ja
and
inc
sbb
push
inc
mov
inc
cmpsl
mov
out
push
sub
push
movsb
fldl
push
inc
lcall
add
rol
inc
add
add
add
mov
mov
add
add
add
pop
cmp
movsb
mov
add
adc
fcoml
xor
or
add
sub
pop
adc
xchg
je
adc
add
sub
adc
add
shrl
mov
jmp
push
inc
mov
jb,pn
xor
adc
adc
pop
popf
mov
cs
ficoml
rcrb
enter
shrb
xchg
es
dec
add
add
add
add
add
add
inc
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
popa
jmp
