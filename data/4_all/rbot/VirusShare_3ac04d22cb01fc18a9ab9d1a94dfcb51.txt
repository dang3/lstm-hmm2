mov
cmc
jbe
aas
sahf
and
and
movsl
ret
sub
lcall
xchg
xchg
inc
sub
iret
ss
push
sar
into
stos
lea
mov
addr16
dec
and
pop
xchg
add
icebp
sbb
mov
pop
inc
sbb
repnz
jp
lcall
repnz
frstor
pop
int
popf
jp
aaa
sarb
gs
test
mov
dec
fsubrs
mov
jl
movsl
xlat
mov
pop
icebp
jae
gs
and
inc
imul
inc
inc
pop
push
mov
daa
sarb
std
jae
mov
add
adc
jecxz
cld
int
sub
popa
outsl
sbb
fsincos
aaa
out
inc
das
jge
dec
ljmp
xchg
mov
mov
jb
out
adc
jbe
dec
rcrl
sub
out
lds
dec
dec
xchg
inc
out
pop
leave
pcmpeqb
mov
jno
and
dec
inc
mov
xchg
pushl
jmp
xor
mov
jmp
jg
jae
test
pop
and
subl
je
jle
rorl
fistpll
fwait
pop
xor
sub
or
int
outsb
stos
outsl
mov
xor
pop
mov
lods
xor
inc
aaa
lds
sbb
xor
sbb
jo
cltd
lret
inc
sub
lods
push
sub
sti
jmp
dec
xlat
std
mov
pop
fsubs
xlat
push
das
into
inc
dec
add
push
jle
mov
mov
mov
dec
inc
lea
jae,pt
sub
mov
add
ret
divb
mov
dec
addb
xor
pop
xor
cmp
cmp
popa
pop
scas
lea
add
adc
mov
xchg
inc
jle
add
sbb
stc
jns
jno
fisttps
pushf
xor
xorb
cmp
sbb
mov
leave
fcmovu
mov
dec
xlat
popa
std
jp
rcll
sub
cli
adc
add
pop
push
aad
adc
sbb
sahf
pop
cmc
jae
xor
sub
int3
shll
jne
mov
inc
rcrb
int3
cli
cli
sub
add
rcrl
adc
push
mov
sti
mov
andl
popf
js
sahf
ficomps
inc
jg
test
popa
cltd
test
push
and
mov
mov
cmp
fnstenv
push
mov
negl
dec
mov
and
sub
or
aad
es
outsl
movsl
jge
and
mov
scas
pop
es
rclb
lods
sbb
je
gs
fs
popa
nop
js
pop
mov
cld
stc
das
mov
inc
fwait
inc
adc
cmpsb
sti
inc
vpcmpeqb
fsts
inc
fld
sub
fidivrl
out
cmp
push
fsubrs
stos
lcall
jg
or
mov
mov
in
mov
mov
fcomp
shll
cmp
xchg
lret
aam
cmp
sti
frndint
sbb
sub
push
fs
jmp
add
cmc
mov
inc
xchg
mov
inc
mov
sbb
int
cmp
pop
inc
adc
inc
adc
xlat
sub
cmp
rol
add
sub
rcrb
xor
mov
push
mov
or
pop
or
pop
out
scas
sti
or
fisttpll
iret
lret
addr16
cld
push
xchg
fldl
sub
add
dec
es
decb
cltd
mov
and
dec
push
cmpsb
cmpl
dec
cmp
rcrb
test
sub
and
lods
test
jmp
xor
xchg
mov
std
push
shlb
pop
push
fisubrs
fstpl
xlat
jp
jns
shrl
sti
iret
cmc
lcall
movsl
enter
fdivl
sahf
jl
out
stc
decl
ljmp
mov
xchg
pop
aad
in
dec
movsl
or
mov
xchg
inc
scas
and
repnz
mov
jae
fstps
push
pop
in
into
iret
lret
mov
leave
out
xchg
xor
push
fnstcw
push
lock
cmp
cmpsb
push
cli
fcom
popf
je
mov
clc
rorl
fadds
dec
xor
dec
mov
aas
fldenv
in
roll
xlat
loopne
shll
cmp
pop
push
xchg
xor
aam
pop
push
jne
in
mov
mov
movsb
addr16
aas
jbe
std
mov
and
out
std
push
mov
pop
leave
sub
sbb
leave
xchg
out
jg
loope
js
dec
leave
stc
pop
test
or
mov
je
pop
mov
mov
xor
mov
fwait
addl
cmp
lret
and
test
aas
or
ds
mov
mov
bound
lcall
popf
movsl
xor
pop
mov
mov
addr16
mov
jb
add
imul
aas
gs
mov
divl
enter
ljmp
cmc
push
fldl
sub
xchg
mov
cmc
sub
sbb
push
inc
inc
lret
ss
mov
icebp
cmc
fwait
mov
mulb
inc
push
in
loopne
add
sbb
fucomip
movsb
mov
ret
adc
jmp
dec
shl
mov
out
inc
subb
jge
jbe
lcall
cmp
xchg
ret
insl
push
xor
loope
push
jle
arpl
das
out
and
adc
and
or
cmc
cmpsl
faddl
sahf
adc
sbb
inc
xchg
popfw
pop
jbe
mov
adc
push
bound
mov
xchg
jl
xchg
nop
mov
or
and
data16
fidivrs
or
lret
push
mov
jae
pop
and
add
adc
lret
adc
jbe
add
mov
popf
sub
in
ds
sahf
data16
dec
push
lea
mov
je
loope
dec
lahf
stos
gs
cltd
int
push
ja
scas
clc
cwtl
sbb
sarl
adc
fxch
or
lcall
xor
pop
cmp
add
jbe
fisubrl
cmp
mov
arpl
inc
les
pop
jl
fcmove
rclb
xchg
mov
pop
scas
jo
cmp
pusha
adc
cmp
xchg
xchg
hlt
roll
inc
sub
das
sub
es
lret
shrb
mov
xchg
xor
addl
mov
xor
jecxz
inc
icebp
int
mov
repz
inc
mov
xor
lds
popf
lahf
mov
mov
ds
pop
insb
xchg
lahf
xor
adc
push
roll
repz
fsubl
cmp
clc
pop
xchg
jae
push
jecxz
jne
push
test
test
aaa
jle
inc
jg
pusha
loope
icebp
imul
into
jmp
andl
pop
jns
lahf
daa
fidivs
insl
movsb
ja
mov
add
xor
daa
lcall
or
jne
jg,pt
push
popa
outsl
test
out
mov
or
jle
jp
int
and
popf
dec
xor
movsl
jae
out
add
imul
mov
ror
cltd
add
sti
jno
in
jle
mov
mov
insl
daa
cmp
mov
xor
std
mov
adc
aam
ret
lcall
adc
clc
pop
adc
dec
mov
fstl
push
or
mov
push
and
mov
gs
shlb
mov
jae
pop
sub
dec
xor
fldt
xchg
scas
cmp
test
ret
movsb
cmpsl
jno
mov
push
into
icebp
pop
mov
push
sbb
cmpsb
inc
add
mov
pushf
jo
sub
or
push
xorb
mov
fidivrl
push
pop
xchg
mov
jge
das
and
sub
test
push
test
popf
adc
pop
cmp
loope
adc
dec
or
test
push
fnstsw
cmc
shl
and
clc
in
popa
pop
lcall
test
shl
pop
bound
leave
lds
pop
mov
pusha
sub
je
pop
mov
out
fwait
sahf
xchg
jno
and
cmc
mulb
sbb
je
push
pop
and
push
sbb
add
call
les
in
add
fs
aad
shr
cmp
jo
xchg
dec
jb
sbbl
or
sbb
sbb
adc
inc
xchg
int3
mov
ljmp
inc
and
in
fnstsw
push
add
imul
cltd
js
xchg
shrb
push
fcmovbe
pop
cs
out
leave
mov
adc
jp
imul
jns
cli
and
daa
inc
push
nop
xchg
stos
inc
push
inc
shll
mov
in
aas
fstpt
mov
ss
repz
xchg
mov
dec
enter
mov
adc
cmp
jge
loopne
arpl
movsl
mov
or
push
std
xor
jnp
xchg
fsqrt
mov
lahf
into
popf
push
xor
dec
out
ret
sub
mov
insb
jge
push
insb
inc
test
test
push
filds
aas
bsf
push
push
dec
bound
icebp
popf
in
mov
mov
or
xchg
rcr
ja
mov
jbe
jnp
mov
dec
pop
inc
adc
jns
lcall
and
mov
cmp
clc
jecxz
in
mov
mov
sbb
xorb
mov
jae
jno
lret
jne
jl
add
mov
fldl
repz
xor
pop
imul
xorl
shlb
insl
add
jge
shl
mov
jge
sbb
outsl
mov
jge
fdivp
cmp
out
inc
jmp
sub
movsl
or
push
mov
or
sub
fcomip
inc
lea
movsb
out
inc
loope
in
jbe
jo
mov
and
lret
inc
mov
pop
cmp
es
xor
adc
xor
fcmove
jno
pop
mov
ror
and
mov
adc
add
jnp
push
adc
sbb
out
add
add
std
fs
push
sbb
das
cltd
pushf
iret
pop
push
mov
outsl
sub
push
sahf
aaa
int3
and
dec
sbb
pop
clc
leave
jmp
call
ror
sbb
int3
sub
mov
jg
lods
cltd
mov
rolb
pop
inc
jmp
sarb
ficompl
sahf
sub
mov
sub
sbb
fdivs
sub
mov
movsl
pop
shll
sub
sbb
popa
push
mov
rcl
or
adc
xchg
ss
xor
aad
arpl
lret
aaa
mov
movsl
sarl
in
jg
jae
ljmp
push
movsb
cwtl
loopne
shlb
xchg
popf
out
adc
ficoms
xchg
je
jecxz
jns
cmp
xchg
movsb
hlt
and
out
sub
sub
pop
aas
movsl
test
int3
shl
or
jne
lahf
dec
mov
mov
in
xor
aaa
loopne
xchg
add
test
pop
cmpsb
xchg
dec
lahf
jmp
and
sbb
cmpsb
push
sbbl
ljmp
fnstcw
adcb
cmp
pop
cmp
aam
xlat
inc
cmc
xchg
mov
insb
pop
jecxz
cli
mov
jge
dec
add
aad
jns
xchg
mov
mov
fnstcw
mov
and
jp
repnz
mov
aaa
cld
divb
sub
rorl
stc
hlt
mov
sti
rcr
lds
inc
push
stc
push
mov
push
test
pop
push
int
dec
cmp
pop
in
notl
in
jg
sbb
leave
jns
jne
jno
nop
fcompl
pop
adc
out
inc
cld
stos
into
cmp
cwtl
xchg
in
xchg
adc
pushf
sbb
push
mov
aas
mov
push
das
es
cmpl
adc
xchg
fistpll
fisubs
scas
jge
pop
jno
adcl
mov
sarl
outsb
mov
xor
fistl
movsl
sbb
push
fistpl
bound
xor
push
sbb
cs
or
pop
lods
mov
fsqrt
das
pop
loop
inc
mov
pop
xor
mov
xchg
mov
pop
mov
stc
call
sub
xor
mov
or
xchg
fdivl
lahf
xchg
inc
and
jge
jne
movsl
out
je
icebp
and
jp
push
mov
sbb
les
in
imul
inc
movsb
loopne
inc
iret
cmp
das
lret
rclb
ficoms
imull
neg
pusha
push
je
adc
ret
xor
repz
fwait
mov
mov
adc
mov
popa
mov
sub
jne
dec
ret
mov
xchg
daa
js
xchg
daa
push
sub
addr16
cli
add
mov
inc
inc
dec
jp
decb
loope
xchg
jge
jns
push
lret
xchg
mov
inc
inc
mov
adc
sub
dec
dec
push
pop
pop
adc
fstpt
and
std
sbb
mov
aad
nop
loopne
pop
inc
cmc
lds
cmp
push
in
lods
aad
aam
and
cmpl
add
sbb
call
or
arpl
or
ret
imul
xchg
test
adc
movsl
add
mov
in
ret
dec
std
jbe
orb
mov
scas
int
add
xor
roll
mov
cmp
add
inc
sbbl
movsl
mov
insb
in
or
subb
int3
rcl
inc
inc
ret
mov
iret
inc
pop
dec
mov
xor
sbb
addr16
and
test
pop
repz
mov
xchg
cld
xchg
cmc
push
mov
inc
lock
mov
xor
in
cwtl
icebp
mov
add
mov
inc
loopne
loopne
loop
cmp
and
jp
insb
clc
insl
mov
ficomps
fwait
scas
jmp
out
leave
lds
insb
jns
imul
mov
mov
xchg
outsl
int
ret
cmp
les
mov
jnp
stos
pop
pop
sbb
jl
mov
aam
test
lret
xchg
ffreep
enter
jne
aam
mov
shll
mov
movsl
mov
repz
pop
sbb
jns
stos
and
add
jge
cmp
inc
dec
into
inc
fucomip
and
add
and
and
adc
mov
lds
lea
and
das
push
mov
xchg
das
clc
adc
nop
mov
xlat
xorl
dec
or
rcrl
aad
cmp
int3
xor
push
jae
dec
lret
add
jbe
adc
dec
fwait
mov
mov
sarb
xorb
inc
push
lea
pop
pop
clc
push
or
dec
hlt
in
push
leave
pop
xor
push
add
mov
or
cmp
inc
jge
push
pop
test
pop
call
push
lea
jl
xor
jge
adc
aas
pop
flds
iret
add
lahf
loope
dec
fldl
mov
mov
mov
rcl
pop
in
mov
mov
jl
push
cmp
sub
xchg
and
in
fucomip
fwait
and
stc
fldenv
fisubl
enter
in
std
cmp
xchg
push
push
aam
and
sub
or
js
jae
insl
aad
mov
lock
inc
scas
add
pop
push
dec
test
sti
test
outsb
in
mov
sbb
push
in
cmp
roll
mov
and
xlat
leave
insl
jg
lds
clc
fidivrs
pop
inc
mov
je
pop
push
inc
loope
jge
sub
in
sti
aas
inc
or
inc
repz
or
add
adc
call
xlat
push
setnp
pop
or
loope
mov
jge
movsb
aad
push
insb
cli
ret
lcall
in
xor
aas
cli
imul
bound
push
push
jl
inc
dec
or
popa
mov
and
and
js
loopne
popf
xor
std
dec
sbb
gs
pop
jge
xor
or
pop
cmpsb
dec
clc
jmp
mov
ficomps
jl
mov
insb
in
stos
pop
fs
repnz
stos
push
imull
pop
fcoms
insl
je
or
jae
repnz
xor
lock
aas
test
cmc
pop
push
dec
daa
fnsave
xchg
sbb
fldl
ret
divb
push
pop
xor
sbb
cmp
sub
adc
stos
mov
jp
inc
and
les
xchg
mov
gs
xchg
jecxz
mov
adc
xchg
push
jp
cmpsb
lret
sbb
jno
movsb
aas
pusha
jno
cmp
dec
sub
outsb
dec
jmp
ljmp
hlt
into
mov
shlb
push
and
das
into
jecxz
lods
cmp
sub
popa
out
mov
loopne
aam
pop
inc
popf
pop
mov
les
cmpsb
push
fs
cwtl
fidivrl
cmp
add
jmp
sub
js
inc
xchg
push
xor
fsubrl
cmp
inc
jg
push
shll
jmp
enter
aad
lcall
sbb
cli
nop
out
xor
add
xor
lea
cmc
sbb
jo
mov
stos
push
mov
shlb
bound
mov
mov
cmp
ss
mov
loop
jp
sbb
xchg
sahf
call
lcall
jne
pop
dec
cld
out
dec
add
outsl
aam
mov
aaa
adc
xchg
call
mov
mov
repnz
es
mov
popa
int3
xchg
push
sbb
loop
xchg
add
dec
cli
loope
push
push
mov
cmp
jp
xchg
push
inc
jge
test
not
aam
push
mov
pop
sub
sahf
dec
sub
jmp
lsl
jnp
pop
dec
inc
roll
shlb
test
inc
or
cltd
and
pop
stos
push
rclb
sub
ret
dec
adc
int
xor
fistpll
sub
push
rorl
mov
bound
cmc
jl
iret
and
inc
dec
or
mov
ja
cld
xchg
mov
out
test
es
cmp
hlt
lahf
inc
adc
js
adc
rorl
inc
xchg
ja
in
mov
loope
and
cwtl
xchg
in
dec
mov
in
push
xor
and
stos
cmc
aas
xchg
jns
mov
adc
cmp
cltd
xchg
and
es
roll
rcl
pop
mov
stos
jne
test
and
mov
mov
jns
mov
sti
subl
sbb
cmp
mov
addr16
jmp
inc
rorl
inc
xchg
sbb
xchg
in
or
pop
fsts
jnp
jne
mov
push
cld
data16
jne
adc
cmp
cmpsb
imul
fdivl
stos
bound
add
insb
mov
mov
int3
popa
pushf
mov
in
insl
cmp
or
inc
jo
xchg
jg
inc
mov
jnp
sub
test
xchg
ja
test
mov
xchg
in
ficompl
dec
popf
aas
xor
add
jo
sbb
movl
sbb
ja
test
jecxz
outsb
push
inc
mov
es
js
mov
stos
in
pop
push
fsubrs
mov
pop
cmc
xchg
mov
sahf
push
lcall
mov
movsl
jo
mov
into
in
aam
shlb
je
mov
rorb
cmpsl
ja
ljmp
or
shlb
push
jl
inc
xor
mov
jb
or
roll
xor
xor
jbe
shlb
add
dec
mov
push
sbb
inc
fsubl
xchg
popa
cmp
movsb
pusha
je
add
rep
adc
or
cmpsl
insb
cmp
pop
pop
cltd
test
dec
sarl
shlb
or
sub
push
sbb
sub
push
arpl
idivl
mov
push
repnz
lret
mov
mov
add
fnstcw
pushf
and
mov
addr16
std
mov
mov
or
jae
sbb
scas
mov
cli
mov
xchg
mov
pop
enter
pushf
lds
adc
cltd
aam
lahf
fimull
add
inc
invd
cltd
push
aad
jne
out
mov
fs
cmp
dec
xchg
shl
and
jbe
mov
mov
fdivl
cmp
inc
adc
int3
push
pushf
mov
dec
xchg
inc
jo
mov
repz
cs
pop
int
push
jp
dec
adc
xor
and
mov
nop
outsb
in
fstps
jno
aad
ror
fldcw
xlat
fcompl
push
jns
xor
clc
adc
dec
daa
in
fisubrs
out
pop
and
and
push
mov
sbb
inc
cmpsb
inc
push
popa
and
dec
xorb
aad
mov
push
xchg
dec
dec
lds
sub
out
push
dec
icebp
xor
inc
jbe
pop
sahf
xchg
int
nop
packssdw
cmp
imul
mov
mov
mov
bound
xchg
mov
push
and
xlat
lea
fsubl
mov
pop
mov
out
ljmp
xchg
mov
jae
out
cmpsl
subb
ljmp
shl
cwtl
add
lcall
add
xor
mov
xor
and
cmp
and
icebp
popf
icebp
out
mov
pop
jle
push
mov
push
test
dec
mov
xlat
cmp
iret
jp
fisttps
pop
mov
dec
outsb
out
icebp
stos
jge
xchg
je
popfw
or
imulb
shlb
vmwrite
xchg
jp
ljmp
mov
and
test
push
ja
add
adcl
lret
adc
lods
pandn
lods
into
loopne
xchg
adc
sarl
idivb
cmp
push
arpl
call
out
and
into
jne
xchg
shlb
int
out
std
push
sbb
cli
dec
pop
mov
je
imul
jbe
jns
push
mov
jp
xor
inc
in
push
ljmp
fnstsw
sub
fcmovu
popf
cld
inc
insl
jg
jae
daa
or
ja
aad
adc
xchg
mov
jmp
pop
and
pop
test
xor
inc
xor
sti
outsb
stc
ja
inc
aad
sub
jno
dec
cmp
inc
cmp
je
inc
cmp
scas
sub
inc
leave
icebp
rcr
adc
jl
adc
stos
pop
cmp
aaa
jmp
xor
fnstenv
add
icebp
xchg
in
mov
sti
push
adc
adc
idivb
add
std
mov
aaa
leave
fs
push
jmp
imul
test
mov
mov
sbb
and
fisubl
xor
orl
mov
push
fcompp
popf
and
inc
sahf
inc
dec
adc
js
xor
movsb
mov
or
std
mov
xor
jb
cmp
xor
xchg
jno
mov
lods
sbb
outsl
sbb
pop
or
mov
nop
sbb
aaa
and
das
sbb
lods
sbb
je
inc
xchg
lret
pop
and
dec
out
jb
sub
in
clc
in
test
push
scas
inc
push
cmp
jo
divb
insb
sahf
jmp
cmpsl
push
xchg
fistpl
inc
jp
add
inc
xor
mov
loope
adc
inc
xor
movsb
cmpb
enter
adc
lods
cwtl
jae
and
push
xor
adc
int3
cmp
push
push
ficoms
pop
xchg
inc
inc
sbb
fsubs
test
and
leave
outsb
mov
aad
sbb
test
test
and
inc
pop
js
jbe
or
mov
dec
xor
push
cmp
jnp
fmuls
and
pusha
pushf
pop
out
imul
iret
or
xor
in
push
mov
pop
or
ljmp
out
cmpl
jno
mov
dec
fdivs
inc
jg
cwtl
mov
or
cmpsl
out
stos
inc
push
sub
shl
jl
and
pusha
sti
or
popf
and
push
mov
push
fidivl
lds
pop
inc
pushf
fcmovu
mov
clc
push
in
aad
mov
in
insb
pop
inc
or
aam
adc
adc
lea
mov
cmpsl
or
inc
mov
adc
xor
jp
stos
mov
jo
dec
aam
sbb
jmp
jb
adc
adc
call
imul
adc
cltd
xor
ss
sbb
push
jecxz
fsubl
es
mov
call
shlb
xchg
push
cmp
xor
loop
sub
insl
pop
rol
jne
mov
cli
jle
lahf
and
popa
shl
cltd
mov
loop
xchg
decl
out
sbb
sbb
jno
jecxz
push
sti
rorl
into
jno
pop
cmpsl
andw
lcall
mov
lcall
cmp
pop
lahf
lret
sbb
insb
push
leave
or
cmp
or
arpl
mov
rcrl
jmp
jecxz
cli
and
lret
rorb
push
mov
push
dec
dec
pop
in
xlat
out
sbb
mov
pushf
outsl
mov
inc
outsb
into
mov
mov
mov
inc
inc
lcall
or
andl
mov
lea
dec
mov
lock
xor
mov
out
or
cld
inc
lahf
dec
adc
xchg
jl
movsl
cltd
gs
repnz
nop
out
pop
add
sbb
in
call
fucom
jecxz
das
sbb
mov
xor
and
insb
cmp
xlat
xor
sub
pushf
and
jne
icebp
js
enter
dec
inc
adc
mov
sub
adc
cmp
adc
xchg
lea
sti
jg
mov
mov
xchg
clc
mov
lods
mov
push
out
inc
int
subl
or
push
inc
inc
outsl
mov
mov
sub
cmpb
add
and
mov
and
mov
insl
cli
mov
lea
adc
mov
push
out
inc
and
scas
xchg
cld
mov
movsl
mov
adcl
xor
sub
data16
xlat
dec
mov
add
mov
sbb
xor
cmovbe
mov
insl
or
xor
jle
jae
iret
rcl
sub
fcmovu
or
stc
sarl
mov
sub
add
stc
test
lock
xchg
aad
into
js
mov
mov
xlat
adc
imul
es
pop
shlb
pop
icebp
test
ret
and
jle
and
cmp
inc
dec
addr16
dec
scas
xor
and
out
je
hlt
fwait
arpl
inc
pusha
clc
or
and
pop
inc
imul
adc
jo
pop
fpatan
and
popf
sbb
mov
ret
sbb
jecxz
jl
sbb
dec
hlt
repnz
inc
mov
std
lea
mov
mov
lods
stc
shll
pop
mov
pop
pop
lcall
loope
in
lds
push
fidivs
test
xor
xchg
push
insb
inc
xor
sbbb
cmp
notb
xchg
jb
mov
lret
lds
xchg
fidivrl
mov
insb
adc
in
in
mov
stc
jno
sub
sar
in
lret
inc
ftst
mov
int
jl
jecxz
sub
aas
shll
mov
xor
mov
fnstsw
jl
int3
pop
lods
sbb
sarb
xchg
sbbl
gs
or
dec
jb
sahf
outsb
push
jb
rclb
cmp
iret
out
incb
loopne
adc
push
call
sub
fildl
inc
or
ljmp
arpl
aas
add
imul
and
std
sti
rcrb
jle
mov
xchg
loope
into
sub
inc
stos
loope
cld
jae
into
loope
mov
cmpsb
cmp
xor
pop
icebp
inc
cmp
mov
or
pop
sahf
cmc
pop
mov
stos
das
pop
xor
out
ficomps
leave
dec
sub
outsl
mov
or
scas
sbb
jl
orb
cmp
popa
addl
xchg
cmp
popf
xchg
push
xchg
or
cli
sub
scas
imul
push
fldenv
jbe
push
xor
push
clc
lods
xchg
xchg
sahf
int3
in
rol
and
cmp
dec
test
cmp
je
bound
or
sub
int
adc
bound
sub
rorl
dec
jp
push
xchg
dec
xchg
popf
dec
pop
test
pusha
cwtl
pusha
jb
addr16
pop
test
lret
fmuls
dec
add
lcall
mov
push
jbe
loop
dec
jmp
pop
adc
fdivs
int
outsl
push
leave
and
sbbl
daa
xchg
loopne
iret
sbb
push
loopne
or
arpl
fnstsw
xor
stc
dec
iret
sahf
cmc
cmp
aas
jge
mov
repnz
adc
imul
das
ss
dec
lcall
daa
arpl
jl
pop
or
adc
fists
pop
lods
rclb
xor
loop
xorl
adc
pop
ja
mov
adc
stc
jmp
and
ret
and
data16
xchg
loopne,pn
cwtl
jb
push
sub
repnz
inc
imul
mov
jne
jno
sub
push
cmc
add
push
mov
loope
push
jae
push
shll
jecxz
lea
cmc
pushf
push
sbb
ja
outsl
push
cmpl
adc
insb
stc
loopne
movsb
push
xchg
out
sbb
xchg
dec
cs
dec
cli
sbb
jbe
incb
push
pop
hlt
adc
es
fs
loop
or
mov
pushf
lahf
ret
popf
mov
cmpsb
lock
mov
aad
lcall
and
mov
lahf
sbb
inc
push
pop
add
out
insl
sub
mov
nop
jp
xchg
pop
pushl
in
jg
xor
and
inc
jmp
lds
add
or
shlb
dec
add
adc
rorl
cmp
jno
dec
loopne
cmp
mov
mov
fnstsw
and
aad
sti
inc
fst
xor
int3
jnp
aaa
xchg
jae
mov
cld
cmp
xor
andl
xor
ljmp
xor
and
jae
ret
icebp
push
in
add
lock
cmp
dec
pop
adc
mov
cmp
dec
add
adc
xor
xchg
jns
push
cmp
pop
pop
test
stc
orl
cli
and
add
test
je
test
adc
cs
scas
icebp
xlat
mov
pop
fcoml
repz
pop
mov
ror
cmp
imul
and
mov
mov
sbb
jp
icebp
scas
addr16
and
cmc
xor
popf
sbb
or
adc
cmp
ljmp
sub
mov
dec
les
dec
mov
je
jmp
rcl
movsb
or
out
and
mov
fists
int
movsl
mov
jg
or
outsl
insl
cmp
xchg
hlt
mov
cmp
es
ja
inc
adc
adc
outsl
pusha
sbb
testl
movsl
movb
jge
and
fidivl
sahf
je
cmp
ss
lahf
out
jp
inc
outsl
add
cmpsb
cmp
lret
int
aam
fwait
pop
jb
and
mov
add
int
mov
dec
or
sbbl
inc
push
mov
es
js
xchg
push
jp
lock
mov
sbb
adc
ss
int
enter
or
mov
inc
out
xor
mov
leave
or
insl
mov
ja
roll
das
icebp
lds
iret
mov
xor
inc
sar
lods
cltd
div
sbb
fisttps
mov
mov
adc
fisttpll
fstpl
fwait
aam
scas
pop
mov
push
dec
test
push
xchg
shl
mov
negl
sub
es
push
mov
and
lret
xor
pop
sahf
ja
nop
mov
cmpsl
sbb
mov
adc
test
fs
arpl
cmp
lret
pop
arpl
data16
clc
and
cmp
pop
mov
adc
jbe
mov
mov
aas
enter
sub
sub
sar
xor
int
movsl
mov
insl
lea
dec
sub
int3
pop
loop
ss
in
xor
and
mov
adc
popf
repz
dec
fdivrs
xchg
jbe
in
pop
pop
enter
icebp
lea
stos
and
std
xchg
xchg
fcmovnb
js
sahf
mov
sbbl
xor
int3
add
hlt
ret
into
cli
jnp
fnstcw
jbe
add
outsl
xchg
xchg
and
push
jp
add
mov
test
loope
lret
pop
lahf
ss
adc
xchg
dec
pushf
pushf
shl
jne
adc
mov
mov
mov
sbb
lea
out
mov
dec
stos
push
ficoms
or
xrelease
pushf
sbb
and
sbb
loopne
cmp
push
mul
pop
arpl
bound
inc
mov
xor
push
pop
fistps
adc
xrelease
addr16
pop
stos
jne
or
icebp
jne
sub
daa
aas
lea
pop
icebp
leave
in
hlt
add
cmp
loopne
cli
sbb
enter
inc
cmpsb
mov
pop
stos
shll
mov
sbb
lret
scas
xchg
pop
rclb
shlb
shlb
cltd
xchg
outsb
pop
jle
in
addb
mov
sub
pop
nop
and
pop
lods
mov
daa
scas
arpl
sbb
fcomps
mov
mov
and
inc
leave
cltd
or
clc
sub
test
cmp
lcall
push
pushf
mov
xor
in
pop
and
jo
dec
test
fnstenv
xchg
or
out
clc
in
and
sarl
pushaw
add
mov
mov
test
mov
sahf
adc
xchg
xor
pop
dec
scas
cmp
xchg
mov
sarl
lret
inc
pushf
mov
mov
dec
mov
popf
lcall
mov
addr16
andl
pusha
movsl
inc
jl
out
leave
gs
xor
dec
dec
cltd
mov
scas
out
add
leave
mov
shll
ss
and
sbb
fldenv
jp
lret
pop
lahf
and
clc
out
add
iret
icebp
dec
sar
pop
mov
incl
mov
inc
adc
mov
orb
push
mov
mov
pop
lret
lahf
es
jmp
jb
fcomi
in
jge
pop
mov
roll
hlt
dec
xor
addr16
leave
push
in
int
test
push
decl
andb
xor
cltd
in
mov
push
mov
xor
repnz
sub
and
push
stc
shlb
clc
mov
xchg
mov
pop
pop
jns
jmp
mov
outsl
mov
sbb
aad
adc
hlt
mov
cmp
or
jne
cmp
call
mov
add
addr16
aas
jns
popa
inc
je
ja
push
cwtl
add
cmp
cmp
in
loopne
or
pop
lahf
pop
adc
aaa
jae
inc
adcb
in
pusha
sarl
popa
mov
insl
xor
fwait
xor
inc
push
and
lret
or
inc
es
push
add
ret
xor
mov
jno
hlt
dec
mov
jbe
jge
or
pop
outsb
int
loope
mov
nop
mov
ljmp
sub
fldcw
mov
ljmp
add
aas
mov
and
sbb
mov
leave
dec
aas
bound
sub
movsl
fdivp
insl
mov
int
fld
mov
aad
cli
lcall
dec
dec
stos
imul
mov
jecxz
movsl
test
in
inc
push
popa
jno
cmp
mov
aam
adc
xor
into
sbb
int
jo
xchg
aad
pop
push
rolb
and
ja
shlb
adc
aaa
test
xor
sbb
add
pop
inc
jge
insb
cmc
lea
jge
dec
and
push
aam
inc
or
out
test
cli
xor
xchg
sbb
fiaddl
outsl
shrl
sub
and
pop
jns
das
repnz
mov
int3
cld
js
bound
movl
pushf
fstps
adc
imul
and
addr16
dec
clc
jp
xor
xlat
sbb
aas
and
leave
test
push
fldt
pushf
scas
xlat
xchg
lret
dec
dec
stc
push
popf
xor
aad
lock
aam
sbb
ret
hlt
mov
adc
sbb
movsl
out
lds
jecxz
popa
popa
clc
popa
clc
add
inc
jns
test
testl
pop
hlt
dec
cltd
hlt
aam
repz
int
test
into
jge
icebp
inc
call
andl
test
adc
inc
xchg
loop
push
jl
ret
mov
pop
das
inc
sbb
pop
mov
adc
fisttpll
pop
lock
mov
lock
mov
inc
dec
push
add
jne
dec
mov
lea
xchg
fwait
mov
lret
adc
pusha
fldenv
sub
idiv
and
mov
pop
dec
adc
in
and
pop
push
in
push
sbb
inc
cmp
sub
pop
cwtl
lds
cltd
xchg
cmpsl
jnp
ret
sbb
pop
fwait
adc
xor
out
pushf
std
out
movsl
xchg
rorl
gs
jl
cltd
sub
adc
stc
test
ss
sub
fwait
sbb
je
out
and
stos
lea
mov
es
iret
in
mov
mov
dec
enter
cld
clc
les
in
jl
loopne
push
dec
outsl
xchg
dec
dec
sub
jecxz
cld
or
lods
mov
jle
lret
or
iret
xorb
mov
pop
push
push
bound
lret
loop
test
mov
pop
inc
add
add
test
into
inc
iret
out
adc
insb
mov
jmp
cltd
addr16
mov
out
popf
jbe
mov
out
std
test
cmc
insl
cmc
scas
jne
movsl
ljmp
in
out
mov
adc
scas
ja
add
bound
aad
cmp
test
xchg
into
arpl
outsb
sub
insl
cmp
mov
paddd
test
cli
sub
adc
aas
scas
xchg
dec
or
push
aas
jno
jns
loopne
popa
stos
in
xchg
pop
mov
add
push
adc
mov
mov
jl
xor
jno
xchg
imul
insb
dec
adc
lods
xchg
sbb
add
mov
mov
out
adc
sbb
xlat
or
adc
lahf
mov
push
mov
ljmp
repz
loope
ret
and
addb
pop
pop
js
cmp
cwtl
jg
fnstsw
shr
test
dec
or
pop
in
jmp
std
cs
hlt
std
inc
ss
movsb
mov
xchg
pusha
cli
fcmove
mov
jne
xchg
xchg
jo
cmc
fdivs
mov
mov
pop
push
jb
mov
adc
or
out
in
icebp
leave
pop
or
pop
cmc
vmwrite
test
xchg
aad
mov
push
dec
push
add
jge
mov
jne
les
in
cwtl
cwtl
sub
neg
mov
fldl
test
out
xor
xchg
js
shlb
imul
cmpsb
xor
adc
push
repz
jno
mov
orl
xchg
lock
xchg
push
push
faddp
adc
shrl
pop
in
mov
pop
cmp
jle
jo
pop
fs
sbb
aaa
insl
jae
inc
and
jmp
popa
inc
out
test
outsb
and
xchg
addr16
jecxz
mov
fstps
iret
inc
ret
sub
adcl
mov
push
push
sbb
ja
push
fistpll
pop
into
dec
add
or
inc
das
ljmp
and
dec
sbb
movsl
cmc
repz
es
mov
add
mov
cmpsl
jo
jp
mov
int
push
and
fwait
and
js
sub
add
dec
out
push
jno
jbe
jno
dec
in
pop
and
cmpsb
es
fwait
and
xor
fcomi
fimuls
or
mov
or
cwtl
mov
ret
ss
pop
cmpl
push
insb
cmpsl
cmp
pop
sub
clc
and
cwtl
ss
sbb
xchg
push
lods
jae
pop
xorb
adc
arpl
inc
sbb
std
fsts
adc
inc
xorl
lahf
rcrl
add
and
inc
jne
orb
in
xchg
ret
pop
scas
or
push
inc
mov
xchg
lock
sub
or
xchg
sbb
das
dec
dec
ffreep
inc
and
outsb
pop
sub
data16
xor
sbb
mov
outsl
and
lcall
popa
sahf
dec
out
ret
bound
sbb
push
push
dec
cmp
inc
loop
xchg
inc
cmpsb
out
and
and
movsb
lea
shl
mov
mov
ds
dec
mov
sbb
inc
adc
gs
pop
shrl
jle
lret
int3
dec
movsb
pop
mov
adc
lahf
lret
out
stc
push
loope
and
jns
idivb
fisttps
push
ficompl
mov
stos
js
adc
push
loopne
sbb
or
and
jp
xlat
add
test
add
push
push
xchg
add
iret
int3
lds
mov
int
mov
pop
or
xor
jno
cmp
loopne
mov
bound
xchg
std
mov
lods
pop
pop
lcall
xor
mov
mov
xor
out
and
dec
mov
hlt
stc
loop
fdivrl
shrl
inc
and
mov
ds
stos
test
or
xchg
jl
mov
lret
add
stos
push
inc
out
push
add
test
jg
ret
mov
enter
cmp
jp
add
nop
daa
dec
or
cmp
cmp
mov
mov
inc
pop
pusha
mov
push
lea
inc
mov
jg
xor
out
loope
out
adc
mov
into
add
push
fcmovu
lds
mov
cld
pop
or
and
in
push
mov
add
int3
mov
hlt
popa
push
adc
jmp
iret
add
inc
pushf
sbb
inc
fst
leave
popf
andb
cltd
jge
in
insb
pop
test
jo
mov
rolb
out
inc
aaa
sbb
shl
sbb
pop
sbb
hlt
fs
sbb
loope
sbb
jnp
js
mov
cmp
sub
stc
and
shlb
int
jp
xor
mov
arpl
lods
out
movsl
sbb
jmp
mov
sbbb
or
bound
add
cltd
clc
cmp
in
or
and
jge
lock
lods
push
arpl
stos
xchg
jg
pop
enter
cmp
add
ficompl
sbb
push
sbb
sahf
jge
icebp
loopne
adc
push
xlat
cmp
pop
sbb
fists
cwtl
cmc
test
cwtl
loop
xchg
mov
xchg
loop
pop
sbb
lret
cmp
iret
dec
or
popa
sub
fcmovu
lea
pop
push
mov
and
lret
ds
sub
mov
lods
int
jae
sub
scas
ljmp
jmp
mov
cld
mov
cmpsl
or
int
jns
pop
andl
lcall
and
fisttpl
stc
or
pop
ds
filds
nop
jp
pop
rorb
push
loop
addr16
in
pop
pop
out
mov
push
scas
push
pop
pop
mov
xchg
sbb
and
stos
xor
jne
push
test
cmp
fists
in
dec
test
mov
jmp
int
in
add
mov
adc
into
les
xor
inc
das
orb
xor
sbb
sub
jg
shll
enter
mov
sti
bound
outsl
push
rclb
imul
sbb
adc
xor
mov
lods
cmp
cmp
xchg
xlat
es
fs
inc
popf
mov
push
cmp
lahf
fcoms
inc
loope
xchg
out
and
lret
ret
test
lods
xor
es
or
mov
sub
pusha
int3
mov
push
sahf
adc
or
ds
cwtl
or
or
cmp
mov
sbb
xchg
scas
loopne
loope
call
pop
inc
rol
jmp
xchg
test
jl
daa
or
fucomp
insb
push
or
xchg
loope
sahf
stc
jge
and
xchg
outsw
push
dec
lea
mov
jne
inc
enter
push
xchg
xchg
sti
adc
pop
leave
fs
popa
and
dec
adc
jne
xorl
cmp
dec
xlat
ret
ret
cmp
sbb
movsb
mov
xchg
add
push
stos
sti
test
dec
push
stos
sbbl
bound
repnz
popf
fsubrl
adc
shl
fwait
dec
mov
lret
mov
mov
push
xchg
loopne
int
xchg
imul
inc
xchg
xchg
iret
mov
cmp
cmp
and
aam
cmp
sbbb
into
lods
in
cmpsl
pop
mov
mov
and
mov
repz
and
xor
icebp
clc
movl
popa
sete
push
mov
inc
loope
loop
xor
test
xchg
sub
jecxz
inc
stos
cmp
cwtl
ss
pop
mov
dec
mov
int3
fdivp
push
aad
loope
in
or
push
sbb
sbb
sub
lods
gs
mov
push
inc
sub
es
es
pop
sbb
push
cmc
lea
cmp
inc
dec
pop
mov
sub
jae
inc
stc
xorl
dec
fsubrs
fs
xchg
add
lds
push
les
pop
lds
mov
mov
lds
mov
cmpsb
pop
mov
cmp
sub
mov
lea
aam
cs
fldt
mov
nop
inc
stc
jecxz
lea
sahf
in
imul
push
cmc
popa
xchg
das
push
cwtl
popf
mov
xchg
mov
imul
adc
mov
ljmp
push
out
cmp
lods
add
test
dec
mov
jmp
xor
mov
in
mov
xchg
jge
sub
pop
fbld
mov
arpl
je
aas
and
sbb
clc
sti
sti
inc
addr16
out
js
decl
and
fiadds
fcomps
mov
jbe
testb
fdivr
push
mov
cmp
inc
imul
movsl
fsubr
dec
bound
inc
daa
and
dec
cmpsl
jae
andb
xchg
pop
fildl
mov
sbb
insl
imul
cltd
add
xor
sub
addr16
sahf
call
iret
push
mov
push
cmp
xchg
jne
xor
sub
sti
fs
clc
xchg
xor
shll
js
pop
fnstcw
addr16
dec
call
pop
xchg
scas
insb
jmp
pushl
outsl
sbb
dec
or
add
into
mov
mov
and
cmp
mov
cmp
lock
xchg
mov
sti
dec
movsl
lods
push
les
in
xchg
cs
xchg
fwait
add
fscale
mov
pop
pop
loope
mov
movsl
movsl
push
sub
add
testb
add
adc
div
inc
in
jecxz
enter
fistl
mov
mov
data16
add
or
mov
fnstcw
and
outsb
stos
lods
fbstp
popa
jp
or
adc
cli
pop
insb
xor
jge
add
ss
mov
rorl
pop
sbb
imul
out
pop
adcl
test
into
inc
js
mov
push
stc
pusha
sbb
and
or
jno
mov
insb
mov
xlat
fsubrs
xor
mov
outsl
push
mov
dec
repnz
cmp
adc
nop
mov
adc
mov
mov
aam
rolb
adc
stc
cmp
or
test
fwait
mov
dec
xchg
pop
adc
mov
add
fnstenv
mov
hlt
mov
dec
jo
sbb
or
lds
jb
inc
ss
arpl
cs
outsb
push
or
iret
enter
andb
xor
repnz
pop
mov
xor
mov
push
mov
lcall
loope
divb
mov
lea
jle
xor
out
cvtps2pi
bound
icebp
enter
cwtl
xor
sub
push
add
xchg
add
addr16
and
mov
sub
jne
mov
or
lea
out
mov
cmc
xchg
mov
add
int
and
in
mov
rep
lds
xchg
mov
jo
sbbl
jno
add
fwait
sub
cltd
xchg
pusha
adc
daa
roll
xchg
cmpsl
das
ret
jno
jmp
enter
inc
or
sub
insl
xchg
xchg
fdivrl
orl
mov
subl
mov
push
loop
int
xor
jns
pop
adc
in
je
mov
jb
mov
incl
es
aaa
dec
hlt
sahf
dec
in
push
dec
pop
add
push
mov
sarb
mov
adc
cmp
mov
int
inc
test
arpl
rcrl
dec
mov
inc
mov
gs
push
cli
lds
sub
jae
call
mov
fcoms
mov
sbb
mov
das
cmp
push
push
jne
and
mov
or
cmpl
push
cmp
jmp
push
sub
frstor
cli
pop
fwait
clc
movsb
sub
daa
in
or
lcall
inc
int
out
mov
xor
daa
pop
adc
xchg
decb
mov
jecxz
ss
lods
pushf
leave
inc
std
cmp
cmp
and
cmpl
adc
cmpl
xlat
fisubrl
mov
lock
inc
or
pop
push
es
jmp
lahf
jecxz
sti
pop
add
gs
push
mov
cmp
jmp
imul
jp
out
mov
xchg
mov
jnp
and
in
orb
xor
sub
fldenv
iret
stos
sbb
imul
inc
lcall
lds
in
sbbl
push
mov
mov
xor
xchg
jbe
das
mov
push
mov
mov
push
jbe
orb
pop
test
pop
mov
sbb
pop
enter
pushf
sub
aam
idivl
cmc
mov
or
mov
ret
and
push
or
sbb
sub
test
flds
and
push
xlat
into
mov
or
mov
xchg
add
dec
push
pop
push
bound
inc
mov
mov
hlt
jns
mov
add
data16
out
mov
jbe
mov
add
sub
into
gs
iret
rcrb
xor
shlb
inc
sbb
cmp
xor
lds
adc
daa
shll
cld
out
ret
popa
dec
lds
stc
rorl
mov
pop
es
xchg
shlb
lahf
jns
add
mov
cmpb
pusha
push
jne
clc
daa
add
sbb
pop
add
int
xor
cltd
and
mov
ret
ss
stc
jge
rclb
leave
xor
mov
stc
cmc
cmpsb
jns
push
pusha
jge
mov
mov
arpl
or
push
xchg
add
jno
fidivrl
sub
lahf
xor
arpl
ret
jp
and
int
xchg
adc
push
hlt
fiadds
stos
and
jno
test
mov
loop
rcll
sbb
mov
scas
scas
aad
test
xchg
xchg
out
inc
call
xor
dec
repz
lret
daa
int3
sbb
jbe
cmc
mov
jnp
xchg
pop
pusha
xchg
iret
xchg
jge
mov
scas
mov
or
inc
dec
adc
ss
jge
popa
pop
cmp
mov
shlb
dec
iret
sbb
fidivrs
xchg
add
lahf
pop
cli
bound
push
pop
ds
sbb
cli
rorb
mov
dec
aas
inc
arpl
mov
or
pop
outsl
pop
nop
rorb
dec
divl
insl
and
sub
xor
and
dec
xchg
loope
ret
xor
psllq
jo
add
add
xor
aam
jae
cli
push
repnz
inc
xchg
imul
mov
mov
xchg
scas
jmp
cmp
ja
adc
inc
sahf
or
pusha
xchg
inc
call
ret
mov
jmp
or
ds
std
mov
mov
mov
mov
dec
mov
clc
mov
fnstcw
xor
repnz
sub
or
dec
or
div
mov
ds
inc
dec
jns
out
cmp
call
mov
xor
jge
sub
pop
ret
dec
and
shr
or
gs
repnz
xchg
popa
fldt
mov
mov
push
divb
out
dec
mov
popa
lcall
arpl
popa
pop
adc
popf
push
push
add
sahf
pusha
jb
nop
and
sbb
std
dec
push
movb
and
in
repz
movsl
jne
std
mov
mov
int
lcall
cltd
adcl
push
sbb
test
cld
repnz
cmp
inc
sarb
add
mov
and
pop
xchg
sarb
pushf
sub
xchg
dec
jg
mov
adc
insb
roll
adc
and
inc
cmpsl
adc
jecxz
cmc
pop
push
push
fldenv
fs
dec
mov
into
dec
repz
mov
bound
lret
icebp
jae
dec
insl
jmp
mov
shll
xchg
xchg
inc
rorb
jp
pop
or
sbb
mov
in
ret
cmpsl
mov
pop
in
jno
call
and
inc
int3
lds
pop
mov
sahf
xor
mov
stc
and
mov
mov
pop
mov
out
insl
ficoml
faddp
jge
and
scas
sar
and
mov
push
pop
sti
jmp
or
xor
and
pop
pop
push
inc
xor
xchg
and
inc
fistl
jg
pop
outsl
jle
adc
dec
inc
mov
lahf
cmc
sbb
mov
sub
mov
popa
pusha
stos
inc
mov
stos
hlt
rorl
and
mov
fdivrs
aaa
shlb
jns
inc
les
add
mov
pop
test
xlat
imul
int3
mov
adc
enter
add
jbe
add
pop
shrl
jmp
add
scas
sbb
in
in
push
mov
or
pop
mov
bound
ret
pushl
pop
stos
inc
adcl
mov
xor
inc
inc
mov
mov
fs
cld
mov
sub
mov
sti
adcb
dec
cmpsb
stos
push
and
push
xchg
xchg
data16
insb
lds
outsb
fmull
sub
mov
jmp
popf
adc
adc
sbbb
stc
call
xor
loope
or
movb
roll
lret
push
mov
sub
dec
ret
shlb
fcmovb
inc
push
or
jmp
out
inc
lret
mov
cmp
xchg
lods
popf
mov
pop
out
cmp
mov
lea
mov
mov
dec
sub
test
adc
adc
push
lret
hlt
hlt
inc
adc
pusha
mov
jno
fdivrl
mov
xchg
dec
push
shr
js
jo
mov
push
xor
gs
sub
sti
cmp
cmp
popf
loop
pop
or
fidivl
lahf
sbb
jmp
bound
dec
in
movb
push
jne
dec
aas
int
xchg
movsl
and
mov
cmp
push
jl
sbb
adc
fadds
and
and
imul
repz
pop
push
jb
fstp
and
inc
insl
movsb
in
ljmp
jns
jno
loop
rolb
xchg
push
adc
or
movsl
aam
push
mov
push
dec
jle
and
mov
xor
or
pusha
sbb
cmp
push
push
nop
test
icebp
inc
stc
adc
insl
dec
fwait
cwtl
stos
xor
inc
and
std
xchg
in
mov
mov
sub
jns
adc
andb
lcall
inc
in
or
fwait
cmp
or
add
and
fnstcw
fdivrp
jbe
icebp
push
sub
dec
scas
shlb
pop
icebp
out
push
mov
testb
lahf
dec
iret
stc
jp
pusha
add
mov
and
leave
sub
xchg
ffreep
inc
sub
pop
cs
pop
popa
xlat
or
push
shr
mov
inc
pop
ret
je
adc
cmp
mov
mov
and
test
clc
roll
aas
mov
jno
inc
mov
inc
cmp
aad
push
ja
aaa
into
prefetch
pop
repz
fwait
mov
xor
int
fnstcw
test
in
sti
rcrb
jo
out
inc
sbb
mov
loop
js
hlt
mov
push
mov
inc
and
push
xor
cld
sbb
ror
cmp
mov
sbb
cmp
popf
fcmove
cmc
cmpsl
cmp
mov
sub
and
lock
inc
in
jg
lcall
and
jge
std
ds
rolb
dec
lret
sub
push
inc
mov
xorb
and
inc
and
mov
nop
xchg
mov
aaa
in
repnz
sbb
or
outsb
mov
push
mov
sbb
mov
and
inc
and
pextrw
lds
inc
movd
repz
int
or
mov
adc
imul
sub
and
movl
jae
xchg
jae
mov
movsb
out
push
jno
pushl
iret
cmp
mov
loope
js
mov
fiadds
sub
lahf
dec
rep
inc
pop
ror
mov
ss
adc
pop
mov
mov
js
leave
pop
pop
into
inc
popf
and
cmp
mov
incb
sti
xchg
clc
sbb
test
push
jecxz
sbb
mov
fistl
cmp
inc
ss
xor
mov
out
push
pop
dec
aaa
mov
adc
out
pop
lcall
or
xchg
push
in
and
jns
inc
into
pop
mov
arpl
lahf
sub
mov
cwtl
mov
adc
jo
or
inc
out
fnop
andb
cld
fstpl
jle
jp
jl
and
sbb
mov
and
add
out
out
imull
cmpsl
add
sub
clc
fcompl
jne
push
fnsave
shrb
or
out
pop
movsl
xor
mov
in
mov
sub
sbb
and
rorb
fistpll
mov
cwtl
lea
ret
jnp
sbb
and
sub
popl
rcrl
ljmp
pushf
lock
pop
scas
cmp
gs
cli
add
add
std
int
or
divl
cmc
shll
testl
mov
fistpll
sbb
mov
jb
and
out
in
push
push
dec
dec
jmp
test
xchg
ss
sbb
or
jb
jae
cmp
xor
adc
in
push
movsl
nop
fwait
mov
push
push
mov
xlat
inc
aad
popf
or
push
mov
xor
xor
std
sahf
inc
popa
mov
dec
inc
xor
add
jno
jae
sahf
movsl
es
pmaxsw
movsb
adcl
mov
popa
mov
adc
jl
pop
leave
push
and
movsb
inc
mov
rcll
fistl
loop
or
cmp
inc
dec
xchg
adc
sbb
cmp
pop
sahf
push
or
fucomp
cli
xor
and
sub
ljmp
jae
repz
mov
clc
add
dec
sbb
enter
and
xor
stc
inc
sub
jne
cmp
push
mov
mov
dec
inc
mov
cmp
and
mov
rcrl
jne
sbb
lea
cld
jo
cmp
push
rcr
fcom
out
adc
fs
stc
bound
add
daa
xor
cmpsb
into
pop
out
dec
bound
addl
xor
push
mov
aaa
pop
ret
and
dec
leave
cli
jbe
in
movsb
stc
mov
pop
sbb
fs
dec
push
xchg
xlat
lea
mov
arpl
mov
fisubs
subl
ljmp
xchg
out
dec
sub
fs
or
movsl
in
and
fsubrl
mov
mov
fldenv
orl
shlb
aam
stc
bnd
repnz
fs
and
rcll
rcll
daa
add
fs
roll
push
mov
mov
lods
add
stos
and
cltd
into
sub
push
faddl
mov
push
in
stc
mov
push
fs
sbb
std
jno
mov
cmc
mov
notb
xchg
xorb
rorb
xchg
jns
mov
jne
and
pushl
mov
sub
cmp
sbbl
lret
data16
dec
lock
bt
stos
or
dec
mov
hlt
testl
stos
jge
add
out
jne
cs
push
fsubp
xor
test
mov
daa
mov
ds
shrd
dec
and
mov
xor
test
roll
mov
mov
jecxz
into
sti
cmp
pop
xchg
dec
xchg
shll
and
in
out
jmp
pop
cltd
loop
pusha
pusha
dec
inc
and
cmpsb
int
xor
popf
cmc
mov
mov
sub
push
popf
outsl
inc
push
or
sub
cmp
cmp
addr16
lods
mov
das
fisubl
mov
add
push
jno
cld
rcll
cmp
subl
dec
lods
pop
pop
pop
lds
loope
inc
pop
jle
pop
adc
pop
sub
movsl
mov
push
pop
daa
jnp
fnstenv
iret
outsl
push
test
dec
roll
mov
in
mov
cmpsb
pop
jge
int
and
fstpt
xchg
ds
into
arpl
xchg
in
icebp
and
or
lret
inc
jmp
movsl
or
addr16
out
inc
push
push
lods
cmp
in
push
shlb
mov
loopne
mov
cld
push
test
call
std
loopne
fisttpl
mov
loopne
lock
mov
cwtl
inc
pop
stc
push
lea
and
xchg
ds
sub
adc
setne
stos
sbb
jns
sbb
into
cmp
into
mov
ljmp
icebp
sub
rcrl
jecxz
add
mov
stos
cwtl
adc
popf
and
pusha
sub
pop
or
inc
sub
push
mov
dec
insb
popa
bound
outsb
jns
cld
sbb
jmp
push
push
scas
inc
push
div
int
loop
and
sbb
das
aad
jb
mov
lods
xor
adc
push
fwait
sub
push
inc
mov
dec
xor
stos
push
ja
jb
add
int
push
out
add
jae
dec
push
push
pop
inc
push
sbb
imul
cmp
js
mov
mov
sub
fdivp
fisubs
mov
cmp
push
incb
or
loopne
stc
mov
test
flds
in
icebp
popa
cmp
pop
push
cltd
adc
add
fbld
or
inc
popf
pop
repz
pop
aam
or
push
test
into
hlt
jb
jbe
inc
incb
aad
jne
hlt
push
int3
iret
test
gs
xor
sbb
pop
repnz
push
mov
add
and
jbe
cmp
jg
ficomps
icebp
pop
repnz
pop
jnp
lods
sar
gs
aad
leave
leave
jae
into
not
inc
enter
mov
out
push
adc
xchg
sub
mov
cs
xchg
fistpl
bound
sti
xorb
inc
xchg
mov
cmp
pop
out
lods
lret
mov
out
mov
mov
sbb
aad
and
stos
ds
mov
ds
adc
pop
pop
test
xchg
xor
leave
flds
jl
sahf
pop
and
nop
jo
popa
or
leave
in
jb
negb
or
pop
pop
inc
popf
decl
loope
cmc
bound
out
adc
lock
iret
mov
sub
cld
loope
sbb
pushf
stos
test
int
hlt
cmp
rclb
out
xor
push
push
jae
int3
pop
dec
aad
test
push
lock
mov
in
xchg
aad
loopne
jp
enter
loop
pop
fstpl
lahf
out
loop
and
mov
push
xchg
ror
xor
mov
dec
add
add
test
stc
add
out
rorl
insl
lret
cwtl
and
pop
sbb
cmpsb
push
add
add
dec
push
sub
lds
fs
nop
ficomps
in
ret
lods
cld
pop
aas
sbb
pushf
xor
iret
rcll
mov
add
jge
dec
sbb
dec
fisubl
outsb
scas
imul
andl
incl
hlt
iret
ds
xchg
imul
push
mov
es
or
push
popf
in
js
pop
xchg
movl
xchg
push
fisubl
push
js
dec
xor
lcall
pushw
xchg
scas
pop
push
mov
xor
pop
mov
sbb
and
arpl
int
out
ret
popf
into
cmp
andl
pop
or
repz
stc
test
lds
outsl
test
notb
and
js
jne
and
das
fs
xchg
aaa
push
in
andb
mov
push
loop
xchg
and
repnz
push
xchg
ja
ffreep
cmc
iret
and
adc
add
int
int
mov
or
dec
sti
xor
add
cmp
xchg
iret
jns
mov
test
pop
icebp
shl
or
and
neg
add
or
inc
repnz
orb
mov
mov
nop
sub
loope
movsb
mov
lgs
incb
jmp
aad
lds
sbb
jp
pop
add
xor
icebp
sbb
and
int
xchg
mulb
inc
div
mov
sbb
adc
into
adc
fsubs
cmpsl
or
mov
imulb
sti
outsb
loope
lods
pop
pop
fs
pop
cmp
data16
inc
test
outsl
repz
mov
mov
icebp
out
icebp
inc
jp
nop
out
dec
xchg
stos
mov
das
roll
test
jmp
aam
cmp
aad
fstps
loope
dec
int
mov
orb
fisubs
test
push
sub
mov
push
rcrb
cltd
add
or
mov
and
test
mov
lret
fs
lret
into
pop
ret
jns
add
loop
iret
sarl
pop
mov
shll
inc
push
loop
push
into
js
repz
xchg
pop
add
popl
aam
mov
mov
xchg
test
add
mov
adc
xchg
xchg
sti
int
push
aam
mov
pop
repnz
shll
sub
adc
and
mov
mov
lea
sub
push
lret
add
andb
dec
in
hlt
fidivl
xorl
xchg
neg
dec
je
icebp
in
xor
scas
xchg
arpl
gs
ficoml
adc
jo
out
hlt
push
sbb
adc
push
xchg
and
xor
int3
sbbb
repnz
sbb
mov
adc
cltd
push
sub
push
pop
adc
cs
sahf
mov
lahf
lods
cmp
test
jp
and
xchg
add
inc
jg
clc
ss
js
mov
mov
and
loopne
mov
stos
in
je
sub
mov
pop
test
jl
jp
fiadds
dec
mov
test
ret
push
mov
and
ljmp
outsl
gs
stc
inc
dec
in
lds
mov
jns
push
pop
lods
add
mov
mov
test
int
sub
ja
xor
lret
aaa
mov
mov
hlt
lcall
mov
or
inc
jno
xor
mov
inc
cwtl
xor
test
out
loope
scas
ss
fstpt
addr16
lcall
cli
popa
lcall
inc
sub
test
adc
test
sbb
lea
cmc
jb
push
sbb
pop
and
sbb
xlat
shlb
cltd
fidivl
js
sub
mov
out
sbb
dec
cmp
jge
mov
dec
dec
or
pop
and
cwtl
orl
and
jo
inc
mov
rcrl
add
and
lock
jne
lock
cmp
out
inc
repnz
cmpl
push
mov
iret
mov
fmul
paddq
adc
sbb
cmpsb
clflush
movsb
sub
jbe
pop
fadds
jge
pop
adc
arpl
aam
bound
pushf
cs
push
repz
xlat
clc
and
cmc
lods
add
sub
gs
lds
insb
jmp
and
mov
and
lods
mov
xor
pop
pop
cmp
cltd
shll
jle
pop
push
stc
pop
es
mov
sbb
pop
jg
add
push
xchg
fstl
sbb
and
mov
adc
or
movb
int
dec
and
jno
jmp
stc
fldl
adc
fldenv
xor
sarl
cwtl
loop
test
sub
and
outsb
push
aam
shrl
ss
adc
xchg
cmp
sbb
stc
stc
add
ljmp
fldl
dec
push
sub
mov
sbb
sub
xor
jmp
inc
leave
mov
add
scas
arpl
cmc
sub
mov
mov
mov
scas
lahf
mov
imul
insb
cmp
sbb
into
push
adc
data16
aam
or
fcmovb
loope
mov
cmc
aam
adc
in
lds
lds
mov
aad
jg
imul
dec
xchg
dec
pop
int
xor
imul
sbb
cmc
mov
mov
imul
andb
adcb
lcall
push
shrl
pop
rclb
aad
pop
ja
push
shll
hlt
adc
mov
adc
inc
nop
in
or
andb
mov
push
xor
sub
cmc
xorl
cld
add
sub
insl
cmp
sahf
xchg
out
repnz
add
push
insb
jmp
and
and
out
dec
pop
push
test
in
push
int
inc
cmp
dec
scas
xor
icebp
ss
and
frstor
mov
xor
jno
imul
add
mov
sub
in
rcr
xchg
mov
jmp
xlat
ss
loope
ror
mov
fwait
shr
sahf
dec
stc
inc
xchg
mov
test
inc
sbb
jne
sbb
inc
or
out
add
inc
xor
mov
fwait
shlb
inc
mov
fs
les
addl
mov
and
es
insl
fnstsw
adc
and
mov
cld
adc
mov
shlb
ljmp
enter
movsl
inc
repz
and
je
gs
and
roll
xchg
les
jns
adc
shll
adc
in
xlat
dec
inc
add
jle
push
std
inc
pop
sub
bound
add
push
cli
mov
cmp
test
lods
cli
mov
sar
xchg
and
shr
push
xchg
fs
sbb
cltd
pop
cld
and
mov
xchg
loope
sbb
idiv
dec
cltd
out
cmp
jbe
mov
inc
out
mov
fs
out
aam
shll
xor
adc
dec
addr16
stc
sarb
mov
aad
mov
xchg
mov
ret
pushf
adc
push
hlt
inc
cmp
aad
mov
and
xlat
pop
xor
cmpsb
sbb
adc
mov
xchg
dec
outsb
mov
pop
push
sub
insl
pop
lret
mov
std
ds
adc
loope
push
sbb
fsts
inc
lock
addr16
mov
xchg
fs
std
sub
shlb
adc
mov
jb
push
roll
shlb
aad
pop
adc
daa
dec
jne
push
mov
cmc
imul
loope
fwait
cmp
outsb
dec
lods
inc
jbe
mov
cltd
push
cltd
mov
dec
cli
sbb
mov
or
mov
inc
daa
test
xor
xor
adc
and
add
push
insl
jne
add
jge
push
shrb
jno
in
dec
dec
or
rorl
adc
cmp
in
pop
out
lods
push
push
add
mov
adc
lods
jne
pop
jae
cli
std
loopne
outsl
pop
sub
aas
and
cld
jge
cmp
jns
dec
lahf
dec
sbb
jl
sbb
addl
jg
push
pop
imul
or
and
divl
stos
das
cs
jge
and
lahf
push
das
les
pop
xor
push
mov
mov
cmpsb
int
int
loope
and
dec
cmp
mov
or
sbb
xor
out
mov
dec
leave
testl
sar
fsubl
and
aad
sarl
testl
leave
in
cmp
lds
in
adc
mov
sbb
cmp
lea
mov
bnd
test
xchg
shrl
lods
jge
rolb
add
jmp
and
jae
fbld
cs
and
jp
and
repnz
mov
or
fistpll
and
push
xor
mov
rcr
push
std
cmp
xor
ret
loope
int
es
mov
das
xchg
data16
fdivs
sub
jmp
jb
insl
pop
cmp
cmp
xor
xchg
sub
sub
scas
and
mov
and
ror
cmp
lret
shll
lret
aas
pusha
xchg
mov
faddl
mov
mov
dec
jmp
mov
mov
imul
test
jne
and
in
lds
mov
mov
cmc
leave
out
hlt
mov
mov
mov
leave
rcrl
shlb
xchg
sbb
xor
jecxz
jecxz
ss
aaa
out
push
lods
lods
data16
inc
add
xor
xchg
lea
jbe
lahf
adc
dec
test
jge
fildl
call
arpl
dec
out
mov
pop
adc
aaa
pop
not
inc
mov
inc
cmc
ss
mov
jb
pop
mov
in
jle
mov
mov
jge
mov
sbb
push
push
inc
jge
cmp
imul
dec
popa
jmp
xlat
jne
push
pop
ss
sbb
fisubrl
mov
or
or
ja
rorl
fwait
nop
push
stos
mov
sbb
fwait
clc
aam
je
repnz
lods
mov
pop
inc
test
sub
arpl
mov
in
cmp
xor
jae
xor
stc
fldcw
lret
ja
cmp
loopne
cmp
push
xor
xor
jmp
push
lret
xchg
sub
pop
xchg
and
cmp
push
sbb
aad
lds
hlt
mov
or
test
xchg
cs
xchg
mov
push
ja
cmp
add
das
lret
subl
clc
add
test
adc
clc
mov
sub
mov
pusha
add
lcall
test
jo
xchg
inc
xor
sbb
jno
ds
adc
xchg
jmp
and
mov
imul
int3
mov
jmp
xchg
and
mov
cmp
loopne
test
pushaw
push
dec
jo
ds
dec
fnsave
stc
and
out
or
jecxz
xchg
jp
negl
nop
cmc
imul
jnp
lcall
add
xor
xchg
dec
icebp
adc
ret
fimuls
das
nop
mov
cmc
xchg
mov
inc
leave
or
dec
jo
or
mov
cmpsl
lea
xchg
loope,pt
pop
xor
out
add
fdivrl
dec
jg
jns
sub
cli
and
push
in
add
in
inc
push
nop
ret
insb
xchg
scas
pop
adc
jg
stos
int3
lahf
insl
dec
daa
xlat
adc
inc
mov
and
xchg
xor
and
pop
pop
lea
sub
call
xchg
jmp
int
cmp
mov
ja
pop
iret
mov
push
mov
add
fcomps
clc
add
add
popa
test
xchg
out
xor
jo
out
loope
bound
sub
pop
jp
filds
mov
shll
xchg
mov
push
shll
cld
js
pop
and
and
fadd
movsl
lret
sti
pop
vminsd
gs
ljmp
pop
sbb
out
mov
xchg
and
sti
xchg
sub
sub
sbb
sti
mov
rcr
xor
popa
adc
inc
out
sbb
mov
inc
add
sti
pop
mov
add
push
and
ret
sub
fcmovnu
fistpl
test
push
pop
mov
lret
push
jno
pop
scas
nop
pop
lret
jmp
lods
mov
out
and
mov
pop
pop
les
fbstp
mov
div
rcrl
inc
sbb
sbb
test
frstor
and
jge
push
ljmp
xor
fbld
xor
cmc
xor
bound
inc
into
mov
scas
push
int3
add
jge
mov
push
adc
dec
sub
pop
mov
shrl
cmp
aas
and
fisttps
jno
and
aaa
cmp
and
jmp
ja
push
sbb
mov
xor
movsb
sub
mov
and
out
jno
adc
jne
xchg
arpl
clc
int
push
mov
fidivl
into
std
or
push
arpl
dec
xchg
js
mov
pop
mov
mov
shll
xor
mov
or
bound
int
inc
xchg
sub
lret
pop
negb
stos
cmp
ret
mov
rcrl
idivb
mov
adc
outsl
sbb
pop
push
pop
imul
or
std
outsb
leave
mov
fdivs
ret
nop
cmp
inc
add
or
mov
cld
mov
mov
fbld
sub
mov
xchg
pop
jp
push
fistl
add
add
cmp
pop
call
mov
lcall
and
or
icebp
or
inc
arpl
popf
cld
aam
out
out
loope
sub
dec
outsb
or
and
out
orl
xor
lods
adc
mov
movsl
push
add
xchg
xor
fs
sbb
adc
pop
mov
xchg
mulb
dec
popf
jnp
leave
inc
push
cltd
stc
push
push
in
scas
jae
add
mov
pop
adcl
daa
leave
mov
mov
sbb
sbb
and
or
std
add
clc
ss
push
test
fst
adc
inc
xchg
inc
test
jno
js
xchg
cld
pop
out
jno
inc
aaa
and
rcrb
ret
cmp
inc
arpl
fists
cmp
pop
xor
int
jnp
data16
test
sbb
and
mov
pop
test
fidivl
lcall
dec
rcrb
inc
mov
lret
sbb
ljmp
jns
adc
jl
push
pushl
lea
insb
jne
in
in
jp
sbb
mov
pop
or
out
xlat
test
popa
jp
sbb
add
int3
pop
sbb
imul
in
imul
movb
lahf
into
mov
icebp
xchg
pop
jbe
insl
pusha
and
xchg
and
push
arpl
push
in
imul
cmp
fadds
cmp
jno
das
lds
add
data16
je
js
inc
or
int3
xorb
sbb
mov
pop
add
adc
arpl
jl
cmpsl
hlt
dec
mov
arpl
cmp
flds
xor
mov
xor
inc
xor
repz
sbb
lea
arpl
rcrl
xchg
xchg
cmp
inc
xchg
pop
pop
std
pop
dec
or
iret
aad
cmp
nop
adc
sbb
push
sub
mov
daa
or
mov
mov
iret
jl
iret
test
add
lcall
push
add
mov
mov
mov
mov
ss
jl
and
jg
mov
roll
lret
xor
shl
add
cli
gs
fdivrl
pop
je
je
xor
xchg
mov
std
or
incl
adc
addr16
mov
mov
std
push
aas
adc
and
into
jnp
in
outsb
and
movsl
add
enter
or
push
mov
out
shr
push
shl
cmp
xlat
pop
add
loopne
lcall
jl
clc
in
ret
pushf
repnz
dec
cmpl
pop
cwtl
dec
or
push
and
xchg
and
push
inc
push
ds
cmp
aad
loop
loop
sub
xchg
adc
out
lea
push
arpl
xor
xor
pusha
mov
test
jae
pushf
jle
pop
leave
adc
sub
mov
fs
testb
fdivr
sbb
mov
xor
aad
and
iret
icebp
loopne
out
je
mov
sahf
nop
jmp
mov
lods
or
mov
fwait
inc
dec
inc
jb
lods
cwtl
in
dec
lods
into
mov
out
out
shl
cmp
pop
arpl
lock
test
jl
lea
jle
sbb
mov
in
loope
mov
mov
test
cli
repz
std
dec
pop
cli
and
popa
outsl
testb
and
fisttpll
inc
ret
xchg
fdivrl
xchg
mov
aas
insl
sbb
movsl
mov
lcall
pop
pushf
stc
pop
cmpsl
xor
shrd
fisttps
push
jnp
lcall
xor
or
loop
popa
shlb
xchg
jg
clc
test
or
aaa
mov
xor
jnp
sub
jle
adc
cmpsl
sar
int3
lahf
jge
sub
cmp
iret
adc
inc
push
dec
adc
xor
mov
dec
pop
lcall
in
into
cmpb
cmp
pop
push
mov
fisttpl
out
or
movsb
cli
xchg
mov
or
inc
lret
cltd
pop
or
and
sbb
into
sbb
mov
adc
xor
adc
fsub
mov
mov
in
cmp
xchg
jge
dec
xor
cmc
adc
lahf
mov
xor
sbb
sub
jg
subb
test
ljmp
arpl
pop
rcrb
shl
add
and
cmp
pop
sub
mov
adc
xor
add
fsubs
inc
ret
ljmp
shl
pusha
int
mov
sbb
out
outsb
inc
outsb
sbb
cmpsb
push
test
addb
jmp
xor
and
xchg
pop
cmpl
outsl
and
fmuls
mov
jbe
sbb
jl
cmpsb
mov
push
out
orb
inc
xchg
xchg
test
dec
loop
mov
into
out
xlat
add
xor
xor
iret
js
test
fsubrp
cmp
and
rcr
fwait
fnstenv
and
pop
sahf
das
sbb
sub
sahf
sti
and
cwtl
pop
clc
inc
xchg
cmpsb
jbe
nop
push
mov
cmpsl
xor
imul
pop
mov
aaa
adc
sub
or
bound
jg
cld
loopne
jno
lahf
outsl
xchg
mov
xor
fstpl
jl
insl
pop
std
cmpsl
sub
xchg
mov
xor
mov
notl
stc
adc
push
jbe
repnz
and
pop
xlat
or
outsb
xchg
mov
cmp
sbb
sub
cmp
lret
and
push
test
sbb
data16
call
cmp
xchg
and
shrl
hlt
mov
xlat
mov
push
je
xor
adc
cmp
pop
jp
mov
adc
push
and
fists
sub
and
outsl
flds
loop
jmp
pop
repnz
cmp
and
and
add
stc
sti
notl
sahf
popa
bound
iret
rclb
xchg
add
adc
push
aaa
mov
in
int3
pop
rorb
shl
lds
jmp
mov
fcos
push
movsb
fs
xor
movsb
fsts
dec
dec
lock
xor
int3
add
mov
mov
data16
dec
jle
or
xor
mov
lods
cmpsb
mov
test
ret
adc
scas
inc
mov
ljmp
lds
test
jns
lds
sub
sub
jns
ret
pushf
push
jno
or
or
xchg
jle
sbb
cwtl
fld1
and
pop
mov
lods
nop
add
sbb
fdivr
add
jae
xlat
sub
mov
bound
jns
test
in
insl
addr16
movsl
mov
movb
jno
sub
pop
cltd
in
mov
add
mov
fmul
std
pushf
repnz
push
mov
pop
mov
cltd
aaa
pop
xor
pop
in
fwait
cmp
jno
mov
repz
adc
cmp
scas
shl
xlat
je
and
or
push
stos
jle
lahf
je
push
add
xchg
sub
push
out
sti
mov
mov
movsl
push
addl
out
and
cli
lds
or
cwtl
sbbb
divw
adc
push
push
mov
in
push
aad
sbb
and
ret
or
push
adc
in
out
idivb
sbb
in
popa
mov
mov
gs
hlt
push
adc
xchg
or
test
xor
mov
xchg
sahf
js
push
in
outsb
cmpb
popa
mov
popl
cmpsl
jge
xchg
clc
cmp
mov
cmc
insl
test
lods
push
shll
and
insl
mov
scas
call
ret
lds
lret
icebp
mov
cmp
dec
dec
add
cmp
pop
inc
faddp
les
adcl
mov
shr
xor
sub
xor
andl
push
sbb
pop
push
test
lahf
in
and
out
push
cli
mov
popf
clc
ds
xchg
or
cmp
cld
or
sub
sbb
pop
fstpl
std
jae
cli
shll
and
pop
data16
pusha
sbb
js
mov
inc
incl
mov
ljmp
dec
and
mov
stc
jnp
or
js
notl
das
cmp
scas
bound
les
push
jae
xchg
pop
or
sbb
cltd
push
sahf
adcl
gs
dec
or
std
cmpsl
jbe
test
out
and
cmpsl
lea
xor
push
mov
pop
mov
lds
xor
fincstp
inc
fsub
add
mov
loope
sbb
mov
xor
idivl
mov
add
das
mov
sub
jecxz
clc
adc
mov
jo
aaa
xor
pop
loope
cltd
movsl
mov
or
int
pop
dec
gs
push
data16
insl
inc
mov
jmp
lret
fwait
mov
mov
push
mov
fists
cmp
es
bound
push
xor
stos
mov
sbb
cmp
jle
mov
repnz
int
adc
in
or
popa
enter
nop
jp
lea
andl
add
shrl
mov
shlb
push
rcl
test
aad
mov
cmp
xchg
push
jmp
dec
lea
or
or
and
sahf
add
xchg
sbb
fwait
lcall
and
ds
pusha
ficoms
lret
fimull
lcall
pop
xchg
pop
cltd
stc
icebp
dec
adc
in
push
dec
clc
fdivp
push
mov
lret
pop
jne
in
movsb
mov
out
leave
mov
xor
cmp
je
jge
or
sbb
mov
xchg
or
mov
adc
jle
push
mov
stos
mov
pusha
push
insb
and
in
das
aad
nop
and
popf
movsb
sub
lcall
push
in
and
cmp
stc
fcmovbe
mov
xchg
mov
jg
aam
or
fiaddl
jns
xchg
xor
and
xchg
cmp
xor
stos
pop
fcmove
fdivrs
mov
arpl
bound
jb
mov
inc
rcr
mov
mov
fnstcw
shll
xchg
jmp
pusha
fildl
mov
ret
bndldx
mov
mov
and
les
and
add
mov
push
adc
movsl
dec
int3
push
imul
test
pop
adc
dec
ja
adc
xor
add
cmpl
negl
sub
nop
dec
mov
in
xor
pop
bswap
sahf
testb
add
bound
lcall
adc
mov
mov
or
push
jno
jge
mov
dec
adc
dec
push
mov
lcall
xlat
data16
add
shll
xchg
add
dec
xchg
and
dec
sahf
fcompl
mov
js
adc
loopne
jle
mov
cmp
sarl
jp
jns
ret
aas
ja
dec
ret
adc
jecxz
rcl
imul
fstl
cmp
add
imul
data16
xchg
jp
fmuls
cld
xor
xor
ljmp
test
sahf
pop
sti
sub
das
xlat
sbb
icebp
mov
int
popf
pop
jns
fucomp
and
sbb
cld
dec
cmp
in
adc
jge
ds
mov
popf
fistpll
in
icebp
cmc
in
dec
stc
xor
insb
lds
jg
aad
outsb
mov
cmp
rcl
inc
pop
mov
sub
test
pop
fldenv
movsl
lret
shll
jge
lret
mov
loop
mov
loop
lea
mov
ja
stc
test
fs
fwait
movsb
jnp
inc
hlt
in
pop
xor
pushf
xor
mov
imul
in
popf
nop
sub
cli
cltd
sarb
mov
cmp
roll
faddl
aam
das
mov
mov
repnz
lea
into
or
rclb
popf
dec
cld
dec
lods
out
mov
jecxz
cmp
testb
sbb
mov
test
jp
mov
cmp
lret
test
xor
jns
lock
lcall
stos
lahf
or
out
cmc
loope
inc
dec
int3
mov
shll
or
sub
roll
and
mov
dec
jle
mov
cmp
shll
jp
push
mov
movsl
std
dec
xor
cmpsl
cmc
in
test
inc
adc
test
adc
sub
cmpl
lcall
je
and
fildll
fs
sub
pushf
push
testb
lret
sub
int3
repz
ret
xchg
fnsave
loope
mov
inc
popa
or
or
cltd
icebp
push
outsb
add
aas
scas
aam
ret
and
inc
push
mov
nop
xchg
push
stos
push
xchg
dec
cmp
leave
sarl
test
lods
xor
sub
mov
cli
loop
fidivl
in
sarb
lds
arpl
stc
xchg
xorl
std
int3
cmpsl
add
pop
mov
jns
pop
int3
pop
std
clc
cltd
es
rorl
dec
movsl
dec
inc
xor
stc
dec
leave
cld
lcall
sbbl
xchg
leave
pop
jecxz
push
xchg
addr16
lret
pop
int
mov
jns
xchg
loopne
aad
inc
dec
and
xor
std
aad
loope
xor
cld
lcall
xor
adc
xchg
and
cmp
pop
sbb
mov
push
enter
mov
jns
int3
loopne
cli
insl
shlb
mov
cmp
shrl
push
decb
fadds
addb
jae
adc
or
je
andb
aad
inc
cmc
in
testb
jno
ljmp
xlat
fldcw
fidivrl
fwait
mov
jne
test
xor
ss
leave
cld
lret
mov
adcl
in
sti
aaa
or
test
movsb
cmc
add
dec
aam
and
fnstsw
sbb
mov
push
push
lret
sahf
dec
pop
mov
stos
data16
outsb
std
sub
shll
cwtl
es
cmp
call
inc
ror
mov
loope
xor
mov
adc
push
inc
in
mov
or
inc
and
cmp
push
sbb
popa
push
inc
bound
das
mov
inc
gs
rclb
and
hlt
jo
inc
adc
and
neg
add
lods
xlat
loope
data16
test
lea
fidivl
add
int
aam
js
mov
nop
jp
fmuls
lcall
and
repnz
push
fwait
xor
and
xchg
fdivp
insb
xor
call
testb
out
jo
loop
push
shll
inc
or
xlat
call
repz
add
xlat
and
fwait
sub
push
dec
xchg
sub
ret
hlt
rclb
xor
dec
inc
mov
imul
es
fmuls
and
jb
pop
mov
scas
mov
cld
mov
push
in
pop
mov
xchg
dec
test
mov
out
test
cld
pop
mov
or
test
fcmove
fdivp
mov
mov
stc
leave
mov
ss
sbb
sbb
pop
cmp
pop
xorl
mov
mov
jle
jp
divb
pushf
fidivrl
lret
insb
jo
out
insl
cmp
decb
bound
push
lahf
sub
mov
idivb
scas
stos
imul
or
std
icebp
xor
pop
adc
xchg
movsl
pop
inc
xor
mov
adc
pop
inc
gs
lcall
inc
inc
das
out
movsl
dec
movsl
sub
cmp
inc
idivb
stos
ljmp
cmpl
mov
mov
insb
int3
repnz
mov
mov
cltd
or
mov
xlat
push
je
das
dec
inc
mov
repz
push
jno
mov
aad
aad
in
dec
cli
cld
lcall
dec
lcall
mov
dec
inc
clc
adc
mov
aad
out
xchg
push
shll
and
cmp
scas
aam
adc
push
mov
das
out
fs
leave
call
push
and
sbb
jb
ds
inc
daa
pusha
vpunpckhdq
xor
mull
xchg
and
test
dec
mov
dec
xchg
bound
mov
jp
insl
sub
stc
arpl
cmp
div
sbb
call
mov
add
cltd
imul
popa
inc
cmp
loope
imul
bound
nop
adc
xchg
sub
loop
hlt
rcrl
mov
push
shlb
shll
sbb
sbb
fidivl
xchg
or
movsl
jb
xchg
ret
and
jl
push
cmp
shrl
ljmp
xor
mov
add
fldl
fwait
shl
dec
hlt
jae
jp
push
pusha
gs
jp
pop
sub
adc
in
dec
lcall
inc
shrl
out
loope
cmp
push
in
callw
into
mov
dec
arpl
fwait
rcll
dec
push
push
pop
xchg
or
stos
xchg
adc
push
pop
cmc
or
xor
cmpsb
push
ss
ret
out
and
scas
lea
sbb
cmpsb
add
or
cmp
loop
and
xchg
xchg
mov
jo
push
shrl
or
mov
and
repnz
dec
pop
cmp
jnp
imul
push
and
stc
sbb
xchg
or
sub
imull
sub
adc
jmp
lds
loop
cltd
cmp
movsb
sbb
das
cmpsb
outsl
xchg
mov
pop
js
stos
inc
subb
inc
pop
sbb
fsub
divl
lods
inc
outsl
incw
scas
addr16
outsl
stc
mov
or
add
add
dec
and
cmp
repz
cltd
dec
lcall
fistpl
pop
fmull
fs
aam
lahf
push
rcll
xchg
divb
outsl
lahf
leave
call
iret
and
adcb
mov
xchg
push
jns
loope
or
in
jp
adc
cltd
add
cmp
cmp
pop
lods
ret
data16
fisubl
mov
jbe
push
add
das
fs
ljmp
mov
ja
enter
les
push
es
dec
in
mov
pop
and
nop
adc
arpl
movsl
cmpsb
sbbl
sub
xor
scas
jae
sbb
loopne
sub
push
mov
jecxz
testl
iret
aad
rcll
in
gs
mov
fdivrs
adc
bound
mov
pop
mov
addl
mov
fcmovne
hlt
lds
call
icebp
cmc
pop
inc
negl
loop
pop
xchg
repz
pop
mov
xor
outsb
data16
or
mov
leave
aam
into
mov
xchg
ds
xchg
leave
mov
mov
cmp
vcvttss2si
sub
cmpsb
insb
sub
sbb
cmp
std
addr16
lahf
gs
push
sub
test
xorl
std
mov
sbb
cmpsb
ficomps
mov
xor
out
call
dec
sub
loop
adc
cmp
add
mov
and
pop
pop
xchg
iret
add
gs
cmp
fldt
jns
sbb
mov
es
je
jmp
cltd
fs
mov
sbb
or
inc
scas
or
xchg
les
je
pop
xchg
xor
test
pop
push
add
shr
push
ds
inc
jecxz
rcll
loope
lret
pop
inc
cmp
mov
sqrtps
stc
test
pop
dec
mov
rcl
es
and
mov
adc
out
in
ds
aam
test
jmp
iret
fcmovne
fwait
ja
icebp
cmp
mov
mov
jecxz
leave
enter
ret
pop
xchg
jle
dec
test
or
dec
jnp
call
inc
aad
jmp
fmul
jge
jae
in
cmpsl
sub
cltd
mov
ret
and
cmp
sarl
or
dec
int
jmp
jb
jns
in
ret
fcmovbe
dec
stc
gs
pushf
das
cmpsb
mov
push
xchg
mov
xchg
dec
shlb
test
enter
mov
repz
cwtl
xchg
stos
movsl
iret
pop
mov
dec
in
sbb
test
pop
and
iret
inc
outsl
or
pop
inc
pusha
mov
repz
xchg
mov
clc
lea
adc
mov
ja
sub
adc
inc
pop
pop
dec
lahf
adc
inc
cltd
inc
sbb
sbb
dec
popf
mov
cmc
adc
loop
inc
ss
insb
loop
fsts
or
std
insb
pushf
iret
mov
leave
ret
jl
dec
adc
mov
cld
ss
in
js
je,pn
popf
or
repnz
add
add
out
test
dec
and
adcb
push
push
jmp
dec
jle
mov
cmpb
mov
push
out
testb
aad
cmc
push
ret
and
out
jae
das
push
sub
jp
stc
jne
iret
pop
gs
jg
and
push
popf
add
mov
push
pop
fdivrl
mov
mov
daa
jg
pushf
rcrb
ss
dec
aaa
cli
shrl
ljmp
inc
into
imul
push
or
stos
pop
les
lret
cwtl
push
jg
imul
mov
js
cmpsb
mov
in
xor
enter
aad
gs
jns
xor
cli
xchg
cmpsb
mov
shl
neg
mov
jge
ljmp
cmp
incl
out
mov
sub
gs
xchg
mov
in
call
jp
ja
lcall
mov
mov
and
into
mov
daa
outsl
out
sar
inc
pop
arpl
psubusw
mov
fadd
or
loopne
sub
sbb
mov
in
lods
loop
lea
cmp
jae
pusha
jae
mov
fisttpl
outsb
jb
add
dec
xlat
rcrl
je
jp
mov
cs
add
lcall
lock
jg
cli
cli
sbb
jae
mov
inc
pop
pop
mov
call
ss
in
shlb
push
ljmp
sbb
fwait
gs
pushf
call
cld
stc
and
jge
and
or
xchg
sbb
sub
les
pop
mov
push
notb
fnsave
stc
xor
movsl
jecxz
sbb
lret
imul
pop
adc
ljmp
mov
lcall
push
xor
adc
inc
xchg
xor
mov
jne
pop
push
push
add
jne
jnp,pt
fs
sbb
pop
test
xor
negl
ret
stos
loop
lods
cmp
test
lock
jnp
inc
xor
or
int
jle
ret
pop
imull
repnz
dec
test
mov
add
cmp
or
test
sarl
add
ret
adc
cs
cmp
mov
rol
mov
inc
xchg
int
jne
fwait
aam
dec
cmp
jne
cmp
cmc
nop
movsl
mov
cmp
leave
cmp
ds
repz
sahf
mov
xlat
in
add
mov
add
mov
jbe
inc
cmp
adc
je
jge
xor
rcr
adc
fwait
fwait
mov
shr
cltd
adc
shlb
fldl
pop
pop
repnz
fcompl
jno
pop
and
imul
mov
loop
mov
push
xchg
fdivr
aad
mov
and
pop
sbb
addr16
sahf
dec
and
add
orb
ss
mov
lahf
mov
push
xlat
push
xchg
test
fcmovu
and
pop
cmp
sub
fcoms
xchg
aad
mov
and
fwait
daa
mov
dec
jno
push
mov
dec
fldl
inc
aad
dec
push
xor
inc
mov
mov
cmpsb
andb
inc
fwait
pop
adc
add
pop
add
gs
push
mov
fistl
sub
shll
mov
popa
lods
fs
int3
xchg
ret
lcall
pusha
or
and
mov
and
cmp
loope
adc
lds
stc
sti
jnp
mov
jnp
les
aas
imul
adc
inc
popf
adc
jbe
dec
imul
xchg
cmp
orb
inc
xor
rcr
cmc
nop
mov
pop
cmpsl
mov
roll
and
scas
fwait
push
pop
add
fldenvs
mov
sub
mov
fisttpll
inc
les
loop
pop
fsubrs
cmpsb
popf
out
dec
in
xchg
mov
xchg
jb
cmp
fdivr
data16
outsl
xchg
xor
and
lds
sub
inc
dec
inc
enter
add
jno
xchg
fs
cmp
shl
pop
cs
inc
mov
xchg
fs
outsb
pop
sbb
mov
cmp
mov
jbe
sub
lcall
xchg
add
and
fwait
testl
sbb
out
cmc
jp
mov
outsl
adc
in
mov
inc
lahf
cmpl
iret
mov
xchg
cmpsl
push
arpl
fsubrl
sub
inc
add
sub
xchg
dec
and
test
xchg
imull
mov
pop
push
mov
jns
mov
sbb
in
subl
lahf
daa
mov
push
xorl
inc
lea
dec
insb
hlt
int
xchg
sbb
jp
pop
xchg
mov
cmpsl
push
stos
cli
sbb
mov
push
xchg
mov
js
in
dec
fnstcw
jg
inc
or
loop
int
aam
or
aam
mov
adc
xor
loope
fcoml
jecxz
push
movsl
roll
ds
test
test
mov
xchg
mov
popf
cmc
inc
mov
dec
add
jecxz
xchg
sub
jbe
fsub
dec
lcall
mov
pop
imul
push
jns
sub
rcll
adc
int
cmp
hlt
inc
es
repz
mulb
mov
std
lods
jg
lahf
divl
fiaddl
inc
fildll
call
inc
dec
std
mov
fisubl
xchg
out
out
aas
and
ficomps
scas
fwait
and
push
sbb
es
or
addr16
bound
xor
mull
ret
add
adcb
je
add
mov
addr16
iret
dec
fwait
or
cmc
lea
dec
dec
mov
mov
and
into
in
pop
lret
mov
stc
dec
xor
out
dec
in
cltd
dec
push
dec
roll
lret
repnz
imul
xor
xor
and
pop
push
sbb
or
mov
mov
inc
sbb
movsb
mov
icebp
stc
fmuls
shl
pop
pop
inc
jg
fdivr
fdivrp
inc
pop
jecxz
adc
mov
push
pop
int3
sarl
pushl
imul
es
jl
inc
sub
jl
xchg
jmp
mov
daa
push
mov
lds
fdivrs
lcall
pop
aaa
add
outsb
in
test
or
cwtl
mov
xchg
fdiv
jnp
lods
test
imul
mov
scas
inc
vcomisd
mov
cmp
cltd
mov
inc
fs
test
xchg
movsb
cld
mov
sub
int
cmpsb
enter
test
fwait
dec
jns
movsl
xchg
mov
mov
fcmovb
xchg
stos
shr
scas
cltd
push
pop
movsbl
push
cmp
xor
orl
xor
xchg
and
aad
fiadds
arpl
test
xchg
push
popa
lea
lcall
popf
mov
popf
push
jno
ljmp
in
inc
inc
in
movb
fwait
and
fisubl
jmp
mov
jmp
push
sub
inc
cmp
fstl
sub
fsubs
fsub
xchg
ds
or
lahf
jg
leave
es
jne
fsubl
mov
cmp
test
push
jp
mov
sub
xchg
out
add
lcall
repnz
imul
inc
cmpsl
and
or
pop
call
mov
pop
shll
call
and
inc
ljmp
cld
jnp
scas
cmp
movsb
das
jecxz
fs
cmp
inc
repz
js
sub
insb
push
dec
inc
cltd
mov
fs
lods
fsubrl
xchg
t1mskc
adc
mov
dec
loop
sub
das
in
lcall
ret
fstp
int
pop
cmp
and
popf
or
jnp
mov
lret
test
add
pop
mov
pop
test
aam
sub
and
add
or
push
or
cmp
in
mov
lahf
pusha
add
xchg
push
cmp
int3
in
xchg
idiv
dec
fwait
subb
sub
popf
dec
idiv
dec
inc
test
pop
sub
ret
xor
adc
out
dec
fisttps
xor
ficoms
in
mov
out
or
cli
repz
loope
sub
inc
cmpsb
pop
cmc
sbb
int3
lea
ret
hlt
pop
cmpsl
jnp
jle
jge
nop
add
mov
out
jne
add
sub
push
int3
movsb
push
or
sbb
or
icebp
push
mov
jp
xchg
mov
aas
cmpb
into
jecxz
mov
es
or
mov
fwait
push
leave
aas
arpl
jmp
xlat
sub
mov
lds
dec
xchg
mov
or
sub
dec
sub
sbb
jno
ffree
sub
sbbb
push
nop
psadbw
adc
shlb
fidivrl
stc
sub
push
cs
lds
mov
es
pop
out
push
inc
leave
xor
sbb
cli
xchg
dec
roll
into
sbb
out
and
in
xor
adc
inc
jnp
psrlq
out
jb
lock
jmp
gs
sti
sbb
dec
es
xor
mov
xlat
popa
inc
mov
lods
jmp
movsl
testb
lret
ret
inc
pop
pop
andw
jae
loopne
push
in
push
in
push
outsb
cmp
je
pop
hlt
pop
mov
add
push
lods
sti
rorb
cld
dec
inc
iret
and
bound
xor
sarl
shr
es
add
lods
xor
idivb
fmull
cmc
push
sub
in
sub
fs
sbb
xchg
mov
stc
fstl
andl
mov
pushw
cmp
test
mov
inc
push
sbb
lock
aad
test
aad
sub
loopne
stos
lds
lret
and
pusha
sub
xor
inc
bound
xlat
cld
int
mov
dec
stos
bound
ret
cmp
mov
ror
int3
fcmovne
cld
dec
push
or
sahf
pop
add
in
cmp
bound
fnstenv
sbb
add
movsl
cmpb
lds
fcmovbe
jp
mov
pop
push
fimull
mov
loopne
mov
popa
lcall
xchg
inc
lcall
fcomip
js
hlt
test
loope
and
out
lcall
pop
and
mov
roll
inc
test
jmp
hlt
jg
adc
adc
ror
pop
cmp
jae
jmp
mov
push
and
ja
outsl
dec
sbb
fs
stos
jo
paddusb
outsb
test
inc
pop
sbb
repz
pop
xor
shrb
push
and
jo
push
dec
jl
mov
stos
out
lods
into
add
cmc
shrl
in
pop
insl
push
bound
dec
mov
push
daa
xchg
andl
xchg
push
push
or
outsb
in
push
cmp
das
stos
add
and
sbb
imul
leave
sarl
jp
rorl
pop
xor
adc
js
inc
lret
out
scas
mov
adc
subl
inc
mov
jae
inc
mov
xchg
mov
jp
bnd
xlat
lret
movd
in
mov
sbb
rorb
cmp
sbb
cmpsb
push
icebp
xchg
stc
adc
xor
cmp
mov
sub
mov
pop
stc
jg
aam
mov
add
pusha
fldt
pop
arpl
push
enter
mov
movsl
sbb
sarl
aaa
or
jle
sahf
call
popa
cmp
xor
or
shrl
jecxz
iret
unpcklps
jnp
lret
and
pop
mov
nop
aad
add
xor
mov
enter
int
ret
jge
imul
pusha
int
aam
bound
es
inc
clc
cmp
dec
fsubrs
js
push
push
mov
and
cmc
xlat
add
mov
push
sbb
addr16
cmp
add
cmp
into
insl
cltd
jae
loop
inc
mov
dec
shlb
insl
xor
and
mov
popa
lret
add
ljmp
mov
pop
inc
repnz
pop
sbb
and
sub
es
or
mov
adc
push
rol
into
loope
sub
aas
scas
and
jmp
dec
insb
cli
and
xchg
lods
aad
and
mov
lcall
test
xchg
outsl
jns
mov
mov
mov
bound
cmp
call
in
ret
sub
dec
inc
fcoms
dec
sbb
aad
push
out
test
push
jns
loopne,pn
mov
sub
paddsw
inc
daa
std
xor
inc
xchg
and
ljmp
rcrl
sbb
testl
aas
fucompp
dec
sub
pop
fisttpl
scas
pop
push
cmpsb
fldenv
insb
cli
clc
add
mov
movsb
nop
dec
call
or
push
lods
mov
add
sub
cmc
xchg
lods
test
pop
repz
stos
roll
loope
xor
adc
xchg
mov
cltd
aam
sub
jge
fisubl
cmp
rorl
jl
inc
push
sub
mov
rclb
mov
int
filds
xchg
push
aad
lea
in
notl
and
mov
sub
adc
and
xor
lea
lods
mov
fldcw
mov
scas
shlb
aad
pop
daa
dec
xchg
fistps
test
cwtl
mov
repnz
repnz
mov
mov
sub
sub
out
add
out
sti
mov
mov
aaa
mov
push
dec
scas
cmp
ss
mov
sub
mov
push
adc
inc
dec
and
fwait
and
pusha
dec
sub
xor
mov
add
push
cmp
aam
hlt
inc
or
mov
hlt
xchg
cmp
mov
mov
test
notb
pop
lods
xor
adcl
cmpsl
inc
mov
or
push
jmp
dec
push
jae
mov
dec
daa
lahf
stc
rorb
pop
data16
shlb
negb
push
sbb
jbe
aaa
and
push
jno
dec
dec
and
fdivr
clc
nop
mov
sub
inc
jb
dec
mov
cmp
push
jp
in
imul
das
jnp
clc
loop
xor
mov
loope
pusha
mov
jbe
sub
test
pop
ret
and
repz
scas
sbbl
push
dec
js
ss
jl
subl
lea
pop
repz
popf
mov
mov
and
std
mov
fimull
adc
int
dec
fildll
ret
mov
fldcw
ja
pop
ljmp
pop
jo
push
mov
or
cmpsb
jbe
mov
sahf
shlb
xor
push
dec
jae
hlt
sbb
mov
rcrb
mov
bound
lods
insb
dec
gs
fnstsw
mov
popf
lret
pop
jp
and
arpl
cmp
mov
cmpl
scas
lahf
sub
neg
xor
out
fs
popa
ljmp
cld
sbb
push
loope
test
mov
sub
out
and
inc
negb
in
inc
insb
aam
test
xor
aaa
shll
sti
sbb
out
ss
xchg
or
xor
lds
faddl
ljmp
insb
lcall
push
lock
sbb
pop
and
pop
push
aaa
ret
mov
cmp
push
xlat
pop
enter
jbe
and
ja
fldenvs
xor
stos
in
movsl
cmc
mov
into
mov
icebp
cs
hlt
push
xchg
addr16
pushf
add
xchg
sbb
imulb
cld
inc
mov
add
or
lret
in
test
je
xchg
in
xor
subb
enter
xchg
xchg
test
cwtl
cs
test
sarb
notb
or
inc
int3
xor
je
sbb
xchg
lret
scas
xor
cmpsl
xor
les
jl
add
sbbl
fwait
int3
jne
sbb
das
inc
mov
mov
sbb
inc
rcll
pop
enter
btc
movsl
pushf
and
arpl
out
cmp
ss
clc
shlb
cmp
add
xor
dec
mov
pushl
pop
push
push
test
repnz
dec
jb
xchg
add
adc
adc
push
lds
fwait
js
fiadds
test
pop
xchg
icebp
push
adc
cmc
mov
adc
lret
sub
je
stos
add
daa
aad
xor
sarl
cmc
inc
push
mov
gs
ret
xchg
lahf
sub
in
mov
sbb
push
sbb
ja
mov
dec
push
xor
xchg
jbe
ja
cmp
sbb
in
mov
or
mov
daa
push
in
scas
gs
sti
stos
or
xor
jnp
imul
cmpsb
xor
add
xor
dec
and
fcomps
mov
aas
andl
int3
fsts
lock
xorl
inc
filds
pop
jnp
fs
or
test
movl
sbb
add
jecxz
push
mov
and
dec
rcr
je
cltd
dec
sbb
imull
repz
rolb
pop
push
sbb
fcomps
je
jae
subb
ljmp
outsb
inc
sbb
mov
mov
outsl
sbb
lcall
xchg
mov
jns
pop
jle
repz
inc
mov
lds
shrl
dec
lea
cmpsb
data16
sahf
cmp
ja
mov
mov
loope
bound
jecxz
mov
dec
mov
mov
push
jl
pop
jno
fwait
notl
inc
mov
in
push
lock
arpl
sbb
pop
outsl
push
jecxz
pop
push
inc
imul
pop
jge
add
mov
nop
xchg
outsb
cwtl
adc
rolb
sbb
insl
dec
or
arpl
jbe
dec
out
aaa
lea
pop
loopne
xlat
es
push
cmc
push
jle
and
adc
add
sbb
movsl
push
out
pusha
and
addr16
mov
mov
and
test
sbb
rcl
jo
sti
xchg
or
adc
mov
js
ja
sub
enter
fistl
addr16
je
xlat
fnstenv
jle
ja
clc
cmpb
js
fcmovb
sub
adc
cmp
push
jg
aam
fbld
adc
les
xor
inc
pop
mov
pop
jp
fmull
jl
jno
dec
or
pop
jle
cmp
sbb
lret
mov
loopne
inc
ss
out
loopne
cmc
mov
cmp
fisttpl
add
das
test
or
push
imul
insl
stos
mov
fcmovb
adcl
xor
lcall
inc
ja
xor
stc
adc
or
into
adc
gs
ds
pop
cwtl
sbb
pop
dec
and
sti
into
lret
in
fcmovu
clc
int
aaa
loop
xchg
or
testl
rolb
mov
popf
popf
iret
movsl
xchg
jl
xor
dec
push
inc
fmuls
out
pop
aam
xlat
leave
or
mov
push
insl
or
jne
pop
test
rclb
push
sar
sub
mov
pop
aaa
dec
fcoml
rolb
push
lret
ret
lret
jno
inc
or
pop
outsl
je
sbb
mov
mov
ds
and
mov
xor
xor
and
jbe
mov
or
hlt
test
outsl
outsb
addr16
xor
sub
shlb
lods
or
test
int3
subb
and
jnp
test
jge
incl
cmp
xor
popa
jp
xor
repz
pop
pop
and
int
add
and
ja
mov
daa
mov
add
cli
lret
mov
std
xor
fyl2x
cmp
cmp
lcall
orl
repnz
int3
and
cmpsw
mov
sbb
shrb
daa
and
loope
test
fbld
push
inc
mov
mov
imul
sbb
in
xchg
inc
call
popl
dec
cmp
jo
pop
mov
dec
jne
outsb
pop
fdivrl
sub
rorl
aam
enter
jl
fsubs
mov
cmc
xchg
jmp
mov
or
xorb
stos
xchg
jge
sbb
int3
fnstenv
dec
xor
add
test
or
arpl
in
and
fisubrs
mov
mov
inc
sbb
and
call
dec
bnd
and
arpl
dec
or
and
out
popa
push
mov
xchg
mov
dec
test
sarl
roll
push
int
ds
call
cltd
cmp
aaa
jo
pop
and
sbb
in
push
andb
adc
out
mov
pop
dec
int3
outsl
and
iret
push
pop
enter
inc
push
stc
movsb
test
pushf
mov
dec
fwait
aaa
fwait
lods
call
ret
adc
test
loop
in
xor
jecxz
icebp
fists
and
mov
jbe
jle
lahf
cmpsb
lock
mov
mov
or
adc
jne,pt
jns
fisttps
rcpps
pop
push
stc
ja
ss
dec
dec
inc
push
xchg
lea
loope,pt
aam
out
outsb
cltd
and
xor
push
xor
cld
cmp
fcompl
mov
in
jecxz
rcr
dec
lds
jecxz
inc
hlt
flds
jno
shr
push
cmp
jnp
jns
aam
mov
push
cmp
inc
jg
inc
and
aas
adc
sbb
sbb
repnz
repz
roll
in
dec
fdivrs
jbe
inc
shll
xor
xchg
jecxz
sbb
xor
clc
adc
or
jbe
and
les
adc
int3
pop
cmovo
aaa
and
arpl
pop
mov
aad
mov
inc
pushf
test
test
in
ja
rclb
xchg
imul
jecxz
xchg
out
ficomps
and
pop
stc
pop
shrl
out
and
pop
dec
adc
fwait
iret
and
jecxz
cmp
pop
push
ljmp
lret
aad
out
outsb
dec
mov
pop
cli
aaa
and
das
lods
fabs
gs
and
sub
sbb
pop
or
ja
scas
jmp
pushf
daa
or
int
mov
cwtl
adc
cmp
rorb
rorb
xchg
push
add
scas
das
inc
es
lahf
insb
call
rcr
xor
fldenv
xor
test
enter
xchg
ja
test
adc
iret
cltd
adc
mov
leave
push
fs
jle
insl
dec
psllq
gs
jle
and
mov
sbb
or
xchg
mov
stc
adc
ds
pop
mov
nop
rcr
xchg
ret
fldcw
mov
rcl
pop
xchg
lock
lock
stc
repz
dec
je
mov
notl
inc
add
mov
stc
sbb
add
sub
xor
stos
icebp
and
aad
dec
pop
cmp
cmovno
add
in
pop
xchg
add
es
jecxz
shll
inc
add
or
cmpsl
mov
sub
fs
test
clc
les
cmp
add
sub
xchg
xor
daa
hlt
and
frstor
leave
in
push
mov
movsl
xor
dec
xorb
clc
adc
adc
pop
movsl
pop
add
mov
jo
sbb
mov
gs
fnstsw
dec
xchg
sub
and
bnd
mov
xor
notl
rcrb
xchg
xor
clc
push
jb
leave
pop
cmp
ds
xchg
ds
dec
cmp
cmpsl
xchg
ds
mov
inc
rcl
es
dec
jmp
cmpl
scas
push
les
into
xchg
and
and
pop
add
aam
lahf
rcrl
test
lds
push
xlat
mov
adc
pop
add
dec
loope
iret
dec
fdiv
jecxz
shlb
call
loop
and
ljmp
and
lods
into
and
inc
js
dec
mov
or
mov
pop
pop
xor
mov
jae
stc
xor
test
aad
mov
unpckhps
push
adc
or
insl
xor
popf
add
out
fisubl
ljmp
mov
test
test
jmp
and
es
stc
mov
cmp
mov
xchg
imul
hlt
xor
mov
arpl
push
adc
mov
xor
xchg
ljmp
lock
pop
push
push
and
fiaddl
pop
mov
sti
loopne
test
hlt
or
gs
mov
fwait
ljmp
ficoms
xor
mov
push
dec
mov
or
and
add
test
mov
mov
jnp
pop
xchg
or
scas
cmp
sub
test
mov
mov
inc
filds
sti
aaa
addb
loopne
cmp
sti
mov
shufps
mov
and
fldt
push
mov
pop
stc
lret
jl
jno
out
in
xor
pop
imul
jno
mov
or
ja
aad
ds
sarl
xchg
cmp
cmpsl
or
mov
mov
lret
std
loope
push
test
arpl
lods
fimuls
adc
jp
clc
lock
shll
les
mov
mov
and
dec
mov
div
es
cld
int3
mov
push
fnsave
cmpb
into
xrelease
fwait
mov
lret
push
sti
fsubr
popf
or
push
pop
jnp
fisttpll
jns
pop
shll
mov
aam
leave
test
cmp
clc
add
jmp
sub
push
push
imul
popf
enter
leave
fstp
pop
gs
mov
test
fnstenv
xchg
cmp
jno
ficompl
pop
ljmp
xchg
fdivrs
fstps
xor
mov
jbe
leave
and
mov
sar
or
jl
imul
fwait
loope
je
decb
pop
xor
pop
ffreep
adc
xchg
cmpsl
pop
and
pop
stos
repnz
pop
sbb
subb
ja
dec
or
cmp
aad
jnp
enter
jge
shrl
xor
sbb
mov
test
jmp
ficoms
xchg
xorb
lods
adc
pop
pushf
test
cmp
imul
testl
add
test
sbb
xabort
mov
das
std
sahf
adc
cmp
jno
pop
sahf
or
ret
ja
cmp
jo
aas
leave
inc
in
adc
ljmp
push
div
and
cmp
xchg
push
dec
inc
sbb
xchg
pop
outsl
std
push
out
cmp
and
aad
and
out
icebp
cmp
and
notb
or
pop
lret
es
adc
lock
ficoms
lahf
sahf
mov
fdivp
fs
cwtl
lds
pop
xchg
ds
bound
and
inc
xor
and
sbb
mov
jno
mov
xor
add
cmp
inc
sti
and
rcl
xchg
xchg
aas
mov
aaa
sub
jge
sub
xor
ja
sub
es
and
cmp
xchg
lcall
ss
jbe
sbb
pop
fsubl
repz
cmp
out
jnp
dec
scas
inc
fbstp
loope
shlb
mov
jae
pushf
adcb
sub
insl
and
pop
push
cmp
andl
iret
adc
dec
adc
mov
xchg
mov
and
sar
pop
js
sub
jecxz
adc
test
cwtl
pushf
or
adc
fnstenv
repz
add
ds
sub
sti
test
lret
popa
ret
dec
jle
mov
js
imul
cmp
ror
imul
mov
pop
cmp
int
push
push
xor
fidivrl
and
sbbb
lcall
sbb
mov
sub
jg
dec
mov
rcrl
cmp
out
fwait
inc
and
ss
xor
and
add
lea
fcoms
pusha
pop
push
inc
mov
cmc
push
and
shll
push
dec
clc
pop
loopne
xor
push
adc
mov
mov
push
aad
adc
stc
sub
fimull
push
xchg
clc
cmp
sbb
mov
jge
lcall
sbb
cmp
jbe
maxps
out
pop
mov
jp
loop
push
mov
mov
add
pop
pop
popa
sahf
loop
xor
sti
cs
push
in
mov
adc
inc
divb
pushf
addr16
xor
sahf
pop
cmp
push
mov
das
mul
les
cmp
in
cmp
adc
sbb
popa
cmpxchg
jmp
add
pop
lea
inc
popa
jp
ja
mov
aad
cmpsl
ljmp
cmc
xchg
sub
push
jl
in
or
sub
popf
fnstsw
out
jecxz
mov
sbb
jp
cmp
jg
cmp
les
test
xor
movsl
lods
dec
mov
mov
cli
or
add
pop
adc
mov
xor
xor
sahf
jp
add
shll
mov
sbb
outsb
fwait
pop
mov
in
fsts
ss
lds
mov
nop
shr
addr16
das
imul
and
arpl
xchg
sbb
into
jb
jge
xchg
pop
call
xor
stc
pop
jne
daa
ret
adc
push
xchg
jno
cmp
add
jmp
aam
and
es
addr16
pop
push
push
and
ss
mov
adc
daa
sbb
loop
adcb
push
rolb
mov
adc
adc
pop
cltd
dec
hlt
rcll
fnstcw
inc
jp
xor
and
mov
pop
dec
js
dec
mov
fwait
dec
sbb
xchg
xchg
scas
mov
popf
xchg
stos
loop
push
xchg
aas
int
cs
jp
test
sub
stc
addb
xor
pop
ret
fwait
into
inc
loopne
jbe
add
push
sbb
inc
push
adc
dec
js
xchg
mov
jl
ljmp
pushf
pop
inc
push
adc
daa
fimuls
adc
sbb
ljmp
fldcw
je
pop
sbb
mov
jnp
cmp
dec
cmpsl
jge
test
movsl
push
sub
inc
jle
and
cltd
pushf
je
mov
gs
int
into
mov
aaa
adcl
andb
flds
scas
aas
mulb
loope
lds
push
xchg
add
jg
call
addr16
inc
pop
mov
pushf
fdivs
repz
popa
mov
jp
push
jmp
dec
stc
aam
dec
cmp
ds
inc
mov
lods
mov
imul
mov
test
ds
aad
dec
mov
xchg
mov
sbb
mov
pop
not
fsubrs
mov
inc
push
test
and
gs
aaa
shl
es
gs
push
mov
aam
adc
jecxz
clc
cmp
sbbb
lock
fcompl
xlat
shl
push
mov
and
pop
jbe
and
fldlg2
test
sub
loopne
push
or
rorb
fsubr
mov
or
aaa
or
xlat
cli
insb
lds
out
xchg
bswap
adc
inc
or
mov
cld
cs
adc
and
pop
and
xor
fnstenv
cmp
inc
inc
push
test
push
push
iret
cli
add
fisubrl
lret
ret
rcrl
inc
adc
adc
xor
es
sti
xchg
push
call
gs
or
mov
add
cmp
cmp
mov
mov
xchg
addb
mov
fs
and
cmpl
jns
mov
push
mov
mov
or
push
into
cmp
idivl
dec
je
cltd
fstl
mov
dec
xor
jns
cltd
mov
pop
xor
cs
sbb
sti
push
cmp
call
dec
xchg
ret
movsl
scas
js
pop
xor
ss
and
fwait
out
cld
sub
pop
cmp
fisubl
mov
inc
inc
rcrl
inc
push
mov
or
add
push
flds
sbb
pop
iret
mov
outsl
scas
jg
sbb
cmp
jmp
push
fwait
and
out
mov
push
sub
lcall
lret
pop
loopne
movsl
lret
sub
xchg
sub
aad
xchg
in
loopne
mov
and
jecxz
inc
dec
and
int
mov
fwait
outsl
sbb
jo
pop
mov
lods
or
in
loop
aad
jg
sbb
loopne
fisttps
hlt
andl
or
xor
pop
push
test
jb
cmp
and
dec
stos
lcall
push
cli
loope
insl
dec
inc
adc
aas
and
out
and
mov
dec
mov
test
sbb
repz
dec
sbb
addr16
ljmp
nop
mov
xor
pop
iret
lret
out
aam
mov
fiaddl
into
loope
mov
xor
jg
mov
sbb
add
fmulp
pop
repz
mov
cltd
loop
shlb
cltd
out
mov
jae
je
aam
daa
into
js
xor
sti
sbb
add
fsubs
pop
pop
cmc
sbb
data16
and
filds
cld
cmp
popf
adc
mov
out
mov
data16
push
cmpsb
xchg
mov
rol
repz
dec
shrl
or
cltd
cmpsb
movsl
and
out
cwtl
adc
jecxz
inc
jl
ds
cmp
fistl
or
cwtl
jmp
sub
enter
mov
lcall
repnz
addr16
hlt
loope
jp
mov
in
xor
mov
andb
aad
repz
or
stc
shlb
fiaddl
lock
mov
icebp
add
cmc
inc
cmp
rorl
sub
cmp
rcrb
adc
shrl
mov
fnstcw
jae
sub
call
ret
xor
mov
cmp
lods
aad
fisubs
inc
js
or
or
jle
mov
out
xor
adc
inc
int
fcomip
xlat
mov
loop
cmp
and
cmp
xchg
fiaddl
mov
and
and
call
jne
mov
aam
mov
sub
jne
and
pop
lret
mov
fs
mov
sbb
fildll
call
ljmp
insl
jg
push
int3
or
out
add
push
pop
xor
mov
jo
and
xor
or
aas
int3
xor
jne
xchg
sub
clc
fcmovnu
and
js
hlt
lcall
jp
fists
and
pop
adc
shl
jo
or
arpl
bound
fs
jns
popf
loop
dec
into
pop
lea
ja
add
dec
int
mov
jb
xlat
xchg
icebp
dec
shll
fst
dec
inc
test
xor
jmp
jecxz
clc
or
filds
rclb
outsl
sbb
lds
mov
aam
int3
and
test
or
sbb
sub
sub
inc
push
fsubrs
mov
sahf
mov
mov
in
adc
out
fldt
adc
decb
imul
lcall
cmp
in
push
sarl
xchg
sub
dec
push
aas
xor
mov
mov
fstl
aas
inc
mov
cli
mov
jae
cltd
sbb
push
out
rcll
mov
and
add
in
add
adcl
aas
js
ja
sub
cltd
xchg
lock
ds
pop
jno
divl
mov
rcll
fnstsw
fnstcw
jmp
xor
add
cmp
dec
jmp
fistl
mov
pop
add
incl
aad
test
cmp
int3
adc
xor
movsl
cmp
and
cmp
out
in
cld
jl
sub
mov
pop
ljmp
sub
loop
std
adc
mov
xor
xchg
subb
mov
out
push
mov
add
lock
pop
iret
cs
push
test
mov
lcall
sbb
sub
into
sbb
loope
ljmp
lcall
iret
int3
jle,pn
cmp
les
inc
xchg
add
jecxz
insb
shll
fs
rorl
aad
ret
loope
dec
mov
aad
push
in
cld
repnz
push
into
cmp
or
sub
scas
pop
jo
shlb
mov
fdivrl
bound
sbb
jp
lods
add
sub
jae
fsubr
pop
cmp
arpl
jo
push
mov
popf
pop
or
ljmp
ret
pop
inc
xor
sbb
xor
lods
lods
loop
inc
popa
pusha
fwait
xor
mov
inc
out
mov
inc
rcrb
inc
cmp
lcall
pop
push
mov
stos
repnz
jne
mov
jbe
dec
lahf
fdivrs
repnz
sarl
clc
sbb
mov
mov
js
pop
lea
xchg
je
xlat
cmp
rclb
push
into
dec
jmp
mov
jbe
add
fldenv
ror
inc
sub
jge
les
push
xchg
fisttpll
pop
jmp
mov
dec
sti
pop
mov
cli
xchg
ds
leave
pop
js
dec
aad
xor
and
les
pushl
hlt
std
fmul
ljmp
data16
js
mov
dec
or
cmpsl
mov
cmp
sub
push
bound
int3
cmp
addr16
out
aaa
add
xor
mov
sub
nop
ss
sub
adc
dec
mov
mov
jo
pop
cmp
jae
jmp
cld
dec
inc
lret
js
stos
xchg
jae
jmp
or
mov
nop
sub
xor
scas
xor
add
and
pushf
push
std
es
in
inc
adc
push
daa
adc
xor
cwtl
xchg
in
cmc
xchg
cli
mov
adc
loop
sbb
inc
movb
leave
mov
sbb
lods
rorb
daa
xlat
and
ja
jbe
inc
pop
dec
lret
push
dec
es
insl
jl
jmp
inc
dec
popf
inc
push
fcoms
mov
mov
pop
aad
les
mov
xor
das
jno
adc
pop
lds
mov
int3
mov
xlat
dec
or
sub
sub
orl
iret
mov
in
jb
cmp
jnp
xchg
neg
je
cmp
scas
and
jp
xlat
out
mov
mov
inc
and
roll
pop
xchg
and
lea
pop
dec
mov
or
inc
cltd
loope
aad
xchg
jge
xor
js
mov
jnp
cmp
ja
push
aad
repz
jns
sub
pop
inc
das
push
sbb
ljmp
xchg
ret
adc
aad
cltd
dec
push
xor
cltd
call
adc
dec
xor
inc
jp
xor
mov
mov
lea
xlat
lcall
out
nop
jae
fimull
shlb
cmp
pop
fucom
popa
cmp
adc
cld
aad
adc
roll
push
mov
cmp
loopne
rcll
test
pop
mov
daa
fcmove
push
cmp
dec
xchg
stc
addb
in
flds
sbb
jmp
enter
push
ftst
mov
mov
xchg
and
pop
cmp
fdivrs
dec
mov
ja
dec
mov
and
rorl
lret
mov
into
sti
and
adc
fisubrl
cmpsl
repnz
add
testl
add
popf
adc
inc
faddl
cli
jnp
jmp
pop
ja
int
mov
loop
fistpl
repz
sbb
sbb
adc
xor
fistps
loopne
jns
jae
mov
jle
sub
jle
pop
dec
xchg
mov
lcall
jp
jle
mov
imul
outsl
add
dec
jnp
fcmovbe
mov
inc
mov
mov
into
xor
lahf
mov
add
call
lcall
add
es
push
mov
fistps
sti
and
mov
and
fwait
push
xor
pop
pop
cmp
add
push
out
mov
mov
mov
jle
js
or
sar
jo
dec
xor
jmp
xchg
bound
fiadds
shrl
out
and
push
addr16
pinsrw
and
shll
ficoml
mov
test
shll
out
push
jp
inc
mov
pop
fstl
aaa
lcall
jae
push
lea
xrelease
add
int
fwait
sahf
jg
cmp
pushf
test
shlb
xlat
cmc
or
mov
cltd
pop
xchg
in
cmp
shr
mov
sub
fstps
sti
iret
inc
dec
mov
push
inc
or
lods
sbb
bound
mov
fwait
aam
fs
xchg
xchg
test
ffreep
dec
cmp
repnz
iret
clc
add
pop
loop
mov
lcall
aas
jnp
and
mov
mov
clc
rcrl
lcall
sub
lret
fs
xor
cmpsl
adc
adc
sbb
or
rcrl
inc
out
mov
mov
pop
ljmp
or
pop
mov
inc
push
ja
sar
sbb
xchg
dec
cltd
cli
ja
cmpb
and
repnz
ss
mov
je
jl
sbbb
mov
cltd
sbb
leave
ret
mov
test
adcb
cmp
and
sub
and
push
cld
sahf
scas
aam
movsl
into
mov
jae
stos
popf
mov
std
std
xor
cmc
incl
cmc
and
out
mov
add
mov
dec
xor
lahf
sbbb
cmp
lock
in
lret
pop
sub
orl
jge
push
fistps
and
inc
push
pop
ret
dec
cmc
js
pop
mov
and
add
mov
or
xor
lcall
dec
out
dec
cmp
test
pop
test
pop
rcrl
inc
out
stc
out
dec
jnp
clc
push
pop
pminub
mov
cmp
lcall
push
clc
cltd
ficomps
push
jnp
mov
sub
vcmpss
mov
cmp
and
imul
mov
enter
adc
dec
rclb
test
je
cmpl
cli
fistpl
lahf
xor
sahf
popf
mov
push
mov
aaa
dec
adc
mov
sbb
test
ljmp
hlt
stc
ja
mov
push
loope
nop
adc
rclb
aad
mov
inc
ljmp
outsl
sbb
add
hlt
jge
fdivrs
popf
and
mov
push
in
stc
std
and
jp
lret
cmp
adc
mov
xor
xchg
daa
mov
enter
jle
iret
icebp
xor
call
push
in
and
push
imull
push
jge
imul
jp
aaa
dec
jno
fcomps
push
sbb
rcrb
stos
and
jne
pop
mov
lahf
add
add
fdivl
cwtl
shr
imul
ret
aas
pop
inc
push
lret
cwtl
inc
iret
xchg
xchg
xchg
push
or
and
dec
xor
sub
pop
xchg
fwait
jecxz
test
push
out
sti
jno
add
aaa
push
push
mov
adc
jecxz
imul
push
push
lret
push
cmpsl
and
or
cwtl
dec
dec
push
aam
mov
and
inc
daa
push
add
mov
sti
adc
lock
shr
in
inc
fidivl
mov
ss
mov
leave
sbb
push
aaa
cmp
stc
pop
jno
icebp
cmp
jle
fdiv
mov
out
pop
jae
push
cmp
mov
sbb
scas
outsb
call
fisttpll
notl
cmp
sti
pop
xchg
inc
sub
mov
test
test
cmp
imul
iret
push
or
stc
cmpsl
mov
cli
xchg
pop
fsubrl
fwait
mov
into
fs
cmp
inc
fsqrt
dec
mov
test
lahf
jle
movsl
xchg
in
mov
cld
pop
inc
rol
cs
push
das
mov
push
out
pushf
nop
test
aaa
int3
mov
insl
and
xlat
and
fstpl
or
popa
jge
in
ja
into
sbb
pop
adc
jo
xlat
mov
hlt
lock
sbb
loopne
in
sahf
sbb
dec
jp
data16
inc
movsl
dec
xor
jmp
fidivrl
xor
mull
pop
insb
cmp
adc
es
mov
and
jp
rcrb
adc
fldcw
sbb
lret
and
jne
js
cmp
bound
and
test
fmul
in
mov
lea
jae
add
add
add
push
ja
sarb
arpl
add
ja
shll
add
cmp
fwait
shlb
fsubs
leave
adc
fneni(8087
inc
and
lahf
test
mov
les
js
in
cmp
ret
mov
jb
into
cltd
loop
icebp
int
loopne
mov
pop
sahf
push
hlt
daa
cmp
pop
jmp
addb
icebp
test
push
ja
fmuls
mov
add
hlt
addr16
jbe
inc
frstor
nop
cmp
jno
jns
cltd
int
repz
mov
adc
dec
xor
addl
pusha
out
jb
clc
divb
mov
gs
mov
ret
and
scas
sub
or
int
mov
cmp
adcb
testb
out
sbb
fistl
sti
aad
lea
fnstsw
and
arpl
pop
dec
jno
jae
or
push
or
and
repnz
pop
mov
xchg
xlat
std
xor
insb
sbb
jnp
or
sbb
and
or
mov
xchg
in
cmp
cmc
outsb
outsl
dec
pop
dec
outsl
pusha
xchg
pushf
daa
jmp
and
sti
adc
mov
adc
es
insb
div
or
fwait
or
sbb
add
push
sub
mov
popa
cs
iret
adc
or
cmp
insl
jno
shlb
or
adc
jno
imul
xor
cs
xchg
out
and
dec
iret
movsl
mov
fistps
int
mov
adc
movsl
loop
lock
rcl
mov
loope
inc
push
mov
push
fildl
lods
push
aad
mov
fstps
xchg
xchg
xor
imul
movsl
adc
pop
aad
xlat
cltd
xchg
cli
fstl
add
outsl
out
cmpsb
mov
rol
and
shll
js
popa
mov
and
pop
fsubl
xor
xor
jp
sarl
or
test
es
repz
in
imul
shll
jno
sub
in
cs
aaa
jb
xchg
mov
jno
adc
sbbb
cmpsb
xor
dec
push
pop
mov
and
jmp
rcrb
mov
inc
lea
push
das
xor
jns
ss
mov
sub
jnp
in
xchg
cmpsl
rorb
push
mov
in
xor
cmp
push
pop
and
es
or
adc
popa
inc
arpl
icebp
test
shrb
rorb
insl
push
mov
testl
scas
ret
mov
mov
jp
and
fnstenv
fldenv
xorb
sbb
xor
sbb
out
and
cmp
sbb
int3
ss
inc
fcmovb
and
cmp
test
and
ret
data16
mov
cmp
leave
adc
or
mov
daa
xor
mov
sub
inc
dec
mov
adc
add
mov
mov
fld
and
insl
jne
and
pop
xorl
cmp
lods
jne
cld
stc
mov
leave
push
ror
lahf
fmull
mov
sub
insl
adc
imul
rcr
jl
into
arpl
xchg
testb
repnz
cmpsb
ljmp
inc
sub
sbb
leave
fsubr
push
dec
cmp
inc
inc
stos
dec
sbb
cli
dec
or
mov
inc
scas
cmp
and
int
pop
lret
arpl
cmp
xor
pop
test
push
jb
fcmovbe
call
sub
adc
jo
enter
in
dec
test
jg
dec
pushf
iret
rcll
add
andb
int3
cs
test
aam
sbb
xlat
mov
adcl
inc
push
adc
cmp
lods
clc
adc
mov
inc
imul
ret
push
mov
mov
arpl
stc
and
and
mov
aaa
bound
into
cmp
lret
jno
lret
outsl
cltd
add
je
in
dec
sub
cmp
jg
sub
inc
xor
imul
cmp
sbb
bound
out
insl
lods
jnp
cmp
bound
imul
leave
iret
test
scas
lock
pop
dec
and
and
mov
movsl
lock
cmp
frstor
inc
mov
dec
mov
mov
out
in
jge
dec
xor
cmp
lea
pushl
movsl
inc
jg
and
mov
push
push
scas
and
aas
mov
idivb
cmpsb
jle
cld
lcall
adc
lret
adcb
test
rclb
jl
pushl
sti
cmp
es
xor
pop
fwait
dec
xor
mov
jecxz
int
mov
adc
jp
sub
cmp
out
lret
test
dec
loop
and
incb
cmp
mov
cmpsb
add
xor
cltd
cmp
mov
sbb
fmull
sti
sbb
fadd
xchg
std
pushf
pushf
aas
and
push
ljmp
lods
cmp
adc
sahf
mov
dec
and
outsb
mov
xchg
mov
mov
xor
andl
mov
sti
ljmp
daa
cmc
fcoml
out
test
sub
push
pop
testl
dec
out
fwait
into
or
fsubrs
xchg
cmp
jge
mov
in
pop
in
mov
mov
fidivrl
stc
sbb
mov
pop
ret
sub
divl
xchg
dec
sub
adc
cmp
in
sub
dec
mov
inc
fdivr
scas
jge
xchg
inc
dec
bound
ficoms
xchg
cli
cltd
pop
jnp
ds
aas
xor
cltd
lods
sti
add
sti
loope
dec
test
fcompl
aam
xchg
pop
push
and
jns
sub
pop
push
fisttpl
js
leave
je
movsb
and
cmp
add
int
ja
xchg
sbbl
lahf
sbb
sub
pop
icebp
lret
jbe
jae
pmuludq
cmpxchg
ret
sbb
int
mov
mov
pop
xchg
mov
sbb
adcl
es
and
cmpsb
pop
dec
mov
jnp
sbb
sti
xlat
popf
int3
pusha
and
and
aam
xor
ret
ss
push
mov
jecxz
xlat
dec
rolb
or
xchg
or
inc
lods
push
push
cmp
test
sarb
lret
cmp
cmpb
and
inc
pop
jp
insl
pop
and
sbb
sti
dec
stos
movsb
push
adc
repz
pop
or
pop
ja
inc
adc
dec
pop
sub
movsl
sti
fwait
xor
leave
cwtl
je
mov
addr16
jge
jle
inc
sub
mov
loope
lret
push
sbb
or
sbb
adc
mov
sti
loop
outsl
sti
mov
add
jge
mov
aas
repnz
and
or
and
std
inc
pop
loopne
xor
cmpsl
lret
jbe
lahf
xchg
ret
hlt
sbb
sub
aad
mov
enter
add
pop
inc
in
inc
lret
lret
mov
sub
ffree
sub
shl
lea
ret
scas
pop
and
jns
mov
test
rcrw
popa
cmp
and
mov
jle
fists
xchg
pop
in
les
ss
lea
cmp
add
mov
test
les
xor
daa
test
adc
enter
and
mov
icebp
sbb
lods
es
inc
fildl
cmp
dec
mov
push
orb
sbb
jae
popf
das
ret
outsb
testb
ret
dec
adc
icebp
pop
std
cwtl
imul
jle
sti
int3
mov
std
cmp
adc
mov
and
cli
das
mov
jmp
out
dec
lods
cmp
push
cmp
je
and
mov
mov
mov
or
out
xor
std
out
es
jge
aad
mov
std
out
popf
ljmp
lds
sti
out
roll
xorl
add
jecxz
loop
xchg
fs
lock
call
fnstsw
jns
mulb
jecxz
xchg
loop
cmp
jne
and
cmp
push
movsb
ja
xor
ret
xchg
cmp
jmp
das
rcrl
popa
jns
xchg
add
es
lahf
cs
out
icebp
add
das
cs
pop
sub
sub
enter
out
push
out
call
clc
mov
add
aaa
mov
rcrl
rclb
imul
mov
jno
ret
stos
ficoml
popf
dec
xchg
stos
dec
pop
add
pop
ss
andl
arpl
in
scas
mov
adc
pusha
cmp
gs
xchg
dec
scas
rclb
dec
ds
xor
mov
lds
mov
mov
adc
imul
movsl
int
xchg
cmp
sbb
inc
inc
popf
xor
in
scas
pop
jg
sti
fstps
and
add
jne
orl
sub
mov
rcll
rcll
dec
rcl
aad
fsubs
aaa
insb
jnp
mov
ss
add
lcall
and
mov
pop
inc
leave
ret
add
lods
cltd
mov
nop
and
sub
loopne
lss
adc
adc
cwtl
mov
fdivp
and
or
mov
add
addr16
jno
or
fsubrl
shlb
jge
add
cmp
push
neg
push
jmp
mov
repz
push
pusha
fdivrp
fisttpll
adc
sbb
into
mov
inc
std
jno
pop
test
or
jle
mov
mov
imul
lods
lahf
int
push
rclb
cmp
test
lret
clc
mov
loopne
in
mov
lret
sbb
mov
push
nop
xor
dec
popf
sub
xor
jecxz
mov
out
fcomps
cmc
stc
or
jno
mov
add
icebp
xor
dec
test
inc
popa
sub
xor
jb
mov
jo
sub
sarl
arpl
mov
add
jmp
pop
add
jo
push
out
pop
mov
sti
divb
int
enter
mov
jb
push
es
jne
mov
enter
repz
dec
lods
out
mov
stos
jmp
stc
stos
repz
shrb
pop
mov
shll
aas
mov
ficompl
lret
out
sbb
pop
call
lret
into
arpl
and
stc
test
lea
es
enter
stos
jnp
adc
shrl
outsb
out
xor
sub
cmpsb
shlb
adc
and
pop
or
and
dec
mov
enter
inc
idiv
rcl
add
in
leave
add
bound
mov
mov
addr16
pop
test
mov
jg
fisubl
mov
xor
aaa
in
les
pusha
pop
in
xchg
push
jmp
mov
mov
jge
imul
mov
addb
addr16
fadd
or
cs
cmpsl
aad
and
cmpsl
test
adc
or
sarl
repnz
aad
sbb
flds
rolb
mov
ret
test
pushf
vsqrtsd
cmp
xor
mov
cmp
inc
adc
testl
jae
data16
add
test
adc
outsb
inc
daa
int
dec
push
or
adcb
sub
daa
enter
out
iret
and
xor
lock
push
inc
sbb
loopne
or
xor
cli
jae
stc
mov
mov
or
sbbb
mov
push
lret
xor
popf
adc
into
popa
nop
inc
xchg
jg
test
inc
repnz
out
hlt
sbb
jge
push
xchg
add
jmp
add
loop
es
adc
pop
xlat
popa
aad
pop
add
mov
cli
cmp
sub
mov
inc
xorl
jne
es
out
xchg
mov
pop
push
mov
bsf
repnz
loopne
and
cmpsb
scas
into
cmp
mov
sub
fstps
push
ljmp
push
outsl
dec
dec
ret
lock
xor
inc
and
jl
mov
adc
push
hlt
daa
in
test
inc
push
inc
mov
xor
shrb
xor
scas
and
jle
inc
mov
lret
out
movsl
into
cli
inc
add
xlat
sbbl
clc
jb
insl
xchg
les
pop
aam
inc
bound
jo
mov
std
push
pop
cmp
jnp
add
ret
mov
xor
cltd
repz
or
inc
fs
mov
notb
xor
mov
stc
adc
pop
cmp
fwait
hlt
xlat
fs
jae
xor
cmp
mov
lds
cmp
sbb
mov
or
xchg
sub
mov
mov
in
mov
scas
arpl
inc
cmpsl
je
mov
lret
lahf
mov
cmp
or
inc
sahf
push
icebp
dec
incb
leave
iret
inc
jmp
aaa
mov
dec
xchg
outsb
xchg
xor
mov
jmp
mov
xchg
lcall
mov
xchg
xchg
adc
or
shlb
into
add
push
aam
lds
data16
arpl
mov
mov
mov
and
adc
pop
stos
cmp
dec
inc
ror
add
in
filds
das
lret
aaa
addr16
jge
lods
xchg
stc
lcall
jne
push
xor
mulb
inc
cwtl
int3
cmpsl
jo
fimull
hlt
push
jl
lret
shrl
pop
mov
inc
vpaddsw
xor
jb
pushl
inc
mov
repnz
test
lret
and
lods
bound
mov
jnp
and
idiv
mov
push
inc
dec
in
icebp
jle
cmc
cwtl
xor
and
cmpsl
jno
pop
dec
sbb
sub
into
outsl
aad
cmp
out
xchg
cwtl
or
or
sub
pop
jmp
push
mov
pop
mov
mov
rorl
cmp
in
sub
pusha
sbb
popa
call
pushl
jo
xor
xor
pop
push
mov
inc
cmp
aad
pop
ja
sbb
sbb
cmp
outsb
push
cmp
sbb
stc
or
and
aaa
rolb
pop
cmp
insl
in
pop
xor
mov
dec
daa
mov
lahf
out
jmp
xchg
fidivs
xor
dec
xchg
lret
popf
clc
negb
dec
loopne
repnz
ds
hlt
bound
out
fidivrl
movlps
xor
movsl
pop
jge
jbe
xor
fsubrl
add
cmpsl
mov
out
xor
inc
xchg
mov
push
rcrl
bound
mov
sub
or
jg
pop
push
jns
loope
mov
addr16
jae
and
dec
push
cmp
in
xor
imul
sbb
lea
push
dec
hlt
rol
ss
push
add
xchg
out
mov
mov
movsb
adc
xchg
test
cmp
test
jns,pt
push
cltd
test
rcll
mov
sbb
adc
jno
lods
int3
pop
ljmp
movq
mov
roll
jle
lds
divb
or
jmp
jne
lahf
insb
hlt
push
into
scas
in
pop
pop
inc
jmp
sub
roll
test
add
sbb
dec
adc
sbb
ret
jge
out
bound
sub
pop
les
int
dec
jge
stc
rorl
sahf
fcmovbe
gs
cmp
sbb
orb
mov
das
out
xor
cmc
jnp
mov
mov
cmc
jno
pop
jle
nop
in
and
sub
push
out
and
jnp
add
cltd
fcomps
fildll
pop
and
jecxz
pop
ja
push
push
inc
and
xor
lock
mov
andl
fcompl
xor
inc
test
mov
dec
xchg
pop
sub
ret
xor
or
mov
addl
and
rcrl
mov
dec
dec
mov
lret
sbb
cli
push
int
mov
call
mov
mov
ret
testl
aad
bound
push
clc
enter
inc
std
fldcw
fs
xor
lods
std
daa
xchg
cmp
subl
or
xor
mov
dec
lret
and
mov
mov
inc
and
dec
sti
or
mov
xor
dec
ret
adc
int3
scas
pusha
add
xor
dec
cli
je
push
arpl
cmp
push
stos
jne
stos
jecxz
int3
cmp
clc
hlt
pop
inc
cmp
xor
push
imul
sub
push
xor
jecxz
jl
pop
sbb
into
mov
inc
push
push
xor
mov
divb
and
cmc
cmp
lcall
cmp
hlt
rolb
je
hlt
mulb
iret
cltd
xor
inc
shlb
out
push
add
add
stos
out
mul
pusha
mov
lcall
jns
lds
andl
mov
and
pop
out
test
push
mov
lea
fcmovbe
out
jae
mov
lock
loope
ds
test
addl
fistl
sarl
xor
testb
sti
pop
popf
ljmp
sbb
xchg
ret
out
test
push
xor
or
pushl
into
lret
js
pop
pop
ss
or
ffreep
mov
jmp
data16
push
jecxz
repnz
fwait
mov
mov
arpl
scas
mov
shlb
js
popa
cli
dec
cmpsl
test
cmp
push
xor
cmc
cmp
pop
clc
fcoms
xchg
push
push
js
and
adc
pop
testl
adc
adc
jne
popf
mov
pop
test
popa
xor
dec
lahf
jp
stc
mov
sub
pop
cmp
mov
and
leave
movsb
add
xchg
gs
mov
stos
jge
pop
mul
shrl
jp
ret
xchg
mov
bound
cmp
pop
ret
pop
push
add
into
or
xor
lds
test
movsl
push
addr16
addr16
inc
clc
add
or
jno
and
rolb
mov
pushf
je
cmp
jno
mov
repz
push
xor
repnz
jmp
leave
cmpsl
push
sbb
sub
push
xchg
and
add
mov
test
les
aam
testl
mov
mov
xchg
mov
jl
fisubl
add
xor
pop
pop
jg
in
cli
shlb
cld
bound
add
divb
jle
and
jmp
sbb
ja
call
mov
lret
int3
and
pop
test
or
jp
bound
int3
adc
xor
fisttpll
dec
lcall
pop
lcall
jne
jle
stos
ss
or
sub
sbb
lock
scas
rcl
shlb
movsb
call
repnz
or
jns
cmp
aaa
jae
andl
sub
mov
sub
xchg
cltd
xor
jecxz
rcl
push
rcrl
call
xor
push
div
into
mov
mov
sub
fcmovnbe
cmpsl
sbb
mov
xchg
xorb
sar
lcall
add
sbb
stc
bound
lea
cmp
jmpw
mov
sub
add
jae
jnp
jle
movsb
cwtl
xor
push
pop
jbe
inc
xor
stos
insb
jg
adc
shrl
jno
add
sub
mov
sub
in
aad
fmuls
in
iret
adc
scas
test
add
inc
aaa
mov
mov
jne
adc
insb
and
mov
std
loop
cmp
xor
ret
pop
jmp
mov
pusha
arpl
xor
lods
out
and
push
mov
test
insb
mov
or
mov
or
shll
dec
pusha
lret
cli
mov
test
jbe
ret
add
in
cmp
push
rorl
mov
jae
jno
xchg
out
ret
sub
jg
enter
cmp
jnp
jns
sbb
xchg
xor
inc
int3
lcall
inc
mov
add
add
inc
cmp
adc
sub
sub
repnz
fstps
push
jnp
das
stc
mov
and
and
push
icebp
and
and
pop
push
lock
inc
push
cli
popa
sti
inc
jl
inc
adc
int
push
ds
mov
repnz
in
pop
out
or
jmp
dec
dec
mov
rcll
rcll
pop
test
sub
lret
and
sahf
popa
popf
loopne
pop
repz
inc
outsb
xor
loope
mov
jae
and
jbe
das
aad
loope
fchs
sarb
ret
test
mov
mov
dec
sarb
xor
xor
dec
cs
push
mov
loop
arpl
or
xchg
fadd
push
pop
xchg
sbb
ja
push
mov
fstpt
mov
mov
call
in
loop
cmp
shll
clc
push
fsubl
bts
adc
inc
sarl
mov
jecxz
mov
adc
dec
adc
movsb
fnstcw
xchg
jbe
xor
jns
ljmp
test
or
fdivrl
test
and
mov
mov
add
and
push
sbb
into
push
mov
sahf
add
cmp
adc
dec
dec
popa
cmpsl
hlt
loopne
dec
pop
std
test
push
fldcw
lahf
imul
add
pop
mov
test
stc
fcomps
stc
sub
push
sarb
hlt
push
sarb
push
mov
sbb
fdivs
cmp
rcrl
mov
sar
js
and
push
repnz
sahf
movsb
dec
jae
clc
cmp
cltd
int
iret
stc
rcrb
mov
cmp
or
fdivr
xchg
fiaddl
call
push
sahf
cmp
in
push
adc
jg
je
pop
mov
lcall
cmp
aad
lret
sbb
stc
hlt
fcmovu
popa
xor
sub
arpl
movsb
aad
out
and
xor
daa
sarb
xchg
int
pop
mov
adc
or
inc
cs
cli
inc
call
cmp
xchg
sbb
mov
pop
dec
into
lods
push
lcall
cmp
rorb
jo
push
ja
sbb
lret
push
inc
fldt
push
aaa
leave
cltd
sarb
lss
push
dec
cmp
xor
cmp
stc
lea
cmpsb
xor
push
call
pop
arpl
scas
repnz
sub
movsb
jecxz
mov
stos
cltd
jno
jne
cmp
rcrl
cmpsl
movsb
leave
daa
sub
jge
push
pop
xor
popf
sub
nop
sub
bound
or
mov
mov
cmp
mov
mov
jae
push
fisubrs
ss
xor
mov
jge
mov
jmp
xor
push
filds
mov
orl
lcall
ret
mov
ror
stos
and
test
xchg
cmp
push
jnp
xchg
and
aaa
xchg
cmpsb
or
test
jmp
int3
ljmp
push
enter
or
xchg
dec
add
mov
add
outsb
lret
mov
pop
xchg
jge
adc
sbb
and
mov
inc
jo
into
inc
stos
das
sbb
xchg
cmp
jl
pop
sbb
dec
insl
lret
mov
pop
test
std
mov
das
addl
mov
test
xchg
inc
xchg
adc
mov
insb
sub
repnz
test
inc
pop
push
pop
cmp
gs
inc
push
jl
icebp
and
mov
xchg
mov
mov
push
je
lds
sbbb
jbe
add
mov
fistpll
add
loop
enter
mov
and
jnp
int
lea
js
push
cs
sub
xor
dec
jl
cmovnp
arpl
xor
fwait
inc
stc
pop
add
jno
inc
sbb
mov
es
cmp
lret
sbb
in
std
push
scas
ljmp
pop
lcall
daa
pop
sti
jb
es
push
cmpsl
xor
add
push
pusha
leave
xorl
int
pop
ficoms
bound
iret
test
shlb
inc
push
jnp
and
xchg
dec
pop
sar
cs
xchg
mov
dec
xchg
xlat
leave
fdivrs
xor
out
cmp
int3
cld
add
jns
idivb
clc
dec
rorl
in
cmc
or
mov
sbb
xor
stos
cltd
enter
gs
sar
pushf
and
inc
imul
int
lods
in
xlat
xchg
push
es
pop
sbb
lahf
xor
dec
sub
mov
sub
neg
lock
pop
rcll
iret
lret
hlt
outsl
adc
fnstcw
mov
call
cmp
cltd
adc
and
push
inc
enter
adc
cs
je
pop
enter
shrb
scas
out
cltd
xchg
movsb
adc
fwait
loopne
aam
jp
ret
cmp
xor
push
mov
add
cld
int3
rclb
xchg
pop
lcall
mul
scas
ja
js
scas
cmp
ja
data16
and
hlt
add
and
ror
mov
movsl
cmp
fadd
or
popf
pop
int3
out
sub
mov
repnz
inc
daa
xchg
dec
sbb
mulb
inc
rorb
jo
push
fimuls
mov
and
jae
clc
dec
into
into
sbb
push
and
loopne
mov
pop
and
out
cltd
push
and
sarb
clc
inc
or
mov
mov
test
pushf
sbb
mov
stc
inc
fisttpl
fcoms
mov
test
mov
data16
outsl
lods
dec
stc
xor
ss
ficoml
mov
orl
in
insl
push
add
stos
aas
cmpb
roll
daa
clc
insl
mov
jo
int3
and
incb
fidivrs
pop
and
push
mov
imul
mov
or
xor
fdivrl
repz
dec
adc
and
pop
xchg
fcmovnu
dec
and
fstpl
or
pop
push
cld
test
dec
mov
repnz
sub
push
mov
mov
pop
sti
rclb
outsb
subb
out
add
cltd
push
add
sbb
xchg
jp
ret
inc
adc
es
mov
jbe
and
in
test
adc
cmp
mov
cmp
xchg
cli
pop
stc
shl
lea
or
dec
pop
dec
mov
ret
pop
mov
xchg
mov
cmp
add
cmp
dec
lds
sbb
mov
cltd
leave
inc
lock
orl
mov
adc
mov
cli
dec
push
or
lock
das
mov
arpl
jae
push
xlat
and
and
push
sub
xchg
sbb
mov
arpl
xchg
lds
jnp
cmp
xchg
das
loop
add
xor
dec
enter
mov
cwtl
sahf
das
and
jbe
and
cmp
or
into
inc
mov
ja
push
pop
out
popa
clc
push
subl
xchg
call
mov
sbb
insb
pop
xlat
int3
push
inc
and
push
sbb
aas
fwait
decb
into
xlat
or
xlat
sahf
stos
outsl
aaa
mov
cld
fdivrs
fmuls
xchg
test
out
into
shll
out
inc
pusha
loope
int3
sub
out
insb
ss
addr16
out
jbe
lret
jno
insb
add
xlat
mov
fnstenv
push
mov
shlb
out
lods
flds
mov
mov
adc
ficoms
xor
fabs
into
sbb
mov
div
rorb
sub
daa
mov
aam
fwait
inc
arpl
xchg
fsubs
mov
outsb
dec
pushf
mov
mov
dec
mov
mov
iret
jl
fxch
mov
pop
and
sbb
fsubrp
int3
inc
and
jns
push
push
mov
sar
jle
jmp
xchg
push
xchg
iret
and
in
cmp
sbbb
push
xchg
jnp
cld
xchg
pop
adc
cli
rcll
pop
pop
or
push
das
popf
jae
arpl
jnp
sbb
jb
push
push
xchg
psrld
adc
inc
fs
jno
jle
cmp
lods
enter
pushf
or
es
and
fld
add
xor
aas
icebp
jmp
test
mov
inc
and
ss
jno
push
jno
xchg
push
xor
inc
cmp
js
xor
imul
cmp
iret
mov
and
daa
clc
or
test
ja
xchg
ja
push
adc
mov
pop
mov
lcall
xlat
adc
call
xor
leave
fdivrl
aad
dec
repz
loopne
stc
push
jp
fcmovbe
jb
sti
xlat
test
sub
sbb
jnp
scas
pop
sbb
repnz
xchg
or
mov
rolb
out
adc
sbb
fsubr
in
cmp
inc
add
add
fidivs
fldenv
enter
cmp
ret
dec
gs
sbb
cwtl
or
out
movsb
cmpsl
in
mov
test
outsb
and
decl
jo
jns
daa
sarl
xchg
ljmp
xor
or
cwtl
sbb
aad
test
lret
sbb
int
repnz
fildl
xchg
aad
mov
imul
mov
add
push
call
dec
or
aas
cltd
scas
xchg
fucom
mov
mov
push
cmp
gs
ficompl
aam
sbb
test
divb
fsubrs
cmp
rcrl
cmp
add
addb
pushf
imul
pop
mov
cs
jno
push
sbb
xchg
push
dec
lret
aas
pop
je
cmpl
imul
or
fildll
sbb
dec
xchg
shrb
mov
cmp
popf
sub
das
das
mov
xchg
pop
sbb
sti
aaa
stos
lea
adc
sbb
cmp
sub
mov
jg
mov
dec
ficomps
inc
jne
mov
aad
mov
xor
jl
mov
jnp
push
data16
stc
je
mov
ds
push
xor
sti
roll
aas
lock
popa
ljmp
push
pop
ret
lock
pop
cmp
or
cmp
mov
push
push
jbe
mov
and
or
flds
push
mov
jbe
inc
js
leave
xchg
cltd
push
and
cmp
mov
pushl
lcall
daa
push
push
mov
lret
repnz
repz
std
popa
pop
into
push
xlat
lds
sahf
mov
jno
stos
xor
mov
pop
jo
jne
mov
jo
enter
adc
jns
pushf
xor
insb
push
mov
mov
cmp
inc
aaa
aad
gs
push
shrb
lret
sti
fisttps
adcb
cmpsl
jg
pop
cmp
in
add
lar
mov
lock
stos
in
cmp
jle
pop
inc
pop
add
jbe
aam
jae
pop
repz
nop
push
jno
gs
pusha
ss
fnstcw
adc
stc
cltd
mov
movsb
cmp
push
aaa
jl
arpl
ja
pop
inc
dec
dec
mov
inc
aam
idivl
adc
jle
push
mov
rolb
sub
rcrb
cmp
jmp
mov
lock
lock
lahf
inc
inc
cltd
shrl
and
and
repz
push
movsl
mov
aaa
jecxz
cwtl
data16
fs
insb
xchg
push
pop
cmp
out
dec
icebp
aas
bound
jbe
or
push
aad
cmpsl
call
ret
aas
mov
xchg
loope
shll
adc
xchg
nop
sbb
lahf
lea
andb
out
fs
push
popf
jp
jnp
cwtl
aas
mov
jmp
lret
jae
adc
add
push
adc
mov
nop
adc
inc
push
lods
test
arpl
inc
and
push
jecxz
mov
mov
add
and
cmpsb
ja
or
xor
mov
gs
xchg
xor
leave
mov
add
sub
push
mov
pop
add
aaa
daa
mov
and
inc
pusha
and
sub
ficomps
aad
aaa
ljmp
xlat
pop
lea
mov
adc
enter
jo
lock
int3
enter
and
std
and
jo
inc
cmp
pop
lea
insl
insb
adc
dec
fisubl
dec
inc
cmpsb
lret
xor
xchg
out
fwait
call
jo
sub
adc
sti
mov
add
jae
push
lcall
rcrb
and
pop
aad
add
aad
adc
bound
int
notb
scas
enter
and
fbld
and
notl
arpl
dec
cmp
add
fnstcw
ret
mov
inc
mov
sbb
inc
hlt
xor
push
cmp
repnz
addr16
leave
rorl
shlb
sub
xor
decl
out
pop
mov
dec
push
xchg
add
adcl
aad
aas
lcall
jb
xchg
sub
es
divb
add
mov
int
and
xchg
sbb
imul
mov
into
fcomps
xchg
insl
cltd
sbb
shlb
pop
jecxz
fisubrl
lock
push
idivl
loopne
shll
fwait
mov
or
push
cld
addr16
jne
aaa
push
or
pop
ss
shrb
adc
test
adc
mov
sbb
roll
rcrl
mov
push
jmp
push
and
int3
in
movsl
xor
inc
je
xchg
mov
pop
ret
nop
xor
stc
cmp
out
inc
jbe
jno
mov
push
and
and
dec
shrb
es
divl
fs
aaa
mov
mov
mov
add
outsb
mov
lds
sub
and
subb
fistpll
imul
xchg
xchg
gs
daa
and
and
jmp
scas
clc
mov
sbb
mov
fisubrs
add
dec
dec
daa
mov
test
data16
movsb
aaa
jno
fimuls
mov
aad
iret
das
cmp
fisubl
sbb
fistpll
dec
mov
xchg
pop
mov
cmp
sub
les
pop
cmp
mov
and
movsl
lds
lcall
xchg
and
fadds
dec
xor
pop
aaa
inc
mov
js
int3
fldl
shrl
aas
je
adc
cli
fiaddl
ficoml
nop
in
int3
stos
test
sub
das
or
cs
adc
mov
std
clc
int
mov
in
add
repz
movsb
or
jg
loopne
andl
pop
inc
fs
jae
mov
sbb
jbe
repnz
pop
lret
mov
xchg
push
pop
test
sub
lock
push
loop
ret
fsubrl
push
popf
aaa
ret
loop
mov
cmp
cmp
clc
in
cmp
outsl
int3
stc
mov
dec
adc
jecxz
test
push
push
jl
jmp
mov
pop
fdivrp
shlb
inc
cmp
jbe
and
popa
sub
aaa
fmull
ds
pop
cltd
sbbb
dec
or
jbe
pop
in
cwtl
push
jmp
sub
fnstsw
xchg
movsl
or
arpl
jle
xchg
ja
dec
adc
lods
mov
push
out
test
pushf
inc
out
xlat
cmc
cmc
testl
enter
xor
push
ret
cmp
jecxz
adc
and
pusha
test
jae
iret
mov
xchg
push
lods
xchg
or
sbb
add
data16
arpl
pop
push
rorb
popa
in
push
cmpb
int
js
lret
adc
cmp
jne
lds
aas
jmp
mov
jge
cmp
inc
adc
jns
sbb
in
mov
cmp
lcall
rol
rcrl
aaa
enter
daa
dec
pop
xchg
aam
add
jb
pop
mov
dec
xor
call
xor
cmp
leave
push
cmp
pop
iret
sub
loope
jo
jmp
ja
xchg
fisttps
loope
popf
jmp
xchg
sub
mov
pop
pop
repnz
xor
popf
lahf
arpl
push
or
xor
xor
aam
add
jns
jge
jp
mov
test
sub
das
mov
pop
inc
aad
pop
loop
loop
adc
jo
or
pop
xchg
jns
dec
jb
and
pusha
push
pusha
jns
out
and
icebp
push
cmp
sti
lock
sbbb
dec
jecxz
and
sbb
repnz
les
pop
hlt
scas
fsts
cmp
test
and
pop
jl
aad
shlb
sbb
sub
addr16
xchg
xchg
rorl
or
enter
das
dec
pushf
jns
pop
cmp
rcr
lcall
mov
or
jecxz
sbb
popf
xchg
push
mov
lock
jle
arpl
push
jp
xor
cwtl
sbb
mov
mov
pop
cmp
adc
inc
faddl
pop
xchg
js
nop
shll
repnz
cmp
pop
std
je
dec
mov
sbb
ficoml
adc
jae
cmovnp
std
jae
fwait
or
mov
sti
es
outsl
cmp
and
push
movsb
inc
jmp
adcl
and
jno
in
mov
cld
test
aas
pop
sahf
xlat
xchg
ja
mov
fldenv
sti
add
push
enter
mov
std
stc
adc
jle
sti
sub
ljmp
or
push
fidivl
cmp
arpl
pop
xchg
sbb
push
cltd
mov
into
mov
cs
cld
jo
push
dec
and
orl
inc
sahf
outsb
fs
sbb
imul
call
scas
stos
insb
leave
into
hlt
dec
ljmp
xchg
mov
adc
gs
dec
xchg
xor
loope
std
fisttpll
mov
fidivrl
jnp
adc
pop
inc
les
pop
push
cltd
fnstsw
movsl
test
bound
movsl
lcall
mov
and
and
fsubs
push
popf
inc
push
fdivs
push
push
or
popa
call
dec
cld
or
cmc
sti
mov
dec
inc
sub
jp
xchg
neg
insl
leave
in
lods
cmc
adc
cltd
scas
in
sbb
pop
aas
les
or
and
ss
imul
mov
sbb
das
sbb
int
mov
mov
aad
mov
and
mov
cmp
jno
or
cmp
out
dec
inc
popf
je
enter
lret
je
bound
pop
rolb
add
mov
std
fs
lock
lods
add
xor
aam
fsubl
frstor
fwait
call
push
insl
iret
jge
shl
jo
mov
addr16
push
test
dec
movsb
mov
and
lcall
ss
xlat
mov
push
inc
mov
sub
js
sub
lret
xor
fldcw
sbb
mov
cmp
jns
xor
dec
sub
lret
sbb
mov
jno
mov
xor
pop
outsl
push
pushf
xchg
push
movsl
cmp
jle
mov
jne
mov
jno
push
lea
test
or
pop
push
add
in
gs
push
and
sarl
out
mov
dec
or
jecxz
mov
push
iret
adc
cmp
daa
movsl
push
cltd
cmp
arpl
mov
pusha
jo
xor
sbb
icebp
fwait
add
jbe
mov
cmpsl
xchg
insb
inc
cli
mov
vmcall
adcb
rol
cmp
pop
dec
mov
cltd
addb
orb
jb
cmc
jp
xchg
arpl
cmc
inc
jle
add
cmp
mov
icebp
adc
mov
and
lods
ja
fnstsw
push
lcall
iret
in
pop
jp
stos
mov
fstps
dec
xlat
lret
in
pusha
xchg
sub
jle
sub
sbb
in
jb
into
fdivrs
push
sub
xchg
adc
out
ffreep
inc
mov
cmc
shl
mov
jne
idiv
popa
ljmp
mov
adc
or
and
divl
add
or
loopne
inc
jp
push
push
jae
les
dec
adcl
das
insl
orl
xchg
and
and
adc
dec
stos
iret
pop
call
sahf
mov
popf
mov
sub
dec
and
xor
fisttpll
mov
fstpl
iret
fidivrl
in
mov
sbb
arpl
hlt
lea
hlt
sbb
jne
into
clc
sbb
lea
mul
or
dec
xchg
fmuls
lret
jae
clc
jge
and
out
or
sub
push
hlt
and
insb
popf
pusha
lret
insb
push
and
cmp
rol
inc
std
xor
mov
cmp
sbb
sub
int
loopne
leavew
ss
cli
fnstenv
push
mov
cmpsb
cli
sbb
or
sbb
repnz
sbb
or
sti
sub
jns
inc
into
xor
mov
hlt
jbe
push
mov
cmpsb
je
out
mov
rcr
repz
xor
dec
add
loop
movsl
mov
push
into
dec
rcr
sbb
jl
and
lahf
in
fbstp
pop
pop
jecxz
loopne
dec
cmp
mov
sub
aaa
xchg
jle
flds
mov
iret
jg
add
es
dec
out
call
ret
mov
cltd
cmp
stc
mov
fwait
mov
or
pop
enter
ret
call
jns
pop
aam
out
jp
lds
lcall
mov
push
je
jns
xchg
dec
subl
xor
cmc
fisubrl
enter
pop
jge
and
and
jl
jne
out
mov
repnz
mov
and
lret
test
fcmovnu
add
xlat
fsts
daa
loope
addr16
push
cwtl
popf
mov
insl
shll
xchg
lret
sbb
aam
cmpl
xchg
push
lret
xchg
in
cmp
fwait
jmp
dec
cmp
cmp
push
inc
sbb
add
cmp
mov
dec
jg
inc
xchg
xor
add
and
aaa
adc
fsts
jne
mov
ljmp
adc
mov
pop
fstl
test
leave
hlt
fists
jl
iret
popa
out
push
pushf
xor
enter
cmp
xor
mov
loop
inc
push
leave
push
or
test
mov
dec
or
sbb
mov
sbb
jne
adc
enter
dec
adc
rcll
or
addr16
or
fldenv
jl
pop
test
in
bound
xchg
inc
jg
add
addr16
shlb
ljmp
mov
sarb
xlat
xchg
dec
sbb
imul
sarl
inc
cmc
cmp
push
mov
sub
popa
dec
and
xchg
add
mov
lahf
jl
add
cmp
lret
fcmovnu
jne
sti
dec
push
and
das
mov
mov
insw
inc
shll
mov
test
push
in
sub
mov
popa
push
xchg
adcl
aaa
push
into
mov
roll
pop
rcrb
test
pusha
imul
or
lea
es
in
cmp
test
test
imul
xchg
or
fdivr
push
sub
jge
mov
rolb
rclb
fcompl
imul
lea
adcl
movsb
out
jae
dec
jge
shll
jge
cmp
and
cmp
in
mov
lock
dec
sbb
cltd
mov
sbb
addl
addr16
in
les
add
and
cmp
jmp
and
pop
fnstsw
mov
nop
leave
xchg
pop
pop
dec
lds
adcb
std
cwtl
or
adc
xchg
fs
jae
xlat
out
sub
sub
pushf
aad
mov
xor
ss
fldl
cmp
fistpll
jl
push
test
xchg
sar
inc
mov
mov
fldenv
cmp
mov
xchg
mov
mov
shll
xor
adcb
jns
push
add
call
int
aaa
roll
test
repz
pop
cmpsb
mov
das
xor
mov
icebp
sbb
ret
int
push
mov
movsb
sahf
sub
sub
or
fsubl
xchg
into
jo
fsub
les
imul
out
fs
mov
xorb
rorl
jns
sbb
jle
push
es
or
es
jbe
pop
lret
jb
mov
pop
fsubr
xchg
testl
movsl
jg
inc
cmp
mulb
dec
in
add
jl
movsl
cli
daa
inc
add
ljmp
insl
adcl
addr16
jmp
cmpsl
sbb
push
dec
mov
mov
test
mov
sti
adcl
jns
rcrb
adc
jecxz
jmp
xor
rcrl
xor
inc
push
es
jle
hlt
pop
add
mov
es
mov
or
jb
sub
sbbl
sbb
mov
or
jb
ljmp
or
test
insb
sbb
mov
or
cmpsb
xchg
inc
daa
xor
xchg
js
and
fwait
imul
push
push
aas
hlt
inc
jbe
xchg
and
pop
mov
xchg
movsb
dec
pop
in
sub
lea
push
dec
xchg
rcll
in
sti
pusha
sbb
loope
and
lods
fnstsw
ljmp
inc
fldenv
mov
and
loop
or
notl
aam
pop
mov
fsubs
outsb
sbb
pop
pop
repz
adc
arpl
cmp
out
mov
pop
or
fiadds
aaa
jb
inc
or
cmp
sbb
and
loope
repz
pusha
mov
fadds
and
loope
loop
inc
je
loope
ds
fdiv
aad
jne
push
iret
inc
push
sub
cs
nop
adc
stos
jle
fiaddl
jns
cmp
mov
push
xor
xlat
mov
mov
fldcw
mov
cmp
jns
mov
repz
gs
fiaddl
mov
lret
pop
sbb
push
pusha
fxch
std
push
inc
mov
rolb
jmp
pop
shll
repz
mov
mov
mov
xchg
sub
andl
loopne
mov
sbb
fsubl
dec
sbb
fsubs
and
popa
xchg
jp
pop
adc
in
sub
sub
lea
nop
lahf
xchg
int3
and
aaa
stos
fidivs
push
mov
pop
push
call
in
sub
sahf
divl
mov
stos
adc
xor
into
inc
mov
sub
outsl
stos
pop
popf
lods
sbb
inc
pop
xchg
in
lods
call
in
jae
ja
cmp
cmp
test
add
pop
push
sbb
inc
add
aam
push
sbb
sub
cwtl
xor
cltd
xor
xchg
xor
sahf
jne
js
lea
repnz
xor
lret
push
jmp
cmp
icebp
mov
or
mov
jo
xor
inc
fisttpll
inc
test
fiaddl
mov
test
scas
mov
jae
and
filds
and
xchg
pop
fimull
inc
and
dec
jg
enter
scas
cmp
out
repnz
lcall
or
ja
test
sbb
inc
ss
out
jno
and
test
pusha
sub
add
dec
ror
scas
enter
xchg
mov
ss
cs
rcl
pop
leave
rcl
cmp
sti
lahf
in
xor
sbb
sbbb
sbb
inc
rcrl
dec
xchg
test
mov
pop
xchg
pop
gs
mov
sbb
sub
sub
cltd
or
in
add
inc
out
xchg
movsb
mov
jmp
or
xor
adc
sbb
fcmovb
mov
cmp
aad
mov
aaa
movsl
jb
sar
pusha
pause
dec
loope
mov
fcmovb
out
or
addr16
xor
adc
idivb
scas
cmpsl
bound
and
or
mov
pop
loopne
mov
mov
xor
in
and
lds
in
mov
das
cld
clc
xchg
cmp
adc
adc
adc
cmp
lods
xor
inc
loop
lret
ret
es
popf
pop
sbb
ret
gs
sti
xchg
daa
lea
add
jmp
lods
sub
enter
or
push
aam
jp
mov
out
push
cmp
mov
addr16
addr16
sti
into
aad
adc
aaa
lds
data16
mov
notrack
mov
sbb
lds
mov
fnstsw
and
lret
test
hlt
adc
and
stc
xchg
dec
popa
popf
ljmp
clc
inc
xor
arpl
or
mov
jns
fwait
cltd
repz
xor
scas
iret
into
mov
fwait
hlt
xchg
test
bound
xor
mov
das
sbb
xchg
inc
xor
dec
or
or
imul
sbb
cmp
rcr
leave
xchg
aad
frstor
xor
push
and
inc
push
test
mov
fdivrs
shl
jbe
xchg
mov
leave
sub
cs
and
inc
pop
cwtl
stc
mov
ds
into
repnz
or
mov
jecxz
in
push
adc
enter
adc
lahf
dec
ljmp
cmp
adc
dec
and
arpl
fldcw
jp
bound
xchg
outsl
andb
pop
cmp
sbb
push
in
cmp
fdiv
ss
es
xor
rol
je
xor
push
add
loope
inc
fsubs
aaa
mov
xchg
sbb
jp
xchg
mov
jge
idivl
sub
pop
test
pop
sbb
dec
repnz
ljmp
mov
ljmp
mov
dec
fdivrp
test
sub
cmc
pop
or
test
cmp
repz
and
stc
sbb
sub
cmp
popf
mov
ret
shll
lcall
jle
stc
fbstp
fsubrs
xchg
outsl
fs
mov
push
xor
ss
cmp
iret
xchg
scas
cltd
ja
arpl
xor
int3
jae
cmp
pop
dec
subl
sub
jge
ret
stc
fstpl
inc
fwait
xchg
mov
in
shll
out
sub
jne
and
in
xchg
test
into
or
jg
stos
bound
and
jns
pop
jl
cmc
mov
lods
pop
push
pop
lret
cmp
xchg
out
inc
out
cmp
and
push
sub
mov
shll
mov
push
inc
jae
mov
inc
pop
cmp
xlat
lcall
out
pop
inc
imul
cmpsl
push
imul
repnz
inc
mov
push
mov
push
mov
and
hlt
js
cwtl
mov
cmp
jmp
outsb
daa
or
pop
and
xor
xchg
cmp
inc
adc
xor
enter
and
and
aad
add
out
rorl
push
xchg
mov
repnz
xchg
adc
add
lret
jns
xchg
mov
mov
push
shrl
ret
jmp
cmp
sub
cltd
shlb
cwtl
orl
pop
mov
test
sub
mov
or
pop
repz
cs
dec
push
loopne
int3
nop
inc
pop
adc
aam
aam
fisttps
jg
ret
mov
mov
ds
je
aam
cmp
ss
test
add
outsl
cmp
inc
xchg
iret
in
lcall
daa
jnp
fisubl
sti
xor
and
cmp
loopne
mov
es
cmp
or
mov
mov
cmpsb
push
movsl
jbe
cmp
repz
imul
lea
and
fwait
mov
adc
out
or
dec
xchg
loop
cmc
fdivrs
mov
outsb
int3
fld
daa
xor
ja
icebp
test
sbb
adc
rclb
stos
push
out
rcrb
dec
adc
imul
and
sbb
cmp
in
mov
push
rolb
out
fwait
sbb
jl
push
xor
leave
aad
sarl
xorl
mov
aaa
mov
jmp
push
sbb
popf
inc
ffreep
ret
adc
scas
adc
sbb
pop
dec
aaa
loop
mov
push
les
leave
jne
inc
push
mov
decl
leave
pop
into
or
ss
cli
mov
mov
xchg
and
push
test
cmp
repz
xchg
mov
lret
push
sub
pop
in
mov
outsb
test
pop
lahf
fiaddl
fnstenv
jmp
pop
adc
shll
adc
rorl
mov
decl
outsb
mov
push
fistl
jo
sbb
jl
aas
jge
mov
aas
xlat
push
mov
pop
std
mov
inc
push
jp
jbe
add
mov
ds
inc
aaa
dec
cmp
shlb
jno
lea
mov
and
dec
gs
fyl2x
dec
push
lds
lods
jle
add
stos
jmp
adc
in
mov
ja
adc
cltd
push
int3
push
arpl
and
push
xchg
xor
pop
mov
inc
mov
cmp
data16
imul
sbb
push
xchg
cmp
idivb
xlat
xchg
into
ret
jno
into
popf
ljmp
jns
jecxz
scas
ja
add
jmp
fs
xor
pop
cltd
push
push
cmp
xor
out
xor
sub
xchg
inc
fildl
xchg
dec
out
lea
clc
xchg
cmp
mov
aam
hlt
inc
enter
rcrb
test
int3
int3
add
mov
mov
xlat
push
call
ret
jbe
loope
ss
pop
negl
aas
mov
mov
imul
xor
mov
cmp
mov
adc
decb
pop
mov
or
push
push
and
ret
mov
push
pop
enter
pushf
lods
mov
mov
cmc
jg
cmp
inc
sub
andl
xor
movsl
insb
mov
inc
sub
jp
sub
xchg
and
daa
hlt
xor
or
cmp
loop
je
push
sbb
push
xchg
lahf
ljmp
inc
jae
icebp
mov
push
dec
pushf
cmp
add
out
into
pusha
xor
xor
les
lock
mov
testl
xchg
sub
pop
iret
shll
fstps
push
mov
pusha
add
aad
popf
push
pop
jo
orb
fisttps
repnz
hlt
mov
cmpb
aad
rorl
in
addr16
sbb
comiss
loopne
cmp
inc
dec
adc
iret
pop
sahf
pushf
adc
ds
cmp
cwtl
xchg
fstl
fistl
mov
add
push
dec
loopne
movl
push
loope
sbb
sarl
mov
push
and
xchg
add
xchg
jp
lahf
cltd
mov
pop
leave
int
cmp
aas
fldcw
lods
push
jecxz
xor
cvtps2pd
cmp
jl
adc
cmp
xor
xchg
shlb
rcll
fimull
inc
sub
mov
or
push
pop
pop
in
sbb
rcrl
cmpb
mov
hlt
data16
pop
pusha
jmp
xchg
mov
fdivl
mov
icebp
push
gs
pop
ficoml
pop
cmpsl
pop
or
stc
ret
xchg
sub
mov
sub
fistpll
aam
add
pop
add
and
adc
jno
xchg
imulb
psubusw
xchg
jnp
jno
lret
popa
call
jp
bound
xorl
decb
xor
mov
jle
ds
fists
fldcw
dec
cmp
int
out
mov
mov
movq
or
push
mov
nop
movsb
mov
and
and
xchg
add
cli
jmp
add
adc
test
jmp
loopne
jo
pusha
loop
mov
sbb
jbe
dec
mov
movsw
sub
jb
pushf
jmp
xchg
jae
cmc
iret
add
mov
mov
out
iret
out
cmp
aam
lds
fnstenv
mov
jno
fisubrl
enter
push
ja
push
dec
jb
add
dec
movl
fcomp
test
xor
loopne
loop
aam
das
cmp
lret
das
lock
int
push
cs
outsl
push
addl
fisubl
xchg
gs
mov
xchg
push
nop
xchg
and
xchg
inc
dec
xor
aad
cmp
inc
fbld
push
out
jnp
adc
mov
xchg
clc
adc
pop
ss
lock
rorb
push
out
arpl
cmp
push
xchg
adc
adc
inc
aad
rdtsc
sbb
loop
shufps
iret
lods
imul
fmul
popa
out
ljmp
adcl
outsl
adcl
sub
xchg
cli
leave
or
aad
jne
xor
cmp
fimuls
xor
cmpsl
jbe
jbe
dec
test
add
and
int
dec
iret
sbb
mov
mov
jns
lcall
inc
dec
adc
xlat
repz
and
fidivs
mov
pop
divl
xlat
les
sub
icebp
cltd
call
xchg
inc
mov
dec
iret
test
adc
dec
negb
imul
insl
mov
dec
push
push
jl
xchg
push
mov
les
dec
stos
repz
mov
in
add
call
insb
leave
mov
enter
enter
xor
loope
fcoms
pushf
pop
repnz
bound
cmc
je
adc
or
in
or
ret
mov
xor
mov
add
xchg
icebp
mov
movsb
xor
repnz
lret
lret
aam
dec
lea
sub
js
and
xchg
lods
test
push
add
idivl
loopne
sbb
out
push
xchg
pushf
or
ss
lret
cwtl
sbb
xor
ss
xchg
out
add
sti
inc
ret
outsb
push
shrl
scas
cs
cmp
dec
push
and
mov
repnz
mov
pop
push
or
repz
lods
jmp
inc
jo
mov
loopne
mov
pop
pop
popf
pop
out
inc
shlb
lock
out
xchg
imul
and
cltd
add
enter
cmp
push
jge
xchg
jle
movsl
push
fdivrl
sbb
xchg
mov
jnp
add
pusha
repz
rcll
sbb
aas
pop
pushf
or
push
std
xor
sub
cmc
xchg
test
mov
int3
ss
fmull
adc
adc
xchg
xrelease
dec
leave
repnz
stos
and
push
nop
testl
push
push
test
push
jg
xor
js
xchg
xchg
or
mov
test
cli
arpl
lret
arpl
cmp
push
pop
jbe
xor
xchg
jo
test
test
sbb
mov
mov
adc
insb
pop
sbb
mov
cmp
call
stos
mov
mov
sbbl
jnp
add
les
xor
push
call
xor
out
push
cmpsb
push
cmp
stos
imul
pop
jno
pop
sahf
push
mov
popa
test
sbb
fsts
dec
out
pop
push
cmp
loope
jnp
mov
fldcw
mov
cmpb
ss
xchg
pop
push
fs
mov
xchg
mov
mov
insb
insl
jbe
icebp
jg
inc
adc
push
les
push
insb
cmp
jno
pop
in
mov
ficoml
jae
sbb
idivl
jno
dec
jb
mov
in
pusha
in
push
fidivl
cmpsl
xor
cmp
push
lods
fimuls
jno
adc
gs
cmp
sbb
xor
out
cltd
or
or
add
js
xchg
into
jno
imul
ret
dec
test
pop
out
out
jo
lea
lret
insl
jo
dec
adc
les
pop
addr16
ja
icebp
repz
mov
mov
jg
mov
cmp
and
inc
jno
xor
cli
aam
out
lea
ret
jnp
mov
push
xor
mov
cmpsl
insb
add
cwtl
mov
movsl
jmp
pop
ss
push
mov
sbb
jbe
test
mov
xchg
ljmp
test
push
inc
test
sub
daa
je
outsb
pop
jae
lods
inc
icebp
mov
inc
jae
sbb
in
js
in
push
enter
mov
notb
lahf
test
test
mov
jg
inc
dec
sbb
xlat
or
aaa
loope
les
push
mov
or
pushf
push
cmp
insb
xor
test
fdivl
stc
push
call
mov
jno
push
and
cmc
test
xor
xchg
loopne
jl
decl
rorb
test
fildll
notl
mov
or
dec
sbb
fnsave
arpl
pusha
sbb
test
and
je
pop
jnp
fildll
rclb
mov
push
out
mov
insb
loope
mov
cmc
cmpsl
and
lds
jo
add
ja
sbb
pushl
lock
scas
aas
push
dec
jecxz
in
jb
pop
jno
dec
jnp
jl
jb
ljmp
lret
push
add
iret
and
or
jecxz
std
sbb
push
mov
or
jno
mov
and
inc
push
mov
mov
popl
iret
xchg
xor
orb
ret
cmp
loop
lods
mov
hlt
sub
push
mov
jno
dec
jle
push
or
push
pop
jmp
cmp
mov
and
enter
inc
sqrtps
scas
clc
inc
es
aam
pop
mov
shlb
mov
cmpl
or
add
jno
xchg
movsb
dec
cmp
ja
jae
orb
mov
pop
sub
outsb
gs
call
jbe
imul
mov
sbb
mov
sbb
lea
sub
ss
fstps
cmpsl
and
mov
cmp
rorb
or
jg
push
repnz
les
mov
icebp
xchg
int
cmp
cmp
mov
push
push
or
jno
push
jp
lret
jo
add
mov
xor
ss
jne
inc
mov
jmp
and
ret
cmc
lds
xor
ja
inc
jg
jbe
add
iret
push
jne
shr
push
ret
aaa
mov
xchg
jno,pt
push
jge
cmpb
jmp
fstpt
mov
stos
sub
jmp
or
push
test
lcall
stos
ja
cwtl
sti
jl
mov
push
add
data16
ds
sbb
sub
iret
popa
dec
divb
pop
repnz
repnz
cmp
mov
mov
out
sbb
fmul
mov
and
fldenv
xor
addr16
pushf
xor
mov
stos
xchg
pop
mov
shll
dec
clc
cmp
fsubrp
mov
adc
out
fdivr
mov
ds
rclb
aas
sub
xor
dec
aas
popa
rcrl
mov
ss
dec
js
call
push
arpl
jae
push
and
cmpsb
mov
pop
aas
out
rcrl
into
sbb
mov
pusha
inc
lcall
loope
call
int
hlt
cmp
sub
ror
add
mov
pop
lahf
stos
cmp
fcoml
jnp
in
and
mov
cld
xor
pop
out
cmp
dec
testb
mov
or
xor
mov
icebp
pop
rcl
inc
in
and
xlat
stc
jmp
mov
xchg
mov
or
xchg
in
or
xchg
adc
addr16
pop
jb
dec
fsubs
adc
int3
jge
mov
sbb
pop
xor
adc
and
adc
mov
pop
dec
je
jmp
dec
xchg
lahf
mov
or
sub
push
push
call
outsl
daa
adc
ds
popa
cmp
fidivrl
push
test
add
cli
cmpl
test
mov
pop
enter
test
fidivl
sub
jge
mov
push
clc
cli
icebp
loopne
js
push
insb
pop
test
add
xor
and
xchg
jecxz
shll
inc
xor
test
push
mov
aaa
movsb
xchg
stos
int
xchg
cmc
nop
into
or
jb
cmp
mov
test
adc
mov
xchg
adc
xchg
shr
rorb
rcr
adc
sbb
out
pop
adc
outsb
pop
test
xchg
mov
les
bound
int
sbb
xor
cmp
into
mov
mov
in
aaa
imul
mov
into
jb
cld
cmp
pop
xchg
adc
in
sub
inc
mov
sbb
cli
adc
mov
mov
push
rorl
push
inc
test
mov
cmp
mov
push
ret
cwtl
mov
adc
popa
adc
mov
cmp
mov
sbb
repz
jg
imul
adc
adcb
dec
scas
xor
push
jbe
mov
idivl
mov
xchg
jp
lods
cmpsb
dec
stc
fbld
iret
stc
add
adc
cli
and
shll
mov
in
and
in
sub
fnsave
out
aaa
in
call
loopne
fs
cs
xchg
loope
and
rcrb
mov
fstps
and
push
ljmp
pushf
adc
popl
inc
loope
jl
ja
and
and
ss
fildll
add
fidivrl
in
movsl
mov
pop
fcmovnu
sub
xor
mov
addb
imul
sub
mov
pop
sahf
rcr
mov
or
jne
stc
cmp
push
xchg
data16
mov
push
mov
xor
mov
sbb
ret
lahf
xor
loopne
sub
bound
mov
rorl
inc
and
xchg
adc
bound
daa
lret
sbb
lods
out
push
lds
push
cld
scas
fdivl
mov
cltd
das
outsl
mov
inc
push
mull
xor
mov
data16
enter
icebp
leave
mov
push
mov
lcall
loopne
push
pop
fbstp
adc
fdivrl
es
fcmove
mov
rcl
mov
and
ds
xchg
roll
lcall
sub
in
or
jnp
inc
cmpl
shll
jb
jecxz
ds
in
ds
imulb
bound
aaa
enter
mov
cltd
data16
cmp
cwtl
cmp
jp
ja
inc
fildl
movsb
cs
add
dec
test
cli
shlb
aad
cmp
popf
and
ret
rcrb
gs
mov
cmpsb
outsb
pop
out
mov
jl
mov
or
jmp
imull
xchg
insb
inc
pop
xchg
inc
inc
pop
ret
dec
js
mov
out
mov
sbb
arpl
imul
loop
cmp
mov
sti
pop
pop
push
je
mov
cmp
rorl
mov
fcompl
and
movsl
xchg
jae
xchg
dec
mov
divb
rolb
bound
add
filds
lret
lock
unpckhps
js
aad
test
ret
lahf
mov
mov
push
int3
sti
cmp
nop
xchg
jle
push
test
ficompl
out
fsts
pop
ss
cld
inc
ja
adc
mov
mov
cli
stos
jo
ret
mov
xchg
adc
stos
lahf
fistpl
aad
bound
push
fwait
bound
fcoms
mov
xorl
fxch
jecxz
adc
mov
push
aaa
repnz
fwait
inc
lock
stos
sbb
xchg
cmp
cmp
mov
push
pushf
test
ss
xlat
je
cmp
adc
jbe
add
mov
pop
loopne
xchg
add
sub
bound
lods
and
mov
inc
stc
orb
mov
cmp
mov
push
mov
sub
repz
jbe
jo
mov
pop
sbbb
or
dec
xchg
inc
pop
loopne
xchg
roll
lret
test
std
mov
movsb
xchg
fwait
jmp
les
sti
ficompl
dec
mov
cltd
js
mov
push
inc
mov
sbb
xorl
inc
adc
mov
mov
lret
ja
loopne
aas
imul
mov
mov
mov
cmpsl
pushf
push
push
nop
sub
push
push
out
or
mov
addr16
mov
aam
jne
lock
shl
cmp
push
pop
adc
jo
movsl
mov
std
ja
das
xchg
sbb
test
fldcw
cmp
shr
bound
sahf
sub
pusha
sub
mov
adc
fidivl
push
xchg
leave
clc
jae
mov
je
rclb
mov
cmp
cld
mov
dec
and
mov
sti
dec
push
xchg
addb
orb
jno
lcall
sbb
lahf
adc
fists
lret
test
imul
jecxz
or
mov
inc
repnz
dec
adc
imul
pop
push
scas
adc
ds
jecxz
es
mov
dec
mov
rorb
loope
adc
iret
add
jne
jbe
xlat
mov
lret
jp
pop
pop
push
call
inc
mov
xchg
std
jl
out
fwait
mov
std
aam
ficoml
shrb
pop
add
outsb
dec
fnstcw
js
ret
xchg
shl
test
pop
sahf
inc
lods
dec
and
push
stos
mov
pop
insb
mov
cld
scas
aam
dec
jno
add
mov
loopne
rcrb
ret
shlb
adc
cmp
xor
fs
stos
xchg
jmp
lods
lods
mov
inc
fcomip
push
mov
repnz
sti
push
arpl
mov
shr
xchg
les
call
pusha
push
xchg
jmp
js
or
sbb
or
lret
fsub
jns
jae
dec
dec
mov
scas
test
mov
lea
lcall
push
inc
or
call
add
xor
enter
dec
cli
loope
scas
mov
fnstcw
stos
push
orb
addr16
int
pop
sbb
mov
cltd
dec
in
inc
leave
adc
mov
fdivrl
fisubl
push
inc
xor
outsb
mov
mov
cs
pop
jae
mov
or
addr16
push
insl
fimuls
xor
push
in
in
ss
addr16
cmp
stos
js
pop
pop
dec
mov
aaa
daa
push
pop
roll
pop
cmp
cmp
xchg
fiadds
and
movsb
aam
lods
cs
fistpl
das
pop
sti
cltd
push
sub
mov
dec
decl
orb
sub
subl
and
test
insb
movaps
xchg
je
jbe
js
mov
adcl
push
daa
fdivr
or
jg
mov
inc
in
pop
in
mov
vmaxps
pop
jle
sbbl
jo
movsl
jecxz
push
sar
push
daa
test
inc
cmp
insb
pop
mov
push
cmpb
sbbl
push
adc
fnstenv
pop
mov
aad
add
cmp
pop
push
mov
xorb
cmp
mov
fs
les
sbb
les
xorb
xchg
adc
lods
mov
mov
adc
mov
loopne
and
push
in
mov
inc
cmc
cwtl
stc
jl
mov
loopne
xchg
repnz
jg
decb
push
lock
and
xor
xor
and
sub
cmp
shr
xor
xchg
out
aam
push
dec
ret
push
cmp
sti
xor
push
cmp
notl
repnz
fldcw
ss
adc
sbb
push
cmpsb
mov
jmp
push
jg
inc
ja
xchg
fwait
or
jo
popa
cmp
inc
push
mov
fwait
lret
and
cmpsl
sub
pop
mov
outsl
push
ja
dec
or
insl
fdivrl
movsl
add
stc
mov
hlt
outsl
push
mov
jecxz
inc
push
xor
xor
mov
push
imul
xchg
fcmovnb
push
xchg
add
std
push
inc
xchg
ret
sub
push
pop
dec
psrld
shll
jp
je
adc
cli
stos
sub
arpl
dec
dec
sbb
mov
push
xchg
jae
data16
xchg
push
jb
popa
and
sbb
imul
sub
xor
push
stc
mov
sahf
sub
add
out
dec
js
insb
xchg
or
adc
mov
add
push
dec
in
push
and
xchg
adc
test
mov
inc
cld
imul
push
inc
fistpl
push
inc
mov
jle
cmp
mov
xchg
bound
mov
lcall
mov
neg
je
sti
sbb
outsb
and
sub
lock
mov
jge
jecxz
xor
push
cmp
add
cld
shr
addr16
jb
pusha
adc
scas
dec
mov
mov
scas
sub
adc
mov
shll
cld
xlat
jecxz
rorl
dec
dec
xchg
lods
jbe
mov
jno
add
mov
adc
out
mov
int3
popa
test
add
mov
out
daa
subb
cmp
cmpsl
insl
push
jnp
and
xlat
lea
push
cld
pop
popa
xlat
ret
cmpsb
addl
pop
pop
sub
pop
test
push
shll
inc
imul
push
lds
jnp
mov
cmp
mov
outsl
aad
test
dec
inc
cmp
xlat
dec
pop
test
or
out
mov
subps
dec
push
cmp
arpl
cwtl
lods
les
sub
aaa
in
loopne
xchg
pop
xchg
jmp
xor
fsubrp
mov
stos
ret
dec
cmpxchg
jbe
or
repz
insl
add
inc
inc
mov
cmp
inc
push
jmp
pop
out
mov
push
mov
xchg
jle
xchg
popf
jae
loope
and
test
ljmp
mov
cmpsl
sub
and
and
shlb
dec
xchg
mov
xchg
jp
xchg
imul
in
inc
mov
and
jae
lods
movsl
jnp
les
sub
jl
bound
shrb
mov
jno
notb
push
stos
and
push
loope
mov
xor
popa
sbb
cmp
xor
adc
dec
and
mov
shll
mov
mov
cmp
jae
push
in
cld
dec
jae
orl
fwait
mov
or
xor
jbe
mov
adc
leave
ret
out
push
inc
movq
jno
mov
stos
int
pop
pop
orl
std
xchg
lcall
fistpl
dec
out
das
sbb
jns
mov
mov
mov
cmpsb
and
or
push
test
mov
je
ret
and
mov
xchg
call
inc
popf
fmuls
or
lods
inc
outsl
andl
xchg
lret
and
faddp
stos
sahf
sbb
and
mov
mov
push
scas
orl
mov
xor
in
add
outsl
pop
out
rorl
jmp
jo
shlb
orl
jo
mov
imul
xor
lret
mov
bound
mul
mov
and
jmp
mov
push
sub
test
pop
mov
and
jne
int3
incb
loopne
jle
imulb
flds
aam
push
scas
push
xchg
mov
popa
mov
sbb
push
clc
cmp
fsubp
lahf
out
xchg
movsl
push
stc
lahf
cmp
in
aam
jb
dec
pxor
sahf
mov
mov
sbb
orl
mov
dec
sub
dec
lock
roll
jbe
shll
push
jg
ret
push
pop
jg
push
pop
in
cs
mov
mov
cltd
scas
dec
mov
int3
and
repz
jp
in
adc
lret
dec
mov
xchg
push
repz
add
push
je
aad
arpl
jmp
inc
and
std
xor
fldl
cmp
cmp
sti
rorl
jb
mov
in
fadd
lods
jns
xchg
lods
xchg
adc
enter
pop
je
push
jmp
notl
imul
nop
and
push
inc
inc
adcb
ret
imul
or
lret
jg
or
shl
pusha
xor
adc
inc
pushf
loop
lahf
ss
aam
jge
popf
sub
repz
icebp
test
mov
sub
or
mov
jb
inc
inc
xchg
int3
lret
inc
lock
sbb
divb
in
mov
and
ss
pop
xor
jmp
xor
adc
mov
pop
es
jns
mov
or
in
popa
or
push
add
daa
and
mov
add
cmpsb
sub
imul
stc
jo
insb
rcrl
mov
es
shrl
fwait
outsb
scas
adc
push
test
mov
push
pop
adc
scas
xor
fldt
mov
jo
in
adc
lock
xor
sbb
test
gs
cs
mov
mov
adc
mov
imul
inc
jo
mov
sbb
xchg
mov
movsb
lret
inc
mov
xchg
push
xor
jge
xor
cwtl
scas
jle
out
sub
clc
out
adc
or
mov
cli
inc
mov
mov
dec
jns
rclb
inc
rolb
sub
dec
pop
cmpsl
movb
roll
push
dec
mov
jp
mov
outsb
and
icebp
cmp
pop
xchg
shlb
lds
or
mov
jno
fsubrs
fcoms
je
ss
mov
mov
ljmp
or
fimuls
cmp
xlat
insl
cmpsl
sar
add
and
stos
fsubrs
loopne
ss
mov
sub
in
aam
sbb
pop
sahf
or
sbb
outsb
cwtl
cwtl
pop
push
out
subl
das
inc
mov
inc
aad
xchg
push
or
inc
xor
inc
push
loop
inc
cmp
pop
cmp
cmpsb
sti
or
or
cmp
imul
in
idivl
pop
sub
mov
loopne
sub
pop
mov
mov
dec
mov
xchg
dec
pop
mov
stc
inc
mov
roll
cltd
sub
fisttps
jnp
pop
lods
sbb
push
std
out
dec
loopne
adc
or
jbe
call
loop
imul
xchg
and
andb
enter
lret
and
xchg
fisubs
inc
dec
lods
pop
adc
aad
xor
rclb
or
push
push
mov
xchg
inc
cmp
fistpl
testl
iret
pop
xchg
xchg
mov
sbb
jae
sub
jne
mov
add
inc
xchg
inc
arpl
stc
push
pop
mov
inc
sub
mov
cmc
loopne
pop
scas
mov
stos
and
test
mov
add
inc
mov
sub
test
push
std
push
das
cmp
rorb
rcl
lock
inc
test
ja
cltd
divb
cmp
push
xchg
ja
mov
ret
ja
mov
jae
sahf
stos
and
loop
sahf
sub
jne
push
jecxz
inc
fiaddl
movsb
jmp
test
xchg
xor
shl
sbbb
jmp
sbb
cli
push
add
and
cmpsl
add
sbb
adc
xchg
xchg
cmp
jmp
fcomps
adc
rcrb
mov
decl
cld
shrb
call
imul
jle
sub
adc
lahf
sahf
ss
loop
push
sbb
lock
loop
dec
add
mov
ss
mul
lods
mov
cli
mov
push
mov
out
bound
enter
fst
push
es
dec
out
xorb
aas
sub
pop
dec
jb
sbb
jecxz
testl
push
push
sarb
test
add
inc
into
sbb
adc
test
lock
pop
rcl
fwait
sbb
dec
std
push
insb
push
clc
pusha
mov
outsl
into
shrb
fucomi
out
push
out
add
pushl
mov
pushf
fwait
pop
orb
jo
cltd
sbb
xchg
push
sbb
xchg
pop
cmp
pop
sbb
push
xchg
xor
imul
icebp
mov
pop
popf
movsl
push
xchg
xchg
push
cmp
loopne
sub
loope
sub
lcall
add
xchg
sarl
icebp
pop
test
inc
jp
add
dec
call
jle
outsl
push
xor
xchg
data16
sub
bound
pop
loop
and
or
mov
stos
lcall
and
xchg
jmp
negl
pop
xor
mov
jecxz
cmpb
mov
cmpsl
inc
fists
stos
cmp
pop
lahf
popa
push
mov
fsubp
sub
pushf
add
cmp
cltd
sbb
cwtl
add
or
out
or
pop
call
test
ss
test
outsb
dec
clc
and
enter
pop
std
call
cmp
mov
or
sbb
xchg
imul
adc
mov
jbe
push
mov
mov
pop
and
popf
jmp
cwtl
mov
pop
mov
xor
mov
xor
and
arpl
jnp
movsb
inc
sbb
shrb
xor
notb
mov
push
test
xor
bnd
and
cmc
out
loop
aas
in
lds
or
cli
cmpsl
aas
mov
pop
aaa
mov
jbe
out
fidivrl
ss
mov
iret
iret
aas
cmp
les
mov
movsl
sti
js
and
pop
dec
repz
sti
add
mov
cmp
jg
xchg
dec
mov
sbb
push
adc
sti
shrb
mov
insb
adc
pop
xchg
les
orl
jnp
out
insb
mov
jge
cmpsl
ljmp
pop
loop
dec
clts
mov
push
imul
out
enter
call
inc
fwait
xchg
sti
cmp
xor
iret
dec
sbb
xor
xchg
mov
sub
mov
mov
sahf
test
repz
adc
out
inc
cmp
cmpsl
or
or
jmp
data16
sbb
ja
dec
jg
shlb
popf
in
aas
cmp
mov
sub
jae
aaa
pushf
loopne
stc
out
jp
xchg
bound
dec
sbb
sarb
inc
mov
sbb
les
jns
movsb
divl
add
popf
xchg
fstpl
dec
or
int3
loop
sti
and
xchg
add
add
or
daa
sub
andb
cmp
cwtl
cmp
cwtl
repz
jne
dec
mov
cmp
cmp
ret
dec
sub
jg
pop
and
pop
mov
cltd
enter
es
movsl
out
shrb
mull
clc
nop
fdivs
xchg
xlat
les
mov
sub
scas
sar
inc
sahf
rcll
sub
cltd
shll
adc
leave
cmpsb
daa
sti
mov
ds
ds
pop
cmc
sbb
movsb
into
hlt
adc
xor
scas
add
and
dec
cli
stos
sub
xor
aad
repz
int
aaa
push
ss
shlb
inc
dec
in
mov
and
sbb
fcomi
leave
idiv
mov
jno
xchg
ja
or
push
push
stc
lock
je
mov
ljmp
adc
fildll
sbb
call
add
and
mov
mov
jno
sbb
inc
and
adc
in
in
adc
jle
inc
xchg
gs
mov
cltd
in
lcall
adcl
mov
cmp
cmpsl
sub
icebp
subl
adc
cmp
loopne
ja
mov
jnp
andl
mov
push
out
rcll
lret
jo
jno
inc
lahf
mov
jo
nop
xchg
push
sub
das
adc
daa
sub
push
and
mov
xor
adcl
rcrl
sbb
ret
bound
or
dec
jbe
inc
pop
xchg
sbb
mov
adc
inc
dec
mov
aaa
movsl
or
push
inc
mov
dec
sbbl
addb
xchg
sub
sbb
shll
inc
push
xacquire
and
pop
xchg
sbb
cmp
cld
sbb
mov
rcl
fstps
adc
sub
mov
mov
sti
mov
jno
mov
fprem
adc
and
js
icebp
and
inc
jbe
popa
mov
cmp
sti
pop
sbb
loope
jb
mov
adc
mov
adc
inc
mov
adc
fisttpl
push
push
or
xor
out
ret
and
jmp
aas
je
mov
mov
test
adc
sbb
imul
ja
cmp
sbb
sti
mov
sbb
in
insb
push
adc
int3
es
pop
or
pop
push
popf
sub
adc
call
pop
cs
loop
pop
in
aam
mov
cmc
loop
cmp
jle
cmp
jnp
int
jecxz
neg
aad
jno
and
imul
dec
dec
cmp
pop
jecxz
jae
pop
ds
dec
mov
loope
out
aad
mov
cli
idivb
dec
cs
pop
mov
fsubrs
xor
pop
ss
out
push
aad
aas
test
mov
and
popf
aas
aam
out
call
or
adc
xchg
lods
mov
stos
sti
mov
fcoml
movsl
ss
adc
rorl
adc
xlat
std
jns
rcr
xorl
pushf
fcoms
ja
cmp
inc
mov
into
pop
sbb
jge
sarl
fnstsw
jb
testb
hlt
dec
pop
dec
out
dec
popf
mov
aas
jo
xor
jg
inc
sub
scas
rcrb
cmpsb
and
mov
fistpl
mov
aas
icebp
aas
push
mov
fsubrl
subb
xlat
insl
add
and
test
mov
and
cmpb
cld
popa
add
dec
loopne
mov
lods
fldl
gs
icebp
sbb
dec
imul
std
pop
fsubl
cmpsb
push
js
cli
add
dec
push
repz
pop
data16
xchg
inc
inc
add
out
fsts
xor
or
xor
mov
popf
jo
stos
mov
aas
xchg
pop
xorl
sahf
adc
cwtl
cmp
mov
popa
inc
orb
push
and
popf
cmpsb
lds
lret
das
or
popa
jecxz
jge
lahf
mov
sbb
pop
inc
mov
jp
mov
incl
push
cmp
bound
fists
fwait
imulb
mov
xchg
das
xchg
pop
mov
dec
loop
xchg
pop
xor
nop
loop,pt
jnp
xchg
fcoms
sbbl
push
mov
cmp
cmp
bound
testl
notb
or
xor
stos
loop
nop
mov
pop
xchg
push
mov
pushf
aaa
sahf
fwait
pop
shrb
xchg
neg
iret
pop
pop
add
mulb
pop
repz
xor
xchg
roll
lcall
loop
xchg
push
aaa
dec
jle
jae
lret
jg
cli
jle
mov
inc
sti
xchg
loop
xchg
jle
mov
fwait
aaa
rorb
jnp
dec
jne
ds
stos
pop
jnp
iret
clc
ljmp
adc
inc
xor
sub
adcl
cmp
bound
aad
xor
pop
mov
xchg
sbb
push
scas
sti
jle
mov
fwait
outsl
shlb
cmp
and
push
adc
cmpsb
xlat
pop
sub
push
xor
inc
sub
mov
out
pop
fiaddl
fwait
lock
push
mov
dec
xchg
cmpb
and
mov
sti
add
sbbl
cmpsl
sti
es
ljmp
pop
ret
inc
pop
xor
xchg
aas
xchg
cli
cmpsb
mov
pop
loop
xchg
ds
repnz
jo
jae
rcrb
cltd
push
fistl
push
out
cmp
mov
and
xchg
mull
pop
pop
scas
add
mov
mov
xchg
aaa
push
fwait
jecxz
sub
xchg
push
arpl
cmp
adc
add
inc
pop
xor
xchg
aas
xchg
cli
cmpsb
mov
pop
push
xchg
sti
es
xchg
or
fimull
sub
cmp
outsl
add
shlb
xchg
mov
push
scas
mull
pop
jmp
aas
div
pop
inc
inc
fwait
xor
mov
fwait
xchg
shrb
lcall
out
pop
cmp
cmp
idivl
outsl
pop
mov
dec
ja
sti
lret
xchg
cmpsb
aaa
jb
fwait
repz
sub
xchg
into
cmp
popa
nop
ljmp
jnp
iret
bound
mov
inc
xchg
outsb
cmp
negl
pop
addl
cld
mov
aaa
adc
fwait
rol
daa
negl
jmp
and
xchg
push
cmp
push
out
sub
imul
jb
andb
cmp
and
push
div
or
dec
dec
repnz
scas
loop
xchg
mov
pop
iret
fwait
pop
shr
aas
lcall
imul
xchg
aaa
sub
sbb
xchg
movsbl
jb
xchg
sti
mov
inc
aaa
xchg
mov
arpl
test
xlat
imulb
pop
incl
xor
xchg
xlat
dec
cli
sahf
mov
xor
lret
xchg
ret
inc
inc
jno
xchg
into
cmp
and
push
divl
psadbw
pop
das
inc
jecxz
xor
mov
push
sbbl
push
mov
cmp
cmp
xchg
push
cmpsb
idivl
pop
testl
arpl
add
push
addr16
mov
lcall
sti
scas
cmp
mov
arpl
imull
inc
pop
xchg
add
mov
inc
aaa
imul
lcall
pop
xchg
pop
popa
out
xchg
and
repnz
push
fiaddl
ss
mov
rol
pop
sbb
out
mulb
pop
testl
inc
cli
xchg
mov
or
fisubrl
dec
jp
mov
mov
loop
xchg
outsb
aaa
mov
sti
ss
lcall
mov
jg
mov
pop
pop
fildl
xor
xchg
iret
cli
mov
sub
xchg
xchg
sub
scas
fwait
jg
dec
pop
jno
xchg
idivb
push
and
push
push
mov
psadbw
pop
das
inc
jecxz
aaa
xchg
xchg
cli
into
mov
loop
lock
push
cmpsl
sbb
stos
popa
jp
mov
pop
and
mov
popl
inc
negb
xor
inc
pop
aaa
cmp
mov
pop
rcrl
push
sbb
xchg
and
into
and
push
xchg
ljmp
mov
mov
aaa
push
fisubl
fadd
daa
inc
mov
dec
addr16
mov
scas
sub
rorb
cmp
ret
arpl
ja
aaa
test
das
imul
test
sbb
jo
clc
jge
pop
shlb
mov
lods
lock
pushf
xchg
push
mov
fdivp
adc
je
mov
dec
push
and
hlt
fists
xor
mov
lret
sar
pop
cmp
loope
popa
out
jb
roll
imul
iret
jmp
pop
pop
sbbb
addr16
and
cmp
inc
sub
stos
inc
and
add
loop
or
repnz
sbb
outsl
xchg
andl
jns
ljmp
std
loopne
xor
jge
nop
test
cmpsl
pop
fisubrs
cmp
xchg
sbb
pop
shl
jmp
xchg
negl
inc
call
sbb
mov
cmp
push
add
ret
and
xchg
mov
mov
mov
idivl
in
arpl
fcompl
mov
das
inc
adc
push
cmp
cmp
sub
out
arpl
add
in
loope
outsl
add
and
push
popa
sbb
xchg
inc
lahf
test
fwait
movsb
fwait
or
lret
xor
orb
pop
inc
pop
dec
data16
ss
adc
xchg
dec
inc
xor
adc
push
pop
jmp
push
xlat
mov
inc
pop
loop
push
push
dec
xchg
out
cmp
inc
pop
outsl
lcall
sarb
outsl
jmp
xchg
mov
testl
test
xor
scas
in
data16
sbb
cmp
cli
mov
ds
add
or
sar
pusha
jbe
aam
lahf
aad
imul
aaa
popa
mov
mov
out
test
out
dec
and
xchg
mov
mov
inc
addl
mov
ret
lret
and
and
aaa
pslld
push
cmp
insb
sub
add
loopne
push
loopne
mov
pop
pop
or
cmpb
jae
icebp
inc
sbb
fwait
and
imul
adc
jp
scas
imul
pop
inc
sbb
pop
and
adc
aaa
jle
mov
aas
in
mov
xchg
inc
in
sbb
imul
or
add
mov
sbb
fisubrl
adc
arpl
cli
loope
sahf
mov
mov
out
xchg
lods
lock
lcall
inc
rorl
xor
fisubs
scas
push
pop
cmp
adc
cmpl
push
jmp
pop
sbb
fstpt
cmpsl
pop
out
sti
mov
push
fdivrl
icebp
pop
movsb
aad
out
daa
or
dec
subl
push
fidivrs
mov
jl
aaa
imul
mov
stc
popl
hlt
cmp
fcmovnb
subb
and
leave
adc
pop
push
and
fwait
std
fsubp
xchg
cmc
mov
pop
loope
fdiv
out
dec
out
arpl
pop
gs
cli
ss
jle
jecxz
xchg
in
push
inc
jecxz
stc
pop
pusha
xchg
inc
push
mov
inc
dec
and
ss
sarl
fucom
dec
outsl
mov
pushl
cli
xchg
add
aas
lret
cmc
movsb
imul
movsl
ficomps
cmp
adc
push
mov
or
mov
dec
mov
pushf
cmpsl
sbbb
push
xchg
push
cmp
or
sbb
jne
mov
adc
sahf
xor
pop
pop
cmp
imul
into
in
ds
add
adc
mov
in
or
fwait
cmp
and
mov
mov
add
imul
fstps
push
push
xchg
push
loope
jbe
jmp
sbb
imul
and
outsl
pop
sub
fwait
push
jle
sub
loopne
es
inc
mov
mov
lds
sbbl
jecxz
and
fsubrl
or
subb
push
adc
add
mov
clc
xchg
cmp
sti
stos
loopne
out
aad
fucomp
test
add
fwait
movsb
pop
xchg
out
mov
js
sbb
fnstsw
lret
movsb
mov
inc
push
sbb
push
outsl
and
pop
dec
mov
arpl
lret
lock
inc
test
or
fisttpll
filds
test
incl
cmp
test
cmp
sti
stos
cmpsl
imul
aaa
in
into
loopne
xor
or
dec
dec
sbb
and
lock
popf
add
cmp
incb
rcll
xchg
outsb
ljmp
mov
mov
push
test
and
xchg
mov
or
icebp
push
inc
dec
inc
mov
lret
mov
sbb
cmp
cmp
lcall
or
cmp
out
jg
adcb
pop
mov
hlt
pop
adc
xchg
adc
pop
sahf
test
dec
mov
and
jg
or
cmp
lock
inc
pop
or
push
aaa
ljmp
out
lret
inc
loop
pop
inc
lea
push
test
mov
mov
repnz
das
jle
mov
pop
in
ljmp
cli
mov
loopne
dec
inc
mov
cmpb
xchg
cmpsl
and
loope
sub
cmpsb
push
rcl
test
inc
arpl
out
xchg
lock
push
lcall
out
idiv
xchg
xchg
pop
call
cwtl
out
or
xchg
pop
out
pop
inc
int3
add
and
int
leave
mov
inc
add
push
and
and
xor
adc
inc
out
lret
mov
int3
in
arpl
es
scas
in
imul
push
xchg
push
jp
or
xchg
imull
fidivl
ljmp
adc
fisubrs
jmp
mov
mov
sti
daa
xor
subb
xor
ja
cmp
sbb
leave
dec
push
inc
xor
inc
out
mov
inc
inc
push
inc
loopne
push
scas
push
repnz
cmc
cmpsb
lea
xchg
mov
dec
cmpb
mov
or
inc
adc
mov
add
mov
and
divb
cmp
lcall
aaa
xor
aam
or
inc
xor
loop
cmp
negl
jo
xor
addr16
leave
mov
lock
subl
jns
push
ret
push
cmp
adc
addr16
ja
aas
xchg
cmp
in
adc
fcomps
idivl
cltd
cmp
xchg
mov
adc
int
movsl
mov
fisubrl
and
sub
adc
mov
jle
popa
xchg
xchg
add
mov
sub
clc
mov
sub
xchg
push
mov
cli
dec
bound
mov
scas
push
rorb
dec
lret
cli
pop
xor
cld
mov
in
shlb
leave
hlt
aas
arpl
dec
inc
lret
stos
cld
stos
sub
push
pop
and
inc
jg
push
cs
cmp
imul
sub
mov
leave
cmp
inc
jecxz
aas
cmpl
push
fimull
outsl
lcall
scas
xchg
imul
jge
fstl
inc
cmpsl
lcall
mov
in
inc
loope
push
mov
mov
loopne
xlat
jb
shl
mov
mov
pop
xchg
jb
cld
aaa
loope
repnz
dec
dec
fists
dec
mov
cmp
andb
and
jp
xlat
add
pop
ficomps
aad
and
test
dec
es
pop
mov
xor
push
push
adc
push
push
stos
testb
ds
dec
addb
xchg
mov
pusha
mov
pop
test
sti
icebp
push
aaa
adcl
subb
mov
lret
inc
rolb
mov
jecxz
push
jnp
inc
jne
outsl
pop
sbb
cmp
xor
push
push
inc
fadds
pop
movsl
stos
les
outsl
xor
daa
aad
mov
inc
loope
or
loop
jecxz
mov
jmp
ret
mov
and
rcrb
call
mov
or
add
dec
push
xchg
cld
out
popf
data16
stos
push
fists
loopne
shl
rcl
in
inc
jecxz
lock
xchg
mov
andb
mov
faddp
jmp
push
aam
or
shll
cld
sahf
and
xchg
fwait
std
mov
stos
push
out
and
test
aas
cmp
xor
lods
cli
mov
pop
pop
out
push
sbb
xor
jp
jle
popf
aaa
dec
jmp
push
arpl
lahf
push
cmp
lods
push
lcall
push
pop
sub
mov
es
pop
fldcw
and
inc
fstp
jmp
or
xor
dec
scas
pop
mov
xlat
aas
out
add
pushf
loopne
and
jecxz
sub
or
xchg
fucomp
xor
sbb
or
mov
xchg
nop
jecxz
push
mov
or
shl
mul
pop
ss
or
int3
add
pop
lret
cmp
and
cmp
in
push
aam
andb
xchg
mov
aas
mov
or
lds
and
cmp
dec
xor
xor
sub
mov
sbb
cltd
ret
enter
arpl
push
push
pop
push
ss
xchg
sbb
mov
sub
repnz
stos
sub
and
add
xchg
inc
fimuls
pop
repz
insb
mov
fistpl
into
dec
lods
sbb
xchg
xor
sti
mov
icebp
xchg
adc
cmpsb
gs
adc
mov
dec
sti
andl
mov
mov
fdivs
xchg
inc
push
test
rorl
mov
fiaddl
xchg
cs
push
mov
ret
inc
mov
std
mov
add
inc
stc
ds
xchg
add
test
ja
push
movsb
nop
sub
cmp
cld
or
testl
popf
adc
inc
daa
mov
cmp
pop
sub
sbb
mov
xor
repnz
inc
pop
fwait
xchg
cmp
cmp
cmp
xchg
jmp
andl
jecxz
mov
mov
add
push
inc
loop
add
jmp
jg
and
in
mov
mov
sub
inc
mov
or
xchg
xchg
aaa
cmp
push
inc
lret
lods
divl
cmp
jecxz
xor
or
ret
fucom
inc
sub
es
pop
add
ja
movsl
daa
add
stc
push
sub
into
data16
inc
jnp
dec
fs
repnz
inc
daa
ss
add
out
push
and
xchg
cwtl
in
pop
adcb
movsl
cmp
addr16
push
mov
jp
add
sub
std
cltd
adc
xor
inc
sti
mov
icebp
dec
ret
das
cli
inc
and
insb
and
xor
addr16
outsb
sub
leave
arpl
pop
pop
or
in
addr16
xchg
cmp
fcomp
or
xor
lcall
push
test
loopne
mov
loop
out
jmp
and
and
xchg
pop
ja
stos
pop
cmp
jmp
mov
sti
mov
sbb
xchg
pop
out
mov
xorb
cmp
pop
xor
imul
repz
ret
in
lcall
out
loopne
dec
stos
fs
stc
stos
xor
sti
xchg
push
push
or
jecxz
xor
repz
pop
fmuls
gs
pop
pop
mov
jle
cs
cwtl
add
arpl
add
jo
jecxz
aaa
repnz
pop
stos
pop
enter
es
jns
jnp
icebp
push
inc
scas
loope
stc
xchg
xchg
js
iret
lret
cli
jne
and
xchg
xor
hlt
mov
sbbb
xchg
inc
ret
pop
mov
xorl
das
lahf
and
dec
lods
pop
fs
push
bound
mov
fiadds
or
lcall
push
dec
loope
cwtl
aaa
bound
mov
push
inc
inc
fimull
pop
and
negl
adc
mov
inc
cltd
jge
test
push
xchg
pop
addr16
in
xchg
pop
mov
pushl
pop
sahf
mov
xchg
clc
adc
dec
xor
inc
push
int3
outsl
notb
lods
push
stc
cs
out
cmpsb
cmp
fcomps
dec
sbb
fucompp
stos
test
sub
sub
ret
pop
addb
mov
cmpsl
mov
cmpsb
inc
sbb
mov
fdivrl
jnp
mov
add
lret
xchg
xor
push
sub
flds
std
sbb
dec
fs
je
bound
testl
jno
push
push
jo
sub
sarl
popa
xlat
arpl
cli
sub
dec
xchg
mov
sti
lods
xor
lcall
hlt
outsb
mov
pop
popa
hlt
cmp
jnp
mov
pop
idivl
jmp
or
rcrl
mov
lret
xor
pop
ss
lea
jl
icebp
inc
data16
mov
es
mov
or
xchg
dec
fildl
scas
and
in
jo
mov
movsb
aaa
push
pop
cmp
ss
daa
pop
test
popa
add
jecxz
aaa
adc
ret
ret
xlat
fs
cmpl
nop
shrl
movsb
and
cmpsl
fldl
adc
mov
lea
aaa
mov
ficompl
sbb
mov
xor
pop
inc
out
addr16
and
int
pop
sub
add
push
add
test
mov
cmp
pop
aam
push
xor
lcall
mov
out
fld
fidivs
pop
fwait
sbb
icebp
pop
mov
dec
enter
pop
andl
sbb
push
sbb
push
fwait
leave
sbbl
pushf
inc
or
mov
fistpl
or
scas
scas
out
xor
xchg
cltd
mov
rorb
xor
jbe
or
int
mov
aaa
xchg
cmp
movsb
push
xor
scas
aas
inc
cmpsl
ret
xor
xchg
dec
xlat
lret
sub
dec
and
xchg
es
popf
ds
jo
roll
enter
orb
popf
pop
pop
pop
aam
push
rcrb
sbb
cmp
repnz
notb
xchg
sbb
out
or
jg
call
sub
out
test
test
pop
xor
pop
and
pop
xchg
jp
rcll
or
scas
inc
mov
mov
call
xchg
icebp
jg
push
mov
xlat
mov
out
icebp
pop
jnp
push
out
add
cmp
jb
xchg
add
pop
add
xor
scas
fstpt
outsl
mov
jge
pop
pop
pop
orb
jbe
or
cmpsb
sahf
jae
mov
in
ljmp
jb
pop
repz
push
addr16
outsb
in
xlat
xor
pop
cltd
jp
mov
test
jns
sti
imul
mov
aaa
daa
mov
mov
popa
mov
aaa
push
xor
arpl
pop
or
add
cmpsl
cmpsl
and
lods
test
inc
sub
jle
arpl
inc
arpl
cmc
mov
pop
addr16
add
or
xchg
push
sbb
cmp
push
out
inc
outsb
movsb
repnz
mov
lock
scas
cmc
out
dec
add
add
mov
stos
cld
xor
out
jecxz
push
jo
or
testb
jmp
inc
mov
seta
inc
stos
xorl
out
pop
daa
cltd
push
sbb
rcll
dec
int
cmpsl
xchg
jb
pusha
jl
dec
sbb
mov
lahf
jae
loopne
sbbb
loop
repz
sbb
jae
inc
add
add
sub
repnz
xchg
add
adc
mov
stos
pusha
cmpsb
xorb
xchg
shr
stc
outsb
jg
sbb
mov
jg
das
mov
xor
pop
dec
loop
lcall
testl
and
clc
add
adc
pushf
std
sbbb
ret
loopne
mov
pusha
mov
ja
out
into
or
xor
out
jge
push
fwait
push
adc
xchg
mov
mov
pop
cmp
out
mov
xchg
ljmp
xchg
clc
push
cmp
stos
inc
pusha
andl
lods
imul
or
stc
out
pusha
ret
dec
dec
repz
xchg
das
or
pop
daa
cli
fisttpll
dec
dec
jno
or
ja
push
fiadds
pop
shrl
mov
push
out
sbb
ret
stc
nop
mov
xchg
aam
mov
jl
jmp
sahf
or
cli
mov
jg
mov
cmp
insb
adc
and
push
imul
mov
fsubp
in
push
mov
mov
adc
pop
adc
mov
pushf
neg
sbb
cmpb
mov
negl
cmpsl
stc
js
repnz
popf
mov
sbb
mov
inc
data16
inc
lea
pop
adc
mov
xor
mov
mov
lcall
inc
add
adc
jbe
pop
es
shl
mov
push
ljmp
and
and
aam
dec
jecxz
mov
aad
jl
and
cmpsl
roll
lock
decl
jp
rolb
ret
cmp
cmpsb
add
jl
pop
pop
ret
xor
fdiv
addr16
ret
ds
pop
nop
add
cli
imul
mov
push
nop
fldt
and
push
sbb
out
inc
and
fwait
imul
mov
push
xchg
inc
arpl
xchg
loop
cld
rolb
push
xchg
mulb
jg
imul
push
sbb
mov
push
loop
out
or
repnz
push
push
add
ret
add
mov
jns
aas
mov
rcll
xor
pop
jno
inc
cmp
and
outsl
add
or
mov
mov
pop
push
jp
daa
jp
jae
jns
out
in
inc
push
cld
xchg
adc
icebp
xchg
aad
popa
mov
sub
popa
stos
cmp
movsb
adc
or
cmpsl
adcb
aad
sub
mov
faddl
jmp
pusha
cltd
pop
push
mov
insl
pusha
cmp
rorb
loop
faddl
mov
push
cmp
adcl
roll
shl
jl
xchg
insb
testb
ret
les
inc
fadds
push
add
stc
add
pop
mov
xor
add
add
pop
mov
test
mov
add
mov
sub
enter
js
es
test
test
arpl
pop
pop
push
inc
inc
pop
sub
inc
push
cmp
loop
pop
xchg
and
fstpt
fisubs
inc
push
sahf
and
out
and
push
and
push
into
notl
addr16
mov
add
cmp
ret
push
ficoml
jbe
or
icebp
xchg
mov
sbb
jnp
push
hlt
mov
jb
ficoml
idivb
ret
pop
ret
roll
dec
pushf
out
pop
mov
ljmp
mov
outsl
sub
xchg
addl
fwait
sub
rolb
sti
cmp
repz
push
enter
mov
xchg
test
cmp
loopne
mov
jne
movsb
ficompl
push
dec
xlat
jns
xchg
dec
in
in
mov
jo
cmp
out
and
inc
and
fwait
adc
sbb
rolb
cld
addr16
iret
pop
mov
pop
addr16
and
push
adc
push
sbbb
inc
sub
cmpsl
mov
aad
incl
dec
push
ja
out
jmp
and
sarb
out
cmp
out
lds
into
adc
push
sbb
push
jg
adc
cmp
sti
cs
and
pushl
adc
addr16
or
add
pop
push
sub
out
nop
cwtl
mov
nop
roll
fwait
pop
jo
mov
push
loopne
xchg
jno
xchg
inc
jp
fildll
nop
je
push
js
dec
ds
xlat
mov
jo
cli
mov
aas
test
mov
sbbb
aad
push
xchg
movsl
add
je
sub
cmpsl
bound
jbe
add
xchg
pop
daa
push
cli
neg
cltd
adc
and
jno
push
fwait
inc
dec
cmp
fs
pop
popa
aas
pop
xchg
mov
pop
jp
mov
mov
pop
out
mov
cltd
hlt
stc
por
fwait
insb
jnp
mov
lret
mov
and
aaa
jb
loope
lods
fstl
or
pop
es
cwtl
hlt
call
inc
jecxz
mov
sub
sbb
mov
dec
mov
lret
arpl
or
addr16
or
bound
push
dec
sbb
xlat
pusha
fstps
addr16
daa
xchg
outsb
test
lahf
push
loopne
mov
andb
adc
movsl
jae
cmp
data16
sbb
jmp
dec
add
jecxz
inc
enter
jne
test
js
and
ficoml
cmpsl
imul
pop
sub
jp
outsb
inc
xchg
dec
dec
xchg
test
sbb
faddl
loope
outsb
imul
stos
loop
cmp
mov
repnz
and
xor
jecxz
push
add
pop
jns
xor
cmp
daa
dec
nop
sbb
sub
add
lods
ret
ljmp
sarl
cmp
cmp
xchg
dec
sub
xor
adc
inc
fstpl
pushf
jg
test
out
lds
test
mov
xor
mov
cmp
cwtl
mov
pop
sbb
scas
mov
lods
std
mov
rcll
jns
sbb
pop
bnd
mov
pop
ja
xchg
mov
insl
cwtl
adc
fdivrs
add
lds
mov
lahf
mov
stos
into
movb
or
sub
xchg
dec
mul
jnp
xchg
sub
lds
xchg
cli
mov
loopne
sub
mov
and
dec
mov
and
mov
and
lcall
popf
and
test
out
xchg
adc
cltd
fsubp
mov
pop
roll
push
mov
cltd
push
adc
jae
cmpsb
test
cmp
stos
pushf
ss
nop
popf
cmp
dec
inc
jbe
dec
mov
mov
inc
lahf
add
cmp
and
sbb
sub
lock
sbb
xchg
sub
sub
xlat
fwait
mov
fimuls
jno
inc
jge
lcall
adc
or
call
pop
mov
mov
pushf
popa
data16
fidivl
cmp
inc
jl
mov
dec
push
bound
aaa
out
or
adc
cmp
xor
cmpsl
jl,pt
and
jns
call
mov
inc
ss
stos
pop
std
mov
fistpl
adc
popf
mov
push
sti
into
test
xor
sbb
and
lea
lret
andb
add
jle
fmull
cmp
stos
xchg
repz
mov
jae
fldcw
sbb
aaa
or
sti
xchg
dec
fiaddl
ja
outsl
mov
sub
xor
or
mov
clc
and
mov
repz
pop
xchg
mov
cmpsl
jno
fsubp
lcall
xor
stos
pusha
fisubrl
fistpll
aad
mov
jnp
push
fstpt
fldt
fwait
and
add
test
rorb
add
push
cltd
jmp
decb
les
adc
fistpll
push
cmpsb
xchg
sbb
cwtl
jecxz
dec
mov
inc
das
xchg
mov
sbb
jb
sub
push
and
ljmp
pop
out
pop
out
adc
cmpsb
ret
add
bound
notb
notl
lcall
add
bound
fwait
out
shlb
sti
lcall
jb
mov
push
mov
cmp
xchg
xchg
cs
and
push
loop
ds
pop
scas
add
mov
xchg
cmp
stos
shlb
mov
jae
jmp
or
ret
fcomi
mov
push
push
mov
je
ret
sbb
mov
out
and
adcl
cmp
popa
ret
aaa
and
xchg
xor
add
loop
xchg
scas
aaa
push
fcmovnb
adc
jmp
and
rep
adc
fwait
pop
rcl
sub
repz
loop
xchg
and
cli
scas
fwait
arpl
mov
out
xchg
pop
idiv
xor
fsubp
push
xchg
stos
ss
stos
inc
jb
mov
aas
push
cmp
mov
add
repnz
and
pop
ds
ss
mov
addl
outsl
pop
cmpsl
inc
arpl
pop
ja
dec
lcall
jae
pop
test
push
pop
jle
shrb
pushf
negl
jns
repz
fildl
lret
jae
ja
xchg
fdivrs
mov
jp
bound
push
mov
iret
add
mov
andl
shll
shrl
mov
daa
add
mov
adc
andl
push
pushf
xchg
mov
cli
inc
fstl
push
fld
dec
pop
push
cmpb
shlb
cmpsb
ret
out
out
popf
std
cmpsb
stos
mov
outsb
lret
sbb
cwtl
ficoml
sub
inc
int3
and
out
xchg
ret
mov
mov
cmp
sbbl
mov
aam
pushf
fcomps
add
aas
push
in
out
jmp
mov
je
rclb
filds
xchg
call
loope
jo
cld
rcrb
mov
fwait
push
push
or
pop
sbb
mov
jp
pop
fidivrs
lret
cmpsl
inc
clflush
xchg
push
mov
mov
xchg
add
dec
aas
mov
cmpsb
fistps
pop
stos
ret
sbb
fcom
dec
ljmp
push
pushl
push
les
dec
stos
add
scas
cmp
inc
and
loope
jno
add
les
inc
call
decb
popa
mov
iret
inc
ljmp
arpl
pop
sbb
mov
and
loop
add
test
negb
ret
cmp
adcl
mov
and
outsl
xor
fidivrl
out
icebp
test
jnp
stos
mov
pop
push
jns
and
ljmp
es
ja
int3
push
test
pushl
sub
pop
fsubrp
mov
or
xchg
jne
and
adcl
and
cmp
mov
mov
je
mov
jbe
inc
push
mov
push
add
fcompl
cmpsl
xor
xor
out
mov
inc
and
sti
sbbl
and
xchg
pusha
and
jecxz
and
jnp
and
in
xor
pop
pop
or
icebp
inc
pop
pop
pop
clc
fildl
jle
mov
dec
pop
lods
int3
mov
std
add
sbb
lahf
inc
movb
mov
fucomip
sbb
loop
cmp
rcr
lock
popf
push
daa
movsb
outsb
mov
sbb
mov
std
cmpsb
push
clc
fsub
pop
inc
scas
rol
and
jbe
jbe
pop
ljmp
mov
lret
pop
xchg
cmpsb
and
lcall
repnz
adc
hlt
negb
out
pop
dec
iret
pop
pushf
int3
cwtl
cmp
sbb
jle
cmp
cwtl
inc
cmp
iret
dec
or
add
fimull
pop
es
imul
add
xchg
jno
jge
dec
andb
clc
lret
mov
xchg
mov
mov
jp
mov
jo
inc
daa
ljmp
sub
repz
nop
pop
pop
test
fadds
clc
fimuls
jmp
cmc
dec
xor
mov
aad
mov
pushf
dec
repz
push
add
pop
xchg
mov
and
loop
xlat
xchg
mov
xchg
and
inc
pop
cmpsl
cmpsb
jmp
ror
lods
push
adc
das
in
pop
gs
call
dec
enter
das
daa
mov
pop
cltd
sbb
cmpsl
rorl
call
popf
addr16
push
jp
pusha
sbb
cmpsl
das
push
shl
fldcw
push
xchg
cld
mov
pop
movsb
inc
shrb
inc
jg
movsb
adc
stc
and
decl
repnz
loop
dec
out
movsl
data16
mov
xchg
sub
jmp
add
lods
pop
and
pop
xor
shrb
out
ja
jns
fdivrp
out
dec
jge
xchg
mov
lea
pop
insb
xor
dec
fidivl
dec
mov
fwait
push
daa
dec
sti
xor
clc
leave
mov
add
mov
das
xor
arpl
add
es
cmp
cmpsl
sbb
ja
push
stc
jge
add
xor
push
push
cmpsl
inc
sbb
cmpsb
push
xor
xor
jge
push
and
int3
pushf
jl
and
cli
shlb
cmc
std
jge
jbe,pt
push
pushf
sub
cmpsb
scas
cli
fwait
pop
mov
repz
aas
out
mov
dec
jmp
mov
pushf
jecxz
push
dec
lods
insb
testl
or
sahf
inc
xchg
mov
mov
test
add
lods
enter
loopne
loopne
mov
mov
inc
sahf
jns
ffreep
or
dec
clc
loope
jns
aas
test
js
sbb
aaa
mov
mov
cmp
pop
push
sbb
into
cmp
lock
rorl
pop
rorb
mov
pop
mov
fstp
push
popf
es
lret
add
out
daa
or
cmp
aaa
pop
pop
xor
mov
mov
push
outsl
popf
iret
sub
dec
cmpsb
rcr
xchg
std
sub
push
mov
mov
jbe
imul
pop
cltd
neg
pop
sbb
xchg
cmc
test
lods
pop
adc
inc
aam
push
test
leave
ucomiss
stos
rcrb
jae
mov
loope
fisttps
aaa
lret
mulb
mov
mov
push
stc
or
pop
mov
sub
xchg
jle
push
cltd
jg
xchg
cwtl
fcomps
inc
hlt
xchg
fisubs
shlb
mov
mov
push
inc
addr16
pop
ret
lret
pushf
cmpsl
cmpsl
xor
mov
fisttps
mov
shrl
or
mov
iret
push
pop
mov
pop
mulw
ljmp
pop
pop
nop
jmp
mov
mov
dec
into
call
jmp
out
stos
gs
sbb
hlt
jae
push
push
xchg
test
jne
out
aam
pop
insl
data16
cli
cmp
mov
xchg
pop
dec
jp
mov
mov
fwait
mov
pop
leave
cmp
loop
fisubrl
mov
lret
fs
adc
fsubl
daa
push
lods
push
dec
mov
adc
adc
push
gs
dec
in
outsb
mov
mov
scas
mov
fcoms
cmpsb
stc
xchg
mov
pop
rcrl
lea
inc
sub
or
push
sbb
sbb
mov
movlps
lcall
out
add
mov
leave
jmp
mov
jecxz
inc
sbb
xlat
ror
push
data16
jmp
popf
xchg
aaa
xchg
cli
fiadds
cmovle
pop
mov
out
ror
enter
fsubp
pop
dec
mov
pop
add
sub
jae
std
addr16
lcall
lods
test
push
popa
xor
mov
cli
sbb
cmp
imul
cmp
add
test
data16
les
jns
inc
xchg
add
add
xchg
jecxz
iret
push
xchg
cmp
fistps
jns
jmp
arpl
call
jb
xchg
int
mulb
inc
call
test
daa
cmpsb
inc
pop
mov
out
popf
std
cmp
call
out
sub
nop
mov
adc
sub
pop
in
cmp
inc
sbb
bound
pop
out
and
and
sahf
pop
xchg
cli
stc
test
je
mov
pusha
lahf
mov
dec
cmp
fistpll
dec
addr16
imul
push
sub
push
jnp
insb
fwait
inc
mov
xchg
pop
adc
sbb
ret
sbb
repz
jp
sbb
xchg
cmp
sahf
push
pop
or
xchg
pusha
jmp
clc
xor
mov
xchg
push
jns
shr
cld
mov
out
push
ud0
imul
enter
roll
mov
movsl
ja
push
xchg
shlb
ja
add
push
int3
mov
add
fsts
fnstenv
dec
jae
cmp
in
jp
addr16
push
lret
ds
push
test
ret
dec
fdivr
call
push
and
pop
jle
fcmovnbe
jge
mov
inc
scas
loopne
enter
jns
loopne
imul
js
add
outsb
loop
mov
ret
mov
jle
out
jbe
movsl
mov
add
sub
aam
jbe
addb
ret
push
xor
rcr
or
xlat
and
bound
orb
add
xchg
js
cld
cmpsl
je
cmpsl
cmp
jae
jg
jns
movsl
xor
sarl
les
fistl
add
jecxz
push
dec
xorl
insb
cmp
fs
or
dec
dec
push
jne
gs
push
test
and
popl
jg
inc
xchg
jmp
test
add
popa
fistpl
and
cmc
pushl
ret
mov
pop
rol
or
adc
cmpsl
ss
fidivl
sti
cmp
or
jo
cld
scas
inc
adc
inc
mov
fstps
ret
xchg
cmp
fmull
scas
inc
daa
mov
cmp
rcll
fdivr
enter
jmp
push
push
jns
jns
ja
js
decl
pop
add
cld
cld
lcall
mov
ja
in
jns
call
xlat
mov
cmp
daa
sub
inc
push
xor
popf
les
add
and
ja
mov
mov
mov
stos
in
popa
sub
ds
addl
push
and
and
jg
adc
lcall
mov
loop
push
test
push
pop
pop
sti
jnp
arpl
lahf
add
cli
pop
sub
ret
dec
inc
cmp
adc
mov
and
lret
jnp
shlb
jmp
sbb
call
je
push
ljmp
stc
imul
mov
out
mov
std
loopne
movsb
in
jle
imul
dec
xchg
cltd
data16
push
sbb
clc
cli
inc
dec
inc
jp
call
lods
ret
loopne
movsl
jbe
pop
mov
mov
repz
test
add
or
frstor
or
xor
ficompl
ds
inc
pop
pmaxub
inc
add
movsl
and
sub
mov
xchg
data16
fildl
sub
cli
loop
fistpll
out
and
outsl
pop
pusha
xchg
push
jae
lds
mov
popf
clc
add
add
pop
andb
outsb
jnp
xor
gs
pop
xchg
inc
sarb
mov
push
mov
repnz
mov
loope
lcall
and
out
into
sbb
pop
dec
inc
arpl
fsubrs
mov
lds
fistps
inc
mov
sub
or
inc
imul
inc
pop
jp
fildl
mov
inc
jp
mov
mov
das
ja
pusha
aas
jl
and
aaa
mov
inc
and
xchg
dec
xchg
lods
andl
stos
fisttpll
mov
jle
mov
mov
mov
out
adc
xchg
or
aaa
dec
addb
out
jbe
flds
push
lahf
dec
fiaddl
jp
adc
ss
movsb
inc
sub
adc
inc
inc
cltd
inc
arpl
out
or
jbe
jnp
pop
ss
iret
mov
inc
push
push
addb
sub
cwtl
push
push
jle
orb
ret
xchg
ss
jmp
cmp
inc
push
mov
push
push
fcmovnu
add
push
ljmp
shrl
adc
and
sub
icebp
mov
and
sbb
test
loope
fmuls
mov
or
fbld
sbb
ja
fcmovnb
adc
or
fwait
jmp
outsb
mov
insl
inc
ret
dec
cltd
adc
mov
sub
sub
dec
xchg
mov
ror
lock
std
xchg
out
sbb
mov
ret
xor
or
ret
adc
jg
push
rcll
test
mov
aam
inc
push
jb
mov
sub
out
test
cli
cmp
mov
sbbl
xor
std
and
pop
adc
into
shrb
jecxz
je
adc
push
xchg
sub
ljmp
rclb
shrl
shlb
cwtl
pop
test
mov
mov
xor
push
enter
push
inc
sub
xchg
push
arpl
xor
push
gs
push
rorb
mov
mov
daa
mov
adc
ja
jo
mulb
leave
fwait
sub
inc
push
mov
clc
call
dec
lea
cli
fs
adc
outsb
adcl
je
dec
jno
out
inc
lock
in
pop
dec
lahf
cmp
sbb
add
mov
orl
adc
adc
call
dec
in
mov
in
flds
test
mov
push
mov
mov
dec
sbb
ja
mov
push
popf
repnz
mov
mov
add
jbe
jb
repnz
mov
mov
sub
sbb
out
push
test
pop
xchg
and
mov
jno
mov
ljmp
pop
jle
mov
jp
mov
cli
fisubrl
push
push
fsts
inc
out
mov
add
mov
sbb
push
daa
inc
ret
xor
jecxz
inc
and
xchg
jns
movzwl
and
xchg
xor
mov
pop
xchg
jns
aaa
xor
jnp
sub
lock
aaa
mov
xchg
and
cli
dec
incl
sarb
xlat
mov
adc
mov
lret
jg
or
xor
sbb
sbb
mov
ret
mov
xor
ror
mov
xor
rcl
clc
dec
pop
xchg
cwtl
vmwrite
push
and
test
mov
ja
xor
xlat
shll
xor
out
adc
mov
push
xor
push
lods
xor
add
and
push
dec
sahf
and
lds
lock
mov
push
push
fwait
inc
call
mov
xorl
mov
adc
loopne
adc
roll
dec
mov
scas
je
lret
hlt
push
push
inc
push
lahf
cmp
push
pushf
dec
pop
xor
jecxz
and
inc
jnp
or
rclb
negl
jbe
mov
push
add
fxch
sti
xor
pop
loop
mov
out
fwait
and
repnz
add
xchg
or
push
bndldx
or
xor
cmp
popa
push
xchg
push
cmp
imull
pop
leave
add
dec
push
scas
stc
pop
push
mov
fwait
clc
je
ret
ret
jnp
add
out
sbb
repz
pop
and
and
push
xchg
add
out
add
and
scas
aas
xor
push
int3
xchg
icebp
mov
mov
mov
dec
jge
andb
mov
fwait
bound
std
push
push
mov
gs
dec
jb
popa
add
inc
pop
fcomi
pop
pop
arpl
push
ja
push
or
mov
stc
xchg
xor
and
and
jnp
rorl
cmp
repnz
xchg
out
push
mov
ficompl
xchg
and
mov
add
push
and
xor
insb
stos
and
mov
push
sarb
jg
test
sarl
ret
cmp
fstpl
xlat
out
mov
xchg
divl
cmp
repnz
out
mov
mov
xchg
pop
xchg
popa
pop
jg
lret
cmpsb
rcll
push
test
jge
xor
sti
repz
adc
inc
sbb
push
fadds
cmc
mov
xor
outsb
adc
or
vpcomw
movsb
push
fiadds
push
xchg
push
pop
ret
fldcw
sbb
call
cmpsl
and
cwtl
leave
xchg
and
xor
push
jle
movsb
push
push
push
rclb
icebp
not
shlb
sub
or
xchg
das
mov
in
inc
jmp
mov
shlb
pop
test
das
mov
cs
dec
leave
adc
sbb
rcrl
dec
iret
jae
fstpl
dec
and
stc
shlb
jcxz
jle
cmpsl
mov
mov
ret
fs
xlat
ljmp
test
xchg
xchg
rcrl
adc
and
jl
scas
xchg
xor
xor
xor
sbb
xor
das
iret
nop
leave
mull
xor
jge
test
push
adc
repz
or
inc
mov
dec
cmpsl
neg
or
shrb
leave
inc
mov
iret
lods
mov
push
adc
scas
mov
xorb
leave
data16
ljmp
in
or
add
or
jmp
lcall
mov
shlb
mov
pop
scas
cmc
ret
lea
adc
les
dec
mov
sub
rclb
push
xchg
adc
out
xchg
fwait
jo
mov
mov
jmp
push
push
adc
push
xor
add
leave
pop
call
popa
xor
pop
pop
jecxz
mov
aad
or
nop
xorl
inc
xor
mov
in
xchg
ljmp
ss
and
popf
loopne
mov
mov
outsl
jae
pop
aam
dec
push
lcall
jecxz
push
lret
cmp
sbb
out
into
add
or
fdivl
jnp
scas
je
sbb
rolb
aas
push
or
dec
push
or
pop
push
or
outsl
push
or
adcb
mov
add
add
add
add
add
add
add
add
add
push
or
add
add
xlat
push
or
add
add
adc
add
add
push
or
add
add
push
or
sbb
or
add
or
and
or
adc
add
or
push
push
or
xor
or
sub
add
or
xor
or
inc
push
or
imul
gs
xor
cs
insb
add
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
imul
insb
add
gs
insb
xor
cs
insb
add
xor
xor
fs
insb
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
je
jb
arpl
fs
jae
add
add
imul
jae
add
dec
outsl
popa
fs
imul
add
add
jae
popa
addr16
outsl
js
add
add
addr16
insb
outsl
jae
dec
gs
add
push
jns
inc
jb
gs
je
imul
jb
popa
je
inc
outsl
outsb
je
add
add
gs
insb
inc
js
arpl
gs
add
add
xor
aas
adc
xor
sub
cmp
add
add
fisubl
sbb
loopne
rol
adc
rolb
std
sbb
and
inc
cmp
inc
xchg
adc
inc
lock
pop
and
cld
xchg
mov
push
hlt
ja
add
push
xor
jbe
adc
add
ds
sub
and
arpl
adc
lret
dec
dec
mov
and
xchg
inc
stos
inc
inc
push
inc
fs
cmpsb
cmp
or
mov
xor
sbb
sub
push
stos
test
mov
dec
enter
push
sbb
dec
push
jecxz
or
cltd
inc
fwait
cmp
or
sbb
and
jno
cmp
fistl
cwtl
mov
push
mov
enter
push
jb
push
test
cmp
lds
popa
data16
mov
sbb
jno
pusha
push
dec
dec
pusha
ljmp
xor
inc
and
popl
jle
cmp
push
sbb
sub
or
je
arpl
dec
add
inc
jecxz
les
lcall
jnp
mov
pushl
out
je
jg
xor
lock
adc
movsb
add
mov
loop
add
cmp
dec
notb
jnp
clc
nop
dec
xor
fldcw
fildl
xor
sub
add
lret
les
outsl
clc
dec
inc
ja
mov
add
lods
fdivrs
lret
sub
add
lahf
aam
pop
xchg
shrb
ficoml
mov
adc
rolb
xchg
fsts
les
sbb
push
out
bnd
imul
jne
xor
mov
push
mov
imul
xor
data16
addl
in
xchg
push
sbb
sbb
and
mov
sbb
or
test
jp
or
stos
es
or
outsl
inc
fsubr
xchg
roll
xor
xor
inc
scas
push
add
push
sti
jg
xchg
xchg
or
notl
xor
xor
cld
lock
xor
mov
test
sbb
std
cmpsl
cmp
and
xor
push
fistpl
push
mov
popl
xchg
les
xchg
add
leave
ret
mov
sub
jle
cmp
and
dec
xchg
repnz
ret
add
sub
popf
inc
dec
jb
jecxz
jge
push
inc
add
add
es
adc
pusha
int3
adc
out
pop
rorb
ljmp
stc
jmp
test
or
movsb
mov
or
jp
lea
pop
mov
or
mov
sub
add
sub
movsb
aam
add
adc
and
sbb
lock
and
and
and
daa
and
outsb
xor
divl
and
and
rol
dec
movsb
inc
or
push
adc
dec
insl
or
jae
in
ja
test
sbb
jge
dec
jg
enter
xchg
subb
fistpl
xor
ss
das
or
add
fiadds
adc
add
xchg
or
cld
or
ss
mov
add
pop
adc
lcall
push
add
add
sbb
lock
mov
leave
pop
nop
jno
adc
es
sub
sub
outsb
xor
adc
daa
push
mov
add
lret
jecxz
pop
pop
sub
adc
adc
adc
inc
adc
xor
addr16
fadds
xchg
cmpsb
adc
xchg
adc
mov
mov
sbb
add
xor
je
add
jl
mov
scas
adc
add
and
lret
xor
fucompp
faddl
mov
and
cli
dec
fwait
add
movb
js
push
and
dec
xchg
ja
mov
adc
and
sub
arpl
xchg
and
inc
and
and
dec
pushf
mov
push
mov
bound
xchg
push
xchg
inc
inc
xchg
push
inc
scas
orb
xor
repnz
or
dec
je
jl
ds
popf
pop
and
inc
das
pusha
mov
cmp
cli
insb
orl
and
mov
aas
xchg
and
stos
int
pop
adc
dec
cs
imul
inc
dec
pop
mov
cmpsb
and
dec
mov
inc
dec
add
add
dec
addb
pop
add
add
dec
les
bound
add
mov
or
lcall
sbb
movsl
fdivrs
lret
dec
lods
roll
cld
mov
les
ret
add
add
dec
add
push
fmull
and
and
inc
mov
inc
push
inc
inc
push
pop
inc
push
pop
inc
push
repnz
sbb
pusha
pop
add
and
imul
ja
std
js
xor
and
xorb
xorb
orl
test
adc
add
nop
sbb
dec
or
andl
add
mov
add
test
mov
ljmp
cmp
inc
xchg
jae
das
aas
dec
jmp
pop
out
aam
jo
sbb
fwait
dec
push
and
cmp
pop
add
mov
add
bound
cmp
popl
cmp
xor
cld
jo
lock
rorl
or
movsb
and
add
cmp
mov
inc
hlt
mov
jb
cmp
add
xor
in
andb
xchg
outsb
xchg
cmc
adc
sbb
aas
arpl
adcb
xchg
push
leave
push
xchg
and
adc
and
cmc
andb
add
jno
xchg
cltd
push
xchg
or
in
add
cmp
sbb
clc
bound
lods
iret
pop
or
rorb
push
mov
mov
add
xor
jge
or
add
popf
push
nop
or
fbstp
in
mov
inc
mov
jb
inc
int
xchg
aad
or
adc
xor
add
and
orl
and
data16
sahf
dec
push
lds
push
or
inc
scas
les
fdivrl
jae
push
push
inc
adc
or
sbb
mov
cwtl
or
inc
ficomps
inc
popf
add
or
add
mov
cmp
or
lods
dec
mov
add
mov
mov
cmc
inc
test
and
inc
data16
inc
xchg
int3
xchg
cmpb
scas
lods
movsl
lcall
mov
cli
int3
adc
sbb
sub
mov
pop
inc
mov
push
or
inc
lret
mov
xchg
cltd
gs
test
dec
rcrb
in
sahf
jb
pop
add
or
fiaddl
xchg
adc
mov
loop
push
pushf
pop
push
fs
push
fwait
mulb
add
int
data16
xchg
dec
test
inc
mov
xor
cltd
pop
test
mov
decl
mov
add
pop
jecxz
ljmp
add
dec
add
dec
add
push
push
jecxz
mov
xor
sarb
add
stos
cmp
orb
cmpsl
lcall
negl
rcrb
push
push
push
xor
add
xchg
sub
add
lods
and
or
xor
xchg
outsb
les
adc
push
and
pop
xor
push
mov
cs
fwait
notl
mov
sub
jp
jb
adc
push
bound
or
or
lcall
and
mov
les
dec
jae
sub
adc
sbb
cli
xchg
mov
adcl
inc
test
xlat
outsl
cmp
add
sahf
rolb
mov
testb
je
int3
lds
jmp
or
add
clc
sbb
das
dec
sbb
jl
ljmp
adc
movsb
inc
push
mov
cmc
enter
and
aad
push
nop
icebp
insb
mov
popl
rcrb
push
pop
jnp
or
dec
test
cmp
push
add
adc
idiv
add
pop
mov
scas
mov
inc
fmuls
and
sub
sbb
sbb
add
xor
inc
cs
inc
xchg
mov
gs
add
mov
insl
imul
add
sbb
xchg
ja
fdivrs
add
push
mov
mov
and
bound
xor
add
and
mov
xchg
sub
test
xor
dec
xorl
add
lods
outsb
stc
rorb
add
xchg
or
xlat
add
cmp
lds
mov
inc
add
or
ret
pop
sbb
push
mov
ja
je
and
add
add
fadds
jno
aad
sub
cs
cwtl
inc
or
add
cmpsb
decb
ret
and
pop
mov
pop
mov
insl
loopne
mov
mov
jae
and
or
repnz
add
mov
sti
push
stc
adc
mov
xor
flds
add
sbb
mov
inc
sub
lcall
add
adc
xchg
clc
cli
dec
add
cmp
cmpsb
and
sbb
inc
mov
arpl
xchg
movsl
adcl
repz
push
pop
or
sbb
popf
sub
or
adc
adc
lahf
or
fadds
add
in
insb
cld
call
jbe
and
adc
add
jno,pn
or
cmp
cwtl
subb
popf
add
sahf
add
lahf
add
insb
jns
jmp
stos
scas
pushf
xchg
sbb
cmp
add
and
in
push
jns
cmpsb
iret
in
data16
jmp
adcl
sub
insb
movsb
in
cmp
pop
adc
mov
adc
in
hlt
jp
dec
leave
and
pop
add
int3
and
mov
jo
mov
add
xorl
push
es
adc
mov
xor
lock
movsl
scas
scas
inc
jle
or
test
test
xchg
fidivrs
and
inc
xlat
jl
and
lea
clc
stos
dec
addb
xchg
and
lcall
mov
adc
add
lcall
enter
scas
and
mov
outsb
and
pop
cs
push
loop
outsl
add
pop
cmp
add
aaa
and
mov
out
sbbb
pop
rorb
mov
andl
mov
sub
mov
pop
ficoms
in
sahf
and
xor
add
fildl
sub
cmpsl
bound
es
add
jo
push
add
pop
and
ret
sbb
test
repz
roll
out
sbb
jo
add
imul
pop
leave
lods
fcmovu
add
xchg
add
pushf
loop
orl
stos
add
sub
sub
jmp
sbb
inc
adc
inc
mov
stc
add
aad
adc
stos
aas
jae
sbb
or
add
sahf
mov
sbb
aas
mov
cmp
pop
outsl
mov
cmpsl
xor
loopne
inc
dec
out
pop
xor
jns
and
andb
test
int
push
or
in
lock
rcll
cwtl
or
inc
inc
xchg
adc
mov
push
xor
pop
rcrl
xor
and
loop
cs
xchg
push
inc
push
mov
sub
sub
fyl2xp1
inc
jae
inc
jmp
mov
add
and
lock
pop
lea
pusha
jne
pop
int3
es
std
fwait
int
xchg
mov
cli
add
jl,pt
pusha
je
or
mov
or
sbb
cmp
mov
pop
call
jb
data16
inc
cmp
add
popl
test
aam
insb
push
xor
bound
lea
xor
push
pusha
mov
or
arpl
or
and
jb
xor
sub
sbb
mov
adc
adc
arpl
int
ret
ljmp
xor
xor
arpl
call
push
out
pop
add
jne
xchg
inc
in
adc
test
inc
mov
add
pop
enter
xor
clc
push
dec
outsl
sbb
sbbl
icebp
cmpsb
add
mov
jo
xor
lcall
repnz
push
sbb
test
cmp
ret
dec
lock
and
insb
incl
add
jo
rolb
inc
bound
lret
push
pop
pop
not
call
add
roll
repnz
testb
add
negl
stos
jne
fcom
addl
callw
cmp
push
add
sub
shr
ja
gs
jmp
or
mov
neg
call
shrl
imul
filds
mov
jo
push
jno
shr
dec
not
or
sub
lret
stos
mov
in
xchg
movzwl
arpl
xchg
and
jmp
push
mov
xor
int3
stos
fildll
scas
jle
and
mov
shl
jmp
popl
into
inc
ds
pop
inc
push
jg
xchg
dec
pop
or
iret
lock
inc
setno
jmp
lea
shl
dec
mov
xor
push
adc
inc
ret
inc
sub
add
and
popf
inc
xor
orl
call
lcall
incb
xchg
arpl
enter
push
cli
fiaddl
in
push
pop
pop
xor
xor
mov
cmpsb
xor
test
mov
jge
jmp
lret
je
pop
adc
inc
pop
test
test
out
push
add
movswl
jmp
lds
out
add
aad
andl
in
push
pop
dec
pop
dec
push
das
mov
xor
icebp
mov
aas
jbe
pusha
sbb
add
jle
mov
clc
iret
cmpsb
xchg
sub
xor
iret
in
mov
out
mov
sbbb
ret
imul
xor
call
xchg
aas
xor
push
cmpsl
add
dec
insl
mov
inc
cli
les
adc
mov
movsb
or
inc
xor
jo
or
neg
add
fsubs
inc
mov
lcall
mov
inc
pop
sub
xor
mov
pusha
orb
fbld
push
das
adc
hlt
xor
add
dec
iret
outsb
sub
push
jmp
stos
sbb
fwait
pop
xor
cmpsb
lock
icebp
mov
xor
push
pop
and
sarl
cmp
push
into
jo
hlt
roll
inc
push
sub
lock
sub
rcrl
lret
inc
mov
add
mov
lretw
iret
pusha
fcomip
rorb
dec
fildl
inc
test
jg
negl
aam
lret
pop
mov
jle
icebp
cmp
xor
xor
mov
outsl
xor
sarb
or
test
add
fbstp
and
sti
push
adc
push
or
neg
sub
cmp
sub
aam
test
adc
and
sahf
ds
push
adc
xchg
mov
pusha
jle
ja
mov
jae
and
dec
push
jg
pop
testb
push
mov
int
roll
inc
mov
push
popl
pop
adc
push
pop
test
jns
dec
xor
xor
inc
pop
cld
rorb
jp
lret
cmpl
pusha
cmp
pop
xor
aas
xchg
inc
or
je
in
mov
mov
negb
test
inc
dec
sub
cltd
sbb
push
pop
cltd
cmp
adc
in
testl
pop
pop
xor
xchg
add
sub
imull
flds
inc
movl
movzbl
leave
jp
cwtl
mov
adc
mov
xor
sbb
mov
sti
mov
or
jns
fcoml
xchg
aad
and
and
shl
adc
rcrb
sti
mov
add
insl
jle
pop
xor
imul
or
test
pop
add
stos
filds
jmp
pop
imul
jo
mov
sub
iret
movsl
outsl
shrb
sbb
pop
and
icebp
xchg
add
jmp
sub
test
cli
inc
imul
push
shll
out
add
cld
dec
inc
push
inc
or
loopne
mov
sbb
add
cmp
or
subb
dec
shll
xchg
mov
cltd
fwait
test
insb
testl
pushf
lds
mov
popf
mov
or
push
ja
add
inc
xor
mov
test
dec
dec
idiv
mov
cmpsb
repnz
rclb
pop
andb
or
adc
xchg
xchg
sti
in
sarl
shr
pop
add
sbb
dec
neg
push
xorl
rclb
adc
xor
inc
stos
pop
fs
test
adc
mov
int3
xor
stos
xor
lods
inc
mov
adc
test
xchg
add
dec
inc
insb
xor
imulb
push
mov
and
testb
rorl
repnz
cmp
adc
das
xor
pop
bswap
sbb
repnz
lret
pop
inc
test
imul
movsl
mov
sbbl
repnz
mov
mov
mov
sub
adc
jmp
add
test
push
push
pop
mov
fdivl
xor
and
add
and
inc
jb
lcall
cwtl
gs
push
xchg
pop
jecxz
fidivrl
fidivrs
test
clc
insl
cmp
loop
addb
cmpsb
loop
jns
int3
sar
movsb
xchg
mov
stos
add
xchg
mov
and
push
lret
add
test
mov
fisubrl
out
push
xor
jl
jge
lcall
into
sbb
lret
add
and
pushf
test
pop
pop
inc
add
neg
and
add
rorl
repnz
adc
jecxz
lea
repz
push
sbb
sbb
imul
iret
pop
pop
cmp
mov
js
test
or
neg
test
inc
test
popa
mov
stos
dec
sbb
int3
outsb
adc
cmpsb
mov
jmp
inc
or
or
pop
dec
in
rclb
pop
test
jno
inc
cmp
subb
cltd
test
and
mov
push
pop
or
int
sbb
gs
pop
pop
add
mov
aam
into
add
cltd
lahf
mov
repz
xchg
aas
push
lahf
test
imul
movsb
notb
call
or
jp
sahf
mov
into
bound
sub
add
add
dec
scas
dec
add
stc
add
cmp
adc
ret
mov
pop
adc
sahf
xor
mov
ret
stc
push
inc
adc
mov
xchg
xchg
in
std
mov
push
sbb
mov
add
lcall
and
sbb
mov
int3
mov
xor
jnp
dec
cmpsb
flds
push
pop
pop
inc
mov
or
push
enter
insl
mov
nop
adc
xchg
mull
mov
data16
mov
jmp
jmp
jecxz
pop
push
bt
cmp
sub
xor
mov
jl
shrl
popa
mov
test
out
arpl
sub
out
lea
push
pop
pop
sub
lret
sbb
push
repz
mov
movsl
add
test
int3
xchg
cmpsb
loopne
in
sbb
lock
adc
nop
lds
add
cwtl
addr16
nop
sbb
bound
loope
inc
flds
lret
inc
popa
pop
add
sub
imul
inc
or
xor
dec
shlb
inc
movq
aad
stos
ret
adc
std
push
into
sbb
jae
add
mov
add
or
das
shlb
cmc
lret
lret
adc
or
sub
std
and
sbb
inc
imull
push
lret
pop
sbb
cli
ret
jmp
pusha
xor
stc
jle
jp
icebp
xor
popf
in
add
fdivs
or
not
cwtl
pop
cmp
jg
adc
pop
cmp
mov
bound
xlat
inc
fisubrl
and
adc
leave
push
pusha
adc
not
test
push
and
mov
xchg
push
pop
test
movsb
cmpsl
add
adc
or
or
fdivrs
es
xchg
rclb
xchg
add
clc
into
add
ror
jecxz
test
mov
test
or
mov
lods
jb
sbb
dec
xchg
adc
movsb
dec
inc
rorb
cwtl
divb
pop
fnstsw
rorb
add
pop
mov
inc
notb
dec
lods
adc
pop
ja
cwtl
mov
fsubrs
xchg
pop
xor
repnz
push
pop
call
out
je
repz
xor
or
clc
adc
cld
mov
fs
dec
dec
cld
repnz
leave
add
jb
ret
js
test
xor
sub
xchg
cld
pop
leave
popa
das
fs
jbe
mov
jae
inc
fwait
adc
addr16
xor
shlb
push
mov
adc
push
adc
jl
dec
neg
xchg
aam
test
std
push
pop
loop
push
repz
aam
lahf
sbb
mov
or
xor
rorl
sbb
xchg
push
addb
roll
add
inc
and
cmp
dec
pop
mov
mov
inc
sbb
iret
mov
sbb
arpl
mov
pop
pop
mov
sub
jmp
cmp
or
and
xor
aam
push
lret
stos
inc
js
int3
sbb
dec
hlt
and
push
arpl
cmpsl
jge
dec
scas
cmp
pop
dec
bound
repz
addr16
and
add
adc
and
pop
and
bound
xor
es
fistpll
es
les
into
xchg
add
mov
or
pusha
sub
push
loope
and
sti
inc
roll
jne
adc
aam
inc
pop
sbb
cwtl
mov
xchg
add
mov
movsb
sbb
mov
repz
out
jbe
cmp
mov
adc
gs
xor
pop
xor
xorb
mov
sub
and
cs
nop
pop
data16
movsb
dec
mov
add
xor
sub
dec
jg
dec
mov
orb
icebp
xor
add
popa
sti
call
das
cli
jp
add
fwait
xchg
pusha
pop
ficoms
cmp
and
push
push
pop
pop
sub
mov
mov
leave
pop
xchg
mov
add
push
popf
sbb
mov
push
dec
pop
mov
ret
inc
nop
subb
fsubrl
cmp
push
xchg
xchg
and
rol
pop
or
loope
insl
lock
mov
sub
addb
or
setno
shrl
adc
ret
xor
les
add
jmp
aam
mov
ret
xchg
fbstp
adc
pop
lcall
and
test
nop
push
or
lds
shll
and
mov
bound
push
not
mov
xor
and
lock
out
insb
mov
addb
cli
or
dec
sti
bswap
adc
ret
loope
jmp
pusha
cmp
cwtl
js
bswap
pop
or
lret
jns
mov
add
xchg
insl
bound
add
in
sub
xchg
or
enter
mov
dec
notb
clc
jg
sbb
jo
push
mov
push
das
not
inc
popa
jno
dec
pop
push
push
cmc
into
test
adc
iret
addb
ret
movsb
loop
adc
test
scas
int3
add
pop
sbb
rcrl
scas
adc
mov
adc
xor
sahf
inc
xchg
imul
imul
xchg
adc
jb
rolb
jae
push
and
dec
mulb
or
push
pop
or
cmpsb
test
push
mov
dec
push
inc
ret
pop
stc
data16
or
and
sbb
mov
pop
or
push
iret
xchg
movl
fdivp
rcrl
xchg
in
xor
xchg
push
sbb
fmuls
rorl
ret
in
sbb
leave
pop
mov
pop
push
and
push
xchg
mov
fs
lea
ret
add
fcmove
lahf
push
movsb
or
imul
outsl
inc
mov
sbb
jae
setb
push
rolb
ja
pop
ret
and
cmp
das
sub
pop
dec
sbb
popa
cmp
pusha
xlat
mov
and
sbb
pop
xchg
add
movsl
jge
xchg
fsubrl
insl
cvtps2pi
pop
out
push
mov
jae
test
test
js
add
sub
or
fiaddl
xor
and
sbb
adc
fnstsw
in
or
and
add
adc
pop
push
add
leave
xchg
cmp
jg
push
icebp
aam
add
inc
scas
sbb
xor
sub
mov
and
add
test
dec
and
adc
popa
adc
fists
or
mov
add
xchg
xchg
das
add
inc
fcoms
pop
adc
xor
cmp
mov
and
icebp
fs
test
jb
imul
fstpl
sbb
pop
mov
ret
scas
fadd
pop
push
mov
add
aas
dec
mov
daa
inc
sahf
push
xor
jle
stos
mov
pop
lds
xor
adc
or
call
aad
and
cmp
push
add
add
xchg
dec
sbb
shrl
pop
cmp
add
cwtl
mov
aas
adc
adc
add
jl
inc
jmp
mov
shr
addr16
enter
lods
cmc
xchg
xor
test
xchg
wrmsr
cmp
push
cld
nop
imul
mov
mov
outsb
and
pop
inc
test
leave
mov
and
dec
push
fsts
shlb
repnz
pop
push
arpl
push
cs
sti
loop
and
dec
dec
cmp
jecxz
addl
js
push
adc
out
or
add
adc
add
sbb
push
fisubrs
loopne
add
sub
mov
pusha
test
or
pusha
fsubr
sub
mov
mov
cltd
dec
fs
dec
dec
cmpsl
and
pusha
xchg
xor
ds
cld
cwtl
sar
inc
ja
pop
or
data16
clc
inc
xchg
add
add
test
mov
add
xor
fisttps
repnz
xchg
add
sbb
mov
mov
sub
and
adc
add
inc
cmpsb
dec
decb
lock
or
lret
add
lds
xchg
sbbl
or
test
rcll
sub
es
loopne
add
sti
adc
hlt
dec
clc
mov
cmp
or
out
ja
add
shlb
add
xchg
jb
leave
sub
sub
cmc
pop
adc
dec
and
jecxz
add
ss
jb
mov
mov
bound
add
subps
push
cmp
dec
adc
dec
mov
loopne
sti
repz
inc
push
lds
fimuls
aad
rolb
jae
insb
nop
loopne
ja
insl
loop
sti
dec
xchg
iret
xchg
push
pushl
shll
pop
push
test
pop
mov
jno
pop
mov
mov
and
xor
pop
outsl
or
aaa
sub
sub
pop
adc
fbstp
xchg
test
push
paddusb
movzwl
cwtl
push
sub
xor
ja
and
mov
mov
xor
fwait
test
mov
iret
lock
add
nop
les
xchg
mov
lock
jmp
adc
lds
push
testl
xchg
cmp
sti
mov
add
scas
test
dec
adc
push
repz
inc
daa
out
xchg
sbb
inc
loopne
imul
mov
clc
test
mov
or
adc
push
and
cmc
sar
js
sbb
or
sub
sti
and
jae
bound
or
popa
pop
push
leave
add
adc
sbb
add
mov
repnz
push
cmp
nop
xchg
arpl
movups
push
mov
sub
out
imul
adc
adc
adc
mov
fcmovb
test
ds
cmp
prefetch
test
test
cmp
test
ret
loopne
mov
sub
sub
sub
dec
push
jno
mov
pop
xchg
sbb
dec
or
cmp
and
mov
sbb
into
pop
loopne
and
arpl
add
adc
mov
lret
mov
dec
cwtl
imul
js
mov
rolb
mov
fcmovnb
je
xor
ja
xchg
aad
cwtl
push
rolb
test
jecxz
rcll
stos
jbe
add
fwait
nop
and
dec
inc
jno
sbbb
pop
push
stos
repz
sbb
rol
mov
fistl
mov
ret
arpl
sbb
bound
iret
scas
and
jl
mov
pop
adc
fiadds
jmp
icebp
subb
pop
mov
adc
jmp
and
adc
mov
dec
movl
fidivrs
data16
rcll
sbb
inc
cmp
inc
test
pop
xchg
pop
sub
or
inc
mov
push
mov
mov
pusha
xchg
push
pop
pop
jmp
aam
add
sub
fisubrl
bound
test
in
jle
xor
dec
mov
loope
idiv
mov
adc
push
in
data16
sub
es
movl
stc
pusha
xor
inc
testl
fbld
push
lcall
cmp
inc
push
cmpsb
cli
int
jb
mov
cld
add
rcr
mov
fs
lea
rclb
in
mov
sub
mov
mov
test
push
sub
jae
ret
cmpsb
iret
push
pop
push
adc
sbb
shrb
jp
dec
cmc
sub
sbbb
out
lcall
mov
add
imul
push
cs
jp
stc
sbb
data16
adc
push
push
sbb
xchg
mov
and
rcr
addb
jl
mov
adc
sub
xor
jmp
adc
cmp
cmp
js
jl
and
sbb
into
repz
jge
inc
pop
pop
add
stos
mov
lods
pop
jae
lret
xchg
inc
nop
inc
sub
jmp
mov
mov
xor
mov
cmc
mov
rorb
ss
adc
inc
filds
test
ljmp
cmp
xor
clc
fcmovbe
fnstenv
sub
out
mov
and
frstor
xor
aam
shll
test
test
pop
inc
adc
ret
test
or
jecxz
adc
loope
xor
fadds
addr16
jo
leave
cwtl
xchg
sbb
mov
dec
xor
inc
push
cwtl
sub
jmp
mov
jb
push
imull
daa
cmpb
xchg
insb
ja
mov
jge
sbb
arpl
xor
dec
frstor
arpl
fiadds
xor
cmp
xor
pop
loopne
into
inc
dec
pop
pop
out
rclb
inc
setae
jnp
xchg
xor
inc
rcll
mov
pop
movsb
xlat
cmp
ficompl
push
dec
aas
int3
pushf
add
in
fisubrl
add
mov
adc
pop
mov
or
pop
out
add
dec
subl
movb
sub
pop
inc
and
hlt
push
sti
mov
iret
add
lret
mov
push
push
mov
js
rclb
jbe
inc
push
dec
fldl
cmc
sahf
adc
push
pusha
mov
xor
out
xchg
sti
mov
test
cli
fwait
xabort
pop
push
add
push
xchg
sub
inc
push
cmp
xchg
pop
dec
push
ret
int
sub
add
sub
mov
add
fs
sahf
pop
cmp
ret
js
fs
xor
test
loope
ja
lret
adc
cmp
and
add
roll
sahf
js
dec
push
xor
call
add
sarl
and
jo
inc
mov
into
adc
popa
mov
fs
add
xchg
jle
pop
xor
adc
not
xchg
iret
jg
enter
inc
lea
rcr
mov
idivl
mov
gs
fs
lods
aaa
sub
mov
fwait
cltd
lea
push
cmp
enter
rolb
aam
or
mov
jmp
pop
xlat
dec
test
arpl
out
in
xchg
mov
mov
mov
out
shrl
xor
in
jne
inc
mov
xchg
fdivrs
aas
or
popf
mov
mov
push
sahf
xlat
sub
mov
add
cmpsb
out
inc
out
ds
and
mov
or
push
cmp
mov
jecxz
push
pop
test
jnp
orl
add
imul
pop
xchg
rcrl
cmp
xlat
jae
push
aad
shll
aas
jne
repz
inc
add
ret
in
dec
and
pop
nop
cmp
mov
mov
clc
lods
sub
call
or
xchg
pop
int
nop
push
adc
sarb
movsl
mov
fsubrl
xchg
cmpsl
dec
sub
in
pop
fadd
push
pop
lods
lret
cmpl
cwtl
movsb
mov
xor
pop
sahf
mov
pop
pushf
adc
mov
mov
scas
enter
shrb
call
popf
lea
out
dec
out
jnp
cmp
gs
sub
cmp
ret
add
mov
neg
mov
push
test
mov
rcl
adc
cld
aam
lods
movsb
in
inc
add
cld
sahf
mov
arpl
out
sbb
stos
xchg
pop
jmp
mov
insb
fs
test
rolb
and
sti
sbbb
dec
movb
ds
enter
ret
arpl
andl
je
inc
mov
adc
and
and
pmulhw
xchg
inc
jae
xchg
and
in
out
push
push
sub
out
xchg
imul
pushf
sub
in
xlat
loopne
push
jmp
repnz
mov
lds
add
enter
xchg
cs
and
andb
stos
icebp
ds
insb
subb
lods
cwtl
xor
add
aad
mov
sub
adc
shl
paddusb
mov
dec
adc
outsl
xchg
adc
mov
lret
mov
or
mov
daa
insb
clc
inc
xchg
xor
or
outsb
stos
xchg
mov
mov
movsb
rorb
dec
pop
pushf
outsl
pop
dec
inc
push
outsb
inc
dec
stos
add
andb
ja
clc
xchg
movsl
hlt
out
filds
pusha
xchg
inc
mov
push
negb
imul
loopne
lds
xchg
test
mov
scas
ljmp
add
lds
mov
xchg
xchg
ficompl
mov
daa
add
dec
xor
iret
sub
movsb
mov
clc
sbb
je
mull
mov
bound
mov
and
pushf
jg
add
bound
adc
or
es
push
lods
stc
sub
mov
popa
mov
inc
xor
cmc
mov
daa
jl
mov
test
gs
xchg
addr16
daa
pusha
lods
shld
sub
aam
or
aas
shrl
data16
inc
xor
aam
mov
sarl
rcrb
mov
mov
jnp
pop
sbb
popa
xchg
mov
leave
inc
and
dec
cld
mov
jno
outsb
insl
cltd
dec
sbbb
xchg
arpl
lret
aad
ja
les
push
repz
jmp
fdivrl
cwtl
lock
stos
or
sarl
out
add
js
aam
stos
mov
inc
and
lods
test
mov
repnz
add
dec
subb
outsl
inc
mov
mov
cmpsb
mov
pushf
das
xor
xor
xor
or
pop
maxps
lods
popa
mov
xchg
mov
sahf
mov
movsb
inc
add
xor
lcall
leave
imul
loop
push
mov
xchg
adc
lock
pop
insb
xchg
jne
mov
shlb
test
rolb
and
mov
mov
mov
test
ds
movsl
stos
aam
sbb
ret
movsb
fstl
fsubrl
aad
mov
adc
xor
mov
imul
jns
pop
lds
inc
xchg
adc
leave
in
and
or
fwait
pop
xor
stos
cmp
mov
xchg
ljmp
inc
fcomp
mov
push
mov
xor
insb
and
scas
cmp
xchg
mov
add
mov
mov
outsl
outsb
movsb
xchg
ljmp
and
aas
in
and
adc
or
dec
fstl
cmpsl
mov
or
xor
sbb
lock
jno
xchg
lock
daa
mov
adc
push
sub
imull
or
jnp
dec
pop
lods
test
sub
jecxz
mov
int
dec
stos
ret
mov
icebp
push
xchg
cmovs
push
cmc
jmp
es
sbb
and
adc
insb
test
test
pop
sub
dec
out
aas
cwtl
aas
jno
mov
jbe
add
push
int
movsl
scas
loop
sub
xchg
inc
les
jecxz
add
inc
push
add
cmpsb
test
aam
bound
mov
mov
mov
je
bound
pushf
pop
pop
fistps
std
push
mov
decb
add
mov
adc
pop
xor
lods
rcrl
cltd
push
sahf
or
out
scas
jb
nop
xorb
inc
mov
xchg
xor
ret
mov
iret
lcall
xchg
sbb
adc
popf
xchg
insl
cli
daa
xchg
jecxz
jp
mov
or
jl
loope
mov
add
idivb
xchg
xchg
cmp
mov
xor
subl
cmp
and
or
std
dec
xchg
mov
sub
insl
sub
test
mov
add
inc
cmp
mov
mov
mov
xlat
popa
sbb
push
mov
lods
outsl
mov
adc
sbbb
adc
mov
mov
mov
mov
pop
mov
pushf
dec
ficoml
shl
pop
faddp
aaa
xor
lods
neg
inc
xchg
jle
mov
mov
icebp
xchg
gs
and
mov
mov
in
mov
nop
aam
jb
mov
adcl
test
jo
mov
scas
add
icebp
and
out
push
mov
subl
in
in
inc
aad
sub
push
xchg
lods
jle
pushf
pop
insb
mov
cmp
jecxz
jle
sub
aam
pop
les
pop
xor
test
cs
inc
fbstp
and
lods
mov
mov
xchg
add
jnp
sub
mov
pusha
xor
pop
je
pop
mov
adc
leave
mov
jae
das
mov
add
scas
in
daa
add
inc
scas
movsb
pop
adc
gs
and
mov
cmpb
mov
dec
mov
sub
mov
xchg
fiaddl
ror
movsb
cmp
adc
movsb
loope
mov
scas
scas
xor
hlt
inc
lcall
cs
pop
sarl
mov
and
hlt
push
and
popl
pop
cmc
addl
fisubs
loope
cmp
pusha
aaa
popf
push
xor
add
int3
test
cmp
cli
fnsave
cli
insb
jge
sub
mov
aam
push
aad
cmp
jmp
clc
push
test
nop
repz
dec
pop
push
lods
test
xchg
lock
xchg
jnp
cmp
inc
jne
xchg
scas
jno
ljmp
push
mov
aam
mov
insb
dec
mov
mov
clc
out
mov
fidivrl
inc
stos
aaa
popa
add
add
push
testb
sbb
imul
and
add
push
ljmp
loope
adc
and
imul
dec
mov
aas
xchg
fs
inc
test
les
aad
mov
xchg
test
iret
mov
movsl
fcoms
sub
fs
das
subl
and
in
push
mov
and
sub
ljmp
adc
data16
mov
add
insb
push
xchg
or
adc
xchg
outsl
mov
mov
mov
xchg
push
sbb
cmpsb
ret
sub
lock
in
inc
or
mov
dec
dec
adc
dec
pop
push
nop
cld
cli
jmp
mov
push
js
adc
mov
cmpsb
dec
adc
stc
jae
jne
cmpsl
lods
sbb
and
cmpsb
inc
dec
cmp
sub
das
xchg
fidivs
lahf
sti
xchg
stc
dec
mov
aaa
adc
or
andl
les
das
mov
div
xchg
xchg
repz
das
jne,pn
and
xchg
data16
push
mov
imul
rorl
and
sbb
cli
fsub
es
dec
sbb
sub
xor
pop
pop
mov
mov
mov
mov
clc
icebp
jmp
inc
sub
lcall
mov
jle
mov
shll
test
adc
push
repnz
fisubrs
mov
xchg
enter
rclb
daa
mov
xchg
mov
jns
lea
mov
mov
flds
push
imul
adc
fstpl
cmp
lods
and
push
ja
js
adcb
mov
movsl
stc
cwtl
scas
inc
mov
jg
jle
pop
mov
mov
ret
mov
std
xor
inc
orb
sahf
bound
cmpsl
or
or
adc
les
mov
leave
aaa
or
xorb
cmp
mov
mov
outsl
in
adc
push
arpl
pop
into
mov
fdivrl
cltd
stos
shll
rclb
insb
sbb
loop
shlb
push
popf
int
aad
fdivrs
jmp
fwait
rclb
cmp
mov
insl
cmp
pushl
jge
xchg
jb
xchg
ss
and
dec
int3
movsb
std
pop
mov
in
inc
or
cmp
mov
test
sub
faddl
mov
jge
jo
js
arpl
jmp
daa
add
push
imul
inc
loop
adc
push
mov
aaa
cmc
mov
add
flds
inc
scas
add
movzwl
xchg
movsl
lock
es
nop
pop
pop
mov
outsl
push
lds
inc
stc
xchg
cmpb
stos
lret
or
sub
pop
lods
je
pushf
test
add
cmpsb
cli
xchg
jo
ja
cmpsl
icebp
jmp
shlb
cmpsb
insb
addb
jne
inc
cs
out
push
jp
jge
or
ret
int
pop
scas
push
mov
insb
pop
cmpsl
cs
sarb
fcmovb
xchg
sub
cmp
mov
enter
adc
dec
mov
push
jae
mov
xchg
test
movsb
push
lahf
and
jp
repz
mov
mov
repnz
test
jg
cmpsl
push
xlat
insl
imul
lods
xchg
stc
aam
test
in
test
mov
pop
rcrl
clc
push
xor
popw
movb
push
inc
or
test
pop
int
inc
outsl
add
push
mov
shlb
out
ljmp
addr16
mov
lods
adc
jg
clc
dec
and
mov
rolb
js
icebp
popf
mov
movaps
xchg
mov
ds
xor
or
mov
test
push
cs
outsl
xchg
in
push
lret
mov
push
jl
shlb
dec
add
pop
ljmp
adc
xchg
dec
jecxz
jbe
xchg
repnz
mov
push
mov
pop
mov
push
xchg
pop
adc
adc
adc
insb
aas
sub
xchg
mov
xor
mov
mulb
add
mov
mov
aam
or
lea
pop
test
rep
or
in
xchg
mov
outsl
aaa
test
pop
ret
push
hlt
jno
cmpsb
inc
das
mov
cmpsl
pop
lds
jp
adc
add
push
xlat
mov
lea
mov
push
insl
add
sbb
subb
lods
xchg
pop
pushf
pop
ret
rorb
out
cmpsl
aas
les
or
lods
pushf
or
int
fcoms
fst
cmc
aad
mov
pop
fidivs
mov
sbb
aas
push
sbb
repz
push
lcall
lahf
enter
inc
jge
inc
mov
pop
stos
pop
jmp
mov
pop
int3
xchg
and
jecxz
pop
mov
cltd
push
mov
pop
sahf
orl
js
push
xchg
dec
mov
lods
in
mull
scas
adc
cmc
out
mov
and
jbe
xor
lods
jle
and
jno
jbe
inc
mov
rorl
xchg
fs
inc
add
cmp
add
fdivl
das
fmull
fadds
outsl
jbe
mov
int
pop
mov
mov
test
pop
lahf
xchg
xchg
xor
fs
aaa
iret
mov
mov
int3
into
push
cld
xor
adc
cwtl
movb
xchg
jb
ss
adc
stos
aaa
xor
mov
or
jl
sbb
xlat
mov
jb
xchg
addl
lahf
ret
aam
xchg
lods
jg
out
outsl
lods
cmp
out
ret
shr
or
mov
cmp
cmpsb
lahf
mov
or
pmullw
mov
in
out
pop
cmp
mov
or
jmp
lea
aam
int
add
lret
loope
stos
push
xor
loope
sub
test
push
sub
xchg
or
fildll
cltd
call
js
xchg
aas
pop
lods
outsl
mov
dec
lds
test
and
cmpb
add
in
mov
mov
rorl
mov
stc
repz
jnp
sbb
jg
data16
out
filds
push
ret
sbb
pop
sbb
rcrb
xchg
test
xor
test
mov
aaa
xchg
cmp
mov
mov
icebp
vandnps
jb
mov
cwtl
push
in
add
fisubs
ds
sbb
adc
pop
push
leave
test
dec
push
pushf
mov
mov
pop
inc
fwait
andb
xlat
cmp
add
jns
daa
insb
mov
push
xchg
mov
pushf
cld
scas
mov
pop
out
cmpsb
in
push
xchg
dec
xlat
clc
js
xchg
push
ret
aam
sti
adc
pop
adc
pop
outsl
and
jle
in
ss
and
mov
jl
outsl
decb
daa
in
lods
mov
insl
or
cmpl
loopne
and
mov
mov
mov
movsb
xchg
cmp
push
pop
mov
mov
in
push
pushf
mov
adc
and
test
add
movsb
lret
xor
sub
sub
scas
dec
or
es
nop
bound
popf
out
es
ss
pusha
test
dec
sub
lds
mov
cmpsl
adc
ljmp
cltd
test
mov
xchg
iret
sub
loope
imul
dec
aad
fstpl
mov
cmp
lea
orb
dec
jmp
lea
jl
cld
sahf
mov
es
sub
dec
cmpb
scas
adc
jmp
icebp
ret
xor
scas
test
bound
push
in
cmpsb
push
mov
int
cld
sbb
sub
xchg
or
sub
or
lds
out
cmp
scas
sub
int3
rorl
xchg
clc
std
mov
mov
jg
inc
push
mov
test
aad
or
out
movsb
fdivs
adcl
mov
es
imul
andb
pop
ja
xchg
cmp
push
sbb
push
push
loopne
push
cmpsl
ja
outsl
inc
into
push
adc
dec
icebp
add
mov
sub
and
mov
mov
icebp
add
outsb
int3
pusha
pusha
cmpsl
and
ss
cmpl
mov
mov
std
and
rolb
or
cli
jge
mov
pop
pop
dec
jl
mov
in
pop
daa
ljmp
cmc
in
mov
jb
dec
xchg
xchg
sub
call
mov
push
xlat
inc
sbb
lcall
sub
mov
mov
insb
mov
sub
mov
cmpsb
testb
test
lcall
or
js
aam
add
sahf
mov
out
jae
sub
push
fldl
roll
mov
adc
xchg
pop
movsb
movsb
pusha
rcr
ss
dec
pop
testl
insb
xchg
jecxz
out
add
mov
mov
xor
inc
pop
and
rcrl
dec
stos
cwtl
insb
es
gs
pmulhw
xor
repz
jmp
mov
leave
loopne
rol
pop
in
into
pop
jg
xlat
enter
shll
aam
jnp
lret
movsl
pop
loope
pop
into
pop
add
test
mov
push
cmpsl
hlt
stc
mov
push
and
test
mov
mov
scas
add
jp
add
mov
popf
cmp
out
test
add
xchg
cmpsb
shrb
nop
ret
or
lock
ret
xchg
xlat
aam
mov
scas
jnp
js
js
or
cmpsl
iret
cmc
mov
aad
insl
lret
ja
fnstsw
data16
test
fs
jl
cld
iret
icebp
mov
imul
lods
pop
dec
inc
mov
repz
mov
icebp
push
es
push
shrl
inc
fnsave
sar
mov
mov
or
les
or
and
movsb
je
es
test
lods
add
adc
xchg
push
push
out
and
mov
sub
mov
add
jo
out
fsubl
lock
push
xor
fldenv
aaa
insl
loop
sbb
adc
stos
test
mov
icebp
push
outsb
aas
mov
xchg
popl
imul
lds
fidivs
adc
gs
mov
jl
movsb
mov
xchg
fnstenv
mov
cmpsb
sahf
divb
mov
repz
mov
push
les
xor
shl
and
fdivrl
sub
cmpsb
lea
dec
mov
jecxz
push
test
insl
xchg
dec
rcll
add
movsb
iret
mov
inc
enter
jle
mov
mov
mov
aam
out
out
das
mov
lods
mov
mov
pop
popf
inc
adc
test
cmpsl
je
sbbl
sub
sub
sahf
insl
hlt
stos
addr16
icebp
stos
mov
fmul
mov
test
sbb
mov
ror
gs
aam
adc
test
fdivrl
addr16
stc
dec
push
push
les
leave
xchg
and
mov
add
sub
xor
mov
xchg
sbb
test
fmull
jnp
pop
outsl
nop
lret
popa
test
ljmp
mov
xchg
sbb
dec
fs
repnz
sbb
testl
popf
dec
cld
xchg
insl
xchg
and
stc
mov
pushf
xchg
cmp
pop
adc
or
test
test
adcl
mulb
fcomps
pushf
clc
push
lods
jle
adc
movb
andb
sahf
inc
push
inc
xlat
test
and
jnp
outsb
enter
sub
or
mov
mov
insl
in
movsl
lods
cmp
push
repnz
mov
into
mov
in
adc
out
mov
stos
jbe
idivb
pop
cmpsb
popf
dec
fucomip
or
shlb
lock
in
pop
add
or
pop
sub
push
pop
inc
xchg
pop
stos
adcb
lea
icebp
add
mov
adc
sub
lea
clc
aas
out
dec
sbb
dec
cmpsb
cmp
stos
xchg
popf
sbb
mov
lcall
jge
aas
aas
cmp
dec
sbb
ljmp
out
movsl
dec
and
xchg
mov
aad
stos
mov
mov
xor
scas
mov
sub
xchg
stos
xor
pop
int3
mov
cmc
lods
jle
pop
lds
cli
sbb
xchg
repz
xor
mov
xchg
orb
popf
jle
add
push
or
mov
lret
cli
nop
loopne
shl
loop
mov
ret
cmp
imul
and
jge
daa
ret
jle
sub
insl
js
int3
xchg
lods
jp
lods
and
cwtl
jo
mov
inc
and
in
mov
lock
add
jno
out
xchg
add
mov
fdivs
inc
hlt
nop
sbb
sbb
sbb
ret
call
push
clc
daa
mov
test
mov
cmp
adc
aad
adc
ljmp
in
es
push
lds
jmp
popa
test
fiaddl
add
jne
add
cwtl
gs
adc
rol
inc
add
adc
subl
adc
shlb
cmpsb
cs
lahf
loopne
call
divb
jne
test
cltd
jno
jge
jl
push
xchg
in
je
sarb
int
mov
mov
arpl
es
int3
cmp
outsl
sbb
mov
xchg
sub
mov
lds
ja
movsb
xor
mov
nop
add
mov
ds
mov
or
jmp
and
mov
enter
shlb
cmp
les
mov
xchg
push
sub
fstpt
dec
push
movsl
lods
pushf
push
mov
cmpsb
mov
inc
fstl
xchg
pop
sbbl
cmp
pop
push
popa
iret
jae
cmp
movsl
lahf
clc
sub
lcall
adcl
les
icebp
jmp
xchg
jmp
inc
jnp
cmpsl
inc
cmpsb
mov
pop
aas
imul
imull
jecxz
mov
mov
jae
inc
call
call
lret
rcll
dec
pushf
fimull
jmp
lret
xchg
adc
sbb
out
mov
add
sub
iret
fs
movsb
pushf
cwtl
push
orb
push
test
pop
shlb
inc
dec
xor
and
lret
push
stos
in
add
xor
out
stos
fstpt
repz
cwtl
mov
add
aad
mov
cmc
loop
jo
adc
dec
jne
out
nop
cmp
lods
cmp
xchg
mov
mov
xor
sbb
call
out
dec
mov
mov
cld
sbb
push
fsubrp
inc
lods
mov
mov
fdivrs
mov
push
lcall
stos
push
cmpsb
repnz
mov
cmp
les
repnz
adc
mov
lds
inc
add
cmpsb
shrb
and
or
mov
xchg
xchg
clc
sub
outsb
enter
scas
cmpsb
repnz
jmp
dec
fwait
adc
clc
arpl
mov
and
dec
mov
icebp
cs
mov
test
roll
scas
mov
xorl
lods
sahf
and
sub
mov
push
push
lret
jae
scas
cmp
lods
mov
insb
pop
fwait
dec
dec
call
lock
pusha
rcrb
xchg
int
xchg
fnstsw
mov
test
jne
jecxz
xor
sahf
pusha
cs
test
xor
lret
loope
aaa
aad
inc
loop
push
sahf
fbld
pop
xchg
push
test
pushl
mov
ficomps
ljmp
test
lods
mov
lea
push
addr16
xor
test
into
ja
roll
xor
xor
movsb
aam
inc
jl
pop
or
sahf
push
adc
mov
pop
adc
inc
jno
mov
ljmp
adc
cmc
aam
adc
or
into
xchg
ss
push
adc
jmp
ds
icebp
mov
pop
or
int3
daa
outsl
jb
leave
test
fisubrl
xor
fisttpl
dec
add
call
mov
shrl
pop
push
dec
testb
rclb
mov
cwtl
xchg
inc
push
xchg
adc
pushw
insl
pop
ret
jno
sbb
pop
mov
xchg
outsl
into
cmpsb
out
mov
jmp
lods
and
sub
cs
ja
mov
ficoml
dec
mov
cmp
adc
adc
outsl
leave
mov
xchg
pop
pop
rclb
mov
ss
mov
push
aaa
jmp
and
mov
xor
int3
sub
js
dec
push
jp
push
push
mov
leave
mov
jns
subb
mov
sti
inc
sub
sahf
dec
cmpsl
cmovp
and
sbb
out
jo
xchg
arpl
inc
mov
in
mov
dec
sbbb
test
je
jecxz
mov
pop
mov
xor
iret
dec
pop
add
out
xlat
push
mov
fisttpl
lret
pop
jno
movsb
or
js
imulb
test
mov
xlat
lock
mov
jae
out
aas
into
dec
xchg
xorb
adc
shlb
sbb
mov
xchg
rcll
cmc
jnp
xchg
iret
mov
push
pop
sbb
pavgw
xor
lods
rcrl
imul
mov
scas
and
les
mov
fs
or
xchg
push
inc
push
jle
cmpsb
outsb
sahf
cmp
pop
xchg
outsb
cli
fwait
sbbl
icebp
dec
fistl
cmp
ss
push
loopne
imul
pop
ficoms
push
cmpsb
push
test
xchg
cmpl
pop
repnz
mov
jnp
ss
or
testl
cwtl
sti
andb
jo
insw
idiv
push
jno
cltd
movsl
fnstsw
jae
jge
in
cmc
xor
adc
push
mov
adc
xlat
jns,pn
mov
imull
sbb
insl
loopne
nop
jbe
ja
cmp
dec
adc
leave
fcompl
pop
test
pop
push
xchg
mov
adc
lods
sti
cmp
outsb
jns
loop
stc
pop
mov
mov
or
push
aaa
fbstp
call
sbb
js
clc
jmp
mov
rcr
cmpsb
add
xchg
xchg
sub
cmpsb
jbe
xorb
data16
xchg
sbb
lds
push
int3
sub
pop
push
inc
sub
xor
aas
aaa
lea
push
shrl
movsl
bound
popa
pop
bound
cs
enter
jns
mov
clc
jnp
mov
mov
pop
out
and
imul
dec
iret
sub
ljmp
inc
mov
addr16
out
popa
or
ljmp
mov
aad
lret
jge
inc
sbb
sub
or
inc
push
insb
mov
leave
mov
repnz
in
jecxz
cmpsl
xchg
fsubs
dec
scas
loopne
push
jne
add
xchg
rolb
aaa
mov
es
mov
cltd
and
ljmp
lcall
inc
roll
jl
rcrl
iret
in
scas
popf
and
xchg
clc
js
jb
jns
lods
add
das
in
push
test
mov
lods
mov
mov
or
out
xchg
fstl
out
jmp
xlat
in
push
adc
xchg
mov
xchg
out
out
xor
insb
push
hlt
mov
ror
add
fs
jno
roll
leave
xchg
sub
stc
xchg
push
clc
pushf
lcall
insl
das
cmpsl
pop
fcoml
je
out
cltd
sub
dec
sub
outsl
rorb
iret
scas
sahf
inc
lods
in
addb
push
xor
fistl
lea
lcall
dec
scas
outsb
xchg
cwtl
cwtl
lcall
fsubrl
cmp
push
add
mov
gs
push
out
sub
fisttpl
jae
jl
aad
addb
test
adc
xor
lods
mov
daa
add
lds
sahf
lcall
mov
shll
xchg
hlt
daa
adc
andb
testl
jno
jo
rcll
enter
in
cmp
xchg
movsl
cmp
add
pop
mov
lea
out
mov
pop
outsl
pushf
movsb
in
mov
aad
push
out
popf
mov
xchg
lods
pandn
les
and
mov
add
outsb
daa
xchg
and
mov
mov
push
test
je
scas
test
adc
es
sbb
int
into
cmpsl
sbb
adc
xchg
cmp
incb
movsl
inc
lods
xlat
push
dec
addr16
xchg
cltd
cmpsb
adc
jp
divb
loope
mov
sti
cwtl
xor
shlb
inc
mov
mov
shll
mov
nop
cmp
les
or
add
mov
subl
adc
sub
stos
mov
out
cs
and
push
ret
xchg
shl
scas
adc
rep
dec
cmp
inc
or
ret
and
int
ret
cmp
cltd
push
lahf
iret
adc
sar
mov
xor
sbb
jno
cs
lds
je
aam
sbb
cmp
sub
jnp
xor
sub
dec
jb
orb
xor
lret
clc
inc
pop
mov
pop
inc
jns
enter
mov
pushf
xchg
xchg
or
fisttpll
mov
pop
and
push
and
or
xchg
test
leave
xchg
test
into
inc
mov
ficompl
ja
sub
mov
mov
scas
xor
jnp
in
test
je
ss
mov
push
aas
movsb
les
outsl
jp
ss
outsl
lock
or
ret
imul
inc
movsb
test
mov
bnd
aam
clc
adc
repz
stc
pop
test
mov
test
test
inc
cwtl
xchg
cmpsb
fwait
pop
adc
rcrb
les
icebp
lret
xchg
insb
or
enter
scas
movsl
arpl
lcall
sahf
hlt
cmpsb
je
int
icebp
or
repz
cmp
mov
mov
sub
inc
pop
dec
gs
faddl
mov
jae
sbbl
mov
cmp
pop
popa
ffreep
push
cmpsl
aad
std
fdivrl
xchg
or
xlat
gs
nop
push
in
mov
sti
xor
lods
insb
imulb
lahf
std
cmpsb
jle
push
mov
jnp
add
scas
xchg
arpl
imull
lods
aad
popf
xchg
add
rcrb
lea
insl
subl
jecxz
xchg
popf
ja
ds
shlb
xchg
cmpsl
xchg
inc
fisubrs
andb
jno
dec
dec
lea
xor
jl
add
scas
in
or
jg
packuswb
in
sbb
xchg
aaa
sub
inc
fisubl
jno
dec
sub
xor
mov
je
ficomps
mov
lds
popf
sbb
iret
dec
and
push
test
jbe
or
cmp
lahf
lds
cltd
test
cmpsb
push
enter
xchg
movsl
pusha
xlat
icebp
pusha
shr
xchg
pop
push
inc
mov
fldenv
out
loopne
sahf
mov
push
test
add
and
cmp
insl
lods
not
push
mov
mov
int3
xchg
enter
mov
adc
pop
popw
push
ss
xlat
das
mov
jmp
aam
mov
aam
mov
mov
in
les
inc
jnp
aaa
push
test
cmp
or
sub
testb
mov
mov
loopne
dec
daa
or
ror
inc
ljmp
arpl
out
cmp
fs
mov
into
and
popf
lahf
jmp
dec
mov
lds
adc
pop
push
sub
mov
or
clc
lcall
or
sbb
ret
xor
add
cmc
out
xor
loop
shrl
and
push
repz
in
in
cltd
sub
addl
nop
repz
rcpps
stc
jp
enter
in
xor
int
pop
xor
pushw
lock
je
push
jb
cmp
jo
push
cmp
stc
fimuls
outsl
movsl
das
cltd
xchg
fdivl
and
adc
push
stos
shlb
pop
pop
rclb
dec
call
mov
add
test
cmpsl
add
jle
sub
fs
adc
mov
dec
pushf
xor
mov
mulb
cmc
sbb
xlat
enter
shl
pop
loope
pop
jg
cmc
out
dec
push
negl
and
cmpsl
inc
xchg
dec
loopne
push
leave
and
mov
in
adc
mov
pshufw
adc
mov
testl
lcall
sub
sahf
inc
xchg
rorb
aad
sub
mov
adc
test
aas
mov
outsb
int
mov
and
aam
outsl
mov
add
xchg
sub
push
bnd
ret
ljmp
ljmp
imul
stos
dec
clc
outsb
test
cltd
test
sub
test
notb
js
sbb
and
imul
pop
mov
mov
cmpsb
and
loope
jb
aas
xchg
bound
sahf
add
adc
jmp
or
adc
jecxz
les
jne
and
into
xchg
cmp
in
add
out
mov
in
sub
mov
mov
je
mov
sbb
mov
lret
pop
pop
test
jg
or
mov
mov
int
sub
sbb
dec
into
jle
mov
cmpsl
xchg
int3
jecxz
jb
mov
xchg
int
jp
or
in
and
pop
and
test
inc
sub
pusha
pop
clc
out
or
dec
nop
mov
ret
scas
sbb
fwait
or
repz
loope
adc
jmp
cli
or
pushf
lahf
inc
aaa
cmp
int
cwtl
daa
fwait
int3
mov
ret
cmpl
mov
mov
add
mov
mov
pop
and
xchg
dec
movsb
sbb
ficoms
repz
rorl
mov
push
rcrb
dec
outsl
lods
or
insb
ljmp
cmp
jb
jle
lock
pop
adc
xor
iret
mov
fs
je
addr16
stos
xchg
jl
push
aam
daa
lea
lret
imul
rcrl
xchg
ss
stc
sub
adc
cld
ret
mov
adc
test
push
popf
sar
faddl
movsb
cmpsl
push
cmp
xchg
and
test
loopne
xor
in
push
ficoml
xor
adc
xchg
add
jl
in
or
nop
xchg
mov
inc
mov
pop
aas
orl
aas
clc
push
xor
mov
xchg
lds
xchg
loopne
mov
in
lods
lret
cmp
xor
leave
mov
aas
sbb
in
int3
mov
push
sbb
fst
mov
adc
mov
aam
int3
pop
les
pop
or
jl
lods
push
mov
aad
adc
mov
dec
js
jg
mov
push
push
test
mov
mov
in
jne
scas
cmp
scas
mov
or
xlat
jl
in
inc
enter
and
mov
pop
hlt
xor
sub
and
jl
pushf
mov
cmp
mov
sbb
movb
jo
or
andl
scas
xchg
movsb
nop
mov
or
test
mov
loop,pt
popf
inc
adc
inc
pop
mov
jb
adc
aam
pop
fcoml
or
and
ja
jo
ret
push
cmpsl
fistl
pop
not
mov
loopne
push
jp
inc
push
fs
inc
addr16
pusha
sahf
popa
xor
ret
lret
das
imul
aaa
sbb
jmp
and
adc
std
divb
lcall
test
push
outsl
push
leave
pop
aad
adc
mov
cmpsl
lock
addr16
mov
loopne
push
inc
ss
in
inc
dec
pop
dec
sahf
dec
xor
ret
loope
push
jecxz
push
mov
push
test
xchg
inc
test
mov
ds
adc
mov
cmpsl
xchg
adc
xor
adc
xlat
repz
push
xchg
push
xlat
xchg
test
icebp
movsb
sub
jecxz
or
mov
out
nop
das
xchg
data16
cmp
xchg
mov
rcll
loope
lock
jmp
fsubr
rcl
push
test
sbb
adc
xchg
mov
loope
hlt
or
push
adc
fdiv
cmp
push
jmp
mov
lret
pop
not
test
ret
neg
mov
jno
or
xchg
jl
or
push
sbb
notb
call
scas
loop
mov
cmp
xchg
call
fcmovnb
arpl
xor
mov
adc
out
dec
ljmp
popa
mov
cmp
dec
push
pusha
jg
or
mov
into
mov
xchg
or
movsl
stc
shl
jo
test
dec
ljmp
out
lcall
mov
or
inc
lock
fidivl
das
pusha
or
subb
cmp
fadd
fs
adc
dec
mov
inc
mov
hlt
mov
cmpsl
lahf
fsubrl
push
jbe
adc
cmp
adc
xchg
or
and
faddl
insb
scas
int3
mov
loopne
fstl
lock
jl
or
aam
jmp
loopne
sbb
mov
mov
cmp
xor
sti
stc
not
push
pop
rcrl
lahf
jl
xor
shl
xchg
rcll
cmc
xchg
repz
and
dec
rcl
rcr
lods
xchg
loop
dec
hlt
das
test
call
xor
dec
push
test
imulb
lret
loope
pusha
aaa
mov
inc
and
cwtl
or
or
mov
hlt
lock
out
dec
lods
xchg
aaa
in
jno
iret
add
mov
scas
out
lret
cmp
shll
xor
icebp
in
mov
lea
out
pushf
mov
mov
aas
mov
jmp
push
outsl
rcll
adc
mov
hlt
divb
testl
es
mov
sub
inc
sbb
fsts
arpl
loop
jne
mov
lods
xchg
movsb
stos
sbb
out
mov
hlt
std
pop
jecxz
ret
mov
mov
lcall
call
adc
gs
sub
loop
ja
fldenv
stos
mov
inc
cwtl
jb
lds
jge
sub
jo
mov
jmp
ficoml
pop
jge
out
mov
jl
lods
into
mov
insl
jl
into
inc
sub
fisubs
rolb
mov
dec
fstl
test
in
out
pop
test
sub
pop
lea
and
sbb
push
jne
imul
mov
icebp
sub
fiadds
cmpsb
lcall
movsb
or
mov
into
pop
jle
add
loop
fcmovb
xchg
lock
sbb
mov
mov
mov
lods
dec
popa
ret
jmp
inc
jnp
dec
fisubrl
popa
add
lods
sub
add
enter
movsb
repz
mov
loop
or
es
repnz
outsb
pop
lret
mov
cmc
inc
jns
mov
mov
pusha
lret
sub
mov
push
aaa
cmpsb
xchg
mov
lcall
pop
repnz
int3
jae
xorb
pop
out
mov
addr16
adc
out
push
lods
aad
xchg
aad
mov
movsb
bound
jne
pop
or
push
inc
dec
jbe
xor
and
jl
mov
popa
fiaddl
gs
inc
aas
xor
mov
das
arpl
xchg
xor
aad
mov
mov
mov
inc
test
ret
xlat
das
sti
push
jno
pop
jae
mov
bound
pushf
cmpsb
loope
cli
pusha
mov
mov
push
cli
push
dec
fildl
mov
xchg
pop
adc
ficoml
cmp
push
pop
in
lahf
dec
sbb
mov
add
cltd
xor
dec
sub
mov
add
daa
int
inc
popa
push
cwtl
das
in
repnz
inc
cmp
jae
pop
notb
or
xchg
jecxz
js
xchg
stos
jno
lods
pusha
dec
outsb
aas
test
and
clc
mov
icebp
aas
nop
repnz
out
pushf
dec
fimull
fcom
call
cmp
dec
mov
mov
ficoml
imul
cmpsl
add
inc
lcall
fwait
addl
jle
pop
je
jge
mov
shlb
mov
test
dec
push
insb
or
jae
aas
xchg
mov
iret
pop
fs
out
jmp
jae
fistps
data16
mov
xchg
pushf
push
rcll
sahf
lds
mov
rcll
mov
sub
cmp
gs
adc
dec
ljmp
xchg
sub
or
sarb
jmp
cmc
jo
les
icebp
sbb
pop
subl
cmp
dec
js
xchg
inc
push
repnz
or
ja
ja
xor
frstor
pop
pop
xchg
xor
add
rcll
add
inc
popa
jno
call
mov
aam
jno
adc
pop
inc
hlt
out
and
pop
and
clc
inc
jge
aam
sbb
jmp
in
cld
and
test
add
mov
stc
pop
std
shll
cld
out
fsubrs
jmp
ss
push
stos
xchg
xchg
sub
or
push
in
nop
test
ljmp
mov
xchg
movsb
cmc
jmp
fdivrs
pop
pop
or
jl
out
mov
testl
out
and
mov
aas
xchg
ret
pop
push
add
aam
into
cmc
sbb
push
xor
xor
and
fs
push
cmp
sub
inc
out
fidivs
test
cmpb
aas
movsb
sti
inc
jg
stc
das
push
or
fimull
insb
aad
inc
push
aad
sub
lods
and
mov
out
mov
jnp
fistps
repz
repz
xchg
dec
pop
adc
pop
adc
dec
add
xchg
fidivrl
push
test
es
push
stos
mov
adc
in
icebp
fimuls
dec
shlb
mov
mov
insb
aad
inc
jle
mov
addl
fmull
sbb
jo
dec
xorl
lret
stos
add
mov
icebp
jg
jg
mov
int3
gs
cmpsl
imull
mov
add
arpl
daa
or
sub
and
hlt
mov
mov
je
xchg
daa
adc
je
mov
xchg
cmpsl
mov
xchg
notb
add
in
lods
test
mov
jnp
les
lods
mulb
push
xchg
pop
pop
cmp
inc
rolb
add
lods
mov
aam
jge
pushf
arpl
mov
mov
push
cmpsl
mov
mov
or
outsl
lea
adc
loope,pn
aam
loopne
lea
xor
pop
movsb
pop
insb
xchg
ret
repnz
and
add
inc
jle
push
jae
mov
mov
or
test
jo
add
or
mov
lods
jmp
in
mov
xor
adc
mov
jmp
pop
xchg
into
add
ss
aaa
je
mov
cmc
mov
cmpsb
xchg
out
and
mov
int3
int3
cmpsb
xchg
adc
je
nop
in
mov
movsl
das
lds
xchg
outsl
outsl
adc
adc
jp
lock
and
or
jmp
cld
push
jnp
cli
es
lea
lahf
mov
jnp
pop
inc
jbe
mov
mov
push
jmp
pop
or
sbb
pop
aam
push
fisttpl
pusha
jge
xchg
mov
test
sbb
sub
and
bnd
repz
ret
ret
xchg
lret
push
leave
dec
push
fdivs
sub
mov
mov
lahf
out
cmp
int
ja
and
rclb
pop
pop
pop
popf
xchg
pop
mov
xlat
test
or
push
mov
inc
xchg
mov
ret
scas
das
fdivr
inc
imul
daa
loop
xchg
nop
jne
jle
xor
mov
cld
out
inc
out
mov
dec
dec
test
out
movsb
jle,pn
adc
jno
adc
aad
add
subb
roll
xchg
or
insl
xor
je
aas
jbe
pop
push
lahf
jge
mov
sahf
mov
leave
rorl
and
addr16
aam
outsl
jnp
sbb
sub
gs
outsb
outsl
xchg
out
scas
cmpsl
popa
pop
cli
fisubrs
bound
mov
push
sahf
stc
ret
push
jp
lea
add
es
push
gs
xchg
mov
jb
mov
xchg
mov
aaa
stos
lods
jmp
stc
mov
jno
mov
mov
testl
in
imull
xchg
outsb
fucomip
mov
daa
dec
push
insl
movsl
arpl
xchg
fdivl
push
inc
stc
lods
adc
mov
or
jg
push
jl
pop
push
pop
shrb
sub
jbe
adc
sbb
push
popa
or
inc
mov
pop
roll
mov
push
pushf
or
ficoml
push
cmpsb
stc
insb
xor
jge
fidivrl
in
pushf
add
mov
in
orl
push
cs
rol
dec
cmp
or
fwait
ds
mov
call
sub
scas
bound
cli
movsl
aaa
test
cmpsb
cli
in
lahf
cs
rclb
loope
test
popf
les
insb
dec
mov
in
shl
sahf
lret
out
orl
push
in
lock
dec
xor
push
outsl
mov
iret
and
movsl
cltd
scas
jge
clc
xor
lret
adc
cmpl
pop
mov
xor
pop
xchg
pop
data16
scas
xchg
sbb
arpl
dec
das
in
sub
mov
xor
shl
cwtl
sub
sbb
std
cltd
scas
xchg
adc
dec
pop
shll
lods
push
insb
fsubrl
sarl
mov
scas
mov
lods
dec
int3
jne
rorl
mov
push
nop
movsl
addr16
lods
int
mov
divl
jle
inc
inc
imul
icebp
mov
test
jbe
nop
insb
icebp
pop
stos
mov
cmp
out
adc
popf
cmp
cmp
daa
mov
addl
add
test
xor
mov
jo
lcall
mov
lea
or
cld
and
jnp
or
in
mov
sti
mov
lret
movsb
push
xchg
fmuls
repz
sub
jl
inc
int3
mov
sbb
lahf
xor
movsb
mov
sub
rclb
xchg
aas
add
pop
xchg
clc
mov
js
cvttps2pi
insb
inc
in
xchg
dec
xor
nop
xor
add
xchg
or
sub
test
dec
jns
mov
adc
sahf
push
inc
in
inc
inc
sub
imulb
into
inc
cmp
jl
les
xorl
adc
add
pop
mov
fcmovb
invd
rorb
jg
mov
inc
jb
cmp
ror
rorl
imul
repnz
dec
push
testb
push
imul
inc
mov
mov
test
sbb
outsl
xchg
inc
xchg
pop
imull
xchg
scas
std
sub
cltd
mov
daa
pop
pop
xchg
and
addb
mov
shlb
call
xchg
lods
xchg
sahf
repz
dec
inc
push
lods
sbb
push
nop
jg
cmp
or
jne
xchg
icebp
mov
imul
cs
xchg
hlt
xchg
int
push
pop
ret
and
loop
ret
andb
and
lea
test
es
addr16
adc
lods
leave
test
scas
ror
shll
fwait
sbb
and
pop
sahf
xor
int
and
lret
inc
pop
inc
push
stos
jle
scas
mov
divl
and
and
pop
les
lahf
push
cmpsb
and
stos
movsl
add
into
push
xor
and
mov
adc
outsl
sub
fwait
movsb
movsb
out
ret
mov
shlb
test
dec
popa
aam
insb
daa
aam
pusha
push
cs
push
js
into
pushf
add
or
mov
jae
jmp
jne
repz
inc
sbb
or
jbe
sbb
xchg
mov
std
insb
push
xchg
sbb
xchg
mov
adc
mov
mov
mov
dec
imul
cmp
inc
xchg
shl
push
push
push
jb
int
movsl
scas
cmp
push
sbbb
enter
xor
pop
sbb
pop
inc
mov
xor
insb
movsb
out
loop
sti
mov
mov
pop
mov
stc
pop
test
push
and
cwtl
jmp
xchg
outsb
mov
pop
test
stos
clc
and
jg
pushf
lret
js
dec
pushf
fsubrs
pop
repz
xchg
out
lds
test
xchg
pop
lds
dec
dec
add
movsl
int
inc
ds
jg
in
fsubr
arpl
sbb
mov
pop
pushf
mov
lds
add
sarb
push
mov
mov
add
mov
loopne
insb
adc
in
loop
aaa
jmp
out
sbbl
sbb
sahf
add
pop
sub
mov
test
xchg
or
or
and
sbb
ret
mov
mov
outsl
pop
mov
fcoms
flds
outsb
mov
xchg
hlt
insl
pop
cs
and
add
pop
pusha
mov
xchg
fldt
insl
icebp
sbb
test
xchg
push
imul
dec
xchg
adc
add
lods
xor
int3
dec
mov
pop
pop
inc
lea
sub
mov
lods
data16
fidivrl
bound
dec
neg
jno
orl
ja
stc
xchg
gs
push
dec
add
xor
mov
mov
add
out
inc
pop
mov
and
cmpsb
xor
mov
ficompl
aad
xchg
fstpl
jp
stos
push
jnp
add
fnsave
sbb
test
in
xor
jle
daa
shlb
sub
jmp
sub
jp
xor
pop
dec
aam
jnp
shlb
mov
or
pop
outsl
movsl
fsts
mov
icebp
jbe,pt
and
sbb
lea
movsb
mov
movsb
insb
xchg
mov
xchg
dec
sbb
inc
outsl
adc
xchg
xlat
cmc
sbb
outsb
and
loopne
dec
mov
cmpsb
push
sbbb
outsb
pusha
lcall
std
insl
lret
adc
les
dec
inc
mov
adc
scas
je
stc
lea
pop
cmp
lret
cltd
jecxz
lds
bnd
inc
add
cmpsl
push
xchg
and
inc
push
jp
jne
push
repz
mov
sub
movsb
push
jae
push
mov
mov
mov
dec
mov
cmpsb
out
push
cmp
scas
mov
fimuls
lods
call
mov
mov
lds
dec
test
popf
pop
add
xor
dec
adcb
fwait
out
adc
xorb
adc
push
dec
pop
cmp
inc
ds
inc
inc
out
stc
je
out
testl
movb
gs
or
in
xlat
sub
mov
sbb
movsl
div
cmp
adc
stc
cs
rep
ja
in
cmpsl
jae
xchg
mov
lods
xchg
fisubrl
cli
imul
sbb
mov
leave
mov
shrb
imul
test
sbbl
pop
in
mov
push
addr16
jo
xchg
cs
fisttpll
repnz
mov
push
xchg
sahf
or
add
mov
jo
inc
pop
push
xchg
dec
rcrb
xchg
aad
xchg
inc
dec
repz
les
pop
stos
test
xchg
pop
push
call
xchg
test
push
jecxz
shrb
shll
sarb
sub
dec
dec
cmp
pop
jns
mov
adc
inc
inc
adc
xchg
div
and
add
and
daa
testl
or
mov
lea
xor
jle
lock
mov
mov
sub
jbe
lds
jmp
shrl
xchg
push
and
cmp
repnz
mov
outsl
jnp
mov
pop
dec
xchg
jno
fst
subb
adc
mov
outsl
xchg
push
add
mov
pop
arpl
movsb
dec
sub
mov
cmp
lahf
fiadds
and
ret
test
add
jne
testl
test
repz
add
sub
mov
into
es
push
mov
cmp
cmovge
lea
imul
arpl
mov
xchg
popa
jl
nop
scas
scas
mov
std
inc
cltd
movsb
xorb
insb
xchg
dec
pop
shll
movsb
push
jp
adc
cltd
xchg
inc
add
out
xor
cmp
cmp
xor
jg
cwtl
mov
pop
fisubrs
push
jp
jmp
sbb
and
icebp
cmpb
lods
mov
push
movsb
movsb
mov
jmp
or
or
xor
mov
xchg
sbbl
movsb
adcb
add
dec
pop
or
mov
out
sub
pop
ljmp
cltd
xor
pop
test
stos
and
and
jnp
jp
popa
mov
xchg
scas
mov
jae
xchg
rclb
mov
loopne
out
push
dec
lock
lods
enter
mov
sahf
dec
call
into
lds
or
mov
les
int3
scas
mov
add
aaa
mov
ja
or
into
dec
nop
fnstcw
sub
arpl
dec
ret
sub
dec
in
add
pop
aad
push
and
idivb
mov
stos
roll
decb
jmp
xchg
gs
lods
adc
sahf
dec
jle
push
shll
dec
je
adc
dec
fists
into
mov
adc
or
dec
ret
jg
jl
xchg
aas
sbb
cld
pop
inc
clc
and
inc
mov
mov
shr
jg
les
int3
lods
mov
insb
loopne
sub
inc
jg
sti
scas
mov
lods
or
jne
mov
push
rcll
scas
dec
jns
pop
call
sbb
or
rcrb
cmpsb
mov
and
or
std
movsb
out
daa
shlb
pmaddwd
lods
mov
rorl
dec
and
in
test
outsl
mov
adc
repnz
test
movsl
loopne
lea
inc
mov
mov
cmp
xor
dec
andl
lea
gs
pop
or
cli
mov
or
xchg
mov
inc
outsb
mov
mov
push
add
mov
mov
cld
or
stc
xor
pusha
aam
xlat
cmc
mov
je
js
vpcmpeqd
adc
loope
adc
mov
push
dec
ljmp
inc
xor
cmc
test
cmp
andb
push
xchg
out
mov
ret
movsb
dec
fisttpl
mov
jmp
and
inc
call
push
xlat
out
inc
insb
in
xchg
pop
lret
add
xchg
hlt
or
inc
fwait
cwtl
mov
test
push
xchg
arpl
pusha
loopne
sbb
in
and
mov
push
movsl
popf
xchg
inc
dec
andb
or
add
test
std
mov
mov
push
dec
sub
aaa
jp
jb
nop
test
ret
mov
lea
fistl
pop
les
nop
aas
sti
mov
or
jmp
or
add
pop
pushf
pushl
mov
mov
lahf
or
test
js
and
je
inc
test
mov
js
stos
push
iret
adc
stos
xchg
cmp
pop
xchg
adc
jp
sbb
es
mov
loope
lea
std
mov
push
jp
ret
jmp
das
rolb
sub
ja
lahf
sbb
insl
xor
dec
aas
into
jno
cmp
add
das
add
add
adc
fldcw
mov
adc
pop
mov
psraw
jmp
out
aaa
jmp
adc
gs
outsb
sahf
mov
rcrl
pop
cmpsb
sbb
rcr
sbb
je
xchg
push
scas
sub
inc
gs
daa
js
or
repnz
jge
cwtl
xchg
or
push
and
cmp
inc
xor
mov
out
popf
xor
lret
dec
or
mov
xchg
out
call
daa
loopne
dec
jo
mov
std
in
repnz
and
mov
fidivs
test
push
pushf
sub
or
jecxz
pop
cli
mov
ret
test
and
add
js
fwait
movsl
mov
mov
sub
cmpsl
push
aaa
call
daa
aad
mov
mov
in
and
movsl
mov
add
jne
cmp
or
push
jno
mov
mov
mov
mov
mov
and
les
mov
add
jae
add
sti
movsl
jp
cmp
testb
outsb
dec
cld
jle
jl
loop
mov
movl
jmp
push
stc
movsb
lret
dec
add
aas
push
lods
mov
mov
rolb
addl
rol
dec
test
adc
push
jle
in
dec
das
lea
repnz
gs
int3
loope
mov
adc
push
in
and
cmpsl
mov
lcall
addb
mov
mov
enter
insl
sti
into
cmp
push
repz
add
mov
pop
andl
adc
nop
ja
lock
fs
xor
and
and
pop
mov
mov
or
popf
mov
imul
idivb
lock
fs
icebp
icebp
fidivrs
inc
in
fcoml
sbb
pop
outsl
xchg
push
sub
std
scas
fnstenv
mov
sbb
daa
and
adc
hlt
lcall
mov
sub
dec
lods
cmpsl
rclb
pop
test
aaa
das
rcl
mov
or
xchg
xchg
push
cmp
shrl
xor
outsl
sub
push
adc
sub
sub
pop
xchg
iret
dec
lods
rorl
lea
mov
and
mov
aas
test
lods
sub
and
enter
mov
push
pop
xchg
sub
sarl
sbb
test
cmp
add
and
stos
sub
xor
ds
les
pop
fildll
lds
push
sub
adc
stos
push
movsb
call
or
or
sub
pop
mov
mov
lods
xchg
lcall
daa
mov
add
jnp
lahf
hlt
daa
maskmovq
testl
out
dec
pop
popf
and
adc
movsl
mov
adc
pop
xchg
stos
popf
sbb
push
inc
adcb
data16
mov
out
lea
pop
ss
jnp
test
test
lock
pop
mov
les
cmp
loope
dec
mov
out
jecxz
push
mov
enter
xchg
iret
mov
icebp
iret
outsl
sbb
stos
push
cmp
mov
or
insb
out
pop
sbb
scas
mov
es
scas
fcmovne
cmp
cwtl
je
dec
iret
dec
mov
jo
xor
xor
mov
xchg
sub
push
into
leave
enter
xchg
inc
es
cltd
add
cmp
pop
lret
mov
sahf
mov
mov
jae
mov
push
std
pop
pop
inc
call
mov
dec
adc
push
sub
test
adc
aad
sbbl
mov
aas
cmpsb
jl
daa
cmp
dec
in
inc
mov
add
arpl
lret
fwait
std
lods
xor
cld
inc
test
cmpsl
sub
mov
in
out
jo
ret
aad
dec
into
dec
dec
adcb
call
xchg
sbb
xor
cltd
test
jge
lcall
int
test
pop
call
mov
loopne
and
jmp
add
dec
sbb
xchg
ret
pop
aam
in
mov
mov
aam
mov
and
popf
dec
mov
adc
jle
sbb
aam
repz
xchg
fidivrl
cmp
inc
push
and
inc
or
dec
daa
outsl
mov
fisttps
push
daa
cmp
jae
arpl
sub
lods
mov
int
movsl
mov
jecxz
cs
inc
ret
cmp
outsb
loop
push
rolb
xchg
cwtl
imul
sub
and
or
mov
std
ds
xchg
jg
ret
cmp
pushf
out
xor
mov
test
mov
aaa
movsl
gs
repz
push
mov
add
inc
sbb
jae
jne
addr16
jge
aaa
adc
cmp
xor
movsb
mov
rorb
lods
out
pushf
mov
jge
cmp
xchg
out
js
mov
les
push
inc
mov
cld
dec
je
mov
movsl
popf
arpl
in
insb
xchg
cmp
jo
or
xchg
xor
negb
movsb
jl
pushf
cmc
or
loopne,pn
mov
stos
dec
or
mov
jmp
inc
orb
mov
cmp
aam
mov
stos
xor
in
xor
pop
inc
ret
add
cmpsb
cmp
jmp
cwtl
xor
or
jmp
movsl
or
cs
mov
or
movsb
nop
jmp
push
or
lods
popa
mov
or
movsb
pop
jmp
inc
or
cs
or
jmp
insl
cmovae
adc
js
or
add
popa
cmp
lea
imul
mov
test
mov
xchg
pop
je
scas
fldenv
arpl
xchg
xor
add
xchg
pushf
cmp
or
call
outsl
flds
int3
test
jmp
test
das
sbbb
xor
outsl
and
pop
fdivrl
sbb
adc
movsl
movsl
loopne
test
aaa
or
xchg
mov
inc
ret
nop
add
enter
shlb
lds
dec
clc
xchg
imull
push
add
mov
or
les
inc
iret
lret
mov
xlat
loopne
cmp
in
lock
rcr
jg
aam
jbe
out
mov
leave
pop
or
test
insb
pusha
push
inc
rep
jg
dec
repz
fstpt
clc
in
and
test
push
repnz
sbb
pop
movsb
pop
pushw
mov
test
mov
mov
sub
mov
das
jae
mov
pop
data16
cmp
cmp
scas
dec
test
outsl
mov
jnp
xor
jle
out
stos
fstpl
into
add
popa
adc
mov
cld
add
lock
mov
repz
stc
push
insl
adc
pop
addr16
cmp
mov
ret
es
inc
aas
jnp
jo
icebp
cwtl
inc
push
bound
sbb
int3
scas
push
mov
mov
and
rcrb
mov
loopne
adc
push
jle
andl
jo
out
jbe
shl
push
or
ljmp
cmp
or
push
lret
adc
dec
cs
je
cld
cmp
xlat
icebp
repnz
insb
lock
pop
cmp
jl
nop
xchg
gs
rcrl
je
add
inc
subl
add
sub
sub
cs
sub
jne
push
icebp
test
mov
fdivrs
mov
fldt
hlt
jecxz
pop
sub
or
and
insl
loop
sub
fstps
mov
and
jbe
mov
jge
sub
jno
test
dec
cmpsl
push
int
lret
imul
or
adc
aaa
jle
xor
adc
sub
pop
movsb
ja
in
scas
es
jo
adc
jns
loope
rcll
lods
add
stos
jmp
cmp
inc
lea
lret
xor
sbb
mov
enter
pushf
aad
pop
add
cwtl
and
mov
or
das
cwtl
imul
or
mov
adc
dec
in
lea
test
pop
push
mov
loope
xlat
out
bound
pop
inc
nop
pop
scas
dec
inc
inc
test
psubusw
lret
xchg
push
popl
outsl
jbe
mov
push
or
cltd
inc
pushf
cmp
loope
push
nop
mov
cmpsb
jp
jnp
mov
mov
rclb
aaa
push
outsb
clc
pop
roll
xchg
xchg
or
les
shl
arpl
jge
or
shlb
or
scas
mov
std
sub
and
cmpsl
push
mov
push
out
add
repnz
mov
pop
lods
into
pop
lock
sti
push
cmc
loope
leave
sbb
test
jg
mov
fs
dec
mov
std
ret
inc
dec
sub
push
fstl
out
sub
xchg
jae
pop
jae
dec
mov
xchg
pop
or
js
jp
fstp
lea
inc
jne
pop
das
push
xor
sub
aas
arpl
inc
cmp
push
cli
lods
es
xor
shll
outsl
imul
rolb
xchg
and
rolb
and
lcall
mull
mov
das
mov
shlb
xchg
das
cmpsl
test
pop
add
jmp
popa
lcall
sbb
or
test
push
xchg
insb
xor
rorl
and
rcrb
push
ret
cltd
gs
int3
cld
sarb
cmp
sub
mov
jb
mov
out
loope
mov
xchg
xchg
outsb
pop
mov
mov
imul
dec
cmp
fildll
sahf
dec
insb
addr16
into
je
adc
movsl
push
pusha
test
jns
jge
push
out
adc
ds
jg
stos
mov
jne
imul
xor
int
ret
dec
mov
je
inc
int
push
xchg
es
adc
je
in
jae
enter
in
or
push
das
sbb
inc
xchg
mov
and
add
xchg
and
dec
dec
inc
cmc
out
push
insb
cmp
mov
movsl
outsb
scas
cmpl
jmp
jb
in
in
aam
lock
roll
into
lock
xchg
pop
std
lock
xlat
imul
mov
aad
or
xlat
lock
xchg
movsl
xchg
popa
adc
cmpsb
xchg
loop
add
mov
mov
leave
hlt
aad
adc
mov
cmpsl
gs
xchg
testb
loopne
pushw
fisttpll
loopne
push
fs
in
inc
dec
pop
mov
jg
test
sbb
dec
test
aas
push
insb
js
inc
mov
cmp
test
push
sub
hlt
movsb
pop
xlat
movsl
mov
leave
in
fcoml
mov
cmpsl
adc
pusha
xchg
cmpsl
cmp
sub
inc
dec
push
add
xor
movsl
lock
data16
lea
xlat
jno
outsb
rcrb
stos
cmp
fidivrl
shrl
or
dec
sub
nop
movl
inc
mov
cmp
cs
adc
mov
sbb
out
addr16
inc
pushf
add
jl
mov
fsubr
rclb
push
popf
mov
sub
cmpsb
movsl
and
push
cli
mov
push
xor
xchg
pushf
mov
idivb
cltd
xchg
outsl
lcall
and
ds
cmp
sub
jb
sub
xor
jecxz
push
pop
xchg
mov
sbb
pusha
movsb
xlat
sahf
shrl
xor
fmuls
test
dec
shll
add
cmp
mov
cmp
cmp
add
adc
xchg
mov
adc
cmpsb
cmp
xchg
test
mov
push
stc
jne
xlat
stc
inc
mov
mov
xchg
shrb
sbb
add
xchg
fisubrl
lahf
addr16
cmp
popa
add
mov
push
subl
mov
outsb
sbbl
clc
jnp
arpl
rolb
icebp
add
fcmovnb
mov
hlt
mov
xor
sub
mov
ss
jo
test
mov
fildl
lock
xor
nop
pop
or
mov
mov
les
sbb
shl
push
nop
stos
int3
test
add
mov
xchg
fwait
push
mov
shll
push
out
push
imul
sub
addr16
and
cmpsb
jl
imull
or
movsl
pushf
sub
ljmp
pop
or
sti
mov
insb
cmp
xchg
insl
call
xor
in
inc
lods
and
test
add
and
movsl
and
fisubl
dec
pop
imul
lea
cmp
xchg
sub
cmpb
inc
sbb
and
xlat
sub
push
test
adc
cmp
jnp
mov
add
pop
scas
cmp
inc
addr16
rorl
mov
mov
aaa
dec
test
lds
popa
les
hlt
mov
das
xchg
jge
outsl
ljmp
cld
xchg
mov
push
les
clc
or
jecxz
and
outsl
cs
xchg
or
cmp
rcrb
push
cmp
sbb
shlb
ds
pop
push
in
popf
pop
add
push
rcrb
mov
dec
adc
repz
movl
xchg
lret
push
mov
cmp
mov
cld
cmp
sub
aam
icebp
out
test
mov
fistpll
and
cmp
xchg
imul
and
mov
cs
pmaddwd
cmp
push
push
mov
jne
leave
dec
ja
daa
push
or
mov
cmpsl
fwait
sbb
xchg
adc
js
or
js
mov
lcall
pushf
inc
or
nop
mov
mov
and
sub
mov
lret
inc
and
cmp
push
xchg
push
jg
lock
sub
ljmp
mov
or
in
lock
fadds
and
ret
push
sbb
jns
andb
xlat
mov
xchg
stos
mov
xchg
jle
movsl
mov
adc
fwait
xchg
jmp
es
jg
mov
cmp
add
adc
cmp
ret
popf
xchg
arpl
test
xchg
lods
cmp
xchg
lods
sbb
loop
mov
pop
hlt
push
and
xchg
scas
es
mov
int
or
jmp
pop
mov
inc
cmp
aam
dec
xchg
fs
ss
fldt
stos
or
push
nop
movsb
pop
fdivl
xchg
push
pushf
and
push
inc
test
out
inc
mov
cld
add
cli
push
mov
lds
mov
xchg
push
inc
xchg
xor
sbb
rcr
xor
in
divl
jae
adc
adc
popa
mov
stos
xor
ds
call
cmp
cmp
cmp
cmp
pusha
je
inc
cmp
push
je
orl
mov
cwtl
mov
mov
movsb
mov
or
movsb
mov
or
lods
test
add
mov
add
popa
mov
mov
cmp
fsubrs
or
mov
cmpsb
cmp
aaa
out
push
mov
aas
jns
or
push
and
add
mov
fwait
jge
bound
dec
mov
lret
and
and
mov
sbb
popa
inc
addr16
inc
in
fdivrp
mov
inc
arpl
inc
fs
testl
les
cmp
out
jle
dec
xchg
arpl
jmp
enter
jg
arpl
imul
test
adcl
and
push
subl
imul
insl
ret
aas
or
out
fdivrl
pop
sub
jae
gs
cld
add
test
push
popa
scas
sub
test
push
in
xlat
sbb
sub
add
les
fcomi
mov
xchg
daa
and
mov
in
jmp
mov
mov
jmp
add
int3
addl
lods
in
aas
push
clc
push
sbb
mov
sbb
push
cli
aaa
fsqrt
mov
add
jle
scas
mov
cmp
mov
xlat
mov
mov
push
popf
movb
or
clc
xlat
in
mov
push
jle
ss
lret
clc
jecxz
adc
pop
jl
clc
add
mov
xchg
icebp
sub
clc
pop
inc
ficoml
jmp
dec
pop
pop
xchg
test
test
lock
mov
lods
xor
inc
leave
lock
adc
and
mov
inc
leave
lock
mov
lea
lods
xor
add
into
xor
fisttps
and
in
dec
and
or
push
inc
xor
imul
and
fnstenv
test
test
sub
fildll
bound
sahf
dec
jo
arpl
cmpsb
rorb
and
and
addr16
add
add
mov
mov
cmp
imul
push
lea
push
in
adc
test
mov
in
cmpsl
fsts
or
stos
push
inc
pop
in
insl
and
imul
aaa
mov
pusha
cmp
jecxz
nop
movsb
xchg
or
ret
jp
ds
test
repnz
xchg
fldcw
and
pop
or
aad
lcall
pop
in
inc
jmp
dec
xchg
inc
and
movsb
test
fwait
sbbb
movsl
xlat
shll
shlb
je
scas
ja
cmp
lods
movsb
xrelease
sub
xchg
pop
ja
mov
jb
xor
fistpl
aad
push
cltd
dec
std
out
inc
imul
cmp
and
add
xchg
dec
push
test
push
dec
js
movsl
sahf
sbb
sub
cmpsl
jecxz
imul
jnp
push
mov
loop
lds
sub
mov
mov
das
int3
scas
pop
in
out
outsl
adc
pop
dec
fistpll
xchg
sbb
nop
jle
test
xor
imul
or
aad
adcl
fcmovbe
jbe
fbstp
push
ss
loopne
xchg
pop
mov
xchg
outsb
or
jg
mov
xor
bound
mov
xchg
insb
sbb
jb
xor
dec
clc
and
gs
xchg
sbbl
out
out
ds
subb
sub
jmp
ret
idivl
xchg
icebp
mov
sbb
jbe
dec
cmp
inc
call
sub
or
jecxz
movsl
mov
test
mov
mov
mov
jecxz
imul
into
data16
leave
arpl
not
jle
not
xlat
fcoml
mov
mov
sbb
cmpsb
mov
int
inc
jg,pn
mov
cmovo
fwait
into
pop
popa
movsb
mov
or
mov
mov
loop
sub
add
out
ljmp
nop
or
int3
fidivrl
or
sti
or
and
insb
mov
mov
xchg
idivl
sub
mov
clc
ljmp
outsl
cmpsl
pop
cmpsl
xchg
pop
adc
push
cmp
and
movsl
cmp
cli
mov
or
scas
mov
sub
addps
jle
cltd
mov
xlat
push
inc
aad
js
mov
subl
pop
icebp
dec
loope
and
int
out
and
or
mulb
aaa
rcr
pop
or
pop
mov
inc
or
push
repz
mov
bound
jns
cmc
gs
add
xor
movsl
gs
hlt
aad
in
fnstcw
xchg
int
adcl
sub
mov
xchg
inc
int3
sub
xchg
out
and
dec
hlt
xchg
lds
in
lret
pop
xchg
and
xor
lods
cmp
mov
outsl
sub
push
jae
shrl
inc
pop
lock
insb
mov
sbb
cmpsb
adc
rorl
push
cs
mov
icebp
fisubl
mov
sub
jae
loope
or
sub
cmc
ret
cmpsl
adc
cs
xlat
out
mov
mov
sar
add
push
in
jl
cmpsb
sbbl
push
rcl
or
mov
notl
pop
jb
icebp
jl
push
das
fwait
imul
fidivrl
loop
inc
or
cmp
repnz
es
xchg
loopne
jge
out
xchg
sub
and
rclb
mov
clc
push
push
pop
lret
int3
lods
icebp
or
je
int3
push
mov
xchg
jno
xor
es
and
xlat
mov
add
fildl
clc
cmp
gs
add
push
movsl
mov
addb
adc
mov
rorl
xchg
mov
insb
mov
arpl
push
in
and
andl
cmp
dec
jae
lcall
ds
rorl
insl
imull
xchg
mov
ret
cmp
test
mov
mov
les
pop
cs
sub
js
adc
push
ss
lds
lods
out
sbb
sbb
pop
fcomps
lods
das
push
mull
cwtl
aaa
pop
xor
inc
push
arpl
mov
pop
mov
xor
orb
int3
sub
adc
pop
ror
andl
stos
test
add
adc
mov
xchg
pushf
inc
adc
sbb
cmp
jecxz
cmp
js
andl
arpl
jg
in
mov
inc
pop
mov
jnp
outsl
push
cmp
pop
nop
cmp
or
mov
jle
mov
into
mov
add
or
movd
xchg
iret
mov
mov
and
into
mov
push
popa
iret
and
push
mov
push
out
and
scas
jl
outsl
sbb
xor
dec
loope
mov
mov
leave
dec
xchg
add
and
mov
jbe
popf
inc
in
pushf
orl
into
loope
idivl
jp
and
xchg
pop
lcall
in
movsl
xchg
xor
mov
add
loope
mov
scas
aad
cmpsl
sbb
popf
sbb
or
aad
cmpsb
mov
scas
mov
jg
into
sbb
rep
nop
or
xor
cmp
out
in
outsb
in
es
addb
mov
imul
rolb
in
shrl
xorb
mov
ss
enter
xor
enter
add
insb
notl
aas
jp
pop
cmp
mov
rcrl
icebp
scas
aas
int
movsl
xor
es
sub
mov
jg
pop
xchg
cmp
or
inc
inc
imull
hlt
dec
cld
cwtl
jl
adc
flds
scas
mov
xchg
jnp
ret
stos
pop
add
sub
jae
out
push
insb
out
sahf
lret
iret
jge
xchg
sbb
fwait
xor
addr16
arpl
xchg
stos
lret
aaa
insb
pop
adc
and
sub
sub
lods
mov
push
xchg
jmp
or
shlb
xchg
popf
xor
mov
imul
inc
in
mov
or
xchg
movsb
mov
xchg
adc
pushf
fwait
cwtl
addl
sbb
or
adc
movsl
aaa
sub
lods
sub
mov
rclb
cwtl
add
shll
test
xchg
mov
lds
or
jne
mov
or
lds
or
jne
mov
hlt
jne
xor
or
fiadds
mov
test
sub
ret
subl
lea
in
jmp
les
and
sti
and
sub
lcall
jae
mov
add
iret
sub
and
aaa
lret
scas
psubsw
cmp
lods
arpl
cmpsb
cmpsb
pop
mov
xor
fdiv
sbb
movsl
inc
inc
xlat
lock
sbb
push
cmpsb
lods
fwait
xchg
adc
aas
mov
mov
xchg
dec
lahf
mov
dec
adc
inc
and
decl
jmp
ret
pop
movsb
or
rorb
mov
add
inc
and
xlat
adc
mov
imul
xor
test
mov
pop
inc
aas
cmp
outsb
mov
jbe
pop
loopne
mov
inc
sub
ja
loop
sub
or
xchg
mov
push
mov
or
add
cmp
repz
stos
add
out
xchg
rclb
rorl
pusha
xchg
scas
pop
cli
and
movsl
and
cwtl
sub
aam
stos
loope
jmp
lea
mov
xchg
mov
pop
testl
inc
ds
push
ret
scas
movsl
xor
fs
push
or
pop
inc
and
lea
mov
push
lcall
inc
adc
cmp
andb
mov
xchg
xchg
movsb
scas
sbb
sbb
cs
sbb
insl
insl
jae
push
es
dec
enter
xchg
sub
sub
add
dec
pop
push
outsl
mov
xchg
lcall
or
sbb
mov
mov
mov
pop
xorl
rorl
out
push
adc
aad
add
testb
mov
lods
arpl
lods
mov
mov
imulb
lea
lea
mov
mov
jge
or
cmp
sub
cmpsl
rolb
jl
mov
or
cmc
mov
or
clc
sub
sub
fnstsw
sbb
xchg
mov
jae
and
and
call
adc
jge
in
jae
aam
xchg
hlt
fbstp
add
inc
or
cwtl
xchg
mov
sub
ss
fsubrl
inc
mov
mov
inc
pop
mov
mov
ret
jl
jl,pn
add
sysret
outsl
les
mov
aam
jecxz
sub
ss
loope
pop
je
int
jae
mov
mov
faddp
and
jge
out
add
inc
sub
sub
dec
mov
stos
enter
cmpsb
inc
inc
adc
cmp
mov
dec
dec
movsb
outsb
rorb
cmpsb
in
loop
jo
mov
lock
ja
sub
and
jmp
js
jnp
mov
cmpsb
sub
dec
sbb
arpl
insb
cmp
jo
xchg
pop
mov
sbb
int3
bound
scas
sub
and
push
es
mov
movsb
imul
and
xlat
and
jg
stos
jecxz
jo
jns
popl
and
cmp
shll
lahf
test
inc
adc
xchg
test
sti
popa
sbb
inc
xchg
iret
movsl
push
imul
out
sub
stos
xchg
arpl
xchg
xchg
mov
pop
daa
pop
push
sahf
xor
pop
sub
dec
cmp
mov
movsl
mov
dec
jae
ret
mov
movsl
sub
les
gs
cli
test
sbb
pop
mov
push
inc
fnstenv
movsb
push
popa
into
ljmp
popf
stos
xchg
mov
pop
pop
mov
xor
hlt
adc
loop
jge
sbb
mov
dec
sub
ret
inc
xchg
cmpsb
xlat
mov
mov
fs
xor
sub
mov
mov
sub
leave
icebp
mov
arpl
sub
dec
pop
addr16
cwtl
loopne
mov
pop
mov
inc
imul
mov
int
popf
mov
cld
cmpsb
xchg
sub
push
and
adc
gs
nop
adc
mov
mov
aad
shl
rolb
test
divb
mov
loope
pop
cwtl
inc
adc
and
into
outsl
dec
addl
mov
or
pop
in
rorl
inc
inc
or
mov
dec
in
lock
sub
imul
nop
sub
es
adc
scas
mov
jge
psllq
xchg
sub
xchg
cmp
and
lods
inc
outsl
inc
fists
xchg
leave
xlat
mov
outsb
mov
sub
mov
add
and
movb
test
negb
out
inc
xor
mov
push
cmp
cltd
add
mov
sbb
xchg
pop
mov
sarb
xchg
out
sub
add
push
rorl
nop
xchg
cmp
xchg
sbb
xchg
and
sub
hlt
popf
and
lea
leave
dec
testl
cmp
and
mov
mov
xor
insb
pop
jns
movsb
imul
cmp
mov
das
fucomi
adc
xchg
and
and
pop
push
sub
cmp
mov
scas
sub
jnp
xchg
repnz
sub
jae
add
imul
dec
inc
pop
pop
or
popf
es
cmp
pop
outsb
add
push
lds
movsl
call
stc
mov
movsl
mov
popa
call
mov
inc
xlat
daa
and
inc
ret
push
add
xchg
xor
fs
ds
mov
outsb
jle
mov
fstp
nop
movsl
pop
out
ljmp
pop
das
dec
push
clc
jecxz
inc
stc
int
daa
mov
pop
adc
arpl
decl
sbb
push
idivb
mov
lret
cltd
mov
clc
mov
sahf
test
cltd
cmp
cmp
stos
mov
aas
es
fidivs
rcrb
pop
test
pop
popf
mov
xchg
mov
mov
add
mov
xchg
xor
jl
pop
mov
inc
inc
mov
pop
roll
lods
faddp
scas
mov
inc
imul
jo
mov
pop
adc
mov
test
pop
pop
or
add
sahf
cmp
and
xor
mov
jne
movl
adc
push
iret
ret
fadd
iret
mov
imull
cmp
dec
push
ja
fwait
cmpsl
lods
inc
jge
out
fwait
xor
sub
mov
pop
cmp
mov
iret
ret
scas
dec
pop
popa
or
insb
push
xchg
cmc
fcoml
mov
in
imul
jmp
push
aad
ret
aas
mov
or
outsl
outsl
jmp
xchg
loopne
push
xlat
mov
mov
mov
mov
rol
or
ror
and
lea
cmp
cmp
add
pop
xchg
mov
xchg
je
dec
lods
fldenv
out
mov
rol
sbb
add
mov
out
hlt
fsubl
cmpsl
int
push
mov
leave
sub
arpl
shll
in
mov
inc
dec
or
pop
mov
sub
jecxz
std
fs
push
or
xchg
nop
jbe
or
xchg
or
sbb
loopne
cwtl
dec
sbb
lea
pop
xor
rcrl
add
dec
or
or
jne
xchg
inc
add
lea
mov
rorl
jl
inc
mov
pusha
aad
xchg
repnz
movsl
scas
loopne
aas
inc
scas
fadds
outsb
xchg
sbb
aam
ljmp
cmp
cli
push
mov
test
or
andl
mov
mov
outsl
inc
data16
insb
inc
test
sbb
and
shll
pushf
test
or
xchg
or
inc
add
out
ljmp
inc
push
out
jmp
iret
aam
mov
in
ja
aad
adc
hlt
out
mov
mov
aam
adc
aas
aad
dec
add
scas
mov
addr16
loop
out
imul
add
pop
push
insl
sub
cltd
fisttpl
hlt
xor
push
xchg
scas
dec
in
sub
mov
pop
popf
cld
cmpsb
inc
movsl
push
repz
imul
lds
repnz
add
pop
mov
test
xlat
mov
ficompl
mov
sub
cmpsb
mov
add
fxch
mov
cli
xchg
movsb
lea
jo
mov
loope
jg
cs
popa
rcrb
aaa
lds
subl
test
out
cmp
mov
or
dec
and
imul
stos
out
adc
cmp
adc
push
punpckhbw
cmpsl
lods
inc
cli
loope
mov
es
mov
mov
fbstp
add
loope
test
jae
daa
adc
lret
mov
dec
lods
mov
push
mov
pop
outsl
lea
pop
cmp
ja
rolb
inc
sbb
out
push
or
les
xchg
and
cmp
fs
fsubrl
cmpsl
jae
jbe
daa
adc
xor
cmp
dec
movsl
js
jl
add
aam
imul
jo
cltd
dec
pushf
iret
leave
jnp
in
aas
aam
movsb
clc
outsl
mov
ljmp
mov
in
jl
int
dec
in
dec
or
xor
ffreep
ds
or
mov
shll
mov
stos
pop
ficoml
mov
jl
xor
insb
cmp
xchg
cs
ja
outsb
pop
push
xchg
cld
addl
es
or
sub
bound
fbld
fnstenv
cld
pop
xchg
call
movsl
in
sub
cmpsl
dec
std
int
xchg
movsl
jne
outsb
dec
and
jmp
in
add
in
popa
mov
repz
test
repz
subb
loope
daa
jmp
mov
push
mov
mov
cmp
hlt
xchg
inc
mov
xor
jne
int
stos
pop
xchg
xchg
in
cmp
sub
mov
lds
lds
xchg
outsl
or
shrb
xchg
ja
ret
mov
and
mov
pop
dec
and
xchg
adc
xorl
push
test
xchg
push
or
mov
in
xlat
out
je
add
mov
jns
out
int
into
xchg
inc
nop
idivb
push
jmp
sbb
jno
lods
sbbl
and
repz
cltd
test
bound
mov
or
aas
add
adc
push
iret
sbb
sbb
in
subl
cmp
and
jp
lfs
dec
dec
scas
push
je
push
incl
out
cmp
cli
les
add
add
push
xor
in
and
insl
and
xchg
ret
loope
and
inc
sub
push
pop
cmpsl
in
stos
cmpsb
dec
sub
pushl
loope
aam
pop
cltd
xchg
shrl
scas
push
cs
or
mov
lcall
movsl
in
jge
std
lods
or
dec
adc
mov
cwtl
push
dec
inc
pop
shll
mov
add
stos
or
push
popa
xchg
dec
fldenv
inc
insl
and
mov
inc
notb
xchg
and
mov
out
sti
out
enter
flds
scas
testl
repnz
pushf
in
mov
pop
test
arpl
in
cmp
mov
cmp
mov
lock
repnz
cmp
popf
push
sti
in
fdivr
pop
sub
pop
add
lcall
pushf
push
lds
fistps
mov
movsl
push
push
loopne
lret
or
outsb
movsb
pop
dec
and
or
mov
js
fs
mov
cwtl
mov
dec
mov
pop
in
stos
leave
mov
mov
mov
bound
mov
xchg
call
xchg
mov
push
lret
add
pop
sub
in
bound
insb
pop
inc
xchg
mov
push
test
scas
lods
pop
js
hlt
push
sbb
out
stos
push
hlt
adc
movl
ss
jns
push
inc
jns
cltd
or
mov
shlb
cmp
popf
inc
aad
mov
insl
mov
ljmp
xchg
popa
add
lods
add
xor
in
rcl
icebp
jb
stos
stos
inc
xor
jnp
lods
push
sbb
out
xchg
inc
and
inc
mov
fbld
jecxz
xchg
rcrb
insb
adc
test
scas
rol
int3
rorb
inc
cmp
hlt
jae
mov
pmulhuw
add
sub
or
adc
mov
dec
adc
aas
adcb
adc
repnz
xchg
jo
mov
inc
les
mov
xor
xor
push
xchg
pop
daa
addr16
mov
cmp
cmp
sub
sub
fs
push
sub
movsl
xchg
pop
mov
mov
adc
adc
ficomps
gs
adc
jge
pop
stc
mov
cmpsl
cld
mov
enter
xor
pop
mov
add
or
loopne
mov
lret
loop
or
aas
nop
movsl
push
sbb
popf
or
sbb
les
jge
sub
fdivrl
fwait
loopne
mov
cmp
jmp
mov
dec
scas
cltd
xchg
pop
cmp
fdivrs
call
mov
mov
sbb
mov
push
daa
in
xchg
mov
test
pusha
or
cli
in
aad
lods
xchg
xchg
cmpsb
addb
sub
les
xor
mov
sar
aaa
cmpsb
popf
leave
outsb
mov
sub
fisubrl
testl
test
in
cmp
shll
test
lods
divb
repz
mov
rcrb
test
cld
clc
pushf
and
or
aam
pusha
push
js
sbb
shll
mov
fs
jp
pushf
adc
movsb
mov
and
movsl
scas
in
sbb
dec
aas
data16
xor
es
not
lea
cltd
insl
fnsave
loopne
dec
mov
mov
mov
lock
sahf
xor
adcb
dec
pop
hlt
cmp
jg
ljmp
pop
lods
je
xchg
and
sbb
test
repz
sbb
mov
orb
xchg
pop
pop
je
dec
push
xor
ss
cmp
push
cmp
jl
dec
push
mov
test
and
insb
dec
lret
mov
loope
mov
and
lea
test
cmp
shll
mov
xlat
orl
fsubl
pushl
xchg
mov
aaa
fsubrs
mov
jl
cmp
shll
movsb
out
rolb
sbb
das
fs
pop
push
testl
push
dec
push
jle
aas
hlt
xor
dec
mov
lret
xchg
rorl
js
mov
lahf
je
xchg
fmull
mov
leave
xchg
js
and
sbb
sub
xchg
push
cmp
or
fbstp
clc
sub
je
ret
sbb
scas
stc
push
inc
pop
rcl
data16
cli
pop
mov
sbb
xor
push
fildl
enter
xchg
inc
pop
cmpsb
out
pop
mov
mov
lret
shrl
push
in
xchg
rorl
sarl
cmp
mov
dec
and
lods
pextrw
adc
pop
mulb
sbb
dec
sarb
add
xor
fisttps
jb
cld
data16
and
xchg
or
jae
ret
fwait
shlb
scas
cltd
clc
push
mov
and
lock
adc
mov
repnz
inc
sub
and
adc
sub
or
push
add
pop
fnstcw
in
outsl
xorl
xchg
test
popa
sbb
mov
iret
xchg
mov
into
filds
movsl
jg
cs
pop
imul
test
cmpsb
scas
ret
fldcw
xchg
dec
insl
cmp
inc
arpl
daa
inc
loope
stos
ficompl
scas
insb
mov
shll
test
fbld
or
push
imulb
jb
cmpb
xor
popa
scas
push
mov
rcll
lret
test
insb
jo
mov
sbb
fwait
push
jp
clc
sub
mov
add
repnz
xchg
jg
arpl
dec
push
nop
test
lock
mov
mov
dec
shll
inc
mov
into
xor
mov
imul
and
jmp
mov
add
or
cmpsb
xchg
mov
insb
pop
int
in
lods
pop
insl
incb
sub
inc
cs
ret
andl
sahf
jp
jns
lret
lea
cs
icebp
cmp
iret
negb
inc
cmp
sub
hlt
jae
mov
jp
mov
addr16
pop
push
jnp
lods
in
xchg
mov
test
mov
mov
out
out
jge
jne
and
cmp
mov
test
pop
jg
push
fimuls
push
and
sahf
push
inc
pop
loop
pop
outsl
xchg
call
adc
cmpsl
jae
out
or
sub
cmp
mov
add
flds
xor
xor
lock
adc
mov
mulb
add
mov
jnp
cmp
adc
cld
icebp
pop
push
out
inc
add
out
xlat
inc
sbb
add
lret
add
testb
je
cwtl
fbld
add
adcb
xor
sbb
pop
enter
pop
clc
out
sbbl
and
insl
push
dec
into
xor
and
stc
xchg
fs
lahf
hlt
test
fldl
mov
and
or
cld
jae
and
push
sbb
mov
lods
out
mov
movsl
int
stos
mov
inc
push
das
push
mov
outsb
stos
add
mov
sbb
imul
aaa
clc
icebp
cmp
pop
dec
cmp
sti
ljmp
movsl
xchg
push
jmp
lret
add
add
cs
and
leave
mov
inc
inc
arpl
mov
mov
pop
repz
out
scas
fwait
aad
jg
into
std
mov
jo
outsb
nop
idivl
scas
rclb
and
xchg
pusha
repz
lahf
inc
out
inc
movb
mov
lret
clc
int3
lods
mov
mov
and
xlat
jbe
dec
icebp
lret
shlb
xchg
jge
sub
loop
mov
jns
or
and
shll
ret
js
test
mov
mov
mov
pushf
push
xor
in
das
repz
push
gs
sub
adc
outsl
push
outsl
sbb
xor
cli
sub
nop
and
sbb
and
xor
xor
mov
shlb
lret
stos
xchg
xchg
pop
or
arpl
sbbl
insb
addb
dec
jne
in
imul
imull
shlb
scas
test
movsl
sub
aad
test
mov
sbb
xchg
mov
addl
mov
lret
xor
movsb
test
ret
cs
xlat
inc
and
lds
imulb
pop
pop
lea
mul
sub
cmc
xchg
cmp
mov
test
daa
icebp
test
cmp
mov
add
es
and
dec
and
out
xchg
std
test
int3
mov
out
adc
dec
cltd
jle
ret
scas
cmp
nop
out
adc
cmc
mov
out
xor
jbe
out
movsl
hlt
aad
or
mov
fnstsw
in
mov
mov
xchg
insl
pop
pop
imul
in
jae
int
dec
cmpsb
fdivp
inc
or
mov
lea
lea
adc
aam
fmuls
in
jecxz
push
insl
in
les
push
mov
rorb
test
jg
leave
xchg
push
mov
cmp
dec
mov
lea
adc
loope
in
lea
lds
lods
movsb
ret
or
or
pop
mov
aaa
xchg
or
jae
mulb
mov
xchg
sarl
cs
aas
sahf
andl
mov
mov
jg
dec
dec
adc
sar
movsb
pop
mov
or
test
imul
mov
inc
enter
pop
xchg
jge
lret
mov
push
pop
and
mov
sarb
loopne
aam
xchg
or
dec
int3
xlat
adc
mov
cmp
inc
pop
hlt
ja
and
movsb
test
rol
mov
xchg
setge
movsb
or
fwait
int3
outsb
adc
out
mov
adc
or
mov
sub
cs
inc
orl
push
mulps
pusha
int3
aam
shl
jecxz
cmp
mov
push
adc
repnz
jmp
fists
lods
stos
decl
lea
and
mov
jecxz
xchg
and
fstl
push
sbbl
pusha
mov
into
stos
jne
xchg
subl
xchg
jle
mov
push
or
das
cltd
pop
ret
test
sar
mov
pop
mov
loopne
pop
mov
push
cmp
faddp
mov
nop
loop
add
xor
cmp
sbb
dec
mov
dec
mov
subl
mov
movsb
test
clc
ljmp
stos
lods
xor
adc
mov
pop
test
lock
adc
nop
sub
pop
mov
mov
scas
shll
fisttpl
out
jecxz
or
aas
lock
hlt
lds
sti
mov
insl
and
jl
mov
jno
aam
cmp
sub
popf
adc
add
sbbl
xchg
jecxz
daa
or
sub
ja
lahf
mov
push
add
dec
movsl
icebp
pop
cmp
adc
mov
sub
or
jo
repnz
push
inc
fisttpll
lret
fildll
dec
negl
pop
lds
in
add
aaa
xchg
jg
popf
lock
pop
mov
cwtl
and
in
aam
loopne
sbb
xlat
xchg
cltd
insb
jp
cltd
push
cmp
shl
outsl
idivb
inc
dec
mov
call
push
in
dec
stos
lret
add
mov
outsb
test
inc
sbb
nop
or
sti
ja
call
mov
pushf
cmc
push
mov
push
adc
test
cwtl
sub
je
test
repz
dec
and
fld
or
je
mov
adc
pushf
mov
les
repnz
lods
mov
insb
outsb
subl
xor
xchg
cmp
loop
push
inc
aas
mov
ret
movsl
mov
enter
aad
iret
sbb
lret
nop
ds
pop
mov
mov
mov
add
dec
xchg
xchg
and
or
xchg
in
sub
dec
mov
imul
jmp
mov
dec
in
scas
mov
bound
popa
mov
mov
sbb
cwtl
outsl
cli
push
xchg
pop
cmpsb
mov
ds
sub
cltd
push
arpl
adcb
les
xchg
add
mov
mov
xchg
aaa
xorb
and
pushf
aam
outsb
mov
lcall
pop
outsl
ror
mov
pop
in
inc
mov
into
mov
inc
test
into
test
jg
in
js
ss
lret
mov
int
mov
xchg
jp
ret
fs
andb
cmp
cwtl
arpl
xchg
and
push
mov
lahf
mov
das
jbe
and
and
pusha
addb
pop
push
mov
mov
jno
incl
cltd
sbb
stos
imul
mov
out
jno
push
mov
clc
inc
in
jge
push
mov
dec
jo
sbb
fcoml
mov
and
popa
push
push
sarl
fnstcw
jg
iret
test
leave
jl
out
inc
stos
sbb
rcll
loope
inc
pop
test
andb
sarl
jl
xchg
shll
xchg
out
dec
and
loop
ja
imulb
push
xor
pop
fstpt
pop
stos
xchg
jge
mov
mov
cmp
test
and
pop
subb
int
lods
mov
mov
jnp
out
mov
mov
mov
rorb
sti
and
jge
and
dec
add
xchg
adc
rorb
dec
jbe
xchg
cmpsl
rcl
sub
inc
pop
lcall
push
js
inc
ja
adc
push
subl
and
lds
adc
add
xchg
ret
jl
cld
pop
out
mov
insl
in
jns
jae
out
push
lock
sbb
roll
jno
stos
mov
stos
daa
jmp
sub
mov
enter
hlt
into
jbe
into
push
jecxz
push
xor
jbe
test
insl
push
or
pop
xchg
cmpsb
mov
mov
movsb
insl
or
and
psrad
sub
and
repz
jle
loopne
lods
shrb
pop
pop
fsubs
push
fiadds
aaa
imul
lahf
xchg
outsb
push
jp
shrl
pop
inc
out
fsubrs
jns
scas
inc
or
shl
cmp
sub
mov
leave
mov
sbb
into
lahf
lea
pop
jnp
jns
add
sub
add
mov
mov
test
jecxz
cmp
mov
cs
cmc
mov
cmp
clc
fs
cmpsb
mov
cmp
test
jge,pt
cmpsb
outsl
add
add
mov
test
xchg
xor
pushf
jae
push
js
dec
into
lds
inc
mov
mov
and
cs
dec
or
mov
push
sub
inc
out
xor
pop
hlt
add
and
fs
mov
dec
jge
enter
shrl
lcall
lods
inc
push
jp
jbe
aam
mov
test
mov
sbb
repz
orl
rcr
push
pop
inc
xchg
mov
out
sub
jp
mov
xchg
hlt
sahf
pop
aad
lods
testb
mov
mov
les
imul
dec
mov
cmp
jl
mov
addb
adc
cvtpi2ps
mov
xlat
rolb
push
int
add
mov
dec
loop
les
outsl
mov
adc
pop
jle
lret
pop
xlat
decb
mov
idivb
leave
lock
sub
dec
jle
cmp
and
outsb
aam
mulps
imul
cmpsl
rcll
loop
gs
dec
jb
mov
jg
inc
punpcklbw
or
gs
push
xor
jmp
and
or
test
les
mov
dec
mov
mov
xor
xchg
test
into
test
adc
fiaddl
or
mov
mov
cmp
test
mov
cmp
xchg
sub
mov
lods
jecxz
mov
fimull
mov
and
dec
rcl
fiadds
push
jae
mov
jne
lods
sub
adc
daa
decl
ret
jg
xchg
and
jae
dec
push
addr16
and
hlt
fst
jbe
pop
test
imul
push
adc
ret
cmp
or
cmp
adc
adc
das
lds
or
push
fisttps
jg
xchg
cmp
xchg
jle
nop
stos
daa
adc
push
dec
and
cltd
sbb
not
xchg
add
orb
dec
fcmovnu
cltd
jbe
gs
ret
ret
js
cltd
scas
mov
push
mov
adc
ret
test
and
adc
mov
mov
mov
mov
xor
xchg
clc
aaa
inc
jo
stos
push
lods
aam
inc
adc
test
scas
or
xor
mov
ja
mov
or
imul
rolb
xor
aam
test
shll
lcall
add
mov
mov
popa
cwtl
imul
mov
sub
or
jecxz
popa
nop
pop
pop
pop
nop
inc
xchg
mov
orb
sbb
xor
shl
scas
push
stc
stos
pop
cmp
pop
int3
mov
notb
cmp
xor
out
jns
mov
xlat
int3
push
xchg
mov
ja
sub
negl
and
ret
jo
ja
cmc
fbld
push
shl
jnp
xchg
mov
xlat
pop
mov
or
and
lea
or
push
pushf
test
clc
mov
push
arpl
xchg
daa
dec
popf
cmpsb
pop
fisubs
add
push
sub
lcall
imul
xor
jecxz
hlt
mov
push
movsb
popa
xchg
push
insb
shrb
xorl
data16
sbb
js
cmp
mov
xchg
mov
push
daa
aas
cmc
clc
mov
leave
imul
repnz
mul
add
dec
fsubr
mov
inc
jns
xchg
mov
ljmp
adc
cmp
arpl
inc
js
pop
shrl
push
lock
lcall
out
sbb
idivb
clc
mov
aam
out
popa
movsl
mov
int
addb
sbb
js
add
inc
je
add
xor
daa
subb
call
xor
dec
pop
out
mov
shll
cmp
sbb
aas
adc
orl
mov
movsl
scas
scas
into
sbb
add
repz
jns
loop
lea
addr16
xchg
xchg
dec
cmpsl
cmp
daa
xor
mov
lods
repnz
xchg
fwait
scas
adc
test
mov
jno
cmp
cmp
iret
sbb
lcall
add
cltd
notl
rorl
fmull
dec
nop
xchg
shlb
in
rol
jnp
mov
out
xchg
lea
add
push
ret
adc
roll
and
xchg
movd
push
pop
shl
jb
popa
xorb
lret
sub
scas
adc
mov
jnp
cmp
add
push
pusha
cmc
lock
adc
int
jmp
outsl
faddl
mov
subl
mov
xchg
adc
xchg
mov
lahf
mov
adc
ss
nop
outsl
addb
fldt
nop
push
mov
mov
aas
inc
xchg
mov
xchg
xchg
sbb
cld
lods
sbb
rorb
or
xchg
int
sbb
and
and
sbb
add
repz
fsub
jns
adc
mov
jge
lcall
cmp
in
xor
in
add
sbb
push
push
bound
ja
mov
movb
testb
in
push
cmp
mov
enter
leave
jb
lahf
add
cmp
or
mov
xchg
xlat
xlat
mov
inc
test
cmp
inc
push
pop
mov
lods
movsb
shll
daa
xor
shlb
movsb
mov
mov
fwait
cltd
mov
fldl
mov
insb
lods
sbbb
aad
lea
and
pushf
lret
decb
mov
out
dec
mov
shlb
inc
insb
in
int3
xor
adc
mov
jg
cmpsl
pop
push
xor
xor
test
dec
xchg
sub
stos
popf
inc
mov
outsl
add
loope
xchg
cmp
lods
mov
sub
test
add
adc
scas
or
orb
pusha
daa
jbe
and
test
xchg
mov
jne
rcrl
in
hlt
shl
ja
js
popf
mov
xchg
lds
inc
add
mov
add
mov
jge
ret
xchg
fdivs
inc
jp
mov
es
ds
stc
aam
and
sbb
add
mov
ret
inc
movsl
stc
push
imul
xchg
daa
loop
mov
lret
dec
pop
test
pusha
test
orb
rolb
xchg
test
pslld
xor
mov
orl
adc
inc
sbb
es
imul
outsl
mov
jmp
pop
jmp
loopne
fsubrl
icebp
push
xchg
pop
in
dec
out
and
rcrb
push
pop
sbb
mov
mov
movsl
push
inc
cs
mov
sbb
jp
or
cmp
nop
lahf
nop
push
and
cwtl
adc
fimuls
mov
lods
outsl
xor
cmpsl
dec
test
xchg
fistpll
push
jg
aaa
jmp
mov
mov
fiaddl
hlt
test
aam
xor
movsl
rcll
xlat
fs
ja
xor
or
fcmovnb
in
mov
mov
xchg
xor
sbb
ret
popf
out
inc
adc
sahf
fwait
rorb
pop
mov
cmp
int3
jmp
test
fcmovbe
pop
xchg
fisubrl
outsb
clc
or
hlt
jecxz
inc
out
popa
mov
leave
fnstcw
xor
movsb
daa
sbbb
fildl
lret
cmp
xor
xor
call
adc
jl
ds
popf
mov
rcr
in
fisttpl
movsl
mov
insb
adc
add
sub
push
jg
negl
push
test
hlt
push
add
mov
cmp
sub
lea
rsm
fildl
and
or
lods
fisttps
mov
fsubs
jle
orl
ficomps
mov
sub
jbe
sub
rcrl
test
mov
nop
out
xor
call
push
aas
cwtl
popa
mov
test
cmpsb
mov
jmp
pop
scas
daa
mov
sub
mov
lret
and
pop
and
sbb
inc
lahf
int3
and
or
test
sub
push
cld
mov
mov
lock
das
or
mov
mov
pop
mov
adc
mov
push
pop
xchg
mov
out
pop
shrl
or
and
mov
jnp
adc
int
out
cmpps
popa
lret
sbb
stos
ret
xchg
out
dec
sti
cmp
sub
push
inc
xchg
pop
fwait
cmp
mov
fwait
add
push
fwait
mov
xchg
add
mov
mov
cmpsb
dec
push
rclb
in
mov
mov
adc
ret
inc
aam
adc
pop
inc
lods
cmp
shlb
stc
iret
mov
sbb
sbb
repnz
mov
sub
xchg
mov
movsb
out
mov
movsb
jns
cmp
je
jnp
adc
shll
and
push
cmpsl
test
xor
aas
out
das
mov
lea
cmp
gs
fcoml
and
inc
arpl
push
nop
loopne
fcoms
rcr
les
movsb
fwait
shrl
dec
call
mov
inc
and
xchg
sub
ficoml
mov
cmp
pushf
xor
mov
push
xchg
data16
jg
adc
test
or
jmp
sarb
pop
adc
repnz
mov
scas
test
cmpsl
or
sbb
add
shrl
mov
lret
push
dec
aas
push
movsb
xorl
mov
fwait
das
mov
inc
mov
mov
cmp
stos
cmp
and
out
mov
mov
mov
les
xchg
or
repnz
int
lock
and
popf
out
jmp
hlt
jecxz
pop
lock
in
lods
mov
jecxz
pop
sub
and
sahf
out
mov
mov
jecxz
mov
ss
push
xor
xchg
jbe
divl
xchg
and
xchg
cltd
push
sbb
dec
add
mov
add
std
aad
jns
xchg
xor
lcall
lcall
lcall
loopne
mov
nop
jne
roll
pop
lret
fisubs
sbbl
sbb
mov
sbb
push
sub
std
pushf
mov
dec
mov
and
push
ss
sbb
or
test
jo
movsl
jne
mov
or
shl
fmuls
test
cmp
imul
imul
sti
ds
and
sbb
push
clc
pop
fisttpl
xchg
pop
and
insl
push
mov
in
sahf
jg
mov
jae
xchg
inc
dec
dec
outsb
sbbb
dec
ss
push
mov
mov
rorl
xchg
or
push
popa
das
shll
ljmp
movsl
xchg
stos
test
repz
mov
lea
scas
dec
stos
pop
sbb
or
or
jmp
and
into
loopne
jbe
xchg
adc
xor
icebp
arpl
dec
or
adc
out
in
push
mov
hlt
jno
addb
outsb
in
cmp
dec
jnp
mov
ljmp
inc
jb
data16
jecxz
mov
push
bound
test
pop
fcmove
aas
dec
in
outsb
dec
lock
aas
stos
aad
mov
lret
int3
lds
xor
xchg
mov
jle
cld
and
mov
loopne
adc
sub
lahf
lea
mov
popf
mov
adc
sub
jg
lods
test
sbb
mov
dec
jl
jbe
iret
xchg
ret
jb
xor
adc
test
mov
aas
cmpb
aam
shll
mov
cmp
scas
bound
adc
out
mov
popf
mov
lods
pop
xor
and
dec
push
xor
xchg
mov
mov
mov
sub
jne
movsb
cmp
sbb
mov
and
mov
jmp
jecxz
push
mov
outsl
cmp
loopne
into
pusha
pushl
out
ficoms
mov
cmp
imul
test
call
test
add
ds
inc
imul
fsub
out
lret
pop
mov
pushf
or
dec
mov
movsl
cmp
loopne
mov
test
inc
stos
movl
test
pop
inc
xchg
cmpsl
icebp
push
push
or
push
clc
lea
insl
pop
shlb
cmpl
imul
add
enter
push
and
repz
shll
fdivrl
cmpsb
adc
push
andl
jns
dec
inc
in
adc
mov
in
stos
call
stc
add
lock
pop
mov
adc
dec
fildl
mov
cwtl
outsb
pop
xchg
add
push
dec
push
lahf
push
stos
das
cmpsl
mov
cmc
ja
mov
dec
aaa
pop
iret
dec
mov
in
jge
in
pop
popf
mov
inc
dec
sub
sub
loopne
mov
es
pop
mov
and
push
in
aaa
lret
sbb
mov
subl
testl
adc
cs
test
iret
ret
xchg
in
int
or
mov
idivl
cmp
rolb
add
jle
ss
sbb
dec
pop
sarb
and
iret
outsb
add
jb
loop,pn
add
xor
clc
cs
add
cmpb
lret
mov
lcall
sub
cmp
mov
adc
inc
test
and
lahf
dec
jmp
cmp
clc
movsl
and
jns
push
mov
jg
dec
hlt
mov
in
mov
xchg
dec
xchg
pop
ret
jmp
shrb
aad
sbb
and
push
adc
push
movsl
mov
orl
aad
scas
fidivrs
out
inc
pop
mov
jbe
mov
imul
add
lods
inc
mov
and
daa
cld
cs
jg
sub
fsub
addl
repnz
dec
stos
jp
les
and
mov
loopne
in
cmp
stos
hlt
mov
icebp
ret
cld
mov
jecxz
test
cmp
mov
pop
or
xchg
dec
in
mov
ds
and
sarl
pop
outsl
lcall
pop
sbb
push
pop
inc
fadds
cmc
cs
call
adc
adc
insb
addb
jns
outsl
adc
mov
mov
sub
addl
cli
add
clc
sub
mov
pop
and
mov
pushl
test
cmp
pusha
popa
jmp
sbb
int3
jo
out
jno
lds
popa
cmp
sbb
mov
movsb
aam
fidivs
cmp
pusha
test
mov
jecxz
outsl
les
movsl
dec
shrb
cmp
adc
lahf
xchg
mov
xchg
fwait
cmp
or
mov
mov
mov
dec
sub
sbb
lds
add
ret
xchg
or
mov
cltd
mov
or
pushf
aaa
inc
mov
movb
popf
inc
cmp
push
or
mov
pop
xchg
and
lahf
test
mov
das
mov
jns
insb
jecxz
lea
push
aad
xchg
xchg
add
and
sub
push
daa
gs
cmp
inc
mov
jbe
sub
mov
mov
mov
pop
and
arpl
jg
pushf
orb
inc
sarb
shr
test
imul
repz
push
imul
mov
mov
xor
aas
cwtl
call
scas
push
xchg
mov
popf
mov
sbb
lods
or
push
push
ret
cmp
inc
lea
jge,pt
out
xor
mov
push
sub
sub
lods
movsl
ret
stos
sahf
movsb
loope
xchg
mov
sarb
lock
xchg
call
repnz
insb
iret
inc
aas
mov
popa
xlat
mov
add
jecxz
cltd
jle
jns
lret
in
hlt
outsb
mov
cmc
mov
sbb
and
dec
in
shrl
xor
adc
ljmp
adc
pop
xchg
rcrl
in
leave
jge
dec
int3
daa
ret
lahf
pop
push
subb
pop
sbb
ror
shll
fmuls
add
loopne
inc
jmp
nop
sbb
out
xchg
cwtl
std
das
push
or
xchg
push
dec
jmp
rorb
or
cmpsl
fsubr
sbb
fcom
subl
sahf
test
shr
pop
cmp
xor
leave
jecxz
mov
out
int3
xorb
sbb
inc
fistl
cmc
adc
shll
mov
mov
sub
jnp
nop
or
sub
out
imul
cmp
mov
stos
lahf
cld
or
enter
cld
or
movsb
call
ljmp
lret
into
hlt
xchg
or
out
and
call
int3
gs
cs
ret
mov
faddl
sub
lods
in
pop
push
outsb
pop
and
jno
icebp
jg
and
mov
jmp
mov
testb
mov
lds
push
ror
xchg
loopne
leave
jb
add
idiv
mov
mov
ss
mov
inc
cltd
xorl
lods
sarl
pop
rcl
lods
leave
dec
daa
roll
fnstenv
rclb
aam
fcomps
cmp
mov
mov
sub
test
mov
lock
sbb
sub
and
je
xlat
jnp
jg
scas
fwait
mov
xchg
xchg
mov
and
add
dec
lcall
gs
mov
sbb
das
dec
sahf
push
mov
and
sub
clc
and
and
cmp
les
mov
roll
or
jno
mov
push
cmp
aam
stos
rcr
aas
addr16
xchg
dec
into
jmp
rolb
inc
outsl
insl
mov
es
mov
daa
call
outsl
mov
pop
lds
les
imul
mov
mov
xor
fcmovu
cmpsl
mov
loop
mov
xchg
mov
xchg
cs
and
or
add
mov
jl,pn
xchg
inc
xchg
add
and
loope
mov
scas
andb
xchg
insl
jp
sarl
mov
dec
scas
insl
cmp
mov
nop
push
inc
mov
test
inc
shlb
gs
idivl
xor
xchg
in
in
bsf
les
adc
movsl
ficompl
jbe
and
sbb
std
push
xor
ret
sbb
data16
js
jo
cwtd
cmp
jae
leave
negb
pop
test
fsubs
cmp
sbb
cmp
mov
adc
xchg
cltd
addb
dec
call
pop
add
cltd
imul
xchg
popf
int3
js
mov
xchg
mov
ret
lods
cmp
add
scas
xchg
jns
mov
jae
mov
and
sub
cli
ret
lods
fistpll
les
adc
or
hlt
popa
sbb
enter
xchg
push
into
cmp
inc
mov
lret
mov
cmpsb
fisttpll
test
fcmovnb
xchg
cs
push
inc
adc
fwait
push
cmp
cmpsb
mov
clc
push
add
add
sub
mov
les
add
icebp
out
stc
push
ss
xchg
scas
or
aad
cld
lds
jle
iret
pop
xlat
mov
andb
jne
mov
sarl
jbe
pop
xchg
out
insl
mov
mov
mov
into
dec
popa
jo
jmp
sbb
sbb
and
fnstcw
mov
mov
imul
mov
adc
out
idiv
adc
jp
xor
cs
out
cli
cs
popf
pop
fimuls
push
imul
insb
shrb
testb
repz
pop
or
pop
sbb
mov
repz
sahf
daa
push
out
lods
idivl
lods
clc
mov
jo
jae
scas
dec
fwait
push
push
mov
lret
roll
jg
subb
fdivs
inc
rorl
mov
imul
pop
inc
jge
out
inc
push
insb
add
pop
setg
cmpsb
outsl
ret
fisubl
sub
loope
aaa
mov
adcl
fimull
push
mov
dec
ret
cli
test
in
enter
cli
xchg
lea
adc
dec
jbe
cs
daa
and
or
jg
scas
movsl
add
pop
movsl
ret
dec
jmp
lea
insl
scas
out
pop
dec
inc
shl
test
rcrl
xchg
loop
pop
jmp
jno
mov
not
mov
lcall
gs
rolb
movsl
popa
pusha
or
das
add
mov
xchg
pop
fsts
call
mov
xchg
xor
fiaddl
jnp
stos
lea
add
jns
jg
and
and
es
js
cmpsl
adc
jne
and
jecxz
pop
sub
sub
sub
fnstcw
dec
lds
imul
or
in
cmp
pop
or
cltd
pop
mov
adc
scas
je
cmp
add
cli
lcall
lret
or
int3
in
in
mov
orl
js
jns
outsb
mov
shlb
lock
call
mov
sbb
and
ljmp
aaa
dec
cmp
jmp
loope
push
ret
in
pop
test
sahf
or
lock
sub
mov
imul
pop
mov
mov
and
out
cwtl
jge
jmp
xor
pop
ret
iret
insl
ss
pop
les
push
jns
jb
in
clc
pop
pop
scas
lock
pop
pop
push
popf
shlb
into
mov
dec
xchg
sahf
cmp
jno
iret
pop
ficoml
mov
in
out
ficoml
pop
adc
fwait
cmp
or
in
and
test
dec
sahf
outsl
jnp
cmp
push
movsl
mov
fs
aaa
mov
test
imulb
int3
xor
imul
dec
imull
xchg
adc
hlt
nop
cmpsl
add
mov
mull
sbb
cmpsb
fcoml
sub
sub
xor
xor
or
push
xchg
out
rcll
flds
cwtl
addr16
add
test
jle
out
xchg
mov
jp
outsb
mov
push
js
loopne
lods
in
push
jb
cltd
les
or
add
inc
scas
insb
popl
jle
jns
loope
mov
bound
jecxz
jle
stos
in
push
and
mov
add
cmpsb
push
cmp
add
xchg
dec
inc
sub
cmp
das
ljmp
sbb
roll
popf
cli
xchg
scas
scas
js
xor
sub
call
mov
xchg
dec
scas
inc
insl
cmc
mov
jg
mov
mov
scas
outsb
mov
pop
jmp
xchg
xchg
adc
adc
std
inc
pusha
sub
push
insb
shll
adc
add
inc
test
movsl
ss
test
mov
add
int
adc
mov
les
shlb
out
lret
loopne
mov
scas
fstpt
push
and
fdivr
pushaw
push
scas
jne
lods
cmp
jmp
push
mov
cli
out
aad
fldenv
test
fdivs
push
int3
jns
add
nop
xor
mov
push
xchg
and
rol
inc
mov
sbb
lds
inc
add
insb
mov
leave
inc
push
repz
arpl
sahf
push
cmp
ds
add
icebp
bound
je
push
push
xchg
rcll
lds
or
aaa
nop
outsb
lock
movsl
aas
adc
fsubl
jl
testb
dec
out
mov
lahf
into
dec
int3
sub
sub
sbb
inc
adc
in
sbb
mov
fistl
mov
shlb
mov
pop
arpl
ficompl
jne
testb
xchg
test
aaa
aam
adc
mov
fiaddl
xchg
dec
movsb
fwait
or
outsl
inc
xchg
pop
mov
in
xor
cs
and
mov
mov
mov
sbb
sti
inc
lret
cli
sti
sub
or
xor
aas
inc
call
adc
ffreep
imul
fwait
enter
xor
sbb
mulb
xchg
mov
in
std
nop
push
rcrl
adc
sub
and
cmpsl
ja
push
pop
roll
orl
jbe
add
notb
and
push
cwtl
test
pop
shrl
xchg
inc
movsl
nop
pop
icebp
pusha
lret
mov
sub
fldcw
notl
out
test
inc
setno
insl
mov
jns
mov
mov
icebp
mov
jb
rcll
out
stos
pop
lods
cwtl
lds
or
xchg
and
das
das
mov
or
mov
jo
add
mov
outsb
or
lahf
add
adc
and
xlat
jae
fldl
push
fidivs
fistpll
lods
pop
inc
aas
cwtl
push
cmpsl
movsl
iret
inc
enter
sarb
jae
inc
sbb
adc
jno
test
and
das
xor
ds
sub
or
mov
xor
leave
adc
mov
cmp
cmp
sub
cli
xor
or
xlat
mov
mov
cli
jb
mov
xchg
or
add
sub
mov
into
js
mov
add
insb
sarb
xchg
js
sbb
push
lods
xlat
adc
daa
mov
or
imul
imul
sahf
cmp
add
repnz
push
rclb
xchg
pop
aam
mov
mov
pop
movsl
and
lock
sbb
scas
xor
dec
loopne
add
leave
out
aad
or
flds
mov
in
fmull
add
jg
icebp
xchg
cmp
sbb
xor
sub
cmp
push
or
mov
lds
mov
addr16
stos
data16
jb
cwtl
outsb
icebp
mov
mov
test
xchg
fwait
and
mov
andl
clc
insb
push
cltd
fidivl
xchg
jb
and
int
sbb
mov
pop
push
aad
cmp
je
pop
aad
mov
add
mov
and
add
in
push
addr16
ror
sub
add
inc
xchg
adc
aaa
mov
xchg
mov
jmp
add
int
mov
fstl
add
sahf
xor
fcompl
lcall
stc
push
pushf
pop
sub
dec
negb
aas
xchg
je
mov
test
sub
mov
xchg
stos
enter
cmpsl
pushf
mov
imul
enter
cld
dec
insl
into
pop
adc
cmp
adc
arpl
addr16
mov
std
and
loop
scas
mov
mov
repnz
push
cs
sub
cmpsl
cmp
adc
scas
mov
mov
fisttps
jg
cmp
pop
aad
mov
xchg
adc
mov
lods
adc
loopne
mov
mov
inc
dec
outsb
adc
jae
sub
js
rcrl
stos
push
movsb
cmp
ljmp
mov
in
jl
pop
in
and
insb
ja
test
xor
enter
mov
xor
cmp
jmp
mov
repz
scas
dec
popa
pop
test
dec
shlb
xchg
push
mull
sbb
inc
lds
inc
leave
push
movsb
rcll
pusha
int
daa
enter
mov
push
xchg
imul
ret
or
arpl
add
lcall
nop
dec
enter
into
pop
sub
jns
mov
pop
adc
inc
push
rol
mov
sub
pop
sahf
sbb
mov
test
add
push
shl
enter
cwtl
mov
test
mov
cmpsl
clc
fwait
dec
nop
add
neg
cmp
mov
hlt
ljmp
shlb
sbb
out
mov
add
and
xor
rorb
mov
out
fwait
push
jne
stos
mov
pusha
mov
pop
popf
mov
sbb
shlb
inc
pop
inc
add
mov
and
test
idivl
jmp
cmpsb
cmpsb
lds
pop
lret
loopne
iret
fsub
xchg
pmaxsw
movsl
xchg
xchg
mov
adc
lret
jmp
xchg
fwait
lret
fwait
ret
jmp
pop
jle
mov
je
mov
bound
sbb
and
int3
repnz
and
inc
push
and
bound
sub
or
and
insl
in
jmp
divb
outsb
mov
scas
jl
inc
ret
outsb
inc
push
aam
and
iret
sub
movsb
push
jecxz
cmp
ljmp
jmp
jae
dec
loopne
out
xchg
mov
jne
jecxz
outsl
xchg
negb
pandn
movsl
adc
or
das
outsl
enter
sbb
fcmovnb
int3
inc
loop
cmp
jg
inc
cmp
inc
in
dec
fwait
loope
enter
fsts
movsb
xchg
jb
insl
cltd
cmp
cmc
dec
repnz
dec
mov
push
dec
and
xor
shrb
movsl
insb
inc
fildll
mov
mov
jg
repnz
push
sbb
adc
xchg
pop
ret
lods
mov
out
dec
sub
xor
or
pop
inc
imul
cmpsb
aaa
repz
ljmp
out
lahf
cmp
inc
insl
sub
stc
adc
xor
int3
incb
ret
cwtl
xchg
jg
cmp
stos
or
movsl
xor
or
out
adc
hlt
cltd
das
aas
jg
sbb
mov
fwait
pushf
pop
xor
test
lock
daa
ret
xor
in
subb
adc
add
test
cmpsb
xor
or
lods
call
dec
hlt
mov
lret
xor
ret
in
gs
xchg
sbb
dec
lods
scas
ret
jecxz
add
xor
shrb
xchg
cmp
mov
cmp
sub
and
mov
into
lods
fwait
inc
xchg
mov
xchg
fmull
lock
xor
xor
iret
ret
enter
or
loopne
shrb
dec
bound
enter
aas
les
popa
mov
popa
pop
mov
and
inc
fsubs
mov
popa
xor
pop
mov
jbe
hlt
xchg
inc
and
scas
and
repz
jmp
enter
fmull
jl
dec
jne
mov
cmp
xchg
outsl
dec
xchg
scas
test
stos
mov
leave
repz
ret
ja
test
data16
fnstsw
xlat
sub
repz
jno
xor
mov
add
mov
sub
daa
out
fndisi(8087
mov
jmp
sub
xor
cltd
loopne
out
adcb
dec
mov
cmpb
call
dec
test
cmp
push
lea
lea
test
add
dec
int3
mov
stos
cmpsb
mov
cli
out
shll
jo
xchg
cwtl
notl
cmp
mov
cmpsb
and
xor
pop
out
xchg
pop
lret
mov
or
shlb
mov
mov
mov
adc
and
in
in
jno
sbb
shlb
std
in
repz
or
lea
push
xor
mov
fists
inc
jno
xor
arpl
sbb
bound
and
movsl
loop
xchg
pop
cmpsb
and
push
bound
push
cld
or
sub
push
lds
cwtl
xchg
jge
adc
xor
arpl
cmp
int3
loope
divb
cs
fadd
pop
aam
out
aam
xchg
js
jmp
cmpsl
aaa
lds
imul
cmpsl
mov
lahf
xchg
cld
sbb
in
or
xor
imul
lods
mov
jbe
mov
jbe
pop
mov
das
test
stos
ret
cmpsl
inc
jne
adc
xor
clc
pop
ret
jbe
pop
aad
nop
loopne
jo
pop
out
mul
ja
mov
push
push
cmpsl
jl
movsl
cmp
outsl
je
push
test
ret
out
das
andl
cmc
xchg
outsb
cmpsl
push
fisubl
pop
or
int3
lea
rcrb
inc
rsqrtps
mov
hlt
lahf
adc
gs
lahf
or
and
mov
in
test
cmp
imul
cmpb
cmpsb
jns
mov
fidivrl
repz
stc
inc
jb
lret
pop
outsb
fcmovbe
imul
inc
lret
xor
pop
arpl
jnp
push
rorb
pop
hlt
loopne
and
fidivrl
push
inc
xchg
out
ret
cmp
ffreep
faddp
stc
inc
mov
xor
pop
xchg
fwait
mov
js
pop
in
fs
cld
movsl
int
mov
inc
in
mov
cwtl
mull
jmp
rcr
movsl
rol
hlt
outsl
shlb
dec
scas
mov
dec
inc
adc
rolw
dec
add
add
sub
xor
mov
add
out
std
iret
add
cmpsb
push
xchg
push
lea
dec
mov
or
xchg
pop
sbbl
rcll
shrl
xor
adc
mov
rcrb
push
xchg
ret
out
scas
jecxz
cmovns
decl
jne
xchg
movsl
mov
fcoml
jae
sbb
out
jg
mov
xchg
push
push
push
xorl
int3
push
lds
adc
ljmp
sbb
out
jle
mov
imul
movsl
jae
in
rcr
jge
and
in
jmp
dec
mov
mov
aas
and
addl
rorl
dec
ja
stos
je
insb
fidivrs
dec
mov
jbe
adc
xchg
test
lods
xchg
leave
je
in
inc
insl
and
notb
cmp
mov
ja
pop
sub
pop
jecxz
and
in
xchg
cld
mov
jne
loope
xchg
sahf
fistps
mov
out
lock
aam
inc
test
je
cmpsb
fbstp
and
xchg
dec
adc
mov
dec
mov
loopne
out
xchg
mov
scas
dec
dec
jl
loope
movsl
mov
add
daa
dec
lret
insl
add
pop
in
dec
ret
loop
pop
cmpsl
jecxz
mov
out
ljmp
ret
cmpsl
mov
dec
fwait
pop
fdivl
and
add
xor
movsl
repz
pop
jecxz
cld
hlt
jno
xor
mov
lds
jo
lds
jo
mov
jbe
pusha
out
stc
dec
sub
cld
test
add
dec
add
lahf
xchg
cld
decb
insb
lret
push
dec
and
xchg
std
ficompl
iret
gs
in
stos
or
jmp
out
cmpsl
rcll
ret
iret
inc
mov
rclb
jb
add
cmp
pop
mov
mov
xor
out
mov
rolb
fcmovne
imul
jbe
adc
mov
adc
mov
adc
jle
and
in
nop
mov
scas
lcall
cmp
inc
inc
imul
add
stos
cmp
cs
in
fdivs
fidivrs
adc
ljmp
jmp
arpl
out
mov
and
test
stos
mov
or
jo
dec
mov
nop
dec
cmpsl
stos
ljmp
mov
lea
movsb
adc
jecxz
je
int
lds
lds
flds
dec
mov
mov
and
xor
leave
lcall
mov
gs
cwtl
lods
xchg
hlt
outsl
outsl
repz
cmp
cld
inc
lahf
hlt
push
outsl
push
adc
insb
out
ljmp
ja
out
ljmp
arpl
fsubr
and
ret
test
jae
xchg
dec
ljmp
pop
shlb
in
arpl
stos
ljmp
addr16
mov
mov
movsl
ret
int3
sti
lods
push
mov
lcall
or
sub
movsl
arpl
pop
ret
in
and
out
lock
mov
mov
cmp
ja
mov
loope
jns
xchg
xchg
pop
inc
mov
xor
jg
pop
loop
in
rcrl
jmp
ja
out
roll
or
or
sub
xchg
ja
adc
insb
xchg
loop
ja
fmul
loop
or
cmc
leave
jns
loope
andb
dec
ficoms
js
mov
outsb
hlt
inc
rcrb
fistps
adc
rorb
or
sbb
in
pop
fwait
mov
pop
inc
popa
jecxz
scas
jns
or
mov
or
xor
jb
or
push
sahf
or
xchg
mov
icebp
lea
lds
gs
sub
mov
or
outsl
int3
jmp
lock
ds
cwtl
or
shll
pop
das
movsb
inc
aad
jp
fdivrs
jp
mov
pop
jne
and
push
in
sub
cmc
cld
pop
pop
mov
cmpsl
mov
xor
lock
or
aam
ljmp
xlat
xlat
mov
test
mov
and
lock
pop
les
dec
mov
cmp
dec
mov
pop
in
pop
or
out
lcall
adc
jle
jno
jle
cmpsb
sub
mov
jo
cmp
mov
lea
movsb
ds
jecxz
add
int3
sbb
inc
pop
inc
jp
movsl
cli
repz
jae
cwtl
or
shlb
pop
das
xchg
inc
aad
jp
aad
xchg
jp
mov
pop
pusha
call
sub
cmc
cld
or
mov
cmpsl
mov
xor
adc
decl
or
rcrl
gs
iret
lods
lret
xlat
mov
xchg
jp
jno,pt
lahf
lret
mov
mov
adc
ret
mov
add
mov
sti
test
push
inc
jo
cltd
cmpsl
jo
das
sub
xor
outsb
pop
out
jb
repz
push
add
ljmp
xchg
mov
arpl
push
dec
jmp
cmp
xor
add
pop
xchg
and
repnz
mov
xchg
test
inc
pop
jl
stos
mov
repz
pop
ljmp
enter
int
adc
inc
xchg
push
ds
jne
stc
xchg
dec
cmpsb
xchg
sub
lods
insb
mov
pop
enter
inc
out
mov
ljmp
xlat
nop
push
fsubl
repz
xor
fwait
mov
stc
pop
cmc
fdivs
cli
stc
and
aaa
inc
lds
xlat
imul
cmpsl
jno
dec
fcompl
outsl
lret
scas
stos
fimull
cmpsl
mov
orl
mov
hlt
jecxz
test
in
pushl
in
mov
loope
mov
imul
int
iret
xor
fwait
and
fcoms
cwtl
dec
push
sti
mov
imul
rorl
jl
cmp
outsb
xchg
cmpsb
mov
cmp
mov
dec
dec
pop
into
dec
and
ss
cmp
shr
movsl
insb
push
fcompl
sbb
jl
adc
shrl
div
int3
sti
outsl
imull
in
fisttpll
je
lret
push
cwtl
pop
rcll
or
ljmp
mov
je
mov
jno
flds
test
imul
into
lret
rcll
pop
icebp
and
lock
imul
xchg
push
adc
mov
repnz
loopne
out
xchg
sahf
xchg
scas
call
fdivr
mov
pop
rcll
je
mov
fcomps
add
push
inc
push
fs
xchg
mov
and
xor
adc
fnstcw
and
pushf
xor
add
loopne
int3
jle
cmp
shrb
mov
xor
repnz
mov
inc
scas
xchg
add
repnz
add
fadds
xchg
rorl
mov
push
jno
call
or
repz
adc
test
xchg
ror
orb
iret
rorb
fidivrs
jmp
imul
mov
sub
cmp
sub
adc
adc
shrl
nop
sub
sbb
adc
pop
sarb
or
insl
rolb
lcall
cs
xor
popl
mov
push
shlb
pop
or
jns
adc
xchg
aam
hlt
jecxz
subl
mov
shrl
pop
imul
xor
sbb
mov
dec
lea
movsb
push
add
mov
cmp
mov
dec
arpl
mov
and
popf
push
scas
ja
xchg
push
mov
cmp
jno
cmp
and
inc
outsb
lret
jecxz
push
fwait
addr16
imul
rcrb
insb
add
mov
xchg
fimuls
imul
cwtl
inc
jmp
fldl
out
add
daa
mov
gs
mov
add
dec
scas
ret
fildll
outsb
stos
inc
jecxz
mov
ljmp
push
lahf
mov
test
pop
inc
out
jmp
adc
insl
shrb
xchg
push
or
mov
xor
pop
es
out
sbb
jecxz
xchg
add
push
je
clc
mov
or
or
mov
iret
faddl
fbstp
cmpsl
sub
iret
and
xchg
jge
shll
stos
imul
add
xchg
cmc
or
pop
push
mov
rcrb
sbb
movsl
cmc
mov
es
orl
mov
xchg
mov
push
pop
fimuls
repz
aas
stc
data16
inc
mov
test
call
and
daa
inc
dec
jle
sub
addr16
popa
aas
sub
dec
in
inc
iret
adc
mov
or
cli
push
lds
mov
inc
lahf
push
xor
adc
popl
jbe
sbb
mov
mov
ds
or
stos
jecxz
movsb
sahf
jb
outsl
dec
mov
mov
push
jge
jne
cmp
inc
imull
cmc
pushf
xadd
iret
or
iret
xchg
xor
lds
fdivrs
cmp
cmp
ret
xchg
mov
aad
add
adc
les
in
jl
into
add
and
testl
mov
je
sub
mov
add
cmp
loope
sti
lea
test
and
out
lea
es
loope
adcl
pop
xchg
cmc
sub
inc
cmp
pop
and
insb
xchg
mov
rcll
out
inc
and
pop
xor
mov
test
movsb
mov
int3
sub
cmc
xorb
int
out
mov
jmp
lods
mov
or
jecxz
cmp
orb
jecxz
xor
add
cltd
mov
out
lea
dec
xor
xchg
int
scas
xor
test
mov
cmp
add
lret
adc
cmp
in
mov
or
scas
clc
pushf
sarb
mov
subl
push
push
pop
negl
test
pop
jns
int
inc
push
adc
jno
mov
or
adcl
testl
xchg
mov
xchg
push
mov
xchg
sub
enter
sarb
mov
cltd
arpl
sbb
outsl
clc
clc
dec
movsl
xchg
scas
cmp
cmpsb
adc
shlb
dec
lods
cltd
lods
xchg
insb
and
lcall
int3
scas
aam
fdivl
in
in
jecxz
push
or
aaa
int3
mov
pop
cmpsb
test
pop
cmp
inc
mov
or
mov
inc
cmpsb
je
xchg
pop
lea
xlat
scas
mov
or
jl
out
sarb
in
in
addb
cmpb
dec
adc
out
stc
cwtl
mov
jp
inc
or
fsubl
pop
insb
adc
adcl
adc
and
mov
push
or
fsubr
inc
repnz
fsubrs
cmpsl
sbb
movsb
inc
xor
xchg
jp
lahf
popf
aad
mov
or
jne
xor
xchg
xchg
lea
in
ja
cmc
adc
bound
mov
into
lea
int3
adc
aas
int3
adc
fdivl
in
in
jecxz
push
or
aaa
fmul
rolb
movsb
xor
cmp
inc
out
pop
mov
inc
push
add
out
ds
lsl
mov
xchg
shll
lock
jo
dec
xchg
gs
add
outsl
dec
std
pop
daa
lods
xor
mov
cmp
sbb
stos
cmpsb
mov
scas
jnp
sti
pop
test
movsb
subb
mov
lea
stos
mov
mov
cmp
mov
cmp
xchg
cmp
cltd
xor
pop
ficompl
mov
sarl
cmpsb
clc
mov
shlb
mov
test
mov
testb
add
jo
hlt
xchg
and
dec
jb
loop
mov
pop
mov
std
xchg
inc
xchg
out
cmpsl
pop
jne
mov
cmp
xor
xchg
arpl
cltd
xchg
mov
loopne
xor
or
cmc
push
ja
lds
add
jae
aaa
outsl
inc
pop
inc
aad
xor
pop
icebp
sbb
test
aam
cmpsl
jns
dec
ret
fsubs
orb
mov
jno
mov
mov
jmp
insb
in
mulb
cmc
shlb
movsb
movsb
mov
data16
mov
out
adc
insl
mov
sbb
jno
in
jl
aam
or
pop
cmpsl
mov
fdivrs
loop
jno
icebp
fstpl
pop
adc
aad
cli
dec
mov
std
test
xor
xor
shlb
sbb
add
cmpsl
pop
and
insl
sbb
jmp
xchg
popa
in
ljmp
sub
test
out
pop
adc
sub
cmpsl
movsb
lcall
mov
cwtl
xor
sbb
push
pop
insb
aam
scas
mov
and
je
int3
aas
cmpsl
mov
mov
inc
loopne
test
inc
jo
aad
pop
addl
add
ja
rclb
subb
push
mov
jno
pop
popf
loope
aam
sarb
outsl
xchg
cmp
push
or
js
cltd
jp
sub
mov
ja
push
mov
jg
in
leave
imul
aas
jae
mov
jg
sub
jo
push
inc
test
jecxz
jle
sbb
cmpsl
or
sub
dec
pop
aam
add
xchg
fldt
clc
stos
pop
adc
out
or
movsb
and
xor
adc
test
cmpsl
stc
loop
sbb
in
dec
and
fidivl
cmpsb
daa
push
popf
xor
push
ljmp
mov
test
sub
movsb
scas
cmp
imul
push
push
test
loopne
sub
pusha
mov
cmpsl
mov
icebp
divl
add
loopne
mov
test
lock
fisttpll
pusha
mov
pop
lea
xor
jecxz
and
and
test
fldcw
jecxz
add
mov
out
inc
repnz
scas
decb
mov
addr16
shr
cmp
sbb
outsb
out
xchg
clc
xor
in
test
out
cli
xor
mov
inc
sub
lret
push
jecxz
jg
rcll
xor
int3
imull
lods
mov
in
subb
adc
repnz
dec
sub
or
fidivrs
inc
test
or
loop
cmp
iretw
test
rorb
sub
cmpsb
mov
push
bound
ficoms
scas
sub
adc
mov
push
cwtl
xcrypt-ctr
cmpsl
sbb
test
sub
fists
js
test
dec
sbb
pop
lret
subb
movb
sbbl
shrl
adc
sub
xor
cmpsl
mov
cmp
enter
push
movsl
js
adc
in
dec
jne
aaa
lock
ljmp
cmpsl
add
int3
repz
testl
std
inc
push
hlt
int
sub
loop
sub
mov
mov
sub
and
push
fucomip
jmp
call
lods
and
test
cli
shlb
arpl
aaa
cs
push
test
in
leave
push
out
pop
sub
out
jbe
icebp
test
push
hlt
loop
pop
insl
je
mov
xchg
sub
jns
loop
loopne
faddp
test
movsb
cmpsl
inc
sbb
aaa
jle
add
or
cmpsl
cmp
mov
repz
test
test
sub
lahf
iret
fnstcw
mov
cltd
and
addr16
sub
sub
adc
sbb
lock
lahf
and
pop
loop
jns
ret
jg
jns
aas
inc
and
dec
scas
mov
or
je
xchg
divl
and
inc
push
lods
cwtl
mov
lfs
xchg
fdivs
push
cmovl
in
or
int3
test
ret
test
mov
add
shl
mulb
inc
mov
insl
jp
dec
and
or
sbb
sub
or
lds
mov
push
sub
insb
das
lea
jge
jle
stos
lods
pop
lds
mov
in
addr16
rcl
push
xor
lret
dec
loope
pop
popf
pop
inc
mov
out
or
and
shll
jl
sub
mov
mov
push
pushf
in
insb
sbb
mov
daa
mov
pop
mov
sbb
xchg
xchg
cmp
dec
or
sbb
fsub
lret
mov
in
clc
sbb
int
je
pushf
pop
js
in
aad
jge
fdivrl
loopne
cmp
jo
pushf
pop
adc
int3
loopne
and
adc
test
in
cmp
pop
mov
lods
movsb
sahf
push
cmpsl
aam
lret
stos
nop
mov
popf
mov
sbb
outsb
fs
dec
in
movsb
cmp
out
xchg
adc
dec
sbb
iret
lret
jle
jg
mov
pop
aad
sub
clc
ja
int
xchg
movsb
dec
mov
mov
test
clc
sbb
stos
dec
test
or
cld
scas
push
mov
xchg
push
or
sub
mov
leave
test
mov
frstor
inc
aad
inc
add
xor
dec
rorb
lds
mov
push
insb
mov
mov
push
cmp
adc
mov
rcl
addr16
jge
xchg
mov
ret
pop
dec
dec
or
pusha
fstl
add
push
ss
dec
jge
out
or
jmp
cmpsb
stos
sarb
movsb
cmp
push
movsb
inc
sarb
cs
gs
mov
inc
shrb
pop
xchg
and
lret
cwtl
mov
shrb
iret
and
mov
cmp
or
test
jb
cwtl
aas
insb
sub
or
ret
cmp
add
out
out
lea
xor
mov
cmp
xchg
inc
mov
insl
insl
mov
arpl
sbb
aaa
push
xchg
std
daa
jae
fists
cmpsb
lret
inc
mov
sbb
mov
push
mov
outsb
scas
nop
or
fisubrl
and
xchg
int3
imul
outsl
jecxz
add
mov
shll
cmpsl
add
mov
shll
or
faddl
or
adc
es
or
dec
movsb
mov
pop
pop
cmp
jmp
xor
in
lods
mov
xchg
xchg
pop
lea
mov
std
cmpsb
inc
rcr
out
xor
xchg
hlt
mov
inc
clc
outsl
lea
rcrb
jo
adcl
call
subl
jecxz
and
mov
mov
jg
test
imul
ss
push
leave
or
movsl
xchg
or
test
imul
add
decl
pop
xchg
aas
ljmp
and
jecxz
push
or
bswap
xchg
and
call
mov
mov
ret
dec
outsb
jmp
cltd
in
jb
jno
enter
xchg
ja
addb
int
jbe
adc
sub
or
lea
out
lret
pop
cwtl
mov
push
pop
shlb
out
shl
lds
testl
push
xchg
sarl
std
push
adc
ror
mov
int
xchg
lock
dec
ret
in
in
div
jmp
icebp
imul
mov
sar
mov
jb
stos
out
mov
je
mov
out
std
and
jns
xchg
mov
out
in
nop
push
shr
and
lods
mov
jle
jae
pop
cmp
cli
iret
dec
mov
mov
ljmp
and
mov
mov
ja
ljmp
shrl
into
mov
loopne
mov
lock
ja
mov
outsb
mov
loop
decb
icebp
or
cmp
jae
repz
cmc
jno
mov
or
jbe
loopne
loop
icebp
adc
aad
loop
sahf
iret
mov
test
mov
ficoml
dec
int3
cmp
test
enter
sub
lock
hlt
into
int3
mov
and
es
test
lret
mov
addr16
mov
cmpsl
inc
pop
lods
shufps
into
out
jle
aam
or
ficoms
cmp
xchg
sub
mov
pop
in
lock
loopne
mov
adc
jecxz
adc
xor
repz
dec
push
sub
es
das
out
imul
mov
add
push
jmp
pushf
push
mov
shlb
repnz
jg
enter
mov
add
inc
call
in
hlt
scas
scas
ret
loop
jns
sbb
cmp
insl
enter
dec
sti
icebp
mov
dec
flds
lret
sbb
adc
fisttpll
fs
int3
xchg
jl
call
mov
xor
lds
sbb
push
cmc
int
clc
and
xchg
xor
sub
mov
cmp
stos
fcomps
rolb
inc
popa
push
cmp
out
sbb
and
mov
or
jmp
push
insb
push
std
xlat
adc
out
loopne
cmp
mov
mov
stos
ret
inc
testb
in
out
xchg
decb
fucomi
xor
jbe
repnz
sbb
sbb
jne
mov
jecxz
xor
inc
in
out
leave
outsb
mov
dec
sbb
aad
pop
call
ds
inc
and
jnp
adc
adc
mov
outsb
inc
hlt
jecxz
inc
ror
cmp
repz
adc
mov
dec
push
negb
add
add
lods
ret
shr
into
pop
jmp
dec
mov
mov
or
stos
push
xlat
mov
push
dec
inc
jmp
add
jmp
hlt
std
lret
push
mov
in
cltd
cmp
shlb
jle
dec
int
mov
int3
xlat
xor
int3
mov
xchg
pop
mov
add
xchg
das
push
mull
leave
or
xchg
pop
inc
scas
sbb
or
popa
add
sbb
push
fnstenv
push
xchg
ret
fwait
xchg
dec
aam
shlb
test
addb
inc
shl
cld
je
sub
insl
cltd
pop
mov
xchg
lock
leave
int
jbe
leave
inc
int
je
nop
arpl
jmp
test
lea
in
push
out
xor
mov
aam
sbb
and
push
mov
loop
xchg
jnp
jge
fwait
xchg
loope
out
cltd
sub
sbb
pop
dec
ror
xchg
insb
cmp
rcrb
je
in
and
stos
mov
mov
or
push
push
out
jno
sbb
add
pusha
xchg
cmc
dec
lock
movsb
into
stc
test
out
jmp
or
mov
rolb
lds
dec
lock
in
dec
fcomps
enter
test
push
and
adc
pop
mov
mov
mov
inc
in
aam
pop
mov
add
aam
divb
xlat
aaa
mov
adc
pop
fnsave
xor
fwait
mov
adc
in
inc
add
jecxz
test
pop
andb
add
mov
insb
inc
lahf
or
xchg
lods
push
cmpsl
dec
lods
mov
sub
mov
imul
sbb
sbb
repz
sti
sbb
ret
sbb
lret
sbb
and
sbb
sbb
sbb
sbb
negl
inc
sbb
sbb
xlat
add
mov
pop
mov
in
addr16
ja
lds
mov
add
xchg
mov
jno
repnz
and
and
movsb
sbb
pop
dec
aad
xor
xchg
sbb
pop
cmp
ljmp
pusha
push
pusha
and
pusha
xor
pusha
or
in
pusha
pusha
pusha
clc
pusha
dec
mov
and
jl
sbbb
mov
leave
xor
mov
divl
mov
cmp
inc
mov
bound
mov
sahf
inc
mov
leave
push
inc
push
leave
push
inc
insb
lods
inc
mov
mov
or
repnz
inc
pop
rcll
mov
or
pusha
pop
pusha
out
dec
pusha
sbb
pusha
out
mov
adc
sahf
pop
adc
sahf
jo
jns
adc
jmp
pop
arpl
jmp
mov
in
xchg
xchg
notb
mul
idivb
cli
int
scas
sahf
notl
sahf
cli
unpckhps
cmp
cmp
inc
pop
je
jb
mov
mov
iret
cmc
xchg
and
mov
mov
fcoms
testb
idiv
idivb
enter
cwtl
mov
sub
sbb
sbb
sbb
add
mov
mov
lods
dec
add
dec
pop
dec
aaa
dec
test
dec
loop
jnp
rorl
pop
dec
aad
pop
pop
xchg
mov
xchg
pop
int3
pop
dec
adc
mov
mull
push
mov
mov
push
mov
fldenv
adc
push
mov
mov
pop
mov
mov
add
cli
enter
sbb
mov
cwtl
xchg
sbb
adc
pop
adc
sahf
xor
test
imull
xchg
addr16
mov
inc
out
test
or
dec
lods
mov
lcall
pop
hlt
aad
pop
call
add
pop
sbb
and
aad
pop
cmp
inc
pop
jne
jle
cwtl
xchg
in
mov
cmp
mov
cmp
dec
cmp
jns
sbbl
adcb
xlat
sbb
out
add
or
addb
nop
stos
in
outsb
out
sbb
mov
mov
cmp
lods
mov
add
stos
std
xchg
adc
xor
mov
sti
mov
mov
in
test
das
arpl
jmp
js
mov
test
dec
xor
dec
add
mov
dec
testl
dec
xor
dec
sbb
dec
out
sti
dec
jns
lret
dec
dec
dec
fisttpl
pop
int3
aad
pop
jmp
xchg
mov
jecxz
je
sarl
lret
xchg
lret
repz
aam
lods
lret
mov
or
xchg
lret
dec
jge
iret
lret
pop
das
mov
mov
pop
pop
push
popf
out
pop
in
pop
jg
std
pop
dec
push
int
dec
outsb
push
in
insl
add
push
andb
xorb
addb
adcb
andb
xor
xlat
adc
mov
aaa
pusha
test
pusha
xchg
pusha
pop
pusha
in
xor
not
notb
and
cmp
sahf
or
addr16
sbb
lcall
jge
iret
sbb
fists
pop
cmpsb
sbb
mov
xor
sahf
sahf
cmpsb
or
sahf
adc
sahf
inc
add
lds
sbb
cmp
mov
cwtl
mov
xor
std
sahf
mov
adc
sahf
fcoml
sahf
in
adc
sahf
cld
adc
sahf
or
adc
sbb
and
sub
xor
cmp
and
dec
pop
push
aad
pop
mov
jl
push
mov
xor
push
jge
adc
div
divb
fldl
sahf
cld
adc
sahf
or
adc
sbb
and
sub
xor
cmp
inc
sahf
dec
adc
sahf
pop
adc
movsb
insb
cltd
es
jl
xchg
mov
mov
mov
mov
in
aad
je
lods
jecxz
sub
xor
dec
adcb
pop
or
or
insb
fcompl
xchg
repnz
pop
lock
mov
icebp
mov
enter
or
mov
mov
mov
xor
mov
dec
xor
xchg
jo
insb
cmp
cwtl
xchg
xorb
cmp
enter
or
in
loopne
sub
cmp
sub
sub
cmp
cmp
jl
adcl
or
cwtl
or
fmull
fadds
in
or
xor
lock
or
sub
xor
xor
cmp
cmp
inc
addb
orb
andb
mov
mov
pushf
or
subb
sub
call
cmp
clc
addb
adcb
xor
inc
or
or
or
mov
pusha
mov
pusha
or
pusha
add
adc
pusha
jecxz
dec
pusha
lret
pusha
pop
pusha
shll
pusha
pusha
and
pusha
sub
pusha
sbb
pusha
outsl
pusha
loope
ja
stc
pusha
jg
icebp
pusha
inc
pusha
leave
pusha
push
inc
lods
mov
andl
push
mov
dec
fisttps
dec
daa
dec
test
dec
aaa
dec
mov
dec
imul
jg
icebp
lods
std
mov
lea
scas
mov
sbb
pusha
adc
call
popa
pusha
mull
pusha
das
pusha
mov
pusha
cmp
pusha
add
pusha
or
pusha
addr16
int
dec
mov
jo
jl
js
mov
sub
or
mov
popa
lret
jne
sti
lret
ret
lret
xor
mov
outsl
and
sub
sub
xor
xor
cmp
sbb
pop
dec
sbb
sbb
xor
stos
sbb
sbb
sbb
sbb
iret
sbb
xlat
adc
pop
or
loopne
cmp
dec
pop
dec
aad
pop
push
aaa
jl
cmp
pushf
or
pop
push
add
pop
gs
repnz
jo
lret
pop
push
pop
es
in
pop
inc
adc
mov
mov
mov
lahf
mov
pop
call
mov
pusha
out
pusha
pusha
pusha
mulb
pusha
pusha
jo
pusha
dec
pusha
into
pusha
inc
pusha
pusha
pop
pusha
fisubs
pusha
es
test
lahf
les
sahf
nop
and
gs
insl
and
add
add
subl
pop
add
adc
pop
push
aad
pop
jno
out
adc
movsl
or
test
sahf
negb
test
test
cmp
mov
jle
and
pop
imulb
ret
mov
sbb
sbb
in
sbb
xor
mov
sub
stos
arpl
jmp
push
insl
fdivl
mov
push
aad
pop
pusha
mov
sbb
inc
shlb
dec
jmp
js
dec
into
xor
xor
ret
mov
cmp
mov
cmp
mov
push
js
lret
sbb
sub
mov
jns
sbb
pusha
cwtl
mov
cltd
cmpsl
arpl
xchg
fdivp
xor
leave
fildl
leave
call
inc
add
leave
adc
inc
and
sub
sbb
inc
adc
sahf
imul
jns
add
mov
mov
cmp
lock
mov
leave
adc
leave
and
leave
jp
hlt
test
std
aad
jno
das
cwtl
pop
or
aas
lods
insl
jge
sbb
loope
cmp
lret
neg
imulb
mov
cmp
jmp
xchg
sbb
outsb
insb
out
dec
dec
dec
aam
mov
pop
cltd
aad
pop
iret
aad
pop
jecxz
push
pop
adc
test
cmp
dec
pop
outsb
mov
fwait
mov
cmp
mov
push
cmp
inc
testb
movsl
mov
lret
arpl
jmp
inc
arpl
jmp
fbld
jmp
sub
sub
xor
xor
cmp
lret
jge
dec
push
mov
pop
not
fs
fsubrl
lcall
xor
pop
jecxz
gs
jmp
inc
shrb
in
fwait
inc
or
mov
lock
sbb
loopne
xchg
mov
in
pusha
outsl
aaa
movsl
sub
ret
shll
push
pop
subl
or
xor
or
or
fcompl
loopne
mov
fldt
sti
sarb
mov
cmp
cmp
push
aad
jne
add
dec
lea
mulb
lret
pop
mov
xor
mov
les
adc
sahf
sti
or
mov
adc
sahf
dec
adc
sahf
pop
adc
sahf
imul
mov
andb
repnz
push
push
lret
mov
mov
insl
pop
icebp
pop
push
push
rclb
cmp
mov
or
or
adc
and
and
xor
xor
adc
sbb
pusha
mov
aam
adc
cwtl
mov
popa
sbb
sbb
sbb
sbb
sbb
iret
sbb
fistps
pop
add
mov
mov
push
in
out
dec
addr16
lds
jno
orb
push
sbbb
subb
cmpb
inc
orb
sbbb
xor
fists
pop
adc
mov
mov
xor
popf
sbb
in
sbb
std
inc
jnp
xor
mov
push
xor
es
cs
pop
ds
pop
dec
aad
je
stc
mov
xlat
mov
lret
in
mov
or
pushf
leave
in
outsb
ftst
adc
outsb
jnp
adc
xor
sbb
enter
mov
outsb
imul
je
imull
and
test
add
in
or
stos
sbb
mov
rcrb
loop
ljmp
push
mov
cs
mov
mov
mov
inc
sbb
or
lock
cld
mov
lods
adc
iret
test
mov
inc
cwtl
xor
mov
xchg
roll
sbb
cmp
leave
negl
les
sar
push
insl
inc
pop
or
mov
sub
push
pop
push
pop
and
aaa
addr16
cmpsl
lods
lds
or
mov
push
sub
sti
int
sub
mov
cwtl
pop
sbb
adc
shll
imul
or
mov
sbb
mov
inc
mov
or
xor
pusha
push
adc
mov
fsubs
dec
mov
inc
inc
dec
leave
iret
mov
mov
lods
mov
leave
add
shll
mov
sbb
addr16
sti
mov
pop
xor
dec
in
adc
sbb
or
iret
and
mov
fidivs
nop
cltd
int3
mov
es
das
jle
mov
loop
jl
vmovddup
pop
dec
test
in
jge
iret
mov
fisubl
in
sub
mov
insl
xchg
pop
outsb
pop
in
xchg
testb
mulb
testb
popf
negb
lret
out
outsb
arpl
sbb
shrl
push
adc
arpl
je
mov
add
inc
inc
arpl
xchg
sub
cmp
mov
or
push
xchg
int
scas
push
repz
cmp
negb
mov
das
lret
adc
gs
imul
pop
lcall
lea
lret
sbb
or
mov
push
add
push
in
pop
jbe
xchg
push
roll
sbb
inc
in
or
das
leave
inc
inc
orl
roll
adc
push
mov
pop
dec
mov
push
push
push
or
mov
cmp
lea
icebp
fdivrs
insb
in
sub
testl
lret
xchg
xor
imul
jg
sti
xchg
insb
daa
sub
outsl
nop
pop
dec
mov
mov
fistpl
inc
sbb
pop
pop
inc
and
mov
aad
pop
or
adc
adc
popa
mov
push
pop
dec
push
push
aad
pop
pop
aad
fs
fnsave
push
std
xchg
mov
lods
leave
test
add
mov
jecxz
les
sbb
xchg
repz
jmp
lds
adc
adc
mov
mov
pop
sahf
pusha
cs
stos
adc
mov
mov
aad
mov
icebp
negb
negb
lret
imul
sti
dec
dec
dec
ret
dec
inc
lods
and
cmpb
das
lds
cmp
inc
jl
mov
mulb
divb
cltd
adc
sahf
mov
orb
push
jb
pop
sti
adc
sbb
mov
pushf
arpl
int3
sub
cld
dec
mov
je
and
addr16
xchg
lahf
cwtl
insl
mov
inc
pop
ret
mov
movsl
into
mov
cmpsb
dec
adc
aas
inc
test
pusha
cwtl
mov
xchg
mov
out
decb
mov
mov
inc
sbbb
aas
sub
iret
cli
lods
ja
daa
xchg
test
sub
adc
sahf
cmc
adc
sahf
or
inc
jecxz
popf
pusha
aad
xor
jmp
lret
push
lret
scas
mov
add
sahf
rcrb
lds
mov
sbbl
or
mov
xor
adc
mov
mov
mov
cmp
mov
cmp
mov
cmp
mov
and
sbb
pop
mov
sbb
push
pop
outsb
pop
fdivp
dec
xchg
leave
fwait
inc
scas
xchg
jbe
into
and
jo
leave
lret
daa
mov
pop
je
and
out
jg
aad
xchg
mov
jl
mov
insb
mov
push
mov
sarb
fwait
mov
add
mov
dec
pushf
loopne
inc
leave
popa
inc
jns
orb
fs
sub
xor
xor
leave
xorl
sbb
xorl
lcall
leave
movsb
test
xchg
sbbl
insb
stos
mov
and
test
movsb
mov
cmp
divl
pusha
int3
pusha
inc
pusha
and
sahf
mov
lds
mov
mov
dec
popf
lea
pop
xchg
pop
jp
add
inc
xchg
xchg
leave
mov
mov
leave
xor
sbbb
dec
rclb
stos
dec
loopne
and
lock
int
cld
leave
into
push
inc
fisttpll
mov
inc
xor
mov
int
shll
icebp
and
cwtl
jl
aad
ss
daa
clc
mov
pop
daa
insb
and
into
mov
jg
jmp
xlat
pusha
andb
xor
push
xorl
out
sahf
dec
push
dec
dec
and
dec
mov
dec
leave
push
cs
xchg
testb
jl
sahf
incl
pop
lods
sub
cwtl
adc
pop
out
shl
mov
mov
lods
mov
mov
pmovmskb
in
push
pusha
and
int
jbe
jne
jmp
add
adc
decl
out
clc
adc
push
cltd
push
leave
pop
inc
addr16
xorl
xchg
lods
fsubrs
mov
xor
cmp
cmp
dec
mov
xor
pushf
call
movsl
shlb
adc
push
sti
pushf
mov
or
mov
sbb
iret
in
outsb
and
mov
xchg
dec
aaa
movsl
mov
pop
out
or
aaa
aad
pop
popa
mov
push
fs
adc
sahf
ficoml
andl
sbb
fs
jg
jbe
lods
push
jl
fsts
lods
dec
movsb
mov
mov
cmp
in
sbb
stc
cmp
push
push
rcrb
scas
adc
xchg
xchg
cmpsb
in
dec
and
sbb
pusha
push
adc
lods
xor
sbb
jb
cmp
mov
popa
mov
pop
mov
testb
testb
push
or
xor
mov
push
inc
mov
rorl
outsb
in
stc
lahf
jbe
sub
in
mov
fwait
adcb
pop
je
push
mov
mov
iretw
test
rol
gs
cmp
push
inc
int
and
dec
cmc
and
sti
imulb
ds
outsb
sub
inc
sbb
fwait
xor
andb
and
div
lret
aaa
inc
lds
aad
fs
jbe
iret
test
cli
pop
stos
xchg
dec
mov
sub
or
adc
mov
pusha
call
push
aaa
add
mov
ss
mov
mov
sbb
push
andb
inc
or
jb
test
adc
outsb
jns
mov
imul
and
jb
mov
mov
pop
add
lea
lods
xorb
mov
fs
outsb
jle
inc
out
pop
mov
stc
jmp
xor
out
cmp
scas
arpl
iret
mov
dec
sub
mov
stos
je
movsl
push
mov
clc
lds
ljmp
adc
pushf
popf
fwait
or
mov
stos
or
or
jb
cld
in
or
out
pmaddwd
or
js
mov
pusha
iret
and
jns
sbbb
pop
out
lock
dec
adcl
push
stc
insb
mov
inc
syscall
jg
pop
sub
aad
scas
add
addr16
les
pop
test
pusha
xor
int
fmull
out
mulb
in
outsb
push
in
outsb
pop
in
pushf
mov
sbb
ja
jge
lahf
sbb
out
jb
lods
xchg
mov
jecxz
aaa
push
xchg
mov
pop
imul
or
popl
sbb
cmc
sbb
sbb
xchg
adc
ja
lret
jge
aad
jbe
scas
mov
vextractf128
iret
das
cmp
lods
stos
sbb
leave
mov
cmp
mov
fbld
cmp
sbb
sbb
in
mov
lods
mov
jnp
mov
popa
stos
iret
sub
mov
out
or
or
adc
pop
scas
outsb
mov
jp
sbb
and
gs
aam
gs
lea
mov
pop
jle
jae
js
and
leave
xchg
inc
add
sbb
and
push
mov
push
mov
sbb
lret
adc
lret
out
inc
insb
mov
dec
and
and
mov
or
sbb
sbb
daa
mov
mov
inc
mov
jb
in
outsb
xchg
in
outsb
add
sbb
inc
fs
sub
mov
test
xor
sbb
sbb
fdivrl
mulb
idiv
fbstp
mov
dec
fildll
aaa
nop
ficomps
testb
dec
mov
fdivl
test
pop
iret
push
lea
jp
mov
sar
lods
scas
sub
push
jo
inc
xchg
push
mov
js
xchg
popf
cltd
fwait
mov
lret
outsb
xor
dec
mov
es
pushf
lret
insb
add
in
inc
mov
das
stos
adc
ror
xchg
xchg
mov
xor
sub
mov
push
mov
mov
add
mov
mov
add
leave
lret
inc
loopne
cmp
leave
arpl
pop
test
mov
testl
filds
and
pop
cmp
movsl
cli
or
addl
cmp
pusha
mov
pusha
mov
test
mov
dec
jp
adc
iret
fxtract
aaa
adc
divb
testb
lret
fnstsw
mov
into
xchg
fwait
xchg
push
mov
arpl
daa
iret
test
mov
mov
mov
outsl
mov
xchg
mov
cli
or
inc
push
leave
sbb
test
sbb
cwtl
mov
lret
icebp
in
std
or
dec
sub
add
mov
or
pop
and
sbb
mov
adc
out
shr
rorb
dec
cmp
dec
mov
inc
adc
out
in
fistps
xor
mov
cmp
push
addb
movsb
push
pusha
and
cmp
push
shrl
dec
adc
jp
iret
adc
test
xor
xchg
jo
and
add
add
scas
mov
out
cmpsb
in
jne
adc
xchg
jl
iret
fmul
xor
inc
inc
fisubrl
inc
xchg
fwait
mov
add
sbb
xchg
xchg
mov
lods
dec
cmp
je,pn
mov
push
ds
repz
js
jbe
jg
sbb
cwtl
adc
loope
fcoms
or
andl
test
cmp
orl
adc
negb
lret
out
push
repnz
dec
lea
jl
repnz
jmp
pop
cmc
inc
add
ret
mov
cmp
fwait
nop
mov
popf
int3
les
adc
test
mov
cmpsb
sub
mov
dec
inc
adc
xorb
mov
ljmp
gs
clc
jb
int
cmpsb
scas
mov
or
lds
fisubrl
push
es
xor
fistps
sbb
imull
fadd
fldt
in
jne
xor
popa
pop
jmp
nop
fadds
adc
pushf
sbb
lret
fs
sbb
pop
rcll
filds
insl
lret
sbb
mov
sub
mov
pop
and
xor
push
dec
jne
stc
je
fcomip
inc
mov
cmpsl
insb
sub
push
mov
fdivrl
xchg
or
shlb
fcomps
movsb
and
mov
add
mov
arpl
push
outsb
jl
js
cmpsb
and
nop
push
mov
xor
mov
cmp
mov
mov
push
xchg
cld
shr
jmp
aaa
xchg
repz
fdivs
lcall
xlat
pusha
pop
sbb
xchg
push
push
add
jno
mov
cmp
lea
add
xor
mov
pop
in
loope
jecxz
sbb
jmp
js
mov
insb
fdivl
stos
and
lret
mov
mov
mov
imul
shl
xchg
sti
dec
dec
lock
mov
sahf
fists
push
lock
iret
jno
sbb
push
insl
or
adc
cmp
dec
or
in
aad
sahf
or
into
xchg
push
aas
inc
jno
mov
lea
ja
dec
idivb
icebp
testb
orl
mov
out
pushf
inc
nop
mov
xchg
or
test
sbb
nop
orl
lock
and
movsl
push
xor
outsl
sbb
test
imul
mov
jecxz
subb
ljmp
jne
movsb
dec
mov
lret
js
sbb
jns
xor
jp
dec
ss
xor
jl
les
xchg
xchg
and
out
lods
xchg
loop
jp
and
daa
pushf
sti
jge
fwait
mov
pusha
aaa
mov
cmp
mov
enter
add
push
aaa
movsb
std
jbe
mov
sbb
xchg
xor
inc
mov
cmc
cmp
mov
movl
es
xchg
mov
mov
jmp
or
xlat
inc
in
lock
icebp
int
inc
loopne
xchg
ficoms
xor
out
jmp
out
loope
call
cs
cmp
mov
cs
jbe
inc
mov
rorb
mov
pop
mov
xchg
inc
in
adcb
aas
orb
cltd
int3
and
mov
and
xor
cmp
scas
sbb
sub
lds
ret
jbe
or
icebp
pop
mov
jecxz
aaa
loope
out
xchg
and
add
pop
dec
sub
dec
pop
icebp
stos
testb
test
aas
dec
mov
faddl
xor
pop
adc
sbbl
cmp
dec
lea
cli
cmpsb
mov
jle
cmp
pop
movsb
mov
and
xchg
out
in
inc
pop
mov
jg
rcrb
fsubl
jno
cmp
shr
inc
or
cmp
rol
pop
pop
sbb
jae,pn
mov
add
ss
mov
les
jg
aad
aas
and
mov
sahf
lret
and
cmp
mov
add
out
push
gs
xlat
lds
sahf
add
dec
shl
xchg
pop
int3
jmp
dec
inc
or
shrb
and
jge
lret
out
adc
enter
or
jge
test
call
lret
inc
test
xchg
sub
xor
cmc
pop
and
bnd
das
in
or
das
sbb
cmp
testb
mov
repnz
add
mov
lahf
xchg
jle
mov
cld
mov
sbb
leave
pop
xchg
jge
sub
add
jmp
jecxz
jecxz
movsb
sub
fucomip
mov
pop
sbb
mov
fiaddl
mov
aad
into
in
icebp
int3
dec
stos
jb
popa
ds
out
xchg
mov
adc
dec
ja
push
jle
mov
inc
in
repnz
cmpb
cmp
or
hlt
movsl
jmp
mov
aam
loopne
pop
jg
int3
mov
mov
pop
out
iret
rolb
cmpl
dec
sub
and
mov
sub
xchg
push
adc
sub
xchg
clc
mov
call
xchg
adc
in
and
rorl
mov
fsts
iret
stos
xor
mov
cmp
adc
dec
xchg
mov
dec
cwtl
dec
andb
sub
adcl
and
pop
lods
pop
outsb
jp
inc
fwait
jl
repz
aad
xchg
dec
push
jae
pop
pop
shrl
ret
stos
andb
adc
lock
jl
cmp
jle
xor
inc
repnz
jmp
push
ja
dec
stos
into
xchg
and
xchg
int3
dec
push
fdivrs
dec
add
mov
aam
mov
cmp
in
into
pop
loopne
into
inc
loopne
push
test
std
lcall
pop
in
fcoml
or
out
cmp
bound
lret
pop
fs
mov
loope
mov
push
mov
jmp
push
das
xchg
mov
cmc
pop
rcrb
ss
jmp
jecxz
push
sahf
jp
movsb
cmpsb
int3
jne
imul
bnd
xchg
out
mov
test
push
sbb
ja
movsb
xchg
mov
and
jb
sub
das
mov
in
cwtl
lea
jmp
int
inc
inc
or
adc
aam
cmp
xchg
enter
jno
movzwl
or
ffreep
jecxz
repnz
call
repz
xor
and
xor
jno
popf
xor
sarb
lods
mov
shll
adc
inc
push
jp
xlat
ds
mov
sarb
hlt
out
sbb
inc
pusha
push
popf
test
cli
sbb
lcall
inc
and
mov
shll
mov
in
pusha
rclb
push
ret
push
xlat
cmp
sahf
icebp
mov
ljmp
aam
inc
sbb
pop
jo
xlat
add
aas
out
or
call
mov
insl
nop
test
push
xor
hlt
movsb
pop
outsl
mov
xchg
add
into
jae
ss
sbb
mov
int
adc
mov
fsubs
xlat
in
cmpsl
jnp
ficoms
jmp
xor
les
cmp
sti
sbb
xor
and
fcomp
das
scas
mov
add
add
pop
sub
sub
dec
or
bts
sub
sub
cmp
add
add
call
lcall
xor
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
shl
sub
xchg
mov
shl
shl
test
adc
btr
mov
and
btc
btr
jmp
lcall
ret
or
cmp
add
test
cmp
cmp
test
movzwl
jmp
lcall
xor
add
add
pop
xor
xchg
push
bts
btr
btr
movzbl
sub
btc
bswap
not
sub
call
lcall
incl
ret
neg
sub
bsf
and
test
and
shl
mov
and
dec
jmp
lcall
adc
cmp
mov
shr
mov
btc
add
mov
mov
xchg
push
push
xchg
dec
add
add
call
shl
and
add
mov
test
shr
shl
add
mov
shl
mov
mov
sub
add
mov
or
mov
shl
sub
xchg
mov
and
neg
or
adc
mov
cmp
movsbl
jmp
lcall
ret
or
or
mov
cmp
not
not
bt
adc
not
call
lcall
add
xorl
pop
xor
xchg
push
movswl
dec
add
xor
neg
movswl
add
test
and
dec
jmp
lcall
stc
add
xchg
ret
neg
sub
sub
bsf
bt
dec
or
bts
bsf
bts
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
add
mov
test
add
add
cmp
or
not
xor
btc
sub
jmp
lcall
or
call
test
test
not
bt
test
add
mov
add
btr
add
mov
xor
btc
or
add
btc
mov
test
mov
call
lcall
add
movsbl
test
shr
test
test
bsf
and
cmp
call
lcall
or
cmp
and
btr
shl
btr
or
not
shl
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
add
bt
test
or
bswap
neg
bt
mov
shr
call
lcall
test
enter
rorb
adc
shr
adc
btc
bsf
cmp
jmp
lcall
out
sbb
mov
mov
shll
roll
mov
bsf
mov
mov
xor
bts
btr
sub
shl
btr
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
push
xor
bts
adc
shr
or
sub
mov
mov
push
bsf
dec
test
mov
mov
test
adc
not
shl
add
not
test
xor
mov
mov
cmp
movzbl
shr
add
mov
not
mov
cmp
xor
movsbl
bt
or
test
inc
jmp
lcall
and
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
call
or
shl
bts
cmp
test
test
bt
call
lcall
add
dec
shr
dec
shl
btr
cmp
and
btr
cmp
mov
add
or
test
sub
neg
cmp
sub
neg
test
sub
mov
adc
test
movswl
mov
xor
inc
sub
mov
test
call
lcall
mov
shr
and
not
or
movsbl
test
xor
movzbl
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
sub
add
movzbl
or
btc
bswap
mov
neg
shr
test
xor
bsf
add
test
mov
dec
jmp
lcall
mov
mov
cmp
cmp
test
test
mov
add
shl
and
mov
cmp
neg
test
bsf
cmp
call
lcall
add
bts
test
btc
xor
cmp
cmp
bts
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
shl
and
xor
adc
sub
btr
or
sub
mov
shl
test
and
cmp
shr
adc
or
movswl
shr
movswl
test
test
test
shr
add
or
neg
mov
add
cmp
cmp
sub
not
sub
bts
bt
test
lea
inc
cmp
jne
btr
xor
neg
inc
and
dec
neg
not
test
cmp
dec
add
movzwl
mov
add
xor
movsbl
adc
or
not
call
lcall
je
not
cmp
add
add
xor
btc
bts
bsf
shl
sub
mov
movzwl
test
shr
bts
cmp
mov
btr
btc
call
lcall
mov
sub
test
test
shl
shl
test
bts
cmp
bt
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
mov
shl
not
movzwl
bsf
shl
cmp
btc
call
lcall
and
cmp
adc
sub
cmp
mov
cmp
add
shr
shr
shl
bt
bts
or
btr
xor
jmp
lcall
cmp
and
bts
or
btc
bts
and
mov
add
or
mov
shr
not
mov
test
add
sub
call
lcall
add
bt
cmp
test
sub
test
sub
xor
dec
push
pop
inc
add
loop
mov
bswap
or
sub
neg
sub
shr
push
decl
mov
add
and
inc
mov
cmp
cmp
not
or
mov
call
lcall
incl
cli
rorl
bnd
lds
mov
bsf
adc
or
push
shll
bts
shl
xor
shl
not
mov
btr
btr
dec
bts
push
test
add
bt
test
not
add
btr
sub
mov
neg
mov
adc
test
sub
xor
xor
push
push
pop
add
add
call
dec
test
inc
bts
movzwl
and
shr
test
movzbl
xchg
xor
btc
test
and
dec
mov
shr
add
bsf
mov
dec
and
or
mov
and
add
movzbl
call
lcall
mov
cmp
test
cmp
and
not
bt
not
btr
add
adc
shr
shl
add
adc
btr
add
bt
test
call
lcall
shr
neg
or
or
test
sub
and
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
sub
cmp
bt
mov
bswap
and
add
bts
cmp
test
inc
cmp
mov
and
xor
mov
call
lcall
rol
cwtl
xchg
mov
in
xor
bts
adc
not
and
inc
mov
adc
sub
mov
mov
movzbl
mov
or
cmp
je
mov
add
sub
bts
and
xor
cmp
and
add
or
cmp
bts
test
xor
add
sub
call
lcall
sub
test
btr
dec
cmp
neg
xor
adc
dec
sub
bsf
cmp
cmp
movswl
inc
sub
mov
call
lcall
je
mov
call
lcall
mov
mov
shr
loop
mov
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
and
call
lcall
jne
mov
and
call
lcall
add
add
adc
adc
and
xor
cmp
btc
push
decl
mov
add
dec
adc
and
xor
shl
sub
or
push
decl
mov
add
not
test
cmp
btc
shl
dec
btr
adc
add
shr
adc
xor
cmp
test
test
shl
add
jmp
mov
cmp
bsf
bsf
btc
sub
add
mov
mov
or
bsf
neg
shl
test
bt
xor
mov
dec
or
bt
sub
sub
shr
sub
movzbl
add
test
add
adc
adc
cmp
and
bts
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
cmpl
je
call
lcall
add
add
mov
jmp
lcall
cmp
jne
call
lcall
add
mov
jmp
lcall
call
lcall
jne
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
cmpl
je
add
mov
push
pop
pushl
pop
add
call
lcall
add
test
add
add
cld
mov
add
mov
or
call
lcall
in
add
or
jmp
lea
call
lcall
mov
sub
mov
jmp
lcall
mov
add
mov
cmp
xor
and
cmp
mov
cmp
mov
add
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
jmp
mov
add
call
lcall
jmp
adc
test
xor
adc
xor
adc
bts
push
push
not
add
shr
xor
and
add
not
bt
push
sub
mov
movzwl
not
add
sub
test
or
shr
or
test
mov
bt
sub
or
movzwl
and
btr
add
call
lcall
js
sub
xlat
and
sub
inc
bt
bt
and
lea
cmp
bswap
sub
sub
test
sub
test
add
mov
and
inc
cmp
test
movzbl
shr
adc
not
adc
test
inc
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
call
lcall
bsf
or
bsf
or
or
shl
and
sub
mov
adc
test
xor
bsf
movsbl
shl
add
neg
push
and
add
test
shl
xor
bts
cmp
dec
push
inc
xor
and
mov
btr
shr
test
or
shr
push
and
test
add
or
xor
btr
call
lcall
mov
or
add
adc
and
sub
or
btr
sub
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
adc
shr
xor
bts
movzbl
shl
test
call
lcall
sub
cmp
add
and
and
btr
not
add
dec
shl
inc
btc
shr
test
add
test
or
call
lcall
mov
inc
or
shr
or
xor
btr
cmp
and
jmp
lcall
or
jne
call
mov
xor
xor
sub
dec
je
js
mov
cmp
je
cmp
je
cmp
je
inc
jmp
sub
add
sub
jmp
sub
add
sub
sub
jmp
pop
ret
pusha
mov
mov
cld
mov
mov
inc
mov
inc
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
jae
xor
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
je
push
sub
mov
pop
mov
inc
jmp
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
sub
jne
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
push
mov
sub
rep
pop
jmp
dec
shl
mov
inc
mov
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
cmp
jae
cmp
jb
inc
push
mov
sub
rep
pop
jmp
cmp
ja
add
push
mov
sub
rep
pop
jmp
mov
inc
xor
shr
je
adc
mov
push
mov
sub
rep
pop
jmp
mov
sub
mov
popa
ret
push
mov
mov
mov
mov
shr
xor
add
dec
jne
pop
ret
and
sub
and
imul
outsl
je
arpl
and
xor
sub
sub
add
sub
sub
fs
insb
outsl
jo
gs
and
popa
imul
imul
sub
sub
and
sub
and
insl
popa
imul
insl
popa
jae
data16
insl
popa
imul
sub
and
sub
and
je
and
and
je
cmp
das
ja
ja
outsb
imul
insl
jne
outsl
insl
popa
jb,pn
das
and
sub
add
sub
sub
push
dec
dec
push
and
dec
inc
push
inc
dec
and
dec
push
inc
inc
push
inc
inc
and
push
dec
and
dec
inc
dec
inc
and
dec
push
inc
inc
push
dec
push
and
sub
add
adc
add
loope
add
ud2
sub
testl
xor
jb
xor
add
sbb
add
fiaddl
mov
das
xchg
std
add
lahf
sbb
cmp
or
xor
loopne
push
jno
add
and
sbbb
or
push
jecxz
xchg
je
scas
daa
jne
not
adc
adc
dec
and
loopne
loopne
add
jae
sub
lods
aad
lea
cmp
push
sbb
mov
out
lcall
rolb
add
add
jnp
rol
lcall
or
out
adcb
repnz
adc
push
add
je
xchg
std
cmp
or
push
add
shl
add
sbb
or
adc
or
insb
mov
insl
daa
xchg
sbb
fisubs
adc
sbb
push
sub
bound
inc
add
cmp
gs
sbb
or
push
mov
sbb
sahf
add
aad
jp
call
add
mov
xor
push
inc
push
dec
push
loopne
inc
pop
inc
aaa
push
cmp
pop
dec
push
dec
into
inc
inc
inc
xor
xor
jnp
cmp
push
jl
dec
inc
xor
rclb
pop
hlt
push
push
dec
push
inc
push
fmulp
cmp
push
inc
inc
xor
adc
inc
aaa
cmp
xor
mov
xchg
dec
test
dec
dec
ss
push
push
aas
inc
inc
stc
sbb
dec
inc
test
add
gs
dec
dec
cmc
adc
add
test
push
aaa
xor
dec
jns
add
dec
push
cmp
push
shll
shlb
pop
repz
ds
fs
cmp
sub
sbb
xor
inc
cmp
cmp
pop
pop
mov
push
inc
in
rcrl
inc
push
lret
jns
cli
ss
jbe
nop
inc
loope
add
jl
cmp
outsl
jae
and
cmp
cmc
cmp
outsb
cmp
jae
je
int
in
aam
addr16
insl
loopne
imul
call
ja
or
push
inc
mov
outsl
mov
clc
dec
sub
nop
aad
imul
xchg
push
and
rsqrtps
in
movsb
idivb
arpl
repz
xchg
lods
push
mov
adc
imul
sub
icebp
xor
out
lds
popa
aam
inc
repnz
call
mov
imul
leave
pop
fnstenv
push
add
inc
dec
jmp
xchg
and
outsb
mov
call
sbb
adc
stos
mov
add
push
cld
mov
inc
push
push
je
or
xor
inc
pushf
call
js
sbb
add
adcb
gs
xchg
fs
xlat
mov
addr16
clc
test
outsl
fmuls
and
dec
je
or
loope
fisubrs
das
or
les
leave
or
fs
je
cmpsl
aaa
data16
lahf
mov
leave
xchg
das
jne
jnp
hlt
js
jo
insb
fs
xor
stos
push
xchg
inc
push
or
dec
popa
jns
dec
mov
mov
shl
fwait
add
popa
add
lret
std
data16
add
push
push
inc
adc
pop
inc
mov
dec
popa
mov
dec
inc
add
mov
