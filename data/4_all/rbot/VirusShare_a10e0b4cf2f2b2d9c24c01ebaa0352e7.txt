mov
gs
pop
lods
fs
rcl
or
test
into
inc
adc
rcl
rcrl
add
mov
mov
loop
test
cmpsl
scas
jge
push
jl
fwait
sbb
sub
xchg
aaa
push
popf
mull
clc
je
xchg
out
sbb
int3
fwait
cli
cwtl
js
int3
mov
push
sub
cwtl
mov
mov
adc
sahf
sbb
test
sub
sub
inc
xor
sub
push
outsb
lods
and
mov
lock
lods
cmpsb
xchg
fwait
push
test
sbbl
imul
out
adc
repz
jp
mov
sahf
imulb
popa
lcall
in
sahf
cmp
or
test
add
test
testl
fisubs
jg
inc
cld
or
sbb
fwait
and
sbb
lock
lds
lods
push
out
jae
rcrb
push
ret
mov
sub
ja
cmpb
push
fldt
inc
stc
dec
push
shlb
icebp
lea
dec
dec
and
jg
jne
out
inc
popa
cwtl
nop
mov
std
lcall
sub
fcomps
fdivrs
mov
bnd
je
xchg
aas
int
or
lcall
mov
sbb
ret
mov
adc
mov
inc
js
ljmp
lcall
stc
sub
inc
mov
popf
mov
dec
das
stos
and
ss
or
scas
mov
and
pop
cmp
pop
mov
cld
bound
sbb
or
mov
movsl
iret
je
icebp
dec
es
jnp
movsl
sbb
xchg
cmp
jnp
dec
xor
dec
out
repnz
xor
xor
push
adc
add
sbb
outsb
jge
cmp
xlat
mov
rclb
int
mov
add
or
arpl
push
inc
push
fcmovnu
stos
jecxz
xor
sarb
int3
pop
push
mov
push
xchg
jnp
lahf
lods
mov
sbb
clc
sahf
xlat
outsb
stos
push
leave
fdivrl
xchg
in
lea
shr
clc
mov
jnp
pusha
mov
xor
ds
out
mov
test
cmc
cwtl
mov
cltd
pop
cmp
push
imul
leave
jb
xor
inc
jae
jle
mov
scas
subps
and
cmp
scas
mov
movsb
add
add
dec
pop
movsl
lret
jl
jne
cmp
lcall
xlat
rcll
push
mov
push
cmp
add
and
inc
dec
outsb
xlat
cmpsb
xchg
cmp
inc
rorl
outsb
mov
xchg
pop
jmp
aad
es
addr16
cli
cwtl
cmc
adc
sbb
bound
test
dec
jg
push
lret
dec
and
xor
sub
aaa
mov
cmp
lret
jno
or
jno
fisubrs
lahf
jnp
testb
lods
mov
sub
and
ss
or
push
out
push
cmp
dec
jg
inc
cmp
mov
lea
and
adc
mov
mov
mov
cs
sbb
incl
std
cwtl
pushf
popf
lret
lret
cwtl
mov
mov
mov
sub
shl
scas
mov
mov
push
push
int3
negl
pop
cmp
mov
mov
out
out
dec
mov
or
dec
mov
insl
leave
adc
mov
and
rcrb
cmp
ss
push
loop
xchg
pop
movl
std
ret
mov
movsb
and
inc
push
push
sub
clc
repnz
inc
and
jecxz
lcall
jae
stos
inc
loopne
fnstsw
imul
mov
cmpsb
and
lea
in
aad
jae
adc
insl
mov
xchg
js
mov
sub
lods
int3
adc
ss
adc
push
push
and
or
rcl
outsb
push
lret
clc
stc
nop
mov
adc
xor
je
inc
fucom
aad
loop
and
xchg
cmp
jecxz
push
into
mov
xor
adc
pop
sbb
sbb
and
sub
fwait
cmp
inc
fmuls
aad
and
bound
loopne
aad
xor
daa
dec
popf
icebp
jg
std
outsl
push
mov
sub
dec
pop
xor
pop
inc
aad
and
sti
fdivl
mov
scas
lock
push
mov
lds
mov
cmp
add
jmp
adc
xchg
mov
aas
fldcw
mov
outsb
jne
rcrl
pushf
xlat
ljmp
insb
mov
cmp
fisubs
push
xchg
xchg
pop
mov
and
arpl
pop
jp
imul
cli
push
mov
ds
mov
or
xchg
xchg
mov
mov
and
cli
jge
data16
test
cltd
dec
adcb
dec
and
fldenv
mov
outsl
xor
sbb
xchg
neg
sbbl
daa
sbb
sub
sub
add
jo
adc
push
dec
scas
out
into
xor
std
test
and
pop
add
mov
inc
or
fisubs
cmp
pop
inc
mov
jae
mov
ja
jmp
adc
mov
andl
cmpsl
push
js
ret
in
add
xchg
xor
and
in
pop
push
jg
mov
inc
mov
push
sbb
sbb
adc
int
dec
sub
ret
mov
movsl
add
pop
or
fisttps
div
mov
rcrb
push
inc
push
mov
sbb
xor
hlt
sub
fsubrl
adc
ss
and
arpl
dec
test
jns
xchg
sbb
sub
or
inc
fwait
into
mov
loope
pop
int
popf
ret
adc
ja
aaa
push
jae
insb
lahf
cmp
imul
test
and
popf
pop
mov
dec
test
hlt
jg
fistpl
loope
sub
mov
dec
adc
mov
sub
sbb
addr16
shrb
addr16
aaa
pop
lods
sub
cltd
mov
adc
ds
jo
vpmulhw
xchg
das
lods
mov
lods
push
hlt
arpl
aad
and
pop
mov
lock
adc
and
cli
jge
fbld
mov
jge
sbb
test
shl
cmp
jb
pushf
hlt
mov
cmp
jb
outsb
sub
cmpsb
daa
ljmp
mov
jno
lock
loope
push
aam
ror
lock
jmp
mov
sbb
mov
cli
jg
into
dec
xchg
push
push
pushf
shrl
inc
insl
jge
inc
fiadds
call
push
push
scas
ds
imul
lods
pop
jmp
xchg
pop
xlat
push
pop
dec
adcb
ljmp
xor
jbe
cmp
xchg
push
xor
xchg
xchg
jle
sbb
xchg
mov
cmpsl
push
adcl
scas
mov
cltd
dec
aaa
pminsw
loopne
sbb
mov
out
push
movl
jo
inc
icebp
jnp
and
inc
push
aam
mov
mov
into
nop
mov
shlb
es
pop
jb
aam
push
push
mov
pop
xlat
loope
lahf
sub
popf
in
xchg
test
movsb
sub
lahf
sahf
cmpsb
lods
ja
mov
cli
jae
mov
sbb
mov
inc
into
sbb
or
and
pop
imul
mov
mov
mov
jo
inc
push
push
jo
xchg
inc
cmc
and
mov
lahf
lock
xchg
push
aaa
add
lds
sub
jnp
adc
mov
andb
ret
gs
push
cltd
push
sbb
bound
xor
cltd
mov
out
lahf
je
push
outsl
adc
xchg
push
xor
adc
sahf
or
xchg
ljmp
hlt
ljmp
xor
mov
rcrl
inc
sbb
sub
or
inc
sbbb
pop
dec
iret
aam
dec
rolb
dec
xchg
or
push
sarb
or
xor
ljmp
mov
loope
adc
inc
and
addr16
fnsave
push
inc
inc
pop
xor
movsb
test
mov
inc
inc
adc
and
incl
or
or
adc
jo
adc
add
add
mov
push
cmp
adc
sbb
mov
xor
ret
pusha
xchg
ljmp
lods
mov
inc
jb
pop
cwtl
je
mov
test
jp
cmp
mov
movsb
insb
das
or
popa
push
adc
cwtl
inc
push
adc
rcrb
shlb
das
add
jo
push
push
fsts
mov
cmp
cmp
adc
and
dec
outsb
mov
fisubs
mov
sub
xor
ljmp
imul
jmp
inc
xlat
pop
xchg
lods
jg
push
adc
cmpsl
stos
ret
sub
adc
xchg
cmovno
add
mov
out
incb
aaa
stos
sbb
imul
ret
das
add
cs
andl
cmp
mov
dec
in
sbb
je
arpl
pmuludq
jg
loopne
mov
xchg
or
outsb
mov
out
or
stos
push
mov
pop
data16
ret
push
ja
push
xchg
pop
pop
mov
jne
add
dec
repnz
int
sti
cmp
outsl
add
jp
mov
push
lds
ja
test
call
jns
cli
inc
rcrb
popa
and
insb
fists
xchg
push
in
rorl
subb
add
pop
or
outsl
cmp
fsubrl
and
xor
pushf
bound
sbbl
gs
and
fldcw
cmp
push
in
ds
or
lcall
adc
rcl
roll
and
inc
pop
jl
sbb
loope
jle
inc
fcoml
pop
out
adc
fwait
stos
insb
and
popa
iret
dec
sarb
sarl
std
pop
scas
in
mov
imulb
sbb
fcoml
insb
les
lods
push
inc
sub
les
or
aad
adc
jbe
mov
js
xchg
cmp
pop
jae
in
andb
ja
inc
cld
xor
mov
inc
xchg
sub
sbb
divb
outsl
jl
insl
shrb
and
dec
pop
xchg
or
xor
or
shl
adc
inc
adc
xchg
in
icebp
lahf
nop
cmpsb
mov
enter
adc
repnz
mov
and
and
into
sbb
repnz
and
decl
xchg
or
push
sbb
fcompl
push
loopne
lahf
jp
pop
bound
loop
push
lods
sbbb
inc
push
push
aaa
mov
retw
and
cmp
pushl
inc
dec
pop
add
mov
dec
ret
repz
mov
jmp
cmp
cli
dec
jnp
mov
scas
add
in
aaa
out
push
scas
adc
js
les
dec
sub
inc
sahf
adc
subl
mov
inc
or
ja
adc
daa
data16
lds
jg
cmp
push
pop
mov
sbb
xchg
in
pop
shlb
movsb
ret
arpl
outsl
jo
lock
test
mov
adc
sbb
pop
push
sub
cmp
xor
dec
adc
fmull
loop
ja
cmpsl
and
loop
clc
aam
sbb
add
mov
popa
int
adc
xchg
adc
popa
inc
xchg
or
arpl
xchg
sarb
cmp
dec
add
loop
leave
lock
ficoms
ljmp
bnd
arpl
xchg
xlat
ret
sbb
mov
fcmovbe
dec
shl
iret
cmp
not
aas
in
clc
loope
sub
inc
add
cmp
std
ret
lret
stos
lock
dec
xchg
mov
cmp
inc
and
shrl
fimuls
adc
mov
jno
aad
jno
rorb
or
sbb
sti
mov
jecxz
ljmp
repnz
jmp
sbb
push
mov
inc
sub
leave
ss
repnz
test
push
inc
xor
pop
inc
sub
inc
mov
mov
fcmovnb
dec
sbb
cltd
sahf
mov
cmp
sbb
ds
fisubs
sub
mov
jle
or
lret
sti
jb
shlb
cmc
inc
mov
jae
shr
cld
fsubrl
mov
push
mov
popa
nop
and
add
sbb
outsb
cmpsb
jb
lods
sbb
test
loope
xor
sbb
pop
ljmp
scas
std
sbb
test
push
push
cwtl
inc
fisttps
jne
pushf
enter
mov
pop
cltd
and
ds
fists
mov
jo
scas
push
arpl
mov
jne
mov
sbb
shlb
inc
pop
fst
je
push
jns
sbb
stos
aad
mov
int3
insb
test
stos
ja
xchg
jecxz
out
push
in
data16
fsub
mov
fcoml
cmp
add
mov
xchg
mov
cmpsb
in
mov
jno
mov
popa
repnz
outsb
jecxz
sbb
cmp
pop
testl
push
fnstsw
pop
push
daa
mov
pop
ret
sub
cld
idivl
fildl
sbb
mov
dec
repz
inc
in
aas
test
add
mov
lock
jae
jmp
add
ret
xchg
cltd
jns
mov
mov
adc
adc
pop
cmp
xchg
sbb
mov
cld
pop
dec
test
mov
xchg
mov
push
cmp
sub
fildll
mov
mov
jge
jnp
cmpsl
addr16
repnz
out
call
mov
daa
xchg
jae
pop
lahf
lret
jecxz
pop
pop
scas
and
dec
mov
fxch
dec
test
cmp
int
jo
inc
sbb
enter
push
lahf
icebp
mov
push
inc
push
lea
lds
dec
mov
pop
cmp
xchg
dec
test
aas
movsl
icebp
cs
or
adc
xorl
xor
lret
adc
xchg
in
mov
jg
mov
movsl
aam
fnsave
jmp
dec
push
add
pop
mov
sbb
push
xchg
xchg
or
sarl
mov
pop
dec
mov
and
jo
ds
fdivrl
icebp
cld
insb
push
daa
mov
pop
pop
in
cmp
cmpsl
xchg
setae
pop
mov
push
fistpl
divb
and
daa
sub
xor
insb
cs
shrl
test
je
lock
add
adc
gs
fstl
mov
stos
decb
jb
test
test
ret
adc
loope
mov
ret
arpl
mov
divb
inc
fdivrl
testb
popa
sbb
outsl
sub
pop
mov
insb
mov
push
insb
frstor
popa
inc
xchg
inc
sbb
adc
ret
add
push
dec
nop
mov
push
rorl
sub
mov
ffreep
fnstcw
mov
fstl
mov
push
das
dec
jmp
faddl
push
ljmp
mov
cmp
xor
in
loopne
rclb
negb
ret
in
fmuls
and
out
sbb
adc
sub
xor
xchg
outsl
mov
mov
popa
or
sub
mov
sbb
adc
lods
test
and
loopne
sbb
push
ja
orl
jns
mov
std
cmp
jge
stc
inc
xlat
mov
stos
pop
testb
xchg
fwait
add
dec
fisubrl
daa
dec
jge
in
pop
jns
in
jg
je
sub
das
xchg
adc
dec
add
test
xor
addr16
mov
std
test
mov
insl
pop
or
cltd
dec
lock
sbb
pop
ljmp
cmp
dec
jno
and
loopne
movsl
test
cmp
or
rorb
dec
add
jmp
decb
cs
xchg
data16
add
fidivrs
ja
jl
jbe
adc
adc
push
incb
fildl
lods
in
and
inc
xor
imul
pushf
iret
inc
pusha
sub
shll
adc
test
lahf
fldcw
aaa
repnz
cltd
lods
push
clc
mov
xchg
cmp
lods
mov
sbb
jp
test
mov
aam
into
mov
cmpb
imul
sbb
push
mov
push
cmpsl
cmp
add
jae
fs
aas
mov
add
push
outsb
mov
dec
dec
jae
iret
inc
test
cli
jnp
xlat
icebp
mov
xchg
cli
add
mov
imul
int3
fcmovne
rcrl
sub
xor
jnp
js
or
mov
lds
addr16
push
and
cmp
jecxz
std
mov
inc
mov
pushl
pop
dec
out
pop
in
adc
popa
adc
orl
movsb
add
jecxz
and
push
xchg
insl
std
lods
jns
dec
jp
mov
jmp
jp
shl
and
js
hlt
out
mov
mov
dec
push
das
xor
ret
or
ret
movsl
movsb
dec
andb
cld
xchg
pop
sti
jo
mov
or
ss
in
loope
cmp
add
out
iret
mov
mov
add
jmp
xchg
mov
add
jns
int
pop
xchg
jbe
lods
push
mov
insb
xchg
out
movsl
push
xchg
lret
fsubrs
sahf
test
push
xor
pop
cmp
aaa
ss
adc
loop,pt
inc
leave
cmp
xor
aam
ss
rorb
mov
mull
fidivs
movsl
push
shrl
mov
inc
pushf
mov
iret
cs
sti
mov
out
add
out
cmp
pop
xchg
leave
sahf
jo
ret
out
in
sub
sub
xchg
call
pushf
pop
fistpll
xor
cmp
mov
shrl
xchg
push
sbb
in
sub
mov
movsb
mov
jp
push
ja
sub
ljmp
xchg
bnd
xlat
test
add
imul
inc
or
out
mov
or
loop
push
xor
adcb
or
mov
mov
fidivrs
inc
mov
pop
and
stos
outsl
push
in
mov
dec
inc
lods
pop
repz
push
jnp
dec
mov
jbe
leave
xor
aas
outsl
xor
sub
jo
adc
dec
pop
pop
popa
mov
sbbb
mov
sub
scas
fiaddl
jnp
int3
sbb
outsl
data16
dec
xor
mov
cs
ja
xor
insl
repnz
int3
mov
sub
mov
out
insl
les
das
bnd
xor
js
adc
sub
js
push
xchg
or
cmp
addr16
imul
pop
sbb
dec
or
not
mov
mov
or
sub
outsl
add
dec
mov
pop
loopne
test
jo
punpcklwd
lods
xor
jns
sti
adc
sbb
icebp
push
mov
aaa
jnp
arpl
stos
push
pop
mov
js
inc
fmull
sub
loopne
push
into
push
and
push
pop
inc
sbb
imul
fcom
das
inc
mov
pop
rorb
sbb
push
inc
gs
test
ret
or
adc
cli
jp
sbb
fldt
add
mov
and
mov
lret
jle
jl
push
clc
dec
jge
decb
mov
push
or
das
mov
mov
lds
jecxz
aas
int
dec
pop
mov
inc
aad
outsb
fnstenv
mov
jge
shll
mov
push
test
push
or
mov
sub
lock
cli
cmc
int3
aaa
fucom
aaa
bound
pop
and
enter
leave
add
imul
xchg
loope
out
int
sahf
decl
cmp
ret
daa
pop
mov
pusha
jmp
sub
sub
mov
cltd
jmp
dec
dec
pop
add
mov
xchg
mov
mov
je
test
sbb
inc
inc
cmc
jl
xchg
jae
jmp
push
mov
negb
xor
jae
push
fwait
fs
stos
sbb
inc
mov
repnz
stc
aad
xor
addr16
cmp
and
out
lret
sbb
aaa
sbb
subl
dec
movsb
sbb
cmpsl
pop
adc
scas
mov
stos
sub
test
inc
clc
sbb
add
aaa
fsubp
inc
loope
sub
xchg
imul
ds
sbb
lods
push
cmpl
scas
repz
shlb
pusha
notb
mov
std
jle
push
rcr
xchg
cmpsb
cmp
mov
out
pop
xchg
enter
cwtl
mov
les
nop
mov
xor
ja
bound
mov
sbb
jle
push
imul
jle
in
rdtsc
sbb
push
sub
cmpsb
popf
mov
xchg
loope
outsl
sti
adc
lcall
aad
popa
stos
stc
repnz
int
sbb
push
lea
test
addr16
or
in
arpl
xor
shrl
mov
sub
cmpl
cmp
movsl
mov
mul
filds
cld
dec
lods
cs
icebp
push
inc
cmpsb
xchg
add
add
dec
mov
inc
push
iret
dec
fsubrs
in
and
loop
dec
adcb
push
test
bswap
stos
push
iret
scas
gs
mov
lods
gs
pop
adc
mov
push
icebp
stos
outsl
aam
xchg
jno
mov
cmp
jbe
test
stos
pop
jno
add
inc
clc
sub
movsb
push
clc
inc
or
mov
jl
xchg
adc
scas
sbb
jne
int
sbbl
push
insb
xchg
mov
leave
mov
insl
dec
sub
in
adc
xor
inc
push
outsb
inc
sahf
inc
xor
js
cmp
push
loop
pop
sti
mov
cmp
adc
cmpsb
pusha
fmull
add
fwait
or
cmpl
push
pop
mov
fs
mov
sub
or
test
call
sub
sbb
fisttpl
sub
mov
rclb
mov
mov
cs
sbb
mov
adc
dec
xchg
pop
xor
adc
cmc
leave
jl
pcmpeqb
jno
shlb
mov
xor
lods
xor
and
aaa
bound
out
pop
xlat
jnp
stos
jno
jbe
sub
shlb
inc
mov
loope
mov
adc
dec
cmp
add
cmpb
pop
mov
jecxz
rcll
jg
je
sub
adc
imul
test
insl
out
jo
jbe
push
jle
iret
sub
and
inc
add
ds
ja
push
test
cmp
stc
and
fistl
dec
pushf
dec
aas
stos
icebp
sbb
adc
int3
mov
sti
pop
int
lea
mov
jnp
inc
sub
cltd
adc
sti
movsb
xorb
test
sub
ficoml
push
jle
repz
sub
cli
shrb
sub
mull
add
mov
sahf
lods
push
push
sub
and
xor
mov
push
sbb
push
xchg
fucom
pop
int3
and
lret
scas
arpl
xor
push
dec
in
shrb
mov
lods
je
mov
fmull
xor
xchg
outsl
jne
orl
sbb
xor
decb
jmp
cmp
push
push
arpl
add
or
ljmp
js
iret
cmp
sub
mov
andl
push
adc
jno
inc
leave
sbb
jl
mov
and
sub
xor
sbb
cld
into
push
cmove
push
inc
sub
push
cmp
pop
xor
sub
popf
ljmp
mov
cmc
in
inc
lods
jmp
repz
inc
into
and
cmpsl
out
pop
movups
mov
push
jle
test
je
into
cld
sbb
add
sub
add
out
jl
mov
iret
sbb
repz
out
fsub
test
movsb
adc
sbb
fldcw
loopne
and
out
addr16
push
cmp
test
jp
popf
jbe
dec
cli
xchg
stos
mov
push
cmp
push
aam
test
loope
add
lret
jne
out
push
xchg
movsl
xchg
pop
test
gs
cli
sbb
jo
hlt
call
or
lret
das
push
ja
loop
jns
cmpsb
stos
jae
mov
call
pop
lds
inc
mov
add
xlat
xor
fdivrs
xor
xchg
popa
pop
fnstenv
pop
lea
bound
adc
in
in
out
lret
cwtl
adcl
adc
mov
adc
mov
xchg
cltd
pop
xlat
xchg
sbb
sub
stos
push
lock
xor
mov
inc
adc
fadd
stc
xchg
lret
out
mov
xor
jl
rolb
fwait
lods
xor
loope
data16
clc
jecxz
add
mov
loopne
enter
enter
adc
out
sub
lea
jecxz
pop
cmp
inc
or
xor
xchg
rep
pop
xlat
stos
incl
lods
mov
repz
out
mov
js
adc
push
dec
mov
jge
sub
fnstenv
sbb
mov
jns
jmp
testb
inc
inc
pop
mov
sub
add
aas
shll
dec
cmpsb
add
sahf
ds
or
enter
aad
cli
dec
mov
mov
sbb
push
xor
es
in
cmc
push
mov
shll
fnstsw
mov
xor
imul
jb
mov
fimuls
js
mov
inc
sbb
ja
dec
ffreep
das
cmp
cmc
xchg
xchg
dec
movsl
lods
adc
int
jge
jg
lods
mov
stc
mov
inc
mov
pop
adc
pop
sub
mov
jns
insl
xchg
mov
lcall
push
mov
adc
inc
jb
push
movzbl
sub
jge
in
pushl
cmpsb
pop
leave
hlt
cmpsl
jno
cltd
es
push
mov
lret
jo
aaa
outsb
aad
jp
sbb
inc
mov
cld
mov
xchg
sub
ja
cli
push
fxch
filds
xchg
jae
sbb
lcall
cli
outsl
adc
adc
aas
in
adc
movsl
mov
jno
lcall
rcl
in
jbe
cmpsb
in
xchg
pushf
bound
ss
push
into
jl
es
and
xor
inc
pusha
push
inc
jo
jae
hlt
pop
in
jae
fsubs
xchg
jae
xchg
iret
pop
jbe
adc
push
fiaddl
dec
push
rorb
cmp
ljmp
or
jb
inc
inc
push
mov
fstpt
lods
arpl
mov
sub
out
lds
cmpsb
popf
mov
adc
xchg
adc
fisttpll
dec
jnp
jae
repz
pop
jns
iret
loop
mov
pop
inc
inc
cmp
jp
push
jb
fsubr
das
jns
insb
push
xorb
lods
xchg
shl
dec
push
imul
lret
icebp
cmp
fisubs
insb
adc
push
cmp
outsb
adc
cwtl
cmp
or
add
pusha
adc
stc
outsl
outsb
inc
in
lock
loop
loope
mov
iret
std
and
imul
cs
cmp
mov
mov
mov
push
decb
ror
pop
leave
aas
notl
xor
pop
add
fcompl
data16
and
fldt
fdivrl
sub
lcall
adc
movsl
fidivrl
or
inc
fdivrs
jmp
cli
mov
inc
pop
sbb
jbe
pop
push
sub
mov
inc
mov
dec
jge
or
vhsubpd
lcall
adc
pop
sub
add
sub
jmp
in
sbb
je
xor
adc
xchg
lock
rcrl
pushf
dec
daa
jns
push
fists
add
out
pop
in
fdivrl
cmp
das
pop
aad
xchg
dec
xchg
inc
xlat
push
aad
dec
add
or
rep
shr
mov
in
mov
out
xor
pop
sbb
cmp
insb
inc
mov
inc
mov
in
or
nopl
rcrl
jne
jae
xadd
nop
out
mov
push
xor
dec
mov
lock
pop
std
mov
ret
addr16
xor
jb
add
add
lret
nop
popl
dec
xchg
sti
pushf
jbe
pop
dec
fwait
xchg
xchg
dec
fnstcw
mov
sbb
xor
push
sbb
leave
mov
push
sub
bound
mov
dec
stos
cwtl
sti
outsb
mov
xchg
insl
test
dec
adc
dec
or
mov
pushl
cmpsb
mov
sti
add
repz
cmp
ret
out
jo
xor
mov
outsb
inc
mov
into
jae
fimull
mov
sub
sub
jns
test
adc
push
xor
loopne
mov
incl
adc
mov
ret
inc
idiv
in
mov
mov
and
in
lcall
icebp
and
add
addl
xchg
fadds
int3
test
paddusw
mov
or
in
sbb
mov
arpl
data16
inc
sbb
mov
loope
stc
xchg
loope
mov
shrb
mov
or
inc
lods
out
daa
fadd
js
xor
out
mov
stos
mov
jae
mov
and
pop
stos
xor
xchg
sbb
lret
sbb
pop
fwait
jp
mov
nop
pop
adc
mov
rol
dec
and
dec
repz
dec
dec
xchg
test
jno
adc
sbb
sarb
shl
fbld
andb
sub
jo
scas
xchg
icebp
pop
daa
lds
cmpsb
mov
inc
sti
or
mov
and
add
enter
sbb
test
pop
aam
push
lock
push
fwait
xchg
ss
outsb
or
sub
int
add
test
lock
movb
sahf
pop
sub
xor
sbb
dec
mov
jb
repz
das
lret
cwtl
stos
inc
inc
push
out
xchg
xor
push
lcall
jmp
or
dec
mov
jno
popa
xor
es
lret
lds
mov
dec
and
in
xchg
lock
push
adc
nop
lcall
fs
mov
enter
popa
fnstcw
jno
insl
jns
leave
lds
jg
xchg
push
inc
popa
lea
insl
adc
push
les
xor
ds
cmp
addr16
pushf
cltd
cmp
or
inc
cld
dec
fbstp
mov
cmp
cmp
sub
popf
dec
inc
xchg
test
out
loopne
test
adc
adc
fcomps
or
repz
nop
add
repz
sub
enter
dec
mov
or
sbb
loope
pusha
cs
call
pop
jle
adc
mov
pop
adc
int3
rol
or
xlat
xor
xor
mov
cwtl
mov
or
mov
dec
sub
add
inc
bound
sbb
sbb
sub
cmpsb
aam
dec
movsb
iret
pushl
push
xchg
or
insb
inc
out
jbe
or
inc
mov
push
jle
mov
push
xlat
test
pop
or
jo
xor
sbb
or
pop
sbbl
push
scas
jl
sub
das
stos
scas
mov
test
pop
rclb
test
mov
into
icebp
sbb
addb
xlat
mov
inc
sbb
pop
hlt
or
or
mov
adc
sub
xor
mov
loopne
jecxz
mov
lods
jg
push
test
and
sti
mov
mov
rcr
std
popa
shlb
cmpsl
cmp
adc
imul
push
enter
into
lahf
or
sbb
sbb
out
or
popa
mov
sbb
jecxz
pop
cmp
xchg
and
jl
add
mov
iret
inc
inc
sbbl
stc
pop
and
xchg
shlb
mov
rcrl
cmpsl
lds
loop
jns
stos
ljmp
xchg
mov
mov
popa
sbb
dec
mov
jg
mov
lret
sbb
shld
mov
fiaddl
jns
icebp
push
adc
adc
fisttpl
mov
bound
cltd
or
push
cmpl
adc
push
movsl
lcall
shll
daa
jl
xchg
rcrl
in
dec
xor
int3
cli
jns,pn
cltd
pop
mov
push
in
fnstsw
xor
mov
out
push
cmc
sub
pop
iret
lret
mov
mov
ret
sbb
sbb
into
mov
dec
pop
arpl
cld
xchg
cs
xchg
mov
adc
lcall
jno
cmp
xlat
xchg
ret
cmpsl
test
and
jl
or
dec
lret
jl
push
shrl
xchg
xchg
fcomps
sub
es
cmp
jo
xchg
xchg
cli
roll
sub
mov
and
jl
sub
test
xchg
faddl
sbb
jne
int3
xor
pop
dec
push
mov
or
cmpsl
jns
mov
mov
and
push
lret
add
and
shl
icebp
dec
hlt
sbb
stos
sti
jl
and
in
scas
xchg
dec
lcall
subl
bound
cmpsb
stc
imul
xor
lods
fdivrs
jbe
fnop
cmp
test
int
test
xor
push
cmpsb
mov
cmp
sub
and
adc
ss
add
scas
add
sub
ficomps
imul
clc
test
call
aam
dec
jns
ss
insl
sbb
lret
push
cld
lods
pop
mov
mov
adc
movsb
ljmp
adc
jecxz
push
sub
sarb
dec
push
inc
es
and
dec
decb
jge
jbe
xor
fs
test
out
sbb
fcmovnbe
icebp
cmpb
push
mov
cli
inc
sbb
cmpl
and
mov
andl
mov
outsb
or
ss
mov
and
cld
loop
xchg
filds
in
mov
iret
inc
les
into
test
test
aad
lcall
mov
out
sbb
push
out
sahf
and
add
mov
or
xchg
jg
push
mov
jbe
mov
test
ret
xchg
daa
cli
int3
enter
xor
fld
mov
jg
sub
das
pop
je
hlt
in
dec
fsub
test
dec
mov
movl
jb
cmpsl
loopne
push
jge
lahf
and
addr16
push
test
call
adc
inc
out
cmp
jbe
shll
push
inc
jb
inc
xlat
fs
mov
rcrl
adc
shl
int3
dec
adc
push
mov
and
jns
adc
sub
in
adc
xchg
mov
sbb
cld
adc
in
leave
dec
sti
jnp
push
sahf
cltd
or
or
jno
cmp
add
shl
loope
or
xlat
ficoml
ljmp
loop
sbbb
in
out
xlat
cmp
fdivr
lods
jnp
fisttpll
adc
or
lret
dec
mov
mov
imul
outsl
push
mov
pusha
pushl
in
mov
mov
sbb
or
dec
mov
data16
or
cwtl
push
lods
xlat
pop
loope,pn
hlt
fisubrs
push
dec
xchg
loope
ja
cwtl
ret
pushf
or
data16
or
and
mov
jae
call
xor
mov
jmp
lret
jg
das
and
inc
or
adc
inc
aam
icebp
cmp
and
sbb
mov
pop
add
and
pop
mov
mov
and
dec
rolb
stos
sbb
bound
cs
pop
mov
cmp
in
pop
clc
mov
mov
and
lret
shll
stc
adc
xchg
stos
pop
pop
fdivrl
xlat
or
and
int
xor
sti
mov
mov
test
int
mov
je
sub
push
push
enter
addr16
insb
sub
arpl
fistpl
jnp
stos
ljmp
jb
cwtl
js
cs
enter
daa
pop
scas
mov
ret
cmc
test
xor
pop
jne
ss
dec
in
push
sbb
dec
in
scas
cwtl
out
sub
push
push
int3
xchg
pop
push
ss
inc
mov
xor
pop
hlt
addr16
mov
cs
sub
aas
pop
ss
scas
pop
or
out
leave
add
subb
inc
into
mov
fs
lock
push
xchg
mov
cli
mov
pandn
sahf
mov
pop
xlat
dec
add
dec
add
sbb
push
jo
jge
jmp
shlb
push
jecxz
dec
pop
out
mov
sub
dec
or
stos
mov
mov
pop
sbb
icebp
mov
out
ja
mov
mov
data16
lock
dec
insb
stos
xor
cmp
fwait
push
mov
gs
sub
pop
lea
jp
jb
je
xchg
daa
shrb
sbb
lahf
mov
nop
test
jnp
mov
pushf
in
xchg
mov
popa
roll
jo
test
jne
imul
pop
pop
orb
adc
out
lret
push
push
gs
push
nop
ja
xchg
add
push
sahf
test
and
and
sbb
mov
out
inc
cwtl
repz
js
or
ret
fidivrl
or
or
sahf
idiv
inc
xor
mov
ret
pop
pop
movsb
add
cmp
std
xchg
mov
jl
pushf
inc
fisubl
pop
hlt
aas
std
in
cmpl
arpl
adc
shll
bswap
mov
sahf
sub
inc
loope
pop
xchg
jmp
ftst
dec
lcall
cmpsb
adc
fwait
insl
sub
xchg
jns
dec
xchg
sbb
ljmp
pop
arpl
mov
push
notl
cmp
jecxz
jle
ljmp
and
hlt
ja
fnstcw
mov
loop
cli
push
mov
stos
push
outsl
les
stc
cltd
cmc
cmp
xor
cmp
andl
or
mov
xor
mov
mov
test
mov
into
add
dec
test
rdpmc
stos
shll
or
jl
popa
je
shll
or
cld
sub
and
and
in
fldenv
movsb
fistpl
fiaddl
push
mov
icebp
mov
out
pop
mov
ficoml
loopne
push
ljmp
mov
ret
stos
popl
aad
cmp
int
jne
xchg
dec
movsb
out
lret
scas
sbbb
ja
cmp
aaa
mov
mov
scas
cmp
insb
mov
push
mov
mov
mov
aaa
cltd
adc
lret
orb
mov
test
pop
arpl
jo
xor
lahf
fwait
push
sbb
mov
lock
daa
jo
bound
jge
inc
push
in
mov
pshufw
mov
imul
inc
xlat
pop
shll
add
push
int
jge
cmp
sbb
mov
mov
push
sub
pop
mov
shrl
fwait
gs
xchg
fsub
inc
lods
xchg
or
jo
or
cmp
lahf
lock
xlat
sub
pop
sti
js
add
mov
push
jne
or
push
or
in
add
fwait
add
call
fdecstp
outsb
jmp
pop
ss
imul
mov
mov
lods
insl
rorl
push
mov
lcall
jge
subb
mov
mov
out
cmp
pushf
lahf
jge
outsl
sbb
xor
fadds
ss
jle
sbb
inc
add
sub
mov
test
insb
mov
mov
popa
lahf
jecxz
mov
lcall
mov
mov
dec
mov
cmpsl
bound
inc
adc
outsl
mov
sbb
rorl
xor
cmpsb
push
movb
mov
adc
mov
add
ret
int3
mov
lock
mov
fcoml
repz
fcmovnu
push
fsubrs
data16
or
leave
lds
pop
mov
in
cmp
mov
dec
xor
mov
push
int
sub
sbb
out
mov
outsb
ljmp
or
lea
arpl
jp
xor
out
mov
push
cmpl
icebp
stos
inc
sti
sbb
dec
jge
ret
pop
xor
pushf
lods
shrb
pop
mov
inc
jnp
mov
ds
gs
mov
mov
add
and
dec
jnp
daa
sbb
insb
arpl
js
movsb
in
in
scas
cmp
sbb
fcompl
mov
dec
add
dec
jb
mov
or
push
ss
cmpsl
sub
jge
adc
icebp
scas
push
jecxz
sub
xchg
sub
cmc
into
daa
pushf
setae
inc
xor
aas
mov
subl
push
nop
push
shl
repz
and
nop
inc
jae
ljmp
push
sarl
fwait
adc
in
jmp
pushf
cmc
pop
nop
pop
hlt
nop
movsb
clc
stos
ret
das
loop
pop
xlat
bound
frstor
push
aad
daa
clc
pop
mov
loope
in
dec
out
mov
sub
dec
cltd
sahf
lcall
mov
jp
pop
bound
cmp
cwtl
inc
cmp
adc
cmpsb
mov
cmp
xor
sub
lcall
sub
xorl
jp
bsr
mov
enter
and
cmp
dec
das
repz
mov
inc
loop
sbb
jl
push
leave
ds
add
push
push
dec
cmp
inc
hlt
dec
add
jns
xchg
and
dec
inc
enter
push
adcb
aad
std
jne
aaa
adc
popa
add
adc
inc
repz
or
jae
mov
mov
pop
hlt
hlt
cwtl
sbb
es
in
and
cltd
dec
aas
push
mov
int
dec
xchg
popf
out
mov
es
ljmp
mov
sti
sti
int
out
fsub
movsl
jge
loope
sub
push
mov
mov
lret
aas
xor
jmp
mov
pop
push
xor
xor
cmp
jns
cmpsl
push
pop
std
pop
shll
insl
out
idivb
sbb
and
xchg
adc
pop
pusha
shl
jge
pop
or
xor
mov
xchg
adc
mov
jp
and
mov
xchg
in
ret
fldenv
mov
mov
lahf
ffreep
bound
cs
cmp
jno
in
int
andb
aaa
mov
js
sar
dec
or
inc
jmp
xor
push
jb
shr
dec
decb
nop
in
cmpl
push
dec
mov
cmp
jno
dec
or
and
sbb
mov
and
mov
push
push
cli
cmp
loop
addr16
iret
cmp
inc
aam
sar
dec
mov
sub
cmpb
xor
adc
fcomi
mov
cltd
push
xlat
les
pusha
mov
inc
cltd
mov
dec
cwtl
inc
cmp
jl
mov
or
push
stc
ss
mov
int3
push
outsb
mov
dec
pop
jns
das
dec
push
xchg
sbb
jle
pop
jno
jp
dec
out
out
out
gs
xchg
xor
mov
daa
imul
push
push
xor
jle
scas
lods
cmp
add
ret
lret
push
loopne
xchg
push
je
int
ljmp
mov
xchg
gs
sub
pop
loope
test
cli
andl
sbb
xor
and
icebp
aaa
xor
movsl
lea
pop
ljmp
cwtl
out
pop
test
dec
mov
inc
in
and
jle,pt
outsb
push
aaa
push
pop
sub
fistl
cli
jl
mov
add
fwait
icebp
inc
leave
push
dec
xchg
movsb
insl
jge
mov
xor
jg
mov
jl
fidivrl
xor
jg
jle
push
mov
stos
push
scas
add
xchg
and
push
jo
insb
add
mov
outsb
mov
jl
popa
pusha
fsubs
push
mov
jp
mov
sbb
lahf
and
push
sarl
inc
lock
or
push
insb
sbb
or
jae
repnz
lods
fstpl
inc
inc
dec
out
push
sub
in
cmp
sbb
pop
aas
iret
sub
add
fimull
mulb
int
testl
or
orb
pop
rol
inc
and
neg
leave
sub
cmc
or
sub
nop
jne
das
notb
mov
or
nop
je
lods
inc
test
insl
les
and
mov
and
pop
sarb
int3
dec
push
dec
inc
outsb
inc
les
out
stos
mov
push
into
push
dec
arpl
jp
ret
loopew
lods
lods
pop
data16
test
stos
scas
sub
in
add
les
out
fwait
and
sarl
xchg
and
jp
hlt
lahf
mov
out
data16
pop
push
mov
dec
ret
in
sbb
subl
xorb
scas
movsb
sahf
cwtl
stos
mov
icebp
push
and
sub
pop
inc
jne
lock
aas
dec
divb
pushl
mov
push
notl
in
sub
jmp
jnp
into
ss
loope
mov
int
flds
xor
and
sub
add
loope
sarl
pop
lcall
movsl
xchg
or
adc
add
rcrb
mov
or
stos
adc
xchg
adc
arpl
mov
or
jo
mov
leave
stos
mov
icebp
mov
pop
dec
push
mov
xchg
jl
sub
out
mov
scas
insb
or
ficomps
sbbb
fsubl
mov
loopne
int3
stos
fs
dec
jnp
mov
popa
or
jmp
daa
and
xor
movsb
lock
xchg
data16
push
repnz
in
clc
mov
push
imul
nop
aad
dec
jp
cwtl
and
jmp
sbb
ss
xor
dec
fs
push
aad
inc
sbbw
or
adc
jbe
and
jmp
loope
ficoml
xchg
addr16
lea
arpl
jg
mov
or
add
dec
mov
jl
movsb
add
inc
inc
icebp
ret
test
arpl
push
adc
iret
lds
aas
cltd
mov
outsl
add
xchg
fnstenv
xlat
pushf
mov
lods
cmp
sahf
js
pop
ja,pn
push
movsl
imulb
lcall
sbb
bound
xor
sbb
or
loope
xchg
add
ud1
sbb
xchg
mov
mov
aam
pop
mov
outsb
jo
push
test
push
inc
xchg
imul
sahf
call
jo
xor
and
gs
sahf
dec
outsl
loop
je
iret
inc
ja
sbb
test
fisubrl
sbb
dec
fsubs
ret
mov
in
int3
push
lahf
inc
mov
pop
and
lock
push
iret
lea
fisubrs
jae
mull
push
mov
or
sbb
cld
movsl
or
mov
sbb
dec
and
xchg
lcall
or
and
dec
es
cmp
jno
out
jle
jmp
in
jle
pop
inc
add
lcall
mov
push
push
or
jnp
enter
leave
push
mov
fistpll
sarb
cmpsb
loopne,pt
enter
rclb
pop
mov
inc
pop
cmpsb
sub
test
pop
dec
popf
insb
xchg
cmpsl
test
push
and
dec
dec
and
addr16
push
push
pop
stos
mov
jecxz
negl
mov
insl
sub
xchg
cs
daa
mov
inc
cmp
pop
icebp
xor
pop
mov
fimull
sbb
xor
sub
imul
ss
fsubrl
xor
push
test
leave
lock
pop
sahf
cmp
mov
xchg
icebp
pop
adc
jns
xchg
rol
shlb
les
jbe
scas
loop
aam
inc
push
mov
test
bnd
jo
inc
cmp
arpl
inc
loopne
mov
jo
pop
cmp
in
xor
jecxz
jp
xchg
inc
and
test
rcrb
pop
sbb
leave
adc
sahf
pusha
xchg
es
jl
stos
jge
ljmp
mov
cmp
pop
push
jle
scas
push
test
push
in
mov
pop
push
pushf
push
mov
push
jmp
lahf
insb
popa
daa
jl
mov
mov
mov
and
sub
push
mov
sbb
and
test
movsb
in
stos
dec
int3
call
lcall
add
mov
fbstp
inc
popa
fwait
jle
adc
fs
in
jo
pop
sub
xor
xchg
imul
jmp
into
movsb
mov
xchg
out
rorl
test
push
push
test
pop
sbb
ret
sub
pop
das
xchg
pop
jbe
cmp
daa
ja
mull
test
xor
sub
loope
pop
aam
dec
lret
mov
out
mov
iret
inc
pop
adc
xor
push
sar
rorl
pop
inc
repnz
rol
in
lret
aad
push
mov
scas
sub
ja
xor
cmp
outsb
xchg
mov
ret
ret
xchg
arpl
leave
aam
jnp
mov
jno
jl
xor
sub
sub
pop
mov
and
mov
insl
lret
or
xlat
es
mov
dec
callw
mov
jl
test
or
movsl
mov
and
cld
cmp
dec
mull
push
in
sti
insb
mov
outsb
adc
xchg
mov
pop
movb
sub
xor
popa
stos
push
stc
and
rcll
rcll
insl
mov
cmp
in
int
fwait
or
adc
pop
lods
je
clc
jo
orb
in
pop
xchg
push
and
xchg
add
xchg
popf
aas
psubw
mov
inc
xor
add
pop
lret
gs
pop
mov
mov
lock
push
mov
loopne
jmp
mov
mov
xchg
stc
test
mov
xchg
jg
jp
xor
mov
xor
pop
lods
decl
in
lret
das
add
lods
test
andl
in
movsb
lret
add
dec
jbe
aaa
nop
es
and
and
out
jae
adc
aas
pop
or
fimuls
fwait
or
cmp
mov
pop
popl
orl
ret
inc
jnp
mov
sbb
and
out
and
test
int3
mov
add
jo
fbld
cld
cld
and
sbb
daa
adc
dec
icebp
sub
neg
sarl
test
sub
iret
xchg
sub
and
flds
pop
mov
loope
sahf
add
outsb
push
push
and
mov
rorl
jnp
ffreep
fdivs
out
pusha
mov
dec
push
and
out
rolb
mov
in
inc
jle
das
pusha
ret
dec
fisubrl
movsb
in
push
in
pop
add
dec
sub
mov
inc
sbb
mov
adc
jl
xchg
lea
int3
hlt
mov
add
xor
push
or
fisubrl
jns
sbb
les
jnp
inc
int3
pop
xor
mov
pop
mov
adc
insl
mov
xor
cmc
xchg
jp
add
add
pop
push
xlat
fsts
push
testl
cmp
aad
adc
sbb
call
in
mov
mov
pcmpgtb
pop
jne
cmp
add
cmpsb
jbe
cld
mov
in
xchg
dec
jns
std
pusha
fisttps
pushf
mov
decb
pop
in
pmulhuw
imul
push
xor
xchg
and
iret
lret
xor
stos
loopne
pop
popa
pop
rolb
mov
cli
enter
pusha
das
dec
fsts
xor
fdivs
and
rcll
and
pop
push
xor
adc
addb
fldl
imul
sub
rcll
mov
pop
insl
xchg
mov
fsub
shl
test
ror
jbe
loopne
inc
ret
rcrl
mov
pop
imul
sbb
cmp
dec
enter
inc
imul
inc
pop
jge
jae
lret
jle,pt
out
xor
xchg
icebp
fs
mov
sbb
mov
jb
pop
scas
cmp
in
js
jmp
or
dec
movsl
shrb
aam
ret
xchg
jb
pushf
imul
sti
xor
add
insl
arpl
cmpsl
mov
rorl
sbb
xchg
inc
outsb
push
mov
adc
sub
rol
out
lret
pop
pop
dec
dec
inc
xchg
add
pusha
jge
int3
aad
scas
popf
imul
shlb
jl
ljmp
test
lcall
xchg
ret
pop
test
cltd
fbld
jge
and
test
lods
fbld
fcoms
inc
nop
in
xchg
das
imulb
inc
into
fisttps
push
push
xchg
rclb
push
xor
mov
fcomps
cmpsb
sub
stos
add
fs
xchg
cltd
dec
aas
ds
jo
int3
dec
stc
mov
xlat
mov
mov
ss
gs
dec
add
test
in
sub
pop
aam
or
movsb
test
sub
xor
outsl
lea
push
mov
mov
mov
shr
dec
jmp
icebp
outsb
mov
ljmp
or
push
pushl
pop
leave
pusha
std
jl
repz
fcmovb
loope
sub
xor
sbb
push
lahf
scas
fs
mov
in
in
lret
mov
push
ljmp
iret
push
jae
int3
mov
scas
cwtl
xchg
xchg
pop
rcr
mov
fs
test
loopne
test
xor
and
std
imul
repz
xor
mov
out
xor
dec
enter
in
and
lods
stos
jns
or
xchg
dec
cmc
ds
mov
mov
sub
cmpsl
rcrl
add
icebp
xchg
mov
andb
cwtl
push
mov
lcall
add
dec
scas
sbb
cmpsb
sub
sarb
test
test
shll
test
cmp
inc
mov
insb
mov
lds
scas
fnsave
inc
cmp
add
daa
and
dec
scas
cltd
cwtl
icebp
leave
aam
stc
std
inc
in
xchg
mov
notl
std
cmp
lds
push
scas
pop
jp
jne
mov
fnstenv
dec
imul
push
sub
sbb
in
pusha
bnd
add
sbbb
adc
ror
orb
cli
in
inc
push
add
xlat
ljmp
sarl
adc
icebp
outsb
loopne
adc
jecxz
cs
aam
lods
loop
dec
add
mov
daa
xchg
pop
cmp
iret
push
inc
dec
dec
adc
jo
rcl
in
adc
jmp
cmp
test
cmpsb
adcb
and
arpl
jle
push
mov
mov
mov
xor
loop
repnz
mov
popa
xchg
cmc
test
inc
aaa
mov
ds
jae
fdivrl
jae
mov
sub
repz
push
ficoms
fildll
fsubl
mov
jnp
jnp
pop
mov
mov
in
jo
jmp
jmp
lret
fstpt
push
hlt
xchg
sbb
or
jno
lahf
mov
cltd
mov
dec
ja
imul
aam
jp
adc
sub
lret
inc
adc
repnz
sub
xchg
push
jl
xorb
or
mov
cld
sbb
pop
mov
dec
mov
push
jl
xchg
fsts
mov
pop
push
xlat
aaa
stos
stos
jmp
cmp
aad
cmpsl
fsubl
and
cmp
sbb
stc
aas
ds
ja
add
sbb
cmc
add
xor
add
jne
and
jmp
flds
clc
sar
insl
insb
idivl
es
fsubr
daa
jl
xor
icebp
sarb
fcomp
inc
jmp
out
and
cmp
iret
jl
lods
dec
or
daa
pop
mov
imul
arpl
push
aam
mov
cmpsb
stos
leave
pop
loopne
loopne
jge
cmp
xor
pop
daa
jle
mov
xchg
jmp
inc
sbb
jb
add
jl
jge
addb
add
mov
call
pop
pop
xor
xchg
aam
insl
add
lock
push
out
fists
jmp
jg
sar
mov
neg
mov
inc
cmp
push
inc
lret
mov
ja
inc
lahf
mov
fildl
test
fildll
inc
in
imul
imul
pop
hlt
fs
ljmp
cmp
xchg
inc
inc
outsl
fsubrl
lcall
push
movsb
or
or
jmp
fnstsw
pop
push
push
sbb
leave
scas
mov
sti
repnz
into
pop
rcrl
jo
fsubl
pop
out
shll
cmpl
add
jge
jno
xor
mov
arpl
ret
inc
dec
sbb
push
in
cmp
rcll
and
mov
stos
cmc
push
lea
loopne
add
mov
insb
xchg
sbb
mov
inc
test
loop
jmp
les
inc
stos
adc
xlat
mov
std
mov
jbe
xchg
jl
jnp
repz
arpl
mov
lock
repnz
cltd
fiaddl
loop
push
jecxz
test
negl
stos
mov
cmpsb
mov
cltd
cld
mov
dec
clc
jg
mov
loope
jl
pop
dec
fmuls
mov
icebp
in
pushf
stos
repz
dec
xlat
jmp
sub
in
xor
jmp
push
jno
in
push
inc
repz
push
push
push
in
xor
sbb
outsl
ljmp
fyl2x
mov
dec
lret
cmp
mov
movsl
mov
jl
sahf
inc
push
jmp
xchg
jmp
pop
sub
jl
cmp
or
xchg
aad
xor
cmp
mov
das
ja
jmp
pop
popa
aam
movsl
add
inc
cwtl
jbe
mov
inc
and
xchg
xor
movsb
sub
and
sub
xor
mov
pop
in
out
and
stos
adc
addb
mov
xor
jecxz
mov
inc
movsb
movl
mov
cmp
mov
adc
jno
lods
mov
lret
add
push
xchg
je
and
mov
movsb
insl
sbb
and
push
and
pop
scas
jl
nop
xor
pop
sub
in
mov
or
in
cwtl
enter
lods
rcrl
cmp
loop
insb
push
xchg
push
mull
shl
xor
stos
mull
lret
lret
mov
cltd
call
mov
sahf
mov
mov
sahf
aaa
mov
repnz
mov
fcom
imul
mov
push
adc
fbld
nop
bound
aas
adc
sbb
ja
push
xor
addr16
in
popa
rcrb
and
add
xchg
mov
cld
je
xchg
into
cmpsl
and
cld
into
mov
add
nop
das
out
cmp
pushf
ja
jns
lret
jp
push
jno
jge
enter
mov
ror
sbb
push
daa
cmp
push
fdivrs
out
adc
out
pusha
out
or
pusha
fwait
jbe
fldpi
push
sub
int3
mov
in
enter
sbb
push
loop
cld
sarb
loope
add
xchg
aaa
fcmovnb
mov
push
mov
gs
fs
pop
in
xchg
ret
mov
inc
nop
push
lcall
and
addr16
and
scas
adc
lahf
mov
into
sti
mov
mov
bound
data16
cmp
lds
add
into
dec
sbbl
cmp
mov
inc
sbb
dec
movsb
mov
inc
jecxz
mov
out
mov
sbb
mov
fimull
cld
repz
push
adc
test
mov
fs
push
cmp
mov
xor
outsl
pop
pushf
and
sub
jle
and
and
push
insb
or
in
out
adc
lcall
mov
sbb
xor
jae
cmpsl
in
cmc
fmuls
push
and
add
pop
insl
adc
lock
mov
inc
popa
adc
cwtl
fmul
aas
sti
xor
lret
mov
stos
sar
xor
je
movsl
fucomip
pop
dec
bound
loopne
out
add
cmc
jb
popf
cli
rcrb
xor
pop
andb
les
setge
jl
xchg
sbb
mov
jne
sub
sbb
bound
xchg
lcall
test
mov
cld
push
mov
arpl
imul
pusha
cmp
inc
mov
push
rorl
scas
dec
sbb
sub
xor
cmp
rorb
or
and
inc
adc
fldenv
insl
cmpsl
push
in
dec
sub
sub
push
lock
and
mov
xchg
push
push
mov
popf
sti
push
ss
inc
mov
dec
and
mov
stos
int
fcmove
lret
mov
and
xlat
mov
sub
and
ret
fldt
xor
aaa
loope
mov
jae
xor
bound
xchg
lds
jecxz
cmp
fcomps
inc
or
jnp
lods
loop
xor
mov
mov
fistpl
lret
mov
xlat
cmp
cli
enter
add
cmp
add
jae
data16
xor
lea
mov
adc
or
mov
xlat
pushf
dec
pusha
inc
and
rorl
fidivrs
cmp
lret
and
lock
xchg
inc
sbb
jmp
or
je
xchg
scas
stos
cmp
lret
adc
lods
cltd
movsl
sub
mov
sbb
adc
adc
mov
adc
sub
lock
es
in
mov
call
or
sbb
sub
cwtl
fists
not
pushf
sahf
fadds
adc
cmp
sbb
cmpb
mov
bound
jl
scas
in
sub
lods
int3
xor
push
sbbl
mov
clc
aad
mov
outsb
pop
push
in
nop
test
fnstsw
sbb
fs
sub
jae
in
es
xchg
sbb
cmp
jnp
addr16
ljmp
adcl
xor
nop
insl
in
movsl
arpl
mov
outsb
jnp
jnp
rcll
lock
jno
cmp
testb
add
mov
pop
cmpsb
inc
push
mov
movsb
sbb
cs
add
inc
lea
pop
sbb
and
cwtl
mov
out
sti
sbb
pop
or
imul
add
mov
push
and
popa
cltd
push
mov
popl
xchg
in
test
jmp
ds
xchg
in
hlt
cmp
sbb
leave
adc
sbb
div
xor
jg
dec
hlt
lock
lret
ret
ja
cmpsb
pop
arpl
shl
pop
cs
sbb
mov
pop
mov
push
lea
mov
out
push
fidivl
nop
and
test
insl
test
mov
aaa
jp
jns
dec
rcll
imul
ljmp
popa
insb
xchg
fidivs
mov
adc
rolb
testb
jge
push
and
push
mov
je
xor
dec
push
scas
xchg
outsl
push
and
ljmp
imul
ret
add
mov
cmc
movsb
sub
divl
data16
int3
cmp
dec
push
rorl
push
jp
aad
dec
and
xchg
aas
sbb
inc
and
test
pop
pop
xchg
clc
xor
test
sub
ss
adc
jb
fnstsw
xor
pop
rorb
mov
aas
fsubrl
inc
cmc
movsl
xor
int
mov
or
mov
push
add
mov
mov
mov
dec
push
jecxz
ljmp
int3
mov
push
cmp
pop
xor
out
or
sub
mov
insl
push
cmpsb
inc
inc
inc
push
push
test
jecxz
jle
cmpsb
jae
adc
shlb
xchg
out
scas
xchg
mov
testb
nop
imul
push
jmp
out
and
aas
mov
jmp
adc
push
cmp
push
nop
inc
mov
jns
push
mov
mov
xlat
pop
jmp
cmp
bound
into
fwait
lods
inc
inc
fmull
push
cmpsb
iret
push
call
inc
sub
lahf
push
xor
sbb
mov
and
in
shll
clc
ror
shr
out
aam
mov
fwait
aam
cmp
xchg
sti
int
mov
bnd
mov
jp
add
sbb
mov
sbb
outsl
hlt
fs
addl
movsb
gs
mov
cmc
repz
jae
lret
mov
arpl
push
fcoml
popf
les
or
xchg
mov
adc
mov
mov
outsl
lahf
xchg
and
fs
push
out
orb
lahf
sub
je
out
ret
stos
push
lret
imul
cmp
cmpxchg
mov
mov
inc
orb
sbbb
mov
cmpsb
push
outsl
jge
pop
add
or
popl
mov
jae
jne
jnp
adc
jmp
cmp
fldt
adc
sub
daa
das
dec
fwait
inc
sti
cmp
aaa
jo
sarl
xchg
add
aaa
stos
jmp
mov
xchg
bswap
jne
sbb
xchg
mov
adc
lret
sub
adc
jecxz
push
mov
mov
aaa
add
lds
sbb
call
xor
outsl
pusha
arpl
mov
shlb
fcos
iret
mov
insb
push
and
jae
js
jp
mov
mov
xor
xor
jle
das
insb
test
mov
and
lret
xchg
jl
loope
mov
adc
push
mov
xor
mov
mov
mov
aad
pusha
lods
mov
jo
jno
jns
out
sbb
stos
cmp
add
je
pusha
shrl
fs
stc
not
jmp
add
ficoml
popf
mov
lock
inc
nop
fs
fdivrs
or
fisubs
add
scas
push
ljmp
pop
dec
push
inc
add
stc
xchg
inc
mov
and
mov
xor
push
mov
fcompp
mov
xor
cmp
ret
push
imul
mov
shl
rorb
adc
dec
fs
mov
jp
or
std
mov
xchg
roll
cwtl
fcoms
in
enter
loope
cmp
push
jo
sti
stos
jbe
nop
lea
mov
je
and
lahf
sti
sub
sbbl
jge
popf
movsl
jbe
cmp
xor
dec
in
jns
xor
xor
cs
cmp
imul
hlt
insl
sbb
test
push
fs
mov
sub
pop
rolb
sub
dec
xchg
dec
cwtl
sahf
hlt
hlt
mov
leave
cli
popf
dec
pop
ljmp
cwtl
dec
daa
or
sahf
scas
fidivl
xchg
mov
fwait
and
pop
aaa
lcall
je
or
dec
push
jbe
xchg
xor
dec
fsubs
and
sbb
lret
ds
imul
arpl
cmp
outsl
imul
xchg
ds
sbb
dec
fwait
push
mov
hlt
jmp
ss
fidivrl
lret
aam
outsb
into
fldl
sub
and
in
mov
addb
hlt
mov
aad
clc
movsl
jns
in
inc
add
mov
mov
pop
ljmp
pop
jge
test
ss
jne
mov
sbb
clc
push
out
repnz
jmp
or
fs
and
xchg
cmp
pmullw
je
sarb
inc
sub
mov
mov
jl
push
cmpsb
stos
enter
mov
mov
das
and
and
out
add
gs
je
gs
jmp
call
pslld
sbb
cld
cwtl
dec
cwtl
push
add
hlt
sub
mov
aas
sub
or
sbb
imulb
jne
or
mov
sub
cmc
inc
sub
imul
xchg
es
fwait
adc
mov
ret
shr
pop
sbb
sub
sub
add
sbb
repnz
sti
mov
dec
jecxz
jns
add
imul
js
xchg
inc
not
mov
pop
and
stos
sbb
leave
cmp
and
je
xchg
jo
and
rol
clc
aam
insl
cs
dec
fistl
mov
fs
clc
or
fldl
inc
adc
cltd
cld
sti
cmpsl
dec
andl
sbbb
adc
sub
jne
dec
mov
aad
xchg
mov
shll
shll
sbbl
add
adc
mul
pop
fiadds
xlat
or
xor
cli
adc
shlb
nop
andl
inc
ror
jecxz
sbb
scas
lret
xchg
mov
in
ret
push
out
shrl
movsb
mov
push
dec
xchg
clc
mov
pop
lds
mov
push
jbe
iret
cmpsb
loop
mov
rcr
mov
aaa
outsl
inc
jbe
cmp
test
fwait
hlt
or
jbe
inc
xchg
test
insl
fwait
dec
pop
cmp
sahf
jbe
ret
mov
ja
sub
call
insl
push
xchg
ret
clc
mov
dec
pop
ret
jp
and
sahf
ja
das
push
sbb
aas
stc
popa
aaa
dec
mov
xor
cmp
movsl
shrl
dec
das
into
cmp
sahf
inc
jl
or
mov
bound
jg
cltd
sbb
mulb
dec
scas
push
mov
sbb
mov
in
add
je
push
pop
pusha
jge
aam
cmc
iret
xchg
and
icebp
and
or
inc
ret
adc
sti
pusha
xchg
icebp
and
in
cmpsl
push
sub
xchg
pop
mov
repz
call
ret
or
inc
push
stos
mov
test
or
xor
sti
loop
out
scas
mov
pushf
mov
cmpl
push
dec
bound
cmp
sbb
xchg
xchg
mov
outsl
mov
xor
xor
arpl
imul
mov
jecxz
mov
add
xchg
test
cmp
adc
jo
insb
shrb
addb
dec
out
or
int
iret
xchg
inc
cwtl
adc
push
mov
hlt
pop
pop
js
aam
lods
inc
pop
push
loopne
das
mov
das
stc
leave
or
pop
lods
push
idiv
lods
pop
rcrl
test
push
mov
push
inc
lahf
mov
dec
imull
dec
mov
xchg
int
jae
add
mov
stc
out
mov
lock
sub
mov
pusha
repnz
dec
add
data16
out
sbbb
andb
mov
in
add
test
fdivs
insb
mov
loope
in
loope
inc
je
lock
lea
adc
mov
test
in
lahf
and
cmpsb
ss
mov
outsb
dec
mov
sbb
dec
add
sub
int3
and
and
xchg
enter
adc
inc
adc
fisubs
js
daa
sub
fdivrs
jge
dec
xor
xchg
dec
pop
or
out
and
or
sub
cmpsl
adc
or
arpl
push
and
sub
mov
and
pop
push
mov
jge
cmc
frstor
dec
ljmp
scas
dec
and
mov
cs
push
push
mov
inc
scas
lret
or
test
aaa
xor
hlt
jg
mov
test
pushf
or
lret
xor
out
adc
sub
in
decl
mov
xchg
push
xlat
mov
lahf
xchg
scas
mov
add
insl
sub
in
jno
outsl
xor
ds
dec
sbb
dec
push
rcrl
push
sti
push
adcb
jp
jmp
dec
shlb
sbb
inc
fiaddl
lret
pusha
arpl
jl
out
das
mov
mov
pop
sbb
popa
mov
jb
mov
loopne
inc
dec
mov
sbb
sahf
cmp
loopne
mov
gs
mov
cltd
jecxz
xchg
fcomi
pusha
push
add
xchg
cmp
xor
cmp
jge
jbe
mov
repz
push
adc
push
in
fsubrp
sti
jns
icebp
sbb
jns
inc
jmp
pop
cwtl
lods
pop
std
loop
lret
pop
in
insb
pop
es
cmp
xlat
mov
sahf
leave
mov
xchg
cltd
cmpsb
lods
mov
mov
hlt
xchg
imul
ja
ds
test
int3
sbb
mov
std
mov
cmpsl
nop
or
mov
sbb
std
movsb
pushf
sbb
ds
sbb
mov
sahf
mov
dec
andl
jle
arpl
lret
xor
mov
loop
jne
out
bound
or
or
js
xchg
les
leave
aad
je
test
dec
dec
test
ja
es
loop
js
fidivs
daa
inc
repz
aaa
adc
cli
cmp
inc
ret
push
sbb
jmp
pushf
call
loopne
pop
cmp
xor
mov
ljmp
lods
popl
fcmovnu
fistpl
inc
repnz
push
xchg
cmp
call
or
int3
scas
shlb
add
dec
and
div
pop
test
sbb
mov
xor
mov
mov
push
fdivrs
push
xchg
cmpsl
test
or
stc
push
sar
nop
add
mov
jno
or
rcl
sbbb
jg
xchg
lret
nop
out
jp
xor
arpl
fidivrs
adc
cmc
shl
imul
push
push
fmuls
lcall
in
lcall
loope
arpl
out
mov
icebp
pop
ffree
sbb
push
mov
jl
fdiv
mov
sbb
inc
add
cmp
add
push
idivl
sub
sbb
cld
mov
je
cmpsl
das
gs
jb
jne
shl
jb
push
jbe
xor
dec
jp
lret
lahf
push
xchg
xchg
shrb
inc
xchg
sub
les
ret
clc
inc
es
and
sbb
mov
mov
jne
push
mov
aam
dec
cmp
push
pushf
xor
mov
or
mov
add
paddq
test
push
scas
xchg
mov
mov
cmc
adc
and
fmulp
sti
adc
ds
push
dec
aaa
push
das
arpl
ret
imul
xor
sahf
adc
insl
and
pop
insb
out
push
aaa
xchg
dec
jb
jno
inc
leave
cmp
lret
add
or
dec
sub
fsubr
test
pop
aaa
les
mov
adc
push
cwtl
or
jmp
adc
pop
mov
fnstcw
aam
xor
push
sub
popf
xchg
rcl
outsl
fsubl
sarb
jns
lods
fisttps
into
mov
fucomp
or
dec
fdivr
pop
push
test
dec
fs
std
dec
daa
or
dec
repz
pop
mov
jno
aas
hlt
lahf
xor
test
xlat
fisubs
enter
pop
pop
pop
insb
aas
xchg
pop
leave
adc
adcb
mov
bound
jne
loop
xchg
mov
or
mov
pop
cs
jb
inc
test
adc
xor
loop
inc
jp
in
pop
push
xor
xchg
jo
data16
and
inc
push
jns
pushf
popa
push
andl
xlat
fwait
mov
dec
push
mov
repz
and
jmp
outsb
movsb
pop
jb
lock
loopne
andb
sub
mov
jg
add
jns
jns
inc
int
push
cmpsl
shll
insl
pop
popa
jecxz
jne
cs
push
test
in
or
sbb
mov
loop
mov
xchg
or
in
ljmp
std
mov
dec
fxch
sub
std
dec
pop
or
testb
jge
sbb
mov
je
mov
insl
data16
inc
and
insl
repz
fidivl
cwtl
cmp
jb
xchg
jecxz
dec
sbb
movsb
or
insl
pop
ret
xchg
sub
mov
jp
aas
test
pop
mov
movsb
jp
mov
adc
ds
es
xchg
lds
pop
sbb
add
sbb
roll
out
jp
pop
popa
movsb
aad
sub
rcll
pop
cmp
pop
dec
mov
jg
ljmp
ljmp
push
stos
fucomip
addr16
mulb
xor
adcl
rcl
push
add
push
pushf
mov
pop
shlb
out
xchg
mov
adc
ret
mov
outsb
sub
or
or
into
pop
and
enter
push
xchg
pop
and
iret
mov
or
jbe
es
adc
sbb
in
push
lcall
xchg
sub
test
cmc
cwtl
jns
fadds
popl
mov
pop
mov
jb
bound
lcall
aas
scas
sbb
cmp
xchg
mov
test
and
negl
clc
pop
add
je
dec
rcrl
xchg
push
outsb
cmc
stos
xchg
and
loop
inc
lods
int3
sub
in
cmp
xchg
movsl
cmpb
sbb
push
pop
js
xor
lock
or
rorl
adc
bound
inc
push
xchg
dec
add
shlb
and
adc
sub
add
adc
mov
rclb
adc
dec
inc
adc
or
out
cmovno
inc
in
dec
add
or
xor
call
in
out
pop
sub
push
pusha
jg
jmp
in
bound
mov
and
movsb
mov
pop
lret
aad
jge
or
mov
sbb
aas
std
pop
sbbl
fsubs
jle
mov
cmp
cwtl
jns
and
pop
jge
insb
popf
sahf
mov
sub
xchg
sub
stc
ret
in
imulb
dec
scas
inc
and
inc
ror
aam
cmp
xchg
ja
leave
scas
or
cmpb
ret
pcmpeqd
sub
dec
push
inc
scas
push
out
fcmovbe
dec
movsl
in
insl
cmp
movsb
pop
jbe
cli
daa
sbb
sbbb
fldt
mov
mov
jmp
push
jo
iret
jl
sahf
xchg
out
ja
hlt
fwait
xor
enter
adc
xor
daa
arpl
hlt
or
icebp
lahf
adc
mov
lret
pop
popf
adc
push
cmpsb
pop
cs
and
pop
mov
divb
leave
cmp
jg
add
xorl
pop
in
movsb
out
sub
lcall
leave
xor
cmc
mov
pop
jle
adc
push
ja
inc
lret
mov
jb
scas
mov
aad
jb
jno
cmp
fildll
mov
ret
ficompl
cmp
pop
pop
cmp
pop
dec
frstor
movsl
test
fstpt
jge
rorl
pop
add
mov
xchg
sub
mov
xor
jp
xor
rclb
iret
cmc
enter
out
int
push
rcll
out
sub
push
cld
lock
int3
pop
aad
movl
mov
xchg
aam
fisubl
cmp
pop
sti
xor
iret
xchg
jecxz
and
inc
test
mov
or
sub
and
in
and
test
arpl
mov
aas
enter
jge
aaa
mov
mov
add
bound
sub
ss
dec
fldl
les
enter
xor
cmp
fadds
fcomps
negb
cwtl
enter
pushf
test
sahf
fimuls
inc
jae
das
jno
outsb
insb
jns
jnp
aas
jg
jo,pt
leave
clc
cs
sahf
fsubrs
shlb
push
xor
testl
and
pop
into
sbb
daa
adcb
sub
shlb
xor
pop
sbb
sbb
fcoms
mov
or
dec
imul
or
mov
inc
mov
in
int
loopne
sbb
outsl
mov
inc
rcrl
scas
xchg
fs
push
ja
adc
in
loop
outsb
sbb
or
iret
mov
fcoms
rol
inc
popf
sbb
jo
or
jl,pt
cmp
mov
pop
fstpt
lret
cs
fisttpll
cmp
call
gs
push
in
or
lahf
stos
sbb
mov
lcall
and
xchg
mov
cmp
dec
cli
pop
mov
sbb
sub
les
add
inc
xor
js
xchg
cmp
mov
pop
dec
ja
xor
and
mov
cmp
push
testl
mov
xor
lret
repz
cmp
sub
lods
cmpsb
sbb
adc
fld1
movsl
call
pop
inc
sub
ds
adc
push
jbe
pop
stos
adc
add
ss
out
and
xchg
ss
push
xchg
sarb
xchg
cmpsl
push
ret
gs
sub
divl
cmp
push
and
stc
aad
das
jmp
int3
xor
or
adc
cmp
dec
sti
pop
lods
mov
sti
mov
adc
xchg
mov
fstpt
push
das
data16
enter
movsl
mov
mov
push
orb
or
cmp
dec
int
xlat
leave
test
sar
mov
scas
cwtl
out
sti
mov
and
stos
xor
into
dec
shrl
enter
lods
scas
pusha
popa
sub
cltd
insb
repz
push
push
lret
jo
pusha
test
cmpl
cltd
xchg
lods
jno
pop
cmp
test
push
mov
sbb
mov
imul
sub
movsbl
xor
addr16
sbb
and
stos
je
cmpsb
enter
sbb
inc
xor
int
mov
aad
sub
arpl
dec
popa
jmp
mov
hlt
imul
mov
xchg
and
arpl
mov
cli
xor
push
mov
inc
call
aam
lds
les
push
stc
cmp
decl
ja
fisttpl
imul
push
xchg
cmpl
add
and
punpckldq
sub
in
in
jnp
fwait
xor
test
sub
add
push
rolb
int
mov
mov
sbb
xor
adcb
sbb
imul
movsl
loop
inc
loop
xchg
in
inc
dec
mov
popf
jb
lds
call
out
mov
push
out
jg
cmp
dec
add
fldl
mov
fldl
aad
sbb
movsl
hlt
or
or
and
ret
scas
mov
xchg
mov
stc
nop
xor
sbb
xor
rcrl
shrl
pop
repnz
and
and
lods
push
lcall
inc
push
test
loop
cltd
mov
cmp
push
psubw
pop
scas
clc
mov
pop
mov
into
shll
pop
mov
ficoml
sti
pop
ret
mov
lahf
dec
aas
mov
std
fdivrl
rcll
shlb
mov
scas
jecxz
cli
jb
xor
lret
lds
mov
mov
and
sahf
cmpsl
cmp
lahf
arpl
pushf
cmpl
mov
mov
mov
jge
xor
pop
or
fdivrs
scas
mov
insl
adc
adc
pop
sti
ficoms
jl
xor
mov
mov
sub
cli
mov
and
xor
test
loopne
jns
rcll
fsubl
jecxz
cbtw
cmp
in
inc
jbe
push
mov
xor
mov
enter
pop
xor
sbb
lahf
lret
mov
mov
cmpsb
and
add
fdivrs
mov
rcll
cmpsb
cli
cmp
and
int3
cmpsl
inc
jne
and
cld
pop
mov
test
movsl
je
mov
mov
hlt
xchg
dec
inc
out
mov
fnsave
daa
inc
std
mov
xor
jg
stos
rorb
lods
mov
lcall
fidivs
insl
loop
icebp
ds
addr16
int
jnp
jl
pusha
outsb
adc
lock
push
dec
push
js
xor
cmp
insb
xor
dec
sar
sbb
sub
lds
mov
cmp
in
mov
fists
and
lods
or
sbb
aad
lods
in
std
push
out
lahf
or
hlt
adc
mov
lods
stc
loope
lods
pop
jg
popa
xchg
push
mov
and
dec
inc
popa
scas
stc
adc
test
mov
aas
cmp
out
mov
mov
mov
in
ss
or
mov
sbb
fstpt
dec
ret
sbb
or
out
scas
add
mov
jmp
push
imul
mov
xchg
test
out
out
and
push
or
dec
rcrb
pop
cwtl
adc
int
dec
cmp
adc
icebp
or
add
in
in
dec
dec
sub
push
push
out
stos
insb
pushf
push
add
mov
xor
aaa
and
movsb
inc
enter
inc
pop
ds
push
clc
xor
cmp
stos
mov
iret
repz
push
in
push
jmp
jo
jl
add
xor
sti
icebp
movntq
adc
negl
push
push
shrb
cmpsl
sti
mov
xchg
outsl
decl
add
arpl
add
inc
lret
push
cmp
cmpsb
inc
into
addr16
sub
xor
hlt
lcall
pop
mov
shll
loopne
xchg
pop
outsl
push
add
movsb
outsl
dec
ret
dec
lret
push
inc
jno
movsb
mov
add
xchg
xchg
xchg
xchg
lods
fldenv
sub
push
popa
test
or
ds
inc
mov
sbb
fs
pop
imul
clc
call
jb
imul
out
push
pop
insb
das
xchg
and
push
push
lret
xchg
fwait
xor
mov
fnstsw
add
sub
cmp
and
in
push
push
sub
stc
and
cli
stc
xor
add
int
mov
fisubrs
scas
xor
repz
and
jmp
push
add
cmp
rcr
adc
rorb
push
loop
jp
scas
push
stos
cld
mov
subl
fsubl
mov
sbb
in
pop
orl
inc
stos
mov
mov
stos
psubsw
lea
cmpsb
jae
mov
outsl
lahf
mov
inc
in
lods
aam
popf
push
push
xchg
fdivrs
in
xchg
test
push
or
lcall
push
inc
jg
inc
imul
aas
mov
pop
repz
aaa
mov
xchg
pusha
shlb
gs
mov
jns
leave
std
jg
pop
push
bound
enter
lods
mov
in
sbb
or
cmp
and
mov
cmp
xor
push
pop
arpl
add
xor
gs
roll
idiv
sbb
shll
xchg
mov
or
and
mov
xchg
push
mov
pushf
pop
inc
insl
call
pop
sub
inc
stc
jne
in
inc
mov
sbb
push
xchg
loopne
into
jne
xchg
push
pushf
cmp
jmp
out
leave
mov
pop
inc
and
push
mul
cltd
mov
jnp
sbb
push
mov
not
xchg
sub
popf
mov
mov
push
cmpsl
dec
pusha
les
int3
cmpsb
arpl
scas
push
out
or
xchg
clc
aad
jne
inc
fdivs
mov
outsl
in
or
pop
mov
in
cmp
and
pop
rorl
mov
pop
fsts
or
orl
push
adc
push
fbstp
xchg
cs
pop
jnp
xor
and
sub
xor
sbb
xchg
ljmp
fidivl
cmp
xchg
cmp
or
xchg
mov
into
xor
push
addr16
xchg
add
or
cs
push
sub
dec
aad
cld
mov
cltd
add
add
inc
xchg
fsqrt
enter
mov
faddl
es
xor
and
sub
inc
lods
mov
int
sub
out
fimuls
mov
pop
ljmp
mov
mov
rorl
dec
rolb
outsb
jns
icebp
scas
rclb
mov
jmp
pop
and
fld
inc
ficomps
sar
cmpb
sub
sub
lcall
cld
movsb
shlb
inc
mov
push
test
jg
push
push
add
fucomi
xor
pusha
xchg
and
in
pushf
hlt
ret
aad
das
cld
loope
or
dec
mov
cmpsl
das
cmc
subl
ret
fisubrs
sub
dec
nop
sbb
jecxz
add
filds
aaa
and
bound
scas
out
adc
test
sub
sbb
imul
aaa
out
jbe
pop
das
jnp
loope
pop
jg
sbb
cld
insl
adc
aaa
push
mov
dec
sbb
aaa
push
sub
dec
addb
pop
xchg
in
jne
lods
xchg
ds
inc
cmp
add
les
cmp
inc
fnstcw
adc
mov
xchg
test
jge
sub
insl
test
aam
push
cmpsl
push
jo
rorl
andl
push
dec
add
mov
jg
ret
cmp
rcll
dec
pop
outsb
pop
cmp
decb
mov
xchg
mov
xor
sbb
mov
dec
sti
mov
iret
hlt
sbb
in
lods
sbb
insb
sbb
xor
add
jl
loopne
push
dec
cli
sbb
sbb
lahf
or
or
sub
sar
aad
cmp
test
es
ret
mov
sbb
or
aam
ficoml
mov
das
ds
fisubs
insb
adc
xor
ret
inc
push
cmp
cmp
xor
cmc
insl
or
enter
jl
das
lock
int3
outsl
mov
dec
dec
mov
push
out
lahf
enter
sbb
push
xchg
outsl
mov
push
mov
push
movb
sub
pop
pop
mov
push
int
test
mov
mov
dec
das
mov
jmp
mov
into
push
push
jb
push
test
adc
in
or
cltd
repz
inc
xchg
mov
sbb
adc
mov
xor
in
sbb
push
jns
in
lcall
ljmp
cmpsb
sbb
das
pushf
mov
or
xchg
push
pop
xor
data16
fadds
fadd
mov
test
loope
xchg
ljmp
adc
fxtract
andl
mov
sti
mov
subb
call
mov
imul
mov
sbb
lods
jo
sbb
pminsw
add
pop
fldcw
incl
pop
push
jne
xor
leave
out
imul
xor
pop
mov
icebp
std
movsb
data16
mov
es
fsubl
leave
lods
nop
test
cmp
hlt
inc
sub
enter
aaa
daa
xchg
xlat
inc
sub
adc
jg
sub
sbb
dec
sub
push
mov
mov
ljmp
sub
xabort
popa
outsl
pop
fdivrs
mov
mov
lds
cmp
cmc
cmc
mov
sub
cmp
arpl
out
fwait
cmp
in
xchg
fidivrs
xor
adc
push
loope
icebp
and
xlat
jp
in
adc
push
ret
mov
call
dec
mov
cmpsl
sbb
push
nop
insb
out
push
jmp
mov
loop
pushf
fwait
jo
jb
popf
mov
mov
push
inc
mov
in
icebp
cld
addb
lcall
daa
inc
into
jb
cwtl
test
xor
iret
dec
pop
sub
loop
dec
mov
xor
or
clc
push
push
adc
adc
xlat
pop
insb
adc
push
inc
mov
stc
and
inc
cltd
dec
aas
inc
fisubrl
mov
inc
into
or
cmp
leave
push
mov
sti
repz
int
rcll
adcb
enter
mov
inc
inc
mov
inc
inc
in
sub
push
popf
or
inc
sbb
test
mov
inc
popa
std
mov
push
dec
mov
xchg
pop
dec
rol
fisttpl
in
fistpl
cmp
cmpb
cli
subb
mov
sti
sbb
lock
adc
fs
fbld
dec
cmp
sub
push
loopne
sahf
cmpb
nop
mov
cmp
fdiv
inc
cmpsl
xchg
push
stos
imul
fwait
neg
push
pusha
sub
and
cltd
into
in
jns
pop
jmp
das
into
push
jnp
cwtl
adc
mov
xchg
mov
pop
adcb
push
mov
sub
mov
inc
rclb
push
push
jnp
sbb
ret
adc
int
imul
push
adc
es
stos
xor
or
jnp
clc
sbb
xchg
ret
rcrb
mov
or
sub
mov
mov
fdivl
lret
sar
lret
in
daa
mov
icebp
loope
mov
pusha
loop
shrl
sarb
sbb
ljmp
push
call
aaa
inc
lret
dec
cmp
test
mov
mov
sbb
stos
in
mov
push
dec
xchg
and
pop
pop
adc
pop
mov
dec
imul
add
cli
inc
cltd
arpl
add
mov
mov
outsl
mov
pop
test
dec
mov
std
pop
movsb
push
mov
repz
or
loop
add
fcomi
stc
adc
stc
inc
pop
lds
push
lds
incb
out
xchg
sub
sub
mov
dec
iret
pushf
andl
jns
push
scas
fildl
pop
aas
test
cmp
inc
xchg
or
push
xor
repz
jnp
ljmp
sub
idivb
push
and
and
sub
dec
or
test
mov
dec
aaa
cmp
ficoml
add
mov
xor
push
adc
inc
push
lcall
mov
xchg
das
stos
sahf
lret
jmp
cmpsl
nop
mov
shll
imul
xchg
or
cs
nop
into
mov
std
mov
or
clc
xchg
mov
inc
repz
xchg
fmuls
jne
pop
data16
pop
and
dec
movsl
pop
push
jb
mov
jle
sub
jp
in
push
lcall
rorb
xor
not
push
mov
add
addr16
call
jb
in
mov
aas
mov
lret
shlb
testl
xchg
or
das
jmp
pop
mov
push
pop
jb
lock
jno
cmp
xor
ret
push
mov
aad
loop
push
loopne
lret
mov
cmp
pop
pop
sti
in
cld
lcall
pop
ljmp
popf
cltd
jmp
sub
es
aas
xchg
orb
xlat
mov
shr
shrl
loop
in
rorl
sbb
mov
lahf
into
dec
mov
addl
inc
lret
in
jno
jg
movsb
std
loopne
roll
pop
movsl
xchg
adc
nop
and
jo
cli
and
pop
pop
xchg
popf
repnz
sbb
mov
jnp
inc
jg
mov
push
int3
or
dec
adc
in
push
dec
sarl
cmp
push
fiaddl
fwait
xor
xchg
xchg
cld
cs
and
pop
push
hlt
ds
std
jecxz
and
mov
push
xor
push
fbstp
mov
dec
cmp
mov
cltd
jmp
sbb
or
dec
int
xor
push
cmpsl
loope
inc
pop
popa
fs
div
push
mov
cmp
in
outsb
push
fwait
jge
mov
sbb
mov
inc
out
leave
xchg
xchg
adc
add
cmp
push
mov
xchg
or
test
mov
imul
ss
pop
daa
push
fisttpl
pop
mov
ljmp
xor
mov
loop
jle
or
mov
xchg
pop
test
jno
test
aas
jg
mov
mov
jae
arpl
scas
lret
jne
mov
cwtl
lods
xchg
rclb
arpl
les
push
into
xor
jbe
mov
outsb
cmp
pop
cmp
cmp
xorb
push
mov
jmp
push
js
dec
jle
and
aas
cmp
out
push
cli
xchg
jae
lea
xchg
rcll
cmc
inc
xchg
ss
add
pop
lods
cmp
bound
or
cs
arpl
pop
into
cmp
adc
or
imul
shll
aaa
jl
inc
in
add
repz
xlat
test
orb
out
mov
jge
rorl
and
enter
cwtl
and
sarl
jg
loope
inc
and
mov
lea
icebp
popf
or
jg
adc
sbb
mov
pop
push
mov
lret
xor
xor
gs
fwait
mov
out
inc
mov
add
popf
dec
pop
int3
testb
pop
push
mov
cmp
dec
or
sbbl
inc
js
add
jmp
test
xor
mov
sub
mov
jecxz
inc
xor
add
adc
sbb
xchg
xlat
dec
jb
les
test
add
or
rorb
stc
ret
cld
iret
repz
addr16
mov
lcall
dec
test
test
test
push
aad
aam
mov
jle
xchg
daa
mov
cmp
push
aam
or
lret
and
or
into
jecxz
inc
mov
lods
rcrb
adcb
stos
push
insl
stos
sahf
mov
scas
sbb
sbb
lock
sbb
adc
xchg
fbstp
inc
jb
vsqrtss
jmp
in
cltd
loopne
inc
mov
ret
adc
mov
jns
adc
iret
repnz
push
scas
cli
movb
push
gs
adc
paddsw
pusha
cli
lahf
repz
sbb
pushf
faddl
add
xor
out
js
es
cmp
cmc
lods
test
jb
xor
pop
hlt
pop
lock
dec
aas
add
dec
xlat
cli
sahf
jns
jg
je
xor
jo
push
insl
cmp
das
fimuls
das
arpl
sub
test
lret
mov
adc
adc
lods
pop
push
inc
mov
push
adc
in
jl
mov
mov
pop
mulb
push
mov
out
xchg
insb
ss
cld
mov
pop
cmpsl
xchg
lods
out
xchg
jno
xchg
adc
divl
sbb
pop
shrl
pop
xorl
pop
stos
scas
insl
pop
bound
nop
loope
mov
and
fstpl
adc
lahf
lods
push
xor
and
adc
jne
popa
loopne
sbb
fwait
sbb
mov
rorl
mov
rcrl
jp
dec
lods
cmp
aam
cmp
lods
inc
or
mov
daa
lahf
jnp
ror
in
and
pop
or
movsl
hlt
sub
push
and
mov
lods
loope
inc
jg
sub
mov
dec
pop
xor
or
mov
mov
xchg
sub
fst
aas
xchg
pop
xchg
mov
jp,pn
int3
jmp
and
aas
shll
and
dec
and
movsl
pop
fstpl
ret
sahf
js
movsl
push
aad
lods
outsl
test
test
add
clc
lock
cmpsb
shlb
cmp
mov
or
dec
cltd
mov
mov
repnz
or
rcll
andb
dec
push
push
jo
xor
daa
cmp
out
jp
mov
outsl
ud0
loop
add
xor
fidivrs
push
out
lods
outsb
add
mov
lahf
push
bound
les
mov
push
aad
pop
push
xor
xchg
xor
jg
lret
pop
dec
xor
jecxz
inc
or
ss
in
dec
scas
jmp
cli
cltd
sbb
rorl
imul
mov
ljmp
div
or
out
fs
repnz
and
mov
cmp
aad
or
xor
or
add
shll
enter
shlb
decb
std
repz
sub
in
mov
jmp
lds
jb
inc
mov
and
nop
cwtl
add
repz
js
ds
sti
aas
ds
xchg
in
in
mov
fsubl
mov
enter
push
and
cmpsb
enter
sbb
adc
pop
cmp
cmp
movsb
dec
adc
xlat
cmp
loope
push
adc
sub
sub
mov
roll
gs
mov
je
cwtl
push
pop
dec
jmp
or
mov
add
and
in
into
fprem
gs
aas
ja
cli
lcall
cmp
out
inc
data16
xchg
ret
xor
fisttpll
sbb
push
jmp
js
decl
cs
rolb
xchg
test
dec
scas
pop
nop
cli
shll
mov
shll
ret
mov
sahf
inc
cmpsb
pop
mov
out
movsb
pusha
addr16
xlat
popa
push
sbb
mov
inc
call
test
ds
mov
sbb
mov
mov
or
sbb
insl
jb
out
xor
xchg
xchg
sub
adc
sbb
add
push
lods
jp
and
aaa
in
in
or
inc
fwait
testl
jnp
pop
xchg
mov
in
in
addb
ficomps
in
pop
mov
stc
add
cwtl
subb
hlt
or
add
scas
cmp
push
inc
fcomi
out
pushf
xlat
jecxz
push
mov
jne
lcall
incb
fbstp
pop
in
pop
cmpsb
popf
jmp
adcl
movsl
push
bnd
inc
sub
int3
lods
lds
movsl
dec
xlat
sub
xchg
rorl
pop
sarb
xchg
xchg
cltd
xchg
mov
lea
xchg
lea
jo
cmp
jo
inc
pop
popa
push
fucomip
push
pop
jbe
insb
movsl
jne
jg
fs
lods
pop
data16
leave
enter
addr16
fimull
cmp
cmp
and
es
pop
out
mov
mov
add
sti
cmp
mov
sub
xor
dec
sub
push
adc
push
cmpsl
fcoml
inc
bound
cmpsb
pop
mov
loopne
mov
divl
sbb
xlat
enter
or
cld
dec
popf
and
add
popa
cmc
movsb
jmp
lods
and
movsl
or
insb
mov
gs
popa
mul
inc
xchg
dec
movsl
lds
mov
test
fimuls
and
movsb
test
arpl
add
addl
mov
pop
jns
push
mov
lret
push
inc
xchg
jge
ret
sti
xchg
cwtl
ja
lea
jl
inc
loope
jp
imul
cli
das
mov
adc
sarb
into
pop
cmpsb
ss
dec
gs
inc
push
dec
xchg
sti
dec
addl
push
push
xchg
jnp
in
dec
pop
loopne
insb
lahf
xlat
fwait
push
and
mov
cmp
repz
or
push
xor
dec
lods
pop
pop
fidivrs
scas
cmp
cmp
into
xor
cmp
jnp
aaa
popa
ror
out
popa
bnd
or
ljmp
subb
rcrb
xor
jnp
stos
mov
cmc
xchg
outsb
ds
add
and
and
push
jmp
jp
orb
jecxz
sub
push
subl
xor
xor
xor
repnz
adc
stos
scas
out
test
push
cmp
mov
and
push
jno
push
xchg
push
loop
inc
push
cltd
lahf
sbb
adcb
fwait
insl
dec
aad
sbb
mov
mov
int3
stc
rclb
fwait
inc
jl
idivb
sub
mov
frstor
dec
das
jns
adc
xchg
push
jae
inc
test
add
sbb
inc
dec
xor
sahf
jmp
mov
pop
mov
sub
fcmovnbe
sub
fsubrl
adc
out
jns
sbb
mov
icebp
in
jmp
adc
fidivs
test
and
push
and
cmp
cmc
xchg
leave
sbb
inc
mov
adc
lret
add
int3
mov
into
cmp
xor
test
aaa
lret
fidivrl
pop
cmp
add
jl
lcall
xor
pop
pop
test
cwtl
push
nop
sub
test
pop
sahf
enter
fldcw
mov
fcomi
lea
push
push
mov
shld
mov
adc
repnz
push
imul
push
xchg
jae
push
xlat
lret
or
xor
cmpsb
mov
mov
jp
nop
jno
std
shrb
push
outsb
mov
and
push
cmp
out
dec
inc
xor
and
inc
repnz
fcomps
xchg
out
mov
aaa
roll
nop
mov
out
int
jno,pn
test
fldl
repnz
je
dec
add
pop
ret
jo
xor
lock
out
icebp
and
mov
jno
sub
lods
loope
mov
cltd
ja
icebp
or
aam
lcall
fisttpll
fbstp
in
lcall
mov
sbb
mov
push
push
push
mov
mov
cltd
xchg
dec
scas
sbb
mov
mov
and
lahf
lea
dec
ljmp
es
test
addl
flds
xor
cmpsb
adc
pushf
mov
push
add
in
dec
mov
push
mov
jg
aad
jns
mov
fmul
pop
loop
xchg
int
sub
call
cmp
jne
jmp
stos
xchg
pop
pop
lds
push
insl
clc
insb
rolb
adcb
push
inc
xchg
mov
add
in
stc
sbb
sub
xchg
ds
repnz
andl
fidivrs
inc
test
add
imul
xchg
adc
inc
icebp
xchg
mov
adc
es
sub
in
or
sub
scas
pop
cli
sub
pop
outsb
pop
mov
sub
sarl
xor
lock
popf
icebp
sbbb
ljmp
push
lret
shll
and
and
fwait
fs
adc
popa
xchg
add
push
jnp
mov
jns
les
leave
sub
push
stc
in
in
jp
mov
test
cmp
xor
cwtl
scas
or
sbb
cmp
cmpsl
ficoms
out
rol
lret
dec
iret
adc
xor
xchg
faddl
mul
pop
js
jg
jecxz
popa
clc
ja
add
mov
add
lret
out
fiadds
aaa
adc
sub
jmp
adc
adc
arpl
fmuls
bswap
fucomi
mov
xor
jecxz
scas
mov
dec
es
dec
dec
jbe
cmp
xchg
inc
orl
or
and
inc
and
imul
sub
or
lock
inc
fcomip
sbb
aaa
xchg
ljmp
add
pop
xchg
add
jns
and
lea
push
sbb
arpl
xchg
repz
je
dec
or
inc
dec
xchg
cmp
mov
clc
orl
xchg
std
andb
fists
push
mov
aam
test
mov
pushf
pop
mov
dec
sahf
shr
push
adc
jne
xlat
bound
subl
sbb
daa
mov
adc
and
mov
aam
mov
inc
jl
pop
xor
int3
xchg
mov
mov
jne
mov
shlb
sub
add
jmp
pop
cmp
or
adc
mov
out
push
mov
cmp
mov
add
lds
call
outsb
or
xlat
jno
outsl
xor
dec
lods
jecxz
add
or
push
dec
inc
repz
push
pop
cmp
test
xchg
mov
cmpsl
and
push
inc
hlt
lcall
aas
jnp
insb
push
sahf
xchg
aaa
faddl
pop
sti
jle
ljmp
xchg
fsubs
xor
clc
mov
ret
push
jmp
sbb
test
cmp
add
or
int
clc
mov
rcl
jle
es
sbb
lods
cltd
cmp
or
push
in
dec
lods
push
cltd
push
mov
inc
jb
mov
mov
loopne
jae
mov
hlt
mov
mov
call
les
aam
fldenv
mov
aad
push
daa
or
stc
notl
sub
push
cmp
and
pop
and
negb
pop
pop
or
cli
ljmp
pop
in
cli
mov
sub
outsb
out
add
push
loop
sbb
imul
shrb
inc
in
adcl
and
add
inc
xor
xchg
out
es
shrb
add
pushf
sub
xchg
pusha
lods
push
sbb
cmpsl
mov
xchg
int3
push
daa
pop
rol
sbb
mov
in
imul
shlb
stos
jp
sub
mov
data16
shrb
outsl
sub
dec
or
dec
xorb
idivb
jbe
xor
out
out
cmc
js
mov
sub
sub
push
loopne
shrb
inc
in
repnz
rclb
out
int
and
mov
sbb
testb
push
xor
pop
outsl
jmp
sub
push
in
sbb
pop
cmp
dec
into
out
repz
rorb
adc
cmp
pop
jo
cmp
jp
ret
xlat
shlb
push
mov
pusha
aaa
dec
ss
and
js
adc
mov
mov
pusha
push
sub
mov
ret
stos
mov
pushf
lea
int
mov
in
fwait
pop
movsb
sbb
cmp
jp
xor
add
jnp
aam
mov
push
aaa
pop
add
push
push
sti
cmp
mov
pop
stos
xchg
jnp
push
jae
mull
stos
push
jl
adc
adc
mov
popa
inc
push
les
mov
shl
push
in
sub
jo
jne
push
sub
loope
adc
iret
inc
mov
ja
out
xor
pushl
ss
movsl
and
int
std
add
lds
bound
and
and
adc
inc
arpl
or
cmp
test
xchg
xlat
dec
hlt
jne
mov
insl
xlat
outsb
pop
fcompl
mov
xchg
jnp
and
or
mov
jge
cmc
ret
mov
pop
push
mov
cmp
test
pop
push
rorb
lahf
stos
adc
pop
mov
xor
dec
mov
adc
out
sub
rcrb
loopne
push
xor
in
repnz
out
mov
push
add
daa
in
outsl
dec
mov
bound
push
inc
fs
lea
jb
rolb
fldl
pop
mov
cmp
jae
lcall
les
mov
mov
mov
clc
and
mov
add
cwtl
test
loope
movsl
cmp
push
and
pop
test
fidivrl
jg
fisttps
subb
aad
movsb
int
jmp
dec
and
jmp
aad
in
add
adc
mov
fcomps
aad
push
out
sbb
test
mov
mov
cmp
pop
mov
inc
mov
ficompl
mov
mov
xor
lahf
jp
lock
movsb
mov
sar
notl
lea
pop
push
push
xchg
adc
mov
fisttps
test
adc
scas
lret
jle
dec
mov
icebp
cmc
repnz
xchg
jecxz
pop
roll
arpl
sub
push
pop
pop
mov
mov
outsb
mov
divps
cmp
leave
and
cmp
loope
xchg
out
hlt
insl
sti
dec
add
pop
mov
sbb
and
cld
lea
imul
cltd
loopne
jl
pop
jl
sub
or
fildl
xchg
test
in
mov
in
pop
and
imul
outsb
cmp
mov
neg
inc
in
ljmp
lods
out
je
aad
or
movsl
rcr
push
cmp
inc
addl
into
sub
shll
dec
cltd
xchg
sbb
neg
jp
xor
jne
add
out
std
xor
repz
mov
out
dec
sbb
sub
fwait
jl
add
jg
xchg
and
mov
test
subl
mov
daa
sarb
rcrl
mov
pushw
out
xor
insb
cli
jmp
clc
xchg
leave
adc
loope
cmp
int3
aad
sbb
cmp
lahf
es
jmp
xchg
xchg
adc
fcmove
mov
xor
insb
sbb
mov
adc
mov
adc
add
xchg
lfs
mov
icebp
add
sahf
xchg
xchg
jno
inc
in
mov
fidivl
jno
add
out
cs
xchg
mov
fldenv
dec
icebp
shll
or
les
pop
xor
xor
out
subl
mov
sbb
les
divps
xchg
nop
push
add
fimuls
mov
xchg
pop
stos
add
je
fs
sahf
iret
pop
jle
repnz
fdivl
loop
sahf
and
mov
push
lret
into
mov
pushw
lock
mov
jge
adc
aam
jg
pop
jmp
push
lds
dec
frstor
cmp
pop
lods
ret
cld
mov
inc
fldl2t
or
fisttpl
push
ds
out
dec
add
mov
leave
xor
sub
push
subb
cmp
gs
and
mov
and
aad
mov
es
mov
cmpsl
into
xor
push
lcall
cmp
das
push
jae
and
or
pushf
ret
pop
sub
fmuls
sub
mov
sti
mov
adc
clc
leave
imull
xlat
add
mov
sub
pop
mov
sti
dec
mov
out
lds
jge
pop
je
inc
jns
push
lahf
push
mull
push
movsl
mov
pop
jmp
lods
mov
mov
test
lods
cltd
dec
imul
inc
ret
sysenter
sysexit
and
lret
outsl
sub
nop
loope
and
in
cmp
loop
daa
cmp
addr16
fucomp
inc
adc
mov
out
test
out
pop
ret
ficomps
cmp
mov
sbb
jg
repnz
lret
arpl
sub
shl
or
push
xchg
add
push
mov
and
dec
xor
addr16
sbb
push
insl
mov
dec
jb
push
inc
jl
dec
xor
nop
fistpl
mov
imul
out
inc
mov
xor
xor
mov
pushf
jo
jnp
fisttpll
stc
fsubrp
mov
cmpsl
xor
jnp
sahf
jno
or
push
bound
xchg
mov
arpl
outsl
outsb
cmc
testl
insl
testl
inc
pop
jl
fs
mov
pop
insb
lahf
jl
pusha
lds
popa
aaa
addr16
notb
mov
xlat
cmp
imul
pop
pop
mov
xchg
sub
sahf
adc
test
mov
mov
insl
test
pop
repz
or
and
outsl
dec
adc
mov
aam
ret
fistps
fistpll
fnstcw
imul
and
test
and
fsub
daa
outsl
mov
cmpsl
pushf
sarw
cmp
sub
aam
add
arpl
leavew
cs
mov
aam
scas
inc
push
in
xchg
or
mov
notb
push
testl
xchg
popa
out
or
sahf
jl
shll
outsl
jnp
out
adcl
popf
ret
inc
push
nop
dec
outsb
test
std
inc
les
push
out
jnp
mov
call
mov
lods
inc
shlb
mov
imull
jno
adc
mov
add
ret
mov
sub
or
cld
adcl
pop
cmp
sbb
lret
fistps
fistpll
and
sti
in
test
je
pop
outsl
cltd
xlat
std
and
sub
xchg
jg
test
aad
push
out
push
orl
or
mov
cmp
inc
push
vpperm
fsubr
xchg
push
xlat
xchg
testb
jb
mov
push
mov
and
inc
sahf
scas
faddl
imul
mov
js
sub
nop
cltd
es
and
mov
pop
jp
cmpsl
jmp
insl
movsb
or
adc
push
mov
cmc
inc
pop
mov
out
cmpsb
cmpl
jns
xchg
outsb
ret
in
add
test
inc
xchg
icebp
sub
cwtl
cmpsl
mull
fdiv
shl
cmp
mov
mov
mov
pop
sbb
leave
jae
dec
inc
jno
fld
int3
test
aam
movsl
lret
dec
shl
xchg
ljmp
pop
ret
jle
into
sbb
xchg
or
dec
testl
adc
xor
mov
sub
sbb
adcb
iret
inc
sbb
inc
pop
repz
pop
jge
fcoml
xchg
jmp
mov
je
rcrl
push
pushf
sub
dec
clc
rolb
adc
adc
andb
mov
mov
cmc
stos
dec
push
push
dec
cmp
mov
add
push
xchg
jae
shrb
jecxz
sub
shll
sti
ss
jecxz
jl
cmpsl
pop
rorl
or
jbe
iret
xor
rep
outsb
dec
test
jo
cmp
imul
dec
xchg
sbb
fcomps
jne
stos
mov
fsubrp
fwait
imul
push
jge
dec
mov
dec
mov
mov
jp
adc
movsl
in
add
stos
sub
add
repnz
fdivrl
jmp
inc
les
or
and
inc
sub
lret
push
dec
xchg
add
xchg
or
and
add
out
push
scas
test
or
lock
push
pushf
fstp
fistps
mov
xor
or
ss
loop
inc
xor
out
ret
xor
aad
fsubrs
leave
cmp
and
sbb
jns
adcb
mov
mov
mov
out
push
lcall
pop
sahf
stos
clc
pop
stos
insb
test
ljmp
inc
pop
loopne
ss
mov
loopne
mov
mov
adc
sub
je
mov
aam
mov
aas
ja
jb
jl
jae
add
sbb
das
mov
rcl
addr16
adcl
lock
mov
lcall
imul
push
inc
lahf
and
addr16
and
xchg
cli
enter
aad
aas
and
adc
or
leave
cmpsl
and
or
mov
sub
mov
push
sbb
sbb
out
sti
les
sbb
mov
int3
in
or
jb
dec
or
dec
push
loopne
mov
mov
push
adc
stos
cmp
jle
mov
aad
dec
arpl
cmpsl
push
shr
lods
dec
push
adcl
mov
sti
rolb
fdivl
test
lds
mov
outsl
and
ds
add
test
mov
sub
into
orl
stos
int3
adc
mov
jo
aaa
loopne
outsb
sarl
adc
push
pop
pop
xchg
push
mov
cs
lds
fdivl
ljmp
repnz
mov
insl
cmp
mov
pop
pop
mov
and
xchg
sbb
sub
aaa
sub
jo
or
or
cli
int3
mov
shr
adc
loop
lods
mov
mov
jbe
jbe
and
jno
popf
xor
jge
leave
stc
mov
inc
inc
ljmp
adc
cmpb
rol
andl
sub
push
jae
cmp
insl
and
xchg
outsl
add
adc
and
push
push
push
arpl
inc
push
icebp
push
clc
shll
mov
lock
orb
jmp
imul
inc
push
jne
sub
loop
pop
jl
pop
sti
pop
pop
cs
imul
pop
je
cs
jmp
mov
mov
mov
dec
adc
sbb
mov
inc
test
lds
divl
movsl
push
inc
dec
adc
and
fldl
xor
insb
int3
xchg
nop
shl
xchg
pushl
push
or
xchg
in
xchg
mov
rep
mov
or
and
enter
cld
sarl
mov
dec
pop
xor
pop
aaa
mov
popa
cmp
jo
sbb
imul
pop
or
mov
movsb
aas
mov
popa
in
jmp
cmpsl
pop
into
push
mov
pusha
cli
cld
subl
cld
push
mov
dec
and
es
push
sbb
in
imul
jae
lret
clc
test
sbb
lods
push
sbb
inc
jb
aad
rolb
stos
iret
scas
fcoms
frstor
cmp
or
outsb
dec
mov
cmp
fisttps
loop
inc
popf
testl
or
dec
test
mov
mov
test
in
es
test
in
lahf
movsb
xor
dec
loop
xchg
out
int3
inc
jae
jb
ficomps
jmp
adc
rcr
xor
fsubrs
adc
cld
mov
inc
aad
lret
cmp
push
scas
popf
fcoml
je
vmrun
nop
pop
dec
lds
dec
push
in
mov
lcall
call
push
jecxz
cwtl
mov
xchg
jmp
ret
xchg
out
jge
leave
shl
cld
scas
push
xchg
hlt
xor
and
and
pop
pop
lds
mov
and
ffree
mov
clc
or
shr
pop
push
add
test
pop
sbb
push
sbb
mov
pop
add
xlat
inc
shlb
push
add
lcall
or
add
decb
sub
inc
test
int
mov
mov
mov
and
or
adc
fisubrl
addr16
leave
test
js
outsl
mov
dec
jb
jne
je
insb
sbb
jne
xchg
andl
push
inc
and
fadd
sbb
fsubs
out
shlb
in
xchg
fsubrl
ror
xor
bound
and
and
push
fildl
ret
inc
xorb
mov
out
pusha
leave
pop
lcall
hlt
jg
popa
cmp
fwait
test
enter
mov
ds
xchg
stos
sahf
adcl
outsl
jbe
nop
or
push
sub
xchg
shlb
mov
jle
and
jne
jae
int3
inc
jle
jnp
mov
inc
ljmp
int3
jge
xorl
mov
fstl
int3
shll
fisubl
dec
lret
jmp
call
adc
cmp
mov
out
repz
std
nop
andb
cli
notl
add
xchg
rcr
jecxz
repnz
shr
fstl
cld
loopne
cmp
mov
xor
call
mov
pop
lods
add
dec
mov
cmpsl
sub
pop
clc
lret
mov
cmp
add
pop
stc
pop
xchg
sub
jl
xor
mov
mov
icebp
mov
out
je
lahf
jne
imul
ficomps
lret
enter
and
fldt
sub
mov
and
scas
adc
cmpsb
repz
sbb
mov
add
mov
pusha
jbe
and
les
pop
push
mov
cmpb
dec
adc
bound
sub
out
push
dec
loop
scas
mov
shlb
sub
mov
addr16
scas
mov
pop
inc
fisttps
ja
sub
xchg
cmp
pop
xchg
inc
pop
add
mov
sub
clc
add
cmp
outsb
jno
sahf
adc
inc
insl
jb
cmp
lahf
out
or
mov
insb
and
ja
jno
mov
add
cmc
rol
mov
push
int3
cltd
adc
dec
out
xor
arpl
mov
sub
scas
lcall
push
mov
cmc
fidivrl
leave
xorb
loope
jge
pop
lods
xor
xchg
repnz
cli
sahf
cltd
pop
addb
lock
int3
push
adc
adc
leave
aas
jbe
sub
pop
pop
sbb
jge
push
fiaddl
and
cltd
cmp
jge
aaa
xor
mov
jnp
fbld
inc
dec
or
mov
aam
lret
movsl
cltd
push
cmp
mov
and
mov
out
and
out
sub
mov
sarb
sbb
and
sub
stos
cmpl
sbb
lret
sbb
push
orl
cmpsb
and
sub
outsb
xor
jne
sbb
xor
or
dec
test
roll
jno
and
dec
pop
push
push
cli
adc
into
pop
out
loop
popf
push
daa
adc
in
dec
add
iret
ror
lds
aad
adc
inc
jmp
sti
test
fs
jne
je
lahf
movsl
cwtl
add
dec
mov
ret
add
stos
test
adc
push
and
rolb
push
int3
popf
pop
cltd
cmp
sub
xchg
mov
imul
imul
inc
in
push
mov
xor
pop
mov
cmc
int3
inc
sahf
in
dec
inc
push
scas
pop
repz
jmp
insb
inc
sub
push
sbb
lds
outsb
pop
push
jle
xchg
jge
inc
push
xchg
adc
sub
adc
int
sub
movl
pop
ret
jne
inc
push
jmp
jne
fcmove
cltd
push
push
mov
cmp
sbb
pop
pop
xchg
push
jns
cmpsb
rcl
inc
fsubrl
xor
inc
into
mov
dec
cmp
imul
push
mov
xchg
and
and
inc
mov
mov
or
insb
out
add
sub
call
outsb
push
jbe
xchg
and
cmp
in
adc
sbb
sbb
pop
dec
imul
cmp
sub
stos
mov
arpl
stos
ljmp
fdivl
aad
pop
mov
push
push
fisubs
xchg
or
les
xorl
cmc
outsl
or
xor
aas
sub
clc
test
je
and
inc
or
xlat
shlb
or
mov
mov
pop
stos
jge
mov
rolb
pop
sbb
push
cmpsb
cmp
jno
xchg
inc
dec
adcb
outsb
jecxz
lods
dec
lock
inc
jmp
mov
pop
imulb
pusha
insl
notb
pop
cld
data16
xor
imul
fxch
scas
out
shrl
xchg
outsl
jbe
jae
clc
adc
clc
mov
mov
rcr
pop
outsl
cld
mov
jo
mov
mov
xchg
cmp
jp
jbe
repz
and
jmp
in
cmp
cmpsl
lods
add
fwait
and
stos
mov
rorb
inc
dec
loope
push
repz
fimull
pop
pop
pop
adc
adc
jnp
cmp
lret
or
xchg
out
or
inc
add
jmp
mov
sbb
mov
or
xor
pop
test
aam
mov
fprem1
sbb
pushf
repz
add
not
mov
pusha
inc
ds
cmp
std
xchg
pop
sti
xchg
es
xchg
inc
dec
into
clc
mov
add
pop
filds
arpl
push
aam
fsubp
xchg
inc
std
lds
push
push
ror
mov
cmp
mov
mov
mov
or
ss
ds
lea
pop
sbb
dec
or
jecxz
in
daa
ds
mov
mov
fisttpll
jns
pop
adc
xchg
cmpsl
cmp
push
fisubrl
scas
rcll
pushf
xor
lcall
stos
test
dec
int
dec
ss
cli
enter
add
fs
dec
xor
mov
mov
lock
jecxz
rclb
pop
mov
sarl
jmp
test
adc
fcom
jmp
fildl
mov
int3
out
fistl
clc
cmc
insl
xor
pop
inc
sti
testb
scas
push
adc
addr16
negb
out
out
adc
dec
pop
bound
jle
push
cs
sar
int3
stos
mov
popa
sbb
ljmp
xchg
inc
lock
push
pop
push
scas
mov
sbb
mov
out
pop
pop
jnp
xor
mov
mov
pop
push
jbe
mov
xchg
add
adc
aad
mov
movsb
out
imul
push
xchg
aam
push
mov
ret
movsb
mov
sarb
jb
fdivs
pop
xchg
divl
xor
cmp
cmc
cmc
pop
addb
sub
es
jnp
sub
aam
cmpsb
or
xor
add
push
out
lcall
je
gs
fcoml
fimull
or
inc
mov
shl
outsl
rcr
std
into
pop
loopne
imul
aam
jnp
xlat
add
testl
cmp
adc
mov
fdivrs
repnz
dec
jae
add
add
jg
push
pop
fnstenv
aaa
mov
mov
mov
push
mov
cmc
dec
out
out
insb
mov
insb
testb
inc
test
jo
loope
lahf
push
cmp
fs
lods
stc
call
and
test
mov
pop
mov
sahf
mov
push
mov
movsb
sbb
insb
imul
pop
mov
je
xor
mov
mov
add
loopne
sbb
jmp
fstps
in
dec
mov
cs
sub
fs
stos
icebp
scas
sub
pop
sbb
fisubrl
add
fdecstp
sbb
ljmp
mov
jge
int3
xchg
push
cmp
mov
add
push
lea
mov
xor
mov
xor
bound
xchg
into
dec
repnz
ror
movsb
pop
mov
pop
add
aad
fsubrs
negb
pop
outsb
fisubrl
lods
mov
ds
push
jle
dec
mov
ss
push
mov
pop
int
jbe
jmp
jl
popf
mov
sub
mov
movsl
ja
adc
push
gs
or
pop
jae
adc
mov
insb
mov
loopne
enter
xchg
or
mov
mov
cli
push
mov
hlt
mov
fsubl
cltd
ret
xor
cmpl
xchg
sahf
mov
and
incl
es
inc
sub
pusha
rcll
sub
sbb
lds
js
dec
xor
leave
xor
pop
xchg
jl
cs
mov
mov
mov
data16
push
xchg
out
addr16
idivb
out
mov
lret
out
cmpsl
test
xchg
mov
mov
sbb
jno
insl
mov
add
mov
cmp
xlat
adc
push
cmp
sbb
rolb
mov
push
int3
mov
add
jge
jnp
jno
ja
popf
xchg
lds
jecxz
repnz
jp
pop
mov
addr16
fwait
lret
pop
add
popf
fwait
and
mov
mov
sbb
push
inc
pop
cwtl
int3
mov
and
inc
mov
lods
add
sbb
sub
push
leave
popa
xchg
sub
outsl
mov
cmp
ja
mov
dec
clc
jne
inc
arpl
sub
fisttpl
and
std
pop
rolb
stos
and
xchg
out
sub
adc
call
es
incl
mov
inc
mov
add
jle
sub
sub
push
push
cmp
arpl
add
cs
in
das
xchg
ucomiss
dec
sarb
and
lock
fcmovnb
pop
sub
mov
lahf
fwait
leave
pop
and
mov
mov
mov
mov
adc
add
addr16
gs
insb
scas
mov
pop
imul
pop
outsl
nop
iret
popf
cmpsb
xchg
xchg
mov
cmpsl
and
stos
xor
repz
fnstsw
test
mov
and
dec
add
mov
cmp
mov
push
shrb
mov
mov
outsb
inc
pop
and
call
push
arpl
ss
or
adc
std
and
push
fwait
or
xor
lahf
jmp
or
xchg
dec
nop
mov
jg
cmp
and
mov
mov
sbb
out
jne
movsl
clc
dec
dec
stos
xchg
lret
fucomip
pushf
int
loopne
nop
push
loop
mov
mov
and
jmp
outsl
jge
and
pusha
mov
add
leave
mov
lret
jg
sub
fstpt
jbe
rcl
adc
mov
or
mov
sbb
dec
mov
sub
imull
ja
aaa
scas
popa
mov
popf
scas
icebp
push
clc
cmp
movsb
push
or
adc
sub
les
and
rcr
push
gs
pushf
aas
or
xor
jb
dec
xor
pop
dec
xchg
lahf
pop
mov
jae
mov
cmp
cmc
mov
rcrb
pop
add
adc
lret
in
pop
out
mov
cs
cmp
sub
cwtl
mov
rcrl
icebp
cs
mov
sub
xchg
xor
jl
outsl
push
and
fsub
loopne
inc
pop
add
fstp
gs
loopne
push
loopne
cltd
fbstp
push
mov
adc
iret
mov
pop
push
int3
or
push
pop
mov
cmp
sub
and
add
mov
mov
add
stos
push
pop
mov
mov
or
inc
iret
imull
fs
rolb
test
sbb
dec
loope
mov
out
dec
popa
sub
fcmovnb
hlt
mov
cltd
arpl
push
lret
push
push
cmp
sbb
movsb
ret
sub
cld
shlb
xchg
push
das
add
or
mov
push
and
scas
sub
mov
dec
fidivrs
sub
popf
mov
popa
lcall
hlt
lcall
xchg
test
cs
push
inc
pop
push
jae
mov
ret
xor
push
shlb
sahf
sub
jmp
fisubrl
enter
and
std
daa
out
add
mov
sub
decl
sar
rorl
or
orb
lock
xchg
sub
outsb
jns
push
jne
cmpsl
das
pop
sbb
fs
sub
dec
or
cmpsl
adc
jo
add
clc
sbb
push
or
mov
lret
xchg
jle
std
xchg
push
and
xchg
mov
or
mov
addr16
dec
hlt
xor
nop
fildll
xor
push
hlt
sarl
sub
dec
lods
imul
jp
stos
sbb
ja
divb
cmp
and
rolb
jmp
push
in
sbb
cli
sub
pop
pop
mov
into
mov
out
ljmp
loop
ja
ret
filds
in
sti
shll
or
enter
lods
jae
loope
fidivl
mov
in
fnstcw
or
mov
sbbl
mov
lea
fwait
sahf
fs
xor
lods
rcrb
jg
inc
cmp
jl
xchg
cmpsb
cs
xchg
inc
out
jecxz
fwait
mov
pop
mov
pop
add
mov
push
jge
pop
shrb
push
push
test
rcrl
cmovge
mov
pop
mov
test
ret
pusha
adc
cmp
loopne
mov
jo
mov
cmpsb
fisttps
cmpsl
fisubs
sarb
or
mov
push
or
cmp
push
sbb
push
mov
dec
xor
cltd
std
sbb
jg
sub
ljmp
adc
pop
jge
sbb
lcall
lock
adc
dec
int3
into
in
shrb
test
or
adc
idivb
mov
mov
int
nop
push
ret
xchg
xor
aam
inc
sbb
mov
or
xor
xor
iret
clc
imull
in
andnps
js
into
cmp
mov
mov
fisubl
aaa
bnd
mov
in
imul
mov
outsl
push
mov
in
xchg
fcmovne
push
loopw
or
or
add
mov
subl
mov
negl
add
mov
xchg
movsl
xchg
jl
jg
mov
mov
xchg
mov
xchg
push
xlat
int
add
ljmp
shll
push
sub
inc
mov
inc
cmc
lret
jae
movsb
or
hlt
repz
mov
sbb
push
cmp
or
mov
lea
dec
and
xchg
pop
xor
ret
and
pop
jg
or
sub
les
das
sub
sub
sub
mov
in
arpl
repz
fisubrs
loope
loop
imul
icebp
out
and
in
sbb
aad
adc
hlt
scas
pop
cmpsb
lret
pop
in
jb
fistpl
std
div
sub
fsubl
mov
jg
push
cli
mov
push
sub
mov
shlb
fidivrl
loopne
pop
pop
pop
cmp
mov
mov
or
push
ja
dec
jns
imul
adc
jb
jp
dec
lcall
cmp
cmpsb
lret
mov
je
jecxz
loop
orl
adc
mov
pusha
push
cmpsb
cmc
rorl
add
cmp
cmp
xor
pusha
sti
xchg
lret
cltd
outsb
test
inc
loop,pn
xlat
xchg
push
addb
repz
cld
scas
out
fnstenv
dec
inc
add
pop
fisttps
je
mov
loop
sbb
int
cwtl
iret
lods
ja
mov
aas
int
fistps
js
daa
push
xor
je
fs
jbe
cmp
sbb
shl
cmc
mov
adc
out
cld
adc
rolb
pop
popa
in
js
movsl
push
inc
scas
out
xorb
and
popf
lcall
in
mov
xor
xor
fs
sbb
mov
sub
adc
lcall
inc
test
cmpsb
loope
pop
cmp
mov
jp
int
xchg
inc
push
dec
das
mov
popa
testb
stc
mov
loopne
adc
fsubrs
lds
aad
scas
mov
icebp
rolb
pop
lret
lods
aad
int
mov
push
sub
inc
repz
mov
cld
sbb
popf
hlt
sub
std
mov
loope
and
leave
stos
inc
add
xchg
cmp
or
scas
add
cld
fs
cmp
mul
fisubl
or
xchg
push
push
mov
pop
xchg
mov
mov
cld
add
dec
fwait
xchg
ret
or
sbb
dec
sahf
dec
out
cltd
adc
adc
fildl
mov
mov
insb
cs
mov
xchg
mov
lods
pop
stos
idiv
rol
push
addl
xchg
gs
pop
inc
sbbb
dec
ret
dec
cli
inc
call
dec
pop
lods
add
aad
inc
mulb
neg
or
sub
xchg
loopne
sbb
aas
cmc
jecxz
inc
sub
ljmp
fcomi
movsl
cmp
jns
incb
das
shr
xchg
lcall
cli
shlb
arpl
lret
dec
or
test
or
lock
xchg
rcl
pop
ja
lret
and
aad
icebp
test
mov
push
loope
das
call
sbb
adc
mov
xor
fimuls
adc
shlb
xor
jne
jle
ret
ds
or
pop
icebp
sub
lcall
jns
sbb
pop
pop
nop
add
inc
adc
jge
pop
daa
pop
add
cwtl
out
pop
ja
dec
xchg
cmp
bound
xchg
leave
push
ret
push
add
daa
aaa
jnp
adc
dec
pop
mov
sbb
cmp
inc
lahf
aad
out
fcmovnu
mov
cs
outsl
fisttpll
sbb
fsubs
cmpsl
add
cli
and
fwait
xor
lret
sbb
idivl
xor
in
test
dec
daa
xchg
faddl
aaa
in
ds
es
xor
adc
out
mov
hlt
sbb
and
adc
push
mov
adc
mov
aad
or
and
fsincos
popa
or
push
cmp
std
into
mov
mov
gs
scas
mov
loop
mov
hlt
sbb
cmp
lret
adc
shrb
and
or
and
sub
inc
loopne
cltd
out
inc
cmp
push
mov
jle
push
dec
mov
or
cmp
inc
pop
cs
push
push
adc
mov
jecxz
hlt
mov
xor
mov
cltd
and
add
frstor
loopne
jbe
push
aad
and
pushf
xchg
inc
add
and
xlat
and
ret
mov
and
jo
xlat
cmp
mov
ljmp
xchg
inc
cmp
xor
xchg
jnp
add
leave
jge
cmc
ret
frstor
add
dec
jmp
out
fdiv
outsb
or
jmp
cmova
pop
xor
mov
or
and
add
stos
pop
mov
lcall
add
mov
leave
mov
in
fistl
fildl
adc
mov
jnp
into
jbe
cmp
jp
and
movb
insb
aam
jae
and
fs
mov
add
sbb
mov
int3
pop
out
gs
push
test
adc
imul
and
jbe
scas
test
or
or
push
mov
loop
fcoms
cmp
sbb
dec
or
bnd
mov
cmc
or
and
ss
rcr
xchg
shlb
and
ror
cld
sbb
cld
rcr
pop
jge
shl
std
das
movsl
xor
mov
and
js
data16
dec
jl,pn
iret
dec
mov
mov
mov
movsl
mov
nop
xor
cmp
jecxz
aas
sbb
mov
push
xor
inc
enter
lret
pusha
imul
lahf
scas
enter
stos
sub
mov
xorb
ds
scas
pop
or
int
jno
jb
jnp
cld
jbe
jnp
sub
rorb
sbb
sbb
hlt
pop
cmp
imul
repz
xor
cmp
fisubs
push
dec
jno
outsl
out
mov
cs
jno
scas
mov
push
add
sarl
mov
cmpsl
mov
cs
pop
sbb
out
das
and
pop
pop
fnstcw
int
sbb
jns
add
inc
aad
mov
fsubr
jae
mov
rcr
cmp
cmc
lds
sub
rcr
bound
cs
xor
inc
dec
aad
faddl
out
adc
int
gs
insl
xor
mov
adcl
into
and
mov
mov
push
jl
addr16
stos
push
aam
repz
into
dec
out
cmpsb
popa
aaa
nop
cmc
push
push
movsb
icebp
pop
outsl
sub
ja
cmpsb
cmpb
jb
inc
add
out
cmp
data16
or
dec
addr16
cmp
mull
icebp
jmp
add
paddw
mov
stc
ljmp
adc
daa
inc
and
adc
leave
xchg
ret
scas
xor
sub
inc
and
sub
call
cmp
mov
pop
mov
sbb
mov
xchg
pop
mov
mov
dec
in
adc
mov
sti
lods
addr16
sahf
dec
mov
sbb
adc
ljmp
push
xlat
jne
dec
add
fcomps
inc
sub
push
jl
cld
or
xchg
mov
test
sar
aad
lret
xchg
ret
add
xchg
sbb
js
gs
test
cmpsl
test
jmp
movsb
fisubs
sub
test
ret
clc
mov
sarl
pop
adc
jge
rorl
cmp
insb
push
in
mov
push
nop
pusha
dec
xlat
shl
xlat
dec
pop
imul
xchg
xchg
adc
xchg
adc
in
dec
mov
sbb
les
mov
cli
inc
xor
stos
or
xor
push
xchg
insb
js
or
xorl
pop
cmp
fwait
jb
push
jae
js
mov
pop
cli
sti
sub
sbb
add
add
imul
mov
int3
adc
xchg
lods
ret
rcl
into
daa
out
sahf
je
push
xor
and
adc
outsl
icebp
pushf
pop
fwait
lods
dec
jge
aaa
sbb
lret
fisubl
andb
fdivrs
in
popf
xor
xchg
pop
lret
mov
mov
cmp
add
cwtl
aam
clc
mov
stos
push
mov
mov
jmp
je
scas
jno
push
pop
iret
mov
fwait
push
pushf
pushf
pusha
jg
mov
jge
lcall
ret
pop
ja
fstpt
mov
mov
sbb
mov
push
stos
shrb
ret
sub
ljmp
push
cs
push
or
hlt
ja
pushf
dec
push
dec
sub
pop
mov
adc
mov
xchg
repnz
push
mov
adc
add
cmp
jb
pop
sbb
in
rorl
call
sahf
mov
cltd
xlat
in
in
dec
or
lds
in
sub
inc
push
int3
dec
add
js
cmpsb
mov
fmull
lret
sub
iret
cli
divb
xlat
bound
sbb
inc
into
sbb
movsb
jbe
mov
aaa
cmp
movsb
popf
or
shrb
negb
xchg
jbe
cmp
daa
fidivs
jg
data16
jae
insl
and
mov
pop
je
mov
add
pop
pop
inc
cmp
insb
mov
in
mov
mov
mov
popf
xor
push
lea
push
mov
jmp
les
inc
adc
adc
xchg
fmull
fstl
andb
add
adc
mov
jle
aaa
jmp
enter
sub
icebp
push
or
pop
mov
out
inc
lods
test
xor
lret
adc
psllw
ds
clc
clc
dec
or
mov
mov
adc
mov
add
int3
or
inc
aas
out
xlat
push
add
dec
mov
inc
jl
ja
aas
bound
mov
outsb
xchg
push
pop
push
test
adc
jne
and
xchg
mov
xchg
lea
xchg
mov
mov
inc
mov
inc
popf
xchg
clc
arpl
gs
outsl
iret
ss
gs
cmpl
dec
test
ja
and
adc
test
arpl
bound
loope
dec
mov
pop
or
call
sahf
ficoms
dec
rcr
fidivs
pushf
add
add
mov
xor
jge
inc
sbb
sub
sub
out
lock
popa
or
fstl
inc
sbb
xchg
mov
adc
mov
ret
pushf
or
pop
cmp
xchg
sbb
inc
xchg
or
outsb
imull
movsl
sub
mov
pop
and
jbe
mov
movsl
push
divb
add
and
popf
mov
ret
jg
sahf
lock
mov
cmc
mov
mov
jp
fwait
or
fnsave
movsl
mov
cmp
adc
mov
cmp
adc
repnz
aas
std
xchg
adc
mov
mov
add
movsl
cmp
pop
lcall
insl
xchg
aam
sbb
add
push
nop
lret
clc
add
stos
mov
inc
pop
ret
out
push
int
push
popa
mov
xor
gs
jmp
inc
mov
std
sbb
cmp
inc
mov
repz
jmp
sbb
xor
out
mov
sub
loopne
sbb
xor
pop
or
in
jnp
xchg
push
gs
out
or
out
clc
jae
add
stos
push
leave
sbb
xchg
int
mov
ljmp
loope
push
mov
dec
out
mov
nop
test
and
push
jge
push
xor
scas
data16
into
dec
mov
xlat
inc
and
cwtl
movb
mov
subl
mov
or
pusha
sub
push
rcrl
jns
mov
adc
or
mov
cs
mov
xchg
scas
gs
andb
imul
dec
sub
aad
in
imul
mov
jmp
sbb
cmp
loope
cs
mov
arpl
mov
imul
repz
mov
jnp
inc
and
in
adc
jmp
pushf
in
xchg
mov
mov
mov
cmp
jne
mov
mov
push
popa
jns
xor
sahf
sti
out
mov
fcmovnbe
scas
jecxz
and
adcl
jbe
cmc
add
ret
or
push
fnstcw
jle
insl
sbb
test
fiadds
inc
mov
bound
mov
mov
sahf
jge,pn
nop
popl
lea
out
mov
iret
int
and
jge
lahf
jmp
shll
repnz
sbbb
push
popa
ret
ja
push
dec
sub
adc
mov
sub
xchg
unpckhps
sub
filds
xchg
cmp
test
inc
ljmp
mov
lcall
mov
xor
mov
test
mov
xchg
dec
sub
jecxz
dec
add
sub
sub
push
and
test
push
je
in
sbb
jecxz
lahf
push
fldenv
xor
cmp
jae
in
inc
outsb
popf
dec
pop
sub
test
mov
inc
mov
cwtl
mov
insb
icebp
fimuls
pop
stos
int3
cwtl
fbld
mov
aad
ds
cmpsl
push
add
imul
mov
inc
jp
call
movsb
push
mov
xchg
insb
mov
mov
jae
nop
in
call
jne
mov
pusha
clc
cmp
mov
inc
shll
popa
sbb
in
mov
out
push
xchg
sbb
inc
scas
mov
orl
sbb
je
fcoml
ja
cwtl
bound
sbb
loop
sbb
stos
inc
lods
pop
cmp
pop
cmp
aas
cli
inc
sub
inc
mov
and
insb
outsl
xor
scas
cmp
cld
add
arpl
shrl
xchg
into
and
imul
add
add
lods
std
scas
adc
mov
das
clc
mov
fucomi
push
jmp
mov
mov
jns
push
mov
enter
pop
aam
rorl
movsb
jle
in
movsl
cmp
scas
xor
or
and
adc
xor
add
imul
mov
sarl
mov
sbb
es
dec
mov
mov
rol
xchg
int
or
rcr
pop
mov
ss
sbb
bound
inc
adcl
pop
xchg
mov
xorb
pop
and
mov
repz
push
jae
data16
sub
jecxz
sbb
jmp
shrl
or
repz
inc
cmpsb
scas
sub
jmp
xor
test
aaa
fs
lock
in
sti
adc
push
out
cld
sub
aaa
sub
mov
mov
int3
xchg
mov
negl
test
repnz
jle
inc
dec
outsb
and
dec
imul
or
out
mov
cmp
dec
stos
push
mov
movsb
enter
movsl
das
cs
enter
lret
mov
sbb
cltd
mov
aam
lods
fisubl
and
mov
mov
testb
inc
sub
mov
cmp
jbe
jo
cmp
add
pop
adc
and
in
jle
fisttpll
mov
mov
cld
sahf
mov
or
dec
lahf
mov
xorl
dec
nop
arpl
inc
popf
stc
add
iret
cmp
inc
std
scas
les
in
ret
add
sbb
fnstcw
adc
les
push
fucomip
loope
test
jecxz
imul
push
loope
sub
rol
ds
cmc
pop
fs
push
push
and
ret
stc
cmc
add
xor
ret
sbbl
sbb
popf
aas
push
aas
cltd
test
shrl
push
repnz
out
xchg
lea
negb
in
xor
cltd
in
mov
test
jb
push
pop
jp
arpl
int
das
push
push
inc
inc
add
xchg
or
vunpckhps
pop
fs
xor
insb
sub
jns
fldl
cmpsb
adc
out
push
test
mov
loopne
xchg
adc
cmp
cmp
imulb
xchg
test
cmp
add
dec
idiv
cli
sahf
cmp
cmp
pop
cld
loopne
fmuls
in
cmp
mov
cmp
hlt
or
fs
and
das
inc
xchg
jne
mov
jge
inc
scas
push
std
pop
pop
jl
mov
movsl
adc
inc
cmp
adc
divl
in
and
push
cli
fs
cmpsl
je
fs
pop
insb
dec
ret
jp
adc
into
push
out
outsl
xchg
rcll
shl
in
test
adc
js
pop
sbb
mov
mov
mov
and
jae
scas
scas
sub
mov
push
mov
test
sahf
fwait
addb
pushf
inc
dec
dec
test
mov
push
orb
jo
sbb
mov
outsb
jge
test
mov
mov
mov
xor
lcall
mov
into
pop
fst
fs
pop
into
mov
and
xchg
ror
inc
sub
cmpl
inc
xchg
mov
test
ret
int
sub
cmp
sub
sar
rclb
mov
aaa
enter
mov
fs
daa
ljmp
push
jmp
ss
mov
dec
xchg
inc
in
in
dec
add
mov
inc
add
xchg
xchg
cmc
pop
fisttpl
xchg
lods
xchg
mov
pop
lahf
shl
push
push
inc
or
jae
or
lret
xchg
leave
filds
mov
sub
cmp
insb
mov
xchg
jns
stc
arpl
pop
enter
cmpsl
mov
and
fs
xor
inc
mov
push
imul
test
testb
dec
and
cmpsb
pop
mov
test
iret
shl
sub
lock
pop
jbe
out
mov
imul
lds
imul
pop
sbb
sbbl
jg
lds
add
mov
stos
int
pop
imul
push
inc
repz
inc
adc
jmp
inc
cmc
jo
cs
iret
popa
cmc
mov
into
or
cld
inc
add
cld
enter
jp
add
jo
jns,pt
hlt
leave
frstor
jmp
shl
inc
jmp
shlb
and
adc
movsl
mov
xchg
neg
jnp
xlat
add
test
jno,pt
xchg
pop
mov
sahf
iret
pushf
lret
mov
aas
mov
mov
xor
in
iret
pop
and
jno
inc
repnz
push
pop
mov
mov
pop
orl
pop
ficomps
and
and
ret
mov
push
call
sbb
cmc
cwtl
push
cltd
push
adc
ljmp
jl
sub
adc
inc
pop
cmpsl
xor
xorl
and
pop
xor
shll
cmpsb
fs
jno
xchg
or
or
loope
aad
hlt
ja
pop
ret
hlt
mov
fs
inc
not
mov
hlt
dec
push
dec
mov
iret
cmp
insb
mov
inc
test
or
fiaddl
jl
xlat
bound
sarb
ja
testb
idivl
pop
outsl
sbb
faddl
sub
pop
jns
mov
loop
mov
cmpl
lods
mov
idivb
inc
popf
xchg
outsl
xor
les
dec
imul
push
mov
ja
jg
out
and
fists
add
jecxz
jo
push
push
vprotw
pavgw
popa
je
mov
fidivrs
sbb
mov
sarl
test
int
loope
mov
dec
lahf
pop
xchg
pushf
mov
leave
cmp
push
faddl
iret
ret
outsl
adc
das
sti
cmpsl
cmc
movsb
push
imul
pop
pop
jae
mov
push
xchg
notb
adc
push
inc
stc
jbe
add
cli
push
adc
push
jle
hlt
inc
xor
aam
lock
pop
imul
or
and
mov
add
jne
lock
push
dec
jae
pop
in
fs
mov
scas
pop
sub
subl
inc
jg
jno
jnp
stos
scas
gs
adc
inc
mov
lahf
xchg
mov
inc
cwtl
int3
mov
lea
lahf
push
lock
jnp
imul
adc
outsb
shr
xchg
loop
push
dec
in
fwait
xchg
jo
fmuls
lahf
out
sbbb
movsl
cmpsb
lret
pop
sbb
stos
movsb
xchg
sbb
dec
push
sbb
scas
push
pop
mov
xchg
jle
dec
dec
xchg
pushf
push
je
inc
and
jo
mov
push
adc
fisubs
push
sub
or
loopne
mov
mov
mov
jmp
cmp
rcrb
xchg
mov
dec
xor
jns
pop
jmp
inc
mov
repnz
cmpsb
fwait
mov
js
dec
pop
pop
fstl
popa
mov
add
adc
sub
in
mov
add
dec
add
leave
sub
xchg
adcb
sub
ss
fiaddl
pop
addr16
sbb
cmp
mov
inc
addl
sbb
mov
or
das
out
clc
ds
pop
mov
sub
jno
inc
xor
in
out
adc
icebp
add
adc
jne
out
cmp
scas
pop
jns
in
pop
xchg
ljmp
scas
and
mov
lods
push
mov
add
ret
jge
xor
scas
into
sub
sti
add
xchg
ljmp
out
scas
mov
in
and
insb
add
dec
xchg
icebp
mov
push
lods
cmp
fidivl
lcall
int3
andl
push
xchg
inc
cltd
test
out
mov
and
fldcw
sbbb
cwtl
jo
xlat
adc
lock
add
xor
push
fcmovu
das
sahf
add
into
fwait
pop
xor
popf
outsl
je
rcll
sti
mov
iret
inc
sahf
lahf
stc
jae
mov
shlb
je
mov
add
incl
jns
dec
cmpsb
jae
sti
dec
add
jne
lock
lods
and
mov
dec
dec
push
rorl
rcrl
cs
pop
fisubrs
imul
mov
mov
in
xchg
xchg
or
addr16
pop
lret
push
enter
xor
bound
lock
mov
lret
pusha
push
orb
rep
decb
sbb
inc
movsb
clc
cmp
in
push
outsl
push
adc
fbstp
sbb
fimuls
inc
outsb
mov
ljmp
sbb
jnp
repnz
pusha
cs
pop
dec
cld
repnz
mov
adc
test
int3
shll
scas
test
stos
aas
ja
aam
xchg
shr
in
movsl
add
sarl
mov
pop
xchg
adc
dec
inc
lods
lods
shlb
push
push
inc
fcoms
outsl
call
xor
andl
lcall
cmpsl
nop
pusha
pop
inc
xlat
cmc
jp
xor
xor
cwtl
adc
mov
inc
repnz
aam
push
stos
jns
inc
pop
mov
cli
les
adc
adc
push
or
pop
int
inc
push
std
mov
adc
lock
xlat
push
jge
pop
or
mov
pop
add
nop
es
pop
push
int3
in
dec
xor
dec
push
xchg
inc
push
pop
jne
out
lret
popa
sbb
out
leave
scas
das
sbb
ror
fisubl
shrb
int3
xchg
rorl
sub
add
sbb
enter
inc
and
add
and
movsb
andb
test
sbb
xor
or
lock
dec
les
mov
xchg
and
adc
mov
jg
dec
test
pusha
lret
add
in
push
mov
inc
cli
mov
cli
mov
cld
sbb
inc
pop
pop
imul
test
sbb
cmpsb
mov
shrl
into
add
sbb
mov
stc
and
setno
das
cmp
scas
ljmp
and
pop
dec
aas
push
sbb
jo
addr16
xchg
mov
into
xchg
sub
add
mov
pop
pop
std
stos
sub
inc
popa
nop
test
sub
and
sti
jnp
aam
neg
cmp
mov
gs
sub
cltd
xlat
cli
xor
data16
dec
jo
aas
fcompl
mov
cmp
mov
adc
pop
mov
sahf
out
push
mov
dec
mov
icebp
insb
into
cmp
jp
dec
xor
sbb
adc
lcall
leave
pop
nop
mov
add
jp,pt
cmp
dec
sub
das
sub
jl
out
dec
sub
xor
aas
dec
inc
lods
lods
and
pop
aad
xor
adc
aas
xor
push
bnd
std
cld
pop
jae
test
sub
pop
lods
fldenv
loope
stos
pop
gs
aam
lods
insb
data16
cltd
push
in
dec
push
daa
sahf
or
mov
adc
sub
aaa
pop
shrl
mov
mov
lock
ret
adc
cwtl
push
scas
pop
xor
es
inc
js
sbb
daa
dec
shrl
sbb
inc
xor
push
push
scas
arpl
imul
call
stos
jns
out
stos
outsl
mov
shl
fistpl
and
mov
lea
pop
filds
and
jg
mov
fcmovnbe
inc
or
or
sbb
ret
clc
movb
inc
addr16
sbbl
lods
shll
or
loope
nop
int
cmp
popf
mov
cmpsl
mov
pop
mov
stc
clc
dec
mov
popf
push
adc
xchg
dec
orb
sub
ljmp
jns
loop
pop
push
sahf
adc
test
popf
adc
dec
sbb
gs
je
cmpsl
xor
sub
inc
jecxz
sbb
pop
ds
sarl
jmp
mov
lret
arpl
sbbl
sbb
sbb
jmp
out
test
add
rcrb
adc
dec
push
ss
xchg
fdivs
mov
or
stc
faddl
or
push
adc
mov
inc
xchg
push
movsl
sbb
mov
dec
fidivs
fs
js
inc
test
jge
xchg
xor
scas
stos
jg
sbb
cmp
xchg
fimuls
and
sahf
mov
mov
jb
adc
jae
stc
and
incl
inc
fstpl
cmp
fwait
lds
jmp
scas
jge
movsb
push
out
or
pop
ds
or
cmp
xchg
adc
lea
cmp
pop
call
and
test
sbb
mov
mov
shl
loope
jbe
out
and
daa
loop
leave
jns
repz
adc
add
ss
mov
mov
sub
shlb
inc
add
inc
and
adc
sahf
je
stc
mov
js
lret
xchg
shll
jb
xor
mov
mov
mov
aas
push
js
fwait
mov
push
sbb
push
and
lahf
test
scas
mov
out
test
inc
inc
test
mov
sbb
mov
jmp
inc
fwait
sbb
or
ret
fcmovbe
lret
sbb
jle
rcrl
ret
dec
imul
xor
xor
jbe
inc
lods
xchg
sbb
xchg
xchg
lret
or
xchg
mov
xor
and
add
es
test
mov
dec
xchg
jl
inc
sub
push
sub
stos
rcll
xchg
fwait
stc
cli
push
jecxz
iret
pop
lret
cmp
push
sub
lods
sub
dec
cmp
push
mov
loopne
sbb
cmpsl
outsl
cmc
ret
cmp
and
mov
rcrl
std
xor
jle
in
addl
pop
cwtl
pop
push
cmp
pop
push
pop
dec
or
fiadds
mov
inc
lret
pop
in
xlat
pop
xchg
gs
rcll
sahf
in
add
bound
insl
je
clc
pop
cld
xlat
sub
add
jb
xchg
cmpsb
adc
xchg
cmp
jnp
or
xor
xor
call
mov
adc
or
mov
bound
and
cli
and
jo
out
dec
or
inc
imul
mov
push
clc
mov
xchg
fstl
les
mov
push
inc
inc
bound
mov
into
inc
scas
pop
sbb
out
pop
in
sti
imull
push
outsl
add
ret
cltd
cmc
shl
fnstcw
ret
mov
test
push
outsl
and
add
xor
movsl
push
ss
cmp
dec
lret
pop
enter
and
lcall
push
jo
cwtl
adc
es
adc
dec
inc
jno
sbb
mov
ret
aam
roll
push
jb
scas
pop
insl
in
mov
les
cmp
sub
push
jnp
lret
inc
inc
stc
movsb
test
int3
icebp
dec
cld
std
rol
xor
sub
pop
notl
inc
inc
idiv
sbb
pusha
sub
sti
mov
mov
push
and
and
or
in
sub
push
nop
lds
lock
adc
notl
dec
call
mov
lcall
jno
xor
insb
mov
mov
mov
dec
int
fsubl
shrl
add
cmp
pop
mov
add
les
in
xor
xor
mov
lock
and
fcmovu
sub
sbb
jae
scas
in
mulb
loopne
int3
mov
fcmovb
dec
idiv
mov
ficoml
dec
lods
sarb
push
jecxz
jbe
xchg
cld
jge
ja
inc
lcall
jno
iret
mov
inc
mov
inc
out
pop
mov
adc
into
hlt
fwait
outsb
out
out
int
push
dec
popf
in
sub
jle
mov
sbb
xchg
aad
in
insb
mov
cld
stos
adc
dec
xchg
jb
sub
sub
xor
lret
push
jae
stc
cmp
es
daa
imul
cwtl
jnp,pt
cmpsl
adc
pop
imul
sbb
inc
cli
jge
fmulp
int3
add
adc
push
mov
data16
mov
pop
fbstp
sub
add
xor
in
fdivr
cmc
pop
mov
mov
push
jnp
imul
imul
lcall
cmp
rcrl
jmp
into
dec
in
dec
pop
repz
adc
fcmovu
sbb
xor
in
imul
cs
pop
test
fwait
push
out
cmpsb
xorb
xlat
inc
xchg
es
or
add
inc
cli
and
cs
mov
xchg
mov
ja
dec
pop
scas
cmp
jmp
mov
cmp
fwait
lds
mov
mov
jae
mov
cmc
adc
adc
xor
and
repnz
cmc
pop
pop
mov
add
cmpsb
ret
leave
in
cmp
lahf
popa
pop
lds
pop
inc
mov
and
aaa
cltd
lea
out
jno
jmp
xchg
inc
jge
jle
loopne
sub
adc
rclb
scas
aam
and
test
xchg
or
sbb
dec
cltd
adc
xor
push
imul
je
pop
sub
xchg
pop
pusha
sti
test
int
lods
push
add
mov
and
in
jecxz
inc
and
jbe
gs
sarl
dec
mov
out
lret
xor
gs
stc
push
jle
jle
ret
dec
mov
pop
aas
mov
mov
mov
xlat
push
cmp
mov
xor
pop
xchg
addr16
loope
out
xor
dec
movsb
mov
fs
test
or
mov
mov
cmpsb
inc
sbb
pusha
notl
pusha
rcr
imul
daa
shl
xchg
loopne
jmp
sbbl
mov
enter
aad
and
dec
ljmp
loope
mov
push
fwait
loopne
in
mov
lret
fistpl
or
test
repnz
cmp
mov
or
idivl
shl
lock
and
xchg
pop
push
push
lods
pushf
mov
mov
iret
dec
push
out
fidivrs
addl
call
add
pop
lret
lea
ljmp
jbe
in
cmp
ljmp
insb
mov
pop
sbb
add
push
xchg
inc
roll
push
adc
mov
orb
lds
or
mov
mov
mov
jne
mov
jecxz
fistl
mov
in
hlt
testl
jp
add
inc
adc
jb
outsb
push
aas
inc
jp
sub
inc
jmp
jnp
mov
xchg
push
cltd
xchg
dec
rorb
dec
push
cs
lods
scas
cld
jbe
mov
orl
clc
mov
mov
dec
aam
adc
imul
stc
nop
fcmovnb
mov
addl
jmp
add
adc
fs
fwait
pop
sub
pop
inc
sbb
loope
ss
xchg
popf
dec
jae
ret
dec
cltd
fwait
sub
sub
js
xorb
dec
mov
dec
imul
pop
pop
xchg
mull
push
fcmovnbe
arpl
xchg
btr
fdivl
fcmovu
mov
dec
lret
pusha
and
sub
je
sub
nop
mov
xchg
or
lea
cs
es
divb
imul
add
lret
or
mov
dec
mov
push
jp
mov
mov
int
repz
inc
mov
pop
mov
into
ja
and
pcmpeqb
mov
loope
or
jmp
loopnew
lret
inc
sahf
push
arpl
and
cwtl
inc
add
push
adc
cltd
push
leave
dec
dec
sbb
int
push
std
imul
jmp
adc
stos
fadd
fiadds
stc
test
ret
dec
jb
push
fucomip
xchg
mov
test
push
xor
mov
and
shl
xor
cmp
sahf
pop
xor
icebp
push
fdivrs
ret
jle
cmpsl
fs
or
mov
mov
mov
ja
add
add
adcb
test
pop
inc
hlt
outsb
xorl
in
rcrb
mov
pushf
paddusb
ds
inc
xchg
xchg
mov
mov
push
add
mov
in
imul
jg
xchg
sarl
aas
ja
push
xchg
cmp
pop
adc
pop
mov
test
sbb
xchg
pop
push
cmp
cmpsb
push
dec
mov
xchg
ja
addr16
fs
loope
xchg
jl
jno
add
sbb
das
inc
sub
mov
ja
mov
inc
arpl
mov
ret
adc
sub
outsb
out
cwtl
fsub
fidivrs
fisubrs
js
pop
outsl
xchg
out
ret
inc
fmull
jne
push
xchg
mov
mov
or
and
push
jge
jle
fs
pop
pop
pushl
lcall
sub
ret
sub
add
sub
adc
xchg
int3
mov
and
in
insb
std
mov
enter
inc
sti
mov
sub
jnp
or
adc
lret
and
xor
jg
lret
movsl
scas
iret
sub
clc
xor
inc
jo
ss
mov
out
mov
std
adc
sbb
adc
sub
in
bound
mov
xlat
cmp
loop
int
cmpsb
push
jmp
addr16
mov
adc
cmp
push
outsl
inc
ret
sub
repnz
mov
sub
popa
ja
mov
adc
dec
inc
pop
adc
or
sub
test
lock
xlat
fwait
cmpsb
or
and
sti
xchg
push
popf
or
xchg
mov
lods
pop
xchg
mov
xor
pop
jnp
cmc
push
fwait
or
es
xchg
xor
pop
or
add
hlt
push
mov
mov
jns
or
mov
adc
sub
add
aas
rcl
mov
movsl
test
and
lahf
mov
jno
jl
and
sub
fwait
cmpsb
pop
push
mov
adc
imul
mov
test
xchg
lcall
jnp
pop
cmpsb
out
pop
cmp
push
mov
mov
cmpsb
mov
xlat
sub
ror
in
test
inc
xchg
inc
cmc
icebp
pushf
fcoms
das
mov
adc
imul
loop
aam
xorb
add
mov
push
movsb
incl
lcall
xchg
sbbb
and
mov
adcb
mov
sbb
adc
jle
std
mov
inc
xor
jp
mov
scas
ret
sti
cmp
enter
xchg
and
adc
sar
sbb
cmp
pop
neg
xchg
lods
scas
popf
adc
xor
pop
cltd
aas
adc
mov
push
sbb
add
jbe
mov
cmpsl
jnp
loope
mov
inc
testb
sahf
lods
xchg
sbb
mov
mov
cmpsb
insl
lahf
popf
ficomps
dec
int
sub
push
or
pop
fimull
sub
repnz
push
dec
adc
dec
push
and
inc
test
dec
mov
std
scas
cltd
add
repnz
pushf
mov
clc
add
dec
fcompl
ret
fucomip
xor
mov
call
xor
xor
inc
push
or
les
xchg
cmpsb
pop
adc
xchg
ds
subb
jge
movsb
loopne
mov
shrb
sub
sbb
mov
jmp
jmp
dec
cltd
push
int3
out
inc
dec
lods
imul
adc
jns
cli
stos
mov
loope
xchg
inc
shrb
add
popa
push
pop
jo
aaa
jns
popf
iret
xchg
nop
dec
les
insb
dec
jo,pn
jp
sbb
cmp
mov
xor
dec
popl
xorb
xor
mov
cmp
cmpsl
mov
or
add
imul
movsb
cs
cli
or
dec
add
nop
dec
out
daa
out
lea
outsb
pop
inc
out
call
and
dec
fldenv
setp
fcomi
push
loopne
jle
mov
popf
cltd
and
into
outsb
dec
push
sub
mov
ficoml
push
pushf
lods
xchg
jno
sub
int
sbbl
mov
stc
jle
fs
pop
nop
iret
lahf
sbb
mov
inc
addb
sbb
bound
xor
push
lahf
jmp
es
cmpsb
pop
stos
cli
sbb
ja
inc
scas
push
mov
push
aas
xlat
fsubrl
and
sti
and
ret
xchg
ret
jae
mov
inc
xor
pop
or
add
push
test
dec
jge
mov
mov
push
into
cmp
sub
lea
adc
add
cmp
enter
push
sub
andb
les
pusha
sqrtps
dec
fwait
xchg
jo
ret
dec
das
cmpsl
or
ss
pushf
mov
sub
lds
push
out
sbb
mov
cmpsb
jmp
sbb
in
in
in
lret
inc
inc
mov
cmpsb
jge
outsl
or
xchg
add
cmpl
pcmpeqw
mov
jp
mov
test
popa
aad
mov
imul
jo
jl
in
inc
mov
jge
mov
in
mov
movl
jecxz
in
cmpsb
mov
mov
leave
mov
shlb
mov
lahf
insb
shr
mov
cli
cltd
cs
mov
push
divl
movsl
dec
mov
xor
pusha
dec
push
and
sbb
out
cmpsl
mov
fmull
sahf
cmp
pop
jae
flds
aas
subb
in
jb
fmull
jns
push
daa
push
or
sbb
jbe
popf
xor
pop
sub
jns
dec
gs
ljmp
xchg
push
dec
dec
mov
rorb
pop
sbb
cmpsb
xor
mov
add
sub
mov
pavgusb
adc
je
dec
aam
test
push
fwait
mov
mov
out
inc
cmp
mov
in
fwait
ljmp
mov
sar
mov
insb
mov
xor
jmp
xchg
sub
mov
aas
cmc
jge
rcrl
mov
cmc
inc
aas
clc
in
inc
pushf
dec
add
add
adc
mov
push
jno
in
inc
adc
fisubs
xchg
andb
xor
popa
pop
repz
and
mov
rcr
insl
test
fsts
popa
cmpsl
ja
mov
fisubl
test
pop
daa
adc
out
in
mov
psubsb
jl
loope
xchg
test
mov
cmp
pop
push
sahf
dec
out
in
add
xchg
loopne
loop
daa
lea
aam
mov
pushf
dec
pop
mov
loope
insb
arpl
xor
imul
jmp
cmp
mov
dec
faddl
xchg
jge
mov
shlb
int3
pop
rolb
aad
pop
push
in
popl
adc
add
cmp
lods
sub
aam
cmpsb
repnz
mov
mov
inc
pop
jno
fisttpl
mov
pop
pop
mov
pop
cmp
mov
repz
add
mov
inc
ds
pop
sbb
mov
add
rolb
add
cli
cmp
scas
popa
push
push
cmp
lret
fs
test
orl
xchg
adc
stc
cmp
test
inc
jg
in
xchg
dec
mov
jo
inc
or
loopne
push
mov
frstor
sbb
xlat
sbbl
or
mov
add
lods
push
lea
inc
lret
jne
das
xchg
rep
dec
push
sub
mov
fadd
aaa
aad
imul
aad
jae
xor
and
jecxz
add
push
pop
jmpw
and
sbbl
decl
mov
test
mov
sbb
testl
xchg
pushf
pop
imul
or
cld
fidivs
cmpsl
xchg
cmp
sub
pop
lods
in
jns
pop
xchg
inc
les
jns
jle
adc
movl
clc
insl
idivb
xlat
mov
mov
inc
or
icebp
sarb
subl
mov
pop
pop
add
inc
loope
cs
xor
dec
xor
movsb
movsb
in
xchg
xor
sub
push
dec
fsts
mov
cmp
push
int
mov
adc
sbb
mov
cmp
hlt
xor
push
out
jg
xor
mov
sub
xor
int
mov
mov
add
stos
jge
cmpsl
test
int
test
in
sub
inc
aad
push
sbb
aaa
es
pop
jns
dec
jbe
and
dec
sti
cld
cpuid
sbb
mov
mov
mov
js
outsl
xchg
cmp
push
mov
clc
mov
fildl
push
movsbl
je
adc
call
xor
pop
pop
jne
add
cmp
push
add
mov
mov
xor
adc
cmc
push
or
xor
sbb
aas
and
adc
push
mov
dec
shrb
adc
mov
inc
mov
pop
cltd
add
adc
sub
les
es
pusha
sbb
sbb
int3
mov
enter
pop
aas
fdivr
cmp
aam
and
int
lods
xchg
inc
push
cmp
movsl
dec
xor
mov
out
inc
pop
mov
lea
cmp
stos
fcomip
into
scas
mov
repnz
sub
cld
sub
outsb
jne
and
pop
push
sub
mov
sub
jmp
ret
pop
sbb
sbb
dec
pop
popa
aaa
jle
mov
push
js
aas
xchg
mov
jae
mov
popfw
or
imul
jle
ljmp
in
mov
pop
adc
jge
aam
outsb
loopne
push
fstp
pop
dec
dec
or
call
jge
loope
and
pop
inc
push
jge
mov
in
cs
ja
fcom
jl
jle
jecxz
addr16
pop
js
xchg
push
scas
add
sub
dec
pcmpeqw
jo
test
dec
insb
and
mov
or
nopl
jo
jg
fistl
aad
sbb
loope
sub
dec
push
aad
xchg
mov
mov
jns
and
jb
ss
or
in
adc
inc
pop
mov
xor
pop
mov
mov
xchg
jb
test
inc
push
or
or
xor
rorl
out
pop
cwtl
jecxz
imul
mov
cmp
mov
adc
dec
outsb
jo
dec
ljmp
adc
xor
adc
in
jecxz
jmp
outsl
add
pop
in
lds
ret
add
adc
pop
mov
gs
adc
mov
sub
test
test
mov
xchg
mov
xlat
aad
pop
jge
xchg
inc
mov
adc
xor
cmp
xchg
imul
das
das
adc
fwait
or
cli
cmp
or
dec
or
mov
jo
aaa
adc
pop
mov
lret
mov
int
mov
loopne
int3
or
mov
push
push
mov
push
mov
inc
push
inc
xorb
jbe
push
push
jne
mov
jle
addb
mov
cmp
scas
pusha
shl
sbb
xchg
sbb
adc
int
and
insl
adc
fsubrs
dec
imull
sti
fwait
mov
out
inc
inc
adc
adc
xor
push
lcall
adc
add
cmpsb
mov
faddl
in
or
das
movsb
sub
sahf
inc
stc
dec
mov
sub
cmp
cmp
xorb
mov
lds
sbb
ret
outsw
sti
ret
sub
adc
mov
jne
js,pn
clc
stc
je
push
dec
lret
int
mov
in
adc
clc
jmp
jp
sub
sub
pop
sbb
les
mov
jae
idivl
popf
jne
aad
push
and
mulb
les
sub
fwait
jecxz
es
xor
orl
sub
test
lret
sub
arpl
aam
jno
jmp
inc
jmp
and
inc
sub
daa
lret
sti
inc
pop
sbb
inc
loop
call
xor
xor
mov
fadds
aam
popf
fcmovnbe
pusha
adc
xor
shl
and
pop
xchg
push
jmp
sub
xchg
xchg
push
in
and
lret
mov
insl
pop
and
pop
icebp
icebp
mov
dec
imul
fnstcw
insb
sub
decl
sbbb
jecxz
jb
lods
loope
fmuls
lret
movsl
stc
jb
and
insl
mov
aas
mov
mov
adc
pusha
xor
sbb
mov
fwait
push
sbb
popa
xchg
mov
sub
push
movsb
sbb
push
jns
xchg
sbb
aaa
cmpsb
pop
fs
popf
div
pop
lret
dec
sub
sub
jecxz
xor
pop
mov
out
mov
and
cmp
jae
push
jle
loope
cli
cld
adc
and
adc
in
lcall
dec
lods
cs
cmp
jg
lret
sbb
mov
pusha
or
adc
andb
pushf
cmp
sub
mov
jl
push
rcrb
outsl
fdivrs
enter
adc
movsl
cmp
xchg
sbb
or
adc
mov
mov
test
test
push
stos
cmpsb
mov
push
inc
jl
xor
xor
hlt
push
and
outsl
mov
add
and
pop
iret
or
push
or
inc
loop
repnz
repz
ds
sub
inc
xchg
push
mov
sbb
pop
cmpsb
cmp
std
cmc
imulb
adc
int3
sub
cltd
mov
pop
cmpsb
in
popa
out
loope
fmulp
shrl
jbe
push
test
pop
loop
shrb
jb
imul
sbb
scas
jne
xchg
xor
xor
xor
fsubs
call
fiadds
outsb
mov
inc
dec
inc
push
pop
cmp
outsl
mov
dec
and
enter
add
cli
mov
push
popf
rclb
insb
and
ljmp
mov
adc
inc
fsubl
mov
inc
rolb
faddl
mov
push
pop
jae
js
arpl
xlat
inc
jno
inc
dec
jbe
adc
les
adc
cmpsb
or
jbe
fsubs
shrb
lahf
outsb
enter
push
cmc
mov
daa
push
mov
push
out
lcall
rcl
pop
mov
sbb
or
jne
mov
jmp
fisubrs
cmc
mov
mov
push
add
repnz
cmp
dec
insl
mov
pop
mov
add
mov
mov
lods
and
jae
insb
dec
mov
mov
mov
movsl
sbbl
dec
xchg
dec
sarb
lods
lods
stos
test
or
sub
in
jo
push
mov
jae
push
mov
push
xor
lods
lcall
push
stos
dec
pop
andb
mov
leave
out
mov
push
or
aas
lcall
xchg
fisubl
ret
xor
mov
xor
ret
testl
xor
inc
or
fisubl
and
int3
or
pusha
cmp
inc
xchg
pop
sbb
sahf
add
imul
daa
cmp
icebp
or
inc
mov
lahf
pop
ljmp
xchg
pushf
mov
mov
jae
data16
adc
sbb
fildll
aam
mov
dec
xchg
sti
mov
or
mov
jae
xchg
ret
adc
sub
call
std
ret
out
push
daa
movsb
or
cmc
ja
insb
sbb
adc
mov
fninit
xchg
adc
in
mov
xor
shl
mov
sbb
gs
push
inc
pop
dec
sbb
cmp
xchg
idiv
test
jb
neg
mov
sub
and
aaa
mov
pushf
aad
lods
dec
cmp
pop
push
or
mov
cli
stos
or
add
out
sbb
push
insb
jmp
adc
scas
shll
fwait
mov
and
ret
dec
movsb
mov
cmp
cmp
filds
shll
cmp
sbb
inc
jp
adc
popf
lret
jo
std
sbb
idivb
mov
pushl
sub
fisubl
hlt
xlat
call
js
orl
clc
pusha
enter
mov
push
mov
sub
add
jle
into
pop
inc
testl
arpl
leave
enter
pop
jns
das
in
js
rolb
dec
add
sub
notb
or
jg
mov
inc
cmp
out
and
xchg
clc
inc
fnstcw
rcr
out
pop
cmp
cmp
dec
or
cmp
cmp
hlt
xor
jnp
push
mov
cmp
data16
negl
rorl
xorl
push
push
xor
or
stos
sbb
mov
mov
leave
shl
fmuls
xchg
je
and
jg
sahf
push
out
cmp
xlat
ds
mov
sub
add
adc
adc
aaa
scas
test
enter
xchg
shl
nop
xor
or
loopne
loop
mov
xor
pop
cmc
scas
jg
popa
xor
test
xchg
pushf
push
inc
testb
les
dec
lea
test
pop
sbb
cwtl
xchg
lret
aam
inc
test
test
repz
jge
arpl
sub
push
mov
mov
outsb
mov
insl
jne
cmc
std
mov
dec
jge
dec
cmp
scas
jne
es
sbb
cmpsb
repz
xor
cli
arpl
xor
push
das
ss
test
jl
fsubl
rcll
dec
rcrl
test
pop
daa
jb
cwtl
fs
and
inc
adc
in
mov
cli
rsqrtps
divb
or
mov
pop
mov
cmp
xchg
xchg
and
add
movsb
pop
rcl
int3
xorl
scas
sahf
in
and
cmp
xor
jecxz
mov
sub
int
lock
test
xor
inc
jp
ss
rorb
notb
mov
or
dec
add
aad
les
pop
fldln2
jne
mov
sub
scas
mov
pop
mov
shr
xor
lods
push
add
dec
adc
test
sub
or
mov
pop
icebp
mov
int3
arpl
pop
stos
adc
inc
adc
sub
pop
or
cmpsl
flds
inc
test
inc
fadd
mov
jne
int3
pop
add
loopne
cmp
adc
pop
aad
and
inc
inc
push
adc
cmp
jge
sbb
les
bound
out
ljmp
movsb
sarl
and
mov
mov
xchg
mov
fs
or
pop
inc
jle
and
dec
cs
mov
movsb
xchg
cli
orb
xor
inc
and
dec
sbb
rorl
xor
or
xchg
adc
add
push
jns
pushf
pop
mov
add
jns
mov
ret
fmul
jmp
std
mov
or
cmp
adc
pop
hlt
push
xchg
stos
ds
je
leave
aas
test
mov
and
les
mov
xchg
or
fwait
mov
sbb
mov
bound
lcall
xchg
xchg
adc
sbb
ret
adc
repnz
in
psllq
push
repnz
shlb
or
and
ret
mov
icebp
lret
icebp
lea
orl
lret
xor
and
xchg
mov
xchg
push
adc
lcall
hlt
inc
push
mov
repz
push
aad
mov
cmpb
mov
filds
xchg
push
jmp
mov
pop
and
sub
outsl
cli
jmp
sti
outsl
jmp
cmp
stc
cmp
leave
and
sbb
or
or
push
xlat
das
jmp
or
out
mov
push
fldt
int3
fs
xlat
out
popa
into
xchg
dec
pop
fs
mov
loope
fdivrl
cli
out
bound
insl
and
rcl
stos
sahf
fisttpll
xchg
test
sub
shrl
and
push
repnz
mov
ja
jl
stos
iret
add
imul
clc
std
xchg
andb
mov
cmc
imul
dec
inc
cmp
sti
stos
pop
push
outsl
push
aaa
stc
test
outsb
enter
mov
sub
cld
ret
repnz
dec
in
sbb
mov
xor
fisttpl
mov
mov
out
xchg
sti
jbe
test
mov
out
andb
lods
scas
les
out
cmpl
outsl
int3
pusha
push
cmpsl
jge
pop
xor
pop
push
push
mov
hlt
push
cmp
out
sahf
push
iret
mov
cmp
ss
cmp
cld
ret
aas
inc
push
or
mov
adc
jnp
adc
mov
mov
mov
dec
movsb
sbb
push
aaa
popf
jno
shlb
clc
add
mov
in
je
div
xchg
scas
div
enter
inc
daa
mov
pop
mov
dec
icebp
inc
test
sbb
push
icebp
pop
pop
test
mov
in
dec
loope
sti
mov
mov
lods
jg
cs
insl
sbb
fnsave
nop
add
pop
andb
test
shlb
out
stc
aad
mov
fs
pop
icebp
test
mov
xchg
or
out
sbb
mov
hlt
punpckhbw
lret
mov
sbb
lahf
pop
out
push
adc
sbb
xchg
out
dec
cmpsl
fnsetpm(287
mov
pop
call
or
sahf
fld
jbe
das
out
sbb
push
aad
shll
js
inc
ljmp
and
sbb
imul
insb
mov
je
sbb
addb
cvtps2pi
push
sub
test
xchg
and
push
clc
mov
ret
shrb
xor
pop
inc
inc
sub
idivl
dec
mov
movsb
scas
cmp
stos
mov
cs
mov
and
outsb
movsb
fistl
jnp
sarl
mov
jnp
xor
jae
mov
xchg
xchg
push
imul
outsb
mov
mov
inc
mov
ja
sub
js
lock
fwait
inc
pop
dec
jne
mov
sarl
dec
sbb
nop
cmp
lock
iret
cld
repz
pop
pop
or
jnp
mov
mov
sbb
js
add
pop
lcall
lret
and
imul
sbb
dec
fcomps
adc
sub
cmp
xlat
jnp
mov
xor
addl
mov
jae
les
jo
add
mov
push
es
pop
mov
cltd
mov
sub
and
sub
pop
pop
les
jae
cmpsb
iret
sbb
jle
mov
pop
add
fdivrl
shll
mov
push
pop
add
cmp
pop
jae
adc
test
jle
nop
xchg
jge
inc
xchg
test
lods
push
or
push
mov
jmp
and
test
xchg
push
xchg
popf
xor
xor
and
mov
push
jo
xchg
fmuls
adc
cmpsl
add
jae
sbb
out
lock
in
xchg
push
mov
ds
arpl
jne
inc
das
mov
movl
enter
jno
cli
adc
cmc
pop
adc
adc
lcall
fwait
push
or
jne
and
push
and
mov
loope
into
dec
lret
mov
xor
cmp
xchg
pop
je
add
std
pop
adc
movsb
mov
mov
fwait
addl
xchg
pop
outsb
aam
fmul
mov
pop
xor
pop
push
fdivrs
scas
clc
outsb
sbb
jnp
lock
xor
xchg
les
stc
xchg
cmpsl
mov
pop
orb
xor
lret
fwait
adc
mov
cmpsl
push
adc
mov
push
in
outsb
leave
push
dec
outsb
lahf
into
inc
mov
in
xchg
fs
js
aam
mov
filds
push
sbb
add
jo
outsl
repnz
mov
mov
push
push
mov
mov
shll
mov
fldt
mov
sub
adc
sub
repz
xor
mov
pop
cli
sbb
lret
push
or
sub
fstps
inc
add
sub
dec
add
out
pop
out
xchg
cmpsl
insl
dec
xor
mov
dec
mov
fimuls
inc
push
mov
xor
into
sub
cwtl
lahf
outsb
mov
es
int
xchg
dec
mov
mov
aam
push
mov
fisttpl
sbb
lock
push
arpl
xlat
inc
out
imul
fcmovnu
mov
mov
orl
jbe
hlt
mov
and
nop
fstpl
cmp
enter
fistpll
fsub
lock
mov
cli
pushf
adc
or
mov
sub
sbb
or
popa
inc
mov
pop
inc
and
inc
xchg
inc
outsb
sarb
sub
jns
out
lods
outsb
or
call
or
gs
stos
ja
mov
pop
jle
outsl
add
xchg
push
decb
jg
push
std
sbb
add
jg
sbb
or
sbb
lcall
fdivrs
adc
ljmp
mov
addr16
xchg
adc
jae
fnstsw
mov
lea
imul
bound
add
mov
jnp
mov
repz
cmp
jge
das
mov
sub
sbb
mov
daa
adc
adc
and
and
push
movsb
sahf
sub
sbb
inc
fucomip
cmp
lret
inc
cwtl
hlt
xchg
cmp
ja
mov
fists
insb
and
fistps
andl
dec
add
sbb
sarl
sbb
outsl
add
mov
imul
inc
pop
mov
lea
push
mov
pop
popf
fsts
test
andb
push
mov
shll
jge
and
push
sbb
add
ret
dec
outsb
inc
sbb
adc
sbbb
aaa
xchg
leave
les
jo
ljmp
add
cltd
in
push
pushf
sub
lret
cltd
gs
xchg
dec
and
adc
jl
mov
fldl
sub
mov
pmaddwd
cmpsl
out
ljmp
popf
mov
int3
dec
jbe
fidivrl
jns
or
sti
pop
test
or
out
dec
pop
inc
sub
cmp
jp
inc
cltd
xchg
ljmp
js
or
adc
pop
addr16
mov
fistl
aad
cld
push
add
out
dec
ret
adc
push
rcll
mov
or
cltd
push
arpl
imul
lcall
dec
filds
imulb
xor
imul
adc
sqrtps
stos
sub
cld
cwtl
popf
test
cmc
mov
hlt
jae
aaa
jnp
xor
jnp
test
stos
dec
sbb
inc
pop
les
cmpsl
mov
push
jns
sbb
fldt
jns
int3
aaa
inc
sbb
out
in
cmp
enter
pop
test
pop
movsl
add
or
add
outsb
push
sub
mov
mov
leave
fidivl
xchg
aas
jle
addb
pop
mov
ret
test
xor
insl
into
ljmp
xchg
arpl
arpl
mov
loop
lahf
mov
sti
mov
and
loopne
mov
or
or
inc
jae
jns
and
loop
out
inc
add
sub
dec
push
jp
in
out
outsl
mov
mov
push
rcll
lret
mov
lret
decl
std
sub
mov
insb
or
iret
popf
sbb
pop
lret
rclb
jns
in
sub
or
jno
aam
lods
xchg
add
fs
shll
pop
jmp
push
movsb
fprem
xor
inc
jg
pop
jl
in
in
push
xchg
notl
mov
pop
jnp
lret
cltd
jnp
inc
push
mov
xor
xlat
daa
orl
add
cmp
flds
popf
in
shrl
je
ljmp
cmp
pop
out
pop
loope
push
loop
stc
and
xlat
cmp
lcall
cwtl
adc
hlt
stc
pop
pop
add
neg
mull
sub
pop
cmp
sub
sub
int
jb
xchg
loop
push
ret
pop
lret
ret
repnz
ja
adc
ret
mov
cmpsb
clc
ja
mov
fdivs
jg
mov
mov
nop
gs
or
jmp
in
xchg
xchg
enter
lret
xchg
pop
stos
sbb
mov
fisubrs
out
je
jp
push
mov
mov
mov
xchg
imul
cmp
jne
inc
addr16
inc
xchg
add
in
aaa
test
and
mov
enter
xchg
cmp
jnp
fstl
add
xor
imul
sub
cmp
push
fadd
push
stc
push
xor
testb
jecxz
cmp
adc
addr16
add
movb
push
pop
int3
adc
add
ss
sub
push
and
adc
sbb
lods
sbb
sub
and
jb
inc
sub
hlt
adc
pop
sti
out
xor
or
or
sahf
adc
xchg
xchg
adc
push
addr16
ret
mov
and
mov
dec
js
imul
movsl
popf
dec
movsb
stc
test
into
cltd
fs
popf
aam
pop
in
or
xchg
fs
std
adc
out
or
mov
cmp
scas
outsb
ficoms
cmc
leave
aaa
dec
sub
rorl
mov
mov
sub
fcomi
pop
sub
add
mov
and
movsl
repz
xchg
mov
je
pop
out
icebp
inc
dec
out
pop
xchg
fs
dec
ja
clc
mov
pop
xor
push
shr
jp
ret
jnp
pop
or
pop
mov
adc
imul
sub
rclb
fnstenv
fildl
dec
ljmp
inc
pop
shr
out
jmp
add
sbb
fdivrl
int3
inc
outsl
sub
add
sahf
daa
cli
cmp
push
push
dec
add
ret
shrb
adc
leave
mov
mov
or
ret
mov
aaa
mov
stos
xchg
ss
and
inc
popl
mov
cld
jge
hlt
mov
inc
xchg
ja
pop
jp
cmp
cmpsl
push
mov
mov
js
lods
scas
fidivrs
cmpsb
inc
xchg
jmp
js
adc
fst
loop
push
adc
movsl
pop
xor
repnz
mov
aam
fisubrl
in
ss
dec
hlt
addl
sbb
ljmp
add
dec
leave
adcl
add
and
cs
sti
sbb
lret
sbb
sti
mov
popf
add
add
ss
cli
jp
pop
popf
cmc
adc
test
fldl
icebp
addb
sbb
insl
add
xchg
jge
rcrl
push
les
mov
mov
or
mov
sub
rclb
sbb
and
lea
shlb
xchg
cwtl
jg
cmpsl
dec
int
pushf
fmulp
push
nop
sahf
pop
dec
or
lret
inc
mov
xchg
gs
sbb
sub
jg
xchg
mov
mov
push
xchg
ljmp
pop
rcrl
pop
pop
pop
bound
mov
test
mov
subl
xchg
dec
push
push
ds
sbb
xor
in
mov
sbb
jae
lock
nop
and
aad
sbb
es
or
loope
push
adc
pop
dec
fsubl
inc
mov
in
or
xor
enter
mov
sahf
mov
inc
jmp
out
sbb
fwait
repz
jmp
in
mov
ret
jge
mov
push
push
mov
and
mov
jbe
mov
outsb
punpcklwd
pop
addr16
mov
jg
fcmovb
sbb
push
jl
popf
stc
and
mov
out
into
or
popa
xchg
in
xor
out
or
test
xor
rolb
std
xor
in
jge
mov
push
lock
add
in
mov
lret
pusha
cld
test
xchg
lret
push
cltd
mov
orl
out
jne
int
sub
xchg
adc
and
test
mov
dec
jns
inc
push
aas
or
or
jbe
add
insl
adc
adc
cmp
inc
enter
out
or
inc
movsl
mov
and
pop
lret
div
fwait
xchg
xchg
ret
ret
lcall
sub
sbb
aas
mov
fsubrs
call
test
or
outsb
arpl
outsb
fcomps
popa
xchg
sbb
lods
xor
loope
mov
jae
fwait
sub
dec
js
aam
inc
das
sub
xor
jo
xchg
pop
xchg
in
gs
cmp
lret
orl
jg
xchg
mov
jb
movsb
fsubrl
xchg
mov
rclb
cmpsb
popa
mov
jl
push
mov
mov
jae,pt
sbb
into
dec
or
inc
and
and
adc
fdivrs
pop
lret
dec
sub
and
in
inc
or
cmp
aaa
xchg
or
push
pop
dec
and
jl
je
mov
inc
lods
or
repz
inc
xorl
cmp
inc
sbb
mov
jns
cmp
and
imul
loop
xlat
jmp
or
in
ret
and
stos
sahf
add
ljmp
pop
in
push
or
jno
pushf
mov
negl
mov
test
cmpb
cmpsl
mov
and
sub
js
push
jg
mov
xchg
std
jl
test
ds
add
divl
mov
ljmp
sbb
nopl
ret
sti
or
jns
movsb
out
sahf
dec
mov
clc
orb
call
rcrl
pushf
fs
shrl
out
add
cmpl
lods
xor
in
lcall
cmp
add
sbb
aad
test
push
ja
cmp
adc
mov
lret
testl
aas
and
inc
or
lret
fldt
or
adc
adc
pushf
lret
dec
movsl
mov
fsubrl
pusha
jb
xchg
stos
pop
push
xchg
aad
lcall
ret
jno
mov
fwait
pop
ret
xchg
movsb
inc
pop
fists
mov
aad
xchg
cmpsb
mov
inc
cmp
jne
in
mov
fs
sbb
sahf
xor
shll
ja
leave
mov
push
add
sbb
stos
xchg
mov
popa
xor
push
lds
sbbl
inc
ret
jmp
xchg
jb
ja
push
in
or
mov
mov
xor
xchg
outsl
sbb
loopne
jmp
sub
data16
mov
movsb
and
jns
add
movsb
or
add
inc
xchg
or
mov
cmp
popl
cli
sub
cmc
sub
cmc
cmp
pop
imul
lret
xor
mov
and
mov
fsts
or
jle
into
sub
popa
mov
push
imul
fs
inc
push
sti
repz
test
jb
mov
test
mov
fdiv
pushf
pusha
dec
pop
leave
mov
fcomps
mov
ss
mov
popa
push
sahf
push
rorb
ljmp
mov
jne
int
ds
in
push
insl
mov
dec
out
inc
mov
and
loope
retw
push
pop
nop
fiaddl
bound
cmpsb
push
addr16
in
aam
sbb
cmp
cmp
imul
xor
loopne
inc
outsb
fbld
loopne
sbb
fiaddl
push
xchg
adc
and
adc
in
pop
call
out
mov
insb
add
dec
sub
cmpsb
loope
mov
mov
out
cmp
mov
jecxz
jbe
adc
xchg
mov
shlb
nop
loope
mov
mov
lret
inc
inc
loope
bound
in
cmp
mov
mov
push
rcl
lods
xor
pop
shrb
dec
out
rcl
and
nop
mov
out
jle
int
xchg
icebp
sub
inc
lcall
jl
pop
in
pop
fisttpll
xor
decl
mov
cmp
jae
ds
inc
mov
sub
jp
xchg
mov
mov
add
xchg
and
add
gs
insl
cs
sbb
adc
cmp
adc
xor
push
jb
or
insl
or
and
pop
pop
and
add
les
dec
push
adc
shr
mov
addr16
hlt
sub
adc
dec
xchg
inc
adc
pop
inc
jge
cmp
mov
xchg
xchg
or
lret
and
add
hlt
les
cmc
fisubrs
sarl
hlt
scas
mov
data16
daa
xchg
xchg
sbb
pop
insb
push
ja
mov
neg
pop
push
jmp
sahf
sti
es
pop
pop
mov
mov
pop
sbb
jbe
outsl
repnz
int
cmpb
insb
outsb
jno
mov
pusha
add
xchg
adc
mov
dec
push
call
stos
jae
cld
outsb
sub
inc
aaa
clc
push
mov
out
jae
xchg
faddl
sub
jmp
popa
sbb
ja
mov
dec
xchg
popa
sbb
jno
sbb
push
int3
jns
cmp
push
dec
dec
jge
cmp
pushf
and
cmpsl
lods
pop
cmp
leave
cmp
add
add
aaa
dec
mov
inc
xchg
out
fnstenv
inc
adc
mov
fldt
call
pop
fimuls
jbe
mov
fistps
scas
clc
aad
rcrl
adc
lcall
mov
mov
jbe
movsb
dec
out
test
out
adc
sahf
fabs
inc
mov
jmp
dec
lods
jnp
lds
gs
xor
pop
and
sbb
scas
mov
xchg
mov
mov
das
push
ffree
test
test
cmp
lock
mov
adc
mov
or
mov
mov
xchg
jbe
add
fwait
mov
xor
and
and
imul
imul
xchg
adc
or
es
lret
jns
in
xor
cwtl
loopne
repz
adc
call
arpl
es
xchg
lods
out
addr16
fistl
sbb
popf
inc
mov
push
sti
cmc
pop
xchg
lahf
xchg
loop
arpl
lret
mov
mov
clc
or
xor
je
jno
insb
test
jb
scas
mov
pop
insb
cmpsl
cmp
xchg
clc
pop
lods
scas
cmp
sbbl
imul
mov
pushf
pushf
cmp
aam
dec
jne
sub
mov
clc
mov
jo
cltd
es
lahf
ret
arpl
in
popa
orl
and
xchg
push
push
lcall
dec
aam
sbb
inc
jge
or
in
cmp
in
sbb
mov
iret
xor
xor
imul
and
cmp
shrl
loope
or
lret
jne
and
cmpsl
loop
cld
push
push
add
in
mov
aaa
xor
movsl
add
jno
jo
and
push
out
fadd
push
cmc
out
inc
pop
ror
cmpsl
stc
cmpsl
into
fcompp
mov
add
adcb
dec
sbb
stos
aaa
add
push
test
or
cmp
iret
test
addl
out
mov
cmc
jle
jl
imul
clc
addb
add
sbb
addb
incb
push
sbb
mov
cltd
xchg
movsb
in
aaa
and
ja
dec
fcoml
lret
int
fsubp
inc
sarl
mov
mov
outsb
jge
das
out
cmp
mov
xor
pop
lock
lds
sub
ja
lret
pushf
flds
aam
bound
scas
push
repnz
sarl
jo
or
hlt
xor
xchg
pop
jmp
mov
cltd
mov
add
mov
xlat
jae
in
aaa
pop
push
into
adc
in
mov
jl
xchg
lods
xchg
and
mov
loope
push
sub
mov
int
and
adc
lcall
icebp
cmp
sub
mov
sti
nop
cmpsb
ja
jnp
pop
mov
jbe
jmp
fwait
adc
orb
push
adc
andl
or
jbe
cmp
test
lea
mov
scas
enter
pop
lret
sub
test
mov
push
adc
xchg
mov
lahf
aas
sti
pop
insl
inc
jmp
aaa
mov
mov
pushf
aam
sub
jbe
lock
sahf
fmuls
xor
paddsb
mov
les
xor
xor
clc
frstor
stos
pop
cwtl
jmp
icebp
add
sbb
lods
xchg
nop
pop
rorb
inc
push
mov
or
arpl
adc
out
lret
xchg
fmulp
loopne
int
sub
frstor
aam
cmpsb
and
pushf
adc
mov
dec
les
mov
rcl
mov
sti
jbe
leave
lcall
cmp
ficoms
addb
icebp
mov
add
mov
xchg
xchg
cmp
sbb
aam
mov
jg
aam
imul
cli
fiaddl
dec
dec
inc
pop
xor
pop
bound
fsubl
mov
xorl
or
mov
push
rolb
mov
push
sar
mov
inc
ret
test
mov
addr16
out
repnz
test
sbb
insb
sbb
cs
adc
inc
inc
fwait
adc
push
mov
das
clc
inc
fld
sbb
outsl
sub
sti
imul
mov
mov
adc
pop
or
jmp
jl
in
add
jno
and
fists
sbb
push
ret
outsl
fcmovb
or
js
insb
jp
push
ds
and
sahf
imul
and
xchg
bound
rcrl
inc
fisubrs
and
pop
pop
loopne
jb
mov
xchg
sub
loope
dec
mov
push
in
xchg
jb
mov
lret
push
push
jb
inc
popa
ljmp
xor
nop
sub
sbb
js
neg
fidivrl
mov
jno
loop
mov
and
jmp
inc
test
ss
daa
insb
mov
addr16
inc
lcall
push
jno
mov
jge
xor
sti
dec
fldt
pop
add
mov
mov
loope
cmpsb
sub
pop
dec
dec
gs
arpl
adc
scas
adc
push
pop
les
sbbb
cmp
lcall
jg
out
adc
sbb
jae
jge
scas
xor
push
leave
cmp
sarb
dec
sub
or
test
xchg
pop
xchg
test
test
mov
jo
movsb
cmpsb
xor
mov
jo
cmpsb
js
lcall
faddl
cmpl
aas
pand
adc
jnp
jo
popa
mov
pop
pop
jne
mov
leave
in
add
repz
pop
rclb
xchg
shlb
ret
mov
dec
push
cs
jb
rcll
mov
dec
jne
mov
insb
fistps
pop
jb
movsl
push
dec
mov
movsl
into
lods
pushl
loopne
sbb
repnz
cs
or
xchg
je
mov
js
xchg
push
mov
cmp
cmc
insb
and
fdivrl
es
push
fs
pusha
data16
into
loope
mov
add
and
fisubs
jae
mov
jge
mov
std
adc
int
jae
ljmp
sahf
xchg
enter
add
mov
dec
and
fsubs
mov
inc
adc
mov
stc
fstl
xor
les
dec
cmc
push
jp
enter
xchg
insb
addr16
mov
cli
cmp
out
in
stos
mov
scas
in
mov
sahf
pop
notb
shlb
cli
cltd
fwait
jp
call
dec
pop
inc
mov
push
push
leave
es
test
enter
sub
repz
inc
xchg
aaa
xor
fcmovne
cmp
shlb
sbb
cmpsl
pop
jmp
xchg
add
fcmovbe
pop
daa
sub
shrl
sub
shlb
jmp
mov
dec
pop
inc
add
add
out
mov
outsb
cmpsl
add
sbb
pop
in
dec
mov
jg
jnp
inc
cmp
xor
es
mov
and
push
inc
inc
mov
test
test
rcl
mov
subb
push
push
mull
push
ret
push
mov
dec
jmp
mov
ss
psllw
loopne
dec
jl
pop
stos
sbb
sub
data16
jae
jb
imul
popf
js
cmp
sbb
ja
loop
test
out
jnp
xchg
fistpll
pop
cmp
iret
inc
fiadds
sub
sahf
iret
insb
rclb
or
inc
clc
mov
aam
jo
loopne
cmc
jl
inc
in
and
adc
mov
sub
orb
sbb
pop
cmp
in
sub
mov
xchg
roll
sbb
mov
gs
cmp
and
sub
cwtl
mov
pop
movsb
stos
pop
jmp
jge
rorb
sbb
insl
pop
pop
sbb
pop
stos
ds
cld
and
dec
pop
enter
and
das
inc
mov
cmpsl
mov
lock
inc
dec
addr16
cs
add
pop
jmp
push
or
std
rclb
pop
jb
sahf
sub
cmpsl
fwait
dec
xchg
sbb
mov
mov
pop
jp
sub
scas
mov
scas
clc
add
addr16
or
mov
cmp
jnp
cmp
xchg
out
dec
push
jmp
fcoms
adc
sarb
pop
push
fwait
mov
cmp
mov
lods
pop
mov
jp
clc
call
mov
call
sub
inc
je
aad
aad
fidivl
lret
int
jns
sar
adc
cmpl
lods
icebp
add
mov
or
into
sub
fmuls
data16
cmp
sbb
xor
jo
gs
rcll
outsb
fnstcw
jecxz
fisttpl
add
lahf
lret
subl
stos
in
jae
loopne
mov
lock
sub
mov
popf
adc
inc
mov
lods
jmp
ret
add
jno
sub
xor
jne
mov
call
dec
cmp
xor
jp
cmp
sub
repz
cmp
mov
push
mul
ret
pop
ficoms
mov
adc
mov
into
jge
jle
add
jmp
pop
inc
loop
movsb
cli
outsl
sbb
addr16
add
out
sub
in
sub
lar
cli
je
imull
fidivrl
mov
adc
jg
idivb
cld
mov
shrb
cli
push
push
data16
dec
pop
inc
inc
inc
fisttps
repz
gs
add
lock
test
cmp
das
std
cwtl
das
push
imul
mov
int3
aas
sub
xchg
mov
dec
mov
enter
add
mov
js
lods
jns
cltd
add
push
outsl
cmp
push
fbld
std
xchg
std
lahf
push
test
cmpl
add
xchg
addr16
cmp
je
inc
cmpsb
mov
arpl
scas
fidivs
pop
repnz
mov
dec
pop
adcb
xor
pop
xor
mov
mov
pop
test
lock
in
cmp
out
je
cltd
lcall
xchg
sub
jmp
loop
jns
mov
ljmp
cmp
xchg
ret
lea
dec
mov
or
add
fidivl
jae
add
lcall
mov
xor
or
add
ffree
cmp
movsl
aas
std
insl
or
cwtl
stc
and
sbb
cld
shr
adc
popf
ret
gs
push
mov
mov
rol
mov
xchg
in
clc
stc
stos
push
lret
cld
dec
mov
aam
ja
xchg
test
xchg
add
mov
push
sti
xchg
jle
fwait
pop
mov
pop
xor
cmpsb
jo
leave
jae
push
outsb
ss
jno
out
popa
imulb
orb
jno
sub
jns
addr16
dec
fistpl
sub
and
push
pop
pop
lods
outsb
cmp
inc
xor
sub
inc
cmp
inc
pop
rcrb
jp
adc
fnsave
mov
les
cltd
or
xor
push
ds
fidivrl
fistpl
adc
mov
push
pop
nop
dec
cmpsl
xchg
push
out
in
loope
mov
std
add
sbb
int3
ret
negl
push
mov
pop
xor
out
movl
xchg
cmc
xchg
cmp
push
loopne
inc
stos
push
pusha
loope
dec
enter
dec
decb
cld
nop
das
lds
rorl
aaa
xchg
out
mov
call
shlb
push
mov
push
sub
jnp
gs
mov
pushf
fcompp
xchg
nop
dec
pop
les
mov
cli
and
dec
addr16
add
jp
sahf
adc
sub
out
mov
stos
xchg
sbb
dec
xor
push
lret
add
dec
inc
mov
sbb
into
and
and
inc
incl
xchg
push
mov
lret
xor
mov
repnz
movsl
sub
and
js
ss
out
les
test
add
mov
jns
cmp
pop
xchg
or
xor
mov
xchg
int
inc
test
and
sub
sub
in
mov
mov
frstor
rcrl
jg
push
sub
lret
mov
mov
or
sbbl
push
rolb
jns
xchg
jl
lea
movsl
rclb
push
ret
mov
lcall
pop
lcall
add
mov
in
jmp
pop
pop
and
pop
loop
fstpt
in
movsb
pop
sbbl
cmp
add
into
ss
std
call
pop
or
sub
mov
packuswb
xchg
cmp
ret
mov
jl
sub
loopne
add
add
adc
mov
xor
pop
lock
mov
incl
fistpll
das
dec
sarl
xor
inc
iret
test
sti
data16
mov
mov
icebp
out
int
cmpsb
mov
sbb
fbld
fidivrs
scas
icebp
loope
mov
mov
mov
sarb
jp
mov
pop
inc
sbb
mov
mov
loopne
cmpsb
push
pop
imul
mov
lods
or
mov
mov
mov
ja
aam
jg
cmpsb
in
xor
dec
sarl
cmp
fsubrp
mov
mov
push
sbbb
fdivs
cltd
test
xchg
lods
xor
ljmp
and
mov
fisttps
pop
insl
jno
jae
dec
mov
jbe
add
xchg
movsb
mov
or
scas
out
and
fwait
xor
pop
sar
repnz
inc
and
clc
sbb
inc
lahf
daa
adc
iret
aas
or
inc
or
add
bound
ror
add
test
pop
sub
sbb
push
xchg
in
icebp
mov
push
loopne
imul
clc
pop
adc
call
insl
inc
aam
test
fucomi
shrb
xchg
mov
sbb
leave
lea
scas
mov
fisttpll
xor
das
sub
mov
jp
cld
arpl
lahf
ja
scas
shll
jo
jecxz
adc
push
das
pop
mov
xor
pop
add
sub
scas
dec
mov
fstps
push
jg
mov
dec
imul
pusha
fcomip
scas
add
jge
imul
call
insb
and
mov
cwtl
inc
cmp
mov
out
pop
aam
aas
pop
arpl
jbe
lret
std
fldcw
xor
andb
rcrl
adc
sbb
sbb
adc
mov
int3
je
xor
out
or
lret
cld
cmpsl
pop
std
or
sbb
mov
aaa
cmovns
in
sub
insl
js,pt
sub
xchg
out
add
loopne
mov
mov
out
fildl
push
push
push
xchg
mov
sbb
lret
je
and
rclb
mov
sub
cs
inc
cmp
jo
sbb
or
flds
mov
lret
jle
adc
dec
sub
insl
xchg
gs
mov
push
inc
je
cmp
cmp
add
test
lret
adc
int
fstps
and
jp
xor
cmpsb
or
das
out
rclb
sbbb
jl
mov
push
xor
jl
hlt
pop
jmp
outsl
shrl
sub
sub
jmp
adc
test
xchg
int3
cld
mov
and
add
int3
sbb
lods
add
stc
jne
cs
lock
and
jo
out
aad
mov
sbb
out
and
lahf
xor
cwtl
sbb
insl
int3
bound
mov
mov
mov
xchg
sbb
inc
scas
sub
fwait
or
arpl
xchg
xchg
push
xchg
mov
movsl
cltd
faddl
dec
mov
leave
es
mov
xchg
sbb
jnp
dec
xor
lcall
enter
jmp
mov
sub
fildll
mov
ljmp
dec
dec
inc
fdivrs
jae
stc
inc
fwait
pop
test
leave
inc
push
icebp
cwtl
add
xor
ret
cld
xor
mov
outsb
addl
xor
fbstp
mov
jne
fisttpll
add
shrl
subps
and
frndint
scas
mov
sbb
mov
and
mov
ds
je
std
push
sbb
push
push
mov
out
cmp
lds
or
test
cs
jmp
aam
ds
sub
test
ss
leave
xchg
ja
test
xor
cmp
lods
fwait
push
aam
hlt
sti
add
push
or
mov
pop
mov
es
dec
outsl
adc
push
push
movsl
cmp
mov
and
out
les
cld
push
stos
mov
gs
addb
xchg
and
cltd
and
mov
in
xlat
lea
pop
jge
in
cli
push
aam
enter
orl
in
or
nop
addr16
repz
jae
pop
inc
adc
xor
mov
cmc
xor
pushf
fnsave
lcall
and
fcmovb
mov
xchg
lods
xlat
loopne
sbb
fsubl
movsl
loopne
push
push
stc
jge
cmp
push
cld
test
add
movsl
mov
sub
imulb
pushf
cwtl
sahf
iret
sbb
imul
dec
xchg
lahf
sbb
out
mov
ds
cmp
lretw
cwtl
lds
lock
mov
lods
push
test
inc
jne
mov
mov
cmp
movl
mov
or
mov
js
jle
je
sbb
out
jne
dec
addl
mov
and
dec
fcoml
jns
xor
push
pusha
pusha
test
dec
xor
rorb
jnp
lret
push
dec
aaa
test
sub
inc
jae
das
sub
adc
jb
les
jnp
dec
fdivrp
jp
jne
das
xor
fbstp
or
cmp
and
rcrl
jmp
sbb
push
and
adc
das
sbb
xchg
inc
out
xchg
sub
in
imul
sbb
ja
dec
jp
testl
jmp
cs
nop
imul
cmp
shl
push
mov
imul
cld
mov
cld
jmp
adc
call
call
cmp
mov
jo
in
maxps
cmpsb
mov
shrb
outsl
stos
sbb
pop
sahf
adc
sbb
lods
inc
cld
je
mov
mov
insb
jo
or
fs
adc
popf
addr16
repz
sbb
and
add
pop
shrb
push
movsl
pusha
jno
mov
gs
push
xorl
push
xor
mov
and
push
xchg
enter
cltd
push
repz
add
xor
push
xor
jl
pusha
adc
in
jg
nop
rorl
das
push
loope
mov
stc
push
add
sub
scas
mov
mov
es
inc
sub
lds
hlt
pop
aas
jl
pushf
xchg
loop
minps
icebp
push
call
lret
or
push
sub
mov
loop
int3
stc
fadds
push
pop
fildl
lret
aas
push
mov
mov
or
push
lods
jecxz
mov
sarb
ss
mov
jns
mov
rorl
scas
lcall
dec
adc
push
fisubrs
cld
mov
add
pop
mulb
push
push
push
mov
cmpl
arpl
sbb
scas
and
in
ja
xchg
jp
mov
fildll
mov
idivb
add
mov
push
mov
popa
aam
das
aad
adcb
sub
mov
shlb
mov
cmp
sbb
sti
dec
sub
or
dec
aaa
iret
cld
test
clc
das
adc
mov
mov
rolb
inc
mov
daa
insb
clc
fldt
dec
xlat
push
mov
fisttpl
lcall
iret
xor
or
lea
mulb
or
shll
pusha
adc
push
addr16
mov
xor
xchg
fistpll
xchg
mov
cmp
xlat
push
add
and
nop
cmpl
push
cmp
mov
xor
dec
xchg
jmp
xor
fnstcw
jmp
stos
in
pop
pop
jne
inc
dec
jne
shll
cmp
push
movsb
inc
push
jecxz
enter
dec
dec
xchg
outsb
push
xor
xor
push
popf
lea
repnz
or
xor
pop
stos
ficoml
mov
dec
test
cmp
mov
sarb
add
pop
testb
cld
cmp
or
stc
in
mov
stc
in
jecxz
add
mov
je
int
jnp
sbb
mov
cld
xor
out
add
jecxz
pop
fldcw
loop
popf
lahf
inc
sbb
lds
div
fcmove
out
mov
jne
sahf
pcmpeqd
dec
xor
lock
loopne
loop
fsts
mov
stos
fimuls
test
repz
push
shrl
mov
or
push
mov
xor
mov
adc
insl
lods
mov
fs
lcall
out
dec
pusha
in
sbb
test
dec
ficomps
test
repnz
xor
leave
push
and
std
sbb
ret
test
mov
in
fstpt
push
pop
cmp
cmp
icebp
pop
cmp
jp
in
add
mov
pop
and
andl
out
dec
adc
stos
pushf
rcr
out
dec
add
dec
lods
sub
cltd
sarl
pop
inc
inc
or
std
fldenv
inc
sub
sarb
pop
sub
sti
lret
sub
iret
sub
mov
or
xchg
inc
inc
in
xchg
test
fisttpl
mov
lcall
sub
mov
push
popf
imul
fcoml
enterw
scas
sub
cmp
ss
aam
push
jmp
jo
insl
push
jno
bound
push
stos
pop
add
mov
adc
jmp
push
inc
sbb
push
cmp
es
adc
aas
pop
imul
inc
or
clc
mov
in
ljmp
aas
leave
dec
mov
scas
popa
mov
mov
fwait
adc
cmc
push
call
sahf
and
xor
inc
pop
and
jle
pop
out
xchg
arpl
mov
cmp
inc
clc
hlt
imul
sub
cmp
and
bound
and
aaa
push
pop
add
int
and
mov
sub
jae
fildll
dec
xor
movsl
dec
mov
cmovae
pop
out
test
cmp
lods
and
outsb
dec
jmp
jo
mov
or
xchg
adc
sbb
loop
orl
adc
xchg
ja
adc
jge
loop
cs
push
inc
aas
mov
adc
inc
lock
push
push
call
xor
cmp
ficoml
test
jno
je
rcll
dec
fdivs
fildll
into
inc
xor
mov
inc
jle
xor
sbb
adc
add
stos
push
and
adc
loop
push
xor
pop
sub
fnsave
into
divb
inc
lahf
test
sbb
ret
xchg
pop
mov
push
adc
xlat
add
lret
loope
sub
or
out
enter
push
bound
je
repnz
fnstsw
sbb
xlat
mov
pop
xchg
test
imul
addr16
dec
addr16
xor
pushf
shl
sarl
xchg
cli
out
xchg
rcl
xor
loopne
sahf
insb
aad
enter
test
fwait
incb
test
jecxz
ss
loope
dec
adc
mov
jo
mov
or
enter
dec
dec
xchg
pop
mov
js
test
push
or
movsb
xchg
fmull
into
lcall
adcb
xchg
movntq
mov
mov
jo
mov
test
nop
push
lock
rolb
je
jl
ror
fs
mov
popa
enter
movsb
push
jb
out
and
mov
lcall
rcrl
filds
les
sbb
cwtl
iret
dec
xor
jne
push
aas
cmp
jecxz
stc
popf
or
push
mov
mov
out
push
jns
push
sarb
xchg
mov
stos
ss
int3
enter
mov
mov
lock
test
int
cli
xchg
insb
iret
insl
adc
adc
xlat
mov
es
xor
mov
push
fstpl
push
leave
jecxz
sti
push
ret
out
pusha
scas
push
inc
mov
icebp
push
sbb
mov
inc
push
repnz
sbb
adc
into
sub
dec
aaa
repnz
inc
xor
pop
adc
insl
rcl
lods
adc
lods
shlb
fbstp
pop
xor
jo
jl
lcall
xor
cmp
test
and
iret
roll
std
inc
lods
ljmp
inc
pop
pop
aad
cmp
and
lock
fstpt
cmpsb
ja
cmp
push
addr16
push
sub
notb
mov
xor
cmpsb
fisubrl
gs
xor
test
roll
cmpsl
mov
popf
adc
fisubrl
arpl
in
test
outsl
ja
cmpl
push
jp
aad
jg
mov
ror
shll
movsb
orb
gs
adc
sub
jmp
aam
repnz
sub
ss
xchg
xor
pop
not
dec
sahf
mov
shll
pop
sub
clc
xchg
push
adcb
loop
jle
leave
dec
inc
shl
fdivs
or
pop
inc
xor
arpl
shl
in
mov
mov
in
or
faddp
add
mov
aas
add
dec
sbb
push
out
sbb
rcrl
cmp
jbe
stos
inc
ljmp
aaa
cld
or
aam
loop
dec
lret
fidivrs
test
rol
cmp
addl
mov
into
jns
mov
or
mov
inc
imul
pop
call
ss
mov
cmp
adcb
aas
pop
lcall
out
andb
dec
pusha
gs
adc
lds
xchg
imul
dec
pop
xorl
push
icebp
stos
lock
cmp
insb
sbb
xsha1
cmpsb
mov
aas
and
inc
hlt
push
mov
fildll
dec
fiaddl
jnp
inc
cld
add
out
push
inc
enter
mov
and
es
inc
addr16
jne
lods
andb
xchg
adc
dec
es
andb
adc
leave
loop
xchg
jmp
repnz
pusha
movsl
adc
add
loopne
loop
in
mov
insl
lods
cs
push
push
inc
add
cmpsb
dec
addr16
and
xlat
inc
or
lret
subb
xor
fnstenv
lret
ss
sub
rol
adc
mov
hlt
xor
adc
sub
idivb
test
inc
xchg
fimull
cli
jno
sahf
rclb
cs
xchg
inc
lea
xchg
fidivs
call
mov
or
inc
mov
out
push
out
xchg
sbb
mov
sbb
pop
adc
and
lcall
add
data16
jge
dec
lret
out
mov
inc
arpl
dec
inc
and
das
repnz
jb
cmp
fstl
add
xlat
dec
xchg
into
aas
scas
pop
inc
outsl
outsb
mov
or
sub
dec
jne
outsl
stos
push
idivl
xorb
add
jns
xchg
push
cmp
mov
inc
clc
dec
inc
hlt
test
or
mov
adc
test
mov
test
jmp
push
pop
loope
cli
mov
sub
pop
cmpsb
test
xor
cmpb
aaa
fbstp
stos
xchg
imul
mov
in
fs
dec
loop
dec
clc
fsubp
push
imul
mov
pop
aaa
mov
pushf
scas
push
std
pop
lret
loope
push
xchg
adc
pop
xlat
test
push
and
orl
into
in
add
add
pop
pop
jb
mov
xchg
xchg
jo
fnstsw
movsl
in
cmpsb
or
xchg
ds
sahf
inc
push
je,pt
sbb
pop
pop
sub
outsl
cmp
insl
adc
jo
scas
movsl
shr
add
jge
jmp
ds
inc
test
je
push
or
push
push
fsubr
jecxz
inc
ja
pop
sti
lret
dec
mov
push
dec
sti
in
jge
mov
xor
xor
pop
rcrb
iret
mov
insb
add
mov
mov
fldl
and
in
sub
shr
daa
adc
out
pop
mov
int
in
sbb
dec
push
scas
fidivrl
jle
ljmp
xchg
rorl
mov
enter
imul
pop
pop
shlb
cltd
jno
cmpsl
sub
sub
test
imul
outsb
jge
cwtl
inc
mov
dec
and
addr16
fdivrl
in
pop
mov
sub
and
lods
stc
cltd
push
movsl
jbe
xchg
sahf
jp
xor
sub
in
push
add
stos
das
shlb
jl
out
repz
mov
mov
fisubrl
rclb
mov
cmp
shlb
push
mov
sub
sahf
popa
cmp
xor
add
jecxz
gs
rcr
das
daa
sbb
add
int3
test
cmp
popa
mov
pop
mov
pop
in
push
call
or
jns
mov
in
mov
mov
rol
lcall
popa
inc
stos
scas
mov
mov
ret
lahf
lahf
lods
and
adc
jge
xchg
sahf
sysexit
bound
cltd
xchg
ljmp
stos
cld
jae
xchg
pusha
aad
push
mov
xor
adc
je
add
push
xor
lcall
push
imul
add
nop
and
aam
pop
jnp
mov
push
inc
xchg
movl
popf
and
cmpb
dec
imul
mov
jae
jbe
shufps
lds
subb
mov
dec
das
lcall
cli
xor
xchg
inc
adc
arpl
mov
cld
pusha
dec
push
int3
inc
fs
test
xchg
jl
pop
stc
jo
xchg
pop
xlat
add
mull
fmull
fwait
adc
call
movb
cs
mov
cmp
sub
pop
ret
cmpsl
mov
fmuls
dec
lahf
lret
ljmp
mov
xlat
dec
sbb
sub
xorl
cmp
mov
pop
push
divl
pop
and
aaa
sbb
jl
cmp
mov
data16
and
xor
mov
pop
jae
push
push
or
adcl
cmp
inc
inc
enter
jle
data16
call
call
scas
scas
jns
cld
out
fsubrs
clc
ficoml
mov
test
leave
test
pop
sti
and
sbb
mov
icebp
dec
cmpsl
outsb
cmp
addb
adc
push
jle
cld
lock
xor
decl
lock
orb
test
out
sub
data16
dec
mov
push
cmp
inc
jne
adc
sbb
xlat
pop
jp
cmp
adc
or
adc
push
cmp
xor
shlb
je
movsl
cmpsb
sahf
jo
jns
ss
cmp
scas
dec
pop
cmc
mov
loope
and
ja
imul
xchg
jnp
push
cmp
loope
icebp
jo
cwtl
decb
xor
cmpsb
arpl
int
mov
or
pop
insb
ss
push
cltd
out
sahf
les
sbb
ds
gs
sahf
xchg
ja
dec
xor
dec
mov
inc
les
aad
adc
inc
sub
fstl
sub
push
adc
push
push
imul
test
add
test
sbb
das
std
lret
bnd
and
das
test
in
adc
loopne
test
out
in
insl
ljmp
faddl
mov
and
pop
and
popf
jns
push
mov
out
inc
push
mov
cmpsl
sub
out
push
xchg
fcmovb
mov
into
imul
sbb
pop
push
lret
pop
dec
mov
ljmp
jp
mov
mov
and
pop
scas
test
loop
cmp
inc
out
pushf
xor
jbe
icebp
jns
xchg
jg
or
or
lock
lahf
mov
lcall
mov
gs
scas
nop
iret
ret
push
unpckhps
xor
and
out
dec
xchg
lret
ljmp
sub
pop
cltd
push
cmp
inc
push
pop
dec
push
decb
cli
sahf
xor
scas
push
push
xorb
jl
add
outsb
cmp
and
test
aam
inc
test
rcrl
xchg
outsb
lret
repz
jbe
mov
add
sahf
push
bound
push
push
js
xchg
ds
mov
movsb
sahf
or
push
xor
xor
in
out
add
in
and
and
stc
inc
movsl
negl
orb
jnp
push
sahf
cwtl
addr16
outsb
out
mov
dec
dec
add
and
mov
cmp
pop
loopne
clc
sbb
push
scas
nop
popl
inc
dec
call
sbb
sub
inc
in
cmc
pop
xchg
inc
inc
jg,pn
push
cmc
loop
jmp
jae
lods
push
int3
adc
push
pop
jne
dec
pop
cmc
fidivl
lret
into
mov
fists
mov
icebp
daa
dec
jbe
push
dec
imul
cmpb
xchg
jg
adcb
sar
stos
pop
push
dec
sub
in
pop
mov
cmpsb
fmulp
pop
xchg
inc
ficomps
js
icebp
fldl
mov
out
jne
xlat
lret
push
test
mov
rcrb
loop
cmpsb
mov
inc
mov
pop
mov
xchg
jle
adc
stos
push
mov
negb
mov
std
pushf
and
pop
and
mov
inc
stos
adc
decb
jp
xchg
fadds
jle
insl
stos
js
stc
lret
mov
jb
sbb
scas
jno
pop
push
mov
call
push
jns
bound
shr
adc
or
popf
sub
mov
xor
adc
rorb
hlt
aam
test
sub
push
mov
xor
push
ficoms
xlat
das
out
loope
and
sbb
hlt
lsl
sti
stos
daa
idivb
testb
or
cwtl
sub
fdiv
cmp
enter
addr16
pushf
xor
ret
int3
xor
cmp
mov
xchg
pushf
sub
pop
js
dec
pushf
or
push
leave
xlat
and
ja
mov
cmc
ja
mov
pop
mov
rcrb
cmp
pop
jne
jmp
xor
lock
out
mov
js
movsb
fiaddl
lahf
mov
daa
ret
mov
sbb
lods
and
and
sti
rorb
add
lods
xor
mov
xchg
add
shrb
push
sahf
xor
sub
pop
pop
mov
mov
push
lods
cld
test
sbb
dec
int
aam
ds
mov
rorl
push
loopne
ficoms
or
pop
cmpsb
push
fcomip
in
andb
rol
dec
fcomps
in
add
sub
int3
or
add
notb
gs
adcb
xchg
xchg
inc
xor
ss
fmull
push
cwtl
jbe
mov
cmp
mov
es
pop
repnz
mov
adc
and
add
or
mov
inc
roll
xor
cmpsb
fnsave
cmpsb
cmpsl
jle
inc
cmp
inc
nop
mov
icebp
jp
lea
jae
mov
push
inc
test
sbb
dec
cmc
mov
xchg
int3
xchg
mov
sub
or
jb
addl
fdivrp
mov
out
lret
cmp
mov
adc
push
test
add
inc
les
test
push
mov
out
insb
xchg
and
pextrw
fcomp
ss
cmpsl
pop
push
xor
mov
rcrl
fiadds
divl
push
dec
xchg
out
cmpsb
lahf
sbb
mov
sbb
and
repz
jl
clc
xchg
lret
vandnpd
dec
push
dec
xor
adc
rcl
mov
cli
dec
sti
sahf
or
leave
inc
push
adc
clc
sti
cmpsb
out
mov
cmp
pop
iret
pop
cli
mov
pop
adc
or
and
out
into
je
lret
jbe
pop
scas
and
outsb
dec
shlb
cwtl
fstps
or
out
bound
mov
mov
push
ds
and
loope
push
in
int3
loopne
std
lods
sar
push
add
lea
xchg
in
cmp
daa
div
or
dec
test
pop
inc
xchg
movb
jne
outsb
jp
int
jg
push
mov
xchg
out
xchg
dec
arpl
dec
cmp
std
fsubrl
mov
rcll
mov
pop
cmp
inc
shrb
mov
or
dec
or
mov
xlat
sahf
inc
cmpsb
cmp
dec
gs
adc
mov
xchg
fiaddl
adc
dec
jnp
icebp
adc
adc
sub
cmp
push
mov
ret
fcomp
test
fwait
and
cmp
pop
icebp
inc
xchg
mov
je
dec
or
popw
stos
xor
pop
jle
movsl
cwtl
shl
push
shrb
in
in
divb
loopne
lret
rcl
inc
push
cwtl
dec
jg
push
jg
mov
fcmovne
jge
push
jno
jbe
xchg
mov
test
out
cmpsb
push
jmp
cmpsb
out
imul
push
jge
add
push
jl
lcall
jle
test
data16
cmpb
lds
in
push
scas
pop
dec
and
sarb
pop
leave
pop
mov
les
inc
fildll
and
mov
arpl
out
in
aaa
pop
or
imul
xchg
imul
repnz
lret
or
fs
cltd
je
fsubrp
les
ret
out
or
int3
push
mov
ss
les
into
insb
push
inc
movsb
mov
mov
int
ret
aam
jbe
cmp
inc
stos
int
jmp
dec
and
outsl
outsb
ret
repnz
fwait
jmp
add
rcr
stc
test
mov
push
dec
jno
ja
or
sub
enter
mov
shl
push
jno
shlb
pop
scas
or
jo
stc
sbb
push
aaa
je
sbb
lea
dec
sbb
jae
int
inc
cmpsb
cld
mov
mov
flds
andb
or
mov
and
imul
jmp
or
je
push
cmp
hlt
fsubs
add
adc
add
sbb
mov
add
das
xor
out
insb
adc
lahf
mov
dec
and
lds
mov
loopne
jge
and
fs
xor
lea
fwait
pop
push
int3
scas
into
mov
inc
jns
shll
frstor
dec
lcall
push
lret
dec
repnz
ficoms
xchg
clc
nop
dec
sub
cmp
and
mov
mov
sbb
aas
pusha
std
mov
mov
sub
cmc
push
pop
mov
lret
sub
adc
sub
test
adc
dec
mov
outsb
jae
je
push
mov
mov
bound
pop
push
iret
push
cmp
mov
les
jecxz
sbb
lahf
loope
adc
aam
inc
jnp
insb
push
out
xchg
and
cwtl
xor
aas
xor
inc
cmp
cmp
rcrb
mov
aaa
fildl
je
add
sbb
jnp
imul
idiv
add
pop
in
in
push
cmp
insb
mov
push
xchg
daa
cwtl
sub
call
shll
xor
push
lods
sahf
xlat
repz
pushf
rorb
fnstcw
fdivrs
push
xchg
cmpsl
movb
cmc
mov
aaa
stc
push
aam
dec
pusha
int3
fsincos
mov
popf
add
fs
rcr
fwait
or
cld
fcoml
mov
insb
jecxz
in
rolb
mov
jnp
dec
inc
into
jle
sbb
test
adc
insl
js
shlb
repz
out
add
jns
mov
add
cli
mov
or
xchg
sbb
push
push
ret
enter
aaa
jp
inc
hlt
xor
mov
repnz
pop
push
repz
jge
jb
shr
aam
hlt
jmp
leave
jmp
dec
mov
in
adc
int
lock
or
add
clc
xor
fnstcw
push
ljmp
in
xor
out
xchg
jns
dec
xor
pop
push
incl
pop
subl
notl
lods
xchg
in
xchg
push
jmp
xchg
stos
inc
cmp
jns
sbb
in
int
and
out
fbstp
fisubrl
sub
sub
dec
cmc
mov
push
int3
cmp
aad
sti
inc
out
fcoml
inc
sarb
sbbb
subl
faddl
push
stos
xchg
xchg
ljmp
cmp
pop
mov
and
addr16
and
dec
adc
insl
sub
orb
jnp
sub
mov
inc
fwait
or
jecxz
sbb
out
cmp
aad
call
leave
mov
xor
std
mov
ds
loope
pop
push
fcmove
jge
int
roll
je
add
dec
xor
std
sub
jge
lahf
stos
or
push
mov
mov
dec
scas
aam
pop
das
pop
adc
cmpsl
push
pop
cmc
xchg
call
mul
shlb
sub
xchg
out
ror
out
les
call
mov
in
into
push
fsubr
nop
pop
in
cmpsl
push
pop
or
dec
add
xchg
mov
jg
scas
clc
insb
les
jl
sbb
adc
push
mov
xchg
lods
int3
dec
sbb
fidivrl
mov
repnz
and
enter
outsl
mov
mov
pop
in
in
repnz
xchg
into
pop
cmp
mov
in
cli
pop
sbb
inc
insl
xlat
adc
push
dec
xor
push
jmp
push
add
sahf
scas
xchg
movb
push
cmpsb
out
xor
sub
xlat
xor
xor
rcrl
sbb
sub
sbb
adc
pop
cmp
ljmp
pop
cwtl
jmp
sbb
loopne
ja
daa
shll
out
enter
or
je
aas
adc
mov
iret
adc
lcall
sub
jp
cmp
je
fstps
fcoms
or
cmp
scas
xchg
fwait
ret
aad
pusha
and
insb
push
test
add
jno
fcoml
lock
mov
xchg
scas
xchg
shr
out
push
sbb
cmp
inc
push
dec
mov
ret
mov
inc
or
push
inc
aas
ss
dec
js
jle
imul
test
inc
pop
insl
xor
sahf
or
js
xor
arpl
inc
test
push
jg
push
xchg
mov
cmp
xchg
insl
cmp
push
jb
js
pop
arpl
test
test
and
and
xlat
push
mov
xor
sub
and
add
cmpsb
pop
lea
or
push
rolb
inc
sub
mov
lods
ljmp
mov
addr16
sbb
adc
iret
and
sub
sub
pushf
mov
pop
push
ja
mov
and
outsl
ficompl
stc
icebp
jle
xor
fbstp
mov
rcr
mov
pop
lock
pop
pop
pop
insl
adc
loope
int
or
inc
scas
jecxz
call
cmp
mov
jle
cmp
sbb
sbb
xchg
push
imul
adcb
push
in
mov
pop
cmp
insl
pop
test
lcall
xchg
call
ret
and
and
imul
inc
adc
in
fnsave
movsl
xchg
push
sbb
adc
movsb
lret
bound
inc
xchg
inc
adc
addr16
cs
sub
inc
or
push
dec
int
lahf
icebp
leave
mov
jb
addr16
mov
fisubl
out
pop
adc
jle
lret
jno
mov
fistps
fsub
pop
test
cmp
mov
sub
fimuls
mov
movsl
fwait
xchg
scas
adc
mov
pop
push
in
shrb
pop
cld
cwtl
adc
push
fwait
cmpsl
std
imul
pop
xchg
lods
add
pop
pop
pop
pop
fimull
xor
jmp
push
cltd
xor
inc
out
out
ficomps
stos
mov
cmp
mov
push
cmp
pusha
sti
or
mov
or
cmpsl
cltd
mov
pop
dec
nop
push
push
jae
test
jecxz
mov
xor
lds
jmp
cmp
add
inc
push
addl
stos
stos
sbb
shll
iret
pop
int3
mov
sbb
xor
arpl
dec
add
fcomp
add
jl
jo
or
aad
jno
add
scas
cld
dec
fucom
into
jle
jmp
cmp
scas
rol
stc
mov
fistpl
in
push
les
ljmp
adc
xor
jbe
push
clc
add
aas
je
dec
pop
addr16
pop
jmp
divl
aad
jge
sub
jbe
repz
push
or
cmp
inc
in
jns
sub
pop
fiadds
insb
jecxz
mov
dec
push
jno
arpl
jne
cmp
addr16
aam
dec
stc
inc
jae
jae
fcoml
push
sbb
and
sub
cmp
mov
out
cmp
xor
scas
or
lcall
lcall
jno
and
adc
adc
dec
inc
push
add
rcll
cld
mov
cmpl
add
int
rolb
popa
inc
inc
inc
aad
xor
adc
or
cld
loopne
pop
sub
fmulp
push
adc
fildl
fsts
fwait
out
loope
mov
lods
ja
push
mov
xor
sub
andb
mov
jns
inc
and
push
and
scas
and
sbb
add
cli
ljmp
stos
mov
adc
sbb
inc
int3
pop
ret
xchg
pop
jmp
jle
jno
data16
test
ja
lahf
in
test
xchg
jae
pop
cwtl
xchg
adc
jae
lods
dec
mov
iret
rcrb
cwtl
pop
adc
push
push
push
dec
dec
insl
dec
dec
lock
push
xor
push
and
and
xchg
jp
pusha
sub
mov
mov
pop
mov
xchg
and
xchg
or
and
cwtl
xchg
faddl
or
xchg
sub
sub
mov
xchg
and
xchg
and
push
mov
and
xchg
and
pop
push
in
inc
pusha
jae
jbe
xchg
and
xchg
and
xchg
je
outsb
in
test
sarb
adc
mov
push
xchg
or
push
jl
mov
cwtl
in
cmpsb
mov
xabort
jmp
dec
push
push
inc
rol
push
in
addr16
mov
jmp
push
clc
gs
imul
push
shr
sbbb
mov
pusha
inc
or
pop
jmp
push
push
mov
ret
push
mov
cmc
out
lock
push
sub
lret
jo
push
daa
xor
sub
jge
push
or
into
add
pop
jg
or
jecxz
adc
mov
adc
outsl
adcl
inc
xor
adc
iret
es
cmp
mov
push
xlat
and
adc
mov
dec
ds
sbb
sub
pop
mov
popa
dec
inc
push
pop
pop
fistps
jb
lea
ss
mov
les
mov
mov
dec
xlat
pop
and
push
pop
pop
testl
add
sub
or
push
xor
push
scas
xor
stos
push
and
incb
xchg
mov
sbb
and
adc
inc
out
jne
add
push
and
lock
pop
ficoml
add
pop
push
sbb
pop
add
into
rcll
sahf
mov
push
adc
xchg
cs
enter
push
push
jb
push
ljmp
add
jno
or
adc
test
or
hlt
sbb
lret
push
popa
loopne
pop
push
call
or
jg
mov
push
jecxz
scas
mov
inc
mov
mov
outsb
sub
push
mov
aas
out
push
mov
adc
push
aam
push
popa
inc
sbb
add
mov
or
push
fimull
dec
xor
push
mov
jg
addr16
into
and
es
stos
mov
adc
and
mov
orb
pushf
sub
sub
mov
and
dec
inc
push
sub
dec
sub
xchg
or
sub
jg
xchg
aaa
outsl
push
push
test
into
push
pop
das
mov
push
mov
jns
bound
fdivs
pop
sbb
mov
shll
mov
mov
pusha
dec
xor
jnp
ljmp
sbb
add
push
orb
push
or
jb
or
or
xor
push
in
and
add
mov
push
and
addr16
push
aad
push
lds
xor
out
mov
push
mov
ss
push
push
pop
in
add
add
push
pop
iret
xchg
in
inc
and
push
pop
fnstcw
adc
pop
mov
sbb
ret
mov
mov
push
xor
and
bound
pushf
push
das
mov
dec
inc
push
adc
xchg
adc
imul
cmp
sub
shl
push
and
push
adc
mov
mov
push
push
clc
das
pop
pop
xchg
popf
mov
lcall
push
pop
add
push
mov
adc
xor
cli
inc
loopne
or
push
mov
sbb
push
repnz
ja
xor
mov
push
push
cltd
push
pop
or
cmpl
or
jp
push
in
push
jge
mov
push
sub
and
pop
sub
add
lods
add
in
js
push
mov
out
cmc
mov
mov
out
xchg
mov
cmp
gs
pushf
adc
data16
push
or
jge
int
insl
push
or
loopne
in
adc
aaa
or
into
jae
push
sub
fcoms
add
lods
lret
pop
push
push
or
push
leave
add
leave
cltd
or
fildll
push
sbb
pop
mov
arpl
mov
push
mov
push
mov
push
push
inc
and
push
sub
add
js
stc
dec
push
cltd
mov
push
nop
pushf
mov
sub
mov
lea
push
mov
lock
add
cmp
push
subb
paddusb
push
sbb
in
movsl
clc
cmc
push
push
jbe
mov
or
pop
sub
jnp
xor
jne
int3
mov
push
push
push
insl
mov
push
jl
adc
repz
push
adc
filds
jg
inc
mov
or
rcll
or
les
rcrb
bound
sub
dec
xchg
jp
mov
mov
pop
popa
shll
dec
pop
mov
mov
mov
ret
push
pop
cmp
pop
pop
pop
scas
pop
push
inc
pusha
mov
push
mov
lret
inc
mov
mov
sahf
mov
mov
xchg
xchg
mov
sahf
xchg
xchg
cmpsb
xchg
xchg
push
imul
push
push
rorb
mov
push
icebp
pop
jae
or
or
xchg
outsl
roll
adc
push
mov
cltd
push
xchg
fwait
lds
push
les
mov
mov
rol
popf
aas
xchg
movsb
mov
mov
mov
sub
je
mov
les
nop
les
popa
cmpsb
movsl
movsl
pop
dec
pop
pop
jno
movsl
fwait
mov
push
xchg
mov
arpl
movsb
mov
jg
xor
mov
mov
or
mov
mov
jns
dec
rol
decl
mov
das
add
and
mov
push
sub
pop
sub
mov
mov
xchg
and
xor
mov
sub
jb
mov
mov
xchg
mov
lret
sub
xor
out
orl
mov
xchg
mov
lds
mov
pop
mov
cwtl
lods
jbe
shll
test
pop
mov
mov
imul
imul
mov
sub
jae
mov
xchg
mov
jb
pushf
mov
sub
bound
xchg
jl
mov
mov
mov
mov
mov
test
adc
rol
or
rcll
mov
arpl
mov
rcrl
mov
mov
jge
jb
mov
dec
sahf
mov
lret
jns
pop
lds
sub
mov
push
or
aaa
pop
xor
ja
pop
mov
test
das
push
movsl
mov
cmpsb
mov
xor
cmpsb
mov
mov
mov
rclb
xchg
lcall
push
sub
xor
mov
icebp
popf
dec
cmpsb
lods
push
dec
cltd
mov
sahf
mov
fcoms
les
push
mov
test
mov
mov
lds
xchg
mov
ds
push
pop
ss
mov
sbb
dec
jns
dec
fwait
dec
aas
mov
sub
push
xchg
push
imul
out
pop
fimull
push
pop
ficoms
pop
aaa
pop
cmp
push
pop
push
cmp
push
cmp
jo
jp
lea
ret
leave
and
xchg
mov
bound
lahf
dec
int3
push
orl
pop
lock
je
mov
sub
test
dec
jge
dec
mov
or
inc
push
ret
cmpsb
adc
mov
pop
push
dec
int3
pop
pop
or
fs
cwtl
push
aad
mov
insl
mov
popf
movsb
ds
jbe
imul
push
dec
jg
jb
jnp
cli
push
rcrl
mov
push
roll
add
jb
into
lea
push
pop
fs
adc
dec
dec
rcll
lods
loopne
sbb
mov
adc
pop
hlt
push
call
mov
push
testl
in
jmp
mov
and
or
sbb
push
push
mov
fists
rcll
mov
call
es
adc
icebp
and
xor
cli
sub
pop
int3
iret
push
add
cmc
push
inc
dec
data16
ret
adc
push
incb
in
and
cs
dec
scas
sub
arpl
push
pop
sbb
lret
jne
xor
push
add
sub
notb
inc
jne
jp
nop
push
stc
sahf
outsb
dec
jle
subl
rolb
push
xchg
push
inc
dec
sbb
mov
dec
push
xchg
dec
or
adc
pop
lods
outsb
xor
mov
or
scas
add
insb
mov
push
xorl
mov
test
xchg
movb
xor
pushf
iret
mov
xchg
push
pop
and
xchg
fstl
test
mov
mov
or
add
repz
dec
mov
andl
orb
xchg
add
xchg
dec
fisttpl
int
imul
in
sbb
mov
push
mov
in
and
and
aaa
imulb
call
aam
jb
xor
aaa
insl
or
push
sarb
cmp
inc
pop
arpl
xor
push
xor
js
sbb
push
push
int
xchg
pop
dec
cmpsb
and
push
gs
dec
stos
shlb
adc
push
xor
setae
cmp
cmp
mov
pop
mov
imul
out
bound
sub
sahf
pop
push
mov
sbb
data16
testb
mov
adc
pop
push
js
out
aas
inc
push
pop
add
push
dec
cwtl
lret
mov
outsl
jl
push
mov
mov
jge
xor
in
push
add
mov
movsl
out
xor
sarl
push
add
mov
lret
clc
inc
popf
into
add
adc
stos
lds
stos
xlat
or
push
cvtdq2ps
cmc
jae
loopne
push
shlb
std
cmpsb
and
jmp
pop
ljmp
add
in
repz
hlt
push
fdivrp
cs
xor
icebp
push
int3
jmp
aaa
idivb
xchg
push
sub
clc
or
cmpsb
roll
loope
filds
push
arpl
push
and
sbbl
push
inc
es
sub
and
mov
pcmpgtd
cmp
sub
adc
inc
inc
jbe
xchg
shrb
mov
pushl
pop
mov
inc
lea
xchg
dec
insl
pop
xchg
push
push
mov
jp
lcall
dec
xchg
mov
pop
arpl
shll
int3
dec
mov
push
mov
mov
addr16
sarl
xchg
push
mov
ror
pushf
rorb
fdivs
sub
mov
push
out
mov
jmp
stos
lock
in
xor
mov
jne
xor
or
std
mov
add
rolb
lds
and
loope
xor
in
and
xor
sbb
and
cmp
or
push
enter
sub
push
push
push
xor
cld
push
pushl
repnz
add
mov
or
inc
push
pop
adc
jno
inc
add
dec
adc
jle,pt
dec
push
or
add
and
push
pop
cmp
sbb
gs
push
pop
xor
imul
pop
outsl
mov
jb
push
ja
mov
jnp
cmp
int3
push
push
test
out
mov
fsts
lea
enter
out
xchg
push
rol
dec
mov
pop
mov
sub
or
addr16
sub
push
lds
aas
jne
xchg
sbb
push
enter
pop
or
add
int3
mov
mov
push
push
loop
insl
sarb
push
inc
adc
cmp
frstor
aam
aam
icebp
sarl
icebp
repnz
ss
inc
roll
inc
icebp
ds
cmp
repnz
lea
inc
roll
repnz
cmp
repnz
ds
inc
ss
push
idivl
sbb
aaa
xor
enter
shll
inc
inc
inc
inc
or
int
divl
adc
cmp
jmp
inc
aas
xor
dec
inc
xor
cmp
testl
repnz
or
addl
mov
inc
daa
dec
aaa
inc
cli
inc
or
loopne
jg
mov
pop
adc
test
xor
pop
iret
xor
scas
mov
inc
cmp
inc
xor
and
filds
cmp
jecxz
loopne
inc
inc
stos
ss
xor
sbb
xor
cmp
orb
stos
add
popa
sub
dec
lods
inc
inc
movsl
mov
cmp
cmp
inc
inc
repnz
ss
ds
xor
call
and
and
or
lret
add
or
add
ss
mov
xor
xor
fcom
clc
rolb
mov
lods
addb
call
call
sbb
es
aad
xor
stos
fdivr
rorb
aaa
xchg
in
in
aad
pop
mov
addr16
mov
mov
stos
inc
fidivrs
sahf
add
dec
add
ds
fimuls
das
fsubrs
dec
pop
das
fsubrs
dec
or
fsubrs
dec
or
fsubrs
dec
or
fsubrs
dec
or
fsubrs
enter
sbb
mov
stos
lcall
lcall
push
push
jmp
test
repz
add
aad
shl
jp
add
cmc
in
push
aad
shrb
mul
dec
pop
aad
sarb
in
or
xlat
test
xor
out
or
sar
in
or
pop
in
xor
mov
cli
xchg
in
add
das
sar
xor
scas
aad
cmp
xor
in
aad
cmp
std
xor
xchg
fucomi
lds
adc
repnz
sbb
rclb
pop
rclb
aaa
and
push
icebp
xchg
fdivl
fsubr
rolb
sub
fdivl
fsubr
rorb
sbb
sub
fdivrl
rolb
aad
inc
fsubrl
fstp
xlat
pop
shrb
dec
in
scas
fs
dec
fiaddl
rdpmc
xor
xor
and
call
rcr
lcall
sbb
shr
sbb
jle
fmull
sub
fdivrl
rolb
aad
cmp
stos
shrb
faddl
ds
fdivl
or
in
inc
aad
outsl
fdiv
pop
in
sbb
fsubr
rolb
sub
fdivl
xor
sub
sub
sarb
xchg
in
and
inc
popf
fdivl
aas
push
mov
push
in
nop
mov
adc
loopne
mov
add
push
in
inc
aad
outsl
fmull
stc
jecxz
mov
enter
das
fsubr
and
sub
das
fsubrs
stos
repnz
fmuls
into
insl
sub
xchg
fdivrs
shlb
in
mov
push
outsl
sub
fdiv
stc
ret
sbb
pop
pop
das
fcomp
cmp
stos
sbb
push
cmp
push
das
fcomps
adc
push
and
xchg
or
dec
push
and
fsubr
mov
pop
sbb
das
fsubr
mov
push
fadds
sbb
es
pop
fadds
sub
subb
lods
shlb
in
pop
xchg
lods
insb
fcomps
sub
dec
sbb
jne
cld
bound
aas
xor
lcall
cmp
clc
xor
xor
xor
xor
xor
xor
in
ss
mov
in
mov
in
mov
in
mov
in
mov
in
mov
popf
jns
add
in
xchg
dec
subl
dec
je
sub
repnz
das
call
add
push
in
jmp
or
inc
fdivrp
rclb
cmp
cli
imul
pop
cmp
jg
and
dec
inc
or
xchg
add
scas
mov
mov
subb
inc
rcl
cmc
stos
or
jmp
adc
mul
lcall
push
add
loop
call
push
add
loop
unpckhps
repz
push
add
loop
push
adc
xor
inc
cmp
cltd
shrb
jmp
adc
mul
lcall
push
add
loop
call
push
add
loop
unpckhps
repz
push
add
loop
push
adc
cmp
adc
std
cltd
jmp
bound
pop
notb
neg
ss
clc
pop
cld
adc
fidivl
std
repz
pop
cs
pminub
adc
stc
pop
xor
push
fidivl
repnz
add
inc
cmp
push
xorl
add
loop
add
int
fbstp
pushf
xor
js,pt
loopne
xchg
jmp
div
stos
add
adc
push
add
loop
inc
dec
inc
sub
notb
not
into
repnz
repnz
jmp
mov
cmc
xor
inc
rcll
sbb
jmp
sub
inc
inc
lcall
jg
rolb
sbb
xor
inc
xor
sbb
andb
dec
aam
insb
or
add
sub
stos
push
jmp
xor
add
mov
iret
inc
inc
cmp
jmp
pop
es
xor
fmuls
scas
sub
popf
std
xchg
inc
cmp
orb
fisttpll
adcb
inc
cmp
or
adc
lcall
sub
xor
pop
daa
xchg
repnz
nop
sbb
test
and
gs
and
inc
ds
out
xor
pop
adc
icebp
mov
add
rcll
push
int3
mov
rcl
inc
popf
xor
cwtl
ror
jnp
shl
stos
addr16
push
push
in
ret
arpl
inc
lds
inc
aam
dec
xor
rol
sarb
in
ljmp
push
rcrb
mov
stos
shll
ret
mov
insl
imul
daa
lds
lcall
mov
iret
shrl
sarl
inc
lahf
out
ja
lds
add
ss
xor
xchg
jbe
xchg
mov
fwait
out
lea
lds
les
sarl
outsl
sbb
into
jp
fisubl
sub
lcall
adc
insb
push
popf
in
mov
jl
mov
sarl
stc
pop
jne
mov
data16
adc
je
mov
rorb
movsb
stos
ficoml
in
inc
cli
add
xchg
lods
sub
mov
inc
sarl
adc
rorl
dec
lret
and
aaa
je
adc
push
inc
xor
xor
sub
insb
dec
fcoml
inc
addr16
push
xchg
adc
stos
xor
in
scas
insb
mov
mov
test
mov
mov
cmp
mov
jo
cwtl
iret
in
xor
dec
inc
xchg
fstps
inc
jo
sbb
insb
sub
mov
sub
sub
loopne
in
push
xor
imul
dec
lock
popf
mov
cmpsb
adc
outsb
stos
in
push
dec
push
std
lods
lds
inc
inc
out
jo
dec
jl
mov
mov
dec
xor
in
mov
aas
test
sbb
push
scas
in
aas
lock
in
xchg
loop
jmp
mov
stos
ret
mov
mov
mov
xor
out
sub
rorb
inc
push
aaa
add
mov
aas
cmpsb
xor
sbb
jecxz
and
add
mov
iret
mov
imul
scas
fildll
ret
or
or
cmpsl
enter
ret
mov
popa
xor
stos
pushf
mov
les
jecxz
ret
cmc
mov
imul
mov
mov
xor
push
shll
fucomi
and
rcl
fsubr
dec
aam
jmp
sub
and
outsl
and
rcrl
and
pop
repnz
add
push
adc
xchg
aam
in
adc
lods
in
aad
cmp
inc
loopne
add
stc
pop
cmc
iret
add
add
add
add
cmp
es
inc
nop
jbe
inc
sbb
adc
loop
inc
cmc
rcl
jecxz
xor
or
rcrb
xchg
mov
mov
or
adc
dec
scas
rolb
lods
inc
add
jmp
rolb
add
add
stos
lods
jge
fidivl
lods
adc
sub
mul
mov
xor
mov
rcr
or
rcll
icebp
out
mov
mov
push
push
jmp
dec
rol
mov
out
cli
addl
cmp
les
mov
cs
mov
subl
mov
or
pop
dec
add
xor
lock
ret
and
bound
scas
xchg
aad
enter
mov
shl
shr
xchg
call
sbb
xor
cli
xlat
int
aad
pop
sarb
in
inc
or
cld
shrl
divl
jno
sub
stos
in
out
es
clc
xor
mov
and
xlat
ror
fst
loop
or
ret
mov
mov
xor
xlat
cmp
shr
or
andl
xchg
and
das
pop
pop
into
mov
mov
sbb
jne
mov
mov
xorb
lcall
adc
dec
mov
loope
out
adc
push
dec
inc
adc
rcll
xlat
fldln2
adc
rorl
in
jge
js
mov
in
add
shll
loopne
cmc
sbb
rcl
ficompl
push
cmp
and
rcl
dec
call
cmp
jg
fistps
xor
mov
loope
ficoml
ljmp
push
loope
aas
in
push
dec
addr16
push
push
rcll
stc
je,pt
adc
cmp
insb
push
jp
jl
adc
lret
jg
stc
loop
lcall
int3
cmp
inc
inc
call
repnz
dec
mov
inc
das
repnz
mov
add
cmpsb
dec
aaa
imul
or
jmp
inc
sbb
ss
push
in
stos
inc
aam
movlps
dec
sbb
xor
add
clc
push
das
repnz
rclb
dec
out
inc
shlb
fidivrl
out
icebp
cmp
sub
and
mov
movsb
adc
repnz
stos
inc
clc
out
enter
out
or
push
lcall
pop
loop
cmpsb
inc
inc
jg
pop
jnp
repnz
cltd
cmp
sub
xchg
inc
xor
mov
mov
jne
cmpsl
cmp
dec
call
add
leave
inc
ds
xor
out
rcrb
cmp
jg
in
inc
testl
aad
call
xchg
ret
push
ret
push
xor
mov
aad
adc
or
imulb
iret
sahf
pop
sbb
inc
push
fucomip
or
adc
xchg
sbb
ret
cld
pop
mov
ds
addl
xchg
add
mov
iret
jp
fst
xor
pop
and
enter
adc
lea
in
cli
jmp
lea
adc
test
lock
cli
lahf
fbld
sti
lahf
fstl
jge,pt
pop
ja
ss
jbe
ss
jl
xor
and
ljmp
add
dec
and
rcl
aam
pop
xor
fcmovbe
xchg
cmp
clc
loop
cmp
aam
or
pop
in
inc
shrl
movsb
jecxz
seto
test
and
sub
int3
ljmp
shl
leave
xchg
xchg
cmc
adc
add
aad
loopne
mov
and
dec
push
aam
cmc
xor
and
stos
lods
fcomp
sbb
dec
add
in
sbb
fstps
shrb
loop
insl
loop
ljmp
jb
shrl
fst
ss
dec
repnz
cs
fildll
jae
xchg
pop
cmpsb
add
sbb
add
popf
stos
xor
add
fimuls
leave
cli
ret
pop
shll
xchg
movsl
and
adcl
fnstsw
aad
sarb
sahf
mov
push
leave
aad
stos
adc
add
fsubrs
xor
push
push
arpl
fdivs
xchg
dec
mov
xor
ds
inc
loopne
ficoml
mov
frstor
and
push
aaa
rclb
push
mov
aaa
cs
inc
aas
in
mov
aaa
outsb
xlat
and
adc
jp
aaa
sbb
repnz
or
push
popf
jl
in
or
inc
call
push
or
leave
add
lods
aam
jmp
xor
inc
hlt
mov
adc
sbb
fcompl
popf
in
icebp
dec
icebp
inc
rclb
inc
inc
ds
xor
cmp
xchg
inc
xchg
add
sti
pop
cltd
or
filds
sub
stos
add
loope
push
sbb
gs
loope
sub
in
xchg
aas
lret
mov
inc
add
add
xor
cmp
pop
imul
repnz
ss
adc
adc
clc
cmp
sub
loope
push
shll
sub
and
dec
and
loope
or
lods
cld
incb
or
fisttpl
loop
pop
xor
aas
xlat
mov
adc
inc
aad
int3
pop
andl
push
xchg
or
rcll
in
pop
icebp
add
pop
shl
sbb
rorb
add
ds
cli
jnp
or
mov
pop
mov
xchg
inc
popf
out
psrlw
fnstcw
fldln2
inc
rorl
push
mov
scas
sahf
pushf
inc
sarb
mov
and
or
pop
rorl
mov
nop
add
mov
rcll
push
sahf
nop
cmp
push
sbb
ss
imul
jle
rcll
leave
mov
test
or
inc
roll
mov
add
cmpsb
and
cmp
dec
test
push
nop
add
dec
add
mov
mov
pop
les
adc
shr
mov
cmp
add
nop
adc
jecxz
xchg
in
repz
pop
insl
int
int
sarb
lea
je
aas
and
divl
xor
xor
lret
cmp
ljmp
fldenv
scas
push
roll
or
das
in
and
pop
and
cmp
sub
jae
mov
xor
mov
popf
lds
cltd
lods
cmp
pop
xchg
aaa
add
cmp
int
xor
stos
mov
inc
xor
add
movsl
inc
jno
fcmovnb
stos
dec
fld
xor
mov
rcll
and
dec
adc
cmpsl
scas
and
adc
cli
xchg
cli
cwtl
xchg
mov
cmp
roll
enter
aad
ror
in
sub
fwait
aam
ret
cmpsl
fldl
jae
loope
dec
into
fldenv
xchg
sbb
pop
icebp
aaa
icebp
push
ds
push
lahf
mov
repz
fdivrs
mov
insl
push
hlt
negl
inc
sbb
add
jge,pt
imul
repnz
repnz
mov
inc
mov
incl
mov
test
insl
mov
mov
push
sub
inc
data16
add
ds
push
imul
push
aam
and
scas
mul
out
mull
fsubp
jp
or
inc
dec
push
loope
scas
xchg
push
sub
inc
xchg
sbb
aad
add
push
loope
dec
movsb
adc
ss
movsb
push
sahf
sbb
push
imul
push
add
inc
mov
push
push
test
mov
jb
popa
test
mov
cmp
loope
push
bound
test
mov
dec
lret
mov
scas
loope
xor
xchg
push
jno
loope
jbe
mov
pop
mov
repnz
inc
ds
repz
push
fisubs
cld
jmp
jbe
fxch
inc
push
push
lahf
mov
repnz
mov
stos
jns
add
mov
insb
lds
cmp
jmp
test
fisubl
roll
lahf
mov
xchg
sbb
dec
movsb
jo
xor
mov
push
pcmpgtb
mov
loop
push
fxch
bound
mov
aas
add
aas
fstpl
aas
adc
and
jmp
ljmp
mov
repz
xchg
fstpl
ds
inc
ds
or
push
mov
ds
ds
mov
fstpl
cmp
mov
rcrb
pop
or
push
mov
jno
loope
popf
jle
mov
loope
inc
mov
inc
mov
icebp
cli
dec
loope
xorl
cmp
out
adc
mov
loope
adc
jmp
fstpl
add
push
push
cmp
es
pop
pop
ss
gs
add
add
in
repz
dec
sbb
inc
jmp
repnz
lea
push
push
popf
jecxz
loop
mov
aaa
or
add
rolb
sbb
add
add
add
or
or
fwait
or
pop
neg
push
bound
add
fiadds
push
dec
or
loop
or
push
add
loop
push
adc
xchg
lods
or
sbb
dec
aad
neg
inc
bound
inc
neg
inc
bound
inc
neg
inc
bound
inc
neg
inc
bound
inc
repz
add
loop
inc
adc
push
add
ror
dec
inc
repnz
out
test
add
push
push
pop
push
in
fwait
push
aad
neg
add
add
adc
or
or
jmp
repnz
pop
fadds
sbb
add
fs
add
or
bound
pop
or
pop
fidivl
push
repz
add
in
jmp
push
pop
mov
xchg
sub
add
lds
arpl
lcall
addr16
or
bound
fmuls
adc
or
ss
shll
fadds
ss
xor
in
or
bound
fmuls
adc
pop
shlb
push
shll
fadds
jmp
aad
pop
cmc
sbb
out
pop
and
jmp
mov
es
sbb
dec
dec
sub
or
fcoml
pop
out
xor
mov
shl
or
sbb
sub
shl
adc
dec
int3
cmp
jne
xlat
mov
adcl
test
sbb
inc
pop
push
ds
shrb
jp
cld
repnz
inc
addl
sub
aaa
xor
or
es
push
aam
lea
decb
mov
mov
jae
inc
xor
add
sub
inc
inc
aas
mov
aaa
popa
mov
repnz
adc
sub
sub
inc
and
or
adc
pop
aas
jg
arpl
push
enter
and
sti
and
mov
mov
aaa
iret
and
jle
adc
aam
fisttpll
shl
out
cld
inc
xchg
insl
sub
xlat
loope
das
rorb
rclb
inc
sbb
clc
and
and
inc
cmp
inc
loop
aaa
shrb
aad
cmovge
mov
xchg
sti
inc
bound
jmp
or
sub
adcl
rolb
or
hlt
add
repnz
aam
push
sub
cmp
ljmp
sub
add
aad
xchg
xor
pop
add
test
jge
and
sbb
pop
xchg
ljmp
add
and
cmp
xor
xchg
jg
inc
scas
inc
inc
inc
adc
cmc
cld
test
ljmp
dec
repnz
add
sbb
sbb
shrl
dec
cmp
or
push
cli
rorb
fadds
aam
aam
sub
and
xchg
dec
adc
mov
adc
mov
xchg
out
jo
xor
jae
add
dec
decl
cmp
out
jg
loopne
testb
jmp
pusha
test
mov
lods
inc
in
adcl
inc
inc
in
and
mov
xor
inc
sti
push
cmp
enter
loop
push
xor
lcall
mov
aaa
ss
jmp
enter
xor
add
xor
mov
fadd
pop
sub
or
xchg
or
inc
jge
ss
shrb
shl
dec
push
fstps
sub
add
adc
inc
movsb
insl
sub
and
fisttps
inc
add
add
add
add
and
arpl
pusha
repnz
pushf
mov
xor
sub
or
mov
loop
and
push
push
xchg
xor
inc
inc
dec
hlt
cmp
jbe
ficoms
adc
lea
sub
xlat
xor
arpl
push
in
pop
adc
and
hlt
add
inc
out
add
repz
adc
push
pop
fcmovne
adc
push
sub
jecxz
cli
pop
push
adc
and
enter
add
xor
fdivrs
mov
lea
cli
notl
mov
inc
data16
sbb
sbb
mov
push
test
out
sbb
negb
ljmp
sbb
xchg
stos
cmp
and
ss
stos
shlb
dec
jmp
inc
clc
sbb
ds
inc
repz
in
sbb
cld
notrack
inc
add
add
sub
sub
push
repnz
pop
sbb
xchg
roll
cmc
or
ss
loopne
ss
xlat
push
xchg
leave
adc
sbb
push
and
inc
cmp
out
ficomps
push
or
jg
std
jmp
addb
rcl
out
inc
jg
fists
jle
xor
addl
dec
aaa
loop
pop
popl
cmpsl
pop
mov
or
jb
cmpsb
cmp
pop
stos
add
movsb
push
jne
adc
push
push
pop
push
adc
mulb
ficompl
push
inc
add
add
xchg
aaa
pusha
out
fcompl
xlat
inc
addl
pop
and
in
inc
cmp
rcl
ficompl
cmp
ds
idiv
ret
aam
sub
imul
bound
adc
inc
xor
out
and
sbb
aaa
cmp
sub
hlt
adc
loopne
cmp
and
ds
jecxz
xchg
loop
mov
xor
fildl
add
adc
into
or
bound
popa
shl
xor
add
pop
dec
dec
add
loop
rcl
or
inc
fistl
dec
dec
sub
or
add
xchg
or
dec
add
pop
rclb
xor
out
pop
push
or
rcr
in
test
pop
add
mov
fstpt
or
das
aas
cmpb
dec
fisttpl
sub
jp
aas
test
stos
or
sub
adc
cmp
push
xor
orb
fwait
and
jle
fldt
sarl
jmp
aad
rcr
push
adc
bound
mov
repz
jb
loop
out
out
mov
inc
mov
outsl
aas
in
rclb
lcall
mov
repnz
adc
aas
mov
test
ja
stos
loopne
cmpsb
sbb
rep
pushf
sarb
lods
or
aad
inc
jmp
xor
jb
ljmp
test
xor
insl
call
outsl
loop
fcomps
fldt
jne
jmp
es
lods
and
add
add
fdivrs
push
or
imul
pop
cmp
jle
push
sub
hlt
and
mov
mov
or
out
cmp
jecxz
xchg
popa
xchg
bound
adc
test
and
ret
or
test
into
inc
inc
aaa
inc
inc
sbb
ss
fstl
repnz
push
sub
ljmp
pop
daa
cwtl
gs
sarb
add
aam
jo
xor
jmp
add
mov
xor
add
call
add
inc
cmp
or
in
or
in
lods
inc
fdivr
or
dec
or
dec
lock
stc
aam
rcr
call
fsubrl
gs
sbb
ja
sbb
scas
inc
fdivl
std
dec
or
xchg
lds
test
adcl
adc
loopne
loop
bound
ret
repnz
sub
inc
aaa
ja
repnz
push
cmp
fists
sub
push
notl
repz
cld
push
ja
sbb
pop
insl
xchg
and
scas
mov
jecxz
xchg
sub
hlt
ret
jae
cli
push
clc
call
lcall
cmp
sbb
repz
xlat
rcll
sbb
pop
insb
popa
aad
loope
mov
push
pop
inc
aad
pushf
push
int
push
inc
test
es
add
sub
jmp
mov
loope
xchg
aad
ss
pop
aad
ss
or
aam
outsl
aas
loope
movsl
aad
add
cvtps2pd
add
jmp
adc
outsb
add
adc
jmp
fsubrs
sbb
loop
ret
mov
insl
mov
pop
or
fs
mov
adc
pop
jmp
repz
cmpsb
imul
bound
dec
fdivs
sbb
out
out
into
push
mov
push
dec
pop
cli
adc
test
jmpw
imul
xchg
push
push
pop
and
fs
jmp
fcom
sbb
addr16
addr16
jmp
or
negb
data16
mov
push
shr
test
jmp
fsubs
sbb
add
fdivp
fwait
gs
gs
repz
loope
test
mov
adc
test
ds
imulb
aad
stos
int
xchg
cmpb
push
cmp
and
sbb
adc
add
add
aaa
fsubrs
jg
and
outsb
xchg
and
cli
push
xchg
cmpsb
stc
in
xor
jo
jno
lods
daa
inc
fisubs
sti
xchg
or
popa
and
stc
mov
lods
cmp
xor
dec
inc
mov
pop
add
jle
adc
inc
clc
icebp
and
xor
dec
cs
mov
fldenv
mov
in
enter
imull
cmp
dec
add
mov
xor
inc
mov
aas
inc
cs
aas
adc
inc
sbb
push
push
mov
fimull
sbb
rcrl
mov
aaa
or
inc
out
xor
lods
and
aaa
dec
cmpsl
adc
xor
inc
fs
sbb
mov
call
fimuls
sub
pop
ds
sbb
inc
inc
daa
xor
adc
or
adc
aaa
ljmp
inc
aas
xor
aaa
inc
icebp
in
push
mov
cs
xor
das
sub
sbb
out
and
inc
inc
aad
adc
mov
adc
add
in
or
pop
adc
cmp
xchg
loope
inc
inc
sarb
cli
cs
push
inc
push
xor
mov
sub
pop
lock
inc
pop
fdivrl
jl
or
aas
call
scas
inc
add
jmp
and
push
push
add
scas
inc
adc
rcrb
push
aas
pop
mov
das
aas
mov
loope
adc
in
or
xor
adc
sbb
xchg
xor
jmp
or
push
add
cs
sbb
or
sar
add
in
loop
add
adc
add
push
or
inc
repnz
or
ds
jnp
push
pop
sub
sbb
pop
pop
and
add
pushl
pop
ds
pop
jne
or
or
fisttpl
fcmovnbe
in
outsl
inc
xor
aam
rsm
push
in
xor
test
push
lods
mov
inc
jbe
push
loop
dec
xchg
cmp
pop
in
mov
inc
mov
roll
xor
inc
or
jb
and
push
sub
and
orl
xor
andb
pop
cmp
sti
icebp
clc
sbb
push
xor
clc
adc
mov
push
aam
test
mov
push
mov
adc
fs
mov
or
inc
cmp
imul
orb
push
sub
pop
in
xor
mov
sti
cmp
popf
push
ss
or
xor
aam
mov
sub
fstpl
fcoms
test
add
sub
dec
inc
inc
xor
push
sbb
and
add
push
jae
rep
adc
or
ljmp
xchg
in
test
push
jns
inc
xchg
fdivrl
bnd
cltd
ds
inc
push
mov
add
xor
stos
shlb
sbb
sub
nop
sahf
xor
push
cs
mov
xor
jecxz
xor
sbb
loope
or
adc
xchg
xor
repnz
and
ljmp
inc
inc
enter
aam
repnz
add
dec
cs
add
int
inc
inc
dec
daa
add
sbb
jo
pop
test
lret
or
adc
add
ss
mov
filds
sbb
xchg
incb
imul
cs
aad
sub
inc
inc
and
cmp
aas
or
mov
pop
jne
rcll
in
xchg
inc
pop
dec
dec
ds
in
call
cli
push
push
addb
jg
inc
ljmp
cmp
xor
or
pop
xchg
or
add
call
cmp
insb
pop
ss
cli
cmp
inc
in
loope
inc
dec
and
sbb
in
fists
testl
mov
loop
lcall
cmp
ljmp
cs
notl
mov
and
push
cltd
xor
aaa
in
sbb
insl
clc
or
and
xlat
sbb
cmpsb
ja
sub
cmp
mov
mov
jle
add
fisttps
inc
loope
jmp
mov
cli
pop
push
lea
push
push
stos
xchg
sbb
xchg
aad
mov
inc
ljmp
repnz
push
cmc
pusha
jecxz
add
fistl
mov
add
and
mov
in
xor
repnz
ss
mov
inc
xor
ljmp
push
aaa
scas
xchg
cmp
cmp
add
adc
mov
push
sub
push
mov
adc
divl
mov
aas
out
sbbb
mov
dec
cli
and
sub
aas
not
inc
cwtl
xchg
int3
std
lcall
in
push
cs
xchg
and
mov
inc
push
push
sbb
pop
pop
pop
enter
jecxz
adc
sbb
fneni(8087
sub
and
mov
rclb
xor
xor
sbb
cmp
fdivs
xchg
or
inc
dec
and
xor
aas
cli
push
loope
in
out
or
in
in
sbb
xchg
xchg
pop
sub
sbb
ds
in
es
push
push
add
fnstenv
ss
xor
mov
div
xor
jb
bnd
out
push
cmp
sub
rcrb
and
and
rcl
in
fisubrl
xlat
dec
and
adc
jmp
testb
lahf
and
fildll
int
adc
in
add
adc
aaa
lahf
dec
sub
orb
add
cmc
fcmovu
and
add
div
stos
loope
sub
aaa
insb
loope
iret
cmp
loope
dec
cld
daa
xor
lahf
icebp
inc
or
dec
adc
andl
and
rcr
xchg
xorb
pop
cmp
in
adc
inc
mov
mov
jl
mov
cmp
sub
sub
mov
popa
ds
lret
add
sub
jmp
stos
ss
sbb
aas
in
cs
xor
add
inc
and
movsl
jle
loop
xor
loop
and
ds
inc
cmp
add
fstpl
mov
ds
or
adc
dec
test
pop
sbb
jae
xlat
and
cmp
lret
push
cmc
icebp
inc
loopne
ret
push
sahf
fucom
push
fstl
aaa
rclb
sub
enter
adc
sub
and
mov
or
aaa
xchg
cs
loope
xor
lret
or
and
add
xor
pop
xor
xchg
adc
sub
pop
dec
adc
aas
inc
or
dec
in
fiadds
jb
call
inc
xchg
mov
ret
adc
in
sbb
stos
ss
cmp
inc
insl
mov
adc
popa
push
in
push
cmc
pop
cmc
bndldx
pop
popf
aad
or
sbb
or
fcompl
dec
xor
sub
cmp
push
mov
test
cmp
addr16
stc
mov
std
sbb
dec
xor
mov
adc
sub
inc
adc
sub
inc
xor
dec
push
inc
test
cmp
push
imul
arpl
fnstsw
inc
test
dec
loope
dec
inc
cmp
and
adc
lcall
cli
xorl
sub
sbb
xorb
and
sbb
stos
inc
fstpl
out
popf
jns
dec
loope
roll
mov
mov
sar
or
inc
das
shlb
loope
and
adc
pop
cs
and
add
popf
dec
and
xor
loope
push
add
adc
inc
adc
leave
xchg
and
xchg
sbb
lods
ds
shrb
inc
or
adc
push
adc
and
stc
xchg
push
add
ss
xor
stos
xlat
movb
data16
mov
daa
mov
in
or
loope
out
adc
out
and
loop
repnz
add
mov
mov
push
inc
inc
jecxz
mov
mov
xor
insl
imul
fdivrl
fwait
in
mov
and
stc
call
jle
jl
rclb
inc
loope
repnz
push
fidivrs
pop
adc
adc
inc
loope
stos
fcomip
pop
dec
jge
pop
fcmovnu
sub
lret
xor
arpl
sar
repnz
aaa
dec
dec
std
loope
adc
inc
fstl
inc
dec
cmp
add
cmp
inc
xor
mov
push
pop
push
xor
adc
fcmovbe
je
cli
mov
jg
sbb
xor
dec
cmp
sub
push
jmp
pop
lahf
mov
ret
push
jne
sub
rcl
clc
bound
rcl
add
fimull
pushf
in
cmpsl
push
cli
push
pop
sub
xchg
out
push
inc
repz
add
push
inc
xor
pop
jmp
push
cmp
inc
xor
flds
xchg
xchg
inc
in
andb
and
repnz
clc
mov
loopne
pop
push
das
xor
cmp
or
aaa
pop
xchg
and
add
in
xchg
sub
and
jle
push
out
or
fidivs
fwait
dec
inc
add
sub
jecxz
ret
cmp
and
mov
push
sbb
int
push
cmc
mov
fistpl
add
ss
test
or
add
stos
insl
pop
sub
mov
in
sbb
push
ss
adc
dec
push
push
inc
aaa
push
mov
test
push
aam
push
inc
cmpb
sub
mov
je
aad
push
mov
cwtl
shrb
adc
testl
add
rclb
faddl
or
cltd
inc
push
push
inc
outsb
hlt
stc
add
fsubl
mov
bnd
cmp
repnz
pop
fmuls
hlt
insl
outsl
faddl
cltd
xor
cmpsb
xor
sub
and
sbb
xlat
jg
es
adc
shll
add
adc
popa
sbb
push
push
mov
or
pop
cs
dec
pop
pop
pop
adc
aam
and
test
cs
int
es
and
add
aas
pop
inc
das
push
cs
hlt
jmp
adc
push
shr
hlt
pmuludq
adc
outsb
and
out
ss
mov
or
pop
push
ss
rolb
push
push
dec
xchg
inc
xor
fimuls
and
pop
testl
bound
call
adc
sbb
sub
in
jbe
xchg
add
addr16
xor
cmp
and
notb
jmp
lcall
adc
cs
sub
mov
xchg
inc
mov
inc
aas
cld
dec
jae
ret
adc
jae
fsubrp
mov
mov
imul
or
mov
in
das
xor
and
fildl
ss
lods
and
fs
fstpt
fs
inc
pushf
sub
inc
mov
xor
add
jae
xchg
push
fists
in
push
xor
daa
push
stc
stos
jae
hlt
push
enter
fisttpll
mov
xor
mov
sbb
sbb
cmc
push
mov
pop
cmp
pop
push
loopne
xor
sub
insl
sbb
and
jmp
xor
sbb
or
sbb
aas
xlat
inc
lahf
add
jl
mov
push
xchg
lea
adc
dec
adc
add
fucom
lods
push
dec
daa
jg
sarb
fcomps
iret
incb
xchg
mov
adc
xor
inc
jmp
add
add
aaa
sbb
add
pop
jg
jnp
inc
enter
add
add
pop
or
add
jns
xor
add
and
adc
xor
jbe
sub
cmp
pop
out
or
and
in
js
push
add
out
cmp
aas
add
js
xlat
cmp
jo
cmp
xor
sbb
and
cmp
cs
mov
fisubl
xor
mov
jmp
shll
pop
es
adc
push
movsb
aaa
inc
sbb
add
xchg
push
ljmp
es
mov
ljmp
mov
andb
or
xorl
xor
cmp
xchg
fisubl
cmp
lods
stos
or
push
ss
or
mov
in
mov
or
jg
push
cmp
repz
dec
jae
sub
pushf
fimull
inc
inc
xor
jne
add
adc
jecxz
add
fisubl
jne
xchg
call
and
out
into
aam
xchg
rclb
in
or
out
insw
imul
dec
sub
inc
jecxz
pop
aam
in
or
jecxz
in
add
xchg
sbb
out
mov
addl
cmc
jg
xchg
push
cmpsl
lods
dec
inc
cmp
xor
add
xor
and
xchg
inc
adc
add
sti
dec
mov
fists
stos
push
adcb
addr16
or
cmp
aam
loop
shrl
in
test
or
jge
rorb
push
add
jl
cmp
ret
and
cmp
shll
or
or
add
aam
loopne
fstp
push
push
lcall
aaa
push
fisubl
xlat
xor
push
adc
out
out
push
sbb
icebp
cmp
mov
fsub
sub
sub
ds
sub
loop
daa
inc
xor
push
push
and
ds
fmull
inc
cmp
pop
pop
dec
or
shll
mov
sbb
stos
inc
xor
shll
aaa
cmp
mull
cmp
mov
add
loop
adc
xchg
push
in
in
inc
dec
hlt
sub
call
xchg
cmp
push
nop
or
add
mov
pop
jbe
js
notb
sti
aad
repz
and
cmp
cmp
sub
inc
adc
fdivs
pop
dec
pop
push
cmp
data16
enter
or
pop
gs
or
pop
cltd
or
call
push
testl
repnz
notb
xor
shlb
pop
mov
inc
cmp
jg
addb
jg
movsb
mov
pop
out
mov
in
add
hlt
pop
aad
jbe
pop
loopne
xchg
or
jecxz
sbb
and
push
sbb
cmp
mov
jmp
sti
sub
bound
inc
xlat
or
fiadds
cmc
int3
add
cmp
sbb
jle
pop
inc
or
adc
sbb
xchg
add
popa
sbb
xor
adc
pop
and
xor
mov
pusha
rclb
js
repnz
xor
sub
adc
cld
pop
inc
dec
sub
xor
loop
ljmp
push
xlat
ds
pop
adc
std
int3
add
adc
ficoms
idiv
xlat
sbb
xchg
jecxz
add
xchg
popa
adc
arpl
push
inc
add
and
rol
xor
xor
loop
adc
adc
loop
or
arpl
cwtl
lods
repnz
movsl
repnz
and
cld
mov
dec
loop
jo
addr16
cmp
xchg
aaa
adc
in
ret
inc
cmp
push
jne
pop
adc
add
stos
add
or
call
test
dec
inc
ss
inc
cli
xchg
out
sbb
or
pop
or
imul
gs
inc
mov
loopne
jl
jno
jl
cwtl
xchg
add
push
clc
pop
pop
pop
inc
push
lods
popf
aas
pop
and
rorb
dec
adc
daa
sub
sbb
rolb
int3
jmp
cld
jbe
mov
out
cmp
dec
clc
pusha
test
hlt
cmp
aas
push
xor
and
and
sub
sub
push
negl
or
inc
pop
sbb
xchg
iret
loop
sbb
push
test
fnstsw
lahf
out
xchg
out
fmuls
xor
lret
das
or
fsubp
or
aam
mov
lods
int
sti
cmc
push
sbb
sti
xchg
sub
mov
sbb
pop
mov
scas
aam
lahf
rcrl
xor
xor
les
cmp
sbb
sahf
inc
and
mov
rorb
jo
xor
loopne
fadd
outsb
andb
mov
push
mov
sub
sub
sarb
fstpl
or
notl
std
xor
sub
and
sbb
movsb
fisttpl
push
xchg
cmp
call
push
inc
fimuls
add
mov
inc
xor
ljmp
rolb
push
aaa
addr16
fstps
shlb
bnd
ja
push
enter
jns
or
aaa
inc
inc
sub
stos
aaa
or
adc
ss
dec
cld
add
js
loopne
rorb
sub
fnstcw
call
push
fsubr
stos
call
leave
push
repnz
aam
incb
sub
hlt
lcall
aaa
ss
repnz
push
cmp
push
push
aaa
fcoms
dec
es
fstps
mov
xlat
sub
sub
cmc
push
loope
aaa
inc
frstor
push
jb
pop
roll
mov
sbb
iret
addb
adc
std
mov
inc
or
add
repnz
jge
fcoml
aam
sti
adc
pop
lock
xor
jo
jge
jecxz
xlat
pop
and
dec
rcll
adc
mov
cmp
xchg
shl
push
scas
cmp
mov
and
xor
movsl
js,pt
add
inc
test
cmc
jae
imulb
frstor
inc
sub
stos
add
cmp
sti
cmp
fiaddl
loop
xor
xor
jnp
inc
cmpsl
imul
cli
fsts
addl
test
xor
inc
sbb
adc
imulb
pop
clc
cmc
repnz
adc
inc
jg
sbb
out
aaa
xchg
mov
cmp
loope
adc
loopne
shll
add
xchg
ljmp
aaa
ss
adc
rcl
shlb
push
adc
repnz
fstpl
cld
dec
adc
in
sarb
xchg
ss
sbb
mov
mov
cmp
js
orb
in
ss
cwtl
mov
inc
aaa
xchg
push
js
xchg
in
ss
sbb
arpl
sub
dec
call
in
inc
add
or
rcr
out
cmp
adc
adc
xor
pop
push
pop
add
and
aad
xchg
push
pop
inc
loop
xlat
pusha
fidivl
dec
mov
enter
loop
xchg
inc
adc
sti
xchg
lock
addr16
jb
or
es
ljmp
push
jp
pop
dec
fwait
mov
aad
sti
pop
rcl
add
sub
fs
xchg
adc
imul
jp
shlb
fists
in
clc
xchg
out
or
dec
xor
pop
cmp
pop
xor
ljmp
mov
cmp
mov
xchg
jle
fnstenv
fldenv
fstpl
fsts
aad
test
jge
cmp
mov
aad
cli
sahf
inc
out
cmpsb
aaa
ss
frstor
pop
gs
lcall
xlat
sbb
loope
push
mov
xor
mov
and
pop
ss
fptan
mov
fstps
aam
aam
inc
cli
add
push
std
call
das
faddl
adc
jecxz
loopne
repnz
fprem
mov
sub
lcall
and
jge
adc
fldl
stos
add
cwtl
inc
les
mov
or
repz
mulb
xor
mov
stos
inc
inc
ficomps
icebp
cltd
loop
inc
adc
in
push
push
mov
and
fnstenv
lea
popa
imul
xchg
and
mov
stos
inc
cmp
out
add
orl
rolb
adcb
push
std
cmpsb
xor
shrl
testl
inc
ljmp
push
sub
add
rcll
fsin
repz
test
sub
hlt
fwait
sub
call
adc
lea
jns
add
inc
ss
mov
xor
push
inc
fcmovnu
gs
ds
and
loop
mov
xor
out
fwait
mov
inc
sub
xor
xchg
xor
call
sub
icebp
adc
in
jne
cmp
mov
pop
pop
sub
pop
and
xchg
adcb
xor
insb
lods
and
inc
inc
and
push
cmp
cld
test
dec
jb
pop
in
adc
inc
add
sub
aas
lods
adc
push
stos
dec
ss
sbb
mov
dec
ret
add
jbe
xchg
fwait
lret
push
sti
call
inc
adc
fiadds
sub
cmp
inc
push
jl
out
adc
cmp
mov
mov
ficoml
fcomp
addr16
xchg
jnp
inc
shlb
pop
inc
aaa
ss
xlat
lock
xchg
and
jbe
shl
rclb
insl
xchg
xor
fwait
jmp
stc
dec
shl
loop
sub
xor
fucomp
fsubrp
sbb
repz
push
aaa
push
xchg
rcr
aas
pop
inc
shrl
in
in
rcl
lods
aam
cmp
inc
loop
xor
aam
add
rcr
loope
xchg
or
incl
push
push
dec
dec
incl
or
push
enter
push
add
jmp
xchg
cmp
fcoms
push
lock
in
sub
inc
loop
imul
fdiv
int3
das
jb
push
inc
add
popf
sbb
add
fistl
or
repnz
inc
cli
stos
add
sub
mov
mov
hlt
and
jb
sub
cmp
push
xor
and
jecxz
add
call
xor
sub
jp
fnstenv
stc
not
xchg
es
fs
adc
cmc
push
adc
call
jb
enter
loope
inc
sbb
rcrb
out
push
loop
sbb
xor
aad
hlt
inc
or
jmp
in
adc
jno
sbb
pop
aaa
fsubrp
fists
minps
adc
push
repnz
lock
sbb
sbb
es
imul
out
les
pop
or
fcomps
insl
inc
in
insl
and
vpsrad
adc
adc
cld
repz
xchg
fdiv
fsub
popf
add
inc
sub
pop
fsubp
or
jecxz
sbb
in
movsb
cld
mov
daa
mov
jmp
je
dec
loop,pt
cmp
xchg
sub
rclb
inc
mov
fwait
inc
rcrb
xchg
or
inc
inc
aaa
inc
aam
shlb
fcoml
and
sbb
or
inc
imul
push
inc
shlb
pop
add
es
adc
fsts
pop
fdecstp
sub
stos
inc
mov
hlt
sub
xchg
pop
call
cmc
mov
inc
cli
inc
inc
sahf
push
ds
aas
icebp
iret
ss
addb
mov
test
fcmovu
mov
cmp
out
sbb
lret
neg
mov
inc
jae
pop
ss
pop
inc
jge
fdivp
sub
negb
repnz
inc
cli
sbb
repnz
imul
dec
inc
inc
inc
ficompl
inc
adc
aaa
ljmp
adc
xchg
xchg
loop
aas
and
inc
inc
push
pushl
shrb
loope
or
hlt
adc
sub
stc
fidivrl
stos
cmp
fistps
fwait
lret
push
add
cld
mov
cmpsl
and
fildll
or
jmp
push
add
fucomp
jo
movsb
jmp
stc
shrb
idivb
jbe
cmpsl
jmp
sti
jns
leave
push
lock
cli
jge
mov
dec
shll
mull
rcl
movsl
mov
shl
jmp
fcmovu
cmc
adc
xchg
xor
aam
xor
ds
repnz
les
add
push
xor
xlat
lret
and
and
int
and
xchg
add
add
add
int3
xor
fidivrs
cmc
cmc
and
pop
xlat
daa
xchg
fiaddl
xchg
mov
inc
stc
rcrb
insl
xchg
jp
ret
stc
xor
jp
fdivp
and
inc
sbb
adcl
push
adc
test
xchg
cmp
fstpl
out
into
adc
loop
test
inc
inc
rcl
add
xchg
dec
fisttpll
aam
and
lcall
mov
scas
cmc
xchg
das
sbbl
mov
outsb
mov
mov
push
cmp
ds
ss
js
insb
push
adc
rcrb
lods
push
aad
unpckhps
xor
out
test
sub
faddp
add
scas
lret
mov
insb
stos
mov
insb
mov
insb
outsb
data16
pop
cmp
aad
dec
inc
cmp
js
insb
and
push
js
insb
or
cmp
js
insb
repnz
or
js
insb
stos
sahf
cmp
xchg
or
aad
in
bound
pop
movsl
aad
pop
inc
cmp
xor
xchg
pushf
adc
mov
sbb
insb
add
cmp
js
insb
loop
cmp
js
popf
into
or
push
mov
sahf
push
xchg
movsl
mov
xchg
jbe
outsb
pop
push
push
bound
push
dec
movsl
inc
pop
cmp
push
sub
push
push
movsl
push
pop
repnz
ljmp
into
or
inc
aad
movsl
cmpsb
pop
sahf
xchg
push
mov
push
push
bound
pop
push
push
dec
movsl
inc
pop
xor
push
and
push
mulb
push
fisubs
popa
outsl
aad
push
mov
scas
pop
cmpsb
sahf
push
lcall
jbe
push
mov
pop
inc
aad
movsl
dec
pop
ds
sub
push
push
movsl
cli
pop
repnz
or
inc
aad
movsl
mov
scas
cmpsb
push
sahf
movsl
xchg
pop
mov
pop
push
push
push
movsl
dec
pop
inc
cmp
xor
push
push
movsl
push
pop
testb
movsl
loop
fcmovbe
or
or
mov
stos
movsl
sahf
pop
xchg
mov
andb
pop
movsl
push
pop
dec
inc
push
cmp
push
sbb
push
mulb
push
shrb
pop
inc
aad
movsl
cmpsb
pop
sahf
xchg
push
mov
push
outsb
movsl
popw
pop
push
push
dec
movsl
inc
pop
cmp
push
movsl
push
pop
push
push
push
push
movsl
pop
imul
push
loop
ficompl
ror
mov
dec
push
cmp
js
insb
push
push
cmp
js
imul
aad
pop
push
push
push
movsl
dec
pop
inc
ds
movsl
cs
sbb
adc
push
repnz
ljmp
lret
js
inc
aad
movsl
cmpsb
pop
sahf
xchg
push
mov
push
outsb
movsl
popw
pop
push
push
dec
movsl
inc
pop
cmp
push
sub
push
or
push
out
ficompl
rol
pusha
add
inc
aad
movsl
cmpsb
pop
sahf
xchg
push
mov
push
movsw
pop
pop
push
dec
push
inc
movsl
cmp
xor
push
and
push
movsl
negb
out
out
fisubrl
add
movsl
aad
pop
mov
sbbb
jb
push
bound
pop
push
push
inc
movsl
ds
ss
movsl
sbb
adc
push
add
push
fisubs
sub
inc
aad
movsl
cmpsb
pop
sahf
xchg
push
mov
push
movsw
pop
pop
push
dec
push
movsl
xor
sub
push
push
movsl
or
add
push
repnz
ljmp
lret
js
insb
add
cmp
pop
lcall
jbe
push
jp
outsl
fldenv
aad
movsl
dec
xor
mov
insb
and
cmp
js
insb
idivb
ljmp
fisubs
mov
stos
sahf
cmp
jbe
outsb
js
insb
push
dec
cmp
ds
xor
cmp
js
insb
or
cmp
js
insb
ljmp
cmp
mov
stos
insb
mov
xchg
cmp
bound
and
inc
aad
xor
in
aad
js
insb
push
push
cmp
js
insb
repnz
lret
sub
insb
stos
mov
insb
xchg
jb
push
bound
dec
js
insb
sub
and
insb
adc
cmp
js
insb
repnz
std
inc
std
add
cmpsb
sahf
cmp
jle
jbe
outsb
insb
pop
cmp
dec
insb
inc
cmp
js
insb
es
cmp
js
insb
push
cli
cmp
js
insb
aas
lret
dec
cld
pop
cld
cld
add
mov
insb
pop
cmp
dec
insb
inc
cmp
js,pn
insb
push
adc
or
insb
cli
out
cmp
js
insl
into
sti
fbld
mov
scas
mov
insb
xchg
jbe
outsb
insb
pop
cmp
inc
insb
cmp
cmp
js
insb
sbb
cmp
js
insb
cli
repnz
js
insb
fcmovbe
aas
lret
inc
cli
push
cli
mov
insb
xchg
mov
cmpb
jb
cmp
pop
insb
push
dec
cmp
js
insb
sub
cmp
js
insb
push
cmp
js
insb
aas
into
stc
mov
mov
scas
js
insb
sahf
xchg
cmp
jb
push
bound
cmp
inc
insb
cmp
cmp
js
insb
adc
cmp
js
insb
ljmp
lret
clc
push
clc
mov
cmp
jp
jb
push
bound
dec
js
insb
ds
js
insb
sbb
cmp
js
insb
cli
repnz
js
insl
into
testl
mov
cmp
mov
jle
jbe
outsb
cmp
push
insb
dec
inc
cmp
js
insb
and
cmp
js
insb
add
cmp
js
insb
ds
testb
mov
cmp
xchg
jle
jbe
outsb
bound
push
js
insb
inc
cmp
js,pn
insb
push
push
cmp
js
insb
imul
cmp
js
insl
ror
cmc
inc
inc
aad
mov
scas
cmpsb
cmp
xchg
jle
jbe
outsb
bound
push
js
insb
inc
cmp
js
insb
push
or
js
insb
out
out
fidivrs
xchg
into
hlt
and
hlt
mov
insb
mov
mov
cmp
data16
pop
push
cmp
inc
insb
ds
js
insb
push
push
cmp
js
insb
repnz
js
insl
into
repz
dec
rep
repz
scas
cmp
mov
xchg
insb
jbe
cmp
pop
insb
push
dec
cmp
ds
ss
js
insb
push
push
cmp
js
insb
imul
cmp
js
scas
into
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
inc
cmp
js
insb
es
cmp
js
insb
idivb
out
js
insb
ds
test
mov
cmp
xchg
jle
jbe
outsb
bound
pop
js
insb
dec
inc
cmp
js
insb
sub
cmp
js
insb
or
cmp
js
insb
loop
cmp
mov
lock
pop
lock
sahf
xchg
cmp
jbe
push
bound
cmp
ds
ss
js
insb
adc
cmp
js
insb
repnz
fidivrs
scas
lret
out
push
out
mov
cmp
jle
jbe
outsb
insb
pop
cmp
dec
insb
inc
cmp
js
insb
sbb
adc
insb
add
cmp
js
insb
loop
cmp
mov
out
dec
pop
out
out
push
out
movsl
out
pop
out
out
add
jp
cmp
bound
cmp
ds
ss
js
insb
push
push
cmp
js
insb
out
out
fidivrs
cltd
into
in
and
in
mov
cmp
jbe
outsb
js
insb
pop
push
cmp
ds
sub
push
js
insb
push
cmp
js
insb
out
cmp
mov
in
inc
pop
in
in
push
in
movsl
in
push
in
mov
insb
xchg
jbe
outsb
insb
pop
cmp
inc
insb
cmp
cmp
js
insb
sbb
cmp
js
insb
cli
repnz
js
insl
fcmove
jmp
dec
jmp
aad
mov
cmp
xchg
jle
jb
push
cmp
push
insb
dec
cmp
js
insb
push
push
cmp
js
insb
idivb
out
js
insb
ds
ljmp
mov
cmp
mov
jle
jbe
outsb
bound
push
js
insb
inc
cmp
js
insb
and
inc
lret
test
aad
push
out
movsl
out
or
jmp
mov
mov
mov
push
bound
push
inc
movsl
cmp
cs
sbb
push
cli
movsl
repnz
ljmp
inc
js
inc
aad
movsl
mov
mov
push
bound
push
inc
movsl
cmp
xor
push
and
push
add
push
loop
ficompl
ror
pop
out
inc
aad
movsl
mov
stos
sahf
push
xchg
movsl
mov
xchg
outsb
movsl
popw
pop
push
push
dec
movsl
inc
pop
ds
movsl
es
push
adc
or
push
out
ficomps
into
mov
mov
scas
cmpsb
push
sahf
movsl
xchg
pop
mov
pop
pop
push
push
movsl
dec
pop
inc
cmp
xor
push
adc
push
out
movsl
loop
fcmovbe
or
in
mov
add
in
in
in
aad
cmp
jbe
outsb
cmp
scas
aad
push
inc
movsl
cmp
cs
push
movsl
push
pop
push
push
push
movsl
repnz
out
push
lods
into
in
js
inc
aad
movsl
cmpsb
pop
sahf
xchg
push
mov
push
outsb
movsl
popw
pop
push
push
inc
movsl
cmp
xor
push
push
movsl
push
pop
push
push
push
movsl
negb
out
out
fisubs
movsl
outsl
aad
push
mov
stos
pop
mov
mov
cmpb
movsl
push
bound
dec
movsl
inc
pop
ds
movsl
and
sbb
push
or
push
out
ficompl
ror
mov
dec
loop
aad
scas
cmpsb
push
sahf
movsl
xchg
pop
mov
pop
pop
push
push
movsl
dec
pop
inc
ds
movsl
cs
and
push
adc
push
repnz
ljmp
lret
js
insb
loope
cmp
js
inc
aad
movsl
sbbb
outsb
push
movsw
pop
pop
push
dec
push
inc
movsl
ds
ss
movsl
push
pop
push
push
push
push
movsl
pop
imul
push
out
ficomps
into
pop
loopne
inc
aad
movsl
mov
stos
mov
pop
cmpb
movsl
push
bound
push
movsl
dec
pop
xor
sub
push
push
movsl
pop
imul
push
loop
ficompl
ror
mov
mov
mov
push
mov
addb
movsl
outsb
pop
pop
push
push
movsl
dec
pop
inc
cmp
xor
push
push
movsl
add
imul
push
loop
mov
inc
ficomps
add
xchg
mov
xchg
insb
outsb
bound
push
js
insb
inc
cmp
js
insb
push
push
cmp
js
insb
idivb
out
js
insb
ds
and
mov
cmp
xchg
jle
jb
push
cmp
push
insb
inc
ds
std
ss
fldcw
movsl
aad
pop
push
push
push
push
movsl
add
cli
out
push
out
ficomps
rol
mov
dec
fdivrl
fsubrl
mov
pop
xchg
jbe
outsb
pop
pop
push
push
movsl
dec
pop
inc
cmp
xor
push
or
push
ljmp
fldt
insb
fcmovnu
cmp
outsl
aad
push
xchg
movsl
mov
xchg
jbe
outsb
pop
pop
push
push
movsl
dec
pop
inc
ds
movsl
cs
sbb
push
movsl
add
cli
repnz
ljmp
lret
mov
push
mov
mov
andb
pop
movsl
push
pop
dec
inc
push
movsl
xor
sub
push
push
movsl
push
pop
push
incb
repnz
ljmp
lret
outsl
aad
push
scas
movsl
cmpsb
pop
lcall
jbe
push
movsw
pop
pop
push
dec
push
inc
movsl
cmp
xor
push
push
movsl
push
pop
push
push
push
movsl
repnz
ljmp
cmp
push
scas
movsl
cmpsb
pop
sahf
xchg
push
mov
push
push
pop
pop
push
dec
push
inc
movsl
ds
xor
push
push
movsl
push
pop
push
push
push
cli
movsl
repnz
ljmp
lret
js
inc
aad
movsl
stos
pop
mov
xchg
jle
push
push
bound
push
dec
push
inc
movsl
cmp
xor
push
push
movsl
push
pop
push
push
push
movsl
negb
out
push
fisubl
inc
inc
aad
movsl
stos
pop
sahf
xchg
push
mov
push
jbe
push
pop
push
push
inc
movsl
cmp
and
push
movsl
or
testb
movsl
ljmp
lret
and
push
stos
movsl
cmpsb
pop
lcall
jbe
push
outsb
movsl
bound
push
dec
push
inc
movsl
inc
pop
xor
movsl
and
push
or
movsl
repnz
out
push
stos
lret
popf
aad
ret
stos
movsl
sahf
pop
xchg
xchg
jp
outsb
pop
bound
pop
movsl
push
pop
dec
inc
push
cmp
push
in
gs
inc
aam
aad
push
push
movsl
add
cli
push
mulb
push
shrb
shrl
cmp
js
inc
aad
movsl
jb
outsb
bound
pop
movsl
push
pop
inc
cmp
movsl
and
push
adc
push
movsl
cli
pop
imul
push
fisubs
xor
cmpsb
pop
lcall
jp
lods
push
push
or
push
shlb
inc
rorb
aam
push
in
push
or
dec
dec
push
dec
out
daa
dec
outsb
inc
cmp
pop
gs
pop
xor
inc
leave
xor
inc
cmp
xchg
dec
sub
push
iret
mov
dec
xchg
aad
inc
inc
cmp
fisubrl
rcl
push
test
hlt
xchg
sarl
cmp
xor
shlb
mov
xchg
inc
push
inc
arpl
xor
fsubrl
fstl
aas
faddl
xor
sub
cmp
sub
and
jl
jmp
fnstsw
mov
pop
fcomi
mov
aam
add
sub
dec
inc
xor
mov
mov
clc
jb
rol
xor
inc
xor
inc
stos
jne
aaa
cmp
inc
inc
test
dec
add
mov
jmp
insl
cmc
fnsave
xor
inc
xor
inc
aad
pop
mov
jecxz
fsubrl
and
shr
rorb
insl
lods
sarb
mov
aad
hlt
negl
inc
mov
lret
mov
dec
aad
aaa
aaa
jl
out
mov
cmp
cmp
jg
mov
cmp
daa
xor
icebp
jmp
cmp
xor
shrl
jge
aaa
inc
jge
cmp
jecxz
xchg
sarb
adc
add
icebp
pop
cmp
cmp
inc
dec
lret
pop
add
inc
dec
xor
cmp
filds
mov
xorb
inc
ljmp
mov
pushl
jl
jmp
fucomp
xchg
mov
loop
mov
aaa
xor
call
inc
sbb
lds
cmp
fucom
xor
cmp
push
and
sbb
xchg
or
aad
aas
inc
test
loope,pt
cmp
sub
cmp
jecxz
sar
mov
and
scas
cmp
jge
push
jns
pop
adc
add
scas
inc
aas
aad
add
mov
cmp
add
add
and
out
add
aas
sbb
aad
xchg
inc
cmp
fisubrl
and
sub
push
jecxz
inc
in
push
dec
pop
add
call
fnclex
lea
cmp
xlat
push
add
stos
inc
rcr
xchg
add
enter
pop
fst
or
mov
pop
mov
movsb
addl
dec
inc
in
sub
pop
sbb
push
mov
not
in
add
stc
enter
in
or
dec
aad
pop
mov
loop
inc
shlb
push
in
sarb
dec
add
fnstsw
sub
jmp
add
push
add
add
inc
dec
adc
mov
pop
and
ds
shl
call
repz
inc
aaa
mov
add
rclb
ds
fsts
jns
push
dec
aad
jge
cltd
lcall
lods
mov
ljmpw
and
out
adcb
mov
cmp
pop
cmp
xor
fstpl
aaa
aaa
fsts
fldln2
nop
dec
xor
lods
dec
push
pop
scas
fnstenv
inc
outsl
loope
insb
pop
je
fnstenv
pop
movsb
sub
xchg
dec
es
cmp
lods
inc
xchg
pop
fstl
cmp
ss
aaa
popf
fnstsw
fldenv
or
ds
scas
fsqrt
jno
dec
inc
cmp
fnstcw
dec
or
sbb
mov
cmp
xchg
mov
aaa
xor
shrl
inc
hlt
imul
inc
aaa
rcrb
push
xor
loopne
fdivrp
mov
add
stos
fsts
flds
or
push
and
xchg
cmp
fnstcw
lahf
push
mov
fnstenv
dec
cwtl
in
inc
xchg
fnstenv
inc
aaa
fwait
lods
mov
imul
dec
enter
jno
aaa
test
fldt
icebp
push
inc
ds
xor
or
add
fisttpll
push
sub
inc
inc
aaa
inc
hlt
xchg
loope
imul
cmp
dec
loope
cmp
call
dec
lods
cmp
dec
inc
cmp
cmp
fmull
mov
fstp
leave
ds
fcoms
mov
insl
in
lret
xor
mov
adc
fldenv
sahf
cmp
lods
mov
jo
xlat
sbb
mov
cmp
mov
mov
lods
xchg
add
shl
or
jb
adc
loop
hlt
aas
xor
fldcw
movsl
sbb
xor
inc
xor
jecxz
push
add
dec
test
out
push
add
fstpl
cmp
hlt
mov
dec
sbb
push
out
imul
ss
icebp
xchg
xor
pop
cmp
fnstcw
pop
test
xor
ljmp
lock
dec
mov
fnsave
lahf
fldenv
inc
inc
inc
cmp
loopne
mov
or
inc
push
push
xchg
dec
and
rcr
cmp
iret
loope
cmp
stc
test
pop
mov
fabs
inc
inc
cmp
stos
inc
fld
xor
aaa
xlat
mov
dec
cmp
mov
dec
xchg
gs
fldl
repz
inc
dec
fnstcw
xor
cltd
fnstcw
cmp
jecxz
dec
fnstcw
inc
inc
stc
inc
xor
data16
fucomi
test
loope
fiadds
cmp
push
inc
cmpb
adc
fstps
aam
repnz
fucomp
xlat
insl
dec
outsl
ds
add
ds
add
cmc
ds
lods
cmp
fld1
loope
xor
inc
inc
push
std
fiaddl
stos
test
dec
inc
inc
aas
imul
loope
xor
lahf
dec
jle
lds
pop
in
aas
aas
dec
cmp
push
sar
cltd
cmovbe
test
cltd
fnstcw
mov
pop
jae
xlat
xchg
fnsave
fnstsw
xor
ljmp
pop
mov
divb
flds
push
lods
flds
push
mov
flds
loope
inc
les
inc
std
sub
loopne
jbe
psrld
fnsave
iret
dec
cmp
sbb
push
test
les
and
xor
push
inc
iret
sub
xor
sysexit
cmp
enter
dec
insb
add
sbb
in
bound
ror
cmp
loopne
cmp
fbld
cmpsb
cmp
push
cltd
sbb
inc
cmp
aaa
push
inc
shlb
xor
cmc
getsec
dec
aaa
insl
fldenv
cmp
popf
fnstenv
in
mov
aaa
ds
xor
cmp
sbb
std
sahf
push
jbe
call
inc
cmp
inc
xor
sbb
xor
adc
lahf
aaa
dec
inc
stos
or
stc
jb
clc
or
inc
inc
inc
xor
aaa
inc
shlb
fldl
sub
cmp
sub
stos
xor
xchg
fldcw
jp
xchg
inc
inc
stos
inc
dec
xchg
scas
inc
dec
inc
test
int
inc
inc
inc
and
dec
iret
flds
or
cmp
fnstcw
bound
inc
xor
mov
stos
fxch
ss
aas
dec
xchg
mov
xor
dec
aas
fst
mov
xchg
inc
lea
inc
xor
fnstcw
cmp
gs
mov
inc
and
cmpsb
aas
lock
out
sbb
or
popa
jbe
pop
enter
fsub
jae
fnstcw
fstps
sub
notb
add
adc
inc
inc
push
pop
rorl
pop
mov
inc
fstp
push
lods
fldenv
dec
ds
or
add
cmp
aaa
push
inc
adc
dec
ret
cmp
ds
enter
xchg
xchg
pop
fnstenv
insl
loope
dec
inc
inc
fsin
add
int
cmp
or
or
roll
mov
inc
inc
add
pop
jae
les
xor
add
fists
mov
mov
cmp
push
add
stos
cmp
or
inc
stc
fidivrs
fnstcw
cmp
or
inc
pop
pop
jnp
fnsave
inc
jecxz
xchg
xor
mov
inc
dec
call
cmp
lret
fucomp
inc
jle
das
stos
fldl
rclb
dec
push
dec
cmp
ljmp
xor
test
adc
inc
pop
xchg
xor
mov
cmc
dec
ds
aaa
push
mov
fnstcw
xor
aam
fstps
inc
cld
testb
ds
stos
xor
aaa
inc
or
in
push
and
call
enter
inc
fldl
loope
ficoms
inc
fnstenv
loop
dec
inc
mov
aam
and
ss
dec
fldlg2
mov
fldl
dec
test
repnz
fnstcw
mov
fstp
jo
cmp
aaa
inc
outsl
inc
clc
imul
xchg
cmp
adc
inc
lahf
loope
leave
jl
or
test
sub
pop
push
cmp
xor
cmp
inc
cmp
dec
mov
ficoml
rclb
xor
mov
mov
xchg
mov
aaa
or
fstps
inc
mov
fstps
flds
cmp
sub
xchg
push
sbb
daa
and
mov
cmp
xchg
sub
mov
xor
mov
xor
xor
xor
call
ja
dec
flds
shlb
mov
pop
dec
xor
pusha
inc
sbb
fstp
inc
stos
inc
inc
in
fcomi
stos
flds
xchg
xor
xchg
fstp
jns
fnsave
flds
sbb
inc
dec
in
fs
xchg
fldcw
ret
xchg
jno
cltd
loopne
lods
flds
inc
inc
sub
flds
stos
aaa
in
pop
rorl
cmp
std
stc
inc
inc
cmp
cmp
inc
pop
jmp
adc
push
test
in
jnp
jmp
and
dec
mov
outsb
icebp
loopne
sti
stc
xlat
push
std
xor
push
mov
fnstenv
icebp
push
cmc
sbb
sbb
jns
faddl
jecxz
and
xor
fnstsw
sarl
testl
jmp
inc
inc
leave
adc
mov
inc
jmp
popa
xchg
inc
inc
jne
bound
loopne
dec
mov
inc
push
fwait
movsb
fidivs
fldl
mov
cli
icebp
sub
pop
cli
mov
dec
dec
xor
cmp
mov
dec
flds
sub
adc
aas
fstps
outsb
jmp
aaa
inc
ljmp
adc
test
dec
imul
inc
aaa
inc
fucomi
test
fnstsw
ret
xlat
mov
std
jge
push
in
aas
lock
hlt
test
in
inc
loopne
dec
fnstcw
fisubl
ffree
xor
inc
xor
inc
inc
adc
mov
push
cmp
pop
xor
fisubrl
rolb
cmp
jmp
adc
fsts
adc
test
cmp
pop
lea
inc
in
cmc
gs
and
xor
enter
cmp
cmp
ds
fidivrl
xor
fsts
test
push
fwait
jle
inc
inc
dec
ljmp
push
flds
inc
outsl
rorb
jmp
pop
adc
loope
mov
inc
orl
std
adc
inc
pop
push
pop
shl
gs
add
outsl
jno
fnstsw
aam
lahf
jns
fnstcw
clc
dec
or
xor
xchg
aaa
inc
push
jl
push
cmc
filds
cmp
mov
inc
mov
sub
xor
pop
xchg
pop
jne
outsb
gs
dec
and
imul
outsl
loope
push
cmp
dec
pop
js
fldcw
aam
fstp
mov
loope
or
inc
xchg
inc
adc
jne
dec
or
shl
jecxz
pop
dec
sbb
adc
mov
xor
sbb
xor
ffree
push
inc
stc
or
push
inc
lahf
jge
inc
test
hlt
and
in
or
fstpl
or
test
flds
mov
cmp
jb
mov
jecxz
push
aas
inc
dec
jo
inc
xor
inc
mov
insl
in
fadds
hlt
loop
adc
inc
in
add
pop
push
push
aas
mov
inc
ss
xor
jnp
ljmp
inc
xchg
fldenv
test
icebp
rcrb
flds
lods
aas
adc
or
shrb
xor
xor
xor
mov
dec
dec
fldcw
ficompl
xor
cmove
jecxz
cmp
das
test
inc
push
or
adc
aad
int3
mov
cmp
dec
in
pop
inc
mov
mov
sarb
test
aas
cmp
mov
dec
test
or
and
inc
test
cmp
sbb
ljmp
aaa
jno
xor
ds
fldcw
stc
stos
fnsave
repz
sbb
inc
icebp
cmovo
mov
fnstenv
sub
jmp
or
jecxz,pt
xor
cmpl
push
fnstenv
aaa
gs
push
fnsave
inc
gs
call
inc
inc
je
aas
xor
ljmp
cs
out
add
loope
mov
fnstcw
jmp
fnstenv
mov
aaa
inc
inc
xor
test
test
loope
xor
call
lahf
fsin
loope
inc
sub
ds
push
insl
inc
fsts
jmp
ror
stos
cmp
adc
loopne
xor
jmp
add
addl
dec
into
inc
inc
inc
jo
aaa
and
adc
inc
or
fnstcw
lods
flds
icebp
out
inc
inc
push
jmp
insl
fstp
mov
inc
shrb
insb
pop
std
call
xor
jmp
aam
jmp
fnsave
xchg
add
dec
cli
loop
mov
gs
cmp
testb
inc
inc
xchg
fldenv
fwait
inc
inc
mov
inc
les
loopne
xor
jmp
pop
mov
fnsave
or
xor
inc
jecxz
aad
sbb
fnstenv
fnstcw
cmpsl
lods
addr16
xchg
lds
fisttpll
add
xor
add
stc
int
cltd
xor
loope
inc
dec
rorb
jle
xor
loope
cmp
sbb
fnstsw
fldenv
push
sub
cmp
xchg
jae
lea
xor
push
sahf
in
xor
jge
xor
cmp
push
stc
inc
xlat
icebp
ds
fidivs
inc
dec
fnstcw
shrb
stc
fnstcw
dec
xor
sbb
flds
jo
inc
pop
lcall
jp
rcr
sub
push
cmp
cmp
cmpb
jmp
dec
xor
movsl
mov
push
inc
xlat
mov
cmp
fisttpll
inc
ds
insb
aas
xchg
fnstsw
fnstenv
cmp
fnstcw
inc
cmp
xor
dec
cmp
aaa
orb
sbb
aaa
cld
std
add
pop
flds
or
and
inc
cmp
fptan
leave
xor
sub
jmp
adc
ds
inc
fnsave
in
xor
mov
aaa
rcrb
call
std
imul
lahf
sbb
inc
fldpi
rorb
xor
cmp
fldcw
cmp
in
stos
xor
sarb
loop
jg
loope
inc
dec
add
cmp
fxch
ss
aaa
call
filds
pusha
xchg
sbb
adc
cmp
sbb
insl
jno
jb
enter
inc
inc
addb
sub
inc
inc
flds
sub
sbb
sbb
flds
push
cmp
ds
fld
dec
xor
lock
lods
flds
ljmp
xor
rorb
add
jns
cmp
jge
push
jg
aas
mov
aaa
rcr
push
pop
jge
mov
inc
mov
lcall
sarb
fnsave
cmp
push
sbb
clc
stos
fsts
inc
xchg
fldenv
sarb
loop
in
cmc
arpl
ja
fwait
lods
cmp
ficomps
aas
cmp
mov
sbb
adc
fldcw
xchg
icebp
push
inc
cmp
inc
fidivrl
fstps
inc
sub
jmp
mov
xor
jbe
das
flds
aaa
mov
inc
inc
ret
insl
mov
push
test
mov
stos
cmp
jmp
test
fldl2e
inc
bound
cmp
inc
flds
fnstcw
and
or
test
mov
ss
test
xor
roll
adc
cmp
and
add
nopl
psrad
inc
fchs
ds
adc
loope
or
ss
cmp
aaa
loopne
xchg
fldenv
xor
mov
xor
sbb
cmp
xor
jp
cmp
fidivrl
pop
dec
or
lods
mov
inc
push
dec
lret
ss
and
inc
aaa
or
xor
sub
push
cmc
sbb
cmp
aas
fnstcw
hlt
jp
fsts
fiadds
sbb
xchg
xchg
jb
jge
imul
jmp
psubusw
inc
daa
push
dec
aad
inc
inc
cmpsl
cmp
neg
dec
xor
inc
cmp
mov
jl
push
mov
dec
std
loope
stc
fidivrs
push
inc
out
xchg
jmp
inc
pop
fnstenv
stc
cmp
inc
xor
repz
ljmp
mov
xor
stos
flds
and
or
aam
jge
aam
in
xchg
ds
aas
fldcw
flds
mov
inc
mov
cmp
cmc
mov
fstps
inc
int3
lret
cmp
repnz
cli
inc
aam
fstp
jle
fnstenv
inc
stc
in
adc
loopne
pop
cmp
dec
inc
fstl
fsts
inc
fidivrl
mov
inc
pop
aam
and
push
mov
fnsave
push
ss
fsts
dec
inc
inc
shl
dec
cltd
fldcw
push
cmp
and
push
mov
mov
xor
fsts
and
mov
xor
nop
xor
and
mov
inc
mov
sbb
ficoml
add
shrb
aas
lret
inc
push
or
add
adc
fnstenv
xor
imul
fld1
add
rol
cmpsl
dec
fnstenv
cmp
push
or
jg
and
adc
cmp
push
loop
sbb
call
push
jb
mov
xchg
aaa
sub
scas
cmp
repz
insb
fsin
gs
sarb
xor
xor
fnstenv
and
aas
mov
ds
xchg
leave
xor
inc
dec
fldenv
dec
flds
push
cltd
xlat
daa
repz
es
cmc
sbb
flds
aaa
inc
push
add
mov
aaa
frstor
sbb
xchg
mov
aaa
hlt
sbb
sbb
or
mov
fstps
adc
pop
mov
outsb
xor
xchg
and
aaa
hlt
sbb
sub
mov
rcrl
fstp
jmp
data16
insb
xchg
jne
aaa
pop
lock
or
push
xor
fnstenv
shl
lea
add
aad
sbb
xor
je
inc
xchg
fldcw
sti
sarl
jecxz
rcr
neg
xchg
pop
adc
in
cmp
pop
pushf
sub
dec
xchg
sti
pop
mov
inc
xor
popa
xchg
fucom
cmp
shr
adc
pop
pop
mov
mov
aas
loope
xor
mov
inc
jecxz
xor
jecxz
adc
push
xchg
fnstcw
xchg
outsb
cmp
push
rcrb
arpl
xor
xchg
push
lea
sub
pop
ss
mov
inc
ss
call
xlat
pop
std
jle
xchg
xor
push
loop
cs
sub
inc
fstp
aas
loop
sub
fnstsw
cmp
add
pop
push
gs
xor
out
popf
jae
and
fsts
cmp
inc
inc
mov
cmp
ds
inc
aaa
adc
inc
ds
test
xlat
pop
cmc
cld
adc
flds
mov
fs
aas
sbb
in
pop
dec
loopne
ljmp
inc
aaa
cmc
inc
shrl
ss
xor
shll
fdivs
push
sbb
push
fnstenv
cld
jecxz
xor
push
in
ljmp
cmp
lahf
and
fisubl
fmuls
fwait
add
fldcw
inc
inc
jnp
inc
inc
push
rclb
pop
sbb
daa
push
es
xor
fcmovnb
stos
fldenv
mov
adc
cmc
dec
ss
adc
fld
dec
aaa
ds
loop
inc
incb
hlt
or
mov
call
xor
cmp
std
aaa
rol
cmp
aam
and
fnsave
fsts
or
cli
xchg
cltd
push
xor
cs
dec
inc
push
test
frstor
in
fnstsw
pop
cmp
inc
inc
inc
jmp
mov
adc
roll
in
xor
inc
add
pop
jmp
push
aas
sarb
insb
push
incb
lcall
xor
hlt
add
cmp
aaa
addb
dec
jecxz
jmp
dec
push
flds
push
and
test
sahf
fldenv
mul
pop
mov
aaa
inc
dec
xor
in
inc
or
fxtract
jle
pop
sub
or
mov
inc
imul
in
call
lea
in
dec
in
shl
aaa
xor
jbe
das
fnstcw
sub
xor
imul
cmp
cmp
aaa
pop
sub
xor
fstp
or
xor
xor
jle
inc
pop
fstpl
call
sub
mov
and
call
call
push
sarl
inc
fchs
xchg
cmp
aaa
gs
dec
icebp
cmp
pop
cmp
and
rclb
mov
shl
in
cmp
loope
jno
cmp
inc
jb
in
stos
in
or
inc
ljmp
or
push
cmp
aaa
inc
in
cmp
sub
xchg
in
xchg
ds
add
enter
loope
or
dec
roll
fstps
test
lret
aad
or
add
xor
flds
std
clc
xor
pop
pop
xchg
addb
fstpl
loope
aas
aaa
or
pop
mov
jbe
jge
xor
sbb
in
xor
mov
fisubl
enter
aas
inc
inc
add
icebp
fisttpll
aad
xchg
in
xchg
sbb
xchg
inc
repnz
fstl
xor
jge
rolb
push
xchg
inc
lods
cmp
xchg
xlat
pop
fstp
xchg
fstl
aaa
loop
mov
inc
ljmp
xchg
inc
pop
pop
jp
mov
fnstenv
sub
into
fnstcw
inc
fldcw
scas
fnstenv
pop
popf
xchg
inc
push
ljmp
xor
fnstenv
inc
or
fldcw
or
rcrb
out
adc
fabs
fsubrl
push
xor
in
inc
cmp
outsl
fnstenv
mov
push
aad
je
out
push
scas
fnstcw
xor
pop
sub
loope
test
and
lahf
mov
add
and
rcl
in
xor
out
dec
xchg
xor
rclb
std
xchg
flds
add
clc
je
fnstenv
or
stos
fnstcw
aaa
ds
stc
push
aaa
cmp
mov
loope
insb
jmp
enter
aaa
outsl
sti
xor
cmp
pop
adc
cmp
xor
xor
rcr
inc
dec
sbb
loope
inc
inc
icebp
adcb
ds
stos
inc
inc
in
xor
cmc
gs
xor
fdivl
in
shl
xor
lds
flds
loope
cmp
clc
jge
fnstsw
pop
loope
xor
mov
out
lock
cmp
mov
ljmp
fchs
rcl
popf
cmp
fnstenv
xor
test
lds
fistps
add
xor
push
nop
flds
xor
add
push
xor
cli
fcompl
int
pop
insl
call
dec
scas
cmp
rol
xor
jmp
sbb
les
imul
jmp
inc
ds
iret
and
and
adc
xchg
cmpsl
dec
add
inc
cmp
cltd
mov
dec
cld
popa
and
fucom
or
inc
xor
push
inc
ret
xor
test
call
push
test
jnp
loope
inc
push
in
dec
fnstcw
xor
bound
loope
push
cmp
es
fldl
mov
or
popf
cmp
stos
fisttpll
aaa
std
lock
out
adc
fisttpll
or
cli
jbe
stos
fstl
xor
jecxz
in
xor
and
insl
add
cmp
stc
movsb
xor
ret
cmp
fsubrs
pop
pushf
fldln2
aaa
loope
test
inc
fnstcw
loope
test
sti
icebp
or
flds
xor
ficompl
cmp
or
dec
enter
cmp
add
das
fnsave
cmp
aad
xor
mov
ds
push
negl
imul
fldenv
xchg
fnsave
pop
adc
pop
repnz
xor
pop
sbb
jbe
stos
in
push
in
in
dec
rcr
push
fstpl
in
cmc
aad
icebp
stos
shr
xchg
sar
add
outsl
dec
pop
mov
loopne
rcr
sub
test
test
cmp
out
push
fisttpl
fists
ret
xor
or
or
fnstcw
cmp
arpl
sub
adc
jne
cmpsl
pop
and
lods
jns
xor
and
push
pop
lcall
inc
out
adc
jecxz
jnp
add
rclb
insb
loope
add
leave
jl
jno
push
gs
ss
out
std
je
cltd
dec
ficompl
ds
fldz
inc
dec
daa
push
push
movd
cmp
pop
or
mov
xor
jns
xchg
jecxz
in
mov
xchg
fwait
jo
cmp
inc
std
dec
ror
inc
rolb
mov
ds
xchg
faddl
aaa
lock
mov
in
sbb
xor
jbe
in
cmp
out
mov
push
pop
xchg
mov
pop
xor
mov
in
cmp
or
adc
mov
es
xchg
cmp
pop
mov
inc
pop
cmp
mov
pop
popf
adc
mov
fnstcw
gs
enter
inc
loope
or
dec
rcl
imul
int
pop
push
add
fucompp
movsl
rolb
or
or
rcrb
flds
inc
rolb
ror
cli
add
out
jnp
rcl
push
fstpl
jnp
or
push
and
and
repnz
out
adc
adc
div
adc
mov
adc
and
out
mov
imul
std
outsb
mov
push
enter
divl
fnsave
and
loope
shlb
ss
xchg
sbb
and
and
sub
test
adc
mov
push
fucom
xlat
std
push
or
sbb
sbb
dec
sbb
push
cmp
std
xchg
push
add
cmc
dec
sbb
int
adc
and
cmpsl
push
subb
mov
push
rclb
sbb
jnp
test
repz
repz
xchg
inc
mov
adcb
lcall
inc
xchg
mov
ljmp
cmp
inc
xor
jb
lea
aaa
inc
inc
xor
push
ss
inc
rclb
shlb
add
cwtl
add
sub
jmp
push
add
pop
das
bnd
lea
add
fadds
pop
out
add
cld
adc
cli
jns
daa
or
jb
dec
data16
jg
dec
cli
jle
jae
sbb
fdivrl
xchg
test
pop
xchg
loopne
xchg
push
ljmp
xchg
aam
sbb
sub
pop
ja
test
add
stos
aaa
inc
pop
jmp
sbb
repnz
es
sbb
xor
aam
das
inc
adc
rorl
inc
inc
out
jp
repnz
or
pop
pop
fs
or
sti
addr16
rolb
mov
shl
xor
jl
std
es
insb
pop
es
jb
pop
pop
jg
hlt
mov
add
repnz
mov
jnp
testl
not
repz
inc
aaa
data16
cld
push
pusha
jae
jp
into
test
xor
sub
xchg
repz
arpl
orb
xchg
pop
or
and
jmp
aaa
push
xchg
sub
cmc
adc
pop
scas
shrb
fcmovu
jb
ss
pop
push
out
pop
repnz
cmpb
and
ds
hlt
push
fistpll
jae
jecxz
mull
cmp
in
xchg
pop
mov
aad
jbe
xor
or
daa
inc
loop
jae
mov
fucomi
cmc
cli
push
lea
jb
test
in
pop
aam
jle
icebp
aaa
icebp
add
cli
insb
inc
bnd
adc
inc
aam
sti
icebp
xor
loope
or
imul
cmp
in
adc
xchg
fs
push
mov
cmp
push
test
enter
fsubl
adc
in
or
jmpw
fsubs
adc
hlt
jl
lea
add
sti
mov
fistpl
push
inc
jae
loopne
cld
fstpl
sbb
push
push
inc
xor
jno
pop
pop
mov
and
stc
cld
pop
adc
xor
push
outsb
sahf
jmp
call
rorb
ds
cmp
fs
not
clc
cmpsb
repnz
pop
push
add
fsubrs
ds
cwtl
and
inc
cmp
bound
fadds
mov
push
rcll
cmp
ds
or
push
lcall
js
pop
inc
push
repz
adc
in
xor
pop
loop
sti
je
push
rcr
dec
and
pusha
or
cmp
xor
int3
ds
std
lods
sbb
cmp
jle
add
ljmp
aad
subb
shll
test
icebp
rclb
ficompl
out
icebp
enter
rolb
cld
mov
repnz
outsl
outsl
add
push
jge
je
sbb
ds
push
insl
aam
imul
xchg
pushl
adc
sbb
pop
adc
sti
jecxz
mov
orb
xchg
pop
xor
and
fimuls
inc
inc
pop
inc
addr16
adc
fnsave
lret
push
es
cmpsb
xor
cmp
dec
cli
int3
xchg
outsl
cmc
fcomps
stos
inc
xor
mov
inc
jl
jle
ss
xchg
arpl
int
adc
add
pop
aaa
ss
out
pop
jb
adc
inc
add
add
push
add
testl
fnsave
mov
aad
not
sbb
fisttpll
ss
add
aad
pop
xor
stos
or
je
xchg
push
or
mov
add
xor
out
out
and
and
xor
xor
xor
incb
push
inc
dec
in
mov
jae
sbb
loopne
cli
repz
mov
ljmp
pop
rclb
inc
daa
repz
xchg
xor
andl
repz
aam
sbb
or
aam
es
pusha
cmpsl
call
jl
mov
notl
mov
hlt
adc
aaa
xchg
fstpl
xchg
inc
jg
xlat
or
dec
out
or
insl
pop
aad
repz
fisttpl
call
cld
filds
arpl
cli
inc
xchg
push
sti
inc
repnz
aam
inc
div
mov
sbb
sub
add
inc
std
jnp
and
repnz
hlt
sub
xchg
inc
adcl
icebp
mov
inc
pushf
mov
xor
notl
lahf
loope
inc
xor
call
jge
aad
add
and
xor
lret
hlt
int
repnz
sbb
push
cmp
repnz
xor
fiaddl
and
add
adc
or
lods
rorl
push
sbb
xchg
test
add
shlb
movsl
in
xchg
stos
adc
lcall
pop
roll
movsb
sbb
fcmovbe
stc
xchg
adc
ss
loopne
inc
add
es
pop
xor
in
adc
and
stos
adc
push
cmp
inc
test
ficompl
cli
cmpsb
cmc
in
and
or
dec
xlat
idivl
cmp
jle
out
push
xorw
int
ss
ss
xor
orl
data16
inc
adc
cmp
jbe
stc
ja
les
xor
xchg
adc
or
pop
shl
xchg
sti
fcmovbe
out
push
faddl
inc
fiadds
pop
fimuls
std
and
xor
mov
adc
pop
add
adc
nop
push
xchg
xchg
and
xor
dec
fsubp
xchg
repnz
adc
fistps
pop
adc
mov
ficompl
xor
xchg
sbb
sarb
xor
ljmp
ljmp
popf
rcl
sbb
sbbb
add
cli
xchg
xchg
shlb
sbb
xor
icebp
adc
out
add
fistl
pop
xlat
fs
loopne
in
adc
repnz
mov
add
cld
xchg
repnz
sub
testb
adc
pop
ja
or
and
es
jp
adc
xor
dec
loop
xchg
sti
mul
mov
add
and
mulb
sub
in
in
or
je
pop
mov
lcall
in
jo
inc
aaa
pop
add
adc
adc
jbe
scas
adc
aam
xor
inc
push
inc
fst
or
rclb
loopne
loop
jecxz
push
out
pop
pop
ss
pop
cld
adc
insw
pop
push
out
cmc
pop
jne
adc
push
jns
and
fisubl
xlat
push
clc
fildll
cs
push
xchg
fs
pop
shlb
dec
outsl
iret
or
ss
ljmp
imul
and
xor
pop
or
cld
push
dec
cli
add
xchg
cli
aas
inc
cmp
fldcw
popa
sub
xchg
cld
shlb
ror
adc
hlt
shl
jne
sub
push
and
sub
fisubrl
rorb
inc
pop
cwtl
xchg
xor
inc
mov
sub
popf
fmull
xchg
xchg
inc
xchg
lcall
pop
andl
repnz
xor
mov
movsl
dec
repnz
xor
xor
xchg
addr16
in
sbb
push
and
xlat
in
sub
jbe
xlat
mov
cmp
stc
repnz
push
cmp
out
adc
mov
jecxz
shll
fs
and
mov
fdiv
push
repnz
arpl
mov
fidivrl
cld
push
push
sbb
push
sbb
lock
cmp
ficoml
cmp
and
or
mov
mov
inc
aaa
inc
aam
idivb
dec
daa
inc
loop
xchg
fs
jo
or
xchg
rol
pop
stos
sub
fcomp
sub
cld
cld
daa
dec
dec
dec
rorb
cmp
push
mov
and
sbb
std
mov
pop
inc
loopne
scas
hlt
add
pop
mov
out
sub
jb
cmc
out
sbb
sbb
xchg
push
fwait
push
loop
push
std
fisttpl
inc
dec
push
mov
fadd
or
pop
push
jno
faddl
cld
xor
push
mov
cmp
popl
in
sub
dec
add
xor
in
xor
cmp
lods
cmp
xchg
frstor
jmp
stos
inc
in
in
mov
repnz
pop
icebp
inc
mov
fists
mov
lret
xor
cld
pop
push
pop
fstpl
xor
fucom
ljmp
add
add
fstpl
xlat
push
pop
sbb
aaa
inc
xchg
jge
lods
sub
fucomp
mov
insl
dec
orb
xor
dec
cmp
xor
icebp
sarb
out
test
je
and
dec
shl
fbstp
pop
fnstcw
stos
popa
xor
mov
fbstp
leave
fwait
jmp
aaa
fabs
xor
inc
fdivrp
xchg
add
inc
or
in
std
jecxz
inc
cmp
rolb
xor
ss
pop
in
test
std
lods
fisttpll
push
stos
aas
fnstcw
jle
mov
xor
and
add
stos
xor
icebp
pushf
aas
xor
push
mov
icebp
or
stc
loopne
ss
xchg
shlb
push
hlt
jmp
sbb
push
sbb
aaa
inc
push
pushf
aam
sub
dec
add
std
repnz
aas
lea
repz
jle
shll
add
repnz
mov
repnz
adc
bound
repnz
popf
xor
addb
xor
or
jp
movsl
loop
xchg
inc
adc
inc
inc
push
clc
xchg
lcall
push
stos
add
cmpb
andl
loop
repnz
je
cmpb
xchg
aam
insl
and
sbb
repnz
adc
out
sbb
sub
jb
jne
push
add
push
jg,pn
add
dec
jle
xor
adc
push
aam
jno
insl
xor
adc
pop
sti
pop
pop
sahf
sbb
sbb
fsubrl
dec
inc
stos
inc
aaa
arpl
or
stos
push
ds
jge
push
lock
rcll
and
xchg
push
out
jno
adc
adc
add
cld
out
stc
mov
sub
inc
cmp
fldz
xor
int
xor
ss
cmp
orb
inc
jl
fnstcw
ds
mov
inc
mov
inc
aaa
fcmovnbe
push
addb
jbe
xor
inc
mov
add
mov
cmpb
push
leave
inc
test
inc
in
cmpsl
fcmovbe
repnz
sub
fldenv
mov
aaa
shr
inc
repz
ljmp
flds
fnstcw
aad
negb
movsl
fiaddl
inc
inc
mov
cmp
jge
xor
stos
dec
cmp
jno
fnstsw
fnstcw
inc
and
or
testb
add
ljmp
pop
dec
ficompl
js
sub
inc
push
loope
inc
inc
jecxz
loope
jmp
gs
cltd
ret
inc
inc
cmp
push
cli
in
dec
jecxz
pop
pop
cmp
fstl
ss
jle
sub
loope,pt
jne
xorb
cmp
std
std
fldenv
xlat
insb
cmp
pop
hlt
fdivs
adc
cmpb
out
cli
xchg
pop
push
dec
xor
shr
loope
mov
loope
shl
xlat
mov
jne
ds
jge
mov
cmc
mov
sub
mov
inc
cmp
fnstcw
cmc
and
push
mov
sbb
inc
inc
imul
dec
rclb
add
in
mov
mov
cmp
rcll
xchg
sbb
call
sbb
push
cmp
or
repnz
loop
lret
cmp
xchg
icebp
out
or
lods
sub
mov
inc
loop
ss
and
bound
and
es
flds
inc
inc
push
sub
cli
test
xchg
push
stc
int3
xor
dec
adc
cmp
push
dec
xchg
loope
inc
fstpl
call
fcompl
fldenv
xor
scas
out
popa
fwait
inc
or
ficoml
cltd
lahf
sub
push
out
dec
aam
aam
stos
push
sub
test
pop
aaa
push
cmp
and
aam
cmpsl
icebp
inc
xchg
stc
adc
inc
fs
pop
test
fwait
mov
in
jbe
mov
je
add
icebp
fcmovu
aad
inc
icebp
xor
push
hlt
dec
sbb
jae
inc
and
loope
inc
repnz
adc
inc
mov
and
xchg
repz
or
dec
dec
icebp
inc
stc
inc
and
dec
mov
roll
fcoms
sar
lret
in
cmc
loope
aam
pusha
fs
inc
xchg
stc
aam
aam
lods
xchg
dec
dec
xrelease
addb
shlb
fisubrl
push
aam
cli
fistps
fstl
pop
push
or
dec
icebp
push
push
subl
cmp
in
push
insl
in
in
test
inc
icebp
adc
stos
fstpt
mov
rcr
sbb
pop
and
inc
sbb
inc
inc
inc
xor
fxch
aaa
rolb
push
pop
jmp
push
add
xor
daa
mov
sbb
outsb
idivb
ljmp
ss
loop
into
dec
xor
out
test
and
ljmp
xor
loope
fcoml
jnp
adc
cli
add
xchg
sbb
sbb
leave
xlat
adc
or
xor
imul
cmp
inc
fcoms
rolb
std
pop
lahf
sbb
push
xor
faddl
sub
rcl
and
and
pop
sbb
gs
aam
bnd
xor
pop
ljmp
xchg
or
push
push
fistpl
cmp
bound
pop
push
lock
and
add
in
xlat
push
inc
inc
inc
add
xchg
in
stc
mov
inc
int3
inc
or
in
roll
rclb
push
pop
xchg
adc
pop
in
pop
dec
rcrb
jecxz
mov
mov
in
mov
add
sbb
dec
and
sbb
loop
adc
or
add
mov
or
sub
pop
out
fiadds
shrb
jno
jno
aad
movsl
jp
outsb
pop
push
dec
movsl
ds
sub
push
movsl
push
sbb
add
repnz
jo
mov
cmp
outsb
cmp
push
insb
inc
cmp
js,pn
insb
adc
cmp
js
insb
aas
outsl
mov
sahf
cmp
js
insb
pop
dec
cmp
fsubrs
cmp
js
cli
cmp
insl
fmulp
outsb
inc
jne
js
insb
cmpsb
xchg
cmp
pop
cmp
inc
insb
xor
cmp
js
insb
add
cmp
js
insl
insl
inc
jno
js
insb
cmpsb
lcall
js
insb
dec
inc
cmp
js
insb
sbb
cmp
js
insb
out
aas
ret
cmp
insb
lcall
push
cmp
inc
aad
movsl
and
adc
push
cli
movsl
ljmp
mov
sahf
push
xchg
movsl
sbbb
pushw
pop
movsl
dec
pop
xor
sub
push
out
movsl
fidivs
into
push
js
inc
aad
movsl
mov
jle
push
bound
push
movsl
and
push
or
cli
movsl
ljmp
movsl
aad
pop
sahf
xchg
push
mov
push
dec
movsl
ds
xor
push
sbb
push
ljmp
push
movsl
xchg
pop
mov
push
pop
pop
push
inc
push
cmp
push
push
movsl
cli
pop
out
fimuls
into
addr16
movsb
aad
fisubs
jp
push
pop
pop
push
inc
push
movsl
sub
push
adc
push
movsl
cli
pop
out
loop
lods
lret
outsl
aad
push
cmpsb
movsl
lcall
pop
pop
dec
xor
push
movsl
cli
pop
ljmp
outsl
aad
push
mov
push
dec
movsl
cmp
and
push
movsb
or
movsl
out
pop
loop
or
fs
movsl
aad
pop
lcall
bound
push
movsl
push
pop
adc
push
cli
movsl
out
pop
loop
or
arpl
sahf
push
xchg
movsl
xchg
jp
push
bound
push
movsl
and
push
push
push
mulb
mov
movsl
aad
pop
cmpsb
xchg
push
mov
push
inc
movsl
xor
and
push
cli
movsl
out
pop
loop
or
popa
mov
inc
aad
movsl
mov
jp
push
pop
movsl
push
pop
inc
ss
push
movsl
adc
add
push
ljmp
pusha
int
aad
movsl
jbe
bound
inc
movsl
ss
sbb
or
push
lods
pop
pop
outsl
aad
repnz
sahf
xchg
push
xchg
push
dec
movsl
inc
pop
xor
push
push
movsb
or
mulb
pop
pop
mov
scas
movsl
sahf
pop
mov
pop
dec
ds
movsl
push
pop
push
incb
out
movsl
loop
lret
adc
mov
jp
push
push
dec
movsl
inc
pop
and
adc
push
fisubrl
aad
push
mov
bound
push
movsl
inc
pop
cmp
push
and
push
out
movsl
loop
ret
popa
pop
cmp
pop
mov
jle
outsb
bound
push
movsl
inc
pop
cmp
push
push
movsl
push
pop
repnz
loop
sarb
pop
int
aad
push
sahf
movsl
xchg
pop
mov
jb
popw
pop
dec
push
inc
movsl
ss
and
push
movsl
or
cli
out
lret
insl
aad
mov
push
xchg
movsl
mov
jle
push
outsb
movsl
bound
push
dec
push
movsl
ss
sub
push
adc
push
fisubs
jne
aad
movsl
mov
jp
push
bound
inc
movsl
ss
sub
push
mulb
or
push
mov
sahf
push
xchg
movsl
xchg
jp
push
push
bound
push
dec
push
movsl
xor
sbb
push
movsl
add
repnz
stos
lret
pop
aad
stos
sahf
push
xchg
movsl
xchg
jbe
push
pop
push
push
push
inc
movsl
ss
sub
push
adc
push
fisubs
jns
aad
movsl
mov
jp
push
bound
push
sub
push
repnz
out
fcmove
pusha
push
cmp
sahf
pop
mov
pop
pop
dec
push
movsl
xor
push
push
push
movsl
repnz
out
or
push
mov
mov
pop
jbe
push
pop
movsl
dec
pop
cmp
push
sbb
push
fisubs
sbb
mov
cmpsb
pop
xchg
mov
jb
bound
push
inc
push
movsl
es
push
or
movsl
repnz
loop
dec
adc
aad
cmp
cmp
dec
insb
xor
and
pop
push
xchg
inc
push
sub
repnz
jge
fimuls
ss
loope
inc
faddl
rolb
inc
fisubs
inc
fisubrs
dec
and
mov
and
xor
cwtl
loopne
hlt
or
fnstsw
les
dec
xor
pop
popa
stos
cmc
push
add
sbb
into
sbb
adc
and
add
add
sub
fldl2e
ret
sbb
mov
fsubrs
add
sbbb
xor
ja
aaa
jmp
mov
adc
ja
xor
mov
and
adc
adc
daa
rcrl
xchg
fiadds
loopne
or
icebp
jecxz
aam
fisubrs
adc
jle
in
movaps
das
push
and
push
mov
and
push
sub
or
adc
push
xchg
inc
xor
and
add
loope
stc
and
push
sahf
imul
fst
outsl
outsl
jmp
sub
fwait
or
cmp
sub
in
loope
es
loope
outsl
dec
pop
cwtl
xchg
loope
icebp
add
aas
shlb
loope
lahf
adc
and
add
and
xor
fstpl
adc
mov
test
shll
sub
repz
scas
sbb
push
xor
adc
and
and
notb
test
sub
stc
mull
adc
sbb
pop
lahf
inc
nop
loope
pop
daa
and
push
jb
shll
loope
sbb
mov
loop
das
sub
aad
xchg
adc
fs
and
mov
decl
push
or
and
or
push
fstpl
push
and
jmp
push
test
dec
fucom
out
and
pop
loopne
loope
or
test
std
loopne
in
inc
sub
sbb
in
loope
xchg
sbb
dec
aas
fldl
pop
push
xchg
or
xchg
mov
or
popf
xor
add
bsr
sub
cmp
and
xchg
cs
fldl
add
xchg
sbb
loope
mov
out
add
mov
in
decl
sbb
call
inc
fstl
add
and
mov
popa
xlat
jg
push
sbb
aas
fucomp
scas
and
pop
bswap
pop
add
xor
mov
sbb
push
cmp
xor
xchg
add
jl
je
jne
sub
pop
xor
lods
frstor
cmpsb
cmp
xor
adc
xor
adc
repnz
scas
pop
out
repnz
movsb
es
sub
in
loope
outsl
in
sbb
sbb
sbb
sbb
xchg
sbb
fidivrl
pop
push
and
popf
fstpl
add
cmp
test
ljmp
fstl
daa
pop
and
jg
xor
test
xor
sti
add
out
xor
and
fstl
jmp
loope,pt
in
or
push
xchg
or
jmp
sub
out
sub
sbb
ficompl
stos
inc
or
outsl
in
fidivl
ds
sbb
fisttpll
and
push
ret
adc
and
adc
sbb
fstpt
push
es
sbb
cmpsb
or
loope
enter
repnz
aas
fnstsw
mov
enter
push
xor
cmp
mov
add
sbb
cli
and
sub
cmc
pop
inc
push
and
adc
fwait
pop
inc
fstpl
sbb
bound
mov
fs
and
mov
adc
and
mov
and
fsts
adc
sbb
je
loope
and
sti
scas
inc
push
jbe
push
sti
in
in
sbb
inc
sbb
push
shrl
xor
orb
adc
les
in
mov
adc
push
addl
pop
mov
fstpl
andb
mov
cmc
cwtl
adc
xchg
pop
cmp
fisttpll
pop
imul
aaa
sub
push
sub
push
cmpsb
and
mov
pop
and
aaa
loope
gs
sub
push
jmp
add
icebp
lods
loope
or
or
fisttps
fisttps
in
sbb
es
add
sub
mov
and
jbe
sbb
sbb
ja
out
enter
mov
pop
loope
xlat
rcrl
sahf
es
inc
sbb
fstl
and
dec
aad
inc
shlb
and
or
and
jmp
jmp
inc
in
or
or
jmp
imul
jle
fiadds
and
lods
and
in
sbb
xchg
sbb
or
and
dec
and
sub
xchg
divb
push
dec
gs
inc
sub
cli
push
ficoms
add
in
das
cli
push
lods
jge
push
lea
add
or
loop
cli
mov
aam
stos
and
inc
pop
pop
inc
int
es
or
call
push
or
fstl
ds
and
fcom
mov
mov
inc
loope
pop
es
and
aas
in
add
loope
es
int
and
mov
aas
loope
pop
aaa
and
loope
cmpsb
jmp
loope,pt
mov
adc
push
fstpl
sub
mov
and
and
gs
shll
in
fnsave
sbb
inc
lods
fstpl
push
and
daa
mov
in
mov
xchg
loope
or
fiadds
mov
into
loope
and
add
xor
or
add
xchg
adc
enter
mov
lods
jno
add
adc
fistps
sbb
sbb
fnsave
int
sub
xchg
and
adc
jmp
sub
jecxz
jmp
mov
push
pop
mov
std
testl
ja
xchg
push
sub
pop
pop
cmp
sub
daa
ffreep
loope
test
std
aas
enter
aas
fnstsw
inc
push
mov
rcll
dec
pop
loope
sbb
dec
fcomps
or
stos
push
pop
xchg
sbb
pop
or
adc
scas
loope
jge
mov
sub
add
in
shr
shl
test
fisttpll
in
jle
stos
loope
sbb
aaa
movsl
lods
outsl
pop
and
shll
mov
xchg
out
movsb
icebp
dec
xor
sub
aas
loope
xor
jae
pop
cmp
aas
jo
xor
cs
adc
fs
lea
aaa
fisubrs
pop
jmp
add
push
and
test
xor
notl
sbb
dec
mov
fdivp
mov
mov
and
sbb
cmp
pop
hlt
pop
adc
and
aad
pop
and
fcomps
leave
repnz
cltd
aad
ljmp
jno
adc
sub
mov
fs
test
cmp
fs
das
fstpl
push
daa
movsl
add
sub
add
stc
push
sub
fnstsw
push
sub
xlat
mov
iret
notl
add
out
sub
in
in
orl
mov
and
or
sbb
movsb
pop
sub
jg
ja
gs
pop
aas
sub
pop
ficomps
lock
mov
loop
loope
sbb
or
pop
lods
jle
xor
push
sarl
jge
cmp
loope
jno
xor
sub
sti
aas
in
sbb
movsb
pop
sub
fnsave
stos
dec
fstl
adc
adc
stos
and
or
fstp
xchg
dec
loop
dec
pop
and
fs
fldl
leave
fucomi
add
shl
fnstsw
adc
add
add
sbb
jmp
daa
test
jmp
mov
sbb
fnsave
andb
sub
push
inc
divl
mov
sbb
in
in
repz
xchg
in
sbb
xchg
loop
jno
addr16
loope
insb
adc
flds
pop
subl
mov
loope
sbb
das
aam
sub
in
lea
adc
in
fisttpll
leave
call
and
pop
push
xlat
shr
jbe
push
pop
ss
and
cli
or
sbb
pop
das
shlb
loope
fimuls
push
xor
inc
in
push
push
ja
jnp
push
push
mov
and
push
push
sti
and
jge
aas
aad
loope
adc
cs
sbb
xchg
sbb
sbb
loope,pn
jge
ljmp
and
incl
add
mov
cmp
and
out
push
push
cmc
pop
aas
jmp
add
fisubrs
das
daa
ficompl
sub
ss
sub
sbb
add
roll
mov
stc
sbb
pop
push
jno
sbb
es
cmc
in
or
or
push
mov
adc
and
call
push
xchg
pop
jp
lods
adc
rcr
pop
push
adc
xchg
jge
imull
cmp
adc
fwait
in
sbb
ljmp
push
test
cmp
popf
pop
cmpsb
sbb
push
sti
and
loope
or
negl
mov
stc
or
std
inc
loope
std
push
adc
sti
dec
sbb
mov
inc
adc
mov
jp
sbb
sbb
xchg
jne
fstl
ss
sbbl
fnsave
aas
mov
and
maskmovq
mull
adc
and
sbb
and
inc
pop
xchg
sbb
out
aas
sub
sub
dec
imul
out
out
jnp
movsl
lret
and
adc
cs
sbb
gs
rcl
aas
xchg
pop
repz
sbb
jmp
nop
fldl
xlat
out
mov
sub
mov
in
and
jmp
and
call
sbb
aas
frstor
cmp
push
cmp
fstpl
lea
sub
xor
adc
loope
jmp
daa
loope
sbb
fmuls
or
pop
jb
jmp
push
jns
mov
lcall
and
aam
fsubrs
loopne
frstor
adc
sub
stc
dec
adc
mov
adc
mov
and
ds
loope
ficoml
fcomi
xor
aad
sub
inc
inc
pop
sysenter
sub
xchg
loope
and
mov
fsts
pop
sbb
pop
in
test
push
mov
adc
mov
and
fpatan
cs
push
sub
xorb
mov
jb
mov
loope
push
xor
sbb
xor
xor
loop
or
loop
and
push
das
ljmp
push
divl
in
ljmp
push
and
cmpsb
push
add
xchg
lcall
push
in
loope,pn
and
sbb
mov
mov
jnp
or
or
pop
shrl
adc
or
stc
push
push
xlat
jae
negl
call
inc
or
in
ret
adc
lock
jbe
testl
in
out
rcr
jmp
jne
push
stc
adc
call
push
and
adc
movsl
add
in
jmp
adc
ss
js
push
push
dec
mov
adc
mov
in
fsubrs
std
fists
push
fcmovnb
lods
adc
mov
dec
push
sub
pop
sbb
adc
sahf
xor
xor
xor
add
xchg
icebp
aam
jne
adc
fists
sbb
xchg
sub
xor
loope
xlat
loope
push
and
xchg
jle
mov
loope
push
sub
jge
fnstsw
and
mov
stos
in
inc
sbb
bnd
loope
pop
inc
or
outsb
testb
stc
push
xor
inc
xorb
push
mov
mov
and
mov
sub
std
cmp
and
fldl
push
and
sub
test
js
loope
push
aad
sub
sub
xor
pop
push
subb
push
jge
adc
bound
add
shll
rcrb
and
cwtl
or
mov
fsub
adc
call
ja
stos
ds
faddl
sbb
sbb
jmp
sbb
fstl
mov
adc
sbb
add
aaa
mov
jle
sub
add
loope
es
xor
out
adc
jnp
fistpll
mov
adc
shlb
cmp
fsubr
adc
stos
pop
pop
adc
test
scas
mov
and
and
imul
and
push
adc
sub
andb
and
xor
and
mov
sub
xor
mov
std
pop
stos
sub
and
fstl
loop
imul
dec
push
adcl
pop
sti
in
xchg
fcmovu
fdiv
add
shl
or
jecxz
or
es
filds
test
cmp
repz
in
inc
rolb
inc
cmc
fcompl
dec
adc
int
aas
in
cmp
xchg
rorb
inc
jl
fsub
rorb
xchg
in
adc
pop
dec
xlat
aad
lahf
in
stos
inc
cmp
inc
rcr
push
dec
or
in
jecxz
push
insl
mov
testl
push
jp
pop
push
mov
and
je
lret
xchg
loope
cmpsb
shll
adc
das
cli
aad
push
repnz
push
adc
push
mul
cmc
inc
fsts
fstps
and
pop
and
mov
cli
andb
es
xor
aaa
add
adc
push
out
xor
movb
cmc
in
mov
in
push
stos
and
ja
pop
les
call
out
inc
loop
jb
mov
jo
popf
mov
dec
jecxz
jecxz
adc
dec
push
mov
sub
jb
xchg
xlat
sub
andl
and
fcomp
pop
or
cmc
xor
adc
push
xor
jmp
std
pop
cmp
lahf
add
popa
mulb
sub
leave
fimull
xor
stc
cmpsb
idivl
push
nop
rcr
notb
pop
fucomp
pop
jecxz
inc
cwtl
sbb
add
push
push
daa
inc
inc
xor
fcoms
ljmp
sbb
pop
inc
rcrl
sub
popf
lret
sub
pop
fcom
push
inc
loopne
adc
or
or
adc
dec
ficomps
mov
inc
out
jg
fcomp
mov
pop
adc
xlat
push
pop
mov
aad
sbb
adc
pop
lods
aad
sub
add
sub
fsubp
push
scas
dec
fdivrl
pop
add
cld
sub
xchg
push
xchg
rcll
inc
lods
push
roll
rcl
aad
sub
adc
push
clc
sbb
sub
das
aaa
mov
rcll
loope
stc
ljmp
sub
es
pop
into
pop
sbb
adc
lds
jge
sub
and
cmp
cmp
mov
test
push
xchg
es
xchg
xchg
rorl
es
mov
pop
into
xlat
sub
mov
inc
fcmovne
fstl
fdivrs
mov
inc
push
std
dec
aad
push
divl
andb
sub
icebp
dec
push
adc
lea
pop
call
aad
jp
hlt
xor
out
cli
gs
fwait
shl
in
repnz
fldl
aam
adc
push
xor
add
decb
shlb
jb
jno
shl
pop
and
adc
rcl
fadd
mov
shlb
sbb
jne
daa
and
sahf
aam
in
fldl
push
repnz
fildll
mov
rcl
mov
fcmovu
jbe
and
repz
jmp
mov
ja
push
jno
into
into
adc
pop
jp
add
xor
push
shlb
xchg
repz
inc
mov
shll
shlb
sub
jae
shlb
aad
lods
xor
lods
add
std
ret
mov
sub
add
int
mov
shr
mov
aad
adc
aad
ljmp
fcmovnu
cmp
jle
fldpi
fcmovnu
fcoml
call
loope
push
in
inc
aad
push
lret
jmp
loope
adc
adc
and
jmp
sub
in
sub
ds
jmp
cmp
out
addb
add
push
test
push
xchg
flds
in
push
sbb
arpl
loope
jae
fdivs
inc
cmpb
mov
mov
xchg
ljmp
fstl
out
inc
fst
push
push
fiaddl
aad
repnz
aad
repnz
aad
repnz
push
imul
daa
push
dec
fmull
in
xlat
gs
add
test
jmp
sbb
js
dec
or
movsl
aaa
mov
movsl
ftst
pop
in
cmp
es
js
popf
mov
xchg
push
rolb
dec
xor
dec
dec
movsl
fstps
dec
movsl
mov
adc
push
dec
adc
jno
scas
loope
stos
inc
and
shll
jp
loop
sbb
add
divb
lods
adc
push
cwtl
push
inc
and
add
and
and
aaa
adc
ds
mov
shl
xchg
adc
loope
int
lock
dec
cmp
pop
movsl
aad
sub
jne
cmpsb
add
xor
dec
sub
rolb
outsl
inc
test
pop
sbb
cmp
or
adc
push
aad
sub
and
dec
push
push
adc
jb
adc
outsb
lcall
adc
stc
and
in
push
push
repnz
lds
jae
sahf
mov
and
bnd
inc
std
sarl
xchg
outsl
cmp
mov
mov
pusha
and
mov
push
rcl
pop
sti
xorl
push
mov
push
rorl
js
sarl
rcll
inc
cwtl
mov
mov
mov
adc
stc
or
inc
mov
rcll
scas
pusha
mov
outsl
int
mov
jae
dec
shll
push
push
clc
rcll
cli
loop
jl
and
mov
xchg
int3
push
mov
leave
mov
mov
cltd
arpl
js
shll
mov
sbb
aaa
jmp
pop
inc
dec
fwait
sbb
pop
sub
jns
or
mov
shrl
seta
or
sub
das
js
jae
xchg
shll
ja
or
mov
pop
stos
imull
pop
lret
lods
sarl
jl
lret
xchg
je
lcall
insl
shrl
pop
aam
xor
lahf
sahf
cmp
adc
leave
fsubrl
lret
ss
imul
shll
sub
mov
mov
cmc
push
sbb
in
sbb
jns
adc
sarl
cmp
adc
mov
adc
shll
mov
iret
mov
sahf
sarl
adc
push
sub
nop
addr16
rcll
lahf
out
shrl
mov
mov
rcll
jg
andl
cwtl
mov
mov
dec
adc
daa
sub
dec
in
xor
test
fcoms
int
cmc
adc
ja
or
mov
adc
jae
mov
rorl
mov
dec
rcr
sahf
cmc
es
push
shll
push
packsswb
or
dec
xor
mov
shll
mov
iret
shrl
adc
mov
js
or
adc
mov
or
inc
out
movsb
cmc
lods
roll
sbb
or
rcll
push
js
roll
jecxz
and
jno
sub
shll
and
mull
jbe
mov
xchg
dec
int
cwtl
lock
rcrl
sub
xchg
and
hlt
ljmp
iret
popa
sbb
pushl
ret
scas
js
cli
aam
rcl
rcl
not
sub
add
add
add
dec
nop
adc
sub
add
xor
adc
add
add
dec
outsl
popa
fs
imul
add
push
imul
insb
insb
outsl
arpl
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
repz
jmp
int
clc
jae
mov
test
clc
jae
test
add
jae
and
roll
add
add
int
add
add
push
pop
repz
ror
jmp
pop
clc
jae
add
jae
mov
repz
jmp
stc
repz
call
stos
pop
movsbl
jmp
cmc
cmp
movsbl
repnz
shl
jmp
int
shl
jmp
adc
sbb
jmp
cmp
or
jmp
jge
repz
clc
jae
mov
add
repz
out
or
add
sub
fcmovb
lret
sub
jmp
cltd
imul
jmp
ja
clc
jae
pop
sub
stc
jb
xor
inc
jmp
int
imul
xor
sub
jmp
int
dec
stc
jb
aaa
sub
jmp
mov
push
repz
repnz
xor
repnz
jmp
add
shll
fpatan
sub
repz
jmp
int
sbb
repz
repz
clc
jae
xchg
xor
add
jmp
int
xor
repz
clc
jae
push
add
clc
jae
pusha
sub
jmp
int
mov
jmp
fsubrp
add
repz
repnz
imul
jmp
int
jmp
sub
jmp
sar
jb
jp
add
jmp
sbb
xor
shl
jmp
int
repnz
call
imul
adc
add
fsubrp
add
jae
je
movsbl
sub
repz
jmp
int
jmp
out
mov
movzbl
repnz
repnz
call
pop
jmp
sub
movsbl
movsbl
jmp
jecxz
add
add
mov
test
push
inc
stc
jb
fwait
stc
jb
adc
jae
lock
jmp
push
pop
fadds
pop
test
and
inc
cmp
stc
pop
lock
xchg
sbb
outsb
and
leave
subb
sub
push
outsb
mov
imul
jbe
jge
jns
stos
cmpsl
lods
fidivs
fcmovnb
mov
loope
out
jecxz
cltd
add
mov
test
scas
sbbl
inc
leave
test
lcall
pop
jno
or
inc
jecxz
loope
nop
jmp
sub
push
pop
fistpl
dec
test
sbb
mov
mov
les
sbb
pop
cmp
xor
push
rolb
sub
ret
aad
mov
jl
sub
cwtl
loope
daa
sbb
add
sbb
test
scas
adc
mov
cltd
xchg
sbbl
outsl
shlb
jge
faddl
imul
jmp
mov
ffree
sbb
and
outsl
cmp
xchg
in
sub
cltd
lret
stos
andb
daa
mov
fcmovnu
loop
mov
jmp
add
jbe
fwait
xor
xor
ret
movsl
push
loop
add
push
add
mov
lods
dec
pop
xor
sub
cmpsb
jno
xchg
adc
out
jecxz
push
fucom
fwait
adc
std
aaa
pop
mov
add
jecxz
lcall
inc
stos
add
and
lret
in
push
pusha
xchg
insb
fcomp
rcr
out
lret
mov
dec
pop
cmp
fadd
adc
sbb
daa
adc
cwtl
repnz
aaa
cwtl
loope
loope
or
adc
test
mov
sbb
arpl
sarb
sbb
pop
inc
push
jb
imul
pusha
jmp
mov
fbstp
popa
pop
imul
popf
sti
push
sbbb
imul
xchg
ja
shlb
fcoms
pop
cld
imul
imul
lcall
rdmsr
and
das
xchg
lahf
mov
pushf
mov
popf
imul
sbb
ror
fcomps
push
loope
into
outsl
scas
mov
jbe
push
fnstsw
cmpsl
sti
movsb
sbbl
out
or
adc
sbb
stos
mov
ljmp
loope
jo
leave
mull
pop
fsubs
push
call
cmp
ret
mov
loope
mov
or
lahf
dec
xor
add
xchg
bound
pop
pop
mov
sbb
mov
movsb
mov
add
sti
outsl
sbb
fld
jl
pop
inc
pop
mov
lret
pop
push
enter
pop
lcall
or
roll
and
jae
mov
sahf
xchg
mov
fsubl
stos
fistpll
loope
cmp
xchg
sub
cwtl
gs
loope
mov
fs
pop
xorl
cmpsl
mov
lahf
mov
mov
sbb
imul
out
shl
inc
pop
pop
cvtps2pd
pop
jnp
out
jge
push
insb
pop
test
je
leave
mov
sbbb
adcl
popf
push
or
dec
pop
fsubs
insb
fcomp
rcr
lret
loop
rorb
fadds
ret
cmpsl
lea
jecxz
decl
cwtl
pop
fisubl
or
cwtl
or
or
and
sbb
je
stc
push
adc
dec
jno
nop
xor
movsl
cmpsl
movsl
movsl
mov
and
fs
stc
movsb
pop
jbe
inc
pop
cmp
cmpsb
mov
adc
mov
gs
int3
jo
scas
mov
leave
insl
dec
mov
imul
pop
sbb
mov
push
dec
movsb
xorl
jb
adc
push
ljmp
and
roll
and
pop
sbb
subb
mov
dec
pop
pop
and
pushl
lock
cmp
cmp
adc
cld
jb
in
sbb
in
sub
add
mov
cld
dec
xor
push
adc
cld
mov
aaa
add
mov
and
mov
icebp
push
xchg
js
dec
mov
out
lcall
pop
jg
jae
cmc
js
push
dec
iret
sbb
test
std
pop
pop
lret
pop
or
mov
into
mov
sbb
lret
out
pop
and
ds
js
sub
stc
pop
xchg
xchg
pop
aam
dec
loop
xorb
xchg
sbb
movsl
movsl
movsl
icebp
mov
dec
cmc
bound
test
movsl
into
sub
lds
into
cltd
cwtl
out
loopne
and
sub
push
sbb
push
cltd
clc
and
test
sbb
cld
mov
movsl
pop
sub
mov
mov
test
adc
ret
xchg
pop
cmpsb
xchg
cs
mov
xchg
sbb
and
inc
stos
mov
pop
pop
mov
icebp
mov
inc
cld
dec
insb
pop
lock
subl
leave
mov
bound
mov
data16
push
movsl
out
sub
sub
xchg
gs
xorb
out
clc
mov
cmpsl
adc
je
sbb
popa
subl
nop
cmpsb
mov
popf
mov
imul
push
xchg
adc
insl
mov
sbb
mov
les
arpl
sbb
cwtl
lods
idivb
ds
test
fildl
mov
stos
mov
mov
pop
mov
les
sbb
leave
test
test
add
sahf
rcr
shll
in
mov
test
and
fwait
sbb
mov
mov
jno
movsb
popf
mov
outsb
hlt
pushf
cmpl
xchg
not
std
lock
adc
mov
inc
xor
fsubs
or
fnstenv
mov
jno
cmp
ss
mov
lahf
in
mov
or
mov
pushf
sub
sub
sub
add
lods
clc
loop
imul
pushf
ret
mov
and
fnstsw
xchg
jg
pop
fiadds
testl
xchg
repnz
xor
enter
pop
dec
xchg
add
pop
fimuls
ret
lahf
mov
sbb
ret
mov
pushf
jo
nop
arpl
cs
fcoms
mov
jo
push
pop
movsl
sub
out
sarb
mov
ret
sbb
lock
lods
push
out
ret
mov
xchg
push
adc
dec
loopne
mov
pop
filds
add
cmp
lds
mov
jbe
mov
lock
cmpsb
out
movsb
sbbb
fs
mov
ljmp
fcmovnbe
sub
pop
cmpsl
out
sub
push
lods
repnz
stos
and
adc
and
testb
js
testl
loopne
cmp
mov
xlat
rclb
xor
dec
mov
pop
dec
shlb
add
test
mov
mov
jmp
mov
sub
jmp
add
incl
xchg
cmc
push
dec
xor
jo
test
lods
sbb
aad
test
mov
loop
mov
jg
cmp
push
dec
fisubrl
push
mov
dec
std
fistpl
cmc
inc
lods
mov
data16
or
xchg
popf
adc
lods
das
mov
xor
jns
fmull
js
aad
fs
lods
arpl
pop
shl
movsb
hlt
dec
movsb
lahf
lcall
mov
sbb
push
push
sbb
push
lods
lods
adc
mov
arpl
shrl
clc
stos
sbb
pop
jecxz
dec
dec
shl
frstor
pop
cmp
imul
addr16
push
icebp
call
xchg
jnp
jmp
imul
mov
popf
nop
cmpsb
in
add
and
pop
sub
js
pop
jne
out
add
jp
pop
xchg
adcb
push
mov
add
mov
mov
popf
or
bound
and
mov
out
stos
jnp
sbb
loop
cmp
mov
adc
jbe
movsl
orl
mov
stc
sarl
and
pop
inc
sbb
adc
pop
push
mov
xchg
xor
dec
inc
push
push
movsl
aad
jbe
addb
int
inc
adc
sub
movsb
pop
jns
jbe
xchg
scas
icebp
and
jmp
push
rcll
sub
jns
lods
jno
mov
mov
mov
rcll
sbb
xor
aas
movsb
cwtl
or
mov
test
push
dec
aam
dec
nop
xchg
rorb
mov
dec
jecxz
inc
cmp
popa
cwtl
push
shrb
mov
mov
cmp
add
xchg
movsl
pop
fprem
pop
xchg
test
jp
iret
int3
sahf
shld
inc
arpl
mov
into
testl
and
fisubl
pop
mov
cwtl
mov
jecxz
lods
out
aas
sub
dec
lods
push
movsb
adc
std
mov
or
das
stos
add
add
push
fisttpl
ljmp
daa
jno
jg
mov
sbb
lods
cmpsl
loope
sbb
push
stc
and
pop
test
or
mov
movsl
sub
or
scas
leave
pop
sbb
shlb
pushf
jne
sbb
frstor
pop
push
push
xchg
sbb
push
fdivr
and
pop
int3
mov
xor
xor
sub
fiadds
idivl
stos
iret
dec
pop
stc
lret
repz
inc
lea
and
or
outsb
cwtl
ds
jae
mov
mov
std
adc
jl
repz
xchg
bound
mov
scas
push
cmpsb
sbb
mov
cmp
rcr
jbe
aaa
jmp
and
cld
imul
scas
push
fiadds
jg
imul
adc
sti
sub
into
gs
mov
movsb
test
movsl
sahf
xchg
xchg
and
clc
ja
fisubs
mov
push
std
cld
xchg
lahf
lods
jl
push
pop
and
scas
sbb
sub
sub
sub
add
adc
es
sub
andb
cmp
inc
mov
dec
imul
jo
nop
sbb
ds
pushf
push
sbb
or
sub
or
out
jbe
out
xlat
cld
shl
jno
inc
in
loope
add
cmp
int
mov
enter
sbb
cmc
xchg
cmp
mov
aam
lods
imul
sbb
pop
jle
pusha
jle
add
nop
push
test
insb
icebp
aad
test
xchg
and
cmpsb
and
or
mov
ss
lcall
lea
int3
stos
adc
xchg
addb
cmp
jl
jo
xor
aas
push
nop
bound
arpl
jo
cmp
js
cmpsl
scas
cmp
call
sbb
sahf
ds
dec
inc
and
mov
ret
lods
cwtl
push
xor
jbe
loopne
add
in
add
xchg
or
push
sbb
pusha
cmp
mov
push
and
cs
and
sub
fdivrs
adc
std
leave
add
clc
stc
testb
push
out
call
fucom
pop
lret
loop
jl
into
shrb
mov
loope
rcl
test
int3
mov
cwtl
mov
xor
and
arpl
cli
test
mov
adc
fidivl
pop
nop
push
mov
js
xor
xchg
mov
cwtl
push
and
dec
ljmp
cmpsb
cmpsl
movsb
popf
inc
inc
test
aaa
cmp
std
rcrl
in
pop
jmp
or
sbb
push
leave
lahf
rolb
dec
sbb
fs
scas
pop
repz
cli
std
push
pushf
xchg
test
loop
fidivrs
ret
repz
js,pn
adc
es
inc
jl
das
cs
pop
adc
mov
mov
adc
inc
pop
add
add
inc
sahf
xor
out
mov
adc
lret
pop
xor
inc
and
or
mov
sbb
or
repz
fsts
js
sub
stos
rcl
lcall
rolb
mov
scas
mov
inc
push
mov
aad
dec
xchg
add
mov
fisttps
push
or
jmp
cltd
nop
lcall
push
jnp
ja
imull
cmp
pop
add
es
shlb
mov
lods
scas
stos
push
insb
insb
or
jecxz
ja
repnz
outsb
or
jle
pop
loop
jb
jecxz
cld
aam
into
adc
gs
add
inc
leave
shr
xchg
cwtl
jmp
scas
sbb
dec
sub
pushf
fidivrl
lock
outsl
xchg
js
inc
and
in
shrl
ljmp
sub
xchg
out
sti
adc
imul
sarb
imul
add
pop
push
or
push
pushf
pop
scas
sbb
pop
xor
nop
cmp
ss
mov
cmc
test
xor
or
sbb
in
imul
mul
sub
out
inc
mov
mov
scas
shlb
pop
jnp
xchg
sbb
pop
pop
push
out
rorb
mov
jb
pop
js
sti
or
mov
pop
push
mov
dec
push
and
hlt
mull
lea
loopne
scas
in
xor
pusha
jne
push
or
loop
iret
mov
cwtl
jbe
add
lds
and
jns
pop
scas
pop
mov
jmp
enter
pop
sbb
mov
movsl
into
fnsave
xchg
imul
loop
test
scas
in
inc
pop
call
arpl
into
jl
mov
xchg
icebp
mov
sahf
inc
in
jo
mov
inc
jmp
out
pop
out
fwait
push
dec
mov
mov
loop,pt
iret
int
sub
xor
mov
xlat
sbb
aaa
repnz
dec
lds
les
adc
sbb
dec
and
jl
fsubrl
pop
jne
mov
mov
mov
mov
mov
xchg
adc
test
aam
add
xchg
adc
repz
iret
jl
or
jo
or
test
push
int
cs
in
push
cltd
sub
gs
push
pop
push
fsubrl
jns
sub
sbb
add
rcrl
shll
enter
and
push
mov
mov
ljmp
mov
dec
inc
into
nop
push
mov
je
nop
mov
sarb
dec
out
data16
xor
mov
test
faddl
add
inc
andb
icebp
ret
addl
pushf
inc
out
pop
out
ja
jmp
adc
jg
cs
rolb
mov
mov
xor
jno
and
jbe
jl
xor
pop
push
cmp
push
dec
dec
pop
xchg
lods
in
dec
sti
les
xor
mov
push
iret
mov
lret
daa
dec
shll
sbb
mov
adc
out
pop
stos
push
ss
cmp
mov
inc
mov
int3
cmc
or
sbb
mov
addr16
inc
jno
push
outsw
jnp
les
pop
fidivrl
insl
enter
add
iret
cmp
dec
push
clc
mov
lods
iret
xlat
xchg
xchg
xorb
or
xchg
out
notb
mov
cltd
jnp
and
and
pop
divl
mov
mov
sbb
push
call
or
lret
lret
jle,pn
jecxz
add
pop
mov
ljmp
fsubs
movsb
and
dec
cmpsb
dec
jns
jmp
dec
jnp,pn
mov
jecxz
fstpl
push
sbb
jp
ja
inc
in
pop
sub
mov
add
das
cmp
outsb
inc
pop
loop
in
or
mov
and
and
sbb
negl
fisubrs
jnp
sub
and
cmp
aam
jno
push
cmp
push
xchg
mov
add
push
and
lods
outsb
cmp
inc
push
test
inc
lahf
shlb
pop
push
popf
inc
jae
cmp
int
mov
push
es
sbb
incb
cltd
fmuls
or
push
leave
cmp
dec
mov
in
mov
mov
xchg
loopne
insb
stos
xchg
cmpsb
test
xor
sti
ss
jmp
mov
xchg
outsb
xchg
xchg
adc
movsb
add
cli
int
add
push
stc
aas
loope
xor
mov
out
div
cs
mov
add
mov
aaa
inc
cmp
pop
aad
shll
sub
shlb
sub
inc
cwtl
jne
push
push
das
lods
or
adc
jo
xor
sbb
in
movsl
mov
adcl
sub
sub
mov
dec
jmp
push
pop
push
ss
sub
xchg
insl
test
mov
stos
lock
inc
push
imul
iret
sbb
lret
pop
insl
insb
lods
cmp
pop
xchg
imul
es
out
lea
push
icebp
adc
cmp
add
popf
or
lret
fmuls
call
jle
ret
lds
pop
pusha
jne
or
out
out
aad
mov
orb
xchg
icebp
test
mov
cwtl
sub
repz
mov
and
adc
div
pop
leave
cmpsb
dec
or
test
mov
les
gs
dec
stos
lret
push
in
lock
cmp
cmc
mov
daa
adc
shll
and
aad
outsb
ja
or
pop
and
stos
mov
inc
fildl
test
jne
or
sub
mov
and
push
add
xchg
sbb
xor
xor
push
mov
test
cwtl
aaa
pause
mov
inc
rolb
mov
jge
aam
outsb
sbb
iret
inc
jp
pop
pop
cmp
jmp
sbb
outsb
push
push
ss
shrl
push
inc
scas
pop
fsub
pop
stc
loope
adc
jnp
es
in
jb
lock
std
lds
push
mov
out
xor
imul
fwait
out
lahf
mov
sarb
xchg
rorl
sahf
sahf
and
cwtl
xlat
xchg
mov
mov
lahf
or
addr16
cmpsb
fcmovu
push
dec
xchg
push
stos
cmovle
xor
inc
mov
lock
dec
scas
test
jecxz
and
mov
mov
pushw
pop
add
pop
jg
iret
rclb
mov
xchg
or
pop
sbb
pushf
add
add
push
mov
scas
leave
and
stos
lahf
jne
mov
sub
or
shll
out
test
jp
call
jl
adc
addl
ja
push
push
push
je
int
add
imul
dec
cwtl
dec
outsb
and
sbb
sbb
shll
jno
add
pusha
mov
mov
test
shrb
xchg
mov
aas
mov
icebp
jne
fwait
sahf
cltd
push
mov
pop
mov
out
dec
sti
cmp
lcall
outsl
dec
mov
call
lods
mov
clc
out
repnz
push
inc
push
and
fdivr
fs
lret
ds
loop
dec
inc
xor
sub
inc
into
repz
in
rcrb
std
fiaddl
mov
clc
mov
cs
sub
fs
daa
pop
rorl
and
cwtl
and
mov
inc
pop
dec
jo
out
cli
lods
mov
enter
push
jnp
lret
adc
leave
pop
inc
data16
js
xorb
enter
pop
ret
mov
xchg
jge
lods
rorb
fisubrl
xor
add
jl
sub
shll
push
push
repnz
loopne
sbb
or
jg
cmp
aam
out
mov
inc
out
cli
std
clc
aaa
iret
xor
mov
addl
loop
fldenv
lret
shl
jne
aad
jns
add
pop
fsubrs
imul
jae
filds
push
jecxz
out
push
xchg
les
shlb
push
sub
ficomps
and
or
pop
gs
inc
xchg
repz
adc
test
sbb
arpl
mov
arpl
sub
nop
stos
and
and
fisubl
jbe
sub
insl
push
aas
push
fisubs
xor
xor
lds
notb
cwtl
inc
mov
add
cld
dec
ja
cwtl
movsb
cmp
repnz
sbb
push
dec
loop
or
loop
outsb
xchg
jo
push
mov
scas
cmpsl
add
push
in
int3
das
bound
pusha
bound
fmuls
lahf
inc
mov
adc
mov
xchg
sti
clc
mov
call
test
xlat
stos
fisttpl
sahf
add
rclb
cmp
xchg
shlb
mov
sbb
jbe
repz
push
push
js
adc
pusha
lods
popa
cmp
sbb
or
repnz
paddw
out
leave
jno
mulb
xor
es
push
inc
sbb
jmp
dec
push
mov
fnstcw
pop
rcrb
jns
insl
and
dec
enter
inc
push
fsubrl
and
fistps
xor
lret
sbb
xor
push
daa
cmp
adc
iret
cmp
pop
movsb
out
or
xchg
xor
lock
and
cmc
inc
fcmovne
ja
or
into
mov
ljmp
in
mov
cltd
addr16
jge
lret
dec
push
pop
jne
mov
and
repz
lret
mov
dec
and
shlb
cltd
lods
in
add
mov
jg
xor
sahf
test
aad
mov
seto
mov
pop
lock
mov
mov
mov
jg
cmpsb
in
push
lcall
push
lcall
fists
jae
jae
push
mov
pusha
fstl
xchg
sbb
mov
pop
adc
shlb
add
mov
dec
aas
repnz
inc
jne
or
cmp
in
adc
cmpsl
xor
add
xor
and
mov
pop
lahf
gs
dec
das
adc
jbe
cmpsb
out
mov
adc
rorl
mov
add
fldl
add
or
pop
adc
push
movb
icebp
cwtl
sub
lret
cmovno
sub
xchg
loope
push
fs
lock
sbb
pushf
int
mov
add
popf
xor
sub
ljmp
xchg
aad
xchg
shrl
push
cmp
cmpsl
jns
mov
sahf
cmpsl
xchg
sahf
scas
subb
and
jge
stos
inc
mov
subl
test
pop
mov
imul
push
pusha
in
cmp
pusha
push
pop
pop
orb
and
fucomip
dec
fucomi
aas
adc
cmp
sbb
call
lret
jecxz
loop
jmp
sti
fcmovnbe
add
adc
dec
and
mov
mov
add
adc
into
imul
xor
push
xor
sub
jge
paddb
push
dec
out
lods
pop
lret
ret
mov
lret
dec
call
jns
xlat
cmp
int3
sub
add
es
and
mov
sbb
insl
in
das
pop
gs
push
jp
sub
std
xchg
loope
mov
mov
add
sbb
lock
pop
and
jbe
fnsave
add
rorb
cltd
push
mov
lods
mov
lcall
xchg
andb
mov
jo
inc
rcrl
sbb
sub
stc
adc
xchg
jne
imul
mov
pop
pop
pop
push
sbb
cmpsl
adc
aas
js
jbe
data16
cld
gs
sbb
cmp
ljmp
add
jecxz
fisubrl
and
incb
dec
push
push
dec
roll
mov
push
pop
sub
mov
mov
test
and
sarl
scas
rclb
mov
mov
adc
jo
das
cmpsb
inc
cmpsl
mov
call
testl
or
lahf
fwait
ja
cwtl
push
inc
test
fcmovnb
mov
subl
int3
xchg
pop
nop
loopne
jbe
cmp
sbb
pusha
outsl
cmpsb
mov
call
push
xchg
aad
rcr
fcomps
idivb
into
adc
aaa
and
inc
sub
sahf
jmp
cs
ret
fwait
mov
mull
mov
dec
aas
xchg
shlb
push
scas
adc
sbb
loopne
lcall
sbb
cs
xor
inc
dec
in
inc
pop
cmp
add
lds
outsl
repnz
out
sarb
mov
push
stos
out
cs
pop
negl
and
out
push
sbb
add
and
imul
and
lods
push
dec
mov
jbe
mull
je
mov
arpl
jle
dec
rorl
inc
inc
dec
xor
inc
or
cwtl
mov
xor
sbb
std
lahf
cmp
pop
mov
adc
or
xor
jmp
lahf
js
dec
sub
and
push
pop
scas
sbb
lret
stc
imul
mov
xchg
jg
adc
rcr
into
ja
lret
xchg
cmp
mov
or
inc
fisubrl
stos
or
mov
xchg
lock
cmpsb
adc
sub
xor
and
add
enter
xor
daa
cmp
fwait
or
popa
pop
jns
and
hlt
es
push
in
out
das
shlb
sub
call
add
xchg
fdivrp
inc
cs
cmp
pop
pop
lcall
movsb
loopne
cmpsl
pusha
outsb
jb
in
xor
jmp
dec
out
mov
test
xor
pusha
and
push
pop
insl
sbb
jb
or
test
cs
ljmp
and
mov
es
cmpsl
stc
add
jge
fcoms
lahf
hlt
xchg
and
dec
fsubrs
jp
scas
dec
adc
jbe
mov
stos
push
adc
ss
pop
int
test
test
bound
dec
out
lods
xorb
push
scas
inc
mov
ljmp
pop
adc
or
inc
pop
iret
xchg
dec
fistl
mov
xchg
scas
pop
dec
clc
sub
sub
fs
inc
mov
and
adc
sub
jae
or
hlt
clc
cmpsb
inc
sbb
loopne
jl
and
fadds
into
daa
and
xor
push
adc
stc
repz
lods
pop
popa
nop
add
out
mov
add
loopne
sbb
jmp
lods
fisubrl
adc
xchg
loope
dec
inc
movd
popf
inc
xchg
adc
sarb
loopne
cmpsl
in
cmc
test
test
push
loopne
lcall
int3
mov
mulb
add
pop
leave
dec
mov
lods
movsl
add
mov
add
push
test
sbb
and
push
add
mov
cmp
lods
jmp
and
pusha
fs
subl
xor
mov
shrb
sub
and
ljmp
xor
loop
mov
dec
lds
push
push
pushf
lods
int
xchg
lret
adc
leave
xor
mov
nop
inc
adcl
nop
push
into
or
jecxz
mov
movsb
lods
movsl
cmpsb
push
xor
pop
inc
mov
out
or
rorb
sub
movsl
adc
dec
dec
movsl
movsl
lahf
sbb
jno
arpl
ret
add
pop
sbb
in
test
push
ja
push
movsb
adc
ja
std
or
mov
mov
pop
adc
pop
aam
xlat
mov
fdiv
popl
ljmp
xchg
jp
jge
jp
pop
repnz
test
gs
xchg
xor
xchg
add
loopne
jnp
mov
and
rcl
fstp
jb
pop
in
inc
xor
adc
sub
xchg
nop
dec
mov
mov
mov
xchg
inc
cmp
shlb
and
in
push
test
dec
sbb
and
sbb
subb
inc
loop
xchg
subb
mov
popl
and
push
cmp
hlt
add
push
enter
or
ljmp
push
dec
out
sub
mov
icebp
pop
push
push
mov
push
test
cmp
lret
pusha
fdivs
push
stos
ja
jl
and
sbb
push
xchg
outsl
push
push
lods
lcall
int
pusha
fwait
testb
adc
adc
xor
adc
dec
sbbb
stos
or
pop
mov
cmpsb
lods
lods
cmp
ds
mov
push
dec
cmpsb
mov
cmpsb
js
inc
jmp
sarl
aad
out
rol
daa
cmp
rolb
out
outsb
cmpsb
add
test
mov
and
repz
jp
lds
iret
add
rcl
pop
or
sub
inc
lcall
mov
jns
popf
lea
mov
mov
push
cs
test
out
push
pop
add
push
mov
sub
das
sub
and
nop
out
add
or
inc
cmp
popf
jo
push
loope
xor
jmp
cmp
jge
mov
lret
popa
pop
push
dec
push
pop
xchg
jo
pop
adc
push
pop
cli
inc
inc
inc
dec
inc
test
repz
pop
mov
adc
aaa
mov
shlb
sbb
scas
ljmp
ss
cmpsb
jno
insb
mov
add
push
and
imul
fld
sahf
lcall
mov
push
jle
je
dec
adc
popf
int
leave
jge
ss
push
lcall
addr16
mov
mov
icebp
push
out
in
pop
inc
popa
popf
mov
inc
loop
push
add
adc
inc
push
add
dec
nop
push
jno
das
and
cld
shlb
and
xchg
jne
ds
push
jb
outsb
cmp
dec
adc
jbe
jle
call
sbb
lahf
inc
sbb
shll
mov
adc
sbb
in
mov
stc
add
jns
jmp
add
loopne
pushf
mov
int
insl
sub
loop
xor
aaa
xor
stos
ja
push
loope
and
push
fs
inc
jg
gs
pop
dec
inc
pop
add
popa
sub
pop
xchg
out
pop
insl
push
dec
mov
and
std
cld
stc
mov
sub
jmp
scas
pop
loopne
out
adc
lock
adc
jmp
daa
xor
add
icebp
mov
sub
sbb
leave
stos
fbld
push
scas
jae
xchg
fwait
movsb
aaa
jmp
idivl
mov
divl
push
outsb
stos
adc
or
nop
out
call
fnsave
inc
add
movsl
negb
dec
jae
leave
sub
xorl
enter
or
xor
jo
lock
in
and
dec
sub
push
mov
int3
mov
and
sarl
jne
xchg
das
pop
aam
xor
andb
out
sahf
adc
push
clc
rolb
xor
push
aaa
fnsave
adc
mov
xchg
enter
outsl
daa
xchg
ja
popa
gs
pop
in
sub
pop
ss
fcoms
sub
and
pop
dec
mov
mov
mov
stc
int3
jl
aad
call
out
and
incl
aad
shl
ljmp
sbb
xchg
mov
mov
outsl
ret
les
shrl
iret
inc
mov
mov
loopne
mov
outsb
imul
ljmp
mov
idiv
fcmovnu
dec
stc
fldt
or
push
push
sub
push
cwtl
inc
xor
pop
movsb
dec
es
sub
ret
sarl
addl
mov
sbb
jnp
adc
mov
sbb
movl
xchg
and
sbb
or
call
loopne
in
xchg
add
mov
out
fbstp
mov
enter
or
int3
and
mov
xchg
mov
mov
sbb
xor
jnp
push
sbbl
lret
int3
lods
jne
pushf
hlt
loop
xor
cmp
movsb
in
sub
in
and
shr
jp
rep
nop
push
test
inc
pop
shll
addl
and
sub
adc
push
dec
sahf
pop
push
out
rcr
push
pop
xchg
out
add
and
fimuls
push
mov
xchg
push
xor
and
xchg
ret
mov
cmp
orl
jno
push
push
push
xchg
xchg
popa
and
jno
out
inc
dec
ja
int3
movsl
jmp
push
stos
cmp
jns
out
adc
xor
xchg
jae
xor
pop
je
cli
stos
outsb
dec
add
fistps
pusha
shrb
cmp
jae
push
dec
orl
fidivrs
leave
xchg
cltd
mov
into
shr
jo,pt
xchg
xchg
rcl
cmp
cmp
shll
cld
aas
xor
push
dec
mov
xor
or
push
jge
int
cs
jmp
enter
lock
shll
sahf
jb
inc
sub
sahf
pop
xchg
mov
mov
pop
movsb
sbb
dec
xchg
dec
inc
pop
and
jle
cmp
push
pusha
jne
push
cmp
cmpsl
mov
ret
pop
movsl
arpl
std
sahf
push
stos
cmp
pop
push
cmpsl
cmp
cmp
push
push
add
cld
out
das
clc
out
push
push
push
dec
and
lds
cmp
cmp
imul
out
inc
jb
adc
cmpsb
bound
fists
or
xchg
js
xchg
dec
imul
out
push
cmp
dec
imul
xchg
xchg
pop
xchg
push
xchg
popf
cmpsb
dec
mov
scas
leave
imul
xor
push
pusha
aas
mov
inc
sahf
xchg
push
js
push
movsl
lods
xor
lret
scas
test
mov
cmpsl
jge
popf
repz
movsl
sbb
gs
psllq
int3
out
das
cmp
cwtl
sti
cmp
add
xor
es
iret
adc
fcomps
mov
lock
pop
stos
push
mov
lahf
inc
inc
jne
push
mov
push
dec
dec
xchg
jle
sub
ret
gs
dec
or
nop
decb
mov
dec
pop
cmpsb
sbb
or
mov
aaa
sub
xchg
mov
rcl
push
push
mov
das
ds
dec
test
insl
rcrl
mov
mov
mov
inc
addb
outsb
fcomps
jp
jp
xchg
cmpsl
mov
push
les
or
xchg
adc
cmp
mov
or
sbb
add
sbb
mov
arpl
add
aam
and
je
aaa
and
pop
int3
pop
sub
movsl
xchg
aam
js
shrb
sti
loopne,pn
daa
cmp
inc
or
xchg
jp
movl
and
sbb
rcl
push
cmp
out
mov
nop
mov
jb
dec
mov
mov
xlat
sahf
mov
dec
pop
dec
popf
loop
dec
repnz
xchg
outsb
xor
movsb
cmp
lret
pop
adc
lcall
or
hlt
sbb
call
std
and
cmpsl
cli
mov
xchg
lfs
nop
incl
or
mull
iret
cs
pop
mov
pop
and
lret
push
cmp
push
pop
in
push
xor
pop
int
emms
mov
mov
cwtl
xor
add
xchg
pop
dec
xchg
pop
pushf
jnp
scas
pop
lcall
ss
dec
sub
das
dec
cmpsb
pusha
jle
test
popf
adc
jp
dec
int
mov
test
out
stc
lods
outsb
dec
rcl
adc
scas
jl
in
xchg
popa
negb
mov
add
mov
inc
nop
imul
inc
shl
xchg
mov
ja
sub
sahf
mov
ds
jmp
cmovbe
outsb
lods
imul
mov
mov
aam
jmp
outsb
mov
sub
mov
sbb
jle
cli
leave
loop
lods
test
xor
sub
scas
mov
mov
adc
ret
enter
push
mov
sahf
xor
sub
inc
ja
sahf
ret
shl
dec
aam
mov
jg
or
or
cmp
and
insb
xor
les
movsl
or
ficomps
inc
out
mov
stos
cs
sub
sbb
mov
ds
cwtl
mov
movsl
and
fcmovnb
or
and
ret
aam
and
xchg
mov
push
cmpsb
push
in
jle
sahf
xchg
daa
cmpsb
push
mov
cltd
inc
movsb
movsb
sub
lods
inc
cmpsb
pusha
push
or
jp
add
xor
push
push
cmp
movsl
insb
stos
repnz
cmp
ret
and
cmp
dec
pop
pop
add
dec
mov
jns
int3
xchg
xchg
lahf
mov
mov
aad
jnp
rcll
fdiv
cmpsb
loop
loopne
pop
mov
stc
out
xchg
rorl
lcall
ljmp
stos
aam
addr16
mov
in
pop
xchg
pop
mov
push
mov
inc
fsubr
jl
rclb
pop
cmp
clc
pop
mov
roll
dec
xchg
loop
or
mov
mov
pop
sub
mov
rclb
mov
mov
add
inc
lods
mov
out
jl
mov
xchg
xchg
filds
jmp
fidivl
pop
imul
and
sub
clc
mov
lahf
xchg
dec
inc
stos
jl
cmpsb
or
pusha
cmp
icebp
je
mov
mov
lcall
push
or
iret
mov
cmpsb
cld
push
and
pop
aaa
jge
inc
sub
aas
pop
push
jge
adc
sbb
mov
jbe
dec
test
jo
loope
jg
dec
out
jo
shlb
fucom
inc
sbb
mov
rcl
imul
in
mov
cmp
popf
scas
mov
and
je,pn
stos
pop
test
mov
and
xor
cltd
sbb
and
push
pop
pop
je
push
inc
inc
arpl
dec
jecxz
add
xchg
mov
cs
lcall
out
sbb
lret
mov
jbe
stos
cli
icebp
fwait
hlt
mov
pop
call
rcll
fcmovnbe
jecxz
fistpl
mov
mov
icebp
or
negb
sahf
sub
sbb
or
push
stc
iret
jbe
enter
pop
outsb
jge
and
xchg
in
fs
xchg
or
mov
test
popa
jecxz
and
push
cmp
test
ljmp
adc
push
or
in
fnstcw
pop
in
lds
into
repnz
ja
scas
pop
xor
sbb
lock
test
into
push
mov
stos
mov
cmc
sbb
sbb
push
fldenv
aad
adc
mov
mov
into
das
mov
cmp
call
jae
inc
jge
outsb
dec
xor
jp
mov
jb
fisttps
inc
xor
cmp
sbb
sbb
andl
jo
out
imul
rcr
cmp
out
sub
std
cmc
nop
lods
push
iret
xchg
into
cmp
adc
push
sub
mov
int3
icebp
mov
jle
lods
push
dec
inc
adc
sbb
cmp
sub
pop
out
mov
cmp
and
mov
push
rcll
sub
gs
xor
or
mov
or
and
movsb
int
cmp
jne
jb
add
mov
loopne
scas
xor
jge
cmp
loope
lret
mov
push
jecxz
in
mov
into
xchg
add
sahf
cmp
sub
mov
cmp
pop
adc
xor
out
ja
data16
arpl
subl
mov
test
decb
jno
push
mov
and
cmc
mov
movsl
rcl
inc
mov
mov
hlt
cmpsl
jmp
mov
ss
int
add
ds
gs
notl
int3
scas
mov
andl
jne
lahf
sub
adc
mov
lcall
inc
in
pusha
jae
fisttps
lods
or
xor
and
xchg
ljmp
xor
pop
jp
pop
mov
fcomps
cld
out
add
testb
fdiv
pushf
cmp
aaa
addl
es
mov
ret
add
adc
shlb
loop,pt
dec
incl
je
mov
sub
sub
xchg
and
pop
mov
sbb
pop
sub
push
sub
push
mov
pop
inc
js
cld
out
fs
jb
mov
and
rcrb
and
add
jae
cmpsl
mov
jae
jo
xchg
add
arpl
push
mov
xchg
mov
cmp
pop
popa
mov
xorl
lcall
cmpb
aad
dec
push
sahf
dec
inc
xchg
mov
dec
hlt
mov
out
add
inc
push
aam
ficomps
fstpl
outsl
dec
inc
dec
gs
fadds
aaa
inc
and
add
out
insb
icebp
inc
and
rcrl
cwtl
xchg
faddp
xchg
sar
idiv
cmpsl
clc
jns
sbb
dec
jmp
sbb
aam
jge
fisubs
add
into
xchg
inc
xor
lods
dec
lret
into
pop
rcll
loop
cmpsl
cltd
mov
mov
insb
push
xchg
mov
mov
enter
xchg
xor
cs
push
inc
mov
cli
xchg
push
inc
stos
xchg
int
imul
rolb
dec
divl
subb
push
sahf
leave
push
add
shl
je
or
mov
mov
ja
aad
cld
lcall
and
sub
sbb
test
jo
fldt
xchg
cmp
into
xchg
jo
mov
imull
es
out
lods
lcall
andb
jl
mov
inc
or
mov
addr16
pushf
scas
popa
clc
adc
lods
xor
aad
sti
mov
push
adc
inc
add
int
mov
pop
jbe
dec
cltd
cs
jmp
mov
pop
xor
ret
outsl
push
aam
jp
daa
loope
jl
aas
inc
jmp
mov
adc
adc
mov
xchg
push
icebp
pop
das
fsts
add
lcall
lods
gs
dec
outsl
lret
enter
dec
and
test
aam
mov
fidivrs
xor
pop
sub
mov
ljmp
je
add
or
into
iret
repnz
outsb
clc
repz
xchg
scas
fadds
jbe
push
das
cmp
xor
in
xchg
shll
ret
test
fcoms
mov
or
fcoms
pop
mov
adc
gs
rcrb
adcb
scas
push
dec
xor
mov
into
cld
imul
mov
or
ja
push
pop
lock
push
mov
cmpb
lock
and
dec
call
pop
popf
lret
push
arpl
sbb
xchg
repnz
sti
pop
in
jp
jmp
pop
out
xor
in
push
shll
dec
mov
mov
arpl
aam
or
jno
and
mov
mov
and
fldl
inc
fs
mov
mov
mov
repnz
sti
push
ljmp
iret
xchg
sbb
fisubl
das
cltd
cld
lahf
add
iret
jae,pt
mov
mov
lret
data16
dec
cltd
mov
ss
aaa
out
loop
mov
imul
adc
pop
es
bound
aam
lock
dec
inc
jle
adc
ljmp
lret
imul
or
imul
fsubr
loopew
cmp
mov
in
sub
int3
rorl
ficompl
out
gs
cmc
cli
mov
lcall
ljmp
push
repnz
shrl
add
fbld
dec
lret
jmp
xchg
jnp
push
pop
jo
scas
jle
inc
mov
lcall
sti
stos
xchg
int
dec
inc
jle
dec
je
inc
sbb
scas
outsl
dec
fs
stos
bound
insl
adc
mov
xor
xor
gs
cwtl
arpl
xchg
mov
fadd
sub
andb
jno
xchg
hlt
mov
jbe
mov
loope
lahf
mov
insl
insb
pusha
xor
mov
mov
sub
lods
std
icebp
mov
pop
inc
mov
add
rcrb
jge
pop
mov
aam
test
in
mov
push
push
nop
out
pop
je
rcll
out
add
mov
hlt
loop
sbbl
int
push
dec
adc
mov
mov
pop
ss
cmp
scas
push
shl
adc
sbb
xchg
pop
clc
sub
vmaxsd
mov
loope
out
in
or
lahf
fcomp
fistpl
fistpl
cwtl
sti
clc
into
js
test
jne
pop
xor
std
sub
push
dec
mov
fistpl
in
cmpsb
adc
ds
rcll
int3
pop
xchg
jmp
mov
test
push
mov
push
and
outsl
mov
mov
cmpl
push
out
and
mov
mov
cmpb
mov
andb
lret
xor
ljmp
icebp
sahf
into
imul
je
ja
loopne
rorb
imul
or
inc
dec
fs
mov
pushf
or
jb
xchg
mov
or
pop
int
dec
add
lret
clc
dec
test
and
insl
inc
loope
adcb
popa
lds
stc
jne
dec
cld
push
cmpb
fnsave
shlb
inc
sbb
sahf
repnz
pop
scas
fiadds
movsb
sahf
stos
dec
and
in
pushf
sub
divb
adc
adc
pop
mov
push
lcall
hlt
xchg
mov
inc
in
xchg
out
mov
push
jo
aad
test
jecxz
xor
mov
adc
mov
dec
es
xor
or
sbb
jmp
adcb
sub
loopne
mov
dec
mov
adc
xor
pop
out
push
leave
stos
aas
jmp
push
jge
out
pop
enter
inc
jae
aad
mov
cmp
xor
xchg
mov
jne
push
insb
fistl
stos
sub
shlb
stos
add
xor
mov
test
in
and
test
ficompl
xchg
stc
mov
xchg
sub
pop
lock
xchg
mov
gs
repnz
mov
jp
jmp
je
mov
push
lahf
lcall
pop
or
add
and
jmp
sbb
inc
xchg
les
mov
sub
xchg
mov
movsl
popa
fs
std
xchg
mov
add
dec
cli
stos
jno
rclb
scas
cmpsb
mov
add
lods
cmp
sub
mulb
inc
jno
rorl
les
mov
cwtl
mov
adc
mov
cmp
inc
jl
rsm
push
popf
ljmp
mov
push
and
movntq
and
sbb
in
xchg
xchg
repnz
scas
mov
adc
je
pop
out
xchg
xchg
jns
ja
in
lock
aam
out
jb
aaa
stos
arpl
addr16
mov
sbb
fcoms
cmc
adc
pop
insb
sbb
movsw
add
xor
jo
pop
jb
rorl
aad
adc
pop
fs
xchg
mov
inc
cld
and
faddl
lcall
push
push
jae
stos
cld
daa
push
shlb
lock
loopne
cwtl
sub
es
shll
cmp
inc
add
test
rorl
mov
fimuls
adc
mov
cmc
mov
push
hlt
hlt
lahf
jbe
and
and
iret
jb
aad
mov
pusha
cld
mov
orl
icebp
mov
xor
hlt
sbb
xlat
push
pop
xchg
dec
sbb
sub
mov
jns
test
adc
in
ret
dec
mov
mov
mov
cmp
pop
es
subl
lods
aas
or
push
sahf
sbb
jle
lahf
sub
cmpsb
push
js
les
sahf
and
ja
xor
jne
mov
mov
enter
lret
icebp
inc
cli
push
aad
dec
mul
test
test
mov
aad
mov
dec
test
cmpsl
shll
shlb
pushf
out
cli
add
xchg
leave
js
pushf
jge
and
mov
mov
push
stos
cwtl
out
mov
sahf
pop
mov
mov
bound
xchg
jp
push
sbb
insb
ja
std
iret
push
popf
outsl
push
sub
test
sbbl
xchg
inc
arpl
xor
jbe
ficoms
inc
or
int
ret
adc
cld
jmp
jb
sub
imul
sbb
dec
fsubs
int
push
imul
dec
lea
cld
add
sub
test
out
push
cmp
bound
adc
jbe
aad
and
add
inc
aas
scas
adc
int3
mov
pushl
fiaddl
pop
and
jne
sub
jno
dec
jae
int
mov
loop
push
daa
sahf
sub
sbb
or
or
popf
pop
sbb
lahf
mov
insb
pop
inc
mov
pop
push
loop
push
cmpsl
inc
jbe
cmpsb
and
repnz
adc
lahf
sbb
iret
xchg
lret
in
cmp
aad
and
xchg
shlb
cmpsb
xor
push
std
mov
cmc
cli
mov
insl
addr16
mov
jae
sub
ja
lods
in
mov
xchg
scas
in
xchg
lret
insb
or
testb
sbb
icebp
aad
das
pop
iret
dec
loope
adc
or
dec
cwtl
add
out
pop
mov
or
xlat
xchg
outsb
dec
sbb
in
arpl
pop
int3
pop
dec
cmpsb
cmp
mov
or
out
mov
test
mov
imull
daa
jo
dec
xchg
adc
xchg
cmp
sbbb
xchg
lods
arpl
xchg
in
jle
paddb
enter
add
ja
or
loop
sub
test
xor
push
movsl
ljmp
cmpsb
inc
and
mov
cmp
inc
adc
jae
in
jp
mov
mov
dec
mov
xor
movsb
insl
jo
movsb
adc
insl
cmpsb
and
add
mov
or
dec
rcrb
arpl
fisubl
iret
fidivl
pop
sub
cld
lods
inc
jmp
pop
jo
sub
and
sub
das
popf
fwait
mov
cmc
jno
mov
lods
ret
repz
xchg
and
inc
mov
xlat
test
cmpsb
xchg
inc
stos
inc
pushf
push
mov
daa
scas
inc
jp
push
fdivl
inc
cld
xchg
iret
push
jmp
bound
test
insb
imul
pusha
xor
xor
mov
fidivl
pop
mov
in
cltd
mov
push
xchg
sbb
fisubrs
and
sbb
mov
mov
rorb
das
stc
mov
sub
das
sbb
movsl
outsl
sbb
int
cld
cmc
inc
and
sub
inc
and
xor
push
adc
jns
jno
movsl
mov
test
mov
dec
movsl
cmpsb
jecxz
fldl
mov
dec
fs
out
in
dec
adc
push
aaa
test
imul
in
xchg
mov
faddl
xchg
jne
sbb
cli
xor
fwait
xor
jl
mov
xor
jne
in
jl
inc
scas
imull
jne
ret
xchg
sub
or
sarl
push
enter
and
leave
fcomps
mov
jl
push
mov
add
jb
push
ja
cmp
or
and
push
inc
push
sbb
in
mov
and
nop
aad
test
test
jnp
nop
push
cmc
xor
and
mov
ret
gs
mov
jb
hlt
xor
orb
sarb
xor
cli
scas
cmpsl
cmp
jl
jge
imul
jae
jae
cwtl
pushf
jnp
pop
jge
mov
inc
stos
out
mov
pop
mov
push
and
pop
xchg
rolb
cmp
popa
fmull
les
stc
inc
fcoms
and
sbb
sub
imul
inc
jmp
mov
push
ljmp
popf
addr16
mov
mov
movsl
xchg
xchg
cmp
sbb
cmpsb
fisttpl
push
mov
rcll
adc
and
xor
arpl
cmp
dec
into
lock
xchg
cmp
mulb
sti
mul
gs
das
dec
loopne
cltd
jb
and
or
pop
imul
ja
sbb
insl
andnps
lahf
movsl
mov
mov
call
mov
push
and
out
imul
popf
mov
jnp
shll
mov
sub
push
adc
jecxz
loopne
add
aas
dec
mov
es
or
sbb
lret
adc
mov
adc
cmpsl
mov
daa
sbb
icebp
test
inc
xchg
add
adc
nop
push
jno
pop
and
hlt
movsb
loop
and
sub
mov
movsb
mov
mov
and
insl
push
mov
hlt
in
lcall
sbb
cld
or
sti
addr16
jno
sbb
lods
aaa
aad
cmc
aaa
sub
idivb
cmp
mov
int3
test
push
aam
insb
and
fwait
in
add
mov
andl
mov
mov
bound
cmp
adc
jg
xchg
and
in
adc
movsb
lock
es
in
mov
repnz
lcall
arpl
nop
mov
sbb
enter
out
iret
sbb
push
mov
xchg
mov
xchg
subl
test
cs
push
mov
std
or
jl
xchg
sub
cmp
leave
sbb
mov
xor
nop
fstl
aaa
movsb
movsl
movsl
sbb
scas
cmp
movsb
pop
and
sbb
ret
fstpl
mov
andl
out
cmpsb
in
dec
add
bound
mov
or
sub
jge
push
out
popf
push
popf
xchg
mov
cmpsb
popa
repz
std
loop
mov
add
mov
add
test
jl
in
movsl
out
daa
arpl
std
in
lods
dec
sub
ret
sub
insl
pop
scas
mov
cwtl
sub
cmpsb
mov
inc
cmp
ds
mov
gs
lods
sbb
clc
mov
xor
js
je
push
repnz
mov
dec
es
sbbl
mov
adc
xchg
lea
and
or
mov
lods
loop
arpl
cwtl
rolb
mov
sbbb
sbb
bound
sub
scas
or
jl
sbbb
xchg
pop
es
adc
jb
inc
jno
call
lea
sbb
inc
mov
hlt
xchg
out
mov
jg
sub
and
pop
jns
fcomps
stos
sbb
lret
or
dec
fcomip
mov
add
stc
adc
cmp
and
and
add
push
pusha
les
hlt
sbb
mov
enter
inc
cltd
mov
add
cmc
xchg
dec
mov
jmp
std
lcall
jbe
rclb
aad
sti
xor
scas
dec
xchg
xchg
sbb
test
pop
out
out
jge
mov
add
ret
mov
mov
cltd
cli
xor
push
add
adc
mov
lret
cmpsb
imul
mov
addr16
aam
xlat
in
xchg
cmp
leave
push
jge
sbb
push
jns
mov
in
lods
adc
ss
shl
fisttps
mov
lcall
cmp
imul
add
mov
adc
fiadds
int3
push
and
mov
fistps
sarl
push
and
inc
outsb
inc
loope
ja
je,pt
repz
mov
xchg
test
xchg
aad
lods
xchg
lds
hlt
mov
cld
aas
xor
bound
inc
pop
xchg
mov
xchg
popa
push
sub
in
nop
xchg
hlt
adc
mov
mov
or
mov
ds
jge
fs
push
mov
add
stos
lea
jo
mov
popa
std
and
js
daa
cwtl
push
data16
add
cli
dec
fs
mov
popf
mov
mov
and
rclb
movsl
push
es
lods
push
movsl
movsb
test
lds
xor
mov
movsb
mov
mov
gs
movsl
mov
test
movsb
insl
in
test
scas
fmuls
inc
mov
mov
xchg
cmpsb
gs
pop
add
popf
pop
shl
imul
mov
movsl
stc
popf
sahf
lahf
lods
xchg
into
mov
movsl
pushf
subl
movsl
xchg
inc
out
stos
pushf
movsl
test
in
out
adc
jmp
std
mov
xor
mov
movsl
push
in
testb
mov
and
fsubrs
popf
push
xlat
mov
xor
je
cwtl
xor
fwait
addr16
in
scas
push
lds
cmc
lods
fsubrl
enter
and
addr16
cld
bound
into
jae
mov
mov
shlb
inc
inc
in
cmp
movsl
mov
or
push
sbb
push
stc
aam
repz
cmpsl
cld
aas
and
mov
push
or
push
mov
cltd
jmp
add
fldt
lds
mov
sbb
sbb
enter
sbb
xchg
in
xor
mov
pop
and
xchg
push
fsubrs
outsl
mov
push
mov
stos
mov
mov
cmp
or
aaa
xor
xor
pop
sbb
pop
sub
into
mov
das
adc
dec
mov
pop
sub
and
aaa
xor
sbb
pop
lahf
rorl
addr16
adc
dec
xchg
mov
enter
test
jne
es
push
lret
xor
movsb
orl
sub
or
mov
adc
lcall
or
sbb
jns
sahf
cmpl
lods
ss
iret
jecxz
fnstcw
out
pop
sub
dec
in
add
mov
das
dec
fcompl
jmp
sbb
xchg
cmp
pop
punpcklwd
cmp
out
mov
mov
test
shll
ret
xor
popf
mov
leave
jge
in
xor
or
ret
and
dec
mov
sbb
fsts
jb
jp
mov
sub
mov
repz
or
inc
and
push
pop
in
mov
mov
pop
dec
pop
cmc
adc
mov
xor
sub
dec
inc
mov
dec
fucom
imul
leave
je
inc
xor
pop
pop
mov
fs
dec
mov
xor
sbb
int
jno
ficomps
push
dec
push
cmc
mov
fiaddl
xchg
inc
outsl
aas
xchg
push
cmp
jl
in
into
gs
jge
inc
idivl
ja
clc
mulb
lcall
ret
dec
in
std
test
sbb
or
jnp
cmpsl
xchg
popa
jge
add
jle
clc
xchg
and
mov
lret
aam
movsb
out
jbe
add
sti
movsb
rclb
mov
dec
pop
pop
mov
insb
lock
sti
pop
cs
pop
fldenv
push
loopne
in
xchg
mov
dec
add
mov
jecxz
std
mov
rclb
dec
leave
test
mov
pop
xchg
push
adc
shlb
mov
mov
pop
push
cmp
sbb
mov
pop
adc
pop
mov
popa
test
jno
xchg
lods
cwtl
into
pop
add
sahf
andb
sahf
jp
xchg
or
call
test
lods
addr16
lcall
int3
stc
ljmp
sbb
or
cmpsl
popf
out
dec
jge
mov
and
adc
xchg
std
sub
lcall
iret
xor
shll
pusha
lock
jo
sbb
mov
fldenv
std
xor
ficoms
das
lahf
data16
in
mov
insl
jge
cmpsl
lahf
xor
lcall
push
push
mov
movsl
xchg
cmpsb
mov
js
fidivl
mov
fsubrl
mov
in
push
mov
xchg
jp
mov
out
xchg
sti
out
int3
sahf
ds
call
in
sbb
xchg
bound
mov
lret
fwait
mov
xchg
scas
lds
sti
je
lock
mov
pop
nop
in
nop
and
jbe
iret
mov
cmpsl
fs
je
fs
adc
bound
stos
jle
js
dec
rclb
jns
mov
mov
inc
sub
push
dec
in
imul
mov
out
insb
inc
xchg
test
and
movsl
lret
adc
repz
xor
out
insb
pop
aam
loop
lods
cmp
mov
lahf
dec
xchg
js
pop
test
add
stc
sub
xchg
subl
inc
movsb
pop
jle
xchg
popa
jb
inc
mov
sbb
xor
push
sub
dec
xor
xor
cmp
mov
gs
mov
fwait
pop
jle
mov
mov
arpl
cmp
test
hlt
mov
lock
mov
addr16
mov
sub
mov
test
mov
mov
mov
jle
cwtl
push
or
sbb
push
dec
or
or
fstpt
mov
shrl
popfw
test
pusha
ds
mov
insb
outsb
mulps
in
adc
or
sub
cli
ja
and
lret
push
mov
shlb
push
xchg
cmpsb
int3
jle
lods
mov
inc
and
mov
stos
test
rcr
insb
movsb
popa
into
leave
jl
fisubs
jno
fcoml
cmc
or
ret
push
mov
and
xchg
dec
aam
test
or
dec
clc
mov
jne
xchg
lods
push
aas
pop
scas
arpl
jmp
mov
inc
adc
out
in
and
loop
enter
adc
inc
ds
jl
dec
hlt
add
jnp
inc
mov
or
sub
stos
pop
inc
jle
jge
cmpsl
int
in
pop
popf
aad
mov
scas
mov
mov
cli
mov
jb
fisubrl
mov
inc
push
mov
fwait
dec
repnz
and
daa
in
out
stos
sarl
out
hlt
fdivp
jae
dec
lods
mov
dec
stos
gs
cmp
ljmp
or
inc
es
xor
cmc
mov
shrl
xchg
fdivr
and
cmp
es
outsb
mov
jl
aad
nop
jb
fsubrs
insl
add
jae
push
mov
inc
dec
mov
mov
mov
call
fisubl
cmp
cmp
mov
in
cs
sub
and
adc
dec
xor
data16
fmull
lods
and
xor
push
or
loopne
or
fdivl
dec
add
cmp
sub
and
aas
mov
inc
dec
insb
xchg
fists
jp,pt
sbb
inc
lods
pop
mov
xchg
das
jg
pop
add
loopne
xchg
pop
dec
xchg
outsb
lcall
cs
sub
call
cmp
movsb
push
mov
mov
fs
jmp
cmp
dec
push
insl
dec
jecxz
or
mov
std
loop
push
scas
fcoms
xor
adc
xchg
in
add
loopne
negb
push
fdiv
enter
jmp
bsr
add
rsqrtps
int3
and
dec
cmp
xchg
jo
mov
inc
pusha
xor
repnz
sub
sahf
lahf
int3
fwait
inc
pop
cwtl
mov
cwtl
decb
jb
in
dec
add
daa
or
add
cs
xor
cmp
dec
mov
lret
sub
jmp
test
sbb
add
out
inc
add
jle
xorb
mov
repnz
cmp
mov
movsb
xor
and
out
stos
xor
sub
les
stc
je
sbb
xchg
stc
add
mov
xor
in
js
dec
mov
and
loop
lods
cmp
lods
pop
and
into
push
and
cmp
cmc
std
movsb
cmp
sbb
addb
imul
add
je
jne
leave
push
popf
adc
cmc
ljmp
insl
inc
xor
cmp
pop
and
sbb
rclb
das
inc
test
cmp
les
push
rcr
mov
cs
sub
rclb
scas
mov
xchg
pop
cmpsb
in
jge
pop
es
or
jbe
mov
xchg
jle
sub
pop
fidivrl
lcall
popf
mov
lcall
out
sub
cld
sbb
mov
out
jmp
into
outsl
add
adc
jg
mov
or
or
push
fsubr
aaa
dec
or
inc
testl
adcb
xor
and
mov
out
inc
xchg
jo
gs
xor
pop
xchg
mov
cmp
lret
cmpsb
fdiv
mov
inc
adc
cmpsl
pop
jle
xchg
pop
mov
es
pop
jno
sbb
pop
add
dec
cmpb
mov
dec
mov
loope
sub
or
sub
das
push
inc
push
outsb
rclb
int3
outsl
jne
ljmp
xchg
mov
rcrl
cmp
int3
cmp
lahf
mov
inc
add
cmp
cmp
test
into
dec
mov
jns
push
mov
xchg
mov
cltd
xchg
enter
out
cmp
cmc
aam
lcall
add
outsl
xchg
cltd
xlat
mov
sahf
xor
das
repnz
fisubrs
cld
and
pop
jno
push
mov
pop
sbb
lock
xchg
mov
es
andnps
idivl
mov
pop
push
rcrb
adc
push
jg
outsb
enter
mov
mov
sti
mov
pushf
das
loope
dec
das
inc
andl
jg
cmpsl
rorb
repnz
and
mov
dec
push
aam
mov
or
int3
pop
aad
ljmp
jnp
fsubs
inc
cltd
in
add
pop
mov
pop
and
sbb
sub
pushf
sub
aam
xchg
daa
dec
xchg
loopne
loop
cmp
sub
mov
insb
in
lahf
dec
in
xor
mov
je
push
iret
negb
ja
and
xchg
xor
lahf
jb
xchg
adc
sub
daa
sub
xchg
push
jg
push
ljmp
aaa
cld
pop
loop
inc
adc
cli
imul
pop
pop
insb
loopne
cld
fs
dec
sub
fwait
ljmp
in
idivb
or
jae
test
sahf
and
push
mov
add
jecxz
xlat
es
jo
iret
mov
push
shrl
cwtl
jecxz
push
cltd
nop
sbbl
ret
nop
test
mov
nop
inc
add
push
add
es
cltd
sub
xchg
dec
mov
pusha
mov
jno
mov
aam
lret
cmpsb
scas
fwait
or
sub
lret
lret
pop
les
out
mov
scas
mov
mov
sub
sub
dec
cmpb
dec
adc
sub
frstor
int3
icebp
adcb
daa
mov
mov
sbb
adc
add
rcr
cmp
jg
into
outsl
scas
pop
and
push
inc
and
ret
inc
mov
stos
int3
or
stc
sarb
jae
lret
mov
ljmp
dec
adc
pushl
out
int3
pop
dec
rcl
imul
insb
jle
je
sbb
inc
inc
xorl
fwait
shll
aas
fidivs
aas
data16
test
cmpsb
fcoms
test
push
dec
pop
inc
pop
or
addr16
jno
sahf
lock
fwait
es
fwait
cmp
aaa
inc
fmull
ja
sbb
loop
jge
insl
mov
sub
pop
lahf
pop
cmp
stos
pop
dec
leave
sbb
sub
ret
outsl
jle
mov
cmp
sti
jge
or
cmpsl
lods
adc
notb
mov
lahf
out
pop
cmpsb
or
les
stos
mov
jp
addr16
pop
cwtl
pop
cmp
cmc
add
adc
ficompl
add
adc
xor
inc
adc
sbbb
insl
jo
mov
ja
mov
xor
aam
pop
aaa
inc
adc
dec
insl
push
xor
adc
dec
xchg
jae
xor
aas
ret
cmpxchg
insl
xchg
or
add
mov
push
loope
add
xchg
ret
sbb
in
ret
jae
mov
push
xor
adc
cmpsl
and
dec
jl
inc
sbb
adc
movsl
cs
add
popa
dec
inc
sbb
hlt
xor
stos
imul
out
loop
add
xchg
jmp
and
gs
push
pop
or
js
inc
inc
sub
sbb
sub
cmp
es
pop
dec
subl
pushf
sub
mov
xlat
sti
or
scas
loop
adc
stos
nop
pop
cmpsb
pop
data16
sbb
pop
xchg
fwait
pop
pushf
inc
enter
inc
xchg
inc
movb
dec
xorb
sbbb
shll
std
mov
idivl
inc
hlt
push
pop
push
hlt
jns
int
arpl
out
pusha
sub
push
test
push
inc
lret
add
push
xor
mov
inc
subl
mov
sarl
in
mov
cmpsl
cld
shl
lds
loopne
cmp
lock
push
mov
sbb
adc
or
jae
lcall
xor
mov
pop
in
dec
mov
sbbl
pop
out
mov
mov
pop
or
jns
cwtl
push
and
mov
pop
loope
mov
cs
xchg
jne
dec
sub
inc
xor
mov
jg
cmp
add
mov
movq
pop
or
and
pushf
dec
in
cltd
test
jg
mov
push
cmpsb
test
stos
jae
and
push
or
cmp
and
je
out
nopl
repz
imul
test
repz
xchg
push
jb
push
bound
adc
fadd
inc
xchg
push
inc
gs
fwait
testl
fisubs
jbe
ja
mov
call
loop
inc
popa
cmp
ficoml
mov
orb
sub
fnstenv
fwait
and
add
and
dec
ja
dec
pop
or
jge
jl
outsl
mov
lds
sbb
mov
movsl
hlt
push
xor
in
adc
gs
ret
icebp
test
mov
push
adc
pop
mov
jg
cmp
mov
jge
iret
mov
jle
mov
push
pop
pop
and
dec
fwait
les
aas
inc
dec
xor
test
push
or
or
pop
sbb
sub
mov
or
aas
add
jns
scas
and
sbbb
xor
cmp
sub
dec
aaa
xor
xor
cmp
das
and
aaa
pop
fcoml
inc
aaa
xor
lea
sbb
lret
ljmp
sub
xabort
xor
mov
in
cwtl
inc
adc
dec
stos
mov
xchg
in
jle
call
xchg
jo,pn
subl
outsl
xchg
cmp
loope
test
adc
scas
add
cmpsb
aad
ret
or
ret
imul
jle
jb
mov
fwait
imul
in
mov
mov
dec
stos
push
popf
xchg
movsb
and
xor
xchg
ds
test
popf
push
icebp
lahf
cmpsl
mov
push
out
push
xor
popf
mov
addb
test
and
test
js
gs
adc
mov
cmp
lahf
push
cltd
loop
xchg
lods
out
sbb
cwtl
out
cmp
stc
cmpsl
dec
cmpsb
dec
pop
dec
mov
repnz
stc
adc
lahf
mov
sarb
lds
cmp
icebp
pop
fnstenv
inc
mov
lret
jae
loopne
jle
jg
es
lea
cmpsb
addr16
mov
cmpsl
sbb
clc
mov
pop
mov
mov
jp
jbe
jmp
call
pop
mov
fcomps
in
mov
jns
jle
cmpsl
push
push
cmpsb
xor
push
dec
pusha
adc
loope
gs
mov
mov
mov
in
sahf
mov
push
xchg
out
cmpsl
ljmp
aad
fwait
mov
mov
cmpsl
add
add
loope
stc
pop
mov
mov
ljmp
test
mov
shll
sbb
aaa
sbb
pop
stc
jp
mov
xor
mov
cmpsb
adc
cmpsb
inc
jle
mov
sub
or
cmp
cmp
mov
lock
negl
fistps
and
nop
pop
out
mov
fnstsw
clc
ret
cmpsb
xor
test
adc
setns
mov
fdivs
mov
lock
sub
cmp
int
dec
dec
fwait
ds
jnp
inc
cwtl
bound
daa
cmp
sbb
loopne
sbb
outsb
fldl
test
cltd
sub
push
mov
or
mov
dec
mov
gs
adc
inc
push
push
and
les
mov
xchg
gs
cmp
pop
cwtl
xchg
push
lods
xchg
shlb
stc
ret
or
sub
aad
mov
xchg
lea
inc
nop
cmc
jo
xor
aas
mov
fstps
mov
dec
or
mov
xorb
xchg
imul
sub
mov
mov
repnz
cmpsb
and
cwtl
shlb
lcall
mov
jo
jge
aam
jp
mov
add
movsb
test
jp
mov
cmpsb
dec
movsb
mov
xor
mov
shll
mov
xchg
repz
sarb
out
movsl
ss
dec
mov
int3
mov
lcall
lods
lea
mov
hlt
sub
sub
jge
push
lods
jge
lea
popf
jle
les
pop
dec
iret
cs
je
ret
mov
cmpsb
mov
xchg
clc
int3
in
stos
jne
shl
jns
incl
neg
test
scas
push
hlt
mov
push
sub
mov
and
ds
mov
testb
iret
leave
and
inc
test
inc
mov
jmp
mov
adc
xor
subl
pop
shlb
mov
pop
sbb
test
push
es
data16
ss
cmpsb
test
dec
sahf
sbb
mov
and
mov
inc
adc
mov
mov
bound
adc
mov
ja
cmp
scas
sub
jge
sbb
jnp
pusha
aam
out
mov
aam
scas
movsb
test
cmp
push
jle
outsl
mov
sbb
push
mov
cmpsl
xchg
sub
fstpl
xchg
mov
popa
xchg
xor
subb
inc
sbbl
movsb
xor
addl
mov
ss
push
adc
mov
adc
mov
ret
push
loope
aaa
mov
mov
jl
adc
test
mov
into
push
xchg
mov
mov
cmpsb
push
xlat
mov
jle
lds
xor
cld
adc
mov
loop
pop
lds
dec
addr16
mov
cmp
pop
adc
jp
push
jle
push
ret
ficoml
or
in
mov
mov
js
pop
push
xchg
test
cmc
ljmp
adc
popa
shl
mov
cwtl
ljmp
sbb
mov
add
or
fcomps
mov
mov
enter
sahf
fisttpl
push
pop
lods
pushf
adc
mov
sbb
ret
add
cmp
pushf
sbb
inc
mov
leave
mov
add
or
push
fwait
repnz
rcrb
rcl
ret
xor
scas
movsb
inc
cmp
stos
in
aas
subb
mov
scas
xacquire
movsl
test
or
sub
adc
cmpsb
mov
push
and
or
aam
pop
mov
xchg
push
push
jg
mov
out
mov
dec
loopne
into
jl
mov
cwtl
imul
sub
fwait
icebp
lret
cmpsb
adc
inc
or
int
mov
push
mov
push
stc
mov
pushf
sub
mov
mov
sbbl
xor
icebp
mull
mov
jo
mov
fsubrl
sub
xchg
je
lret
sahf
sub
ljmp
daa
into
mov
test
push
scas
nop
jl
adc
mov
and
pop
sbb
std
push
or
int3
pop
mov
lret
or
adcb
daa
add
outsl
mov
cs
orb
leave
fcoms
mov
stc
mov
sbb
push
cmpsb
mov
cmpsb
xor
fwait
mov
fisubl
pop
cmpsl
or
gs
and
movsb
inc
fisubrl
cmpl
arpl
lds
fldcw
mov
lahf
test
aad
cwtl
fs
jb
cmp
xor
push
or
ds
mov
mov
scas
cmpsl
xchg
add
jl
adc
fistpl
outsb
leave
xchg
addb
scas
aas
insl
std
outsb
stos
push
add
shll
or
ficomps
xchg
mov
test
clc
push
mov
inc
aam
jno
stc
sbb
xchg
fwait
fwait
sbbb
and
jne
mov
mov
lock
mov
aaa
pop
add
mov
iret
xorl
mov
lahf
mov
xchg
add
push
scas
xor
mov
mov
fsubrl
adc
stos
sub
and
cltd
mov
push
xchg
ret
icebp
lds
pop
or
lahf
mov
aam
test
inc
andl
arpl
pop
mov
mov
mov
fwait
call
sub
arpl
and
std
test
std
div
repnz
adc
jecxz
sbb
fistl
insl
pop
mov
aad
iret
mov
fldt
inc
fwait
scas
adc
sahf
xchg
xor
sub
sahf
inc
xor
pop
lea
addr16
test
repz
mov
into
sahf
sub
xor
inc
cmc
popf
je
sub
pop
out
xchg
movb
or
shrl
fisubrs
mov
loopne
xchg
push
jne
mulb
sub
mov
push
test
adc
stos
scas
daa
sbb
idivb
or
mov
lcall
jns
or
or
nop
push
mov
or
ret
into
andb
mov
xchg
adc
daa
in
mov
aad
ret
xchg
loope
cmp
sub
lahf
sub
into
cltd
outsl
sti
test
push
or
iret
sti
gs
mov
insb
cs
lods
mov
lahf
popf
mov
jne
sub
add
cmpsb
mov
aam
dec
dec
mov
outsl
test
mov
out
faddl
addr16
rol
add
xor
or
pop
mov
mov
in
xchg
jmp
mov
ja
jno
push
fsub
hlt
rcrb
test
stos
lods
jb
sbb
pushf
adc
in
mov
xor
jbe
nop
sbb
loop
test
rorb
push
mov
push
roll
and
jae
mov
scas
sbb
insb
leave
dec
fmuls
add
sub
xchg
mov
mov
jg
xchg
in
jl
mov
mov
jp
sahf
and
cmp
sub
push
inc
push
pushf
ds
in
xchg
lock
mov
sub
mov
sub
pop
in
mov
push
and
mov
les
aam
jecxz,pt
pop
ds
sahf
sub
negl
rorl
mov
fmull
scas
mov
int
inc
into
fwait
cmc
sbb
popf
push
adc
scas
sbb
push
adc
lahf
and
xor
sahf
mov
inc
insb
push
out
fidivl
push
test
notb
stc
mov
inc
cmp
test
pop
clc
scas
fwait
inc
pop
ret
sub
mov
int3
inc
mov
cmp
xchg
shl
test
sub
inc
sub
mov
popf
fdivl
xchg
push
lret
mov
mov
into
cmp
mov
stos
jne
stos
or
lret
shrl
sub
adc
add
mov
mov
jl
subb
test
and
test
orl
stc
push
into
stc
cmpsb
sub
mov
gs
es
test
cltd
das
dec
mov
xor
and
mov
cmp
add
or
add
fnstcw
mov
mov
cmp
sub
sti
adcl
movsl
in
cmp
push
mov
les
std
xor
pop
cmpsb
dec
cwtl
pushf
xchg
sbb
sti
xchg
mov
fnstsw
fwait
rcrb
test
push
mov
adc
loop
data16
scas
push
jne
bound
ss
addr16
jnp
mov
add
ljmp
lahf
icebp
iret
xor
push
ret
fidivl
mov
mov
stos
push
jecxz
stos
in
push
xlat
sarl
mov
push
jp
mov
mov
jo
popf
sahf
jmp
mov
cmp
test
enter
mov
mov
outsb
cmpsb
bound
mov
fcomi
add
insl
fcompl
idivb
lahf
push
sbb
xchg
mov
push
mov
dec
jg
lds
in
iret
push
xchg
loop
les
pop
dec
and
out
int3
repz
push
frstor
movsb
dec
xchg
cwtl
cwtl
inc
pop
lahf
hlt
xlat
cs
enter
pop
outsb
pop
sahf
aas
inc
fwait
mov
inc
jns
fs
xor
pop
jb
fs
jl
arpl
mov
pusha
pusha
pop
cli
mov
icebp
dec
sub
loop
cmp
lcall
add
ret
pusha
pop
enter
cmpsb
pop
sbb
andb
daa
jnp
lea
jl
and
sub
loopne
lea
lret
nop
in
mov
in
sub
lahf
jl
imul
pop
imul
and
mov
repnz
dec
ret
sahf
mov
cmp
push
push
aaa
test
inc
xchg
in
xor
mov
add
int3
movb
outsl
fsubs
cmc
inc
jmp
loope
inc
adc
shlb
jmp
jbe
dec
sbb
stos
fimuls
push
add
lea
lret
pusha
sub
sbb
movsl
mov
mov
icebp
pop
push
mov
mov
cltd
sbb
mov
sti
mov
xchg
ret
arpl
fucomi
adc
movsb
dec
mov
sahf
outsb
cmp
rol
aaa
push
cmc
cmc
loop
pop
sbb
scas
movsb
fimuls
stos
add
stos
jae
js
xchg
pop
pop
stos
dec
pop
les
test
nop
mov
jbe
andl
fisttpll
iret
push
in
mov
stos
mov
pop
lods
xchg
shlb
cwtl
movsb
pop
push
jo
pop
insb
xor
dec
aam
xor
push
in
xchg
xchg
in
filds
adc
pushf
dec
mov
arpl
fiadds
push
xchg
inc
outsl
test
pop
fadds
mov
stos
cwtl
movsb
jns
mov
and
jecxz
xchg
loopne
das
test
jle
xor
pop
test
jns
ret
or
cmpsb
mov
add
xchg
dec
call
dec
daa
lahf
stos
test
mov
xor
sbb
gs
out
out
stc
pop
push
fsubl
test
pop
scas
insl
cld
sub
ret
ljmp
xor
icebp
sub
lock
xchg
leave
scas
enter
push
cmp
out
fisttps
out
stc
add
jle
xor
das
push
or
xchg
scas
les
push
mov
jns
es
gs
inc
sub
leave
cmpsb
jle
stc
ljmp
popf
push
mov
fildll
and
mov
out
and
lock
push
sub
gs
jg
sbb
xor
rcrl
in
pushf
lods
inc
inc
inc
cwtl
inc
data16
dec
adc
les
lret
je
add
je
mov
push
pop
bound
push
push
mov
aas
rcrl
adc
je
rorb
xchg
shl
jne
scas
repz
movsb
jb
jnp
ja,pt
enter
fistl
test
sub
adc
cwtl
lock
push
cmpsb
jno
fsubr
out
jno
pop
stc
dec
rcl
fcmovb
stc
mov
jb
or
in
mov
add
cmp
xchg
mov
mov
mov
icebp
inc
adc
andb
pop
arpl
push
repz
stc
test
loop
sbbl
ljmp
fcoms
rcr
aad
lds
enter
gs
out
cmp
lock
push
lret
scas
mov
jns
mov
xchg
xor
lcall
je
cmpsb
ja
cmp
shrb
cld
push
xchg
outsl
jne
push
outsb
out
inc
enter
outsb
add
lds
pop
mov
add
mov
jne
jge
jcxz
aad
sahf
inc
adc
outsl
adc
and
mov
out
enter
sub
jmp
push
fwait
sub
or
jae
xlat
cltd
and
mov
jns
stos
lcall
and
dec
sub
sbb
inc
or
pop
sub
jp
lcall
lret
lahf
lret
mov
gs
adc
lock
inc
inc
scas
xchg
xchg
sbb
inc
test
aaa
mov
popf
push
pop
es
lea
lock
add
lods
sub
and
loope
repz
and
cmp
in
lea
stc
add
dec
fwait
test
dec
inc
lds
xor
stos
mov
sahf
pusha
ljmp
rcl
mov
inc
lahf
push
and
jo
sub
test
cmp
popf
cs
xor
push
sub
dec
pop
mov
lret
leave
divl
sbb
mov
sub
out
mov
clc
jnp
xor
stos
xchg
sub
dec
mov
xchg
xlat
and
adc
stc
cmpsl
xchg
jo
test
mov
xchg
gs
fisubrl
mov
sahf
sbb
mov
aas
mov
out
inc
push
sub
insb
outsl
sub
adc
fsubs
cmp
mov
notl
lret
add
notl
lock
addr16
or
cld
sbb
pushf
inc
mov
into
adc
jle
fwait
sub
mov
sbb
dec
mov
mov
mov
stos
loope
push
test
jo
das
stos
stc
cltd
movsl
mov
test
testb
icebp
adcb
fwait
pop
push
or
adc
sub
xor
or
mov
out
push
shrb
jae
or
cs
test
fidivrl
insl
or
mov
in
movsb
in
or
cmp
and
mov
nop
aad
xchg
shr
stos
jno
fs
lds
push
insl
shll
test
pop
or
jle
divb
nop
int3
xchg
xor
adc
inc
xchg
xchg
inc
clc
dec
mov
pop
mov
mov
lcall
fiadds
mov
xlat
add
std
mov
inc
lcall
cld
jo
dec
outsb
imul
data16
xor
inc
adc
mov
push
pop
movsl
scas
aaa
out
iret
pop
mov
pop
dec
jae
xchg
sahf
push
test
push
mov
cmpb
mov
jle
rorl
jg
push
jne
ja
sbb
popa
inc
mov
sbb
cmpsb
dec
cmp
mov
mov
sahf
enter
sub
jnp
cmpsb
push
adc
and
lock
test
stc
xchg
dec
mov
push
push
adc
enter
cmpl
mov
test
mov
rol
out
mov
mov
xorl
push
mov
cmp
frstor
mov
clc
xchg
dec
dec
hlt
daa
data16
cmpsb
test
jecxz
inc
pop
jmp
or
push
inc
lock
notb
popl
jp
sub
inc
pop
enter
jge
and
lcall
push
std
pop
or
mov
test
loopne
or
scas
or
in
adc
push
lahf
cmp
inc
push
mov
int3
int
xor
ret
jnp
sbb
sarb
lods
push
adcb
fwait
cmpsl
mov
sub
call
mov
lcall
test
fistps
xchg
xor
nop
sti
push
adc
fsts
stc
mov
cli
cmpl
scas
pushf
xor
fs
and
ret
sub
test
dec
mov
loop
sahf
push
mov
into
adc
fwait
mov
xor
cmp
roll
insl
inc
jle
lahf
mov
addb
mov
fcompl
jne
test
inc
stos
or
jmp
pop
mov
das
cmp
xchg
xchg
mov
inc
mov
int
ja
aad
mov
pop
popl
lahf
lahf
push
mov
in
dec
cmpsb
fisubl
ret
out
mov
xor
mov
into
push
lods
data16
pop
movsl
fisubrs
adc
xchg
mov
les
fwait
and
dec
stos
fsubs
lahf
test
mov
or
sbb
cmpb
mov
xlat
outsb
stos
ja
daa
int3
xchg
jbe
enter
bswap
mov
inc
push
test
adc
pop
inc
mov
add
test
scas
jns
scas
clc
int
mov
xor
adc
notl
int3
mov
jge
ret
jmp
dec
mov
sbb
rorl
insl
mov
add
xlat
ds
cli
daa
xchg
mov
call
add
je
mov
push
inc
fldcw
jb
adc
and
pop
or
xchg
or
icebp
cmpl
inc
test
pop
mov
adc
sbb
mov
sbb
push
dec
pop
inc
inc
cmpsb
test
cltd
cmp
je
enter
jns
enter
add
lahf
mov
pop
push
adc
push
lea
test
jmp
jnp
push
aas
test
ljmp
fstps
js
dec
dec
loope
push
xor
xchg
lcall
fidivs
mov
leave
arpl
push
adc
push
mov
lock
jbe
out
jmp
mov
adc
iret
jno
ljmp
dec
push
lret
mov
and
movsl
enter
in
xor
repz
cmp
rorl
and
or
adc
out
int3
and
pushf
fidivrs
xchg
sbb
rcll
adc
push
xor
rdtsc
sbb
and
sahf
jbe
push
jns
xchg
push
out
outsl
stos
xor
cmp
je
mov
mov
xlat
cmc
adc
inc
mov
imul
lods
lahf
ljmp
cli
test
cmpsb
pop
mov
ret
inc
pusha
lds
mov
or
and
out
scas
xchg
movsb
into
ds
or
cmp
push
hlt
rcrb
sbb
sbb
insb
mov
inc
jle
or
adc
inc
pop
ljmp
fldt
fistl
cmp
cltd
aad
ds
xchg
stos
dec
jle
sahf
addr16
stos
fsub
inc
fwait
ret
sub
popf
or
loopne
cmp
sub
fldt
push
out
xchg
adc
pop
out
jb
int3
adc
cmp
mov
xor
push
sbb
pop
cmp
out
sbb
or
adc
decl
xchg
lret
mov
rcl
sub
leave
pop
mov
lret
bnd
dec
lods
mov
mov
rcl
adc
xchg
mov
add
push
gs
lcall
nop
lahf
add
jmp
cmpsb
mov
adc
mov
aam
test
loopne
ret
or
push
loope
aaa
mov
sub
and
and
and
les
sahf
addr16
xchg
jns
jnp
out
cwtl
mov
xchg
pop
lods
leave
mov
mov
dec
test
adc
xchg
mov
sahf
jecxz
nop
shrl
or
scas
adc
mov
cmp
mov
sub
mov
sbb
lahf
pop
and
and
pushf
mov
mov
inc
mov
xchg
dec
lret
cmpb
push
and
in
int3
lock
xor
adc
std
aad
iret
lcall
scas
mov
shll
scas
addl
clc
pop
cwtl
adc
je
arpl
pop
sbb
in
push
push
adc
mov
add
rcrl
outsl
bound
sahf
gs
mov
sahf
jge
mov
xor
lahf
movsb
mov
cli
test
push
and
adcl
mov
shll
inc
mov
shrl
mov
nop
push
sub
clc
jo
insl
clc
test
xchg
cltd
xor
scas
mov
mov
std
in
add
and
and
adc
and
push
es
inc
jnp
mov
push
push
jne
pop
in
dec
sub
xor
adc
repnz
inc
xchg
cmpsb
movsb
adc
pop
stos
sub
shlb
in
inc
arpl
xor
mov
inc
test
aaa
and
xor
movsb
xor
das
in
in
std
stos
insl
out
mov
mov
xchg
inc
cmp
adc
cmpsl
mov
mov
pushf
test
ficomps
sub
pop
lods
push
in
nop
xchg
jnp
and
outsl
push
mov
jne
mov
andl
sbb
xor
pop
cmpsb
and
mov
push
stos
daa
cmp
out
push
addr16
sub
lods
out
add
ljmp
scas
cltd
je
movb
fwait
repnz
and
stos
fdivl
pop
mov
sub
std
mov
lock
sbb
daa
cltd
rcrl
add
and
fstpl
xchg
sub
sbb
inc
mov
mov
sahf
fsubrs
shrb
cmc
stos
cwtl
fistl
pop
ret
dec
lea
sub
sbb
enter
repz
scas
rcrl
iret
int3
sbb
hlt
add
repnz
inc
imul
stos
sbb
aad
ficomps
pop
xchg
testb
fildll
popa
mov
add
les
jp
or
cwtl
je
mov
add
clc
popa
mov
sub
shll
xchg
stc
xchg
sahf
xor
scas
adc
xchg
push
xor
add
ficompl
test
jne
jae
mov
cs
sbb
adc
push
subb
mov
xor
loopne
stos
inc
pop
mov
sub
out
sbb
xorb
mov
fisttpll
xchg
bound
dec
cli
gs
cmpsb
je
and
fcompl
xchg
jns
push
inc
scas
mov
addl
out
and
or
and
xor
pop
inc
lods
sti
inc
dec
xchg
fwait
lods
cmp
adc
xchg
pop
jp
arpl
cwtl
fisttpll
aam
xchg
pushf
test
jp
push
loope
or
mov
cmpsb
into
cmpsl
xchg
test
cmp
mov
adc
lahf
sub
cwtl
mov
daa
add
es
fidivl
push
das
sbb
daa
les
enter
or
stos
aas
inc
and
jbe
jnp
das
adc
jae
jge
mov
xchg
sbb
rorl
insb
sub
and
jg
jb
out
scas
push
mov
cmpsb
xor
xchg
sbb
cmovl
adc
pop
mov
scas
lods
add
insl
mov
rep
loope
and
cwtl
xor
pop
test
cs
pop
call
sbb
dec
cmp
mov
cmc
xchg
push
loope
dec
jb
pop
push
and
scas
call
nop
and
dec
mulss
push
ja
sub
jnp
mov
sub
js
inc
and
subb
faddl
insl
xor
test
mov
or
sbb
lcall
push
pcmpgtw
pop
jns
bound
xor
push
fwait
pushf
test
pop
sarl
push
out
adc
das
ret
cltd
cmp
cs
lret
lcall
adc
dec
mov
rcl
push
rcrl
in
scas
adc
sbb
movsl
loope
lahf
jle
cmp
es
adc
nop
out
fwait
in
fcoms
add
mov
adc
xchg
stos
ljmp
out
sarb
pop
mov
insl
inc
mov
lods
mov
lahf
jns
and
insb
xchg
xchg
dec
sbb
dec
shrl
xchg
mov
xchg
xor
cmp
pop
pop
mov
stos
int
inc
jl
adc
xchg
cmp
insb
fmull
or
pop
stc
push
mov
sbb
jmp
xor
add
insl
and
adc
dec
sbb
insl
pop
push
mov
sbb
insl
movsl
cmp
push
scas
cmpsb
xchg
popf
pop
scas
pop
xchg
addb
in
popf
insl
jecxz
mov
mov
mov
stos
adc
daa
rolb
fstpl
add
dec
sub
repz
aad
inc
mov
mov
mov
cmpsl
je
xacquire
popa
sub
insl
rcrl
idivl
mov
fbld
inc
or
fwait
pushf
pop
mov
add
or
xor
mov
cmp
es
les
fwait
int
ficoml
frstor
xchg
jo
dec
lcall
aad
pop
sub
pop
fst
cltd
std
std
inc
cmp
sub
rcr
jmp
cmp
popa
scas
mov
adc
test
adc
add
fildll
dec
mov
addr16
sbb
stos
lods
int
mov
shrl
idivb
fwait
loop
fwait
popf
ja
lods
pop
or
cmp
pusha
imul
fwait
je
pop
lock
or
or
dec
pop
mov
stos
popf
shrl
fwait
mov
pop
repz
in
loop
stos
sarb
xor
ss
dec
movsl
xor
and
or
scas
sbb
dec
imul
and
mov
stos
test
imul
xchg
and
mov
adc
pusha
in
cmp
add
pop
mov
scas
stos
pop
jmp
mov
test
pop
pop
bts
push
addb
cld
add
jno
jno
bound
faddl
scas
mov
sti
push
pmullw
push
xchg
test
icebp
push
cwtl
rolb
push
iret
ja
push
mov
data16
scas
jge
and
sbb
sub
shrb
repz
add
data16
stos
sar
daa
shl
mov
outsl
mov
in
pop
jo
dec
adc
hlt
push
enter
dec
aad
dec
sub
mov
out
add
arpl
pop
test
fisttpll
ret
cltd
aam
dec
popf
push
jae
pop
test
enter
test
inc
dec
je
sbbb
add
fcoml
gs
cmp
scas
cmc
jge
dec
fdivrs
pop
inc
les
outsl
scas
pop
add
or
popa
movsb
lods
inc
cwtl
cmp
dec
add
cwtl
shll
cmpsb
xor
divb
popf
adc
int3
insl
rep
lods
pushf
jge
in
popa
push
mov
mov
dec
sub
or
xchg
stos
mov
rcrl
in
scas
aam
mov
xchg
fildll
push
add
xchg
arpl
int3
pop
push
mov
mov
cmp
lret
mov
sub
and
cmp
das
ret
pop
std
xor
fwait
mov
pop
inc
cmp
mov
mov
sahf
dec
sbb
sbb
int3
fsubrs
out
sahf
xchg
mov
repz
push
xchg
mov
js
sub
or
xchg
xchg
int
or
inc
push
cltd
mov
cmp
push
or
xor
cmp
jns
inc
fsubr
mov
cmp
pop
lods
sbb
arpl
lds
jmp
mov
movsl
lods
jg
loope
sti
mov
cmp
cmp
dec
pop
dec
call
pop
or
dec
cmp
add
pop
lea
sub
cwtl
dec
test
adc
ljmp
cli
pop
dec
notl
add
push
test
dec
mov
sbb
dec
rolb
subb
icebp
fldcw
mov
mov
icebp
test
pop
test
js
jecxz
out
sahf
rcrl
cs
movsl
cli
or
stos
push
dec
cmp
mov
sbbb
and
fisubrl
test
stos
int3
adc
fdivrs
aaa
mov
or
jo
dec
or
orb
jmp
ds
and
sahf
loope
mov
push
pop
jno
sahf
pop
sahf
adc
jbe
out
xchg
inc
nop
jge
mov
xor
xchg
dec
and
dec
and
loope
test
cmp
scas
popa
adc
clc
or
insl
fimull
dec
lcall
les
cmp
dec
js
xchg
cmp
and
mov
test
pop
mov
loope
and
decl
push
or
and
sahf
gs
push
xor
push
inc
std
adcl
push
dec
in
mov
mov
jo
pop
mov
pop
pusha
mov
and
jbe
enter
sub
or
lods
dec
cmpsb
jl
dec
xor
rolb
add
xor
adcb
hlt
jecxz
dec
fnstsw
push
mov
scas
xor
aad
mov
imul
adc
mov
fldl
xchg
mov
mov
inc
jle
or
xor
bound
sub
and
pop
ret
adc
cmc
push
mov
inc
cmp
push
lahf
jo
pusha
psubb
cmp
push
mov
mov
xor
cmp
xor
shl
sti
cs
cmpl
mov
mov
jge
mov
xor
push
ss
es
xchg
mov
mov
jle
add
mov
sti
mov
insl
jnp
ret
lret
jns
hlt
bound
push
jns
enter
cwtl
movsb
sub
mov
mov
addr16
es
mov
jne
dec
movsb
nopl
test
ss
cmp
mov
cmp
test
aam
fs
fsubl
mov
inc
mov
mov
push
fbld
stos
jecxz
lea
mov
stc
sarb
test
inc
cs
jb
dec
xchg
mov
jp
js
dec
jns
out
mov
jae
bound
push
or
xor
aaa
movsb
dec
xor
ds
in
test
frstor
pop
sbb
adc
lcall
out
nop
scas
les
lea
nop
or
je
je
and
mov
mov
or
out
ja
in
xchg
xchg
nop
jecxz
nop
in
xchg
and
ja
push
out
daa
test
push
sub
loope
push
outsb
adc
xor
mov
repz
cs
sub
cmp
mov
scas
adc
and
ja
add
imul
pushf
ret
fs
test
aad
xlat
in
shl
fisubl
pop
ret
xchg
std
loopne
mov
outsb
add
mov
xchg
and
and
aaa
jl
repz
mov
xchg
insb
jbe
ss
or
lods
rcrl
mov
mov
rclb
mov
adc
gs
in
mov
dec
mov
adc
neg
cmpsb
mov
inc
loop
repnz
dec
sahf
stos
mov
push
mov
out
adc
in
adc
movsb
test
