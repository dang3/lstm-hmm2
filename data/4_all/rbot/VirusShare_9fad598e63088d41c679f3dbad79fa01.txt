or
add
add
add
add
adc
add
add
xchg
xor
add
adc
add
add
add
add
add
add
adc
add
pusha
add
add
adc
add
add
add
add
add
adc
and
adc
xor
adc
inc
xor
add
add
adc
add
add
je
add
cld
xor
add
add
or
adc
mov
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
xor
xor
inc
dec
dec
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
jb
je
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
jae
add
add
add
add
mov
add
adc
add
add
add
adc
add
insb
adc
lret
sbb
lds
add
in
pop
lea
cmpb
je
movb
mov
sub
mov
add
lea
add
push
push
push
push
push
push
call
test
je
mov
call
pop
mov
add
push
push
call
pop
pop
mov
mov
add
mov
cmpl
jne
add
mov
jmp
mov
add
add
cmpl
je
add
mov
add
push
push
push
push
pushl
pushl
mov
mov
mov
add
call
pop
pop
pop
pop
cmp
je
add
jmp
push
push
pushl
call
lea
mov
lea
mov
mov
cmp
je
mov
inc
sub
cmp
ja
mov
cmpb
je
mov
cmp
jne
mov
shr
rol
xchg
jmp
mov
xchg
rol
xchg
sub
add
mov
add
sub
mov
loop
call
lea
mov
cmp
je
mov
sub
je
mov
lea
mov
lea
mov
cmp
je
mov
add
mov
jmp
mov
add
mov
xor
mov
inc
or
je
cmp
ja
add
add
jmp
and
shl
mov
add
or
jne
mov
add
jmp
xor
xchg
mov
cmp
je
lods
or
je
add
add
jmp
xor
shr
lods
or
je
add
add
jmp
lea
mov
lea
mov
cmp
jne
add
push
push
push
push
push
push
call
pop
pop
cmp
jne
add
mov
rep
sub
sub
push
pushl
push
push
call
push
pop
sub
xor
mov
cmp
je
inc
lea
mov
push
push
push
push
push
pushl
pushl
mov
add
push
call
pop
pop
pop
pop
add
loop
mov
cmp
je
popa
popf
mov
ret
popa
popf
jmp
mov
or
je
mov
add
cmpl
jne
cmpl
jne
cmpl
jne
jmp
mov
add
push
push
push
lea
add
add
push
call
pop
pop
pop
cmp
je
mov
add
add
xor
mov
cmp
jne
inc
jmp
mov
add
push
push
push
cmpb
jne
inc
mov
and
mov
movb
push
push
pushl
call
pop
pop
pop
pop
cmp
je
mov
mov
pushl
popl
add
inc
jmp
clc
ret
jmp
push
mov
mov
mov
cld
mov
movsb
call
jae
xor
call
jae
xor
call
jae
mov
call
adc
jae
jne
stos
jmp
call
dec
loop
mov
call
jmp
lods
shr
je
adc
mov
jmp
xchg
dec
shl
lods
mov
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
pop
ret
push
call
ret
incl
mov
cmp
jne
sbb
adc
xor
or
ret
pop
mov
inc
mov
pusha
mov
sbb
popa
adc
or
push
push
and
rolb
or
push
jmp
pop
pop
call
in
mov
shl
or
dec
mov
jne
pop
push
add
push
push
mov
pop
xor
test
push
cmpb
sub
push
sbb
shr
and
jb
sub
sbbl
pusha
jae
shl
or
test
clc
dec
jne
pop
mov
dec
jp
sbb
ret
pop
mov
repnz
dec
popa
push
movzwl
fadd
sarl
push
scas
movl
jae
xor
cmc
add
lock
sub
roll
add
cmp
sbb
lahf
mov
loope
cmp
loopne
jmp
sub
dec
clc
insl
push
mov
outsl
mov
shl
rcll
ret
mov
add
pop
ret
adc
push
ficoml
jle
mov
inc
mov
or
sbb
call
out
or
jne
pop
ret
mov
shl
pop
pop
add
xchg
pop
sbb
jbe
pushf
xor
incl
jge
mov
sti
test
jle
gs
js
add
push
call
rclb
roll
loopne
inc
cld
inc
cmp
dec
jl
sbb
popa
insl
repnz
call
outsb
in
call
cmp
cmp
ljmp
sbb
les
jne
mov
shr
pop
lea
iret
loopne
add
jbe
inc
call
or
add
lock
cmp
sbb
call
fcomps
mov
test
push
cmp
icebp
call
shlb
sub
lods
add
add
call
cmp
dec
add
and
jne
sbb
and
or
add
push
clc
mov
mov
rcl
addr16
dec
cmp
adc
dec
push
icebp
inc
dec
or
enter
jo
icebp
movsb
push
sbb
int3
dec
hlt
enter
in
adc
sbb
inc
dec
clc
nop
push
in
and
add
shl
add
xor
dec
dec
sbb
or
dec
pusha
push
pusha
adc
fdivl
push
add
mov
inc
jne
sar
mov
fsubrl
and
rep
adc
popa
data16
jne
and
adc
lea
call
jge
orb
jo
pop
mov
adc
sbb
fisubs
test
adc
hlt
inc
stos
popa
and
fwait
ret
bound
inc
std
inc
adc
sbb
inc
inc
andb
and
pushf
lds
mov
inc
nop
add
in
mov
jge
xchg
add
adc
sahf
out
add
movsl
hlt
into
xor
je
and
cmp
mov
lcall
stos
sbb
xorl
or
insb
out
fcoms
xchg
push
repnz
or
xor
xchg
call
cmp
push
sbb
cmp
das
cmpsb
mov
jne
movsb
inc
setb
add
sbb
cmp
sysexit
test
pop
incl
pop
popf
shrb
clc
lea
inc
stc
hlt
cmp
mov
add
pushl
dec
mov
jmp
mov
inc
sbb
ret
dec
in
jmp
sub
enter
cs
lock
mov
xchg
sbb
fldl
dec
xor
ljmp
out
or
jmp
insb
lock
sbb
fcmovnbe
or
popf
test
pop
sub
mov
xor
or
call
add
mov
dec
add
pop
fcoms
push
adcl
jl
dec
loop
xchg
and
dec
stc
iret
xor
sub
pop
jge
adc
lock
dec
pop
add
pop
add
and
sti
movsb
sbb
dec
add
xchg
testb
fcmovne
mov
test
orl
and
xor
cmp
cmp
rcl
inc
inc
add
mov
inc
inc
cmp
inc
dec
test
mov
aam
jb
in
icebp
js
loopne
adcb
inc
rclb
test
jne
inc
js
shl
arpl
adc
mov
addb
or
add
pop
inc
jmp
push
sub
sub
jb
xor
mov
jge
cs
shrl
dec
jne
cmp
mov
sbb
xor
icebp
addb
mov
iret
push
es
sbb
jno
int
and
mov
xchg
adc
mov
and
mov
adc
sbb
mul
mov
inc
outsb
addb
add
mov
test
pop
push
clc
push
add
add
pop
add
inc
add
add
add
adc
add
mov
inc
mov
sbb
fldl
dec
in
cmp
xchg
inc
or
mov
mov
rcll
xchg
or
sub
js
in
jle
orb
bound
or
popa
pop
adc
gs
jne
ljmp
jno
jno
mov
stos
dec
pop
inc
push
lahf
pop
shrl
and
mov
mov
stos
and
pop
push
sbb
in
pop
cwtl
ss
jae
push
jl
fcomps
xchg
nop
das
insl
push
std
int3
inc
ljmp
mov
out
cmp
mov
mov
mov
idiv
lock
lods
inc
divb
fnstsw
xor
jle
xor
xchg
jb
fcoml
mov
scas
pushf
dec
stc
jae
push
cmp
aam
dec
adc
lock
sbb
push
cmp
gs
or
leave
add
xor
jecxz
pop
adc
or
mov
add
mov
cmp
or
cmp
push
mov
pop
mov
mov
fidivl
dec
divb
push
push
in
cmpsb
out
jle
loope
pusha
ja
inc
adc
scas
mov
loop
insb
xchg
lret
mov
mov
fwait
push
lds
sbb
inc
rol
dec
push
ss
addr16
cmpsl
adc
lds
xchg
ret
jns
mov
pop
out
fsubl
ja
push
push
xchg
dec
inc
int
enter
dec
shll
push
adc
cmc
pop
or
jecxz
cmpsl
ss
pop
int3
pop
enter
pop
sbb
mov
cld
jae
sbb
loope
xor
pop
popa
cmp
add
stos
mov
aad
std
jne
inc
neg
mov
or
das
jmp
lcall
mov
stos
xchg
jno
inc
add
fiaddl
cmp
scas
jl
jnp
mov
ret
mov
mov
or
mov
mov
ss
mov
int
cmc
xchg
insb
cli
adcb
scas
mov
lea
jmp
mov
shlb
cli
test
push
cmp
pop
xchg
lret
ljmp
cs
aas
xor
adc
dec
xor
loop
mov
inc
mov
inc
add
jecxz
add
data16
xchg
xchg
sahf
mov
push
pop
or
lods
daa
outsb
addl
and
xor
jg
subl
lds
and
jg
dec
cmp
push
push
push
inc
ja
leave
sub
mov
mov
sub
inc
fmull
icebp
int
fstl
push
inc
adc
shrl
mov
popa
mov
mov
fwait
and
adc
jns
fldt
jb
nop
mov
or
mov
jp
loop
adc
xlat
div
int
dec
lods
out
or
push
and
dec
shl
xchg
mov
fcomp
mov
mov
xchg
sub
jp
jb
or
aaa
lods
outsl
push
jp
imul
icebp
adc
test
sub
lcall
and
icebp
int3
push
and
cmp
scas
fisubrl
into
repnz
dec
pop
out
mov
movsb
adc
bound
jge
rep
adc
adc
xchg
jl
insb
mov
int3
out
mov
icebp
sbb
push
mov
cmc
cld
jl
data16
ja
push
pop
cmp
mov
lods
ss
pop
xor
insl
dec
into
mov
push
fistpl
fidivl
mov
dec
pop
ret
loopne
notl
in
out
bound
dec
add
push
insl
out
nop
ret
mov
jl
not
pop
in
cli
mov
stos
push
pop
jmp
ds
decl
dec
jno
or
jns
std
adc
or
sbb
pop
fdivs
je
adc
dec
push
or
or
loop
test
inc
dec
push
and
jae
cmp
push
les
xchg
adc
fwait
push
pop
sbb
lret
jp
jp
xor
jo
cltd
inc
lods
mov
insb
push
addr16
add
gs
mov
jg
and
mov
fnstsw
mov
ror
inc
cmp
mov
mov
test
aad
push
xor
adc
lods
dec
and
rcr
cmp
xchg
js
xchg
mov
jns
sti
ret
cs
outsb
cmp
in
out
mov
and
cmp
loope
fnstsw
adc
dec
mov
fsubl
inc
icebp
js
mov
call
addr16
sbb
push
fld
les
scas
andb
and
mov
jmp
mov
jo
push
pop
stc
ljmp
adc
int3
aaa
shlb
pushl
pop
sbb
outsl
test
jmp
push
ffree
mov
das
scas
mov
int3
lahf
inc
repnz
mov
dec
sbb
dec
fwait
loope
lahf
bnd
mov
aam
cltd
cmp
push
and
rol
mov
movsl
inc
xor
jbe
stos
add
ja
sbb
sbb
fcoms
leave
jg
lahf
push
ss
in
xchg
lret
push
fstpl
outsl
mov
jmp
jl
mov
sbb
call
cmc
call
pop
xlat
push
cmp
out
jne
rcrb
add
aam
and
lcall
push
mov
push
sub
orb
sbb
cmpsl
je
clc
imul
sbb
add
cwtl
adc
dec
imulb
lahf
adc
inc
mov
aaa
and
negb
mov
xchg
scas
test
inc
mov
cli
jmp
es
daa
xor
in
addl
fstpt
std
push
mov
mov
and
lods
enter
pop
push
cwtl
test
addr16
inc
jbe
js
imul
les
sbb
inc
mov
rcrb
movl
mov
and
sub
adc
leave
popf
clc
pop
shlb
cmpsl
xchg
lds
loope
data16
add
jle
repnz
nop
cmpsb
mov
sbb
out
sbb
jns
adc
movsl
xor
call
cmp
add
and
lahf
inc
jp
movsl
rcl
jns
js
pop
mov
jecxz
mov
and
jno
aam
cmc
das
and
dec
mov
cmp
adc
arpl
mov
lods
test
pop
mov
lock
inc
mov
cs
dec
ds
add
fcmovbe
cmp
inc
cmp
cli
jp
je
and
lock
out
lock
cmp
xor
lock
push
dec
cwtl
adc
lds
movsb
mov
roll
jmp
loop
orl
aad
mov
mov
fwait
enter
and
push
inc
ja
clc
leave
cmp
dec
push
dec
out
out
mov
inc
inc
pop
xchg
lock
bound
pusha
jle
dec
lods
push
scas
fidivrl
icebp
mov
sub
test
clc
or
ljmp
add
and
push
loope
mov
lahf
cmp
fs
pop
bound
insb
sbb
lods
xchg
outsl
cmc
mov
pop
outsl
fidivs
and
and
inc
lcall
fidivl
stos
movb
lea
bound
push
jmp
mov
loopne
scas
xor
out
and
cmp
or
xchg
cmpsl
lock
in
jo
push
insl
sbb
xor
pusha
cmp
es
sub
iret
mov
clts
push
movsb
add
leave
sbb
int3
jmp
push
sbb
out
adc
shrb
je
mov
add
out
fwait
push
mov
and
sti
xor
addr16
adc
pop
push
xchg
mov
xor
mov
dec
das
mov
pop
jmp
inc
stc
add
dec
xor
pop
repnz
out
loope
fwait
jmp
sbb
adc
sub
inc
or
pop
push
repnz
addb
add
pop
push
clc
sbb
mov
inc
mov
add
mov
popl
jecxz
jmp
pop
mov
sub
sbb
imul
and
ja
mov
pop
add
or
pop
daa
fwait
cmpsb
jbe
or
jmp
jmp
idivb
pusha
sbb
adc
aad
out
ja
dec
rcr
das
fildll
jnp
idiv
add
aam
ret
shrb
imul
xchg
les
ja
jns
pop
inc
sbb
xor
icebp
lret
jae
fbstp
jb
jns
mov
dec
decl
ds
insb
andb
imul
daa
out
pop
iret
mov
jns
int3
sbb
cmp
or
rolb
push
sbb
sbb
xor
fs
lahf
je
shlb
push
jne
dec
stos
lods
clc
nop
xlat
push
inc
push
jp
pop
add
mov
clc
mov
mov
jae
lds
out
rclb
inc
std
popa
popf
fcompl
push
hlt
dec
cmp
in
aaa
dec
add
push
push
rorb
aad
xchg
jle
jbe
sub
mov
xor
pop
xchg
pop
sbb
mov
add
rclb
mov
jp
mov
mov
std
fpatan
mov
cmp
jbe
adc
cmp
cmpl
repz
std
sti
push
ds
xor
fldl
notb
mov
xchg
cmp
test
jge
cli
out
lcall
aaa
push
cmp
inc
insl
xor
jmp
pop
sarl
lret
adc
jnp
cmpsb
scas
xor
pop
mov
lock
cmc
sub
xchg
jg
dec
scas
and
ja
decl
lods
jecxz
dec
push
insb
cmp
jecxz
je
insl
dec
jo
andb
lret
icebp
add
pop
and
xor
shrl
jmp
dec
movsl
cmp
addr16
imul
in
dec
xchg
sbb
push
mov
inc
mov
into
cmpsl
in
adc
xor
int3
js
aad
or
out
mov
lret
nop
adc
lock
fnstenv
lds
sbb
je
cli
cmp
out
mov
cltd
scas
sub
mov
inc
xchg
mov
aad
ljmp
int3
xor
mov
lods
scas
loopne
push
lods
xchg
jge
push
push
gs
pop
pop
add
or
add
pop
pop
sbb
mov
lcall
lock
dec
push
rolb
cmp
or
movb
icebp
popf
lcall
mov
mov
cs
mov
xchg
insb
mov
jle
mov
adc
jl
out
mov
cmc
repz
jle
dec
mov
pop
data16
add
test
jge
jmp
dec
add
repnz
jmp
xchg
cmp
stc
mov
test
clc
sbb
icebp
dec
iret
fwait
insl
push
adc
rolb
jae
bound
cmp
cli
or
ss
add
sahf
dec
pop
dec
cmc
push
xchg
and
outsb
xor
lret
das
or
push
cmc
dec
iret
popa
test
int3
mov
lcall
xchg
adc
mov
push
fdivr
ret
iret
repz
clc
jno
add
lods
js
xor
push
aas
jb
outsb
std
add
mov
ffreep
leave
cmp
jno
mov
popf
test
sti
fbstp
ja
push
shl
cltd
in
inc
mov
into
lret
jg
adc
scas
outsl
scas
int
and
mov
outsb
jnp
andl
push
sbb
testl
adc
dec
mov
dec
xchg
enter
sbb
sbb
mov
notb
push
in
daa
pushf
adc
insb
lahf
adc
ja
inc
dec
xchg
xchg
mov
mov
loope
shl
out
jle
mov
or
cli
and
sbbl
dec
subl
test
mov
mov
imull
or
loope
shrl
mov
pushf
dec
xchg
adc
jb
xor
adc
pushf
mov
cmp
inc
push
jle
push
outsb
add
xchg
xor
lods
mull
jns
stos
mov
fisubrl
lods
push
ljmp
cmp
aam
jb
inc
popa
push
mov
sub
jg
iret
enter
mov
std
loope
sbbl
imulb
das
lea
xchg
rclb
test
mov
add
mov
loope
add
mov
xchg
shl
inc
push
arpl
or
pop
fsts
sub
lret
xchg
xor
sbb
push
mov
mov
jo
lods
loop
insb
pushf
xor
jmp
dec
pop
mov
xchg
mov
std
nop
testb
push
sbb
adc
roll
mov
call
subb
ret
mov
lds
mov
insb
sub
sahf
add
lcall
pushf
scas
vpmacswd
lcall
aas
cmp
enter
sbb
push
stos
mov
jbe
pop
sbb
mov
mov
inc
pop
aaa
loopne
lods
xchg
fwait
jo
shl
enter
fwait
mov
mov
outsl
lock
add
xchg
add
push
fdiv
mov
lea
cmp
out
inc
ficompl
aam
mov
negl
fwait
sub
cwtl
ror
mov
pop
into
cmp
add
rol
push
stos
mov
shlb
loop
in
sarl
xchg
mov
test
movb
mov
push
xchg
mov
outsl
dec
mov
sbb
mov
outsl
insl
scas
mov
fsubs
test
and
sub
add
and
fs
mov
sbb
in
jl
aad
xorb
sbb
scas
stos
mov
outsl
inc
sub
mov
push
fadd
icebp
inc
xor
mov
sub
shrd
test
jnp
xor
jp
cli
jbe
cmp
jge
pop
enter
add
cmp
xlat
ds
js
mov
cld
ljmp
jg
jne
dec
and
lret
lea
xchg
mov
pop
xchg
lahf
das
mov
shl
inc
cli
test
add
push
xor
cmpsl
pop
sub
test
push
cmp
stos
add
pop
sti
and
xchg
and
jge
xlat
push
xor
sbb
into
mov
cld
hlt
jb
push
xor
pushl
mov
movsl
scas
dec
mov
pop
das
outsb
add
cmp
fdivrs
into
leave
inc
out
cmp
outsl
adc
pop
inc
leave
repz
outsl
push
sbb
mov
mov
push
mov
aad
xlat
pusha
xchg
adc
xchg
adc
rcll
in
add
fnstenv
ds
jbe
int3
popa
cmp
cmp
divb
xor
jecxz
sbb
fistps
mov
push
stos
add
mov
push
mov
gs
add
mov
dec
lods
movsl
cmpsb
push
dec
xor
mov
test
mov
dec
mov
fisubl
mov
xor
insl
fs
sub
repz
xchg
push
outsl
xor
test
outsl
pop
add
lea
and
imul
mov
and
insl
call
dec
negb
lret
rolb
or
inc
sarb
push
adc
mov
rcrb
pop
fstpt
cmc
mov
dec
or
in
or
and
mov
lds
js
cmpsb
adc
aas
lcall
iret
jno
ja
xlat
sub
call
daa
sbb
xor
and
jbe
ds
xlat
xchg
repnz
les
movsb
push
inc
sub
ror
movsl
clc
xor
push
or
rorl
mov
xor
repz
xchg
ret
xor
xchg
clc
jg
and
cmp
dec
xor
inc
aad
mov
and
add
jnp
pop
imul
or
jo
cmp
ljmp
pop
dec
mov
out
dec
sbb
push
and
repz
call
loope
movsl
add
mov
andb
leave
je
movsl
in
adc
pushf
mov
mov
dec
inc
in
adc
push
out
sbb
sub
sub
mov
pop
test
push
addb
out
push
adc
and
gs
stc
mov
or
cmc
push
adcl
int3
in
cwtl
test
mov
push
xor
aad
loop
mov
sub
and
sbb
pop
imul
cwtl
inc
inc
add
cmpsb
mov
test
out
sbb
or
ss
xchg
shll
mov
daa
pop
es
xlat
testl
sbb
cmp
lahf
cs
decb
mov
fwait
in
add
in
sub
xlat
mov
idivb
cld
add
lock
jnp
ret
xchg
stc
fs
popa
pop
inc
or
push
sbb
scas
cmpps
lods
ret
mov
shrl
xchg
loopne
mov
inc
add
mov
stos
pop
inc
iret
xor
loopne
sub
or
xchg
lcall
notl
test
mov
and
popf
xor
aam
int
mov
add
mov
adc
push
inc
push
cmp
push
xor
adc
sbb
fsubrs
cmp
dec
jmp
aam
dec
cmp
push
or
or
fwait
jns
jl
repnz
inc
fstps
movsb
lahf
frstor
mov
push
dec
cs
cmp
jmp
mov
je
gs
in
push
in
cmpsl
push
lahf
icebp
insb
inc
mov
aad
test
sbb
scas
jno
scas
adc
inc
push
sub
out
stc
mov
icebp
jp
jge
in
inc
sub
aam
xor
xchg
mov
iret
xor
std
jl
leave
stc
stc
enter
lret
inc
push
lods
inc
shll
mov
pushf
mov
push
mov
mov
cmpsb
cmp
out
push
xchg
mov
stc
push
sbbl
rcrb
pop
push
adc
or
sub
push
push
adc
mov
test
and
rol
push
jb
sub
push
inc
popa
xchg
jmp
mov
ja
push
test
outsb
and
inc
sub
arpl
xlat
popl
pop
aam
push
mov
push
dec
js
inc
ds
dec
aas
xchg
xor
cmp
ja
jecxz
xor
dec
ret
push
testb
out
inc
mov
movsl
mul
rcr
cli
mov
addr16
add
cmc
sub
push
mov
sub
dec
or
scas
add
fwait
xor
ret
sub
in
incl
xor
add
daa
mov
sub
mov
mov
push
shll
test
jecxz
fildll
stos
and
fwait
rcrl
xchg
loop
outsl
lret
lret
mov
mov
adc
sti
cli
xchg
and
xchg
cmpsb
in
loopne
cwtl
fldt
mov
inc
mov
aam
sbb
adc
shll
scas
add
push
inc
daa
mov
pop
stc
mov
push
mov
data16
xchg
inc
pushf
mov
ss
out
and
lahf
mov
pop
lds
movsl
xchg
pop
cmp
mov
cmpsb
movsl
inc
cld
pop
in
into
dec
adc
call
sbb
push
jno
aam
fbld
stos
jmp
ret
or
leave
xor
and
jb
cmpl
mov
dec
jae
loop
cli
mov
cmp
insl
lahf
pop
std
or
repnz
pop
je
outsl
mov
aaa
mov
xchg
mov
daa
movsl
out
das
leave
enter
lods
jns
lret
mov
xor
stc
push
notb
xchg
sbb
mov
lock
xor
cli
push
xor
mov
adc
gs
pop
cli
xlat
sbbl
inc
shlb
aam
fldl
notb
lea
adc
dec
ret
dec
mov
sar
bound
mov
wrmsr
repnz
xor
xchg
minps
mov
dec
sub
data16
lock
pop
outsb
cld
sysret
cmp
push
push
cwtl
sub
insb
scas
call
lods
inc
cltd
jmp
push
nop
cmpsb
shrb
mov
sub
xlat
jmp
movsl
jle
outsb
cltd
or
fists
pop
subb
jbe
jecxz
movsb
xchg
or
outsl
dec
loope
gs
xchg
xchg
push
jb
into
dec
pop
cmp
movsl
ss
sahf
or
clc
outsb
fidivrs
inc
sub
add
xor
repnz
arpl
test
adc
mov
mov
mov
mov
mov
sbb
test
mov
xor
mov
aaa
outsl
shll
loop
jno
mov
sbb
cmp
fistps
mov
or
push
ret
sub
lret
mov
loopne
in
mov
leave
mov
test
mov
sub
cmp
mov
sub
mov
mov
sbb
fcmove
or
test
inc
enter
sub
scas
sub
xor
hlt
mov
enter
jbe
sbb
je
cmp
int
xor
add
call
cmpl
inc
xchg
ljmp
mov
aad
cmp
fildll
repnz
mov
push
jle
sub
repnz
int
xor
scas
push
dec
fwait
ret
cwtl
inc
mov
std
sub
popa
adcl
negb
mov
add
fisttpll
aad
aad
jp
and
addl
shlb
push
pusha
mov
lock
jmp
scas
mov
and
outsb
and
in
data16
pop
insb
imul
push
pop
adc
push
adc
les
dec
mov
out
and
push
mov
cmp
dec
and
inc
andb
jmp
mov
mov
cmp
jno
lret
dec
orl
lcall
dec
imul
inc
push
mov
int3
cli
mov
mov
lret
pop
stc
and
pushf
out
push
les
loope
adc
in
add
rcll
dec
arpl
scas
stos
cld
push
mov
ds
or
hlt
lock
and
jae
sbb
add
lods
xor
rolb
lret
xchg
xor
punpcklbw
insb
push
sub
dec
scas
lahf
push
ds
jl
incb
shlb
clc
dec
pusha
pop
xor
ficompl
push
mov
or
mov
jle
test
in
inc
mov
xor
gs
xchg
cmpsl
mov
sub
in
cs
pop
popf
imul
push
mov
inc
add
sub
sub
arpl
popf
xchg
cli
mov
pop
fwait
cmp
sub
pop
sub
dec
cmp
sbb
jae
dec
clc
sbb
out
push
mov
ljmp
test
mov
lods
les
pop
imulb
or
in
mov
and
fwait
arpl
mov
pop
or
subl
mov
ret
cmp
mov
jle
decl
mov
jnp
lcall
mov
mov
gs
clc
lods
mov
and
inc
int
mov
push
out
outsb
mov
loope
nop
sbb
pop
and
push
xchg
jp
das
xchg
push
mov
pop
lods
or
dec
mov
cld
push
jne
in
mov
enter
and
cmp
int3
repz
jb
popf
cwtl
outsb
sbb
out
jae
sbb
push
aad
loopne
sbb
dec
dec
push
or
fimull
cwtl
punpckhbw
test
outsl
insb
or
jbe
adc
pop
pusha
stc
int
icebp
in
outsl
xor
push
scas
jl
scas
inc
bound
pop
inc
lret
mov
xor
cld
cld
xor
rcrl
inc
mov
xor
orb
mov
pushf
in
ret
pop
sbb
jae
or
aam
jmp
lods
inc
in
sbb
es
sub
and
cli
push
test
pop
pop
rcl
fiadds
push
push
pop
jns
in
lods
sub
movsl
loop
lods
ss
test
push
lods
inc
orl
push
push
sbb
nop
push
repz
pusha
scas
stos
cmpb
rorl
dec
scas
pop
mov
mov
iret
xchg
jno
xchg
dec
cmp
and
add
xor
into
dec
in
gs
bound
adc
imul
lea
jle
ljmp
dec
fiadds
dec
jl
or
js
push
push
and
fwait
into
stc
xchg
pop
and
enter
into
lds
testb
jnp
cmpsb
dec
cmpsl
sbb
in
adc
fnstcw
insb
pop
pusha
push
mov
xchg
mov
jnp
adc
mov
mov
push
fwait
and
test
imull
cmp
lock
into
shlb
mov
mov
mov
out
and
sub
outsl
adc
lcall
outsb
pop
lock
xchg
pop
inc
push
dec
dec
icebp
lock
popf
pop
fbstp
cmpb
mov
lret
imull
xor
cmpsb
lea
xor
lahf
sti
fcoml
dec
cmp
or
mov
int
loop
fnsave
ds
das
mov
je
cmpsl
idiv
pop
pop
xor
cltd
addr16
lcall
push
in
shlb
ljmp
ret
add
jp
stos
cmp
popf
pop
xchg
mov
rcrl
movl
jnp
xchg
std
jnp
mov
mov
es
mov
fdivp
and
push
inc
decl
ss
ficompl
insb
in
pusha
pusha
popa
hlt
mov
lahf
mov
mov
sahf
cmp
mov
rcrb
mov
in
pop
aas
sar
adc
add
imul
popf
xchg
popa
hlt
cli
in
jae
push
shrl
pop
sbb
mov
sbb
add
mov
xchg
or
out
jnp
paddb
sbb
jb
insl
scas
xchg
inc
and
inc
cltd
adc
loopne
inc
xor
and
jg
cmp
jmp
scas
pop
in
loopne
out
add
stos
cmpsl
mov
push
adc
and
lret
rclb
xchg
sub
push
lret
data16
jno
push
mov
push
cmp
mov
inc
add
aad
ret
jbe
pop
in
loopne
popf
add
outsl
fnstcw
jecxz
lods
cs
sbb
sbb
mov
test
fwait
out
pop
out
push
jmp
rcrl
out
fisttpll
mov
pop
adc
cmc
and
sbb
call
daa
pop
sbb
js
mov
mov
push
sbb
arpl
jmp
mov
sbb
xchg
adc
aas
in
cmpsl
or
test
or
out
xchg
cld
cld
sbb
lods
ds
nop
cmp
jg
push
push
test
ret
pushf
loop
mov
cs
xchg
mov
jbe
sahf
pop
xchg
push
pop
into
jnp
aad
cmpsl
inc
imul
paddw
gs
cmpsl
xchg
mov
push
dec
sub
repz
adc
arpl
push
mov
fdivl
sahf
lret
inc
dec
enter
lock
xchg
dec
mov
mov
xchg
lret
add
scas
mov
es
dec
pop
test
xlat
in
xor
fcmovnu
jl
mov
aaa
jmp
std
xchg
daa
enter
jge
fcoms
sub
xchg
and
inc
fdiv
jnp
movsb
dec
out
in
cmp
mov
cmp
decb
push
jo
jnp
je
add
shrl
dec
sbb
scas
jmp
inc
jl
inc
and
fdivrl
mov
cmp
lret
loope
daa
hlt
push
lods
mov
fsubrl
xorl
clc
lea
aad
adc
insl
out
push
xor
test
lahf
push
movsl
sti
xor
sub
mov
stc
mov
out
aaa
xchg
lds
cs
sub
sarb
enter
clc
jo
neg
pop
aad
lcall
out
inc
iret
dec
cmp
mov
mov
out
call
in
lods
mov
mov
jg
inc
rclb
adcb
pop
test
xor
pop
xor
rcrl
test
jge
jg
inc
mov
inc
out
repz
daa
out
mov
mov
lret
or
mov
mov
add
dec
in
inc
mov
xor
insl
xchg
xchg
xor
mov
jbe
xchg
filds
pusha
xchg
aam
mov
flds
xor
pop
jg
sti
dec
xchg
lods
bound
mov
mov
aaa
in
mov
jmp
subb
mov
jmp
mov
iret
js
pusha
loopne
fisubrs
iret
jne
fisubl
clc
mov
or
cs
loopne
out
add
and
leave
inc
scas
aas
ret
mov
aaa
add
mov
xorb
push
add
pop
ja
jno
lock
mov
popf
mov
mov
xlat
ficompl
or
pop
stos
daa
xchg
fcompl
sub
arpl
mov
sub
and
xor
xlat
frstor
in
inc
jb
sbb
fisttpl
insl
xchg
int
inc
mov
mov
xchg
sub
aaa
insl
sub
aaa
pop
mov
loop
xchg
in
xor
mov
cmp
pop
mov
xchg
movsl
mov
stos
adc
pop
mov
int
repnz
jg
xchg
aas
pop
repnz
insb
movl
adc
dec
cltd
imul
rcl
cmp
and
jmp
xchg
xor
dec
out
and
sti
xchg
mov
iret
and
pop
pushf
mov
bound
bnd
das
sbb
std
dec
leave
jmp
xor
lods
push
aad
cmp
mov
test
dec
xchg
mov
add
outsl
pop
testl
xchg
inc
mov
mov
es
lahf
stos
iret
xchg
and
jmp
pop
int3
hlt
xor
xchg
adc
addr16
fsubrs
loope
dec
inc
and
and
in
mov
xor
push
int3
iret
test
push
xchg
cli
arpl
pop
ficoms
sar
iret
fisttps
imul
stc
insb
lods
leave
lock
mov
mov
xchg
fnstcw
out
fs
jg
testb
sub
push
bound
and
cwtl
xlat
push
jl
or
sbb
in
test
lahf
fs
and
nop
ds
mov
jne
lods
jecxz
loopne
adc
arpl
mov
pusha
and
stc
test
mov
data16
cmpsl
fldenv
int3
scas
aad
mov
ret
arpl
scas
arpl
xor
lret
out
imul
dec
jb
js
stos
sbb
mov
cltd
mov
jb
loopne
int
adc
pop
orb
push
push
and
ror
or
cld
jne
sub
mov
in
aas
testb
fs
push
mov
mov
cmp
adc
insl
adc
mov
xlat
push
add
outsb
dec
add
and
ljmp
adc
mov
popf
je
cwtl
insb
xor
js
xor
dec
lea
stc
xor
cmp
jmp
xor
pop
lret
lahf
fcomp
xlat
dec
jns
push
les
push
stc
sbb
xor
not
fsubrs
and
push
aaa
rclb
shlb
sub
xchg
es
imul
mov
insl
repnz
pop
test
negb
icebp
test
imul
insl
fstpt
mov
jl
imul
or
je
scas
jno
leave
or
and
mov
xor
jo
and
lock
imul
inc
jp
movsl
mov
iret
or
pop
and
adc
cmp
int3
dec
pop
mov
nopl
subb
adc
inc
mov
mov
pop
fdivr
cld
mov
or
mov
js
repz
jle
addr16
inc
push
rcrb
bound
lahf
rclb
xchg
scas
out
imul
repz
mov
mov
push
and
insb
jge
fnstenv
lret
xlat
fdivrs
test
jle
sub
jbe
mov
lods
rcr
push
push
adc
nop
mov
loopne
xor
test
xor
insb
mov
and
mov
les
add
and
rep
push
mov
xchg
adc
pop
lock
jg
pop
and
call
ret
sbbb
stc
jg
push
add
in
not
jle
push
loop
sub
and
lcall
xor
rcrb
test
mov
sbb
shrl
mov
sbb
push
mov
jne
stos
mov
and
jno
push
add
lods
ljmp
mov
out
test
enter
ret
nop
lret
insl
rorb
dec
das
sub
insb
pop
jbe
loope
mov
mov
pop
cmpsl
pop
call
dec
stos
clc
jno
lods
sub
bound
icebp
mov
xchg
sahf
outsl
inc
incb
mov
cmp
sub
insl
outsl
dec
idivl
nop
movsb
sub
jo
fmuls
or
adc
add
mov
out
add
dec
nop
rolb
dec
jno
inc
jae
cs
push
cwtl
or
adc
adc
fdivl
cli
jmp
adc
call
add
pop
repnz
mov
push
cmp
push
mov
shll
cs
sbb
insb
adc
push
xchg
sub
les
or
cld
sbb
xchg
inc
mov
xor
lret
aam
aaa
rol
adc
gs
pusha
push
pop
in
add
rorl
rorb
pop
icebp
scas
xor
iret
adc
xchg
pusha
mov
sar
push
or
lret
xchg
hlt
mov
adc
inc
sub
cmpsb
sarl
inc
xor
xchg
cs
fidivs
iret
test
pop
pop
adc
mov
test
and
fstpl
mov
mov
stos
fcomps
into
pop
idivl
fisttpl
je
mov
insl
jne
popf
sbb
xor
xchg
mov
popl
push
pop
xor
imul
mov
push
add
lcall
and
lods
mov
test
loopne
mov
or
test
pop
loop
dec
mov
ljmp
sbb
ds
shlb
test
notb
pop
mov
or
xor
bound
bound
inc
jp
icebp
shlb
int3
inc
out
mov
pop
shlb
mov
dec
add
push
xchg
aam
sti
lret
out
loop
cmp
push
cmp
scas
loop
cmp
jmp
xor
sub
cltd
dec
mov
jg
enter
pop
mov
dec
addr16
and
xlat
pop
ficoms
faddl
cmp
cld
mov
dec
les
or
sbb
xor
or
in
mov
aam
ja
test
ds
shlb
cmp
dec
lahf
shl
lret
adc
pop
repnz
lret
shrb
dec
hlt
jmp
fdivl
fdiv
sub
scas
sbb
push
mov
sti
push
mov
pop
and
sti
loope
lcallw
or
repnz
stc
test
jo
jns
inc
imul
xor
mov
mov
jg
sahf
sbb
repz
mov
orb
push
cmpsl
xchg
das
fcoms
ss
scas
jne
outsb
add
insl
jne
mov
cmp
inc
leave
cmp
loope
gs
jo
lret
xor
cmc
jbe
mov
mov
cmp
pushf
out
icebp
jb
int3
ja
lds
cmpsb
cld
add
mov
scas
cmp
loop
aad
les
lcall
loopne
xchg
pop
push
fdiv
pushf
xlat
xchg
mov
int3
popa
mov
in
sahf
dec
lods
sub
pop
mov
sahf
or
mov
repz
adc
push
jae
xor
sbb
jno
out
xchg
imul
adc
add
sub
gs
and
push
and
dec
sub
cwtl
jbe
paddsw
or
cmovs
sub
push
mov
out
iret
cmpsl
insb
insb
movsl
popf
mov
or
ljmp
fisubs
pop
sbb
stos
inc
loop
jo
mov
push
rcl
jae
or
cs
xlat
mov
scas
dec
aad
mov
mov
hlt
pop
jl
xor
dec
mov
lret
mov
aad
sub
xchg
out
in
xchg
cmp
shl
xabort
xchg
cmpsb
cmp
or
int
out
jns
xor
inc
mov
int
push
fnsave
mov
add
scas
xchg
adc
popf
xor
jns
xchg
testl
fdivl
xchg
popa
or
faddl
sbb
mov
adc
dec
pop
mov
pop
fsubrl
mov
fiaddl
jg
sub
dec
test
mov
adc
pusha
pop
cmpsl
mov
push
mov
mov
push
sub
jns
pop
mov
cltd
cmpsl
adc
mov
add
lret
jp
cltd
or
cltd
out
sub
sub
es
dec
mov
orl
cmp
ss
dec
cwtl
jnp
push
push
jnp
mov
and
lods
inc
outsb
movsb
es
aam
pop
xor
sbb
add
jnp
mov
pop
cli
loope
cmpsl
jp
mov
cld
sub
adc
adc
jnp
insl
dec
rorb
in
lret
ficompl
cmpsb
bsf
cmp
in
frstor
scas
inc
push
xor
pusha
mov
bound
js
test
aam
jbe
push
movsl
std
add
lret
sarb
pushf
out
inc
pop
jge
sbb
out
jns
je
sbb
jmp
repnz
jno
test
pop
pop
and
mov
clc
xchg
adc
icebp
out
xor
adc
mov
push
into
xor
sub
andb
lds
clc
xchg
adc
xchg
push
pop
mov
push
mov
pop
xor
cmp
cmp
jp
arpl
push
push
mov
xchg
mov
repz
fsts
pop
rolb
loopne
stos
loope
test
xchg
push
sbb
iret
addl
add
add
mov
int3
movsb
xor
jmp
test
stos
add
inc
sbb
fsubs
mov
insb
or
in
fsubr
mov
ret
inc
fs
sar
loope
or
mov
lahf
es
xor
shr
fdivs
xor
push
sub
int
xor
xchg
mov
or
jecxz
test
mov
or
pushf
stos
popf
jo
jno
hlt
xchg
xor
fninit
out
pop
ret
dec
add
test
sbb
rcrb
dec
xor
int3
lods
mov
std
mov
or
jmp
pop
lods
push
mov
repnz
test
push
push
cltd
lret
mov
push
xchg
mov
push
push
leave
jge
imul
push
shl
es
add
lahf
mov
cmpsb
pop
dec
pop
push
sub
sbb
dec
dec
jecxz
push
xchg
dec
xchg
ret
test
ss
popf
pop
mov
fimull
xor
mov
add
xchg
addr16
divb
test
add
jmp
cmpsl
jns
mov
ja
push
mov
push
sub
iret
sub
push
sbbb
lret
push
mov
out
pop
dec
std
inc
nop
mov
xorl
in
cmp
out
subb
cmpsb
cmpsl
sbb
sbb
je
lea
jmp
or
mov
pop
pop
push
pop
sub
ret
fdivs
ljmp
ljmp
sub
mov
push
mov
popf
xor
push
movsb
and
add
insb
lds
loopne
mov
int3
jp
xor
leave
cmp
sbb
or
es
pop
push
ret
lds
jne
mov
and
rcrl
ret
jg
xor
inc
push
lods
mov
sub
int
mov
jecxz
push
add
shll
in
cmp
mov
outsb
das
or
fcomi
nop
loope
ds
inc
xchg
out
test
test
sbb
mov
cwtl
sbb
mov
sti
fcomps
push
in
xor
and
adc
fstpl
dec
inc
in
jge
pop
ds
ret
and
pushf
mov
and
shll
pop
pop
cmpsb
jae
cltd
stc
or
xor
mov
pop
sarb
test
int
jno
andb
out
cs
pop
cmp
fidivrl
inc
fsts
inc
adc
push
mov
inc
mov
xchg
hlt
shll
out
jnp
cmc
lea
mov
cmp
xchg
loopne
das
scas
out
or
repnz
outsl
jg
aas
sahf
scas
inc
push
lods
or
stos
in
out
int3
movsb
shrl
dec
mov
stos
xchg
repz
iret
stc
fmull
pop
aas
push
fldcw
ljmp
int
jl
pusha
mov
push
mov
test
inc
pop
test
ret
jmp
or
mov
pop
cwtl
mov
loop
movsl
movsl
cmpsl
in
dec
test
jle
lahf
loope
push
iret
rcrb
push
subl
test
mov
sub
scas
ja
push
movsl
test
out
add
int3
sbb
scas
lret
fwait
outsb
xor
pop
test
inc
cli
adc
fldl
xor
icebp
mov
sub
add
fldcw
and
mov
ss
in
mov
sub
jmp
mov
add
mov
insb
jb
pop
inc
je
lock
js
test
adc
or
lods
imul
shll
stos
xchg
sbb
imul
scas
sbb
adc
sbb
mov
int3
adc
mov
cmp
cmp
push
mov
mov
sbb
stos
cmp
rol
out
cmp
fldl
ret
inc
xchg
in
stc
fwait
scas
mov
inc
jnp
adc
add
fstl
lea
cltd
test
js
push
out
jns
cmc
inc
cmp
sbb
pop
sbb
or
rcl
pop
xchg
scas
imul
hlt
movsb
dec
sbb
xchg
popa
add
add
mov
push
test
pop
adcl
dec
jle
mov
test
and
popa
sbb
test
push
popf
lods
sbb
or
hlt
clc
pusha
mov
add
es
cli
jecxz
add
or
sahf
aad
jae
push
call
repz
cmp
in
cmp
push
lret
inc
jmp
scas
xorl
out
mov
and
pop
aam
pop
adc
loop
jp
movsb
int3
lea
aad
or
inc
inc
adc
inc
cmp
or
mov
nop
push
and
xlat
dec
jns
push
js
push
or
xchg
sub
inc
cmp
out
mov
mov
out
and
and
adc
cs
fstpt
mov
and
jnp
popf
mov
sarl
fbstp
jne
mov
andl
xchg
xchg
xor
mov
inc
test
dec
clc
lret
pop
in
mov
div
dec
imul
xchg
data16
adc
aad
jecxz
shr
pop
inc
and
outsl
xchg
push
ljmp
sahf
dec
cmpsb
lcall
mov
pushf
xchg
or
mov
xchg
dec
jo
ret
jle
pop
daa
push
mov
mov
push
or
sub
aaa
mov
int
jo
jle
xchg
cmp
sub
xchg
leave
and
xor
mov
mov
add
and
cmpsl
adc
inc
add
negl
mov
lods
imul
mull
jle
or
adc
mov
or
push
xchg
adc
mov
xor
xor
cmp
ss
mov
xchg
adc
into
jl
sbb
jae
ficoms
and
sti
sbb
hlt
clc
std
imul
and
pop
xchg
push
and
jmp
jp
int3
repnz
es
dec
push
aad
jmp
fsts
mov
adc
std
movsl
push
in
fstl
cwtl
push
loop
add
mov
rcrb
mov
data16
fdivr
hlt
insb
dec
ljmp
outsl
add
cmp
jb
movsl
aaa
stos
push
xchg
jne
lcall
cltd
hlt
ljmp
ja
mov
adc
fwait
mov
jne
push
sbb
dec
ds
adcb
cltd
aaa
cmp
mov
lds
addr16
push
insl
js
jo
into
movsb
lcall
out
filds
or
adc
sarl
adc
sbb
out
sub
xor
lret
cmp
xchg
das
cmp
mov
fs
mov
out
sahf
cmp
jmp
adc
data16
add
and
or
sarl
xor
je
cmp
movsl
mov
pop
lea
hlt
lock
mov
ds
jne
sbb
sbb
loope
in
insb
xchg
in
int
jns
xorl
out
jbe
lcall
popf
sbb
aaa
inc
inc
adc
int3
add
push
add
addr16
cmp
push
jl
sbb
call
and
dec
sbb
mov
mov
pop
push
and
sbb
jb
pop
inc
arpl
sahf
pop
sbb
pop
inc
pop
mov
adc
sub
mov
in
push
sub
sti
aam
shll
xor
dec
or
cmp
mov
and
das
xor
xchg
cmp
cmp
adc
aam
inc
or
test
pop
xor
push
int
xor
sub
add
aas
jl
neg
dec
xor
into
fcoms
leave
aaa
sub
aam
or
dec
movsl
mov
or
imul
scas
push
popl
movsb
and
aaa
pop
sub
and
mov
nop
cmp
xchg
jmp
scas
shrb
inc
test
push
enter
fldt
pop
sub
mov
mov
sbb
xchg
pop
and
imulb
or
jg
bound
insl
popl
fs
push
jg
sbb
pop
in
cmc
inc
and
pop
and
lock
mov
cmp
sub
inc
repnz
xchg
nop
sbb
adc
dec
loop
xchg
js
cld
cmp
push
nop
in
push
dec
mov
out
mov
jge
inc
push
mov
imul
and
mov
ja
sbb
jno
popf
jmp
xor
add
gs
xor
fidivrs
into
pushf
test
push
sub
mov
aaa
das
aas
jnp
mov
add
ret
jns
cmp
sti
imul
push
jbe
dec
notb
lcall
xchg
inc
mov
hlt
shrl
aas
xchg
sbb
in
push
rcrl
fcomps
lods
push
inc
decl
iret
inc
lahf
lahf
pop
pop
inc
arpl
loope
mov
int
mov
aad
subl
lock
cld
shrl
mov
add
mov
aad
lea
stos
sub
js
mov
or
jne
es
daa
xor
addr16
arpl
mov
leave
sub
lock
mov
add
cltd
mov
mov
shll
jo
dec
push
push
sub
pop
stos
mov
jp
jo
int
fdivrp
sbb
lods
dec
addl
push
and
daa
jl
pop
lret
inc
and
insb
adc
sti
or
into
pop
xchg
jno
lahf
lds
mov
dec
pop
pop
add
rcl
or
clc
dec
ja
fadd
ficomps
lret
sub
and
rorb
out
mov
sub
jmp
mov
xchg
out
mov
push
mov
in
sti
lret
sub
mov
inc
bound
test
mov
sub
cmp
fwait
in
inc
mov
inc
sbb
addr16
cmp
shlb
jg
dec
mov
add
add
sbb
aam
xchg
mov
sbb
adc
jo
leave
and
inc
aas
mov
pop
movsl
push
pop
add
jnp
adc
cltd
test
xor
sub
xchg
pop
inc
lock
dec
cmp
mov
inc
jmp
push
jne
fisubrs
adc
push
mov
xor
sbb
mov
leave
mov
popf
mov
sub
push
fbld
lods
adc
shrb
and
shlb
inc
mov
aad
xchg
jnp
cmp
inc
push
or
xor
cmpsl
call
repz
orl
adc
ja
cwtl
pop
add
add
add
xor
repnz
sbb
jmp
jae
rcrb
dec
rcl
mov
pusha
or
jg
clc
lods
adc
cmp
adc
popf
std
fistps
cmp
es
ljmp
mov
int
js
or
lea
pop
jno
stos
add
and
adc
pop
inc
pop
cwtl
gs
jl
jnp
lods
in
rcrl
inc
or
ret
stc
lret
sbb
or
imul
sbb
movsl
mov
cmp
push
repz
xor
iret
rcrb
cmp
insl
loope
add
jmp
repnz
mov
push
dec
das
and
repz
andb
popa
push
cld
xchg
stos
mov
cmpsb
sub
pushf
mov
xchg
add
aam
int3
pop
cltd
xorb
sub
sub
inc
test
lea
inc
or
mov
mov
movl
add
test
imul
inc
ror
icebp
cmc
insb
ss
test
dec
mov
adc
imul
loopne
lds
shrl
pop
add
add
aad
xor
xchg
jp
mov
add
push
inc
or
popa
cmp
cmp
rcrl
push
add
out
testl
jns
test
cwtl
cmc
sub
rcrb
in
test
testl
mov
in
pop
out
cmpsb
cmp
pop
sbb
add
mov
jb
mov
pop
inc
mov
mov
xlat
xchg
and
xchg
sub
std
clc
push
push
xorb
test
cwtl
mov
xor
std
sub
or
shll
jns
fwait
add
sbb
rclb
pop
dec
xlat
rorl
jb
das
es
or
enter
xchg
cmp
outsl
je
mov
pop
mov
notb
xchg
lahf
out
adc
dec
push
add
and
mov
mov
outsl
inc
add
pop
jbe
adc
inc
jmp
icebp
xor
cmpsb
leave
mov
add
jo
pop
pop
enter
cwtl
je
inc
fiaddl
mov
daa
jns
xor
cmp
inc
pop
mov
les
xlat
in
and
or
xchg
in
clc
je
stc
jne
xchg
scas
cmp
jmp
mov
inc
and
dec
adc
or
in
jle
cli
mov
pop
and
mov
fidivs
push
movsb
fbld
scas
or
xor
mov
imul
cmp
or
imul
mov
pop
and
stos
test
push
jbe
in
mov
loopne
sub
adc
dec
pop
scas
imul
xor
sahf
adc
mov
adc
or
stos
enter
push
push
repnz
cmp
push
and
scas
mov
add
xor
inc
rcrl
xor
pop
jl
daa
xor
iret
dec
inc
xor
mov
push
popa
xchg
iret
repnz
test
test
push
pop
out
lahf
adc
mov
dec
adc
xor
rorb
dec
xor
xor
movsl
rcrl
mov
adc
jbe
arpl
add
cmp
add
jg
dec
inc
push
sbb
out
inc
add
bnd
in
pop
test
and
jns
cmp
xor
aad
push
ss
jge
fwait
loope
push
daa
jo
pop
xor
fdivl
jo
cmp
fidivrl
out
push
mov
out
sbbb
and
mov
mov
js
xor
adc
xor
lods
lret
adc
mov
sub
push
jle
repz
and
jg
fnstcw
cmp
fsubrs
mov
je
adc
stos
outsb
fdivr
xor
push
std
in
xchg
jecxz
xchg
adc
xor
rolb
push
mov
stos
outsl
and
fsubs
xchg
add
pop
dec
mov
mov
push
adc
mov
imul
and
xchg
pop
orl
xor
stc
add
pop
fldcw
push
push
int
bound
xchg
loope
inc
aas
test
xor
lret
mov
fs
inc
mov
fs
cli
mov
push
mov
clc
mov
lret
jno
cmp
fdivrp
fsubrl
outsl
pop
in
dec
ftst
jno
sbb
movsl
lock
adc
and
xchg
outsb
jb
sub
and
pop
test
outsl
dec
sti
into
jle
aad
sbb
outsl
roll
lahf
orl
movsl
test
cli
fidivrs
lods
adc
pushf
adc
in
insl
aad
gs
adc
inc
xchg
pop
jne
add
jmp
in
lods
pusha
mov
ret
les
aam
out
test
and
test
sbb
cld
cmp
or
jge
cwtl
mov
inc
pop
std
popf
jno
jge
inc
or
sbb
inc
xor
lcall
adc
jbe
cmpsl
mov
sbb
dec
cli
inc
jmp
dec
shll
inc
pop
fmull
sarl
pop
repnz
push
sub
xchg
fidivl
scas
stos
out
call
addr16
sbb
enter
cltd
out
xchg
cmpsl
mov
add
icebp
xorl
push
xchg
fistpll
mov
sar
mov
push
imul
mov
pop
repnz
inc
and
jae
nop
jmp
jge
movb
inc
push
cli
sbb
outsl
cltd
xlat
les
repz
mov
mov
movsl
in
repz
push
in
mov
int3
popf
sub
sbb
adc
jb
orl
jne
scas
xchg
add
add
mov
lret
xor
or
ds
popa
pop
pop
lods
cs
sub
daa
sub
and
mov
or
scas
jg
je
lds
sub
ljmp
arpl
js
mov
xchg
gs
push
je
cmp
jp
shl
stos
mov
test
fiadds
add
xchg
call
lock
call
rorb
push
mov
cmp
mov
push
xchg
rcr
fcomi
popf
sub
push
adc
mov
xor
xchg
or
mov
dec
push
push
xor
mov
subl
cltd
es
rcll
inc
add
ljmp
jo
cmp
dec
xor
ret
pop
jecxz
push
mov
std
imul
movsl
xor
ja
sti
sbb
sub
jne
das
or
cmc
das
in
or
pop
mov
inc
hlt
in
adc
pusha
or
loope
adc
xor
cmp
mov
lret
scas
jp
sbb
movaps
shll
fucomi
clc
shlb
adc
pusha
push
imulb
scas
mov
mov
inc
mov
out
sbb
cs
movsb
andl
jmp
push
sub
lcall
dec
in
sbb
cmp
repz
sub
jmp
movsl
push
es
add
pushf
jle
jnp
fs
or
scas
xor
or
sar
adc
fldl
fidivrl
or
outsb
add
adcl
lods
jae
mov
out
lret
outsb
or
push
mov
mov
jb
stos
jle
sub
rcll
jne
sbb
lds
movl
int
push
insl
xchg
add
les
push
jge
cmp
sahf
cmp
jecxz
enter
jecxz
data16
add
jo
test
mov
jle
jmp
out
adc
push
popa
inc
sub
push
es
lret
test
inc
andb
mov
or
imulb
push
fwait
xor
adc
cs
mov
mov
pusha
cwtl
out
es
cwtl
in
mov
xor
sbb
lods
sbb
mov
repz
in
fistpll
movsl
repnz
out
xchg
cwtl
stos
push
aaa
test
dec
jb
adcb
mov
xchg
mov
or
sbb
cmp
shl
mov
add
adc
daa
sti
xchg
jg
shrl
mov
jno
xchg
mov
insl
or
xor
pop
jae
outsl
or
outsl
dec
aas
jb
cmp
pop
mov
fisttpll
fiaddl
cwtl
xchg
sti
in
loop
or
dec
inc
rcl
inc
insb
cmpsl
loopne
xchg
insb
leave
xchg
shll
xor
xchg
sub
cmp
xorb
adc
std
pop
mov
pusha
insl
ljmp
pop
xchg
pop
mov
in
cmp
and
sub
cmp
xor
inc
add
jecxz
mov
push
jno
sub
repnz
sbb
and
out
cmp
or
aaa
cmp
sub
loop
sti
jp
loopne
and
mov
sub
cwtl
scas
add
sub
fsts
enter
div
xor
jmp
pop
mov
pop
scas
mov
push
call
jbe
mov
cmpb
xchg
adc
aas
dec
jge
xor
call
bnd
add
testl
cmpsb
bnd
insl
mov
xchg
and
dec
std
xchg
pop
data16
pop
adc
inc
jg
cmp
test
loop
adc
pop
sbb
ja
sub
loope
test
push
jge
xlat
inc
xor
insl
fldl
test
xchg
lahf
fs
or
lock
mov
sbbl
je
xor
pop
and
out
mov
mov
stos
pop
xorb
mov
shlb
push
jne
lret
int
jl
xchg
jns
leave
enter
push
and
mov
add
cwtl
adc
pop
mov
xchg
sar
or
or
in
in
inc
mov
jb
sbb
or
inc
aaa
inc
pusha
xchg
in
jbe
push
inc
add
cltd
or
and
in
push
jne
pusha
lret
sbb
sub
std
jns
repnz
fiadds
add
lods
sub
inc
orl
mov
sbb
dec
lock
cli
add
in
subl
test
cmp
push
lds
jae
cmpsl
sub
sbb
xchg
inc
push
pop
push
mov
xchg
out
inc
push
mov
popf
pop
movsb
xchg
jge
test
rep
loopne
cmpsb
pop
add
outsb
int3
ja
or
mov
out
inc
or
lret
xchg
outsl
shll
daa
insb
aad
pop
mov
lods
adc
loop
in
mov
popl
or
add
jl
stc
aas
and
cwtl
clc
or
push
adc
jne
aas
pop
fldt
fldt
movsl
mov
insl
cmp
out
push
mov
iret
dec
sbb
xchg
fs
in
or
test
mov
or
sti
outsl
push
xchg
lret
ficompl
test
shrl
and
cmpsl
xor
cmp
push
push
sbb
arpl
or
mov
mov
dec
xchg
xor
je
sub
outsl
push
out
mov
stos
xor
std
sbb
and
in
lods
dec
sub
insb
fisttpl
ss
scas
call
push
faddp
and
inc
jb
jl,pn
cmpsl
add
test
inc
add
add
xor
arpl
xor
dec
movsl
and
and
and
in
sbbb
adc
mov
jl
jno
mov
insb
in
lret
xlat
mulb
sub
push
push
pcmpeqb
test
inc
push
cmp
lods
inc
push
cmpsb
ds
movb
sbbl
leave
pop
sub
test
mov
adc
js
sub
adc
xchg
add
pop
stos
or
mov
dec
mov
loop
fwait
repnz
lcall
rcrb
sahf
jl
test
push
jl
ret
dec
mov
dec
adcl
jge
popa
popf
sbb
jp
and
sahf
mov
out
jns
sbb
push
sbb
sbb
push
pushf
push
stos
fsubrs
imul
dec
inc
and
cmp
inc
mov
sub
jl
push
xor
sbb
bnd
in
inc
sub
cmpsb
loope
or
xchg
das
imul
mov
dec
cli
and
int3
dec
btc
jne
test
data16
adc
pop
mov
clc
mov
test
inc
adc
dec
imul
movsb
ror
xchg
and
fimuls
imul
dec
fildl
dec
push
jo
aas
call
inc
adc
add
push
pop
nop
fwait
jmp
and
mov
or
xor
es
mov
ret
mov
pop
xor
fstl
sbb
sahf
dec
das
push
adc
xchg
sub
xor
popa
dec
ja
daa
mov
sbb
inc
fcoml
push
mov
mov
or
shr
aaa
add
leave
cmp
test
fadds
stos
dec
push
lds
and
pop
repnz
test
sbb
pushw
cmp
mov
js
addl
icebp
push
cld
idivl
sarb
enter
je
shlb
jge
in
or
imul
and
mov
inc
pop
mov
push
cld
adc
fs
mov
cmpsb
aam
call
xchg
push
mov
sub
leave
jae
xorb
clc
mov
shl
xor
cmpsb
dec
sub
push
push
dec
cmp
mov
xor
xchg
adc
cli
je
mov
stos
in
mov
scas
lcall
mov
xchg
cmp
enter
sbb
stc
add
push
xor
imul
jl
testb
loop
fadds
inc
dec
cmc
data16
dec
ljmp
add
gs
adc
mov
jbe
pop
iret
add
subb
daa
sbb
xlat
jne
lods
xor
fists
orb
inc
fwait
pop
and
je
insb
sbb
xlat
insb
cmp
aad
pop
mov
cmp
popf
adc
jno
iret
jo
daa
jno
imul
inc
adcl
mov
std
mov
popf
jge
testb
into
sbb
push
repz
ds
mov
or
xchg
dec
div
bound
in
shl
mov
xchg
pop
push
pop
aad
push
push
pop
popa
scas
enter
scas
mov
lods
loopne
pushf
pusha
or
scas
scas
hlt
mov
lods
or
xchg
jo
rcll
jmp
xlat
pop
icebp
pop
popa
dec
cld
pusha
sbb
sbbb
aad
jno
pop
sbb
sub
inc
mov
fdivp
jp
cmpsl
push
pop
and
inc
cmp
fidivl
lds
mov
inc
out
pop
push
cmp
push
jle
cmp
sub
cmp
roll
loop
or
repz
test
or
mov
lods
pusha
add
scas
nop
pop
adc
and
clc
pop
mov
and
and
adc
cltd
or
mov
sahf
fwait
movsl
sbb
push
pop
in
jnp
in
sbb
fnstcw
in
cmp
das
lods
jae
adc
mov
ljmp
jno
mov
imul
dec
sbb
out
jecxz
stos
daa
mov
push
aad
sbb
pushf
mov
cmp
push
dec
and
cmp
lahf
movsl
xor
sbb
data16
inc
add
push
movsl
or
dec
fistpl
mov
scas
adc
sti
inc
or
test
xchg
lret
nop
jb
std
mov
mov
push
push
mov
cmp
or
mov
out
rorb
adc
call
xor
outsl
xchg
ficomps
xor
jno
push
les
pop
lret
faddp
add
jae
and
into
adc
imul
mov
movsb
mov
and
cmp
xor
roll
mov
adc
daa
xchg
push
outsb
mov
inc
rolb
adc
and
daa
mov
stos
sbb
cmp
lahf
fsubs
sbb
jle
inc
jg
cmp
adc
pop
lret
jo
pop
mov
movsl
mov
and
hlt
xchg
mov
lret
jecxz
orl
jecxz
lret
sub
js
lahf
xchg
cmp
sbb
iret
xor
leave
dec
movsl
leave
lret
and
xchg
or
insb
mov
mov
call
cmp
popa
inc
mov
adc
push
sub
sbb
push
fnstsw
popa
int
jbe
fildl
subb
or
inc
test
xor
sbb
andl
mov
jg
cltd
outsb
mov
mov
pop
adc
scas
cmp
sbb
add
loope
sbb
cld
mov
les
jo
icebp
inc
ds
fisubrs
imul
cwtl
inc
stos
jmp
shl
jne
jmp
mov
push
mov
push
fidivrs
shlb
cli
daa
rolb
je
repnz
mov
testb
xorl
xor
imul
lret
sbbb
aas
mov
stos
xor
jl
les
inc
xchg
lea
inc
dec
cmp
fcomps
xchg
or
test
in
shrl
es
xor
cmp
fcoml
mov
lcall
mov
sbb
mov
loopne
jb
add
repz
sub
xlat
mov
mov
add
aas
mov
fsubr
jmp
and
movb
xor
push
jbe
jg
pusha
push
jo
pop
scas
imul
jge
lret
mov
or
sub
dec
jo
inc
add
insl
popa
sub
loopne
daa
push
fmul
add
mov
inc
inc
push
mov
pop
int
movsb
test
jle
leave
repz
adc
fisubrl
dec
mov
sub
mov
mov
or
xchg
push
jmp
jbe
inc
faddl
out
sub
ja
outsl
fdivs
xor
loop
loopne
rcll
or
add
iret
push
jns
scas
sbb
andl
in
xor
js
xchg
cld
loopne
and
mov
inc
xchg
inc
add
stos
sbb
scas
add
push
mov
adc
mov
stos
mov
sahf
mov
mov
loope
xchg
push
pminsw
or
shll
pop
mov
dec
sub
dec
push
jmp
rcr
inc
add
xor
movsb
gs
mov
dec
adc
ret
in
and
in
out
mov
insb
xor
xor
pop
unpcklps
pop
mov
cmp
sub
out
jbe
jnp
push
xchg
popf
cli
std
cmp
push
outsl
ja
aaa
rcll
ja
ds
mov
ja
push
loopne
out
scas
mov
adc
nop
push
inc
insb
inc
pop
cltd
inc
cmp
shrl
ret
daa
inc
mov
jl
lods
adc
in
out
ds
mov
jecxz
rclb
inc
or
sti
cmpsb
xor
xchg
add
insl
les
or
inc
inc
test
xor
push
icebp
ss
and
dec
repz
cmpsl
test
or
pop
mov
in
or
mov
adc
mov
scas
xchg
jne
out
rol
cmp
push
mov
lods
pop
fistpll
dec
popa
sahf
jecxz
repz
aam
lods
mov
roll
jne
push
mov
jmp
cld
clc
icebp
mov
sti
push
sbb
cmp
pop
mov
mov
out
push
gs
or
sbb
out
mov
decb
clc
out
mov
iret
in
mov
stos
imul
xor
loopne
pop
fsubl
mov
xchg
mov
and
jecxz
outsb
cmc
push
jns
cmp
mov
pop
adc
je
int3
push
sbb
popf
adc
sub
jb
sbb
xchg
push
mov
jbe
sbb
cmc
jg
mov
adc
in
sbb
dec
je
and
sbb
mov
mov
pop
jo
mov
push
icebp
pop
push
scas
sub
lea
xchg
inc
mov
sbb
mov
in
ljmp
inc
jge
iret
in
iret
pushf
jmp
push
and
les
and
arpl
sub
adc
push
mov
mov
ret
dec
pushf
shll
dec
or
mov
lret
sarb
jecxz
mov
pop
inc
les
outsb
cli
and
xchg
cmp
lret
cmpsb
into
sti
ret
sahf
jp
dec
adc
repz
mov
flds
cmp
push
jmp
lahf
insl
inc
decb
test
movsb
shll
dec
dec
test
outsb
repnz
sub
mov
test
in
mov
add
adc
push
cltd
call
pop
adc
jne
divb
inc
jp
jbe
loop
xchg
scas
cmp
push
mov
push
inc
jae
inc
in
outsl
mov
sub
lods
and
mov
outsl
mov
cmp
pushf
lahf
iret
shlb
fidivs
adc
fildll
cmp
pop
pop
addr16
cmp
aam
adc
inc
lret
sahf
dec
into
or
mov
dec
repz
jno
gs
fmulp
mov
push
push
dec
pushf
outsl
pusha
push
pusha
out
and
scas
cmpsl
and
addr16
andl
fs
cmp
fisubs
inc
pop
sub
jge,pt
adc
push
dec
dec
mov
sub
outsl
aas
mov
push
sbb
addr16
fdivl
mov
adcl
jmp
push
jbe
mov
adc
pop
push
pop
mov
sbb
xchg
movsl
mov
inc
aad
cltd
mov
dec
pop
mov
add
and
mov
cmp
lock
pop
jo
push
aaa
je
jns
test
mov
sbb
scas
mov
jle
test
dec
stc
push
imul
stos
nop
movsl
int3
cwtl
and
scas
mov
mov
pop
lods
and
in
xor
xchg
orb
mov
or
in
push
shl
out
pop
cmpsb
fldenv
in
movsb
popf
stos
lods
xchg
xor
dec
mov
xor
call
push
xchg
mov
adc
fs
inc
or
data16
mov
das
es
mov
and
cs
lods
fsubl
rcr
jae
sbb
mov
jnp
or
pop
mov
sbb
mov
push
xchg
rclb
cs
mov
mov
das
and
cld
xlat
mov
js
mov
iret
sarl
and
outsl
adc
pop
loopne
pop
add
repz
mov
and
sub
sub
mov
pop
out
sub
adc
mov
cs
jge
jb
popa
mov
inc
and
and
jo
arpl
mov
and
in
cmp
mov
mov
insb
xor
jns
repnz
outsl
fisttps
mov
and
jae
daa
fdiv
lods
xchg
inc
adc
into
mov
lret
xlat
movsl
push
inc
mov
in
mov
mov
sub
lcall
mov
mov
push
out
jmp
xor
push
mov
fadds
insb
mov
push
out
call
dec
xchg
pop
shrl
inc
scas
adc
mov
jo
enter
insl
out
repnz
or
je
push
sub
push
adc
mov
adc
lock
jns
and
in
inc
mov
mov
movsl
daa
cmpsb
xchg
inc
push
add
js
inc
cmp
lea
or
mov
mov
inc
nop
push
pop
xchg
mov
cmp
pop
lcall
cld
addr16
out
cmp
jo
ret
dec
xchg
sti
add
adc
mov
pop
sub
jo
out
jmp
mov
jns
test
lds
sbb
loopne
ja
jns
or
pop
gs
loop
fisubl
imul
pop
loopne
mov
shl
jnp
lods
xlat
sbb
adc
mov
sub
add
loop
mov
mov
daa
das
mov
mov
lcall
sarb
cmpsl
cmpsb
xor
or
repnz
mov
stos
insl
pop
stos
mov
push
mov
inc
ja
lds
cmpsl
sub
and
jecxz
cli
les
inc
es
add
pop
ljmp
dec
enter
dec
test
mov
scas
sub
shrl
subl
xor
loopne
jbe,pn
addr16
cmpsl
insb
into
pop
outsl
lock
cmp
test
mov
sbb
mov
les
and
and
das
jle
sub
lock
mov
or
inc
cmp
stc
ljmp
inc
stos
cmp
xchg
leave
ja
outsb
repz
jbe
push
dec
sub
clc
addr16
out
jl
je
push
sub
mov
mov
jg
push
push
lods
aaa
dec
addr16
xchg
push
or
and
xor
sar
nop
jmp
testb
out
or
mov
std
xchg
and
call
push
xor
cld
or
jecxz
fbld
arpl
les
xchg
or
mov
fisttps
call
jl
adc
mov
cmp
xor
aam
insb
xchg
js
jle
icebp
push
sub
addb
sbb
jl
sbb
popa
push
lahf
sarb
sbb
and
rcl
dec
jg
jae
mov
mov
jmp
nop
or
subl
pop
cmp
sbb
jbe
inc
xchg
push
pop
sti
ret
and
ror
lods
inc
ret
cwtl
mov
add
js
fdivrs
add
mov
mov
dec
jle
rolb
push
test
inc
scas
push
scas
mov
jmp
in
push
out
movl
fsubrp
or
inc
push
orl
ljmp
lcall
xchg
inc
fs
aad
mov
movb
sbb
cmp
lods
dec
adc
mov
ret
inc
scas
jmp
push
movsb
cs
pop
int3
jmp
push
jbe
faddp
xchg
out
test
aas
test
jno
xchg
cmp
call
or
sub
mov
jge
push
mov
or
iret
or
fcmovnb
sahf
dec
ljmp
mov
gs
add
sahf
movsl
and
dec
cmp
mov
mov
hlt
xchg
out
sbb
mov
fists
xchg
pop
call
sbbb
fiadds
gs
xchg
mov
les
rcl
inc
icebp
mov
test
lahf
add
sti
mov
cmp
or
pop
lods
inc
addr16
dec
arpl
aam
and
add
cmpb
lods
cli
inc
jbe
inc
aad
adc
mov
lods
popa
push
pop
insl
ret
jnp
pop
adc
inc
cmp
cli
cltd
push
shl
cmp
mov
mov
push
int
cmpsb
adc
jo
xor
int
clc
xor
aad
stos
nop
cmp
cs
adc
test
sub
mov
sbb
movsb
xchg
arpl
and
in
jmp
call
xchg
stos
jle
stc
add
rolb
inc
bound
cltd
jecxz
pop
das
lahf
add
adc
arpl
fidivrs
mov
out
mov
test
xor
adc
pop
out
xor
cmp
clc
in
mov
adc
int
fs
inc
je
popf
stos
inc
mov
xchg
out
adc
mov
push
xchg
sub
pop
pop
loopne
mov
cs
loope
xchg
mov
mov
js
lret
sbb
in
and
mov
xchg
and
mov
aaa
lods
nop
inc
jl
lods
int
decl
xor
mov
movsl
addr16
nop
cwtl
outsb
imul
dec
pop
outsl
add
xchg
jle
mov
jne
stos
sahf
sbb
hlt
mov
cmpsl
rolb
jge
aaa
add
stc
into
xor
insl
or
adc
pop
mov
fs
mov
push
dec
rclb
cwtl
dec
test
jmp
popa
inc
scas
jg
dec
mov
ret
cmc
xchg
inc
xchg
jecxz
mov
cmpb
sbb
shlb
pop
mov
mov
mov
out
insb
in
push
mov
cs
sbb
xlat
gs
sub
dec
stc
andl
pop
jmp
mov
fsubs
jle
ret
mov
mov
xorb
mov
mov
pusha
inc
mov
out
decb
mov
or
xlat
mov
xchg
pop
jge
das
arpl
adc
adc
bound
push
repz
adc
mov
pusha
mov
jne
jns
imul
push
enter
xchg
mov
dec
lcall
popf
into
dec
pop
ljmp
push
bound
mov
cli
inc
push
cmp
rcll
push
sbb
jg,pn
inc
cmp
lcall
xor
dec
or
cltd
cmpsb
inc
mov
aam
rclb
xchg
cmpb
dec
cwtl
xor
or
xchg
stos
dec
or
mov
mov
lock
push
lahf
nop
push
sbb
sahf
push
or
inc
fiadds
fimuls
jge
test
jbe
xlat
loope
cmpxchg
pushf
loop
sub
outsl
cmp
ja
jmp
jl
ret
in
test
mov
and
movsb
les
push
add
pop
xlat
stos
aas
mov
sub
or
mov
mov
in
inc
fwait
into
leave
mov
fnstenv
or
cmp
aaa
cld
fiaddl
cwtl
adc
mov
sar
push
and
inc
xor
adc
in
or
scas
lret
pushf
clc
xchg
ret
addr16
nop
pop
push
fildl
sub
sbb
xor
or
add
pop
mov
ret
dec
or
or
in
ljmp
out
pop
inc
out
repz
popf
jecxz
pop
dec
mov
dec
push
xor
mov
xchg
and
into
lods
and
dec
call
inc
out
mov
mov
sbb
int3
sub
cltd
es
pop
mov
fwait
or
xor
push
test
or
pop
and
sbb
stos
insl
sbb
pushf
mov
pop
mov
pop
out
pop
lcall
adc
pop
sub
mov
jne,pt
cmpsb
mov
scas
dec
xlat
mov
add
bound
or
dec
cs
add
cmp
imul
imul
xchg
xor
jnp
sub
es
mov
incl
mov
mov
je
int
cmp
or
add
add
xor
adc
inc
cmpsl
xchg
or
sti
loop
in
imul
ljmp
rcrl
movsb
outsb
xor
xor
xchg
xor
xchg
scas
fdiv
mov
les
pop
popa
dec
and
xchg
inc
std
or
mov
or
in
and
sub
cld
jae
mov
ds
repnz
ja
xchg
push
pop
pushf
xchg
push
gs
dec
and
dec
inc
mov
shlb
out
pop
int
ss
and
mov
xchg
aaa
and
movsb
faddl
stos
push
adc
jp
mov
xlat
jle
shlb
fsubl
jp
pusha
jl
je
ffree
es
cs
mov
cmp
jae
mov
fcomps
jmp
xor
mov
leave
xchg
mov
cli
insb
dec
add
scas
fadds
inc
xchg
mov
pop
adc
dec
daa
cld
pop
mov
or
sbb
mov
push
inc
cmp
out
and
mov
pop
es
movsb
les
jae
das
cmp
xlat
push
adc
bound
or
mov
ds
insb
xor
in
scas
scas
pop
adc
and
xor
or
jnp
ret
lods
push
lods
cmpsl
inc
jo
test
addr16
ss
adc
jecxz
inc
or
ret
pop
loope
pop
push
ret
stc
pop
filds
sub
inc
iret
outsb
jo
roll
or
xchg
cmp
push
push
clc
sti
pop
mov
push
jbe
loope
fistps
or
aam
sbb
and
subb
rcll
das
sub
xchg
mov
hlt
add
and
lahf
imul
sbb
push
pop
xchg
fidivrl
movsl
pop
arpl
jbe
lret
es
or
arpl
pushf
inc
mov
aaa
pop
push
xchg
xchg
ss
mov
add
mov
pushf
dec
lock
das
inc
jae
loope
fsubrs
inc
lods
repnz
outsb
mov
les
adc
cmpsb
xor
jbe
pop
addr16
mov
int3
xor
fistpl
aas
insl
push
mov
mov
mov
mov
jmp
xor
adc
leave
js
inc
mov
adcb
inc
das
add
stos
andnps
inc
add
inc
xchg
ja
push
mov
add
add
adc
sub
movsb
les
inc
mov
add
cli
mov
and
jg
in
sbb
lods
add
cmp
add
lea
jnp
jge
sub
adc
dec
xchg
mov
out
inc
js
mov
std
cltd
or
popf
push
adc
pop
xor
sbb
lret
inc
fstps
sbb
mov
sub
andl
jp
push
faddl
imul
fcmovb
lock
out
mov
stc
bound
mov
or
xchg
fucomi
ds
and
mov
push
dec
aad
outsb
enter
pushl
pop
pop
sbb
cld
pop
xchg
rcll
dec
mov
inc
add
out
cwtl
push
test
daa
jne
mov
imul
inc
inc
mov
cli
lret
cltd
xchg
push
leave
aaa
cwtl
sub
push
repz
adc
mov
add
xchg
adc
fbstp
movsb
or
stc
sub
fisubs
and
xchg
shll
adcl
or
xchg
pop
xchg
xchg
fsubp
sbb
call
mov
fdivrl
sbb
jecxz
pop
rcr
add
mov
sub
mov
jl
addl
lock
jmp
popa
sub
test
cmpsb
aaa
shl
int
sbb
pop
aad
sti
pusha
cmp
push
mov
mov
inc
shl
jmp
ja
aam
cli
pop
pop
loope
mov
ss
dec
in
add
and
mov
add
lret
mov
test
lods
dec
mov
mov
ret
or
ds
push
loopne
xchg
ss
lcall
dec
repnz
std
sbb
mov
or
inc
subb
mov
xor
pushf
push
fcom
cs
dec
sub
es
out
ljmp
push
out
outsb
js
xlat
sahf
das
mov
outsl
xor
std
frstor
jg
jo
insb
cmpb
xchg
cmp
mov
push
in
mov
shl
outsb
stos
xchg
int3
mov
data16
shl
les
shrl
subl
jb
jecxz
lcall
mov
sbb
sahf
fs
adc
outsl
outsl
loop
inc
dec
je
inc
cs
sbb
aam
sub
outsb
xor
cwtl
pop
pop
adc
pushf
das
rclb
stc
stos
filds
pop
divb
add
int3
repz
scas
or
push
mov
cmp
out
arpl
jge
mov
jne
lret
dec
pushaw
jae
jg
mov
cmp
adc
xor
lods
je
inc
rcll
sbb
push
arpl
dec
out
jl
js
pop
mov
xor
out
sub
mov
in
movsb
mov
int3
push
sti
add
mov
xchg
cwtl
dec
mov
std
xor
jnp
lock
test
push
std
pusha
stos
les
ret
or
shrl
mov
jmp
mov
cwtl
pop
fnstcw
inc
adc
shl
pop
hlt
dec
aaa
lea
sub
in
lock
cmp
into
nop
xchg
inc
loopne
pop
xchg
push
int3
adcb
out
sahf
push
scas
aad
in
aas
decl
dec
imul
lcall
icebp
mov
call
insb
mov
fmulp
sbb
notl
lahf
aaa
jbe
mov
jmp
or
jl
push
sahf
aad
cwtl
xchg
mov
push
xor
lret
repz
pop
push
lock
sub
aad
fmull
ss
movsl
push
adc
js
mov
mov
mov
imul
push
and
mov
rcll
jp
fldt
lds
cmp
cwtl
dec
popf
inc
out
les
popf
fistl
jae
sti
push
cmp
mov
sahf
fistl
stos
in
add
sbb
mov
pop
movsb
sbb
push
dec
mov
fnstsw
pop
push
mov
xchg
rorb
in
bound
xchg
xor
xor
fcomip
sar
icebp
fistl
jae
out
jle
sub
stc
loope
js
or
insb
out
mov
cmp
nop
or
sbb
jne
xlat
and
fisttps
cmpsl
pop
test
je
sub
icebp
or
pop
bound
dec
shr
incl
test
xchg
mov
loope
stc
jmp
ffree
add
dec
cltd
sub
shll
fisubs
cmp
pop
into
jns
adc
stos
lds
dec
incl
cli
bound
xor
or
fsubs
mov
in
mov
cltd
enter
jae
test
fmull
mov
mov
inc
out
mov
cmp
lods
inc
pop
subl
and
jp
inc
fisubl
and
adc
xorb
nop
out
xor
mov
push
lea
mov
sbb
inc
shll
or
lahf
inc
xor
bound
fs
loopne
out
jb
xchg
out
lcall
dec
jnp
std
sti
xchg
push
pop
mov
out
mov
sub
mov
push
lock
sbb
sarb
scas
jmp
xchg
mov
popf
dec
pushf
sub
adc
jg
and
lcall
sub
lcall
mov
cmpsb
push
loopne
or
adc
pop
je
arpl
shlb
and
test
adcl
push
push
push
pop
divb
dec
mov
xor
jae
fstps
in
ret
push
or
in
add
decl
cld
outsb
iret
or
ja
jecxz
jno
xchg
sbb
outsb
inc
icebp
xchg
adc
adc
cli
call
testl
int3
dec
sbb
dec
dec
bnd
imul
adc
xor
cmpsb
xchg
ss
mov
add
mov
rcll
int3
inc
arpl
or
push
dec
rcll
shlb
xchg
sub
fldt
mov
add
lret
ljmp
cmc
add
ret
outsb
fs
xlat
cwtl
adc
ret
fildl
inc
mov
inc
cmp
or
out
dec
xor
pop
icebp
mulb
out
sbb
mov
in
xor
and
add
and
cltd
loopne
sbb
xchg
aaa
xor
jo
hlt
lods
adc
and
js
or
fnstenv
daa
test
ja
out
arpl
mov
mov
lock
push
ja
insb
dec
loope
mov
xchg
test
push
xchg
arpl
or
mov
jmp
cmp
sbb
jns
push
inc
sbb
inc
mov
lods
je
xchg
imul
and
sbb
jle
and
leave
xorl
inc
mov
repz
push
fnstsw
sub
sub
out
dec
int3
sub
dec
mov
inc
cld
pusha
xchg
daa
pop
daa
and
lock
and
arpl
or
imul
imul
movsb
call
ret
mov
or
js
scas
adc
scas
popa
pop
add
xor
inc
stos
lods
push
push
dec
xchg
iret
setp
pop
mov
sahf
notl
nop
dec
outsl
mov
fcompl
leave
mov
mov
jae
dec
mov
jp
in
push
ljmp
sbb
mov
inc
out
mov
into
fbstp
mov
add
and
gs
sub
das
push
pop
rcrl
pop
sub
popa
int3
cltd
mov
xchg
mov
xchg
cmpb
movsb
outsl
dec
pop
xchg
dec
out
daa
mov
popf
js
xchg
push
es
xchg
mov
repz
fwait
mov
cmc
mov
ds
rorb
jmp
adc
push
mov
stos
add
xor
dec
xor
add
jp
xlat
cltd
and
nop
out
aam
stc
pop
and
push
xor
xchg
ret
xor
loopne
stc
xorb
stos
aad
scas
in
push
jle
rol
xchg
mov
and
dec
imul
jb
out
popf
pop
lea
loopne
test
les
mov
nop
xlat
ljmp
imul
or
mov
stc
icebp
mov
push
test
dec
dec
lds
orl
lds
sbb
icebp
dec
jbe
nop
xchg
cmp
loope
sub
pop
pop
push
cltd
mov
sub
lcall
and
and
lods
sbb
in
adc
cmp
cs
inc
clc
mov
push
push
test
cmpsl
pop
or
sub
rol
pop
inc
fcoms
mov
push
mov
xchg
mov
aas
out
push
cld
mov
je
shl
inc
data16
repz
fs
movsb
jbe
idivl
add
rclb
sbb
xchg
das
iret
imull
fcoms
aad
jne
mov
inc
in
fildl
mov
sub
mov
pop
fstpt
push
or
stos
lret
cltd
mov
aad
std
dec
push
adcb
mov
cmp
adcl
push
out
cmpsl
pop
mov
mov
dec
scas
fwait
lods
sbb
mov
imul
std
xor
popa
sub
aam
mov
jmp
lret
cmp
cmc
cmp
outsl
sub
imul
mov
subl
dec
jae
roll
cli
roll
pushf
push
les
in
pop
mov
pop
lahf
and
push
pop
test
lret
lods
pop
pop
scas
cmp
push
mov
or
repz
idivl
push
rolb
mov
stc
xchg
mov
mov
ss
rol
adc
rcr
push
aad
test
sub
aaa
addr16
mov
adc
mov
mov
out
sarl
nop
jno
das
jmp
clc
movsl
jl
into
in
inc
lock
mov
lods
fdivs
sbb
pop
stc
ficompl
orb
xchg
out
sub
out
xorb
mov
in
call
pop
in
fstpt
push
jle
xor
push
mov
xchg
gs
cli
je
inc
jg
push
nop
mov
jle
xchg
jg
adc
jbe
push
shrl
inc
aam
mov
sbb
add
mov
pop
int3
or
inc
sbb
mov
cmpsb
push
insl
lods
inc
into
pop
xor
push
add
loopne
aam
cmpsl
and
and
and
xor
fs
in
sbb
lea
cmp
push
arpl
push
cmpsb
add
cmc
add
lahf
stos
inc
pop
and
inc
push
dec
addl
rcr
jbe
ret
hlt
in
sub
mov
xchg
fidivs
dec
out
enter
mov
xlat
add
lret
mov
or
mov
push
xchg
jge
cld
push
testb
sub
sub
out
sarb
cmp
mov
gs
mov
jmp
xor
repnz
decb
inc
repz
loope
pop
in
cli
rol
pop
rolb
or
sbb
jae
jp
or
ss
fs
pop
gs
movsb
clc
inc
push
mov
ret
or
lods
mov
add
dec
and
test
sarb
and
push
adc
stos
aam
add
mov
daa
sbb
pop
enter
mov
inc
dec
incb
pop
fcompl
data16
rol
mov
lds
dec
jo
addb
jg
dec
jecxz
sti
mov
lock
shrl
dec
push
jbe
mov
inc
mov
std
inc
inc
and
pop
lods
push
inc
lret
cmpsb
sbb
aam
test
enter
xor
adc
adc
mov
pop
xlat
mov
jp
sbb
pop
sbb
xchg
push
test
add
dec
call
shrb
js
mov
iret
lods
mov
repz
inc
popl
jge
lahf
popf
jp
mov
std
loop
jne,pt
out
sub
xchg
mov
push
cmp
loope
int
xchg
cltd
inc
jmp
add
mov
xor
xchg
pop
imul
jge
cwtl
xor
sahf
test
shlb
sbb
xor
dec
adc
jp
outsb
push
jmp
push
or
popa
pop
sub
jl
push
fld
movsb
jmp
jno
mov
cmp
jno
aaa
mov
mov
pop
mov
mov
fst
out
sub
hlt
cmc
jmp
and
mov
stc
xor
jg
repz
adc
jecxz
in
jecxz
fcmovb
jbe
mov
sbb
movsl
pop
add
sub
fwait
mov
add
icebp
jp
xor
cmpsb
imul
call
insl
mov
je
lret
dec
xchg
mov
notb
or
sub
fdivs
jnp
xchg
and
cltd
sarb
or
add
imul
inc
pop
push
mov
ss
add
jae
inc
out
adc
es
sub
inc
jmp
pop
add
mov
outsb
pop
add
sbb
sbb
int3
out
sub
xchg
dec
inc
push
add
in
mov
ret
jecxz
or
insb
xchg
cmp
and
hlt
scas
dec
mov
adc
add
sub
aam
mov
mov
xorb
jle
or
movsb
cmp
scas
cli
mov
into
xchg
mov
inc
flds
push
or
sbb
iret
mov
xor
lea
fdivr
fsubrs
or
mov
fildl
cmp
scas
jle
sub
aad
imul
push
mov
xchg
add
jns
and
jno
fildll
psubw
mov
push
jno
jae
xor
adc
pop
adc
popf
lea
and
lods
divb
pop
and
sub
out
cli
cmp
jbe
xchg
mov
inc
addb
scas
mov
pop
out
pop
das
popa
xchg
push
loope
jne
jg
mov
xchg
xor
mov
jp
add
pop
pop
or
inc
cmp
stos
cld
cmc
pop
lods
movsb
pusha
push
cmc
or
notb
sub
xor
fistps
pop
jae
imul
cmp
mov
repz
rcrl
movsb
lret
cmp
or
cli
sub
adc
lock
push
sbbb
sbb
fwait
cmp
leave
xchg
mov
push
push
push
jmp
decb
pop
scas
jb
or
xchg
arpl
mov
cld
push
sub
fcompl
or
push
push
inc
std
test
inc
sbb
or
mov
inc
ficoms
jg
pusha
daa
lret
aad
insl
xchg
dec
push
clc
rcll
mov
imul
sarl
add
nop
ss
out
push
les
mov
adc
and
stos
xchg
iret
in
rcrb
dec
adc
std
sub
adc
inc
xor
sbb
jge
mov
sub
int3
sarb
cmp
xor
jl
mov
and
cmpsb
cmpb
mov
stos
cld
cmpsl
rol
dec
sbb
movsb
mov
cmp
lcall
imul
xchg
ret
cld
popf
jg
sub
je
cmpsb
push
icebp
push
rorl
lret
xchg
mov
dec
sbb
in
mov
mov
repz
pushf
push
push
addr16
jp
cmp
jno
push
push
scas
xchg
subb
push
lods
pop
jbe
test
ret
mov
inc
out
aas
shl
loopne
filds
test
jne
jne
inc
push
lds
scas
inc
ss
cwtl
punpcklbw
add
sub
dec
pop
ss
sbb
push
dec
sbb
cmp
ret
int
imul
int3
jmp
pop
cwtl
mov
sahf
xor
jae
sub
jmp
jmp
or
mov
add
mov
cmpsl
popa
insl
cmpsb
xchg
ret
roll
jno
in
mov
push
and
fwait
jp
shlb
mov
cld
and
jp
pop
xchg
cs
addr16
pusha
popf
loope
mov
les
push
inc
push
pushl
cld
out
cld
scas
adc
sbb
test
iret
test
pop
and
les
xor
gs
adc
cs
out
lods
xchg
mov
jg
cmpl
xor
repz
xchg
scas
xor
lret
mov
repnz
jno
push
push
push
xchg
lods
ret
inc
lock
iret
jle
rcll
mov
cld
push
dec
test
jl
fstp
mov
or
push
repnz
mov
adcl
xchg
adc
shl
out
inc
adcl
or
cmc
std
sub
ror
push
addr16
push
adc
das
cmp
aaa
or
jb
or
sub
pop
aam
aaa
and
add
xor
imul
loopne
or
mov
adc
pop
fnstcw
and
xchg
add
cwtl
lahf
out
pop
les
dec
or
call
adc
and
adc
pop
test
out
add
fiadds
mov
add
inc
push
fistps
and
cmp
xchg
loope
cmp
mov
mov
add
dec
inc
sub
xor
js
out
pop
loope
push
nop
out
scas
inc
sbb
sbb
jle
inc
int3
into
lea
clc
add
dec
call
pop
mov
dec
lret
ja
hlt
jg
mov
add
rcll
and
add
dec
fidivrl
faddl
out
inc
push
and
lods
jnp
mov
lahf
mov
xchg
ds
jmp
cltd
scas
add
push
fidivl
testl
lods
mov
ljmp
cmp
arpl
add
call
andb
clc
sbb
mov
leave
mov
mov
or
shrl
adc
ja
pop
cmp
add
xor
pop
push
bound
sbb
mov
imulb
clc
mov
mov
dec
mov
lret
scas
sbb
add
xchg
add
push
rol
leave
push
fcmovbe
or
sbb
clc
push
ret
mov
sbb
mov
jl
inc
lret
movsl
lock
add
lea
test
cmpsl
sbb
pop
addr16
or
and
mov
fisubs
insb
and
repnz
pushf
push
and
jge
mov
xchg
and
cltd
movsl
clc
lods
adc
sub
jo
lahf
cs
cmpsl
or
adc
sbb
jbe
pop
mov
decb
outsl
aam
adc
loope
lock
fmuls
jmp
fcmovb
repnz
add
mov
jne
hlt
mov
add
inc
mov
jno
xor
sub
jge
xor
lret
addr16
stc
xchg
inc
idiv
fiadds
mov
orl
mov
sub
xchg
xor
not
xlat
gs
mov
in
add
shl
clc
shlb
xchg
test
sbb
std
and
xchg
or
fwait
into
ss
jns
xor
sahf
movsb
inc
aam
nop
mov
shl
fistpll
pop
pop
icebp
clc
fmul
cmc
jae
jb
fs
mov
inc
xor
sbb
imul
push
xor
lahf
es
lods
jnp
add
inc
sbb
pushf
xchg
into
mov
and
addr16
lds
push
fwait
shl
es
jecxz
sbb
je
leave
in
int
push
ficomps
and
pop
adc
std
xchg
lds
mov
sub
in
mov
pusha
stos
xchg
jnp
ljmp
roll
adc
or
inc
in
mov
popa
add
push
sub
mov
or
mov
inc
push
adc
lods
cli
sbb
bound
test
push
mov
rcrl
mov
mov
call
inc
xlat
xchg
es
lods
pusha
mov
pop
jl
jo
stc
inc
or
push
adc
jne
sub
jge
negb
into
outsb
lds
outsb
sbb
push
mov
or
cmpsb
dec
fidivrl
out
sub
cltd
out
or
pop
hlt
xor
jns
stc
dec
adc
stc
ljmp
out
scas
mov
pop
mov
in
pop
stos
mov
repnz
rorb
sub
imul
cs
pop
push
xchg
mov
sub
jb
js
and
xor
hlt
xchg
inc
xchg
outsb
fidivl
into
inc
test
cli
jne
loop
adc
icebp
sub
sbb
divb
push
aad
out
andnps
inc
sahf
enter
inc
xlat
pop
ret
leave
cwtl
ret
in
adc
dec
fs
fwait
clc
adc
inc
cwtl
cmp
outsl
pop
and
stos
icebp
sbb
or
popa
data16
pop
jno
sbb
push
repnz
xchg
adc
and
repnz
jmp
pop
inc
hlt
inc
inc
cmpsl
aam
xchg
pop
and
stos
loop
adc
test
scas
mov
popa
mov
jmp
adc
jmp
pop
cmp
imul
pop
and
and
test
jl
jl
out
loopne
jo
aaa
sbb
loopne
xorl
rorl
sbb
mov
dec
pop
or
call
fdivr
imul
and
add
shlb
dec
mov
movsb
in
pusha
push
dec
sub
ret
imull
mov
mov
sarl
jge
xchg
cmp
aad
or
jae
jns
xor
in
sbbb
lahf
ds
pop
imul
rcll
lea
pop
ret
inc
jo
lods
movsb
adc
aad
jo
lret
iret
sbb
test
push
adc
mov
std
das
cmpsl
cli
or
and
inc
adc
or
lods
subl
cli
cli
repz
loopne
sub
popf
jle
inc
inc
fwait
cmpsb
mov
cs
dec
and
dec
lock
push
mov
lret
dec
dec
lds
inc
pop
adc
ffreep
cmpsl
mov
mov
mov
fcmovnbe
insl
dec
push
push
sahf
push
pusha
mov
fwait
mov
pop
aad
sub
jmp
ljmp
fsts
mov
cmp
shlb
sbb
or
push
sbb
pop
hlt
addr16
jnp
mov
jne
icebp
inc
add
mov
cmpsb
or
orb
inc
les
xchg
xor
add
push
xchg
movsl
mov
sub
xchg
mov
dec
in
into
and
xchg
push
aaa
aam
push
daa
cmp
je
ljmp
mov
fidivrs
cmp
xchg
test
cmp
xchg
cltd
push
and
imul
daa
gs
and
xor
and
jo
lea
sub
jbe
cmpsl
and
loop
cmpsb
dec
orb
xchg
sbb
add
and
sti
lock
mov
sub
mov
aad
mov
adc
or
push
xchg
js
mov
or
or
lea
int3
lods
ret
sub
sbb
lahf
lods
push
nop
faddl
shll
cmp
rclb
gs
mov
setb
push
bound
mov
loopne
jns
cmc
imul
testb
leave
push
mov
fs
lret
sub
adc
cmc
xchg
scas
lds
sbb
les
xor
pop
repnz
fistpll
add
out
movsl
push
enter
das
inc
mov
push
inc
out
cli
dec
add
jg
push
xor
push
xor
push
clc
fstpl
outsb
push
add
in
mov
clc
adc
scas
push
or
mov
or
sbb
mov
xchg
xlat
lahf
xchg
mov
stc
hlt
dec
imul
or
cmpsl
outsl
add
inc
dec
xor
push
xor
flds
cmp
jb
std
xlat
or
pop
mov
adc
cwtl
pop
xor
and
add
jb
cli
aaa
cmc
sbb
notb
ljmp
cltd
or
adc
xchg
and
inc
xchg
cs
xchg
xor
inc
xchg
cli
into
cmp
aam
fdivrp
push
jnp
mov
sbb
pop
xor
adc
dec
cmp
sbb
or
jecxz
fbld
push
mov
mov
sub
cmpsl
ficompl
test
add
divl
nop
lds
lock
sub
shl
sbb
sbb
rcrl
aas
fsubrp
in
jno
mov
hlt
pop
hlt
lret
push
jns
mov
mov
xchg
js
jge
cli
jg
fsts
leave
aas
jecxz
in
xchg
daa
outsl
push
pop
xor
jecxz
jae
cmpsb
mov
xchg
fs
add
xchg
fwait
sbb
mov
shr
push
add
ret
xor
xor
jp
mov
xlat
sbb
xchg
cmc
cmpsl
loope
xchg
cmp
fwait
pop
aam
push
and
pop
aaa
adc
add
and
test
insb
out
daa
dec
pusha
nop
or
cmc
or
and
mov
mov
daa
fs
and
pop
or
pop
mov
int3
std
cmp
jae
loope
clc
and
andl
pop
arpl
ficoml
sbb
cs
movsb
popa
fcom
jne
andl
mov
sbb
scas
call
cmp
nop
push
xor
sbb
gs
lahf
leave
mov
repz
leave
pusha
push
xchg
cmp
sbb
mov
scas
or
repnz
notb
test
add
mov
or
mov
in
mov
dec
or
cmp
into
imul
dec
sbb
jb
mov
leave
cmp
out
jae
neg
insl
and
sub
dec
lcall
lods
shrb
jnp
arpl
fs
push
out
cltd
xchg
cltd
out
shrb
xor
insb
cmpsb
dec
stc
xorb
inc
scas
push
in
cmp
loopne
insl
pop
pop
adc
in
adc
filds
mov
sbb
mov
das
xchg
sbb
dec
dec
popl
mov
cmp
dec
sbb
dec
test
mov
mov
nop
incb
cmp
jp
lret
jge
arpl
and
insb
mov
and
jno
jb
loopne
rcrl
mov
push
mov
inc
hlt
aam
jne
incb
push
mov
mov
mov
ds
sub
imul
push
aaa
inc
insl
xchg
sbb
sbb
leave
xorb
int
loopne
xchg
sahf
xchg
adc
lock
sub
sbb
cmpsb
flds
pop
xor
cmp
or
lods
testb
mov
pop
dec
lret
shr
pusha
push
adc
imulb
jno
bnd
scas
jge
dec
sbb
jbe
pop
sbb
addr16
sub
lret
inc
sbb
jmp
xchg
test
insl
data16
mov
mov
mov
ja
mov
xchg
mov
jbe
imulb
push
adc
sub
push
and
cltd
pop
jns
idivl
andl
jl
int3
lcall
and
clc
jae
fs
cmp
pop
dec
out
int
cmp
pop
xor
mov
add
jle
jp
fdivrl
int3
imul
dec
push
and
test
cmp
pushl
shl
adc
stos
fdivl
xchg
jnp
jno
mov
sbb
clc
cmpsb
push
cmp
pop
xchg
pop
adc
pop
sub
int3
mov
cmp
pushf
aas
lods
rclb
and
outsb
dec
scas
aaa
sbb
insl
lock
sahf
sub
sahf
rorl
dec
mov
pop
mov
jl
pushf
xchg
movsl
pcmpeqd
adc
and
push
dec
clc
cmp
jge
lret
jmp
add
sub
adc
xor
sbb
cmp
xchg
mov
pop
ds
push
sbb
dec
mov
jno
orl
rcr
jbe
in
mov
les
lods
sub
stos
or
pop
push
lods
in
mov
cmp
ficompl
push
es
mov
ss
dec
std
aam
sbb
in
sbb
push
mov
jno
cmp
mov
mov
fldenv
fcoms
xor
dec
rclb
fistl
aam
mov
push
adc
inc
insb
pop
mov
test
or
aas
jbe
sub
add
mov
cs
pop
mov
or
test
mov
sbb
ja
out
mov
jp
and
add
fdivp
inc
outsb
cmp
mov
mov
jnp
ja
subl
lcall
addr16
push
mov
xor
add
je
cli
ja
fwait
jo
sti
pop
into
lds
inc
push
repnz
adc
jb
je
sub
pop
repz
stos
pop
lret
mov
stc
pop
mov
sub
lods
inc
aas
je
pop
call
shlb
push
not
gs
mov
mov
xor
lahf
fisubs
dec
cmp
xor
sbb
xor
lahf
pop
jmp
dec
aad
xor
push
insl
fsubrl
add
pop
cmp
pop
xchg
cltd
mov
aad
sbbb
jae
imul
xor
imul
aam
sti
movsl
pop
cmp
mov
add
mov
fsubl
dec
dec
cmp
cs
stos
repz
pop
dec
push
outsl
fisubrs
into
push
ret
add
xor
jmp
in
scas
push
sub
dec
repnz
sbbl
and
and
adc
fimuls
adcl
and
cli
std
sbb
repnz
jns
imull
bound
mov
sarl
mov
mov
nop
jp
sti
mov
xor
movsl
xchg
outsl
pop
push
daa
xor
cmp
das
xchg
les
call
iret
cmpsb
mov
cmp
and
sbb
loop
daa
dec
xor
js
movsl
mov
ds
ret
lret
jge
cwtl
mov
mov
out
pop
insl
shr
enter
mov
cltd
xor
sub
test
loope
mov
aas
and
cli
mov
addb
mov
mov
shrb
mov
push
nopl
push
pop
not
ljmp
lcall
lds
xchg
faddl
out
rorl
daa
pop
aad
ret
pusha
fwait
add
push
push
mov
andb
mov
or
test
push
dec
cld
pop
mov
leave
stos
cli
xchg
dec
mov
lret
xor
dec
adcb
push
pop
mov
into
decl
pop
data16
enter
sbb
out
cmp
push
out
xlat
sahf
and
push
shl
outsl
mov
push
fucomip
mov
mov
in
lock
xor
cltd
sub
aad
jno
mov
insl
mov
stos
pop
rorl
fdiv
hlt
mov
rcrl
test
js
negl
mov
mov
jle
xchg
js
pop
enter
mov
lea
shrl
fsubrp
cli
pop
and
rcrb
inc
mov
mov
rclb
icebp
shrb
scas
sahf
outsl
repz
jb
cmp
call
in
adc
divb
or
rcrl
push
outsl
push
sbb
fstpt
insl
cs
inc
dec
and
jl
data16
jbe
pop
int3
add
aas
mov
push
loop
leave
mov
jbe
jecxz
xchg
cmpsl
loopne
lds
push
push
push
mulb
inc
push
out
pusha
je
and
dec
mov
lcall
scas
cld
fildl
push
loop
test
bound
dec
dec
fnstcw
jne
inc
push
cmp
jge
pop
js
cmpsl
push
push
pop
push
lock
sti
jg
mov
inc
test
sub
xchg
add
sub
test
inc
rolb
push
sub
repnz
test
pop
xchg
das
add
outsl
loopne
pop
mov
imul
sarb
xor
cmpsl
xchg
aas
mov
into
gs
addb
cmp
fwait
aad
xchg
mov
int
mov
jae
arpl
jne
or
jns
mov
mov
jb
sub
mov
adcb
decb
jmp
dec
popf
jns
mov
pop
hlt
pop
sarb
jg
mov
stos
imull
dec
out
adc
inc
ret
mov
out
aad
jmp
jno
test
add
into
call
pop
xorb
std
repz
cli
jge
jmp
pop
jo
push
pop
and
mov
sti
bound
andl
ret
decb
and
cmp
addr16
fisubrl
in
cmp
inc
add
jl,pt
mov
loope
pop
inc
xor
into
fistps
add
test
aaa
fistpl
and
dec
mov
and
mov
push
and
mov
fnstcw
xchg
inc
jne
xorb
test
sub
andl
es
inc
lods
cmpsb
mov
adcl
xorb
fidivl
in
hlt
in
lcall
jge
dec
mov
dec
les
repz
ljmp
ret
mov
mov
clc
test
cmp
add
jmp
sbb
push
cmp
dec
xchg
xor
sbb
inc
test
out
xor
xor
jmp
jmp
fs
ja
add
dec
hlt
lock
push
or
fisttpl
and
dec
cld
ja
adc
push
iret
movsb
das
push
js
xchg
or
and
push
dec
xor
adc
sbb
adc
shlb
in
mov
push
add
outsl
movsl
pop
push
aad
push
inc
enter
lret
inc
xor
cmpsb
mov
addb
outsb
outsl
push
adcb
mov
push
cmp
push
lea
mov
jnp
test
pop
mov
jge
pushf
jp
sbb
push
dec
fwait
xchg
mov
std
jle
pop
pop
shrl
push
jb
pop
adc
jmp
xchg
pusha
push
add
out
outsl
jge
jns
xlat
dec
fsub
xchg
inc
cmp
out
push
add
es
jmp
xchg
mov
xor
int3
lea
mov
data16
cwtl
aad
sub
xchg
mov
in
adc
mov
mov
cmp
mov
xchg
cmc
push
or
inc
movsb
int3
or
les
push
sbb
out
clc
push
jp
or
jge
jne
loop
mov
mov
cs
mov
movsb
fdivs
inc
mov
pop
loop
xchg
scas
rcrl
loop
in
or
fisubs
mov
data16
pushl
sub
loope
leave
push
mov
scas
aam
out
inc
aad
pop
out
cmp
fs
fidivrs
adc
jno
cmp
or
push
lea
xchg
fildll
cmpxchg
mov
xchg
lret
cld
cld
dec
lahf
pop
insl
js
push
sub
pop
std
pushf
out
inc
pushl
xor
fs
pop
test
and
push
rcl
int
addr16
xchg
mov
sbb
in
inc
enter
xor
insl
subb
in
adc
push
dec
dec
jg
lods
xor
jnp
add
in
fistl
fcomi
mov
xor
loopne
pop
out
and
bswap
push
hlt
jg
push
mov
mov
pop
loop
stc
cmp
les
mov
xor
je
push
ja
add
sbb
or
adc
mov
jnp
cmc
inc
xor
and
ret
cmp
sar
in
mov
stos
jo
outsl
jnp
iret
inc
sbb
push
pushl
or
mov
stos
jnp
mov
out
mov
mov
push
pop
fcmovbe
cmp
inc
mov
stos
lcall
jmp
xchg
stos
and
fstpt
in
lea
fimull
add
in
dec
lcall
das
xor
and
inc
and
fldenv
jp
mov
cmpsl
std
clc
dec
sbbl
outsb
mov
lods
out
sub
mov
inc
ja
push
ficomps
shlb
lret
sbb
outsl
jmp
enter
mov
jle
xchg
push
jo
inc
dec
mov
xor
jo
les
aam
mov
lret
mov
aam
adc
decl
or
pop
test
inc
or
xor
inc
xchg
orb
adc
or
imul
mov
scas
dec
mov
fistps
sarl
pop
add
ficoml
test
outsl
nop
cs
sub
or
xor
pusha
loop
scas
jo
mov
push
rorl
mov
and
repnz
int3
dec
xchg
mov
into
cmp
sti
scas
lcall
jl
icebp
imull
pop
int
and
xor
sub
pop
ja
addl
push
in
jl
mov
mov
aad
sub
xor
xchg
leave
pushf
dec
mov
bound
repz
push
xchg
jmp
xchg
repz
mov
mov
mov
add
or
insb
and
mov
data16
stos
cmpsb
leave
fisubrs
xor
lcall
adc
mov
sbb
shll
mov
mov
sbb
add
push
cld
fildll
fisubl
ljmp
or
mov
addr16
into
gs
dec
mov
or
adc
stc
out
pop
mov
ficomps
pushf
adc
gs
in
xor
test
mov
add
and
xor
enter
xor
and
repnz
jle
pop
xchg
popf
sbb
pop
mov
outsl
mov
add
jmp
pusha
adc
jmp
cmpsl
xlat
int
leave
adc
cld
hlt
xor
push
xor
es
sub
adcb
jp
ss
imul
ss
inc
cmp
inc
rorl
addr16
and
pop
cmp
icebp
or
mov
insb
pop
imul
mov
adc
mov
push
cmp
dec
incl
push
pop
xorl
iret
test
stos
pushf
xor
int
out
jle
push
push
dec
push
sti
jbe
ret
cs
lcall
jns
f2xm1
pop
stos
fmuls
enter
pop
push
lock
test
repz
rolb
and
or
sub
shrl
mov
sti
mov
xchg
inc
push
add
scas
xor
aas
mov
mov
jae
mov
xor
push
inc
push
mov
pop
out
clc
mov
cmp
je
mov
adc
inc
add
jb
out
leave
add
jle
cmpsb
xchg
push
jmp
jno
xor
lods
xchg
bswap
xchg
push
mov
mov
jle
aas
lock
xor
cmp
addr16
mov
sbb
mov
es
xlat
xchg
mov
mov
mov
cmpsl
dec
xchg
adc
push
dec
lds
and
inc
stos
cmp
js
mov
sub
cli
push
lcall
daa
push
outsb
loope
pushf
push
cmc
jmp
cltd
ret
xchg
and
mov
push
push
dec
xor
adc
repz
aad
pop
imul
lds
fwait
test
push
jno
xchg
adc
dec
push
rorb
sbb
out
mov
pop
push
sbb
push
lahf
ret
add
push
or
sub
lret
xchg
mov
icebp
mov
mov
jp
sti
mov
scas
fisttpll
int
leave
mov
and
fisubrs
mov
lds
cmpsb
cmp
pop
outsb
sti
stos
test
pop
out
add
pop
jno
adc
pop
push
xor
inc
adc
stc
jo
daa
and
js
sti
clc
addl
push
jbe
push
sbbb
movsl
push
cmc
xchg
bnd
std
lret
lods
pop
push
pop
mov
lea
pop
xor
jns
xor
mov
mov
jbe
cwtl
es
mov
fcoml
scas
and
push
pusha
pushf
jo
loopne
adc
and
mov
stos
leave
divl
arpl
pop
arpl
sub
mov
aad
enter
addr16
clc
js
cwtl
cltd
dec
or
cli
lds
cmp
cwtl
add
xchg
outsb
inc
push
jle
test
leave
dec
bound
inc
in
lea
cmp
lds
data16
stos
pminsw
and
addr16
pop
fwait
aam
adc
push
jae
jnp
cmp
jnp
outsl
jae
and
mov
call
out
push
mov
outsb
adc
jle
and
add
out
das
test
xchg
xor
jle
xor
scas
cmp
dec
lahf
add
dec
enter
out
in
in
push
daa
dec
fwait
jge
push
dec
roll
sti
push
pop
aam
xor
pushf
ljmp
insb
test
sub
rcl
aad
add
stos
pop
mov
inc
inc
loopne
cld
push
scas
inc
inc
xchg
ret
xchg
icebp
jno
stos
pop
jbe
xor
push
mov
shl
xor
out
sbb
mov
popa
mov
shrl
arpl
sub
lahf
into
xchg
dec
adc
adc
push
js
cwtl
imul
sbb
pop
fbstp
aaa
xchg
lds
inc
cmp
sahf
outsb
inc
or
jnp
and
ret
mov
inc
mov
mov
pop
or
sub
add
notb
add
lea
add
cwtl
and
je
push
mov
stc
dec
push
imul
or
out
add
into
lods
mov
ret
sub
sub
push
dec
xor
cli
les
xchg
or
mov
jns
out
cmp
push
pushf
push
xor
sub
in
and
ljmp
xlat
std
popa
stos
cmpsb
shlb
sub
movsb
add
and
or
imulb
into
sbb
mov
pop
aas
dec
push
or
xchg
mov
pop
lods
flds
sub
sbb
sub
dec
pop
cltd
es
jne
imul
icebp
call
mov
sbb
sahf
repz
icebp
inc
lock
dec
adc
cmpsb
daa
add
xchg
mov
inc
jnp
mov
dec
push
sub
pop
pop
mov
ljmp
pop
andb
andb
ss
cmpl
movsl
jmp
xlat
and
scas
and
out
int
les
mov
fwait
mov
sub
push
push
sub
adc
sub
push
call
neg
or
cmpsb
lods
rcr
jbe
js
mov
cli
js
ljmp
das
jb
loop
arpl
jg
jno
sub
sbb
push
mov
fisubrl
cmp
test
adc
outsb
mov
loop
imul
push
cmpsl
mov
push
inc
int
ljmp
mov
mov
sbb
adc
shl
xchg
jno
notb
sbb
fistl
pop
jp
imul
fnsave
stos
sub
mov
orb
mov
dec
and
jnp
scas
mov
pop
ficomps
jns
adc
jge
fstl
cmp
and
je
sbb
mov
and
dec
xor
inc
jp
jmp
mov
shll
pushf
and
dec
cwtl
mov
test
adc
jp
icebp
add
loope
mov
mov
adc
jne
and
int
jb
rcl
sahf
out
xlat
in
out
sbb
scas
aaa
movsb
pop
jns
ja
add
sbb
add
inc
adc
dec
inc
pop
cmpsw
pop
out
mov
les
mov
and
xchg
stc
fs
inc
sbb
jmp
mov
sub
fwait
je
add
mov
add
faddl
mov
call
push
push
jb
movsb
repz
pop
mov
fidivl
cmpb
cmp
dec
adc
sub
arpl
popf
xchg
xorl
and
jmp
cmp
enter
addr16
adc
and
jl
pop
cmp
arpl
mov
ja
arpl
faddl
ficoml
sub
dec
jmp
clc
pop
lcall
out
mov
lea
adc
frndint
and
jnp
adc
xchg
inc
dec
int3
jl
sbb
call
pop
fldcw
rep
aas
ss
lods
jnp
nop
js
hlt
fldl
fldenv
jl
inc
outsl
loope
and
sbbb
jmp
fdivrl
pop
cmp
in
adc
xchg
xor
fidivrs
popf
jmp
sahf
mov
jg
cmp
cltd
das
jo
pushf
sbb
dec
adc
add
jns
xor
sub
imul
lret
sbb
jmp
inc
or
xor
out
lods
add
subb
lea
int3
and
in
aaa
aaa
inc
shll
inc
inc
jne
fcoml
push
test
and
mov
int
call
xchg
popf
or
inc
loop
adc
xchg
mov
dec
int
jne
orl
xchg
adc
xchg
std
xor
mov
lods
mov
sahf
push
mov
aaa
bound
add
testb
inc
push
outsl
sbb
repnz
inc
test
lret
sub
push
sbb
xor
sub
hlt
insb
lret
jb
jbe
ror
cmc
jae
mov
mov
xor
push
jbe
pushf
pop
mov
push
sahf
xchg
jo
push
mov
out
cli
or
popa
push
and
jnp
lret
xchg
and
jmp
push
outsl
int3
mov
ficompl
sbb
lret
dec
imul
xor
push
add
out
lret
arpl
mov
into
shlb
out
hlt
mov
sarl
push
xchg
mov
sbb
mov
aaa
jb
push
lahf
daa
mov
jmp
lret
xorl
loope
daa
fwait
inc
pop
in
push
mov
mov
cli
jb
xchg
mov
adc
imul
add
fdivp
pop
divb
aad
iret
xlat
insl
sbb
xlat
cld
lcall
adc
mov
lods
movsb
inc
or
push
add
loop
addl
imul
mov
mov
inc
cltd
adc
sarl
jle
scas
loopne
ficomps
rorb
stos
cwtl
adc
jbe
bound
outsb
xor
push
aaa
or
jle
neg
adc
and
adc
dec
popa
mov
out
fildll
mov
test
push
mov
mov
push
inc
mov
lock
jb
sub
push
leave
aaa
push
scas
fisubl
add
push
les
xchg
addb
xchg
pop
adcl
repz
jo
jns
mov
inc
sub
scas
xor
xchg
push
mov
pop
bnd
shll
jns
dec
imul
pushf
mov
mov
push
lea
popa
cmp
xchg
cmpsl
mov
lds
scas
fst
mov
pop
pop
sbb
mov
mov
test
ljmp
mov
add
fwait
pop
mov
test
cli
xchg
notb
mov
pop
mov
icebp
insl
or
pop
int3
push
push
cmc
ret
in
mov
daa
aam
and
arpl
cmp
xor
jmp
sbb
sub
sub
cmc
movsl
xor
je
in
cmp
inc
mov
aaa
andl
lds
mov
cmpsb
repnz
cld
xor
test
jbe
fldenv
mov
cmp
xorl
jmp
lods
call
sub
inc
mov
pop
insl
sub
jae
inc
jne
ficoms
mov
push
xchg
add
mov
adc
loop
sub
add
ja
out
call
sub
mov
roll
inc
push
fldcw
fistpll
in
sbbl
add
jnp
fwait
push
mov
shlb
pop
add
lods
and
fwait
xlat
fucomi
xor
loopne
mov
sbb
movsl
adc
xchg
xchg
mov
lret
mov
loope
mov
push
add
jmp
mov
out
dec
adc
pop
lret
cmpsb
and
fnstsw
push
dec
data16
out
cwtl
and
lret
jne
arpl
mov
addr16
pop
arpl
bound
scas
insb
fnstenv
cmpsl
mov
cs
xchg
mov
mov
cmpsb
mov
pop
enter
addr16
in
leave
gs
sarb
loopne
or
fwait
aad
pop
jecxz
jle
jnp
cmp
jg
cs
cmp
mov
jns
add
cmp
inc
fs
test
mov
scas
or
scas
fsubs
rcrb
mov
sub
fwait
push
push
lahf
jo
adc
adc
push
xchg
fcmove
testb
stos
xchg
in
xchg
pusha
imul
mov
shl
rcll
pop
out
lods
xor
xchg
js
andl
inc
addr16
pop
dec
imul
jnp
or
xor
sub
xchg
dec
push
cwtl
daa
pop
lods
lock
mov
and
mov
mov
vmwrite
mov
out
jmp
and
popf
inc
xchg
lcall
rorl
adc
sbb
std
repnz
incl
sahf
sub
dec
xor
add
nop
cld
notl
xchg
test
sarl
pop
stos
es
mov
and
or
push
push
lcall
loopne
pop
std
pop
imul
mov
xor
mov
das
mov
into
cltd
cli
push
pop
test
icebp
aad
lds
sbb
int
leave
cld
imul
ret
iret
fidivrl
in
imul
jge
lcall
xchg
shlb
push
sbb
mov
fstps
lahf
test
and
addr16
in
sbb
add
pop
or
lret
in
jmp
jbe
in
clc
test
cmp
es
dec
adc
cmp
and
jle
mov
pushf
into
pusha
sbb
addr16
test
stos
in
mov
push
xchg
test
mov
sbb
inc
adc
mov
pop
scas
xor
cmp
rorb
int
call
lret
adc
sub
je
mov
cmp
cmp
sub
inc
roll
jmp
mov
arpl
sbb
dec
push
mov
gs
jo
jno
sbb
cmc
inc
stos
push
dec
iret
loopne
push
js
xor
iret
jmp
cmp
xor
cmpsb
movsl
lods
sbb
xor
sub
or
ja
jne
dec
push
nop
xor
je
push
dec
fnstenv
xchg
in
jmp
cmpsl
dec
xchg
xchg
sub
push
bound
cmp
sub
stc
cli
xchg
pop
push
insl
or
test
push
popa
lret
adc
mov
and
cmpsl
pop
repz
add
inc
movsl
ja
adc
pop
inc
xchg
xchg
adc
xlat
cmpsl
icebp
js
mov
dec
mov
pop
dec
xor
push
mov
adc
pop
jb
movsb
sti
ja
jno
fldenv
or
das
jg
jae
outsb
jle
inc
cli
dec
test
in
imul
jmp
add
sub
cs
out
inc
xchg
sarb
inc
push
or
cltd
push
and
fs
jo
add
cld
addr16
in
xchg
stos
xchg
cmc
dec
mov
xchg
jbe
cmpsb
adc
subl
push
lahf
cmpsb
pushf
push
xchg
ret
push
decl
inc
mov
lods
and
js
scas
pop
repnz
movsb
aam
in
rcl
int3
fisttpl
in
in
lods
test
cltd
outsb
jl
sub
jp
test
ficoml
sub
sbb
dec
lods
adc
pop
jns
rcl
fwait
or
xchg
into
mov
rcll
or
jns
mov
decb
mov
fnstcw
ljmp
push
and
push
jne
js
lods
aaa
ds
cmp
int3
movsl
cmpl
sub
mov
icebp
cmp
xchg
pop
js
mov
fxch
and
push
cmp
sti
repz
adcl
aam
call
iret
arpl
mov
jns
imul
aam
dec
rol
jne
nop
sbb
xor
lcall
rclb
rorb
or
movsl
pop
ret
xor
mov
fadd
aas
aam
xor
scas
jg
sbb
fidivrs
mov
or
jp
mov
sub
ljmp
mov
xor
stos
dec
mov
movsb
les
sahf
push
lea
ret
pop
sti
sbb
add
stc
inc
sub
dec
mov
lret
jmp
je
out
lods
xor
vpscatterqq
sarb
mov
mov
cwtl
cmp
push
pop
fdivl
data16
test
jb
test
cmc
out
push
cmp
add
fisubs
xchg
jae
fnstsw
bound
test
adc
jo
mov
out
aaa
test
idivl
gs
sti
cmp
jmp
inc
cmp
lock
xor
add
movsb
mov
lahf
shlb
sub
clc
aad
cmpl
mov
and
or
pop
mov
inc
stc
mov
es
add
mov
ret
inc
push
dec
cmpsb
sbb
into
mov
mov
lods
dec
jg
mov
testb
js
insb
push
addb
frstor
dec
dec
outsb
adc
loop
mov
jnp
dec
fs
mov
addr16
repz
ljmp
outsl
and
cmpsb
cmpsb
jg
popf
cs
or
bound
cmpsb
dec
sbb
inc
mov
insb
jecxz
int3
aas
sti
outsb
sti
cwtl
lret
sub
cmpsl
xchg
adc
in
ficoml
pop
stc
dec
xchg
jnp
mov
and
xchg
cmpsb
rcll
cli
mov
xchg
dec
iret
frstor
stos
enter
out
lods
cmp
fidivrl
mov
inc
mov
mov
or
xor
pop
jbe
daa
lods
add
xor
push
mov
sbb
pop
data16
inc
notb
nop
mov
push
xchg
les
outsb
jge
mov
xchg
dec
out
rcll
and
sbb
in
sbb
xor
rcl
clts
scas
lods
outsl
clc
cmp
jge
pop
pop
enter
add
ret
pop
popa
jns
rclb
add
sbb
inc
jne
scas
dec
pop
lods
push
push
repz
sbb
jmp
mov
cld
cmp
cmp
sahf
sbb
dec
subl
push
cs
inc
in
subb
bound
mov
or
lret
push
les
xchg
dec
inc
jne
mov
mov
xchg
std
out
outsl
xchg
xchg
imull
jne
and
mov
lret
sar
test
jne
mov
test
inc
mov
iret
jns
aas
jnp
insl
loopne
push
out
xchg
hlt
jo
ds
add
repnz
jg
cli
and
pop
hlt
out
pop
cmp
push
sub
push
dec
xchg
dec
rcll
xor
imul
xchg
lcall
push
scas
into
lds
xchg
xor
sub
mov
sbb
js
adc
pop
inc
add
mov
pushf
jns
dec
sub
push
adc
leave
adc
addr16
push
shrb
mov
add
mov
ds
rcrl
cmpsb
mov
dec
inc
pop
shrb
push
aas
and
mov
mov
xor
in
xor
jb
adc
jg
hlt
jb
lahf
and
add
sub
into
flds
mov
insb
inc
int3
mov
dec
das
add
xor
repnz
push
push
cld
lcall
sub
into
fnstcw
push
cmpsb
ret
gs
cmp
push
ficoml
insl
outsl
dec
pop
stc
mov
loop
in
mov
stc
test
es
rorb
sbb
pop
push
lret
outsb
clc
call
jns
mov
sbbl
icebp
std
adc
cmp
testl
jae
push
insl
cmp
and
std
test
addb
adc
pop
fsubrs
push
jbe
popl
lret
add
mov
fucom
out
bswap
sarb
insb
je
cmpsb
xchg
mov
xchg
add
pusha
popl
dec
jae
sbb
mov
add
lds
loopne
adc
and
fsubr
cmp
movl
rclb
or
xchg
mov
xlat
cmp
jge
je
leave
xor
in
loop
xchg
stc
inc
xchg
mov
push
xor
int
mov
shlb
into
mov
or
inc
push
loop
adc
adc
dec
add
mov
or
inc
es
add
xor
mov
cltd
std
mov
xor
xorl
aas
out
mov
or
test
dec
lret
lret
incb
gs
imul
icebp
and
js
sbb
jl
inc
push
or
data16
sbb
jmp
mov
ljmp
mov
jg
ror
add
in
mov
and
lods
xchg
test
mov
popa
nop
cs
aas
fsubl
sbbl
in
lahf
mov
or
shll
into
xor
cmpsb
and
mov
sbb
sbb
orl
jns
sub
fidivrl
scas
shlb
test
mov
je
or
or
add
push
imul
mov
out
gs
adc
or
push
push
adc
aas
xor
pop
add
sti
push
andl
dec
pop
add
test
cwtl
inc
fwait
xchg
fnstcw
push
lahf
into
push
cmp
ds
dec
xor
ljmp
mov
test
pop
dec
sbb
lcall
and
pop
mov
cmpsb
or
aas
cmpsb
lods
sub
mov
pusha
scas
inc
jae
pushf
add
jns
lea
mov
mov
fiadds
lods
push
ds
ret
ljmp
jp
in
cwtl
push
out
into
loop
fadds
adc
arpl
std
cmpsl
push
push
test
and
hlt
mov
scas
arpl
mov
rolb
dec
push
rolb
out
mov
rep
adc
aad
sahf
cmp
sub
pop
movl
cwtl
int3
in
mov
lock
clc
inc
fsubrs
pop
and
add
push
xor
push
pop
popa
inc
lret
xchg
nop
mov
or
cmp
or
lcall
bound
mov
cmp
iret
inc
xchg
jae
das
lcall
mov
aaa
xchg
jns
jg
daa
pop
popf
cmpsl
lret
sahf
cmc
mov
cmp
fmull
xchg
pop
pop
dec
push
adc
in
inc
jne
push
das
call
stc
sbb
mul
fcoml
xor
mov
loopne
inc
lret
sarl
pop
aas
movsl
xor
cmp
dec
inc
mov
push
test
and
inc
inc
fsubrp
das
testl
cmp
loopne
cld
dec
dec
data16
mov
inc
in
dec
ja
push
and
cmpsb
addr16
adc
push
xchg
mov
xorl
shlb
xchg
bound
popa
shll
fcoms
adc
sbb
push
call
inc
lods
sbb
xor
mov
or
iret
pop
pop
mov
xlat
aam
push
repz
lods
pop
adc
add
and
test
sub
xchg
mov
push
mov
add
fldt
stos
inc
xor
push
sub
jge,pt
push
push
nop
and
in
mov
jno
xor
scas
cltd
mov
mov
and
sub
mov
mov
lahf
jo
stos
pop
popa
cmp
xor
fdivr
push
lcall
jmp
fbld
neg
enter
lds
or
rcr
daa
fldt
mov
insl
out
jg
stos
pushf
mov
unpcklps
sub
cmp
fstps
mov
fimuls
icebp
test
mov
inc
call
sti
or
aaa
jne
dec
xchg
mov
lret
loope
adc
dec
arpl
jo
xchg
adc
es
hlt
sarl
clc
enter
mul
test
mov
jne
enter
shrb
scas
imul
sbb
inc
pop
out
mov
ljmp
pop
inc
ds
sbbb
or
xchg
add
inc
add
and
out
xchg
push
notl
and
leave
push
jae
xor
jecxz
or
leave
in
loopne
add
insb
add
mov
mov
js
pop
mov
js
fmulp
push
jae
adc
sbb
ss
sub
inc
sbb
cmpsl
subb
test
sub
sub
add
lock
jbe
push
lcall
int
das
sub
sti
lcall
xchg
insl
push
je
push
dec
sbb
out
sub
addr16
pop
inc
subb
mov
adc
pop
add
aam
sbb
daa
arpl
aam
mov
sbb
outsl
add
inc
lea
sti
sar
pop
bound
push
inc
xchg
test
cmp
dec
shll
inc
hlt
jmp
gs
mov
mov
cmp
test
lret
add
jno
jae
js
jbe
cmp
bound
and
in
movlps
push
lea
jo
mov
sbb
ja
bnd
mov
mov
sbb
sti
mov
mov
cmp
mov
sbb
pop
ret
lret
mov
add
inc
shrl
rcll
sti
mov
rcrb
cmp
push
xchg
lods
push
adc
pop
hlt
and
pop
sub
test
test
in
fucomip
jl
pop
lret
outsb
fwait
repnz
out
mov
adc
filds
mov
shll
sbb
jmp
xchg
fnstenv
scas
mov
ret
jg
adc
inc
pushf
arpl
movsl
pop
mov
enter
jns
ja
fcomip
mov
sub
int3
jns
jns
mov
fmul
inc
push
dec
out
push
xor
inc
push
clc
mov
cmpsl
test
int
lods
pop
push
stos
sti
pushf
xor
sub
test
in
addr16
fstpl
leave
dec
push
orb
sbb
mov
pop
lret
dec
push
jle
out
cmp
cli
ja
mov
mov
and
mov
stos
sub
dec
imul
pop
pop
push
mov
lds
into
mov
jns
push
jns
test
jno
icebp
in
out
inc
outsb
les
icebp
ret
and
repnz
mov
pop
iret
lods
mov
fisubrs
into
std
and
inc
aaa
dec
xchg
add
movsl
imul
jl
cld
jne
push
in
xor
bound
je
aaa
inc
jno
lret
jo
pop
cmp
loope
nop
jns
js
stos
or
shll
popf
mov
xchg
pop
fiadds
mov
gs
in
jo
aam
iret
sahf
jmp
dec
xchg
into
sbbb
mov
xchg
jb
jecxz
mov
xchg
dec
fucom
test
pop
mov
mov
inc
adcb
lods
push
sub
dec
ljmp
adc
pop
das
and
lahf
imul
mov
xlat
mov
call
jo
pushf
es
cli
daa
lea
repz
mov
push
iret
pop
movsb
jo
inc
cmp
lcall
outsb
xchg
lea
iret
cli
leave
js
push
mov
add
jnp
out
in
mov
dec
cmpsb
mov
dec
jmp
sar
sahf
pop
jmp
xor
mov
jns
fldenv
cltd
xchg
pushl
sub
jmp
xchg
push
loop
jne
aam
lret
js
inc
mov
push
mov
push
shl
push
push
gs
aam
xor
xlat
adc
popf
sub
push
jg
xchg
jmp
and
popl
or
data16
cwtl
adcl
lcall
inc
mov
lock
lahf
insb
mull
fimuls
daa
outsb
adc
pop
mov
or
sbb
xchg
mov
dec
xchg
movsb
dec
lret
jne
iret
push
lods
jae
insl
inc
sahf
xchg
filds
jae
sub
sbb
das
xchg
sbb
xor
xor
fidivrl
push
scas
mov
push
cmp
fldl
out
je
cmp
out
sub
sbb
js
push
push
inc
decb
cmpsb
outsl
inc
int3
xchg
or
in
sub
js
cwtl
jle
ret
in
iret
mov
js
ljmp
outsb
sub
cwtl
add
pop
ja
cmp
xchg
mov
mov
js
jmp
fiadds
test
fidivrs
inc
sub
ljmp
or
mulb
shlb
pop
fcoml
mov
cmp
adc
call
jne
into
cmpsb
movsl
jecxz
andb
jns
xor
testb
sub
mov
fs
dec
push
add
shl
sahf
ljmp
jp
movsl
outsb
sti
pop
mov
and
inc
dec
sub
adc
imul
in
andb
out
mov
pushf
lahf
fstl
push
scas
mov
sub
fs
fsubp
imul
xchg
cli
lret
sub
xor
andb
and
jno
enter
imul
mov
pop
dec
cmp
out
repz
cmp
add
sbb
add
loop
mov
jno
cli
test
jno
mov
mov
cmp
cmp
es
jno
xor
and
inc
jbe
es
and
push
movsl
ret
sub
fisttpll
mov
mov
xchg
insb
add
shrl
sbb
scas
scas
js
mov
or
fidivrl
jb
cmpsl
and
je
dec
cld
add
fisubrl
push
insl
rcll
stos
push
push
mov
mov
divl
bound
push
shrl
jnp
sbb
mov
jo
into
lods
xor
dec
dec
addl
pop
mov
int3
pusha
and
pop
testb
push
loope
and
movsl
icebp
mov
roll
mov
jmp
enter
pop
mov
push
loope
xchg
lea
repz
or
push
pop
pop
andl
mov
cmp
xor
les
mov
mov
or
enter
loope
sub
fcomip
popf
and
addr16
jae
fsub
fimull
aad
pop
adc
dec
enter
ss
mov
add
mov
mov
mul
out
aas
jl
sub
and
loop
pop
leave
or
int
out
sbb
mov
lea
cmp
bound
lds
lret
bound
sbb
cli
sahf
sti
dec
sti
sbb
cs
add
jge
dec
jo
and
jp
xor
push
cmpsb
dec
dec
xchg
std
movsb
negb
adc
pop
je
jg
shrb
dec
or
cwtl
les
icebp
xor
add
add
inc
adc
arpl
adcb
push
loope
xchg
je
xor
xchg
adc
dec
cmpsl
mov
dec
addb
sub
rorl
int3
add
cmpsb
cwtl
xchg
mov
cmp
pop
xlat
push
push
arpl
sub
and
push
dec
sub
jle
and
es
mov
adc
mov
jns
fwait
dec
out
or
jae
je
mov
xchg
jl
ficoms
fdivr
add
test
loope
push
or
inc
pop
pop
jmp
cmp
cmp
fnstsw
sbb
push
cmp
and
stc
dec
out
ficomps
mov
lahf
dec
dec
out
iret
sub
mov
test
lret
cmpsl
pushw
xor
mov
mov
push
ret
sub
push
ja
je
jnp
xor
dec
shl
es
jl
cli
leave
flds
lods
xchg
mov
outsl
lds
stos
sbb
dec
inc
dec
adc
mov
jl
inc
cli
cmp
xorl
test
mov
sub
movsb
and
std
cmp
sbb
int3
ja
push
imul
cltd
xor
xchg
int
mov
movsl
cltd
lods
mov
xchg
xor
ret
adc
pop
sub
xchg
pusha
pop
add
popf
xchg
popf
mov
xlat
sbb
cmpsb
cli
add
mov
je
out
lods
lods
shll
add
in
adc
add
sti
sbb
inc
inc
ss
mov
mov
les
fwait
cltd
repz
iret
sbb
mov
mov
dec
enter
divl
or
divl
or
out
inc
in
mov
mov
cmp
cltd
imul
and
push
pop
add
jns
jae
lret
pop
test
insl
mov
insl
sarb
xchg
lret
mov
adc
in
addr16
mov
and
test
insb
popf
and
filds
test
push
dec
mov
aaa
push
clc
push
cmp
popf
pop
mov
lahf
test
loopne
dec
test
fwait
sub
clc
aad
pop
enter
enter
or
int3
repnz
faddp
filds
ss
mov
pusha
popa
mov
scas
lods
dec
lcall
mov
pushf
imul
xchg
ret
fldenv
sub
add
scas
nop
fs
jo
or
sub
and
ljmp
cmpsl
das
std
rolb
call
aam
push
cmpl
hlt
js
xchg
cmp
dec
mov
inc
daa
pop
out
jle
outsb
cmp
aad
xchg
out
clc
mov
xchg
ljmp
xor
in
addr16
pop
mov
rcrb
sub
jecxz
adc
adc
sbb
rorl
push
movsb
mov
jnp
in
ss
sub
inc
mov
cltd
imul
xchg
cld
sub
stos
ljmp
repnz
dec
loopne
or
jmp
jp
mov
in
and
aaa
hlt
push
and
fwait
adc
pop
stos
arpl
mov
adc
push
jge
jg
sub
jns
fcmovbe
cltd
scas
mov
inc
mul
mov
jb
mov
arpl
arpl
mov
sub
jmp
fimuls
push
scas
cmpsb
jp
cmp
cmp
or
mov
mov
aad
dec
adc
fcompl
les
js
adc
call
sub
xor
fsubs
test
ss
loop
jl
sub
int3
iret
xchg
iret
icebp
aaa
lods
in
mov
mov
xchg
hlt
cli
jns
jge
ljmp
inc
lock
and
out
sub
inc
mov
stos
shlb
or
push
xor
xlat
mov
and
sarb
pusha
add
mov
mov
rorb
inc
cmp
and
xchg
aas
jg
loope
xchg
push
stos
bound
test
dec
daa
and
lcall
cli
out
pop
clc
push
movl
ds
xor
sbb
lret
jae
loopne
sub
jmp
push
fisttps
sbb
pop
dec
add
dec
out
movsb
push
pop
fisttps
andb
jmp
pop
jecxz
int
push
and
add
xchg
ss
sub
scas
xor
or
push
jo
in
sub
stos
adc
cmp
push
jae
xchg
dec
rclb
dec
pop
sub
fcomi
adc
repz
mov
mov
xlat
jge
mov
mov
sarl
in
push
movsl
xchg
leave
jb
lret
mov
mov
mov
adc
xor
sub
and
xchg
ret
jno
cmc
push
and
aaa
add
int
adc
mov
sbb
setne
pop
mov
xor
shl
adc
sar
xchg
insl
xor
in
mov
movsb
add
add
jns
addb
push
xchg
lods
in
mov
std
and
push
pop
lds
xchg
xchg
push
pop
add
fdivrs
and
clc
mov
mov
cmp
sub
ljmp
inc
aad
add
xchg
push
push
sbb
xchg
lcall
repz
gs
fwait
mov
adc
xchg
mov
and
xchg
or
xor
stos
jbe
mov
addl
clc
outsb
out
add
sbbb
inc
add
enter
cld
adc
lods
sbb
dec
in
cmp
inc
adc
pusha
adc
test
mov
xchg
sti
cli
adc
fisttpll
mov
push
xchg
push
adc
pop
jg
push
loopne
jp
sbb
jnp
loope
xchg
js
xor
pushf
mov
mov
int
cld
popf
or
pop
sub
xchg
jae
cli
xlat
xlat
adc
out
or
or
test
mov
inc
mov
mov
push
add
or
rol
jbe
loop
mov
ffree
fsub
jno
ljmp
push
pop
js
cmp
fwait
dec
sbb
inc
dec
repnz
cli
jecxz
stos
dec
fldenv
cli
ds
fmuls
adc
lret
mov
in
adcb
outsl
scas
outsb
xor
add
leave
pop
popl
and
je
fstps
xor
fcoms
inc
mov
std
imul
stos
and
imul
and
push
or
out
push
push
mov
arpl
xchg
sub
xor
imul
cwtl
mov
stc
and
lret
jae
movsb
cltd
xchg
adc
lea
std
inc
cmp
arpl
jmp
xchg
adc
rcr
mov
jge
aaa
sub
jge
iret
sahf
sbb
or
movsl
mov
mov
push
iret
test
iret
inc
and
cltd
out
or
pop
popf
mov
sub
dec
and
out
adc
aam
inc
cmp
fiaddl
push
sbb
lgs
fs
pop
clc
mov
hlt
repnz
mov
pop
aaa
push
ja
or
adc
cmp
xchg
dec
fcmovb
lock
jecxz
gs
or
pop
pop
test
push
shrb
xchg
inc
cmp
xor
xor
das
scas
stc
mov
ds
ret
je
jnp
sbb
pop
mov
ret
out
push
mov
lods
nop
nop
stos
mov
jmp
test
imul
pop
testb
scas
xorl
mov
jns
aaa
fnstcw
mov
adc
push
out
adc
sub
pushf
inc
mov
into
sub
or
fsub
sbb
jnp
fwait
lds
adc
dec
dec
mov
popf
mov
mov
mov
and
sbb
mov
or
pop
xor
cmpsb
ficomps
cmc
mov
je
mov
imul
dec
xlat
push
out
xchg
lods
orl
xor
pop
int
fildll
push
out
mov
lods
mov
cltd
outsl
imul
imul
dec
aas
repz
call
daa
push
ret
add
scas
mov
daa
jle
jne
aaa
insl
jbe
call
loope
das
sbb
sub
lock
lret
xor
jl
or
dec
ds
gs
out
cmovle
dec
inc
push
lret
push
aad
sarb
mov
shrl
mov
hlt
leave
sbb
pop
ss
mov
clc
sahf
adc
add
mov
mov
push
out
movsb
ljmp
sti
test
mov
inc
dec
ds
cs
lret
movsl
cs
jo
ss
jecxz
push
in
out
enter
jp
xor
jo
aas
jns
cmp
add
sti
mul
shl
sub
sbb
scas
push
scas
cld
fldcw
sub
pop
lcall
ja
inc
sahf
xchg
ja
mov
sub
xor
mov
popf
inc
mov
cmpsl
imul
js
mov
das
push
cmp
shrb
jns
mov
repnz
dec
add
cmp
cli
repnz
adc
aam
cmc
mov
pop
repnz
xchg
sbb
mov
pop
stos
mov
rclb
js
mov
inc
repnz
lret
jge
pop
xorl
ds
pusha
mov
jecxz
mov
dec
cld
jge
mov
push
and
jecxz
or
dec
das
sub
rorb
in
hlt
nop
ja
in
sbb
mov
aad
mov
stc
mov
push
xor
stos
cmp
aad
and
mov
lods
mov
push
andl
or
arpl
imul
imul
aam
pop
test
pop
shrl
sbb
lods
ror
pop
xchg
div
aas
test
xlat
test
fcoml
mov
push
ss
inc
mov
pop
iret
jle
popf
pop
outsb
inc
mov
stos
inc
ffreep
xchg
pushf
mov
pop
and
jle
popl
lock
cmc
cmp
bound
mov
add
pop
dec
cmpsb
mov
outsb
or
xor
and
xchg
pop
cmc
pop
push
into
add
add
test
push
push
mov
mov
testl
lahf
jle
scas
enter
fwait
mov
jmp
lret
add
cmp
inc
jp
iret
or
mov
xchg
push
add
mov
adc
aaa
sub
cmpsl
sub
fiaddl
int
cmc
int
sbb
stc
push
fwait
mov
lret
faddl
lahf
sti
push
jb
mov
mov
fcompl
std
fstps
roll
notb
pop
nop
cmp
sahf
cltd
test
mov
cmp
mov
sarl
ret
insb
pusha
hlt
in
adc
push
inc
cld
sub
push
rcrl
xor
mov
les
xor
pop
and
mov
rcll
lock
test
aas
push
mov
cld
cli
fsub
js
test
mov
pusha
pop
dec
mov
ss
in
enter
xor
sbb
imul
outsb
rcll
shrl
dec
lahf
mov
inc
push
mov
enter
xchg
ret
ljmp
pop
pop
jmp
pop
add
shll
repz
sub
add
push
dec
mov
jne
inc
adc
cld
adc
cmp
jmp
lcall
dec
cmpsl
mov
mov
cs
mov
pop
loop
ret
dec
push
cmpsl
icebp
jecxz
mov
add
xor
in
lahf
pop
cs
pop
cmp
in
sub
mov
cmpsb
push
and
inc
cmp
add
mov
add
xor
fstl
lahf
mov
xchg
push
push
daa
pop
jno
push
test
sub
lcall
push
rolb
call
mov
lods
scas
scas
bound
mov
push
inc
inc
mov
jne
sub
xchg
pop
rorl
frstpm(287
lret
stc
lds
in
arpl
out
jl
mov
mov
stos
movsb
pushf
movsl
cmp
out
js
dec
xchg
das
loopnew
jg
inc
adc
xchg
push
int3
movsb
mov
clc
jbe
pop
adc
imul
stos
xor
inc
test
movsl
or
add
dec
jl
test
arpl
hlt
std
adc
fildll
pop
ret
sarl
iret
lds
outsb
hlt
pop
ja
sbb
push
sub
test
xorl
cmp
push
mov
into
into
in
jg
sub
pop
ds
add
popa
mov
xor
mull
jbe
cltd
pusha
push
shlb
cmp
ret
mov
aam
and
adc
arpl
mov
and
lret
mov
jnp
loop
testl
aas
cmp
movsb
gs
shll
dec
adc
dec
ljmp
subl
das
cmc
push
cmp
jno
nop
popa
push
stos
jge
leave
push
cld
inc
fiaddl
es
mov
gs
inc
or
cmpsl
mov
nop
mov
sbb
incb
inc
subb
jge
aas
mov
mov
jae
shl
inc
jl
xchg
rclb
aaa
push
xorb
jg
mov
dec
out
out
lea
cmc
pop
testb
adcb
pop
dec
rcll
in
inc
pop
pop
test
paddb
dec
push
adc
jg
sahf
inc
shlb
jecxz
mov
out
xchg
int
xor
pop
cmp
dec
mov
mov
pop
stc
lret
leave
push
mov
xchg
sbb
repz
xor
mov
sub
fwait
out
ss
scas
leave
or
pusha
fs
xchg
ret
pop
xor
add
sbb
movaps
xchg
sbb
aad
in
daa
fadd
test
clc
sbb
hlt
xor
xor
push
pop
mov
jecxz
fisttps
cwtl
mov
in
dec
sbb
sbb
mov
nop
leave
iret
sbb
arpl
popa
push
scas
jae
xchg
ss
shrl
pop
push
xchg
cmc
push
jp
mov
xchg
inc
movsb
in
dec
and
xor
xchg
dec
sbb
ja
test
xchg
fsubs
mov
sbb
daa
add
inc
sub
dec
add
pop
fnstcw
outsb
mov
cmc
dec
shl
mov
fildl
pop
sahf
shll
inc
dec
outsl
jne
out
hlt
push
add
push
dec
cmpsl
sub
das
lret
in
stos
push
fdivl
adc
adc
and
jge
jg
jmp
pop
hlt
out
cmc
fsubl
fmuls
movsb
jmp
lods
adc
ja
stos
clc
mov
cmc
adc
xor
sub
inc
daa
push
subl
call
test
ficompl
imull
outsb
ss
jp
into
jno
mov
fwait
cmpsb
movsb
xor
mov
pause
fmuls
dec
or
popa
mov
jae
idivl
out
icebp
aaa
push
aam
mov
push
in
gs
outsb
xchg
adc
inc
shrb
add
insb
cmc
cltd
mov
call
cmp
mov
les
mov
lahf
jmp
fdivs
cmp
mov
add
sbb
dec
xchg
mov
scas
fisubs
mov
push
jmp
loop
shlb
add
sbbl
aam
cmp
mov
add
and
lods
mov
sub
adc
sub
add
xor
push
lcall
jae
lods
mov
mov
sbb
or
lret
outsb
sub
lds
lods
mov
insb
pop
cmpsb
fwait
sub
cwtl
mov
sahf
lcall
fimuls
andb
adc
cmp
popa
movsb
popf
mov
cmc
outsl
lret
cmp
mov
dec
out
lds
xchg
xlat
in
or
add
faddl
fdivrl
cmpsb
xor
xlat
push
jae
int
sarl
cmpsl
daa
xchg
subl
inc
add
push
mov
push
lock
xchg
xchg
cmp
inc
xor
add
cmp
popf
pop
add
cwtl
mov
cmp
mov
add
mov
sbb
cwtl
mov
ror
pop
inc
rcll
es
push
sub
push
rol
push
mov
dec
jno
sbb
repnz
cmp
sbb
int3
sbb
mov
aam
xor
jne
push
repnz
outsb
das
into
and
mov
mov
fsubrs
stos
hlt
xor
nop
jns
in
push
cld
mov
outsb
in
pop
jae
adc
pop
nop
jne
mov
icebp
jl
cmpsb
mov
jnp
ret
fcoml
or
jne
sub
popa
dec
into
pop
fisttps
pop
or
push
push
dec
jbe
push
sbb
inc
scas
aad
ficomps
add
nop
sbbl
mov
jmp
mov
mov
and
das
ret
popa
aam
inc
rcll
sbb
iret
fldenv
test
insb
inc
imul
outsl
jns
data16
mov
jg
inc
sbb
in
fwait
adc
jmp
cs
arpl
shrl
testb
data16
inc
scas
mov
mov
rolb
lret
or
fwait
daa
in
dec
inc
negb
mov
jbe
imul
and
out
loop
mov
push
inc
dec
sbbl
mov
fbstp
int3
clc
cli
and
sbb
push
or
dec
jmp
and
mov
pop
mov
es
mov
outsb
imul
pop
pop
shll
push
adc
jnp
fimuls
pop
std
mov
inc
mov
inc
imul
mov
and
fldt
fimuls
xchg
jne
nop
incl
or
dec
add
addr16
out
std
mov
push
bound
insb
sbb
sub
sub
das
dec
sbb
negb
pop
xor
sub
mov
scas
in
sbb
jb
stc
ja
les
pop
sbb
mov
lods
sbb
sub
xchg
sbb
out
cltd
adc
cli
cmp
mov
rcrl
mov
adc
adc
jo
or
lds
sub
sbb
cltd
lods
cwtl
pop
mov
movsb
xor
push
shlw
fst
sub
mov
test
fdivrs
insb
pop
adc
pop
push
cmp
repz
dec
lcall
daa
mov
lret
dec
pop
add
pop
mov
pop
adc
data16
addl
cs
jb
imul
mov
pushf
cmp
call
xchg
test
shrb
sbb
aam
call
cmp
mov
add
call
mov
sub
push
mov
std
mov
shld
hlt
orl
fdivl
pop
call
sub
push
js
hlt
xchg
push
into
in
cmpsl
in
lea
imul
lock
adc
orl
lea
inc
rorl
out
adc
mov
test
and
sub
sub
jnp
inc
mov
jnp
test
jbe
data16
mov
add
sub
js
cmp
sbb
mov
jmp
xor
pop
pop
fidivrl
js
mov
add
imul
xchg
aaa
sbb
pop
sbb
push
mov
fstp
xchg
adc
lods
xchg
addb
mov
cmpsl
fidivrl
les
pop
icebp
lea
lret
sbb
add
daa
or
popf
inc
rcrl
sub
inc
mov
cmp
push
sarl
imul
in
mov
in
cltd
pop
mov
in
cmpsb
sub
push
cmp
fdiv
cmpsl
cmp
xchg
outsl
sbb
mov
in
popf
pop
test
pop
cmp
orb
push
xor
cmp
movsb
pop
push
jp
jge
mov
shlb
adc
ret
mov
inc
or
mov
cmpsl
bound
push
rorb
scas
xchg
fdivs
mov
pop
mov
dec
pop
push
adc
lret
cmp
aam
fbld
jne
push
call
xor
inc
and
frstor
pop
pop
enter
int
scas
loopne
sbb
out
test
test
sbb
movsb
notl
fistpl
in
jg
push
push
stos
inc
cltd
arpl
mov
cmpsb
mov
repnz
pop
fisubl
push
outsb
push
and
mov
adcl
aad
mov
mov
dec
push
jle
and
xor
fsub
scas
enter
outsl
jae
arpl
cs
stos
inc
jne
xchg
jmp
xor
cmp
pop
pop
jno
repnz
sbb
lods
stos
cwtl
js
mov
rcll
dec
cltd
mov
cli
sbb
mov
loopne
scas
mov
in
hlt
cmp
jbe
mov
adc
xchg
push
lock
inc
cs
and
xor
or
loop
in
and
pop
sti
sbb
jo
fwait
in
lcall
sub
es
testb
cs
aas
xor
pop
adc
adc
cmp
pop
xor
and
mov
push
adc
or
or
adc
cmpsl
test
pop
rclb
flds
sbb
sub
dec
adc
arpl
daa
jo
in
aad
js
jecxz
sti
xor
or
data16
decb
mov
shrl
sbb
out
rorb
ficoml
add
sti
mov
inc
test
loopne
adc
pop
addr16
out
int3
aam
insb
cmpsl
push
outsl
dec
mov
mov
mov
xor
stos
mov
lret
pop
adc
add
lds
push
repnz
xchg
push
adc
xchg
fldenv
rorl
dec
ret
bound
xchg
es
push
lea
xchg
adc
cmp
lret
inc
lods
inc
cmp
inc
adc
dec
mov
adc
nop
lcall
pop
fwait
cs
ret
pop
sub
sarb
mov
sbb
bound
xchg
inc
test
lods
sbb
rol
lea
mov
inc
lahf
ret
pop
psubsb
imul
sahf
mov
cmpsb
cmp
in
lods
push
aad
test
dec
loope
popa
dec
inc
jnp
dec
push
out
jle
je
xchg
sub
fwait
pop
mov
lea
idivl
imul
pop
fcmove
popf
lods
roll
mov
or
push
adc
and
cmp
jae
mov
xor
sarl
inc
xchg
xchg
call
rclb
hlt
and
cld
add
movsb
mov
mov
cmp
pop
cwtl
and
jbe
mov
scas
aaa
inc
repz
lcall
fists
adc
cmc
pop
shrl
inc
inc
mov
sbb
cwtl
push
imul
mov
adc
bound
sub
push
fucomip
push
push
mov
dec
iret
notb
sub
xchg
xor
add
pop
out
ret
imul
je
out
dec
xchg
cmpsb
jno
xor
leave
sti
xchg
imul
inc
in
out
ret
inc
stc
js
dec
xor
scas
adc
pop
or
push
popa
mov
pop
testl
icebp
imul
movsl
dec
mov
stos
mov
pushf
adc
jg
xchg
test
push
mov
inc
int3
xchg
mov
lods
dec
enter
lea
push
imul
xchg
sub
or
jle
sub
jo
insl
std
repnz
or
pop
xchg
fists
push
pusha
lcall
ljmp
xor
shrb
daa
mov
lock
and
mov
ljmp
test
cmp
sti
in
xchg
xor
fisttpll
int
insb
push
push
hlt
int
or
jg
xor
std
clc
aam
cltd
repnz
push
mov
repz
push
push
sahf
repnz
mov
push
mov
adc
xchg
mov
out
xor
and
roll
sbb
sub
pop
shlb
ret
test
enter
mov
adc
data16
mov
pop
jp
mov
fsts
test
xor
inc
imul
inc
daa
lea
decb
mov
js
sbb
adc
and
andb
lock
sahf
add
add
mov
pop
cmp
pop
lea
outsl
and
cld
xlat
lods
dec
sub
insl
ljmp
sub
mov
cmp
test
out
fdivrp
lock
mov
push
add
jle
push
and
mov
nop
rcrl
xorl
xlat
nopl
insl
repnz
push
fldt
lods
pop
jecxz
in
sbb
adc
xchg
mov
out
xchg
sbb
xor
clc
loop
adc
or
dec
jmp
mov
xchg
adc
xchg
ss
fnstcw
sbb
sub
or
sar
push
ds
pop
repnz
cmpsl
jecxz
inc
mov
icebp
and
sbb
or
and
pop
pop
fcompl
xchg
ss
fstps
int3
pop
mov
dec
leave
mov
xchg
std
jns
push
dec
inc
arpl
inc
ds
xor
xorb
dec
inc
mov
out
xor
fistpl
cld
sub
in
cmp
jns
popf
ficomps
jmp
aas
dec
xor
fdivr
div
js
ficoms
cmc
je
push
leave
jmp
mov
adc
ret
in
mov
int
push
notb
jns
mov
jg
mov
lods
push
inc
in
popf
jne
icebp
arpl
and
jb
into
leave
adc
fs
inc
jle
jno
sub
push
out
andb
jne
or
dec
sub
stos
and
scas
test
imul
dec
inc
pop
push
xor
xor
enter
lcall
add
leave
pop
jo
mov
jnp
ret
ja
into
xchg
jae
inc
xchg
ret
cmpsb
mov
mov
scas
or
sbb
jnp
imul
push
test
jecxz
adc
cmpsl
cwtl
out
ja
ja
clc
or
ds
flds
enter
add
das
lea
push
cmp
cmp
fadds
inc
movsl
mov
dec
pop
movsb
test
loope
insl
test
sbb
std
or
dec
cmp
jmp
int3
sub
in
xchg
daa
in
add
dec
sar
xlat
pop
lods
push
movsl
dec
pop
in
bound
add
jle
in
lret
hlt
mov
les
fcmovnbe
push
cltd
cmp
or
push
push
and
imul
xchg
iret
jns
xchg
push
lods
and
decl
mov
mov
jmp
ficompl
push
loopne
pop
ret
adc
call
popf
xchg
lret
pop
out
lret
repz
jb
inc
jecxz
cmp
jge
dec
pusha
dec
hlt
lahf
push
cmp
xor
or
movsl
jge
jle
repnz
sbb
fsubl
dec
data16
aas
test
pop
sub
jg
push
clc
jnp
fsubl
inc
sbb
mov
mov
clc
xor
push
cs
push
jle
mov
jno
jbe
mov
fdecstp
rorl
pop
clc
out
les
cmp
pop
push
adc
call
movsb
loopne
mov
sub
and
and
sub
daa
sbb
ficomps
mov
enter
bnd
mov
test
sub
mov
xor
aam
and
cmpsl
add
jp
xor
xor
imul
in
test
push
int3
pop
sub
fidivl
pshufw
mov
push
inc
imul
sbb
shrw
xchg
jp
roll
cmp
push
ds
add
out
data16
mov
and
xor
fidivrl
xor
fidivl
inc
icebp
fisttpll
in
test
pop
shr
stc
clc
jg
sbb
adc
imul
xlat
lret
shll
cli
inc
in
lds
dec
cmpsb
cld
inc
in
jns
pop
hlt
mull
jb
imul
stc
scas
jb
add
cmpsl
cmc
cld
dec
pop
lds
inc
ljmp
sbb
call
push
pop
cs
or
fistl
inc
mov
add
jge
mov
stc
leave
push
or
in
into
out
xchg
jb
pop
xor
mov
insl
adc
lds
scas
xchg
sub
sbb
das
arpl
loop
cmp
cmp
sbb
movsb
jp
pop
xor
out
jae
out
fisttpl
sti
aaa
movsl
rcll
iret
xor
fstp
and
mov
adcl
and
nop
adc
sahf
sbb
mov
or
xchg
cmp
push
xchg
mov
mov
add
lds
ret
cmp
xchg
cmp
in
js
cmp
aad
add
push
pop
test
push
dec
push
lods
ljmp
inc
enter
out
push
add
leave
or
push
add
fcomip
push
scas
jnp
enter
lock
ljmp
and
mov
movsl
fstpt
cmp
push
add
rol
inc
xor
push
dec
xchg
mov
push
jne
pusha
mov
pop
jnp
and
aam
fimuls
gs
and
add
adc
lods
call
or
insl
adc
dec
out
pop
ljmp
mov
std
mov
cmpsl
pusha
sahf
ret
xchg
push
jno
pop
xchg
mov
xchg
gs
test
sbb
jno
push
fists
in
mov
add
into
sti
daa
adc
push
pop
cwtl
push
adc
cmp
repz
xchg
and
sbb
iret
lods
inc
lods
ds
push
and
test
dec
ficomps
mov
dec
std
cs
in
daa
sahf
mov
cld
sub
push
stc
and
ss
xchg
aad
mov
jmp
outsb
jno
mov
jmp
test
movsb
iret
lods
cwtl
stos
lods
fldcw
lods
mov
int
jnp
jno
adc
or
jno,pt
sub
pushf
jb
mov
and
jg
sbb
pop
es
out
fninit
mov
hlt
cmpsb
loope
pop
gs
enter
fidivl
sub
fcmovnb
push
xchg
sub
aaa
xchg
pusha
mov
aas
outsl
inc
imul
test
fisubrs
orb
jecxz
out
sub
lods
dec
dec
xchg
jnp
push
mov
dec
inc
mov
push
cmp
add
ret
cmp
xchg
clc
pop
popa
jl
push
mov
mov
pop
pop
loop
push
push
fisubs
jge
es
xchg
dec
imul
inc
movsl
xchg
xchg
inc
xor
testl
jno
xor
mov
out
fwait
jae
shl
loopne
mov
shlb
in
cld
rcll
mov
mov
sbb
movsb
ret
call
scas
jne
jle
mov
jge
sbb
int
mov
mov
adc
scas
cld
sub
sbb
xchg
mov
test
mov
pop
and
pop
or
in
aam
pop
push
and
lea
xor
shlb
or
pop
mov
mov
sarb
xor
ds
mov
rorb
cmp
pop
decb
cs
cltd
pop
out
xor
inc
mull
outsl
xor
fwait
test
dec
dec
push
add
sub
or
jne
lods
pop
jmp
pop
dec
adc
and
popf
mov
lcall
mov
or
pop
pusha
jl
jle
imul
test
cmp
gs
fnstcw
adc
in
fstp
push
mov
fxtract
enter
sti
xchg
xchg
mov
mov
jae
push
push
aad
mov
jnp
push
cltd
dec
inc
loope
or
test
pop
add
xchg
iret
andb
test
rcrb
scas
adc
aam
push
and
scas
xchg
pushf
ret
xchg
lret
xor
cwtl
add
adc
mov
sbb
add
and
fs
cmpsl
gs
ja
lret
cmp
clc
sub
xor
inc
xchg
inc
lock
pop
outsb
and
xor
adc
xchg
dec
jp
add
inc
outsb
or
or
adc
les
ds
sub
xor
int
xchg
sub
jl
or
push
inc
pop
mov
pop
pushl
cmc
lock
sbbl
pop
inc
mov
mov
lahf
push
out
ret
jae
lods
fidivs
cli
and
xchg
out
sub
testl
sahf
push
xor
leave
mov
outsl
pushf
ret
pop
mov
inc
mov
jno
sbb
jg
outsb
imul
ret
in
cld
addb
sub
jo
icebp
scas
cltd
ss
das
push
dec
jmp
xchg
dec
les
in
mov
fstpl
mov
pop
stos
aam
movsl
and
sbb
mov
push
je
pusha
fisttpl
out
lcall
mov
mov
jns
sti
gs
fwait
fs
clc
iret
cmp
push
pushf
xor
out
push
scas
jno
mov
cmpl
aas
sub
sti
aas
lods
stos
test
push
cmp
leave
lcall
pop
pop
dec
aaa
in
mov
stc
sbb
pop
lods
cmc
jle
push
or
outsb
ficoml
icebp
stc
and
loop
push
mov
test
int
or
mov
push
je
lcall
jecxz
add
xchg
sbb
or
insb
leave
cmp
lret
in
push
sub
pop
rorl
bound
lods
test
les
inc
inc
shll
cmp
dec
or
cmp
adc
mov
mov
pop
or
sti
sbb
je
lahf
mov
sub
imul
mov
add
mov
pop
mov
xchg
lods
lret
xorb
mov
das
or
mov
sub
fildll
push
mov
pop
outsb
push
cmp
pop
shll
testl
cs
je
int
ret
loopne
sub
mov
fidivl
fwait
gs
call
sbb
push
sbb
rol
jnp
int
int
mov
jge
repz
frstor
stc
and
jne
mov
adc
jns
test
pop
pop
fstps
xor
in
add
pop
aaa
mov
ret
enter
mov
aas
xchg
bound
cld
aad
ja
imul
hlt
push
negb
stc
stos
cmp
int
bound
out
out
xchg
cwtl
lcall
inc
cmp
dec
add
in
shlb
in
jecxz
jg
loopne
clc
inc
pop
xchg
xlat
mov
shlb
lret
out
pop
push
pop
sbb
mov
pop
pop
js
push
popf
das
cmp
jb
call
int
shrb
stos
shll
fdivr
popa
xor
add
out
dec
xor
xchg
xchg
aam
shll
rcr
test
dec
jbe
das
jo
cmp
xor
xor
cwtl
cli
and
mov
outsb
nop
xor
test
mov
sbb
test
adc
pushf
or
mov
test
sub
xchg
inc
jl
divb
cmc
pop
pushf
lds
test
mov
or
addr16
mov
jae
jg
jno
inc
sar
outsl
inc
dec
into
in
xor
sarl
xchg
pop
pop
xor
push
mov
popf
jns
movsb
pop
and
xchg
lock
jns
popa
out
icebp
inc
jge
cmp
push
dec
lods
adc
js
sub
cmp
mov
shr
pushf
mov
mov
push
push
into
testb
lock
das
push
in
push
xor
pop
repnz
cwtl
into
sub
clc
stos
bound
pop
mov
sbb
mov
fsub
cld
aaa
inc
stos
ret
jg
cmpb
add
push
cltd
stos
push
xor
aas
clc
jns
pusha
out
push
sub
xor
test
lret
inc
mov
mov
in
sbb
sub
movsb
ds
mov
cltd
push
sbb
rcrb
add
pmaddwd
popf
xchg
es
pop
jg
push
es
cld
mov
fstl
stos
ja
push
push
mov
mov
repz
mov
mov
push
int
adc
jle
pop
in
ljmp
fidivrl
cs
popf
fs
std
out
jns
dec
fstpl
popf
dec
fs
push
bound
push
xchg
shlb
sti
xchg
arpl
inc
insl
in
out
and
or
repz
mov
mov
xor
xchg
pop
mov
cmpsl
mov
loope
into
aas
adc
icebp
mov
pop
mov
sahf
out
push
aad
ret
cwtl
jecxz
addr16
sub
push
xor
xchg
or
outsb
or
inc
xchg
repnz
repz
dec
cmp
fistps
mov
loope
out
push
push
dec
pop
push
jmp
cmp
and
lods
push
jo
pop
jecxz
in
sub
aam
andl
inc
and
mov
lcall
jns
cwtl
cmpsl
sub
shrl
inc
int
loope
outsb
test
push
insb
mov
push
sbb
jmp
dec
fidivs
fs
sahf
iret
lahf
loop
sbb
add
ret
pop
adc
dec
mov
sti
outsl
and
jg
nop
movsb
pop
mov
ss
adcl
mov
cmc
pop
aad
and
xor
and
mov
push
enter
pop
pushf
pusha
cmc
outsb
aam
mov
mov
lret
rcrl
jbe
in
pop
and
mov
test
ljmp
cs
pop
push
rcrb
and
xor
jns
repz
aaa
in
mov
mov
xchg
push
mov
sub
outsb
jae
cmp
cmpsb
stos
iret
xchg
jmp
mov
int
negl
repnz
mov
loopne
jbe
xchg
mov
and
ja
or
xchg
cmpsl
aad
lcall
dec
test
js
mov
inc
fcomip
decl
fsts
mov
loop
in
jne
shr
pop
xor
cs
mov
leave
rcr
add
dec
or
ljmp
or
sbb
add
pop
push
push
jb
ljmp
fbld
sub
push
fiadds
lods
jno
push
scas
xchg
bound
inc
xchg
jmp
jns
push
mov
mov
enter
push
fsubr
call
inc
lret
pop
cmp
inc
or
aad
sbb
mov
mov
xor
and
insl
fnstcw
jnp
dec
addb
push
hlt
cmp
jg
dec
mulb
inc
xor
ja
shlb
mov
push
adc
addr16
aad
and
loop
fidivrl
movsb
jl
push
testb
ffree
or
jl
addr16
arpl
jns
cmp
cltd
loopne
jbe
inc
icebp
mov
jmp
mov
fcomps
rcl
aad
sbb
mov
repnz
fistl
push
jle
mov
inc
lahf
call
jp
sbb
inc
cmpsl
cmp
daa
je
or
sub
fst
dec
sbb
iret
inc
xchg
ja
dec
cmp
int3
push
shll
rcrb
push
jns
adc
mov
jecxz
mov
push
push
in
jbe
or
jmp
cmpb
shrl
xchg
fbstp
es
mov
cs
mov
daa
mov
inc
filds
dec
adc
pop
lods
das
xor
mov
pop
mov
loope
nop
test
sbb
xchg
xchg
cmpsb
pop
adc
xor
jg
mov
push
stos
mov
movsl
sbb
xchg
cmpsl
add
xchg
add
mov
pop
sub
add
cmpsl
push
xorb
sbb
out
pop
ja
js
int3
clc
xlat
loope
mov
xchg
cwtl
push
aaa
repnz
aas
pushf
out
sub
dec
adc
push
test
add
mov
add
mov
sub
push
or
mov
cli
int3
dec
adc
mov
or
js
pushf
popa
add
imul
pop
shr
into
fildl
scas
dec
int3
sahf
xchg
loop
cs
mov
lcall
or
xchg
in
jecxz
push
xor
cmp
stc
loop
ljmp
adcl
iret
or
pushf
mov
pop
xlat
sbb
cmpsb
inc
mov
cwtl
rcrl
fs
fsubp
adc
xchg
sarb
push
add
and
jbe
dec
mov
push
loop
test
jge
mov
mov
int
shlb
or
mov
jbe
fildll
outsb
pusha
ret
xor
iret
pop
out
sbb
push
pop
mov
addr16
dec
pop
adc
xchg
cmpl
add
inc
addb
push
adc
sbb
mul
jnp
xorb
scas
push
mov
lcall
pop
dec
lock
xchg
aaa
sbb
mov
insl
xchg
adc
adc
cmp
add
dec
popa
inc
test
jmp
pop
aam
addr16
cmp
sub
pop
inc
jg
xchg
movsb
lret
dec
pop
adc
rcrb
sbb
fs
mov
movsl
and
mov
rolb
loop
rorl
push
adc
lret
aaa
fwait
mov
push
fs
pop
lock
outsb
ret
push
sti
lahf
aaa
pop
cmp
sti
jae
aas
sbb
push
jp
xorl
insb
sub
cs
jns,pn
cmp
cmc
cmp
std
clc
movsb
cwtl
iret
scas
inc
cmc
pop
or
cmc
pusha
dec
mov
sti
pop
push
lds
sub
leave
dec
push
xchg
sub
mov
sbb
sbb
gs
push
push
cmpsb
add
mov
in
in
cmp
dec
les
mov
mov
aas
ret
push
add
mov
repz
mov
push
push
sub
add
push
stos
leave
imul
rorl
lahf
jmp
pop
popf
mov
or
mov
mov
pop
add
adc
xchg
jge
lea
ljmp
or
popf
xchg
mov
test
xor
mov
fwait
push
and
jge
sub
dec
xchg
jo
stos
leave
adc
or
repnz
mov
mov
lcall
jge
cmp
adc
fidivs
loopne
stos
fistps
push
and
or
cwtl
out
clc
hlt
xor
push
aaa
jb
pop
je
inc
cmp
xchg
cltd
imul
popa
ja
mov
xchg
and
pop
rorb
or
xchg
ja
mov
in
mov
pop
pop
mov
cmpsl
into
test
jecxz
aad
dec
jecxz
lahf
insl
imul
xchg
mov
mov
xor
xchg
pusha
std
add
and
inc
dec
adc
mov
push
xor
sbb
mov
xor
add
fdivl
push
xchg
and
leave
cmp
insb
iret
in
jle
xor
test
adc
sahf
pop
jb
jl
push
enter
xchg
mov
xchg
mov
mov
add
fistps
jae
or
xor
and
and
adc
inc
repnz
sub
sahf
or
cmc
sub
fldenv
jecxz
cld
add
dec
repnz
std
xchg
push
sbb
mov
loope
cmovl
jle
dec
adc
mov
and
call
add
daa
div
mov
and
dec
mov
shl
push
cwtl
lea
sbb
stos
enter
add
imul
mov
ja
sbb
out
and
xchg
popf
dec
lods
sub
mov
pop
nop
outsb
shll
sarl
fs
jle
aaa
dec
jl
aas
pop
lods
jbe
push
inc
pop
popa
aas
outsb
pop
insl
cmp
lods
addl
jmp
lods
andl
ret
sbb
call
popa
aam
stos
jb
in
idiv
enter
add
das
mov
xchg
lahf
dec
push
int
pop
mov
xchg
and
call
les
leave
mov
mov
mov
jns
xchg
rorb
pop
sbbl
test
in
ljmp
jne
push
in
outsl
pop
mov
adc
adc
test
push
jb
inc
jmp
sub
mov
jmp
mov
dec
cmpsb
in
aam
cmpsl
xchg
icebp
imul
mov
into
push
outsl
js
sbb
jns
jmp
mov
bound
jne
dec
je
mov
ljmp
dec
jg
addr16
popf
mov
shlb
in
dec
adc
fistpl
adc
fldenv
mov
xor
call
fndisi(8087
dec
lods
mov
js
pushf
jp
out
xor
or
notb
and
push
xor
mull
mov
xchg
jae
in
xor
pop
imull
push
push
test
movsl
loop
or
out
sbb
scas
push
or
adc
adc
mov
add
pushl
jae
xchg
out
push
fdivrl
add
or
fwait
sbb
ret
mov
loop
mov
int3
mov
push
mov
jle
push
mov
fsubrl
jl
ss
ret
mov
lods
movq
sahf
xchg
push
adc
xchg
loope
popa
pop
xchg
xor
xchg
jmp
dec
jnp
pop
sbb
aas
pop
mov
sarl
jnp
lods
push
pop
mov
inc
lds
xor
aam
jnp
clc
cmp
and
cli
pop
mov
xor
inc
ret
push
outsb
fnstenv
cmpsl
pop
mov
xor
popa
jge
adc
jmp
or
pop
lret
pop
int
push
fistpl
mov
scas
lds
sbb
test
sahf
inc
push
add
inc
mov
pushf
loope
dec
outsb
cmpb
jo
outsb
cwtl
mov
aam
pop
push
jecxz
or
push
test
outsl
jnp
stos
lret
jle
inc
cmp
xlat
push
mov
inc
sub
and
dec
add
fdivl
mov
mov
rol
lock
or
or
imulb
inc
jecxz
xor
dec
mov
or
jns
stos
pop
cld
sbb
in
inc
pop
cmp
xchg
fistpl
dec
xlat
dec
test
das
les
cmp
xchg
notb
push
popf
daa
add
dec
imul
or
fucomp
xorb
gs
push
hlt
pop
subb
dec
sbb
pop
xor
mov
dec
sub
into
sbb
cld
movsl
dec
xchg
mov
insb
sbb
outsb
es
loopne
ljmp
ds
sub
jno
nop
mov
xor
push
rolb
mov
xchg
xchg
repz
outsb
iret
push
inc
inc
jg
or
jecxz
mov
incl
or
lods
aaa
push
mov
imul
sahf
fstps
add
mov
jge
pop
out
pop
imul
iret
mov
sarl
out
mov
call
jae
adc
cli
js
add
jge
xor
inc
xchg
or
dec
nop
hlt
fsubrs
mov
jmp
sti
lcall
mov
cmp
out
xor
stos
lods
or
mov
or
enter
fadds
cmp
ret
rolb
cltd
mov
inc
pushf
jbe
divb
sub
mov
loope
leave
stc
inc
xchg
ja
div
outsb
add
push
addr16
aad
cltd
xor
cmp
imul
fdiv
inc
inc
movsl
in
pop
adc
add
enter
lahf
mov
sub
push
loop
enter
cmpb
adc
xor
test
daa
movsb
mov
dec
inc
in
push
ja
pushf
sub
push
test
dec
mov
push
insb
into
pop
and
sbb
imul
out
iret
pop
or
pop
fisubs
sub
out
movsb
outsl
jno
mov
pop
add
cmp
push
dec
pop
jle
mov
add
icebp
xor
cltd
add
inc
mov
jbe
popa
sbb
add
push
loope
scas
inc
lock
clc
cli
hlt
adcl
adc
cmp
popf
daa
pop
jge
inc
pop
aaa
nop
adc
jmp
cmp
jl
ret
insb
push
lods
or
pushf
loopne
clc
rcl
in
inc
int3
or
pop
outsb
jl
or
pop
xchg
adc
xor
mov
lds
or
js
pop
sti
sbb
and
lds
push
push
adc
or
sub
mov
mov
xchg
xor
popf
jmp
inc
scas
xor
ljmpw
fisttpll
push
xchg
cltd
jnp
pop
lret
xchg
arpl
in
sbb
movsb
mov
rorl
mov
mov
ret
stc
sub
add
mov
pop
jg
adc
les
sbb
pop
icebp
xchg
mov
das
loope
dec
ret
out
lret
or
es
addr16
ds
movsb
mov
add
inc
mov
aam
popf
dec
mov
call
test
inc
mov
ja
pop
pop
pop
jmp
adc
xsavec
jle
or
loopne
fwait
push
fcmovu
mov
dec
out
popa
scas
mov
mov
dec
popf
cs
scas
icebp
stc
add
jg
in
mov
add
sar
outsb
jp
mov
dec
xchg
mov
subl
mov
and
and
mov
jbe
inc
mov
insb
sbb
xchg
inc
cmp
rcr
adc
or
push
clc
push
push
mov
pop
lahf
cld
mov
and
stos
or
fs
icebp
cmc
inc
fs
iret
push
and
out
mov
scas
mov
aad
repz
mov
fistl
packuswb
loopne
testb
cmpsl
mov
pop
cmp
enter
notl
push
fistpl
jo
xchg
ljmp
pushf
std
xchg
ficompl
fdivrl
cmp
out
sbb
jbe
cmp
xchg
les
or
jb
enter
push
push
sahf
xor
ficoms
dec
inc
jge,pn
push
mov
push
add
sbb
mov
fwait
jno
cmp
jge
add
cmpsl
test
adc
call
pushf
sbb
fisubrs
and
push
push
and
cltd
and
adc
aam
cwtl
push
lret
mov
dec
js
lret
stos
pop
push
jl
aad
sbb
nop
jg
jo
mov
inc
xchg
insl
data16
pop
pop
imul
pop
xor
bound
bound
out
inc
ljmp
mov
jge
or
sbb
adc
test
sub
pop
fbld
dec
jno
shll
addr16
pop
js
int
push
push
and
add
mov
dec
jg
sub
insb
imul
nop
sbb
ja
cmp
adc
pop
dec
pop
xchg
sbb
push
inc
in
sub
movsl
pop
std
and
test
enter
mov
paddusw
shlb
cmp
dec
cmp
mov
loope
fbstp
stos
loope
sub
fwait
dec
loop
repnz
mov
in
xchg
fcoml
rcrl
daa
pop
add
fs
mov
fldt
jo
mov
mov
push
sub
add
lea
cmp
dec
loope
enter
mov
iret
mov
cmp
in
pop
mov
test
push
add
stos
inc
xchg
mov
mov
inc
loope
push
push
adc
push
rol
jne
imulb
jne
jne
xor
mov
push
out
jnp
rcr
jno
mov
lods
add
sbb
das
cmp
mov
jp
scas
cmpb
je
cmp
cmp
mov
push
push
jg
lods
jmp
ret
xchg
subb
dec
js
sbb
add
test
nop
push
xchg
xchg
enter
mov
outsl
pusha
stos
leave
xor
and
stos
jecxz
xchg
ss
sbb
subl
out
mov
stos
stos
push
push
cli
js
test
ret
scas
fst
xchg
int3
dec
mov
outsl
out
loop
hlt
and
pop
daa
andl
inc
leave
pop
orl
push
lahf
aam
jge
mov
pop
out
cmpsb
lea
mov
xor
mov
das
lods
hlt
cmpsl
out
repnz
and
int
sbb
dec
outsl
pop
sbb
mov
cmp
cltd
push
inc
adc
loop
call
xchg
daa
dec
jg
jo
hlt
and
jae
ss
lret
cld
cmp
out
in
mov
mov
inc
or
test
xchg
xchg
in
and
aaa
out
nop
cwtl
stc
movsb
pop
inc
fistps
and
push
in
fadd
std
mov
cmpb
outsb
int
stc
orl
jl
or
and
cmc
arpl
lock
and
xor
leave
xchg
les
jg
int
dec
imul
popf
sti
loope
xor
sub
cltd
jbe
xor
dec
dec
xchg
or
jecxz
and
sub
inc
cmovb
push
cli
cmpsl
enter
je
jecxz
cmc
sub
sbb
mov
inc
pop
add
push
int
jle
js
cwtl
mov
addr16
jle
mov
pop
fsubrs
cmpsb
mov
clc
push
cltd
rcl
mov
sub
int3
add
int
sbbb
popa
sbb
stos
sbb
mov
and
movsl
in
sub
jmp
iret
js
negl
and
lahf
adc
mov
dec
push
inc
fcomp
outsl
and
lods
adc
loop
and
push
jne
adc
test
sbbb
cmpb
shlb
sahf
add
divb
inc
inc
or
and
stos
lds
shlb
sub
add
in
or
es
jne
mov
andl
loop
sahf
lret
xchg
rcll
mov
pop
imul
shrb
xchg
lods
movsb
jns
xlat
cli
int
stos
in
addl
or
cmp
loop
daa
sub
cwtl
in
cmp
push
ja
pop
fidivrs
cmc
cli
mov
sub
inc
outsb
shl
int3
adc
std
cmpsb
xor
cs
adc
sub
data16
shrl
rolb
and
ss
out
push
sbb
in
test
lret
pop
dec
jbe
or
sub
push
xor
out
outsl
mov
dec
pop
xor
daa
sub
rclb
sub
aad
add
or
push
rorb
bound
popf
ficomps
aad
iret
sahf
ret
cwtl
mov
adc
sbb
popa
and
mov
jecxz
pop
cmp
mov
idivl
mov
fdivs
sub
les
popf
mov
sbb
bound
push
and
or
fs
test
aad
cmpsl
std
bound
idivl
call
xor
ss
lods
daa
fwait
sbb
jp
push
xor
mov
xor
dec
xchg
xlat
out
and
xor
dec
fcompl
and
push
pop
sbb
lret
mov
or
mov
decb
or
xchg
mov
lcall
aam
test
dec
sub
push
pushf
mov
inc
pushf
or
mov
dec
mov
sahf
ret
ljmp
mov
inc
and
xchg
js
pop
lahf
test
or
ret
pushf
ret
mov
push
sahf
movb
inc
pop
or
lcall
sahf
in
sbb
in
mov
fwait
incl
lock
jno
mov
inc
and
xor
inc
icebp
imul
cmp
scas
fcomps
movsb
mov
imul
mov
sub
add
mov
repnz
daa
fdivr
outsb
es
mov
imul
test
and
xor
pusha
cmpsb
hlt
rorl
dec
push
cmp
lcall
out
mulb
test
xor
imul
sarl
inc
stos
mov
push
aaa
dec
mov
fisubs
mov
cmp
push
jle
xorb
fsubl
ret
jb
push
pop
or
xchg
lahf
lcall
arpl
dec
aaa
loopne
mov
in
mov
popf
xor
dec
inc
push
push
sbb
aas
mov
xchg
andl
push
imul
fldl
push
mov
in
cwtl
mulb
pop
pop
xorb
cmp
popf
rcrb
popa
mov
aam
push
sbb
in
mov
sbb
fwait
add
lret
pop
fimuls
mov
fwait
mov
jbe
sub
clc
mov
sahf
out
mov
mov
jl
inc
push
je
add
jmp
addl
jno
xchg
imul
inc
loopne
aas
lahf
mov
sub
test
rcrb
test
popf
lcall
push
mov
xchg
sti
lret
les
add
fadd
add
pop
adc
mov
cmp
xor
int
push
rcrl
mov
sub
aaa
inc
scas
or
sbb
fstpl
xor
enter
mov
into
xor
mov
lods
push
xchg
dec
out
shr
inc
mov
insb
out
add
sub
insl
pop
lea
cwtl
popa
in
lock
mov
ret
dec
idiv
push
rcrl
js
pop
push
xchg
clc
mov
loope
mov
xchg
mov
lret
mov
addr16
sbb
aas
inc
scas
and
into
and
out
pop
xchg
aas
xor
mov
shll
xchg
arpl
add
lods
sbb
push
push
mov
clc
inc
mov
lea
xchg
stc
mov
fwait
push
int3
shl
xchg
leave
jae
xchg
std
js
cmc
ljmp
sub
notb
inc
sub
dec
push
lahf
xchg
out
lahf
addr16
out
out
mov
mov
aaa
mov
cmp
sbb
and
mov
insl
in
stc
mov
push
leave
xlat
cmpsb
cli
pop
leave
lock
iret
frstor
in
sbb
aad
hlt
sbb
add
xor
out
pop
mov
mov
mov
rorb
mov
sar
mov
in
jno
and
dec
pop
cmpsl
rolb
jno
or
pushf
sub
push
jno
xor
pop
adc
dec
dec
cmp
test
jnp
pop
push
stos
test
sti
mov
pushf
mov
pop
pop
mov
xor
sbb
cmc
push
mov
out
jecxz
aas
stos
negb
lret
ret
outsl
lcall
inc
negb
sbb
sahf
idiv
mov
rorl
popa
test
shrb
lock
sub
push
les
incb
or
dec
stc
sbb
dec
adc
lea
xchg
repnz
rcll
sarl
cmpb
push
iret
mov
cli
mov
mov
aas
adc
xlat
cmpsb
sbb
mov
dec
dec
out
bound
xor
adc
pop
and
jb
out
dec
xchg
sbb
ja
addl
inc
sahf
dec
cmp
add
jns
sbb
addr16
lret
lret
cmp
cmp
or
dec
arpl
cmpb
dec
sub
mov
cmpsb
jp
in
adc
or
adc
xchg
test
bound
and
hlt
fdivrs
movsl
pusha
jp
mov
sub
shrl
or
mov
daa
loop
clc
aaa
add
sub
push
dec
pushf
lods
mov
aaa
push
clc
iret
ds
inc
fbld
je
icebp
mov
int3
jbe
add
push
icebp
or
inc
sbb
incl
mull
jno
sti
out
lret
mov
shlb
leave
subb
mov
push
cmpl
bound
pop
pop
push
jb
sahf
fwait
lret
sbb
into
call
scas
dec
mov
repz
stc
adc
lods
or
fldt
aam
add
cmp
mov
ret
mov
fidivrl
ret
jl
pop
fs
pop
inc
enter
cwtl
xchg
push
add
shl
adc
daa
push
out
mov
movsl
fs
jmp
fisubl
lods
mov
jb
jbe
mov
les
cli
inc
test
loope
fildll
and
out
cmpsb
mov
rolb
xor
add
out
push
sub
in
jbe
mov
pop
inc
dec
dec
mov
out
cmc
rcr
dec
adc
xchg
cli
pop
dec
leave
mov
fwait
movsb
jecxz
iret
mov
xchg
inc
fisubrl
mov
sub
jne
mov
sub
ret
pop
add
sbb
mov
push
gs
sti
lahf
jnp
add
xchg
mov
xor
push
cli
pushf
mov
push
jmp
xor
loop
mov
mov
pop
outsb
insl
dec
fcmovne
sbb
sbb
sub
adc
lock
mov
in
icebp
push
cwtl
dec
inc
cmp
sbb
or
jae
pop
or
xor
jns
pusha
mov
sub
xor
insl
jl
xor
nop
inc
fs
icebp
mov
mov
int
mov
shrb
xor
in
call
lock
out
nop
mov
pop
cmc
stos
mov
jge
mov
in
ret
push
xor
inc
cmp
ss
xlat
popf
adc
test
inc
jnp
shr
idiv
sub
pop
and
jno
aaa
sahf
or
sbb
mov
push
jns
enter
scas
inc
test
cltd
leave
ret
jmp
sahf
xchg
jg
loope
mov
cmp
cmpsb
inc
and
xchg
xor
pop
and
popf
fmul
pop
mov
mov
fwait
ds
lock
push
push
ds
cmp
sub
dec
xchg
call
xlat
repz
and
insb
cmp
push
int3
mov
mov
cmp
cmp
push
scas
mov
dec
fldenv
cwtl
dec
lods
add
int
mov
out
in
aad
lret
pop
mov
fnstenv
scas
pushf
or
scas
mov
fadd
and
mov
leave
clc
jle
mov
fwait
inc
std
sub
cli
jne
stos
icebp
push
jl
fnstsw
sbbl
imul
leave
iret
fsubrs
sub
jo
inc
dec
mov
test
or
xchg
cli
in
lds
sti
pushl
jo
mov
pop
inc
lds
in
out
mov
inc
push
sysenter
and
or
xor
xor
rol
mov
jae
mov
and
mov
pop
xor
lahf
sub
pop
xchg
or
sub
push
aas
iret
mov
mov
dec
les
cmc
ljmp
mov
mov
xor
mov
lret
dec
mov
test
sub
push
cmpb
and
pop
xor
push
mov
ss
mulb
pop
xchg
jle
loope
pop
in
pop
in
ret
das
push
arpl
add
stos
insl
inc
lods
iret
mov
in
aam
inc
adc
lods
mov
cmpsl
dec
icebp
mov
mov
push
adc
aad
fs
rorb
jne
push
ffreep
and
sub
call
flds
xchg
test
add
popa
push
mov
pop
xor
mov
xchg
insb
fidivrl
xor
xor
sub
dec
test
jle
cmp
shll
stos
add
movb
sahf
mov
jl
add
gs
pop
shrb
mov
xchg
ret
adc
dec
push
push
into
ret
adc
inc
sahf
pop
inc
mov
lock
xor
cld
pop
subb
cmpb
jb
or
pushf
imul
add
popa
mov
inc
mov
enter
add
ret
inc
ja
mov
bound
fimuls
inc
mov
stc
nop
xchg
mov
push
popa
mov
push
lret
or
pop
and
inc
ror
push
sarl
int
sub
or
sbb
int
int
leave
out
movsb
out
pop
aad
mov
pop
inc
sahf
int
out
mov
enter
jmp
adc
imul
jne
adc
inc
lods
fnsave
insb
leave
push
push
test
mov
or
psadbw
test
lret
fnstsw
cwtl
hlt
fcmovnbe
or
dec
push
cs
call
push
in
outsb
pop
inc
push
lcall
shl
push
mov
mov
inc
lds
stc
dec
test
pop
lea
dec
pop
ljmp
pop
clc
push
jne
cmc
cmp
inc
aad
sub
sbb
pop
jo
and
out
cli
nop
or
jbe
dec
std
sub
sbb
cmp
fwait
mov
js
mov
pushf
shr
xchg
pusha
les
loope
out
psrld
push
test
or
cmc
or
pop
aas
or
push
mov
aad
repz
cmpsl
les
and
or
jecxz
sti
cs
mov
addb
xor
mov
cwtl
ljmp
scas
fdivrs
pushf
mov
xor
call
loopne
jp
inc
mov
sbb
or
adc
fs
xchg
cli
lcall
adcl
cmp
outsb
arpl
mov
scas
xchg
outsb
or
mov
jnp
clc
xchg
add
cmp
lret
xor
popa
icebp
pushf
scas
andb
and
loope
jne
jno
sbb
lret
dec
mov
push
out
or
inc
sbb
hlt
push
pop
pop
add
aam
rorb
mov
lock
dec
aas
into
enter
sbb
out
push
ret
push
and
mov
jnp
out
pushf
sub
mov
je
sub
push
jle
pusha
imul
in
mov
das
mov
sbb
push
roll
push
mov
popa
cmp
or
movb
stc
jnp
mov
in
gs
jecxz
std
mov
push
mull
jl
xchg
inc
and
jo
rcrb
mov
add
dec
sbbl
pusha
out
loopne
xor
mov
mov
imulb
cmp
in
cli
repnz
inc
dec
cmp
xor
jmp
pop
cwtl
sub
movsl
mov
pop
sbb
aaa
into
fldenv
or
dec
addr16
je
ret
das
es
sub
xchg
imul
std
out
notb
adcb
mov
cmc
inc
and
push
push
ja
adc
xchg
sahf
sbb
sti
inc
mov
cmp
xchg
pushf
pop
or
cld
push
ss
xor
iret
sbb
pop
mov
aaa
jae
and
lods
sbb
incl
shld
mov
fchs
jns
mov
push
cmp
pop
aaa
test
rcr
xchg
inc
out
push
pop
push
pop
es
rorb
jo
orl
lret
push
sahf
sub
dec
sar
repz
mov
sahf
mov
adc
scas
push
addl
or
loope
adc
mov
lds
int3
cmp
test
and
xchg
jns
out
inc
mov
stc
out
xchg
mov
xchg
jnp
bound
lret
rclb
divb
or
add
mov
arpl
addr16
ret
sub
enter
divb
movsl
outsl
bound
shrl
sub
in
xchg
add
jmp
das
mov
fwait
cltd
fwait
or
movsb
mov
mov
loopne
lock
in
je
clc
sti
mov
push
add
popa
repz
nop
cmp
and
movsb
call
cmpl
vminss
scas
insb
je
cmpsb
adc
lea
pop
lods
mov
out
sub
xor
sahf
jl
imul
and
add
inc
push
xchg
lret
loopne
cmp
lds
rolb
push
pop
sbb
cmpsl
into
xor
faddl
jle
inc
jle
idiv
sub
cmp
mov
out
xchg
and
testl
dec
icebp
pop
xchg
subb
ds
sti
shr
repnz
gs
fdivrl
imul
dec
fcom
push
addr16
lods
mov
xchg
movups
out
stc
push
xchg
jb
test
mov
into
dec
cli
fsts
sbb
pushf
test
sahf
or
push
ficoms
loope
fistpl
and
scas
adc
dec
mov
push
cmp
mov
or
pop
jnp
pop
push
scas
push
dec
xchg
inc
add
iret
xor
fnstsw
lret
cmp
je
pop
push
or
jle
mov
and
pop
dec
js
jno
jge
lea
imul
outsl
push
lds
decb
add
imul
imul
dec
xlat
inc
in
jo
add
or
neg
sbb
xor
xchg
pop
adc
dec
loop
jo
lods
enter
in
xchg
popf
icebp
xor
movsl
cmpsb
dec
aas
in
adc
inc
fnstsw
mov
ljmp
test
mov
enter
jne
stos
lods
ret
shrb
inc
mov
pop
push
dec
mov
sar
jecxz
mulb
sub
push
jo
stos
sub
adc
jae
adc
xchg
repz
pop
mov
movsl
lret
mov
push
jg
jbe
lret
sarb
and
push
mov
aam
mov
and
popf
cmpsb
cmpsb
pop
inc
mov
cli
jb
add
dec
pop
test
inc
aam
cmc
data16
repnz
xchg
adc
repz
les
jmp
test
push
jbe
mov
cmp
push
mov
sbb
sub
adcb
add
mov
xchg
lods
pop
je
jge
push
sub
scas
fs
jbe
mov
imul
shrl
aad
sub
es
cmp
push
sbb
in
mov
movsl
mov
insl
stc
in
mov
outsl
sub
push
movsl
mov
sub
aas
stc
imull
jmp
sahf
ja
mov
mov
jp,pt
xor
scas
mov
xor
int
xor
psllw
daa
cmpsb
mov
mov
divb
fucom
das
jge
imulb
idiv
insl
adc
in
lods
push
sbbb
push
ret
adc
jecxz
or
inc
arpl
or
push
inc
mov
pop
pop
lock
nop
mov
cmc
in
fbld
push
test
scas
sbb
jge
mov
movsb
mov
bound
mov
orb
fmull
dec
inc
cwtl
scas
mov
xor
out
xchg
cmp
dec
mov
lcall
xchg
adc
bound
inc
push
shl
cld
sahf
les
aas
push
adc
push
dec
gs
push
add
xlat
add
in
fdivr
shlb
and
fwait
test
sbb
enter
data16
fadds
jns
and
popf
add
cs
pusha
les
loopne
mov
sbb
jge
cmpl
and
int3
lock
rcr
rorb
dec
sarb
xor
mov
sub
nop
negb
outsl
mov
jle
and
es
jns
xchg
cmp
lods
cs
mov
in
fs
sbbl
add
add
test
ret
dec
jno
nop
sbb
icebp
ficompl
cmp
out
std
cmp
pop
mov
add
lcall
aad
pop
inc
push
call
push
and
shlb
leave
xchg
mov
test
ficompl
arpl
sub
mov
rcl
sub
mov
jns
imul
xchg
out
outsb
xlat
cld
sahf
push
adc
mov
ljmp
shll
xchg
mov
icebp
pop
mov
inc
jns
inc
jne
pop
loopne
addr16
jge
push
xor
aas
sub
clc
mov
dec
data16
idiv
stos
push
stc
mov
popf
push
push
fimuls
add
push
fs
jge
sub
cs
xchg
mov
jnp
cmp
mov
outsl
pushf
pop
orl
test
xchg
mov
loop
scas
or
cmp
cmpsb
xchg
sti
xor
imul
push
push
adc
fmuls
sbb
fbstp
repz
hlt
add
movsb
shl
mov
cli
lods
xor
mov
push
push
jp
mov
shr
push
xlat
adc
xor
test
les
pop
mov
add
mov
jo
lods
enter
dec
shll
push
xor
xlat
ret
or
xor
and
in
sub
push
and
or
mov
mov
pushf
sub
push
jb
in
ds
int3
mov
and
jmp
cmp
mov
push
inc
pop
pushf
in
mov
pop
ss
imul
push
push
ja
push
js
loop
cmpsl
clc
outsb
movsl
movsl
jno
out
lret
out
test
jnp
jb
sbb
fucomp
enter
lods
adc
xor
mov
dec
test
cs
mov
adc
pop
push
cmp
mov
popa
es
push
dec
xor
out
shr
sbb
xor
arpl
pop
lcall
das
es
or
rcrl
in
mov
das
jecxz
adc
incb
or
mov
or
jg
dec
sti
cmpsl
aam
cmpsl
xchg
jbe
inc
mov
jl
jmp
pusha
mov
pop
push
adc
addb
movsb
stc
jbe
cmpsl
ljmp
pop
inc
lsl
cmp
nop
test
mov
aaa
cmp
mov
add
sbb
inc
cmpsb
in
push
or
push
pop
movsl
popa
adc
ss
stos
and
add
or
xor
mov
in
test
mov
dec
adc
xor
arpl
sti
pop
jmp
push
fwait
gs
lea
jp
pushf
and
aad
mov
inc
imul
out
ret
sub
stc
inc
xor
push
push
rcr
sub
cmpsb
movsb
enter
xor
popf
pop
js
aad
xor
ficoml
dec
mov
lcall
sti
mov
mov
repz
dec
push
into
imul
jno
cmc
inc
or
pop
pusha
sbb
jne
cld
sub
mov
cltd
aam
push
lock
push
pop
imul
out
adc
lods
or
and
out
and
mov
inc
sarl
add
aaa
mov
mov
test
mov
sub
ss
icebp
stos
sti
mov
pushf
jb
add
imul
movsl
push
leave
pusha
fcoms
loopne
hlt
shlb
cmc
pop
xchg
mov
jae
or
xchg
inc
mov
cs
xchg
stos
fs
daa
mov
adc
sbb
pop
xor
je
sarb
ret
mov
test
ja
jns
cmc
ljmp
repnz
jp
jno
mov
imul
clc
cmp
std
mov
add
mov
lock
jmp
or
int3
adc
push
mov
mov
jle
inc
mov
adc
inc
inc
sti
add
clc
repz
and
pop
scas
insl
sbb
stos
ja
xor
addr16
ss
test
lret
cld
adc
in
cmp
mov
sub
les
xor
test
roll
or
mov
jle
cmpsl
sbb
mov
jbe
mov
add
test
push
popf
add
xchg
push
dec
sti
arpl
jecxz
scas
mov
push
mov
xchg
cmp
popf
in
sahf
dec
cmp
fsub
ja
jmp
insl
adc
mov
and
mov
inc
test
sbb
xchg
cmc
mov
mov
mov
insl
sarb
int
dec
in
les
jge
pop
and
push
test
cmp
in
imulb
pushf
jbe
scas
dec
popf
xchg
mov
addr16
add
jo
call
mov
push
jp
adc
aas
inc
xor
mov
rorl
and
pop
mov
mov
cli
lea
pop
das
jmp
repnz
add
pop
cld
and
cmpsb
sub
cmp
pop
push
movq
xlat
mov
clc
push
fbstp
pop
lret
cltd
sbb
lret
lods
jp
xchg
aam
jo
leave
pop
jnp
inc
pop
insb
add
sub
lret
test
or
cwtl
push
push
lods
pop
push
pusha
mov
mov
inc
popa
xchg
xchg
add
xchg
push
inc
inc
push
dec
and
les
out
out
dec
mov
sar
repz
xor
ret
push
add
int
push
inc
sbb
jp
stos
xor
dec
mov
or
sahf
data16
orl
mov
aad
aas
push
xor
repnz
pop
jno
sbb
scas
lahf
in
sbb
xchg
inc
mov
cmpsl
leave
aaa
inc
lea
xchg
aaa
xor
mov
out
nop
sbb
pop
fdivl
scas
in
jae
pushf
popa
mov
cmc
data16
ss
loope
popa
stos
out
loop,pn
dec
insb
pop
sarl
jae
into
stos
push
cld
mov
push
cmp
je
inc
mov
testb
cli
cmp
push
sbb
dec
xorb
jno
jl
add
mov
or
adc
xchg
mov
bound
xchg
inc
add
and
jns
xor
gs
cwtl
jl
enter
cmp
jge
sub
insb
mov
dec
mov
adcb
xor
push
int
sbb
jge
shrb
jg
or
jle
jae
jb
mov
cltd
addr16
jl
inc
sub
paddsb
in
pop
dec
and
imul
fistpl
sbb
jno
xchg
or
pop
and
cmp
in
out
shll
cmpsl
dec
sarb
cltd
xchg
scas
sbb
mov
push
mov
fiaddl
fcmovne
dec
mov
dec
and
test
insl
jb
pop
push
sti
lods
subb
sub
punpcklbw
int3
dec
add
jecxz
xor
mov
enter
popf
pusha
add
data16
mov
jg
scas
xor
xorw
pop
ja
xorl
pop
and
mov
mov
inc
mov
ljmp
aad
and
push
lock
mov
push
or
popa
and
and
jmp
push
xor
adcl
xor
xchg
mov
sub
js
jb
sarb
jg
inc
dec
pop
xchg
sub
scas
data16
dec
mov
negl
xor
mov
rcrb
test
roll
xor
js
ret
scas
movsb
fwait
xchg
pushf
adc
flds
bound
dec
or
dec
cli
repz
lock
divb
repnz
xor
lret
xor
in
fsubr
mov
mov
inc
xchg
mov
inc
cmp
fbld
negl
mov
mov
icebp
add
push
outsb
add
inc
push
fs
push
sbb
xor
inc
adc
fisubl
mov
mov
sarb
push
adc
push
call
sub
call
pop
mov
sub
jge
push
add
push
stos
mov
xor
push
sahf
sarl
jl
add
arpl
arpl
hlt
cmpl
xor
jmp
bound
mov
outsb
adc
fs
cwtl
loope
fimuls
mov
xor
mov
dec
test
icebp
mov
ret
mov
ret
sarl
mov
xlat
jno
loope
clc
test
jp
or
inc
sub
jmp
push
popa
xchg
inc
sahf
mov
aam
popf
push
popf
mov
adc
push
hlt
popf
mov
andb
jmp
mov
jp
movsl
mov
in
pop
scas
imul
jbe
arpl
mov
jge
jmp
push
jb
push
test
test
adc
fs
xchg
or
add
lods
mov
shlb
dec
sarb
gs
ret
jno
loopne
shl
sub
data16
scas
orb
mov
imul
fstpt
cmpsl
inc
fimuls
pushl
scas
mov
sbb
jmp
pop
in
xor
aaa
add
mov
scas
mov
dec
adc
xchg
inc
loop
sahf
sbb
pop
js
mov
cmp
push
aas
je
pop
inc
fisubl
inc
dec
loopne
jno
les
jnp
add
hlt
sub
in
divl
mov
mov
out
push
xor
orl
lcall
lds
and
call
or
loope
gs
xchg
daa
mov
es
or
dec
stos
xchg
inc
out
int3
in
xlat
xlat
mov
das
std
popf
mov
dec
hlt
sbb
mov
inc
mov
in
xchg
inc
pop
jge
push
jecxz
stos
rclb
popf
fdivl
js
mov
add
push
icebp
insb
xor
scas
cmp
daa
pusha
dec
jg
imul
adc
fcompl
leave
mov
push
push
and
fistps
jp
cmp
repz
push
cltd
ret
lcall
dec
dec
ret
rcrl
sbb
cmpsl
mov
jnp
testb
dec
and
push
les
lahf
mov
or
bound
xchg
xchg
div
mov
in
jle
cli
dec
arpl
xchg
insb
or
scas
movsl
in
adc
xabort
mov
fs
fstl
dec
scas
mov
clc
outsl
or
add
jg
fwait
cli
inc
jp
mov
xor
dec
jnp
ss
or
pop
int
xor
mov
xor
mov
setne
jmp
sbb
dec
mov
stos
rclb
cmpsb
add
pop
adc
cmp
jp
inc
jmp
filds
orl
scas
rcll
cmpsb
sarl
xchg
hlt
enter
fsts
aaa
xor
stos
xchg
add
sub
cli
lds
and
push
pusha
data16
pop
fildll
push
sub
bound
mov
mov
scas
stos
mov
in
out
imul
mov
cmp
lcall
outsb
call
fisttpl
roll
loope
fidivs
je
inc
adc
imul
or
push
and
inc
lahf
inc
mov
fdiv
adc
xchg
inc
cs
scas
mov
xchg
outsl
pop
shl
outsl
inc
sub
jno
or
cmp
mov
adc
in
ret
inc
cmp
ja
sti
pop
adc
cmp
push
movsl
mov
jmp
idivl
or
mov
test
mov
imul
mov
rcr
fisttpl
inc
fwait
dec
jns
imul
enter
shrb
into
push
mov
ljmp
mov
or
jb
bound
mov
dec
sub
enter
dec
lods
lods
popw
repnz
jne
test
pusha
into
loope
push
hlt
xchg
jle
mov
xor
mov
add
stos
jge
mov
cmpb
loope
push
jge
popf
icebp
mov
psrld
outsl
jle
cmp
inc
xorl
adc
lret
mov
xor
ljmp
fbstp
dec
iret
sub
adc
add
mov
cmp
xchg
sbb
fucomip
outsl
sahf
add
sbb
cld
mov
mov
jg
cmpsb
mov
xchg
or
add
iret
rol
or
hlt
mov
lcall
xchg
sub
jo
or
leave
imul
and
loope
fmul
incb
xor
inc
push
dec
std
xchg
lcall
fwait
arpl
mov
dec
mov
fs
dec
adc
cmp
ret
in
add
les
lcall
jns
rol
push
aad
outsl
nop
or
je
push
cli
adc
lock
popa
push
jnp
xchg
lret
jns
and
rclb
scas
mov
fstpt
loop
bound
out
adc
iret
pop
mov
aas
pop
cmpsb
inc
inc
adc
or
dec
xor
sbb
cmpsb
inc
out
mov
mov
ljmp
shlb
fsubrs
mov
in
inc
scas
sahf
inc
nop
xor
cmp
and
sbb
inc
sbb
mov
inc
repz
les
fsubs
cmc
add
mov
jg
in
xor
scas
ret
jae
dec
sub
xchg
lock
shrb
jl
xchg
xchg
in
aad
movsb
and
rcll
insl
test
mov
mov
cwtl
add
imul
push
int3
jg
jl
out
mov
mov
lret
pop
fidivl
test
ss
ds
and
cmc
ljmp
nop
inc
je
aas
add
xchg
dec
or
pop
in
inc
inc
addr16
dec
test
stc
pop
jae
inc
mov
daa
imul
add
xor
inc
pop
pop
in
push
push
out
adc
cli
aaa
inc
jp
scas
out
mov
and
dec
roll
cmp
cltd
jl
inc
aam
pop
inc
pop
fisttpl
inc
ja
call
push
mov
add
call
push
jg
orl
sarl
popf
mov
stos
call
sbb
mov
adc
mov
cmpsb
pop
inc
push
push
ror
shll
test
mov
jb
and
pop
dec
xor
push
fucomp
cmpsl
dec
lret
cli
and
ds
dec
nop
jge
aaa
push
insb
fldcw
ljmp
jnp
and
xchg
xchg
push
cmp
mov
dec
cld
dec
pop
ds
pusha
push
sub
cmp
aad
cmp
sahf
jecxz
xchg
std
pusha
mov
sahf
dec
or
arpl
je
sti
std
cltd
incl
sbb
xchg
jbe
aas
jo
fwait
push
ds
mov
inc
ret
lods
pop
sbb
xchg
popa
enter
jne
cmp
in
pop
sti
je
lock
data16
push
aam
sarb
sub
xchg
xchg
les
jg
jne
dec
loopne
and
ret
mov
add
movsb
int3
mov
mov
pushf
and
ret
repz
push
cwtl
cmpsl
inc
inc
inc
xchg
dec
ja
dec
push
jmp
enter
into
and
pushf
inc
push
xchg
mov
lcall
stos
sarl
mov
mov
push
arpl
xchg
call
xchg
dec
das
std
inc
in
pop
pushf
jns
adc
xchg
sub
mov
shlb
aaa
lahf
add
adc
in
test
cmp
xchg
adc
test
mull
pop
jne
mov
pusha
sbb
or
xchg
xchg
insl
xlat
mov
lea
test
mov
cmp
ljmp
pop
rorb
mov
jne
pop
or
or
and
leave
mov
dec
lea
lcall
sbb
popf
inc
dec
in
sbb
shrl
add
xchg
pusha
call
movsb
push
cmp
dec
push
or
inc
fcomp
fistl
sub
pushf
lods
aaa
add
mov
ljmp
mov
sbb
std
shll
mov
mov
inc
ljmp
aas
and
insl
push
enter
ficoms
repnz
xchg
sub
cld
test
pop
mov
pushf
sub
mov
push
pop
mov
dec
push
test
sbb
clc
pop
add
rcl
xor
jo
enter
mov
push
leave
xchg
leave
les
inc
test
jl
loope
mov
gs
out
mov
xchg
or
sub
lea
push
jecxz
into
lret
rcrb
cwtl
add
in
in
out
mov
arpl
dec
pop
xlat
pop
cmp
sub
push
xchg
jo
out
xchg
mov
push
mov
out
mov
fdivrs
decl
insl
into
adc
xchg
push
data16
into
sti
gs
push
data16
mov
sub
add
lret
adc
sbb
mov
inc
sub
pop
adc
jle
inc
lahf
cli
sbb
mov
test
xor
sahf
push
pop
stc
aaa
xor
pop
push
aaa
sub
imull
lahf
xchg
stos
es
jbe
and
out
mov
cmpsl
sub
mov
adc
sbbl
add
inc
les
dec
scas
mov
add
fildll
orb
xor
pop
mov
arpl
pop
enter
push
sub
sub
scas
xor
bound
fildll
mov
add
mov
sbb
test
mov
pushf
mov
out
sbb
mov
outsl
or
cwtl
std
cmpsb
fstpl
mov
loope
out
cld
aad
shlb
gs
enter
add
addl
adc
and
into
xchg
test
pushf
popf
xor
enter
cld
nop
xor
mov
lock
or
and
push
mov
gs
call
fsubl
stos
pusha
mov
scas
adc
loope
mov
cli
shrl
out
or
das
jl
scas
mov
pop
lods
lea
fdivs
sbb
inc
xchg
clc
dec
imul
dec
dec
inc
mov
inc
inc
and
imul
aaa
or
cmp
sti
out
cwtl
xor
in
scas
clc
cmpsb
out
fsts
test
xorl
mov
decb
sub
mov
add
sub
xlat
dec
jge
add
pushf
ret
xchg
mov
jle
dec
loope
adc
pop
mov
outsb
out
mov
pop
mulb
dec
lret
push
or
int3
popf
mov
jb
clc
and
jns
outsl
mov
aad
shrl
and
aam
outsl
adc
push
sbb
into
add
and
imul
pop
jns
imul
xchg
adc
adc
popa
xchg
mov
cmp
mov
pop
mov
lcall
out
cmp
data16
jmp
shll
movsbl
pop
rorl
dec
xchg
jmp
add
in
jo
mov
mov
mov
and
cmp
cmp
lret
inc
mov
clc
gs
xor
mov
fldenv
inc
pushf
mov
mov
lods
cmp
jo
mov
or
xor
out
imul
and
and
daa
xor
cmc
scas
cmpl
add
mov
scas
jne
lods
idivl
lods
xorb
mov
insb
push
out
or
lcall
mov
jo
aas
and
pop
lods
leave
pushf
xchg
pop
insl
pop
repz
and
mov
lock
xchg
leave
cmpsb
pop
jae
ss
loope
popa
pop
ret
push
jg
frstor
and
mov
xor
or
loope
xchg
push
aaa
in
pop
pop
stc
pop
push
shll
push
adcl
mov
dec
push
jbe
leave
test
or
jne
ret
into
movsl
cmp
nop
push
sub
pusha
push
add
sar
and
loopne
ffreep
push
mov
dec
mov
mov
sar
dec
cmpsl
dec
lret
fmull
popf
std
roll
mov
push
sub
pop
sub
add
aam
xchg
adc
xchg
clc
fcomps
cmpsb
repnz
mov
icebp
push
mov
mov
mov
iret
sub
pop
dec
shll
js
push
nop
mov
mov
fistps
es
js
inc
insb
shll
sbb
daa
mov
in
mov
and
outsl
pop
int
clc
push
jmp
xchg
insb
and
cwtl
sarb
es
aam
bound
daa
gs
out
xor
iret
jl
add
dec
cmp
shrb
xchg
jp
fcmovne
mov
xor
mov
mov
jp
pop
sbb
lods
repnz
mov
rcrb
lcall
fninit
sub
push
sar
sahf
adc
and
lea
push
cmp
dec
sub
jb
inc
jge
aad
mov
add
int3
or
or
jp
movsb
and
jge
divb
adc
sbb
cmpsl
add
ljmp
push
sti
rcll
stos
out
push
shr
or
ss
push
push
and
push
fsubr
lea
repz
or
or
scas
loope
in
sbb
cmpsl
adc
orl
out
or
rcl
ret
dec
adc
inc
xor
aas
jge
lret
cld
scas
pushf
lods
cwtl
adc
rcl
or
aad
sarl
cs
into
xor
mov
out
adcl
jecxz
xchg
add
sub
loopne
mov
arpl
jp
in
ja
adc
mov
nop
rcl
pop
outsw
cltd
fistl
dec
enter
stos
lds
bound
adc
imul
es
push
lods
dec
xchg
ljmp
hlt
out
pop
lret
pop
sarl
faddl
leave
jp
test
and
std
hlt
mov
lahf
dec
pushl
rcrl
test
fs
shll
pushf
enter
arpl
scas
mov
xor
sbb
xlat
sub
jnp
stos
xchg
pop
inc
clc
xchg
iret
push
adc
pop
add
fucomip
jb
inc
push
push
dec
nop
cwtl
dec
inc
mov
cmp
pop
add
int3
mov
stos
outsl
push
in
arpl
sbb
sbb
sub
inc
mov
xchg
leave
ss
dec
rcl
dec
mov
pop
lret
and
mov
cli
pushf
push
test
shrl
push
add
scas
ret
sbb
push
push
push
dec
dec
mov
ss
xorb
sbb
cmpsb
or
xchg
sbb
xchg
push
push
lahf
add
add
inc
shrl
cmp
cmp
xor
sub
cmp
in
es
add
xchg
mov
inc
sbb
je
dec
jnp
mov
sub
imul
lret
push
in
pusha
or
repnz
mov
mov
int
aad
mov
arpl
xor
data16
test
jnp
pop
or
push
fiadds
xchg
je
mov
nop
sub
and
lods
adc
mov
roll
or
ja
jp
xchg
mov
mov
push
fsubs
pop
mov
push
mov
ljmp
dec
sbb
pop
fidivrl
cmpsl
scas
sbbb
cld
cmp
arpl
aas
imul
xchg
dec
out
daa
ljmp
adc
push
mov
sub
push
and
mov
imul
in
mov
xchg
repnz
out
xor
dec
fdivl
push
cmp
ret
int
les
loopne
mov
xor
jecxz
mov
mov
mov
xchg
lret
inc
aas
pop
cmp
imul
aam
repnz
hlt
sbb
sbb
popa
mov
shl
mov
stos
mov
movsl
sbb
clc
pop
or
imulb
movsl
mov
and
lcall
aam
cli
scas
mov
jnp
xchg
xchg
in
mov
loope
add
cmpsb
mov
jp
dec
les
mov
sbb
cmpl
sarl
lods
pop
adc
push
adc
gs
out
lds
push
dec
push
repnz
sbb
adc
cmp
jg
addr16
mov
inc
sbb
mov
push
lahf
test
in
mov
jg
and
cmovl
jl
dec
jmp
loope
adc
adc
mov
mov
cltd
sbb
xchg
sbb
aad
inc
mov
iret
jae
bound
add
les
addb
and
cmp
cwtl
inc
mov
xchg
out
sbb
int3
inc
popa
testb
xor
sarb
cmpsl
cmc
rol
mov
das
xchg
lods
addr16
shll
fwait
and
mov
mov
lods
outsl
sbb
sub
sbb
mov
icebp
lret
incl
mov
dec
jp
stos
repz
in
pop
mov
xor
dec
imul
rcrb
ret
adc
rcrl
push
pusha
xchg
js
lahf
mov
ret
sub
dec
inc
xlat
lods
dec
out
and
mov
ljmp
sbb
lock
cmp
ja
iret
pop
sbb
subb
push
cmp
stos
sub
leave
mov
sarl
stc
pop
outsl
jne
dec
aad
sbb
pop
push
inc
sahf
cli
mov
push
xchg
leave
and
pop
inc
or
fwait
jnp
test
orl
nop
sbb
scas
mov
mov
dec
int
dec
xchg
adc
jnp
lret
jmp
mov
into
dec
adc
mov
fsts
push
mov
jp
xchg
das
imul
imul
inc
mov
cmpsl
inc
outsl
or
aas
push
mov
xchg
mov
incb
repnz
loop
and
pop
ret
or
sar
mov
push
ret
xchg
sbb
xor
imul
cmp
es
add
stos
inc
push
cwtl
xchg
stos
add
pop
sbb
adc
out
jno
or
ljmp
das
xor
movsl
sarb
add
fwait
pop
pop
repnz
sbb
push
mov
adc
rorb
mov
call
addr16
cmp
adc
xor
fcomi
aas
insb
sarb
adc
lea
stos
push
int3
bnd
movb
in
dec
test
scas
mov
pmulhw
xchg
sub
out
jne
pop
pop
mov
out
push
jecxz
mov
cmp
cmp
sahf
daa
pop
adc
int3
adc
and
pop
and
pop
clc
test
je
or
mov
daa
leave
push
lret
pusha
rclb
out
cmc
xor
scas
mov
iret
cs
pop
into
xchg
test
imul
fs
dec
or
sub
jb
aas
and
movsl
ret
mov
mov
push
mov
xchg
icebp
ja
divl
sbb
nop
cmp
into
data16
in
loopne
pop
addr16
push
jns
jmp
dec
cli
out
scas
or
daa
sbb
mov
lcall
fildll
test
imul
lea
lds
lock
lods
xor
lret
imul
and
and
mov
dec
xchg
jmp
mov
xchg
push
rcr
data16
push
sahf
fisttpl
add
aas
add
aaa
iret
adc
int
and
xchg
dec
outsl
inc
sub
mov
rcrl
mov
aam
inc
sub
out
cmc
xchg
dec
mov
in
mov
mov
push
xor
add
pop
rclb
xchg
iret
xlat
pop
popa
xor
mov
mov
inc
in
scas
sub
push
outsl
out
call
dec
cmp
add
or
pop
jae
fisttpl
ret
mov
je
repnz
xchg
je
scas
ret
mov
jg
into
iret
cmp
push
imul
test
loop
push
loope
pop
mov
xor
cmc
cmpl
sub
cmp
filds
in
pop
cs
popa
push
pop
adc
xchg
sub
test
inc
xor
movsb
test
jne
mov
adc
int3
jnp
aas
dec
jb
sbb
test
cmc
add
ja
addl
dec
notl
jl
jp
xchg
jno
cmpsl
sti
fisttps
push
icebp
cmpsl
mov
bnd
scas
jnp
mov
pushf
fwait
xchg
dec
xchg
or
jb
jbe
mov
inc
ret
sub
frstor
pop
sub
mov
mov
aaa
jbe
xor
dec
mov
xor
outsb
enter
aad
mov
inc
stos
xchg
inc
jg
jbe
xlat
inc
nop
xor
mov
mov
xchg
dec
xchg
inc
cltd
mov
mov
daa
bound
es
pop
stos
sub
adc
pop
push
sti
or
pop
bswap
inc
scas
ljmp
push
xlat
mov
sbb
negl
xchg
or
pop
jle
repnz
aam
push
inc
push
sub
hlt
movb
xor
mov
outsb
jge
mov
dec
pop
popfw
xor
es
mov
pushf
and
jns
scas
cmp
pop
mov
fadd
lahf
cmp
out
mov
and
or
jnp
test
test
dec
std
and
lods
aas
mov
aad
mov
cmp
insl
or
and
es
leave
or
xchg
inc
outsb
mov
les
cmp
lods
and
subb
mov
loopne
test
pop
push
das
pop
xchg
adc
dec
ret
test
testb
fldenv
xlat
sub
not
jecxz
fdivs
mov
lock
xor
or
aas
xchg
mov
or
and
push
sahf
notl
lcall
cmc
inc
shrl
push
adc
jne
iret
imul
mov
outsl
enter
imul
pop
mov
push
mov
xchg
push
mov
dec
pushf
jecxz
cld
push
mov
push
shlb
add
fnstenv
iret
out
inc
movsl
sbbl
mov
scas
xor
mov
mov
sub
popf
frstor
rorl
lret
adcl
pop
repnz
mov
adc
mov
and
jbe
out
add
add
or
je
out
xchg
cli
loopne
mov
outsl
xchg
mov
movsl
stc
sbb
js
scas
sub
jl
insl
insb
scas
jo
hlt
dec
cmpsl
mov
leave
mov
fmull
outsl
xchg
orb
pushf
inc
sahf
pop
ss
sbb
xchg
or
scas
push
shlb
fsub
cmpsl
add
imul
dec
cmp
fwait
je
mov
jmp
icebp
cli
sbb
or
pop
mov
sbbl
xor
fimull
daa
push
xchg
out
lods
test
test
jns
xor
out
in
sbb
lahf
lahf
mov
fwait
push
cmp
dec
enter
mov
arpl
arpl
stos
adcb
mov
xchg
jb
popa
mov
cmc
lret
cwtd
test
cmp
sub
cwtl
adc
mov
push
mov
imul
imul
out
loope
mov
rclb
xchg
sub
mov
sub
sbb
dec
sub
mov
dec
push
mov
jo
sub
add
inc
je
sub
mov
pop
das
mov
jg
popw
jb
dec
jae
xor
das
data16
adc
sbb
in
xchg
int
test
mov
jns
hlt
jno
inc
fiadds
pop
call
and
pop
inc
lea
xor
test
loop
inc
aam
adc
scas
pushf
jecxz
clc
dec
jae
cld
fstl
ljmp
adc
mov
xchg
movsl
sarl
or
fcompl
xor
jne
outsl
movsl
test
xchg
mov
loop
push
pop
inc
cmp
in
adc
add
mov
push
pop
pop
test
not
sbb
pop
xchg
mov
outsl
adc
sbb
enter
fst
push
cwtl
fadds
jb
adc
sbb
xorl
xchg
push
push
push
mov
imul
push
mov
mov
andl
cmp
sbb
in
and
mov
pop
mov
mov
lret
xor
inc
push
cmp
pop
imul
fmul
rorl
daa
or
call
cmpsb
xlat
mov
pop
pop
hlt
sbb
data16
mov
xchg
mov
dec
stos
inc
mov
fwait
cld
cli
popf
ss
cs
loopne
or
mov
pop
cwtl
outsl
fsubl
or
or
cmp
adc
mov
das
pop
xchg
test
fsubr
lds
stos
mov
pusha
fs
dec
into
mov
xor
push
or
jb
hlt
fwait
daa
les
insl
jg
in
sub
xorl
sbb
inc
xchg
push
sbb
fnstenv
or
pushf
push
gs
adc
aam
mov
add
sub
jl
cwtl
jecxz
jmp
lods
xchg
cwtl
and
cmpl
pop
pop
aad
scas
push
cmpsl
jp
arpl
pushf
jns
out
test
pop
lds
rclb
ja
aas
or
cltd
cs
pop
xchg
xchg
push
mov
mov
test
add
sahf
fnstcw
aam
iret
jge
hlt
pop
xor
in
xchg
mov
dec
sahf
in
cld
mov
mov
adc
xor
add
jl
inc
cwtl
ret
in
mov
sbb
mov
ja
or
add
fucomi
popa
sbb
mov
mov
xlat
xor
ret
adc
inc
mov
shl
sahf
add
movsb
sbb
push
stos
icebp
scas
lret
dec
daa
into
enter
daa
or
js
mov
add
mov
ss
hlt
ss
push
aad
lret
mov
insl
mov
cmp
or
jnp
push
mov
call
int3
les
lea
int3
inc
stos
push
pop
dec
xor
cmp
imul
sarb
dec
cmp
push
xchg
ds
roll
pop
cmp
jg
mov
loopne
and
cmp
cmp
lret
adc
imul
insb
mov
mov
inc
lret
or
sbb
push
fwait
cli
cmpsb
fcmovnb
jg
push
xchg
dec
jb
jecxz
mov
in
mov
ficoml
cmp
hlt
xorb
imul
bound
and
sbb
outsl
or
add
mov
jp
fadd
xorl
cmp
inc
testl
push
ljmp
addr16
cltd
mov
mov
and
aam
test
jl
mov
mov
sbb
insb
out
xchg
leave
dec
mov
dec
pushl
add
cmp
ljmp
fbstp
cmpsb
ret
fildll
add
dec
scas
adc
gs
pop
jo
inc
dec
mov
dec
mov
mov
xchg
leave
xchg
shl
lea
jmp
lock
add
fstps
xchg
xchg
icebp
aaa
mov
lock
jmp
mov
lahf
push
testb
mov
ret
mov
lock
popf
fcompl
repz
lock
xchg
push
mov
and
jae
dec
movlps
std
loope
or
call
insb
jno
daa
insl
leave
in
adc
inc
js
sub
and
outsb
movsb
call
fnstsw
outsl
jo
adc
sub
inc
jg
int3
jo
loopne
mov
insl
pop
dec
xlat
dec
mov
insl
jmp
fisttpll
dec
xchg
rcll
adc
adc
repnz
arpl
jno
fcoms
test
sub
lods
push
push
insb
sbb
hlt
jge
cli
fnstsw
and
cmp
inc
xor
js
mov
js
inc
cwtl
repnz
lea
hlt
neg
xor
test
cmpsl
jl
or
bound
or
pop
ljmp
sub
push
iret
add
int
pop
mov
xor
jnp
push
add
mov
test
aad
xor
iret
cli
sbb
sbb
sbb
fists
xchg
rcl
fs
fnstenv
out
out
div
cmp
test
jns
wbinvd
jecxz
imul
outsb
jmp
fsubl
aad
stos
cmp
mov
stc
jo
mov
sub
mov
je
jl
dec
xchg
jnp
push
or
sbbl
or
cltd
sub
das
pop
add
cmp
cmc
mov
rcll
pop
mov
mov
mov
jge
adc
add
sub
inc
lcall
or
test
popa
jle
into
xor
aaa
mov
or
push
jns
inc
xor
in
jmp
les
mov
push
lods
cmp
jge
in
out
bound
and
orl
psubb
dec
cli
gs
js
add
push
xor
movsb
repz
shll
fs
dec
sbb
mov
imul
sub
jbe
cmpsl
dec
mov
fidivrl
and
enter
dec
test
test
add
stos
dec
add
dec
sahf
pop
add
pop
xchg
cli
dec
rclb
add
xor
push
jge
cmpsb
stos
das
mov
popa
shrb
adc
lods
jl
cmp
and
sbb
sub
test
jbe
stos
sbb
daa
in
arpl
shrl
cmp
pushf
jp
mov
inc
xor
mov
decb
cmpsl
sahf
int3
lods
mov
adc
cli
mov
loop
and
push
imul
fbld
cs
mov
pop
sti
jno
xchg
pop
add
mov
pop
les
stos
sbb
repnz
inc
cwtl
jne
pop
push
ror
imulb
push
and
aaa
jne
jnp
mov
cltd
testb
mov
or
mov
sarb
mov
adc
cmpnltps
mov
mov
cmpsl
fstl
cltd
scas
and
xchg
hlt
xchg
out
and
inc
scas
das
pop
lods
bound
iret
into
push
lcall
pop
adc
fsubl
rcll
pop
jno
ljmp
scas
insl
movsl
mov
stc
jg
les
sub
out
rcl
sbb
lahf
leave
push
test
or
das
in
aas
divl
jae
push
add
cmpsb
stos
lret
adc
mov
mov
repnz
sti
aad
or
dec
xor
enter
rorl
xchg
dec
daa
test
cld
ficomps
push
pop
add
xchg
outsl
lods
fsubl
cltd
dec
ja
lods
mov
dec
sti
mov
popf
faddl
jl
test
outsl
pop
jle
je
popa
push
cmpsl
fldl
addr16
movsb
cmc
daa
mov
and
xor
icebp
or
sub
aas
mov
push
mov
loop
movsb
pop
cs
xchg
push
cmpsl
adc
mov
inc
sbb
outsl
or
pop
push
sub
jge
push
or
fidivl
shlb
mov
popa
mov
jbe
cwtl
push
inc
ja
mov
inc
inc
lret
aam
xchg
movswl
push
jb
or
and
mov
test
sbb
jnp
negl
inc
mov
cli
std
or
xor
sbb
add
jb
test
ret
sarl
pop
clc
popf
dec
outsb
add
or
and
addl
mov
adc
mov
adc
jo
mov
mov
xchg
lahf
push
pop
in
add
pusha
lret
ds
xor
dec
inc
andb
inc
push
mov
xchg
or
push
test
test
stc
xor
or
shl
rorb
sti
push
test
rolb
mov
push
mov
in
xchg
mov
daa
xchg
add
in
stc
adc
mov
xor
mov
push
push
and
dec
out
ljmp
dec
xchg
or
rcll
shll
notl
sbbb
in
notb
aas
sbb
adc
loope
or
adc
push
push
push
sbb
mov
mov
and
enter
dec
adc
inc
fistpl
mov
jg
and
cltd
stc
insb
int
jg
movsl
pusha
or
sbb
mov
push
fwait
ds
into
mov
fisttpl
add
or
xor
add
in
and
xor
push
mov
lock
adc
gs
incl
fdivp
into
mov
mov
daa
xchg
push
out
movsb
jo
dec
ljmp
ret
pop
cmp
inc
add
lods
mov
loopne
jno
fwait
sub
iret
imul
xor
jle
adc
mov
repz
xchg
pop
mov
test
fs
push
ret
ds
ljmp
aad
push
add
rorb
sti
jp
mov
jne
and
gs
mov
push
mov
push
xor
in
sbb
rcrb
lea
clc
jno
test
ja
adcl
add
mov
cs
andl
dec
int
scas
sahf
je
stc
mov
in
xchg
sub
jge
repz
ljmp
jl
imul
outsl
es
inc
add
jb
rcll
ss
dec
or
cld
and
or
cs
out
adc
dec
js
jnp
push
inc
das
aam
push
or
cmp
lahf
mov
dec
xor
and
popa
push
adc
aaa
popf
dec
loope
xchg
pop
in
test
arpl
and
mov
lfs
and
mov
and
int3
cld
mov
pop
mull
mov
mov
jo
fmull
cmpsb
icebp
jb
call
push
dec
data16
lret
mov
pop
pop
sbb
or
xchg
pop
scas
aas
push
ds
fwait
inc
fldcw
dec
dec
pop
jne
inc
xchg
xorb
lock
xor
add
dec
fwait
jle
fildl
jo
stos
xor
jecxz
xor
mov
aas
jae
jecxz
stos
or
fbld
cs
movsb
test
je
imul
int
movsb
cmpsl
enter
mov
add
lds
outsb
mov
cltd
and
sbb
adc
aam
and
cmp
arpl
mov
daa
cmp
pop
in
or
sbb
mov
sahf
inc
cwtl
dec
cmp
pop
jbe
sahf
ljmp
out
mov
nop
and
fisubs
enter
xor
call
mov
nop
dec
stos
xchg
mov
mov
repz
mov
and
jb
ljmp
fcmovnu
pop
jge
push
std
xchg
in
push
mov
in
inc
inc
mov
fstps
ss
jns
or
push
xor
sbb
fimull
out
adc
or
movsb
adc
push
mov
sbb
cmc
xor
in
icebp
add
sbb
xchg
shlb
add
leave
lret
dec
fisubs
push
push
daa
nop
sbb
push
mov
mov
lods
push
push
fsubrl
lcall
inc
in
in
push
test
pop
test
mov
inc
dec
fstpl
ljmp
jns
pop
cmp
push
jmp
sahf
sbb
mov
pusha
sub
ss
lods
aaa
leave
pushf
cmp
test
mov
dec
shrl
out
es
xchg
push
leave
push
aam
sub
cmp
scas
fwait
adc
pop
movsb
imul
pushf
data16
lcall
jnp
test
in
push
loope
test
mov
sub
dec
ret
and
int
popa
lcall
iret
bound
dec
call
insl
pop
pop
into
ud2
dec
add
ret
adc
cmp
fldl
sub
dec
push
pop
and
popa
pop
rcr
out
or
jge
push
fbld
negl
std
insb
sbb
mov
int3
sub
ss
push
jne
push
in
cwtl
sbb
ljmp
push
sbb
push
fcompl
push
xor
mov
inc
in
and
adc
pop
mov
lahf
mov
dec
in
xor
push
pop
stos
ficomps
int3
xchg
pop
int3
sub
mov
addb
lret
push
jge
xchg
xchg
lds
adc
sub
std
inc
mov
jnp
push
call
inc
jae
pop
jle
in
les
ret
je
adc
mov
or
or
lahf
ljmp
jno
cmp
dec
pop
add
in
cmp
in
mov
pop
lds
inc
dec
xor
loopne
pop
les
sbb
cmp
lea
test
flds
cmpsl
push
stc
mov
scas
fiaddl
fidivrl
addl
aad
sahf
outsb
mov
into
fdivs
jno
sub
adc
pop
test
xchg
or
pop
iret
notb
jno
xor
or
fsubrs
adc
test
sbb
je
insb
stos
pop
mov
popl
or
movsl
jbe
pusha
xor
pop
mov
mov
call
lcall
add
mov
mov
adc
mov
out
aad
movsl
movsb
cmp
jle
dec
sub
jecxz
add
xor
sub
xorb
cmc
lods
push
daa
sahf
bound
outsb
sahf
add
ss
into
stos
sub
out
inc
sub
sti
icebp
xchg
pop
repnz
das
movsl
jns
xchg
fcompl
push
jecxz
ds
pop
dec
in
mov
sub
andl
mov
popa
stos
gs
mov
aaa
pushf
ja
dec
in
push
iret
mov
enter
lret
xchg
add
mov
add
lea
sub
cmpsb
movsl
xchg
dec
movsl
sub
adc
scas
xlat
xor
push
shlb
test
jo
add
sub
js
insl
clc
out
push
dec
stos
lcall
test
ss
loope
adc
cmc
call
xlat
orb
pop
movsl
or
jno
adc
div
push
adc
fs
pop
imul
fnstsw
push
daa
xchg
mov
xchg
jge
pop
cmpsl
xor
adc
xchg
sahf
cmp
cmp
ljmp
loope
cwtl
sub
add
xor
push
outsl
sbb
push
scas
adc
lcall
dec
popa
shrb
scas
lods
cmp
sbb
fsubs
mov
mov
push
pop
cmp
xchg
mov
int3
pop
aam
movsl
lahf
add
sti
cmp
inc
add
inc
add
popf
push
in
pop
and
cli
repz
lea
js
lcall
shll
andb
mov
fcmovne
pop
jno
and
adc
push
cmpsl
adcb
imul
mov
mov
fldl
fidivrl
int3
sub
stc
xchg
sub
xchg
xchg
fld
pop
push
int3
mov
jne
rcrb
add
sub
ret
mov
nop
sahf
cmc
cmpsl
lods
push
sub
pop
es
lock
pop
dec
mov
out
shll
push
adc
jp
adc
dec
pop
add
add
cmp
add
test
push
push
mov
aas
mov
inc
hlt
cs
dec
hlt
popa
push
out
push
jne
inc
fisubs
cmp
sbb
push
xor
jno
push
cmp
lret
xor
or
push
adc
ret
xor
jns,pt
js
paddsw
icebp
outsb
imul
mov
and
mov
jl
jmp
and
cmpsb
cli
xchg
push
xchg
push
adc
sbb
out
popf
cld
lret
mov
mov
push
in
push
dec
test
jbe
test
fsubr
xor
add
nop
jns
xchg
roll
fwait
pop
push
adc
ds
les
ret
add
subb
pop
jmp
lods
in
mov
loop
inc
in
pop
add
mov
pop
cltd
mov
lret
repz
in
cmp
inc
xchg
add
sahf
repnz
or
in
fwait
cltd
sub
jg
cmpsb
pop
cmp
pop
scas
ja
jae
sub
pusha
rcl
out
jns
mov
push
aam
fs
add
jge
or
cltd
lahf
lea
icebp
arpl
cwtl
rorb
popa
fidivrs
sbb
decl
mov
mov
pop
pop
mul
scas
xchg
rorb
sub
dec
adc
rcll
xchg
mov
sbb
push
inc
rorb
mov
call
mov
pop
ss
push
fadd
cwtl
mov
lods
adc
xchg
lods
int
mov
adc
pop
testl
adc
dec
leave
lea
lret
cltd
pusha
push
lds
pop
movsb
or
imul
push
iret
inc
mov
cmp
into
jge
daa
daa
idivl
xchg
cmc
rcll
clc
sub
push
cwtl
andb
jle
jne
test
and
stc
pusha
pop
and
mov
bound
movsl
jmp
cld
dec
mov
cmp
into
mov
in
fmuls
mov
mov
inc
cld
push
sbb
orb
inc
andb
sub
sub
pop
dec
adcl
test
mov
stos
ljmp
cmc
cmp
test
and
movsb
jbe
sub
enter
inc
ret
stos
movsl
pop
inc
xchg
sub
shll
xor
mov
cwtl
lock
inc
push
sbb
outsb
imul
mul
cmp
or
mov
push
outsl
nop
mov
lds
je
es
lcall
jbe
iret
jnp
ds
inc
mov
or
into
adc
into
pusha
mov
cwtl
fnstsw
incb
dec
push
mov
adc
lss
cli
push
jae
xchg
ja
dec
ficoml
sub
repz
ret
and
test
shlb
mov
xor
adcl
push
nop
and
es
cmpsb
fcmovbe
pusha
fisttpl
mov
outsl
lds
mov
jmp
jnp
jo
nop
sbb
insb
or
fwait
enter
mov
js
sbb
outsb
xchg
jne
icebp
pop
jno
mov
shr
leave
pop
notl
cmpsb
imul
scas
add
pop
cmp
movsl
scas
push
das
mov
jne
fistl
pop
pop
pop
dec
mov
fmuls
clc
fwait
and
mov
inc
pusha
mov
pusha
cmp
jmp
mov
add
shlb
lds
inc
lcall
add
dec
lret
adc
ficoml
outsb
xlat
sub
aam
sbbb
xchg
call
pop
lahf
push
mov
inc
clc
je
xlat
sbb
and
sub
xchg
lret
cltd
mov
imul
fdivrs
mov
stc
xor
shll
loop
call
xchg
jecxz
rolb
lds
xor
fimull
data16
sub
js
in
test
inc
dec
lret
in
aaa
jnp
sub
jmp
xchg
push
inc
test
sbb
fnstcw
aas
pusha
and
inc
sarl
test
mov
xor
mov
hlt
push
movsl
fdivl
xor
sbb
cmc
adc
test
aad
mov
mov
out
sub
cmc
test
aam
and
xchg
mov
cmp
pop
pushf
stos
test
mov
leave
inc
cmp
cmp
sarl
inc
pop
mov
and
mov
fldl
and
pusha
mov
movsl
roll
sahf
cltd
cmpsb
jg
or
iret
out
xchg
inc
test
xchg
nop
fisubl
int3
rcrl
pushf
xor
lcall
popf
inc
test
cwtl
inc
out
xchg
iret
push
inc
pop
sub
iret
mov
sub
lods
pop
enter
outsl
fadd
sub
push
adc
push
das
pop
push
enter
shlb
test
mov
push
pop
fsubrl
and
mov
mov
jge
subl
nop
mov
mov
cmp
push
notb
scas
add
aaa
cs
push
test
pushf
cmp
pop
mov
mov
lods
adcl
cmp
xchg
push
data16
cld
nop
test
clc
aam
sub
pusha
or
stos
push
inc
mov
jbe
orb
imul
mov
jg
incb
or
cmp
fucom
xchg
sub
or
push
adc
mov
int3
mov
pushf
xlat
or
clc
xchg
arpl
xchg
jecxz
xor
adc
sub
adc
sbb
xchg
stc
in
xlat
pop
and
fwait
mov
pop
ss
jg
xchg
sub
pop
rcll
cmp
cmp
cli
enter
sbb
stc
push
mov
insb
add
fcmovbe
rorb
nop
nop
ja
fwait
push
sbb
inc
cmpsb
rcrl
pop
mov
lret
scas
xor
pushl
ja
dec
in
dec
jge
xchg
pop
outsb
pusha
out
in
ret
fwait
jmp
push
leave
sub
mov
mov
idiv
js
sub
fdivs
cli
push
jno
pushl
cmpsb
jp
in
push
lahf
push
aam
test
fs
cltd
mov
das
push
pop
jae
dec
push
in
mov
mov
pushf
xchg
mov
cmc
mov
mov
dec
repnz
adc
xor
movsb
jle
push
cmp
mov
sub
mov
push
sbb
cltd
jbe
rcrl
int3
das
lods
ljmp
push
xchg
sub
test
add
cs
sbb
fnstenv
loop
in
ficomps
dec
cld
es
iret
adc
jo
addr16
mov
sub
pop
rcrl
scas
inc
out
sbb
mov
lods
jae
test
das
jbe
inc
jmp
pushf
aaa
mov
popa
adc
testl
add
add
lret
sub
dec
fsubp
jne
rcrl
push
pop
test
lret
ja
insb
and
sub
outsb
sub
outsl
cmpsb
cmp
cmp
test
push
data16
and
xchg
mov
sub
pop
pushf
dec
pop
cmp
adc
mov
jne
icebp
pop
xor
cmp
jo
sub
sbb
stc
or
adc
pop
mov
or
test
jmp
into
push
mov
stc
mov
sbb
in
leave
xor
sti
es
aas
mov
push
pop
js
pop
or
push
sub
call
daa
aas
adc
jmp
mov
jle
hlt
or
jae
xor
push
popa
leave
hlt
dec
enter
test
mov
adc
popf
and
jnp
sbb
and
stos
jb
mov
add
test
dec
cmp
mov
mov
packuswb
sub
adc
das
mov
pop
ds
sub
mov
lods
popf
pop
fidivs
pop
aam
out
imul
dec
adc
pusha
ret
add
fsubrs
std
mov
dec
cld
cmp
add
and
repz
mov
dec
daa
aam
rol
pop
xchg
loope
ss
int
cmp
cld
sbb
add
iret
mov
or
popf
sbb
in
repnz
and
mov
mov
lcall
test
and
outsb
adc
and
lea
inc
cltd
and
movsl
mov
mov
jo
xchg
fcompl
cmp
or
add
imul
outsb
adc
mov
cld
sub
popa
ljmp
mull
test
jp
push
cmp
adc
adc
ret
lods
shlb
sbb
lock
push
add
push
dec
cmp
sbb
test
push
cmp
inc
sub
xchg
test
movsb
cmpsb
dec
stc
sub
mov
dec
mov
jl
and
push
cld
inc
pop
fistps
imul
mov
lret
or
adc
mov
clc
movsl
fwait
or
sbb
lret
repz
add
cwtl
or
dec
mov
xor
outsb
inc
mov
loope
add
push
mov
push
push
out
dec
sub
xchg
sbb
add
push
and
jo
cmp
push
das
and
jecxz
cmpsl
dec
jle
into
je
jbe
jno
push
int3
imull
loop
test
movsl
outsl
stos
sbb
lods
push
pop
pop
cmp
and
repz
shl
ds
ret
cltd
push
xlat
jno
int3
push
lds
mov
pop
fidivrl
push
push
pop
mov
adc
das
sub
lret
mov
testb
jo
and
int
mov
inc
sbb
cmp
cmp
inc
and
sbb
jae
scas
dec
xchg
xor
cli
dec
aad
test
add
outsb
jg
jmp
movb
iret
xchg
jnp
jo
sbb
mov
clc
fmull
call
mov
xor
loop
cmp
jge,pn
jnp
repz
cli
loopne
loopne
push
push
es
mov
push
stos
jmp
or
scas
cmp
pusha
xchg
mov
sub
xor
and
aam
pop
test
pop
sbb
mov
clc
jb
nop
inc
in
adc
add
pop
mov
mov
mov
push
stos
sbb
mov
add
mov
rcl
mov
mov
int
push
or
fsubrs
loope
leave
pop
mov
jmp
mov
push
test
stos
cmp
out
pop
out
ja
sub
dec
cmp
testl
fdiv
mov
xchg
and
nop
negl
jge
popf
adc
das
dec
repnz
push
mov
loopne
dec
and
jl
cmc
in
movsl
cmp
popf
popa
push
xchg
cmpsb
jbe
gs
stos
jo
loop
cwtl
cmpsl
adc
pop
jmpw
or
ds
push
add
pop
clc
shll
sbb
dec
sub
rclb
sub
xchg
xchg
or
add
jl
adc
repnz
xchg
les
jo
sub
iret
rcrb
xchg
lahf
sub
test
and
shll
imul
inc
imul
lock
sbb
lea
mov
and
rclb
or
outsl
stos
in
or
add
cmp
push
fisubrs
loope
call
cli
movsb
stc
out
and
sub
shlb
lret
leave
lahf
fidivs
lods
mov
dec
test
fists
inc
add
jns
sti
or
or
ss
popf
dec
fs
ja
fsubrl
sbb
rorl
or
sub
aam
cmp
jb
xor
inc
push
sub
mov
ror
push
jb
out
scas
jno
imull
enter
ja
jnp
fimuls
dec
popf
cmp
xor
pushf
in
lahf
pop
shlb
loope
xchg
push
push
mov
ret
sti
fwait
jne
and
sti
push
and
sbb
loop
push
dec
push
and
pusha
cld
adc
test
iret
sub
jno
mov
mov
and
push
imul
lea
mov
cmc
repz
out
sub
in
cmp
mov
jge
mov
mov
xchg
dec
cmpsl
das
cmpl
push
int
adc
movsb
pop
push
clc
cli
bound
dec
dec
add
fwait
dec
adc
jns
pop
push
dec
int
lret
imul
ss
ficompl
xchg
out
fnsave
arpl
stos
push
adc
mov
call
rcr
jge
push
js,pt
sbb
mov
stos
loop
cmpsb
xchg
xchg
das
sub
clc
sub
fnstcw
adcl
call
addl
mov
jae
push
std
leave
pop
sub
push
dec
aaa
mov
sub
clc
popa
adc
xchg
push
mov
inc
ret
call
mov
mov
pop
ret
dec
imul
leave
jne
push
int3
out
pop
mov
xchg
pop
cmpsl
xlat
adc
pop
or
aam
ret
out
popa
cmp
mov
jg
adc
out
push
es
push
ja
adc
inc
add
pushf
jne
inc
mov
int3
mov
test
xlat
icebp
and
jge
and
sub
or
fnstsw
adc
loope
aam
xchg
inc
int3
test
fisubrs
cmp
pusha
mov
loope
out
nop
cli
xchg
lods
sbb
and
inc
incb
push
bound
out
cmp
movsl
sub
and
dec
stos
hlt
push
lret
test
lcall
pusha
xor
sbb
je
fdivrl
add
xchg
pop
mov
aam
mov
and
outsl
and
jle
in
lret
sub
out
inc
fstpt
arpl
pop
and
imul
cmpsb
mull
jb
cmp
out
pop
in
mov
jo
repz
pop
cwtl
and
fstl
sbb
jno
or
daa
sbb
or
sar
mov
push
int3
outsl
sub
rcrb
hlt
test
or
xchg
ret
or
cmc
insb
mov
outsb
sub
loop
shlb
cmove
xor
stos
push
mov
mov
mov
mov
out
icebp
fbstp
pop
paddusb
outsb
lods
data16
fistps
jecxz
add
rcrb
shrb
fstpl
adc
sub
sbb
xchg
andb
and
push
adc
inc
add
lock
sbb
push
sub
popa
rcr
jle
mov
arpl
cli
xchg
push
rorb
push
es
push
add
mov
mov
aaa
sbb
rcr
jle
push
inc
xchg
and
xchg
inc
sub
pop
mov
loop
rorb
inc
scas
pop
jns
test
push
pop
adc
inc
add
imul
jnp
jnp
pop
out
cli
imul
fldcw
clc
outsb
inc
and
nop
pusha
mul
jmp
cmp
inc
inc
pop
push
jnp
std
in
jp
inc
jae
fcmovnu
cld
ja
inc
ret
cwtl
push
xchg
fstl
inc
movaps
scas
out
mov
sub
scas
sub
or
stos
pop
popa
and
dec
fcomps
out
popa
mov
lahf
sbb
jge
jo
outsl
fstps
shl
mov
pop
imul
mov
shrl
sbb
std
clc
je
lock
das
lret
push
sub
gs
xor
or
dec
cltd
mov
in
xor
mov
xlat
jns
pop
insb
pushf
out
sbb
stos
sub
mov
fsubl
sub
mov
xchg
add
imul
xchg
leave
iret
adc
out
inc
in
inc
addr16
and
jno
dec
push
sub
xor
and
xchg
mov
ja
and
sti
sbb
mov
pop
lods
ljmp
jge
aad
daa
stos
mov
lea
mov
sbb
sub
in
adc
mov
addl
cli
out
mov
adc
call
or
leave
sbb
nop
cld
enter
sbb
dec
movb
mov
sbb
fnsave
and
pop
sbb
or
mov
sahf
adc
jge
push
je
sti
mov
mov
push
cmp
cmpsl
mov
mov
sub
into
fisttpl
pusha
ss
cmp
sbb
add
mov
ja
xor
adc
jnp
push
xchg
dec
cmp
add
loopne
dec
not
cmpl
jnp
push
push
imul
dec
in
testl
sub
inc
fs
dec
sbb
mov
xchg
dec
mov
adc
aaa
loopne
popa
mov
cltd
push
shlb
mov
aam
push
scas
ret
jge
dec
test
sti
sbb
xlat
arpl
stos
push
adc
out
and
out
pop
sbb
jle
dec
inc
scas
mulb
adc
jmp
or
push
push
cmp
dec
bound
lods
mulb
cltd
rclb
or
push
mov
mov
loopne
or
fcmovnu
faddl
push
sbb
jle
les
inc
fisttpll
adc
clc
out
cmp
in
mov
imul
arpl
cwtl
mov
mov
fistps
sti
or
popa
push
and
fstpl
loopne
js
ret
fldcw
mov
nop
mov
push
dec
stos
pushl
imul
push
pop
push
aas
lea
cmp
sub
pushf
fbld
sbb
xor
insl
jns
mov
jl
lret
ficompl
pop
and
idivb
gs
daa
fldt
jno
mov
xor
loop
sti
ja
gs
jg
dec
jle
imul
jl
out
shrl
dec
adc
xchg
std
pushf
xlat
std
cwtl
jp
rcr
in
cld
cmp
add
pop
xchg
add
dec
mov
fidivrs
pop
rep
mov
dec
neg
jg
sahf
leave
mov
loop
dec
push
inc
mov
leave
sbb
cmpsl
adc
pop
stos
mov
ja
aaa
dec
pop
fisubl
mov
stos
fdivrl
xchg
jae
mov
stos
jbe
jle
jns
dec
and
add
scas
cmp
dec
mov
mov
add
cmp
cmpsb
shll
mov
xchg
daa
mov
jae
mov
fwait
test
adcb
adc
out
lcall
fmuls
sub
adc
pop
sub
push
jns
shl
std
stos
inc
shr
lock
add
lcall
out
das
dec
addr16
mov
bound
and
into
into
push
repz
add
in
loope
jecxz
mov
out
mov
add
outsl
lret
adc
mov
sbbb
loope
pop
xchg
jecxz
cmp
test
push
mov
pop
dec
jno
and
xchg
jo
shr
les
mov
psllq
decb
fs
ljmp
bound
pop
add
test
stc
int3
sub
in
jno
xchg
pop
fwait
jae
mov
std
outsl
fsubrs
prefetch
icebp
sbb
push
sub
sub
nop
xchg
cmpb
or
adc
icebp
xchg
adcl
sub
xchg
or
or
shl
fwait
mov
and
and
mov
or
push
mov
enter
aam
push
sbb
or
xor
cmpsl
pop
dec
sti
and
nop
xor
jnp
push
into
push
xor
lock
sub
insb
adc
push
fyl2x
xlat
inc
xchg
xchg
out
inc
pop
dec
pop
shll
xor
inc
dec
adc
rcl
push
pop
xor
imul
push
or
jl
mov
addl
or
adc
mov
mov
add
aad
lds
sub
hlt
in
or
xor
test
out
xor
pcmpgtb
stos
and
into
inc
push
jl
cmpsb
lods
test
push
into
sbb
push
fdivr
imul
inc
xor
pop
cmp
pushw
cwtl
jns
cmp
mov
mov
push
mov
shlb
int3
subl
push
fmuls
or
jnp
or
pop
and
xchg
jge
addr16
adc
push
icebp
or
stos
ds
rcll
xor
aaa
popf
sbb
xor
mov
mov
mov
inc
cmp
aaa
aaa
push
fs
adc
pop
and
jnp
pop
scas
cld
cmpb
xchg
cmp
mov
fcompl
cwtl
data16
lret
mov
adc
and
cs
xor
roll
mov
iret
shrl
js,pt
ds
push
fwait
jmp
shlb
dec
xchg
sbb
cmp
push
dec
dec
mov
cmpsl
xor
dec
sub
pushf
and
push
test
scas
testl
mov
sub
aad
mov
pop
jecxz
jmp
jecxz
out
pop
insb
xchg
mov
jne
hlt
repz
xlat
mov
daa
loopne
out
imull
out
int3
cmp
cwtl
icebp
out
xchg
test
pop
orl
cmp
mov
test
hlt
stos
mov
xchg
fidivs
xor
cmp
and
lds
sbb
adc
pop
repnz
sub
in
inc
mov
mov
cmc
out
sub
cmp
out
mov
and
in
xlat
jl
fcompl
pop
xchg
push
push
mov
pop
mov
sbb
int3
pop
ret
pop
xor
aam
shrl
mov
rclb
cltd
into
subl
das
xor
dec
jg
pop
xchg
adc
int
rorb
add
sbb
ljmp
sub
mov
sbb
xchg
test
lods
es
or
xor
nop
test
aam
arpl
xchg
addr16
xchg
push
dec
aas
or
sbb
bound
fisubrs
push
ficoml
stos
loope
test
inc
mov
call
add
mov
lret
adc
sarl
cwtl
sbb
jnp
scas
imul
jl
and
cs
cmc
push
dec
out
cltd
sar
cmp
aad
test
pusha
and
leave
mov
jns
adc
sahf
adc
xchg
aaa
repnz
dec
push
insb
outsb
mov
jmp
mov
or
imul
mov
push
testl
push
mov
jecxz
ljmp
jne
and
jecxz
insl
xor
mov
fs
pusha
xchg
je
test
ljmp
jbe
pop
xor
and
and
push
cmp
add
sahf
pop
jno
cmp
frstpm(287
mov
pop
and
iret
jae
inc
jae
cld
cmp
jns
ret
out
test
lret
call
push
subl
inc
mov
and
jno
mov
vpcmpeqd
and
cmp
xor
jbe
dec
lock
jg
pop
fs
scas
ljmp
and
mov
mov
nop
cmc
xor
or
clc
int3
jae
lahf
fiaddl
jo
pop
sbb
loope
mov
add
mov
push
cld
and
cmp
imul
cmpsb
lcall
adc
daa
and
push
pushf
mov
repnz
movsl
enter
push
stc
push
cmp
out
sbb
cmp
imul
xor
push
mov
xchg
cld
ja
mov
add
or
push
jnp
jmp
adc
add
icebp
or
fsubs
mov
inc
add
cmpl
jbe
sar
clc
shll
lea
or
pop
adc
inc
mov
and
in
and
loop
sub
lret
dec
jg
adc
pop
iret
in
shl
int3
adc
das
mov
pop
cmc
push
and
cltd
inc
outsl
ret
psadbw
pop
sub
push
sbb
clc
xor
jmp
add
push
dec
push
jl
ret
mov
cmp
je
mov
mov
sahf
xchg
imul
mov
xor
adc
xor
sub
add
test
lods
jns
fisubl
mov
sahf
xchg
test
cld
dec
xchg
adc
or
in
mov
pop
enter
shrl
or
fadds
or
js
sub
ja
into
sub
test
leave
sbb
jnp
or
jae
loopne
push
push
scas
clc
jl
stos
movsl
out
fsubrl
and
imul
test
dec
sti
shr
das
jmp
insb
mov
pop
add
mov
iret
rorl
mov
jl
push
or
sub
in
scas
jl
sub
sub
mov
fcmovnbe
ret
jmp
cmp
or
inc
fildl
push
mov
imul
adc
shld
mov
stos
lods
inc
pop
jmp
sbb
insb
lret
mov
mov
popf
sbb
addl
or
jecxz
or
stc
jmp
scas
cmpsl
jg
adc
mov
and
test
inc
xchg
std
std
dec
cltd
jecxz
push
sub
arpl
adc
push
gs
sbb
mov
or
stos
sub
pop
mov
dec
insl
es
xchg
xor
xchg
mov
sbb
loope
pop
adc
mov
pop
aam
dec
enter
mov
repnz
and
adc
fisubrl
cmp
hlt
dec
and
fisubs
test
fwait
dec
nop
add
dec
imull
sub
mov
and
inc
lret
repz
leave
cmp
push
sub
mov
mov
lods
and
mov
push
mov
jb
aam
push
aas
mov
call
add
or
mov
or
out
sbb
mov
dec
je
out
push
movsb
jb
std
dec
mov
lods
lret
in
arpl
roll
js
jnp
cmpsb
rcr
aad
sub
iret
jae
mov
pushf
and
jle
jecxz
xchg
push
jmp
loopne
jb
xor
mov
add
jae
popf
andl
pushf
loop
out
aad
ficoms
shr
iret
adc
mov
xlat
pop
cmp
cmpsb
mov
lods
mov
xchg
subb
xor
scas
stc
push
adc
out
test
xchg
test
xor
insl
pop
xor
push
cmpsb
ficoml
adc
stc
pop
sbb
test
cmp
sbb
cld
mov
pop
add
push
out
mov
sbbl
mov
outsl
lock
mov
mov
lods
dec
lahf
pusha
jne
xor
test
fwait
and
xchg
mov
jge
mov
cmpsl
outsb
or
insl
inc
rcrb
add
or
int
pop
mov
dec
pop
mov
mov
jne
icebp
sbbb
pop
xor
jecxz
xchg
stos
adc
mov
push
jb
jne
scas
rcll
pop
mov
jmp
pushf
inc
fiadds
ljmp
xor
jp
arpl
enter
jle
in
pop
in
std
pand
nop
and
sub
push
push
aad
and
xor
xchg
sub
out
js
cmpsl
inc
iret
les
sub
test
adc
addl
pop
pop
push
sti
xor
int3
dec
sar
aad
mov
rcr
xor
ret
lret
loopne
js
jg
frstor
push
mov
shl
mov
mov
push
mov
insl
pop
mov
pop
out
sub
mov
shll
jle
test
xchg
and
inc
filds
and
sti
mov
jmp
pusha
push
and
movsb
shl
push
test
cmpsl
sub
in
das
sbb
fcmovnb
ficoml
imul
and
xlat
daa
orl
cmp
mov
push
and
fdivl
dec
push
aaa
rcll
fcoml
ss
pop
ljmp
in
fisubrl
jne
test
addb
sarb
push
jb
out
sub
push
push
insb
in
pusha
jae
mov
lahf
mov
addr16
leave
mov
jbe
repz
mov
mov
inc
popa
xchg
jg
jg
push
pop
jbe
leave
mov
into
sbb
stc
xchg
jmp
mov
adc
sub
jo
pop
inc
testb
insb
outsb
add
sub
sub
mov
inc
into
fs
lret
and
cmovns
shr
aaa
fs
int3
fstps
and
pop
fisttpl
test
jae
ret
in
dec
ljmp
test
insb
sbb
imulb
cltd
xor
mov
or
and
ret
std
insb
int
jb
sbb
std
inc
clc
lock
sbb
cld
fwait
or
push
cmp
jl
push
mov
lods
sahf
ja
ds
je
mov
shrb
lret
fbstp
into
pusha
sub
mov
inc
callw
pop
fwait
test
xlat
mov
cmp
std
ffree
fiaddl
popf
sub
sub
outsb
push
jnp
shrl
and
cmpsb
nop
mov
dec
xchg
xor
pushf
int
xchg
add
push
pop
inc
sbb
cmp
insb
xchg
daa
aam
cmp
clc
out
sub
adc
lcall
cmp
aas
cmp
add
test
adc
data16
test
rorl
sub
add
into
add
in
push
push
outsb
imull
xor
stos
repz
test
inc
out
cwtl
or
inc
inc
cltd
mov
inc
popl
loope
pop
stos
repnz
inc
xchg
xor
dec
lock
ret
sbb
xchg
shll
out
movsb
fisubs
fcompl
popf
mov
je
into
inc
sbb
mov
std
imul
leave
pop
dec
ljmp
popa
dec
add
test
push
scas
sahf
shlb
shlb
mov
popa
dec
enter
fnstcw
xor
ja
sbb
std
imul
or
nop
loope
dec
xchg
jo
jns
popa
inc
pop
push
shrb
roll
es
ss
mov
arpl
mov
xchg
push
mov
inc
jb
test
rorl
sarb
ss
cmpsb
pop
jnp
lds
pop
js
jp
mov
sti
and
jmp
dec
mov
movsl
sbb
scas
and
push
movhps
cli
mov
or
cmc
xlat
pushf
add
and
sti
xchg
ja
pop
sub
hlt
jb
mov
push
lock
scas
jp
enter
call
xor
or
and
push
fs
repz
mov
dec
ret
inc
mov
dec
sub
mov
fisubs
inc
ss
sbb
or
insb
push
sti
pop
iret
stc
inc
and
sub
push
mov
mov
jle
sbb
stc
sub
daa
add
fcoml
xor
add
std
bound
dec
cmpsb
enter
in
bound
mov
js
inc
sbb
jo
mov
adc
push
add
sbb
adc
je
xchg
lahf
callw
sarb
inc
mov
mov
cmp
js
adc
lret
lahf
int
inc
mov
jne
aad
leave
xchg
sarb
ss
push
sbb
or
cltd
and
test
xchg
push
stos
iret
adc
adc
adc
outsb
and
add
int3
mov
and
and
cmp
cwtl
dec
cs
jmp
ds
scas
aas
addr16
pop
insb
mov
mov
push
xor
inc
jb
fidivrs
lods
addb
or
pop
sub
cmpsb
xor
daa
push
lea
int
cmp
cmp
or
xor
push
adc
xlat
lea
pushf
pop
mov
or
jae
jnp
inc
gs
xor
jae
int
stc
mov
jo
mov
inc
adc
xorb
rcl
test
out
inc
sbb
adc
mov
pop
jne
cmp
fwait
push
xor
sub
mov
sbb
popa
and
push
or
das
pop
xchg
jae
push
pop
and
popf
iret
push
repz
sti
test
add
jne
fisubrs
adc
sbb
mov
or
and
jb
xor
cmpsb
mov
test
testl
pop
or
add
push
mov
cmp
inc
jne
std
add
fbld
mov
lret
and
jo
and
xchg
push
arpl
dec
lock
jns
or
jnp
sbb
sub
cs
test
and
add
adc
loope
or
fiadds
rorb
stc
sbb
sub
jle
sub
ja
cmpsl
inc
mov
pop
mov
mov
lods
cltd
sti
or
dec
insb
aam
mov
mov
hlt
clc
jecxz
in
mov
stos
clc
in
insb
add
adc
mov
mov
data16
ljmp
stc
inc
cli
dec
out
loop
push
push
sbb
in
notb
jne
xor
ret
xchg
and
jo
adc
xor
cwtl
movsl
adc
or
in
stos
lcall
lods
jb
push
xchg
cmpsl
mov
jo
cmpsl
and
sub
test
pop
clc
push
inc
pop
xchg
xchg
js
push
imull
push
inc
mov
cs
mov
or
mov
dec
sbb
mov
das
jbe
nop
sbb
mov
fisttpl
inc
sbb
aam
push
push
inc
jbe
shlb
mov
xor
lock
test
xor
pop
push
inc
jo
insl
mov
in
pop
inc
xor
sub
xchg
jmp
test
mov
lret
jmp
inc
aad
mov
bound
jne
inc
or
xor
daa
insb
lcall
outsb
dec
subb
test
ret
in
sarb
mov
aad
and
fsubrp
cmpsl
or
movl
cmp
sub
dec
out
insl
ret
out
push
das
popa
lea
adc
mov
mov
subl
adc
cli
rcr
mov
sti
loopne
mov
or
inc
js
popa
jecxz
mov
or
mov
mov
scas
push
jns
neg
xor
std
push
dec
cmc
or
pusha
xor
add
mov
mov
cld
cmpsl
outsb
cmp
dec
add
lods
ja
pop
mov
mov
jmp
cmpsl
loopne
pop
cmpsb
add
dec
jne
xor
jns
arpl
mov
stc
lods
pop
aaa
rcl
mov
jg
push
lds
ret
jb
popf
and
mov
mov
add
test
fmulp
cmp
scas
aad
popf
mov
les
dec
cmp
rcrb
pop
stc
jp
mov
xlat
add
sbb
mov
in
push
ljmp
sub
cwtl
xchg
add
and
fadds
push
add
or
lock
mov
imul
gs
cld
inc
mov
and
adc
lea
dec
dec
xor
add
sbb
lret
inc
push
pop
lods
leave
cmp
xchg
pushf
add
sub
lret
sub
adc
and
push
push
xchg
ds
iret
test
test
inc
pop
inc
xchg
ss
aad
ret
mov
xchg
sbb
push
outsl
repz
out
mulb
insl
add
pop
pop
xor
xchg
inc
icebp
rolb
mov
mov
out
pop
out
push
and
push
fs
cmp
mov
call
inc
lock
clc
lock
xlat
sarb
add
or
das
js
cmp
ljmp
push
imul
sbb
pop
cmp
decb
out
shlb
iret
jne
sub
mov
inc
push
push
shll
.byte
mov
