push
or
add
add
add
rolb
add
add
push
roll
add
adc
add
add
add
add
add
add
add
add
add
add
scas
arpl
add
rolb
add
rolb
add
roll
add
roll
add
rolb
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
jb
je
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
jae
add
fistl
adc
cmpsl
pushf
pusha
call
pop
sub
lea
cmpb
je
movb
mov
sub
mov
add
lea
add
push
push
push
push
push
push
call
test
je
mov
call
pop
mov
add
push
push
call
pop
pop
mov
mov
add
mov
cmpl
jne
add
mov
jmp
mov
add
add
cmpl
je
add
mov
add
push
push
push
pushl
pushl
mov
mov
mov
add
call
pop
pop
pop
cmp
je
add
jmp
push
push
pushl
call
lea
mov
lea
mov
mov
cmp
je
mov
inc
sub
cmp
ja
mov
cmpb
je
mov
cmp
jne
mov
shr
rol
xchg
jmp
mov
xchg
rol
xchg
sub
add
mov
add
sub
mov
loop
call
lea
mov
cmp
je
mov
sub
je
mov
lea
mov
lea
mov
cmp
je
mov
add
mov
jmp
mov
add
mov
xor
mov
inc
or
je
cmp
ja
add
add
jmp
and
shl
mov
add
or
jne
mov
add
jmp
xor
xchg
mov
cmp
je
lods
or
je
add
add
jmp
xor
shr
lods
or
je
add
add
jmp
lea
mov
lea
mov
cmp
jne
add
push
push
push
push
push
push
call
pop
pop
cmp
jne
add
mov
rep
sub
sub
push
pushl
push
push
call
push
pop
sub
xor
mov
cmp
je
inc
lea
mov
push
push
push
push
push
pushl
pushl
mov
add
push
call
pop
pop
pop
pop
add
loop
mov
cmp
je
popa
popf
mov
ret
popa
popf
jmp
mov
or
je
mov
add
cmpl
jne
cmpl
jne
cmpl
jne
jmp
mov
add
push
push
push
lea
add
add
push
call
pop
pop
pop
cmp
je
mov
add
add
xor
mov
cmp
jne
inc
jmp
mov
add
push
push
push
cmpb
jne
inc
mov
and
mov
movb
push
push
pushl
call
pop
pop
pop
pop
cmp
je
mov
mov
pushl
popl
add
inc
jmp
clc
ret
jmp
push
mov
mov
mov
cld
mov
movsb
call
jae
xor
call
jae
xor
call
jae
mov
call
adc
jae
jne
stos
jmp
call
dec
loop
mov
call
jmp
lods
shr
je
adc
mov
jmp
xchg
dec
shl
lods
mov
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
pop
ret
push
call
ret
incl
mov
cmp
jne
sbb
adc
xor
or
ret
pop
mov
inc
mov
pusha
mov
sbb
popa
adc
or
push
push
and
rolb
or
push
jmp
pop
pop
call
in
mov
shl
or
dec
mov
jne
pop
push
add
push
push
mov
pop
xor
test
push
cmpb
sub
push
sbb
shr
and
jb
sub
sbbl
pusha
jae
shl
or
test
clc
dec
jne
pop
mov
dec
jp
sbb
ret
pop
mov
repnz
dec
popa
push
movzwl
fadd
sarl
push
scas
movl
jae
xor
cmc
add
lock
sub
roll
add
cmp
sbb
lahf
mov
loope
cmp
loopne
jmp
sub
dec
clc
insl
push
mov
outsl
mov
shl
rcll
ret
mov
add
pop
ret
adc
push
ficoml
jle
mov
inc
mov
or
sbb
call
out
or
jne
pop
ret
mov
shl
pop
pop
add
xchg
pop
sbb
jbe
pushf
xor
incl
jge
mov
sti
test
jle
gs
js
add
push
call
rclb
roll
loopne
inc
cld
inc
cmp
dec
jl
sbb
popa
insl
repnz
call
outsb
in
call
cmp
cmp
ljmp
sbb
les
jne
mov
shr
pop
lea
iret
loopne
add
jbe
inc
call
or
add
lock
cmp
sbb
call
fcomps
mov
test
push
cmp
icebp
call
shlb
sub
lods
add
add
call
cmp
dec
add
and
jne
sbb
and
or
add
push
clc
mov
mov
rcl
addr16
dec
cmp
adc
dec
push
icebp
inc
dec
or
enter
jo
icebp
movsb
push
sbb
int3
dec
hlt
enter
in
adc
sbb
inc
dec
clc
nop
push
in
and
add
shl
add
xor
dec
dec
sbb
or
dec
pusha
push
pusha
adc
fdivl
push
add
mov
inc
jne
sar
mov
fsubrl
and
rep
adc
popa
data16
jne
and
adc
lea
call
jge
orb
jo
pop
mov
adc
sbb
fisubs
test
adc
hlt
inc
stos
popa
and
fwait
ret
bound
inc
std
inc
adc
sbb
inc
inc
andb
and
pushf
lds
mov
inc
nop
add
in
mov
jge
xchg
add
adc
sahf
out
add
movsl
hlt
into
xor
je
and
cmp
mov
lcall
stos
sbb
xorl
or
insb
out
fcoms
xchg
push
repnz
or
xor
xchg
call
cmp
push
sbb
cmp
das
cmpsb
mov
jne
movsb
inc
setb
add
sbb
cmp
sysexit
test
pop
incl
pop
popf
shrb
clc
lea
inc
stc
hlt
cmp
mov
add
pushl
dec
mov
jmp
mov
inc
sbb
ret
dec
in
jmp
sub
enter
cs
lock
mov
xchg
sbb
fldl
dec
xor
ljmp
out
or
jmp
insb
lock
sbb
fcmovnbe
or
popf
test
pop
sub
mov
xor
or
call
add
mov
dec
add
pop
fcoms
push
adcl
jl
dec
loop
xchg
and
dec
stc
iret
xor
sub
pop
jge
adc
lock
dec
pop
add
pop
add
and
sti
movsb
sbb
dec
add
xchg
testb
fcmovne
mov
test
orl
and
xor
cmp
cmp
rcl
inc
inc
add
mov
inc
inc
cmp
inc
dec
test
mov
aam
jb
in
icebp
js
loopne
adcb
inc
rclb
test
jne
inc
js
shl
arpl
adc
mov
addb
or
add
pop
inc
jmp
push
sub
sub
jb
xor
mov
jge
cs
shrl
dec
jne
cmp
mov
sbb
xor
icebp
addb
mov
iret
push
es
sbb
jno
int
and
mov
xchg
adc
mov
and
mov
adc
sbb
mul
mov
inc
outsb
addb
add
mov
test
pop
push
clc
push
add
add
pop
add
and
sahf
arpl
add
rolb
add
test
push
jbe
push
dec
xlat
dec
ljmp
imul
ljmp
insb
cmp
mov
rcr
sbb
aas
xlat
push
or
push
jbe
fstl
sub
mov
cmp
mov
into
cs
hlt
mov
fst
push
lea
mov
daa
xor
aam
mov
jnp
pop
cmp
and
outsl
inc
cmpb
dec
lock
push
mov
clc
or
sbb
jnp
mov
ficomps
cmp
and
nop
rolb
jbe
outsl
stos
hlt
rolb
mov
fsubs
mov
addr16
jne
push
or
dec
scas
mov
sti
int
int3
repnz
push
cmp
sub
movsl
icebp
loopne
ds
sub
divl
push
mov
xchg
loop
mov
sahf
clc
cmpsb
stos
fwait
jae
nop
lcall
add
test
jp
outsb
pop
mov
lock
iret
addr16
mov
jl
and
adc
pop
stos
filds
popf
cli
jge
outsl
mov
push
in
gs
fwait
jmp
inc
adc
mov
int3
in
jo
icebp
or
popa
rorb
stos
in
inc
stos
aad
in
inc
push
mov
pop
mov
lahf
dec
sbb
mov
pop
leave
and
fistps
jle
js
mov
mov
pushf
or
lock
les
pushf
shrl
inc
ds
stos
int
fisubl
loope
pop
fisubs
gs
fsubs
mov
xchg
aas
xchg
outsb
lret
xchg
dec
push
or
pop
jp
pop
ds
loope
arpl
ss
adc
or
cmpsb
daa
mov
stos
jb
or
pop
test
testb
fcoms
mov
xchg
pushf
lcall
test
leave
push
xchg
jne
sbb
sub
fs
clc
jae
sub
addr16
xchg
into
jmp
jo
enter
je
adc
repz
cli
mov
iret
xor
cwtl
or
mov
sub
jge
nop
xchg
inc
mov
scas
jg
mov
jle
loope
lcall
pop
jbe
lcall
sbb
add
fstl
jnp
std
cwtl
cmp
in
inc
cmp
mov
mov
repz
fistpll
add
push
data16
adc
xchg
mov
leave
loope
or
pop
scas
xchg
stc
cltd
mov
repnz
mov
inc
mov
sub
sub
inc
lods
fnstcw
cmp
pop
jo
pushf
fs
lds
hlt
xchg
test
xchg
dec
jbe
ret
xlat
aaa
hlt
mov
lods
push
sbb
adc
mov
in
aam
aad
mov
mov
rcll
imul
cltd
das
sarb
mov
cmp
cmp
add
test
enter
dec
insb
add
or
mov
inc
pop
xor
jecxz
or
add
jo
fistl
adc
xor
mov
shll
loope
gs
jbe
pushf
pop
jo
idivl
add
ds
add
shll
test
xadd
cmp
sbb
mov
addr16
hlt
cmpsb
and
jmp
and
das
xor
arpl
ret
xor
cmp
rcrl
inc
sahf
inc
in
stos
aaa
out
pusha
ret
das
jmp
pop
and
clc
cmp
fsubrs
adc
fldenv
adc
mov
or
mov
in
into
adc
add
jg
push
stos
mov
pop
adc
xchg
mov
mov
leave
in
mov
sub
bnd
or
jl
mov
mov
popa
adc
sub
lahf
outsb
ret
hlt
add
out
dec
lods
pop
push
or
inc
movsl
popf
mov
sbbl
popf
mov
pop
fistps
stos
popf
in
push
imul
sub
cmp
push
clc
sbb
ja
push
lahf
insb
test
jg
imul
xlat
fcomps
mov
mov
imul
jno
lock
dec
pop
add
imul
xorl
pop
test
or
push
pop
xor
mov
jno
pop
shll
cs
cmp
mov
or
sbb
out
sarl
xor
aaa
jecxz
jle
jbe
cmpsb
test
out
push
inc
xor
push
pop
push
push
mov
adc
and
pop
call
inc
fcomps
dec
pop
fimuls
push
xor
add
jbe
push
int3
mov
movsb
movsl
pop
pop
mov
lods
push
ret
mov
data16
mov
dec
dec
mov
pop
out
dec
xor
xlat
mov
xor
movsb
lds
push
mov
add
jne
xor
pop
jo
xchg
xchg
pop
icebp
std
xor
nop
pop
add
xchg
lea
dec
inc
jp
inc
out
jbe
push
or
hlt
aas
pusha
or
loopne
icebp
loopne
repz
vcvtsd2si
scas
les
sub
mov
xchg
jl
xchg
jae
push
stos
cmc
and
cmp
ja
lret
aam
call
cmp
pusha
subl
pop
sub
xchg
sbb
push
or
out
sbb
push
sbb
pop
xlat
pmovmskb
xchg
inc
fiaddl
es
adc
fdivr
clc
or
add
out
mov
mov
dec
pop
sar
leave
xchg
add
cltd
push
mov
lea
leave
insb
adc
rol
cmpsb
test
push
aaa
pushf
cwtl
add
es
pop
adc
and
repnz
and
sahf
lahf
push
andl
fs
stc
pop
jge
shl
inc
dec
pop
iret
cld
sub
inc
dec
fisttpl
cmpsl
pop
mov
sbb
jns
loopne
add
out
iret
test
into
pop
push
and
or
js
push
push
lret
ret
push
jbe
push
sub
dec
stos
add
in
orb
data16
mov
out
outsb
lods
pop
lea
call
rcr
xor
jne
inc
bound
inc
es
xchg
lods
ficoms
push
repnz
scas
jnp
gs
leave
xor
test
mov
xchg
les
enter
sub
xchg
imul
xor
neg
add
ja
pop
pop
rorb
inc
loop
mov
int3
push
into
enter
add
shrl
divl
ret
jns
test
data16
dec
dec
mov
jmp
out
outsb
rolb
adc
dec
add
mov
mov
push
cwtl
leave
repz
sbb
jnp
lds
adc
punpckhbw
xchg
lret
xor
aas
lods
popa
inc
lahf
push
vmovaps
and
and
sbb
lods
mov
xor
sub
ret
mov
call
es
pop
sti
je
iret
sbb
xor
outsb
and
mov
mov
cltd
or
pop
xor
jg
js
jb
mov
fs
dec
fdivrs
sbb
pop
hlt
or
xlat
icebp
lds
test
dec
mov
jb
mov
loope
insl
adc
push
add
push
adc
aaa
cltd
inc
idivl
push
movsb
mov
rcll
sbb
adc
inc
inc
mov
pop
ljmp
repz
mov
or
xor
lcall
fsubrs
arpl
xor
and
or
mov
popf
push
push
or
xchg
mov
popa
out
pop
inc
xor
cmp
xchg
pushf
mov
lcall
xchg
adc
fwait
add
inc
enter
cmp
arpl
or
xlat
fadd
pop
loop
sbb
pop
aam
sbb
out
or
mov
jmp
sbb
add
adc
ja
dec
or
fstps
xchg
pusha
xlat
es
popa
es
int
pop
out
push
and
mov
mov
lcall
jg
rcrb
ljmp
in
add
dec
shlb
fildl
sbb
cmc
xor
das
pop
push
cld
out
shrl
sbb
dec
inc
mov
outsl
jmp
and
pop
mov
add
and
int
xor
insb
roll
pop
or
cmc
clc
jle
jns
mov
imul
sbb
push
and
dec
lcall
dec
aas
jae
and
dec
outsl
test
xor
push
in
not
cmp
stc
in
ret
push
push
arpl
fcompl
stc
hlt
or
push
xor
jne
fadd
repnz
hlt
stos
mov
imul
cltd
mov
loopne
push
in
decb
mov
lods
push
push
scas
test
cltd
xor
push
jecxz
and
movl
test
test
arpl
or
and
or
sbb
jle
jbe
cmp
cmp
out
in
cmp
lods
push
mov
insl
mov
xchg
mov
mov
jmp
shrb
aad
jmp
outsl
clc
ss
sub
sub
cld
jno
xor
sub
movsl
adc
in
int3
out
jp
pusha
arpl
push
xor
hlt
or
outsb
int
and
popa
fsubr
push
or
adc
insb
sti
jne
inc
imul
cs
push
imul
push
aam
inc
pusha
add
scas
out
popa
or
pop
roll
pop
pop
adc
insb
rorl
lret
aaa
jo
jns
or
xor
jmp
mov
pop
or
xchg
xchg
insb
hlt
add
into
inc
jle
adc
inc
in
push
and
scas
data16
sar
lods
adc
test
jno
jg
mov
repz
stc
mov
in
push
fidivs
scas
xor
push
cmp
cld
pop
or
cmpsl
jns
lods
cmc
icebp
pop
gs
cmpsl
sub
jle
push
jl
in
je
lret
mov
enter
imul
jnp
push
fiaddl
cld
mov
or
lods
cli
push
or
clc
mov
cltd
xorb
sti
addr16
xchg
xchg
shl
mov
mov
xchg
repz
je
lcall
dec
inc
pop
xchg
in
add
xchg
dec
push
iret
dec
cmc
xchg
xlat
aas
rorl
scas
cmp
mov
das
or
ret
push
pop
mov
dec
test
sbb
sbb
clc
push
add
pop
and
imul
cwtl
push
dec
cmp
test
ljmp
andb
pop
jnp
sarl
loop
out
lret
test
xchg
mov
and
mov
mov
fimuls
out
aaa
mov
es
xchg
push
push
test
mov
jg
push
mov
orl
push
shll
mov
jl
in
xchg
inc
in
push
push
jb
adc
pop
push
mov
int
xor
adc
cmovnp
test
pop
sbb
mov
jno
cli
mov
leave
out
mov
lds
pusha
sbb
adc
ja
add
lret
dec
jg
popa
loope
push
push
jnp
mov
ret
test
adc
sbb
add
pop
push
ljmp
cmp
sub
jmp
push
pushf
gs
mov
repnz
mov
cmp
out
es
ret
jecxz
fisttps
sarb
add
roll
push
xor
push
mov
mov
ret
sub
pop
mov
je
mov
repnz
cmc
xor
cmp
push
imul
xchg
mov
or
mov
jb
push
sub
out
lret
es
std
ljmp
dec
fsub
repnz
xchg
sbb
jnp
inc
sub
xor
dec
dec
sub
out
xor
hlt
add
aas
xchg
scas
pop
and
imul
cmpsb
mov
out
push
dec
dec
mov
inc
repnz
dec
out
int
inc
aad
aaa
test
stos
or
dec
add
add
gs
and
in
or
xchg
js
add
jne
mov
mov
test
cmpsb
sub
sub
xchg
cmpsb
and
cmp
cmp
mov
stos
and
and
in
inc
inc
pop
js
pop
mov
int3
movsb
push
pop
fwait
adc
or
shlb
daa
ljmp
cmpsb
inc
mov
push
jecxz
adcl
outsl
aaa
pop
mov
push
iret
push
lret
test
bound
mov
stos
push
cmp
cltd
cmc
rol
lods
pop
inc
lret
std
jp
popf
jle
push
push
stos
xchg
test
push
push
jl
push
bound
push
xchg
mov
ja
xchg
subl
xchg
icebp
enter
cmp
popf
in
xchg
out
jmp
mov
push
scas
loope
enter
dec
xchg
mov
mov
jbe
mov
push
inc
mov
pop
push
ss
adc
cmp
mov
out
push
push
dec
xor
es
inc
mov
out
sahf
jb
inc
hlt
push
les
and
sub
es
push
in
dec
mov
sub
adc
mov
xchg
stc
dec
fdivr
cltd
mov
pop
inc
and
testl
cmpsb
or
jmp
data16
sbb
or
mov
addr16
addr16
or
add
and
cmpsl
cld
mov
sub
repz
fsub
outsb
test
std
stos
mov
dec
out
daa
mov
enter
test
xor
mov
ds
and
leave
nop
int3
or
jne
jne
push
lea
ret
test
jbe
push
sbb
fsubs
stos
das
mov
and
jo
jns
sbbl
cmpl
and
or
dec
into
xor
test
pushf
inc
lock
mov
and
jo
lock
push
sub
pusha
aas
int
ret
enter
icebp
iret
xchg
mov
int3
fdivp
dec
out
or
scas
and
je
jecxz
sbb
fmulp
icebp
cmp
or
cltd
or
push
aaa
xor
xchg
mov
enter
call
push
test
mov
cmp
out
outsb
daa
mov
or
jecxz
inc
mov
pop
dec
pop
jnp
imul
push
stos
js
iret
data16
imul
movsb
add
outsl
cs
imul
daa
inc
add
out
add
lods
jecxz
fstps
cli
lea
pop
jmp
mov
pusha
or
or
outsb
sbb
in
leave
inc
call
or
mov
mov
or
stos
or
andl
add
mov
push
lock
mov
fnstcw
subl
dec
loop
pop
dec
dec
fadd
mov
xor
popa
cmp
pusha
loope
cmp
out
dec
nop
inc
test
xchg
lret
push
insb
mov
lret
xchg
fcmovbe
mov
jle
rolb
or
jae
fldcw
lods
lret
cld
rcl
dec
push
stos
mov
dec
push
lods
push
sub
outsl
adc
fistpll
insl
movsb
dec
or
leave
orb
sub
out
shrl
pusha
xor
sahf
lret
xchg
push
in
test
add
dec
xor
loop
gs
pop
jnp
dec
and
gs
and
imul
dec
adcl
pop
out
shrl
les
inc
mov
test
ss
sbb
movsl
mov
xchg
dec
mov
mov
stos
pop
fiaddl
jge
ret
push
sti
stc
mov
divl
push
mov
cltd
test
sbb
pushf
jne
cltd
push
pop
add
dec
sbb
addl
mov
and
aas
mov
mov
inc
cmpsb
pop
nop
add
dec
push
jno
pop
scas
cmp
stos
lret
in
mov
push
stos
ret
cmp
jbe
dec
aam
mov
cmpsb
sub
bound
movsb
mov
jp
fwait
mov
mov
sub
mov
mul
inc
xor
sarb
cmc
movsb
add
scas
arpl
mov
push
stc
pushw
lcall
mov
outsl
clc
cmp
mov
sbb
cmc
push
arpl
dec
mov
cmp
out
mov
shlb
inc
fs
dec
add
and
push
mov
arpl
dec
cmpl
data16
out
pop
mov
cli
cmc
aas
ret
or
adc
mov
shlb
xor
push
stos
add
xlat
repz
sub
inc
mov
mov
add
mov
mov
sbb
jnp
rolb
mov
add
pop
adc
or
xlat
add
jle
xor
decb
sub
nop
push
sbb
push
aas
call
xchg
cmp
mov
fisubs
addb
pushl
mov
repz
pusha
mov
pop
loopne
arpl
or
out
lods
cwtl
pop
ret
rorl
jcxz
in
test
sub
repz
and
push
mov
push
mov
jbe
adc
sbb
dec
addr16
sahf
pop
movsl
cmc
push
mov
jmp
cmpsb
pop
cmp
sbb
jecxz
repz
mov
out
mov
rcrl
cwtl
add
jmp
pop
outsb
out
addl
fwait
gs
adc
sbb
mov
or
mov
jmp
roll
es
fsubs
xor
xchg
imulb
lret
xchg
and
pop
call
ret
imul
ds
inc
jbe
jno
shrl
stc
jbe
ljmp
shrb
aas
popa
jg
repz
mov
stos
lods
stos
lret
inc
push
pop
mov
xchg
mov
xor
lret
shlb
pop
fistpll
shl
dec
test
sbb
lods
ds
adc
addl
xor
mov
sub
nop
int
clc
pop
std
hlt
cld
and
out
mov
jge
out
mov
mov
leave
stc
pop
or
lcall
cli
das
jecxz
loopne
out
nop
pop
push
je
stos
jecxz
sub
and
mov
mov
or
xchg
cmp
lods
and
int3
addr16
ret
mov
arpl
jnp
push
dec
jae
xlat
loop
pushf
sbb
jle
sub
xchg
cmp
test
lock
mov
push
add
push
into
jnp
mov
and
aam
mov
shr
out
mov
sub
int3
push
inc
les
ss
mov
enter
push
repnz
fisubrs
cmp
sahf
addr16
loop
adc
xlat
leave
aaa
mov
xor
imul
push
sti
adc
in
test
cmp
jle
mov
push
scas
out
aam
jae
ljmp
mov
xor
jno
stos
imul
jo
sbbb
rol
shrl
divb
int
lds
mov
mov
sbb
leave
hlt
xchg
addr16
push
jl,pt
xchg
fldt
fsub
rep
fimuls
leave
notl
test
je
stc
or
repz
inc
push
jmp
xor
stc
sub
jae
das
cwtl
cmpsl
jae
push
cltd
mov
jl
jg
jmp
adc
cmc
loope
in
negl
jp
adc
fimuls
das
cmpsb
jo
xchg
loope
cltd
xor
xlat
sub
inc
stc
data16
mov
adc
stos
sub
adc
and
sti
and
das
enter
call
outsb
cmp
shlb
pop
mov
ss
inc
stos
daa
or
or
or
insb
xchg
push
jmp
es
pop
out
cmp
pop
add
inc
push
cli
xchg
rorl
je
sahf
daa
mov
fwait
stos
adc
jbe
mov
add
sbb
xlat
add
fsts
xorl
pop
aam
mov
int3
or
push
test
out
ja
fmull
cltd
jmp
jecxz
mov
or
inc
jmp
test
in
mov
orl
push
jmp
push
test
andl
repz
cmp
fnstsw
das
push
mov
push
aam
sbbb
fisttpll
cmp
int
push
lods
ds
lret
sbb
cld
out
pusha
or
mov
and
cmp
xchg
sub
mov
push
lods
adc
pop
jecxz
xor
pop
xchg
xor
fcompl
pop
out
mov
aas
mov
jb
dec
shl
movsb
outsb
cmpsl
mov
fs
pusha
xchg
pusha
loop
pop
addr16
xchg
mov
in
clc
mov
mov
xchg
je
mov
ret
push
fs
xchg
imul
cmp
fstp
xchg
sbb
dec
fcoml
xor
lods
mov
stos
or
out
xchg
pushf
mov
mov
ja
push
stc
lods
mov
sbb
addr16
int3
out
shl
inc
cld
dec
or
repz
andl
std
mov
stos
cmp
dec
xchg
adc
add
outsb
aam
lock
popa
ficomps
push
popa
sbb
mov
sub
jecxz
pop
call
out
xchg
loopne
enter
jnp
add
push
xlat
pop
out
fidivl
sub
or
test
bound
aaa
pop
mov
lret
jnp
mov
add
mov
sub
lret
or
roll
notl
mov
jge
xor
jecxz
jle
cwtl
or
iret
mull
scas
hlt
sahf
add
dec
mov
mov
pop
rolb
stos
or
das
dec
sbb
jne
test
pop
cmp
and
popa
decb
js
or
fld1
sbb
lds
mov
rol
fists
scas
out
sub
adc
mov
loopne
mov
cltd
jecxz
xor
fcmovb
push
dec
subl
and
cld
aas
mov
inc
arpl
ret
mov
xor
pop
sub
dec
and
and
adc
fdivs
sbb
and
cmp
inc
or
or
out
pop
scas
jb
and
mov
sub
testb
cmp
dec
or
lcall
and
jecxz
cli
lds
jle
sub
mov
adc
adc
mov
addb
rorl
cmp
out
les
mov
jno
sbb
lods
mov
dec
or
jno
pop
mov
pop
cld
jmp
test
lcall
xorl
cmp
jae
xchg
and
and
orl
jg
js
movsl
cmpsl
mov
stos
subl
clc
outsl
nop
test
pop
sub
mov
pusha
mov
das
sbb
gs
mov
out
mov
imul
fnstcw
lret
add
fisttps
mov
dec
dec
push
pop
call
mov
test
sbb
dec
cmp
incl
sbb
jbe
and
xchg
push
inc
dec
arpl
adc
cmp
call
inc
xor
pop
dec
notl
sub
hlt
andb
stc
popf
iret
add
cmp
int
mov
mov
mull
xchg
les
and
int
fistl
popa
sub
test
enter
pusha
inc
or
jle
dec
popa
movsb
cmp
enter
jmp
sbb
aam
orl
xchg
dec
enter
fimuls
pop
mov
pop
mov
incl
xchg
xchg
and
xchg
xor
push
jecxz
es
add
push
pop
push
cli
popa
sbb
xchg
mov
incl
loope
mov
stc
add
shll
adc
sbb
push
mov
loopne
lds
push
xchg
repnz
mov
jno
mov
jbe
cmp
insb
loope
sub
ret
mov
lods
mov
mov
xchg
jecxz
adcl
bound
leave
fidivrl
inc
or
xor
imul
push
aad
or
cwtl
repnz
xor
mov
xor
fidivrs
xchg
shl
call
decl
pop
into
rcrb
insb
movsl
mov
in
add
outsl
dec
add
jp
fisubrl
lret
aad
mov
sub
jge
fstpt
add
sti
ljmp
or
dec
lds
or
bound
das
add
add
push
cltd
cmp
pop
adc
pop
mov
cmp
mov
xchg
xchg
fcom
cmpsb
loopne
add
mov
ds
ljmp
stos
cmc
lods
adc
int
jecxz
rcrb
pop
ret
jle
xlat
lret
out
clc
shlb
xor
ja
cs
iret
sbb
cwtl
shlb
adc
jle
adc
out
sub
push
aas
pop
leave
aad
and
xchg
sub
push
out
mov
aam
push
rclb
pop
insl
adc
add
bound
jb
sbb
sarl
mov
mov
clc
iret
adc
sahf
fs
xlat
push
stos
clc
xchg
aad
jp
arpl
dec
xchg
mov
aaa
xchg
pop
push
mov
sbb
cmp
mov
push
cs
cmpsl
xlat
mov
test
pop
jns
popa
out
mov
movb
mov
daa
mov
fidivs
fimuls
test
stos
shll
jbe
sbb
int3
mov
sti
pop
cmpsl
scas
cmpb
mov
mov
adc
lea
pop
mov
mov
mov
xchg
test
das
and
lods
lret
pop
addr16
jno
and
mov
adc
adc
gs
jl
scas
add
adc
or
cmp
cmp
adc
fdivs
and
pop
fs
aas
divl
in
inc
cmc
add
ret
insb
add
push
jecxz
out
push
loop
cwtl
or
out
cmp
add
mov
xlat
jbe
adc
gs
inc
dec
lret
dec
sub
sbb
push
push
sbb
push
inc
andl
pop
dec
xchg
frstpm(287
enter
xlat
lcall
cmpsl
mov
iret
push
inc
push
lods
push
dec
cli
mov
rol
insb
xchg
inc
ret
jns
ret
cld
out
inc
xchg
xchg
or
lret
jne
jp
push
lock
mov
and
mov
mov
lods
sbb
mov
insb
mov
in
dec
iret
repz
dec
push
call
pop
fildl
or
sub
rcr
add
mov
inc
shll
imul
out
jns
lods
xchg
sbb
fbstp
jns,pt
xchg
sub
inc
in
pop
cli
cwtl
or
jne
mov
xor
sti
pushf
push
xchg
sbb
inc
and
xchg
sub
mov
cmp
das
scas
notb
sub
outsl
scas
shrl
fwait
imul
lcall
repz
xchg
xchg
jo
lcall
or
xchg
mov
je
cmpsl
pop
xchg
imul
cld
pop
shl
push
or
dec
push
cmp
mov
jne
jne
mov
pop
int
test
sarb
push
andb
inc
stos
xor
jno
and
call
pushf
inc
dec
mov
inc
and
adc
push
inc
pop
sub
popf
xchg
cltd
in
shlb
scas
xor
pop
sbb
pop
in
push
and
xchg
outsb
cld
sub
sbb
clc
loopne
or
aad
dec
lds
or
cli
daa
lahf
ret
loopne
jp
adc
fisttpll
cmp
clc
jb
sub
xchg
sub
lret
popf
mov
fldcw
fdivrs
push
pop
orb
nop
mov
lods
adcl
stos
arpl
sbb
js
jno
out
scas
jmp
pop
adc
shl
lea
pushf
repnz
lock
in
cmc
sub
hlt
lcall
in
dec
mov
enter
xor
add
loopne
stos
fistps
add
fwait
lock
iret
or
xchg
mov
pushf
shlb
shr
movsl
aad
ffree
imul
shrl
ss
mov
shr
push
outsb
inc
cmp
mov
aas
jae
inc
cmp
push
mov
dec
adc
fldl
rcl
dec
data16
loopne
jo
jb
pop
push
repz
pop
imul
adc
mov
inc
or
add
pop
and
loope
test
iret
gs
add
sub
movsb
call
push
jge
jl
int
bound
mov
cmp
jno
loopne
incb
cmpsl
mov
loope
cmp
jae
testl
inc
popf
out
cmp
pop
mov
dec
adc
sub
xchg
jno
repz
mov
add
loope,pt
aas
enter
sbb
cmp
mov
pop
enter
loope
pop
mov
test
es
cmp
mov
mov
in
jmp
fsubrp
int
push
loop
and
or
pushf
adc
lret
or
out
call
mov
or
pop
jl,pt
push
ljmp
lret
int
mov
mov
lds
js
pop
inc
mov
cmp
bswap
imul
popf
inc
or
std
xchg
xor
fbld
ror
lods
aaa
ja
pop
aad
pop
ret
add
imul
xor
push
fsubl
mov
push
pop
pop
sbb
pushl
ret
mov
mov
lock
sbb
and
fsub
inc
cmp
sub
push
xchg
push
sub
adc
push
test
mov
cltd
and
or
call
xor
inc
pop
stos
sub
dec
cmp
push
cs
xchg
and
outsl
repnz
addr16
mov
rcll
mov
stc
jp
mov
rcrl
cmp
lea
jae
aas
pushf
outsl
cmp
stos
push
push
hlt
or
and
xchg
outsl
mov
inc
add
fwait
je
or
popa
push
std
ds
repnz
mov
dec
xchg
ljmp
in
cmp
out
cs
adc
or
xchg
iret
add
data16
std
mov
repz
loopne
stos
jl
dec
in
js
sbb
xchg
iret
xchg
fscale
ficoms
jns
pusha
jb
jbe
sub
ljmp
dec
cmpsb
sub
mov
xchg
dec
add
je
inc
xchg
add
cmpsb
mov
jb
popa
and
push
mov
jb
int
movsb
into
xor
je
xchg
fldt
fdiv
addr16
cli
loopne
in
call
aad
call
dec
je
cmpsb
mov
gs
dec
mov
out
cmp
sub
aam
xchg
fwait
pop
rcrb
lret
pop
xor
cmp
negl
mov
jecxz
mov
jo
cwtl
mov
mov
enter
idivl
xchg
shrl
jecxz
test
aad
insl
pop
sub
sbb
in
pop
jp
jnp
push
xor
dec
insl
cld
inc
rclb
or
xor
ljmp
adc
push
int
leave
jmp
int3
jmp
sbb
sbb
dec
stc
and
call
sbb
push
push
xchg
insb
xor
test
add
cmp
mov
mov
mov
cwtl
insl
fidivrl
inc
arpl
xchg
push
aad
out
cs
fcomps
and
add
pop
fwait
ss
sar
cmp
mov
aaa
push
sub
bound
popf
jbe
hlt
mov
cld
int3
pushl
and
in
enter
sbb
inc
adc
mov
jl
fildll
icebp
push
ret
and
pop
gs
and
scas
loopne
mov
rorl
jns
decl
jb
push
jae
mov
aad
and
sbb
jns
scas
movsb
adc
and
push
or
insb
mov
push
ljmp
call
fcoml
xor
mov
nop
mov
outsb
inc
or
aam
add
add
or
popf
das
add
in
sub
scas
adc
inc
ss
fsubs
adc
pushfw
loope
xor
and
cmp
mov
ss
inc
inc
push
in
pop
imul
arpl
fmulp
rcrl
jecxz
pop
insl
adc
sti
sahf
mov
lahf
test
ljmp
add
mov
ret
fmulp
jmp
addr16
mov
outsb
pop
jo
cmp
push
xlat
dec
mov
int
es
pop
push
push
push
sti
cmp
mov
mov
and
jno
stos
and
aaa
mov
jne
pop
cmpl
dec
out
call
jb
push
out
mov
mov
aaa
cld
outsb
adc
cli
inc
lds
dec
inc
and
jmp
xchg
xchg
loope
imul
scas
dec
mov
xor
ret
jle
push
sbb
xlat
sahf
repnz
xor
sahf
loopne
in
lds
mov
ja
jo
ret
xlat
jmp
jae
and
pop
mov
or
aaa
sub
repnz
mov
loopne
loope
lods
lret
adc
fcmovnb
leave
cmc
mov
icebp
and
test
cs
dec
mov
push
pop
movb
jmp
inc
jns
leave
mov
push
mov
aad
lret
adc
and
fiadds
xlat
insl
stc
sahf
mov
add
enter
jbe
cwtl
sahf
adc
jb
movsb
icebp
gs
insb
icebp
sbb
or
mov
mov
lahf
dec
mov
add
iret
jecxz
push
jne
inc
ds
xor
loopne
ret
sub
adc
imul
stc
int3
add
shrl
in
inc
jo
pop
add
jp
test
jno
jmp
shl
repnz
xor
jns
inc
leave
mov
jg
dec
jne
xor
mov
scas
fadd
idivl
in
lods
outsb
nop
dec
call
xchg
push
out
mov
call
pop
xor
push
xchg
cmc
iret
out
stc
ret
addb
xchg
lock
xor
mov
data16
repz
ret
mov
int3
or
cmp
dec
aas
mov
pushf
jg
xchg
and
lret
ret
addr16
cmc
or
into
lret
pop
cmp
lahf
xor
jae
pop
adc
or
sbb
xchg
sahf
jbe
inc
fbld
pop
repz
pop
pop
push
push
movsl
nopl
push
pushf
mov
xor
repz
rcrl
push
sub
leave
scas
and
pop
fimull
cmp
das
xchg
pushf
xor
addr16
push
mov
iret
imul
cmpl
cltd
loopne
push
data16
dec
pop
cmp
sti
ffreep
mov
ja
sbb
in
sub
jl
fsubs
xchg
adc
pop
jb
or
mov
mov
push
cmpsl
fildl
ret
js
sarl
push
xchg
ljmp
xchg
mov
aaa
les
xchg
scas
ja
mov
xor
adc
in
in
lock
jg
push
ds
lock
inc
pusha
dec
leave
inc
inc
sarl
push
je
pusha
mull
add
push
xchg
arpl
push
adc
andb
and
jnp
in
xchg
or
add
test
jne
adc
daa
or
mov
test
scas
xchg
pop
in
add
inc
movhlps
mov
push
sub
scas
add
fbld
jmp
cmp
push
cmpsb
jp
push
dec
jle
xor
in
inc
jb
push
je
add
mov
xor
mov
ja
loopne
repz
jp
data16
nop
or
xlat
sub
and
lds
imul
popa
cmp
mov
cmp
xor
dec
popa
cmp
mov
aad
xchg
aaa
rorl
and
es
sub
int
pop
idivb
ret
push
arpl
add
leave
decb
cmp
in
xchg
add
in
cmpsb
movsb
gs
pop
pop
int3
repz
notl
jge
outsb
push
data16
jl
outsl
lock
and
movsl
sbb
out
repz
rclb
inc
hlt
add
xlat
adc
jns
sarl
sub
fwait
jg
lods
out
pop
mov
push
daa
aad
cli
pop
inc
ljmp
popf
dec
xor
pop
xchg
icebp
xchg
test
add
sub
inc
mov
or
adc
les
in
loopne
loope
push
scas
push
dec
cmpsb
adc
out
pop
leave
inc
gs
push
cmp
ret
mov
sub
cmp
adc
mov
push
pushf
pushf
mov
cmpb
lods
fwait
addr16
mov
dec
shr
mov
or
addr16
sbb
adc
aaa
loop
add
jp
js
pop
outsl
mov
pop
add
adc
cmp
rclb
decb
cli
stc
xchg
jno
popf
popa
movsl
gs
arpl
jns
dec
sahf
jbe
or
mov
push
push
add
cltd
mov
jb
jae
and
xor
pop
cs
call
call
mov
sub
adc
roll
mov
pmulhw
iret
xchg
out
mov
sub
fucomip
push
dec
scas
out
sbb
inc
sahf
jno
imul
sbb
and
es
int3
sub
call
adc
jp
rorb
je
ja
cmc
jno
cmpsb
pop
testb
add
jae
mov
fildl
test
jle
xchg
arpl
push
out
sar
sbbl
stc
mov
shrb
stos
adc
fldenv
mov
repz
mov
sarl
mov
pop
mov
jmp
movsb
cmp
cwtl
aad
je
jecxz
adc
popf
in
andl
scas
adc
in
xor
push
xchg
mov
cmp
cmp
push
adc
les
sti
push
or
push
inc
push
push
mov
fisubl
les
insb
iret
shlb
mov
bound
push
aad
cmp
daa
out
pop
icebp
add
adc
add
and
pop
add
lods
les
into
jb
adc
dec
hlt
xor
pop
fisubrs
hlt
mov
push
xor
mov
dec
test
shrb
add
or
es
xor
addr16
fwait
test
fwait
das
sbbb
fisubrs
decl
movsl
in
enter
andl
ss
inc
sbb
mov
out
movsb
mov
inc
mov
leave
mov
fs
push
roll
dec
xchg
mov
test
int
mov
imul
lea
mov
xchg
pop
adc
cld
pmullw
inc
xchg
aaa
sti
aaa
pop
mov
int3
jne
sbb
scas
inc
ja
adc
fiaddl
in
mov
int3
xlat
mov
jle
dec
add
scas
sub
test
add
pop
xchg
hlt
mov
pop
or
stos
repz
in
mull
mov
leave
rorb
shll
jnp
scas
adc
repnz
cmpsb
lret
scas
aas
fnstsw
adc
mov
cmp
cmp
imul
andl
in
shrl
pop
and
rolb
push
cmp
jmp
pop
dec
loope
cmp
and
mov
movsb
cwtl
dec
push
mov
subl
adc
sbb
sub
jb
test
test
call
xor
cmc
adc
scas
int3
adc
xchg
dec
lret
sbb
leave
inc
lret
ficoml
imul
fs
fwait
add
add
in
test
fnstcw
xchg
jp
outsl
xor
mov
push
push
sti
les
jns
cmc
out
dec
and
icebp
into
jnp
add
popa
cmc
clc
test
jle
xlat
fcomps
imull
std
mov
pop
jl
mov
push
xchg
cmpsl
xchg
bound
adc
pop
add
xchg
ficoml
push
cs
adc
popa
notl
popf
fisubrl
push
mov
mov
lods
jecxz
fdivrl
mov
push
incl
sub
mov
mov
mov
ss
cs
fadds
mov
les
in
aad
lret
jne
cs
movsl
enter
scas
fstpl
aaa
adc
jnp
mov
rcll
or
ss
popf
mov
ret
movsl
adc
vmread
xchg
inc
dec
iret
cmc
mov
pop
cli
outsb
int
jnp
outsb
flds
sbb
push
mov
test
fnstcw
xor
rcl
xor
pusha
mov
dec
mov
mov
neg
lods
xchg
je
xor
adc
push
or
aaa
inc
fmull
xor
mov
mov
xor
push
pop
cmp
push
mov
pop
mov
insb
aaa
arpl
out
mov
jb
inc
into
and
mov
xchg
js
push
sar
mov
je
dec
cmp
shrl
out
push
jb
jecxz,pn
loopne
push
pop
call
cmp
std
sti
xchg
or
dec
jne
les
or
aam
or
popa
dec
push
stos
or
ret
cld
aaa
dec
jmp
xchg
rclb
jle
cmp
push
jbe
imul
pop
fdiv
mov
fwait
lret
sbb
lahf
mull
mov
jecxz
cmpsb
inc
sub
inc
rcrb
dec
call
lcall
xchg
call
rorl
decl
fs
and
sub
pop
and
inc
sbb
mov
push
mov
enter
repz
add
sti
lds
pop
fadd
xlat
mov
repz
xchg
les
aaa
mov
inc
or
sti
mov
cwtl
into
xchg
shlb
cltd
jnp
mov
fdivrl
jnp
rclb
shlb
hlt
add
jp
stc
or
dec
jl
push
sub
fsts
mov
mov
ds
xchg
aad
xor
xor
shrb
jb
cmp
jle
aad
mov
mov
sbb
push
push
xlat
mov
dec
pusha
ds
jge
jg
pop
xor
pop
and
jle
pop
jmp
sub
sbb
dec
aaa
loopne
or
loope
lret
mov
ds
jne
ficompl
leave
xchg
out
jle
dec
jge
insb
inc
mov
cwtl
daa
push
mov
jo
sub
movsl
jo
fimuls
lret
bound
dec
ret
lds
ja
pop
out
xchg
loope
cmpsb
fcomp
loope
in
add
adc
arpl
lock
fistps
les
pavgw
aaa
xchg
and
cs
sbb
pop
inc
lcall
xchg
lcall
nop
pop
ljmp
mov
adc
mov
ret
push
sub
jp
loop
mov
jo
xorb
push
xchg
push
cwtl
fists
scas
inc
lahf
test
out
pop
jg
cmpsb
jecxz
jmp
in
test
inc
ror
cmpl
sbb
stos
sub
adc
aam
repz
sbb
iret
sbb
ret
fs
lret
stc
sub
aas
adc
iret
adc
xor
sub
insl
inc
pusha
mov
bound
push
or
adc
mov
sbb
jge
or
ja
or
pop
xor
add
iret
xchg
ja
mov
jbe
rclb
mov
jle
cmpsl
enter
push
adc
addb
int3
mov
mov
add
clc
adc
jl
test
push
aad
cmp
sbb
or
jg
and
into
cmp
jp
add
mov
lret
jo
outsl
fisttpl
push
icebp
jp
sbb
cmpsb
jns
mov
mov
sub
lock
je
hlt
xor
inc
inc
push
sar
in
bound
lock
test
ror
cmp
pusha
jne
js
movsb
inc
sub
into
stos
repz
xchg
mov
insl
jnp
test
stos
mov
adc
arpl
idivb
or
mov
insb
gs
pop
mov
xchg
std
pop
scas
pop
jmp
cmp
push
mov
jecxz
into
cmpsl
xor
sbb
adc
push
fiaddl
sahf
insb
gs
out
enter
jbe
pop
addr16
cmp
gs
pushf
fstl
cmp
js
imul
and
mov
pop
pop
pop
gs
sbb
add
lock
and
sub
jecxz
push
xor
lret
stos
fwait
pop
incb
mov
fnstenv
mov
xchg
mov
push
sub
adc
push
clc
pop
fstpt
dec
repnz
sti
sbb
ret
sbb
pop
jl
jg
pop
cmp
push
xchg
mov
lret
test
mov
mov
push
int
lea
push
push
mov
and
push
inc
xor
cmp
sahf
cmpsb
mov
push
int
mov
and
out
pop
push
scas
sub
sub
and
pop
daa
jae
cmpsb
mul
mov
cld
and
fcoml
lcall
or
or
ret
sbb
mov
and
in
mov
mov
cmpsb
sarl
xchg
dec
cmp
mov
hlt
movsb
xor
mov
in
std
cld
or
mov
push
mov
jl
mov
or
enter
jecxz
scas
jbe
xchg
inc
scas
stos
push
stc
inc
fsin
push
or
add
sbb
push
mov
punpckhdq
adc
cs
add
mov
or
test
cltd
cmp
ret
call
js
or
dec
outsb
jl
sarb
lret
jb
mov
test
sub
and
scas
xchg
jl
pop
jp
push
hlt
and
mov
movsl
insb
bound
ret
icebp
pop
inc
mov
mov
jmp
push
adc
jp
fildl
mov
xchg
dec
sub
pop
fcoms
xchg
mov
rclb
or
xchg
add
jl
sbb
out
data16
jbe
push
sub
std
mov
into
mov
test
push
negl
fsts
aaa
xchg
ret
dec
mov
cmc
shll
xor
sbb
jnp
imul
cltd
aaa
call
mov
fdiv
xchg
test
ds
les
in
sub
es
jmp
out
mov
cmp
jl
and
test
rolb
testb
scas
mov
mov
dec
add
mov
in
fwait
push
xor
add
call
mov
jns
jne
arpl
sbb
enter
pop
shl
pop
push
sbb
cmc
sarl
rcrl
std
mov
fmuls
loope
arpl
push
loopne
mov
mov
repnz
je
fistl
les
mov
dec
adc
clc
and
cmp
and
movsl
pop
or
xorb
adc
stos
lea
push
pop
add
or
fsts
inc
lock
cmp
test
dec
xorb
sahf
adc
lret
push
dec
stc
mov
sbb
int3
outsl
xchg
fwait
out
mov
int3
push
cwtl
ret
jb
adc
das
inc
lea
lods
mov
into
jg
or
jp
xor
out
test
nop
arpl
jl
pop
ret
sub
incl
es
testb
popa
cld
mov
push
push
ret
inc
repnz
mov
addb
pop
inc
inc
cmp
nop
cli
pusha
fiadds
push
icebp
loope
xchg
fdivl
add
fwait
push
loope
sub
lods
push
xor
push
push
pop
insb
sub
cmc
add
cmpsb
hlt
mov
mull
jg
pop
cmp
and
dec
lahf
arpl
outsl
jo
xchg
adc
mov
jmp
data16
fistpll
push
lods
mov
add
out
nop
sub
test
sbb
mov
jge
xor
xor
test
inc
dec
inc
adc
cmpsl
mov
mov
push
arpl
mov
lret
jb
mov
or
das
add
lret
pop
dec
in
loop
add
push
sti
cld
adc
pop
ret
mov
cmc
mov
imul
push
add
sbb
cmpxchg
imul
pop
mov
sub
jecxz,pn
sub
jns
daa
add
add
es
js
stc
imul
inc
sub
mov
out
scas
dec
outsb
jns
inc
push
nop
ds
ljmp
xchg
inc
popf
jge
dec
push
inc
rcr
push
sti
gs
incl
dec
scas
xor
push
pop
fsubrs
xlat
stos
and
push
xchg
out
push
inc
or
and
icebp
les
inc
aad
adc
ljmp
inc
xor
sarb
mov
pushf
sbb
sub
add
out
pop
shll
aas
sahf
jg
pop
xlat
adc
lea
shrl
and
nop
inc
test
inc
add
jne
lret
lahf
sahf
pop
bts
rcll
push
adc
loope
sbb
cmc
add
in
into
movsl
or
call
mov
stos
lea
xchg
pop
pop
jmp
faddp
xor
cli
cs
icebp
sbb
jmp
cmpsb
sbb
into
daa
sub
pop
in
arpl
call
sbb
xor
in
pushf
add
mov
adc
mov
ljmp
shlb
test
fst
jae
popf
sub
pop
out
jno
mov
fcmovnu
movsb
incl
mov
loopne
fs
push
in
add
imul
lahf
lock
lret
mov
lahf
shl
mov
xor
push
ljmp
pusha
adc
cmp
sahf
lret
xchg
int
shll
dec
push
push
clc
push
mov
mov
das
mov
mov
fabs
xor
xchg
fs
cmpsb
sub
dec
lret
out
push
mov
in
xchg
inc
stc
and
inc
lret
bound
movsl
in
add
rorl
mov
fdivrs
xor
cmp
out
mov
add
jns
cmp
sbbl
nop
es
cmc
fnstenv
dec
mov
cld
lret
ljmp
std
out
jecxz
lea
dec
push
divb
pop
pop
out
push
xor
xchg
jns
mov
out
fcompl
xor
mov
cmpb
loopne
rcrb
mov
xchg
xchg
cltd
xor
sub
cmp
pop
adc
xlat
mov
loop
cmp
mov
sahf
ret
popf
jb
out
push
pop
or
adc
mov
outsl
add
lds
cltd
fs
mov
pop
loopne
mov
mov
fimull
fdivrs
mov
outsl
xor
xor
add
xchg
push
lahf
xchg
jae
jnp
xlat
daa
sub
divl
std
test
jns
into
xor
mov
les
aad
fnstsw
adc
stos
scas
inc
dec
add
cmpl
xchg
mov
mov
test
lea
ret
rorl
push
adc
fists
pop
imul
push
fwait
ret
sbb
add
lahf
pop
jle
cld
adc
imul
jnp
call
call
jle
sbb
jl
xchg
mov
pop
mov
and
add
subb
fmulp
rolb
loope
push
inc
cmp
mov
xchg
sbb
jno
mov
movsl
test
add
test
gs
inc
jno
dec
cmp
cmp
pop
pop
inc
or
sub
fidivrl
cmp
dec
pop
dec
sarl
fdivl
or
or
pop
popf
jge
inc
fldl
stos
push
flds
add
adc
inc
mov
or
push
in
lcall
adc
jge
and
push
lock
or
leave
stos
mov
xchg
inc
sub
mov
sbb
cs
shll
jae
sbb
loopne
cmpsl
mov
mov
int3
push
pop
jne
jecxz
inc
jge
sub
cmp
sahf
ss
aas
push
xchg
jp
dec
femms
jmp
add
popf
or
mov
bound
jl
scas
loopne
push
push
jb
rclb
cltd
add
sbb
pusha
cmp
adc
ljmp
subl
pop
repz
ficompl
mov
scas
mov
nop
lret
sti
insb
lods
fadd
jl
adc
inc
sub
repz
and
push
jp
push
clc
mov
or
ja
xchg
adcb
fstpl
stc
xchg
cmc
xor
push
add
pop
lds
int
sub
mov
adc
sub
lret
std
mov
jnp
xchg
mov
and
repnz
add
pop
add
xlat
add
push
cmpsl
xchg
or
out
sbb
mov
cmpsb
and
pushf
pop
iret
push
jl
cwtl
lahf
mov
outsb
push
xor
sbb
push
bound
nop
imulb
jl
xchg
cmp
scas
insl
push
inc
add
test
inc
xchg
dec
test
adc
mov
aam
or
mov
push
push
loopne
jge
xlat
sub
xchg
enter
jnp
mov
xchg
jp
mov
sub
inc
push
adc
ja
int3
orb
daa
jno
inc
divl
call
jp
int3
icebp
cmc
dec
dec
sub
jg
jecxz
cmp
shrb
lret
mov
and
and
xchg
pop
sub
stos
ja
cmc
in
xchg
adcb
push
test
mov
ret
lcall
in
cmp
out
jb
lds
leave
xlat
mov
test
mov
lds
sarb
mov
xor
jg
les
arpl
adcl
mov
or
data16
adc
movsl
mov
daa
and
daa
repnz
push
cmpsb
push
xchg
push
shr
mov
xchg
jl
cs
icebp
jge
ret
mov
in
hlt
inc
pop
pop
leave
sbb
pushf
pop
movsl
movsb
push
sub
dec
mov
movsl
add
sbb
xchg
inc
cltd
lcall
jne
adc
pop
js
and
inc
inc
ret
rcll
addr16
xchg
and
adc
jecxz
lds
push
dec
pusha
adc
adc
cmp
out
enter
negb
cmp
in
cmp
addr16
dec
frstpm(287
outsl
jbe
sahf
nop
or
inc
into
cmp
xor
nop
addl
jb
das
mull
loopne
push
mov
pop
loopne
imul
bound
divb
sub
sbb
jecxz
aam
jmp
mov
and
loope
xchg
jo
pop
daa
sub
push
and
dec
sarb
inc
dec
mov
idivb
sbb
xlat
aad
mov
rcrl
mov
or
inc
xchg
lcall
addb
mov
lds
and
inc
xchg
ret
mov
stos
or
stc
out
or
lea
and
cli
js
insl
stc
cltd
dec
sbb
xor
jmp
mov
dec
int3
mov
or
daa
and
cli
fiaddl
adc
mov
add
fmul
jp
mov
in
jne
adc
iret
mov
les
pop
ds
fisubs
prefetch
xlat
xchg
orw
bswap
mov
and
loopne
ficoml
sub
sub
jecxz
mov
imul
adc
adc
pop
inc
cmp
dec
lahf
inc
and
lcall
test
adc
leave
inc
adc
jmp
imul
data16
decb
pop
inc
cmp
mov
add
movsl
jle
js
pop
movsl
rclb
repz
cltd
mov
adc
xchg
or
cmpsl
cmp
mull
icebp
sarb
xlat
add
into
fadd
mov
mov
sarb
lahf
lahf
lret
movsb
pop
sbb
and
push
fstpl
out
jmp
push
xchg
inc
dec
push
mov
lret
fld1
shl
cltd
movsb
daa
sbb
and
xchg
sub
xor
adc
stc
jmp
mov
les
int3
aaa
pop
push
mov
rcrb
push
stos
in
sar
lahf
out
jbe
sub
cmc
popa
test
jo
icebp
sub
jae
dec
nop
pop
aad
hlt
add
daa
dec
add
push
push
adc
pop
lods
xor
pusha
mov
repz
push
shlb
sbb
dec
cmp
push
inc
adcl
push
adc
mov
push
popa
push
icebp
adc
add
inc
and
xchg
leave
iret
dec
mov
jae
xor
ss
leave
enter
push
xlat
gs
es
sbb
sbb
sbb
xor
inc
or
les
cmp
or
cmp
out
pop
cmp
and
jp
dec
pop
enter
test
adc
add
mov
cltd
adc
sbb
xchg
sbb
icebp
aaa
lahf
xchg
pop
cmp
js
mov
scas
jmp
repnz
dec
jbe
rolb
pop
outsl
push
push
and
and
pusha
pop
cmp
loopne
cld
add
fcomps
fcoms
aaa
jae
in
fidivrs
sbb
jle
fldt
lock
adc
inc
mov
clc
leave
jle
xor
addl
lcall
inc
mov
mov
fdivrp
nop
test
lds
fdivrs
stc
jg
pop
ficompl
inc
lcall
xchg
icebp
lahf
mov
test
outsl
xor
jb
das
icebp
and
cmpsb
xchg
enter
xchg
pop
inc
das
inc
jnp
mul
xor
std
out
inc
out
mov
mov
mov
and
out
pop
dec
adc
push
push
xchg
sub
mov
ret
mov
adc
cli
iret
rorb
mov
sub
fscale
xchg
dec
sbb
inc
aas
pop
repz
xchg
lds
xlat
mov
iret
xchg
cmp
nop
sub
xor
mov
gs
lea
jb
sahf
inc
test
lds
adc
push
jns
ret
mov
add
add
cmp
lret
rolb
jo
xor
add
loop
mov
mov
and
cmp
inc
inc
xlat
pop
dec
imul
imulb
push
cmp
sub
rolb
pop
pop
ret
fistpll
mov
xor
popf
popl
sarb
mov
loop
xchg
aad
mov
call
cmp
jnp
inc
int
cmpsl
mov
xchg
clc
ja
sbb
fnstsw
cmp
mov
aad
lea
adc
push
icebp
lret
cmp
mov
cmpsl
adc
mov
push
jo
in
mov
mov
sbb
nop
adc
popf
int3
scas
mov
data16
add
fcoms
sbb
stos
pop
and
addr16
icebp
ljmp
arpl
popa
jle
aaa
and
fdivs
stos
shll
xchg
pop
mov
mov
and
out
out
mov
andl
mov
push
pop
stos
mov
xchg
dec
xchg
jne
sbb
shll
xchg
xor
cmpsb
mov
int3
mov
dec
cld
or
jne
xchg
pavgw
ljmp
daa
cmpsl
mov
imul
mov
or
and
clc
jl
call
cmp
movl
xchg
iret
jl
ficoms
cs
xchg
mov
or
sti
and
pop
loope
push
pop
pop
mov
aas
pop
inc
jne
enter
mov
cmp
fistps
test
arpl
pop
xor
test
in
or
sbb
jo
fs
loop
out
stc
add
hlt
push
cltd
ror
mov
xor
vmovddup
out
xor
es
xor
or
xor
in
ret
add
lret
jmp
jmp
mov
lods
jecxz
add
lods
iret
cmp
inc
andl
mov
adc
dec
sub
dec
insl
push
pop
xchg
inc
fisubrs
adc
or
lcall
and
mov
push
pop
fdivrl
fistl
scas
xor
jl
mov
sub
cmpsb
fidivs
cmc
sbb
cmp
or
push
les
or
xor
stos
das
push
enter
je
xor
jbe
xor
push
inc
repz
inc
jnp
sbb
xor
dec
std
fwait
ror
dec
enter
sub
push
pop
hlt
mov
jle
inc
popf
push
aaa
cmpsl
push
push
mov
bound
add
push
push
popf
inc
jle
mov
adc
stos
cli
or
xchg
cmp
out
lods
iret
xor
push
scas
or
in
fcoms
cmpsl
xchg
lods
cmp
lret
popf
push
daa
insb
iret
int
cmp
push
in
dec
ficomps
push
add
enter
pop
xor
cmpsl
mov
xchg
out
push
mov
repnz
and
loop
xchg
inc
aaa
mov
repz
xchg
sub
inc
or
or
test
inc
pop
pop
inc
jne
xchg
imul
cwtl
cmpsb
aam
cs
jge
jmp
push
pop
and
mov
aaa
data16
outsb
pop
xor
sbb
add
adc
xchg
aam
sub
fsubs
movsl
mov
ret
sbbl
cld
xchg
pushf
cmpsb
pop
fdiv
pop
xchg
inc
cmp
cs
fsubrs
lcall
pushw
in
jmp
add
mov
movsb
xor
cmp
imul
subl
pop
lock
cmovp
or
mov
cmp
loop
adc
mov
jo
adc
mov
aaa
pop
adc
stos
cwtl
xor
pop
push
dec
idivl
pop
adc
mov
jae
nop
jl
cld
test
push
cs
std
xlat
add
arpl
inc
es
mov
cmc
xorb
xchg
jmp
mov
fisttps
mov
jl
xchg
imul
xchg
mov
lods
adc
add
sbb
mov
mov
data16
adc
adc
andb
in
test
int3
in
mov
imull
jnp
fs
add
in
mov
push
adc
cmp
pop
es
test
subl
notb
and
sub
je
or
test
in
push
sete
je
jmp
or
or
shlb
xchg
orb
aad
mov
mov
push
cli
cmp
out
out
mov
ja
sbb
jo
in
cmp
sti
add
bound
mov
rcll
cmp
lods
or
out
ret
mov
or
mov
outsl
shlb
xchg
cmp
adc
fldcw
or
or
out
push
sarl
clc
xor
std
iret
ss
push
outsb
dec
jge
test
or
sub
jle
cltd
cmpsl
mov
dec
push
xchg
into
std
rcrl
jbe
std
loop
pop
addl
rcll
mov
mov
popf
outsb
push
jl
jnp
pop
xor
xchg
lea
stos
sti
inc
call
add
pop
mov
hlt
mov
add
or
test
dec
mov
fadd
dec
jnp
stc
mov
mov
nop
mov
int
aas
pop
and
inc
popf
mov
sub
xchg
inc
or
push
or
gs
outsl
push
cwtl
imul
adc
inc
cltd
cmp
scas
arpl
dec
cmp
pop
imul
in
mov
pop
pop
enter
addl
cmp
xchg
jmp
xor
jmp
add
bound
mov
push
mov
sub
sbb
mov
mov
pop
loope
movsl
pop
mov
das
dec
dec
and
fnstenv
lret
imul
or
ja
xlat
sbb
negl
sti
mov
pop
ficompl
or
and
lcall
xchg
repz
mov
jo
fidivl
jns
aam
cmc
mov
addr16
int3
repnz
imul
aas
cwtl
add
mull
mov
loop
scas
loop
cld
sti
xchg
dec
pushf
loopne
xor
adc
dec
pop
aas
pop
pop
cltd
movsb
push
jge
out
movsl
jmp
sbb
in
pop
pusha
fsubl
cmpsl
out
std
outsl
xchg
call
sub
out
xorb
mov
xchg
ret
xor
std
cmp
mov
call
add
in
stos
push
mov
pop
sti
sbb
repz
pop
psubsw
jbe
dec
nop
loopne
inc
call
shlb
sbb
leave
fidivl
pusha
lods
mov
ss
sub
pop
pusha
sub
push
and
ret
out
adc
imul
adc
lock
in
mov
dec
jge
stos
in
out
out
cwtl
imul
xchg
lods
arpl
dec
hlt
ds
jnp
mov
pop
cld
subl
lods
lds
pop
aam
shr
and
mov
mov
mov
cwtl
push
fcompl
jns
mov
movsl
jne
test
sarl
push
pop
xor
sub
sub
loopne
mov
clc
lcall
xchg
pop
data16
repz
ret
jmp
cli
jbe
lds
sti
popa
push
and
xorb
add
loope
mov
icebp
out
and
mov
mov
pop
adc
mov
ret
cmp
jle
add
adc
cmc
cmp
dec
lds
sbb
arpl
movsl
loopne
test
mov
fnstcw
iret
pop
dec
int
xor
test
and
idiv
cmc
movsl
out
out
cmp
rcrb
pop
insl
shrl
testl
repz
imul
ds
xlat
add
add
das
inc
pop
call
out
xor
js
fnstsw
aaa
int3
or
adc
icebp
cmp
mov
jne
sbb
lock
pop
mov
or
jbe
out
ret
iret
or
sub
ficoms
movsl
lret
dec
sub
add
scas
movsl
addr16
dec
cmp
sbb
pop
and
insl
jb,pn
cltd
fdivrl
divl
out
insb
imul
lock
and
insb
bnd
ret
mov
lds
negb
push
sti
dec
fildll
leave
fldt
es
je
mov
enter
lcall
dec
rorb
lods
call
dec
jb
stc
pop
out
add
jne
xlat
sbb
mov
sub
mov
xchg
xor
ljmp
jmp
faddl
xchg
cmp
fsubs
cmp
lea
xchg
inc
popa
aaa
dec
insb
cmp
pop
stos
push
repz
scas
xchg
dec
out
sbb
ret
inc
mov
stc
xor
outsl
sahf
dec
and
dec
jg
mov
aam
dec
push
inc
mov
cmpsb
repnz
adc
sbb
sbb
fwait
cmove
out
pushf
jmp
subl
dec
xchg
push
lret
mov
popl
mov
push
nop
cli
pop
mov
stos
mov
mov
xchg
out
imul
stc
cmpb
inc
inc
js
dec
or
rorl
and
dec
aas
js
mov
add
adc
xlat
arpl
lret
xchg
outsl
mov
xlat
cltd
in
inc
jl
sub
pusha
add
jb
inc
add
icebp
gs
ljmp
movsl
cmpsl
mov
xchg
xor
jmp
nop
shll
imul
cs
in
push
jne
mov
cltd
mov
mov
mov
jbe
push
aad
repz
or
sarl
rcll
xor
les
lea
push
scas
aad
sub
repnz
popf
and
push
push
push
inc
lret
adc
cmpsl
adc
or
pusha
sbb
jg
cs
mov
mov
mov
inc
pop
pop
std
add
ljmp
pop
sti
mov
inc
push
dec
pop
sbb
inc
pop
pushf
jb
adc
out
scas
les
push
jns
sub
mov
cmp
mov
xor
je
add
pop
lds
sub
in
xchg
pop
lret
jl
mov
cli
sub
out
rcrl
and
sub
pop
mov
sub
mov
sbb
add
sti
lahf
xchg
fcmovb
jle
inc
js
sub
mov
mov
imul
or
das
dec
mov
mov
sahf
mov
inc
call
roll
stc
popf
icebp
ds
out
rorb
push
adc
pusha
leave
add
gs
push
loope
or
and
cld
lret
cmpsb
add
icebp
es
cwtl
jl
out
add
loope
ja
adc
xchg
pop
xchg
popa
aas
dec
dec
into
cmpsb
sub
mov
xor
xor
xchg
out
in
clc
jg
sub
call
scas
add
or
sbb
cs
in
lret
add
movsl
subl
adc
vsqrtps
shll
xchg
daa
ret
pop
movsb
and
mov
mov
je
mov
mov
or
and
lock
xor
ljmp
idivb
stos
lods
test
sbb
xchg
mov
push
push
sbb
mov
mov
shl
jnp
push
movsb
push
shrl
aaa
pushaw
aad
mov
into
mov
pop
jmp
inc
mov
dec
lret
mov
mov
inc
enter
ljmp
mov
out
imul
out
cltd
jmp
inc
pop
lods
ficompl
and
sub
in
inc
ret
bound
sub
cs
mov
popf
xor
mov
mov
ss
cmp
mov
adc
jae
rcrl
or
pop
xchg
mov
add
mov
add
cmp
loopne
sahf
cmpb
mov
dec
test
jae
jecxz
push
xlat
pop
pop
sub
insb
lcall
adc
test
push
jns
fwait
push
lods
es
mov
mov
std
leave
mov
testl
add
repz
outsl
test
xor
mov
dec
aaa
push
addr16
add
stc
fsubrs
mov
loop
or
das
mov
or
inc
movaps
or
pop
jno
movsl
and
pusha
add
and
xor
in
and
mov
adc
aaa
push
cltd
bound
inc
clc
add
jmp
imul
mov
sub
das
lock
lods
jle
fldenv
adc
scas
jbe
insb
mov
adc
xchg
cmp
adcb
cmp
bound
mov
ja
mov
inc
test
mov
test
call
filds
dec
gs
mov
cwtl
jp
lds
das
dec
out
xchg
and
dec
push
sti
inc
xor
popa
data16
hlt
xor
adc
adc
outsl
test
inc
and
lods
fcomps
scas
dec
mov
dec
fcomps
push
out
in
fdivr
adc
and
sub
sub
or
jae
sub
fnstenv
push
xor
mov
or
repz
mov
roll
scas
sti
dec
ss
ds
dec
push
pop
push
rcrb
rclb
ja
test
arpl
push
push
aaa
sti
in
pop
ret
loopne
mov
mov
pop
aad
aas
mov
cmc
mov
in
jmp
sub
dec
leave
jno
aas
fstpl
shl
in
xor
jp
icebp
or
pop
add
and
dec
lods
xchg
iret
filds
xchg
cmp
ljmp
filds
push
lahf
and
sbb
mov
test
test
or
stc
xor
jp
mov
push
add
mov
loope
cmp
push
add
sarb
rol
inc
xchg
and
lods
jne
cmp
jecxz
stc
mov
jg
lods
rcll
fmuls
imul
icebp
cmc
or
in
mov
sub
jae
rcll
and
inc
pop
divl
ss
cmp
loop
movsl
pop
jmp
push
inc
fldcw
inc
or
sbb
sub
hlt
in
hlt
push
add
or
or
movsl
shlb
or
mov
jo
sahf
loop
pop
mov
push
insb
adc
dec
mov
push
push
lcall
fsubs
pop
popa
mov
dec
add
jle
xchg
cmp
or
mov
add
mov
lret
fwait
hlt
mov
rol
test
nop
fidivs
xor
ret
jg
stos
daa
jp
pop
mov
push
test
add
les
out
push
addr16
sbb
add
stc
cmc
mov
outsb
popf
imul
jmp
lods
ret
push
add
xor
xlat
jb
cmpl
xchg
data16
shrb
int
fldcw
sbb
mov
es
mov
out
pop
jb
subl
dec
adc
adc
cltd
in
or
es
push
pop
push
xchg
les
xchg
mov
ret
arpl
jl
adc
jecxz
in
sti
jbe
rorb
rcll
into
mov
push
andl
cmp
in
jg
push
in
in
add
pop
repz
aam
push
inc
je
pop
arpl
dec
inc
jae
mov
xchg
lock
push
or
sbb
jge
pop
sbb
inc
fcoml
sbb
mov
xor
mov
xor
nop
mov
jl
sbb
push
jge
sbb
push
ja
or
jno
pusha
xchg
sahf
shl
test
lea
mov
push
adc
cmpsl
rorb
loop
inc
outsb
aaa
sbb
jle
sbb
push
push
cmc
push
negl
icebp
push
push
inc
popf
arpl
jecxz
adc
scas
enter
mov
in
imul
pop
dec
mov
push
xor
xchg
imul
pop
mov
mov
aam
addr16
jge
inc
push
adc
xchg
je
decb
fdivs
jmp
hlt
outsb
or
inc
cmp
and
ja
mov
xor
mov
je
in
sti
push
repnz
or
data16
mov
push
imul
mov
fld
sub
push
call
bound
jge
sbb
xor
xor
adc
arpl
and
movsl
fdiv
cmp
shlb
xchg
mov
rcr
dec
ja
scas
or
xchg
aas
ja
mov
jmp
inc
mov
push
rcrl
arpl
and
mov
dec
inc
cs
sbb
push
sti
push
jmp
ljmp
pop
pop
fnclex
dec
fwait
sbb
lea
pop
movsb
lods
popa
mov
repz
mov
repz
dec
dec
adc
cmpsb
sub
jp
lods
fcoml
inc
cmp
mov
jge
stc
push
cltd
xor
out
jno
arpl
pop
sub
adc
pop
xchg
outsl
imul
cmp
mov
inc
dec
imul
add
ja
xchg
test
jge
andl
pop
cltd
push
or
out
fcmovnu
ficomps
jns
and
sub
lret
jp
outsl
sub
scas
push
sbb
movsl
out
sub
fwait
mov
jg
inc
lods
mov
adc
xlat
mov
push
lds
pop
push
lock
jae
jnp
push
xor
add
shlb
sub
dec
dec
mov
es
mov
jnp
jae
shl
hlt
ficomps
pop
enter
mov
sahf
enter
ljmp
add
mov
cmpsl
arpl
add
push
inc
hlt
and
sub
fmuls
mov
enter
or
xchg
inc
les
adc
jne
fwait
das
adc
into
imul
sbb
rep
jge
andb
jno
mov
push
outsl
addr16
xchg
icebp
lock
ret
rcll
sbb
pop
jnp
orl
mov
outsb
cmp
sub
add
hlt
cmp
sub
xor
cwtl
jmp
xchg
les
or
mov
leave
mov
mov
cmp
push
inc
jb
and
xchg
xchg
movsl
dec
xor
out
jl
lret
or
xchg
rolb
mov
add
add
or
imul
cs
movsl
test
mov
xchg
outsb
fcompl
adc
and
aaa
dec
popa
dec
addr16
dec
sub
fcoml
dec
shlb
in
arpl
shll
adc
rorb
enter
pop
sti
push
lds
icebp
fbstp
into
inc
mov
and
fwait
jmp
cli
or
jno
ja
push
aaa
stos
xchg
jp
mov
inc
push
inc
enter
add
ret
test
xlat
out
mov
push
cmpsb
xor
push
push
fcompl
das
mov
lock
out
movsl
adc
ficompl
leave
jle
jmp
sub
fwait
call
mov
dec
cli
jnp
pop
and
sbb
xlat
test
out
mov
test
and
mov
pusha
adc
mulb
jecxz
dec
test
rcl
stc
outsl
mov
movsb
push
push
sub
xchg
les
repz
shrb
mov
sub
and
mov
cmp
cmpsl
fnstcw
enter
xrelease
fisttpl
sub
or
enter
push
add
ror
leave
es
mov
dec
ret
mov
cmpsb
ret
ret
loope
test
sarb
pop
push
fs
push
jg
or
dec
dec
inc
enter
clc
adc
loopne
dec
inc
negl
push
mov
pop
cmp
xchg
adc
sbbl
aam
xorb
lret
push
paddsw
jbe
idivb
je
inc
mov
adc
es
push
push
fistl
add
lods
iret
pushf
rolb
xor
add
jg
stos
or
cmp
jo
jb
mov
pop
sahf
pusha
xor
fnsave
into
inc
push
push
xchg
and
mov
ret
pushf
push
dec
adc
sub
cmc
push
arpl
jbe
jne
fstl
fdivrl
mov
test
jg
in
jg
adc
mov
add
pop
mov
jbe
jmp
repz
scas
es
jo
aam
cmpsl
jle
xchg
sahf
into
adc
or
insl
in
pop
call
lods
push
cwtl
push
cmp
adc
fadds
mov
clc
push
cmpsb
ljmp
mov
sbb
jl
cwtl
stos
clc
in
push
and
inc
push
inc
test
xor
and
xlat
shlb
dec
testb
jo
inc
cmp
cld
pop
mov
ljmp
std
ss
cltd
lcall
int
iret
push
repz
pop
ja
adc
ret
push
push
aad
jge
pop
jns
jne
cmp
jle
les
jle
mov
inc
inc
sbb
call
and
pop
push
rorb
xchg
cmp
ss
icebp
push
ud1
outsb
jg
mov
cld
icebp
ret
repnz
faddl
mov
push
icebp
pop
jne
aam
mov
lret
sbb
xor
push
cmp
loopne
test
cltd
inc
imul
repz
repz
adc
cmc
test
jmp
setno
sbb
imul
ret
jbe
ja
daa
jge
icebp
xor
mov
pop
xor
sbb
scas
mov
pusha
movsl
cmpsb
inc
dec
xchg
and
imul
mov
pop
push
inc
add
add
frstor
sbb
ret
xchg
push
je
clc
mov
mov
jg
inc
add
leave
cmp
aaa
inc
nop
lods
push
cld
mov
push
push
cmpsl
repz
stc
xchg
lods
or
mov
fwait
sbb
lret
fsubrl
test
call
addr16
in
lret
xor
mov
rcrb
lock
es
dec
pop
or
sahf
lahf
inc
fisubrs
lods
fsub
aam
int
stos
push
cmp
cltd
lret
call
adc
ss
xchg
cmp
clc
movsb
pusha
divb
xlat
aas
cltd
xchg
xchg
and
aas
dec
jbe
sbb
xchg
shrl
pop
xor
xchg
ss
xor
fucomip
mov
out
cmp
xchg
push
cmp
clc
cwtl
repz
push
nop
hlt
dec
sbb
cmpsb
mov
inc
jno
fwait
sbb
imul
mov
lcall
xor
jae
ss
rclb
cs
cltd
cmp
out
push
imul
cmp
popa
push
imul
cltd
jo
add
adc
lods
cwtl
or
fisubrs
repz
add
call
push
jno
imul
cmc
movsl
add
jno
clc
aad
push
xchg
arpl
mov
jge
dec
or
sbb
into
push
mov
dec
push
negl
cld
pop
out
aad
sar
mov
push
sbb
mov
jecxz
inc
insb
fstpl
cmpsb
push
js
inc
repnz
push
jg
out
pop
test
cmpsl
pop
aad
jae
pop
push
je
jne
adc
cwtl
inc
push
xchg
add
push
pusha
mov
pop
data16
sub
or
dec
inc
lcall
lods
and
inc
jno
inc
mov
out
jp
repnz
xor
sbb
fwait
mov
mov
lahf
mov
cmpsb
cmpsl
insb
mov
xor
jmp
adc
call
jp
jnp
inc
sbb
mov
out
jo
scas
mov
stos
xchg
xchg
les
iret
jecxz
jp
test
push
icebp
ds
or
adc
jae,pn
push
push
pop
pusha
call
add
ja
or
jb
add
inc
or
aam
shll
mov
mov
int3
sahf
mov
add
pop
test
mov
fldl
mov
push
inc
sub
pusha
cld
add
clc
sub
jge
mov
xchg
dec
add
mov
rclb
sub
or
cmp
stc
rcl
cmc
pop
cmp
mov
lds
movsl
push
int3
sbb
mov
inc
sbb
cmp
jle
xchg
div
jmp
shlb
data16
hlt
ss
mov
dec
sbb
popf
sbb
or
cmc
loopne
insb
mov
add
rol
loope
sbb
je
call
cltd
adc
or
mov
lret
sub
cs
lock
fstpl
lret
jmp
and
movsb
mov
popf
sub
pop
ds
ficoms
mov
es
out
pop
adc
aaa
mov
fisubl
out
adc
movsb
repnz
ret
andb
push
xchg
jns
dec
fucomi
aam
jne
add
and
ds
mov
pop
xor
adc
pushf
sub
or
mov
adc
fcmovu
dec
sahf
xchg
nop
scas
and
mov
int3
out
fsubs
insl
fs
loop
aas
mov
mov
ds
push
test
leave
sti
cmp
xchg
pop
jo
push
jmp
out
mov
jp
inc
and
mov
xor
leave
mov
mov
jne
sbb
imul
xchg
aas
jge
lret
loope
je
sbb
repz
push
jns
rcrl
mov
mov
pop
adc
roll
jle
mov
out
cs
mov
aad
fwait
sub
sub
ret
stos
aas
ja
outsl
movsl
inc
or
stc
sub
mov
push
movsb
mov
xchg
in
dec
insl
or
mov
hlt
pusha
add
jb
push
neg
dec
mov
pusha
bound
ret
shll
mov
xchg
outsb
aad
or
jmp
sbb
and
repnz
push
ja
inc
mov
or
dec
inc
pop
pop
scas
stos
mov
int3
cmp
or
lds
or
ror
xchg
or
ja
loopne
cmp
dec
subb
mov
fldt
nop
notl
in
jl
test
mov
fstpt
dec
pop
repnz
test
dec
popa
and
cmc
mov
jg
mov
push
and
ds
inc
jge
ss
shll
inc
imul
sbb
push
loop
inc
jae
and
les
insl
std
push
jg
lds
aad
push
dec
out
jp
lds
pop
jno
mov
leave
or
int
xchg
lods
mov
daa
add
mov
xchg
call
cmp
and
mov
test
iret
lcall
pop
lock
bts
inc
adc
adc
add
arpl
push
or
jp
fcmovnu
outsl
std
stc
fldenv
xor
icebp
imul
fs
jo
dec
mov
orb
push
and
xchg
and
pop
sbb
lret
mov
dec
leave
sbb
xor
pop
addr16
mov
pushf
push
ret
or
mov
fnstcw
push
jge
mov
dec
cmpsl
and
and
mov
xchg
test
rorb
inc
pop
lret
lods
mov
icebp
dec
jg
sub
adc
iret
push
sbb
shld
lods
stos
adc
ljmp
xor
pop
jp
lcall
out
jb
pop
in
data16
adc
sti
mov
sub
xchg
repz
push
out
pop
insl
xor
dec
mov
popa
xchg
data16
or
cli
push
jno
int3
dec
mov
jmp
sub
iret
jno
mov
push
aam
pop
xchg
test
push
mov
jmp
ficoml
dec
pushf
mov
aas
jl
jge
inc
push
shrl
cmpb
iret
pop
pop
push
gs
js
xchg
test
sbb
incb
cltd
xorl
dec
sahf
jns
fnsave
insb
sub
jne
fs
xchg
jns
mov
jl
loop
pop
cmp
add
adc
add
push
pop
fadds
gs
add
imul
pop
or
ret
inc
mov
xchg
dec
sub
mov
hlt
xor
into
and
jne
in
stc
jbe
int
orb
shl
push
popf
jo
repnz
aaa
jge
fwait
int3
mov
movsb
bound
cwtl
aad
sub
and
sub
or
xchg
fs
add
addr16
out
xor
imul
inc
out
cmp
lods
add
push
shlb
jmp
mov
xchg
inc
std
fsubr
rcrl
fnsave
inc
dec
or
mov
ret
dec
cmp
pop
sbb
out
cmpb
scas
mov
mov
mov
cmp
mov
js
cmpsb
ret
and
mov
sub
and
js
cld
add
adc
and
cli
cmpsl
insb
pop
xchg
outsl
mov
outsl
stos
push
shll
xchg
pop
and
jecxz
dec
mov
nop
push
enter
adc
int
pop
sbb
mov
lret
insl
out
cs
loope
pop
pop
and
jo
cs
insb
jns
adc
lret
je
push
mov
loope
ret
lahf
mulb
stos
es
pop
enter
lea
mov
in
in
lods
popf
shl
gs
in
pop
cmp
or
mov
sub
cmp
mov
inc
aam
divl
jae,pn
jg
mov
sbb
arpl
sub
xchg
je
outsb
and
xchg
add
outsl
testl
out
adc
inc
nop
cmc
xor
jne
les
lahf
out
fsub
pop
adc
ret
jo
cmc
cvtps2pd
dec
pop
jnp
push
cmp
arpl
xor
addr16
mov
lods
pop
sbb
out
imul
test
and
inc
sub
std
mov
call
in
xchg
xchg
add
dec
data16
pushf
adc
inc
or
add
jl
inc
mov
push
push
inc
pop
push
icebp
inc
mov
je
out
mov
test
and
mov
cwtl
push
mov
in
mov
arpl
xor
scas
bound
hlt
ja
vandnps
repnz
xchg
adc
push
add
movsl
js
loopne
xchg
int3
decb
lock
cmpsb
aam
dec
push
pop
pop
jmp
popf
cmpsl
add
call
xchg
leave
push
xor
push
mov
mov
mov
cmp
adc
dec
test
pop
in
push
aad
cli
jmp
fdiv
dec
cs
mov
movsb
jae
bound
cld
cs
or
and
xor
call
mov
or
cmp
sbb
xor
lods
es
mov
pop
jg
xlat
dec
dec
movb
inc
inc
insl
adc
dec
les
shlb
dec
jecxz
data16
sti
ljmp
add
push
sbbb
lea
imul
dec
pop
cmpsl
gs
jmp
adc
mov
ljmp
das
imul
cmp
xor
jg
mov
leave
push
mov
dec
push
xlat
mov
adc
sahf
add
mov
xchg
push
mov
xor
test
xchg
rcrl
fsts
arpl
mov
addb
ret
sbb
ficoms
push
popa
lods
sub
push
sbb
cltd
push
push
mov
and
add
gs
jae
int3
mov
arpl
jae
sub
add
and
sub
mov
pop
faddl
xchg
push
movsb
adc
or
mov
sbb
rclb
mov
in
mov
xchg
xchg
das
jle
or
icebp
jmp
sub
mov
mov
movsl
xchg
stos
out
movsl
fidivrl
std
mov
sub
inc
cmpsl
popa
fwait
inc
lods
imul
das
js
xor
jmp
ljmp
jge
sbbb
popa
cli
mov
outsl
sbb
rorl
mov
es
add
mov
pop
mov
sbbb
in
test
push
cltd
repnz
sub
push
nop
push
dec
lods
shrb
das
dec
lock
sub
mov
or
or
mov
aad
mov
inc
aaa
cmp
cmp
sub
or
sub
mov
mov
add
jp
mov
inc
cwtl
test
fcomps
testb
lret
hlt
test
daa
mov
mov
push
dec
mov
in
mov
int3
jbe
in
xchg
mov
cmp
inc
ss
aas
sub
movsl
jo
inc
mov
subl
repnz
mov
divl
nop
cmp
adc
movzbl
lcall
addb
pop
and
fwait
loop
repnz
xor
je
push
call
pop
sub
cmp
icebp
jmp
push
bound
repnz
pop
ds
dec
pop
or
into
test
adc
roll
mov
icebp
xchg
inc
pop
sbb
inc
or
test
dec
aam
add
in
stos
pop
mov
xchg
lock
mov
and
and
fdivrs
movsl
shl
jno
jecxz
dec
or
sahf
mov
movsb
xchg
imul
cmp
movsb
sti
rorb
pop
cmp
ljmp
add
popf
sub
fldl
in
xchg
inc
pop
and
pusha
cltd
hlt
out
add
scas
mov
movsb
call
repnz
test
loop
sbb
dec
cmp
cltd
adc
ss
jge
aad
movsb
imul
xchg
pop
fs
adc
and
mov
sbb
bnd
cmp
sbb
or
adcb
sarb
push
and
adc
sub
pop
pop
lock
sub
jg
jno
outsl
jp
cmc
mov
adc
pushf
pop
ja
cmc
sti
ja
into
pop
mov
nop
fwait
repz
cli
cltd
or
jmp
fsubrp
es
inc
or
xchg
ret
cwtl
xchg
sahf
addl
or
arpl
outsl
sti
push
dec
sub
out
adc
ljmp
adc
insb
push
pop
in
jnp
and
sbb
dec
lods
ret
pop
push
popf
insb
jmp
inc
mov
or
inc
ljmp
adc
fldenv
dec
add
loope
pop
jae
fmuls
sbb
or
aaa
mov
fisubs
xchg
sahf
inc
sti
inc
sbb
or
push
stos
pop
sbb
jmp
jge
movsl
pop
pop
fsubrp
js
movsb
inc
incl
pop
or
mov
push
and
add
push
mov
das
mov
push
clc
mov
orl
lds
movsl
aam
in
je
out
adc
out
bnd
xor
lds
insl
std
inc
xchg
or
imul
push
movsb
aas
mov
or
push
repz
and
lods
inc
jp,pt
mov
call
mov
add
imul
jp
es
int3
inc
test
xchg
mov
sub
xlat
inc
inc
inc
xchg
xchg
jge
sbb
push
jb
mov
push
stc
fcom
pusha
jp
mov
insl
aas
cs
pushf
repnz
leave
loop
and
leave
out
jns
xor
inc
in
mov
js
xor
test
sbb
in
xchg
jl
add
dec
cs
dec
xchg
sub
andb
mov
or
push
fcomi
stos
fisttpll
adc
adcl
imul
fnstcw
push
arpl
rorl
rol
movsl
cld
std
mov
popa
and
rcl
out
and
add
cli
and
dec
lcall
or
dec
popa
shll
sbb
inc
jnp
jmp
xchg
rolb
and
lahf
andl
sbb
mov
or
fwait
pusha
jmp
jns
dec
xlat
daa
test
test
leave
imul
adc
mov
push
das
sbb
sub
inc
or
lea
xchg
xorb
aaa
int
enter
jle
adc
adcb
push
movsb
xor
int3
sub
lahf
pop
test
test
jo
mov
stos
mov
loope
adc
inc
out
dec
pop
loope
stos
inc
sub
cmpsb
cmp
scas
mov
lret
out
test
in
insl
lods
pop
rcrl
nop
push
call
lea
mov
or
jecxz
mov
cld
insl
rcrl
mov
xor
in
fs
pop
jmp
popa
sahf
mov
mov
scas
insl
fiadds
adc
push
jbe
cmpsb
xchg
lods
push
inc
push
es
arpl
jmp
cmp
inc
negb
pop
jb
add
fisubl
dec
lea
jmp
pushf
loopne
adc
push
jp
push
jbe
jb
mov
imul
sbb
inc
mov
imul
mov
lret
mov
add
sub
dec
dec
jbe
adc
rclb
ret
pop
xchg
bound
cwtl
subb
mov
test
lds
pop
idivb
xor
mov
cltd
inc
leave
pop
sahf
and
inc
dec
lcall
adcl
dec
and
sahf
mov
pushf
ret
adc
push
shll
ja
adc
sub
jnp
xor
push
mov
icebp
xchg
mov
inc
jo
enter
in
pop
adc
mov
inc
inc
sbb
jmp
cs
into
in
or
cltd
and
mov
adc
jle
lods
inc
les
jg
mov
jge
dec
jle
adc
inc
jmp
loope
sbb
shlb
rol
gs
add
and
jp
sbb
sbb
int
sahf
lock
xchg
fistpl
xor
dec
call
lret
sbb
fists
fidivrl
pop
mov
sub
push
and
pop
pop
stos
inc
ror
inc
cmp
je
imull
mull
jg
cmpsl
fisttps
lret
fwait
xchg
fwait
pop
in
dec
dec
cmp
loope
fs
icebp
ret
insb
nop
xchg
repnz
shrl
lret
jns
add
xor
andl
jl
jecxz
fcoms
std
scas
push
cmp
jge
inc
cmp
test
addr16
in
sbbl
xchg
adc
cmpsb
mov
aad
jne
mov
std
jle
pop
xchg
leave
std
sbb
sarl
xorb
pop
rcrl
xchg
mov
cmp
push
out
ss
rclb
rcrb
aaa
jo
sbb
mov
lods
sbb
mov
cmp
loop
push
lcall
mov
addr16
ret
rcll
jge
in
imul
rcrl
xor
sub
shll
std
ds
mov
shlb
subb
std
mov
add
shrl
enter
js
push
mov
jo
jo
jl
test
jg
sub
mov
pop
push
icebp
adc
xchg
fildll
jle
adc
push
mov
imul
pop
loope
scas
outsl
jo
rorl
push
jg
mov
cmp
divb
add
push
loop
in
push
outsb
loope
sub
mov
fidivs
sahf
xchg
push
sub
scas
adc
xchg
loop
fbstp
js
dec
pop
adc
lahf
or
jnp
js
aas
gs
sarl
xchg
push
inc
daa
sbb
dec
shrb
push
xchg
sahf
push
arpl
sti
std
xor
push
mov
fnsave
pop
and
sub
or
data16
ret
popl
jo
ret
sbb
add
push
popl
mov
fcmovbe
xlat
divb
punpckhwd
dec
lcall
cs
jp
test
pop
mov
test
xor
je
fists
sbb
in
imul
pusha
adc
mov
jno
sub
lods
inc
jmp
mov
arpl
sahf
jl
test
mov
in
in
rcll
jae
or
xchg
mov
mov
mov
shrl
int3
fsubrp
outsl
xchg
lods
fwait
jge
xor
push
push
repz
lea
lods
jg
sbb
pop
loopne
cmpl
adc
hlt
jge
sub
stos
sbb
lods
loopne
pop
push
or
ret
or
or
js
add
mov
outsl
out
pop
inc
cwtl
push
aas
outsl
push
mov
loopne
stos
movsl
adc
xor
js
pop
fsubs
xchg
fldlg2
pop
xchg
pop
pop
aam
lcall
addr16
sub
lcall
aas
jo
popl
fldt
test
mov
sbb
icebp
lret
mov
aaa
fisttpl
mov
pop
add
cmp
aas
test
cmp
or
fwait
rcrb
sbb
sub
in
pop
sti
imul
mov
sbb
xor
xor
push
int
sbb
and
push
mov
insl
xor
inc
out
mov
das
rorb
frstor
jb
gs
jnp
lea
mov
js
adcb
push
add
cwtl
mov
dec
sbb
sti
mov
inc
cmp
js
clc
jae
mov
scas
out
cwtl
scas
push
jl
sub
cs
mov
loopne
std
aaa
or
lods
fstps
sub
pop
test
xor
and
mov
cs
ror
push
cltd
outsl
lret
movsb
adc
cmp
and
test
cmp
loop
and
mov
ficompl
jbe
or
hlt
mov
ret
stos
cmc
loope
shlb
int3
inc
mov
enter
sbb
imul
aaa
mov
clc
inc
rcll
test
pop
inc
sbb
out
sbb
and
and
cmp
bound
jnp
xor
loope
fimull
lock
packuswb
sbb
inc
stos
pop
rcl
sbb
pop
pop
cli
mov
decb
sbb
cli
test
neg
fbstp
or
sti
jne
dec
je
dec
ret
mov
dec
xchg
or
dec
push
popf
nop
movsb
imul
sub
and
icebp
inc
mov
inc
aam
pushw
rcl
popf
inc
cmp
lret
scas
xlat
ljmp
sub
fldpi
scas
lret
dec
push
imul
jns
or
leave
sub
scas
arpl
int
stos
inc
mov
daa
and
movsl
idiv
pusha
repnz
pusha
cltd
adc
cmp
adc
hlt
adc
mov
mov
es
cwtl
mov
subl
jne
dec
test
jae
mov
lahf
je
cmpsb
lock
mov
cld
jne
xchg
outsl
pop
mov
es
jae
mov
or
push
sbb
inc
mov
fstpt
xor
arpl
jge
mov
cwtl
aam
inc
mov
or
incb
adc
xor
sbb
dec
je
hlt
or
hlt
mov
bound
shrl
or
popf
jl
xchg
and
in
push
clc
xchg
shlb
subb
fnstsw
stc
ja
pop
xor
pop
dec
idivb
sbb
cmp
and
lcall
pop
nop
icebp
mov
and
add
lock
or
iret
xchg
add
cmp
pop
sbb
sbb
push
movsl
shlb
popa
cli
mov
pop
and
out
xor
cmp
push
ret
mov
lret
adc
in
cmp
clc
push
xchg
repnz
cmovle
imul
in
mov
scas
out
imul
lods
out
fs
and
push
loopne
xchg
andl
adc
inc
lds
mov
mov
call
sub
fwait
mov
add
jbe
les
je
xchg
xchg
or
jg
repnz
test
push
mov
jmp
xchg
bound
out
inc
push
mov
push
inc
push
cmp
scas
stos
jmp
in
icebp
scas
add
xchg
xor
andl
sti
xor
int3
popa
in
push
xchg
jbe
xchg
adc
cltd
mov
xchg
les
test
popf
mov
jo
mov
sbb
lods
call
xchg
dec
lret
test
adc
lods
dec
fisttpll
dec
enter
loopne
cmp
mov
scas
cmp
cs
jl
leave
notl
sub
add
sti
imul
pop
lret
cmp
add
ljmp
andb
fcmovnb
dec
adc
addr16
gs
ds
gs
fnstcw
aad
mov
push
pusha
push
hlt
mov
aaa
mov
pop
lds
in
xchg
add
in
jae
call
or
js
sahf
push
je
mov
add
ja
jg
rolb
inc
fmul
mov
je
add
out
call
out
hlt
dec
jmp
fdiv
sub
or
push
mov
clc
add
test
inc
not
sub
jmp
into
pop
cld
movsb
jae
testb
call
sub
stos
mov
aas
and
pop
stos
push
ret
mov
xchg
mov
adc
lock
das
mov
ret
cmp
in
push
and
std
inc
out
sub
cld
dec
push
pop
pop
aad
cmp
aas
test
xchg
clc
pop
rep
aas
fcmove
repz
test
dec
insl
pop
call
test
cmpsl
fdivrs
outsl
mov
fs
int3
mov
shlb
daa
xchg
stos
aas
pop
leave
sbb
mov
aam
hlt
daa
jl
aas
sbb
ljmp
cli
cltd
test
xor
jmp
jae
pop
inc
inc
stc
adc
scas
cmpsl
push
sub
test
mov
and
push
call
dec
sub
inc
imul
mov
jl
fadd
dec
xor
mov
ror
add
jp
sahf
popf
cmp
mov
jbe
push
stos
xlat
jb
nop
push
lret
cmp
jb
fs
mov
cmpsl
lds
leave
imul
pushf
pop
push
sahf
jno
sub
in
imul
jae
adc
movsb
pushf
shll
mov
xchg
cmp
in
or
add
inc
in
mov
inc
cmpsl
fcmovnb
insl
or
stos
aaa
jg
fstp
into
mov
loopne
test
xor
or
sub
out
mov
cmp
and
jb
addb
mov
mov
scas
shll
inc
or
cltd
rcll
jp
xor
sub
push
cmp
sub
adc
adc
adc
mov
outsb
test
stos
call
jge
icebp
fucomi
popa
out
adc
mov
jle
mov
and
aad
insl
out
lcall
movsl
xor
xchg
dec
movsb
lock
jmp
xor
pop
mov
fcmovu
loop
cmp
inc
repnz
into
xor
dec
lcall
addr16
shrb
test
ds
cmpsb
mov
or
pop
les
and
imull
test
pushf
movsl
dec
movl
jl
lods
pop
mov
inc
jle
sub
test
repnz
outsb
cmp
push
pop
and
pop
rcr
dec
orb
sbb
pop
push
xor
aad
movsl
lods
inc
cmp
rcrb
add
push
push
xor
ret
dec
add
mov
les
inc
ss
scas
mov
mov
pop
mov
cmpsb
test
push
scas
xor
mov
xor
outsb
sub
cmp
or
in
pop
cltd
pusha
sbb
ret
std
into
push
loopne
inc
fstpt
pop
cmp
adc
loopne
cmpl
mov
std
xchg
dec
addl
int3
pop
pop
adc
ljmp
in
ret
imull
xor
daa
insl
push
sbb
pop
dec
mov
or
cli
aam
aas
pop
push
jmp
stc
dec
xchg
sub
scas
fimuls
dec
pop
cmc
daa
fdivl
shrb
stos
push
mov
popa
testb
rorl
imul
or
stos
ret
mov
xlat
push
jecxz
lds
or
xchg
sbb
fisubrs
cltd
bound
mov
outsl
inc
fistps
xchg
xlat
int3
enter
sahf
or
cwtl
cmp
jge
push
in
jnp
punpckhwd
aas
adc
add
mov
jle
dec
lcall
dec
pop
cmp
repz
rclb
or
loop
push
mov
aam
nop
stos
push
mov
lods
lea
sbb
pop
imul
shrb
clc
stc
inc
add
loope
and
inc
pop
cmc
dec
aas
add
mov
xorb
out
lcall
stc
cwtl
adc
in
loop
fdivs
add
adc
ljmp
popf
sub
pop
add
lahf
cmp
mov
sub
inc
sub
ficoml
fcoml
jl
sub
jle
rolb
or
fwait
lds
insl
movsb
pop
jmp
notb
fists
cld
fdivrl
rcl
pop
aas
out
or
lods
sub
jnp
stos
pop
adc
movsb
jle
inc
cld
mov
out
mov
mov
js
lret
mov
iret
ja
add
out
cli
mov
jl
stos
mov
adc
incl
loopne
adc
sbb
mov
push
cwtl
into
push
or
adc
cmp
mov
mov
not
xor
aaa
jg
jg
sub
lcall
push
cmp
cmp
mov
mov
sbb
stos
jge
jo
jb
scas
aad
movsl
mov
imul
scas
lret
push
stos
aas
xor
in
fisttpll
pop
nopl
fdivrp
in
pusha
out
pop
sub
aas
stos
mov
ja
push
mov
pop
xchg
adc
aam
es
cmp
ret
sub
das
and
repnz
pop
aam
adc
lods
sbb
stos
push
push
xchg
hlt
movsb
fdivrp
or
cmpsl
repz
cmc
adc
out
lock
adc
cmp
adc
shrl
outsb
push
arpl
dec
incb
movsb
int
sbb
xchg
cmp
aaa
or
test
cmpsb
sub
out
sub
out
rclb
repz
jmp
add
stc
or
mov
movsl
pop
xor
jne
mov
xchg
shlb
insb
rep
mov
mov
xchg
add
dec
sub
cmp
sbb
xchg
jno
or
dec
repz
xchg
add
push
lock
sbb
push
call
adc
pop
cmc
int
pop
movsb
movb
fadds
xchg
in
cmp
or
pop
and
das
xlat
in
or
adc
or
popf
or
mov
sub
les
xlat
sub
ja
idivl
test
test
imul
add
cltd
push
and
data16
sbb
arpl
add
repz
add
aad
xor
stos
daa
ret
imul
xchg
inc
inc
or
add
and
sbb
rcll
ffree
aaa
jge
shll
daa
adc
inc
scas
adc
sbb
xchg
dec
repnz
sub
roll
pop
push
fidivs
bnd
jmp
jbe
data16
jnp
dec
xchg
add
or
cmc
hlt
mov
pop
leave
imul
and
addr16
push
pushf
inc
enter
cmp
stos
ja
sub
or
dec
je
dec
nop
cltd
and
and
movsb
xor
xchg
aam
push
and
outsb
les
add
imul
add
dec
mov
ja
jb
sbb
jg
rol
pop
jg
jae
push
adc
xchg
fs
mov
iret
or
xorl
gs
in
insl
int
shll
or
sub
adc
sti
add
addr16
xchg
sarb
cmp
xchg
push
sub
sbb
lahf
cmp
or
cmp
jmp
pushf
or
adc
and
lea
movhps
lahf
mov
aam
scas
adc
popa
nop
fcomip
lcall
xor
xor
xchg
adc
push
pop
mov
daa
add
movsb
and
pop
or
sti
rcrl
or
inc
xchg
sti
data16
ds
incl
sbb
in
cli
mov
cld
clc
dec
ljmp
push
inc
mov
add
or
lahf
pop
push
inc
daa
test
sub
push
mov
out
bound
mov
int
jle
xchg
in
sub
in
into
sub
xchg
ret
fucomp
int
push
push
sub
shlw
mov
sub
sbb
into
lret
ret
xor
aam
mov
rcl
shlb
inc
and
rcrb
mov
mov
push
or
test
in
stos
and
mov
mov
push
shl
and
cmp
cs
out
lret
lock
aaa
daa
pop
jbe
sbb
cmc
call
push
ja
jns
xchg
into
cmp
jl
or
and
and
es
mov
fwait
gs
jo
std
or
js
cld
imul
addr16
adc
call
mov
in
out
push
pop
cmp
or
and
adc
xchg
xchg
xor
adc
test
movsb
pushl
pop
xor
ret
push
xor
movl
xchg
push
mov
sbb
sbb
cmc
sbb
push
cwtl
and
lds
push
rcrb
sbb
lret
sub
int
das
out
dec
xor
xor
mov
cmp
pop
scas
cmp
pop
pop
adc
mov
loopne
inc
test
out
mov
mov
sbb
fs
gs
out
pop
push
faddl
xor
pop
cmp
mov
negb
or
cmpb
and
outsb
fstp
test
push
cld
xchg
xadd
pop
xchg
gs
xchg
and
popa
out
sub
ds
addr16
mov
fcoml
xlat
roll
cmp
stos
jae
pop
jmp
add
shrl
xor
je
jne
stos
and
xchg
aad
decb
mov
mov
add
out
add
xlat
cmpsl
mov
ss
fwait
rcll
lock
imul
sbb
jns
fildl
mov
iret
xchg
addr16
rorb
loopne
jnp
mov
or
push
cmp
dec
xchg
inc
jg
jg
pop
call
sarb
inc
aaa
adc
jnp
pop
xchg
rcrb
fstpt
in
outsb
ret
in
pop
xor
fists
mov
mov
adc
mov
and
xor
rorb
movsb
cmp
pop
xchg
add
mov
mov
sbb
mov
mov
cltd
lds
dec
sbb
cmpsb
push
inc
repz
imul
int3
rcl
mov
movsb
stos
fdivl
data16
test
loopne
imul
jmp
mov
fcomps
call
call
test
cmp
cmp
push
lea
xor
sub
jecxz
cmpsl
cmp
and
test
jns
jns
andl
jnp
or
lahf
sub
push
add
clc
flds
andb
cmpsl
leave
ret
movsl
or
push
mov
addr16
lock
cmpsl
frstor
xor
jbe
mov
sub
movsb
jl
cmpl
jae
mov
das
jmp
cmp
aam
jmp
jnp
flds
xor
imul
mov
bsf
movsb
xor
push
rcrb
lods
dec
add
or
js
sub
add
xchg
adc
sarb
iret
dec
int3
lds
es
rorl
test
mov
push
hlt
push
mov
movsl
mov
or
scas
clc
scas
testl
rorb
pop
iret
mov
pop
daa
adc
dec
jmp
int3
sub
mov
mov
and
and
in
or
mov
outsb
lret
dec
adc
sbb
cmp
push
mov
cmp
jecxz
adc
js
xchg
addl
jo
test
shrb
int
addl
xlat
aas
dec
mov
cmp
ficompl
adc
mov
clc
dec
pop
mov
pop
jo
sahf
add
cwtl
pusha
sub
sub
mov
xchg
xor
push
pop
add
arpl
cli
inc
in
ds
jb
sub
pop
loop
ja
iret
ret
mov
jecxz
pop
aad
inc
sbb
iret
flds
out
andl
push
fldcw
scas
sub
push
push
mov
imul
jne
add
jae
test
test
jo
cmp
sbb
mov
shll
jno
fnstcw
bound
push
std
mov
adc
lcall
lahf
andl
cmp
and
mov
dec
es
add
out
inc
xor
lds
imul
daa
pop
test
sar
lods
dec
es
and
jnp
leave
daa
lret
ret
stos
adc
cmc
or
fildl
mov
movsb
popf
xchg
out
loop
jmp
jmp
inc
repz
sbb
mov
in
int3
ret
cmp
mov
insl
pop
sarb
clc
mov
imul
imull
sbb
daa
outsb
in
add
icebp
fnsave
mov
std
mov
stos
in
inc
lret
jp
sbb
dec
cmp
cld
cmp
sbb
or
cvttps2pi
push
jo,pt
dec
fcomps
xorb
test
xchg
sbb
sub
aaa
jl
and
and
jae
jns
dec
cmp
jmp
mov
repnz
daa
jno
ja
xchg
out
sbb
xchg
mov
aas
ret
movsb
add
stc
loope
inc
out
in
fld
je
mov
jbe
push
jecxz
mov
fimuls
fmul
sub
leave
leave
or
sub
popf
xchg
inc
jge
dec
mov
xchg
sbb
add
test
cwtl
push
fbld
lahf
lock
sahf
sub
cmp
adc
sar
mov
test
repz
sahf
lds
sub
movsb
out
imul
mov
out
pop
xor
je
mov
loopne
adc
lock
mov
sub
ljmp
inc
sti
inc
dec
and
mov
into
pop
add
repz
popl
sbb
inc
add
jecxz
add
cmp
or
pushf
es
inc
ret
or
push
mov
mov
xchg
lea
fimull
jp
cmp
jmp
xchg
cmp
push
inc
imul
sbb
nop
mov
pop
fsts
or
push
push
xor
push
xor
adc
repnz
add
add
mov
push
sbb
dec
dec
dec
imul
int
out
mov
xchg
sub
push
test
push
fdivr
arpl
inc
jp
mov
out
movsb
and
ja
lahf
xchg
dec
jg
mov
std
or
xchg
loop
jp
xchg
test
lea
imul
sbb
and
imul
imul
lcall
push
fucom
and
aad
inc
add
cmp
mov
mov
andl
mov
add
mov
push
iret
loop
cmpsb
stos
mov
xlat
xchg
xor
lods
and
mov
scas
adc
pop
cmp
iret
mov
and
sbb
cwtl
pop
pop
andl
xchg
shll
fsubs
in
jo
fcompl
adc
push
popa
push
sub
cli
push
clc
pusha
sbb
pop
cmp
add
jge
dec
cmc
mov
out
xchg
in
in
outsl
sub
arpl
push
push
or
and
add
out
fdiv
lcall
das
mov
js
loopne
mov
sarb
mov
cmpsl
or
or
pop
pop
out
dec
xor
lret
out
cltd
sbb
cmp
sub
mov
inc
cs
xchg
ljmp
jge
mov
adc
sub
xor
pushf
sbb
jne
shll
lret
mov
jae
push
scas
stos
sub
lds
stos
pop
and
sub
sbb
scas
inc
adc
stos
cs
js
ret
pop
gs
add
lret
jnp
push
push
xor
push
test
pop
xchg
fisubs
imul
pop
lret
popf
out
sbb
push
xor
stc
sub
popf
dec
push
or
jl
div
xchg
add
stc
scas
and
gs
ret
add
test
test
sahf
pop
rcll
dec
pop
sub
fcmovu
adc
pop
outsl
add
nop
pop
xchg
jcxz
addr16
add
stos
cwtl
push
repnz
mov
pushf
je
push
mov
stos
cld
add
int
repnz
fidivl
in
test
stc
jo
add
repnz
shll
sti
xchg
xor
xor
pop
adc
pop
lods
sbb
cltd
push
xor
mov
mov
fldcw
sbb
adc
cmp
sti
insb
mov
jbe
ljmp
dec
cmpsb
pop
outsb
nop
mov
cmc
ret
add
pop
jge
leave
pop
or
les
andb
or
adc
push
divl
add
loope
ret
mov
cmpsb
mov
jne
xor
rep
push
push
mov
mov
sbb
mov
mov
sub
jns
and
sbb
inc
lds
inc
mov
mov
sub
lods
mov
push
sub
and
xchg
arpl
dec
aad
cmp
inc
jp
sti
out
sub
mov
cmp
pushl
adc
jo
pop
aad
mov
dec
inc
repnz
lods
xchg
dec
sub
mov
mov
movsl
cltd
popa
roll
aad
fbld
rcrl
add
dec
aaa
pop
cmp
mov
pop
sbb
push
mov
call
popa
int
inc
jno
adc
sub
xor
shlb
push
lea
and
movsb
pop
ljmp
jne
loop
aad
cmp
mov
xor
or
andb
outsb
dec
pop
or
jbe
adc
addr16
mov
rcl
lret
shlb
cmp
lea
push
pop
xchg
inc
jo
adc
pop
sub
icebp
pusha
ds
pop
pop
pop
or
sbb
push
shll
xchg
sbb
je
mov
sbb
lahf
mov
jae
imul
in
xor
cmp
or
xchg
cli
inc
sub
je
fidivrs
or
subl
add
pop
and
insb
xchg
lret
fwait
mov
ret
mov
cmpsb
inc
lcall
shll
cmc
jp
sbb
in
xchg
adc
sbb
jbe
mov
jmp
mov
mov
cmp
xor
testl
in
sbb
xlat
inc
cwtl
lods
sub
scas
cld
inc
repz
test
jae
jmp
imul
fcoms
ja
out
sbb
push
insb
xor
int
mov
jnp
jg
xor
pop
icebp
jp
mov
data16
addl
sti
scas
cld
test
push
sbb
push
mov
addr16
inc
mov
xchg
mov
inc
in
push
into
push
je
enter
out
popf
dec
mov
or
imul
xor
lock
and
subl
cmp
mov
pusha
inc
in
jmp
lcall
mov
popa
addl
cmpsb
xchg
or
mov
test
add
sbb
xor
imul
fisttpll
outsb
sub
lods
lods
out
xorl
lret
mov
rol
daa
shl
aam
aad
repz
xchg
pop
sbb
in
loopne
mov
nop
cwtl
pusha
push
jns
bound
test
call
aas
xor
seto
sub
or
shlb
lods
mov
lcall
jg
das
lock
in
in
sub
sub
mov
xchg
push
cmp
or
adc
pusha
out
or
aaa
sbb
aaa
pop
rcr
cmp
fildl
je
arpl
push
inc
sub
inc
popf
faddl
scas
pop
cmp
sbb
add
ja
in
pop
ret
mov
inc
sub
adc
leave
mov
bound
xor
lock
rorb
inc
xlat
xchg
sub
movsb
sbb
fistpll
lret
inc
adc
into
jae
fsubrs
repz
movl
dec
sbb
lock
dec
je
shlb
pop
pop
adc
xor
push
push
adcl
dec
sti
xchg
pop
inc
push
out
aad
and
jmp
push
pop
adc
in
nop
add
ror
mov
lods
sbb
jmp
push
jb
clc
lds
add
std
data16
jle
mov
push
outsb
push
dec
adc
icebp
mov
mov
sbb
push
jle
dec
inc
imul
aas
out
mov
inc
dec
pop
or
mull
mov
add
out
int
jl
mov
clc
cmp
mov
loopne
add
push
aas
and
pop
jno
mov
repnz
push
and
sbb
fimuls
ss
adcl
out
jnp
repz
push
cmp
or
mov
and
in
sahf
adc
fiaddl
adc
inc
fsubs
push
pop
push
ret
dec
fbstp
ja
and
jo
pushf
aad
cmp
pop
je
lock
jns
dec
mov
xorl
daa
inc
xchg
imul
lds
xor
jge
scas
shll
dec
mov
mov
imul
xor
mov
push
mov
or
stc
sub
iret
mov
xor
les
enter
movsb
stc
cmp
insl
cmpsl
jge
sbb
pop
xchg
xor
mov
ret
xor
adc
and
icebp
cld
push
mov
dec
mov
and
and
iret
add
mov
faddl
mov
stos
pop
lret
arpl
jp
cmp
lea
pop
scas
decl
pop
in
jno
pop
sub
jbe
push
or
and
or
loopne
rclb
cmpsb
and
sub
adc
mov
sub
fwait
xlat
mov
jb
push
push
xchg
mov
add
push
lods
arpl
xlat
stos
adc
sbb
mov
leave
mov
in
jecxz
mov
aam
dec
cs
insl
movsl
popf
cs
imul
adc
push
sub
loop
sub
pop
popf
cs
mov
lahf
lods
dec
xchg
mov
adc
mov
mov
sbb
mov
call
sbb
xor
or
testl
adc
push
ret
cld
mov
data16
pop
outsb
add
mov
jge
mov
lods
push
cmp
dec
out
mov
stos
dec
cmpl
add
xchg
outsb
lret
cmp
loope
aaa
adc
lea
or
mov
ss
inc
push
ret
fistpl
out
push
mov
orl
push
or
xlat
sbb
cmc
test
pop
xchg
jp
cmp
or
adc
ret
into
ljmp
shl
xchg
jl
xchg
std
sub
cmp
mov
rol
cmp
push
mov
mov
fimull
sarl
lock
popa
ss
xor
lret
arpl
jo
mov
insl
jge
xchg
pusha
test
lods
hlt
in
xor
xchg
sbb
jne
jne
mov
xchg
mov
stos
sub
or
mov
xchg
into
js
sbbl
lock
shr
fucomip
adcb
cmc
popf
push
xchg
mov
jbe
call
insl
xor
loopne
lea
scas
ss
dec
clc
or
push
pushf
popf
push
popa
test
int
pop
iret
imul
push
mov
test
nop
cs
call
xchg
fisubrs
outsb
add
xor
fmull
or
test
adc
lea
js
icebp
dec
daa
sub
sbb
stc
inc
vmulps
xchg
andb
fidivs
mov
lods
pmulhw
dec
shll
mov
movsl
rorl
lcall
test
and
pop
inc
ds
out
cmp
rorb
into
gs
lock
int
in
lcall
cmp
sub
sub
mov
pop
in
push
sarb
xchg
inc
ljmp
fnstsw
mov
clc
mov
adc
loopne
sub
fsubrs
sbb
ret
lret
pop
push
movsb
fwait
and
xchg
inc
jo
test
jecxz
xor
adc
xlat
out
mov
mov
int3
inc
addr16
adc
mov
clc
push
dec
mov
jp
into
dec
fdivrs
cmpsl
xchg
jg
mov
cmp
int
mov
xchg
fimuls
add
lret
ss
adc
adc
int
pop
jns
shlb
add
sahf
fnstsw
leave
call
leave
aaa
lods
ja
dec
pop
inc
es
fsubs
pop
cmpl
push
pop
mov
lds
iret
std
es
sub
cmp
cmp
fldenv
xchg
cmp
add
cmpl
jp
test
inc
out
mov
dec
mov
fcomi
gs
sbb
mov
aaa
jnp
jbe
test
pop
adc
push
mov
lock
and
mov
jno
push
push
and
push
dec
push
or
sub
pop
mov
test
mov
mov
add
add
sub
adc
lods
pushf
subl
or
fisubrs
lds
loope
inc
sub
lret
std
cmp
cli
pop
dec
addr16
outsb
adc
mov
fldl
sbb
xchg
pop
pop
lahf
testl
mov
out
jb
and
push
fldl
jge
movsl
ljmp
inc
or
sahf
pop
mov
jmp
aad
adc
mov
idiv
fdivrl
les
divl
std
outsb
sti
orl
xchg
sbb
fcoms
cld
sbbl
jb
lods
imul
jl
xor
sub
sub
fsubrs
aaa
xor
stc
cltd
test
sub
jbe
xchg
loop
xchg
ja
or
xchg
ja
ret
lock
ljmp
mov
pop
push
arpl
fsubrs
push
jbe
cmp
push
jecxz
xchg
mov
xchg
inc
frstor
js
mov
fiaddl
mov
sub
add
out
cmp
out
roll
cmc
ds
loop
and
pop
or
psubw
xor
shll
jo
cmp
sti
in
push
cmc
xor
adc
push
bound
pop
inc
repz
popf
mull
inc
cmp
rol
mov
jle
sub
push
movsl
cmpb
stos
pop
push
lods
dec
and
push
and
sti
jmp
int3
js
mov
adc
into
enter
fsubl
stos
mov
mov
loop
scas
imul
fcmovb
pop
jle
add
out
xor
cmp
jno
mov
adc
rclb
out
or
inc
sbb
mov
cmpl
aas
mov
jne
xchg
out
jp
adc
test
jmp
cld
imul
mov
mov
cld
pop
mov
xchg
sub
je
jnp
jb
out
push
data16
inc
imul
jle
repnz
rcr
je
xchg
mov
xchg
in
adc
push
lds
aaa
adc
xlat
fisttps
and
not
jae
aam
xchg
xor
lret
add
sti
imul
test
xchg
aam
jnp
stos
std
xor
icebp
pop
js,pn
and
rol
add
insl
je
xchg
sahf
in
xlat
lods
mov
popf
std
xor
or
sbb
push
cld
shrb
lcall
data16
and
jmp
scas
dec
xor
and
pop
imul
addb
jmp
sbb
jns
scas
loop
fisubrl
and
jb
push
pop
inc
dec
mov
sti
addb
loop
in
lahf
mov
decl
loopne
mov
out
aaa
inc
pop
sub
jp
xchg
push
movsb
jb
pop
rorb
mov
loopne
pop
js
orb
daa
xchg
xlat
xor
and
adcb
inc
inc
xor
push
imul
inc
pop
push
addr16
pop
andl
in
xchg
push
xor
mov
cmc
mov
stos
mov
inc
mov
mov
stos
mov
js
xchg
ret
cmpsl
aaa
push
or
xor
lea
popa
loope
mov
mov
arpl
mov
jecxz
adcl
and
add
lahf
mulb
cltd
sarl
lret
aad
cmp
cs
jge
sub
jbe
push
stos
gs
cmp
mov
or
xor
sti
sub
add
int
pop
or
cs
adc
and
fbstp
mov
xchg
xor
mov
arpl
aam
pop
std
mov
mov
mov
add
fimull
jmp
ret
push
loopne
xlat
pop
cmpb
sub
popf
jge
dec
jl
sarb
insb
faddl
mov
insl
scas
ja
and
inc
in
adc
mov
shlb
or
test
movsl
jns
lcall
fwait
cwtl
fsubr
in
out
add
and
mov
inc
jns
cmp
in
loopne
jbe
scas
push
or
push
mov
ror
rorl
pop
arpl
cmp
movl
sbb
aas
mov
call
mov
addr16
pop
pop
jo
lahf
push
push
xor
movsl
call
xor
lcall
in
dec
cmpsb
loope
div
cmp
scas
jmp
ja
aas
sti
ja
cs
push
es
dec
ja
and
push
jo
ror
mov
jbe
fistl
mov
js
inc
cmp
aaa
mov
pop
pop
mov
leave
leave
nop
fwait
outsb
outsl
xchg
xor
pop
cmp
and
sub
das
xchg
les
inc
dec
pop
pop
shr
xchg
in
adc
dec
in
jae
and
push
iret
push
adc
jmp
push
outsl
insb
jbe
and
sti
jmp
popf
and
inc
inc
xor
in
push
pop
xchg
pop
popf
pop
insb
mov
add
cmpsl
test
pop
std
out
sahf
xchg
aam
xchg
xchg
jge
pop
out
fidivl
fldcw
push
xchg
pop
jnp
lahf
mov
add
notb
xchg
daa
xchg
jge
sbb
sbb
push
cwtl
mov
scas
shlb
sub
xor
insb
push
pop
dec
xchg
lcall
mov
mov
aas
fs
xchg
mov
add
call
outsb
fwait
ja
xchg
sub
movsl
in
fs
mov
divl
cli
and
icebp
and
fsubrl
out
mov
mov
cmp
scas
jp
insb
add
out
aaa
movsl
add
sahf
jp
and
lods
sbb
dec
push
jo
sbbl
test
aas
insl
test
out
aam
pop
stc
ja
cld
inc
scas
or
mov
mov
stos
rorb
push
cs
jecxz
mov
testl
pop
lods
aad
out
cmpsl
fs
mov
or
test
lea
cltd
popa
aad
push
sbb
sub
imul
pushf
icebp
test
test
lcall
scas
movsb
popf
test
aaa
sti
inc
dec
ret
and
pop
adc
xchg
jl
or
dec
cld
or
jo
mov
ss
fdivr
ss
scas
pushf
xor
pop
add
imul
in
xchg
clc
push
or
dec
incb
pop
push
lret
cmp
jb
sub
ss
inc
inc
gs
fisubrs
xor
cld
outsb
mov
add
outsb
adc
imul
push
mov
jbe
into
push
push
or
sub
out
mov
das
cld
mov
mov
add
inc
flds
scas
sbb
sub
mov
cmp
sbb
mov
je
fs
jmp
pusha
mov
jbe
cmp
adc
jnp
sub
mov
mov
lods
add
sub
movsb
and
pop
push
fadds
push
aad
jnp
imul
jb
in
cmp
addr16
loope
movsl
sti
test
jo
xlat
es
jecxz
shl
mov
jnp
adc
mov
in
sbb
outsl
pop
ret
mov
outsb
aad
clc
test
repnz
cld
inc
fdivs
pop
jo
test
mull
pushf
lock
add
adc
cs
push
mov
repz
repnz
or
ret
jmp
inc
adc
pop
push
insl
push
test
test
cmp
data16
incb
fadds
lds
push
iret
je
sbb
stos
movsl
shlb
lock
rep
mov
mov
push
push
or
jne
add
mov
jns
jb
adc
mov
cmp
lods
out
cmpsb
mov
das
mov
xor
mov
dec
mov
adc
xlat
outsb
push
pop
mov
xor
sub
mov
add
mov
hlt
enter
push
in
imul
pushf
lea
and
ja
mov
test
negb
mov
jge
daa
sbb
push
leave
cs
imul
sbb
sub
push
mov
adc
jp
je
jmp
std
inc
xor
ss
xchg
testl
mov
jns
push
sub
mov
nop
push
inc
xchg
aad
mov
adc
pop
enter
pop
aad
movsl
cmpl
push
inc
jae
cmpb
leave
jle
daa
jecxz
inc
outsl
mov
sahf
stos
push
or
add
es
rcll
faddp
loop
test
inc
lds
out
fistps
fiaddl
xchg
mov
dec
ficomps
pop
out
adc
and
or
inc
adc
imul
stc
or
lds
add
test
xor
mov
adc
stc
test
xlat
aaa
xor
pusha
adc
pop
mov
out
dec
sbb
sbb
imul
dec
jb
push
mov
and
add
pop
vcmppd
imul
pop
mov
xchg
push
push
cmp
xorl
repz
ficoms
ret
add
lea
xchg
lret
fbstp
xchg
add
cmc
or
rorb
sbb
lcall
push
ficoms
sub
lods
shlb
or
test
mov
or
cltd
lods
inc
add
xchg
test
mov
cmc
stos
outsl
js
xor
xor
push
sarl
inc
inc
xchg
or
fsubrl
adc
cld
aam
into
mov
cmpsl
lahf
in
mov
lock
lods
pop
push
fldl
enter
push
mov
sbb
repz
pop
xor
insb
lret
push
aad
dec
adc
lret
jp
int
mov
popa
lcall
inc
call
stos
add
cmc
xor
jmp
lock
push
scas
mov
ja
mov
inc
and
jne
pop
push
mov
in
add
aad
jnp
sub
shr
pop
push
iret
out
or
push
dec
lock
dec
jp
idiv
aad
call
lret
sub
loope
push
sub
adc
ret
adc
call
or
fnstsw
jno
xor
test
pop
jb
dec
inc
into
les
test
adc
push
xorl
add
data16
cmpsl
repz
stos
sub
pop
fidivs
jne
push
js
lret
inc
loope
add
scas
nop
sarl
sub
xchg
mov
add
pop
xor
int3
dec
out
jae
jg
rolb
jno
and
shl
and
cld
jecxz
push
in
adc
jge
dec
push
divl
fiadds
add
pop
push
jb
push
add
ret
sbb
add
adc
mov
xor
leave
cltd
mov
xor
orb
adc
sub
xor
mov
test
push
out
orb
add
xor
scas
mov
jnp
mov
push
psadbw
lods
subl
cld
fists
fwait
mov
insl
or
rorb
hlt
and
adcl
pushf
cli
mov
test
lret
adc
push
push
fnsave
fs
in
dec
mov
jp
mov
mov
mov
mov
mov
add
adc
push
sti
cmp
movsb
outsb
ds
fnop
insl
das
pop
cld
int3
xchg
out
dec
or
push
popf
sub
cltd
sbb
pop
lret
loop
and
das
enter
rcrl
pop
adc
push
sbb
mov
bnd
mov
mov
mov
inc
clc
xor
jge
sub
lds
jp
rcrb
outsb
or
push
imul
cmp
enter
cmpsb
imul
push
dec
add
mov
xchg
xchg
loope
std
inc
add
push
inc
fs
and
mov
push
xchg
enter
insb
les
pop
int
push
or
push
out
loopne
sbb
xor
fs
xor
jno
scas
movsb
xchg
into
xlat
cmp
roll
pop
pop
ja
test
pop
icebp
repz
aam
je
jl
in
scas
jno
push
mov
pop
popa
pop
sub
jecxz
out
andb
inc
out
or
inc
push
int3
hlt
mov
sub
dec
loopne
orl
adc
imul
jl
and
scas
lret
popl
adc
jp
xchg
subb
dec
movsl
enter
pop
je
xchg
sub
fisttpl
xor
scas
arpl
push
dec
fstpl
mov
lds
mov
jecxz
shrb
cltd
in
sbb
push
pop
mov
das
aas
pop
cmpsl
aad
das
fsubrs
mov
dec
xor
les
dec
notl
pop
pop
add
mov
inc
sahf
sub
bound
clc
loope
add
or
cmpsb
aas
xor
out
adc
pop
or
je
push
fldt
sub
jns
les
test
enter
lcall
pop
push
pop
das
fldcw
jns
cmp
add
xchg
repnz
pop
aaa
or
dec
cmp
cmpsl
mov
ljmp
mov
or
ss
loope
faddp
and
std
imul
ret
aad
or
ret
mov
sahf
loop
out
js
mov
xor
mov
mov
faddl
add
mov
dec
xchg
and
xchg
mov
ljmp
add
pop
cmp
jg
pop
pop
sbb
or
lds
and
daa
jg
lock
call
jnp
out
out
ror
jo
mov
imul
fisttpll
or
cmp
in
outsl
dec
push
dec
aas
mov
lods
inc
lret
push
ds
sti
push
dec
mov
jmp
outsb
mov
mov
imul
imul
mull
mov
sahf
and
cltd
mov
dec
or
and
push
sahf
test
push
ds
xchg
movsl
aam
mov
xchg
stos
and
jns
xor
push
in
loopne
mov
push
jb
mov
or
inc
cmp
add
sbb
dec
int3
jg
xchg
sarb
pop
gs
imul
es
test
and
fs
loope
test
mov
pop
lahf
mov
dec
adc
incb
mov
or
cmp
sahf
push
xor
sar
xchg
cmc
push
out
fwait
cld
pop
xor
xor
mov
xor
ja
fldt
mov
jmp
add
outsb
mov
movsl
mov
loop
dec
movsl
ja
xor
or
mov
adcl
std
mov
pop
out
aam
push
sub
stc
add
aas
loope
pop
adc
push
leave
add
insb
gs
out
push
mov
jnp
pop
insb
pop
mov
repz
fsubrs
and
mov
sub
jg
scas
push
lods
add
sti
gs
add
xchg
adc
jno
xor
jle
fs
sbb
mov
sbb
iret
adc
mov
jmp
dec
cmpsb
mov
loop
add
or
mov
in
dec
or
in
add
mov
pop
lret
test
mov
and
inc
sub
push
and
in
subb
and
cmp
mov
lods
imul
pop
ja
xor
cli
out
out
lret
mov
jb
jmp
jge
push
sbb
xor
mov
dec
jle
pop
shl
repnz
add
xor
cmp
lock
scas
dec
mov
mov
cmp
add
ret
pop
xchg
in
dec
xor
dec
inc
ss
dec
clc
nop
mov
inc
ds
cmp
dec
ljmp
fistl
mov
sub
jl
ljmp
pop
imul
xchg
cli
test
addr16
dec
jge
sub
xchg
push
adc
out
stos
add
rorb
dec
pop
inc
ljmp
cmpsl
or
and
adc
repz
mov
sub
test
and
dec
ret
add
fdivl
ss
out
mov
out
js
pop
pop
sbb
testl
loop
or
pop
std
stos
aas
sub
sbb
arpl
sub
cltd
push
add
sub
sbb
jl
adc
and
ljmp
or
pop
push
test
xchg
rolb
movsb
sbb
xchg
pop
mov
push
inc
mov
cmp
cmpsb
loopne
imul
push
pop
outsl
pop
call
inc
es
and
scas
cli
shlb
xchg
int
and
pushf
add
push
xor
or
repz
push
pop
loopne
cwtl
xor
test
and
aaa
out
ret
subb
push
sbb
mov
fisttps
outsl
jge
mov
scas
enter
mov
or
iret
pop
rorl
fs
and
loope
sub
mov
cmp
repnz
stc
rcrl
sub
jnp
pop
adc
push
xchg
xchg
push
pusha
int3
rcrb
add
sub
out
mov
fbstp
std
aaa
cmp
rol
push
lock
sub
addr16
cs
pop
outsl
pop
popf
hlt
adc
mov
inc
outsl
pusha
sub
mov
or
cmp
push
aaa
int
push
mov
lret
or
bound
jp
ja
call
divl
dec
add
add
add
loope
sbb
vunpckhpd
test
mov
inc
into
aad
lret
ret
jo
pop
imulb
mov
outsl
jbe
jno
stos
or
mov
mov
rclb
mov
repz
mov
div
stos
push
das
lds
jnp
out
icebp
aam
aas
rorb
cli
mov
inc
pop
or
pop
loope
push
xchg
push
lods
sub
jl
adc
ret
mov
inc
out
out
xchg
enter
adc
jns
icebp
dec
pop
rorl
push
mov
or
fisubrs
add
pop
add
sbb
jnp
aas
mov
cmpsb
in
sti
jmpw
jno
jecxz
inc
aaa
dec
out
orb
test
mov
ja
dec
arpl
and
cmp
sahf
push
dec
shll
popf
pop
sbb
cwtl
xor
mov
xchg
mov
pop
inc
bnd
pop
mov
mov
iret
mov
idivb
or
iret
pushf
cvtps2pi
std
jp
cli
decl
arpl
enter
int3
cmp
mov
jmp
xchg
add
ror
outsl
gs
push
mov
or
push
dec
into
push
psrld
insl
movsl
lods
inc
out
pop
ret
inc
shll
push
stos
mov
not
and
ret
das
or
ret
daa
leave
call
push
and
pop
sub
xchg
addb
lahf
outsb
dec
aad
movsb
loop
mov
out
cmpb
mov
pop
dec
xchg
jno
mul
clc
call
add
out
push
mov
lret
fs
cmp
lds
inc
popf
add
js
clc
dec
stos
addr16
mov
push
adc
inc
movsb
sub
rclb
push
jno
in
sbb
movsb
cmp
roll
mov
frndint
mov
push
push
sbb
jb
in
roll
xor
mov
inc
dec
test
and
out
mov
inc
sbb
aad
imul
jo
push
jo
mov
xchg
cwtl
push
icebp
push
or
and
out
jmp
xor
xchg
rcr
in
jmp
or
repz
and
mov
dec
popa
inc
fiadds
jge
cmp
cmp
aaa
pop
loope
adc
jb
inc
adc
ret
std
clc
in
jle
xor
cwtl
mov
cltd
xchg
ja
push
xchg
ret
sahf
scas
or
mov
leave
push
lea
ss
in
jnp
hlt
adc
jae
enter
lods
xchg
jmp
sub
lret
clc
addr16
jle
jb
mov
mov
in
mov
xchg
fadd
cmp
cmp
adc
mov
xor
pop
cmp
in
mov
push
sbb
sub
lret
addl
inc
or
push
fcmovu
out
xchg
inc
pop
xor
dec
and
inc
pop
mov
and
sbb
xor
mov
and
push
rcll
jo
sar
ss
mov
into
xchg
adc
or
insb
rcrb
mov
fwait
or
andb
mov
xchg
rcll
mov
ljmp
inc
mov
test
xchg
cli
cmp
arpl
jae
mov
mov
js
sbb
sbb
mov
jnp
and
sbb
jo
lds
mov
add
add
jle
xor
out
push
cld
pop
sub
stos
push
aas
sbb
mov
inc
testb
add
inc
add
loopne
sub
xchg
jno
mov
fwait
scas
and
out
scas
sub
add
mov
cli
xlat
inc
rclb
adc
sahf
and
in
imul
fistps
dec
sub
gs
lods
jle
ljmp
mov
push
jmp
pusha
mov
lock
sahf
push
sub
stos
ljmp
shll
movsb
movb
fs
data16
cmp
xchg
fsubs
rol
mov
out
lock
xchg
pushf
cmp
outsb
ret
js
scas
and
and
out
mov
aad
dec
in
xchg
daa
mov
sbb
lret
xor
dec
popf
popl
sti
add
jle
cmpsl
cmp
sub
lds
push
popf
add
or
mov
and
out
hlt
pop
mov
push
mul
lcall
sbb
jl
pop
sub
lcall
movsb
lret
and
push
enter
xor
ret
pop
push
sbbb
fst
sti
es
jne
and
movsb
ss
test
std
mov
in
rorl
addb
test
icebp
mov
dec
xor
add
or
dec
sub
and
mov
mov
rorl
mov
sbb
out
adc
sbb
cmc
or
rclb
decb
push
inc
mov
les
xor
push
hlt
pop
jg
push
jp
in
or
push
sbbb
adc
ljmp
mov
and
inc
push
xchg
or
push
jl,pn
xor
adc
or
adc
push
jnp
adc
or
xor
mov
mov
scas
sbb
xchg
repnz
mov
shlb
push
roll
stos
aam
cmpb
int3
ljmp
xchg
xor
fcoms
in
jg
pop
andb
xor
lret
loop
or
pop
sbb
push
adc
xor
adc
pop
scas
mov
add
mov
repz
repnz
popa
add
xchg
xorl
pop
fsubrl
jns
imul
aam
jns
push
fisttps
aaa
pop
pop
lret
xlat
repz
fs
rcrl
scas
cmp
mov
repnz
jmp
test
add
push
test
inc
clc
xor
movsb
fwait
lods
mov
cli
lds
nop
xchg
inc
inc
pop
cli
sti
adc
inc
lret
mov
jb
lcall
fdivs
push
sub
hlt
push
stc
mov
cwtl
cmp
jle
fwait
shr
sti
cmp
xchg
lds
daa
mov
xchg
jl
and
lret
sub
lahf
inc
data16
push
ret
lret
inc
sub
sbb
cmp
aas
adc
add
add
ds
push
repnz
stos
mov
pop
inc
cmp
pop
data16
jle
jle
push
out
mov
xor
repnz
pop
cmpsl
dec
int3
incl
int3
imul
es
mov
mov
add
pop
ja
out
sahf
loope
pop
push
and
and
in
pop
and
pop
or
loope
inc
cmpsl
aas
jge
dec
push
insb
jns
aam
das
xchg
jg
fisttpl
lret
icebp
lea
out
incb
xor
lea
adc
push
and
enter
sbb
pop
mov
sub
cs
ja
outsl
sti
pushf
decb
dec
sub
pop
pop
insl
mov
or
scas
sub
mov
adc
fdiv
int3
and
test
jno
in
ja
into
add
int3
mov
add
or
xchg
push
loope
pusha
scas
sub
aaa
mov
es
loope
mov
jl
lods
sbbl
cs
and
mov
pop
fcompl
inc
mov
pop
mov
movsl
lcall
lds
rorb
xor
pop
mov
mov
xor
test
mov
aas
adc
push
mov
mov
mov
ret
add
xlat
xor
int3
in
ja
fcmove
push
or
in
arpl
out
xor
jne
in
pushf
add
inc
pop
movsb
pop
out
jle
mov
pop
mov
cmp
fwait
lds
rcrb
leave
cwtl
cld
push
xor
cmp
jle
cwtl
shrb
js
or
pop
das
push
mov
out
mov
pop
incl
rorl
insb
sub
outsb
push
push
xlat
dec
xchg
xlat
in
loope
test
mov
and
js
loopne
mov
sub
cwtl
aad
add
mov
pop
scas
jmp
out
jno
push
stos
mov
sbb
xchg
mov
shll
imul
mov
fucom
ficoms
lods
mov
push
rcrb
mov
cwtl
push
add
in
mov
pusha
repnz
inc
fwait
xor
int
lods
orb
adc
rol
shrb
cs
in
bnd
fld
push
push
out
inc
cmp
xchg
add
es
call
not
xchg
pop
fwait
cmp
imull
and
or
adc
cmp
daa
cld
pop
or
xchg
out
cmp
mov
imul
dec
cmp
mull
add
pop
inc
dec
sub
cmp
das
pop
jae
les
cmp
push
lahf
insb
cmpsl
mov
adc
mov
repnz
xchg
add
lock
std
push
cmc
mov
inc
or
sbb
lret
sbb
xor
cmp
push
cmp
pop
inc
ds
inc
jo
mov
fldcw
mov
arpl
mov
dec
dec
pcmpeqb
loope
loope
or
jbe
inc
lea
cmp
dec
push
movsb
jnp
sbb
clc
xchg
pop
xor
cmp
inc
into
movsl
repnz
push
nop
ljmp
add
sbb
sbb
outsb
inc
cmp
test
push
cs
mov
inc
pop
mov
or
add
inc
out
imul
xchg
mov
movsl
jle
into
push
mov
shrb
mov
call
in
mov
sbb
xchg
je
fwait
push
loopne
push
and
sub
adc
pushf
add
sbb
lret
jge
test
into
daa
stos
lea
jmp
nop
hlt
push
subl
mov
fcomps
aam
iret
mov
mov
repnz
cs
pop
lds
or
inc
xchg
adcb
jo
repnz
popf
dec
xchg
adc
jmp
shrl
sub
sbb
pop
cmp
ljmp
pop
sub
push
or
fsubrl
inc
faddl
out
xchg
adcb
push
int
popf
das
dec
rolb
test
out
fistl
into
fmull
into
mov
imul
movsl
insb
sti
mov
scas
insl
push
aad
xchg
popf
cli
test
pop
outsl
test
mov
xor
gs
sub
xor
ljmp
sub
jae
push
int3
lret
in
pop
mul
sbb
out
cmp
aam
jno
jmp
ds
in
cmp
push
in
je
fsubrl
push
mov
cs
fnstenv
aaa
mov
or
cmp
hlt
ja
sub
adc
lahf
mov
and
jp
push
call
out
mov
fs
stos
lds
or
arpl
xchg
xor
filds
mov
mov
sub
xor
dec
lods
shrl
xchg
cs
aam
dec
aas
fiaddl
cwtl
jnp
or
lock
imul
mov
push
lds
les
clc
jp
xor
xor
mov
enter
stos
mov
or
mov
in
xor
insl
mov
jnp
or
stc
in
fnstsw
mov
mov
out
insl
loop
mov
sub
mov
pop
insl
lahf
clc
rcrl
or
out
mov
ret
in
dec
rorl
jecxz
aaa
int
ss
mov
mov
xor
jb
push
ud2
cmpsl
movsl
pushf
enter
mov
lock
idivb
icebp
push
imul
inc
loopne
dec
rolb
shrb
ret
js
jae
dec
pop
js
into
push
dec
test
ficomps
mov
or
xchg
loopne
jle
rorb
cmc
mov
mov
popf
int
sbb
std
mov
jno
movsl
jae
in
mov
mov
out
pop
scas
mov
int3
ljmp
fmul
iret
fwait
mov
jmp
fidivrl
and
mov
popa
pushf
pop
dec
add
pop
fucom
adc
mov
mov
hlt
xchg
hlt
movsl
lds
and
xchg
xchg
push
mov
mov
call
adc
xchg
dec
icebp
pop
pushf
mov
sbb
or
cmp
adc
mov
and
in
inc
imul
fdivr
cs
mov
mov
scas
sbb
xor
icebp
or
addr16
sbb
adc
or
sub
or
sahf
out
loopne
sahf
in
and
xor
mov
js
les
push
ret
leave
sbb
jno
mov
cmp
test
or
js
sub
sbb
jmp
out
pusha
add
or
jne
test
mov
loop
or
pop
or
loopne
ljmp
int
pop
outsb
adc
mov
mov
adc
jecxz
sub
punpckhdq
out
dec
add
call
int
mov
add
stos
dec
jge
xor
jmp
std
stc
ss
adc
jg
lea
std
mov
js
pop
xor
mov
lds
mov
jae
push
ljmp
mov
lds
jnp
add
ds
jle
dec
stos
in
divb
cmpsb
int3
imulb
xchg
jnp
mov
sub
and
jp
and
adc
sbb
add
pop
orb
cltd
shl
pop
jns
jle
mov
xor
push
jnp
aad
aas
push
stc
cltd
pop
leave
cs
sub
clc
xchg
fs
jne
pop
sbb
repz
mul
add
test
push
cld
out
or
pop
repnz
add
lock
pop
lret
sbb
loope
adc
xchg
hlt
adc
test
in
push
call
sbb
cmp
loopne
lcall
pop
cmp
lds
fwait
xchg
pop
sti
or
pop
leave
adc
daa
xrstor
bound
cmp
movsl
jne
fcmove
fildl
cmpsb
mov
mov
out
iret
push
loope
stos
xchg
jae
repz
movl
and
roll
xchg
les
enter
cmp
cmpsb
mov
or
lret
add
inc
pop
pushf
jb
movsb
mov
xor
insl
ds
les
inc
or
jp
pop
daa
cmpsl
jmp
fdivrp
loopne
std
mov
scas
in
ret
repnz
addr16
push
aam
pop
jo
aaa
stos
lock
and
fistps
cmp
and
ficoms
cs
sbb
push
inc
cmpsb
subb
sub
jle
sub
insb
movsb
mov
lret
add
mov
xchg
fnsave
mov
jae
mov
movsl
xor
popa
mov
scas
jp
movsb
cmp
pop
push
lea
adc
aad
push
shll
or
stos
or
into
out
and
sub
mov
ret
jnp
dec
leave
xchg
insl
jg
mov
stos
pop
push
jns
aam
sub
pop
mov
imul
imul
xchg
adc
dec
into
inc
xchg
jo
mov
bound
arpl
mov
inc
pop
and
arpl
cld
adc
jmp
xor
js
push
mov
push
push
inc
in
fcom
loopne
pusha
xchg
imull
cld
into
addr16
ret
jae
jno
js
inc
xchg
fidivs
orl
and
in
xchg
and
or
mov
fucomp
lea
sahf
mov
mov
mov
dec
call
ret
scas
jb
jecxz
jne
hlt
xor
movsl
movsl
xor
mov
dec
sarb
mov
ja
xchg
pop
insb
or
test
mov
mov
dec
hlt
or
push
push
pop
subl
sti
cwtl
adc
cmpl
dec
les
and
xchg
loopne
mov
mov
or
cmp
std
cmp
or
mov
in
pop
add
scas
xchg
fs
jecxz
jmp
and
adc
jo
nop
popa
jbe
or
out
outsb
mov
cmp
adc
cs
dec
pop
add
mov
outsl
addr16
aam
je
mov
xor
out
xor
or
mov
adc
or
fldenv
sbb
in
stos
push
fidivs
dec
fldln2
cmp
lea
and
les
jmp
or
and
xchg
loopne
cmpsb
xchg
lcall
add
scas
inc
jecxz
fildl
stos
xor
cmp
push
and
adc
jno
aam
jae
fldt
sbb
or
rcl
pushf
popf
ja
cmp
xlat
scas
movsl
das
dec
inc
int
pop
jp
mov
lock
jno
mov
push
sub
inc
cmc
jbe
fwait
sub
or
mov
inc
insb
mov
in
mov
mov
dec
stos
mov
mov
bound
cmovne
xor
mov
clc
mov
insb
xor
int
pop
clc
sbb
pop
lea
xchg
hlt
aam
sbb
adc
repz
sub
and
inc
call
js
cltd
data16
gs
or
ret
jnp
mov
mov
sbb
shll
cmp
leave
addr16
ja
cs
movsb
ja
cmp
lahf
mov
inc
xchg
push
cmpsl
xor
js
push
and
out
sub
cmpsl
jnp
addr16
mov
jne
stos
decb
and
cmp
xchg
insb
adc
and
add
inc
add
outsl
in
lods
xorl
aad
pop
push
xchg
dec
jb
cmpsl
je
cmpsb
mov
jo
and
add
aad
fstl
in
gs
and
cmpsb
into
mov
jg
jl
xchg
adc
add
insb
imul
push
adc
pop
inc
mov
push
popa
push
add
inc
mov
xor
jg
repz
lret
daa
jb
mov
xchg
or
hlt
subl
lds
rcr
inc
movsb
adc
int
daa
fnsave
or
dec
jp
inc
push
loope
push
roll
xchg
ror
fildll
push
xchg
cmc
aas
jecxz
jmp
outsl
mov
ss
dec
cmp
xchg
stos
mov
add
xor
fs
lret
idiv
push
xor
sbb
jle
rcrl
bound
jo
imul
icebp
sub
mov
add
xchg
jmp
push
lds
jae
test
bndstx
roll
aaa
or
jg
loopne
pop
xor
and
and
xorl
push
lea
paddb
fsubrs
fdivl
mov
cmp
dec
push
stc
dec
arpl
lods
jle
pop
lds
xchg
shlb
or
in
cmp
mov
xor
int
ljmp
nop
cmc
add
cwtl
out
cmpsb
mov
cmp
mov
mov
inc
jp
mov
cmp
jp
test
xchg
daa
scas
test
lea
jge
and
std
test
sub
and
adc
je
sbb
add
stc
call
jns
aaa
ds
iret
sbbb
pop
sbb
sbb
insb
cltd
dec
es
jno
sbb
lahf
mov
scas
into
jge
adc
pushf
call
lret
mov
in
mov
in
lods
pop
imul
push
scas
xchg
adc
sbb
in
arpl
cmc
in
stos
sub
fdivr
out
fs
dec
mov
or
cmpsl
and
adc
loop
dec
pop
inc
cld
mov
and
xor
mov
xchg
ja
insb
mov
data16
mov
pop
push
cmpsl
fisttps
scas
movsl
aaa
cli
sub
fldenv
ficoml
out
pop
mov
or
push
neg
jb
mov
inc
imul
fbstp
test
outsb
cs
dec
cltd
pusha
ds
in
add
inc
sub
mov
mov
test
imul
jecxz
mov
int
cmp
stc
or
fs
dec
leave
mov
add
mov
sar
test
mov
pop
ss
js
movb
mov
jge
notl
data16
mov
and
shll
lods
mov
mov
mov
fdivs
test
xchg
imul
push
mov
push
shrb
cmp
and
mov
bswap
mov
adc
sahf
jmp
pop
movsl
cmp
xchg
cmovle
push
addr16
cwtl
jg
pushf
sub
jle
test
jg
test
movsl
fs
jae
push
jns
jmp
jne
les
aad
push
inc
test
or
adc
das
insl
fists
dec
shlb
cli
mov
gs
jle
mov
sahf
sarb
imul
out
je
pop
sbb
repz
popa
lea
dec
movsb
test
aam
xchg
js
adc
jle
sub
mov
and
mov
das
popf
pop
bound
call
nop
clc
push
inc
rcl
enter
lock
xchg
mov
sbb
push
sbb
test
xchg
std
jno
or
push
inc
ja
imul
movsb
sbb
xor
jns
pop
lock
sahf
leave
xor
test
imul
rolb
fwait
xchg
add
movsl
outsl
shll
ficomps
cmpb
repz
je
add
mov
std
insl
out
xchg
loop
gs
mov
shlb
imul
rcrl
inc
repz
xor
les
mov
dec
jnp
add
mov
call
and
push
fcom
das
pop
repnz
push
js
sub
pop
int
jge
or
aad
sub
adc
inc
sarb
mov
jne
jge
insb
cmp
or
iret
out
jno
adc
sub
fiaddl
jmp
jno
adc
mov
cmc
inc
pop
xchg
push
sbb
xor
sbb
sub
mov
dec
mov
mov
jae
push
inc
fxch
mov
or
icebp
aaa
inc
arpl
iret
jge
clc
orl
jb
mov
adc
aam
stos
mov
and
add
shl
push
lds
fsubr
or
test
rcl
clc
fidivl
and
ret
loopne
add
push
int
fsub
lret
pushf
pop
mov
out
jbe
repnz
fnsave
aad
sub
iret
push
jb
pop
rcll
jmp
ljmp
pmaxsw
pop
push
cltd
aam
inc
iret
sbb
stc
fistl
ficompl
mov
lods
dec
nop
and
aas
xchg
cmpb
call
mov
push
xchg
cmpsb
cs
daa
cld
jl
or
pop
dec
int
xchg
imul
in
jg
push
xor
xor
pop
cmp
pop
xlat
mov
cmpl
xchg
movsb
test
mov
dec
rclb
out
inc
outsb
cltd
cld
andb
jl
leave
or
push
mov
and
xchg
icebp
orb
cmc
pop
rcrl
sub
mul
mov
push
jne
sarl
aad
popf
adc
ss
fsubl
xor
jnp
lea
int3
addr16
jp
jbe
iret
mov
scas
rclb
addr16
jle
adc
jecxz
cmp
ficoml
leave
mov
jge
sbb
outsb
inc
mov
sub
scas
jle
adc
pop
sub
es
mov
das
fisubrl
jecxz
push
cmp
orl
fistpll
inc
and
mov
push
adc
movsl
popf
mov
outsl
cmp
sbb
and
daa
rcrb
cmp
test
dec
rcrl
movsb
sbb
sbb
push
hlt
push
cs
inc
push
shlb
xor
mov
dec
sbb
movsb
aad
add
lds
icebp
cwtl
sbb
xchg
inc
xor
shll
stc
out
sti
lods
movsl
leave
ds
loop,pt
cld
into
scas
mov
addr16
xor
mov
or
jno
jae
movsb
add
jge
or
and
std
gs
iret
sarb
pusha
mov
lcall
adcb
sbb
sahf
push
sti
adc
call
jb
outsb
xor
shlb
pop
lock
and
int
jecxz
mov
fdivrl
mov
pop
mov
dec
pop
rolb
inc
push
inc
xchg
shll
fs
mov
push
insb
sub
inc
mov
mov
shrl
jle
adc
sbb
cmp
or
scas
out
mov
lds
stos
mov
sub
orl
xor
sub
decb
adc
andb
popa
shl
sarb
pop
and
lcall
leave
cmp
mov
dec
mov
test
movsb
arpl
shl
push
and
push
lods
rcl
jne
mov
icebp
fwait
jnp
lds
int3
dec
mov
movsb
out
add
in
mov
dec
ret
frstor
xchg
out
sahf
mov
mov
xchg
cwtl
insl
jg
movsb
or
ss
in
lea
repz
and
jg
lahf
mov
and
mov
jp
mov
cli
push
xchg
shlb
in
mov
cmp
call
push
lahf
cmp
cltd
push
jle
adc
mov
cmp
cmp
int
dec
in
mov
cmp
movswl
xor
inc
lcall
in
mov
lds
sti
or
dec
fs
push
insl
push
mov
pop
call
mov
mov
push
scas
add
in
push
push
pop
mov
movsl
js
test
xchg
adcb
fistpl
pop
pop
mov
testl
mov
je
pop
dec
mov
push
mov
xor
loopne
fdivrs
mov
mov
pop
xor
cmp
sbb
leave
add
sub
pop
xorl
push
lea
imul
xchg
fisttps
pop
and
mov
xchg
mov
xor
push
out
imul
push
test
fimuls
iret
les
fidivrl
or
jb
cld
push
inc
adc
add
push
push
les
jo
dec
js
in
inc
pop
and
jnp
pop
cs
pop
sbb
in
mov
arpl
or
jmp
lea
jbe
imul
stos
cmpb
ret
fwait
sahf
fidivl
lods
imul
inc
sbb
lahf
jbe
popa
out
bnd
hlt
insl
pop
inc
test
and
cltd
push
pop
inc
mov
cmc
jecxz
sbb
push
pop
dec
push
jb
jecxz
hlt
shll
sbb
xchg
sti
lock
pop
sub
add
dec
mov
or
adc
rclb
push
push
and
fcomi
pop
and
fcoms
or
lock
scas
lds
sub
loope
mov
pop
ret
xor
cmp
imul
pop
adc
cmp
sub
xor
sub
aam
mov
stc
iret
inc
ss
add
jecxz
pop
out
push
fcmovne
in
mov
mov
or
fisubl
fildl
adc
lods
add
or
pop
cmp
sti
sbb
xor
pavgb
in
inc
xor
dec
fsubr
xchg
and
idivb
ljmp
hlt
dec
or
daa
fiadds
lds
or
rcll
mov
sub
jo
add
dec
xchg
inc
dec
das
inc
or
mov
sbb
mov
xor
sub
insl
pop
dec
or
jae
dec
push
jp
jmp
xchg
ja
adc
xor
push
mov
jne
mov
add
pop
cmpsl
xchg
movsb
push
sub
push
scas
repnz
pop
jbe
sbb
int3
xor
inc
call
cltd
add
lods
xchg
cltd
push
pop
lahf
or
jae
jl
ja
fnstsw
sub
mov
mov
xlat
fstpt
sub
push
add
inc
mov
leave
enter
jne
insl
lea
daa
aam
bound
das
ss
mov
jecxz
jp
mov
sub
xchg
rcl
pop
dec
pop
and
cltd
adc
fmuls
adc
xchg
mov
inc
ja
jne
sbb
jmp
mov
xchg
arpl
loopne
mov
xlat
mov
cmp
push
xchg
and
ja
inc
aad
dec
xor
pop
imul
out
and
out
insl
mov
outsl
sbb
daa
cld
addl
push
inc
and
add
lea
scas
test
push
dec
inc
imulb
ret
in
ja
daa
sbb
sti
ljmp
into
insb
inc
sbb
aam
ja
or
mov
xor
subl
outsb
push
lods
rcrl
xchg
rcl
aas
xor
add
int3
pop
pop
mov
movsb
lcall
cltd
inc
cmp
icebp
or
das
sub
enter
xchg
xchg
iret
xchg
sbb
push
jae
test
sbb
mov
pop
mov
fadds
cli
xor
shrb
inc
shl
cmp
aaa
lret
loop
inc
ret
xchg
fmull
paddsw
mov
insb
iret
out
lods
cli
stos
aaa
mov
sub
outsb
mov
in
pop
adc
pop
sbb
insl
sub
jno
sar
cltd
ja
lcall
stos
or
mov
push
and
xor
scas
push
movsl
mov
rcrl
scas
das
pusha
loopne
leave
js
and
mov
imul
test
ds
and
jno
scas
push
jo
test
mov
repnz
push
fs
scas
cmp
mov
mov
aas
push
xchg
cld
mov
push
jne
test
mov
cmpsl
xor
sub
inc
inc
cmp
inc
out
int
inc
out
in
data16
movsl
mov
dec
adc
sub
int
mov
mov
mov
jecxz
push
rcll
js
cmp
cmpsb
cld
out
add
fadds
ds
dec
xor
negb
clc
in
or
dec
out
jno
and
cmp
pop
inc
mov
jnp
js
xchg
mov
xor
addl
lret
jne
mov
lahf
mov
fisubrl
lret
push
or
push
pushf
pop
in
inc
fs
arpl
add
xor
mov
inc
test
sti
nop
jne
mov
fsubr
xchg
sbb
push
sub
mov
pusha
mov
xor
jne
mov
mov
mov
xchg
fsubr
cmp
ret
cmpsb
roll
int
inc
cmp
adc
pop
insb
dec
dec
cld
aad
xchg
inc
push
pop
std
enter
and
jo
arpl
iret
sbb
push
ret
xor
dec
and
adc
lock
jae
mov
and
cld
ror
dec
mov
mov
sti
mov
in
adc
push
push
lods
popa
movl
and
push
push
in
mov
ljmp
rcl
clc
mov
mov
push
add
sub
rcrb
adc
data16
pusha
cmc
lcall
int3
adc
xchg
daa
mov
fistps
daa
adc
sarl
xchg
fcmovne
int3
inc
cltd
or
fidivrl
sahf
bound
mov
inc
cmp
mov
sar
mov
xchg
stos
xor
inc
mov
mov
stos
cs
sbb
cmc
add
xor
fisttpl
inc
aam
test
out
stos
fisttpl
sti
in
cmpsl
sbb
rcl
pop
pop
pop
jge
jg
sub
sbb
or
imul
xchg
dec
mov
out
adc
xchg
shl
clc
dec
push
out
fistl
mov
inc
mov
jmp
pop
stos
xor
ret
sub
inc
inc
fcomip
or
mov
pop
sbb
sbb
xor
outsb
sbbl
stos
dec
leave
push
lret
out
inc
adc
fwait
xchg
int3
or
es
imull
sub
mov
out
imul
xchg
or
xchg
dec
gs
mov
xor
aas
and
dec
fwait
ja
push
cli
dec
pop
jmp
lods
int
sub
adc
lret
dec
sub
and
daa
jg
jb
lsl
cmp
mov
xor
push
jns
lods
jg
imul
jmp
frstor
mov
jg
xchg
mov
pop
ja
pop
outsb
mov
sti
add
xchg
cld
jbe
out
mov
nop
cmp
aam
sbb
xchg
ret
out
add
cmpsl
lds
pop
mov
lret
sbb
sub
xchg
jbe
push
xlat
and
cmc
xchg
pop
gs
xchg
adc
cli
ja
xchg
xor
fs
lret
push
xchg
jo
adc
pushf
mov
outsb
pop
or
nop
movsl
neg
or
and
call
add
mov
mov
xlat
rcl
arpl
js
popa
cmpsl
cmpsb
lock
and
test
int3
mov
test
adc
pop
sub
mov
xchg
add
rcrl
cmp
cmp
dec
xchg
cmp
fidivrs
sub
cmp
inc
insb
ret
sbb
in
fcoms
xchg
sbb
jge
cwtl
sbb
add
jnp
pushf
sti
enter
jne
and
testb
mov
jno
test
fstl
mov
dec
mov
shll
mov
lahf
aam
ja
subb
push
outsl
jbe
jbe
mov
jb
das
loop
pusha
xchg
addb
xchg
jmp
leave
arpl
jmp
stos
xor
pushf
xor
mov
pop
rcrb
testb
jb
fnstsw
pop
mov
mov
mov
ret
stos
jno
add
mov
mov
mov
ds
sbb
fs
loop
imul
sbb
dec
inc
int
mov
ja
aad
popf
out
add
add
cmp
mov
int3
lods
add
outsb
iret
cwtl
das
ds
xor
in
movsl
mov
std
shlb
mov
xchg
adc
adc
jnp
push
das
sub
or
iret
test
inc
mov
movsl
movsb
test
fwait
pop
cs
push
xor
and
mov
ja
mov
sbb
daa
addr16
jge
xchg
push
dec
imul
orl
test
test
js
outsb
jo
mov
ljmp
xchg
inc
or
push
pop
xchg
adc
cmp
in
fsubs
filds
add
mov
adc
mov
scas
in
push
shll
xor
sbb
mov
adc
add
xor
and
add
stc
mov
add
stos
push
and
mov
mov
addl
cmpsb
aas
sti
lods
jl
stos
outsl
ja
push
jns
adc
leave
inc
popa
loop
push
mov
add
xchg
in
test
push
out
inc
js
aam
sbb
jp
mov
sar
fwait
gs
ja
jle
loop
jns
mov
stos
mov
imul
jo
imul
jge
stos
adc
pop
divl
out
jnp
and
jle
pop
mov
dec
mov
sbb
aas
loope
aam
xchg
jge
push
sti
ret
pop
mov
inc
aas
fcomps
adc
lods
add
lahf
xchg
ss
inc
out
int3
push
sti
jp
mov
sub
xchg
loope
xchg
inc
cmpsb
and
mov
test
mov
push
mov
and
popf
jns
leave
inc
fwait
sbb
adc
cmpsb
cs
inc
mov
mov
call
jg
sub
dec
les
xchg
call
mov
lcall
fnstenv
popf
add
mov
aaa
cmpsl
out
fldl
jbe
sbb
rcl
pop
repz
cmpsl
test
sub
jbe
adc
pusha
sub
cmp
xchg
pop
xchg
inc
cmp
fwait
inc
push
cmp
jl
or
mov
cmpsb
cmp
sub
ds
ret
out
sub
in
push
ret
xchg
inc
lcall
pusha
enter
rorl
or
jbe
not
push
jge
cld
daa
mov
aad
mov
cmp
sbb
mov
je
mov
aaa
out
pop
std
movsb
dec
in
and
sbb
cmc
scas
mov
aaa
lret
insl
ss
jmp
into
mov
inc
mov
cmpsl
inc
cltd
mov
xchg
roll
mov
icebp
mov
popa
cmpsl
mov
push
push
and
adc
jb
push
dec
scas
inc
inc
xor
stos
lret
mov
jno
adc
or
add
fiadds
xchg
add
jae
or
rolb
aam
movsl
push
in
out
sub
or
sub
mov
orb
outsb
pop
push
out
push
add
jns
xor
aam
push
fmuls
pop
xchg
inc
inc
sbb
or
dec
pop
xchg
pop
daa
in
and
mov
dec
sub
ret
mov
sbb
mov
repz
dec
sub
das
aam
inc
andb
fldcw
jg
and
cmc
push
xor
fiadds
sbbb
call
jo
jp
push
sbb
mov
push
and
negl
test
cs
push
inc
fcoml
xchg
cmp
mov
addr16
and
clc
aam
leave
leave
test
mov
in
test
sbb
shll
pop
scas
inc
sub
loope
mov
dec
pop
push
js
hlt
pop
pushf
mov
decl
adc
and
pop
fisubs
cmpsl
int
adc
xor
loope
mov
sub
fst
sarb
in
or
lret
mov
inc
jmp
jnp
sub
sub
rcrb
frstpm(287
sub
cmpsb
sbb
in
xchg
insl
add
sbb
test
aad
outsb
cmc
add
std
fiadds
jle
mov
rclb
lock
mov
aad
mov
js
in
pop
and
mov
jne
inc
push
mov
clc
inc
subb
sub
mov
or
mov
jle
and
lea
lcall
fnstsw
add
jle
outsl
xchg
mov
jmp
shl
cwtl
pop
rcrb
sub
push
fidivrs
mov
imul
stos
push
mov
push
cmpb
pop
dec
adc
xchg
stos
xlat
notb
into
mov
jg
jmp
push
je
es
xor
ja
scas
sub
pop
lds
js
mov
jno
mov
lret
cmpsb
hlt
leave
imul
jp
mov
mov
lret
mov
lods
xchg
jl
cwtl
xchg
xor
cmp
sti
hlt
in
bound
cmp
int3
repnz
inc
cmp
test
mulb
aas
out
and
sbb
mov
pop
repnz
loopne
jp
test
or
jge
xchg
in
pop
mov
in
cmp
lret
dec
aam
test
pop
cmc
int
aam
jnp
je
psubusw
imul
psubb
popa
shlb
test
jmp
push
fstp
mov
insl
pusha
sbb
adc
jbe
inc
adc
xchg
and
jb
inc
js
bound
add
adc
jl
and
lock
leave
add
xchg
xchg
sub
mov
fmull
fwait
mov
in
and
sbb
imul
mov
sbbl
mov
cltd
dec
xchg
out
sbb
pushf
adc
jns
jno,pt
dec
nop
pop
add
add
cmp
pop
lods
xchg
mov
mov
sbb
lret
or
push
cltd
sub
sbb
test
dec
repz
mov
incl
and
xchg
adcl
jo
fcmovb
dec
xchg
daa
fwait
popf
movsl
xchg
cs
sub
aad
pop
sub
icebp
imul
xchg
pusha
adc
xchg
cmp
shl
xchg
xchg
outsb
push
xor
cli
mov
clc
rep
inc
push
addr16
push
in
dec
dec
pop
adc
std
xlat
cmp
push
and
xchg
mov
jo,pt
add
addr16
test
incl
imul
adc
daa
inc
and
mov
mov
ja
dec
sub
flds
pop
dec
lcall
aas
sub
or
ja
dec
sti
scas
or
andl
sub
jne
icebp
xor
outsb
sub
mov
xchg
jg
xor
push
icebp
dec
push
pusha
pusha
lcall
out
mov
sub
les
mov
cld
outsl
data16
out
jmp
es
aas
loop
fnop
nop
mov
andps
push
popa
push
lock
sbb
ss
rcrl
dec
push
outsb
nop
or
pop
fs
add
mov
inc
cmpsl
pop
mov
fdivrs
stos
test
push
out
imul
jge
inc
mov
and
stos
subb
sub
xchg
xor
push
ljmp
jle
enter
lods
jno
xor
mov
aam
mov
dec
add
lea
jnp
xor
xor
pop
xchg
push
aad
jno
mov
sti
sbb
cmpsl
jmp
mov
inc
adc
adc
pushf
push
push
sub
fsubrl
jo
popa
jle
jns
adc
push
ficoml
sub
les
pop
idivb
ljmp
lock
mov
jno
gs
hlt
pop
es
jecxz
mov
fnstsw
jne
inc
fwait
popa
push
icebp
mov
mov
sub
adc
xchg
std
xor
jnp
mov
mov
out
enter
outsl
pop
and
or
pop
dec
sub
jmp
push
xchg
imul
sbb
aas
mov
adc
pop
mov
es
enter
or
push
mov
lret
mov
xchg
adc
adc
and
dec
popa
lods
test
xchg
push
aad
mov
jp
sti
xor
bound
mov
adc
mov
jmp
fistps
lods
shlb
in
sub
lret
dec
mov
insl
mov
stc
fdivrl
ret
xor
xchg
add
bound
icebp
arpl
aas
push
push
push
les
mov
sbb
daa
insl
mov
js
sub
dec
mov
jmp
pop
and
outsl
lret
sbb
mov
and
pop
scas
scas
in
jp
clc
shrb
push
adc
mov
or
jmp
enter
pop
push
ss
cmc
xor
cmp
mov
mov
jno
jle
push
push
push
sbb
cmpsl
fsubl
xchg
lahf
sti
xchg
mov
xor
incb
cmc
int3
loop
mov
shll
inc
cli
idiv
lods
jns
fmuls
inc
mov
ljmp
mov
cwtl
insb
adcb
lock
jno
cmp
loop
pop
in
cmp
outsl
xor
xchg
mov
dec
leave
sti
hlt
hlt
dec
jb
aam
fisttpl
lds
sbb
orl
mov
add
xlat
jp
add
and
stc
inc
push
jo
stos
and
rcrb
cmp
mov
mov
inc
sub
negb
stc
ret
daa
pop
cmp
test
enter
and
sbb
ja
sub
xor
sub
sbb
out
sbb
push
cmp
cmp
rclb
mov
adc
jne
je
push
cmpsl
shrl
fdivrs
es
xor
push
enter
shr
jg
test
xor
xchg
or
out
adc
xlat
and
jns
loop
fnstsw
scas
or
ljmp
and
les
mov
repz
jl
jo
mov
and
in
push
in
ficoml
xchg
or
sub
dec
js
call
sbb
jg
push
sub
jl
mov
lods
xor
xor
lea
iret
push
inc
test
in
jb
and
out
aad
sbb
cmp
adc
arpl
into
sub
test
dec
insb
jnp
jp
lret
imul
bound
xor
in
sub
out
es
arpl
push
jl
or
push
adc
loop
cmp
mov
sbb
popf
insl
popf
and
xlat
ja
pop
arpl
lahf
inc
or
inc
jg
fsubl
xlat
xchg
cld
int
ret
test
popa
sbb
dec
push
sub
sbb
add
or
in
dec
xor
jmp
std
mov
mov
jb
out
int3
cmp
lods
adc
adc
xchg
jg
adc
inc
lcall
addr16
lret
inc
pusha
xlat
popa
adc
xchg
xchg
pop
push
pop
mov
mov
and
faddl
call
test
in
jg
popa
or
fnstcw
idiv
push
mov
add
daa
idivl
push
xchg
mov
iret
jl
adc
in
pop
xchg
xchg
inc
jb
test
mov
add
in
inc
movsb
in
stos
lret
out
inc
xchg
dec
ret
xchg
in
enter
cltd
xorl
nop
push
jge
xchg
push
aad
jae
repnz
imul
jmp
lock
in
mov
push
inc
push
adc
insb
sti
add
imul
scas
push
add
dec
ficompl
sbb
mov
fwait
stos
cli
or
cwtl
add
popa
inc
inc
ret
fwait
in
xchg
jae
sub
mov
push
fdivl
dec
mov
ljmp
icebp
push
sbb
mov
cmpsb
stc
pusha
cld
cmpsl
fsts
or
xor
or
mov
in
andps
mov
aam
mov
loop
push
inc
iret
sar
pop
sahf
fisubs
xchg
jle
dec
je
loop
mov
lahf
jl
cmp
adc
mov
fwait
aad
mov
jge
fwait
jle
sub
addr16
pop
sub
bound
mov
ret
stc
lock
mov
sub
xor
nop
mov
test
push
cmpsl
std
or
or
adc
mov
xor
push
xchg
lods
and
je
mov
adc
mov
cli
es
jnp
js
iret
pop
push
push
iret
fstpt
sahf
loopne
test
and
les
and
popf
test
xor
push
xchg
inc
andb
inc
sar
out
rol
cmp
mov
xchg
jmp
aam
lret
inc
in
xorb
test
fimull
push
dec
outsl
pop
cmp
dec
andl
mov
shlb
mov
test
addr16
xlat
inc
jp
cmp
pusha
icebp
sub
mov
stc
je
fidivrs
outsl
sub
mov
inc
popf
popa
shlb
mov
push
rol
out
das
xorb
adc
inc
call
pop
mov
lahf
inc
and
inc
out
bound
les
push
lods
js
stc
or
les
mov
and
out
xor
jnp
dec
jmp
pop
pop
adc
js
pop
das
and
enter
mov
add
pop
ljmp
mov
pop
and
out
sbb
jecxz
movsb
cmp
divb
add
cmp
lods
and
sub
int
jl
inc
fistps
stc
pop
xchg
xor
test
es
shll
mov
stc
fxch
fbstp
and
or
xor
ja
test
and
stos
jecxz
or
mov
xor
fstl
js
arpl
inc
push
xlat
xchg
mov
or
leave
xchg
sub
jle
pop
hlt
test
add
and
dec
inc
lds
or
enter
mov
loop
add
test
in
test
std
and
adcl
lahf
fcmovne
pop
add
in
gs
or
ret
xchg
lret
in
cmp
dec
cld
push
dec
push
fmull
or
mov
ret
xchg
cmp
cmpsb
push
pop
das
jnp
leave
mov
into
or
push
mov
jno
flds
mov
pop
xlat
mov
pop
and
mov
mov
jnp
xlat
xchg
loopne
pushf
cmp
fs
or
shll
xchg
mov
ljmp
rcrl
mov
push
mov
jl,pn
mov
cmp
loope
ss
into
imul
xchg
jbe
and
rep
je
dec
fwait
insl
scas
aad
pop
pop
fcomps
adc
sbb
lret
mov
lcall
aad
push
jno
push
lret
shl
adc
pop
sbb
mov
scas
inc
out
push
test
inc
icebp
test
mov
out
inc
lods
es
loope
outsl
ss
fisubrs
adc
mov
pop
sub
mov
pop
jne
int3
scas
pushl
mov
insl
outsl
data16
pop
inc
xor
pop
sbb
pop
int3
cmpsb
lds
adc
fcoms
sbb
lds
inc
pop
cmp
lretw
nop
mov
xchg
daa
and
and
lret
gs
outsl
mov
mov
dec
xchg
inc
out
and
push
push
pop
call
xor
fcomps
loopne
inc
pusha
lds
out
add
loopne
add
pop
jmp
mov
jg
inc
xchg
in
mov
aaa
or
xchg
stos
jb
mov
jecxz
andb
jnp
jbe
fcompl
scas
cwtl
cld
push
mov
bound
icebp
js
mov
lds
add
gs
and
lahf
mov
mov
mov
int3
imulb
fprem
xor
dec
mov
cmp
int3
mov
into
xor
imul
pop
pop
mov
or
ds
mov
dec
xlat
jb
sbb
mov
pusha
pop
arpl
push
mov
push
clc
test
or
mov
test
dec
dec
sbb
aas
pop
push
cmpsb
es
cs
sbb
mov
lahf
out
pop
jae
nop
fimuls
sbb
sub
daa
dec
add
push
iret
pslld
sbb
push
lds
ss
mov
fsts
movsl
jmp
cmp
std
lods
push
sub
and
and
jecxz
dec
jmp
out
fistl
or
jno
sub
scas
push
out
adc
mov
cmp
cmp
idivb
std
pop
or
orl
shll
jne
int
cmp
lods
sti
adc
pop
adc
and
fcompl
scas
jns
push
popa
in
mov
pop
pop
push
pusha
aad
adc
loopne
pop
std
mov
je
add
jns
jmp
cmpsb
push
sbb
mov
mov
imul
movsl
mov
orl
pusha
pusha
int
ss
clc
lret
pushf
movl
xor
cltd
cmp
aam
clc
push
enter
cmpsl
mov
push
pusha
xchg
mov
scas
bound
cli
cmp
enter
test
ljmp
and
or
mov
pop
repnz
rorl
cmp
fprem
sub
pop
lcall
icebp
dec
xchg
xchg
pop
mov
int3
mov
and
push
std
fbstp
loopne
hlt
dec
or
mov
test
jmp
rcrb
sahf
mov
leave
mov
or
or
mov
jns
push
lds
roll
xor
int
dec
dec
mov
dec
ja
roll
xor
sub
push
lock
mov
mov
out
pop
fnsave
mov
ljmp
push
mov
xchg
or
outsb
icebp
out
fisubrs
pop
mov
push
pop
and
mov
push
arpl
mov
xor
popf
pop
and
xor
mov
push
dec
sti
shll
roll
addr16
inc
pop
adc
pop
dec
iret
loope
lods
push
repnz
jge
sti
pop
pop
cmpsl
cmp
push
popf
f2xm1
and
subb
data16
mov
fmul
sahf
scas
inc
movsb
mov
push
xchg
pop
stos
pop
sub
es
sub
fcmovb
orb
jge
sub
cmp
stc
adc
xlat
popa
and
add
push
aad
jb
ja
dec
lcall
xchg
xor
movsl
stos
test
push
inc
das
mov
sbb
sub
loopne
test
popa
and
or
mov
sub
mov
fidivrs
mov
fwait
push
ja
movl
jp
pusha
dec
or
hlt
inc
and
mov
lods
int
or
cld
roll
movl
sub
mov
bnd
adc
xchg
pop
and
add
movsl
stos
sub
xchg
mov
jle
mov
adc
ds
ja
adc
push
mov
xchg
cmp
xlat
cmp
pop
outsl
icebp
lods
cmpsb
cli
stos
jg
jne
pop
xor
mov
arpl
and
push
lock
imul
shrl
cmp
inc
int3
xchg
insb
fisubs
ror
lcall
sti
xor
ror
int3
adcl
push
test
jne
add
adc
cmp
stos
orl
xchg
pop
sbb
mov
sbbl
gs
insb
popf
mov
or
pop
rclb
andb
xchg
out
pop
testb
jmp
in
pushf
adc
push
stc
addr16
pop
test
and
stos
jecxz
mov
mov
sub
iret
inc
mov
outsb
cmp
mov
lods
and
into
ret
pop
hlt
xchg
loopne
loopne
inc
leave
xor
ja
mov
jecxz
cmc
sub
xchg
mov
xchg
repz
rcll
or
dec
push
mov
mov
or
lea
dec
and
enter
jbe
mov
and
lcall
xor
lret
decl
in
stos
lds
pop
or
dec
dec
outsl
sti
insb
push
mov
fidivrl
mov
push
scas
add
sbb
fstl
xor
add
lods
out
push
xchg
stos
out
cli
dec
out
ss
addr16
sub
jecxz
lock
push
lock
sub
ret
mov
cmp
repz
jns
add
xor
xchg
outsb
push
int3
jns
sub
cltd
js
xchg
aam
dec
push
std
mov
dec
jmp
cmpsb
dec
out
cs
in
int3
xorb
xor
xor
xchg
in
jmp
pushf
xchg
sub
xchg
xchg
icebp
mov
inc
jne
xchg
shll
mov
jecxz
push
push
out
in
imul
test
add
es
in
lcall
sbb
sahf
sti
loopne
sahf
xchg
pop
andb
jo
lahf
or
xlat
push
push
das
push
or
gs
pop
push
or
add
mov
stos
mov
jo
loop
pushf
int
push
test
and
and
mov
mov
cmp
push
inc
mov
dec
flds
cmp
jne
jge
mov
push
mov
adc
sahf
stc
clc
xor
adc
scas
push
jb
and
lcall
pop
lret
loop
push
pusha
imul
test
push
arpl
in
js
roll
xor
out
cltd
test
pusha
xchg
dec
mov
and
divb
mov
jno
jecxz
enter
push
mov
in
frstor
mov
scas
into
lock
fdivl
outsl
sub
lods
repnz
in
fmul
mov
sbb
js
loope
aad
mov
movsb
mov
idivb
sbb
je
out
fimull
pop
std
sbb
add
in
fidivl
rorb
dec
or
inc
cs
adc
in
sbb
sar
pop
sub
sub
or
push
lahf
out
push
and
and
movsl
les
jp
mov
xchg
imul
mov
data16
push
pop
lea
lock
lcall
push
test
das
test
stos
mov
out
adc
dec
cmpsb
jae
mov
xlat
dec
jo
cmpsb
push
and
jnp
enter
mov
in
add
pusha
frstor
mov
or
int3
cmpsb
cwtl
lds
xchg
pushl
stos
cs
cmp
xchg
lcall
les
mov
sbb
loop
loope
lods
xchg
sahf
in
sbb
jo
movsb
and
inc
nop
xor
jle
popl
popa
fwait
push
jmp
dec
pop
js
pushl
jnp
pusha
daa
xor
cltd
test
sbb
mov
movsl
adc
ficoml
fcomps
add
es
outsb
or
mov
test
sbbb
xor
in
pushf
jno
nop
pop
mov
and
dec
and
outsb
rorb
adc
cmp
jg
push
mov
pushf
sub
movsb
jg
sarl
xchg
fmull
sub
adc
call
imul
mov
leave
sbb
or
lods
jno
mov
out
movb
and
mov
aas
push
in
push
dec
xor
sbbb
jae
lea
xor
fisubrs
fldl
ds
or
sub
inc
jg
fmull
mov
xchg
add
fwait
repnz
push
je
sub
scas
cmpsb
jne
sbb
jno
cld
aaa
cmc
push
mov
push
lahf
mov
and
sbbl
adc
es
fcoms
fs
cmp
mov
mov
gs
push
or
inc
imul
repz
fnstenv
lret
sti
mov
lock
sub
cs
movb
or
jmp
loop
mov
leave
mov
xor
xchg
incl
aaa
nop
loop
add
mov
pop
and
add
daa
xchg
andl
xchg
ret
in
adc
sub
fbstp
fcmovnb
add
test
xchg
test
lock
and
and
mov
mov
xlat
loop
mov
les
clc
mov
jmp
inc
fs
lock
clc
jne
outsb
divb
nop
mov
insl
dec
push
push
mov
mov
pop
in
sub
lock
scas
aaa
and
inc
aam
lret
gs
aas
cltd
cli
stos
mov
loope
adc
stos
mov
stc
mov
pop
pushf
push
imulb
xchg
jbe
mov
rorl
lret
out
add
jae
and
in
sbb
js
adc
push
loop
or
pop
mov
cmpsl
xchg
out
xchg
adc
les
gs
mov
push
mov
push
scas
ficoml
cmpb
rcr
fmul
dec
xchg
adc
add
sarl
mov
cli
push
enter
aas
test
push
cmp
sub
xchg
or
nop
jno
fldcw
push
lcall
push
xor
add
imul
pop
out
movsl
int
inc
das
pop
sbb
std
dec
jb
add
mov
jle
cmp
or
mov
xor
or
outsl
stc
icebp
lods
cmp
cwtl
leave
and
cmp
imul
cmpsl
lret
sarl
adc
out
inc
cmpsb
inc
aam
into
jle
jge
xchg
out
ss
out
scas
mov
shl
ret
jae
cmpsb
call
sbb
jno
int3
js
add
adc
sbb
or
sub
cmp
iret
push
lods
jp
or
inc
jp
icebp
aas
scas
mov
xorb
jo
jp
fimuls
jl
cmp
mov
pushf
aam
mov
sahf
inc
repnz
adc
mov
xchg
cmp
pop
ror
pop
cmpsb
pop
and
mov
repz
cmp
dec
jl
add
sbb
mov
dec
mov
dec
xchg
std
xchg
add
ss
adc
pop
add
or
mov
or
xchg
sub
int3
mov
jno
setb
or
xorb
sbbb
movsb
cmc
addr16
shrl
mov
dec
mov
ja
inc
inc
aam
ficomps
lahf
das
push
orb
mov
xchg
bts
or
out
aam
jns
add
mov
dec
shrb
push
jnp
xor
jl
mov
xchg
mul
loop
fidivrl
inc
add
jp
mov
mov
xchg
jnp
dec
mov
sbb
xor
pushl
sahf
push
cmp
enter
jo
cmp
adc
inc
jbe
ffreep
mov
mov
inc
scas
lods
add
out
test
push
std
icebp
imul
pop
inc
lods
sbb
out
movsb
iret
inc
in
inc
lock
lcall
adc
in
push
dec
bound
pop
es
pop
movsb
mov
out
adc
and
adc
subb
jb
push
mov
in
lods
xor
jns
xor
adc
mov
jnp
popa
inc
cmp
movb
lcall
push
call
es
mov
roll
scas
sbb
stos
adc
mov
loope
repnz
dec
fistps
out
add
imul
cmp
push
cmpsb
inc
cld
jae
add
cwtl
push
mov
sbb
outsl
stos
sar
fiadds
bound
fisttpll
enter
xor
lds
push
adc
ret
sub
fwait
sub
mov
rcr
cld
mov
xor
ljmp
fiaddl
lods
jbe
adc
arpl
shrl
and
iret
inc
or
push
nop
aaa
jmp
sbb
dec
movsb
push
xor
aas
shrb
in
sub
sub
cli
lcall
add
and
mov
lea
pop
ror
xchg
xchg
push
subb
push
shl
xor
shrb
subb
push
xchg
mov
cmp
lret
fildl
xchg
in
jnp
sub
inc
jg
adcl
push
adc
mov
cmp
jo
divl
sbb
out
inc
sub
pop
inc
sub
pop
inc
shll
push
mov
mov
sbb
ret
notl
pop
out
inc
fildl
jbe
adc
mov
fwait
popf
mov
cmc
cmc
xchg
arpl
inc
clc
shl
mov
xchg
rorl
lds
hlt
movsb
mov
roll
cmp
les
cmp
clc
push
inc
out
dec
xlat
mov
into
sbb
cli
lret
dec
clc
and
xchg
mov
fistps
in
loop
or
mov
mull
popa
mov
sbb
jmp
sbb
loopne
nop
dec
xchg
xchg
jmp
push
jmp
mov
jp
rorl
iret
xchg
xor
test
push
push
sbb
jp
outsl
dec
insl
xchg
cmovs
or
inc
dec
xor
jae
lods
cmpsl
jge
or
cmp
lods
int3
stos
mov
xchg
cmpsl
popa
in
jns
lock
inc
jecxz,pn
mov
test
adc
arpl
mov
mov
repnz
dec
std
loop
xor
pop
jnp
jns
enter
cs
or
lret
sub
stc
loope
jle
pusha
out
mov
clc
add
cmpsb
mov
dec
pop
mov
in
lcall
xorl
mov
gs
repz
xchg
push
xchg
out
testb
aad
inc
push
dec
cmc
fdivl
frndint
mov
add
and
cwtl
xor
loopne
adc
inc
mov
adc
jl
out
mov
bound
sub
add
jmp
popa
mov
test
arpl
test
xchg
inc
jp
xchg
xor
push
inc
data16
das
lahf
sar
psllq
idivl
rorb
jnp
lcall
popa
push
fnstenv
mov
pinsrw
push
outsb
fwait
jae
dec
add
stos
pop
adc
xor
pop
xchg
das
lds
jnp
pop
dec
lods
mov
std
push
cmp
sub
int3
push
jns
ja
ret
adc
inc
add
stc
movb
jne
push
out
pop
sub
stos
and
cmp
shrl
mov
cmp
dec
lods
cs
outsl
outsl
cmove
jne
sub
or
iret
push
xchg
xor
sbb
mov
sub
js
push
mov
xor
arpl
dec
shlb
mov
cli
xor
hlt
movsb
jnp
push
dec
sub
mov
pop
aas
and
mov
dec
bound
popf
pop
cmpsl
sar
mov
jno
aas
fdivrs
xor
push
fsts
ret
xchg
jns
push
cmc
push
push
pop
das
xlat
add
push
je
fcomps
pop
fdivrl
sbb
inc
inc
add
pop
pop
cmpsl
fdiv
add
fldl
jo
stos
mov
xchg
aam
cmp
inc
cmc
add
arpl
or
xchg
dec
cmpsb
fstpl
repz
ror
lock
icebp
adc
sub
xor
push
inc
cld
pop
lods
fidivrl
imul
mov
aam
push
push
lret
jle
aaa
pushf
xor
jne
int3
and
adcl
sbb
into
xchg
bnd
mov
push
sub
out
scas
xor
or
sbb
xchg
in
pop
in
lret
push
cmp
xchg
pop
xor
repnz
inc
loope
xchg
mov
repnz
push
jne
lret
push
add
arpl
fimull
mov
ljmp
xor
push
out
or
rolb
push
sub
pop
dec
fdivs
stos
rol
fisttps
xchg
cld
hlt
fcmovbe
jg
sub
sarb
mov
les
jnp
jno
inc
jl
mov
push
pop
insl
leave
mov
lea
movsl
xlat
cmpsb
fmul
mov
xor
in
jo
cmp
and
dec
sub
adc
test
sahf
cld
or
iret
mov
adc
enter
xor
popa
pop
inc
inc
dec
std
mov
jns
js
adc
xchg
adcb
shll
repnz
mov
dec
enter
jns
lds
iret
pop
mov
pop
pop
adc
nop
js
xchg
adc
mov
dec
popf
mov
cld
sbb
mov
jae
adc
push
js
add
scas
or
inc
push
in
mov
jo
jmp
outsb
cwtl
lret
imul
rorb
aas
pushf
test
dec
cmp
iret
jno
cs
pop
xchg
icebp
mov
cmp
push
and
mov
movsb
cli
iret
and
sysexit
cmp
loop
or
jo
jle
xor
iret
scas
jg
xorb
xor
jno
push
lahf
int3
push
pop
sbb
mov
icebp
scas
lahf
jns
push
add
mov
mov
lock
adc
mov
inc
mov
mov
mov
sti
push
dec
rcr
pop
icebp
mov
je
mov
xor
ljmp
mov
adc
addb
shll
push
or
call
jmp
in
lods
test
mov
rcl
mov
pop
cmp
push
cmpsl
jmp
mov
stc
mov
ljmp
fstps
imul
pop
bound
leave
cmp
into
sbb
adc
jmp
ljmp
jg
mov
inc
pop
js
add
pop
sbb
test
aam
dec
mov
out
and
and
and
add
jo
jo
dec
adc
or
pop
add
xchg
ds
jnp
cmp
pop
and
or
mov
negb
stos
xchg
outsl
notb
push
hlt
push
ret
jne
jae
or
mov
pushf
stc
mov
popf
inc
inc
or
and
add
and
cld
pop
add
cmp
loop
mov
incl
mov
in
push
mov
sbb
lds
inc
pop
fmuls
sub
mov
pop
repnz
loopne
daa
xor
shrb
out
sti
mov
pop
add
call
rclb
xchg
xor
push
mov
fstl
orl
mov
psubsb
sub
adc
mov
mov
ss
sbb
leave
dec
addr16
in
cmpsl
test
and
mov
mov
push
mov
mov
test
in
push
jnp
push
push
dec
sub
pop
stos
ja
pop
ds
dec
aad
xchg
scas
dec
shll
cmpsb
lds
mov
js
sub
test
cmp
dec
test
and
mov
loopne
hlt
fidivrl
shll
in
sbb
xchg
mov
test
inc
lret
dec
jge
outsl
push
mov
test
sbb
adc
dec
cmp
and
repz
in
and
mov
addl
lret
xor
xchg
fiadds
adc
call
mov
jno
push
push
cmp
cmp
cmp
stos
inc
pop
push
xchg
sub
enter
add
mov
testb
cmp
sub
les
mov
fnstenv
and
cmc
inc
and
leave
or
rcl
enter
les
gs
cmp
mov
jne
fisubrl
sub
insb
outsl
nop
negl
xor
std
call
iret
mov
xor
outsb
aad
int3
adc
xchg
lret
mov
dec
loopne,pn
inc
imul
divb
cld
mov
mov
aad
orb
fsts
jg
xor
sbb
fisttpll
xchg
add
inc
sub
add
push
add
push
mov
mov
jne
pmaxub
add
inc
cltd
outsb
and
hlt
fidivrl
jge
stc
les
sub
jb
sub
nop
incl
push
insb
xor
stos
adc
inc
ljmp
dec
inc
or
mull
js
push
out
mov
movsl
xor
aad
and
cmp
sub
mov
inc
push
xchg
mov
adc
cwtl
mov
add
gs
imul
xchg
pop
pushf
das
inc
loop
lahf
jb
xlat
mov
fnstenv
mov
push
or
nop
sub
sub
cli
ret
inc
and
ffree
xor
cli
xchg
rclb
repnz
sub
filds
dec
ds
jae
pop
mov
dec
push
pop
enter
in
xchg
inc
xchg
enter
push
dec
fildll
test
outsb
cli
xchg
ss
pushf
and
lock
insl
popa
dec
inc
loopne
pushfw
and
fnstsw
xchg
mov
sti
mov
dec
outsb
ljmp
ss
ret
lahf
sbb
es
mov
call
xchg
mov
mov
xor
dec
mov
lcall
shrb
pop
xchg
ss
sub
pop
and
dec
mov
int
bound
aaa
push
daa
jb
repz
cmpl
lahf
dec
pop
pusha
dec
add
or
inc
push
fbld
addr16
add
in
mov
mov
xor
das
cmc
add
jle
movsl
in
call
cmp
outsl
or
sub
dec
or
movsb
inc
andl
mov
out
jae
push
jo
adc
ss
hlt
nop
daa
jne
insb
xchg
push
aad
pop
pushf
stc
jbe
das
idivb
xor
dec
movsl
fiaddl
lods
shlb
push
cld
mov
movsl
aaa
aad
jnp
adc
push
push
into
outsl
lea
add
aaa
cli
pushf
xchg
nop
push
movsl
pop
je
jmp
pop
aas
ret
pushf
and
div
push
fsubr
adc
cmp
pop
xor
pop
jae
adc
cmpsl
test
pop
jp
or
mov
jne
loop
mov
mov
mov
dec
and
js
hlt
addr16
cmc
push
inc
adc
repz
mov
push
xor
push
sub
stos
push
pop
xor
mov
gs
shlb
loope
xor
lahf
add
xchg
imul
push
or
mov
int3
mov
jne
fnsave
push
jbe
pop
pop
mov
cmp
and
out
lods
enter
leave
xchg
in
and
aas
pop
fadd
outsl
test
pop
div
pop
xor
jge
insl
sahf
gs
jge
fcompl
ljmp
rolb
gs
insl
int
push
jns
pop
out
cmpsb
pop
ret
pop
pop
jp
dec
dec
adcb
fs
loope
je
loope
fmuls
stos
lea
jns
sub
cld
sub
jnp
xor
lret
mov
fcmovnb
jns
jg
fcompl
cmpsb
lret
stos
rcrb
dec
pop
pusha
add
lahf
mov
pushf
xchg
stos
pop
and
cmp
int
cmp
lock
push
pop
imul
mov
inc
clc
lcall
xor
in
in
or
jnp
neg
jb
leave
fcomp
jnp
or
or
mov
les
mov
sub
lret
mov
and
inc
xchg
xchg
pop
fsts
push
cs
dec
mov
push
loopne
out
icebp
mov
jle
mov
cwtl
and
mov
jecxz
int
pop
outsb
cmp
ja
or
push
mov
jnp
cmpsl
aaa
pop
sub
mov
mov
inc
pop
cmp
lcall
xchg
fisubrl
mov
leave
cmp
xchg
inc
xor
jbe
push
repnz
lods
leave
jmp
es
pushf
fidivrs
mov
in
nop
movsb
aas
out
mov
movsl
stc
mov
mov
mov
sbb
sub
sbb
insl
out
cli
add
mov
pop
cmpsl
adc
imul
pop
add
mov
lea
xor
lcall
xchg
dec
ljmp
sarb
cld
xor
test
xchg
fwait
mov
stos
mov
pop
fwait
loopne
push
add
dec
jne
stos
pop
or
or
add
sarl
pop
pop
loop
sti
sub
xchg
xchg
lods
push
and
ljmp
push
jb
sub
push
repz
mov
cltd
and
gs
adc
dec
jae
cmc
inc
mov
out
mov
ss
lcall
adc
call
cmp
mov
dec
fildll
es
out
addl
jmp
das
lcall
std
xor
cmc
pusha
xor
fs
inc
inc
loop
imul
xchg
andb
xor
loop
leave
cmp
adc
add
ja
fists
les
les
or
sbb
push
int3
mov
dec
data16
imul
rolb
popa
jnp
nop
out
icebp
mov
mov
add
loop
js
mov
adc
add
and
iret
jmp
cmc
inc
xor
cmp
or
fisttpll
das
jbe
xor
in
sub
mov
daa
pop
lock
test
jge
mov
sbb
ret
stos
cwtl
dec
fsts
aas
jnp
cmp
into
or
or
jno
xchg
lea
gs
jle
dec
xor
pop
inc
dec
cmp
push
sahf
mulb
xor
in
cmpsl
xor
fistl
std
sub
push
pop
xor
fsubs
xor
push
das
je
sbb
popa
lods
add
push
mov
adcb
mov
dec
iret
pop
pushl
cs
clc
jbe
lret
add
or
ret
mulb
mov
hlt
addl
xor
cmp
sbb
test
and
fsubl
dec
movl
jg
test
bound
and
jg
jb
jns
push
js
out
cmp
rcll
fstpt
int
sbb
jecxz
pop
fs
ficomps
xor
jl
mov
sbb
call
repz
mov
sti
fdivl
sub
pop
enter
fwait
mov
sub
lret
xchg
inc
int3
js
and
cmpl
test
mov
cmp
mov
cs
cmp
leave
xor
out
pop
mov
in
xchg
inc
pop
mov
mov
les
std
sub
cmp
xchg
stc
bnd
xor
jbe
dec
and
jo
or
dec
loope
or
cmpsl
je
jmp
cmp
setne
mov
adc
pop
pusha
jmp
inc
xchg
xchg
insl
addb
xchg
aam
outsb
stos
lods
movsl
add
loopne
jecxz
lock
xlat
shlb
mov
into
mov
dec
pusha
mov
fwait
test
jp
das
daa
cmp
pop
addb
sub
xchg
jae
into
stos
adc
xor
out
icebp
jle
cli
icebp
push
in
gs
adc
add
aad
xor
add
aas
adc
xor
pop
mov
xchg
and
shlb
cmpsb
sub
pop
pop
add
fisubl
loop
int3
aaa
or
mov
mov
js
bnd
outsl
mov
and
lock
aaa
outsb
inc
out
popf
imul
cwtl
xlat
adc
arpl
jae
sti
push
push
adc
scas
int3
lret
dec
pop
push
xchg
mov
adc
popf
pop
or
ds
mov
push
pushf
idiv
and
scas
pop
push
aaa
popf
call
out
mov
mov
sbb
sub
call
repnz
pop
enter
dec
push
movsb
ds
add
pop
push
and
cmp
int3
xchg
add
es
enter
sbb
hlt
inc
repnz
dec
mov
cmp
pushf
movsb
scas
add
jno
dec
mov
sbb
flds
jecxz
push
iret
mov
pop
jb
out
and
ficoml
and
fwait
sbb
into
adc
popa
mov
int3
cmp
jo
xchg
dec
push
xchg
mov
mov
in
xchg
cmp
inc
fisttps
cmp
rcr
bound
out
cmp
popf
or
sbb
cmp
fnstcw
cli
imul
mov
mov
ret
scas
sub
pushf
lods
push
test
lods
mov
mov
jge
das
xlat
repnz
aad
and
arpl
jg
nop
jns
loop
sbb
out
push
sub
ljmp
and
xchg
pop
mov
dec
mov
add
xor
test
fimull
sbb
in
jg
push
mov
pop
inc
aaa
mov
loop
cmp
inc
mov
out
outsl
pop
ljmp
push
lcall
cmpsl
pop
add
or
mov
or
loopne
sbb
into
push
mov
incl
dec
xchg
xor
xchg
lahf
jg
mov
dec
sbb
movsl
push
mov
sti
loope
dec
aam
ret
enter
loopne
addr16
push
dec
pop
mov
jge
push
sub
xor
notb
inc
cwtl
xorb
pop
lods
movsb
jnp
iret
add
gs
cmp
xchg
dec
insl
mov
adc
orl
inc
fbstp
add
int
jne
mov
shrl
mov
add
dec
xchg
add
mov
fs
pop
cmp
xchg
bound
dec
cld
pushf
pop
lock
push
pushf
push
test
mov
ds
aad
es
lret
rcpps
mov
mov
jne
xchg
insb
popa
xor
movsl
xlat
mov
cli
enter
or
addr16
cli
jbe
push
cmpsb
add
mov
mov
stos
mov
cwtl
repnz
cli
add
adc
fwait
mov
pushf
mov
sub
cmp
nop
loop
andl
sub
dec
mov
dec
pop
fs
iret
fwait
mov
sarl
mov
or
dec
in
adc
jmp
dec
xor
push
inc
and
scas
clc
lcall
dec
fcmovbe
push
mov
pop
sub
lret
and
ds
and
jno
lds
fldl
mov
incl
out
sbb
into
ret
enter
jne
scas
test
cmp
jae
in
mov
out
mov
push
jmp
dec
loope
lods
sub
or
pushl
inc
or
push
or
push
jno,pt
xchg
fstps
push
lea
data16
mov
je
jle
push
jl
inc
stc
in
cmpsb
sbbl
jbe
add
mov
xchg
loope
push
xchg
data16
mov
ss
fdiv
arpl
cmc
bound
xor
mov
and
mull
and
push
ret
or
mov
aam
cmp
shll
pop
in
sub
lock
push
adc
rcr
shlb
int3
stc
and
sub
push
dec
pop
mov
jmp
shl
pushl
imul
and
jo
or
inc
fdivs
movsb
jbe
les
in
adc
mov
mov
xchg
cmp
lahf
ja
in
test
into
jge
notl
push
pop
bound
add
mov
movsb
outsl
push
fisubrl
pop
xor
fadds
test
mov
mov
cmp
adc
mov
mov
test
out
ret
push
or
adc
fiadds
dec
fcompl
adc
xlat
lret
and
and
inc
push
jp
ja
shlb
movsb
mov
scas
pop
aam
push
sub
push
mov
add
xchg
jg
aad
loop
xchg
pop
push
xchg
xchg
and
les
sti
incb
dec
jns
mov
fmul
nop
inc
rolb
cmpsb
movsb
pop
je
stos
and
push
sub
xchg
pop
push
mov
push
sbb
call
jns
in
jle
xor
lea
inc
pop
dec
inc
stc
add
inc
xor
dec
leave
insb
aaa
mov
movsb
fistl
jg
or
popa
jle
mov
test
xor
clc
je
jmp
ffreep
mov
mov
pusha
setae
loope
lret
out
shl
stc
jnp
push
mov
mov
sbb
inc
pop
addr16
jmp
or
lds
mov
dec
adc
out
cmpsl
jnp
pop
popa
or
xor
lahf
mov
and
pop
out
inc
pop
lock
inc
mov
fs
pushf
flds
shll
lret
xor
inc
ljmp
pop
pop
mov
orl
lods
xchg
mov
and
pop
sbb
std
mov
mov
inc
lock
mov
pop
fldt
aad
dec
jl
add
into
pop
lds
repz
jecxz
test
jmp
cmpsb
and
je
push
mov
call
in
repnz
js
in
cwtl
xchg
add
add
push
lret
popf
ljmp
loop
jo
movsb
pop
pop
leave
cmp
jl
icebp
imul
cwtl
nop
cmp
mov
dec
mov
cmpsl
adc
pop
push
or
in
xchg
or
cmp
sub
pop
xchg
into
fiaddl
xor
mov
cs
sbb
sub
mov
dec
add
aaa
loopne
mov
loop
cmp
cwtl
mov
or
movsb
xchg
jl
pop
in
sahf
dec
or
call
add
mov
out
or
mov
push
movsl
adc
inc
daa
stos
jl
sbb
xchg
xchg
mov
jo
fptan
sub
nop
add
add
imul
cs
into
push
xchg
jg
add
cmp
mov
pop
or
jne
jl
mov
and
cli
xchg
gs
lods
into
and
push
out
xchg
in
add
pop
test
shrb
jno
loope
mov
movsl
int3
xlat
push
dec
push
pop
ja
push
sbb
stc
mov
aas
scas
and
adc
xchg
mov
and
js
frstor
imull
not
aad
neg
movsl
xchg
sti
ds
pop
push
pop
mov
ljmp
cmp
inc
shld
scas
popf
lock
into
xor
pop
or
fnstcw
lahf
nop
sbb
bound
inc
or
nop
mov
push
mov
lods
jno
xor
inc
push
adc
call
ficompl
popf
xor
roll
push
mov
jmp
push
nop
dec
adc
iret
in
imul
stc
pop
sti
jo
cmp
cmp
fisttps
cmp
les
jnp
lret
mov
call
pop
sbb
scas
mov
adcl
fdivrl
decb
jle
scas
or
imul
out
adc
push
jmp
xchg
mov
lret
in
adc
cltd
mov
mov
inc
lods
test
mov
mov
cwtl
cltd
aas
adc
outsl
cmc
out
movsl
lahf
xlat
jnp
sahf
and
shl
inc
mov
xor
test
pop
sub
jne
ret
jg
xchg
xor
pop
lods
loopne
sbbl
cltd
aad
push
scas
push
pusha
mov
call
into
sbb
or
movsl
sbb
lods
clc
cmpsl
push
lret
repz
add
xchg
in
arpl
mov
jmp
pop
popf
dec
dec
iret
cmp
and
insb
rolb
pop
pop
test
mov
push
mov
and
sbb
pop
jmp
arpl
in
mov
repz
adc
scas
add
inc
sub
xor
ret
lods
push
movl
inc
cmp
dec
ficoml
mov
imul
hlt
mov
aaa
int3
dec
jmp
adc
inc
rorl
cmp
jmp
cli
sbb
pop
cmp
xchg
mov
push
jno
fimull
int3
int
mov
lret
je
or
xchg
dec
xchg
fldt
mov
std
mov
dec
mov
or
jp
popf
pop
pop
test
cmp
ret
inc
xor
push
mov
inc
test
xchg
into
lahf
fcoml
mov
dec
and
mov
arpl
adc
lods
ss
or
leave
jecxz
insb
ret
int
jo
xchg
sbb
mov
fcompl
push
out
xor
lea
shr
mov
ja
sti
nop
push
xchg
sbb
jp
push
jmp
test
pusha
shrl
mov
popf
in
mov
sbb
mov
dec
push
or
test
mov
cmc
mov
add
int
mov
and
lcall
jge
or
cs
roll
xor
xor
cltd
div
push
xchg
xchg
and
in
jp
imul
loope
pop
rcll
mov
decb
add
sub
std
int3
dec
add
loopne
das
cmp
or
mov
sub
inc
jo
imul
hlt
das
mov
lds
stc
in
rcrb
cmp
cltd
aaa
outsl
ret
in
flds
mov
shl
sub
adc
lock
lods
lcall
sahf
nop
jg
insb
enter
int3
xor
mov
fwait
cmp
notb
call
xchg
push
mov
gs
mov
lcall
sub
push
xor
int
cwtl
sbbb
pop
add
sub
addr16
lock
cmp
decl
dec
out
dec
sahf
dec
mov
pop
push
sbb
sbb
jbe
pop
dec
fildll
mov
pushf
sub
idivb
inc
add
xchg
mov
scas
aam
jae
out
fwait
add
bswap
shll
insl
dec
dec
stos
inc
lret
cld
and
or
shlb
cmp
xchg
ljmp
jecxz
mov
mov
mulb
inc
movsl
cmp
dec
jbe
xor
lret
pop
enter
dec
or
jl
jns
ja
sbb
cmp
inc
mov
insb
insl
adc
dec
mov
lret
ss
sbb
out
sub
xorb
mov
dec
dec
xor
and
jnp
sti
and
add
test
aad
mov
push
push
or
sbb
dec
mov
mov
frstor
mov
push
jae
mov
pop
push
push
lods
inc
lret
inc
sub
add
out
push
pop
sbb
arpl
mov
mov
push
data16
lea
addb
pushf
cwtl
cltd
sub
xchg
mov
test
or
sub
fwait
popa
dec
sti
jo
in
notl
int
leave
jno
scas
inc
fwait
jle
stos
push
mov
fstl
mul
mov
xchg
out
dec
lock
xchg
stc
packsswb
push
lahf
loope
mov
shll
jns
jecxz
sub
mov
xor
dec
push
mov
subb
mov
xor
fs
out
push
sbb
adc
xor
aam
adc
roll
fsubl
out
call
jno
lods
inc
aas
pop
addr16
fs
adc
out
cwtl
jle
xchg
push
push
test
push
push
adcl
inc
mov
inc
push
mov
xchg
dec
enter
or
daa
inc
sti
xchg
sti
fstpt
xor
scas
fcoms
jmp
sbb
mov
lock
xchg
dec
cmp
or
push
jge
fwait
nopl
pop
out
pop
pop
aad
fwait
xchg
pop
or
test
sub
mov
loope
addb
or
ret
pop
sbb
add
rcrb
fwait
hlt
xor
test
xor
sti
add
cmp
mov
cmpsl
rcll
push
loop
dec
push
xor
shrb
xchg
adc
pop
jnp
rcll
mov
fisubrs
in
ficoms
pop
fnsave
or
jle
out
cmp
mov
mov
xchg
mov
sahf
negb
xor
jp
sub
shlb
mov
add
fnstenv
sahf
cmp
popf
pop
cmp
xchg
pop
cmp
adc
imul
out
daa
pop
mov
stos
jl
stos
jne
or
bound
jge
test
pop
cltd
lahf
jle
les
mov
scas
and
xor
jo
xor
mov
jns
rolb
jnp
pop
pop
int3
enter
jp
dec
dec
ss
push
mov
xchg
cmpsl
mov
mov
adc
aaa
adc
jbe
mov
push
mov
jg
mov
mov
xchg
cs
add
lret
cmpl
cmp
jg
mov
dec
sbb
cmp
sub
test
sub
in
lods
xlat
mov
pop
sub
sub
jge
insb
ret
lock
fisttpl
nop
stos
push
sub
into
shrb
sub
mov
fnstsw
xchg
jns
pop
adc
xchg
sti
xchg
xor
out
sub
sahf
xlat
mov
iret
xchg
insl
jne
jb
cmp
dec
in
sub
test
cmp
mov
in
gs
mov
arpl
in
fistpl
push
pop
mov
or
inc
scas
jno
or
imul
pop
mov
shrl
or
sar
lock
into
fwait
hlt
mov
cmp
add
add
mov
xchg
add
sub
jnp
adc
ret
aaa
fdivl
add
leave
lcall
jns
pushf
icebp
xchg
lea
pop
insb
hlt
subb
jp
push
mov
and
cld
adc
jg
fs
cmp
filds
add
mov
mov
xchg
push
inc
dec
rorb
and
dec
jle
add
pop
jmp
and
lahf
aad
or
jbe
cli
lock
ljmp
aad
ret
pop
sbb
adc
out
jnp
scas
leave
xlat
pop
and
clc
inc
test
fimull
fs
or
sbb
sbb
cmpsb
icebp
mov
inc
jmp
xor
mov
outsl
jmp
jmp
xchg
push
cmp
in
or
cmpsb
jge
bound
loope
cmpsb
dec
popa
inc
pop
push
push
insb
std
lcall
add
dec
or
insl
or
add
loop
jg
and
cmp
jg
les
les
mov
je
mov
inc
cmpsl
jb
inc
dec
mov
xchg
xchg
sbb
popf
mov
fldpi
dec
jbe
scas
loope
clc
int
cmc
loopne
mov
cld
mov
pushf
pop
jne
sub
sar
fsubl
jns
pop
mov
xor
mov
inc
or
addr16
fisubrl
mov
loope
mov
ret
outsb
sahf
sub
adc
add
fmuls
mov
push
sti
mov
add
or
notb
fiaddl
insl
rol
pop
jge
push
mov
leave
subl
sbb
les
imul
je
mov
dec
dec
pop
pop
mov
fisubrl
ljmp
pop
insl
xchg
jmp
mov
push
xlat
mov
iret
and
jg
loopne
mov
sbb
jns
sub
lret
les
dec
out
aad
int
sahf
add
dec
push
cmpsb
in
fsubrs
rcrl
push
dec
test
stc
mov
or
fcmovnbe
test
js
sub
jecxz
hlt
adc
lods
sub
push
jbe
lret
or
cmp
std
pusha
std
xchg
sub
sarb
inc
fwait
pop
int3
jnp
adc
push
lods
mov
jno
cmp
lcall
pop
cmp
sbb
dec
xorb
dec
adc
loop
jo
mov
popf
ret
jl
mov
push
out
cmpsl
and
and
mov
jl
add
movsb
daa
stos
bound
cmp
ret
lret
pusha
insb
adc
das
shrl
ljmp
lds
or
in
or
dec
in
mov
add
lods
sbb
sub
adc
jle
sub
loopne
pop
push
ret
idivb
jecxz
dec
outsl
ss
ret
lds
dec
jp
sbb
adcb
cli
mov
inc
enter
movsb
push
xlat
cmc
mov
sbb
pop
xchg
jecxz,pt
sub
addl
and
mov
lock
add
lock
mov
int3
xor
leave
lret
xchg
lds
xor
sbb
mov
std
test
fidivrl
add
out
int
outsl
lods
adc
and
mov
and
imul
out
addr16
int3
xchg
xchg
xor
addl
sbb
hlt
lock
in
out
inc
lods
and
or
lods
add
rorb
xchg
pop
fsubs
das
fwait
xor
divl
lds
jle
arpl
repz
stc
lahf
repz
jae
mov
xlat
jo
cli
mov
lods
xor
daa
das
ja
cmp
sbb
or
mov
adc
das
dec
aas
xor
out
and
das
mov
jle
cld
in
js
xor
inc
add
cmp
mov
fwait
in
lds
mov
es
mov
inc
lahf
gs
cmpb
mov
stos
adcb
insb
mov
dec
imul
leave
orl
cmp
in
push
fldl
pop
mov
cwtl
cld
pop
test
orb
adc
test
loop
xor
mov
pop
aas
pop
jmp
popf
pop
sub
mov
mov
jg
mov
daa
loop
sbb
fsts
lret
or
cmpsl
mov
xor
xchg
fistpll
fiadds
pop
sub
add
xchg
push
outsb
mov
pop
sub
leave
mov
inc
mov
std
in
add
in
sub
cmp
in
stos
bound
lcall
cmpsl
mov
sub
sub
mov
pop
jb
mov
mov
dec
shlb
and
pop
mov
mov
imul
mov
js
stos
shll
test
push
std
sub
es
mov
add
mov
call
es
push
xchg
jbe
inc
xorb
fisubrs
fimuls
out
outsb
cmpsl
ret
jno
jp
mov
or
imulb
sahf
fcom
les
mov
out
fstl
lret
jge
xchg
ds
call
xchg
clc
fdivrl
cli
orl
sbb
sub
xor
sti
test
push
fsubrs
in
cmp
repz
in
adc
pusha
addr16
mov
and
sbb
or
lods
lock
sbb
mov
xchg
mov
fildll
jg,pt
test
cwtl
push
ja
ja
mov
inc
sub
lahf
jecxz
jno
xchg
insl
ret
daa
cli
push
mov
cwtl
jp
pop
ds
lods
xorl
lods
cli
mov
cwtl
cmp
int
pop
pop
lret
jp
aad
lds
push
popa
mov
xor
lock
mov
jno
mov
adc
and
orb
pop
outsb
cli
call
fdiv
sbb
mov
or
cld
scas
push
push
mov
mov
xor
add
inc
mov
cmp
mov
int
iret
mov
adc
repz
shlb
je
pop
stc
out
push
sub
push
negl
jb
lahf
arpl
add
roll
sarb
dec
movsb
cld
xchg
aam
dec
into
aaa
in
xor
pop
xor
scas
cmp
xchg
adc
adc
aam
xchg
push
add
xchg
mov
jg
and
int3
mov
sub
pushf
scas
addr16
into
leave
sbbb
movsb
pop
add
fcompl
dec
movsb
faddl
fistpl
mov
pop
inc
dec
mov
jae
mov
in
cmpsl
test
shl
or
jmp
xchg
divl
adc
btl
mov
fcomi
int3
sbb
ret
lock
pushf
cmpsb
je
into
xor
xchg
stc
jg
jl
gs
mov
filds
inc
movsb
test
scas
call
inc
mov
dec
insl
dec
arpl
rorl
jb
nop
ds
loope
xchg
loope
mov
mov
popa
ret
pop
inc
push
aad
sarl
push
and
push
in
clc
mov
fs
mov
loopne
movsb
insl
xchg
cli
outsb
clc
pop
dec
pushf
add
add
jnp
xor
mov
mov
aas
pop
jle
mov
nop
xor
add
add
stos
adc
es
repnz
sub
push
add
pop
and
lret
adc
lahf
dec
fnstenv
jne
jb
out
and
dec
lret
cmp
sahf
xor
inc
repz
or
cmpsl
out
xchg
xchg
xchg
mov
es
xchg
add
mov
adc
and
and
and
add
cmc
imul
or
cmpsb
sbb
inc
cmp
stos
stc
shlb
addr16
rclb
cmpsl
adc
les
mov
mov
aad
pop
subb
test
jae
mov
out
jo
dec
push
fcoml
lret
jl
cs
loop
push
cmp
push
rolb
inc
repnz
pop
mov
push
addr16
out
xchg
sbb
cltd
mov
xor
mov
lods
xchg
lods
cli
mov
mov
mov
fimull
clc
cwtl
mov
dec
rclb
sbb
and
gs
lea
sub
movsl
mov
scas
xor
fmulp
testb
rcrl
mov
sbb
pop
xor
jp
inc
jmp
daa
mov
gs
push
punpckhwd
xor
push
es
enter
add
ss
ja
mov
ja
mov
dec
dec
mov
in
insl
dec
aas
inc
aam
mov
pop
and
lcall
bound
lock
lock
xor
hlt
ffree
sub
dec
shl
and
xchg
aaa
divl
push
lods
pop
test
repnz
add
insb
rcrb
jno
ror
sbb
lea
jns
mov
iret
inc
add
js
iret
dec
addr16
push
cmp
hlt
xchg
loop
pop
pop
inc
punpckhdq
and
mov
into
loopne
stc
inc
xchg
popf
popf
mov
cld
mov
out
add
into
sbb
das
sbb
das
hlt
push
mov
add
push
mov
or
xor
hlt
js
fwait
cmpsl
stos
xchg
bound
test
daa
and
cmc
cmp
jl
or
fcoms
cmp
cmpsb
xchg
inc
cld
fs
or
push
push
or
add
mov
subb
aas
adc
or
add
xchg
pop
fdivs
xchg
aaa
dec
sub
push
add
push
popa
scas
cmp
mulb
or
jno
or
ss
or
repnz
or
aam
xor
mov
mov
mov
xor
cltd
xchg
dec
jmp
cmp
enter
repnz
xchg
adc
pop
popa
aam
scas
mov
jb
inc
sbb
cwtl
sub
das
iret
mov
dec
leave
xchg
and
push
arpl
sub
mov
mov
mov
jle
sub
add
mov
inc
das
cmp
test
mov
popa
pusha
mov
outsl
adc
rcrb
fsubs
ret
xor
sbb
and
test
jo
adc
int
adc
pop
mov
fwait
jg
hlt
out
mov
mov
or
push
add
insl
pop
pop
insb
pop
sti
cmp
in
mov
pop
jb
dec
xchg
daa
and
xchg
ljmp
subl
cmpsb
sbb
or
or
fmull
into
mov
shr
mov
cli
mov
sbb
jecxz
leave
xchg
stos
js
stos
out
push
icebp
iret
mov
fs
fcompl
pop
or
or
fld1
pop
imul
dec
test
cli
and
mov
pop
adcb
sbb
mov
dec
inc
in
std
pop
imul
fwait
mov
stos
dec
mov
cmpsb
jnp
loope
sbb
rcll
sbb
pop
jns
mov
andb
or
ljmp
inc
into
add
jg
xlat
ror
or
lret
imul
jle
addr16
or
cmp
xor
sub
jle
push
std
daa
xchg
repnz
mov
cmp
mov
add
add
scas
clc
jmp
stos
pop
inc
mov
adc
enter
arpl
dec
push
push
add
inc
or
mov
shrb
inc
or
popf
out
dec
hlt
pop
add
das
data16
jne
jns
in
inc
and
sbb
or
cmpsl
insl
or
outsl
cmp
mov
in
loope
mov
cmp
push
out
push
call
pop
imull
mov
icebp
mov
adc
lds
mov
fs
test
into
adc
and
cmpsl
push
cmp
mov
add
lret
inc
out
outsl
mov
dec
jle
lods
iret
and
adc
outsb
dec
in
lcall
mov
pop
mov
sub
int
sbb
insl
and
dec
push
mov
data16
inc
jbe
ret
dec
data16
sti
or
outsb
data16
rcrb
jns
inc
dec
ficoml
iret
lea
fnstenv
popa
data16
or
pop
je
fdivr
stos
mov
je
mov
lea
pop
mov
fsubp
push
cmc
mov
cmpsl
jp
ljmp
pop
or
scas
inc
aad
and
rcll
ja
pop
adc
es
mov
test
cmpsl
outsb
inc
mov
jnp
cmpl
rorl
scas
or
insb
push
lret
cmp
pop
jmp
pop
mov
dec
mov
pop
xchg
push
lahf
add
xchg
mov
test
cmc
addr16
pop
sbb
pop
add
sbb
mov
and
ds
jb
sbb
test
mov
xchg
aaa
flds
call
ljmp
mov
xor
mov
push
ljmp
sbb
lods
or
mov
inc
add
push
push
int
xchg
mov
flds
push
xchg
mov
push
pop
cmp
sub
aam
sbb
flds
dec
aas
pop
fxch
rolb
ds
inc
cli
sbb
ret
mov
inc
aaa
movsl
jnp
bound
aaa
dec
lahf
mov
pop
or
xchg
je
cld
adc
idiv
jbe
sub
sub
inc
imulb
in
in
push
sbbl
push
lods
and
jnp
popa
sub
jg
shl
add
sub
std
je,pn
mov
pop
push
sbb
push
mov
addr16
nop
or
add
pop
addr16
pop
int3
jno
fsubl
leave
in
bound
cwtl
movsl
cli
lret
loope
push
cltd
je
mov
mulw
push
test
aaa
inc
jno
or
clc
ficomps
push
insb
fimull
out
cmpsb
outsb
loopne
xor
jl
lock
pop
lret
nop
and
cmp
sahf
push
int3
loop
pop
pop
or
rcll
sbb
add
push
dec
or
push
mov
out
jmp
enter
cmc
and
pushf
jb
aas
xchg
xor
jmp
sub
arpl
sbbb
xor
icebp
pop
push
sub
int3
mov
dec
sbb
push
ss
loop
aam
and
sarl
sub
cmp
sbb
add
jge
pushf
jle
adc
lea
dec
negl
aad
jg
sub
into
xchg
inc
mov
add
imul
pop
mov
aad
outsl
sbb
mov
or
sub
dec
adc
addr16
xor
dec
aam
inc
popf
inc
fsubs
js
getsec
stos
or
ja
and
pop
push
pop
bound
xor
jbe
xchg
mov
fisubrl
push
mov
ret
or
lret
insb
aaa
sbb
jl
shlb
sub
cmc
bound
fs
inc
pop
xor
sbb
insl
mov
jmp
je
ret
push
push
jge
dec
insb
jp
add
aas
cmp
jne
ficoml
fmul
bts
xor
leave
inc
adc
jbe
pop
aas
paddsb
add
rcrl
divb
and
faddp
rorl
sahf
test
rcrl
outsl
notl
into
hlt
shrl
push
popf
fstpt
sti
inc
pop
ret
add
dec
push
popa
xchg
int3
mov
cmp
movsl
fisubrs
sbb
jmp
dec
mov
xlat
adcl
movsb
shl
or
ja
push
iret
xchg
push
out
cmp
pop
shrl
fmul
pushf
add
pop
clc
jns
add
mov
jnp
adc
test
mov
je
mov
icebp
outsb
and
cmp
jne
mov
call
shrb
cmp
xchg
push
ss
mov
lock
mov
mov
enter
sahf
push
or
push
add
pop
pop
icebp
jle
fldt
fmulp
imull
adc
xchg
stos
mov
xor
pop
lds
rcrl
stos
xchg
std
pusha
iret
adc
jge
pop
mov
je
mov
mov
xlat
addl
jne
bound
jne
pcmpeqw
push
pop
sub
loopne
sub
jp
dec
shll
lock
mov
daa
pop
mov
pop
xor
fwait
lea
jecxz
fcmovbe
cmp
mov
orl
push
and
xlat
pop
arpl
mov
or
or
scas
std
jmp
inc
mov
shr
xchg
stos
subb
arpl
xchg
aas
pop
pop
adc
cmp
mov
jg
jnp
jle
jnp
test
inc
mov
sbb
cmp
pop
jp
xchg
jno
test
xor
data16
lds
jb
pop
arpl
add
testl
push
rorb
insb
jge
push
and
mov
popf
dec
mov
add
ljmp
inc
clc
fsts
add
adc
add
nop
fdivl
pushl
fldenv
incl
xor
add
push
imul
fsubs
push
jae
push
cmovbe
insb
mov
popa
out
fwait
sbbl
push
dec
psrlq
pop
sahf
insb
jmp
mov
clc
jbe
das
jo
test
mov
and
or
pop
in
pop
push
imul
sub
out
sub
cmpb
es
clc
cmp
push
daa
jnp
jecxz
pop
pop
es
mov
decl
movsb
pop
addl
test
enter
cmc
ret
jmp
pop
dec
ja
stos
cmc
add
xor
push
je
cmp
in
cltd
and
ja
cmp
jecxz
pop
scas
int
add
das
ret
xlat
ret
sti
icebp
jge
sub
stos
cld
imul
aas
in
cmp
loope
mov
enter
jns
inc
repz
pop
xchg
das
push
pop
in
pop
xchg
mov
dec
adc
pusha
cmp
sub
das
cmc
pop
mov
or
jle
inc
clc
push
test
fisttps
leave
inc
lret
pop
lret
and
xor
outsb
sbb
popa
repz
pop
lcall
rcll
fcmovne
or
mov
push
cmp
ret
insl
xchg
in
imul
daa
dec
int
push
jo
psubw
jns
mov
jo
fsubp
push
xor
mov
add
jnp
xchg
and
lahf
div
in
sub
inc
mov
divl
jg
or
sbb
cmc
pusha
cmp
dec
mov
in
jle
lea
ds
mov
xchg
cmp
sub
loopne
push
js
ficoml
fldl2e
test
fsubl
js
das
mov
jae
je
push
pop
mov
js
push
inc
add
xor
aaa
xor
rcrb
dec
xchg
cmp
jle
aaa
sub
inc
ljmp
imul
mov
mov
fmull
outsb
sub
iret
jns
aas
les
pop
adc
dec
nop
and
pushf
mov
inc
push
pop
int
mov
and
sbb
xor
inc
xor
lds
adc
cmp
aam
cld
or
out
popa
xorb
loopne
pop
mov
in
sub
jg
or
sbb
or
push
xchg
mov
movl
pusha
pop
push
and
dec
inc
and
jmp
add
lock
ljmp
insl
imul
cmp
hlt
mov
dec
mov
cltd
pop
mov
and
fwait
test
xor
ud2
cmpsl
adc
fildll
loopne
adc
mov
inc
aad
add
pop
ljmp
test
mov
ficoml
lods
adc
pusha
and
movsb
rsm
mov
push
in
call
stos
shr
push
mov
xor
ret
std
lods
test
push
repnz
mov
std
pusha
inc
cmp
sub
aam
xchg
cld
and
insl
jmp
cmp
xchg
fsubr
adc
daa
pop
sub
mov
test
mov
adcl
adc
sub
or
or
fisttpl
xchg
je
add
jbe
divb
sub
mov
xchg
sbb
xchg
test
mov
test
xor
arpl
mov
sbb
imul
xlat
dec
push
call
loop
dec
and
xchg
pop
inc
and
pop
adc
mov
test
sub
xchg
cld
or
or
scas
and
cs
jle
jns
aam
xor
xchg
mov
ds
xchg
rolb
inc
mov
mov
jg
je
and
add
nop
cltd
cli
pop
test
out
scas
jmp
rolb
jno
pusha
xchg
xchg
mov
cltd
imul
iret
push
and
ds
sarb
addr16
outsl
adc
jge
push
and
xor
and
sbb
inc
pop
cmpsl
cmp
rclb
mov
mov
push
mov
pusha
xchg
push
mov
and
sub
inc
cli
jbe
call
xchg
rcrb
push
push
add
adc
cmp
sub
and
cmp
in
dec
push
sbb
test
jg
repnz
pop
cli
sbb
insb
lods
data16
pop
mov
pop
and
dec
xor
jno
movsb
inc
xchg
and
cmp
cmp
pop
pop
int
xor
push
push
mov
and
and
mov
mov
lahf
das
sbb
pop
js
cwtl
pushf
jecxz
or
sub
in
push
xor
sbb
push
jbe
inc
xchg
dec
fstpl
add
into
add
fsubs
and
jns
adc
ret
push
lds
lea
adc
dec
fstp
adc
cmpsb
fldl
call
or
ss
fwait
jge
mov
and
mov
cli
iret
or
mov
push
sahf
mov
cmp
out
adc
xchg
das
cmpsl
push
popa
and
int3
push
pusha
pop
mov
faddl
mov
mov
xor
xlat
jbe
xor
jo
addb
or
cmp
in
sbb
pop
add
ss
ljmp
xor
pop
inc
and
mov
ret
mov
xchg
insb
mov
or
cmp
sarl
mov
fwait
inc
and
lea
hlt
dec
dec
addr16
ss
xor
mov
std
sbb
cli
mov
mov
sbb
loope,pt
movsl
rorl
jp
sarl
movsb
insl
lods
test
and
push
adc
cwtl
loop
pop
push
sbb
mov
mulb
and
mov
push
and
xor
fsubl
call
mul
jle
mov
repz
mov
loope
xor
cli
jmp
ds
sbb
in
mov
filds
fnstenv
push
mov
mov
push
popf
adcb
mov
test
clc
je
add
dec
test
jg
ret
lcall
js
sti
mov
mov
or
add
daa
sub
add
icebp
push
cmp
push
sub
pop
aaa
xor
xchg
je
es
mov
mov
cmp
outsl
lods
cmc
movsb
lret
mov
dec
adc
push
mov
dec
lods
xchg
adc
mull
cmpl
call
push
cmp
insl
out
xchg
loope
nop
lret
xlat
loopne
mov
flds
leave
aas
push
icebp
insl
xchg
call
insb
rol
cmpsb
mov
ja
sub
mov
filds
xlat
mov
mov
pop
jg
xor
shr
mov
or
addb
and
adc
lods
mov
sub
jb
in
mov
jnp
cld
int
xchg
in
xor
int
test
lock
jne
frndint
pop
sahf
pop
gs
imul
fidivrs
imul
dec
movsb
pushf
pop
add
jecxz
dec
jl
dec
incb
fwait
test
nop
xor
mov
jl
outsl
adcb
faddl
sbb
fs
or
aad
pop
adc
fstps
xchg
xchg
in
sub
inc
xchg
dec
xor
push
add
aad
jecxz
inc
xor
in
cmp
int
adc
xchg
push
fnstcw
inc
push
sub
xchg
scas
sub
mov
mov
adc
inc
lcall
xchg
xor
push
adc
out
out
dec
dec
call
int
cmp
movsl
out
xchg
fcomps
pop
icebp
pcmpgtw
cmp
hlt
xchg
xchg
push
mov
sub
mov
xchg
jne
adc
push
js
cmpsb
repz
add
adc
push
pop
outsl
add
ret
add
xchg
data16
add
mov
xchg
das
mov
fwait
sub
clc
inc
jb
daa
jl
sahf
popf
mov
cld
cmpsb
cmc
mov
push
jo
outsb
imul
sbb
inc
stc
mov
adc
fxch
jne
mov
ja
cmp
mov
aam
or
jne
jno
mull
push
pushf
push
nop
mov
mov
std
call
and
ret
adc
mov
xor
aad
ljmp
push
sub
inc
loope
mov
idivl
cli
jbe
mov
setp
mov
loop
or
repz
movsb
lods
or
jle
fnsave
leave
mov
jge
std
cmp
shrl
pop
test
or
mov
mov
ret
push
push
fdivrs
rorb
or
add
jmp
jnp
inc
push
imul
xchg
inc
jno
in
xor
push
push
sbb
ret
stos
fbstp
xchg
rol
jne
in
xchg
mov
pop
in
pop
and
sbb
or
lret
mov
push
addb
into
sub
aam
add
lret
push
fsubl
sbbl
in
and
cltd
cmp
and
xchg
inc
cmp
cmp
xor
fbld
pushf
movsb
push
xchg
push
je
mov
mov
jl
shrb
push
ljmp
inc
sub
xlat
dec
fadds
inc
popf
and
les
sbb
cltd
lock
arpl
jb
les
push
and
mov
imul
jnp
jge
movsl
jle
dec
sarb
jns
mov
cs
push
xchg
jge
daa
mov
sbb
jnp
inc
push
push
xchg
leave
inc
inc
cs
xchg
dec
div
add
fwait
lcall
mov
out
mov
jnp
jo
xor
adc
mov
push
hlt
fs
push
in
mov
daa
andb
pop
xchg
stos
test
and
add
outsb
mov
xchg
xor
shl
lret
pop
jns
arpl
xchg
cli
imulb
inc
mov
adc
lcall
sub
iret
call
data16
lahf
xchg
jmp
lods
cmp
mov
mov
add
subl
or
lds
push
jb
sub
mov
js
lods
sub
fimull
mov
aaa
mov
push
xor
add
push
add
mov
movsb
cmp
ss
pop
cwtl
add
fstpl
sbb
hlt
add
push
cld
cltd
int3
shll
xchg
rcrb
pop
mov
pop
jg
shrl
iret
dec
scas
mov
ds
mov
jb
sub
je
jl
fisttpll
fistl
jnp
not
inc
mov
ljmp
dec
dec
addr16
aam
mov
mov
loope
mov
insb
outsl
je
fnstenv
das
mov
mov
xlat
aad
fsts
dec
xchg
add
mov
popl
int
shrb
mov
xor
jge
mov
jo
adc
enter
and
mov
sub
leave
push
mov
stos
xchg
rorb
stos
test
mov
adc
out
jge
ja
mov
inc
ret
movsb
lods
rclb
ljmp
xchg
stos
out
into
stc
fcomps
sti
sub
mov
jo
add
mov
mov
jmp
push
clc
or
fidivl
sbb
and
jnp
aaa
inc
test
add
pop
scas
lret
or
rolb
out
push
cmpsb
xor
mov
and
scas
inc
xchg
sbb
inc
mulb
xchg
mov
sub
sub
and
out
sarb
popl
divl
xor
mov
loopne
and
lds
shll
cmp
xchg
jb
sub
fisubrs
hlt
fmul
cmpb
into
lds
or
repnz
add
mov
jle
push
popf
sbb
dec
addr16
cs
xor
aas
xor
lahf
jp
cmp
adcb
and
sbb
ffree
pusha
or
sbbl
mov
cmp
inc
cwtl
mov
xor
pop
cmp
inc
into
out
repnz
out
push
sub
cmpsl
mov
cmp
in
ret
adc
cmpsb
scas
test
bound
and
cmpsb
aaa
lock
xchg
les
cmp
mov
lcall
or
add
in
mov
lods
adc
adc
out
and
ljmp
inc
subb
stos
or
xchg
ds
adc
mov
sti
test
cmp
mov
in
cld
jns
pop
mov
lock
inc
test
std
test
fwait
cmp
cmp
test
sbb
push
lret
fimull
jmp
insl
iret
mov
nop
test
in
adc
cs
pop
aas
cmpsl
fdivrs
cltd
sbb
mov
mov
loopne
mov
dec
imul
ret
imul
dec
inc
aam
in
xor
push
ret
adc
pop
push
les
fidivrl
inc
adc
xlat
cltd
pop
call
push
das
lods
mov
cwtl
daa
push
sarb
sbb
inc
add
fnsave
add
mov
call
test
lock
ljmp
mov
pop
jmp
lcall
call
in
add
cmpsl
pop
mov
mov
in
add
xchg
fsubs
push
cmp
pop
paddw
xchg
movsl
cmp
inc
frstor
fiaddl
add
les
adc
dec
cmc
cmp
push
push
push
xor
les
addr16
cmp
dec
cltd
loopne
int
mov
lret
fs
push
jnp
frstor
ja
test
pop
mov
pop
mov
out
fwait
cmp
mov
add
cmp
push
lock
sub
ret
sbb
pop
pop
aaa
and
in
mov
icebp
iret
cli
inc
or
test
insl
not
movsl
in
flds
mov
push
mov
lahf
movsl
xchg
in
sti
repz
es
sbb
pop
mov
in
push
push
shlb
lods
pusha
aad
fs
stc
pop
loope
jb
ss
xchg
mov
inc
mov
pop
leave
aad
jae
sbb
aas
xor
mov
adc
repnz
pop
popa
cmp
je
mov
mov
ljmp
jmp
xchg
loope
int3
and
push
iret
mov
in
cld
sahf
cmp
add
arpl
cltd
les
sbb
ret
push
sbb
call
cli
cmp
hlt
jno
sbb
push
jg
daa
cmpsb
pop
push
test
adc
mov
push
mov
cmpsl
inc
adc
mov
push
cmp
ja
loop
daa
popf
push
cmp
ljmp
stc
mov
bound
incl
push
jo
mov
cwtl
push
into
ficoms
dec
mov
adc
rcrb
jmp
add
ror
fldt
inc
in
dec
sub
and
xor
repz
sbb
mov
xchg
and
ficoml
pusha
dec
mov
add
lods
mov
cld
pop
xchg
inc
popa
dec
js
push
rcrl
sbb
sahf
mov
loope
aas
inc
imul
je
call
jae
pop
cli
rcll
mov
in
aad
inc
jge
push
adc
mov
pusha
mov
inc
sbbl
mov
mov
mov
xorl
fidivl
adc
pusha
add
dec
adc
or
mov
sbb
repnz
icebp
es
addr16
nop
add
nop
mov
inc
lds
addr16
test
sbb
sbb
sbb
adc
sub
mov
ja
and
and
mov
rorl
sub
shrb
sub
cli
and
scas
aaa
mov
lods
cmp
lods
inc
movsb
jbe
inc
mov
and
push
pop
insl
xchg
push
adc
insb
or
lret
movups
and
dec
iret
setl
mov
ljmp
inc
mov
adc
push
cmp
out
stos
hlt
dec
shlb
iret
mov
mov
in
xor
ror
sub
fisubrl
inc
ret
add
mov
jg
das
dec
leave
jno
pop
push
ret
enter
xchg
iret
mov
hlt
rorb
mov
je
push
xchg
sub
xor
or
pop
xchg
xchg
sbb
xor
filds
sahf
mov
mov
xchg
iret
and
je
jae
sub
pop
push
out
ret
and
sub
mov
xor
push
sbb
push
rol
or
les
xchg
lods
imul
sbb
mov
pop
mov
sbbb
sub
sbb
inc
cmc
lret
xchg
ret
arpl
xchg
imul
aad
mov
push
pusha
int3
hlt
in
mov
mov
bound
pop
ljmp
aam
test
jp
rcll
ss
sub
ja
les
add
aas
dec
or
aaa
add
jmp
cmpsl
mov
xor
pop
out
es
add
mov
lods
clc
push
cltd
hlt
and
stc
jno
lock
dec
push
and
test
fwait
xor
add
testb
movl
and
out
cmp
stos
shr
push
mov
pop
mov
push
xchg
lea
jmp
xor
aaa
inc
cmp
cmp
mov
jno
out
or
fildl
test
add
mov
ja
addr16
xchg
or
mov
dec
jno
data16
addr16
lahf
sub
idivb
sub
popf
into
and
fistpl
jnp
push
ja
lret
mov
sub
xlat
and
ds
jle
cltd
xchg
jl
stos
mov
push
fcoml
jae
and
enter
bound
mov
test
or
cmp
xchg
mov
sbb
add
and
mov
jle
stos
mov
xor
xor
jecxz
add
sti
clc
mov
and
leave
adc
dec
js
negl
inc
ja
pop
stos
mov
jp
lea
icebp
cld
cmp
addr16
pop
mov
imul
push
mov
cli
push
insb
fidivs
lret
lea
loope
mov
iret
push
inc
cmp
mov
mov
mov
xlat
subb
leave
push
add
push
inc
xor
jg
in
xor
xchg
xchg
mov
pop
mov
notb
jns
jg
mov
imul
jo
xor
aad
loope
insb
sbb
fcoms
adc
jge
mov
inc
call
inc
xor
cmc
mov
ss
fadd
dec
cs
lock
inc
and
shll
fimull
lret
push
pop
xchg
cmp
xor
dec
in
adc
mov
stc
daa
mov
dec
fnstenv
dec
adc
inc
push
mov
fisubrl
pop
lds
and
enter
mov
lods
fists
lcall
mov
or
push
mov
lods
test
call
and
jle
int3
mov
xor
xchg
mov
sti
in
leave
jle
fstps
mov
and
jnp
jecxz
xor
shlb
xor
mov
int
addl
and
into
jb
push
jae
mov
push
mov
sbb
cmp
lret
and
xchg
dec
xchg
icebp
out
push
scas
int3
leave
fsubrl
in
lods
push
enter
mov
cmc
cwtl
mov
or
adc
jle
dec
and
mov
inc
test
push
sbb
mov
jbe
test
mov
xchg
data16
cmpsl
inc
inc
xor
or
cmpsb
pushl
addl
mov
sbb
jne
mov
repz
xor
add
xchg
faddl
stos
iret
mov
dec
shll
jge
dec
repnz
aas
in
add
adcl
aas
xorb
add
push
dec
ja
sahf
dec
fisubrs
xor
mov
mov
sub
movd
aad
sahf
je
pop
je
mov
mov
lock
addl
xchg
inc
faddp
outsb
adc
add
imul
sub
add
scas
out
repz
pop
and
out
pusha
push
stos
into
sbb
dec
pop
or
push
pop
fstl
orl
pop
cmp
arpl
rcll
sbb
xchg
arpl
sub
xor
sbb
subl
sbb
or
stos
xchg
shrl
ja
js
pop
rcll
jg
pop
test
jp
int3
and
les
dec
shrl
push
test
pop
cmp
mov
ja
cmpsl
pop
jb
out
enter
pushf
cmp
imul
pushf
push
into
inc
jp
inc
sbb
sbb
xchg
std
in
sbb
imul
inc
inc
inc
in
and
pop
mov
jns
xor
sub
sbb
arpl
mov
or
mov
mov
mov
xor
xchg
mov
hlt
adc
sbb
inc
jae
or
sti
dec
xchg
enter
dec
adc
hlt
mov
mov
mov
sbb
adc
fisttps
mull
mov
add
ret
jge
in
dec
dec
js
test
cmpsb
adc
cmp
inc
mov
icebp
in
sub
lret
mov
inc
ret
and
cmp
inc
mov
fs
test
push
mov
and
xor
xlat
out
jl
ret
push
rclb
imul
ret
mov
js
sbb
pop
cltd
mov
mov
scas
pop
je
jbe
sar
and
add
sbb
add
decb
mov
adc
push
jecxz
or
lea
movsb
gs
enter
pop
int
gs
cltd
mov
lret
movsb
in
sub
ja
inc
cmpsl
loope
adc
leave
cld
call
jg
stos
mov
cmc
xor
sarl
cmp
inc
push
sbb
push
xchg
jl
xlat
cltd
hlt
xor
imulb
aam
fnsave
cmp
xlat
cmp
jl
dec
xor
mov
add
nop
hlt
scas
loopne
xchg
jle
push
inc
ss
loop
jo
jg
lods
enter
mov
xor
lret
xor
imul
dec
and
iret
scas
xor
sbb
adc
aam
sbb
mov
cli
dec
push
pop
push
sub
enter
cmc
divb
test
sub
call
and
jne
loop
fwait
sbb
loope
mov
mov
push
add
pop
sub
fsubrl
xchg
andl
jb,pt
les
pop
faddl
push
js
push
add
sti
addr16
push
and
dec
and
sbb
jge
stc
int
stc
sbb
andl
out
mov
add
outsb
or
shll
xor
mov
shll
jge
sub
xor
jo
cmp
xor
push
test
sbb
ja
sahf
test
xor
testl
sub
repnz
inc
sahf
movsb
cld
and
movl
addr16
inc
mov
ds
push
sub
int
mov
pop
pop
data16
push
push
andl
call
pop
insb
cmp
icebp
jbe
mov
scas
xchg
ja
mov
mov
stos
cmc
inc
data16
test
jns
push
mov
call
pop
lret
mov
dec
lods
fsub
jno
rep
xor
stos
and
sbb
cmp
mull
call
gs
repz
adc
fnsave
cmpsl
mov
insb
add
mov
push
pusha
and
mov
rol
aam
adc
arpl
rcl
je
mov
sarl
shlb
outsb
loopne
xchg
cwtl
jbe
cltd
sti
mov
scas
adcl
add
mov
dec
lahf
dec
xlat
xchg
sbb
int
outsl
cmc
inc
lods
and
and
add
or
inc
or
jbe
addr16
movl
aas
xchg
mov
stos
faddl
lods
notb
test
in
aam
nop
cmp
mov
push
leave
xor
movb
int3
xchg
test
hlt
daa
cwtl
sub
jns
pop
enter
js
test
dec
lret
jno
scas
mov
dec
out
mov
jne
jne
cli
les
gs
loop
cs
push
mov
aas
fdiv
fdiv
je
pop
shl
leave
xchg
adc
pop
jbe
dec
mov
xchg
nop
xor
push
lret
aas
shll
push
jns
pop
inc
je
std
jae
pop
mov
fldenv
push
mov
test
cli
cmpsb
mov
xchg
cli
jbe
into
imul
bound
mov
rcl
sbb
cmp
icebp
or
hlt
outsb
int3
sub
push
adc
pop
mov
fcmovb
pop
sbb
test
aas
lcall
jg
pop
cmp
dec
jge
ljmp
xchg
aas
pop
addr16
xchg
adc
iret
jno
xchg
into
push
cli
stos
mov
aam
dec
pop
rorb
icebp
xlat
push
xchg
imul
ss
inc
inc
push
or
in
xchg
add
mov
pop
lret
dec
pushf
mov
loope
fstpl
sbb
pop
adc
mov
push
test
js
popf
adc
inc
fdivr
call
in
mov
pop
dec
dec
fbld
shll
mov
ss
out
jecxz
xchg
lahf
sub
push
and
push
inc
xor
sub
testl
mov
in
aam
lcall
in
rorb
loopne
out
imul
fcoms
in
repz
ds
es
add
mov
mov
loope
or
cmp
daa
leave
xchg
jecxz
or
cwtl
jo
xchg
dec
inc
jle
lret
mov
push
mov
aad
xchg
xor
jmp
stos
mov
mov
mov
test
lock
push
xor
fs
sub
ret
pop
adc
inc
push
xchg
movl
mov
jnp
mov
push
imul
imul
icebp
fdivrs
in
out
sbb
mov
loop
sbb
and
push
jecxz
jge
jp
ja
xchg
sbb
jb
add
loope
enter
sub
xlat
iret
pop
movsl
xchg
mov
push
cmp
jb
pop
mov
mov
gs
and
adc
stos
sbb
mov
xlat
loop
jae
cmc
popf
sub
je
ja
aam
mov
xor
in
sub
push
mov
lock
mov
mov
mov
xor
jo
js
mov
mov
scas
inc
lahf
negb
outsl
in
cs
mov
jb
sub
jne
add
sbb
mov
jne
movsb
push
mov
ret
jnp
aam
jg
adc
cmpsl
inc
push
pop
pop
outsl
ss
ja
mov
xor
push
inc
add
lret
cmc
dec
inc
fldcw
insl
mov
iret
cmpsb
lea
movsl
mov
and
in
xchg
mov
inc
and
pop
rorl
lahf
inc
test
in
mov
insl
lret
xor
jmp
fisubrs
es
gs
xchg
xchg
jmp
jl
ja
xchg
or
clc
loope
or
std
dec
adc
cwtl
shrb
pusha
arpl
cld
mov
les
or
nop
maxps
add
dec
xchg
leave
xor
in
mov
daa
pop
sahf
jb
scas
dec
nop
lock
call
xor
dec
xor
enter
cmpsb
jo
rolb
cmp
cld
pop
imul
nop
push
pop
and
xor
sub
xor
dec
fwait
cmp
pop
mov
arpl
fsubl
xchg
cmp
jp
fs
mov
jbe
push
jmp
jnp
sar
xor
mov
push
hlt
enter
lret
fisttpl
sbb
outsl
bound
cmp
jbe
fisttps
xchg
or
sbb
pushf
jmp
pop
ja
xchg
data16
fisttpl
test
mov
xchg
mov
scas
adc
add
movsb
pop
arpl
push
pusha
in
jle
cmpsb
or
sub
insb
jmp
mov
jge
paddq
pop
ss
mov
jmp
jmp
sub
sbb
mull
loop
fs
mov
mov
cmp
push
pusha
ret
mov
loopne
inc
push
sbb
sub
lahf
and
push
pop
dec
iret
dec
out
lods
adc
pop
lods
inc
cmpsb
icebp
cmp
daa
mov
jb
mov
outsl
lock
xor
sbb
mov
cmp
jge
inc
lock
mov
imul
call
jp
or
and
jno
dec
mov
inc
mov
xor
test
cmp
shlb
lds
lock
mov
cli
cmpsl
in
cmp
gs
ficoml
jno
dec
repz
xor
in
loop
mov
fldenv
mov
xchg
jmp
mov
sbb
mov
mov
js
inc
sub
sbbb
in
fisubrl
dec
add
pslld
in
mov
jnp
rorl
mov
inc
dec
fisttpll
jge
pusha
xchg
aam
ljmp
and
sub
mov
mov
inc
dec
das
and
aad
pusha
xchg
mov
ljmp
mov
movsl
sub
cwtl
push
pop
sbb
fdivl
inc
lea
sbbb
adc
push
xor
xor
je
or
aad
dec
sbb
cmc
clc
loop
jnp
ror
add
mov
fbld
inc
inc
into
test
xchg
popf
out
roll
iret
xor
dec
cmp
mov
xor
shll
xor
movsb
or
pop
aam
iret
pop
add
sub
test
cld
or
lods
lods
push
iret
xchg
cld
mov
pop
testb
fcoms
or
pop
pop
adc
sub
pop
xchg
mov
out
popf
inc
or
in
stc
loopne
sbb
fistps
js
cmpsl
push
adc
adc
mov
jge
ret
add
js
repz
push
imul
lods
pop
cmp
xchg
xor
lea
iret
adc
cmp
dec
pop
std
cmpsb
push
inc
sti
xchg
aaa
push
pop
sbb
xchg
ret
cmp
inc
stos
push
pop
movsl
fisubs
fdivrl
cmpsl
cmp
sbb
mov
out
sub
rclb
or
imul
mov
shlb
ja
sahf
imul
ljmp
sahf
sbb
sbb
js
push
xor
sub
xchg
pop
outsl
sti
adcb
cmc
add
movsl
pop
push
loop
in
pushf
sbb
xchg
mov
and
and
mov
rcrb
enter
loopne
pop
inc
mov
inc
mov
data16
jle
xchg
and
xchg
xchg
ljmp
mov
loopne
cmpsl
ret
push
mov
or
xchg
or
fistpl
cltd
in
xchg
mov
adc
das
dec
daa
jecxz
scas
shll
pop
inc
das
or
cmpb
add
xlat
cltd
mov
sub
pop
mov
adc
lret
out
sub
fwait
jge
dec
mov
xchg
fnstenv
pop
jge
stc
pop
pushf
dec
ret
daa
int3
jge
sub
xchg
mov
sets
jp
cltd
insb
jecxz
push
xor
push
pop
in
mov
sbbl
leave
iret
cmp
int3
push
xchg
xor
inc
dec
loop
mov
std
call
aas
push
add
insl
sub
movsl
sbb
push
insl
cmp
mov
xchg
sub
ljmp
pop
inc
stos
sarb
aaa
cmp
data16
xlat
shr
mov
gs
push
sahf
arpl
jg
or
jne
push
ja
mov
nop
mov
cmpsb
sbb
fcom
jle
repz
mov
sub
pop
push
call
mov
xchg
jp
outsl
mov
aaa
mov
ds
loopne
cli
mov
push
and
push
mov
pop
js
dec
fiaddl
jns
xor
lock
and
xchg
mov
xchg
push
popf
sub
cmpsb
jg
sarb
cmp
push
aas
add
sub
mov
xor
std
dec
push
cmp
in
gs
out
sbbb
mov
pop
jg
mov
scas
arpl
into
jno
imul
out
insl
inc
xor
movb
push
push
flds
dec
adcl
imul
and
sbb
cmp
sbb
mov
push
in
mov
out
ret
cmp
and
push
pop
movsb
clc
pusha
pushf
punpckhwd
hlt
add
mov
push
mov
xchg
pop
sbb
scas
push
inc
enter
pop
outsb
cmc
out
jne
sbb
test
int
in
aas
pop
aaa
aam
lret
mov
outsb
mov
inc
insb
jecxz
insl
nop
jnp
int3
nop
sbb
adc
jne
pop
inc
das
add
add
xorb
dec
xchg
cwtl
sub
pop
mov
mov
inc
ss
or
call
add
mov
in
and
adc
test
jp
lds
sub
and
push
xor
shrl
jae
pop
cmp
lret
or
jne
popf
cmova
inc
dec
in
adc
adc
jecxz
jbe
xchg
cmp
or
call
lret
lret
popf
xchg
in
iret
mov
stc
jbe
push
cltd
mov
jmp
lret
cmp
cli
add
mov
or
push
dec
mov
lods
js
and
arpl
mov
mov
mov
mov
xrelease
jb
pop
jne
sarb
add
or
mov
sbb
fwait
pop
ljmp
cmp
xchg
dec
idiv
pop
sub
pop
inc
mov
arpl
and
scas
mov
adc
xlat
pop
ret
push
in
cmp
jge
push
mov
aas
das
pop
inc
pusha
sti
xor
xchg
jno
and
adc
sub
out
aas
mov
mov
add
mov
cs
jb
stc
xchg
out
pop
loop
adc
ret
sub
xchg
cltd
mov
int
test
leave
and
xor
push
sbb
test
sbb
rcll
cltd
jmp
mov
mov
in
shrl
lret
push
push
add
push
push
outsb
jbe
pop
mov
fcmovbe
dec
push
sub
dec
sbb
jae
scas
clc
xchg
out
jmp
ds
int
sbb
jns
mov
outsb
into
or
push
loope
in
mov
cs
xorl
add
out
ljmp
aaa
movsl
loop
bound
pop
inc
cmc
xchg
sub
mov
mov
shll
xchg
mov
push
data16
out
mov
call
pop
faddl
adc
push
xchg
pop
inc
frstor
mov
xor
ds
rcr
sub
xor
icebp
jl
hlt
pop
inc
jle
scas
jns
mov
ret
xchg
cmpsl
testl
add
sub
cltd
shlb
cmp
repnz
xlat
jbe
sti
add
xchg
test
es
sub
nop
push
inc
dec
xchg
jae
add
jg
lea
mov
ret
sbb
scas
inc
and
xchg
fisttps
push
mov
loop
mov
je
pop
mov
sub
mov
pop
mov
push
and
or
std
faddl
push
inc
mov
jg
cmpsw
fwait
mov
sbb
cmp
inc
fldcw
lahf
pusha
xchg
fisubl
inc
outsb
mov
inc
test
test
jo
inc
push
jmp
cmp
lds
loope
sub
pop
inc
inc
lock
mov
ret
out
xor
in
cmp
push
xor
enter
cmp
inc
mov
imul
lcall
insl
sub
nop
push
push
mov
mov
adc
and
dec
mov
out
pop
das
cmpsb
push
stos
test
inc
pop
xor
pusha
sbb
sahf
std
add
xor
and
mov
mov
test
bnd
mov
repnz
outsl
sub
push
jmp
repz
negb
lret
lcall
jmp
in
pop
cmp
jae
mov
imul
pop
mov
inc
pop
pop
nop
mov
cmp
xchg
testb
cmp
xchg
xchg
cli
dec
lahf
jl
mov
cld
pusha
jp
repnz
xor
cli
aas
ds
cmp
lods
xlat
orb
and
and
popa
lret
into
jp
nop
dec
stos
repnz
gs
loopne
test
xchg
mov
push
cmp
insl
test
inc
cmp
jnp
push
adcl
dec
fs
mov
xchg
mov
pop
lea
leave
sbb
ss
jnp
loopne,pt
jns
lds
hlt
xchg
aas
dec
mov
lret
add
mov
adc
lahf
ret
mov
mov
push
jbe
shrb
or
ljmp
loop
sbb
push
imul
sbb
push
addr16
push
push
mov
incb
or
dec
jns
ja
pop
dec
add
roll
dec
push
mov
fucomi
mov
ds
sti
idivl
sub
xchg
bound
hlt
imul
lods
cltd
xchg
mov
pop
xor
xor
lods
xchg
lods
cs
out
dec
push
fnsave
pop
cltd
pop
lods
out
add
xor
and
push
xchg
out
push
data16
inc
aas
mov
stc
sti
dec
rcrb
fmuls
sub
cmc
push
mov
and
sub
imul
sbb
xor
jecxz
inc
mov
and
push
popl
xchg
mov
pop
mov
ljmp
aam
add
jae
test
push
out
push
arpl
jae
fcoml
adc
cmc
cmp
xorb
and
adc
xchg
ja
lcall
in
dec
or
cmpsl
jno
cld
popa
mov
adc
sub
mov
fmull
pop
pop
mulb
rcr
aaa
movsb
sbb
js
mov
mov
jl
mov
sahf
push
or
or
add
push
add
jns
sbb
push
leave
scas
mov
lds
rorl
inc
mov
out
fisubl
or
or
mov
pop
scas
imul
aaa
fisubrs
daa
bnd
clc
cmp
movsl
subl
xchg
out
int
inc
stc
icebp
rcrl
and
xorl
sbb
mov
outsl
outsb
jecxz
xor
mov
scas
pop
mov
xor
negl
mov
add
adc
mov
movsl
xchg
lcall
cs
jae
add
outsl
imul
dec
add
pop
inc
jne
xor
jnp
jno
arpl
fxch
loop
push
push
in
popf
xchg
jae
lds
lcall
loope
mov
outsb
push
jecxz
inc
lret
cmp
push
mov
inc
rol
inc
pop
add
push
pop
xor
adc
mov
push
push
push
scas
pushf
or
int3
addr16
xchg
cmp
mov
cmpsb
cld
inc
scas
mov
jmp
adc
inc
adcl
mov
xor
movsl
and
xor
cmp
out
sbb
xor
fisubs
cmp
outsb
in
pop
aad
js
mov
and
ds
jns
fadd
mov
loopnew
out
xorl
aam
shll
aad
ffree
cmp
push
cltd
ljmp
and
femms
xchg
test
mov
addr16
inc
sbb
out
lods
test
cs
fstpt
out
push
rcll
gs
sbb
int3
out
mov
and
testb
sbb
push
movsl
pop
sbbb
adc
or
mov
mov
sbbb
cmpsb
fdivr
in
mov
fstps
inc
in
xchg
or
dec
mov
data16
pop
shl
nop
std
stos
dec
ds
push
pop
int3
in
or
pop
cmp
or
adc
shlb
pop
and
xor
add
or
ss
pop
lds
fwait
and
adc
pushf
or
cltd
xchg
sub
and
mov
fldt
sub
pop
addb
push
notl
test
sub
andb
loope
mov
std
cmp
bound
aad
sbb
je
fucomi
cmc
mov
test
test
or
pop
stos
add
mov
lds
fisubrs
dec
nop
fstpt
xchg
pusha
xchg
inc
stos
lret
push
xor
dec
lock
mov
ja
fs
pop
daa
pop
jl
jb
mov
pusha
add
lods
inc
gs
add
mov
sub
test
inc
inc
pop
sub
sar
jle
add
and
mov
and
cwtl
fcom
jmp
add
push
pop
iret
inc
jecxz
gs
stos
jne
add
aam
aas
mov
cli
inc
jp
stos
ljmp
test
ficoml
into
stos
add
xor
cmp
dec
call
sbb
mov
mov
cltd
add
dec
xchg
pop
inc
cmp
xor
xor
bound
pop
lahf
insb
push
lods
and
test
test
stc
test
pop
push
inc
dec
repz
adc
stc
inc
pop
pop
std
sbb
mov
or
adc
cmp
shrb
lods
dec
or
xlat
loop
scas
or
xchg
stc
pop
push
insb
mov
movsl
loopne
call
getsec
xchg
xor
mov
push
add
dec
xor
and
ret
lret
and
jo
scas
dec
mov
sbb
xchg
or
negl
mov
sub
mov
jle
mov
xor
popa
and
jne
add
mov
sahf
mov
rolb
dec
repnz
and
xorb
jp
lret
mov
test
xchg
inc
xor
daa
hlt
cwtl
and
add
dec
hlt
adc
jge
mov
jp
sub
mov
pop
aam
std
jp
mov
pop
adc
add
cmp
jle
je
lret
int3
xor
mov
or
mov
fwait
hlt
fldenv
imul
push
ss
scas
pop
add
les
and
enter
pop
push
mov
imul
mov
xchg
movd
fsubl
test
fs
clc
pop
leave
fprem1
fstpl
sub
in
in
dec
jg
sti
push
sbb
mov
or
cmp
out
adc
stc
push
lods
pop
sub
in
lds
out
enter
mov
int
add
push
adc
aas
cmp
jb
adc
sub
lds
pop
xchg
push
cmpsb
mov
push
push
mov
out
iret
add
xlat
in
daa
or
add
mov
jl
xor
int
mov
add
int3
jae
xchg
push
mov
and
and
sub
iret
mov
insl
mov
loopne
mov
adc
mov
fildl
std
jmp
push
inc
inc
in
movsb
gs
call
adc
stos
cmp
jnp,pn
xchg
add
ljmp
inc
lcall
pop
ljmp
fcmovnu
test
mov
jge
push
test
ja
out
mov
and
movsb
pushl
cld
dec
iret
mov
lcall
xor
icebp
jge
lods
psrld
jp
imull
repz
lods
ja
pop
sub
and
cs
xor
aas
sub
leave
std
mov
mov
ljmp
push
pusha
cmpsl
int3
jnp
fistl
or
push
inc
add
dec
sbb
jmp
mov
cmp
arpl
push
or
xchg
idivb
mov
inc
xor
testb
clc
imul
stos
sbb
mov
inc
shll
sub
sar
dec
xor
popl
dec
dec
adc
jmp
cmp
lock
hlt
int3
adc
aaa
fldl
sbb
lods
imul
out
push
neg
add
inc
insl
int
add
mov
mov
mov
xchg
xorl
or
push
sbb
testl
xor
flds
es
mov
dec
js
push
fsub
or
sbb
clc
psraw
je
out
int
fsubrs
dec
mov
inc
in
adc
cld
mov
ret
push
repnz
mov
out
mov
addl
xorb
pop
xchg
jg
adc
lret
out
mov
popf
cmc
inc
outsb
and
out
xchg
outsl
sub
push
repnz
sbb
or
ljmp
push
cli
int3
and
icebp
into
pop
inc
add
cmp
mov
jle
hlt
shlb
pushf
add
test
push
scas
test
or
pop
mov
shlb
cmp
aam
ds
lods
mov
inc
fs
pop
subb
clc
jmp
popf
jno
sub
cs
setns
jp
out
ds
gs
lcall
leave
stc
pop
mov
je
das
xor
and
movsl
cli
push
aam
inc
js
jne
addl
and
mov
inc
pop
and
fisttpl
pop
adc
add
nop
roll
inc
ljmp
pusha
jg
xlat
mov
mov
sbb
daa
mov
jg
add
dec
push
std
test
mov
adc
xchg
mov
fsincos
and
aam
inc
mov
cmp
sti
ss
sbb
xchg
xor
mov
mov
jl
sub
aad
push
lds
add
pop
fwait
or
lahf
movsl
adc
ret
aaa
movups
cmp
js
fisttps
xlat
int3
dec
xlat
in
out
xchg
mov
jmp
arpl
mov
add
andl
mov
adc
sbb
ret
jl
and
mov
fisttpl
adc
sbb
xchg
das
cmp
adc
mul
sbb
push
psubw
xor
push
ss
jno
mov
add
sub
bound
sub
in
stos
mov
outsl
addb
roll
ffree
cli
mov
xchg
mov
js
pcmpgtw
les
rorl
inc
mov
fs
xchg
sbb
cli
mov
add
sbb
lret
or
repnz
sbb
int3
out
sub
call
mov
mov
jecxz
inc
call
dec
test
xlat
adc
xchg
cmc
scas
add
jmp
out
scas
aad
add
loopne
inc
pop
movsb
or
inc
and
sbb
pop
push
pop
and
es
ja
cmc
in
mov
fsubr
xchg
mov
sbb
sbb
aas
mov
fsubl
mov
and
adc
lods
stc
and
jae
and
sub
dec
adc
dec
jle
dec
lcall
pop
scas
push
pop
sbb
pop
aad
and
cmp
or
sbb
ljmp
jmp
mov
mov
jbe
jno
iret
cmc
add
js
leave
sub
movsl
push
xchg
inc
iret
mov
sub
pop
sub
inc
bound
test
mov
dec
adc
leave
pop
sub
negb
aam
fsubrs
cli
push
mov
mov
inc
and
cmp
fs
sub
push
int
and
out
cld
cmp
mov
lods
push
shl
ret
fdivrs
cmc
xchg
adc
test
mov
stos
scas
out
leave
jns
mov
jle
sbb
aam
lea
xor
jo
inc
fs
cmp
push
add
push
or
aaa
ds
daa
popa
icebp
into
cmc
mov
dec
cmpsb
fbstp
fldt
ds
adc
pop
push
fidivrl
xchg
cwtl
push
mov
or
xchg
xchg
rclb
sbb
loope
jp
dec
adc
mov
shr
div
imul
pop
or
dec
pop
aas
outsb
xchg
xchg
mull
inc
cld
cmp
sbb
mov
scas
cmp
hlt
or
mov
pop
movzbl
sahf
lods
leave
inc
shll
push
xchg
mov
and
fstl
aad
push
loop
insl
mov
and
add
cmp
dec
push
pop
call
and
cmp
xchg
xchg
cmpsl
loop
fsubr
mov
movsb
sbb
je
popl
repnz
xor
mov
lock
out
mov
pop
xor
arpl
ret
push
or
stos
lock
push
jle
fdivrp
mov
in
sbb
pop
test
aad
mov
pop
test
mov
adc
or
inc
dec
xorb
inc
wbinvd
jne
inc
push
xchg
push
sub
ljmp
cmp
outsb
outsb
adc
xchg
repz
xor
ljmp
pop
adc
imul
or
jg
insl
test
mov
hlt
repz
pop
mov
push
lret
dec
cmc
int
daa
and
in
in
inc
imul
xchg
fwait
mov
add
pop
push
xchg
shrb
lea
cmpsb
stos
in
pop
mov
ljmp
test
xchg
or
icebp
test
adcl
insb
xchg
in
cmp
mov
inc
insl
and
xchg
daa
pop
fidivrl
xchg
leave
lds
cmp
sbb
dec
jo
mov
cmpsb
mov
and
lret
lds
push
dec
and
mov
test
test
lods
dec
xchg
outsb
das
adcl
jnp
shll
pop
pop
rol
outsb
dec
inc
pop
jmp
outsl
mov
jno
dec
leave
xchg
inc
daa
mov
or
push
mov
mov
cltd
lret
jno
mov
push
test
inc
sbb
pop
flds
mov
mov
push
test
sbb
popf
lea
pop
outsb
pop
sub
aaa
int3
stc
xchg
cltd
cs
decb
mov
ficompl
fadds
pop
xchg
aas
push
push
imul
xchg
pop
movsl
loope
lods
inc
sbb
push
jb
out
xchg
shll
insb
jbe
adc
add
lcall
insl
iret
cmp
mov
ss
or
sub
and
pop
and
pop
pop
mov
pshufw
sbb
add
dec
add
and
and
fnsave
cltd
inc
fiadds
test
jns
bound
leave
mov
loopne
stos
aas
inc
dec
lcall
cwtl
jno
sarb
pop
fmull
mov
dec
xchg
sbb
jecxz
leave
ss
imul
push
insb
enter
pop
jae
orb
xrstor
push
xchg
jnp
push
stos
lods
add
aam
jne
fiaddl
arpl
andl
mov
inc
sbb
push
cmc
pushaw
aad
repnz
ljmp
loope
fidivl
aam
roll
sti
outsl
out
icebp
into
cmpsl
adc
les
mov
aaa
cmp
xor
frstor
mov
mov
xor
push
dec
push
or
and
cmp
sub
cmc
hlt
mov
push
and
cwtl
inc
sbb
mov
insb
jb
lods
call
inc
jbe
inc
jo
popf
cltd
fwait
sahf
xlat
and
mov
pop
sbb
aaa
jne
fwait
lea
and
test
ficompl
inc
or
loop
sbb
xchg
push
outsl
dec
les
ss
insb
mov
insl
push
dec
sbb
inc
jb
out
aas
adc
and
xor
pop
inc
push
pop
mov
inc
jle
mov
ret
mov
dec
int
jae
cli
push
or
xchg
out
cmp
inc
pop
loopne
adcl
xor
pop
jl
push
cltd
fdivrp
cmp
sbb
insb
hlt
popf
loopne
das
dec
das
cmp
xchg
stos
jmp
xchg
movsb
std
daa
imul
cmpsb
xor
ds
mov
pop
add
imull
imul
fcoms
and
mov
repz
scas
mov
and
sahf
mul
in
push
lea
adc
sbb
sbb
insb
push
adc
xor
dec
aad
mov
adc
pop
inc
and
in
pop
jnp
mov
divl
pop
mov
mov
out
or
mov
mov
ss
sbb
icebp
push
xchg
test
push
pop
lret
cmp
sub
sbbl
xor
mov
lods
clc
mov
sbb
push
pop
insl
ja
daa
fs
sbb
mov
cmp
sub
test
std
xchg
xchg
mov
pop
lods
or
sti
pop
or
lods
lods
aad
aaa
repz
mov
fsubrp
cwtl
xor
incb
inc
sbb
jg
data16
inc
jmp
mov
test
leave
outsl
lret
cmpsl
mov
sbb
in
rcll
dec
fldcw
stos
sbb
xchg
dec
xor
fsubrl
repnz
scas
and
fisubs
dec
lahf
in
loop
jno
or
sbb
adc
iret
cwtl
push
sub
cmp
ret
lock
mov
inc
cmp
mov
push
or
cli
fwait
push
stos
insb
in
jecxz
data16
and
test
dec
mov
jbe
jae
jmp
mov
inc
sbb
inc
int3
mov
jbe
imul
jno
lods
cmpsl
jmp
cmp
cmp
sti
lret
out
lcall
mov
push
or
imul
and
aaa
jl
sahf
inc
or
sbb
push
xor
mov
loope
ds
loopew
mov
jno
popf
out
out
js
xor
push
movsl
jne
or
daa
push
je
jle
aad
mov
jne
cwtl
ds
inc
aam
push
pop
test
ret
or
movsb
jecxz
lcall
or
hlt
or
jmp
hlt
push
mov
test
add
mov
dec
loopne
cmp
fdivr
sbb
jb
and
in
movsl
lods
push
lcall
sbb
or
and
and
arpl
dec
dec
inc
inc
adc
lret
add
loop
add
mov
cwtl
int
repnz
stos
test
push
cli
xor
add
sbb
sub
xchg
lods
mov
push
jbe
and
in
cmp
loop
add
lock
mov
negb
pusha
push
push
adc
sbbl
icebp
sti
lods
adc
das
push
xchg
mov
and
test
jmp
popa
xor
jo
lahf
pop
mov
in
inc
pop
fs
bound
adc
fsubrp
adc
xchg
ds
rolb
shufps
pop
xor
xor
sbb
pop
out
leave
or
pop
xchg
mov
inc
xor
arpl
push
push
ljmp
repz
jae
xor
xchg
lret
cmp
cmp
add
ds
std
dec
out
jecxz
cwtl
hlt
incl
add
mov
mov
fwait
add
push
roll
cld
scas
push
in
lods
cmc
jnp
xchg
bound
in
js
sbb
lea
es
mov
dec
push
fisubrl
sbb
or
or
out
inc
in
rolb
inc
int3
rclb
inc
lods
xor
and
add
dec
ja
jbe
mov
sub
mov
fstps
inc
adc
sbb
subb
push
sbb
push
cli
and
cmc
aas
lahf
mov
jg
rol
repz
je
push
jns
adc
mov
mov
xor
testb
enter
xchg
mov
ret
cli
add
push
jecxz
mov
pop
add
mov
sti
pop
jecxz
pushf
jmp
testl
dec
xor
int
jge
xchg
fcmovnb
inc
push
into
add
mov
addl
ja
xor
xchg
