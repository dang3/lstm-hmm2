lods
sub
add
nop
add
mov
add
dec
push
add
movsl
or
add
adc
add
add
add
add
add
adc
add
add
add
add
sub
add
cmp
add
pop
mov
add
jp
add
add
add
mov
add
enter
add
add
adc
add
cld
mov
add
or
add
adc
add
mov
add
and
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
inc
push
xor
cs
insb
add
inc
inc
push
push
xor
cs
insb
add
xor
xor
fs
insb
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
jb
je
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
jae
add
ja
jo
imul
add
ds
add
or
and
in
mov
mov
hlt
mov
mov
adc
bound
shl
push
xchg
cmpb
repz
lods
ja
idivl
mov
adc
push
and
push
push
daa
jg
fldcw
inc
stos
orb
mov
mov
leave
call
inc
out
mov
lret
mov
xor
aas
and
dec
jae
cmpsb
or
cwtl
jno
inc
orl
fsubs
add
test
insb
fadds
aaa
test
xlat
cmp
mov
lret
sbb
mov
inc
or
lods
data16
jmp
inc
cmp
in
xchg
xchg
and
ljmp
repnz
addl
and
sub
popa
mov
push
and
and
aaa
movsb
xchg
pop
push
inc
psubw
out
aas
mov
xchg
sar
add
jmp
stc
dec
scas
xor
orb
mov
scas
fs
aas
popa
popf
aad
sbb
stos
mov
negb
push
ds
loope
out
mov
adc
add
mov
stc
mov
pushl
xor
sub
push
or
mov
add
in
pushf
cld
fucomp
xchg
xor
js
movsl
inc
mov
jg
rcr
pop
subl
mov
add
lods
pop
inc
mov
in
aas
js
call
pushl
xorb
and
lods
fisubs
idivl
out
pushf
inc
and
push
add
mov
mov
aaa
mov
mov
bound
in
incl
loope
fwait
mov
jmp
sbb
sub
scas
mov
sti
arpl
cmp
push
outsb
jne
mov
ret
mov
stos
mov
ljmp
push
rcrl
pop
mov
inc
sbb
jecxz
jbe
insl
popa
add
pop
add
cmc
xor
adc
lahf
push
mov
xor
movsl
hlt
fidivrl
arpl
and
nop
sub
insb
push
scas
jmp
or
xchg
sbb
test
xchg
test
in
pop
loop
and
jle
push
lock
in
sbb
or
xchg
push
and
xor
je
mov
or
mov
xchg
pop
std
add
fsubrl
lds
mov
xchg
mov
mov
push
std
sarb
nop
add
into
stc
imulb
xchg
lahf
mov
mov
scas
fcompl
jne
das
repnz
mov
aaa
lods
and
jg
sbb
jb
and
and
test
push
push
inc
jmp
inc
xchg
mov
sti
xchg
nop
or
adc
addl
xchg
mov
sub
adc
mov
jg
jno
loopne
inc
repnz
jne
jb
ds
cmp
xchg
aas
lock
lcall
ljmp
aam
jge
out
ror
sbb
mov
dec
mov
pushf
jg
stos
test
lods
inc
mov
lock
aad
push
mov
ret
mov
inc
sbb
adc
pop
pop
mov
into
mov
jmp
into
lods
cmp
sbb
xor
lret
je
jl
adc
xchg
and
sbb
add
fwait
aas
addb
sarl
shll
mov
jecxz
cmp
icebp
pushf
ret
mov
enter
dec
cmpb
push
adc
sub
jg
and
push
cmp
popf
push
cmp
lds
xlat
dec
es
inc
cs
mov
mov
fbld
mov
mov
test
mov
jo
mov
test
fdivrs
xchg
sub
mov
cmp
push
sbb
or
pop
jge
fwait
movl
push
jb
test
xchg
push
xlat
cmc
or
push
push
xchg
pop
or
fdiv
into
cmc
imul
fwait
subb
test
loopne
sbb
jmp
aaa
std
pop
adcb
jb
loop
xorb
sbb
jb
subb
iret
outsb
cli
mov
movsb
xor
mov
dec
or
xchg
in
dec
mov
repnz
bound
xor
xlat
mov
and
xchg
mov
cmc
shll
decb
loope
loopne
clc
inc
sbb
xor
mov
aas
into
pop
decb
add
or
adc
js
dec
lcall
pop
cmc
mov
inc
outsl
xor
shrb
xor
mov
xor
fnstenv
jg
jp
xchg
bound
pushf
cmpl
jg
mov
mov
inc
rcr
pop
cmp
stos
aad
roll
pop
in
cmp
mov
inc
xchg
dec
or
sbb
push
test
adc
lahf
scas
iret
xor
add
je
aas
sub
jg
enter
xchg
jmp
loopne
fdivrs
mov
call
mov
outsl
adc
shrb
outsl
fcomps
lock
xor
dec
push
jnp
aam
addb
scas
pop
addr16
mov
pop
adc
inc
shlb
pushf
mov
lret
lds
push
lret
sbb
dec
and
pop
inc
aam
pop
mov
jb
popa
adc
adc
jae
cld
loop
notb
pop
mov
and
std
push
je
andl
aas
idivl
cmp
xlat
cmpsl
stos
adc
xor
sbb
cli
fldt
sbb
adc
lret
inc
sbb
loop
sub
mov
sub
and
pop
and
rcrl
lock
fsts
cmp
mov
je
enter
orb
pop
repz
sub
in
xor
cmpsb
ret
mov
stos
push
roll
fwait
and
sbb
lea
fisttpll
fldl
dec
iret
cli
stos
loopne
or
mov
adc
sbb
dec
lods
int
mov
rorl
aad
pop
sub
loop
xchg
pop
int
xchg
and
cmp
cwtl
or
dec
mov
dec
mov
js
adc
pop
popf
xchg
jecxz
sbb
faddl
push
test
test
les
jmp
nop
mov
add
loopne
jp
mov
movsl
xchg
out
dec
data16
ret
mov
push
add
cs
pop
fdivs
jmp
repz
out
in
out
mov
lahf
mov
cmc
jns
inc
out
pop
fs
mov
jnp
lods
js
sahf
add
mov
cmpsb
xchg
mulb
ja
test
jg
xchg
mov
call
aam
sbbb
jns
scas
shrb
ds
pop
mov
popa
jno
in
cmp
mov
sub
or
popa
jns
adc
in
sbb
push
mov
xorps
or
sbb
pop
loopne
mov
mov
popa
sbb
fisttpl
xor
retw
je
fisubrs
leave
jl
jg
inc
mov
dec
or
imul
inc
psubusw
test
imull
test
cmp
dec
xor
or
aad
push
pop
enter
dec
out
les
outsb
push
mov
sub
jmp
push
push
loop
or
loop
iret
add
xor
xchg
lret
nop
pop
push
add
cmp
ficoml
adc
pop
decl
pop
fldl
out
aad
and
in
or
add
sbb
loopne
dec
adc
mov
cmpsl
stos
add
pop
sahf
mov
push
jecxz
dec
jmp
adcl
push
subl
cli
xchg
dec
sbb
inc
mov
pop
loope
pop
pushf
hlt
mov
ljmp
and
xchg
push
jle
out
mov
pop
jl
sbb
and
and
push
mov
movsb
fisubrs
lods
xchg
sbbb
mov
mov
aad
xchg
lret
ficoms
adc
dec
sub
in
add
or
adc
ret
icebp
jb
pop
xor
sbb
mov
xchg
in
inc
jo
xor
cmp
ret
int
inc
cmp
ret
out
mov
sbb
flds
xchg
and
fimuls
fldt
or
roll
cmp
xchg
leave
pop
mov
adc
xchg
mov
push
rcr
out
cmp
int3
add
push
loopne
add
push
push
setae
adc
lea
inc
loop
add
sbb
fcmove
cwtl
lret
sub
pop
mov
stc
and
sub
mov
lods
dec
fcmovbe
xchg
and
xlat
outsb
lods
clc
repz
subl
in
int3
and
outsb
leave
push
stos
adc
hlt
and
xchg
jns
jns
dec
stos
mov
roll
and
in
daa
fstl
cmp
xor
push
push
sub
insb
ljmp
clc
rcl
movsl
mov
push
pop
lods
cli
jmp
ret
mov
test
pop
sbb
std
or
lret
nop
sbb
enter
mov
add
xchg
js
cltd
cmp
shl
les
xchg
cmp
fistpll
int3
inc
cmp
mov
sub
adc
aam
cs
dec
cmp
out
push
xor
loopne
pop
sbb
or
add
pusha
mov
xchg
sub
inc
daa
ss
insb
out
pop
daa
mov
scas
lret
xor
test
push
push
adc
push
add
test
sub
jp
dec
push
popf
and
pop
fimull
cmc
scas
dec
mov
cmc
in
or
icebp
xor
jecxz
ret
xchg
pop
imul
daa
inc
xchg
lds
je
out
sbb
mov
push
mov
std
loop
dec
mov
loop
cli
sbb
imul
jl
int3
adc
cmp
ret
movsb
or
mov
test
out
mov
pop
add
adc
dec
mov
add
lods
iret
lret
pop
in
pop
push
test
inc
in
pop
pop
lret
adc
pop
mov
jp
pop
and
inc
or
lods
inc
sbb
addl
ffree
sbb
xor
sub
dec
enter
sub
push
pop
add
xor
aam
out
pop
pop
adc
scas
in
js
fsubrs
repz
daa
xor
movsw
xor
sub
lods
and
lret
pop
movsb
sub
mov
push
push
jge
gs
ss
inc
adc
jbe
xchg
std
stos
into
loope
mov
inc
mov
decl
les
rclb
loopne
sub
fsubrs
nop
mov
mov
cli
lock
adc
cmp
push
adc
xchg
lods
sbb
clc
ja
mov
cmc
and
ljmp
fs
jbe
cli
jns
data16
jg
pushf
int3
shll
pushf
jnp
adc
inc
mov
call
rcrb
jp
sbb
dec
fmul
fimull
repz
xor
push
jne
xor
inc
mov
cwtl
mov
dec
mov
cld
in
enter
in
mov
dec
and
int
sarl
lock
xlat
sbb
adc
mov
arpl
add
nop
inc
xlat
ss
mov
and
sub
add
jne
jns
loope
pop
fdivl
pop
lods
fcmovnu
rcr
or
popf
stos
or
bound
out
outsb
adc
push
xorb
mov
nop
sub
push
shll
adc
mov
sub
repnz
adc
iret
jns
push
in
fsub
add
addb
in
push
xchg
mov
pusha
lahf
cs
pop
xor
jp
mov
jo
into
imul
pop
movsb
testb
ds
xchg
vandps
mov
xor
lock
pop
into
mov
pop
push
dec
and
shlb
inc
sahf
movb
jp
ficomps
and
sbb
mov
and
mov
xchg
movsb
popa
adc
loop
fsubrp
push
roll
int3
sahf
sbb
mov
out
loopne
adc
push
mov
jno
idivb
pop
sbb
fidivs
mov
andl
add
aaa
jb
jmp
inc
ret
enter
inc
outsb
xor
cmp
pop
ret
cld
in
test
stos
xchg
popa
jnp
cmp
inc
aas
add
or
xchg
adcb
popa
and
push
inc
xlat
fistpl
mov
mov
popa
pop
push
shll
jne
adc
adc
push
and
mov
mov
mov
cmpsb
test
cmpsb
push
mov
mov
lret
std
mov
pop
mov
adc
aas
adc
sbb
nop
andb
pop
dec
adc
dec
sub
mov
mov
and
into
xchg
fsts
enter
inc
pop
sub
mov
rorl
jbe
xor
xorl
sbb
fwait
xor
cmpsb
dec
dec
das
push
stc
cmp
mov
adc
lret
ret
jno
xchg
mov
aas
jl
rorb
ret
pop
add
in
shr
mov
inc
mov
rcll
dec
movsl
dec
test
bound
jo
daa
push
sub
jae
rol
sbb
sub
mov
repz
mov
add
dec
nop
je
les
js
shl
inc
je
push
js
shlb
fstl
pop
ljmp
std
imul
xchg
imul
aas
mov
cmp
out
in
dec
jnp
xor
sub
pop
xchg
inc
dec
sbb
rcrl
inc
inc
hlt
sbb
enter
and
pop
inc
jl
lahf
aas
aam
faddl
jp
sbb
rclb
add
inc
arpl
out
pusha
lret
fadds
pop
pop
jecxz
lock
add
xor
sub
mov
in
fisttpll
pusha
jbe
push
rolb
xor
and
lret
aaa
pushf
test
xchg
mov
lcall
mov
data16
pusha
cltd
inc
fldt
fwait
add
movsl
adcl
sarb
jg
inc
fld
mov
push
mov
add
sbb
add
les
add
pop
sbb
call
aas
sbb
scas
pop
in
outsl
xchg
das
and
ret
dec
fiadds
lods
add
sub
push
inc
adc
arpl
mov
jns
jnp
sbbl
cmpl
and
inc
mov
adc
pop
inc
dec
push
fwait
or
je
pop
andb
rol
je
mov
adc
popa
decb
dec
xor
mov
mov
aad
ss
sahf
subl
andb
ds
xchg
imul
xor
loope
lahf
dec
pop
fldcw
sub
out
jle
imul
jle
mov
mov
cs
rolb
cmc
sti
push
push
jnp
aad
dec
in
les
insl
mov
mov
inc
pop
arpl
movsb
sbb
push
push
das
xchg
popf
jl
je
dec
pop
jb
cmp
cmp
fldenv
fcomps
pushf
jp
push
pop
ds
subl
fwait
ror
jmp
fdivrl
mov
fwait
cmp
inc
lods
add
pop
dec
dec
pop
outsb
jg
in
cmp
push
in
movsl
into
add
dec
mov
mov
jecxz
sub
enterw
inc
clc
call
lock
cmpsb
mov
test
stc
xchg
icebp
xor
out
or
sub
addl
fcoml
jp
faddl
out
dec
insl
dec
shlb
call
inc
xor
mov
sahf
mov
and
jl
or
mov
loop
jno
gs
imul
cmp
cmp
pop
dec
imul
dec
inc
push
jecxz
and
add
jge
les
loope
or
out
pop
jg
mov
inc
or
push
lea
mov
push
xor
inc
adc
int3
xchg
roll
pop
lock
out
and
sub
mov
jge
arpl
add
jo
test
xor
add
add
jbe
mov
add
scas
dec
add
jno
jae
ljmp
stc
sub
push
cmp
hlt
inc
pop
xchg
sub
sub
ror
cmp
mov
fcmovne
ljmp
shl
add
cwtl
mov
fwait
xchg
lret
xchg
loop
adc
jg
sub
dec
fwait
xchg
mov
pop
jg
mov
es
jg
imul
mov
mov
jmp
sub
out
adc
jge
lahf
fwait
adc
sbbb
cwtl
scas
stos
in
daa
mov
lods
xchg
push
cltd
xchg
pop
or
je
xlat
popf
shl
and
inc
sub
xchg
je
mov
int
daa
mov
pushf
aam
jg
mov
lock
fcoms
jo
inc
jmp
in
push
pop
push
ds
and
icebp
lea
fwait
push
mov
jns
shl
mov
fwait
adc
sub
int3
mov
ror
addr16
icebp
daa
mov
jg
jmp
addr16
push
loop
xchg
stos
cmp
push
mov
push
mov
push
imul
sub
jl
cmpsl
mov
pop
into
test
jle
rclb
mov
pop
jecxz
ja
ret
enter
cmp
add
mov
jg
push
call
push
mov
hlt
jae
or
jmp
jle
xlat
cmp
sub
into
aas
in
fisttps
and
cld
jbe
xlat
imul
imul
ds
mov
filds
sbb
inc
mov
cmp
filds
es
std
inc
iret
sub
pusha
shl
in
aas
pop
test
sub
jle
int
sbb
mov
stos
imul
mov
inc
sti
outsl
adc
add
test
pop
fisttps
bound
test
push
ss
mov
call
add
xor
cmp
sub
jle
call
push
push
data16
out
sbb
sub
js,pn
popf
sub
mov
push
and
sub
jecxz
sub
add
repz
sub
cmp
and
into
jle
shll
mov
stos
sbb
ret
or
push
jb
pop
xor
cmp
sub
jle
lds
pop
test
pop
fisttps
and
into
jle
jmp
rolb
lahf
dec
ljmp
inc
ret
int
stos
psubsb
jle
int
sbb
mov
lahf
lods
ja
ret
int
fildll
cmpsb
cld
jbe
ss
mov
or
sbb
into
jle
hlt
sbb
dec
repnz
out
mov
imul
mov
cmp
flds
filds
xor
imul
stos
pop
xchg
push
ss
sub
push
dec
roll
pop
mov
mov
add
xor
cmp
cmpsb
cld
jbe
xlat
and
ret
int
pop
test
lea
sbb
mov
ljmp
enter
call
jmp
fiadds
les
ss
xchg
hlt
fnsave
pop
mov
xor
test
jle
jmp
jle
xlat
jge
ret
sti
notb
enter
cld
add
dec
ds
mov
push
dec
sarl
pop
mov
stos
imul
call
lea
int3
sub
mov
sub
sarl
inc
leave
jb
sub
cmp
xor
cld
push
or
mov
out
popf
push
call
popf
jge
pop
mov
in
pop
push
jl
xchg
sub
cmp
mov
jne
or
or
icebp
gs
push
je
pop
mov
fnsave
sbb
ss
mov
fnstsw
sub
incb
int
lock
pop
dec
enter
shrl
stos
push
call
into
jle
repz
faddl
mov
sub
inc
shrb
jbe
hlt
sarl
pop
mov
frstor
fisttpl
push
ret
dec
mov
dec
or
inc
into
call
sbb
jle
xor
icebp
adc
pop
jno
aas
xlat
jg
jmp
jnp
imul
frstor
fisttpl
fisttpl
inc
add
cmpsl
cmp
out
incb
dec
sub
test
add
sub
sbb
inc
add
push
arpl
shrb
push
dec
mov
jb
test
dec
push
inc
enter
mov
test
push
dec
push
jne
lods
cmc
xor
sub
mov
push
mov
or
push
ret
or
out
outsb
cmp
aas
test
hlt
mov
out
movsl
fildl
iret
stos
mov
jle
add
pop
les
shrl
imul
sbb
in
incl
ret
xlat
ds
mov
int
sbb
mov
filds
sub
jge
int
sbb
mov
fisttpl
in
in
aas
xor
fisttps
arpl
sub
mov
pop
int3
gs
adc
mov
test
jge
int
sbb
inc
shrl
pop
out
sub
dec
cld
jbe
int
test
repz
test
adc
inc
ret
or
ds
mov
stos
lahf
in
popa
xor
out
popf
push
call
mov
inc
enter
or
arpl
jne
test
lret
sbb
mov
ds
mov
aas
movsb
call
mov
test
call
mov
inc
fs
cmp
mov
frstor
mov
lahf
cwtl
cld
ljmp
adc
jp
fs
cmp
and
add
or
cs
mov
cmc
popf
and
scas
pop
jecxz
cmp
mov
fs
lahf
xor
mov
xor
jmp
pop
or
pop
test
es
xlat
and
stos
enter
call
ss
mov
decl
ret
idivb
in
aas
pop
test
xor
push
mov
int
repnz
jns
mov
mov
testb
imul
gs
call
into
movsl
dec
repz
sub
ret
dec
ds
mov
stos
rcll
pop
sti
orl
jge
les
add
ret
xlat
ds
jecxz
mov
cmp
sub
jle
int
jmp
ret
repz
pusha
add
test
incl
mov
int
aas
in
fisttps
and
cli
jbe
xlat
jle
or
std
mov
jecxz
mov
test
out
in
pop
mov
addr16
mov
jne
or
into
inc
ss
lahf
outsl
jle
mov
xchg
push
sti
jmp
or
js
mov
jmp
test
jmp
adc
xchg
call
ret
ljmp
sti
je
je
jl
sti
xchg
adc
jecxz
jl
sti
jl
sti
lods
inc
in
lahf
ja
jle
xlat
lods
pushl
jecxz
movsb
jbe
fldt
cmp
call
jl
sti
je
fstpt
test
sbb
mov
out
jmp
add
ret
fstpt
test
int3
jecxz
jl
notl
jl
sti
je
fstpt
lods
movsb
jl
sti
scas
int3
jecxz
cmpsl
jl
sti
je
fildl
test
ret
fstpt
test
jl
sti
je
fstpt
test
jl
sti
test
and
mov
mov
adc
je
fildl
test
lock
jle
add
sbb
cmp
iret
in
jle
mov
mov
add
lods
jbe
stc
jl
sti
je
jl
imull
sub
xor
add
jl
sti
je
fildl
jle
rcrl
sti
jle
rcrl
fldt
mov
sti
jl
imull
mov
lret
fstpt
pop
jl
sti
je
fstpt
lods
scas
movsb
jle
xchg
leave
incl
adc
scas
jle
fistl
jbe
fstpt
or
cmp
mov
add
jbe
fldt
dec
into
je
jecxz
jl
sti
outsl
lods
jbe
fldt
mov
jle
lods
lret
scas
jbe
sti
je
fildl
lods
test
add
jle
lock
cmp
cld
sti
fldt
pop
jl
sti
je
fstpt
fs
les
lods
xchg
hlt
ds
jmp
ljmp
cmpsl
std
ljmp
movsb
movsb
test
lods
scas
cmpsl
test
and
cmp
jle
std
in
inc
jl
sti
jle
std
in
inc
pushl
leave
jl
sti
jle
in
lcall
in
lcall
or
stc
mov
test
mov
outsl
sti
je
mov
lret
fstpt
lods
jbe
sarb
or
cmp
test
movsb
pushf
jle
mov
test
mov
adc
sub
inc
jl
sti
jle
jl
sti
je
jl
imull
jbe
fldt
fstpt
pop
jl
sti
je
fstpt
jle
push
sbb
out
fistpll
out
mov
lahf
aad
je
je
jl
sti
scas
test
sub
je
fstpt
sti
fstpt
je
fildl
test
jl
sti
jbe
fldt
cld
ret
fstpt
je
jl
idivl
je
jl
imull
mov
sub
jle
fstpt
jbe
fildl
enter
repz
jo
jl
sti
jl
sti
je
fildl
test
jbe
fstpt
sub
int
cmp
sbb
jl
sti
jl
sti
add
test
sti
jl
idivl
je
fildl
ds
jbe
je
fstpt
scas
test
test
jl
sti
lods
scas
movsb
jle
loope
je
movsb
xchg
jbe
mov
cmp
je
fildl
lods
inc
mov
cmp
test
sub
cmp
scas
jle
mov
jmp
jle
js
dec
and
sti
jl
sti
jl
sti
je
jl
idivl
int3
jmp
int3
jmp
fildl
jl
sti
jle
lret
mov
jle
lret
mov
fstpt
jle
in
out
fstl
je
je
jl
sti
test
lret
fstpt
fstpt
out
jl
idivl
je
fildl
add
into
enter
jl
idivl
je
fildl
push
outsb
add
add
je
fstpt
stos
jle
pushl
jl
sti
test
jl
sti
test
jle
inc
pop
sub
je
mov
mov
lahf
pop
sarl
mov
ret
fstpt
jl
sti
je
fildl
test
test
add
add
je
fildl
test
ret
fstpt
jl
sti
je
jl
divl
jl
idivl
je
fildl
test
stos
xchg
mov
jb
jle
hlt
stos
xchg
js
movsl
jbe
pop
decl
je
je
jl
sti
lods
movsb
jl
sti
jb
test
stos
xlat
push
repz
push
pusha
mov
aam
mov
cmp
movsb
jle
insl
andl
adc
cmpsl
fwait
jbe
fldt
pushl
push
aam
fstpt
lret
fstpt
mov
cmp
jbe
fldt
fnstsw
cmp
or
lods
jle
fstpt
add
jle
cmp
pushf
aam
fildl
cmp
jnp
or
cmp
sahf
test
sti
fistl
jl
idivl
je
fildl
sti
fstpt
je
fildl
jl
sti
jle
and
and
fildl
jl
sti
je
xchg
stc
iret
inc
sti
cmpsl
scas
jle
fldt
sti
fstpt
je
jl
divl
fstpt
call
add
mov
sub
not
push
mov
add
push
mov
add
sub
pop
add
add
sub
mov
sub
push
push
pop
subl
mov
mov
add
mov
ror
rol
sub
add
mov
sub
push
xorl
pop
sub
add
mov
mov
add
pusha
push
pop
sub
mov
add
sub
sub
mov
sub
add
mov
sub
call
add
mov
add
push
push
add
mov
xor
add
add
sub
mov
sub
add
mov
sub
push
push
sub
pop
mov
add
cmp
add
sub
sub
mov
push
mov
mov
add
push
adc
inc
pop
inc
xchg
mov
mov
add
add
mov
push
mov
sub
add
push
mov
add
pop
push
mov
sub
add
pop
call
add
mov
add
call
mov
add
sub
add
mov
sub
push
mov
movl
pop
push
mov
sub
add
pop
push
push
sub
add
sub
pop
pop
push
mov
pop
push
push
add
mov
and
push
pop
push
push
pop
sub
pop
push
add
xor
pop
add
sub
mov
push
push
add
push
push
add
pop
inc
dec
push
mov
xor
add
push
lea
sub
xchg
pop
not
not
add
call
add
mov
add
fnop
cmp
cmc
cmc
jne
push
str
pop
jmp
cmc
cmc
push
pop
sub
sub
add
mov
sub
add
sub
add
mov
sub
push
push
add
pop
add
mov
add
push
push
sub
pop
addl
sub
mov
add
sub
add
mov
sub
push
sub
pop
xor
sub
mov
add
add
sub
mov
push
push
add
mov
push
push
add
add
subl
call
add
mov
add
add
sub
sub
mov
push
push
pop
call
add
mov
add
push
push
xor
pop
push
push
add
add
mov
call
add
mov
add
sub
add
mov
sub
lea
push
push
pop
add
pop
xchg
add
sub
mov
push
mov
push
mov
xor
add
add
mov
mov
add
push
push
add
mov
push
push
add
mov
add
sub
mov
mov
push
mov
xor
add
push
push
xor
add
sub
add
not
mov
call
add
mov
add
pushl
push
push
add
mov
sub
add
mov
sub
mov
add
mov
push
mov
add
xor
pop
mov
sub
mov
add
popl
push
mov
pushl
push
pushl
rorl
add
pop
add
mov
mov
add
push
mov
add
add
pop
sub
push
push
pop
sub
mov
pop
mov
pushl
mov
mov
add
rol
mov
add
mov
pushl
push
mov
push
push
sub
pop
push
add
pop
mov
push
push
pop
xor
pop
mov
call
add
mov
add
popl
push
push
add
mov
push
push
pop
add
sub
mov
mov
push
subl
pop
mov
push
add
pop
jmp
push
push
pop
pop
sub
mov
add
push
mov
add
push
push
sub
pop
add
add
add
mov
add
sub
mov
push
push
xor
pop
lea
push
addl
pop
xchg
mov
mov
add
push
mov
push
add
add
mov
push
add
pop
push
push
add
push
push
add
pop
add
mov
push
push
sub
xor
pop
pop
call
push
push
pop
pop
push
pop
sub
add
push
add
pop
push
push
add
push
mov
mov
add
sub
mov
mov
add
movb
sub
sub
mov
add
mov
mov
add
popa
push
mov
push
mov
add
mov
ret
add
push
push
add
mov
push
push
pop
xor
mov
pop
push
add
pop
pusha
pusha
push
add
add
popa
call
mov
add
push
mov
sub
add
pop
sub
push
sub
add
mov
push
mov
add
sub
pop
push
mov
add
add
pop
mov
sub
add
push
push
sub
pop
push
mov
ror
rol
sub
sub
pop
pop
push
push
add
pop
push
push
mov
pop
sub
mov
add
push
push
add
add
sub
sub
mov
push
movl
pop
mov
push
add
pop
push
add
pop
mov
mov
mov
add
add
mov
nop
push
push
add
push
pop
sub
push
xor
add
pop
sub
pop
pop
add
sub
sub
mov
movl
sub
mov
add
push
push
add
pop
add
push
pop
push
mov
add
sub
pop
sub
add
mov
push
mov
push
push
add
mov
call
add
mov
add
sub
pop
pop
add
mov
push
mov
add
add
pop
sub
push
subl
pop
mov
and
add
sub
push
add
pop
sub
pop
pop
add
mov
push
push
pop
mov
push
push
pop
sub
mov
pop
push
lea
add
xchg
pop
mov
sub
push
pop
sub
add
sub
mov
add
sub
mov
add
sub
add
mov
sub
add
mov
sub
push
push
add
push
push
pop
add
add
mov
push
push
add
mov
push
push
add
mov
mov
add
inc
dec
not
push
push
sub
pop
add
mov
mov
add
push
mov
add
nop
push
mov
sub
add
pop
sub
push
subl
pop
mov
mov
movl
sub
add
sub
mov
add
sub
mov
push
mov
sub
add
pop
sub
push
push
pop
sub
pop
mov
mov
add
add
add
mov
add
sub
sub
mov
mov
mov
add
sub
push
push
pop
add
pop
sub
push
lea
sub
xchg
pop
mov
ror
rol
push
mov
pop
xor
mov
mov
add
push
push
pop
sub
add
mov
sub
push
sub
add
pop
add
mov
push
push
pop
mov
add
mov
and
push
mov
add
nop
sub
sub
sub
push
add
add
mov
sub
push
adc
inc
pop
inc
sub
add
dec
push
mov
not
push
mov
add
push
xor
add
add
push
push
add
mov
push
mov
sub
mov
pop
push
addl
pop
push
sub
add
pop
sub
pop
pop
push
pop
sub
mov
mov
add
mov
add
push
lea
sub
xchg
pop
push
mov
sub
add
pop
mov
sub
push
push
add
mov
add
add
sub
mov
add
sub
mov
add
push
ror
pop
cmp
pusha
popa
jne
not
not
jmp
pusha
popa
push
add
add
push
sub
add
push
push
add
push
mov
add
add
sub
pop
pop
pushl
pushl
add
roll
popl
jmp
push
not
pop
mov
add
mov
push
lea
add
xchg
pop
push
push
add
mov
addl
mov
add
push
push
pop
sub
sub
sub
push
pop
sub
popl
mov
mov
add
push
push
pop
mov
push
ror
pop
call
pusha
add
nop
mov
popa
push
push
add
add
sub
pop
pop
push
push
add
lea
push
push
pop
sub
mov
pop
xchg
sub
mov
add
movb
add
sub
sub
mov
add
add
mov
popa
push
lea
add
xchg
pop
sub
push
lea
sub
xchg
pop
mov
ret
ljmp
jns
push
rdtsc
dec
inc
mov
cltd
cmp
xlat
pop
jne
push
cld
mov
pusha
mov
adc
jl
orb
jge
push
jge
stos
dec
out
rcl
aad
mov
push
stos
das
jge
fsubrl
sub
stc
pusha
push
xchg
push
loope
stos
int3
pop
xchg
repz
push
fiadds
inc
je
and
xor
pop
mov
test
stc
adc
ror
and
out
adc
add
test
inc
jge
jg
popa
and
scas
mov
xor
sbb
cmpsb
filds
lret
or
mov
dec
jp
lret
mov
ret
adc
jg
mov
cmp
adc
inc
jge
pmulhuw
xchg
int3
and
jmp
dec
push
mov
adc
scas
xor
daa
push
daa
cmp
loopne
int
sub
push
jge
xchg
add
push
mov
xor
psraw
ret
xor
adc
sbb
aam
sbb
ror
jle
movl
xor
push
pusha
and
adc
jl
push
addb
iret
push
add
rcr
loopne
jbe
add
inc
mov
sbb
in
sub
mov
cmp
fwait
dec
jnp
sahf
sub
push
cmp
bound
xchg
lahf
xor
decl
jnp
test
imul
in
mov
in
cmp
mov
sbb
sahf
call
ss
sti
mov
fisttpl
das
lock
mov
fcoml
lods
jg
mov
je
cmp
pop
push
jae
xor
sub
inc
aad
fisttpl
pop
push
fidivl
imul
icebp
pop
xor
jle
hlt
fistps
pop
std
push
jnp
icebp
movsl
sbb
mov
mov
sahf
and
arpl
cmpsb
pop
sub
movsl
int3
je
sbb
jbe
push
cli
imul
xchg
xchg
loopne
dec
lret
sarl
out
cld
clc
stos
ja
test
aas
cs
add
cmpsb
dec
mov
bound
inc
mov
idivb
mov
add
adc
cmp
lahf
call
fucomp
sub
mov
js
sub
out
pusha
push
mov
mov
mov
cmp
sbb
push
std
pop
cmp
mov
popf
fdivrs
test
sub
adc
iret
push
add
loope
ret
sbb
inc
bound
add
pop
push
mov
jo
icebp
push
adc
sub
insl
inc
push
mov
cmp
movsl
andl
int3
jmp
dec
jo
xchg
cwtl
test
sub
mov
outsb
in
cmpsb
jge
mov
loopne
jge
dec
push
mov
push
jo
or
push
aam
rcr
movsb
and
es
jno
mov
add
cmp
dec
add
fs
mov
shll
fstp
xchg
out
shrl
push
dec
mov
and
movsl
in
jg
inc
pop
rcl
push
dec
dec
fdiv
jbe
inc
ja
adc
push
jp
sub
jb
lret
xlat
test
lcall
ret
sbb
sub
xor
xor
sbb
dec
out
pushf
fcoml
out
jne
and
sbb
push
mov
aam
mov
flds
std
mov
andl
das
pop
push
mov
lea
dec
lea
mov
cmc
inc
sub
inc
jmp
mov
movsl
or
and
repnz
rcll
mov
lret
or
mov
dec
lret
adc
inc
adc
xchg
mov
inc
adc
or
or
gs
mov
or
cwtl
jno
mov
push
aaa
dec
icebp
loopne
aam
push
inc
imul
inc
out
xor
outsl
or
sub
test
mov
fcoml
or
sub
mov
dec
pop
loope
push
jae
enter
shlb
rcrb
mov
sub
aam
or
jno
pop
lods
ljmp
movsl
pop
sub
xchg
test
or
lea
adcl
enter
stc
and
fnstcw
mov
sti
or
das
fldt
lods
test
daa
jp
sub
cltd
movsl
sub
repnz
lret
sub
cmc
push
shlb
xchg
or
add
cli
adc
mov
je
aad
push
in
js
aas
jno
mov
int3
dec
xchg
push
dec
loope
popf
addr16
aam
sub
subl
add
or
loope
popa
andb
inc
mov
sbb
sub
push
pop
mov
sub
loop
cmp
push
xor
aad
repnz
stos
add
mov
bound
arpl
fcoms
and
test
test
lret
cmpsl
test
aam
dec
hlt
push
xorl
aaa
fbstp
pusha
fwait
hlt
pop
or
rcl
lods
out
or
loope
adc
inc
add
add
xor
inc
int3
cmp
mov
xchg
xor
std
pusha
mov
and
cmp
data16
mov
fisubrs
stc
stos
in
adc
sub
repnz
jg
mov
sti
stos
adc
sbb
xchg
jl
repz
rcrl
into
cmp
or
jmp
ja
clc
fisubs
xor
adc
pop
push
clc
loop
call
mov
pop
mov
outsl
fcmovbe
push
data16
and
inc
incl
rcrb
test
jle
stos
xchg
shll
jno
out
ja
es
call
adc
add
adc
add
xchg
lahf
inc
iret
inc
das
cld
fisttpl
fwait
mov
push
cmp
sub
out
push
or
mov
push
adc
test
sahf
fs
xchg
pop
roll
jge
jae
lods
mov
fldenv
jg
cs
dec
mov
push
inc
jne
imul
mov
lods
mov
cmp
xor
jae
jbe
mov
push
or
lods
aas
aad
xlat
nop
add
dec
and
cmp
lret
add
sub
push
xchg
inc
in
test
xchg
jb
test
add
es
aad
pop
add
popf
inc
sbb
jmp
xor
ret
jecxz
in
cmp
daa
xchg
repz
cs
and
mov
rsm
in
jno
jle
cli
dec
inc
loopne
stos
ror
je
or
fldcw
xchg
or
cmp
xorl
inc
les
popa
mov
inc
inc
inc
sbbl
scas
or
fldt
push
mov
and
fs
and
inc
and
fnstsw
fistl
icebp
subb
inc
jne
and
push
cli
fs
out
imul
in
daa
xlat
movsl
rcrb
cld
iretw
push
pop
das
nop
int3
xor
jnp
jl
loopne
xor
or
mov
fcoms
dec
push
sbb
or
jnp
mov
inc
mov
iret
dec
jno
rcll
cmpl
push
test
push
stos
faddl
sbb
sti
aaa
xor
je
fisttpl
mov
ljmp
outsl
rclb
shrb
mov
in
mov
ljmp
jmp
dec
mov
cmc
sbb
movsw
xor
sbb
addr16
call
fucomp
jmp
adc
int3
cli
inc
dec
mov
lahf
xor
mov
movsb
lods
mov
sbb
adc
mov
jbe
mov
cli
sbb
lods
fs
push
imul
pop
adc
fadd
mov
sar
dec
es
js
lock
bswap
dec
fildl
cmp
xor
shrb
mov
push
in
pop
dec
push
pop
jb
adc
jae
jmp
fwait
inc
clc
mov
test
imul
xchg
and
pushf
enter
icebp
lock
push
orl
inc
mov
push
enter
outsb
or
mov
push
cmp
ret
ret
dec
mov
or
cs
out
gs
jns
shl
cmp
pop
mov
xlat
in
sbb
pop
cmp
cmp
inc
mov
sub
xchg
popf
fsub
cmp
push
adc
icebp
std
cmpsl
sbb
int
outsb
pushf
imul
xor
mov
ret
or
pop
pop
nop
data16
outsb
add
insl
xchg
push
jmp
aas
fiadds
sbb
inc
add
mov
xchg
scas
pop
fld
ljmp
mov
in
cld
aad
sbb
imul
xor
subl
mov
std
xor
les
dec
or
fnstenv
fcmovbe
dec
pushf
xchg
jno
rorl
ret
xor
mov
jo
fisubrs
test
add
push
cmp
outsb
insl
fstp
fcmovu
or
pop
jno
daa
mov
jge
and
add
push
iret
jp
negl
pop
adc
fnstcw
aas
mov
lods
pop
insb
push
jmp
data16
jge
pusha
arpl
push
cmp
repnz
sbb
testl
push
stos
jo
xchg
push
add
roll
movsb
cs
fcompl
icebp
incl
pop
sarb
cmc
shll
aaa
mov
cmpsl
dec
xor
iret
jmp
sbb
into
sbb
in
in
jecxz
jge
jnp
call
and
movsl
sub
jp
pop
iret
movsl
inc
push
mov
insb
lea
repz
aam
notl
push
loopne
shll
mov
data16
fdivl
pop
imul
std
jp
adc
pop
inc
enter
hlt
lret
ficomps
cmp
outsb
fwait
ds
push
push
push
ss
std
out
xchg
fucomi
inc
stos
js
je
or
scas
ficomps
clc
sbb
in
lds
lea
mov
jge
outsb
sarb
lahf
jl
mov
mov
jmp
fldl
pop
sbb
and
mov
pop
lds
push
add
enterw
clc
xlat
ret
das
call
mov
cmp
xor
cwtl
fdivrl
push
xor
mov
lret
sbb
rclb
lcall
push
sub
inc
inc
jb
jle
mov
mov
adc
imul
inc
xor
aaa
dec
addr16
jecxz
cmp
jle
sub
xchg
add
adc
inc
jns
test
cmp
lret
adc
inc
and
sbb
and
test
bnd
subb
inc
fwait
push
cmova
push
add
sbb
pusha
cmp
pop
adc
push
xchg
decl
xchg
in
rclb
out
mov
jl
sbb
mov
shlb
jns
mov
test
in
mov
stos
xor
cmp
xorb
mov
xor
sbb
sysenter
adc
fwait
daa
adc
test
add
lret
in
or
icebp
sbb
enter
and
testb
push
test
aam
hlt
mov
clc
lods
adc
add
push
mov
sub
dec
imul
or
outsl
xor
xor
xor
shrl
nop
leave
lret
add
adc
or
jnp
sysexit
mov
pop
insb
jns
jno
fadds
scas
xor
icebp
pop
daa
sti
mov
mov
pop
add
int3
rcll
imul
insb
les
std
insb
imul
push
jno
lods
int
xchg
orb
ror
lcall
repz
mov
test
fildll
outsb
cmp
cmp
mov
in
in
mov
jecxz
cltd
mov
lds
push
popf
dec
add
stc
sub
sub
fldt
add
sbb
popf
test
xlat
pop
or
lahf
popf
or
mov
jmp
cmp
and
outsl
in
call
or
fmuls
cmp
sbb
mov
cmp
fmul
mov
push
cs
push
aas
push
es
mov
adc
jge
lea
in
insl
xchg
mov
jmp
or
shl
mov
mov
in
push
stos
loop
adc
adcb
int3
pop
pop
out
mov
mov
inc
jmp
out
mov
dec
push
clc
pop
mov
repz
xchg
and
loop
mov
cmp
std
mov
push
cwtl
in
xor
das
add
jmp
test
mov
mov
aad
pop
inc
adc
xor
icebp
inc
push
inc
loopne
pushf
scas
xor
jge
scas
mov
or
inc
arpl
lock
test
or
int
push
sbb
jo
sub
push
add
gs
cltd
mov
ret
fimuls
jmp
add
fcompl
pop
in
testl
push
movsb
inc
fstpl
fcompl
push
inc
clc
cmp
or
xchg
push
dec
nop
outsl
int
mov
fstp
mov
and
outsb
in
dec
or
mov
movsb
xchg
mov
cmc
mov
addr16
add
test
leave
jmp
mov
movsb
push
jl
inc
lea
dec
stos
shl
out
sti
fs
out
push
fiaddl
int
shrd
or
ret
jge
jge
push
mov
hlt
icebp
and
jg
add
mov
adc
add
xchg
data16
int3
mov
jne
cmpsl
cmp
mov
icebp
arpl
fwait
mov
add
pop
cltd
mov
or
dec
movsl
sbb
fadds
les
ja
cltd
xchg
pop
mov
inc
scas
push
insl
outsb
leave
dec
jle
gs
je
dec
and
ss
pop
xchg
and
dec
inc
rcrl
xor
movsl
adc
pop
shl
pop
inc
or
outsl
dec
scas
int3
inc
xchg
or
push
daa
and
orb
and
in
mov
pop
fs
add
rorl
jmp
pop
je
leave
pop
jns
popa
push
xor
cmp
int
xor
gs
or
loop
dec
inc
fistpl
hlt
push
addr16
dec
scas
cli
dec
lcall
add
fucom
les
int3
sub
jmp
test
jns
popa
xchg
xor
repz
lods
adcl
lock
invd
das
cmp
cwtl
cmp
pop
lret
inc
test
xlat
mov
cmp
lret
or
cmp
loop
aam
pop
push
outsb
xchg
pop
or
movsb
and
adc
es
mov
daa
and
or
fs
cmp
sub
imul
out
inc
dec
outsb
lcall
aad
into
ret
scas
lock
and
dec
xor
repz
or
test
xchg
arpl
std
ljmp
xchg
or
cs
out
pop
cmpxchg
xchg
adc
cwtl
and
shl
and
inc
cmpsb
rorl
int3
shll
dec
mov
xchg
mov
jecxz
sti
jl
push
mov
mov
pushf
aad
mov
jno
mov
inc
dec
inc
mov
sbb
and
lea
adc
lods
jne
movq
in
inc
and
subb
mov
rcrl
ds
dec
adcl
clc
stos
fsubrl
and
sbb
mov
cmp
das
sbb
scas
push
insb
mov
jbe
mov
fstl
scas
ljmp
pushf
aad
mov
jne
pop
dec
adc
mov
mov
dec
insb
insl
push
pop
rolb
fs
xor
imul
inc
dec
movsl
ds
sub
mov
movsb
lcall
mov
mov
rcr
pop
fcompl
shll
pop
lret
cmovbe
icebp
mov
in
sub
dec
cli
subl
je
addr16
inc
outsl
lret
or
mov
fmuls
test
imul
inc
xor
xchg
imul
xchg
movb
xchg
xchg
adc
mov
dec
cld
mov
xchg
in
arpl
and
and
lods
add
pop
bound
outsl
iret
jne
pop
imul
movsb
imul
mov
mov
adc
and
ret
fsubrp
test
clc
in
adcb
lods
mov
jo
cmp
mov
ljmp
mov
mov
adc
xchg
mov
mov
mov
push
add
jbe
roll
jl
inc
loope
iret
repnz
jb
rcrl
mov
scas
mov
mov
dec
sar
dec
mov
mov
jo
or
inc
test
mov
sbb
push
leave
and
lea
loop
js
inc
shrb
xchg
mov
xor
push
pop
aad
dec
andb
sub
testl
test
icebp
adc
lahf
mov
jge
xor
xor
jnp
xor
mov
sbb
inc
aaa
lock
ljmp
cltd
sar
js
and
mov
mov
divb
leave
js
movsb
cld
lds
or
push
mov
scas
insb
fldcw
mov
xchg
ret
xchg
and
shr
aas
jne
pop
das
xor
out
iret
xchg
fsub
and
adc
adc
bound
mov
or
repz
lods
pop
inc
push
xchg
popa
sahf
jg
push
les
mov
pop
cli
decl
mov
inc
sub
loop
mov
lods
and
and
lcall
ffreep
pop
inc
insl
and
inc
popf
leave
add
xor
push
pusha
nop
cmpl
xor
push
sbb
sbb
aam
xor
xor
shlb
push
lcall
loop
jno
sub
shl
fnstsw
pop
mov
add
testb
cld
push
inc
fcmovnb
lods
mov
mull
and
pop
cmpl
pop
jb
add
xor
mov
jl
add
sub
pop
pushl
ja
icebp
pinsrw
fidivrl
dec
int3
movsl
jmp
sub
stc
mov
dec
rcrb
and
lods
les
push
shlb
and
imul
fistps
lret
mov
inc
ja
fcomps
repnz
rsqrtps
stos
or
mov
push
jge
mov
fwait
dec
aas
out
push
imul
inc
adc
jg
out
pushf
jns
sub
and
movsb
leave
scas
icebp
sahf
stos
cwtl
pop
and
stos
and
cwtl
cld
inc
xor
add
xchg
ds
ja
test
dec
dec
push
dec
fs
mov
mov
aad
fcoms
xor
inc
add
and
xchg
cmp
mov
xchg
adc
mov
lds
lcall
pop
repz
lret
add
jge
sahf
aad
mov
loop
int3
dec
repnz
testb
fstpl
sti
mov
mov
fwait
stos
int3
inc
xchg
xchg
xchg
nop
cmc
mov
shl
fwait
stc
ljmp
shl
pop
and
jne
movsl
mull
cmpsl
in
adc
fcompl
mov
or
cmp
mov
push
add
mov
sbb
loopne
xor
cli
or
js
ss
dec
jne
andl
idivl
cld
gs
data16
testl
pop
pop
sub
inc
aaa
push
mov
stos
pop
repnz
data16
cli
mov
js
sub
add
add
lahf
aaa
dec
es
call
test
inc
add
loopne
sbb
in
aam
push
ss
cmpsb
jecxz
jns
and
lret
add
mov
adc
pop
sbb
ja
imul
pop
mov
jnp
into
cld
mov
sarb
jp
inc
mov
or
js
push
inc
movsb
or
push
push
nop
pop
gs
loope
mov
cmpsb
outsb
or
lods
push
adc
sub
es
lea
insl
aam
cmc
ficompl
repnz
sbb
cmc
pop
lock
push
hlt
cmp
insl
lods
sar
cld
sub
jl
adc
aaa
inc
insl
or
adc
ljmp
rcrl
add
mov
and
and
jae
mov
cli
fsubl
mov
pop
lahf
jecxz
ja
loop
push
dec
pop
add
xor
xchg
xchg
pop
mov
das
ljmp
mov
std
add
push
popa
cmp
icebp
add
xor
andb
data16
mov
mov
clc
adc
imul
stos
jle
jae
insl
dec
mov
outsl
cwtl
xchg
pop
mov
setge
in
lcall
mov
cmc
cmpsb
aas
xchg
mov
push
shr
out
mov
mov
rolb
outsl
dec
and
outsb
inc
in
incb
adc
mov
mov
imul
xchg
js
decb
cmp
or
fsubr
jge
inc
mov
sbb
out
sahf
out
or
stos
insl
call
jle
cmpsl
xchg
push
movsb
add
inc
lahf
xchg
sub
inc
jns
xchg
ja
loopne
dec
je
inc
iret
in
and
mov
xor
inc
add
sub
mov
stc
push
popf
idivb
mov
or
cwtl
dec
cmpsl
and
cmpsb
repnz
ljmp
fucom
jp
stc
imul
stc
adc
sahf
in
xor
xchg
orl
jne
addr16
out
mov
jbe
fs
daa
and
add
es
jg
sbb
scas
pop
pop
lcall
sub
cmp
in
push
mov
imul
shlb
inc
test
aas
dec
push
dec
sbb
jb
in
jae
stc
mov
jne
add
repnz
pop
jne
push
in
aas
sub
push
sti
mov
cmp
xchg
mov
addr16
test
xor
roll
sub
ds
cli
imul
add
or
loope
fimull
push
fcoms
mov
mov
jg
lock
jns
pop
aam
lret
inc
sbb
leave
sbb
mov
jb
mov
ja
mov
sub
pop
stc
dec
adc
cmp
mov
xor
test
xlat
cmp
push
stos
add
hlt
dec
xorl
cmp
subb
pop
pop
sub
cmp
xchg
and
jmp
xor
mov
mov
jnp
aad
xchg
mov
push
shll
imul
adc
sarb
xor
jne
scas
xchg
mov
out
js
fbld
push
lea
dec
fcom
ja
mov
fstl
or
aaa
cld
dec
gs
sbbb
mov
and
ds
shrb
pop
and
or
into
cmp
sbb
pop
push
lahf
mov
pop
imul
cmpsl
dec
bound
cwtl
jae
pcmpgtw
insl
lock
mov
cs
adc
sahf
add
jae
sbb
or
inc
cmpsb
dec
jge
mov
je
sti
sub
mov
push
ljmp
push
pop
clc
mov
xchg
push
movsb
and
in
dec
cmp
pushf
mov
xchg
sbb
mov
push
imul
xor
fs
push
scas
or
and
mov
repnz
jp
cli
into
xorb
dec
dec
mov
sub
ret
fmull
sbb
in
inc
rclb
adc
sub
xchg
push
fcmovnb
lret
push
les
je
xchg
stc
mov
leave
mov
jne
mov
int3
inc
fisubrl
mov
sbb
adc
push
stos
mov
pop
imul
inc
or
inc
insb
push
out
hlt
call
pop
test
das
fisttps
xchg
mov
mov
mov
inc
mov
dec
lret
psubusw
add
arpl
aaa
pop
insb
cmp
aam
inc
push
pop
dec
fwait
mov
push
aad
and
push
jb
dec
and
adc
xchg
iret
cli
inc
jae
xchg
mov
test
inc
hlt
lahf
adc
fstps
and
cmp
les
push
jmp
push
lret
shll
adc
push
xchg
arpl
shrb
dec
out
mov
push
mov
rorl
fnstenv
jmp
xchg
jbe
inc
scas
inc
ljmp
mov
aaa
stos
clc
mov
xor
jb
notl
sbb
in
xor
sub
out
shll
lds
repz
stc
aas
inc
repnz
imul
xor
mov
int
sub
inc
or
data16
inc
jb
push
sub
mov
lock
jae
inc
dec
std
inc
sti
test
and
into
xor
dec
fwait
jmp
ljmp
popf
push
mov
pop
cmpsb
dec
clc
call
and
mov
add
insl
or
or
dec
loopne
or
adc
lcall
les
jp
std
aam
mov
das
push
sub
cmp
in
adc
shll
xchg
mov
rolb
in
jae
sbb
icebp
push
add
stos
xchg
inc
loope
das
mov
adc
sub
insb
or
scas
xchg
sbb
gs
gs
or
xchg
and
sti
std
sbb
or
mov
xor
movsl
mov
mov
es
int
dec
mov
jae
std
test
push
mov
test
mov
cwtl
push
jbe
lock
in
jp
lcall
pop
push
imulb
lds
pop
adc
rorb
iret
movsb
iret
jo
cmp
and
inc
mov
stc
push
add
sbb
xchg
lock
fwait
ret
rep
inc
inc
inc
imul
push
sub
lret
fwait
push
loope
pop
lods
adc
arpl
rcrl
cmc
cmpsb
jg
sahf
std
pushf
movsl
lods
jb
sbb
mov
dec
cmp
or
xor
loopne
adc
enter
add
xchg
xchg
imul
sbb
aad
push
pop
clc
addl
push
int3
inc
jmp
or
sub
ds
and
and
inc
jle
add
pop
aaa
imul
cmpsl
cltd
lret
mov
inc
call
fisubrs
iret
jg
jg
dec
sbb
scas
scas
xchg
jbe
sti
rcr
mov
mov
push
negl
mov
in
xor
pop
mov
pop
je
pop
mov
gs
imul
xorb
pushf
sub
add
repnz
mov
mov
jnp
inc
mov
out
popa
bound
lea
js
outsb
mov
aad
push
nop
rcpps
idivb
shlb
cmpsb
add
xor
lret
icebp
jbe
bound
jmp
insl
mov
xor
dec
inc
push
jg
xor
jl
inc
cs
mov
pop
push
pop
sub
inc
cld
dec
xchg
mov
mov
repnz
test
adc
out
cmp
rclb
js
rcrl
jns
jae
cmp
int
dec
or
mov
jae
aam
mov
pop
std
dec
int3
and
dec
mov
jecxz
outsl
push
mov
dec
clc
movlps
das
sti
lock
dec
bound
jo
push
sub
mov
adcb
dec
jo
jns
cltd
dec
mov
push
mov
outsl
sbb
sub
es
popf
lock
sub
sub
dec
ret
shll
pop
fmull
nop
xor
sub
cmp
imul
fcompl
roll
mov
pop
fnstsw
sub
cmp
push
rcll
push
stos
mov
push
popf
mov
cmpsb
sbb
xor
or
mov
in
inc
out
jecxz
lret
sbb
enter
push
inc
fmull
xor
push
pop
data16
xchg
sbb
xchg
fnstsw
pusha
cmp
or
push
addr16
push
js
mov
movsb
pop
in
mov
lahf
aad
xchg
xchg
mov
xor
fwait
addr16
aaa
outsb
imull
mov
repz
push
mov
sbb
xor
xor
loope
dec
xchg
cli
cmp
pop
aas
xor
outsl
insb
jecxz
je
cmp
sbb
pop
fnsave
sbb
pop
lcall
xlat
mov
cltd
cmp
mov
inc
or
pop
inc
movsl
test
daa
pop
xchg
inc
daa
aaa
sbb
or
push
jge
cmp
icebp
call
jmp
divl
aad
add
jno
push
les
adc
or
and
ljmp
push
fstps
and
pusha
jle
fsubl
add
in
scas
mov
jno
int3
dec
and
bound
es
dec
leave
jno
push
mov
adc
and
fisttps
movsb
xchg
sub
aad
ret
xchg
scas
jb
jecxz
lret
pop
cltd
in
adc
clc
enter
adc
loope
mov
addr16
mov
test
lret
sub
sahf
inc
into
dec
in
ret
fisttps
dec
imul
mov
xchg
clc
dec
fiadds
insb
push
pop
cwtl
sub
dec
popa
stc
scas
push
js
jecxz
call
inc
iret
mov
xchg
push
inc
mov
sahf
xchg
xor
adc
pop
fs
add
mov
jno
jne
repz
sub
and
pop
sub
inc
enter
sbb
pop
and
mov
sub
sarb
mov
xor
jge
ret
sbb
pop
ss
xor
adc
push
dec
inc
mov
ret
loop
push
call
cmp
push
push
es
and
jns
adc
gs
lret
mov
xchg
push
aaa
sub
pusha
mov
jb
clc
data16
or
push
lret
in
mov
in
call
xor
loope
push
loope,pn
test
xchg
data16
leave
seta
rcrl
mov
adc
inc
fwait
or
jle
jne
into
xchg
add
fisubrl
jg
lret
pop
and
push
mov
push
loopne
mov
jecxz
xor
std
out
or
sbb
xlat
xchg
xor
push
in
pop
xchg
jnp
nop
sub
adc
scas
dec
imul
pushf
cmpsb
inc
jecxz
out
movsb
xor
add
imul
and
bound
js
insb
mov
push
mov
mov
jnp
push
mov
and
push
daa
add
xchg
inc
jle
add
sbb
push
std
ds
cmp
rcrb
xchg
jb
jo
mov
jmp
lods
add
cwtl
cmp
and
sub
pop
xchg
into
daa
jns
icebp
daa
pop
dec
gs
popf
sbbb
sub
push
lret
xorl
jecxz
pop
pushf
movsb
js
bound
xchg
inc
cwtl
and
cmp
xchg
rolb
pop
cmp
add
dec
sub
call
cmp
push
push
xchg
sbb
inc
xchg
in
xor
fcoms
movsl
inc
jae
mov
in
arpl
jo
mov
sbb
mov
aam
jp
mov
cmpsb
popa
aas
sbb
and
jns
push
insl
jg
xchg
sub
or
add
and
xchg
filds
das
jecxz
das
jo
rorl
or
int
stos
cld
sbb
push
adc
icebp
dec
or
pop
cmpsb
inc
imul
dec
sarl
and
imul
in
xchg
mov
dec
jns
pop
out
mov
mov
insb
mov
xchg
mov
jge
cmp
fisttps
repnz
jnp
cmp
and
or
jb
cmp
arpl
clc
out
cs
out
jmp
aam
jmp
cwtl
lock
test
inc
pop
adc
aas
dec
aas
mov
sbb
and
adc
cmp
push
xchg
lods
adc
mov
call
enter
sub
ds
pop
push
mov
imul
jns
adc
cli
jge
fwait
dec
cmp
cmp
push
sbb
cmp
mov
jg
pop
dec
sahf
inc
fsubr
icebp
xchg
aam
outsl
xchg
testb
imul
push
xchg
xchg
mov
cwtl
xor
jle
xchg
aaa
ret
pop
lods
pop
pop
out
ret
inc
mov
jmp
shl
sub
push
inc
je
pop
jmp
ret
mov
or
sahf
or
out
xor
jnp
ret
jno
jecxz
stos
jge
stos
jae
fnstenv
cmp
xchg
inc
cld
pop
xchg
inc
and
ja
fs
scas
mov
inc
aad
inc
pop
andl
adc
testl
subb
out
div
cli
repz
outsl
test
cmc
popl
xchg
vcvtps2pd
loope
jae
addb
adcl
add
sbbb
sahf
lret
fistpll
aas
shlb
adc
xchg
jl
mov
out
adc
adc
pop
repz
xchg
push
cmp
out
shll
int
sub
shll
aaa
adc
adc
loopne
int3
notl
test
push
mov
out
insl
xchg
aaa
cmpsb
and
jmp
pop
cwtl
xor
loope
test
cs
pop
fnstenv
add
ret
mov
add
cmp
push
add
nop
ljmp
mov
subb
mov
iret
cwtl
pop
aam
jg
inc
push
stc
sub
sbb
pop
cmc
movsb
cmp
std
sub
std
jecxz
lea
out
push
shlb
outsb
cs
stc
pop
lret
and
mov
cld
frstor
mov
lret
xchg
pop
xchg
inc
fstps
decb
stos
add
lods
aad
clc
test
shll
es
lods
pop
test
mov
add
adc
sbb
dec
pop
cmp
popa
xchg
mov
int
dec
ss
sbb
ficoml
sahf
ret
mov
leave
sahf
pop
dec
jbe
sbb
cli
out
mov
jae
bound
cwtl
inc
push
repnz
sub
and
addr16
mov
das
jae
lahf
push
xchg
add
lcall
cmpsb
fdivrs
xlat
loopne
dec
rorb
adc
pop
xor
popa
push
cmp
xchg
into
lret
into
mov
popf
mov
pop
inc
and
mov
int
xchg
dec
pop
enter
aas
push
into
mov
jmp
or
ds
pop
out
fists
push
clc
je
daa
sub
mov
arpl
jge
les
fnstsw
mov
sbb
and
test
or
pop
ret
pop
jmp
inc
pushf
arpl
call
out
cltd
cli
xchg
push
push
mov
cltd
pop
test
xchg
std
inc
and
fisubs
mov
jecxz
pop
aad
inc
mov
adc
mov
mov
scas
push
xor
pop
push
stos
mov
pop
adc
add
jmp
inc
jb,pt
aam
test
ficoms
jge
xchg
push
mov
je
jae
stos
in
dec
pop
sub
and
hlt
xor
xchg
mov
push
stos
hlt
inc
mov
mov
stos
xlat
adc
jmp
jno
pop
sub
mov
push
xor
mov
add
xchg
pop
cmp
cmc
jne
adc
xchg
fimuls
movsb
push
or
lahf
pushf
cmp
das
fildll
xchg
xor
imul
stc
dec
fs
and
dec
or
add
cmp
push
inc
loope
jge
and
push
lods
push
fsts
inc
mov
push
adc
sbb
add
ret
and
sub
out
dec
mov
ljmp
test
adc
push
push
cmp
pop
push
xor
pop
int
and
int
out
push
call
mov
jmp
lcall
lods
lods
push
iret
push
cwtl
dec
dec
int
push
mov
jnp
stos
and
xlat
addr16
adc
adc
adc
fwait
inc
adc
icebp
jg
stos
sbbb
mov
icebp
mov
stos
lcall
xchg
xor
mov
adc
jle
pop
inc
push
ja
adc
inc
addr16
jbe
out
dec
cmpb
sbb
sub
jg
movsl
lds
pop
mov
arpl
adc
pop
ret
into
imul
sub
sbb
sbb
out
jo
idivl
pusha
shrb
push
xchg
lret
decl
or
mov
and
cs
pop
mov
xor
sahf
aad
imull
int
aad
enter
aam
add
push
dec
or
pop
adc
stc
popa
add
inc
call
push
and
popf
xlat
push
and
data16
jl
add
push
sbb
dec
test
xor
add
push
out
mov
popa
xor
lock
sub
push
jg
leave
stos
bound
xor
pusha
xchg
bound
adc
out
in
adc
cmpl
sub
test
xchg
inc
add
es
sbb
or
xor
fwait
lock
rcl
jle
and
jg
adc
jmp
cmc
cmc
outsl
loopne
movsl
cmc
fsubs
in
lret
inc
mov
dec
dec
js
out
cld
adc
or
cli
mov
lock
jle
and
loopne
cmpsb
in
stc
cli
or
shlb
lock
xchg
int3
jae
push
mov
xor
ret
shll
ljmp
pop
and
stos
fdivs
scas
dec
push
xor
movsb
xchg
mov
xchg
mov
jnp
or
test
ljmp
addl
pop
enter
arpl
movsl
aas
test
sar
pop
dec
stos
fisttps
xchg
imul
sbb
pop
mov
fcompl
mov
mov
movsb
fucomip
jb
in
mov
pop
pop
push
dec
push
xor
inc
addr16
pusha
nop
ret
push
or
loopne
or
push
sbb
iret
pop
jbe
repnz
imul
jmp
adc
clc
pop
jge
in
sbb
fcomps
mov
in
mov
inc
mov
mov
out
push
xor
dec
sti
int3
jecxz
test
inc
cmp
add
jbe
and
pop
ud0
arpl
push
cli
stos
into
mov
xchg
mov
test
sahf
popf
push
xchg
scas
pop
push
dec
clc
and
repnz
lock
mov
sub
mov
jnp
xor
xchg
sub
mov
stos
scas
jecxz
clc
xchg
push
pop
push
and
jecxz
sub
pop
mov
das
int
push
lock
pop
out
movsl
ret
std
enterw
ret
cmp
cmpsl
mov
xor
sti
pop
sahf
scas
lds
add
mov
jg
cmpsl
mov
out
cmpsb
inc
cmp
cld
fadd
pop
mov
aam
int
sbb
cmpsl
insb
adc
imul
ret
rcrl
call
test
inc
jnp
out
inc
jno
sub
cwtl
fidivl
sub
add
xchg
push
jle
lds
pop
or
xor
or
add
mov
out
jnp
cmpl
cmpsl
outsl
mov
adc
clc
in
das
sub
mov
cli
in
pop
mov
fwait
leave
adc
xor
loope
sub
cld
popa
cmp
cmc
xor
add
leave
mov
addr16
cmpsb
adc
mov
iret
adc
test
cmp
jbe
js
bound
xor
cmp
js
mov
orl
cmp
and
fwait
xchg
jae
push
or
and
mov
and
mov
fists
adc
scas
fistps
sbb
sarl
dec
dec
out
add
je
xor
cld
inc
pushf
roll
mov
inc
or
bound
popa
mov
call
pushf
stos
fildl
lods
mov
add
shrb
inc
clc
loopne
orl
int3
cmc
mov
mov
mov
fsubrs
outsl
jp
mov
pop
cmc
or
add
shlb
pop
jmp
loop
sbb
pop
xchg
xchg
sub
jp
or
inc
xlat
xchg
mov
sahf
insl
push
pop
xchg
fsubl
cmp
pop
mov
insb
and
pop
or
iret
fists
loope
mov
shrb
xor
aas
sub
dec
rorb
stos
jbe
mov
cmpb
mov
repnz
push
jb
jge
lods
adc
les
test
inc
jnp
jb
and
or
push
mov
pop
mov
adc
push
xchg
movsl
icebp
xor
mov
mov
mov
xor
lock
int
jmp
cmpl
vpshufd
sbb
in
jmp
add
test
jge
ja
sar
xchg
arpl
mov
and
mov
ljmp
jle
or
lret
mov
add
dec
jbe
stc
mov
test
sbb
adc
ret
pop
into
and
and
adc
adc
fwait
mov
int3
sbb
repnz
pop
daa
jno
dec
incl
out
subb
xor
js
fwait
outsb
cmp
stc
sbb
jbe
pop
xchg
mov
inc
fmuls
icebp
or
lahf
gs
push
push
loop
imul
stos
push
scas
add
dec
sub
loopne
fs
sub
lret
hlt
pcmpgtd
sbb
jmp
cmc
ss
add
mov
ds
add
mov
in
je
stos
loop
mov
fistpll
pop
jbe
push
loop
cld
jnp
stc
xchg
dec
push
pop
sahf
dec
fldl2t
dec
sti
rcrl
xchg
dec
add
push
sub
lret
out
std
roll
bound
mov
mov
cltd
or
cwtl
or
cmp
pop
popf
fstpt
pop
cmpsb
pop
gs
hlt
inc
jmp
repz
jns
out
inc
xor
mov
and
pop
adc
cmp
mov
loopne
inc
testl
mov
in
mov
xor
jno
jno
sbb
or
and
hlt
mov
ret
mov
inc
arpl
lahf
or
sbb
pop
dec
cld
jp
push
inc
pop
mov
inc
cmp
in
jmp
mov
add
fcoml
bound
and
mov
mov
aam
push
std
ficoms
sbb
push
out
xchg
push
cmc
jecxz
or
loopne
repz
addr16
js
sub
lods
rorl
pop
jmp
or
enter
mov
cltd
cli
ljmp
nop
stos
jne
push
in
and
mov
popf
pop
fcomps
movq
ljmp
dec
into
fst
cltd
xor
xchg
cmpsl
mov
mov
push
insb
loopne
divl
bound
sbbl
or
and
clc
add
je
inc
fildl
lods
mov
mov
jl
pop
ljmp
jp
lret
push
or
enter
or
xchg
popa
adc
sub
mov
inc
ja
sbb
outsb
iret
ret
fmul
xchg
sub
into
aas
mov
inc
aad
mov
fisttps
add
cwtl
je
mov
jbe
jecxz
and
cmc
in
fimuls
dec
adc
xlat
fwait
xor
in
data16
mov
cmp
sub
out
fldt
imul
dec
div
repnz
int3
clc
push
and
inc
rcrb
pop
lret
pop
sbb
cmp
pop
and
push
subb
push
adc
push
jae
jg
mov
and
sbbb
out
xchg
mov
and
mov
xchg
add
sbb
dec
sbb
jmp
pop
jmp
cltd
inc
hlt
jp
loope
push
sub
adc
je
popa
mov
xor
cmp
pop
sbb
inc
loop
xchg
inc
or
out
inc
xor
xor
repnz
cld
aam
cli
clc
pop
push
daa
shlb
in
arpl
push
mov
mov
sub
and
lds
lds
inc
pusha
inc
adc
pop
add
mov
lea
lods
fxch
push
fiaddl
std
pop
icebp
sar
mov
pushf
fdivs
inc
leave
sub
dec
rorl
fadds
je
cmpsb
jg
mov
adc
inc
and
sarl
loope
movsl
dec
inc
sbb
lods
pop
daa
adc
jle
lods
sub
loop
ret
rcr
adc
push
cltd
xchg
mov
aaa
decb
scas
test
mov
stc
aad
nop
mov
push
aam
xchg
inc
mov
hlt
mov
movsb
push
xor
add
aas
pusha
and
inc
int
mov
arpl
repnz
add
and
adc
sti
lret
je
mov
pop
jecxz
xor
popa
loop
in
ret
mov
or
xor
sti
push
mov
xor
int
aaa
mov
sub
out
mov
sbb
iret
les
sti
pop
out
mov
xor
or
repz
xchg
mov
popa
dec
cltd
push
lret
outsl
addb
dec
sar
and
rolb
loopne
push
shrb
mov
sti
es
test
scas
mov
jb
int3
enter
cld
scas
ljmp
mov
add
xor
inc
push
jbe
mov
or
mov
push
mov
daa
push
mov
test
sbb
inc
add
addb
sub
add
repnz
dec
sti
aas
lods
adc
loop
outsb
jge
aas
mov
leave
pop
inc
mov
jae
mov
pusha
push
fdivl
test
out
pop
cs
pop
leave
push
ret
jp
mov
fcmovne
inc
das
test
adc
inc
jnp
xor
int
les
shrb
lret
xchg
or
pop
push
adc
or
push
pusha
mov
pusha
pop
mov
mov
add
out
adc
outsb
int3
int3
aad
stos
inc
xchg
or
out
adc
arpl
mov
cmp
rcrb
or
lcall
fmul
push
subb
pop
cmp
je
fcmovne
fwait
mov
add
insb
push
dec
xlat
adc
adc
jge
aad
hlt
nop
ljmp
js
or
lcall
imul
push
push
cli
fwait
daa
fnstsw
mov
incb
mov
pop
pop
adc
cwtl
sbb
stos
mov
cmp
fs
xchg
aad
jle
jae
jecxz
sahf
jns
imul
repz
daa
cmp
mov
xor
xchg
aam
ret
fildll
loope
ret
test
loope
test
add
hlt
sbb
pushf
mov
mov
push
mov
das
push
jbe
and
and
pop
adc
out
jmp
es
out
inc
or
in
or
ds
lods
out
mov
xchg
pop
push
push
in
mov
mov
gs
lods
cmp
sub
rcrl
lret
shl
out
jmp
test
pop
pop
jbe
into
xchg
adc
sbb
lods
pop
mov
lcall
jp
or
addr16
popf
push
inc
testb
lret
sbb
add
out
jbe
sub
ljmp
fsubl
ss
add
sti
imul
lods
imul
mov
lahf
rorl
aas
cmp
mov
pop
mov
inc
shlb
jl
aam
addl
push
imul
and
push
dec
jge
out
xchg
xchg
inc
xor
lods
lcall
pop
jg
popf
mov
cmp
lods
mov
adc
xchg
jmp
stos
sarb
dec
cwtl
stc
jmp
jle
push
push
rcrb
scas
lcall
sub
sbb
push
push
mov
jb
cld
sbb
mov
xor
xor
sub
in
sub
lcall
or
jl
jb
push
fistl
dec
test
addb
sbb
std
lods
into
inc
push
mov
subb
adc
xchg
out
cmp
repnz
xchg
roll
dec
stos
mov
jp
mov
dec
hlt
cmp
sub
mov
leave
imul
cs
enter
das
mov
xor
loopne
xor
daa
cli
jge
lcall
and
mov
lea
mov
into
push
mov
dec
insl
mov
jns
push
sbb
push
in
mov
xchg
lea
lahf
cmp
lods
sbb
xor
lea
out
mov
mov
jge
push
ss
fadd
test
dec
dec
mov
inc
or
inc
pop
decl
sub
or
es
test
xchg
into
mov
adc
pop
lret
lcall
push
jp
xchg
push
push
lcall
out
xorb
and
negb
outsb
push
test
xor
xor
sub
outsl
mov
in
ljmp
ljmp
inc
imul
mov
inc
lcall
ss
out
fidivrl
sbb
cld
xchg
push
mov
fmuls
mov
jb
jecxz
leave
inc
flds
call
sbb
in
push
inc
push
xchg
cmp
movsb
mov
lds
add
sub
or
mov
cmp
add
push
mov
jne
fwait
jge
fadds
inc
repz
cmc
mov
fimull
aas
adc
inc
icebp
xchg
outsl
pop
pushf
loopne
lcall
cld
jl
xchg
push
cmp
xchg
repz
inc
sub
jle
sar
fdivrp
test
int
push
in
push
js
mov
lea
rclb
sub
mov
pop
mov
adc
clc
adc
sub
pusha
and
sub
mov
fcompl
xor
insl
and
in
add
dec
mov
shrb
shlb
roll
cmp
fbld
jle
xor
sub
xor
test
xor
or
mov
loope
xor
xor
imul
cld
mov
dec
ja
mov
es
out
and
jns
outsl
repz
ljmp
imul
cltd
push
les
inc
ja
xchg
jmp
dec
pop
jl
push
xchg
inc
pop
push
push
cmpsb
pop
cmp
sahf
push
push
in
fsts
out
sub
or
xchg
mov
orb
push
fs
and
sub
pop
int
inc
mov
dec
movsl
mov
inc
sahf
sub
fisubrs
jge
insl
mov
rolb
push
mov
jecxz
inc
lds
cli
movsl
add
cmc
sbb
cmpl
mov
gs
fsubs
mov
or
xor
jbe
sahf
xor
into
sub
sub
out
decb
lds
es
dec
fcompl
jle
push
push
add
lock
jecxz
xor
push
jo
pop
push
sti
push
lods
push
inc
int3
iret
or
jnp
mov
mov
jno
loopne
mov
inc
lret
shrb
xor
mov
or
pushf
decb
fstl
lcall
aaa
fdivrp
orb
push
push
sbb
mov
ja
add
mov
and
out
test
rep
test
loop
ja
push
xchg
or
test
and
lret
lods
lcall
xor
pusha
jno
insb
ds
pop
mov
in
push
cs
mov
cld
jle
in
lret
push
stos
adc
inc
push
into
test
test
daa
and
out
xor
daa
in
inc
imul
sbbl
mov
push
dec
mov
dec
aad
pop
mov
hlt
mov
pop
shrb
pop
rcrl
jecxz
enter
sbb
jg
jno,pn
shll
push
scas
add
sub
mov
bnd
push
in
cmp
cmp
push
imul
sub
cmp
ja
xchg
sarl
push
ds
sbb
cli
addr16
push
xchg
lahf
mov
fucom
jne
pushl
dec
hlt
pop
into
icebp
inc
dec
cltd
movsb
push
nopl
les
scas
xchg
cltd
push
gs
leave
insb
sbb
mov
mov
daa
sbb
mulb
sbb
adc
xchg
push
imul
adc
or
pop
push
xchg
sbb
int3
xchg
mov
cld
jge
pop
sub
loop
jnp
or
shr
mov
dec
je
adc
sbb
daa
pop
push
insl
jecxz
xchg
cmp
mov
mov
test
loope
je
ret
js
cmpb
cli
enter
mov
lock
adc
dec
orb
aad
mov
fs
fsub
push
jne
aaa
dec
dec
dec
xchg
mov
sarb
insl
add
outsl
cs
sub
nop
mov
dec
ret
push
cmpsl
stos
or
imul
loop
movsb
xlat
sbb
js
xchg
addr16
dec
loop
fxch
sbb
sbb
mov
lods
adc
push
sbb
xor
jno
cmp
sbb
sbb
mov
test
mov
addb
test
jbe
cmp
cli
mov
lock
jbe
fsub
pop
mov
sbb
call
jo
xchg
mov
pop
pop
cmp
leave
clc
pop
pop
hlt
pop
dec
orl
popf
push
scas
repz
inc
test
cmc
arpl
mov
lock
loope
lock
sub
cli
mov
xchg
cmp
sbb
scas
idivl
cmp
xchg
xchg
ret
stos
stc
repnz
mov
sub
in
sbbl
out
dec
jecxz
movsl
sub
sub
aam
nop
stos
cmpsl
push
test
xchg
cltd
clc
in
mov
jmp
aaa
repnz
test
or
adc
mov
mov
mov
xor
dec
xor
fprem
test
sub
jle
cmp
and
and
xchg
or
adc
stos
ja
sbb
in
pop
and
adc
mov
insl
cld
mov
fdiv
mov
xchg
int3
jmp
scas
fmull
mov
outsb
jl
mov
adc
mov
aad
mov
pop
jmp
dec
adc
and
fcomi
xor
cmp
popf
and
cmpsl
mov
pop
js
push
dec
call
fwait
mov
xchg
outsl
sahf
int3
bound
repz
sub
out
lea
mov
xor
pop
aas
dec
and
popf
shl
test
movsl
mov
add
adc
bnd
mov
fsubrs
lret
mov
shll
leave
loopne
xlat
inc
push
and
fwait
jb
arpl
insl
mulb
rorb
dec
aad
jmp
mov
pop
mov
div
call
lret
sbb
add
shlb
dec
push
jne
das
mov
in
and
xchg
sahf
std
jno
jmp
into
push
call
inc
test
std
push
jnp
jg
daa
rcr
pusha
pushf
adc
lahf
es
incb
add
out
dec
gs
insb
fisubl
mov
push
sbb
and
jl
test
or
daa
jp
inc
and
nop
in
inc
pop
or
mov
pop
push
pop
into
xlat
out
popa
xchg
dec
test
xchg
inc
rorb
fiadds
mov
imul
leave
shlb
pop
inc
sahf
ss
pop
xlat
xchg
xchg
imulb
and
xchg
pushf
shl
hlt
mov
lea
push
pusha
mov
jle,pt
jmp
pop
mov
sub
cmp
and
mov
das
dec
mov
add
mov
stos
adc
pop
mov
aaa
mov
sbb
mov
push
push
xchg
loop
data16
push
cwtl
dec
icebp
loope
inc
jmp
jg
les
jbe
pop
jp
filds
cmp
fisttps
mov
mov
lock
sbb
cmpsb
jb
movsb
div
int
fistps
jecxz
dec
sbb
int
sub
lfs
inc
sahf
faddl
insb
aad
das
sub
test
sbb
popa
shll
mov
jno
jp
jns
fwait
outsb
or
jae
xchg
imulb
arpl
jl
outsl
dec
jno
fidivrs
stos
lock
lret
dec
out
aas
push
stc
mov
adc
xlat
xchg
std
repz
fmul
cwtl
pop
ss
jg
ja
add
xchg
mov
stos
in
pusha
mov
cmp
add
inc
mov
push
mov
jno
cmp
xchg
test
nop
outsl
pop
cmpl
clc
sti
xchg
mov
pop
pusha
ja
or
lea
pop
pop
push
stc
or
inc
mov
jmp
push
xchg
fs
movsl
int3
int3
mov
sub
jo
sub
iret
stos
jp
jns
data16
sbb
loopne
pop
xchg
xchg
mov
sub
mov
inc
mov
dec
push
jns
dec
sub
clc
or
rclb
vpcmpeqw
cmpsb
out
jecxz
pop
lahf
testb
std
idivl
push
pop
mov
inc
movsl
cli
sbb
mov
adc
fnstsw
mov
pop
xchg
and
outsb
ret
les
lds
insl
add
sbb
mov
mov
pop
mov
xorl
lock
aaa
lea
pop
adc
mov
nop
jae
cmp
adc
ss
inc
xor
sub
inc
cli
test
das
shrb
add
lods
shll
jb
dec
imul
xchg
repz
stos
mov
push
adc
fsts
fisubrl
add
jns
push
jae
xor
cmp
dec
and
les
push
les
sub
mov
lahf
mov
sub
or
dec
aas
inc
out
imul
addr16
vminss
cmp
inc
and
pop
cmp
ss
jecxz
adc
lret
mull
push
push
les
pusha
nop
push
mov
and
aas
es
and
pushf
sub
xchg
push
or
sub
popf
pop
popa
push
mov
inc
notl
sub
aam
sbb
in
mov
cmp
mov
repz
sbb
lret
das
mov
and
outsl
data16
jne
dec
lret
ret
outsb
pop
jecxz
ss
xor
loopne
outsb
pop
test
out
cmpl
jecxz
mov
lret
jle
pop
inc
int3
push
xor
lretw
cmp
stos
inc
or
outsb
ret
lods
mov
rcll
rcrl
in
push
dec
mov
push
in
les
xchg
inc
mov
repnz
mov
dec
in
fidivrs
sbb
nop
jnp
imul
out
jle
inc
cmpsb
fs
xor
dec
sbb
addr16
rcrl
push
sbb
rcrl
inc
push
jmp
cmc
mov
xor
mov
pusha
mov
hlt
mov
sbb
and
push
fstl
enter
iret
test
xchg
in
push
cmp
cmc
sub
cmp
mov
inc
pop
mov
mov
fcoms
or
sbb
xor
adc
outsb
push
cmpsb
and
add
popa
pusha
push
loopne
add
in
loope
add
xchg
mov
mov
pop
xor
dec
lods
xchg
sub
push
dec
pop
out
insl
cld
dec
mov
sbb
movl
lock
jge
das
jg
fimuls
mov
jecxz
test
js
cmp
mov
and
arpl
arpl
or
lret
cmpsb
cli
or
or
in
inc
stos
test
ja
adc
mov
js
outsl
in
inc
fistpll
cmp
pop
negb
xor
cwtl
push
fwait
cmp
outsl
dec
mov
pop
push
fldcw
sbb
ficoms
xchg
cmpsl
aam
xchg
jae
mov
xchg
shrl
sbbb
or
ljmp
adc
pop
inc
xlat
call
sbb
jmp
js
sbb
mov
or
mov
mov
sbb
flds
fwait
incb
fidivrs
out
adc
movlps
imul
in
inc
add
cmp
popa
stc
mov
cltd
mov
mov
mov
jns
outsb
jns
jg
cmp
cmpsb
loope
mov
loop
in
add
xchg
mov
cmp
mov
add
rorl
push
mov
mov
ja
aaa
mov
cmpsl
and
sub
push
adc
hlt
sbb
mov
sbb
aas
adc
push
xor
ficompl
sub
lock
sbb
lea
ja
rclb
or
ret
pop
inc
xchg
fwait
pusha
pop
gs
pop
aaa
push
fwait
popw
mov
inc
push
in
fcoms
xchg
inc
add
mov
pop
xor
jb
int
loopne
ret
push
insb
and
inc
adc
jne
jne
xor
mov
mov
dec
xchg
adc
jae
test
mov
mov
stos
xchg
addb
inc
fsub
negl
outsb
testl
jg
dec
out
sbb
cmp
test
clc
in
dec
jo
cwtl
in
push
ds
sub
loopne
xchg
sahf
mov
mov
in
or
mov
pop
stc
mov
jbe
jb,pt
adc
push
dec
mov
mov
mov
mov
out
fwait
push
sbb
loope
mov
jmp
rol
pop
adc
mov
cli
ss
cmp
je
fidivl
inc
in
jbe
filds
mov
xchg
mulb
mov
push
xchg
adc
pop
shr
leave
dec
test
mov
stc
cltd
adcb
adc
jl
loope
ret
dec
jno
imul
and
xor
cs
js
sbb
dec
or
mov
out
sub
push
mov
adc
dec
jmp
mov
cwtl
in
shlb
or
inc
in
ror
pop
pusha
daa
fidivrl
fisttpl
fldt
xchg
not
popa
pop
adc
fsubs
push
and
aad
rcll
mov
call
mov
inc
sbb
xchg
xchg
inc
jnp
pop
dec
movsl
inc
sbb
dec
mov
mov
jno
std
bound
inc
xor
mov
ss
adc
mov
sbb
and
sbb
mov
pop
cmp
in
adc
inc
and
inc
mov
xchg
dec
lret
and
frstor
jl
and
int3
xchg
or
in
inc
adc
xor
stos
lock
mov
in
mov
lock
add
leave
popl
cmpsb
in
jmp
mov
and
sbb
pop
clc
movsb
cs
imul
les
adc
sbb
repz
in
inc
jns
cltd
mov
mov
cmp
leave
xor
add
movsb
pop
push
scas
or
pop
and
subb
lea
adc
inc
stc
pop
out
cmc
lea
in
mov
lcall
xor
jp
fistps
aaa
scas
in
dec
call
dec
aad
in
jg
sub
cs
out
xlat
shrl
std
jo
out
pushf
orb
jo
lfs
push
mov
push
cmp
enter
shll
mov
xchg
push
js
adc
jae
mov
dec
lret
cmp
push
clc
and
dec
push
aas
add
mov
jns
es
pop
ficoms
add
jnp
sub
out
adc
xchg
dec
mov
push
or
ja
push
xchg
and
sbb
test
add
inc
push
das
daa
inc
jbe
dec
adc
or
push
dec
cmp
pop
jp
loope
push
xchg
xor
cmp
cs
xchg
call
movb
mov
das
pusha
aaa
push
or
jo
cmpl
jo
sbb
inc
in
sbb
sbb
sbb
adc
pushf
pop
gs
mov
pop
in
mov
sub
sti
in
out
pop
loop
push
notb
mov
js
add
dec
mov
cmp
pop
imul
int3
push
pop
or
inc
pop
popf
jg
inc
pop
repz
addb
jns
and
fucomp
fsubrl
cltd
int
icebp
aaa
ret
in
sbb
mov
lcall
xor
xchg
sbb
mov
mov
shll
lahf
push
pop
repz
call
sbbb
adc
fistps
faddl
adcb
test
dec
fsubrl
mov
jmp
jge
enter
jp
lahf
jp
mov
inc
js
nop
enter
jle
out
dec
loope
repz
daa
arpl
frstor
js
enter
sub
inc
xlat
clc
int3
iret
pop
lea
push
or
mov
lahf
lds
out
dec
adc
mov
inc
ss
mov
jnp
lcall
mov
mov
inc
xorl
xchg
or
jmp
into
jl
mov
cmc
into
jmp
adc
or
sarl
pop
xchg
cmp
jmp
lahf
movsb
sub
adc
mov
and
mov
incl
mov
out
cmpsb
pop
xchg
or
add
popa
cmc
stc
push
addr16
or
stos
lahf
repnz
mov
cli
pop
sarb
cmpsl
lock
call
mull
js
mov
dec
cltd
jge
pop
shll
lahf
add
mov
movhlps
cwtl
adcb
imul
or
pop
addr16
ret
je
add
dec
mov
les
sbb
mov
dec
in
data16
fidivrs
dec
pop
push
push
sub
xchg
pop
jnp
ljmp
fucom
ds
push
sub
mov
cld
pop
inc
sahf
push
clc
out
loopne
sub
pop
lahf
push
cmp
adcb
in
stos
pop
push
xor
mov
mov
orl
mov
xchg
jo
in
ficoml
sbb
aaa
test
js
inc
jae
jecxz
jb
aas
push
pop
ljmp
or
into
hlt
pop
je
xor
loopne
jg
lods
sbb
jbe
mov
inc
enter
dec
sti
enter
pop
inc
cwtl
or
cltd
jnp
and
sbb
cmp
or
xor
mov
repnz
aas
divl
int
out
js
les
push
jo
test
sbb
jmp
inc
lret
js
cwtl
fsubr
insl
lcall
cmpsb
fbld
icebp
addl
jge
mov
cwtl
jae
ret
or
push
and
clc
mov
clc
out
insb
adc
std
push
push
pop
xor
add
data16
stos
xlat
frstor
mov
pop
pop
jmp
jbe
mov
jl
xor
cs
imul
fsubrl
popl
inc
sub
adc
aam
cmpsb
out
movsl
loop
ljmp
mov
cmp
scas
pop
xor
sub
pop
dec
pop
addl
daa
hlt
add
jbe
or
shll
add
ljmp
and
xchg
xor
lods
jns
dec
dec
or
pusha
add
push
cmp
mov
cmpsb
jnp
or
out
jmp
inc
or
jns
lods
test
jbe
dec
outsb
push
sub
push
or
xchg
pop
into
adc
jl
lret
sub
cmc
cmp
mov
fnstcw
sahf
jno
imul
inc
outsl
pushf
mov
fsubp
mov
add
xchg
xor
ljmp
mov
and
jl
lock
dec
and
dec
pop
insl
cmp
sub
xlat
add
js
out
stos
sbb
js
enter
dec
dec
mov
sahf
lea
mov
jmp
mov
push
push
push
inc
push
ss
test
xchg
add
inc
push
jp
fidivl
mov
mov
mov
cmc
aam
pop
or
mov
jl
jo
lods
call
mov
inc
adc
mov
xchg
insl
sub
cmp
ret
inc
loope
in
jbe
adc
outsb
loopne
repnz
xor
cmpsb
fidivs
pop
dec
cmp
dec
xor
ret
stos
fisttpll
sub
rcll
mov
into
cli
sarb
lcall
cmc
and
fstpt
rcrl
mov
mov
in
xchg
xchg
fcom
shl
out
sub
out
test
ret
and
loop
xchg
jge
stc
add
mov
out
or
mov
cmp
rorl
jae
lret
sub
mov
imul
test
pop
fistps
stos
scas
ds
movsb
lea
cmp
jno
sub
jae
or
inc
sarl
insl
sbb
mov
adc
test
xor
push
xchg
push
cmpsb
enter
xor
push
xchg
add
sti
out
mov
push
shll
mov
pop
sub
xor
mov
push
mov
negb
jecxz
xor
cmpl
pop
aas
inc
daa
icebp
pop
xor
outsb
jmp
pop
and
lds
and
lea
mov
iret
cmp
cld
cmpsb
ficoms
in
std
sub
mov
mov
cmpsb
enter
pop
ret
in
sarl
sub
clc
inc
in
push
lods
dec
sbb
and
sub
jne
fimull
cmp
roll
scas
lods
jmp
push
nop
ja
pushf
jae
xchg
mov
fcoml
and
dec
jne
fs
sbb
push
out
subb
sbb
jmp
push
push
sub
stos
outsl
lahf
mov
rorl
test
or
cli
mov
scas
stos
aam
loop
pop
loop
loope
adc
ljmp
add
lock
loope
aam
jp
test
dec
jae
into
lock
repnz
pop
sahf
mov
mov
mov
fdivrl
insl
jecxz
aad
rorl
lahf
xor
adc
loopne
dec
and
inc
lds
rcrl
out
aas
mov
scas
lahf
ss
stc
dec
test
add
sub
push
outsl
lock
push
lods
arpl
icebp
cmp
pop
xor
or
fmull
les
test
jg
mov
mov
push
jp
mov
jle
or
push
cmp
lods
rcll
addr16
negb
adc
inc
int
mov
pushf
arpl
outsl
imul
sub
clc
sbb
dec
test
push
out
sbb
inc
imul
cmp
out
jno
jb
push
arpl
inc
call
or
loop
cmp
out
inc
cmp
and
dec
mov
jge
out
xchg
mov
inc
sahf
pop
call
cli
and
pop
cmp
fiadds
sub
add
les
cmc
inc
jb
mov
inc
out
fdivrp
inc
pop
xchg
dec
jge
adc
test
adc
mov
outsl
icebp
sbb
xchg
xor
mov
ja
sbb
xor
jmp
add
adc
sbb
xor
ficoms
adc
xchg
xor
ja
sub
jae
xchg
mov
outsb
repnz
push
popf
lret
inc
adc
test
shlb
dec
cmp
movsb
jecxz
je
mov
les
ss
test
not
cmpsl
fwait
repz
fisubs
mov
repnz
adc
jae
dec
clc
outsb
push
push
pop
xchg
fistpl
add
repnz
jns,pn
out
jae
in
in
inc
das
xor
fwait
out
push
rcll
shlb
inc
cmpsl
in
add
adc
inc
jb
push
inc
outsl
sub
cli
adc
sahf
push
ja
mov
and
cwtl
lods
pop
dec
cmpsl
dec
xchg
fs
into
adc
cwtl
cli
xor
and
cmc
push
jnp
stos
test
mov
mov
arpl
dec
pushl
inc
jb
ret
mov
adc
cs
jae
subl
icebp
pop
js
mov
mov
jae
dec
sarl
adcl
test
push
imul
cs
push
mov
inc
push
lds
mov
test
jl
sbb
lcall
mov
maskmovq
and
nop
adc
jl
stos
insb
les
push
and
test
jg
pop
inc
sbb
data16
push
mov
jne
outsb
mov
cmp
test
and
cmp
sub
fwait
outsl
sbb
cmp
pushf
or
sahf
loop
jne
or
leave
andb
fcmovne
shrl
repnz
mov
mov
icebp
jbe
mov
sub
cmp
pop
cmp
cmpsb
xchg
fwait
es
iret
outsb
push
xorb
pusha
mov
fdivrl
lret
push
mov
cmc
push
loopne
push
mov
mov
sub
and
pop
mov
mov
fistps
and
push
int3
mov
mov
dec
loop
je
insl
jne
sbb
mov
xchg
sahf
shl
add
sub
jns
mov
push
push
xchg
imul
push
ljmp
pop
and
mov
push
add
mov
mov
sbb
scas
cmp
xchg
push
sti
and
ds
movsl
leave
shrb
bound
xchg
fdivl
data16
or
stos
mov
sub
and
imul
in
sub
jns
out
aam
xchg
pop
clc
fldcw
popf
cltd
cmpsl
jp
pop
pop
lods
adcb
dec
lahf
cmpsl
cmp
mov
ds
or
imul
mov
jae
aad
pop
enter
cwtl
and
push
rorl
scas
lea
mov
jne
cmp
cltd
mov
dec
cmp
fstps
js
mov
int
mov
loop
cmp
mov
daa
loope
dec
jb
leave
ret
arpl
pushf
xchg
sahf
outsl
testl
std
movsb
sbb
ficomps
hlt
or
lods
push
fs
mov
out
fsubl
mov
iret
adcl
pushf
btc
and
and
in
aaa
movsb
mov
jl
imul
ret
iret
xchg
dec
jae
and
int3
test
mov
mov
dec
frstor
sbb
jne
xor
sub
add
inc
insl
int
cmpsl
cmp
das
daa
mov
jns
shl
stos
aaa
jae
daa
push
inc
push
pop
ret
xor
stos
xchg
mov
clc
sahf
push
cmp
adc
inc
into
push
mov
mov
cmc
adc
mov
rcrl
cmp
out
sub
pop
imul
pop
push
out
aaa
sbb
sub
jnp
lahf
lahf
in
iret
fwait
ja
cmp
test
dec
es
dec
sbb
xor
inc
push
stos
and
test
in
or
cmp
pop
cmp
out
xlat
adc
ret
sbb
int3
push
push
pop
in
data16
dec
add
inc
loope
dec
outsl
dec
pusha
in
fdivr
push
mov
in
jno
imul
addr16
out
movsb
test
out
incl
sub
pusha
jl
fs
xchg
lret
addl
leave
negb
jle
pop
cmp
addb
cmp
ja
pop
out
mov
jb
jbe
sub
scas
addr16
sub
sbb
sbb
push
fisubrs
call
mov
cs
rol
fnstcw
aad
ss
fs
imul
shrl
sub
adc
stos
js
pushf
mov
dec
push
add
xchg
push
and
jmp
es
pushf
push
stos
repz
adc
mov
or
outsb
add
mov
dec
fisttpll
fstl
jnp
test
lahf
ljmp
es
shll
mov
jbe
inc
inc
fistpl
add
ficoml
in
dec
or
popa
xchg
jp
lret
jno
cmp
push
jb
pop
push
mov
sti
in
xor
shlb
jp
leave
movsl
gs
push
mov
fcompl
imul
xor
in
test
repz
pop
push
aaa
xchg
jne
out
test
clc
js
fdivrs
or
mov
and
jp
jno
popa
lods
push
push
daa
lcall
or
push
xlat
ljmp
outsl
in
jp
lret
in
loopne
cmp
sub
clc
jbe
push
aad
pop
sub
ret
je
rclb
sti
mov
int3
dec
loopne
out
mov
daa
aas
mov
mov
jns
fisttpll
mov
or
test
ret
loope
aaa
fs
ds
std
in
or
mov
jbe
adc
adc
sub
and
sbb
es
aas
flds
fwait
cmp
das
es
mov
dec
sbb
jge
aad
lea
imul
and
mov
cmpl
outsl
in
outsl
push
mov
mov
push
fwait
dec
adc
fwait
mov
movsl
cs
jo
xor
and
inc
test
xchg
mov
cmp
cmp
push
out
and
dec
jle
test
mov
pop
adc
stc
pop
dec
and
adc
and
fimull
loopne
cmp
jo
sbb
pop
dec
push
adc
out
jp
shl
mov
out
stos
mov
loopne
fwait
pusha
addr16
cwtl
or
xor
mov
pushf
jmp
fdivrl
sar
scas
scas
push
jns
pop
ret
push
movsl
push
stos
imul
mull
xchg
nop
movsl
sub
enter
jmp
mov
jnp
in
mov
fnstenv
cmpsl
mov
mov
mov
jecxz
push
or
mov
mov
cmpsl
and
stc
in
pop
push
scas
gs
xor
arpl
frstpm(287
pop
sarb
scas
bound
mov
cld
jmp
inc
xchg
mov
xchg
xchg
jge
dec
lcall
shl
push
add
and
in
pop
or
idivb
pop
xchg
daa
mov
cmpsl
pop
mov
insb
inc
adc
xor
ret
add
or
fidivrs
jmp
stos
sub
fucomi
jnp
sub
fwait
pop
sub
test
jmp
repz
cmp
insl
and
inc
push
outsl
and
movsb
push
das
loop
sub
dec
lods
mov
and
fldenv
ffree
mov
mov
pop
push
pushf
mov
cmp
movsb
xchg
mov
int3
mov
aas
jp
das
xor
daa
insb
test
inc
adc
mov
jecxz
mov
test
or
mov
pushf
pop
and
lds
iret
push
mov
adc
in
and
test
mov
add
dec
sub
loope
dec
ficoml
leave
lcall
mov
jno
das
jmp
in
les
push
mov
outsb
xchg
push
punpckhbw
nop
fidivrs
mov
mov
imul
sub
int3
shlb
xor
std
aas
lret
sub
xor
repnz
jmp
rorb
fwait
jecxz
in
inc
xchg
ss
outsb
mov
push
inc
cwtl
jge
push
aam
add
iret
dec
mov
inc
sub
jl
xchg
fcom
rorl
sub
xchg
xchg
test
mov
shrb
test
inc
or
sub
stos
sarb
pusha
jne
icebp
fcompl
leave
and
mov
sbb
movsl
dec
mov
lds
jge
fdivr
xor
stc
int
dec
inc
cmpl
dec
les
mov
or
out
sbb
es
dec
push
movsl
sbb
fnstsw
ret
and
sbb
push
dec
sbb
jge
cmp
fsts
or
jmp
mov
jge
pop
iret
dec
sbb
mov
outsl
data16
add
xor
lods
pop
out
or
andb
mov
cmpsl
and
imul
inc
sahf
out
loopne
jb
popf
fld
mov
bound
cmc
jo
inc
loopne
lret
xchg
inc
ja
stos
pop
push
arpl
xchg
out
pop
aaa
mov
call
jmp
aad
push
cmp
xchg
xchg
inc
jp
pusha
clc
xor
cltd
mov
push
sub
dec
mov
or
inc
out
in
mov
cmp
add
push
dec
jo
movsl
xor
sub
inc
iret
sbb
xchg
test
xchg
mov
jle
xchg
je
ja
push
mov
or
in
adc
fcomps
and
sub
mov
enterw
lods
fiadds
int
push
add
in
test
int
mov
jmp
sub
inc
xchg
mov
or
jbe
ss
push
cld
insl
sbb
pop
pop
xchg
sbb
add
cld
call
test
mov
in
leave
mov
cmpsl
stos
or
jecxz
ds
stos
xor
hlt
out
sbb
repnz
jnp
adc
fadd
outsl
xor
int
decb
imul
pop
cltd
arpl
dec
cmc
mov
iret
imul
pop
jl
xor
cld
ret
and
push
call
dec
xchg
loopne
scas
ret
loopne
mov
das
mov
in
pop
in
fdivl
rclb
int3
adc
das
jmp
pop
rorl
jle
ja
cmp
ljmp
rcrl
rolb
data16
mov
test
jnp
or
aam
aaa
mov
jae
out
pop
mov
mov
and
jmp
and
ja
jnp
out
pop
sbb
in
push
test
movsb
mov
inc
mov
jp
arpl
hlt
fldt
mov
xorb
test
or
mov
or
sti
push
fs
xchg
sub
test
data16
mov
xchg
jbe
sbb
mov
or
rorl
push
push
imul
mov
dec
sub
jb
test
push
dec
and
lea
add
mov
push
push
pop
lret
mov
in
inc
pop
mov
jp
aam
fs
pop
lahf
adc
lods
push
xchg
out
sub
fists
js
mov
sarb
dec
jge
cmp
int3
ret
out
fcmovbe
hlt
cld
xchg
fwait
divl
ss
xlat
adc
pop
cmp
jl
mov
mov
test
shrl
cmpsb
xor
lret
sbb
inc
dec
jnp
mov
jp
and
inc
aas
xchg
xchg
push
pop
jae
cmpsb
jb
adc
fmul
psraw
stos
pop
xchg
in
movsb
xlat
lret
push
dec
jbe
mov
sbb
decb
iret
icebp
adc
movsb
sub
imul
adc
xchg
sub
inc
pusha
jno
sub
adc
daa
imull
cltd
pop
fsub
je
mov
xchg
xor
pop
xor
adcl
adc
push
dec
mov
pop
dec
fsubrl
or
xor
cld
arpl
mov
imul
fidivrs
flds
lods
pop
adc
mov
sbb
pop
mov
mov
aaa
dec
dec
imul
ja
loope
aad
xchg
pop
idivb
push
and
push
add
mov
lcall
enter
pop
stos
pop
adc
into
add
lods
jl
mov
jg
or
lret
inc
testl
xorl
ret
mov
or
iret
add
mov
mov
ds
sahf
ljmp
mov
or
pop
dec
fidivl
xor
jnp
movsl
push
dec
cmp
sub
das
jmp
pop
inc
test
std
sbb
scas
repnz
inc
cmp
sbb
jo
in
xchg
push
in
pop
push
dec
xchg
mov
pusha
push
fisubl
push
mov
outsl
movsl
xchg
ljmp
iret
inc
xor
inc
scas
lret
shr
scas
das
addr16
sbb
xchg
in
add
mov
ljmp
mov
fs
mov
add
and
mov
jl
leave
inc
test
lods
sbb
lock
xchg
addr16
in
faddl
jns
cli
sub
adc
leave
jl
cmp
inc
in
out
jae
cld
cs
jmp
arpl
mov
jno
jno
ret
jne
dec
shll
cmp
and
fwait
pop
dec
mov
xchg
sbb
inc
jb
out
push
popf
mov
test
ret
or
stos
mov
inc
adc
lods
push
into
add
ror
xorl
cmovb
testl
in
out
mov
mov
adc
sbb
cld
lods
movsl
insb
jae
aaa
icebp
rcrb
add
iret
pop
ret
push
add
xchg
mov
push
mov
es
jg
pop
pushf
loope
cmp
jae
push
sarb
mov
cmp
mov
mov
jle
xchg
fs
xchg
xchg
shlb
mov
in
stos
repnz
jb
sub
lock
sbb
mov
jg
pop
mov
add
push
mov
loope
mov
cmp
fdivl
adc
pop
push
sub
pushf
shrl
es
lahf
loop
ja
in
mov
jno
mov
dec
popa
mov
dec
stc
mov
out
icebp
imul
daa
scas
dec
xor
mov
fs
adc
adc
mov
lods
clc
sbb
push
scas
stc
xchg
test
mov
pop
mov
dec
pop
lahf
cmp
cmpsb
and
or
cmp
push
inc
out
and
sbb
pop
sbb
or
adc
lea
inc
lret
sbb
mov
rclb
insl
and
inc
and
pavgw
in
xchg
push
shrl
popa
lods
pop
insl
rorl
cmp
jne
lods
adc
xchg
jl
in
dec
inc
lahf
push
rcl
xor
xchg
rcrb
xchg
xchg
sahf
dec
xchg
cli
pop
in
mov
mov
mov
mov
push
push
fwait
jg
and
cld
stc
fwait
mov
push
and
sbb
inc
test
pushf
aas
loop
add
rolb
or
pop
inc
rolb
in
push
testl
adc
jne
bound
sbb
cmp
lds
push
rolb
fwait
push
aad
jl
aas
ficoms
and
mov
cmc
das
scas
sbb
jo
imul
mov
andl
sbb
sub
outsb
sahf
cmp
sar
or
fiadds
test
mov
arpl
inc
xchg
and
data16
popf
mov
jo
mulb
je
js
enter
mov
xor
into
das
je
pop
popa
lret
mov
popa
sub
xchg
xchg
stc
push
mov
mov
jge
ret
xchg
xchg
fmul
and
loop
jb
mov
fstpl
ja
iret
dec
mov
loope
xchg
ss
and
out
dec
mov
fimuls
call
shr
mov
ljmp
dec
movsb
cmp
and
scas
mov
and
stos
xchg
jge
add
out
sahf
dec
fnstsw
sub
mov
adc
xchg
je
mov
nop
and
into
dec
iret
push
mov
pusha
aaa
cmp
jecxz
xchg
outsl
adc
mov
jo
orb
mov
add
in
mov
jl
jp
xchg
movsl
rcrb
pop
adc
sub
insl
ret
sti
xlat
icebp
lea
fwait
scas
and
mov
jmp
punpckldq
pop
out
stc
scas
inc
outsb
lret
mov
les
rcrb
lds
lock
jle
mov
fcoms
addr16
sbb
xchg
cmp
pop
mov
out
icebp
cmp
add
push
sbb
xchg
addr16
mov
addr16
fsubrl
adc
imul
push
out
mov
fdivrl
sub
fcompl
jle
add
pop
cmpsl
aaa
push
enter
faddl
aaa
and
imull
mov
ja
fimuls
arpl
idivl
insl
cmp
mov
shrl
mov
ljmp
and
inc
xchg
outsl
loope
mov
ljmp
add
hlt
outsb
dec
daa
fcomp
push
dec
inc
jbe
lods
push
fimull
pop
pop
jb
push
xchg
iret
out
jp
sbb
jae
pop
repz
mov
imul
cmc
mov
orl
and
pop
nop
jl
call
inc
add
inc
mov
mov
mov
subl
xchg
das
loope
arpl
adc
push
sub
rclb
pop
bound
mov
sbb
lahf
sbb
in
gs
pop
data16
ja
test
jae
xchg
cmp
es
add
sub
pop
insl
inc
mov
or
out
push
jp
popf
out
sub
mov
add
stc
rcrb
jmp
les
enter
cltd
add
lahf
andl
insl
gs
and
mov
loope
sarb
xchg
fwait
lret
jp
mov
pop
sahf
xchg
std
pushf
stos
js
xchg
outsb
lock
clc
and
stos
sahf
xchg
scas
xor
jg
insl
mov
popa
inc
imul
imul
pusha
sbb
testl
out
mov
mov
loop
rorl
inc
cltd
mov
into
cltd
dec
dec
jge
stos
shr
add
insb
dec
mov
jmp
push
adc
roll
adc
jecxz
adc
push
xor
or
lds
sub
clc
mov
cld
mov
jno
in
push
repnz
pop
js
cmp
and
mov
xchg
ja
adc
inc
int
or
adc
pusha
sub
enter
out
sahf
and
movsb
fistl
xor
imul
push
jmp
lcall
cld
inc
pop
inc
dec
push
xchg
inc
shr
mov
insb
leave
sbb
popa
test
stc
push
ja
add
cmpsl
pushf
sbb
fcoml
push
mov
addb
addr16
mov
cmp
push
movsl
or
mov
mov
sbb
repnz
aas
sub
outsb
fdivrs
pop
in
cmp
and
add
jg
add
sbb
cmp
mov
mov
enter
hlt
sbb
and
push
pop
sahf
push
in
mov
push
jb
dec
jae
sub
dec
ds
inc
in
orl
mov
adc
je
add
hlt
loopne
sbb
imul
lods
rcll
sub
jne
daa
adc
sbb
jns
aam
mov
push
mov
and
xor
xor
sahf
mov
in
adc
sub
lods
pop
outsb
rcll
push
jb
pop
dec
lods
jmp
adc
sbb
rcll
push
insb
mov
push
xchg
nop
cmpsl
mov
arpl
les
lret
push
fs
sub
cld
in
test
mov
aad
clc
orl
cmc
or
jg
into
mov
mov
jns
outsb
aam
adc
sbb
push
fistpl
jns
rclb
out
adc
enter
dec
pop
lcall
push
inc
rcrb
int
inc
sbb
aam
in
add
push
leave
add
imul
mov
jbe
sub
jg
test
push
mov
fucom
scas
aad
xor
mov
xchg
rorb
lahf
inc
fiaddl
mov
cmpsb
pop
cs
enter
in
ja
push
shlb
adc
test
mov
jb
and
inc
ss
insl
inc
inc
add
icebp
std
addr16
and
cmp
mov
pop
pop
jnp
pusha
add
pop
cmp
addb
or
xor
repnz
sti
push
add
repnz
mov
das
adc
mov
xchg
insw
push
outsb
mov
out
aaa
adc
xor
sub
ljmp
xor
cmp
jo
stos
loop
add
pop
ljmp
adc
dec
inc
mov
sti
mov
mov
mov
jg
inc
test
or
rolb
sbb
jge
and
sbb
andl
sub
pusha
scas
or
cs
iret
cmp
xor
lods
sub
ljmp
mov
add
popl
ljmp
cmpl
stc
shlb
cmp
outsl
test
xor
or
mov
orl
je
insl
lods
lcall
lock
or
mov
andl
call
xor
cld
lret
test
or
cmpsl
pop
aam
xor
lret
in
add
fsubrl
add
pop
jge
mov
sti
xlat
sbb
and
je
push
xchg
sahf
dec
dec
daa
inc
divl
mov
mov
dec
sub
and
mov
pop
jae
add
loop
stc
lock
push
fs
repz
add
or
mov
cwtl
adc
jnp
or
xlat
xor
cmpsl
or
inc
lcall
es
xchg
loop
xor
movsl
loope
cmp
xchg
lcall
jge
lock
push
inc
out
adc
orl
push
dec
inc
push
nop
movl
arpl
pop
cmpsb
cmp
mov
jnp
mov
in
bt
push
xor
idivl
jl
out
test
push
call
gs
mov
test
clc
jns
mov
sub
jmp
sbb
mov
in
inc
cli
push
les
shll
out
cltd
rolb
inc
shlb
out
loop
mov
inc
aas
ret
fcmovnbe
outsb
in
mov
es
imul
mov
adc
or
fdivl
rcr
loope
inc
mov
loopne
push
gs
movsb
lods
inc
pusha
fstpl
loopne
lahf
fwait
lahf
sti
pop
ret
pop
dec
xchg
aas
mov
dec
sbb
jmp
cmp
pop
aas
dec
inc
sub
das
aam
add
test
in
lods
rcll
mov
sahf
pushf
cmp
fcmovnb
push
iret
xchg
jecxz
mov
movsb
arpl
pop
jmp
dec
mov
adc
mov
sub
jno
dec
fs
std
stos
sub
inc
jns
or
test
jge
icebp
ret
mov
adc
pop
pushf
fsubrs
inc
jno
xor
jge
repz
xchg
dec
xor
adc
add
sub
sbb
push
sub
pop
mov
inc
push
fiadds
or
popf
xchg
cmp
ss
aam
fadd
fwait
dec
pop
fdivr
adc
push
int3
jecxz
mov
mov
dec
int
pop
int3
outsb
test
and
push
pop
addl
fwait
push
sbb
xor
fiadds
cmpb
sub
lds
scas
mov
cwtl
loopne
aaa
or
dec
popf
xchg
sbb
mov
pop
insl
push
push
dec
xchg
into
xor
xchg
test
movsl
addr16
pop
add
in
daa
leave
jb
mov
jg
cli
mov
sub
lcall
aaa
in
mov
mov
sub
cmp
mov
mov
test
sub
adc
hlt
scas
in
mov
or
sbb
and
add
jl
xor
and
adc
inc
add
jg
ret
loope
stos
xchg
mov
lret
fisttpl
xchg
xchg
enter
int3
outsl
aas
int3
int3
leave
xchg
fwait
push
cmp
xchg
sbb
fs
clc
popf
js
mul
xor
xchg
dec
fists
push
repnz
mov
or
xor
adc
and
adc
or
lea
jae
jno
jmp
dec
mov
mov
add
mov
lods
cmp
jae
xor
js
sub
ret
daa
int
ds
inc
jmp
pusha
or
mov
pop
mov
jae
mov
cmp
adc
inc
and
and
adc
xor
xor
dec
subb
fsubrl
ret
stos
mov
scas
pop
cld
jb
in
stc
in
and
xor
dec
jae
std
stc
call
lock
gs
sbb
mov
cmpsl
test
xor
popa
jno
daa
xchg
movsl
idiv
cmp
enter
int
xchg
rdpmc
xchg
xor
lock
lret
or
sbb
jnp
jb
push
sub
mov
jb
add
adc
xor
scas
fsub
lret
dec
xchg
xchg
pop
sbb
xor
push
xchg
gs
int
in
int3
test
ds
dec
mov
xchg
mov
push
mov
js
fstpt
push
sbb
push
mov
xchg
lahf
dec
aam
scas
add
inc
pop
outsl
inc
jbe
xchg
aam
mov
inc
inc
movsbl
push
cltd
xor
test
push
out
inc
mov
test
mov
cmpsb
jle
in
pop
shlb
pop
sbb
in
cld
ret
aad
or
cmp
test
les
mov
inc
stos
idivb
inc
xor
lret
ret
inc
imul
test
imul
enter
std
dec
xchg
int
sbb
mov
bswap
mov
sbb
and
push
jno
xchg
ljmp
add
push
scas
inc
stos
xor
mov
jb
cmp
xchg
das
mov
icebp
and
pop
mov
pop
popf
xor
cmp
cmp
cltd
lock
inc
aaa
push
adc
pusha
xor
jnp
adc
sub
jne
rolb
rcrb
outsl
int3
push
mov
dec
cmc
clc
int3
call
xor
and
loopne
xchg
dec
sub
mov
test
push
repnz
dec
cltd
jb,pt
pop
mov
mov
scas
mov
cld
shlb
push
mov
decl
and
push
lahf
outsb
or
add
adc
jmp
mov
pop
fs
notb
pop
and
jp
in
mov
bnd
lods
pop
add
xchg
push
adc
inc
cmpsb
ljmp
enter
dec
insb
icebp
push
sub
call
and
jno
mov
sbb
scas
mov
push
mov
jo
dec
subb
push
dec
jg
xchg
mov
xor
test
push
adc
cmc
push
call
lret
repz
cld
or
stos
es
hlt
fcoms
sbb
adc
jnp
xor
lcall
jl
push
jl
adc
sub
sti
testl
ja
or
inc
shrl
lods
sti
xchg
or
inc
in
lds
dec
push
fdivs
sub
ret
sarl
jnp
sub
testl
aas
cmp
push
jns
int3
int3
loope
iret
and
xchg
push
aam
test
fsubrl
in
mov
cmp
add
mov
mov
test
ret
fstpl
cwtl
mov
or
nop
inc
aad
data16
mov
jae
fsubrl
repnz
rorb
and
xor
je
sub
jnp
in
shrl
inc
addr16
roll
cmp
es
sub
fsubrl
or
test
jo
ljmp
and
mov
sub
lods
mov
push
or
or
and
jbe
xchg
sti
dec
dec
divl
out
pop
leave
dec
aaa
je
jne
xchg
mov
subl
dec
ret
or
fldt
push
add
cmp
mov
mov
cmpsb
bound
jge
sub
jo
jmp
xor
out
lods
mov
jmp
les
sbb
inc
fwait
mov
push
cwtl
adc
das
jmp
add
xorb
stc
fwait
pop
lock
jmp
push
cmpsb
mov
imul
sub
sahf
into
popl
pop
js
pop
pop
xchg
mov
cmp
inc
pop
inc
xchg
lods
arpl
aas
inc
outsl
pusha
pusha
cmpsb
add
xchg
mov
lret
gs
jp
ret
or
push
test
in
pushaw
sahf
test
pop
or
das
or
repz
dec
sub
inc
je
rcrl
mov
or
decl
or
add
add
sbb
mov
push
mov
aad
adc
scas
sub
or
in
sbb
loopne
mov
mov
sbb
cltd
loopne
test
cld
pushf
jns
out
sub
inc
adc
gs
ret
insl
mov
mov
sahf
sub
adc
mov
int
mov
pop
push
push
add
sub
fsubr
sbbl
jp
sbb
jns
adc
xchg
fs
scas
adc
dec
or
ret
push
loopne
movsl
push
in
sbb
pop
and
and
xor
cs
shlb
iret
dec
sbb
jge
outsl
iret
cmp
mov
cltd
pop
cmp
rcl
les
aaa
iret
test
adc
xchg
mov
aad
jl
loopne
out
fldenv
pop
mov
push
push
jae
subb
pop
or
jnp
pop
pop
cli
sub
xor
mov
pushf
push
xchg
out
cmpb
sbb
cmp
aaa
fadd
add
sbb
dec
ja
loop
rcr
adc
mov
xchg
mov
mov
add
cmpsb
aaa
adc
dec
outsb
adc
fists
pop
jmp
push
rcll
inc
das
jecxz
je,pn
xchg
loopne
cmp
aas
add
pop
push
jnp
and
mov
clc
stos
mov
pop
xchg
leave
adc
dec
mov
inc
aaa
fisttps
xchg
addr16
pop
sub
cmpl
sahf
lcall
xor
xor
cmpsl
push
cld
into
push
stos
sbb
sbb
pop
clc
lds
lret
int
jmp
xchg
ret
pop
push
pop
mov
test
mov
daa
xchg
aam
loop
sub
push
cmp
int
dec
cs
pop
push
pop
into
enter
into
cmpsb
iret
ret
imul
cmpsl
sbb
push
or
nop
les
icebp
push
add
sbb
aad
fcomps
jae
mov
dec
lea
xchg
jae
daa
pop
jg
fisttps
cmp
fisubrl
loope
mov
xchg
negl
xor
cs
fdivr
push
pop
mov
das
lret
mov
push
or
dec
xchg
movsb
add
addl
dec
es
imul
nop
fnsave
mov
or
jmp
mov
xchg
xor
ret
into
push
cmp
jo
xchg
mull
sbb
movb
adc
inc
sbb
push
inc
push
adc
xchg
xor
data16
adc
sub
fidivrs
add
push
dec
add
xchg
adc
mov
pop
cli
outsl
mov
xor
sub
inc
add
cs
xor
daa
je
loop
push
mov
sti
sbb
sbb
inc
jnp
scas
popf
xchg
lea
cmp
shrb
sub
pop
cltd
sub
ja
adc
mov
sub
push
pop
in
xchg
faddl
mov
or
dec
adc
arpl
mov
xchg
mov
xchg
lret
jae
cmp
imul
pop
loope
push
mov
les
or
push
into
dec
add
xchg
push
rorl
dec
test
cmp
loop
push
out
and
leave
mov
movsl
mov
and
cmpsl
xchg
loop
mov
sub
sbb
xor
push
jno
pop
push
xorb
rcll
stos
out
adc
pop
loop
fiaddl
sub
mov
and
mov
add
and
js
jnp
test
push
xor
adc
rcrb
cmpsb
dec
repnz
xor
pop
xchg
fstl
xchg
dec
mov
pop
fildll
loop
inc
sar
mov
sub
jns
nop
xor
popf
push
scas
test
repz
push
insl
xor
test
les
and
jle
lret
mov
mov
loopne
xchg
dec
aaa
xorb
cmp
outsb
lods
lahf
xor
jmp
push
xchg
sti
or
dec
loop
and
adc
imul
inc
outsb
pop
jge
paddb
mov
and
fwait
mov
xor
loope
mov
mov
insb
adc
lcall
adc
fimuls
xchg
mov
mov
clc
cmp
mov
pop
sub
sub
enter
or
inc
xor
dec
mov
mov
pop
je
adc
xor
fnstenv
aad
popf
pop
bound
pop
daa
sub
cmp
fisubrs
rcl
sub
loope
lret
push
inc
inc
jnp
ds
inc
lds
mov
int3
into
cmp
std
cmp
or
int
adc
mov
fwait
clc
dec
nop
mov
pop
sub
pop
xor
sub
sbb
std
mov
pop
mov
cmp
add
in
mov
push
inc
lcall
jns
lods
adc
int
in
jge
ror
rol
sub
pop
movsl
std
jle
roll
inc
movsl
aam
xor
sbb
cld
stos
gs
jbe
notb
push
aad
xchg
outsb
jge
sbb
pop
in
and
jbe
xchg
frstor
ficompl
lcall
xor
or
xor
imul
mov
mov
push
mov
ret
jns
neg
mov
mov
cmpsb
les
adc
inc
dec
mov
push
mov
leave
rclb
and
xchg
stc
mov
and
stc
std
in
jle
xchg
stc
dec
inc
mov
aam
pop
insl
xchg
mov
dec
mov
push
fstpt
adc
pop
sub
add
das
pop
mov
adc
cltd
ret
cli
in
jne
fldt
adc
xchg
idiv
pop
enter
fwait
ds
rcrb
mov
mov
shrl
inc
ds
sub
cmp
cli
inc
stc
add
adc
add
jg
icebp
and
xlat
inc
sbb
loop
push
lret
mov
add
inc
mov
and
test
sbb
cld
add
xor
xchg
divb
or
mov
xor
loop
mov
cmpsb
leave
lahf
out
outsb
fs
repnz
inc
dec
cmpsl
or
lahf
push
xchg
mov
repz
jne
pop
fwait
ja
jmp
cmp
jg
lahf
push
xor
add
scas
jnp
fnsave
mov
xor
push
std
dec
mov
mov
insl
add
dec
jnp
add
push
push
mov
or
push
out
arpl
xchg
addl
je
ficomps
jge
jo
and
push
jmp
mov
mov
dec
out
sub
stc
mov
cli
sub
or
and
dec
loopne
int
xor
rcrb
sub
cld
xchg
push
lret
mov
in
lock
fidivl
sahf
mov
inc
mov
mov
aas
dec
or
icebp
mov
push
ja
xchg
insb
into
imul
mov
iret
lods
pop
repz
shll
jne
mov
in
dec
shll
cmp
jle
addr16
jl
inc
xor
daa
lcall
in
add
dec
mov
enter
cmc
dec
mov
xchg
jmp
std
xchg
push
lea
jmp
and
fdivr
test
xor
jne
out
mov
mov
cmpsl
mov
dec
jmp
hlt
fwait
jbe
cmpsl
mov
int
rorb
rcll
imul
adcl
ret
inc
xchg
pop
mov
leave
arpl
gs
fnstenv
mov
stos
push
cltd
xor
rcrl
fnstenv
inc
int
arpl
cmp
lret
aaa
testb
jbe
push
int3
sbb
paddusb
repz
icebp
lcall
popa
in
dec
sbb
cld
int3
push
and
mov
fs
sbb
lods
or
movsl
and
inc
pusha
lret
fimuls
addr16
sub
pop
adcb
sub
cmpsl
in
out
mov
inc
mov
or
xor
int3
lahf
adc
xchg
xchg
int3
mov
mov
insb
ret
sub
mov
mov
push
jbe
push
notb
add
inc
pop
mov
dec
iret
movsl
call
mov
js
mov
or
jo
xlat
icebp
jecxz
xchg
xlat
pop
cli
cmp
xor
adc
push
in
jae
mov
mov
test
in
inc
outsl
aas
dec
pop
inc
stos
cmp
fisttps
fs
add
cmp
mov
pop
push
aam
sbb
push
lea
cld
shl
xchg
pop
and
les
cli
jno
lds
add
mov
xor
pop
insl
xor
ss
and
insl
jae
std
push
repz
jns
add
stc
push
pop
and
fimuls
push
sbb
dec
popa
pop
fucomip
adc
cmp
push
sti
fstpl
mov
std
lods
or
pop
popa
cli
push
int3
push
fsubl
or
add
sub
pop
sarb
stos
jae
inc
mov
pusha
add
stos
pusha
sub
insl
xlat
sub
ss
stc
iret
out
mov
fstp
cmp
aad
mov
jae
xchg
xchg
imul
insl
out
mov
rcl
push
fld
mov
in
cmpsl
bound
mov
cmpsb
mov
jmp
mov
mov
dec
mov
inc
sahf
pop
lret
and
xchg
mov
jge
scas
adc
xchg
xchg
int3
stc
outsl
cmp
lret
fistl
lea
into
inc
sbb
aas
and
dec
mov
and
jmp
aam
movsl
movsl
cmp
mov
shlb
xor
or
push
push
fsubrl
push
hlt
jmp
xchg
xor
push
les
test
cmp
popa
mov
jne
idivb
inc
inc
hlt
sahf
xchg
test
insl
in
or
inc
mov
jo
repnz
rclb
orb
fisubrs
rcr
adcl
insl
xchg
movsb
test
push
out
aas
sub
sbb
mov
rol
jge
mov
xchg
sub
jo
jle
mov
gs
jb
lahf
and
testb
xlat
mov
int
xlat
sub
mov
and
lds
lock
xor
sub
jl
and
pop
lds
sub
mov
cmp
mov
jge
les
xchg
push
sbb
out
dec
and
in
jg
or
fsubrl
and
push
push
inc
dec
in
sub
cmc
and
inc
inc
hlt
and
push
daa
dec
aas
ljmp
jg
cmp
rclb
and
das
cmc
test
push
dec
push
cltd
mov
pop
insb
movsb
ss
xor
out
pop
jbe
inc
add
sub
and
cld
sbb
gs
int
jo
pushf
xor
push
hlt
fstpl
int
fildl
loopne
mov
jnp
out
cmp
in
sarl
mov
mov
inc
push
nop
fsub
jno
xchg
rol
fwait
jno
pop
sbb
sbb
xor
sub
lods
adc
mov
in
mov
xor
in
and
inc
push
dec
add
sub
repz
orl
dec
mov
call
adc
push
cli
xchg
cwtl
adc
xchg
push
xlat
mov
lahf
or
decb
jle
push
adc
xor
cmp
loopne
adc
pop
pushf
mov
leave
sbb
dec
and
xchg
lahf
push
daa
xlat
cmp
mov
push
and
ds
push
and
sub
jns
or
xor
popf
xchg
mov
sbb
sbb
mov
je
mov
jl
mov
mov
icebp
enter
rcrl
adc
orb
xor
ljmp
jl
fldl
xchg
xchg
or
mov
movsb
decl
rcll
into
addb
adc
push
movsl
dec
orb
adc
rorb
mov
loopne
ret
xchg
ficompl
adc
or
lret
daa
mov
adc
mov
jmp
popf
arpl
sbbb
lret
adc
arpl
add
jp
cmpsb
fwait
call
pop
jo
push
xchg
mov
cli
outsb
jg
sub
fwait
nop
jb
je
dec
sbb
and
mov
sahf
test
lahf
out
and
xor
push
loopne
rcl
pop
mov
ss
popa
cwtl
push
jg
es
mov
lahf
in
sub
xor
mov
mov
xchg
inc
xchg
js
mov
test
jo
pop
pop
sbb
push
pop
lret
pushf
lret
fmulp
sub
sbb
loope
pop
cmp
lret
mov
sub
pusha
xchg
shll
subl
in
cmp
lret
push
pop
sarl
movsl
xchg
std
or
cltd
call
mov
int
or
in
in
lds
mov
test
dec
push
pop
mov
jg
add
dec
idivl
inc
in
xor
scas
xor
nop
or
lods
jecxz
lret
in
adc
roll
bound
sbb
andl
cmp
dec
insb
mov
push
xchg
push
int
and
pop
ljmp
fbstp
fistps
sub
mov
sbb
in
addl
jp
icebp
push
mov
scas
jecxz
out
add
adc
call
inc
mov
sbb
sub
lods
inc
jo
dec
shlb
je
sbb
inc
dec
repz
and
lret
sarl
imul
lods
loop
add
out
mov
ja
jg
dec
scas
pop
lahf
scas
iret
push
xchg
add
mov
in
ds
add
data16
into
cwtl
test
push
push
pop
jg
or
mov
jge
xorl
jae
xchg
sbb
pop
inc
aaa
adc
lods
push
mov
mov
pusha
pop
mov
xlat
dec
cmp
fs
iret
stos
ljmp
inc
pop
xchg
sbb
or
sbb
lods
fwait
mov
xchg
mov
stc
cmc
push
movsl
sub
inc
add
sbb
mov
or
pop
sub
arpl
fldcw
sar
xor
into
adc
jmp
fisubrs
xchg
test
out
mov
ret
call
add
jge
ficoms
jp
pop
outsb
jo
mov
and
or
movsl
in
sub
test
call
aaa
outsl
bound
push
cmp
ljmp
lret
jmp
dec
mov
mov
or
xchg
adc
jae
lds
push
les
cli
lea
push
add
ljmp
stos
sti
jno
push
cld
cs
mov
sub
jne
out
jo
and
xor
jle
inc
pop
mov
push
add
ljmp
xor
cmp
xchg
cmp
lret
xchg
xorl
in
cld
dec
shlb
je
gs
jmp
cwtl
push
hlt
mov
dec
mov
clc
shrl
movsb
add
punpckldq
stc
out
mov
lahf
pop
adc
rcrl
pop
cmp
mov
in
repz
pushf
dec
sub
rclb
and
gs
or
lods
dec
test
adc
inc
lds
subb
jp
push
mov
mov
aaa
mov
rolb
out
mov
or
not
movsb
add
jbe
in
jmp
xor
ljmp
out
push
pop
inc
cld
leave
inc
adc
arpl
js
mov
mov
in
add
xchg
push
xchg
icebp
or
std
xor
push
push
mov
sub
in
inc
clc
xchg
leave
pop
sti
sahf
cmpsl
pop
xchg
push
dec
and
ss
shl
jo
pop
enter
push
mov
jnp
mov
dec
sub
ror
insl
xchg
adc
push
jp
jno
adc
add
and
inc
adc
xor
xor
ret
sub
imul
jns
add
mov
lahf
int3
mov
insl
icebp
jns
adc
imul
cmp
adc
jg
repz
mov
cmc
and
insb
ss
add
leave
adc
les
xchg
xor
ficompl
ret
insl
dec
mov
pop
mov
xchg
stos
sbb
mov
loopne
cmp
jmp
icebp
sti
and
out
xchg
cmp
lahf
pusha
add
sub
rcll
mov
sub
add
cmp
pop
gs
fmulp
cmp
shlb
xor
pop
lret
sub
push
paddusw
dec
pop
lock
cmp
jg
ljmp
jb
inc
adc
ja
adc
fcmove
cmpb
movsb
jo
or
mov
xor
daa
mov
fstl
scas
imul
ds
jl,pn
ret
mov
divb
js
adc
and
sub
ljmp
mov
aas
fistl
xchg
flds
cmpsb
test
mov
in
mov
addr16
fs
inc
sti
fs
mov
dec
cmp
xchg
arpl
jle
stos
or
sub
jae
repnz
push
lret
cmpsl
pop
cmp
xchg
icebp
out
int3
sbb
cmp
or
pop
adc
xchg
push
pop
sarl
out
jl
xchg
outsl
and
or
iret
and
push
xchg
outsb
fst
jge
jb
sbb
mov
sub
cwtl
xlat
call
divl
jno
mov
fs
and
fwait
jl
fbstp
movsb
push
mov
insl
pusha
mov
inc
pop
or
cmp
mov
push
mov
push
lcall
subb
sti
adc
push
lods
push
add
out
jmp
sub
ja
push
mov
je
pop
pop
mov
out
sbb
ret
mov
mov
daa
pop
data16
pop
mov
xlat
sub
xor
ret
lock
enter
bound
sbb
repz
jo
ljmp
jge
scas
lea
inc
cmp
mov
cld
dec
add
leave
mov
xchg
xchg
jecxz
sbb
aas
popf
scas
mov
daa
repnz
shlb
xor
leave
pop
aad
sub
mov
aad
cltd
jp,pn
inc
out
adc
pop
adc
and
and
adc
and
getsec
insb
dec
ret
sub
push
or
and
mov
adcb
ja
and
dec
imul
xchg
testb
xor
dec
in
test
lret
adc
push
mov
mov
pop
dec
jmp
add
cmp
popf
fldl
and
lods
xchg
call
movsl
xchg
movsb
inc
enter
ja
jo
mov
adc
imul
mov
mov
ret
lock
shrb
or
in
cld
mov
push
mov
pop
push
ficompl
pop
mov
add
scas
lds
dec
lods
lret
adc
std
mov
pop
data16
sub
inc
mov
jmp
mov
in
movsb
mov
jl
ficoms
and
je
dec
ret
int
mov
inc
cwtl
xchg
mov
cmp
stos
in
mov
js
movsb
fdivl
cmpsb
decb
sbb
repz
adc
js
and
pop
adc
ret
and
pushf
out
imul
bound
sbb
dec
mov
movsb
xor
push
dec
or
lret
pop
mov
aaa
sbb
ret
das
mov
pcmpgtd
cmpsl
aas
jl
pushf
or
cmp
mov
int
and
fcompl
lock
ss
dec
mov
pop
scas
mov
lret
adc
int
lods
lods
xchg
loope
in
inc
ja
imul
inc
pop
sub
or
push
dec
xchg
pop
jle
jns
std
in
daa
and
sub
ja
call
cmp
mov
inc
mov
call
leave
leave
adc
mov
cwtl
pusha
cli
sbb
cwtl
pop
push
adc
dec
sbb
push
jo
add
cltd
sti
ja
jge
lea
xchg
add
repz
mov
cmp
notb
pusha
or
push
mov
adc
jno
out
mov
jns
dec
test
mov
aaa
cmp
jp
faddl
mov
cs
movb
pop
faddl
mov
mov
mov
daa
mov
repz
das
xchg
cs
mov
mov
push
shll
sahf
ss
xor
lahf
in
mov
outsb
imul
stc
mov
bound
movsb
int
hlt
je
stos
cltd
sbb
jp
inc
loope
mov
mov
cld
pop
sti
fs
repz
dec
lods
mov
mov
test
lret
mov
sub
test
test
cltd
int
stc
push
jo
push
daa
push
jle
ds
add
xchg
lcall
popa
push
ja
dec
imul
ljmp
jmp
lea
clc
out
and
or
lahf
or
fisttps
in
icebp
xchg
out
dec
loop
sub
loope
mov
lods
popf
mov
sub
data16
cmp
in
shr
adc
jns
sti
bound
jne
sub
div
pop
inc
sub
pop
mov
sub
adc
bound
js
data16
or
dec
leave
popf
dec
nop
jmp
mov
pop
or
ret
push
ds
bound
add
repnz
in
or
call
aam
jo
lcall
and
orb
xor
add
sub
push
mov
lret
out
and
aaa
sarl
jmp
mov
adc
add
sub
jno
mov
cmp
lret
mov
mov
add
ficoml
xor
les
movsl
adc
mov
scas
in
in
aam
outsb
hlt
jnp
movsl
into
std
cmpsl
mov
jl
jb,pt
sbb
es
sti
pusha
fidivrs
pushf
or
pop
dec
nop
lds
mov
loopne
cmpsb
shrl
add
cmp
rclb
icebp
mov
inc
add
fbld
movsl
and
pop
sbb
dec
sub
sarl
pusha
lock
add
out
xor
or
sbb
push
ja
add
mov
mov
stc
cli
rcrl
adc
out
and
lahf
jge
lods
hlt
shll
lahf
popf
cmp
insl
lods
xor
add
mov
movsb
hlt
pushf
and
fildll
xor
pusha
icebp
and
cmpsb
jl
pop
mov
mov
or
stc
jb
test
xlat
inc
in
int
mov
fildl
sbb
pop
andl
mov
xchg
aad
sti
int3
adc
and
mov
mov
pop
subl
push
ljmp
jo
xchg
dec
xchg
push
lds
pop
sarb
pop
outsl
aam
js
mov
xchg
push
mov
fdivl
or
sub
imul
sub
push
mov
xor
fbstp
push
movsb
fidivs
xor
mov
repz
push
xchg
out
mov
dec
push
jae
dec
pushf
sub
inc
inc
lds
dec
jnp
ljmp
mulb
mov
add
shll
sbb
sub
or
clc
jg
xor
clc
movsb
pusha
adc
add
fldcw
mov
or
dec
popa
mov
out
sti
xchg
mov
sbb
popf
pop
outsb
ret
xchg
cs
cwtl
add
pop
rolb
in
lods
pop
cs
mov
sbb
in
shrb
call
in
inc
sbb
pop
popa
mov
repz
adc
idiv
pop
nop
jg
xchg
repnz
test
jp
lea
adc
ja
les
call
lock
xchg
cmpb
int3
testb
xor
mov
add
xchg
lods
rcl
scas
inc
int
dec
jns
divps
cmpsl
ret
in
jge
mov
and
shl
xlat
cs
cs
roll
lcall
jns
or
and
sbb
xor
out
fstl
ret
dec
stos
imul
sbb
imul
or
pusha
andl
sub
pop
and
ss
lods
mov
in
notl
lret
pop
pop
fcoml
add
int3
cwtl
lahf
nop
mov
add
out
mov
sub
in
xchg
jp,pt
ret
sbb
adc
les
cld
movsl
cmpb
lahf
pushf
test
mov
jge
movsb
fwait
das
fwait
data16
xlat
sbb
and
les
fldcw
out
mov
adc
mov
es
xor
lahf
scas
js
outsb
or
xor
xchg
mov
stos
adcb
mov
lods
mov
cli
inc
scas
jbe
mov
pop
addr16
inc
insb
fistl
popf
pop
jb
jno
rolb
xor
sbb
cltd
lods
or
icebp
xchg
adc
or
cli
dec
pop
jo
pop
xor
rorl
push
arpl
subb
adc
daa
out
or
mov
popa
cmpsb
push
cmp
sti
paddsb
aaa
repnz
push
adc
in
dec
mov
add
mov
xchg
movsl
add
add
dec
les
cmp
xchg
fisubrs
adc
sub
es
fsubl
mov
fidivl
int3
sub
sub
imul
mov
or
inc
push
xchg
test
mov
mov
mov
test
jb
shlb
adc
out
xor
in
daa
push
cmp
popf
fstpl
loopne
lods
ja
sbb
sub
imul
lahf
xchg
scas
or
popa
push
jmp
test
inc
pop
iret
out
dec
mov
ret
or
ret
divb
ds
cmp
fildl
rcrb
test
bound
aaa
ror
mov
push
ljmp
mov
popa
in
sub
sub
lret
cmp
outsb
mov
fildl
inc
push
xchg
insb
and
sub
into
dec
lock
adc
pop
and
jne
lea
out
sbb
cs
xor
nop
loop
imul
in
dec
inc
sub
repnz
clc
or
dec
repnz
outsl
cmp
adc
sbb
les
xchg
popf
orl
lods
hlt
xchg
test
loopne
cltd
in
sbb
and
sub
mov
jp
push
cld
frndint
adc
pop
arpl
ss
add
out
add
pop
add
mov
scas
int
push
jmp
popf
imul
jb
and
rclb
mov
lods
pop
int3
xchg
pop
pop
cwtl
in
and
popf
add
mov
pop
add
jne
push
adc
xchg
mov
ljmp
mov
sbb
mov
add
out
mov
mov
xchg
mov
sti
and
je
pushf
push
popa
fildl
or
fcmovne
mov
sub
mov
push
push
add
stc
inc
out
int
add
stc
cmp
push
arpl
cmp
push
notb
ja
ja
outsl
jne
mov
jmp
add
mov
push
ljmp
sarl
ja
lcall
loope
repnz
cmp
mov
mov
bound
divb
mov
call
pop
mov
decb
cmp
fisubrs
inc
sbb
int3
dec
addr16
jno
lahf
call
pop
mov
sub
pop
jg
ret
jnp
sbb
lea
ffree
dec
cmp
aas
add
mov
push
or
mov
cmp
test
cs
scas
movsl
push
ficompl
arpl
sub
adc
mov
mov
nop
pop
mov
lock
ret
arpl
cli
out
sub
adc
cmp
push
sar
cmp
pop
sbb
stc
test
push
lret
sahf
pop
adc
dec
aaa
cmp
adc
jle
xor
andl
jl
jbe
lock
fnstcw
data16
inc
loop
push
ljmp
ss
mov
jne
test
mov
pushf
rorb
sbb
insb
hlt
fistl
xchg
xchg
mov
ds
jae
repnz
fwait
inc
test
jo
or
xor
jg
xchg
add
xlat
stc
lahf
push
inc
imul
lock
xchg
push
mov
movb
call
inc
push
out
push
sub
lea
lea
jbe
xor
jp
xchg
in
lea
push
xor
fcmovbe
dec
test
insb
dec
outsl
arpl
xchg
in
xchg
xor
mov
or
or
fs
push
lahf
inc
sahf
out
cmpsl
jge
mov
push
testl
sbb
push
xlat
push
cmc
jmp
fdivrp
decb
pop
and
call
sbb
in
mov
cmp
jmp
loope
outsl
or
mov
mov
rcll
mov
insl
outsb
lret
leave
push
es
jne,pn
pop
mov
test
lea
inc
mov
pop
insb
sub
add
jb
movl
subb
enter
stc
sub
pop
je
int3
je
sbbb
fimuls
inc
pushf
inc
jecxz
lret
and
scas
bsf
fiaddl
les
repnz
loope
xchg
mov
adc
in
and
sub
push
push
imulb
add
out
mov
jns
and
ror
lock
jmp
dec
add
outsb
sub
ret
scas
jecxz
lret
inc
dec
hlt
inc
mov
jnp
push
pop
add
mov
enter
mov
adc
xchg
dec
dec
mov
imul
aam
shrb
stc
mov
call
fwait
les
ret
hlt
jmp
inc
rolb
sub
gs
cmp
adc
add
nop
xchg
adc
insl
jbe
cmp
jp
ds
mov
push
out
bound
fnsave
pop
sbb
adc
mov
les
scas
xor
enter
sbb
daa
or
xchg
arpl
or
mov
add
inc
push
sbb
xlat
int
mov
push
push
push
out
popa
addr16
cltd
xchg
xchg
or
ljmp
and
ds
orl
aad
jns
adc
jl
jge
xchg
movsb
int3
jmp
jle
inc
add
imul
sbb
test
ret
jecxz
cwtl
std
bound
xor
movsl
or
xlat
aad
mov
inc
adc
add
add
jns
fistpll
movsl
test
lds
pop
and
xchg
popa
xchg
sbb
cs
jle
rcrb
shlb
aas
stos
cs
jae
or
sub
xchg
outsb
cmp
adc
sub
mov
dec
jl
pop
data16
call
xor
dec
addr16
xchg
fsin
pop
pop
das
and
adc
sahf
xchg
mov
jecxz
aaa
pushf
sbb
jns
mov
gs
insl
mov
mov
xor
add
adc
cld
insl
shlb
nop
lods
rcr
or
punpckhdq
and
out
jecxz
lds
jb
imul
cli
mov
sti
or
mov
pop
icebp
jecxz
add
dec
sti
jne
js
mov
pop
jge
cmp
mov
outsl
pop
movsb
popa
jne
lds
lods
jmp
adc
movsl
dec
mov
cmc
lret
lds
dec
jnp
pop
sbb
adc
sub
push
das
fstpt
in
xlat
sub
out
mov
dec
fnstenv
loop
lcall
jbe
insl
mov
sub
mov
rcr
dec
repz
lea
lds
call
xchg
notl
in
mov
lahf
aam
mov
add
mov
pop
push
scas
fwait
sub
cmp
scas
stc
cmp
test
inc
add
sbb
lret
xchg
xchg
push
cmp
mov
and
movsl
test
pop
jle
push
in
aad
xchg
btc
and
and
arpl
fiadds
add
pop
test
stos
xlat
jo
sbb
ljmp
push
es
add
rcrl
sub
scas
mov
rclb
inc
pop
push
jbe
push
lahf
ds
inc
xor
add
inc
cmp
sub
lea
aam
dec
mov
jge
call
xor
sub
mov
shrl
ret
pop
jp
je
lods
cmp
sbb
in
push
push
outsb
mov
add
pop
rol
or
mov
mov
std
inc
sub
repnz
out
mov
sub
or
test
mov
outsl
add
repnz
and
mov
outsb
xor
mov
cmp
pushf
xchg
xor
push
inc
lds
xor
mov
or
lods
and
xchg
fidivs
es
les
adc
pop
lods
fwait
sbb
and
outsb
cli
leave
sub
mulb
inc
popf
pop
std
jb
mov
pop
mov
fs
lahf
cmp
je
mov
subb
jbe
test
movsl
adc
xor
fisttpl
ss
fcmovbe
xchg
scas
xor
fcoml
add
xor
sub
dec
pop
xor
jne
dec
sub
ret
push
push
add
repnz
push
and
add
clc
rcll
sahf
loopne
cmp
outsb
mov
jg
cltd
scas
ffree
jecxz
ffreep
stc
lret
jb
insl
and
gs
ja
lods
fdivl
add
insb
cwtl
imul
mov
sbb
sub
pop
fisubrs
inc
adc
pop
in
imul
out
testb
pop
pushf
mov
hlt
lock
push
inc
ret
cmp
mov
lods
mov
inc
dec
lods
pop
jmp
pop
repnz
xor
scas
inc
data16
punpckhdq
jp
mov
mov
popa
mov
dec
dec
lcall
push
cmc
pop
dec
lds
jno
xchg
test
enter
sbbb
test
add
sbb
lock
mov
mov
fs
pop
sub
addb
jl
test
loopne
push
adc
cmp
ret
mov
js
test
mov
jb
scas
push
cltd
lea
xchg
je
in
or
hlt
pusha
addl
ds
pushf
movsl
stos
mov
xchg
clc
mov
imul
popl
mov
fwait
loopne
pop
outsb
sahf
dec
leave
insl
std
mov
sahf
pop
mov
pop
jo
cmp
cmpb
stos
pop
dec
dec
xchg
out
insl
dec
in
leave
push
dec
dec
push
inc
mov
jmp
pop
addb
xchg
outsl
cmpsl
pusha
add
sub
xchg
test
sti
add
mov
mov
jmp
xchg
adc
fnsave
ret
lods
jge
in
xchg
out
mov
outsl
leave
lods
imul
sbb
push
ret
mov
cmpsl
mov
jns
es
sub
inc
xchg
sbb
cmp
pop
jne
lret
loop
and
mov
lahf
and
push
push
adc
pop
in
sbb
in
sub
push
cld
sbb
and
test
mov
in
and
mov
jns
adc
xor
add
mov
inc
popa
in
or
mov
fistpl
mov
push
sub
push
scas
push
fadds
or
in
push
in
inc
mov
mov
add
fwait
arpl
dec
gs
push
inc
cmpb
leave
pushf
repnz
ret
cmp
stos
imulb
inc
cs
int
ljmp
or
mov
push
daa
pop
mov
cld
ds
or
adc
aad
xchg
add
fdivrs
jp
sbb
mov
mov
mov
fs
xchg
in
pop
pop
xor
xchg
mov
icebp
jb
shlb
push
mov
push
pusha
sarb
repz
push
xchg
imul
call
xchg
lods
adc
int3
adc
dec
sbbl
iret
jp
jmp
repnz
xor
pop
jno
lds
les
ficoms
repz
fsts
sbb
mov
inc
pop
cmpsb
rclb
incb
pop
add
adcb
outsb
repnz
das
paddsb
and
push
sbb
cmp
test
fsts
mov
push
mov
arpl
mov
aaa
rcll
cmpsb
add
sbb
mov
sbb
jo
call
aaa
inc
enter
push
dec
lret
mov
xor
mov
xchg
mov
pop
sbb
movsb
cli
xor
orl
icebp
adc
jne
xorl
out
clc
sahf
lods
pushf
mov
push
or
push
mov
fwait
cs
pop
lret
test
xor
xchg
inc
add
cmp
outsb
test
pop
cmp
fiaddl
daa
sbb
lock
jns
inc
push
adc
ds
pop
mov
push
enter
pop
enter
mov
adc
adc
fs
cmp
sub
sar
inc
mov
add
iret
mov
xchg
je
add
dec
add
push
hlt
fidivrl
popf
fwait
test
add
movsb
repz
jmp
inc
adcl
mov
je
xor
pusha
pop
jno
xchg
aas
test
and
xchg
pop
test
push
sub
clc
ficoml
fsubl
xchg
stc
fisubs
and
divl
cs
sbbl
aaa
fiaddl
sar
aam
mov
inc
jecxz
int3
adc
xchg
iret
xlat
mov
pop
cwtl
push
iret
jb
aam
inc
loop
sbb
pusha
scas
add
xor
stos
pop
cmp
imul
push
and
out
mov
out
aad
lret
scas
mov
lods
std
lret
mov
mov
fstps
or
or
je
dec
push
inc
ss
or
xlat
sub
inc
repnz
pushf
add
call
andb
std
lock
mov
orb
push
pop
and
lret
in
enter
outsb
das
push
add
pop
int
cmp
in
dec
in
cmpl
jmp
enter
sbb
imul
xchg
bound
test
or
adc
leave
push
mov
mov
arpl
xor
mov
xchg
xchg
outsb
jle
sbbb
adc
and
add
dec
js
push
cmp
dec
ret
push
scas
int3
add
xchg
cltd
repz
inc
nop
jnp
std
jmp
jl
jmp
push
loope
mov
dec
ret
in
fmuls
shrl
out
cld
test
and
ret
pop
shlb
scas
in
inc
add
fstp
add
std
jb
mov
mov
xchg
xchg
xor
adc
add
cmpl
sbb
mov
pop
xchg
inc
mov
adc
add
ds
bound
outsl
lret
and
sbb
add
jp
cs
fchs
sbb
nop
scas
shlb
mov
in
int
daa
jno
xchg
dec
ficoms
jle
insb
cmp
mov
inc
cmpsb
shrl
test
daa
test
das
adcb
mov
add
cmp
dec
sub
dec
dec
test
add
fbstp
mov
vphsubbw
pushf
sahf
adc
mov
cmp
imul
cmp
out
decl
mov
in
or
stc
add
inc
insl
or
and
and
xor
dec
pop
clc
icebp
jecxz
adc
sbb
pop
cmpsl
cld
dec
lret
push
sbb
mov
dec
mov
jl
nop
cmp
inc
and
fsubp
shrb
insl
mov
and
push
fidivrl
jb
pop
out
loopne
mov
xor
pushf
aas
test
add
mov
xchg
gs
rcrl
mov
clc
dec
jg
or
sub
pop
mov
test
inc
dec
push
adcl
ret
sar
aam
add
in
jne
movsl
jno
jmp
std
aas
rorb
jbe
pop
lcall
or
add
imul
enter
push
mov
outsb
mov
imul
outsb
outsb
xchg
je
icebp
jo
fstp
sub
add
add
and
divl
mov
stc
and
lret
fwait
loop
mov
sbb
sahf
sti
mov
call
push
movsl
mov
aam
xchg
mov
pop
mov
scas
arpl
shlb
cmp
out
sub
nop
add
pop
repz
or
fiaddl
pop
adc
mov
xchg
xchg
cmp
mov
fldcw
bound
popf
cmp
pop
outsb
sbb
into
pop
jg
test
aad
xchg
sahf
jnp
xor
in
in
ljmp
xchg
out
in
adc
sbb
loop
add
push
pop
ficompl
sahf
cmp
fnstenv
mov
mov
adc
push
jg
lea
xchg
mov
push
mov
sbb
xor
push
sbb
sub
push
xor
les
loop
jmp
or
popa
cltd
lock
call
aam
lods
mov
fistps
pop
dec
aam
push
xor
and
sbb
pushf
testl
daa
inc
add
jbe
test
dec
lea
jno
ret
aas
popf
sub
ficoml
insl
jg
sbb
sbb
daa
push
mov
add
popf
shr
fimuls
push
cmc
mov
pop
dec
outsb
mov
lods
fidivl
or
xor
mov
push
jmp
fbstp
cmp
mov
aam
add
popa
xchg
lea
pop
xor
fisubrl
xchg
xorl
xchg
sub
cmpsb
aad
test
jo
push
shrl
cltd
inc
mov
out
xchg
add
cmp
loopne
adc
out
icebp
dec
push
jle
sub
pop
iret
imul
and
jp
pop
int3
fs
sti
pcmpgtd
or
mov
or
inc
xor
test
mov
ljmp
mov
fldl
sbb
xor
fildll
jecxz
xor
bnd
pushf
push
lea
shlb
add
jbe
pop
and
inc
lods
jmp
lods
ret
dec
fcomps
movsb
mov
xor
adc
repz
mov
xchg
mov
mov
aaa
mov
inc
je
push
out
cltd
aaa
add
mov
aas
sbb
arpl
push
sbb
mov
aaa
sub
mov
xchg
adc
fdivrl
sub
lds
and
lahf
nop
call
rcrb
push
rorb
movl
pop
loop
insb
cld
aaa
call
mov
test
mov
sub
xchg
sub
add
into
inc
fwait
lahf
inc
sub
jg
bound
adc
dec
xlat
inc
dec
loopne
xchg
test
sti
mov
cmp
sub
add
inc
pop
pushf
jae
add
push
cmp
pop
pop
jns
push
xor
cmp
shll
les
jae
or
sub
fnstenv
add
jge
mov
sahf
jbe
mov
cmc
stc
test
pusha
mov
lret
mov
lods
jp
loop
mov
xchg
mov
cmpsl
subb
push
adc
mov
test
add
and
hlt
adcb
lds
xchg
cmpb
mov
mov
push
dec
pop
dec
pop
jo
jo
inc
aaa
and
jnp
jl
arpl
mov
mov
loop
mov
das
jne
and
push
sub
push
xchg
cwtl
push
lret
sbb
xchg
add
xchg
add
bound
inc
out
cmp
pop
dec
mov
repnz
and
cwtl
mov
gs
ss
and
mov
xor
sti
lock
lock
fists
ljmp
add
popf
push
mov
inc
push
nop
mov
mov
stos
add
shll
add
hlt
push
enter
add
repz
sub
or
ret
out
iret
gs
loopnew
mov
xor
cmp
and
cwtl
ds
inc
ffree
sti
ret
sbb
bound
mov
push
popa
mov
rcl
repnz
or
xchg
shll
das
addb
mov
xor
mov
cmp
push
pop
lret
or
mov
jp
jle
pop
xchg
rolb
in
aaa
aad
arpl
mov
jo
jnp
mov
xor
in
roll
xor
stos
mull
je
xorl
or
sub
dec
mov
or
push
outsl
inc
das
sti
xor
in
push
bnd
dec
shrl
aaa
push
xchg
sub
rcll
inc
or
cmp
or
and
addr16
adcb
jb
inc
pop
arpl
sysexit
outsb
jnp
adc
mov
ret
jne
sub
icebp
push
cmp
inc
mov
movsl
sbb
inc
std
imul
ret
cwtl
int
sbb
lods
inc
lock
bound
inc
xlat
ficoml
jp
shlb
inc
into
cmc
push
xchg
mov
rcl
pushf
rorl
into
mov
leave
sahf
fsubrs
dec
das
outsb
mov
lea
mov
lret
data16
cmpsl
mov
jg
call
jae
mov
add
stos
sub
daa
jb
enter
push
pop
sbb
sub
add
fs
or
icebp
mov
shr
and
call
sbb
mov
imul
mov
lods
fsts
cmp
in
scas
jl
test
jp
or
bnd
mulb
sub
daa
sbb
push
fstps
or
push
jp
and
movsb
clc
loop
movsb
repnz
sub
js
mov
push
pop
stos
sub
in
mov
in
mov
sub
mov
mov
add
shll
ret
ret
lret
mov
minps
and
jp
mov
loopne
out
mov
cltd
dec
xchg
lea
popa
incb
inc
cmpsl
in
fimull
adc
lds
andl
pop
sti
setns
and
mov
jo
xchg
mov
push
pop
les
movsl
shll
sbb
mov
mov
lods
stos
add
sbbb
stos
push
loopne
dec
adc
pop
cmc
fnstenv
pop
test
push
push
mov
push
enter
inc
mov
cmp
dec
and
stos
add
js
test
mov
or
je
mov
repnz
rorl
xchg
sarl
aad
push
adc
mov
addb
pop
loop
not
fs
movsb
lahf
lret
sub
push
xchg
xor
lahf
push
movsb
js
xor
popa
test
pop
mov
dec
neg
call
mov
in
test
xchg
cmp
xor
pusha
das
je
fistps
pop
xchg
ret
xchg
sbb
mov
les
mov
add
jl
pop
into
inc
int
call
add
ja
ret
inc
out
add
lods
mov
or
lcall
push
mov
adc
mov
lds
xchg
aam
inc
mov
push
pop
es
std
adc
mov
lcall
fdivr
xor
shl
aaa
and
pop
push
inc
adc
adc
sahf
repz
lea
pop
out
cmp
sub
mov
xor
leave
lds
in
fmul
pop
sub
ss
push
jmp
stos
inc
icebp
add
outsl
sub
bound
inc
adc
push
xchg
andb
andl
jg
sub
push
out
mov
pop
cmp
rcr
sbbb
add
push
inc
push
sub
outsl
jge
aad
stc
jbe
xchg
jo
add
dec
in
mov
test
sub
lret
lds
enter
push
mov
into
pop
dec
add
shlb
jne
cmpsb
jnp
adc
pushf
jns
jae
aas
test
ss
ret
sti
and
scas
test
rcll
jge
dec
inc
loop
inc
enter
adc
subb
lahf
fs
sub
xchg
mov
jecxz
adc
mov
pop
lahf
std
sub
mov
mov
stos
test
scas
cwtl
outsb
jg
insl
out
and
in
imul
xor
outsb
or
dec
int3
dec
lsl
mov
dec
addr16
xchg
push
mov
sub
jge
xor
aaa
stos
push
inc
fisubs
xor
pop
push
mov
fwait
adc
xchg
mov
fldcw
pop
xchg
jl
adc
mov
push
sahf
lock
adc
andl
cltd
cmc
cmp
ret
fs
sub
pop
and
into
xchg
lret
test
push
das
es
inc
dec
inc
xchg
sub
ret
repnz
ljmp
jno
mov
dec
daa
jl
adc
sti
das
shl
sub
js
inc
imul
dec
sbb
or
add
mov
aas
lret
call
addr16
test
scas
cltd
pop
xor
xor
ja
aam
cmpsl
outsl
mov
int
cli
js
ds
mov
push
jae
lods
cld
or
popf
sarb
mov
mov
mov
pusha
dec
movsl
enter
fstpl
fnstenv
loopne
jnp
std
xchg
push
inc
lock
dec
sbbb
ds
adc
stos
cmp
xor
xchg
inc
lea
mov
dec
loope
std
cmp
ja
adc
fdivr
mov
hlt
mov
pop
repz
pop
outsb
stos
or
fidivl
xchg
shrl
bound
adc
fimuls
test
rclb
mov
dec
jp
js
mov
sub
sub
mov
jg
adc
loopne
mov
pop
cmp
pop
mov
sub
aaa
shll
pop
jb
pop
mov
adcl
mov
in
loopne
sbb
cli
mov
sbb
js
outsl
aad
dec
ja
movsl
adc
xor
cmp
pop
add
fnstsw
pop
addb
sbb
lahf
mov
sbb
add
test
sbb
movl
and
je
cltd
ret
lahf
xlat
das
roll
scas
out
pop
subl
fcomps
jmp
movsl
mov
mov
cmp
inc
pop
jnp
mov
push
and
xchg
jecxz
outsl
mov
lea
aaa
cld
test
int3
inc
dec
fldcw
jecxz
xchg
push
adc
loop
mov
fwait
daa
ja
jb
in
pop
mov
dec
inc
mov
movsl
adc
aas
mov
daa
pop
or
lods
pop
andl
in
xor
jge
mov
cmpsb
loope
outsl
aam
nop
jg
iret
cmp
pushf
nop
pushf
inc
inc
stos
or
push
inc
mull
mov
sub
rcrl
fdivrl
in
or
sub
jae
nop
std
sbb
push
or
and
mov
rolb
mov
cmpsl
xchg
imul
sbb
adc
or
pop
or
add
orb
icebp
cwtl
xchg
mov
push
inc
jo
xor
sahf
popf
sub
loop
mov
inc
in
cltd
loopne
loope
lret
rolb
cmp
paddb
das
test
cmp
lock
mull
and
xchg
push
add
imul
outsl
cmc
sti
imul
sbb
add
fwait
lret
pop
hlt
mov
xor
cmpsb
cwtl
iret
jns
jne
lret
push
lret
jp
imul
xor
sbb
sbbb
push
and
test
xchg
jae
pop
test
popf
push
adc
mov
xor
sahf
lret
int
or
jnp
bound
pop
or
aaa
lea
leave
inc
fidivs
lret
cmc
push
xchg
dec
adc
divl
push
bound
int3
outsb
dec
pushf
ljmp
jge
aas
mov
out
notb
mov
jne
fisubrs
add
xchg
xchg
xchg
adc
inc
rcrb
sub
sbb
or
test
cmp
bnd
scas
es
and
xor
scas
cwtl
and
shll
jge
push
or
xchg
fs
movsb
jbe
fcmovnbe
jmp
data16
sbb
jle
data16
xor
push
sbb
loop
sub
pop
jns
jg
pop
mov
aas
adc
cmpsl
shlb
mov
cli
fs
pop
in
push
adc
daa
sub
inc
mov
cmp
pop
vcvttpd2dq
cmp
nop
bound
out
xor
add
mov
xchg
ljmp
fimuls
aam
mov
or
or
or
xchg
sub
mov
mov
ret
pop
adc
sbbl
xchg
xor
cmpsl
inc
mov
mov
sub
outsl
mov
roll
faddl
add
mov
ret
cwtl
inc
adc
add
cwtl
lods
sahf
push
das
pop
sub
pop
popa
sbb
sub
into
push
sbbb
jne
adc
mov
or
xor
in
or
mov
jns
mov
sub
ret
les
jnp
mov
ds
xor
adc
xor
mov
rolb
mov
xchg
mov
subl
movsl
cld
out
cmc
or
test
shrl
fidivrl
sub
xlat
mov
jle
mov
jge
xchg
inc
jl
inc
pop
lcall
pop
rcrw
push
add
mov
or
mov
pop
lret
in
dec
fwait
mov
std
mov
mov
mov
lods
popa
pop
lret
xchg
xchg
iret
js
gs
outsl
sub
lret
xor
rorl
notb
mov
hlt
cmp
fildll
sub
inc
mov
sbb
lret
lcall
insl
push
dec
imul
je
pop
lods
adc
lcall
scas
aaa
ret
add
mov
and
cmp
mov
iret
xchg
jbe
es
mov
mov
inc
mov
jno
cmc
int3
scas
loop
dec
sub
stos
inc
pop
add
adc
mov
sbb
int
jle
inc
mov
pushf
js
xor
imul
dec
push
inc
mov
out
fcompl
push
inc
rcl
push
adc
mov
mov
mov
sub
mov
xchg
mov
cmp
lret
out
lahf
mov
add
mov
test
repz
mov
gs
xor
adc
pop
mov
hlt
push
xchg
jp
dec
rolb
in
lds
out
test
hlt
mov
adc
pushl
adc
fdivrl
int
gs
in
sub
xchg
mov
int3
xor
push
lret
and
pusha
insb
inc
xor
push
fiadds
aas
shll
imul
adc
jnp
add
aad
xchg
push
pop
call
mov
xor
ret
cmc
nop
out
jb
hlt
orl
add
mov
inc
out
outsl
xchg
movsl
andb
sbb
xchg
ds
xor
fiaddl
arpl
stos
out
xor
int
xor
mov
or
fneni(8087
sub
je
popf
daa
mov
cwtl
inc
inc
enter
fadds
loope
neg
in
xlat
ljmp
rep
insl
scas
mov
xchg
xor
ret
xor
dec
sub
xor
mov
ret
xor
fwait
popa
xchg
lret
or
mov
add
and
daa
sbb
stos
arpl
lds
lret
sub
aam
aas
arpl
dec
scas
fcomps
and
mov
jnp
push
jl
cltd
mov
leave
push
add
pop
dec
test
pop
mov
imull
fistpll
mov
call
jl
and
and
push
push
lret
insb
call
mov
adc
push
mov
mov
outsl
pop
cmp
inc
cli
test
sub
shrb
and
inc
insl
bound
mov
aaa
incb
pop
jae
inc
leave
xor
xor
dec
dec
pop
arpl
dec
int
push
inc
ss
xchg
mov
stos
sahf
popf
cs
and
sbb
cmp
movsl
subps
pop
ljmp
int3
or
push
shll
mov
pusha
and
add
xchg
loope
adc
mov
mov
lock
sbb
dec
clc
push
int3
lcall
setne
lods
or
imul
dec
fsub
dec
jl
shrl
and
aad
xchg
lret
sbb
mov
fs
inc
arpl
rcll
push
xor
orl
push
push
std
add
pop
call
pop
je
and
push
repnz
popl
inc
sarl
repnz
jb
or
jecxz
xchg
inc
push
push
mov
mov
and
stos
pop
mov
mov
das
adc
mov
loopne
and
loop
out
es
pop
shrb
pop
lret
mov
fs
cmp
bound
jg
push
mov
lret
push
rdmsr
into
pop
pop
or
outsl
je
jae
mov
push
and
pop
roll
js
pop
in
push
out
cwtl
scas
jne
add
fnsave
out
hlt
fdiv
cmp
cmp
leave
in
repnz
xchg
cmp
repz
std
mov
or
lods
sub
jge
pop
clc
adc
and
in
shl
fs
mov
aas
popa
subb
lcall
sbb
popa
addr16
test
lahf
push
adc
daa
rcrb
fucompp
call
add
mov
dec
clc
neg
add
mov
mov
data16
jne
addr16
xchg
xchg
and
dec
out
and
pop
add
mov
imul
jg
ret
mov
sti
xchg
cs
ficomps
lock
cld
movsb
push
mov
xchg
and
lods
daa
adc
enter
and
mov
xor
in
popf
xor
xor
int3
aad
repz
lcall
imul
add
push
aaa
stos
sub
pop
sub
pop
add
scas
or
ljmp
in
paddusb
mov
adc
sub
ja
ret
outsl
idivb
lods
add
cld
adc
push
movb
dec
rcl
loopne
cltd
xor
lea
ret
stc
movsb
mov
add
scas
push
mov
repz
and
sub
inc
adc
mov
mov
xchg
pushf
mov
call
add
nop
cs
adc
mov
lcall
cmp
jmp
mov
sub
pop
inc
outsb
adc
push
mov
sbb
xchg
dec
add
jmp
push
lds
fcomps
imul
sub
add
add
jae
clc
jecxz
int
outsl
aad
imul
js
mov
sub
scas
jbe
cmpsb
je
cmpl
adc
mov
mov
shl
dec
jae
pop
test
push
fists
jnp
xchg
fs
xor
xchg
stc
pop
pop
ljmp
jp
leave
push
mov
push
test
vmovsldup
xchg
push
arpl
xchg
cmp
adc
aad
xchg
mov
lahf
sahf
sbb
dec
sbb
movsl
icebp
stos
cld
out
mov
adc
mov
sub
fnstenv
scas
dec
in
ret
pop
push
iret
mov
and
jge
inc
xchg
addb
pushf
pshufw
xchg
loope
sahf
dec
pop
lods
xor
pop
add
sahf
daa
mov
push
pop
gs
pop
aad
mov
sahf
or
jecxz
sahf
adc
mov
outsl
addr16
xlat
icebp
out
mov
mov
notl
loop
xchg
sbb
shrl
aam
sbb
ret
push
imul
mov
fstps
ss
jae
out
push
adc
movsl
les
insl
pop
dec
adc
mov
pushf
loope
sbb
mov
mov
lret
xor
icebp
daa
xor
mov
mov
xchg
xor
movsb
push
ja
dec
push
sbb
test
cwtl
and
test
mov
pop
fdivrs
out
mov
add
cmp
cwtl
test
inc
pop
jnp
mov
cltd
xchg
fs
pushf
mov
ret
or
or
xor
addr16
sti
xor
shll
dec
lahf
insb
mov
ds
icebp
out
roll
dec
xchg
aaa
adc
dec
imul
jb
stos
cmp
push
leave
bound
into
iret
cwtl
cmp
sub
jnp
es
lea
xor
or
dec
push
push
jp
icebp
mov
test
mov
fldl
pop
test
adc
jmp
adc
or
or
dec
andl
loop,pt
xchg
inc
add
mov
test
and
xchg
push
xchg
pop
sbb
rclb
sub
pop
sbb
mov
pop
cli
push
inc
scas
mov
sbb
enter
pop
mov
incb
orl
and
xchg
mov
pop
mov
ss
inc
xorl
popa
roll
xchg
loop
xchg
nop
mov
sbb
sbb
imul
test
cwtl
sbb
cwtl
pop
int3
or
fwait
pushl
mov
sbbb
or
ss
cmp
sbb
push
inc
rcll
lret
movsb
aas
cs
mov
out
add
lods
inc
ss
cli
notb
imul
int3
daa
iret
adc
xor
mov
xchg
clc
mov
push
push
sub
pop
cmp
add
out
popf
jae
push
test
out
inc
sub
stos
push
test
je
test
cmpb
jb
lods
mov
roll
add
out
movsb
xorb
cmpsb
inc
sub
dec
arpl
push
mov
addr16
cld
cmc
lret
dec
out
loop
js
jg
ja
aaa
xchg
lcall
fnstcw
mov
lcall
push
aam
aaa
cmc
add
sbb
out
movsl
xor
cmp
mov
mov
mov
mov
mov
sbb
repz
inc
inc
or
xchg
repnz
test
sbb
add
sbb
cmp
xchg
mov
repnz
imul
movsb
adc
leave
lret
xchg
shrb
imul
ret
aas
insl
out
andb
jmp
mov
pop
adc
loopne
add
push
sbb
xchg
pop
cmc
lock
mov
xchg
jecxz
and
ss
add
test
inc
mov
and
fidivrs
inc
std
mov
jp
std
cli
mov
out
test
adc
sub
cmc
repnz
add
js
fimuls
dec
aas
xor
sub
mov
add
cmpb
subb
cld
xchg
iret
jmp
ss
pop
push
inc
cwtl
mov
cmp
shll
jno
fcom
push
mov
push
jp
sub
xchg
test
jle
xchg
outsb
or
popf
lock
lods
subb
cmp
cmp
pop
jo
cld
mov
adc
sarb
in
mov
shrd
ja
ficomps
mov
push
jge
fildl
adc
int3
and
cs
icebp
cmp
imul
push
pop
push
xchg
mov
add
rolb
punpckhbw
repz
pop
pushf
jno
jb
mov
push
mov
xor
repz
mov
cmpsb
jl
decl
call
push
jmp
loopne
mov
dec
pop
inc
mov
enter
enter
mov
call
in
idivl
mov
push
mov
scas
xor
int
nop
push
pop
pop
inc
ret
outsb
fnstcw
sub
sbb
inc
cmp
out
gs
pusha
adc
push
lods
and
aad
out
addps
jmp
inc
adc
lea
into
cmp
popl
xchg
mov
cmpsl
xchg
adc
push
scas
and
inc
dec
mov
jns
jns
test
fisubl
mov
jae
add
xchg
mov
dec
ret
push
sub
ret
push
scas
and
loopne
mov
incb
fistl
fs
or
pop
mov
inc
dec
stos
cmovno
pop
aad
add
popa
and
adc
push
jl
jle
sbb
jne
iret
pusha
mov
push
adc
inc
push
mov
jmp
shlb
push
jl
ja
movsbl
adc
icebp
popf
ret
int3
mov
daa
shrb
pop
mov
loopne
cli
mov
mov
xchg
popf
sbb
ss
push
mov
adcb
shlb
add
test
shrl
cmpsb
and
xor
mov
pop
inc
pop
and
xchg
jl
mov
stos
pusha
ss
stc
mov
scas
cwtl
xchg
adc
inc
mov
mov
les
pop
test
insl
adc
or
sbb
pop
lea
and
mov
int3
add
jmp
aaa
cmp
jbe
clc
push
xchg
pop
or
cmpsb
rorb
push
xor
xor
fnstcw
fsubs
cmc
mov
jle
jmp
int3
cmc
and
xchg
insl
dec
repnz
mov
sbb
int
sbb
cwtl
mov
enter
adc
pop
lcall
int3
aad
fwait
push
add
mov
sbb
inc
xchg
lret
or
shrl
adc
push
mov
cmp
pop
out
push
aam
lock
add
inc
push
fisttps
push
pop
dec
adc
inc
cmpsl
ret
adc
push
jp
jmp
cli
scas
and
hlt
or
cs
jge
mov
leave
jl
je
into
es
and
cltd
push
cli
sub
in
aad
jge
mov
lcall
sbb
add
jle,pt
cs
cmc
nop
xor
je
mov
xor
shr
dec
mov
daa
fwait
push
adc
lods
inc
bound
dec
xchg
xchg
aaa
push
int
lock
pop
pop
out
stc
sti
jl
add
and
add
data16
sub
or
mov
stos
gs
jge
push
mov
xchg
xchg
push
sub
sub
movsl
fwait
js
cld
dec
insb
push
push
lret
mov
fsincos
mov
dec
push
xchg
movsb
push
push
ss
daa
dec
shl
add
and
and
sub
jbe
ret
int3
xchg
mov
cmp
ficompl
dec
jmp
scas
xlat
pop
rolb
nop
repz
stos
xchg
or
sbb
add
daa
mov
test
in
mov
and
bound
adc
ja
ds
mov
pop
jg
sub
dec
iret
into
out
roll
outsb
jmp
pop
jmp
xor
dec
sbb
test
stos
cs
or
push
sbbb
mov
sbb
hlt
dec
loopne
stc
std
mov
out
popl
mov
adc
lret
inc
and
inc
dec
push
sub
jne
xor
cmp
pushf
leave
xchg
adc
rcll
lea
ds
xchg
and
fbld
pushf
and
adc
aam
pop
sbb
adc
dec
jbe
stc
jo
hlt
dec
fnstcw
icebp
pop
rcrb
mov
jne
push
sbb
sub
addr16
jnp
inc
jbe
mov
add
mov
push
fs
js
cmp
pop
stc
fs
ret
aam
xchg
mov
adc
mov
jns
ja
je
mov
lods
xor
sbb
lods
inc
mov
rolb
inc
push
push
xchg
and
jmp
adc
insb
shl
inc
add
and
or
inc
xor
adc
popf
jae
mov
adc
xor
mov
mov
mov
sub
sbb
cmpsb
insb
dec
xor
hlt
sub
lret
push
jl
sub
addr16
arpl
push
push
push
sarb
push
xchg
xor
pushf
fwait
push
fnsave
jns
xor
mov
in
lcall
cld
cmpsb
test
aaa
push
js
dec
and
mov
loope
lock
and
cmpsb
sbb
and
dec
mov
ljmp
and
test
mov
or
shll
push
dec
popa
inc
rclb
fadds
inc
test
sub
mov
lcall
call
aas
out
rorb
jne
sbb
popa
adc
push
lcall
test
xchg
loop
jnp
add
orb
mov
or
pop
adc
adc
inc
mov
pop
pop
adc
pop
mov
es
ret
dec
push
xchg
clc
inc
sarl
xlat
adc
lds
jg
ja
sbb
mov
cmp
sar
int
fiadds
pop
mov
loope
mov
mov
jae
xchg
sub
mov
sub
sub
push
scas
stc
cld
sbb
cld
cmp
aaa
push
aaa
dec
jnp
ror
movsl
push
ret
gs
test
inc
mov
sub
mov
dec
mov
adc
jne
add
xchg
jns
out
jl
lds
js
inc
lret
out
ja
pop
mov
sub
arpl
outsl
mov
ret
hlt
sub
add
scas
loope
into
div
mov
xorb
insl
add
andb
leave
mov
mov
scas
pop
ljmp
fs
add
enter
sbb
popf
xor
mov
sbb
jnp
sub
push
pushf
pop
pop
movsl
jle
test
lds
mov
insb
into
push
ljmp
add
cltd
aas
lret
or
into
xchg
call
mov
xor
hlt
ljmp
addr16
test
push
jle
pop
out
jp
or
or
jmp
mov
popl
sbb
mov
fistpll
bound
sahf
aad
lret
cmp
into
pop
dec
pop
in
movsl
add
cmpsb
je
daa
mov
out
roll
inc
add
push
ficompl
repz
rcl
js
je
int
rclb
ret
std
mov
arpl
or
je
fstp
push
push
lock
lds
and
ficoms
or
daa
in
inc
addr16
out
out
xchg
xchg
mov
repz
incb
push
or
inc
test
xor
insb
imul
and
push
pop
mov
iret
dec
mov
pop
adc
jns
pop
popa
jmp
pop
je
fld
int
and
and
nop
xlat
or
cmp
pop
out
mov
scas
pop
int
std
pop
and
jp
pop
outsb
push
aad
mov
mov
imul
push
inc
fwait
add
adc
pop
adc
in
dec
mov
out
int3
mov
dec
loope
std
jl,pn
dec
js
and
inc
outsl
push
jb
jae
add
mov
add
shl
rcr
ljmp
or
dec
dec
jg
shr
les
fiaddl
dec
jbe
push
pop
mov
insb
imul
pop
je
mov
pop
nop
addr16
jne
repnz
cwtl
hlt
inc
aam
xor
cmc
das
adc
in
mov
mov
hlt
mov
test
and
outsl
or
push
sarl
xrelease
jae
dec
out
lods
out
test
stos
aam
outsl
sub
sbb
add
cmp
xchg
dec
push
push
cli
xchg
or
mov
xchg
mov
call
xor
imul
sub
inc
cmp
push
sub
bound
int3
ret
adc
pop
adc
outsl
cld
ds
rcl
cmpl
in
stc
clc
mov
xchg
aad
fs
in
out
scas
add
out
inc
dec
das
inc
ret
cmp
int
ja
test
sub
movl
aaa
dec
outsb
arpl
pop
xor
fs
mov
xlat
adc
and
push
mov
add
mov
lcall
nop
clc
repz
xchg
jb
cmp
jnp
push
popa
stos
sub
adc
ficoms
xchg
loopne
sub
mov
xchg
stos
push
pop
std
adc
es
fdivs
xchg
xchg
jo
leave
sbb
xor
dec
xchg
sahf
inc
inc
cmp
out
sub
movsl
mov
lock
repnz
cmpl
push
hlt
mov
pushf
jae
mov
mov
add
testb
clc
push
xchg
test
mov
sbb
testl
testl
pushf
jne
pop
clc
dec
cmp
add
leave
cmp
popf
mov
int
mov
ror
lret
cmp
into
xorb
or
push
out
es
sahf
movsl
es
shlb
or
arpl
iret
loope
sbb
loopne
mov
sbb
sbb
jl
mov
xchg
pop
pop
mov
or
dec
jno
push
dec
mov
dec
inc
fstps
pop
nop
dec
inc
cmp
arpl
loope
lock
lds
push
out
ss
jmp
shrb
pusha
scas
cmp
gs
jns
push
mov
pop
sub
cmp
cli
jae
jl
popf
jae
gs
adc
mov
jle
mov
cmp
rolb
lds
xchg
call
add
push
mov
mov
repnz
inc
and
lods
movb
pop
std
pusha
call
mov
jnp
outsl
inc
and
fwait
xchg
inc
aaa
xor
ljmp
fisubrl
cltd
push
imul
outsb
cmpsl
add
das
lret
movsl
imul
jp
sub
sbb
add
mov
pushf
inc
push
ljmp
push
mov
test
dec
aad
scas
mov
sub
add
bound
push
mov
inc
cmp
mov
sti
js
js
push
cmp
lea
dec
cmp
pusha
leavew
mov
and
pop
imul
add
cld
jl
int3
dec
cmp
or
movsl
aas
mul
mov
loop
pop
cld
and
mov
or
dec
cld
outsl
arpl
fadds
insb
mov
jnp
jecxz
loop
mov
sbb
into
push
xchg
dec
es
repnz
push
push
cli
js
mov
popa
stos
xchg
and
fs
jmp
ret
push
rorb
hlt
scas
pop
movsl
cmp
adc
cmpsl
and
lods
jae
mov
inc
sbb
arpl
jbe
mov
cmp
out
cmp
rcrl
imul
gs
xchg
mov
jg
std
pop
adc
push
repz
cmp
clc
push
cmpsb
lea
jl
stos
decb
cmp
dec
and
xor
loopne
cmp
adc
sbb
sub
imul
cs
cmp
cmp
jle
ss
cvtps2pd
loop
inc
cmp
sub
cmp
xlat
inc
lock
sub
push
call
xchg
push
mov
xchg
sbb
cmp
mov
inc
add
inc
fnstcw
cmp
dec
sbbl
scas
dec
in
mov
cmp
or
incl
ljmp
pop
faddl
mov
mov
fildl
jno
jne
icebp
test
fsubr
pop
push
jns
adc
inc
es
cmc
add
jo
scas
sbb
dec
out
stos
jge
fimuls
rcll
not
in
cmp
test
imul
idiv
lcall
or
sbb
dec
lahf
sub
mov
push
aas
pop
clc
and
popa
cmpsw
and
xchg
push
jecxz
push
movsb
shll
faddl
add
push
cmp
xor
jmp
xlat
lahf
enter
das
pop
std
mov
fsubrp
daa
dec
xor
push
popf
aad
aas
mov
insl
nop
and
bound
push
mov
sbb
cmp
push
pop
mov
movsb
pushf
lock
aas
out
inc
add
pop
cmpb
shll
mull
jne
pop
int3
mov
jmp
xchg
xchg
jp
push
add
popa
adc
cmp
sbb
mov
mov
sub
pop
lahf
and
and
jbe
lahf
ret
test
lahf
outsl
js
add
lret
mov
add
and
ds
push
mov
hlt
test
sub
adc
add
hlt
jns
inc
adc
xlat
decb
inc
mov
mov
loopne
sti
sbb
sarb
jp
push
in
lock
dec
cmp
add
rcl
movsb
sti
cmp
rclb
bound
add
in
aad
xlat
imul
nop
clc
sbbl
mov
aam
addr16
mov
fisttpl
daa
repz
or
aas
sbb
insb
xchg
mov
lret
adc
jno
jmp
insb
fbld
ret
sub
aas
inc
cmp
sub
ljmp
in
pop
push
aaa
in
loopne
roll
push
mov
xor
lods
std
mov
bound
sub
movsl
pushf
mov
out
rcrb
shll
push
hlt
xchg
rorb
xchg
in
fs
push
insb
aas
out
je
js
jg
mov
mov
incb
repz
aaa
cmp
xorb
inc
out
aaa
stos
js
jl
stos
push
push
jecxz
fldenv
xor
add
loope
nop
push
or
inc
push
push
sahf
aam
xchg
imul
or
mov
jae
pop
or
jecxz
xor
mov
add
inc
jno
dec
cwtl
or
test
pop
push
cli
gs
xchg
push
mov
rclb
dec
add
ljmp
mov
gs
fstp
xchg
xor
aad
rorb
repz
mov
enter
xchg
cmp
or
arpl
adc
cmp
es
imul
inc
fisttps
loope
lahf
test
adc
or
leave
fsubs
inc
push
mov
push
fwait
mov
out
xchg
pop
pop
and
adc
or
push
sub
jo
sub
js,pn
and
or
sub
pop
xchg
jge
neg
cmp
mov
add
xor
pop
aas
outsl
iret
in
push
sahf
or
mov
dec
push
xorb
out
rcl
in
adc
in
movsb
or
mov
inc
pop
sbb
mov
sub
mov
xchg
xor
fninit
lods
imul
fsubp
test
jle
icebp
mov
sbb
fs
pop
sahf
xchg
adc
fwait
das
insl
mov
and
cmp
push
hlt
nop
enter
imull
pop
adc
rcrl
jnp
movsl
nop
iret
fistpl
cmp
jno
cmp
aaa
int3
jno
push
sbb
adc
loope
mov
mov
lods
xchg
pop
sub
ljmp
mov
mov
push
inc
lods
fistps
jmp
cmp
popa
arpl
inc
cmpsb
js
cmp
add
cld
push
push
push
cmp
sub
or
mov
xchg
jmp
rol
xchg
stc
stc
mov
cld
rcll
int
adc
outsb
aas
clc
mov
repz
xchg
dec
or
mov
insb
mov
sub
in
imul
insb
aad
mov
sbb
xor
xor
jp
in
pop
pop
dec
je
pop
jno
pop
lcall
jp
iret
addr16
jg
push
inc
push
in
test
sbb
push
rclb
or
lret
out
jo
xor
pop
mov
mov
adc
push
mov
filds
movl
rorb
and
mov
not
cmpb
push
sarl
mov
mov
mov
and
stos
push
js
lods
or
cld
dec
adc
sub
mov
das
imul
das
mov
test
fsub
std
pushf
xchg
adc
mov
pop
das
push
mov
or
ja
daa
push
sbb
ret
push
imul
mov
pop
push
lret
in
fistpl
push
imul
es
inc
xchg
jmp
ja
dec
xor
pop
push
dec
or
std
mov
cmp
push
pop
shll
add
pop
fwait
lock
sbb
cmpsl
xchg
pop
std
ss
xchg
push
push
repz
lds
adc
sbb
xor
inc
pop
les
mov
xor
mov
mov
xor
jne
mov
xlat
xor
fxch
inc
loopne
imul
imul
or
pop
into
repz
add
sbb
and
leave
jmp
xlat
adc
repz
sbb
ret
jo
inc
pop
jne
add
stc
inc
jge
add
push
pop
xchg
add
mov
sahf
push
call
out
je
jne
out
hlt
add
mov
pop
add
sahf
addr16
push
xor
mov
cmp
addr16
stos
es
mov
xor
leave
nop
insl
push
addb
aad
mov
sub
ret
es
mov
mov
xor
inc
dec
in
ja
js
testb
out
sub
adc
xchg
out
add
xchg
mov
mov
mov
push
xor
or
sti
push
mov
sbb
scas
mov
fistps
arpl
lods
in
rcll
bound
aam
ds
and
sub
nop
xchg
inc
xor
incb
jmp
fsubrs
dec
push
shlb
out
or
mov
jo
in
add
xchg
popa
xor
sub
adc
out
leave
dec
mov
and
mov
mov
movsb
inc
jp
adc
or
scas
or
fsubrl
xchg
imul
jle
idivl
mov
out
hlt
aam
mov
push
out
xchg
sti
adc
jb
std
add
push
sbb
stos
clc
cwtl
test
in
sub
push
xchg
fs
les
ret
add
push
cwtl
insb
subb
jge
mov
clc
filds
jmp
push
les
in
pop
sarl
popf
dec
jle
jne
lods
pop
les
cli
jbe
ja
inc
popa
add
fwait
pop
cs
lret
push
inc
ret
push
fcmovb
aas
pop
int
jae
cmp
mov
pop
fnstcw
mov
jbe
dec
jbe
sbb
and
mov
jmp
fdivl
mov
mov
xlat
sahf
jp
and
dec
aam
mov
inc
getsec
adc
jb
and
or
pop
stos
nop
push
add
mov
pop
cld
mov
push
jecxz
in
cmp
pushf
mov
jno
adc
mov
pop
nop
cwtl
xchg
in
mov
push
lock
push
mov
hlt
popf
movsbl
dec
gs
mov
jo
scas
aas
icebp
pop
add
xchg
ret
xacquire
sub
mov
pop
int
test
iret
or
ret
push
pop
pop
movsb
xor
push
shrb
lods
or
adc
lds
mov
sub
mov
js
incb
sub
sar
push
gs
push
cmp
xchg
xchg
adc
call
or
fsubs
dec
mov
in
in
or
sbb
jne
lods
mov
dec
frstor
jge
sub
ljmp
xor
pop
xorb
aam
mov
into
leave
pop
adc
xchg
inc
rcrl
push
xlat
cmp
cmp
std
andl
in
and
cs
repz
addr16
fadd
sub
mov
or
jmp
scas
decb
or
rclb
mov
push
adc
fidivs
pusha
pusha
mov
lds
lret
movl
cmp
loopne
pop
inc
into
lret
mov
test
int
adc
dec
or
sahf
inc
outsl
fwait
repz
insb
out
sti
mov
ss
test
test
xchg
cmp
shll
lods
testl
gs
push
sub
xor
out
pop
call
push
popa
ds
mov
fdivrs
sub
jae
xchg
das
test
in
fsubr
loop
aaa
dec
inc
dec
or
andb
mov
jge
xchg
ja
int
xor
in
cmp
sbb
mulb
ss
mul
aaa
dec
mov
imull
and
js
sarb
pop
ret
lcall
sub
cmp
outsb
sub
mov
shld
test
sub
fsubs
cmp
push
nop
test
popf
and
mov
and
das
bound
mov
push
jb
int3
into
imul
sub
repz
fimull
nop
mov
insb
sahf
sahf
rcrb
adc
xor
mov
mov
iret
adc
imul
aaa
insl
xchg
iret
cmp
fcom
ficoms
mov
mov
int
testb
nop
pop
dec
xlat
mov
lret
jmp
mov
repnz
inc
cmp
cmovae
repnz
and
inc
icebp
mov
inc
in
mov
inc
mov
pop
les
psrld
popf
sub
loope
fmuls
cmp
ret
mov
push
imul
pop
push
scas
push
dec
aad
xor
rorl
cmp
cmp
cmp
mov
sub
jmp
mov
mov
clc
xor
das
xor
inc
popf
mov
nop
cmpsb
cmp
sub
and
push
sub
test
pop
dec
loop
shlb
push
vphaddubw
cmpsb
cmp
lahf
popa
xchg
lods
xchg
and
in
adc
pop
mov
xor
add
pop
fstps
bound
dec
or
out
cld
outsl
les
mov
push
pop
mov
xor
in
pop
jno
ds
cmp
jo
xor
bound
iret
les
and
dec
add
stos
int
icebp
repnz
add
cli
mov
out
cmovl
cmpsl
or
xor
test
test
dec
call
out
cmp
cmp
cmp
loope
mov
jg
call
jne
inc
mov
push
add
arpl
imul
push
ja
pushf
mov
into
enter
cmp
leave
test
dec
xchg
repnz
cmp
xor
in
rolb
sbbb
cmp
std
daa
movsb
jg
mov
mov
mov
cmpsl
icebp
enter
je
ret
mov
jg
pop
shrb
xchg
sbb
jbe
mov
xchg
mov
stc
xor
push
xorb
sub
or
popf
cmp
sub
fisubrl
mov
lock
mov
into
mov
mov
subl
or
or
xchg
sub
jne
test
arpl
push
mov
mov
bound
ret
shrb
xchg
mov
inc
sub
popf
sub
pop
inc
dec
sti
testb
mov
sti
jne
mov
insl
fldl2e
cltd
ds
and
xchg
mov
adcl
jecxz
xchg
xchg
stos
bound
stc
cmp
int3
pop
pusha
int3
fs
sbb
aad
scas
insl
inc
dec
or
aaa
ret
mov
out
scas
and
mov
jbe
add
sbb
aam
lahf
pop
imul
mov
and
fxam
pop
rcrb
xchg
xchg
outsb
inc
daa
lods
hlt
jmp
lret
in
hlt
jl
sti
adc
stos
pop
sub
test
cmp
cmpsb
xor
cmpsb
jle
xchg
jp
push
mov
int
popa
loope
mov
lods
sbb
outsl
adc
cli
jo
and
inc
lret
jno
cwtl
in
sub
sub
jle
es
lahf
std
add
jmp
cs
out
mov
add
popa
xor
daa
mov
jne
xlat
out
xor
mov
cld
aaa
mov
mov
popa
fwait
mov
push
sbb
lods
sbb
sbb
xor
fwait
dec
cwtl
jnp
hlt
cmp
sbbb
cld
inc
push
xchg
adcl
jle
xchg
jmp
inc
pop
push
add
dec
loope
mov
fs
aad
test
cmp
ss
inc
mov
ja
cmp
insl
addr16
and
dec
xor
xor
fsubrs
daa
push
movsl
popa
add
fldz
and
pop
jge
sbb
aas
lods
push
fnsetpm(287
in
xchg
es
push
xchg
out
rolb
mov
clc
mov
ds
xchg
bound
imul
pop
aaa
jge
test
mov
sbbb
cmp
test
aas
sub
and
cmp
inc
adc
ret
xchg
jae
xor
jne
mov
hlt
mov
aam
nop
xor
rol
sub
aad
stos
lods
sbb
pop
lds
jl
std
cmp
xchg
clc
sbb
mov
jbe
pop
and
push
mov
push
test
jp
mov
inc
sti
adc
and
mov
jae
mov
lret
ret
insl
dec
jb
inc
movsb
cmp
outsl
hlt
outsb
xchg
adc
jecxz
mov
pusha
cltd
xchg
int
inc
lock
je
sub
jnp
push
mov
ret
fndisi(8087
data16
leave
push
gs
into
sar
add
fwait
clc
inc
out
jbe
xor
outsl
fstp
mov
mov
sub
cmp
addr16
nop
add
arpl
pusha
pop
mov
xorl
imul
xchg
jle
dec
aaa
mov
inc
xchg
sbb
gs
cs
or
jo
shll
hlt
mov
roll
pusha
rcll
mov
sbb
add
mov
xor
lret
mov
js
mov
call
and
in
in
adc
shlb
shll
sub
and
push
je
xchg
xchg
mov
rcrb
push
aam
out
sti
jge
jo
sbb
das
test
adc
jmp
pop
adc
repz
adcl
and
in
cli
xchg
cltd
out
inc
pop
ja
adc
jmp
jnp
mov
pop
mov
or
call
mov
dec
cwtl
ds
popf
ret
or
roll
pop
jp,pn
and
test
rorl
enter
mov
or
fisubs
mov
sar
cmc
add
cld
xor
jle
jbe
mov
icebp
pop
and
dec
push
push
out
dec
fdivs
xchg
loop
xor
leave
xchg
sub
mov
in
jp
mov
jg
int3
xchg
push
addr16
rcrb
leave
outsl
cli
std
addb
pop
push
repz
adc
fidivs
cmp
out
outsb
mov
shll
das
xchg
mov
xchg
into
clc
dec
ret
xchg
or
and
sub
inc
xchg
repz
inc
cmp
movsb
test
pop
xchg
movsb
inc
xor
lock
fyl2xp1
test
ficomps
mov
lret
push
xchg
adc
outsl
xor
sub
cmp
roll
sbbl
movl
mov
cmc
push
mov
and
sbb
clc
jge
jle
ja
jge
sbb
fstl
jne
pushf
enter
mov
or
rcrb
pop
push
xor
cmp
inc
sbb
ja
ljmp
dec
add
das
out
xor
dec
aas
movsb
cmp
in
xor
sbb
add
xor
clc
filds
sbb
pop
shrb
xor
add
pop
es
into
stos
nop
push
mov
movsb
push
or
jle
cmp
ret
enter
xorb
xchg
mov
ja
or
scas
mov
pop
popf
rol
cli
mov
pop
ds
pusha
fmuls
inc
lret
hlt
sub
and
ret
sbb
div
popa
cmpsl
cmp
fwait
jns
pop
and
push
sub
fidivrs
pusha
out
or
and
out
add
mov
dec
stc
stos
pop
sub
adc
popf
dec
mov
pushf
xor
ficomps
popa
or
cmp
loopne
push
mov
pop
addr16
xor
mov
add
cld
test
mov
popa
sub
add
repnz
inc
cwtl
in
sbb
push
loope
sub
jae
push
les
subb
xchg
fcmovnb
cmp
mov
repz
xchg
subl
add
repnz
sar
repz
adc
inc
pop
fistps
pop
fisttpll
imul
inc
mov
jl
cmp
adc
stos
jp
flds
push
xchg
in
jne
lret
inc
add
aad
push
mov
popf
xlat
fwait
pop
sub
pop
repz
flds
dec
mov
icebp
ds
xchg
jle
in
addl
xchg
or
lods
mov
lahf
out
xchg
lret
arpl
aaa
dec
sub
sbb
or
std
sti
xor
mov
shrb
jbe
jl
je
cmp
incb
inc
adc
arpl
jns
mov
or
rcrb
pop
mov
ss
jg
cwtl
scas
int3
mov
adc
xchg
xor
ja
inc
mov
out
pop
jno
fisttpl
xchg
gs
add
mov
setb
int3
jns
push
xchg
sub
fildll
ljmp
nop
xchg
stc
mov
xchg
out
inc
scas
sbb
or
adc
pusha
push
inc
pop
dec
and
mov
push
jmp
outsb
sbb
jp
mov
dec
fcmovu
mov
mov
out
sub
orl
cmp
in
jp
or
testl
lret
call
shrb
add
and
push
je
mov
jl
push
xchg
pusha
cmc
mov
fs
mov
iret
cmp
inc
xlat
xor
scas
dec
fdivrs
divb
ret
and
sbb
popa
xor
adc
frstor
xchg
push
jae
sub
cmp
xchg
jg
jbe
jnp
xor
out
adc
iret
xor
jbe
fidivrs
loope
xlat
arpl
xchg
dec
fldl
mov
bound
rcll
fs
andl
cmp
jae
cltd
push
dec
ljmp
addl
fistpl
pop
dec
stc
fidivl
xchg
xchg
inc
dec
sub
sub
adc
add
sti
sub
aaa
inc
test
cmp
nop
xchg
mov
popf
jmp
push
cmp
mov
out
inc
cld
lret
repnz
jg
scas
std
jge
popf
stos
out
jne
xor
dec
clc
shlw
mov
aad
or
ret
in
and
jno
inc
mov
test
ficompl
arpl
icebp
cltd
push
push
jp
sub
push
pop
and
mov
das
cmp
loop
mov
sahf
xor
sbb
in
add
hlt
xchg
mov
sub
dec
loope
iret
mov
inc
ret
in
nop
cmpsb
cmpb
repz
out
xlat
jg
jmp
or
leave
idivb
jg
pop
clc
push
xor
gs
dec
test
dec
cmc
adc
or
xchg
mov
outsl
pop
enter
shr
push
iret
test
pusha
pop
movb
jb
loope
mov
inc
or
or
int
lret
cld
xchg
xlat
aam
ucomiss
mov
hlt
repnz
sbb
jno
gs
inc
jnp
loopne
add
pop
push
adcb
nop
mov
and
ss
pop
inc
inc
or
mov
push
int3
scas
mov
xchg
jmp
loope
es
cmp
int
jge
scas
dec
and
test
ds
push
inc
es
pop
sti
mov
jnp
jp
xor
cmpsb
pop
xchg
and
int
or
ss
dec
sbb
cli
pop
xchg
push
adc
cli
scas
sub
add
rcll
fsubrp
sbb
aaa
add
mov
lods
dec
ljmp
bnd
xchg
jae
dec
cmp
or
push
xchg
dec
jge
ret
shll
and
mov
or
push
iret
mov
int
inc
loope
sbb
push
jb
jp
pop
lret
mov
dec
daa
jno
lods
aas
push
xor
pop
mov
jae
dec
cmpsb
mov
aaa
call
or
jge
or
inc
cmpsb
lea
add
cltd
mov
add
xlat
movsb
jbe
sub
int3
inc
repnz
xchg
push
adcb
cmpsl
clc
xchg
and
xchg
sbb
inc
mov
dec
dec
test
std
or
cs
out
inc
js
sbb
xor
or
imull
rorl
push
repz
fistps
mov
in
addr16
bound
iret
sbb
lock
fnstsw
add
jo
dec
out
repz
pop
in
cmc
orb
decl
inc
sahf
dec
add
mov
into
mov
fdivl
xchg
or
sub
cmp
mov
add
push
add
cmp
cwtl
repnz
fs
add
mov
lea
xor
loopne
xchg
int
jmp
je
jecxz
push
fcmovnb
sarb
lea
enter
sbb
sbb
insb
xor
lret
jp
xorb
sub
mov
xchg
push
jno
mov
jbe
cmp
and
mov
bound
inc
or
js
nop
sub
out
insl
lahf
cwtl
mov
xchg
sbb
rcrb
add
mov
cmp
fs
popf
sbb
lds
push
push
shll
add
adc
out
mov
push
xchg
mov
xchg
nop
lret
jne
inc
jnp
cmp
add
push
rorb
unpckhps
cs
pushf
arpl
stos
pop
pop
fadds
cmp
and
filds
jo,pt
test
notb
int3
push
push
mov
pop
jno
and
xchg
mov
cmpsb
pop
xchg
or
sbb
mov
dec
test
push
sbb
dec
loop
loopne
sbb
mov
repz
xor
rorl
ljmp
adc
cmp
mov
jb
js,pn
pshufw
lea
or
ja
subb
mov
mov
mov
sub
loope
xchg
cmpsb
lret
cltd
cltd
and
cmp
pop
and
lods
mov
xchg
imul
aad
test
push
lea
mov
mov
sub
test
push
das
or
xor
add
cmpl
dec
mov
adc
data16
sub
scas
inc
cmp
push
mov
mov
add
or
mov
fisttps
cmp
lret
inc
xchg
cmp
xlat
scas
in
scas
fsub
mov
stos
sub
ja
sub
jp
inc
or
xchg
or
cmc
cs
mov
out
jae
je
mov
iret
into
cmp
pop
xor
push
movsl
push
jo
test
sub
leave
roll
aad
xor
mov
xor
inc
loope
out
or
dec
jne
cs
addl
cmpsw
mov
or
aas
adc
push
ss
pop
cltd
xor
popf
into
nop
xor
mov
mov
fistl
pop
rcrl
add
xchg
xchg
call
lret
lcall
xor
lret
inc
jge
push
push
popa
cmp
mov
gs
stos
push
cld
sub
sbb
dec
in
iret
scas
ss
pusha
mov
and
and
ss
adc
and
add
push
cmp
xlat
push
loopne
and
adc
jae
push
ljmp
sub
dec
pop
mov
xorb
jl
insl
pushl
xchg
jae
cwtl
pop
lods
aad
sbb
xor
sahf
push
sti
push
push
fldenv
jmp
push
inc
xchg
fsubp
and
push
adc
or
iret
lods
cld
lods
sub
sbb
sub
leave
pop
aam
inc
sarb
mov
gs
lock
in
ret
xlat
fdivrl
arpl
push
add
mov
push
sahf
call
repz
pusha
cmp
inc
inc
sub
xor
sub
sub
lds
shrl
dec
mov
aam
sub
mov
inc
scas
mov
ja
cwtl
fs
ret
jge
rclb
jb
dec
inc
inc
fstp
insb
push
cmp
stos
push
lcall
adc
mov
push
jne
pusha
mov
mov
sbb
xor
and
stos
mov
mov
push
mov
dec
push
sub
pop
mov
mov
std
cmp
repnz
leave
pop
cmp
ficompl
mov
inc
adc
sub
clc
test
push
in
lret
in
ss
add
fsts
rcll
int3
hlt
fwait
in
pop
adc
pop
xchg
pusha
mov
lods
imul
mov
lods
shll
xchg
add
pop
incl
xor
adc
sbb
popf
add
cld
push
xor
test
cmp
gs
dec
clc
xor
pop
mov
add
movsb
add
push
in
out
fcoms
xor
aad
jge
std
adc
jno
jnp
inc
and
push
ret
dec
mov
or
mov
push
xchg
rcrb
test
or
mov
jns
dec
stos
cwtl
lcall
fbld
adc
pop
pop
dec
test
jecxz
cmc
cmc
mov
in
inc
mov
push
pop
test
sbb
xor
lock
sub
test
push
mov
aaa
sbb
fbstp
lret
insb
push
cmp
push
add
loopne
sub
fsubrp
mov
pop
pusha
cltd
mov
jp
xchg
mov
or
arpl
mov
ds
sub
and
popf
rclb
fcmovbe
cmp
scas
aam
cmp
adc
mov
fdivs
xor
dec
icebp
pop
and
add
int3
pop
xor
mov
mov
cltd
cmp
pushf
add
sbb
and
movsb
xchg
xchg
dec
xchg
mov
cmp
rorl
add
daa
daa
mov
mov
sbb
inc
sbb
inc
dec
pop
and
inc
push
movsl
notb
mov
pop
fs
test
and
je
pop
int
loopne
pop
lea
movsb
ficompl
gs
mov
sarb
mov
out
dec
ljmp
out
dec
insl
cmp
push
jle
cltd
push
and
insb
js
adc
jg
and
pop
sub
adc
adc
jg
adcb
dec
mov
out
in
test
in
mov
and
sahf
adc
inc
sbb
pop
ret
push
arpl
push
mov
mov
add
or
je
cs
add
jp
add
movsl
movsb
and
mov
pop
fcompl
add
and
aam
cmp
jmp
and
pop
les
lods
out
out
int
inc
mov
fisubl
mov
mov
lret
lahf
rcll
fs
jb
cwtl
cmp
push
xlat
out
iret
ja
aaa
sbb
pop
mov
mov
fwait
loope
imul
dec
mov
push
add
pop
aam
mov
inc
sub
push
cli
call
pop
inc
int
testb
lret
push
loopne
imul
pushfw
mov
in
inc
lahf
ds
test
pop
sbb
cltd
sbb
push
pushf
and
test
jle
mov
lock
cmpl
or
pop
in
mov
div
push
push
test
incl
mov
push
fnsave
mov
mov
fiaddl
test
or
mov
int
add
hlt
arpl
out
sub
aaa
int3
cmp
stos
lret
loope
fstpl
jp
out
imul
jl
mov
mov
xor
sub
fs
in
out
mov
aas
pop
dec
and
or
mov
adc
flds
inc
test
mov
imul
mov
cmpb
addb
insb
stos
mov
jb
or
and
lahf
cmpsb
jbe
test
out
jmp
cmp
jg
mov
mov
lods
repnz
push
iret
jae
ja
pop
cmpsl
stos
arpl
test
and
mov
test
test
mov
jnp
pop
pop
inc
insl
cmp
add
adc
push
and
xchg
lea
cmc
or
mov
lahf
loope
cmp
imul
ret
mov
sbb
or
lods
xor
inc
scas
mov
dec
imul
xor
lds
cld
imul
mov
sti
sub
mov
jae
inc
inc
repnz
jle
movsl
aad
inc
popf
cmp
sub
test
or
sbb
enter
rcrl
mov
jb
xchg
jno
lret
push
mov
scas
movsb
int
adc
icebp
mov
call
xor
cmp
jo
iret
popf
jns
cmp
or
mov
pop
test
pop
inc
scas
mov
inc
mov
mov
mov
and
inc
loop
loope
lods
xor
notl
je
dec
sub
add
negb
cwtl
rolb
icebp
or
jecxz
out
je
cmp
cmc
jmp
xchg
xrelease
mov
mov
jb
test
sti
ljmp
ds
dec
aam
mov
add
or
pushf
cmp
sbb
dec
pushf
imul
fadds
push
outsl
and
repnz
in
mov
das
ret
pop
in
jmp
mov
xchg
arpl
cmp
das
fists
mov
ds
test
test
loope
or
pop
pop
js
xchg
addr16
rclb
jno
mov
aas
push
sub
into
cmp
adc
clc
movsb
add
test
mov
mov
xor
loope
push
test
mov
leave
pushf
aas
incb
pop
sub
xlat
pop
mov
xchg
addl
or
cmp
cltd
cmpsl
icebp
test
lods
push
push
aad
loop
adc
xor
outsb
dec
cmc
les
stc
fwait
and
ljmp
cli
pop
insb
dec
roll
rolb
dec
push
xchg
lret
jo
mov
hlt
mov
jp
lahf
dec
add
jmp
cwtl
cs
pop
outsb
sub
push
xchg
mov
test
loop
mov
jge
mov
inc
into
mov
cmp
sbb
mov
xchg
push
jmp
out
push
testb
iret
rcrl
xor
inc
fldt
push
jp
inc
in
push
mov
or
in
mov
xchg
call
shll
in
aas
sbb
daa
and
dec
out
les
jnp
lock
and
pop
sahf
shl
jmp
cmp
jb
xchg
fldcw
mov
aad
ret
push
out
or
movsl
push
je
outsb
inc
ret
pop
jns
jno
xor
mul
lret
cli
mov
in
push
ror
mov
iret
pushf
test
incl
mov
or
test
add
pop
outsb
popf
inc
jmp
pop
inc
mov
or
cltd
pop
push
stos
cwtl
ss
and
jne
add
xor
enter
mov
aad
push
xor
ret
es
inc
add
fidivl
jae
xchg
xchg
mov
dec
popa
cmpsl
es
addr16
fidivrs
mov
movsb
add
xchg
inc
fstl
mov
push
test
jo
sbb
repnz
out
rcl
mov
inc
mov
stos
pusha
xchg
lret
cmp
jbe
and
sbb
loope
das
ret
jl
lock
mov
fcompl
scas
insb
dec
insl
imul
pop
stos
and
lcall
ss
faddl
and
adc
adc
push
push
arpl
cmc
daa
ljmp
insl
cmc
push
jns
sbb
dec
sub
fs
lods
xchg
jno
sub
jmp
cmp
push
mov
and
pop
es
cmp
push
cmp
add
les
jnp
rol
aaa
or
jg
cmp
and
imull
fsts
jge
add
shl
sub
push
out
out
mov
out
inc
inc
or
jle
ror
sbb
movsl
or
xchg
outsb
xor
loope
arpl
push
popa
mov
mov
dec
in
pushf
scas
sbb
pusha
push
push
cld
xchg
mov
inc
mov
dec
lods
ror
or
add
dec
jmp
adc
je
lahf
push
push
andb
adc
cmp
addr16
lock
push
fisubs
push
pop
nop
fcoms
jns
xchg
mov
frstor
cmp
arpl
push
in
cld
sbb
test
sub
stos
imul
cltd
ss
add
add
xor
cmp
sub
push
and
pop
ja
fimuls
outsl
stc
movsb
sub
dec
xor
push
cmp
adc
aam
xor
mov
or
loopne
mov
xor
pop
rcrb
jle
pop
xchg
cmp
push
and
cmpl
mov
pop
jno
xchg
data16
add
jle
mov
pop
jno
mov
jno
inc
mov
sahf
xchg
or
inc
mov
adc
add
mov
inc
fwait
inc
cld
fldcw
pushl
cmp
addl
fdivrs
outsl
enter
addr16
sbb
mov
lock
sti
imulb
cmp
lret
inc
js
fcoml
and
sbbl
out
jmp
mov
dec
cmp
pop
mov
sti
clc
jae
mov
icebp
test
daa
and
xor
pop
ja
pop
adc
mov
cltd
mov
mov
push
fstps
cmp
clc
arpl
out
subb
lret
inc
sahf
incl
sbb
lds
xor
inc
sub
jl
pop
jbe
lret
push
nop
cmp
cmp
repnz
shll
loopne
fwait
xchg
and
xchg
int3
dec
shlb
add
call
ret
test
adc
pop
adcl
dec
rcrl
add
push
mov
andl
xor
pop
mov
loop
dec
shl
stos
pop
mov
push
jmp
loopne
ret
xor
jno
cmp
or
stos
outsl
mov
in
stos
sub
insl
jle
fisubrl
stc
lds
sbbb
push
pusha
mov
in
popa
xchg
int
loopne
es
or
sbb
sub
ss
or
pop
adc
mov
movsl
lods
inc
stos
push
pop
shll
mov
adc
cld
inc
cltd
in
repnz
mov
mov
and
sahf
jge
fimull
pop
inc
push
icebp
loopne
shlb
inc
cmp
adc
mov
xchg
in
rorl
mov
mov
adc
jp
mov
mull
jp
xchg
jmp
inc
cmp
mov
js
push
push
dec
mov
xchg
adc
inc
inc
dec
mov
movsl
add
inc
loope
data16
mov
add
dec
arpl
push
scas
inc
adc
sub
filds
scas
dec
dec
add
mov
pop
sbb
add
bnd
ds
outsl
xor
pop
aas
bound
movsl
jge
daa
pop
mov
or
