and
add
add
add
add
add
mov
add
nop
add
add
adc
add
add
add
add
add
adc
and
adc
inc
xchg
adc
push
xchg
adc
bound
add
jo
adc
cld
nop
adc
pushf
nop
adc
or
adc
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
inc
push
xor
cs
dec
dec
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
jb
je
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
jae
add
dec
gs
popa
addr16
outsl
js
add
add
cmp
out
pusha
call
pop
sub
lea
cmpb
je
movb
mov
sub
mov
add
lea
add
push
push
push
push
push
push
call
test
je
mov
call
pop
mov
add
push
push
call
pop
pop
mov
mov
add
mov
cmpl
jne
add
mov
jmp
mov
add
add
cmpl
je
add
mov
add
push
push
push
push
pushl
pushl
mov
mov
mov
add
call
pop
pop
pop
pop
cmp
je
add
jmp
push
push
pushl
call
lea
mov
lea
mov
mov
cmp
je
mov
inc
sub
cmp
ja
mov
cmpb
je
mov
cmp
jne
mov
shr
rol
xchg
jmp
mov
xchg
rol
xchg
sub
add
mov
add
sub
mov
loop
call
lea
mov
cmp
je
mov
sub
je
mov
lea
mov
lea
mov
cmp
je
mov
add
mov
jmp
mov
add
mov
xor
mov
inc
or
je
cmp
ja
add
add
jmp
and
shl
mov
add
or
jne
mov
add
jmp
xor
xchg
mov
cmp
je
lods
or
je
add
add
jmp
xor
shr
lods
or
je
add
add
jmp
lea
mov
lea
mov
cmp
jne
add
push
push
push
push
push
push
call
pop
pop
cmp
jne
add
mov
rep
sub
sub
push
pushl
push
push
call
push
pop
sub
xor
mov
cmp
je
inc
lea
mov
push
push
push
push
push
pushl
pushl
mov
add
push
call
pop
pop
pop
pop
add
loop
mov
cmp
je
popa
popf
mov
ret
popa
popf
jmp
mov
or
je
mov
add
cmpl
jne
cmpl
jne
cmpl
jne
jmp
mov
add
push
push
push
lea
add
add
push
call
pop
pop
pop
cmp
je
mov
add
add
xor
mov
cmp
jne
inc
jmp
mov
add
push
push
push
cmpb
jne
inc
mov
and
mov
movb
push
push
pushl
call
pop
pop
pop
pop
cmp
je
mov
mov
pushl
popl
add
inc
jmp
clc
ret
jmp
push
mov
mov
mov
cld
mov
movsb
call
jae
xor
call
jae
xor
call
jae
mov
call
adc
jae
jne
stos
jmp
call
dec
loop
mov
call
jmp
lods
shr
je
adc
mov
jmp
xchg
dec
shl
lods
mov
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
pop
ret
push
call
ret
incl
mov
cmp
jne
sbb
adc
xor
or
ret
pop
mov
inc
mov
pusha
mov
sbb
popa
adc
or
push
push
and
rolb
or
push
jmp
pop
pop
call
in
mov
shl
or
dec
mov
jne
pop
push
add
push
push
mov
pop
xor
test
push
cmpb
sub
push
sbb
shr
and
jb
sub
sbbl
pusha
jae
shl
or
test
clc
dec
jne
pop
mov
dec
jp
sbb
ret
pop
mov
repnz
dec
popa
push
movzwl
fadd
sarl
push
scas
movl
jae
xor
cmc
add
lock
sub
roll
add
cmp
sbb
lahf
mov
loope
cmp
loopne
jmp
sub
dec
clc
insl
push
mov
outsl
mov
shl
rcll
ret
mov
add
pop
ret
adc
push
ficoml
jle
mov
inc
mov
or
sbb
call
out
or
jne
pop
ret
mov
shl
pop
pop
add
xchg
pop
sbb
jbe
pushf
xor
incl
jge
mov
sti
test
jle
gs
js
add
push
call
rclb
roll
loopne
inc
cld
inc
cmp
dec
jl
sbb
popa
insl
repnz
call
outsb
in
call
cmp
cmp
ljmp
sbb
les
jne
mov
shr
pop
lea
iret
loopne
add
jbe
inc
call
or
add
lock
cmp
sbb
call
fcomps
mov
test
push
cmp
icebp
call
shlb
sub
lods
add
add
call
cmp
dec
add
and
jne
sbb
and
or
add
push
clc
mov
mov
rcl
addr16
dec
cmp
adc
dec
push
icebp
inc
dec
or
enter
jo
icebp
movsb
push
sbb
int3
dec
hlt
enter
in
adc
sbb
inc
dec
clc
nop
push
in
and
add
shl
add
xor
dec
dec
sbb
or
dec
pusha
push
pusha
adc
fdivl
push
add
mov
inc
jne
sar
mov
fsubrl
and
rep
adc
popa
data16
jne
and
adc
lea
call
jge
orb
jo
pop
mov
adc
sbb
fisubs
test
adc
hlt
inc
stos
popa
and
fwait
ret
bound
inc
std
inc
adc
sbb
inc
inc
andb
and
pushf
lds
mov
inc
nop
add
in
mov
jge
xchg
add
adc
sahf
out
add
movsl
hlt
into
xor
je
and
cmp
mov
lcall
stos
sbb
xorl
or
insb
out
fcoms
xchg
push
repnz
or
xor
xchg
call
cmp
push
sbb
cmp
das
cmpsb
mov
jne
movsb
inc
setb
add
sbb
cmp
sysexit
test
pop
incl
pop
popf
shrb
clc
lea
inc
stc
hlt
cmp
mov
add
pushl
dec
mov
jmp
mov
inc
sbb
ret
dec
in
jmp
sub
enter
cs
lock
mov
xchg
sbb
fldl
dec
xor
ljmp
out
or
jmp
insb
lock
sbb
fcmovnbe
or
popf
test
pop
sub
mov
xor
or
call
add
mov
dec
add
pop
fcoms
push
adcl
jl
dec
loop
xchg
and
dec
stc
iret
xor
sub
pop
jge
adc
lock
dec
pop
add
pop
add
and
sti
movsb
sbb
dec
add
xchg
testb
fcmovne
mov
test
orl
and
xor
cmp
cmp
rcl
inc
inc
add
mov
inc
inc
cmp
inc
dec
test
mov
aam
jb
in
icebp
js
loopne
adcb
inc
rclb
test
jne
inc
js
shl
arpl
adc
mov
addb
or
add
pop
inc
jmp
push
sub
sub
jb
xor
mov
jge
cs
shrl
dec
jne
cmp
mov
sbb
xor
icebp
addb
mov
iret
push
es
sbb
jno
int
and
mov
xchg
adc
mov
and
mov
adc
sbb
mul
mov
inc
outsb
addb
add
mov
test
pop
push
clc
push
add
add
add
add
sub
add
add
js
add
add
add
jmp
dec
adc
mov
xchg
stc
out
in
adc
lds
cmp
dec
mov
leave
mov
fnstcw
jecxz
and
push
loopne
sbb
jne
loop
clc
mov
jg
push
fidivs
loop
pop
push
mov
fdiv
inc
or
pop
or
ret
jbe
mov
push
lods
mov
loope
sbb
adc
mov
pop
add
sub
loope
sahf
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xor
pushf
xor
cs
jg
cmp
inc
xor
repnz
clc
mov
movsb
push
cltd
mov
aad
add
and
mov
fidivs
cmp
das
push
mov
sbb
loop
dec
jle
icebp
adc
cmp
lea
cmp
mov
das
push
ficomps
jmp
and
pushf
outsl
xlat
fmuls
pop
mov
or
out
push
mov
in
loopne
pop
mov
jp
out
mov
and
adc
and
cmpb
push
pop
mov
bound
in
xor
mov
or
cld
loop
pop
xchg
movsb
and
hlt
push
cmp
pushf
fdivrs
mov
jns
outsb
or
stc
inc
dec
jns
push
sbb
pop
jmp
add
push
pop
ret
shlb
ss
andl
pop
out
aas
or
je
lahf
lods
int
jo
cmc
jbe
outsl
and
cmp
dec
jnp
xchg
dec
inc
xorb
inc
mov
dec
pop
ds
imul
dec
xor
outsb
into
gs
addr16
pop
add
lcall
jmp
sbb
sub
addl
popa
dec
pop
rorb
jp
loope
fmull
pop
add
add
in
sar
mov
xchg
inc
mov
lret
lret
jecxz
jno
fs
pop
mov
loopne
orb
cmpsl
mov
xor
add
fucom
dec
andl
les
add
outsl
ret
roll
mov
cmpsl
jno
push
cwtl
aam
cmp
pop
push
jo
xchg
cld
mov
loopne,pt
fstpt
dec
lcall
cs
lock
sub
ds
int3
pop
adc
mov
mov
sar
dec
test
ljmp
fimull
mov
dec
mov
jle
mov
mov
add
push
shll
xor
rorl
push
xor
loopne
icebp
faddl
and
lret
adc
add
imul
cmc
jmp
enter
cmp
mov
xor
out
lock
imul
or
jae
aam
pop
or
es
sub
adc
mov
adc
or
lds
lret
fists
ljmp
jge
push
jae
jnp
sub
add
cmp
dec
xor
rorb
ficomps
xor
jecxz
shlb
lcall
sub
int3
adc
push
mov
clc
leave
loope
enter
sbb
dec
xchg
nop
push
sbb
fnsave
sbb
jmp
addl
add
call
movsl
fldl2t
or
cmp
movsb
mov
adcb
lret
cwtl
nop
scas
xor
addr16
sbb
fs
push
and
dec
ss
sbb
cld
xchg
cmp
mov
adc
or
fsubr
xchg
dec
adc
mov
xchg
into
lcall
or
inc
fsubr
in
push
insl
ja
xor
xor
fwait
test
pop
fucomi
lret
add
ja
jnp
xchg
test
or
xor
in
bound
roll
xor
jb
les
and
out
mov
xchg
shlb
jmp
add
push
push
dec
loop
out
inc
in
test
sub
lret
testl
andb
int3
popl
les
and
mov
lcall
mov
out
pop
sbb
imul
shlb
js
pop
lret
hlt
xorb
test
xchg
or
and
adc
pop
mov
cmp
lds
cwtl
lods
pop
adc
ret
cmpsl
sahf
rorb
jne
inc
insb
and
jp
pop
adc
subl
aas
int
out
sub
add
mov
mov
adc
bound
fucomi
xchg
stc
or
pop
rcl
pop
push
arpl
fucomip
cmp
or
cli
mov
movsl
pop
adcb
xor
add
and
sub
mov
mov
mov
or
cmp
push
lret
leave
icebp
shlb
mov
mov
fwait
cmp
pushl
shlb
mov
testb
lds
push
loopne
into
test
ret
test
aad
cli
sbb
adc
push
cli
movsb
loope
adc
jns
dec
hlt
or
dec
mov
xor
std
push
sub
aad
cmc
mov
xor
cwtl
sbb
xor
mov
xchg
repnz
pop
popl
pop
add
mov
loope
pop
outsl
sub
push
sbb
and
xchg
push
in
subl
jbe
fildl
sub
and
or
and
adcl
into
lods
insl
in
push
xorl
enter
fwait
push
into
inc
cltd
fmull
fucomp
xor
cld
ret
and
ljmp
in
sub
push
dec
cmp
mov
jb
xchg
pushl
leave
xor
adc
mov
mov
pop
lds
jb
int
andl
add
in
lods
dec
das
dec
scas
fs
mov
sub
ljmp
add
mov
clc
add
stos
jbe
adc
sbb
cli
out
pop
fwait
push
lahf
int3
shrb
and
jmp
lcall
nop
dec
out
mov
mov
jno
xor
push
jecxz
jmp
jp
add
andb
outsl
xlat
sub
lahf
sbb
add
mov
cmc
jl
push
into
add
xchg
mov
xor
sub
jge
sbb
xlat
adc
mov
xchg
xchg
cli
mov
enter
popf
jg
xchg
rorb
push
or
jle
add
stc
mov
sbb
aad
in
xchg
pop
mov
jl
fs
in
ret
adc
cmpsb
add
xchg
cmc
sbb
cmp
mov
xor
adc
xchg
adc
dec
cmp
mov
mov
addr16
xchg
icebp
pop
jne
out
popa
mov
and
jo
test
lods
mov
cmc
push
test
or
and
push
sub
jp
call
ret
inc
lret
and
sub
push
bound
pop
jp
imul
mov
jnp
dec
and
mov
testl
stc
mov
add
xor
mov
mov
test
gs
dec
mov
push
loop
mov
or
aas
popa
aaa
leave
or
popf
jae
aas
jle
icebp
jl
jae
stos
sbb
jno
aam
xchg
jo
push
xchg
sub
loopne
add
out
add
mov
mov
push
mov
loop
jmp
int
shl
inc
ja
mov
mov
mov
cmc
mov
fstpl
add
leave
xchg
scas
cwtl
mov
sarb
cltd
test
enter
push
or
mov
je
loope
cmp
call
dec
add
sub
inc
pushf
jo
jne
adc
add
inc
push
outsb
inc
and
fisttps
adc
fs
mov
and
push
addb
adcb
adc
setno
mov
out
mov
jns
sbb
inc
int
mov
es
rorl
cmp
loope
fdivrs
cld
push
aaa
xchg
gs
repz
sbb
xchg
jle
es
inc
sub
popa
jg
sub
and
mov
pop
push
in
and
xor
jne
ljmp
cmpsb
xchg
rcrb
das
leave
push
addl
push
dec
jge
icebp
ficoms
loope
sbb
inc
sbbb
loopne
out
inc
sub
cwtl
or
hlt
je
mov
nop
in
lret
xor
std
jp
insl
push
inc
sub
lea
inc
jo
jle
stc
stos
jno
out
xchg
fprem1
jnp
jbe
mov
mov
stc
xor
push
cmp
mov
mov
or
inc
in
mov
jbe
out
dec
sbb
or
adc
inc
pop
stc
clc
fldt
add
or
add
outsl
mov
jle
mov
mov
sbbl
mov
mov
out
fnstsw
ror
xor
mov
pop
ret
addr16
adc
sbb
dec
sub
test
cwtl
jnp
mov
stos
add
adc
push
and
cli
ret
fidivrs
subl
jp
sub
mov
xchg
push
push
mov
sbbl
sub
imul
xor
adc
jnp
lret
imul
rcr
xlat
icebp
es
sbb
adc
clc
call
les
outsl
jmp
imul
movsl
adc
lods
fwait
cmpsb
test
rol
sarl
ss
jae
and
pop
add
mov
xchg
and
mov
out
push
inc
jne
rorl
push
mov
movsb
stos
test
mov
cmp
pop
jb
orb
pusha
mov
test
inc
mov
insl
xorl
cmp
leave
mov
push
dec
cmc
mov
hlt
hlt
mov
int3
hlt
rolb
lahf
aaa
lea
mov
jl
insl
clc
pop
test
imul
jbe
and
adc
push
fldt
in
loope
and
iret
enter
loop
test
cmp
sbb
lods
cld
rcrl
daa
sbb
xchg
dec
xor
and
lods
inc
mov
iret
fisttpl
mov
or
mov
jle
xchg
shlb
dec
dec
xchg
out
mov
loopne
test
lea
and
mov
mov
mov
addl
scas
xchg
cmpl
inc
lret
push
test
aad
xchg
cwtl
test
dec
popa
pop
pop
xor
lret
adc
push
and
sahf
loope
lret
mov
sbb
out
dec
aas
incl
out
iret
daa
shl
mov
out
aas
test
adc
adc
push
mov
dec
clc
mov
jle
popf
bound
sbb
into
fidivrl
gs
sahf
rclb
add
fs
movsb
popa
bound
sbb
mov
push
mov
mov
adc
dec
lods
daa
sbb
adc
out
ftst
cli
mov
pop
mov
out
and
sub
mov
dec
popa
adc
mov
jne
test
pop
stc
notl
mov
mov
daa
push
aas
mov
inc
fcoml
xchg
sub
inc
pop
mov
cld
lods
dec
rcl
mov
push
sub
aaa
sub
push
fnstenv
call
loope
js
push
and
cwtl
xor
add
cmp
xchg
xchg
jp
outsl
dec
les
mov
dec
loop
out
out
jns
mov
sbb
xchg
xchg
adc
cltd
fwait
cmp
mov
aas
or
jmp
inc
leave
bound
out
popf
add
mov
insl
mov
mov
push
fsubp
add
mov
rorb
fbld
int3
not
xchg
in
jmp
ret
mov
cmc
xor
enter
mov
cmp
xchg
add
cwtl
inc
es
loopne
shll
inc
dec
sub
or
pop
adc
mulb
or
cmp
pop
mov
hlt
js
adc
jo
or
mov
mov
and
loop
iret
mov
mov
enter
dec
xchg
cmp
pop
pop
inc
pusha
mov
dec
leave
sub
out
mov
push
in
test
or
inc
cmc
andl
jge
push
sub
inc
ljmp
pop
jbe
dec
mov
ss
cmp
rorl
xor
out
jecxz
outsl
push
aam
add
inc
xlat
out
add
xchg
jo
push
xor
mov
fs
mov
hlt
adc
mov
rorl
jmp
xor
xchg
insb
subl
stc
pop
inc
mov
jmp
pop
sbb
jmp
int3
jge
aas
adc
imul
push
jo
out
xchg
outsb
fs
cwtl
testl
pop
adc
cmp
inc
insb
out
adc
mov
scas
hlt
dec
xor
cltd
rcll
add
ret
cmp
test
daa
cmpsb
fstl
dec
gs
mov
shlb
fs
mov
stc
ficoml
imull
out
xor
mov
and
in
call
mov
outsl
arpl
hlt
addl
adcb
xlat
lds
or
jmp
adc
gs
dec
cmpsb
push
push
lcall
rcr
fstl
dec
ljmp
sub
cmp
push
ss
gs
xor
xchg
xor
cmp
pop
bnd
ret
sbb
repz
addr16
mov
test
xor
push
push
xor
pop
rcr
cmpsb
jge
iret
ret
test
aam
xor
sub
dec
add
fists
addr16
cmpsb
cmpsb
cmp
pop
mov
jp
loop
xlat
xchg
cmpsl
pop
xor
xchg
pop
pop
xor
cmp
sbb
adc
and
pop
loopne
into
mov
xlat
aam
pop
xchg
stos
xchg
and
test
mov
xlat
aad
stos
clc
push
bound
inc
pop
cmp
or
xor
xor
rorb
fbstp
inc
jnp
jne
je
pop
add
dec
adc
fcomps
sub
cmpsl
push
push
dec
mov
mov
gs
jnp
mov
fdivrp
testl
xor
mov
pop
inc
push
cld
repz
sbb
sbb
pop
iret
or
les
cltd
push
xor
inc
pop
mov
cmp
mov
bound
mov
push
dec
jp
cltd
loope
clc
inc
filds
or
rcll
lea
mov
pusha
dec
pop
or
mov
xchg
testb
int
mov
dec
sbb
test
sbb
lret
push
sbb
pop
xchg
inc
add
stos
xor
push
adc
sbb
clc
leave
bound
dec
jg
incl
pop
jns
outsl
loop
pop
push
mov
test
in
movsl
jg
daa
movsl
push
xchg
out
adc
cmp
add
xchg
enter
pop
stos
fsubr
jle
inc
loope
test
roll
inc
mov
cltd
jmp
ljmp
sti
mov
fdiv
cmp
loope
out
jmp
xor
xor
pop
enter
and
mov
pop
adc
and
dec
sub
push
xor
inc
and
movb
lahf
sbb
mov
shl
bound
hlt
add
jnp
hlt
sub
lahf
je
xor
xchg
adc
ret
pop
out
push
dec
movsb
mov
clc
out
stos
push
out
mov
lahf
adc
in
adc
jbe
cmp
movsb
fcoml
sarb
and
or
in
std
outsl
lock
sbb
pusha
mov
push
pop
and
jb
cmp
orl
mov
dec
popa
cmp
aas
add
mov
jg
stos
cmp
jae
dec
adc
cmp
and
rorl
stos
cwtl
enter
jmp
jl
inc
ljmp
outsb
mov
addr16
mov
insl
cmpsl
pop
pop
inc
orb
imul
dec
xchg
sbb
pushf
ret
ret
mov
popa
fnstcw
mov
mov
push
cld
outsl
repz
xor
mov
jo
dec
add
cmpsl
lret
pop
fwait
lahf
es
adc
cli
lock
or
sti
bound
xor
jmp
icebp
add
push
in
adc
add
scas
pop
adc
mov
mov
bound
xchg
fcomp
mov
scas
mov
enter
pop
out
xchg
imul
aaa
sbb
pop
push
mov
scas
jo
fiaddl
push
in
add
push
fsubs
ss
mov
orl
testb
xor
xor
mov
xchg
sub
daa
mov
cwtl
mov
in
mov
mov
mov
popf
push
or
mov
inc
loope
movsl
and
dec
cmc
adc
test
or
and
in
pop
push
or
push
negl
cltd
or
push
ret
lahf
mov
pop
sti
inc
inc
cmp
movsl
pop
or
xor
push
add
pop
add
add
lret
jns
jnp
rorl
ja
pop
cmp
add
sbb
jnp
cwtl
push
shl
adc
adc
inc
mov
pop
cmp
mov
fwait
or
mov
lods
jle
sbb
push
mov
pop
js
rol
cmp
aam
lods
imul
cmp
adc
shl
ret
mov
jg
mov
or
xor
sbb
pop
cmc
orb
loope
jno
add
sub
sub
sub
pop
movsb
addr16
fadd
das
inc
aam
jnp
ficoml
sar
sbb
jl
icebp
sub
rcrb
cmp
push
xchg
decb
les
nop
or
hlt
aad
jmp
pushf
adc
or
aaa
lock
cmpsb
sub
pop
sbb
mov
dec
xchg
and
int
push
fdivrs
push
jne
cli
xchg
push
shrb
insl
inc
mov
jg
outsl
fists
lds
sbb
pushf
mov
or
xor
lret
sub
int3
sbb
cmp
dec
mov
sbb
dec
fildll
sbb
ret
mov
mov
test
das
mov
out
pushf
pop
repz
pop
div
jl
sbb
scas
pop
scas
xor
xchg
fstpl
and
mov
out
or
or
and
pop
fists
mulb
ss
sahf
mov
clc
add
pop
push
ja
xor
rcl
adc
cmp
jle
pxor
jmpw
xchg
outsb
mov
push
imul
jecxz
cmp
ret
out
cmp
loopne
inc
sahf
pop
pop
xchg
pop
jmp
inc
ja
fwait
stc
sub
push
rorb
fldcw
adc
sub
mov
mov
into
mov
nop
push
mov
inc
sub
fsubrl
scas
pop
sbb
cmp
sti
pop
cmp
xor
int3
dec
in
pushf
int3
in
faddl
out
cwtd
repz
std
popa
jl
es
aaa
jae
scas
cmc
xor
loopne
xchg
lods
push
pop
js
test
jl
push
pop
push
jp
xchg
adc
add
mov
iret
out
mov
pop
lods
or
and
and
je
mov
push
jb
push
jl
rolb
fwait
pop
mov
xchg
mov
inc
rcrl
loopne
pop
push
imul
dec
fdivrs
mov
cwtl
pushf
mov
xor
xorb
ret
mov
pop
add
pop
jo
jge
ljmp
jmp
push
pop
in
sbb
std
adcl
leave
pop
mov
push
xlat
out
jl
movsb
inc
push
addr16
jo
push
cmp
arpl
loopne
add
mov
pop
cmp
add
sbb
sbb
mov
sub
cli
xchg
push
addr16
push
or
mov
fbld
jmp
push
sub
jmp
pop
cs
inc
ret
inc
std
adc
xchg
sub
mov
sbb
lcall
or
in
cmp
jl
int
frstor
xor
mov
arpl
sbbb
pop
push
xchg
outsb
sub
icebp
decl
dec
jmp
jne
cmp
lcall
sbb
addr16
test
lahf
sbb
ds
push
dec
jg
imul
inc
pop
fwait
aam
cmp
repz
mov
adc
inc
xor
cltd
sbb
xor
in
popa
sub
xor
cmp
pop
cli
push
cmc
push
jns
stc
int3
out
stc
bound
subl
popf
gs
daa
xor
adc
inc
cmp
pop
inc
je
rorb
shl
xlat
stos
shll
jle
out
or
inc
lea
sahf
fs
outsl
xchg
or
rcrl
inc
call
faddl
out
and
pop
mov
jecxz
push
add
arpl
iret
xchg
aas
inc
fs
adc
stos
mov
out
bound
inc
repz
pop
adc
pop
sub
push
cltd
jb
aaa
imulb
cmp
inc
in
jnp
mov
mov
data16
adc
leave
mov
inc
and
xchg
mov
or
dec
ss
pushf
adc
jge
imul
dec
daa
add
stos
xchg
cwtl
pop
cmp
adc
movsl
iret
inc
pusha
sbb
shrl
mov
pop
shrb
and
pop
sbb
in
push
inc
mov
dec
dec
int
iret
jb
cld
sub
add
push
cmp
pop
notb
cli
pop
add
xchg
imul
negb
pusha
sbb
out
out
sub
rcll
pop
mov
xchg
test
lock
rolb
dec
sbb
sbbb
scas
fsubr
and
pushf
pop
jl
and
loopne
test
lods
lock
fisubrs
pop
adc
repz
addb
xor
fnstsw
ret
insb
lods
repz
lret
cmp
mov
adc
push
dec
and
shl
icebp
add
ljmp
movsb
mov
fildll
xchg
sbb
pop
test
inc
imul
jnp
xor
icebp
mov
push
mov
cmpl
ret
into
imul
lds
pushl
cmpsl
hlt
and
dec
stos
mov
aam
mov
addb
mov
push
je
into
inc
repz
nop
imul
add
or
xchg
push
orb
adc
adc
sub
cmp
insb
pop
or
sbb
cltd
outsl
jb
mov
outsb
mov
aas
pop
mov
push
or
xor
pop
aam
mov
inc
unpckhps
inc
inc
push
mov
mov
xchg
pop
sbb
pop
xchg
arpl
mov
pop
mov
sbb
push
in
xor
mov
cs
xchg
dec
xor
insl
mov
stos
std
push
sahf
scas
jne
ds
push
mov
mov
mov
pop
pop
mov
cmp
out
lret
out
cld
mov
mov
nop
xchg
mov
add
ret
pop
shl
cltd
or
mov
enter
test
dec
jl
push
jnp
ja
sarb
loop
jnp
sub
inc
aad
jg
cmc
shrb
idiv
mov
adc
sbb
fnstenv
push
inc
stos
push
and
dec
and
xchg
testb
imul
mov
push
pop
test
jecxz
mov
mov
cmp
out
faddp
or
sub
and
out
popa
mov
jnp
push
dec
cmpsb
push
xchg
loopne
shlb
pop
lock
lret
mov
xor
mov
subl
cmp
xchg
dec
cmp
add
sbbb
and
repnz
hlt
cwtl
sub
stc
popa
mov
test
mov
int
testb
jnp
ffree
inc
pop
jb
dec
push
pop
push
test
sbb
sbb
sbb
ja
inc
jne
loop
sbb
dec
loope
sbb
aam
std
push
rclb
inc
repz
jno
ss
xor
aad
movsl
sbb
outsb
push
mov
in
pop
jno
and
out
xor
lock
mov
testb
cmp
sbb
enter
int
add
sbb
es
pop
inc
add
fdivrl
inc
pop
inc
xor
adc
fucomi
incb
or
push
insb
lods
out
dec
push
fcoml
shrb
mov
jne
movsl
jmp
add
add
mov
xlat
int
xchg
mov
dec
mov
sub
push
cmp
or
dec
mov
gs
inc
mov
cmp
push
add
packuswb
outsb
sub
push
pop
pop
imulb
sbb
movsb
mov
inc
inc
pop
sti
jl
cld
repnz
xchg
cwtl
ja
sub
arpl
xor
outsb
sti
mov
insl
imul
leave
jbe
lret
ja
clc
inc
imul
sbb
imul
leave
lods
cmp
into
pop
mov
mov
sub
or
mov
hlt
imul
adc
pop
std
in
xchg
sbb
popf
mov
out
daa
mov
pop
hlt
push
leave
sub
pop
adc
nop
sbb
xchg
out
in
cmp
shlb
pop
sub
inc
xchg
bound
pop
movsb
fcoms
adc
xor
dec
cmpsl
adc
mov
and
xchg
popf
imul
sbb
les
stos
jg
lret
ret
push
sub
insl
xor
sub
enter
push
lds
test
stos
cltd
pop
cmp
js
mov
in
fists
lds
add
jb
and
jl
aas
mov
in
outsl
dec
xorb
jnp
jmp
inc
sbb
lret
mov
lret
pushf
pop
ds
jmp
jb
push
add
incb
ret
inc
push
adc
fldenv
in
adcl
push
push
imul
popa
addb
hlt
fs
test
pop
jle
leave
mov
int3
pop
inc
adc
push
sub
test
outsb
movl
and
pop
or
sub
mov
iret
nop
dec
sbb
mov
or
aaa
xchg
dec
add
add
cmp
sbb
jb
subb
cs
xchg
or
xor
mov
adc
icebp
dec
out
push
add
popf
pop
cli
jp
mov
lahf
xor
ror
mov
fcoml
fisttpl
ret
lcall
push
lock
data16
aad
je
ret
mov
lods
sbb
out
les
xor
adc
push
outsl
cmp
mov
not
pop
insl
lock
and
out
fs
mov
movl
mov
lret
mov
pop
inc
bound
rcrb
dec
stos
cwtl
outsb
in
dec
pop
mov
prefetch
iret
flds
mov
add
pop
cmpl
les
or
cmp
sbb
sub
xchg
fdivs
dec
dec
add
cmp
push
testl
test
ljmp
and
ljmp
jecxz
inc
sub
insb
stos
aam
cmpsl
pop
add
icebp
push
lods
add
mov
bound
inc
sahf
pop
push
xor
add
sbb
sbb
push
test
mov
and
js
movsb
push
sub
sub
loope
inc
scas
pop
out
pop
sub
push
rcr
add
je
dec
jbe
pusha
cmp
addr16
dec
jns
jg
dec
jle
notl
adc
dec
std
mov
jg
jge
icebp
pop
ds
mov
test
and
cmpb
cld
or
push
mov
loop
gs
test
cmp
add
push
notb
mov
add
jb
dec
je
sti
bound
xchg
roll
adc
mov
mov
lods
mov
cmpsl
xor
push
lock
adc
fldl
hlt
sub
dec
xor
mov
mov
xchg
bnd
add
mulb
or
das
cmp
cmpsb
cvtpi2ps
push
add
jg
scas
add
xor
jno
jle
roll
xchg
pop
xor
je
inc
jge
fs
sub
shrb
pop
inc
iret
xor
inc
stos
xor
sarb
aaa
cmp
sbb
aaa
xchg
les
subl
jp
in
sbb
cmc
aas
test
movsb
gs
jmp
int3
mov
popa
jae
dec
pop
stos
lcall
dec
popa
sub
jmp
lcall
fsubs
sbb
adc
cltd
popf
mov
lds
mov
add
xchg
push
xor
xor
jnp
fdivrs
out
sbb
lods
shr
or
dec
stos
shll
cli
dec
xor
or
aam
mov
dec
adc
xchg
adc
jle
test
inc
jnp
pop
mov
mov
out
cs
mov
xlat
sahf
pop
pop
inc
adc
jle
loope
daa
lret
pop
je
stc
aas
push
xor
xchg
jmp
hlt
in
cmp
aas
jmp
pusha
shlb
inc
xchg
sub
fwait
lret
adcb
push
and
scas
iretw
lods
iret
sub
jbe
arpl
int
mov
xor
fisttps
add
sbb
data16
fdivrl
dec
push
popa
out
mov
aaa
adcb
in
cmp
push
mov
fmul
and
andb
xchg
fsubl
inc
das
jo
inc
es
lock
add
popf
popl
cwtl
outsl
cli
inc
and
insl
pop
notl
bound
ss
dec
into
lds
mov
mov
mov
insl
pop
fldl
cmp
cmp
and
xchg
ret
mov
jp
xchg
pop
adc
aam
xor
and
movsl
jl
ret
xchg
lret
in
in
xor
mov
jo
add
fwait
pop
scas
mov
add
test
nop
and
pop
push
in
dec
xor
adc
xchg
push
mov
aaa
mov
cmpsb
cwtd
lods
bound
pop
fdivrl
outsb
xchg
aas
in
pop
insl
add
gs
fldenv
shl
mov
in
cmp
or
daa
mov
dec
rolb
add
dec
scas
add
cmpsl
ret
push
mov
mov
sarb
imulb
push
int
sbbb
sbb
pop
or
mov
shrl
in
dec
fisubrs
test
lcall
pop
sub
mov
push
hlt
ds
inc
xor
adc
pop
popa
adc
or
mov
add
pop
cmpsb
or
jg
pop
cmpb
push
in
ror
insb
jmp
jg
fnstcw
pushf
xchg
call
xchg
data16
jle
lock
out
pop
xchg
into
or
mov
jb
cmp
inc
stos
fcoms
test
adc
mov
mov
dec
rcl
test
out
je
mov
imulb
push
or
idivl
flds
bound
notl
cmpsl
dec
and
into
push
jnp
pop
ficomps
mov
mov
xor
dec
or
jne
push
idiv
fists
push
cmp
sub
sub
mov
push
lock
cmp
inc
sbbl
cld
sub
sahf
lret
sub
repnz
mov
addb
stos
push
shrl
mov
or
push
adc
std
dec
push
stc
or
shl
ret
cmp
jbe
repnz
and
movsb
add
adc
and
push
repnz
pop
xor
xor
fcomi
xor
sahf
les
fs
or
pop
cmp
sahf
enter
iret
xor
mov
lret
jne
mov
pop
insb
je
ffree
jmp
cmp
ret
scas
inc
cmp
mov
sbb
inc
out
dec
icebp
push
dec
loope
cmp
push
mov
sub
test
imul
scas
fcomip
call
xchg
aaa
fnstenv
idivl
jp
inc
mov
arpl
ljmp
jge
test
stc
test
pop
sbb
xchg
imul
fstpl
sbb
push
loopne
sub
pop
into
aam
call
repnz
dec
adc
nop
das
cli
neg
lahf
fisubrl
fisubs
ret
push
sub
test
fstps
sub
insl
movsb
fwait
dec
jno
add
adc
pushf
js
mov
push
outsb
popf
popf
lods
mov
mov
jno
mov
mov
ljmp
cmp
lahf
add
loop
dec
cmp
outsl
xor
xchg
inc
sbb
addb
sti
mov
dec
pop
je
nop
mull
dec
addb
push
loopne
in
jbe
adc
adc
jne
lds
imul
test
cmp
jl
hlt
mov
lock
outsl
mov
mov
or
stc
mov
dec
jl
int
inc
ret
outsl
jl
sahf
pop
mov
mov
cmpsl
out
out
or
imul
xchg
sti
pop
push
mov
pop
cmp
jnp
mov
add
jge
or
outsb
mov
data16
mov
hlt
faddl
lock
pusha
sbb
mov
les
popf
roll
jne
scas
jecxz
mov
adcb
inc
jecxz
mov
imul
jp
jmp
out
jo
out
mov
or
stos
push
sbbl
cmp
out
xchg
or
push
lock
andl
loopne
loope
and
je
jle
sbb
mov
mov
add
jae
sbb
stc
jp
jle
push
out
add
push
cmp
addr16
dec
shll
shl
mov
testl
sbb
in
xchg
or
mov
int3
add
and
sub
je
cli
jbe
push
mov
mov
out
xlat
mov
xchg
mov
and
xor
test
lock
jb
add
iret
sahf
and
sub
pusha
mov
or
and
ljmp
add
dec
popa
ss
test
fsub
sub
mov
mov
rcll
jp
jo
ret
dec
repz
roll
push
test
mov
push
xchg
jg
aaa
mov
xchg
xor
notl
jmp
scas
cmpl
rcrb
test
in
push
pop
arpl
lea
mulb
xor
inc
test
mov
hlt
lret
js
push
push
femms
fists
push
jno
scas
gs
inc
pop
and
sbb
aas
je
mov
mov
inc
lods
and
movsb
cpuid
add
testl
pop
cmp
popf
or
and
mov
aaa
sub
mov
add
mov
scas
and
and
ja
push
negb
xchg
dec
js
and
xchg
les
out
pusha
and
mov
push
fwait
cmc
fidivrl
cmc
cwtl
xchg
ret
push
mov
pop
xchg
mov
testl
ss
push
mov
sub
mov
sub
shlb
push
testw
adc
into
lds
mull
std
adc
sbb
dec
sub
testb
sarl
orw
in
rclb
pop
mov
push
mov
aad
mov
movsb
mov
mov
inc
pop
or
sbb
sub
mov
arpl
call
fists
or
pop
repz
sub
xor
pushf
js
test
pop
ja
pop
into
mov
sbb
dec
outsb
cli
sub
js
cmp
in
push
test
mov
aad
mov
or
ret
mov
dec
mov
jnp
xor
xor
xchg
aam
or
aas
cmpsl
cltd
sub
xor
ret
cld
push
adc
pop
cmp
out
fnstsw
push
sti
cmp
clc
repnz
cmp
lcall
push
jl
clc
sbb
and
lock
out
lret
jge
push
sbb
adc
sahf
test
movsl
jecxz
mov
and
jp
push
movsl
mov
pop
jb
adc
lret
add
pop
xchg
and
dec
mov
mov
cld
loop
movsb
mov
js
push
mov
pop
push
dec
or
fcmovnbe
mov
sarl
sub
addr16
mov
lret
and
pop
sti
dec
push
mov
adc
aad
inc
jge
mov
repz
inc
mov
push
cmp
jno
repz
cmp
jl
pop
xchg
dec
mov
sahf
mov
pop
push
lods
dec
cmpsb
mov
cmp
adc
mov
jmp
shl
sbb
ja
icebp
sahf
in
movb
in
ljmp
mov
fcmovnb
lret
xchg
mov
xor
icebp
adc
repnz
cltd
mov
mov
pop
rorb
ret
jmp
mov
lcall
push
pop
dec
pusha
mov
lahf
mov
cmp
ret
mov
sub
cmp
sbb
xor
xchg
sbb
dec
mov
je
dec
xchg
mov
add
lahf
scas
or
jnp
push
insl
call
fldl
das
aaa
xor
jg
jno
lea
jecxz
arpl
imul
mov
dec
sbb
pop
roll
add
push
jae,pn
add
xor
lods
pop
popf
int
cmp
dec
fs
add
outsb
mov
cmc
push
in
cmp
sub
ss
and
fwait
imul
xlat
ljmp
shll
mov
aaa
in
sub
call
mov
cmc
jo
in
push
xor
cmp
in
add
popa
xor
jae
imul
push
and
scas
sbb
push
or
pcmpgtb
out
adcb
inc
add
push
jnp
jnp
pop
addb
in
les
lea
xchg
pop
repz
in
pop
fists
cwtl
xor
out
shll
or
dec
jne
loop
xor
cmp
and
jo
xor
mov
loope
gs
out
loopne
adc
mov
sub
ja
lods
pop
push
popl
adc
es
mov
aad
mov
filds
xchg
loope
jl
mov
ret
pop
leave
cmpsl
cmp
mov
push
jmp
pop
cld
iret
pop
xor
add
mov
jnp
sub
outsb
hlt
or
inc
stos
cmp
xor
mov
stos
inc
push
gs
je
add
mov
btr
lret
jg
sub
sbb
mov
bound
push
idivl
cmp
sbb
lcall
inc
cmp
dec
addr16
mulb
pop
xchg
ffreep
dec
lds
add
sbb
sar
das
shlb
or
xchg
leave
pop
cs
sbb
add
int
jge
loope
sbb
sbb
jecxz
stos
bnd
aaa
lea
push
jle
dec
lock
inc
lcall
sbb
aaa
mov
jbe
mov
addr16
fwait
lods
push
mov
add
shl
loop
enter
lea
or
or
pop
ja
xlat
imul
sub
pop
mov
jecxz
sbb
mov
ja
add
int3
ret
adc
xlat
es
mov
cwtl
sbb
ret
push
int
cmpsl
scas
jae
psrlw
fstl
push
out
decb
pop
fwait
sti
xchg
sahf
js
repnz
aaa
adc
fs
scas
mov
imul
push
fistpll
ja
jp
repz
dec
sbb
cmp
or
negl
imul
stc
stos
pop
adc
jnp
or
clc
add
cmp
cltd
xlat
xchg
mov
lea
push
andl
stos
pop
stos
lret
xor
and
sub
sbb
jecxz
push
subb
jmp
sub
xor
or
pushl
outsb
in
js
sbbl
cmp
insl
inc
push
ret
xchg
int3
and
pop
xor
add
or
and
push
aaa
dec
mov
jle
add
or
nopl
push
xchg
cld
pop
outsb
sub
and
dec
movl
or
adc
cltd
push
mov
add
ds
push
sbb
stc
cltd
mov
mov
movsl
sub
je
inc
test
ljmp
out
out
xor
icebp
ret
shl
ret
mov
lea
imul
out
fisubrs
fdivr
sbb
rclb
jns
dec
sub
test
imul
outsl
xchg
mov
mov
js
mov
adc
mov
pop
pop
jecxz
test
push
lods
fsub
bound
or
jae
mov
cli
fildll
jg
jb
pop
mov
int3
arpl
nop
mov
xor
subl
hlt
pop
jl
xor
inc
sub
aas
ljmp
test
mov
mov
cmp
ret
ds
sbb
hlt
push
mov
and
xor
xlat
scas
sub
cmc
and
scas
pop
mov
cmp
lods
inc
lds
mov
sbb
cmp
rolb
repz
roll
cmc
fwait
xchg
cmp
out
ret
gs
sub
int3
add
add
fimuls
push
sub
xchg
aad
pushf
pop
fcomip
or
inc
dec
daa
insl
imul
imul
or
shl
mov
xor
jnp
lock
xor
cs
stos
fwait
push
pop
xchg
hlt
mov
and
sub
mov
adc
inc
test
sbb
mov
sbb
aaa
insl
lahf
and
hlt
pusha
pop
ja
inc
xchg
mov
adc
jg
pop
mov
mov
lods
fsubrl
or
xchg
inc
aaa
sub
stc
dec
xlat
jecxz
fisubl
iret
in
adc
or
add
scas
push
cmp
pusha
dec
sbb
bound
leave
pop
in
add
push
lea
sti
adc
out
jnp
and
or
jg
or
cmp
std
ss
daa
push
jnp
filds
mov
jle
mov
out
sti
shl
in
loop
into
inc
dec
ds
add
fistl
xchg
xorb
loop
std
add
out
leave
mov
mov
out
stos
inc
imul
imul
jb
imul
xor
notl
outsl
les
mov
aaa
fadds
movsb
sbb
push
sub
mov
mov
std
lods
popf
add
xor
dec
xchg
pusha
mov
icebp
push
mov
outsb
fprem
and
pop
test
mov
imul
data16
push
and
subl
jle
mov
xchg
jo
and
inc
pop
cmp
mov
push
jb
xor
fidivrs
int
jge
fcomp
sbb
call
pushw
leave
inc
je
pop
test
or
push
push
inc
int
test
aam
cmc
popf
or
push
adc
inc
imull
mov
call
iret
lahf
test
add
leave
push
jae
pop
rcr
and
std
mov
addb
pop
loop
jnp
cld
sbbb
jge
cmp
es
adc
cmc
cmp
mov
scas
lods
adc
cmp
pusha
fists
mov
les
jg
inc
mov
xor
mov
insb
mov
adc
jle
push
into
aad
in
cltd
sub
add
test
add
cmc
push
jae
cmpsl
fucomi
stos
stos
stc
lahf
test
jno
add
fidivrl
loop
add
lahf
add
cmp
xchg
sarb
push
pop
dec
sarb
or
cmp
in
popf
testl
rcrl
cmp
mov
mov
lea
mov
orl
hlt
cmp
ljmp
push
cltd
and
mov
push
or
mov
and
and
fstpl
mov
mov
outsl
lcall
int
inc
jns
sub
int
test
movb
adc
leave
sahf
lds
cmc
add
pop
clc
cmc
push
andl
inc
add
pop
jmp
arpl
xor
fwait
sbb
lahf
push
in
mov
dec
jb
or
cmp
inc
xor
mov
in
jge
icebp
fldt
subl
cmp
xor
fbld
or
sbb
mov
cmp
inc
dec
dec
xchg
lret
pusha
sbbl
mov
lret
xor
test
repnz
pop
mov
adc
and
mov
repnz
xchg
mov
daa
les
pusha
pop
scas
clc
adc
xchg
stos
setae
jo
fwait
popf
cltd
push
push
or
sbbb
xor
xor
cwtl
aam
mov
add
out
daa
cmp
jmp
pop
ss
imul
xor
mov
popa
pushl
addr16
rcl
std
and
cli
mov
loopne
adc
adc
mov
sti
lock
push
or
mulb
push
sbb
loope
leave
cmp
mov
add
adc
inc
dec
inc
sbb
cmp
add
jbe
and
pop
scas
enter
xor
int
mov
adc
out
add
dec
mov
pop
mov
mov
xchg
dec
mov
loop
icebp
push
pushf
push
cmp
ds
mov
outsb
lcall
addl
lcall
jecxz
adc
inc
test
inc
addr16
jmp
add
sbbb
xchg
movb
jb
lea
imulb
cmp
mov
les
xor
aam
and
mov
mov
cld
inc
pusha
or
mov
xchg
test
rcrl
or
xlat
mov
cmp
jp
out
add
add
fwait
pop
cmp
out
fs
mov
in
jle
adc
mov
outsl
in
loop
out
jle
mov
rcrl
out
int3
clc
ror
or
sbb
movsb
jo
fidivl
sahf
push
and
jns
sahf
jno
lock
andl
ds
js
pushl
lods
loopne
mov
clc
mov
lcall
cmpsb
fisttpll
jl
sub
cmp
adc
adc
mov
mov
sar
dec
dec
call
loopne
push
inc
inc
fiadds
push
ss
push
icebp
bound
adc
sarb
add
jl
fcomip
push
lret
icebp
imul
sbb
jae
inc
movsb
and
or
stos
and
push
cs
das
or
sbb
cmp
loope
mov
mov
push
mov
xchg
cmp
xchg
mull
mov
xor
js
inc
sti
test
or
rcrl
sbb
inc
mov
cmc
in
andl
push
mov
mov
and
cli
lods
mov
test
insb
movsl
clc
das
mov
rcrl
and
mov
js
sbb
push
sbb
and
xchg
movsl
pop
rorl
lcall
mov
adc
cmp
xor
mov
fwait
or
shrb
mov
mov
subb
les
int3
sub
cmp
popa
sub
push
mov
pop
repnz
jg
enter
out
lret
div
ljmp
jg
in
movsl
xor
cmp
mov
and
jo
stos
outsl
mov
xchg
xchg
jbe
jg
mov
je
into
mov
cmp
repnz
xor
loopne
lods
pop
sar
repnz
push
lods
ss
jo
fcoml
or
add
mov
push
orb
lret
add
iret
stc
stos
sahf
or
push
in
inc
xchg
mov
push
fdivr
inc
adc
dec
jne
popf
mov
xchg
pop
inc
insb
inc
or
test
gs
js
mov
or
inc
xchg
mov
xor
clc
test
xchg
sbb
jecxz
jne
push
jnp
cmp
les
int
repz
out
jp
inc
inc
and
shl
mov
or
xlat
xchg
aas
daa
xchg
mov
imul
stos
loopne
jae
xor
sub
std
mov
enter
outsl
sarb
jmp
jmp
mov
push
xchg
sarb
mov
sti
mov
addb
pop
xchg
vmovups
shrl
jge
cmp
mov
or
jnp
sbb
cmp
xlat
inc
sub
ljmp
ret
or
lret
push
je
insb
mov
inc
mov
dec
sbb
add
and
inc
lret
ja
or
xchg
mov
inc
sub
jne
pop
lds
xchg
jns
jmp
in
ja
push
jae
dec
pusha
xor
arpl
lods
push
push
imul
inc
cmp
xor
pop
pop
or
arpl
inc
mov
inc
dec
mov
and
mov
arpl
int
mov
sbb
mov
je
cld
fcmovb
int
cmp
and
cmp
iret
and
dec
push
lcall
data16
es
cld
inc
and
insl
or
outsb
icebp
push
sub
pop
mov
shlb
ljmp
es
aas
or
cmp
roll
jnp
xchg
pop
aaa
xchg
mov
pop
cmp
xchg
push
cwtl
fimuls
jle
pop
push
xchg
mov
sbb
mov
mov
sub
add
outsl
movl
mov
and
imul
ds
or
insl
inc
test
ret
xchg
push
stos
dec
sbb
or
mov
jo
cmpb
add
dec
lock
mov
out
sub
stos
sahf
mov
lcall
out
sbb
shlb
add
mov
sub
pushf
iret
dec
into
mov
add
js
repnz
hlt
mov
arpl
jle
icebp
mov
jbe
adc
into
loopne
idiv
inc
xchg
adc
push
push
cld
xor
shlb
mov
cmpsl
int
mov
es
or
js
mov
push
enter
xor
aas
lods
jns
sti
sub
in
cmp
pop
dec
jb
shll
sbb
jg
xchg
test
fldcw
push
jns
cmp
lret
pop
hlt
jo
push
test
sub
or
mov
xchg
add
jns
or
push
jno
mov
dec
scas
cwtl
mov
xor
inc
popf
xchg
mov
scas
mov
mov
xchg
testb
or
xor
mov
in
data16
fwait
mov
pop
xor
shl
aad
dec
mov
int3
and
inc
jle
adc
adc
cli
mov
sub
mov
pushf
inc
repz
rcl
shlb
xchg
push
lods
pop
int3
cmp
mov
or
mov
outsl
fisttpl
sub
sub
sub
jge
xchg
jo
fcmovne
xchg
cmc
cmp
movsl
sbb
fmul
mov
gs
js
or
mov
aam
aas
leave
mov
shlb
rcll
pop
sahf
push
sbbl
pop
ret
sub
test
pop
and
dec
pushf
mov
cmp
pusha
insb
shll
mov
push
mov
xor
push
mov
add
sub
mov
ret
and
inc
mov
sub
mov
test
cmp
arpl
mov
rol
negb
or
push
inc
loopne
outsb
jne
add
push
sbb
mov
mov
cmp
lret
cld
push
dec
aad
pop
gs
mov
ljmp
adc
cmp
imul
mov
ror
dec
dec
and
and
fs
pop
sub
pushf
jno
shrl
pop
mov
and
or
in
jecxz
lret
or
sub
jl
lret
xorl
insb
dec
sub
sti
jae
fidivrl
mov
aad
testb
mov
sbb
inc
xor
mov
test
fsubl
adc
xor
mov
mov
push
jecxz
cmp
fldenv
into
in
outsb
mov
out
jno
and
sbb
das
clc
adc
dec
aas
aad
dec
xchg
lret
call
push
sub
jl
adcb
jne
push
or
leave
dec
mov
pushf
nop
stos
in
test
outsl
loope
test
call
jl
fstl
pushf
dec
or
jge
mov
sbb
loope
sbb
push
mov
and
pop
leave
mov
imul
arpl
mov
xchg
adc
pop
stos
mov
inc
imul
mov
adc
dec
sbb
and
js
sub
adc
xchg
adc
jns
cmp
xchg
mov
mov
jno
dec
dec
mov
mov
shrl
mov
lods
mov
add
jecxz
pop
aas
dec
je
fs
cmp
incl
divb
popa
jp
mov
jmp
fldenv
andb
push
pop
test
sub
hlt
mov
push
jnp
lds
jne
adc
xor
filds
orl
jge
sahf
push
jnp
iret
push
xor
xchg
mov
jbe
out
cmpsl
mov
leave
adc
fs
out
jp
je
pop
xchg
repz
sub
mov
xor
push
cmc
loope
cwtl
pushl
data16
mov
fistps
sti
adc
lret
cmpsb
test
sub
in
andb
pop
out
and
inc
testb
jmp
enter
jo
shlb
js
inc
jle
sub
xchg
pop
rorb
sbb
mov
sub
mov
xlat
das
mov
push
mov
sbb
dec
pop
cs
pop
cmp
push
pop
clc
jb
mov
lock
mov
sbb
ret
push
shll
sbb
ror
sahf
and
lea
sub
loope
xchg
jne
mov
jge
fiadds
fists
mov
mov
mov
jp
fmul
xor
jne
sbb
enter
cwtl
xchg
inc
and
push
rcl
fildll
xor
lret
imul
adc
jp
xchg
pop
mov
jecxz
fadd
jae
sub
xchg
or
mov
mov
in
cmp
adc
mov
xor
addb
shl
pop
inc
std
cmp
test
aam
jnp
sub
pushf
lahf
sbb
lahf
inc
sbb
fcompl
ret
cmpsb
lea
mov
movsl
jle
and
fisubrs
add
call
dec
movsb
ljmp
lods
fisttps
cmc
mov
inc
lock
mov
fwait
add
test
jnp
scas
inc
add
ss
lcall
sti
imul
mov
xorl
xor
jge
daa
xorb
jns
mov
lock
sub
adcb
xor
gs
fmull
hlt
rcr
stc
pop
push
mov
mov
xchg
cmp
push
jns
data16
movzwl
jae
mov
aas
nop
pop
bnd
out
cmpsb
arpl
add
add
jmp
cmp
push
push
lds
dec
repz
sub
mov
fidivrs
xchg
loop
scas
rolb
in
fnsave
dec
mov
push
stos
mov
stc
sub
ljmp
enter
jnp
das
dec
icebp
int
mov
imul
popf
in
push
jo
sbb
dec
xorl
loop
xlat
push
je
pop
xchg
adc
arpl
out
dec
jmp
push
dec
lcall
xchg
fbld
jb
imul
push
ret
cwtl
push
or
out
mov
jmp
push
arpl
lods
lods
pop
sbb
test
fsub
jne
mov
inc
mov
cld
addr16
mov
mov
out
daa
add
in
xchg
pop
je
int
adc
sbb
mov
xchg
gs
scas
cmp
stos
pop
roll
push
adc
inc
cmp
out
or
pushf
mov
or
sbb
xchg
push
xor
popa
add
rcrb
xor
add
add
push
or
or
out
fidivs
mov
fmull
xchg
out
daa
adc
sbb
and
mov
inc
pop
cmp
lcall
xchg
enter
addb
shrl
xlat
in
lods
xor
insl
fcompl
ficoms
test
in
test
inc
inc
xor
dec
cmpsb
imul
sbb
ret
mov
out
enter
lock
or
ret
pop
pop
loopne
inc
mov
mov
lahf
xchg
xchg
or
mov
sub
pop
lret
idiv
sahf
fs
jl
jo
add
cmp
pop
mov
stos
js
dec
mov
lods
movb
rcrb
jno
sub
cli
pop
incl
pop
lods
out
test
push
call
dec
push
add
jb
mov
sub
iret
insl
mov
adc
adc
lds
jle
mov
jge
jo
jge
xchg
mov
and
ds
pop
cs
mov
test
mov
xor
clc
imul
adc
xor
int3
loope
sbb
mov
lcall
jle
loope
sbb
fdivr
fsubr
dec
clc
and
cmp
or
push
mov
sti
cmp
pop
mov
fcmovb
rorb
sbb
call
or
scas
ja
inc
ljmp
mul
pop
aaa
mov
cmp
jmp
gs
xlat
or
loope
adc
jb
sub
into
cmpsl
dec
or
or
dec
jnp
das
xchg
sbb
les
jge
or
fidivs
lea
daa
lret
and
cmp
add
xchg
mov
rcll
lock
adc
stos
mov
repz
cmp
jno
adc
sub
roll
jo
pop
outsb
cs
push
xor
dec
iret
cmp
pop
call
out
fs
dec
add
pop
jbe
fnstenv
fisubrl
xchg
jae
fnstenv
and
call
insb
jle
jmp
sub
or
jno
ds
add
add
pop
sbb
cli
ja
int3
out
outsl
xor
divb
xor
test
pop
mov
mov
and
mov
dec
mov
jl
dec
push
gs
loop
or
inc
mov
sbb
dec
push
lcall
cltd
lea
jo
out
jg
loopne
mov
dec
cmpsl
aaa
push
pop
xchg
lret
sub
pop
std
sarl
jp
sbb
adc
jns
mov
aam
dec
jp
push
je
push
mov
popf
cmpsl
cltd
jl
xchg
push
ja
imull
adc
popf
jmp
xchg
sbb
test
mov
scas
outsl
inc
adc
pop
lcall
mov
xor
push
fwait
jle
or
inc
push
enter
movsl
dec
icebp
xchg
arpl
cmp
fcmovu
cmpsl
mov
call
adc
rcl
loopne
retw
js
mov
scas
dec
ss
sti
push
mov
and
std
ds
jmp
insl
dec
xchg
mov
and
subb
sti
pop
lret
pushf
pop
outsl
jecxz
lcall
mov
fidivs
leave
sbb
dec
fldcw
mov
dec
push
jle
xor
hlt
aad
or
add
or
sbb
icebp
ret
xchg
pop
jmp
mov
mov
add
sub
jmp
int3
and
jbe
addr16
mov
clc
mov
xchg
xlat
lret
xlat
in
inc
cmpl
ficoms
add
movsl
sub
sub
push
mov
repz
sbb
enter
pop
sbb
sti
int
mov
pop
dec
frndint
mov
test
rclb
ret
insb
cs
mov
dec
shrl
xchg
pop
out
pop
subb
add
dec
fstl
ds
iret
mov
fstps
sbb
repnz
mov
and
mov
or
mov
inc
mov
les
xchg
movl
mov
mov
cmp
add
dec
cs
add
inc
daa
lods
std
pop
jb
bnd
jae
popa
inc
fcoms
sbb
add
sbb
loopne
sub
cmp
aaa
fsts
push
aas
iret
lret
aaa
scas
sub
inc
jbe
adcl
xchg
sbb
call
aam
sub
int
scas
test
scas
fwait
inc
nop
insl
adc
orl
mov
sub
jnp
xor
fcmove
xchg
dec
cld
mov
fisubrs
iret
movsl
lcall
stos
add
xchg
addb
pop
mov
movsl
cli
pop
sahf
mov
fistpl
and
xchg
mov
sub
addr16
iret
sbb
jo
xor
movsl
out
add
mov
mov
xor
daa
jecxz
sti
aam
pushl
aaa
adc
scas
inc
cmp
outsl
mov
sbb
nopl
inc
sbbl
pop
hlt
stc
insl
sub
mov
shl
pop
in
mov
iret
sbb
ljmp
xchg
ljmp
mov
lret
insl
inc
pop
or
xor
inc
jbe
pop
repnz
sbb
fidivl
cmp
cmc
inc
test
aad
push
sahf
ficoms
jnp
mov
int3
pop
daa
dec
cmp
fimull
scas
cmpsl
sub
mov
movsl
loop
fucom
nop
test
cmp
and
jp
add
mov
int3
fldl
mov
insb
and
fidivs
stc
pop
mov
dec
gs
lret
clc
mov
adc
js
push
js
in
dec
adc
sub
cli
adc
cmc
jl
push
stos
addr16
mov
rorb
lret
test
jp
add
push
in
pop
and
adc
aas
dec
cmpsb
das
sbb
add
lahf
or
pop
mov
dec
das
pop
mov
push
out
mov
cmp
lds
push
pop
jno
mov
aam
and
dec
pop
sub
dec
jb
fidivs
stos
mov
xchg
add
push
sbb
push
jne,pt
dec
mov
cwtl
pushf
cld
repnz
inc
addr16
jne
mov
adc
lock
sbb
sub
push
mov
pop
sbb
pop
in
cmpb
push
jmp
dec
sub
adcb
xor
and
aad
sti
jmp
pop
sub
pushf
outsl
xchg
movsb
call
into
xor
aas
stos
fwait
ja
pop
lds
lds
adc
cli
push
in
push
daa
movsl
ret
push
in
lahf
and
call
and
sbb
inc
imul
cmpsb
es
cmpsb
std
lret
sbb
aam
xchg
popf
into
movsb
loope
pop
push
ret
and
loopne
push
push
adc
mov
mov
lret
dec
mov
in
lods
repz
xchg
out
orl
xchg
imul
pushf
jp
mov
push
test
push
int3
sbb
out
sahf
cmc
neg
mov
in
test
push
lea
inc
push
test
insb
out
out
lea
mov
jge
mov
fstp
jb
les
and
cmp
call
out
xchg
arpl
ret
mov
into
xchg
stos
fisttps
lcall
mov
rcrl
test
rcrl
out
push
movsb
repz
mov
mov
inc
jle
pop
add
test
xor
testb
sbb
lahf
outsl
jbe
aad
subb
adc
push
out
lret
dec
pop
mov
mov
les
loopne
iret
add
stos
pop
insl
outsb
adc
enter
sub
xor
outsl
rcrl
insl
les
lock
mov
stos
xchg
or
jns
into
lea
ds
ret
loopne
sub
mov
mul
jle
sub
lods
pop
pop
xchg
fs
mov
cmp
outsb
lea
jb
das
jno
pop
lret
outsb
jl
sub
ljmp
inc
movsb
fwait
dec
sbb
mov
push
inc
ss
sub
movsb
add
stos
mov
sbb
jns
pusha
jmp
je
mov
fstl
aam
mov
xchg
pushf
daa
add
and
notl
push
fdivl
mov
cmpl
mov
lahf
xchg
subb
inc
mov
ljmp
lock
and
jbe
mov
xor
sahf
adc
ret
gs
cld
jmp
cltd
push
or
mov
xchg
mov
mov
adc
daa
pop
mov
adc
bound
dec
scas
inc
sub
cld
lods
int3
dec
aaa
scas
inc
mov
stc
out
mov
icebp
xor
xchg
ret
mov
pop
ds
test
inc
pop
mov
push
cmp
loopne
push
ds
arpl
nop
sbb
pop
rcr
es
cmc
and
fidivl
hlt
fs
cmp
outsl
test
lds
lahf
cmp
sub
cmc
push
cmp
ljmp
stos
test
cli
push
push
rcl
mov
sarb
inc
add
mov
jp
jge
xlat
xchg
xchg
and
adc
pop
bound
iret
or
cmp
jp
or
xchg
or
push
mov
cmp
mov
xor
dec
mov
cmp
jb
dec
xchg
test
repz
mov
scas
je
das
pop
leave
and
xorb
cmp
inc
cs
test
jmp
scas
sbb
or
das
pop
in
test
pop
add
sahf
jb
fwait
or
mov
stos
fidivs
sbb
shrl
repz
and
loope
adc
divb
adc
arpl
pop
dec
in
cld
movsb
in
xchg
jle
fmull
aas
push
loope
loop
cmp
inc
inc
push
lock
in
dec
cmp
add
inc
mov
int3
iret
aas
lret
test
xor
je
cmp
add
cmp
or
out
mov
dec
mov
int
xchg
ret
sub
xor
les
nop
inc
xchg
subb
pushf
mov
in
mov
cmp
inc
nop
jg
pusha
cli
mov
push
aam
sbb
adc
cmp
test
rclb
or
adc
dec
lret
aaa
dec
xchg
nop
sub
jns
insl
fldl
mov
outsb
push
shll
fadd
mov
out
add
pop
dec
in
xor
sub
in
das
idivl
pop
add
out
jno
arpl
movsb
fldenv
pop
xchg
mov
mov
cmpsb
sbbb
or
xor
mov
je
adc
dec
xor
pop
jb
aam
and
stc
out
and
or
mov
jge
fstpt
xor
scas
push
es
jmp
sub
xchg
and
xor
mov
fcmove
sarl
cmp
cmp
out
sbb
or
or
movsl
xor
pop
iret
inc
fbld
insb
xchg
inc
mov
dec
punpcklbw
pop
xor
insb
scas
mov
mov
xor
jno
cs
cmp
out
mov
xor
movsl
test
ss
mov
cltd
mov
idiv
lods
dec
movsb
sbb
push
ret
or
jg
mov
lods
push
mov
jge
pop
or
std
jmp
mov
dec
insb
std
div
pop
test
rep
ss
lahf
push
jmp
sub
rorb
inc
mov
cli
push
ds
mov
aaa
stos
sub
es
scas
mov
mov
in
pop
xchg
aam
leave
pop
pop
outsl
test
arpl
loop
adc
add
pop
fisubs
scas
dec
xchg
sbbb
push
mov
pop
sub
sub
pushf
sub
cld
sbb
cs
sub
push
fwait
jmp
mov
jecxz
cltd
ret
stos
jle
inc
cli
popa
mov
ds
dec
jno
pop
jp
repnz
imul
xchg
xchg
inc
stos
frstor
jp
mov
ljmp
repz
add
or
push
mov
pusha
mov
xchg
sbb
add
in
xchg
mov
jns
adcl
pop
popf
dec
enter
pushf
add
sbb
mov
sbb
cmpsl
dec
mov
add
das
movsb
inc
dec
rcll
and
mov
sub
jg
cli
xor
push
shlb
mov
enter
fsubs
xchg
cmp
or
mov
sub
addl
int
mov
cmc
pop
xorb
rcr
shrb
call
cld
fsubs
push
addb
iret
sub
jne
jge
sbbl
xchg
ljmp
xchg
sbb
stc
imul
and
inc
and
stos
into
outsb
dec
ja
mov
mov
mov
add
sub
test
mov
outsl
jmp
lds
cli
ja
add
arpl
push
inc
xchg
arpl
pop
jp
aad
adc
mov
dec
int3
push
aas
dec
sbb
jne
scas
call
push
pop
xchg
loopne
repz
aaa
mov
rcrb
scas
cmpsb
mov
add
sbb
mov
xchg
push
pop
pop
loope
fadd
pop
adc
dec
scas
ss
pop
pop
push
ds
mov
cmp
sahf
gs
ret
pushf
mov
loopne
or
sub
or
cmp
cmpb
xor
adc
sub
ljmp
and
shl
sbb
in
aad
dec
addb
std
mov
lea
add
pop
notb
nop
xchg
add
gs
and
pusha
push
or
xchg
cmp
or
xchg
xor
mov
xchg
aas
pop
cmp
leave
sub
mov
sub
sub
mov
movsl
and
mov
ljmp
pusha
add
sbb
dec
int
out
cmp
imul
mov
hlt
int3
test
test
testb
jmp
jnp
test
ficomps
push
xchg
daa
push
lret
adc
mov
xor
cli
jno
mov
lcall
das
insb
or
aam
jle
sbb
add
pop
mov
push
dec
mov
leave
sub
or
pushf
iret
ja
jb
xchg
in
movsl
add
in
add
in
push
mov
jge
mov
dec
repnz
sub
stos
jb
aad
adcb
dec
in
lahf
inc
pusha
sub
popf
enter
cmpsb
rorb
sbb
sub
mov
call
jb
mov
jp
stos
nop
cwtl
push
sbb
xchg
cld
jno
xchg
xor
mov
adc
imul
fists
pop
pop
xchg
loopne
sti
fstps
les
xchg
mov
lods
cmp
sub
push
mov
add
cmp
inc
jge
js
loopne
jb
cli
push
or
jb
sub
mov
jns
mov
pop
in
rorl
jae
jns
out
ret
aas
shlb
xor
push
in
inc
push
pop
cmpsb
repnz
push
and
ret
in
mov
mov
out
std
lods
sti
sbb
mov
mov
imul
or
js
dec
add
loope
test
mov
test
mov
lcall
dec
dec
push
lock
aas
mov
push
xchg
xor
inc
push
sub
in
xor
push
dec
lods
hlt
jp
shlb
xchg
pop
mov
xor
fstpl
nop
and
shlb
mov
out
xor
pusha
add
jg
jmp
push
push
inc
std
pusha
mov
cmc
insl
in
and
adc
cmp
loop
fstpt
inc
test
mov
or
outsb
inc
jnp
ret
inc
jg
xchg
icebp
popa
mov
add
js
stc
jmp
stos
test
cwtl
leave
ja
mov
neg
stos
clc
lods
rcll
idivl
sub
in
pushf
pop
fnstenv
jnp
lea
shlb
push
insb
push
dec
mov
xor
adc
ficomps
adc
jmp
push
test
inc
sbb
and
and
dec
cmpsb
add
pop
xchg
mov
and
jnp
sbb
fwait
std
cmc
xorl
gs
insl
lds
lcall
pushf
xchg
jae
mov
push
xchg
mov
pop
pop
arpl
add
pop
shll
addb
fistl
push
out
ret
jle
mov
pop
and
leave
push
stos
pop
jmp
pop
lods
adc
aad
xchg
pop
xchg
rorb
cmp
mov
cmpsb
ss
data16
mov
je
sti
or
test
std
mov
inc
shrl
and
cltd
jecxz
push
std
aaa
aad
inc
push
repnz
mov
fs
hlt
mov
cmp
das
idivb
or
pop
lea
into
scas
fstpt
jne
shrb
pop
pop
mov
sti
xorb
movsl
int3
push
cmp
mov
dec
not
insl
inc
orb
xor
or
mov
xchg
push
or
dec
cli
mov
loop
sub
xor
int3
mov
sbb
mov
xchg
rcll
xor
mov
add
push
sub
jl
push
adc
sbb
inc
sbb
and
or
or
pop
stos
sahf
out
jmp
sarl
lds
inc
mov
or
sarb
and
push
adc
iret
inc
fiaddl
inc
aas
lods
push
loope
cwtl
shll
hlt
ret
enter
icebp
pop
lds
out
inc
mov
pop
push
lds
add
popf
pop
jecxz
fsub
jge
stos
jne
gs
outsl
xchg
call
out
sbb
sub
scas
xlat
insl
xchg
push
xchg
cmp
lds
and
cli
xchg
or
and
cmp
cli
xor
adc
test
insl
add
mov
mov
xchg
outsb
cld
push
arpl
mov
hlt
sbb
sarb
dec
mov
jge
push
mov
stc
jl
cmp
call
push
xor
aad
and
in
js
mov
imul
ljmp
repz
insl
aam
gs
cmp
mov
and
movsb
push
jmp
jle
dec
pop
lods
mov
pop
or
inc
add
std
iret
mov
jo
psubsb
nop
mov
gs
or
fisubrs
mov
push
outsl
xor
gs
mov
inc
mov
imul
dec
cmp
insb
or
pop
xchg
and
jge
fcom
shll
aad
inc
cmp
ret
scas
cmp
in
add
icebp
fldl
sbbb
lock
sbb
xchg
out
mov
test
insl
push
sub
jg
or
push
jecxz
insb
mov
xor
mov
ret
jo
bound
stos
and
sbb
repz
inc
lea
rcr
addr16
das
movsb
dec
pop
push
push
xlat
cli
nop
cmpsl
fdivl
aaa
xchg
xchg
push
stos
dec
push
jmp
and
pop
pop
lcall
jge
mov
call
andb
push
xor
fsubl
addr16
mov
or
aam
out
pop
sub
push
xorl
out
push
out
shrl
ret
outsl
outsb
hlt
and
cmp
xchg
mov
mov
jg
insl
gs
jmp
int3
push
je
mov
and
out
mov
jne
inc
jo
scas
in
fistpl
out
xor
and
add
insl
add
push
add
cltd
cld
dec
arpl
inc
jl
push
jne
push
adc
daa
popf
rolb
mov
or
push
and
mov
xchg
cltd
sahf
cld
jl
arpl
pop
cmp
test
mov
rcll
xchg
xor
movsb
jbe
dec
scas
push
insb
sbb
jns
adc
cmpb
stos
sbbl
sbb
jae
stc
add
imul
fistl
lods
cs
push
pop
addr16
mov
cs
mov
jne
or
xor
sbb
sbb
jecxz
cmc
mov
scas
jg
pop
std
mull
xor
ljmp
jle
je
icebp
lds
sub
push
pop
dec
std
cmp
or
mov
push
jo
mov
xor
clc
add
pushf
or
mov
xor
mov
out
mov
sub
jb
mov
xchg
sub
pushl
in
std
pusha
pop
scas
in
or
leave
inc
ret
xchg
cltd
call
out
test
popf
pop
std
push
xchg
iret
mov
jmp
gs
jno
int3
jno
daa
test
or
push
pushf
sub
push
rcl
mov
out
add
cmpl
mov
test
dec
addl
mov
dec
xchg
pop
xor
loope
mov
cmp
cmpsl
bt
xchg
arpl
mov
inc
add
cmpl
mov
inc
xor
int3
cmp
jmp
out
cmc
adc
xchg
or
add
loope
push
popf
arpl
adc
cmpl
paddq
or
mov
icebp
in
test
fnsave
mov
pop
and
xor
dec
sar
ret
dec
pop
mov
int3
pop
gs
ret
hlt
enter
mov
cmp
adc
pop
dec
adc
shl
jns
adc
mull
adc
pop
cwtl
bnd
push
loop
and
xchg
sub
dec
and
sub
push
mov
push
dec
dec
stos
lock
ljmp
aad
dec
sbb
imul
in
in
mov
jb
push
js
jl
push
mov
xchg
enter
mul
xor
push
fstps
std
test
sti
les
data16
lods
les
xchg
pop
or
dec
or
fnstsw
out
jge
dec
in
mov
mov
mov
hlt
pop
push
cltd
in
mov
inc
mov
in
lcall
in
movsl
ljmp
xlat
int3
mov
in
pop
or
imul
cli
std
or
pop
in
addr16
out
shrb
inc
gs
test
mov
inc
cmp
xchg
sub
hlt
mov
push
cmpsb
incl
stos
je
mulb
xchg
xor
out
or
sub
int3
repnz
divb
jb
lock
test
inc
hlt
ret
cmpsb
add
aad
ja
dec
sub
bound
mov
cltd
fcomps
ljmp
jo
stos
pushf
push
fwait
xchg
fs
leave
xorb
out
out
push
push
mov
popf
add
and
push
mov
jmp
add
pop
xchg
mov
popf
sub
push
fs
out
aas
push
in
test
pop
scas
repnz
aaa
xor
test
iret
or
cmp
mov
dec
test
and
cmp
shrb
pop
or
jnp
xor
fiadds
jnp
jnp
cmp
push
push
mov
mov
in
or
mov
fnsave
jp
shrb
xor
push
xchg
jb
dec
sub
mov
and
insb
or
stc
mov
or
xor
dec
lcall
add
cli
xor
inc
jb
in
and
pop
int3
sbb
sub
mov
pop
popf
sbb
pushf
into
pushl
test
aam
repz
pop
daa
imulb
adc
imul
cmp
sbb
cwtl
cltd
out
stc
lcall
sub
aam
cli
xchg
jle
push
in
and
add
bound
xor
mov
push
inc
jmp
sbb
lahf
push
dec
and
mov
es
rclb
cmp
mov
je
xor
push
dec
pop
ficoml
mov
cmp
mov
push
lock
sti
lea
test
xor
mov
add
insb
int3
mov
mov
push
adc
stos
mov
das
insb
jle
jns
mov
sub
add
push
shr
test
sbb
in
decl
fisttps
sbb
imul
lret
mov
fsub
sub
insl
insb
push
mov
sub
push
das
fwait
push
mov
ss
jbe
pop
sahf
adc
scas
sub
dec
insb
mov
aaa
cli
fsubrl
lock
mov
adc
dec
sbb
and
shrl
aam
push
mov
mull
mov
jae
ret
lods
dec
fisubrs
pop
push
daa
xor
push
xor
lret
mov
fs
imul
push
xchg
xchg
test
xchg
adc
mov
fisttpl
in
pusha
idivl
xor
outsb
insl
sbb
js
adc
mov
mov
test
bswap
repz
push
sub
andl
add
lret
sbb
mov
mov
icebp
lock
rorl
cmpsb
pusha
cmp
loopne
and
ds
imul
mov
push
cmp
ret
push
lea
test
ljmp
scas
fsubrl
arpl
movsl
lods
aad
jmp
ljmp
or
enter
sub
cltd
jb
cmp
push
sbb
sbb
or
ja
push
mov
les
pop
lret
cmp
and
ja
imul
out
rcll
xchg
inc
imul
mov
cld
adc
mov
or
cld
mov
mov
lock
pop
lret
jmp
xlat
or
scas
imul
pop
push
jns
out
inc
xor
mov
pop
shlb
add
cmp
pusha
mov
ljmp
xor
inc
jns
cmc
shl
jp
mov
sub
or
xchg
mov
imul
aam
push
cmp
shll
mov
mov
test
mov
ffree
jnp
dec
mov
mov
mov
jb
mov
push
xchg
mov
adc
mov
sub
loope
push
fimull
sarl
adc
mov
aaa
mov
mov
and
pop
inc
fstps
dec
pop
sbb
jcxz
inc
add
jp
mov
test
idivb
xor
add
xlat
mov
dec
mov
test
aam
shl
popa
cmpb
ret
push
and
int
shr
lahf
in
push
call
or
jne
inc
adc
ja
mov
mov
in
mov
pop
dec
repnz
add
mov
fsub
fimull
mov
ret
push
sbb
test
pop
xchg
mov
adc
fcmovnbe
jge
xor
pop
in
fistpl
in
outsb
ja
sahf
and
mov
push
dec
fdivrs
mov
outsb
sbb
jae
rcl
ret
xchg
dec
mov
add
pop
jmp
das
cmp
fcom
xchg
mov
shr
jl
mov
push
and
test
les
mov
pop
cmp
pop
cltd
inc
stos
stos
mov
call
push
jae
int3
cmp
push
push
mov
mov
scas
test
mov
cs
jbe
push
adc
jge
add
sbb
xor
imul
sbb
das
fucomi
and
mov
xchg
sub
cmp
cmp
test
fcoms
mov
adc
in
mov
sbb
stos
sub
cltd
test
xchg
popa
mov
ja
ss
nop
pusha
lods
jmp
push
std
dec
out
daa
jo
sbb
std
add
jmp
scas
fcomps
xlat
decl
mov
sub
imul
ja
jbe
push
fdivs
repnz
mov
mov
stos
mov
push
fdivr
mov
mov
mov
std
jne
and
rcr
fists
ja
popf
sub
xor
test
mov
adc
movsl
add
push
cmp
divb
ret
test
adc
sbb
push
mov
out
je
jnp
pusha
cltd
sarb
jne
int3
sbb
clc
lock
aam
adc
test
sub
mov
mov
out
cmp
out
out
arpl
addr16
push
lcall
test
inc
and
lret
sbb
sub
mov
push
stos
push
xor
xchg
popa
sahf
mov
arpl
push
jecxz
dec
mov
push
ss
loopne
aam
inc
cmp
adc
mov
and
icebp
push
flds
in
add
out
add
and
or
pop
push
imull
popa
aaa
idiv
popa
mov
out
sbb
push
xlat
jns
push
scas
jecxz
dec
fcoms
outsb
outsl
cmpsb
inc
inc
bound
adc
das
sbb
or
test
mov
sbb
jl
ljmp
push
and
cmpb
stos
icebp
insl
insb
fists
testl
add
push
mov
in
and
pop
in
rorb
je
bound
jno
ja
sub
out
subb
shll
cli
dec
cmp
sar
daa
lret
cmpsl
xor
dec
rorb
shll
div
sub
cs
fwait
jne
popf
cmp
push
push
mov
insl
adc
sti
jae
pop
shl
jp
xchg
test
or
ja
cs
test
xor
adc
xchg
sti
sub
mov
push
out
imul
insb
sahf
ja
push
mov
sbb
stc
sub
aad
negl
inc
push
or
addr16
int
xor
sbb
add
mov
add
fiadds
pop
shrb
jecxz
mov
je
mov
jmp
hlt
sub
pop
sbb
les
dec
cmp
xor
sti
lock
fstpt
hlt
xor
ds
out
sbb
insl
xor
xor
out
ja
adcl
icebp
xchg
mov
imul
aam
cmpsl
dec
push
mov
xchg
loopne
add
cmpsb
jg
fwait
test
pop
inc
mov
or
push
sahf
sbb
and
dec
push
hlt
dec
pop
cmc
aaa
cmp
pusha
je
out
data16
fadds
sahf
and
das
add
arpl
lahf
and
fsubrl
mov
sbb
ljmp
lahf
jge
test
insl
sub
push
es
adc
not
mov
std
shlb
dec
in
inc
insl
sahf
mov
add
popf
cmp
movsb
jo
test
rcll
cli
lahf
leave
lahf
sub
pop
sti
pop
or
ja
xchg
sbb
dec
mov
pop
out
dec
xchg
jo
sub
imul
jae
push
sub
loopne
fistl
lods
fiaddl
mov
outsl
popa
sbb
sbb
sbb
fidivl
xchg
icebp
cmp
cwtl
and
pushf
lret
xchg
aam
mov
test
lods
sub
daa
add
mov
test
jle
out
mov
test
shlb
enter
mov
lock
or
jmp
inc
fldt
cmp
movsb
inc
nop
dec
jle
movsb
repz
rcll
bswap
mov
repz
fiadds
mov
hlt
jle
lret
or
cmc
pop
jns
out
pop
push
cld
ret
dec
ss
cld
or
popf
jl
pop
test
mov
les
sub
jne
jae
fdivp
xor
xchg
ds
or
pop
jecxz
inc
leave
xor
push
inc
aaa
dec
sahf
inc
dec
mov
pop
roll
jge
jmp
dec
sysret
push
or
das
jbe
jo
ret
mov
xor
sbbb
arpl
pusha
pop
adc
push
inc
push
fsubl
jb
fs
es
adc
movsb
pusha
fidivrs
int3
push
add
jo
jb
dec
xchg
incl
or
add
test
arpl
rclb
mov
mov
inc
popf
dec
out
push
and
add
out
rorl
scas
bound
movsl
inc
test
and
shl
loopne
arpl
movsl
inc
sub
inc
jns
pop
fnstcw
jmp
sbb
loopne
data16
outsb
xchg
jne
inc
decb
ret
ficoms
out
dec
fisubrs
cmpsl
adc
pushf
fsubp
mov
and
xchg
arpl
fs
fld
push
mov
outsl
mov
pop
pop
fldl
dec
in
vunpcklpd
xchg
mov
ljmp
lds
xor
add
out
xchg
out
cmp
xor
jle
sarl
ret
ja
or
mov
push
mov
in
pushl
fiadds
enter
js
mov
jne
or
lret
sub
mov
pushf
insl
dec
insl
stos
xchg
sub
jno
arpl
mov
cmpsl
and
cmp
pop
inc
mov
xchg
mov
xchg
mov
adc
mov
cmp
and
pop
jno
push
jne
inc
adc
mov
mov
bound
cmpsl
fldt
sti
lock
and
shll
mov
add
decl
sbb
xchg
jae
jae
out
xchg
cltd
fs
or
dec
fadds
out
sbb
mov
mov
inc
cwtl
xchg
movsl
fidivrl
pusha
sbb
sub
sub
in
xchg
xchg
mov
test
cmpsb
push
pushf
mov
std
xor
pop
mov
fistps
push
fcompl
dec
cwtl
cli
jle
or
imulb
fcompl
mov
into
pop
mul
test
cmp
jo
outsb
and
and
daa
pop
test
add
sbb
fsubrl
cmp
dec
in
mov
enter
mov
std
aam
dec
mov
sbb
ss
stos
push
push
int3
testl
loop
xor
and
repnz
inc
out
test
orb
fstpl
stos
int
cmp
loop
mov
xor
rolb
ja
dec
xchg
xlat
imul
xlat
jecxz
add
jae
int
pop
cwtl
vcvtsi2ssl
mov
cmp
arpl
pop
cmpsb
mov
inc
cmp
fnsave
xchg
test
mull
mov
mov
cmp
cmp
insb
ds
jns
sub
in
jae
mov
pop
cmp
fwait
mov
jmp
mov
ret
dec
add
fwait
scas
pusha
es
and
movsl
jg
adc
insl
int3
sub
fstl
adc
in
push
add
xchg
ja
out
push
sub
icebp
call
mov
scas
js
pop
and
loopne
xor
pop
cmp
outsl
pop
cli
scas
stos
aad
aaa
rorl
push
cld
push
enter
add
cmp
leave
add
push
inc
xor
out
jae
outsb
cmpsl
dec
and
sbb
sbb
sub
push
push
lahf
scas
push
ljmp
loop,pt
pop
test
rcrl
mov
psubb
test
arpl
inc
add
xchg
lret
pop
cmp
inc
lret
ret
jbe
push
out
add
cld
mov
loop
pop
lcall
ss
mov
subb
lds
aaa
daa
cmp
pop
fsubl
xor
aas
sub
and
lds
mov
xchg
lods
cltd
flds
outsb
jnp
stos
inc
scas
mov
jmp
enter
leave
outsb
aam
movsl
insl
sub
push
sbb
jnp
adc
rolb
fwait
mov
xchg
adc
out
pop
mov
cwtl
subb
push
test
test
pop
in
or
repz
or
aaa
lahf
mov
mov
nop
js
adc
aam
add
sub
jg
in
scas
dec
adc
add
ffree
aaa
push
outsl
and
pop
mov
fprem1
pop
test
jbe
pop
push
inc
jl
adc
ljmp
stc
push
fbstp
popf
sub
push
pop
cwtl
sarb
and
xlat
mov
test
out
sahf
sbb
mov
pop
lret
rcrb
mull
enter
pop
xchg
test
pop
xchg
or
adc
stc
sti
pop
jnp
and
xchg
dec
insb
nop
imul
sbb
push
clc
movsl
push
pop
cmp
imul
xchg
aad
xchg
es
ds
out
lea
xlat
jno
iret
ret
xlat
jge
sub
mov
xor
jle
loope
xchg
rorl
add
sbb
adc
cltd
push
pop
js
pop
daa
pop
pop
clc
push
call
mov
and
into
test
hlt
jnp
adc
mov
ja
pop
xchg
cmp
ret
jg
and
or
rolb
jo
repz
ja
xlat
sub
orl
arpl
push
sub
int
fiadds
stos
fwait
call
daa
jnp
push
mov
rorl
mov
clc
out
andnps
out
adc
cmpl
cli
or
jbe
aaa
clc
cmp
adc
shlb
test
inc
xlat
push
fcompp
push
into
loopne
adc
inc
stos
push
int
mov
pop
jmp
aad
pop
aas
imul
lds
imul
shl
hlt
dec
das
pop
in
out
js
lcall
repz
fidivrs
je
sbb
loop
loope
stc
jbe
push
xchg
fucomi
mov
mov
add
or
clc
sub
cmp
test
sahf
xlat
outsb
cmp
jae
jae
add
outsb
fcmovnbe
cs
cld
inc
dec
pop
jge
gs
and
loopne
insl
stc
pop
mov
int
arpl
daa
stos
addr16
dec
jb
pop
mov
xlat
orb
pop
mov
lds
lods
fimuls
mov
cmpsb
push
jmp
fwait
xchg
in
stos
sbb
push
inc
ret
inc
and
test
enter
in
or
lds
pop
loop
adc
testl
adc
or
adc
and
pusha
vrcpss
add
fcoms
movsl
jmp
into
dec
subb
jne
pop
mov
jecxz
xchg
hlt
adc
lea
shrb
les
and
cmp
push
andl
loop
sub
incl
movzbl
lea
add
jmp
push
sub
fisttpl
cli
mov
pop
inc
pop
aam
imul
ret
xlat
aam
mov
jae
push
in
xchg
mov
sbb
das
add
sbb
daa
gs
repnz
xchg
and
addr16
cmp
cmc
movsl
popf
inc
adc
mov
scas
shlb
and
dec
sbb
or
jg
sub
cs
inc
mov
stos
jne
aad
bsr
mov
dec
ljmp
repnz
aad
iret
popa
test
xchg
fdivl
aas
inc
aaa
adc
lods
sub
mov
fdivp
cmp
js
pop
mov
stos
adc
pop
rcll
comiss
into
fsubl
dec
das
inc
mov
add
xchg
pop
sub
out
cmpsl
dec
hlt
mov
push
mov
or
add
xchg
fidivl
sbb
sub
popf
repz
sbb
out
cli
mov
inc
in
push
jmp
arpl
das
jne
mov
pushf
out
mov
das
sub
xchg
push
sbb
lea
call
loop
push
sbb
dec
xor
int
lea
and
mov
into
adc
ljmp
pop
cmp
cmp
push
scas
in
mov
mov
jg
pusha
and
and
lea
idiv
pop
jb
cld
std
movsb
insl
test
test
inc
xlat
shll
or
aam
gs
out
mov
sub
xchg
mov
adc
pop
pop
dec
iret
js
fadds
ss
je
rcrb
rorl
int3
mov
std
pop
out
pop
sbb
mov
and
lret
mov
enter
loope
fbstp
jp
or
mov
xchg
call
mov
in
mov
pop
dec
cs
outsl
cmp
ds
pop
scas
popf
loopne
cwtl
iret
add
xchg
inc
ljmp
jl
scas
lea
negl
ficomps
dec
jbe
mov
adc
cmp
push
xlat
jg
xchg
gs
gs
fs
imul
sbb
sub
push
add
fdivl
enter
popf
sub
or
push
inc
leave
outsl
inc
mov
out
lods
or
hlt
pusha
mov
mov
mov
push
cmpl
loope
movsl
mov
xor
cmp
mov
roll
mov
in
stos
adc
mov
sub
imul
push
dec
sti
sub
add
cmp
add
push
pop
mov
int3
fs
sub
mov
cli
sub
jbe
xor
xlat
out
cmp
push
sub
fisubrl
test
and
or
xor
fistps
mov
fldt
out
inc
mov
inc
dec
xchg
xchg
lods
or
xor
jmp
popf
jl
adcl
and
cli
mov
insl
cltd
jne
jne
in
testb
or
stos
lods
xchg
outsb
cmp
sub
stc
and
mov
insb
lcall
lds
push
or
jb
dec
repz
mov
pop
mov
daa
sti
add
inc
repz
pop
mov
iret
sub
sti
jnp
dec
in
test
jns
sbb
push
ret
imul
js
rcl
rdtsc
mov
int
mov
jl
std
sbb
xchg
add
outsb
fcompl
ja
sar
into
pop
ds
pop
pop
inc
dec
shll
rcrb
decb
cmpsl
pop
mov
test
cmpsb
scas
imul
sbbl
hlt
add
js
xchg
mov
lahf
and
push
jecxz
int
jecxz
inc
adc
sahf
and
call
sub
in
mov
data16
and
repz
jnp
xchg
test
cmpsl
mov
stc
mov
xchg
test
in
insb
addl
dec
xchg
addr16
dec
iret
test
aam
jp
lods
inc
mov
adc
cmpsb
fldt
mov
test
fildll
enter
bnd
adc
xlat
cmp
pop
in
xchg
cmp
or
es
add
mov
aam
sbb
add
lahf
fistpl
nop
xchg
pop
cmp
rolb
push
rolb
add
sub
adc
flds
hlt
insl
mov
dec
in
push
jmp
mov
orb
mov
sub
insl
cmp
les
ss
shr
outsb
fs
mov
mov
ficomps
mov
call
js
pop
adc
add
xchg
dec
add
sarb
xor
cs
subl
gs
xchg
cli
sbb
adc
test
inc
add
lret
inc
aad
insb
sub
out
cmpsb
mov
adc
or
in
out
cmp
fs
std
iret
push
scas
push
je
ret
sub
testl
test
mov
sub
fcmovne
dec
jmp
and
xchg
lods
std
lods
cli
push
leave
sti
cmp
divl
push
leave
test
inc
add
daa
jnp
scas
cmp
mov
add
jle
mov
aaa
roll
subb
sbb
push
sub
mov
gs
sbb
cmp
outsb
jge
dec
push
mov
sub
fdivrs
cmp
xchg
xchg
jl
imul
mov
push
stos
insb
int3
aad
pop
mov
add
cmp
xor
sbb
cmpsb
cmp
out
jmp
je
pop
mov
jge
sub
or
inc
mov
or
fisubrl
insb
cmp
in
outsl
int
inc
push
fwait
push
out
leave
sub
sub
and
adc
sbb
add
xchg
add
mov
pushf
int
and
jae,pt
inc
and
int
cmp
arpl
push
push
xchg
sbb
in
add
pop
dec
outsb
cli
xchg
icebp
jo
push
sub
adc
lret
mov
into
out
pop
stc
cli
mov
push
in
dec
mov
scas
das
mov
out
test
ret
adc
push
loopne
js
mov
mov
push
jecxz
outsl
into
add
test
push
leave
mov
lcall
or
clc
inc
cmpb
inc
jle
mov
jg
xchg
insl
test
dec
in
add
xor
fistpll
imul
daa
mov
mov
lcall
xchg
jecxz
jns
sbb
mov
out
hlt
nop
imul
dec
sti
xchg
leave
mov
mov
inc
mov
mov
mov
imul
sbb
xor
fsts
pop
adc
ja
movsl
js
sarb
inc
sub
mov
mov
xor
mov
xchg
adc
xchg
movsb
add
and
or
add
xchg
bound
lock
adc
lock
stos
mov
xchg
adc
imull
cmc
xchg
jne
fmull
loope
movsb
add
pop
push
sbb
jecxz
pop
dec
or
test
dec
xchg
mov
adc
cmp
mov
and
push
jl
pop
cs
popf
out
mov
and
jmp
mov
cwtl
popf
mov
mov
push
and
pop
into
imul
and
inc
sub
jp
stos
je
and
push
xchg
icebp
fwait
and
jo
sub
mov
int
jecxz
movsl
mov
push
dec
arpl
outsl
cwtl
fcoms
in
pop
mov
scas
call
mov
scas
rolb
mov
ss
fisttps
shl
call
bound
stos
test
mov
sbb
in
or
jge
sub
iret
cmp
lods
adc
scas
push
leave
lsl
inc
xchg
adc
rcr
test
cmp
cmp
out
sti
movd
sub
and
sbb
cmp
push
repz
push
dec
das
or
add
lock
test
jo
lea
ret
js
popa
inc
lock
push
ja
xchg
testb
ret
in
js
addr16
dec
fcoms
xor
dec
sub
fcos
gs
xor
jg
jg
mov
push
ja
jp
pop
leave
lret
push
inc
mov
jno
and
pop
icebp
pop
push
addr16
sbb
lods
imul
sbb
lock
orb
aad
nop
mov
pop
pop
or
cs
ret
dec
xchg
bound
push
loopne
dec
nop
dec
and
push
mov
mov
xorl
outsb
lock
cli
mov
mov
adc
lds
sub
add
negb
int3
outsl
xor
jmp
je
in
repnz
imul
dec
mov
mov
bound
lea
jnp
jnp
icebp
lcall
jle
hlt
sub
jo
aam
dec
fs
movsb
ror
sbb
insl
js
mov
call
pop
lret
addl
add
call
popa
loope
test
adc
xchg
push
dec
mov
adcl
fcoml
sub
or
in
xor
dec
es
mov
and
cld
stc
divb
cmp
movsl
pop
jge
pop
cmpsl
mov
lcall
shrb
adc
or
adc
mov
mov
xor
shlb
push
lcall
inc
insl
out
mov
in
jmp
rol
aas
mov
test
adc
jbe
xchg
test
vpsrld
fnstsw
insb
es
lea
dec
or
dec
add
mov
pop
lock
cmp
das
std
jl
pop
testb
cmp
pusha
ljmp
cmc
inc
lods
test
pop
pop
in
push
add
fisttpll
stos
and
mov
xlat
mov
enter
call
sbb
mov
pop
jp
inc
add
mov
sbb
lret
pop
push
jae
mov
lods
insl
inc
xchg
cmp
outsb
ds
xlat
cmp
mulb
jne
hlt
cmp
les
cld
stc
lcall
out
lods
aas
imulb
xor
scas
or
ja
sbb
loope
sbb
lret
and
fisubs
xchg
cmp
shll
ficompl
jne
in
jp
jns
mov
sub
lods
adc
rorb
mov
and
faddl
dec
inc
inc
int
nop
jne
lret
addl
add
into
shl
xor
pop
cmp
fisubs
sahf
add
enter
mov
pusha
add
cmp
mov
dec
sub
incb
test
xor
int
add
jmp
sbb
mov
pop
mov
lcall
jns
or
mov
mov
cmc
and
push
cmp
xlat
fwait
add
add
push
cmp
pop
mov
lahf
imul
ljmp
sbb
ret
mov
adcb
loop
cmp
in
pusha
cmpsl
sbb
xor
hlt
ss
jne
add
push
pop
ret
out
aaa
movsb
divb
pushf
and
pop
sub
fcompl
daa
xchg
int
inc
push
cltd
clc
cmpb
dec
adc
pushf
arpl
pusha
add
sbb
std
cmp
push
sub
dec
aaa
jmp
push
adc
jge
arpl
subb
addr16
adc
fnstcw
in
imul
into
repnz
lret
and
lock
dec
out
add
test
xchg
mov
loope
or
adc
pop
jno
loopne
mov
mov
in
sub
lahf
mov
xchg
sub
xchg
mov
adc
stc
sbb
pop
sbb
movsl
aas
mov
imul
fnstcw
ret
in
sti
es
jp
xor
rolb
adcb
mov
adcb
pop
pop
or
mov
in
inc
nop
je
in
in
cmc
or
mov
pop
dec
cmp
push
out
outsb
or
jae
fnstcw
mov
daa
xchg
sbb
subl
int
cmpsb
and
lock
jae
pop
pop
push
mov
pusha
fisttpl
addb
and
xor
lods
push
repnz
dec
idivl
pop
push
pop
stos
testl
jp
pop
inc
add
in
push
sar
sbb
jle
leave
jmp
ret
adc
add
xorb
cmpsb
js
jae
cmpsb
xor
sti
pop
sbb
fcompl
gs
cmp
pop
xor
mov
mov
out
cli
push
popf
dec
addl
in
pop
mov
lods
mov
mov
movsb
in
test
xchg
movsb
enter
stos
adc
sarb
pop
repnz
jg
in
fsts
jo
sub
outsl
inc
jmp
lea
add
sahf
dec
ss
adc
das
das
pop
call
orl
lock
push
shl
stc
sti
adc
aaa
push
lods
push
mov
mov
loop
in
push
addr16
or
cmp
movsb
inc
out
inc
push
xor
div
and
sub
or
push
push
mov
imul
add
loope
xchg
mov
add
loop
imul
inc
sub
mov
sbb
push
out
out
mov
cmp
xchg
and
aaa
mov
add
into
xor
ret
adc
mov
rcr
cli
ficoms
ror
loope
push
outsl
xchg
insl
pop
xchg
xor
dec
pop
loope
mov
sbb
mov
sbb
rcrl
in
dec
adc
adc
inc
push
pop
movsb
cmc
mov
loop
cmp
aaa
inc
mov
out
jnp
dec
jle
sub
mov
dec
mov
push
shll
fs
pop
stos
in
and
add
out
scas
xor
loope
insl
insb
mov
push
sub
pop
popf
xorb
sub
in
dec
pushf
aas
pop
mov
lea
xor
in
imul
jb
aad
cmp
mov
insl
jg
or
cmp
sub
push
lock
xor
cmc
cmpsl
push
cmp
mov
cli
inc
xchg
lock
leave
mov
repnz
or
pop
insb
add
hlt
int
popl
orl
jecxz
ret
pushf
cmp
sahf
xchg
test
ds
mov
push
inc
mov
ljmp
jae
add
sbb
lret
mov
repnz
mov
adc
sbb
icebp
in
addr16
cltd
push
pop
inc
lods
loopne
mov
mov
in
test
fwait
cmp
lods
xchg
mov
push
cmp
xchg
mov
mov
xchg
mov
test
dec
fwait
pusha
sub
test
mov
mov
lret
inc
push
out
int
sarl
mov
and
adc
or
mov
loop
and
adc
orl
stos
sbb
fs
mov
std
or
je
in
js
sbb
sub
je
pop
mov
xor
push
iret
mov
lcall
rcr
xchg
arpl
scas
xor
dec
mov
push
loope
mov
ret
in
aam
pop
sub
out
loop
xchg
popf
mov
inc
outsb
jl
adc
xchg
adcb
rcrb
pop
mov
jbe
lcall
ss
test
out
xchg
cmc
or
inc
arpl
ja
sbb
popa
dec
aam
pushf
push
fiadds
push
adc
pop
mov
lods
inc
pop
jg
loopne
mov
mov
push
ja
in
fs
lahf
mov
add
mov
shl
or
jl
outsl
cmp
daa
out
xlat
xor
mov
sub
movsl
scas
fstl
aad
and
mov
adc
mov
rorb
shll
cmc
inc
adc
clc
jecxz
xchg
cmp
push
inc
inc
aaa
pop
mov
fcom
dec
in
test
mov
sbb
mov
or
pushf
sarb
mov
je
pop
jl
mov
push
je
mov
cmp
jl
insb
jne
push
add
lea
shlb
or
jnp
push
add
jecxz,pt
xchg
sub
sti
bnd
ljmp
sub
adc
popf
mov
lcall
lret
fwait
mov
ja
shll
jmp
scas
in
dec
cmpsb
xor
push
mov
mov
pop
cmpsb
jecxz
xor
repnz
add
addr16
sub
dec
imul
cmp
mov
pop
sub
cwtl
sti
bound
daa
inc
fbld
movsl
mov
pushf
dec
or
cmp
movsb
jl
lods
inc
mov
aaa
push
push
bound
rorl
pusha
inc
adc
aaa
adc
fwait
xor
mov
loopne
adc
sbb
and
sbb
outsb
mov
adc
cmp
cmc
sbb
xchg
shrl
les
xor
out
cmpsl
pop
pop
xchg
sti
int3
push
mov
test
jnp
lock
sub
add
xchg
das
aad
jns
mov
add
ja
jp
sub
pop
fwait
mov
mov
pop
and
movsbl
pop
pop
adc
gs
ljmp
test
insl
mov
mov
adc
xlat
jne
mov
or
scas
xor
xchg
sarb
jb
dec
cmp
xlat
jae
adc
aaa
imul
imul
enter
stos
ror
adc
push
xor
jno
mov
inc
cld
push
and
es
jge
and
hlt
dec
stos
inc
lret
dec
lds
mov
test
xchg
nop
dec
mov
or
out
pop
or
fs
or
cltd
cmp
push
test
jne
inc
xor
push
popa
insb
or
shll
mov
lock
lods
aad
jo
xor
cmp
movsl
sbb
movsl
and
sti
inc
push
and
daa
jle
and
or
push
ljmp
scas
sbb
cwtl
sahf
pushl
push
and
lock
add
sbb
ss
jb
outsl
xor
imul
mov
shrb
sub
jns
push
xchg
and
aas
mov
sub
ds
out
sti
and
mov
arpl
mulb
mov
sub
push
cli
scas
cmpsb
sbb
jno
pop
jnp
dec
fwait
push
cld
fs
sarb
fsts
inc
out
jl
hlt
add
popf
xchg
sub
pop
test
cmp
sbb
adc
int
inc
lret
out
popf
jbe
mov
not
cld
jns
into
push
ss
fs
incb
or
loop
pop
xlat
push
fimull
in
in
adc
outsl
xor
sbb
iret
iret
pop
leave
fdivs
hlt
popa
cmp
ljmp
sbb
adc
sub
sarl
insb
stos
jmp
cmp
and
mov
int
and
xlat
and
lds
mov
and
insb
lret
mov
fdivp
dec
fimull
mov
or
cwtl
test
insb
mov
dec
push
dec
push
adc
pushf
inc
push
adc
cs
push
loope
dec
push
mov
inc
lods
pop
lock
sbbl
lds
sbb
push
adc
sbb
pusha
shrl
addr16
test
and
test
add
out
mov
dec
jne
dec
sarb
rcrl
stc
push
dec
mov
dec
mov
inc
cmpl
ficoms
jnp
jmp
into
cmc
ret
add
int
iret
push
adc
lahf
ss
mov
xor
loope
jmp
jnp
das
dec
ja
ja
dec
mov
add
test
add
mov
ljmp
xor
call
or
into
or
sarl
sti
scas
stos
test
mov
mov
sbb
cmpsl
jnp
inc
fidivl
iret
mov
lea
and
xchg
inc
out
pop
add
cs
nop
movsb
mov
pusha
push
xor
xlat
cmp
mov
cmpsl
pop
es
popf
pop
aam
int3
aam
jg
js
adc
out
outsl
nop
push
iret
in
popa
gs
push
fdivrl
gs
jecxz
inc
loopne
cmp
fmuls
add
lock
jo
jle
iret
pusha
pop
nop
mov
dec
test
sbb
daa
add
inc
jmp
imul
fdecstp
push
cwtl
cmc
int
cli
xor
shlb
rcrb
popf
sub
jne,pt
pop
cmp
sahf
push
inc
leave
insb
cli
jg
testl
sub
xor
sub
mov
jle
pop
inc
dec
push
popa
les
xor
fxch
lock
push
lret
mov
out
sub
ljmp
aas
or
pop
stos
mov
sub
loopne
sahf
pop
sub
jle
jl
mov
jo
rep
xor
in
xchg
popf
ljmp
sub
mov
ss
cmpsl
call
inc
mov
sub
mov
das
into
cltd
add
insl
stc
push
imul
sbb
xchg
mov
mov
sbb
enter
pop
dec
fcmovne
sbb
push
xor
gs
dec
push
fiadds
leave
pusha
pop
scas
push
and
sub
out
xchg
faddl
nop
in
movsl
push
dec
mov
iret
push
lods
adcl
xchg
xchg
mov
loopne
icebp
cmp
ret
out
cmpsb
inc
add
int
mov
mov
ret
addr16
add
out
lea
mov
add
sbb
cmpsb
cmp
mov
sub
aad
cltd
popa
icebp
aad
push
add
mov
push
cli
adc
lods
repz
call
inc
mov
ficomps
mov
and
inc
inc
aaa
inc
repz
inc
lods
imul
mov
or
sbb
rorb
cmp
cmpsl
jb
jbe
das
push
rorl
pop
jp
addr16
push
cmp
and
mov
cmp
xchg
sbb
mov
xchg
pop
in
sbb
stos
clc
js
push
mov
loope
inc
xlat
mov
jg
outsb
in
ss
mov
sub
cld
xchg
mov
scas
test
fcoml
inc
fsub
inc
iret
mov
cmp
sbb
dec
sbb
ret
cmp
xchg
daa
pop
cmpsl
jno
mov
int
aam
arpl
pop
inc
dec
pusha
pop
jnp
cmpsb
inc
imul
std
mov
add
gs
jno
out
sub
cs
pop
scas
rol
cli
in
add
inc
or
push
xor
out
out
enter
es
dec
mov
lock
loope
adc
jae
xor
insb
xor
xor
sbb
cmp
sbb
cmpsb
xor
loop
cmc
and
mov
mov
ljmp
test
dec
sub
in
dec
cli
call
ja
xlat
out
mov
orb
movsb
and
mov
add
pop
nop
cltd
jge
loope
pop
jp
shlb
mov
or
xchg
dec
cmpsl
xchg
cmc
stc
mov
push
les
inc
in
add
push
ds
adc
jnp
adcb
pop
mov
sti
sbb
add
push
lret
or
ret
sahf
dec
xchg
cwtl
movsb
clc
pop
or
add
mov
adc
in
fcmove
lea
pop
sbb
pop
pop
sbb
arpl
push
outsb
inc
sub
addr16
adc
adc
jle
or
mov
mov
xor
inc
cmp
cmp
pop
ljmp
aaa
pop
ret
cmpsl
add
loop
sbbb
dec
aas
std
adc
xor
dec
addr16
inc
or
addb
jo
push
cltd
dec
or
mov
das
or
add
mov
mov
inc
jg
inc
sub
sbb
out
and
int
pop
inc
out
lods
test
mov
fimull
pop
popf
test
jg
aam
fldenv
dec
jg
enter
jl
cmp
lcall
test
out
lds
adc
mov
subl
push
inc
ds
out
gs
inc
adc
jg
xchg
in
jno
dec
rep
outsl
xor
mov
jae
lea
lret
sub
addr16
jp
sahf
jne
arpl
orb
pop
sub
dec
and
cmpsb
mov
push
pop
or
xchg
jns
xchg
sti
push
cld
mov
hlt
xchg
fiaddl
mov
dec
cmpsl
inc
jl
inc
fisubl
loop
sbb
and
mov
mov
cmp
push
xchg
xchg
ja
and
jnp
push
jg
pushf
mov
ret
sahf
adc
push
push
mov
jle
daa
cmc
xchg
ja
push
mov
inc
in
sbb
sbb
sub
movsl
or
js
jnp
hlt
and
out
int
xchg
dec
test
scas
sub
pushl
sub
sbb
xchg
cltd
js
imul
jnp
cli
nop
add
nop
xchg
movsl
jno
mov
sbb
jle
push
inc
lcall
adc
cmp
stc
jecxz
jb
leave
pop
outsb
mov
xchg
lods
inc
xlat
mov
loop
mov
loope
sti
mov
inc
lret
fidivrl
push
lret
andb
test
rcrl
std
adcb
cmp
add
cld
or
or
push
dec
in
pop
sbb
add
sti
jmp
mov
xchg
xchg
fiaddl
jl
pop
or
jle
js
dec
cmp
fdivrl
js
orl
mov
inc
dec
mov
or
xor
jns
loopne
clc
sub
aad
sub
jge
inc
into
inc
out
jbe
cs
jg
or
ss
xor
sbbl
sbb
sbb
orb
scas
push
aas
js
rdpmc
gs
iret
pop
sub
dec
fs
out
push
aaa
mov
or
and
sbbb
dec
xchg
adc
lcall
sub
sbb
lret
arpl
mov
xchg
mov
imul
iret
mov
push
sbb
sub
out
test
loopne
roll
lret
mov
or
movswl
sbbl
add
lea
dec
out
add
jl
jbe
sub
mov
pushf
sub
inc
and
pop
add
pusha
mov
fistl
loope
lcall
push
int3
add
and
test
imul
icebp
mov
icebp
cmp
aad
push
xchg
mov
into
mov
xchg
jnp,pt
mov
jg
dec
lods
add
or
addr16
int3
mov
cli
imul
cmp
aaa
inc
push
fs
adc
ss
mov
xorl
mov
xor
mul
aad
into
loop
xchg
mov
pop
mov
mov
jmp
psllw
pop
cmp
xchg
xchg
mov
mov
int
fnstenv
out
lea
lret
jp
xor
sbb
lret
lret
mov
rcr
pop
es
lods
rorb
cmp
or
dec
mov
mov
push
cmp
mov
jle
ja
mov
addr16
fldt
bound
imul
repz
add
pop
and
int3
cmpsb
xor
in
ja
fists
bnd
adc
mov
mov
jbe
push
dec
scas
insl
jno
insl
pushf
in
clc
mov
xchg
pop
ss
xchg
jae
je
pop
mov
outsl
pop
mov
popf
out
add
and
add
jle
bndstx
sub
mov
cmp
cmpsb
lahf
fidivrl
cs
cmc
mov
out
inc
iret
xor
aaa
xorb
xchg
out
jne
mov
inc
inc
jb
nop
jne
adc
adc
out
dec
jp
out
jg
decb
mov
test
outsb
loop
gs
ss
inc
fisubl
ja
sbb
pop
repnz
lea
mov
push
mov
lods
fs
dec
movsl
xorl
pop
adc
mov
sub
pop
xchg
mov
int
inc
cmpsl
sub
sub
out
stc
lcall
push
dec
sbb
lret
bound
push
jae
stos
movsb
and
xor
clc
push
insl
hlt
stos
mul
jp
mov
xor
in
sti
loopne
stos
xorb
sti
dec
add
xor
push
or
or
es
insb
push
push
enter
fdivrs
test
sbb
test
jo
pop
cmp
loopne
pxor
adc
pushf
imul
inc
decl
jp
fidivl
fcomps
scas
sub
pusha
movsb
pusha
mov
jmp
xor
pop
movsl
das
mov
test
dec
mov
mov
lds
ja
sub
imul
mov
mov
lods
push
jp
es
dec
xor
jo
imul
subb
pop
sub
jne
call
mov
mov
movsb
fidivl
fcoml
in
and
dec
mov
inc
inc
sbb
cmp
arpl
out
and
lahf
pop
loopne
mov
push
sahf
adc
mov
movsb
and
addl
adc
insb
gs
jne
out
test
ljmp
pop
add
push
xchg
inc
or
or
out
popa
gs
adc
xor
cmc
mov
jp
loopne
stos
mov
adc
test
rcl
ror
cmc
inc
xor
lock
mov
cmp
xlat
out
lret
push
rclb
cmp
stc
pusha
shrl
jg
sarl
jle
aad
mov
inc
ljmp
enter
jp
push
cmp
sti
cmpsb
fwait
jb
dec
pop
push
mov
loopne
rolb
cmpsb
cmp
clc
mov
pusha
add
pop
cmp
js,pn
inc
pusha
lret
hlt
popf
sbb
fdivrl
cld
pop
lret
xor
aam
les
sbb
lcall
shl
xchg
jbe
xchg
push
xchg
mov
xor
mov
lret
dec
fstpl
or
mov
out
xorl
push
add
test
sbb
inc
clc
sarl
cmp
sub
mov
sti
out
fcoml
icebp
into
push
xchg
mov
xchg
ss
mov
jg
jecxz
ljmp
mov
pop
mov
shll
push
and
cmp
lea
les
lahf
pop
lods
int3
mov
push
and
or
incl
cmp
clc
rorb
fs
jmp
sbb
negb
cmp
xchg
pop
pushf
and
xchg
mov
push
xchg
pop
and
cmpsb
cmpl
adc
das
add
int
dec
sbb
insl
fisubrl
icebp
call
mov
aas
or
test
xorl
sub
mov
in
mov
mov
xchg
pop
adc
pop
pop
cmp
aad
push
out
rorb
sbb
enter
and
data16
cmp
lods
notl
stc
mov
fs
out
jae
jb
sub
pop
jns
iret
adc
xchg
lds
xor
imul
out
cld
js
jo
pusha
mov
test
incl
and
sbb
xchg
insl
push
vandnps
xchg
dec
dec
mov
ss
mov
popa
lds
adc
into
les
outsb
lock
and
loopne
sbb
sbb
and
xlat
ljmp
pop
mov
sahf
test
sbb
mov
xor
mov
xchg
sub
jge
sbbb
mov
mov
icebp
inc
xor
lret
in
dec
es
testb
mov
push
mov
mov
jl
mov
mov
shrl
cmpsb
sbb
pop
jbe
hlt
dec
imul
add
fildll
lds
dec
push
pop
sar
fdivp
rolb
outsl
sub
sbb
aad
mov
add
mov
imul
mov
sbb
mov
and
ficoml
addb
cmp
add
jns
ret
das
pushl
cmpsb
shll
lret
test
addr16
pop
mov
ss
popl
scas
ja
shll
sarb
xor
inc
cmc
repz
sbb
adc
pop
fcomps
jge
dec
std
fs
xchg
int
and
add
mov
mov
jne
add
add
and
testb
sbb
push
sbb
add
adc
sub
jo
ficoms
jg
shlb
jb
cmp
dec
or
xor
imul
fcomps
je
repz
je
jbe
hlt
into
je
bound
cli
cmp
sub
sbb
push
push
mov
cmp
bnd
arpl
nop
jae
lds
stos
mov
mov
inc
mov
popf
popa
lahf
loope
ja
sahf
push
ret
xchg
mov
jge
shrb
iret
cli
jo
xchg
dec
xchg
or
loopne
sarb
xchg
cmp
lock
inc
or
xor
inc
jg
sub
ret
add
daa
or
cmp
out
or
xchg
push
sbb
xchg
dec
int3
jb
lods
pcmpeqb
andw
mov
lds
inc
icebp
cmp
popa
sahf
sub
jg
lret
jle
pop
lock
pop
sti
outsb
push
push
insl
repz
inc
or
cmp
test
sub
jl
mov
outsb
xchg
jmp
fwait
es
jnp
idivl
in
mov
xchg
aaa
stos
jo
stc
push
push
inc
in
inc
andl
mov
mov
and
sbb
pop
mov
xchg
xchg
ret
scas
sbb
push
inc
das
iret
xchg
mov
mov
jp
mov
ja
pop
shlb
cmpsl
push
les
pop
xor
inc
cmpsb
fwait
mov
jnp
in
jno
mov
decl
mov
and
ljmp
sub
pop
xchg
xor
jo
jmp
ficomps
mov
push
push
and
pusha
hlt
cmp
dec
push
mov
inc
or
sbb
test
movsb
cmp
sbb
cltd
push
pop
mov
popa
daa
dec
popa
sub
clc
popa
enter
cmpl
dec
cmp
sub
add
mov
jg
test
adc
pop
mov
out
bound
iret
out
icebp
sub
inc
and
popa
orb
ror
aad
aad
rcrl
jb
jne
sub
inc
pop
out
lea
gs
insb
adc
sub
es
push
stc
push
stos
or
mov
inc
cmp
pop
adc
lea
sti
sub
xchg
mov
hlt
xor
clc
add
notl
icebp
mov
outsl
xchg
inc
cwtl
insb
inc
push
fcoml
rcl
pop
adc
mov
arpl
adc
stc
testb
fiaddl
cmp
pushf
je
lods
pop
push
jne
outsl
cmp
outsl
cs
pop
popa
pop
leave
add
fisubs
aaa
adc
clc
loop
paddsb
jae
dec
orl
xchg
leave
dec
pushf
adc
ret
fnsave
mov
mov
xor
and
leave
xchg
add
js
add
testb
lcall
push
icebp
ss
and
mov
dec
decl
call
mov
test
ret
push
or
dec
pop
sbb
or
or
push
icebp
mov
mov
sbbl
icebp
pop
sbb
and
dec
cmc
addr16
sbb
enter
xchg
push
inc
and
dec
out
lods
das
adc
in
stos
cld
mov
fimuls
int3
sbb
arpl
sahf
push
add
push
push
imul
add
pop
mov
adcb
in
and
pop
mov
in
push
push
xchg
repnz
pop
gs
pop
aas
lods
push
repz
fidivl
dec
xchg
mov
jnp
hlt
ja
rorl
xor
fwait
pusha
inc
outsl
or
repz
clc
nop
add
mov
loopne
and
movsb
sub
test
aad
and
mov
mov
jp
pop
inc
pop
insb
mov
mov
mov
fcomi
fistpl
pop
lcall
lcall
cmp
shll
xchg
mov
scas
dec
js
dec
xor
sub
cmp
out
mov
or
sarl
aad
and
sbbb
sbb
mov
mov
push
int
jmp
insb
add
cmp
or
sbb
cmpsl
or
imul
jmp
mov
mov
xchg
clc
sub
cmp
cltd
push
lcall
test
movsb
mov
and
xor
test
push
enter
sbb
cmovl
inc
jne
inc
imul
and
and
mov
mov
into
xor
xor
sbb
sbb
jno
and
hlt
jne
or
add
negl
repz
imul
mov
adc
enter
arpl
mov
jae
shll
push
add
pop
push
test
aam
lret
adc
and
cmpsl
adc
xor
jmp
sbb
fwait
cmpsl
or
jecxz
push
stos
arpl
dec
test
mov
insl
dec
repz
aas
jecxz
mov
fidivrs
movsl
jo
cmp
cmpl
addb
xor
imul
dec
cltd
shll
add
mov
rcrl
adc
jo
js
cwtl
xlat
in
mov
ds
mov
insl
xchg
add
into
popf
aad
jb
add
jle
div
jecxz
push
cmp
mov
stc
mov
cmc
outsl
lea
push
inc
sub
push
adc
mov
mov
push
lods
subl
ret
xor
pop
inc
outsb
and
std
add
out
jno
xor
mov
push
or
inc
iret
cwtl
mov
pop
pop
loopne
fsubp
or
push
pop
hlt
or
jne
inc
repnz
outsb
lret
test
add
mov
adcb
les
cmp
lds
je
sbb
scas
mov
fcomps
pop
popf
imul
push
sub
ljmp
out
pop
cli
push
push
test
push
into
daa
popa
stos
loop
xchg
sbb
movsl
pop
add
sbb
fs
loopne
rcrb
and
pop
inc
push
push
lds
cli
dec
xchg
jmp
mov
aaa
mulb
clc
dec
pop
pop
test
pop
lods
shl
adc
xor
or
adc
mov
mov
jecxz
negl
and
leave
popa
cmpb
xor
roll
mov
cltd
fadd
or
sub
clc
mov
dec
pop
push
xor
sbb
cmp
mov
push
cld
jo
fstpt
mov
xchg
pop
ficoml
mov
pop
stos
add
fs
xor
data16
stos
inc
sti
sahf
xchg
fsubr
aas
movsb
int3
push
std
jle
xchg
ss
push
or
rorb
jmp
jns
stc
popa
or
mov
imul
jle
mov
mov
rorl
or
std
xchg
dec
mov
xor
pop
push
mov
inc
mov
aam
xchg
push
push
rorl
fisttpll
int
call
cmp
loop
sbb
pop
scas
add
rol
inc
lret
int3
dec
mov
sub
jo
push
stc
cmp
sbb
mov
cli
and
jmp
jmp
arpl
data16
addl
insb
push
ret
in
fwait
repz
push
xchg
and
mov
xor
jns
mov
aaa
in
dec
mov
mov
stc
mov
imul
add
ret
addb
mov
add
rolb
aas
mov
test
arpl
xchg
or
xchg
shr
push
sub
mov
mov
aaa
movb
mov
imul
daa
jge
mov
out
inc
jne
popa
std
lcall
cld
xor
pop
cmp
push
xchg
pusha
out
incl
adc
fs
jl
xchg
dec
cltd
adc
xchg
sbb
clc
insb
imul
cmp
dec
mov
je
add
dec
jmp
mov
ljmp
cmp
mov
popf
xchg
xchg
pop
mov
push
jbe,pn
and
shr
popa
mov
push
push
or
shll
mov
xacquire
mov
jge
mov
or
mov
dec
outsl
xor
aas
test
mov
mov
and
or
inc
call
pop
sbb
imul
or
inc
sti
mov
mov
mov
dec
insl
jo
ficomps
repz
mov
mov
jg
fdivs
jnp
sbb
pushf
iret
leave
pop
into
push
pop
dec
insl
push
add
mov
leave
or
sub
mov
or
lret
popf
dec
push
push
bound
cmp
repz
imul
imul
dec
xchg
ss
sub
mov
lcall
mov
inc
jmp
lahf
and
sti
xchg
cwtl
aas
ss
adc
and
out
gs
imull
mov
out
fistps
imul
int3
adc
xor
imul
pop
push
pop
cwtl
leave
xorl
push
push
mull
pop
jle
insb
dec
sub
lahf
incl
ret
je
fiadds
out
cwtl
and
insb
shlb
or
loop
fsubrp
xchg
adc
xchg
outsl
adc
icebp
xor
cmp
loopne
out
pop
sbb
push
decb
mov
bound
mov
scas
or
bnd
add
roll
shll
and
cmpl
addr16
or
xchg
lahf
mov
or
ffreep
jmp
mov
adc
ficoml
cli
mov
dec
les
cmp
sbb
xchg
sbb
dec
sbb
push
aas
fstps
lock
imul
bound
push
sbb
or
xor
pop
dec
repnz
pusha
outsl
sbb
ds
or
cwtl
mov
adc
push
xorb
jns
in
jmp
out
lcall
mov
fadds
stos
push
inc
out
mov
scas
fs
leave
js
lods
fcomi
fcmove
stos
sbb
clc
sub
mov
mov
mov
aam
dec
shl
xor
int
xchg
movsl
xor
pop
mov
dec
pop
in
and
mov
js
add
sub
arpl
dec
sbbb
mov
fcoms
in
and
pop
fcomp
add
shl
jge
cmp
cmp
xor
adc
fldenv
jmp
lock
cmp
add
or
inc
jo
andb
cmpsb
fidivs
in
ficomps
pop
push
xchg
or
iret
nop
push
cltd
gs
mov
xor
adc
adc
addr16
stc
xor
push
mov
addb
jecxz
pop
imul
jg
sub
ds
adc
mov
cmpsb
lea
in
xchg
rorb
inc
and
test
mov
mov
daa
fmulp
dec
shll
xlat
adc
and
dec
cmp
lods
xor
stc
mov
enter
inc
stos
lods
imul
mov
aad
movsl
inc
dec
imul
addr16
fwait
mov
jg
inc
sbb
das
ljmp
inc
mov
mov
sbbb
and
cmp
das
jp
push
mov
ss
bound
cld
mov
push
cs
sti
mov
xor
inc
testb
andl
into
fldcw
mov
inc
pop
push
fildll
clc
mov
add
loope
cld
das
rorl
rorl
or
dec
jae
adc
ja
pop
cmp
into
push
jecxz
xor
cmc
mov
cmp
xchg
xor
pop
cmp
in
stos
gs
sbb
mov
and
ljmp
insl
pop
ret
repz
outsl
cmp
xchg
rcrb
xchg
push
loopne
cltd
push
add
or
dec
sti
movsb
inc
mov
in
push
repnz
cmpsb
cmp
mov
ret
imul
daa
das
pushf
les
imul
xor
int3
stos
or
mov
push
sbb
xchg
test
sbb
loope
mov
sbb
xor
sbb
mov
xlat
insb
xchg
mov
xor
pop
xor
xor
or
xor
std
sub
mov
jecxz
fldt
stos
inc
ja
shlb
or
andl
fists
daa
inc
mov
notb
push
adc
mov
es
sbb
jo
mov
or
sbb
nop
notl
sub
shll
mov
jo
dec
mov
cwtl
out
bound
adc
in
rcll
mov
xchg
jecxz
mov
xchg
sbb
dec
sbb
fimull
fstpl
in
sub
loope
fs
in
enter
mov
xlat
in
cmp
push
nop
int
enter
pop
inc
cmp
mov
adc
inc
push
push
mov
nop
jbe
xchg
jmp
aam
bound
add
dec
clc
hlt
sub
xchg
and
mov
data16
in
jmp
xor
fidivrs
xchg
push
jns
push
jp
loop
dec
ja
rorl
jle
imul
mov
ret
mov
cmpb
or
xchg
scas
xlat
test
mov
daa
xor
jle
mov
push
xchg
fwait
or
mov
push
lods
pop
ss
jne
sub
dec
sbb
mov
movsl
stc
ja
add
int3
jns
or
push
call
or
mov
ret
lret
hlt
enter
fsubs
xor
flds
lcall
xor
hlt
scas
mov
sbb
and
sbb
lea
fsubrs
push
clc
mov
cwtl
jmp
pop
pop
psubusb
xor
pushf
nop
inc
xchg
xor
int
xor
xor
jns
cmp
int3
sbb
cmp
aam
inc
inc
jb
pop
out
pushf
subl
adc
inc
xchg
fstl
icebp
or
jg
imul
mov
push
int3
or
sbb
lret
leave
mov
push
rorl
mov
fiaddl
and
aad
sub
rorb
loop
sahf
pop
test
cld
out
dec
push
mov
mov
punpcklbw
jecxz
xor
pop
xchg
inc
dec
mov
and
mov
xchg
mov
cmp
cmp
xchg
sbb
loop
xor
xor
sub
jmp
dec
jo
cmp
nop
or
addl
adc
cmp
mov
push
jg
pop
dec
outsb
or
cmp
mov
adc
out
clc
imul
rcll
jae
and
mov
and
and
icebp
mov
mov
mov
mov
jnp
xchg
jle
push
popa
and
xorl
mov
pusha
push
cltd
scas
fnstsw
mov
and
frstor
pop
jns
popa
cwtl
push
test
cmpsb
in
and
cld
jne
ret
and
mov
sbb
jp
test
idivb
addb
aam
aaa
dec
xchg
adc
jne
pusha
frstor
test
add
xlat
fcmovnb
rolb
scas
popf
jl
jbe
adc
xchg
out
in
mov
aam
sbb
idivb
fadd
mov
mov
xor
pop
xchg
fldt
mov
push
fmulp
cmp
rol
test
adc
sbb
aas
cmp
and
data16
sbb
adc
divb
enter
pop
dec
jmp
arpl
cld
pop
in
insb
mov
inc
popa
cmp
jae
xchg
shlb
loopne
ljmp
loope
pop
cmpb
adc
stc
jp
add
gs
cmpsl
jne
dec
mov
and
aad
ds
mov
cld
movsl
inc
ror
sub
pop
icebp
add
cmp
push
push
xor
or
stos
test
xchg
sbb
push
arpl
cmp
cmp
mov
icebp
inc
data16
outsl
repnz
mov
jl
fiadds
sbb
sbb
mov
sub
sub
adc
sbb
and
sbb
addr16
add
push
sbb
jle
jle
mov
loopne
leave
in
inc
stc
adc
and
dec
xor
lea
sbb
jl
fwait
daa
cmp
cld
lret
mov
cmp
sti
xlat
xchg
aad
cmp
pop
pop
mov
mov
cmp
lea
or
lcall
cmp
aam
mov
fnstsw
loop
mov
pop
test
adc
inc
sahf
mov
fsubr
mov
mov
sbb
aaa
rcrl
fst
pop
sbb
add
or
jns
arpl
cmp
xor
cmp
mov
mov
and
imul
add
aam
mov
jns
sub
rorb
mov
fcmovu
dec
cmp
xor
jno
xchg
add
sti
push
or
mov
loopne
ret
xchg
mov
aas
repz
mov
scas
jle
shr
cmp
popf
out
sbb
sub
stos
xchg
xor
test
roll
ss
push
call
das
push
inc
mov
mov
les
shlb
push
out
mov
fldenv
cmpsl
inc
in
lret
mov
adc
arpl
in
cli
fnsave
dec
push
bound
shrl
test
sub
push
adc
xchg
xor
subl
insb
mov
push
sub
sbb
inc
popa
outsb
cmpb
mov
ds
outsb
ljmp
es
lcall
rolb
cmp
push
call
in
and
scas
clc
mov
in
test
push
dec
adc
xor
popa
inc
push
pop
mov
xor
shl
aaa
in
imul
inc
mov
pop
and
jno
out
icebp
rolb
sti
dec
shrl
sar
dec
xchg
or
cmpsl
imul
fwait
or
insl
mov
into
ljmp
fst
test
mov
cmp
in
mov
mov
scas
insb
xchg
shlb
les
jb
mov
push
nop
fcmove
mov
scas
inc
dec
dec
xchg
or
jns
cli
mov
mov
icebp
mov
xor
lahf
add
pop
inc
jmp
xlat
fcoml
xchg
adc
scas
xchg
fidivrs
aas
roll
insb
insl
mov
cmp
ds
xor
ret
setbe
andb
arpl
enter
repz
aaa
lds
and
pop
jge
xlat
add
addr16
fsts
cmp
rcrb
push
or
xor
imul
cmc
push
add
pop
rolb
in
pop
adc
loopne
ja
inc
arpl
cmc
mov
xchg
cltd
hlt
xchg
xlat
sub
dec
ss
out
mov
mov
ret
insb
add
in
jno
sub
ss
xchg
es
add
sub
cmc
call
out
jmp
inc
xchg
dec
orb
lahf
sub
jo
iret
dec
imul
scas
or
pushf
adc
aaa
bnd
cli
inc
sbb
stos
ljmp
ret
pop
andl
cmp
std
mov
dec
add
xchg
rcrb
mov
pop
loope
xchg
sbb
bound
xor
ljmp
out
scas
scas
das
pop
rcll
jp
lcall
incl
ficompl
or
cmpsl
push
inc
inc
cmp
push
jae
xor
dec
mov
int3
pop
cld
push
or
inc
lret
test
cmp
pop
scas
sub
int
jbe
and
inc
cmpsb
mov
enter
xchg
add
pop
adc
mov
xchg
dec
iret
cmp
push
cmpsl
das
pop
hlt
pop
adc
mov
loop
and
fwait
test
pop
int
dec
ret
cmp
jbe
or
cli
mov
lea
call
sub
sbb
leave
fmull
mov
out
andb
dec
jbe
sbb
hlt
into
jg
imul
cmc
test
ss
fcomps
cmovns
mov
dec
pop
in
or
cmp
jecxz
cmpsl
jle
dec
dec
call
sbb
scas
xchg
inc
pop
dec
xchg
and
push
repz
imul
jmp
daa
sbb
pop
loop
push
test
clc
jno
test
enter
es
jl
mov
mov
push
sbbb
xchg
ljmp
mov
add
movsb
out
lcall
adc
shr
mov
jecxz
xchg
push
inc
mov
adcl
imul
jmp
cmpsl
push
cmp
mov
pop
cmpsl
dec
out
lahf
stc
subb
add
ljmp
and
push
push
fs
inc
js
ja
cmpsb
sbb
scas
mov
or
mov
or
inc
lods
mov
dec
repz
push
lahf
dec
sub
mov
inc
push
imul
push
inc
fbld
lock
aam
mov
jge
imul
xor
int3
test
dec
fldcw
dec
add
jmp
mov
pop
loopne
jp
cmp
inc
pop
into
sub
add
fldt
and
add
cli
lods
idiv
bound
icebp
adc
dec
jbe
bswap
adc
aad
pop
stc
lcall
ss
jbe
xchg
scas
je
lods
cmp
scas
nop
inc
xchg
dec
es
jbe
xchg
add
gs
ss
pop
fisttps
mov
xor
fs
mov
sti
inc
inc
nop
sti
ror
movsb
adc
popf
lods
jns
xchg
sub
subl
pop
xor
imul
scas
mov
pop
cmc
mov
fldcw
scas
imul
mov
in
test
pop
dec
outsl
xor
add
sbb
adc
xor
into
popa
jnp
cmp
aad
push
out
mov
push
inc
jbe
mov
jl
addr16
jo
mov
jecxz
test
sub
mov
mov
loope
dec
mov
pusha
mov
bound
out
inc
mov
pop
mov
call
fnsave
sbb
dec
ds
adc
lods
pop
jns
in
mov
cmpsl
adc
and
jne
sti
inc
enter
mov
pop
out
mov
xor
outsl
test
pop
push
jle
lret
pop
int
aam
xchg
jp
test
aam
data16
jbe
enter
js
sub
cwtl
sub
xchg
call
sbb
aaa
cmp
loope
push
sub
bsf
jp
jecxz
fcompl
repnz
in
jnp
adc
in
inc
fstp
or
div
push
bound
or
lcall
dec
xchg
jno,pt
lock
cli
ret
push
xor
xchg
mov
lret
cmp
cmp
aaa
jno
mov
ja
adc
ds
icebp
jmp
jae
mov
jns
mov
or
mov
stos
mov
pop
xchg
je
push
mov
sbbb
out
mov
andb
mov
fistl
mov
les
mov
and
mov
add
insb
add
push
mov
fsubrs
aas
push
fimuls
in
mov
push
testl
ret
pop
addr16
jg
les
mov
nop
mov
aad
inc
clc
jne
adc
popf
scas
jmp
cmp
push
cltd
cs
dec
scas
test
repz
pop
movl
aas
mov
xchg
lcall
xchg
xor
mov
adc
ret
add
inc
cmp
adc
adc
pop
aaa
adc
xor
sub
or
aad
pop
pop
ret
orl
add
outsl
lods
push
outsl
addl
xchg
lods
pusha
adc
xchg
mov
scas
jle
mov
call
dec
cmp
jne
imul
int3
out
fldenv
push
inc
bound
clc
pop
sub
lcall
clc
test
sub
sub
adc
inc
pop
nop
dec
popa
cmp
mov
mov
xchg
mov
jae
push
add
jmp
dec
add
cmp
pop
dec
stos
sbbb
jp
scas
imul
sti
push
imul
sub
arpl
pop
out
add
iret
enter
dec
test
mov
xor
cmp
out
repz
xchg
jle
mov
cmpsl
test
push
mov
sbb
out
loope
push
ljmp
adc
ret
and
and
imul
into
imul
xor
push
xchg
mov
les
leave
aad
stc
sbb
jno
gs
cmp
inc
fs
in
enter
ljmp
mov
and
and
xor
xor
fisubrs
icebp
insb
sub
std
xchg
pushf
sub
insl
and
mov
fldenv
adc
sbb
jp
and
iret
inc
lret
adc
jns
jp
decb
inc
loope
add
pop
inc
clc
fisubrs
mov
aad
and
gs
jle
jne
jmp
cld
mov
add
aaa
faddl
dec
adc
fstl
push
mov
jne
daa
cs
xor
lret
rolb
cwtl
sub
xchg
jg
and
jmp
gs
aam
add
ds
adc
lret
lcall
icebp
ret
call
inc
push
jns
loope
inc
bswap
ret
cmc
out
sub
push
lds
mov
shll
jne
jle
lahf
dec
arpl
dec
push
xor
jns
and
adc
mov
and
sahf
cld
fldl2e
mov
sbb
or
push
pop
sbb
fcmovne
test
idivb
orb
iret
fldt
jne
mov
jl
lret
imul
or
or
fwait
imul
insb
test
mov
gs
inc
in
flds
sti
cmpsb
or
fbstp
cli
notl
dec
les
or
ret
jmp
sbb
push
push
push
fimuls
sbb
mov
mov
aad
add
fnstcw
xchg
sub
and
cmpsb
out
and
scas
stos
cmpsl
cltd
insb
add
and
arpl
cs
pop
sub
es
cmp
or
sahf
mov
mov
mov
loop
pop
addr16
pusha
enter
push
dec
dec
push
sbb
mov
push
shll
stos
ljmp
add
hlt
in
mov
add
je
or
mov
leave
mov
mov
xchg
push
inc
inc
and
test
cmp
push
repz
push
xchg
fildll
cmp
push
cltd
aas
push
fidivrl
sub
andb
mov
xor
push
jge
out
inc
out
push
es
xor
or
and
mov
out
push
sub
mov
mov
sub
in
add
pop
dec
pop
cld
push
jle
loopne
lods
pop
sub
mov
and
xchg
jp
pop
jg
into
mov
pop
xor
dec
cmp
loop
or
sub
inc
call
sarl
jle
adc
stc
imul
shll
fcmovu
in
test
add
mov
mov
lock
cwtl
icebp
shrl
dec
decl
call
scas
shrl
add
sti
adc
adc
ret
loop
fisttps
mov
movsl
nop
xor
les
mov
jle
hlt
xor
push
arpl
pushf
dec
pop
repz
xchg
ja
fcmovnbe
jbe
inc
mov
sub
pop
data16
pop
sti
out
ss
mov
movsb
ja
pop
pop
xor
inc
or
test
push
mov
aas
sar
xchg
inc
testb
scas
mov
adc
mov
in
arpl
test
and
divb
jae
cmp
stc
sbb
sbb
or
jae
dec
inc
mov
or
or
addr16
adc
mov
js
push
test
js
adc
add
push
int
mov
das
stos
mov
out
mov
cmp
sbb
lret
aas
xchg
cwtl
cmp
sbb
pop
bound
js
sub
and
inc
sbb
mov
mov
inc
mov
mov
div
aaa
mov
jge
pop
inc
ja
xor
scas
subb
adc
xchg
adc
cli
xor
jae
jmp
sub
mov
divl
int3
adc
lcall
imul
pop
sbb
scas
dec
lods
lods
in
xor
loopne
xchg
pop
push
testl
rcrl
add
sbb
xchg
adc
nop
jge
cmpsb
sub
push
fmull
xor
fst
cmc
sbbb
jb
aaa
sub
bound
leave
loope
lods
pop
sbb
test
daa
in
movsb
ds
pop
mov
lcall
add
gs
pop
adc
mov
outsb
out
pop
lahf
adc
lock
leave
mov
cmp
pop
dec
xor
sub
sbb
adc
and
and
test
sahf
scas
push
mov
outsl
mov
adc
pop
push
jno
dec
daa
dec
push
pop
adc
mov
and
pushf
xchg
xor
pop
lcall
mov
test
push
push
pop
fs
sub
adc
adc
ret
clc
pop
jmp
cmpsl
dec
and
xlat
in
jmp
add
dec
shrl
idivl
dec
or
out
lds
cmp
cmp
ffreep
mov
ljmp
and
enter
popf
js
test
fnstenv
jns
mov
out
mov
pop
pop
sbb
sbb
testl
cmp
out
lcall
xor
inc
in
cmp
inc
xchg
stos
imul
mov
in
push
aad
scas
aam
pop
jle
adc
iret
test
inc
jne
cmc
mov
or
aad
inc
rorb
adc
bound
andl
lods
push
call
ficoms
dec
in
cmpsl
sub
adc
xchg
cmovne
cmp
mov
jne
xlat
mov
push
inc
in
adc
xchg
pop
sub
leave
lcall
xor
push
insl
mov
sbb
fildll
lods
icebp
dec
cmp
jl
fs
stos
jle
cwtl
mov
cmp
hlt
jmp
fistl
add
rorb
inc
fistl
sarl
push
in
js
imul
add
scas
nop
pop
int3
jnp
xchg
arpl
fcompl
dec
pop
xchg
push
fisubl
in
xchg
jecxz
jns
std
nopl
mov
sbb
decb
fsubrl
inc
mov
xor
jmp
inc
push
adcl
and
cmpsl
lret
xchg
jns
jae
or
and
pop
and
xor
push
add
pop
fsubl
movsl
mov
scas
int3
sbb
or
lea
in
or
cmpsb
mov
and
leave
jbe
ret
icebp
add
jp
cmpsb
or
mov
push
das
popf
push
or
ret
mov
mov
mov
jb
shll
add
js
into
pop
pop
push
dec
sbb
xor
dec
cld
push
jbe
int
add
test
int3
add
aas
out
stos
push
and
mov
lahf
loope
pop
jne
movsl
shl
shlb
into
add
cmp
cmp
fmul
inc
test
mov
in
xlat
das
sub
xchg
and
cmp
in
fidivrl
icebp
in
mov
jo
xchg
push
sbb
push
lahf
adc
pop
xchg
pop
push
jns
out
lods
add
pop
icebp
sti
mov
xchg
call
and
inc
setae
jl
mov
sub
add
pusha
xchg
add
jno
daa
out
xchg
mov
das
jne
loopne
pop
icebp
push
hlt
outsl
andl
cmpl
jo
outsb
cwtl
loopne
mov
clc
repz
popf
mov
adc
outsl
xchg
pop
inc
sub
bound
dec
xor
shrl
jnp
mov
nop
arpl
repz
mov
int3
jl
mov
jns
lcall
rcr
pop
xlat
sahf
aad
andl
cmpsb
cmc
sub
sbb
and
into
orl
push
xchg
inc
imul
loop
pop
mov
mov
aas
fdivrl
mov
lret
scas
test
inc
mov
out
rcrl
aaa
and
mov
pop
or
sub
stc
sub
dec
mov
adc
xchg
outsl
scas
out
and
js
or
mov
ljmp
scas
sbb
cli
fsubr
sahf
sarb
lods
shlb
stos
incb
push
pop
insb
and
cs
cmpb
sub
out
jns
jge
pop
jmp
movsl
insl
sub
test
mov
and
frstor
ret
leave
pop
lods
cmp
mov
xor
in
xchg
mov
ret
iret
jp
pusha
test
test
sahf
jo
pop
mov
bound
insb
mov
out
imul
or
cs
push
dec
adc
mov
call
xor
imul
int3
sub
das
sbb
das
fcom
mov
mov
loopne
add
sbb
movsl
lahf
jb
adc
call
jle
int
or
arpl
std
dec
int3
xchg
xor
mov
sahf
sbb
xchg
fdivrl
sub
enter
ret
pop
add
outsb
dec
pop
dec
cmpsb
pop
cli
shlb
mov
lret
pop
ret
fildl
int3
inc
jp
stos
sarw
inc
pop
cmp
lahf
or
xchg
sbb
xchg
inc
sbb
adc
dec
nop
int
lcall
mov
cmp
mov
push
add
cld
lods
jno
sub
xchg
dec
sub
pop
pusha
cwtl
jo
nop
adc
cmpsb
cld
cmp
xor
mov
es
popf
int
push
aas
clc
lahf
bound
test
xchg
pop
sti
sbb
xchg
jno
add
jecxz
fcmovnb
inc
mov
or
js
sbb
cld
cmc
jns
xlat
ljmp
fidivrs
xor
xor
xchg
xchg
test
cmp
test
iret
mov
repz
mov
adc
into
xchg
js
mov
hlt
cs
xchg
cmp
xchg
inc
xchg
rcl
xlat
add
popa
inc
jo
cmp
xchg
int3
mov
cmpsb
jnp
shl
xchg
xchg
ja
dec
data16
aas
pop
gs
loop
and
add
daa
jp
add
jno
mov
shlb
fiadds
not
mov
ljmp
push
aad
cmpsl
les
add
or
lods
inc
xchg
gs
hlt
insb
idivb
xor
sub
sbb
mov
cmpsb
xchg
add
push
jae
imul
andl
popf
dec
fcomp
adc
rorl
cltd
or
xorb
pop
leave
scas
in
hlt
cmp
cmp
jo
mov
mov
sub
fwait
in
jnp
jecxz
sbb
or
sub
stc
test
rcr
out
daa
ret
insl
fs
popa
outsl
adc
cltd
enter
cmp
cli
adc
outsb
pop
jge
sbb
insb
jnp
pop
and
jae
shlb
rclb
shll
std
mov
jo
les
xchg
dec
or
and
mov
cmpsl
adc
and
dec
mov
loope
data16
xchg
ja
xchg
lret
out
lret
out
mov
insl
mov
inc
or
mov
sysexit
jae
icebp
push
push
ds
mov
mov
cmp
test
ret
ljmp
addr16
mov
out
fstpl
int
sbb
mov
sub
shrl
addb
bound
ret
and
xchg
push
xchg
sar
sbb
leave
test
pop
hlt
xor
outsb
imul
notl
xchg
cmc
stc
into
fidivl
pusha
sbb
jge
aad
mov
jg
popf
push
pop
dec
lret
outsb
fimull
notb
push
xchg
pop
pop
jmp
testl
aad
adc
jp
lcall
adc
pop
push
lahf
inc
in
sarl
addr16
icebp
rclb
addl
inc
repz
test
sbb
xor
leave
out
rol
xor
jns
push
adc
dec
shl
xor
fld
add
dec
or
xchg
pop
outsb
ret
lds
leave
into
adc
sub
jg
mov
mov
int3
mov
xlat
xor
xchg
inc
dec
mov
lock
loope
dec
mov
popf
out
lods
clc
dec
mov
xchg
shlb
jg
or
mov
sarl
test
cmp
pusha
call
rcl
dec
incl
repnz
xchg
aam
les
mov
dec
sbbl
ret
testl
sub
pop
dec
mov
push
push
cmc
call
jecxz
imulb
inc
mov
jne
jo
and
movsl
sti
daa
loope
add
mov
push
fwait
sbb
sub
cmpsb
pop
and
rcrl
pop
mov
sub
xchg
insb
aaa
cmp
mov
jge
xor
mov
xchg
pushf
cltd
fstpt
push
add
jp
fwait
inc
push
mov
or
sbb
fidivs
stos
sub
push
fidivs
aad
adc
test
push
scas
sub
sbb
shll
aaa
sbb
popa
ss
jno
js
lgs
stc
popa
data16
cld
clc
ja
jmp
sub
in
dec
push
xchg
bound
nopl
mov
jp
mov
dec
cmp
outsb
leave
or
fimull
insb
fdivrs
aaa
adc
mov
pop
xchg
lahf
inc
mov
lds
add
fdivp
fisubl
xor
mov
gs
ljmp
bswap
dec
jae
shrb
sti
fs
mov
repz
push
leave
pusha
sub
pop
inc
lret
aam
cli
sbb
jl
push
jp
mov
xchg
shl
jb
les
add
fistpll
es
adc
jns
pusha
wrmsr
jno
es
test
in
in
cmpsb
mul
sti
push
popf
or
sub
pop
jno,pn
movsb
mov
xorb
js
fxch
jg
cli
mov
mov
pop
fistpl
push
mov
mov
sti
dec
mov
push
repz
in
lret
mov
inc
imul
cwtl
fwait
sahf
dec
orl
xchg
daa
cmp
adc
test
mov
push
xchg
add
fildl
out
jl
jne
fsts
out
movsl
mov
push
into
xlat
enter
movsl
pop
hlt
pop
out
inc
add
in
jp
jno
jge
mov
inc
mov
popf
push
mov
mov
lcall
and
cwtl
aad
sbb
ljmp
mov
nop
rcll
hlt
lret
hlt
cwtl
jl
adc
sahf
cmpsb
mov
ret
xchg
dec
mov
std
les
xchg
sub
cmp
inc
push
nop
mov
add
dec
pop
dec
ja
sahf
inc
pop
adc
xchg
cmp
imul
pusha
or
fnstsw
lock
pop
push
add
jle
xor
stc
shll
subl
fistl
add
mov
push
lret
fidivl
jbe
iret
ljmp
mov
aad
hlt
in
clc
into
xor
cmp
add
add
push
cltd
insl
jmp
push
pusha
sbb
push
inc
loop
ss
ja
push
shlb
repz
lds
mov
jb,pn
das
inc
in
adc
int
sbb
dec
mov
xchg
leave
or
mov
cmp
pop
out
cmp
hlt
jno
stos
into
add
nop
jg
or
mov
fidivs
sub
sub
sub
test
push
dec
xchg
test
mov
add
clc
dec
pop
dec
fs
mov
and
jle
adc
xchg
push
xchg
call
cld
daa
out
dec
ljmp
repz
push
jbe
int3
icebp
in
imul
imul
mov
xchg
jnp
out
enter
push
fidivs
shlb
lret
xor
rcr
mov
cmp
inc
and
mov
pop
lret
stc
and
and
arpl
push
inc
jle
mov
nop
cmpsl
adc
scas
lret
jno
push
and
dec
aad
push
orb
sub
mov
push
aas
adc
add
jle
sbb
test
and
lcall
aaa
je
adc
mov
sub
push
idiv
call
adc
mov
test
int3
and
lea
jg
fsubrl
orb
or
adc
js
loopne
fisubs
xchg
cmc
scas
mov
or
pop
mov
dec
mov
adc
in
iret
inc
push
ucomiss
inc
cmp
int3
insl
fisubl
jmp
rcll
pop
dec
popf
pusha
sarb
aad
push
subl
xor
cmp
je
push
dec
jne
or
add
out
pop
aad
adc
call
loopne
mov
add
loop
cmpb
push
and
inc
sub
mov
orb
jb
xorl
push
test
or
inc
or
mov
push
push
loop
and
adc
pop
mov
stos
fs
pop
sub
cmp
pop
inc
jecxz
jnp
push
xchg
jne
lds
test
cmpsb
pop
gs
clc
inc
into
push
lahf
adc
jae
ret
push
and
dec
lahf
jg
addr16
lods
out
xchg
hlt
push
sub
sub
mov
in
sbb
stos
sbb
and
sub
call
dec
or
ficompl
rclb
or
out
mov
dec
scas
pop
fs
mov
xchg
or
stos
sarb
and
aam
lds
insl
scas
dec
adc
fisttpll
and
shlb
mov
pop
mov
push
scas
mov
sbbl
setae
mov
test
mov
adc
sub
push
add
out
subl
sbb
push
iret
jle
pop
test
add
repz
mov
das
rorb
push
fstpl
fsubl
sbb
fstpl
je
pop
lea
mov
jl
push
popa
fcoml
sbb
jge
cwtl
inc
cs
push
jg
mov
push
mov
leave
push
rorl
loopne
sub
lcall
jecxz
sbb
cmp
jbe
ret
shrb
aad
std
outsl
scas
das
mov
mov
repnz
roll
mulb
inc
idivb
add
daa
mov
test
cmp
mov
mov
dec
fisubrl
dec
push
out
pushf
push
jne
test
js
subb
ljmp
dec
popf
dec
xchg
xchg
or
shl
xor
fdiv
pop
icebp
cmp
ds
es
and
xchg
dec
inc
in
jecxz
add
dec
fidivs
and
test
pop
sbb
sub
ret
pcmpgtd
sbb
push
jnp
pop
pop
inc
sbb
or
fnsave
or
sar
insl
jl
fildl
pop
idivl
jecxz
ffreep
xorl
push
ss
ret
sub
inc
arpl
adc
shrl
pop
lods
fwait
insl
enter
shll
scas
add
sbb
sbb
mov
push
es
ds
outsl
push
in
sbb
add
jecxz
lret
dec
popf
pushf
mov
cmovp
orl
push
add
enter
jb
and
dec
lods
cmpsb
cs
push
loopne
pop
push
pusha
in
aam
repz
xlat
leave
test
inc
xchg
out
jg
inc
mov
mov
cmpsl
and
add
xor
in
sbb
ficoms
mov
sti
clc
ljmp
mov
aaa
mov
and
sti
pusha
or
xor
adc
mov
sub
les
fsub
sbb
mov
fnsave
stos
jo
stos
aam
aam
xchg
rcll
mov
xor
bound
lock
and
adc
aad
repnz
fdivs
or
ljmp
cmpsl
insb
movsb
pop
andb
fs
sbb
addr16
sub
in
push
jecxz
js
lods
mov
test
ljmp
push
idivl
rorb
mov
sbb
pop
add
mov
cmp
inc
and
pusha
cmc
dec
sub
shr
fstps
adc
cmp
data16
jb
movsb
adc
dec
mov
push
mov
and
jecxz
mov
into
or
cld
pop
mov
outsl
bound
cs
ss
push
fiaddl
fmull
dec
inc
pop
ds
insb
sbb
inc
adc
pop
sub
fsin
push
shrb
int3
divb
xchg
mov
rorb
or
cmp
fs
jb
add
lods
jns
ficoml
stc
xor
sbb
fsub
and
pop
sub
stos
inc
lcall
pop
pop
dec
fs
sbb
cmp
mov
xchg
rcrb
mov
sub
insb
repnz
lcall
lods
or
sub
test
adc
push
and
inc
out
pop
ljmp
lds
das
sbbb
and
clc
jmp
jb
xchg
sbb
cmp
mov
inc
in
pop
test
test
cmp
lahf
stos
stc
jo
fiadds
and
insb
push
sbb
test
cmpsl
data16
fisttpll
xor
or
pop
fwait
adc
stc
add
dec
adc
add
rcrb
imul
in
xor
push
xchg
shrl
jnp
sahf
testb
sbb
mov
rorb
mov
xchg
scas
aam
je
or
dec
jne
push
ret
fcoml
andb
stos
xlat
mov
push
adc
out
dec
mov
adc
insb
ret
mov
inc
bound
add
inc
fmull
negb
xchg
lcall
xor
push
sub
push
popa
lock
mov
jl
jnp
sbb
aas
loopne
call
pop
in
cwtl
aam
xlat
mov
fidivrl
sbb
movsl
or
subb
sbb
pop
cmp
repnz
aam
pusha
bound
insb
adc
jmp
xchg
jbe
in
add
stos
sbb
js
dec
pop
cltd
and
mov
imul
shl
fisubs
mov
scas
or
cmpsl
in
and
push
push
pusha
jle
cmpsb
xchg
je
mov
ljmp
jbe
push
add
in
xor
add
stos
push
dec
adc
xchg
dec
nop
jae
andb
sub
xor
pop
pusha
outsl
std
out
dec
andl
and
movl
testl
fbld
andb
dec
fisttpl
movsb
repnz
sub
push
js,pt
jno
add
out
outsl
mov
and
mov
jmp
cli
jmp
mov
daa
cli
sbb
and
outsb
ret
hlt
shrl
push
enter
cmpsb
jne
mov
stos
push
dec
sarl
mov
mov
fs
push
xor
xor
cmp
clc
jns
cmp
in
mov
pop
test
dec
jbe
int3
lea
mov
jmp
sbbb
aam
int
push
adc
fidivrs
or
push
push
das
inc
movsb
xor
ss
and
sbb
fisttpll
lock
mov
mov
jae
sub
popf
jbe
cmp
mov
mov
in
add
out
sti
dec
jns
verw
add
pop
add
jnp
dec
bound
ds
xor
sub
outsb
add
and
xchg
mov
xchg
int
gs
push
stos
mov
std
aam
es
ret
mov
mov
xchg
mov
sbb
xor
jmp
jno
mov
aad
jne
movb
push
jg
adc
push
repz
out
push
je
cmc
bound
cmp
xor
ret
pop
xor
imull
in
cmp
dec
push
out
rol
lahf
mov
arpl
jae
mov
and
imul
sub
pop
inc
call
pop
clc
dec
insb
mov
mov
je
imul
nop
jp
and
or
test
sub
pop
add
sub
xchg
testl
pop
cmpsb
mulb
xchg
sub
jnp
js
adc
stos
add
jno
mov
and
xor
inc
or
adcb
addl
sub
and
inc
iret
xchg
xchg
add
sbb
mov
jbe
and
stos
cmp
push
out
mov
shrb
add
adc
fwait
jmp
adc
inc
cmp
and
mov
pop
push
mov
movlps
jp
stos
outsl
cwtl
mov
in
xchg
sub
jo
dec
in
pop
and
fildl
test
pusha
test
lea
stc
cmp
arpl
lods
adcb
lret
pusha
xlat
mov
cltd
xchg
cld
sarl
mov
stc
mov
xor
pusha
jo
fistpl
aaa
mov
dec
icebp
mov
ds
fcmovnu
jnp
dec
xor
jns
xchg
popa
xor
mov
jno
jmp
jne
out
pushf
push
inc
adc
adc
les
sub
sbb
lcall
in
cld
jo
sbb
or
int3
loope
xchg
mov
mov
xchg
imul
cmc
jae
push
lret
mov
sbb
test
push
rorb
jmp
imull
das
pop
notl
daa
insl
int3
outsb
aam
dec
lock
insl
das
cltd
shlb
and
adc
mov
pop
fldenv
jb
inc
jmp
sub
jo
jae
js,pn
stos
int3
test
cmp
push
inc
mov
in
or
rorb
pop
jg
xchg
leave
mov
xchg
sbb
fisubrl
movsb
mov
movsb
adc
icebp
lret
and
daa
xchg
and
cmp
loopne
push
add
mov
jecxz
xorb
fbstp
push
xor
lods
xlat
xchg
sbbb
sub
mov
imul
sbb
jns
or
cmp
sbb
lret
xchg
adc
int
xchg
into
ljmp
je
mov
icebp
fbld
lock
xorl
dec
or
mov
sub
and
stc
sbb
cli
or
arpl
pop
sub
jg
int3
ficoml
cmp
lea
sbb
scas
movl
jmp
inc
arpl
ss
filds
xchg
push
inc
pop
add
sub
rolb
xbegin
cmp
fwait
cs
pop
mov
pop
mov
dec
pop
shlb
xchg
test
push
enter
inc
xchg
loope
mov
test
lahf
push
inc
or
loopne
adc
inc
ret
and
adc
dec
jle
dec
nopl
jo
sarb
pop
inc
push
fidivl
push
push
imul
jns
jno
aam
lds
dec
fldenv
and
jb
or
sbb
js
stos
adc
adc
js
xlat
mov
jb
das
popa
lcall
setl
pop
ss
push
mov
pusha
or
mov
scas
jmp
xlat
ds
pop
mov
sti
bound
lret
inc
sub
shl
xchg
pop
dec
jmp
xchg
push
fldt
loope
mov
xchg
dec
push
push
mov
xchg
mov
js
inc
add
mov
and
push
fisubrl
push
repnz
mov
xor
jle
mov
mov
xor
in
jno
sbb
rorb
push
mov
or
imul
pop
xor
push
jne
push
jns
sbb
in
addr16
cmp
cwtl
xor
xadd
cmp
push
jmp
mov
or
sbb
push
in
cmpb
test
sbb
sbbb
or
push
jecxz
rorb
adc
add
xchg
push
mov
fld1
dec
adc
subb
xchg
ja
dec
and
cwtl
shrb
mov
out
push
cmc
inc
scas
test
ret
or
pop
sahf
xchg
adc
cld
sti
xor
test
in
cld
mov
jno
cmp
jg
fstpt
shrl
sub
in
dec
fldenv
pop
push
adc
ficoml
adc
aaa
adc
clc
fucomp
mov
pop
jl
lds
shlb
cmp
mov
sbb
sbb
ss
es
sahf
sbb
jmp
xor
pop
inc
lcall
sbb
xchg
out
mov
filds
mov
movsl
lods
fwait
jp
mov
jmp
jns
mov
jp
jg
cltd
clc
out
push
outsb
jnp
xchg
aam
bound
aas
pop
and
cli
dec
fadds
pop
jb
std
xor
sub
ss
in
jg
mov
and
cmpsl
imul
daa
outsb
or
int
fidivl
or
gs
add
sub
imul
js
push
dec
push
ss
clc
sub
dec
dec
xchg
mov
leave
add
xchg
in
clc
add
mov
lahf
inc
ret
inc
lea
xor
mov
push
rcrl
js
int
mov
out
xorl
insb
or
and
jae
lret
dec
outsb
insb
dec
pop
xchg
xchg
fimuls
sti
dec
cmpsl
jnp
pop
popa
cmp
fbld
jb
pop
cmp
scas
subb
popf
leave
jbe
ja
loop
push
pop
enter
xchg
pop
push
sub
loop
sub
movsl
push
pushf
je
dec
repnz
fnstcw
inc
sbb
outsl
lds
jne
dec
cmp
jge
popf
dec
leave
mov
pop
mov
xor
das
mov
enter
sbb
cmp
and
ficompl
mull
xchg
in
mov
lcall
or
pop
mov
rcrb
xor
push
sub
mov
addl
je
insl
cmp
inc
sbb
jle
dec
push
cmp
fmull
mov
testb
cmp
stc
and
dec
fstpt
push
xchg
imul
dec
jg
test
rorb
repz
out
mov
roll
pop
jmp
dec
push
lock
xchg
fdivl
mov
aas
push
aaa
push
test
xor
xchg
repnz
testb
adc
int3
pop
iret
mov
pop
repnz
add
xlat
push
test
in
das
data16
adc
je
sahf
jb
dec
pop
cli
out
push
shlb
imul
jo
sbb
test
cwtl
sahf
lds
loopne
mov
stc
or
mov
jnp
les
loope
das
out
adc
bound
loope
imul
lea
pusha
or
sub
sbb
lret
xchg
aam
lds
mov
jge
pushf
into
rclb
shll
jno
add
cli
das
add
xchg
mov
add
aas
pop
push
lahf
daa
cld
or
cwtl
adc
test
mov
inc
sub
lods
in
mov
mov
roll
sahf
cli
mov
mov
in
pop
jae
mov
bound
popf
imulb
pop
cmpsl
pop
je
xor
jle
xor
cwtl
sub
dec
cmp
mov
jb
aaa
sbb
mov
push
adc
outsl
in
mov
lret
and
pop
cmp
js
es
paddusb
xor
push
inc
cmp
and
pop
xchg
xor
push
inc
dec
stos
pop
jecxz
movsl
and
insl
or
loopne
jl
pop
mov
xlat
mov
dec
pop
rcll
into
cmp
repz
pop
lock
arpl
mov
je
and
fadds
jo
xor
sbb
push
pop
xchg
sub
cld
cmp
call
inc
mov
dec
jns
pop
cli
mov
pop
adc
fsubrl
mov
and
mov
sbb
push
inc
inc
loope
mov
mov
shll
push
testb
mov
addb
mov
and
dec
mov
xchg
jle,pn
lea
jb
pop
adc
pop
imul
dec
pusha
mov
jge
push
pop
jecxz
les
push
into
mov
jmp
fs
mov
xchg
add
inc
mov
dec
mov
push
sti
xor
sub
lahf
mov
popa
movsb
sub
jge
test
int
fsubrs
push
cmc
xchg
test
pop
and
cwtl
push
ljmp
cmpb
adc
std
adc
xchg
xor
xor
icebp
and
sbb
or
xor
ret
js
iret
loop
pusha
mov
mull
add
movsb
stos
inc
mov
push
ror
call
sub
push
rorb
sub
fcompl
mov
xchg
cmp
or
shrl
xor
outsl
inc
cwtl
cli
test
lods
add
imul
xor
outsl
das
xor
data16
shl
add
xchg
mov
rcr
lahf
ficoml
in
dec
pop
jmp
pop
adc
mov
and
lret
stos
fiaddl
mov
scas
int3
cmc
pop
test
cmp
mov
mov
imul
test
sbb
adc
aad
outsb
cmp
push
mov
xor
call
inc
xor
jns
sub
inc
and
cmpsb
inc
fadds
dec
mov
cmp
lahf
inc
outsb
push
mov
mov
sub
insb
stc
pop
jnp
mov
shrb
or
mov
leave
cld
enter
jmp
inc
cwtl
jns
dec
jg
movsb
cmc
cmp
sub
int
mov
test
sbb
mov
cltd
add
mov
shrl
repz
lea
insb
into
clc
xor
testl
lods
dec
xchg
in
jl
mov
iret
imul
jle
sub
nop
test
cmpsb
mov
test
xchg
nop
fstpt
push
adc
popf
push
subb
pop
inc
lahf
es
mov
push
jo
xchg
aam
inc
repnz
mov
mov
movsb
adc
xchg
mov
arpl
idivl
push
push
mov
sbb
fisubs
les
sub
mov
ljmp
jmp
sub
cmp
clc
stos
jae
mov
daa
push
iret
fcoml
sti
pop
mov
repnz
add
test
adc
pop
xchg
sahf
jg
pop
loop
aam
xlat
xor
sbb
jbe
dec
dec
dec
inc
and
cmp
inc
add
shrl
jno
popa
lods
mov
jle
andb
into
filds
lcall
rcr
ja
pop
dec
adc
repz
inc
cmp
pop
test
sbb
sbb
test
fnsave
shlb
mov
fimuls
adc
ja
sub
sahf
mov
aad
test
movsb
dec
pop
pusha
cmp
lret
adc
inc
shrb
lret
jns
jne
repnz
out
push
pop
icebp
sti
addr16
sub
fsubp
lds
lds
js
hlt
adc
fwait
loopne
out
repnz
fstl
bound
pop
push
jns
cmp
jp
mov
xchg
cld
lret
in
gs
and
sub
call
jb
sub
mov
mov
das
push
fisubs
xchg
hlt
out
pop
sbb
add
dec
sbb
js
cld
les
jge
sbb
push
movsl
dec
fmull
and
fcmovu
xlat
xor
push
imul
fidivs
xchg
cmp
loope
mov
or
aam
push
xchg
popf
out
inc
lods
sahf
mov
jmp
adc
mov
inc
test
jge
jo
inc
lock
adc
jp
add
imul
jnp
addr16
sbb
test
call
jl
push
xchg
add
mov
inc
cmpsl
lcall
pop
stos
lds
pop
or
pop
cmp
and
cld
sub
int
lds
repz
aas
ds
or
inc
jp
idivl
mov
jne
jo
push
pop
xchg
push
xchg
insl
js
mov
push
enter
jnp
or
cs
dec
jecxz
adc
hlt
lds
mov
cltd
adc
inc
test
xor
cmp
push
sbb
or
sub
pop
sti
pop
notb
add
into
xor
jecxz
add
fidivrs
push
data16
jae
divl
dec
xor
cmc
mov
jbe
xchg
ret
out
xor
dec
mov
mov
es
dec
or
push
jae
or
push
pop
adc
in
jnp
repnz
or
add
in
inc
fiaddl
adc
imul
in
or
xchg
out
fistpl
notb
push
xor
mov
push
scas
jbe
mov
and
mov
inc
mov
outsb
push
add
pushf
xchg
sbb
in
loopne
insb
add
daa
and
lret
adc
pop
sub
xchg
xchg
xor
add
rorb
mov
lret
fucom
loope
mov
loopne
xor
cwtl
jge
dec
fildl
jnp
inc
pushf
and
mov
fmulp
stos
jns
jno
xor
hlt
and
xor
sbb
mov
out
movsl
push
cmp
inc
xor
addb
xchg
sbb
mov
inc
xor
jg
push
fucomi
xchg
call
lock
pop
jg
sub
arpl
rcrl
and
jo
aaa
popf
jl
dec
xor
stc
es
fs
lret
sbb
les
outsl
inc
jnp
lahf
fs
sub
call
loopne
push
sub
dec
add
sbb
push
inc
xchg
cmp
and
fcoms
xor
into
xchg
xchg
cmp
add
mov
cmp
out
cmp
sub
fisubrl
sbb
dec
sbb
push
cmp
cltd
jg
sbb
cmpsl
shl
stc
jmp
jne
popa
lods
cmc
mull
cli
sub
cmp
mov
jecxz
stos
negb
fildl
aas
add
jp
xchg
push
jns
xchg
rorl
outsl
inc
cmpsl
jns
pop
sbb
pop
fistps
ja
sub
scas
into
int3
or
bound
pop
js
aam
mov
cmp
xchg
sbb
addr16
das
adc
pop
inc
and
mov
repz
fildl
fsubs
inc
xor
rcrb
popa
jne
data16
rcrl
sub
xor
ret
xor
adc
xor
push
rorb
addr16
adc
add
jo
popl
push
repnz
addb
push
mov
movsb
mov
jle
outsl
out
mov
push
incl
test
popf
lahf
data16
cmpb
mov
lds
lods
mov
mov
or
inc
ljmp
into
rcrl
aas
aam
popf
out
repnz
dec
lock
pusha
and
add
fs
cmp
test
lods
fidivs
push
lods
rcl
imul
popa
aam
jnp
inc
dec
push
adcl
pop
lret
loope
push
add
jns
push
xor
fdivs
mov
sbb
cmpsl
xor
jb
jle
jo
push
mov
dec
mov
xchg
repnz
in
addr16
jae
lods
sbb
insl
add
mov
leave
hlt
icebp
push
xchg
and
dec
mov
loopne
push
sub
lock
xchg
ss
push
js
arpl
fistps
in
xor
sbb
repnz
pop
cltd
das
push
adc
rcr
aaa
shrl
xchg
clc
outsb
push
fcom
negb
outsb
test
or
icebp
out
cli
inc
or
and
jae
rorl
ret
pop
pop
and
mov
jmp
inc
adc
jmp
lock
jnp
aaa
push
sti
jbe
adc
cli
or
je
dec
dec
lret
and
mov
adc
sub
pop
mov
jl
pop
fistl
mov
ret
mov
mov
push
ds
add
xlat
push
cmp
jno
daa
pop
jl
jne
and
sti
js
add
rorb
dec
cmc
lods
xchg
inc
div
repnz
sahf
add
pop
out
pop
jecxz
vpmacsdd
add
xchg
push
fwait
push
pushf
jle
dec
jbe
mov
in
inc
mov
cltd
mov
add
sub
inc
call
mov
aaa
adc
jmp
aaa
add
xor
add
cmpsl
mov
test
push
cmp
fnstcw
sub
cltd
loopne
icebp
and
aam
iret
enter
cmp
mov
xchg
mov
or
push
xor
cmp
ret
sbb
inc
dec
insb
cmc
arpl
lock
jmp
rorb
gs
jl
es
xchg
lea
sub
mov
jg
push
ss
cmp
cmpsb
and
xchg
stc
pop
sbb
cmp
arpl
sub
mov
mov
nop
push
inc
mov
cs
add
mov
push
pop
push
or
dec
xchg
push
cmp
aaa
pop
sbb
push
shll
jl
jge
sub
call
mov
hlt
into
sub
dec
fs
mov
pop
lock
es
nop
sub
imul
push
int3
ljmp
adc
ljmp
aam
mov
push
out
lret
es
rorl
sbb
jns
sub
outsb
out
sub
test
push
sbb
std
pushf
cmpsb
cmpsb
imul
fldenv
cmpsb
popf
fwait
sub
sbb
insb
out
cmp
sub
jae
adc
es
insb
sbb
dec
pop
addr16
sbb
xchg
adc
fiadds
and
scas
push
sbb
mov
bound
in
mull
push
dec
fcomip
shll
pop
int3
inc
jg
ret
push
outsl
cmpsb
push
outsl
arpl
lret
mov
mov
xchg
cltd
hlt
and
pop
int
cmp
test
iret
aam
cmp
sarb
xor
mov
aam
sbb
cmp
fdivl
test
or
jmp
mov
loop
jne
push
xchg
push
icebp
js
daa
jmp
fldt
testb
push
scas
push
lds
and
or
mov
push
dec
xorl
jle
sub
inc
shlb
xchg
jmp
adc
xchg
cmp
pop
mov
push
xchg
icebp
mov
dec
lahf
leave
dec
call
dec
cli
jecxz
imulb
inc
jecxz
ljmp
scas
or
cmp
sub
mov
push
dec
sub
out
lods
sbb
mov
jb
and
push
inc
daa
lods
aad
xchg
lods
mov
pushf
or
mov
push
pushf
fldt
sub
es
lret
mov
insb
dec
inc
outsl
das
sbb
call
in
in
sbb
addr16
repz
mov
inc
push
jno
aaa
orb
push
or
sarl
pushf
sbb
int
div
sti
adc
and
testb
pop
rol
dec
sbb
sub
sarb
xor
cmp
cmp
inc
and
cmp
cmpsb
inc
adc
inc
std
rolb
mov
bound
test
pop
mul
and
outsb
test
add
mov
mov
sbb
iret
add
xor
sbb
fnstenv
pop
xor
pop
bound
lret
jmp
mov
test
xchg
inc
jecxz
lds
push
in
in
lahf
xor
mov
adc
cmpb
cmpsb
in
jnp
dec
cmp
inc
pop
gs
xor
adc
add
in
adc
sahf
mov
inc
add
fnstsw
and
inc
or
pop
add
js
call
nop
pop
sub
mov
shll
or
mov
stc
scas
nop
movsl
cs
sub
lret
data16
mov
and
shlb
popf
pusha
xchg
xor
fdivs
xchg
sbb
mov
sub
xor
mov
mov
les
jns
sub
cmp
int
pop
push
leave
push
sbb
adc
push
idivl
ss
xchg
cmp
lods
inc
mov
movsb
sti
roll
call
mov
repnz
push
outsb
fmul
mov
fisttpll
pusha
mov
cli
mov
adc
int
dec
mov
int
and
pop
xchg
xor
aam
stc
inc
jae
jns
dec
sub
push
pop
adc
dec
outsl
enter
insl
scas
mov
cs
jns
bound
mov
cmp
jbe
cmp
xor
addr16
insb
sub
xor
movsb
xchg
mov
stc
nop
loope
sbb
idivb
jge
shlb
push
dec
hlt
lcall
sub
or
dec
jnp
das
jne
mov
or
sbb
adc
insl
and
ss
pop
pop
popf
push
xchg
xor
sbb
sub
add
jns
pop
jmp
push
clc
push
mull
lds
fwait
jbe
jns
lds
jge
sbbl
lahf
imulb
mov
push
icebp
loope
push
sar
push
addr16
test
jg
rorb
sub
aam
add
cmp
mov
iret
fwait
and
inc
pop
and
jbe
cmp
lods
cltd
push
outsl
ficompl
scas
adc
cmp
and
pop
je
sub
mov
outsb
imul
fbld
add
nop
mov
push
popf
pop
and
xchg
mov
repnz
movsl
xchg
daa
jp
jnp
jb
and
inc
push
xor
ljmp
das
fidivrl
stos
push
mov
xchg
pop
std
or
lds
inc
mov
push
mov
and
mov
movsb
push
std
sarl
sbbl
jae
out
push
adc
push
lods
push
fidivs
ror
arpl
cmp
or
inc
push
kmovb
repnz
sarl
movsb
xor
cli
xchg
xchg
jb
sub
sbb
dec
das
mov
loopw
stos
xchg
ljmp
in
mov
mov
push
mov
fadds
add
ja
mov
push
sbb
push
mov
test
test
fcoml
ss
jae
lods
mov
pop
xchg
and
jl
scas
icebp
push
jno
outsb
in
cmp
adc
mov
js
movsb
and
adc
mov
adc
enter
xlat
lcall
loopne
pop
stc
or
sahf
ds
xchg
scas
and
mov
pop
test
mov
loop
mov
pop
xlat
mov
sti
enter
xor
dec
loope
mov
mov
sbb
std
inc
and
xchg
stos
xchg
cs
hlt
test
pop
fiaddl
cmp
push
jae
xchg
adc
add
push
jg
jecxz
fwait
in
adc
adc
xor
jg
and
jo
add
std
mov
ds
imul
jb
jae
daa
and
fildll
xchg
dec
pushf
shlb
add
pop
or
mov
xor
out
push
xchg
cltd
fstp
adc
pop
pop
adc
subl
pop
cmpsl
aas
add
ror
cmp
lock
ljmp
pusha
aas
gs
or
stc
mov
imul
adc
hlt
cmpsl
mov
xor
cmc
shlb
loope
or
cld
lods
mov
jle
insb
test
mov
xchg
mov
lea
mov
stos
and
js
divb
xchg
pop
ret
jl
lds
sbb
lret
int
add
in
xchg
loope
jmp
out
sub
jl
out
int3
ret
dec
mov
adc
fs
mov
sbb
or
lods
mov
jo
js
mov
xchg
das
and
jg
push
cmp
sub
cmpsb
aad
cld
sbb
pop
cmp
clc
insb
sub
adc
mov
ret
fildl
push
sbb
cmp
fsubrs
das
cmp
fcomps
sub
stc
dec
xchg
sub
das
push
adc
aas
test
push
or
scas
dec
mov
mov
jnp
daa
xchg
jns
xchg
popa
mov
mov
sbbl
xchg
icebp
cmpsl
pop
dec
jmp
mov
cmpsb
adcb
lcall
mov
in
cmp
jbe
and
test
shrl
popa
es
loopne
inc
negb
cld
jnp
push
push
dec
int
lods
sub
addb
xor
pop
mov
dec
sbb
dec
sbb
jg
pop
cmpsb
leave
fidivl
add
lahf
movsb
or
rcl
sub
push
enter
cwtl
inc
push
sbb
out
or
enter
jmp
pop
cld
mov
fcomi
gs
imul
dec
rolb
mov
insb
scas
inc
add
sbb
jo
and
jnp
add
jne
test
mov
mov
ds
mov
stos
mov
fwait
push
mov
push
xchg
fldt
xor
xor
stos
insl
sbb
mov
add
jb
popf
ja
jne
dec
in
xor
hlt
fiadds
mov
cmp
jno
lret
pop
adc
and
inc
jl
mov
in
lea
stc
lret
out
inc
sbb
lahf
idivl
jns
sbb
jl
nop
mov
cwtl
pop
pop
xor
sbb
xor
xchg
sub
mov
arpl
inc
add
scas
fdivl
es
pop
cmp
jo
popf
inc
jns
out
add
pop
aam
mov
ds
xor
stc
pop
cld
mov
daa
imul
jbe
imul
pushf
mov
or
dec
xor
sbb
cmp
popf
adc
jb
mov
les
cmc
add
sahf
rcrl
iret
popa
adc
out
es
mov
inc
xchg
sbb
rcl
ficoml
bound
sbb
loop
or
ja
xchg
sti
pop
dec
push
ffree
pop
xchg
lock
jecxz
addr16
dec
jle
testb
dec
inc
out
dec
sbb
pop
ja
push
imul
test
popf
add
cmpsb
js
pop
xchg
cld
and
and
shll
das
jo
into
cmp
arpl
into
push
push
mov
cmpb
insl
add
add
jl
jg
push
in
sbb
add
fsubrs
sub
xchg
and
std
sti
rcr
cmp
xchg
xchg
movaps
cmpsb
int3
pop
sbb
sarl
fidivrl
addb
sbb
popa
xor
add
add
repnz
push
inc
mov
pop
mov
jp
mov
mov
cmpsl
roll
sub
sbb
push
mov
mov
out
shlb
xlat
add
sbb
adc
or
xor
ret
sub
pop
cltd
sub
loop
fld
mov
xchg
mov
movsb
cmpsb
ss
push
sbb
push
enter
loop
jecxz
xor
xchg
adc
rclb
cwtl
and
jbe
fdivr
pop
fcmovb
sub
sti
mov
jmp
out
mov
add
fisttpll
sar
pop
jmp
hlt
dec
mov
cmp
jmp
sahf
mov
mov
push
fnstenv
out
add
fisttpl
push
inc
jns
lcall
pop
jg
roll
out
inc
ret
movb
sbb
subl
lock
mov
mov
cmp
paddb
in
aam
jmp
xor
cwtl
add
fnstsw
push
inc
aas
jae
bound
pop
pusha
jae
push
push
or
das
ds
push
mov
pop
or
and
sbb
stos
sub
push
pop
lret
xlat
fsubl
xor
dec
inc
bound
jo
out
leave
mov
pop
cwtl
rorl
xor
movsb
out
addr16
lahf
sub
cli
jns
js
dec
iret
push
mov
jmp
daa
int
pop
mov
mov
inc
mov
push
jl
loop
insl
push
cmp
and
ficoml
push
jmp
push
pop
imul
xchg
jns
mov
gs
jb
xor
rcrl
push
or
insb
pop
loopne
into
mov
ljmp
icebp
and
mov
add
inc
or
jle
fisttpl
lret
push
jno
rcrl
mov
jo
jae
add
jno
jae
cmp
mov
bnd
fistps
push
sbb
pop
ret
fidivl
xor
pop
in
xchg
frstor
mov
repz
addb
js
dec
std
enter
jg
cmpsl
sbb
dec
mov
movsb
mov
int3
enter
dec
cmc
add
and
or
xor
scas
fwait
fwait
adc
rcr
push
jg
push
adc
inc
enter
fwait
xchg
cmp
push
jmp
xchg
or
xchg
out
sub
clc
mov
cmp
rcl
inc
cmpsb
add
inc
in
mov
stc
push
daa
popa
gs
and
mov
xchg
into
mov
adc
nop
xlat
mov
daa
mov
test
dec
sti
out
scas
push
add
iret
imul
aad
adcb
loope
pop
xor
push
pop
mov
lret
or
xchg
repz
mov
and
addr16
aaa
das
adc
sub
jnp
sub
lahf
popa
pop
int3
into
hlt
inc
aaa
mov
enter
repz
stc
fcomps
jno
adc
std
es
and
adc
mov
cld
xor
mov
dec
pop
shlb
push
out
push
jne
sub
repnz
jnp
jne
enter
scas
mov
jo
mov
xchg
in
in
leave
gs
mov
lea
mov
jmp
out
aas
cmp
inc
adc
and
lret
cli
jnp
dec
mov
or
xor
jg
xchg
repz
mov
fwait
lds
fstl
pushf
mov
cli
daa
push
push
cmpsl
sub
aam
test
nop
test
les
xor
repz
mov
cli
and
mov
pushf
lea
jnp
inc
test
pop
xchg
popa
fldl
cmp
or
scas
rol
ret
jnp
cmpsb
dec
int
aad
lahf
pushf
sbb
mov
int3
sub
pop
adc
add
jg
lods
pusha
cld
sbb
out
lods
pop
ljmp
loope
fsubl
add
ror
insb
xchg
out
mov
les
adc
and
mov
pop
mov
dec
out
popf
int3
outsl
outsl
inc
xchg
cmp
add
in
cmp
xor
dec
movsb
lds
adc
dec
popl
mov
mov
cmp
into
lds
std
aas
mov
jnp
xchg
xchg
in
mov
or
out
stc
jg
fs
xor
mov
sar
add
lahf
test
out
mov
invd
xchg
ret
inc
sub
cmpsb
fwait
mov
jmp
lods
fwait
aam
fldcw
sbb
dec
mov
xor
rep
or
pop
cmovg
xchg
xor
adc
out
cli
or
aad
jbe
push
and
lock
cmp
loop
dec
sub
xlat
mov
js
cmp
mov
insl
rcr
mov
adc
ds
xorl
or
xchg
stos
push
int3
out
jo
iret
cmp
mov
jle
mov
testb
cmp
insl
xor
mov
mov
xor
xchg
add
enter
xchg
mov
ljmp
dec
or
pop
or
dec
mov
add
sub
mov
aam
sub
mov
decl
nop
repz
aad
out
inc
mov
add
xor
xor
dec
loopne
pushf
stos
nop
ss
out
and
xor
movsb
cli
jp
add
fwait
enter
test
or
pop
leave
data16
mov
xchg
push
add
xchg
cwtl
mov
mov
flds
add
jo
fimuls
sub
sub
in
pop
scas
movsb
jge
daa
shl
mov
add
pop
adc
inc
test
mov
imul
xchg
test
test
push
fistl
pop
add
insl
inc
push
cmc
dec
cmp
movsb
jg
sarl
outsb
inc
mov
imul
hlt
and
and
mov
and
aas
or
xorb
loopne
and
movsl
sbb
mov
push
pop
movsb
dec
xchg
mov
pop
ljmp
push
pop
fs
pop
mov
into
push
lods
lahf
lock
mov
mov
fs
inc
fwait
repz
insl
fiaddl
fwait
sahf
mov
cltd
xchg
push
inc
movsl
in
movsl
push
mov
iret
or
pop
fistpll
pop
xchg
aam
cmp
out
cld
mov
sub
sbb
loope
pop
jo
ja
in
sbb
sti
add
clc
mov
iret
fsubrl
pop
call
clc
jne
into
fucomp
in
ret
cmp
imul
scas
loop
jo
inc
jae
repz
jg
ficoms
mov
dec
out
xchg
pusha
fidivrl
mov
sub
mov
rorb
ret
subb
jae
xor
stos
in
cmp
mov
cmp
in
and
or
out
das
imul
push
sahf
pop
sub
cmp
stos
loopne,pt
fs
xor
test
daa
pop
inc
aam
add
xlat
add
popf
xchg
lods
popa
mov
or
dec
ffreep
dec
xchg
pop
insb
movsl
mov
nop
cld
mov
or
popa
les
adc
into
adc
pushf
pop
sti
and
add
jmp
ss
stos
xchg
push
fcoms
add
jge
imul
test
popf
adc
sbb
mov
and
shl
fs
test
push
fisttpll
add
sub
cmpsb
mull
sub
idivl
sbb
shll
sti
outsl
adc
push
fildl
sahf
jl
dec
adcl
popa
daa
mov
mov
jb
out
das
lcall
pusha
les
xor
xchg
xchg
mov
mov
ror
adc
push
jo
dec
lods
sub
cmp
push
sbb
mov
or
es
cmp
pop
std
adc
mov
push
aad
imul
and
mov
jge
fistpl
pop
and
lods
loope
or
fimuls
lock
sahf
mov
daa
sbb
xor
adc
fwait
jmp
mov
imul
loope
mov
lods
inc
push
test
loope
xchg
adc
sub
push
enter
sub
stos
repnz
jge
pusha
sbb
inc
cmp
aam
mov
repnz
insb
ss
aaa
add
jmp
ja
push
sub
mov
mov
imulb
int3
fcoms
pop
pop
rep
jns
test
mov
lret
fdivrl
cmc
jmp
arpl
jno
aaa
push
dec
lcall
cld
out
test
dec
call
inc
lret
push
aaa
loope
sub
fdivrs
leave
aaa
outsb
cltd
mov
sub
fdiv
push
xor
jmp
cmpsl
fbstp
test
cmp
loope
movsl
stos
jle
jle
xchg
sub
sub
and
cmp
push
mov
test
mov
loopne
and
dec
movsl
inc
ljmp
shll
mov
ja,pt
pop
mov
fldl
shlb
lods
lods
mov
test
fimull
mov
add
pop
dec
ja
pop
jo
in
and
dec
inc
xchg
mov
std
leave
sbb
add
pop
jp
mov
or
push
and
mov
stos
adc
fidivrs
test
push
aam
imul
fsubrl
mov
imul
dec
jo
vphaddwq
bswap
insl
push
fldt
sahf
inc
adc
rorb
cmp
push
xor
pop
xlat
and
clc
loopne
fists
xchg
pop
pop
mov
jmp
inc
ficoml
hlt
daa
fwait
sbb
push
push
imull
adc
mov
movsl
lods
add
les
aas
jnp
fsubs
add
in
test
std
fimuls
aad
mov
sahf
push
popf
es
gs
pop
loope
adc
mov
paddd
sub
shl
sahf
fwait
idivl
nop
imul
fs
xor
pushf
sub
cmpb
cmp
mov
adcb
outsl
repnz
xlat
sbb
shr
push
scas
sbb
orl
xchg
jecxz
add
fwait
xchg
jmp
xchg
fcom
jge
adc
xchg
pop
mov
sub
addr16
in
and
jge
loope
scas
jp
cltd
dec
sub
fdivrs
addr16
jb
jo
data16
cmp
jb
jbe
cmp
ds
jnp
out
jg
add
leave
mov
imul
pop
dec
jmp
aaa
out
out
fcomi
fists
daa
cmpsb
fwait
push
lods
popf
mov
clc
mov
xchg
xchg
pop
add
repnz
outsl
xor
stos
inc
pop
lret
pop
int3
scas
popf
mull
pushw
insl
imul
xor
loope
dec
movsl
lret
mov
adc
jl
pop
aad
rcl
popl
stc
mov
aas
inc
fistpll
dec
inc
scas
lahf
mov
push
popa
and
lea
stc
xchg
repz
dec
movsl
repnz
add
push
movsb
adc
popa
out
lods
sub
das
fwait
mov
jmp
scas
cmp
mov
inc
push
sbb
mov
push
dec
adc
sub
call
cmp
pop
or
out
jns
or
int3
xorb
add
sar
movsb
and
mov
jb
inc
cmpsb
cmp
inc
fs
jne
out
test
sbb
into
cmp
rcll
sbb
jl
cld
pop
mov
pop
push
add
int3
adc
pushf
clc
test
in
xchg
pop
push
test
andl
and
inc
mov
jnp
test
cmp
xchg
adc
sub
mov
aas
xor
jl
outsb
jp
minps
mov
lcall
or
push
stos
cmpsb
enter
jbe
mov
lret
mov
pusha
popa
pop
aas
icebp
loopne
cmp
push
push
push
cmp
jl
dec
add
clc
pusha
cmp
push
pop
mov
and
leave
je
daa
xchg
cmp
daa
and
xchg
aam
cld
lods
sub
jno
ja
in
rcrl
mov
adc
xor
test
popf
mov
xlat
cmp
pusha
push
daa
fdivs
mov
rorl
pusha
repz
and
mov
adc
pop
or
mov
push
push
jae
pop
push
shrl
and
inc
movsb
xchg
or
push
mov
lods
test
pop
lods
ds
xchg
jge
pop
mov
mov
iret
xchg
sbb
inc
insl
mov
clc
fnstcw
int
push
insb
lea
pop
lret
popa
mov
int
xlat
xchg
sbb
ljmp
stos
push
lahf
jg
jg
outsl
rolb
dec
jl
jge
jmp
mov
mov
insb
into
cltd
mov
cmp
pop
xchg
pusha
adc
cld
add
pop
movsb
sbb
shlb
decl
stos
popf
fs
mov
popa
shrl
xorb
int3
jmp
sbb
mov
add
jo
add
in
jmp
and
lret
xchg
notl
cltd
mov
jns
and
adc
pop
nop
xor
sub
add
nop
out
ret
fwait
aaa
jns
or
jmp
push
out
xchg
std
jne
decb
xor
cmpsb
jg
mov
cmp
pop
mov
repnz
lds
movsb
loope
adc
cmpsl
push
fdivl
jno
mov
out
pop
sahf
icebp
sub
xchg
mov
addr16
mov
loope
push
xchg
push
push
scas
mov
cltd
and
xlat
pop
test
jne
and
inc
cmpsl
cmp
sbb
mov
mov
stc
pop
mov
outsb
mov
movsl
xchg
imul
test
push
int3
dec
gs
xor
and
mov
xchg
mov
call
mov
push
ret
std
ret
mov
clc
out
ss
pop
js
adc
movsb
sub
pop
xor
and
sahf
ljmp
dec
jle
mov
scas
fcmovne
lock
fwait
leave
jo
fcmovu
sub
sub
mov
out
incl
loopne
clc
js
mov
fs
mov
pop
and
andl
and
xchg
mov
bound
call
pushf
xor
insl
out
ss
sbb
inc
dec
int
dec
ret
jecxz
scas
cmp
lahf
fsts
cmc
loope
daa
imul
push
repz
mov
outsb
push
inc
cmp
scas
cmp
push
bound
out
add
and
and
repnz
jo
xchg
push
push
xor
or
jp
lret
fwait
xchg
jp
fadds
mov
leave
xchg
jnp
sub
sub
insb
out
adc
lret
cmp
sub
les
das
jecxz
cmc
xlat
lods
mov
xchg
fdivr
stos
js
sbb
push
sbb
cmpsl
mov
mov
sbb
push
inc
xchg
sub
lret
mov
je
inc
in
fstpt
lods
out
fsubp
cld
aaa
pop
mov
push
ds
xor
jmp
mov
sbb
andl
or
sub
movsl
ds
fs
aad
xchg
mov
sbb
dec
out
imul
sub
movsb
and
nop
fistl
sbb
test
xor
mov
fiadds
aas
ljmp
pop
inc
add
lea
push
cwtl
popf
or
and
mov
sub
call
sub
sub
lahf
push
stos
mov
sbbl
dec
scas
ret
fdiv
sti
xor
nop
jae
pop
mov
dec
icebp
adc
es
jle
dec
scas
pop
scas
xor
lret
or
dec
xor
fldlg2
mov
loopne
pusha
mov
add
cmp
add
push
cld
loope
xor
add
rcrl
and
add
cmp
jbe
sub
and
jno
fs
adc
es
sub
add
push
jnp
push
ss
xchg
pop
mov
cmp
out
push
mov
dec
jne
leave
lahf
pop
sahf
pop
and
sub
sub
inc
inc
sbbb
mov
xor
fld
push
jb
les
or
out
push
fmul
roll
addb
gs
sub
push
aad
ficoml
hlt
pop
cmp
aas
iret
push
leave
in
sub
das
subb
dec
pop
mov
xchg
std
jo
iret
nop
aad
sub
xchg
or
es
jns
xor
out
movb
lahf
or
insl
sahf
sub
fs
fidivrs
sbb
mov
scas
mov
jmp
ljmp
sti
xor
adc
fstpl
adc
js
push
int
mov
adc
jno
push
adc
repnz
daa
loope
jge
rep
frstor
stos
inc
sbb
cmpsb
and
xor
xchg
cmp
js
jecxz
test
or
clc
minps
xchg
aad
cmpsb
cmp
aam
adc
cmp
mov
lret
ljmp
aaa
int3
fsubrl
push
sub
icebp
ljmp
jmp
sub
insl
inc
xor
push
or
or
cmpl
vpsrldq
cmp
popf
cmpsb
ffreep
in
cmpsl
cmpsl
cwtl
xchg
nop
lods
int3
dec
adc
mov
jns
mov
jmp
pop
and
xchg
push
push
in
movsl
cmp
jmp
push
cmp
orl
dec
pop
adc
cmp
mov
jns
icebp
fisubl
cmp
mov
xchg
movsl
xchg
rcl
lahf
mov
loope
mov
add
mov
cmp
push
fcomi
fidivrl
std
subl
fwait
dec
mov
movsb
mov
aas
xor
mov
pop
rorb
lds
xor
xor
push
dec
arpl
mov
fbstp
pop
pusha
fadds
pushf
js
jne
adc
test
pop
mov
adc
aam
addb
sti
jbe
pusha
mov
adc
decl
jbe
clc
pop
lret
pop
xchg
in
ljmp
and
mov
mov
and
add
or
outsb
dec
and
pop
ja
cmc
jmp
xor
roll
mov
add
fs
pushf
mov
mov
out
das
shl
test
xlat
cltd
sbb
stos
sub
ja
mov
dec
fs
xlat
sahf
push
nop
mov
and
outsl
jmp
rcrl
lahf
push
xchg
mov
lock
and
lcall
fstpl
pop
inc
dec
inc
into
push
add
pop
inc
rorl
insb
fnstsw
jge
or
push
clc
fisttpll
sbb
and
xchg
sub
int
mov
inc
add
lcall
lods
xchg
mov
push
or
pop
inc
out
mov
add
into
xor
out
or
aaa
fdiv
and
mov
pushf
sbb
stos
and
lock
imull
fs
jmp
rclb
int
iret
setne
push
mov
repz
adc
data16
pop
in
mov
inc
lds
xchg
cmpsl
mov
push
fcompl
or
mov
popa
jb
sbb
je
cmpsl
ljmp
push
push
cmc
adc
adc
pop
pop
popa
test
outsl
inc
inc
lahf
lret
jns
push
lods
shll
rclb
or
mov
mov
insl
or
divl
sbb
add
jbe
arpl
test
cmp
adc
cmpsl
xchg
lea
push
test
lea
mov
repnz
stos
inc
je
push
les
js
sti
es
xor
push
mov
shl
test
push
movsl
and
fwait
mov
dec
faddp
dec
jno
ret
jno
sbb
stos
jge
popf
mov
cmc
pop
pop
mov
rcll
mov
mov
inc
add
xor
stc
dec
jmp
and
mov
pop
imul
js
jno
mov
push
out
jne
insl
add
mov
mov
dec
shr
add
inc
pop
test
pushf
push
or
mov
aam
mov
sahf
mov
in
in
divb
fsubp
mov
jno
push
fnstcw
clc
popl
inc
into
fsub
adc
idiv
sub
sahf
scas
jno
adc
pushw
adc
cs
adc
jp
mov
sbb
ret
arpl
or
push
xchg
lret
inc
push
das
pop
jge
push
adc
push
ljmp
pop
xchg
bound
jg
cmp
ret
push
cmp
add
xchg
rolb
add
push
xor
dec
lods
ss
pop
fbstp
pushf
lret
and
and
negl
xchg
int
and
push
or
cmp
fstl
cmp
rclb
mov
aas
xchg
dec
add
sarl
dec
pop
xor
imul
and
fcoms
cmp
test
or
jb
sub
pop
pop
cmp
mov
pop
in
add
add
push
mov
adc
out
test
xchg
aam
popf
repz
mov
mov
rclb
jg
add
sub
daa
rorl
movsl
icebp
iret
mov
lret
mov
mov
inc
sbb
test
xchg
push
mov
test
lods
push
repz
mov
lret
scas
lahf
sub
cltd
iret
mov
jl
std
ffree
lock
lret
mov
mov
sbb
mov
add
sub
xlat
lods
mov
and
out
jle
add
mov
pop
iret
push
inc
jecxz
sarl
sub
add
testb
mov
add
dec
lcall
xchg
sub
jp
gs
adc
push
xchg
scas
fiaddl
push
nop
dec
ror
imul
xchg
leave
cltd
xchg
addl
jae
and
sub
adc
idivb
cmp
repnz
sti
aaa
test
in
ret
insb
mov
in
sbb
xor
fsubs
mov
or
loope
out
pop
in
test
into
dec
mov
in
and
cmpsl
or
pop
and
and
mov
adc
ja
xor
fscale
orl
mov
dec
adc
jno
jg
scas
push
xchg
fisttpl
gs
jmp
adc
clc
xchg
aas
aad
jp
incb
cmpsb
add
push
or
bound
sahf
rcrl
mov
icebp
cs
push
mov
xchg
sub
popf
divb
xrelease
mov
std
aad
out
cmp
xchg
in
push
dec
inc
out
mov
sub
pop
insl
dec
imul
and
enter
jne
mov
dec
andb
fwait
jl
rcr
xchg
fidivrs
push
sub
cli
and
mov
int
push
dec
mov
pop
lods
es
and
cld
jb
das
js
rcll
xchg
xor
ljmp
push
xor
nop
mov
out
bound
insl
sti
mov
mov
sbb
inc
imul
cmp
push
inc
add
jecxz
in
adc
adc
mov
out
cmpsl
fldl
or
loop
loopne
ljmp
loope
and
or
push
inc
jge
xlat
test
or
imul
in
inc
mov
testl
loopne
push
in
sub
std
out
add
aas
mov
daa
out
xchg
jl
mov
mov
mov
mov
xor
add
adc
adc
mov
cld
dec
xlat
mov
lret
cltd
sub
scas
filds
into
and
insl
xchg
mov
and
pop
jecxz
dec
ja
pusha
popa
mov
xchg
push
cmp
fildl
pop
addr16
mov
test
out
std
dec
aad
mov
push
cwtl
mov
jno
push
inc
nop
imul
shll
mov
mov
test
jmp
pusha
std
and
mov
ds
and
lock
mov
ficoms
mov
pop
xchg
dec
iret
mov
xlat
lods
lock
rol
rorl
push
out
cmpsb
fwait
loopne
pminub
sbb
test
sbb
icebp
imul
cltd
pop
xor
int
adc
hlt
mov
push
fldcw
dec
sbb
lods
sbb
fistps
jb
jbe
dec
push
xor
inc
pusha
or
frstor
div
int3
fmull
fcompl
in
push
sub
jle,pn
sbbl
scas
jg
dec
pop
data16
xor
xchg
sbb
cmpsl
ret
leave
sub
mov
adc
gs
int3
leave
aaa
cmp
sub
pop
out
push
mov
mov
cmc
dec
xor
sarb
cmc
popf
add
mov
inc
jp
adc
cltd
jnp
out
stc
cmpb
push
jo
inc
movsl
cs
lds
data16
aam
cmp
adc
fbstp
pop
inc
int3
stos
sub
mov
ret
mov
mov
aaa
scas
inc
mov
mov
jnp
or
stos
sub
mov
sub
fdivrs
pop
gs
inc
xor
in
cmp
mov
mov
fs
jb
lock
fs
mov
mov
ds
push
arpl
and
imul
loop
pop
push
sbb
xchg
or
arpl
jne
arpl
lods
xchg
xlat
shr
add
adc
shlb
adcl
leave
ljmp
call
push
push
mov
in
and
mov
cmp
adcb
stos
gs
and
xchg
add
out
popa
leave
or
in
pop
push
pop
add
hlt
and
cwtl
adc
or
insl
dec
cmpsl
mov
pop
inc
mov
sarl
hlt
sti
cmc
addb
xchg
mov
jne
js
mov
imul
imul
arpl
adc
cmp
jbe
lods
dec
or
jl
pop
jnp
xor
mov
sets
push
dec
push
std
icebp
lcall
leave
cmp
inc
out
fdivrs
cltd
xchg
pop
mov
addr16
mov
adc
push
and
mov
shrb
cmp
loop
ficompl
cmp
addb
mov
sbb
xchg
or
or
cmpsb
xor
or
mov
adc
pop
push
mov
and
jg
adc
sarl
mov
sbbl
mov
popa
and
cmp
je
cmp
push
leave
js
movsb
push
mov
jecxz
cltd
adcl
jl
mov
lea
cltd
arpl
arpl
jl
ret
fcmovb
int3
es
and
dec
sahf
ljmp
shrl
mov
clc
inc
xchg
outsl
ss
mov
xchg
arpl
enter
inc
call
push
pop
push
pop
mov
nop
les
add
jne
add
or
ljmp
mov
mov
lahf
xchg
mov
shrb
pop
inc
jne
inc
addb
xor
out
lret
push
dec
lds
in
xchg
adc
mov
out
cmpsl
and
inc
inc
dec
jp
inc
mov
push
iret
sahf
push
pop
xor
mov
and
inc
mov
test
mul
test
sub
into
mov
pop
sbb
and
fld
shlb
in
pop
sbb
pushf
sbb
cmp
imulb
jg
pop
mov
pusha
jge
mov
sub
push
bound
xor
mov
add
into
adc
int
call
testb
inc
inc
mov
dec
test
movsl
sbb
fistpll
fst
mov
stc
cli
or
pop
test
dec
fstpt
call
mov
fnstcw
popa
inc
or
sbb
pop
push
mov
mov
xor
test
lret
mov
mov
or
mov
sub
inc
ret
lcall
add
std
cltd
enter
inc
push
cmc
shlb
in
pop
push
loop
pop
cltd
loop
popa
cli
cmpsl
data16
orl
insb
mov
test
jecxz
mov
push
dec
call
pushf
iret
cli
loop
sbb
insl
mov
in
into
inc
sti
js
addr16
mov
mov
push
adc
mov
lds
xor
push
ljmp
mov
cmp
fs
cltd
jl
adc
dec
jno
push
or
fmuls
dec
loop
or
xor
xchg
add
jns
lods
test
cmp
test
sub
int
jae
add
movsb
inc
ret
jg
das
xchg
jo
mov
aas
mov
outsl
das
iret
jns
pop
jno
ss
dec
ss
in
xor
push
js
mov
mov
test
jne
enter
das
ficoml
xlat
out
xchg
shlb
push
sahf
jnp
ret
bound
js
push
xchg
adc
push
data16
jp
int3
test
or
mov
push
sbb
fdiv
sbb
out
sub
xchg
inc
ret
mov
add
and
and
fldl
ljmp
subb
orb
icebp
add
cli
std
les
movsl
jbe
sub
or
and
in
xor
xor
cmc
daa
jae
iret
sub
jo
cmova
das
dec
or
mov
sti
cltd
xchg
push
dec
jnp
ja
fmuls
in
in
pop
adc
into
inc
dec
lahf
pop
test
nop
insl
dec
pop
out
push
push
push
mov
mov
inc
or
mov
xor
fdivl
push
ss
xor
jne
xchg
push
lods
loopne
or
out
repz
movsl
test
mov
pop
push
loop
js
push
add
popa
jne
adc
lds
and
cmpsb
popl
push
adc
aaa
pop
aad
movsl
loop
sub
fsub
aad
inc
xor
orl
lret
push
mov
inc
push
sbb
iret
and
mov
cmp
or
sbb
push
mov
mov
pop
loope
or
and
add
std
jb
leave
imul
adc
push
inc
push
xlat
sub
pusha
lock
or
cltd
jle
sub
aad
add
fidivs
mov
call
mov
imul
cmp
xor
ss
inc
bound
adcl
lock
push
pop
push
sti
daa
pop
sti
adc
pop
loope
ja
pop
or
cmp
fildl
push
loope
cmp
cmc
pop
test
fwait
testb
push
jbe
loopne
repnz
xchg
scas
popa
decl
pop
popa
aad
dec
xchg
int3
pop
and
cmp
mov
loop
popa
cmpsl
in
mov
pop
push
mov
and
data16
popl
std
test
push
xchg
inc
dec
jbe
adc
imul
stc
cmc
sub
jl
lret
insb
inc
xchg
push
xchg
sub
sub
inc
pop
sbb
lret
mov
mov
xchg
outsl
mov
sub
movsl
out
and
xchg
into
jge
in
adc
add
mov
test
dec
popf
aaa
jb
lahf
mov
scas
xchg
xchg
inc
dec
repnz
stc
jnp
xchg
lods
bound
lods
enter
movsb
add
mov
cwtl
pop
call
es
rcr
xor
jle
mov
ss
dec
movsl
cmp
mov
sbb
lods
sub
push
data16
call
in
mov
lods
test
add
mov
mov
loop
loop
xor
and
out
lds
insl
scas
dec
xor
sub
xchg
addr16
add
push
mov
xor
out
push
dec
mov
pop
pusha
dec
rolb
cmp
jo
jmp
jle
xor
mov
jnp
jg
repnz
ja
xor
out
push
inc
sbb
aam
sbb
or
cmc
mov
faddl
aas
push
and
mov
dec
fildll
xchg
xchg
loop
sub
lds
jo
push
mov
adc
pop
push
rol
cmp
mov
pop
adc
push
or
mov
in
ljmp
lar
cli
adc
popa
mov
adc
sbb
cmpsl
mov
imul
jle
xor
and
mov
push
mov
in
scas
int
xor
sub
lock
popa
in
jnp
mov
mov
test
lods
jns
or
push
and
jne
insb
stos
pop
aaa
ret
mov
imul
mov
out
xchg
sahf
pop
dec
mov
push
and
and
inc
push
cld
xor
fwait
sub
js
xchg
sub
add
idiv
mov
loope
pushf
adcb
mov
jae
loopne
jl
in
out
jecxz
adc
xchg
popf
addr16
nop
icebp
mov
lahf
ret
sti
pop
das
flds
arpl
pop
sub
xchg
or
pop
inc
es
jg
insb
mov
movsb
add
mov
fsub
sbb
mov
mov
and
mov
cwtl
add
lods
sbb
addr16
jae
and
test
sbb
mov
lret
xchg
call
ret
popf
add
inc
mov
inc
fiadds
dec
push
pusha
das
imulb
cld
ret
adc
or
mov
lods
jle
add
mov
mov
fisttpll
and
insl
or
andb
fwait
xchg
fcmove
js
mov
or
loope
adc
pop
shlb
jle
out
mov
mov
jp
dec
imull
push
pop
cmp
jmp
lods
or
mov
mov
pop
xchg
xor
dec
imul
out
mov
subl
es
xchg
sub
jecxz,pt
aam
add
mov
stc
xchg
cwtl
adc
lahf
or
add
mov
sbb
mov
pop
icebp
cld
in
mov
data16
push
push
sub
mov
cwtl
shr
das
ffree
add
enter
mov
mov
jb
jo
cwtl
jbe
push
xlat
push
jo
mov
pushf
imul
mov
pop
and
loop
adc
loop
loop
xor
pop
icebp
hlt
in
ss
mov
sub
dec
fistl
clc
mov
into
clc
push
dec
pop
les
clc
into
lods
pop
xor
call
ja
sti
inc
pop
ss
in
lds
mov
daa
lods
dec
std
add
movsb
testl
es
mov
pusha
and
xor
adc
sbb
mov
out
mov
enter
add
loope
adc
push
inc
pop
in
pop
pop
dec
mov
call
push
pop
movsl
pusha
cmp
mov
and
loopne
dec
mov
sbb
jecxz
mov
push
push
push
and
adc
cli
or
test
enter
mov
mov
inc
sbb
das
int3
cmp
pop
or
sbb
mov
cmp
mov
xchg
enter
lock
adc
lahf
add
dec
inc
xorl
jae
add
jge
sub
dec
cli
lods
inc
push
stos
loopne
cmpsl
jnp
jae
lret
and
push
mov
sub
in
jns
push
sbb
mov
repnz
or
scas
ds
int3
fwait
repz
ljmp
mov
push
jbe
loope
or
lods
mov
mov
into
jae
xor
loop
xor
imulb
xor
mov
jecxz
jnp
sbb
lret
out
lahf
in
xchg
adc
cld
inc
adc
jp
push
pop
rclb
mov
adc
iret
fcompl
shrl
add
push
add
mov
ljmp
lret
in
push
fmull
adc
stc
daa
sub
sub
popa
sbb
push
daa
mov
inc
push
adc
repnz
and
stc
xchg
outsl
out
cld
stos
sub
mov
xor
inc
cmp
mov
pop
cs
neg
test
test
loop
je
mov
or
inc
mov
pop
stos
negb
in
sbb
cmpsl
mov
mov
cltd
ja
scas
mov
jb
movsb
mov
ret
aad
nop
cld
adc
jp
mov
jge
mov
fiaddl
or
push
xchg
mov
inc
inc
xchg
add
push
insb
adc
adc
push
jbe
ret
push
or
sbb
xchg
cld
and
test
or
push
hlt
stc
xor
stos
sub
mov
pusha
mov
lret
cmp
inc
push
jo
mov
mov
data16
movb
repnz
pop
inc
mov
xchg
fists
dec
mov
mov
test
pop
sbb
out
into
mov
std
pop
sbb
mov
dec
inc
jnp
push
mov
dec
push
mov
mov
cmp
mov
nop
lea
push
push
or
rcrb
jo
out
mov
dec
daa
adc
sbb
bound
jecxz
cmpsl
xor
xchg
ret
jae
pop
les
mov
cltd
cmp
cmp
dec
into
aas
lds
and
dec
and
out
fdivrs
push
orb
nop
jge
sbb
scas
and
outsl
mov
jg
outsb
dec
ss
add
mov
mov
iretw
jl
xchg
xor
mov
mov
mov
xchg
in
fadds
test
push
adc
aad
add
in
sub
mov
cmc
mov
and
mov
xor
lds
sub
lret
outsl
arpl
into
movsb
ret
hlt
jne
mov
scas
clc
or
fildl
in
ds
mov
adc
jnp
fbld
pop
imul
mov
loop
pop
jbe
out
mov
in
arpl
jl
mov
xor
daa
into
insb
ss
lret
xor
inc
jge
sbb
sub
insl
cli
pop
pop
ja
sahf
aam
or
icebp
test
sub
in
inc
pop
fmuls
sub
jae
jecxz
in
mul
dec
jae
jge
xchg
stos
sbb
mov
pop
ds
mov
ljmp
roll
xchg
xor
std
out
cwtl
xchg
pop
adc
and
push
xchg
jecxz
and
mov
xchg
andl
lds
aas
or
mov
dec
rcrb
and
jo
push
je
adc
adc
push
test
adc
sbb
add
mov
and
cmpsl
cmpsb
ret
or
inc
loope
stos
insl
mov
jo
pop
adc
xchg
inc
mov
scas
xor
hlt
out
scas
call
insl
mov
push
fwait
shll
mov
mov
mov
inc
sub
inc
mov
sub
inc
push
cmp
sub
or
push
push
outsl
dec
mov
fistps
lret
mov
pop
xor
ds
pop
divl
sbb
enter
shl
movsl
pusha
aad
push
mov
inc
cs
icebp
fwait
xchg
push
jbe
pusha
lock
mov
or
ljmp
cs
pop
in
imul
dec
sbb
push
sub
les
xchg
and
xlat
or
ja
xchg
push
mov
std
fnstsw
pop
insl
push
dec
lea
in
cmp
sbb
jmp
pushl
add
je
ret
mov
mov
lods
rcr
dec
loop
mov
fsubrs
pop
insb
cmp
sub
gs
mov
arpl
insl
sbb
mov
add
push
fsubr
cld
enter
loop
xor
jno
mov
outsb
pop
push
pop
jecxz
fiadds
ds
xchg
xor
fidivrl
std
or
shr
int
ret
pop
lods
push
xchg
dec
lods
or
xchg
push
cmpsb
adc
lret
bound
int3
or
fcmovnbe
xlat
inc
mov
test
movsl
cmp
push
flds
orb
in
dec
pop
mov
pushf
loop
fwait
loopne
mov
dec
int3
clc
call
lods
popf
or
imul
xchg
and
test
loope
cmp
xchg
iret
push
std
ficompl
movsl
roll
mov
push
movsl
mov
pop
out
mov
push
mov
sbb
xorl
pop
push
mov
arpl
mov
sbb
test
popa
aaa
mov
and
frstor
xchg
in
addr16
jle
add
inc
and
int3
cmp
jge
lret
outsb
imul
jnp
rclb
mov
shlb
dec
mov
lds
push
push
or
jle
dec
cmp
lds
loopne
dec
fcomps
xor
dec
cmpsb
sub
mov
pop
addr16
mov
aas
or
into
mov
pop
jns
sarb
cmp
inc
push
push
adc
jg
xchg
adc
fwait
pop
inc
jbe
xchg
stos
pop
mov
in
cmp
jne
hlt
gs
ss
out
fs
je
sub
ja
mov
push
sub
add
push
mov
mov
xlat
dec
or
xchg
enter
cs
jb
mov
sub
repz
mov
lods
outsl
cmp
int
jl
notl
adc
lcall
cvtdq2ps
popa
adc
fisttpll
cld
mov
sarl
imul
pop
mov
je
cmp
mov
inc
sbb
sbb
adc
inc
mov
add
outsb
in
mov
push
in
and
lods
cmpsb
cmpsl
addl
jnp
lods
cmp
cmp
fisttps
lcall
adc
add
adc
pop
out
int
mov
inc
clc
sti
pop
shl
std
inc
jb
ret
mov
out
ljmp
dec
scas
xchg
add
and
mov
bnd
mov
sahf
or
ss
lret
cmp
das
and
lret
xor
jae
call
mov
aas
sahf
stc
arpl
out
mov
pop
mov
cmp
mov
cmpsb
stos
jmp
jns
popa
add
das
scas
mov
je
test
push
push
fdivr
pop
outsb
dec
popf
inc
mov
fiaddl
jne
xchg
negb
xchg
pop
mov
push
jecxz
mov
lock
mov
cmpsl
leave
pushf
mov
dec
cmp
xor
inc
leave
mull
subb
lds
xor
clc
push
cs
outsl
dec
mov
sub
sub
mov
sahf
and
data16
hlt
negl
addr16
inc
sub
das
in
outsl
jp
inc
mov
nop
test
imul
aam
push
fs
sbb
mov
aaa
shlb
es
ss
std
cmp
inc
lcall
or
fidivl
jge
dec
jecxz
out
insl
xor
or
and
popa
cmp
mov
lret
call
das
stc
iret
ret
aas
test
bound
pusha
jmp
and
call
insb
xchg
xchg
pop
adc
sbb
mov
idivl
aaa
stos
xchg
and
imul
test
xchg
cwtl
adc
sbb
pop
lcall
lods
push
mov
dec
pop
je
je
and
ljmp
jnp
pop
dec
inc
es
mov
inc
or
in
shrb
hlt
sbb
fsubr
cmpsl
out
pushf
pmaxsw
mov
repnz
andl
inc
loopne
loope
sar
mov
sub
jnp
add
dec
sub
fstpl
push
mov
ret
rcll
pushf
inc
jne
add
jge
dec
xchg
cmpsb
mov
pop
fwait
insl
test
cwtl
repnz
adc
add
mov
ja
adc
stos
bound
cld
neg
int3
popf
sahf
mov
pop
icebp
subl
push
shrb
push
aam
leave
inc
jle
outsb
ret
rorb
adc
push
push
jnp
mov
add
xchg
icebp
stos
inc
lahf
cmpsb
mov
aas
mov
clc
sub
in
inc
out
sub
adc
repnz
push
cmpl
push
movsl
rcrb
das
pop
fsubl
into
iret
dec
das
jge
into
scas
ret
imulb
loop
or
cwtl
cmc
jne
rcll
or
adc
ss
or
sub
xrelease
mov
mov
pop
adc
jns
out
sbb
dec
sbb
jmp
pop
dec
xchg
scas
pop
sub
lret
and
ja
scas
inc
ljmp
aas
cmp
push
mov
repnz
pushf
mov
sbb
add
pop
je
mov
outsl
outsb
lahf
mov
js
in
mov
xchg
fldt
js
lods
push
sub
lock
hlt
cmp
pop
add
std
adc
push
fdivr
mov
mov
jle
icebp
dec
scas
into
outsb
jle
sbb
loop
xchg
in
jle
inc
out
jno
mov
jp
ds
adc
mov
pop
cmp
call
idivb
add
push
push
dec
imulb
cltd
adc
out
sub
mov
mov
out
aaa
mov
test
sub
test
sti
push
lods
pop
outsb
jb
cmp
pop
jmp
ret
lea
enter
dec
pop
xchg
sbb
subb
sbb
xor
stos
xor
mov
push
dec
repz
and
sarl
push
sbb
push
xor
out
dec
xor
out
sbb
add
loop
cmp
ss
stos
jb
mov
sub
ds
movsb
popf
mov
xchg
sbb
jo
dec
int3
xchg
mov
loop
add
int
sub
sbb
repnz
jno
in
sbb
cwtl
push
pop
ss
into
jle
nopl
and
mov
outsl
cltd
push
clc
pop
filds
and
orb
lods
or
outsb
out
enter
sub
cmovl
jmp
lcall
lock
loop
cmp
iret
fiaddl
ljmp
cmp
outsb
sbb
and
mov
shrl
add
and
inc
pop
les
pop
inc
cmp
insb
stos
pop
in
loop
add
movsl
aas
add
jae
bound
mov
stos
das
ss
sbb
ror
leave
cmp
jmp
leave
sbb
rcrb
lods
int3
or
sbb
pop
jg
leave
pop
lds
lods
iret
sub
aas
lahf
jle
test
xchg
enter
insb
mov
test
lods
addr16
cltd
movsb
dec
aaa
add
xchg
incb
mov
aam
mov
in
lret
or
cmpsl
frstor
push
add
and
add
mov
movsb
movsb
jnp
push
mov
cmpsl
insl
fmull
jb
sbbb
mov
fbstp
sub
das
out
icebp
sahf
dec
mov
and
dec
aaa
inc
xor
enter
cmp
mov
xlat
mov
mov
shrb
fldl
iret
dec
nop
popf
lret
mov
xchg
fs
sti
dec
enter
mov
leave
ret
scas
pop
jnp
mov
arpl
in
in
arpl
arpl
filds
fistps
negb
jne
scas
lea
into
mov
push
add
xor
jp
pop
mov
push
cmp
and
mov
outsb
or
mov
sub
adcb
scas
int
push
pop
cmpb
push
clc
pop
add
stos
pop
stc
sbb
int
pushf
sti
imul
aam
xchg
aas
add
xor
or
or
lahf
in
adc
idivb
in
jo
enter
ja
rorl
test
lods
fcmovu
mov
pop
ljmp
mov
sub
gs
test
sub
enter
in
fs
jnp
and
adc
dec
push
pop
mov
fists
push
movsb
loope
sbb
je
pushf
leave
xchg
aaa
jmp
jns
jmp
dec
mov
push
inc
xor
ss
in
push
mov
xchg
sarb
popa
leave
xor
xorl
es
cmp
aad
xchg
sub
je
or
adc
jle
fdivs
dec
add
inc
fldenv
and
push
mov
sbb
lods
shll
and
popa
pop
inc
mov
and
xlat
addl
icebp
aam
lods
enter
sub
out
leave
xor
dec
xchg
int
ja
cmpsl
movsl
jge
mov
out
out
xchg
sarb
lret
push
pop
push
jo
push
pop
pop
lods
cmp
jmp
mov
lds
shrb
mov
add
fistpl
mov
lea
and
insb
jmp
js
out
add
pop
mov
fldcw
fidivs
lds
cmp
jg
out
cmpsb
jmp
xlat
mov
call
pop
fcmove
mov
notl
mov
pop
in
and
mov
imul
and
insb
push
aam
lahf
dec
scas
data16
jle
mov
inc
jmp
adc
fstpl
je
pushf
jne
jge
cmp
push
iret
push
fs
mov
fucom
ret
xlat
inc
mov
stos
je
mov
std
push
adc
fnstenv
ja
jl
ret
pop
cli
std
xchg
in
mov
mov
cmp
loope
stc
in
je
xchg
adc
dec
dec
scas
xchg
gs
mov
mov
jo
sub
mov
fidivrs
popa
rolb
imul
lcall
pusha
shl
cs
fs
pop
scas
clc
fldlg2
mov
ss
or
push
dec
call
pop
inc
push
inc
ret
push
outsl
roll
pop
rcr
cmp
xor
popf
lods
push
das
bsr
lret
imul
mov
pop
jno
test
lret
outsb
mov
icebp
in
xchg
dec
outsl
mov
hlt
stos
cmp
jnp
push
insl
jecxz
mov
fldl
cs
push
inc
push
sbb
jnp
mov
add
lds
outsl
lahf
decl
nop
dec
ret
mov
mov
sbb
mov
xor
lea
jns
and
and
ss
cltd
aad
xchg
inc
mov
dec
pop
daa
push
push
stc
aad
aaa
stc
or
xchg
mov
imul
lret
loop
arpl
cmp
cmp
in
mov
test
push
loop
inc
or
imul
in
jb
mov
int
mov
mov
lret
movsb
sub
outsb
adc
leave
xchg
and
repnz
push
jmp
sub
or
movsl
cmp
shlb
out
xlat
in
out
mov
movsl
sub
jg
sahf
gs
adc
cmc
int3
add
mov
sbb
cld
int3
push
cltd
pushf
dec
mov
test
fidivs
test
aad
rcrl
inc
mov
test
or
pop
or
xchg
insl
sbb
adc
push
and
cmp
cwtl
out
cs
mov
and
push
repz
scas
out
mov
pop
outsb
test
xor
mov
sbb
add
lcall
subl
add
imul
mov
push
addl
stc
dec
test
rcl
cmp
test
fisubrs
jbe
add
cmp
sbb
daa
scas
dec
mov
pop
add
mov
mov
leave
cmp
fst
icebp
leave
ja
negl
mov
push
ss
add
mov
mov
div
movsb
dec
xor
dec
xor
out
push
jl
xor
sub
and
ret
dec
fs
invd
and
jp
xchg
les
sub
or
dec
sbb
adc
popa
push
fptan
mov
adc
lods
movsl
test
movsb
test
cli
pop
sub
rolb
sbb
pop
daa
push
pop
pop
sub
out
add
mov
pop
add
je
dec
adc
mov
in
imul
les
push
cmp
icebp
repnz
leave
mov
sbb
pop
cmc
js
mov
loopne
pop
pop
mov
adc
in
insl
daa
adc
push
cli
mov
sbb
mov
or
xchg
out
and
xchg
add
jecxz
push
cwtl
pop
shrl
insb
test
ljmp
adc
fnsave
stos
or
lods
mov
leave
jns
fistl
push
lret
xlat
jns
dec
sbb
leave
mov
imul
test
icebp
test
ret
loopne
test
inc
lahf
pop
cld
sahf
sbb
loope
add
dec
out
inc
cmp
xor
add
dec
mov
rolb
mov
call
movsl
and
sub
adc
aam
addr16
add
mov
sbb
xlat
test
fists
and
sti
bound
aam
add
mov
ficoml
pusha
cwtl
sbb
repnz
incb
mov
dec
outsb
clc
jecxz
sti
imul
push
sahf
push
adc
aam
das
push
inc
sti
mov
cwtl
cmp
stos
aad
jnp
nop
out
xor
dec
jo
jle
mov
fimull
repz
dec
xchg
std
int3
pop
repnz
pop
in
jns
bound
mov
or
fdivrl
aas
fnstsw
outsb
mov
loopne
cmp
out
push
lret
mov
or
fisubrs
arpl
xchg
int3
repz
pop
fwait
loope
mov
jl
test
pop
adcl
mulb
mov
testl
cld
pop
jns
or
and
mov
push
loope
push
stos
mov
add
ds
shrb
iret
orb
xor
dec
pusha
adc
mov
mov
imul
mov
pop
data16
mov
jmp
mov
pop
clc
dec
repz
pop
xchg
pop
adcl
jne
mov
cmc
inc
sub
xchg
lcall
mov
mov
pop
sub
push
and
and
pop
adc
pop
mov
mov
lcall
lock
out
push
dec
scas
aas
stos
dec
mov
xchg
xchg
ja
mov
popf
mov
mov
cmp
mov
xor
push
stos
imul
mov
movsl
dec
push
xchg
and
mov
pop
cmp
push
scas
lods
fs
mov
lahf
jl
mov
test
fdivr
add
cmc
lods
xor
data16
adc
es
xor
icebp
xor
add
lock
sbbb
push
or
cs
in
or
int3
sbbl
clc
xchg
push
lds
clc
pushf
add
sbbb
test
push
adc
pop
pop
iret
gs
dec
sbb
out
adc
mov
aad
push
and
lds
scas
pop
ja
mov
ss
mov
movsb
sub
jnp
cmpb
cmp
hlt
shlb
add
dec
inc
sahf
lds
mov
insb
test
iret
mov
cs
sbb
jb
mov
jae
mov
ret
jo
cmpsl
xchg
or
inc
fwait
pop
jno
bound
jb
xchg
dec
iret
seto
dec
movsb
sahf
or
leave
sbb
or
rcrl
loop
add
out
jp
lret
pop
fcompl
mov
inc
je
fisttpll
repz
stos
imulb
sti
jb
sub
pop
mov
mov
arpl
mov
adc
mov
scas
lods
mov
dec
dec
push
pop
cmpsl
icebp
xchg
mov
test
div
mov
xchg
stos
sbb
xor
addr16
fcmovu
xchg
cs
out
out
ljmp
cwtl
lock
jo
push
push
jo
mov
cmp
cmp
stos
cld
and
repnz
pop
mov
cld
lods
scas
sbb
fmuls
sahf
lods
mov
insl
outsl
fwait
mov
jne
inc
insl
das
js
sbb
adc
pop
adc
out
adc
dec
sbb
pop
mov
pop
push
sbb
xchg
ljmp
movsb
inc
mov
in
pop
mov
inc
jg
sti
imulb
popa
push
aam
fcomps
pop
int3
mov
pop
test
add
push
lret
add
aam
jno
add
sbb
cmpsb
and
push
jge
lds
std
adc
repz
enter
test
cmp
movsl
int
sbb
rolb
leave
xchg
repnz
and
cs
cmp
jne
inc
mov
inc
leave
xor
test
mov
jnp
cmp
hlt
xchg
inc
mov
sbb
cmp
sub
mov
add
orb
cld
jmp
les
repz
cmp
pop
and
loopne
sbb
mov
sar
ficoms
cltd
ja
xlat
sbb
iret
out
push
icebp
sbb
mov
es
lods
adc
pop
into
movsb
sarl
cmp
push
daa
in
jb
add
xor
and
mov
push
pop
out
mov
and
je
outsb
adc
xor
pop
pop
adc
lock
xor
push
xchg
imul
add
shrl
push
push
mov
pop
mov
push
xor
popf
lret
je
outsb
jp
adcb
daa
xchg
mov
dec
dec
sbb
or
pop
jne
jne
xchg
popf
pushf
jmp
mov
dec
mov
in
shll
push
cs
cmp
push
xchg
pushf
movsb
cwtl
in
jg
jae
dec
stos
addr16
leave
sbb
movsl
fmul
inc
mov
idivl
mov
add
neg
cs
adc
shll
push
aas
scas
sahf
sub
add
stos
push
push
fld
repnz
js
mov
inc
and
fistpl
sub
dec
mov
arpl
xor
jne
adcl
sahf
sbb
mov
pushf
mov
mov
addr16
pushl
xor
cli
ds
icebp
jl
dec
aaa
or
es
xchg
sub
push
jae
dec
pop
loope
dec
fbstp
mov
movb
in
sahf
ljmp
or
xor
ja
sub
arpl
xchg
cmpsl
sahf
dec
adc
adc
pop
mov
sbb
in
pusha
movsl
das
cmp
daa
inc
dec
stc
adc
int
xor
test
jo
stos
cmp
bound
fsubs
movsl
int3
je
ds
test
cmpsb
jecxz
insl
pop
push
test
mov
test
mov
xor
fimuls
and
adc
mov
pop
pusha
add
mov
mov
negl
aaa
pop
data16
sbb
sub
fdivl
mov
inc
xor
or
push
popa
ja
xchg
mov
dec
mov
xchg
jle
mov
shlb
cltd
adc
xor
sti
mov
add
mov
mov
and
push
ds
mov
inc
mov
jmp
shr
mov
jo
push
and
loop
dec
lret
or
int3
shll
jl
inc
pop
mov
mov
test
fdivrs
push
inc
ret
lret
loope
outsl
aaa
xchg
loop
push
rcr
xchg
dec
insb
cld
mov
jo
xor
add
and
jmp
mov
push
pop
pop
xor
xor
mull
xchg
xchg
mov
xor
scas
loopne
movsb
push
lahf
pusha
outsl
sbb
add
leave
pop
dec
xchg
adc
and
add
xor
lret
push
push
lret
pop
jl
dec
rcrl
inc
dec
lods
mov
jmp
cmc
jp,pt
xor
pop
xorl
shrl
lods
push
xor
inc
cld
mov
call
movsb
xchg
gs
sarb
out
push
inc
jbe
into
ret
outsb
loopne
jecxz
xor
mov
pop
bound
cmpsl
enter
je
cltd
pop
ds
movsb
test
std
add
scas
adcl
popa
fsts
fs
shll
ret
and
mov
cmp
xchg
imul
xchg
sarb
test
adc
sub
xchg
sbb
dec
mov
notb
out
fucom
iret
test
xor
jo
or
push
adc
mov
inc
mov
mov
mov
dec
rolb
ljmp
rclb
js
mov
cld
test
add
inc
dec
notl
and
jecxz
movsb
fisubl
roll
or
lret
arpl
push
into
push
iret
into
cmp
dec
cs
loop
adc
inc
inc
sbb
pop
adc
ljmp
ja
and
mov
adcb
loopne
aad
pushf
fdiv
dec
and
ficoms
xor
outsb
data16
push
mov
out
mov
fmul
push
lcall
jne
or
popf
sub
bound
lods
or
addr16
xchg
mov
and
lods
aaa
rolb
inc
mov
andl
andb
pmaddwd
movsb
mov
dec
data16
xchg
inc
xlat
adc
call
cmp
mov
sub
cwtl
sbb
dec
jecxz
pop
sub
mov
out
movsb
cmp
pop
insl
inc
shll
lret
mov
jg
lods
jge
outsl
testb
sbb
xchg
in
push
rcrb
jne
jbe
jmp
mov
xor
jp
jbe
lret
addb
aam
out
sbb
dec
cld
push
shlb
push
jecxz
add
pop
push
loopne
fcmove
push
aad
xor
dec
dec
sub
fisubrs
int
xchg
into
inc
dec
xchg
mov
cltd
push
fidivs
lods
push
cltd
clc
adc
jno
repz
out
add
pop
cwtl
jecxz
lea
fbld
xor
mov
nop
inc
pop
and
or
adc
adcl
cmc
push
cli
mov
test
clc
inc
pop
mov
mov
push
lds
das
stos
add
sar
xchg
cltd
or
das
sub
push
pop
mov
aam
mov
cmp
xchg
movsb
in
and
data16
loopne
js
fmull
inc
xchg
andl
outsl
sti
cli
loop
mov
lods
lock
adc
testb
lods
cmp
lcall
sub
pop
sarl
cmp
lret
icebp
movsb
cld
pop
ud2
out
inc
adcb
sti
fcomp
call
add
inc
je
or
mov
or
fsubl
jp
push
push
and
lcall
mov
xchg
scas
shrb
frstor
aam
sbb
xchg
xchg
mov
push
fwait
push
xor
sarl
cmp
lods
sub
insb
cmc
pop
push
test
cmc
sbb
lods
imul
push
stos
mov
pop
es
pop
fisttpll
lahf
faddl
sbb
inc
xchg
add
repnz
xor
hlt
xchg
mov
xorb
imul
clc
xorl
and
je
lcall
pusha
loope
enter
das
mov
popf
cmc
jnp
aad
fstpt
xorl
sub
stos
stc
inc
cmp
out
mov
dec
dec
add
pop
inc
lds
enter
cmpl
xchg
sub
xchg
rcl
xchg
test
cmp
clc
insb
pop
mov
and
adc
mov
push
icebp
add
jg
lahf
xchg
dec
mov
cmpsl
or
xchg
repnz
leave
xor
aas
or
popf
xor
mov
insb
jg
in
and
cmp
push
fiaddl
cltd
pop
push
xor
dec
or
xchg
fdivr
fidivl
stos
shlb
mov
adc
pop
inc
mov
lcall
inc
shll
aaa
lock
push
xor
scas
out
cmp
movsb
jnp
mov
push
or
and
js
in
test
sub
cld
jle
and
mov
aad
add
lods
into
mov
test
pushf
sbb
mov
push
push
add
testb
jg
adc
pushf
xor
out
inc
mov
xor
mov
cs
mov
daa
outsl
xchg
jnp
push
push
popf
cmp
mov
std
pop
bound
movsl
mov
xchg
outsl
jne
in
mov
std
pop
mov
cli
and
sbb
xchg
out
mov
jae
mov
or
clc
pop
mov
and
jnp
xchg
bound
or
lods
mov
cs
cs
mov
xlat
sbb
repz
sbb
loopne
or
loopne
comiss
push
add
fildl
mov
insl
pop
and
ret
and
push
ljmp
dec
push
je
lahf
das
xor
imul
bound
mov
mull
mov
fisubl
jg
ljmp
xchg
fcomi
xor
mov
outsl
jmp
pop
out
fcmovnb
mov
insl
xchg
lods
cli
jns
je
stc
xchg
pop
pop
test
in
xchg
add
jge
mov
aam
imul
pop
push
push
call
push
cmp
dec
mov
out
lret
hlt
cmp
enter
pop
xor
jnp
rorl
mov
cmpsb
mov
mov
lock
mov
outsl
xchg
popf
xor
cwtl
dec
sub
out
mov
sbb
or
stc
mov
pop
les
xor
cmp
jecxz
dec
clc
xor
pop
leave
dec
lea
pop
in
cmp
fnstenv
mov
aad
jno
out
sti
sahf
rorb
sahf
addr16
push
rcrl
jno
mov
aam
push
jno
in
scas
dec
std
mov
push
popa
dec
ret
mov
adc
adc
in
loopne
out
sub
filds
sarl
leave
sbb
fnstenv
dec
push
into
xlat
jle
shlb
jl
ljmp
scas
in
ss
dec
adc
cwtl
push
cmpsl
movsb
xlat
xor
arpl
in
sub
jg
pop
nop
sub
fstps
aas
jno
mov
fsubrp
mov
and
loopne
pushf
mov
es
sub
sarl
mov
mov
lea
lahf
icebp
sub
les
adc
clc
repz
adc
xchg
inc
fcmovnbe
adc
cmp
and
jecxz
scas
iret
push
jmp
xor
sbb
push
int3
aaa
cmp
loop
popa
adc
ja
sbb
cmpsl
sbb
cmp
lods
cmc
adc
and
ja
mov
mov
add
out
pop
rcl
lret
dec
lea
jl
hlt
aam
idivb
jnp
aam
outsl
and
jne
lahf
cmp
jnp
rcrl
jno
lds
pop
into
int3
xor
jb
xchg
xor
mov
push
cmc
xchg
sub
ret
and
pop
cltd
push
pop
leave
mov
xchg
cld
adc
cmp
inc
out
xchg
data16
inc
cmpsb
repnz
sbbb
cmpsl
xchg
adc
mov
cmp
jl
repnz
cmp
dec
in
xchg
test
lret
daa
dec
xchg
or
cmpsb
stos
and
cs
xchg
pop
adc
jmp
jecxz
std
or
ljmp
sbbb
imul
imulb
aam
add
mov
negl
pop
test
test
fimull
lods
xchg
test
cmp
clc
mov
push
popa
pop
xchg
pop
aam
sbb
movsl
aaa
ss
mov
lods
mov
pop
jae
inc
inc
mov
xchg
add
sub
loop
fisubl
out
xchg
xchg
dec
frstpm(287
je
arpl
xchg
in
inc
pop
push
push
adc
sarb
popa
jne
or
mov
mov
push
out
sub
into
adc
lahf
mov
mov
and
xor
and
jb
mov
inc
lea
mov
or
fistps
shlb
test
or
cmpsl
push
cmpsl
stos
adc
pusha
rcll
jecxz
loope
pop
cmp
pop
xchg
mov
inc
enter
pop
es
cmp
xchg
push
movsl
jnp
jl
movsb
das
xor
iret
sub
lods
inc
jge,pt
cmp
sbb
xlat
andl
pushf
or
scas
push
sbb
push
dec
fimull
jp
cmp
int3
pop
adc
jle
arpl
pop
jmp
stos
jo
cmc
cld
sbb
lea
xchg
lods
data16
data16
jl
leave
xchg
std
lret
jnp
pusha
addr16
add
aas
cwtl
xorb
in
test
inc
inc
stos
icebp
movsl
aam
cltd
push
addb
shll
testl
mov
js
push
push
rol
mov
inc
inc
or
es
rclb
xchg
xchg
lock
gs
adc
into
xor
push
cld
js
sub
punpckhbw
add
inc
je
shrb
pop
jne
cltd
pop
mov
repz
fsubr
add
push
cld
ds
into
cmpsl
adc
mov
mov
inc
and
aaa
xchg
fwait
repnz
imul
pop
dec
mov
push
adc
mov
adc
and
push
aad
push
inc
mov
sub
sbb
dec
jo
mov
clc
loop
pushf
push
idivb
scas
jge
and
mov
jb
scas
into
mov
jnp
outsl
out
in
cwtl
push
js
fimuls
test
shlb
sub
push
ss
and
jnp
jl
adcb
jl
movsb
sub
test
lods
not
lea
xchg
jo
push
cmp
shrl
fcmovnu
idivl
push
xchg
ljmp
dec
pushl
xchg
loope
xchg
inc
ret
aam
mov
mov
dec
scas
dec
pop
push
inc
ja
jb
je
mov
jmp
shl
add
jo
notb
xlat
ja
movsb
mov
das
movsl
insl
push
test
mov
cmp
clc
sub
stos
add
mov
xor
scas
xchg
les
shlb
add
das
clc
mov
out
pop
fdivp
loopne
push
or
adc
imul
cli
pop
mov
sbb
mov
add
dec
daa
int3
xchg
adc
xor
shl
nop
ret
fsubrp
mov
iret
sub
inc
loopne
out
subb
xchg
sub
mulb
mov
push
dec
or
popf
or
mov
arpl
jp
and
test
in
call
idivl
mov
mov
sbb
data16
stc
cmp
sbb
pop
icebp
out
jb
test
pop
imul
in
jae
dec
xor
sub
pop
jnp
aaa
add
or
inc
xor
fwait
dec
out
andl
imul
jmp
rolb
inc
mov
mov
in
jge
fsub
xchg
stos
test
add
pop
pop
sub
mov
pusha
fs
in
adc
dec
mov
adc
test
lea
lods
sarl
mov
jne
sub
dec
add
ret
xchg
mov
mov
xchg
pop
fsubrl
scas
mov
roll
mov
push
push
idivb
add
lret
push
pop
xor
mov
push
mov
cmp
push
lea
jne
jae
sbb
ja
jb
js
divb
inc
fstl
hlt
mov
scas
popf
shl
xchg
adc
xchg
insl
mov
ret
pop
sbb
jecxz
jmp
dec
mov
mov
cltd
add
pop
gs
lret
dec
and
lahf
out
xchg
out
jecxz
test
lahf
sti
addr16
out
mov
mov
push
int3
lds
pusha
aas
out
popa
into
aam
sti
mov
iret
pop
mov
pop
push
pop
setno
cmp
add
add
fwait
gs
inc
sbb
enter
mov
fnstsw
pop
fiadds
mov
fs
test
fwait
pop
xchg
in
popa
sti
rorb
jge
mov
cltd
and
lahf
es
sbb
in
mov
fs
push
dec
jge
int3
addb
pop
dec
pusha
mov
xchg
mov
pop
sarb
mov
xor
and
decl
adc
js
xor
in
mov
mov
loopne
fwait
les
pusha
inc
and
cmp
jl
add
sub
pop
imul
sahf
filds
sub
pop
xchg
lret
imul
in
icebp
gs
add
ljmp
popf
pop
push
push
pop
push
in
sub
lock
mov
out
xchg
add
adc
and
inc
cwtl
sub
fistps
cli
test
mov
test
ss
sub
dec
add
adc
add
enter
jnp
mov
pop
jno
loop
cmp
out
sub
mov
dec
jns
push
add
mov
pusha
gs
xlat
push
inc
or
or
cld
and
mov
std
mov
cli
jb
xor
push
and
cmp
jnp
arpl
addr16
repnz
popa
cmp
aas
push
arpl
dec
jg
subl
mov
sbb
fsubl
cmp
es
jecxz
insb
in
js
cltd
mov
sbb
call
adc
cmp
push
xchg
jns
push
and
mov
je
inc
sub
pop
scas
or
cmpl
inc
imul
clc
sbbl
cmp
inc
arpl
into
cmp
mov
mov
stos
ret
mov
jns
fsts
test
in
sti
cmp
add
mov
in
mov
push
jecxz
jae
ss
xchg
mov
dec
sbb
ljmp
loopne
or
pop
lock
and
dec
out
push
fs
insb
mov
mov
mov
push
sub
inc
outsb
insl
data16
sub
lods
mov
sbbl
cli
ret
insl
mov
mov
daa
mov
mov
sti
call
cmpsl
pushf
pop
cmp
jne
xor
lea
call
stos
icebp
addr16
shlb
div
push
push
lods
data16
repz
inc
fidivrl
out
fmuls
lea
mov
xchg
adc
xchg
daa
ficoms
adc
shlb
insb
ss
sahf
push
leave
mov
addr16
lahf
inc
sbb
in
into
add
addr16
js
push
cmc
inc
push
mov
or
dec
cmp
fildl
cmp
pusha
ja
lret
test
pop
cmp
cmpsb
out
mov
xchg
sarb
imul
mov
test
cwtl
mov
adc
pop
push
lret
mov
mov
dec
inc
out
fs
inc
mov
push
sub
push
cmp
rolb
imull
cmp
rorb
stc
icebp
call
cmpsb
ljmp
popa
pop
jmp
jle
dec
ds
inc
pop
and
iret
hlt
sbb
pusha
pop
xlat
pop
cltd
ja
stos
ret
mov
jnp
pusha
mov
sbb
cmp
cmp
cmp
pop
adc
cmp
xlat
insl
sti
dec
mov
push
xchg
add
jnp
add
lahf
jle
cmp
jno
xor
scas
inc
movsl
mov
jae
fildll
push
or
cmp
xlat
pop
xor
xchg
arpl
in
mov
ret
jl
ret
mov
or
jle
ffree
enter
jecxz
pop
scas
push
mov
dec
xchg
jle
stos
dec
imul
adc
mov
fisubrs
subl
ds
adc
fmulp
in
jp
add
shrb
adc
jbe
mov
mov
mov
into
inc
or
pusha
mov
lret
mov
sti
cli
lods
lea
push
sbb
and
dec
cmpsb
lock
add
scas
lfs
dec
ret
test
mov
shrb
xor
jecxz
or
aaa
add
imul
push
mov
dec
rcll
xlat
or
jp
adc
push
adc
orl
inc
add
xchg
cs
xchg
mov
pop
stos
ficompl
pop
ret
sub
xchg
sti
sub
cmp
dec
sarb
sbb
jo
mov
adc
in
sbb
mov
lret
lea
in
adc
and
movb
and
jae
dec
subl
xchg
jnp
call
int3
movsb
sbb
cmpsl
mov
daa
lcall
lret
out
imul
in
add
clc
test
jnp
sub
scas
xchg
std
les
jne
cmp
shlb
stos
loop
mov
das
jns
shrb
leave
inc
jge
cmp
mov
sti
ja
jg
outsl
aaa
pop
or
push
fwait
fs
xchg
jne
out
loope
fdivs
dec
xchg
ficompl
popa
ss
inc
lods
addr16
test
enter
insl
loopne
or
stos
shll
cltd
in
add
jg
xor
jmp
lds
mov
in
push
xchg
xchg
test
lret
repnz
jne
jg
fdivrs
ljmp
lods
stos
outsb
test
cmp
push
pop
push
push
rcll
cmp
xor
pop
xchg
pusha
in
push
xchg
mov
popa
push
mov
dec
and
mov
cs
cld
std
fldenv
roll
mov
mov
push
mov
xor
xor
popa
fisubrs
cmp
mov
movsb
lods
out
add
pop
iret
push
jle
shrb
inc
mov
mov
push
lahf
mov
adc
es
movsb
hlt
lea
addb
pop
mov
push
pcmpeqb
or
mov
ja
mov
and
mov
popf
jno
dec
int3
cmc
inc
sahf
pop
mov
xor
dec
xchg
cmp
pop
jb
add
rcrb
xchg
jne
and
lods
push
mov
punpckhbw
sbb
fyl2x
jmp
mov
jmp
movsb
xchg
pop
cmp
sbb
pop
jne
push
outsl
xchg
jge
mov
adc
or
mov
cli
mov
lret
jnp
push
add
lahf
std
mov
ret
lods
xchg
or
mov
sbb
or
jl
and
add
mov
ss
movsb
sbb
cmp
inc
mov
lods
popa
xchg
repnz
mov
in
jns
mov
sub
mov
iret
movsb
loopne
jno
popl
rcl
dec
aas
pop
cwtl
jae
jl
loop
mov
xchg
int3
cmpsl
add
pop
jge
mov
xor
mov
adc
sbb
or
inc
pop
mov
daa
pusha
mov
jnp
aam
lcall
cmp
sub
out
inc
lahf
add
loopne
test
test
test
es
fwait
mov
mov
aaa
ret
sbb
in
pop
sbb
cltd
in
dec
loopne
mov
out
ds
mov
rcrb
jae
or
mov
das
or
push
or
adc
rcrl
or
loopne
daa
mov
gs
push
xchg
or
or
xchg
movsl
sub
jne
rorl
aam
xor
in
out
ljmp
add
ds
mov
ja
add
popa
out
loopne
loop
loop
mov
out
leave
or
loopne
in
mov
mov
sub
sub
in
clc
movaps
sbb
jb
ds
out
test
scas
lret
insb
arpl
xlat
cmp
dec
pop
stc
int3
cmp
int
jbe
add
addr16
mov
cmp
mov
sahf
sub
repnz
push
je
sub
push
js
add
bound
inc
sbb
and
daa
add
cwtl
inc
mov
mov
dec
jp
dec
mov
stc
pop
scas
lds
jg
inc
cmp
mov
mov
mov
mov
out
inc
jne
ds
fs
pop
cmp
inc
shl
bound
adc
mov
cltd
cmp
cmp
adc
ud0
cmp
outsb
mov
imul
adc
xchg
lds
push
fdiv
lds
ret
cmp
cmp
mov
or
jne
testl
cld
fdivrs
shr
dec
stos
cmp
dec
dec
pusha
pop
fistpll
add
mov
loope
rcrl
xor
push
mov
stos
arpl
dec
out
dec
and
imul
int3
outsl
in
inc
adcl
psubq
iret
and
adc
mov
fucomp
xchg
xchg
xchg
call
aaa
jg
das
xchg
push
inc
test
ja
cwtl
iret
push
stos
xor
jbe
lea
mov
push
enter
push
inc
adc
repz
aam
out
lods
push
shll
jecxz
mov
repnz
mov
push
inc
sar
mov
outsb
int
or
jg
inc
sbb
dec
mov
outsb
mov
mov
pop
xor
test
addr16
cld
iret
and
jb
std
pop
sbb
pop
mov
pop
dec
aas
mov
mov
inc
and
aaa
inc
xor
insb
jp
inc
out
or
arpl
dec
js
in
mov
sub
dec
hlt
in
fcmovnb
call
lcall
movsl
adc
sbb
or
cmp
bound
into
outsl
mov
cmpsb
mov
cmp
mov
insl
inc
inc
or
jno
xchg
jge
jo
ja
pop
fnstcw
jb
subl
pop
movsb
cmp
add
sti
cwtl
in
mov
aad
loope
mov
mov
pop
mov
js
cmc
push
jns
mov
sbb
in
mov
sbb
into
cmc
pushf
mov
inc
je
dec
movsb
enter
lock
mov
call
sti
pop
addr16
test
dec
into
cmp
out
pop
cmp
and
cmp
push
mov
fisttpl
add
push
push
arpl
subl
insb
ds
pop
or
popf
mov
sbb
sbb
adc
cmp
mov
or
pop
repnz
lret
mov
cmp
clc
jp
pop
sbbb
dec
sub
fisttpll
mov
mov
ret
or
xor
xchg
mov
fs
lea
cld
nop
and
xor
ja
pop
pop
push
pop
out
jbe
add
lcall
int3
iret
das
imulb
jne
rcll
sub
mov
pushf
mov
ret
push
fcoms
rcr
xchg
jbe
cmp
pusha
xchg
into
mov
loopne
or
daa
loop
in
or
cmpsb
sbb
and
fisubrs
loop
nop
dec
in
lds
insb
enter
jb
rol
adc
adc
inc
icebp
lock
xor
bound
subb
inc
or
add
mov
sub
outsb
jp
xor
dec
fdiv
dec
std
idivb
dec
push
adcb
insl
sub
movsl
inc
fsubl
push
sahf
push
pop
mov
cmp
cli
cmpsl
sbb
cmp
les
icebp
out
scas
xchg
repz
add
cli
out
mov
sbb
in
mov
gs
fmuls
mov
dec
bound
push
xchg
repnz
mov
mov
mov
lods
sbb
fmul
xorb
xor
test
pop
mov
test
inc
xchg
xlat
ficomps
sbb
popa
fidivs
fiadds
dec
scas
imul
sub
rcll
out
lock
cmp
xchg
sub
out
in
out
aad
xchg
stos
outsb
pop
lock
sub
popf
lea
out
arpl
into
nop
jge
mov
outsb
mov
cli
sbb
fisubl
in
cwtl
rclb
xchg
mov
mov
in
fstpl
mov
xor
or
xchg
mov
movsl
cwtl
je
aad
mov
fiaddl
pushf
cmp
in
rorl
dec
sub
dec
frstor
nop
inc
inc
pop
or
adc
xchg
test
popa
repnz
pushf
dec
and
push
jo
cmp
dec
sub
cmc
outsb
jne
mov
push
mov
ret
js
sub
ds
test
shr
and
out
stos
adc
movb
test
bound
jmp
add
push
dec
sub
rcl
xbegin
cmp
xchg
sub
jmp
shlb
pop
and
out
fs
ja
dec
mov
jae
shlb
dec
sub
test
movsb
or
daa
xor
mov
sub
pop
add
push
sbb
inc
mov
dec
fmul
mov
mov
pop
mov
lcall
mov
and
jmp
lds
rorl
mov
dec
cli
push
mov
push
jle
pop
xor
enter
test
rolb
fbstp
xchg
ret
subb
dec
inc
or
out
scas
jns
mov
jno
xor
aas
hlt
dec
xor
shl
xor
repz
pop
shll
sbb
and
lods
stos
dec
loop
inc
orl
pop
mov
adc
jmp
pushf
jl
mov
orl
push
adc
pop
mov
xchg
mov
shlb
xor
sub
pop
stos
ja
outsb
fwait
iret
or
sti
outsb
bound
pop
cmp
dec
dec
call
cltd
cld
test
pop
or
add
shll
test
ret
sbb
dec
xor
pop
dec
test
lret
sub
std
xchg
ret
sbb
xor
daa
inc
sub
popf
pop
lods
clc
inc
cmp
push
xchg
xchg
movsb
pop
clc
es
in
ret
jl
mov
or
and
jns
movsb
pushf
cmc
lods
or
jg
icebp
leave
inc
mov
pop
and
les
mov
jb
fstpl
outsl
lcall
int
mov
jbe
inc
hlt
xor
fildl
mov
xchg
jno
pop
push
xor
cmc
das
sub
cld
pop
mov
mov
adc
insb
test
inc
roll
data16
ficoms
add
fadds
cli
in
push
jge
rorl
or
sub
out
jae
popf
hlt
dec
or
mov
xchg
pop
scas
sub
mov
push
sti
orb
or
int
xchg
dec
inc
mov
cld
test
sbb
adc
pmulhw
fcmovnbe
add
notb
cmp
cmpsl
popa
xlat
mov
cmpsb
arpl
ljmp
mov
pop
push
xchg
push
sub
xchg
stos
ret
ud1
gs
jge
or
shll
pop
inc
fistl
jmp
scas
jl
xchg
in
xor
cwtl
push
lret
add
inc
fisttpll
and
daa
xor
sbb
cmp
sub
stc
cmp
ljmp
push
inc
xchg
mov
dec
nop
aam
sarl
pop
mov
in
repnz
call
xchg
xor
mov
inc
movswl
mov
in
ret
add
and
out
jae
into
xchg
popf
imul
inc
shrb
ret
dec
scas
xor
pop
sub
jl
jne
sub
adc
xor
mov
lret
ss
gs
xchg
cmp
mov
loop
stos
add
jb
dec
lods
loopne
pop
lea
mov
xor
pop
addr16
add
out
xor
add
rorb
inc
mov
jns
rclb
jne
dec
pop
adc
sub
mov
fs
pop
cmp
or
push
ret
mov
inc
push
ja
in
xchg
inc
call
add
mov
loope
adc
mov
int3
jmp
cmp
push
or
aam
js
lret
in
stos
lcall
enter
or
sbb
sti
mov
dec
pop
shrb
iret
aas
loope
call
in
sbb
push
add
insl
enter
shrb
push
ljmp
xor
pop
cmp
sbb
addb
dec
mov
in
add
jno
mov
push
sub
mov
mov
xchg
imul
bound
cmc
push
das
icebp
out
pop
inc
dec
xor
mov
jnp
aas
pop
mov
jl
outsb
mov
ss
xchg
outsb
orb
pop
ret
add
or
xor
push
sbb
daa
repz
lock
aaa
daa
out
enter
jae
push
cs
and
rcl
mov
inc
dec
jne
test
movsl
ja
and
pusha
dec
or
pop
xchg
push
xor
pop
dec
loop
fcomps
pushf
insl
stos
repnz
scas
icebp
sahf
sbb
push
imul
imul
icebp
mov
or
add
cmc
and
ss
pop
repnz
ret
out
mov
mov
push
retw
add
mov
cltd
jmp
addl
ret
imul
sbb
mov
mov
adc
cmpsb
data16
lods
push
inc
push
sbb
push
mov
lret
cmp
mov
je,pt
insb
pop
daa
pop
xchg
push
or
jo
outsl
mov
stos
cmc
adc
mov
shll
mov
out
dec
mull
or
sbb
jb
pop
cmpsb
push
jle
mov
sbb
jno
imul
add
ljmp
push
sub
push
push
mov
out
iret
jne
cs
jo
mov
inc
int3
cmp
lret
lcall
outsl
and
out
mov
xor
push
loopne
lret
xor
sbb
test
mov
sub
filds
dec
sti
cld
in
pop
fldcw
mov
adc
and
fcmovu
sbb
pop
cmp
out
pop
cmp
pop
inc
adc
jg
sti
jae
jge
test
mov
flds
shll
cmp
into
add
loope
push
hlt
rorl
scas
pop
push
mov
jb
push
leave
rcrb
mov
or
xor
push
cmp
mov
or
sub
and
mov
mov
add
arpl
xlat
pop
inc
sbbl
fs
adc
pop
popf
stos
dec
sub
sbb
addr16
sub
xor
mov
aas
xchg
adc
dec
dec
add
and
sbb
addb
shr
jmp
xchg
pop
push
insb
lods
aas
cs
dec
mov
xor
jg
xor
jo
and
out
rclb
inc
push
push
push
ss
and
mov
add
push
pop
sub
sbb
dec
cmpsb
cltd
mov
repz
inc
fildl
mov
mov
filds
jge
das
pusha
loope
lret
jmp
inc
mov
inc
cmp
dec
mov
xor
xchg
mov
pop
adc
insb
xor
into
pop
stc
mov
adc
xor
cmp
pop
test
jb
outsb
mov
mov
jns
mov
pop
jne
cmp
cmp
dec
jg
cmc
sbb
add
aad
sub
xchg
in
movsl
mov
addr16
cmp
ficompl
mov
mov
push
dec
dec
cmp
or
add
add
scas
ficoml
mov
mov
or
xor
pop
pop
mov
clc
test
sahf
les
adcl
pushf
mov
fsts
stos
in
testb
mov
or
add
push
and
std
outsb
inc
das
sub
mov
cmp
repnz
popf
or
roll
and
and
or
ss
popf
dec
sub
in
add
sub
xor
cmp
aas
mov
fstpt
pop
xchg
add
ss
fst
aam
dec
out
or
xlat
fmul
xchg
bound
xchg
jecxz
cli
negl
push
or
jbe
or
iret
repz
adc
pop
mov
jg
jle,pt
push
push
test
add
icebp
dec
dec
mov
cmp
nop
pop
popa
jbe
cmpsb
and
mov
jge
inc
dec
data16
dec
es
cmpsl
push
cmpsl
dec
aad
xchg
dec
xor
dec
inc
pop
sbb
data16
test
nop
fsubrp
loop
std
ja
insl
sbb
nop
sub
mov
push
ficompl
jnp
xchg
pop
pop
jno
push
sbb
xor
scas
jle
stos
ds
lret
rorl
jo
or
stos
sub
in
rol
mov
xor
push
hlt
call
add
jnp
lods
test
adc
mov
pop
fwait
scas
jnp
xor
xchg
add
ja
cmp
repz
mov
pop
ds
inc
imul
push
outsb
stc
mov
popa
jne
ja
stc
sub
shll
repnz
or
div
pop
push
xor
ret
notb
in
mov
dec
loopne
dec
mov
xor
aad
push
lret
dec
testl
mov
push
out
inc
adc
mov
jne
fnsave
cmp
mov
push
flds
mov
gs
inc
nopl
das
dec
sbb
iret
fwait
into
mov
cmc
lgs
nop
mov
push
outsl
sarb
cltd
mov
dec
jle
addl
pusha
mov
insl
int
test
pushf
cmpsb
cmpsl
xor
dec
cs
pop
into
jbe
xor
scas
add
ror
cld
adc
inc
jne
es
jne
or
pop
es
hlt
aam
sub
movsl
push
mov
leave
hlt
or
loop
pop
in
aam
mov
cmp
les
das
stos
imul
push
movsl
andl
out
cmpsl
ret
xchg
or
js
fcomps
loopne
mov
bound
push
push
pop
jg
lret
ret
loop
jp
xor
orl
sbb
lods
or
mov
push
je
jge
dec
movsl
icebp
sbb
dec
hlt
dec
pusha
icebp
ljmp
fs
fildl
push
sbb
cmp
call
add
or
mov
fsubr
repnz
stos
mov
inc
xchg
xchg
pop
push
adc
push
jg
ret
lods
jle
jmp
lret
add
aaa
test
out
xchg
adc
mov
and
xchg
int3
pop
call
add
pop
sbb
dec
dec
jbe
inc
fisttps
cli
movsb
inc
and
mov
ljmp
dec
jge
sub
test
test
loope
add
sysexit
fs
xor
dec
insb
mov
fadds
imul
sbb
idivl
jmp
sub
inc
rol
cld
sbb
and
int
add
pop
rcrb
push
push
iret
lahf
dec
pop
mov
ja
ljmp
pop
popa
psrlw
popa
aas
add
xchg
popa
sti
outsl
sarb
xor
data16
test
movsb
mov
cli
add
test
push
stc
or
sub
mov
push
inc
mull
adc
out
mov
loopne
cmpl
or
lcall
cmpsl
pop
gs
hlt
pop
push
dec
sbb
or
jge
dec
pop
call
fs
test
bnd
jae
popf
shl
pop
and
data16
push
mov
xor
loopne
addr16
sub
jmp
insl
push
popa
fwait
or
js
mov
hlt
loope
xchg
enter
fnstenv
dec
sub
push
jle
ja
rol
jne
sub
pop
push
es
loopne
pop
jl
push
mov
push
icebp
std
jecxz
mov
stos
push
pop
fs
stc
cld
popa
sahf
dec
xchg
shl
or
rcll
into
pushf
adc
xor
pop
cwtl
ret
outsl
cmp
sub
idiv
adc
jmp
push
outsb
leave
je
mov
mov
lea
addr16
std
dec
shlb
mov
push
pushf
fildl
xchg
mov
ret
inc
cmpsl
or
dec
push
xor
push
pop
push
push
cmpsl
out
loopne
in
in
insb
push
inc
mov
out
or
xchg
xchg
aad
in
xor
push
xchg
and
lock
lret
pop
push
sti
sub
lods
push
mov
mov
sub
cltd
and
push
enter
pushf
mov
jb
out
or
ret
aaa
lods
or
fdivrs
mov
out
rorl
bound
ret
xchg
push
jne
or
jae
imul
jne
sbb
fnstsw
sub
fcomp
in
loope
int3
mov
mov
outsb
add
pop
mov
lret
iret
add
mov
cmp
dec
out
fimull
lahf
outsb
lret
loopne
sti
pop
je
arpl
sti
lea
add
jo
add
mov
fldenv
cmp
shll
inc
and
mov
mov
imul
push
pop
test
std
enter
mov
adc
push
and
xchg
cmp
sti
push
cmp
sarl
push
push
xchg
sbb
insl
jmp
clc
or
mov
movsb
test
mov
outsb
dec
and
mov
mov
negb
or
mov
mov
mov
jg
iret
mov
cmp
loop
push
fstpl
inc
xor
idivl
dec
push
outsl
mov
aam
mov
or
mov
loopne
jnp
cwtl
xchg
or
add
pop
fwait
sub
loope
add
and
rol
sub
mov
cmp
cli
out
into
inc
addr16
adc
mov
inc
sbb
or
lods
dec
mov
outsl
ret
inc
dec
jno
lock
mov
add
push
dec
dec
sub
popl
jbe
imul
cmp
jo
mov
les
or
fimull
jg
sbbb
and
mov
out
aam
add
inc
and
jae
push
lcall
je,pt
xchg
and
mov
cmc
push
mov
cld
and
or
inc
xchg
popf
inc
adc
loopne
ret
mov
sbb
pop
roll
push
adc
fwait
jns
leave
or
or
dec
inc
add
fnsave
repnz
fcmovnbe
mov
frstor
aaa
inc
cltd
lret
mov
sub
cmp
push
shll
jno
xchg
pop
xchg
pop
gs
stos
insl
jns
fsubl
pop
clc
xor
jnp
test
and
hlt
inc
xlat
shlb
mov
cs
add
dec
add
cld
pop
in
and
call
out
adcl
mov
int3
je
mov
imul
cld
xchg
pop
in
repz
xor
out
inc
inc
pop
test
push
push
data16
and
mov
sbbb
mov
mov
jle
mov
imul
jecxz
dec
fdivrs
adc
lcall
mov
sbbb
inc
loop
clc
leave
inc
mulb
jae
loop
js
pop
in
push
pop
mov
push
adc
mov
subb
popa
data16
orl
dec
pop
leave
dec
jle
test
repz
xor
adc
or
les
ret
out
add
fstpl
jle
pop
mov
movsb
or
push
or
pop
push
mov
add
or
test
adc
inc
mov
addr16
mov
xor
lea
push
repnz
inc
sti
cmp
inc
std
cmp
out
lods
int3
faddl
jbe
cli
pop
imul
arpl
aam
jmp
call
mov
sub
pop
mov
jecxz
inc
loopne
cli
in
push
out
add
mov
fidivrs
push
xchg
shl
and
xchg
pop
mov
test
test
xor
dec
sbb
cmp
dec
pop
lds
out
cwtl
xchg
mov
popa
stos
gs
fucomip
movb
leave
inc
xchg
push
js
jns
pop
jle
xchg
xchg
mov
outsb
lret
mov
test
test
cwtl
xlat
mov
cs
gs
mov
inc
dec
lret
pop
divb
pop
push
pop
test
and
mov
xlat
pushl
ss
and
out
sbb
pop
xor
mov
jge
push
lcall
inc
in
cmc
rcrb
in
out
in
ror
mov
pop
sub
js
cmpsb
push
mov
movb
daa
jecxz
arpl
lods
jb
loope
pop
xchg
and
and
jnp
cmp
in
cmp
dec
xlat
imul
cmpsb
clc
ret
xchg
jo
rorl
inc
or
pop
lea
sbb
pop
or
jne
imul
xor
outsl
aaa
pop
sub
jmp
mov
cmp
jmp
mov
sahf
popa
daa
stos
lret
mov
test
xchg
rol
and
movsb
and
pop
stos
pop
outsb
fldl
xor
add
cwtl
mov
cwtl
mov
repnz
aam
aaa
jae
jg
push
mov
fadds
aas
pop
lea
stos
repz
fiadds
aaa
mov
xchg
inc
xor
into
xor
xchg
in
lret
and
jbe
sbb
mov
sub
nop
or
scas
mov
jno
insl
cmp
pop
fidivs
mov
out
cwtl
jbe
cmp
ss
les
outsb
outsl
jne
sub
adc
jmp
lahf
ret
out
jae
test
sbb
jb
push
adc
testb
push
push
mov
jg
enter
fidivrs
cmp
mov
fmuls
jp
mov
dec
push
sti
mov
mov
aaa
fadds
dec
mov
mov
mov
testb
cmp
roll
jns
jl
pop
or
in
out
out
in
cmpsb
adc
mov
cmp
xor
push
sub
lods
push
and
scas
push
and
loope
jmp
andb
xchg
mov
scas
insl
in
mov
inc
xchg
or
popa
dec
std
stc
cmp
out
push
dec
sbb
push
nop
adc
mov
jbe
add
mov
push
sub
out
data16
fsubrs
inc
fucomi
fstpl
and
movsl
add
mov
outsb
adc
mov
or
cmp
inc
lods
mov
and
push
enter
aad
or
scas
bound
div
cmp
mov
mov
fdivrl
nop
movsl
test
adc
xor
leave
jns
jp
imul
mov
fisubrs
stc
inc
int
aam
out
leave
shrl
mov
push
push
cmp
divb
push
xchg
in
cmp
pop
insl
imul
pop
xchg
movsl
movsl
fst
leave
add
inc
sub
orl
jmp
in
mov
ss
xchg
cltd
adc
pop
sub
add
test
subl
dec
fld
pop
jne
lea
pop
in
and
sub
sub
or
mov
call
lret
xor
cs
mov
xchg
adc
iret
sbb
or
cld
jno
cmpsl
inc
adc
cs
rcrb
inc
popf
sahf
inc
mov
mulb
push
mov
pop
sub
xor
cmp
sbb
push
mov
pop
jle
xor
cli
scas
loopne
xchg
clc
xor
loope
das
sbb
or
or
lds
mov
icebp
pop
sbb
dec
mov
xchg
jg
fstps
je
es
inc
push
cmp
inc
adc
test
and
add
stos
push
sbb
cmp
push
sbb
cmc
jno
jle
popa
sbb
mov
stos
in
data16
test
out
shll
out
add
popa
in
test
and
fiadds
aas
push
cmc
popf
or
psubusw
xchg
mov
in
xchg
cmp
outsl
add
je
test
frstor
lea
xlat
jl
sub
fwait
pop
insb
notb
sub
xchg
sbb
hlt
mov
jb
rep
insl
repz
xchg
clc
aad
data16
adc
mov
cs
xchg
jne
xor
inc
sahf
push
cmp
pusha
cwtl
push
loop
add
sbb
cltd
popw
cltd
lahf
inc
mov
mov
xor
cmp
popf
dec
fs
aam
sub
push
fimuls
sbb
out
cwtl
sbb
es
into
jg
push
dec
mov
les
mov
cmpsl
pop
ficomps
pop
mov
add
mov
dec
insb
das
sbb
inc
movsw
stos
shll
jo
das
ret
cld
pusha
add
dec
popa
dec
inc
imul
daa
loope
dec
pop
in
push
xchg
div
xchg
ja
mov
xchg
dec
lret
dec
sti
lcall
and
das
popf
dec
out
push
lods
mov
pushf
rcrb
cld
out
xchg
shll
lods
rolb
cld
jno
out
adc
ret
data16
mov
push
jno
lret
pushf
mov
pop
xlat
mov
push
adc
lock
ljmp
imul
outsl
jne
insb
sbb
jno
mov
outsb
jl
xchg
cwtl
push
sti
fsubr
repz
mov
mov
push
jp
cmc
into
ss
xchg
dec
mov
mov
pushf
in
push
mov
pop
call
cs
movsb
idiv
inc
push
add
dec
add
loope
pop
adc
jl
push
jns
pop
mov
inc
cmpl
lahf
scas
and
data16
inc
sar
mov
jecxz
aas
lcall
xchg
test
mov
pop
jmp
add
xchg
hlt
into
hlt
test
testb
adc
inc
push
cmp
push
dec
fcompl
shlb
cmp
test
jns
ret
mov
xor
and
bnd
or
xor
sub
inc
orl
mov
pop
je
enter
dec
adc
or
loopne
loop
dec
movsb
pop
mov
out
mov
add
adc
repz
lods
cwtl
aam
aas
mov
push
add
enter
dec
adc
sub
les
repnz
aas
jb
sub
xor
mov
aad
sub
stos
inc
ret
pushf
mov
into
xor
in
fiadds
fstps
pop
movsb
pop
dec
xchg
push
push
mov
xchg
or
cmp
fisubs
mov
in
ljmp
aad
aas
push
jb
add
nop
xor
movsb
insl
aaa
xchg
lret
movsl
mov
not
cmp
adc
adc
imul
sbb
xchg
fimull
test
cmpb
push
stos
and
imul
ja
imulb
jbe
push
sbb
call
jl
cltd
subl
lock
shrb
mov
and
popa
pop
or
jl
int3
xchg
pop
dec
lock
jecxz
stos
test
mov
test
mov
adc
mov
int3
pop
jne
outsl
sbb
push
push
out
xchg
pop
lock
mov
in
inc
push
shll
mov
dec
mov
mov
and
into
in
inc
pop
fcompl
and
in
jo
push
test
fistpll
mov
fcoms
jns
adc
pop
shrb
in
out
or
adc
negl
jge
mov
shl
lods
jg
jnp
sub
loopne
lcall
inc
xor
not
mov
inc
dec
jno
mov
push
push
push
jb
add
je
inc
sbb
lret
out
add
scas
adc
and
add
adc
shlb
movzbl
cmp
cwtl
xchg
aam
ja
in
lods
or
out
push
das
hlt
sub
sbb
inc
pop
xor
inc
inc
push
and
sub
inc
push
gs
push
and
int
add
insl
push
cwtl
outsb
loope
cwtl
loope
push
stos
jo
adc
inc
ret
into
mov
int
aad
cmpsl
xchg
pop
in
repnz
rcll
fistps
roll
mov
fst
test
out
pop
lahf
cmp
jnp
mov
std
mov
sahf
lcall
jmp
mov
adc
adc
daa
imul
out
outsb
jo
cwtl
push
xorb
jnp
and
cs
jge
mov
xchg
fsubr
lods
out
stos
or
xchg
sbb
adc
mov
sub
adc
or
pop
mov
inc
rclb
xchg
lahf
mov
iret
aad
push
mov
sub
xchg
or
mov
mov
insl
xchg
adc
mov
movsb
jo
cmpl
push
and
pop
mov
dec
add
ds
jo
mov
adcl
cmp
jnp
and
sar
xorl
daa
fldt
scas
pop
cmp
push
mov
cmpb
shll
mov
int3
test
mov
imul
imul
insl
das
test
sub
pusha
cmpsb
loope
aas
inc
mov
push
cmp
insb
sbb
jae
mov
mov
push
stos
jmp
pop
mov
dec
xchg
jecxz
add
mov
or
pushf
jnp
and
divl
int3
or
pushl
dec
jmp
add
sbb
or
mov
int
or
mov
add
adc
stos
xor
pop
lods
lcall
cmp
cmp
ret
loope
or
lock
sub
fbstp
aaa
inc
rcrw
inc
xor
lahf
mov
pop
mov
mov
xchg
adc
sbb
orb
mov
pop
lds
mov
in
aad
popa
inc
clc
ljmp
pop
pop
cmpsl
loop
sub
mov
xlat
mov
gs
lret
fistpll
movb
sbb
xor
push
lret
out
mov
lahf
jnp
jo
pop
or
negb
insb
add
push
xor
call
push
lods
popf
cmp
dec
jl
xchg
cwtl
jae
pusha
test
lock
adc
mov
mov
hlt
mov
lahf
xchg
loopne
test
std
mov
mov
or
jmp
shll
add
fldenv
cs
data16
inc
rclb
in
mov
cltd
outsl
iret
mov
icebp
mov
aaa
idivb
sbb
dec
jmp
push
arpl
push
pop
mov
arpl
mov
add
pop
fldt
pop
xchg
cmc
mov
sbb
mov
stc
dec
pop
push
fsub
in
ret
rclb
mov
mov
cmp
call
lock
ret
sbb
xchg
sbb
push
imul
xor
into
lcall
sti
jne
shrl
jnp
nop
mov
and
xchg
leave
das
adc
mov
jle
les
xchg
pop
mov
cmc
mov
inc
imul
jle
add
xchg
in
mov
inc
pop
xchg
push
ds
sahf
lods
or
inc
jbe
jl
sub
cmp
aad
aas
lods
and
mov
es
mov
imul
stos
xchg
jp
gs
push
xchg
cmpsb
push
repz
or
push
loopne
cmp
stos
push
xchg
xor
sub
inc
sub
xchg
mov
in
mov
repz
jge
mov
jge
inc
push
or
or
lea
dec
stos
fimull
push
mov
inc
scas
jge
in
adc
dec
movups
mov
addl
mov
leave
xor
lcall
clc
fwait
xor
inc
cmc
or
sarl
mov
cmp
push
js
sbb
lea
pop
inc
adc
mov
cld
add
xchg
mov
jns
xor
cmp
mov
les
lds
fwait
push
pushf
mov
xor
mov
push
add
cwtl
xorl
int3
int
addb
ss
sub
pop
call
stc
pop
dec
sbbl
mov
add
iret
ss
mov
repnz
push
not
mov
adc
mov
fcoml
mov
fsubrs
xlat
dec
scas
aaa
sbbb
jmp
test
stos
fmuls
cmc
addr16
movsb
test
xchg
popf
ljmp
fmul
adc
push
orl
xchg
aad
add
xchg
push
push
or
cld
lea
cmpsl
and
jnp
cmc
or
pop
push
rcrl
jne
mov
iret
daa
mov
push
pop
aam
fdivr
scas
dec
cld
rorl
imulb
rcrb
sbb
inc
mov
in
icebp
scas
inc
adc
rcll
lock
pop
and
outsl
addr16
sub
adc
in
in
xor
stc
sbb
xchg
into
push
test
jnp
out
arpl
add
scas
cmp
mov
in
insb
cmp
movsl
scas
sarb
or
pusha
jnp
movsb
in
test
sub
xor
inc
mov
xor
pop
sub
and
gs
int3
or
dec
mov
jg
fdivr
add
add
lods
and
push
jmp
push
inc
jne
outsb
sbb
sar
xchg
stos
mov
xor
inc
fnstsw
mov
inc
cmc
roll
in
stc
ja
sub
xchg
and
add
roll
inc
sub
pop
pop
sub
cltd
pop
jg
push
aaa
sub
sbb
xor
movsb
daa
icebp
jnp
xchg
icebp
fs
pop
cmpb
mov
lret
out
scas
mov
mov
push
push
pop
sub
push
pop
fldenv
fs
cmc
cmc
xor
ret
fistps
xor
sub
mov
sbb
xor
xchg
bound
sbb
lret
int
mov
mov
inc
xchg
jno
or
or
dec
sahf
into
jmp
pop
push
sbb
sbb
imulb
dec
in
cmp
fists
jmp
shll
leave
fbstp
loopne
out
dec
add
sti
and
cmpsb
iret
push
pushf
pop
incb
and
cmp
out
mov
mov
ds
psubsb
jecxz
cmp
mov
xchg
loope
xchg
mov
fs
sbbb
stos
nopl
cmp
stc
sbb
jns
jecxz
loop
add
mov
cmp
daa
mov
xor
and
or
test
arpl
lahf
sub
pop
mov
lock
ds
add
jns
sbb
inc
bound
dec
jg
jecxz
xchg
jge
pop
nop
pop
je
dec
fists
orl
cmp
repz
jmp
fsubs
jae
std
xchg
pop
mov
faddp
xor
sbb
sub
ret
mov
sbb
cli
jmp
testb
and
xor
out
and
jl
adc
sub
aaa
sbb
sub
out
js
scas
in
inc
xor
cmp
add
ret
ss
sub
mov
in
jae
aaa
xchg
scas
hlt
lods
aad
mov
and
mov
into
outsl
std
ret
cmp
add
adcl
cmpsb
bound
outsl
cltd
pop
mov
scas
push
sti
dec
lret
sub
nop
dec
add
test
xchg
xor
dec
test
aas
ljmp
and
outsl
ret
cmpsl
adc
inc
push
cmpsb
xchg
add
frstor
outsb
int
jnp
dec
adc
push
mov
pop
jno
mov
outsl
les
jo
or
cwtl
mov
sbb
lahf
ja
xor
mov
fcomi
cmpsb
xchg
inc
mov
mov
rolb
push
sahf
into
movsl
cli
cmp
jo
icebp
movsb
adc
cmp
cwtl
pop
add
push
push
push
out
out
sbb
cmp
xchg
mov
lds
dec
cltd
cld
cmc
xchg
out
push
jg
outsl
mov
mov
clc
push
xor
xor
aas
jno
xchg
dec
js
xor
mov
fwait
not
add
jns,pn
mov
ss
stos
popf
mov
jp
or
and
mov
push
leave
mov
in
mov
lret
push
sbb
inc
ret
into
cmp
sub
movsb
xor
or
or
cmp
xor
sbb
jl
inc
jge
push
lds
xchg
sbb
lods
pop
int3
add
negb
xchg
pop
mov
dec
negb
xchg
in
and
rcrl
lret
dec
in
les
ss
mov
xor
fstp
lds
jmp
or
xchg
int
xor
adc
aas
dec
mov
and
imul
mov
ret
adc
in
fimull
cmp
mov
ds
dec
xor
arpl
push
dec
cli
enter
and
ret
xor
aad
push
jne
push
sbb
jmp
adc
ds
adc
mov
test
mov
loop
pop
inc
xor
and
cmc
cs
mov
in
push
aad
sbb
pop
movsb
jmp
sbb
mov
dec
enter
mov
push
cmpsb
sahf
ret
jne
out
test
sub
mov
jbe
xor
rorl
lret
scas
int3
and
push
pop
lods
mov
mov
mov
sub
mov
pop
jle
jnp
iret
inc
loopne
mov
push
out
loopne
xlat
jl
das
pop
and
xchg
popf
ss
adc
jmp
out
pop
jb
fucomi
out
lahf
hlt
pop
leave
cmpsl
sbb
or
or
ss
test
negb
push
les
outsl
jg
adc
mov
addr16
dec
sbb
inc
pop
inc
loop
inc
xchg
mov
je
mov
lods
dec
in
jnp
mov
sti
push
repnz
pop
mov
inc
or
popa
or
outsb
fnstenv
jnp
mov
test
jae
mov
xchg
hlt
xor
and
and
or
lcall
xchg
rcll
outsl
pop
xchg
xchg
jae
pop
iret
rclb
insl
mov
push
xchg
xchg
mov
add
mov
fisttpl
add
in
fs
jge
xchg
stc
mov
inc
fstps
sbb
inc
and
lods
rolb
xor
pusha
mov
pop
fwait
loope
add
test
pop
imul
xchg
test
pop
movsl
repnz
pop
mov
mov
mov
ljmp
outsl
insl
mov
mov
sti
mov
mov
int
cmpsb
test
scas
push
fstpl
cwtl
mov
fnstsw
fidivl
enter
sbb
jmp
jg
inc
pop
push
mov
dec
dec
scas
ljmp
lods
inc
sbb
loope
stc
test
movsl
jp
cwtl
jg
add
jbe
xlat
test
rorb
shl
xor
fs
call
je
shrl
push
xchg
push
outsb
fwait
lahf
ret
movsl
jbe
pushf
jb
jns
mov
cmc
out
test
cmp
and
xor
cmpsl
mov
imul
out
icebp
cmp
rorl
ljmp
jo
aam
xchg
call
stc
dec
dec
gs
mov
xlat
xchg
add
ja
pusha
outsb
mov
in
inc
adc
mov
cltd
xchg
xchg
imul
data16
lahf
xchg
xchg
mov
fnstsw
jl
dec
clc
sti
push
out
into
dec
and
and
cmp
mov
lea
mov
add
xchg
out
fcoml
lods
xchg
adc
rcl
mov
pop
test
pop
sbb
and
mov
int3
and
rolb
jecxz
or
dec
inc
cmpsl
xor
adcb
dec
iret
mov
insb
ret
lret
nop
inc
dec
add
jmp
adc
pop
fsubs
fcom
xchg
ljmp
std
cmp
pop
and
mov
mov
leave
xchg
pop
jg
xchg
mull
fisttpl
aaa
mov
xchg
cmp
fdecstp
cmc
push
sub
subl
mov
aaa
xor
xor
adc
je
jo
aas
leave
gs
scas
mov
add
push
mov
and
adc
sub
or
adc
lods
xorb
daa
pop
push
xchg
arpl
xchg
in
test
pop
inc
push
sbb
subl
push
test
stos
frstor
and
imul
in
imul
je
cmc
sub
fisttpll
mov
mov
add
mov
pop
sbb
xchg
xchg
ss
xor
lcall
aam
std
and
mov
roll
sub
or
in
add
xor
loope
and
clc
push
cmpsb
push
loop
lahf
adc
xor
mov
sahf
push
dec
pop
dec
mov
fmul
in
push
dec
cli
int
dec
repz
sub
jmp
push
inc
hlt
das
pusha
inc
jns
lods
xor
fsubrs
movsl
jnp
les
nop
inc
int
pop
dec
roll
xchg
inc
pusha
push
push
pop
cmp
xor
fidivrs
pop
mov
inc
rcr
cmp
mov
inc
int3
xor
sbb
push
in
popf
lds
jg,pn
sbb
fnstcw
jle
gs
lea
nop
jmp
push
or
jb
pop
dec
cmp
dec
add
pop
push
movsl
jle
mov
inc
sbb
xchg
xchg
or
daa
and
sbb
xchg
pushw
stc
mov
loope
lahf
cld
mov
mov
dec
and
inc
mov
lods
bnd
cld
xor
pop
dec
inc
movsl
pop
mov
pop
add
push
je
inc
setle
in
ss
pop
cmp
inc
gs
repz
daa
lahf
adc
lods
xchg
sub
xor
pop
in
and
push
mov
mov
repz
test
xchg
loopne
sub
dec
or
push
mov
movsl
cmp
mov
cmp
test
imul
push
inc
int
call
lock
sbb
ljmp
lahf
out
jb
adc
jge
aam
jl
mov
ja
and
xor
mov
fimuls
mov
call
adc
pusha
and
sarb
out
std
cmp
test
in
mov
mov
cld
xchg
dec
lret
cltd
mov
aad
lcall
push
cmpsl
shlb
mov
sub
jg
and
sub
dec
xchg
push
cmp
jmp
and
push
and
fistpll
mov
icebp
mov
sbb
pop
push
das
fcoms
add
inc
inc
icebp
jg,pt
filds
sub
push
add
ljmp
dec
jge
rorb
push
scas
mov
sub
xor
jmp
jmp
sub
in
data16
loop
and
fadd
fsubs
icebp
inc
loopnew
xor
mov
shlb
int3
mov
fnstenv
imul
das
test
push
nop
or
jecxz
je
mov
xchg
jbe
into
adc
scas
cmp
or
push
mov
shrd
dec
cmp
jbe
pop
fwait
out
cld
dec
dec
cmp
or
jno
xchg
mov
jp
and
jmp
add
sub
adc
pop
shr
jne
xchg
dec
lods
pop
shll
fimull
jge
xchg
lods
sbb
lcall
inc
stc
icebp
jp
and
xor
enter
and
push
inc
xchg
mov
pop
mov
sbb
popa
dec
cmp
mov
mov
cmp
inc
mov
push
and
pop
xlat
add
jnp
cmp
pushl
ret
jl
dec
aad
test
fsub
pusha
xor
out
das
mov
fimull
sbb
lahf
mov
scas
pushf
repnz
jl
inc
fidivrl
lods
jle
imul
fcmovbe
cmp
cmp
imul
mov
pop
jl
jl
jns
jge
or
mov
shr
pop
sub
cmp
leave
nop
loope
mov
add
mov
cltd
loop
push
inc
dec
enter
cltd
in
or
imul
rcr
idivl
dec
lcall
fisttps
adc
mov
lcall
loopne
or
mov
bound
out
mov
dec
pushf
push
into
and
cli
fdivrs
das
add
add
pop
push
in
pop
pushf
pop
adc
or
sub
fnsave
jne
lahf
dec
daa
adc
int
pop
mov
jl
or
sbb
xchg
mov
cmp
sbb
adc
lock
icebp
jb
repnz
xchg
lods
push
shll
and
out
icebp
push
leave
cld
push
imul
mov
test
mov
mov
adc
or
jo
clc
dec
mov
dec
add
pop
sbb
sub
mov
xlat
mov
repnz
popa
xor
cmp
add
or
cmp
cmp
and
pop
fs
xchg
sbb
jmp
int
push
mov
imul
scas
in
dec
add
lods
js
sub
int
sti
ss
das
adc
shll
push
fbstp
movb
scas
jnp
jnp
cs
mov
cld
xor
iret
pop
notl
data16
mov
scas
xor
sub
pop
rorb
dec
mov
add
xchg
and
lea
mov
inc
mov
mov
ljmp
mov
mov
pop
testb
mov
shl
inc
inc
daa
sub
aaa
bound
inc
sub
jp
ja
jae
mov
xchg
pop
mov
popf
in
int
mov
sbb
popf
rolb
icebp
js
dec
pushf
jge
mov
mov
std
mov
inc
imul
or
push
rcrb
lds
xchg
ds
dec
pop
cmpsl
mov
addr16
into
sahf
hlt
nop
and
add
test
mov
pop
cmpsb
rcrb
cmp
aam
mov
sub
fucomip
fsubs
pop
mov
xlat
nop
and
xchg
pop
add
insl
arpl
in
dec
cld
push
jns
js
mov
push
bound
jns
sub
mov
out
stos
mov
and
mov
fcoml
loopne
mov
imul
push
frstor
pop
fwait
sarl
cmp
and
pop
loope
xchg
loope
add
bound
dec
movsb
stos
insb
fdivrl
aaa
mov
lahf
gs
inc
cmpsl
fidivrs
push
daa
add
aas
and
addr16
pusha
cs
xor
add
sub
jp
test
decl
cmpsb
mov
inc
fcmovnu
sub
add
pop
cmc
cmpsb
pop
xchg
dec
mov
mov
outsb
clc
in
xchg
out
sub
inc
stc
pop
jmp
cmc
and
xor
insb
mov
inc
cmpsb
stos
out
sbb
mov
or
or
repnz
cmp
es
lods
stos
dec
inc
outsb
adc
adc
xor
mov
push
pusha
sbb
jno
ja
fisubrl
jno
cltd
lcall
adc
pop
pop
ds
adc
insb
sub
out
and
sub
pop
aas
adc
adc
sbb
outsb
or
or
imul
push
scas
test
mov
xor
shrb
into
ljmp
imul
fistpl
shrl
js
cwtl
add
out
es
and
cmpl
stos
xchg
fldcw
jp
clc
sahf
insb
aas
push
and
jne
nop
mov
jnp
scas
fidivrl
add
add
adc
pop
pop
dec
or
inc
mov
add
add
aam
lods
mov
mov
daa
out
jbe
cmpsl
lock
addl
push
hlt
or
sti
dec
cli
sti
hlt
ja
movsl
jno
jne
xor
cld
mov
mov
mov
add
xor
sbb
and
cmp
outsl
or
popaw
test
into
pop
ds
push
insb
sti
push
outsb
pop
lret
shl
les
imul
push
cmpsl
push
std
dec
pop
mov
mov
xor
sub
and
add
xchg
adc
loop
cmp
inc
inc
sbb
dec
inc
lahf
sub
mov
inc
rorb
xor
jp
jae
loopne
cmpsb
cs
loop
adc
cmp
dec
xchg
cmpsb
out
push
push
adc
xchg
outsb
mov
add
and
jae
mov
inc
inc
xchg
push
inc
pusha
fcmovnb
inc
aas
lds
mov
fdivrl
xchg
addr16
mov
pop
jo
push
mov
push
test
xlat
jecxz
lea
xlat
fiadds
cld
xchg
jne
stos
xchg
movsl
dec
cmp
inc
ficoml
rcll
xor
int3
iret
ret
movl
jmp
pushf
movsb
lods
jae
jl
daa
movsl
mov
movb
scas
inc
dec
dec
push
sub
aad
sbb
push
adc
stos
add
into
dec
fiaddl
jp
bound
mov
or
adc
cmp
test
jno
xchg
jge
xchg
sbb
inc
mov
lods
xchg
out
sub
lcall
jecxz
and
cwtl
inc
cmpsb
ret
sarl
push
in
sub
mov
leave
mov
movsl
jno
cld
xchg
ds
adc
jmp
mov
sbb
sbb
loop
adc
push
xchg
or
stos
push
or
fisubs
and
xor
jecxz
mov
fld
inc
cmpsb
jmp
sti
stc
fs
aam
mov
shrb
fisttps
lea
ret
mov
insl
js
cmp
ja
aad
inc
repnz
out
das
xor
adc
jle
inc
call
xchg
push
dec
fidivrl
mov
lods
inc
dec
jne
cmp
xchg
mov
add
mov
mov
or
inc
ss
hlt
cmp
push
aaa
jbe
notb
mov
lret
dec
push
add
lret
sbb
push
sti
xchg
jge
cmpsl
test
cmp
xchg
lret
stos
mov
xchg
int
fs
sub
out
rcl
inc
dec
test
sub
ja
repz
cmpsl
andb
mov
cld
cltd
iret
inc
cld
and
mov
setge
pop
xor
aas
cwtl
xlat
sub
xchg
and
fldl
frstor
ss
jle
push
daa
dec
loopne
mov
stc
aad
cmpsb
out
in
mov
data16
xor
or
insl
es
sub
out
repnz
cwtl
cmp
pusha
lret
xchg
lret
popa
pop
aaa
mov
call
ljmp
and
pusha
mov
pop
out
in
push
mov
dec
add
sbb
cmpsb
push
sbb
mov
sbb
mov
and
dec
dec
cli
inc
xor
mov
sub
xor
xchg
lahf
es
and
iret
imul
xchg
push
pop
mov
sub
xor
int3
push
in
cwtl
aaa
inc
rorb
outsl
orl
and
stc
xchg
shr
mov
push
jge
daa
mov
test
xor
inc
push
xor
mov
repz
sbbl
addr16
push
cltd
mov
nop
adc
addr16
jo
rol
out
fisubrs
mov
insb
or
pushf
add
dec
mov
sbb
or
sbb
jnp
incl
mov
lods
test
xor
js
add
mov
adc
ljmp
inc
in
fcoms
and
add
rcrb
fidivs
jae
test
mov
pop
inc
sbb
ja
xor
fisttps
repz
sbb
cmp
nop
cmpsb
sarb
add
loope
in
or
cmp
lods
push
mov
iret
jl
jle,pt
xor
adc
cmpsb
shrb
cld
inc
insb
pop
dec
test
mov
bound
loopne
sbb
pop
movsl
mov
ds
dec
inc
inc
clc
jl
xchg
daa
lcall
inc
stc
movsl
mov
ret
jl
mov
movsl
sbb
fcoms
mov
aad
lea
mov
push
push
test
adc
fldt
inc
lret
and
sub
mov
mov
sub
sub
lcall
cmp
dec
fistpll
push
bound
cs
inc
mov
jmp
fcmovb
mov
fnsave
insl
sub
aad
out
and
dec
push
sub
leave
sbb
pop
das
test
inc
lret
sub
insl
dec
mov
insl
adc
inc
adc
cmpsl
nop
mov
xchg
cwtl
jo
test
ret
fdiv
xchg
les
outsb
shrl
push
xlat
jg
xchg
das
cld
push
test
jge
dec
fwait
cmp
ret
jae
imul
jg
fdivrs
dec
push
fcmovnu
test
adc
lahf
aaa
adc
mov
test
enter
add
mov
mov
ret
clc
sub
mov
scas
in
in
test
pop
xchg
ja
add
sbb
pop
dec
stos
loopne
or
inc
add
stc
ljmp
loop
mov
cwtl
stos
mov
and
fimull
inc
imul
fldcw
push
mov
xchg
and
das
push
mov
jns
jo
shl
jno
ret
jnp
ja
dec
xchg
movsb
into
arpl
mov
sarb
data16
mov
clc
inc
mov
lret
sub
in
ret
test
lea
jo
mov
dec
test
call
popf
hlt
mov
jnp
imul
mov
lock
inc
lea
cmp
mov
mov
getsec
data16
dec
xor
pop
xchg
push
add
insl
ja
aaa
popa
lret
icebp
mov
mov
pop
bnd
pop
jmp
inc
loope
push
xchg
ret
sub
or
adc
mull
out
loopne
hlt
jae
xor
lcall
xchg
fadds
push
add
cmpl
mov
cmp
lret
jo
mov
lea
outsb
loopne
xor
cli
idivb
pop
push
orb
fldenv
add
pop
fs
test
mov
mov
and
mov
ljmp
sbb
sarb
sub
shrb
incb
push
sbb
sub
mov
xor
jns
push
out
mov
or
lea
cwtl
jmp
pushf
jno
adc
decb
loop
mov
pop
push
adc
sub
jecxz
in
es
jp
or
mov
and
sarl
sub
push
add
ljmp
lods
lret
push
loope
cvtps2pd
test
pop
dec
jae
test
xchg
fcomps
in
out
loope
and
ret
mov
imul
cmp
add
aam
push
fstpl
imull
pop
in
or
fisubl
xchg
mov
xchg
sbb
movsl
icebp
cmp
jp
call
call
or
pushf
push
jns
xchg
dec
cmpl
dec
and
xchg
mov
stos
lods
inc
sbb
xorl
mov
jmp
enter
ljmp
lea
adc
es
cwtl
enter
sarb
xchg
insb
loopne
and
rcrb
ret
sbbb
enter
jo
jb
aaa
xchg
test
sbb
orb
movd
shl
jmp
dec
pop
sub
push
cmp
add
cmp
or
repz
mov
inc
mov
movsl
dec
pop
xor
add
lahf
daa
test
mov
push
gs
pop
icebp
inc
fcoml
or
outsl
fndisi(8087
das
cmp
and
ss
pop
loopne
inc
ficompl
cmpsb
add
push
dec
jb
stc
xchg
mov
repnz
ret
mov
iret
rcll
push
jbe
xchg
add
push
cli
dec
jp
jae
mov
xchg
test
sbb
test
lahf
add
leave
push
sahf
test
test
test
nop
bound
out
fstp
and
pop
adc
adcl
stos
sbb
inc
xlat
ret
or
push
sub
mov
dec
xor
test
dec
jecxz
adcl
inc
mull
insb
scas
mov
push
or
adc
sbb
out
shrb
iret
and
stc
jns
inc
mov
push
negb
adc
dec
add
rcll
movsb
aam
jns
mulb
fstps
and
fmull
xor
pop
int
lret
sahf
jp
cmp
cmpsl
out
and
enter
loop
push
rcl
scas
mov
mov
pusha
test
pop
pop
pop
xchg
call
ret
cmp
xchg
test
jo
rcl
dec
cmc
mov
ljmp
sub
int3
jl
jae
sbb
test
lods
sti
roll
lods
movsb
and
push
sbbb
faddl
inc
rolb
lahf
out
cltd
outsl
mov
xchg
inc
hlt
jne
adcb
adc
mov
inc
push
inc
outsb
aam
repnz
dec
jne
push
out
loopne
les
cmp
sbb
adc
push
mov
inc
adc
xor
push
fadd
mov
add
in
pushf
xchg
and
dec
adc
arpl
sbb
out
inc
fcoms
lret
dec
gs
fninit
out
adc
dec
rcl
cmp
mov
or
lods
adc
movsl
ret
aam
push
pop
sub
clc
test
sbb
pop
jns
popf
pop
dec
loope
cld
xlat
stc
js
and
aas
jg
pop
cmpsl
inc
and
add
lds
push
pop
stc
mov
sub
fldenv
clc
adc
jne
mov
testl
lods
push
mov
xchg
push
das
adc
adc
mov
mov
gs
mov
mov
roll
mov
rolb
aaa
sti
xchg
imul
cmp
repz
xor
popf
mov
ret
sbb
cmp
lret
sub
dec
imul
jg
sbb
cmp
sbb
push
jg
inc
xor
aam
and
push
sub
and
shlb
add
push
ror
push
add
adc
dec
out
jmp
jbe
cmc
fnstenv
out
push
ss
sar
dec
and
mov
push
add
mov
lcall
ljmp
dec
xor
adc
mov
int
lods
stos
gs
adc
jae
fsubl
arpl
sarb
pop
mov
xorb
xchg
push
xchg
div
pmuludq
test
push
jmp
inc
dec
scas
add
ficoms
pop
clc
loope
mov
stc
orps
mov
inc
push
jne
out
xchg
sbb
outsl
loop
adc
int3
arpl
dec
pop
iret
enter
cltd
push
out
or
xor
out
in
adc
push
enter
sbb
jno
mov
arpl
xchg
and
shrl
add
repz
pushf
jl
adc
insl
sbb
pop
hlt
flds
adc
sub
out
mov
push
and
repz
push
sub
pop
neg
int3
mov
adc
or
adc
jmp
add
push
sub
das
and
sbb
xor
insl
push
push
inc
cwtl
ja
stc
inc
mov
mov
popf
aaa
mov
adc
addl
sub
in
push
mov
out
std
pop
pop
and
jne
sbb
pop
fs
in
cs
int3
xchg
jecxz
xorb
mov
fdivrl
dec
loop
mov
sbb
stc
pop
sbb
xor
enter
ja
mov
insb
and
cmp
dec
xchg
pop
mov
lock
mov
inc
sbb
inc
or
cli
sahf
shrl
and
sub
push
fwait
jbe
nop
push
out
pop
cmpsl
push
ljmp
push
push
imul
pop
pop
cwtl
mov
cmp
or
cmp
ljmp
xor
sbb
mov
sbb
cmp
xor
mov
jnp
inc
sbb
lds
dec
arpl
or
sbbb
sbb
pusha
lods
in
cmpsl
mov
popf
add
in
mov
addr16
pop
cld
xor
fildl
mov
adc
jl
xor
lret
mov
in
mov
addl
mov
jl
adc
cmp
dec
push
push
cmp
push
iret
repz
mov
mov
sub
lods
ret
add
and
mov
jnp
jo
jae
push
leave
cmp
adc
nop
jnp
dec
in
inc
mov
inc
in
jb
in
out
pop
xor
push
jnp
sbb
pop
mov
dec
inc
sbb
push
push
insl
or
xor
call
mov
pop
mov
hlt
mov
cli
out
push
ljmp
lods
mov
dec
xchg
sub
adcb
sbb
inc
pop
fdivrs
loop
outsl
sbb
pusha
push
outsl
stos
push
xchg
repnz
and
das
test
loop
test
mov
lods
subb
fcomps
inc
push
out
lods
adc
call
jne
and
or
aad
push
movsb
fwait
ss
and
pop
ret
xor
push
cmp
adc
es
xor
in
push
fwait
call
loop
testl
call
shrb
add
leave
add
xchg
mov
push
stos
mov
js
mov
dec
jns
mov
mov
enter
icebp
cli
and
stc
imul
iretw
push
mov
adc
jecxz
mov
fsubl
add
cmp
aaa
pop
mov
dec
mov
inc
pop
in
xchg
push
dec
iret
push
pop
rcrb
push
sbb
mull
mov
popl
adc
adcl
mul
adc
mov
pop
fdivrl
push
mov
dec
inc
add
lret
and
sub
pushf
shlb
into
ficoms
rolb
adc
out
in
arpl
xor
std
mov
es
push
and
mov
mov
mov
out
outsl
or
stc
jae
xor
pop
decl
xor
pop
sub
bound
dec
fbld
lea
int3
test
push
addr16
xor
dec
xor
aaa
js
or
lock
dec
lods
out
pop
xor
jno
lods
imull
lret
mov
xchg
sbb
movsl
jno
add
add
lods
xchg
or
inc
and
out
js
inc
mov
xchg
and
inc
add
inc
jae
mov
jo
aam
fdivl
dec
andb
ret
fwait
adc
mov
ja
jo
mov
jmp
or
nop
fwait
mov
mov
mov
add
addr16
cmp
inc
push
std
ja
hlt
out
hlt
incb
xlat
sub
dec
pop
mov
imul
dec
pop
xchg
cmc
and
bound
xchg
mov
add
sbb
dec
xor
mov
ja
xchg
sti
mov
inc
ja
add
push
fiadds
pop
pushf
push
subb
fadd
pop
pop
mov
sub
dec
ja
dec
mov
cmp
mov
arpl
in
mov
cltd
sahf
popa
push
jg
pop
js
mov
aaa
mov
ja
xchg
stos
push
mov
rclb
mov
leave
test
adc
imul
subb
dec
pop
xchg
and
mov
stc
xchg
pop
or
jb
add
in
scas
jg
dec
andb
arpl
inc
add
or
dec
dec
data16
leave
cli
xor
jg
shr
mov
js
push
lea
dec
divb
dec
mov
lcall
jb
fwait
popa
push
cs
jbe
inc
sbb
lahf
iret
or
jno
xchg
xchg
pop
xchg
and
or
mov
ljmp
mov
cmpsb
cmp
push
push
xor
sbb
je
imul
push
and
test
mov
movsl
jae
sahf
add
scas
push
cld
mov
ret
loop
cli
push
ficompl
lock
imul
loope
and
mov
insb
inc
pop
xchg
push
inc
pop
lret
jl
cmp
cwtl
jbe
lea
xor
imul
imul
push
cmp
notb
cs
in
andb
and
ja
int3
cmp
xchg
mov
mov
xlat
xor
icebp
fisubs
mov
aam
mov
cmpb
push
ja
sub
dec
xchg
sbb
adc
mov
push
stos
mov
cmp
xchg
add
arpl
mov
cmpsb
fwait
ret
adc
jmp
and
cmp
mov
icebp
adc
sarb
ss
cltd
rorl
lods
mov
es
lret
cld
mov
adc
rcrb
frstor
xchg
sub
pop
cmc
jno
test
or
inc
js
xchg
out
ret
addr16
and
xchg
imul
pop
push
jae
cwtl
push
sub
insb
rolb
cs
add
pop
cld
mov
hlt
pop
test
and
xor
push
mov
test
sbb
dec
or
cmpsb
dec
pop
repnz
scas
mov
mov
cld
cs
imul
out
add
pop
imul
and
and
or
mov
cmp
xchg
add
xlat
push
xor
xor
pop
and
cmp
aam
jg
jl
sbb
push
or
aas
sub
or
lret
negl
xor
insl
ret
add
enter
clc
jb
jne
pop
movsl
popf
adc
cs
loop
xchg
lock
or
mov
add
or
cmp
xchg
fcmovnbe
push
mov
pusha
dec
pop
loope
dec
ja
pushf
dec
outsb
in
mov
inc
data16
iret
cmc
cmc
enter
fildl
sbb
sbb
and
pop
ja
xchg
mov
xchg
xchg
pop
loope
mov
inc
out
jge
pop
dec
iret
test
stc
xor
inc
push
xlat
xchg
push
icebp
or
cmpsl
pop
sub
or
fadd
mov
cmpsb
add
cmp
fstpl
jge
sbb
decb
lret
inc
push
mov
mov
pop
push
test
xchg
out
call
mov
push
and
popa
cmpsl
xchg
xchg
mov
fsubrs
cmp
pop
xor
inc
ret
fistpl
ljmp
jns
push
dec
mov
js
lcall
dec
jecxz
std
decb
mov
pop
ja
fldl
mov
xor
jp
or
add
mov
and
jbe
xor
push
clc
imul
shrl
add
inc
inc
fbld
les
jmp
pop
test
cld
ret
adc
in
ss
bound
test
sub
es
mov
addl
xchg
mov
cli
add
push
mov
sbb
push
fldl
xor
rcrb
popf
xchg
mov
cmp
sbb
mov
out
imul
pushf
shrb
and
pop
fsubrp
call
wrmsr
pop
hlt
cmpsl
mov
lods
fs
outsb
lcall
loope
pop
inc
cli
jge
pushf
addb
pop
push
aaa
lret
jecxz
out
les
hlt
push
ss
add
fidivl
int3
cmpb
dec
out
adc
inc
popf
sub
jle
jecxz
mov
sub
jae
mov
int3
ja
dec
ss
pop
mov
xchg
mov
inc
push
inc
xlat
iret
pop
pop
fldenv
scas
pop
je
icebp
jmp
pop
pop
lea
sbb
mov
idivl
mov
or
movsb
clc
xchg
xchg
sti
sbb
push
mulb
out
jno
sub
notb
cld
adc
xchg
sub
push
imull
testb
hlt
inc
and
popa
xorps
imul
cmpsb
sub
cmp
lods
inc
mov
dec
push
jmp
cmp
pop
aad
jne
test
sub
pop
add
dec
adc
jecxz
out
mov
leave
and
cs
enter
xor
shlb
dec
mov
jnp
mov
fldenv
sti
les
int3
sub
sub
dec
out
cld
sti
repnz
mov
push
or
cmp
mov
jbe
out
push
jnp
adc
xchg
pusha
and
les
inc
push
add
sbb
inc
and
adc
lcall
enter
mov
jno
mov
sub
mov
sub
mov
movsl
sbb
sub
psllw
push
leave
fildll
int3
imul
int3
sbb
test
xchg
mov
outsb
ja
pop
out
pop
xchg
dec
lock
cwtl
jg
pop
xor
ljmp
add
adc
nop
push
adc
jmp
shll
push
jno
mov
sub
sub
xor
jno
mov
jbe
test
push
xchg
aas
lds
jae
xor
fisubs
aam
xchg
add
or
mov
jno
sbbl
adc
mov
inc
pusha
movsl
scas
scas
addr16
and
das
push
cli
xlat
enter
mov
pushf
xor
hlt
test
je
jmp
add
filds
repz
mov
jns
jne
test
repz
insl
in
movsb
mov
cltd
rcll
fmulp
test
push
in
adc
jbe
adc
mov
inc
jle
std
in
pop
push
xchg
xchg
sbb
jl
les
xchg
pusha
pop
adc
aas
push
fistpll
stos
adc
rclb
push
or
out
cmp
sbb
mov
loope
scas
mov
adcl
lds
rorb
les
and
stos
push
cmp
mov
flds
dec
ficoms
cmp
fistpll
divb
jmp
jno
cltd
mov
adc
out
sahf
jmp
sub
popl
rcll
jb
add
pop
jne
aas
cld
ds
popa
and
popa
imul
stc
pop
pop
sub
int
pop
fs
adc
cmc
fimull
dec
in
fsubrs
enter
out
test
arpl
imul
mov
cli
ljmp
js
les
fistl
stos
xchg
in
ret
mov
leave
aas
pop
data16
lahf
outsb
push
outsb
dec
jl
sbb
out
sti
xchg
inc
gs
popf
sub
jl
cmp
jecxz
icebp
xchg
repz
fldl
pop
hlt
push
popa
fidivl
dec
sbbb
movb
or
pusha
lret
pop
xor
hlt
jae
call
or
decb
jmp
jo
inc
test
mov
inc
aam
mov
and
inc
pusha
sbb
ja
xchg
xchg
push
aam
enter
cmpb
aam
pop
sub
or
inc
rcrl
xchg
out
pop
lcall
pop
jne
sbb
cmp
inc
push
movsb
cmpsl
push
jbe
pushf
cmp
sub
arpl
loope
pop
adc
repz
aad
pusha
push
xor
cli
xchg
mov
jecxz
test
push
shr
dec
adc
inc
movsb
lret
les
adcl
push
imul
xor
ds
sti
inc
pusha
jge,pt
fidivrl
push
xchg
jl
mov
das
and
out
adc
jg
add
mov
nop
push
fisttpll
jno
adc
pop
sub
shrb
daa
das
push
jg
cli
std
mov
mov
faddp
dec
mov
std
sbb
cld
add
ret
mov
fnstsw
jp
das
xor
inc
out
xor
dec
pop
dec
into
fistpll
jmp
pop
and
xor
sub
dec
out
clc
or
or
fcoml
pop
mov
aas
sbb
enter
popa
daa
push
pusha
scas
lcall
jb
xor
cmp
or
fincstp
lahf
fcomps
add
xor
inc
add
xor
jb
adc
jno
mov
add
jg
jne
fwait
xchg
jecxz
xor
addr16
test
sbb
icebp
shrb
sub
dec
mov
test
dec
add
faddl
mov
pop
dec
cmc
imull
jb
xchg
ja
cmp
mov
shrb
dec
cmpsl
pop
es
jle
jnp
ret
ja
mov
push
imulb
jp
ljmp
or
xchg
leave
in
pop
mov
mov
insl
lods
ds
xchg
dec
sbb
loope
test
int
mov
test
xchg
push
add
push
jo
arpl
xor
pusha
shlb
das
rol
xlat
jae
adc
mov
filds
xchg
xchg
push
shll
mov
ljmp
push
mov
mov
add
mov
mov
sbb
scas
ja
stos
mov
scas
repz
jecxz
clc
loopne
ret
jl
push
mov
and
xor
popf
mov
aaa
push
rcll
fcmovb
jmp
jb
ljmp
cmc
push
shrb
push
inc
inc
insl
out
sbb
dec
lods
pop
inc
outsb
cmpsl
jae
sub
and
rcrb
inc
call
adc
cmp
xlat
repnz
imul
xchg
mov
test
push
jno
icebp
out
xchg
neg
inc
add
pop
cmpsb
push
and
mov
into
sahf
sti
hlt
std
out
insb
cmp
cmp
xlat
iret
sbb
adc
cld
and
xlat
shll
testl
and
dec
addr16
lock
jns
jp
in
cwtl
xorb
cmp
dec
xchg
pop
xor
jb
add
aas
imul
repz
xchg
sub
inc
aas
fisubrs
xchg
push
mov
ret
lret
pop
leave
sub
outsb
sbb
js
out
jae
nop
or
sbb
pop
pop
ret
mov
inc
inc
sub
lea
jmp
loop
testb
inc
mov
jg
jl
in
sbb
insl
inc
stos
jne
pop
cmc
sti
mov
hlt
jecxz
sarl
adc
shl
mov
mov
sti
xchg
dec
std
testb
xchg
inc
or
movsl
dec
cmp
jp
clc
dec
loopne
pop
pop
mov
or
adc
and
cmp
pop
cmp
pop
fdiv
stos
dec
fwait
jge
rolb
sub
inc
clc
and
pop
mov
ret
es
push
dec
adc
je
lock
add
outsl
push
jo
cmp
test
cli
inc
lret
dec
adc
rolb
cmp
std
sbb
rorb
jmp
xor
dec
xchg
out
mov
sub
and
sub
xchg
out
adc
mov
sbb
xchg
arpl
enter
or
ror
loopne
dec
dec
sub
test
xor
das
xor
and
orb
stc
aaa
addl
mov
adc
push
push
mov
orl
bound
add
stos
cmp
fsubrs
clc
and
xchg
push
jne
fimuls
push
or
jmp
jle
xchg
pop
stos
jno
adcb
mov
lret
mov
inc
inc
nop
call
sbb
ss
jge
mov
dec
inc
stos
and
bts
loope
into
cmp
pusha
cmc
mov
adc
adc
cmp
mov
mov
test
jp
adc
mov
mov
push
je
xchg
push
fsts
dec
ret
pop
and
dec
xchg
mov
mov
pop
inc
es
int
js
sbb
mov
cmpsb
push
out
ds
xor
jle
sbb
inc
popf
dec
in
leave
push
sub
or
sub
repz
rorl
and
fxch
push
out
fwait
cmp
cmpsl
mov
arpl
cld
mov
in
mov
adc
lcall
aam
pop
movsb
push
popa
ss
mov
mov
push
std
pop
push
fidivrl
jmp
call
push
mov
push
pushf
aaa
movsb
out
adc
cmpsl
jnp
test
mov
add
or
es
jo
jnp
pop
xchg
inc
lock
sbb
gs
stc
push
popa
ds
pop
jg
dec
cli
lods
fchs
sbb
inc
fadds
jno
xor
jl
xor
add
adc
fsts
sahf
mov
addb
jne
xchg
xor
pop
imul
movsb
aas
lahf
sub
dec
or
sub
arpl
mov
stos
out
lret
insb
xchg
pop
fmull
jae
arpl
mov
jbe
push
js
je
sbb
xor
lret
mov
push
lcall
dec
push
scas
push
repz
bound
mov
stos
sub
filds
or
rcrl
cmp
and
gs
popf
add
iret
jmp
or
rorl
adc
sbb
add
xchg
test
fiadds
dec
jbe
les
push
jge
add
sbb
icebp
cmp
test
int3
and
cltd
sti
cmc
mov
jge
je
out
imul
mov
sbb
push
pop
insl
xor
sub
push
nop
jmp
pop
pop
adc
jge
mov
loop
add
fwait
movsl
add
mov
adc
pop
cmp
sbb
pop
test
sbb
mov
mov
icebp
inc
xor
mov
mov
mov
insb
mov
das
test
clc
test
dec
fldenv
adc
mov
mov
jnp
sbb
sub
jnp
testb
stc
or
cwtl
mov
ljmp
mov
push
jb
adc
adc
test
addl
cmp
xchg
inc
xchg
cmp
test
pop
aad
xor
cmp
dec
lds
dec
mov
fisubrl
lahf
inc
adc
dec
jl
pop
rorl
push
sbb
cmc
jno
mov
sub
leave
pop
sub
jmp
insb
jle
xchg
fists
cld
inc
je
nop
jb
jo
gs
lock
out
inc
mov
dec
pop
imul
repnz
fnsave
jb
lods
xchg
pop
inc
stc
sub
adcl
xchg
jp
aas
cs
fsubs
cmp
push
outsb
sarb
jbe
add
repz
inc
fs
popf
mov
xor
shll
cmp
sub
popa
cwtl
inc
dec
loop
nop
cmp
test
add
or
jo
adc
push
mov
lock
daa
sub
or
mov
sbb
nop
lcall
xor
push
and
shll
aas
cmp
xorl
test
out
pop
mov
cwtl
push
push
inc
movups
dec
in
rclw
adc
mov
or
inc
mov
loope
mov
ljmp
imul
cwtl
pop
push
jno
rcr
or
lcall
sub
adc
sub
test
add
add
fistpll
jmp
xchg
test
push
fnsetpm(287
and
inc
pop
inc
nop
mov
jo
ljmp
xorb
inc
ret
ljmp
roll
mov
sbb
pop
mov
and
movsb
xor
rcrb
int3
jecxz
inc
pushf
arpl
mov
lret
push
adc
mov
jns
jl
scas
jp
pop
sbb
lods
lahf
out
aas
pop
jg
std
dec
pop
hlt
sbb
jnp
jg
pop
arpl
cmpsb
xchg
sub
sbb
inc
lcall
push
cmp
outsl
sub
ds
stos
sub
out
mov
mov
inc
jle
and
adc
pop
dec
dec
movsb
push
sub
sub
test
inc
pop
xchg
lcall
aad
lret
cmpsb
movsl
aad
xchg
in
push
fisubrl
or
cmp
into
stos
xor
dec
mov
inc
cmp
mov
test
xor
inc
js
xor
sub
loop
cmpsl
dec
std
dec
clc
rorl
es
les
or
testl
sub
ficoms
mov
ds
pop
fmuls
scas
mov
ret
fstl
xchg
adc
xchg
jmp
out
shlb
test
xchg
sarl
push
enter
sbb
pop
pop
call
test
xchg
jp
mov
sub
aam
in
add
push
xchg
sbbl
in
and
push
xor
pop
sar
jnp
test
test
xchg
jl
lds
pop
push
add
mov
ret
inc
mov
dec
and
fstps
movaps
pop
loope
pop
mov
jnp
jmp
cmp
mov
sbb
int3
cmp
jecxz
push
out
mov
cmp
stos
mov
in
add
ja
outsb
in
mov
sbb
cwtl
jb
push
aad
movsl
pushf
in
adc
dec
mov
lret
gs
add
pusha
add
call
popa
movsl
pop
mov
shrb
nop
xchg
adc
std
jno
cltd
mov
rolb
ja
mov
or
cmp
jecxz
mov
push
dec
insb
adc
xlat
push
pop
jl
sbb
sub
inc
push
and
xchg
imul
int3
xor
test
ja
push
and
sub
xor
dec
movsl
imul
das
in
cli
pop
pop
cmp
incb
repz
dec
xchg
pop
int3
subb
lods
push
mov
out
loop
sti
leave
jg
pop
or
sub
inc
dec
call
xlat
or
mov
mov
xor
pop
sub
inc
clc
push
pop
add
out
fimuls
loop
mov
sub
dec
pop
push
jge
push
and
add
push
mov
out
mov
jno
and
pop
sarb
ret
sub
pop
repnz
je
mov
push
inc
inc
outsb
leave
dec
mov
stos
pop
out
lods
js
push
ja
ljmp
cmp
into
adc
jl
or
bsr
outsl
cmp
sbb
dec
jbe
test
ret
dec
fistps
sbb
lock
sbb
dec
inc
mov
push
aas
or
xorb
sub
fwait
outsb
jb
iret
in
mov
clc
imul
arpl
and
cld
mov
mov
push
push
xchg
fucomp
jle
dec
stos
lds
ss
mov
test
or
xor
jl
cli
packuswb
out
in
rcr
mov
cmp
fmull
adc
fwait
ret
pop
push
scas
and
cs
xchg
gs
and
add
lret
xchg
push
add
shll
inc
mov
fwait
dec
out
pavgb
jb
pop
scas
stos
adc
test
adc
xor
mov
arpl
movsl
lds
cmp
cmp
jno
loop
cvtpi2ps
xor
mov
andb
int
cmpsb
sbb
repz
adc
loop
add
pushf
cmc
or
in
shr
push
mov
mov
je
insl
lods
adc
dec
or
dec
inc
inc
lods
out
out
neg
fadds
cli
inc
insl
and
pop
ret
cltd
popf
fadd
mov
in
mov
inc
jae
je
inc
lds
jnp
push
pusha
stc
lret
mov
cmp
fildl
rorb
adc
insl
jno
mov
push
mov
adc
mov
std
fs
aam
mov
inc
jb
xchg
xchg
mov
rclb
scas
cmp
cld
test
fxch
xor
jl
in
fwait
pusha
lcall
aaa
lret
data16
fadd
pop
mov
add
add
sbb
push
in
xchg
movsb
cmp
mov
xchg
mov
xor
call
ficoml
sub
jo
adc
icebp
loop
rorl
mov
push
xchg
scas
in
add
xor
push
hlt
push
stc
mov
mov
fnsave
add
ljmpw
pop
mov
inc
les
inc
fadds
mov
pusha
xchg
adc
lds
ret
adc
cwtl
xor
fs
call
lds
ds
sbb
xchg
push
mov
repz
popf
mov
xor
das
scas
mov
scas
sbb
addl
cmpsl
adc
pop
push
scas
jnp
das
xor
popa
movsb
icebp
pop
arpl
adc
inc
xor
jns
int
push
fwait
mov
pop
insl
lods
push
mov
push
jle
dec
sub
test
cmpb
pop
mov
push
sbb
push
mov
lock
orl
in
into
dec
add
loope
jmp
pop
pop
adc
loopne
add
push
stc
mov
hlt
mov
int
daa
test
inc
and
adcb
xchg
loop
or
movsb
ja
cmp
jp
inc
mov
pop
add
mov
inc
movsl
movsb
sbb
add
mov
xchg
mov
push
cld
cmp
cmp
mov
pop
js
out
or
push
push
dec
xor
pop
dec
movsl
lfs
imul
mov
or
adc
push
or
aas
inc
insl
inc
mov
test
mov
inc
mov
fwait
cld
jns
in
adc
cmpb
adc
ds
addr16
jl
push
mov
imul
and
or
sti
nop
call
and
pop
inc
shll
fdivp
lea
sub
sbb
insb
aas
sbb
adc
push
cmpsb
push
push
jp
dec
mov
jbe
sti
mov
sub
mov
cmpsb
xchg
bound
js
pop
insl
sub
testl
ss
or
insb
inc
and
mov
idiv
mov
test
mov
lds
ljmp
repz
rcrb
in
loop
push
rcr
addl
jp
or
and
test
mov
xchg
movsl
rcrb
jg
into
mov
cwtl
sbb
cmpsl
xor
in
cmp
xchg
out
adc
mov
ficomps
push
push
add
insl
hlt
push
mov
ss
nop
mov
mov
cs
and
leave
lahf
or
test
cmp
test
stc
adc
lcall
mov
pop
ficoms
rclb
int
xchg
sbb
popa
test
fwait
adc
sbb
ficoms
dec
notl
ds
xor
stos
les
out
rcl
pop
mov
call
push
dec
xlat
mov
int
clc
dec
xchg
lods
in
shll
test
loop
lods
push
push
ljmp
bound
lret
sarl
jecxz
and
aas
imul
ficoms
mov
les
mov
cmc
jnp
or
mov
mov
lods
cli
fimuls
jnp
jne
add
or
push
stos
dec
cmp
xchg
movsl
aam
sbb
aad
and
push
lcall
sub
mov
cmpsl
imul
xchg
and
outsl
pop
ss
jmp
xorl
in
dec
movsb
xor
mov
fidivl
or
bound
inc
or
sbb
repnz
and
push
repz
jno
xor
dec
es
jne
out
add
fwait
sub
lods
push
and
out
push
sub
push
push
rorl
shl
jnp
cmp
xor
in
bound
pop
xchg
cmpsl
shrb
cmp
sbb
mov
loope
pop
ss
mov
xor
fidivl
inc
adc
pushf
push
into
lcall
jecxz
mov
jl
mov
fs
sub
js
pop
in
add
inc
jge
cmp
mov
or
xor
shrl
cld
jecxz
or
and
pop
cmc
xchg
dec
jbe
jmp
or
ja
into
dec
insl
arpl
mov
dec
jl
jbe
fsubrl
sub
xchg
jb
out
xchg
outsl
int3
shll
jecxz
rolb
int
movsb
inc
cmp
fstpt
sub
fists
insl
adc
xor
loopne
ret
mov
cmc
fisubl
cmpsl
andb
jbe
sbbl
in
jno
xor
push
mov
sub
repnz
and
pop
aas
inc
sbb
jp
lahf
xchg
ss
mov
sbb
push
sbb
mov
push
add
es
dec
xchg
mov
gs
enter
cs
pop
dec
lahf
dec
or
jle
sbb
clc
sub
insl
outsb
cmpsl
inc
dec
leave
out
and
int
sub
enter
adc
inc
ret
and
in
jle
push
mov
mov
cmp
push
push
out
pushf
jbe
push
je
pop
or
mul
arpl
ret
mov
shll
in
jns
cli
shrb
lret
lods
faddl
neg
mov
psrlq
int3
and
dec
jle
in
lahf
das
andl
aaa
fsubs
mov
jge
movsl
mov
inc
sub
cltd
in
mov
push
test
sub
lods
adc
lcall
or
in
adc
dec
movsb
cmc
shrl
mov
fs
into
xor
sarl
scas
ds
int
adc
andl
cmc
rcll
mov
sbb
add
js
inc
push
jmp
mov
test
jno
movsb
lods
jmp
inc
test
das
cmc
mov
sbb
and
hlt
inc
push
pop
push
insl
dec
int
dec
pop
js
mov
and
out
lods
mov
push
adc
std
inc
imul
shl
stc
mov
aas
or
aam
add
scas
inc
mov
xor
fbld
sub
sbb
xchg
and
add
in
mov
outsl
push
popa
jbe
bound
cmp
sub
jle
sti
dec
adcl
ffree
lcall
cmp
and
test
push
loop
mov
jbe
pop
push
xor
pop
xchg
test
xchg
pusha
inc
fs
inc
jl
aaa
aam
repnz
test
inc
mov
imul
mov
ja
pushf
jp
jg
inc
cmp
adc
push
inc
es
mov
cli
adc
add
inc
inc
ja
pop
mov
sub
pop
xor
mov
je
jno
fcoms
mov
lock
dec
dec
adc
and
mov
xchg
mov
xor
jo
pop
shll
add
int3
fmull
les
insb
test
mov
mov
and
cmp
cmp
add
pop
mov
mov
dec
cwtl
xor
dec
xor
mov
rorl
mov
test
or
fiaddl
cwtl
ss
sahf
sbb
mov
test
inc
loopne
popa
lret
aam
or
enter
addr16
xor
pop
data16
cwtl
mov
sub
sbb
js
xchg
inc
adc
mov
mov
cld
push
adc
mov
and
in
xchg
sbb
int
arpl
xchg
sbb
push
mov
push
dec
fmulp
jmp
mov
mov
fsts
adc
loope
ja
ret
enter
inc
pop
scas
fs
pop
cli
pop
imul
add
mov
inc
or
in
sbbb
test
dec
or
fdivrs
das
inc
dec
enter
mov
or
and
arpl
lods
pop
mov
pop
pop
jno
cli
ss
sbb
and
das
fisubrl
jmp
add
pop
aaa
jnp
and
scas
adcl
adc
aaa
pop
shll
mov
add
xchg
dec
arpl
mov
jnp
push
adc
cwtl
sti
insb
dec
inc
shl
mov
inc
sub
test
dec
push
sub
outsb
inc
xor
fstpt
imull
jns
mulb
test
adc
mov
cld
sbb
cmpl
or
es
pop
dec
xchg
pop
adc
ja
mov
pusha
add
imul
shrb
js
lods
movsl
inc
das
sbb
dec
mov
sub
mov
or
subl
pop
sub
ss
out
push
jne
je
add
insl
fisttpll
mov
mov
movsl
xchg
aaa
fldt
pop
loopne
stos
ljmp
add
iret
inc
fildll
xchg
je
sbb
or
xor
pop
rolb
dec
jo
jmp
push
inc
cmp
sti
inc
pop
dec
inc
into
push
insb
mov
xor
adc
adc
fnsave
cmp
xor
shrl
xlat
xchg
inc
xchg
mov
or
fsubrp
mov
fwait
lret
je
das
jbe
and
fldt
xor
mov
mov
jae
jmp
xor
push
xorb
ja
lds
pop
sub
in
inc
jp
aas
ds
jp
mov
add
and
mov
outsl
mov
adc
inc
fisubrl
push
xor
cmp
mov
xchg
stc
fdivrs
and
pop
sub
shll
add
adc
mov
and
es
mov
out
dec
jae
mov
cmp
rcrl
sbb
push
push
aam
clc
add
mov
pop
inc
add
cmp
mov
fstpl
aam
fnstenv
test
xor
fidivrs
push
movsb
das
xchg
sub
aam
rep
in
outsb
add
push
xchg
cmc
add
andl
shl
leave
jnp
push
call
fisttpl
mov
test
loopne
cmc
dec
pop
popf
inc
insl
je
xor
cmpsl
xor
mov
pop
cmp
lcall
mov
aad
mov
lds
test
pusha
mov
mov
dec
push
sub
mov
mov
mov
sbb
mov
nop
sbb
scas
js
sbb
add
xchg
adc
dec
jo
jno
push
xchg
adc
mov
mov
ret
mov
sub
std
dec
mov
stos
push
stos
add
mov
shlb
test
addr16
test
mov
shll
mov
lods
insb
push
pushf
jl
and
lcall
sbb
cld
inc
xchg
movsb
or
mov
xor
mov
mov
mov
pusha
in
fcompl
lcall
push
add
mov
xor
pop
popf
pop
mov
push
lcall
rcrl
test
jae
mov
enter
lods
dec
xchg
gs
dec
mov
push
pop
js
pop
cmp
and
xor
rclb
xchg
dec
push
mov
in
xchg
jo
cltd
aam
xchg
sahf
les
out
ret
mov
daa
sbb
repz
ret
push
jns
pop
jnp
cmpsb
fstps
mull
mov
dec
add
sbb
cmp
mov
and
repz
xor
mov
jge
fs
fldl
je
push
popf
pop
or
aad
or
push
test
stc
or
adc
jmp
out
xchg
dec
mov
or
test
dec
sub
jo
repnz
fildl
std
ss
push
xchg
popa
test
push
mov
push
outsb
dec
data16
cmp
in
hlt
and
out
dec
mov
mov
sbb
and
jno
shlb
sarl
je
ljmp
ss
daa
sbb
sbb
stc
xchg
pop
pop
fimuls
ljmp
testb
test
das
inc
outsb
dec
int
enter
sbb
movsl
stc
test
jns
out
cltd
sub
cmpsl
movsl
add
lods
xor
xchg
mov
les
rcrl
lods
pop
test
mov
ja
xchg
rcrl
outsl
les
ja
fdivrs
rclb
or
aad
cmp
inc
or
xchg
dec
or
gs
adc
push
jg
adc
ljmp
or
sbb
mov
xchg
xchg
pop
inc
fwait
into
inc
aad
and
in
dec
mov
cmpsb
xchg
sub
jg
leave
lret
xchg
mov
popf
xor
cmp
je
mov
adc
add
fstl
lahf
push
add
scas
mov
sbb
aad
sarb
frstor
out
and
xchg
jl
iret
xor
adc
orl
loop
xchg
mov
pop
mov
iret
mov
inc
push
pop
xlat
xor
mov
push
pop
shll
lret
sbb
mov
xchg
dec
loop
stos
lods
fs
outsb
jg
pop
les
cmp
outsb
jle
xchg
les
repnz
mov
pop
movsl
add
adc
xchg
out
sub
push
daa
rorl
add
nop
imul
jne
pop
stos
xor
jno
out
adc
cmp
or
shrl
mov
dec
pop
out
jnp
ljmp
add
icebp
fnstsw
pop
mov
aam
mov
xor
lahf
pop
loope
xchg
sub
and
pop
add
add
mov
pop
negb
es
jne
xchg
mov
mov
mov
lahf
dec
insb
nop
mov
mov
dec
les
addr16
in
cmc
rorl
jl
push
mov
jl
lret
out
enter
jecxz
test
leave
push
xor
daa
xchg
fistl
add
fldenv
add
cmpsl
addl
mov
mov
repz
movsl
loope
lcall
out
adc
xor
inc
fdivl
xchg
push
jp
incl
roll
nop
push
or
inc
mov
or
cmp
or
mov
mov
and
adc
sub
in
jae
addl
roll
lahf
inc
and
leave
inc
aad
and
cld
rolb
into
xchg
push
lcall
jns
jnp
popf
xor
mov
pop
mov
cmpsb
dec
push
int3
xchg
aas
fdivl
mov
add
insb
fwait
lret
call
ljmp
sub
push
jmp
subb
push
xlat
hlt
test
xchg
andb
ss
movsl
dec
pop
mov
outsl
push
push
add
sub
jbe
xchg
xor
jle
mov
lock
imul
jo
pop
inc
inc
xchg
cmp
and
jp
or
jle
repnz
or
mov
cltd
fcomi
cltd
repnz
cmp
push
adc
call
fucomi
dec
fldenv
cwtl
dec
decl
inc
idivb
and
cmp
cmp
xchg
jno
pushf
dec
mov
dec
fwait
pop
mov
adc
cmp
shrb
adc
mov
repnz
repnz
ss
dec
leave
ds
aam
jnp
dec
mov
mov
pop
enter
adc
fiaddl
icebp
xchg
imul
cwtl
pop
rcl
cmp
lock
jb
cmp
sub
adc
ljmp
div
lret
sbb
arpl
rorl
mov
int
push
das
and
sbb
sbb
xchg
ss
lods
loop
inc
mov
dec
jns
xor
inc
jne
leave
cld
addr16
popf
pop
shl
dec
dec
add
call
xchg
pusha
out
pop
push
lods
lods
sub
movsb
xor
push
mov
jmp
mov
fistl
pusha
and
lahf
rcrl
inc
xchg
fidivrs
sti
xchg
stos
ficompl
lock
sti
bound
fimuls
add
pop
int
daa
sub
in
inc
lcall
lcall
push
cmp
jnp
push
ljmp
out
stos
xorl
outsb
push
cmp
pushf
inc
hlt
jle
mov
cs
mov
xor
sbb
dec
sub
enter
pop
ja
rcll
inc
xor
inc
aad
insb
pop
xchg
lea
test
xchg
mov
pop
rcrl
in
inc
sub
cmp
cmpl
aam
fcmovb
mov
ret
mov
mov
shr
repz
dec
push
sub
sub
sbb
imul
ret
les
inc
xor
sti
das
pop
hlt
and
cmpsw
push
push
push
inc
jmp
sub
std
dec
les
loop
lahf
aas
inc
imul
xlat
pop
in
push
outsl
push
cmp
mov
out
test
aaa
ret
mov
imul
call
into
sub
mov
icebp
xchg
adc
popf
out
data16
lods
mov
in
fcoml
cmp
je
sbb
mov
in
std
mov
dec
adc
rcll
icebp
pop
pop
sbb
xor
push
clc
pop
adc
add
xor
mov
test
push
out
call
mov
mov
int
daa
pop
mov
cs
push
mov
mov
sbb
inc
in
mov
outsb
ret
out
adc
push
pop
or
mov
jae
pusha
imul
fdivr
movsl
bound
push
inc
xor
mov
jns
leave
xchg
add
rolb
mov
js
sbb
pop
frstpm(287
icebp
push
cmp
ficomps
in
push
mov
insb
ljmp
fmull
fs
mov
xor
pop
sub
clc
out
sbb
stc
in
jno
mov
and
int3
mov
and
cmpsb
mov
xchg
pop
adcl
clc
push
xor
dec
xchg
pop
loop
movsb
cltd
notl
lcall
out
aam
and
test
arpl
mov
sti
loope
fs
cltd
loopne
mov
adc
mov
pop
sbbl
lds
les
dec
mov
mov
fildll
cmpsl
fistpll
mov
mov
aaa
sahf
xor
icebp
sbb
sbb
mov
push
adc
cmp
fs
or
bound
cs
mov
mov
jge
test
in
stc
pop
inc
xchg
xlat
es
lock
arpl
and
or
and
lret
in
cmpsb
mov
int3
xor
mov
popf
data16
mov
inc
push
imul
dec
xlat
lds
or
and
movsl
pop
dec
sub
jg
mov
pop
cmp
int
xor
cli
call
xchg
xor
mov
ficomps
mov
out
push
mov
inc
pop
xlat
push
call
leave
fadd
fidivs
lods
cltd
popf
sbb
mov
bound
dec
adc
bound
jo
sub
mov
mov
cmp
mov
add
or
xor
in
and
std
sub
push
sub
and
cmpsl
les
or
mov
jne
sub
mov
pop
mov
mov
repz
ret
in
pushf
dec
push
je
rolb
push
cld
or
std
mov
daa
hlt
pop
xchg
jo
xor
fiaddl
jnp
jbe
xor
fldl
dec
into
sbb
sub
cmp
xchg
loopne
jmp
insb
mov
popf
push
lret
mov
push
xor
dec
aam
mov
aam
mov
mov
push
sbb
jnp
mov
rclb
scas
mov
inc
loop
xchg
fcoml
xchg
test
jns
cmp
test
lret
cmp
xchg
mov
adc
adc
stos
jb
mov
inc
pop
repz
cli
sbb
push
adc
clc
in
stc
cmp
scas
aas
inc
pop
lds
out
add
fcomip
mov
sti
and
jecxz
mov
sbbl
and
test
fmull
movsl
inc
stos
ret
xchg
mov
dec
jne
jecxz
out
cmpl
std
cmp
xchg
pusha
rol
xor
cmp
call
pop
push
sub
or
js
outsb
jmp
jle
lret
sbb
add
pop
ja
pushf
cmp
and
mull
repnz
ret
out
jno
cmp
lahf
mov
roll
mov
jo
sahf
sbbl
icebp
mov
cmpsb
dec
pop
mov
xchg
sbbb
aaa
inc
ljmp
push
mov
icebp
movsb
add
lcall
loop
scas
in
mov
mov
jmp
out
dec
push
mov
out
sub
cwtl
xor
and
mov
js
xlat
xor
rorb
pop
mov
leave
jle
lahf
test
pop
mov
mov
enter
out
push
inc
push
in
fnsave
jecxz
xlat
push
push
icebp
mov
mov
in
xchg
ficoml
arpl
adc
push
outsb
mov
loop
xor
pusha
out
aad
rol
xor
jbe
mov
inc
pop
ljmp
xchg
jp
cmp
pop
cltd
adc
mov
into
test
push
lcall
rclb
arpl
movsl
and
adc
mov
cmpsl
xor
fisubrs
in
cmp
xchg
inc
mov
push
push
cwtl
cltd
and
cs
fisubrl
xlat
dec
pop
dec
sbbl
fdivr
inc
xchg
fcomps
cmp
insl
arpl
push
mov
sub
mov
cli
sbb
cmp
enter
das
cltd
enter
push
and
in
cmp
mov
shrb
in
repz
sub
aas
and
jle
dec
mov
inc
vmwrite
dec
scas
dec
je
xchg
dec
xor
hlt
push
jo
fneni(8087
mov
xchg
adc
mov
mov
js
mov
mov
pop
dec
stos
std
arpl
addr16
xchg
jnp
adc
mov
js
push
aaa
mov
sbb
push
movl
je
test
or
iret
call
and
popa
imul
sbbb
roll
or
aas
adc
xor
mov
rcl
jp
jno
push
in
mov
cmc
lret
sbb
sahf
jmp
mov
xlat
and
push
std
mov
pushf
inc
lods
loopne
ja
outsb
aaa
sbb
mov
mov
gs
lods
and
or
mov
mov
fcompl
sub
jno
fcoms
push
lcall
dec
leave
mov
stos
je
cwtl
jmp
aad
je
sbb
les
bnd
cmp
mov
xor
out
push
jecxz
pop
xor
sub
mov
movsl
lahf
cmp
push
cmp
xchg
test
adcl
lret
fldcw
sbb
data16
fwait
insb
leave
sub
cli
les
ret
mov
xchg
sub
cwtl
xchg
mov
sub
jge
push
test
mov
daa
cli
add
push
jnp
push
hlt
jo
imul
or
xchg
inc
xchg
sbb
cli
push
mov
fwait
sub
inc
sub
loope
fadds
sub
jl
ds
and
test
pop
jne
sub
daa
push
mov
bound
daa
jnp
movb
sbb
daa
out
jo
sub
push
dec
or
pusha
mov
movb
dec
lahf
in
sub
dec
sahf
push
dec
add
icebp
xor
repz
and
lea
mov
dec
mov
mov
mov
popa
xchg
cmp
xchg
xchg
pop
push
idivb
adc
lock
jl
sub
int
pop
fistpl
pop
xor
dec
sub
xor
mov
cwtl
into
cli
test
push
adc
addr16
xor
jmp
xchg
add
std
xorl
cltd
fsubrs
leave
sub
mov
add
push
cmp
xchg
mov
xor
outsl
sar
dec
or
sti
popf
mov
jmp
pusha
mov
inc
inc
mov
jo
lods
jge,pn
icebp
outsl
xchg
mov
pusha
imul
push
mov
mov
test
jmp
std
xchg
cli
pop
clc
scas
jnp
daa
fstpt
fisubrl
inc
cmc
inc
popa
push
sar
dec
inc
xchg
test
inc
inc
scas
cs
sbb
adc
repnz
fstpl
mov
faddl
fadds
mov
in
push
jne
ljmp
into
jno
pushf
lcall
ret
sub
push
mulb
fimuls
pop
xchg
shl
mov
aaa
or
fbld
mov
pusha
enter
andl
cmp
mov
out
dec
mov
lods
es
andl
mov
sub
or
mov
mov
mov
js
call
leave
mov
or
pop
dec
aad
popl
das
out
aad
inc
in
jp
jge
ret
test
mov
mov
sbb
mov
and
or
jbe
inc
mov
ja
pusha
jb
push
adc
inc
jns
fs
mov
mov
mov
dec
mov
jle
lea
mull
lret
lods
xorb
sbb
dec
xchg
inc
cmpsb
call
leave
dec
ljmp
push
jmp
xchg
in
je
pop
jmp
dec
shll
divl
cmpsl
fwait
jo
mov
insl
aad
pop
pop
xor
jecxz
pusha
lcall
aaa
inc
adc
aas
adc
sub
xchg
add
in
aad
test
inc
inc
ja
fdivs
sbb
lret
add
ret
cmp
push
xchg
outsl
or
addb
shlb
jno
call
aaa
jo
repnz
sbb
fstl
loop
xchg
sub
mov
mov
sub
adc
jbe
inc
jbe
xchg
es
add
in
pop
je
popf
addr16
cmpb
dec
f2xm1
mov
test
in
jnp
adc
loopne
insl
push
mov
or
mov
scas
ret
jmp
std
mov
nop
mov
sub
pusha
jnp
sahf
pushf
sti
lods
xchg
or
insb
out
mov
cli
shll
mov
or
or
xor
push
push
aas
and
in
repnz
sbb
daa
fs
add
fldt
rcll
sub
push
leave
xchg
pushf
aaa
loope
fisubrs
and
pop
fs
cwtl
lods
iret
cmp
push
into
pop
pop
imul
das
xlat
ljmp
into
mov
call
call
iret
popf
dec
mov
in
pushf
test
arpl
adc
repz
sbbl
mov
mov
les
shrb
sub
adc
cmp
jp
adc
bound
je
xchg
pop
mov
out
sub
mov
dec
xchg
enter
outsl
add
jl
pop
lds
inc
scas
shlb
jnp
pop
cld
cltd
xchg
negb
les
mov
push
daa
cs
loope
shr
mov
cmp
pop
icebp
xor
insl
mov
dec
lret
cli
and
scas
shll
ficomps
push
jns
gs
test
icebp
adc
popa
loop
cld
lods
stc
loope
mov
icebp
gs
les
into
and
inc
mov
jle
xchg
dec
jg
loope
jae
fnstenv
inc
pop
iret
out
mov
mov
out
cmp
push
sub
lahf
lock
stos
dec
add
mov
scas
sub
into
mov
and
jae
xor
dec
scas
lods
hlt
enter
inc
loop
mov
stc
lret
test
xor
add
xchg
mov
das
int3
cs
or
pushf
ljmp
cs
les
repz
fcoms
adc
loop
dec
inc
ja
into
mov
scas
dec
popa
mov
pop
arpl
in
aad
jae
xlat
adc
sbb
pop
testb
mov
mov
cwtl
fmull
mov
mov
scas
inc
fadd
insb
pop
dec
addb
inc
fisttpl
inc
nop
pop
and
cmc
adc
mov
mov
popf
arpl
xchg
fcomps
aaa
cmp
loop
imul
pop
sbb
sti
repz
fbstp
xor
int
mov
pop
out
xchg
push
pop
gs
or
das
jmp
push
inc
scas
jae
scas
dec
fwait
jge
test
sub
cmc
dec
add
cli
dec
es
sbb
das
gs
test
repnz
test
stc
xor
adc
aaa
dec
lahf
leave
nop
bound
xor
add
xor
or
bnd
faddp
in
push
lods
inc
push
mov
in
add
int3
dec
push
push
mull
hlt
int
xor
pop
fidivrs
sti
ret
add
mov
cwtl
in
daa
ret
aas
test
push
push
cmpsl
fstps
mov
scas
or
pushf
repz
cmp
add
jge
aas
jp
pop
cmp
cmp
sbb
gs
sbb
arpl
add
lcall
push
mov
pop
ret
in
clc
ss
mov
aaa
mov
xchg
notl
jne
sti
push
and
test
out
inc
pop
es
xchg
lea
mov
sbb
lret
add
add
shll
ret
rcrb
aas
loop
cmc
mov
rcl
sub
std
leave
loope
decb
pop
cwtl
dec
mov
adc
push
and
ljmp
xchg
xchg
cmp
add
std
bound
outsb
lds
cld
cwtl
dec
in
jo
or
mov
arpl
mov
pop
mov
mov
adc
mov
andb
lret
pop
std
into
in
jg
adc
lcall
popf
mov
hlt
dec
mov
enter
adc
jae
dec
jnp
inc
fs
bound
pop
lcall
outsb
lret
pop
xchg
or
sub
not
imul
jb
or
int
js
stos
addb
sahf
rclb
fdivrs
addr16
mov
mov
xlat
ficomps
lret
cltd
cltd
or
rol
sbbb
dec
jp
jp
lock
dec
shl
lea
and
push
dec
popl
sbb
negb
icebp
fucomi
xchg
sbb
dec
push
sbb
lods
rcrb
xor
and
cmp
sbb
pop
aas
or
jle
insb
jl
cwtl
in
mov
and
pop
call
inc
jno
add
arpl
push
adc
test
clc
adc
mov
icebp
in
fdiv
mov
fldln2
in
mov
movsl
jecxz
and
int
xor
scas
pop
popa
popa
ret
repz
adc
push
sti
pop
xor
push
push
sbbl
lcall
or
adc
push
mov
mov
loop
pusha
dec
int
stos
fnstsw
cmc
cmp
add
bound
loope
jl
mov
push
mov
sahf
nop
push
into
lods
xchg
and
sub
jg
popf
sti
or
scas
xchg
loopne
sub
cmp
mov
lret
add
in
cs
sub
sarb
loopne
in
aaa
pop
rorl
daa
les
push
loopne
mov
sbb
push
pop
scas
lods
sbb
das
or
or
imul
scas
sahf
mov
test
and
cmp
pop
icebp
mov
jp
je
xchg
mov
lret
jmp
add
negl
pop
dec
jbe
bnd
aad
cwtl
and
aas
imul
xor
outsl
xor
rcrl
inc
jbe
jbe
push
mov
xor
push
outsl
js
push
jae
shrl
aaa
call
push
pop
movsb
ljmp
or
pop
in
jg
pop
xor
sub
xor
sub
lea
in
mov
add
mov
adc
pop
lock
js
aad
pop
mov
pop
repz
mov
lods
ret
scas
push
add
jmp
add
iret
cmp
movl
xchg
fsubrp
incb
les
push
pop
xchg
xorb
fiadds
and
addr16
pop
dec
lds
push
into
sarb
js
dec
cmp
das
cs
push
push
pusha
mov
pusha
hlt
stc
adc
pop
sub
push
andb
mov
mov
add
mov
xchg
mov
popfw
insl
mov
arpl
enter
mov
mov
aam
repnz
adc
mov
jg
ret
loop
aam
popa
cmp
lods
ds
xor
mov
mov
and
outsl
sahf
or
dec
pop
shrl
xor
loope
sub
loopne
xchg
lds
or
mov
adc
mov
or
jns
push
pop
push
pop
and
cltd
in
std
push
hlt
xchg
fidivrs
les
add
pop
sub
test
mov
jl
into
stos
cli
lahf
push
out
mov
testb
les
add
cmp
inc
mov
icebp
inc
mov
repz
rcrb
std
jo
push
jecxz
je
mov
subl
addr16
cwtl
or
stos
inc
jl
testl
ret
data16
sub
fstps
push
jne
jns
dec
xor
lret
cmp
lret
add
sbb
shlb
sub
sbb
shll
loope
push
sbb
push
pusha
cmp
test
ja
insb
iret
ljmp
mov
sbb
cs
sub
dec
into
ret
push
and
pop
mov
xor
pushf
test
aaa
sbb
adc
adc
pop
sahf
in
andb
sbb
cwtl
andl
push
dec
cld
in
jmp
mov
dec
xor
pop
push
test
lods
pushf
movsb
jnp
adc
xchg
data16
movsb
out
stos
inc
mov
pusha
fsubrl
mov
jp
sbb
popa
roll
mov
xchg
pop
movsb
cs
mov
sbb
xchg
and
popa
cmp
dec
xor
lock
je,pn
sbb
call
adc
inc
add
fbld
insb
sbb
mov
stc
imul
jnp
adc
inc
sub
xor
mov
jnp
stos
fisttpll
jg
add
pop
stos
cwtl
xchg
push
cwtl
cmp
mov
sub
into
out
cli
outsl
imul
ljmp
mov
in
daa
ficomps
repz
fldl
add
int3
xchg
movsb
cmp
jp
push
nop
or
sub
sahf
mov
sbb
sti
pusha
mov
add
rolb
in
test
lds
mov
and
sbbb
gs
mov
pop
addl
fwait
sbb
mov
mov
xchg
xor
push
sub
pop
cmp
clc
out
pusha
imul
mov
imull
inc
add
lcall
cmp
cmpsl
xor
dec
pop
hlt
lcall
push
nop
fistpll
test
dec
dec
stc
xchg
lods
adc
jecxz
cld
xchg
orl
test
xchg
addr16
mov
js
ja
xchg
adcl
add
pusha
setg
xchg
or
fistpl
lahf
repnz
in
sub
push
and
jbe
or
sub
mov
mov
jle
out
das
mov
xchg
faddl
movsl
testl
sti
mov
inc
sbb
mov
and
mov
jbe
dec
or
and
xchg
inc
add
mov
insb
adc
fistl
dec
cmp
cli
lds
in
cmp
xor
adc
add
filds
repz
es
mov
adc
jnp
fwait
cli
sbbl
and
roll
push
ficoml
test
or
mov
cmpsb
out
pusha
jne
mov
jno
sub
add
push
sahf
jmp
mov
es
rcrb
sbb
shlb
sub
outsl
mov
in
aaa
push
pusha
mov
cli
sbb
jle
mov
xchg
mov
dec
jmp
adc
inc
loop
mov
push
loopne
mov
jl
add
jp
insb
mov
mov
ja
mov
movsl
das
pop
adc
dec
lods
pop
xchg
insb
push
in
loop
xor
daa
push
pusha
std
aaa
cmpsl
add
daa
lds
sub
int3
cs
mov
ret
test
cmpsb
aad
xor
into
add
mov
push
pusha
and
lcall
mov
pop
repz
in
ds
nop
sub
aaa
stos
je
sub
jmp
ljmp
mov
movsb
adc
dec
pop
jnp
mov
fstpt
das
popf
or
and
je
bound
outsl
jl
in
rorl
stos
sub
lea
cld
push
sbb
push
inc
mov
mov
dec
daa
loop
mov
stos
pop
cmp
leave
test
inc
push
stc
mov
stos
xlat
test
in
scas
ss
jmp
xor
insb
out
sbb
add
loope
or
iret
cltd
fimull
adc
imul
jl
xchg
xor
sti
loop
sarl
fistps
fcom
jmp
insl
and
dec
jae
and
nop
call
push
xchg
push
mov
xor
ja
addb
adc
push
mov
aad
push
in
xorl
test
mov
push
and
flds
pop
repnz
out
xorb
push
mov
divb
repnz
fnstsw
sub
sbb
jl
lds
push
divl
mov
mov
inc
add
cmpsb
cmpsl
push
pop
adc
xchg
daa
int
add
test
insb
fisubs
sbb
adc
mov
out
nop
cmc
pop
cmpsb
scas
in
mov
cmp
je
pushf
xor
aam
popa
cmp
mov
push
les
fildl
in
push
push
jg
adc
data16
aaa
mov
or
sbb
adc
pusha
jae
mov
in
aad
cmp
dec
dec
ret
lea
rorb
mov
or
in
jecxz
pop
fsubrs
add
inc
stos
iret
fxch
mov
pushf
jns
mov
inc
enter
xchg
xchg
push
mov
shr
push
and
inc
imul
rcrl
sub
push
jnp
inc
add
adc
dec
xor
cmp
xor
ss
xor
inc
jge
out
lret
dec
inc
and
pop
cmp
sbb
mov
dec
cltd
jge
pushf
imul
mov
test
pop
add
repz
xchg
dec
add
push
movsb
jmp
stos
push
iret
adc
jle
mov
out
or
xchg
add
fldenv
ret
xor
pop
cmc
in
jl
popa
adc
lock
sarb
lods
push
fmull
jl
sbb
or
mov
popf
loope
xchg
fs
mov
imul
repnz
or
fcoms
lret
icebp
outsl
lret
cmp
cmp
inc
cs
jl
and
addr16
mov
mul
out
jne
fadd
ret
inc
in
jae
mov
mov
adc
int
jl
lret
out
inc
and
xchg
pop
pop
jb
in
xor
fnstenv
push
aas
mov
and
xorb
arpl
dec
mov
in
mov
push
ret
sbb
sub
cmpsb
call
jmp
or
lds
popl
rcrb
sarl
cmc
xor
bound
jbe
roll
dec
mov
in
jge
shl
inc
bound
sbb
stos
sahf
cltd
dec
adc
mov
mov
jge
and
popa
xor
dec
mov
imul
fsubl
or
mov
sbb
jle
xchg
xchg
ds
or
pop
sub
and
cli
xlat
pop
cmpl
in
ret
enter
out
adc
push
mov
in
enter
push
sbb
mov
or
loope
xor
pop
or
nop
test
leave
lods
mov
gs
or
xor
sahf
dec
mov
dec
lods
rcrb
imul
sar
lods
in
xor
fists
negl
in
out
sbb
pop
dec
scas
fidivs
rcll
rcrl
js
dec
pop
mov
pop
stc
leave
stos
jecxz
outsl
aam
cmp
xchg
leave
pop
aas
cmp
pop
xor
or
mov
add
repz
xor
mov
sbb
adc
mov
shrb
mov
sarb
inc
popa
daa
cmc
popa
jl
fildl
inc
insb
bnd
mov
in
cmp
add
sub
ja
cmp
sahf
movups
nop
jecxz
sbb
std
mov
jecxz
jmp
orps
popa
push
mov
pop
jnp
outsb
lret
mov
loopne
jnp
test
sbb
repz
adc
ja
andb
xchg
jmp
inc
scas
xor
and
jg
push
fwait
sub
xchg
jne
mov
pop
cmpb
decb
push
inc
sub
enter
mov
fdivl
mov
sbb
mov
mov
adc
cmp
fimuls
add
repz
mov
das
and
mov
inc
dec
push
adc
jmp
mov
jg
sarb
stos
jle
dec
cwtl
outsl
fisubrs
movsb
xor
stos
inc
xor
xchg
adc
sbb
fnstsw
push
sub
loope
das
ljmp
jp
icebp
jae
pushf
arpl
div
sbb
pop
gs
ret
xor
prefetch
or
mov
out
push
cmp
es
iret
jge
pop
xor
shlb
mov
sbbb
adc
test
sub
ds
ret
fildl
ret
cltd
or
adc
jne
call
sahf
add
xor
pop
sbb
push
aam
shl
pop
jle
dec
test
fadds
sub
ret
adc
fsubr
aam
or
mov
xor
push
ds
pop
lods
mov
ja
sub
inc
mov
xor
test
ss
xchg
and
add
mov
nop
ljmp
push
lret
pop
or
adc
dec
repz
dec
lret
and
adc
sub
repz
leave
mov
out
push
xor
dec
loope
xsavec
adc
call
fs
or
xchg
ret
or
mov
dec
daa
in
pop
leave
nop
adc
lcall
dec
jae
sbb
mov
fwait
pop
jp
decb
out
xchg
xor
push
dec
cwtl
cmp
push
out
dec
xor
rorl
js
js
mov
sti
mov
add
add
jp
cmp
test
stc
movsl
arpl
jns
add
or
sub
or
and
xchg
in
cmc
jne
xlat
or
icebp
and
inc
std
ljmp
mov
sarb
je
movsb
cwtl
mov
dec
pop
pusha
pop
scas
cwtl
push
sbb
lahf
movsb
stc
les
push
dec
btc
pop
cmp
sub
inc
cmp
inc
jns
pop
test
and
outsb
xchg
push
ficompl
scas
adc
xchg
int
ljmp
aas
shrl
lret
sub
icebp
aaa
mov
jbe
fnstcw
mov
test
imull
dec
fisubl
jmp
pop
rorb
push
pusha
push
mov
xor
iret
push
jb
js
lret
pcmpgtb
inc
in
sub
frstor
ret
nop
dec
mov
cmp
pop
decl
fistps
scas
jbe
clc
push
stos
pop
lret
lods
dec
cmpxchg
or
ljmp
ficoml
pop
fs
sahf
dec
xchg
setb
sti
adc
repnz
jne
jecxz
aas
shll
test
push
pop
inc
fildll
inc
sti
shlb
jns
mov
mov
jae
out
jo
mov
loopne
cltd
arpl
loope,pn
or
cmp
sub
add
into
imul
sub
movsb
cmp
rcrl
int3
add
xor
les
push
or
ds
addr16
sbb
loopne
loop
sar
xchg
leave
pop
xchg
jl
shrl
and
jne
jecxz
rclb
xchg
and
into
nopl
mov
dec
fnstsw
lds
cli
fcomip
negl
push
add
leave
xchg
dec
aas
packssdw
hlt
fldenv
ret
adc
xchg
jecxz
mov
out
out
sub
scas
cli
xor
jae
repz
add
jne
sahf
sbb
bound
xchg
jnp
es
outsb
insb
lret
cmp
xchg
push
xchg
lea
out
arpl
push
gs
mov
dec
dec
add
dec
push
inc
dec
cmp
push
pop
ficoml
popa
cld
add
add
add
cmp
or
pop
outsb
xor
sarl
jbe
lds
ljmp
mov
daa
xchg
pop
and
ja
lcall
xchg
push
xchg
decb
jnp
jnp
outsb
jbe
addl
movsb
ficoms
ja
xor
push
scas
mov
movsl
push
sbb
mov
sub
xchg
push
dec
aas
jg
mov
out
outsb
lods
mov
insl
loope
pop
lret
test
sahf
push
sub
push
test
js
mov
adc
and
dec
pop
imul
hlt
movsl
popa
imul
cmp
sahf
xor
test
data16
and
subl
rcrb
pop
adc
fwait
pop
aaa
and
pushf
add
aad
jecxz
andl
dec
ljmp
inc
nop
js
dec
test
out
push
repnz
imul
jg
dec
add
mov
adc
fstpl
lods
push
mov
test
sub
and
mull
loopne
jmp
in
xchg
cs
call
inc
mov
pushf
jmp
cmp
cli
pop
or
cli
jns
rcr
imul
mov
nop
push
dec
mov
xchg
lock
fwait
sti
mov
out
cwtl
movsb
mov
add
dec
jns
cmp
mov
lods
inc
mov
iret
in
in
sbb
sahf
push
fwait
aam
xchg
fldt
push
mov
test
push
mov
ljmp
jb
repz
bound
fnstcw
jne
fadd
pop
mov
aam
cmp
inc
sbb
dec
mov
imul
ljmp
daa
xcrypt-ofb
cmpsl
imul
and
cmp
cmp
pusha
arpl
pop
xor
gs
cmp
ficoms
out
add
pop
mov
cmp
cmpsl
inc
jno
adc
gs
cmpsl
in
adc
adcl
repz
outsb
fnstenv
cli
faddl
out
sbb
gs
cmp
icebp
sbb
mov
test
pop
es
adc
je
jmp
cmp
jmp
in
xlat
mov
add
sbb
jmp
movsl
scas
push
or
and
sub
add
xchg
pusha
add
mov
mov
push
inc
xchg
and
fisubrl
pop
call
outsb
int
push
adc
xchg
xchg
out
lret
xor
ds
jb
push
mov
mov
pop
ljmp
fcom
andb
int
xchg
mov
dec
outsl
aas
test
daa
xchg
insb
inc
ret
roll
mov
fcompl
into
add
dec
fimuls
push
xor
gs
or
push
movsb
int
in
add
sar
lahf
pop
popa
movsl
test
inc
test
addb
sbb
out
lods
or
add
and
push
xor
out
cwtl
enter
scas
clc
inc
cmp
xchg
pop
mov
adc
in
js
jne
subl
add
push
std
jge
cmp
lcall
popf
mov
mov
adc
mov
xor
and
fwait
int
popf
nop
std
push
pop
je
nop
mov
test
repz
and
in
icebp
ss
les
push
pop
sti
loop
sub
cmp
leave
imul
or
dec
adc
mov
orb
push
push
loope
mov
das
stc
and
test
push
mov
mov
nop
popf
jle
mov
mov
call
sub
les
jne
or
and
dec
pop
adc
in
xor
ds
lea
mov
sub
xor
sub
add
and
jge
lret
dec
mov
in
xor
jle
sbbb
mov
in
sbb
ret
loopne
adc
fwait
push
sbb
push
xchg
movsb
jb
das
mov
fsubs
shr
mov
and
mov
lret
dec
lret
jg
sbb
push
jo
cmp
cmp
loopne
xor
add
mov
cmp
mov
sbb
lcall
lcall
xor
mov
ror
imul
inc
push
loop
dec
mov
outsl
cmp
shll
inc
loope
xor
push
mov
sbb
sub
push
or
in
mov
jmp
xchg
rcrb
inc
cmp
xor
sub
add
jg
sub
cmp
add
inc
xchg
fldenv
test
sub
ds
subb
in
jo
ret
negl
cmpsb
sub
shrb
dec
aad
rorl
popf
js
sub
sbb
xchg
add
mov
fadds
add
leave
xchg
sbb
fdivrs
sti
js
scas
shrb
lret
ror
movsb
jmp
mov
or
scas
push
dec
clc
or
pop
lea
pop
adc
aam
imul
adc
int3
pop
jnp
adc
dec
cmp
out
add
sti
and
stos
inc
shrl
mov
enter
out
jp
mov
push
enter
inc
mov
imul
adc
xor
in
inc
ss
adc
mov
mov
inc
iret
mov
mov
aam
xchg
dec
jecxz
adc
mov
scas
and
mov
adc
test
gs
movsl
mov
insl
jo
mov
xchg
mov
or
iret
push
inc
ja
outsb
inc
xchg
outsb
jnp
cmc
shl
jno
xor
fbstp
mov
jg
ljmp
jo
test
in
dec
dec
mov
rorl
and
ljmp
mov
xchg
jle
ficoms
and
jnp
inc
sahf
sbb
pusha
inc
pop
mov
mov
adc
cmp
xchg
fistps
popa
in
clc
mull
lcall
jle
xchg
stc
mov
xchg
push
inc
cwtl
dec
addl
sbb
push
pop
cmp
and
sub
xlat
divl
jns
mov
js
cltd
loope
mov
ja
sti
mov
push
dec
adc
add
insl
into
mov
into
mov
shll
jbe
cmc
js
aam
xchg
lahf
iret
popf
in
fidivrs
mov
pop
into
lret
out
sti
push
add
int
or
jb
dec
scas
shll
jmp
mov
mov
aas
jno
aaa
sbb
sarb
packsswb
sub
ljmp
adc
lea
adc
mov
fldt
loop
scas
jo
scas
sub
ja
or
leave
jo
push
mov
dec
lahf
lret
xchg
xchg
jo
sub
pop
inc
aaa
movsl
mov
mov
movsl
filds
scas
jg
fidivs
enter
out
popl
fcoml
inc
int
dec
enter
inc
fcompl
int3
imul
push
es
mov
adc
fistl
das
push
cmc
sbb
add
mov
pop
cltd
int3
sbb
pop
js
inc
data16
popl
loop
in
pusha
pop
and
scas
cmp
jg
mov
loopne
or
loopne
inc
cmp
in
and
mov
add
jmp
inc
pop
out
arpl
int
jnp
shlb
ds
loop
insl
inc
sqrtps
out
ja
inc
sub
incb
sahf
cmp
jmp
adc
or
mov
bound
bnd
movsl
sub
push
insb
or
lret
xor
sub
pop
jbe
outsb
movsb
or
repz
popa
and
inc
pushf
mov
pop
mov
inc
outsb
mov
in
movsl
cmpsb
sub
insl
mov
xchg
int
bound
xchg
cmpsl
pop
aam
xbegin
fidivl
jmp
mov
sbb
or
lret
inc
testl
pop
add
lret
cli
pop
test
lods
jnp
into
in
cmp
imul
sti
push
xor
ret
test
leave
ljmp
mov
sahf
xor
cmpb
and
xor
jle
push
inc
in
pop
pop
dec
ljmp
jge
test
jo
pop
pop
push
adc
in
test
stc
sbb
cs
mov
into
test
mov
ror
inc
je
jbe
jbe
seta
test
stc
movsl
or
adc
adc
shrb
gs
dec
aaa
dec
roll
rcr
lods
xchg
sub
mov
outsb
pushf
cmp
test
shrl
sub
mov
sbb
push
cli
cmc
or
xlat
mov
mov
jl
divb
pop
add
pop
addr16
add
cmpsl
add
xchg
and
sub
pop
les
fs
loope
inc
sub
andl
jae
stc
dec
mov
pop
mov
mov
dec
cmp
in
pop
mov
imul
mov
cli
adc
mov
add
ret
hlt
mov
mov
les
movsb
mov
xchg
xor
jmp
jb
sbb
arpl
inc
or
xchg
xchg
xchg
fmulp
push
sub
cmp
add
jae
xchg
mov
or
ret
aad
cmp
pop
jmp
cmp
inc
les
pop
or
je
xor
push
hlt
push
cmp
push
cmpsb
xor
sub
push
subl
frstor
js
mov
mov
sahf
lods
repz
pop
stos
push
icebp
mov
jl
mov
push
xchg
es
jle
insl
adc
push
xor
dec
fsubrs
sub
xchg
sub
mull
test
fnstenv
jmp
out
ret
call
xor
test
lock
inc
xor
stc
mov
xchg
ret
inc
adc
cmp
fsubl
jnp
popl
mull
mov
outsl
mov
mov
jbe
leave
mov
imul
movsb
ja
aas
cmp
ss
push
sbb
jne
add
in
inc
out
loop
shlb
sub
iret
popa
xlat
xchg
sbbb
sbb
aas
xchg
es
pop
jnp
not
into
sti
mov
cmp
dec
xchg
and
mov
or
mov
xlat
insb
pop
adc
inc
das
add
mov
into
and
call
pop
xor
lock
jg
jnp
push
hlt
stc
jmp
jno
push
leave
das
testb
and
adc
cmc
fucomip
aas
lret
lret
sub
add
inc
int
xor
fildl
out
punpcklbw
imul
pop
addr16
mov
dec
push
xchg
cltd
jmp
mov
xchg
sub
adc
xor
add
or
ret
cmp
adc
adc
sbbb
add
sbb
cmp
inc
repz
int3
sbb
mov
sbb
mov
pushf
cld
leave
xchg
sbb
pop
call
shll
push
sub
add
andl
lret
push
mov
xchg
and
test
jmp
xchg
cmp
adc
push
mov
orb
in
xor
push
mov
dec
xchg
je
out
mov
or
ja
xor
cs
push
mov
jbe
sub
jmp
xchg
ja
mov
xorl
es
and
pushf
adc
icebp
mov
stos
adc
std
insb
loop
lar
sub
xor
add
daa
dec
dec
xchg
sbb
dec
scas
xor
pop
subb
cmp
rorb
xor
jo
es
pop
mov
repz
jmp
dec
scas
push
je
mov
sbb
and
pop
dec
jbe
jmp
dec
scas
mov
lods
shl
sbb
dec
lods
clc
mov
add
jns
imul
inc
mov
aaa
pop
and
stc
xchg
pushf
sub
add
punpckhwd
jno
mov
push
xchg
movsb
les
lods
inc
pop
lods
pop
sbb
or
scas
xor
pushf
pop
xorl
inc
or
jmp
aam
loopne
out
pop
inc
jo
mov
fidivs
dec
sbb
inc
adc
divb
inc
or
aaa
rcll
inc
adc
add
aad
and
gs
loope
and
dec
or
fnstenv
adc
ds
repz
ss
andl
clc
js
fidivrl
std
rcrl
lret
jecxz
pop
std
xchg
inc
and
sti
rorb
mov
movsb
jecxz
lds
scas
and
xor
repnz
fwait
idivl
xchg
lret
mov
call
pop
mov
mov
inc
cmp
pop
stos
sbb
ret
outsl
inc
js
inc
lea
mov
mov
or
aam
push
or
je
xchg
clc
popa
push
push
push
cmp
cmp
out
ss
aaa
pushf
sub
sub
xor
adc
jno
sub
stos
mov
shrb
pop
xchg
pop
and
mov
icebp
loop
jb
cwtl
lret
out
aad
loopne
mov
mov
add
cmpsl
jg
sbb
dec
pushf
loopne
les
push
jnp
iret
fwait
sub
jle
into
push
fwait
aam
cmpsl
inc
std
aaa
iret
push
lds
ds
inc
fisubrl
mov
hlt
jg
mov
sub
push
sub
jnp
std
mov
add
adc
jnp
ret
dec
test
int
in
mov
mov
test
or
sub
mov
shll
push
lds
inc
movl
cs
test
ret
xor
fisubrs
outsl
xor
sub
mov
movsb
push
shr
xlat
add
and
adc
lret
xlat
leave
xchg
sbb
push
fldenv
fimull
lds
pop
pop
xor
sub
cmp
mov
fucomip
cmp
xor
and
jge
jmp
push
xchg
sub
push
rorl
jb,pt
mov
loopne
push
mov
sbb
stos
mov
es
push
adc
mov
xor
imul
je
push
outsl
pop
xchg
mov
cwtl
mov
xor
sbb
push
fiadds
cmp
sbb
mov
cmp
sbb
mov
test
sub
xor
push
repz
xchg
adc
and
push
mov
insb
xchg
movsl
lods
sub
mov
inc
stos
jecxz
adc
mov
test
xor
mov
scas
mov
inc
test
mov
xor
dec
mulb
push
popa
test
cmp
pop
jno
sahf
cmc
popf
mov
mov
cmc
imul
into
jmp
pop
xchg
push
into
cmp
cmpsb
jne
test
pushf
xor
loope
push
mov
cmpb
sbb
sbb
lahf
orb
cmpsb
and
cld
ficompl
outsl
outsl
pop
add
mov
push
xchg
mov
or
sti
adc
sbb
mov
push
roll
mov
enter
insb
rclb
add
fwait
push
outsl
xor
sbb
sbb
push
mov
adc
fnstenv
arpl
dec
insl
lea
mov
movsl
inc
mov
mov
imul
fucomp
push
xchg
pushf
inc
mov
gs
mov
push
or
cmp
loop
das
imul
lret
adc
inc
pop
imull
push
pushf
sti
push
mov
popa
gs
push
repz
loop
out
push
cmp
insl
xchg
adc
call
mov
ds
add
jle
scas
add
cmc
sbb
mov
jecxz
jb
jmp
pop
mov
cmp
outsb
add
lret
out
push
mov
aad
push
and
pushf
in
mov
pop
fstpt
inc
lahf
mov
mov
nop
imul
mov
mov
push
and
int3
jo
lods
int3
int3
mov
cmpl
and
mov
and
insl
jg
or
dec
xchg
push
pop
aad
inc
pop
pusha
mov
pop
out
dec
out
push
cmp
mov
jbe
push
sub
rcrl
jne
push
sub
shlb
scas
xchg
add
outsb
mov
lock
into
mov
jl
scas
aaa
xchg
push
decl
fsubrl
xchg
ret
aam
xchg
cwtl
jl
rorb
xor
repz
push
lock
lahf
or
pop
cmc
leave
mov
sbb
mov
pop
aas
int3
nop
and
jno
xor
push
push
sbb
lahf
xchg
or
fwait
or
push
bound
push
sub
adc
mov
clc
cmp
cs
adc
or
pop
out
movsb
lret
pushf
arpl
jo
out
test
in
ficoml
pop
mov
or
shrl
test
and
mov
pushf
lea
push
repnz
xchg
adc
xchg
loope
fisubrs
jl
stc
cld
mov
cmp
imul
dec
sahf
xchg
out
lcall
adc
icebp
pop
or
mov
into
mov
mov
or
mov
mov
pop
lods
int
xor
sti
sbb
cmp
hlt
lcall
orl
mov
movsl
adc
int3
and
in
pop
jge
sbb
aad
ror
sub
xchg
adcl
jecxz
lods
pop
negb
mov
outsb
jnp
movsb
lds
incb
push
sbbb
mov
ss
addr16
les
xchg
mov
popa
sbbl
xor
mov
xchg
xchg
imull
add
push
add
outsb
push
movsl
sti
cwtl
jne
jnp
cmpsb
fiadds
aaa
cmp
shl
jmp
mov
cmp
adc
xor
dec
aaa
ds
arpl
mov
ja
fidivrs
test
dec
fsubr
or
scas
icebp
lahf
sbb
adc
xchg
lret
mov
imul
add
push
call
mov
test
inc
pop
imul
fucomip
mov
out
add
lret
cmp
and
jns
mov
lods
adc
stos
xor
dec
mov
mov
arpl
insb
push
js
js
mov
cltd
dec
mov
push
xlat
imul
test
in
popa
xor
ja
clc
jmp
jnp
xlat
shlb
dec
je
adc
inc
in
ja
cmp
int
and
dec
daa
shlb
cmpsl
ja
aad
cmp
int3
lods
or
jg
aaa
cmp
or
xchg
into
push
orb
movsl
loope
aad
or
inc
xchg
mov
add
lea
pop
aam
repz
cmpsb
mov
adc
insl
sub
sbb
addr16
sbbb
adc
push
insl
or
mov
xor
mov
lods
push
push
insb
add
jno
popf
sbb
pop
imul
xor
clc
setb
jge
mov
clc
xchg
movsb
mov
scas
pop
cld
mov
sbb
je
cmp
xor
fidivrs
leave
loope
inc
dec
movsb
popa
mov
inc
push
mov
adc
push
aam
ret
jp
call
and
test
push
xor
stc
push
mov
add
jno
jnp
pop
imul
fldl
outsb
daa
pop
xor
jae
mov
adc
cwtl
or
repnz
inc
testb
aad
in
out
stc
loopne
in
mov
clc
lret
push
subl
int3
xchg
dec
js
stos
bound
jle
push
les
dec
pop
das
jmp
or
int3
imulb
adcl
jnp
fs
inc
or
cmc
notb
sar
or
negb
xchg
mov
mov
lahf
sub
adc
nop
dec
and
push
pop
lock
sub
insl
cmp
pop
setp
mov
lahf
push
cmpb
gs
cmp
mov
dec
add
test
cmp
add
lock
aas
mov
mov
stos
das
insb
jmp
dec
repz
andl
clc
aaa
jg
in
pop
cmp
insl
stos
jle
dec
jae
lcall
rclb
and
call
jae
jecxz
sbb
fimuls
mov
dec
popf
and
jg
aam
adc
push
pop
pop
outsl
inc
insl
adc
nop
andb
push
not
cmpl
lea
jmp
xor
xchg
scas
mov
pop
popf
stos
test
test
lcall
push
adc
dec
sbb
rorl
mov
pop
popf
jmp
lods
insl
fisubrl
sub
bound
push
jne
leave
jg
int
cmp
out
push
sub
setge
jg,pn
lods
lret
fcompl
cmp
cmc
lret
push
into
jp
inc
fnsave
lds
imul
mov
mov
in
and
ss
xor
or
in
in
inc
push
cwtl
and
mov
and
inc
cmp
mov
or
xchg
inc
mov
adc
jl
mov
mov
cltd
xchg
clc
jl
loopne
mov
or
adc
pop
inc
in
aam
mov
and
sbb
adc
imul
sahf
loopne
sub
or
or
xor
dec
dec
jne
pushf
sub
adc
mov
mov
test
cwtl
mov
data16
mov
scas
nop
sbb
lods
cwtl
mov
sub
stc
in
lock
insl
add
adc
movsl
inc
orl
pop
add
sub
cmp
add
test
fwait
push
pop
jle
cmp
iret
push
in
arpl
movsb
sar
pusha
lods
dec
inc
mov
xchg
out
clc
cmp
cmpl
int
in
mov
sub
sarb
leave
pop
fwait
clc
jb
pop
push
imul
out
rolb
insl
mov
int
mov
mov
jbe
jne
popf
testb
pop
adc
jo
clc
and
cmp
divb
cmp
xor
ret
popf
inc
and
sub
mov
sbb
repnz
aaa
mov
cmp
inc
dec
ret
pop
push
pop
lret
xchg
cmpsl
into
cmp
rcrl
je
cmp
dec
mov
call
es
mov
jmp
ljmp
ljmp
movsb
mov
add
repnz
pusha
sbb
inc
mov
lret
xor
repz
mov
or
into
add
adc
cmp
les
outsl
cld
add
fucom
xchg
imul
ss
dec
loopne
repnz
push
into
or
lret
test
adc
gs
out
imul
popf
or
arpl
mov
das
aam
lahf
les
call
xchg
pop
pop
cmp
addr16
sub
int3
mov
loopne
add
or
popf
test
or
rcpps
sub
adc
xchg
fidivs
and
lods
push
xor
fmul
std
jg
lea
push
sbb
adc
xor
cmp
ss
inc
cmp
mov
ret
xchg
dec
loopne
jnp
jbe
arpl
push
sbb
inc
lea
xchg
fs
aam
inc
jg
push
sarb
xlat
dec
jge
popa
mov
ja
push
sub
xchg
insb
sarb
jnp
mov
stc
seto
scas
or
stos
lock
mov
cmp
or
push
xchg
inc
adc
cmp
stos
sahf
add
and
inc
xor
inc
gs
subl
sbb
dec
ds
pop
enter
imul
adc
pop
dec
int
loop
aaa
sub
pop
cmp
mov
insb
cltd
sub
aam
jnp
pop
dec
shl
shl
sbb
inc
push
stos
es
bound
fcomip
out
mov
sub
jns
sti
jno
sarl
and
mov
cmp
cmp
cmp
lret
out
addl
sbb
test
insl
cld
add
in
sub
hlt
sti
stc
inc
pop
push
ror
out
into
mov
push
xor
mov
fisttpl
inc
mov
pop
xor
add
enter
add
jbe
or
sub
inc
sahf
cmp
lds
and
adc
inc
loope
pop
push
xor
imul
out
lea
pop
outsb
daa
shlb
ret
cmp
and
or
mov
cmp
pop
shll
jae
scas
mov
jge
cmpsl
outsb
insl
test
xchg
or
sub
cmp
xor
idivl
cmp
stc
popa
cltd
imul
sub
leave
sahf
fcoms
cmp
jecxz
dec
fnstcw
fistl
jns
rorb
negl
xchg
xlat
fcompl
pop
je
nop
jbe
xchg
mov
jnp
ja
mov
jmp
cmpsl
jns
leave
jae
in
xchg
lret
xor
nop
ret
cwtl
push
push
das
and
dec
cmp
push
or
jbe
sub
and
cld
pop
repnz
jno
inc
cmp
sbb
stos
or
adc
xor
es
les
cmp
clc
repz
in
lret
aam
push
ffreep
mov
adc
sbb
mov
lods
mov
inc
mov
push
cmp
int
sarl
pop
sbb
out
dec
movsb
and
xchg
mov
jb
or
jnp
testb
add
rorb
jmp
add
in
xlat
dec
std
sub
push
push
ror
add
std
adc
pop
and
mov
dec
and
jecxz
sahf
sbb
cwtl
lds
arpl
cmpsl
out
sar
sub
mov
jmp
push
xor
testl
jmp
push
sahf
and
es
sbb
into
das
in
cld
fildl
inc
ljmp
pop
mov
lods
inc
not
nop
fisubl
xchg
je
lcall
sahf
enter
lret
dec
pop
sti
mov
mov
mov
pushf
enter
testb
popf
pop
sub
add
pop
adc
mov
cmp
xor
movsb
xchg
addr16
ror
push
ds
test
push
stos
jns
repnz
sbb
pop
xchg
popf
fdiv
leave
mov
lea
lock
mov
mov
ret
push
arpl
call
or
mov
push
daa
adc
inc
cmpsl
test
inc
and
add
jb
imul
cwtl
in
outsb
or
pop
enter
dec
cmp
jg
jp
or
or
lea
shrl
fcomip
jns
orb
pop
sbb
js
addl
or
add
inc
pop
fildll
inc
sub
fcoms
sub
jl
shrb
les
jecxz
insl
sub
stc
sub
stc
add
push
jecxz
fldl
mov
arpl
orb
std
lret
stc
mov
shr
mov
cs
inc
and
jp
in
mov
jle
mov
popa
add
and
adc
mov
sub
outsb
gs
adc
xor
xor
push
loope
repnz
push
int
sbb
pop
cmp
fisubl
jae
scas
cwtl
mov
mov
outsl
mov
mov
push
dec
adc
mov
lds
test
jge
daa
fwait
cmc
insb
fsubrs
cmp
push
inc
repnz
sbb
sahf
fwait
loop
sub
xor
push
das
mov
cmp
adc
dec
sbb
cmp
push
negl
in
adc
sub
mov
xchg
or
mov
mov
inc
fildl
jb
push
mov
outsb
add
adc
xchg
lahf
lahf
dec
test
fists
into
mov
cmp
inc
out
inc
sbb
push
scas
mov
pop
sbbl
sti
sbb
pop
fldt
aad
mov
int3
sbb
sbb
cmp
add
jbe
test
adcb
inc
sbbl
or
sbb
test
sti
rorb
mov
add
lcall
insb
cmp
xor
mov
or
movsl
and
dec
mov
add
dec
mov
adc
mov
push
jns
mov
xchg
sub
pusha
jae
int
sbb
insl
cmp
xchg
ja
sbb
xchg
dec
sbbb
hlt
fs
enter
mov
add
ds
xchg
fldcw
xchg
push
hlt
mov
xchg
xor
aaa
push
push
into
fcomi
sub
cwtl
mov
push
pop
and
inc
sbb
push
imul
mov
xor
adc
and
or
mov
lea
pop
sarb
and
clc
rcrb
in
mov
cwtl
jmp
sbb
loope
iret
out
pop
fsubr
cli
mov
repnz
int3
and
loop
in
cmpsl
push
jp
lret
xor
push
xchg
mov
xlat
out
sub
push
jl
imul
push
pop
xchg
and
jl
mov
mov
arpl
jg
sub
icebp
mov
subl
cmp
add
or
cmp
movsb
mov
sbb
sbb
inc
out
xchg
lods
jle
inc
sub
jg
xchg
imul
jmp
clc
fwait
cmpb
scas
jne
or
push
nop
jge
in
shrl
add
cmc
push
shrb
scas
adc
cmpb
stc
dec
cmp
fisubrs
sbb
or
enter
cmp
cld
fdivl
js
rcrl
imul
idivl
insb
popa
jge
out
gs
or
mov
xlat
gs
ficompl
mov
fdivrp
push
cmp
mov
push
mov
fnstsw
loope
test
inc
and
jge
push
imul
jmp
mov
inc
pushf
or
add
or
sbb
xor
push
pop
pop
push
or
das
jo
leave
call
and
nop
xor
xor
push
clc
sbb
sub
inc
add
pop
dec
xor
gs
add
adc
clc
scas
mov
sbb
mov
out
ja
mov
cmpsb
pop
fs
pop
pop
fsubrp
negb
fnstcw
pop
inc
sahf
je
in
mov
aaa
cmpsl
aaa
cld
jmp
mov
or
insb
test
aaa
jl
mov
or
ffreep
ljmp
pop
lods
adcb
and
cmpsb
sbb
push
fsubl
popa
dec
mov
aam
in
aad
loope
incb
call
aam
gs
testl
jp
jo
jle
sbb
push
andl
lds
jecxz
add
jno
xor
in
cld
movsl
mov
jl
sbb
mov
pop
dec
mov
cli
mov
lret
dec
sbb
in
dec
inc
cmpsb
pushf
mov
xchg
dec
lret
mov
iret
into
lret
jns
shll
sbb
xchg
in
pop
daa
and
rolb
sti
iret
lds
jae
in
xlat
dec
and
ret
fisubrs
shrb
inc
dec
repnz
iret
stc
stos
xchg
and
ret
fnsave
pushf
adc
repnz
je
loopne
daa
mov
sub
rcll
sahf
leave
mov
sbb
and
push
cmp
push
adc
xor
push
jecxz
mov
repnz
imul
bound
cmp
rcll
xchg
cld
nop
jns
cmp
loopne,pt
pop
aam
sub
sub
lret
jns
mov
inc
rorb
mov
les
clc
fsubl
jg
mov
adc
lds
xchg
mov
aad
pop
ret
mov
dec
xor
lods
outsb
add
dec
test
ja,pt
cmp
pop
inc
out
inc
loopne
pop
push
push
aad
lret
testl
arpl
imul
enter
xchg
jo
pop
movsb
enter
popf
adc
mov
and
mov
ds
dec
adcb
lret
dec
xchg
insl
aam
test
jg
or
mov
das
xor
xchg
fdivrl
clc
lret
ljmp
rol
jmp
clc
cwtl
addr16
dec
xor
fisttpll
xorb
outsl
adc
andb
xlat
fs
or
adc
and
aam
lcall
pop
out
push
or
jns
mov
mov
fisubs
jno
lahf
aam
mov
dec
xchg
test
xchg
leave
push
addb
in
dec
xchg
fistl
and
in
cmc
faddl
xchg
cs
jb
pop
shrl
ret
xchg
or
inc
in
jae
push
stc
leave
pusha
xchg
out
inc
rcrl
add
mov
sub
in
xchg
sub
leave
int3
cmp
push
xor
add
rorb
lahf
or
xor
and
aad
loope
xchg
mov
test
loopne
dec
incb
js
fwait
mov
int
loop
mov
cwtl
mov
xorb
mov
je
int3
icebp
mov
mov
hlt
test
lds
ja
in
in
mov
push
push
cmpsb
sub
je
fdivrs
mov
cmpsl
mov
and
call
mov
out
lret
aas
iret
inc
scas
and
pop
repz
push
sbb
iretw
ret
in
sbb
lcall
adc
sub
xor
out
repz
mov
les
jbe
scas
push
into
rol
push
mov
inc
pop
and
push
cli
cs
sbb
inc
jns
add
mov
lea
add
pop
lcall
push
out
daa
push
inc
aaa
xchg
and
push
push
and
jecxz
cmp
inc
cmc
adc
inc
push
enter
test
jmp
pop
dec
jns
sbb
xor
pop
roll
jns
sbb
inc
sbb
or
jecxz
sbb
mov
jmp
add
test
adc
enter
pop
xor
lds
xlat
stos
push
cwtl
push
mov
push
push
mov
stc
or
cmpsl
fwait
lock
jl
and
xchg
and
sub
mov
lahf
popa
out
into
lods
cld
pop
ljmp
out
xorl
es
cmp
gs
int3
cmp
cwtl
inc
imul
or
xchg
xor
test
fcom
sarb
pop
cmp
jg
fstpl
xchg
push
icebp
push
or
hlt
insb
mov
fidivrl
and
cmpsl
mov
inc
jno
out
push
jmp
in
mov
in
jl
imul
mov
sub
jecxz
lahf
cmpsb
jp
or
push
scas
push
lods
and
add
dec
sub
mov
cld
cmpsb
pop
cmp
dec
clc
cld
loopne
cld
mov
xor
inc
adc
jge
or
add
sbb
nop
jl
cmp
dec
push
loopne
int3
xchg
mov
repnz
jp
outsl
fistpl
cmp
nop
jmp
or
imull
pop
mov
addr16
adc
sub
mov
mov
xor
pop
hlt
mov
dec
leave
fwait
dec
cmp
push
mov
aas
cli
xor
lods
dec
and
ret
shlb
and
cs
or
test
jg
and
push
enter
inc
fcmove
fistl
dec
jno
pop
outsb
adc
test
nop
test
push
and
leave
test
mov
pop
mov
lcall
jmp
movb
pop
aam
les
pop
mov
insl
jge
out
jg
push
mov
sbb
pop
pop
rcrl
push
lret
xor
bound
xchg
mov
add
and
repnz
iret
fisttpll
mov
outsb
jl
imulb
lods
or
xor
movsb
sahf
xor
jb
sbb
and
jp
xor
clc
fwait
jae
popa
iret
test
insl
in
popa
push
outsl
cmp
adc
test
add
push
xchg
inc
in
scas
add
aas
inc
test
add
es
daa
icebp
mov
rcl
stc
inc
std
jo
in
mov
push
cmp
add
pushf
dec
cltd
into
filds
stos
mov
or
sbb
aaa
pop
xchg
enter
or
mov
cmp
fsubs
push
push
enter
and
dec
jb
jb
std
fidivs
mov
pop
lea
xor
fadds
push
xchg
push
std
push
cs
jnp
pop
mov
cmp
pmaddwd
aaa
shl
mov
cmp
lods
icebp
lods
lcall
mov
dec
nop
cli
and
jns
mov
clc
rolb
inc
in
cld
aam
xchg
mov
cs
loope
aas
addl
outsb
mov
jp
pop
sbb
hlt
mov
xchg
aam
pop
loope
xchg
idivb
enter
ret
dec
jp
xor
adc
test
outsl
cmpsl
xorl
sbb
dec
insb
fisubl
and
fadds
repnz
in
adc
or
push
cwtl
imul
pusha
pop
fcmovnb
cs
inc
int
in
add
jne
in
leave
pop
and
das
pop
stc
mov
jae
xlat
xor
mov
enter
bound
inc
js
fsts
mov
jmp
adc
mov
and
mov
je
shrl
adc
negl
nop
lods
adc
dec
cli
xchg
movsb
pop
sub
pushf
xor
das
scas
jge
inc
mul
repnz
mov
mov
das
mov
inc
ret
jo
inc
and
dec
in
push
pop
cmp
leave
outsb
loop
push
inc
push
inc
clc
cmc
push
add
getsec
dec
outsl
xchg
loop
es
and
bound
pop
add
mov
push
jae
ret
push
je
ss
mov
iret
imul
dec
mov
shr
pop
ret
lahf
mov
mov
mov
mov
movsl
lock
nop
sub
movsl
pop
push
lret
insl
sarb
adc
in
out
adc
fcomip
mov
or
push
ds
pop
enter
mov
cli
and
fst
lea
aaa
psubq
lods
pop
sbb
mov
in
jecxz
stos
lods
xor
rolb
pop
cmp
sbb
inc
push
and
xchg
hlt
mov
mov
jg
dec
test
mov
cmp
aam
jl
adc
and
lods
mov
insl
lcall
movsb
and
cmp
xchg
sub
xchg
pusha
fiaddl
cmpsb
dec
jmp
mov
push
mov
lds
xchg
in
cmc
lret
push
sbb
dec
cmp
je
push
mov
jge
dec
fs
mov
and
dec
mov
mov
nop
in
mov
js
arpl
stc
and
data16
jp
loopne
lock
pop
or
push
stos
popa
adc
dec
sbb
mov
mov
xchg
inc
push
and
outsb
sbb
ljmp
cmp
jmp
iret
insb
pop
cmp
mov
loop
icebp
dec
sbb
int
cwtl
pop
repz
subb
cmp
cmp
mov
insb
lahf
cmp
clc
inc
push
fldl
push
inc
jge
pop
sarl
fwait
loopne
leave
aad
dec
dec
jle
sarl
ljmp
insb
popl
inc
out
out
or
adc
mov
sub
pop
xlat
shlb
pop
stc
movsb
push
xor
lcall
lods
sbb
enter
shrl
sbb
sbb
icebp
les
mov
jecxz
inc
or
sbb
aad
icebp
adc
jge
fadds
push
fnstsw
pop
lret
mov
sbb
test
mov
pop
inc
xor
adc
inc
aam
nopl
call
mov
test
ror
jp
enter
push
std
enter
sub
mov
mov
or
dec
sub
mov
cmc
xor
mov
adc
popf
cmp
mov
imul
push
int
xchg
mov
and
fcomps
sub
push
imul
fcoml
lods
and
jns
addl
push
sub
mov
pop
inc
stos
xchg
dec
pop
ret
mov
push
test
aam
and
mov
inc
xor
movsb
jno
call
into
inc
icebp
or
dec
das
sbb
mov
xchg
sbb
bnd
js
or
sub
outsl
ss
jne
int
dec
adc
push
ljmp
imul
gs
sarl
aaa
xor
mov
xchg
add
xor
mov
lahf
lea
push
lods
cli
or
data16
push
call
push
cmp
insl
insb
pop
push
or
loopne
adc
mov
rorl
and
xor
adc
fnstenv
outsl
inc
fldcw
or
cld
cli
push
pop
jne
xchg
add
fwait
dec
adc
and
adc
dec
mov
fstpt
add
jg
incb
ds
pusha
lahf
mov
nop
adc
jmp
mov
mov
loop
sbbl
arpl
xchg
jo
jl
xchg
pop
xchg
jmp
enter
push
shll
jle
cmpsl
or
xor
outsb
mov
mov
scas
adc
and
or
push
or
cmp
xor
inc
cmp
jmp
or
ljmp
xor
enter
mov
xchg
push
sub
and
insb
pushf
iret
repnz
fnstcw
sbb
out
xchg
push
insb
movsl
add
shlb
ret
jle
cmc
into
jmp
call
add
pop
rcl
pop
lods
insl
jecxz
scas
movsb
stc
mov
insb
pop
lret
xor
sbb
test
sti
push
mov
and
aam
sub
push
stc
and
movl
adc
cmp
jl
and
mov
add
add
mov
mov
nop
ret
je
fmul
jmp
xchg
clc
pusha
mov
orl
mov
add
negb
dec
add
ja
sub
mov
xchg
paddd
jecxz
jmp
mov
sub
jg
testb
aam
je
test
or
sbb
xchg
sbb
cmpsl
mov
or
xchg
ljmp
mov
loope
lds
pop
jl
and
ret
loopne
xchg
test
aad
ret
cwtl
xchg
pusha
insb
add
cs
rorl
cmc
xchg
jg
leave
mov
pop
mov
and
pop
mov
lds
clc
jns
fistl
or
inc
aaa
loope
icebp
xor
in
cmc
dec
addl
and
fldcw
inc
mov
push
ret
jmp
aam
adc
neg
dec
sub
test
je
xor
cwtl
loop
inc
add
pop
sbb
inc
outsl
push
std
xor
fdivs
mov
mov
mov
loope
popa
pop
sbb
leave
jnp
daa
ja
sub
pop
cmp
sahf
in
or
and
mov
jne
ja
clc
mov
xor
bound
push
sbb
mov
push
adc
jle
stc
add
out
sbb
int3
mov
push
mov
mov
cmp
cmp
mov
cmp
add
mov
mov
or
pushf
fldenv
mov
stc
mov
pop
popa
incl
fcoml
or
jge
cmp
jge
insl
sbb
cmp
es
push
mov
sti
test
xorb
or
into
mov
push
sub
std
icebp
dec
mov
xor
dec
sahf
pop
pusha
nop
and
add
mov
and
sub
repnz
sbbl
into
jmp
icebp
sbb
repz
xor
or
iret
out
mov
cltd
xor
cmp
or
jmp
test
repnz
sbb
pop
sbb
and
sti
fidivs
lret
lahf
adc
dec
mov
movsl
stos
popf
inc
jae
insl
cltd
push
or
cmc
xchg
insb
inc
fwait
ret
jbe
push
das
idivb
push
scas
int
fnstcw
lret
mov
in
arpl
mov
mov
add
sbb
sub
mov
pop
adc
scas
lcall
sub
pop
or
cltd
sbb
push
nop
fs
pushf
mov
add
js
push
data16
out
xchg
imul
xchg
inc
fcoml
jle
repnz
lret
lds
js
mov
push
outsl
push
and
sahf
push
and
mov
popl
xchg
jmp
mov
or
xchg
xor
jl
shrl
dec
jl
or
xchg
cmp
mov
fists
in
stos
inc
rcll
and
das
dec
mov
sbb
out
aad
mov
mov
jmp
scas
cltd
ficomps
add
cltd
adc
icebp
jl
cwtl
or
notb
or
xor
lods
popf
ret
xchg
sbb
enter
cmc
mov
stos
add
xor
roll
shlb
aas
mov
dec
jmp
push
repz
jae
push
ljmp
lock
push
pop
add
popa
and
inc
fidivrs
cmp
add
sti
push
jns
xor
xchg
in
movsl
pop
cmp
jns
subl
lods
scas
fdivl
mov
cmp
pandn
and
push
xchg
mov
scas
jmp
enter
xchg
mov
fucom
inc
lods
mov
test
call
daa
or
std
mov
and
mov
out
call
sub
loop
add
call
and
pusha
in
add
hlt
stc
movl
decb
lds
repnz
cmp
xchg
sti
and
jae
sub
jmp
push
jmp
repnz
mov
jg
lods
mov
movsb
outsl
hlt
push
xorl
or
mov
xorl
fs
clc
movl
inc
test
pop
jle
adc
fisubl
dec
sahf
pop
xorb
outsl
mov
cmp
jmp
adc
adc
inc
loope
dec
jle
movsl
hlt
xor
jg
push
test
out
jo
test
popa
and
call
or
sbb
sbb
inc
fiadds
ds
jge
or
fisttps
stos
add
xchg
pop
jo
lock
and
out
outsl
mov
fistpll
icebp
repz
inc
ss
jp
imul
add
rol
ret
jmp
jno
jmp
cmp
shr
jp
xorl
cmpb
dec
sub
enter
or
out
jo
pop
mov
daa
es
in
xchg
cmp
std
xor
lds
orb
xchg
clc
push
mov
dec
lock
mov
int3
aas
jmp
sub
adc
shrb
jecxz
and
fisttpll
pop
pop
or
adc
xlat
xacquire
dec
add
cld
add
scas
mov
repz
in
jae
test
jl
pusha
cmc
fnstcw
les
outsl
jg
pusha
repz
fwait
or
mov
inc
xchg
xor
xchg
cmpsl
mull
push
sub
add
pop
lods
cmc
test
inc
sti
mov
mov
es
pop
xor
test
push
sbbl
jp
fidivrs
mov
lods
int3
sbbl
lock
cli
sbb
push
pop
movsb
cmp
jbe
ja
dec
add
scas
mov
mov
mov
lret
out
mov
push
lods
mov
dec
pop
push
sbb
outsl
fadds
and
ds
mov
scas
lock
mov
lods
jl
mov
int
test
xor
xlat
mov
adc
adc
js
daa
and
pop
in
sub
insb
jb
ret
mov
pop
add
dec
xchg
mov
shrb
xchg
int
sbb
xor
sbb
pop
sub
fwait
rcrb
jp
and
insb
stc
mov
fstps
sub
scas
out
mov
mov
xor
les
mov
pop
daa
ljmp
cmp
lcall
ljmp
rorb
test
data16
idivb
stc
subb
dec
out
mov
sti
jnp
jecxz
xchg
scas
imul
lds
pop
jno
cmp
rcrb
cmp
imul
jne
das
inc
xor
data16
xor
xchg
jg
test
pop
ficoml
int
shll
aas
cmp
mov
push
or
or
inc
inc
lsl
movsl
clc
mov
fisubl
psraw
mov
push
cltd
divl
out
xchg
mov
iret
jno
arpl
arpl
cs
inc
dec
sbb
xchg
inc
push
pop
cli
sbb
lods
mov
inc
jge
xor
stos
sbb
testb
daa
sbb
movsb
dec
sub
mov
mov
js
pushf
popa
out
xchg
inc
mov
push
cld
mov
dec
or
xor
xor
cmpsl
push
xor
mov
inc
adc
fisubrl
fst
imul
push
adc
das
jecxz
pop
inc
cs
imulb
mov
mov
dec
in
pop
fisubrl
mov
movsl
xor
rolb
call
mov
jb
jns
sub
mov
scas
push
xchg
dec
push
add
ja
rcrb
add
push
pop
aas
aas
and
repz
dec
push
loop
fs
pop
inc
mov
push
leave
aaa
mov
ret
in
je
in
movsl
insb
or
inc
fs
push
sbb
xchg
shll
outsb
stos
nop
out
pop
and
push
fstl
syscall
mov
adc
xchg
xchg
push
scas
aam
cmc
inc
fmuls
loopne
jno
adc
pop
mov
or
outsb
pop
scas
push
in
or
cmp
nop
or
pop
shr
pushf
insl
scas
jo
sub
sar
pop
fstpt
hlt
mov
and
fcmovnbe
mov
jmp
lods
sti
xchg
fldln2
xor
xor
mov
xchg
loop
jmp
mov
dec
rcll
out
fistps
pushf
cmc
dec
dec
mov
fs
aaa
dec
clc
adc
leave
jmp
inc
dec
scas
inc
push
in
xorb
pop
fmuls
sbb
cli
or
stos
fs
loop,pn
jno
int3
or
sub
int
add
cli
nop
sub
scas
mov
scas
sub
jo
sbb
movsb
addr16
or
repnz
insb
mov
inc
lcall
mov
add
divps
popa
inc
xor
jl
aaa
fs
mov
setnp
jnp
fsubs
ss
popa
mov
in
aad
and
fwait
loop
jg
push
scas
mov
rorl
std
adc
ret
jnp
popa
std
mov
pop
ret
bound
mov
lret
jp
adc
ljmp
push
outsb
and
stc
cld
mov
sbb
and
adc
hlt
add
fiadds
mov
lret
aas
sub
lret
cmp
jo
test
out
sub
adc
clc
jmp
mov
lds
or
iret
int3
jns
dec
inc
rclb
dec
mov
push
mov
fwait
jne
sbb
inc
jge
or
ljmp
mov
insl
popf
sbb
jns
shr
mov
nopl
sbb
and
mov
movsl
fs
mov
in
aam
cltd
stc
jge
cld
jmp
addr16
sbbl
stos
rcr
in
psraw
aas
jle
and
mov
arpl
insl
xchg
sub
mov
push
icebp
mov
and
xchg
iret
cmpsl
movsl
mov
dec
sub
push
mov
pop
push
fcoml
repz
cwtl
mov
add
push
dec
mov
jo
cwtl
lahf
movsb
add
mov
jecxz
in
int
push
shll
ljmpw
adc
sub
push
sbb
mov
ljmp
inc
xchg
mov
and
sub
push
leave
mov
pop
push
lcall
push
shr
in
popa
loop
test
or
push
lret
inc
shll
dec
out
or
test
pop
adc
cmp
inc
jl
jmp
cs
and
adc
mov
ficoms
adc
sub
scas
fiadds
xor
aam
repnz
mov
xchg
jg
jge
push
jecxz
insb
leave
mov
fwait
xor
or
or
hlt
or
cli
pop
lahf
enter
pushf
sbb
sti
dec
adc
dec
cmpsb
mov
xlat
pop
xor
dec
sbb
xchg
rclb
movsl
cmp
lcall
xchg
lock
and
mov
das
jmp
scas
sub
jns
into
test
jmp
divl
pop
jmp
xchg
int3
pop
lcall
mov
in
stc
mov
jmp
std
testl
je
sbb
and
mov
dec
nop
mov
inc
iret
not
push
cmp
fucomi
mov
sbb
add
mov
dec
cwtl
mov
pop
add
inc
sbb
popa
sub
in
dec
push
leave
int3
imul
repz
sbb
or
pop
movsl
mov
fnstenv
ret
popf
ficomps
pop
ja
cmp
jle
int
sub
std
xchg
mov
cmp
pushf
mov
mov
and
jbe
bound
and
test
mov
in
loopne
mov
and
cmp
adc
inc
sbb
mov
xor
out
push
dec
ficomps
fwait
xlat
push
leave
sahf
fs
pop
repz
push
xor
outsb
cwtl
push
push
lcall
sub
xchg
xchg
ljmp
sbb
test
sbb
jnp
sbb
fdivrp
movaps
or
xchg
popf
pop
xor
adc
insl
mov
pop
mov
lods
inc
fdiv
sub
bound
push
cmpsl
and
mov
xlat
call
jmp
mov
xchg
mov
sbb
add
or
or
adc
inc
frstor
lods
into
sbb
adc
mov
xor
inc
out
sub
mov
jnp
sub
outsb
and
and
push
out
enter
mov
pandn
hlt
out
mov
push
nop
push
add
outsb
mov
stos
hlt
sti
jmp
push
pop
std
sub
stos
roll
push
mov
xchg
and
imul
popa
pop
adc
pushf
inc
testl
xor
pop
xor
lods
iret
int3
sub
push
hlt
dec
dec
cmp
sbb
sahf
es
popf
xchg
les
les
adc
into
mov
stc
scas
leave
fwait
jno
lock
pop
lds
stc
sbb
fnsave
in
outsb
dec
sbb
bound
test
push
and
icebp
faddl
iret
sbb
xchg
push
sub
mov
mov
sbb
push
imul
add
fstpl
push
add
fdivs
movsb
or
cmp
xchg
xor
add
mov
movsl
pop
daa
fnstsw
in
xor
pop
sub
mov
xlat
sbb
cmpl
or
xchg
dec
adc
push
notw
daa
mov
cmpsl
cmp
and
nop
in
pop
aas
mov
ss
xor
inc
xor
jecxz
inc
imul
inc
ret
sahf
pop
arpl
or
xlat
repz
jns
shlb
pop
icebp
aaa
stos
fcomps
das
xor
in
ret
pop
testl
lret
and
mov
stos
adc
shll
mov
push
xchg
scas
dec
mov
adc
push
repnz
out
jnp
and
mov
and
test
pusha
jmp
gs
nop
dec
inc
out
imull
sub
jle
lcall
inc
cmp
push
movsb
dec
add
out
mov
push
aas
push
andb
adc
push
jg
insb
jecxz
mov
jmp
xor
dec
push
push
jmp
fwait
add
mov
pop
lock
les
dec
popa
mov
cmpsl
movsb
inc
test
cmp
mov
ljmp
sub
fwait
jnp
xchg
mull
push
imul
lock
lds
or
adc
mov
je
les
xchg
pop
sbb
dec
stos
jecxz
fmull
loope
mov
test
push
jb
subb
mov
imul
scas
leave
sub
jb
fdivrp
cmpsl
mov
fstpt
inc
jmp
sub
sbbb
std
mov
lds
mov
int
xor
inc
pop
push
push
pop
out
push
dec
insl
ljmp
jg
pop
cmp
inc
ficoms
jno
int
insl
xchg
outsb
movsl
mov
xor
call
and
das
ja
out
repnz
mov
arpl
dec
insb
or
fnstenv
scas
or
loope
imul
push
mov
sbb
mov
sbb
test
call
xchg
test
add
test
sub
pusha
test
jo
sbb
adc
xor
inc
inc
xor
rol
lods
and
cmp
push
sub
sub
arpl
push
imul
add
xor
adc
out
pop
mov
inc
sbb
mov
xchg
add
dec
nop
pop
dec
pop
fsubl
xchg
cmp
mov
clc
mov
pop
jp
mov
popa
les
stc
movsb
test
ss
scas
cmp
bound
sub
dec
mov
jmp
fwait
sub
daa
out
mov
sahf
rolb
int3
out
inc
insb
test
sbb
cltd
leave
dec
in
xor
add
mov
and
and
ljmp
ror
pop
jmp
inc
push
adc
sub
inc
lret
bound
stc
jnp
ffree
aad
imul
jnp
and
lcall
out
pop
orb
scas
push
aas
or
cmc
mov
push
and
inc
mov
aas
loopne
xor
pop
pop
xchg
and
inc
pop
mov
sub
xchg
push
inc
dec
jmp
repnz
bound
xor
mov
dec
inc
add
xchg
insb
test
push
jnp
pop
aad
data16
enter
xor
and
cltd
outsb
mov
repnz
sahf
xchg
push
xor
mov
push
decb
aad
jnp
shrl
inc
jb
push
cmpsl
mov
mov
jnp
fbld
mov
push
pop
mov
pop
mov
out
mov
fdivr
push
adc
hlt
in
into
or
lret
ja
jb
js
mov
mov
aam
adc
mov
sahf
push
push
xchg
and
pop
lea
or
data16
and
das
mov
and
iret
iret
repz
fwait
cmp
jnp
loop
stos
cld
jmp
add
stos
cmc
enter
push
adcl
add
or
or
cmp
fwait
mov
ja
mov
fstpt
mov
jns
jns
fwait
test
or
push
out
sbb
int
call
into
pop
stos
or
lcall
adc
movsb
inc
mov
shlb
jge
loopne
sub
negl
mov
sbb
dec
rcll
jp
pop
or
and
xor
or
inc
xor
mov
jge
iret
lahf
test
push
lds
cmp
leave
sti
out
xor
adc
test
push
xchg
mov
push
push
push
pop
fwait
dec
repnz
popf
gs
mov
mov
dec
dec
xchg
jp
jecxz
andl
push
xor
popa
cwtl
idiv
sub
jl
fwait
cmp
inc
stc
sbb
scas
dec
enter
aas
js
or
xor
push
inc
xchg
mov
mov
jmp
leave
mov
popf
jg
loop
gs
mov
jg
push
je
imul
cmp
ficompl
dec
sub
sub
and
mov
lock
idiv
rep
pushf
cmp
data16
das
and
aaa
dec
movsb
adcb
lret
jne
je
cmp
into
insb
sbbl
dec
mov
enter
test
repnz
sub
jg
shr
xchg
sbb
out
and
jno
fs
jl
jae
cs
sahf
mov
in
push
enter
imul
mov
sub
lcall
xchg
cli
sar
push
mov
cwtl
pop
dec
ret
int
sub
insb
mov
fdivl
adc
pop
mov
stc
jo
xchg
popf
xchg
jge
icebp
iret
mov
mov
pop
test
mov
mov
dec
lret
aad
sub
stc
sti
pop
jno
jg
mov
mov
sbb
mov
mov
sahf
in
shlb
aam
je
clc
icebp
jmp
lds
mov
leave
push
push
mov
inc
add
adc
cli
das
push
pusha
lea
xor
jo
imul
dec
lahf
adc
es
mov
idivl
mov
jl
orb
sti
js
cwtl
fistpl
hlt
imulb
mov
stos
mov
les
insl
mov
sbb
mov
cmc
sub
mov
and
pop
popf
aam
loope
cmp
push
out
mov
fwait
jbe
scas
in
mov
adc
hlt
mov
jp
insl
fimuls
pop
aam
outsb
insl
sbb
notb
imul
int3
mov
add
mov
lea
into
clc
xchg
dec
cli
movb
movsl
mov
movsl
sbb
sti
jbe
leave
call
stos
sbb
or
adc
inc
mov
push
sbbb
loopne
adc
inc
inc
push
pop
push
roll
iret
add
sub
xchg
mov
mov
cmp
popf
les
int
popa
rcl
add
adc
fistl
sub
cmp
push
mov
push
ret
aam
jne
stc
nop
call
xchg
mov
nop
jnp
and
repnz
jae
int
jmp
rol
mov
sbb
inc
xchg
dec
jnp
popf
addb
push
cmp
popa
xorb
in
lock
push
sti
jne
add
fdiv
loope
rcrl
sarb
nop
dec
fidivrl
data16
inc
push
cmp
adc
xor
daa
enter
mov
aad
insb
add
dec
add
dec
mov
fldl
call
daa
loopne
inc
nop
adc
jge
xor
out
mov
jo
and
xor
stos
and
or
inc
repnz
ss
inc
mov
jmp
dec
jge
pop
pop
ja
push
shlb
cld
dec
push
mov
int3
in
in
pop
cltd
mov
dec
jo
sub
loopne
jge
mov
aam
push
mov
loop
jl
cmp
pop
or
sub
push
popa
dec
stos
xor
repnz
pop
hlt
nop
inc
outsb
xchg
mov
js
mov
cmpl
add
andb
sub
cmpsb
mov
lock
dec
push
popa
lahf
mov
cmp
sbb
mov
pop
push
cmp
scas
or
ja
shl
into
sub
mov
xor
jp
je
cwtl
popf
arpl
cmp
inc
in
lret
pusha
fimuls
clc
xlat
mov
pop
mov
clc
insb
or
lahf
arpl
adcl
adc
icebp
lock
icebp
cli
cmp
push
cltd
sub
imul
fisubrs
daa
insb
dec
frstors
mov
jns
fsubrl
adc
test
pop
das
ret
sub
jle
lea
ljmp
xor
mov
and
les
loopne
popf
mov
test
push
cs
test
and
jb
aad
bound
jnp
mov
filds
fidivrl
inc
lea
faddl
mov
xchg
lods
in
dec
popf
fisubs
xor
mov
adc
stc
in
in
lea
adc
xchg
xor
xchg
hlt
mov
popf
mov
pushf
ret
and
or
test
movsb
jns
cmpb
dec
hlt
add
xchg
into
sbb
out
cmpsb
shlb
int
shl
ljmp
and
add
sti
dec
insb
lea
mov
xor
jl,pn
mov
repnz
and
addr16
dec
ficoml
ljmp
pop
inc
test
dec
imul
mov
mov
sbb
jno
popf
call
push
por
jnp
jne
or
lods
push
in
push
cmp
sub
jns
xor
push
adc
pusha
jecxz
into
xchg
sahf
lret
jb
sahf
mov
loop
call
mov
xorb
mov
push
xchg
rcl
pop
and
fcomp
xchg
jmp
jno
pop
xor
and
loope
xchg
and
iret
jl
adc
mov
jnp
sbb
mov
dec
mov
cmp
or
sbb
push
push
stc
push
fndisi(8087
ret
inc
js
daa
aad
sbb
sbb
pop
mov
std
xor
jns
or
cmp
mov
lahf
sti
movsl
cmc
fimuls
loop
push
adc
mov
add
call
sub
sub
imul
pop
popf
fwait
xchg
cmp
stos
add
xchg
out
and
mov
lret
or
cli
repnz
rorb
in
mov
sub
imul
ss
mov
cmp
sbb
or
jne
sub
mov
lods
cwtl
xor
sub
lret
mov
ljmp
xchg
test
jl
sub
jmp
into
or
push
es
or
int
or
inc
daa
dec
fnstcw
inc
cmp
scas
jp
mov
sti
out
or
dec
dec
add
xor
fmuls
mov
cmpsb
pop
pop
pop
outsl
int3
inc
push
cmp
cmp
mov
sbbb
les
imul
mov
jne
lea
xor
cmp
xchg
cmp
mov
xchg
mov
lock
add
xor
mov
negb
xor
in
jae
jecxz
cmp
inc
add
fstps
insl
push
xor
sub
cmpsl
daa
mov
cmpsl
sub
dec
xchg
push
dec
cmp
mull
cmc
cwtl
outsl
jb
fs
cmpsl
fildll
cmp
dec
push
xchg
jns
and
movsb
dec
aas
sub
mov
push
pop
inc
imul
js
push
rcll
int
rol
ljmp
push
pop
lret
adc
sbb
repnz
fistpl
das
add
movsl
dec
scas
push
mov
jb
mov
mov
pop
jnp
sbb
pop
int3
sbb
mov
jge
aas
dec
divb
leave
movsl
addr16
adc
ss
push
and
sub
idivb
xchg
and
xchg
ret
adc
xchg
sahf
push
repnz
fstl
dec
xor
dec
add
sbb
ja
popf
sub
mov
fisttps
mov
dec
mov
mov
gs
fcmovne
mov
lret
js
bound
mov
mov
pop
mov
xchg
push
jp
cld
faddp
mov
inc
lods
xor
test
push
sbb
sbb
mov
aaa
insl
fs
mov
push
add
ds
mov
stos
addl
les
icebp
mov
sbb
jnp
mov
aaa
push
inc
add
xor
int
pop
xchg
adc
outsb
mov
sub
jb
pusha
andb
inc
xor
rcll
sbb
divl
mov
stc
sbb
cmp
mov
icebp
xchg
cmp
xchg
adc
pop
cmp
movsb
pop
fstp
or
and
or
jns
mov
jg
sbb
push
test
out
pop
pop
sbb
jge
notl
inc
inc
adc
jae
nop
js
add
cltd
adc
pop
dec
das
nop
mov
lcall
aas
mov
sarl
xchg
sub
mov
inc
ljmp
mov
inc
mov
jns
add
fstpt
xchg
stc
mov
dec
jae
in
popa
push
out
outsb
sbb
clc
pop
push
sbb
xor
roll
cmp
sarl
dec
or
mov
sahf
sahf
icebp
adc
sub
fisttpl
mov
in
cmove
test
cmp
lret
mov
pop
scas
mov
dec
cmc
xchg
mov
mov
push
rcll
insl
idivb
dec
mov
rol
or
into
inc
movsl
xchg
lret
inc
lds
mov
inc
adc
mov
push
sub
push
xchg
divb
or
sbb
sbb
mov
pusha
dec
in
out
imul
pop
pushf
mov
jle
and
mov
fcomps
or
push
inc
and
repnz
scas
push
pop
movsb
mov
and
syscall
mov
inc
test
adc
and
dec
jbe
cmp
push
jmp
rcll
cmp
cmp
or
daa
shll
sub
sbb
jb
xchg
mov
cltd
arpl
cs
imull
mov
mov
or
sbb
test
dec
push
sub
mov
lret
dec
cmp
into
push
jne
pop
cmp
je
into
imul
pop
jg
out
lret
lods
jae
cmpsl
xchg
pop
pop
add
mov
in
jb
inc
inc
lahf
icebp
popf
push
jne
mov
sbb
xlat
in
push
mov
push
les
jae
and
or
rcl
sbb
cmpsb
popf
insl
imul
or
shll
dec
test
test
test
xor
xchg
sub
or
cmp
out
stc
mov
fdivrs
inc
push
push
fbld
leave
and
and
outsb
andb
lds
cmp
mov
cli
cli
icebp
inc
jp
sahf
inc
repz
nop
sub
inc
scas
pop
movsl
fs
mov
sahf
jp
pop
sarb
loopne
mov
dec
insb
cwtl
repz
lret
sbb
in
call
inc
dec
ja
add
loop
insb
sbb
sti
leave
dec
out
or
jmp
in
mov
aas
xabort
das
lods
js
add
mov
inc
lahf
in
cmpsb
insb
add
sarl
rolb
jge
pop
pop
or
shll
dec
popf
stos
icebp
dec
popa
push
jae
mov
or
push
lret
push
scas
mov
fnstcw
xchg
ljmp
stos
pop
push
xor
xchg
fwait
push
xchg
inc
or
pop
aas
xor
hlt
pop
mov
dec
inc
push
bound
push
xor
mov
rorb
in
in
cld
fbld
lcall
dec
jns
push
pop
jae
lds
bound
push
ret
and
sbb
test
icebp
into
scas
outsl
out
pop
loope
loope
notl
movsb
and
sub
lret
loopne
call
dec
jg
push
adc
lods
push
shr
lret
fsubrp
in
movsb
push
or
negl
pop
dec
xlat
repz
jle
push
or
sahf
mov
dec
arpl
mov
mov
xchg
fdivs
or
les
mov
pushf
mov
pop
imul
mov
jecxz
adc
sub
push
adc
xchg
lret
and
xor
xor
push
xor
mov
mov
pop
push
and
mov
push
pop
jnp,pn
cwtl
dec
mov
mov
cmc
mov
int3
sbb
push
fisubrs
cmp
xlat
mov
xor
hlt
arpl
jnp
sub
loope
jge
movsl
mov
cli
xor
enter
jge
int3
jg
in
loop
add
xlat
xlat
in
sbb
lret
xchg
int3
xchg
lods
mov
mov
ljmp
pop
sub
hlt
xchg
and
loopne
push
jmp
jp
loopne
jecxz
dec
int
mov
imul
mov
mov
fsubrl
cmp
jo
xor
fadds
and
enter
xchg
mov
loop
fs
mov
sub
xchg
les
xchg
xchg
movsl
lret
movsb
out
mov
pushaw
or
shlb
mov
inc
adc
jno
cltd
gs
mov
into
and
mov
js
ret
and
mov
cmp
add
mov
adcl
inc
sbb
arpl
movsb
dec
inc
mov
outsb
imul
cmc
xchg
sub
in
inc
mov
cs
cmpl
subb
icebp
call
lods
push
sti
jecxz
shll
push
xchg
mov
xchg
dec
pop
mov
jae
es
lahf
stc
idivb
adc
add
jb
cld
jecxz
notb
mov
cmp
jmp
inc
adc
in
into
add
fs
dec
in
inc
lock
stc
fisttpll
adc
int
rcrl
push
push
xlat
mov
bound
roll
push
setne
test
or
ljmp
jo
outsl
je
add
cmpsb
mov
fcmovnbe
jmp
jge
mov
sbbb
pushf
inc
adc
mov
pop
mov
lock
or
iret
ret
int3
mov
fucomip
and
dec
and
jns
rcrb
je
std
adc
inc
or
cmpsl
ja
sub
jmp
daa
out
shll
pusha
jbe
stos
jbe
pusha
je
lock
js
stos
movsl
scas
out
xor
xchg
mov
dec
scas
and
addr16
mov
call
jmp
std
pop
icebp
jb
stos
cmp
xor
int3
and
sub
popa
repnz
mov
jno
incl
orl
cmp
jmp
or
lret
in
scas
je
lcall
mov
std
in
xchg
mov
xchg
clc
mov
mov
das
xchg
jae
aam
aas
cmpsb
repnz
lds
inc
sbb
xor
mov
inc
jns
sub
xchg
repnz
mov
les
jmp
daa
into
pop
mov
fimuls
cmpsl
and
divl
lret
pop
inc
cmp
rcrl
push
pop
dec
mov
sbb
rcrb
ja
stos
in
lock
ret
xor
insl
stos
into
cld
in
ljmp
mov
repz
sahf
jmp
iret
fcom
adc
add
arpl
mov
mov
sahf
negl
dec
ret
test
inc
and
jo
pop
or
jae
clc
in
mov
jne
mov
mov
bswap
or
lret
add
aaa
add
pop
jb
movsb
fnstenv
out
cwtl
mov
and
jp
shll
ds
and
add
cltd
sub
lods
js,pn
mov
add
adc
and
insl
shll
add
fadds
int3
loope
cmp
add
add
sub
add
cmpsb
or
daa
mov
subl
imulb
les
cld
pushf
popf
pop
push
aas
stos
mov
cmp
add
mov
mov
add
dec
cmp
xor
insb
add
sbb
pop
filds
inc
mov
les
jo
or
inc
or
iret
xchg
dec
cld
push
add
mov
into
movb
mov
pop
or
leave
mov
adc
mov
add
repnz
scas
das
jg
lea
rol
jbe
sbb
mov
or
mov
int3
cli
jecxz
les
inc
dec
aam
mov
mov
repz
mov
dec
jmp
fdiv
mov
mov
push
es
test
push
push
dec
jp
inc
shlb
push
repz
rorl
xor
mov
insl
jmp
pop
cmp
movsb
push
stc
push
sbb
sahf
arpl
mov
dec
out
jge
and
outsb
sub
lods
insb
loop
icebp
pop
popf
inc
or
in
mov
test
outsl
in
xor
mov
adc
mov
dec
mov
pushf
sbb
cmp
cmp
dec
mov
jno
mov
xchg
mov
inc
shlb
adc
pop
jl
into
cld
jns
dec
aas
inc
idiv
pop
sarl
mov
jp
fnstenv
lret
mov
adc
sbb
jge
and
sbb
dec
adc
rcl
cmpb
in
mov
add
pushf
sbb
add
insb
mov
push
inc
inc
aad
adc
out
mov
mov
out
insl
jg
aas
dec
fcoms
push
dec
hlt
test
sahf
addl
lret
pop
pop
outsl
xchg
cmp
in
pop
loopne
in
add
cmpsb
lret
aas
add
pop
test
sbb
cmp
int3
push
addl
jae
outsl
xchg
push
int3
pop
sbb
paddw
fwait
push
stos
lret
stc
sub
push
pop
mov
sub
insb
cmp
call
out
sbb
pop
testl
cli
test
lret
pop
sub
mov
sub
jmp
popf
mov
xlat
pop
aaa
xor
daa
push
repz
sbb
mov
jg
pop
xor
out
cmc
mov
jle
or
push
pop
jp
jnp
jae
lret
inc
jl
sbb
dec
fisubrl
pop
mov
dec
and
jmp
or
and
jae
rcrl
je
test
jg
js
icebp
loopne
mov
xor
ficomps
loopne
loopne
push
sbb
fcmovnu
pop
sub
xlat
sbb
repz
and
cmc
inc
inc
mov
cmp
in
call
in
dec
and
jl
or
add
push
adc
push
popa
push
mov
jne
pushf
ror
rclb
cmp
les
dec
ja
fldenv
dec
pop
js
sbb
iret
bound
lret
cltd
lahf
mov
push
sbb
fwait
cmpsb
loope
loopne
jmp
imul
mov
adc
sub
jg
push
sub
gs
lcall
scas
mov
lcall
push
std
pop
sub
ret
or
sbb
add
cld
ret
out
cmp
jg
aas
sub
sbb
testl
aam
fwait
jmp
popa
pop
mov
jge
mov
mov
pop
dec
es
and
inc
mov
out
je
fadds
icebp
subl
sti
dec
stc
jmp
popa
stos
mov
and
pop
sarb
mov
mov
ret
roll
ds
mov
out
dec
xor
adc
jae
sti
mov
enter
cltd
mov
cltd
aad
xor
push
jno
movsl
dec
sbb
repnz
pushf
mov
ds
ficomps
pop
pushf
add
adcb
xchg
es
mov
nop
or
jmp
inc
data16
inc
std
dec
movsb
daa
pop
pop
lret
scas
lcall
inc
dec
shrb
shlb
push
cmpsb
inc
jb
jae
pop
or
jb
mov
xlat
xchg
jge
pop
cmp
mov
add
dec
mov
icebp
or
push
js
jb,pt
clc
int3
inc
mov
xorb
pop
hlt
std
jnp
mov
pop
cli
addr16
lret
pop
dec
dec
enter
jbe
pop
or
mov
loope
adc
mov
pushf
je
cwtl
cmp
jecxz
pop
or
jp
mov
out
pop
dec
push
inc
cltd
fidivrl
outsb
mov
ja
movsb
sub
std
icebp
xchg
sbb
adc
push
add
rolb
lock
pop
cld
xchg
xchg
hlt
cmp
sub
mov
pop
cs
sbb
test
mov
sti
cmp
inc
pop
push
xchg
add
ja
ror
xchg
sti
mov
orl
jbe
push
mov
push
cmpl
inc
inc
xchg
cmpsl
out
mov
mov
jp
xlat
inc
pop
dec
sbb
stos
popa
jno
fcompl
cmpsl
xchg
dec
lods
jne
fsubs
repz
icebp
push
push
jg
push
lcall
pop
test
stc
scas
pusha
mov
ss
cli
adcb
or
rclb
pop
adc
insl
adc
stos
mov
mov
jae
rclb
mov
cltd
ret
pop
mov
test
xchg
push
outsb
pop
rorb
inc
xchg
fnstsw
in
loope
bound
push
test
mov
sub
or
push
loopne
push
pop
mov
jge
das
mov
int3
movb
jmp
hlt
xor
cmp
pushf
xor
stos
inc
stos
int3
mov
dec
cmp
sub
push
xchg
push
xchg
enter
in
lea
sbb
add
inc
and
pop
adc
das
xor
daa
jo
push
push
mov
xchg
mov
mov
inc
mov
loope
mov
fcoms
test
cmp
iret
sub
or
scas
push
sub
icebp
jnp
lcall
fsubl
stos
into
in
mov
scas
loope
das
jo
adc
inc
mov
inc
jb
jno
and
jge
xor
xor
je
in
pushf
aas
movsl
sub
leave
outsl
sbb
testb
inc
rclb
add
dec
icebp
mov
xor
xor
inc
jns
pop
push
scas
inc
popa
xor
into
arpl
jb
cmpsl
add
push
loopne
repz
imul
mov
mov
jl
into
or
shll
sbb
mov
mov
sbb
adc
jbe
cli
xor
and
je
pshufw
lret
lret
rolb
std
int3
data16
pcmpeqd
xchg
dec
aam
adc
lret
mov
or
mov
sti
jge
sub
or
mov
imul
sti
lds
adc
in
push
jmp
push
jge
cli
and
jp
mov
cmc
ret
mov
les
adc
pop
out
aas
cmp
test
popf
adc
or
stc
mulb
mov
data16
cltd
scas
inc
sbb
or
sbb
xchg
int3
test
in
jmp
ficompl
xchg
lods
jne
xchg
mov
pop
nop
mov
mov
adc
or
test
pop
cli
add
loope
leave
sbb
or
mov
or
adc
xchg
in
cmp
mov
cli
cmc
push
jnp
addl
repz
mov
pop
xor
faddl
sub
jl
cmp
xchg
test
inc
addr16
fldt
jge
mov
ficoml
xchg
negb
test
dec
test
icebp
push
enter
stc
daa
mov
mov
dec
fistpll
loop
rcl
stos
stc
fisttps
imul
or
std
xor
mov
xor
insb
es
lds
xchg
scas
gs
fcoms
out
movsb
sbb
jmp
dec
ds
dec
and
cld
pushf
imulb
sub
mov
mov
dec
jb
pop
push
outsb
in
ret
cmp
inc
inc
movb
cli
rolb
inc
lret
jmp
jb
xor
data16
cli
mov
adcl
xchg
ja
jmp
in
xor
aas
in
daa
mov
mov
adc
dec
inc
or
inc
add
fbstp
aas
xor
push
ss
repz
pop
and
xchg
inc
push
push
xchg
mov
movsb
jno
imul
adc
mov
popa
icebp
add
ret
dec
xor
dec
jne
lret
decb
inc
add
data16
mov
xchg
inc
jge
adc
add
mov
jl
pop
push
shr
test
adc
cld
pop
mov
pushf
jne
pushaw
aam
negb
adc
pop
pop
adc
dec
jne
and
sahf
adc
outsl
mov
mov
sahf
es
scas
out
adc
lret
xor
pop
movsb
movsl
mov
iret
jecxz
or
out
lods
xchg
pop
lea
andb
dec
mov
push
mov
lock
mov
loope
push
jp
je
jbe
xor
popa
into
dec
add
ljmp
addr16
jge
call
flds
cmpsl
inc
popf
daa
add
mov
pop
lahf
xor
mov
test
sbb
sti
lods
enter
leave
push
add
lret
cwtl
popf
jns
jmp
aad
lss
pop
jg
in
cmpsl
loope
ja
dec
stos
push
lea
enter
add
adc
mov
jl
lea
sbb
xchg
inc
stc
movsl
mov
das
fdivl
lods
pop
mov
loope
fcmovnu
mov
inc
jmp
fcoml
mov
xor
and
mov
pop
cld
pop
mov
out
addr16
adc
and
cmp
imul
push
xchg
pop
cmp
rcl
jne
sbb
sbb
mov
rcrl
and
ficomps
outsl
rcl
loop
icebp
cmpsl
mov
dec
stos
push
fs
fmuls
insb
mov
aad
dec
and
dec
cmc
sbb
push
dec
shll
ja
xchg
jne
aas
jecxz
inc
pop
push
popa
inc
inc
fildll
in
sub
pop
sbb
cmp
pop
nop
aad
or
pop
scas
jg
stos
das
and
cld
cmc
cmpsb
sbb
ficompl
ds
dec
jns
daa
fisubrs
aad
lds
dec
fsubrp
icebp
insb
pusha
and
add
mov
arpl
cmpsb
cmp
clc
fstpl
insb
add
aas
cmc
adc
scas
mov
add
loope
cmp
mov
jg
or
push
mov
daa
aaa
cmp
mov
mov
das
scas
or
loop
adc
and
pop
xchg
inc
add
mov
out
fbstp
mov
pop
push
outsb
fists
push
mov
jo
push
or
add
ljmp
ror
push
iret
adc
data16
jns
aam
push
ret
mov
xchg
cmp
repnz
inc
push
pop
sub
lods
andl
push
and
cmc
mov
ds
popa
pop
jb
jne
dec
xchg
movsb
mov
cmc
rolb
pop
test
mov
repz
jb
add
xor
cmpsl
cli
jne
rcrl
add
rcr
repz
mov
clc
or
packuswb
stos
movsl
clc
push
jmp
inc
mov
mov
and
adc
andl
lds
xchg
mov
add
sbb
push
and
push
xchg
outsb
and
dec
dec
int3
es
or
pop
imull
movsb
jp
lahf
lock
movsb
and
cmp
xor
in
add
test
xorb
popa
mov
js
movsb
mov
decb
ss
es
jmp
mov
sub
out
arpl
xchg
mov
mov
ds
lahf
mov
mov
dec
mov
enter
cmp
add
cmp
in
stos
or
movsl
mov
pop
stc
icebp
xlat
inc
cmp
mov
sbb
jmp
or
jo
push
xchg
sub
loopne
jmp
daa
ret
add
mov
cmpsl
rcr
leave
dec
bswap
addb
mov
cmpsl
add
mov
dec
dec
push
outsl
in
mov
push
adc
add
or
or
call
add
mov
out
xorl
lds
fistl
fdivrs
push
into
add
inc
push
jle
cltd
xchg
add
mov
je
xchg
xchg
scas
lods
cmp
addl
inc
add
adc
cmpl
sahf
adc
mov
nop
hlt
movsb
nop
mov
xor
jne
cld
and
inc
aad
ljmp
dec
outsl
pop
or
dec
push
movsl
cmp
push
lret
xchg
in
lret
mov
inc
testl
scas
test
out
pop
mov
jb
orl
cmp
repz
cmp
sbb
stos
xchg
std
adc
pop
mov
lahf
out
mov
mov
pop
push
fstpt
mov
add
das
es
dec
lret
and
pop
push
mov
and
cltd
dec
pop
mov
sbb
xchg
repnz
jge
mov
stos
mov
and
pop
xlat
mov
xchg
arpl
shl
out
inc
das
sbb
xchg
ds
sub
in
test
arpl
std
mov
and
lcall
and
jg
adc
sbb
out
adc
add
jno
jmp
loop
dec
stos
sub
movsl
aam
cld
cli
push
mov
jg
or
jno
insb
mov
or
rolb
fildll
mov
ljmp
test
cmp
scas
pop
push
push
testl
mov
bound
cmp
sbb
sub
mov
mov
pop
aaa
enter
or
or
push
repz
mov
aam
push
sbb
jmp
mulb
xor
lods
in
mov
mov
mov
xchg
or
adcb
adc
xchg
lret
lret
mov
inc
lretw
rclb
jle
lock
clc
adc
xchg
add
mov
or
pushf
jle
out
inc
pop
ss
bound
jmp
ja
clc
ja
push
jnp
outsb
sbb
arpl
jae
je
inc
mov
outsb
mov
and
mov
fs
and
jbe
xchg
xor
xchg
je
fsts
pop
adc
nop
sub
add
rorl
pop
scas
out
pop
inc
inc
inc
pop
add
cmp
push
mov
jmp
in
test
pop
jbe
scas
jl
cmp
outsl
lret
mov
dec
dec
sahf
pop
xor
sub
xor
rorb
jecxz
cmpsl
mov
push
addr16
xor
fadd
stc
xorb
xchg
push
adc
gs
add
pop
loop
mov
insb
stc
aas
cwtl
inc
cmpb
ds
and
xchg
mov
imul
ret
mov
fisttpl
push
repnz
push
pusha
add
mov
sbb
scas
pop
and
pop
les
jge
hlt
push
push
xchg
pop
adc
sub
xchg
sub
into
test
inc
in
adc
mov
mov
sbb
lods
add
sbb
jmp
loopne
sar
into
cmp
cld
in
pcmpeqb
testb
xchg
xchg
jnp
jle
aas
or
dec
js
test
mov
lds
inc
mov
push
add
bound
hlt
sub
and
ss
shlb
cltd
adc
and
bound
loope
jle
mov
cmpsl
js
lds
or
cmp
mov
adc
jns
cmp
btc
cs
fwait
cs
jmp
or
sahf
aas
and
in
pop
sbb
cmpsl
pop
jmp
fsubr
add
out
sbb
push
lods
jl
pop
icebp
dec
dec
pushf
testl
push
fwait
call
orl
mov
idivb
pop
loop
dec
sub
jns
fcomi
push
pop
cli
mov
sahf
fs
xor
mov
icebp
cwtl
cs
pop
mov
enter
mov
push
jl
mov
popa
adc
movsb
inc
cmp
shr
jmp
inc
pop
call
test
inc
cmp
arpl
cmp
mov
rol
sbb
jae
pop
jbe
nop
mov
test
leave
mov
rolb
adc
cld
das
xchg
sub
movsl
jno
pusha
or
mov
inc
sbb
fsts
int
stos
xor
and
pop
add
data16
push
lock
inc
out
pop
fsubrs
sbb
stc
int
jge
jne
jmp
inc
xchg
mov
mov
adc
mov
bound
jecxz
inc
pushf
jg
mov
mov
jb
mov
dec
pop
dec
daa
sbb
adc
adc
rol
push
stos
cmp
add
sahf
mov
xor
ds
out
mov
push
lea
into
fwait
pop
pop
test
ljmp
add
pop
inc
inc
sbb
out
andb
xchg
sub
imul
sbbb
push
leave
mov
mov
cmp
nop
cmp
mov
testl
xor
adc
xor
jbe
mov
stos
fstps
cmp
jbe
sti
fisttpl
nop
mov
add
dec
in
roll
mov
jns
pop
sub
cmp
jg
stos
into
in
push
ss
mov
movsb
xchg
and
pop
add
xlat
shlb
mov
incb
and
sub
push
inc
or
xorb
roll
push
xor
inc
loopne
inc
inc
xor
jl
loope
mov
mov
hlt
mov
inc
cmc
mov
gs
pop
mov
mov
adc
jno
pop
out
mov
jnp
pop
sahf
add
sbb
sbb
lock
jge
adcb
pop
mov
mov
repz
out
fmull
fistpl
ss
es
pusha
iret
adc
in
jle
jbe
aam
out
sub
movsb
mov
adc
faddl
fnsave
and
repz
sub
xlat
add
xchg
ret
fsubr
jg
sbb
repnz
push
cmc
mov
leave
jo
cld
push
inc
mov
push
negl
int
push
dec
pop
imul
or
lds
addr16
or
inc
in
test
push
xor
or
fucom
xchg
dec
and
js
sahf
sub
loop
ficoms
lods
rorb
mov
sbb
push
cld
popf
jg
je
jno
loope
add
cmp
popf
dec
sahf
int3
jb
add
and
mov
je
and
adc
xchg
adc
sub
xchg
mov
daa
cmp
push
pop
out
xchg
mov
insb
or
test
and
in
out
push
shrl
mov
mov
pop
arpl
cmp
dec
js
jno
lods
out
mov
xchg
or
xlat
lock
jmp
jg
std
mov
rcl
push
in
pop
fucomp
out
repz
imul
add
popf
nop
cmc
mov
mov
pusha
pop
outsb
out
lcall
imul
adc
xchg
call
mov
shlb
and
out
pop
shll
insb
cmp
gs
pop
inc
push
ds
clc
sbb
stos
ret
pusha
or
jno
test
negb
push
xor
ljmp
push
xchg
mov
pop
roll
aas
pop
mov
fstl
sub
cmp
xor
push
vcvtps2pd
and
jl
mov
pop
adc
adc
ljmp
push
fsubrs
call
push
cmp
daa
jl
fnsave
jnp
mov
stos
js
out
sbb
fs
pusha
mov
xor
xorl
jmp
lea
mov
pop
mov
dec
inc
cmp
rolb
rcrl
mov
cltd
repz
xor
push
loopne
add
loope
push
xchg
iret
inc
xor
cli
jp
or
popa
inc
xlat
fcoms
ljmp
lods
pusha
pop
mov
sub
insl
loopne
xchg
mov
mov
lock
sub
arpl
jb
popa
push
fcmovu
mov
inc
loope
ss
or
sbb
lret
cmp
xlat
mov
ret
sub
and
sub
pop
clc
cmp
sub
lods
sbb
mov
adc
icebp
inc
negb
xor
orl
daa
cmpb
and
sbb
sub
addb
pop
push
out
mov
fisubrs
fmulp
sahf
or
mov
or
and
dec
clc
cli
daa
not
inc
bound
inc
sub
xchg
push
sbb
enter
sbb
clc
je
mov
daa
arpl
mov
bound
jns
movsb
mov
shll
out
add
pop
or
pusha
sbb
test
test
xchg
sub
cmp
push
inc
test
cli
pop
mov
push
icebp
xchg
mov
xor
icebp
cmc
fstps
shl
mov
data16
mov
adc
or
mov
adc
addb
lock
push
dec
push
mov
lock
std
ss
mov
outsl
and
in
jle,pn
lret
and
push
cmpsl
add
int3
movsb
out
xchg
sbb
sahf
jae
popa
ja
imul
cltd
push
mov
xchg
and
dec
sbb
mov
and
jp
sti
mov
imul
mov
fstps
fdivs
mov
addl
and
out
scas
test
inc
xchg
vcvttsd2si
jno
out
loope
stos
pop
int3
js
jnp
pop
xor
stos
mov
push
adc
rclb
inc
add
jo
loop
or
fdivrs
jne
and
push
sbb
fmull
mov
gs
loopne
es
mov
repz
push
push
add
subl
mov
xor
xchg
jne
sbb
cmpsl
cmp
gs
out
ljmp
push
imul
cld
pushf
xchg
mov
mov
sbb
dec
cmc
xor
xlat
and
pusha
pop
add
sbb
in
jns
push
dec
pop
jbe
jmp
or
test
notb
adc
pusha
cmp
adc
rcrb
jg
jmp
out
cmpsl
xchg
push
pushf
fistpll
fstp
nop
mov
add
jnp
mov
and
push
je
rorl
sahf
mov
and
clc
sahf
and
loopne
adc
fcmove
jecxz
mov
pop
lret
push
fldt
hlt
inc
sbb
mov
sbbl
jmp
mov
or
lock
adc
movsl
dec
jle
stos
popf
inc
into
inc
and
int3
dec
pop
mov
push
and
testl
scas
jecxz
push
insl
addr16
cmpsl
std
loope
and
ss
dec
push
stos
xor
mov
cltd
loopne
mov
icebp
cmp
pop
xchg
pushf
bound
loope
imul
stos
push
fidivl
imul
sahf
repz
xchg
insl
mov
gs
int
roll
cmpsl
xchg
fdiv
shll
sbb
jb
nop
fidivs
dec
jmp
cli
mov
jg
shrl
bound
push
jne
movb
mov
mov
frstor
fs
sub
mov
sbb
mov
cmp
adc
sti
cmc
add
loopne
in
test
pop
cmp
cmp
insb
xor
sbb
jns
lds
sub
imul
call
loop
daa
dec
jbe
mov
jle
rolb
test
and
iret
fcomip
pop
mov
popf
loopne
mov
clc
jmp
iret
cmc
movsl
push
fsubp
stos
call
push
adc
cmp
sub
frstor
cmpsl
inc
or
cmp
cs
leave
xchg
dec
jbe
pop
stos
cmp
xchg
mov
out
mov
stos
lcall
xor
dec
cmp
cld
arpl
xor
jg
loopne
mov
movsl
js
mov
in
adc
stos
or
mov
xchg
inc
test
loopne
push
pushf
inc
dec
add
les
sub
out
fldt
aas
es
cmp
daa
notb
mov
dec
add
call
xchg
adc
and
mov
imul
push
jl
out
adc
clc
cmp
cmp
cmp
push
mov
loope
mov
inc
cmp
test
pop
jno
xor
movsb
mov
sar
push
int3
rorb
lahf
xchg
pusha
imul
test
call
sbb
clc
cmp
clc
das
mov
and
cwtl
inc
cld
nop
pop
dec
push
sbb
loope
insl
xchg
or
pop
sarl
and
out
mov
rolb
loope
imul
jge
add
mov
pop
xor
repnz
imulb
xlat
stc
aas
pop
push
scas
insl
jg
mov
inc
pop
std
pop
bound
jmp
out
xor
ja
loop
pop
rcrb
xor
or
inc
out
ja
pop
in
repz
cmp
or
jnp
pop
mov
mov
fdivl
pop
inc
imul
clc
and
cltd
sub
push
dec
aam
pop
imul
push
or
dec
jle
lock
inc
sub
iret
in
and
push
aaa
ljmp
rorl
mov
sub
in
orb
xor
in
fistpl
push
clc
cmp
cltd
dec
inc
cli
js
addr16
jne,pt
pop
sbb
movl
stos
and
hlt
enter
add
shlb
mov
mov
ds
clc
icebp
iret
sbbl
dec
lea
jb
addb
xchg
adc
fcmovnb
dec
mov
sub
inc
push
adc
lea
stos
jno
dec
stos
pop
fcom
push
push
ja
mov
subl
push
popf
mov
mov
dec
fimuls
shl
movsb
push
out
mov
push
cmpsl
ficoml
jp
jo
dec
xor
jg
pop
or
push
outsl
sbb
and
cmc
xchg
mov
and
sbb
xlat
cwtl
stos
sub
out
mov
jae
dec
negl
cmpsl
and
jge
mov
cmp
lds
adc
cmp
mov
shll
push
test
pop
dec
mov
push
push
xor
loope
stc
addr16
mov
repz
push
movaps
mov
mov
lds
xchg
mov
gs
cmp
test
pop
mov
sbb
jae
pushf
xchg
xchg
mov
lret
sahf
pusha
daa
movsl
pop
hlt
jbe
and
push
sub
popf
push
jnp
mov
pop
adc
push
leave
icebp
test
xor
sub
cld
lock
xchg
jl
and
dec
fs
rcrl
fstpt
stos
gs
nop
pop
xchg
aad
sbbl
in
or
push
cli
cmp
push
sub
es
stos
inc
mov
mov
enter
test
cli
pop
dec
sbb
jbe
mov
xor
stos
cli
mov
jns
xor
push
les
je
ffree
scas
inc
mov
push
loopne
mov
mov
dec
insl
jge
ret
repz
pop
mov
jns
and
mov
das
sbb
push
ret
cmc
add
cmp
cmp
xchg
out
aam
jmp
int
cmp
pop
adc
and
ds
stos
jmp
imul
sbb
push
mov
jmp
jae
adc
fldenv
int
and
cmpsl
mov
in
xor
addr16
mov
jle
shll
jmp
sbb
ss
ret
and
dec
sbb
push
ret
cmpsb
into
jnp
shll
cwtl
lret
xchg
mov
lret
push
add
mov
adc
lahf
imul
sub
mov
out
push
aas
push
pop
sub
mov
inc
nop
clc
mov
inc
xor
xor
pop
dec
cmp
fmull
dec
cmp
cld
pop
fimuls
and
bound
pop
sahf
popa
clc
lcall
sbb
or
and
rcl
cwtl
add
orl
pusha
fiaddl
nop
push
scas
mov
pop
sbb
jecxz
dec
aad
int3
push
shlb
insb
mov
push
cmp
iret
adc
sub
dec
mov
dec
aad
ret
sbb
inc
mov
lea
pop
pushf
insl
fstpl
std
mov
outsl
mov
dec
mov
into
fadd
mov
xor
adc
xor
ret
sub
gs
int3
cmp
mov
push
cmc
shlb
flds
mov
cs
cmc
jmp
xor
mov
pop
inc
sbb
pop
dec
push
cmp
jg
cmp
lods
mov
pusha
insl
sbbb
std
shlb
loop
nop
psrlw
push
adc
sbb
lods
push
mov
xchg
xchg
cs
mov
push
mov
stos
xchg
cmp
aam
stos
test
popa
nop
out
sahf
push
dec
mov
pusha
movsb
ljmp
test
sub
stc
mov
int
push
mov
iret
in
inc
push
test
push
mov
shl
jb
inc
dec
int
inc
cmpsl
lcall
xchg
hlt
mov
movsl
adc
scas
mov
jmp
daa
inc
fsts
mov
out
dec
je
frstor
cmp
jbe,pt
into
inc
inc
lea
ljmp
rcl
insl
mov
scas
xchg
stc
sub
xchg
aaa
int3
and
cmc
es
jbe
and
xorb
cmp
movsb
push
aas
sbb
push
rorb
mov
add
test
lcall
adc
sub
ret
and
fdivrs
mov
call
icebp
adc
cltd
jmp
inc
dec
bound
mov
jnp
ret
pushf
or
popa
mov
mov
xorb
mov
lods
cmpsb
pop
es
push
jmp
sbb
mov
sub
stc
repnz
inc
mov
xchg
mov
mov
gs
popf
out
mov
mov
and
jp
xchg
cwtl
add
inc
adc
add
pop
ret
dec
rolb
push
cltd
add
pop
sub
sahf
sbb
rorb
inc
push
xlat
xchg
mov
aaa
orb
add
adc
lds
int3
shll
mov
push
mov
sub
data16
stc
test
popa
push
popf
or
das
sahf
push
lahf
mov
mov
inc
out
dec
lock
cmp
shlb
sbb
stc
in
xchg
mov
lds
jbe
enter
movsl
sahf
adc
sbb
stos
jle
lock
ss
into
ror
mov
jecxz
jns
push
ds
out
fucomip
and
jmp
dec
pop
out
jle
and
fldenv
stos
mov
repz
mov
lcall
adc
addr16
call
mov
push
aas
xchg
ret
ja
into
inc
pop
negl
test
add
lods
outsb
mov
test
lock
fs
inc
hlt
andl
fmuls
mov
fucomip
cwtl
cld
mov
push
push
adc
xchg
adc
adc
mov
addr16
mov
hlt
jg
setbe
insb
ret
sbbb
dec
xor
xchg
jmp
xor
add
jno
les
and
add
cltd
inc
xor
jns
sub
sbb
sub
pop
and
push
mov
pop
pushf
aaa
mov
pop
jbe
lods
or
cli
jne
dec
xor
push
inc
lock
mov
cld
jo
pushf
jbe
stos
jp
daa
and
gs
int
inc
cmp
sub
pop
jp
mov
scas
add
or
iret
loopne
mov
pop
pop
fstpl
arpl
mov
out
cmp
jae
lahf
out
mov
xor
and
inc
jno
xchg
inc
inc
pusha
fwait
sbb
jle
mov
or
cwtl
add
or
push
imul
insb
mov
out
loop
xchg
sti
adc
gs
ret
push
loop
pop
xor
ss
stos
and
or
jae
jmp
sub
cmp
jl
pushf
inc
aam
push
dec
jge
out
cltd
inc
mov
sbbb
out
es
hlt
xchg
rcll
aam
cmpl
lret
push
jbe
xor
inc
cltd
std
xor
xchg
cmc
mov
push
pop
jmp
call
add
adcb
and
push
push
dec
daa
movsb
inc
pusha
popa
sti
out
shll
pop
pop
lods
mov
mov
jecxz
dec
xor
pop
pop
add
arpl
push
xor
jb
xchg
out
loope
mull
dec
pop
in
aad
clc
aad
lahf
mov
aad
fwait
pop
push
adc
in
xor
test
in
ja
pop
iret
jns
aad
or
rcrb
repz
sti
cld
lcall
pusha
stc
stos
hlt
fs
jl
dec
mov
popa
aas
jae
fstl
pop
insl
dec
ja
dec
and
cmp
and
les
shlb
cld
in
int
arpl
jge
testb
rolb
icebp
mov
mov
lods
xor
xchg
jne
and
sbb
out
test
ret
jmp
xchg
mov
sub
jb
mov
sbb
loop
movsb
cmp
sub
sub
push
in
popa
stos
xchg
jp
mov
fdivl
dec
lahf
sbb
or
add
cmp
outsl
lret
ljmp
rcrb
movsl
jmp
cmpsl
jg
mov
adc
or
sbbb
or
lret
xchg
xchg
scas
outsl
dec
cmc
sub
fcomps
sub
mov
dec
ret
lret
lcall
mov
fimull
lock
sub
pushf
add
std
mov
out
mov
cltd
imul
push
or
test
lret
push
pushf
push
js
pop
rorb
jb
and
sub
add
and
pushf
jbe
cltd
fsubr
repnz
in
lods
ds
jns
xor
cmp
lds
cmpsb
popf
mov
inc
fsubrp
jg
pop
fiaddl
aad
sbbb
mov
sbb
rcl
xchg
jbe
jmp
sar
rclb
sbb
and
cmc
notl
xor
cltd
hlt
dec
lods
and
fldl
movsb
sti
mov
jne
fdivp
test
enter
je
jle
add
mov
push
mov
cmp
mov
push
xor
mov
mov
mov
sub
jmp
sub
mov
insl
xor
mov
and
insl
mov
cmp
sub
xlat
outsb
arpl
adc
fsub
sahf
jne
xchg
loop
popa
lret
inc
push
test
sbb
rclb
mov
xor
xor
or
ficomps
repnz
push
pop
pop
fidivs
pop
fstpl
lock
mov
lret
add
push
pop
orb
arpl
lods
test
push
sbb
or
xchg
call
ja
outsl
mov
adc
out
mov
jmp
pop
movsl
mov
divl
mov
xchg
adc
push
cmpsb
das
cmpsl
mov
xor
mov
mov
sahf
push
test
jl
sbb
mov
dec
mov
lahf
mov
and
jbe
lds
or
lods
adc
je
movsl
jecxz
cld
bound
xchg
dec
js
add
inc
jmp
push
xchg
out
in
mov
outsb
pop
stos
gs
dec
rorb
aad
leave
and
outsl
xchg
jne
xchg
iret
xchg
xor
sub
sbb
dec
repz
inc
jae
push
cli
enter
inc
test
dec
mov
fcomip
lock
in
cwtl
inc
mov
inc
pushf
rorb
or
add
adc
shlb
mov
cmpsl
inc
inc
mov
insl
cwtl
movsl
and
loopne
iret
xchg
dec
and
lea
cmp
mov
iret
inc
loop
dec
xchg
rclb
in
pop
push
aas
add
imul
out
mov
ja
inc
mov
icebp
ret
nop
push
jbe
js
pop
sub
mov
adc
jae
aam
sub
dec
mov
sub
setae
add
adc
nop
aaa
ds
xor
xchg
push
aam
in
mov
xchg
idiv
or
mov
fiadds
js
pop
and
or
std
jecxz
imul
cmp
and
jecxz
inc
imul
movsb
and
ja
add
xor
out
xchg
sub
sbb
popl
ret
adc
mov
test
add
pop
sbbb
xor
sahf
jne
lods
push
xchg
pushf
ficomps
int
ret
out
mov
jbe
pop
arpl
lods
test
pop
sbb
and
add
xlat
push
and
pushf
ja
add
das
jg
jle
test
xchg
mov
dec
xor
test
lret
adc
pop
pop
mov
jmp
test
push
imulb
push
xchg
inc
inc
xchg
pop
addb
adc
sbb
xchg
sub
scas
scas
cltd
repnz
cmp
inc
mov
jno
popa
add
mov
lret
xchg
mov
fstpt
fwait
pop
adc
mov
add
clc
xor
lds
jg
dec
cmp
and
mov
or
sub
push
leave
mov
je
dec
add
outsl
mov
xchg
xor
rcl
add
inc
iret
cmp
repz
imul
scas
popa
stc
xchg
sub
ljmp
xchg
xlat
cmp
jmp
repz
or
ret
mov
dec
jecxz
rorb
jp
cmp
xor
int
add
loopne
cmpsl
cmp
jne
dec
sbb
jge
add
cltd
sbb
inc
mov
mov
push
daa
add
push
aaa
push
fs
ret
movsl
lret
pop
fwait
shl
inc
or
jne
or
sbb
arpl
fldcw
cmpsb
insl
push
xlat
and
test
cmpsb
enter
pop
jbe
hlt
icebp
lds
inc
sbb
out
imul
int3
insl
ljmp
push
mov
mov
mov
push
mov
dec
inc
and
push
ljmp
daa
lret
xchg
in
fisttpll
cmpsb
mov
mov
cmp
test
push
jb
push
dec
xchg
bound
ja
daa
inc
loopne
mov
mov
dec
jo
addr16
test
out
sub
sbb
icebp
mov
pop
pop
sub
jns
pop
cmp
sub
jmp
rcrb
mov
mov
xchg
rclb
out
mov
test
movsl
inc
mov
lahf
sbbb
ljmp
jo
fcomps
icebp
pop
inc
mov
sbb
ss
fsubrl
fwait
lea
ja
addr16
dec
inc
out
jne
pushf
mov
jbe
shrb
gs
fisttpll
ja
nop
test
repnz
lahf
loop
xor
mov
in
jbe
fs
popf
and
push
call
adc
outsl
ret
shll
pop
xor
xchg
outsb
add
ja
outsl
jbe
fimuls
dec
pop
dec
sarb
js
int
outsb
pop
imul
xlat
fwait
cltd
lods
rcrb
mov
jbe
inc
outsb
inc
movb
ss
and
sbb
jp
push
dec
stos
pusha
ret
stos
nop
adc
push
mov
nop
adc
adc
insb
cmpsl
dec
jno
adc
movsb
aas
xchg
mov
pop
popa
and
das
aad
sub
in
imul
push
push
in
nop
cwtl
jp
mov
aam
imul
xchg
jnp
in
dec
imul
adcl
orb
call
neg
test
into
fdivr
inc
cli
adc
in
lret
call
daa
shlb
xchg
add
aas
sahf
mov
and
ss
cmp
out
pop
stc
lds
hlt
push
mov
ja
xchg
mov
ljmp
rcrb
fadds
mov
lahf
sbb
and
movsb
psubq
mov
leave
cmp
mov
rclb
xchg
movsb
mov
and
or
cld
in
sub
dec
lret
imul
pop
stos
aaa
into
jg
dec
mov
mov
push
cmp
mov
in
sub
push
int
inc
loop
out
sbb
mov
ret
testl
popf
test
mov
popa
xor
xchg
mov
sub
repnz
xor
rolb
pop
movsb
dec
push
adc
mov
dec
mov
lds
mov
loop
in
lret
push
cltd
sub
leave
jnp
lods
push
sbb
scas
pusha
mov
fs
shlb
mov
movsl
repz
or
ret
out
dec
stos
pop
inc
inc
xchg
xor
cmpsb
les
ds
cmp
dec
adc
loop
fldenv
sub
xchg
push
mov
mov
insl
in
mov
cmp
cmpsb
mov
mov
mov
pop
add
ljmp
je
ljmp
in
lahf
fmuls
out
dec
loope
movsb
inc
push
sub
inc
adcl
lods
cld
into
add
fmuls
mov
mov
lods
cli
sbb
jne
bound
arpl
leave
scas
inc
sar
mov
test
jle
cld
and
rcr
stos
mov
test
test
pop
icebp
dec
push
mov
sbb
aad
lret
add
and
xor
lcall
movsb
adc
mov
mov
hlt
xchg
movsl
push
or
repnz
and
pop
iret
pop
inc
or
push
jge
lods
fdivl
mov
dec
ret
push
daa
into
cltd
repz
lds
lds
and
fmul
push
and
ja
cmc
iret
mov
and
scas
dec
push
daa
inc
pop
dec
imul
inc
test
rcll
sbb
sbb
aas
cmpsl
pop
mov
imul
sarb
cltd
sbb
les
pop
sahf
cmp
mov
popa
cmp
loopne,pt
pop
adcl
push
into
lods
jbe
cwtl
les
fwait
pop
les
aam
pop
aam
pusha
and
inc
insb
pop
daa
xchg
testl
leave
pop
lret
adc
jg
sahf
push
ljmp
int
sub
xchg
adc
std
cmp
and
cmp
cmp
js
loopne
jne
test
jne
call
mov
flds
and
pop
pop
jecxz
pop
inc
xchg
sbb
lcall
outsb
pop
addr16
xchg
lcall
lret
push
adc
sub
adc
gs
shll
dec
lcall
cmpsl
mov
filds
in
adc
adc
out
fistpl
and
cs
mov
shll
rcr
sahf
mov
xchg
fistl
push
add
dec
or
push
dec
clc
mov
lds
or
push
pop
popl
int
popa
movsl
mov
jne
push
inc
movsb
push
pop
jle
adc
ret
outsl
pop
jbe
inc
push
dec
push
pop
xchg
sub
in
pushf
pop
or
pusha
sbb
mov
dec
jle
add
lods
fisttpl
pusha
add
sub
inc
inc
hlt
ret
xor
mov
icebp
or
decb
cmp
jmp
outsl
lds
bound
xlat
xchg
das
out
push
hlt
fdivs
in
sub
hlt
pop
hlt
stc
test
cmp
xorb
aas
pop
idivb
repnz
mov
dec
imul
lea
mov
pop
jle
lock
stos
cld
in
lcall
fwait
ret
roll
and
test
adc
sahf
mov
push
repnz
pop
jge
cmp
cli
jmp
cld
mov
jns
push
mov
mov
inc
lcall
int
sub
pop
dec
fistl
pop
stos
inc
pusha
and
sbb
gs
mov
cs
fdivs
gs
jl
adc
xchg
pop
mov
push
mov
jne
inc
inc
xor
dec
les
pop
testl
sarl
sbb
adc
dec
imul
idivl
jmp
xor
cmp
repz
ljmp
stos
repnz
clc
insb
or
inc
in
aas
adc
test
mov
inc
insl
mov
loopne
jno
in
notb
adc
mov
adc
inc
out
pop
mov
mov
pop
cmp
outsb
loope
in
std
adc
pusha
jmp
rorb
mov
out
insb
add
inc
mov
push
ret
ja
xchg
mov
or
cs
mov
push
es
mov
mov
xor
inc
out
sbb
or
sbb
inc
rcll
psubw
jnp
mov
imul
psllw
enter
aaa
mov
sbb
lock
jl
cmp
clc
pop
push
pop
mov
mov
aad
test
mov
out
jno
xchg
push
add
cmp
lock
cmp
loope
movsl
adc
inc
dec
sbb
cmp
xchg
cli
insl
loop
xchg
push
stos
mov
xchg
jns
mov
push
int
std
adc
aam
repz
mov
outsl
push
pop
or
dec
iret
pop
jecxz
add
jo
shll
call
xchg
mov
mov
jg
mov
aaa
and
xor
fldcw
in
sbb
repz
mov
rcr
push
add
rolb
jb
enter
mov
jno
xor
and
and
jne
mov
mov
jbe
sbb
mull
add
mov
inc
adc
mov
jle
jl
xor
pop
sbb
test
je
pusha
int
sarl
mov
jl
int
loopne
push
dec
jno
mov
rolb
xor
nop
shll
cltd
insb
fdiv
imul
das
imul
std
scas
mov
inc
adc
cmpsb
pop
jnp
ficoml
test
movsl
test
inc
pop
sbb
insb
inc
popf
lahf
test
fcmove
mov
mov
hlt
sbb
in
jmp
mov
xchg
pop
jmp
scas
sbb
cmp
rcr
dec
push
xchg
out
clc
jno
cmp
f2xm1
dec
jecxz
adc
jnp
mov
lret
push
mov
jmp
mov
hlt
outsl
cmc
ds
mov
fdivrl
sbb
stos
jnp
aad
sbb
rorl
xor
in
cmp
ret
push
daa
test
testl
xor
xchg
lods
and
sbb
or
test
inc
mov
push
addr16
decl
push
cmpsl
xchg
es
scas
and
and
loop
push
sbb
cmp
fidivrs
mov
push
stos
lahf
jg
mov
xor
add
in
push
mov
jl
dec
movsb
or
mov
aas
pop
inc
push
test
mov
and
push
push
ljmp
aaa
rolb
fdivl
inc
xchg
xor
dec
cli
pop
xchg
stos
dec
fstps
je
cltd
shll
js
inc
dec
stos
xchg
add
pop
std
push
les
pop
sbb
pop
scas
cmp
repz
xchg
repz
xor
pop
fiadds
mov
dec
clc
xchg
inc
add
inc
scas
je
repz
nop
dec
mov
adc
std
cmpsb
lret
dec
imul
pop
or
mov
inc
imul
xchg
push
cwtl
push
dec
stos
enter
faddl
inc
mov
inc
ficompl
cmp
and
stos
sahf
mov
addr16
dec
or
int
inc
addb
sbb
test
in
pop
movsb
arpl
pop
push
outsb
mov
ss
stc
divl
cmp
jmp
movsl
mov
pop
xchg
or
xor
xchg
add
ds
adc
es
orb
jo
popa
stc
movsb
and
test
scas
insl
sub
ss
shrl
decl
sbb
lcall
xchg
mov
rcll
cltd
jo
aaa
sub
cltd
push
sub
mov
movsl
or
mov
dec
std
jmp
pop
leave
mov
push
xchg
mov
enter
rcrl
pop
xor
mov
jb
pushf
ret
pop
cli
sub
push
rcl
mov
jge
nop
sahf
loope
xor
cmp
fisubrs
xor
sti
push
leave
mov
scas
sbbl
jl
stos
mov
xorb
push
loop
and
repnz
jecxz
inc
or
inc
pop
mov
xchg
cmp
jge
or
xchg
jg
lahf
movsl
xchg
notb
jg
cs
push
es
or
out
std
mov
push
xor
fsubs
mov
scas
pusha
sti
dec
test
push
je
enter
mov
out
out
lret
shrl
adc
pusha
inc
add
aaa
jno
xor
test
adc
mov
sub
inc
js
daa
aas
fcompl
or
fxch
je
fistl
lock
mov
aam
xchg
push
gs
push
insb
test
jle
mov
dec
xchg
and
jp
push
push
xchg
stc
jnp
andb
out
ds
fwait
clc
popa
bound
cmp
int
mov
insb
in
sbb
sub
mov
je
add
jp
ja
mov
push
push
mov
jecxz
jnp
mov
adc
and
and
xchg
inc
loope
adc
dec
dec
cmpsb
insl
xor
xor
addb
mov
popa
inc
push
mov
jo
leave
lahf
push
dec
loop
sbb
ljmp
icebp
decb
mov
stc
bound
jae
mov
mov
sbb
sahf
stos
or
pop
cmp
and
xchg
jl
xchg
push
stos
mov
mov
test
dec
div
xor
push
insb
iret
mov
cmc
push
ja
mov
and
jb
fwait
adc
cltd
jp
pop
in
push
pop
add
push
xchg
icebp
push
clc
inc
and
incl
cmp
ja
int
mov
aad
jnp
add
push
pop
aaa
test
dec
adc
mov
pop
push
out
mov
mov
mov
lds
mov
popa
and
inc
mov
xor
and
in
mov
out
loop
out
cld
pop
mov
lcall
fistl
adc
cmp
jecxz
xchg
fs
dec
lea
mov
sub
lret
jns
fwait
enter
sub
jne
mov
ret
xchg
sbb
jbe
fimuls
ja
pop
sbb
pop
fstpt
lret
mov
adc
inc
roll
lods
pop
add
lock
adc
outsb
int3
xchg
rep
jge
mov
sti
imul
movsb
pop
xchg
inc
stos
popf
cltd
jnp
push
ret
add
sbb
mov
push
ror
jecxz
test
js
test
mov
jmp
jbe
loopne
in
cmc
cmpb
stc
cmp
sti
sbb
data16
cmp
inc
xchg
loop
xor
es
add
mov
in
sbb
loope
mov
jbe
push
loopne
cmc
jmp
push
pop
mov
jne
aad
fisttpll
jno
and
sbb
sub
in
int
pop
testb
cwtl
dec
sub
stos
jmp
lahf
and
dec
adc
fsubr
add
test
pop
mov
lret
test
inc
arpl
dec
mov
jl
mov
or
stos
fdivrp
ljmp
in
pop
stc
cmp
cltd
adc
pop
mov
push
dec
bnd
mov
decb
and
stc
add
and
lds
mov
repz
mov
xchg
arpl
dec
mov
pop
daa
out
xchg
insl
imul
sub
mov
push
orl
add
and
clc
repz
lcall
shl
stos
dec
pop
add
stc
js
cmp
lods
test
cs
lods
iret
scas
xchg
push
nop
xchg
mov
movsb
ja
mov
das
pushf
out
subb
xor
sub
stos
push
mov
mov
scas
pop
icebp
js
jno
jnp
push
test
sub
add
push
pop
xchg
jno
lahf
push
stc
ret
cmp
sahf
xchg
clc
or
push
cmpsl
add
out
in
test
jns
jg
push
jmp
mov
inc
imul
int
cmp
xor
mov
push
dec
add
pop
lcall
sbb
mov
imul
lods
mov
adc
sub
stos
cmc
mov
jae
lret
cmc
addr16
icebp
dec
dec
xor
or
ret
pop
int3
popa
xlat
mov
xor
lcall
cwtl
lahf
push
mov
out
jge
push
cmpsb
push
sbb
cmpsl
push
xor
out
shufps
push
xor
lret
xor
cli
xchg
pop
xor
icebp
fwait
push
fisttpl
adc
jmp
movb
and
push
xlat
jle
push
addr16
mov
mov
andl
xor
sub
lock
inc
adc
jnp
dec
lret
aas
incl
push
sbb
out
int
pop
sub
jmp
mov
mov
lahf
push
daa
adc
sbb
dec
scas
in
mov
arpl
push
mov
jns
in
fldenv
add
ldmxcsr
and
popf
js
jno
and
and
push
add
aad
call
pop
lock
js
dec
ret
sbb
and
cmp
jge
outsb
loope
jae
adc
out
loop
mov
movsb
aas
sbb
dec
or
test
lods
adc
jno
or
mov
mov
inc
iret
pop
inc
cltd
xor
jge
je
and
fisubrl
sbb
pop
fnstcw
inc
insl
push
das
lret
mov
sbb
jnp
cwtl
lahf
cmp
shl
push
pop
mov
jge
or
into
loope
pop
movsl
dec
dec
lods
clc
shlb
movsl
movl
xor
test
notb
cmp
xchg
ret
pop
mov
es
lock
movsb
cpuid
mov
imul
push
loop
aas
mov
out
add
add
xor
xor
cmpl
movsb
adc
lcall
xor
mov
jb
call
out
test
mov
fcmovnb
bnd
in
jp
das
nop
mov
and
scas
inc
xchg
cli
incb
cmc
cli
pusha
jle
or
adc
pop
jecxz
mov
sti
add
cs
inc
sub
xor
out
movsl
sub
stos
pop
xor
addr16
pop
dec
or
mov
or
adc
cmpsl
dec
inc
sbb
daa
inc
andb
daa
and
lea
mov
push
dec
leave
lcall
and
nop
lcall
aam
cltd
imul
je
popl
sbb
out
sub
cmc
std
push
inc
inc
rorb
shrl
pop
pop
scas
mov
push
daa
insb
push
cmp
xchg
xchg
imul
adc
fisubrl
push
jo
add
cmpsl
adc
or
mov
fistl
or
adc
fcmovnb
push
mov
mov
lods
outsb
sbb
inc
outsl
int
mov
adc
adc
pop
pop
ret
adc
pusha
mov
inc
pop
arpl
sbb
push
fs
and
in
aaa
lret
sbb
xor
arpl
inc
and
notb
shl
arpl
insl
call
inc
sub
xor
sbb
or
inc
les
stos
aam
in
xchg
ljmp
std
cli
arpl
inc
pop
cwtl
mov
in
je
pop
hlt
push
mov
cmp
arpl
xor
inc
adc
movsb
fsubl
mov
sub
pushf
clc
xlat
int3
fs
cmpsb
lods
pop
dec
push
pop
mov
test
jp
lcall
pop
add
sbb
std
xchg
xor
or
popf
sbb
ret
jmp
in
imul
test
push
aad
jg
sub
rcrb
adc
jge
adc
push
div
cmp
daa
mov
jb
inc
aas
rcrl
pop
test
arpl
dec
cld
pop
test
xor
insl
hlt
pop
fs
test
adc
or
fnstsw
stos
dec
xor
mov
stos
dec
pop
jl
dec
dec
or
loopne
pop
xchg
aas
popa
ror
pop
jecxz
sbb
mov
xor
inc
pop
hlt
outsl
addr16
arpl
jecxz
fndisi(8087
mov
push
sar
aas
ja
ret
ljmp
mov
cmp
pop
xor
std
pop
int
mov
fisttps
pop
aaa
stos
cmp
lods
subb
xlat
push
das
fcmovb
jb
enter
sub
scas
inc
frstpm(287
ja
dec
sub
mov
mov
pop
pop
call
repz
in
dec
push
mov
orb
xchg
jnp
shrl
xor
xchg
pop
test
mov
xchg
lods
insl
cmpsl
or
xchg
sti
mov
pop
mov
in
mov
repz
push
les
test
mov
inc
fisttpl
test
jle
push
aad
sub
icebp
inc
xchg
out
in
out
stos
mov
iret
mov
pop
cmp
cmp
push
pushf
push
and
and
jo
adc
dec
ss
push
jle
sub
fwait
jge
clc
inc
les
xchg
je
rol
add
jge
push
jbe
inc
test
and
fs
mov
xchg
sahf
ds
out
fstpt
push
icebp
push
push
add
inc
xchg
push
mov
xor
xchg
and
cmp
inc
pusha
add
mov
add
cmp
cmpsl
ds
and
push
and
in
lds
or
popf
js
dec
push
cs
loope
subb
outsl
movsl
mov
in
sbb
je
cltd
xor
nop
ljmp
or
nop
rcl
cltd
cli
std
sub
xchg
inc
add
mov
jae
push
dec
inc
sub
js
cmp
inc
and
scas
sti
mov
or
and
mov
test
and
xchg
cwtl
xrelease
imul
sbb
in
in
pusha
repz
pop
add
hlt
mov
aad
dec
cmpsb
mov
mov
push
into
outsl
aas
mov
lahf
jp
jl
adc
jecxz
xchg
dec
pop
xor
inc
jbe
mov
or
fdiv
mov
mov
lret
jmp
xlat
cwtl
dec
icebp
xor
add
inc
cmp
je
scas
stc
in
xor
sub
jmp
adc
jns
mov
mov
iret
int
incb
int3
int
shrd
fsubrp
out
ljmp
stos
pop
ret
xchg
stc
mov
stos
push
je
lock
fnstenv
jno
nop
mov
pop
mov
add
xchg
pop
sbb
mov
jecxz
loop
or
or
ljmp
loopne
jne
popf
push
ljmp
dec
sti
out
add
cmp
int3
lods
xor
cli
xchg
ficomps
xchg
je
fisubrl
mov
jg
aas
ja
test
pop
or
mov
popa
push
cmc
sbb
and
dec
and
cs
or
imul
inc
test
adcl
jbe
aas
inc
mov
pop
mov
dec
shrl
roll
outsl
pop
ja
jae
pop
or
clc
mov
mov
aas
loope
cmpsl
inc
mov
inc
je
add
pusha
xor
cmp
fmull
call
cld
inc
out
push
jmp
into
and
iret
jle
insl
ret
lods
mov
cmc
mov
ffree
pop
xor
jo
mov
add
gs
sysexit
mov
ret
pop
xlat
call
and
push
xor
sub
bound
int
je
cld
movsl
add
inc
jbe
in
iret
subb
push
mov
xlat
hlt
dec
inc
lea
sbb
adc
mov
sub
insb
jnp
lahf
pop
pop
rol
sahf
dec
fucomip
addr16
lcall
jle
jno
lret
adc
mov
dec
mov
ja
xor
stos
dec
insb
mov
or
popa
ret
subl
int
mov
les
stos
adc
cmp
xchg
mov
movsl
mov
pusha
inc
and
lcall
sbbl
adc
cmp
pop
aaa
test
add
jno
mov
push
in
ret
rol
inc
adc
inc
xchg
mov
push
js
shl
mov
cs
xchg
push
popa
sbb
and
sti
aaa
in
jno
or
inc
push
int3
call
pop
inc
out
sti
xchg
or
in
cwtl
xchg
xchg
push
orb
into
icebp
push
mov
das
cmc
enter
sub
arpl
stos
push
js
lcall
add
mov
cwtl
mov
stos
inc
aad
cmp
push
les
xchg
movsl
jp
adc
ret
lret
pushf
test
push
sti
subl
jge
add
fnstsw
pop
stc
mov
gs
push
lods
outsl
sub
mov
push
dec
fld
lsl
xor
andl
inc
sbb
push
jns
in
and
or
sbb
jno
jge
das
and
ss
stos
adc
xchg
push
and
pop
inc
arpl
sbb
jne
mov
inc
xor
test
popf
add
dec
jge
or
out
scas
pop
push
xchg
dec
jnp
jecxz
xchg
xor
fdivrs
cmp
test
in
pushf
roll
jnp
cmpsl
pushf
xor
in
mov
dec
ja
xor
psubw
sbb
pop
adc
jbe
pop
xor
mov
and
add
fcompl
inc
pop
push
xchg
xchg
adc
pop
decl
adc
pop
rcrl
loopne
gs
insl
test
adc
mov
jns
jg
std
pop
jmp
aam
lea
cmpl
ljmp
pop
pop
subb
pop
popf
xor
push
and
or
mov
test
dec
lahf
loopne
jl
jno
adc
ret
mov
adc
loopne
aas
mov
push
gs
adc
or
push
mov
mov
cwtl
mov
or
aad
in
test
cltd
int3
mov
scas
mov
outsl
aas
rcr
leave
sbb
ljmp
sahf
inc
and
push
fstps
xchg
pop
leave
sub
inc
mov
pop
push
orb
jle
in
jg
clc
xor
inc
sbb
xchg
aam
arpl
icebp
loop
xor
int3
jg
mov
cli
loop
and
or
je
pop
repnz
dec
and
sbb
imul
add
icebp
push
stos
not
daa
jmp
mov
sbb
sbb
outsb
push
cs
push
in
jecxz
popa
sbb
lods
inc
xor
sub
xor
push
idivl
daa
mov
aaa
add
dec
mov
inc
fcmovb
mov
pop
rclb
fiadds
xor
adc
out
cmp
fistpl
repz
xchg
inc
and
jl
inc
addb
movsb
mov
insb
mov
xor
xor
pusha
call
push
pop
in
jmp
cmp
jae
push
mov
daa
lods
mov
repnz
dec
fisubs
xchg
inc
dec
mov
jge
cmc
inc
dec
fs
cmp
xor
call
cmpsl
add
test
adc
jae
cltd
loope
pop
jae
push
xchg
inc
sbb
test
jbe
jle
icebp
test
rolb
mov
dec
lock
xchg
stos
inc
fisttpll
jbe
or
stos
ja
adc
sub
pop
inc
stc
sbb
roll
mov
out
popa
sbbl
out
jl
sbb
call
add
ret
add
cli
cmc
push
sti
mov
mov
lock
cmp
push
mov
xor
push
pop
inc
adc
mov
out
sub
aaa
or
rcrl
mov
add
sbb
jns
iret
and
rcll
jns
arpl
add
pop
orb
mov
sbb
add
push
jp
pop
lds
add
and
or
push
cmp
inc
mov
push
insb
xchg
iret
cltd
out
xchg
push
test
arpl
ja
rcrl
adc
or
jge
push
xorl
outsl
cmp
ffreep
xchg
xor
nop
faddl
stos
push
xorl
scas
in
and
or
loop
js
pop
lret
mov
add
jne
fwait
decb
adc
mov
lds
sbb
sbb
cmp
rorb
sub
movsl
scas
jno
fldenv
out
jp
mov
std
adc
jo
jbe
jmp
and
mov
gs
and
repz
inc
arpl
mov
out
inc
int
out
or
lahf
je
sub
jae
loope
jmp
adc
lret
imul
pop
lcall
rcl
mov
mov
cmp
cmp
scas
rcll
inc
cmp
pop
mov
cltd
popf
stos
scas
pop
aam
xlat
mov
sub
jmp
dec
push
mov
inc
ret
push
mov
add
jp
in
lock
enter
icebp
mov
mov
or
js
int
cmp
stos
fwait
pop
dec
andl
inc
mov
ljmp
movsb
rolb
cmp
rclb
jmp
stc
rcrb
lods
or
mov
pop
xor
xor
int3
addr16
or
jns
xchg
mov
cld
jne
push
add
jecxz
mov
iret
ss
jg
sbb
push
cmp
sahf
mov
aam
les
xchg
sbb
repnz
fisttps
dec
adc
adcl
inc
mov
mov
mov
hlt
or
vcvtsi2ssl
enter
sub
fisttpll
pop
lea
ror
lods
and
mov
jo
or
or
jae
add
outsb
insb
xor
fsts
xorl
iret
mov
jle
xchg
and
test
cmp
pusha
adc
push
rol
cmp
in
sarb
dec
dec
xchg
cmpsl
inc
or
mov
dec
or
push
push
adc
arpl
and
shrl
lcall
jmp
add
add
mov
adc
pop
test
mov
clc
xor
ljmp
mov
sbb
sbb
jl
in
addr16
jg
cmp
jmp
push
nop
mov
sbb
in
movl
test
aas
push
mov
lods
enter
loope
and
mov
ljmp
jns
adc
cltd
lock
in
inc
cwtl
dec
jl
inc
daa
push
sbb
xor
pop
pop
out
movsb
int3
jb
sub
pop
mov
int3
sbb
mov
inc
and
inc
jecxz
push
in
jb
es
xchg
mov
xchg
cmp
mov
sub
test
rcr
and
mov
xchg
pop
aas
mov
mulb
inc
pop
outsl
les
mov
enter
and
andb
stos
jle
and
pusha
rcrb
cwtl
ds
adc
lea
dec
dec
cmp
mov
arpl
lret
sub
cli
or
dec
and
cmc
dec
sbb
bound
mov
mov
test
mov
ss
adc
mov
xchg
jb
decl
jno
andl
mov
cmp
test
xchg
out
out
fcoms
loop
lret
or
jle
fst
pusha
dec
dec
cld
and
in
mov
or
out
and
adc
shlb
js
lret
cmp
jg
outsl
xchg
or
hlt
movsb
add
xchg
xchg
pop
ret
aaa
std
sub
or
outsb
add
or
xor
push
mov
ret
jge
repz
addb
icebp
pop
mov
loope
xchg
lock
xlat
out
and
cmp
loop
mov
mov
mov
xchg
call
inc
aaa
cmp
mov
int3
das
inc
ret
xor
pusha
scas
and
cltd
into
idivb
xchg
lretw
cmpsl
pop
je
pusha
jmp
test
cmp
insl
dec
jns
ja
cmp
test
arpl
sub
or
clc
add
inc
mov
push
sbbb
push
clc
jne
or
jmp
mov
push
clc
and
lods
lock
incb
jp
pushf
xchg
xchg
scas
jmp
les
dec
fs
aas
push
idiv
fisubrs
push
lea
out
jmp
sub
adc
cltd
lds
xchg
add
jmp
into
fs
push
cmp
cmp
pop
or
iret
std
inc
mov
cli
repnz
rolb
cmp
mov
ljmp
call
mov
mov
test
ret
lahf
lcall
jl
jmp
jecxz
inc
dec
xchg
mov
repnz
fists
fisubl
dec
cmp
out
ss
xchg
aam
ja,pn
dec
out
and
xor
pop
adc
imul
js
or
mov
loope
in
sbb
add
dec
mov
pop
int3
dec
icebp
dec
or
xor
fdivrl
fnsave
test
in
or
ds
repz
in
sbb
dec
ret
aam
cmp
les
lcall
in
push
aaa
xchg
nop
sub
pop
xchg
fbstp
insl
mov
sub
and
pop
xchg
mov
mov
sahf
loop
aam
sbb
leave
lahf
push
fwait
xchg
cld
shll
mov
mov
in
mov
xchg
sahf
mov
fstps
in
repnz
mov
cli
jp
or
insl
je
rorl
repnz
mov
std
lds
xor
mov
imul
sub
jns
mov
popa
add
int
or
sti
jo
sub
stc
fs
stos
pop
cmpb
inc
and
xor
mov
test
test
test
out
mov
pusha
scas
je
add
jmp
in
std
leave
ret
test
fistpll
leave
das
ljmp
pop
jle
push
mov
mov
dec
pop
cli
cmp
push
pop
sti
icebp
shrb
pusha
sub
push
movsl
xchg
les
nop
jmp
sub
outsl
push
nop
sub
fcmovbe
in
mov
jge
add
mov
mov
push
lahf
fistps
mov
and
movsl
mov
inc
pop
fsubs
or
adc
pop
xchg
adc
adc
les
push
push
std
pushf
in
sub
xchg
loopne
mov
pop
inc
dec
adc
arpl
test
xor
dec
mov
enter
test
jo
ret
xor
xchg
dec
or
sbb
data16
cli
cmp
fnstcw
xchg
mov
ret
sbb
pop
daa
add
cmp
jp
sbb
dec
dec
stos
push
jne
inc
fcmovne
mov
xchg
pop
iret
adc
add
stos
int
jmp
jp,pt
outsb
outsl
fidivl
hlt
mov
shll
xor
add
sbb
neg
add
inc
out
jno
lahf
aaa
into
test
lahf
sbb
jb
jecxz
ljmp
cmp
pop
mov
cli
int
sbb
hlt
adc
lds
and
add
enter
mov
cltd
out
std
add
sub
popa
xchg
dec
xchg
popf
repz
sahf
push
setno
mov
mov
push
or
fidivl
jb
sbb
fistpll
push
xor
fsts
test
jmp
aaa
lahf
sub
sbb
jmp
dec
or
xor
push
push
clc
mov
cmp
ljmp
xor
bound
mov
fstpl
divb
add
xchg
jmp
sahf
neg
adc
add
push
jno
pop
push
testl
add
jp
jmp
loopne
cmpsl
and
in
pop
xchg
and
lods
inc
out
into
mov
add
ds
inc
mov
inc
xchg
xor
nop
push
ja
mov
das
lds
push
jecxz
pop
fwait
into
inc
jns
add
mov
push
and
mov
aaa
pop
jb
loopne
push
cltd
pop
aam
mov
sub
dec
aaa
int
movsb
jp
icebp
pop
frstor
jp
in
xchg
pop
ds
fistpll
sub
test
adc
cmpsb
mov
ret
mov
call
in
arpl
add
dec
jmp
add
mov
mov
inc
mov
fwait
or
or
mov
xchg
insb
std
add
xchg
lret
nop
cmpsl
sahf
icebp
iret
jno
jg
mull
insb
add
jp
adc
scas
mov
adc
lds
addb
sahf
jns
pop
or
xor
shrl
mov
into
mov
rcll
push
aam
push
lret
pop
js
test
cmpsl
test
add
mov
pop
push
mov
sub
das
add
mov
jmp
out
les
fstps
std
mov
lods
mov
jne
mov
mov
out
rolb
mov
sbb
aad
mov
cmc
fcomps
outsl
ffreep
mov
fimuls
call
pushf
out
push
push
shlb
push
mov
sbb
sbb
test
sbb
jae
sbb
jae
xchg
push
mov
jns
mov
fsubrp
and
nop
jno
jo
fldlg2
or
jle
pop
outsb
pop
sbb
dec
xor
decb
push
cmp
sub
lods
int
pop
movsb
mov
push
or
sub
imul
push
and
rcl
lcall
mov
mov
jl
cmp
fwait
mov
jbe
pop
mov
hlt
add
in
adc
outsb
or
push
and
lods
jmp
sub
outsb
leave
xor
cmp
arpl
cmp
aas
lret
lret
cld
mov
sub
sub
pop
inc
push
imul
xchg
xchg
ljmp
jge
mov
test
cwtl
xor
sahf
inc
mov
jle
cmp
mov
leave
mov
lock
xchg
ss
popf
adc
mov
sub
inc
mov
scas
cmpsl
adcl
xor
and
testb
adc
stc
sti
dec
loop
and
arpl
sbb
add
nop
mov
sti
icebp
imul
ss
aad
xor
sbb
cmc
loop
out
add
lahf
out
mov
lret
enter
adc
les
mov
add
lcall
and
cltd
sub
imulb
mov
xchg
loop
outsb
push
fsubrl
shlb
sahf
pop
daa
int
lret
sbb
mov
rolb
jmp
in
insb
and
in
jne
out
lea
je
jle
push
es
cmp
mov
std
aaa
mov
xor
jmp
pop
sbb
cmp
int
and
jmp
push
js
jae
pop
out
arpl
leave
push
cmp
inc
sahf
mov
dec
push
dec
aad
fstl
push
data16
sub
push
push
cmp
shlb
dec
test
or
mov
add
icebp
xchg
es
xchg
rol
sahf
adcb
inc
cli
ljmp
push
sti
sub
sar
mov
shll
fcomi
push
js
andb
cmp
adc
add
push
lret
dec
jns
lcall
jl
mov
testb
mov
sbb
ljmp
jae
push
scas
ljmp
xchg
push
push
insl
jo
cli
sbb
inc
sbb
popa
push
push
dec
push
test
cli
lret
sub
jns
imull
or
jl
xor
lea
cltd
andb
addl
loopne
cli
ret
xchg
in
fs
sbb
mov
int3
fidivrl
add
dec
test
mov
cmp
ljmp
adc
frndint
pop
rorb
repz
inc
pop
sub
gs
cli
xor
aas
testl
push
add
out
arpl
push
lods
push
sbb
mov
jmp
out
mov
ret
into
or
pop
pop
cltd
sar
inc
scas
imul
test
cmp
sti
cli
es
ss
les
and
mov
xor
decb
sti
rcrl
je
sub
fwait
fwait
in
inc
imul
jge
xchg
jle
pop
test
or
sub
cmpsb
scas
fnstsw
cmpsl
add
filds
xor
push
mov
xchg
sbb
ret
cmp
leave
sub
jle
jecxz
fdivrs
add
cs
dec
aad
movsl
mov
pop
push
insb
jg
rcrb
push
pop
daa
mov
test
scas
clc
fmul
sbb
sbb
cmp
jbe
mov
call
jmp
xchg
cld
lods
jge
jmp
sub
or
js
xor
xor
jmp
outsb
inc
mov
arpl
sbb
out
movsb
lods
insb
mov
fucomip
scas
xchg
mov
out
js
dec
mov
testb
xor
cli
sbbl
inc
imul
or
add
lret
xor
or
repz
and
jge
outsl
ret
jmp
pop
cmpsl
repnz
data16
mov
jl
jnp
insl
add
dec
fistpl
test
mov
cmp
add
sub
push
movsl
xor
fcompl
leave
jb
dec
aaa
push
xor
leave
jne
push
mov
lea
dec
xchg
sbb
cmp
dec
pop
cmp
jle
fs
dec
dec
xorb
jne
inc
jae
jnp
cmp
pop
mov
mov
rcrb
push
pop
dec
and
pop
mov
imul
sub
mov
inc
cmp
loopne
loope
aad
or
sti
sub
cld
push
out
xor
loopne
sbb
pop
jecxz
push
push
mov
ret
jnp
sbb
mov
xchg
and
and
jne
sub
mov
jle
mov
push
jb
sbb
pop
dec
in
inc
xchg
mov
mov
nop
pop
imul
ja
sbb
mov
push
js
insl
sub
cmp
sahf
out
cld
push
stos
rcrb
pop
cmpsb
lods
mov
jno
dec
cmp
jp
mov
out
jbe
lds
dec
ljmp
sbb
push
mov
push
outsb
aam
ljmp
cmp
pushf
mov
loopne
test
inc
lock
cmp
dec
jle
scas
bound
pop
rclb
xor
push
daa
ret
xchg
push
ret
push
ljmp
movsl
aaa
int
rol
mov
scas
push
mov
out
xchg
push
mov
push
das
rorl
out
dec
dec
lahf
adc
leave
xor
cmpsb
sti
lret
aad
pop
add
mov
jbe
cmp
lret
insl
stos
popf
test
int3
fadd
test
movsb
lret
in
out
mov
push
sbb
mov
std
in
movsb
lock
pop
mov
lods
orb
mov
out
dec
test
ret
xor
jecxz
sub
inc
hlt
push
adc
mov
call
dec
push
orl
and
lock
sub
out
jg
cmp
mov
fstpt
and
pushf
shlb
xor
inc
xor
cmp
mov
decb
dec
mov
push
jl
xchg
or
stos
mov
pop
jae
lret
loopne
leave
adcl
js
xchg
xchg
push
fs
scas
and
cli
mov
fstpt
fldl
push
xchg
dec
mov
and
jo
xchg
mull
mov
stc
sub
leave
shlb
iret
test
clc
cmpsb
push
adc
mov
add
test
jne
xor
adc
sbb
flds
or
inc
out
hlt
cli
mov
jl
pop
in
xchg
enter
jmp
adc
add
icebp
and
fnsave
ss
in
and
push
rorb
add
push
cmp
push
sahf
cwtl
out
fstl
mov
inc
movq
jecxz
imul
pushf
out
add
dec
mov
or
sbb
push
je
je
xchg
or
in
subb
jno
out
cmpsb
push
or
and
arpl
adc
xor
xor
in
mov
sbb
push
dec
test
jae
dec
stos
out
and
cmp
sbb
cmpb
xchg
test
cli
ret
dec
add
xor
je
stc
je
mov
and
in
push
loopne
mov
inc
jb
ret
add
add
xor
add
mov
int3
mov
adc
adc
adc
jo
lret
dec
sahf
imul
fs
push
or
push
xchg
mov
std
outsb
sbb
mov
imul
into
ret
outsb
insl
xchg
insl
cmpsl
add
push
jo
push
into
in
mov
data16
add
pop
mov
outsl
mov
mov
rol
xchg
mov
gs
or
mov
cmp
inc
addr16
mov
mov
sbb
mov
cwtl
int3
mul
jnp
inc
cwtl
push
in
mov
mov
gs
andb
push
das
inc
pop
add
or
cltd
stc
mov
xor
outsl
stos
inc
out
int
rcll
stc
xchg
ljmp
pop
jno
loope
xchg
sbb
dec
dec
or
xchg
addl
sbb
cmpb
ret
fsubp
xchg
es
mov
imul
jg
and
inc
or
xor
sbb
inc
rcr
cmp
dec
arpl
bound
cmp
stos
cmp
push
mov
cli
jmp
in
pop
add
je
pop
push
push
pop
mov
hlt
pop
jne
pop
add
and
nop
mov
insl
lds
mov
jl
lock
icebp
smsw
jae
pop
out
mov
cld
mov
mov
cmp
test
movsb
sbb
adc
sub
push
pop
rol
cld
push
ljmp
cli
sti
push
je
mov
fists
iret
cmp
lock
out
or
push
xchg
xchg
ds
push
jns
adc
or
jns
mov
imul
popa
cwtl
pop
xor
adc
popa
stc
mov
subl
jns
pop
jns
sbb
lret
mov
sbb
jmp
call
andb
cmp
cmc
cmpsl
fwait
cltd
pslld
inc
nop
mov
shr
jle
mov
lcall
sub
jmp
pusha
arpl
mov
notl
lahf
in
adc
adc
dec
add
or
mov
frstor
add
cltd
mov
mov
jp
dec
cwtl
jecxz
xlat
add
popf
icebp
xor
call
test
ljmp
shlb
mov
push
fdivrl
cwtl
imul
repz
pop
repz
call
test
fs
xchg
popf
shlb
lahf
out
pop
xchg
stc
push
imul
movsl
cmpsb
mov
dec
mov
xchg
push
test
stos
mov
ss
push
outsl
jle
mov
imul
mov
pop
repz
in
mov
xor
push
dec
push
adc
clc
push
paddsb
mov
add
jno
in
insb
push
aas
fwait
cmpsb
adc
add
jae
imul
idivl
inc
icebp
xchg
xor
and
sti
inc
cs
cmp
dec
roll
or
addr16
rcr
nop
jb
cltd
mov
pop
mov
sub
roll
daa
aad
divl
dec
push
dec
xchg
aam
inc
mov
adc
add
sbb
sbb
pushf
jg
mov
bnd
mov
and
sbb
and
jmp
xchg
stos
int3
ret
pop
sub
orl
enter
push
dec
jns
xor
xor
adc
dec
idiv
jecxz
shrl
push
ja
dec
fdivrs
inc
leave
pop
popa
push
adc
ret
sub
fadd
jp
shlb
scas
lods
and
mov
push
jmp
sub
xchg
fstps
jo
jbe
adc
hlt
and
adc
js
jb
mov
fs
fimuls
mov
test
xor
xor
mov
sbbb
xchg
mov
icebp
or
xor
cmc
dec
push
sbb
es
jle
push
je
dec
ljmp
dec
jb
loope
and
les
mov
ret
in
push
int3
out
sbb
mov
imul
sub
xchg
cmp
ss
scas
out
test
and
in
add
leave
fnstcw
cwtl
dec
icebp
sbb
out
setno
xorb
xor
icebp
das
call
das
push
cmp
push
sbb
ret
fldpi
loop
pop
lds
inc
iret
movntq
adc
cmp
je
adc
mov
dec
or
sbb
adc
xorl
xlat
lods
lret
push
out
negb
icebp
dec
push
popf
jb
cmpsb
sbb
mov
lcall
add
lea
xor
push
in
sbb
movsl
enter
cmpl
test
or
jbe
sahf
mov
push
add
pop
shll
pop
fistl
pop
adc
jmp
loope
push
add
cmpsl
add
fistpl
mov
pop
fisubl
mov
movl
mov
push
sti
aad
mov
xor
fidivrl
jns
lret
div
push
pop
push
pusha
jg
inc
pop
bndstx
inc
imul
icebp
and
outsb
scas
xchg
pop
test
lock
hlt
and
stc
mov
add
dec
movsb
and
inc
push
scas
fbld
or
neg
jne
jns
int
sub
lods
xor
imulb
adc
add
xlat
aas
cs
push
outsl
mov
sar
imul
add
dec
or
push
dec
xchg
mov
movd
daa
pop
ret
call
mov
push
out
sub
pop
xchg
cmp
sbbl
nop
scas
dec
outsb
aad
jae
jae
and
mov
pop
xorl
popf
cmpsb
pop
js
fidivl
inc
dec
sub
test
mov
loopne
cmpl
dec
push
je
fstpl
mov
mul
cmpsl
add
or
fstl
pop
movsl
sbb
push
pop
pop
loopne
ss
dec
les
outsl
sahf
mov
push
jns
popa
lret
jmp
adc
shlb
insl
es
xor
imul
adcb
mov
mov
xchg
loopne
jbe
and
in
shlb
ds
mov
and
pop
cmp
mov
jns
outsb
sbb
test
in
rorl
mov
rol
fwait
cltd
imul
in
push
push
jle
fnstcw
push
jmp
fwait
jno
mov
pop
js
cltd
fldcw
xor
cmp
adc
outsb
add
push
mov
and
adc
ljmp
jns
iret
sbb
cmp
cmp
jge
or
jge
add
lds
pcmpgtw
mov
pop
test
jp
xchg
ret
mov
leave
or
js
mov
xchg
insl
lods
mov
dec
fs
add
add
insb
xchg
cmp
jp
cltd
cli
les
pop
mov
test
repnz
dec
addb
subb
jne
sub
or
and
mov
roll
add
jns
shlb
or
mov
rcll
ficoml
lret
cld
and
stc
inc
dec
out
jne
xchg
jl
mov
mov
push
enter
pop
pop
xchg
mov
push
sub
ss
cmpsb
scas
popf
or
in
xor
rcl
sbb
xchg
xchg
inc
testl
orb
insb
mov
jne
sbb
cmpsl
xor
xchg
das
fildl
movsl
fsubrs
lret
jne,pn
jle
daa
jbe
cmpsl
sub
add
aaa
and
add
jns
mov
divl
movsl
fsubrl
nop
movl
pop
repz
into
dec
jg
mov
cli
nop
sub
pop
push
xchg
mov
test
repz
aaa
or
push
in
sub
icebp
mov
int3
mov
ja
enter
add
out
data16
dec
repnz
ds
add
popa
push
roll
pop
cmpsl
adc
jae
iret
mull
pushl
mov
pushf
repnz
add
mov
push
jae
pop
jecxz
outsb
gs
js
nop
and
adc
and
popa
mov
rcrl
jge
test
icebp
shr
divl
repnz
test
sbb
mov
fldl
clc
movsb
mov
adc
popa
mov
leave
in
sub
pop
sub
insl
sbbl
push
push
xchg
loop
aad
cmp
jae
xchg
fwait
sti
ret
cmp
dec
mov
push
lret
push
or
pop
in
or
push
stc
imul
in
xor
pop
cmp
fildl
loop
inc
inc
out
addb
xchg
in
and
adc
mov
or
xorb
rorl
jmp
sbb
cld
insb
orb
adc
jle
cli
add
lea
mov
cmp
rcll
repz
aad
cmp
leave
mov
sbb
cmp
and
mov
jns
jnp
sub
add
rcl
adc
jb
lret
out
mov
adcb
sub
int
mov
cmpsl
inc
outsl
das
bound
jbe
cmpsl
or
adc
adc
icebp
ljmp
jnp
push
test
jmp
hlt
mov
mov
mov
adc
jbe
movsl
fbstp
push
and
scas
les
icebp
dec
ret
sahf
outsl
and
cmp
lahf
sub
mov
daa
mov
outsb
dec
clc
push
out
out
mov
adc
xchg
sbb
sub
loope
fsubl
jnp
fwait
mov
out
or
pop
pop
loop
sbb
push
pop
inc
adc
and
sub
xchg
stc
adc
fwait
test
lds
out
hlt
pop
jns
popf
icebp
dec
push
sub
cld
sahf
xchg
data16
pop
imul
jp
ret
lds
popf
lret
xchg
lock
mov
ret
xlat
daa
xor
scas
fiaddl
sbb
fldl
jg
jg
lds
mov
push
sti
mov
dec
hlt
stos
call
iret
into
add
or
int3
push
fwait
icebp
mov
mov
push
xchg
pop
adc
bound
mov
arpl
in
dec
loope
jge
sti
jnp
dec
loop
inc
in
fistl
xor
push
insb
jge
xor
test
cmpsb
out
in
xchg
xchg
ss
jmp
fimull
aad
ja
dec
jns
mov
xor
daa
pop
jns
xchg
xchg
out
fisubrs
add
push
je
push
dec
clc
int
lea
jne
adc
add
jg
pcmpgtw
leave
mov
or
shll
pop
jno
or
inc
inc
or
dec
push
adc
inc
icebp
cmp
fwait
stos
aas
dec
fdiv
sub
stos
or
jmp
outsl
sti
sbb
pop
push
mov
lods
decb
or
iret
push
dec
mov
inc
jnp
cmp
sarl
adc
rorb
ret
jl
inc
imul
out
ljmp
stos
xor
xchg
stc
pop
sahf
cmp
mov
insl
pop
add
xchg
icebp
cmp
push
lahf
ret
mov
ljmp
addb
pop
mov
aaa
sahf
xor
mov
push
fldenv
jecxz
bound
pusha
jge
push
sbb
arpl
cmpsl
push
daa
cmpsl
sbb
repz
mov
mov
call
cmc
push
mov
stos
push
sub
fsubrs
cmpsl
sub
dec
lcall
call
insb
mov
out
not
ret
xchg
cmp
or
pushf
mov
outsb
push
push
je
out
xor
ficoml
and
mov
repz
inc
loopne
mov
mov
add
das
inc
loopne
ljmp
sbb
ljmp
aad
sbb
icebp
adc
xchg
je
mov
sbb
xor
push
adc
mov
jnp
xchg
sbb
gs
xorb
sub
add
rcrb
jbe
mov
bound
cmp
pusha
dec
xchg
in
movsb
push
in
in
inc
jo
loopne
dec
pop
add
push
out
fs
testb
xchg
enterw
add
or
mov
sbb
jb
sub
cmp
inc
test
outsl
dec
lods
cmp
sub
jns
sti
sahf
and
imul
mov
mov
in
test
sbb
test
fsubrs
pop
ja
add
fwait
dec
out
mov
cmp
dec
push
stc
popf
inc
or
xlat
mov
aam
leave
in
scas
ret
xchg
pop
sub
push
ja
sbb
lods
pop
in
scas
loope
dec
sbb
sub
mov
jne
push
jmp
push
jg
jnp
push
or
cmp
xor
inc
jmp
popa
lods
and
rcll
mov
pop
in
cmc
cltd
xlat
mov
mov
and
pop
jg
sarl
mov
cmp
push
cmp
xchg
pop
adc
mov
pop
sub
cltd
jl
mov
mov
xor
push
sbb
cli
inc
mov
out
cs
rclb
sbb
aam
das
fnstsw
mov
hlt
test
jle
daa
std
stos
xchg
sbb
or
stos
mov
lret
or
les
pusha
xor
mov
cmc
into
cmc
es
xor
xor
leave
je
je
mov
or
les
inc
insb
push
mov
imul
xchg
lods
jo
jg
ret
xor
out
push
jno
sahf
sbb
cmp
dec
inc
ljmp
inc
mov
cmc
ljmp
jle
cmpl
in
push
pop
dec
icebp
push
xchg
inc
in
xor
movsb
cmp
xchg
lods
mov
dec
or
lds
xchg
add
loope
dec
mov
data16
stc
shll
push
repz
add
fs
push
fsubrs
adcl
mov
mov
stos
add
aad
jo
pop
adc
roll
outsb
mov
mov
inc
dec
shll
icebp
xchg
jmp
or
rcll
xchg
cli
aas
sub
xorl
pop
out
mov
adcb
lret
in
fstpt
pop
and
shll
mov
jmp
pop
lcall
push
xchg
inc
push
bound
int3
sub
addr16
ret
mov
pop
pop
sbbb
pop
lret
data16
sbb
shl
add
mull
cwtl
aad
lret
setl
loope
xchg
pop
addr16
xor
mov
mov
sbb
repz
stc
pop
cmp
data16
inc
add
pop
xchg
mov
test
push
mov
into
repz
push
mov
cmp
ss
pusha
fldl
sti
leave
inc
lret
and
sbb
add
cmpsl
lods
out
cli
push
xchg
ss
je
mov
hlt
adc
xchg
mov
das
mov
and
adc
adc
mov
dec
sub
sbb
lahf
es
adc
scas
or
aaa
bound
lock
push
mov
ficoml
scas
jne
add
push
and
xchg
xchg
jle
scas
iret
popf
add
or
lret
mov
dec
mov
cmp
or
mov
divb
dec
jmp
sub
jle
add
sub
xchg
cmpb
xor
mov
mov
icebp
arpl
cmp
call
mul
ds
sbb
push
fnstsw
inc
repz
es
inc
dec
scas
mov
jo
int3
push
scas
jmp
sub
pop
adc
sub
mov
pop
cs
cmpsl
push
adc
push
rcrb
cmp
adc
xchg
subb
xchg
popa
scas
es
pushf
xchg
loop
adc
cmp
xchg
sub
jl
sbb
cwtl
sti
fnsave
jo
jno
dec
or
pop
mov
loope
lret
or
mov
ss
bound
mov
and
jae
sbb
and
sbb
mov
and
or
sub
lds
movsl
sarb
sbb
daa
iret
ret
cmp
inc
and
es
push
mov
adc
push
jbe
xor
popf
into
mov
cwtl
push
push
frstor
fcoms
xchg
xor
push
cmpsb
fldl
mov
aaa
aaa
out
rcl
push
hlt
mov
cmpsb
negb
mov
rcll
hlt
cmpsb
in
in
or
int3
mov
pop
mov
mov
jb
or
es
mov
jp
mov
imul
sti
pop
lods
jae
lock
cmp
imulb
inc
ret
movsl
das
add
sbb
adc
out
pop
cmp
mov
push
test
dec
mov
ljmp
rep
sahf
call
js
jecxz
mov
cmp
in
dec
roll
inc
add
loop
inc
mov
adc
adcb
std
jmp
bound
push
lds
ljmp
jo
insl
mov
and
int
add
test
add
mov
outsb
adc
sub
loop
pop
lock
pop
cmp
mov
cmp
mov
mov
fs
imul
mov
out
ljmp
test
inc
sub
mov
jmp
divb
jl
sub
fistl
rcrb
bound
or
je
push
dec
inc
xchg
ret
or
fldt
sbb
out
loopne
add
xor
push
and
lret
mov
mov
mov
cmp
test
gs
mov
pop
dec
jns
xchg
js
movsb
fmull
fcomip
pop
mov
xchg
sbb
mov
sbb
mov
and
stos
push
lock
jmp
adc
lds
add
adc
int3
in
pop
in
dec
add
jg
push
popf
in
adc
mov
imul
in
dec
jno
inc
loope
stos
push
pop
xchg
pop
sbb
pop
sar
push
and
push
sbb
dec
and
add
out
mov
lds
jo
mov
sub
inc
test
mov
jecxz
pop
push
daa
sar
or
xchg
outsl
lods
and
in
into
notl
mov
clc
lods
int
sbb
xchg
dec
cmp
adc
mov
sub
dec
fidivrs
cmp
jns
ss
shrb
xlat
sbb
sbb
lahf
cmpsb
and
data16
and
push
inc
lods
dec
add
sbb
dec
in
jmp
sbb
fwait
mov
into
lahf
sbbl
dec
jle
pop
dec
xchg
mov
rorb
jle
imul
shll
test
dec
pop
lea
mov
out
lea
dec
cmpsb
cmp
inc
pop
repnz
push
push
dec
lock
fisubs
dec
mov
cli
test
fs
sbb
add
or
aad
dec
cli
jl
mov
stos
pushf
jg
sub
add
pop
cs
and
sub
dec
dec
sahf
inc
stos
lds
iret
rolb
mov
push
mov
imul
fcoml
roll
ret
data16
inc
stc
inc
jge
fidivs
or
lcall
stos
ret
push
shrb
mov
es
sarl
cltd
add
sbb
js
out
mov
pop
loop
insb
push
int3
and
into
icebp
and
lahf
push
push
not
insb
cmpsb
ret
dec
lock
add
aad
cmp
adc
pop
push
sub
int
mov
jnp
arpl
xor
xchg
and
xlat
inc
cmp
outsb
fidivrs
ja
jnp
mov
mov
xor
lret
sbb
aam
jg
enter
push
add
add
sub
test
mov
sti
divl
jns
test
sbb
aas
add
int3
sbb
dec
mov
inc
lcall
in
lret
je
fiaddl
jge
pop
push
and
mov
aas
loope
xchg
jge
cmc
enter
or
fcmovnu
add
call
andl
scas
and
mov
js
cmp
out
inc
loopne
iret
jbe
repnz
mov
push
int
rcll
adc
test
xor
xchg
or
xchg
jp
and
pusha
pusha
inc
repnz
das
mov
dec
movntq
jp
iret
sub
movsb
xchg
push
pop
outsl
out
dec
pop
adcl
cmpsb
mov
stos
cld
jl
arpl
inc
push
mov
or
add
sbb
jl
roll
pop
test
adc
xchg
sub
fstpl
jle
xor
ja
fistpl
mov
dec
pop
fcoms
mov
adc
inc
push
outsl
inc
cltd
lock
push
sbb
xchg
mov
aaa
lcall
in
mov
ljmp
jmp
mov
mul
loop
cmp
shlb
mov
sub
notl
stos
or
mov
sub
mov
lret
sti
clc
cmp
lret
sbb
sbb
std
xor
inc
mov
mov
aad
call
clc
mov
push
mov
mov
call
popf
fneni(8087
add
mov
fcoml
jmpw
jae
sbb
popf
test
pop
cmp
pop
push
fldenv
add
xlat
push
outsb
scas
lds
cmp
add
jl
lcall
test
xchg
jmp
stc
mov
mov
out
add
xor
hlt
ja
loopne
pop
loope
pushf
jmp
adc
movsb
jecxz
xor
jg
fadd
push
repnz
mov
and
test
test
xor
push
cmpsb
sti
mov
or
mov
movsl
mov
rcll
hlt
push
adc
icebp
mov
loope
lods
hlt
fisubrs
cmp
js
xchg
ljmp
dec
sub
shll
repz
cmp
inc
rclb
stos
jae
data16
cmp
sbb
cmc
pop
adc
into
jbe
fisttpl
push
jb
js
icebp
mov
pop
shll
xor
mov
test
push
test
repnz
xchg
lahf
mov
in
icebp
es
idivb
add
sub
push
or
mov
stos
ds
xchg
and
divl
push
cmp
jle
jg
enter
add
pop
push
mov
push
mov
inc
enter
push
push
mov
cmp
add
out
mov
cmpsl
xchg
xor
sub
int
mov
mov
inc
push
pop
xchg
in
jo
cmp
push
rcrb
push
loope
jbe
lock
aam
add
sbb
outsl
das
push
xchg
out
int3
mul
sub
in
xor
es
mov
insl
mov
sub
icebp
pop
xchg
dec
pop
push
pusha
and
push
call
jnp
mov
movsb
int
notb
and
mov
and
in
pusha
sub
sarl
mov
insl
push
aas
loopne
incb
dec
int
loop
jae
cli
mov
jns
dec
sub
fidivl
lock
rorl
pop
xor
cmpsb
cmp
sbb
or
xchg
jmp
sub
mov
xor
jne
dec
lods
jno
sub
dec
xor
adc
adc
sarl
pushl
repz
mov
into
mov
das
in
cmpsb
jmp
es
xor
and
jne
call
out
shlb
and
in
stos
mull
pop
nop
jl
jbe
cwtl
push
leave
mov
sub
out
sub
out
scas
or
jg
pop
sbb
stos
out
jecxz
cmp
pop
jnp
mov
xor
outsl
fwait
sub
imul
and
pop
jo
cmp
xchg
nop
roll
and
in
in
clc
pop
push
or
pop
jnp
arpl
pushf
adc
xchg
and
xor
or
mov
notl
push
push
adc
sub
idivb
push
xchg
pop
sbb
mov
jg
icebp
repnz
aas
addr16
jae
adc
push
std
mov
xchg
lcall
cmp
test
scas
or
test
push
push
imul
ss
icebp
out
fscale
pushf
pop
xchg
hlt
fcmovbe
in
add
cmpl
mov
inc
push
jb
jl
adc
cwtl
mov
mov
cs
popa
inc
outsb
cmpsb
cmp
push
inc
jae
call
pop
xchg
cmc
notl
imull
inc
pop
mov
in
pop
aad
xor
aaa
jmp
addb
mov
jge
jne
pop
or
push
push
xor
fldt
scas
sti
leave
fst
and
mov
test
xchg
ror
ret
push
pop
adc
pop
stos
fistl
dec
das
ss
jb
scas
mov
inc
and
ss
inc
cmp
std
in
subb
leave
outsl
xchg
jbe
pop
imul
test
js
jp
and
addl
xchg
test
test
rcl
sub
cli
sub
mov
fwait
js
pop
mov
into
mov
adc
out
or
dec
fs
sub
xor
arpl
jp
xor
xor
mov
and
sub
xcrypt-cbc
cmpsl
push
and
mov
mov
inc
jecxz
mov
nop
out
sbb
adc
adc
pusha
mov
cwtl
ja
fstp
sbb
sbb
pop
sub
js
pop
scas
and
jecxz
fldenv
dec
mov
clc
push
dec
adc
pop
cltd
xlat
pop
pushl
xlat
adc
orb
pop
leave
push
es
cmp
add
and
fistpl
push
mov
mov
mov
in
insl
inc
inc
cmp
mov
cli
or
gs
test
xchg
jne,pt
mov
lcall
cmc
lock
or
jp
ja
jno
or
cltd
js
sbb
addb
lock
mov
sbb
pop
pop
fwait
scas
push
xor
imul
rol
inc
lea
mov
or
pushf
mov
add
mov
add
pop
popa
xor
pop
push
lcall
pop
xlat
cld
push
ror
test
mov
sub
mov
int
jecxz
enter
scas
xchg
mov
sbb
pushf
jo
jmp
loopne
xor
and
in
pop
aam
aas
out
jo
out
sub
or
lahf
jmp
adc
int
in
hlt
mov
sbb
push
and
nop
inc
dec
roll
xor
push
daa
dec
fwait
ja
ret
lods
push
fsts
dec
or
sbb
sbb
jno
shll
int3
mov
mov
shrb
xor
push
in
adc
push
jno
mov
mov
mov
fimuls
xchg
jg
out
sbb
sub
out
mov
enter
and
add
insb
std
les
sti
fildl
test
test
movntq
out
aad
push
popa
xor
sarl
loop
mov
xchg
or
in
out
lret
js
sbb
sbb
jnp
dec
add
mov
mov
sbb
push
push
mov
sbbb
cmpsb
mov
cld
ret
jge
test
cld
sbb
push
les
repz
dec
hlt
popa
sbb
aaa
sbbb
fstpt
sti
popl
sbb
mov
rcrb
and
movsb
pop
add
cltd
cli
pop
xchg
mov
loopne
cmc
icebp
push
ljmp
lds
pop
sbb
rclb
dec
inc
dec
mov
add
mov
sub
mov
insb
push
mov
pop
in
pop
sahf
cmpsl
push
das
mov
jno
adc
inc
into
cmc
adc
cld
pusha
dec
xchg
lock
mov
dec
loope
out
jns
lods
aas
xor
cmp
jnp
sbb
shll
push
cmp
movsl
movsb
in
test
mov
dec
repnz
or
xchg
sbbb
testl
mov
testb
andl
stc
pop
xor
mov
cmpsl
iret
les
and
xor
clc
pop
cmpl
mov
cmp
adc
roll
shrb
out
mov
rcll
mov
pop
dec
fidivrl
inc
daa
and
in
ja
pop
adc
sbb
xor
add
mov
and
pop
cmp
push
es
adc
das
push
inc
cmp
and
lods
jnp
jb
scas
pop
or
test
out
das
push
scas
stos
mov
cmp
xchg
and
test
and
inc
out
pop
scas
fsub
lock
mov
dec
stos
cmpsl
movlps
pop
mov
inc
pop
pop
arpl
xor
test
inc
mov
es
lret
jne
mov
push
xchg
xchg
fs
sub
stos
mov
adc
cmp
add
dec
sub
icebp
and
add
lds
xchg
mov
lea
mov
mov
rclb
jbe
outsl
jmp
xor
das
scas
jne
lods
or
ds
movsb
dec
cmpb
js
stc
les
and
mov
adc
adc
fidivrs
mov
add
dec
dec
push
lds
stos
sbb
adc
fildl
nop
mov
cmp
xchg
sbb
cmp
mov
xor
pop
mov
shlb
mov
dec
jno
inc
push
sti
les
lock
lods
xor
addr16
or
lret
bound
pop
clc
sarl
ret
arpl
pop
fs
inc
sbb
mov
pop
orl
lds
push
mov
je
sub
daa
std
daa
mov
mov
pop
adc
cmp
cli
dec
or
loopne
gs
in
fwait
shr
lret
xor
inc
pop
xchg
cmpsb
in
push
bound
pop
cmpsb
add
adc
aaa
mov
popa
push
mov
xor
cmp
testb
sbb
insb
sbb
test
jle
xor
hlt
add
add
dec
mov
loope
or
inc
test
insb
xchg
mov
xor
cmpl
leave
add
adc
or
loopne
mov
test
push
mov
pushf
mov
js
push
divb
addr16
aaa
or
or
jle
inc
mov
lock
adc
cmp
stos
sub
imul
mov
pop
adc
mov
inc
mov
into
mov
mov
adc
jo
mov
das
and
or
subb
xor
dec
std
mov
out
or
push
sbb
adc
cmp
mov
mov
inc
movsl
sub
xor
sub
in
or
and
or
push
xor
pop
sub
lret
adc
outsb
jmp
insb
xor
and
out
or
xor
call
nop
add
pop
repnz
movsb
inc
fbld
nop
pop
les
arpl
xor
or
sub
dec
inc
push
fdivr
mov
or
lcall
movsb
mov
cld
gs
enter
sti
and
mov
out
fisubl
scas
xor
mov
sahf
add
sti
xchg
cmp
push
ret
pop
not
cmp
fbld
andb
dec
inc
nop
aas
push
fidivrl
int3
sbb
xchg
pusha
data16
out
rolb
add
test
pop
in
cs
adc
inc
adc
xor
int3
bound
xchg
es
add
rorb
sahf
push
outsl
ds
test
ss
test
jmp
add
ljmp
mulb
repnz
lcall
inc
leave
dec
fnstsw
or
mov
cmp
or
aaa
daa
pop
filds
sbb
lret
lea
push
pop
mov
xchg
xchg
xchg
mov
stc
pop
outsl
or
fwait
adc
sbbb
cmp
popl
int
lock
jno
push
clc
mov
push
sub
and
mov
pop
outsl
stc
bound
popw
subb
subl
cmp
mov
outsl
sub
adc
sub
sub
lds
in
dec
arpl
xchg
dec
jmp
cmp
into
cmp
sbb
imul
mov
inc
lahf
ljmp
xor
pop
repnz
jno
imulb
pop
std
inc
push
dec
aas
cmc
and
ret
stc
fdivrs
call
sbb
mov
mov
push
repz
inc
jne
add
pop
repnz
pop
rcll
mov
cmpb
xchg
mov
mov
mov
lea
pop
rorl
icebp
daa
pop
pusha
stos
cld
push
pop
xchg
push
xchg
mov
adc
das
push
sub
andb
movsl
push
adc
pop
xlat
mov
aad
mov
scas
ret
or
cs
push
cmp
outsl
inc
fs
xchg
mov
ret
jl
fisubrs
and
cmc
aad
push
add
lea
push
xchg
xor
sbb
xchg
or
les
and
xor
pop
es
pop
loopne
xor
pop
xchg
clc
fistps
mov
lahf
jle
cmpsb
add
sub
cli
or
cmp
jl
xchg
rcll
xchg
mov
sub
cmc
mov
mov
test
bound
mov
popf
aaa
cmp
add
add
fldl
jle
dec
adc
dec
aad
insb
dec
stc
add
jbe
loop
jmp
fsubl
inc
adc
cltd
aad
jmp
arpl
mov
gs
jns
in
addr16
and
and
adc
ds
cmp
and
jb
add
jne
push
cmp
andb
ja
movsl
mov
in
out
outsb
inc
xlat
push
push
cmp
stc
mov
mov
repnz
pusha
clc
dec
inc
fstpt
inc
mov
lods
mov
outsl
lea
push
xchg
inc
xchg
dec
jmp
mov
mov
jmp
cwtl
shl
ret
fisubrl
cmp
sahf
adc
xchg
es
sahf
add
cwtl
int
jecxz
add
sbb
test
mov
cmc
push
aaa
repnz
push
stc
xor
xor
out
cmovbe
js
jnp
data16
les
in
inc
jbe
idivl
add
loopne
rorl
inc
icebp
ficompl
ret
cmp
gs
push
xchg
mov
shll
shrb
jae
loop
jne
cmp
test
cltd
cmp
mov
jb
enter
inc
inc
xor
iret
js
jge
out
xchg
sbb
das
sbb
xchg
test
stos
inc
pop
cmpsl
jmp
insb
or
stos
int3
add
repnz
xchg
sub
ret
cli
pop
jnp
jecxz
jl
jle
lods
int3
adc
mov
test
push
push
test
loope
cmp
ljmp
add
sahf
and
iret
popf
fwait
iret
fisttpll
mov
dec
arpl
xor
imul
and
fwait
pop
int3
nop
dec
mov
xor
push
scas
pop
jnp
pusha
pusha
adc
push
imul
cld
imul
inc
int3
sub
push
cmp
repnz
test
fadds
mov
jne
adcl
movsl
sahf
fistpll
jl
jle
jns,pn
inc
dec
roll
pop
inc
out
popf
mov
cmp
and
imul
stc
mov
pop
int3
lret
sbb
inc
notl
outsb
loopne
ss
push
lds
rcl
sub
adc
insb
jmp
adc
jne
cltd
and
inc
adc
out
inc
js
das
or
add
pop
cmp
cmp
idivl
das
arpl
mov
inc
rcrl
arpl
in
dec
xor
dec
rcrl
fadds
sarl
idiv
scas
cs
jae
add
dec
inc
popl
fwait
movsl
out
out
fwait
inc
cmp
sbb
cmp
loop
xlat
inc
mov
ret
pop
mov
cld
mov
and
sub
ror
stc
cwtl
mov
imul
inc
out
out
sub
fldcw
sub
sarl
cli
pushf
adc
cwtl
dec
call
push
ret
jecxz
cli
nop
ljmp
jne
gs
push
ljmp
sub
in
out
add
mov
pop
mov
jno
in
cmp
mov
inc
dec
cwtl
faddl
test
cmpsl
cmp
leave
cld
xlat
mov
bound
les
push
xchg
mov
jb
xchg
sub
shll
lret
xchg
les
xor
add
aas
adc
clc
insl
mov
sbb
push
js
sti
push
sahf
xlat
pop
loope
fiaddl
mov
jo
sub
mul
fisubrs
mov
sbb
subb
sbb
sbb
rcrl
fwait
push
jg
jo
inc
stos
jmp
cltd
lret
sbb
sahf
cld
cmp
stos
insl
inc
xchg
cmp
adc
dec
aad
jge
lea
add
iret
dec
push
loope
cmpsb
pushf
flds
mov
sub
sbb
ss
sbb
xor
in
mov
jae
xor
in
icebp
fsubrs
xchg
xchg
addr16
sbb
xor
jb
dec
cs
sub
sti
mov
or
sub
mov
pusha
adc
pop
jg
mov
xor
mov
xor
pop
dec
shll
lock
push
xchg
xor
mov
and
cs
add
lods
in
pop
add
sbb
addr16
filds
pop
loop
adc
pop
outsb
arpl
movsb
insl
pop
jp
lods
lahf
cwtl
nop
add
ret
stos
fisubrl
mov
cmpb
push
test
test
xor
mov
push
movsb
decl
push
pop
and
cli
and
mov
mov
sti
pop
pop
or
fcomps
adc
iret
subl
jbe
jecxz,pn
add
fiadds
ret
adc
aaa
push
mov
ss
jo
cmp
es
flds
xchg
ret
inc
aad
pushf
ficoms
out
daa
test
and
push
shlb
xchg
repz
fisttpll
pop
loope
pusha
pushl
push
into
aaa
idivb
inc
paddb
jle
cmp
jae
or
jne
push
movsb
js
adc
and
push
ljmp
ret
mov
and
pop
int3
jp
jb
adc
pop
adc
pop
mov
aaa
arpl
js
cli
pop
shlb
in
pusha
jmp
push
or
or
out
xchg
imul
fbld
mov
xor
jns
mov
out
jl
clc
dec
bound
insl
arpl
pusha
dec
testl
mov
filds
xlat
repz
stc
jl
int
push
es
test
fdivr
and
cmpl
repz
cmp
xchg
adc
xor
aam
mov
and
mov
xchg
or
xor
addb
int
loope
pusha
js
mov
ds
clc
fadd
filds
adcb
insl
push
mov
adc
stos
fists
fs
jns
push
sahf
sbb
jge
fldcw
divb
cmc
shll
insl
and
adc
cli
jno
rep
push
dec
loop
adc
push
push
bound
hlt
and
mov
add
leave
sahf
loope
push
pop
dec
mov
arpl
mov
pop
adc
std
jne
out
dec
subb
test
cmp
cld
aaa
cmp
data16
mov
mov
fimull
fdivl
jge
xchg
pop
movsb
rol
inc
iret
push
outsl
push
jns
adc
mov
sbb
push
fists
aam
faddp
inc
add
fiaddl
and
inc
ja
pop
movsl
dec
xchg
dec
jg
or
ret
sahf
push
icebp
inc
xchg
mov
cs
leave
mov
icebp
rcl
mov
xchg
push
jge
fimull
xor
aas
imul
and
idivl
mov
jno
cltd
aam
out
sbb
mov
clc
xor
dec
movsl
cmp
inc
cmp
movsl
sbb
test
xchg
cmp
sub
dec
lods
leave
pusha
add
testb
xchg
cmp
jp
int
or
add
rcrb
cs
mov
outsb
pop
int3
out
test
sub
push
inc
sub
hlt
inc
jle
mov
and
das
lret
mov
test
dec
adc
dec
dec
jae
adc
shrb
aaa
xchg
test
sub
sbb
mov
push
add
or
mov
je
and
mov
rcl
pop
nop
inc
mov
cmp
push
loopne
out
das
xlat
call
bound
int3
adc
dec
cmp
cmp
add
mov
lea
and
cltd
lahf
inc
push
mov
mov
inc
xor
into
mov
pop
ficoml
sarl
xchg
and
push
fistps
push
daa
dec
sahf
add
dec
push
outsb
push
and
stos
rolb
xchg
push
xchg
mov
inc
lret
and
jns
popf
dec
pusha
jg,pt
pusha
je
sbb
into
and
ljmp
dec
sti
pop
ja
movsb
mov
dec
int3
insl
in
and
outsw
test
jg
add
jg
jbe
insb
out
hlt
nop
push
nop
movl
notb
loope
int
aaa
fdivs
ret
jo
hlt
pushf
das
scas
test
push
hlt
stos
and
pop
cltd
les
scas
sbb
sub
sbb
push
roll
xor
imul
imul
shlb
sub
sub
cmp
jno
sbb
scas
insb
mov
mov
sub
rclb
cwtl
shr
lods
xor
fsubrp
xor
int
pop
lea
dec
loop
pushf
dec
pop
push
jmp
pop
xchg
test
inc
out
js
pop
stc
add
sbb
inc
xlat
pop
dec
cwtl
mov
repnz
popa
out
xchg
aad
adc
test
jg
cmp
mov
mov
xor
daa
inc
clc
movsb
add
xor
loopne
sub
jnp
or
push
xor
lret
xchg
sbb
push
jns
inc
nop
dec
xor
test
fwait
jge
mov
enter
hlt
inc
popa
jno
or
pop
mov
mov
out
cmp
repz
dec
pop
lds
enter
loopne
out
push
fildl
add
sahf
mov
pop
ja
stos
pushf
aaa
outsb
xor
mov
mov
mov
xchg
leave
insl
pop
mov
lret
mov
je
dec
idivb
push
inc
or
xchg
sub
imul
dec
xor
stc
mov
cld
sub
out
and
in
es
daa
pop
stc
pop
inc
imull
test
mov
inc
rcll
scas
inc
jge
push
dec
push
xor
jg
sbb
sbb
pop
mov
dec
pushf
jbe
mov
mov
das
out
cs
nop
flds
adc
fwait
jae
lock
daa
and
push
add
inc
mov
repnz
mov
ret
or
cmp
pop
or
xlat
je
sub
lea
outsl
insb
xchg
insl
mov
pop
outsl
sbb
rcrb
mov
jae
push
out
adc
or
sbb
mov
cmp
in
out
lret
mov
adc
sub
mov
cmp
test
push
jge
mov
jns
xchg
decb
cmp
aas
push
and
fwait
jl
sbb
jl
push
sti
jge
xchg
insb
loop
push
call
mov
sbb
sub
cld
push
adc
mov
push
mov
push
in
dec
mov
stc
jnp
out
xor
mov
sub
cmp
cmpb
dec
jbe
shl
mov
rorl
movsl
sarl
dec
sar
add
aam
mov
leave
xchg
test
push
test
inc
test
cmpsb
mov
pop
fmuls
jb
add
push
cli
and
in
pop
lds
lcall
cltd
repz
push
ret
xor
xchg
ljmp
fdivl
ja
mov
imul
mov
test
ret
shrl
popl
push
fimuls
push
and
ja
sbb
movsl
enter
cmpb
clc
stos
stos
mov
push
cmpsl
out
adc
loopne
std
data16
sub
jno
jno
in
aad
fwait
fwait
xor
cmc
mov
inc
jl
mov
lds
cli
and
xchg
dec
dec
js
in
jle
xor
push
ljmp
cmp
lods
pop
jle
shll
ljmp
push
mov
andb
xchg
movsl
mov
or
push
aad
dec
or
movl
mov
fmul
std
nop
repz
xor
pusha
adc
xchg
cltd
push
cmp
lods
adc
sbb
jns
movsl
xchg
pop
js
push
fwait
and
dec
lods
aam
out
xor
in
bound
mov
jecxz
pop
sub
and
jmp
xchg
aas
xor
shrb
adc
xchg
mov
lea
ss
int
mov
lods
dec
xor
in
js
in
test
repnz
xchg
sbb
hlt
push
nop
out
inc
pop
cmp
mov
imul
fisttps
test
lods
test
movsb
or
cwtl
push
lcall
mov
xchg
jno
jnp
cmp
iret
insl
aad
test
lods
pop
je
mov
jb
push
mov
popf
jle
daa
push
mov
ret
imul
mov
daa
testl
mov
and
push
mov
xor
ljmp
lods
xchg
add
lea
shll
loop
jecxz
iret
orl
cmp
jmp
fistps
ret
lds
xor
lret
xorb
dec
cmp
mov
and
push
jmp
push
out
mov
popf
inc
and
lret
cmp
enter
in
shrl
jnp
mov
fucomp
and
lret
push
mov
test
and
scas
ret
or
ds
mov
dec
mov
fwait
popa
ljmp
mov
lds
or
inc
adc
mov
push
js
daa
sbb
lcall
imul
cmp
cltd
or
cmp
cmp
mov
sub
in
pop
inc
fwait
jnp
icebp
pop
pop
rcrb
mov
pop
ror
dec
cltd
test
adc
jb
clc
stos
popf
sub
add
loopne
mov
mov
sbb
dec
cli
push
inc
pop
imul
inc
movsb
in
sbb
sbb
add
xchg
imul
pop
cmp
aad
lret
pop
fbstp
hlt
add
loopne
jp
sbb
push
jae
pop
lea
mov
ret
adc
outsb
sub
lret
jns
cmpsb
add
scas
pop
adc
mov
mov
jne
shlb
pop
daa
dec
xchg
mov
das
cs
mov
dec
mov
add
add
mov
jg
pop
jp
cmp
cmp
dec
pop
lcall
stos
insl
sub
inc
pop
cmp
ljmp
push
shll
pop
cmpps
shrl
fistl
push
adc
in
cmc
movsl
xchg
push
ja
roll
daa
lahf
xor
je
jp
stos
fwait
push
loop
ror
cli
xchg
insb
and
fistps
add
xchg
cmp
cmpsb
ret
movsl
sub
and
daa
dec
dec
pushf
ljmp
mov
adc
jne
push
fistpll
cs
ss
loop
jbe
insl
or
and
xchg
ja
push
pop
dec
leave
loope
or
lds
inc
mov
clc
out
in
push
jno
leave
jmp
movsl
arpl
jmp
gs
xlat
inc
dec
pop
lahf
fwait
adc
jne
lea
out
popa
lods
jns
icebp
xor
dec
sub
and
jne
inc
aam
xchg
icebp
and
sub
push
add
jle
fldt
mov
xchg
dec
xor
sbb
cmp
fwait
lods
pop
sbbb
adc
push
lret
cmp
xchg
fldt
sbb
mov
call
outsb
push
nop
sbb
mov
in
sti
repz
rcrb
mov
xchg
mov
pop
sbb
in
ret
cmp
xchg
sbbl
inc
xor
movups
sub
je
pop
xchg
xor
push
sbb
imul
je
mov
jmp
hlt
cmp
xor
sub
lret
push
mov
mov
sub
inc
mov
or
daa
mov
fimull
pop
and
and
dec
sahf
test
daa
sar
outsl
sti
aaa
movaps
xchg
roll
push
sub
mov
imul
jne
pusha
jno
aaa
fdiv
cmp
fsqrt
cltd
rcll
pusha
push
mov
cmp
pusha
lret
cs
dec
ljmp
jmp
mov
fstps
shrb
cld
rcr
ss
je
dec
stos
dec
mov
sub
iret
pop
mov
loop
xchg
mov
inc
push
xor
and
mov
fs
clc
xchg
mov
xor
nop
dec
into
sub
flds
flds
mov
movsb
scas
mov
fwait
cmpsl
adc
in
sar
shrl
fistpll
aad
test
adc
cmpsl
arpl
push
pop
in
ss
and
push
test
repz
mov
lds
adc
out
push
push
inc
or
mov
loop
out
sbb
stos
loop
sub
pop
mov
adc
jl
aaa
push
rorl
in
imul
pop
mov
push
hlt
jbe
lcall
in
jae
mov
cmp
in
outsl
push
iret
mov
mov
stc
sti
insl
mov
xor
movsl
scas
int
sub
jge
inc
pop
add
mov
cmp
pop
fmull
push
in
rcll
and
rdmsr
add
fdivl
shlb
mull
in
addl
nop
or
or
jmp
mov
inc
or
sbb
or
sbb
mov
jmp
sub
rcl
dec
int
xor
pop
jle
xor
loope
insl
adc
aam
mov
fistpll
cltd
jne
jbe
out
push
test
jno
cli
test
jecxz
jns
into
inc
jle
mov
sbb
and
adc
add
rclb
add
sti
addr16
scas
popf
ret
and
cmp
xor
push
lods
jo
lahf
pusha
mov
imul
daa
test
cmpsl
inc
fs
std
pop
fisubs
sub
cmp
lock
dec
or
mov
dec
jge
ffreep
insl
adc
sub
repz
loop
add
cmp
movsl
dec
dec
sub
movsb
cmpsl
lods
xor
ds
sub
movsl
sub
push
xchg
pushf
aad
jae
mov
mov
aaa
movsb
jp
sti
xchg
pop
xchg
jmp
roll
loope
or
dec
cmc
pop
xchg
jbe
lret
scas
test
gs
bound
nop
jns
mov
and
sub
or
lret
sti
test
arpl
roll
inc
sbb
or
xor
mov
mov
cwtl
jmp
push
sbb
cmp
sti
pop
jae
sub
push
pop
dec
outsl
fsubrl
cmp
rol
loopne
ljmp
call
cwtl
popa
pop
cmp
xlat
scas
psubsw
out
cmp
xchg
fistl
data16
aas
dec
push
imul
jb
cmp
ds
out
xor
cld
lahf
imul
inc
push
aas
shrb
imul
fsub
cmp
push
inc
jns
into
push
lods
add
mov
hlt
fimuls
xchg
push
and
fwait
or
movsl
ficomps
add
mov
mov
test
test
cmp
push
xchg
lahf
dec
test
sbb
in
aaa
sbb
scas
inc
loopne
mov
fsubs
mov
mov
mov
or
cmpsb
mov
jno
fimuls
clc
or
loop
push
enter
jae
add
ret
add
mov
andnps
pop
bt
outsb
popa
mov
sbb
shll
ss
pop
pop
jbe
mov
cmp
mov
lcall
mov
test
mulb
loope
shrl
push
int
cmp
test
mov
lahf
jge
cmpsb
cli
cmp
test
push
xor
aaa
xchg
push
loope
push
push
xor
ja
es
or
mov
rorl
xchg
and
xchg
das
xchg
sbb
subl
pop
cmc
lods
push
add
push
xchg
loope
and
aad
xor
stos
jmp
cmp
and
and
inc
push
insl
mov
xchg
outsl
fisttpll
sbb
dec
pusha
shlb
jp
add
clc
inc
push
mov
jnp
test
fs
test
rcrl
fdivl
mov
dec
scas
arpl
js
incl
jns
push
enter
push
or
cmp
pop
pop
cwtl
add
shrb
mov
sbbl
movsl
push
jo,pn
pusha
mov
orl
jge
sbb
inc
js
andb
les
out
daa
in
sbb
aaa
sub
jg
sbb
cmp
rcr
xor
jp
insb
sub
ja
sbb
xchg
mov
sub
mov
mov
dec
add
xlat
imul
adc
imul
adc
mov
and
into
or
jp
or
push
push
and
lret
xchg
in
sub
jne
mov
pop
mov
popa
xchg
adc
imul
or
in
mov
push
bnd
inc
ffree
inc
clc
je
sub
mov
test
les
sbb
fcompl
je
jg
push
movsb
mov
pop
jge
sub
loopne
cmp
scas
loope
je
xchg
out
out
std
lret
xchg
push
xor
xor
cli
pushfw
ja
cmp
mov
gs
and
lcall
push
call
mul
scas
test
add
scas
sub
sub
xchg
xchg
pop
xor
sbb
and
mov
mov
pop
push
ficomps
xor
and
iret
out
xor
inc
mov
inc
mov
notb
pop
mov
mov
shl
out
dec
adc
fsqrt
lahf
shll
sub
or
dec
jnp
or
mov
ret
sbb
dec
or
dec
and
stos
dec
outsl
adc
hlt
movsb
imul
mov
sbb
dec
pop
lret
mov
in
cmp
jmp
lods
mov
push
push
add
cmpsb
pop
test
dec
xchg
sbb
mov
cmp
aaa
bnd
fldt
in
sbb
sub
or
aam
test
mov
repnz
jge
leave
sbb
loopne
jg
adc
pushf
xchg
movsb
inc
mov
push
scas
or
and
add
jmp
in
jmp
xchg
lds
shrl
cmp
cmp
arpl
pop
push
into
cmp
movsl
scas
add
std
stos
xor
out
inc
mov
jae
test
divl
and
xchg
lahf
popf
inc
sbb
lock
lcall
xor
popf
out
fnsave
enter
hlt
jp
and
or
and
cld
ret
jmp
jg
mov
bound
pop
mov
out
shll
in
dec
ret
adc
add
jecxz
loope
in
test
add
out
cli
testl
push
arpl
inc
sub
sbb
ss
sub
add
loope
sbb
jecxz
outsb
pop
adc
jecxz
pop
dec
fildl
jns
fisubs
dec
xchg
or
sub
mov
jle
scas
in
call
mov
or
in
nop
scas
sub
sub
aas
dec
clc
pushf
cld
xchg
andl
mov
mov
outsb
scas
ss
dec
xchg
inc
shl
not
inc
insl
inc
inc
imul
pop
xchg
repz
xor
push
dec
pop
in
dec
faddl
jl
popl
xchg
dec
cltd
mov
jg
testb
or
sbb
xchg
into
push
pop
jno
pop
daa
xor
mov
xchg
lahf
mov
mov
adc
xorb
jl
fldenv
insl
xchg
mov
bound
xor
rcr
mov
mov
xor
dec
pop
hlt
mov
sub
in
mov
fidivs
mov
lcall
shrb
scas
xor
jmp
adc
in
loopne
sub
jle
lds
xor
inc
enter
imulb
jge
rclb
test
pushw
movsb
lds
inc
mov
jmp
xchg
push
pushf
imul
pop
ds
icebp
dec
xor
jmp
inc
rcr
push
hlt
sahf
cli
lahf
jge
scas
movsb
fcompl
mov
or
mov
aad
cmp
xchg
lds
pop
outsb
popf
ljmp
arpl
push
sbb
dec
rorl
fs
pushl
stos
arpl
std
jle
gs
les
push
xchg
and
xchg
jl
xchg
cmp
repnz
popa
and
mov
xchg
mov
xor
pop
sti
mov
or
js
add
repz
lods
aam
enter
jnp
or
sbb
adc
rorl
adcb
shl
adc
push
cmp
cmp
in
dec
pop
jbe
int3
cli
out
mov
mov
repnz
jb
mov
dec
xchg
sahf
cmpsl
ret
xor
int3
leave
sbb
adc
inc
inc
mov
outsl
dec
push
movsl
mov
les
mov
mov
das
jo
cmp
les
stc
xchg
xchg
repnz
dec
loopne
adc
ss
jnp
lock
aas
cmp
cmp
dec
fwait
jge
xor
cmp
or
pop
xchg
ror
je
jnp
jo
outsb
loope
dec
xchg
stc
cmc
pop
adc
leave
push
mov
or
shl
xor
bound
inc
mov
lret
dec
and
arpl
jb
in
jecxz
adc
fcomp
loopne
fwait
movsl
mov
add
inc
pushf
sbb
imul
negb
adc
icebp
cmp
push
popf
xchg
xchg
std
pusha
lret
stos
pusha
lret
cmp
subl
mov
add
fs
dec
dec
mov
and
pop
icebp
sub
in
xchg
stos
xor
jo
out
cli
jno
push
loope
jae
adc
stc
cmpsb
int3
or
ret
mov
lea
lock
sbb
xchg
stc
subb
mov
sti
cs
rcrb
or
jno
rolb
lock
repnz
and
cmp
add
xor
mov
repz
push
cmp
or
repnz
data16
push
into
sub
adcb
push
cmp
xor
lcall
adc
sbb
jmp
fstpl
insb
sub
lock
xchg
xchg
fdivl
adc
je
xor
pop
in
add
jo
jb
jle
aas
sbb
pop
push
cmpsl
inc
in
in
or
sbb
scas
dec
xchg
sub
leave
cld
out
sub
in
pop
ret
inc
inc
pusha
jl
aaa
push
scas
std
aad
std
ret
cmp
xchg
pop
in
xchg
add
sbb
add
test
sti
add
and
dec
jmp
sbb
and
mov
sbb
aam
xchg
lahf
cwtl
call
out
pop
fnstsw
xor
mov
pop
ret
jle
mov
shlb
sub
inc
sbb
xor
xchg
movsl
fsubs
xor
movsl
mov
fldenv
push
in
nop
inc
adc
jp
inc
mov
mov
add
and
jle
cli
add
fwait
sahf
inc
js
test
in
mov
inc
and
popl
sbb
sub
fisubs
into
test
and
test
ljmp
dec
mov
or
push
mov
lea
xorb
shrd
sbb
cmp
jp
and
adc
adc
push
mov
lret
das
xor
clc
push
jle
sbb
mov
mov
and
insl
mov
and
cmp
inc
ret
mov
mov
into
cltd
pusha
sti
jle
sahf
outsb
mov
test
or
adc
iret
cwtl
add
loop
addr16
cmp
jle
sbb
push
nop
jg
test
cld
in
cmp
scas
xchg
mov
loope
pop
mov
in
ds
cwtl
inc
fsubrl
enter
xchg
sbb
xchg
cmp
sbb
push
mov
lea
sub
cld
sub
cmp
mov
loope
inc
xor
dec
mov
mov
xor
fsub
or
loope
ret
and
ret
mov
xchg
jne
sub
cmp
loopne
dec
pop
mov
stos
xor
dec
jbe
mov
jnp
lret
or
enter
je
js
xchg
push
imul
fsts
lfs
jnp
lods
mov
sub
out
fnstcw
data16
push
sbb
sbbb
inc
adc
loop
dec
push
mov
jge
jmp
lock
xchg
aas
fnstcw
push
daa
mov
mov
test
mov
ret
lds
or
dec
xor
sbb
jecxz
sbb
fwait
mov
fdivl
movsb
sub
arpl
sbbl
lret
xor
mov
imul
popf
push
add
insb
test
push
sub
jae
sbb
aaa
and
into
movsb
stos
movsb
and
mov
lock
inc
or
mov
cmp
sarb
sarl
shlb
or
inc
adc
jbe
dec
test
mov
cld
push
mov
adc
cmc
in
mov
add
cwtl
or
xor
ficoms
cmp
fld
adc
sbb
inc
jo
ret
rorb
aam
fwait
push
jnp
hlt
add
or
in
test
aas
jno
push
addl
punpckhwd
mov
pop
dec
sarb
sub
in
lcall
rclb
mov
or
pop
rorl
ss
push
ds
mov
int3
sbb
inc
sbb
jne
jmp
sti
call
inc
cltd
xchg
repz
lods
lds
sub
sbb
adc
or
mov
ljmp
outsl
stos
xor
shl
lods
push
sarl
mov
adc
inc
push
jnp
and
ja
mov
jmp
rcrb
jnp
aas
lea
cs
mov
jp
mov
sbb
out
adc
mov
bound
arpl
push
jecxz
mov
xchg
inc
adc
sahf
out
cmpsl
mov
mov
into
ret
stos
popa
bswap
call
mov
int3
sbb
mov
push
and
in
mov
jp
inc
adc
movsl
insb
pop
pop
and
outsb
repnz
mov
push
into
or
loop
mov
xor
pop
push
iret
fsubl
sbb
movsl
pop
aaa
jns
sub
dec
adc
push
dec
je
outsl
mov
es
addb
and
jg
scas
inc
jno
and
mov
je
push
inc
cmp
jp
or
insb
in
out
push
inc
std
xchg
mov
popa
out
push
lock
inc
je
or
inc
xchg
add
test
ljmp
adc
imul
sbb
jo
sub
inc
mov
imul
jecxz
mov
mov
inc
lret
inc
inc
mov
mov
out
pop
ds
loop
outsl
dec
hlt
inc
adc
jle
mov
cld
dec
sub
loop
mov
inc
adc
inc
xchg
jle
push
loope
das
mov
and
add
xor
sbb
dec
or
cwtl
cmp
ljmp
setg
out
or
sub
in
hlt
cmp
jno
add
sti
lret
xchg
jns
hlt
stos
aas
data16
sbb
nop
rclb
mov
add
inc
popa
push
call
mov
faddl
mov
popf
adc
outsb
xchg
mov
imul
and
imul
mov
es
and
xor
add
jle
cmp
mov
mov
jno
mov
dec
or
mov
mov
aad
mov
mov
xor
pop
adc
inc
insl
fs
adc
sub
aad
add
shll
mov
cld
int3
sub
jns
notb
les
cmp
in
loop
mov
imul
inc
lcall
dec
daa
fisttpll
xchg
test
repz
inc
inc
dec
adc
ljmp
push
push
sti
std
pop
mov
mov
xchg
jle
ja
cmc
scas
mov
data16
out
fistpll
sub
xchg
stos
sub
popa
fsub
scas
nop
xor
insl
decl
cmc
pop
in
pushf
mov
test
push
xor
sbb
inc
xlat
inc
cmpsb
lea
lret
je
sbb
fistpl
jp
or
mov
std
sbb
imul
push
je
inc
xor
push
sbb
mov
loopne
or
jo
inc
shl
mov
arpl
push
dec
mov
rcl
or
cmp
mov
cmc
mov
mov
lret
inc
aaa
cwtl
dec
pop
rolb
push
sbbl
jb
icebp
fisttpll
xchg
data16
dec
cmpl
push
mov
xchg
pop
stos
sub
jecxz
or
je
inc
mov
decb
das
sbb
push
les
mov
jnp
mov
outsb
dec
mov
ret
jg
sub
jo
imulb
std
ret
mov
fs
mov
mov
test
femms
std
in
lcall
movsl
cli
pushf
fs
xor
xchg
lahf
jno
testl
dec
xchg
sub
and
notl
ds
ja
pop
imul
push
out
mov
cmp
pushf
mov
bound
and
mov
jo
test
push
mov
hlt
fs
fdivs
push
add
repz
jp
sbb
push
cmpb
das
mov
and
and
inc
movsl
push
scas
and
sbb
ds
xor
adc
dec
nop
pushf
mov
pop
push
pop
sub
mov
or
mov
cmp
cltd
movsb
add
fsub
mov
outsl
mov
imul
es
clc
out
dec
add
stos
pop
das
mov
push
adc
push
lret
aaa
xor
cmpsb
sub
xchg
mov
dec
sub
jne
cmp
icebp
jl
les
js
mov
sbb
es
jge
inc
jle
add
cli
testl
push
pop
fwait
repz
nop
int
push
popa
loopne
dec
js
adc
pop
test
lcall
vpmacssdd
adc
mov
adc
pushl
push
je
inc
mov
jnp
lds
mov
cmp
flds
in
jae
and
nop
aaa
mov
mov
jae
jne
dec
jb
movl
adc
pop
dec
and
nop
loope
in
test
cli
and
int3
pop
mov
pop
and
int
jecxz
nop
in
fidivs
es
mov
jmp
cli
aaa
pusha
cmp
add
xor
mov
mov
ja
jg
add
loop
lahf
insl
jecxz
xor
lret
outsb
lock
push
out
sahf
stos
jno
mov
or
mov
andb
std
lods
shlb
mov
stos
mov
xchg
pop
and
push
stos
icebp
leave
repz
sti
in
xchg
fbld
mov
movsl
out
repnz
push
mov
push
fwait
and
push
mov
xchg
lret
or
lock
pusha
dec
ficoml
inc
mov
rcrb
test
push
jbe
adc
dec
ds
jecxz
mov
mov
sbb
dec
jbe
adc
xchg
movaps
or
dec
data16
mov
jge
jl
xchg
outsl
sbb
shl
fldcw
jne
out
or
or
pop
cs
arpl
sti
jb
leave
mov
mov
xchg
aaa
int
sub
mov
inc
xor
pop
lret
lcall
or
aad
stc
mov
mov
mov
sub
int3
ss
xchg
testl
jo
fiadds
cli
pop
push
scas
pop
mov
jecxz
adcb
aam
fldt
andb
ljmp
stos
or
mov
and
ret
add
pop
ds
or
std
cli
pop
addr16
dec
mov
repz
pop
or
scas
ja
xchg
repnz
addr16
lret
xchg
sbb
lcall
sbbb
add
ss
mov
stc
cmpsl
and
cmp
fbld
pop
ss
ja
stc
es
lock
repz
fisttps
fldenv
iret
fs
inc
mov
test
sub
sbb
inc
inc
das
loop
loopne
pop
popf
mov
jo
add
out
cmp
cmp
adc
fiaddl
rorb
pop
cmp
icebp
cmpsb
and
xchg
movsl
jl
xor
stos
pop
rorb
pop
mov
movsl
cltd
push
push
sub
lock
push
stos
jne
int3
cmp
cs
mov
aam
mov
mov
jns
mov
scas
ret
ret
dec
xchg
clc
in
sub
fadds
imul
fwait
add
xchg
pop
jnp
pop
mov
mov
and
addr16
jmp
inc
push
je
mov
adc
xchg
dec
inc
les
test
movsl
fsubrs
rorl
mov
es
sbb
repnz
hlt
pop
jo
dec
aaa
in
pop
lret
jl
addl
fs
cmp
repz
mov
dec
lcall
stc
cmp
nop
sbbb
jl
cmc
or
xor
in
fwait
rep
lea
mov
mov
xor
fstps
das
push
imul
fs
mov
and
add
pop
ljmp
xchg
stc
test
int
gs
xor
and
xor
mov
push
xchg
rcrl
xchg
dec
nop
jle
add
pop
cmpsl
test
push
movsl
cld
dec
push
and
test
dec
les
ret
iret
mov
adc
sar
lods
mov
roll
bound
xchg
and
cmp
daa
adc
loope
cmp
lret
stc
add
fistpll
mov
mov
rcl
rorl
out
xchg
in
int
xchg
pop
lods
sarb
mov
pop
loope
pop
addr16
fiaddl
and
sub
dec
adc
mov
aas
jae
fadd
cmpsl
call
imul
shrl
lods
bound
cmpsl
int3
mov
xchg
mov
movsl
xchg
adc
negb
rorl
sub
push
hlt
pop
outsl
mov
push
jecxz
mov
data16
cmp
push
in
add
loopne
rclb
popa
ret
cmp
idivb
test
or
sub
test
push
cmpsl
sti
jb
cli
push
and
int
dec
fucomp
in
xchg
rdmsr
pushf
xchg
and
dec
lods
popa
push
std
out
push
mov
xchg
sub
lods
in
in
adc
fs
and
xor
ret
push
push
adc
jbe
jo
cmp
dec
lret
lahf
xor
sar
lds
test
push
push
push
and
inc
mov
xor
mov
jmp
xchg
inc
sbbb
add
sbb
mov
ficomps
test
mov
adc
fisubs
outsl
jmp
loope
or
push
insl
int
cmovne
mov
imul
jmp
push
jbe
pop
jb
xchg
movsb
pop
and
lea
daa
jp
inc
xchg
shrl
ret
daa
popa
jl
cli
aad
test
mov
addr16
sbb
sbb
imul
cmp
xchg
push
pushf
jge
sti
or
lods
outsb
inc
fcoml
aaa
test
pop
js
cmc
pop
mov
dec
loop
or
fsubs
dec
pop
xor
outsb
rcll
stos
test
pop
ja
hlt
orl
stc
dec
std
sbb
adc
ds
repnz
imul
sub
popa
add
dec
cmp
leave
stos
je
sub
cmc
push
sarb
mov
sbb
jmp
addr16
adc
push
or
aam
cmp
daa
cli
push
adc
pop
mov
push
sub
and
add
jbe
inc
add
bound
fsubrp
jp
mov
fwait
push
jo
sub
push
stos
aas
cmp
lods
scas
cmp
and
xorb
sub
inc
cmp
xchg
lret
sarb
adcl
push
stc
loopne
cmc
jmp
xchg
lahf
sub
lret
hlt
jle
push
icebp
mov
out
jmp
xchg
sbb
and
leave
and
dec
sbb
sbb
inc
push
cltd
xor
mov
dec
scas
lea
mov
adc
xchg
sti
or
testl
adc
test
sahf
cwtl
pop
pushf
aas
dec
inc
cmc
jle
outsl
lret
shr
nop
stos
pop
mov
data16
mov
fnstenv
push
into
mov
push
daa
shll
jns
xchg
fstpt
or
outsl
xor
dec
ja
in
or
arpl
pop
sbb
testb
push
clc
lret
mov
push
mov
loopne
scas
std
add
repnz
mov
mov
sbb
dec
popa
lahf
pop
ljmp
dec
jmp
inc
cmpb
je
sub
mov
cmc
jns
mov
or
push
fsubl
inc
cs
out
jnp
jb
and
or
cli
call
mov
int3
daa
lcall
jnp
mov
dec
cmp
dec
jne
xchg
cltd
lcall
fmull
sti
and
leave
push
xor
dec
ror
out
popf
mov
outsb
shrb
pop
or
add
stos
sahf
mov
fdivl
add
mov
lret
gs
in
sbb
and
pop
mov
sub
outsb
jae
mov
pop
inc
xchg
popa
jbe
popf
sub
outsb
out
add
dec
mov
inc
push
fnstcw
daa
rcll
ljmp
sti
jae
or
jmp
push
outsb
clc
outsb
lea
push
mov
lret
ret
arpl
push
mov
push
decb
scas
cmpsl
shrb
mov
inc
or
dec
jb
js
mov
test
outsb
jb
and
gs
jecxz
lock
repz
sbb
mov
adc
pop
lret
xor
mov
call
mov
inc
pop
in
dec
mov
int
into
sbb
out
fimull
adc
jns
movsb
sub
jnp
xor
add
mov
iret
mov
cmc
ror
jle
sbb
jmp
sub
jbe
out
jbe
je
jmp
pop
and
in
mov
inc
ss
in
out
mov
mov
push
stos
outsl
cmp
gs
sub
push
jne
daa
stc
or
lods
jns
pop
lret
inc
xor
inc
imul
dec
jl
scas
inc
rcr
lea
sbb
cmp
es
stos
fcmovne
leave
gs
stc
mov
fcmovnb
out
sub
dec
cmp
jp
pop
push
pop
mov
xor
lods
mov
outsb
or
out
mov
xor
xor
bound
mov
stos
arpl
sbb
shlb
int
pop
subl
and
popa
dec
mov
das
hlt
outsb
inc
lods
aam
cld
popf
xor
cmp
ja
dec
icebp
pusha
movl
adc
gs
xchg
mov
lret
mov
inc
jecxz
test
je
mov
fnsave
sub
cmp
mov
jl
add
js
sbb
inc
cli
or
add
addb
cmpsl
lds
jg
xor
mov
ja
stc
mov
lahf
push
shlb
loop
movsl
mov
mov
push
jb
xchg
lahf
add
cmp
add
push
jmp
jo
jp
mov
popa
in
sub
dec
jl
cmp
pop
addr16
dec
sub
ja
pop
inc
fimull
test
mov
popl
or
dec
addl
xchg
add
inc
loope
stc
pop
out
xor
add
mov
mov
xor
inc
sbb
inc
test
lret
mov
push
xor
pop
cmpsl
roll
or
inc
testl
sti
and
xchg
add
add
aas
dec
sub
mov
jo
inc
scas
aad
dec
pop
and
les
nop
push
push
jle
aas
js
divl
and
xchg
cmp
mov
cmp
xchg
mov
outsb
fwait
lret
hlt
adc
and
jecxz
das
mov
inc
pop
or
cltd
jl
add
sub
or
mov
pusha
xchg
pop
and
stc
mov
cmpsb
movsl
mov
adc
outsl
test
cmc
jl
jae
ja
aam
push
inc
out
xchg
adc
inc
pop
jg
mov
mov
andb
sbb
shll
popa
and
add
xor
out
sbb
int
iret
test
and
pop
jp
xorl
push
adc
xchg
lcall
and
xor
adc
add
sbb
xor
adc
push
stc
aam
std
rorb
or
mov
xor
xchg
add
stos
and
je
xlat
pcmpeqb
ljmp
cmp
push
js
dec
andl
push
adc
mov
inc
rolb
daa
push
and
fstpl
stos
out
insb
ret
rep
jecxz
or
cmc
sub
dec
int3
fs
test
ds
xchg
add
jne
or
cmp
adc
push
fstps
je
pop
xor
lahf
rorb
mov
dec
or
sbb
dec
roll
sbb
push
pop
stos
fadd
cli
xchg
sub
fucomi
jle
xor
mov
mov
shrl
mov
fldt
mov
and
sub
ljmp
fcoml
daa
dec
xor
jecxz
inc
in
popfw
mov
xchg
mov
aas
pushf
arpl
jle
cmp
cwtl
mov
stc
mov
dec
out
lcall
fisubl
xor
js
and
leave
push
cmp
shll
lret
mov
sub
push
loope
cli
cmp
push
imul
repnz
push
pop
xchg
lret
lods
xchg
add
and
out
add
bound
out
cmp
or
sti
jb
mov
call
xchg
inc
ret
into
push
xchg
push
cmp
jnp
insl
jge
ds
jle
sub
shll
dec
cmp
push
pop
sbb
daa
test
das
xchg
mov
push
and
push
mov
jae
mov
call
pop
js
adc
pop
cwtl
xchg
enter
and
fs
jp
mov
sbb
shrb
stos
mov
sub
cmp
loopne
rcrl
movl
mov
pop
add
adc
ljmp
das
mov
push
mov
inc
mov
inc
jbe
or
mov
enter
pop
shll
adc
repz
scas
int3
negl
add
xlat
lret
pop
aas
jp,pt
push
jns
push
mov
int
call
repnz
and
dec
pop
test
mulb
pop
push
jmp
dec
inc
jns
xchg
insb
rcl
insl
cs
and
mov
add
iret
ljmp
mov
fadds
sub
adc
mov
icebp
int3
jge
lea
mov
pop
fisttpl
ss
xor
in
jle
push
daa
rcll
in
fistpll
cmp
jne
jmp
mov
sub
loop
mov
sub
ja
test
xor
repz
insl
mov
aaa
bnd
mov
in
xchg
cli
ja
xchg
add
sbb
ja
fisubrl
cmc
data16
out
cmp
aas
sub
fs
outsl
lods
add
jecxz
or
testl
xchg
test
in
movsl
sub
and
fs
incb
adc
cltd
cmp
cld
pop
xor
test
xchg
movsl
js
mov
in
rorb
push
rorb
cmp
xchg
pushf
jo
call
xor
aad
sbb
imul
aas
out
push
sbb
add
cld
xor
jg
mov
pusha
mov
es
lret
and
nop
and
mov
and
cmp
sub
mov
mov
lods
insl
fcmove
mov
mov
adc
in
push
test
dec
cs
pop
push
fst
out
cmp
sub
ljmp
or
lds
addb
jns
mov
pop
pop
lahf
cld
inc
pop
push
nop
arpl
mov
mov
pop
push
ret
notl
hlt
aaa
aad
add
jge
js
jecxz
xlat
cmp
xchg
aas
inc
lods
rcrb
imul
cmp
ret
pop
adc
shrb
in
or
sbb
gs
bound
imulb
dec
push
add
push
jae
in
das
test
xor
xor
mov
mov
sahf
ret
lds
dec
xchg
sub
jmp
dec
fimull
mov
shr
mul
in
scas
bound
fsubrs
push
imul
add
aam
int3
sub
or
fst
fldl
lds
adc
imul
insb
pop
shll
push
notl
loope
pop
sub
mov
sub
xchg
cmp
loope
icebp
and
cld
sbb
dec
lea
mov
mov
fstpl
addr16
add
xchg
insb
int
stc
pop
cmp
push
fadds
xchg
pop
stos
cs
es
xchg
mov
mov
mov
in
mov
xchg
aam
dec
pop
lret
push
push
or
nop
mov
addb
mov
pop
repz
add
or
sbb
test
jp
lods
mov
hlt
shrb
lret
fbld
in
xor
cmovg
imul
out
inc
nop
dec
mov
aam
in
dec
seto
insb
iret
inc
and
sub
inc
in
in
sub
test
lret
dec
mov
popa
daa
push
mov
xor
das
mov
notb
bound
or
pushf
cmpsl
xor
insb
jle
push
cmpsl
mov
fbstp
push
fistpll
sub
jo
xchg
shr
in
int
fnsave
mov
xor
and
pop
cld
mov
and
mov
das
sbb
std
out
lods
aaa
call
add
jno
adc
mov
inc
bnd
xchg
scas
inc
xchg
pusha
loopew
pop
cmc
data16
pop
mov
incb
mov
mov
xchg
sbb
mov
rcrb
jnp
mov
xor
jge
lret
scas
fisubrl
pop
fwait
push
xchg
rolb
enter
mov
xchg
gs
ss
jae
lock
mov
fcompl
adc
pop
push
and
test
pop
orl
inc
push
lods
jle
fstpl
xor
jge
mov
jp
push
in
loop
cli
test
inc
inc
fiadds
insb
mov
pushf
lcall
test
mov
icebp
int
rorl
je
jecxz
mov
repnz
rclb
inc
mov
jbe
xchg
lret
push
imul
sbb
pop
sbb
pop
in
cmp
roll
mov
int
nop
mov
fimull
pop
sbb
test
mov
fs
add
nop
push
nop
sub
ss
inc
or
out
idivl
stos
clc
mov
in
and
jp
mov
es
adc
pop
mov
mov
jl
out
cltd
xchg
fcmovnu
mov
es
lock
jmp
mov
add
test
cltd
stc
inc
jnp
or
rcrb
fistl
inc
int
cmp
daa
mov
pop
outsl
bsf
cmp
inc
lods
sub
xor
ja
jo
into
sub
test
test
push
push
shll
push
out
pushf
dec
or
in
lds
stc
movsl
add
imul
add
inc
mov
xor
in
add
inc
xor
shl
push
dec
ja
in
xchg
push
outsb
pop
fnstcw
adc
cmpsb
sub
int
cmp
inc
test
repz
inc
mov
iret
mov
test
test
jge
xchg
sub
cmpb
mov
sub
push
pop
pusha
inc
xchg
pop
pushf
stc
test
fcompl
add
out
push
cli
andb
sahf
inc
pop
loope
in
mov
mov
mov
aaa
add
scas
inc
and
inc
pop
fisubl
mov
pop
fdivr
das
mov
in
mov
pusha
ss
stc
test
std
scas
test
jmp
sub
jnp
dec
cmp
inc
shl
xchg
ffree
cmp
outsb
stos
inc
int3
fdivl
mov
rolb
insb
rclb
sub
or
jns
or
data16
nop
outsl
cltd
sbb
fs
push
iret
fmuls
scas
nop
mov
cmp
sbb
popf
std
mov
stos
jmp
inc
aaa
ret
cmp
shlb
test
mov
push
in
lcall
mov
lcall
fmul
in
clc
ja
inc
or
push
mov
cmpsl
mov
in
aaa
sbb
pop
ljmp
push
jp
adc
xchg
sbb
sahf
pushaw
push
cmp
std
pop
lcall
scas
fidivrs
fisubl
jle
negb
sbb
pop
sub
in
lea
mov
add
fldcw
adc
sahf
dec
push
and
push
jno
jmp
jae
mov
lods
add
sahf
inc
mov
lcall
and
adc
and
push
dec
xchg
cli
mov
inc
data16
push
pop
divl
loop
mov
or
jl
je
inc
xor
xchg
imul
cli
call
sbb
or
imul
sbbb
jb
lcall
icebp
add
add
pushf
pushf
ror
leave
mov
cli
sahf
dec
fidivrs
jne
sub
mov
fwait
pop
mov
dec
sbb
adc
pop
inc
cld
lea
and
adc
and
jg
xor
cmp
mov
push
xor
mov
pop
loope
and
push
negb
xchg
lds
pop
lods
xchg
stos
repz
leave
iret
push
pop
or
adc
fisttps
dec
push
subb
pop
xorl
adc
enter
jno
xchg
pop
pop
aas
dec
mov
lret
ja
push
aaa
push
cmp
jmp
cmp
jmp
mov
loopne
push
xchg
inc
pop
push
mov
aas
out
sub
dec
xchg
dec
xchg
adc
lods
push
mov
mov
jbe
stos
rolb
inc
ret
xor
std
mov
loop
mov
ret
into
test
push
jne
idiv
testb
dec
jno
in
lods
in
mov
fnop
xchg
xor
cltd
lahf
jecxz
jnp
xchg
add
mov
movsl
jp
inc
dec
mov
adc
mov
rcrl
adc
out
cli
or
dec
aad
xchg
cmp
aad
jecxz
sub
mov
in
push
insb
stos
and
lcall
sbb
or
jmp
roll
adc
or
mov
dec
ja
adc
inc
add
push
aas
les
lret
mov
dec
lahf
or
sub
movsl
mov
cmp
sbb
mov
aas
jg
addb
push
addr16
mov
mov
lds
inc
sbb
push
pop
repnz
mov
sub
lds
fisubrs
out
add
and
dec
mov
mov
sub
imul
leave
xchg
cltd
xchg
int
mov
fsubr
inc
lahf
mov
in
test
mov
push
sub
fstpl
jbe
repnz
inc
or
push
addl
popa
arpl
fxch
inc
es
popa
mov
jb
xor
adc
or
pop
jecxz
mov
push
dec
pop
cmpb
faddl
lret
stc
subl
sti
xor
into
push
mov
lock
pop
out
add
repz
pop
lahf
xchg
jmp
xor
pop
sbb
adc
not
and
fistps
arpl
push
mov
add
gs
xchg
dec
int
jp
mov
xchg
inc
push
or
mov
int
push
stos
pop
movsb
popf
xor
adc
shll
jmp
sbb
sbb
xlat
mov
mov
dec
dec
sti
ret
bound
lret
inc
clc
sbb
ja
push
repz
dec
loope
xchg
clc
outsl
push
mov
dec
cli
and
cmp
jg
xlat
dec
sub
addr16
sub
push
sub
mov
pop
pop
mov
cmp
sub
pop
push
arpl
mov
or
dec
inc
mov
and
push
std
inc
movsb
stos
fsts
mov
or
scas
inc
in
jle
loope
orb
pop
push
xor
mov
and
rcrl
jle
inc
lret
sti
call
int3
sub
add
push
mov
jno
push
add
aas
pop
lock
cltd
icebp
add
xor
bound
fiadds
test
xchg
clc
pop
out
xchg
stos
aaa
mov
and
jb
cmp
mov
and
ret
pop
sbb
stos
adc
pusha
inc
inc
in
xor
lods
imul
aad
icebp
inc
arpl
mov
sub
movsl
pop
jge
sub
ljmp
and
aam
cwtl
mov
jb
sub
mov
ss
pop
jge
lds
and
dec
push
cmpsl
pop
xchg
dec
adc
enter
jae
fdivrl
movsl
inc
sub
cmpsb
in
divb
push
xor
out
cmp
or
mov
dec
inc
addr16
jae
enter
out
fisubrs
mov
adc
loop
inc
sub
pop
push
int3
mov
sub
cwtl
inc
clc
mov
lahf
shlb
imul
mov
pop
adc
cmp
push
jge
fisttpl
mov
jnp
inc
lcall
xor
xchg
testl
dec
out
mov
outsl
daa
xor
xor
and
orb
pushf
stos
movsl
sbb
stc
cmp
jecxz
dec
lock
sbb
sbb
cmp
lcall
inc
inc
or
or
cmp
stc
call
mov
push
loope
pop
aaa
data16
ja
and
mov
or
sub
or
dec
jnp
ljmp
xchg
push
int3
pop
outsl
mov
mov
stos
popf
ret
add
cmp
jo
or
jecxz
xchg
cmp
pop
fwait
out
fcmovb
jle
fwait
shrl
or
lds
xchg
rcl
ds
inc
add
fiadds
xchg
push
mov
je
repnz
sti
popf
add
or
aam
mov
mov
mov
fsubr
mov
sub
sbb
movsb
dec
mov
or
out
pushf
popa
mov
cwtl
fisttps
outsl
dec
jmp
cmpsl
cmpsl
scas
js
cmp
ljmp
je
inc
push
mov
aad
adc
mov
call
mov
shll
pop
hlt
jecxz
sbb
out
rol
add
mov
dec
jecxz
imul
popf
ss
push
es
jb
addr16
cmpb
push
mov
loopne
shll
fbld
jge
cwtl
sbb
movsl
call
push
ds
mov
push
ljmp
ja
sub
test
jo
loopne
mov
push
aaa
xlat
sub
in
insl
fbstp
mov
xchg
ret
je
repnz
pop
inc
pop
dec
test
mov
pop
sti
push
inc
push
or
std
ljmp
cmp
andl
xor
sarb
sbbb
and
lahf
or
aas
sbb
movsb
or
cmpsl
push
mov
cld
xchg
pusha
je
into
test
daa
mov
icebp
jmp
mov
or
jb
rcr
dec
cwtl
sbb
adc
fs
shl
out
cltd
or
lods
enter
jb
push
sub
ljmp
hlt
scas
inc
jecxz
xchg
mov
mov
lock
je
sbb
or
bound
add
pop
loope
push
add
xorb
imul
inc
jge
syscall
mov
popa
jns
sbb
mov
inc
xor
or
mov
sbb
mov
mov
les
xor
stos
movl
xor
adc
push
cmp
sub
mov
aam
push
icebp
dec
cltd
ja
das
repz
movd
pop
mov
mov
pop
test
stos
mov
mul
stos
aaa
mov
mov
stos
fsubl
push
or
into
mov
stc
push
or
inc
jle
scas
ficoml
push
jl
std
out
mov
cmpsb
rorb
jnp
icebp
adc
pop
cmpsb
out
inc
dec
xor
nop
sub
nop
push
inc
mov
jmp
sbb
inc
lods
test
xchg
mov
jns
mov
sbb
add
rcll
es
or
xchg
pop
repnz
cmpsl
xor
adc
push
pshufw
fisubrs
mov
daa
daa
sbb
data16
jmp
push
clc
sub
cmp
push
insl
inc
cmpsl
arpl
aam
jae
adc
push
imul
mov
pop
jbe
cmp
and
add
xchg
jnp
pop
cmp
cmp
ja
cmp
mov
test
mov
cmc
imul
call
jae
arpl
enter
call
add
in
push
inc
lea
jae
mov
jmp
jnp
cmc
repnz
fisttps
cmpsl
int
in
or
add
enter
loopne
push
cmpsb
imul
aad
push
div
call
nop
jb
jb
sub
mov
mov
sti
mov
in
push
vandnps
add
xor
pop
xchg
mov
insl
dec
push
popa
mov
scas
push
mov
push
sub
jno
fs
xor
add
call
inc
xor
jmp
loope
cwtl
ficoms
pop
push
in
out
sbb
pop
cmp
cld
sbb
push
sti
mov
pop
orb
push
testl
push
scas
stos
shr
sti
test
pop
xchg
divl
mov
push
mov
cmc
adc
sahf
mov
das
lahf
xchg
xchg
pop
inc
mov
stos
or
push
mov
rorb
sbb
mov
leave
imul
fwait
push
ja
andl
adc
or
and
and
adcl
and
inc
jl
sub
lds
push
and
dec
adc
or
add
sbb
sbb
movl
punpckldq
cmp
cs
cmp
outsb
mov
fs
fwait
jo
arpl
test
imul
mov
gs
jns
fwait
xor
mov
in
push
xor
inc
aam
inc
jns
addl
imul
paddsw
popa
scas
pop
mov
loope
fstps
adc
call
xchg
clc
unpcklps
jae
clc
popa
clc
or
sbb
pusha
cmp
sbb
fwait
cli
int
outsl
xchg
cmp
mov
dec
imul
out
push
pusha
xor
push
ficoml
cmp
imulb
cmp
sti
add
shlb
pop
out
add
das
data16
scas
mov
ja
jb
mov
loope
push
imul
rcll
pop
or
push
lcall
aam
xor
nop
add
and
and
fcomps
fiaddl
xlat
adc
js
ds
jb
push
mov
ret
std
cltd
sbb
sub
ret
repz
lcall
sti
scas
jl
in
dec
xchg
clc
mov
into
dec
jno
lahf
lods
push
int3
fwait
mov
test
shr
and
lret
mov
jp
test
dec
mov
push
adc
cmp
sbb
mov
out
in
or
jmp
lret
mov
in
dec
xor
push
fcmovne
leave
mov
stos
adc
and
ror
xchg
call
cmp
idivb
jmp
sbb
adc
sbb
inc
adc
into
jl
cmp
movsb
iret
inc
stos
push
jg
sub
out
mov
pop
sub
add
pushf
test
mov
adc
xor
and
xor
outsl
lods
and
jl
mov
pop
sub
cmp
dec
jb
cmp
shrl
cmp
pushf
push
cmp
xchg
mov
xorb
adc
mul
xor
nop
ret
fidivl
dec
mov
andl
jo
movsl
xchg
xor
mov
ret
add
test
dec
inc
push
fabs
ret
push
sbb
mov
ror
outsb
fwait
lret
imul
into
push
sub
les
adc
sbb
iret
sbb
mov
sbb
jnp
aad
lock
or
out
out
shrb
sub
sub
adc
pushf
cwtl
xchg
addr16
push
faddl
sub
mov
mov
pop
or
jo
jmp
bound
imul
pushf
je
pop
mov
jg
js
int
je
pushf
sub
imul
and
adc
xchg
sti
add
ret
les
popfw
sub
pop
inc
stos
mov
dec
sub
mov
pop
mov
insb
addr16
ljmp
add
add
jle
clc
push
popf
mov
leave
mov
aad
or
in
movsb
fnstenv
jge
sbb
jns
mov
hlt
xor
ljmp
icebp
es
sub
popf
mov
jno
negl
test
cmp
cld
out
mov
stos
dec
add
aam
mov
arpl
push
bound
mov
popa
loope
addl
mov
push
int3
xor
mov
lahf
jae
dec
mov
jne
jmp
mov
shrl
inc
mov
cmp
daa
hlt
mov
mov
mov
sub
loopne
sbb
mov
jo
ret
jp
mov
clc
pop
mov
xlat
add
sbb
and
movsl
lret
or
push
mov
adc
add
stc
push
xlat
mov
cmpsb
aaa
outsl
push
xor
pop
fcmovnb
fstpt
rcrb
push
sbb
ret
dec
mov
aas
or
or
lea
lret
jmp
inc
jns
int3
sbb
ja
mov
jl
push
das
lahf
push
test
cs
adcb
int
in
je
enter
push
lock
pushf
outsb
mov
add
mov
add
subl
dec
push
pop
negb
das
mov
loopne
sub
shll
pushf
cmp
test
mov
pop
jmp
adc
nop
push
pop
scas
gs
das
push
lret
repz
lret
inc
or
jbe
push
jl
cld
add
push
mov
data16
std
clc
xchg
negb
cmp
in
dec
mov
pop
sbb
int
or
sub
dec
dec
adcl
in
std
mov
movsb
out
sbb
xor
xor
xchg
aad
and
insb
sti
lcall
sub
cwtl
cmp
sbb
je
ss
in
add
xlat
jae
lahf
sub
hlt
test
imul
or
jge
fwait
in
pop
shll
xor
scas
fistpl
aam
lods
cwtl
dec
fst
xor
xchg
sbb
fnstenv
sbb
push
mov
jne
and
popa
je
fstps
cs
mov
dec
add
jmp
addr16
popl
enter
cmp
in
ja
ja
jnp
push
xor
leave
pop
sbb
jno
push
sbb
add
cmp
fstps
dec
add
sti
fbstp
in
xor
push
pop
outsl
mov
fmul
and
inc
clc
xchg
call
pop
or
lea
rcll
into
fxch
sti
add
push
iret
jbe
jb
out
cld
cmc
dec
xchg
leave
in
mov
in
jb
je
jge
mov
add
xor
mov
sbb
mov
pop
sub
inc
push
pop
xchg
shrb
fxch
fdiv
fsubr
mov
jb
xor
mov
mov
and
and
ljmp
xor
xor
xchg
fstps
shr
push
push
aad
mov
aaa
lcall
add
mov
subl
lcall
test
sarl
add
stos
cltd
adc
ficoml
pop
cs
pop
jle
sbb
mov
adcb
pop
stos
mov
mov
sub
sbb
inc
mov
inc
lds
divl
jns
sbb
fnstenv
jmp
push
pop
ficoml
jae
xor
insb
cld
and
ljmp
pop
adc
pushf
or
xchg
xor
faddl
push
loopne
fs
dec
pushf
js
out
sarl
add
and
xor
push
stos
mov
int3
mov
imull
stc
push
js
push
xor
push
ljmp
jl
fcomip
mov
jbe
jae
jl
pop
cltd
aam
fsubl
push
test
mov
loope
fistl
movb
cmp
sbb
mov
stos
xchg
xor
in
loope,pn
jo
ja
fdivrl
sub
mov
mov
bound
push
lahf
leave
inc
sub
mov
mov
xchg
rcll
pop
call
jp
pop
push
ficomps
jae
out
jae
jo
rep
mov
in
xchg
sahf
loope
aad
int
and
jge
mov
sub
mov
jnp
pusha
sbb
mov
lahf
fildll
mov
lahf
or
sub
mov
fs
inc
rol
ljmp
adcb
and
iret
ret
xchg
pop
xchg
xchg
rcrb
add
sub
insl
xchg
stc
sub
cmc
pusha
xorl
jb
pop
mov
in
negl
fidivrs
movsb
xor
mov
and
adc
popl
add
outsl
aad
ret
mov
dec
adc
repnz
mov
sbb
je
repz
sub
ret
pop
inc
sbb
ljmp
mov
stos
and
fstpt
lock
mov
adc
sub
inc
imul
xchg
aad
or
clc
adc
jmp
out
dec
xor
out
rorb
ja
or
daa
or
mov
or
mov
js
fcmovnu
mov
mov
xchg
inc
lods
cld
fists
gs
inc
mov
mov
mov
movsl
jnp
scas
jp
mov
into
sub
dec
shll
pop
call
adc
sbbl
fsubrs
int
adc
clflush
jae
push
cli
ret
pop
xchg
adc
and
pop
repnz
imul
imul
divl
mov
jle
push
pop
sbb
daa
xchg
icebp
push
dec
pop
inc
icebp
sbb
aam
cmpb
repz
mov
clc
dec
push
fsubp
shll
mov
push
repz
xor
rcr
icebp
inc
sbb
add
lret
sar
adc
or
jge
sub
bound
loope
fsubr
sub
iret
pop
nop
inc
or
pop
arpl
xchg
push
lock
and
inc
adc
dec
xlat
gs
in
cli
inc
dec
jne
dec
stos
out
and
aaa
das
pushf
mov
push
pop
mov
jbe
pop
cmp
push
mov
sub
outsl
shlb
or
repnz
mov
outsl
push
fidivl
jle
pop
mov
push
mov
cmp
cmp
inc
mov
adcb
andb
xchg
into
mov
idivl
sbb
adc
push
in
ret
aad
popf
mov
push
jmp
push
or
adc
lock
popf
jae
mov
jbe
push
xorl
fldcw
xchg
xchg
aaa
dec
idiv
ud2
adc
mov
sahf
inc
mov
xchg
call
sahf
pop
add
aad
je
ljmp
ss
fstp
cmp
jmp
xlat
jno
cmpl
mov
icebp
fisubrl
dec
std
inc
mov
data16
scas
daa
inc
in
jl
jnp
adc
xchg
scas
mov
repz
out
xor
lods
fnstcw
jp
mov
and
adcl
repz
pop
xchg
inc
mov
pop
xor
lret
adc
outsl
insb
cs
in
nop
cmp
sub
jno
or
cmpsb
mov
jo
push
pop
pushf
jle
cwtl
jno
popf
cmp
push
adc
mov
ljmp
sti
adc
mov
scas
scas
fucomi
push
fiaddl
xchg
cltd
inc
aad
push
stos
mov
or
or
lret
dec
push
fsubr
adc
cmp
sub
dec
xor
pop
pop
mov
and
sbb
jle
mov
xor
xor
inc
pop
mov
push
push
pop
das
cmpsb
fidivrs
mov
mov
lcall
sti
popa
xchg
pop
cmp
out
xor
cmc
sub
cmp
rcll
push
xor
jno
stos
adc
fsts
out
sbb
mov
sbb
ret
mov
jl
je
clc
fucomi
sub
dec
mov
sbb
mov
push
testb
icebp
mov
paddsb
add
and
or
push
movsb
mov
out
vmaxsd
lea
outsl
scas
or
sub
leave
sarl
inc
and
lds
imul
pop
mov
push
jbe
popa
and
sub
lret
out
adc
sub
jecxz
icebp
pop
sbb
lret
movsl
mov
mov
mov
es
in
adc
or
mov
mov
fildll
pop
jns
shlb
fbstp
jle
pop
pop
jp
jne
pop
sbb
lea
lods
jbe
or
insb
or
cld
and
in
loope
pushf
aad
dec
push
cmp
xor
adc
mov
andb
pop
adc
in
mov
test
sbb
in
inc
dec
scas
popl
xchg
or
cmp
pop
mov
inc
mov
cmp
and
xchg
jge
or
sbb
mov
daa
mov
cld
dec
push
mov
stos
sahf
inc
int3
add
test
push
sbb
pop
cmp
pusha
sub
adc
adc
call
push
xor
dec
inc
add
sub
hlt
enter
adcb
iret
mov
mov
not
jl
fwait
xchg
addl
dec
push
cld
fadds
int3
xchg
sub
aad
lret
jl
daa
push
cs
pop
daa
push
adc
inc
inc
in
outsl
push
dec
cmp
sti
rcr
mov
dec
fldt
xchg
in
mov
adc
int
or
pop
cltd
rorl
lret
cmp
cli
in
adc
sub
mov
dec
xchg
sbb
jno
inc
xchg
fistl
stos
sbbl
mov
outsb
scas
sarl
int3
not
push
lcall
das
add
pop
inc
mov
sbbb
les
popa
pop
and
mov
xchg
mov
in
cmp
mov
sbb
jecxz
gs
fisttps
mov
jp
and
mov
push
dec
push
sub
add
adc
jne
aaa
call
inc
push
stos
stc
popa
xor
pushl
pop
rorl
mov
push
push
loopne
and
cwtl
xchg
sbb
xchg
sbb
xor
rclb
movsb
out
adc
xchg
adc
sub
jnp
xchg
add
ss
and
or
sub
mov
sub
testl
fdivl
adc
cmp
orl
fwait
push
cwtl
and
mov
and
lahf
cmpsb
popf
xor
jecxz
and
ret
stos
divb
repz
lock
std
es
mov
cli
mov
insb
stos
mov
in
rclb
mov
rolb
cs
mov
shll
sub
dec
insl
push
or
fisubl
mov
inc
dec
lahf
adc
jg
jecxz
mov
xchg
sub
movl
int3
les
dec
mov
fs
and
ja
xchg
ds
in
sub
enter
pop
and
std
aas
sbb
xchg
sbb
les
jl
or
ds
hlt
xchg
roll
insb
loop
jnp
sub
gs
aaa
pop
cmp
dec
sub
jo
ja
fnstsw
and
mov
push
sbb
ss
mov
cmpsl
and
push
dec
inc
pop
sarl
fs
add
mov
and
xchg
mov
loope
nop
sub
adc
fcmovnu
iret
push
ret
xor
jg
lret
push
cmp
xchg
inc
xchg
push
dec
movsl
cmp
mov
or
jmp
pop
xlat
dec
out
sub
idivl
fisttps
mov
jns
mov
jb
mov
fcmovne
cltd
scas
stos
stos
xchg
cmp
lock
cmpsb
mov
gs
cmp
subl
cld
fwait
stos
mov
ret
xchg
sbbb
add
push
clc
cltd
cmc
inc
mov
pop
jmp
je
mov
xor
faddl
mov
jge
push
cmp
jns
je
jmp
lds
pop
gs
inc
push
or
mov
xor
aad
int3
popf
jnp
repz
sarl
pop
outsl
push
lahf
cmc
stos
dec
pop
addr16
enter
popf
pop
int3
inc
fldcw
test
or
mov
push
test
in
cmp
stc
das
pop
mov
sar
insl
add
or
mov
xlat
push
movsb
jl
gs
fwait
xchg
xor
fsts
shll
jb
xchg
cmp
xor
test
mov
repnz
call
xchg
lcall
sahf
fildl
ljmp
lret
xor
jge
test
fbstp
stos
pop
cmp
stos
fwait
loope
lcall
pop
outsb
pop
or
pop
cltd
inc
jg
add
int
inc
and
xchg
fnsave
stos
icebp
inc
out
inc
jbe
hlt
dec
pop
in
mov
mov
fldt
repz
lret
and
mov
roll
xlat
jecxz,pt
cmp
lods
push
in
cltd
insl
scas
cmc
sbb
or
or
sahf
ret
jns
test
push
mov
clc
pop
mov
sub
imul
stos
loope
daa
shr
stos
fdivr
imul
and
ror
jge
mov
xchg
xchg
and
push
mov
outsl
mov
inc
ja
inc
hlt
push
into
out
lds
or
leave
sbb
nop
sbb
stos
mov
fwait
jb
pop
roll
and
inc
shr
inc
fst
mov
and
insb
jmp
nop
cmp
push
loop
mov
shrb
pop
and
daa
or
inc
xchg
xor
aam
fsubrs
cmp
shr
aad
sbb
xchg
fs
jge
jle
movsb
jne
and
outsl
enter
lods
push
cld
mov
xor
jo
addr16
cwtl
cmp
push
into
js
mov
orl
add
scas
xchg
adc
sbb
or
test
adc
std
into
mov
jmp
das
xchg
incb
xor
pop
stos
loop
pop
add
jl
mov
div
sbb
mov
cld
xlat
sahf
cmp
cmp
or
rcrl
pop
push
test
xchg
cmp
or
mov
jo
int3
lcall
lods
dec
test
ja
cmp
sbb
rol
out
push
mov
pop
add
jge
sbb
or
jl
testb
imul
xor
and
add
sbb
rcrl
pop
cmc
mov
gs
mov
push
xchg
cmp
out
sbb
mov
inc
fiaddl
jne
push
sub
jl
repz
rcl
js
scas
push
jno
push
je
xchg
insl
push
and
mov
add
cld
mov
xchg
sub
pop
ljmp
cwtl
or
adc
mov
ret
jg
sub
test
jge
leave
mov
adc
adc
fidivl
in
sub
jge
aam
divl
imul
and
pushf
lret
enter
sub
insb
fwait
jp
popf
push
cmp
pop
fisubrl
cltd
cmpb
pop
or
push
aad
inc
daa
bound
in
decb
outsl
push
aas
pop
stos
mov
fsts
call
std
jne
ret
and
cli
fadd
pop
cli
jne
mov
cwtl
adc
mov
stc
filds
mov
cmp
jae
mov
iret
and
and
popf
das
push
insb
movb
pop
xchg
adc
int3
lods
pop
je
hlt
test
mov
mov
cltd
xor
sar
mov
jl
xor
inc
bound
cmp
and
pusha
xchg
sbb
xchg
shlb
cmp
jl
scas
sbb
push
cmpsl
call
outsb
movsb
push
jne
mov
cmpb
pop
out
mov
out
popa
cmp
andb
sahf
lret
test
xchg
pushf
not
push
pop
sub
test
xchg
fstpt
or
mov
pop
jg
mov
scas
xchg
js
mov
arpl
or
subl
scas
add
xor
sti
fldt
imul
jno
lahf
testl
adc
cmp
adc
jge
mov
and
jmp
andl
mov
jb
pop
rolb
xorb
dec
push
sbb
inc
jle
loop
xchg
js
xchg
mov
add
xor
in
lcall
loopne
hlt
orb
or
std
inc
cli
mov
cmp
cltd
cld
sub
shl
xchg
les
jle
and
cmp
dec
jae
jg
das
test
aad
ljmp
push
cltd
movsl
loop
shl
imul
jmp
cmp
mov
out
or
inc
jnp
test
mov
testl
pusha
stos
sahf
int
push
add
jbe
and
test
mov
add
pushf
fisttps
clc
test
test
ficomps
rcrb
dec
mov
enter
pop
xor
cs
cmp
in
andl
add
pop
movsb
cltd
mov
roll
sbb
and
push
fs
adc
jns
mov
push
push
mov
out
mov
dec
dec
lea
hlt
push
xchg
jb
sbb
into
xchg
cmp
enter
push
popf
addl
dec
ror
lds
push
div
loope
scas
scas
loope
aam
sbb
mov
jecxz
andb
mov
mov
outsl
xchg
sahf
insb
inc
es
int
leave
dec
aas
mov
movsl
add
jl
add
mov
add
pop
outsl
mov
mov
into
insl
and
and
lahf
jp
into
inc
std
test
cld
rcrl
jns
sbb
xor
xor
test
xchg
dec
jo
movsl
test
sub
xor
push
ljmp
in
mov
jno
mov
aad
aad
test
jle
or
sti
jns
lret
and
jl
xor
xchg
sub
add
and
cltd
out
jo
mov
icebp
popa
into
jne
stos
sub
push
pop
inc
aaa
push
lea
sahf
in
add
adc
add
mov
hlt
loop
xchg
aaa
and
test
mov
push
setl
insb
inc
fwait
into
cmp
mov
mov
nop
or
insl
mov
ds
pop
mov
inc
mov
pop
xchg
adc
xchg
ficoms
inc
hlt
mov
ja
icebp
cmp
jge
out
and
pop
mov
movsb
in
mov
mov
cmpsb
xor
pop
out
aaa
push
cmp
push
jmp
xor
inc
push
std
inc
inc
cmp
popa
clc
or
out
les
fmul
mov
and
push
sub
xchg
sub
int3
les
loope
das
enter
dec
add
js
cltd
adc
jo
lds
fsubrl
inc
xorb
cmp
loopne
or
lahf
inc
outsl
dec
in
mov
cmp
and
mov
mov
pushf
cmp
xor
xchg
mov
cwtl
inc
dec
add
loopne
int3
insb
sub
test
dec
mov
icebp
ja
dec
rcrl
mov
in
inc
cmc
jge
fimuls
packuswb
xlat
data16
arpl
cmpsl
push
mov
and
movsb
ljmp
push
cld
or
inc
mov
push
adc
mov
push
push
sub
insl
popf
xchg
dec
insl
pop
or
cwtl
mov
add
mov
mov
mov
and
and
sbb
jge
gs
push
pop
fwait
outsl
lret
xchg
add
rorb
push
jecxz
push
xchg
pop
call
jmp
and
into
arpl
cmc
sbb
js
es
into
mov
or
fsubp
mov
inc
push
loope
inc
into
push
ss
mov
xor
into
inc
fs
add
enter
jmp
mov
push
adc
rol
pop
push
add
mov
mov
sub
xor
scas
sbb
mov
or
mov
adc
inc
std
xor
test
inc
pop
and
pop
test
sahf
lret
cmp
loope
in
jl
dec
jmp
jge
add
fadd
test
mov
mov
pop
rorl
mov
repnz
cmpsl
cmp
or
mov
and
dec
or
fisttpl
pop
push
fadds
pop
push
adc
lcall
add
mov
mov
mov
dec
add
inc
enter
adcl
outsb
xchg
xchg
or
mov
adc
pop
js
pop
jp
jg
in
leave
push
sub
cmp
mov
outsl
cli
cmp
xchg
push
pop
pop
mov
sahf
or
ficomps
insl
sub
xchg
ljmp
fs
dec
mov
dec
pop
ret
jb
mov
arpl
rcr
add
fldenv
adc
sub
mov
jmp
mov
sahf
add
push
jns
insl
adcl
js
test
xchg
xor
in
orl
dec
jge
inc
mov
arpl
push
addr16
lahf
das
sub
or
jle
in
mull
jmp
inc
mov
mov
cltd
out
les
lahf
sbb
sub
ret
inc
repz
mov
xchg
outsb
mov
or
push
sub
lret
dec
adc
cmp
je
pop
repnz
stos
push
add
inc
mov
es
outsb
scas
xor
or
xor
xor
add
jmp
mov
lds
push
bound
arpl
mov
mov
jns
cmp
inc
and
add
sub
insb
cmp
add
test
mov
cmpsb
in
movb
lret
inc
cli
mov
daa
ret
lock
mov
negl
or
push
dec
test
fidivrl
ud0
lret
pop
inc
faddl
sbb
xor
out
ds
sbb
mov
sub
mov
rcl
and
loop
jnp
or
add
movsl
mov
lds
lock
sbb
cmc
push
push
jg
add
sbb
fucomi
outsl
cmpsb
cmpsl
cmc
push
hlt
mov
pop
jle
fcoml
pop
inc
mulps
adc
jno
or
dec
jb
pop
pop
dec
sub
push
xor
or
stos
jecxz
jmp
pop
dec
jmp
int3
ja
push
pop
adc
inc
mov
arpl
jbe
adc
sbb
add
sbbb
fcoms
insb
inc
hlt
and
xchg
or
jecxz
test
lret
xchg
notb
jg
cmpl
dec
xor
out
sbb
mov
movsb
int3
imulb
add
xchg
push
pop
jl
xor
inc
nop
popa
leave
fwait
push
jnp
ret
add
push
xor
mov
andb
inc
call
test
shr
push
jle
push
push
dec
stc
aaa
pcmpeqd
movl
icebp
cmpsl
push
cltd
pop
aad
jbe
sub
xchg
je
and
mov
cmpsl
imul
addr16
mov
inc
sub
dec
notl
jb
shlb
xchg
push
pop
and
push
mov
push
sub
add
sub
outsl
aad
test
inc
pop
pop
je
push
jb
mov
sbb
fimull
add
mov
and
dec
jb
push
add
mov
mov
ljmp
inc
push
out
add
mov
mov
sbb
push
or
loopne
inc
push
insb
dec
fs
and
and
fdivp
sti
icebp
insl
mov
bound
in
mov
and
or
aaa
pop
sbb
mov
ds
outsb
lods
leave
shlb
lods
add
mov
cmpsl
stc
xor
mov
addr16
data16
lds
push
lret
ret
ja
hlt
ljmp
jmp
or
pop
dec
inc
xchg
ljmp
ljmp
xchg
push
mov
fcomps
push
jg
jns
xor
and
sub
in
negb
or
clc
or
cs
rcl
pop
mov
xlat
ret
cmp
ffree
cmpsb
aas
ds
loopne
insl
ja
push
stos
hlt
jmp
into
push
loope
add
mov
mov
mov
add
push
lret
mov
dec
fcom
dec
cld
inc
aad
shlb
xchg
xor
clc
sbb
jmp
out
ljmp
ss
add
adc
jo
push
in
push
xor
stc
pop
push
adc
xchg
fimuls
outsl
add
sub
out
pop
es
mov
sahf
in
lock
mov
test
subl
push
inc
repz
js
test
or
shrb
into
jnp
sbb
pop
mov
imul
adc
loope
jbe
dec
in
sub
xor
inc
cmp
divb
addr16
sbb
inc
cmp
mov
aad
mov
or
ja
add
rcr
adc
or
not
push
scas
xchg
xchg
sub
or
inc
adc
add
pop
push
or
loope
iret
ret
test
or
ljmp
call
jle
xchg
push
cwtl
sbb
xchg
xlat
rcrb
mov
cmc
inc
dec
xlat
nop
les
imul
pusha
int3
std
ljmp
xchg
push
push
and
inc
fdivrl
adc
sti
push
rcrl
js
bound
stc
enter
negl
mov
jle
jl
xor
mov
lods
subb
hlt
and
mov
lds
std
sub
in
sub
xchg
cmpsb
sbb
sub
xchg
icebp
xchg
or
jb
push
jl
movsl
scas
or
mov
les
push
lcall
pop
push
lea
inc
icebp
fs
mov
dec
cmpsl
popa
sbb
roll
sub
arpl
testb
imul
es
fstpt
add
push
add
in
mov
jmp
nop
mov
xor
cmp
jp
push
pop
mov
cmp
xchg
sub
or
jmp
loop
scas
xor
das
stc
mov
out
popa
push
push
pop
addl
pop
xchg
mov
sbb
incb
xchg
sbb
popa
mov
dec
mov
xlat
sbb
adc
popl
xor
xchg
adc
and
and
push
push
ja
jge
lock
mov
insl
mov
xor
mov
or
out
fimull
mov
in
stc
and
pop
lret
jl
and
pop
movsl
jp
ds
mov
push
xchg
pop
sub
movsb
mov
mov
or
jl
and
push
loopne
add
pushf
in
dec
mov
and
cs
cmp
ror
mov
scas
mov
int
hlt
js
jge
pop
shl
fimull
jg
test
clc
testb
data16
outsb
cmpsb
jne
add
mov
idivl
ret
dec
sbb
mov
cmp
insb
daa
dec
clc
add
fstps
mov
rolb
out
adc
pop
mov
mov
sub
int
lret
je
sub
xor
sub
clc
aad
call
iret
sahf
and
lcall
and
push
jb
lahf
inc
outsl
mov
or
adc
fistl
enter
inc
add
rorb
adc
iret
pop
in
leave
pusha
clc
aaa
int
clc
cltd
or
movsb
push
pop
mov
dec
xlat
dec
aaa
imulb
es
dec
fcmovbe
lods
cmp
in
add
and
std
or
test
inc
xor
mov
sbb
cmp
sub
add
test
xchg
mov
ds
push
in
shr
sub
pop
xlat
leave
into
cmpsb
mov
icebp
inc
or
arpl
cmp
jno
stos
insb
mov
imul
ret
js
cmp
dec
out
sbb
movsb
ret
loope
xchg
mov
xor
insb
stc
add
lods
in
fucomip
addr16
mov
sub
popa
sahf
rcr
clc
daa
sbb
pop
lret
sub
jbe
into
or
inc
xor
stos
xor
jg
xchg
sbb
xchg
shrl
ret
fwait
xlat
fstps
xor
mov
cmp
fucom
arpl
cmc
cmc
es
nop
cmp
dec
out
push
sbb
cltd
pop
dec
or
aas
loope
aas
punpckhdq
mov
cmp
pop
mov
xchg
pop
loope
cmpsb
sbb
test
jne
pop
jl
add
pop
popa
mov
xchg
mov
insl
xchg
stc
cmpsb
enter
mov
rorl
pop
pop
das
jns
push
cld
jb
dec
sbb
out
repz
psrlq
fsubs
fwait
push
adc
sub
add
xchg
xlat
or
lret
in
mov
in
cmp
iret
cmpsb
ja
xor
fisubrl
arpl
sbb
dec
lcall
rcll
sarl
inc
decl
push
sbb
out
in
testl
into
xchg
inc
jnp
dec
orl
pop
stos
jne
hlt
adc
or
pop
int
imul
mov
push
pop
pop
sbbb
loop
repnz
jnp
into
leave
mov
xor
mov
lcall
add
push
sbb
scas
or
js
lcall
dec
adcl
push
aam
in
in
push
jno
xor
gs
cmpsl
sbb
cmpsb
dec
insl
cwtl
dec
or
stc
cmp
or
jl
shlb
loope
test
scas
add
nop
mov
out
jecxz
bound
into
das
add
std
mov
pop
arpl
insl
xchg
movsb
gs
inc
stos
out
scas
in
mov
ret
aaa
out
cmp
int3
push
lret
test
cmpsb
xchg
dec
add
jle
adc
test
xchg
call
push
fxch
cltd
adc
adcb
testl
cmp
sbbb
mov
mov
lock
scas
lret
stos
add
fsts
jle
mov
mov
adc
and
cli
mov
out
les
sub
fs
test
adc
in
mov
xchg
shl
into
mov
push
inc
xchg
inc
mov
bound
js
das
and
aad
fdivrl
mov
jp
inc
ffree
pop
cli
add
or
push
push
scas
mov
lcall
aad
inc
jg
sbb
sbb
add
sbb
mov
ds
lds
push
idivl
fsubrl
push
aam
movd
adc
or
pop
cltd
jb
scas
push
data16
and
fiaddl
jg
loopne
jns
into
test
in
rcll
push
scas
push
rcrb
into
fildll
mov
sbbl
popf
xor
outsb
push
inc
sbb
enter
mov
add
xor
mov
jp
test
ret
movb
and
jbe
rcll
xchg
lods
xlat
ljmp
xlat
adc
dec
stc
int
rcrb
push
outsb
lret
sbb
push
js
enter
pop
cmpsl
cmpl
or
mov
std
jl
push
test
das
or
fs
push
push
scas
add
xchg
aad
push
inc
das
xor
push
std
push
lahf
xchg
outsb
sbb
movsb
ja
lcall
ljmp
jns
in
movq
xchg
mov
gs
mov
in
and
fwait
inc
sub
js
hlt
imul
and
das
and
sarl
push
dec
lds
pop
popf
fcoms
popa
rorb
push
decb
imul
xor
data16
stos
pop
jg
pop
adc
xchg
cmp
mov
add
lret
js
xlat
adc
xor
jnp
and
outsl
xor
rol
inc
mov
out
push
maskmovq
imull
dec
sbb
dec
sbb
adc
xor
fs
or
sbb
or
sarb
fildll
movsb
test
fs
movsl
mov
aaa
lcall
cli
outsb
dec
xchg
sbb
mov
arpl
xchg
adc
movsb
mov
mov
daa
into
jle
adc
rorb
xor
fdivr
mov
xchg
je
stos
push
cmc
or
in
outsb
out
cwtl
stc
dec
inc
push
xor
push
sbb
nop
iret
sbb
test
clc
std
jle
inc
movsb
cmc
push
into
fnstcw
in
fs
cmp
sbb
sbb
in
cmp
or
mov
cmp
sbb
jmp
jle
mov
es
fwait
sbb
mov
add
scas
out
lahf
fs
repnz
inc
inc
out
sub
cmpsl
lcall
sbb
sbbl
das
es
add
cmp
stc
jo
ret
mov
sbb
stos
xchg
push
sbb
jb
scas
in
pop
and
dec
add
mov
push
out
int3
jb
mov
in
popf
push
mov
jge
xchg
aas
jmp
daa
mov
mov
pop
add
mov
test
lea
lahf
add
mov
fidivs
jo
cmp
push
xchg
jbe
pusha
cmp
xchg
mov
adc
jecxz
inc
dec
xor
xchg
decl
mov
xchg
pop
jb
push
sub
cmp
lea
loopne
inc
dec
dec
add
sbb
push
mov
and
bnd
inc
mov
in
xor
imul
mov
mov
mov
in
pop
lahf
cmp
fst
pandn
cmp
data16
sbb
bound
or
into
gs
jno
jb
xor
push
dec
mov
or
lcall
dec
call
mov
insb
and
imul
mov
negb
push
lcall
cmp
sbb
iret
sbb
mov
int
xchg
popa
push
aaa
adc
add
and
aaa
or
mov
mov
adc
call
or
mov
inc
push
outsb
fcompl
rorl
call
rcll
mov
je
mov
mov
sub
sbb
jecxz
pop
push
dec
xchg
sub
xor
stc
mov
rcrl
setl
inc
in
xchg
cwtl
or
fstl
mov
test
call
jg
cltd
or
cmpsb
pop
dec
push
xor
push
test
mov
push
pop
repz
pop
pop
leave
stos
call
lds
fadds
dec
cmp
test
popa
sub
arpl
fsubs
out
call
push
mov
outsb
std
mov
jbe
and
mov
loopne
stos
pop
fcoms
cltd
or
popa
out
jo
insb
nop
dec
xchg
sub
cmp
fstpl
hlt
pop
popf
pop
fistpll
mov
pushf
cld
test
std
xor
xlat
sub
and
shll
arpl
ret
jp
je
adc
mov
mov
outsb
mov
fldenv
popa
movsb
inc
mov
xchg
repz
inc
sbb
sub
xor
jno
adc
hlt
lods
sete
shlb
mov
push
xchg
stc
inc
rol
or
aam
das
inc
add
int3
mov
xchg
int
sbb
aad
insl
pop
les
mov
jge
or
sbb
cld
fstps
cli
xor
stc
inc
smsw
data16
pop
pop
out
cld
inc
adc
loop
enter
pop
lea
mov
sbb
push
sbb
push
mov
call
pop
pop
sub
adc
dec
mov
jae
cs
insl
add
popa
ljmp
rclb
add
push
mov
sbb
jns
xchg
jb
pop
xchg
sbb
adc
xchg
cmp
push
cltd
and
lods
ljmp
ret
cld
sahf
cmp
ret
mov
int3
mov
cmc
test
jae
jo
xor
cwtl
sbb
or
xchg
ficomps
int
push
fisubl
pop
ja
mov
sub
or
bnd
push
test
mov
inc
movsl
insb
aas
xlat
hlt
push
arpl
call
sbb
pop
and
data16
scas
vrsqrtss
out
xor
repz
in
or
repz
mov
iret
cli
repz
push
stc
loopne
jbe
push
pop
inc
mov
mov
dec
in
mov
dec
sub
mov
sub
pop
add
in
sub
ds
lret
dec
sbb
xchg
xchg
jbe
popf
pop
rcrb
das
inc
mov
jl
inc
pop
and
into
or
adc
int3
xor
dec
push
nop
dec
inc
clc
rolb
sub
mov
cmp
add
mov
xor
cmpsb
jmp
lods
rclb
lret
xchg
inc
mov
mov
in
gs
adcb
out
inc
and
inc
or
fisubs
push
aad
push
sub
inc
push
mov
dec
push
push
jmp
push
dec
fidivrl
sub
inc
test
push
imul
data16
lock
cmpsl
jne
or
rol
hlt
mov
outsl
dec
mov
xorl
push
jecxz
insb
fcmovb
fmul
xchg
inc
hlt
int3
dec
rorl
push
push
jg
dec
stos
mov
pop
bndstx
ljmp
gs
inc
push
rclb
xchg
pop
xor
lret
fcoms
mov
xchg
ja
cs
arpl
dec
sti
mov
ret
pop
pusha
frstor
cmc
sub
loop
push
inc
sub
jns
ljmp
xchg
lock
fidivrs
jns
rcl
and
loop
sub
xchg
fs
xchg
jbe
idivb
and
and
or
scas
jae
inc
inc
cmp
std
cmp
sbb
faddl
xchg
push
xchg
cli
adc
xchg
jb
subl
daa
sarb
std
andl
xor
imul
cmpsb
cs
jmp
outsb
sub
mov
ja
lea
jp
push
sbb
sbb
sub
mov
xor
cmpsl
out
push
or
xor
mov
inc
stos
jns
mov
mov
fs
or
pushl
lcall
es
ret
mov
add
filds
in
sbb
push
addr16
lret
sbb
xchg
cld
xchg
pushf
mov
add
push
pop
jo
xchg
enter
and
and
dec
xor
in
xchg
add
xor
popa
in
mov
adcb
cmpsl
lahf
mov
or
xlat
cmp
sub
xor
sahf
repz
push
jg
add
stc
mov
push
push
negb
inc
dec
js
fsubrl
push
imul
sub
or
pop
add
icebp
insl
jle
and
pop
nop
loopne
inc
pop
and
add
mov
xchg
rcll
addl
xor
and
mov
fisubl
insb
mov
ret
mov
sbb
and
and
dec
xlat
xchg
sti
sahf
mov
or
das
sbb
cmc
in
inc
outsb
pop
pop
and
fwait
pop
push
sbb
push
mov
sub
mov
dec
movsb
test
in
xchg
popf
cmp
loopne
dec
dec
pop
mov
xchg
xor
xchg
adc
call
sub
lret
fwait
sbb
lret
dec
movsl
xchg
jg
aas
inc
cwtl
out
jb
jle
sbbb
cld
pop
stos
sbb
push
dec
jge
addr16
mov
outsb
mov
scas
sub
or
stos
pushl
icebp
pop
push
std
xchg
fs
cmp
xor
jo
dec
cmp
and
pop
loopne
test
sbb
stos
dec
lods
sbb
mov
inc
outsb
rcll
dec
push
xor
imull
bound
push
cwtl
nop
clc
sbbb
fisubrl
aam
jl
xchg
out
in
mov
fcomps
and
xchg
fs
or
add
xchg
dec
sbb
dec
dec
and
fwait
scas
shrb
and
inc
cmp
sub
ss
lcall
movsl
fimull
je
faddl
jle
xchg
mov
addb
sub
jg
aaa
mov
das
popf
sbb
sub
movsl
cmp
iret
inc
mov
cmpsb
int3
inc
outsl
adc
jo
iret
pop
mov
movsl
push
insb
xchg
test
not
adcb
and
fisubl
mov
cmpps
push
es
pop
mov
and
pop
scas
jge
lret
xor
sbb
cmp
jecxz
daa
hlt
arpl
mov
fs
jp
fdivs
jno
lahf
dec
and
push
aad
jp
pushf
sub
mov
fists
sbb
jo
repz
jne
movsb
mov
movsb
loopne
push
sahf
ja
ret
or
jne
adc
pushf
or
addl
outsb
jne
inc
imul
int
push
sub
les
pop
dec
int
or
shlb
or
repnz
push
ds
sbb
jmp
outsl
ret
in
leave
xchg
andb
cmp
push
or
cs
push
pop
and
and
and
in
sbb
lcall
sub
add
lea
mov
lahf
sahf
mov
aam
pop
mov
mov
sarb
mov
pushf
in
fnsave
scas
mov
sbb
mov
dec
pop
or
ds
insl
jnp
loop
mov
push
pop
stc
xor
cmp
aaa
adc
push
mov
dec
cmp
cmpsl
aad
jp
shlb
inc
cmpsb
lds
xor
scas
mov
push
add
dec
test
push
in
push
sub
movsb
sbb
jl
adc
aaa
push
pop
test
outsl
xor
push
push
cs
mov
mov
fiadds
sbb
lock
or
and
rcll
stc
lods
ljmp
ret
test
mov
cld
inc
push
and
jg
lahf
cmc
cmp
adc
jecxz
lret
push
das
sub
ljmp
cmpsb
xchg
or
rol
mov
mov
stos
test
push
aaa
and
into
sbb
xchg
mov
add
loopne
popf
xor
sub
scas
jecxz
mov
sub
pop
mov
enter
jl
rcr
andb
push
jb
mov
in
int
lods
cmp
adc
lods
fsubrs
cmpsb
push
or
jle
shll
movsl
or
jmp
or
dec
popa
sbb
pop
push
mov
outsb
les
lods
or
push
xchg
pusha
insb
repz
or
adc
imul
pushf
mov
daa
inc
fwait
cs
mov
or
lret
sarb
lock
ljmp
jl
adc
lea
iret
sahf
into
orb
and
fwait
aad
jl
mov
xor
pop
fs
sarl
pusha
dec
fs
stc
idiv
cmp
push
mov
jne
mov
loope
jo
cmc
nop
mov
push
pop
lea
arpl
cmp
in
lahf
pushf
xor
xchg
xor
inc
mov
jl
jecxz
lret
mov
ss
cmp
jo
mov
stos
sub
pop
jae
hlt
dec
mov
pop
negl
rclb
ss
inc
shlb
mov
add
aam
sbb
insl
jle
add
pop
gs
hlt
scas
fisttps
call
ret
mov
push
and
loop
ja
popa
mov
idivb
xlat
lock
outsl
das
aaa
adc
popf
push
push
push
jo
je
cmp
mov
add
pushf
xor
sbb
lcall
pop
je
jmp
inc
jg
leave
adc
add
out
out
aad
sbb
add
dec
test
enter
int3
mov
push
cmp
insb
pop
mov
flds
gs
lret
inc
or
xor
dec
fadd
adc
test
inc
imul
sarb
jae
pop
jo
lcall
cmp
ret
mov
int3
aaa
inc
rorb
stc
pop
cld
shrb
out
mov
lahf
inc
lds
or
sbb
data16
adc
dec
aad
aas
pop
adc
arpl
cltd
enter
out
adc
loop
cwtl
dec
testb
test
mov
iret
test
mov
test
mov
sbb
cmp
mov
ljmp
mov
imul
jmp
adc
pop
sub
mov
loope
arpl
in
test
ss
movsb
push
add
xlat
pop
jae
sbb
outsb
inc
cmp
jecxz
add
arpl
or
dec
mov
jg
jno
mov
int
dec
adc
into
cmp
sbb
lods
add
mov
sbb
js
arpl
rcr
or
sarl
rorb
sbb
sar
test
jl
add
jae
loop
mov
pop
mov
ficoms
xor
nop
jmp
jo
ss
scas
jbe
movsl
add
dec
or
addr16
xchg
movsl
das
mov
sti
dec
fsubrl
mov
xor
add
in
mov
mov
repz
jae
mov
addb
and
out
outsb
in
cwtl
cmp
inc
and
lods
and
lock
mov
cld
lcall
pushf
and
insl
dec
out
ja
cwtl
inc
bound
mov
test
ficompl
pop
jns
out
jne
cmp
cmp
mov
and
jno
pop
mov
mov
xchg
int3
test
repnz
das
out
mov
mov
mov
sub
movsb
or
sbb
push
and
movsl
lret
popf
dec
mov
ret
cs
pop
rcrb
mov
jae
xor
stc
ret
mov
xchg
cld
push
mov
jbe
xchg
adc
lods
and
and
jmp
xchg
js
je
pushl
cmp
dec
sti
xor
adc
push
daa
je
flds
call
cmp
fxch
dec
mov
push
pop
icebp
imul
test
aam
das
gs
sbb
adc
ret
aad
andb
mov
mov
sub
mov
popf
mov
adc
mov
mov
inc
enter
call
inc
cmp
outsw
pop
jbe
jo
insb
dec
sub
jg
sbb
cmp
orl
and
mov
or
sarb
mov
sahf
ficomps
pop
into
pop
out
adc
jge
hlt
pop
loopne
jne
in
mov
popf
test
aas
jmp
xchg
addb
es
or
pop
xor
fildl
rcrl
es
and
jbe
fnstenv
ds
add
fnstcw
pop
cmp
fldt
xchg
dec
lea
pop
jecxz
add
jbe
imulb
cmpb
inc
mov
scas
int
xchg
test
mov
pop
jne
dec
js
out
fs
arpl
lods
sbb
push
mov
mov
push
negb
sarl
cmpsb
jns
xchg
cmp
cli
add
jbe
lret
inc
xchg
test
outsb
nop
mov
outsl
pop
xchg
and
popa
addr16
add
push
into
mov
cmp
push
and
dec
fwait
push
adc
stos
adc
sbb
aas
dec
shrl
fs
pop
lahf
cmp
sbb
push
push
testb
add
xchg
xlat
hlt
leave
adc
jbe
movsb
nop
cwtl
cmp
imul
std
mov
mov
push
adc
ror
dec
rcr
jae
loopne
cs
negl
leave
mov
mov
xorb
sarb
sti
jne
xor
in
inc
cmp
adc
mov
or
imul
cmc
xchg
jb
and
fldt
clc
jg
gs
push
pop
cmp
es
scas
and
aam
out
ret
cwtl
sbb
ljmp
stos
jg
inc
pop
ror
push
pop
xor
push
or
mov
test
mov
lret
add
xor
fildl
push
fistl
std
sahf
push
ljmp
aad
sti
cli
test
adc
repz
mov
cmp
jb
mov
das
insb
push
loop
inc
outsl
lcall
scas
dec
push
movsb
adc
adc
jns
xchg
xorl
adc
mov
fisttps
push
outsb
ljmp
sarl
add
sub
sbb
dec
add
lds
stos
icebp
jns
sbb
test
mov
push
jbe
xor
adc
mov
add
cli
xchg
mov
imul
cmp
fwait
push
sub
or
lds
in
xor
adc
add
bound
or
mov
std
call
ljmp
jg
xlat
repz
test
xor
das
outsb
pop
dec
call
rcrl
sub
rol
pop
xchg
or
popf
pusha
pop
incl
sub
ret
leave
js
dec
ffree
cs
ss
and
and
mov
aaa
sbb
jmp
cld
in
push
orl
vaddps
mov
and
mov
cmp
sbb
push
out
mov
xchg
cmp
lahf
push
mov
add
or
loopne
cmp
sbb
ljmp
gs
fwait
icebp
mov
push
test
ljmp
imul
or
xorl
lret
scas
pop
lea
jne
sub
jns
and
mov
or
aam
mov
out
dec
mov
les
arpl
out
bound
std
add
pop
push
mov
lahf
sti
mov
les
fwait
popa
out
mov
sbb
cmpsb
stc
mov
mov
push
arpl
call
mov
sbb
int
dec
pop
mov
xchg
jmpw
sbb
fsubl
xor
xlat
push
fbstp
inc
je
jle
mov
xchg
cmpsb
xchg
xchg
push
repz
mov
shr
cmp
xor
xchg
nop
jl
dec
cmpsb
sarl
pop
push
mov
fisubl
dec
xchg
pop
fwait
ret
dec
les
pop
addb
mov
jne
push
into
add
repz
jge
mov
lds
cmp
mov
addl
cld
das
pop
stos
or
fcmovb
subb
test
xchg
int3
enter
fwait
test
bound
mov
inc
add
ret
aad
testl
jae
sub
cmp
push
imul
ja
hlt
jecxz
fs
decb
or
fisubs
cmpsl
jno
fistpl
push
ljmp
mov
mov
mov
stos
push
test
sub
adc
iret
cs
dec
pop
bound
add
mov
push
jg
into
rcr
loop
pop
out
outsl
lods
mov
cwtl
dec
jb
sub
jne
xor
fcomp
jg
fisubl
mov
cs
dec
mov
dec
stos
js
sbb
stos
jnp
xchg
xor
mov
aaa
push
push
stos
bnd
sub
adc
sbb
sub
ret
sbb
adc
in
sub
aam
jo
pushf
cltd
mov
fs
xor
and
jae
addl
push
add
ds
xor
jbe
or
pop
outsb
shll
mov
lock
cltd
sub
cmpsl
sbb
jns
jbe
sbb
ret
dec
xor
pop
sbb
dec
xor
jmp
push
push
mov
dec
gs
shr
cwtl
adcb
loop
adc
rcl
pop
ja
mov
dec
sarb
pop
ret
das
or
in
in
cmp
inc
inc
mov
psubusb
dec
cmp
arpl
sahf
jae
in
and
and
gs
xchg
push
adc
or
mov
dec
mov
and
sbb
push
inc
js
ja
and
add
mov
lea
ss
xchg
inc
adc
in
clc
mov
cmp
pop
aad
add
sub
pop
clc
cmp
in
dec
adc
mov
and
scas
add
adc
sahf
loopne
sbb
je
cwtl
push
mov
cmp
lret
mov
addr16
outsb
roll
mov
pop
sub
xchg
rorb
bound
sbb
mov
xor
loope
pushf
xchg
add
jbe
pusha
pop
sub
mov
out
mov
mov
sbb
out
cli
mov
std
out
dec
or
fiadds
clc
fistpll
mov
jg
xlat
inc
xor
pop
push
pop
xchg
sbb
in
mov
mov
ds
std
int3
les
inc
xlat
push
xchg
cmp
movsb
mov
mov
popa
mov
adc
push
movsb
xor
or
jecxz
mov
int3
dec
fisubrs
mov
dec
ret
push
cmpsl
mov
pop
pop
bound
arpl
cltd
push
inc
sbb
sahf
or
pop
lock
das
scas
mov
cltd
orb
adc
xchg
popf
into
inc
fists
or
ret
shlb
mov
mov
bound
daa
imul
xchg
cli
push
pop
insl
int3
stos
mov
out
in
inc
sbb
in
inc
mov
popf
cmp
pushf
xor
mov
cld
mov
jp
das
shll
popa
dec
bound
and
cmp
push
cmp
test
loope
mov
out
std
and
or
sbb
jb
xor
xchg
negl
xchg
rcrb
in
lret
push
sub
add
xor
xor
lea
inc
mov
pop
mov
dec
pop
mov
xor
pop
mov
fsub
sub
int3
add
mov
shl
push
repz
movsb
and
scas
lret
jmp
je
mov
pop
xor
sub
or
aas
roll
mov
xchg
mov
xor
and
xor
mov
fsubrl
add
cli
xchg
jecxz
roll
sub
rcr
adc
hlt
bnd
decb
sbb
cmc
test
xchg
imul
dec
lds
ljmp
jne
add
jle
das
int3
mov
pop
imul
and
pop
out
xor
mov
sbb
mov
xlat
pop
xor
icebp
repnz
mov
mov
rcrb
cmp
cltd
je
les
xor
leave
scas
xor
xlat
push
jecxz
loopne
jecxz
jl
addr16
cmpsl
xchg
sbb
rcr
dec
test
insb
stc
push
test
pushf
add
lods
xor
xor
stc
mov
call
ret
andb
loop
jns
mov
sub
push
and
xorl
mov
movsl
lds
popf
mov
adc
ret
sub
cmp
hlt
mov
mov
mov
inc
adc
scas
mov
mov
sbb
int3
inc
mov
pop
mov
stos
aas
cmpl
mull
icebp
add
cltd
ret
jl
aam
fmul
sbb
lret
out
je
jle
xor
lahf
push
mov
int3
cmpl
sbb
push
cmp
int
dec
sbb
bnd
orl
and
sti
xorb
cmp
pop
mov
sub
faddl
test
cmc
sbb
jne
lret
mov
push
dec
jbe
xor
jp
jp
or
inc
xchg
int
int
cmp
xorb
cmp
data16
out
xor
adc
sarl
fcoml
adc
shl
sbb
insl
pop
cmp
enter
pushf
mov
cs
shll
movsb
cmp
scas
iret
mov
pop
jl
fisttpl
jl
sub
fldl
adc
lock
mov
pop
push
rcll
push
jg
and
jne
xlat
test
loop
push
in
scas
aaa
adc
push
xchg
insb
ret
pop
adc
cmpsl
cmp
mov
shlb
xchg
in
cli
inc
add
daa
dec
xor
and
sub
mov
cwtl
sahf
mov
neg
sbb
or
push
sbb
arpl
repnz
js
add
sarl
bound
shlb
cmp
xor
push
xor
out
and
jl
lock
pushf
add
in
mov
sub
lea
push
sarb
inc
and
orb
mov
fcompl
mov
jbe
aam
jbe
xor
sahf
mov
dec
movb
sbb
fwait
lock
movsb
sub
inc
inc
inc
sbb
or
lods
cmp
mov
hlt
adc
ds
loop
jns
dec
xchg
stc
push
iret
xlat
nop
mov
test
jge
push
jns
jnp
jl
xchg
fsubl
aas
mov
pop
jmp
pop
fildl
inc
je
or
mov
and
sbb
lods
mov
jb
les
jg
outsl
lds
jne
mov
cmp
sub
repnz
sub
aas
aad
jne
sub
add
inc
cmpsb
repz
cmp
lea
orb
add
adc
dec
ljmp
or
inc
popa
cmp
sub
jp
int3
cmc
aas
mov
cli
mov
dec
cmp
mov
fnstenv
shll
xchg
repz
into
lea
jecxz
mov
add
cmp
pusha
pop
sbb
mov
out
outsb
out
adc
push
dec
push
xchg
lret
add
out
sahf
inc
fidivs
dec
push
pop
ret
ret
xor
sbb
iret
jle
inc
andl
lods
scas
call
in
btc
sahf
loope
adc
repnz
fldt
and
fldt
pop
cmc
stos
fidivl
dec
adc
cli
fdivl
stos
dec
dec
mov
inc
push
mov
std
call
shll
adc
or
testl
ljmpw
insb
out
test
lahf
hlt
sub
int3
rolb
fisttps
ds
imul
sub
incw
mov
mov
push
pop
push
sub
xchg
xchg
push
shl
and
sub
dec
nop
mov
sub
stc
mov
and
aam
gs
xchg
mov
jns
sar
negl
mov
imul
mov
jae
out
bound
cmp
dec
xchg
sbb
enter
add
add
push
in
mov
mov
mov
inc
cmp
jae
and
loop
cmpsl
add
clc
outsl
xlat
enter
in
inc
cld
push
cmpsb
stos
imul
xor
sbbl
jmp
daa
in
das
es
bound
lahf
bnd
repz
xor
adc
mov
pop
xor
xor
out
mov
repz
cwtl
test
cmpsb
sbb
shrl
lret
hlt
daa
test
and
scas
or
mov
xchg
push
pusha
cmp
sbb
andl
jnp
jns
das
into
lods
mov
adc
shll
lea
mov
xchg
std
ror
cmp
mov
das
arpl
mov
in
lods
push
jp
mov
jns
and
loope
divl
and
mov
push
loopne
ljmp
inc
sti
mov
jp
leave
inc
sbb
ja
aaa
adc
fiaddl
repnz
jno
sub
mov
in
and
loop
loopne
inc
xor
jmp
mov
mul
xchg
and
test
stos
push
mov
mov
dec
mov
in
je
pop
std
push
insb
sub
dec
xchg
xchg
mov
pop
int
or
fldl
add
cmp
gs
xchg
sbb
pop
sbb
push
push
and
js
sarb
xchg
pop
xor
xchg
dec
push
sub
pop
ret
loope
xor
sub
inc
mov
add
xchg
mov
and
fiaddl
mov
xor
mov
cli
sbb
push
arpl
inc
cli
add
daa
mov
fwait
dec
ret
xor
jmp
jg
mov
pusha
das
inc
inc
adc
jp
adc
ja
inc
push
daa
pop
push
mov
sub
jbe
stos
fwait
lds
mov
sbb
test
jecxz
les
dec
mov
shl
into
stos
xchg
mov
push
leave
inc
imul
aad
movsb
in
adc
adc
call
jno
jbe
fmuls
cmp
daa
repnz
div
mov
lods
sub
xchg
outsl
testb
pop
mov
fnsave
ds
cli
xor
in
pop
inc
sbb
frstor
lea
pop
pop
mov
cld
jmp
enter
push
dec
push
les
arpl
cmp
sti
in
sbb
dec
lock
in
sar
mov
das
sbb
aas
add
xchg
call
mulb
xor
popa
filds
js
repnz
icebp
pop
pop
pop
xchg
jmp
pop
or
out
jnp
pop
loope
mov
aaa
sahf
sahf
jne
mov
test
push
or
xchg
in
pop
in
sbb
sbb
cmp
and
aas
notb
ljmp
inc
div
mov
daa
aas
mov
daa
mov
sbb
mov
mov
cmp
ffree
dec
dec
jnp
fsubrl
lret
mul
data16
out
cli
lods
push
or
mov
adc
mov
push
popf
iret
push
xlat
hlt
stc
jae
cmp
outsb
loopne
fmuls
mul
mov
mov
int3
xor
jmp
jg
add
mov
call
pop
pop
ja
insb
stos
fildl
cwtl
fs
sbb
pop
pop
mov
daa
inc
mov
sub
add
inc
imul
ret
or
jo
and
jb
gs
ret
scas
sub
gs
rol
and
xchg
mov
dec
sbb
xchg
cltd
movsl
mov
rorl
adc
test
rcll
mov
push
push
in
mov
or
pop
scas
pushf
sahf
mov
sbb
xchg
dec
mov
jecxz
sarl
ljmp
mov
inc
insl
mov
dec
insb
mov
mov
mov
and
test
add
or
sub
cmp
mov
repnz
bound
nop
fbld
es
pop
mov
scas
push
ljmp
xor
std
mov
int
dec
inc
jne
out
cli
and
cmp
fimuls
daa
and
mov
int
adc
xor
fcmovnb
fdivs
data16
ljmp
xor
xchg
mov
jp
aad
jle
pop
bound
fs
loope
out
lods
jge
sbb
mov
dec
sbb
sub
ljmp
hlt
loopne
mov
lea
movsl
lea
popf
inc
sub
fldt
jmp
lods
daa
sbb
add
push
cld
arpl
sbb
ficompl
push
xlat
and
lock
xor
mov
out
scas
sbb
in
loop
xchg
insb
jno
cmp
sbb
cld
scas
dec
or
testl
dec
pushf
mov
or
lret
insl
add
sub
es
jp
por
inc
push
lcall
xchg
xor
adc
lock
sbb
mov
or
std
jae
push
jnp
ret
fwait
aaa
push
repnz
and
cmp
jbe
in
cltd
cld
scas
loop
dec
sbb
xchg
pop
dec
xchg
test
xchg
or
or
out
gs
mov
mov
xor
fistl
xor
cmp
data16
mov
inc
int
test
dec
rorl
test
pop
fsub
sub
sub
into
sub
hlt
test
dec
in
call
cmp
jo
sub
gs
fcom
lods
push
jae
stos
movq
fists
add
sahf
mov
pop
push
rorl
scas
mov
aam
test
std
mov
xor
int
and
pop
fwait
in
xor
fildll
push
mov
stc
jno
jecxz
imul
push
sbbl
or
sbb
shlb
sub
dec
cmp
xchg
sarb
pop
xchg
and
add
and
cmpl
in
movsl
shlb
cmp
lret
dec
fwait
and
inc
dec
mov
jge
popf
push
push
xchg
add
pop
and
cltd
std
js
bound
nop
pop
popa
jbe
ds
mov
adc
add
test
lahf
fcoms
lahf
cmpsb
adc
pshufw
or
pop
dec
pop
adc
mov
or
sub
loope
xor
jns
imull
bound
das
mov
in
lea
neg
pop
adc
mov
movsb
sub
out
mov
test
rcr
jno
outsb
data16
adc
cld
push
lods
into
jo
test
in
nop
pop
aam
out
mov
add
xor
push
js
jne
loopne
mov
and
cmp
sbb
jecxz
insb
mov
sarb
pop
xor
mov
arpl
push
xor
mov
xchg
es
sbb
mov
int3
fwait
jg
ljmp
dec
mov
sti
repz
mov
repz
test
and
inc
mov
dec
ljmp
mov
cli
add
pop
mov
mov
xor
in
in
outsb
rcrb
push
or
sbb
add
mov
repz
xor
xor
popf
adc
jg
jns
add
push
ja
lea
ffreep
add
shll
xor
loop
adc
push
outsl
cmp
mov
xchg
pusha
mov
dec
mov
cmp
push
mov
shll
fcoms
mov
push
lea
stos
jg
mov
lods
lods
scas
mov
or
xchg
jb
inc
insb
pop
cmp
push
and
mov
dec
add
pusha
out
into
lahf
imul
inc
mov
sbb
andl
insl
inc
jle
add
pushf
andl
jmp
shll
or
sbb
dec
push
dec
sub
add
sarl
xchg
push
movsl
cmpsb
out
xchg
and
pusha
fcomps
dec
jecxz
call
js
or
arpl
stos
xchg
xchg
enter
dec
sub
push
fists
dec
ret
and
imul
push
inc
adc
leave
loopne
mov
mov
addr16
test
insl
cmpsl
arpl
mov
add
xlat
push
xchg
sahf
movsb
cmc
lretw
xlat
js
in
cs
or
xchg
aad
cli
imul
dec
into
movsb
or
cli
adc
push
mov
cld
ss
mov
mov
inc
sub
cwtl
das
stos
pushf
icebp
add
inc
and
jmp
adc
mov
mov
jno
cmpsb
es
jo
repnz
or
cmp
bound
ja
stos
js
dec
add
adc
cmc
inc
pusha
iret
test
push
test
add
cmp
dec
or
pop
lds
and
scas
lret
xchg
sub
pop
mov
add
and
xchg
out
pop
into
xchg
sbb
lea
pop
mov
dec
xlat
sbbb
dec
cmp
dec
jae
pop
mov
pusha
and
ja
aad
mov
sbbb
in
out
in
ds
inc
jmp
jl
xorl
icebp
ss
add
add
lret
pop
push
push
cmp
push
and
jne
inc
jae
add
sahf
ds
adc
adc
dec
fwait
pop
loope
mov
push
cld
mov
pusha
cmp
sbb
std
push
ja
aad
inc
jno
scas
frstor
cmp
dec
popf
scas
jae
jecxz
mov
mov
mov
adc
mov
fnop
lcall
les
cmp
push
loopne
pop
ss
dec
pop
jmp
sub
pop
mov
mov
stos
jb
pop
lea
pop
push
in
jge
movsb
pop
cmpsb
sbb
mov
adc
cmp
cld
jge
pusha
fcompl
nop
pop
pop
into
clc
inc
sbb
cmp
ds
mov
out
pop
jmp
jno
mov
lahf
mov
jne
jae
fcmovb
xor
push
or
sub
adc
les
fcos
push
jmp
lret
aaa
xchg
fs
es
sbb
or
cmp
cmp
push
dec
iret
lods
pop
pop
pushf
cmpsl
aaa
test
lahf
add
dec
jge
xchg
inc
and
jne
js
pushf
fcomi
dec
insl
stc
sbb
mov
mov
push
xor
fcmovnu
inc
inc
pop
xor
mov
xchg
loopne
dec
int
cmp
fidivs
push
inc
rorl
pop
fs
mov
sti
sub
dec
xor
jb
jo
mov
cld
jb
cs
mov
push
push
jle
mov
adc
mov
jno
xor
test
jo
and
push
add
ljmp
out
hlt
or
ret
mov
leave
fs
cmp
lods
lcall
cmp
and
inc
add
arpl
jnp
pop
shll
pop
inc
leave
cwtl
icebp
jl
sub
xor
shlb
scas
cmpsb
aas
mov
adc
out
mov
incb
leave
lcall
pop
addr16
pop
repz
loope
push
iret
mov
push
jge
les
pop
sub
fsubl
sahf
push
aad
xchg
fidivl
jbe
mov
inc
push
in
mov
mov
bound
dec
xchg
arpl
mov
jnp
and
shlb
outsl
inc
lds
pop
push
push
cmc
mov
dec
rcrb
mov
outsl
xchg
or
xlat
loop
inc
andl
lds
jmp
insb
push
mov
std
fcomi
stc
and
add
lds
pop
pop
enter
testl
inc
cmp
scas
lahf
sub
daa
and
mov
fisubrs
fisttpll
dec
cmp
fwait
test
mov
pop
sub
xor
pushf
sahf
pop
inc
mov
aaa
xor
xor
notl
mov
mov
adc
hlt
iret
jmp
and
adc
pop
lcall
and
std
std
push
mov
addr16
sbb
pusha
jp
pop
adc
mov
mov
in
jle
xchg
outsb
jae
cmp
add
ss
xchg
ds
mov
jp
add
xor
jae
adc
jns
aam
popa
push
jp
arpl
es
or
jne
cmp
cmp
add
clc
in
fidivs
push
aaa
mov
xorl
sub
jnp
mov
into
inc
gs
mov
imul
imul
inc
enter
push
lods
sub
fmull
add
and
jno
adc
iret
mov
bnd
sti
sub
jp
mov
mov
iret
mov
mov
into
mov
loop
negl
scas
or
sbb
pop
and
mov
cmpsb
pop
out
les
aad
getsec
xchg
movsb
rorl
leave
inc
add
js
add
xor
pop
add
mulb
mov
adc
adc
orb
push
js
repz
lahf
addr16
mov
jo
test
icebp
sub
das
ja
inc
mov
int3
fistl
ss
nop
add
imul
inc
aad
xchg
mov
test
mov
sub
jmp
jge
sahf
jecxz
jne
das
dec
push
pushf
shlb
aaa
mov
cmp
mov
push
testb
xchg
jmp
mov
andb
or
and
mov
pop
jmp
or
divl
mov
roll
or
inc
jo
pop
push
jbe
mov
and
fwait
fs
ror
pop
adc
popa
pop
sub
mov
scas
xchg
mov
lret
or
stos
mov
insb
fs
test
xor
test
je
inc
jmp
imul
in
pop
mov
xchg
add
in
test
mov
sub
pop
pop
test
pop
cmpl
mov
pop
rorl
inc
out
dec
arpl
jnp
or
imul
andl
xchg
mov
shll
push
jle
or
and
mov
pop
insb
cli
push
je
data16
adc
cmp
lods
mov
sbb
add
adc
ret
sbb
repnz
test
mov
pop
xor
push
dec
orl
sahf
cmp
jb
add
inc
and
outsl
and
ficomps
cld
sub
fcoms
insb
cmpsl
sub
lahf
das
adc
add
jno
repz
push
mov
inc
push
add
xchg
stos
xor
inc
sbb
and
adc
in
mov
enter
popa
jg
xor
xchg
adc
fs
pop
mov
es
clc
icebp
dec
pop
out
pop
lock
adc
fcompl
mov
add
cmp
out
jno
dec
adc
xchg
movl
mov
mov
cli
ret
jp
mov
bound
push
jp
lret
inc
je
push
enter
pop
push
adc
aas
arpl
xor
aam
aam
mov
jne
push
fisttpll
popf
stc
mov
jg
adc
pop
xchg
jo
mov
xchg
inc
out
stos
sbb
cmp
nop
mov
sub
xchg
lea
enter
and
popf
ror
fnsave
dec
push
lock
mov
mov
test
push
mov
daa
int3
add
push
fbld
fsubp
jle
jmp
cwtl
clc
repz
jmp
or
add
push
mov
xlat
adc
pop
jmp
ret
pushf
icebp
mov
stc
add
mov
mov
fdivrl
cmp
add
sbb
test
or
in
cli
adc
pop
stos
out
xchg
sub
in
add
jge
mov
ret
sub
iretw
add
scas
jl
xchg
movsb
inc
xchg
addr16
cmp
bound
sbb
and
insl
push
xchg
mov
push
shrb
mov
pushf
xchg
pop
hlt
cli
stos
cmp
and
push
sbb
jae
mov
add
in
fwait
lcall
int
inc
xlat
subl
leave
pop
sbb
cs
icebp
fxch
push
jle
xor
sti
pop
mov
jne
xor
in
pop
xor
and
insl
sub
imul
pop
addr16
je
jns
sarb
jno
mov
mov
xchg
xlat
xor
mov
into
movb
inc
imul
push
test
dec
push
mov
or
push
jnp
push
and
out
mov
sbb
ret
cs
test
mov
sti
in
jbe
push
inc
mov
out
xchg
lds
mov
lcall
lret
push
cmp
xor
sub
out
sar
out
in
cmp
jns
mov
mov
dec
xchg
int
roll
or
sub
mov
adc
mov
subl
iret
cmp
jle
mov
adc
sbb
pop
adc
and
cmp
fildll
out
bound
out
mov
pop
dec
test
cmp
and
pop
int3
dec
in
pusha
ret
jl
std
test
in
addr16
push
movsl
sub
fwait
fs
fidivrs
pop
dec
insl
jne
inc
and
out
jae
test
mov
shrl
aaa
enter
mov
mov
fsts
ja
mov
push
pop
pop
sahf
xchg
aad
jae
jo
gs
jne
mov
mov
ljmp
dec
test
jp
jl
movsl
sub
or
cld
rcrl
int
roll
daa
inc
lret
xchg
stc
push
pop
sbb
pusha
and
xlat
sbb
es
sub
loop
and
mov
mov
adc
jne
cmp
je
std
xchg
jmp
scas
pop
aam
mov
out
dec
fsubr
push
daa
mov
insl
test
loopne
jmp
cmp
in
mov
ljmp
add
push
loop
in
xor
add
pop
lret
pop
das
cltd
stc
pop
jbe
or
mov
je
jae
push
pop
mov
lret
push
addr16
and
jmp
mov
mov
push
aam
sbb
inc
iret
scas
shl
inc
xor
and
sub
stc
xchg
xor
lds
push
leave
cmp
das
mov
or
iret
cltd
xchg
jge
test
xchg
das
cmp
mov
cltd
fsubr
out
loop
cld
stos
inc
adc
pushf
subb
dec
test
sbb
addr16
aaa
sub
xor
sub
jecxz
shlb
mov
fdivrp
mov
imulb
mov
mov
mov
or
iret
ljmp
das
jecxz
xor
lahf
cltd
cmp
pop
add
cmp
jle
mov
inc
cmp
mov
jg
push
ljmp
jp
insl
das
push
sbb
push
inc
push
mov
xor
jnp
enter
xchg
outsl
mov
add
mov
mov
xchg
test
mov
cmpsl
cmp
adc
out
into
sub
jo
push
mov
es
cmc
sub
dec
je
dec
jno
sbb
pop
push
sub
outsl
addb
sub
in
out
sub
loope
pop
adc
test
jge
cmp
test
xlat
cld
cs
iret
inc
enter
adc
imul
test
mov
pushfw
ret
pop
cmp
test
mov
ret
dec
jp
mov
ficompl
or
or
cltd
or
push
bound
lea
enter
mov
pop
movsl
add
inc
fdivl
adc
rolb
out
and
pusha
les
add
inc
cltd
frndint
sti
push
adc
clc
pop
out
fnsave
cld
inc
pop
pop
bound
dec
jg
arpl
cmpsb
data16
loope
outsb
push
push
add
mov
fcmove
aaa
xlat
dec
cwtl
ljmp
sbb
ret
bound
mov
ss
es
mov
inc
in
dec
push
jle
and
test
and
mov
fbstp
adc
push
pop
cmp
or
cmp
popf
xchg
inc
xchg
cmpsl
shrb
sub
notb
cmp
push
jecxz
rorb
insl
div
jnp
add
sahf
nop
cmpsl
leave
in
testl
push
mov
inc
jmp
int
rclb
lock
or
js
outsb
xchg
rcrb
mov
icebp
clc
mov
inc
test
adc
sbb
jne
inc
es
shlb
int
outsl
xchg
add
push
lods
loopne
fsubs
jge
fwait
addb
and
inc
testl
imul
adc
mov
sbb
fwait
int3
arpl
push
rclb
sbb
jo
dec
or
mov
mov
xchg
and
push
lea
movsb
mov
popl
setge
sbb
mov
call
movsl
ds
add
out
ljmp
mov
popa
mov
adc
cltd
ftst
push
out
or
lea
and
sub
ljmp
add
out
test
in
and
nop
repz
mov
and
addr16
or
mov
mov
or
fstp
push
jnp
mov
or
jmp
mov
dec
push
test
pop
int
inc
je
movsb
bswap
xor
cmp
xchg
cltd
add
and
cmp
enter
outsb
cmc
push
or
inc
lret
addr16
sbb
movsb
xchg
dec
add
inc
iret
mov
mov
push
push
push
dec
inc
mov
fldcw
xor
push
xchg
cltd
mov
clc
jle
aaa
mov
mov
push
cmpsb
in
data16
fwait
xor
pop
add
outsb
cld
stos
cmp
sub
adc
inc
outsl
adc
add
mov
lea
dec
sub
xor
fwait
sub
xor
inc
daa
push
xchg
sbb
xchg
subl
int
test
shrd
pop
mov
fldcw
mov
mov
cld
push
or
daa
dec
ret
out
pop
push
adc
jmp
leave
addr16
pushf
ds
mov
inc
aas
xor
pop
cmp
ljmp
xchg
pop
decl
or
pushf
ret
mov
scas
outsl
inc
addr16
cmpsl
xor
mov
mov
test
inc
fisubrs
in
shrb
fiaddl
repnz
ss
dec
mov
mov
jmp
push
rol
jno
xor
inc
int
pop
mov
ret
test
or
and
out
aaa
xchg
sub
fmul
clc
test
int3
mov
out
pop
pop
loop
add
dec
xchg
or
xor
mov
js
sbb
add
dec
mov
lods
adc
xchg
cmpsl
mov
mov
inc
cmp
jp
or
mov
mov
imul
lds
fxch
mov
xchg
clc
xchg
bound
mov
jb
mov
mov
jecxz
aam
mov
mov
xchg
inc
jmp
test
dec
cmpl
push
loop
pop
insb
rorb
push
repz
aad
jmp
roll
jnp
ficompl
nop
sbb
je
jge
movsl
hlt
inc
mov
xlat
and
push
sarl
push
sbb
cld
dec
mov
push
mov
int
call
data16
adc
sub
cmc
and
xchg
jg
xchg
jecxz
aaa
inc
pop
arpl
xlat
jle
ljmp
icebp
jae
mov
mov
lds
and
arpl
mov
lods
je
pop
fimull
hlt
fisubrl
jl
jle
stc
add
pop
cmp
mov
movb
cmpsb
add
push
aam
call
push
ret
testl
xchg
add
icebp
daa
cmpsl
fldl
inc
xor
pushf
push
jp
ds
adc
dec
js
xchg
shlb
xchg
push
insb
xchg
shr
inc
pop
pop
adc
cmp
pop
adc
push
pushf
push
dec
adc
adc
aad
add
push
mov
cmpsl
sbb
push
int3
ja
push
shl
fdivl
cmp
int
out
stos
cmp
nop
dec
incl
std
or
push
adc
dec
or
in
aad
xchg
int
aam
faddl
sti
test
push
adc
aaa
dec
rcrb
add
stc
inc
pop
and
sarb
add
dec
mov
mov
push
enter
sub
mov
xchg
test
sbb
cmpsl
push
fisubs
mov
les
sbb
pop
lcall
mov
pop
mov
inc
rcll
xor
and
adc
inc
loop
and
lock
mov
test
push
out
inc
mov
xchg
sub
movsl
fisttps
sbb
and
sub
pop
push
mov
int
dec
push
cmpsl
sub
jecxz
and
inc
and
mov
lret
neg
mov
cwtl
cmp
pop
add
mov
xchg
dec
lar
sbb
ret
push
dec
or
cmpb
js
sbb
adc
ds
push
sarl
xchg
or
cltd
sub
call
push
test
aad
cmp
push
jnp
fnstsw
jb
dec
pop
fcmove
sti
add
mov
mov
add
and
mov
mov
fsubrl
cli
and
daa
cmp
mov
and
fcompl
mov
insb
mov
sbb
out
and
sti
xchg
xor
inc
adc
pop
clc
imul
adcl
scas
dec
sub
cmp
movsb
je
push
movsl
std
insb
out
push
in
cmp
or
xor
or
insl
out
dec
mov
out
jne
fisttpl
lds
mov
push
movsl
inc
inc
lock
pusha
insl
mov
jge
sahf
mov
inc
faddp
ja
aad
pop
sbb
mov
in
scas
outsl
or
mov
cmc
pop
pop
jnp
sbb
jp
stc
mov
mov
xchg
fstl
push
rolb
jno
jo
movsb
adc
xor
jle
add
pushf
lcall
popa
dec
mov
ss
dec
les
adc
dec
into
sbb
add
push
incb
aas
stos
jae
repz
mov
js
add
inc
dec
outsb
sub
scas
leave
sub
cmc
mov
test
inc
cld
aas
xlat
pop
jns
xchg
and
sbb
adc
jnp
push
or
sub
dec
inc
cmp
imul
std
insl
lock
xchg
or
mov
not
in
les
es
addr16
mov
dec
mov
sbb
xchg
xchg
mov
sub
aas
jg
cmpsb
dec
fcoml
sahf
sbb
int3
loope
andl
xor
test
or
or
fmuls
cwtl
and
mov
and
daa
dec
movhps
xchg
mov
lods
mov
pop
into
loop
jo
movsl
subb
push
divl
repz
fcomi
lods
mov
sarb
bnd
and
dec
xor
std
xchg
push
xor
lcall
mov
jb
shll
fucomp
adc
mov
mov
orb
or
xor
jmp
push
inc
sbb
xlat
push
or
jmp
add
divl
and
lcall
add
or
lret
in
or
inc
jge
cwtl
inc
shlb
adc
aas
and
subl
inc
in
inc
pusha
cmp
xorb
jmp
mov
jmp
xor
iret
mov
test
mov
pop
adc
stos
mov
mov
inc
sub
loop
in
pop
daa
or
ficoml
pop
insb
std
jnp
fcmove
inc
leave
sbb
fwait
xor
xlat
push
pop
adc
shll
cmp
dec
or
jo
ja
fstl
jecxz
in
or
xlat
je
xchg
mov
xor
mov
lcall
dec
lds
lds
repnz
jmp
inc
jmp
mov
sub
mov
pop
fisubs
fwait
mov
test
or
fmuls
fcomps
add
push
dec
xchg
and
or
pop
insl
add
iret
daa
mov
or
sbb
dec
adc
sahf
test
in
mov
jno
es
cs
dec
ret
sub
loopne
cwtl
test
pusha
in
jg
arpl
push
xchg
mov
das
ss
leave
pop
and
jecxz
jns
xchg
dec
adc
mov
addb
jns
movb
xchg
enter
pop
dec
dec
dec
js
mov
cltd
int
js
sbb
out
adc
ja
mov
ljmp
adc
out
xchg
sub
mov
cmp
je
push
adc
mov
pushf
inc
jae
out
inc
sarb
addl
mov
mov
popl
out
lret
add
sbb
enter
lods
loope
push
daa
mov
xor
fidivl
and
dec
mul
pop
pop
push
sub
xchg
mov
mov
in
mov
or
aam
push
ret
shl
dec
fwait
insl
stc
pop
pushf
lds
xchg
movsl
fwait
sti
cmpsl
jno
stos
adc
xchg
lock
roll
outsl
sbb
fisubl
dec
fldenv
sahf
andl
or
xor
gs
jl
cmc
mov
adc
call
push
xchg
outsb
push
xchg
sbb
xchg
push
push
adc
pop
and
mov
xor
push
inc
or
mov
push
in
gs
jp
bound
jne
jle
insb
push
inc
inc
lahf
jle
hlt
dec
ret
loopne
or
mov
ja
js
xchg
rcrl
enter
imul
or
fs
lahf
inc
lock
xor
and
cs
in
mov
xor
push
out
in
pop
push
fwait
jmp
inc
pop
dec
or
lret
insb
aam
xchg
adc
popl
lahf
sub
xchg
jmp
or
cld
test
jae
clc
sbb
and
push
xor
inc
cmp
pop
fldt
sub
push
sbb
out
xchg
and
shlb
cmpsb
jmp
lcall
ss
push
out
mov
popf
xchg
inc
iret
dec
cwtl
cmpsb
repz
dec
test
sub
insb
rcl
inc
push
movsb
sbb
movl
iret
adc
in
aas
dec
push
sbb
rcrl
aaa
fnsave
cmp
js
lds
lret
fstpt
cs
popa
xor
rcll
lcall
sub
and
mov
sarl
cmp
jle
inc
ds
sbb
xlat
sbb
ss
mov
dec
and
scas
or
xor
mov
stos
dec
add
stos
mov
pop
popa
xor
push
inc
pop
sarb
jmp
add
pop
inc
stc
mov
mov
cmp
xchg
loope
arpl
xor
pop
jmp
or
push
mov
aas
daa
cmp
repz
pop
mov
pop
xchg
mov
inc
push
pop
lea
mov
sbb
sub
mov
xchg
loopne
mov
loope
pop
jle
and
into
lret
out
xorb
outsb
in
jns
mov
mov
addr16
pop
rcl
fldt
insb
pop
sbb
push
cwtl
jmp
lret
fistpl
mov
mov
push
sbb
push
dec
inc
jg
cmp
inc
push
inc
inc
mov
dec
arpl
aas
sbb
dec
adc
jnp
loope
adc
loope
or
mov
mov
addr16
push
add
scas
in
ret
shlb
sub
pushaw
dec
data16
movsl
mov
fisubrl
sub
jns
cmp
fistl
lds
js
rcrb
mov
ret
or
lods
das
roll
ss
or
movl
or
push
xor
xor
pop
sti
shl
das
jmp
das
insl
jle
xchg
xchg
repnz
cwtl
cmpsl
test
mov
jb
jmp
dec
mov
ret
sbb
insb
adc
or
or
pusha
jp
fcmovnb
fdivrs
sub
push
int
mov
stos
les
xor
xchg
jge
cmpsb
cmpsl
and
add
idivl
add
pusha
out
out
pop
push
mov
bound
or
lock
jb
ja
jge
dec
pop
push
mov
dec
xchg
mov
sbb
pop
aaa
add
bound
sbb
fnsave
movsb
aad
mov
nop
loopne
cltd
into
mov
and
inc
in
clc
loopne
mov
jle
xchg
repz
int3
mov
repnz
mov
js
jo
shl
push
imul
incl
push
idiv
dec
gs
stos
outsb
movsl
lret
cmpl
cld
or
cld
or
rcl
push
in
sti
das
inc
mov
xchg
xchg
sub
jge
add
pop
rcrl
xchg
inc
or
lahf
add
leave
mov
cmpsl
jmp
mov
ficoms
in
cmpsl
ret
mov
int
rol
pop
xchg
dec
or
cs
lods
data16
mov
out
ja
add
insb
clc
cmpsb
js
imul
aam
das
repz
iret
data16
mov
sub
xorb
ret
inc
jbe
sbb
ret
pop
mov
push
inc
inc
enter
cmp
cmp
out
lock
popf
lret
push
inc
xor
push
mov
add
pop
int
call
negl
stos
adc
hlt
enter
je
ret
jp
mov
and
fucomip
dec
sub
pop
xchg
xor
inc
mov
in
jl
push
sbb
in
inc
roll
inc
cli
jb
xor
xlat
add
fldcw
or
shrb
mov
sbb
into
or
mov
stos
clc
xchg
pop
std
pop
jmp
dec
loop
sub
ds
pop
mov
mov
xchg
lods
push
jge
push
mov
inc
pop
dec
cltd
pushf
jne
stos
mov
inc
dec
pop
pop
jnp
gs
sbb
arpl
stos
cmpsb
sub
xchg
test
and
jb
sbb
push
cmp
push
jle
fs
arpl
sbb
rol
mov
mov
pop
mull
xchg
fsubs
xor
adc
cmpsl
push
repz
pop
popa
jb
cld
adc
push
inc
mov
enter
out
mov
xchg
pop
xchg
pop
adc
or
mov
int
and
xor
cmp
cmpsl
cmp
pop
sub
xor
mov
mov
mov
ljmp
mov
lret
push
cld
scas
jnp
mov
mov
out
dec
xchg
scas
je
inc
xchg
lods
leave
sub
ss
leave
inc
push
and
in
insb
lcall
xchg
test
movsl
mov
xlat
inc
mov
aam
lock
adc
push
and
adc
cmp
jecxz
mov
test
push
sub
push
dec
lea
add
js
jmp
lret
mov
pop
xor
sub
cmp
cmp
fisubrl
jmp
mov
and
or
cmpsb
pop
lods
dec
test
adc
inc
call
ret
push
inc
mov
pop
int
scas
sbb
outsb
sub
pop
aas
test
stos
test
jmp
fsubrl
scas
push
cmp
xlat
cwtl
xchg
xor
and
enter
cwtl
pop
add
pop
mov
xchg
outsb
push
loope
push
mov
pop
out
imull
fstpt
mov
mov
ss
and
xchg
loop
addr16
hlt
pop
scas
push
pop
int3
push
inc
jns
out
shll
popf
xor
lock
jmp
inc
outsb
jb
cmp
mov
push
pop
sbb
lods
cmp
mov
sbb
js
mov
cmpb
lock
dec
lret
cmc
ret
jmp
pusha
inc
mov
xor
mov
fdivrs
pusha
sbb
inc
lods
xor
test
xor
nop
fwait
test
rcrl
sbb
mov
fwait
jbe
flds
subb
outsl
xor
cmp
fs
pop
sub
clc
sub
mov
pop
call
shlb
mov
jmp
pop
ret
push
test
test
and
fs
mov
jp
jno
sub
popl
pop
push
popf
jo
jge
popa
das
add
and
daa
arpl
mov
adc
and
aas
push
or
add
push
test
fs
ss
call
mov
cmp
aaa
mov
xor
lds
movsb
sub
sbb
mov
repnz
and
and
cmc
sahf
mov
lahf
jl
inc
test
divl
push
or
scas
cmp
imul
mov
cmp
fnstcw
test
lret
stos
mov
mov
inc
std
mov
adcl
scas
sti
test
pushf
push
lahf
fdivrs
stc
popa
mov
xor
mov
stos
cmpsl
or
cltd
mov
xchg
lcall
jmp
push
xor
cmpsl
xchg
imul
int
mov
cmp
fwait
cltd
fdivrs
imul
aad
inc
xchg
xlat
push
mov
cld
xorb
adc
lret
popa
test
mov
shl
cwtl
sbb
dec
sbb
push
stos
push
ja
jo
xchg
push
xor
mov
and
aas
cmpsb
xchg
fisttps
mov
cld
scas
iret
mov
lds
sub
mov
xchg
aas
outsb
out
push
arpl
loop
cmpsb
loopne
and
nop
dec
cmp
roll
sbb
and
std
and
rorl
xor
jnp
cmp
mov
sbb
fstps
pop
sbb
cld
subb
popw
leave
out
xor
mov
repnz
jmp
ret
jae
test
pop
cmpsl
inc
pop
add
clc
pop
sarb
in
mov
divb
ret
xor
pop
sbb
inc
xchg
mov
addl
inc
xchg
in
xchg
in
mov
adc
rcrb
mov
mov
mov
mov
mov
xor
sub
sub
mov
rolb
ret
call
pusha
aam
jg
stos
aaa
mov
mov
push
pop
adc
pushf
mov
push
push
bound
push
repnz
out
ds
jp
std
xor
mov
sub
add
insl
push
push
pop
fidivs
xchg
aam
xchg
int3
inc
push
jnp
inc
test
sbb
mov
pusha
ret
sub
push
loope
or
add
rclb
popa
je
cmc
popf
mov
daa
ljmp
cmp
insb
mov
adc
outsl
sbb
jns
test
jae
sub
cmp
adc
mov
das
repnz
mov
jmp
scas
jecxz
push
mov
inc
fwait
sbb
sub
pop
scas
cltd
push
or
mov
pop
jo
xor
push
jle
xor
rorb
rorb
or
dec
cmpb
lds
test
pop
sbb
cmp
mov
pop
adc
xor
xchg
nop
lods
ja
addr16
pop
lock
sub
jne
in
push
mov
mov
leave
filds
stc
lret
lock
scas
pusha
push
int3
sbb
sbb
mov
cmp
adc
xchg
fisubs
or
std
pop
aam
clc
sbb
sub
outsl
adc
xchg
adc
js
enter
negl
ret
jno
pop
std
lock
daa
jg
fistps
add
sub
pop
fcoml
ret
mov
cmp
dec
addr16
add
mov
sub
pop
lods
test
hlt
fistpl
pop
loope
sub
or
leave
jmp
jmp
mov
cs
or
cmp
jnp
mov
out
mov
dec
mov
mov
int
xor
negl
push
push
and
jb
inc
mov
or
fmuls
jnp
inc
adc
jnp
sub
or
dec
xlat
sub
sar
inc
xchg
mulb
inc
sub
xchg
dec
or
out
fwait
xor
xor
mov
xchg
or
call
ljmp
and
dec
push
lret
adc
das
lahf
mov
pop
call
pushf
cmpsb
not
sbbb
fmulp
sbb
xor
daa
or
push
stc
xor
sub
pop
mov
pop
leave
inc
shll
inc
pushf
js
mov
dec
xor
ret
int
mov
es
sbb
lret
xlat
mov
jo
inc
and
test
test
negb
out
push
shll
push
out
mov
adc
fxtract
aad
pop
in
cs
jmp
xor
movhps
call
out
pop
jb
mov
repz
lock
cld
fs
add
mov
dec
sub
leave
jb
xchg
xchg
test
pop
pop
js
sub
inc
test
je
mov
ret
cwtl
jl
mov
mov
pop
stc
and
sbb
pop
xchg
pop
cmp
jl
push
data16
rorl
es
fisubrl
inc
sub
add
pop
lods
test
frstor
das
adc
mov
adc
mov
ja
xor
add
ja
frstor
outsl
mov
and
push
and
int
push
and
cmpsb
mov
mov
pop
cmp
ret
int3
and
or
mov
push
aaa
fwait
addb
iret
aad
out
cld
sbb
in
inc
jo
stos
push
js
xchg
cmpsl
std
sub
dec
jns
mov
jg
mov
mov
test
sbb
shll
mov
cli
fstps
fadds
cmpsl
repnz
mov
or
imulb
repz
mov
aaa
mov
outsl
lock
mov
mov
dec
mov
sub
shlb
add
xchg
and
dec
cmpsb
loope
xor
xchg
cmp
loopne
flds
mov
or
cli
loope
sub
push
push
popf
xchg
fmull
cmp
pop
jno
stos
xchg
xchg
xor
lods
sbb
ljmp
push
inc
div
xchg
sbb
xchg
fcompl
xlat
les
cmp
jl
xchg
ss
pop
fimuls
xor
ret
insl
enter
filds
inc
fs
sub
in
lcall
imul
mov
sub
insl
and
sbb
leave
adc
cmp
popf
mov
pop
jns
hlt
push
or
xchg
test
sub
xchg
not
dec
cmp
js
ds
pop
cmp
nop
cmp
in
cmp
xor
les
lods
daa
adc
ss
inc
leave
pop
mov
test
mov
xor
jecxz
adc
and
push
fnop
ret
in
jns
cmp
sbb
and
pop
dec
mov
aaa
pop
jecxz
jle
or
adc
or
imul
inc
arpl
push
fcoml
scas
std
mov
imul
jbe
inc
jno
push
add
daa
pusha
push
mov
das
pop
pusha
test
les
ja
sub
pop
cmpsb
xor
push
mov
outsl
lret
inc
xchg
pop
lea
or
test
mov
pop
push
lcall
jns
pop
fisttpl
fists
insb
mov
ljmp
das
imul
and
out
and
mov
cltd
push
aas
cli
xor
out
lods
ret
stos
inc
sub
dec
sbb
push
push
popa
pop
insb
daa
push
lret
pop
scas
sub
cmp
bound
push
stos
jns
dec
or
sbb
shrl
shlb
popa
rcrl
aad
xor
cltd
xor
sub
xor
and
sub
cmp
jb
pop
jb
push
insb
dec
insb
xchg
in
cmp
gs
pushf
inc
shrb
sub
dec
sbb
orb
cmp
rcrb
mov
in
xchg
enter
push
ret
fwait
dec
out
xchg
jo
jo
or
xchg
xlat
test
popf
cmp
ljmp
ljmp
ljmp
lock
mov
push
xchg
push
das
ja
mov
xchg
out
std
cmp
std
inc
jmp
or
sbb
test
ffree
jbe
je
ret
lret
xchg
iret
cs
out
pop
idiv
cmc
lret
inc
xor
stc
and
mov
popa
std
sti
stos
mov
mov
xchg
pop
add
div
lods
mov
fnsave
sub
imul
push
mov
nop
fisttpll
xor
add
xchg
andb
or
pop
cwtl
cwtl
xor
ds
mov
adc
hlt
push
enter
dec
dec
bound
pushf
fisttpl
sbb
pop
pop
mov
and
mov
mov
mov
sarb
xchg
xor
test
ss
arpl
addr16
les
pusha
in
inc
out
pop
out
loope
nop
sub
push
out
sbb
inc
mov
repnz
mov
or
mov
mov
cmpsb
xchg
xchg
mov
popa
lods
jns
xor
cltd
pop
dec
pop
xchg
mov
push
mov
idivb
inc
stc
scas
xlat
pop
or
ret
mov
xchg
insl
sbb
mov
xlat
jp
mov
push
push
ret
cmp
mov
inc
popf
lahf
pushf
mov
jbe
stc
repnz
sbb
jb
incl
fidivs
test
and
cmp
idivb
out
push
pop
ret
loope
sub
mov
cld
in
inc
daa
mov
mov
ficomps
out
add
repz
xchg
leave
popf
fsubrs
add
mov
loopne
mov
and
das
leave
leave
sub
sub
mov
or
iret
out
mov
arpl
sahf
and
jmp
js
mov
xlat
pop
mov
pop
sbb
call
add
jmp
add
fstps
mov
sub
shrl
xchg
lcall
out
sub
mov
and
arpl
push
je
mov
data16
mov
shrl
subl
test
enter
mov
mov
movsl
iret
mov
cmpsl
out
aas
in
leave
dec
jge
jp
test
ficompl
pop
sbb
pop
mov
sahf
pop
rclb
fisttpll
mov
jl
or
cmpsl
push
cmpb
arpl
lods
out
nop
xchg
aaa
repz
adc
scas
inc
mov
mov
add
ja
cmp
jb
enter
sahf
push
dec
push
ss
fimull
push
add
lahf
sbbb
dec
adc
add
xchg
das
add
scas
rorb
jge
sbb
add
mov
pop
mov
mov
lret
mov
ljmp
dec
imul
jne
or
inc
add
mov
add
lds
nop
add
pop
gs
pop
ret
and
or
insl
mov
shl
lods
mov
mov
out
cmp
test
aam
mov
jne
fnsave
faddl
add
jnp
mov
dec
jbe
dec
popl
or
mov
cmc
out
lret
inc
fistl
jnp
cld
les
rcrb
test
imul
popf
pushf
cld
lcall
andb
mov
in
popa
js
xchg
outsl
arpl
pusha
sbb
shrl
adc
cwtl
out
mov
fucom
add
test
jo
test
cwtl
jmp
lcall
enter
cld
cmp
test
icebp
sub
fs
sub
loope
in
mov
idivl
test
cmc
dec
mov
call
sub
es
gs
fs
into
sub
xor
add
inc
imul
cmpsb
sahf
test
pop
aam
sahf
push
fildl
xchg
fwait
adc
pop
jnp
fcomps
mov
addr16
jnp
hlt
sub
push
add
pop
imul
pop
imul
sbb
movsl
mov
xchg
lret
rcrb
rolb
imul
mov
test
les
int3
pop
in
push
pusha
cmp
rcr
sbb
jnp
and
test
jae
loopne
cli
cmpsb
adc
mov
jne
and
into
mov
inc
arpl
push
adc
je
inc
sbb
in
scas
loopne
dec
out
lock
dec
jae
lcall
mov
xor
pop
dec
mov
mov
sbb
push
ror
in
int
imul
jle
or
push
into
test
xchg
loopne
push
xorb
insl
xor
mov
les
stc
xchg
and
pop
out
mov
or
pop
push
mov
add
js
out
mov
ss
testb
ja
sti
push
inc
fimuls
imul
inc
sbb
orl
popa
adc
subl
shlb
jle
bound
mov
jecxz
adc
lds
jg
fistl
insb
mov
add
sti
sub
xchg
jl
lret
sub
outsb
sbb
ds
jp
add
mov
mov
xor
rcrl
sbb
cmp
jge
and
popa
lds
pop
pop
xor
addr16
jne
shlb
cmp
sub
mov
dec
sbb
or
fcoml
or
insb
adc
ror
es
jnp
mov
mov
push
in
pushf
mov
mov
sbb
mov
hlt
sti
adc
pop
or
inc
sbb
adc
cmp
cli
sti
pusha
mov
stos
lea
pop
pop
mov
jp
fidivrs
pop
into
xor
or
dec
imul
in
push
and
adcl
enter
cmp
inc
push
mov
loope
xchg
addr16
mov
imul
outsb
ficompl
ljmp
push
mov
movsl
add
sbb
mov
lods
or
outsb
jmp
insl
gs
aam
dec
dec
roll
xchg
inc
test
dec
adc
stos
xchg
mov
cs
jle
push
and
fwait
sub
jo
cmpl
sbb
mov
mov
add
rclb
addr16
out
inc
pop
fildl
add
bound
and
pop
inc
ret
fistpll
pop
jmp
test
adc
rorl
rcll
pop
adc
pop
mov
mov
push
movb
mov
mov
xchg
pusha
cs
jp
inc
jmp
sub
mov
pop
dec
cmpsb
add
xorb
jg
sbbb
fmul
ljmp
inc
add
scas
not
dec
loope
sub
out
inc
pop
nop
sbb
sbbb
test
rcrb
arpl
cltd
sbb
mov
add
mov
in
sub
or
jmp
das
sub
mov
pushf
fs
int
or
dec
adc
inc
sbb
lods
loop
jge
jo
fisttpll
inc
or
movsl
sbb
negl
ret
imul
mov
mov
lods
popa
push
mov
test
or
cmp
pop
test
mov
sub
cmp
addb
imul
push
dec
xor
or
enter
in
add
push
xchg
fdivrl
pop
inc
inc
lea
mov
in
xor
insl
lea
enter
cwtl
std
push
and
xchg
or
pop
fisubrl
push
jp
testb
aaa
or
mov
ret
mul
cmp
mov
repnz
jno
lret
or
and
jge
mov
out
jg
popf
inc
add
bswap
gs
jle
outsl
adc
push
cltd
stc
cs
je
cmp
out
inc
and
stos
and
in
cmc
xchg
test
push
mov
mov
cltd
or
mov
leave
dec
sbb
sub
lahf
cmp
mov
test
sbb
in
cmc
xchg
lods
icebp
dec
decb
aaa
fcomps
addb
inc
iret
decb
push
xchg
mov
mov
leave
sbb
pop
push
repz
movsl
out
jb
xchg
test
mov
ja
ss
sbb
dec
rorb
add
movsb
mov
xor
pushl
scas
outsb
repnz
popa
push
jb
xor
ljmp
out
mov
jbe
test
push
mov
dec
push
int3
movsb
push
push
xor
add
cld
outsl
jecxz
lea
stc
push
loope
xchg
pop
inc
and
mov
xchg
test
push
mov
sbb
out
cmc
jae
sahf
repz
xchg
aad
cmp
fidivrl
pop
int3
xchg
arpl
mov
xchg
in
sarl
outsb
in
fists
inc
mov
cmc
or
pop
and
push
jnp
xlat
test
out
pop
frstor
jmp
pop
add
add
int
jecxz
mov
aaa
adc
xchg
mov
inc
loopne
push
jmp
iret
push
inc
mov
lahf
mov
cmc
and
orl
shl
mov
adc
insb
mov
or
sub
jnp
mov
jne
inc
and
fidivl
xchg
test
sub
jl
jns
addr16
sbb
mov
imul
dec
dec
test
sub
jg
jo
and
jle
jns
gs
pop
add
stos
xor
fadds
inc
jg
cmp
into
das
inc
flds
jmp
cmp
pop
insl
out
les
sub
sub
fdivrs
push
cwtd
out
lcall
and
sahf
jne
cmpsb
lock
out
es
nop
lcall
cmp
out
pop
xchg
jp
mov
daa
outsb
sbb
loop
jb
insl
jmp
pop
pushf
mov
fisubl
call
in
inc
dec
shrb
cs
sub
dec
pusha
cmp
sbb
and
bound
dec
test
fstps
inc
ret
xor
or
and
outsl
pop
repnz
adc
lock
mov
jb
ja
push
inc
out
repz
add
inc
and
clc
push
jmp
test
sti
and
es
dec
frstor
ljmp
in
outsl
out
push
nop
les
out
es
add
adc
mov
lahf
add
ja
push
imul
imul
sbb
dec
cmp
push
xorl
nop
mov
std
push
cli
gs
aad
aas
push
arpl
insb
sti
ss
cmp
add
jp
daa
mov
dec
aad
insl
push
es
mov
cmp
stos
xor
xor
fiadds
pop
lret
pushf
rcrl
xlat
xor
inc
push
push
mov
jl
mov
rorl
fstpl
jne
lods
call
cmp
or
jg
push
test
and
dec
push
jp
pop
push
cmp
dec
adc
mov
jge
or
jb
cld
mov
cmp
dec
lds
enter
mov
pop
dec
pusha
mov
shufps
aas
test
aaa
ficompl
shlb
cmp
or
sub
lcall
frstor
adc
lret
popf
ret
push
fwait
dec
jno
data16
mov
or
ret
pop
pop
cwtl
mov
mov
dec
xor
mov
adc
xor
fimuls
rcrb
inc
in
stos
or
or
imul
xor
pop
xor
jecxz
mov
bound
je
dec
je
jns
push
imul
scas
fnstenv
fs
push
into
fldcw
mov
clc
out
sbb
loopne
jg
mov
mov
jno
inc
sbb
jg
fnstsw
daa
cld
mov
sbb
pop
shll
nop
mov
xor
out
daa
fstpt
sti
adc
loop
mulb
icebp
pop
pop
or
das
pusha
xchg
test
lea
mov
pop
repnz
test
adc
lods
jno
cli
mov
sbb
jmp
repnz
rcrb
dec
mov
fdiv
dec
dec
jns
cmp
negb
aad
xchg
mov
loope
mov
sub
mov
xchg
notb
push
sbb
pop
mov
iret
sbb
mov
aad
cmp
into
push
mov
and
inc
xor
sahf
stc
jb
pop
std
aad
out
cmp
pop
lods
mov
xchg
sahf
xchg
imul
out
into
popa
push
xchg
stos
pop
rcr
jne
inc
fsubr
in
scas
cmp
mov
ja
push
xchg
mov
mov
mov
leave
mov
nop
jb
xchg
stos
aas
mov
fcoml
in
movsl
dec
int3
pop
pop
aad
jge
pop
cmp
and
xchg
and
filds
jecxz
dec
popa
aaa
iret
insb
out
sub
cmpsb
cmp
scas
mov
rcrb
xor
iret
mov
popa
xchg
pop
int
jmp
gs
push
in
push
sbb
sub
mov
repnz
test
insl
pop
inc
test
daa
jne
push
popa
lock
pop
and
outsl
lea
sbb
iret
ljmp
jl
add
and
roll
out
rcl
dec
loopne
iret
mov
icebp
dec
or
push
addr16
pop
sbb
mov
jb
xlat
inc
scas
and
push
int3
movsb
ljmp
daa
or
in
mov
mov
int3
insb
inc
dec
sarb
sar
or
test
out
test
movsl
lds
inc
rcrl
mov
pop
inc
lcall
nop
aas
jnp
in
add
mov
test
loop
ljmp
addr16
negl
xor
addl
or
inc
lea
adc
stc
jb
insl
adc
xchg
or
cmp
rcll
sub
test
mov
add
sub
ss
or
aas
leave
pop
les
in
lods
imull
loopne
or
fdivrl
xor
mov
mov
iret
cmp
mov
lea
xor
int
pop
mov
cli
cli
ljmp
out
addr16
test
push
and
out
jp
imul
sti
cmp
imul
rep
pop
icebp
in
jns
nop
add
push
jecxz
add
push
cmp
push
sbb
add
stos
mov
mov
mov
adc
fs
adc
arpl
in
pop
out
sbb
fwait
mov
adc
pop
setae
xchg
lods
inc
xchg
dec
repz
mov
jmp
lahf
adc
cld
fwait
or
iret
dec
in
lock
mov
pop
pop
lock
and
movsl
popa
add
push
push
sbb
and
or
inc
ljmp
pop
lea
nop
outsb
sub
invd
inc
pop
fnstsw
outsb
in
popa
mov
add
out
xchg
xchg
mov
cltd
pop
inc
movl
insl
xchg
lahf
dec
xchg
sbb
push
mov
in
xor
rorl
cmp
adc
push
adcb
fwait
pop
gs
fwait
xchg
jmp
mov
orb
dec
mov
sbb
es
pop
jle
xchg
fisttps
icebp
mov
mov
addr16
fmull
out
cltd
sub
outsl
outsb
push
xchg
sbb
movsb
mov
lds
pop
pop
outsl
or
xchg
jl
and
jns
push
hlt
aad
adcb
lods
jae
add
xchg
clc
add
nop
outsb
and
jae
adc
and
ljmp
xlat
mov
dec
mov
jnp
push
roll
dec
pop
xchg
xchg
lods
aas
rcrb
mov
out
lcall
ja
and
sub
jo
adc
fistpl
mov
push
cmp
shll
and
xchg
xor
adc
jge
pop
and
adc
inc
pop
mov
sar
mov
mov
xchg
cld
enter
mov
jno
xchg
dec
mov
mov
xor
in
mov
cltd
adc
sbb
sarb
mov
xchg
fisttps
addr16
ljmp
pop
gs
and
icebp
loope
lahf
cs
xor
out
inc
inc
fistps
mov
das
jne
jns
cmpb
mov
add
add
ds
dec
push
decl
packssdw
cmp
into
jo
test
pop
and
fdivs
mov
xor
neg
mov
aaa
mov
imul
sahf
sub
sub
jns
leave
add
call
insb
das
in
out
inc
cmpsb
je
cmpsb
and
push
sub
adc
rorb
cmp
jno
jmp
inc
nop
stc
subl
inc
sub
mov
cwtl
cmpsl
scas
ljmp
shll
cmp
sub
jle
or
and
push
rclb
pop
and
cmp
or
pop
pop
in
adc
jns
popa
push
push
mov
sub
sub
mov
jge
in
shl
mov
xchg
mov
mov
and
push
repnz
fnstenv
movsb
and
lret
scas
fisttpl
leave
das
cmc
insl
mov
sbb
test
mov
scas
cmpsb
rorl
dec
push
add
mov
enter
pop
cwtl
mov
in
sbb
stc
push
xchg
xor
mov
pop
daa
setg
pop
lahf
xor
add
div
and
and
jb
mov
dec
add
ss
mov
sarb
mov
sahf
scas
xchg
cmp
xor
mov
mov
and
test
pop
fwait
repz
bound
out
add
stos
js
aaa
rcl
stos
dec
das
xchg
adc
popl
ds
pop
add
xlat
ds
cmc
imul
push
jg
mov
in
hlt
orl
repnz
ja
jbe
fs
jae
cmc
and
cld
ffree
xchg
fsts
es
fcmovnbe
sbbb
adc
and
mov
insb
lret
dec
imul
push
jb
in
lods
mov
cld
pop
shl
mov
xchg
mov
lock
lods
push
popf
inc
cmp
loop
cltd
cmp
ficoml
pop
pushf
inc
cmp
test
mov
and
mov
inc
cmp
addr16
cld
in
or
test
dec
sbb
jecxz
adc
pop
iret
into
adc
adc
movsb
mov
pop
push
ds
inc
ss
fs
xlat
sub
push
push
mov
hlt
sbb
add
and
cmpsb
mov
adc
enter
mov
dec
cltd
jle
xor
sub
sbb
jmp
sub
mov
mov
xchg
loop
cmpsb
xchg
out
loop
jmp
out
jns
loope
imul
cmp
ds
popa
les
mov
in
out
js
sbb
xchg
jnp
push
sbb
or
addr16
jae
das
stc
sub
or
test
lods
jecxz
push
data16
in
out
imul
icebp
fidivrl
out
cmp
and
mov
or
pop
hlt
sbb
rorb
js
sub
inc
call
clc
call
mov
fwait
rcr
pop
push
pop
cmp
pop
or
fadd
testb
filds
cmpsl
mov
cltd
sbb
cmp
dec
icebp
lds
in
mov
push
sub
mov
das
push
data16
ret
sub
cs
repnz
in
test
cmpsl
push
rclb
stos
jmp
shlb
imul
adc
and
or
imulb
movsl
loope
mov
xchg
int
xor
inc
sub
negb
jp
ficoms
dec
ret
aad
fsubrl
push
mov
or
movsl
test
cmp
mov
push
ljmp
sub
and
sub
inc
mov
mov
jg
stos
cmp
jb
imul
andl
pop
mov
gs
cmpsb
mov
pushf
aaa
mov
outsb
pop
jge,pn
movsb
repnz
jb
ficomps
stos
or
stc
je
pushf
inc
adcl
pop
pop
stc
lret
cmpsb
out
std
jns
idivb
sti
cltd
jge
xor
jns
pop
add
clc
jecxz
jae
das
mov
or
push
pushl
inc
mov
rclb
fstp
xlat
stos
ss
fnstcw
sub
xor
lahf
inc
nop
pushf
ss
leave
xchg
loop
mov
dec
daa
scas
out
mov
int
sub
je
in
pop
popf
sbb
nop
push
xchg
xchg
jae
push
xor
mov
fdivs
xchg
adc
sarb
and
sub
test
shl
and
mov
loope
pop
out
dec
push
jecxz
mov
test
pop
ljmp
es
add
fucomp
sub
lock
test
xchg
dec
loope
les
das
jl
push
cli
leave
mov
cmp
lock
jmp
les
into
clc
popa
stc
es
mov
out
loop
fidivs
sub
idivb
repz
idivl
mov
dec
pop
adc
mov
ret
in
dec
fmul
sbb
packssdw
arpl
inc
jecxz
push
add
push
aaa
push
aas
loopne
xorl
pushf
sti
pop
ljmp
and
icebp
in
mov
in
xchg
push
adc
ret
in
cwtl
mov
loop
arpl
pop
icebp
lret
dec
mov
adc
cwtl
mov
js
jb
lea
pop
fisubrs
xor
repnz
pop
cmpsb
loop
outsl
fistl
in
lcall
inc
add
inc
mov
pop
lahf
dec
adc
push
aad
xor
into
xchg
xchg
xchg
lret
bound
idivl
ljmp
scas
or
mov
jno
push
mull
mov
lcall
rorl
dec
sub
out
sub
fcoms
dec
jmp
dec
bound
pusha
jns
jno
sbb
aad
aas
bound
mov
and
cwtl
ret
enter
sbb
mov
cld
xchg
cmp
add
mov
lcall
mov
inc
jae
push
inc
ja
outsl
push
stos
sbb
mov
lar
outsl
into
adc
mov
pop
fwait
push
nop
in
pop
inc
movsl
dec
cmc
jl
jnp
rcl
enter
pop
xchg
out
push
bswap
repz
inc
xor
arpl
bnd
and
fldl
enter
test
pop
mov
popa
push
dec
jmp
pop
in
pop
aas
cli
lret
mov
mov
dec
jae
cld
lds
jecxz
pop
and
mov
or
cmp
addl
mov
mov
mov
mov
pop
lds
aas
lret
mov
or
call
push
mov
loop
mov
das
sbb
pop
lahf
hlt
les
dec
std
cmp
and
jge
out
push
movsl
jge
cwtl
call
fwait
push
add
sar
aad
lods
mov
adc
push
int
test
mov
dec
popa
or
mov
inc
ds
out
cmp
push
leave
mov
pop
mov
lock
xchg
iret
or
cmp
les
mov
jg
enter
xor
fiadds
jae
and
cmp
test
fnstenv
les
mov
je
sub
call
pop
pop
cli
and
inc
lcall
xor
dec
inc
cwtl
dec
and
cmp
movl
push
jbe
and
fldcw
sbb
cli
jne
insl
dec
lods
push
fnstcw
mov
jb
hlt
test
cmp
lahf
mov
jne
ljmp
sahf
dec
mov
aaa
cmc
sbb
insb
insb
ffreep
and
fidivrl
dec
out
jp
adc
fsubrs
mov
inc
xchg
mov
pop
or
test
lcall
repnz
jbe
mov
inc
rolb
scas
lea
loopne
jnp
cwtl
mov
gs
mov
popa
sub
call
mov
push
mov
pop
sub
and
adc
mov
and
movsb
je
je
lea
int3
inc
pop
mov
sub
je
pop
jp
fwait
jg
into
cmp
loopne
das
jg
pop
jle
mov
adc
xchg
adc
mov
dec
adc
cmp
dec
leave
cmp
dec
jecxz
scas
inc
inc
sub
int3
popa
out
dec
xor
or
jnp
xchg
mov
mov
stc
dec
or
mov
xchg
dec
sub
arpl
bound
and
xchg
pop
in
das
cmp
ficompl
dec
mov
sub
nop
push
into
lahf
pop
mov
lods
adc
mov
mov
inc
test
cmpsl
je
mov
lret
cmpsb
into
add
inc
repz
or
mov
jmp
mov
inc
sbb
repz
fstpl
push
shll
xrelease
jbe
xor
push
cmp
xchg
cmpsb
js
lock
bound
xchg
cmp
push
add
xchg
push
xchg
push
add
push
mov
pop
arpl
arpl
les
lods
ja
gs
xor
jmp
subb
int3
cmp
pop
mov
dec
lahf
push
daa
jg
arpl
mov
cmp
push
lret
orl
add
mov
push
cmp
mov
mov
es
loope
pusha
mov
cmp
out
pop
jecxz
or
sbb
pop
mov
cmpsb
or
jle
jl
cmpsb
or
jg
adc
mov
orl
stos
repz
xchg
loope
into
xor
mov
into
outsb
test
xchg
movsb
mov
cmp
leave
leave
add
push
dec
inc
sub
nop
cs
xor
inc
mov
int3
je
iret
pand
pop
dec
jecxz
cmpsb
sbb
and
push
dec
add
jo
mov
ror
rorl
movsb
xlat
dec
bound
mov
jl
mov
ret
int
inc
nop
mov
je
stos
das
ljmp
pop
popa
xor
imulb
cwtl
pushf
mov
jge
fs
addr16
bound
mov
out
sub
filds
nop
mov
mov
scas
cmp
or
xor
ljmp
data16
std
es
ja
shll
hlt
adc
sbb
add
add
mov
jecxz
add
ret
pop
stos
adc
pop
mov
mov
xchg
and
popl
ja
sti
mov
fs
push
jb
loope
xor
pop
cmp
pop
pop
jb
dec
mov
mov
pusha
or
push
data16
lods
int
sub
and
addr16
stc
pop
mov
cmpsb
popa
cmp
in
ss
mov
out
pop
or
sbb
xchg
fbstp
lock
push
sti
jns
pop
arpl
inc
ficompl
je
lods
jle
es
pop
jle
pop
pushf
fmul
sbb
dec
scas
imul
cmp
adc
mov
sub
push
push
cmc
imul
xchg
add
int
pushf
dec
jae
test
jno
loop
xor
push
xchg
repz
xor
mov
mov
push
adc
pushl
xor
test
xor
push
push
dec
das
pop
icebp
scas
lock
lcall
mov
cmp
mov
iret
adc
add
jle
push
movsl
lcall
fs
aam
addl
xchg
mov
repnz
test
sub
xchg
sub
or
mov
ret
cmc
dec
into
movsb
add
xchg
enter
imul
aam
sub
mov
aaa
fwait
dec
shrb
rorb
js
jno
mov
aas
push
in
cmc
adc
xchg
inc
xchg
jo
jl
icebp
mov
int
std
fwait
push
je
pop
in
stc
into
inc
inc
push
mov
push
sahf
js
push
lods
and
dec
cmp
imul
jge
pop
in
addr16
mov
subl
mov
dec
pop
mov
xchg
ja
or
sarb
ja
xchg
jmp
push
mov
and
add
mov
sti
in
xor
and
sbb
daa
pop
jge
xchg
xorl
les
andb
testb
mov
shr
push
int
cmp
daa
dec
and
js
cmpsb
mov
or
mov
jnp
xchg
ret
fwait
mov
xchg
add
mov
aad
adc
scas
aas
leave
xchg
pop
aaa
xchg
inc
sub
mov
inc
mov
sub
adc
mov
loope
mov
pop
insb
dec
fimull
ret
fcomi
mov
arpl
sbb
xchg
mov
xchg
je
adc
sub
lret
mov
xchg
mov
dec
push
push
mov
push
out
adc
sub
out
int3
outsl
fisttpl
ret
push
xchg
mov
sub
jbe
outsl
lds
mov
je
ds
shl
int3
shl
pop
mov
inc
in
pop
pop
add
lock
dec
in
sbb
outsl
or
jno
dec
shlb
adc
sub
push
dec
fwait
mov
iret
fs
or
mov
aaa
call
mov
pusha
les
call
sbb
or
cwtl
shll
sbb
in
mov
dec
pop
cltd
jmp
push
mov
mov
cld
mov
leave
sbb
mov
icebp
inc
sub
sti
add
lock
shl
push
sub
out
in
cmp
cs
sub
int3
insl
mov
dec
addr16
lods
mov
cmp
pushf
and
mov
or
dec
das
or
lcall
scas
sub
in
xor
aad
jns
addr16
add
xchg
mov
out
fwait
sub
add
xor
test
notb
lahf
jmp
fwait
les
bound
dec
dec
jle
or
and
push
cmp
push
push
dec
clc
clc
stos
mov
scas
pop
push
les
mov
mov
daa
or
pop
mov
notl
mov
mov
scas
cmp
dec
xchg
sbb
fnstcw
dec
dec
or
jl
add
and
sbb
dec
ret
inc
lods
sbb
cmpsl
movsb
sub
addr16
je
clc
popf
jno
orl
mov
jg
inc
out
push
scas
sahf
xor
pusha
pop
mov
iret
and
hlt
popa
loop
xchg
xor
xor
push
push
cmp
and
aam
cmc
jecxz
xor
mov
jge
idivl
and
lods
ja
and
push
outsb
add
testb
add
mov
mov
out
push
cmp
out
sub
aaa
cltd
scas
inc
and
sbb
pop
lds
pop
xchg
xchg
xor
inc
mov
aad
test
xor
push
mov
mov
ss
xchg
adc
xor
mov
mov
and
paddusw
jbe
fld
adc
fcmove
dec
std
iret
mov
mov
cli
lret
mov
inc
insl
shrl
push
mov
jae
decb
outsb
push
push
cmp
pop
mov
mov
sub
out
mov
xor
push
cmp
sub
jb
and
xor
aaa
movl
jns
push
mov
out
hlt
aam
sbb
mov
add
adc
mulb
mov
iret
xor
jg
sbb
jecxz
clc
mov
cmpsl
test
mov
cld
add
cmp
inc
cmp
test
add
movsb
cmpsl
xor
pop
dec
mov
mov
inc
sbb
inc
add
outsl
js
loopne
xchg
pop
fdivs
mov
fcomi
nop
dec
pop
or
pushf
or
pop
mov
repnz
stos
jnp
outsb
aad
jns
or
in
or
sbb
and
stos
ret
xchg
inc
imul
jns
push
mov
mov
lea
in
ljmp
test
lcall
bswap
lds
je
in
cmpsb
mov
ret
lea
adc
inc
push
cmc
into
sarl
push
cmp
xor
sbb
xor
push
dec
fnsave
and
pop
inc
or
jae
mov
pushf
fisubrl
jge
faddl
enter
cwtl
push
in
cltd
into
vmwrite
cmp
pop
pop
call
icebp
lods
shlb
sbb
call
js
push
sub
int
insb
ss
cmp
xorl
fdiv
data16
inc
dec
jecxz
pop
mov
fcoml
cmpsl
fstpt
imul
bound
xchg
adc
js
lea
push
test
sbb
loope
fld
addr16
push
inc
push
lret
movsb
or
aam
loopne
add
jne
or
sahf
lods
xchg
and
xchg
mov
xchg
popf
pop
imul
jnp
mov
lcall
aas
adc
clc
mov
ret
cmp
fbld
xor
dec
add
mov
dec
cli
cltd
out
adc
jbe
ud0
mov
repz
clc
adc
mov
xor
iret
push
cmp
xchg
sar
stos
or
ss
lahf
mov
inc
es
les
imul
rcrb
push
test
fst
mov
js
scas
gs
ret
xor
ljmp
mov
bnd
lea
push
out
pop
jecxz
int3
dec
outsb
sahf
in
pop
scas
mov
sub
clc
push
and
leave
jmp
sub
call
jmp
aas
sub
and
das
dec
push
xor
aaa
leave
push
jno
mov
mov
mov
insl
sub
sar
mov
hlt
bound
das
je
fidivrs
std
stos
dec
stos
mov
test
in
cs
xor
cmp
sbb
mov
inc
push
lock
sti
dec
pop
mov
icebp
rorb
mov
jne,pt
and
cmp
inc
cmpsl
jno
and
cmp
xorl
mov
dec
dec
aas
call
and
cmpsl
cwtl
adc
sub
mov
inc
inc
and
shlb
push
push
xor
insl
push
mull
dec
ret
xchg
into
mov
movb
push
xchg
fdivl
sbb
sti
and
repz
sbb
rorl
pop
cli
xor
mov
jg
lahf
jl
cmc
inc
and
das
adc
xchg
test
insb
push
cmpl
jb
rcrb
sub
xchg
mov
sub
pop
outsb
and
or
hlt
lods
push
lahf
sub
repnz
cmp
mov
xor
sbb
and
pop
scas
mov
sarb
cmp
fiaddl
adc
lea
ds
je
cmp
mov
jo
adc
pop
sub
fnstcw
mov
mov
xchg
cwtl
lock
sub
dec
push
adc
sbb
out
dec
dec
iret
test
imul
jge
xchg
leave
push
mov
sbb
jb
push
or
pop
push
lret
fcompl
push
bound
lock
fistpll
push
int
test
add
loopne
out
pop
add
ret
ret
mov
ret
fistpl
sbb
shll
cli
add
xor
lret
inc
leave
inc
push
jecxz
sarl
mov
cli
arpl
imul
inc
mov
jbe,pt
das
xor
jns
mov
imul
daa
xor
outsb
fsubp
cmp
and
push
dec
icebp
int
inc
fimuls
outsl
cwtl
test
fsub
cmp
stos
sbb
inc
or
cmpsl
lock
xchg
imul
sbb
xchg
stc
add
gs
sbb
stc
pop
cmpsl
test
jmp
inc
rclb
pop
xchg
aaa
or
pop
out
and
mov
popf
fists
dec
divb
sub
xor
mov
sub
xchg
sbb
or
lahf
cltd
xchg
inc
inc
outsl
xchg
mov
lock
aaa
mov
dec
imul
mov
je
stc
loop
cltd
movb
cmp
jmp
pop
mov
jo
stos
pop
cmp
sbb
mov
stos
jns
adc
xor
adc
cli
push
test
dec
enter
push
lahf
mov
cmpsl
jle,pn
iret
ja
aaa
arpl
xor
xor
and
fwait
and
les
xor
sub
lods
pushf
inc
lods
mov
ret
ss
arpl
add
or
mov
mov
cmp
xchg
push
mov
rorb
fdivrs
jmp
into
xchg
mov
dec
mov
sbb
and
lock
movsb
fwait
mov
loopne
lret
xchg
jecxz
les
cmp
xor
shl
out
loopne
or
cmp
sub
push
frstor
sbb
faddp
mov
dec
cmp
xchg
mov
lds
push
arpl
loop
stos
push
mov
cmc
xchg
pop
jno
mov
popa
cmp
xchg
int
push
add
jb
gs
add
outsb
mov
insl
jae
inc
xor
mov
in
mov
jne
fidivs
sahf
out
leave
dec
xchg
divl
lock
je
aad
cmpsb
jo
aad
xchg
lret
test
inc
add
or
and
pop
jnp
pusha
adc
and
dec
mov
pop
int3
sbb
mov
gs
jge
hlt
mov
mov
popl
cmp
inc
push
adc
mov
in
xchg
icebp
mov
jp
mov
xchg
mov
shrl
and
pop
push
iret
xor
mov
enter
in
push
xor
mov
xchg
push
xchg
push
dec
test
pop
push
push
adc
jb
nop
sub
lods
push
lea
fcomps
nop
ja
jl
notb
jg
addr16
ret
in
ds
shll
call
clc
jmp
mov
test
je
ret
int3
xchg
mov
adc
and
xchg
mov
inc
mov
add
jmp
sub
cwtl
shll
pop
cmp
or
scas
pop
mov
xor
aad
shr
daa
fidivl
imul
or
jg
inc
push
iret
inc
sub
dec
add
mov
pop
das
dec
sahf
aad
jae
jo
test
mov
xor
sbb
cmp
fmuls
iret
repnz
cli
test
cltd
cwtl
sub
inc
scas
hlt
mov
pop
jno
pop
cmp
test
adc
and
in
mov
imul
addr16
jp
std
mov
ja
push
sub
loopne
and
in
mov
jmp
or
inc
je
push
sbb
out
adc
mov
add
leave
out
lock
push
dec
and
sub
cmpsb
lock
mov
inc
cld
adc
and
cld
in
cs
inc
mov
rclb
ja
adc
je
cwtl
movsb
leave
cmp
adc
outsl
movsl
dec
xor
inc
push
jl
push
rcr
inc
shrb
rol
popf
cmp
push
mov
xor
sub
mov
cmp
loopne
sbbb
roll
mov
mov
data16
insl
jnp
data16
cmp
cmp
xlat
ret
aas
and
jle,pt
fwait
xchg
fcomps
sub
lea
icebp
push
rcl
scas
inc
xchg
jb
lds
mov
mov
jecxz
mov
scas
and
int
das
mov
je
addl
push
nop
int
bound
push
fldl
xchg
sbb
int3
loope
mov
rcll
xor
push
mov
popa
jbe
aad
xchg
fistl
faddp
jae
cwtl
mov
add
push
push
mov
and
test
push
jecxz
cwtl
rcrl
shl
pushf
pop
push
testl
test
jge
mov
in
and
rclb
scas
and
jno
fnstsw
fisttps
popa
xchg
cmp
in
fs
leave
fisubl
mov
xor
test
push
fdivrp
adc
xchg
sub
fcomip
jo
mov
or
mov
mov
mov
daa
xchg
jo
scas
scas
lcall
fbld
decb
and
xchg
fwait
push
xchg
and
cmc
jae
movnti
mov
inc
fsub
lcall
pop
subl
and
aam
mov
cli
push
cvttps2pi
cmp
adc
pop
mov
sahf
lret
or
dec
gs
push
call
pusha
mov
into
sub
mov
dec
in
mov
aam
inc
lock
in
in
bound
mov
adc
fwait
repz
imul
or
fmuls
fmull
arpl
repz
iret
adc
jmp
jmp
mov
out
xor
cmp
call
shr
in
or
sub
insb
push
out
enter
mov
sbb
sbb
js
cmc
cld
les
ds
dec
std
inc
mov
repnz
pop
inc
enter
inc
into
mov
cmp
pushf
shl
test
mov
shrl
pop
scas
jge
mov
sub
or
pop
sbb
push
loopne
xlat
cs
mov
cltd
add
pop
inc
test
fisubs
ret
sub
cmp
jno
les
pop
jmp
aam
mov
xchg
sub
stc
jno
std
jno
out
mov
pop
iret
bnd
rolb
xor
fstp
adc
std
stos
and
adc
arpl
sbb
clc
lret
jmp
movsb
and
push
sbb
mov
sti
js
pop
sbb
fisubl
lahf
and
jne
sbb
pop
dec
push
mov
test
push
adc
jle
xor
xchg
lods
sti
mov
ficompl
xchg
jge
ljmp
inc
or
mov
lods
mov
jns
inc
cld
xlat
ds
xor
mov
rcrl
sahf
test
xchg
mov
sub
inc
fimuls
es
ficoml
clc
xor
jb
lds
mov
cld
or
jle
inc
ljmp
and
push
xchg
inc
adc
loopne
jae
sbb
in
das
push
push
dec
jne
adc
sub
gs
js
out
rorl
in
pop
lods
pushf
mull
icebp
out
jg
ja
adc
pop
pop
lret
testl
aaa
ror
mov
mov
test
fidivs
icebp
loope
subl
mov
cli
and
lods
sti
aaa
add
jle
and
jmp
jl
adc
fdivrp
jecxz
cwtl
cmpsl
and
outsb
add
int
xchg
xchg
insb
sbb
or
and
sbb
mov
flds
inc
mov
imul
inc
jl
lods
jg
cltd
mov
aas
or
push
les
std
into
xor
xlat
aad
shr
or
adcb
sub
lret
aad
nop
adc
push
cmp
jae
lahf
adc
notl
or
and
pop
xchg
call
stc
mov
fs
or
pop
inc
mov
in
inc
xchg
push
int3
cltd
jge
push
mov
adc
push
leave
xor
subb
std
or
sub
pushf
xchg
int
fwait
addr16
sbb
lret
sarl
cmpsb
in
and
repnz
sub
arpl
mov
cltd
mov
lret
dec
cmc
fdivrl
repz
aad
ja
and
pop
mov
psubsb
jae
adc
fs
mov
pop
aad
lcall
stc
loopne
jg
and
fisubl
data16
jmp
push
push
test
jno
jecxz
cltd
xchg
call
test
pop
ja
dec
les
jp
dec
cmp
into
add
cmp
xchg
or
imul
loopne
sub
dec
cli
fucom
ficomps
xlat
xor
xlat
push
sbb
filds
add
add
aas
sub
stos
cmp
or
push
sub
mov
xchg
fstps
ljmp
pop
push
int
jl
test
stos
aad
mov
cli
idivl
lret
sti
push
neg
mov
enter
orl
mov
out
pop
lret
into
cld
inc
and
shl
movsb
pop
outsb
jmp
or
push
in
nop
fisubs
pop
orb
xchg
pop
sub
pop
lret
test
fs
xchg
ret
adc
xor
sbb
mov
pop
mov
loop
pushf
idiv
aam
mov
stos
push
repz
cld
sbb
cmp
push
sub
add
and
int3
dec
inc
push
jae
push
int
mov
insl
jge
inc
mov
lods
sbb
das
pop
add
xchg
mov
aas
movsb
mov
jecxz
mov
mov
in
adc
hlt
jle
fwait
xor
cmpsb
push
and
sbb
xchg
inc
or
hlt
fcoml
test
sbb
stos
sti
repnz
push
mov
mov
or
pop
mov
cmp
repnz
int
in
iret
test
in
mov
xor
gs
xchg
insl
leave
inc
xchg
fadd
mov
movsl
jl
jo
and
and
fsubrs
jbe
push
popf
mov
out
dec
push
int
add
jge
dec
xorb
nop
scas
fbstp
cmp
stc
nop
cmpl
pop
pop
xor
imul
hlt
adc
rcrl
orl
pop
imul
and
das
movsb
mov
add
lcall
sbbb
jne
jns
and
xchg
xchg
pop
push
ret
cmp
add
push
pusha
adc
jg
jmp
scas
lods
sub
rcrb
mov
nop
and
inc
or
jg
ja
pop
stos
jae
adc
in
pop
test
movl
push
lcall
addb
mov
cwtl
mov
push
mulb
sub
mov
mov
jge,pn
popa
loope
loop
jge
fldcw
jbe
and
pop
pop
inc
in
popa
lods
sahf
jp
push
mov
mov
xor
and
pop
arpl
cmp
aam
vaesenc
push
inc
inc
test
jbe
loop
ds
cmc
xchg
adc
dec
pop
leave
dec
into
test
dec
outsb
push
or
stc
cmpsb
push
pop
stos
sub
sub
int3
dec
pop
arpl
dec
cmp
adc
in
jnp
pop
ljmp
int
stos
pop
negb
mov
leave
add
pop
js
push
lods
aam
mov
push
dec
sbb
ja
rcr
mov
mov
push
test
jp
inc
mov
lods
push
adc
and
sbb
loop
cmp
out
rcr
dec
jae
pop
jnp
xor
es
daa
xor
movsb
notl
push
test
pop
pop
or
jb
aad
mov
pushf
xchg
or
imul
or
mov
push
rcr
repz
inc
insl
jl
sarl
and
inc
je
xchg
imul
lock
mov
lret
shufps
loopne
sti
mov
push
jne
pop
shlb
movsb
mov
fcoms
sbb
outsb
sub
sbb
les
xor
push
mov
cltd
scas
rcr
ret
push
xchg
add
out
adc
adc
jne
cmp
adc
pusha
adc
repz
mov
js
mov
adc
and
lcall
or
dec
xchg
pop
cs
jnp
cmp
push
ds
mov
clc
pushf
pop
sbbb
cmp
push
add
insl
adc
add
test
mov
imul
lds
jl
push
pop
lret
enter
xor
xchg
sbb
or
pop
push
mov
gs
pop
mov
test
arpl
xor
sub
mov
xor
imul
add
sbb
push
xor
arpl
xchg
test
ret
test
dec
mov
cwtl
xchg
jle
cltd
int3
mov
dec
mov
clc
call
add
mov
iret
aaa
lahf
mov
and
jle
dec
rclb
mov
scas
mov
loopne
inc
pop
mov
sub
icebp
jbe
cmpsb
cmp
xor
int
cld
inc
lock
call
rclb
lahf
xchg
cltd
cmp
push
cmp
push
ds
repnz
xchg
lds
out
add
rorl
dec
ret
test
dec
fildl
pop
aad
adc
and
mov
pop
mov
clts
repnz
and
or
jbe
dec
in
popa
cmp
out
jo
xlat
fsubrl
mov
mov
bound
xchg
pop
leave
mov
sahf
fidivrs
or
pop
push
and
or
jbe
scas
and
insl
mov
mov
outsl
cmpsl
jo
mov
arpl
mov
inc
lcall
jbe
xor
out
pop
jge
mov
adc
mov
jns
dec
sahf
fwait
repz
arpl
sub
push
invd
daa
ret
or
pop
bound
pushf
xchg
outsb
cmp
jae
sbb
or
mov
mov
pop
push
insb
movsl
push
pop
mov
xchg
cmc
ljmp
xlat
arpl
pop
test
ljmp
ss
mov
stc
push
fxch
jno
cmp
and
test
push
outsl
in
adc
inc
xor
xchg
int
xlat
dec
xor
or
sub
loope
mov
mov
jne
test
aas
sbb
pop
inc
jae
les
data16
fistpl
push
insb
push
nop
aam
stos
jge
sbb
pusha
xchg
fisubl
icebp
ds
jecxz
mov
add
pop
sarl
mov
fwait
and
and
adc
push
imulb
lds
imulb
shrd
sbb
iret
mov
push
or
ds
rcr
dec
jno
js
cmp
or
adc
outsl
sub
pop
dec
inc
int3
sahf
jo
je
aaa
loope
push
rcrl
jmp
lods
dec
lahf
xchg
mov
pop
aaa
dec
sbb
xor
mov
jp
int
inc
mov
jecxz
jecxz
jo
jmp
mov
hlt
sti
cmp
stos
scas
xchg
les
xor
jae
push
push
mov
adcb
in
mov
dec
lret
xchg
jo
adc
addr16
jbe
cmp
test
xchg
mov
add
sub
ds
inc
leave
je
sbb
bound
shrb
inc
jo
outsb
add
lea
mov
sbb
ljmp
jb
loop
mov
push
test
hlt
and
sbb
ja
xor
xchg
xorb
add
sub
shrl
arpl
movsb
adc
mov
jge
pushf
or
ss
test
pop
jne
add
stc
inc
adc
mov
scas
mov
dec
cld
inc
dec
cmp
xor
fs
out
xor
jne
testb
jg
mov
and
jns
addr16
push
push
mov
repnz
jo
sub
nop
adc
pop
pop
subb
fcmovbe
inc
push
adc
xchg
push
jl
lock
loopne
hlt
aaa
cmp
cmp
daa
sub
mov
dec
js
addps
ljmp
ds
jmp
sub
xchg
sar
ficoml
cmp
in
shll
pop
shl
mov
ds
adc
mov
shrb
xor
cmp
jo
arpl
sub
adc
push
fisttpll
pushf
jl
jo
mov
or
in
enter
rolb
xchg
loopne
pop
cmp
out
repnz
movsb
out
add
sahf
adc
fsubrl
cwtl
addl
insl
fcoml
pop
dec
dec
push
jno
outsb
ja
test
add
sti
push
push
ja
inc
jb
cmpb
sarb
jp
outsl
pop
sahf
js
jge
lock
lret
xchg
cmp
and
mov
fs
push
xorb
push
sub
pop
mov
out
daa
test
xchg
int3
push
push
push
push
daa
mov
insl
mov
gs
in
xchg
dec
xchg
and
iret
icebp
sahf
cli
or
pop
pop
bound
arpl
repnz
dec
ret
mov
ret
xchg
mov
mov
dec
cs
xor
sbb
inc
lods
pop
adc
movsl
imul
imul
push
adc
loop
lock
lea
in
mov
mov
and
mov
inc
ds
mov
int
push
xchg
mov
and
mov
pop
jno,pn
lds
mov
fsubrs
icebp
xchg
and
aas
stos
cs
out
lock
hlt
xchg
sub
push
push
push
js
dec
sub
sub
test
in
mov
das
add
mov
repz
ja
dec
and
adc
jge
ds
imul
jge
push
cmc
cli
jl
cmp
sarl
lea
addl
dec
xchg
jnp
sub
pop
stos
sbb
in
clc
and
test
jg
mov
aam
mov
add
int3
mov
andb
pop
enter
xchg
int3
popa
pop
es
int
out
pop
in
sti
ret
ret
dec
in
ficoms
rcrb
add
adc
push
ficomps
xor
xor
jg
dec
dec
fdivrs
adc
data16
sub
jl
cmp
test
add
lret
rcrb
popa
ds
push
lea
jle
imul
gs
ja
lods
mov
dec
imul
cli
cmp
insl
mov
aam
mov
adc
mov
inc
sbb
dec
jecxz
scas
clc
ds
sbb
insb
in
mov
pop
aaa
mov
push
adc
imul
cld
mov
outsl
jmp
mov
pop
and
and
add
jnp
shl
dec
mov
clc
pop
cltd
pop
or
jecxz
lods
and
adc
out
std
mov
xchg
adc
inc
ds
out
fildl
dec
sbb
mov
hlt
push
mov
fs
daa
sub
jp
cltd
shl
mov
and
mov
adc
dec
adc
jle
mov
jl
jp
xchg
fiadds
and
imul
out
adc
in
lds
xchg
cmpl
dec
pop
aaa
je
inc
xchg
inc
enter
or
add
pushf
xchg
mov
daa
xchg
sub
imul
cmp
jo
adc
cmpsb
gs
call
fcmovnu
in
sahf
stos
sub
out
in
sub
cwtl
and
push
mov
iret
pop
pop
pop
sar
les
jnp
inc
xor
xor
or
and
inc
mov
mov
jle
mov
push
insl
xchg
cmp
jne
in
leave
div
lock
je
js
cltd
das
push
xchg
xor
subl
les
mov
mov
aas
das
mov
mov
jno
iret
xchg
negb
jno
jb
lods
mov
pop
jne
and
or
push
cltd
sbb
mov
mov
popa
jae
in
dec
cmp
in
int
pop
mov
pop
jnp
aad
sar
in
rep
inc
jbe
js
dec
push
bound
mov
add
jmp
mov
imul
icebp
inc
inc
sub
mov
mov
jp
mov
lea
sbb
xlat
push
aaa
mov
das
pushf
xchg
dec
cmp
addr16
cmpsb
jb
test
adc
add
xchg
mov
cli
int
xchg
inc
ljmp
jb
or
int3
xchg
cmp
push
stc
push
jle
fnstenv
lret
cs
mov
pop
sti
cmp
or
cmp
inc
mov
ficomps
push
fisttpl
cmc
jmp
mov
push
dec
gs
mov
outsb
lcall
mov
lret
sbb
or
dec
adc
xchg
aas
lea
lcall
jbe
andb
jbe
push
fimuls
add
js
mov
jno
sbb
cmp
scas
and
loope
shll
bound
push
add
repnz
push
rcr
nop
fldt
imulb
and
mov
mov
push
fidivs
inc
idivl
sub
lock
in
mov
mov
loop
mov
divl
mov
and
pop
rol
pop
mov
jne
scas
ja
mov
dec
aaa
push
lahf
iret
rcr
add
pop
test
scas
inc
add
adc
insb
push
ret
cmp
sbbb
sbb
clc
xor
mov
or
xchg
adc
mov
sbb
push
data16
std
aas
pop
je
add
rorb
mov
or
aam
cmp
mov
stc
adc
sub
jbe
std
fimuls
dec
pop
jmp
cmp
and
push
ja
push
lcall
movsl
inc
addr16
into
mov
arpl
ljmp
xchg
hlt
mov
cmovs
jnp
movsl
pop
push
xchg
xchg
xor
repz
lds
push
test
ss
dec
xchg
adc
outsl
subb
cmp
mov
je
loopne
cmpl
sub
cmp
xlat
in
in
out
outsb
and
add
into
cmp
jecxz
push
dec
jmp
cmp
sub
mov
or
inc
aaa
sbb
push
sbbl
in
adc
sub
push
xlat
fwait
dec
sub
dec
push
or
adc
add
aas
inc
fwait
lcall
xor
jl
das
adc
fstpl
insl
xchg
lahf
push
decl
nop
adc
call
sbb
into
ja
mov
gs
lods
cmp
mov
cmp
and
out
mov
xchg
adc
or
lahf
mov
aas
push
imul
mov
add
jne
fldt
sub
in
les
popa
jle
fsubr
push
pop
leave
pop
cld
or
xchg
insl
jo
mov
xor
xor
cli
aas
and
loopne
xchg
les
xchg
sub
pop
sbb
aas
or
push
xchg
cmc
fmull
in
pop
ret
movsl
test
js,pn
aad
push
ficomps
fistl
in
add
in
xchg
jl
sub
sub
lcall
pop
sti
imul
jo
sub
jnp
pop
or
or
cmpsl
fidivrl
outsb
shlb
incb
jmp
mov
adc
jbe
or
cmp
pop
add
mov
add
ljmp
or
ss
in
and
aad
jl
bound
lea
aam
pusha
push
jbe
cli
js
or
cmp
xor
sub
das
dec
adc
repnz
sub
add
sbb
in
ljmp
mov
int3
cmp
dec
aas
imul
sbb
lahf
push
sub
cmp
jne
add
fwait
inc
subb
mov
rolb
add
mov
je
rcr
push
shr
outsl
out
test
rorl
imulb
repnz
adc
dec
aas
call
sub
stos
push
notl
stc
add
sbb
sbb
es
mov
pop
mov
adc
call
jmp
adc
lahf
inc
mov
or
xchg
hlt
cmpsb
mov
insb
mov
imul
push
lcall
mov
in
pusha
pop
int
icebp
pusha
mov
insl
inc
es
fwait
or
add
test
insb
mov
fidivs
leave
cmp
or
and
mov
xor
mov
leave
jmp
mov
stos
bound
jns
sbb
sbb
sbb
lods
cmpsb
daa
dec
and
inc
fisubl
add
aad
jl
jno
dec
pop
xchg
loop
daa
outsl
mov
jle
aaa
push
rcll
add
and
lods
fnsave
mov
out
or
inc
pop
jae
repz
pop
mov
movsb
mov
ret
aas
neg
les
push
inc
sbb
nop
and
or
and
out
es
pop
jns
shlw
mov
inc
cld
shl
out
jle
lahf
into
rolb
cltd
pusha
inc
sbb
stos
out
push
cli
shrl
sti
sbb
fs
sub
jo
sub
push
cs
shll
movsl
into
inc
jecxz
inc
mov
push
jno
mov
into
inc
xchg
add
setbe
mov
stos
inc
jno
stos
mov
es
inc
lods
push
jns
mov
js
enter
jg
jmp
jmp
xor
lods
jl
inc
iret
jp
push
lea
inc
or
pop
cwtl
bnd
popl
add
pop
add
mov
xor
sub
test
push
jnp
je
cmp
cld
ret
test
cmp
dec
mov
cmc
scas
ljmp
hlt
repz
mov
std
or
pop
pop
jg
lods
lea
cmpsl
je
nop
insb
sbb
sub
mov
icebp
adc
ret
mov
clc
out
add
dec
pop
neg
rorl
pushf
jmp
dec
jnp
add
cmpb
mov
sub
mov
mov
es
mov
mov
icebp
les
lret
aaa
xlat
mov
jge
xor
sbbb
and
cmp
inc
sysret
jle
pop
fwait
rol
sbb
pop
lods
sti
addr16
xchg
imull
mov
add
ds
adc
test
fldz
sarl
xor
js
lea
and
inc
addl
clts
pop
push
pop
jo
dec
int
push
insl
aad
push
mov
sub
pop
dec
ret
push
in
pusha
ds
add
mov
lea
cmovge
nop
jmp
out
cli
icebp
push
xchg
insb
xchg
xchg
push
or
les
fistpl
push
les
xor
movsl
jo,pn
sub
in
clc
sbb
ljmp
repz
xor
ret
push
sub
inc
test
imul
pop
test
js
mov
stos
pop
test
into
or
pusha
ja
pusha
push
jns
dec
jmp
push
push
pop
aas
push
push
jne
dec
sbb
xor
adc
mov
xchg
mov
push
bound
push
cmp
jmp
cmp
out
push
and
mov
in
cmpsb
cmp
inc
push
sbb
cs
mov
cmp
out
dec
lahf
mov
jle
inc
iret
pop
dec
das
mov
es
push
gs
xchg
clc
imul
into
stc
mov
in
subl
mov
dec
shll
pop
sbb
fwait
or
out
sti
cli
jbe
mov
repnz
sub
and
sub
inc
outsl
sbb
addl
in
xlat
clc
out
and
hlt
ja
imul
push
enter
lods
ljmp
movsb
negl
mov
cmp
cmp
cmp
adc
pusha
inc
ds
in
xchg
cmp
pop
mov
and
pop
cmpsb
stc
sub
inc
les
outsb
aad
and
data16
jno
jp
inc
dec
add
aaa
xchg
jl
jo
lods
sbb
jl
ffreep
mov
cld
rcr
pop
xchg
into
jle
lcall
jno
arpl
aam
movsl
into
add
ret
pop
jmp
pop
cmpsb
cmpsb
push
dec
jbe
insb
ret
push
loopne
jns
rolb
mov
ret
sub
mov
repz
test
ror
fnstcw
inc
repnz
dec
movsl
jbe
mov
push
sub
mov
mov
push
mov
je
loopne
xor
lret
push
sbb
arpl
lret
movb
gs
jl
clc
sub
repz
xor
jne
jge
xchg
iret
xor
cwtl
mov
imul
adc
shrb
push
adc
test
cld
adc
cbtw
jg
or
push
das
mov
mov
fwait
cwtl
mov
inc
movsl
cld
lcall
cmp
lret
stos
test
pusha
std
daa
test
push
nop
xor
sub
cmp
cltd
mov
scas
dec
insb
mov
jae
inc
add
repz
adc
jae
stc
test
sbb
xchg
arpl
pop
adc
mov
dec
adc
sub
inc
cmp
out
jg
fistps
pop
sbb
xor
mov
inc
loope
pop
push
insl
aaa
iret
jmp
stos
jbe
push
or
pop
or
pop
mov
or
test
xchg
ret
and
into
push
cwtl
hlt
jae
std
jo
lcall
mov
xor
or
clc
cmc
addr16
add
xor
adc
clc
cld
jge
dec
shll
mov
cmp
mov
lahf
rorl
cltd
and
and
xchg
arpl
jb
lds
xchg
bound
jl
ja
add
fsub
push
rcll
add
negb
out
fucomp
sbb
sub
dec
mov
pop
fimuls
xor
jg
popf
jmp
aam
dec
and
testb
push
mov
shrl
jb
xor
adc
sbb
xchg
popa
xchg
movsl
ljmp
std
push
leave
cmp
dec
fwait
stos
ffree
add
mov
or
dec
xchg
lret
pop
mov
sub
nop
sbb
lret
ja
mulb
mov
sub
xor
pushf
push
imul
ss
out
xchg
pop
xor
mov
in
enter
bound
mov
int3
pop
adc
ss
insb
outsb
inc
test
outsb
int
jnp
aaa
pmulhuw
and
mov
mov
push
dec
cmp
int
adc
test
xchg
dec
cld
xor
pop
xchg
iret
cmc
add
dec
mov
pop
jo
stos
outsl
stos
add
xor
nop
push
adc
lahf
xchg
in
sarb
inc
mov
in
lock
fsts
mov
xor
xchg
mov
mov
cmp
sub
dec
mov
test
jne
xchg
ret
test
mov
pop
stos
pusha
xor
sbb
lock
fdivl
stc
lock
adc
add
ja
sahf
mov
xor
jge
dec
pop
pop
xorb
xchg
insb
sarb
mov
das
nop
sub
aas
es
cmp
mov
fists
push
clc
scas
adc
fdivp
lahf
pop
and
rclb
adc
xchg
xchg
negb
lret
push
mov
xor
jge
sbb
sub
cmpsl
mov
lret
jne
sub
mov
sub
nop
push
push
xchg
mov
sar
in
lcall
imul
xchg
not
mov
and
push
add
adc
add
gs
cmc
mov
fldcw
out
mov
mov
add
out
orl
cmpsl
jmp
dec
mov
aaa
xor
bound
call
push
add
stos
imul
xlat
pop
sub
loop
test
rolb
loop
lret
and
cmp
xchg
stos
not
scas
push
icebp
cmc
stos
ffree
xor
pop
jne
jo
fisubrs
fdivrs
dec
lret
inc
data16
jo,pt
pop
xchg
stos
inc
cli
fiadds
sarl
ret
cwtl
mov
and
cmp
cld
jg
mov
dec
lods
insl
pop
enter
lods
xor
xchg
push
test
pop
aam
xlat
daa
cld
mov
adc
lea
ret
pop
cld
test
cmp
inc
in
lods
mulb
cmpsb
rorl
adc
jge
popa
jl
sub
shll
stc
mov
stos
sti
fstl
xchg
and
dec
inc
insb
mov
push
jge
sarb
jb
jmp
mov
adc
repnz
lds
or
push
fsubs
lcall
or
dec
aad
fisubs
adc
enter
add
leave
fists
and
aas
mov
and
mov
dec
popaw
ror
adc
push
mov
pop
pop
in
push
pop
mov
mov
imul
jae
xor
cld
and
and
inc
or
push
lahf
or
outsb
lea
in
pop
adc
fcmovnb
jle
or
cmpsl
mov
mov
sbb
lods
cmp
ss
xchg
fcmovnbe
xchg
jg
add
fdivs
sub
mov
dec
dec
adc
dec
add
jno
jmp
nop
fwait
and
dec
inc
or
sub
xor
hlt
or
pop
es
cli
inc
dec
dec
call
mov
fildll
sbb
repnz
xchg
cmp
das
jecxz
push
pop
arpl
push
xchg
pusha
jecxz
or
jle
dec
mov
or
in
fildll
jae
fwait
push
cmpsl
hlt
ja
imul
lret
imul
fucom
popa
and
je
mov
loope
jmp
rcrl
push
sbb
je
pop
dec
mov
xchg
xchg
sbb
ja,pn
xor
pop
loop
das
repz
ljmp
pop
xchg
out
lds
mov
das
mov
jecxz
in
xor
lcall
loope
mov
imul
mov
insb
and
mov
leavew
and
mov
xchg
je
ds
xor
xor
pop
push
pop
ljmp
fldcw
cmp
xor
loop
pop
cmp
lock
pop
cmp
ljmp
iret
jne
sbb
sbb
data16
xchg
pop
jl
sbb
ljmp
mov
sbbb
loopne
data16
imul
inc
pusha
jo
xchg
sub
and
fiaddl
jno
sub
add
sbb
and
push
fidivrs
dec
push
or
mov
cmpb
repz
repnz
xchg
or
lea
mov
shrb
dec
xchg
sub
jle
or
jl
push
rorb
test
stos
out
mov
jns
dec
lahf
xchg
jg
stc
psubusw
sbb
lcall
jmp
jns
cmc
sarb
sub
shlb
push
cmp
iret
jnp
push
mov
std
call
jbe
nop
jl
data16
dec
ret
inc
xchg
shll
jmp
sub
add
stos
mov
iret
fnstsw
jae
aaa
addl
aam
xlat
clc
movsl
jp
cwtl
std
mov
pop
push
mov
sbb
fistpll
in
lock
bnd
movsb
rolb
dec
std
jbe
and
mov
test
add
inc
daa
pusha
int3
sub
dec
inc
pop
jmp
fsub
dec
js
add
ds
lret
out
adc
fcoms
xchg
dec
jl
dec
dec
add
sahf
arpl
pop
xchg
sbb
test
jb
sbb
push
inc
push
jb
test
cltd
jmp
sub
lret
mov
mov
xorl
push
inc
sub
dec
and
xor
jb
fildll
movsb
pusha
mov
es
dec
add
lahf
in
mov
jecxz
or
fildll
jp
jecxz
test
dec
cmpsl
rcll
dec
lock
jl
fdivrl
cmpsb
xchg
sti
aas
cld
mov
stos
xlat
in
fyl2xp1
scas
xorl
ss
pop
cltd
adc
inc
in
or
mov
lods
and
push
xor
jne
push
int
xchg
pop
ljmp
pop
mov
or
jl
push
sub
aaa
in
dec
gs
jo
push
cmc
lret
sbb
pop
fwait
or
and
xchg
shrb
rclb
jb
mov
and
xchg
mov
fwait
lret
lods
rcll
push
addw
push
and
mov
mov
xchg
icebp
sti
mov
pushf
insl
mov
push
addr16
dec
inc
sbb
lds
lods
lea
into
xlat
pop
sub
xchg
or
fs
xor
jo
sti
mov
int
out
push
pop
adc
pop
mov
xchg
inc
add
and
pop
sub
lock
xchg
mov
mov
sub
xor
insl
in
hlt
test
and
mov
mov
or
ret
mov
sbb
add
shl
pop
rcrl
xchg
orb
xor
push
fnsave
js
clc
push
or
cmc
andl
jns
jb
loope
sub
leave
jae
arpl
in
dec
mov
push
mov
mov
adc
xor
call
jge
icebp
ja
decl
pop
cwtl
ljmp
push
in
jmp
lods
pop
mov
adc
xchg
divl
stos
lds
xchg
out
jecxz
inc
arpl
sbb
wrmsr
adc
add
xor
call
jmp
inc
aas
lahf
sub
arpl
sub
fstl
jge
sbb
mov
jbe
mov
into
dec
in
cmpsl
es
jge
push
pop
cmp
js
mov
fcompl
mov
dec
mov
xchg
in
xchg
pop
jb
les
loope
es
add
add
aam
inc
jb
jmp
and
pop
add
inc
sub
jl
sbb
mov
fldl2t
xchg
mov
lea
lods
cmc
or
stos
loope
insb
jmp
sub
cwtl
cmpsl
inc
cltd
dec
mov
icebp
addr16
test
aad
rclb
icebp
getsec
jmp
jg
sbb
xor
dec
mov
cmp
movsb
pop
jg
cmp
mov
in
or
or
add
pop
leave
js
jl
aaa
and
cmp
sti
ds
jnp
adc
mov
adc
and
sbb
xlat
pop
cltd
scas
movsb
add
xlat
xlat
or
adc
mov
lock
sub
xchg
or
pop
jmp
dec
lods
repz
ds
in
sbb
sub
fnstcw
mov
cld
ret
fisubs
pop
inc
adc
adc
stos
mov
pop
inc
xchg
out
dec
aad
push
inc
out
sub
ds
sbb
enter
pop
mov
push
mov
test
add
popa
rcr
orl
cwtl
mov
nop
inc
jo
daa
sub
les
adc
idivb
jne
mov
jne
pop
xchg
jle
aaa
jl
cmpsb
xor
add
jns
sbb
pop
dec
add
dec
mov
jns
roll
mov
and
adc
cmp
push
push
and
dec
jbe
cmpb
test
jno
push
add
xchg
aam
or
fsubrl
inc
bound
and
adc
or
aas
sbbb
test
jge
mov
rclb
popa
xchg
jno
push
mov
xchg
xor
add
push
cltd
pop
xchg
jle
jl
mov
pop
cmpsb
xor
popl
enter
nop
and
jmp
in
sbb
pop
ja
js
cmc
fimull
mov
pop
cmpsb
insl
pusha
jmp
pop
mov
and
in
mov
into
rolb
add
int
and
mov
call
sbb
pop
inc
sub
sbb
jmp
mov
and
adc
jo
shr
pop
mov
sbb
jb
aas
stos
dec
loop
les
sub
jo
jle
outsl
sub
xchg
orb
push
pop
rcrb
sbb
push
inc
outsb
cmpsl
cwtl
jae
jns
mov
out
xchg
mov
es
push
mov
out
into
testb
xchg
cli
call
out
adc
int3
pop
xchg
push
movsl
jge
lcall
jns
mov
sub
add
loope
push
mov
out
sub
popf
push
mov
mov
jle
adc
nop
mov
mov
adc
cmp
push
repnz
or
push
push
xchg
hlt
sub
lods
adc
fidivs
sbb
aam
sbb
adc
push
adc
lret
adc
gs
pop
adc
mov
mov
cs
xchg
add
jno
mov
sbb
mov
or
std
adc
in
js
pop
sahf
pop
fdivrl
xchg
jp
frstor
mov
xchg
xlat
mov
pop
adc
out
add
inc
push
stos
xchg
gs
in
test
mov
orb
xchg
and
popa
pop
xchg
adc
mov
or
dec
sbb
jnp
pop
out
mov
jnp
sbb
fcmovnbe
mov
xchg
xchg
lcall
mulb
add
repnz
lret
jbe
lahf
arpl
jmp
mov
cltd
dec
jbe
je
sub
mov
mov
xchg
ror
jnp
push
cmp
je
pop
cmpsb
in
lock
mov
pop
sub
mov
mov
nop
ds
lods
mov
enter
ljmp
cmp
fisubrs
push
jg
mov
shld
dec
sbb
je
mov
imul
mov
enter
jl
sub
cmp
js
mov
cltd
in
adc
sub
lds
xor
xchg
aaa
inc
mov
push
xchg
mov
scas
pop
cwtl
pushf
js
test
fldt
mov
leave
mov
popf
add
aam
test
out
adc
js
subb
and
stc
xorl
mov
jnp
les
scas
fdivrs
fldt
xor
sub
xchg
sub
push
pop
pop
or
xlat
ljmp
xchg
repnz
xchg
cs
mov
movb
dec
loop
and
dec
or
icebp
inc
sbb
pop
jb
jecxz
scas
movsb
loop
mov
and
lods
sub
mov
adc
in
xor
xor
por
ljmp
and
int
inc
repnz
mov
test
pop
sbb
std
adc
jg
inc
mov
enter
inc
pop
test
jbe
push
add
sub
xchg
jg
mov
outsb
inc
mov
mov
cmp
into
cmp
adc
pop
call
mov
sbb
cmp
jle
leave
mov
clc
jg
add
cmpsl
in
icebp
popf
mov
dec
dec
jmp
pop
inc
xchg
out
push
repnz
daa
int3
mov
dec
lret
jecxz
loopne
mov
jo
in
or
out
push
imulb
das
mov
mov
fcmove
lret
into
pop
lock
bound
push
fs
push
jno
subl
std
gs
sbb
rorl
clc
jbe
sbbb
fwait
and
std
addr16
mov
jp,pt
mov
add
fdivrl
icebp
sbb
test
ljmp
repz
aad
jge
mov
loope
dec
cmp
sti
add
jecxz
data16
je
lods
stos
cli
fcoml
stos
mov
sub
push
cwtl
test
cmp
loope
stos
pop
je
xchg
push
jmp
push
jg
das
lret
jge
mov
out
jns
sub
jg
jle
mov
je
mov
mov
or
push
xchg
fsubl
insb
adc
in
xchg
sbb
jae
jne
enter
shr
inc
daa
xchg
or
adc
sarl
xchg
mov
mov
stc
mov
inc
xor
sub
cmpb
and
mov
mov
jo
nop
pop
shlb
inc
xor
mov
cld
mov
xor
push
in
adc
mov
std
pop
aam
std
gs
imul
shlb
idivl
mov
mov
jno
test
pop
sub
clc
arpl
outsl
jg
sbb
jns
mov
call
xchg
mov
popf
xchg
mov
dec
ret
mov
or
mull
mov
cmpsl
fcoms
mov
sub
not
orl
xchg
and
push
add
cmp
in
out
pop
jle
jl
sarl
js
push
lock
lahf
in
xchg
cmpsb
xor
pop
cmp
sti
xchg
arpl
loop
mov
or
and
dec
lea
inc
test
xchg
ret
imul
mov
mov
pop
out
movsl
push
int3
mov
xchg
nop
sarl
fwait
inc
fisubrs
iret
jns
xchg
push
adc
push
push
xchg
sub
sbb
or
dec
xchg
sub
xchg
pop
scas
insb
push
in
push
popa
std
enter
mov
and
and
sbb
outsb
xchg
jcxz
add
lahf
fistl
in
push
xchg
arpl
lods
mov
imul
push
into
mov
push
inc
mov
lahf
in
cmp
sub
pop
mov
lds
ret
dec
movsb
push
and
ss
push
mov
pop
cmp
adc
mov
sub
out
cltd
fcompl
lock
imul
test
lret
in
pushl
pop
xor
pop
lret
stos
and
js
out
iret
ficoms
jo
jmp
add
and
xchg
movsl
out
inc
push
jno
insl
lock
inc
arpl
mov
int3
dec
cwtl
loop
dec
lds
fwait
xor
xor
outsb
cmc
adc
stos
or
and
outsl
std
cs
xchg
pop
or
xor
pop
cmp
call
outsb
add
inc
jmp
cli
pop
xchg
xchg
aad
pop
fimuls
negl
and
adc
mov
ja
mov
sbb
outsw
mov
mull
push
xorb
pop
xchg
inc
xor
push
push
fsubrp
xor
push
subl
sti
loopne
adc
rcll
inc
fldt
icebp
stos
or
pop
test
movl
enter
sub
fmuls
cli
mov
test
xchg
mov
adcl
xchg
cmp
in
push
add
dec
test
test
jnp
sub
adc
adc
sbb
int3
xorb
adc
sbb
xor
jge
in
out
inc
inc
xor
dec
inc
lcall
push
shll
scas
lods
cmpsl
push
adc
scas
mov
mov
jecxz
pop
fsubp
pushf
dec
inc
push
jecxz
mov
mov
xchg
outsb
add
mov
mov
fcoms
divl
mov
inc
jge
loopne
jl
cltd
mov
sub
sub
or
xchg
fisubs
jg
push
cmp
outsl
sbb
jp
mov
mov
push
aas
adc
orb
add
nop
inc
repz
cmpsl
negl
sub
cmp
pop
lret
push
into
inc
mov
mov
aad
jns
in
in
jb
int
in
add
mov
pop
ficoms
jbe
mov
jno
scas
inc
ret
mov
fs
xchg
mov
add
xchg
push
mov
add
scas
movsb
sbb
ja
stc
sub
enter
in
inc
ja
in
cli
ljmp
cmc
xchg
pop
mov
inc
pop
add
mov
stc
sbb
into
mov
scas
mov
push
push
mov
outsl
and
lahf
stc
push
ljmp
cs
xor
movsb
jnp
pop
or
pushf
out
cwtl
repz
ja
push
jp
out
xchg
dec
mov
arpl
pop
sbb
cmp
mov
stc
jbe
mov
out
insl
stos
mulb
aad
imul
sub
mov
frstor
pusha
inc
out
imul
roll
xchg
mov
adc
iret
addb
pop
add
inc
in
xchg
rcll
push
cld
aam
sbb
fisttps
jb
aad
dec
icebp
inc
test
jg
xchg
sbb
ret
inc
bound
dec
mov
push
jp
adc
push
and
pusha
mov
call
sbb
ss
test
pop
xchg
dec
aaa
xlat
sbb
fistps
sahf
bound
or
out
sahf
scas
xchg
out
out
cmp
jle
pushf
xchg
sub
inc
mov
push
cltd
push
and
adc
dec
xorl
dec
gs
ja
inc
test
mov
or
cmpsl
sbb
sbbl
fldl
sbb
or
pop
push
jns
mov
icebp
shrb
mov
mov
aas
or
sub
fiadds
jl
and
clc
lock
lds
fwait
les
mov
push
fwait
aaa
ljmp
lods
int3
dec
fldenv
jge
mov
push
inc
aaa
scas
mov
sbb
out
inc
jmp
ss
and
sbb
push
jge
in
cmpsl
fmulp
mov
mov
pop
ljmp
fdivr
xor
jae
xor
xchg
xor
lahf
cli
in
ret
mov
pop
adc
xorb
and
imul
xlat
out
lahf
outsb
cmpsl
sub
xchg
xchg
lea
int
sbb
or
and
push
je
mov
and
mov
loop
ficoml
xor
jle
pop
add
cmp
rcrl
test
sarl
push
mov
clc
mov
inc
push
mov
inc
ljmp
mov
faddl
cs
call
mov
xchg
inc
test
mov
pop
push
aaa
pop
xor
lahf
fildl
pushf
aas
jb
mov
or
in
push
xor
hlt
push
mov
mov
cmp
test
cmp
push
out
lods
mov
data16
negb
scas
cmpsl
xor
pop
cmpsl
xor
push
push
out
pop
lea
bnd
sbb
add
mov
outsb
dec
sub
push
pop
push
mov
sarb
out
adc
test
sbb
ja
jns
stos
stc
xor
mov
push
add
or
mov
stc
push
scas
or
sbb
jbe
xchg
in
xchg
hlt
out
adc
inc
sbbl
div
ficoms
or
int
inc
mov
jb
ret
stos
push
or
out
movsl
movb
lret
lods
sbb
mov
insl
out
movsl
sti
jbe
cs
xlat
lods
lods
ja
sbb
jecxz
cmp
test
repz
jg
pop
adc
cli
loop
xor
pop
push
outsb
repnz
mov
mov
xchg
rclb
out
ja
jmp
mov
ss
pop
das
sbb
sub
fmull
mov
insl
add
subl
pop
inc
xchg
pop
or
jnp
fbstp
loop
and
xchg
out
stos
dec
inc
push
jb
aam
out
enter
adc
xchg
mov
and
xor
or
pcmpeqw
lret
adc
lret
lret
mov
mov
xchg
fistpl
mov
mul
pop
in
jp
iret
sti
xchg
cmp
mov
rol
dec
sti
inc
or
cmpsb
jnp
cmp
and
sbbb
cmp
jg
sbb
jne
pusha
leave
nop
daa
cwtl
jo
mov
xchg
add
cmp
inc
mov
dec
jge
les
in
fidivs
jmp
or
fsubl
adc
popf
je
push
cwtl
sbb
sbb
adc
jb
xor
adc
mov
xchg
or
lods
aas
adc
jb
cmp
push
faddp
cltd
neg
dec
inc
jne
jecxz
jo
sbb
sub
mov
cmp
cmp
je
rcrb
pop
pop
hlt
aam
inc
int
mov
inc
mov
je
dec
sti
cmpsl
mov
xor
loop
cs
fstpl
sbb
xchg
mov
lcall
mov
shlb
repz
adc
out
and
test
inc
in
sar
les
fstps
jnp
mov
mov
shll
pop
outsl
pop
sbb
cmp
inc
lods
xor
lret
push
push
sahf
jg
cld
cltd
incb
push
imul
fidivrs
push
clc
sti
pop
sbb
daa
xchg
fildl
fisttpll
div
xlat
push
sbb
xlat
hlt
and
movsl
rol
repz
hlt
jo
mov
adc
arpl
mov
xor
cmp
adc
addr16
inc
cmpsb
cmp
push
fcmovnbe
xor
cli
add
pop
xchg
mov
xor
push
add
mov
jecxz
sbb
push
inc
jg
dec
js
pop
aas
rclb
pop
ja
ja
pop
xor
in
push
jns
mov
push
sbb
icebp
addl
fldt
mov
scas
es
test
lods
sub
test
push
mov
cmpsl
movsl
pop
mov
enter
pop
loop
mov
icebp
pushf
push
je
lea
adc
mov
jns
fimull
out
dec
cmp
shrl
mov
ret
sub
sbb
cwtl
mov
xor
mov
loop
pop
pop
cmp
lret
mov
xchg
popf
ljmp
in
jns
dec
test
in
hlt
mov
int
and
sub
push
mov
xlat
add
jg
pop
add
add
lahf
or
popa
movsl
inc
pop
sarb
idiv
jnp
mov
adcb
movsb
push
push
mov
sbb
cmp
nop
add
pop
xchg
fwait
sbbl
add
xchg
or
repnz
cmp
ja
pop
mov
out
pusha
pusha
adc
addr16
inc
jns
mov
mov
sarl
cmp
pop
sbb
jp
dec
push
jno
les
sbb
mov
out
push
mov
sbb
inc
inc
mov
sub
imul
inc
push
pop
fcom
fnstsw
xchg
inc
jno
lea
jbe
int
dec
mov
mov
jg
push
jp
mov
sub
shr
mov
ds
jecxz
call
cmpsb
dec
push
ljmp
cmc
and
lea
jl
mov
popa
add
sbb
adcb
jae
dec
jmp
add
loopne
sub
inc
xchg
testb
bound
xor
xor
nop
aad
repnz
in
and
fwait
les
cmp
add
sbb
cmpxchg
aas
into
jp
sub
adc
adc
pusha
stos
cmp
andb
aaa
nop
into
leave
push
jo
int3
mov
pop
xchg
push
data16
lcall
dec
inc
adc
mov
aad
test
mov
sub
mov
inc
test
nop
inc
xor
mov
jnp
and
cltd
ds
out
and
and
ds
loope
jnp
popa
push
int
out
je
inc
cwtl
test
dec
adc
cmp
adc
repnz
rorl
lret
daa
sti
movsb
stos
repnz
mov
test
inc
mov
outsb
mov
jno
or
pop
imul
iret
leave
pop
int3
mov
dec
das
dec
scas
inc
and
xor
fwait
jmp
adc
sahf
xchg
lahf
or
xchg
adc
loop
lock
push
shll
psrad
ljmp
and
xor
and
sub
aas
xchg
jns
cmp
popa
pop
cli
lods
mov
sub
jnp
cwtl
insb
aam
and
pop
fidivl
or
repz
mov
in
fidivrl
jae
adc
test
out
mov
and
in
filds
and
lret
xchg
inc
xchg
sub
cmpsb
insl
test
fistps
sti
shll
es
enter
jle
jb
into
or
sbbb
or
call
ja
pop
fisttpl
dec
dec
loop
icebp
adc
mov
rcrl
adc
or
sbb
insb
scas
jbe
xchg
adc
fcmovnb
push
arpl
and
sarb
xchg
add
scas
int
xor
sbb
out
mov
xor
mov
or
xor
aad
jns
pushf
xchg
mov
jl
pop
sbb
mov
out
bound
push
pop
mov
pusha
ljmp
rclb
fbld
out
inc
mov
ljmp
faddl
std
sahf
sub
adc
divl
or
jl
mov
fists
js
out
add
mov
rcrl
cld
mov
repnz
les
adc
xchg
jl
sub
dec
jl
add
dec
loope
imul
xchg
dec
test
cmp
enter
arpl
lret
push
orl
stos
in
xchg
leave
ds
int3
mov
ljmp
or
in
cmp
hlt
xor
lods
outsl
nop
loop
pop
or
out
dec
xor
arpl
lods
adc
fistl
xchg
and
pop
inc
shrb
mov
sbb
in
and
fs
test
xchg
fdivrs
cmp
dec
test
xor
es
jne
rcrb
arpl
ror
std
mov
or
sub
cs
aas
push
scas
in
cmpsb
mov
imul
scas
inc
adc
es
pop
sbb
fisttps
xor
xchg
dec
popa
push
test
add
push
into
scas
fucomi
xor
in
cmc
das
icebp
fstl
shlb
std
dec
jl
idivb
cmp
out
pop
adc
xchg
mov
push
jne
push
sub
cli
dec
adc
inc
ret
mov
fldl
inc
mov
rorb
sub
jae
inc
stos
stos
in
xchg
cmp
aam
hlt
mov
and
adc
adc
xor
loop
int
sbb
pusha
mov
shr
sub
jae
xlat
push
addl
push
leave
and
push
add
sar
divl
in
mov
nop
dec
and
mov
dec
or
add
sahf
jb
push
stos
cltd
movsl
std
lret
insb
aaa
jns
or
xor
hlt
cmpsl
aad
mov
pop
sub
fmul
mov
add
inc
mov
outsb
lea
adc
das
pushf
push
rcll
and
pop
xchg
mov
out
daa
fnstsw
lret
jns
inc
cmpsl
lret
lds
imul
jbe
cmpsb
loopne
testb
mov
dec
bound
push
xor
push
aam
scas
outsb
pushf
in
int3
gs
je
mov
push
lahf
and
iret
dec
frstor
arpl
mov
lea
and
xor
idivl
and
fcoml
mov
js
adc
mov
int3
pop
jno
inc
test
mov
and
shl
jle
ja
push
lahf
adc
xchg
mov
in
in
dec
call
or
or
std
push
loopne
les
scas
or
jbe
jl
add
push
cmp
shlb
mov
or
pmullw
stos
jle
dec
int
fs
adc
out
fs
pop
in
or
jge
push
fildl
add
push
mov
xchg
adc
je
and
inc
cwtl
std
and
mov
jge
popa
mov
jp
xchg
shrb
xchg
dec
jg
inc
lods
mov
mov
pop
pop
jg
loopne
outsb
bound
mov
cs
xchg
jno
fs
push
xchg
mov
cmp
push
and
add
xor
scas
scas
movsl
testb
fwait
mov
jle
jle
jns
push
imul
push
mov
loopne
mov
mov
inc
mov
pop
pop
sub
shll
or
cmp
int
xchg
clc
mov
xchg
inc
and
insb
fwait
xchg
add
pop
ret
stc
insl
sti
adc
push
mov
xor
sub
push
mov
sti
inc
fisubs
adc
jo
add
dec
adc
adc
rorb
sti
pop
add
add
dec
sbb
leave
fists
pusha
inc
leave
insl
std
sarb
inc
insb
and
sub
sti
cmpsl
push
dec
mov
push
inc
xlat
stos
and
inc
movq
rclw
and
or
cltd
mov
out
adc
xchg
jbe
fucomi
int3
push
and
fcoms
push
xlat
lcall
scas
sbb
adc
add
shlb
cwtl
aad
inc
fucomi
and
jne
xchg
add
push
dec
dec
inc
test
js
sub
inc
jns
sbb
aam
scas
fiaddl
lcall
ja
out
adc
or
je
rorl
dec
xchg
or
mov
inc
jns
cmp
sbb
cltd
lret
js
sbbl
or
cli
or
mov
scas
adc
shl
push
int3
aaa
out
rorl
lret
aad
ret
cmpsb
xor
outsl
mov
insl
pop
sbbb
jb
aam
ljmp
dec
outsl
in
cld
test
pop
in
lahf
ret
mov
inc
inc
sbb
xor
addb
in
cmp
cld
xor
adc
adc
add
mov
ret
test
and
lcall
in
neg
or
jae
sub
clc
xor
push
push
cmp
inc
imul
imul
pusha
jl
dec
out
sbb
sbb
mov
mov
or
fwait
cmpsb
in
rcl
push
sahf
cmpsb
jne
outsl
clc
inc
mov
sub
push
arpl
pop
ss
pop
orps
jmp
dec
ljmp
fnstenv
inc
sub
mov
jge
sub
pop
fs
push
add
sbb
mov
adc
mov
adc
jp
negl
inc
and
icebp
movsl
pop
xchg
pop
xorl
xor
mov
stos
jns
in
rcrl
jge
sub
in
push
cwtl
sub
out
cmc
or
rclb
mov
jmp
pushf
adc
loope
xor
mov
stc
enter
mov
pop
popf
rcr
dec
add
cltd
lods
imul
pushl
or
das
leave
icebp
popa
mov
inc
and
adc
out
xor
or
out
outsl
xor
add
pop
xchg
out
ljmp
dec
mov
lcall
xor
inc
cmp
and
repz
jg
pusha
pushf
jno
rcl
push
cs
mov
ficomps
test
enter
cld
pop
out
jmp
add
fnstcw
and
xor
mov
sbb
xor
sahf
adc
sbb
xor
and
std
or
mov
inc
loopne
push
test
xlat
pop
inc
psubw
mov
lods
inc
dec
rolb
jb
insl
adc
dec
jne
sub
iret
fsubr
jo
test
sbb
xchg
lods
sub
push
xchg
mov
add
adc
cwtl
xchg
jns
es
jge
sub
aas
imulb
mov
jns
iret
loop
push
or
jle
adc
jle
fsubrs
inc
cmc
shrb
shll
jae
mov
mov
adc
int3
pop
js
repz
in
xor
lret
mov
push
ss
outsb
pop
and
repz
out
mov
in
imul
push
jl
cmp
add
jno
sbb
jae
call
fldenv
push
insb
cwtl
pushf
pop
jae
movsl
gs
es
shlb
mov
daa
push
xorb
std
push
jne,pn
pop
dec
push
mov
and
cmp
dec
aas
lds
lret
out
sub
inc
push
fisttps
mov
leave
int3
bound
or
rcrl
xchg
xorb
mov
fwait
mov
loope
mov
cmp
push
xlat
inc
push
and
imul
jae
cld
or
pop
or
or
cltd
add
xor
xchg
xor
test
mov
pusha
adc
mov
lahf
ss
lods
call
add
cs
stos
mov
xor
xchg
rcl
pop
mov
lock
cli
mov
repz
out
sub
out
shrb
icebp
rcrl
int
pop
into
pop
cli
dec
xor
inc
mov
imul
stos
jge
xor
scas
movsl
fs
lea
push
lcall
pop
loopne
cmp
adc
cs
pop
jno
cmp
cmp
pop
add
imull
out
aas
ds
fcompl
rolb
push
mov
in
xchg
imul
nop
push
fdivrs
in
cli
in
stos
addb
jae
xchg
jmp
repnz
sub
dec
or
into
pop
imul
adc
ds
xchg
stos
jbe
dec
in
sub
adc
sub
out
cli
rolb
push
loope
enter
mov
js
into
push
iret
mov
push
sub
mov
pop
cmp
fsub
ret
cwtl
stos
jmp
in
fs
dec
mov
stc
pop
movsl
xor
stos
test
out
decl
and
dec
test
out
shrl
inc
add
and
inc
rorl
loop
repnz
sbb
dec
sub
or
cwtl
mov
movsl
leave
cmp
out
pop
jmp
or
jne
int3
out
stc
inc
push
jno
adc
pusha
dec
cmp
jb
insb
pop
dec
call
shlb
cltd
inc
popa
hlt
sub
mov
xchg
sub
sub
jp
xlat
fldl
lds
push
xor
jg
movsl
xchg
push
and
rcrl
or
outsl
mov
mov
sbb
push
xchg
add
ja
out
aaa
out
mov
out
scas
jnp
into
adc
mov
aas
mov
cld
sub
sub
or
rcll
adc
idivb
pop
mov
push
add
add
cmpsl
les
xchg
push
cltd
xor
dec
mov
xor
pop
leave
inc
sarb
seta
fmul
push
sbbb
imul
mov
shr
stos
sub
test
push
adc
xor
xchg
and
dec
js
xchg
std
mov
aad
push
test
popa
sti
mov
ret
lcall
test
push
and
scas
sbb
dec
pop
test
cld
aas
shl
jbe
or
and
mov
lret
ret
lret
add
mov
pop
dec
cld
mov
add
dec
and
pop
xchg
pop
insb
scas
adc
jbe
add
lret
and
push
sbb
jae
call
sub
push
mov
enter
push
lahf
outsl
xlat
adc
mov
mov
int
ret
data16
pop
jp
test
das
enter
jmp
jecxz
cld
testb
mov
sahf
fwait
lds
rorb
sub
loopne
outsl
test
loope
xor
inc
lret
mov
push
xor
ss
add
std
push
subl
pop
sub
lods
sbb
testl
cli
or
mov
xor
ds
faddl
test
dec
or
add
add
jecxz
daa
dec
cli
inc
xchg
lods
out
and
sbb
lock
loopne
add
adc
pushf
add
fsubrl
jl
mov
popa
lock
and
lea
jle
or
sub
out
pop
xor
xorl
fidivrs
mov
cmp
pusha
mov
cmp
pop
std
jp
test
adc
mov
out
dec
negl
xchg
nop
repnz
xchg
mov
sub
or
outsb
mov
mov
outsb
adc
cmp
das
stos
adc
scas
in
rcl
and
or
in
popa
cmp
add
dec
push
adc
clc
test
jg
arpl
fmull
push
gs
mov
or
enter
arpl
das
movsb
sbb
inc
in
clc
icebp
aad
inc
dec
test
inc
jp
outsb
aad
cwtl
outsb
add
addl
rcrl
lods
movsl
rcll
lds
jns
mov
repz
push
sbb
icebp
addr16
loop
and
or
dec
mov
je
dec
add
xchg
push
test
xchg
jmp
push
mov
pop
outsl
fcmovne
notl
cmp
sbb
add
lods
mov
adc
mov
loope,pt
test
mov
dec
fs
xchg
pushf
and
stos
pushf
out
add
mov
mov
or
push
call
rcrb
mov
xchg
xchg
rcrl
jnp
lret
lret
pop
dec
add
cmp
mov
and
popa
fists
jecxz
int3
sbb
jle
jnp
and
pushf
push
in
insl
pop
dec
and
inc
xchg
mov
vmwrite
ret
sbbb
jne
icebp
mov
mov
mov
cmp
pusha
xlat
sbb
test
addr16
cmp
ljmp
movsb
xchg
xlat
out
mov
push
imul
fdivs
and
inc
jle
jp
inc
xor
mov
adc
sub
lea
or
inc
adc
fstl
fisubrs
insb
clc
lret
stos
ja
mov
jmp
adc
outsl
mov
inc
stos
push
insb
and
xchg
insl
aam
or
adc
inc
adc
jno
in
and
push
repz
test
aaa
xor
pop
xchg
les
ret
arpl
mov
pop
call
aam
test
mov
sbbl
shll
into
syscall
fsub
ret
sbb
negl
out
fstps
mov
dec
faddp
mov
xchg
cmp
jle
fsubrs
or
movsb
or
cmpsl
and
dec
in
aad
push
jl
stc
xor
mov
sub
sub
stos
sbb
xor
xchg
in
loop
xchg
lds
loope
sub
fiaddl
cli
inc
add
mov
add
and
in
pushf
out
push
adc
pop
out
cli
ficoml
adc
int3
movsl
mov
fwait
xchg
cli
movsl
cmp
and
mov
adc
bound
fucom
ja
push
arpl
xor
mov
loop
test
push
imul
hlt
mov
sbb
roll
sub
adc
lcall
test
jb
push
push
mov
push
repnz
test
inc
arpl
adc
mov
jb
ret
je
xchg
or
bnd
aad
imul
mov
pop
idivl
push
mov
mov
fistps
xor
popa
das
sub
jmp
xor
pop
lret
ja
mov
jno
adc
int
mov
es
cmc
addb
xor
dec
incb
pop
sbb
sbb
sub
fmuls
xchg
push
pusha
add
jg
cmp
cmp
cmpsl
jle
or
cltd
aaa
add
or
jns
jle
fcmovu
inc
fmuls
cmp
cld
shll
inc
shrb
xchg
insb
pop
sub
adc
stos
xchg
jle
ja
and
ficoms
out
sbb
and
adc
and
rorl
add
loope,pt
xorl
ret
int
add
cmp
scas
jg
push
adcl
and
cltd
sub
cwtl
test
imul
mov
sbb
xor
mov
lret
sbb
jns
or
cmp
cltd
ret
scas
sub
outsl
pop
inc
out
jnp
dec
lock
sahf
cltd
scas
into
mov
pop
in
or
rcrl
mov
cmp
mov
dec
inc
sub
loop
xor
mov
popf
push
outsb
insl
mov
dec
xlat
jecxz
lods
and
int3
test
in
loop
out
out
jnp
arpl
lds
out
push
dec
jle
adc
test
or
xor
jns
sbb
movsl
out
stc
pop
jno
insl
shr
pop
sbb
dec
adc
pusha
es
iret
stos
insb
fs
dec
sarl
mov
in
sbb
adc
inc
into
sub
test
lock
push
jae
push
lcall
stc
jns
push
icebp
xor
leave
mov
pop
shll
push
push
sub
cmpsb
call
pop
bound
arpl
mov
pop
aaa
test
or
mov
pop
negl
out
jle
or
jecxz
shrl
jo
mov
enter
sbb
lods
lcall
pop
xchg
je
ret
ljmp
and
cmp
cmp
inc
insl
cmp
nopl
shrl
mov
nop
sarb
xchg
aas
and
hlt
ss
je
xchg
mov
mov
test
js
cs
pop
pop
adc
jmp
jnp
push
xor
arpl
and
push
sub
inc
sub
add
xor
loopne
adc
mov
bound
addr16
ret
jb
and
dec
add
mov
xor
mov
cmp
divl
int
xchg
mov
loopne
push
not
pusha
scas
mov
mov
lods
inc
je
xchg
lahf
jg
out
sarb
out
aad
sarl
in
jmp
lret
mov
push
and
gs
lea
push
xchg
sbb
push
mov
pop
dec
imulb
sti
addr16
xor
stos
and
outsl
jg
sub
es
out
filds
lahf
inc
out
outsl
inc
aam
enter
mov
push
xchg
push
xchg
and
ljmp
jl
jae
push
imul
dec
int
add
mov
cmp
sbb
incl
lahf
push
mov
jp
xchg
mov
mov
fwait
jle
mov
inc
add
jle
fiaddl
shlb
sub
repz
lret
popf
insl
jae
out
push
mov
and
mov
sbb
or
aam
xchg
scas
mov
push
outsb
lods
push
rorb
push
test
popa
jnp
adc
push
stc
sbb
xchg
ljmp
pop
inc
cli
mov
sti
jecxz
add
sbb
icebp
into
cmp
pop
pop
out
mov
pop
sub
pop
mov
pop
cmp
push
xchg
lea
mov
dec
jno
call
xchg
hlt
or
xor
mov
rorl
movsl
and
add
mov
inc
lods
sbb
mov
inc
cmp
sub
add
pop
test
or
pushf
out
sbbl
inc
xchg
push
xor
inc
and
rcll
cmpsb
sbb
icebp
in
mov
xor
mov
pop
push
rcll
xor
cli
inc
or
scas
fldt
mov
ss
movsl
loope
cmpsl
out
stos
fdivs
push
stc
nop
adc
lock
test
mov
push
xor
cmpl
inc
or
xchg
sbb
inc
orb
mov
js
fcoml
dec
add
dec
aaa
xor
cmp
lods
mov
mov
daa
cli
enter
clc
outsb
stos
and
jmp
xor
inc
mov
mulps
enter
repz
shrl
mov
out
test
mov
fnstsw
adc
mov
std
ret
push
mov
and
dec
xor
scas
lret
cld
dec
ss
xchg
jo
pop
leave
dec
sbb
in
adc
in
push
aad
sub
dec
mov
xlat
test
notl
jbe
outsl
test
iret
pmuludq
pop
ds
repnz
adc
sbb
fsubl
jmp
mov
out
in
stos
pop
loopne
cmp
mov
lcall
sbb
mov
xchg
mov
xchg
pop
mov
test
or
arpl
lahf
fbstp
out
fdivs
sub
iret
adc
or
mul
cwtl
xor
or
push
jo
jg
mov
loope
test
inc
divl
push
nop
fstl
push
sti
ret
add
lock
fwait
cmp
repnz
pop
and
icebp
mov
fadd
negl
pop
adc
cmc
cmpsb
insb
lahf
jae
fimull
sub
pop
jb
jae
pop
push
sub
imul
js
jg,pn
in
rcr
push
ret
loope
mov
inc
inc
out
icebp
mov
daa
pop
inc
jb
pop
adc
shrb
in
xchg
fcoms
push
leave
sbb
or
sub
ja
in
cmpsl
xchg
jp
mov
in
mov
stos
sbb
xor
xor
test
mov
addr16
lods
jmp
or
xchg
adc
in
frstor
xor
cmp
pop
mov
shll
fcompp
push
imul
mov
push
lahf
pop
adc
add
sub
popa
xchg
repnz
adc
jae
push
sbb
call
pop
and
lahf
push
cmp
ret
aad
out
sbb
pop
lds
aad
popa
clc
pop
mov
stos
cmpsb
pop
cli
sub
jns
push
lock
in
out
lret
cmpsl
loop
fstl
ficoms
sub
dec
in
nop
add
jnp
sbb
sbbb
leave
cmp
sbb
pusha
adc
or
sub
inc
jmp
leave
in
arpl
bound
shl
xor
mov
mov
ds
sbb
mov
stc
jnp
int
test
daa
fucompp
pop
sub
mov
lock
daa
mov
cwtl
sbb
call
xchg
fcompl
test
jg
and
and
push
mov
mov
sub
fisubs
test
and
ret
in
xor
fsubr
enter
lret
enter
movsb
test
inc
inc
xor
clc
xchg
loopne
add
repnz
adc
dec
adc
xlat
pxor
mov
sbb
dec
jmp
std
xor
imul
cld
dec
xchg
orb
jmp
test
daa
sbb
scas
pop
xchg
jbe
mov
test
and
out
mov
sbb
mov
mov
mov
or
pop
and
adc
test
arpl
inc
jae
cmp
or
dec
arpl
test
add
add
das
dec
insb
push
push
lret
push
ret
dec
ret
pop
inc
orb
enter
mov
jl
ljmp
int3
cmp
in
dec
ljmp
fldcw
add
add
popa
mov
cmc
into
xchg
mov
pop
pop
stos
ret
iret
lret
ljmp
mov
mov
or
mov
adc
xor
icebp
inc
decl
leave
jg
push
fiaddl
push
mov
lret
jns
xor
mov
dec
or
out
cmp
mov
in
fwait
hlt
cltd
xlat
loope
push
mov
jg
pop
ljmp
xchg
mov
or
mov
inc
cmp
shl
sti
insb
xor
mov
cld
idivb
pop
insb
mov
add
int
sub
xlat
hlt
rol
loopne
cli
mov
push
mov
stos
aam
sub
cmpsb
dec
shll
test
push
add
stos
pop
subl
xchg
incl
sbb
dec
orb
lcall
scas
rorb
aas
sbb
lcall
and
and
nop
outsb
jp
xchg
jle
ja
or
dec
xlat
push
push
lods
sbb
jb
fdivr
scas
hlt
sbb
popf
sub
inc
mov
test
or
lret
or
sbb
mov
cmp
or
sti
push
pop
pop
jo
dec
test
lret
xchg
dec
ds
and
daa
shrl
outsb
jmp
shlb
xchg
xchg
shrb
leave
or
adc
push
insl
nop
mov
inc
mov
shll
mov
inc
dec
pop
adcl
movsb
negl
movsl
aam
out
or
mov
fisttpll
cmp
hlt
push
lds
xchg
popa
mov
add
cld
pop
xchg
add
and
mov
jl
mov
inc
cmp
sbb
mov
mov
inc
bound
inc
cmp
xor
cmpsb
nop
fstpl
fcompl
push
push
aas
pop
sbb
cmpsb
sub
jne
jb
jmp
aaa
inc
out
psubusb
popa
cmp
das
inc
call
and
shlb
and
push
push
pop
push
xchg
cltd
rorb
aaa
push
int3
dec
jl
dec
adc
cmc
stos
imul
aas
js
ljmp
mov
pushf
mov
je
adc
sub
xchg
adc
btr
dec
enter
addr16
pop
push
lods
sub
cmpsb
insl
loopne
cwtl
stc
pop
mov
add
or
mov
jg
dec
repz
cmp
jge
pop
push
mov
inc
pop
lods
push
cmpsb
cwtl
sub
sub
int3
cwtl
mov
pop
subb
leave
mov
push
adc
ljmp
inc
pop
xor
stos
mov
outsb
scas
inc
or
inc
ja
push
jae
fisttpl
inc
addl
rol
imulb
and
iret
into
repz
push
cmp
xor
inc
lds
sbb
les
ja
pop
xchg
jns
jns
xor
daa
pop
mov
xor
ljmp
and
add
adc
arpl
xchg
popa
xchg
pop
cmpsl
lock
pop
leave
insl
and
add
loop
enter
and
adc
fstps
nop
xorl
jmp
mov
cmpsb
test
sbb
dec
out
mov
pop
fstpt
xchg
test
and
or
movsl
jecxz
addr16
mov
and
mov
sub
cmpsl
mov
cmp
add
push
insb
xorb
cli
adc
sarb
mov
int3
fistpll
add
nop
mov
lods
lock
repz
jns
scas
popa
or
pop
lods
adc
xor
cmpsb
mov
jns
mov
data16
lea
psubsw
daa
mov
mov
or
mov
imul
or
outsb
and
push
subl
dec
fld
pop
insl
pop
popa
nop
mov
jmp
jmp
jns
adc
push
adc
mov
fwait
ror
scas
fwait
int
inc
es
xchg
int3
lea
inc
insb
cmp
fstpt
in
faddl
sbb
mov
int3
loopne
cmp
dec
push
popa
inc
stos
fwait
inc
jge
push
push
xchg
push
or
cltd
pop
xor
inc
call
clc
jg
xchg
jno
mov
push
push
adc
mov
bound
sbb
xchg
add
push
movsl
dec
addr16
hlt
sub
pandn
cltd
xor
xchg
mov
loopne
push
js
jle
jns
ficoml
mov
or
jno
xor
dec
inc
dec
flds
dec
sbb
cmc
jle
std
mov
dec
fisubl
jle
inc
dec
lcall
cmp
insl
inc
jns
loop
adc
mov
int3
mov
leave
pop
or
fistpll
inc
dec
inc
add
imul
fsubr
xchg
movsb
push
scas
test
pop
inc
ds
lahf
cli
imul
jnp
cmp
out
loopne
call
insb
xchg
sub
mov
mov
sub
into
std
aaa
js
mov
mov
xor
sbb
xchg
in
and
and
xchg
in
in
jecxz
xchg
pop
cmp
sub
stos
arpl
les
xchg
fwait
movsb
pop
and
pop
cmp
add
lds
lea
mov
addl
cltd
outsb
mov
dec
out
adc
mov
pusha
jns
insb
fistpll
daa
mov
and
xchg
xchg
call
mov
pushf
into
pushf
filds
adc
adc
sub
adc
lods
fmul
movsb
cs
mov
aaa
push
xor
jmp
insl
dec
cmp
mov
jae
fcomi
bound
hlt
mov
ss
dec
jo
lea
in
mov
or
popa
das
lods
frstor
mov
shlb
jb
xchg
test
cs
negb
in
and
int3
push
and
mov
mov
jge
dec
dec
fwait
lret
ljmp
xor
cmp
cmp
jne
imul
cmp
lsl
sahf
in
out
or
push
lret
inc
dec
push
or
loopne
cmp
sbb
outsb
adc
je
bound
arpl
and
sub
mov
mov
dec
adc
fcom
out
mov
popf
pop
testb
dec
pop
rorb
inc
xchg
ret
push
push
lods
test
sbb
add
bound
mov
aam
push
sbb
dec
test
enter
mov
xor
enter
mov
mov
xor
adcb
pmaxsw
rorl
mov
gs
pop
scas
push
mov
dec
mov
in
mov
fcoms
lcall
xor
lock
inc
lahf
inc
mov
push
je
aad
add
test
adc
pop
fnclex
jp
pop
add
pop
shlb
adc
test
jge
inc
inc
andb
lcall
jle
and
aas
mull
mov
fisttps
adc
jbe
pop
fs
cmc
es
cmpsl
icebp
adc
inc
aaa
adc
adc
sub
or
ss
and
faddl
stc
sbb
pop
fwait
sub
or
and
xor
push
dec
std
cld
inc
outsb
mov
lods
pushf
xchg
in
jne
cltd
xor
push
insl
cmpb
rcll
rorl
clc
xor
in
sub
out
dec
and
push
fs
ja
sahf
es
fbstp
ja
xchg
popf
loopne
adc
jmp
jl
dec
in
lret
push
inc
jno
sub
jmp
sbb
mov
lret
loop
enter
or
test
das
inc
pop
jns
and
and
mov
dec
jecxz
cmp
lods
mov
and
mov
pop
and
mov
gs
imul
xor
push
jo
cmpsb
cmpsl
jo
mov
push
inc
jl
icebp
mov
lret
mov
mov
lock
mov
sbb
scas
test
or
cmpsb
pop
stos
rorl
repnz
out
xchg
enter
pop
insb
popa
es
add
push
mov
add
int
loop
leave
inc
test
push
jns
sahf
inc
dec
out
cmc
mov
add
xor
pop
out
rclb
mov
jmp
pop
cld
or
pop
fsubrl
std
in
inc
jbe
inc
push
daa
sbb
fs
jp
sti
jmp
and
outsb
fisubs
ss
mov
sub
sub
scas
movsl
push
dec
aas
push
push
inc
mov
lock
cmp
fistpl
cmp
lea
sbb
xchg
add
cld
shll
mov
xorl
push
jae
xor
aam
aaa
dec
enter
jbe
xchg
pop
mov
mov
test
push
out
adc
pop
in
mov
dec
or
shlb
int
mov
push
push
aaa
and
push
ljmp
pop
cmc
inc
adc
cltd
xlat
or
sbb
pop
movsl
sbb
xchg
xlat
pop
test
cli
arpl
push
pop
mov
test
dec
sub
sub
repnz
cld
pop
int
push
sbb
mov
xor
daa
pop
mov
mov
jg
out
pushf
adc
xchg
aad
cli
lods
out
sbb
dec
dec
insb
mov
add
out
xchg
xchg
jb
xchg
andl
adc
xchg
pop
sbb
mov
push
pop
cs
jb
mov
or
testl
mov
mov
popa
in
popa
mov
pusha
mov
insl
es
mov
mov
xchg
add
mov
imul
fwait
ljmp
sbb
push
mov
mov
push
pop
or
in
push
cwtl
loope
cmp
popf
push
mov
cmpb
ret
popa
or
dec
inc
cld
pushw
dec
enter
dec
addr16
iret
push
adc
jo
mov
sub
push
push
xlat
jl
jp
stc
subl
inc
stos
jbe
inc
or
pop
sub
sarb
popf
mov
inc
mov
clc
sti
fildll
inc
pushf
pop
insl
push
mov
and
int
mov
and
pushf
cmp
mov
jae
add
sti
inc
mov
cmp
pushf
loopne
scas
sbb
dec
inc
pusha
jae
aad
pop
aas
nop
call
xor
add
out
mov
icebp
ret
loop
jle
mov
mov
or
shlb
xchg
sub
sti
ds
in
inc
out
push
stos
push
fs
jno
sub
test
and
push
in
push
jle
pop
inc
sar
add
mov
and
xchg
movsb
test
dec
and
negl
mov
pop
shll
pop
shll
shl
xchg
push
cmp
or
and
mov
out
sbbl
pop
mov
push
orb
popf
outsb
sahf
mov
test
enter
in
test
lods
dec
in
push
lock
dec
xor
or
sbb
add
les
dec
lcall
push
mov
rcr
cmpsl
adc
and
inc
ds
setp
test
jb
call
lea
mov
jnp
mov
daa
sti
andl
pop
push
jno
mov
repnz
adc
sub
repz
jbe
aad
gs
jp
or
cmp
ficompl
adc
push
pushf
pop
mov
call
inc
in
lret
sar
mov
pop
enter
jl
das
sbb
cmpsb
add
pop
lea
mov
xchg
aam
add
fisttpl
cmp
gs
cld
dec
je
or
test
mov
inc
jo
es
pop
stc
stos
pop
mov
repz
cwtl
xchg
mov
adc
push
inc
fwait
sub
pusha
inc
mov
sbb
pusha
cmp
popa
or
xchg
sti
cmpsl
scas
or
mov
out
mov
enter
xlat
cli
push
aaa
scas
push
push
dec
insl
inc
add
cmp
out
mov
je
and
sub
mov
fwait
jb
cwtl
nop
lret
in
jecxz
and
inc
icebp
sub
outsb
mov
jbe
jnp
loopne
cltd
sub
lock
mov
ljmp
or
stos
jnp
pop
mov
xlat
rcr
and
xor
js
add
xchg
or
jecxz
cmc
mov
sbb
lods
lret
push
add
inc
sarb
std
add
out
pop
pop
or
cmpsb
gs
lcall
dec
movsl
je
inc
test
stc
repz
rcrb
mov
inc
mov
ljmp
pop
repz
ss
cmpb
inc
hlt
mov
add
jl
je
and
sub
sahf
or
sub
insl
xchg
loopne
add
xchg
mov
roll
inc
mov
inc
sahf
push
adc
dec
cltd
xchg
subl
and
jno
mov
xchg
jnp
and
mov
int
outsl
push
or
push
test
push
repz
jg
nop
je
inc
cs
sub
pushf
or
cmpsb
push
aam
sbb
movsb
shll
sbb
dec
sub
add
cmp
dec
mov
push
lcall
testl
clc
jl
add
jo
cli
and
jnp
or
mov
cmp
fisubrs
xchg
sub
insl
jp
inc
pusha
bound
gs
mov
adc
pop
mov
insl
pop
xchg
sub
xor
jnp
jns
sub
sbb
inc
jnp
jge
in
sbb
int
hlt
out
adc
in
xor
xchg
xchg
fnstsw
add
push
scas
pusha
pop
faddp
or
or
insl
add
fs
pop
pop
dec
std
cld
mov
add
prefetchw
or
iret
rolb
cmp
enter
fwait
xchg
repnz
test
loopne
mov
insl
test
repnz
bound
and
insb
out
mov
std
push
repnz
mov
in
add
shll
es
iret
andb
cmp
lods
das
imul
inc
shl
data16
inc
inc
mov
js
pop
ja
test
repnz
int
gs
lock
ja
scas
stos
mov
jecxz
dec
ljmp
sbb
ja
imul
pusha
ljmp
jp
inc
and
rcr
inc
sbb
inc
cs
jns
sbb
sub
jno
mov
in
push
inc
sbb
and
cmp
or
or
test
ret
adc
jb
ret
sbb
rcl
mov
in
pusha
jmp
mov
out
sub
xchg
pop
adcl
ss
aad
dec
jg
and
sub
out
sub
aaa
push
dec
icebp
cmp
pop
and
mov
push
fidivs
test
call
call
lock
dec
stc
and
push
jb
push
hlt
pop
lods
push
negb
std
call
popa
xchg
cmpsl
mov
push
das
jmp
jg
add
enter
loop
or
inc
sbb
scas
cmp
or
sbb
xchg
mov
movb
daa
pop
int
pushf
cltd
sub
adc
mov
mov
nop
adc
lret
dec
lods
inc
inc
cmpsl
clc
inc
sti
push
push
push
add
pop
or
scas
test
int
jle
mov
pop
rol
cmp
addr16
clc
cli
dec
test
dec
insb
push
add
push
xchg
orl
loope
adc
scas
pop
in
push
lds
data16
inc
fsubrs
aam
dec
das
cli
out
imul
pop
push
adc
adc
shl
jecxz
pop
sub
ljmp
add
imul
xlat
push
lods
cltd
mov
shufps
sub
fldenv
or
ds
inc
add
jmp
add
aad
test
mov
test
dec
xchg
sub
mov
in
jge
mov
xchg
xchg
sbb
lret
lea
out
xor
sarb
jle
lea
adc
fiadds
jecxz
adc
lahf
loope
xlat
leave
adc
jle
add
dec
sub
in
push
sbb
pop
pop
adc
mov
jp
jne
xor
aam
and
pop
outsb
pop
je
rcrb
call
pop
xchg
es
call
jo
lcall
leave
cmp
mov
mov
pop
icebp
pop
addr16
cmp
std
sbb
iret
out
and
rorl
mov
popa
jo
pushf
pop
mov
add
scas
in
fsts
cmpsb
dec
mov
hlt
mov
movsb
pop
sub
and
outsb
and
fidivl
aad
push
jge
scas
cwtl
mov
xchg
lock
jne
cld
jp
in
inc
adc
jb
sbb
pop
and
jne
sub
loop
lret
jns
mov
push
and
mov
mov
aad
xchg
add
jl
sub
test
sti
stc
add
int
xor
clc
cmp
cmp
pop
cmpsb
xor
loope
incb
negb
in
mov
mov
iret
cmp
lock
fwait
xchg
loop
fldt
test
loopne
pop
ds
outsl
mov
pop
dec
mov
push
sti
lock
xchg
push
push
pop
lods
sub
adc
ficoml
push
xor
push
mov
xor
or
sbb
scas
insl
sbb
cmp
fidivrl
dec
pop
frstor
insb
pop
jno
pusha
sbb
lcall
and
sub
push
mov
sti
lock
adc
ror
in
sub
aam
push
sbb
xor
fwait
iret
push
add
bound
movsb
fs
scas
mov
mov
mov
xchg
mov
addr16
and
mov
in
mov
mov
mov
mov
inc
rcrb
gs
cmp
push
int
adcl
jbe
lcall
add
jg
aam
leave
xchg
sbb
int3
adc
cmc
xchg
sub
dec
insl
jecxz
push
fwait
lods
add
movsb
fdivr
mov
sbb
sahf
fneni(8087
iret
stc
lods
cmp
inc
dec
jle
mov
ret
mov
push
int
xchg
hlt
xor
sub
push
fdivrs
fidivs
dec
int3
mov
popf
cmp
xchg
mov
jns
and
dec
testl
or
test
inc
mov
arpl
das
into
pop
out
xchg
mov
stc
inc
jb
dec
jecxz
inc
inc
sti
test
popf
adc
jo
dec
or
es
imul
mov
cld
mov
push
dec
jmp
ljmp
dec
outsl
incb
es
xchg
fadds
out
movsl
mov
or
cmp
or
fadds
loop
fs
xor
dec
fs
rorl
movsl
sbb
xor
lock
or
sub
cmp
insl
jnp
imul
stc
outsl
into
stos
nop
xchg
in
mov
daa
movsl
push
push
inc
pop
popf
mov
fdivs
push
push
cmp
jmp
mov
psubsw
sub
ss
in
mov
or
call
popa
dec
aas
scas
test
dec
jo
inc
mov
stc
push
mov
test
jae
dec
and
ja
test
inc
lea
cmpsl
pop
ror
inc
pop
sbb
mov
sbb
lahf
add
mov
loop
outsl
xchg
icebp
pop
inc
sahf
xchg
in
xchg
mov
ja
pcmpgtd
mov
mov
mov
jo
or
movsl
mov
mov
adc
xorl
mov
fwait
inc
stc
dec
cmp
loop
xchg
les
push
dec
add
mov
xchg
sub
cmc
mov
inc
add
inc
inc
xor
test
addr16
mov
ret
insb
xchg
add
cwtl
jl
jb
pop
mov
cmpsl
or
ror
pushf
lds
or
push
dec
jmp
dec
adc
outsl
das
dec
xor
addr16
fistpll
call
jp
dec
popaw
lods
mov
lds
out
add
and
adc
sub
fimull
roll
lcall
jns
in
shl
stc
cs
ret
ss
add
add
sbb
dec
and
inc
movsb
xlat
mov
daa
test
repnz
cmp
mov
mov
out
gs
jo
sub
rcr
push
subb
frstor
fs
cmpb
inc
mov
mov
enter
in
lods
or
cwtl
popa
mov
inc
pop
sub
lods
pop
pop
xchg
adc
xchg
sbbb
pop
mov
shl
dec
pop
push
sarl
mov
in
cmp
js
icebp
cmp
jp
dec
repz
es
testb
imul
sahf
sbb
push
jnp
or
cmp
jle
sbb
ss
and
mov
sub
shr
xchg
scas
jne
pushw
pop
mov
jmp
dec
in
add
push
js
pop
outsl
and
test
mov
loope
ja
imul
call
pop
std
jmp
and
lcall
fwait
outsl
cmpsl
in
pop
mov
pop
add
adc
cltd
andl
rcll
sub
ja
mov
insb
popa
data16
test
jo
push
movsb
inc
pop
movsb
ror
mov
scas
sbb
mov
mov
pop
test
sahf
mov
pop
cli
lcall
mov
shll
outsl
repnz
mov
into
add
cmp
jle
or
mov
test
negl
push
test
xchg
push
add
mov
mov
dec
sbb
sbb
or
gs
pop
push
shlb
mov
sbb
faddl
dec
pop
int3
mov
out
mov
idiv
add
repz
mov
lock
sub
lcall
imul
lahf
mov
mov
mov
inc
jnp
mov
xor
stos
jae
jno
push
lret
pop
pop
mov
inc
sbb
mov
mov
xchg
sub
pop
lcall
roll
shlb
or
ds
xchg
inc
les
add
xor
pop
arpl
cwtl
or
dec
jns
or
push
enter
inc
cmp
dec
jnp
add
inc
lods
andb
add
lret
cmp
aam
xor
or
lods
xchg
xchg
jp
mov
and
push
ljmp
jp
inc
insl
pop
int
jl
add
push
std
addl
sub
adc
sbb
push
lret
bound
stos
clc
bswap
cmpsb
pop
dec
jl
fistpl
ljmp
xchg
int
dec
cli
out
adcb
and
cmp
sub
sub
mov
imul
jle
ljmp
sbb
jg
dec
jae
fists
lret
lea
aas
mov
mov
lock
pop
dec
sub
cs
movsl
sub
rol
sbb
pop
mov
aas
pop
std
xlat
scas
xchg
inc
jae
pop
popf
dec
addr16
jno
pop
out
fsts
fcoms
and
fimull
cwtl
adc
out
lock
dec
dec
inc
nop
dec
aas
add
push
out
sahf
decb
mov
mov
aad
add
mov
dec
loopne
mov
aam
out
subl
hlt
rcrb
and
sbb
out
in
add
outsl
leave
and
sbb
inc
scas
pop
fcoms
xchg
lahf
hlt
sahf
repnz
push
lahf
cmpsl
call
push
or
lods
mov
bnd
inc
xor
add
in
movsl
fwait
mov
jmp
or
xor
sbb
lcall
imul
arpl
jns
scas
jbe
mov
fsubrl
pusha
mov
repz
push
jecxz
mov
shl
lock
mov
mov
push
cmp
inc
sbb
les
or
mov
fisttpll
movl
ret
mov
mov
or
dec
cwtl
cmp
ja
lds
dec
and
adc
leave
sub
sub
aad
mov
scas
and
cmp
jmp
mov
test
jmp
call
mov
mov
js
jbe
addr16
mov
sub
xlat
cmc
jl
pusha
mov
xor
mov
fists
imull
adc
test
mov
cmp
jl
loopne
mov
inc
out
jge
jle
cld
sub
xchg
iret
sbb
int
andl
insl
ds
sub
xchg
out
outsl
mov
add
sub
sub
xchg
push
push
dec
movsl
iret
xchg
cmp
mov
arpl
call
xchg
and
pop
fadds
pop
or
ljmp
xchg
mov
lret
add
outsl
fidivrl
xchg
js
jno
movsb
cmp
shl
mov
ljmp
mov
mov
cmp
dec
stc
xchg
inc
mov
lods
mov
and
xchg
mov
pop
scas
push
rclb
jp
data16
mov
push
les
dec
bsf
shrl
rorb
mov
dec
test
adc
sub
inc
mulb
xor
int
push
dec
int3
cltd
cmp
mov
cmp
std
xchg
adc
pushf
jge
jle
shl
lahf
or
in
dec
mov
xor
or
sbb
add
fidivrl
std
sbbl
mov
add
or
push
and
movsl
adc
out
jecxz
mov
add
gs
das
pop
push
bnd
lds
xchg
sub
lret
imul
test
loope
mov
sbb
fs
insb
shr
dec
dec
in
cmp
push
cmp
mov
xchg
incl
fs
mov
jecxz
mov
dec
outsl
fimull
cli
xor
repnz
jge
push
mov
iret
es
sbb
sub
inc
cmp
cwtl
mov
int
pop
cmp
repz
add
mov
inc
out
loope
fadd
sbb
xchg
sbb
inc
inc
jo
or
pop
inc
sahf
gs
cwtl
mov
or
out
mov
rorb
lret
cltd
mov
xchg
mov
orl
inc
pop
lret
sbb
push
ds
mov
inc
lea
cld
es
lock
xorb
enter
mov
out
daa
push
adc
inc
push
jl
mov
movsl
xor
mov
gs
or
sahf
and
fnsave
clc
stos
lock
fistpl
or
push
cmpsl
ljmp
mov
mov
xchg
sbb
lock
push
fcompl
pushf
arpl
inc
imul
iret
jne
cmp
jmp
mov
sahf
leave
jecxz
out
pop
adc
daa
xchg
in
mov
sbb
push
addl
lea
ljmp
ljmp
shl
test
xchg
sub
enter
pushf
fisttpl
rclb
loopne
imul
jg
mov
je
add
mov
lods
or
mulb
fimull
adc
pop
mov
clc
in
ja
push
or
std
mov
shrl
mov
push
std
push
mov
iret
popf
addr16
mov
cld
lret
sbb
add
jg
add
stc
xchg
pavgb
in
push
inc
cs
xchg
outsb
insb
fcoml
add
aas
dec
cmpsb
out
out
movsb
jp
dec
sti
nop
jle
js
sbb
and
xchg
mov
cs
xlat
cmp
in
ret
dec
and
hlt
xchg
cmp
push
shr
sub
push
imul
insl
mov
movl
imul
push
fstpt
aam
dec
push
out
enter
pop
leave
cmp
mov
inc
sub
mov
js
test
mov
cld
mov
mov
add
xchg
fs
mov
iret
dec
or
push
insl
jge
mov
jg
adc
mov
inc
and
mov
shlb
jbe
mov
je
jbe
xchg
call
xchg
mov
mov
mov
mov
addr16
mov
inc
mov
or
push
data16
jne
add
sub
ret
es
adc
bound
push
pusha
xchg
jge
gs
xor
adc
ljmp
mov
out
add
push
jge
rcll
jl
and
and
cmpsb
and
les
and
inc
in
das
imul
fwait
mov
push
pop
fwait
repz
push
cmp
not
shlb
dec
addr16
mov
insl
inc
push
jmp
sub
add
loope
imul
js
call
imul
jb
inc
jae
xchg
push
movsl
inc
pop
outsb
test
rcrb
mov
and
xchg
xor
orl
out
sbbb
loopne
out
pop
sub
cli
enter
je
or
call
and
or
jle
bnd
popa
into
test
leave
pop
push
add
leave
movsl
inc
and
daa
in
popa
cltd
imul
or
es
push
adc
mov
gs
fcmovnbe
inc
out
xor
or
pop
mov
dec
je
or
lods
xor
jle
adc
pushf
aam
cld
add
mov
adc
pushl
xchg
and
sbb
fstpt
loope
mov
ss
call
push
shrb
clc
jb
adc
mov
lcall
push
daa
jecxz
inc
and
cmp
dec
popf
out
fnstsw
pop
stos
bound
dec
dec
add
mov
add
out
addb
inc
mov
fmull
ficompl
mov
shlb
and
aaa
xchg
dec
mov
out
repz
push
hlt
add
xchg
jno
sbb
dec
or
insl
dec
lods
mov
out
lahf
and
int3
cs
movsb
rolb
das
repnz
jp
fsubrs
fstps
jmp
rcrb
sub
xchg
xchg
push
pop
push
mov
aam
jecxz
out
call
adc
mov
sbbb
sarl
mov
push
mov
push
cmp
lahf
lock
mov
sbb
lods
or
lret
les
jle
mov
jecxz
inc
mov
fwait
ret
jge
fwait
mov
jmp
les
cmp
out
sbb
ljmp
and
add
adc
lea
iret
cmp
add
mov
lea
or
lods
cltd
sub
mov
insb
lret
add
cmp
pop
xlat
gs
or
cs
bound
call
fcmovbe
add
xor
mov
push
pop
addr16
sahf
sub
ljmp
insl
mov
push
ret
aaa
ss
jg
inc
pop
notb
movsb
fcoms
lahf
call
fistpll
fisttpl
sub
cmpsl
push
cwtl
shll
call
dec
mov
mov
mov
mov
lock
pop
xor
jge
fsubl
and
inc
dec
add
out
jnp
incl
mov
cmp
cmpsb
sar
and
cmp
jbe
jle
pop
ss
sbb
decl
push
loopne
push
inc
pop
nop
fwait
add
enter
xor
and
stos
xchg
or
push
jmp
scas
les
sbb
jp
imul
push
push
add
xor
sub
and
push
popa
pop
mov
cltd
dec
mov
or
xchg
fldl
xor
pop
mov
and
aas
cmp
mov
and
in
jmp
scas
das
stc
aam
pop
jp
arpl
jno
les
mov
push
jle
popf
pop
movb
loopne
adc
inc
cmp
icebp
out
sbb
adc
aam
inc
jae
jno
cmpsb
xor
ret
cltd
dec
mov
cmp
mov
sub
cmp
fidivrs
fimull
jge
insl
sbb
inc
stos
sarl
clc
jle,pn
and
rol
or
scas
inc
pop
jns
in
or
fs
xchg
fdivr
or
shrb
icebp
jmp
outsb
mov
ss
imul
iret
cld
inc
aaa
dec
sti
orb
les
pop
cmp
repnz
aad
jae
xchg
push
psubb
and
or
sbb
adc
repz
clc
mov
ja
push
or
jae
mov
xor
jg
cmpsb
or
mov
arpl
push
jge
lret
push
xor
add
push
and
mov
and
cmp
adc
jb
repnz
jb
add
call
dec
pop
lret
cmpsl
jnp
aam
mov
loope
or
popf
or
or
mov
mov
test
test
les
mov
jp
sub
out
adc
jb
cmc
adc
pop
mov
hlt
mov
and
ja
cmp
daa
ss
jno
xor
addr16
aad
aam
out
sbb
cmp
fmuls
mov
enter
cld
mov
mov
pusha
out
mov
shlb
dec
shlb
ja,pn
adc
xor
or
sbb
mov
lea
mov
jo
push
pop
stos
xchg
nop
mov
clc
add
xchg
scas
push
pushf
lea
popf
add
addb
das
ror
call
clc
jp
push
xor
add
test
cmpb
push
push
mov
pop
or
fiadds
jmp
mov
xchg
or
cmp
sbbb
dec
mov
xor
lret
dec
icebp
loope
cld
dec
mov
scas
fs
into
cmc
pop
test
push
sbb
shrb
test
test
jbe
sub
mov
jbe
out
jne
ljmp
push
iret
jae
call
loope
pusha
fsubs
add
add
xchg
cli
xlat
cld
imul
fucomp
mov
mov
hlt
jno
lea
out
dec
adc
sti
pop
jecxz
push
stos
lods
pop
mov
cmp
fists
iret
and
sahf
iret
int3
xor
sbb
push
icebp
cmp
pop
aaa
lods
xchg
loopne
outsl
add
inc
mov
and
adc
movsl
dec
cld
imul
fs
sub
jl
push
imul
xchg
sahf
stc
das
sub
xor
xchg
out
jecxz
mov
cmp
xchg
negl
cld
inc
or
xchg
push
adc
loope
and
pop
pop
sti
shl
fdiv
cwtl
xor
mov
int3
mull
insb
ja
scas
jo
inc
stos
push
xor
jb
mov
les
xchg
adc
movsb
xorl
loopne
mov
xchg
and
ja
inc
adcl
push
mov
dec
sbb
inc
outsl
push
decb
or
sbb
cwtl
not
jle
mov
jle
repnz
push
aas
push
divl
sahf
sub
fimuls
inc
sub
hlt
and
stos
mov
xchg
in
mov
stos
mov
mov
popa
gs
sub
xchg
or
fildl
pop
mov
xchg
imul
dec
inc
pushf
outsl
insb
mov
fst
mov
pop
addr16
out
cmp
adc
jbe
stc
dec
aas
push
sub
and
inc
imul
orb
mov
dec
jae
divb
xor
outsb
ret
sahf
scas
push
add
jno
or
mov
icebp
out
mov
jecxz
ret
loopne
add
cmp
lea
fidivrl
adcl
xor
je
xchg
ret
loope
popa
stc
cmpsb
mov
stos
pop
add
mov
lret
mov
call
incl
enter
test
mov
sub
jae
jl
sub
mov
pop
sub
mov
dec
xchg
lds
sub
jbe
std
sbb
xchg
sub
mov
addr16
call
adc
test
test
xchg
cmp
mov
fcomps
ds
push
sbb
int3
std
sbbb
repnz
out
addr16
movsb
pop
orb
sub
add
loope
mov
pop
mov
jb
mov
fs
push
pop
test
pop
and
adc
cltd
sbb
mov
push
mov
mov
es
cwtl
mov
or
insb
inc
mov
in
aam
lods
call
cmp
cmp
jno
dec
sahf
mov
xor
cwtl
cwtl
ss
xor
push
xor
mov
add
test
movsl
xchg
out
cltd
les
fnstenv
into
jle
dec
in
xor
jg
inc
data16
mov
cmp
pushf
push
out
scas
mov
sbb
mov
movsl
xchg
cmp
pop
dec
jne
cmp
cmp
shll
add
imul
test
sub
test
xchg
cmp
inc
and
or
jae
outsl
or
sbb
xchg
pop
mov
mov
shlb
insl
insl
sahf
push
leave
cli
sub
mov
pop
and
xchg
pop
es
sub
sub
mov
mov
movsb
ficoml
cwtl
mov
lock
cltd
xor
test
mov
cmp
fdivl
sub
jb
xchg
or
aad
fmul
orl
jns
adc
mulb
repz
shlb
lret
xchg
data16
popf
jmp
sbb
mov
push
mov
or
pusha
mov
jmp
imul
dec
test
movsb
rorb
gs
push
pop
lret
push
jns
cmc
and
lods
sub
cli
shlb
jno
adcb
mov
jns
fcoms
jg
dec
dec
or
clc
adc
shrb
push
inc
popf
orl
cld
lret
loopne
lods
cmp
fs
popf
sahf
sub
incl
loope
inc
push
mov
push
nop
or
adc
lds
push
test
fcomps
repz
mov
push
dec
frstor
psubb
aaa
das
mov
imul
cs
fisubl
in
mov
adc
test
sub
adc
popl
subb
pop
mov
lods
cmp
scas
es
or
adc
push
xchg
jb
leave
mov
js
sbb
pusha
lahf
pop
leave
adc
lea
pusha
mov
sbb
fadd
pop
fsts
pop
dec
inc
test
mov
int
enter
and
iret
dec
out
addb
pop
pop
or
pop
lods
sub
sbb
iret
repz
aad
sub
cmp
and
xor
insb
xor
lahf
gs
add
rcl
out
ljmp
jb
fbstp
mov
in
aad
out
mov
xchg
lock
test
cwtl
leave
cmovb
push
fwait
mov
out
mov
sbb
jae
int
outsl
sbb
lret
addr16
sub
les
mov
jne
mov
test
jp
cmp
daa
sub
or
push
cmp
xor
cmpsl
mov
lret
cld
cmpb
in
cltd
imul
and
inc
roll
mov
adc
cmp
cld
sbb
aaa
ss
je
sti
cld
ror
inc
pop
mov
rol
sbb
mov
inc
cmpl
or
fadds
jg
dec
sbb
ret
xchg
or
clc
push
and
adc
and
std
mov
out
jb
xchg
out
pop
add
sub
shlb
mov
ffree
les
pop
test
mov
fstpt
push
cmpsb
pop
mov
cmp
mov
or
shlb
inc
sub
hlt
cmp
push
sub
jg
push
mov
btr
test
cmp
stos
xorb
shld
inc
push
int3
or
sarb
mov
loopne
xor
cmpsb
xor
cs
daa
dec
daa
aaa
pop
and
out
mov
xchg
pop
add
jo
pushf
xor
pop
fwait
sbb
aam
shld
aaa
hlt
mov
enter
ret
mov
mov
insl
ret
cwtl
and
stos
jae
xor
scas
test
pop
dec
mov
nop
lds
dec
enter
mov
adc
xchg
sub
roll
dec
xchg
jnp
xchg
lea
cmp
out
outsb
push
pop
inc
sbb
dec
out
loope
fadds
add
mov
fwait
jnp
mov
dec
xor
add
cmp
push
jp
je
aaa
pop
in
push
popf
ficoml
pop
sub
adc
sub
adc
fldcw
leave
jmp
dec
inc
mov
jle
adc
adc
addl
movsb
fdivs
aam
iret
or
adc
pop
je
or
cmp
add
inc
or
sbb
pusha
add
fsts
xchg
push
dec
mov
push
mov
push
mov
xchg
jno
push
add
fwait
cwtl
adc
sbb
inc
mov
cmp
xor
pop
pop
pop
int
out
lcall
or
rcr
mov
mov
pushf
or
cltd
push
popa
ret
stos
dec
imul
into
data16
cmp
loop
jnp
push
cmpsl
shlb
mov
push
mov
call
es
dec
xor
sub
and
add
inc
pop
adcb
inc
int3
push
out
mov
or
xchg
shll
adc
shl
xchg
sbb
dec
add
int3
pop
scas
lock
mov
pop
cmp
lar
xor
inc
inc
cs
or
mulb
cmc
scas
xchg
add
sbb
or
inc
sbb
xor
loopne
outsb
cli
mov
add
fimull
push
or
shlb
cmpb
pop
dec
sbb
scas
xor
xchg
in
addr16
mov
loopne
icebp
mov
lds
sub
inc
imul
push
lcall
jge
and
xchg
test
dec
mov
xor
add
daa
fdivs
mov
in
icebp
xor
push
xchg
push
sub
mov
pop
mov
xchg
lret
insb
xor
scas
rorb
cmp
insb
lret
sub
push
data16
mov
sbb
xor
jge
pop
push
inc
mov
push
xchg
mov
ss
fsubl
xlat
pop
xor
dec
arpl
xchg
push
push
push
jno
fldz
push
rcrl
adc
pop
push
sub
repnz
inc
stos
icebp
movsb
pop
sti
scas
cs
test
xchg
add
ja
sbb
leave
aaa
cmp
rorb
js
mov
push
ret
inc
xor
repz
out
fists
sbb
test
fnstcw
lea
hlt
dec
jmp
pop
xchg
lcall
jbe
fcomps
cmpsb
fldpi
outsb
adc
mov
rolb
jbe
push
out
mov
lods
test
iret
mov
es
lea
or
std
adc
rolb
sti
out
scas
jb
jg
daa
scas
les
fnsave
jbe
in
pushf
ret
adc
outsb
mov
int
lea
mov
mov
push
cmpsl
mov
pop
cmp
mov
push
xor
xchg
int
jns
leave
idiv
test
xchg
das
cmp
jle
mov
xchg
sbb
leave
jle
dec
mov
adc
leave
sub
push
mov
inc
dec
push
sbb
clc
lahf
inc
jns
adc
pop
pushf
xchg
push
pop
or
and
repnz
mov
pushf
push
cmpsl
xchg
jo
inc
int
je
adc
push
bound
and
hlt
popa
data16
cmp
mov
cmpsl
xor
lea
mov
repz
out
mov
mov
in
std
xor
xchg
push
xor
ror
mov
mov
test
and
jbe
mov
pop
adc
js
and
ja
sub
clc
xor
outsl
lea
inc
ja
sub
mov
addl
in
stos
mov
mov
out
inc
es
adcb
mov
cmp
mov
iret
xor
or
xchg
xchg
push
inc
sub
cmp
or
adc
in
push
sahf
mov
adc
inc
mov
mov
dec
push
ss
cmp
int3
out
xchg
xchg
dec
stc
in
push
rcrb
imul
shl
mov
popa
fcmovb
loop
insl
push
xorl
arpl
sub
lea
imul
clc
add
daa
out
mov
fmuls
leave
jne
sarb
xor
pop
jle
jmp
adc
int3
fbstp
int3
fisubs
js
mov
dec
sub
and
test
loopne
imul
cmp
ljmp
dec
sbb
xor
les
cmp
mov
in
cmp
aad
jb
mov
fadds
lock
das
hlt
push
mov
imull
idivl
push
mov
outsl
sbb
popa
add
cmp
mov
ja
popf
pop
cmp
insl
out
faddl
push
jbe
in
movsb
push
or
mov
mov
cwtl
pop
cmp
dec
mov
cmc
xchg
xor
mov
dec
mov
imul
mov
call
insl
shr
shll
jle
fldt
pop
hlt
arpl
imul
jbe
clc
pop
loope
fpatan
movsb
push
mov
sahf
test
dec
lcall
rcrb
cwtl
in
fcmovnbe
repnz
xor
or
pop
mov
fnstsw
pusha
rcll
inc
xchg
mov
pusha
jae
adc
cld
sar
push
sbb
and
lcall
sub
push
lret
dec
dec
negb
cltd
outsb
test
xlat
pop
jge
cmp
mov
idivl
fstpl
in
outsl
fcmovb
pop
cmp
loope
cmp
into
imul
ret
test
daa
shlb
xor
or
clc
sbb
pop
jbe
pop
sbb
rolb
lock
in
xor
popa
movsl
xchg
or
shll
push
aam
shll
and
lahf
pop
incb
mov
push
jmp
mov
add
cmp
jb
fiadds
arpl
push
dec
cmpsl
mov
jl
push
xor
sbb
cmp
test
imul
daa
loop
pop
push
xchg
cmc
in
cld
mov
ficoml
ret
pushf
movsb
dec
inc
lock
popa
adc
push
mov
jne
into
mov
and
dec
jo
int
inc
loope
or
inc
iret
dec
push
inc
pop
pop
xchg
or
insl
jnp
ficompl
xor
cmp
rclb
pop
pop
idivl
xchg
pop
andb
mov
pop
jp
repnz
adc
xchg
mov
mov
lret
mov
xor
in
push
pop
and
jo
dec
int
ljmp
lock
mov
add
dec
adc
xchg
in
lahf
add
xchg
aad
ret
adc
lcall
pop
jge
leave
add
inc
pop
adc
and
pop
mov
call
mov
push
lret
fidivrs
jnp
cltd
push
inc
add
mov
cltd
ss
xor
fdivrl
out
fisubl
ret
jbe
scas
pusha
adc
lahf
aas
sub
jno
clc
and
dec
jmp
ret
lods
cmp
aad
push
ds
dec
roll
push
jo
mov
repnz
aad
mov
sbb
and
push
mov
mov
fnstsw
or
jne
dec
and
cmp
and
imul
push
xchg
test
xchg
push
jecxz
mov
xchg
roll
inc
stc
out
or
das
jg
mov
dec
lret
mov
jg
jno
repnz
pop
add
sbb
push
fadd
cmp
shlb
in
jnp
mov
add
int
sbb
std
lds
scas
xorl
imul
mov
das
test
xchg
int
or
fdivrl
in
xchg
out
push
push
daa
jne
ljmp
fsubrs
xor
in
inc
cmp
jmp
xor
ljmp
adc
aad
out
shrb
xchg
or
dec
xor
xchg
sub
icebp
sbb
inc
scas
mov
inc
push
and
sbb
inc
arpl
inc
xorb
cmp
add
sbb
mov
leave
mov
inc
dec
pop
in
pop
sti
adc
fnsave
sbb
movsl
cmp
and
adc
rol
cmp
sbb
xorl
repnz
xchg
int
aaa
inc
inc
sub
hlt
int3
fwait
jle
mov
fwait
mov
shlb
inc
stc
and
cld
test
jmp
jbe
xchg
inc
xchg
mov
andb
loop
add
push
mov
xchg
xor
iret
push
lods
xor
cmpsb
pop
jmp
jl
out
sbb
stos
jecxz
daa
outsl
or
and
das
mov
mov
insl
sbb
movb
in
xchg
sub
ljmp
xchg
les
sub
xor
sbb
and
cmp
and
out
cltd
imul
enter
mov
int
fistpl
push
adc
mov
jmp
scas
pop
sbb
and
mov
and
and
daa
inc
fbstp
and
int
iret
aas
mov
in
pop
inc
pop
aad
sbb
js
cmpl
mov
sub
push
cmpsl
cmp
lahf
addr16
and
mov
call
push
jmp
or
lahf
dec
stos
mov
dec
sbb
sub
aam
fwait
jle
lcall
in
in
gs
push
aad
nop
pusha
outsb
inc
inc
in
push
add
cwtl
inc
dec
pop
hlt
sbb
xchg
int
or
ret
aad
insl
pop
or
repnz
or
leave
shl
fsubrp
ss
jle
imul
push
cmc
mov
cmpsl
push
outsl
pushf
dec
sbb
fcomp
fs
mov
jmp
aas
into
xchg
xchg
xchg
js
jmp
test
dec
std
mov
mov
jg
fdivr
inc
adc
push
fldl
test
shrl
push
xor
sar
lcall
imul
mov
arpl
inc
sub
adc
ret
pop
lcall
mov
jbe
push
aaa
rcl
mov
in
adc
ret
mov
adc
rcrl
mov
jg
fdivrl
mov
cld
ljmp
std
and
xor
adc
add
pop
gs
out
sbb
test
adc
sbb
pop
jp
add
push
mov
inc
shll
mov
cmp
loope
popf
or
in
jb
xor
fwait
lea
aad
jl
cmp
mov
and
icebp
ss
arpl
jle
lahf
cs
cs
push
cmp
ror
lea
push
pop
addr16
sbb
and
push
loop
sbb
roll
mov
in
add
test
jno
jns
jae
xor
cwtl
push
mov
int
push
js
add
fsubr
jo
stos
jo
rorl
js
jge
scas
gs
divl
loope
push
rol
je
push
sti
fmuls
xchg
int
int
fidivl
mov
mov
loopne
xor
pop
js
and
imul
push
fdivl
pop
push
popa
out
hlt
xchg
popa
aaa
push
xchg
andl
nop
cli
xchg
mov
leave
sub
fbstp
loop
stos
push
in
sub
cmp
call
pop
fstl
loopne
add
xchg
cmp
xlat
jnp
cld
sub
out
pop
adc
cmp
dec
icebp
xchg
data16
dec
lahf
jbe
into
or
out
sbb
shrb
dec
data16
loope
enter
in
loope
lret
mov
dec
out
int3
sbb
aas
cmp
sbb
xchg
ret
dec
faddl
rcrb
jecxz
sub
mov
loope
xchg
mov
push
add
push
dec
sbb
sub
xchg
or
push
in
arpl
push
outsl
or
fidivrs
popa
icebp
jg
ror
mov
out
jno
lods
sub
cli
lods
mov
sbb
adc
inc
into
je
fsubs
mov
ljmp
adc
or
or
insb
or
sti
push
sub
cmpsb
imul
mov
inc
aam
sbb
adc
arpl
leave
or
add
sbb
mov
mov
aas
daa
xor
call
cmpsl
add
jmp
push
leave
adc
cmp
push
aas
mov
xchg
or
dec
loopne
add
adc
inc
cmc
stos
lret
ror
mov
test
scas
test
call
sbb
insb
jmp
jb,pn
xchg
nop
dec
fldenv
push
push
push
stos
adc
je
mov
inc
inc
and
outsl
rolb
inc
lds
sub
push
mov
fnstsw
aaa
jns
sub
xchg
es
add
sbb
sub
shll
adc
mov
add
xchg
rcr
mov
lea
mov
jecxz
push
push
mov
jle
push
and
movsl
inc
xchg
xor
push
add
nop
mov
loop
jo
std
int
mov
mov
sbb
mov
push
sbb
mov
lds
std
or
cmp
mov
jo
int3
push
pop
jb
outsl
sbb
test
lahf
cmc
and
dec
ret
stos
cwtl
loop
mov
mov
repnz
push
aad
icebp
xor
ret
mov
add
iret
lea
enter
mov
xor
and
and
inc
jbe
adc
pop
or
ljmp
mov
cli
bound
mov
pop
sar
add
into
es
leave
ret
sti
cld
pop
sbb
aas
add
dec
out
adc
cld
push
and
mov
rol
xor
sub
push
daa
bound
mov
mov
push
add
daa
pop
mov
and
in
cmp
inc
inc
xchg
scas
pop
test
mov
inc
clc
clc
xorl
xchg
sbb
dec
outsl
or
fdivs
call
inc
xor
out
test
testl
in
and
xchg
or
je
or
pop
shlb
sub
jae
movb
push
js
gs
ror
mov
pop
push
mov
mov
popf
jnp
or
aam
or
rorb
call
lea
xchg
or
ds
xor
loope
xor
xor
adc
repnz
mov
pop
sahf
adc
movsl
pop
aad
mov
lret
frstor
mov
or
clc
adc
xchg
dec
xchg
mov
jmp
xor
mov
pop
gs
push
andl
out
push
test
inc
int
fcompl
push
mov
or
inc
loopne
and
mov
mov
nop
clc
jo
jae
dec
mov
ret
insb
fs
das
xlat
or
into
add
cmp
in
cmc
push
lds
imul
test
scas
adc
jl
js
add
mov
out
bound
loopne
jbe
out
push
jae
mov
arpl
mov
or
sub
lods
pop
das
repz
sbb
lret
mov
cmp
sub
mov
sbb
jnp
mov
pop
shll
xor
lock
cwtl
push
sar
int
cmp
mov
mov
or
aad
sbb
stc
push
testb
insb
pop
cmp
xchg
inc
mov
imul
sarb
imul
shlb
insb
icebp
jmp
incl
push
push
cmp
sbb
sbb
enter
inc
pop
or
mov
ss
shr
loopne
inc
sub
mov
mov
pushf
mov
or
xor
mov
mov
lds
xchg
lds
adcb
out
jno
sahf
fucomi
jnp
test
aas
nop
sub
in
insb
pop
cmp
push
xor
pop
xchg
bound
push
dec
sbb
dec
dec
outsb
pop
cmpsb
push
pop
or
idivl
enter
jb
jmp
pop
shr
dec
dec
mov
dec
mov
jge
stos
fdivl
mov
shrb
inc
lods
add
and
sti
dec
lret
mov
mov
jbe
decb
inc
lea
add
jl
pop
adc
leave
ret
pusha
test
push
leave
loop
movsb
out
fstpt
and
xorb
xchg
test
pop
dec
sbb
test
jae
lods
xchg
xor
not
sub
in
lds
mov
pop
dec
into
test
loope
movl
dec
or
into
je
mov
push
sbb
pusha
scas
push
sbbb
pushf
ja
adc
pop
pop
pop
mov
adc
inc
mov
push
and
movl
mov
inc
jp
adc
sbbb
mov
out
add
sbb
fidivrs
mov
jmp
cwtl
cmp
xchg
fistps
push
out
push
lock
add
lods
out
mov
mov
pop
jo
push
sbb
mov
mull
test
xchg
int
scas
pop
out
sbb
push
xchg
rcr
mov
or
adc
pop
jne
add
pop
lret
imul
cmp
xor
movd
mov
mov
xlat
stc
in
jb
jo
inc
and
add
mov
sub
add
das
dec
jns
xchg
stos
jno
insl
xor
or
mov
and
das
add
and
and
sub
mov
data16
mov
add
dec
outsb
dec
pop
popf
sbb
mov
es
loop
test
xchg
mov
xchg
addr16
or
loope
and
outsl
out
cmp
lds
fists
or
cmpsb
xor
sub
inc
data16
or
inc
mov
adc
sub
jge
fwait
or
lcall
dec
dec
negb
mov
test
repz
scas
sbb
aad
cli
or
cld
popf
jnp
jnp
mov
mov
pop
or
pop
imul
sub
push
fldt
int
pop
das
pop
adc
js
ja
xchg
jae
jg
xor
dec
loopne
mov
or
cmp
int
enter
pop
fstpl
jb
test
shll
mov
sub
pop
outsl
pop
int
sbb
test
and
pop
push
or
lret
out
mov
mov
test
bound
cwtl
xlat
stc
jmp
mov
cmpsl
ss
push
cs
or
mov
xlat
adc
xchg
int3
add
aad
jg
mov
out
pop
lret
add
and
cmpl
jo
repz
or
aaa
aam
enter
sbb
adc
mov
ds
xor
sbb
aad
ret
ds
mov
inc
fistpl
xchg
sub
push
int
mov
mov
dec
clc
sahf
pop
jae
or
imull
shl
push
in
xor
ror
mov
sarb
cmp
sbb
sub
sub
movsl
adc
das
inc
mov
inc
dec
jl
sub
push
popa
and
into
push
add
mov
xchg
pop
xor
push
pop
loop
xor
sti
fs
loope
sub
or
push
inc
add
or
dec
enter
mov
sub
xchg
ret
out
jne
int3
push
mov
inc
mov
push
or
jecxz
and
and
or
hlt
ds
mov
adc
ficomps
adc
sub
cmp
test
lret
jge
outsl
cld
test
ss
mov
jmp
cmp
insb
xchg
in
sub
jp
popl
rcll
out
in
lahf
stos
addr16
mov
mov
hlt
data16
and
cltd
dec
cmp
aad
cli
popa
jge
rcl
mov
push
lcall
popa
loope
jmp
push
adc
push
adc
adc
push
cmpsl
sbb
pop
jl
mov
mov
fisttps
push
mov
leave
mov
jge
in
iret
inc
mov
jnp
jns
cli
push
jg
mov
cmc
popf
repnz
aas
push
inc
stc
orl
xchg
fwait
sti
xchg
sbb
jo
ret
jns
jb
cmpsb
das
enter
pushl
push
pop
jnp
test
mov
ljmp
dec
inc
fucomp
insb
or
out
movsb
and
enter
xor
xor
and
es
mov
mov
pushf
loopne
insb
ficompl
xchg
cmc
sbb
ja
rcl
ljmp
loop
mov
movsl
jnp
xchg
inc
lea
fbld
int3
int
or
negb
add
sub
and
lcall
or
push
je
push
push
mov
mov
inc
add
adc
imul
or
out
sub
and
adc
outsb
dec
xor
sti
fs
mov
insl
stos
mov
test
mov
xchg
sbb
adc
dec
outsl
inc
cwtl
mov
or
popf
arpl
enter
or
and
movsb
mov
mov
jge
or
sub
add
and
fildl
scas
or
bound
xchg
cmpsl
dec
sbb
cmpsb
repz
add
pop
scas
lea
sub
xchg
cltd
dec
les
in
push
cmp
out
outsb
cmp
stos
inc
shll
into
inc
and
stos
and
dec
ror
and
int3
mov
xchg
scas
sti
inc
inc
adc
sbb
icebp
or
sbb
xchg
mov
sbb
and
fsubl
dec
or
or
jnp
inc
jb
xchg
pop
je
xlat
jo
addr16
xchg
mov
popa
mov
cwtl
mov
pxor
mov
add
and
push
adcb
sbb
adc
out
in
add
lret
repz
push
and
in
es
jae
fidivs
mov
sub
mov
fstpl
cmova
cld
cwtl
xchg
inc
loop
push
lods
pop
stos
push
scas
sub
xor
test
mov
push
aaa
push
pop
test
ret
out
add
aaa
push
push
cmpb
push
sub
fwait
fwait
inc
xchg
repnz
ret
inc
or
add
inc
xchg
test
rcrb
xchg
pop
mov
or
jno
das
lret
ja
pop
insl
lretw
and
dec
hlt
push
sub
ficomps
gs
rcrl
scas
jns
ret
out
dec
rcrl
inc
push
iret
aaa
test
pop
jecxz
subl
mov
jl
lods
cmpsl
jg
pop
dec
push
push
pop
icebp
mov
hlt
mov
ljmp
or
mov
and
mov
incb
std
sbb
mov
fadd
lods
sub
rolb
stos
in
jmp
lret
xchg
xor
adc
jnp
jne,pt
inc
in
aas
xor
mov
cmp
test
aam
push
adc
pop
or
out
mov
adc
fnsave
jnp
not
adc
gs
fsubrs
iret
iret
lahf
and
pop
outsb
mov
or
rclb
mov
cwtl
xchg
xor
push
xchg
sub
sarb
je
sbb
mov
dec
xchg
int
mov
fiaddl
add
enter
fistl
mov
cmpsb
push
adc
xchg
int
outsl
adc
out
insb
mov
mov
enter
cmp
mov
std
leave
clc
xor
in
xchg
in
cmp
jmp
icebp
out
cltd
cld
pop
add
or
sahf
inc
mov
ret
inc
fs
xchg
adc
in
scas
pop
dec
mov
imulb
add
sti
xchg
push
or
xchg
or
xor
xor
insl
andl
movsl
pushf
sub
pop
pop
xchg
cmpsl
jne
inc
xlat
fcoml
cmp
push
in
jnp
out
jle
sbb
push
dec
or
sub
mov
jecxz
fcomps
mov
cmc
dec
inc
jne
or
mov
push
mov
imul
ret
push
push
jne
or
cmpsl
sbb
adc
xchg
sbb
stos
mov
les
into
push
add
cmpsb
imul
xchg
loope
or
scas
dec
scas
cwtl
lock
xor
cmp
testl
jle
ljmp
aad
xlat
rcrb
mov
pop
ficoml
mov
insl
dec
add
loope
push
push
sbb
ljmp
jge
push
pop
pop
and
mov
add
in
push
jle
loope
lret
push
fisubrs
push
xor
jecxz
or
lret
cmp
es
xchg
fsubp
and
sahf
scas
insl
and
xchg
push
cmp
test
mov
pop
mov
clc
test
inc
dec
push
repnz
push
mov
int3
xchg
mov
or
xor
rcl
mov
mov
ret
mov
fwait
cmpb
mul
inc
push
xchg
cmp
in
mov
xlat
inc
dec
hlt
pop
inc
je
sub
mov
mov
mov
mov
cmp
cmp
fwait
in
dec
sub
and
fstpl
push
adc
inc
push
mov
sti
repz
loope
popa
ret
cmp
imul
jmp
test
or
or
mov
push
scas
sbb
ja
mov
bswap
sbb
cmp
ljmp
arpl
cltd
sahf
out
pop
shr
xchg
mov
lahf
leave
dec
pop
inc
test
mov
xchg
xor
inc
dec
insl
shl
inc
mov
xor
pop
pop
jge
scas
jp
test
out
adc
stos
es
jnp
or
jae
push
fisttpl
push
stc
and
rcl
gs
dec
out
or
into
out
xchg
jmp
popa
cmpsl
and
mul
aad
dec
push
lahf
enter
adc
mov
mov
mov
cmp
xchg
clc
mov
cwtl
push
mov
sbb
stc
jb
sbb
add
outsb
push
out
sbb
enter
fdivp
aas
xor
cld
inc
outsl
add
shrb
lret
jmp
sub
and
ss
mov
fdivr
inc
xchg
and
stc
pop
mov
lahf
mov
movsb
test
xchg
lahf
mov
inc
cld
in
sar
scas
sbb
push
lret
xchg
push
inc
adc
ret
addr16
xor
lret
icebp
in
sbb
cmpsl
lds
outsl
xor
push
in
daa
fcmovnbe
inc
nop
jg
jecxz
pop
fucomi
sbb
cmpsl
les
test
inc
adc
sub
aas
sub
out
xor
mov
sti
jnp
pop
imul
lea
cmpsl
or
mov
loopne
repnz
sbb
rorb
mov
insl
scas
repnz
mov
sbb
loopne
sahf
cmp
mov
or
sbb
dec
push
dec
lods
sbb
add
call
lods
fwait
mov
push
pop
call
inc
fdiv
sub
ret
push
leave
xor
imul
jo
push
int
aad
ja
push
xchg
pop
and
ja
call
inc
out
mov
jns
shlb
addr16
pop
push
hlt
sahf
popa
jecxz
sti
adc
lcall
jbe
std
clc
aad
test
insl
in
pop
scas
or
cmp
pop
inc
adc
in
pop
ret
fimull
mov
jle
push
mov
jnp
adc
sti
iret
jg
mov
lods
aam
ljmp
fstps
xchg
in
push
ljmp
in
out
imul
scas
andb
movsl
sub
cmp
jg
mov
cmp
hlt
pop
sub
hlt
inc
nop
and
push
ret
out
lret
lods
repnz
or
adc
add
jne
adc
dec
sub
fwait
push
pop
push
xor
pop
roll
hlt
js
arpl
push
xchg
add
mov
mov
mov
aam
jmp
repz
inc
sub
and
mov
or
fimull
add
sbb
push
pop
pop
out
shl
addl
imull
xchg
xor
in
dec
mov
mov
sbb
push
dec
push
test
ret
inc
sahf
fdivrl
pop
xchg
add
sub
jo
pop
sbb
std
js
jmp
cld
stos
fs
andl
add
xchg
pop
or
cmc
jecxz
push
loopne
mov
xor
mov
bound
test
sarb
mov
out
sahf
iret
push
pusha
mov
cmp
std
cld
adc
dec
loopne
mov
insl
mov
negl
dec
sub
adc
mov
das
pop
cmc
js
push
mov
sub
scas
and
outsb
mov
fs
pop
inc
adc
fbstp
lods
iret
inc
or
and
ss
mov
std
xor
stos
test
loopne
push
sub
xchg
mov
mov
adc
setg
mov
cmpsb
mov
xorb
or
mov
jo
sub
cld
jae
les
pop
push
mov
mov
mov
cmp
in
in
xchg
cmp
jnp
dec
push
clc
sbb
fisubrl
cmpsl
adc
lea
push
xor
sbb
sub
and
aaa
pop
cmp
pop
testb
xchg
pop
mov
in
psadbw
iret
loopne
out
jbe
and
xlat
stos
xorl
and
fwait
or
and
mov
jmp
inc
push
subl
sbb
jnp
icebp
mov
stos
mov
sbbb
std
bound
sti
shl
jo
push
das
mov
lods
aad
inc
and
pop
and
cmc
push
call
or
rcr
mov
xorb
and
ds
jbe
jmp
cs
cmp
inc
sahf
jecxz
call
lcall
adc
sbb
cmp
scas
sbb
addr16
out
jp
cmc
fistpl
mov
ret
jp
and
add
and
cmp
dec
sbb
stc
jbe
xchg
fdivrl
adc
decb
arpl
pusha
adc
scas
cmpsl
shll
and
push
arpl
pop
jo
rcr
int3
aad
sar
lods
jno
inc
add
stc
lock
jae
mov
and
test
stos
sbb
push
add
mov
movsl
pushf
inc
repnz
outsl
pop
sbb
sub
jne
enter
fimuls
cmp
scas
xchg
in
cld
jmp
mov
pop
mov
dec
ds
cmpsl
les
pop
xlat
sbb
cmc
inc
gs
lea
nop
push
cmp
pop
gs
lds
push
jo
jp
xor
and
lahf
mov
mov
rol
push
sub
movsl
adc
es
sbb
xor
adcb
inc
xchg
dec
lods
cs
jl
jb
or
mov
iret
je
dec
out
inc
xchg
aad
mov
cmp
xor
outsl
cmpsl
sbb
push
fmull
aam
xlat
popa
addb
sbb
sbb
dec
stos
dec
inc
scas
shlb
sub
and
nopl
pop
cltd
sbb
dec
inc
dec
lods
or
xchg
mov
dec
cs
stc
cmpsb
test
pop
mov
adc
push
mov
fmuls
jmp
sahf
cmp
jne,pt
mov
inc
xor
loope
pop
cmp
hlt
ss
imul
and
mov
mov
jle
mov
lods
jle
jecxz
shll
mov
rolb
shrb
fs
cmp
jo
inc
and
push
scas
dec
aas
or
lahf
fldl
cmpsb
push
add
jl
sti
dec
inc
sbb
aas
leave
mov
outsb
sub
pop
mov
push
sub
and
ja
rolb
repnz
sbb
push
jne
sub
lds
pop
fldl
stc
stos
lods
adc
enter
scas
fdivrp
push
xor
pop
insb
mov
leave
int3
sbb
sub
call
cmp
jg
mov
xor
lods
mov
cwtl
xchg
fidivrs
pop
imul
pop
daa
int
xor
aaa
mov
outsl
loop
mov
mov
add
mov
addr16
add
adcb
mov
xor
push
inc
lea
rorb
sub
into
sbb
cmc
push
mov
cmpsb
mov
sbb
pusha
cld
inc
add
in
push
les
insb
mov
adc
lret
imul
pushf
or
xorb
dec
xor
scas
jp
mov
xor
call
push
mov
jne
cltd
inc
cltd
pop
ljmp
xchg
adc
nop
scas
insb
aam
clc
repnz
cmp
cmp
int3
inc
dec
push
xchg
and
scas
cli
lock
out
push
loop
stc
push
xor
xchg
shlb
jnp
lahf
mov
pop
dec
dec
pop
popa
xor
and
sub
lods
fiaddl
pop
jbe
cli
jb
sbb
dec
sub
xchg
cli
mov
aad
test
sahf
loope
push
stos
dec
addl
ljmp
add
movsb
lea
adc
push
add
leave
ficompl
lods
pop
ss
scas
sbb
fsubrs
test
mov
cli
cmpsl
icebp
sahf
scas
les
inc
fwait
sub
mov
test
popa
lahf
lcall
addr16
mov
jo
clc
push
imul
jbe
and
add
movsl
scas
sbb
sub
and
pop
xchg
and
es
mov
cmp
and
scas
fcoms
int3
fcoml
push
leave
fwait
pop
fisubrs
mov
xor
jno
cltd
sahf
xor
pop
insb
add
jns
fadd
inc
out
fists
and
mov
adc
fstpt
sbb
out
fdivr
and
inc
je
sbb
cmpsb
cmc
lahf
pop
pop
sub
adc
mov
push
sti
sub
mov
daa
ret
iret
cmp
jmp
mov
fcomi
out
sub
cmp
insb
and
dec
jecxz
loope
les
cwtl
icebp
out
ret
cmp
adc
dec
sbb
dec
lods
test
and
mov
pop
psubusb
sub
lret
ds
icebp
into
adc
push
stos
sbb
bound
mov
popl
inc
in
mov
push
cltd
pop
mov
sbb
xor
sbb
repnz
xchg
aam
mov
out
pop
inc
test
in
xchg
cld
adc
repz
dec
lahf
cmpsl
daa
sbb
mov
mov
inc
add
xchg
mov
aas
cld
lcall
dec
xlat
dec
or
fisttps
dec
jp
or
inc
push
daa
std
lods
call
aas
inc
sbb
out
mov
inc
lahf
xor
cmp
in
outsl
inc
jno
pushf
scas
mov
sahf
sub
pop
loope
int
arpl
pop
call
pop
das
lds
cmpsb
dec
add
aam
xchg
daa
xor
icebp
je
scas
pop
add
loope
lret
imul
mov
movsl
lcall
aas
dec
pop
adcb
addr16
arpl
dec
int
fstl
je
dec
sbb
dec
jge
lds
push
addr16
jp
xchg
scas
add
sahf
data16
jle
ficoms
xchg
jmp
pop
push
ds
movsl
or
ljmp
jmp
aaa
jmp
out
jmp
into
roll
orl
and
adc
push
inc
sarb
fucomip
lods
xchg
xchg
aad
ret
rcrb
cld
bound
and
testb
pop
cmp
sarl
int3
lds
push
and
ja
push
and
add
xor
add
mov
add
pop
dec
and
idivb
inc
mov
leave
jecxz
loop
stos
xor
mov
or
dec
cmp
xchg
test
push
lret
inc
test
adc
leave
xor
adc
mov
out
xor
fs
les
and
sbb
jle
popf
sti
mov
loop
sub
sub
lods
ljmp
jbe
icebp
fs
sub
cmp
pop
pushf
push
aaa
aaa
jl
pusha
inc
roll
dec
cld
inc
or
pop
inc
in
cmp
cmpsb
mov
pop
ja
push
sbb
fs
jo
dec
mov
dec
pusha
sbb
lret
fwait
pop
jns
jg
pop
pop
jp
lret
inc
jae
outsl
fcoms
and
mov
cmp
xor
pop
jge
outsl
sub
cmp
add
fcmovne
cmpxchg
add
adc
mov
push
pop
movsl
jle
xor
aam
jb
mov
dec
cs
jo
mov
imul
push
sbb
je
mov
enter
in
rolb
push
pop
push
dec
adc
aaa
xchg
stos
in
dec
pop
push
mov
cmp
imul
adc
adc
test
sub
outsb
test
adc
int3
inc
pop
fs
xchg
int3
sbb
xchg
lea
mov
mov
mov
andl
adc
adc
push
lock
out
sub
cmpsb
xlat
pop
inc
push
in
lds
inc
cld
filds
adc
test
jmp
inc
mov
stc
aad
int
jge
test
pop
scas
pop
push
movsb
rcr
add
sub
jle
popa
ljmp
popf
add
push
mov
aam
icebp
pusha
loopne
cmp
adc
xchg
add
jecxz
cmp
mov
jo
lods
mov
pop
xor
insb
jbe
mov
pop
ljmp
add
pop
adc
idiv
jne
mov
in
out
inc
or
es
pushf
andb
push
xchg
clc
fcmovu
adc
mov
dec
xchg
test
inc
push
dec
mov
repnz
mov
mov
data16
vmwrite
pusha
jne
xchg
push
hlt
inc
dec
adc
jmp
cmc
outsl
sbb
mov
fwait
outsl
lods
testl
jecxz
mov
sbb
pop
notl
sti
or
xchg
sti
rclb
jno
add
add
dec
sbb
add
call
movl
sub
cltd
sub
cmp
add
mov
fwait
cmp
dec
outsb
adc
add
sbb
xor
fnsave
lret
scas
clc
or
xchg
add
jl
pop
stos
in
push
fidivl
mov
cmp
sub
cmc
test
out
enter
sub
ss
xor
xchg
out
jns
call
mov
dec
mov
inc
add
inc
fmuls
mov
push
add
cmpsb
test
or
pop
vpsrad
mulb
push
pop
push
jle
andb
sti
sub
test
lret
pop
mov
and
jp
xor
iret
pop
mov
je
test
mov
fdivrl
cmp
cmp
push
add
jno
das
cmp
mov
jle
outsb
loopne
mov
mov
xchg
mov
sahf
jmp
jmp
mov
jns
jno
dec
js
lahf
aam
xchg
xor
mov
in
add
sub
cmp
out
ret
push
add
lock
cwtl
and
xor
jae
roll
int3
outsb
das
inc
xor
inc
xchg
dec
jle
bound
rorl
pmaxub
adc
sbb
push
data16
ret
mov
xchg
push
cwtl
daa
daa
cld
mov
jp
in
stc
imul
or
sub
inc
push
stos
fcmovne
enter
js
pusha
mov
jb
sbb
cmp
xorb
sti
insl
mov
cld
dec
sahf
out
xor
and
out
icebp
pop
loope
or
loopne
lahf
mov
lret
push
loopne
rep
dec
adcb
inc
push
inc
loop
dec
lods
sbb
pop
pop
push
ss
mov
rcr
push
lods
inc
xchg
leave
pop
loope
scas
xlat
and
lahf
adc
add
jbe
xor
cmpl
add
adc
fidivl
mov
dec
add
pop
imul
sub
scas
sarb
test
push
adc
ret
mov
fbstp
iret
add
jle
xchg
add
push
xor
xchg
stc
pop
sub
outsb
jbe
stc
xorb
hlt
shlb
or
ss
mov
push
mov
pop
xchg
js
sbb
popa
dec
pop
out
xchg
push
std
or
notb
dec
sbb
rclb
clc
fwait
xor
insl
aaa
fadd
popa
or
out
pushf
or
mov
or
imul
and
cmp
and
jns
and
mov
sub
pop
push
xor
in
shl
and
insl
mov
cmp
neg
add
into
aas
jbe
push
push
pop
or
movsb
add
adc
mov
hlt
jo
pop
jl
loop
sahf
pop
jp
hlt
aas
cs
add
jp
aad
lods
lahf
pop
ds
loopne
movsl
lret
scas
mov
dec
ds
xchg
adc
push
lahf
sbb
fwait
and
push
and
stos
testb
mov
es
pushf
in
xlat
ret
push
sahf
add
mov
adc
orl
inc
sarl
xor
jle
mov
cwtl
mov
jge
inc
loope
aam
cld
mov
sbb
fnstenv
sub
jle
fs
ret
stos
popa
es
add
xor
ljmp
inc
and
jns
sub
or
or
fstpl
aaa
ljmp
add
xchg
cmp
mov
mov
push
xchg
dec
sbbb
gs
mov
dec
xchg
mov
rcll
sete
outsl
sub
mov
int
testl
lret
fs
cmp
frstor
outsb
adc
out
aad
push
lret
mov
sub
insl
stc
and
mov
sub
or
pop
mov
insl
adc
sbb
add
fildl
or
dec
ret
push
dec
les
and
inc
add
sahf
test
into
cmp
shll
dec
mov
cltd
insl
fldenv
adc
mov
xor
loopne
vmwrite
sub
std
xlat
xchg
adc
pop
popf
cmp
sahf
sub
jne
adc
insb
adc
xlat
ffree
js
sub
xchg
mov
sahf
and
adc
enter
pop
jnp
cmp
xchg
jb
mov
xor
dec
repnz
fcom
sahf
mov
sub
xchg
sub
xchg
mov
jae
mov
pop
int
insb
and
mov
les
std
out
pusha
mov
sub
sbb
sti
popa
cmpsb
jp
sub
mov
xor
mov
add
sbb
and
out
xor
int
leave
in
nop
or
jae
jns
test
sub
dec
xor
xor
jb
cmpsl
je
pushf
cmpsb
inc
imul
ret
cmpsl
push
stos
and
in
sahf
push
nop
arpl
stos
pushf
fadds
dec
test
aad
or
iret
xchg
orl
daa
addr16
cli
lock
sti
subb
mov
insb
xchg
mov
cmp
aad
sub
add
jb
in
lock
mov
addr16
sbb
pop
pusha
add
aas
and
leave
sub
mov
jno
sub
jmp
mov
lods
mov
adc
mov
and
mov
sbb
cld
or
cmp
pop
push
aaa
or
xchg
sbb
mov
repz
fsubs
or
push
cmpsl
nop
and
rcrb
dec
pop
xor
or
js
std
ja
push
stos
sarl
jecxz
outsb
ss
jmp
aad
add
cli
or
mov
lret
ljmp
xchg
stos
rclb
adc
cmp
sub
mov
push
xchg
cwtl
dec
xlat
sbb
pop
pop
and
jp
inc
sbbl
gs
push
push
push
mov
imull
mov
int3
cmp
xchg
insb
aaa
and
leave
sub
bound
imul
jl
ja
and
pop
pushl
or
dec
and
ret
rolb
pop
sub
jmp
xor
int
mov
imul
jne
jmp
cmpsl
into
dec
push
test
dec
cmpb
sub
out
fiaddl
push
cmpsb
movsb
xchg
cmpsl
out
test
pop
push
fdivl
mov
xlat
add
leave
daa
push
push
in
cld
insl
push
and
lea
sub
out
sub
sti
xor
ret
add
lcall
fsubs
sub
add
jl
inc
mov
jne
lods
daa
pop
popf
rorl
cmpsb
cmpsl
loopne
jb
outsl
mov
cmc
out
pop
or
jp
sub
stos
dec
dec
incl
cmp
data16
mov
and
pop
insl
fcmove
and
je
fldenv
mov
jo
cmpsl
jp
lea
aam
addl
and
jns
je
dec
xchg
int
pop
push
dec
sub
mov
rcrb
add
iret
add
iret
in
fsubrs
cli
icebp
dec
lahf
aam
pop
lods
pop
and
in
stos
add
jl
fsub
inc
mov
ds
inc
clc
test
arpl
mov
mov
imul
sub
pop
ja
test
add
lret
pop
ffreep
mov
mov
inc
aad
lds
push
push
test
dec
test
add
dec
pop
sbb
lret
dec
sbb
jnp
mov
popa
hlt
enter
push
jg
dec
pcmpgtw
xor
out
inc
cli
adc
inc
retw
inc
lock
push
jp
cmp
repz
xchg
cmp
jae
cmpsb
and
cmp
mov
inc
fstpl
clc
push
adc
xor
daa
push
dec
popa
pop
jnp
fmull
push
inc
ret
xchg
ret
lods
xchg
lcall
sub
ror
lcall
dec
jle
xchg
insl
out
sub
jae
in
ja
imul
lock
or
stos
mov
addl
daa
je
rorl
jecxz
lock
fwait
mov
js
lahf
mov
sbb
loop
jmp
add
cmp
out
pop
adc
jmp
xchg
sbb
sub
ficompl
inc
jo
jp
lods
jg
dec
fcomps
cmp
add
push
in
jnp
lret
and
test
inc
inc
dec
jbe
adc
mov
cli
cmp
inc
int3
scas
lods
jb
aaa
stos
jb
pop
add
mull
adc
ljmp
adc
lock
push
or
lcall
jmp
mov
xor
jecxz
cwtl
and
cs
lea
pop
xor
adc
inc
adc
testb
mov
es
pop
mov
and
fs
mov
push
ror
add
adc
dec
rcrl
xor
sbb
jge
lea
xor
addl
clc
push
dec
enter
loopne
add
sarl
or
rorb
mov
mov
push
dec
setge
inc
jno
scas
hlt
rorb
xor
push
fsubl
inc
pushf
push
mov
pop
adc
sbbb
fstps
int
ret
out
mov
cmp
adc
add
xlat
in
cmp
test
push
sbb
push
push
aad
incl
sahf
pusha
or
and
mov
pusha
adc
add
or
push
dec
cmp
and
sub
cli
fbld
fcmovnbe
cld
ret
inc
mov
adc
jo
stos
inc
scas
icebp
ret
orb
dec
jl
lcall
ds
mov
test
push
fldl
adc
mov
mov
inc
loopne
pop
pop
jo
out
push
jp
xor
jb
sbb
mov
pop
pop
mov
xor
pop
popf
pop
adc
lahf
sbb
je
dec
cmp
std
pop
pop
stc
addr16
push
negb
inc
loope
mov
leave
lret
sbbb
lret
cld
jns
mov
sbb
cmp
xchg
out
jg
and
bound
inc
repz
jle
stos
sar
cwtl
jae
dec
add
cmp
add
inc
and
xchg
lcall
loop
enter
push
adc
add
cmpsl
lret
push
in
xchg
int3
stc
xchg
pop
adc
and
rcrl
outsl
xchg
enter
dec
sbb
ret
stos
int3
pop
cmp
clc
out
or
pop
mov
dec
je
shrd
sub
push
inc
push
ret
mov
add
push
xor
pusha
cmp
mov
lds
mov
daa
cwtl
push
in
mov
cli
inc
push
pop
cmpl
push
mov
cli
mov
mov
mov
adc
dec
add
mov
sub
xor
push
pop
data16
pop
daa
in
push
add
pop
rcl
or
scas
inc
and
and
je
clc
fs
jecxz
das
sbb
jge
lock
xchg
ljmp
insl
xacquire
mov
scas
outsl
pop
les
shll
testb
rcll
imul
leave
mov
stc
gs
mov
sub
ret
cmp
pop
jge
pop
dec
jns
fs
and
repz
fisttpl
test
test
cmp
repz
mov
adc
xor
xlat
scas
lea
sub
jne
add
mov
rclb
sbb
push
ljmp
mov
roll
movsb
xchg
cltd
cltd
dec
xorb
imulb
xchg
add
sbb
divb
aam
mov
iret
pop
movsl
sbb
mov
jmp
cmp
rcr
push
xchg
add
movsbl
pusha
in
in
stos
lcall
jmp
mov
add
sbb
rcrb
inc
jl
xchg
fidivrs
jae
idivb
push
xor
rcl
addr16
mull
mov
cmp
jp
cmc
jns
out
dec
pop
ucomiss
sub
or
test
xchg
test
dec
mov
mov
mov
adc
outsb
add
jns
scas
cmp
out
and
aas
lods
lret
adc
ljmp
lcall
adc
insb
dec
je
cli
mov
leave
mov
sbb
lcall
or
cs
xchg
adc
jmp
lret
dec
pcmpgtw
sbb
fcoms
cmp
pop
adc
push
sahf
sbb
ret
ficoml
push
stos
rcrb
std
js
sti
push
aam
jmp
xor
notb
aaa
fldenv
mov
loop
and
sbb
sub
adc
pop
mov
leave
mov
jmp
addl
xchg
pop
fs
adc
ror
pop
push
dec
mov
popa
ret
pop
mov
push
and
test
jns
dec
stc
or
adc
scas
sub
testl
mov
out
mov
sub
cmp
mov
cli
cltd
sbb
lcall
lea
int
push
inc
adc
cs
enter
jno
sbb
imul
mov
aaa
daa
ret
leave
aaa
aam
xlat
mov
cmp
push
nop
sub
outsl
sbb
stos
push
das
xor
scas
pop
sub
mov
mov
lods
xor
icebp
jl
and
mov
xor
ljmp
enter
aaa
inc
jns
dec
repz
mov
out
mov
jl
aad
push
inc
std
ret
fwait
lcall
mov
aaa
mov
stc
mov
das
gs
and
mov
inc
movsb
xchg
add
shll
xchg
negl
push
add
pop
mov
jle
xchg
xor
pop
adc
jae
stos
xchg
leave
ds
mov
adc
pop
lcall
lods
mov
push
out
and
imulb
push
dec
pop
loope
jo
add
cli
dec
stc
mov
pushf
mov
cmp
jge
addr16
mov
mov
xlat
dec
rcl
and
stos
rcll
insl
cmp
xchg
mov
mov
jmp
cmpsb
jp
push
pop
mov
sub
add
outsl
adc
es
cmp
mov
hlt
test
jnp
nop
mov
and
pushf
sub
sti
sub
andb
insb
out
andb
sub
and
int3
adc
xor
pushf
pop
fnstenv
fdiv
out
fs
jo
mov
scas
xchg
sbb
jp
or
and
dec
mov
lods
xor
push
lods
xlat
fildl
int3
subl
dec
nop
cmc
adcl
fcom
shll
cmp
jge
dec
xor
in
sbbl
push
leave
adc
mov
sbb
imul
adc
aam
cmpl
mov
ss
cmp
mov
pusha
lds
or
adc
sbb
lock
hlt
ja
cs
cmpsl
inc
arpl
pusha
lret
testb
addr16
mov
push
jecxz
cwtl
sbb
aaa
push
inc
es
out
xlat
popf
rcll
push
jmp
adc
push
pop
dec
dec
xchg
aad
and
repz
pusha
aad
daa
std
pop
pop
imul
cs
mov
data16
sar
das
jge
inc
je
mov
icebp
test
movsl
pop
or
std
jae
enter
cwtl
mov
test
push
xchg
sub
mov
cwtl
ficoms
or
push
xchg
mov
cwtl
ds
jg
xorl
shll
arpl
lahf
filds
and
popa
sub
add
mov
add
mov
pop
idivb
or
outsl
js
das
cmc
mov
sub
mov
mov
jmp
int3
dec
aaa
fdivr
push
xor
push
lock
loope
add
mov
inc
mov
lods
dec
mov
sub
test
shll
mov
shll
dec
jg
cmpsl
test
inc
fidivrs
mov
arpl
sub
cwtl
hlt
cmp
cmp
fistps
rolb
imul
push
lcall
outsb
xchg
mov
inc
fwait
in
cld
sub
std
cmp
jg
pop
cs
jle
insl
fstpt
sarl
into
mov
das
andl
ljmp
pop
hlt
pushf
jo
notb
fcmovnb
aad
imul
or
xchg
rcrl
ds
idiv
mov
push
xor
sub
xchg
popf
sub
mov
adc
mov
push
push
fwait
cmp
leave
xchg
fisubs
cs
clc
jb
jmp
ret
orb
pusha
ss
cmpb
out
adc
loope
outsl
jb
xchg
mov
jge
inc
inc
jle
repz
aam
push
xchg
cmpsl
imul
mov
ret
dec
cmp
out
cmp
jge
inc
fldenv
ret
sub
mov
add
mov
jno
or
rcrb
clc
in
lea
mov
test
lds
sub
repnz
xor
shll
push
xchg
and
cmp
lods
ret
hlt
push
jge
add
repz
imulb
dec
add
pop
push
cmc
cld
int3
sbb
xchg
pop
cltd
sub
sbb
movsl
popa
xchg
scas
add
fs
dec
xor
lcall
call
pop
pop
into
outsl
fnstenv
push
fwait
mov
js
sub
jno
out
mov
das
pop
xchg
add
pop
jno
into
cmp
fs
inc
xlat
ret
movsl
enter
std
mov
repnz
lock
sub
mov
loop
iret
xor
add
adc
or
jno
cltd
add
xchg
fcoml
inc
inc
lea
mov
test
dec
mov
mov
sub
ljmp
aaa
cmp
shrl
pusha
leave
leave
xchg
xchg
das
out
xchg
mov
or
cmp
lds
repz
jne
xchg
add
and
sbb
mov
mov
mov
das
fldt
into
shrl
lea
popa
mov
mov
inc
decl
xor
in
rcl
call
icebp
gs
testl
loopne
fstpl
inc
scas
xor
mov
shlb
or
dec
rclb
push
iret
movsl
leave
sbb
imul
dec
subl
adcb
sub
pop
and
push
sub
idiv
outsl
mov
adc
cmp
mov
mov
xchg
movsl
pop
out
and
stos
or
or
sub
test
out
insb
in
dec
add
lret
imul
dec
fsubrp
push
jae
pusha
push
aam
xchg
stos
and
loopne
push
es
sbbl
push
jbe
mov
repnz
inc
ret
add
and
out
dec
popf
cltd
cld
test
cwtl
cli
adc
adc
enter
pusha
mov
ja
xor
fcoml
adc
addr16
je
icebp
lds
loope
pop
or
je
xor
sarl
xorb
cmpsl
data16
xchg
outsb
pmulhuw
push
js
ret
jo
lock
mov
xchg
leave
jmp
lods
jnp
inc
or
push
mov
mov
jbe
sbb
rolb
cmp
dec
int3
pusha
sbb
ss
imul
insl
mov
cmp
test
pop
and
and
das
cli
sub
sti
cli
push
inc
lock
xlat
mov
adc
gs
sub
outsb
adc
adc
jg
jns
repz
stc
or
sub
int3
cld
lret
lret
out
mov
gs
bound
and
int3
push
fbld
mov
sub
out
adc
das
test
jg
hlt
mov
cmp
push
cmpb
push
sarb
arpl
in
enter
lods
mov
adc
imull
aas
and
dec
lock
in
fldl
nop
and
lds
andb
insb
cmpsl
out
push
pop
int
sub
push
int3
sbb
shl
xor
add
cmp
mov
push
fcom
sarb
adcb
inc
jecxz
notb
xchg
cmp
cmp
xchg
pushf
and
rorl
push
lds
mov
pop
mov
cmp
sbb
mov
sahf
mov
sbb
out
cmp
or
mov
push
xor
pusha
insl
dec
cld
jbe
or
mov
rolb
addr16
fldenv
push
jne
mov
test
add
out
push
mov
sbb
sbb
inc
dec
out
xchg
shl
jo
mov
ljmp
pop
add
loope
orl
daa
insl
icebp
cs
jae
or
insb
jno
mov
mov
add
add
dec
dec
mov
mov
add
out
out
pop
push
hlt
int
push
cmp
or
jb
sbb
lea
add
add
cmc
sbb
pop
lods
fisubrl
jecxz
and
int
mov
addr16
xor
andl
das
incl
mov
jae
xchg
inc
pop
je
sub
push
je
sbb
jae
imul
pop
add
stos
addr16
inc
and
lret
movsl
arpl
es
inc
shrb
loope
bnd
nopl
fisttpl
ud2
add
cmp
or
push
and
ja
aad
mov
int3
fiaddl
mov
cltd
iret
inc
dec
iret
sbb
xor
daa
insb
sub
and
dec
je
inc
ret
fcoml
test
mov
dec
mov
testl
sbb
jb
or
repnz
xchg
push
aaa
test
paddsw
js
aas
inc
out
add
adc
adc
cmp
jecxz
lock
dec
pop
mov
clc
adc
pop
subb
flds
xor
inc
inc
clc
ret
flds
sbb
out
mov
jecxz
scas
sub
jmp
mov
sub
pop
push
lret
movsl
xchg
leave
sbb
jo
mov
sub
fdivrp
inc
mov
inc
imul
push
enter
adc
loope
fstpl
push
inc
xchg
in
lret
cltd
jbe
mov
hlt
push
push
adcb
xchg
sub
inc
out
pusha
out
js
xor
pop
test
pop
stc
jne
jne
test
jnp
or
jge
test
inc
mov
aam
aam
pop
jg
push
hlt
ja
xchg
movsl
and
gs
lods
rcll
sub
sbb
add
bsr
inc
dec
adc
icebp
cmc
jp
cmp
mov
jmp
inc
dec
pop
jo
fiadds
push
adc
pop
push
loopne
into
jmp
int3
cmp
lret
sbb
mov
pop
jle
and
or
out
fisttps
sub
inc
clc
jns
loop
jne
ud2
mov
pusha
mov
dec
or
push
insb
repnz
inc
fsubr
rcll
adc
inc
xor
dec
adcl
out
pop
adc
mov
mov
adc
ds
xlat
stos
pushf
mov
cmp
and
jmp
dec
pop
xchg
mov
jno
xchg
xlat
in
test
divb
and
sahf
mov
repnz
xchg
jno
pop
in
hlt
ljmp
push
cmp
inc
mov
jle
lods
addb
mov
and
push
or
adc
shll
dec
adc
lahf
fsubs
xchg
push
arpl
mov
jae
mov
sub
and
aaa
daa
mov
gs
sbb
in
or
jl
pop
dec
mov
lods
cmp
outsb
inc
adc
mov
cmp
call
out
xchg
mov
es
scas
leave
pop
add
stc
mov
push
push
jmp
inc
cmpsl
shll
idivl
mov
loop
loop
icebp
push
adc
xchg
dec
stos
ds
inc
repnz
jne
daa
fwait
mov
ror
mov
adc
fnstenv
cmp
sbb
fildll
xor
scas
sbb
subb
sbb
cmp
addl
outsb
and
divl
nop
int3
lcall
orl
sti
idivl
adc
mov
push
jmp
pop
mov
cvtps2pd
xor
pop
test
push
pop
sar
inc
in
fildll
adc
jp
cld
pop
push
ljmp
mov
fstps
in
jne
iret
fwait
addr16
subl
pusha
fsubrs
sbb
push
pop
lock
cld
push
pusha
xor
scas
int3
inc
xor
mov
ss
sbb
push
movsb
xchg
lock
fbld
imul
adc
push
sbb
lods
rorb
movsb
lret
xor
dec
add
nop
or
adc
adc
pop
lcall
mov
add
arpl
jmp
add
ja
mov
xchg
push
insb
roll
pushf
adc
add
test
lods
jno
cld
mov
lods
stos
outsb
pop
jb
loope
mov
jmp
mov
pop
or
push
mov
cmp
imul
dec
mov
pop
lods
sahf
and
enter
xor
push
push
addr16
inc
add
stos
mov
mov
test
mov
inc
sbb
push
sahf
xor
lds
mov
cmc
sbbl
push
popa
scas
dec
inc
sub
cmp
mov
xor
or
icebp
icebp
adc
cmpsb
push
fcompl
push
sbb
push
adc
xor
mov
jg
pop
dec
mov
arpl
imul
insb
lods
cld
cwtl
xor
push
cld
mov
sub
mov
cmp
push
ret
imul
mov
pop
dec
jmp
dec
or
pop
rcrl
fwait
push
ljmp
mov
sahf
jb
arpl
jbe
sbb
mov
adc
aad
adc
xor
mov
adc
mov
mov
mov
lods
leave
cmc
shll
jb
add
repz
addr16
cmp
loop
mov
mov
mov
mov
sbb
xor
pop
test
movsb
hlt
std
add
lock
or
je
clc
mov
aas
out
sarl
pop
cld
push
sub
push
jp
push
cmp
iret
vdivss
je
or
outsl
popa
cmp
movsl
cltd
lea
movsl
jg
pushf
in
insb
inc
movsl
or
int
pop
cltd
jne
movsb
popa
repz
flds
jne
jge
jl
repnz
outsb
cld
cmp
shr
add
lahf
jbe
mov
arpl
ret
inc
xor
add
icebp
pop
sbb
ja
int3
xchg
nop
movsl
mov
incb
xchg
scas
cmpsl
cmp
push
mov
sbb
push
sbb
icebp
xchg
or
jmp
pop
and
mov
out
add
stos
xchg
cli
adc
push
mov
cmpsl
xchg
dec
out
out
mov
cmp
sbb
jge
xor
imul
ja
repz
call
push
xor
das
inc
pop
mov
jae
sbb
push
popa
aaa
ljmp
xchg
xor
push
stos
add
xchg
daa
into
stos
and
stos
jge
cld
adc
cmpsl
cmp
push
int
jle
fiadds
sahf
loop
leave
ljmp
adc
mov
out
mov
mov
cmp
pop
test
mov
pop
xchg
mov
imul
xchg
leave
cmp
sbb
decl
std
add
jp
mov
lock
xor
pop
repnz
psrld
test
xor
mov
cltd
and
bnd
js
lret
fnstenv
xchg
fwait
outsb
fucomp
cmpsl
sbb
out
loope
ds
mov
into
sahf
ret
dec
das
scas
pop
in
mov
xor
lods
inc
into
rcr
push
push
insl
sbb
xlat
bound
push
and
test
bound
adc
and
mov
shlb
cmpsb
xor
dec
jp
in
loop
test
test
adc
repnz
into
enter
lret
fcomi
xor
mov
mov
pop
jge
mov
xchg
xor
in
mov
or
in
or
push
xchg
sbb
cmc
adc
leave
jbe
push
mov
dec
rcr
mov
enter
push
cs
pop
xor
mov
or
addb
push
cld
push
imul
hlt
mov
sbb
data16
ljmp
jg
mov
or
pushf
add
mov
sbb
insl
sahf
ds
or
mov
push
and
ror
stos
sbb
aad
rcl
mov
dec
ds
mov
test
jp
addr16
jecxz
sbb
push
adc
movb
fmuls
mov
stc
arpl
cltd
repz
pushf
pop
xor
sbb
ss
mov
jp
xor
in
fiaddl
test
imul
xlat
dec
or
dec
cwtl
xchg
push
push
sub
sub
clc
fisubrl
nop
sbb
ljmp
mov
jbe
ret
adc
flds
dec
test
push
push
jmp
das
into
leave
xor
add
vpunpckldq
push
out
or
mov
sbb
xchg
fimuls
fwait
loopne
mov
sub
sbb
fsts
leave
lret
ljmp
pop
jmp
test
sti
mov
inc
mov
push
mov
stc
xchg
cld
enter
mov
das
data16
fiadds
fdivrp
fimuls
movsl
dec
loope
call
hlt
mov
and
add
lcall
in
or
xchg
push
dec
xor
dec
orl
mov
pop
inc
push
cs
adc
loopne
push
loopne
xor
push
in
call
into
add
or
xchg
rclb
in
push
loopne
aam
sbb
xchg
daa
andb
es
push
loopne
call
inc
mov
faddp
fsubrs
mov
push
je
mov
mov
cli
aas
sbb
cs
ret
ret
xchg
push
insl
lret
scas
dec
test
test
push
frstor
in
mov
mov
xchg
neg
pop
outsl
xorb
repz
dec
idivl
gs
adc
loopne
dec
cmp
or
int
mov
adc
xor
mov
addr16
leave
mov
rcll
cmp
add
ds
lahf
xlat
pop
cmc
pop
outsl
rcrl
pop
notl
mov
jbe
dec
sbb
std
push
and
outsb
test
in
ja
xor
mov
xor
mov
adc
fidivl
dec
xchg
push
mov
push
out
mov
sahf
jbe
pop
std
lds
lock
jns
subl
and
jae
nop
adcl
sbb
out
shlb
cmpsl
adc
sub
adc
jl
lcall
adc
pop
pop
ljmp
aas
inc
mov
adc
in
dec
in
push
push
movsb
add
cmpl
fstl
adc
jno
xchg
jo
fs
add
xchg
push
repnz
mov
sbb
loope
adc
push
inc
dec
out
and
test
fldl
pop
cmpsl
inc
iret
adc
lcall
ret
or
pop
fcmovu
inc
mov
xchg
jmp
aad
dec
mov
add
inc
and
push
lcall
xor
nop
and
scas
push
push
rorl
xchg
inc
stc
jo
es
mov
dec
mov
je
push
or
pusha
repnz
sbb
and
jno
push
out
aas
sub
xchg
fs
adc
xor
nop
lods
push
xchg
fsts
pop
mov
je
mov
pop
out
or
xchg
jbe
inc
test
jns
mov
ret
sub
dec
pop
insb
pop
shrb
push
push
arpl
arpl
out
pop
pop
addb
int
pop
push
xchg
leave
xchg
sbb
inc
popa
cmc
mov
test
fwait
sub
lret
xlat
mov
roll
and
cld
nop
pop
jnp
sub
mov
addr16
add
inc
aas
enter
sbb
mov
stos
in
divl
adc
dec
shlb
leave
imul
stos
inc
sbb
out
nop
stos
scas
cli
adc
jnp
jb
and
imul
repnz
push
gs
mov
push
or
adc
imul
or
aaa
enter
xchg
lret
mov
mov
and
xor
pop
sti
lods
in
lret
fsubrl
pop
or
jp
xor
cmp
sbb
mov
xchg
aad
out
sti
jno
mov
lcall
or
dec
push
nop
outsl
out
hlt
xor
movsl
subl
test
jae
notl
mov
getsec
and
cmp
pop
xchg
mov
xor
adc
daa
ja
test
pop
pop
lds
addl
fwait
and
es
mov
mov
insl
in
mov
mov
in
aad
js
cmp
sbb
dec
mov
arpl
inc
insl
in
push
adcb
test
cmpsl
leave
xchg
test
test
fcmove
ret
push
and
lret
xor
mov
mov
stos
push
rolb
adcb
xchg
popf
mov
sbb
xchg
stos
int
call
popl
ret
lock
cmp
imul
jecxz
push
repz
push
pop
scas
adc
cli
outsb
mov
mov
in
jnp
xchg
mov
lea
ficoml
dec
ja
dec
mov
pop
enter
push
mov
int3
inc
jns
xlat
xor
mov
orl
xchg
jecxz
mov
inc
inc
inc
xchg
or
cwtl
push
xchg
out
pop
jmp
sub
xchg
pushf
rcl
mov
lods
fcoms
arpl
cli
jp
std
mulb
lock
xchg
fimull
mov
es
xchg
pop
gs
movsl
popa
sbbb
fs
inc
jl
out
popf
cmpsl
fwait
mov
xorb
ret
xchg
shlb
fimuls
jecxz
pop
sbb
xchg
mov
push
xchg
int3
mov
push
cwtl
int3
xor
stos
jns
jp
imull
rcrb
add
adc
inc
jnp
sbb
enter
faddp
cmpsb
push
adc
dec
loop
sbb
adc
mov
out
repz
divb
mov
xorl
popf
mov
loopne
addr16
shrl
scas
dec
jecxz
mov
sbb
mov
mov
add
jbe
fidivl
mov
mov
daa
add
out
int3
test
imul
dec
inc
icebp
dec
flds
mov
or
adcb
jno
mov
popf
lret
and
lea
xor
dec
jo
add
repz
cld
or
mov
mov
and
xor
in
outsb
xchg
mov
push
ja
into
cmp
ja
mov
mov
mov
or
leave
aad
mov
pop
rcrb
or
es
imul
fldcw
mov
mov
mov
jo
pop
xor
fdivrs
in
fwait
sbb
negb
sub
and
jo
sbb
insb
mov
sub
sub
mov
cltd
lods
pop
nop
jnp
fucom
in
or
push
push
cmp
sbb
out
lock
ds
cmp
mov
mov
les
xchg
in
das
bound
adc
fsubrs
push
and
jne
roll
pop
bnd
adc
jge
pop
xor
int
clc
ret
sbb
push
mov
xor
test
add
jae
aas
subl
xchg
cmp
push
and
fcomi
adc
repnz
insl
daa
cltd
cmpsb
leave
out
cmp
sahf
pop
pop
icebp
dec
mov
lret
cltd
int3
fnstcw
or
fwait
addr16
jmp
js
pop
jmp
pop
push
sti
inc
sbb
les
jbe
cmp
xchg
incl
lea
mov
loopne
stc
repz
ret
mov
dec
iret
push
shr
xchg
sarb
stos
sti
rcrb
bswap
lods
loop
adc
int
pop
outsb
sti
gs
fcompl
push
scas
out
pop
test
fdivl
pop
loope
aas
xchg
mulb
sub
in
mov
mov
push
jp
scas
inc
mov
loop
dec
pop
cwtl
cmpsb
out
sub
in
repnz
and
fistpl
and
xor
or
push
iret
jl
imul
sbb
insb
cmc
or
aam
and
std
rcrb
rcll
jb
mov
adc
fmull
dec
outsb
pop
inc
pop
int3
pushf
xor
mov
aas
bnd
push
test
clc
data16
gs
movsb
cmpsb
inc
xchg
xchg
test
sbb
mov
xor
jge
xchg
hlt
popf
bound
scas
xchg
repz
orb
or
mov
shrb
add
mov
aaa
fisubrs
mov
pop
fimull
jecxz
enter
add
mov
inc
data16
dec
fdivr
inc
xchg
cmp
sahf
push
lahf
dec
outsl
inc
mov
aad
xchg
jmp
xchg
or
or
ficoms
out
xchg
imul
jmp
hlt
lahf
cmp
popa
push
repz
pop
cmc
fs
xor
sub
call
out
loop
mov
pop
or
jge
xor
out
mov
and
popf
inc
pop
push
test
sbb
es
dec
jae
xor
fstpt
scas
push
sti
lock
pop
loope
xchg
or
pop
rcl
mov
lahf
and
addb
jae
mov
xchg
icebp
sbb
sbb
sbb
adc
adc
push
mov
int3
push
arpl
mov
in
dec
fildl
enter
je
shrb
aas
lret
movsb
shlb
insb
mov
lret
mov
xor
pushf
cmp
sti
int
dec
cmc
xor
lret
dec
xor
xchg
sub
out
clc
push
scas
test
insb
sahf
mov
iret
inc
push
jae
cmpsl
dec
fistpl
fisubrs
mov
stos
cmp
adc
add
fsubl
push
mov
std
push
icebp
pusha
in
or
cmpl
sub
xchg
stos
adc
pushf
dec
xchg
insb
repnz
mov
xor
or
fdiv
adc
pop
pop
xchg
cmp
jecxz
lods
daa
in
das
push
jb
pushf
jmp
sub
test
pop
ss
xchg
stos
pop
or
repnz
and
mov
mov
adc
jns
sub
sub
pop
scas
jmp
leave
mov
pushf
ret
and
mov
inc
test
push
xchg
add
lahf
stc
push
push
push
adc
idivb
and
lock
jno
popf
sbb
icebp
mov
int
mov
aas
ss
fldl
lods
insb
inc
insb
stos
scas
mov
mov
mov
lea
or
sub
inc
jg
xchg
and
std
popa
scas
cwtl
inc
rcl
std
js
mov
add
mov
pop
fdivp
clc
mov
ja
sub
push
sub
jo
arpl
xor
cmp
mov
push
pop
sub
jle
pop
dec
fldenv
mov
out
push
dec
pusha
jno
cmp
shlb
dec
and
xor
and
sbb
lods
dec
cwtl
into
lcall
rorb
cmp
add
dec
push
leave
loopne
adc
lods
cltd
call
stos
dec
out
push
jl
ds
ja
mov
out
js
adc
mov
sub
jg
push
repz
out
lahf
lock
jmp
mov
repnz
or
fsubr
aam
xor
sbb
sub
arpl
fimull
ljmp
insl
jle
les
mov
pop
imulb
xchg
pop
mov
lret
lret
mov
pop
daa
dec
push
ljmp
fbld
test
xor
add
fldcw
push
outsb
dec
arpl
push
test
cmpl
adc
xchg
loopne
jmp
les
mov
cld
inc
iret
rcll
int3
xor
pop
push
fs
dec
data16
in
data16
pop
jo
push
lret
outsb
sbb
scas
movsl
mov
stos
mov
jbe
cld
dec
std
in
cmc
add
loop
repz
scas
push
popa
and
out
sti
jnp
lret
xorb
rcr
rcr
popa
andl
add
hlt
add
imul
in
jno
sbbb
jb
insb
roll
xchg
or
mov
cs
test
loop
cmp
inc
pop
data16
pusha
jae
lds
xchg
jae
jle
sbb
ja
xor
sti
mov
push
xchg
loope
outsl
cmp
lahf
notb
mov
adc
add
push
push
repnz
imul
jo
repz
cmpl
imul
nop
shl
in
mov
outsl
jbe
jp
idivl
fcmovnbe
inc
loop
xchg
mov
imul
cmp
jecxz
dec
icebp
call
mov
inc
dec
xor
cmp
adc
xchg
push
xor
fwait
sbb
in
adc
lods
jle
add
fcoml
in
ficomps
dec
cli
nop
repz
sbb
mov
pop
push
pop
cmp
xchg
mov
sub
sbbb
pusha
mov
mov
and
jne
repz
mov
dec
jmp
imul
sbb
enter
fwait
test
int
xor
fists
and
push
pop
inc
lods
fs
bound
es
xchg
mov
roll
stos
mov
mov
rorl
cmp
dec
sub
daa
mov
xor
dec
pop
or
call
leave
mov
add
in
mov
loopne
dec
mov
insl
sub
sub
mov
clc
stos
and
xchg
bound
frstor
jb
rolb
pusha
fs
pop
lcall
fdivrs
test
pop
negb
negl
imul
in
mov
js
mov
mov
lds
push
aaa
cli
xchg
ljmp
into
xchg
subl
das
and
aas
addr16
mov
jecxz
das
jmp
fs
aaa
pushf
stos
out
ds
insb
and
mov
add
mov
pop
adc
leavew
sbb
push
inc
sarl
call
push
idiv
and
repz
ja
ja
push
cmp
or
xchg
cmpsl
mov
cmp
loop
xchg
loop
mov
pusha
or
and
mov
dec
jae
or
jnp
insb
xor
jns,pn
imul
lahf
mov
xchg
aam
sub
test
loop
out
xor
aas
cwtl
jno
mov
adc
es
mov
jnp
rorb
mov
push
mov
mov
js
dec
pop
jnp
fstps
push
ds
std
dec
cld
add
mov
push
push
mov
xchg
jne
dec
sub
stos
inc
jb
cmp
pop
push
fiaddl
cmp
inc
shrd
enter
popa
inc
sbb
stc
arpl
sub
mulb
sbb
jp
sub
pop
loop
fnstenv
mov
fstpl
icebp
mov
cmpsl
repnz
in
imul
mov
cld
inc
movsl
and
test
std
daa
jbe
and
jnp
mul
fsub
sarl
dec
test
bound
fistpll
dec
cmp
xchg
xchg
sbb
inc
mov
jmp
mov
cwtl
xchg
dec
sbb
push
add
lods
adc
test
cmpsb
fcoml
cld
adc
pop
mov
mov
das
test
dec
insb
fnstsw
lock
xchg
pusha
cmpsl
fidivs
fstpl
mov
push
pop
push
or
inc
push
movsl
mov
ret
or
mov
addb
cmp
or
movsb
leave
in
fs
sbb
push
js
daa
test
dec
imul
push
sub
call
in
ljmp
sub
mov
or
mov
fists
into
bnd
pushf
xor
call
or
adc
inc
xor
lret
aam
mov
xchg
hlt
mov
leave
pop
add
sbb
ret
mov
in
jns
pop
jns
bound
pop
mov
daa
jmp
dec
addr16
std
aam
out
sub
gs
test
int3
popf
popa
test
into
push
sub
fdivrp
mov
jno
add
lods
icebp
mov
jae
inc
xor
sbb
lods
or
repnz
mov
xchg
adc
mov
lahf
pop
mov
out
lcall
call
or
sbbl
bound
push
xchg
sub
and
and
repnz
mov
cmp
stc
adc
add
lock
clc
pop
loopne
ret
jecxz
cld
mov
pop
xor
dec
xchg
dec
cmp
mov
and
bound
sbbl
out
push
mov
jecxz
pop
loop
cmp
int3
sbb
xor
dec
cs
jb
ret
mov
btc
cwtl
jge
imul
mov
mov
pusha
mov
mov
cmp
and
out
add
std
enter
jl
in
pop
sub
mov
push
out
cmp
iret
repz
rorl
add
addr16
orb
jecxz
arpl
push
mov
push
pop
adc
pop
xor
mov
movsl
sbb
int3
push
xchg
lret
pop
lret
cmpsb
mov
cmp
pop
push
movsb
mov
mov
ljmp
mov
dec
cmp
rcr
pop
pop
gs
pop
inc
repnz
jl
rolb
inc
jmp
push
ss
or
or
loope
xor
pop
lock
sti
add
or
test
mov
bound
cmp
push
cmp
push
aas
fistpl
adc
aam
movsb
cld
aas
sbb
xor
or
jecxz
xchg
push
ficompl
pop
xchg
test
stc
lcall
test
adc
pusha
mov
loopne
sbb
shl
ss
stos
add
add
xchg
inc
push
cmc
dec
cmp
jmp
cmp
cmp
fwait
lods
out
jns
leave
and
ret
xchg
insb
mov
cmpsb
or
popa
iret
add
repz
movsl
andl
xchg
xlat
mov
in
les
jne
mov
lock
sbb
in
icebp
xor
pop
add
xchg
out
mov
mov
push
pop
pop
pop
int3
ss
mov
outsl
inc
mov
jnp
fisubrs
mov
adc
cmpsl
xchg
or
jno
fwait
mov
mov
leave
and
pop
mov
gs
insb
dec
add
or
push
mov
push
pop
and
cwtl
popf
adc
movsb
gs
mov
mov
test
mov
sbb
aaa
or
mov
sub
mov
sub
movl
jp
xor
xchg
push
sub
test
es
push
jp
mov
lea
jp
mov
aas
xchg
aaa
xor
loop
pop
mov
push
or
cmp
lret
mov
cmpl
or
add
mov
add
xchg
lods
sbb
cmpsb
aas
in
es
insl
fildll
mov
pushf
sahf
ret
mov
mov
sahf
mov
mov
nop
rcrb
rcll
mov
add
mov
jl
xor
insb
fistps
shll
ljmp
jmp
pushf
push
lock
inc
fisubrl
pushf
mov
fsubrs
pop
jb
nop
or
sub
sub
xchg
adc
sub
ficomps
or
jge
clc
sbb
mov
push
test
cmp
out
aam
inc
dec
jnp
int
shrl
adc
and
dec
add
cmp
push
xor
mov
cmp
mov
pop
rcr
movsl
mov
dec
or
cmp
fdivl
or
mov
stc
imul
call
out
fisttps
add
and
das
stc
mulb
or
and
lret
adc
push
movsl
adc
setl
call
push
and
sub
xor
cwtl
fstl
cmpsb
or
pop
popa
dec
pop
repz
and
and
mov
popf
sub
adc
dec
cmp
mov
ss
mov
pushw
cs
lret
mov
jb
das
aaa
rcrl
imul
ds
jmp
push
xorb
sub
iret
jmp
push
and
sar
cmpsb
xor
jno
push
sbb
mov
dec
xchg
iret
inc
fstp
xchg
repz
je
jecxz
cmpb
pop
enter
pop
pop
mov
mov
sbb
sbb
popf
cmpsb
shlb
or
int3
xchg
dec
adc
call
dec
out
sub
popa
js
mov
push
dec
pop
in
cmp
sbb
jno
jnp
out
imul
leave
pop
sbb
popa
or
in
pop
jnp
lock
or
xchg
push
lcall
aas
in
mov
lds
mov
sub
int3
cmp
dec
repz
inc
sbb
clc
xchg
adc
je
cmp
xor
loopne
insl
and
pop
push
mov
dec
cmp
dec
add
je
fdiv
dec
test
add
call
pop
jb
sbbl
fwait
lods
aad
gs
cmp
push
lods
sbb
xor
rcrl
lds
inc
or
dec
cmp
cmp
pop
fcompl
pop
call
int
dec
push
out
test
inc
pop
sti
sub
imul
or
mov
sarb
mov
push
and
cmp
xorl
stos
js
stos
inc
add
push
insb
popa
ret
pop
dec
sbb
mov
and
jbe
mov
sub
push
mov
sbb
mov
in
sarl
add
addl
inc
jmp
xchg
lock
mov
and
popf
icebp
push
lret
std
xchg
sub
gs
push
out
mov
cs
push
add
ss
fsubrs
dec
insl
arpl
shl
and
pop
rcrb
jbe
mov
xor
xor
pop
jnp
scas
addr16
call
ret
dec
jbe
xchg
das
pop
mov
lea
lds
add
dec
rcr
imul
push
fucomip
mov
or
xchg
dec
xchg
stos
xchg
jmp
cmpsb
xchg
stos
addr16
or
push
in
inc
popf
out
sbb
ret
adc
lea
imul
jbe
ret
fdivs
rorb
aad
faddl
mov
inc
mov
out
mov
test
push
movl
adc
jmp
ret
pop
mov
adc
in
cmp
push
je
clc
loope
or
and
cmp
sub
stos
jge
lret
incl
xchg
mov
xor
mov
xchg
inc
cmpsl
cmp
and
outsl
dec
mov
divb
addb
add
out
sub
andb
iret
xchg
je
pop
ret
jb
fdivl
sub
or
jmp
inc
loopne
push
mov
cmc
sbb
and
sahf
and
shlb
arpl
sub
testl
sub
cltd
xchg
enter
mov
pop
xchg
cmpsl
sub
pop
mov
in
dec
jmp
hlt
pop
dec
js
cmp
enter
sti
leave
mov
cmp
out
mov
out
and
cmpsl
fs
les
mov
jge
lea
rclb
cmc
hlt
pop
in
jl
cmc
ret
xchg
mov
addl
xchg
jecxz
aas
xchg
push
inc
clc
adc
ljmp
repnz
jbe
loopne
mov
mov
push
cmp
sub
fdiv
addr16
not
mov
xchg
pop
and
or
inc
cmp
and
inc
jp
ja
fistpl
daa
and
jne
in
addr16
jl
mov
negb
lds
rcll
std
mov
xchg
xor
leave
or
fstps
stos
add
movsl
insb
mov
xchg
xchg
inc
out
lret
stos
mov
xlat
cmp
or
data16
mov
lods
pop
cmpsl
lods
mov
xchg
cmp
sub
fisttpl
mov
mov
or
mov
pop
pushf
xor
cs
mov
nop
xor
push
daa
test
cltd
pop
mov
das
dec
jbe
mov
mov
mov
addr16
lret
jmp
ja
bound
xchg
repnz
jmp
and
imul
loope
mov
out
sti
push
sub
out
fimull
jecxz
lods
imul
sbb
and
loopne
loope
inc
mov
pop
jo
adc
insl
cltd
std
in
cmc
push
xor
in
or
outsl
mov
xchg
loope
dec
sub
mov
cmpsb
and
push
dec
cmpsb
mov
clc
out
push
in
jns
adc
fwait
sahf
or
movsl
cli
loope
scas
adc
jne
jno
sbb
inc
imul
sbb
flds
pushf
mov
pop
shlb
mov
popa
mov
lahf
roll
mov
fadds
cmpsl
ss
inc
pushw
cmp
mov
shll
in
push
insl
popf
mov
hlt
scas
jnp
and
test
inc
lods
sub
test
xor
outsl
ljmp
xlat
lret
and
add
push
loope
or
dec
inc
mov
mov
pushf
sub
push
inc
jg
outsl
cmpsl
enter
call
sub
lea
std
test
jmp
or
push
lret
pop
mov
gs
nop
inc
shrb
loop
lds
lds
stos
fdivrp
stos
daa
std
jl
int
test
fnstcw
jl
hlt
and
into
xlat
and
roll
std
xchg
or
xor
mov
cmp
sub
or
imul
push
loopnew
sbb
push
inc
mov
lods
mov
aad
cld
iret
cmp
dec
adc
ss
out
leave
cmp
movsb
inc
add
cmp
xchg
inc
mov
fwait
sbb
jbe
push
in
out
sbb
and
push
xchg
stos
cwtl
mov
std
add
jbe
xchg
lea
cwtl
divl
loopne
inc
fisubrl
cmp
out
mov
pop
inc
test
out
inc
popf
push
mov
ja
mov
mov
pop
rcl
and
nop
adc
mov
dec
mov
adc
stos
mov
jnp
add
out
cmp
mov
xchg
stos
into
cltd
and
and
xor
scas
push
or
push
imul
mov
je
outsl
mov
scas
lcall
pop
xchg
push
sub
lods
mov
mov
adc
cmp
pusha
jnp
aad
jbe
sbb
xor
push
mov
rcrl
cmp
or
ja
mov
aaa
jae
inc
and
dec
inc
ficoml
ljmp
into
mov
push
xchg
xorb
mov
rcr
lods
jmp
and
int3
push
fcompl
xor
mov
pop
push
sbb
cmpsl
cmp
in
bswap
xlat
xor
dec
or
jp
adc
sbb
mov
ja
inc
test
cmp
pop
mov
or
in
js
push
subl
and
inc
mov
xorb
inc
movlps
lcall
dec
lcall
gs
fwait
add
ss
rol
jne
xlat
xchg
pop
mov
add
pop
call
xor
aad
das
sub
pop
insb
or
xor
xorl
mov
mov
mov
pushf
sbb
adcl
jp
cmp
dec
out
xchg
gs
arpl
push
mov
add
mov
pop
and
pop
add
popa
int
sti
xlat
in
aaa
bswap
jns
icebp
inc
bound
and
mov
sub
sbb
clc
mov
inc
adcb
sar
out
clc
pushl
inc
or
add
or
fldenv
outsb
ret
xchg
pusha
hlt
aam
mov
cmc
jae
push
mov
lods
in
clc
add
dec
sbb
es
loopne
mov
mov
addr16
movsb
and
dec
jbe
rclb
xchg
pop
mov
dec
insl
mov
psraw
out
imul
push
fidivrl
adc
xchg
mov
lret
pop
or
inc
cmp
iret
xlat
divl
sub
cmp
mov
inc
jp
pusha
jne
imul
mov
sub
test
lret
out
fadd
jp
ret
fcompl
jnp
aas
cltd
pop
xlat
cmp
sub
test
test
cli
popa
and
sbb
mov
mov
rclb
popf
lods
fs
arpl
test
mov
dec
and
leave
push
dec
stos
or
subl
adc
mov
cmc
shlb
push
xchg
cmp
push
jae
sub
push
int3
jmp
xlat
mov
xor
push
sub
fstps
out
scas
sbb
divl
in
xor
ds
outsb
cmc
sbb
lcall
inc
push
div
out
inc
inc
jg
pop
cld
jle
jns
sbb
bound
ss
pop
aad
jle
in
adc
rcr
cmp
mov
xchg
stos
outsl
fsts
outsb
xchg
mov
mov
inc
inc
pusha
push
dec
stc
sbb
sahf
call
pop
pushf
lods
push
and
test
jecxz
imul
mov
cmc
inc
xor
mov
shlb
inc
push
pop
and
jne
jo
push
pusha
xor
test
gs
mov
push
leave
jnp
xor
cmp
sbb
loopne
sbb
and
mov
jecxz
cmp
scas
shr
in
mov
pop
lret
mov
sub
rcl
mov
fs
inc
insb
out
jle
pushf
pop
in
jb
mov
iret
push
stc
divl
test
mov
push
test
xchg
xor
pop
mov
in
jl
xchg
out
add
inc
xlat
xchg
push
bound
inc
addr16
enter
push
pushf
test
in
inc
cs
fidivs
push
mov
outsb
test
daa
mov
xchg
push
insb
mov
inc
imul
jl
dec
pop
ret
jg
push
and
popa
inc
pusha
mov
aad
xchg
lods
int
xor
inc
rolb
int
xchg
fcompl
mov
repz
lret
mov
sub
cwtl
dec
mov
mov
xchg
std
add
popf
add
push
leave
sbb
cmp
jae
jecxz
lret
pop
bound
pop
mov
mov
lcall
mov
push
test
lret
xchg
stc
push
xor
scas
jmp
popf
lea
and
popa
mov
das
lcall
mov
loope
xor
cmp
add
dec
push
stos
inc
out
in
mov
imul
push
les
and
push
rorl
push
add
iret
nop
mov
and
es
mov
mov
dec
loop
loope
cmp
mov
jno
and
pop
ja
ss
aad
mov
jl
insl
xor
out
mov
sbb
mov
push
mov
arpl
rorl
sbb
or
mulb
mov
sub
pop
fidivrs
xchg
jp
shrl
mov
popa
mov
jmp
in
sub
lods
lret
insb
cmpsl
xlat
cwtl
insb
pop
and
sbb
shll
inc
mov
js
mov
xchg
bound
and
or
jl
xchg
and
mov
imul
pushl
mov
xchg
outsl
scas
jge
subl
int
cwtl
inc
les
insl
xchg
jmp
loope
hlt
pop
jge
cmp
gs
xor
in
mov
mov
std
jge
pop
and
lahf
or
push
mov
js
sub
outsb
sbb
clc
xchg
adc
xchg
aaa
lds
jp
shll
mov
jo
clc
jle
stos
scas
dec
jge
push
jb
lock
movsl
imul
aam
push
test
push
cwtl
subl
pop
adc
cmc
divl
paddq
inc
mov
es
orb
outsl
ss
pop
insb
ljmp
jl
loopne
mov
enter
out
lea
inc
lret
dec
xchg
jecxz
mov
movsb
mov
push
test
sub
jo
mov
stos
stos
jae
das
or
xchg
out
insl
mov
lds
out
test
mov
and
xchg
je
test
inc
outsl
jb
mov
or
inc
cmp
ja
les
push
dec
mov
fldenv
fsub
sbb
dec
mov
xchg
sbb
pop
jle
jno
fisubrs
leave
loopne
jp
call
mov
jle
dec
xchg
test
xor
mull
pop
lods
jp
add
pop
mov
xor
lahf
les
mov
push
movb
xor
icebp
push
das
pop
cmp
adc
cs
inc
sub
mov
into
les
rcl
pop
frstor
xchg
mov
sub
int
int3
sub
xchg
fwait
inc
jno
mov
pop
pushf
mull
sub
adc
enter
shrl
push
mov
cli
cltd
cmpsl
jl
ljmp
pop
in
gs
idivb
add
call
jno
cltd
push
inc
inc
hlt
mov
xor
je
mov
xchg
ds
jno
jns
and
dec
cmp
popa
cmp
stos
mov
pop
xor
pop
sub
sbb
jo
jl
jne
xor
sbb
mov
lret
mov
shll
pop
pop
inc
lock
adc
testb
jae
pushf
jo
xchg
imul
in
xor
push
inc
xor
roll
dec
testb
outsb
out
or
xor
mov
xchg
decl
xor
mov
cmp
clc
dec
in
dec
or
int3
stos
dec
movsl
gs
ljmp
push
lock
push
nop
sbb
popa
mov
outsb
cmpsb
pop
jg
pop
xor
imul
addr16
jg
xor
or
inc
les
lea
inc
xchg
sahf
inc
je
dec
in
push
loopne
movsl
xor
xor
mov
popa
js
out
in
xchg
mov
aaa
test
xor
pop
pop
repz
lret
mov
subl
stos
pop
adc
pusha
pop
xchg
and
adc
xchg
mov
jp
mov
and
fstpl
dec
in
push
inc
push
rcr
test
bnd
xchg
adc
fsts
adc
test
enterw
push
or
movsl
pop
inc
pusha
std
fistps
loopne
sub
rclb
int
inc
push
movsl
jne
int3
inc
xchg
add
cmp
xor
pusha
add
push
push
imul
sbb
and
pop
leave
cli
lahf
ss
adc
movsl
leave
mov
aaa
xchg
loop
shll
mov
popf
leave
shl
nop
mov
or
nop
add
push
imul
dec
fcoms
lcall
sbb
ret
jge
inc
cld
das
lock
cltd
xor
lcall
xorb
loop
sbb
cwtl
cmp
repz
xchg
push
mov
stc
jg
pop
call
xchg
idivl
xor
shl
pushf
mov
ret
mov
jge
mov
stc
sub
mov
sbb
int3
pop
insb
lcall
icebp
lock
and
inc
mov
and
ljmp
add
pop
mov
sub
mov
pop
jmp
dec
shlb
jno
insb
xchg
or
fdivl
in
mov
cmpsb
lods
inc
push
jmp
cmp
jle,pt
adc
fmull
sub
xor
push
out
or
sbb
lds
add
lods
outsl
xlat
adc
mov
repz
insb
ss
out
aaa
pop
call
sbb
or
ljmp
cld
and
shrb
or
cmp
popf
fs
inc
mov
or
xor
int3
or
das
shlb
inc
inc
mov
js
xchg
and
push
scas
bound
out
test
mov
xchg
cmp
das
ret
adc
aaa
or
add
mov
pop
inc
lret
cmpsl
lods
fmull
test
xchg
jo
jmp
mov
jbe
or
pop
adc
cmc
cmp
clc
mov
decb
mov
pop
pop
add
in
mov
push
test
out
xor
jge
jo
nop
ss
cwtl
mov
mov
adc
mov
and
xor
xchg
mov
and
cmp
into
xor
pop
sbb
mov
xchg
sbb
test
adcl
mov
adc
mov
aaa
adc
inc
fbstp
pop
mov
bound
stc
lea
aad
inc
out
jp
push
push
jcxz
xor
xchg
dec
push
pop
insb
push
inc
lcall
jp
fsubr
out
push
sbb
sub
cli
outsb
push
ja
insb
pop
stc
jecxz
sbb
pop
push
pop
add
dec
jge
inc
xor
xor
cld
xchg
subl
jmp
jns
mov
repnz
sbb
xchg
mov
or
mov
inc
xor
cli
lahf
ret
fistpll
pop
push
push
mov
push
pop
cltd
inc
xor
inc
adc
adc
flds
movsb
push
mov
inc
test
dec
movsb
dec
mov
jb
lods
mov
sbb
cmc
pop
sub
mov
add
add
pop
and
incb
pusha
inc
cmpl
mov
mov
lcall
jecxz
jl
mov
cmpsb
xchg
cmp
sub
mov
shll
ja
repnz
jns
shrb
push
jp
adcl
jno
and
or
cltd
sti
call
in
rcrl
xor
les
push
add
adc
cmpsb
xchg
es
ret
adc
shl
jmp
push
addr16
cmc
int
sti
out
dec
cmp
filds
fsubrl
lock
inc
lods
lds
pop
lsl
inc
es
cmp
mov
pop
nop
mov
or
pop
repz
jle
sub
sub
fwait
mov
or
push
sbb
popa
testb
js
dec
and
inc
jmp
aad
sti
gs
sahf
jmp
inc
adc
stos
fildl
outsb
ds
add
or
sbb
repnz
pop
mov
push
ret
fstps
lret
add
push
outsl
in
cmpsl
shll
mov
ljmp
push
lret
or
dec
mov
imul
dec
mov
mov
mov
loope
stos
xchg
jge
cli
flds
mov
jmp
mov
mov
mov
pop
test
sbb
imul
xchg
roll
dec
cwtl
push
repnz
outsl
or
nopl
pop
mov
push
das
add
adc
and
mov
imul
and
cmpsb
mov
sub
je
push
stos
lret
sbbl
lret
or
jl
in
push
jns
ret
leave
jmp
cwtl
adc
sti
test
call
ja
push
dec
push
push
push
jle
jp
xor
shl
cmp
inc
subl
sub
mov
shrl
ja
or
and
nop
sub
jns
jle
nop
lods
sub
or
mov
inc
test
jl
pop
mov
add
dec
jge
or
ljmp
outsl
xor
xor
mov
mov
inc
add
dec
sti
movsl
negl
xor
dec
mov
loop
xor
fiadds
sbb
push
xchg
and
sub
popa
mov
daa
xor
jnp
mov
cmp
pop
imul
out
dec
fstpt
sbb
pop
cs
cmp
in
or
rcrb
ljmp
sbb
add
dec
cmp
and
sbb
mov
xlat
in
inc
add
push
push
mov
xchg
cwtl
mov
data16
les
push
jns
jecxz
scas
mov
lods
sub
daa
dec
enter
and
sub
outsl
add
daa
mov
data16
call
inc
xor
mov
jg
std
sbb
cmpb
cmp
jo
jae
jg
loopne
aad
mov
push
jb
imul
xchg
sbb
fidivrl
and
popa
sbb
lock
lods
enter
dec
mov
mov
shl
sbb
mov
stc
hlt
pop
iret
roll
xchg
data16
mov
in
inc
sbb
rcr
mov
aad
sub
xchg
inc
dec
adc
popf
jg
ret
inc
addr16
mul
xor
pop
int3
repnz
loope
jae
mov
xchg
gs
fsubrl
jle
xor
push
pop
sbb
or
inc
mov
push
mov
movsl
movsl
in
push
xchg
cli
jne
push
orb
mov
shl
xor
lock
loop
ds
cmc
dec
cmp
cs
testb
in
jo
pop
mov
mov
cmp
jns
cmpsb
in
dec
sbb
sub
sub
cmp
pop
dec
dec
stos
adc
jne
pop
stc
scas
mov
aam
xchg
jne
mov
call
stc
loope
or
adc
clc
ja
insl
jb
ret
lds
sbb
lock
in
and
adc
push
in
ret
or
cli
pop
dec
xor
out
mov
sub
pop
sub
add
cmp
inc
lods
push
nop
mov
or
push
dec
out
cmp
mov
cli
xchg
out
cmp
outsl
insl
adc
xchg
lock
test
or
xchg
cmp
cmp
loopne
inc
jns
orb
xor
test
jp
fimull
push
ds
imul
das
and
pop
fiaddl
stc
mov
mov
movsb
aad
cmpsl
loope
xchg
mov
inc
mov
add
mov
mov
lcall
push
and
pop
cmp
xor
sbb
lret
sub
dec
jb
fiadds
call
sahf
clc
popa
dec
cmp
push
addl
pusha
xlat
sub
pop
imul
mov
idivl
enter
mov
xchg
mov
jae
imulb
inc
rclb
push
jb
ret
or
and
jle
pushfw
mov
and
mov
pop
xor
adc
cmp
lcall
lcall
popa
xchg
push
mov
loopne
testb
into
test
repnz
inc
movb
dec
ss
inc
dec
adc
jl
pop
or
leave
in
movl
jmp
mov
mov
loope
add
movsb
loope
dec
pop
cmp
dec
decb
sbb
mov
adc
push
add
sub
das
aam
fisubs
or
mov
dec
aaa
call
push
imul
fldcw
jb
lds
scas
adc
mov
xchg
ja
and
mov
lret
or
push
xor
jne
scas
icebp
jmp
push
pop
clc
addr16
idiv
xor
push
dec
in
push
outsl
sbb
dec
adc
jbe
gs
clc
lods
push
cmpsb
sub
adc
outsb
icebp
cwtl
xchg
mov
xorb
test
xlat
push
jno
push
movsb
inc
bound
fstl
add
jmp
sbb
shrb
xor
mov
mov
sar
cs
push
mov
loopne
orl
dec
push
xor
pop
push
sbb
sarl
xchg
ret
es
pop
pop
mov
lea
int
dec
pop
out
sti
jno
xlat
sbb
and
mov
int3
push
mov
push
das
cmp
f2xm1
xor
or
push
aas
popf
mov
fisttpl
jne
jae
lock
xchg
jg
bound
jp
add
scas
add
ficoml
adc
cmp
int3
xor
fidivrl
sbb
popa
jno
dec
rorl
js
cli
lret
cs
push
cmp
daa
aad
sub
add
xlat
dec
xchg
mov
out
mov
or
dec
fwait
test
sub
mov
inc
xor
mov
rcl
ret
into
es
pop
push
mov
movsl
xor
cmpsl
or
out
arpl
out
rcrb
aad
out
les
sbb
mov
jno
cwtl
sub
inc
xchg
fsts
roll
fwait
shll
cmc
cltd
adc
sub
xchg
fisubs
inc
adc
in
jmp
iret
data16
fildll
mov
jge
popf
aam
mov
jno
frstor
iret
xlat
and
cmpsb
test
jno
pop
add
pushaw
xor
sahf
mov
lcall
add
out
jl
lods
jno
in
in
cmp
loope
in
lods
sub
sub
stos
mov
push
sbb
leave
sahf
loope
add
cmp
adc
in
mov
sub
popf
jbe
add
pop
mov
pop
xor
test
jp
inc
cmpsl
cli
loopne
lods
cmc
subl
addr16
sbb
xor
cli
icebp
jg
ss
fistpl
sbb
outsb
stc
cmpsb
das
xchg
or
das
lret
xor
sub
lcall
pop
cwtl
push
push
sub
lret
mov
push
pop
in
scas
imul
scas
mov
mov
add
aas
jp
or
dec
ds
lds
lock
cmp
das
inc
jmp
aam
das
add
icebp
inc
call
leave
mov
ret
dec
mov
adc
or
xor
xchg
pop
inc
mov
cs
dec
pop
loope
cmp
out
inc
and
push
sub
test
push
insb
jne
scas
add
js
sub
outsl
mov
lret
fwait
xorl
movsl
xor
repnz
mov
mov
shll
in
inc
div
pop
cmpsl
xchg
or
pop
adc
or
popf
icebp
call
sbb
pop
mov
loop
sar
out
xchg
das
add
cmp
pop
sbb
mov
dec
inc
mov
cs
frstor
sub
std
out
adc
push
bound
sub
sti
adc
xchg
xor
adc
mov
ss
push
imul
mov
jmp
cmp
ljmp
xlat
mov
dec
in
cmc
test
addr16
ficoml
aas
jmp
outsl
mov
push
shlb
push
and
aaa
lds
xchg
cmpsl
pop
test
shr
imul
ds
sub
xor
pop
xchg
jp
fiaddl
cltd
jge
mov
sub
sbb
pusha
jmp
daa
popa
frstor
rorb
out
in
push
shlb
push
xor
cmp
inc
fwait
icebp
movsl
push
sarl
mov
add
mov
lock
int
jle
test
add
mov
pop
mov
cmp
mov
adc
int
cmp
xor
push
cld
cmc
lret
cs
jae,pn
mov
push
xchg
shl
mov
aam
jo
pop
js
mov
sub
add
pop
add
loopne
movl
in
sbb
sti
mov
ja
pop
or
xor
scas
cmp
int3
or
in
add
xchg
andb
sub
rorb
jmp
or
cs
jb
dec
jecxz
inc
sti
mov
adc
pop
loopne
jne
outsl
jmp
mov
pop
xchg
pop
sbb
pushf
pushf
dec
sbb
and
cld
mov
lcall
and
ret
cmp
lea
jge
in
mov
lods
sub
sbb
mov
jl
mov
rorb
loope
jge
pop
insb
ja
and
sahf
sub
sti
pop
lock
cmp
jbe
sbb
ja
pusha
mov
lods
add
push
movsl
mov
fsubs
or
and
mov
in
shrl
xlat
jecxz
inc
sub
gs
test
fwait
sbb
ficoms
mov
stos
rcr
pop
mov
pop
pop
lds
adc
pop
pop
decb
push
lods
addr16
bound
cmp
ret
out
movsb
pop
inc
lret
adc
cmp
mov
mov
push
in
movsl
insl
xor
jg
sahf
movb
push
jns
mov
or
lret
js
xor
cmp
and
push
mov
xchg
popf
and
loopne
sahf
sub
xchg
inc
lock
sbb
pusha
repz
aaa
cld
dec
or
and
xchg
arpl
test
and
scas
mov
das
cld
lahf
or
dec
loop
inc
popf
jle
inc
add
lret
lods
xor
fwait
popa
cmp
mov
xor
shlb
jmp
sub
mov
outsb
push
rcll
shlb
push
jo
add
cld
in
popf
mov
adc
cwtl
cmc
lret
repnz
push
fmull
push
pusha
fs
jo
pusha
out
js
jno
ljmp
xchg
dec
stc
popa
sbb
xor
pop
cmp
imul
mov
xor
out
or
aas
cli
shrd
dec
lock
fcompl
shll
push
ljmp
lds
inc
mov
lcall
sub
add
inc
push
inc
sbb
pop
cli
adc
cld
fdivl
lea
pop
mov
addr16
jae
les
repz
mov
xchg
sub
mov
rolb
lahf
push
stos
cmp
mov
add
add
add
sub
xlat
jno
sub
dec
mov
fcoms
pop
add
divb
jne
mov
ret
inc
rcrl
mov
sbb
jle
ljmp
sbb
ret
mov
imul
cmc
lret
cltd
add
pop
adc
pop
lods
xchg
sbb
repnz
ret
push
pop
inc
jg
test
ljmp
stc
lcall
xchg
fdivs
dec
mov
iret
jle
mov
cwtl
mov
jl
aad
or
mov
xor
int3
dec
fmull
sub
mov
leave
scas
push
sbb
cltd
clc
jno
js
xor
test
in
pushf
out
in
movsl
repz
pop
mov
lea
ss
clc
imul
addr16
arpl
packssdw
inc
ds
pop
mov
loop
mov
mulb
xchg
mov
aaa
popf
iret
lea
push
pushf
push
daa
enter
popa
js
sub
sbb
fistpl
add
pusha
es
in
dec
push
pop
shll
or
jge
jecxz
sub
in
jp
cmpsl
int3
add
cmpsb
lret
xchg
rcl
les
pop
sbb
mov
clc
mov
cli
fwait
into
gs
psllw
aam
inc
int
xchg
into
xor
inc
fs
imul
adc
fildll
cmp
popf
imul
leave
sti
subb
mov
mov
mov
ret
out
lcall
shrl
cmpsl
gs
das
xchg
add
sbb
push
push
fmuls
scas
stc
pmaddwd
pop
xchg
mov
lds
addr16
dec
push
imul
mov
shll
sbb
cmpsl
mov
out
xchg
sub
or
fs
mov
cmp
jecxz
pop
leave
mov
fwait
jg
scas
cmp
daa
or
xchg
test
lods
cltd
mov
ss
repnz
sub
sti
xchg
pop
push
jns
fldcw
iret
das
mov
jmp
mov
shlb
test
pop
sbb
in
clc
pop
imul
pop
mov
das
into
mov
clc
icebp
rcll
pushf
xor
popf
call
xchg
gs
sub
xchg
sbbl
fsubrl
into
lahf
jo
sbb
pop
aas
mov
jle
out
xchg
mov
das
scas
lcall
test
in
xchg
adc
sbb
push
cmpsl
int3
mov
shll
rcl
ds
mov
inc
movsb
push
lret
xor
pop
mov
mov
test
inc
jge
adc
inc
icebp
lahf
mov
sbb
pop
pop
bound
mov
std
sub
sbb
xor
arpl
push
sti
mov
xchg
jo
addr16
int3
scas
cmp
jl
sub
ror
mov
xlat
clc
sub
sbb
sbb
stc
fiadds
lds
sub
and
mov
in
sub
jge
push
jbe
add
mov
mov
add
jnp
adc
pop
pusha
insl
cmp
dec
in
in
arpl
and
sbb
pop
push
loopne
xor
out
repnz
std
lea
mov
pop
xor
sbb
pop
dec
xor
cmp
fwait
in
test
and
xchg
les
in
idivb
es
in
cmpsl
cmpsl
pop
js
or
pop
cmp
and
lret
jmp
and
inc
data16
jnp
sub
fisubrs
sub
dec
xchg
sub
mov
icebp
add
sbb
fldenv
mov
cmp
xor
cmp
test
repnz
rorb
jbe
jb
lret
pop
dec
in
adcb
jge
mov
movsb
mov
mov
pop
push
mov
test
or
mov
cmp
test
es
push
mov
ss
scas
hlt
std
sub
popf
jae
pop
and
sub
dec
jmp
jge
int
xlat
fcmovne
leave
fcmovbe
pushf
mov
push
or
or
jmp
adc
addl
loopew
les
adc
ret
out
addr16
xchg
enter
push
xchg
pop
mov
mov
fisttpll
pusha
das
pop
fldenv
sbb
add
fwait
scas
shlb
cltd
insb
cmp
sbb
sbb
sbb
xor
in
sub
cmp
pushl
lea
lods
stos
jl
and
xchg
cmp
lret
sub
sbb
or
and
pop
pop
test
jmp
in
pop
jp
fidivl
lods
mov
dec
sub
inc
mov
fsubs
outsl
xchg
or
dec
mov
and
int3
movsb
mov
xor
cmp
dec
jo
or
push
mov
push
push
movhps
and
fiaddl
mov
ret
cmp
gs
cmpb
adc
jno
lea
or
adc
loop
inc
jp
addr16
insl
jecxz
add
pusha
mov
xor
divl
cmp
xchg
fcmovnbe
out
jecxz
add
mov
jg
mov
call
cld
lods
jb
and
dec
sub
mov
frstor
sbb
dec
movl
inc
lcall
push
lods
cmpsb
pinsrw
and
jle
sbb
jge
divb
test
scas
jnp
dec
mov
mov
sbb
push
das
mov
int
push
out
rol
dec
dec
iret
sbb
push
dec
sti
add
jmp
mov
push
out
shll
roll
fsubs
pop
pop
pop
into
rorl
pop
in
jo
test
xor
stc
outsb
test
shll
jp
insb
and
movsl
cmp
daa
movsl
push
pop
test
loope
inc
and
jle
xchg
clc
lds
push
mov
push
push
and
lahf
xchg
push
sub
fwait
in
cmp
dec
and
fcompl
mov
dec
psrlq
xchg
pop
mov
jae
in
bnd
fidivrs
js
popf
add
adc
mov
divb
mov
sub
stc
and
jg
dec
cmpsl
mov
stc
mov
daa
stos
xchg
or
jno
or
cmp
mov
xor
fucomi
pop
mov
sbb
xor
popf
es
cmp
in
jno
pop
je
xchg
sbb
push
leave
fcompl
fwait
repz
sti
and
cli
xchg
gs
inc
lds
dec
inc
movsl
xchg
pop
mov
in
movsl
jbe
pop
mov
sbb
test
leave
xchg
stc
lock
icebp
bound
mov
std
pop
cmc
cmc
in
inc
xor
test
cmp
stos
scas
adc
inc
sbb
in
int
and
rclb
mov
mov
incl
push
xor
popl
shlb
xchg
jecxz
jl
aas
sbb
jecxz
dec
faddl
sbb
mov
aaa
inc
pop
inc
adc
sti
cli
push
fldl
cmpsb
mov
jecxz
add
mov
adc
cmp
mov
inc
mov
xchg
aam
push
dec
dec
jecxz
sbb
rcll
jne
or
push
loop
push
jne
dec
inc
xor
cltd
ss
cwtl
mov
jge
inc
mov
or
negl
je
test
sar
iret
ljmp
adc
mov
and
push
dec
mov
fisubl
mov
mov
std
ljmp
sahf
push
test
ljmp
ret
push
das
mov
imul
iret
test
ljmp
sbb
mov
sbb
mov
mov
gs
in
aad
jl
push
inc
xchg
fbstp
sbb
pushf
ffree
dec
xchg
xchg
inc
pop
popa
xchg
push
mov
sbb
icebp
ret
add
push
je
lods
test
stc
call
or
sub
and
data16
push
inc
jl
mov
or
xchg
push
cmp
pusha
cmp
movsb
adc
mov
mov
out
xor
or
aas
aas
nop
shlb
testl
popf
pusha
xor
lahf
leave
dec
stos
dec
in
cmp
mov
insl
xchg
jns
mov
dec
pushl
rcrl
call
and
sbb
sub
jge
xor
mull
mov
negl
pop
cmp
jg
test
dec
jb
rcll
push
fisttpll
xor
and
inc
out
add
add
xchg
pop
or
int
cmp
je
enter
loopne
and
xor
push
stos
imul
lods
pop
shll
or
aad
jns
test
cmp
mov
jb
lret
cmp
fwait
inc
jno
dec
loopne
popf
popa
in
sahf
xchg
cs
and
pop
jmp
aad
lock
pop
jmp
lret
aad
sub
mov
sub
in
shll
idivl
jae
jnp
dec
or
add
adc
out
rol
in
push
or
pop
add
dec
xchg
fwait
push
test
fcomip
inc
out
mov
cmp
imul
push
xchg
mov
in
lods
or
stc
lea
jp
xor
fldcw
stos
pop
rorb
iret
jnp
jle
cwtl
jle
jle
not
mov
fstps
mov
mov
lea
imul
into
add
cmp
mov
lods
cli
xchg
shll
and
pop
movsb
dec
mov
mov
mov
je
add
pusha
xchg
inc
inc
cs
cmp
aaa
pusha
mov
inc
lea
stc
pop
xchg
stc
daa
xor
loope
arpl
cmpsl
ret
and
fwait
ja
stos
mov
bound
ret
cmpsl
add
sysenter
stos
cmp
cli
sbbl
insb
pop
jecxz
jge
sbb
test
or
pop
gs
jnp
enter
inc
sbb
out
jecxz
push
ljmp
fmul
cltd
out
cmpsb
pop
xor
or
jl
push
push
push
mov
dec
mov
inc
xchg
mov
iret
push
test
cwtl
push
aas
test
out
push
dec
fwait
in
shrb
dec
push
clc
add
dec
aam
repnz
sub
insl
cs
and
pusha
xor
popa
outsl
mov
rorb
mov
cmpsl
push
mov
and
gs
mov
sti
loope
stos
sbb
xchg
adc
push
push
push
xchg
add
test
addr16
inc
popa
mov
scas
pop
inc
mov
insl
xor
popf
movsl
fisubrl
fldcw
out
stc
cmp
fdivp
bound
fsubs
fists
int3
mulb
push
lret
mov
stc
inc
add
xchg
call
loop
dec
push
jns
pop
roll
push
rcrb
xor
movnti
inc
pop
sbb
outsb
dec
ljmp
fdivs
pop
ret
push
dec
and
or
sbb
mov
cmp
adc
xor
sub
movsb
pop
cltd
js
jno
les
sub
or
push
push
xorl
fistpll
adc
push
and
fwait
add
lret
fbld
adc
or
xor
fidivl
out
push
mov
mov
repz
pop
xchg
cmp
push
ss
push
jo
jb
in
shll
es
push
sbbb
mov
scas
pop
lea
inc
jg
stc
add
and
pusha
andb
les
or
mov
push
sbbb
and
nop
pop
push
and
je
jmp
jno
mov
pop
mov
and
dec
fnstcw
sub
inc
dec
jmp
stos
jmp
js
mov
or
mov
add
and
or
decb
ret
jbe
movsl
ror
enter
or
push
sbb
cmpsb
push
stos
jne
xchg
xchg
jno
mov
jle
hlt
mov
push
movb
mov
out
cwtl
cmpsb
mov
push
sbb
hlt
std
cmpsb
movsb
mov
push
mov
filds
addb
pusha
xlat
lock
jb
enter
int3
adc
cmp
xlat
cmp
sbb
out
loopne
movb
outsl
sbb
lret
ret
sahf
dec
bound
mov
in
pop
and
stc
in
loop
push
inc
xchg
rolb
out
cmp
mov
ret
mov
push
mov
push
pop
imul
nop
mov
mov
aad
lea
int3
or
mov
xchg
faddl
lcall
scas
adc
dec
insl
pop
mov
cmp
cli
fisubs
in
andb
loope
sbb
jnp
jecxz
int
fs
nop
cld
push
or
lahf
stos
xlat
test
and
addr16
mov
jmp
push
addr16
push
ss
pop
sub
stos
xor
stc
mov
ficoml
jg
popf
fbld
or
push
sub
ljmp
into
nop
ret
dec
mov
jns
mov
mov
adc
imul
jmp
aas
loop
push
mov
add
repnz
sbb
bnd
cld
adc
ret
dec
add
jmp
fistps
movsl
push
mov
cmp
sbb
xor
fnsave
cmp
sbb
test
xchg
sbb
lds
jecxz
xor
mov
testl
xchg
xor
loope
cmpsb
adc
add
mov
or
sub
pop
jle
adc
xchg
fadds
inc
fmull
icebp
lds
lock
and
pop
mov
add
cld
jbe
add
popa
lock
push
add
lret
lods
sub
popa
and
push
rcrb
sub
fwait
sub
inc
mov
popa
inc
aas
sbb
mov
mov
call
cmp
inc
pmuludq
add
stos
push
scas
add
push
shrb
bnd
popf
xchg
cwtl
mov
jne
repz
mov
sub
jmp
dec
inc
pop
pop
mov
lcall
test
jnp
pushf
shlb
or
mov
fisubrl
stos
cmp
adc
in
sbb
sahf
push
xchg
sub
sbb
dec
notb
mov
daa
fstps
out
jbe
mov
inc
jmp
sub
dec
lret
pop
jne
std
lcall
sti
adc
in
mov
cwtl
jae
test
cmp
jb
sub
mov
xor
sub
loop
jmp
and
jmp
mov
js
and
adc
minps
adc
ss
jno
mov
or
adc
pop
jne
cmp
xchg
lret
lods
mov
xor
sahf
cmp
iret
mov
scas
pop
cwtl
out
mov
mov
jno
pusha
in
adc
rcrb
adc
push
mov
movsl
mov
mov
mov
and
mov
dec
mov
mov
mov
sti
inc
jmp
in
jb
pop
gs
adc
es
push
push
popa
roll
mov
dec
push
rcrb
std
jmp
push
sub
inc
in
pop
fbld
popa
outsl
adc
scas
push
ficompl
insl
bound
loop
fldenv
inc
sbb
or
and
imul
lds
xor
mov
jns
sbb
scas
mov
daa
xor
inc
les
jb
push
cmp
xor
inc
mov
mov
push
je
xchg
decb
rcll
imul
mov
and
fs
stc
sbb
popa
jl
dec
shlb
or
fisubl
add
jmp
sar
dec
inc
cmc
mov
xchg
fnstenv
sub
in
fisubs
hlt
aas
outsl
incb
cmc
test
gs
rcr
cmp
clc
pop
sarl
mov
or
push
icebp
sbb
aad
xchg
inc
xor
jno
sbb
fidivl
adc
call
mov
hlt
sbb
adc
outsl
xor
jge
pop
movsb
into
jecxz
inc
xchg
movsb
xchg
xchg
icebp
jl
mov
es
orb
data16
inc
lds
sbb
pop
xor
mov
mov
push
aad
add
inc
mov
ja
sbb
lods
add
outsb
sub
lcall
sti
rclb
in
cmp
arpl
xchg
rcrb
aad
sbb
mov
pop
adc
sub
fstpt
cs
mov
test
sub
inc
inc
stc
jmp
fs
xchg
sbb
test
cmpsb
mov
inc
mov
shrb
rorl
mov
mov
leave
jo
lods
iret
lret
ljmp
subl
push
cmp
xchg
mov
jbe
loop
cli
dec
icebp
pop
and
out
pop
push
ja
xchg
cli
je
sbb
pop
mov
mov
jmp
bound
mov
ds
dec
jo
mov
and
xlat
int
in
or
xchg
call
int3
outsl
outsl
ret
mov
xchg
cli
ljmp
outsl
inc
xchg
pop
clc
sub
mov
rcr
mov
aam
je
mov
loope
mov
cli
push
dec
ljmp
movsl
je
cli
or
dec
mov
fwait
jge
cmp
sub
dec
cmp
inc
hlt
mov
sub
popf
mov
aas
cmp
mov
rcrl
fidivrs
std
in
push
pop
cwtl
inc
shrb
out
in
test
push
push
jg
sub
sbb
scas
outsb
lock
repz
push
xor
push
add
es
xchg
int
inc
mov
dec
inc
in
cmp
mov
jae
add
cmpsl
pop
aaa
sub
jmp
xchg
out
repz
mov
push
sbb
aad
xlat
fstpl
repnz
mov
pusha
aam
lahf
movsb
popf
and
push
orl
push
mov
leave
xchg
push
fimuls
pop
js
stc
push
repz
mov
jnp
sbb
lds
jg
xsave
add
jmp
push
dec
sub
or
data16
in
rcl
dec
jecxz
das
loope
push
insb
push
adc
mov
and
sub
or
or
dec
push
sbb
nop
clc
into
faddl
out
mov
and
addr16
or
add
xor
jbe
loop
js
dec
addb
or
jmp
rclb
aad
les
loop
lds
pop
cmc
bound
insb
sahf
jne
xor
push
out
leave
xor
sub
sahf
lods
dec
popa
xor
movsl
dec
pop
test
jl
nop
push
out
xchg
push
setno
jae
jecxz
lock
mov
test
jns
subl
add
outsl
push
xchg
add
xor
ljmp
mov
sbb
int3
sub
adc
or
and
popf
fwait
cmp
pop
pop
inc
sbb
cmpsb
and
sub
pop
dec
in
fwait
jns
iret
fcmovb
inc
and
jg
test
xchg
js
aas
push
outsl
int
dec
bound
pop
mov
mov
jb
sbb
and
out
mov
pusha
mov
arpl
inc
loopne,pn
shrd
mov
arpl
inc
imul
inc
mov
inc
scas
inc
pop
daa
divb
xor
movsb
push
lods
pop
test
mov
repz
fstpt
sub
lahf
and
hlt
dec
xchg
sub
dec
and
aam
dec
loopne
pop
cmpl
dec
stos
and
xchg
xchg
adcb
add
jecxz
cmpb
jne
in
jbe
cs
rclb
aaa
or
push
jp
inc
ret
shl
insl
decl
imul
arpl
inc
mov
cli
in
daa
add
xor
js
sub
xor
out
push
movsb
dec
popf
add
mov
into
sub
mov
inc
inc
xchg
lahf
aaa
xchg
or
shl
xchg
cmp
dec
push
xor
pop
sub
daa
mov
ja
jb
mov
xor
daa
mov
lret
inc
jmp
arpl
cmp
jl
mov
jbe
jmp
push
shlb
push
fwait
push
aad
aas
repnz
adc
adc
sar
jnp
add
xchg
jmp
add
in
cmpsl
and
rclb
enter
fdivl
lea
rcrl
cmp
bound
push
dec
jge
and
rolb
cmp
inc
ret
nop
mov
imul
outsb
pop
cmpsl
test
mov
fisubs
mov
lea
mov
negb
push
pushf
fsubs
xchg
ljmp
push
stos
repnz
push
hlt
jle
mov
popa
dec
movsb
dec
push
or
mov
dec
loopne
cmp
xor
mov
pop
cld
cwtl
cmc
jnp
or
mov
pusha
dec
mov
mov
push
cmpsb
lcall
xchg
pop
in
push
popa
inc
xor
pop
mov
jno
loopne
pop
and
popf
push
scas
lea
push
les
hlt
pop
xor
enter
jbe
xchg
xchg
add
insb
in
or
inc
or
xor
outsl
sub
push
jecxz
dec
jne
xor
leave
dec
mov
and
iret
dec
jne
xchg
das
pop
mov
stos
cmp
cmp
xlat
cmp
pop
mov
loopne
test
pop
adc
lahf
mov
inc
and
test
xchg
andb
pop
icebp
loopne
loope
xor
dec
push
scas
jnp
dec
push
add
std
lods
stos
aam
repnz
or
cmovnp
xchg
xchg
pop
stc
inc
push
push
cmp
in
sarl
fcmovbe
scas
jo
enter
mov
mov
daa
xlat
popf
jne
sbb
lock
sub
rolb
jbe
enter
adcl
xor
ret
out
mov
in
je
sbb
inc
dec
cmpsb
fcomps
adc
push
mov
fchs
mov
cmp
pop
incl
xor
cmc
fistl
je
mov
jmp
ficomps
push
test
dec
inc
pusha
xor
inc
cltd
push
dec
mov
addr16
cmpsl
ss
pop
or
test
mov
fcmovu
inc
dec
xor
sbb
dec
inc
je
push
adc
insl
push
fwait
mov
dec
aas
push
xor
xor
and
adc
mov
xor
jge
rcr
mov
push
sbb
sbb
repnz
jle
fldcw
mov
or
xchg
adc
adc
jl
pop
inc
mov
jge
or
shll
cmp
mov
shlb
js
push
push
test
adc
lahf
dec
sub
shlb
push
lds
test
je
loopne
arpl
aas
lret
inc
loop
sub
xor
movsl
out
test
jne
jp
insl
test
aaa
lret
out
add
std
data16
mov
sahf
xlat
ljmp
mov
ss
scas
push
cld
aam
mov
xor
cmpsb
sbb
scas
or
sub
sbb
imulb
sbb
mov
pusha
ret
mov
lds
sti
popf
and
lret
and
pop
cmpsl
int3
inc
insb
adc
inc
enter
cmp
add
stos
enter
xor
arpl
push
or
aas
dec
jle
jge
mov
adc
sbb
adc
sub
dec
pop
daa
jbe
insb
mov
rclb
popf
dec
mov
lods
pop
divl
inc
cmc
cmp
sub
or
pop
sub
nop
inc
push
jb
out
jp
or
les
test
sbb
push
or
loope
popf
mov
or
sti
aad
loope
xlat
aad
dec
xchg
or
outsl
loop
std
add
push
sti
xchg
lret
push
cmp
cmc
dec
or
movsl
movl
mov
mov
shr
sub
scas
addr16
imul
push
sbb
xchg
in
or
sub
mov
sub
add
pop
ljmp
leave
push
or
sub
cs
pop
or
rcl
cmp
cmc
std
repz
jnp
xor
xor
adc
das
movsb
scas
inc
pop
sti
orb
jecxz
jmp
stos
inc
inc
push
addr16
dec
shlb
mov
shll
sbb
out
imul
lahf
or
add
xchg
pop
push
bound
outsl
iret
aam
cli
pop
sbb
aam
ljmp
out
inc
push
sbbb
inc
insl
fwait
xor
mov
push
mov
or
leave
cmp
daa
cs
sarl
insb
popa
cld
test
xor
or
pop
and
sub
fildll
push
in
inc
les
push
aas
push
cli
gs
aam
cwtl
push
xsha1
cmpsb
or
int3
idivb
xchg
inc
adc
and
sbb
inc
adcb
mov
xchg
imul
mov
sbb
ror
lds
sbb
fisttps
movsb
push
test
mov
cmp
push
fs
imul
push
push
sub
aas
mov
cmp
add
xor
inc
lea
jo
dec
push
sub
xchg
shrb
out
mov
movb
jbe
sti
in
lods
ds
jns
mov
sbb
or
adc
or
inc
add
ret
dec
mov
jb
stc
and
push
xchg
pop
cmp
or
mulb
roll
popf
ror
push
mov
push
pop
cmpsl
int3
repnz
adc
push
incb
subl
std
or
mov
daa
push
sbb
scas
inc
cmp
scas
test
inc
test
call
ret
popa
pop
pop
cld
fcoml
arpl
jne
fisubrl
jae
jle
xor
jnp
and
call
pop
outsb
mov
inc
push
scas
popf
mov
loope
pop
fucomip
mov
lds
push
stos
cltd
mov
push
icebp
hlt
popa
inc
test
mov
jecxz
jb
ds
addr16
fistpl
sbb
mov
xchg
call
fstps
lcall
push
outsl
cli
mov
cmp
xor
in
push
mov
mov
sub
mov
mov
cmpsl
and
sub
cmp
mov
dec
shlb
rep
es
addr16
sub
inc
int
jmp
cwtl
es
inc
xchg
outsb
xchg
xchg
stc
adc
outsb
popf
and
or
lret
sub
or
xchg
dec
lea
jne
sbb
adc
test
pop
stos
jle
aaa
inc
mov
sub
push
subl
ret
outsb
and
xor
bnd
leave
int
add
pop
cld
sub
scas
jp
pop
iret
lods
pusha
dec
scas
icebp
mov
mov
sbb
inc
call
dec
mov
popa
jmp
and
imul
or
outsl
xchg
daa
pop
mov
ficompl
ror
mov
ljmp
cwtl
lock
lret
ret
out
mov
push
lcall
dec
pop
test
pop
bound
popa
subl
sub
add
mov
dec
daa
fcompl
dec
sbbl
shl
mull
cs
push
stos
les
mov
pushl
xchg
mov
xor
or
xor
mov
arpl
adc
je
mov
lods
repnz
sbb
mov
sbb
xor
mov
adc
insb
mov
pop
dec
jno
dec
imulb
orb
repz
lret
jo
add
popf
jns
sahf
xor
sub
shl
mov
aaa
sarb
inc
push
xchg
mov
cmc
and
sbb
cmpl
xor
ja
push
jmp
mov
mov
push
and
das
jns
sub
xlat
sub
jle
pop
testb
push
mov
push
cmpsb
lds
dec
inc
je
arpl
je
shr
int3
shll
push
sub
imul
cmpsl
push
jno
std
push
mov
adc
fdivl
add
cmpsl
nop
cltd
mov
fldl
add
add
stos
ret
fs
ja
dec
jae
rcrl
test
cmpsl
dec
add
int3
push
insl
dec
mull
pop
push
in
add
pop
adc
enter
gs
les
xchg
xor
and
jne
push
pop
ja
or
rclb
test
jbe
pop
mov
cmp
jae
cltd
mov
add
and
std
sub
adc
mov
pop
scas
add
dec
ret
ds
in
adc
es
movsb
jne
sub
cwtl
pop
hlt
mov
call
lahf
loope
sbb
mov
pop
cmp
xor
fistpll
add
add
dec
add
xchg
push
mov
xor
es
imul
in
adc
insl
xchg
popa
cs
push
jle
push
aam
addb
test
js
mov
adc
xchg
cmp
or
es
cmc
dec
inc
push
jge
std
and
pop
imul
fcomps
inc
sub
pop
mov
js
add
xor
dec
jmp
push
mov
jle
rorl
rclb
das
cmpsb
xor
add
pop
gs
mov
in
jae
in
dec
mov
jmp
push
loope
jne
sbb
jge
push
add
jb
pop
test
xorb
sub
sarl
push
fldenv
dec
push
stos
mov
cli
or
daa
cld
mulb
popf
je
mov
dec
xchg
mov
push
adc
fsub
dec
push
add
int3
repnz
mov
sub
xor
sbb
adc
add
inc
scas
ss
mov
and
dec
aaa
mov
jnp
jmp
inc
push
mov
stos
faddl
js
sub
cmp
enter
jmp
in
iret
push
mov
scas
ss
pop
and
lret
inc
sub
mov
mov
xchg
dec
ljmp
xchg
in
pop
rorb
cmpsb
frstor
jle
idivb
mov
cwtl
bound
das
incl
ljmp
xor
sbb
ret
add
cli
dec
std
mov
inc
stc
test
and
jae
outsl
sbb
int3
loope
dec
pop
out
jge
mov
pop
cmpsl
ret
and
orl
aam
in
mov
push
sti
push
adc
xorb
dec
mov
les
mov
imul
sub
jb
push
pop
jbe
mov
ror
push
outsl
aam
scas
iret
test
js
scas
insb
sub
lods
fcoms
lock
dec
jg
cmp
rorb
rorb
in
mulb
xchg
xor
or
lcall
push
sbb
out
es
jno
push
pop
popf
pminsw
fstpt
push
movsb
testb
js
sub
ret
xor
repz
es
add
cmc
xor
je
push
add
lea
push
divb
mov
push
aaa
inc
femms
loopne
cmpsl
sbb
jmp
leave
aaa
call
mov
test
fidivrl
fnsave
jecxz
push
ret
xchg
jg
mov
inc
je
mov
icebp
push
sbb
out
movl
jbe
fwait
lods
movsb
insb
cmp
sahf
mov
mov
or
jmp
loope
lods
and
pop
jmp
mov
mov
inc
sub
divb
or
xor
mov
push
stos
jecxz
jp
mov
mov
fdivr
test
fldcw
sahf
fidivrl
pop
cmpsw
sbb
pop
xchg
filds
lock
in
stos
mov
push
or
xor
inc
test
ret
lock
idivb
fwait
and
movsb
xor
pushf
in
push
das
ljmp
xor
sbb
fcmovnbe
push
out
scas
int
push
fdivr
faddp
cmp
push
jb,pn
add
les
jno
js
xlat
fs
in
pop
lock
mov
sub
jmp
mov
sbb
mov
mov
adcl
fimuls
pop
cld
mov
pop
xor
rcrb
and
mov
cmp
adc
or
mov
lods
bound
dec
sub
dec
cmp
jae
pop
or
inc
cs
sub
rcrb
pop
ds
adc
mov
in
jg
add
inc
scas
xor
daa
lret
call
sub
addb
movsl
in
movsb
add
adc
in
xor
mov
enter
fistpll
pop
iret
push
gs
xor
xor
sub
dec
jne
outsl
in
xchg
out
cli
cmp
flds
push
or
lcall
cwtl
pop
cmc
mov
ja
shrb
and
fnstenv
sub
sbb
add
jae
pusha
stos
movsbl
imul
fbld
sbb
add
jne
or
out
orl
out
mov
leave
int
ret
int
js
mov
sbb
jl
scas
shl
inc
sub
inc
dec
out
inc
out
pop
clc
mov
xchg
mov
ss
pop
cltd
insb
xlat
jne
int
pusha
rcr
xchg
jg
sub
lahf
sbb
decl
pop
xchg
imul
and
in
ljmp
push
in
arpl
xor
pop
inc
adc
repz
sub
pop
cmp
imul
dec
dec
into
in
ds
inc
sti
arpl
dec
call
and
pushf
xchg
imul
arpl
dec
push
test
pop
mov
xor
ljmp
push
popa
dec
and
add
lea
mov
mov
mov
dec
test
mov
fwait
mov
out
jo
xchg
lock
ret
int3
xchg
mov
pop
insl
test
lret
rcl
lret
jb
adc
std
lock
out
xor
and
mov
mov
mov
hlt
test
dec
pop
inc
add
push
inc
xchg
loop
sub
inc
inc
mov
vaddps
pop
stc
nop
fwait
cld
lea
cs
pop
test
dec
inc
mov
lret
ret
add
or
shl
in
lds
jno
divl
adc
mov
pop
mov
test
mov
mov
repz
dec
xor
ljmp
js
cltd
mov
cli
popf
and
test
mov
sbb
stos
mov
and
lock
repz
lods
dec
aam
mov
je
shrb
jl
fndisi(8087
xchg
pop
mov
dec
fwait
xor
push
test
out
mov
cwtl
pop
jmp
push
jne
or
leave
mov
in
sahf
cltd
lods
add
cmpsb
fnstsw
das
xor
or
lcall
stos
rol
pop
dec
xchg
cltd
mov
enter
scas
lret
fimull
push
stc
pushf
jmp
das
pop
xchg
jp
popf
in
shrl
ljmp
pop
enter
cmpsb
xorb
mov
add
jmp
xor
jno
xor
xchg
xor
jae
xor
popf
inc
cwtl
push
pop
push
ja
test
mov
pushf
in
cltd
mov
addr16
adc
mov
mov
add
cmpsb
sub
ficoms
jne
sub
mov
jno
and
loop
scas
in
in
mov
sar
adcl
cmp
push
jecxz
lcall
in
and
sbb
fxch
mov
fldenv
out
loopne
out
lahf
sub
ds
arpl
cmp
popf
mov
adc
cwtl
mov
push
inc
nop
loopne
pop
or
adc
in
cmp
nop
std
mov
push
addr16
push
cmpsb
movsl
aaa
divb
rcrl
mov
lock
xchg
pop
cmp
pop
jge
inc
fidivrs
gs
inc
mov
outsb
xchg
mov
mov
lret
mov
inc
mov
mov
icebp
pushf
lods
mov
mov
mov
lret
pop
inc
jns
outsb
fcmovnb
shlb
mov
mov
call
daa
ret
loope
xchg
cmc
sub
cmpsl
or
jecxz
dec
cmp
aad
adc
loopne
dec
xor
xor
and
aaa
push
pop
add
icebp
repz
push
jmp
pop
or
mov
jecxz
ljmp
xchg
add
fwait
imul
call
xchg
xchg
hlt
mov
jge
fsubs
in
je
xorb
mov
inc
je
movsb
fimuls
ror
xlat
push
clc
xchg
les
xchg
push
mov
mov
test
call
jne
les
inc
jl
jbe
cmp
sub
push
xchg
aam
rorl
inc
leave
xor
jmp
pushf
mov
or
mov
jb
js
sub
std
sbb
test
pop
bound
test
sbb
hlt
repnz
xchg
sbb
out
xchg
jns
popf
push
sub
cwtl
sti
xchg
cmp
roll
fdivrs
fildl
aas
fucomp
jns
fbstp
jmp
nop
sbb
adc
adc
xchg
dec
dec
icebp
sbb
scas
lahf
stos
out
add
jno
lds
xchg
xchg
adc
push
nop
lea
ret
push
faddl
aaa
insl
scas
dec
cli
mov
lcall
mov
cmpsl
pushf
add
insb
mov
aas
jno
rorl
ret
pushf
adc
daa
push
push
jmp
int3
fs
aad
pop
lds
cld
cmp
pop
int3
outsl
inc
push
mov
fwait
bound
ss
dec
daa
pop
xchg
cld
mov
js
adc
xchg
loopne
adc
xchg
addr16
leave
mov
xchg
mov
aam
cmpsl
nop
sbb
int
mov
add
in
mov
out
inc
inc
and
jb
xchg
jo,pn
sahf
je
pop
add
js
sti
std
clc
lret
mov
shrl
jb
cltd
dec
fcomip
movntq
mov
lret
shll
jl
xchg
aam
sbb
test
pushf
andb
sti
xor
push
sbb
repnz
subb
pop
jmp
lods
jcxz
cmp
lea
test
aam
mov
cmp
mov
into
aad
xchg
fsubl
xor
jns
ds
fildl
stos
pop
shl
out
dec
pop
and
loop
leave
inc
and
repz
mov
test
or
loopne
popf
shl
add
push
push
or
add
add
cmp
clc
push
pop
jnp
add
dec
mov
sub
pop
cmp
lahf
repnz
loope
push
dec
test
arpl
fisubrl
movsl
jle
nop
sub
xor
inc
stos
scas
pop
jmp
mov
das
cmp
es
lahf
jnp
mov
jecxz
popf
int
pop
divb
mov
out
sbbl
inc
dec
stos
js
popf
cld
scas
aam
jae
pop
leave
sub
scas
cmpl
hlt
mov
adcl
xor
pushf
xor
shrl
lds
cmpsb
mov
lret
mov
arpl
jno
pop
jnp
enter
push
mov
mov
mov
imul
pop
fs
xor
sub
cli
clc
fisttpl
out
push
mov
lods
enter
clc
aad
mov
mov
divps
aam
sbb
and
and
sub
leave
cwtl
testl
adc
stos
lods
mov
mov
add
pushf
add
xlat
out
add
fsts
lret
cmp
int3
push
roll
push
loope
jl
setp
sarb
or
or
filds
ror
clc
fmull
sub
jnp
nop
daa
push
jns
lret
in
mov
js
push
iret
sahf
lods
test
jb
or
sbb
sub
test
add
push
imul
into
stc
or
jbe
mov
inc
jno
cmpsb
ds
jp
inc
add
push
xor
sbb
mov
enter
push
in
insb
test
fxam
and
jg
jmp
out
jb
or
shlb
add
or
and
jnp
inc
mov
push
idiv
adc
push
mov
imul
sbb
lock
scas
div
xor
scas
and
pop
mov
and
mov
fs
lea
setge
push
les
incb
aaa
scas
cmp
stos
mov
xchg
insb
sub
ret
jp
shrl
negb
in
inc
mov
mov
in
inc
ret
cmp
in
jp
lods
inc
jp
push
mul
mov
mov
mov
ret
xchg
in
jo
out
scas
mov
xchg
imul
cmp
in
xlat
scas
mov
mov
out
fs
pop
sub
jae
lcall
fucomi
insb
rcl
orl
adc
jno
dec
insb
cmpsl
icebp
adc
hlt
dec
fidivrl
jne
push
jmp
inc
sub
lahf
shl
lods
jb
out
cwtl
mov
call
lret
loope
cmp
insl
into
xchg
adc
jp
test
out
sbb
mov
mov
add
xchg
cli
pop
movsb
out
sub
and
or
sbb
cmpsb
movsb
inc
rcll
outsb
add
cmp
lret
jmp
cmpsl
add
les
cmc
cmp
sbb
mov
xor
push
orb
lret
inc
sub
mov
mov
push
int3
fwait
stos
and
test
lret
jg
ljmp
pop
clc
movaps
nop
mov
cmp
stos
stc
mov
and
fistl
adc
data16
mov
push
sbb
call
stc
xor
loope
iret
pop
adc
cmp
addr16
cltd
call
and
imul
sub
jo
ja
xor
clc
fcompl
mov
and
mov
jo
fsubrs
and
sbb
xlat
mov
sub
stos
ds
sub
aaa
cmp
mov
mov
cmp
outsl
ds
in
ss
int3
dec
jge
add
nop
push
stos
fisttpl
loope
hlt
sbb
pop
mov
std
cmp
mov
mov
mov
loope
or
and
int3
iret
and
shl
mov
adc
and
mov
aaa
mov
ret
mov
add
cld
mov
lcall
lock
shrb
dec
jp
dec
push
or
xchg
and
add
mov
push
jno
imul
mov
or
xchg
jo
cmp
mov
dec
ficompl
ja
cmp
popa
lock
and
pop
fcoms
add
aam
rcll
out
or
adc
mov
or
test
dec
mov
and
push
imul
jg
add
mov
sti
movsb
int
pusha
nop
dec
pop
in
adc
fwait
jle
mov
les
mov
repz
test
xor
lods
testl
cmp
adc
inc
aam
in
mov
scas
shrl
fimuls
push
mov
add
lahf
or
outsb
int
fmuls
adc
cmp
jmp
sub
xchg
mov
pop
sub
bswap
cmp
or
idivl
and
in
sbb
hlt
adc
jae
test
lods
mov
outsb
mov
dec
add
dec
jb
pop
mov
cmc
lods
fwait
xor
in
ret
adc
arpl
inc
jne
and
jno
xchg
adc
sti
push
mov
cmp
aad
sub
and
std
in
hlt
fnsave
scas
jno
inc
shrb
cmp
cli
dec
jns
add
notl
addr16
cwtl
mov
dec
fs
cmp
sbb
lcall
sbb
add
ljmp
mov
jb
jne
aas
in
ds
adc
cs
mov
fisubrs
mov
push
ljmp
in
int
sbb
adc
lds
pop
dec
movsl
xor
dec
xor
cmp
adc
loop
add
add
mov
mov
adc
adc
or
aad
fwait
xchg
dec
fdivrs
aam
leave
fbstp
mov
repnz
cmpb
pop
out
lcall
out
lods
in
sti
cli
in
loope
or
xlat
or
jmp
sti
int
and
or
or
jbe
gs
in
or
sub
fldl
je
nop
adc
mov
jo
cmp
int
ret
sub
in
mov
mov
enter
rorl
cmp
ret
adc
dec
cmpsl
cltd
aaa
mov
push
cmp
mov
repz
not
sbb
movsb
cmpb
mov
inc
mov
fistpll
ds
cmp
push
nopl
mov
inc
icebp
scas
insb
push
dec
xor
sbb
sbb
sub
and
movd
rorl
push
mov
ds
ds
loope
jbe
in
sbb
push
int
xor
push
sahf
sub
arpl
and
out
dec
mov
in
sub
inc
out
aam
jae
adc
xchg
icebp
mov
loop
xchg
leave
ss
pop
fcomps
lods
in
mov
fsts
pop
in
data16
fists
int
xor
sub
mov
xchg
adc
test
jo
fistps
jl
enter
and
adc
jb
stos
adcb
dec
mov
into
cmpsl
ret
leave
inc
je
or
stos
loope
scas
dec
movsl
lret
adc
xlat
xor
mov
pop
mov
adc
sub
sahf
out
cld
shr
pop
and
fisubl
das
dec
adc
or
jns
push
jecxz
in
imull
cmc
sbb
leave
mov
dec
addr16
adc
fildl
pop
pusha
xor
aad
aas
int
hlt
insl
ficompl
cmp
jnp
pusha
sub
stc
jle
xor
pop
mov
aam
or
xchg
jae
sub
std
mov
mov
test
jge
sub
sub
mov
mov
fsubs
sbb
std
sub
push
fcomi
dec
pop
fadds
adc
sub
push
cmpsb
ljmp
mov
rcrb
pop
stos
loope
jge
push
sahf
int
xor
jnp
inc
and
mov
cmpsb
ja
add
leave
sbb
icebp
sub
sbb
out
data16
mov
sbb
icebp
push
js
inc
testl
outsb
aad
inc
nop
insl
sbb
mov
out
callw
xchg
or
mov
jl
stos
pop
cmp
call
pop
inc
jp
fwait
cmp
mov
sbb
xchg
mov
mov
mov
fidivs
movsb
xor
xor
adc
xorb
out
xchg
jecxz
mov
dec
fsubrl
mov
stos
andl
dec
ds
and
xor
notb
adc
add
sbb
pop
divl
dec
add
sbb
cmp
loop
addr16
pop
les
dec
scas
imul
push
stos
je
jge
fmull
mov
inc
mov
and
and
lea
or
mov
fcom
mov
fisubs
push
test
xor
sbb
test
dec
lret
aam
mov
xchg
pop
cmpsb
adc
and
mov
mov
mov
movsl
push
jecxz
cmp
xor
ds
cmc
and
js
les
inc
mov
pop
add
mov
xchg
xchg
mov
sti
jne
fistpl
hlt
addb
les
push
fbstp
shl
loope
jle
mov
sbb
out
cld
mov
fcompl
out
enter
pop
pop
adc
pop
rcr
outsb
jge
pop
push
in
sub
insb
mov
push
movsb
sbb
mov
xchg
xchg
cmp
adc
push
shlb
pop
imul
bound
jbe
ret
cs
js
out
sub
mov
mov
xchg
mov
push
cmp
mov
dec
xchg
dec
pop
push
cmc
fwait
mov
les
out
fdivs
loope
push
jecxz
xor
cmp
inc
leave
sub
pop
lret
xchg
or
xchg
int
lcall
arpl
add
imul
push
lods
mov
xchg
push
cmp
rcrb
xchg
adc
adc
dec
and
and
pop
push
sub
jo
shrb
insb
out
xchg
xchg
add
jp
xchg
inc
push
cmpsb
pop
cmp
ret
mov
dec
rcrl
aam
jmp
dec
sub
sbb
mov
daa
mov
sbbb
sbb
cmp
adc
sub
or
mov
push
ds
int3
and
mov
das
iret
ds
fwait
repnz
mov
jbe
jecxz
pop
test
cmovo
pop
dec
aam
and
push
cmp
dec
xchg
lds
sti
lock
popa
and
add
enter
or
test
outsl
les
xor
out
fbld
aad
pop
adc
arpl
loopne
test
aaa
lods
stc
in
push
sbb
das
inc
sti
mov
bnd
imul
inc
and
add
dec
xchg
cmc
jge
mov
imul
rcll
imul
insb
sub
push
push
pop
cmc
or
insb
sub
inc
push
add
mov
adc
aad
adcl
jo
pop
mov
mov
int
cmp
dec
add
enter
dec
data16
in
loopne
in
nop
sub
dec
sbb
push
cwtl
jle
mov
xchg
pop
pop
cmp
mov
loope
ret
adcl
xchg
dec
std
add
scas
mov
adc
sbb
jmp
push
mov
fidivrs
addr16
fyl2x
xor
test
lret
inc
lcall
mov
ds
cli
leave
ds
in
lods
lret
jae
cmp
pop
ljmp
mov
call
std
dec
lock
in
sbb
dec
cmp
pusha
inc
push
mov
fdivl
orl
pop
daa
push
bound
or
nop
add
mov
jle
add
sub
sbb
jb
xlat
iret
aad
enter
dec
lds
insb
pavgb
ljmp
mov
add
scas
mov
outsl
fs
mov
decl
pop
sarb
cwtl
xor
imul
mov
inc
lods
and
or
scas
leave
daa
jns
push
cmp
sbb
mov
push
lcall
test
add
xchg
jae
xchg
push
int3
or
mov
nop
fistpl
mov
xor
push
jns
push
stos
xchg
dec
adc
mov
pop
test
pop
push
dec
jmp
sbb
sub
cmp
lret
sbb
ljmp
aam
mov
cmp
push
rolb
adc
aaa
std
lret
mov
test
gs
sub
pop
std
xchg
sbb
aas
or
fistps
mov
mov
mov
add
sbb
das
jge
mov
aaa
iret
pop
fwait
push
push
mov
and
test
divl
xchg
push
hlt
fsts
sub
cld
xchg
xor
fldl
push
ljmp
jo
cmp
mov
push
mov
mov
test
and
jae
cmpsl
mov
adc
je
in
roll
cmpsl
jp
stos
pop
xor
cmpsl
pushf
mov
inc
cmpsl
pushf
popa
pop
push
subl
mov
jle
ja
rcrb
jbe
scas
push
jecxz
lock
mov
ds
jmp
and
pop
rcr
mov
fs
pop
lock
adc
adc
mov
xchg
out
adc
dec
push
out
sub
cmp
or
popf
inc
test
fnsave
xchg
mov
jne
loope
ret
fisttpl
mov
addr16
inc
dec
out
fiaddl
or
pop
xlat
sub
push
lcall
add
and
arpl
rorl
inc
lret
enter
jmp
and
psubsw
repz
stos
addr16
adcl
stos
jnp
pop
mov
mov
pop
or
add
out
ficoms
or
jge
jb
roll
sti
aad
loopne
movsl
inc
ffree
std
gs
fld
sub
and
insl
in
rcll
rcrl
mov
or
sub
xchg
aad
mov
inc
add
add
xchg
inc
mov
imul
in
out
mov
outsl
add
pop
push
aam
and
lock
push
enter
jg
add
xorb
daa
and
adc
or
jae
pop
insl
or
jmp
fdivl
xor
adc
or
push
mov
mov
mov
das
sub
or
loop
sub
sub
test
test
idivl
ljmp
push
adc
push
hlt
pop
repz
inc
dec
ja
popf
lea
addr16
jp
ret
sbb
movsl
xchg
pop
mov
out
faddl
orl
inc
jb
push
addr16
aas
hlt
dec
pushl
cmp
xchg
stos
popl
lock
mov
fistpll
pop
fsubs
fmull
shrb
sbb
xchg
and
gs
xchg
sbb
push
test
xlat
inc
repnz
sbb
mov
test
loop
jno
movsb
push
jg
cmp
cmpsb
rolb
cld
ljmp
pushf
rcr
adc
lods
dec
or
add
int
imulb
sbb
pop
shl
xchg
loop
pop
inc
cmc
xchg
cmp
pop
outsb
ret
lods
mov
add
jae
jmp
movsb
daa
cmp
int
dec
cmp
pop
ficoms
int3
popa
mov
lods
in
icebp
leave
adc
cmp
scas
lcall
divl
push
gs
dec
imul
data16
inc
xchg
xchg
scas
adc
aam
add
inc
jl
xchg
xlat
adc
and
fnstcw
or
fmulp
sbb
mov
fidivl
push
sub
adc
out
xchg
ret
test
mov
jae
shlb
mov
arpl
add
lds
and
nop
add
std
xchg
xor
and
push
ret
call
pusha
push
jbe
lds
in
clc
adc
xchg
xchg
test
xchg
in
mov
push
nop
xchg
mov
stc
arpl
scas
xor
sub
stos
pop
sarb
pop
mov
test
and
mov
orl
mov
cmp
scas
add
adc
push
sbb
testl
lret
data16
and
mov
lret
in
fdivs
mov
or
aad
mov
jmp
arpl
ja
test
inc
pushf
std
mov
adc
ljmp
popa
cmc
push
adc
aaa
xchg
or
xor
inc
fdivrs
mov
ret
mov
les
dec
aad
jg
or
adc
mov
pop
mov
cwtl
lock
push
and
and
and
sub
dec
cli
neg
test
leave
dec
xchg
ja
rorl
xor
in
aaa
mov
push
lea
stos
arpl
push
cmc
in
xchg
fisttpll
xchg
cmpsb
inc
push
push
add
es
mov
shl
add
dec
and
pavgw
shrl
add
int3
add
jmp
mov
xchg
cltd
mov
sub
fwait
sbb
stos
pop
jmp
jns
movl
popf
jb
icebp
cmpsl
sub
lret
pop
out
adc
jae
xor
shrb
sub
orl
jbe
add
shl
dec
lea
gs
mov
into
std
mov
out
cmp
push
in
into
outsb
sub
jmp
and
sub
push
pop
sbbl
cwtl
imul
test
fdivr
push
test
cld
adc
mov
jae
mov
jmp
mov
ret
divl
ljmp
cltd
cli
inc
or
movsl
mov
cwtl
lds
int
adc
int
xchg
sub
sbb
mov
frstor
mov
and
xor
mov
mov
or
loopne
jb
jge
inc
mov
lret
jnp
cmp
sti
sbb
lret
daa
jno
inc
sub
pusha
mov
pop
shlb
sbb
pop
xchg
xor
aaa
aad
repnz
and
pop
sub
imul
loop
mov
pop
js
ficoml
pusha
pop
push
clc
mov
outsl
data16
fstl
inc
add
push
shlb
jnp
add
outsl
jp
sbb
mov
pop
jl
jae
jb
push
data16
scas
push
lret
push
stos
mov
lret
xchg
mulb
jg
insb
lret
out
pop
mov
mov
test
pop
loop
adc
test
push
dec
pop
push
push
mov
push
pop
imul
adc
ret
test
sahf
mov
cs
loop
lahf
mov
jmp
cmp
cmp
xor
mov
and
ljmp
pop
scas
mov
scas
push
jp
mov
ror
sarb
sbb
pop
sbb
das
mov
repnz
aad
test
xor
mov
push
or
sarl
repnz
scas
adc
ljmp
cmp
les
push
out
push
adc
in
dec
in
add
inc
push
shlb
add
inc
and
inc
add
and
mov
imul
adc
dec
jecxz
lds
mov
sub
sbb
push
xchg
add
mov
fcom
loope
enter
adc
xor
sub
jns
mov
rorl
insl
add
mov
cmp
loopne
les
pop
stos
arpl
and
cltd
cltd
ficoml
or
jl
and
bound
pushf
fdivrs
cmp
aaa
sti
test
pop
add
push
xor
insl
pop
sbb
notl
repz
pop
fldl
leave
jg
popa
xor
and
ret
mov
orb
and
cmp
fmull
mov
ljmp
scas
loopne
mov
clc
push
inc
nop
sub
cmp
fwait
gs
jl
leave
push
sub
or
dec
fwait
push
mov
cmpsl
hlt
mov
cmp
icebp
dec
fimuls
mov
in
inc
pop
ret
push
inc
inc
xchg
sbb
shl
jne
fsubs
or
jg
mov
push
add
jmp
stos
out
push
xlat
push
and
push
and
dec
loop
das
les
or
loopne
das
sbb
push
mov
mov
xor
push
adc
mov
mov
pop
pop
mov
or
jns
and
pop
pop
ss
mov
jo
stc
jb
xor
mov
aam
inc
or
pop
inc
mov
in
pop
mov
dec
jae
lea
loopne
sbb
push
pusha
sub
xchg
lret
ja
cmp
mov
insb
add
arpl
mov
cltd
mov
xor
mov
sbb
dec
sub
cmp
mov
sbb
mov
dec
inc
xchg
pop
pop
fists
scas
call
rclb
jl
dec
les
loopne
int
cmp
pop
out
pushf
lea
jmp
cmpsl
push
mov
xor
iret
fwait
aad
inc
pusha
add
in
das
inc
in
jge
repz
in
pop
jle
pop
xchg
repnz
fwait
mov
cld
mov
hlt
nop
test
inc
dec
sub
or
xchg
cmp
adc
sub
lcall
push
pop
push
sbb
mov
jne
mov
loope
fstpl
sub
add
jle
pop
js
adc
mov
stos
add
push
or
cmpl
andl
push
cltd
jns
hlt
pop
sbb
int3
out
ja
decl
jle
aas
nop
fldl
sahf
iret
xchg
xor
test
dec
jmp
rol
gs
xor
pop
lret
call
bound
test
cmpsl
iret
mov
enter
int3
pop
jae
sbb
cmc
inc
fwait
es
add
call
mov
sbbl
sub
loope
dec
xlat
adc
insb
push
es
outsl
or
dec
pop
stc
movsl
aam
push
repz
aam
or
out
or
add
out
pop
or
arpl
imul
jns
xor
lods
mul
int
popf
out
loop
cmpsb
dec
repnz
inc
and
insb
stos
shll
fucomp
mov
mov
ljmp
and
xchg
mov
cltd
add
das
sbb
mov
inc
xchg
mov
or
jno
jns
out
outsl
xor
cmp
push
inc
xchg
add
mov
sbb
push
inc
mov
mov
pop
jb
lret
imul
mov
daa
call
data16
sbbb
push
cltd
sub
push
pop
scas
xchg
push
add
outsb
lock
mov
push
push
sub
sub
lret
sub
adc
pop
xor
fld
pop
dec
bound
aam
inc
call
mov
cmp
arpl
cmc
nop
sub
xchg
movsl
jo
xor
into
mov
sbb
das
cmp
push
xchg
inc
or
jmp
sar
mov
mov
popf
mov
xor
mov
xchg
test
mov
mov
sub
jge
outsb
xchg
dec
enter
mov
fdivp
jmp
add
mov
pop
cmp
sub
jecxz
xor
or
adc
and
dec
cltd
iret
xchg
out
lret
loope
flds
ret
dec
push
popf
fs
ficompl
mov
je
cmpsb
imul
cmpsl
xlat
test
cmc
mov
mov
xchg
mov
mov
mov
jne
adc
enter
loopne
aam
push
xchg
dec
mov
xor
mov
stos
push
ret
lret
jno
sub
inc
mov
jae
mov
repz
xor
sti
mov
push
pop
int
aam
and
or
push
mov
rclb
cmp
mov
shlb
loope
jl
lods
rclb
adc
lea
std
dec
scas
jle
mov
dec
sub
fcompl
mov
outsl
popf
in
pop
and
shrb
cmpsb
out
std
pop
je
mov
pop
in
pushf
push
ljmp
int3
test
or
dec
cmp
mov
mov
cmp
cwtl
bound
idiv
mov
ss
cld
stos
cmp
cltd
test
adc
mov
push
xor
cmp
into
aad
lea
add
jg
jns
xchg
les
fdiv
jmp
fnstenv
js
bound
popa
sahf
xchg
cmpsb
xor
xor
cwtl
sub
pop
rorl
js
cmc
nop
out
test
or
out
rol
push
shll
sbb
sub
in
ror
push
outsl
sbb
insl
test
pushf
fsubl
mov
mov
sbb
lret
fsub
ds
movsl
cltd
cltd
aaa
out
pop
cltd
cmp
test
in
lea
fs
push
test
or
mov
jmp
ja
jne
ret
xor
mov
xchg
xchg
mov
outsl
push
std
lock
scas
adc
inc
je,pn
shr
cwtl
mov
shlb
xor
push
daa
cmp
add
mov
xchg
or
loope
xor
push
mov
jmp
add
mov
adc
cmp
inc
and
je
add
ror
sbb
aas
shrb
xchg
enter
int3
int
push
mov
cmp
xor
mov
pop
inc
pop
push
hlt
cmp
js
std
pushf
repnz
sub
pushl
mov
int
or
cmp
and
pop
cmpsb
movsl
jp
adc
xchg
sub
stos
test
js
sbb
xor
out
sbbl
mov
hlt
push
test
mov
pop
and
es
inc
inc
mov
mov
xchg
in
jb
xchg
dec
xchg
mov
xor
pushf
and
loopne
mov
cmp
fwait
mov
adc
lcall
and
lcall
decl
loopne
cmp
nop
inc
push
push
test
pop
sahf
push
adc
ret
pusha
lods
add
cmp
pop
mov
insl
out
enter
cmovns
das
cmp
adc
or
out
stc
stos
shlb
subb
push
arpl
mov
stos
mov
imul
xor
loop
or
in
scas
xchg
cmovge
push
sub
inc
xor
loop
push
cmpsb
into
hlt
repz
shlb
sti
test
push
pop
ret
jo
sahf
dec
int3
imul
push
inc
cmovg
mov
ss
jns
lcall
mov
leave
or
xchg
mov
pop
xchg
call
pop
shll
idivl
fldcw
sbb
push
sub
int3
jne
arpl
xor
sub
and
js
and
mov
into
pop
mov
mov
ja
jno
inc
faddl
ret
dec
das
pop
sub
mov
mov
add
popf
sbb
into
out
addr16
clc
push
lcall
xchg
inc
sbb
lret
shll
mov
mov
mov
pop
inc
lcall
sub
pop
fnstenv
adc
and
daa
or
push
aaa
rcrl
pop
out
mov
cmp
addl
lods
sub
adc
push
push
dec
pop
shll
rclb
ds
pusha
xchg
xor
dec
push
or
dec
ss
jl
pop
adc
je
loopne
test
adc
stos
add
adc
std
jno
bound
pop
jecxz
xor
sbb
jb
dec
scas
push
sub
sub
xchg
dec
cmp
jo
test
stos
mov
adc
inc
subb
pop
fists
cmp
jge
sub
adc
dec
popl
inc
push
jae
mov
in
lcall
sub
cli
cmc
hlt
cmpsl
popf
imul
jp
fistpll
loope
out
mov
ffree
call
flds
cmc
sub
push
jmp
add
xchg
sbb
mov
gs
aad
dec
mov
leave
movsl
outsl
imul
jmp
je
mov
in
inc
rol
add
incl
dec
push
enter
push
cmp
mov
and
pop
std
adc
dec
and
inc
insl
mov
jae
cmpsl
or
and
scas
add
fisubs
fs
addr16
pop
add
das
xchg
and
scas
outsl
in
xchg
ds
fcomp
dec
dec
fwait
mov
xor
in
fmuls
cmp
mov
push
mov
mov
xchg
mov
or
and
mov
sbb
outsl
jge
sub
push
mov
mov
and
ret
inc
xor
pop
and
in
aaa
nop
jbe
fs
ja
fistps
fsubrl
clc
add
shld
fldenv
jne
pop
sub
loope
sbbb
cwtl
mov
cmpsl
roll
mov
mov
mov
mov
pop
xchg
inc
movsl
repnz
lods
lcall
pop
adcb
inc
push
jmp
bound
call
fsub
xor
mov
push
inc
xchg
lcall
movsb
pusha
insl
xchg
leave
imul
push
insb
fisubl
dec
fcmove
mov
mov
push
mov
add
xor
in
mov
inc
cltd
push
inc
out
inc
rep
add
add
xchg
xchg
adc
inc
fsubl
jl
shlb
int3
in
xchg
jb
cld
and
jo
pushf
or
in
push
pop
lea
nop
loope
popf
loopne
jmp
sar
and
adc
sub
sub
sub
pop
pop
popf
je
addr16
sub
popa
gs
test
dec
imul
dec
push
lcall
jmp
sub
cmp
notb
leave
test
jg
xchg
arpl
cli
pop
adc
leave
call
fdivrs
je
rcl
sub
pop
repz
mov
fnstcw
lock
out
jb
jno
jmp
scas
mov
add
push
mov
popf
pusha
stos
stos
mov
cmp
mov
fwait
jl
dec
pop
xchg
xchg
xor
stos
or
mov
shlb
fsubl
leave
jne
sar
dec
mov
mov
data16
pop
repz
adc
push
pop
xchg
out
jbe
pop
and
jle
pop
mov
and
push
loop
mov
push
sub
mov
mov
and
pop
lods
and
jl
jbe
ss
xchg
mov
popf
mov
insb
pop
pop
out
insb
ds
aas
ficomps
roll
xor
stc
and
lahf
xor
push
es
movb
cld
cli
jl
in
lods
sbb
out
out
sarl
push
mov
sub
scas
jmp
cmp
imul
loop
sbb
cwtl
pop
mov
jmp
xchg
add
out
mov
repnz
sub
fwait
push
aas
pusha
or
sarl
shr
xchg
scas
dec
mov
sub
testl
add
pushl
sbb
push
push
loopne
lea
mov
adc
jns
fwait
aam
sub
sti
dec
out
movsb
inc
into
test
cmp
and
fstl
js
jnp
pop
addr16
add
add
fdivrl
cmp
leave
cmpsb
mov
dec
sub
rol
xchg
push
or
or
push
lock
mov
mov
dec
fsub
arpl
xchg
and
fwait
orb
flds
in
adc
stc
push
and
sbb
push
mov
in
add
ret
and
test
inc
push
stc
in
cli
or
dec
or
mov
lods
mov
lret
dec
dec
mov
xchg
cmp
and
mov
nop
insb
adc
push
les
inc
fildll
popa
rcll
xor
das
sbb
rol
lods
jno
push
mov
pop
mov
mov
xchg
ds
sub
inc
mov
mov
pop
dec
or
arpl
sub
fbstp
lahf
pop
pop
ret
int3
pushf
dec
cmc
sub
inc
jbe
and
loopne
movl
arpl
inc
fyl2x
inc
jne
mov
jmp
cmp
dec
or
cmp
pop
lods
das
fimull
cmp
pop
or
xor
push
imul
pop
xor
mov
in
std
test
cmp
shrb
ss
dec
shrb
mov
jg
fnsave
dec
cmp
fadd
push
loop
js
inc
pop
mov
inc
adc
mov
call
mov
xchg
test
in
or
addr16
jle
and
cli
push
movsb
mov
shrb
adc
lcall
mov
mov
xor
cmp
das
js
jns
rolb
inc
fsub
test
mov
push
mov
mov
sbbl
mov
jmp
hlt
xor
je
jl
jl
out
sbb
add
dec
sbb
mov
push
lahf
dec
js
cltd
lds
hlt
into
and
insl
in
and
xor
bound
jo
movsb
jno
sub
ja
push
fdivl
pandn
and
int
mov
pop
pmullw
adc
and
jo
in
retw
mov
push
cld
pop
adc
adc
mov
mov
and
dec
mov
cmp
out
cmp
test
arpl
sub
jbe
sahf
dec
adc
pop
in
jmp
into
aad
add
mov
xor
das
shrb
dec
in
insl
fdivs
xor
xchg
loope
xchg
cmp
push
fadds
in
push
mov
rcll
lock
mov
in
test
adc
movsl
imul
mov
push
jne
adc
repnz
sbb
pop
pop
mov
inc
mov
enter
sub
sub
pusha
xchg
insl
pushf
pushl
push
filds
and
add
push
add
imul
xchg
and
ja
jb
sbb
mov
imul
imul
out
push
adc
mov
xchg
test
lock
fimuls
push
and
jae
pop
popf
xor
js
dec
mov
and
loop
ljmp
jmp
ja
push
test
shrb
inc
test
icebp
xchg
and
mov
decb
push
rcr
cwtl
and
test
lods
je
out
add
shll
or
rol
jp
addl
scas
sbbl
aam
add
fwait
mov
cld
sub
popf
dec
mov
loopne
xchg
inc
imul
fistpll
cmc
dec
cltd
mov
dec
stos
push
ljmp
lods
push
cmpl
xchg
mov
scas
xchg
addl
dec
cmp
call
mov
icebp
dec
xchg
push
shlb
xor
test
xor
js
jg
insb
xlat
jge
fdivl
cli
orb
rclb
pop
fcomps
cli
ss
dec
push
xlat
lret
clc
xlat
mov
icebp
lcall
jae
pop
add
rorb
or
pop
dec
insl
cmp
sub
std
loopne
xchg
cmp
sbb
add
es
in
aam
sub
jb
fsubrs
xchg
push
dec
push
test
adc
addl
jecxz
or
lock
fldcw
test
and
cmp
jo
sub
pop
rcrl
lcall
jl
aad
sahf
repz
pop
loop
push
add
pusha
inc
jl
jle
jge
stc
or
adc
loop
test
xchg
xor
aad
jns
xor
out
pushf
sub
enter
lock
mov
pop
addr16
iret
sub
dec
ret
sub
xchg
add
xchg
xor
jmp
jo
mov
fidivs
shlb
xchg
dec
idiv
sub
out
test
xchg
gs
fildll
add
sbb
xor
mov
inc
cmpb
jno
mov
jecxz
push
test
outsl
mov
aam
sbb
pushf
mov
mov
lret
outsb
arpl
cli
dec
test
stc
add
into
aad
xor
shr
jnp
jno
push
mov
sub
cld
mov
or
test
xchg
ja
dec
adc
mov
stc
push
lret
bound
popa
cltd
push
loope
xorb
ljmp
sbb
roll
imul
out
popf
xlat
jae
mov
mov
pop
xor
call
cmpl
mov
cmp
jae
inc
xor
or
jno
fucomp
xorb
dec
sbb
cld
mov
inc
repnz
xor
cwtl
push
stos
sbb
add
pop
std
fsqrt
adc
sti
jmp
add
cmpps
jne
js
js
add
dec
xor
mov
ret
pop
shll
push
cmc
stc
aas
mov
add
xor
sahf
lea
push
js
cmpsb
jl
push
and
imul
ljmp
push
insb
or
mov
inc
add
jecxz
pop
inc
sub
adc
popa
sbb
lret
std
mov
or
sti
test
sub
shlb
mov
dec
or
dec
not
mov
movsb
jns
movsl
mov
jg
mov
mov
insl
xchg
push
cltd
mov
pop
xor
mov
cmp
outsb
imul
popf
imul
dec
test
sbb
out
clc
mov
pusha
call
mov
std
jbe
movsb
lcall
mov
adc
mov
or
hlt
xor
out
pop
push
xchg
daa
jmp
sbb
mov
lret
sbb
mov
insb
aaa
or
push
or
ds
xchg
mov
mov
daa
sahf
into
adc
out
or
test
jmp
lahf
sub
mov
imul
call
sbb
loop
dec
sahf
ret
mov
jnp
inc
negb
cmp
xchg
pushw
mov
pushf
xor
shlb
lds
enter
repnz
jp
xchg
push
iret
out
cmp
sti
pop
aam
jnp
cmp
push
cmc
xchg
adc
loopne
xor
xor
ud1
adc
lods
icebp
inc
insl
pop
stos
movsb
fwait
push
sub
lock
or
je
xchg
sbb
shll
xchg
add
push
inc
jp
adc
sbb
sub
jg
mov
cmp
jo
sub
out
sbb
pusha
icebp
aam
inc
lea
push
les
rorb
rorl
push
lods
dec
rcll
jle
test
dec
out
cmp
outsl
int
add
lds
incb
jmp
pop
pop
sbb
iret
xchg
hlt
mov
sub
bound
imul
xchg
lahf
stos
movsl
xor
xor
sub
loop
incl
push
call
jns
testb
push
cmpsb
cli
mov
xchg
mov
jae
popf
xor
scas
negb
call
dec
jge
dec
push
mov
jge
cmp
xchg
aas
xchg
out
cltd
lret
out
mov
ljmp
jno
in
gs
inc
repnz
popf
or
vpmacssww
xor
adc
mov
pusha
add
stos
adc
mov
adc
ds
jo
leave
dec
push
call
aaa
test
div
cltd
gs
cwtl
in
xorb
push
mov
pop
call
mov
fildll
lret
cmp
dec
push
cli
lock
fsubl
or
not
enter
add
out
pushf
inc
dec
loop
pop
dec
xor
xlat
push
mov
leave
test
push
dec
jl
fwait
mov
sub
mov
jb
or
push
jle,pn
push
outsl
pop
sub
adc
push
push
lcall
jb
xchg
inc
cmpsl
and
imulb
int
or
outsb
les
aad
inc
or
mov
pop
push
flds
pop
ficomps
sub
dec
pop
sbbl
and
lds
pusha
and
mov
cmp
cmc
adc
rol
lea
or
cmp
and
dec
cld
jg
jno
cmp
pop
xor
jb
mov
ror
mov
leave
aam
pop
lock
in
xchg
jp
lock
xchg
and
fldt
fwait
movsb
rolb
push
pop
or
jle
sbb
mov
mov
fnstsw
sbb
xchg
mov
imull
push
fstpt
pop
pop
sahf
mov
mov
mov
in
iret
push
and
add
xchg
inc
lahf
ffree
or
or
lea
pop
pushl
xchg
push
xchg
pop
pop
or
jae
pop
pop
pop
sub
and
xchg
dec
daa
xchg
fmull
cwtl
cli
sti
lcall
movsb
mov
rorl
loop
sub
aas
imul
fs
sahf
int3
pop
mov
clc
sub
cmp
mov
icebp
xlat
pop
cmp
sub
and
movd
shrl
or
jg
sbb
pop
sbb
cltd
stos
push
adcb
ss
xlat
xor
add
pop
test
adc
cltd
fwait
dec
ror
out
pushl
sbb
mov
jmp
ja
sub
jno
cmp
popf
jno
in
xor
loop
pop
dec
adc
test
lods
mov
or
and
sarl
jb
inc
in
or
call
add
frndint
push
mov
jmp
add
push
incl
test
loopne
je
outsb
mov
rorl
push
xor
dec
and
test
adc
inc
push
pop
fcomps
mov
cmp
es
mov
adc
test
adcb
addl
adc
les
jno
jecxz
rcrl
xchg
cltd
cld
jns
cmp
adc
push
adc
pop
jo
mov
in
adc
push
adc
adc
xchg
or
outsb
dec
inc
jmp
popa
ficoms
sahf
sbb
pop
outsl
das
aas
cli
iret
fmulp
mov
or
fs
sub
mov
pop
pop
jle
xchg
in
scas
mov
pop
sarb
gs
xor
mov
mov
mov
or
pop
xabort
push
and
add
lods
dec
insb
mov
nop
rcll
inc
dec
xchg
leave
add
or
inc
pop
shrb
pop
mov
jp
or
int
lds
or
sbb
push
pop
repz
sub
insb
mov
and
dec
sub
rcll
nop
imul
imul
data16
out
movsl
pop
fstpt
fimull
inc
mov
frstor
dec
ss
in
lods
jo
bound
test
sahf
imul
or
sub
push
fisubs
sbb
outsb
inc
fcomps
jmp
out
push
xor
cmp
mov
lock
repz
xor
or
shll
add
xchg
pop
in
shlb
pop
ret
gs
cmp
mov
mov
inc
mov
inc
mov
scas
push
sahf
ret
gs
xlat
jge
cmp
loop
int
adc
mov
clc
mov
cli
xlat
xorl
mov
jp
ljmp
mov
mov
mov
dec
in
push
xchg
push
or
pop
clc
sub
mov
fimull
repz
jg
aas
mov
ret
mov
jb
es
push
pop
es
jge
mov
aaa
sbb
dec
gs
jmp
push
xor
xchg
and
adc
jno
add
jns
xor
pop
sbb
sbb
jl
in
mov
jb
das
popf
fldl2e
mov
arpl
add
dec
pushf
jg
js
cmp
push
int3
pop
xor
push
push
lcall
sub
pop
xor
enter
lret
cmp
in
into
jae
and
and
pop
push
and
add
sbb
xor
sbb
mov
xchg
jbe
jecxz
push
dec
mulb
ret
test
cmp
mov
leave
push
sbb
out
lds
fistpll
outsb
sbb
imul
dec
cmp
jp
fnstenv
cmp
ret
cmpl
insb
movsb
lods
ja
test
push
andb
push
pop
cmp
dec
or
lret
loop
lods
xchg
xchg
sub
pusha
mov
mov
ret
and
pop
adc
sahf
inc
mov
dec
mov
and
push
push
lds
adc
pop
pop
push
jo
xchg
pop
mov
cmp
iret
dec
pop
push
xchg
inc
pop
sbb
cmp
cmp
cmp
cmc
adc
out
in
xor
sbb
and
sub
bound
add
pop
push
and
movsl
popa
or
sub
cmpsb
mov
js
shll
dec
les
jae
xchg
push
out
pop
test
push
xchg
fists
in
rolb
dec
mov
adc
xchg
or
rclb
test
pop
fisubl
loope
mov
adc
mov
jo
lret
inc
call
pop
mov
cmp
xchg
stc
sbb
add
enter
mov
add
insb
std
mov
inc
cmp
das
pop
and
or
add
mov
inc
mov
xchg
mov
loopne
imul
mov
mov
sub
stos
xchg
push
ret
push
mov
clc
hlt
push
jge
mov
pop
das
ljmp
lahf
mov
adc
and
inc
lds
lret
ret
orb
or
andb
add
ret
cmp
dec
xchg
adc
adc
pop
lock
mov
jle
cmp
or
leave
mov
xchg
xchg
xor
jmp
add
and
dec
adc
loopne
dec
inc
scas
mov
and
push
lret
loop
decb
xlat
shr
and
add
repz
rorb
in
sbb
or
or
rcl
add
lret
sarl
mov
xor
cmp
fldt
rcrl
add
jo
cmpsl
mov
xchg
aad
out
lahf
dec
mov
mov
cltd
das
pop
mov
jmp
cmpsb
dec
jbe
jge
addr16
scas
jg
data16
xchg
and
inc
lock
pop
aaa
sub
xor
mov
sbb
std
push
mov
lods
out
xor
lea
cs
dec
xchg
rcrb
mov
jns
push
push
mov
test
lret
dec
out
es
pop
or
addr16
mov
mov
xor
jno
int
adc
adc
push
mov
movsl
cli
xor
adc
sbb
jg
xchg
jmp
pusha
je
sub
dec
xor
pop
shll
xor
mov
or
and
out
or
leave
push
lret
dec
daa
in
arpl
clc
mov
adc
rcl
mov
xchg
add
mov
mov
in
dec
xor
cmpsl
in
cmp
mov
xor
adc
in
in
jne
adc
iret
mov
aad
insl
pop
iret
or
adc
jno
out
pop
pop
xor
clc
cwtl
pop
jecxz
adc
and
ret
sbb
lahf
jp
or
mov
rcr
das
or
imul
out
jno
sub
push
add
inc
inc
cs
and
insb
cmp
daa
xor
mov
insl
outsb
push
faddl
shrl
sub
sub
nop
addr16
outsb
cmp
rcrl
ljmp
inc
pop
pop
push
call
push
mov
adc
fldcw
and
xor
xchg
xor
cmp
out
cmpsb
lods
dec
adc
leave
scas
push
sub
shlb
xor
adc
mov
pop
out
sbb
aaa
lcall
add
mov
fs
mov
sahf
mov
xchg
cltd
cmpsb
dec
cmc
push
cmpsl
testb
pop
or
mov
sub
into
jl
pop
fdivrl
aas
sbb
sbb
jmp
out
cs
popf
xchg
std
and
sub
jmp
xchg
or
nop
repz
mov
adc
push
repnz
sbb
gs
insb
iret
cmp
sub
add
aad
mov
jp
xchg
xor
jno
xor
fiaddl
dec
jmp
enter
adc
shr
push
jae
mov
fwait
imul
insb
pusha
xchg
push
push
or
push
dec
out
sub
xor
popa
adc
ds
mov
push
stc
repz
push
jl
or
sub
add
inc
push
mov
aam
cmp
data16
push
ja
rol
test
pop
loop
das
or
daa
fstps
dec
xor
jl
sbb
das
push
les
pop
mov
xchg
jmp
and
dec
je
repnz
push
lea
imul
ret
outsl
js
mov
xchg
mov
xor
fstl
pop
fwait
pop
dec
ror
adc
insl
pop
pop
and
or
jno
in
dec
cmp
fstps
dec
test
scas
xchg
popa
mov
mov
add
xor
adc
das
jbe
aam
daa
lods
push
ljmp
and
jns
adc
stos
sub
jp
adc
mov
push
jmp
jbe
stc
jle
ror
mov
push
ds
sbb
test
xchg
adc
pushf
pop
sahf
adc
fisubs
pop
push
mov
aas
pop
push
xchg
dec
gs
adc
ljmp
cltd
ret
out
cmp
mov
sub
and
inc
mov
push
push
pop
sub
ss
or
sub
pushw
sbb
mov
cmpsb
mov
fdivs
cmp
nop
pop
lock
je
outsb
loop
lcall
pop
sub
test
inc
cmovbe
adc
xor
jg
sbb
jmp
and
addr16
loopne
fistpll
mov
sbb
int
imul
repnz
push
sub
arpl
sub
mov
cltd
loop
mov
mov
xor
test
cli
add
pop
stos
sub
fdivrs
mov
add
pop
jp
inc
mov
aam
jge
jmp
shl
imul
aam
add
stos
adc
add
push
push
pop
mov
add
out
sbb
cmc
xchg
sbb
fldz
enter
jbe
add
pop
or
xor
pop
mov
dec
jg
xchg
lcall
sbb
dec
lods
sub
xlat
rorb
shl
dec
call
pop
in
dec
fnstenv
lock
and
dec
xor
jmp
jb
xchg
lret
inc
push
xchg
popa
dec
mov
jp
mov
lea
shrl
sbb
jns
inc
dec
pop
lcall
mov
push
xchg
lea
stc
adc
in
jo
imul
pop
jle
pop
mov
mov
mov
sub
cli
cs
es
adc
rorb
out
stc
mov
shrl
or
mov
push
cli
xchg
ret
pop
stc
pop
idivb
test
jmp
push
scas
jnp
fwait
lds
test
mov
imul
jae
jmp
in
mov
xchg
fidivrl
dec
cmp
sbb
mov
mov
pop
insb
jp
cli
aaa
jnp
loopne
aas
pusha
mov
cmpsl
adc
rolb
lods
jmp
std
push
stc
popa
push
shrb
iret
jg
fimuls
dec
into
add
mov
rorb
adc
icebp
pop
movsl
xchg
or
cmp
xlat
std
inc
aaa
shl
sub
xchg
ficomps
xor
aam
sti
fnsave
sbb
sub
fidivl
pop
xor
sbb
ja
jne
jbe
mov
add
adc
pop
sub
stos
mov
imul
dec
push
jmp
popf
sbbl
roll
jns
test
pop
jmp
push
xchg
out
stos
scas
pushf
pusha
adcb
sub
mov
out
or
xacquire
lret
inc
mov
loopne
add
jbe
inc
and
add
int3
lcall
icebp
adc
jge
push
mov
jns
xchg
dec
inc
xor
pop
jns
pop
test
in
xchg
push
jecxz
xchg
iret
mov
pop
pop
push
mov
adc
adc
icebp
pop
mov
imul
icebp
andb
cmp
mov
jp
mov
scas
mov
cs
mov
pop
sbb
ret
mov
shrl
jb
push
repnz
bsr
xlat
add
add
add
imul
je
sahf
in
jbe
push
sbb
pop
in
mov
add
dec
xchg
and
pushl
pop
mov
inc
jl
mov
inc
mov
and
call
sbb
es
or
mov
xor
jnp
sub
push
and
lret
icebp
xor
or
mov
inc
xchg
cli
into
push
or
cmpsb
push
rcl
mov
mov
stos
jmp
and
movsb
bound
movsb
xchg
mov
sbb
in
mov
lock
xor
or
adc
dec
xchg
adc
sub
pop
insl
mov
scas
filds
jl
repnz
mov
loopne
sbb
imul
inc
dec
dec
jae
xor
mov
mov
je
mov
out
ds
xor
dec
cmp
sbb
out
push
push
and
push
pop
push
fistpl
movsb
leave
inc
hlt
ljmp
mov
or
add
ljmp
pop
mov
rorb
insb
push
rcll
or
adc
or
shll
sbb
loop
lcall
notl
mov
rcrb
enter
inc
pop
xor
imul
adc
lret
ljmp
cmc
jb
mov
or
jns,pn
sbb
mov
dec
jno
pusha
in
inc
push
dec
loop
mov
sub
mov
mov
shrb
jne
iret
test
sub
loop
pop
jge
xor
lcall
inc
enter
push
jecxz
mov
mov
mov
lret
js
insb
orb
not
and
ja
adc
loopne
push
lret
dec
add
cwtl
hlt
adc
cmpsl
test
sbb
iret
test
cmp
sbb
test
push
adc
xchg
ljmp
and
ljmp
pop
in
stc
mov
xchg
insl
or
sub
repnz
stos
sub
sub
sbb
sbb
scas
or
mov
loopne
and
adc
fwait
sub
xor
xchg
sbb
nop
inc
xchg
pop
mov
mov
xor
cwtl
mov
push
fistps
xchg
xchg
mov
push
test
popf
cmp
mov
push
push
jne
add
jl
arpl
mov
inc
lret
clc
gs
pop
sub
mov
loope
and
add
stos
divb
dec
out
add
popf
rorl
icebp
sbb
mov
mov
push
gs
xorb
fisubrs
jae
icebp
mov
shll
mov
jecxz
ret
stc
mov
mov
cwtl
mov
outsb
cs
scas
pop
inc
les
pop
ret
pop
mov
mov
ss
pop
adc
mov
pop
in
sub
lods
inc
mov
cmp
dec
pop
sbb
sbb
sbb
pop
pusha
cltd
mov
hlt
adc
inc
push
inc
mov
arpl
sub
cltd
sti
lret
sti
xchg
into
add
inc
adc
pop
and
inc
pop
stos
cli
push
lea
repnz
in
mov
push
jo
xor
mov
test
int
jae
pop
lea
lods
gs
stos
iret
repz
sub
and
nop
aas
lods
or
jmp
jg
mov
push
bound
out
mov
jecxz
xlat
push
inc
sbb
lods
xchg
lock
popl
cli
popf
xor
pop
aaa
and
jmp
data16
sbb
push
flds
decb
loopne
repnz
sbbl
mov
ja
xlat
fldcw
jbe
cmp
xchg
gs
ss
mov
dec
push
gs
add
cwtl
mov
jne
jmp
lods
sbb
jle
int3
stc
mov
outsb
cld
and
mov
mov
subl
loopne
and
pop
xchg
pop
dec
adc
lret
mov
sbb
jmp
sahf
aad
mov
lcall
jne
push
lea
xor
mov
sub
lods
icebp
out
out
lcall
pop
and
add
mov
iret
ret
daa
inc
sbb
aam
adc
push
and
mov
pop
aam
rclb
nop
xlat
adc
sbb
jle
add
dec
and
icebp
push
mov
lret
xor
dec
push
mov
push
dec
sahf
push
xor
mov
arpl
or
icebp
movsb
lcall
lock
test
xor
lahf
leave
je
mov
pop
mov
dec
inc
inc
adc
lahf
outsl
jmp
lret
cld
test
ficoms
ds
in
dec
mov
cmp
mov
push
rcrl
sbb
out
pop
or
cmp
dec
sahf
idivb
mov
outsl
cmp
pop
push
add
test
repnz
mov
inc
add
add
pop
int3
movsb
jp
pushf
push
dec
sub
xchg
push
and
adc
pop
in
mov
aaa
sbb
push
add
test
cmp
inc
imul
mov
je
jo
push
jge
fwait
or
in
sbb
aam
ljmp
add
push
add
ja
jmp
jbe
pop
sub
fisubrl
sub
and
mov
mov
dec
jb
cmp
add
rcrl
repnz
xchg
or
insb
inc
int3
loope
xchg
outsl
push
movsl
jp
mov
mov
jnp
jbe
ffree
jb
jmp
call
stos
lahf
jg
outsl
pop
mov
adc
mov
popf
mov
int3
cli
repz
mov
fcomp
push
je
idivl
nop
jecxz
mov
imul
pop
xchg
push
dec
cmpsb
or
jle
sahf
xor
xchg
mov
ret
mov
mov
push
xchg
or
test
xor
sub
xor
in
stos
out
test
and
pop
xchg
inc
inc
clc
xchg
iret
es
ret
repnz
xor
repnz
xchg
jnp
adc
into
ja
rcrl
ds
pop
xor
movlps
lods
mov
sbb
rorl
lret
into
add
sub
jns
xchg
pop
push
out
xor
mov
adc
mov
fcomp
sub
pop
aaa
sti
or
fiadds
fcmovu
loopne
dec
test
mov
inc
enter
test
stc
adc
adc
dec
push
cmpsb
data16
add
fldt
jmp
test
ret
sub
stc
cmp
nop
sub
lcall
dec
insl
shrl
lods
inc
rcrb
mov
xor
jecxz
cld
in
or
cli
add
mov
rcrb
jne
push
clc
movsb
daa
xchg
add
shrl
mov
inc
fdivrs
jnp
mov
in
inc
adc
dec
repnz
cmp
loope
jecxz
dec
inc
out
jmp
mov
mov
or
ret
cmp
fwait
jno
insb
mov
fs
cmc
pop
cwtl
xchg
scas
push
jecxz
add
fiaddl
out
pop
add
neg
into
xchg
push
add
bnd
and
lret
or
and
mov
jne
shr
cmp
mov
bound
and
sub
mov
fiadds
int
or
push
int
dec
pop
and
loop
test
jae
pop
dec
stos
repnz
jl
pushf
hlt
ds
xlat
xor
xor
adc
ss
mov
in
mov
rolb
in
enter
inc
popf
push
fildl
lcall
mov
fldenv
cwtl
and
sbb
sbb
adc
cmc
jne
or
mov
pop
mov
scas
jo
sbb
outsl
inc
sbb
and
int3
pop
mov
ret
dec
dec
push
in
pop
jbe
pop
adc
test
lret
fnstenv
xor
add
xchg
push
or
push
xor
repnz
cmpsb
pop
push
dec
jl
or
and
roll
dec
or
pop
push
adc
xor
xor
insb
push
aas
cld
mov
cld
iret
or
cld
test
loopne
xchg
push
pop
scas
shrl
imul
dec
ljmp
data16
dec
imul
icebp
pop
sti
shrl
cmc
fldl
cmp
cmpb
sbb
mov
push
mov
repz
ret
mov
mov
jmp
dec
jno
inc
cmp
shll
fcmovb
inc
shl
jmp
mov
cltd
lods
adcb
xchg
imul
addb
cmp
xchg
fsubrl
lcall
or
inc
jne
movl
je
mov
inc
sarl
in
push
shlb
ds
cltd
sub
aaa
pop
mov
fadds
pop
mov
dec
sbb
jg
aas
pop
xchg
aam
daa
sahf
jle
addr16
fs
fnstcw
and
mov
int3
inc
or
xor
shll
nop
pop
cmpsb
clc
test
stos
adc
leave
xor
jge
into
cmc
call
lahf
insb
sbb
fld
push
out
leave
repz
insl
cmp
fnstenv
fs
leave
mov
daa
adc
and
pop
sub
sbb
push
aaa
xchg
dec
adc
rclb
mov
inc
decl
jle
jecxz
mov
jbe
sbb
pop
into
adc
aad
insb
faddl
mov
mov
ret
mov
lds
add
arpl
xor
adc
psraw
lret
sub
jl
hlt
sub
jb
sbb
xchg
std
xchg
mov
pop
sbb
lock
jmp
push
push
push
paddd
jp
sub
mov
sub
in
adc
push
stc
ret
push
ror
fsubrs
push
sub
jno
pop
dec
sbb
lcall
xchg
or
lret
leave
or
fcoms
mov
lea
cmp
in
fmul
mull
cmc
dec
jle
xchg
mov
adc
inc
push
dec
jg
ffreep
inc
mov
insl
out
sbb
pop
mov
xchg
adc
ja
inc
adc
nop
out
lcall
mov
out
cli
jb
out
sub
push
mov
in
mov
pushf
mov
pop
sahf
mov
cltd
dec
arpl
sub
icebp
outsl
outsb
cmpsl
jge
lds
out
movsb
and
cmc
inc
ficomps
and
mov
in
cmp
and
movsl
pop
out
or
sbb
and
std
push
cmp
dec
test
mov
mov
leave
adc
test
daa
incb
stos
fs
test
in
iret
push
imul
lret
jg
scas
or
fwait
xchg
pop
int3
or
xchg
test
stc
popa
and
cmp
inc
pop
or
adc
ss
rorl
iret
or
cmp
stos
pop
loope
xor
dec
and
mov
mov
xlat
or
pop
cmp
mov
daa
mov
jecxz
cmp
outsl
push
add
fbstp
and
cmp
faddl
scas
mov
xchg
jmp
sbb
in
mov
out
mov
rcrb
sub
call
js
popa
pop
int
lret
int3
rcl
jge
or
out
jne
fdivs
out
loop
mov
data16
ret
cmp
cmp
test
stc
mov
jnp
int3
adc
push
stos
push
and
xchg
ss
andb
cmc
scas
outsb
pop
inc
test
mov
mov
dec
ret
cld
pop
mov
jge
repnz
js
adc
repnz
test
mov
insl
repnz
jne
pop
les
sbb
jnp
outsl
mov
gs
adc
daa
xor
cmp
mov
lahf
jp
mov
test
orl
ds
inc
nop
inc
in
in
mull
adc
xchg
stos
addl
xchg
adc
cmc
aaa
inc
imul
sub
lods
test
mov
shlb
iret
jb
inc
in
pop
je
sub
jbe
mov
push
dec
jnp
sbbl
adc
pop
leave
aas
sub
jmp
jne
dec
add
xchg
prefetchnta
ret
test
mov
int3
adc
adc
fadds
imul
arpl
fsin
jnp
ss
test
jns
cltd
xor
subb
cmp
je
xchg
adc
fwait
ljmp
push
jmpw
cmc
inc
mov
leave
test
push
xor
cmpsb
sub
in
mov
loope
lret
pop
push
pop
xchg
bound
jne
jg
les
mov
add
jecxz
loopne
mov
insl
add
and
jnp
push
rcl
addr16
sarb
jns
xorl
cld
jno
sbb
add
insb
stos
sub
out
mov
or
ret
cmpsw
mov
sbb
dec
xchg
adc
jnp
cmp
test
xor
mov
mov
stos
add
inc
nop
jp
push
push
lea
unpckhps
loope
jno
inc
shrl
js
stos
mov
cmp
shr
icebp
call
pop
fisubs
aaa
sbb
or
sub
push
lods
mov
adc
ja
mov
mov
idivb
or
insb
daa
mov
notl
inc
mov
lahf
mov
in
insl
jno
test
std
cmp
testl
dec
pop
int
lock
push
scas
sub
cs
jmp
mov
fiaddl
imul
sar
xor
mov
xchg
int3
jae
push
cmpsl
ret
sbb
push
dec
cmp
les
sub
outsb
outsb
inc
mov
mov
jno
inc
jbe
pushf
icebp
and
sub
enter
mulb
sahf
mov
fildll
cwtl
push
seta
mov
or
gs
inc
ss
mov
movsl
pop
pop
add
dec
xchg
mov
and
popw
repz
mov
jp
decb
pushf
insb
sti
movsb
fs
adc
shlb
stc
pusha
xor
sbb
sbb
fdivrl
sbbb
repnz
adc
xor
out
dec
pushf
lea
jmp
fstpl
xchg
mov
push
je
cmc
int3
mov
add
pusha
sub
jmp
and
or
pop
mov
inc
gs
imul
xchg
adc
mov
cli
dec
pop
mov
imul
cmp
les
shl
xor
inc
cmc
adc
push
mov
jl
sahf
mov
cmpl
clc
jne
or
sbb
pop
shll
out
sub
scas
mov
jns
xchg
add
lock
movsb
stos
add
pop
xor
fwait
cltd
jne
lea
or
xchg
or
cmp
xchg
dec
mov
jg
push
js
inc
dec
int3
and
clc
jl
sahf
mov
dec
add
stc
jg
xor
popa
sbb
lret
inc
adc
dec
xor
insb
dec
hlt
imul
pop
mov
fidivrl
cli
xor
add
fisubs
xchg
out
xor
or
fcomps
push
outsl
imul
aam
xor
xchg
mov
pushf
xor
mull
icebp
inc
and
mov
sub
xchg
dec
call
jae
cmpl
enter
jo
mov
icebp
mov
cltd
pushf
outsl
xlat
push
push
incb
ret
insl
inc
out
push
cli
les
gs
bound
jl
cmc
fs
ja
bound
popa
test
or
lods
mov
in
sub
iret
dec
push
rorb
sub
mov
arpl
xchg
call
mov
adc
pop
int
add
mov
inc
arpl
fdiv
repnz
ds
aas
pusha
cmp
jo
dec
sub
jo
scas
inc
sbb
bound
out
pop
outsb
scas
nop
inc
pop
push
dec
jae
push
leave
out
das
shrb
scas
pusha
mov
jbe
scas
xchg
sbb
mov
xchg
xlat
dec
xchg
pop
fwait
stos
outsl
pushf
data16
dec
mulb
out
out
test
aaa
fisubrs
mov
fwait
mov
stc
mov
mov
leave
pop
insb
iret
mov
xchg
incl
mov
mov
inc
stos
and
in
push
or
sub
push
mov
cs
imul
lret
ljmp
movsb
int
add
outsl
xor
adc
push
sub
mov
cwtl
sbb
lret
adc
adc
mov
fidivrl
dec
pusha
bound
pop
sbb
hlt
sub
sub
mov
js
cmp
xor
test
cmc
pop
test
out
sub
leave
dec
or
movsb
adcl
stc
fcoml
mov
stos
leave
cmp
mov
fadds
nop
cmpl
lcall
loop
adc
mov
mov
sahf
outsb
cli
sbb
ret
iret
cmp
les
sbb
cmp
and
sub
in
pop
sahf
aas
mov
jno
fdivrs
cmc
add
jecxz
jbe
iret
sub
add
imul
notb
scas
sub
mov
addr16
lock
push
add
cmp
mov
sbb
inc
mov
and
rorb
dec
cli
and
mov
insb
loop
les
leave
push
lea
mov
sbb
mov
push
repnz
rcrb
or
or
enter
pop
mov
ret
sbb
mov
in
das
sub
push
xorl
movsb
dec
pop
loope
cmpsl
popa
sti
add
ljmp
fwait
iret
pusha
hlt
mov
add
mov
or
imul
bound
jnp
push
adc
in
loope
and
icebp
nop
pop
xor
jp
add
rorb
lcall
push
arpl
fsubrs
inc
mov
xchg
xor
or
scas
stos
repz
push
and
xchg
and
xchg
dec
pop
jnp
mov
sahf
es
pop
hlt
mov
xor
test
mov
sub
dec
mov
pop
in
xchg
sbb
adc
test
mov
fsts
xchg
test
xor
mov
data16
aaa
pusha
mov
popf
xor
imul
push
imul
fstl
sbb
dec
sub
hlt
jg
lret
fwait
jg
aaa
enter
mov
pcmpgtb
outsb
or
add
fdivrp
test
lea
push
push
cmpsb
rclb
and
inc
push
xor
push
or
cltd
sti
sti
divb
pop
fs
jle
adc
mov
adc
rorl
pop
xchg
xchg
std
jge
shrd
inc
and
hlt
loop
or
icebp
mov
hlt
out
xchg
mov
inc
dec
and
enter
jg
imul
mov
aam
gs
and
frstor
and
adc
mov
mov
pop
mov
das
pop
cltd
loop
cmp
daa
into
incb
lcall
ret
imull
rol
mov
pop
test
fstpl
mov
sbb
xor
ret
xchg
push
sti
cmpsb
adc
incl
movsb
sub
jle
xchg
mov
dec
pop
fsubrl
pop
pop
sub
sbb
fs
idivb
stc
mov
ljmp
dec
jo
push
mov
jp
popf
sub
aam
addl
cmp
sbb
mov
jns
push
fcompl
pop
adc
aad
push
jbe
repnz
pop
bnd
xchg
addr16
push
jns
add
arpl
add
add
fidivl
jp
popf
adc
sub
inc
sub
dec
sar
int
inc
push
dec
add
stos
mov
cld
or
xbegin
testl
lock
pop
call
stos
mov
subb
lret
testl
mov
sti
sub
scas
lods
sub
or
inc
enter
mov
mov
mov
push
incl
sub
daa
nop
xor
scas
jne
loope
jge
jb
jge
bound
out
adc
mov
and
std
jnp
sub
cmc
lret
dec
jo
cmp
call
jbe
cmpsb
pop
push
imul
ret
fbld
push
pop
stos
fs
lahf
push
or
fwait
cmp
std
pop
fidivl
clc
pop
imul
xchg
jb
aam
adc
into
lret
jns
nop
inc
in
push
jle
ja
mov
push
aad
cmp
repz
mov
and
mov
sub
ret
adc
scas
aam
cmp
fwait
mov
rcr
loopne
mov
mov
mov
jne
movsl
or
sbb
out
clts
jne
cmp
xlat
jbe
fisubrs
cmovbe
jbe
pop
ja
mull
pop
insl
pushf
sbb
ds
out
mov
loope
cmpsb
add
push
scas
xor
out
sti
mov
enter
cmp
jp
test
ss
sbb
mov
push
fs
icebp
bound
imul
cli
cmp
daa
xor
cs
fstps
nop
push
aas
shll
rcll
and
xor
adc
scas
fnstcw
push
inc
repnz
inc
mov
clc
jne
mov
pop
int3
jl
inc
push
mov
mov
inc
mov
adc
dec
jb
fptan
cmc
cwtl
or
repnz
or
lock
mov
in
sbb
lock
xchg
sub
jno
mov
lret
insl
push
lret
pop
xor
fdiv
or
roll
xor
int3
addr16
stc
mov
divl
xchg
dec
aad
jne
insb
jp
call
cmp
or
push
lret
ja
xor
cli
and
sub
popf
push
test
loope
mov
pop
push
pop
out
sbb
mov
loope
daa
mov
pop
out
mov
xor
stc
mov
fldpi
repz
stc
pop
jge
call
enter
push
fwait
pop
loopne
cmp
aaa
cmp
int
repz
mov
inc
arpl
int3
or
ret
xchg
std
push
sbb
rep
pop
push
negl
test
in
movsb
movsb
outsb
std
push
pop
insb
bound
movb
mov
sub
cmpsb
in
jp
in
jo
cltd
in
fs
rclb
stc
ret
inc
fwait
adcb
daa
test
push
sbb
push
xor
loope
sub
push
jecxz
mov
mov
into
stc
data16
and
add
jae
in
jle
sti
mov
sub
and
push
ljmp
and
rcr
das
mov
fldt
xor
sbb
rol
loope
inc
push
mov
inc
fsub
hlt
push
jg
call
lret
add
test
test
lods
enter
push
add
pop
scas
lret
mov
faddp
cwtl
mov
nop
popa
pushl
push
sub
sbb
jns
js
jp
jp
pop
mov
int3
push
sar
mov
fmulp
es
sbb
addl
mov
mov
xlat
in
adc
cmp
movsb
cs
or
in
mov
jbe
cmp
repz
xor
jno
inc
push
xorb
dec
pop
xlat
or
sbb
mov
mov
lds
enter
fnsave
xchg
fs
into
or
daa
mov
adc
xlat
ss
mov
in
or
push
pushf
pop
aas
stos
and
add
lea
not
xchg
scas
dec
mov
imull
js
or
nop
mov
aaa
mov
orb
pop
lds
and
mov
xchg
sbb
dec
mov
sbb
xor
and
xor
push
sbb
out
ljmp
cmpsl
pop
out
ljmp
jne
mov
inc
fcomi
jecxz
dec
fsubl
fwait
pushf
inc
gs
sub
outsl
or
dec
fcmovnbe
push
cli
dec
faddl
sbb
fisttpll
mov
je
and
lahf
fs
and
dec
mov
pop
daa
clc
popf
filds
cmp
fisubl
mov
in
ret
stos
loop
loopne
xorb
fildl
dec
aas
add
mov
les
cs
outsb
cmp
pop
push
mov
std
push
daa
jmp
repz
mov
jecxz
xchg
ficomps
test
jo
call
jbe
adc
xchg
xor
out
push
sbb
mov
and
xor
cltd
iret
jno
aad
data16
shrb
imul
adc
cmp
mov
dec
aas
mov
jmp
call
call
push
into
xor
add
es
aam
js
push
rcll
in
fsubl
lfs
js
add
push
loopne
add
add
mov
sbb
loop
jp
inc
je
fs
gs
mov
out
mov
push
cmpsb
push
dec
cmpsb
cmp
push
clc
mov
xchg
pushf
xchg
xchg
imul
test
cld
xchg
and
and
enter
lds
lcall
inc
loop
xchg
outsl
bound
push
or
es
out
pop
and
inc
fisubrl
test
stos
ds
xor
scas
cmpsb
mov
jl
inc
icebp
mov
ret
stos
shr
mov
lds
push
mov
pop
xchg
outsb
addr16
mov
and
aaa
roll
cmp
mov
mov
dec
out
sub
inc
inc
sbb
dec
xchg
mov
js
and
xchg
or
lock
dec
idivl
pop
mov
ret
adc
out
stos
test
bound
add
xor
fsubrl
in
cmp
jnp
cmp
xchg
test
mov
cld
fcomps
xchg
fists
repz
push
lahf
and
mov
jno
sahf
inc
mov
in
cmpsl
xlat
movsl
ss
inc
nopl
lods
sub
adc
jmp
cmp
dec
sub
lahf
mov
mov
in
cld
push
add
fdivs
sbb
adc
out
or
or
mov
arpl
sbb
and
out
sub
mov
repz
lret
hlt
jp
adc
or
sbb
into
sbb
and
imulb
divl
or
aam
testl
imul
shlb
pushf
int
mov
add
pop
repnz
lods
dec
test
scas
popf
add
clc
shr
push
pusha
mov
mov
cltd
in
xchg
int
scas
jge
aad
gs
movsl
dec
sbb
loope
xchg
cmp
int3
sbb
ds
xchg
add
xchg
add
ljmp
shll
jle
sub
dec
dec
ljmp
das
xchg
cmp
cld
into
insb
dec
and
jl
xor
outsb
sbb
adc
imul
mov
aad
scas
shrl
fadd
scas
and
scas
dec
xchg
aas
lcall
fldt
out
xor
mov
cmp
es
inc
sbb
push
cmc
push
xorb
jge
jnp
ss
mov
push
dec
in
movsl
mov
pop
cmp
push
mov
cs
in
dec
call
and
jns
test
sbb
popf
mov
aam
hlt
jmp
add
ret
mov
adc
js
cs
push
jecxz
adc
shll
subb
pop
cmpsb
cmp
sar
add
js
and
mov
sub
cli
sbb
sub
jle
es
mov
and
mov
xchg
arpl
movsb
movsl
daa
xchg
inc
lock
cmp
push
jl
mov
clc
mov
xchg
mov
fnstsw
push
negb
andl
ja
push
dec
imul
ret
fcom
adc
inc
test
push
repz
adc
lret
notl
pusha
aas
adc
xchg
out
rorb
neg
insl
push
pop
mov
movsl
in
imul
or
cmp
mov
jecxz
fwait
push
repnz
xchg
push
mov
mov
push
or
mov
push
lahf
stos
iret
mov
imul
ffree
pop
mov
sub
xchg
inc
hlt
nop
jns
pop
popa
fistpl
scas
dec
rcrl
pop
andb
push
mov
mov
frndint
ja
adc
xor
ror
sbb
loope
jae
cli
mov
dec
fiaddl
decb
push
rol
cmc
push
pop
dec
rorb
cs
and
adc
stos
and
loope
adc
adcl
xchg
orl
aad
xor
cs
pop
sub
mov
mov
mov
lahf
iret
jg
mov
ret
sbb
and
xor
bound
pop
cmp
into
cli
loopne
pusha
jp
in
jbe
fs
or
lods
int3
adc
aam
jo
sbb
dec
pop
stc
fdivp
mov
cmp
cltd
mov
sub
mov
sahf
insb
je
mov
or
inc
inc
pop
nop
pop
fistpll
inc
bound
lcall
pop
pop
pop
aam
in
call
ret
repnz
out
scas
repz
stos
pop
cs
mov
sbbl
jmp
cmp
test
stos
inc
push
lea
and
jecxz
cwtl
leave
loop
mov
jo
lea
mov
pushf
div
and
fwait
call
movsl
inc
adc
jnp
adc
fisttpl
dec
xchg
xchg
js
pop
lea
cs
sub
stc
scas
out
ja
dec
cli
scas
cmpsl
in
add
push
lahf
push
stc
test
xchg
adc
dec
lock
and
or
fisttpll
and
sub
outsl
inc
cmp
mov
or
xorl
rorb
sahf
negl
push
jp
cwtl
dec
cmovnp
je
and
out
sub
jge
mov
in
cwtl
mov
pop
pop
or
test
sbb
sbb
xchg
mov
mov
pop
lahf
std
bound
sbb
mov
add
cli
into
clc
mov
in
stc
or
nop
sarl
sub
and
jbe
sti
fdivl
notl
sbb
jl
aas
bound
dec
mov
inc
mov
pop
aam
loope
xchg
sub
cwtl
and
cs
push
mov
ljmp
insb
imul
mov
sub
into
filds
sub
aas
icebp
inc
lret
add
movsl
adc
arpl
add
pop
into
push
in
pop
test
push
dec
add
mov
mov
das
xchg
gs
pop
cwtl
adc
leave
subb
cmc
sub
in
jl
testb
stos
bound
and
adc
push
sbb
insl
insb
movsl
pop
adc
or
bound
dec
sub
dec
clc
mov
daa
dec
repnz
cmp
stos
jl
scas
xor
bnd
int3
cmp
xchg
lcall
ss
and
dec
mov
imul
sbb
fistpl
mov
sahf
push
pop
in
cmp
mov
pop
jnp
or
andps
fwait
xchg
into
adc
push
push
hlt
hlt
std
mov
je
test
or
lock
inc
push
lahf
mov
hlt
dec
push
lock
cmp
pushf
inc
push
loopne
jbe
shrl
jnp
leave
loopne
cs
cli
sub
sub
dec
ret
add
fbld
je
aad
mov
movsl
movsl
inc
add
repz
inc
lods
xchg
enter
arpl
xchg
inc
cmp
insb
lahf
aas
cltd
adc
cmp
test
sbbb
jp
and
inc
lahf
imul
test
test
fnsave
les
jg
lcall
ss
jb
jmp
sbb
scas
out
pop
shr
add
into
and
pop
out
lret
cmc
jbe
orb
test
aas
xor
loop
dec
dec
shl
ljmp
adc
lcall
mov
outsl
das
idivb
loope
xchg
outsl
add
mov
fsub
lds
stc
xchg
dec
fistpl
stc
hlt
aas
lcall
movsb
mov
jno
hlt
into
mov
in
arpl
dec
pop
out
push
lds
push
sub
and
inc
mov
and
out
dec
arpl
mov
xchg
inc
push
push
sub
fdiv
or
adc
push
inc
or
mov
loope
pop
aas
sbb
jnp
pushf
int3
and
test
lock
sbb
cwtl
data16
push
rol
arpl
xor
pop
aaa
imul
icebp
in
in
push
pusha
filds
popa
nop
sahf
out
pusha
sbb
iret
and
pop
add
in
or
test
lcall
jle
lods
je
jb
out
and
das
mov
test
movsl
out
xor
paddusb
testb
bound
add
mov
mov
in
lret
stc
push
arpl
mov
mov
lods
xchg
add
dec
inc
popf
jecxz
mov
xor
dec
loop
jle
push
cld
jno
idivb
mulb
clc
outsb
sub
ljmp
xor
cld
faddl
std
adc
nop
mov
sbb
jecxz
jl
xchg
cld
clc
pop
mov
mov
mov
mov
imul
sub
pop
stos
pusha
mov
insb
mov
out
cli
sahf
pop
clc
loope
cs
lods
aam
cli
cmpsl
dec
cld
xchg
xor
sarb
or
sub
mov
cmpsl
mov
inc
pop
rcrl
jp
cmpsl
mov
push
xor
push
shlb
das
fwait
out
push
out
xor
xor
clc
add
adc
and
cmp
into
and
test
movsl
mov
cmpsl
dec
pop
insl
scas
or
jecxz
ljmp
mov
and
cli
sbb
push
mov
sbb
shl
ljmp
cmpsb
push
sub
mov
jle
dec
movsl
jp
push
or
jne
testb
inc
mov
iret
fistps
pop
mov
pusha
and
aas
sbb
test
dec
call
into
and
push
push
sub
movl
jecxz
push
add
insl
out
jne
jg
aas
repnz
stos
cmpsb
xchg
lcall
pop
mov
jecxz
adc
push
stos
mov
add
sbb
mov
jbe
inc
adc
mov
loope
lods
xchg
xchg
js
mov
cmp
fsubrl
idivb
das
mov
xchg
pop
xchg
cmpsl
inc
int3
js
test
sbb
loopne
sub
push
fildl
pop
sti
test
and
xchg
cmp
loopne
repz
dec
movsl
dec
enter
fcom
mov
and
fdivrl
lret
ja
cli
loop
jo
into
adc
cwtl
mov
pop
mov
pushf
dec
mov
inc
js,pt
jmp
mov
inc
ffree
lret
pop
inc
leave
fnstenv
cwtl
push
pop
int
scas
in
outsl
pop
mov
out
ss
lods
nop
test
insb
fildll
sbb
cmc
fists
mov
scas
fistl
aaa
mov
div
push
xorb
dec
adc
mov
mov
outsb
mov
sbb
movsl
stos
or
ret
mov
cmpsl
inc
jg
roll
test
push
and
xor
sahf
int3
or
push
stc
mov
inc
jecxz
xchg
sub
js
sarl
pop
loop
dec
pop
sti
test
cmc
mov
fnstenv
dec
fnstsw
fnstsw
jmp
mov
sahf
push
mov
daa
out
mov
sub
cltd
ss
out
loop
push
arpl
xchg
aad
scas
dec
out
sti
popa
dec
xchg
pop
xchg
cmp
adc
push
lahf
mov
sahf
pop
or
cmp
push
in
fistl
jmp
fists
rorb
cmp
out
jbe
dec
mov
mov
mov
dec
pop
out
pop
pop
mov
hlt
mov
adc
lds
rolb
daa
add
out
mov
push
jecxz
frstor
stc
icebp
cmp
and
mov
mov
loope
pop
sbb
jecxz
repnz
xchg
test
or
call
push
or
fiadds
dec
or
jbe
mov
sbb
test
and
sbb
pop
dec
dec
mov
pop
inc
repz
insl
jbe
mov
pop
rcl
mov
mov
add
fwait
loopne
sbb
inc
test
idivb
cmp
xor
jmp
sti
cmc
icebp
push
pop
dec
mov
mov
mov
xor
mov
call
dec
mov
sbb
cmp
pop
pop
jno
jg
pop
inc
arpl
and
mov
adc
imul
shlb
popa
shr
lret
inc
mov
pushf
cmp
jg
hlt
sub
hlt
lret
cmp
scas
dec
or
or
add
enter
inc
mov
lret
test
cs
sbb
out
test
and
mov
jnp
movsl
rcr
cmpsl
xlat
mov
out
fsubr
adc
loopne
xchg
jmp
dec
dec
xlat
mov
ret
adc
js
sbb
xchg
mov
out
nop
lahf
xor
data16
jl
lahf
lahf
sub
lea
push
ret
rcr
push
inc
out
jb
jge
xlat
ljmp
daa
sahf
pop
or
adc
bound
adc
add
fldl
roll
shlb
andb
test
jl
je
xchg
ss
out
int
nop
ret
cltd
mov
dec
test
jo
ljmp
and
jmp
sbb
pop
sub
nop
jnp
movl
arpl
insl
xor
push
mov
cmpsb
sbb
sub
sbb
ror
gs
or
sbb
mov
mov
flds
dec
or
scas
lea
xchg
addl
dec
or
jns
mov
jg
int
inc
clc
adc
aam
xor
fimull
ds
add
mov
push
mov
xlat
bound
gs
loopne
shll
aad
ss
in
pop
push
adc
add
xchg
push
dec
sub
dec
push
cld
lahf
in
int3
add
mov
mov
outsl
ss
shlb
adc
push
shl
je
dec
test
inc
lods
jo
sahf
call
xor
jo
xchg
xchg
push
xchg
push
inc
sbb
fstpt
push
test
xchg
push
ss
iret
xchg
fcmove
mov
or
mov
sahf
jg
add
inc
ret
jl
sbb
cmp
add
jmp
push
rcpps
in
mov
xlat
xchg
adc
cmp
adc
pop
lds
mov
ds
pusha
in
lcall
dec
or
movsb
loopne
cmovle
outsb
clc
enter
pop
sbb
pop
mov
stc
outsb
pusha
sbb
and
xor
xor
shrb
mov
dec
inc
mov
push
dec
dec
inc
mov
mov
insl
leave
jb
pusha
jae
pop
xor
add
lds
or
or
out
fcoml
fdivs
push
or
sbbl
cwtl
mov
mov
inc
mov
les
and
xorb
ss
add
jmp
or
xchg
add
enter
push
xlat
pop
add
lds
and
mov
dec
and
cmpsb
dec
mov
cmpsl
test
sub
inc
sbb
inc
cmp
inc
ss
hlt
jge
into
daa
cltd
xchg
dec
and
dec
mov
test
lds
inc
mov
cmc
inc
mov
int
aam
adc
fsts
test
jno
loope
fcoml
aad
pop
popa
pop
mov
jmp
or
dec
pop
sub
mov
iret
push
jne
and
pop
inc
in
test
mov
popf
pop
pushf
add
cwtl
dec
es
inc
stos
and
xchg
jae
pushf
sub
call
push
dec
mov
cli
pop
lock
push
cmp
aaa
ficoml
sbb
dec
fistps
push
xchg
das
mov
sbbl
xor
mov
jp
adc
or
test
jecxz
inc
adc
inc
inc
daa
cs
insl
scas
push
aas
mov
imul
and
mov
jl
pop
inc
imul
inc
adc
jmp
add
gs
loopne
clc
jge
sti
xchg
dec
pop
cmpsb
popf
sarl
ret
inc
mov
sbb
push
cmp
mov
pop
and
sbb
inc
lods
daa
mov
mov
mov
inc
ds
pop
jae
mov
pop
testb
mov
test
jne
ret
sub
inc
jl
pop
std
in
loope
mov
ret
repnz
inc
mov
adc
es
xchg
xchg
fisttpll
mov
or
pop
xor
push
pop
in
bound
and
or
and
loop
sub
sbb
and
pop
fmull
adc
outsb
repz
sbb
lcall
js
repnz
mov
pop
mov
loopne
sub
mov
cmp
add
mov
neg
fwait
add
fcomps
addb
xchg
pop
jno
mov
stos
or
mov
add
add
jecxz
jbe
scas
sbb
insb
xchg
aad
bound
adc
js
mov
xchg
iret
and
cmc
in
sub
xchg
rol
pop
dec
mov
mov
jl
imul
add
int
or
sub
in
and
inc
jbe
iret
jo
jbe
sarl
cwtl
cld
add
stos
movsb
out
sbb
cli
pusha
sbb
imul
arpl
dec
jae
cmp
ffreep
dec
hlt
push
insb
pop
mov
adc
mov
xchg
leave
out
xorl
pop
mov
adc
push
mov
sub
nop
ret
gs
jne
ret
aad
sub
pop
xor
xchg
lock
mov
mov
pop
dec
and
inc
sbb
xor
adc
fnsave
stos
xor
sahf
lret
test
int
adc
test
lods
push
ret
cmc
pop
pop
push
xchg
scas
xlat
loopne
xor
sub
mov
jno
dec
mov
dec
out
push
fnstcw
dec
sub
repnz
stos
cmpsb
dec
fwait
stos
loopne
ljmp
inc
dec
jp
fistl
mov
fstpt
cmp
jno
jb
jmp
shlb
stc
fisubrl
inc
insb
fwait
xchg
push
addl
mov
mov
sub
mov
xor
nop
push
in
jno
mov
xchg
pusha
std
bound
out
xchg
test
sbb
ds
inc
test
ss
mov
inc
cmp
and
dec
shrl
das
pop
sub
mov
mov
bound
inc
rcr
test
subb
inc
inc
int3
outsl
jge
les
outsl
cmp
jle
sub
and
xchg
sbb
sbb
xorl
sti
inc
inc
sbb
adc
pop
jo
ss
test
stos
bound
dec
mov
jns
movsb
fwait
dec
ss
jl
es
sbb
adcb
mov
adc
mov
cmc
and
sub
cld
loope
xor
inc
std
push
fnstsw
lock
fstl
inc
and
xchg
cmp
jmp
es
sub
and
mov
ret
mov
fisttpll
mov
add
cmp
xchg
fistpl
sbb
mov
push
test
push
sbb
and
pushf
popa
xchg
iret
push
std
cmp
aaa
push
inc
jecxz
scas
js
ja
movsl
scas
inc
xchg
cmp
sbbl
xor
or
inc
jp
inc
sbb
cmp
nop
adc
nop
in
dec
inc
rcrb
mov
xor
stc
out
add
fsts
cmpsl
js
jp
push
push
ds
mul
cld
fldl
mov
and
push
cmpb
inc
mov
mov
mov
cli
cmp
pop
dec
leave
push
addr16
int
xchg
add
jo
rcll
stos
sub
jecxz
movsb
sbb
jbe
inc
jmp
push
or
jecxz
js
cmpsl
test
sub
mov
xor
out
jbe
popf
or
inc
movsl
inc
mov
and
and
ret
and
adc
out
mov
shll
ss
icebp
or
or
push
je
jbe
cli
daa
in
imul
mov
mov
icebp
cmp
pop
xchg
and
xor
push
mov
lods
je
clc
and
out
ret
fwait
xor
ret
and
int
lret
stos
mov
jge
int3
sub
insl
loope
lods
inc
test
or
movq
push
decb
inc
sub
popf
sahf
ja
insb
ja
lock
jo
sub
imul
xor
jbe
adc
not
sbb
push
mov
xchg
cmpsb
js
mov
in
std
in
sbb
dec
pushf
iret
or
xchg
inc
dec
js
jo
lahf
xor
jle
ds
mov
out
dec
mov
and
addb
xlat
js
adc
sub
test
xor
mov
inc
xorb
dec
outsb
pop
lret
mov
mov
inc
outsl
in
mov
inc
mov
or
push
jne
sti
lds
loope
js
cmp
pusha
dec
faddl
js
pop
mov
cld
mov
mov
loope
lret
or
add
inc
out
imul
sbb
xor
lods
out
aaa
test
jae
or
pop
adc
stos
inc
pushf
ret
add
mov
enter
aad
out
movsl
mov
in
jle
sbbb
push
dec
mov
repnz
push
inc
jno
test
lods
lods
xchg
les
or
jo
inc
mov
mov
rcr
mov
cwtl
in
inc
lods
testl
mov
pusha
mov
pop
cmpsb
dec
aas
mov
xor
or
or
daa
pop
add
dec
mov
ljmp
pandn
aam
add
imul
add
adcl
fs
pop
dec
cmp
mov
test
dec
push
loopne
xchg
mov
dec
adc
mov
fists
cltd
sbb
lods
add
bound
cmp
jmp
les
mov
enter
jae
xchg
and
int
mov
cmpsb
push
jecxz
leave
mov
int
xchg
sub
pop
cmc
addr16
sbb
inc
jp
sub
aad
es
jb
pop
pop
stos
pop
loope
xor
xorb
xchg
and
sbb
sti
push
mov
sbb
cmp
add
add
mov
insb
gs
imul
test
sbb
addr16
mov
loopne
xor
mov
inc
in
lret
rol
cwtl
jecxz
daa
pop
sub
insb
inc
mov
cld
in
xor
imul
push
pop
aad
dec
jmp
dec
stos
lea
sub
cltd
mov
sahf
push
test
push
push
xchg
jbe
es
test
jg
or
adcb
or
popf
cmp
cmp
push
outsl
adc
xchg
icebp
ss
divl
mov
push
add
or
jno
popf
hlt
xchg
movsb
call
xchg
adc
pop
or
ja
xlat
fstpt
pop
ret
iret
lods
or
sbbl
scas
mov
ret
dec
fistpll
mov
movsb
repnz
imul
dec
push
push
adc
movsb
or
xor
mov
repnz
fabs
add
fninit
fnstcw
cmpsl
hlt
xor
push
movsb
dec
xor
xorb
mov
push
daa
movb
in
and
lock
pop
pop
ds
insl
mov
cmp
jle
cli
enter
inc
shr
jge
shl
jbe
mov
or
aas
inc
xorl
mov
sbb
mov
adc
pusha
push
mov
int
dec
mov
out
xor
ss
add
xchg
pushf
movsb
loopne
loopne
sbb
xor
test
mov
aaa
or
rclb
dec
mov
mov
shrb
dec
push
rcll
testl
jnp
add
xchg
push
inc
push
in
enter
jo
sbb
push
and
lcall
loopne
imul
or
movsb
mov
add
test
jmp
cs
adc
sub
insl
xor
mov
je
loop
inc
ret
jbe
inc
repz
cltd
sbb
or
push
movsb
dec
jg
add
mov
adc
xchg
repnz
stos
sub
push
inc
cltd
pop
stos
push
ds
inc
mov
call
and
or
sarb
push
mov
sbb
cmp
lods
or
mov
push
lods
mov
mul
sbb
dec
fsts
out
imull
cmp
fistl
in
cmp
mov
lods
cmpsb
sbb
jno
push
sbb
stos
.byte
sub
.byte
.byte
