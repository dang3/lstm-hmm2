out
mov
adc
cli
or
cmc
mov
repnz
mov
into
mov
inc
lock
cmp
stos
jg
rcrl
in
hlt
out
adc
test
jge
mov
pushaw
cmc
nop
lds
push
lea
inc
pusha
pop
lods
inc
icebp
add
mov
out
adc
xchg
mov
pushf
repnz
xchg
popf
inc
pop
pushf
or
enter
inc
ds
mov
and
xchg
and
int3
pop
lahf
mov
test
mov
das
insl
mov
dec
jo
pusha
inc
add
cld
lret
sub
xchg
sub
out
pop
cmp
mov
pop
repz
mov
jp
fistpl
lcall
cld
shrl
iret
rcll
push
cmpsl
es
or
cld
daa
stos
jb
cmp
xchg
sub
cmp
pop
std
fwait
mov
cli
rcll
mov
mov
aaa
adcl
xchg
and
xchg
inc
sub
lcall
pop
add
xchg
dec
rclb
popa
or
pop
jo
xor
pusha
jg
insl
stos
shrb
fimull
fwait
xor
movsb
mov
pop
push
loopne
or
jo
jl
jne
cmp
push
sbb
xor
pop
add
cmp
ljmp
jl
or
mov
pop
jmp
loope
inc
xor
mov
cmpsl
xchg
jae
mov
mov
push
ljmp
adc
mov
lcall
popa
sbb
inc
dec
dec
ret
xchg
jno
into
loopne
mov
sub
jge
popf
or
bound
cmpb
jmp
jb
or
dec
enter
mov
lds
jg
inc
into
mov
cmp
jbe
or
mov
stos
rclb
cltd
lods
orl
dec
sbb
testb
add
ljmp
and
jp
jns
cwtl
hlt
cs
lret
lods
in
jmp
rorb
sti
mov
xor
push
jae
add
xchg
insl
shlb
inc
mov
stos
jns
push
out
rcll
popa
lods
clc
mov
pop
xor
push
pshufw
or
jno
cmp
inc
leave
mov
xchg
stos
test
dec
xlat
scas
sub
outsb
and
dec
loop
xchg
push
ljmp
jp
outsb
xor
lods
out
pop
mov
inc
pop
outsl
xchg
mov
mov
jo
enter
lret
xchg
fidivl
inc
mov
jbe
addr16
outsl
mov
bound
lret
fadds
js
iret
cmp
mov
jg
sub
mov
adc
pop
ds
movsl
sbb
mov
cwtl
movsl
inc
fisttps
mov
data16
les
and
jmp
pop
lock
mov
push
adc
and
pop
xchg
xor
outsl
aam
addb
xchg
sub
cwtl
shlb
call
sub
daa
xchg
inc
mov
mov
push
loope
fdivs
mov
mov
test
sub
sub
loopne
in
mov
std
test
xlat
mov
push
mov
sub
adc
xchg
jnp
in
mov
jae
sub
icebp
pop
sub
jb
dec
push
into
inc
xor
and
leave
scas
inc
inc
pop
xor
mov
gs
pop
and
mov
in
mov
or
es
mov
mov
mov
add
xor
inc
in
ds
xor
dec
outsl
fs
imul
mov
push
mov
push
orb
loopne
and
call
daa
call
dec
mov
lods
mov
cmpb
cmp
xor
sbb
movsb
dec
stos
cmp
mov
adc
jg
jns
mov
hlt
mov
ret
movsl
inc
push
pusha
in
inc
or
mov
adc
adc
subl
adc
cmp
seta
std
xchg
fbstp
mov
cwtl
stc
xor
clc
leave
arpl
xchg
mov
jno
xchg
aam
sub
sub
xchg
dec
loop
push
lods
pusha
inc
stc
and
addl
mov
lods
fstl
jns
enter
dec
test
shlb
xchg
sub
xchg
or
push
inc
mov
push
fwait
jl
mov
cmp
pop
xchg
dec
cmp
outsl
lret
push
xchg
bound
call
cmp
cwtl
jmp
mov
ret
jp
lahf
cmc
mov
stos
ret
mov
mov
nop
ds
or
mov
jbe
jns
repnz
icebp
sub
repnz
loop
lock
loope
mov
sbb
jmp
test
out
in
rcr
adc
push
mov
or
mov
push
rcrl
add
adcl
sub
bound
cli
shlb
rorb
mov
mov
mov
clc
lahf
xor
xchg
int
sti
xchg
stos
add
punpcklbw
jg
mov
add
stc
fmuls
pop
xchg
hlt
push
aas
pusha
in
fs
pop
insl
dec
mov
aam
lods
subb
test
jmp
sub
test
fisttpll
xor
mov
icebp
daa
nop
xor
in
gs
jbe
inc
pop
inc
loopne
jp
sahf
lea
lcall
pop
mov
es
inc
mov
imul
or
loop
fisubrl
and
loope
and
xchg
insb
dec
jecxz
popf
or
add
mov
xor
pop
and
les
inc
cmp
lods
cmc
aas
and
jb
cmp
out
call
dec
pop
cmpsb
add
or
fcompl
andb
add
adc
dec
testl
mov
jb
cmp
xor
push
xchg
das
jb
ss
cwtl
or
fdivs
ficoms
mov
sub
fs
push
lret
fidivl
pop
lock
scas
fidivs
adc
cwtl
mov
lock
pusha
xchg
mov
sti
ljmp
gs
shll
xorl
cwtl
repz
mov
ljmp
adc
xchg
mov
xchg
orl
popa
js
inc
fs
sarb
cmp
xchg
mov
push
xor
mov
repz
dec
or
cmp
mov
add
ret
add
stc
out
pusha
mov
out
or
lods
nop
cmp
and
fidivl
sub
mov
mov
inc
sbb
or
jo
in
hlt
cmp
popf
mov
inc
or
ds
rcrb
jg
scas
cmp
jnp
cmp
or
mov
iret
xor
out
or
xchg
test
jbe
mov
xchg
out
ret
out
test
loopne
aam
rcrl
lahf
mov
sbb
and
xchg
shrl
std
int
mov
daa
lcall
cmpsb
jle
cld
jmp
arpl
push
les
divl
loope
sahf
mov
out
xchg
das
and
test
jno
repnz
and
pop
popf
mov
xchg
jmp
push
jno
jnp
sub
cs
push
lods
decl
sub
cwtl
xchg
mov
jmp
pop
push
xchg
push
leave
in
push
outsb
jecxz
hlt
sbb
add
stc
lods
gs
or
faddl
inc
xchg
xor
inc
lods
fistps
sbb
pop
mov
dec
lahf
and
loopne
xchg
icebp
lods
push
adc
lahf
ficoms
adc
pop
xor
cwtl
push
push
mov
mov
dec
movb
aad
hlt
lahf
mov
pop
push
adc
leave
push
test
cmc
addl
mov
movsl
sub
mov
sbb
mov
arpl
mov
stos
fidivl
dec
test
cmp
pop
shlb
cmpsl
lods
pop
xor
out
push
popf
ret
adcl
sub
dec
test
fwait
add
into
xchg
call
out
and
aas
push
popa
ret
in
mov
repnz
scas
lock
insb
in
lcall
jge
xor
cmpsb
mov
xchg
inc
inc
stos
jg
jno
cmp
xchg
xchg
push
cli
fmuls
hlt
xor
pop
push
inc
pop
jle
sub
daa
mov
inc
inc
mov
lock
xchg
std
push
aam
decb
mov
ret
jecxz
push
and
sbb
mov
jae
rolb
test
das
sbb
pusha
incl
jmp
jmp
dec
pop
adc
rcrb
divb
imul
nop
cmp
jne
jl
testl
out
lods
inc
xorb
daa
mov
sti
and
jb
xchg
xchg
inc
mov
sub
adc
mov
mull
xor
add
sub
xchg
lea
lock
dec
xor
ds
testl
out
inc
sbb
in
cli
int3
xchg
scas
sub
sbb
mov
pop
rcrb
cmc
pop
xchg
add
cmp
jle
mov
xchg
fistpll
dec
lods
mov
lret
fs
xchg
int3
jle
xchg
push
mov
pop
xlat
xchg
adc
ret
imul
inc
jecxz
loope
xchg
je
sbbb
das
xchg
pusha
mov
out
lret
cmp
jg
mov
stos
out
addr16
cmp
call
imul
out
cmp
fdivs
dec
push
jno
dec
testb
xor
out
imul
xor
and
js
push
pop
sbb
sbb
imul
mov
shl
mov
addr16
xor
jns
pop
xchg
cmpsl
jne
test
and
push
pop
dec
fsubrl
das
sub
je
aad
mov
and
scas
insl
repnz
outsb
cwtl
mov
fldenv
or
sti
mov
and
aaa
test
adc
outsl
mov
stos
daa
pop
insb
lahf
insb
test
push
pop
push
pop
stos
fs
les
xchg
movsb
inc
mov
stos
repz
pop
xor
xchg
jbe
outsl
emms
daa
cltd
test
pop
mov
dec
fdivr
int
mov
mov
imul
lods
and
repz
fdivrp
std
mov
jl
cwtl
add
push
cltd
adcb
bound
jae
pop
jae
pop
cs
movsl
in
xlat
mov
jle
inc
or
ljmp
pop
sbb
out
mov
cmp
fs
xchg
xor
fwait
pop
jns
popf
sub
mov
mov
pop
inc
xor
push
je
sarb
orl
push
orb
mov
adc
test
mov
pop
mov
out
in
dec
lods
xchg
cs
scas
in
and
stos
cmp
xchg
push
jecxz
or
test
mov
testb
arpl
mov
cmp
jl
adc
aad
aad
mov
mov
imul
mov
lret
out
ds
dec
sbb
dec
push
insl
out
mov
into
dec
icebp
dec
inc
or
push
into
cli
stos
pop
xchg
or
je
test
inc
xchg
arpl
jmp
out
sub
sbb
add
sub
notb
dec
repz
dec
mov
clc
cld
inc
stos
mov
push
sbb
inc
push
xchg
movsl
aaa
into
jge
bound
pop
mov
mov
cld
mov
and
mov
hlt
std
or
cli
xor
mov
notl
dec
push
data16
sbb
pop
add
aad
dec
popa
iret
fnstsw
divb
sbbb
inc
pop
sbb
fdivrs
cmc
enter
in
pop
and
fldenv
jbe
shll
xchg
lods
bnd
and
sbb
pop
arpl
lret
enter
sbb
jno
sahf
clc
mov
xor
cmp
in
mov
dec
gs
fsubl
popf
dec
mov
pop
idivl
cmpsl
test
mov
stos
xorb
loopne
shll
add
outsb
sub
pop
cltd
repz
sub
or
fwait
cmc
ds
outsb
orb
arpl
adc
lret
inc
inc
inc
lock
dec
in
and
push
fwait
sarb
inc
inc
jbe
xor
fsubs
sbb
mov
loop
mov
or
xchg
roll
popa
sub
loopne
sub
test
sbb
imul
xor
pop
push
xchg
ja
fcomps
dec
sbb
daa
sbb
dec
jno
xchg
mov
mov
xor
push
xchg
cmc
or
aaa
fnstsw
stos
sub
dec
sbb
outsb
mov
mov
popa
xor
ret
out
inc
lea
aam
inc
pop
lock
out
out
fmuls
xor
xor
add
jg
fmull
adc
stos
xchg
scas
in
sti
gs
or
int3
push
jle
mov
subl
xchg
jnp
inc
or
int
mov
pop
push
popa
cli
and
shrd
scas
xchg
jg
adc
mov
cltd
subl
xchg
movsb
pop
sub
dec
dec
in
jmp
fldcw
mov
push
mov
filds
into
pop
mov
pop
data16
mov
test
pop
lds
jmp
and
lret
sbb
scas
sbb
stc
int
cmp
mov
scas
fimuls
push
lock
pop
xchg
xchg
in
rorl
call
testl
aaa
addr16
lret
ret
mov
xchg
cld
sub
mov
lahf
pop
ret
mov
mov
inc
dec
xor
inc
mov
std
mov
push
rclb
out
imul
adc
push
mov
sub
call
push
lahf
idivb
in
add
mov
int
mov
sahf
xchg
cmp
call
in
stos
xchg
inc
fimuls
mov
pop
lods
push
xchg
or
sub
test
sub
aad
push
mov
xorl
xor
in
shrl
xor
ja
mov
outsl
cmpsl
inc
not
movsl
jl
in
cmp
std
pop
sub
stos
dec
aas
mov
jns
les
or
insb
xchg
stos
jae
xor
cmp
mov
movsb
add
xor
cmp
fmuls
loopne
dec
sarb
lock
push
and
mov
or
mov
cmp
xchg
rcll
int
in
mov
stos
sbb
cmp
fnstenv
outsb
xor
mov
movsb
xlat
push
stos
or
cmp
push
xor
push
filds
mov
leave
sub
cs
negl
lahf
xchg
xchg
xchg
lea
xor
pusha
sub
fwait
les
add
jno
mov
and
fdivrl
pop
mov
aam
sub
add
jno
and
cmp
cmp
nop
add
aad
xchg
imul
and
mov
mov
push
add
rcll
push
jbe
pause
jg
sbb
jno
cmp
xchg
insb
inc
dec
aam
pusha
fdiv
inc
mov
sbb
mov
dec
sub
shr
outsb
cwtl
out
pop
bound
rolb
imul
mov
int
fwait
dec
mov
cmp
les
cmovp
loop
inc
cmc
stos
mov
and
push
xor
xchg
testb
push
fstpl
mov
inc
sbb
add
pop
in
mov
or
ficompl
push
pop
outsb
insl
mov
sub
jne
out
fistpll
cmp
outsl
rolb
jmp
popa
nop
loope
push
insb
xor
testb
lods
pop
shl
and
mov
rol
imul
in
stos
icebp
es
into
mov
mov
mov
adc
ss
push
or
les
mov
mov
inc
and
js
sbb
cltd
sub
pop
js
subl
adc
incb
mov
sub
mov
inc
pop
clc
xchg
pop
mov
in
cmp
or
jo
mov
lea
jmp
scas
jns
jae
xor
push
testl
sbb
add
add
stos
push
push
fildll
movsb
and
mull
mov
or
pop
bnd
insb
add
cmpsl
xchg
ret
fsubl
out
lcall
jp
mov
and
jecxz
or
push
pop
outsb
das
cmp
or
pop
cmp
xchg
dec
push
mov
pop
mov
inc
das
or
dec
sahf
mov
fisubs
mov
pop
add
inc
push
stos
xchg
cmpsb
test
or
pop
pusha
push
adc
cmp
jg
btr
dec
xor
inc
vandps
mov
hlt
sbb
inc
mov
gs
imul
ljmp
sub
adc
push
gs
loop
sbb
stc
ret
fidivrl
in
aaa
in
cmp
loopne
ss
divl
sahf
push
out
xor
test
loope
sbb
jo
cmp
cmp
into
sbb
mov
xchg
inc
fwait
and
cmc
insl
jb
push
in
and
mov
adc
dec
mov
stos
out
sub
or
push
hlt
fldenv
lock
jno
in
iret
jl
ret
xchg
out
cmc
xchg
icebp
mov
pop
cli
je
orl
cwtl
xchg
jns
outsl
mov
popf
bound
notb
and
js
out
cmc
jg
sub
and
xor
sahf
repnz
aas
test
xchg
rol
xlat
push
ds
jbe
adc
bound
mov
fisubl
shll
in
and
jo
mov
out
rol
das
adc
push
popf
mov
add
out
sub
fidivrs
stc
xchg
mov
mov
or
push
nop
dec
and
and
out
or
xchg
ja
jg
adc
aas
xor
aaa
stos
shll
mov
out
out
cmc
jno
std
mov
insb
jl
pop
pop
dec
adcl
sbb
inc
ds
sbbl
dec
div
cwtl
lds
test
cli
xchg
push
jb
loope
in
pop
inc
pop
push
stos
sahf
stc
das
push
in
sbb
jecxz
pusha
add
xchg
mov
jnp
xor
dec
shl
sub
js
xchg
dec
mov
push
repz
mov
dec
xchg
mov
add
jg
lds
xchg
mov
ja
or
mov
push
pop
sbb
cmpsl
imul
je
mov
add
in
hlt
xor
fwait
adc
jno
bound
jo
daa
xchg
push
lcall
add
mov
and
push
xlat
das
pop
xchg
icebp
cmpsb
mov
fwait
mov
popl
pop
xchg
push
jnp
cmc
jo
adc
pop
sub
sub
jnp
mov
out
popf
popf
or
int
pushf
mov
loop
das
jg
fisttps
cmpsb
xor
mov
add
mov
push
xor
mov
sub
mov
fnstcw
xchg
outsl
push
xchg
fs
ljmp
ljmp
cmp
mov
add
dec
pop
int
dec
adc
outsb
dec
mov
and
cmpsl
mov
sarl
adc
cltd
lret
shll
jg
push
and
sub
in
pop
xor
xchg
mov
idivl
das
add
mov
pop
push
cwtl
xor
fnstsw
sub
lock
mov
add
adc
add
sub
in
rcrl
in
add
lds
inc
gs
mov
and
nop
sbb
bound
inc
stos
repz
mov
mov
ret
mov
fmull
loop
addb
aaa
mov
jp
jmp
lret
xchg
stos
ja
jl
push
add
cld
repz
mov
dec
sub
stc
cmp
dec
sub
dec
bound
sar
adc
pop
fwait
roll
inc
jae
cli
mov
std
jne
aam
inc
iret
das
js
out
pop
jmp
lods
xchg
sbb
loopne
dec
fmuls
jae
cmc
xchg
jnp
cli
lea
lret
jns
orl
rorb
cltd
loop
adc
and
shlb
sbb
push
enter
mov
cwtl
cmp
loope
lea
mov
outsl
dec
pop
popl
in
daa
out
xchg
addr16
push
adc
enter
cld
mov
outsb
nop
jp
test
mov
pop
jp
pop
jne
push
addl
adc
or
ja
scas
clc
mov
add
xorl
jge
adc
lret
test
jno
mov
incb
mov
das
pop
sbb
pop
iret
test
popf
pop
add
jg
xchg
pop
xor
pop
xchg
mov
pop
xchg
pop
cli
fidivl
mov
lcall
repz
sbb
cs
in
cmc
lret
jno
mov
xor
pop
sbb
pop
nop
inc
invd
call
rcrb
stos
mov
xchg
sub
incb
pop
rcrl
push
cmp
mov
push
pop
xor
pop
enter
pop
mov
roll
pop
in
out
cwtl
add
adc
popa
xor
test
std
jnp
iret
outsl
in
mov
push
xchg
inc
adc
hlt
pop
add
and
fs
ret
dec
out
aas
inc
fdivs
cmp
loope
dec
repz
add
lcall
adc
cli
and
insb
outsb
repnz
cmp
or
or
mov
icebp
xlat
ficoms
stos
cmp
inc
aam
insb
sahf
mov
and
lods
repnz
int
aad
icebp
cmpb
sub
adc
lods
inc
int
aas
outsb
mov
xchg
aad
lea
or
fwait
pop
or
bound
add
dec
jb
popa
push
js
je
dec
mov
xor
enter
addb
aam
push
push
inc
lds
add
mov
pop
inc
sub
pop
in
fsubl
inc
push
mov
rcrb
cli
sub
cld
jne
xchg
dec
cmc
cmc
cld
adc
dec
out
or
and
push
hlt
dec
mov
dec
jle
sub
lods
mov
inc
daa
aaa
mov
ds
jo
mov
and
std
lds
push
roll
sub
in
add
xchg
fwait
adc
add
in
mov
sub
adc
lret
ja
ret
pop
mov
in
inc
in
cmp
aam
push
or
cs
sub
push
stos
shrl
test
ss
pushf
xor
pop
xorl
leave
mov
sub
pcmpeqb
iret
xchg
xchg
add
pop
jmp
cli
repz
dec
and
sbb
mov
mov
sbb
insb
mov
into
lahf
lcall
mov
push
mov
ss
xchg
pusha
sub
add
xor
jmp
xlat
cwtl
push
out
xchg
out
adc
xor
inc
mov
pop
repz
pop
xchg
scas
fstl
adc
xchg
mov
mov
fisttps
mov
dec
cmpsb
cmpsb
dec
pop
sbb
inc
ret
cmp
ja
frstor
xlat
repnz
and
add
ljmp
cmc
test
xor
lock
cvtdq2ps
ss
xchg
lret
aam
inc
fwait
sub
adc
fs
xchg
cs
daa
cmpsl
icebp
jae
pop
hlt
jge
cltd
inc
push
add
push
or
xchg
xlat
mov
popf
movsb
mov
mov
pop
test
aas
pusha
sbb
and
push
mov
scas
jno
out
shrb
jno
inc
das
lahf
movntq
jne
mov
repz
loop
notb
adc
mov
repz
addr16
ljmp
pop
imul
cmp
mov
sahf
mov
dec
or
push
js
dec
and
les
pop
inc
jno
and
push
adcb
clc
pop
scas
out
js
push
loop
int
xchg
or
pop
xchg
jge
cmp
mov
sbb
cmp
mov
adc
and
add
stos
xchg
xor
aaa
mov
xchg
lcall
jmp
movsl
jp
mov
lahf
das
inc
pop
pop
xchg
imul
rcr
lds
lcall
and
xchg
aad
mov
popf
jp
xchg
int
add
cs
aaa
cltd
iret
or
add
imul
sbb
xor
shl
sub
xchg
dec
rolb
push
sub
xchg
lahf
mov
mov
cs
in
add
adc
test
push
push
nop
call
pushl
mov
out
mov
mov
stos
test
mov
xchg
dec
push
adc
sbbb
je
mov
cli
sub
in
push
mov
and
mov
clc
cltd
pop
sti
lcall
insb
jl
loope
lock
push
cld
sub
dec
test
add
dec
pop
call
addb
jo
xchg
dec
push
test
fstps
repz
stos
mov
xlat
scas
cmp
ret
popa
leave
nop
jae
popf
ret
jo
xor
push
dec
adc
xchg
int3
adc
je
rcrb
fdivp
cmp
jne
pop
orl
add
mov
scas
das
cmp
jp
outsb
xchg
stos
fisubl
mov
pop
sub
push
dec
data16
stc
int3
jmp
cmpsb
call
mov
ret
stos
imul
jl
xchg
dec
or
add
sub
hlt
lods
jle
je
xchg
lahf
sub
mov
lods
xchg
imul
das
loop
sbb
mov
mov
push
test
xchg
call
cmp
xor
and
sti
mov
popf
sbb
mov
hlt
mov
xor
hlt
mov
pop
jbe
mov
andl
fs
iret
outsl
xor
sub
mov
mov
stos
adc
mov
cli
jno
scas
mov
lea
repnz
xor
cmpb
inc
stos
outsb
lahf
mov
pop
mov
push
sti
add
dec
dec
popl
leave
mov
xchg
add
test
insl
xor
push
cmp
xor
outsb
outsb
addr16
test
push
mov
repnz
pusha
in
xor
inc
xor
in
mov
inc
fadds
decb
xchg
jae
cmpsl
daa
int
mov
xchg
add
jmp
lods
push
stos
pushf
gs
xchg
pop
lahf
xchg
lcall
pushf
and
sub
cltd
rcl
or
in
ret
sbb
mov
push
jne
ficoml
rcrl
jb
js
es
cmpb
adc
xchg
jo
push
jmp
xchg
adc
jmp
test
push
nop
cmpb
filds
jg
faddl
repnz
or
add
negb
sbb
mov
xchg
jp
sti
clc
ret
lahf
popa
fwait
addl
xor
pop
repz
push
pop
cmp
sbb
inc
xor
popw
subps
mov
push
ljmp
lea
loopne
mov
mov
test
aas
fs
lret
movsb
jge
mov
cmc
lea
jge
icebp
leave
dec
mov
inc
popf
orl
or
mov
out
push
les
int3
pop
lahf
lea
stc
xchg
shl
ds
fwait
mov
push
dec
popf
hlt
push
xchg
jo,pt
push
into
rcrl
pop
dec
mov
data16
ret
out
mov
arpl
push
stc
fadds
inc
inc
mov
cli
test
bnd
sbb
sbb
mov
dec
or
mov
jnp
ljmp
and
div
push
mov
out
mov
ror
pushf
mov
push
sub
int
mov
nop
mov
arpl
or
xchg
mov
fildll
inc
lds
push
or
imulb
shlb
shrl
inc
cmp
mov
popf
push
mov
inc
out
or
ds
add
jb
jecxz
out
lret
cmp
jns
or
das
gs
es
in
or
out
xchg
adc
orl
or
stos
pop
cli
ljmp
jnp
xchg
inc
pop
mov
aaa
ds
andb
add
aas
push
mov
in
es
push
jo
data16
pop
outsb
orb
fidivl
in
pop
and
negb
xor
jne
data16
push
push
and
iret
push
xchg
inc
iret
fdivrp
mov
mov
cmp
dec
stc
or
xchg
add
lret
es
sbb
jge
pop
lcall
shll
sbb
imul
inc
popa
push
in
mov
icebp
in
push
lea
mov
test
js
lcall
and
xor
dec
mov
lahf
or
cmp
add
inc
pop
mov
xchg
or
inc
jne
lock
mov
lea
es
pop
nop
jno
jg
jl
jnp
aas
mov
xchg
mov
cld
test
push
dec
pop
adc
add
dec
push
or
xor
pushf
sub
sub
ret
mov
or
xor
aad
or
lcall
in
cmp
gs
sbb
dec
pop
cli
stc
in
cmp
jno
lcall
sbb
mov
fwait
push
sub
stc
ja
adc
and
xlat
incb
mov
test
jg
notl
mov
mov
leave
aad
push
cs
mov
cmp
cmpl
repnz
mov
xor
fimuls
dec
jecxz
lock
mov
dec
lret
push
mov
insb
and
push
cmp
nop
push
lahf
pop
testb
mov
fwait
aam
add
jge
inc
int3
jl
mov
xchg
stc
xchg
push
mov
dec
fisubrs
push
pop
icebp
hlt
cmp
imul
pop
and
push
ss
xchg
lret
in
mov
fwait
dec
cmp
pop
hlt
jp
fwait
insl
out
jmp
int
xchg
nop
xchg
fs
shrb
pop
pop
sub
out
movsb
nop
xor
nop
sub
adc
xor
mov
test
xchg
mov
pop
inc
mov
lcall
cld
cmpsb
xchg
in
repz
pop
jbe
mov
push
data16
cmc
fwait
dec
xchg
in
in
jae
mov
aas
gs
rol
pop
movsl
nop
loopne
rolb
pop
notl
fs
popf
hlt
jp
inc
dec
xchg
cmp
cmp
jge,pt
mov
inc
les
mov
sahf
sbb
mov
repnz
in
cs
sarl
pop
mov
and
ss
xor
dec
xor
push
imul
cmc
cld
repnz
pop
icebp
imul
pop
mov
pushf
ljmp
outsb
or
jl
out
pushf
push
jl
fs
int3
adc
pushf
push
pop
rolb
roll
ficompl
adc
and
in
or
cmp
in
lret
loope
xchg
jg
cmp
ljmp
into
mov
mov
fists
push
mov
sarb
cmpsb
push
xor
ljmp
xor
or
mov
jnp
mov
test
aas
jae
int3
fstps
sub
and
mov
popa
jl
ret
xchg
inc
aam
outsb
add
cmpsl
and
arpl
lds
and
mov
jl
es
call
dec
xchg
dec
xor
lahf
fnstenv
inc
xchg
push
xorb
cs
mov
out
add
jmp
addl
lock
sbb
sahf
dec
ja
xchg
cli
aam
popf
decl
xchg
lea
jg
mov
aas
adc
out
fsubrs
and
in
cmp
inc
xor
out
lret
add
jae
rorl
mov
or
hlt
xchg
or
pop
fsubs
sarb
roll
lea
setbe
js
lcall
mov
mov
je
mov
adc
test
pusha
mov
jg
jecxz
sub
cltd
sub
mov
mov
dec
adc
jl
jmp
add
leave
mov
inc
push
inc
dec
xchg
pushf
jno
ja
mov
bound
hlt
out
lds
cmp
arpl
repnz
jmp
cmpsb
xor
fwait
push
loop
cmp
cmp
xor
mov
adc
imul
mov
daa
imul
xor
dec
or
mov
xor
jns
mov
mov
cmpb
loop
mov
or
fs
bound
push
mov
aaa
or
cmc
jo
add
mov
or
lret
dec
test
jge
das
in
sahf
ret
inc
mov
fnstcw
adc
jp
daa
mov
inc
sbb
dec
cmp
mov
pop
mov
cli
fwait
ret
or
pop
test
or
sub
cmc
xchg
lods
mov
cli
xor
out
fcoms
popf
mov
hlt
xor
in
leave
mov
ret
out
jp
roll
in
adc
in
popf
mov
outsl
roll
pop
and
lea
push
xchg
push
or
mov
or
xchg
adc
xchg
mov
dec
mov
and
inc
mov
bound
pop
jae
inc
push
sbb
lahf
ret
jnp
xchg
push
xchg
cmpl
aas
repnz
enter
fdivrl
movsl
lahf
aam
roll
into
lock
rcrb
popf
outsl
lcall
inc
xor
xor
sti
mov
dec
addr16
aas
dec
cmpb
add
movsb
adc
push
inc
add
addps
inc
xchg
aam
and
and
cmc
cmpl
inc
xchg
adc
sub
or
jle
mov
and
push
sub
idivb
aas
repz
pop
lcall
or
and
roll
addl
repnz
pop
jne
or
cmp
sbb
push
mov
mov
clc
aam
mov
or
xlat
in
mov
pop
arpl
inc
fwait
xor
mov
inc
xlat
in
andl
jb
decl
notb
repz
mov
test
mov
xor
cli
xor
shlb
lret
shll
imul
cmp
pop
cwtl
icebp
add
jge
lods
addr16
jg
lcall
jns
and
fs
sahf
mov
nop
sbb
inc
int
outsl
mov
ss
aad
std
pop
loopne
jb
inc
hlt
mov
aas
icebp
inc
cmp
test
stos
or
xchg
push
adc
stos
mov
or
push
xchg
rcrl
mov
mov
mov
sbb
mov
rcrl
pop
add
lea
adc
mov
pusha
pop
or
add
in
imul
sub
and
add
addb
sti
lahf
jg
mov
aas
lret
xchg
push
shlb
cmp
inc
sbb
dec
jno
inc
and
pop
stos
adc
pushf
pop
out
insl
jmp
and
sub
adc
jg
pop
int
push
xchg
mov
das
xor
sbb
cmp
ljmp
inc
leave
jno
popa
aas
mov
jg
xchg
scas
ds
out
inc
xchg
mov
xor
rcr
dec
xchg
sarl
movsb
and
lea
pop
stos
or
scas
pop
outsb
ffreep
push
cmpb
push
scas
and
daa
lret
dec
daa
xor
dec
cwtl
in
test
ret
test
ja
xchg
add
and
mov
mov
inc
out
push
pop
inc
xor
daa
incb
repnz
xor
xchg
cmp
ja
mov
push
dec
enter
mov
xor
ret
push
stos
add
jg
sahf
test
negl
mov
sbbb
or
xchg
adc
inc
fs
jle
cmp
repnz
mov
sbb
pushf
stos
inc
xchg
cmp
scas
int3
cs
and
sahf
out
stos
arpl
imul
or
jecxz
pop
outsb
mov
ja
jmp
in
push
addr16
and
rclb
inc
out
sub
lahf
sub
xchg
xchg
sub
xchg
mov
mov
repz
cmp
dec
cmovnp
add
lahf
shrb
cmp
pop
test
adc
icebp
stc
mov
jo
fwait
jecxz
and
mov
cmpsl
mov
call
and
push
test
orl
out
add
mov
out
out
insb
in
mov
pop
jns
xor
add
xchg
int
dec
inc
dec
jb
sub
loopne
flds
mov
dec
mov
call
or
std
sub
orl
xchg
std
lods
mov
jb
sub
fistpll
or
mov
push
inc
xchg
sbb
dec
push
rclb
test
adc
push
xchg
cwtl
fnsave
push
je
mov
dec
mov
xchg
out
xor
out
loop
mov
mov
xor
js
mov
popf
push
mov
das
repz
pop
hlt
xchg
orl
out
jbe
stc
xor
ret
imul
divl
pop
fdivs
icebp
xor
lret
gs
loopne
mov
int3
aaa
mov
stc
fsubrs
adc
xor
popf
inc
jbe
mov
push
sahf
clc
dec
xchg
test
mov
or
aaa
fimuls
xor
mov
mov
push
mov
mov
mov
stos
cli
cmp
loope
cltd
push
fs
pop
cmpsb
outsb
mov
imul
fildll
add
and
divb
outsb
sub
mov
or
mov
das
pop
add
stos
lcall
mov
das
repz
cmp
clc
int
adc
xor
mov
in
pop
arpl
fs
test
pop
jnp
xchg
pop
sti
xchg
sbb
sbb
xchg
xor
add
shlb
insb
mov
mov
int3
push
lahf
add
add
push
lds
lcall
add
xchg
mov
dec
inc
add
orb
flds
dec
shl
call
cli
mov
inc
imul
hlt
cltd
sub
push
loop
outsl
call
pop
mov
xchg
jl
push
xchg
mov
fwait
lret
lret
sbb
inc
inc
fistl
shrl
repz
insb
jno
push
rolb
cltd
xor
cmp
xchg
hlt
roll
hlt
inc
repnz
outsl
imul
sub
out
pop
xor
push
mov
test
fidivs
enter
lock
out
adcb
loopne
stos
ds
or
xor
sub
sub
inc
xchg
mov
pushf
xchg
sub
cwtl
rolb
repnz
cmp
aas
test
iret
xor
push
xchg
negl
cmp
pop
dec
dec
sbb
popa
and
les
rcll
inc
mov
sub
stc
push
push
adc
shr
les
repnz
jl
push
mov
pop
or
push
cmp
xchg
cld
fs
aad
mov
adc
mov
ds
lret
lods
addb
cmp
aad
push
adc
jb
push
repnz
dec
out
stos
push
test
push
rcll
es
rolb
orl
das
jp
decl
rorb
jnp
xor
das
jecxz
cmp
lock
mov
mov
cmp
sub
stos
mov
adc
sub
out
cmp
xorb
data16
push
test
mov
push
dec
test
ljmp
fldl
add
les
in
jno
aam
pushf
or
jae,pn
sahf
jecxz
xchg
xlat
mov
cli
hlt
popa
push
xchg
gs
bound
xchg
jle
inc
pop
mov
lods
ds
decl
incl
jg
cli
lods
movsl
arpl
xorb
cmp
cmc
subb
cmp
enter
add
ljmp
mov
xchg
push
add
sub
jno
fcmovu
cmp
fsubrl
mov
into
int
adc
ret
pop
dec
push
pop
xchg
cmpsb
gs
dec
xchg
xchg
lds
negb
xchg
lods
adc
frstor
dec
xchg
pop
sbb
mov
mov
xor
dec
nop
roll
test
mov
inc
pop
lea
inc
js
or
mov
clc
je
adc
dec
insb
jmp
insl
bound
lret
or
mov
mov
push
les
pop
imul
mov
xchg
test
sub
inc
outsl
xchg
cltd
xchg
lcall
std
push
pop
and
xlat
icebp
mov
sbb
push
insb
mov
out
loop
cmc
pop
rcll
scas
shrd
fs
cmpsl
fnstcw
aad
dec
adc
fisubrl
add
cli
xchg
aas
dec
lahf
cld
shr
sbb
xchg
repnz
movsb
lret
jle
aam
addb
jge
es
xchg
mov
lahf
pop
jbe
loopne
xor
dec
and
mov
xchg
xor
mov
sbb
cli
jbe
and
aad
sub
ret
mov
adc
pop
repnz
pop
jge
lds
ja
add
loop
xor
mov
push
nop
xor
in
push
push
adc
int
mov
into
or
call
test
dec
sarb
and
cli
add
xor
push
adc
xlat
and
fistps
ljmp
add
adc
add
push
xor
test
insl
fcomip
outsb
xlat
push
das
mov
mov
adc
lds
ja
scas
shll
push
out
pop
js
out
dec
push
pop
xchg
imull
test
cmp
push
jg
xor
into
lock
iret
sbb
aaa
stos
push
jmp
xor
xor
xor
xlat
fcoms
xchg
ljmp
adcl
xor
and
push
pop
sub
push
pop
adc
insl
mov
in
shrl
pop
repnz
xchg
repnz
aaa
divb
jmp
cwtl
sbb
or
pop
addl
pop
fistpl
push
scas
icebp
jae
imul
xlat
cmp
sbb
popf
inc
pop
in
push
inc
xchg
cld
test
mov
push
sahf
sbb
popf
and
pop
and
add
and
push
mov
dec
scas
push
ret
inc
cmp
stc
lret
push
lret
popf
sub
fsubp
das
dec
std
mov
inc
cmp
mov
das
in
or
loope
mov
xchg
faddl
xor
jns
imul
mov
rclb
pop
jmp
mov
mov
orl
pusha
sub
mov
stc
or
das
arpl
int3
mov
mov
test
jbe
xchg
mov
out
sbb
cwtl
mov
inc
pop
dec
ror
sti
sbbl
and
cld
or
out
pop
inc
xorl
push
inc
scas
popa
maskmovq
negl
push
fbstp
out
cltd
xchg
and
vpacksswb
rorb
cmp
mov
fists
int
scas
in
int3
dec
lcall
or
xchg
jnp
pop
mov
lahf
repnz
mov
mov
lcall
rorl
cli
xchg
fidivrl
popf
in
push
pop
dec
jo
and
add
mov
jne
xchg
cmp
ss
mov
jbe
cmp
mov
orb
fdivrs
test
adc
sti
add
jmp
bound
bnd
xor
and
lcall
jecxz
js
bswap
dec
jnp
icebp
data16
jmp
mov
jl
cld
add
adc
stos
and
hlt
or
cmp
adc
movl
add
pop
mov
xchg
mov
loop
clc
sub
sub
sub
inc
jge
cs
jp
lahf
jmp
adc
or
jp
ds
dec
mov
fwait
mov
faddl
repnz
sti
clc
inc
xor
and
mov
or
pop
adc
aaa
mov
xchg
mov
movsl
xchg
subl
push
jno
push
jne
js
xchg
dec
xchg
xchg
adc
sbb
adc
cld
inc
mov
cmc
cmpsl
fdivs
pop
sbb
dec
xchg
push
aaa
cld
fmuls
xor
xchg
notl
xchg
xchg
cmp
in
mov
jg
pusha
pop
or
lret
mov
in
and
push
lcall
xchg
ret
pop
adc
cmpl
mov
cli
lock
loop
xchg
push
mov
hlt
push
pop
out
loop
clc
insb
mov
push
xchg
pop
mov
cld
xchg
mov
xchg
inc
lods
sub
test
xchg
push
dec
inc
call
mov
mov
aam
in
xchg
cltd
or
mov
adc
fnstcw
mov
cmp
jns
fnstsw
mov
cmp
jnp
shrl
cmpl
sbb
mov
adc
gs
outsb
mov
stos
xor
ffree
xchg
nop
mov
or
or
mov
test
js
push
add
add
lock
lret
xchg
aaa
mov
jae
mov
mov
addr16
sbbl
aad
aaa
push
fs
mov
nop
push
mov
sbb
cwtl
jno
jmp
jp
scas
fwait
xchg
lahf
iret
ja
cmp
adc
jb
fs
out
xchg
sbb
fistpl
scas
sbb
testl
mov
scas
mov
mov
loope,pt
stos
push
arpl
inc
and
loop
cmp
repnz
ficompl
jne
push
subl
dec
fsubl
stos
clc
mov
fidivrs
ret
cmp
xchg
stos
stos
pop
pop
fdiv
adc
jb
imul
xchg
sahf
stos
sbb
sti
nop
pop
jne
lret
data16
add
push
jo
div
gs
or
push
inc
aas
mov
and
xor
dec
inc
sub
or
mov
fidivrl
mov
fmul
lret
push
adc
pusha
xchg
sahf
jno
dec
or
cmp
push
imul
lods
hlt
mov
fiaddl
xlat
lods
sbb
fs
push
loop
push
leave
ljmp
xchg
adc
cmc
scas
xchg
adc
dec
adc
and
mov
dec
es
dec
xor
insl
jp
cld
sub
fwait
mov
cmc
scas
sbb
jnp
nop
push
push
push
mov
nop
jle
jb
xchg
add
sti
pop
cmp
shlb
fwait
scas
push
shld
push
pop
shrl
push
repz
iret
push
push
aam
pushf
cwtl
lret
sub
mov
sbbl
mov
mov
adc
or
cmpsb
and
outsb
fcmovb
iret
mov
gs
out
shlb
outsb
stos
jb
int3
and
mov
les
pop
bound
insb
ljmp
sbb
cld
mov
cmp
sub
je
adc
test
add
sub
adcl
push
push
dec
pop
mov
cmpsb
xor
pushl
sub
dec
pop
mov
das
add
jp
loopne
push
popf
shr
ret
mov
ret
into
push
aam
loopne
int
orl
mov
xchg
xchg
mov
add
mov
push
outsb
mov
dec
mov
rcll
stos
iret
popa
pop
mov
cltd
dec
lcall
lods
mov
and
add
cmpsl
jb
movsb
push
scas
scas
add
push
insl
inc
mov
cld
lock
lahf
std
jge
into
test
fdivs
test
repnz
pop
sbb
fs
fstl
in
es
mov
mov
popa
inc
or
jecxz
sahf
ja
cmp
mov
xor
mov
xchg
push
rcrb
scas
and
ret
js
shrl
push
mov
or
xchg
mov
xchg
bound
pop
add
and
popf
inc
and
aam
std
lea
push
inc
scas
xchg
push
fisttps
cmp
mov
das
add
cwtl
xor
push
xchg
xor
lock
and
adc
adc
mov
imul
cmp
cmp
cwtl
xor
iret
push
sbbb
lahf
inc
cmpb
jb
hlt
cwtl
loope
push
sbb
sub
jge
cmpsb
sub
fwait
pop
or
imull
or
cmp
aas
lahf
lret
mov
in
int3
mov
and
xchg
mov
dec
pop
movsb
dec
inc
xor
ffree
scas
push
roll
insl
loopne
subl
test
fidivrs
pop
lock
in
mov
imul
and
xchg
cli
pop
xor
mov
rcrb
hlt
fcomps
and
jl
cmpsl
test
add
arpl
int
pop
icebp
repnz
lcall
xor
and
dec
ss
pop
mov
mov
sub
xor
xchg
push
lea
sahf
rorb
inc
sbb
mov
pop
sub
dec
inc
fildll
leave
cs
js
mov
repnz
cli
jle
xor
adcl
jge
mov
call
in
lret
in
test
jb
stos
jb
jns
pop
and
mov
int3
mov
clc
out
jno
xchg
cltd
mov
jno
ds
hlt
into
adc
int3
add
fdivrl
in
xchg
xor
nop
lahf
bound
mov
fmull
dec
add
mov
xchg
sahf
sub
inc
in
insb
cld
jnp
xchg
jle
fimull
std
cmp
cmp
test
or
and
xlat
inc
jp
std
insl
pop
test
std
cmpsl
lahf
divl
out
inc
sahf
sbb
pop
jo
pop
lcall
lods
push
aam
shl
call
repnz
nop
stos
test
jp
daa
push
cs
and
leave
add
decb
fs
mov
and
add
dec
push
xchg
push
inc
jle
sbb
jge
fwait
adc
in
mov
add
fcoml
dec
subb
cmp
std
lods
insb
xchg
mov
xchg
jle
mov
add
inc
or
jne
cmpsl
fistpl
pop
icebp
scas
sahf
sub
fists
sti
and
push
mov
xor
adc
int3
pusha
cmp
mov
cmp
outsb
jne
xor
mov
mov
add
adc
push
push
jle
pop
adc
mov
testl
dec
in
jmp
jg
popf
into
call
outsb
js
jne
cmp
subl
push
inc
and
and
fildl
mov
andb
shlb
xchg
outsb
pop
ficompl
inc
fbld
movsl
movb
or
mov
inc
cmp
inc
pop
and
mov
scas
dec
inc
shr
push
in
out
cmc
dec
into
sub
fsubl
out
sarl
jl
sbb
push
sahf
shll
test
mov
lret
daa
mov
jnp
xchg
ja
js
enter
add
enter
out
repz
push
pusha
roll
push
xorl
inc
mov
lock
inc
sbb
stos
loope
xor
stc
dec
in
test
adc
add
mov
or
out
adc
sub
mov
pop
movsl
xchg
lea
mov
hlt
add
inc
int3
add
icebp
in
pop
xor
sub
adc
mov
jbe
lods
mov
ds
mov
or
xchg
pusha
push
test
test
stos
scas
lcall
mov
sbb
test
dec
in
movsb
xchg
repnz
mov
loopne
addl
gs
jle
out
and
pop
pop
mov
xor
and
jge
sbb
pop
in
test
insl
hlt
add
pop
xor
xchg
push
add
outsl
andb
outsb
mov
dec
daa
mov
mov
inc
xchg
dec
bound
jl
jp
push
popa
bound
enter
jmp
adc
cmp
fisttps
pushf
push
mov
add
sub
and
cmp
shr
hlt
in
inc
rorl
pop
lret
mov
sbb
psubsb
cs
rcrl
ja
divl
addl
lock
mov
pop
mov
cmp
fisubs
cmp
mov
mov
sub
test
arpl
push
inc
test
les
xlat
inc
sbb
jb
pusha
dec
test
movsb
testl
insb
sbb
test
addl
lods
add
loopne
jp
fwait
xchg
xor
leave
xchg
jp
dec
outsb
jle
sub
js
cmpsl
and
popa
mov
dec
test
in
mov
mov
aas
mov
xor
out
out
sbb
jnp
add
aad
jbe
ret
ret
in
sbb
mov
test
scas
sar
xor
pop
push
popf
cwtl
add
sahf
das
int3
loope
loop
cmp
ljmp
decb
test
push
orl
and
es
nop
or
fsts
jl
lahf
aam
insb
inc
gs
xor
cmpsl
test
imul
and
xchg
arpl
bound
mov
repz
call
out
push
movsb
pop
jmp
lret
out
sbb
into
maskmovq
jmp
pop
fucom
iret
mov
js
sbb
sub
dec
std
inc
stos
imul
pop
fcmovnb
arpl
add
jge
mov
pop
insb
jnp
sub
inc
in
pop
repnz
test
fwait
scas
pop
adc
sbb
cmp
cmp
fwait
pop
outsb
pop
pop
mov
sti
xchg
jl
shl
add
imulb
pop
adc
into
xor
insl
cmc
ljmp
adc
mov
div
push
mov
jns
orl
add
fbld
hlt
lock
xchg
inc
jl
sub
adc
push
addl
add
sarl
pop
sub
test
test
or
xchg
or
lcall
popf
xchg
lds
popa
stos
jge
nop
jg
adc
sbb
ja
clc
subl
and
mov
in
notl
adcb
in
fcmovnb
and
push
lock
push
mov
or
sar
or
sbb
pop
mov
dec
sbb
and
push
into
cmc
lea
hlt
out
mov
stos
repz
mov
out
fbld
pop
les
sahf
inc
pop
or
mov
xor
mov
adcl
cmp
not
std
cmc
add
dec
push
cmpsb
sbb
mov
xchg
mov
inc
jmp
mov
xorl
inc
cmp
cld
and
pop
js
xchg
rorb
sub
cli
jno
push
jmp
jl
mov
mov
idivl
jbe
push
push
xor
int3
xchg
mov
adc
xor
aaa
xchg
mov
and
mov
test
or
adc
hlt
cmp
insl
movsb
lds
mov
push
mov
adc
mov
ret
jbe
shlb
mov
inc
mov
in
stos
fwait
idivl
xchg
xchg
sub
jmp
jo
movsl
aas
mov
fwait
push
lea
mov
mov
bnd
faddl
push
cld
ret
add
repz
bnd
mov
jno
jno,pn
dec
pop
jnp
and
nop
cmc
adc
jbe
jne
jecxz
mov
mov
sbb
xchg
jg
or
lahf
add
mov
les
mul
xchg
jae
jge
test
data16
mov
lahf
inc
loopne
rorl
or
sahf
add
jmp
or
xor
and
pop
ds
mov
out
mov
push
adc
sbb
jbe
negl
inc
daa
ljmp
mov
clc
mov
icebp
mov
push
cld
shll
outsl
add
test
outsb
leave
cwtl
fisubl
arpl
test
std
fiadds
sbb
add
hlt
xor
dec
addr16
ror
fucomip
rcr
sbb
cmpsl
cltd
inc
addr16
cmp
pop
mov
in
xor
push
sub
pop
das
xor
jl
xor
or
jecxz
xchg
popa
jge
fstl
into
ds
or
mov
loopne
lahf
enter
sbb
cltd
aad
cmp
das
insb
movsb
pop
fwait
adc
mov
xchg
out
mov
into
push
scas
and
lahf
out
andl
aam
pop
aas
or
inc
xchg
add
push
xchg
inc
cmpb
repnz
por
mov
jb
cli
push
mov
pop
xchg
cwtl
sbb
lahf
xchg
loopne
cwtl
pushf
repnz
jp
lret
out
fnstcw
inc
xchg
or
and
lods
jle
pop
cwtl
push
popf
in
shl
ljmp
mov
adc
sub
cli
or
xchg
mov
rolb
cmpb
or
lahf
into
push
fwait
cmp
cli
bound
inc
jno
jmp
xor
arpl
cmp
pop
push
push
test
or
outsl
xchg
sub
ljmp
sub
mov
not
icebp
dec
xor
cmp
push
xchg
in
add
dec
stos
or
xchg
shl
bound
mov
dec
xchg
lcall
ds
mov
in
and
xlat
inc
data16
test
nop
andb
sbb
xchg
jle
ja
fiadds
cld
mov
push
xchg
cmp
mov
inc
das
xchg
fwait
popa
xlat
lahf
inc
test
ja
dec
sbb
iret
cmp
in
iret
lret
repnz
xor
jb
adc
shlb
xchg
iret
fisubrs
mov
push
push
push
test
add
lods
popa
mov
les
pop
aad
orb
ljmp
cmpb
mov
aad
cwtl
dec
push
nop
jl
xchg
nop
mov
push
addb
jo
int
nop
ss
push
mov
shll
pop
out
je
jne
add
int
sub
mov
push
adc
ds
jne
outsl
pushf
xchg
mov
mov
fwait
mov
rcrl
cmp
mov
mov
cltd
mov
fisubrs
mov
scas
dec
xrelease
dec
push
mov
test
dec
sub
xor
sysexit
stos
or
or
nop
popf
pushf
dec
mov
adc
out
adc
repnz
loopne
ljmp
push
in
mov
orb
sub
lds
movsb
pop
cmc
lahf
dec
mov
icebp
jmp
jge
out
sbb
xchg
push
xchg
cmp
pop
add
popa
push
fcomi
xor
sbb
loopne
cmp
push
cmpsb
sahf
sbb
hlt
lret
dec
jg
daa
loopne
jne
repz
das
add
sub
lret
lcall
jge
sar
inc
clc
imul
inc
outsl
nop
imul
test
mov
xor
push
imul
cli
mov
xchg
lds
sbb
inc
jl
push
rcrl
jp
push
xor
pop
jnp
push
cmp
jb
cmp
cltd
pop
push
testl
push
cmp
add
shrb
movsb
cmpsl
movsl
fwait
cmp
jo
sahf
mov
mov
mov
ret
lret
loope
in
popa
xchg
data16
lahf
std
std
cwtl
mov
aaa
pop
sahf
dec
mov
jl
or
mov
xchg
ror
loopne
mov
mov
aas
loopne
sbb
sti
xchg
xchg
pop
add
xchg
fwait
sbb
icebp
imul
cmp
mov
cltd
and
cmp
xor
jmp
cli
cmp
jg
xor
add
or
repnz
xlat
cli
popf
push
sbb
inc
jno
loop
jno
loop
xchg
enter
fsubrs
sahf
xchg
in
je
dec
xchg
nop
pop
inc
xchg
arpl
lds
xchg
bound
push
repz
shl
pop
iret
pop
xchg
cltd
pop
pushf
push
mov
mov
jb
out
push
mov
mov
cmp
cmp
dec
aaa
dec
stos
test
lahf
mov
jae
jb
jp
repnz
lcall
jno
ljmp
dec
or
dec
jno
inc
fisubs
xor
or
bound
dec
sub
xchg
clc
xchg
mov
or
xchg
fwait
shl
inc
shlb
pop
xor
shlb
pop
dec
icebp
leave
pop
aad
pushf
jo
in
or
nop
out
test
js
ja
jbe
arpl
inc
nop
xlat
lret
outsl
xor
sub
cmpb
aas
ret
xor
and
push
and
outsb
push
daa
adc
iret
in
push
pop
jp
and
push
xchg
cmp
cs
into
ljmp
test
idiv
xchg
sbb
mov
jmp
mov
mov
test
xor
cli
jnp
movsb
idivl
mul
push
stos
lahf
mov
test
xor
pop
pop
int
xor
packssdw
mov
lcall
ficompl
pop
std
leave
sbbl
out
push
hlt
inc
imul
mov
inc
in
das
movsb
mov
xchg
js
ja
xor
lods
adc
lock
pushf
xor
jo
jbe
push
push
mov
sub
shl
cmp
test
dec
roll
sti
sbb
mov
pusha
rcrl
icebp
jae
mov
mov
addb
push
or
xor
push
test
sbbb
mov
xor
cmp
or
mov
fldl
fwait
push
outsl
cld
lret
jbe
sub
xlat
loop
nop
in
out
movsb
mov
cmpsb
push
cmp
pop
mov
pop
outsl
fs
outsl
adc
ds
loopne
mov
nop
iret
scas
or
pop
adc
xor
cld
stos
adcl
in
pop
xchg
add
into
ss
push
cld
stos
mov
mov
test
lds
ds
rclb
out
and
sar
imul
push
push
rclb
sti
cmpsb
stos
js
push
das
adc
jl
arpl
and
and
pop
mov
inc
frstor
loop
mov
fisubrl
cmc
or
pushl
test
push
rorb
leave
cmp
push
std
loopne
mov
pop
test
ss
jo
mov
ss
lock
inc
mov
sub
ficoml
xchg
cwtl
leave
divb
fdivrl
pushf
sub
and
into
xchg
mov
xlat
xchg
xchg
test
leave
jp
aas
outsl
inc
add
mov
xchg
xlat
addr16
sar
rclb
pop
rolb
xor
xchg
das
pop
sub
sbb
ret
xor
jno
and
xchg
sbb
rcll
mov
insb
aaa
xor
jp
sbb
sbb
push
cwtl
imul
mov
push
mov
cmp
mov
sub
pusha
xchg
add
ljmp
test
add
xor
orl
mov
inc
or
and
or
xchg
jp
push
popa
dec
jbe
pop
pop
es
push
lahf
jns
and
nop
pop
mov
push
push
mov
clc
push
call
test
xchg
nop
pop
outsb
xchg
mov
ret
adc
jmp
mov
in
jl
jg
stc
add
mov
sub
jo
mov
arpl
sub
sub
xchg
xchg
nop
mov
sub
sar
jg
mov
sti
nop
pop
paddd
in
and
ds
push
imul
mov
lret
jl
test
xchg
call
sbbl
nop
or
repz
mov
mov
sub
pop
gs
mov
pop
stos
cmp
inc
and
notb
push
mov
les
in
xor
js
orl
test
sbb
mov
jnp
mov
mov
bnd
adc
add
mov
push
xchg
push
inc
xchg
imul
mov
out
push
mov
enter
shll
lret
jl
rcrb
cli
sarb
xor
sub
adc
cmp
sub
add
nop
in
mov
pop
sbb
stos
adc
mov
cmpb
inc
clc
lret
int3
inc
sahf
xchg
adc
mov
dec
lcall
loop
int3
push
mov
jno
xchg
jmp
inc
xchg
loopne
or
push
push
in
lods
fcomp
popf
mov
xor
stos
imul
xor
pop
add
cmpb
xchg
outsb
add
pushf
xchg
pop
mov
cltd
xor
push
dec
push
cs
mov
cli
xor
dec
add
dec
mov
inc
mov
adc
cld
adc
push
add
cmpsl
popa
mov
and
imul
sbb
sub
inc
bound
fsubp
nop
dec
sarl
push
out
push
mov
jns
fcmove
jno
mov
jmp
aam
mov
push
inc
and
adc
loop
dec
out
jbe
pop
cmp
cmp
lret
icebp
scas
jmp
pop
adc
xchg
js
mov
fcmovnu
mov
shl
xor
ljmp
iret
lahf
incl
aaa
fs
fldenv
ficompl
idivl
mov
imul
cs
inc
and
pop
pop
dec
xchg
inc
in
xchg
inc
mov
cmp
inc
mov
out
cmp
or
fidivl
jle
and
xor
test
jno
push
fcoms
jmp
xchg
repz
push
pop
and
sub
dec
mov
lods
js
mov
les
adc
cli
ret
roll
mov
mov
addb
pop
rorb
sti
mov
ja
les
mov
out
out
push
mov
scas
mov
ljmp
cld
outsl
mov
sbb
jb
add
sbb
loop
loope
mov
cwtl
pushf
dec
nop
jno
pop
pop
xorl
adc
and
loopne,pn
ja
mov
sbb
mov
add
push
sbb
xor
jp
xor
add
xchg
lods
cmp
and
and
xor
mov
push
jp
in
xchg
loop
lds
testb
imul
mov
xchg
pushf
fwait
xchg
and
jge
jae
leave
out
in
lods
push
xor
mov
repz
push
cld
mov
xchg
pop
xor
ret
sahf
xor
clc
inc
pop
jle
mov
mov
cwtl
jg
cmp
aaa
lods
mov
jns
lock
movsb
and
repnz
outsl
xor
inc
loopne
les
cmp
push
jb
sub
dec
stc
fsubs
mov
mov
cmpl
fs
or
out
adc
push
fwait
cmp
jne
fcomps
xchg
pop
fidivs
xor
pop
sahf
dec
mov
add
and
sbb
fs
ss
out
jae
inc
aaa
sub
push
mov
mov
repnz
nop
push
fidivrl
lea
loopne
fstpt
dec
scas
mov
mov
notb
xorl
fdivrl
cmp
mov
loope
jno
test
jge
cs
sub
xor
enter
es
sahf
lret
iret
repnz
dec
and
pop
enter
adc
pushf
jle
lea
movsl
out
adc
test
and
int3
cmp
lods
pop
in
pop
loope
xor
mov
dec
sbb
or
xchg
js
mov
add
cmp
sub
inc
negl
leave
push
into
jae
xchg
lods
pop
inc
in
jge
pushf
push
je
testb
in
and
inc
sub
test
xchg
inc
sub
stc
cli
mov
popf
ret
mov
lahf
pop
jge
faddp
cmp
or
mov
repz
jns
xchg
syscall
push
in
push
pop
lea
rolb
test
adc
or
inc
imul
sti
rorl
cltd
cmp
and
adc
xor
out
jl
popa
dec
xor
or
mov
cmc
rclb
cmpl
fwait
and
dec
out
and
mov
add
icebp
enter
xor
sbb
fdivs
and
sbb
mov
pop
sbb
pop
or
sub
lcall
ret
push
push
movsl
mov
dec
mov
and
decb
inc
sub
in
xor
push
push
push
mov
fidivs
sti
out
fwait
jae
stc
inc
and
xchg
out
xchg
pushf
cltd
mov
adc
jbe
xor
xchg
out
xchg
cwtl
jnp,pn
sbb
loop
jmp
inc
repz
je
int
in
stos
cmpsl
test
or
popa
jle
lcall
ficompl
pop
xchg
fsubl
ret
movsb
or
movsl
cmpsl
addl
cmp
jge
rolb
push
je
data16
jns
lods
inc
inc
mov
jno
sub
jno
mov
insb
inc
iret
aam
int
lret
fsubrs
add
movq
pop
in
cmp
into
jge
loopne
fwait
ss
subb
cwtl
cli
rorl
sub
lcall
and
inc
and
sub
scas
fsubr
ja
xchg
loope
cmp
mov
xor
fxtract
lock
cmp
js
sbb
fstpl
push
ficoms
xor
hlt
xor
test
dec
out
add
nop
sbb
test
pop
jbe
sti
insb
in
pop
int
and
cmpsb
inc
xchg
rcrl
insb
lds
mov
ret
out
adc
cs
sub
lds
pop
stos
in
mov
push
mov
lock
pop
dec
pop
push
test
xchg
add
xchg
ret
inc
das
call
add
aaa
out
jl
dec
jb
mov
sub
mov
pop
divb
sbb
adc
sbbb
and
adc
call
inc
fs
xlat
repz
mov
loope
xor
mov
dec
nop
je
popa
mov
pop
pop
shl
xchg
pop
fildll
push
daa
in
repnz
lds
xchg
add
lret
nop
or
jle
adc
nop
push
rcrl
bound
jo
nop
fsts
sub
ss
adc
add
in
fmuls
lods
push
xor
lds
or
mov
inc
imul
push
xor
xchg
in
pop
fs
gs
xchg
inc
mov
idivl
das
pop
dec
adc
inc
cwtl
dec
rolb
push
out
popf
mov
xor
scas
mov
sub
mov
mov
outsl
push
mov
sub
leave
leave
and
mov
jnp
ss
xor
dec
stos
loop
xchg
imul
add
xor
imul
jecxz
jle
movsb
sub
cmp
xor
and
adc
mov
jbe
shrb
es
imul
test
cli
outsb
movsl
ljmp
roll
sub
dec
iret
mov
xor
mov
out
js,pt
cmp
xor
adcl
ljmp
push
call
xchg
mov
outsb
aam
pop
mov
pop
jo
jbe
mov
jns
insb
nop
popf
xchg
pop
ljmp
mov
fsubl
mov
leave
enter
clc
cs
xchg
jmp
cli
mov
adc
xchg
divb
pop
lds
fiaddl
and
mov
ss
in
push
ljmp
cmp
loope
daa
pop
adc
insb
or
inc
mov
cli
lret
jge
inc
shll
lret
dec
jg
gs
testb
sahf
dec
add
insl
xor
sbb
call
xchg
scas
outsb
dec
incb
xor
cmp
jmp
push
cwtl
fimull
mov
cli
test
mov
stc
call
push
aas
out
sub
scas
daa
popf
jns
or
jne
xor
dec
fbld
xchg
cmp
ds
call
fsubrl
hlt
sub
add
rorb
adc
dec
lods
les
mov
sarl
ljmp
mov
mov
out
cmpb
js
popf
inc
negb
mov
movsb
mov
pop
int3
push
ret
xchg
add
frstpm(287
jge
push
cmpsl
dec
pop
loope
xor
add
fwait
pop
jo
rorl
inc
push
jl
mov
lcall
test
or
insb
sbb
push
and
jge
cmp
adc
aas
nop
pop
or
xchg
jnp
add
mov
push
lods
mov
insl
pop
mov
jecxz
test
push
push
pop
push
or
and
mov
sbb
push
stc
adc
add
push
test
dec
mov
xchg
xorl
add
cmp
test
xlat
cmc
imul
push
repnz
cmp
aaa
and
lcall
sub
enter
test
sub
push
jge
imul
ja
inc
add
sbb
inc
addr16
outsb
mov
dec
inc
push
inc
or
mov
mov
inc
pop
and
cwtl
add
inc
xchg
je
fsts
call
sbbb
aas
cmp
mov
loopne
stc
pop
or
popf
mov
cmpsl
ficoms
push
pop
popf
gs
xorl
popl
lock
xor
dec
shrl
cld
popf
jge
call
adc
pop
orl
push
jae
mov
sbb
jbe
push
dec
std
push
je
xor
lods
call
lods
add
clc
daa
jb
mov
xlat
jecxz
jecxz
xor
mov
mov
lea
add
mov
inc
xchg
ret
mov
sbb
rclb
xchg
sarl
dec
popa
cmp
adc
test
push
adc
pop
adc
repnz
fildl
dec
dec
jge
sub
popl
cmp
sub
mov
sbb
lea
add
push
push
into
and
pop
jb
loope
xorl
shlb
in
nopl
ret
ss
movb
xor
mov
xor
je
in
ret
push
in
fwait
pop
mov
inc
push
inc
mov
pop
dec
aas
test
scas
or
arpl
les
aam
push
push
sub
sub
repz
test
aam
xchg
scas
add
andl
xchg
ss
not
cmp
cli
les
jo
cmpsb
call
ds
cli
mov
iret
sbbb
jne
fisubl
xchg
lret
fiaddl
lret
xchg
cmpsb
sub
push
xchg
int
jecxz
xor
shlb
mov
dec
nop
jb
mov
mov
xchg
xor
loop
lcall
pop
mov
mov
add
adc
cmp
sub
enter
xor
mov
xchg
inc
dec
test
outsb
adc
dec
inc
xchg
jae
shlb
js
inc
mov
dec
mov
ds
push
xchg
dec
stos
movsl
filds
ret
ret
iret
pop
arpl
inc
inc
xchg
hlt
out
fdivl
adc
loop
aaa
mov
pop
stos
sbb
mov
jp
cli
lahf
xor
add
mov
mov
xchg
sub
jno
sbb
jae
js
scas
je
fs
xchg
aam
dec
imul
inc
mov
inc
cwtl
sbb
sbb
mov
push
add
ss
xor
ds
sti
into
subl
popf
popa
aam
dec
jbe
addb
insl
repnz
xchg
xor
mov
imul
adcb
outsl
push
addr16
rcrl
xchg
cmp
sub
lret
std
and
xor
lret
cmpsl
test
scas
jg
rolb
fildll
cmp
xor
shlb
mov
add
inc
stos
in
andps
xor
orl
mov
dec
psubw
jmp
cmp
sbb
adc
daa
pop
xchg
cwtl
lret
cwtl
gs
mov
pop
test
test
cltd
ret
jbe
fwait
cmp
or
ja
mov
int
filds
cmp
lock
fistps
inc
leave
insl
xchg
push
adc
lcall
stos
out
or
push
sahf
call
ffree
pop
in
push
and
cli
mov
mov
ljmp
push
mov
cmp
push
sub
sar
inc
fstl
fdivs
stos
jb
repz
push
dec
out
mov
jne
sbb
push
loop
push
sub
iret
dec
mov
pop
sbb
data16
rolb
aas
aad
cltd
mov
test
pop
mov
out
jle
jp
pop
cwtl
test
insl
inc
mov
out
xor
pop
aam
pop
push
mov
mov
cltd
jbe
pop
push
jb
mov
mov
lret
repnz
insb
les
outsb
mov
dec
inc
adc
stc
xchg
test
jns
insb
add
and
cmc
jno
imul
add
adc
or
sti
fisubl
cld
pop
mov
push
dec
int3
xchg
lock
mov
hlt
paddusb
std
lahf
out
gs
or
cltd
icebp
loop
mov
inc
push
and
outsb
inc
hlt
mov
mov
mov
inc
xor
rcr
xchg
sbb
cmp
mov
shlb
stc
add
gs
pop
xchg
bound
cmp
pop
movsb
les
bswap
mov
test
inc
mov
pop
jnp
loop
push
cli
sub
mov
adc
cmp
jle
popa
rcrl
fcmove
js
in
or
or
jmp
les
mov
jg
sub
dec
and
aad
lods
jmp
or
lret
xor
stos
pop
loopne
mov
lock
xchg
mov
push
dec
subb
adc
push
mov
inc
xchg
jae
dec
jne
xchg
ret
push
sub
gs
int
sub
pusha
imul
mov
popa
dec
cli
add
stc
mov
sti
pop
mov
cmpl
mov
push
mov
imul
inc
xor
inc
add
decb
imul
adc
clts
mov
push
lock
int3
outsl
sbb
imul
testl
inc
mov
stos
xchg
adcl
jg
sarl
fimuls
hlt
scas
mov
mov
mov
adc
js
push
and
push
mov
cli
pop
leave
stos
xor
mov
leave
push
aaa
jbe
sbb
iret
mov
jo
sbb
ss
dec
jne
mov
push
pop
lss
popl
mov
je
mov
lcall
mov
daa
orl
ss
jg
mull
shlb
lret
arpl
xchg
stos
stc
call
cmc
jo
cwtl
jge
stos
dec
jmp
mov
mov
fwait
pop
cmp
jne
push
leave
out
cmp
insb
test
mov
negl
ror
test
cmp
xchg
out
jb
mov
jg
push
jns
shlb
pop
mov
cmp
push
inc
sub
xor
mov
mov
neg
fiaddl
dec
scas
leave
adc
rolb
and
and
repz
pop
sub
loopnew
cltd
cmp
inc
dec
aaa
cltd
cmp
cmp
xchg
push
xchg
adc
push
pop
sbb
in
imul
popf
ds
push
test
mov
into
sbb
xchg
xchg
movsl
xchg
add
push
mov
add
leave
sbb
mov
mov
add
mov
sahf
imul
imul
cmp
fnstsw
cmpsl
daa
mov
pop
insl
push
das
in
xor
jo
jle
jo
adc
xor
cmp
sbb
movsl
test
loopne
add
mov
mov
xlat
ja
popf
pop
push
adc
scas
mov
or
and
lahf
idivb
ss
xchg
jmp
xor
popf
in
ds
popf
or
dec
push
push
pop
bound
fiadds
fwait
imul
push
cmp
mov
cli
in
and
jecxz
mov
xor
cmp
in
cmp
sub
pmullw
or
mov
sbb
aam
int3
leave
inc
aaa
inc
mov
push
cmpsb
in
xlat
mov
dec
nop
and
inc
insl
pop
stc
sbb
mov
iret
jecxz
push
add
pushf
jb
push
xlat
lea
adc
xlat
sbb
jp
je
ds
or
sub
out
inc
mov
jne
push
stos
aas
dec
das
xchg
ret
aaa
pmulhw
xchg
arpl
jb
cmp
pop
les
orb
lods
scas
daa
in
sub
test
mov
jle
hlt
mov
jbe
stos
cli
loope
pop
mov
test
mov
cmp
adc
andl
sti
mov
push
test
je
mov
or
cltd
sarl
gs
or
mov
push
int3
in
inc
imul
out
ret
es
cmp
jb
cmc
cmp
adc
xor
or
jns
and
jg
sbb
int
imul
cs
xor
dec
jne
mov
xchg
loope
mov
add
inc
call
jg
inc
cmc
inc
out
push
xor
jg
test
pop
std
mov
jge
arpl
mov
cmc
inc
pop
call
orb
inc
cmp
pop
jb
in
add
dec
ljmp
mov
jns
aas
xchg
jbe
or
push
scas
xchg
xchg
sbb
cmp
xchg
lahf
mov
xchg
sub
dec
adc
test
popf
cmp
hlt
cmp
and
and
gs
mov
xor
jge
fstps
jl
pushf
xor
scas
inc
sti
mov
ret
mov
cmpsb
std
cmp
mov
aam
popa
pop
outsb
sbb
fidivrl
fsubs
mov
add
xchg
ss
les
pop
cmpsb
rcll
pop
jae
lods
xchg
loop
daa
mov
das
mov
movsl
mov
sub
rcr
fiaddl
jo
shrb
or
movsb
rcll
add
pop
xchg
repz
loopne
test
pushf
lret
jne
jo
mov
jp,pt
jg
mov
scas
mov
hlt
mov
xchg
dec
into
daa
dec
xor
dec
inc
inc
push
das
cmpsl
imul
fistpl
pop
xchg
scas
xchg
sbb
rolb
out
popf
push
into
es
jbe
lcall
lcall
mov
inc
xor
mov
jg
mov
cwtl
mov
jmp
push
mov
inc
mov
cs
push
cld
repnz
adc
std
test
call
cmp
cltd
lds
or
xor
loope
cmp
fadd
dec
or
and
pop
sub
call
sahf
mov
mov
aas
scas
pop
movsb
and
loope
inc
movsl
in
shlb
dec
mov
ficompl
cmpsl
cli
fcoml
jl
or
pop
push
adc
add
inc
xor
xchg
sbb
nop
xchg
pop
out
cmpsl
jne
jae
bound
leave
adc
leave
push
loop
jge
lret
iret
adc
je
pop
daa
mov
imul
mov
jg
xchg
xchg
addr16
js
sti
pop
loop
sbb
or
pop
test
mov
push
mov
and
push
cmc
sub
dec
xchg
shl
sbb
push
mov
sbb
cli
add
bound
sbb
mov
cmp
call
and
int
sub
inc
subb
in
movsl
xchg
shll
es
xchg
mov
insb
xor
fildl
nop
ss
out
js
jbe
cmp
ds
sub
lcall
int3
dec
insl
bswap
sahf
xchg
xor
scas
fwait
mov
popf
jp
jecxz
cmp
xor
pop
nop
add
xchg
outsb
rclb
sarl
mov
aad
jno
or
ficoml
lods
xor
mov
add
xor
xor
repz
dec
cwtl
jp
cltd
xchg
sub
add
jp
sti
out
add
sub
or
inc
cmc
outsl
stos
jb
xchg
pop
shl
cld
in
mov
mov
pop
push
inc
pop
cmpsb
lcall
sbb
test
pop
out
inc
pushf
pop
idivb
push
idivl
adc
insb
mov
jbe
adc
and
mov
lods
jae
stos
sbb
arpl
push
mov
push
jae
cli
add
ret
xchg
les
adc
sbb
cmp
push
sub
inc
mov
fadds
sti
jae
hlt
dec
scas
jge
sbbl
insb
and
fdivrs
pop
xchg
int
sarl
repz
cld
mov
sub
fstp
sahf
dec
test
fidivs
mov
push
frstor
mov
dec
xchg
sbb
mov
xchg
mov
sbb
pop
mov
mov
sti
xor
mov
mov
mov
vmulsd
scas
gs
cli
cli
mov
ljmp
loop
std
add
push
and
fs
fwait
pop
icebp
out
ret
iret
enter
ss
mov
xlat
outsl
adc
jbe
decl
fdivrl
add
cwtl
fstpl
or
pop
pop
xchg
sti
lea
ss
xchg
cld
into
pop
ds
dec
call
fbld
push
popa
jo
popf
rorb
mov
mov
xchg
popf
push
aaa
test
mov
xlat
mov
jp
jg
and
jo
lds
or
js
sti
jae
mov
call
cmp
cmc
cwtl
nop
sub
cmp
cmp
outsb
sbb
adc
cmc
push
cmp
sub
push
daa
into
xchg
fisubrl
arpl
and
xchg
pop
test
sub
pop
nop
pop
push
mov
nop
sbb
pop
pushf
jmp
pop
lods
mov
out
adcb
mov
mov
pop
hlt
daa
leave
jp
pop
enter
mov
pop
push
lcall
dec
xor
stos
std
jne
add
xor
jecxz
mov
and
inc
ds
pop
in
repnz
inc
out
and
jg
sti
lahf
lahf
lock
pop
xchg
xchg
xor
lds
lret
sbb
rcrl
lahf
xor
mov
lcall
cld
sbb
jg
and
mov
nop
mov
shlb
aas
call
dec
push
lea
and
outsl
and
xor
or
aad
fildl
fisttps
push
je
jle
mov
lahf
pop
fcomps
out
jns
orl
xchg
aaa
push
mov
xor
cmp
inc
pop
fisttpl
insb
xchg
in
cmp
mov
sbb
pop
popf
jo
xor
in
lcall
xchg
cmp
sbb
inc
cmp
push
xchg
cli
add
fwait
idivb
pushf
push
jae
es
inc
outsl
test
adc
test
das
xor
sub
test
and
mov
or
fs
ss
xchg
push
mov
das
push
shll
les
mov
lcall
leave
iret
push
out
mov
lret
fwait
or
ret
fwait
adc
adc
pop
sbb
push
mov
mov
test
dec
mov
sbbl
enter
mov
pop
pusha
out
negb
xchg
mov
pop
push
pop
cmp
int
fsubs
mov
or
clc
jge
pop
sub
jb
sahf
pop
adc
orl
cmp
mov
add
sub
test
sub
pop
jecxz
pop
ss
add
fists
addr16
adc
add
mov
or
mov
pushf
push
ret
das
sub
jp
shlb
jg
xlat
std
iret
sbb
pop
pop
cmp
dec
sahf
mov
mov
adc
je
pop
dec
jp
push
xchg
sub
out
add
xchg
push
xchg
and
movsl
xchg
es
movsb
in
sub
pop
cwtl
pushf
pop
repnz
aas
into
loop
inc
aas
xor
les
repnz
lock
lahf
js
repnz
mov
adc
jo
addl
std
xor
imul
lds
xchg
cli
push
cmp
and
add
cmp
lahf
int
push
push
and
mov
dec
cmp
gs
push
in
adc
xchg
xchg
das
das
pop
inc
ds
outsb
ficomps
inc
cs
xchg
mov
push
dec
adc
cli
jge
push
test
ds
sahf
dec
inc
into
cmp
lds
aas
xor
lods
dec
fstpl
pop
out
and
push
push
inc
xor
ret
adc
test
jae
mov
jo
mov
arpl
cmpsb
mov
sti
pop
push
dec
rcl
or
ljmp
inc
imul
cld
or
outsl
lds
call
ret
adc
adc
mov
lcall
mov
xor
ljmp
sti
xchg
out
sub
lea
call
dec
xchg
push
in
pop
dec
lds
push
lea
inc
jg
and
test
and
push
sub
dec
sbb
push
adc
inc
fsubrl
ret
add
lock
adc
inc
fimuls
jo
negb
in
fsubrs
mov
jecxz
inc
fmulp
push
xchg
sub
push
dec
loopne
ds
push
dec
in
idivl
les
jg
mov
sub
or
test
adcb
mov
fidivrs
mov
or
lds
ljmp
sahf
or
mov
lds
ffreep
std
mov
in
ss
cltd
push
and
push
cmp
out
test
lds
cmp
cmpsb
cmp
xor
mov
mov
cli
cltd
cs
adc
and
int3
xchg
insb
aas
jmp
stos
andb
out
test
jge
call
inc
and
sbb
ds
sub
std
cltd
popf
cld
adc
inc
stc
ja
or
add
push
daa
movsb
pop
imul
xchg
mov
push
popf
fisttpll
add
pop
cmpsl
lahf
pushf
outsb
dec
popf
decl
aad
and
or
daa
in
popf
fwait
jne
in
xchg
and
popf
lds
add
les
mov
cli
mov
pushf
ret
popa
inc
lock
lret
pop
and
outsl
jae
mov
inc
mov
jbe
jno
jne
jmp
int
xchg
cli
arpl
xchg
jnp
xchg
cltd
ss
stos
adc
sub
cmp
push
xor
pop
int3
ja
inc
decb
and
clc
inc
and
adc
sahf
lret
xchg
dec
pop
xchg
sbb
dec
fimull
mov
jo
dec
dec
cmp
jmp
push
xor
fidivrs
mov
imul
stos
mov
mov
inc
fidivl
fs
lods
insb
push
xor
pop
xchg
sub
pop
cwtl
es
insl
cmp
daa
dec
test
and
push
xchg
movsl
push
stos
mov
jecxz
pop
or
xor
sahf
ss
sbb
xchg
jge
stos
daa
fcom
test
lret
daa
sub
insb
cmp
sbb
sahf
and
jb
lcall
cwtl
sti
das
ret
mov
sbb
add
dec
stos
or
cmp
movsl
sbb
push
clc
or
mov
lock
sbb
ror
ficoml
cmp
add
aad
xor
or
xchg
test
mov
mov
xor
mov
idivb
les
stos
mov
in
dec
cmp
rol
movsl
into
push
imul
or
sti
pop
mov
into
or
jecxz
orl
ret
out
iret
adc
cmp
lret
adc
fs
loopne
fildl
cmc
daa
hlt
lcall
or
inc
shr
mov
mov
scas
loopne
add
and
mov
shll
int3
les
loope
aaa
hlt
mov
rcl
sub
sub
lcall
or
push
mov
pop
mov
lea
adc
or
sbb
in
xor
cmp
mov
xchg
add
ret
inc
out
mov
and
lcall
mov
outsb
es
pop
cmp
mov
daa
jnp
cltd
jne
inc
push
inc
test
ret
pop
mov
and
ds
dec
jbe
cwtl
push
stc
mov
or
sub
insl
rclb
dec
nop
xchg
in
xor
ss
jnp
leave
sbb
decb
or
pop
and
sub
sbb
fsqrt
push
and
sbb
enter
cmp
add
lret
xlat
jae
mov
push
mov
mov
int3
xchg
into
pop
shlb
mov
xchg
cmp
fdivs
xor
push
mov
fmull
dec
push
sti
enter
fistpll
outsl
mov
push
or
push
push
ja
cmp
push
lods
inc
dec
mov
mov
mov
std
popf
xchg
mov
stc
xor
lods
std
pop
out
adc
xor
jl
xchg
adc
cwtl
mov
cmc
mov
fnstenv
mov
push
xlat
cli
ret
scas
xor
rcll
or
dec
adc
push
cmp
xor
repnz
stos
mov
push
inc
popf
xor
in
xor
in
push
add
pushf
popf
pmaddwd
test
jg
rclb
cli
ds
xor
fistpll
bound
insb
cmp
ds
arpl
lcall
dec
cmp
xchg
inc
sbb
cmp
icebp
imul
pop
xchg
arpl
sbbb
cmc
out
mov
jb
mov
xchg
xchg
jb
jae
outsb
xchg
iret
clc
jl
dec
inc
in
sbb
mov
int3
add
push
shl
xor
shlb
mov
sahf
dec
mov
pop
and
add
sbb
fists
rolb
mov
popf
fwait
aad
and
lds
int3
mov
dec
inc
repz
xchg
lea
mov
dec
mov
mov
mov
jno
cmc
and
lahf
adc
iret
stos
cmp
dec
stos
mov
lret
jne
xor
inc
or
push
and
lahf
xchg
je
in
inc
repnz
inc
adc
pop
inc
and
cmpsl
test
mov
adc
mov
xchg
mov
jno
cli
dec
xchg
mov
mov
mov
popa
mov
stos
mov
or
and
popa
and
nop
adc
mov
stos
push
les
int3
movsl
push
scas
and
aas
or
push
jecxz
lahf
gs
call
pusha
lahf
push
add
stos
int3
or
sub
aam
stos
jl
lret
add
hlt
push
or
int
and
or
ret
fwait
sbb
rorl
cli
hlt
xchg
mov
insl
addr16
repz
jge
xchg
add
pushf
xchg
stos
xor
and
mov
sbb
cmpsb
ja
pop
cmp
data16
pushf
inc
push
dec
popf
or
in
cmp
cli
sbb
addr16
pushf
sbb
xor
int3
push
into
and
push
cmp
pop
outsb
movsb
add
jmp
pushf
or
inc
ret
lods
icebp
fbld
dec
pop
stos
push
cmp
movl
xchg
mov
rcrl
pop
in
inc
icebp
fwait
xchg
rorb
jnp
int
repnz
jne
loopne
mov
mov
jge
xchg
mov
cld
pop
add
push
xchg
pop
ret
lea
mov
jl
shll
inc
fistpl
jl
aas
fs
xchg
pop
dec
loop
cmp
movsb
pop
mov
scas
hlt
movsl
pop
pop
inc
cmp
mov
fs
cmp
cmc
int3
pop
sbb
push
push
in
inc
stc
push
jne
cmp
outsb
cmp
cmp
pop
push
xchg
mov
xor
push
inc
push
jae
bound
dec
add
xchg
test
mov
mov
repnz
cmp
lods
mov
loope
cmovno
mov
cmp
sbb
vxorpd
push
xchg
mov
push
shlb
push
sbb
mov
adc
lock
push
sahf
cmp
lret
loopne
aas
push
repnz
mov
jbe
inc
cmp
je
mov
push
adc
or
mov
xor
dec
inc
mov
daa
lcall
icebp
into
std
out
jb,pn
xchg
ret
mov
jae
mov
mov
push
cmp
xchg
and
movsl
inc
push
and
jge
aam
pop
xchg
sub
nop
push
pop
mov
jne
lds
lcall
in
add
pusha
xor
or
loopne
lds
xchg
popa
bound
push
mov
mov
inc
ret
sbb
xchg
cmpsb
dec
dec
rclb
mov
push
cmp
fcomi
jge
xor
testb
ljmp
cmpsl
fstp
fwait
lods
mov
cmp
in
ds
repz
sbb
bnd
or
mov
rclb
pushw
xchg
int3
cmp
daa
cmpsl
fcomps
mov
imul
roll
dec
jne,pt
cmp
push
fidivrs
xchg
aad
xchg
loop
and
test
outsl
cmpsb
sbbl
mov
stos
fs
xchg
push
bound
jns
rcrl
xor
call
bound
lods
fsub
and
adc
sub
sub
aam
dec
mov
push
in
cltd
addl
cmc
dec
imul
repnz
sbb
lret
or
cmp
add
insb
or
xor
nop
adc
cli
add
inc
mov
popf
sub
push
mov
cmp
js
orb
orb
test
ret
or
out
cmp
push
lret
jae
fcomps
clc
and
pusha
in
cmpl
mov
lcall
fwait
outsl
aam
push
and
fldt
push
insb
xchg
or
ss
not
cmp
sbb
adc
adc
sbb
testb
dec
pushf
fs
adc
push
dec
adc
or
loopne
and
mov
cmp
fs
ret
or
fdiv
push
shl
shl
and
fmull
rcrb
lea
push
jno
cmpsb
aas
xchg
in
and
adc
cmp
loope
xor
stos
repnz
unpcklps
pop
sub
inc
jg
jae
lea
stos
cli
mov
cltd
mov
sbb
popf
lods
adc
mov
mov
stos
or
jmp
sub
call
dec
or
xchg
and
sti
sub
push
mov
out
cmp
dec
push
subl
mov
mov
pop
dec
lock
fwait
lcall
mov
adc
ds
xor
mov
stos
and
mov
subb
mull
daa
icebp
in
dec
jge
xchg
pop
popa
jmp
dec
jg
mov
mov
push
mov
ljmp
push
xchg
out
addr16
ljmp
cmp
xchg
fisubs
xor
lahf
mov
imul
and
pop
pop
xchg
xlat
stos
mov
mov
adc
add
push
cmp
cmp
sub
cmp
arpl
mov
push
dec
pop
cmp
cmpsl
cmp
adc
mov
in
je
pop
rorl
push
push
adc
xchg
adc
or
sub
inc
call
mov
aas
lahf
push
add
mov
and
pop
in
repnz
mov
jmp
xor
and
push
je
fadds
mov
fadd
sarl
loopne
faddp
orl
mov
xor
pop
fdivs
push
inc
push
xchg
push
mov
xchg
mov
pop
in
pop
push
dec
les
cwtd
rolb
adc
test
cmc
inc
cli
mov
jno
lcall
push
cmp
testb
add
shlb
jmp
pop
insb
push
cwtl
lcall
pop
inc
push
jb
mov
push
mov
data16
pop
and
sub
xlat
aad
hlt
addl
or
push
enter
xchg
xor
dec
sub
pop
xor
shr
jmp
mov
sbbb
dec
mov
xchg
and
pop
cli
mov
xchg
in
add
je
jnp
mov
movsb
push
or
add
jnp
add
lods
xor
cli
inc
jnp
clc
insb
push
cmp
xor
inc
cmp
sbb
fbstp
xor
xchg
cmp
bound
fistpl
push
lret
ret
int3
pop
xchg
test
nop
mov
test
orb
fisttps
lret
xchg
fisubrl
scas
pop
lret
les
aad
popa
mov
pushf
js
jp
inc
sbb
xchg
cmp
or
repz
fiaddl
mov
fbstp
pop
lds
adc
mov
xchg
or
fadds
shrl
fcoms
in
cmp
rcrl
loopne
mov
mov
stos
icebp
fistl
lahf
mov
aad
pop
mulb
into
xor
repz
cld
mov
pop
adc
pop
add
cs
addr16
je
dec
dec
xchg
fisttps
ficoml
add
into
arpl
pop
popa
cmp
dec
xchg
jnp
sbb
or
stc
mov
movsl
dec
mov
pop
or
into
dec
inc
ds
stos
sbb
xor
xchg
and
mov
enter
cwtl
mov
jae
lcall
loope
das
xchg
out
cs
add
dec
es
dec
push
xchg
xchg
cld
push
test
shl
pop
jl
xchg
das
xchg
sub
dec
xor
jle
push
dec
dec
push
inc
jb
les
mov
fwait
push
notb
xchg
scas
outsl
lcall
jns
sar
xchg
sub
movsb
cltd
addr16
mov
mov
sbb
das
gs
sbb
iret
jo
outsl
nop
test
aaa
insl
and
in
dec
pop
jns
mov
push
dec
add
adc
or
cmp
sti
mov
add
lds
pusha
mov
inc
adc
push
lods
push
add
cs
jge
ljmp
inc
inc
mov
jp
pop
leave
aad
xchg
add
mov
pop
pop
neg
aas
mov
mov
mov
notb
sub
lods
push
testb
repnz
mov
adcb
and
loopne
fidivrl
jmp
popa
xor
pop
jo
movsb
sub
repz
add
or
sub
inc
fcomps
jl
cmpsb
mov
xchg
dec
clc
pop
test
test
dec
add
popf
ds
bound
hlt
inc
sbb
fistps
shl
push
dec
mov
xchg
aas
dec
push
pusha
jle
scas
test
sbb
outsl
fwait
mov
cs
sbb
adc
out
lods
lods
fcomip
pop
mov
cmp
jns
call
test
add
fnsave
pop
sub
icebp
notl
pushf
xchg
aad
ret
lret
mov
fmulp
dec
mov
xchg
or
pop
cmc
rorl
xchg
je
mov
test
adc
nopl
xchg
hlt
dec
jmp
imul
outsb
push
mov
jecxz
cmp
je
aaa
dec
xchg
aaa
sub
cltd
data16
add
ss
movsb
fidivrl
xchg
mov
movsb
lret
push
mov
dec
ljmp
jge
add
movsl
aaa
gs
and
or
pop
mov
pop
cmp
adc
xchg
lods
push
mov
jne
dec
xchg
cmp
cmp
cmp
stos
and
add
jmp
ss
outsb
push
jo
adc
mov
and
sbb
push
cs
dec
data16
cmpsb
mov
push
lcall
xor
jecxz
cmp
jnp
and
mov
xchg
xor
sub
test
rcrb
fcompl
ljmp
repnz
sbb
pop
movsl
mov
out
std
or
cli
and
mov
ret
fisubs
orl
push
sbb
je
repz
ret
inc
add
pop
inc
push
dec
pop
xorb
shr
ret
pop
jl
inc
in
test
or
fs
jbe
xor
pop
inc
adc
inc
xchg
loop
mov
xor
jle
add
add
and
cmp
je
iret
pop
imul
jmp
out
pop
adc
movsl
mov
pop
sbbb
jae
pop
pop
bound
add
jb
repnz
sub
xor
push
insb
pop
scas
jne
sbb
jp
mov
popl
lods
xorl
push
xor
sti
fiaddl
ds
pop
inc
loop
fisttps
icebp
xchg
flds
sbb
aam
sub
cli
scas
xchg
mov
aaa
inc
fnstenv
and
mov
push
test
fbstp
popa
outsl
xlat
jg
mov
fiaddl
filds
or
aad
jae
aad
jae
xlat
mov
xchg
lcall
cwtl
in
outsl
ficompl
clc
bound
fstl
or
cmp
dec
stos
lea
fidivs
push
aaa
fwait
insl
dec
pop
stos
xchg
shll
inc
inc
xor
rolb
pusha
fiaddl
xchg
mov
sub
mov
cltd
rcll
mov
push
in
cld
lea
and
push
xchg
xchg
jbe
sbb
sub
idiv
aam
out
jo
jmp
mov
dec
push
or
push
bnd
push
or
dec
inc
addr16
sets
inc
inc
in
cmp
mov
leave
xor
and
xor
test
mov
mov
out
jo
mov
test
push
pusha
cli
in
inc
rorb
mov
aas
xchg
test
push
pop
roll
cmp
jle
inc
fs
pop
mov
rolb
add
popa
shl
stos
jmp
sbb
mov
pop
jno
sbb
aas
jne
and
and
ljmp
xchg
and
int3
sbb
adc
popf
je
popf
lcall
cmp
insl
nop
sub
gs
in
mov
jp
pop
adc
mov
dec
add
ljmp
movsl
sbb
fwait
subb
loop
bound
orl
js
rcl
lahf
jno
dec
xchg
mov
add
pop
fbld
das
cli
xchg
cmp
lahf
gs
and
cltd
jne
sbb
pop
pop
xchg
in
sbb
xor
pop
aam
mov
mov
xchg
ljmp
lahf
add
cmp
pop
inc
xchg
test
cmpsb
outsl
cmp
or
lret
xchg
inc
or
test
sub
mov
xchg
or
jae
xor
and
cltd
jg
hlt
lret
fistl
dec
arpl
test
sub
pop
scas
orb
adc
or
test
adcl
in
gs
push
aaa
sub
bound
xor
out
and
les
cwtl
mov
jbe
jns
xorb
cmpl
sbb
testl
push
in
cmp
dec
jns
loope
jne
lret
mov
mov
pop
push
jmp
mov
stos
cmp
add
outsl
sub
dec
es
pop
pushf
or
inc
insb
mov
ret
inc
inc
movsb
ret
jo
cmpsb
repnz
daa
mov
sub
xchg
popa
mov
adc
ss
jle
mov
add
inc
jmp
push
rcrl
mov
pop
inc
dec
mov
je
in
mov
jae
aam
sahf
pop
xor
pop
addr16
fcomip
cld
mov
clc
pop
jp
xchg
push
sub
xchg
movsl
add
cmp
lock
mov
xor
jmp
jge
hlt
call
into
inc
or
test
es
and
gs
mov
cli
xor
pop
cmp
push
cli
sahf
lock
dec
out
sahf
xchg
das
adcl
mov
cmpsb
dec
out
xchg
xchg
add
sahf
cmpb
iret
insl
and
decl
xlat
push
jp
push
cmpsb
rcrb
or
in
xchg
jo
mov
xchg
inc
testb
in
inc
dec
xor
in
clc
lcall
mov
fs
int
cli
clc
insb
inc
daa
cwtl
jle
addl
arpl
stc
lcall
push
mov
push
fcoms
hlt
jne
push
and
mov
ljmp
sub
cmc
movsl
mov
cltd
and
repnz
scas
cmp
imul
in
shr
jno,pn
sarb
and
xchg
aas
fwait
pop
mov
test
bnd
mov
add
les
and
inc
push
xchg
mov
sbb
cmp
subl
xchg
std
push
fstps
and
xchg
fimuls
in
cwtl
cwtl
push
mov
and
mov
pusha
hlt
mov
in
mov
jmp
or
nop
xor
dec
ret
mov
jle
inc
insl
jo
out
add
add
mov
jns
and
call
dec
lahf
repnz
je
dec
cmp
test
push
sahf
pushf
jg
jbe
repnz
jne
mov
insb
lret
ds
shll
add
sub
xorl
ret
mov
out
and
nop
in
test
or
mov
addr16
cs
fcom
sub
cmpsb
js
scas
into
insl
fwait
adc
inc
call
in
lret
and
mov
sahf
insl
sub
mov
cmpl
sbb
test
add
inc
sbb
add
sbbb
jno
sahf
lahf
mov
fidivrl
sub
xchg
sarl
cmp
push
xchg
dec
jmp
flds
add
cmpsb
icebp
mov
push
mov
cmp
mov
lock
or
pushf
push
pushf
cmp
fdivl
fldcw
insb
mov
in
cmp
mov
lahf
dec
fwait
jo
lds
dec
es
jp
pusha
out
xchg
lcall
add
inc
sbb
mov
dec
es
test
popa
shrl
xor
cli
ret
popa
fwait
in
nop
jl
xchg
and
ljmp
xor
pop
push
loop
push
rorl
push
arpl
fidivrs
imull
inc
xor
popf
mov
inc
mov
lods
xor
jmp
mov
in
fwait
sbb
mov
jg
push
xor
push
or
jnp
out
pop
pop
out
leave
lcall
popa
inc
adc
xchg
sbb
adc
aad
dec
sbb
lea
mov
inc
pop
pushf
add
fdivl
addr16
and
mov
nop
push
repnz
and
push
jae
inc
mov
or
jl
shrb
pop
test
push
fdivrs
mov
test
push
outsl
xchg
scas
shr
mov
jle
mov
lret
pop
push
aas
ljmp
adc
mov
jb
add
in
push
ret
iret
arpl
pusha
scas
sahf
cmp
jne
pop
ret
fsub
cmpsb
out
icebp
cld
or
aaa
mov
jb
cli
mov
pushf
push
mov
mov
loope
add
push
ret
pop
push
loop
xor
mov
roll
in
sub
cmc
and
outsb
mov
inc
aas
mov
out
jp
push
pop
mov
mov
adc
test
jmp
xchg
pop
jmp
or
lock
prefetchw
sbb
ss
inc
xor
dec
adc
sti
sbb
clc
jge
dec
dec
or
in
ret
loopne
mov
or
pop
jns
out
push
mov
fisubrs
stc
jmp
pushf
adc
arpl
cmpsl
cmp
push
dec
pop
jle
int
or
adc
pop
pop
mov
push
sarl
fimull
pop
int3
repz
outsl
ret
sub
or
push
lea
dec
push
mov
cltd
pop
hlt
stc
jecxz
test
xchg
add
push
jp
mov
xchg
push
outsb
jmp
icebp
or
push
sar
push
iret
lods
les
sbb
loope
cmc
jmp
jo
sahf
cwtl
pop
xor
jno
lods
movsb
inc
stos
jno
hlt
ljmp
mov
inc
test
jne
and
test
pop
lock
clc
pop
lock
lods
aam
scas
repz
rolb
fnsave
or
ret
or
sub
imul
stc
stos
sub
lods
cmp
insl
sub
or
xchg
push
jmp
cmp
add
pop
fsubl
lret
and
or
pop
into
cltd
dec
es
test
les
ja
xor
and
push
dec
cmp
and
xchg
pop
and
lock
movsl
dec
dec
mov
push
addl
call
push
mov
inc
outsb
push
in
pop
jo
out
xor
pushw
jns
js
xlat
mov
std
mov
idivl
and
bound
insl
dec
outsb
mov
test
inc
call
movsb
inc
aam
sbb
in
push
xchg
sti
adc
js
sbb
sahf
pop
ljmp
push
mov
push
fildll
int
mov
cmp
dec
xchg
aad
mov
push
dec
jns
and
icebp
ja
addr16
out
vunpcklps
adc
sub
sbb
pop
cwtl
ret
push
jno
and
pop
sbb
lcall
jecxz
pop
data16
mov
adc
dec
pop
xor
pop
outsb
sub
dec
sahf
cmp
dec
mov
and
lcall
adc
cwtl
jns
jg
and
inc
loop
cmpl
sti
sbb
cmp
sbb
loopne
stos
jmp
mov
cmpl
enter
push
mov
jmp
jp
or
popf
iret
mov
pushf
pop
test
and
lods
mov
ret
cmpsb
push
mov
or
pop
bnd
mov
test
mov
lock
cmp
xchg
jb
inc
inc
nop
scas
inc
sub
ret
mov
jb
cmp
divl
sbb
inc
adc
icebp
incl
xchg
dec
fwait
stos
daa
roll
insl
roll
icebp
cld
push
aad
dec
addr16
loopne
pushf
cmp
adc
mov
xchg
stos
xchg
and
mov
jge
clc
sub
inc
inc
iret
loop
aam
and
sub
fidivl
cmp
icebp
mov
pop
jno
cmpsb
sub
add
rolb
sarb
jge
xchg
cmp
pop
das
cwtl
add
and
add
std
jp
xlat
orl
push
dec
push
push
scas
iret
sti
xchg
fnstcw
jmp
mov
cli
xchg
jp
mull
xchg
mov
inc
cmp
jne
xchg
pushf
xchg
mov
inc
add
mov
xchg
fists
ds
hlt
push
je
sbb
cs
aam
mov
outsl
sub
addl
int3
mov
inc
lcall
addr16
jno
test
adcl
mov
lcall
pusha
movsb
cmp
pushf
xchg
insl
mov
into
mov
xor
mov
inc
xchg
and
pop
push
lahf
push
test
imul
mov
hlt
mov
cwtl
dec
mov
dec
rorl
dec
mov
dec
les
dec
lds
dec
fimull
dec
fisttpl
dec
fmuls
dec
dec
fimuls
dec
fisttps
dec
fmull
dec
fisttpll
dec
rorb
dec
rorl
dec
rorb
dec
rorl
dec
dec
mov
dec
aam
mov
sub
mov
lahf
roll
mov
stos
movl
add
dec
aad
cs
ficoms
insb
mov
dec
les
and
bound
frstor
inc
dec
stos
pop
mov
jg
add
notl
jl
mov
mov
loop
nop
jns
adc
mov
jns
push
ret
mov
cmp
push
mulb
jle
inc
lds
sub
aam
jne
jp
inc
pop
mov
mov
fadds
pop
jmp
sbb
int3
movsl
inc
lock
lcall
dec
inc
xchg
test
cltd
into
in
xor
cmpsb
andl
es
daa
aaa
loope
gs
pop
cmp
lahf
push
fcomp
pop
pop
ds
pusha
adc
cs
push
mov
loop
aas
cmp
shlb
dec
mov
inc
sub
push
lahf
sub
inc
out
pop
lcall
and
mov
cmp
cs
adc
push
sbb
pop
pushf
mov
popa
outsb
mov
lahf
and
cltd
mov
fistpl
sbb
icebp
into
inc
cmp
bound
fidivrs
aas
insl
cmp
pop
aaa
and
xchg
lock
pusha
hlt
pop
fistpl
leave
or
aas
adc
dec
jns
ret
int
pushf
mov
pop
dec
ds
xorl
popa
push
out
push
data16
lods
pop
jmp
popa
cmp
in
jecxz
xor
scas
les
push
cltd
dec
cli
mov
jae
int
xchg
xchg
mov
inc
push
and
inc
clc
xor
mov
sub
dec
push
mov
mov
sarl
mov
aaa
arpl
les
cmc
sahf
cld
jbe
pop
push
xchg
movsb
jns
mov
out
cs
clc
sub
cmp
pop
pop
fistps
inc
mov
mov
fcomip
inc
sbb
xchg
jmp
inc
inc
jnp
and
xlat
mov
fstp
sarb
aaa
aam
aad
shlb
aas
lret
outsb
rolb
xchg
stos
mov
add
leave
inc
or
fnsave
