pop
add
addb
sub
mov
fwait
cmc
or
jecxz
out
cmp
dec
pusha
dec
or
sub
mov
cmpb
push
mov
mov
sbb
outsb
xchg
lods
daa
ljmp
cwtl
mov
jb
insl
cld
in
sub
fildll
add
xchg
sar
jns
scas
mov
jl
cmc
stc
xchg
xchg
dec
cmp
decl
or
mov
data16
xor
push
hlt
adc
cld
cmp
and
test
or
das
scas
js
xchg
adc
cmp
mov
sbbl
xchg
mov
jns
cmp
addr16
out
faddl
xor
push
jge
test
out
mov
mov
xor
lret
dec
mov
stos
test
ss
sub
jmp
sub
mov
stos
adc
jp
jbe
mov
cld
xor
in
jns
cmp
add
sbb
sub
test
or
push
sbb
movsl
sbb
mov
and
ficoms
stos
inc
int
mov
mov
shld
adc
or
cmc
push
jg
in
in
insb
and
fsts
push
repz
lea
outsl
dec
stos
jbe
ficoml
xchg
ficoml
shrl
clc
push
lcall
cmp
fldt
mov
pop
div
cwtl
push
mov
mov
ret
std
fsubp
xor
cli
pop
mov
aam
sbb
xor
inc
test
mov
mov
xor
mov
sub
lods
arpl
cmc
rol
pop
std
sub
mov
rcll
pop
dec
add
sbb
sub
mov
xchg
repz
addr16
bound
scas
lahf
mov
jmp
adc
xlat
inc
inc
lods
jae
dec
les
jo
ret
or
push
lret
and
das
sbb
jp
pop
mov
inc
pop
lret
fsubl
mov
push
mov
adc
xchg
scas
sbb
dec
mov
sub
sbb
sarb
jl
xchg
push
mov
mov
mov
xchg
push
test
mov
pop
inc
in
bound
aad
outsb
mov
xor
lret
pushf
or
xchg
aas
inc
mov
mov
clc
sbb
sbb
xchg
jns
idivb
inc
jo
loope
add
mov
inc
and
testl
dec
mov
fcmovne
or
cmp
cld
fs
push
push
loope
mov
push
fnsave
xorb
aad
xor
push
outsb
jecxz
ret
mov
mov
xchg
js
sub
pop
dec
lret
dec
and
xchg
stos
icebp
mov
scas
pop
push
inc
mov
xchg
sub
das
test
and
mov
mov
les
mov
pop
mov
push
adc
mov
into
fcomps
enter
punpckhwd
mov
hlt
push
pop
int3
and
and
loop
fidivrl
pop
jg
icebp
mov
pop
pop
out
lret
lahf
xor
inc
insl
xor
gs
test
cmc
jp
out
pop
call
mov
push
out
dec
mov
ret
push
daa
dec
sbb
sub
test
sbb
dec
xchg
in
outsb
pop
xor
lds
shrl
cmp
xchg
cmp
mov
mov
mov
mov
popa
lds
scas
in
push
movsb
adc
cmp
cltd
int3
mov
mov
xor
ret
lds
xchg
jb
das
fs
push
cli
lret
push
roll
loope
inc
mov
jnp
xchg
xchg
jle
jb
jns
dec
rsqrtps
pop
es
inc
push
repnz
mov
cmp
mov
mov
lret
push
loope
outsb
lea
mov
rcll
push
cmp
jnp
inc
stos
ljmp
shlb
jns
and
daa
mov
scas
es
mov
shlb
mov
lret
mov
daa
mov
jp
xchg
inc
fiaddl
sbb
out
pusha
inc
daa
into
and
xor
enter
inc
mov
sti
ss
mov
rorl
push
or
add
mov
xorl
inc
pop
xchg
dec
xor
cmp
or
xchg
xor
loopne
mov
cmp
cmpsb
sub
mov
xor
xor
lahf
stos
outsb
jg
sub
and
stos
push
and
scas
aad
mov
mov
or
outsl
adc
outsb
lods
adc
add
sti
call
ret
jge
lret
std
dec
stc
push
or
loop
call
mov
popa
cmp
sub
pop
mov
pop
xchg
xor
xor
fcmovbe
and
mov
xchg
push
or
adc
xor
shlb
push
jnp
jae
cmp
dec
mov
mov
jb
popf
fisubl
or
test
push
out
and
nop
int3
inc
sti
lea
fcmove
jns
cmp
inc
iret
sti
mov
pop
arpl
mov
loopne
xor
push
hlt
sub
pop
adc
inc
mov
mov
fwait
rorl
cmp
or
fdivrs
test
mov
ss
xorl
cmp
dec
cmp
jg
mov
scas
inc
sahf
pop
daa
mov
mov
adc
aaa
imul
push
and
cmp
mov
test
xchg
nop
das
mov
xor
mov
xchg
xor
dec
ds
inc
mulb
mov
sbb
xlat
xor
lret
cmc
add
ss
xchg
fisttpl
jmp
out
and
jns
mov
roll
ja
mov
rcl
dec
mov
mov
add
xor
sbb
out
outsb
xor
dec
ret
rorb
insl
and
nop
mov
jbe
push
inc
mov
sub
sub
push
leave
pop
mov
nopl
xchg
mov
adc
loope
int
mov
shlb
push
add
test
pop
aad
push
push
outsb
cs
cmp
cltd
cltd
gs
xchg
es
repnz
push
xchg
cmp
mov
cltd
or
pop
outsl
dec
inc
mov
xchg
testw
adc
cld
push
les
repz
mov
xchg
call
rolb
pop
xlat
fiadds
mov
mov
je
fmulp
mov
sbb
int3
or
outsb
jge
xor
ret
adc
imul
add
pop
inc
xchg
clc
or
dec
xchg
out
in
xchg
insb
dec
push
adc
sub
shrb
nop
inc
inc
movsb
nop
jg
lret
cwtl
mov
bound
mov
test
cmc
out
std
jg
in
push
frstor
int
stc
mov
push
jecxz
out
repz
xlat
lcall
ja
mov
pusha
jle
movsb
fldt
jo
jmp
scas
pop
inc
xchg
es
cmp
inc
or
push
cmc
dec
add
mov
cmp
stos
popf
mov
xchg
pop
adc
push
push
in
int
aad
push
lahf
mov
in
pop
mov
cwtl
sbb
add
mov
in
mov
cld
cmp
test
shl
mov
xchg
rol
mov
fidivs
notl
mul
out
aaa
out
cld
mov
jo
mov
dec
repnz
sub
pop
xorl
scas
ljmp
clc
outsb
loop
fiadds
lock
gs
cmpsb
ret
xchg
adc
cmp
lods
jnp
out
sbb
fstpt
dec
jp
in
mov
dec
loopne
shrb
in
test
inc
push
fs
sub
xor
jnp
adc
lock
dec
pop
cli
sti
mov
mov
sub
imul
mov
adc
or
ljmp
mov
ljmp
into
push
popf
sub
loop
xchg
cmp
dec
adc
and
aam
push
hlt
aaa
outsl
outsl
jae
xchg
mov
and
popf
pop
popa
pop
cmp
mov
mov
mov
jno
shrl
scas
aad
outsb
mov
mov
fidivs
inc
orb
test
daa
popf
adc
imul
mov
mov
add
sub
mov
hlt
addr16
hlt
push
mov
mov
xchg
sbb
xchg
push
pop
adc
leave
cltd
jne
pusha
xor
cmp
stos
sub
adc
fcmovnb
mov
jg
lods
push
lret
jge
dec
add
xlat
xor
popl
push
cwtd
ret
mov
sub
shrl
dec
out
jb
movsb
ss
dec
jo
push
ret
fwait
js
popf
or
dec
sarb
inc
dec
pop
sbb
ja
shl
mov
lcall
outsl
xor
mov
mov
dec
dec
xchg
lcall
lret
xchg
scas
cmp
cwtl
push
sbb
lret
fdivl
fimull
insb
dec
xorb
dec
rorl
xchg
mov
ret
push
sub
nop
fistl
xchg
push
inc
setne
daa
int3
push
mov
popa
mov
sub
mov
mov
push
sub
loopne
mov
enter
jb
ret
adc
pusha
rolb
xor
add
daa
sub
aaa
movsl
add
lods
sub
fdivrl
sub
into
and
lret
mov
lods
fs
pop
notl
push
mov
insl
dec
cmp
and
pop
xchg
xchg
sub
inc
movsl
pop
dec
in
insb
mov
sub
stos
ds
pop
sarb
mov
jbe
bound
cmp
iret
sahf
test
fmulp
pusha
adc
xchg
mov
shlb
fsubrl
mov
sub
sbb
lds
in
loop
ret
loope
push
add
movsl
mov
jno
daa
cld
xchg
mov
sbb
subb
xchg
adc
sub
xchg
out
push
xor
fistps
loope
pop
or
jle
inc
incl
into
rolb
mov
mov
pop
js
shl
dec
mov
and
bound
hlt
adc
xchg
cmp
xor
loop
out
fstpt
inc
sub
stc
jnp
jmp
andl
sbb
inc
adc
mov
push
mov
mov
clc
adc
adc
dec
adc
xchg
out
or
js
out
mov
repnz
shrb
dec
mov
enter
mov
mull
mov
fnstsw
cmc
and
pop
into
stos
adc
inc
push
dec
int
cli
mov
lcall
push
daa
mull
lea
data16
jae
sub
out
popf
xchg
insb
xchg
inc
shlb
call
pop
loope
les
mulb
mov
mov
mov
fldenv
je
push
mov
jecxz
jno
add
dec
push
jns
aam
int
adc
mov
scas
lahf
sbb
dec
xor
das
jne
popa
lds
andl
je
into
mov
out
jmp
fs
jne
adc
lock
dec
dec
out
jmp
adcl
mov
cltd
cwtl
push
dec
cmp
dec
push
repz
xlat
imul
xor
add
or
and
xor
cmpsl
jle
cmpsb
lods
mov
ret
jae
loopne
add
push
and
jb
sbb
or
stos
adc
mov
xor
mov
inc
mov
mov
mov
es
push
xchg
pop
lods
popa
jle
ljmp
xchg
pop
xchg
mov
std
add
arpl
and
outsb
sti
sub
mov
enter
pushf
lea
popf
pop
pop
mov
pop
inc
jbe
cmc
stos
les
pop
push
xchg
jmp
adc
fidivs
xchg
push
dec
imul
sub
mov
sub
sbbb
pop
mov
hlt
push
into
bound
sbb
enter
add
jns
mov
push
mov
hlt
pop
mov
fdiv
rcrl
enter
push
aad
hlt
mov
fdivl
jne
push
and
sbb
xchg
or
pop
shrl
lods
pop
cmp
mov
xchg
lahf
iret
and
rorl
jecxz
xor
sbb
loop
leave
dec
stc
jb
lock
rcr
jo
fildl
jmp
js
mov
aaa
enter
loope
stc
sub
sub
outsb
and
arpl
mov
xor
sub
outsl
inc
push
adc
shrb
lds
aas
sub
in
inc
mov
movsl
mov
push
push
push
ljmp
int3
sti
test
or
inc
mov
mov
call
cmp
and
cmp
add
push
lods
mov
pushf
pop
or
sub
cld
stc
xor
ret
aaa
xlat
inc
dec
mov
ja
jnp
nop
sub
mov
mov
fimuls
xchg
cmovge
aad
jecxz
mov
imul
movsb
hlt
das
and
loop
testl
jns
fldl
pop
pop
sbb
xor
or
in
and
push
mov
xchg
pop
fbstp
and
mov
icebp
std
xlat
add
call
add
jnp
jmp
adc
nopl
cmp
in
sbb
cmpsl
test
test
push
das
outsl
mov
lock
jbe
or
or
push
gs
jae
es
notb
in
stc
mov
rol
decl
test
adc
sub
enter
jbe
jecxz
in
std
cs
shl
xchg
pop
mov
nop
and
aad
aam
cltd
insb
out
popf
sub
jnp
lcall
sbb
and
mov
pop
adc
jl
jbe
mov
push
jo
cld
ljmp
sub
pop
loopne
jo
enter
or
test
mov
outsb
dec
sub
subb
push
movsl
or
movq
jle
dec
les
iret
or
outsb
jl
inc
icebp
sbb
adc
in
xor
xchg
ss
jp
jg
bound
push
cwtl
out
popa
pushf
leave
xorl
add
mov
pop
pop
mov
sub
sub
pop
jge
mov
jae
push
inc
ljmp
cmp
loope
int3
add
mov
xchg
mov
push
clc
jno
mov
std
fists
push
fnsave
sbb
cmp
and
cmpsl
test
xchg
movsb
mov
pop
jnp
sub
sbb
arpl
shlb
ret
mov
dec
xor
stos
inc
dec
fsubrs
jle
pop
and
fisubs
ret
outsb
cwtl
add
jmp
arpl
ss
jno
mov
mov
hlt
jae
pop
and
mov
xor
ret
lods
inc
add
ret
adc
dec
cmpb
cmp
loopne
add
subl
in
jns
outsl
inc
sbb
pushf
inc
scas
cmp
aas
mov
aaa
and
loop
repz
pop
fcoms
pop
int3
cltd
mov
pusha
xor
andl
ficoml
fnstcw
std
leave
pop
rcrb
inc
xlat
test
cmc
popf
adc
adc
and
mov
les
push
add
sbb
xor
lock
add
inc
jbe
inc
or
and
test
or
mov
xor
jmp
dec
pusha
push
repnz
cmp
jp
inc
mov
pop
test
int
push
ret
adcl
nop
cltd
jecxz
leave
cld
add
mov
lcall
lds
scas
ret
pop
out
jae
stos
cmp
lea
cmp
int
ds
xor
cmp
push
cmpsb
shlb
call
xchg
vmovq
sbb
adc
cld
sarl
lea
out
popa
ret
popl
popf
mov
lcall
aad
jmp
push
rcrl
adc
jae
inc
cmp
push
push
push
adc
push
mov
subb
add
pop
adc
cmp
shl
pop
enter
int3
movsl
cmp
daa
jne
stos
push
lcall
insl
sub
and
xchg
and
sub
xchg
add
cmp
mov
ss
in
add
fimull
les
jge
or
xchg
mov
and
xor
push
in
insb
mov
mov
cltd
xor
dec
jl
incb
pop
add
xchg
sbb
push
popa
and
sbb
and
jp
sbb
in
lcall
push
jle
xchg
leave
out
mov
add
pop
add
cmpsl
cmp
mov
enter
in
xchg
add
add
pop
push
inc
sbb
push
pop
scas
jns
mov
adc
jecxz
out
push
lcall
push
shll
push
repnz
add
cmp
xor
pop
mov
stc
cwtl
adc
and
lods
add
loope
and
cmpsb
ret
fxch
scas
push
lahf
and
or
jle
dec
bound
mov
outsb
sbb
and
stos
das
xchg
mov
addb
jns
xor
mov
cwtl
inc
fisttps
iret
daa
lret
dec
leavew
pop
sarl
dec
xchg
pushf
fs
and
out
icebp
ja
aad
mov
xor
popa
cmpsl
pop
push
mov
inc
clc
outsl
xor
dec
cmpb
mov
dec
push
movsb
fbld
cltd
sub
imul
jg
xor
jp
jae
cmp
xchg
xchg
mov
xchg
pop
int
xor
fwait
add
xor
sbb
sahf
pop
test
sub
mov
xor
mulb
mov
fcoml
sub
cmp
fst
mov
sub
jno
sub
fcoms
xchg
jmp
popf
dec
and
mov
mov
inc
das
aad
inc
frstor
ljmp
repz
xchg
sub
repz
nop
orb
or
add
sahf
scas
imul
insl
fistpll
lods
cmp
dec
inc
cmc
lea
adc
shll
mov
push
shl
jle
popa
cmc
and
ljmp
push
adc
ja
lcall
sbb
icebp
enter
and
xchg
in
push
cs
adc
int
mov
sbb
add
leave
fidivrs
push
add
pusha
leave
ljmp
sbb
push
cwtl
rcr
out
loop
mov
cmp
or
add
xor
sub
xchg
jo
inc
jl
sub
fldl
add
pop
or
push
sbb
sub
sub
mov
ja
sbb
repnz
xchg
mov
out
push
jmp
sub
aam
and
sbb
jmp
mov
mov
mov
sub
dec
jecxz
pusha
popfw
lock
or
shll
xchg
fldl
addr16
imul
pushf
cli
inc
pop
test
dec
pop
sub
mov
lock
mov
sub
ljmp
or
stos
cmp
jbe
sahf
hlt
test
inc
pop
mov
adc
mov
or
push
jle
mul
sahf
push
pop
cltd
mov
cmpsb
mov
jnp
dec
popa
into
std
xor
adc
cmp
fisttpll
push
sbb
add
mov
dec
lret
in
clc
loope
mov
in
cli
cmpsl
lret
dec
jmp
and
push
jb
sub
xchg
sbb
pop
inc
loop
pop
addb
mov
mov
mov
pop
sbb
stos
sub
xchg
mov
push
jmp
jb
push
lds
int3
and
rclb
xor
sub
inc
or
or
jmp
inc
inc
pop
mov
fcom
js
or
mov
mov
in
dec
negl
movsb
negl
push
sub
bound
lods
ja
push
test
sahf
js
add
cs
imul
out
or
dec
rcl
dec
ret
scas
daa
movsl
mov
movsb
add
adc
daa
les
ljmp
or
push
fdivrs
aam
lea
mov
in
repnz
add
sbb
nop
push
cmp
adc
packsswb
add
or
sbb
push
xor
call
jo
xor
mov
push
movsb
lcall
sbbb
xchg
dec
ja
rolw
and
pop
jmp
push
mov
jmp
je
jns
or
lret
add
dec
cltd
outsb
pop
test
inc
inc
push
adc
jbe
pop
or
in
stos
sub
cmp
addr16
push
cmp
mov
mov
jle
lock
add
cmp
xor
sbb
and
push
ja
dec
and
fadd
rorb
orb
xchg
lret
push
sbb
pop
and
shlb
arpl
sbb
xor
jge
add
push
push
mov
and
fwait
lret
mov
inc
pushf
sahf
mov
pop
call
cmp
int3
push
and
push
rol
data16
dec
cmp
fldenv
das
cmp
push
lret
jae
inc
test
jl
mov
xchg
les
add
jnp
std
int3
inc
mov
dec
cmpsb
mov
pusha
aam
mov
das
lret
icebp
mov
xchg
push
mov
inc
out
mov
aad
mov
sbb
insl
and
and
xor
sbb
pop
leave
push
cwtl
shll
sahf
mov
inc
sub
dec
arpl
loop
jne
nop
push
call
rcll
add
mov
push
adc
push
test
xor
xor
mov
jo
scas
pop
test
roll
movsb
fs
int
jno
xor
ret
cmpsb
adc
mov
arpl
ja
ds
ret
repz
sti
pop
dec
pop
cmp
je
aaa
or
mov
inc
bound
inc
stc
add
test
mov
pop
jbe
hlt
shl
add
and
imul
sbb
repnz
aaa
mov
pop
pop
add
incl
lret
testb
pop
push
inc
add
mov
negl
pop
push
sarb
inc
mov
test
dec
scas
scas
inc
fisubrl
and
adc
movswl
pop
sub
cmpsb
pop
lods
daa
imul
xchg
jbe
add
jecxz
stos
das
mov
xchg
jmp
mov
inc
lea
fnstsw
hlt
icebp
sub
loopne
iret
pop
jno
cmc
push
int3
out
repz
test
pop
or
push
mov
daa
push
mov
clc
shl
and
test
ret
ds
out
sarb
rclb
jne
mov
lret
fwait
icebp
or
push
movsb
jmp
adc
cmc
mov
sahf
das
add
push
shrb
adc
pop
push
push
loope
add
pop
popa
adc
pushf
push
loope
mov
sub
out
daa
sub
mov
lods
sub
outsb
in
test
xchg
xchg
inc
xchg
and
and
push
psubq
testb
lret
push
test
js
adc
xor
sub
out
ss
jno
dec
xchg
enter
dec
fcompl
add
and
jae
sbb
mov
cmp
jae
jg
sub
fsubr
sbb
aad
rcll
andl
dec
xchg
push
les
mov
jg
inc
mov
sub
mov
dec
in
rcrl
cmp
sarb
jo
das
push
cmp
adc
js
loopne
add
inc
test
dec
aad
sahf
inc
lods
jb
negl
lock
mov
fwait
subb
mov
dec
xchg
mov
stos
lea
or
mov
pushf
enter
int3
push
dec
sti
jmp
sti
fwait
arpl
adc
in
mov
sub
aam
lret
stc
xchg
cld
andb
aas
dec
shrl
sbb
pusha
jnp
cmpsb
sbb
xchg
mov
mov
lods
iret
or
lea
loopne
dec
lahf
jg
lahf
call
mov
lret
dec
add
xor
inc
lock
clc
jbe
stos
mov
push
sbb
sub
mov
sbb
fs
or
pop
xchg
imul
dec
insb
mov
fstpl
aad
cmc
sub
add
xor
mov
fists
mov
cltd
mov
mov
or
insl
lock
lcall
daa
push
xchg
repnz
insl
xor
cmp
mov
push
out
and
loope
and
add
mov
subl
js
dec
insb
ficompl
or
dec
or
adcl
jecxz
adc
jo
mov
dec
adc
jecxz
cmp
cmp
test
jne
xor
or
addb
or
adc
js
out
or
and
jle
shlb
sahf
cmp
add
cmp
das
mov
cs
xorl
jp
dec
popa
repnz
mov
daa
nop
mov
dec
lea
daa
mov
inc
outsb
sub
fnstsw
push
mov
sub
ret
adc
cmp
pop
push
les
jae
bound
pop
rcrl
and
out
push
aaa
jmp
fsts
jns
xchg
cmpsb
push
nop
jg
add
stc
push
mov
xchg
loop
dec
jp
addb
lea
aad
xlat
out
add
lahf
pop
cmp
jmp
addr16
xchg
add
pusha
sub
sbb
lret
mov
mov
pop
push
xor
sbb
enter
adc
xchg
mulb
je
rcll
and
push
fdivrl
out
int3
adc
daa
push
gs
push
in
leave
push
xor
push
lds
repz
cld
movsl
push
out
imul
in
jne
clc
jle
dec
js
enter
dec
dec
fwait
pop
push
mov
and
and
cmp
fldcw
popa
pop
or
cli
push
adc
mov
mov
mov
filds
or
hlt
imul
and
sbb
das
repnz
out
fimull
xchg
int
sub
inc
in
mov
bound
es
or
inc
jl
push
cwtl
subb
add
jg
sbb
sub
xchg
shrl
pusha
sbb
test
lahf
pop
mov
inc
lea
mov
xchg
roll
jge
dec
cld
pusha
pop
sub
cmp
out
sahf
adc
pusha
bound
dec
push
adc
dec
adc
jmp
push
and
imul
call
lea
jae
adc
hlt
push
add
sbb
imul
mov
testb
rorb
repnz
rol
jg
bound
aad
mov
insb
enter
addl
lret
iret
inc
push
push
stos
call
nop
xchg
adc
insb
sub
lea
into
xchg
add
xchg
pop
mov
mov
mov
push
lret
jns
lea
cmp
or
adc
push
push
repz
fcmovne
dec
dec
add
jbe
lds
push
mov
out
loopne
fs
and
adcl
in
adc
arpl
xchg
je
dec
adc
lahf
in
setne
fistl
adc
pop
lea
cmp
rcll
ljmp
adc
or
dec
mov
cmpsl
mov
fmull
addb
rcll
mov
test
add
outsb
xchg
dec
xlat
data16
xor
dec
jge
jbe
adc
inc
dec
out
and
adc
pop
ss
jle
fmuls
add
pusha
mov
into
xchg
popf
fucomi
punpckhbw
cs
hlt
lcall
cmp
movsb
adc
sub
sbb
cmp
ror
or
jnp
mov
xor
jae
push
enter
mov
out
inc
jne
stos
sti
pop
test
rcrl
mov
movsb
lods
aas
iret
pop
les
icebp
lret
push
stos
mov
jl
mov
stos
lods
or
dec
int
mov
jbe
dec
sub
fcomip
mov
or
dec
adc
xlat
or
and
repz
mov
cmp
shrb
adc
data16
pop
sarl
fmul
inc
xchg
add
sbb
mov
aaa
nop
sbb
mov
out
lods
cmpsl
mov
imul
sub
push
mov
xchg
xchg
add
mov
mov
push
fadds
push
mov
lret
aas
sbb
fistpll
sahf
in
fmuls
movlps
mov
daa
or
mov
sub
clc
pop
add
rcll
and
cmpl
cli
jb
out
clc
and
push
arpl
stos
dec
ljmp
into
sub
mov
or
sbb
pcmpeqw
fisttpl
pop
jg
add
mov
or
xchg
aad
iret
outsl
pcmpgtb
subb
daa
inc
fs
cmc
xchg
pop
outsl
enter
repz
bnd
idivl
push
aas
sbb
mov
in
in
pop
stc
xor
cli
pop
or
cmp
xchg
adc
and
sbb
pushf
in
aaa
mov
push
jnp
std
std
adc
les
adc
gs
sbb
lods
cmp
fwait
pop
jno
pushf
jecxz
inc
mov
mov
cmp
sub
fdivrs
pop
rcl
sub
jle
fbld
adc
mov
or
jmp
aaa
lods
mov
pop
lret
fistl
sbb
xchg
push
sub
mov
dec
clc
add
imul
push
mov
pop
jae
or
lcall
and
fisubrs
xor
and
inc
lahf
inc
sahf
lea
dec
jmp
out
aas
ja
fldt
test
inc
jl
sbb
movsl
mov
test
mov
inc
adcl
jno
xor
jmp
xor
mov
ret
test
lock
repnz
jp
mov
repz
mov
rcrb
aam
cmpsl
xchg
sti
in
lea
dec
jle
subl
lds
repnz
push
out
xchg
arpl
sbb
or
push
sbb
addr16
aas
fwait
dec
aad
pop
mov
mov
cwtl
ret
sti
jmp
sahf
mov
xchg
pop
in
rol
inc
xchg
and
clc
repnz
mov
outsb
push
push
lea
pop
cmp
push
outsb
mov
sub
fisttpll
or
movsb
and
sbb
adc
sarl
mov
jle
mov
daa
fcoms
push
lock
add
mov
addr16
mov
cs
push
enter
jmp
pop
jp
jmp
jmp
daa
fists
pop
gs
in
pop
inc
outsb
insl
int3
dec
mov
jbe
and
inc
mov
loopne
cwtl
jnp
fyl2x
aaa
loopne
jo
sti
lret
lcall
and
mov
mov
jae
sahf
push
push
jns
ss
mov
in
inc
mov
lock
sub
lds
jbe
mov
xchg
mov
lods
ja
mov
iret
call
adc
nop
jmp
lahf
lds
out
mov
cmp
hlt
imul
and
cmp
mov
pop
push
dec
in
shl
leave
pop
std
jno
scas
dec
rolb
fisubrs
repnz
rolb
mov
orl
sub
test
push
cs
mov
pusha
int
pop
mov
adc
jo
inc
mov
mov
les
mov
lods
call
pop
mov
mov
jns
ljmp
sub
mov
dec
mov
ds
test
xor
jns
cmp
xchg
jno
movsl
test
outsb
into
jnp
mov
enter
jne
stos
hlt
fdivs
fcmovnbe
roll
jge
shr
pop
xor
orl
push
lock
daa
mov
inc
inc
pop
cmc
adc
dec
mov
paddb
dec
xchg
inc
inc
sarb
sub
out
push
mov
addr16
pop
or
dec
pop
mov
xor
fmull
cmpsb
mov
mov
hlt
mov
gs
aas
lret
es
inc
imul
popa
ffreep
jecxz
and
add
dec
fbld
in
in
shrb
sub
inc
js
mov
fsubs
jbe
negl
gs
xchg
sbb
mov
stc
inc
push
cmp
test
sbb
mov
ss
fistl
lret
bound
and
jp
push
mov
cs
out
mov
aam
shrl
mov
jno
mov
sbb
mov
push
sbb
push
push
adc
pushf
out
and
hlt
sbb
in
add
push
ror
mov
fldl
iret
jecxz
int3
xchg
mov
test
jecxz
push
sbb
mov
sbb
jle
jae
mov
xchg
insb
xchg
popa
or
or
fadds
pusha
push
xchg
pushf
mov
shrb
mov
arpl
dec
jb
jg
jae
ret
jl
cltd
xchg
push
in
adc
adcl
pushf
push
xor
enter
fdivs
xor
mov
sub
cltd
mov
push
subl
jecxz
pusha
mov
rcrb
and
out
movsb
sahf
mov
test
ror
mov
mov
sti
repz
push
mov
dec
int3
adc
outsb
ljmp
cmp
xchg
add
inc
adc
pop
xchg
mov
in
push
hlt
leave
and
mov
and
cmp
in
inc
dec
jb
push
shlb
mov
mov
push
cmp
ror
mov
imul
cmc
and
dec
jno
or
mov
mov
daa
je
rclb
or
lods
addr16
test
outsl
cld
mov
faddl
ss
loopne
mov
inc
stc
lds
jb
fld
mov
xor
or
push
mov
mov
sarb
mov
cld
push
cwtl
jnp
mulb
cmp
push
mov
xlat
out
out
rcrb
test
push
xor
into
mov
fwait
jle
test
dec
test
mov
movsl
inc
pop
pushf
jg
fmuls
out
sbb
and
sti
cmp
js
leave
mov
sahf
jae
push
and
sbb
outsb
jle
addr16
sub
jmp
lcall
jle
repnz
test
xlat
sbb
mov
cmpsl
loopne
cmp
jno
aam
add
sbb
xor
ss
popa
pop
insl
pop
fs
cli
dec
cmp
inc
mov
cmp
xor
pushf
dec
push
xchg
dec
jg
adc
push
push
and
xorl
mov
and
hlt
fimull
sbb
repz
sub
or
rcrb
ss
pop
fwait
sub
pop
inc
int
inc
call
inc
pop
inc
rcl
mov
sub
push
cli
adc
inc
imul
out
sti
sbb
inc
xlat
test
bound
push
cmc
pop
sbb
mov
adc
mov
scas
mov
testl
fcoms
mov
push
std
adc
cmpb
adc
pop
scas
enter
adc
mov
xlat
lret
in
mov
vshufpd
movsb
movsl
sub
pop
jl
ret
mov
and
mov
mov
mov
xchg
cli
inc
xchg
cmc
pop
cld
mov
es
shrb
jae
dec
sbb
cmp
in
inc
or
mov
out
scas
inc
repz
movsl
dec
xchg
std
shlb
inc
push
push
orb
cmpsb
pop
pushf
pop
and
dec
sub
xchg
xchg
push
aad
nop
fcoms
add
cmc
sub
out
xor
mov
mov
ljmp
lock
xchg
movsl
scas
cltd
test
in
ja
aam
or
mov
jle
push
xchg
jle
mov
mov
ror
mov
sbbl
cmc
and
mov
mov
aas
jnp
jge
sub
and
rorl
pop
scas
dec
inc
mov
jns
add
mov
scas
lds
mov
cltd
insb
ds
sbb
mov
cwtl
jns
stc
dec
ret
cli
ficompl
xchg
sbb
sub
sarb
jnp
and
mov
aam
xorb
push
es
and
or
test
test
out
xchg
mov
cmpsb
lea
mov
aaa
dec
mov
insl
xor
sbbl
mov
pop
add
xor
adc
mov
add
jecxz
out
mov
mov
xor
addr16
arpl
sbb
nop
in
mov
adc
mov
mov
aas
xor
xchg
das
mov
out
arpl
lds
sbb
inc
adc
lods
or
fidivs
mov
or
jmp
test
sbb
imul
in
adcl
lahf
adc
ret
dec
repz
xchg
mov
xorl
dec
arpl
lock
sbb
jmp
mov
movsb
test
inc
insl
mov
aas
pop
in
pop
adc
leave
test
mov
mov
idivb
sub
frstor
insb
scas
dec
es
out
fs
push
das
enter
xor
bound
jp
sbb
lret
fimuls
mov
stos
mov
les
cltd
cmpsl
loop
fnsave
testl
add
bound
std
adc
mov
dec
push
sbb
and
or
popf
test
roll
movsl
push
xor
adc
push
pusha
jmp
sub
es
mov
lock
adc
lock
or
faddl
inc
adc
cmpsb
xchg
ja
fs
add
sub
xchg
popa
push
sti
mov
dec
jmp
std
pop
mov
mov
push
push
int
push
mov
push
je
mov
push
dec
xor
mov
jge
adcl
mov
fisubrl
and
hlt
test
ss
mov
xchg
dec
add
das
push
jno
cltd
cmpsl
cmp
jmp
pushf
std
in
jo
xchg
pop
popf
notb
fbld
add
test
lock
enter
repz
sbb
mov
sub
jg
cwtl
xor
jp
clc
ja
sbb
pushf
fcmove
sbb
add
sbb
lret
jno
or
fcmovnu
xchg
mov
or
pushf
xchg
jg
outsl
scas
pop
and
mov
jo
push
sti
mov
add
fdivs
faddl
cmp
imull
jle
imul
cmpsb
sbb
rorb
popa
roll
test
push
mov
out
dec
ljmp
cli
lock
mov
outsl
xor
pop
cmp
cmpsl
xor
das
cmp
test
std
stc
adc
leave
out
lahf
loop
and
add
jo
out
xorb
push
jecxz
or
orb
lods
shll
or
jb
mov
sti
imul
jb
push
in
faddl
jmp
ss
pop
push
into
int3
mov
loopne
cmp
subb
xor
xchg
mov
push
and
in
jae
lods
loope
orb
inc
ret
mov
rcl
adc
cld
add
js
enter
ret
mov
pop
jns
cmp
xchg
rcl
test
fmull
leave
es
and
das
insl
jns
cmpsb
cmpsl
push
cmc
mov
fptan
pushf
shrl
ret
into
jmp
nop
sbbb
cmp
jnp
add
dec
add
push
xor
and
pushf
xor
adc
adc
jns
or
dec
lods
inc
mov
jne
add
dec
scas
mov
mov
pop
jns
add
push
jecxz
jle
andl
jns
sarb
jo
xchg
aaa
pop
cld
arpl
dec
xor
ror
ficomps
sub
clc
in
jge
stos
push
xor
pop
sbb
cmpsb
mov
cmp
aas
xorl
mov
xchg
dec
xchg
popf
jno
xor
pushf
push
push
aaa
mov
cmpsb
jl
bound
and
sahf
imul
int
pushf
outsb
sbb
push
ss
and
jg
psadbw
mov
pusha
movsl
cmp
jecxz
sub
cmpsb
adc
mov
fcoms
cmp
shrb
push
cmp
into
adc
or
adc
xchg
and
dec
xchg
pop
mov
insb
lods
out
lcall
mov
les
mov
lcall
cmp
mov
in
out
cli
ljmp
push
mov
mov
test
jmp
xor
mov
dec
dec
cmp
rol
ss
mov
dec
arpl
xchg
and
xor
insl
int3
mov
inc
inc
aas
pop
and
or
ja
inc
inc
xchg
push
mov
fisubs
addb
push
xor
inc
leave
jno
scas
xor
repnz
es
xor
enter
test
pop
and
out
dec
jle
jno
shl
dec
or
jmp
and
dec
mov
int
mov
ja
rclb
dec
push
js
imul
arpl
xor
sub
lods
cmp
lods
lods
mov
push
andb
dec
add
enter
or
inc
test
pop
mov
dec
dec
pop
pop
sbb
mov
mov
pextrw
in
inc
inc
xchg
push
cmp
jbe
xor
pop
mov
jno
sbb
bound
push
add
fsts
sbb
repnz
fcomip
xchg
dec
int3
or
push
xchg
cmp
cmp
insb
cmp
cmpsl
rcr
leave
mov
and
sbbb
adc
jle
nop
les
dec
ljmp
mov
call
dec
pop
pushf
xor
add
xlat
inc
mov
add
icebp
mov
shrl
outsl
test
cmp
ds
or
pushf
pop
icebp
cmp
pushf
and
or
ljmp
cmpsl
inc
out
test
leave
mov
push
or
fcoml
sub
mov
aaa
mov
insl
outsb
sub
sbb
cwtl
push
mull
lret
push
stc
lds
cld
lret
scas
test
mov
fistpl
and
iret
movsl
sub
jp
pop
mov
in
add
std
xor
push
repnz
inc
xor
es
push
cmpsl
stos
ret
imul
adc
lahf
or
arpl
jmp
pop
add
loop
push
mov
push
lods
subl
movsl
dec
or
mov
pushf
out
cmp
dec
jne
loope
clc
dec
fnstsw
in
mov
pop
test
lret
shlb
inc
cltd
loopne
lea
cltd
jle
ficomps
std
jae
loope
and
mov
shlb
jmp
adcl
popf
jg
outsb
cmpsl
pushf
xchg
xor
insb
je
pop
inc
push
icebp
loope
cli
bound
clc
repz
mov
jl
dec
into
je
adc
jg
xchg
mov
popa
mov
lret
xor
or
je
xor
push
xchg
xchg
shl
imulb
add
push
aam
add
add
inc
dec
mov
aaa
std
push
sti
std
jmp
aaa
mov
inc
aad
and
cmp
and
imul
pop
dec
push
ret
cmova
rolb
adc
cs
or
clc
adc
fwait
mov
int3
jne
dec
imul
ror
jmp
jnp
test
mov
mov
in
movsl
adc
out
in
xchg
pop
loop
fisubrs
fcoml
iret
test
mov
dec
jecxz
lods
lods
push
ja
cmp
and
sbb
adc
or
fldenv
lods
mov
ret
jne
push
mov
mov
lret
popf
cmpsl
cmp
inc
movsb
or
add
aam
fidivs
in
shll
mov
addb
pop
in
and
je
ss
cmp
fstpt
xchg
mov
popf
or
insb
roll
data16
cmc
cmp
add
in
notl
cmp
pop
cltd
sub
mov
mov
scas
mov
xchg
dec
mov
or
test
ja
jg
cwtl
jae
cli
dec
dec
bound
mov
pusha
cltd
adc
inc
sbbl
and
sahf
pop
xchg
ja
es
pop
jbe
out
mov
cmp
xchg
mov
push
xlat
mov
movsb
adc
lods
mov
test
dec
mov
icebp
inc
scas
or
repz
pop
push
dec
lods
mov
test
jns
adc
in
imul
push
pop
push
cmpsl
test
jns
sbb
in
cld
stos
pushf
std
shll
sub
mov
mov
jmp
ret
adc
ud0
sbb
adc
cwtl
in
fidivrl
inc
out
cmp
sub
in
add
jb
lods
mov
test
jge
jge
int3
clc
mov
aam
cli
enter
and
adc
xchg
or
sarl
mov
xchg
test
dec
aad
inc
icebp
jl
int
filds
or
push
xor
in
inc
push
movsb
rcl
cmpsb
mov
les
dec
scas
mov
das
loopne
xor
aam
les
adc
shlb
sbb
lds
ss
scas
dec
mov
ja
div
test
dec
in
jne
mov
add
clc
aas
fmul
dec
sarl
in
mov
imul
add
pop
inc
adc
gs
and
and
out
xchg
call
add
iret
pop
je
sub
out
jg
scas
and
jle
sbb
das
adc
mov
rcr
inc
ret
addr16
clc
jnp
fs
xor
sbb
inc
inc
lret
mov
push
fmuls
clc
int
mov
movlps
int
dec
add
mov
mov
sbb
sbb
sbb
pop
adc
fnstcw
lock
mov
and
cmp
adc
insb
loop
int
pop
rol
cmpsb
cli
mov
push
adc
cmp
jle
movsl
cmpl
pop
cmp
jmp
push
sbb
add
adc
or
push
and
or
pop
pop
pop
shll
imul
bound
lods
stc
pop
or
js
xchg
nop
mov
pop
and
pop
sbb
push
xlat
lahf
fs
lret
sub
adc
xchg
xlat
xchg
out
inc
cmp
cmp
data16
fistl
mov
loope
lea
pop
cmp
add
mov
andl
add
cwtl
inc
ror
bound
sub
cltd
fldt
jae
mov
mulb
lods
adc
xorb
lret
sbb
pop
outsb
insb
fstpt
mov
jns
inc
jo
push
aam
xor
sti
jb
aad
outsb
repnz
xchg
pop
iret
adc
push
inc
test
in
inc
hlt
popf
mov
cmp
jno
nop
cmp
orb
xchg
push
test
mov
in
notb
adc
cmp
outsb
fmulp
push
repz
sub
aad
xchg
out
jp
movsl
xor
jb
lock
xor
movsb
dec
pop
push
push
mov
vmulps
inc
xchg
adc
imul
jne
jge
lcall
pop
std
test
jp
and
lods
pop
mov
int
imul
mov
std
ficomps
into
inc
mov
mov
push
movb
pop
fs
ret
outsl
das
es
inc
or
mov
push
cwtl
repnz
sub
in
rol
mov
loopne
pop
movsb
pop
jns
repnz
dec
mov
adc
inc
mov
bound
in
mov
shll
ja
mov
in
popl
cmpsl
cwtl
cmp
add
cmp
fcmovbe
out
mov
mov
jmp
push
shll
shll
cmpsb
cld
pop
inc
nop
lcall
je
pop
pushf
pop
mov
pop
test
bnd
hlt
xor
lret
cmpsb
xor
adc
dec
ljmp
addr16
icebp
push
test
inc
ret
aaa
je
xorb
out
xchg
cmpsb
lods
imul
lahf
enter
sub
lahf
into
dec
int3
add
cs
sub
sbb
popa
mov
ret
jno
leave
incb
popf
cmpsl
out
mov
aaa
inc
pop
jae
dec
pop
ret
loopne
insl
scas
add
gs
mov
xchg
arpl
or
test
out
push
push
xchg
sbbb
mov
dec
sarb
cmpsl
or
pop
xchg
push
adc
nop
int
fwait
outsl
dec
jmp
xchg
mov
sti
jp
fcomps
adc
mov
jns
push
and
int3
lock
sub
xchg
jnp
fs
lahf
dec
lods
mov
jo
push
into
jg
mov
inc
dec
gs
jo
xchg
mov
pop
dec
push
bound
pop
sbb
sub
fcompl
insl
add
repz
rclb
or
sub
and
mov
push
loopne
jb
sub
scas
popa
sub
xchg
inc
sub
jle
test
mov
sub
out
aas
ds
in
mov
push
xchg
pop
bnd
push
es
sarb
sbb
push
lods
push
mov
test
sbb
dec
push
mov
scas
call
in
push
in
lods
ljmp
in
push
adc
lret
lds
cmp
mov
sub
shr
or
jo
pop
dec
addr16
cmp
sbb
inc
xchg
pop
inc
and
cmc
gs
add
cmp
push
imul
add
fidivrl
fisttpl
daa
and
push
pop
es
cmp
or
xchg
ret
jae
lcall
mov
xor
cmp
pop
les
jbe
mov
data16
mov
xor
repnz
and
test
push
stos
mov
jnp
imul
test
mov
cld
stos
xchg
jmp
lret
rcll
das
push
dec
and
adc
lahf
mov
sub
xchg
lcall
daa
pop
push
rcll
popa
fldt
stc
fldl
lret
mov
stos
sub
xrstors
cs
ret
dec
mov
xor
inc
dec
push
xor
lods
cmp
in
scas
or
mov
cmpsl
adc
cld
je
inc
popf
mov
gs
es
xor
sub
pop
push
daa
ror
cltd
sbb
rcrb
or
xor
sbb
dec
add
jl
sbb
jne
adc
sub
mov
das
clc
xor
popa
les
fidivrs
xlat
push
out
push
dec
mov
mov
insb
inc
or
mov
dec
bound
aaa
mov
dec
test
mov
mov
sbb
mov
stos
cli
xlat
mov
mov
push
adc
inc
in
pop
xchg
pushl
enter
cmpsb
mov
add
mov
push
dec
and
add
xchg
cs
sub
scas
mov
sub
scas
test
ds
sbb
sbb
mov
mov
push
std
mov
scas
jbe
xchg
push
cmp
jbe
subb
lock
push
inc
fdivrl
add
repz
int3
jge
dec
rolb
jns
inc
cld
hlt
popf
aaa
lret
cs
pop
push
sbb
stc
xorb
inc
cmc
aaa
xor
jmp
jo
push
out
and
mov
lock
mov
or
sarb
mov
mov
mov
inc
mov
xor
and
pop
in
dec
cs
cmp
sub
jbe
out
mov
sbb
pop
out
mov
lods
xchg
jo
ds
and
mov
mov
xchg
jbe
out
mov
cwtl
push
mov
dec
divb
pop
addb
scas
pushf
test
add
aas
jae
lods
xacquire
xchg
jo
out
xchg
push
pop
and
sar
mov
xchg
inc
sbb
pop
fs
int
inc
cmp
mov
xchg
pop
or
sbb
movsb
pop
mov
lods
es
movsb
mov
push
imull
sarl
movsb
push
cmp
cmp
mov
repnz
pop
int
lds
aad
sub
xor
pop
aaa
les
dec
mov
jmp
fcmovnbe
mov
mov
loop
jl
in
aad
jne
mov
sub
push
test
jl
and
pop
and
test
lds
cvtdq2ps
jecxz
xchg
mov
cld
in
inc
xchg
mov
aas
or
data16
scas
mov
push
fldcw
adc
iret
idiv
mov
pop
loop
sub
mov
loope
jmp
stos
or
sbb
hlt
popf
leave
out
into
cmp
ja
dec
add
mov
mov
xchg
xor
pop
fildl
pop
fsts
mov
jo
aad
add
dec
int3
popf
addr16
mov
data16
cmp
cmpsl
sbb
dec
pop
mov
lods
xor
sahf
test
dec
or
sti
adc
ds
loope
and
adc
pop
ljmp
cld
sbb
clc
mov
push
cld
shr
jecxz
add
in
sub
imul
xchg
testl
fwait
or
fildll
mov
js
xchg
out
cmp
jae
das
xor
fwait
cmp
nop
cmp
mov
fisttps
dec
mov
imul
fcoml
pop
sbb
not
icebp
push
jb
iret
imul
dec
cli
pop
adc
aas
add
adc
leave
das
inc
dec
mov
addr16
sbb
jge
push
mov
and
add
das
adc
out
ljmp
ss
or
je
or
or
ret
xor
adc
adc
push
shl
mov
sub
hlt
ja
insl
jg
xchg
js
repz
sub
ss
inc
dec
cmc
orb
outsb
les
sti
es
cld
mov
jecxz
sbb
cmpsl
add
push
cmp
mov
stc
xor
and
fsts
jbe
xor
mov
pop
out
mov
jge
cmp
dec
cmpl
data16
mov
fmul
pminsw
sbb
pusha
cmp
xchg
shlb
cmp
add
jnp
rorb
sbb
das
lock
not
xchg
xchg
in
pop
pop
or
in
mov
fdiv
dec
or
sub
pop
outsb
cmc
sub
cmp
lret
xor
mov
mov
int3
mov
mov
fadds
lret
mov
lods
mov
dec
repz
stos
sbb
cmp
addr16
hlt
jne
lods
das
fs
mov
adc
mov
fldt
movsl
aas
les
cmova
adc
imul
pop
in
mov
insb
outsl
fucomp
cmpsb
sbb
lret
add
cmp
fwait
adc
pop
inc
sub
nop
xchg
pop
dec
sbb
pop
mov
pop
sub
out
shll
add
daa
jl
jge
lcall
aas
sub
aas
insb
pop
push
cmpsl
mov
push
arpl
jbe
test
pop
xchg
mov
and
xchg
lods
enter
and
negb
nop
adc
in
in
mov
lds
add
mov
add
popf
mov
test
sbb
mov
pop
fimuls
call
testl
pop
out
outsl
add
and
dec
sub
cli
mov
shrb
jb
popa
inc
andb
out
lea
pop
rcll
cmp
je
pop
pop
dec
jl
sbb
inc
mov
in
mov
fs
loope
cmp
subl
mov
mov
adc
insl
jns
stos
test
insb
std
leave
shlb
out
pop
jbe
test
cli
and
mov
sbb
cmp
pop
or
sub
je
push
jp
pop
pop
aad
cmp
daa
cli
jmp
jae
push
rcrb
pushf
jb
fistpll
mov
mov
add
or
enter
add
mul
addr16
rcrb
fldcw
divb
sub
aaa
negb
jo
mov
mov
stos
sub
mov
dec
sbb
fdivp
dec
jge
clc
xchg
or
adc
js
cld
push
add
jg
or
add
scas
dec
jle
sub
push
mov
add
mov
das
popf
jp
push
bnd
xchg
pop
xor
cmpsb
lds
ror
fnstenv
adc
fiaddl
jmp
rcrb
mov
xorb
push
icebp
adc
aam
in
pop
std
push
arpl
out
fucomip
test
in
dec
inc
shlb
adc
faddl
pusha
lods
insl
ret
adc
test
test
inc
fnstenv
lcall
sub
cmp
loope
cmpsl
jge
push
sub
aad
pop
sbb
jge
fbstp
fidivl
incb
idivb
imul
ret
pop
push
pusha
cmp
mov
aas
mov
rolb
loope
pop
icebp
jmp
test
mov
mov
add
shlb
mov
cli
insb
enter
sub
adc
mov
inc
insb
jl
icebp
fstp
fldt
cli
xchg
movsb
clc
outsb
jb
mov
push
mov
inc
hlt
loope
imul
sbb
mov
mov
mov
cmp
xchg
ret
jbe
push
adc
sbb
sub
addr16
cmc
aam
xor
push
dec
repz
insb
jbe
pusha
out
in
jns
fnstsw
mov
adc
in
adc
dec
pop
cmp
push
mov
std
fldcw
in
mov
ffreep
mov
ljmp
inc
lock
pushf
sub
lods
adc
jne
mov
pop
pop
jmp
fdivrs
or
ret
dec
mov
js
arpl
test
pop
mov
pusha
scas
dec
lock
push
in
adc
pop
jecxz
out
mov
jge
mov
jecxz
add
inc
ja
push
jnp
push
push
jbe
inc
mov
jnp
out
xchg
and
in
jmp
cs
or
sub
jno
adc
pop
inc
dec
xchg
jge
xorb
lret
xor
ret
adc
xorb
adc
adc
xor
pop
xchg
movsl
insl
shll
push
cld
add
ds
out
mov
inc
cmp
xchg
loope
jo
dec
mov
mov
push
fisubl
dec
xlat
std
incl
xchg
imul
std
popf
add
dec
adcb
mov
xchg
test
mov
mov
bound
adc
sarb
cmp
mov
mov
pop
mov
pop
stos
dec
inc
and
mov
inc
fdivrl
push
out
imul
and
loope
ss
push
jb
xchg
test
sbb
jnp
mov
sub
test
test
imul
mov
pop
mov
dec
jmp
hlt
adc
jb
ljmp
push
jl
mov
icebp
test
sub
add
jae
inc
loope
ret
lock
xor
popf
data16
rcrb
aam
pushf
xorb
sbb
call
fdivrs
xchg
add
lret
add
push
test
mov
into
add
xor
test
fnstenv
mov
inc
lret
lea
mov
rcrb
cmp
loope
sub
sub
into
mov
cmpl
jl
cmp
pop
les
jmp
sarl
stc
mov
jl
pop
and
out
mov
lcall
mov
push
cs
adc
or
sbb
dec
cmp
cwtl
or
lock
sub
mov
movsl
push
push
leave
ret
inc
test
adc
push
mov
sbb
jbe
notb
add
imul
pop
stos
xchg
adc
testl
dec
leave
fldenv
lds
nop
mov
aas
adc
aam
adc
shlb
test
mov
jg
sub
mov
test
mov
cwtl
add
mov
jae
dec
mov
push
scas
mov
xor
lret
fdivp
xor
dec
sahf
inc
fucomp
dec
data16
mov
std
jl
shlb
cmpsb
sbbl
stc
cld
jne
mov
aas
add
and
xchg
shl
add
cmp
or
cld
outsb
jo
popa
cmp
xlat
mov
mov
mov
xchg
notb
cmp
cld
insb
pop
lods
mov
fcmovne
addl
push
test
push
and
xor
add
sarl
jbe
stc
mov
les
insl
mov
or
jne
push
out
leave
js
dec
and
in
mov
xchg
in
xor
and
and
sub
dec
into
cli
fucomip
nop
pop
sub
xchg
shrl
pop
sub
and
js
cmp
jbe
decl
out
clc
push
rolb
xchg
push
das
mov
ret
shll
xor
in
cmp
xlat
add
dec
daa
xchg
xchg
leave
aad
loop
and
xor
insl
fldcw
jge
mov
sbb
and
cmp
xlat
pop
cltd
stos
jp
outsl
inc
add
scas
push
cmp
add
fs
cld
xchg
pusha
xchg
mov
mov
sbb
adc
cmc
mov
scas
and
fadd
dec
les
push
aas
cmp
pop
arpl
cmpsl
push
test
andl
pop
sbb
mov
inc
jg
cltd
jb
lret
imul
pop
and
push
loopne
inc
add
xchg
sbb
arpl
insb
aaa
mov
or
sbb
das
test
sbb
in
mull
jmp
aas
sub
or
test
lds
push
test
cs
cs
fsubs
add
dec
adc
test
sbb
or
das
imul
sub
mov
repnz
adc
and
mov
movsl
mov
in
loope
sbb
xchg
clc
das
ja
mov
mov
jo
mov
js
outsb
mov
jo
jl
stc
movsb
aad
xchg
ficomps
fsubs
out
push
dec
sub
popf
js
inc
and
pop
xlat
inc
sub
inc
shl
lcall
divps
and
pop
imul
mov
inc
xchg
pushf
jo
imul
roll
xchg
lret
mov
cmp
in
adc
mov
mov
xchg
into
loopne
dec
xchg
test
clc
and
repnz
out
loop
dec
add
xchg
leave
sbb
roll
cmp
cmp
and
sub
imul
xor
test
push
sahf
add
popa
or
je
pop
clc
add
ljmp
rep
push
aas
stc
rcr
inc
push
aaa
cmpsb
scas
jno
dec
jns
pop
call
lea
mov
xlat
bound
jo
stos
push
mov
cmp
enter
mov
push
mov
push
or
test
pop
xor
test
in
in
in
mov
test
loope
imull
or
pop
je
cmc
nop
pop
leave
je
mov
shrl
add
in
sar
sub
and
push
ss
add
sahf
idiv
mov
fucomi
jb
outsb
aaa
pop
xor
add
ljmp
inc
xor
pop
add
cltd
jns
or
insb
std
sub
iret
mov
loopne
push
inc
xchg
and
pop
jo
addb
add
test
and
push
pushf
fldl
or
sub
mov
cmp
push
mov
xchg
faddl
xor
mov
xor
push
fsts
sbb
jno
outsb
or
adc
inc
outsb
sbb
ljmp
cwtl
pop
push
cmp
mov
loop
sbb
in
xor
dec
es
push
repz
pop
loope
shl
cmp
pop
sbb
fs
sahf
ret
sub
subl
inc
cmpsb
les
roll
push
push
jno
movsb
sub
pushf
ja
test
cmp
loopne
add
mov
adc
adc
sar
ret
enter
in
xor
insb
arpl
sub
test
and
lret
inc
imul
lods
sahf
jnp
adcl
dec
jo
add
scas
in
fbstp
lcall
repz
aad
scas
sub
push
sub
nop
out
and
or
nop
cmp
or
pop
mov
mov
hlt
cmpsl
ss
dec
sbb
inc
xlat
cmpsb
adc
test
loope
or
jmp
xor
out
push
sbb
loopne
adc
sbb
mov
fmull
or
add
aam
adc
sub
or
fists
imul
into
fdivr
cli
stos
fld
scas
int
jb
ror
fdiv
movsb
aas
mov
in
and
lock
and
fmuls
adc
sti
cmpsb
xlat
cmc
adc
xor
aad
xor
mov
or
push
pop
icebp
aad
gs
in
sbb
jnp
sub
in
outsl
jno
push
out
jl
or
mov
dec
inc
push
jno
in
xchg
adc
outsb
cmp
cmp
jno
mov
lods
and
cld
out
js
mov
dec
loop
loop
adc
imul
and
scas
push
out
test
icebp
ficoms
repnz
repnz
push
pop
jae
out
outsb
mov
mov
lcall
int
pop
inc
inc
nop
xchg
pop
push
push
ret
fwait
orb
fstps
fdivrl
enter
cmp
test
js
push
adc
fistl
out
dec
sbb
movsb
push
fidivl
jb
mov
arpl
and
jns
xlat
pop
ja
mov
pop
xchg
faddl
cmp
imul
lahf
push
push
dec
hlt
lds
es
nop
mov
jne
fiadds
mov
sub
mov
das
out
leave
jecxz
dec
mov
push
sbb
cld
mov
pusha
cs
sbb
jp
pop
idivb
jge
xsha256
cmpsb
xchg
adc
xchg
shl
jnp
out
push
cmp
fimull
adc
sub
and
adc
mov
xchg
inc
xrelease
clc
mov
out
and
and
les
inc
mov
push
jne
mov
xorb
jo
cs
xor
int
mov
mov
xchg
dec
mov
std
lock
test
adc
insl
std
jp
pushf
leave
test
jne
data16
es
insl
add
xor
fisttpl
popa
ret
jne
sub
jecxz
pop
add
and
into
adc
arpl
mov
jae
test
jle
pop
xor
aas
cmp
cmp
cltd
out
push
popa
pushf
cmp
bound
mov
xor
cltd
sub
push
adc
jno
icebp
jo
mov
icebp
sub
jmp
push
sub
popf
pop
pop
imul
mov
aam
mov
ljmp
jb
mov
mov
je
rcll
mov
sbb
add
or
jne
jae
mov
cld
xor
mov
cmp
sub
xchg
popa
mov
mull
test
mov
nop
ja
add
addr16
jecxz
flds
insl
lds
rolb
dec
pop
ss
sahf
push
addr16
pop
lcall
pop
push
out
sbb
xor
repnz
and
inc
fisttpl
mov
mov
xchg
inc
and
adc
enter
mov
aad
into
ficomps
shlb
push
sbb
mov
fdiv
shl
jne
imul
mov
pmulhw
pop
dec
and
jne
cmp
inc
xor
dec
fs
lods
jmp
cmp
xor
lea
mov
push
inc
insl
adc
testb
mov
fldl
sub
nop
imul
inc
pop
add
callw
cmp
pusha
insl
movb
mov
fadds
aam
pusha
or
jne
into
inc
fwait
xchg
or
leavew
aaa
fnstenv
mov
xchg
cmp
ret
sub
ds
lret
data16
je
dec
inc
loope
sbb
aad
cmpb
int3
scas
mov
data16
adc
out
jb
pop
push
push
movsl
add
sbb
test
add
pop
mov
in
sbb
ss
add
mov
mov
rorb
in
mov
push
cmp
mov
imul
shl
sub
roll
pop
ss
fs
mov
clc
data16
add
xchg
movb
jae
dec
outsl
sbbl
pushf
ds
xor
stos
mov
enter
scas
fisubrs
lock
cwtl
or
mov
adc
dec
lds
mov
enter
insb
iret
and
popa
pop
mov
aam
getsec
push
leave
movsl
add
mov
xchg
sbb
mov
sub
dec
push
inc
out
cltd
pop
stc
mov
inc
and
nop
mov
jb
clc
loope
cmp
or
lret
pop
fsts
sub
mov
clc
cmp
mov
or
ret
pop
cmp
movsb
and
repnz
xchg
mov
xchg
dec
test
mov
jge
inc
pusha
pop
int
test
ror
push
dec
mov
add
pop
inc
shlb
test
std
inc
mov
mov
sahf
cwtl
xchg
jle
lret
mov
mov
cmp
inc
jns
dec
dec
add
mov
pop
scas
cli
dec
jge
scas
cmpsb
pop
movsb
xchg
scas
adc
loop
es
sbb
ja
mov
sbb
lahf
or
insb
aas
fiadds
lcall
imul
mov
test
lea
sti
xchg
mov
imul
push
cli
popf
pop
xlat
push
and
mov
mov
mov
adc
popa
aad
clc
mov
mov
sbb
aam
and
jns
sbb
lds
jno
es
decl
loope
sbb
mov
xor
shrl
sbb
in
or
dec
sbb
decl
mov
outsl
fnclex
cwtl
cmp
add
and
jno
lret
xor
lock
outsb
adc
jae
iret
in
popa
movsb
xlat
pop
jp
adc
loop
sahf
stos
sbb
or
add
push
lods
jmp
inc
jbe
sqrtps
mov
ret
ss
sub
mov
in
sti
inc
outsb
lahf
cld
mov
inc
mov
jno
cmp
and
not
mul
int3
lock
pop
cmpsb
sbb
in
sarl
data16
outsl
mov
orb
sub
insl
pavgw
dec
and
in
mov
jle
adc
adc
fisubrs
inc
jl
test
popa
sbb
bound
into
in
or
or
pop
sbb
loopne
inc
xchg
pop
gs
sub
jmp
jmp
add
mov
into
fnstsw
push
jp
jno
cmc
dec
inc
add
and
sub
add
nop
cld
dec
test
adc
pop
subl
xor
mov
inc
or
xor
outsb
std
xchg
sub
xchg
add
xchg
cmc
in
push
inc
mov
fpatan
add
jae
popf
imul
and
mov
push
mov
cmp
mov
pop
sub
jo
lcall
jns
inc
iret
add
shr
stc
sti
push
mov
or
push
rcrb
mov
invd
pushf
sub
out
insl
hlt
jecxz
xchg
outsb
pop
lcall
ja
fists
push
je
mov
lea
movl
je
xor
mov
dec
push
xchg
ficoms
adc
out
rclb
cltd
xor
cmp
mov
imul
into
xor
mov
sub
ss
or
dec
aas
je
cli
sub
add
jle
aas
aas
inc
jecxz
in
mov
mov
out
dec
ja
cmp
cs
mov
or
xor
mov
lahf
lods
add
xor
cmp
xchg
jns
lds
mov
and
jmp
inc
pop
jmp
cmp
loop
in
les
add
sub
outsl
pop
push
mov
xchg
inc
xor
or
jg
insb
push
nop
mov
std
push
mov
jb
out
lcall
sub
stos
pop
jle
aaa
cmp
or
lods
je
dec
cltd
mov
test
pop
mov
xchg
xchg
or
ja
notb
mov
dec
push
cmp
ja
xchg
pop
sbb
push
adc
sbb
pop
adc
jno
hlt
loop
sbb
lock
mov
sub
inc
push
repnz
out
dec
in
out
rcrl
out
xchg
mov
and
mov
shrb
pop
fwait
push
mov
insl
sub
inc
popf
es
movsl
push
pop
out
testl
cmp
cmp
insb
push
cmp
popf
push
lods
add
jns
cs
in
sub
cli
inc
xchg
or
sahf
add
dec
repz
insb
mov
ja
repnz
stc
cmpsb
jno
cmp
sub
xlat
mov
jno
sbb
mov
ja
and
out
jge
sbb
stos
sar
xchg
mov
popf
mov
enter
cwtl
push
add
adc
inc
sub
push
jb
push
sub
mov
xor
xor
push
call
push
xchg
jae
push
fdivr
into
or
sub
cli
rorl
outsl
lods
sbb
icebp
mov
outsl
mov
popl
cmp
shrb
ljmp
dec
dec
test
adc
repz
jge
loopne
or
cmp
roll
cmpsb
call
repnz
repnz
jge
outsb
sbb
sub
pop
sbb
sbb
mov
fidivrs
xchg
xchg
mov
repz
inc
rcr
mov
scas
repz
cld
push
dec
push
cmpsl
sbb
cs
push
repz
cmpsl
xchg
inc
scas
add
pop
outsb
mov
cmp
jnp
data16
dec
mov
int
enter
mov
gs
dec
dec
xor
sub
mov
jp
mov
pop
sub
pop
lcall
dec
jmp
ds
or
lret
movb
sub
in
dec
addb
push
mov
aaa
int3
add
mov
cli
jo
push
inc
dec
cmp
mov
insb
add
aaa
push
rcr
movsl
push
dec
test
rol
mov
fnstsw
pop
cld
fwait
push
adcl
sub
mov
pop
scas
sub
or
mov
cmp
out
das
popa
in
insl
cmpsb
in
sbb
sub
out
add
push
je
stos
adc
lret
into
das
test
adcb
pop
jo
in
sub
xchg
sbb
dec
cmpsl
ret
and
jmp
jns
cmp
adc
adc
add
mov
cmp
lret
pusha
cmp
ljmp
push
push
push
clc
das
mov
add
push
sbb
test
fidivrl
sbb
lcall
and
inc
lods
jmp
icebp
sarl
sbb
push
jno
jne
cmp
imulb
cmpsl
fcmovnu
cltd
icebp
inc
cli
bnd
push
daa
dec
rcrb
or
popa
mov
dec
cmp
inc
int
ret
mov
and
pop
cwtl
jmp
dec
cmp
xchg
push
dec
sahf
fwait
or
cmpsl
pusha
pop
mov
adc
push
mov
xchg
xchg
je
and
mov
add
loopne
xchg
ret
subb
pushf
int
pop
inc
mov
ret
outsl
sbbb
push
sarl
mov
test
mov
push
movsb
jmp
test
jo
test
test
fists
mov
mov
ret
sbb
out
mov
cmpsl
ss
push
nop
fimuls
stos
add
loop
xor
jecxz
pop
inc
loopne
mov
das
idivl
cmpsb
hlt
aas
pop
cmp
inc
das
andnps
enter
scas
ja
in
fildll
cwtl
jne
pop
clc
stos
xchg
push
je
int3
jmp
xchg
adc
lea
mov
je
pop
adc
cwtl
xor
xchg
jnp
shl
dec
cmp
or
addr16
add
cltd
popa
scas
sbb
shrl
xchg
aam
dec
push
nop
ja
pop
ficompl
inc
sub
popa
xchg
jl
repz
sti
mov
lret
xor
pop
push
outsb
int
xor
daa
or
not
cmp
jb
pop
xlat
daa
in
dec
jge
mov
dec
sahf
inc
push
daa
mov
stc
mov
pop
mov
and
fisttpl
cvttps2pi
lods
push
sbb
es
dec
out
push
inc
xor
mov
and
fistl
pop
mov
std
mov
sub
arpl
mov
insb
or
fnstcw
lcall
lea
mov
xchg
adc
cmpl
and
scas
pushf
leave
shr
clc
adc
bound
xchg
jle
insb
xchg
xchg
mov
jnp
sbb
fstpl
inc
roll
ret
cmp
lds
into
inc
test
ljmp
stos
das
push
mov
mov
adc
cld
nop
fildll
ja
cmp
sbb
aas
out
and
sbb
inc
repnz
mov
lret
add
test
lahf
xor
push
mov
out
jmp
into
pop
jmp
xchg
jg
push
mov
pop
ds
dec
aas
addr16
cmp
and
adc
or
mov
dec
aaa
mov
ljmp
insl
cmp
stc
mov
mov
cmp
leave
and
hlt
mov
jb
popa
inc
lea
ret
pop
add
lcall
test
fbstp
frstor
test
cmp
aad
cs
jo
push
pop
ljmp
aam
lds
test
inc
leave
cmp
test
pop
in
mov
or
pop
bound
sub
nop
ljmp
cltd
cmp
jg
loop
dec
mov
sahf
mov
lret
or
popf
in
cmp
pop
push
cmp
cmc
xchg
fidivl
jnp
pop
jp
ljmp
mov
rolb
cmp
aas
les
jae
lea
mov
mov
jnp
aad
and
push
call
adc
bound
ret
push
jge
icebp
dec
pop
xor
outsl
sub
jge
dec
or
jge
lds
bound
cmp
mov
xor
mov
mov
add
xchg
sbb
out
mov
or
jbe
mov
movsl
inc
js
xchg
inc
fisubl
push
out
and
ss
jmp
pop
ret
mov
sbb
clc
sub
out
or
icebp
ljmp
test
xorb
call
mov
add
shrl
lods
mov
mov
or
pusha
shll
icebp
fidivl
in
xchg
ljmp
sub
mov
mov
rorl
jne
pushl
pop
push
insl
push
sbb
fnsave
jl
test
cmp
mov
or
insl
xchg
aas
mov
andl
jb
sbb
popl
stc
lods
and
mov
imul
cmp
adc
or
xchg
js
fs
dec
xor
dec
movsb
lret
push
add
jno
daa
call
jge
mov
arpl
movsb
fwait
leave
iret
inc
out
push
js
adc
xchg
push
stos
xchg
lret
cmpsb
scas
jp
es
xchg
aam
out
xor
add
sbb
xchg
xor
shlb
mov
push
push
fwait
call
jecxz
adc
hlt
sbb
mov
xor
add
lods
xchg
cli
inc
jge
in
jne
stos
dec
add
jle
lret
sti
xor
inc
jge
cltd
stos
in
mov
sbb
stos
sahf
leave
add
or
subb
fwait
xlat
xchg
leave
addr16
jecxz
fdivr
sub
cs
shrb
mov
adc
push
sub
jle
lock
clc
lea
repnz
test
jbe
pusha
sub
cld
or
xchg
mov
push
pop
mov
mov
mov
push
iret
subb
call
shlb
xor
mov
aaa
adc
mov
int3
mov
mov
xor
mov
dec
out
fwait
or
dec
scas
sarl
bswap
mov
aad
mov
sub
jmp
stos
or
mov
lods
ret
les
xor
pop
sub
pop
sbb
pop
xchg
push
inc
movsb
pop
fstpt
sbb
mov
mov
fildl
fistpl
jg
push
notb
mov
mov
xchg
arpl
ljmp
mov
sub
sbb
sub
sbb
push
cltd
shll
pop
dec
js
cmp
addr16
xbegin
jnp
fstpt
push
inc
mov
negb
shl
cmp
shlb
lods
in
mov
lret
jno
pop
xor
ss
in
inc
insl
push
pop
push
cld
pop
adc
add
add
add
imul
sbb
cmp
cmp
sti
movsb
jb
rolb
stos
test
rorb
rcl
inc
jae
sahf
sbb
add
scas
xchg
jge
sub
push
mov
icebp
rcr
adc
mov
ss
lds
fiaddl
sahf
add
and
pop
xchg
outsb
iret
xchg
xchg
ret
addr16
out
sub
or
loop
or
cmp
scas
pop
test
arpl
pop
xchg
cwtl
cmp
scas
fucomip
sahf
xchg
dec
es
add
subb
fld
jmp
and
sub
xor
pushf
mov
inc
ss
sub
jne
fistpl
jno
stos
outsb
add
mov
bound
mov
in
or
cmpsb
push
lret
dec
andps
setnp
orb
fbstp
sbb
push
xchg
jmp
loope
and
pop
mov
pop
mov
jbe
jno
xchg
enter
ret
out
mov
inc
pop
leave
das
or
mov
sbb
cs
and
es
in
fldl
or
or
fcompl
scas
jg
xchg
cltd
fnsave
les
sbb
xchg
loopne
lea
cmp
or
daa
cltd
inc
addr16
jmp
stc
mov
mov
add
imul
fldt
dec
and
stos
adc
and
fwait
add
xchg
jmp
push
call
jno
shlb
adc
pop
lret
cmp
push
cmp
adc
xchg
or
repz
lock
mov
bound
shll
iret
movsl
mov
or
ret
repz
push
mov
test
sbb
addl
call
add
imul
aad
shll
pop
js
xchg
pop
inc
mov
mov
mov
mov
sbb
mov
mov
pop
jne
je
dec
ss
test
lea
and
in
mov
gs
push
xchg
dec
adc
test
inc
mov
push
in
and
cmp
pushw
fstpt
out
jb
cmp
jmp
hlt
pop
mov
cli
aad
mov
adc
aad
movsb
sbb
inc
out
cmp
pushf
ret
imul
push
mov
sahf
jnp
test
pop
sbb
cmc
add
jbe
pop
or
pop
sti
xlat
xchg
xor
cmp
xor
pop
inc
lods
pop
adc
push
or
xchg
xor
cmpsb
lods
adc
or
jo
test
shll
lret
or
clc
add
cmp
aam
inc
add
loope
cltd
pop
call
hlt
fstpt
jno
pop
push
movsl
test
shl
sub
fildll
dec
cmp
push
mov
or
fisttpll
jbe
jmp
stos
aad
pop
lret
xor
pop
inc
mov
or
mov
lret
xor
test
ds
fistps
push
pop
and
fidivs
add
shll
cmp
rolb
mov
and
dec
xchg
inc
cmp
mov
pop
in
xor
sbb
sbb
in
jbe
rep
xor
xor
sahf
cltd
insl
pop
ret
jae
out
xor
mov
sahf
cmp
mov
xor
adc
daa
ja
mov
sbbb
mov
mov
sbb
addb
cmp
dec
int
cwtl
or
adc
xchg
jae
and
cmp
sub
stos
mov
js
in
mov
jno
jg
std
xor
mov
pop
dec
push
idiv
inc
test
pop
and
sub
or
mov
sti
sub
or
inc
popf
loopne
add
dec
fidivrs
movsl
or
mov
punpckldq
lds
cmp
stc
push
arpl
cmp
jnp
incb
scas
mov
sbb
xchg
scas
fwait
inc
mov
inc
jae
or
shr
dec
cmp
test
pop
ss
pop
sbb
bound
adc
push
mov
dec
cwtl
hlt
int
in
inc
inc
int3
fdivr
fs
adc
pushf
pop
imul
xchg
jecxz
xchg
inc
push
cmp
jp
mov
pop
push
mov
aaa
xchg
imul
idivb
hlt
outsl
jecxz
inc
dec
mov
xchg
push
stos
aad
or
mov
movsl
xor
ja
xorl
gs
int
das
rcrl
shl
test
add
cli
xor
sub
jge
lahf
inc
popa
inc
mov
jmp
cmp
loope
enter
test
xchg
or
cltd
cmp
inc
mov
decb
jecxz
popa
xor
or
cmp
ret
add
pusha
filds
es
aam
lret
andl
xchg
jnp
push
jne
cwtl
mov
leave
adc
ss
popf
nop
jbe
cmp
pop
stos
in
mov
popa
jp
or
cmp
pop
cmc
scas
cs
cltd
daa
push
dec
scas
scas
sub
aam
xor
clc
int3
test
pop
stc
pop
add
sub
pop
jmp
ret
std
es
jo
test
jbe
stc
pop
push
jb,pn
jmp
xor
adc
pop
fcmove
aas
cmpb
aaa
ja
adc
pop
pop
xchg
call
mov
in
jb
push
ffree
pop
shlb
adc
shrl
mov
ret
add
inc
adc
shll
and
cmp
dec
shr
ret
aad
mov
mov
stc
mov
cmp
icebp
les
jno
adc
pop
js
lea
mov
dec
ss
test
sarb
psadbw
test
repnz
ficomps
daa
shrb
inc
jno
aad
test
mov
dec
pop
das
xchg
xlat
movsb
aas
jge
rol
andl
je
or
sti
test
mov
adc
not
inc
or
adc
and
pop
and
dec
xchg
jecxz
jb
push
xchg
out
sbb
sbb
fs
xchg
in
out
stc
cli
outsl
lret
xor
push
insb
jecxz
sbbl
je
add
cld
in
mov
outsl
push
enter
inc
sub
and
idivb
cmp
outsw
lods
xchg
xchg
fcoms
adc
mov
pop
mov
cmp
jmp
adc
xor
dec
jmp
sbb
fs
sub
into
loop
enter
push
sub
outsb
lock
push
jae
adc
inc
mov
push
fistl
cmp
adc
insl
shl
dec
popl
ds
inc
inc
jg
stos
sbb
test
cld
xor
mov
pop
cltd
xchg
xlat
shlb
lods
jno
shrb
xchg
xlat
pop
jge
jb
xor
test
xlat
pushf
leave
rorb
pop
mov
insl
arpl
adc
jmp
leave
outsl
inc
push
lds
add
test
lock
mov
sti
cwtl
mov
xor
push
mov
inc
xchg
pusha
hlt
das
icebp
pop
lret
addr16
mov
loop
or
mov
sahf
rclb
mov
add
repz
sub
push
nop
cmp
xor
jg
xor
jle
loopne
push
ss
jnp
sti
mov
add
mov
adc
mov
xor
aam
and
stc
mov
test
inc
jb
das
cmp
test
sbb
scas
push
dec
mov
jbe
cmp
jb
add
test
out
pop
jp
dec
mov
fcomps
pop
pop
push
pop
aad
ficompl
in
aam
sub
jbe
cmp
movsb
stos
pop
pop
xor
fs
pop
cmc
cld
flds
dec
pop
rol
cltd
mov
pop
push
xor
mov
popa
cwtl
mov
das
cltd
fildll
mov
jo
mov
push
repnz
scas
jg
or
aaa
push
int3
imul
das
pcmpgtw
scas
out
xchg
je
ret
arpl
ds
xor
rcll
xchg
bswap
mov
push
sub
cs
or
or
in
movsl
insl
xchg
aaa
cmp
xor
clc
pop
xlat
shll
add
scas
xor
aad
subb
adc
fsts
jmp
pop
mov
in
xchg
pop
inc
std
ljmp
adc
test
insl
mov
adc
adc
dec
jecxz
mov
call
sub
int
adc
icebp
aam
adc
dec
mov
nop
lret
outsl
inc
shlb
mov
jmp
dec
lods
push
dec
mov
inc
cli
sbb
int
out
aaa
mov
int
stc
inc
pusha
js
hlt
gs
jne
lret
les
js
leave
in
ja
stc
cmp
movsb
jge
inc
es
sub
jge
int3
xchg
ret
aam
mov
std
pop
testl
sar
iret
fiadds
push
dec
lahf
and
xorb
mov
outsl
rcr
xchg
sahf
jns
jp
mov
add
sub
movsb
mov
rclb
in
cltd
cmpsl
mov
pop
pop
mov
int3
xchg
std
sub
sub
pop
jns
lcall
imul
mov
xor
add
daa
cmp
push
jo
mov
addr16
int
jae
or
and
ljmp
xchg
and
test
xchg
and
ficompl
mov
xchg
push
cmp
pop
sbb
mov
shlb
xor
push
outsl
in
loop
xchg
mov
sbb
lock
lea
inc
fmuls
jnp
push
sbb
jmp
mov
scas
leave
in
sbb
in
iret
pop
pop
sbbb
push
xchg
inc
pop
dec
clc
popa
neg
xchg
and
and
jge
mov
std
movsb
loop
dec
cmc
mov
gs
or
pop
cmp
push
xchg
out
stos
rcl
in
icebp
xorb
imul
mov
push
stos
mov
clc
or
jb
icebp
hlt
iret
pop
jb
mov
shrb
adc
dec
pop
jae
sub
aaa
mov
or
and
mov
mov
dec
or
xor
sub
stos
push
lahf
and
mov
je
fimull
pop
cmp
xor
dec
fs
xor
and
sub
mov
aaa
xor
add
and
push
pop
mov
inc
cmp
shrl
or
push
out
push
lea
mov
mov
cltd
sub
rcr
loopne
push
pusha
adc
add
sarb
mov
mov
jo
adc
mov
popa
in
xchg
test
lods
ret
popa
adc
xor
or
sahf
repz
out
out
jae
shl
call
sbb
inc
dec
shll
sub
and
jne
adc
rcrl
inc
mov
test
icebp
in
stc
xchg
dec
mov
sub
sbb
push
ja
pop
add
sub
adc
outsb
pop
bound
iret
pushf
cmp
cmpsb
add
pusha
push
shr
push
test
fdivl
sbb
addb
mov
sub
bound
and
sub
cmp
test
dec
aad
xor
and
jns
adc
es
jb
les
inc
out
in
xchg
leave
imul
lds
insl
sahf
iret
dec
sub
push
aaa
scas
cmp
out
pop
ss
push
add
mov
fldl
jecxz
cli
clc
ja
sbb
int
in
mov
inc
jno
push
sub
lahf
push
sub
mov
push
inc
jle
out
dec
out
xchg
cmpsl
les
arpl
dec
jmp
shl
pop
jno
mov
je
lock
pop
ret
mov
pop
xchg
and
out
orl
dec
ret
lret
pop
sub
inc
stc
jbe
fcompl
add
xor
test
call
scas
shl
mov
or
pop
sti
out
push
notb
and
xrelease
mov
addr16
dec
sbb
mov
jb
or
sub
sub
imul
mov
cmp
das
mov
adc
pop
jle
imul
in
mov
mov
lahf
fsin
sbb
or
test
sahf
dec
sbb
and
adc
test
loop
and
xor
adc
xchg
int3
aaa
inc
dec
mov
daa
xor
in
jnp
dec
aaa
push
fsubrs
jge
fstl
inc
xchg
jb
out
mov
iret
clc
add
aas
add
xor
xchg
fcomip
jbe,pn
or
add
jmp
insb
fwait
test
shl
jg
jo
add
push
pop
pop
jo
xor
jnp
test
xor
push
call
std
setnp
xor
aam
cmc
pop
push
out
mov
shr
add
lods
xchg
and
aam
ljmp
cwtl
lahf
fnstenv
xchg
push
cmp
lahf
sub
in
fcompl
ss
stos
jno
pop
lahf
je
sbb
dec
xorb
push
inc
fcmovnu
out
cs
pushf
fimull
rcrb
repnz
repnz
into
mov
pop
sub
add
cmp
adc
lret
jne
stc
sbb
mov
dec
je
and
iret
ror
sub
pop
enter
mov
rorb
inc
push
xchg
shll
shr
sbb
ret
jecxz
inc
pop
pop
ret
rcl
dec
lock
cmp
in
mov
and
fcmovnu
mov
mov
dec
sbb
jbe
mov
or
mov
fdivs
mov
push
push
outsb
scas
movd
lret
std
daa
lods
cmp
push
movsl
fbstp
mov
sub
sub
and
rorb
lcall
aam
pop
and
or
sahf
cmpsl
jb
outsl
sbb
jmp
push
xchg
clc
cwtl
pop
mov
xlat
mov
or
pop
push
pushf
sahf
dec
ja
and
fnstcw
sbb
int
sbb
shrl
push
aad
fwait
or
add
sahf
mov
test
icebp
jbe
push
test
push
jne
mov
pop
push
scas
dec
dec
mov
int3
xchg
imul
mov
adcl
xchg
push
xchg
fcomp
sarl
daa
mov
aas
mov
xor
adc
loope
imul
rolb
or
rorb
cmc
lahf
sarb
jp
scas
fs
out
mov
or
xchg
xor
pop
mov
repnz
std
clc
pop
sbb
xlat
lock
push
mov
sti
mov
jne
outsl
dec
pop
clc
mov
lcall
aam
bnd
mov
lret
push
mov
mov
incl
fwait
ret
mov
mov
or
sub
jp
lds
cli
ja
pushf
test
push
repnz
sbb
push
push
in
sti
jl
mov
ret
sbb
dec
out
mov
xchg
inc
fdivrs
jmp
mov
mov
push
in
push
cmp
cmp
repz
jmp
repz
je
or
adc
pop
sbb
std
out
fwait
push
mov
or
xor
pop
push
pop
sub
ss
jle
dec
mov
push
pop
mov
push
stos
out
inc
jno
fucomi
xor
inc
sub
cmpsb
stc
sub
les
int
ja
cmp
cli
sub
add
loope
int
outsl
mov
pop
in
mov
adc
sahf
mov
ljmp
xchg
pop
xor
mov
int3
movsl
jmp
cli
popa
mov
mov
int3
rorl
out
fnstenv
aam
pop
add
push
hlt
mov
daa
pop
bound
mov
or
inc
jecxz
pop
movsl
arpl
cs
rcl
lock
aad
test
pushf
mov
outsl
mov
mov
test
xor
mov
push
hlt
sbb
in
lock
and
lds
insl
or
lea
cmp
mov
sarb
xchg
push
clc
push
lret
dec
jae
loop
mov
adc
add
sub
adc
mov
fiadds
and
shll
data16
adc
inc
maxps
dec
mov
push
arpl
xlat
addb
gs
movsb
mov
xor
stos
sub
dec
or
cmpsb
and
pop
mov
gs
pop
jmp
sub
in
push
fsubs
mov
mov
in
jg
mov
repz
mov
push
out
sub
mov
mov
ret
frstor
mov
push
andl
cltd
mov
das
popf
faddl
push
loop
and
ret
xor
std
jle
mov
psubd
sub
add
or
clc
ljmp
mov
mov
mov
inc
fsts
pop
xchg
mov
dec
cmp
or
sub
shr
aad
jecxz
inc
push
xchg
pushf
in
addr16
adc
nop
cmp
lea
shlb
mov
fisubrs
movsl
and
loope
je
fs
popa
and
sub
flds
push
divb
sbb
clc
add
or
outsl
cmpsl
cmpb
sub
cld
test
xor
repz
pop
pushf
or
cs
test
repz
mull
mov
sti
pop
push
mov
test
xchg
ds
inc
rolb
and
cmp
aam
imul
ret
lock
aaa
add
add
adc
mul
aam
rorl
in
sbb
jmp
popa
jne
scas
adc
mov
data16
xchg
xlat
movsb
ljmp
pop
cmpl
outsl
add
mov
out
pushf
test
imul
dec
push
mov
sbb
adc
push
jno
dec
push
cmp
ja
dec
jmp
mov
fs
push
lods
sbb
add
je
pop
mov
int3
cli
loopne
push
inc
inc
arpl
push
lods
imul
pop
loop
fpatan
xor
lret
mov
and
cmp
xchg
cltd
cli
sub
xchg
sti
inc
mov
mov
pusha
dec
cmp
fnstenv
add
out
push
push
jecxz
sarb
aas
in
lock
mov
sub
add
test
stos
pop
pop
mov
pop
xor
std
xchg
leave
das
cmp
mov
mov
or
in
data16
mov
mov
imul
add
mov
cmc
or
inc
and
int
sbb
fabs
imul
and
dec
iret
ucomiss
sbb
inc
pop
ss
dec
inc
pop
xchg
inc
js
pusha
mov
xor
cltd
jge
popa
adc
scas
nop
and
dec
enter
cli
xchg
push
sbb
shr
xor
scas
stos
fst
mov
sahf
fnstsw
movsb
data16
add
pop
stc
push
sub
inc
pushl
fldcw
test
pusha
aad
adc
and
push
enter
add
test
call
cmpsl
push
lret
or
mov
push
fs
insb
sbb
cltd
inc
dec
adc
test
fnstcw
nop
jmp
sub
movsl
xlat
cltd
mov
lret
lock
dec
mov
ljmp
sub
sbb
fidivrl
sub
sub
cmp
imul
repz
lock
pop
or
and
lahf
xor
inc
cmpsl
stos
xchg
mov
orl
push
mov
adc
je
loop
in
mov
xchg
mov
mov
adc
stos
xchg
dec
cmpsb
jmp
jb
test
int
outsl
bound
xchg
mov
ja
not
cmp
leave
sub
lahf
sbbb
pop
insl
ret
and
pop
je
cmpsl
sbb
les
add
lahf
dec
dec
xlat
mov
cs
leave
ss
sti
or
pop
int3
loopne
pusha
negl
mov
nop
fldt
adc
jl
dec
sub
cltd
lds
mov
xchg
add
in
lods
popa
inc
pushf
cs
imul
inc
aaa
push
sbb
xor
decb
mov
call
cmc
sub
pushf
add
jo
pop
into
orb
adc
inc
js
lret
cli
sub
js
xor
inc
xor
lcall
test
push
and
cvtps2pd
pop
mov
jo
pop
push
adc
xchg
xor
adc
lahf
test
bnd
jle
cmpsl
out
xor
gs
add
fcmove
icebp
jmp
push
or
fmull
adc
mov
mov
ror
mov
bound
test
div
sbbb
mov
int3
mov
adc
ja
mulps
mov
cmove
gs
cvttps2pi
gs
jmp
cmp
imul
int
mov
cmp
jg
jo
lret
sbb
clc
mov
das
aad
pop
cs
mov
gs
xchg
add
sub
test
out
dec
jg
xchg
xchg
lret
outsb
imul
ss
xchg
and
inc
pop
sub
rcl
mov
pop
ds
loope
pop
test
cmc
outsl
mov
aaa
or
sbb
ficomps
gs
es
call
fucomi
sub
repnz
cltd
mov
jge
cli
mov
or
and
push
sbb
xlat
mov
or
mov
jle
lds
cs
scas
aas
stos
test
popa
cmc
sbb
out
negl
sbb
inc
and
sub
test
cmp
push
pand
xchg
jmp
icebp
and
mov
sub
call
mov
popa
push
lret
jmp
fs
pop
mov
adc
fdivrl
push
add
ret
sbb
cmpb
out
in
or
les
lret
xor
inc
sarb
out
faddl
jl
ds
xor
jmp
and
xchg
add
mov
push
fiadds
pusha
sbb
push
mov
add
call
adc
adc
sti
jl
mov
cmp
xchg
sub
xchg
mov
fsts
xor
push
dec
inc
xchg
jbe
int3
outsl
sub
push
mov
cmp
gs
fisubl
cmp
cmpsb
dec
pusha
sbb
js
fs
jns
gs
mov
pop
icebp
sub
insl
call
and
test
adc
pop
jmp
mov
jae
es
mov
std
push
cmpsl
in
mov
cmp
cmp
push
dec
cmp
aad
sahf
std
mov
int
pop
add
mov
insb
scas
or
cmpsl
stos
testl
jmp
notb
rorl
ret
dec
dec
xchg
cmp
or
dec
cmp
push
das
dec
mov
cmc
lds
iret
ljmp
enter
xor
repz
pop
jmp
ja
jo
ss
fdivs
jno
shl
and
push
fistps
jns
and
gs
insb
xchg
or
push
push
mov
ret
in
loopne
repz
inc
ret
cmp
mov
mov
loop
stc
sbb
in
in
sbb
push
push
add
mulb
mov
cld
jl
fidivs
add
orb
gs
jmp
fs
push
jno
mov
mov
mov
out
cmp
in
xor
xchg
push
jo
mov
test
out
adc
filds
lea
jmp
icebp
imul
jle
mov
pop
lcall
insb
aam
gs
sub
push
leave
arpl
inc
xchg
mov
sahf
lahf
movq
xor
xor
pop
dec
imul
and
adc
mov
jbe
fiadds
insb
jmp
jbe
popa
mov
ja
dec
inc
pop
jmp
or
add
push
cmc
daa
mov
sub
push
jle
jmp
stos
cmpsl
xor
sti
pop
imul
mov
daa
pop
ljmp
sahf
or
pop
mov
mov
inc
mov
orb
jg
cli
les
and
into
out
ud0
fiaddl
push
and
jle
ja
ds
push
mov
mov
andb
and
jnp
jae
fcoml
sar
cmpsb
ja
push
adc
xor
jle
inc
pop
stos
inc
in
sbb
mov
mov
imul
adc
in
mov
rorb
or
adc
scas
jbe
arpl
enter
mov
je
adc
cmpsl
push
pop
ret
loope
mov
out
pop
adc
je
adc
sub
cmp
push
mov
mov
sub
mov
cmp
push
outsl
insl
ljmp
ljmp
int
sbb
fisttpl
or
pop
jg
mov
es
outsl
mov
push
daa
push
cmp
sbb
dec
or
mov
inc
xchg
icebp
sub
push
mov
in
add
aad
clc
cld
cmp
mov
insb
push
adc
hlt
jl
sub
mov
add
das
or
add
pop
xchg
notb
xor
dec
int
fdivrp
jo
decb
xor
pop
dec
push
inc
insl
ret
xchg
adc
aad
arpl
imull
adc
aas
pusha
in
inc
cmp
mov
leave
mov
in
xor
inc
mov
pop
shlb
sub
xor
jne
loope,pn
jmp
inc
fisubrs
fld
xchg
jl
mov
scas
aas
adc
jns
mov
or
jbe
mov
sbb
out
pop
mov
stos
jecxz
cmp
loopne
push
mov
push
push
adc
xor
adc
pop
arpl
mov
loopne
lock
or
adc
xchg
jnp
imul
jg
mov
mov
jmp
js
jg
sti
lods
xor
inc
xchg
add
das
xchg
sub
pusha
add
push
mov
sbb
lea
sub
fisubl
inc
mov
xor
and
pushf
cmp
mov
js
icebp
shlb
and
int3
mov
call
andl
mov
mov
push
sbb
xor
out
adc
outsb
pop
or
fidivs
inc
xchg
fwait
and
jp
xchg
xchg
popa
xchg
or
sub
xor
push
int
cmc
inc
fs
icebp
scas
cmp
out
sub
jno
dec
sub
fisubrl
out
cmp
mov
push
mov
std
cmovae
shll
push
pop
aam
mov
scas
lret
cmp
xchg
push
lcall
fwait
outsb
movsb
aaa
aaa
pop
cmp
shrb
push
jp
leave
pop
pop
xchg
inc
daa
int3
mov
das
push
gs
stos
jmp
xorb
dec
jmp
rcll
test
mov
inc
mov
repz
dec
bound
mov
out
inc
xchg
add
push
xchg
lods
fwait
test
push
push
add
je
mov
fcoml
adc
mov
push
push
int
cmp
push
cmp
pop
test
push
lods
or
fimuls
xchg
cmp
lods
xor
inc
push
rcrl
in
mov
call
push
or
outsb
mov
loop
iret
pop
mov
popa
pop
arpl
stc
out
sub
sbb
pop
jp
insb
mov
rorl
push
inc
ds
adc
outsl
imul
imul
data16
add
xchg
popf
mov
push
push
or
repz
jo
or
pop
mov
or
rep
jns
loopne
iret
enter
cs
shlb
outsl
push
cmp
lcall
dec
xor
icebp
mov
out
insb
popf
std
add
fcomp
push
je
jp
pop
push
mov
and
repnz
or
jp
xchg
xor
in
mov
push
cmp
jo
gs
mov
dec
imul
pop
add
jle
enter
addr16
imul
pop
insb
mov
mov
addr16
jb
jnp
cmp
mov
ret
cmp
into
jl
xor
mov
out
mov
jb
jo
push
stos
insl
sub
lret
fiadds
jne
push
jae
orl
cwtl
mov
pop
mov
inc
jge
xchg
scas
mov
fisttpl
push
xor
fdivrl
mov
xchg
mov
lcall
or
add
lock
ret
repz
dec
inc
test
cmpb
jle
and
mov
cltd
add
add
pop
aam
sbb
jno
sti
lahf
mov
out
faddl
mov
int3
dec
nop
adc
mov
sub
xchg
and
xchg
ljmp
outsb
xchg
mov
add
in
lret
dec
xchg
cs
icebp
pop
idivb
mov
xchg
jb
push
and
mov
or
mov
repnz
jns
or
sbb
inc
push
jne
mov
push
dec
pop
push
mov
roll
rcr
xor
xor
repz
mov
mov
push
push
repz
daa
adc
pop
mov
jo
movsl
and
cmp
bound
repnz
mov
mov
add
dec
push
add
subb
push
sub
iret
rorb
inc
sti
repnz
xchg
pop
adc
es
cmp
mov
push
orb
mov
jecxz
cmp
or
je
sub
sub
fisubs
cwtl
pop
pop
out
das
leave
inc
in
or
cmp
mov
gs
inc
je
fcmovne
inc
pop
es
rol
push
cmp
loope
lods
jmp
push
andb
sti
pop
xchg
lods
xchg
dec
push
rol
pop
shl
sbbl
mov
out
adc
mov
inc
xor
inc
push
aaa
mov
sbb
adc
sbb
insl
push
or
mov
or
aad
lcall
and
iret
aam
lods
jecxz
pop
mov
jns
inc
cmc
nop
jge
mov
jge
pop
movsl
mov
sub
mov
and
adc
adc
scas
push
cmp
sub
mov
lods
sbb
aas
pop
jmp
jle
mov
mov
imul
push
inc
mov
mov
sub
imul
add
mov
dec
xchg
jb
clc
or
aam
push
inc
sahf
and
cmp
paddsw
test
xor
sbb
ret
test
pop
dec
jg
clc
xor
or
and
ss
xchg
mov
dec
testl
nop
xchg
lea
xchg
xchg
jge
cmp
dec
lcall
stos
mov
add
jg
in
xchg
sbb
mov
in
out
les
fldl
outsb
lds
xchg
iret
mov
sbb
cmp
xchg
mov
fimull
pop
dec
jmp
cmp
aas
dec
gs
jle
rorl
mov
add
mov
inc
cmp
jo
scas
out
in
xlat
pop
in
xlat
fisttps
lret
aaa
sbb
add
stos
aaa
or
stos
pushf
lods
repnz
ja
ret
cmp
push
adc
scas
jnp
lcall
and
adc
and
pop
inc
subl
push
cwtl
and
push
dec
push
pushf
mov
jp
add
aam
bound
mov
nop
lret
xor
cmpsl
sub
ret
mov
test
pop
adc
cmp
xor
jo
push
mov
cltd
sub
dec
jne
mov
cwtl
mov
adc
out
lods
xchg
repz
out
sti
sbbl
push
test
in
aad
clc
dec
xor
pusha
addr16
cmpsl
ret
out
outsb
aad
mov
mov
in
jb
pop
call
fwait
test
add
rcl
sbb
dec
xchg
push
das
sbb
and
cwtl
lea
xchg
cmp
push
xchg
dec
dec
pop
insl
sti
stos
xorb
mov
mov
inc
test
leave
fadds
inc
shr
fidivl
xlat
je
or
call
push
mov
pop
aaa
iret
push
jp
cmp
inc
jne
push
pop
outsb
and
add
aam
cmp
lea
add
iret
leave
mov
daa
imul
sbb
incb
std
adc
xchg
pop
sahf
mov
mov
leave
cmp
or
or
mov
add
cmp
mov
dec
xchg
gs
into
pop
cli
rcrl
imul
mov
dec
add
aas
loope
test
clc
fwait
cmpb
fwait
loop
subb
lds
and
mov
movsl
mov
sahf
idivb
mov
sti
fs
ljmp
sub
dec
jp
jmp
pop
push
fnsave
cmp
sar
xorl
in
mov
mov
in
in
roll
cmpsl
loopne
xor
scas
jg
fwait
mov
xchg
sub
in
dec
aas
mov
xor
js,pn
add
jmp
mov
insb
or
jmp
mov
pop
movsb
imul
shrl
xor
imull
insl
and
push
fisttps
xor
cmp
lock
call
fiaddl
adc
add
sbb
sub
pop
shlb
cmc
sub
lods
rcrb
mov
outsb
decl
scas
mov
mov
cmp
cmc
daa
dec
lods
shrl
xchg
add
movsl
in
mov
int
out
add
insl
lods
inc
sbb
pop
pop
xor
shlb
repnz
mov
fimuls
dec
jl
jl
xchg
or
push
or
push
into
loopne
cltd
jge
push
cwtl
int3
outsl
lock
push
and
add
call
sbb
xchg
jmp
dec
sub
mov
xchg
jl
add
push
xchg
jg
insb
or
dec
jne
adc
or
dec
push
add
jmp
icebp
dec
cltd
xchg
push
add
ret
mov
aas
cmp
popf
mov
shrl
push
sub
idivl
push
sahf
mov
scas
insl
sti
data16
add
sti
cli
jle
xor
cltd
xchg
std
popa
mov
cltd
pop
das
aaa
cltd
loopne,pn
out
jo
rorb
pop
fadds
popa
scas
jno
lahf
cli
outsl
cmp
push
push
jae
in
das
pop
scas
inc
out
xchg
and
stos
hlt
mov
adc
fdivl
xchg
shl
inc
mov
sbb
adc
mov
cmp
rcrl
and
bound
pop
and
mov
adcl
test
pop
and
shrb
cld
adc
clc
sbb
xchg
pusha
pop
popf
aad
inc
pop
cwtl
jg
bound
lods
daa
push
pop
jg
xor
cltd
mov
filds
xchg
out
scas
jnp
lock
pop
dec
loope
shl
lock
fstps
jb
jge
xor
adc
sbb
loope
les
adc
int
sbb
jns
mov
cmp
push
icebp
cmpsb
mov
adc
xchg
jmp
int
cmp
mov
hlt
in
adc
ret
arpl
out
mov
jecxz
pop
and
roll
adc
push
jmp
lret
lret
movsb
repnz
loop
adc
in
fsts
xor
ret
test
mov
mov
fadd
dec
rolb
jg
incb
xchg
in
sbb
popf
jo
out
xchg
dec
popa
pop
fsubl
pop
incl
xor
mov
aam
dec
stos
cmpsl
shlb
sbb
mov
mov
jbe
dec
push
scas
loop
and
leave
mov
gs
sbb
roll
lock
mov
mov
mov
jo
roll
inc
xor
and
cltd
mov
shlb
inc
mov
lret
and
pop
jne
addr16
pop
mov
addr16
lds
leave
cmp
jb
xor
fucomp
pop
shll
test
jmp
aad
fidivrl
stos
xor
jle
test
cmp
mov
lea
les
hlt
aad
enter
cmp
xchg
cltd
or
pop
dec
fstpl
xchg
sub
cmp
fs
dec
add
push
clc
shr
dec
xlat
and
add
jae
push
push
fimull
push
in
mov
xor
mov
xchg
cwtl
pusha
xchg
add
test
dec
push
xor
jmp
jae
mov
into
or
sti
push
pop
andb
test
mov
pop
stos
pop
popa
mov
fsubrl
push
daa
dec
adcb
cmp
dec
enter
push
sub
push
push
or
dec
jle
adc
jle
sub
out
or
push
add
lret
fwait
aaa
aaa
cmp
movsl
inc
sub
popa
mov
aam
push
sbb
pop
inc
xchg
pop
cmp
add
ret
inc
iret
push
cltd
repnz
mov
aaa
inc
sbb
dec
jmp
sbb
adc
mov
adc
lret
xlat
popf
iret
cmp
insl
fsubrl
sub
xchg
xor
sbb
mov
mov
lcall
sahf
xor
ret
inc
push
fcom
jge
cmp
addr16
rorl
insb
mov
xchg
out
lds
imul
adc
push
movb
pop
push
jp
sbb
cmp
adc
mov
inc
cmpsl
clc
sub
xor
sub
loopne
out
lds
out
push
adc
movsb
pop
fisttps
push
inc
loop
in
imul
ret
fsub
jno
pop
sti
insb
jp
xchg
dec
pusha
sbb
fs
iret
imul
outsb
push
lods
and
in
add
inc
test
xor
out
daa
test
mov
outsb
xor
repnz
divb
es
ljmp
mov
or
push
mov
xor
cmpsb
pushf
xchg
icebp
lock
enter
outsb
stos
push
dec
xlat
sub
ja
push
mov
and
mov
dec
push
sub
jle
in
push
mov
or
jmp
cmpsb
jns
xor
daa
ret
leave
lds
sub
sahf
xchg
mov
loope
mov
int3
and
call
div
mov
jns
mov
rclb
aaa
adc
cli
dec
pushf
xor
loop
test
cmp
pop
mov
lock
push
push
sahf
ljmp
orl
add
jae
fmuls
pop
jns
adc
sbbb
cmp
loopne
sub
mov
or
test
out
xor
movsl
adc
cmp
xchg
call
push
push
jae
scas
rcr
push
loope
xchg
cmp
outsb
pop
lds
lret
aas
jmp
xor
jae
xor
mov
dec
jbe
pop
inc
loop
shll
dec
push
adc
dec
shlb
fidivrl
int3
push
mov
nop
xor
or
inc
out
enter
xchg
add
cmp
add
int3
mov
in
push
inc
xor
lods
jne
imulb
inc
mov
cli
add
sbb
out
iret
sbb
xor
xchg
sbb
outsb
aaa
adc
cmp
icebp
cmp
xchg
jecxz
ljmp
mov
dec
clc
cmp
mov
nop
adc
loop
jp
mov
inc
jmp
cmpsb
mov
xchg
insl
ja
cmp
or
repnz
pop
mov
fwait
add
popf
push
push
stos
mov
nop
and
and
jp
sub
lahf
lcall
dec
aad
lock
add
loopne
addb
dec
mov
testl
ljmp
stc
sar
fs
xor
shll
push
mov
es
aas
aam
jne
sub
std
scas
mov
push
rcll
lahf
test
push
fstps
or
inc
mov
xor
aad
inc
ljmp
test
xor
out
cmc
inc
jge
popa
stc
int
xchg
inc
shr
rorb
fwait
addr16
adcl
adc
mov
dec
loopne
sar
xor
clc
push
pusha
aad
jl
xchg
sbb
outsb
in
add
popf
es
aad
mov
and
lret
jbe
dec
sub
and
pushf
fistpl
pop
lods
leave
clc
xor
sbb
xor
pop
or
pop
pop
fdivrs
sbb
dec
mov
mov
inc
sub
add
cmpb
pop
mov
adc
push
clc
imul
cmpsb
call
into
cmc
sbb
repz
pop
je
sti
sbb
cmp
cmp
sub
or
mov
gs
adc
push
jmp
int
sub
cmp
lret
xchg
dec
in
movaps
dec
mov
popf
mov
test
and
inc
sbb
mov
fstpt
shll
popa
sbb
xchg
jns
inc
pusha
push
mov
icebp
mov
inc
stos
cmpsl
enter
cmp
pop
int
pop
inc
add
out
ds
cwtl
inc
push
cld
mov
ds
movsb
sbb
mov
cmp
repz
dec
sub
or
fcmovb
mov
out
jge
mov
mov
fwait
push
roll
mov
cli
inc
es
loopne
jae
mov
pop
nop
clc
rolb
mov
xor
ss
push
mov
and
mov
test
in
xchg
mov
pusha
dec
test
push
pop
ss
dec
push
mov
stos
dec
jmp
mov
mov
rcrb
mov
xor
mov
inc
popa
into
pop
add
call
adc
mov
les
mov
imul
cmp
mov
daa
mov
pop
jae
cmpsl
mov
int3
mov
cwtl
mov
lahf
push
notl
push
sbb
fsts
cltd
subb
cs
xor
ja
xchg
and
imull
or
xor
xchg
sbb
out
lea
or
jl
int
jnp
mov
cmp
fstps
scas
jne
inc
cmp
push
fsts
cmp
outsl
pop
add
ljmp
or
add
rcrl
bound
in
xor
stos
jb
jbe
xchg
sti
fsubr
imul
fildl
adc
lahf
outsl
arpl
sahf
jecxz
and
mov
mov
jno
jbe
dec
jp
mov
out
popf
or
sbb
orl
rcrb
xlat
jbe
movsl
mov
inc
sub
movsb
repnz
aas
dec
push
jns
clc
out
aad
lds
inc
fstpl
mov
mov
sbb
je
in
imul
sub
fildl
cmp
xchg
out
call
adc
push
cli
dec
call
sub
stos
mov
mov
xor
js
push
sti
mov
push
repz
shl
pop
ret
mov
mov
imul
add
xlat
sahf
int
sbb
add
aam
sbb
out
push
mov
in
test
push
iret
cmc
adc
iret
loopne
sub
lds
cltd
fildll
rorb
movsb
push
add
inc
iret
sahf
sti
hlt
outsb
xor
decl
ror
xchg
test
push
gs
pop
dec
adc
mov
sub
fdivl
rclb
mov
movsl
icebp
movsb
mov
push
mov
pop
mov
fidivrl
ret
mov
jbe
and
jnp
pop
cli
xchg
jl
mov
jne
xorb
dec
push
xlat
sbb
mov
inc
pop
jne
jecxz
and
mov
jle
mov
push
or
adc
ljmp
test
mov
jecxz
mov
cmp
ss
inc
pop
jg
sub
loop
jne
push
add
in
push
aas
ret
xchg
insb
fstp
dec
int
mov
in
data16
xchg
sub
dec
imul
add
dec
mov
addl
rcll
in
stos
arpl
fdivs
mov
mov
test
nop
repnz
loope
nop
or
mov
pop
sub
loop
in
mov
xor
cmp
pop
notl
cmp
add
mov
jne
lret
xchg
sub
out
mov
loope
es
sbb
pop
sub
or
pushf
les
inc
mov
xabort
int3
cmp
into
lret
popf
sbb
jbe
mov
pop
mov
imull
repz
mov
pop
aam
dec
insl
rclb
cltd
aaa
push
in
dec
sahf
outsl
jae
in
pushf
mov
popa
ret
leave
movb
lock
aas
es
mov
sbb
push
pop
and
push
mov
xchg
inc
and
into
cmpsl
add
jg
roll
mov
jnp
inc
or
ds
jge
xor
inc
pop
cs
xor
push
jge
inc
dec
arpl
les
clc
mov
xor
xor
mov
or
enter
push
movsl
in
sbb
out
sbb
cmpsb
ds
insb
ja
push
iret
dec
mov
or
pop
push
mov
xor
or
push
and
stos
cmpsb
adc
xchg
pop
xchg
or
sbb
cmp
in
sub
popf
test
add
mull
xor
lcall
mov
push
jo
out
cmpsb
push
in
cmpsl
mov
mov
insb
out
insl
jbe
jo
adc
mov
jp
mov
mov
xor
jno
or
mov
jnp
mov
or
push
mov
mov
jnp
ljmp
roll
mov
push
xchg
dec
cld
mov
outsb
mov
push
mov
mov
xchg
sub
xchg
push
fcmovne
jo
pop
popa
aam
xchg
das
mov
std
mov
stc
xor
out
loope
xchg
xor
jl
lods
fsubl
lods
out
fidivl
inc
adc
mov
pusha
scas
add
shlb
mov
jb
push
nop
shll
pop
inc
mov
mov
sbb
jb
ljmp
inc
ret
call
adc
push
fdivs
ret
push
jns
sbb
scas
shrl
out
int3
repz
sub
insb
es
xor
pop
out
cld
cltd
mov
sub
ud0
sti
fiadds
xchg
lods
scas
mul
aaa
or
cmp
aad
call
push
inc
rcrl
dec
mov
sbb
sbb
je
jl
icebp
ds
push
testl
mov
lods
cmp
or
sub
dec
out
into
ja
mov
loop
scas
or
add
imul
pop
gs
movsl
jge
mov
push
clc
adc
mov
push
outsl
xchg
neg
adc
in
cltd
sbbl
lea
adc
sbb
scas
xchg
mov
addr16
sbb
inc
mov
ret
js
shlb
jecxz
shl
int3
rorb
cltd
lret
push
test
sti
addr16
mov
mov
les
iret
icebp
loopne
pop
in
sub
sbb
ret
loopne
inc
in
incl
lock
sbb
xchg
aad
add
push
inc
fcom
and
push
mov
stc
scas
mov
push
loope
push
stos
je
test
clc
pop
xchg
es
mov
add
out
inc
pushf
add
rolb
lahf
adc
int3
loopne
mov
movsb
hlt
rcrb
gs
cmp
bound
outsl
mov
push
js
hlt
ja
cs
sti
out
testb
xchg
add
adc
mov
dec
rdpmc
xor
jl
cbtw
fwait
push
repz
aad
jge
xchg
je
data16
lcall
movl
jmp
push
push
xchg
insb
mov
cwtl
add
sbb
fldcw
mov
shll
sub
pop
push
inc
jmp
cltd
orl
xor
pop
xor
cld
leave
icebp
in
cli
inc
mov
andb
mov
test
and
outsl
jmp
fidivrl
roll
mov
xor
scas
mov
sub
adc
pop
push
sahf
xchg
iret
dec
cld
popf
mov
popa
int
sub
inc
cmp
out
insb
dec
sub
movsb
ja
sbb
dec
mov
cmp
daa
adc
cmp
mov
xchg
adcl
sbb
jo
cmpb
call
repnz
push
xor
cmp
outsl
scas
pop
cli
and
jno
dec
add
pop
loop
pop
inc
push
mov
fistps
fcompl
pop
jmp
jnp
xor
and
xchg
jae
test
push
lahf
test
fistps
in
rcrl
jne
xchg
push
insb
add
pop
outsb
pop
je
insb
fwait
test
jmp
loope
lret
pushl
jbe
popa
and
cli
add
mov
add
pushl
je
push
mov
lea
pop
ret
test
pop
ljmp
mov
in
mov
notl
inc
push
and
sbb
stc
jl
inc
mov
filds
add
mov
js
push
add
and
jle
jne
push
sahf
es
pop
add
aam
jno
test
cmp
hlt
out
aas
sbb
mov
mov
rorb
cld
sub
push
xchg
mov
add
xchg
pop
jmp
cmp
mov
dec
movsb
stos
scas
xor
or
xchg
dec
cmc
mov
push
ret
popf
sahf
jb
xchg
mov
mov
push
mov
fnsave
mov
xlat
cmp
fstl
inc
jp
mov
jmp
fnstcw
dec
test
call
dec
mov
mov
aaa
inc
pop
push
pop
dec
xchg
sbb
outsl
pushw
icebp
je
pop
mov
subb
push
jg
inc
cmpsl
call
enter
stc
add
divb
xchg
stos
test
sti
dec
test
rclb
xchg
out
fdivr
mov
scas
pop
xchg
jmp
insl
push
add
xchg
outsl
call
lods
pushf
jmp
negb
sbb
pop
out
adc
stos
std
iret
mov
fists
sarl
mov
inc
inc
mov
pop
scas
mov
pop
movsb
pop
cwtl
jp
sti
js
mov
mov
dec
lahf
jecxz
or
les
cmpsb
cmp
cmc
mov
sub
jmp
pop
xchg
repnz
fs
jbe
pop
imul
or
xchg
mov
ja
int
jmp
and
std
xor
mov
mov
data16
jbe
cmp
inc
loope
js
jecxz
pop
jmp
iret
test
dec
dec
jl
mov
lods
xor
cmp
aaa
jecxz
dec
jb
lret
popa
mov
jno
lea
adc
out
adc
push
and
sbb
jp
push
jge
negb
ljmp
cmp
outsl
gs
loop
adc
mov
mov
xchg
arpl
dec
scas
lahf
mov
jl
cli
test
xchg
sbb
stc
daa
sbb
push
leave
adc
push
xchg
fildll
fistpll
and
push
push
mov
push
sahf
sbb
sbb
adc
lret
inc
add
addr16
loopne
mov
lock
ret
in
fnsave
add
scas
and
sub
loope
je
pop
mov
sub
jl
rcll
pushf
mov
stos
push
jge
pop
mov
scas
sti
aas
or
mov
xchg
jbe
or
jmp
sub
xchg
fwait
pusha
xchg
mov
lea
or
das
and
mov
push
adc
and
fsubs
sbb
out
ss
xchg
push
sar
fnstenv
mov
cmc
xchg
xchg
roll
adcb
xor
addr16
lahf
pusha
and
mov
inc
into
ds
mov
xchg
mov
lahf
outsb
push
jmp
sbb
lods
xchg
sub
xor
fidivs
jmp
pop
cli
popf
and
mov
and
mov
ret
lahf
loop
and
std
repnz
dec
cmpsl
test
sub
insl
loop
adcl
std
sub
cmp
sub
popa
push
jg
imul
or
out
incb
lcall
cmp
push
and
push
mov
inc
xor
icebp
sbb
rorb
bnd
xchg
sub
xor
sbb
dec
xchg
dec
leave
xchg
clc
sbb
push
or
and
repz
lock
mov
xlat
push
in
repz
js
fwait
mov
pop
inc
jle
sub
inc
insl
pop
movsb
push
das
rcrl
jbe
and
pop
hlt
jle
fwait
xchg
imul
stc
sbb
into
cmp
cwtl
fistpll
push
mov
and
pushl
mov
sbb
sti
pop
push
jnp
ret
and
dec
enter
jne
mov
mov
arpl
and
int3
inc
push
mov
fisubrl
out
fmuls
lret
fcmovnu
jp
sbb
inc
pop
mov
loope
insb
lods
enter
jnp
aad
je
mov
inc
jmp
stos
inc
mov
aam
sarb
sbb
fcomi
scas
jae
insl
out
jl
push
inc
pop
mov
sbb
inc
aas
cwtl
icebp
cltd
into
loopne
mov
pop
mov
in
movsl
xchg
ret
sbb
or
add
mov
add
fnstcw
out
push
and
fdivs
sbb
pop
je
mov
addr16
cwtl
int
data16
push
insb
lahf
popf
push
cltd
out
and
gs
sub
cmpb
sub
cmp
jno
fidivrl
jno
inc
push
popf
xchg
icebp
jb
ror
add
imulb
lcall
jnp
aas
mov
lock
adc
rcrb
leave
imul
inc
cmp
outsb
pushf
test
jge
xor
cs
data16
push
lret
lret
mov
cwtl
xchg
xor
lret
sub
lods
pop
out
adc
int
jl
cmp
jmp
jns
inc
popa
cmpb
xor
push
pop
lret
movsb
mov
test
cmpsl
mov
data16
cmpsb
or
jecxz
jnp
pop
es
mov
outsl
out
cltd
ljmp
jae
jl
leave
or
cli
mov
xchg
pxor
stc
sub
adc
xchg
lret
mov
mov
stos
int3
mov
insb
mov
adc
add
dec
mov
sub
jle
icebp
jns
rorb
cmp
addr16
call
add
add
pop
add
push
daa
cmp
cld
xchg
adc
mov
and
push
mull
into
cs
mov
imulb
sbb
das
test
shll
cltd
arpl
sbb
dec
mov
mov
or
cwtl
into
les
pop
das
adc
cmp
lret
les
dec
mov
outsl
and
movsb
mov
mov
insb
notb
repz
orb
divl
push
sub
sub
jp
cli
jp
leave
int
outsb
sub
lock
and
in
sub
repz
int3
push
aaa
es
sub
scas
loopne
xorb
std
sub
flds
pop
ds
adc
fcomps
cwtl
out
in
jmp
mov
shll
adc
mov
jl
mov
pop
xlat
ffreep
aaa
inc
xchg
scas
or
ljmp
imul
int
enter
in
xchg
lcall
outsb
pop
inc
inc
sub
inc
push
or
and
mov
adc
idivl
sbb
jg
jg
xchg
or
mov
jno
andb
jp
bnd
lock
push
dec
mov
inc
xor
stos
mov
repnz
aam
mov
lods
out
mov
or
out
push
jl
cli
imul
ja
ret
sti
ss
dec
jne
inc
dec
test
xor
je
repz
push
jecxz
out
dec
movsl
lods
mov
jge
jns
pop
popa
mov
stc
add
aad
cmpsb
and
mov
in
mov
scas
cmpsl
add
int3
fldcw
in
mov
aas
in
xlat
or
les
cmp
nop
bound
jle
std
in
mov
lahf
test
pop
int3
pop
sbb
movsl
xchg
or
shlb
sbb
pop
es
lods
pop
repz
push
and
push
insl
stos
lret
mov
or
ja
imul
mov
rcrl
stc
stos
fistps
cmp
std
or
stc
out
xchg
icebp
xchg
cmp
cwtl
pop
push
pop
adc
xor
lret
gs
sbb
fisubl
and
fisubrl
push
test
jge
push
lret
xchg
pop
mov
imul
and
jecxz
or
les
xor
orl
int3
mov
lret
scas
je
xor
or
jno
cmpl
pop
int3
mov
loop
fsubs
clc
lock
fisubrs
fisubrl
out
std
dec
test
push
push
and
push
js
into
ret
test
clc
std
es
in
jb
out
negl
cmp
cmp
mov
or
sub
mov
js
in
adc
shlb
adc
lock
in
add
daa
out
inc
and
mov
sbb
mov
xchg
ret
jb
mov
stos
fwait
andl
call
into
fsub
pop
ret
mov
int
adc
outsb
adc
cli
and
nop
outsb
fisttps
xchg
shrb
call
xor
jns
adc
stos
push
es
sub
push
push
mov
cmp
xor
sbb
jecxz
imull
sub
xchg
mov
test
add
lds
sub
aaa
push
das
mov
mov
les
jecxz
repnz
mov
jge
std
sub
dec
pop
push
cltd
fisubl
adc
jle
mov
sti
sub
cmp
aam
mov
dec
test
and
call
mov
stc
fwait
sbb
repz
xchg
pop
jnp
inc
cmp
push
or
popf
lock
mov
popa
mov
add
push
lock
aam
inc
in
stos
xchg
sbb
push
and
pop
jge
mov
popf
lea
pop
xchg
sub
dec
push
pusha
lahf
dec
jmp
loopne
push
dec
insl
pop
scas
or
movsl
call
or
ret
sub
cmc
push
jo
scas
push
cmpsb
int
ljmp
fistpl
push
jecxz
adc
arpl
and
outsl
dec
inc
xchg
loopne
sbb
int
push
dec
jmp
out
cmp
and
pop
mov
sub
jne
inc
adc
mov
hlt
mov
nop
in
ret
xor
sub
adc
mov
mov
pop
in
insl
loopne
mov
lcall
popf
xchg
adc
dec
imul
int
add
jo
lock
call
jo
leave
sub
pop
movsb
icebp
push
pop
pop
add
or
dec
sti
mov
push
jmp
pop
xor
mov
sub
xlat
cld
push
jmp
mov
xchg
data16
jl
mov
mov
jg
inc
fildl
push
mov
mov
mov
xchg
ud0
push
out
adc
es
sub
sub
pop
pop
addr16
sbb
xor
stos
mov
or
fwait
or
sbbb
jo
inc
xchg
leave
or
or
mov
xor
jg
and
dec
adc
add
sub
mov
test
enter
jo
xchg
inc
and
mov
pop
inc
nop
repz
jle
lods
jns
enter
imul
fldt
clc
sbb
out
cmp
or
jo
ljmp
orb
sarb
ss
sub
mov
add
es
aad
jg
aaa
jl
jge
orl
in
rorb
into
cmp
lahf
jmp
mov
push
test
sub
jecxz
and
xor
or
iret
lcall
in
or
rcr
push
inc
xchg
jecxz
jbe
jbe
push
cmc
stc
insb
or
shr
add
and
repnz
cmpsb
iret
xchg
fdivl
leave
mov
adc
and
mov
test
popa
push
jge
loopne
call
mov
dec
cli
add
in
push
mov
pop
imul
mov
fists
xlat
sub
test
lds
add
ror
dec
int3
jge
mov
fcomps
nopl
in
xlat
push
xor
aas
aam
jne
mov
xor
popf
sbb
xchg
repnz
jo
popf
lds
scas
sbb
int3
jo
or
mov
mov
xor
cmp
hlt
aam
mov
data16
sbbl
scas
or
mov
or
aaa
lret
and
adc
mov
sub
pop
sub
mov
dec
jge
jb
je
negb
jae
sub
cmp
inc
pop
out
in
dec
mov
cltd
push
sbb
pop
inc
test
in
cmp
mov
cld
lods
dec
movb
mov
push
jl
cmp
int3
sub
fsubrs
rcll
pop
es
mov
insl
ja
aam
inc
jecxz
cs
test
push
add
loopne
adc
mov
xor
stos
jno
sbb
into
inc
das
aam
add
adc
cld
mov
adc
shlb
and
inc
cmp
inc
clc
insl
push
sub
mov
push
pop
loop
mov
cmpsl
faddp
cmpsl
mov
pop
xor
mov
aad
xchg
rcrl
fwait
and
pop
outsl
lcall
fwait
or
je
push
cmp
xor
loopne
sbb
xchg
jae
popa
addr16
lahf
xchg
call
jge
push
fbld
testb
aas
rolb
xor
repz
out
xchg
pop
dec
inc
imul
adc
test
aas
dec
mulb
mov
sbb
subl
dec
push
and
pop
inc
aad
xchg
aas
fwait
shrl
insb
nop
mov
testb
sbb
jmp
out
adc
and
iret
add
jnp
nop
xchg
int
push
sub
or
adc
out
mov
push
insb
std
mov
or
ja
xchg
jle
and
jg
lcall
sbb
shll
lods
rclb
insb
inc
mov
sub
movsb
es
insb
lcall
test
outsb
pop
jl
xchg
dec
pop
sbb
dec
jbe
lretw
mov
popf
jae
or
cmp
sub
call
push
inc
shrb
outsb
in
cmp
cwtl
xchg
and
ljmp
or
xchg
hlt
jg
mov
fcomp
jge
outsl
sub
jge
roll
or
jbe
xor
dec
and
adcb
cld
divl
mov
or
jo
sbb
push
jae
jge
nop
rcl
mov
popa
daa
adc
dec
adc
icebp
aam
sti
adc
inc
sbb
jle
loopne
pop
flds
inc
mov
in
mov
jp
out
jp
xchg
fbld
outsl
sub
cmp
pushf
push
adc
xor
xor
je
fwait
dec
pop
mov
mov
ret
mov
lods
pop
add
push
mov
push
or
sub
push
jbe
mov
movsl
lret
in
xor
movb
inc
mov
les
addl
cmp
into
jp
pop
xor
fidivrl
je
pop
xchg
movsl
cld
sub
in
or
xchg
leave
sbb
mov
out
out
xor
loopne
mov
pop
movsl
mov
loopne
lahf
or
das
testl
jo
and
shr
stos
sbb
jnp
addl
add
mov
or
mov
mov
sub
adc
mov
or
mov
addb
lock
aam
dec
mov
jge
sbb
daa
push
sub
stos
or
fisubs
into
iret
ljmp
and
and
dec
test
scas
fcoms
push
popa
xchg
mov
inc
cmc
mov
cmpsw
sbb
sbb
inc
mov
mov
mov
dec
sbb
cmp
sbb
cmpsl
jg
push
hlt
aad
arpl
sub
call
int3
call
or
inc
je
jmp
data16
mov
lock
fldcw
aad
les
push
or
pop
sbb
mov
cwtl
ja
push
loope
or
xor
or
sbb
pop
clc
jge
addr16
ss
std
adc
lea
pop
int3
pusha
or
cmp
mov
loopne
dec
callw
xlat
movsl
push
inc
arpl
jns
fldt
leave
aad
in
inc
xchg
sub
jb
fs
aad
in
xor
mov
mov
decl
jle
and
xor
lock
test
or
in
jno
jg
fstpl
ds
icebp
pop
inc
jo
mov
jns
loope
pop
movsb
jbe
lods
loop
push
adc
ja
mov
in
add
jl
jno
test
out
pop
dec
mov
shll
sbb
sbb
loope
jecxz
int
enter
sub
sub
sub
push
lret
aas
call
cmp
ja
xor
mov
icebp
inc
ret
je
out
cmc
dec
or
xchg
pusha
add
repz
mov
lds
jnp
jns
rolb
repz
mov
fidivl
lcall
cmp
ror
push
push
push
fs
and
aam
ret
mov
lods
sub
push
cwtl
jo
in
aad
ficomps
inc
neg
inc
pop
sub
addr16
sub
outsl
mov
repnz
and
fwait
iret
ret
int
lods
cmp
jl
mov
dec
and
dec
push
mov
xchg
clc
mov
mov
xchg
inc
in
jge
xlat
and
fidivrl
jns
test
mov
out
push
xor
mov
into
sbb
data16
cld
cmpsl
dec
out
sub
xchg
pop
std
into
cmc
gs
daa
pop
mov
bnd
repz
lahf
xchg
pop
aam
add
xchg
inc
jno
stos
gs
scas
xchg
pop
push
out
and
lret
repnz
es
inc
mov
jmp
or
sahf
pop
and
aad
push
push
sbb
pop
dec
clc
or
sbb
inc
addb
inc
inc
push
sti
hlt
out
scas
sbb
jmp
push
fs
dec
int3
and
dec
xlat
pop
lods
and
cmp
int
je
fldenv
leave
inc
push
fcmovne
pop
into
ret
mov
pop
insl
push
lds
fdivl
sbb
mov
mov
enter
sbb
jns
mov
enter
mov
daa
frstor
icebp
xchg
cltd
ds
mov
inc
push
inc
jne
xchg
push
lcall
mov
addl
adc
mov
xor
mov
cmp
sbb
test
ss
cmp
inc
cld
imul
jp
ss
push
mov
cmpb
sub
movsl
inc
jnp
or
out
sub
lahf
lock
and
fucomp
xor
pop
xlat
add
mov
xlat
aas
inc
jge
adc
mov
add
jp
mov
bound
jae
lret
in
into
fs
xchg
out
pop
cmpsb
lock
push
mov
dec
jl
test
fsubl
in
sbb
repz
push
mov
push
inc
in
in
sti
jae
idivb
dec
clc
std
ljmp
sbb
popf
lret
mov
lds
fnsave
cwtl
sbb
mov
outsl
xor
pop
sub
add
sti
xchg
mov
and
pop
call
sbb
pop
xchg
mov
lea
pusha
les
or
iret
loopne
mov
sbb
and
enter
xor
popf
enter
stos
test
jmp
dec
lds
mov
popf
loop
cmp
pusha
mov
sbbb
pusha
cld
jge
js
xor
outsl
test
mov
xor
in
inc
repz
outsb
lahf
cmp
fldt
scas
shll
out
jnp
push
sub
rorb
data16
adc
in
or
aad
movsl
fucomip
dec
sbb
dec
call
sub
int
int
je
add
loopne
mov
xorl
xchg
push
test
xchg
mov
xchg
popf
int3
rclb
nop
mov
movsb
mov
xor
int3
or
pop
outsb
scas
adc
adc
imul
outsb
sbb
xchg
sbb
ljmp
sbb
mov
jp
jg
filds
cmp
jle
movsl
push
aam
cmp
ljmp
and
sbb
stos
push
daa
lret
adc
cmpsl
lret
cmp
add
pop
mov
lods
aad
push
pop
cmp
js
lods
mov
sub
lods
inc
sbb
rcrb
roll
cmp
test
nop
rcrl
popa
sbb
cld
push
pop
subl
cmp
lock
jg
mov
outsb
ss
pop
fwait
push
sti
cmpsl
into
insb
test
xchg
xchg
movsb
fists
push
cmpsb
push
cmp
push
xor
shrl
adc
and
or
into
mov
mov
sub
cmp
ss
out
mov
test
test
pop
mov
xchg
test
fisttpll
jbe
push
sbb
out
or
scas
sti
iret
pop
repz
or
jmp
lahf
pop
mov
test
shll
adc
xor
xchg
in
daa
mov
fwait
push
lea
jno
pop
mov
cli
and
xchg
add
cmp
dec
adc
shr
int3
outsb
lods
sbb
icebp
je
cmp
insl
cmp
cmp
loopne
lcall
dec
imul
lcall
mov
aaa
xor
aas
aas
mov
aas
xor
sti
sbb
aas
xor
pushf
mov
bound
push
push
fcomp
xchg
jl
nop
inc
cmpsb
sbb
jne
push
jg
mov
add
je
fstl
jb,pt
dec
das
pop
pop
xlat
outsb
jb
inc
adc
mov
mov
int
fdivr
imul
roll
jbe
roll
js
adc
negl
mov
aam
repnz
call
xor
movlhps
jg
jnp
pop
adc
leave
xchg
mov
lcall
in
pop
push
cmp
arpl
loopne
mov
mov
sub
mov
lods
inc
fistpl
pop
fwait
test
daa
push
jp
aas
in
or
cmp
mov
lahf
jg
fcompp
ret
add
insl
lret
cmp
pop
mov
jne
ss
test
inc
or
movsb
hlt
jbe
inc
push
stos
push
in
cltd
push
hlt
jb
aam
movsl
dec
cmpsl
fmul
xchg
mov
xchg
inc
das
cmp
pop
sahf
push
and
loop
mov
aad
inc
sub
dec
not
mov
jb
fildll
cmp
cmp
add
ljmp
and
mov
sub
lret
pextrw
push
out
popa
cmpb
adc
movsb
sub
lds
mov
mov
add
cmp
out
int
sbb
pop
adc
and
shlb
out
sahf
iret
sahf
sub
lcall
pop
dec
inc
les
mov
lds
xchg
data16
mov
rcll
hlt
sub
or
je
adc
fs
enter
mov
jno
int3
add
and
mov
jbe
cmp
negl
aad
adc
add
fmul
adc
xchg
mov
cmp
xor
notb
jecxz
arpl
int3
dec
fucomp
out
in
subl
nop
dec
xor
xlat
sub
mov
arpl
sub
xor
test
jl
dec
inc
rclb
rorl
in
and
sbb
pop
lock
mov
into
inc
push
out
int3
mov
ds
sub
stc
outsb
out
movsb
cmp
hlt
sbb
ss
loopne
outsb
and
movsl
and
xchg
imul
jge
mov
cmp
aad
icebp
xlat
notl
jp
lahf
pop
jo
or
aas
pop
or
adc
cld
lret
add
lock
lods
out
push
inc
dec
mov
sti
inc
add
stc
jle,pt
jb
aam
insl
mov
push
test
cmp
dec
test
adcl
fxam
icebp
cmc
push
jbe
lods
xor
adc
sbb
in
add
out
movb
mov
dec
push
cmp
or
lahf
xchg
cmp
sti
lret
jmp
in
dec
scas
stos
mov
jne
std
mov
adc
addr16
dec
dec
incl
mov
xchg
stc
mov
adcb
adc
dec
jne
inc
dec
cmp
xor
push
jmp
enter
xor
pop
out
jle
pop
or
sbb
pop
jo
add
loopne
divb
xchg
push
popa
adc
mov
sbb
pop
test
test
push
mov
test
adc
aad
xchg
add
std
lret
dec
jmp
mov
fwait
mov
pop
insb
rorb
pop
out
jae
cmp
cwtl
je
jbe
jnp
add
outsb
or
out
lret
fadds
push
inc
sub
popf
sub
addr16
cmp
pop
mov
jno
lcall
xor
fucompp
hlt
dec
push
adc
mov
stos
stos
inc
ret
scas
ret
xlat
jg
adc
out
fwait
stc
xor
popa
scas
add
cld
fwait
inc
ss
lds
fstps
adc
or
mov
mov
test
lea
dec
or
push
xor
stos
daa
push
in
cmp
subl
sub
scas
jnp
fs
test
cltd
in
pop
in
dec
fsubrs
leave
adc
js
or
or
jne
repnz
cmp
xor
sub
inc
sub
inc
fiaddl
pushf
mov
dec
or
pop
jne
xchg
mov
add
and
and
sbb
dec
push
xor
pop
in
and
das
lcall
lcall
jge
in
in
jle
dec
pop
cmpsb
pusha
push
xchg
mov
repnz
loop
lret
std
adc
test
imull
mov
outsb
js
ds
inc
mov
divb
pop
push
rol
lret
mov
adc
imul
in
sbb
in
dec
dec
imul
fdivr
add
dec
mov
push
dec
mov
aas
jl
push
test
fs
fwait
xor
inc
pop
mov
adc
sahf
cld
sarl
aad
fcom
push
cmp
and
sarb
push
lcall
xchg
in
dec
push
add
int
arpl
xor
je
push
sti
mov
xchg
xor
movsl
mov
lods
add
sbb
fldt
sbb
fs
pop
cmpsb
test
outsl
imul
push
inc
fwait
xchg
lret
jb
inc
out
call
cld
jae
dec
scas
mov
sahf
into
bound
pop
push
iret
ljmp
xchg
xorb
dec
or
notl
sarl
stos
push
xorb
jo
cli
fcmovne
into
adc
aad
adc
jp
cmp
jecxz
dec
add
test
or
cmc
ljmp
test
xor
rolb
mov
sbb
add
inc
jle
icebp
xchg
push
jmp
adc
adc
inc
and
aas
andl
sbb
lcall
daa
xor
mov
rol
call
lea
dec
and
mov
mov
and
pop
dec
pop
lods
shll
and
push
shrl
out
iret
loopne
mov
test
inc
sbb
add
iret
loope
add
je
loope
xor
push
mov
insb
inc
loope
mov
add
inc
mov
sub
and
jno
pop
data16
jecxz
insl
pandn
jo
dec
std
sub
pusha
sbb
test
inc
aad
push
test
cmp
cmp
mov
inc
test
inc
pop
jg
and
and
imul
movsb
add
xchg
pop
dec
add
testl
dec
add
popf
fimull
in
in
xchg
stc
sub
cld
pop
sub
subb
lret
push
adc
and
or
pop
mov
cltd
dec
arpl
inc
rorl
js
add
adc
pop
push
and
adc
jno
popa
ss
sti
or
std
outsl
loop
inc
and
lock
push
cmp
movsl
nop
popf
cmp
xor
iret
inc
fwait
dec
int3
sahf
sub
xchg
out
mov
xor
inc
bound
das
fisttpll
inc
test
jno
shl
call
sbb
loope
push
lcall
icebp
add
sahf
mov
test
sbbl
xchg
daa
arpl
inc
adc
lcall
jecxz
push
add
mov
test
rorl
jmp
aaa
iret
mov
lds
dec
jns
nop
jne
push
ja
push
cltd
fsubrs
mov
push
and
xlat
dec
test
fldt
xchg
add
in
mov
bound
andb
pusha
adc
add
fwait
xlat
sbb
inc
mov
lods
popf
push
imul
jle
test
fisubrs
stos
bound
dec
jns
cs
cmp
fcompl
fsubrs
repnz
xlat
idivl
xchg
xlat
nop
push
jbe
cmp
push
push
jecxz
je
push
cld
or
rol
mov
or
mov
mov
bound
push
adc
cli
add
jnp
and
inc
mov
popa
test
flds
sub
mov
push
mov
mov
push
mov
mov
jmp
cmc
xor
mov
pop
xor
rcll
add
inc
es
cs
and
or
push
sub
mov
repz
stos
loopne
xor
adc
push
dec
sti
imul
mov
mov
mov
data16
test
aad
sbb
lcall
xchg
es
ds
xor
xchg
and
sbb
lods
and
jp
aad
mov
sbb
or
and
mov
movsb
push
lcall
jne
mov
mov
cmc
hlt
jb
jge,pn
cmpsl
dec
cmc
mov
fistps
xchg
mov
mov
je
sbb
loope
bound
js
lcall
and
jl
push
jae
scas
sub
mov
push
dec
cmpsb
jnp
pop
test
and
push
call
and
fs
movsb
inc
inc
fidivs
lock
sub
ljmp
dec
aam
cmp
test
pop
rolb
push
add
lds
mov
clc
push
scas
fld
push
test
jbe
pushf
sbb
or
inc
pop
leave
rcl
sbb
ret
inc
adc
jno
jne
int3
out
mov
and
popa
xchg
push
ja
in
inc
sti
das
push
push
and
and
mov
or
sub
in
fdivl
xchg
fwait
nop
pop
cmp
push
cmpsb
jp
es
ret
test
xor
ret
insl
inc
fsubl
jmp
fcmove
aam
push
call
pushf
in
in
sbb
jo
lea
inc
mov
mov
cmp
shr
push
jle
leave
xchg
mov
dec
test
lds
inc
push
movsl
pop
movsl
outsb
and
push
cmp
xchg
cmp
fisttps
xorl
push
in
cmpsl
lret
clc
xchg
mov
imul
shl
mov
push
out
lods
mov
cmpsb
push
out
cmp
sbb
int3
or
mov
cmp
or
sub
mov
popf
cmp
cmpsl
push
adc
mov
mov
xchg
repnz
xlat
frstor
mov
faddp
loope
pop
popf
adc
les
cmp
pop
in
popf
inc
dec
cmc
adc
test
dec
rcl
inc
cmp
cmc
cmp
loopne
pusha
push
and
mov
adc
push
jbe
notl
mov
dec
rcrb
mov
mov
jge
insb
lods
cmp
and
scas
les
out
inc
jl
adc
sbb
inc
outsl
scas
inc
push
repnz
xchg
pop
fnstcw
push
push
pop
or
cli
into
xchg
dec
rolb
cmp
ljmp
cmovs
outsb
push
add
aaa
jnp
stos
push
jbe
jmp
repz
in
pushf
dec
enter
lds
jp
mov
push
cmp
je
sbb
and
hlt
dec
daa
jecxz
jle
inc
xchg
mov
data16
pop
add
sbb
cmpsl
sbb
shr
xchg
movsl
addl
cmp
aaa
sub
aas
outsb
flds
in
sbb
mov
out
outsb
cmp
ds
mulb
idiv
pop
xor
jno
sub
dec
push
jl
sbb
and
pushf
imul
jbe
ret
cmp
mov
pop
out
or
test
dec
xor
out
fstl
xchg
push
jl
cs
imul
cmovno
insl
test
arpl
popf
inc
adc
stc
xor
insl
sub
jbe
sbb
add
adc
addl
dec
adc
cmpsb
inc
fildl
pop
inc
sub
call
ret
dec
jl
mov
lock
mov
mov
dec
ds
into
imulb
ljmp
test
enter
add
sub
dec
jo
xchg
adc
pop
rcrb
jno
notl
in
and
decb
and
popa
inc
mov
inc
in
fdivp
stc
push
rorb
push
inc
sbb
push
gs
mov
sbb
scas
push
ljmp
cs
pop
cmp
out
mov
add
mov
out
out
fisubl
jecxz
in
pop
xor
pop
xor
call
sbb
scas
mov
xorb
lret
push
cmp
movsb
push
and
arpl
jle
sbb
adc
pop
ljmp
add
cmc
mov
es
ja
mov
pop
shrb
jne
mov
stc
cmp
pop
mov
push
mov
sar
outsb
xchg
push
movsl
mov
arpl
aad
in
xchg
in
popf
inc
cmpsb
push
mov
insl
dec
test
outsl
fstpt
mov
xchg
lds
cmc
xor
mov
pop
les
adc
es
loop
or
pop
mov
sub
lods
icebp
sbb
mov
ret
out
les
xchg
add
int3
push
sti
push
add
pop
jns
fistps
push
popf
stc
rolb
mov
sub
std
jne
int
nop
xchg
xchg
jno
fsubl
mov
enter
add
xor
fsubs
pop
cmp
outsl
push
aad
cmp
mov
jge
or
jae
loope
fisubl
pushf
push
add
push
rcrb
sbb
mov
inc
dec
mov
mov
jae
add
iret
jae
push
fisubrs
mov
cmp
mov
inc
or
rorb
jmp
push
push
test
sub
cld
repz
stc
dec
outsb
or
js
adc
rorl
mov
xchg
call
mov
cwtl
mov
loope
ret
lret
pop
out
out
into
enter
lock
mov
stc
adc
sti
cmp
push
ret
add
xor
sahf
jb
int
cmp
mov
jnp
push
inc
in
sub
pop
loopne
sbb
pop
lret
xor
fisubs
ret
jecxz
pop
push
sbb
shlb
xchg
pop
xchg
push
gs
push
nop
mov
cmpsb
sub
jl
sarl
lea
cs
maxps
test
addb
js
pop
inc
xchg
mov
pop
scas
sbb
inc
ljmp
stos
cltd
ret
pop
sbb
repz
lods
vfrczpd
sub
adc
test
xor
and
sbb
mov
ja
push
int3
dec
dec
push
ss
scas
data16
xchg
mov
aam
push
lock
cmpsb
sub
repnz
or
lret
jecxz
cmpsb
jbe
jnp
and
mov
gs
lcall
test
sub
sbb
inc
or
mov
pop
fdivs
mov
mov
das
jmp
or
jns
sub
cmp
mov
mov
push
inc
insb
dec
push
xor
in
scas
fcmove
in
ss
sbb
mov
shl
les
xchg
fistpl
sbb
adc
orl
cltd
sahf
adc
daa
lods
jno
std
stos
in
push
lea
mov
sub
mov
pop
xlat
xchg
je
dec
enter
dec
sbb
stos
mov
xor
cmp
xor
xlat
xchg
test
filds
cmp
sub
dec
or
mov
int
sahf
data16
mov
rorb
repnz
rcrb
int
scas
sbb
icebp
mov
jle
mov
aas
fucomip
mov
push
xchg
cmpsb
cmp
or
sub
fwait
rcll
ljmp
dec
or
pop
sbb
int
scas
jmp
pusha
and
push
xchg
test
xchg
mov
xor
test
outsb
or
repnz
push
loopne
rcll
cmp
push
xchg
leave
mov
or
lahf
pushl
sbb
jge
testl
ds
pop
xchg
mov
sub
add
xchg
pusha
add
xchg
cs
add
inc
ret
aas
fbld
fidivrs
jmp
pusha
and
and
pop
and
cld
out
xor
lret
jl
fimuls
lods
iret
cs
xchg
stos
push
outsb
mov
add
ljmp
addr16
sbb
mov
mov
sub
dec
push
add
push
test
mov
mov
sub
nop
clc
mov
test
mov
ret
jnp
dec
jp
and
or
pop
xor
pop
gs
jbe
pushf
lods
jge
adc
call
dec
cld
sbb
push
adc
xor
mov
or
gs
ljmp
sbb
mov
and
xor
sub
xor
repnz
bswap
neg
push
push
iret
cmp
enter
or
mov
jb
mov
stc
ret
cmp
repz
das
loope
push
jbe
jge
repnz
push
xor
dec
and
insb
cmp
call
pop
add
cmp
into
jecxz
jp
jns
cmpsl
push
repnz
cwtl
jmp
mov
sbb
or
sbb
outsb
leave
fsubl
xchg
sub
lcall
mov
into
xor
sub
out
ja
xchg
mov
lock
fcomps
mov
and
ret
xchg
mov
or
lea
jle
xor
outsl
imul
movsb
inc
push
repnz
sub
arpl
lods
jnp
inc
dec
sub
cmc
xchg
mov
stos
clc
iret
pop
jnp
int3
cmc
loopne
sbb
shr
push
and
adc
dec
add
in
cmc
lret
ds
mov
in
ja
idivb
addr16
push
das
mov
cmp
lock
sub
aas
popa
sub
jns
xchg
nop
xchg
mov
add
sub
inc
movsb
test
jl
adc
inc
jb
sub
push
or
int
fistpll
push
mov
or
mov
xor
je
adc
sub
sbbb
add
outsl
iret
dec
lahf
mov
cmc
imul
inc
popf
jmp
movl
and
cmpsb
sub
jecxz
pushw
xchg
fucomi
jbe
pop
fs
fs
dec
push
daa
insb
sahf
aam
sbb
adc
or
sub
sarl
mov
outsb
insl
xchg
scas
outsl
int3
sbb
ficomps
push
xor
and
jno
out
pop
sbb
rcrb
repnz
fildll
out
push
xchg
xchg
mov
cmpb
mov
pop
inc
movsb
das
pop
mov
add
gs
arpl
sbb
push
aad
sub
push
iret
call
rcrl
add
dec
lock
rcl
pop
fcmovne
pop
insb
xchg
sub
or
test
stos
mov
ficomps
or
xor
mov
outsb
cli
dec
or
pushf
in
test
sahf
aaa
add
sub
cmp
pusha
jbe
addr16
sbb
inc
addr16
divb
cmp
jns
ret
icebp
mull
pop
jno
aad
sbb
mov
lods
dec
sub
push
xor
icebp
ljmp
xlat
mov
js,pt
pop
pop
mov
xchg
pop
mov
in
adc
push
iret
or
mov
outsl
les
add
roll
ficoml
mov
xchg
mov
xor
jp
shll
adc
sub
jae
jmp
mov
mov
dec
or
test
add
inc
cs
and
and
inc
xchg
mov
push
xor
fs
push
scas
cmpsl
int
fiadds
notb
fld
lods
sub
aas
sbb
and
lock
loopne
js
lds
mov
push
push
jno
inc
push
lds
sub
jno
jno
fisttpll
repz
xlat
es
pop
sbb
shlb
insl
cltd
dec
push
or
cmpsb
gs
mov
mov
pop
push
pop
sbb
sahf
add
pop
mov
adc
mov
xor
fbld
mov
mov
sbb
pushf
cltd
pusha
jmp
lods
push
pop
dec
ret
jmp
cmp
dec
dec
ficomps
push
hlt
add
into
mov
test
adc
sbb
nop
cltd
lret
adc
xor
sub
mov
mov
adc
cmp
in
pop
adc
or
rolb
lret
ja
insl
adc
lahf
fstpt
sbb
nop
jo
or
and
aam
cmp
mov
xor
sti
mov
sub
lahf
gs
or
dec
out
ror
fstpl
divb
xchg
xorb
jo
jmp
shll
insb
xchg
mov
bound
sub
xchg
adc
test
sub
xchg
xchg
jnp
mov
jmp
jbe
loope
xchg
insl
dec
rclb
stos
je
lods
inc
repnz
jae
outsl
setle
or
add
push
es
and
cmp
movsb
fs
out
out
es
xchg
imul
arpl
shl
fsubrs
adc
jo
mov
mov
pusha
jb
jno
mov
mov
mov
in
js
mov
adc
xchg
or
loop
lds
fwait
pop
jmp
insl
sub
pop
fdivl
lds
adc
inc
cmp
stc
enter
std
or
jae
xor
and
dec
cmp
mov
ret
in
sbb
dec
cmpb
loop
cld
jmp
hlt
int3
mov
pop
mov
aas
inc
mov
out
rorb
in
cltd
adc
or
inc
clc
mov
popf
bnd
mov
pop
daa
out
cmp
xor
out
out
push
gs
sub
push
sbb
jp
dec
mov
sarb
scas
lods
rol
and
in
or
cmp
and
lock
xchg
lahf
ss
fsubs
fcomip
ja
sub
clc
cmp
and
mov
add
sbb
inc
aas
fsubrl
mov
ret
cli
insb
test
rcrl
inc
mov
push
sbb
sub
rcrb
fistl
jmp
xor
inc
adc
sub
xor
mov
subb
aaa
lcall
jge
jecxz
add
rorb
push
es
xchg
scas
aaa
sub
mov
cld
fdivr
clc
les
push
jnp
negb
xor
scas
fnstenv
cmp
lds
jl
push
fs
mov
xor
sbb
inc
xchg
and
test
xor
pop
rorb
cmp
ljmp
clc
pop
jns
sub
xchg
add
in
add
dec
addr16
adc
jb
je
jl
push
mov
inc
xor
push
rorb
mov
mov
sub
add
xchg
push
or
xchg
sbb
pop
ds
lcall
mov
sub
adc
xchg
mov
push
jp
aam
inc
les
pop
jle
stos
push
mov
subb
sbb
addb
cld
andb
sub
lret
mov
jae
xor
test
add
xchg
adc
cmpsb
xchg
push
adc
jno
mov
sub
ja
push
clc
emms
adc
stos
pusha
lea
stc
repz
gs
adc
inc
outsl
push
sub
cltd
out
pop
fnstcw
aas
mov
std
inc
sbb
sub
ret
js
out
imul
test
inc
cmp
rolb
out
mov
dec
leave
outsb
subl
add
hlt
or
push
pop
push
mov
mov
adc
and
sbb
mov
or
add
push
or
aaa
in
out
outsb
jae
loopne
int
lea
andb
inc
scas
out
pop
mov
icebp
repnz
outsl
int
cmc
xchg
fnsave
push
ret
outsb
jbe
adc
cmp
dec
sub
loopne
daa
js
or
sti
adc
lods
xchg
idivb
stos
pop
mov
push
dec
mov
push
jl
out
and
xchg
xor
rcrl
out
and
cmp
sub
adcl
mov
movsl
jge
in
cs
inc
call
push
cmpb
cld
cmpsl
in
pop
mov
lock
cmc
xchg
stc
push
lret
mov
mov
fldcw
xchg
mov
daa
inc
hlt
cmpsl
fsubrs
out
inc
sbb
lcall
lahf
out
outsb
cmp
stc
cwtl
rcrl
push
cmp
ljmp
shll
aas
mov
or
or
mov
mov
clc
adc
or
cmp
adc
pop
mov
dec
lea
and
and
movnti
adc
es
sbb
popa
jnp
inc
push
mov
cli
in
add
pop
ljmp
sbb
push
pop
fadd
or
pop
enter
fdivr
add
mov
shll
loop
rolb
mov
jb
fdivr
test
in
int3
xor
pop
mov
ret
nop
push
dec
pop
jg
mov
sub
mov
xor
add
sub
adc
xor
adc
pop
xlat
mov
pop
je
add
aam
push
test
mov
lock
mov
xor
sbb
jnp
xor
jo
outsb
jp
push
xchg
push
aaa
int3
mov
fnsave
xchg
adc
push
sbb
pop
lods
or
adc
and
clc
sub
test
mov
jle
push
das
das
scas
mov
jne
and
lret
sub
mov
mov
dec
push
fistpll
inc
insl
push
sarb
adc
push
scas
imul
inc
ret
shlb
push
popf
dec
lret
fistps
es
ljmp
shr
mov
std
push
mov
movsb
in
cmp
jle
mov
scas
xlat
pop
or
loope
lret
mov
or
pop
lock
add
jne
pop
pop
cmp
push
jns
aas
push
fistpl
rcrb
lcall
aaa
pop
iret
and
daa
sti
and
ret
lds
xor
call
add
pushf
or
cmp
xor
and
xor
movsl
and
dec
jmp
mov
adc
push
sub
testl
in
in
cmpsl
es
mov
imull
sbb
push
in
or
mov
imul
roll
decb
jl
and
add
cmp
iret
xchg
dec
daa
ja
dec
push
cmpsb
push
inc
incl
nop
dec
pop
jle
call
fldl
xchg
js
out
sub
int3
push
enter
inc
jbe
jge
f2xm1
iret
xchg
dec
mov
mov
rorb
mov
test
cmp
into
sbb
ljmp
clc
pop
js
cltd
lcall
inc
out
lds
jbe
inc
dec
jbe
cmp
lret
xchg
fistpll
mov
mov
sbb
into
lcall
or
mov
sbb
cmpsb
mov
pop
sub
notl
jne
test
aam
mov
mov
lods
and
or
in
test
adc
lret
stos
rolb
fs
cmp
psrlq
jmp
repnz
stos
sahf
xor
mov
add
pop
cmpsb
or
scas
push
cmpsb
jge
sbb
test
test
sub
add
pop
mov
or
in
xchg
lcall
in
fwait
ja,pn
rolb
fdiv
movsb
es
enter
std
dec
repz
mov
std
cmpsl
mov
mov
push
icebp
ror
js
in
test
jnp
in
jge
cmpsb
aas
push
out
jecxz
and
mov
fwait
ljmp
cmp
push
negb
push
cltd
lcall
js
xorb
push
mov
out
sbb
xor
fwait
xchg
cli
popa
xor
in
scas
repnz
imul
int3
mov
cmp
aam
loope
or
xor
cli
pushf
notl
cld
lcall
sbb
push
ret
push
dec
pop
push
xorb
jmp
xchg
xchg
stos
rcl
or
rorb
pop
inc
loop
notb
jno
int
int
pop
pop
inc
fisttps
jle
outsb
dec
fadds
pop
into
pop
cmp
in
mov
and
xchg
test
sub
ror
push
or
insb
adc
jle
push
int3
and
adc
inc
out
inc
mov
adc
or
hlt
ja
xor
inc
sbb
pop
repz
mov
mov
mov
and
aam
or
scas
push
lds
adc
ret
push
rolb
dec
mov
std
mov
test
scas
xor
and
add
pop
cmp
mov
or
pop
cwtl
scas
push
push
lret
xchg
push
push
push
lods
xchg
call
sti
and
aaa
lret
xchg
rclb
fisubrs
inc
pusha
dec
xor
lret
push
nop
mov
scas
add
pop
sbbl
test
push
or
push
in
incb
mov
lods
add
adc
js
clc
lret
iret
sub
cmpsl
push
dec
adc
shl
push
cmpsl
xchg
adcb
leave
jmp
daa
stos
mov
in
push
dec
cmpsb
movsl
mov
ret
clc
cltd
mov
pop
pop
mov
xor
jne
fisttps
push
lea
or
ss
sub
movsb
sbb
fisttpll
and
push
jp
mov
push
aaa
icebp
call
or
jle
add
dec
push
gs
jp
lret
or
dec
out
scas
rcl
push
jecxz
and
or
imul
and
imul
imul
lret
cmp
shl
xchg
gs
cmp
pushf
test
loopne
lret
dec
inc
add
stos
cwtl
inc
inc
orl
loop
xchg
mov
lret
cmp
mov
loopne
popa
mov
int
lods
jmp
je
mov
push
and
dec
mov
loopne
adc
lock
mull
and
sti
push
aad
and
lods
adc
stos
xchg
add
out
mov
mov
push
insl
int3
jb
mov
bound
pop
mov
enter
rorl
ror
mov
push
fs
imul
fimull
add
js
jne
inc
xchg
js
dec
mov
pop
dec
pop
call
mov
leave
aas
cmp
imul
and
out
out
sbb
data16
je
xor
ficomps
push
in
imul
add
bound
outsb
daa
ds
mov
gs
aam
mov
inc
sub
arpl
addr16
test
fdivs
add
enter
sub
and
loop
sub
js
stos
adc
fcompl
lret
leave
xlat
jae
int
xchg
pxor
push
and
pop
and
sub
pop
popl
or
stc
pop
fnstenv
insb
inc
sub
loope
sub
arpl
xchg
xchg
stos
addr16
xor
jecxz
jns
and
xor
inc
mov
add
mov
mov
iret
shlb
xchg
or
xchg
or
xor
aaa
mov
push
mov
inc
ret
jmp
mov
jno
cmp
add
jno
int3
cmp
pushf
shr
repnz
inc
jg
add
movsl
mov
lds
inc
in
add
add
sahf
loop
scas
sbb
fmull
mov
cmc
neg
lret
and
lods
add
inc
test
inc
inc
orl
popf
sbb
clc
mov
add
subb
sarl
ss
mov
add
jle
popf
repnz
enter
mov
aaa
loope
loop
jg
je
ret
sub
jbe
cmp
push
jmp
outsb
fwait
dec
je
hlt
test
pop
add
test
push
arpl
lea
loop
jp
in
jae
add
mov
jbe
mov
jmp
xor
imul
aas
and
out
arpl
push
out
jge
sarl
push
adc
push
xchg
xorb
mov
cmpsb
ret
xchg
sub
aam
pop
repnz
aam
push
imul
sbb
adc
loop
mov
add
pop
cmp
cmp
push
sbb
leave
pusha
mov
imul
sbb
popa
cmpsl
sub
addr16
mov
or
adc
jo
push
hlt
xor
sub
xchg
xor
or
popf
push
and
xchg
in
xor
cmpb
fwait
int
pusha
jmp
mov
iret
xor
dec
sti
sti
imul
pop
ffreep
sbb
fadd
and
mull
xor
add
lea
imul
ret
inc
mov
mov
add
xchg
stos
adc
and
push
pop
dec
das
shll
cwtl
adc
bound
arpl
scas
adcl
into
out
ret
mov
sub
sbb
insl
scas
dec
xchg
aad
mov
ja
cmc
xor
mov
add
pop
hlt
jecxz
notb
shll
xchg
icebp
mov
jno
lea
xchg
verw
pusha
pop
push
das
lods
andl
scas
aas
jg
or
rcrl
ljmp
or
sub
lods
lock
pop
lea
stc
inc
insl
or
mov
fwait
mov
cmpsb
out
leave
xchg
pop
enter
xchg
cmp
jb
xor
js
rorb
push
jo
jle
loopne
lahf
sub
xchg
nop
sbb
adc
jo
shl
mov
insl
ljmp
sub
cmc
jae
mov
push
inc
stos
sbb
outsb
pop
mov
add
dec
loope
scas
psubw
arpl
jecxz
sbb
sub
outsl
ficompl
fucom
cmpsb
cmp
cmpsb
fcomp
mov
test
leave
inc
cmp
loope
cmc
cmp
loope
xchg
sub
sbb
push
movsl
push
sub
cmp
dec
mov
enter
clc
and
mov
jbe
pop
xlat
sbb
adc
xor
mov
xor
jbe
stos
in
ljmp
fidivs
in
imul
xor
lods
leave
testl
inc
mov
push
or
gs
ret
jecxz
mov
cli
sub
stos
in
icebp
lods
pusha
push
inc
lods
scas
aaa
push
cli
fwait
cmp
test
mov
push
jne
aam
popa
shrb
cmp
pop
out
aas
xchg
push
mov
mov
movsb
flds
mov
mov
push
into
mov
pop
orl
jne
push
cmp
sbb
and
out
bound
cltd
mov
push
mov
roll
pop
adcb
xorb
test
xor
cmpsl
fs
cmp
mov
fidivrl
push
xchg
push
push
mov
mov
pop
movlps
outsb
aas
lcall
aas
call
sub
mov
lret
pop
nop
cmpsl
lods
adc
dec
sarl
xor
add
insb
cltd
out
cmpsb
in
sub
leave
out
popf
inc
ret
in
pop
xchg
push
cwtl
js
cld
in
jmp
loop
push
jmp
push
sbb
gs
popa
push
sbb
jnp
sub
pop
mov
popa
cmp
sub
ss
rcl
adc
in
pop
mov
insb
add
or
sbb
in
mov
pop
pop
jecxz
jge
push
pushf
or
or
pop
push
xlat
xchg
fisubs
imulb
pop
sub
pop
cmp
sub
std
das
dec
inc
loope
sub
dec
movsl
lcall
cmpl
cmpl
push
imul
adc
addb
sbb
je
movsb
lea
adc
push
adc
fwait
push
cmp
push
cmc
jge
cmpb
loopne
test
test
mov
loop
sbb
ret
jb
cwtl
in
dec
jb
cs
jp
arpl
dec
or
jmp
and
roll
cmp
or
mov
inc
rolb
xchg
pop
fucomip
aam
sti
ss
shlb
gs
aam
xchg
arpl
lcall
dec
adc
jmp
fstpt
sbb
xchg
scas
jnp
bound
fidivrs
fsts
aaa
and
mov
jae
jmp
insl
popf
loop
sti
negl
test
mov
cld
sub
mov
repnz
mov
mov
dec
xor
shl
andl
mov
hlt
pop
mov
ud1
jb
and
push
jmp
clc
xor
inc
sbb
cmp
add
cmp
cs
dec
or
cmp
in
inc
test
sbb
stos
add
xchg
inc
mov
push
push
enter
fcomps
loopne
jp
fs
mov
cld
cmp
lods
inc
mov
xchg
inc
add
mov
pop
jmp
incb
or
cmp
xor
inc
arpl
add
mov
ds
sbb
xor
and
rcl
mov
cmp
cmp
mov
gs
sub
add
and
data16
jp
push
push
call
cmpsb
push
mov
data16
xchg
loopne
call
add
das
mov
test
and
xor
mov
cmp
cltd
dec
push
fwait
ljmp
jnp
aaa
push
repnz
cmpsl
adc
push
jecxz
fists
aam
or
int
pop
xchg
mov
inc
xchg
lods
enter
lea
adc
adc
fisubl
cld
jae
cltd
or
inc
icebp
aas
jns
mov
rcrl
popf
or
popf
push
push
xor
push
inc
addr16
aaa
cmp
jo
int3
or
pop
inc
cltd
dec
jno
mov
xchg
clc
adcb
cmc
jp
mov
inc
ret
outsb
pop
ret
sbb
jmp
push
cmc
jmp
jo
sub
mov
jae
inc
sti
mov
cwtl
fwait
mov
in
fisttps
leave
cmp
les
jnp
pop
das
jp
sub
enter
movsb
aam
inc
adc
adc
sub
sti
movsb
bound
test
mov
and
int
cmp
mov
sbb
dec
imul
mov
shll
xorl
inc
iret
add
jl
pop
test
cltd
mov
pop
outsb
cmp
int
mov
jp
stos
jmp
add
jns
cmp
dec
movsl
outsl
jb
in
dec
push
insl
mov
ja
nop
push
movsb
aad
dec
loop
fwait
ja
aas
sub
mov
mov
add
sbb
outsl
movsb
icebp
mov
ror
call
mov
push
add
mov
mov
insl
cli
and
test
dec
mov
data16
cmp
jbe
and
xchg
and
adc
xor
shll
leave
push
movsl
jno
add
shr
cwtl
stos
mov
xchg
movb
sub
mov
insl
nop
pop
jne
push
icebp
jecxz
nop
pop
add
sbb
inc
sub
push
adc
aad
sahf
iret
jg
sub
gs
adc
pop
out
ret
xor
pop
push
daa
or
xor
pop
xor
add
mov
mov
icebp
test
push
sub
sbb
ss
mov
mov
imul
adc
ret
fdivl
inc
out
push
lahf
cli
xchg
adc
mov
mov
inc
jecxz
rolb
and
ds
adc
adc
fstps
cld
pop
or
mov
mov
jo
xchg
jecxz
cmp
call
inc
fdivr
ret
or
inc
or
or
mov
in
lahf
push
sub
mov
jg
out
cwtl
fistpll
outsb
mov
lret
dec
aas
repnz
dec
mov
cmp
xor
js
sahf
mov
insb
xchg
test
add
rolb
inc
sbb
in
xchg
jno
pop
jne
inc
aas
inc
in
stc
aaa
popf
jecxz
outsb
lret
dec
mov
cli
or
fisubl
lea
lret
fsts
shll
push
in
andl
stc
cmpnltps
inc
popf
lea
xchg
leave
push
and
sbb
fldl
loop
adc
mov
and
sub
lds
jg
inc
inc
and
mov
and
adc
cli
out
xorb
sub
adc
test
sbb
xor
test
cmp
add
xchg
adc
mov
jecxz
jns
jecxz
or
test
lret
les
xor
test
sub
andb
arpl
mov
shl
mov
std
nop
and
sub
fiadds
adcb
cmpsl
sub
and
out
idiv
cmp
fwait
in
cmp
mov
cmp
pop
sbb
push
cmpsb
jl
jno
clc
ror
stc
jmp
das
loope
push
fmul
in
fimuls
cmp
add
int
push
mov
mov
out
add
pop
xor
std
cmp
or
push
push
test
cmpsl
popa
les
xlat
and
imul
sub
fisubrl
ljmp
xor
mov
jg
mov
outsl
jp
sub
call
add
mov
aas
call
pop
lcall
and
inc
dec
inc
push
push
jbe
mov
ret
ds
stos
xchg
in
or
push
cmp
aam
xor
adc
xor
leave
mull
pop
add
pop
or
lods
and
les
or
aaa
in
pop
sub
sub
jp
sti
push
pop
js
test
aam
ja
xchg
daa
scas
imul
adc
push
mov
loop
aaa
test
add
mov
mov
sbb
dec
pushf
pop
fnstsw
stc
leave
mov
mov
mov
lods
aad
pushf
enter
pop
pop
mov
imul
sub
popa
loop
bound
dec
dec
mov
mov
sub
lods
dec
dec
or
jno
inc
data16
mov
outsl
cli
imul
cmp
imul
enter
out
inc
fs
sbb
or
testb
gs
mov
iret
sub
decl
dec
test
xchg
shrb
adc
sub
loop
test
mov
test
pop
xchg
aaa
rcll
mov
jg
sarb
sub
ds
pop
push
lahf
lock
pop
sub
mov
mov
push
mov
out
xchg
pushf
jmp
or
or
js
lcall
dec
sarb
or
flds
mov
es
hlt
and
mov
idiv
jle
mov
push
ret
movl
add
fmull
pop
jb
and
fwait
loop
je
xchg
adcb
pop
arpl
ss
inc
mov
jge
push
mov
clc
mov
cmp
fiaddl
xchg
repnz
and
or
shl
xchg
ss
jno
das
dec
inc
cli
daa
jns
shlb
xor
pop
cmp
pop
sbb
jmp
std
mov
or
daa
repz
imul
push
shl
jnp
adc
mov
sahf
mov
sbb
cli
sti
or
or
ret
aad
sub
or
dec
lods
xor
out
rolb
add
xor
ja
pop
fildll
cmp
jne
data16
dec
push
xor
or
inc
or
jo
sub
je
xor
and
and
jmp
ret
jae
loopne
hlt
test
cmpsb
dec
aaa
mov
mov
dec
mov
lds
pop
xor
cwtl
int
leave
inc
mov
loopne
out
jp
xor
xorl
sbb
sbb
mov
inc
and
adc
push
cmpsl
mov
je
gs
stc
xor
pop
dec
loopne
mov
fdivrl
movsl
dec
sbb
shl
ljmp
lods
mov
iret
pop
push
clc
push
dec
push
aam
rcrl
xchg
jmp
std
or
in
jbe
push
das
ret
jl
test
imull
push
jge
sbb
leave
lods
mov
lock
push
clc
sub
imul
imul
lods
mov
inc
xor
fstl
cmp
out
dec
scas
dec
enter
mov
cltd
movsb
and
lcall
xlat
lock
rolb
jmp
pop
je
insl
lods
gs
cmp
repnz
sub
les
das
addr16
and
fidivrs
repnz
add
lea
xchg
inc
loope
imull
cs
dec
jmp
int3
lds
cmpsb
mov
loope
enter
xor
dec
push
xchg
test
fsubrl
std
sbb
add
ficompl
add
sbb
cmp
fldcw
sbb
mov
mov
pop
xor
fwait
cwtl
xchg
out
and
dec
cltd
xorl
cmp
inc
dec
dec
cmp
popf
daa
cmp
aad
push
add
adc
fsubs
sbb
mov
mov
test
out
mov
jge
cmp
pop
pusha
jmp
int
cmp
mov
add
mov
insl
imul
pop
push
push
jae
dec
push
push
subl
add
aam
call
movsl
adc
mov
mov
push
fidivs
divl
mov
inc
fwait
xor
cmpsl
bsr
mov
dec
inc
test
add
ret
outsb
inc
xchg
adc
repnz
pop
ljmp
mov
inc
add
mov
mov
add
adc
rorl
sub
test
lret
cmp
mov
rol
push
les
or
sbb
into
dec
insl
jp
push
lcall
aad
pushf
aam
fdivr
nop
inc
dec
scas
jmp
test
mov
pop
add
lcall
adc
aam
dec
insb
xor
xchg
inc
popa
cmp
mov
lods
ss
test
pop
fildl
inc
sbb
or
hlt
pop
test
xchg
mov
mov
mov
mov
mov
leave
xlat
mov
mov
lods
in
int3
call
push
dec
mov
or
idivl
mov
xchg
cmp
pop
cmp
push
stc
imul
pop
push
mov
int
dec
sti
mov
popa
loop
mov
out
mov
add
outsb
mov
xchg
push
loop
jb
and
inc
lds
arpl
mov
xor
sub
sti
arpl
inc
dec
jmp
out
lret
dec
xchg
adc
sahf
mov
shlb
sub
mov
dec
imul
popf
inc
jno
scas
cmp
stos
cmp
arpl
ret
xchg
outsl
mov
cltd
and
and
xchg
into
push
mov
mov
into
mov
add
mov
shr
lds
mov
enter
add
in
jae
cmpsb
push
add
xor
mov
push
adc
arpl
pop
test
iret
icebp
xchg
jbe
add
popa
mov
icebp
js
push
xor
lds
in
ja
sub
pop
sarl
stos
es
je
push
cmpsb
adc
ljmp
imul
call
mov
mov
jmp
mov
jge
mov
aaa
fbld
ret
or
inc
cltd
adc
sahf
stos
inc
hlt
add
testb
push
or
lret
fcmovnu
clc
pop
add
mov
mov
enter
fs
mov
rorl
mov
pop
mov
xchg
daa
cmp
pop
arpl
mov
mov
imul
fnstsw
decl
ds
or
sub
sub
pop
fdivrl
cmc
nop
dec
dec
jns
movsl
ja
aad
mov
int3
es
xchg
lret
hlt
repz
lods
out
test
addl
push
or
clc
fisubl
xor
imul
adc
int
jno
add
mov
sub
pop
jnp
fistl
stc
pop
out
push
mov
mov
out
lods
push
jl
or
lock
mov
rcll
or
mov
loop
in
call
cmp
sub
jecxz
daa
outsb
cmp
cmc
and
mov
jp
cmp
xor
push
daa
incb
sbb
xor
stos
xorb
inc
push
loope
inc
ja
add
sbb
invd
popa
or
mov
ffreep
mov
in
cmp
mov
mov
inc
shrl
loope
das
lahf
outsb
aas
or
xor
mov
incb
pop
mov
outsb
sbb
clc
xchg
daa
push
push
adc
int
pushf
push
lahf
call
movsl
shlb
dec
sub
xchg
je
pop
shlb
mov
mov
mov
out
aad
xchg
xchg
pop
pop
pop
lcall
jmp
cmp
adc
lods
inc
std
inc
pop
ret
int
push
mov
and
decl
pop
icebp
data16
dec
adc
pushf
xor
ret
loopne
imul
dec
jb
mov
arpl
xor
cwtl
scas
divl
dec
push
jg
add
rcrl
cmpsl
push
fdivs
insl
sub
mov
mov
test
call
push
fwait
push
cmp
or
add
and
cmp
sbb
mov
mov
sub
aaa
outsl
das
cmp
loopne
cli
push
daa
in
jl
xchg
jmp
rcrl
je
sti
hlt
sbb
outsb
sbb
pusha
rcll
adcb
mov
pop
pop
fidivs
leave
fcomp
movsl
sbb
cmp
push
dec
mov
xchg
jo
and
inc
imul
cmp
push
test
cld
push
jmp
xor
loopne
cmc
sbb
pop
ret
jl
or
jl
add
sti
pop
mov
mov
xchg
push
loop
push
lret
dec
sahf
or
notb
adc
and
jp
pop
ror
int
arpl
jno
aaa
inc
lret
cltd
cmp
xchg
pop
stos
dec
or
xchg
or
sub
stc
add
jne
sbb
xor
mov
cmp
lret
pop
xor
push
adc
lret
push
pop
sbb
lret
gs
xor
fcomps
cmpsb
mov
out
xor
lock
xchg
jae
mov
pop
ds
stc
cwtl
push
out
mov
sbb
das
push
mov
xor
dec
or
xor
lock
push
mov
inc
lea
push
push
jbe
subl
leave
in
outsb
push
dec
jecxz
les
lock
bound
mov
loopne
jl
mov
fiaddl
xor
inc
ljmp
mov
cwtl
sub
jo
sub
pop
js
scas
and
push
mov
imul
push
xor
loopne
jb
jnp
or
xorl
xchg
arpl
xchg
and
andl
call
stos
xorb
xor
daa
xor
xchg
mov
jmp
lods
fistpll
cmp
aas
mov
cmp
das
fdivs
movsb
imul
sub
test
mov
xchg
mov
jmp
ds
jp
test
cmp
repz
in
aam
in
mov
hlt
shlb
sarb
out
cltd
cmp
arpl
or
jne
in
dec
scas
iret
gs
sub
lahf
mov
repz
cmp
cmpsb
loope
mov
fisubrs
scas
jmp
xor
push
add
sbb
inc
dec
cmpsl
mov
add
pop
icebp
je
insb
jg
inc
lcall
push
push
pop
xchg
adc
push
pop
ja
inc
cs
push
je
push
inc
xor
repnz
das
out
sub
mov
testb
subb
fisttps
mov
jp
jecxz
xor
stc
popf
clc
lcall
cmp
dec
push
inc
xor
mov
insb
dec
jg
pop
dec
or
xor
out
fcoms
mov
std
mov
or
fwait
dec
out
pop
mov
imul
lods
pop
test
out
test
addr16
jnp
and
xorb
pop
xor
mov
dec
cmp
mov
cmc
add
jno
pop
push
mov
out
cld
inc
pop
insb
ljmp
inc
add
ja
jo
daa
bound
aad
ja
icebp
pop
pop
cwtl
and
popa
cmpsb
mov
in
pop
lock
or
hlt
inc
cwtl
and
pop
mov
in
pop
inc
sub
sub
lret
lret
push
pop
test
aam
inc
je
out
sbb
xor
ss
ret
push
xor
es
xor
imul
add
stc
fistpll
pop
pop
jg
out
cmp
lods
lods
in
sub
es
stc
sbb
loop
add
fldenv
jmp
movsl
pop
repz
fidivs
xor
outsb
fcomip
arpl
mov
lahf
pop
mov
shl
das
jns
pop
je
xor
popa
xchg
jmp
mov
loopne
mov
cmp
push
mov
adc
lods
sbb
mov
pop
mov
ret
mov
std
addl
outsl
mov
pushl
pop
movsb
mov
mov
dec
adc
cmc
mov
mov
push
pop
not
int
mov
jg
cltd
xchg
xchg
les
mov
call
mov
dec
push
popf
pop
jp
push
jns
xlat
loope
adc
fcmovbe
mov
sub
add
push
sti
loop
jl
jle
scas
lods
push
sahf
fdivrl
loop
mov
test
cmc
or
cmp
push
pop
test
cmp
repnz
fimuls
push
lretw
push
mov
push
scas
imul
daa
adc
icebp
add
push
jp
xchg
add
lret
xor
jge
pusha
in
aaa
dec
imul
sbb
lahf
inc
mov
and
jmp
add
push
cmp
and
bound
xchg
mov
sub
fildl
int3
mov
xor
xor
out
je
inc
jo
loopne
gs
mull
pop
mull
movsl
mov
lahf
ja
mov
and
mov
cmp
loope
adc
lock
nop
mov
dec
pop
adc
xor
mul
adc
cmp
ljmp
fwait
jae
fdivrl
mov
adc
xchg
inc
out
push
je
bound
jp
mov
inc
mov
cmp
pop
cmc
pop
imul
mov
out
hlt
dec
ret
mov
movsb
out
cmpsb
xor
mov
inc
out
out
push
pop
mov
test
lahf
mov
enter
cli
xchg
clc
jle
pop
pop
hlt
and
jo
pop
sub
xchg
cmp
jnp
aas
and
jg
lret
xchg
inc
sbb
out
int3
test
ds
sub
fidivrl
add
loope
inc
mov
ror
push
stos
hlt
inc
and
dec
pop
daa
in
inc
rolb
cmc
cmpsl
xor
dec
add
dec
jne
in
or
sti
cs
popf
bound
imul
mov
or
xor
addb
pop
fldenv
xor
add
shr
in
xchg
sub
mov
mov
int
push
mov
insl
sub
call
dec
xchg
add
roll
push
imul
pop
int3
add
mov
xor
jnp
dec
mov
adc
lret
cld
lcall
nop
push
inc
and
cmpsb
lcall
shlb
dec
cmpsb
jle
rcl
and
ss
sti
les
dec
repnz
jns
dec
jmp
inc
mov
aas
push
pop
sbb
int
xchg
mov
cmc
add
pop
xor
mov
andb
sbb
add
movl
lds
mov
mov
push
out
xlat
inc
nop
fcomi
mov
inc
daa
and
push
rcrl
sub
hlt
adc
ja
pop
or
out
mov
imul
sub
adc
pusha
popa
pusha
dec
or
std
jecxz
adc
mov
rcrl
jp
xlat
pop
push
push
aad
push
test
data16
jge
dec
mov
or
xchg
movsl
pusha
jbe
xchg
cmc
jb
push
push
mov
ljmp
lock
push
das
mov
ja
mov
xlat
out
xchg
mov
xor
test
shrl
sbb
rol
xchg
fdivrs
repnz
xor
pop
push
sarb
fbld
repnz
mov
xor
outsl
vmovd
aad
movsl
stos
xor
insl
setg
pusha
mov
cmp
mov
sbb
jecxz
mov
sahf
add
dec
jae
lret
popa
push
jno
out
das
pop
sbb
loope
lret
mov
xchg
sub
out
xor
aaa
or
push
xchg
push
mov
outsl
ja
mov
cmpsl
xor
mov
outsl
xlat
add
adc
lahf
cld
lretw
adc
shll
xchg
imul
push
pop
jl
cs
out
int3
mov
mov
incl
jle
mov
jo
test
adc
mov
cs
jae
jns
aam
xor
inc
lods
lock
sbb
push
and
movsb
sub
fidivrl
push
fiaddl
sbb
pop
cmpsl
scas
pop
icebp
icebp
scas
xlat
dec
sub
pop
or
lds
testl
xor
lcall
pop
mov
or
push
jl
outsl
rolb
dec
and
xlat
js
vmovaps
sbb
insb
pop
fimuls
int
inc
in
push
das
dec
sti
xor
dec
in
lods
mov
or
imull
popw
jb
fisubrs
sub
xchg
mov
jnp
sbb
adc
and
dec
sub
mov
fmul
pop
cmp
push
insl
adc
jle
and
popa
fs
cmpsl
sbb
mov
inc
rolb
lret
xchg
shlb
pop
dec
scas
sbb
fcomp
push
in
loop
pop
ret
nopl
outsb
jno
push
decb
mov
ret
xor
lret
arpl
xchg
mov
data16
shl
or
and
pop
scas
and
xor
mov
cmp
sbb
jmp
call
cmp
push
ret
xor
xor
mov
shl
cmpsb
xor
notb
shlb
pop
jo
mov
and
lea
int
ficomps
mov
daa
sti
push
imul
repz
mov
xor
in
das
add
fs
scas
stos
lea
in
mov
adc
mov
dec
mov
sbb
add
add
jns
and
mov
and
cmp
mov
scas
xchg
insb
add
call
inc
sub
inc
sbb
xchg
xchg
loope
xor
stos
loope
sahf
insl
sbb
xor
mov
sbb
ret
dec
mov
mov
je
ds
mov
jo
cmpsb
pop
xchg
jge
lods
push
dec
dec
push
fnstenv
mov
lods
sub
insl
xor
jb
cmp
mov
out
and
lods
imull
pop
mov
push
ja
push
aam
inc
sub
jnp,pn
inc
jns
mov
adc
fstl
pop
mov
rorl
xor
add
mov
push
dec
sti
mov
loop
int
icebp
pop
jl
inc
je
loopne
sahf
push
lds
and
pop
int
rorl
std
xchg
stc
xor
mov
sub
cmc
mov
ljmp
or
stos
xor
xor
imulb
lahf
popf
sub
and
loope
or
and
adc
sarb
pop
je
js
lahf
repz
jae
sbb
mov
adc
mov
xchg
sbb
push
sub
insb
ljmp
neg
scas
call
test
inc
sbb
lea
arpl
je
xchg
and
rclb
and
inc
int
xchg
sub
mov
lds
or
jmp
cmp
adcb
fisubrs
aad
push
dec
movsb
prefetcht2
mov
jb
push
cmp
or
js
or
jmp
jp
pop
lods
lea
jae
aad
xchg
push
aas
pop
adc
jae
mov
rcr
push
jnp
in
jae
lret
adc
inc
xorl
adc
sub
jae
aas
mov
sub
cmpsb
mov
pop
push
mov
push
push
cli
imul
add
and
in
push
clc
faddp
jle
or
jnp
std
xchg
dec
jb
les
jb
nop
dec
rcrl
mov
jl
out
add
cmp
pop
fidivrl
mov
sbbb
dec
decl
jl
lds
mov
jge
push
insb
or
or
lret
int3
dec
mov
cltd
inc
js
adc
loopne
inc
fnstsw
rolb
cmpb
jnp
and
mov
mov
and
xchg
sbb
enter
pop
push
lods
jge
inc
shrl
inc
sbb
cwtl
scas
sub
add
mov
cmc
out
xlat
mov
xor
jbe
mov
rcrl
xor
into
movsl
mov
add
into
cmc
and
repz
dec
push
lods
or
repnz
in
cmp
push
inc
mov
rorb
sbb
xor
ret
xchg
sti
mov
test
ret
movsl
lods
pusha
mov
cmc
mov
ss
and
sbb
pop
mov
cwtl
jmp
cmp
pop
arpl
push
jg
sub
mov
push
adc
inc
arpl
sub
dec
xchg
xchg
aad
inc
arpl
inc
sbb
and
jmp
mov
std
push
out
call
pop
add
push
pop
jo
mov
popf
in
mov
jle
repnz
jmp
push
negb
movsl
or
jne
cmc
test
adc
icebp
repz
ss
and
cs
movsl
pop
into
mov
adc
std
pop
dec
xor
xor
sbb
popl
pop
movsb
out
mov
mov
fmull
jecxz
sbb
fnstenv
mov
pop
out
lcall
add
pop
xor
sbb
adc
cmp
repnz
push
mov
inc
outsl
or
pop
lock
popf
leave
pop
cli
ljmp
inc
or
mov
dec
pop
fildl
push
std
rcrb
sub
mov
fimull
cltd
mov
sub
sahf
dec
sbb
or
mov
inc
xchg
mov
loop
outsl
shl
mov
sub
out
aaa
rorb
pop
mov
lret
xchg
imul
jl
cmp
lea
add
jbe
repnz
inc
adc
repz
xchg
shll
cmp
test
jbe
inc
clc
push
or
shrl
ret
xchg
jne
pop
push
mov
push
cwtl
adc
mov
mov
xchg
sub
in
fwait
mov
jge
es
jge
mov
mov
data16
fsts
sub
xchg
es
test
push
cmpsb
repnz
pusha
aaa
fmul
test
jns
out
and
jae
or
mov
jge
aaa
repnz
and
or
cltd
hlt
and
movsb
enter
pop
out
shll
loop
sbb
clc
jle
xor
inc
divb
arpl
xlat
rorb
sarb
rcrl
repz
lods
mov
data16
sbb
sbb
outsl
add
lods
subps
shr
fadds
sub
mov
xor
pop
pop
push
dec
bound
sbb
pop
cs
adc
enter
iret
shrb
cmp
push
xchg
ss
xchg
mov
pop
mov
lock
cmp
pop
pop
push
push
je
stc
rorb
mov
jne
pop
mov
cmp
mov
pop
int
mov
dec
lods
cmpl
clc
pop
sub
mov
sbb
push
dec
imul
loope
jle
loop
pop
xor
test
or
mov
add
and
cs
mov
popa
and
jbe
dec
dec
negw
rcrb
sub
inc
cmp
jno
mov
add
arpl
push
add
xor
mov
and
sti
mov
jge
add
mov
dec
clc
xchg
mov
sub
repz
pusha
mov
and
cmc
pop
sbb
loop
insb
add
sbb
cmp
mov
mov
xlat
dec
xchg
insb
movsb
or
call
xor
sarl
add
movsb
fisubrs
sbb
mov
sbbb
jno
add
push
jne
aaa
mov
add
push
arpl
lret
das
jb
iret
in
loope
jmp
fistpl
cmc
inc
add
pusha
jmp
mov
gs
inc
test
and
icebp
cmpsb
loopne
sahf
mov
add
mov
fldcw
sahf
xor
xchg
dec
pop
loope
pop
daa
pop
scas
xor
cli
fsts
push
mov
and
mov
in
mov
sbb
daa
push
ja
xchg
js
ljmp
adc
shl
fidivl
repnz
stc
adc
xchg
adc
inc
cmp
push
or
aad
fistpll
push
lahf
xchg
push
repnz
or
cmc
mov
mov
adc
insl
cmp
pop
add
or
ss
aaa
adc
pop
sub
cmp
jle
xor
sbb
ja
loopne
and
pop
cli
fisttps
call
mov
jmp
push
test
pop
push
test
sub
adc
loop
ret
add
sti
xchg
dec
in
xchg
in
jl
cmc
daa
xchg
sub
rcr
jne
int
adc
stos
lcall
cmpsl
icebp
jle
mov
xor
or
push
cmp
movsb
or
lock
or
xor
daa
xchg
sti
ficomps
addl
dec
das
jl
lds
pop
xchg
ss
jp
xchg
fidivs
sub
in
setg
test
mov
addb
xor
and
rclb
icebp
push
jno
loopne
popa
lcall
or
repnz
mov
push
cmp
dec
sub
lock
rolb
test
mov
cmpsb
pop
sbb
popa
xor
sub
cli
lret
in
mov
pop
adc
adc
pushf
es
add
dec
sub
das
sahf
pop
cmp
add
insl
orb
out
adc
mov
movsb
movsl
sub
shrl
loope
aam
mov
push
and
jmp
nop
mov
mov
xor
shlb
int3
cmpsb
push
adc
aas
out
dec
add
dec
pop
repz
jmp
insl
repz
lcall
add
into
test
call
popf
add
scas
pop
and
out
stos
lret
and
in
in
lahf
test
repz
in
pop
fists
aaa
push
js
int
xchg
jns
pop
mov
pop
mov
lret
xchg
shl
arpl
std
inc
or
jo
aam
lods
fisubrl
push
test
out
jae
xor
jno
add
mov
jle
xor
iret
imul
xchg
push
call
int
sub
xor
outsb
xor
and
pop
xchg
call
add
test
mov
outsb
xchg
dec
insl
lods
fldenv
cmp
daa
add
mov
jne
mov
clc
jno
lret
f2xm1
daa
ret
scas
cmp
lret
xchg
mov
iret
or
xor
pop
je
mov
inc
lcall
cmp
aad
sti
fcmovbe
mov
dec
fdivrl
stos
cmp
cltd
shrl
mov
fisubs
in
outsb
and
test
arpl
cmpsl
mov
bound
mov
fisubrs
lea
push
cmp
fstpt
inc
lods
mov
fcmovnu
loopne
rorb
imul
mov
cmp
orl
test
icebp
fidivl
sti
mov
fnstenv
roll
mov
xor
mov
stos
movsl
es
cwtl
outsb
cmpsb
mov
rcr
dec
lret
xor
cmp
xchg
scas
sbb
fs
or
imulb
mov
pop
mov
inc
push
rcrl
and
aad
xor
mov
jg
cmc
les
lock
or
and
test
push
fsubrs
jno
mov
lahf
jb
fldenv
lcall
outsl
icebp
mov
jbe
sbb
dec
lods
dec
outsb
push
jae
mov
mov
loope
add
sbb
lret
add
pop
mov
mov
sub
dec
and
ljmp
movsb
pop
aas
aam
add
cmpsl
sbbb
out
or
add
lock
mov
and
jno
les
test
add
xor
xchg
daa
inc
jmp
fidivl
loopne
adc
es
jle
cs
imul
push
fucomi
mov
push
dec
test
std
xchg
imul
mov
sub
push
adc
mov
dec
out
shrl
ljmp
mov
sub
cs
push
push
pop
sub
pop
push
inc
sbb
stos
fildl
push
or
inc
insb
je
push
and
pop
or
xlat
cmp
xor
add
arpl
repnz
add
mov
and
js
mov
aaa
mov
mov
in
mov
push
in
adc
rorb
outsb
mov
mov
aam
inc
xchg
aaa
cmp
xchg
scas
inc
jge,pt
outsb
fimull
out
xor
xchg
mov
orb
cmpsb
jbe
push
movsb
mov
dec
cmovo
lea
popf
outsb
and
dec
loopne
lea
mov
xchg
pop
sub
push
dec
xchg
sarb
shll
xchg
insl
jle
ja
aam
mov
stos
aad
dec
ret
sub
xchg
pop
mov
inc
adc
mov
and
data16
sti
adc
sub
int
lock
pop
mov
push
outsb
cwtl
or
mov
sub
cmc
pop
mov
add
cmpsl
cmp
enter
add
mov
sbb
loopne
fmuls
add
push
or
xor
cli
inc
sbb
jle
sbb
push
dec
jo
mov
xor
mov
jge
outsl
divl
sbb
xchg
jle
addr16
mov
push
std
mov
enter
dec
icebp
aas
sarb
inc
fs
push
xlat
out
imul
jle
aam
mov
fsts
loopne
jg
and
std
daa
imul
mov
xor
nop
int
mov
push
je
pop
lret
push
pop
push
dec
lret
push
sarb
out
xchg
std
inc
scas
pop
adc
incb
nop
jbe
je
cwtl
mov
popa
les
loop
das
dec
push
adc
imul
push
popa
and
daa
pop
mov
jge
ret
test
or
lds
stc
cwtl
fcoml
mov
and
insl
xorl
and
lds
hlt
popa
sbb
cmpsb
dec
add
push
or
mov
data16
sub
stos
dec
fbld
add
or
lock
push
fstpl
inc
jmp
cmpsb
movsb
pop
xchg
cmpsb
push
push
push
pop
mov
ficoms
or
push
xchg
cmpsl
jmp
aad
imul
sbb
enter
pop
mov
mov
fnstenv
fildll
mov
shrb
test
pop
cld
mov
sti
outsl
xor
sbb
add
mov
pop
pop
mov
mov
leave
mov
mov
jl
stos
enter
pop
scas
sbb
push
mov
mov
in
jmp
testl
rcll
inc
lahf
imul
das
cmp
lock
in
aaa
adc
mov
jp
mov
xchg
pop
or
rclb
subl
inc
cmp
dec
inc
fnstsw
out
xchg
out
mov
mov
in
xchg
stc
push
std
fistps
mov
movsb
sub
cmp
movsl
cli
push
js
xor
popa
xchg
nop
cli
outsl
adc
dec
xorl
xchg
ds
fwait
xchg
jne
ror
out
cmp
mov
jae
or
sbb
jo,pn
pop
xchg
mov
addr16
sub
mov
cmc
push
les
sub
xchg
ja
push
cli
sub
cs
xchg
loope
fwait
or
ss
push
fmulp
mov
xchg
lret
lcall
xor
fadds
cmc
imul
sub
ret
out
pop
pop
gs
mov
adc
loop
cmpsb
sub
hlt
popw
jns
testl
mov
inc
cmpsb
test
fldl2t
mov
fnstcw
in
cmpsl
and
fisttpll
add
shl
xor
frstor
ja
js
xlat
pushf
mov
js
hlt
arpl
sub
mov
sbb
add
inc
std
int
cmp
push
add
xchg
mov
mov
lods
and
cltd
jge
xor
les
and
mov
rclb
adc
ss
lds
pop
sahf
fs
lea
mov
scas
sahf
cmp
les
lea
mov
repz
in
xor
mov
sti
pop
inc
add
faddl
dec
sbb
push
aas
xchg
jle
cmp
pushf
stos
xorb
rclb
pop
sub
out
roll
int3
mov
cwtl
std
sub
cltd
mov
movsb
and
jo
jno
lret
rolb
out
fwait
inc
lock
xor
scas
lcall
jns
cvtps2pi
scas
into
mov
cli
gs
iret
pop
mov
lea
hlt
cmc
dec
repz
popa
xchg
lock
cmc
repz
in
jb
outsb
in
ja
loop
ljmp
push
push
xchg
and
mov
fisubl
dec
jns
jae
lods
cmpb
movsl
xchg
jns
sbb
mov
ss
sti
dec
pop
and
add
cli
dec
aaa
or
clc
in
and
aas
mov
sub
and
nop
or
leave
imul
xchg
lcall
outsl
inc
xor
ficompl
mov
dec
hlt
std
xchg
lds
mov
enter
pop
rcrl
divl
cmp
mov
scas
mov
mov
sub
xchg
adc
cmp
cs
adc
cld
dec
or
insl
sti
test
xor
push
or
xchg
lock
mov
or
out
adc
jae
jae
pop
call
mov
aam
mov
push
dec
mov
sub
and
or
or
std
or
mov
int3
and
add
mov
aaa
test
jae
into
dec
stc
cwtl
js
outsb
add
rcrl
pushf
or
loopne
mov
push
push
inc
xchg
sub
push
mov
xchg
pop
test
out
sbb
push
inc
ljmp
lcall
dec
sarb
aad
loop
cli
jae
jne
fdivrp
inc
push
fildll
xor
int
mov
sbb
sahf
mov
sbb
inc
push
mov
dec
dec
mov
gs
out
fs
gs
mov
aam
mov
dec
fsts
and
dec
loopne
mov
add
mov
faddl
or
jae
mov
adc
pushf
lcall
lods
mov
add
adc
fwait
stos
les
aam
imul
dec
xchg
push
pop
cmp
cld
int3
pop
and
aad
imul
lea
add
les
inc
adc
adc
cmpsb
hlt
js
mov
push
aad
loop
outsb
popf
jl
out
dec
mov
bound
imulb
cmp
popa
mov
jbe
jnp
mov
inc
add
test
xor
pusha
adc
fiadds
shl
cmp
pop
jbe
push
out
dec
xor
sbb
dec
adc
adc
mov
pushf
xchg
xchg
dec
xlat
adc
lods
hlt
repnz
sbb
lds
scas
cs
push
ljmp
xor
pop
inc
mov
cmp
insl
fadds
mov
hlt
push
leave
into
xor
or
pop
jmp
test
add
sub
pop
fistpl
dec
xor
and
loop
inc
sub
jo
push
dec
push
push
sub
scas
sbb
test
outsl
ja
jo
mov
lods
test
mov
jg
pushf
sti
sub
or
dec
repz
mov
test
or
mov
stc
aaa
shrl
dec
daa
xchg
loopne
sti
mov
adc
out
cwtl
xorl
test
cmp
and
mov
mov
push
les
mov
aas
xchg
popf
jno
push
insl
cmp
sbb
pop
ja
shrb
adc
add
sub
lret
xor
insl
jl
xor
lods
ss
lret
adc
dec
inc
push
xchg
adc
push
fdivs
jo
adc
aas
or
mov
popf
std
pop
jl
xor
jp
stc
sti
fs
adc
sub
push
xchg
and
cmp
fistpl
mov
stc
dec
and
add
aam
stos
lock
sub
pop
push
cmp
icebp
je
mov
mov
pop
sti
iret
js
push
dec
push
mov
imul
mov
pop
popf
add
aad
scas
aad
inc
cli
dec
sbb
and
insb
adc
cmpsb
pop
lcall
enter
push
cli
dec
movsl
pop
andl
adc
shrb
mov
sbb
xchg
rcrb
jne
push
sbb
test
and
and
or
jecxz
fscale
fdivs
xlat
xchg
outsl
cmp
lea
ret
fwait
push
adc
xchg
dec
out
aas
lock
pushf
pop
push
pop
insl
cwtl
outsb
addr16
out
daa
jp
popf
add
jns
add
sub
fs
je
sbb
in
jbe
loopne
xchg
hlt
fldcw
sub
test
sub
inc
loope
pop
push
add
and
rolb
rcl
mov
pop
and
mov
pop
or
lret
std
mov
sbb
sub
daa
cltd
mov
inc
cmpsb
repnz
push
cmpsb
popa
cmp
icebp
cmc
mov
inc
arpl
jae
push
cld
pop
or
or
add
es
clc
and
or
adc
and
pop
lcall
decl
jg
pop
and
test
je
iret
rcrb
fmuls
lret
insl
shlb
addl
loop
lahf
add
cmp
add
mov
cmpsb
call
std
cmc
pushf
lahf
lret
pop
push
add
fdiv
add
pushf
pop
pop
pop
insl
ja
testl
adc
lcall
jae
int3
pop
sub
or
outsb
pusha
mov
je
clc
das
popf
push
xchg
mov
jp
jmp
js
jp
xchg
push
sub
adc
int3
add
leave
fidivl
test
push
cmc
mov
inc
imul
arpl
into
loopne
cmp
dec
inc
in
xorb
cmp
inc
fisttps
sahf
jno
movsl
roll
in
std
fs
xor
mov
ljmp
out
pushf
lods
out
dec
call
lahf
push
inc
stc
inc
push
dec
mov
add
std
mov
filds
sbb
jo
jne
xchg
sub
inc
and
xor
mov
lahf
cmp
sbb
insb
out
pop
xchg
sarb
jnp
and
test
lret
std
jno
inc
es
insb
lea
mov
cmpsl
cltd
jle
lods
fwait
js
mov
aad
dec
push
dec
jp
out
scas
into
ret
xchg
sbb
cmp
push
sub
int
mov
stc
jecxz
iret
and
xchg
push
test
jg
cmc
les
repz
roll
xchg
inc
ret
rcl
loop
push
roll
pop
pop
jbe
idivb
push
addl
in
cmp
mov
xchg
mov
add
and
insl
inc
pop
dec
insb
lock
out
inc
imul
dec
in
xchg
inc
sub
push
add
mov
sub
pop
xor
and
bt
pushl
dec
bound
jmp
out
mov
dec
xor
jne
xchg
xor
xorb
pop
sub
mov
jl
sbb
loopne
xlat
jo
or
popa
test
dec
ret
nop
mov
jae
in
pop
lods
or
cmpsb
push
mov
repz
lds
mov
std
add
icebp
enter
pusha
mov
cmpsb
sub
in
cmp
fmull
int
add
repz
ffreep
mov
mov
xchg
inc
not
and
push
or
das
fsts
fidivl
inc
dec
scas
jge
push
push
dec
ds
sub
adc
or
ret
aam
xor
and
shufpd
mov
fst
jne
test
xchg
jge
xor
into
popa
inc
popa
sbb
or
in
pop
xor
xchg
mov
jg
shll
mov
or
outsb
bound
fstps
jg
cmpb
and
mull
test
pop
mov
iret
data16
psubd
lret
jmp
aam
push
test
test
shlb
adc
cmp
mov
rcl
ds
adc
sub
sub
add
xchg
test
push
sbb
push
jae
and
inc
push
mov
pop
mov
mov
pop
in
pushf
imul
mov
xor
shll
sub
and
fcmovnbe
mov
xchg
xor
int
cwtl
sbbb
xor
fst
push
sarb
sarb
jbe
mov
out
jae
adc
add
add
xor
lcall
add
in
sub
adc
imul
xchg
push
jmp
sub
mov
out
imul
clc
pop
lret
inc
loop
mov
cmp
lods
sbb
mov
add
jmp
cmp
or
lods
sub
cmp
lea
inc
subb
out
sbb
lahf
push
pop
test
push
mov
in
xchg
pop
mov
xor
inc
or
test
pop
jecxz
adc
lods
sbb
or
cltd
out
add
dec
mov
rcrl
pop
std
adc
mov
dec
push
test
pusha
stc
or
inc
or
and
mov
sbb
add
fwait
mov
push
or
testb
jne
or
mov
mov
add
mov
sub
mov
lock
and
ja
sbb
jno
and
sti
xorb
mov
adc
loop
ret
sbb
ljmp
imul
arpl
in
adc
cmp
add
pop
mov
or
adc
mov
lods
jne
jnp
adc
les
or
lret
jne
int3
mov
xchg
test
add
nop
rcrb
movsb
xchg
fistps
out
fildll
aaa
mov
cmp
neg
orb
mov
jmp
fwait
add
pop
push
mov
mov
ret
inc
dec
push
add
pop
les
ret
push
enter
mov
sub
test
pop
nop
fmulp
notl
ljmp
jnp
out
xchg
mov
mov
into
in
movsl
fs
push
push
lds
btr
in
push
daa
out
mov
dec
loop
mov
lahf
repnz
add
add
outsb
das
pop
out
inc
in
mov
scas
call
xlat
dec
arpl
std
inc
sbb
mov
and
xchg
inc
inc
dec
in
sbbl
cmp
cmpsb
cmc
push
pushf
xor
cmc
dec
mov
ret
int
test
cmp
sbb
add
mov
xchg
repz
cmp
scas
cwtl
or
sbb
dec
js
ds
xor
xor
aaa
xlat
dec
push
and
idivl
add
jmp
popa
sbb
sub
xchg
cmc
mov
push
addl
pop
cmp
cltd
jmp
sbb
lds
xchg
mov
out
add
mov
sub
outsl
dec
or
lea
mov
cld
jae
xchg
daa
movsl
adc
mov
adc
mov
enter
fs
pop
es
or
movsl
shrb
mov
dec
add
push
arpl
das
cwtl
outsl
jl
fwait
mov
leave
fdivp
pop
in
arpl
mov
cmc
and
fbld
xor
pushf
fcomi
xchg
xchg
jns
cwtl
xor
test
dec
test
rorb
jecxz
inc
lahf
leave
shrl
cltd
or
test
sub
mov
call
jo
out
adc
iret
pop
push
dec
pop
dec
daa
inc
js
hlt
mov
test
addr16
pop
in
cmpsb
jne
mov
dec
pop
mov
sbb
pop
push
push
xchg
mov
mov
inc
dec
les
inc
mov
push
mov
lret
pop
sbb
fcmovu
loopne
pushf
pop
das
cmpb
xlat
and
decb
mov
icebp
popw
aam
sub
mov
pop
pop
idiv
ja
dec
pushf
or
jnp
movsl
or
ljmp
pop
xchg
jge
push
test
add
je
or
icebp
jo
clc
jnp
xor
out
int3
sbb
cmpsb
mov
add
loopne
out
mov
sbb
fcoml
repnz
mov
cltd
adc
imul
sbbb
outsl
cmp
jno
inc
loope
sbb
xor
add
and
push
je
in
lods
lods
dec
lods
and
push
fstpt
inc
insb
push
push
insb
jns
fs
cmp
xor
stos
cltd
pusha
ficoms
int
pop
and
les
dec
clc
int3
cmp
mov
inc
push
hlt
cltd
jnp
ds
dec
out
or
mov
dec
jp
jnp
or
or
push
push
cmp
and
mov
mov
or
dec
add
std
mov
sti
dec
ljmp
xchg
xor
push
lret
mov
js
js
daa
shl
dec
fdivl
inc
ljmp
push
pushf
mov
dec
lret
xchg
dec
pop
xchg
ss
mov
inc
nop
inc
add
fistpll
imul
adc
jmp
aad
aad
xlat
sbb
mov
out
mov
or
xchg
cmpsl
dec
lea
clc
push
push
testl
dec
sarl
add
imul
icebp
xor
test
test
in
fiadds
call
xchg
sbb
push
cmp
xchg
mov
lock
jle
mov
xlat
iret
clc
sub
add
pop
jmp
dec
add
jae
scas
push
push
fldcw
les
test
pop
push
sub
rolb
filds
add
fs
jns
mov
xchg
iret
adc
adc
add
mov
rcrb
mov
insb
sbb
sbb
cmpsl
ds
jmp
push
mov
sub
pop
sti
pop
sub
inc
mov
push
sbb
push
xchg
mov
fwait
rolb
dec
mov
mov
lock
or
into
rcr
or
jle
xchg
fmul
imul
fiaddl
mov
jbe
and
test
mov
inc
in
loop
cmpsl
mov
inc
sbb
xchg
popf
mov
cmp
push
fstp
mov
loope
fnstcw
pop
data16
adc
es
push
push
in
push
test
jbe
addl
xchg
int
push
sub
sbb
dec
lods
lcall
aaa
push
xorb
je
scas
mov
sub
ljmp
pop
cmp
push
jmp
sub
gs
push
stc
or
in
push
and
mov
jge
mov
ret
jb
add
xchg
jns
mov
adc
jae
outsl
mov
jmp
arpl
sbb
pop
fldt
repz
out
dec
das
adc
inc
mov
test
out
push
dec
sbb
js
adc
xchg
aas
xchg
push
ss
aas
xor
inc
fs
rcrl
popf
or
push
xor
inc
jne
out
loop
cmp
loope
movsl
mov
jae
jmp
add
cmp
iret
pop
pop
add
pop
xchg
out
push
cmp
fwait
dec
or
xchg
mov
mov
inc
insl
ret
sub
and
movsb
adc
xlat
inc
jg
ljmpw
test
ret
dec
inc
jns
or
xchg
out
mov
cs
or
push
add
stc
fidivrl
and
leave
push
mov
cmpsb
popf
fsubrs
cmp
lock
xchg
clc
inc
ficompl
sbb
dec
fst
jp
adcb
loope
daa
push
sti
mov
rolb
shll
mov
or
je
xor
lock
dec
mov
jbe
nop
sahf
jg
outsl
loope
inc
mov
or
mov
js
gs
test
es
in
xor
sar
sbb
jg
sub
mov
adc
repz
inc
and
loope
push
mov
or
rcll
fsubp
or
adc
jmp
lcall
and
je
adc
int3
mov
mov
cmpsb
lret
pop
inc
leave
or
ss
jnp
daa
or
lods
lea
mov
cwtl
push
sahf
sbb
jp
cmc
mov
fcmove
sbb
rclb
cmpsb
adc
cmc
sarl
xor
pop
stc
ret
mov
mov
mov
adc
xchg
ret
loope
insl
mov
dec
pop
dec
loop
std
cs
shll
lret
fiadds
loopne
push
mov
ret
dec
stos
xchg
sti
xchg
mov
stos
hlt
adc
mov
aad
sbb
sub
loopne
ja
and
xchg
cltd
shlb
fimuls
jp
fsts
sbb
lods
jg
pop
push
mov
mov
rol
pop
add
or
xchg
addr16
scas
loop
mov
mov
out
fwait
ret
mov
xor
test
nop
fimuls
negl
lea
xchg
fmull
aas
ror
and
insl
cmpsl
mov
push
mov
sbb
dec
rcll
cmp
mov
mov
and
loopne
ja
jbe
mov
mov
imul
insl
je
xchg
push
dec
mov
movsb
out
dec
mov
add
xchg
pop
insb
fwait
xchg
sub
pop
jl
mov
mov
cs
xchg
insl
jno
repz
mov
aas
add
inc
sti
jne
inc
and
lret
imul
lds
xchg
mov
xor
mov
fimull
fcompl
pusha
xchg
and
js
ret
inc
es
xchg
pop
push
rclb
or
lds
das
ret
mov
xchg
divb
fisttps
xor
cmp
pop
cmp
stos
movsb
dec
mulb
xor
mov
stos
mov
cmp
mov
ds
xor
aas
lahf
roll
ds
inc
push
iret
inc
push
jmp
insb
xlat
mov
pop
sahf
jecxz
imul
cli
cmc
mov
xchg
xor
push
sub
adc
dec
or
adcb
clc
lcall
pop
or
mov
in
dec
cmp
xor
iret
add
cmp
ja
js
cmp
jl
shll
push
test
sbb
sbb
pushf
popl
xchg
test
mov
xlat
dec
adc
imul
jb
pop
adc
mov
nop
and
mov
jo
pop
xchg
cmp
out
insb
rol
idivb
call
jecxz
push
andl
js
arpl
or
sub
jmp
pop
add
scas
mov
lock
stc
hlt
push
mov
fcomp
jnp
fcomps
dec
xorb
imul
add
mov
push
push
mulb
xchg
sarl
cmc
xor
shll
out
arpl
hlt
lret
pop
push
sbb
inc
rorb
mov
cli
int3
inc
or
incl
xor
jo
mov
lret
cld
stc
and
inc
pop
sbb
push
dec
rol
dec
enter
int
mov
insl
iret
popa
psrlw
fdivrl
push
mov
jne
sub
out
or
lahf
test
add
rolb
clc
enter
out
out
adc
mov
xor
dec
fwait
cmp
dec
fsub
outsl
popf
fistps
inc
cs
sub
shlb
enter
sub
mov
sbb
cld
xchg
adc
fwait
sub
leave
outsl
and
jp
leave
ret
cmp
mov
pop
jge
and
sub
xor
fadd
sbb
cmpsb
sub
mov
loope
in
dec
pop
and
aad
cmpsl
rcrl
imul
sbb
movsb
xchg
hlt
add
mull
sub
das
es
subb
jnp
leave
out
movb
xchg
test
and
inc
sub
ja
movsb
sbb
xor
mov
jg
loope
jge
lods
jl
ds
vorps
icebp
mov
push
inc
or
sbb
bound
inc
add
cmpsl
jbe
xchg
xor
lahf
ficoms
int3
js
mov
jmp
dec
dec
sub
add
aas
jge
inc
xchg
sub
inc
fs
jp
outsb
xchg
adc
and
jge
aad
push
insl
inc
repz
push
and
xchg
xlat
cmpsb
adc
scas
xchg
out
clc
std
adc
call
movsl
insl
mov
gs
mov
inc
movsl
fiadds
add
pop
add
jae
mov
sub
dec
fidivs
data16
bound
ss
daa
inc
pop
sbb
adc
inc
sbb
jns
inc
mov
ss
clc
outsl
sbb
xor
in
fidivl
inc
xchg
test
lea
out
push
lret
jmp
or
push
sub
pushf
xchg
rorb
pop
mov
jnp
mov
repnz
std
gs
jecxz
in
mov
cmp
push
testb
sub
lret
cmp
adc
mov
repnz
add
push
sti
out
pminub
cmpb
xor
jl
mov
nop
lea
xor
stos
sbb
movsb
mov
inc
pop
sbb
call
sbb
lds
imul
nop
jmp
nop
in
test
sub
imul
jo
and
mov
jge
xor
jo
jecxz
and
hlt
sbb
adc
fistl
jnp
or
movsb
adc
lock
cwtl
xlat
aam
fisubs
push
adc
sarl
scas
or
mov
jae
insb
ret
or
or
stc
call
or
loop
loopne
sti
sub
add
addr16
mov
push
fisubs
add
in
xchg
lahf
or
push
mov
int
je
cmp
and
xor
fisubs
mov
mov
lret
stos
test
mov
or
dec
imul
orb
cmp
icebp
imull
sarw
clc
xor
jnp
fldt
push
rorl
mov
inc
jl
sbb
push
mov
lods
mov
fadd
je
insb
loop
rcrl
and
mov
cld
add
pop
adc
int3
js
and
push
rcl
push
pop
mov
into
or
mov
dec
adc
pmuludq
fbld
sub
ucomiss
dec
sub
stos
dec
cld
pop
loopne
int3
or
mov
xlat
add
fists
push
pop
mov
dec
push
or
xchg
test
ret
popa
out
push
shrd
push
mov
cld
jno
push
data16
inc
scas
mov
sub
sti
mov
int
xchg
ja
fdiv
fnstsw
mov
rol
fwait
and
and
lock
js
rol
xchg
or
gs
fstpt
push
sahf
mov
loopne
loop
call
and
dec
sub
shrb
lret
sub
jne
mov
in
insl
int3
push
sbbl
rcrb
mov
scas
or
fsubrs
add
add
call
test
rolb
mov
sub
jns
std
or
lahf
mov
mov
mov
xor
push
inc
mov
dec
mov
push
add
je
dec
inc
adc
icebp
sbb
and
leave
jge
xchg
stc
inc
pop
xchg
pop
xchg
in
mov
mov
aam
and
aaa
push
in
sbb
scas
inc
pop
je
lahf
cmc
rorb
iret
push
in
cld
or
push
inc
cmp
ret
cmp
shll
sti
push
xor
fmulp
jg
add
lahf
jne
outsb
in
sbb
inc
cld
mov
dec
cmp
in
lret
ljmp
lahf
jp
ja
es
jne
dec
pushf
in
jecxz
repz
call
das
addr16
sahf
cmpsl
jo
adc
jns
mov
scas
lahf
out
dec
cwtl
xor
daa
jns
es
xor
jb
and
cltd
je
xor
leave
orl
jne
jg
dec
lahf
jnp
xchg
sti
dec
das
rcr
dec
in
pop
push
sbb
fnsave
cmc
pop
jg
inc
pop
cmpsl
outsl
stos
das
stc
sub
mov
mov
xchg
insl
ljmp
sbb
xchg
fwait
mov
add
mov
push
jno
iret
jp
push
addr16
mov
repnz
sub
adc
pop
je
mov
pop
pop
xor
stos
jno,pt
call
dec
push
jg
sub
mov
jo
mov
fidivs
jp
adc
clc
mov
xchg
add
sbb
ficoms
mov
mov
out
jns
push
sub
pop
cmpsb
push
loopne
jbe
sbb
push
push
xchg
xor
adc
inc
mov
xchg
or
sub
test
in
es
push
mov
push
pop
lahf
pop
mov
loopew
pop
mov
fldenv
sbb
aam
scas
loop
leave
popf
int3
push
cmpsl
into
push
pop
jae
jecxz
cltd
inc
lahf
test
hlt
lea
push
mov
cmp
loope
daa
fucom
cmp
out
dec
jp
mov
das
loope
movsb
hlt
lahf
jno
lea
fdiv
jecxz
hlt
hlt
sub
flds
and
mov
lret
lods
xor
stos
dec
xor
xor
dec
ljmp
sahf
xor
clc
bound
repnz
xchg
mov
jmp
mov
pop
ret
push
xchg
xchg
lcallw
sub
mov
test
ds
cmpsb
or
pop
rclb
pop
insb
hlt
sysexit
sbb
lret
stc
je
mov
jno
lods
push
ret
lds
mov
lods
inc
stc
lock
cmp
dec
fsts
addr16
push
sbb
stos
inc
push
xor
pop
add
ljmp
loopne
call
cmp
mov
cmp
je
sbb
fstpl
pop
xor
ja
xchg
xchg
pop
pop
dec
cmp
into
xchg
lret
loop
cmc
push
test
adc
cmp
mov
jge
jp
cmpsb
gs
pop
in
test
sahf
mov
jmp
aas
sti
lea
repnz
dec
pop
lcall
mov
jae
xlat
lea
push
in
pop
or
mov
test
xor
subl
clc
divb
pop
mov
lods
popf
cmp
cmp
xor
dec
adc
inc
xorl
cmp
add
insl
fmul
jecxz
ror
mov
dec
jg
mov
or
cmp
aam
orb
sub
xchg
cmc
mov
adcl
jecxz
sub
mov
sub
stos
test
xchg
jne
aad
inc
data16
dec
cmp
cmp
jp
fmuls
adc
adc
inc
mov
and
lahf
jle
lcall
scas
arpl
int3
add
sbb
addr16
mov
jo
xchg
stc
push
and
cs
incb
lea
fstp
jo
inc
insl
fucomp
or
pusha
int3
adc
sub
mov
xor
mov
outsl
cld
push
scas
push
std
jne
ret
jns
dec
mov
xrelease
jp
xchg
ss
sbb
outsl
adc
add
inc
jg
insl
inc
pop
and
loope
push
sbb
lret
sarl
fdivr
push
loopne
ficoms
int3
out
inc
insl
mov
mov
repnz
pop
cmp
fdecstp
negb
inc
mov
cld
std
cmpsb
stc
xchg
inc
or
imul
mov
pop
inc
cmp
test
jbe
jne
js
push
imul
out
mov
addr16
sbb
and
pushf
add
sbb
sbb
mov
jb
lcall
pop
pop
and
insb
mov
and
or
pop
lds
push
shl
jne
in
fmull
xor
paddq
adc
sub
insb
lea
sub
jmp
iret
std
adc
mov
sbbl
test
jmp
popf
dec
scas
mov
adc
mov
push
inc
sbb
adc
pop
add
repz
pop
pop
imul
mov
ja
lcall
inc
iret
fs
cmp
xchg
js
dec
mov
mov
jae
cmpsb
dec
or
or
popa
mov
clc
repz
popf
inc
fdivs
pushf
xor
cs
fdivr
mov
or
cs
push
mov
and
fsubrs
in
fsts
push
lods
dec
loope
cmpsb
rcrl
cmp
out
pop
fdivrs
dec
adc
leave
movsl
push
insl
gs
out
xchg
in
jbe
sub
pop
add
push
dec
js
jl
outsl
jl
pop
lret
mov
movsl
insl
jae
add
pop
es
mov
or
add
lret
outsb
lods
adc
out
bound
mov
and
push
ret
xchg
scas
shll
ja
jge
push
rol
and
xor
lcallw
add
mov
jae
inc
mov
pop
and
adc
es
cmp
mov
pop
push
fistl
xchg
mov
xchg
les
stc
fldt
push
test
outsb
dec
call
mov
jne
out
sbb
mov
outsb
mov
xchg
and
rcll
jl
mov
xchg
pop
mov
pop
push
jnp
adc
fcomps
jbe
out
xorb
fisubrl
lahf
adc
or
mov
fldenv
cmpsl
sbb
repnz
add
inc
mov
mov
mov
sbb
hlt
xor
pop
out
sbb
sar
fldt
xor
ficomps
popf
popa
sbb
xchg
cmp
jge
dec
insl
cmp
shl
lret
mov
ds
cli
sahf
push
jo
xchg
movsl
cmc
add
inc
int3
cmpsl
add
push
jmp
push
iret
mov
imul
mov
cs
dec
dec
fsubs
lahf
out
ljmp
sub
lret
sbb
in
pop
add
push
fdivrl
es
popa
insb
nop
aaa
jo
sub
shll
pop
jmp
insb
and
and
add
push
mov
jb
or
sub
add
mov
sbb
je
sbb
and
mov
jae
cmp
in
xchg
mov
les
xor
sub
dec
add
mov
push
ljmp
xchg
or
add
inc
inc
xor
shlb
daa
xor
xchg
inc
sbb
pop
sub
push
in
les
nop
xchg
pushf
int
shl
push
jg
fidivrl
into
push
mov
jp
cmc
fwait
std
mov
pusha
popf
dec
add
rolb
les
js
sub
mov
pop
dec
push
push
mov
xor
fldl
pop
inc
lahf
andl
sbb
sbb
mov
cs
pusha
pop
inc
nop
xchg
or
sbb
mov
xchg
xchg
ja
xor
aam
fisttps
push
sbb
and
sub
and
fimull
cwtl
add
cmp
sub
xchg
adc
imul
hlt
mov
push
mov
sbb
loop
fmull
out
inc
or
data16
jns
xchg
mov
dec
repnz
mov
jno
das
test
test
shl
xor
push
pop
or
fmulp
sub
subl
jp
nop
cmp
xor
or
xor
pop
jnp
xchg
dec
lods
movsl
loope
mov
push
jae
jmp
and
xchg
mov
mov
movsl
test
inc
cld
mov
dec
std
negl
cmp
mov
addr16
ljmp
and
add
mov
pop
ss
dec
lea
fcmovb
add
jmp
into
ja
into
rcrl
xor
icebp
inc
pop
cmp
aad
mov
repnz
push
lock
mov
fiaddl
mov
mov
iret
lret
add
test
mov
into
sbbl
mov
stos
add
loopne
idiv
imul
out
add
xchg
lret
pop
aas
sub
xchg
mov
rorb
push
sbb
ret
and
movsl
aas
out
jns
pop
clc
ret
sub
rolb
leave
dec
cpuid
leave
mov
inc
jne
mov
jb
inc
gs
push
into
aad
sbb
push
dec
jge
xor
dec
nop
orl
sub
decb
push
xlat
mov
repnz
add
pop
aas
push
pop
sub
pop
adc
stc
push
outsb
sahf
imul
sbb
lret
lock
mov
cmpsb
pusha
xchg
stc
pop
or
sbb
sbb
adc
cmpsl
inc
movsb
inc
mov
add
push
or
inc
filds
pop
orb
jmp
cmpsl
mov
sbb
inc
sub
fnsaves
or
loop
sbb
xor
inc
ret
in
out
pusha
loope
or
pop
xchg
and
adc
fiadds
mov
sahf
not
scas
cmp
sbb
subb
jmp
push
fdivs
cmp
sub
cmp
std
movsb
out
push
pop
mov
imul
stos
test
mov
push
ret
xor
dec
mov
lret
dec
jno
add
xchg
fstps
dec
add
aad
jae
data16
jg
cmpsl
mov
scas
cwtl
or
push
xor
fs
sahf
xchg
stos
pop
ja
clc
scas
or
sti
rcl
hlt
and
divb
ds
or
sub
iret
cmp
sbb
jmp
shl
fcmovb
sub
stos
les
push
sub
jmp
cmc
hlt
cmp
aaa
int3
int3
les
lcall
mov
ljmp
subb
test
xor
adc
pop
idivb
stc
stc
mov
stos
push
xor
pop
or
jmp
or
lret
adc
cs
out
jmp
out
add
sbb
pop
insl
ret
aam
dec
lret
pop
sub
in
adc
and
xchg
addr16
jl
inc
xchg
cmp
ds
scas
inc
and
and
cmpb
sub
adc
add
pusha
xchg
or
sbb
imul
cmp
mov
sbb
sahf
inc
mov
sbb
jns
mov
into
jl
imul
or
test
and
push
bound
adc
pop
rclb
ret
out
mov
mov
nop
sub
mov
xchg
clc
add
push
fistl
add
fisubl
cli
or
stc
adc
inc
add
div
lret
xor
cmp
fadds
jecxz
xchg
orl
push
cmp
jge
add
xorl
pop
and
mov
push
and
inc
psrlq
icebp
dec
enter
cmp
mov
fdivl
movsb
sbb
pop
adcb
jne
and
push
add
sub
pop
xchg
test
fwait
jb
lret
andl
lods
loop
lret
add
push
out
int3
popf
mov
and
adc
aaa
addr16
popf
jle
jecxz
pop
jmp
jmp
out
push
mov
cmp
inc
lods
pop
cmpl
xchg
cmc
lods
and
cld
or
jle
add
pop
jb
mov
add
test
scas
aad
imul
call
xor
cmp
jmp
je
adc
xor
dec
or
push
xor
push
push
xor
aaa
testb
dec
jmp
xor
ljmp
outsb
cmp
in
arpl
cmp
jp
pop
jae
roll
sbb
push
in
into
loopne
xchg
out
mov
jae
cmp
fucom
push
js
adc
push
inc
cmp
imul
test
scas
fdivr
fwait
jge
fnsave
gs
inc
mov
out
sub
and
dec
fs
xchg
mov
mov
and
stc
mov
fdivrp
mov
sbb
movsl
jo
sbb
xchg
jne
mov
scas
add
mov
sub
jno
lea
loope
lea
ja
loopne
sbb
subl
mov
sub
mov
mov
ss
push
cwtl
cmp
jne
and
scas
and
inc
push
bound
pop
lds
sub
push
xchg
jae
pop
cltd
pop
iret
jmp
jp
cmp
mov
xchg
pop
test
je
pop
repz
cmpsb
xor
vpmulhw
icebp
fdivs
outsb
dec
insb
leave
adc
add
inc
xchg
icebp
inc
adc
imul
lods
sahf
pop
inc
frstor
jecxz
movsb
aas
jge
arpl
iret
jae
cld
push
or
jb
aas
jo
mov
in
xchg
dec
iret
ja
insl
sbb
in
push
sarl
sbb
aaa
fucomi
and
adc
lods
xchg
pusha
insl
push
in
xchg
pop
inc
sbb
or
cwtl
loopne
adc
xor
mov
add
mov
jmp
lcall
xchg
std
pusha
push
cmp
sbbl
call
leave
insl
ret
insb
stc
xor
das
mov
cmpsl
das
inc
lahf
push
and
cmp
and
push
mov
addl
scas
scas
jo
gs
enterw
inc
push
fstpt
dec
xchg
dec
ja
iret
addr16
in
mov
scas
inc
mov
dec
iret
adc
push
jmp
pop
inc
pop
loop
lods
push
mov
push
fdivrs
add
shlb
hlt
jge
push
and
push
or
fnstcw
lods
mov
test
cmp
stos
adc
and
imul
jnp
push
xor
loope
rcrl
or
mov
sub
dec
pop
outsl
add
fistpll
xor
pop
test
stos
out
mov
fs
scas
gs
rcr
mov
hlt
pop
icebp
loope
aam
push
add
mov
cld
sbb
xchg
and
hlt
lret
jnp
sbb
lret
cmp
jae
xchg
and
mov
push
mov
mov
dec
stc
xor
fs
stos
pop
aad
fwait
or
pop
inc
outsb
cli
and
out
lret
adc
cmp
jnp
cmp
lods
insb
sbb
outsb
sbb
cli
dec
cmc
fildl
mov
sub
shr
fwait
sti
ds
outsb
xor
cld
jo
enter
adc
adc
jle
cmpsb
clc
jb
in
xchg
repnz
cmc
mov
loope
idivb
xor
dec
ret
clc
inc
in
sbb
mov
aas
dec
ret
les
sub
mov
jge
fisttps
xor
pop
cmp
adc
push
cmp
mov
inc
or
loope
sbb
xchg
dec
repnz
inc
sbb
add
xchg
popf
push
enter
jp
lcall
cwtl
cmpsb
pop
add
addb
add
fiadds
pop
add
aas
movl
fmull
or
mov
lock
sub
inc
mov
inc
test
xchg
je
sbb
mov
xchg
jne
ja
inc
mov
stos
test
xchg
imul
cmp
mov
les
or
dec
mov
inc
or
mov
mov
and
add
fsts
pushf
push
mov
inc
mov
mov
popa
jg
add
xchg
pop
xchg
jge
mov
cli
pop
and
adc
lahf
mov
cmp
sbb
sub
hlt
das
shlb
movsb
push
test
adc
inc
cmc
add
mov
add
mov
jge
sbb
aaa
xlat
scas
push
into
and
cmp
insl
fistpl
or
loop
into
je
mov
jbe
inc
dec
loopne
jb
jbe
inc
sub
stos
pop
into
cli
push
in
out
mov
test
scas
pop
test
sbb
repnz
push
xchg
pop
cmp
lgs
out
ljmp
cmp
in
push
out
xor
js
sub
aas
fstps
push
je
sbbl
out
or
adc
ss
shl
adc
test
inc
outsb
add
jp
stc
mov
sub
iret
sbb
cs
mov
sub
outsb
sbb
les
es
push
jne
insb
daa
and
sbb
movsl
pop
or
sub
cmp
and
mov
push
pop
inc
les
in
pop
test
push
mov
nop
and
test
out
popa
jge
pusha
push
in
aam
dec
xchg
push
repz
adc
imul
cwtl
push
enter
iret
bound
es
inc
lret
nop
dec
and
jo
jecxz
push
mov
aam
jae
mov
in
aas
cld
push
inc
cmp
pop
cmpsl
sahf
xor
adc
mov
mov
cmp
pop
mov
add
xchg
nop
int
es
push
nop
lcall
dec
sub
and
mov
pushf
in
out
shll
scas
out
xor
inc
pushf
scas
mov
mov
movsb
out
mov
adc
jmp
das
jae
jle
lcall
push
call
js
push
push
cmpsb
xchg
mov
mov
fsubp
push
xchg
fcmovu
jle
xchg
clc
xchg
repz
adc
out
aaa
test
xchg
push
jbe
pop
int3
dec
shl
inc
mov
push
push
sub
or
lret
pop
es
pop
int
pop
rcr
leave
out
jo
pop
js
jge
sub
or
mov
test
dec
push
inc
xchg
inc
cmp
jecxz
jae
in
mov
mov
jb
jno
lcall
test
jmp
sbb
dec
popa
cltd
cmp
dec
lret
movsb
in
mov
stos
fs
pop
or
dec
add
sub
mov
mov
outsl
stc
imul
inc
lds
jl
xor
addb
mov
fsubl
pop
adc
or
xchg
aad
ret
mov
add
pop
jno
movsb
sbb
scas
loopne
movsb
dec
sahf
pusha
pop
nop
test
and
fcmovb
out
sbb
push
sub
push
push
mov
or
scas
and
jo
jecxz
fs
add
lods
cmp
push
fcoml
add
in
fimull
jecxz
xor
dec
cwtl
out
xchg
push
es
push
inc
fwait
mov
stc
push
lock
gs
mov
rcrb
cmpsl
idiv
pop
iret
test
arpl
jge
aaa
mov
mov
in
pop
pop
in
imul
stos
adcb
shr
dec
jb
sub
inc
jmp
scas
imul
xor
mov
enter
mov
decl
jo
pop
cmp
sub
hlt
movsb
jns
loop
dec
sbb
loope
roll
cmp
insl
in
ljmp
jmp
scas
cwtl
test
dec
fisubrl
dec
pop
pop
sub
mov
jg
add
adc
stos
or
lds
mov
xor
pop
or
in
push
sbb
jg
and
mov
mov
out
cmp
lods
divb
cmp
insl
popa
cwtl
fs
adc
cwtl
sub
f2xm1
mov
paddb
dec
inc
push
cmp
pop
mov
push
addr16
test
xchg
js
cli
dec
dec
xor
push
xchg
fwait
sbb
lock
cmp
or
jae
dec
mov
inc
xchg
add
mov
sub
aam
jbe
add
push
cmpsb
inc
mov
jecxz
cmp
lock
std
outsl
mov
xchg
outsb
mov
push
adc
fisubl
testb
jo
daa
sub
add
and
mov
pop
mov
aad
loopne
pop
in
stos
ret
mov
imul
inc
popf
mov
and
scas
jmp
cs
fsub
movsb
cs
mov
ret
jmp
clc
popa
sbbb
sbb
adc
std
inc
les
cmc
aas
fcos
sbb
aam
lcall
lcall
movsl
in
fcomps
popl
pop
xchg
xchg
dec
aaa
fcomip
pop
add
jg
push
je
out
int3
mov
mov
insb
das
in
push
stos
rcrl
pause
add
in
pop
inc
repnz
jge
pop
aad
aad
xchg
push
mov
insl
mov
das
ret
mov
out
push
or
inc
inc
xor
cmp
lds
daa
pop
mov
fadd
fildll
cltd
xor
cs
and
or
dec
shll
std
push
fldenv
mov
jno
aas
sub
in
jecxz
rcll
cmp
out
pop
repz
add
xchg
or
inc
inc
flds
fbld
loope
imul
pop
xchg
sarb
push
jp
insb
clc
sub
and
or
fsubl
arpl
sbb
mov
xchg
xlat
inc
and
into
push
in
mov
push
adc
sub
stos
imul
fsubs
mov
mov
ss
push
cli
mov
mov
mov
sbb
mov
adc
std
imul
cmp
shrb
stos
repz
adc
jnp
movsl
movsb
sbb
mov
cli
das
mov
add
xchg
orb
push
cld
adc
push
int3
movsb
sbb
in
mov
loop
inc
je
imul
pop
enter
pusha
xor
aad
dec
in
add
out
sub
jne
icebp
mov
pop
sbb
jnp
jmp
xchg
mov
imul
and
adc
sub
jno
addr16
jmp
mov
out
or
mov
fsubrl
xchg
sub
lds
mov
sub
fs
jae
adc
pop
xor
loop
xor
mov
mov
and
or
mov
nop
imul
cmp
pop
jbe
clc
iret
fdivrs
dec
pop
push
sub
outsl
icebp
push
out
int3
pop
dec
ja
push
adc
pop
or
xchg
pop
mov
adc
or
adc
incb
mov
dec
nop
sub
cs
ss
cmc
or
mov
cld
test
stos
adc
cli
jp
mov
add
fistps
int
pop
ret
in
bnd
and
out
or
xor
cld
repnz
adc
jg
ret
pop
inc
push
lahf
mov
lcall
jns
mov
sbb
xchg
ret
or
pop
ds
int
adc
fnsave
adc
xchg
pop
pop
stc
pop
loop
push
mov
xor
sbb
dec
pop
in
lcall
xchg
sbb
jae
push
fwait
stos
dec
pushf
inc
loopne
sub
xlat
push
lds
jecxz
into
sub
jbe
jmp
xor
xchg
mov
fs
pop
xchg
or
scas
add
rcrl
call
call
mov
faddl
sahf
aam
pop
cmp
mov
in
das
or
insb
xchg
ljmp
push
das
push
and
outsl
or
jecxz
ret
xchg
pop
dec
lret
punpcklbw
xchg
jbe
dec
js
cmpsb
sub
sar
cli
stos
or
add
add
divl
lret
inc
and
dec
insb
sahf
imul
dec
fimuls
mov
roll
mov
mov
ja
jns
fxch
add
sub
lock
mov
xchg
dec
mov
mov
lds
jg
das
psubsw
pop
mov
scas
jl
lcall
js
mov
pop
lods
gs
cli
add
das
sub
sahf
jo
push
loopne
mov
inc
mov
insb
shrl
popa
ljmp
mul
jne
movsb
inc
dec
insl
fldlg2
push
sub
aam
push
push
in
insl
cmp
leave
add
ret
adc
sbb
movsb
clc
jnp
cwtl
loopne
cld
insb
out
adcl
dec
lret
mov
sub
mov
xor
jbe
pop
cmc
inc
aam
mov
ret
push
lahf
dec
loop
xchg
icebp
or
hlt
leave
mov
sub
sbb
loope
fildll
daa
push
nop
push
jg
movsb
push
mov
fsubrs
hlt
inc
jle
xlat
pop
jns
cmpsl
fwait
call
sub
add
sub
arpl
jmp
hlt
aaa
cmp
pop
adc
fdivl
ljmp
cmp
int
mov
push
sahf
pop
fdivrs
leave
les
xor
lahf
das
aas
divb
scas
cmp
adcl
lock
mov
sub
xor
insb
stc
je
cmpsb
or
dec
adc
sbb
mov
and
je
mov
ds
adc
xchg
leave
movsb
sub
popf
sbb
stc
mov
push
pop
push
incb
cmp
cmp
push
lock
inc
xchg
mov
mov
divl
stos
lret
outsb
inc
inc
push
adc
ja
pop
std
fucomp
xor
mov
int3
xchg
jns
add
inc
lods
dec
add
adcl
push
sbb
scas
cs
dec
and
and
jge
leave
daa
daa
inc
mov
std
dec
pop
test
mov
test
clc
enter
push
mov
out
pop
mov
inc
ja
sub
add
ret
cltd
fucomi
loop
dec
ret
aam
mov
push
rol
rcrl
jmp
xor
insl
jp
jnp
lret
jg
daa
sarl
insb
cmp
adc
dec
cmp
mov
iret
rcl
mov
loope
fisubl
cli
mov
lods
in
push
push
stc
std
stos
int3
mov
mov
dec
insb
xchg
mov
sub
subb
xchg
push
imul
aaa
lods
daa
pop
sahf
inc
ret
mov
shl
xor
pop
scas
test
movsl
pop
xor
fwait
cmc
cmp
xchg
push
dec
das
int3
pop
orb
lahf
aam
jg
cmp
sub
inc
mov
fisubrs
loop
mov
mov
lea
pop
out
mov
arpl
outsb
jne
mov
data16
jnp
rcrb
scas
inc
movsl
mov
jge
lret
sbb
xchg
or
xor
test
lods
outsl
mov
mov
popa
fists
adc
shl
cmpsl
imul
je
add
fs
jl
outsb
lcall
imul
cmpsl
mov
xchg
push
daa
add
lods
lods
inc
sbb
xlat
dec
sbb
xchg
xchg
imul
jmp
fistps
ret
ljmp
aam
jl
pushf
lods
out
test
mov
out
dec
and
lret
test
mov
lock
fdivrs
fstps
cmpb
loopne
cs
fsubs
push
sbb
testl
fucomip
mov
stos
xchg
lock
je
rcrl
or
popa
jmp
add
push
fiadds
xor
aam
rorb
jbe
test
inc
pop
push
subb
cmp
dec
dec
or
jo
insb
cltd
mov
cmp
dec
xor
cli
xchg
popa
mov
arpl
cmpl
or
jno
fidivs
cltd
popa
cltd
mov
shlb
inc
stc
add
inc
fisubrl
int
ret
xchg
push
mov
ss
pop
adc
pop
xchg
mov
popa
nop
jle
push
jo
jg
adc
aas
or
in
and
or
dec
scas
adcl
aam
adc
sub
or
leave
shll
push
lcall
jnp
loopne
mov
pop
sub
ss
xor
mov
pop
and
push
lret
fisubs
into
divb
sbb
arpl
out
jbe
push
es
fwait
cmp
pop
mov
mov
mov
aaa
push
xor
lods
mov
pushf
in
lock
call
xchg
outsb
popa
and
mov
fldl
mov
inc
mov
push
push
xchg
sub
shll
call
xor
and
rep
stc
push
les
sbb
dec
xchg
mov
or
hlt
call
shrl
mov
inc
popa
xorl
fcomp
sbb
or
pop
jns
pushf
lods
adc
push
sbb
js
xchg
jne
cmp
mov
mov
and
push
scas
xchg
push
daa
add
fucomi
lods
out
stos
pop
imul
mov
add
dec
mov
pop
cmp
jo
xchg
inc
cmp
xchg
adc
xor
dec
loopne
sti
out
mov
mov
rorb
adc
arpl
push
pushl
ds
or
popa
jmp
inc
sahf
jmp
pusha
sbb
mov
inc
mov
and
test
pop
sbbb
mov
add
in
jmp
dec
mov
jnp
inc
cmp
push
sbb
inc
in
cld
xchg
xlat
call
in
xchg
in
sub
dec
stos
nop
or
popf
jecxz
popf
imul
mov
cmc
clc
push
pop
sti
lods
cmpsb
in
sahf
cltd
sti
jnp
xchg
in
cmp
testl
fildl
dec
in
shll
pop
nop
mov
jle
hlt
out
shrl
or
arpl
inc
xchg
out
leave
es
mov
aas
fiaddl
cmp
hlt
aad
mov
rsm
out
fldenv
xor
cmp
fnop
sahf
push
or
pop
ds
pop
aaa
icebp
push
mov
xchg
inc
es
popf
inc
hlt
xlat
adc
sti
jg
stos
popa
popa
cs
xor
xor
or
test
mov
mov
pushf
sub
sti
pop
mov
adc
insl
and
lea
jb
sub
cwtl
dec
add
jb
cmpsb
je
mov
cli
dec
adc
dec
int
dec
or
lods
out
mov
push
hlt
mov
pop
out
or
mov
adc
xor
xchg
ss
add
shll
push
sub
xor
add
pop
push
adc
in
not
rorl
and
fsubs
sub
sbb
lods
sub
jmp
and
jmp
dec
cld
dec
fidivrl
jo
jg
cmpsl
sbb
in
jl
mov
add
add
pop
divb
loopne
insb
addr16
imul
scas
das
adc
jne
test
jnp
mov
pop
inc
sub
add
push
xor
xchg
push
in
fisttpl
xchg
push
in
sub
sti
addl
mov
mov
lock
and
ret
orb
sarb
or
es
ret
xor
jnp
push
sbb
cmp
jmp
int3
imulb
jle
enter
push
cmpsl
or
sub
mov
push
add
pop
ret
pusha
aad
aam
and
jmp
fidivs
stc
insl
in
xchg
jnp
jle
xor
add
xchg
roll
jp
iret
push
imul
int
or
cmp
out
movsl
pop
lock
ss
test
ret
das
and
xchg
and
cmc
ss
les
push
gs
das
adc
mov
addb
mov
in
insb
jmp
fidivs
enter
sub
lcall
int3
or
test
jne
pop
cmp
loopne
test
sub
pop
cwtl
cs
mov
mov
movsb
inc
push
inc
ja
inc
inc
test
cs
dec
cli
testl
loopne
cs
shll
cli
add
xchg
and
sarl
push
adcb
xchg
icebp
fdivrs
lret
adc
mull
lods
jb
mov
daa
xchg
arpl
and
add
inc
iret
aam
fiadds
fisubl
xor
mov
adc
jmp
mov
jne
mov
rorb
lock
and
pop
std
jns
sbb
jp
mov
sahf
lock
fstl
jl
mov
mov
jae
mov
imul
movsb
push
mov
aam
int
mull
cli
mov
call
lret
or
daa
adc
ljmp
lret
inc
scas
mov
adc
out
cmpsb
xchg
js
movsl
push
test
jae
in
clc
shll
in
insl
pushf
icebp
add
rorl
jae
sbb
or
adc
xchg
fwait
repnz
leave
sub
mov
xor
adc
les
cwtl
pop
outsb
push
movsb
push
cmc
addl
bound
jp
int
jnp
out
aam
sbb
shlb
stc
loopne
je
mov
inc
jge
leave
pop
push
and
jb
int3
xorl
add
mov
fildll
xor
pop
xchg
dec
lret
pop
stos
push
jge
sahf
add
inc
add
movsb
inc
pop
gs
std
push
mov
sub
test
dec
jno
test
sbb
dec
popf
jecxz
cmp
out
loope
dec
push
mov
dec
icebp
les
xor
sub
push
inc
mov
fidivs
imul
test
or
daa
clc
xchg
push
enter
lock
push
mov
push
sarl
or
push
jns
or
jge
dec
mov
call
cmc
mov
xor
test
cmpsl
lea
test
aam
ds
or
sahf
adcl
in
roll
or
outsb
shlb
movsl
jo
jbe
shl
orl
js
inc
sbb
jecxz
pop
dec
mov
int3
icebp
ret
out
sub
bound
cwtl
dec
push
jne
icebp
ret
cmp
lea
cltd
add
cmp
je
mov
jnp
xor
aas
mov
xor
dec
jecxz
pop
ret
mov
fwait
cltd
mov
and
xchg
mov
jb
cmp
iret
into
pusha
das
popf
ljmp
cmpsl
dec
mov
jbe
pop
popf
mov
pushf
push
or
push
mov
fsubl
and
vpsllw
mov
rcl
add
out
mov
mov
hlt
into
sub
iret
aas
cmp
mov
or
movsl
lea
dec
jno
cli
movsl
mov
or
mov
loop
es
fidivs
cmp
or
lock
daa
pop
pushf
xchg
sub
mov
or
lds
push
pop
jae
sbb
sbb
icebp
lods
mov
add
push
test
mov
add
mov
ds
cli
xchg
lock
fcmovbe
fs
jle
enter
xor
mov
movsb
das
mov
jns
mov
test
mov
push
jle,pt
cmp
decb
mov
cmp
or
adc
add
sub
pop
test
inc
and
fcmove
cwtl
xchg
hlt
sub
adc
jb
aaa
roll
scas
fwait
sahf
lret
fistpll
in
push
mov
or
push
cmp
insl
sub
sub
dec
pop
xchg
out
test
paddsb
sub
jecxz
jmp
mov
adc
dec
cmc
gs
testb
les
mov
cmp
jg
cmp
cmpsl
mov
xchg
xchg
xchg
int
out
cwtl
or
pushf
push
xchg
fs
das
dec
sbb
call
or
sahf
ss
std
inc
repz
pop
mov
push
mov
imul
adc
loop
rolb
sub
push
loopne
add
jecxz
and
movsb
sbbl
xchg
ja
dec
xchg
mov
lahf
orl
pop
pop
testb
testb
outsb
cmp
or
sub
sbb
aad
sbb
sbb
mov
daa
pop
pop
xchg
push
push
xor
sahf
mov
inc
mov
fidivs
or
stc
notb
sbb
clc
jne
adc
lahf
icebp
test
jae
cmp
adcb
jno
lods
outsl
xor
and
adc
imul
daa
pop
divb
aaa
js
int3
dec
xor
push
push
icebp
gs
adc
in
test
cmp
pop
xchg
dec
subb
mov
ffree
inc
xor
and
std
aaa
xchg
sahf
shl
movsb
fs
xchg
sahf
data16
push
cwtl
push
aam
cli
mov
mov
xchg
jmp
adc
inc
xor
and
mov
sub
icebp
lahf
jb
mov
into
pop
mov
test
into
pop
fstpt
lahf
test
jno
arpl
fldl
out
fcompp
xchg
lcall
jge
jb
mov
lods
dec
aad
or
mov
jg
pop
pop
xor
inc
or
cmp
sub
mov
ror
cmpsl
pop
test
xchg
js
sub
fildll
mov
jnp
rorb
pushf
shlb
imul
notl
xor
inc
stos
pop
test
pop
sti
cmc
jg
xor
loop
cmpsl
int
gs
notb
mov
inc
pusha
dec
mov
out
loop
pop
push
cmp
inc
pop
inc
rcr
mov
divb
aas
andl
cmp
sbb
cmp
cmp
or
sbb
cmp
das
daa
mov
xchg
cmp
mov
xor
fcomps
fwait
ds
cmp
popa
movsb
test
push
repnz
add
nop
sbb
ds
push
xchg
and
xor
and
jb
add
and
daa
fstpl
sbb
pop
mov
dec
dec
xchg
stos
popl
push
stc
push
inc
daa
and
jle,pt
sahf
in
push
fnsave
xor
pop
inc
sbb
aaa
inc
cmpsb
pop
and
or
mov
add
shlb
mov
mov
sbb
out
push
and
insb
shr
sbb
stos
jno
fprem1
pusha
cmp
and
fs
out
add
enter
lcall
adc
cmp
cmpsb
repz
mov
xchg
cmp
rcrb
out
adc
inc
inc
sarl
mov
je
push
inc
mov
inc
gs
das
inc
test
mov
sbb
int3
cmpb
mov
xchg
std
int
scas
xor
or
cli
scas
adc
sbb
pushf
arpl
xchg
into
out
add
add
in
enter
enter
repnz
dec
adc
mov
and
shrl
ljmp
sbb
sti
pop
jo
out
lds
das
jmp
pop
mov
imul
sub
and
fisubs
and
or
add
decl
sti
rcrl
ds
rolb
cmp
mov
loope
cmp
lods
ljmp
inc
shrb
push
pop
cmp
out
push
scas
push
adc
and
ret
jo
and
es
or
xchg
sub
inc
mov
clc
loope
popf
xchg
mov
test
cmc
testl
aam
and
jl
dec
xor
jae
xor
sub
stos
add
lret
bound
push
xorb
out
push
push
jge
dec
mov
pop
push
pop
cwtl
test
sub
fdivs
sub
js
shll
dec
adc
push
xchg
push
test
out
dec
pop
dec
sbb
jecxz
push
jl
or
adc
test
call
cmpsb
xchg
adc
cmp
jl
mov
and
ds
jl
pop
jb
scas
call
test
ret
movsl
clc
popa
aaa
dec
add
mov
pop
sbb
jmp
rcrl
je
adcl
int3
or
insb
or
rcll
and
outsl
push
lahf
rorl
or
add
jl
add
das
ret
pushf
lea
roll
imul
xchg
push
mov
nop
repnz
aam
mov
fisttpll
jle
sahf
arpl
jp
push
int
or
push
rclb
mulb
sbb
add
mov
dec
or
jl
push
jno
stc
inc
in
sarb
movsl
pop
xchg
testl
adc
outsb
cmpsl
push
rcl
push
xor
dec
sbb
movsb
bound
dec
xchg
fiadds
stc
xchg
mov
jno
adc
mov
sbb
lret
outsl
dec
mov
xchg
mov
pminub
iret
inc
and
xchg
std
test
cmpsl
jo
sub
add
clc
adc
sbb
sub
jae
pop
or
test
popa
cmp
mov
pop
xor
add
xor
lret
sub
xor
mov
dec
xor
xor
or
mov
lds
adc
jbe
jae
xchg
mov
sub
das
stc
xor
push
js
jns
xchg
repnz
push
mov
insl
xor
movl
inc
dec
scas
lods
push
mov
pop
outsl
neg
test
cmp
jecxz
outsb
popf
stos
inc
mov
dec
iret
add
mov
jp
and
xchg
testl
popf
xor
adc
pushf
mov
adc
and
mov
dec
movb
mov
testl
dec
data16
cld
inc
pusha
icebp
jge
out
ficompl
mov
out
pop
scas
adc
dec
pop
lods
xor
mov
outsl
cmp
aas
xor
push
mov
sbb
sub
movsl
clc
add
mov
or
mov
xchg
mov
push
out
test
push
fdivr
daa
shll
cmp
mov
cmp
pop
cmp
adc
sub
ljmp
imul
sub
sub
addr16
outsb
push
jae
or
mov
adc
or
xchg
jp
push
sub
es
es
xorl
in
popf
jno
hlt
rol
mov
ss
push
lret
addr16
test
in
sbb
mov
jle
adc
loope
and
addr16
ja
cmp
fdivrl
xchg
sarl
jae
xlat
popa
or
jle
roll
or
or
lods
insl
adc
xchg
bound
cmp
daa
sub
nop
mov
in
inc
add
out
jmp
hlt
jl
push
push
mov
sub
mov
loop
enter
pop
push
pusha
jp
mov
sarl
add
dec
cmc
inc
mov
clc
sbb
cli
stos
cmpsl
cmp
mov
mov
imul
rcr
dec
mov
mov
add
mov
pop
sub
test
rcl
das
jbe
or
aas
mov
or
push
test
xchg
data16
pop
gs
in
xchg
int
testl
pop
enter
fsts
jns
pop
mov
test
cmpsl
jb
imul
hlt
clc
cld
jb
jae
sub
sbb
imul
cmp
mov
mov
test
or
jp
cmp
mov
jmp
outsb
cmp
or
ret
das
cmp
in
outsb
in
hlt
add
and
and
hlt
clc
loopne
pop
push
xchg
and
mov
cli
test
scas
fsubl
lds
lea
jae
lcall
xlat
inc
hlt
imul
xchg
add
ret
mov
bound
dec
sub
jp
xchg
cltd
sub
fidivrs
lcall
inc
xor
int
out
mov
sub
xchg
inc
xlat
or
jp
pop
inc
ret
loop
das
cmp
xchg
lret
cwtl
mov
mov
sub
cld
les
cmc
jne
push
fnstsw
jge
imul
rcll
cwtl
jle
loop
roll
rcrb
call
int3
push
lret
in
lahf
add
lds
xlat
adc
pavgw
in
or
sarl
fildl
adcl
int3
adc
jns
into
and
lcall
loopne
push
mov
add
pop
hlt
popf
scas
imul
addl
mov
sbb
inc
sbb
pop
push
mov
mov
sbb
aas
repnz
cmp
movb
inc
pop
xor
in
aad
xchg
inc
shr
and
data16
int3
xor
mov
mov
and
in
mov
test
add
mov
in
arpl
aam
dec
ss
cmp
in
imul
and
or
cltd
popf
mov
gs
insl
lea
or
push
mov
in
pop
jp
dec
scas
sub
mov
fmul
movsl
jns
int
addb
aas
push
lods
stos
inc
push
mov
push
dec
jo
xchg
sar
fisubrl
or
push
iret
push
daa
fstl
mov
xor
nop
push
repnz
stc
sarb
jecxz
shrl
jp
bt
and
fistl
xchg
ljmp
fmulp
ret
iret
mov
shlb
xor
sub
cmp
bound
cmp
xor
mov
fstl
into
in
pushf
and
loop
inc
push
fbld
mov
bound
loop
sbb
xor
fs
subb
cmpsb
dec
dec
sub
and
decb
jae
faddl
test
sbb
xchg
pop
outsb
xor
pop
pop
xchg
ds
push
das
test
and
jl
repz
punpckhdq
adc
out
jle
adc
test
cltd
fwait
sbb
fwait
or
add
aas
loopne
push
mov
lea
pop
insb
add
je
jbe
lahf
das
lcall
jecxz
call
xchg
adc
mov
sbb
orl
cwtl
sbb
repnz
xchg
clc
pop
sbb
xor
push
idivb
std
ret
cmp
sbb
xlat
pop
outsl
sahf
stc
sub
inc
call
movsl
add
popl
addr16
ja
out
cmc
dec
mov
pop
into
je
add
rorl
and
shlb
in
scas
and
pop
xchg
in
push
arpl
cmpsb
and
fs
mov
daa
mov
nop
push
nop
xchg
and
fdiv
add
jne
ljmp
data16
inc
ja
adc
repz
js
xchg
jb
adc
fcompp
popf
incb
cmp
fwait
adc
pop
push
cltd
dec
xchg
xchg
sub
jbe
scas
jecxz
and
gs
fidivs
mov
lahf
fcmovbe
nop
les
lods
pop
clc
call
test
or
dec
ret
mov
cmp
ds
mov
adc
hlt
add
ljmp
dec
loopne
push
in
xchg
jne
call
arpl
cld
pop
movsb
clc
xchg
add
xor
in
addl
mov
lods
loopne
push
cmp
sub
pop
fstps
sub
lret
gs
push
jle
clc
dec
daa
lds
cmp
shll
sub
mov
push
mov
dec
loope
lcall
dec
sbb
stos
rorl
aam
ss
jnp
jno
inc
cmp
ds
mov
mov
push
push
sub
ret
sti
dec
xchg
dec
mov
cwtl
cs
mov
sub
int
mov
adc
jmp
fwait
pop
aas
cltd
pushf
mov
cmpsl
imul
push
and
push
inc
clc
shr
cmc
mov
imul
lret
or
xchg
sbb
sub
and
rorl
scas
mov
imul
ja
sub
mov
rorb
ret
bnd
imulb
pop
sbbb
aam
sbb
mov
add
daa
leave
xchg
or
pop
xchg
stos
test
cld
jge
adc
rcl
addps
out
add
mov
aaa
lods
jle
push
push
and
insl
mov
cmp
in
adcl
inc
cmp
stos
not
rorb
cli
inc
xlat
and
adc
andb
lods
adc
mov
or
or
dec
pop
jbe
mov
inc
ror
stos
cmpsb
dec
lahf
push
fimuls
push
or
stos
cld
fistpll
popf
das
and
les
popa
xor
cmp
push
sarb
sub
cli
mov
ss
dec
shrl
mov
lods
fmull
aad
test
jne
add
fistps
push
fdivrp
or
mov
jmp
popa
jg
in
test
push
sbb
sub
call
jp
adc
mov
cmc
stc
icebp
jnp
sub
into
cmc
and
xor
bound
notl
pop
sbbl
jno
pop
jmp
xor
popa
cld
cmp
xchg
fldcw
in
out
jb
lahf
or
mov
pushf
lahf
sahf
fucomip
cmp
mov
sub
or
cmpsb
adc
inc
cmp
in
xor
dec
mov
cwtl
stc
stos
mov
sub
pop
mov
mov
test
add
adc
insl
rcll
mul
repnz
pop
sub
or
pop
jno
imul
sbb
xlat
lcall
enter
sbb
push
cli
cmpsl
loopne
notl
sub
lods
jo
cmp
inc
or
mov
xchg
mov
add
sahf
mov
leave
and
sahf
add
mov
out
sbb
dec
mov
daa
inc
jle
sahf
scas
mov
mov
sbbl
lret
mov
xor
add
ret
iret
daa
mov
cld
out
test
add
outsb
lahf
cmpsb
out
in
js
push
jns
cmp
out
fdivr
loop
push
jns
mov
mov
fdivrl
xchg
dec
jle
xchg
int
jmp
mov
jg
pop
ja
or
dec
push
cmp
loop
inc
mov
cmp
testl
or
leave
aaa
popf
pop
xchg
sbb
inc
pusha
loop
clc
pop
mov
mov
pop
pop
mov
add
jbe
mov
mov
sahf
repnz
cmp
push
icebp
js
push
mov
subl
movsb
jns
mov
inc
dec
inc
inc
das
pop
mov
cmp
imul
inc
jl
inc
push
or
cwtl
dec
ret
sbb
lds
jp
and
pushf
dec
sbb
shll
xlat
addl
je
movsl
loope
add
rol
inc
in
jp
lahf
inc
fsubrs
push
xchg
jmp
sub
adcb
mov
xchg
pop
fwait
or
subl
sbb
ja
loope
std
push
scas
into
adcb
ljmp
and
mov
cwtl
and
sbb
inc
cs
jmp
pop
push
testb
lds
add
jg
jns
and
adc
jp
push
shlb
mov
xor
ret
pushf
leave
in
jmp
lods
sub
sub
jmp
ret
xor
sbb
hlt
out
cmp
aaa
cmp
rcll
idivb
out
loop
int3
rcrl
add
repz
mov
faddl
xchg
dec
mov
add
pop
mov
hlt
bound
cs
sub
mov
adc
cltd
std
inc
stc
add
jp
and
jle
or
fisubs
outsb
adc
mov
sub
movsl
jb
mov
lock
es
dec
mov
xor
or
jns
sub
add
pusha
pop
add
ret
in
sti
movsb
pop
xor
adc
mov
test
ret
cld
fs
mov
fnclex
lods
adc
xchg
pop
inc
fcmovnu
sub
or
mov
shrl
sbb
mov
ret
popf
push
pop
and
out
add
xchg
mov
adc
pop
mov
call
mov
popa
xchg
pop
repz
or
aas
fsub
pushf
pop
cmp
mov
cltd
das
lods
mov
mov
cmp
rol
jns
sbb
mov
pop
out
cmp
repz
imul
ljmp
and
dec
shrl
jb
addr16
fstps
xor
push
cmp
stos
cmc
pop
sub
xchg
shlb
cmpsb
xchg
das
push
test
mov
pop
cmpb
push
pop
inc
xor
sub
sub
test
jno
mov
pop
pop
je
jo
int
and
push
hlt
cmpsb
inc
mov
inc
or
push
lcall
pusha
hlt
jmp
sbb
pop
jnp
leave
and
dec
dec
stos
cli
pop
shl
int
sbb
bound
mov
fists
dec
mov
jb
jg
jne
repz
xchg
shr
mov
and
lods
jmp
sbb
xchg
dec
xor
push
out
bound
pop
add
dec
mov
and
jb
jnp
xchg
mov
loop
movsl
adc
sub
jo
mov
or
js
mov
das
pop
and
jae
icebp
jae
cwtl
or
jl
inc
sbb
popl
dec
or
dec
shrb
cmp
out
and
test
and
cs
xchg
dec
push
data16
je
or
ret
cmp
shrl
xlat
hlt
inc
hlt
push
roll
inc
outsl
xchg
call
push
pop
sub
sbb
mov
xchg
sub
pusha
arpl
int3
inc
jnp
out
rcrb
cld
sbb
notl
or
das
xchg
sub
jp
test
xor
push
sahf
dec
sbbb
out
xor
xchg
jno
mov
lret
test
push
aaa
dec
inc
adc
out
add
cmp
inc
push
pop
lock
bound
jno
inc
and
aad
sbb
xchg
dec
lock
hlt
shrb
mov
test
adc
mov
cs
add
into
jge
push
jge
pop
lock
fbld
or
jns
mov
and
popf
and
push
stc
and
test
flds
push
pop
adc
mov
jge
inc
nop
lcall
xchg
arpl
pusha
shlb
lret
gs
test
push
xchg
shrl
pop
or
add
sub
in
mov
jne
call
iret
clc
xchg
in
xor
shr
sub
inc
jno
addr16
adc
mov
fs
int3
pop
pop
sub
lods
jge
fldenv
jmp
sub
push
dec
aad
jbe
push
lods
pop
sub
push
lret
jmp
imul
xchg
mov
lret
ja
mov
fwait
addl
lret
ret
xchg
xchg
adc
mov
mov
dec
mov
pop
cmpl
add
xor
jl
mov
cld
das
xor
fbstp
pop
test
fists
fistps
cs
jg
mov
push
sbb
xchg
dec
mov
sub
xchg
repnz
outsl
call
shl
push
in
push
fnstsw
push
sub
cmp
dec
repnz
adc
mov
xchg
mov
mov
mov
arpl
mov
sbb
outsl
mov
mov
push
stos
push
repz
stos
and
sub
sub
fstpt
adc
dec
subl
int3
cmc
sahf
pop
mulb
enter
add
xchg
add
daa
cs
mov
cmp
and
shrl
xor
cmp
push
aad
in
cwtl
outsb
dec
add
jl
fists
push
push
pop
cmp
shrb
jae
mov
push
mov
lods
and
jmp
sub
and
jns
push
push
xchg
int3
leave
push
inc
out
cmp
shll
test
stos
pop
and
jmp
inc
lods
fmulp
mov
mov
movsl
push
xlat
and
cltd
clc
fs
addb
adc
mov
jmp
out
in
sub
jecxz
sub
xor
stos
cmp
lods
out
adc
push
inc
and
insl
and
mov
push
rcrl
ss
shlb
fs
test
cmp
outsb
cmp
push
sar
rcrb
mov
imull
mov
mov
sti
stos
jp
cmp
push
test
sbb
xchg
mov
xchg
int3
jno
cmpsl
jmp
or
mov
out
mov
ret
rcll
stos
call
out
mov
and
lea
push
sbb
gs
jno
inc
aad
cmpsb
aam
mov
mov
lds
xlat
adc
fists
cmp
aas
push
hlt
mov
mov
jb
lret
xor
dec
push
mov
shll
cli
pop
nop
pop
mov
arpl
stc
int
pop
mov
jnp
fidivl
mov
pop
lahf
ficoms
in
pop
les
dec
pop
addl
jl
hlt
sbb
or
outsb
ret
loope
jns
stc
into
rcr
and
inc
mov
jmp
push
fs
cmp
dec
pop
cs
mov
push
shl
push
or
mov
cld
pop
push
cmp
add
xchg
mov
fcos
xor
negl
notl
cmc
mov
ss
pop
or
xor
push
je
add
hlt
cmp
or
rcr
daa
mov
shrl
ret
in
inc
cs
jg
or
mov
ss
in
rcr
notb
adc
fs
es
pop
jnp
test
inc
fcomps
lcall
mov
or
xor
in
in
jmp
mov
sub
sub
arpl
rolb
and
popa
cltd
call
adc
cmp
xor
aas
cmpsl
pop
jp
push
arpl
pop
in
dec
lods
out
xor
pop
pop
mov
ret
mov
in
data16
rolb
jo
cmp
jge
sbb
pop
jns
flds
rolb
sub
test
js
out
pop
sbb
pop
inc
xchg
push
test
adc
aaa
cmp
push
adc
sub
push
outsl
xchg
sbb
subl
jae
aam
stos
push
mov
rolb
ss
arpl
out
cltd
xchg
xchg
les
repnz
dec
fsubrl
mov
in
inc
aaa
cmpsl
pop
shrb
sub
push
and
mov
loop
mov
mov
xor
ret
cmc
out
adcb
mov
jae
test
push
push
sub
sub
push
out
adc
int3
in
popa
push
inc
sub
arpl
push
xor
ret
fcmovnb
push
push
outsb
jle
movsb
push
jns
test
add
hlt
jecxz
cmpsb
jns
mov
mov
dec
pop
sbb
jns
out
xorl
push
lock
adc
dec
adc
fwait
adc
inc
dec
shlb
rorl
aam
sbb
leave
addl
mov
sub
ret
cwtl
cmpsb
sub
notb
mov
test
mov
adc
rorl
ljmp
js
inc
dec
and
adc
lods
ja
sbb
adc
mov
lcall
loope
push
xchg
add
pop
push
adc
cs
scas
adc
cmp
add
push
add
outsb
out
in
js
mov
cmpsb
jne
out
cmp
repnz
push
popf
push
dec
push
and
dec
adcb
xchg
cwtl
pushl
cmpsb
pop
gs
cmp
jecxz
or
stc
cltd
ficomps
dec
sub
dec
aaa
and
jmp
cmc
mov
test
xlat
fcmovnu
ret
cltd
cmc
jp
popa
inc
arpl
std
xor
stc
mov
aaa
sbb
ss
fstpl
jp
mov
je
xor
pop
aam
aaa
sbb
fidivrs
lds
insl
sti
jmp
in
xchg
fldt
insb
inc
xchg
inc
cmp
and
xor
xor
ficoms
ss
dec
js
js
or
lret
xor
pop
jb
std
lahf
popa
loope
add
push
sbb
repnz
fcoml
outsl
sahf
xchg
ret
lea
fld
pusha
jo
push
or
stos
sub
shlb
sahf
sti
push
jb
mov
rcrl
mov
cmpsl
fwait
aad
dec
pushf
dec
inc
add
mov
pop
mov
es
cld
push
adc
xor
inc
addl
bswap
faddl
jbe
or
mov
repnz
rcr
jp
mov
imul
add
daa
lds
mov
sub
cmpsb
ret
hlt
dec
xor
les
inc
imul
ret
imul
add
fnstcw
out
daa
lods
xchg
xor
or
arpl
xor
add
pop
cmpsb
sbb
push
filds
fwait
xlat
dec
shl
sbb
pop
jae
adc
std
test
stos
idiv
dec
call
cli
or
and
and
dec
sbb
adc
xor
push
enter
xchg
cmpl
and
xchg
andl
jne
mov
lcall
add
or
sbb
push
dec
sbb
sar
push
sub
jne
lock
jecxz
cld
adc
mov
lret
mov
jp
out
subb
cmp
jae
dec
sub
adcl
xchg
add
lfs
cmp
lods
ds
dec
sbb
pop
push
mov
inc
push
xchg
mov
divb
dec
bnd
out
jl
adc
xlat
mov
int3
leave
dec
mov
sbb
push
movsl
add
data16
aad
sub
notb
pop
into
mov
or
cld
pop
xchg
jo
add
mov
cli
push
adc
ficomps
xchg
xor
push
pusha
fldt
mov
inc
pop
lods
cmp
rcl
lret
nop
adc
or
out
iret
sbb
fadds
sub
add
push
xlat
mov
pop
mov
cmp
jns
ds
sub
dec
adcb
ret
pop
add
jbe
mov
pop
adc
push
imull
jae
dec
cmp
pop
mov
in
cmpsb
lea
adc
sbbl
jmp
pop
jecxz
in
pop
fwait
mov
xchg
push
loop
inc
cmpsb
mov
andl
sahf
movsl
adc
dec
pop
mov
jbe
clc
repz
mov
cs
mov
popa
lods
adcl
rorl
mov
and
cltd
test
cli
fwait
xchg
shr
sub
arpl
mov
mov
adc
cmp
movsb
cmp
mov
pop
imul
xchg
push
jg
lcall
jg
or
cmpsl
stc
es
psubb
lea
adc
add
dec
pop
pop
lcall
mov
in
push
add
negl
pop
ret
and
outsb
mov
mov
inc
sub
or
call
cmp
inc
cmp
cmpsb
adcb
jbe
sbb
xchg
jb
ljmp
fistpll
je
pop
and
imul
stos
pop
hlt
and
fildll
mov
sbb
jmp
fstp
sub
fiaddl
inc
mov
scas
pop
call
jmp
and
les
and
or
mov
gs
pusha
mov
call
xorb
jno
ds
mov
mov
iret
mov
iret
addr16
xor
or
mov
xor
mov
cltd
mov
rcrl
outsb
je
js
cwtl
xchg
inc
mov
ja
mov
fwait
pop
int3
mov
lods
js
sbbb
ret
and
notb
xorl
mov
in
xor
dec
cld
xchg
push
lea
into
out
push
mov
daa
leave
and
popf
arpl
jg
xchg
shrl
add
shl
dec
push
adcl
or
dec
mov
mov
dec
cmp
lds
fcmove
adc
xchg
inc
cmp
jg
lods
cmovs
stos
cmp
orl
ret
mov
fs
adc
xchg
hlt
inc
out
stos
cli
xchg
and
out
add
jbe
ret
dec
mov
iret
mov
pop
pop
and
push
stc
dec
leave
mov
es
ret
cli
adc
mov
inc
cmc
fadds
inc
and
cwtl
mov
jns
roll
fnstcw
sub
decl
cmp
rcl
mov
adc
call
test
add
clc
fistpll
jle
mov
imul
rcll
and
jno
cli
mov
call
jl
repz
xlat
loopne
ret
cltd
in
dec
pop
aad
pusha
je
or
dec
std
sbb
enter
das
xor
and
inc
rorl
ret
fndisi(8087
ss
js
push
jmp
add
mov
popa
dec
je
mov
xlat
pop
stos
mov
test
cmp
sbbl
loope
and
mov
lea
leave
enter
es
push
shrl
lods
mov
leave
call
gs
jg
movsb
and
cmp
cmp
sbb
test
pop
fsubs
push
push
push
dec
in
ss
mov
mov
in
dec
sar
pop
jno
lock
dec
mov
cmp
jp
mov
shrb
push
repnz
xchg
aam
mov
add
mov
lahf
sbb
into
in
inc
dec
scas
das
fsts
cmpsl
adc
fadds
inc
and
push
mov
push
cmp
xchg
jecxz
in
out
dec
cmp
inc
sbb
dec
xchg
and
mov
inc
test
xor
sub
add
cwtl
push
pop
adc
pop
lds
idivl
sub
push
pop
push
push
xor
lock
pop
xor
pop
lret
mov
dec
mov
sbb
dec
jnp
pop
lods
pop
in
clc
enter
cmc
leave
into
test
dec
dec
in
xor
ds
adc
cwtl
insl
jo
jo
push
push
orb
add
insb
fisttpll
pop
arpl
push
mov
cld
or
ret
in
stos
icebp
out
and
mov
daa
push
adc
in
jbe
cmp
push
pop
movsl
inc
imul
xor
or
jbe
jnp
jmp
inc
popa
shlb
lock
mov
jnp
lret
in
jecxz
lods
repz
test
cmp
or
add
add
fsubrp
mov
xor
sahf
lods
mov
pop
mov
int
movsl
repnz
xchg
inc
loopne
mov
negb
xchg
adc
mov
daa
pop
lret
xchg
inc
and
paddb
icebp
pop
xchg
loope
int
mov
scas
or
scas
mov
repz
mov
jp
and
out
lds
inc
loope
sbb
bound
push
jmp
sbb
sbb
clc
shlb
test
ret
mov
dec
fwait
orl
lret
movsl
andl
pop
mov
add
jmp
xchg
clc
inc
mov
and
pusha
pop
add
dec
mov
xor
fcomps
popf
jae
and
mov
nop
gs
daa
fcmovnbe
sbb
dec
outsl
insl
out
mov
xchg
push
lds
loop
sbb
xchg
in
ljmp
xor
mov
int3
scas
inc
mov
test
jp
sbb
stos
or
dec
jl
dec
xor
pop
scas
jl
or
sub
jae
push
or
je
or
mov
cmp
aad
je
fimull
adc
dec
and
sahf
dec
jmp
push
ror
jb
fnstsw
sub
or
addr16
sahf
adc
je
mov
jmp
dec
aas
jns
mov
sub
sbb
out
and
or
xchg
gs
dec
test
divl
pop
fldt
outsb
frstor
push
mov
leave
int
cmpsl
les
xchg
mov
iret
dec
and
js
repnz
xchg
xchg
shl
fdiv
stos
lods
pop
mov
sahf
fs
loop
dec
lock
int
jae
cmp
rclb
inc
pop
lcall
dec
push
push
pop
inc
lret
pusha
inc
and
int
inc
xor
imul
and
scas
ds
and
sbb
pop
ds
into
ret
cltd
movsb
gs
jno
pop
das
hlt
jne
jp
arpl
push
push
cmp
sarb
and
or
jns
shrb
adc
mov
jle
movsb
push
mov
lahf
pop
add
enter
lret
adc
rorl
pop
insl
jb
roll
jmp
inc
fnstsw
add
sbb
dec
lods
mov
dec
xchg
cmp
nop
sub
into
mov
pop
insb
mov
and
jmp
push
jo
or
fwait
int3
sbb
and
rcl
std
jmp
push
aad
xchg
mov
inc
mov
stc
cmp
inc
ret
pop
stos
adc
xor
xlat
mov
mov
xchg
push
out
xchg
add
inc
sbb
pop
shrl
mov
dec
sbb
mov
sub
xor
xchg
pop
jbe
fidivs
add
popf
lcall
sbbb
insl
fwait
divb
out
jp
cmc
inc
shrl
and
scas
mov
test
sbb
inc
sub
jmp
adc
cmp
xchg
add
movsl
data16
mov
mov
call
lods
hlt
pop
arpl
push
push
push
push
bound
xchg
fists
cmpsl
hlt
pushf
movsl
push
sbb
xor
call
ret
mov
dec
pushw
lds
jo
popa
popf
cmp
lret
xchg
xor
popf
cmpsl
push
lret
movsl
hlt
cmpsl
lahf
pop
insl
shrb
adc
shll
mov
mov
outsb
sub
fisubrs
sbb
mov
loope
ret
or
arpl
shrb
fisttpll
mov
mov
arpl
adc
ret
push
stc
jp
sbb
imulb
pop
mov
add
outsb
imul
std
ds
stos
test
subb
or
pushf
movsb
or
jns
insl
push
inc
cmpsb
hlt
mov
sub
xlat
lods
outsl
pop
decl
cltd
mov
jmp
add
jbe
aam
les
filds
outsb
fcmovnb
fisubrs
mov
out
or
cwtl
incl
hlt
adc
dec
imul
add
dec
scas
cs
sbb
pop
inc
jecxz
mov
lcall
pusha
mov
dec
test
or
dec
cltd
aas
icebp
mov
pop
scas
xstore-rng
cmpsl
inc
and
dec
sub
out
adc
scas
push
test
push
inc
cwtl
movsb
adc
aaa
stc
es
cmp
std
jns
xor
fidivl
dec
sti
idivl
push
lahf
sahf
push
pop
fs
add
dec
jo
pop
mov
and
mov
outsl
jno
imul
inc
leave
push
push
push
xorb
mov
in
stos
bound
in
imul
pop
stos
xor
mov
mov
shll
je
jmp
sub
xor
clc
in
enter
iret
or
and
push
into
mov
jnp
xor
loope
xchg
adc
mov
adc
sti
jge
and
mov
sbb
shrb
pushf
jl
jl,pn
cmp
in
pushf
add
push
or
sti
cltd
jb
loop
dec
cltd
jno
mov
xor
lret
std
sub
push
sti
test
divl
test
xlat
jp
jg
xlat
xor
xor
stc
divl
inc
xor
xchg
imul
clc
call
cli
iret
mov
dec
inc
mov
insb
mov
ret
sub
pop
xchg
idiv
lcall
aaa
inc
mov
aad
adc
lahf
dec
mov
loopne
pushf
pop
inc
jmp
leave
jmp
push
mov
jge
cli
jge
sub
mov
mull
fcomps
in
js
repz
sarl
ss
jp
adc
mov
jmp
and
push
pop
dec
xor
mov
adc
pop
repz
jge
loop
je
sub
push
jmp
mov
andb
in
pop
cmpsb
outsl
pop
jns
sub
sub
xchg
insb
jbe
push
pushf
call
and
mov
jae
jecxz
fildll
movsb
sub
frstpm(287
ds
out
pop
mov
cmc
rclb
cmpl
insb
es
add
xor
nop
in
push
sti
cmp
push
insl
inc
cmp
sub
cmpl
cmp
cmp
push
test
test
mov
add
pop
out
sbb
inc
or
cs
lods
gs
push
loope
cmp
sub
mov
in
orl
cmp
xchg
xchg
mov
inc
or
jmp
dec
int3
lods
mov
mov
mov
test
dec
sahf
jne
xchg
add
and
daa
or
mov
inc
xor
aad
sbbl
or
cld
mov
add
sahf
inc
in
dec
fs
leave
fistps
cmp
add
testb
cmp
adc
push
mov
mov
and
mov
mov
push
rolb
cwtl
pop
cmpb
inc
mov
movsb
sbb
inc
sub
dec
adc
mov
xchg
fldenv
test
sbb
jle
ja
pop
mov
lret
and
and
aam
xor
inc
shll
loop
mov
cmp
lea
mov
movsb
dec
pushf
cmp
and
push
and
push
mov
iret
jg
int
pop
sti
adc
divl
dec
xor
push
mov
arpl
mov
cmp
jl
mov
jbe
cmp
enter
in
mov
mov
popa
insb
mov
mov
sahf
sahf
dec
pop
fwait
sub
shrb
test
insb
xor
inc
or
jg
lods
out
jnp
popf
mov
cli
sub
mov
pop
add
lcall
or
repz
pop
out
push
lret
mov
adc
inc
nop
or
dec
and
loope
pop
adc
aad
mov
ret
stos
call
mov
and
mov
mov
mov
push
insb
and
inc
or
dec
neg
cmpsb
int
jmp
xchg
dec
lahf
and
cli
popa
adc
push
cld
add
lret
lea
or
lods
inc
loopne
jae
add
scas
xor
mov
jge
mov
je
inc
les
loope
add
out
and
insl
loopne
push
xor
js
test
sbb
bnd
push
je
mov
jb
cld
and
jmp
or
jb
mov
insl
test
sbb
ret
add
add
je
and
ss
xchg
jb
shl
fists
push
int
pop
cli
out
dec
sti
push
scas
arpl
cmp
mov
pop
idivb
test
mov
push
dec
add
ficoml
lds
push
jne
or
lret
fwait
mov
rcrl
xor
jle
pop
cld
jg
xchg
mov
dec
shll
imul
xor
loop
dec
in
xchg
fidivrl
push
push
adc
jns
jnp
push
jno
js
jns
into
in
lahf
inc
jns
lea
mov
mov
popl
add
inc
and
lret
fldl
dec
insb
cmp
push
cli
insl
jbe
cmpl
pop
mov
dec
jg
popa
test
arpl
cmp
sbbb
aam
adc
sahf
xlat
inc
sub
pop
pop
fidivl
push
cwtl
cli
adc
sbb
int
adc
hlt
or
jno
mov
imul
jbe
xchg
shl
cmp
lds
aas
mov
jp
xchg
clc
mov
jbe
fstp
ljmp
lock
add
sub
faddp
in
outsb
imul
sub
add
xchg
sbb
insl
test
push
daa
push
mov
rcrb
pop
es
xor
push
sbb
ss
dec
mov
inc
or
inc
lods
ds
stc
pop
repnz
add
std
push
and
dec
fs
std
mov
loope
je
sbb
push
mov
nop
push
pushf
test
jbe
shl
mov
in
xchg
adc
mull
out
and
arpl
mov
mov
arpl
adc
cltd
pop
sub
jae
inc
rcr
stc
fstpt
mov
sarl
idivb
in
call
sbb
es
mov
aad
xchg
popf
xor
sub
push
outsb
sbb
xor
out
stc
sub
dec
imul
cmp
popa
push
leave
or
sub
or
and
pusha
dec
ljmp
pop
and
mov
lahf
bound
sarl
and
inc
inc
cmp
and
shlb
push
sbb
mov
repnz
pop
dec
push
sub
shrb
dec
lahf
pop
adc
push
cmp
cmp
mov
outsb
cwtl
shlb
daa
cmp
lahf
aad
sbb
xchg
movsb
fidivrl
push
or
jnp
stos
icebp
sbb
andb
insl
pop
or
xchg
xor
into
mov
sbb
push
inc
and
mov
mov
sub
popf
lods
cmp
mov
repz
pop
mov
jg
dec
jns
dec
clc
sbb
stc
fldl
push
cmpsl
add
pop
mov
mov
mov
outsb
loope
shr
inc
mov
lods
add
bound
fstl
jae
push
mov
pop
mov
inc
ja
or
dec
and
push
fwait
mov
xchg
sub
push
mov
sbb
inc
inc
and
repz
cli
pop
pop
cmc
jo
fsubl
sub
lahf
pop
sub
mov
add
ss
int3
fisubl
xchg
pop
hlt
das
push
call
mov
cmp
sbb
inc
lret
pop
xchg
insb
jo
stos
or
je
lea
outsb
cmp
lret
lret
cs
fdivp
popa
imul
cmp
lea
push
sbb
mov
fstpt
xlat
jp
lods
jecxz
mov
push
pop
pop
test
sbb
ljmp
ret
incb
int
mov
dec
cmp
xorl
xchg
arpl
xor
es
or
popa
shll
jg
lock
sar
xor
shrb
pop
popa
fisubs
add
fwait
loop
shll
inc
cmp
pop
mov
dec
mov
ret
adc
or
fadds
scas
rolb
mov
sub
sub
fadd
aas
push
xchg
addr16
jl
inc
adc
bound
fimuls
pop
lea
dec
mov
imul
addr16
cwtl
popa
pop
inc
pushf
and
stos
sbb
lret
or
jg
out
ret
push
cmpsl
leave
ljmp
lret
and
ds
dec
xrelease
je
jg
fcmovu
xor
and
cwtl
xchg
mov
push
ja
xchg
push
cs
loope
arpl
pusha
dec
ret
movsb
jle
mov
movsb
dec
xor
stos
mov
mov
cld
pushf
divb
mov
xor
mov
push
mov
test
std
mov
sbb
ret
pushf
inc
xorb
mov
dec
push
or
jns
dec
sub
pop
adc
mov
xor
add
dec
sahf
push
fildl
lcall
pop
cmp
imul
testb
adc
sub
sbb
jo
sbbl
or
insl
push
in
push
push
shll
jno
js
push
mov
xor
sbb
test
call
enter
sub
rcrl
cli
push
add
jle
push
leave
xchg
sbb
or
or
cmpsl
aaa
adc
ret
fisubrl
inc
mov
xchg
add
mov
xchg
subb
in
test
ret
xor
xor
cmpl
xor
loopne
std
adcl
dec
andb
test
rcr
sbb
imul
xchg
cmpsb
xchg
xor
xchg
jno
xchg
sub
clc
and
das
pop
mov
adc
mov
lcall
push
hlt
xor
sti
xchg
push
repz
or
les
jb
mov
test
lock
lods
insb
jno
xor
jp
add
pop
or
test
test
push
idiv
or
xchg
mov
pop
sbb
ret
cltd
push
sbb
xlat
cmp
adc
mov
inc
pop
jbe
sarb
clc
jb
sbb
sti
mov
in
test
push
mov
xchg
mov
jl
aam
mov
in
incl
out
jbe
nop
fld1
fiadds
imul
and
iret
pop
push
or
mov
push
stc
pop
mov
icebp
inc
mov
jae
push
imul
data16
and
fstl
xor
jecxz
mov
jae
callw
inc
sbb
pop
arpl
cmp
xchg
push
or
push
pop
shl
mov
sbb
aaa
and
push
scas
dec
adc
orl
or
jle
movsl
aaa
push
xchg
orb
add
xchg
mov
or
rcrb
testb
jbe
jbe
loope
sti
enter
das
sub
sub
and
sub
insb
inc
pop
movsb
call
cmp
in
sub
inc
cmpsl
inc
bound
jmp
sub
mov
cld
aad
imul
xor
mov
fbld
pop
lock
xor
push
movsb
dec
aas
jbe
or
lods
mov
lret
mov
lret
lret
xchg
nop
aas
add
xor
imul
mov
pop
mov
iret
jl
xchg
adc
jge
cld
mov
sub
xlat
in
xor
mov
sbb
mov
sbb
stc
mov
sti
inc
jno
dec
push
adc
data16
clc
xchg
adc
cmp
xor
inc
jnp
push
sub
aad
cld
cltd
cltd
mov
dec
outsl
mov
sub
and
jge
lods
mov
lahf
adc
lods
test
mov
lods
jl
aaa
push
ficoml
push
mov
mov
js
aas
xor
mov
cld
adc
daa
out
test
mov
and
adc
sub
imul
rclb
sub
adc
test
icebp
in
push
mov
xor
les
mov
arpl
pop
xchg
and
adc
pusha
add
loopne
rcrl
cmp
pop
xor
test
jns
pusha
aaa
cmpsl
jns
push
mov
mov
push
cwtl
in
sbb
std
xor
inc
dec
xchg
adc
dec
mov
js
push
cltd
idivb
or
in
sub
subl
inc
cmp
inc
imul
cmpsb
dec
mov
scas
mov
nop
insl
add
cmpsb
sti
mov
mov
in
test
pop
subl
adc
outsb
fiadds
iret
jae
fstps
mov
jb
cld
mov
or
lds
mov
fld
jg
xchg
push
icebp
cmp
push
xchg
xor
push
sarb
jno
cmc
or
mov
pop
jo
inc
mov
das
repz
xorb
je
jae
pop
ja
cmp
test
call
or
stc
dec
out
mov
out
jnp
pop
sahf
popa
push
mov
gs
add
xchg
cmpsl
sbb
shlb
shl
fwait
mov
call
test
leave
jg
xor
paddusw
loop
mov
rolb
call
xor
cld
xor
jmp
xor
nop
daa
stos
and
xor
dec
and
leave
jns
sub
xor
ja
push
jae
and
cmp
stc
jo
ss
dec
mov
imull
inc
insb
out
mov
jb
loop
sub
mov
scas
pushf
aad
clc
push
test
outsb
out
inc
pop
adc
dec
aas
dec
rorl
mov
push
push
aaa
xor
xchg
fimull
inc
push
xorb
add
xor
adc
sarl
enter
lahf
shrl
adc
dec
das
lock
ljmp
inc
mov
js
lret
pop
or
push
movsb
insb
add
xchg
loop
lret
sbb
and
xorb
sub
add
jae
xchg
xchg
fildll
dec
inc
xlat
pusha
mov
mov
adc
rorl
sub
mov
pop
mov
ret
outsb
mov
push
mov
or
outsb
mov
sbb
mov
outsb
fwait
lea
push
xchg
stos
stc
jns
adc
xchg
sub
out
inc
lahf
push
mov
incl
jno
adc
aad
xor
es
cmp
imul
push
ds
push
cmpsb
sbb
sub
imul
test
insb
cmp
xchg
lahf
sub
inc
or
fstps
push
sub
jmp
sub
mov
adc
push
lahf
test
int
push
aaa
lcall
les
idiv
ljmp
outsb
shl
sbb
loopne
pop
and
out
out
push
sub
lea
dec
inc
jb,pt
ds
mov
aaa
mov
sbb
out
sbb
and
add
lcall
orb
popf
mov
mov
push
ss
xor
lods
fildl
xchg
jbe
js
leave
ljmp
aad
mov
xchg
cltd
inc
fnstcw
or
in
imul
gs
mov
push
push
push
push
out
push
repnz
mov
dec
cmove
stc
ret
adc
aad
insb
mov
cmpsb
cli
cmpsb
ja
lea
dec
addr16
out
xor
mov
sub
out
loope
mov
mov
data16
dec
mov
cmp
dec
cmp
lock
xlat
das
push
or
inc
insl
shll
leave
jne
push
sar
push
out
lods
cli
dec
loop
push
pop
int3
imul
int
je
push
testl
daa
sbb
test
mov
je
push
shlb
inc
pop
push
lods
or
fs
inc
push
xchg
int
dec
jb
jno
jp
lds
adc
push
dec
repz
add
jb
mov
cli
mov
mov
mov
hlt
and
into
cmp
mov
aam
roll
mov
push
push
cltd
xchg
xlat
push
repnz
int
imul
mov
xchg
ss
inc
cli
fnstenv
or
mov
pop
pop
xchg
pop
dec
shl
sbb
cld
pop
cmpsb
out
inc
aad
push
sbb
jns
cld
sub
adc
stos
adc
mov
jbe
mov
cmpsb
loop
xlat
ret
sub
hlt
test
cmp
and
push
shl
lock
es
sub
sbb
jg
cmp
icebp
icebp
je
cwtl
stos
jl
rcll
pop
mov
repz
mov
or
aad
inc
pop
mov
lods
add
int3
fdiv
xchg
or
popa
push
push
pop
shll
scas
mov
lods
jg
mov
xor
cmp
xchg
mov
sub
enter
rol
cmpsb
pop
adc
leave
jmp
hlt
test
jne
and
jbe
dec
jns
mov
dec
shrl
adc
adc
xchg
xor
mov
sbb
sub
test
pop
das
sub
pop
dec
iret
insl
sarb
jmp
xor
adc
ja
dec
push
and
movsb
xor
or
jne
mov
les
mov
scas
sbb
shlb
and
mov
pop
cmc
add
repnz
jnp
into
pushf
stc
pop
jnp
sbb
pop
lds
fisttpl
jg
mov
adc
xchg
push
inc
xor
gs
inc
jb
adc
push
ret
pop
int3
push
mov
mov
cs
std
push
dec
sahf
fwait
push
xor
insl
test
ljmp
pushf
jbe
mov
lock
cmp
xor
xchg
imul
mov
out
jl
int3
mov
sub
xor
lds
push
mov
mov
out
add
push
sbb
xor
pop
stc
lods
and
jbe
or
icebp
sti
mov
jl
scas
out
enter
pop
push
push
sub
xor
mov
popa
jg
sbb
popf
punpckhbw
cs
mov
in
jbe
xchg
and
jg
mov
xchg
push
fisubs
push
rclb
lods
sbb
cmp
xor
test
xor
xchg
sbb
pop
aad
or
in
pop
mov
mov
ds
aad
stos
inc
pop
mov
jmp
das
xor
xchg
or
xor
cmc
in
xor
push
sub
push
inc
xchg
negl
mov
mov
jmp
add
cmp
cmp
add
pop
lret
inc
mov
xchg
or
sbb
sub
call
pop
jp
in
sbb
sbb
push
pop
inc
outsl
lock
sub
ja
scas
xor
in
ficoms
loope
cltd
or
cmp
out
nop
cltd
insb
daa
lods
sub
aaa
xchg
dec
pusha
mov
lods
out
add
imulb
das
ljmp
or
imul
cld
add
fbstp
daa
xchg
sbb
jne
and
cmp
mov
pop
add
andb
sub
mov
cmp
adc
test
fadds
sbb
mov
movsb
rorb
fsubrs
fmul
std
popf
mov
popa
repnz
sub
and
push
out
inc
inc
or
test
xchg
mov
fisttpll
roll
sahf
test
sbb
test
and
in
lahf
ss
rcrb
mov
dec
xchg
loope
pop
nop
std
into
jns
mov
and
minps
sub
fidivl
dec
in
ljmp
jb
roll
lret
xchg
pusha
push
or
jb
jno
in
hlt
dec
pop
adc
pop
jp
jne
cmp
and
sbbb
nop
xor
iret
test
iret
jmp
adc
ror
adc
stos
loopne,pt
dec
ljmp
loope
xchg
sub
clc
fisubs
or
imul
cmp
mov
pop
idivl
push
daa
insb
mov
ja
shrb
bnd
out
lea
fisubs
testb
insb
add
sbb
loopne
sbb
jecxz
or
mov
cltd
cmpsb
push
adc
fwait
jno
cld
cmp
nop
test
imul
leave
mov
test
inc
mov
bound
rol
sub
ja
jp
into
and
pop
pop
fisttpll
call
add
lods
dec
sub
leave
mov
pop
push
inc
loop
jmp
aas
push
mov
out
iret
mov
int3
and
sbb
addr16
sub
jns
shr
aaa
xchg
push
push
push
and
dec
jo
adc
sbb
pop
mov
sbb
in
pop
or
pushf
cltd
imul
add
cmp
add
in
imul
mov
sub
mov
rol
cmp
outsl
int
lcall
mov
dec
repz
jb
jecxz
data16
and
mov
push
js
push
ss
add
pop
mov
cmp
icebp
out
sahf
loopne
pop
or
inc
out
mov
pop
fsubl
mov
push
repnz
inc
or
adc
cmp
mov
outsl
adc
scas
frstor
rorl
icebp
aas
sar
jle
addb
pop
sub
enter
out
test
out
in
xor
lods
lods
outsl
add
fcoml
inc
add
mov
test
jmp
push
shrl
aad
imul
cmp
push
clc
sbb
jo
stc
in
daa
pop
jp
dec
scas
test
xor
jl
sbb
adc
lea
mov
in
push
mov
cmp
inc
ds
push
jmp
bound
xchg
adc
imul
dec
jmp
loope
hlt
pop
repnz
jbe
pop
push
inc
ret
sbb
iret
xor
or
leave
mov
adc
add
xorl
fistl
sub
sub
lds
sbb
push
ret
gs
xor
mov
jns
mov
mov
pop
sub
push
fs
fdivl
pop
testl
pop
mov
cmpsl
fcomps
jb
mov
mov
out
imul
sub
dec
pop
shrl
or
mov
and
es
fdivs
movsl
in
divl
or
xchg
ja
out
incl
or
out
mov
mov
ficoml
stc
outsb
test
dec
xlat
cmpsb
mov
push
mov
jno
repnz
ds
jp
dec
int
mov
mov
adc
shll
hlt
aad
mov
loope
add
call
outsb
adc
mov
dec
in
inc
out
repnz
icebp
dec
xor
dec
lods
repz
fsubr
aad
xor
pop
xor
add
mov
push
mov
jbe
sti
adcb
cmpsb
pop
fwait
dec
mov
das
in
dec
test
cs
xchg
into
jge
mov
mov
mov
jbe
cmp
in
pop
je
mov
enter
rorl
push
sar
dec
das
xchg
push
mov
aam
pop
outsb
adc
inc
or
fisubrs
loop
xor
sbb
jg
fdivs
xlat
adc
notb
sbb
and
push
push
rcrb
int
pop
xor
xchg
sub
adc
test
dec
test
jmp
pusha
cmp
mov
out
jecxz
std
daa
rorl
test
jle
jne
add
dec
icebp
addr16
arpl
mov
jae
mov
jbe
or
movd
ja
icebp
repnz
cltd
xchg
js
ss
sbb
test
mov
push
out
pushl
pop
mov
repnz
xor
movl
mov
pop
mov
xlat
mov
mov
mov
test
dec
and
sbb
outsl
inc
lcall
sbb
mov
cs
cld
sub
adc
repnz
icebp
repz
xor
call
add
jle,pn
clc
xchg
out
bnd
xchg
cmpsb
inc
ds
xchg
stos
cltd
imul
leave
sub
sbb
jecxz
cld
subl
int3
cmp
addb
inc
ret
out
xor
fnstenv
xor
pop
push
push
ficoms
xchg
imul
mov
mov
stos
faddl
out
dec
jae
aas
loopne
adc
push
pop
sub
fwait
mov
push
out
push
jno
cmp
cmp
sahf
add
jmp
test
adc
mov
in
or
stos
pop
pop
sahf
cmp
loopne
mov
call
push
pop
cmpsl
dec
pop
xchg
add
dec
sbb
cmp
jnp
in
into
or
jnp
stos
icebp
sub
cld
movsb
inc
xchg
inc
xchg
ja
fucomp
les
jle
mov
lea
cwtl
dec
mov
and
jb
push
cltd
test
xor
adc
pop
mov
fcompl
leave
jle
arpl
les
sub
icebp
pop
not
addr16
test
test
in
mov
inc
xor
dec
inc
jmp
popf
add
mov
push
cmp
iret
mov
sub
pop
adc
sti
push
popf
lcall
cmp
push
dec
cwtl
mov
cld
imul
sbb
lret
mov
lods
bound
lods
pop
ret
aam
push
jb
and
mov
aas
dec
shrd
hlt
mov
cs
add
inc
std
xorb
cmc
inc
mov
jge
jle
rcrl
push
adc
xchg
ja
mov
inc
inc
jmp
fs
test
jb
xor
and
push
clc
rcl
sub
pop
xor
arpl
arpl
ficompl
shlb
rorl
jl
scas
fiaddl
dec
pop
ljmp
cld
mov
or
or
inc
std
jae
inc
jno
lods
jle
lcall
pop
or
push
push
fs
les
jb
mov
daa
push
pop
lods
imulb
cmp
in
out
jns
std
or
repz
inc
mov
push
jp
and
faddl
jno
mov
inc
jb
cmpsl
sarl
jge
hlt
sub
adc
rcrl
aad
and
sub
sub
dec
movsb
cmpb
pop
rclb
and
xor
dec
mov
lahf
and
leave
adc
int3
roll
mov
cmp
push
loope
jae
sub
mov
ds
das
in
dec
sub
adc
fwait
sub
and
jne
jns
pop
popa
ja
sub
mov
rcr
rol
dec
leave
jnp
rcrl
xor
jb
adc
and
rcr
jecxz
gs
pop
pop
adc
addl
fmuls
pushf
aam
pop
aam
jl
lret
and
adc
push
clc
mov
lods
call
in
shll
mov
lds
cmp
pop
mov
push
add
xor
jo
nop
addl
jmp
movsl
daa
orb
jp
stc
cwtl
in
and
loop
std
pop
inc
loopne
repz
inc
repz
mov
or
add
lds
dec
xor
leave
push
es
jno
pop
dec
push
call
jae
repnz
push
and
test
enter
or
scas
fadds
test
push
inc
in
mov
push
shrb
sub
mov
movsb
pusha
and
xchg
and
push
movsl
inc
out
sbb
xchg
cwtl
stos
mov
mov
js
jg
jb
push
icebp
imul
pop
sbb
xor
pop
filds
gs
adc
push
gs
rclb
mov
repz
or
test
imul
jne
sahf
mov
out
pop
xchg
divl
dec
jp
scas
cli
iret
in
inc
adc
and
insb
dec
jmp
repnz
push
mov
or
jg
sub
dec
or
call
je
in
pop
adc
cmp
inc
jnp
add
dec
mov
repnz
rorl
sti
shlb
gs
int3
xor
loopne
lea
sub
test
jno
xor
sbb
dec
loopne
push
mov
fsubr
sbb
in
into
or
js
cli
xchg
pop
jns
inc
cmpsb
xchg
rolb
iret
cmp
push
mov
push
dec
loope
int3
outsb
lret
call
adcl
addb
loope
stos
adc
inc
mov
sub
bound
mov
lcall
aaa
sti
push
inc
stos
cmp
insb
iret
pop
bnd
fcmovnb
xchg
jl
xor
leave
add
pop
fiadds
sub
cmpl
lcall
lods
mov
addb
sub
jge
or
outsb
cmc
dec
adc
sbb
adc
xchg
add
fidivs
leave
bound
ds
cmpsb
mov
popf
and
cwtl
xchg
push
icebp
mov
sti
adc
add
inc
decb
fsubs
repnz
mov
stos
aad
mov
and
aam
mov
hlt
fs
mov
dec
xor
lcall
add
insb
mov
and
and
sub
push
sub
jp
out
les
xor
out
xchg
js
cmp
xor
dec
jne
sbb
std
ljmp
popa
test
sbb
jle
cmp
aad
push
mov
stc
push
xchg
xchg
push
sbb
sbb
push
sbbb
sbb
lret
xlat
xchg
daa
add
lcall
jbe
lcall
popa
push
mov
adc
mov
bound
out
and
mov
jl
mov
lea
mov
popf
hlt
fwait
jg
gs
cmp
pop
or
xchg
xor
test
inc
fldt
lret
xor
xor
std
xchg
mov
pop
add
int3
mov
into
in
mov
iret
icebp
mov
shlb
leave
hlt
cltd
fists
mov
lret
cmp
stos
sahf
addl
ror
add
jmp
mov
lock
add
lds
les
inc
pop
dec
sti
pop
mov
movsl
add
xor
aaa
pop
hlt
repz
add
in
inc
scas
sub
stos
mov
insl
rorb
lods
cs
out
enter
mov
scas
mov
fnsave
popa
cmp
xchg
aaa
enter
sarl
cmp
std
fucomip
jmp
push
aaa
mov
push
xor
xchg
xchg
dec
add
clc
test
into
test
sub
outsl
mov
popf
mov
stc
mov
jle
fildll
imul
pop
out
rcrb
add
add
mov
xorl
imul
fcompp
dec
ljmp
sti
mov
movl
addb
xchg
leave
cmc
inc
lods
pushl
inc
jecxz
push
gs
sti
push
outsl
repz
dec
push
inc
inc
or
fwait
jb
pop
mov
or
xor
jl
push
push
in
sub
into
scas
daa
mov
push
add
adc
popf
mov
stc
mov
mov
sbb
fstpl
push
int3
stc
inc
es
lea
fiadds
decb
sahf
outsb
enter
xor
imul
clc
adc
dec
aam
cmpsb
outsb
inc
int
dec
sub
pushf
addr16
mov
in
lds
sbb
adcb
into
or
pushf
arpl
sub
int3
xor
jno
sbb
and
cmp
sub
mov
imul
jl
enter
cmpsl
mov
inc
lea
add
xchg
pusha
push
out
dec
dec
enter
imul
outsb
lods
mov
cmp
cmpsl
icebp
jmp
pop
test
push
mov
adc
aaa
cld
mov
fbstp
scas
out
gs
sub
ret
sbb
sub
rcrl
insl
xchg
iret
icebp
sub
sahf
mov
xor
cli
arpl
mov
add
mov
adcl
mov
lahf
ds
out
aaa
out
imul
xchg
jecxz
sahf
icebp
mov
repnz
out
cwtl
sub
stos
movsb
adc
clc
fisubrs
fnstcw
cmp
sbb
push
inc
ret
jp
jl
xor
fsqrt
js
arpl
sbb
jbe
aad
lcall
lods
and
sbb
lds
xchg
mov
cmp
shl
xor
cwtl
cmp
ljmp
add
add
or
mov
pop
mov
lds
xorl
mov
pop
mov
pop
jne
iret
imul
sub
shr
fs
jo
cmpsl
loope
cmp
lds
sbb
and
pop
mov
mov
xor
aas
xchg
push
pop
sbb
dec
out
xchg
sbb
loope
sub
fadds
lahf
lock
mov
jno
pop
adc
xor
push
stc
or
sub
outsl
fistps
and
fcomip
lea
inc
pop
dec
push
aaa
aas
and
mov
xor
xchg
loop
out
dec
push
sub
stos
pop
rorl
hlt
jmp
push
pushf
dec
in
pusha
inc
mov
dec
call
mov
testb
pop
test
lock
and
inc
mov
mov
int3
jbe
cmp
push
jecxz
lock
xlat
mov
call
ds
and
xchg
mov
fldl
cld
jbe
clc
sub
adc
js
cmpsb
fcomps
sbb
add
jbe
inc
aad
add
xlat
jno
xchg
jne
mov
stc
xorl
pop
ja
mov
in
mov
fwait
cmp
andl
scas
and
fisubs
sarb
inc
hlt
js
cmp
lret
mov
adc
xchg
sub
inc
lea
sub
jne
movsl
adc
mov
int
int3
mov
add
into
into
dec
add
add
add
incl
add
add
xchg
testb
mov
cmp
imul
add
add
add
add
add
mov
lldt
rorb
enter
faddp
sldt
rorl
or
ltr
rorl
sub
cmp
str
ltr
add
sldt
rorl
cmpsb
rorl
add
add
rol
sldt
add
add
ltr
rorl
sub
cmp
str
ltr
add
sldt
rorl
cmpsb
rorl
add
add
rol
sldt
add
add
push
imul
jb
add
push
imul
insb
insb
outsl
arpl
add
je
jb
arpl
jae
cwtl
add
je
jb
arpl
fs
jae
add
dec
add
fs
imul
js
add
ja
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
jnp
push
imul
jb
je
arpl
jne
inc
gs
outsl
fs
gs
imul
add
out
add
gs
imul
dec
add
fs
imul
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
aad
ja
jo
imul
add
jae
popa
addr16
outsl
js
add
inc
push
xor
cs
insb
and
lret
cmp
add
dec
mov
das
lret
cmp
add
dec
mov
add
mov
add
repz
cmpl
js
push
push
or
ja
push
pop
xor
sahf
adc
movq
add
fnstsw
xchg
xchg
add
in
nop
add
xchg
insl
mov
ljmp
add
jle
ret
sub
outsb
cmp
out
fs
and
fs
aad
or
dec
cmp
cmp
adc
xor
push
inc
mov
push
push
popf
jg
int
add
xlat
jbe
loopne
lds
and
sbb
sub
test
inc
inc
mov
jae
lds
stos
addr16
addr16
mov
cli
pusha
sbb
outsl
jno
popf
scas
cmp
sti
lds
pop
mov
sub
add
mov
mov
addr16
je
mov
add
sub
pop
repz
and
fstpt
scas
aaa
push
jnp
push
fs
sti
pop
enter
push
in
andl
mov
fisubl
rcr
mov
inc
xor
push
mov
sub
mov
loopne
mov
jmp
loop
or
cmpsb
add
pop
sub
mov
loop
movsl
mov
mov
add
in
sub
mov
push
push
push
mov
cmp
jae
xor
cmp
mov
jb
movzbl
push
xor
pop
div
mov
add
dec
jne
cmp
jb
movzbl
push
xor
pop
div
mov
add
dec
jne
movzbl
mov
push
lea
push
shl
lea
push
push
call
test
mov
jne
push
pop
jmp
lea
push
mov
push
add
pushl
push
mov
add
push
pushl
push
push
push
push
call
add
mov
xor
mov
push
push
pushl
call
lea
mov
push
lea
push
push
push
movl
pushl
call
add
mov
pop
pop
pop
leave
ret
mov
mov
sub
ret
push
mov
sub
push
push
push
andl
repz
gs
push
jb
jbe
xor
xor
or
jne
mov
mov
push
push
push
push
call
mov
jmp
andl
cmpl
jne
cmpl
je
cmpl
je
jmp
cmpl
je
jmp
movl
mov
add
mov
call
mov
push
push
push
push
call
mov
mov
cmpl
jne
push
push
call
pop
push
push
call
pop
push
push
call
push
lea
push
pushl
call
lea
mov
mov
movsbl
cmp
je
mov
dec
mov
jmp
mov
inc
mov
mov
lea
sub
mov
mov
lea
lea
mov
shr
rep
mov
and
rep
mov
andb
mov
mov
mov
mov
add
mov
mov
cmpl
je
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
pushl
mov
pushl
pushl
call
add
mov
pushl
pushl
call
pop
pop
mov
cmpl
jge
pushl
push
call
pop
push
pushl
call
add
push
pushl
pushl
push
call
jmp
mov
cmpl
je
push
push
mov
pushl
push
call
mov
mov
mov
cmpl
jne
push
pushl
push
call
pop
push
push
call
jmp
mov
mov
mov
mov
mov
add
mov
mov
mov
xor
divl
add
mov
pushl
mov
pushl
pushl
call
add
jmp
mov
inc
mov
mov
movzwl
cmp
jge
mov
imul
mov
mov
mov
mov
imul
mov
mov
add
mov
shr
rep
mov
and
rep
mov
imul
mov
mov
add
mov
jmp
push
push
pushl
call
jmp
mov
mov
add
mov
sub
mov
mov
mov
xor
divl
add
mov
andl
jmp
mov
inc
mov
mov
movzwl
cmp
jge
mov
imul
mov
cmpl
je
mov
imul
mov
cmpl
jbe
mov
imul
mov
mov
add
mov
mov
imul
mov
mov
mov
mov
imul
mov
mov
add
mov
pushl
mov
imul
mov
pushl
pushl
call
add
jmp
mov
mov
add
mov
andl
mov
cmpl
je
mov
cmpl
je
andl
lea
push
push
push
pushl
call
mov
mov
add
mov
pushl
call
mov
cmpl
jne
push
push
pushl
call
mov
cmpl
je
movl
cmpl
jne
mov
mov
lea
mov
or
xor
repnz
not
sub
mov
mov
mov
shr
rep
mov
and
rep
push
push
lea
push
call
mov
cmpl
je
movl
cmpl
jne
pushl
push
call
pop
push
pushl
call
add
push
pushl
pushl
push
call
jmp
cmpl
je
cmpl
je
mov
mov
mov
mov
mov
inc
mov
mov
mov
add
mov
mov
cmpl
jne
mov
mov
jmp
mov
mov
add
mov
mov
cmpl
je
andl
mov
mov
and
test
je
mov
mov
and
movzwl
push
pushl
call
mov
jmp
mov
mov
add
mov
mov
inc
inc
push
pushl
call
mov
cmpl
jne
mov
mov
and
test
je
mov
mov
and
movzwl
push
pushl
pushl
push
call
pop
push
pushl
call
add
jmp
mov
inc
inc
push
pushl
pushl
push
call
pop
push
pushl
call
add
push
pushl
pushl
push
call
jmp
lea
push
push
push
pushl
call
mov
mov
mov
mov
add
mov
mov
add
mov
jmp
mov
add
mov
jmp
call
test
jne
push
call
pop
push
pushl
call
pop
pop
push
pushl
pushl
push
call
jmp
mov
cmpl
je
call
mov
mov
add
mov
cmpl
je
push
push
pushl
call
cmpl
je
push
push
pushl
call
cmpl
jne
pushl
pushl
pushl
call
call
pop
pop
pop
mov
pop
ret
mov
pop
pop
pop
mov
pop
push
mov
cmpl
jne
pop
xor
inc
ret
pop
jmp
cmpl
jne
movl
pop
pop
pop
mov
pop
xor
ret
cmpl
je
push
push
pushl
call
cmpl
je
push
push
pushl
call
cmpl
jne
call
pop
pop
pop
mov
pop
ret
push
call
jmp
jmp
jmp
jmp
jmp
jmp
mov
push
xor
test
je
mov
push
xor
push
call
mov
andl
mov
inc
movzwl
shl
mov
test
jne
pop
pop
ret
push
mov
sub
mov
push
push
push
mov
add
mov
mov
cmp
je
mov
test
je
lea
cmpl
je
lea
andl
mov
mov
sub
cltd
sub
sar
test
jle
mov
movzwl
mov
and
add
add
shr
je
cmp
jne
mov
mov
sub
add
cmp
jb
mov
mov
add
cmp
ja
lea
push
push
push
push
call
lea
mov
push
pushl
push
push
call
mov
mov
addl
incl
sub
cltd
sub
sar
cmp
jl
add
jmp
xor
jmp
push
pop
pop
pop
pop
leave
ret
push
mov
cmpl
push
je
mov
mov
sub
add
mov
test
je
mov
test
je
pushl
pushl
pushl
call
add
jmp
mov
movl
mov
mov
mov
mov
mov
pop
pop
ret
push
mov
push
mov
cmpl
je
cmpl
je
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
sub
mov
mov
shr
rep
mov
and
rep
mov
mov
xor
lea
mov
shr
rep
mov
and
rep
pop
pop
pop
cmpl
movl
je
pushl
pushl
pushl
call
leave
ret
push
mov
sub
push
push
push
push
mov
pop
mov
mov
mov
xor
and
mov
mov
mov
add
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
mov
mov
mov
cmp
je
cmp
je
inc
jmp
mov
mov
mov
sub
add
add
cmp
mov
jbe
andl
jmp
test
jbe
mov
and
shl
dec
mov
jne
mov
test
je
cmp
jne
mov
mov
shrl
mov
and
cmpl
je
and
cmp
jae
xor
mov
mov
movzbl
shl
or
movzbl
shl
or
sub
sub
sub
cmpl
mov
je
mov
push
movzbl
mov
shl
mov
pop
sub
mov
shr
test
je
cmp
jne
push
pop
sub
push
shl
pop
mov
shl
dec
xor
jmp
mov
mov
add
shr
and
dec
not
mov
mov
shr
mov
mov
shr
mov
mov
andl
jmp
orl
mov
inc
test
je
cmp
jne
or
mov
cmp
jbe
pop
pop
pop
leave
ret
push
mov
mov
mov
push
xor
mov
push
mov
test
jle
push
mov
shr
shl
cmp
jb
sub
or
cmp
jae
mov
shl
cmp
jne
movl
or
jmp
mov
inc
mov
movzbl
shl
or
decl
jne
pop
mov
mov
pop
pop
pop
ret
mov
mov
push
push
mov
movzwl
mov
shr
imul
mov
cmp
jae
mov
mov
movzwl
mov
sub
sar
add
mov
mov
cmp
jae
mov
cmp
jne
movl
or
jmp
mov
inc
mov
mov
movzbl
shl
or
shl
mov
mov
xor
jmp
sub
sub
mov
mov
mov
push
mov
shr
sub
mov
mov
cmp
pop
jae
mov
push
cmp
jne
mov
or
jmp
mov
inc
mov
mov
movzbl
shl
or
pop
shl
mov
mov
pop
pop
ret
push
mov
cmpl
push
pop
jle
push
push
mov
pushl
lea
mov
add
push
call
pop
add
dec
pop
jne
pop
pop
mov
push
pop
shl
sub
pop
ret
push
push
xor
push
xor
cmp
pop
jle
push
mov
pushl
lea
add
push
call
pop
lea
pop
mov
shl
or
inc
cmp
jl
pop
mov
pop
pop
ret
push
mov
push
push
movzbl
shr
shlb
mov
push
mov
pushl
shl
lea
push
call
pop
mov
pop
or
cmp
jne
cmp
jge
movzbl
shr
pushl
lea
shlb
shl
add
lea
push
call
pop
add
pop
or
jmp
mov
cmp
jge
pushl
add
lea
push
call
pop
or
pop
jmp
pop
mov
pop
pop
pop
ret
push
mov
push
mov
push
push
call
pop
pop
test
push
jne
mov
push
shl
lea
push
call
add
jmp
lea
push
call
pop
pop
test
push
jne
mov
push
shl
lea
push
call
add
add
jmp
add
push
push
call
add
add
pop
pop
ret
push
mov
sub
mov
push
push
push
mov
push
pop
xor
lea
mov
shl
xor
mov
mov
mov
mov
mov
shl
add
mov
mov
mov
mov
mov
dec
mov
mov
shl
dec
mov
mov
test
jbe
mov
mov
mov
shr
rep
adc
rep
mov
mov
andl
andl
orl
lea
mov
mov
movl
cmp
jne
mov
or
jmp
mov
mov
incl
mov
movzbl
shl
or
decl
mov
jne
mov
andl
cmpl
jbe
mov
lea
and
push
mov
shl
add
lea
push
call
pop
test
pop
jne
mov
mov
sub
and
movzbl
shr
mov
shl
add
lea
shl
cmpl
lea
jge
andl
jmp
cmpl
jge
subl
jmp
subl
cmpl
je
mov
mov
sub
mov
mov
lea
pushl
push
push
call
add
andl
mov
jmp
push
pop
add
lea
push
lea
push
call
or
pop
cmp
pop
jl
mov
jmp
mov
lea
push
movl
lea
push
call
pop
cmp
pop
jne
lea
push
lea
push
call
pop
test
pop
lea
push
jne
lea
shl
add
lea
push
call
pop
test
pop
jne
cmp
mov
setge
dec
and
add
sub
mov
mov
mov
mov
incl
mov
jmp
lea
push
call
pop
test
pop
jne
mov
jmp
lea
push
lea
push
call
pop
test
pop
jne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
lea
push
call
mov
add
xor
cmp
setge
dec
and
add
mov
jmp
mov
push
mov
mov
mov
mov
mov
xor
cmp
setge
dec
and
add
mov
lea
push
lea
push
call
mov
add
cmp
jge
jmp
push
pop
shl
lea
push
lea
push
push
call
add
cmp
jl
mov
mov
sar
and
dec
or
shl
cmp
jge
lea
push
push
mov
sub
lea
push
call
add
add
jmp
add
lea
push
push
call
shl
add
lea
push
lea
push
push
call
add
jmp
mov
mov
inc
mov
cmpl
je
inc
inc
mov
mov
mov
sub
mov
mov
inc
dec
mov
test
jle
cmp
jb
mov
cmp
jb
mov
mov
pop
pop
mov
xor
pop
leave
ret
push
mov
sub
push
push
push
xor
push
mov
mov
mov
mov
mov
call
mov
pop
push
call
push
mov
call
mov
pop
push
pushl
call
push
mov
call
pop
push
pushl
call
push
mov
call
pop
push
call
push
mov
call
pop
push
pushl
call
push
mov
call
pop
push
call
mov
push
push
call
push
push
mov
call
push
push
mov
call
push
push
mov
call
push
push
mov
call
cmp
mov
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
push
call
mov
cmp
jl
lea
push
push
push
push
push
push
call
mov
cmp
jl
mov
push
mov
call
mov
cmp
jl
mov
lea
push
push
mov
call
mov
mov
cmp
jl
mov
lea
push
push
push
call
mov
cmp
jl
pushl
push
push
call
cmp
mov
je
lea
mov
push
push
call
mov
cmp
jl
mov
mov
mov
mov
shr
rep
pushl
mov
and
rep
call
mov
cmp
jl
mov
lea
push
pushl
mov
push
call
mov
cmp
jl
mov
lea
push
push
mov
call
mov
cmp
jl
lea
push
call
push
push
sub
lea
mov
mov
movsl
mov
push
movsl
movsl
movsl
call
mov
cmp
jge
pushl
call
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
mov
jmp
mov
push
mov
call
mov
mov
cmp
jl
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
xor
jmp
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
or
pop
pop
pop
leave
ret
mov
test
jne
push
push
push
push
call
mov
push
push
push
push
call
mov
mov
add
test
jle
push
mov
or
xor
repnz
not
dec
dec
lea
jne
pop
mov
pop
ret
add
add
adc
add
add
add
push
add
add
add
add
push
les
add
add
push
add
add
rorb
pusha
addb
add
add
add
add
add
add
add
add
add
repz
add
add
pusha
add
add
inc
xor
add
adc
add
and
add
add
inc
add
add
je
add
cmp
add
push
add
mov
add
rolb
add
lods
xchg
add
fadds
or
add
add
