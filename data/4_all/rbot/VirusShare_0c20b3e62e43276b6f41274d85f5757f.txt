push
or
add
add
add
orb
add
add
int
sldt
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jne
add
cmp
ltr
verw
js
sldt
add
add
add
pop
add
addb
add
sbb
sldt
add
add
nop
sldt
add
add
nop
sldt
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
push
cs
dec
dec
add
xor
xor
inc
dec
dec
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
jb
je
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
jae
add
push
dec
gs
fs
outsl
outsb
outsb
arpl
outsb
xor
add
add
add
add
jb
add
adc
add
add
add
add
add
lcall
pusha
call
pop
sub
lea
cmpb
je
movb
mov
sub
mov
add
lea
add
push
push
push
push
push
push
call
test
je
mov
call
pop
mov
add
push
push
call
pop
pop
mov
mov
add
mov
cmpl
jne
add
mov
jmp
mov
add
add
cmpl
je
add
mov
add
push
push
push
pushl
pushl
mov
mov
mov
add
call
pop
pop
pop
cmp
je
add
jmp
push
push
pushl
call
lea
mov
lea
mov
mov
cmp
je
mov
inc
sub
cmp
ja
mov
cmpb
je
mov
cmp
jne
mov
shr
rol
xchg
jmp
mov
xchg
rol
xchg
sub
add
mov
add
sub
mov
loop
call
lea
mov
cmp
je
mov
sub
je
mov
lea
mov
lea
mov
cmp
je
mov
add
mov
jmp
mov
add
mov
xor
mov
inc
or
je
cmp
ja
add
add
jmp
and
shl
mov
add
or
jne
mov
add
jmp
xor
xchg
mov
cmp
je
lods
or
je
add
add
jmp
xor
shr
lods
or
je
add
add
jmp
lea
mov
lea
mov
cmp
jne
add
push
push
push
push
push
push
call
pop
pop
cmp
jne
add
mov
rep
sub
sub
push
pushl
push
push
call
push
pop
sub
xor
mov
cmp
je
inc
lea
mov
push
push
push
push
push
pushl
pushl
mov
add
push
call
pop
pop
pop
pop
add
loop
mov
cmp
je
popa
popf
mov
ret
popa
popf
jmp
mov
or
je
mov
add
cmpl
jne
cmpl
jne
cmpl
jne
jmp
mov
add
push
push
push
lea
add
add
push
call
pop
pop
pop
cmp
je
mov
add
add
xor
mov
cmp
jne
inc
jmp
mov
add
push
push
push
cmpb
jne
inc
mov
and
mov
movb
push
push
pushl
call
pop
pop
pop
pop
cmp
je
mov
mov
pushl
popl
add
inc
jmp
clc
ret
jmp
push
mov
mov
mov
cld
mov
movsb
call
jae
xor
call
jae
xor
call
jae
mov
call
adc
jae
jne
stos
jmp
call
dec
loop
mov
call
jmp
lods
shr
je
adc
mov
jmp
xchg
dec
shl
lods
mov
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
pop
ret
push
call
ret
incl
mov
cmp
jne
sbb
adc
xor
or
ret
pop
mov
inc
mov
pusha
mov
sbb
popa
adc
or
push
push
and
rolb
or
push
jmp
pop
pop
call
in
mov
shl
or
dec
mov
jne
pop
push
add
push
push
mov
pop
xor
test
push
cmpb
sub
push
sbb
shr
and
jb
sub
sbbl
pusha
jae
shl
or
test
clc
dec
jne
pop
mov
dec
jp
sbb
ret
pop
mov
repnz
dec
popa
push
movzwl
fadd
sarl
push
scas
movl
jae
xor
cmc
add
lock
sub
roll
add
cmp
sbb
lahf
mov
loope
cmp
loopne
jmp
sub
dec
clc
insl
push
mov
outsl
mov
shl
rcll
ret
mov
add
pop
ret
adc
push
ficoml
jle
mov
inc
mov
or
sbb
call
out
or
jne
pop
ret
mov
shl
pop
pop
add
xchg
pop
sbb
jbe
pushf
xor
incl
jge
mov
sti
test
jle
gs
js
add
push
call
rclb
roll
loopne
inc
cld
inc
cmp
dec
jl
sbb
popa
insl
repnz
call
outsb
in
call
cmp
cmp
ljmp
sbb
les
jne
mov
shr
pop
lea
iret
loopne
add
jbe
inc
call
or
add
lock
cmp
sbb
call
fcomps
mov
test
push
cmp
icebp
call
shlb
sub
lods
add
add
call
cmp
dec
add
and
jne
sbb
and
or
add
push
clc
mov
mov
rcl
addr16
dec
cmp
adc
dec
push
icebp
inc
dec
or
enter
jo
icebp
movsb
push
sbb
int3
dec
hlt
enter
in
adc
sbb
inc
dec
clc
nop
push
in
and
add
shl
add
xor
dec
dec
sbb
or
dec
pusha
push
pusha
adc
fdivl
push
add
mov
inc
jne
sar
mov
fsubrl
and
rep
adc
popa
data16
jne
and
adc
lea
call
jge
orb
jo
pop
mov
adc
sbb
fisubs
test
adc
hlt
inc
stos
popa
and
fwait
ret
bound
inc
std
inc
adc
sbb
inc
inc
andb
and
pushf
lds
mov
inc
nop
add
in
mov
jge
xchg
add
adc
sahf
out
add
movsl
hlt
into
xor
je
and
cmp
mov
lcall
stos
sbb
xorl
or
insb
out
fcoms
xchg
push
repnz
or
xor
xchg
call
cmp
push
sbb
cmp
das
cmpsb
mov
jne
movsb
inc
setb
add
sbb
cmp
sysexit
test
pop
incl
pop
popf
shrb
clc
lea
inc
stc
hlt
cmp
mov
add
pushl
dec
mov
jmp
mov
inc
sbb
ret
dec
in
jmp
sub
enter
cs
lock
mov
xchg
sbb
fldl
dec
xor
ljmp
out
or
jmp
insb
lock
sbb
fcmovnbe
or
popf
test
pop
sub
mov
xor
or
call
add
mov
dec
add
pop
fcoms
push
adcl
jl
dec
loop
xchg
and
dec
stc
iret
xor
sub
pop
jge
adc
lock
dec
pop
add
pop
add
and
sti
movsb
sbb
dec
add
xchg
testb
fcmovne
mov
test
orl
and
xor
cmp
cmp
rcl
inc
inc
add
mov
inc
inc
cmp
inc
dec
test
mov
aam
jb
in
icebp
js
loopne
adcb
inc
rclb
test
jne
inc
js
shl
arpl
adc
mov
addb
or
add
pop
inc
jmp
push
sub
sub
jb
xor
mov
jge
cs
shrl
dec
jne
cmp
mov
sbb
xor
icebp
addb
mov
iret
push
es
sbb
jno
int
and
mov
xchg
adc
mov
and
mov
adc
sbb
mul
mov
inc
outsb
addb
add
mov
test
pop
push
clc
push
add
add
pop
add
and
fs
add
orb
add
mov
mov
xlat
inc
mov
xor
lret
mov
dec
add
add
adc
adc
xchg
out
mov
and
sti
mov
push
test
insl
subl
fmull
inc
out
or
cs
hlt
push
inc
cmp
cli
les
mov
adc
jge
out
jb
testb
dec
add
push
sub
or
pushf
jmp
out
xchg
pop
lock
sub
lcall
mov
xchg
inc
pushf
sbb
lea
addr16
fwait
int3
mov
pop
std
mov
mov
imul
adc
jne
pop
pop
xchg
daa
aad
movsb
shl
dec
inc
mov
sbb
jl
loop
in
inc
pop
jb
cli
lods
sub
pushf
das
pop
xchg
mov
jb
fs
dec
test
sti
mov
mov
mov
dec
out
iret
add
sti
or
scas
das
pop
mov
sbb
inc
mov
das
sbb
sub
adcl
rcll
test
pop
hlt
pop
sbb
in
shl
push
jle
lods
divb
imul
dec
mov
cmc
xor
push
push
mov
lea
mov
jge
out
rclb
js
mov
lret
test
pop
adc
repnz
pop
cmp
or
in
ret
xchg
cmp
mov
loope
and
daa
xor
inc
xchg
mov
fadds
mull
sub
clc
inc
divl
jae
dec
sbb
jno
pop
fucom
add
push
pop
push
xchg
jmp
and
movsl
mov
lods
adc
dec
push
cmp
enter
jae
sahf
xor
pop
xchg
pop
dec
int
sbb
xor
mov
stos
mov
adc
jg
std
mov
inc
int
push
mov
int
out
and
and
imul
add
inc
rcrl
jl
xchg
xorl
mov
add
lcall
xchg
pop
xchg
fidivl
test
repz
dec
out
mov
test
mov
std
mov
fldpi
adc
xchg
shll
cwtl
adc
mov
add
inc
cs
push
sbb
cwtl
aaa
sub
push
pushf
fbstp
and
push
lcall
cmpsb
mov
aad
test
ss
mov
xlat
test
adc
ljmp
mov
push
mov
push
lahf
cmp
sbb
psubw
leave
insl
sub
pushf
stos
xor
into
push
fistpll
in
inc
push
pop
sub
stos
sarl
mov
sbb
rol
mov
xchg
sub
std
cmp
push
cmc
fcompl
rclb
fildll
push
fwait
xchg
pop
adc
jg
jecxz
mov
push
add
call
push
aad
inc
xor
out
sub
cli
adc
cmpsl
icebp
xchg
pop
shlb
sbb
and
xor
out
pop
jae
sbb
lock
iret
rcrl
outsb
imulb
shl
movb
xchg
ret
movsl
add
xchg
xchg
pop
fstps
adc
mov
cmp
mov
mov
clc
sbb
jbe
push
dec
lds
mov
sti
add
sbb
jne
pusha
inc
mov
sub
push
dec
push
cmp
repz
adc
jae
pop
int3
xor
movb
and
arpl
and
movsb
push
cmp
je
imul
jne
or
aad
xor
pop
mov
jae
shlb
sub
cmpsl
fidivs
mov
push
push
outsb
testl
mov
and
push
pop
cmp
in
test
sbb
cmp
mov
mov
call
sub
jnp
fidivs
pop
js
scas
insl
and
push
imul
mov
mov
xchg
leave
ljmp
sub
in
xchg
pop
std
jle
mov
aas
jne
test
sbb
adc
ja
add
call
daa
mov
rcr
dec
cmp
push
stc
fisubrl
sub
imul
mov
das
xor
test
xchg
cmp
inc
push
pop
adc
xchg
add
or
mov
movsb
jl
inc
push
scas
add
nop
scas
xor
bound
lcall
mov
test
mov
mov
dec
mov
subl
sbb
sub
xchg
inc
dec
or
or
push
mov
xchg
xchg
int3
mov
out
adc
mov
jl
lds
pop
mov
pop
test
daa
clc
ffreep
cmp
int
lahf
sbb
shll
push
push
lahf
adc
mov
into
enter
shrl
xchg
out
mov
cmc
es
pop
adc
mov
dec
jae
arpl
xor
sub
mov
nop
adc
aaa
loop
and
add
sub
push
roll
or
mov
dec
pushf
dec
push
xchg
js
cltd
jecxz
pop
lret
and
xchg
or
movsb
cmpsb
sbb
dec
lahf
aas
mov
pop
pop
fs
mov
xchg
into
push
ss
call
add
test
mov
push
add
cwtl
mov
pop
pop
xchg
in
ret
stos
imul
pop
inc
xor
xchg
pop
pop
test
mov
mov
sti
jle
mov
xchg
lcall
je
sub
mov
xchg
sub
insl
mov
lret
std
pop
scas
mov
outsl
adc
in
aam
idivb
out
mov
dec
fisttpll
push
or
cld
cltd
mov
mov
dec
dec
add
mov
mov
iret
fs
cmpb
scas
fistps
in
pop
pop
dec
scas
adc
or
inc
inc
stos
jecxz
stc
xchg
mov
or
dec
dec
xor
daa
scas
ror
mov
sbb
mov
leave
repz
jmp
mov
sbb
mov
ljmp
arpl
pop
push
lods
sbb
or
xor
shlb
dec
jae
scas
inc
mov
cmc
mov
daa
mov
test
dec
add
aaa
stc
into
pop
add
loope
and
xlat
xor
sub
pop
xchg
fimull
and
loop
or
adc
loope
push
addb
loopne
cmp
lds
sub
pushf
xor
shr
out
or
int
cmpsb
dec
fdivs
sbb
or
and
mov
fs
sub
pop
mov
out
mov
int3
rcrl
ret
adc
cmp
cmp
scas
dec
dec
flds
movl
imul
daa
mov
fcoml
idivl
enter
xlat
jnp
fimull
lret
jns
jae
inc
pop
sub
cmp
dec
pop
fstl
ljmp
mov
push
lock
dec
cmc
push
push
shl
jge
pop
xor
inc
scas
int3
push
or
inc
mov
cwtl
loopne
imul
add
add
ss
outsl
loopne
lcall
decl
lods
bound
add
sub
dec
mov
jge
js,pn
addr16
int
in
mov
notb
lret
mov
jecxz
inc
fsts
fadds
scas
shl
push
ja
mov
mov
fadds
test
jo
sahf
inc
xlat
jnp
cs
adc
test
stos
push
fwait
imul
sbbb
sbb
adc
fnstenv
lds
sub
cmpsb
push
ss
insl
adc
xor
cwtl
mov
jo
dec
mov
inc
pushf
mov
mov
lret
test
mov
insl
or
shll
mov
test
cmp
xor
mov
addr16
dec
stc
das
xor
insl
mov
bound
jg
dec
pop
sahf
and
push
add
cmc
in
sbb
cltd
mov
sbb
cmp
dec
mov
mov
out
rorb
push
iret
pop
or
dec
ret
or
dec
jle
inc
jb
mov
adc
out
enter
inc
daa
mov
jp
sbb
clc
mov
mov
les
jb
dec
cs
loopne
sub
pop
sbb
mov
imul
xor
or
fidivrl
hlt
test
aam
fdivrl
aas
popf
mov
xchg
sbb
pop
lret
inc
add
cmp
xchg
mov
fptan
sar
jne
xchg
xor
pop
cld
aam
and
repnz
loopne
prefetcht0
adc
xchg
and
xor
cltd
push
inc
pusha
jo
mov
xchg
frndint
pop
adc
xchg
lock
imulb
add
das
shl
in
cmpsl
cwtl
push
inc
imul
imul
push
and
xchg
les
lret
jnp
inc
arpl
imul
dec
stos
cwtl
ljmp
inc
mov
scas
xor
daa
filds
sarb
cmpsl
jmp
pop
xchg
xchg
lahf
mov
dec
push
adcl
ss
pushf
aas
push
insl
test
sbb
bswap
pop
ja
out
sti
dec
adc
out
rclb
mov
xchg
nop
call
sbb
sarl
inc
jg
mov
mov
loop
add
cmp
sbb
sbb
mov
loop
loop
vpsubusw
ljmp
mov
mov
inc
lahf
lods
lret
fucomi
mov
fnstenv
cli
push
imul
test
repz
push
mov
iret
xor
repz
shrb
cmp
sub
in
jnp
std
aaa
jp
dec
jecxz
push
enter
lods
ret
roll
push
push
loopne
arpl
cmp
xchg
test
or
push
xchg
scas
in
push
push
push
decl
lds
push
push
inc
ficoms
mov
cmp
divl
mov
mov
lahf
leave
inc
push
bound
loopne
mov
mov
js
cmp
xchg
nop
test
out
or
pop
fisubrl
add
lods
sbb
xchg
jmp
nop
rol
mov
stc
xor
sbb
sub
sbb
pop
cmp
sbb
pop
mov
or
adc
xchg
adc
mov
cwtl
push
sub
mov
pminsw
lods
aaa
sbbl
jae
push
mov
fdivl
dec
add
es
adc
cmpsl
xor
lcall
sub
and
inc
or
testl
xor
lea
adc
jb
les
lods
xchg
out
xchg
scas
addr16
add
push
inc
out
adc
test
dec
ss
gs
in
and
inc
mov
jae
nop
fiaddl
xor
add
sub
cltd
cmp
xchg
psrlw
xor
fdivrl
fwait
xchg
movsb
push
dec
dec
fcoms
inc
pusha
test
gs
jbe
mov
ret
test
cmp
mov
jb
std
imul
add
and
dec
jp
xor
xor
pop
arpl
ror
push
call
fcoms
mov
into
add
adc
les
je
mov
scas
lock
fwait
cmp
jnp
dec
in
insl
lea
std
pop
lahf
cmc
insl
mov
add
cmp
stos
jo
and
dec
push
mov
outsl
sub
js
dec
jb
push
out
out
aaa
push
push
stos
aaa
sbb
inc
nop
fcomps
popa
pop
xchg
lret
xchg
or
cld
std
inc
fs
mov
push
sub
in
fcoms
rcll
std
sarb
jmp
pop
mov
sahf
mov
jle
stos
dec
movsb
dec
xchg
jl
enter
scas
mov
jbe
ret
sub
flds
pop
xor
xor
loope
jbe
cmp
call
rcrb
into
xor
jl
test
sbb
add
movsl
push
xor
inc
mov
imul
and
ds
mov
push
lret
cmp
outsb
cmp
mov
popf
cmp
testb
sahf
inc
mov
psllw
cmpl
das
ljmp
icebp
pop
jae
jb
negl
int3
mull
test
xor
xor
xchg
xor
loop
lret
xor
fisubs
ret
cmpb
mov
push
mov
in
dec
jae
and
jle
fcmovb
dec
ds
sub
xor
inc
mov
inc
cmp
pop
sbbb
xchg
test
sbb
leave
out
jbe
inc
mov
push
pop
fwait
in
hlt
aaa
repz
and
xorb
aaa
xor
xlat
push
shll
pop
sbb
mov
add
or
inc
rorl
repz
sbb
cmp
scas
mov
stos
cmp
push
clc
adc
or
jbe
ret
fildl
js
iret
fldl
xor
push
fs
lock
pop
lcall
mov
inc
testb
sub
sarb
cmp
xchg
out
fidivrs
dec
loope
inc
mov
loopne
jns
mov
push
leave
jns
pop
dec
cmpsb
add
test
jne
sbb
push
xor
mov
addl
or
dec
sub
cmc
xchg
xchg
int
enter
dec
repz
insl
lret
scas
or
stos
fs
mov
js
dec
fistl
arpl
mov
push
push
dec
fcomi
nop
push
sbb
xor
cltd
repnz
leave
xchg
lret
push
ss
stc
jno
fwait
xchg
jg
push
ss
cltd
imul
push
fld
dec
cltd
gs
jg
fidivrs
xchg
and
jmp
insl
mov
loopne
jb
out
push
shrb
ds
or
xor
mov
cmc
fdiv
push
xor
adc
inc
ficompl
ljmp
pop
addl
push
jp
add
mov
fsubrl
adc
scas
out
rcl
add
cmp
inc
and
or
push
inc
arpl
sbb
xchg
pop
cltd
lahf
ret
int
nop
stos
fmull
shl
lea
adc
insb
cmp
or
ljmp
push
stc
add
push
mov
pop
data16
and
mov
das
xchg
pop
jle
xor
sarb
push
sub
xor
loope
imul
ljmp
pop
xor
js
xlat
mov
or
jno
psubd
imul
sbb
inc
xlat
loope
lcall
shlb
icebp
jo
jns,pt
push
adc
or
pop
nop
jecxz
addr16
es
adc
cmpsb
fmull
subb
adc
ret
ds
sub
bnd
jae
mov
in
push
push
pop
pop
xchg
dec
ds
push
aad
ds
cmp
fimull
jns
insl
into
xor
lock
inc
lock
jb
bnd
out
test
jae
sub
jno
je
es
into
jbe
movsb
aam
sub
imul
adc
lods
into
or
fisttps
mov
cmp
js
inc
nop
xchg
mov
xor
popa
stos
incb
pusha
das
movsb
push
dec
test
stos
fwait
ss
lcall
jb
aaa
out
sub
hlt
sub
imull
inc
sub
cli
cmp
push
out
and
dec
xchg
xchg
push
out
sti
mov
jae
push
lods
jns
push
adc
shlb
pop
or
cwtl
addr16
aam
fidivs
mov
call
xchg
mov
lods
mov
dec
out
fmuls
js
and
insl
xchg
jo
insb
fidivrs
bound
mov
scas
sti
or
cmpsl
sbb
push
mov
pop
mov
cmp
adc
cmp
std
ret
fmuls
push
adc
inc
mov
mov
aam
add
in
add
or
push
ror
scas
sub
sbb
pop
js
jns
fldcw
cmpsb
mov
pusha
jg
ss
adc
cmpsb
in
pop
push
aad
mov
addb
add
ja
dec
push
out
in
jle
push
sbb
inc
leave
cmc
mov
popa
mov
push
dec
xchg
fwait
push
mov
jo
push
adc
idivl
mov
push
inc
pusha
repnz
push
fcmovnb
or
out
pop
sub
clc
xor
jae
out
cmp
jle
lahf
mov
mov
repnz
cmc
adc
scas
jmp
xchg
imulb
decb
fstpl
add
and
mov
xchg
data16
das
push
mov
xchg
psraw
mov
scas
jae
fstps
inc
pop
flds
xor
cmpsl
sub
loope
fwait
jae
orl
mov
clc
xor
dec
test
cs
mov
mov
ja
mov
aas
in
inc
ficompl
or
add
js
or
or
imul
ret
sti
xor
outsb
sbb
dec
sub
ret
nop
fwait
cli
sti
jp
dec
push
mov
push
inc
aaa
sbb
fs
push
out
lock
in
mov
out
adc
add
fcoml
xchg
add
dec
lcall
adc
adc
mov
mov
cld
pop
shlb
sti
lods
jg
mov
nop
push
sbb
aam
xchg
arpl
adc
imul
mov
test
cmp
notl
lods
mov
fldt
mov
imul
cmp
pop
or
cmp
mov
test
pop
xor
xor
jg
push
insb
add
sbb
stos
insl
sbb
cmpsb
rorl
sbb
add
sarb
mov
xor
stc
or
inc
ja
pop
add
mov
jge
inc
xor
xchg
shlb
mov
push
int
sbb
int3
mov
pop
insl
jbe
lock
push
jle
cmp
es
jmp
mov
aad
mov
push
or
les
lret
xchg
pushf
pop
scas
ds
mov
je
test
push
mov
repnz
or
fs
cmp
lret
xchg
out
sbb
add
add
adc
cmpsl
int3
sub
lods
sub
push
mov
hlt
loop
dec
inc
jo
xlat
jae
cltd
sbb
repz
sbb
lret
lahf
adc
call
or
mov
ss
fldln2
adc
jle
xlat
loop
inc
out
out
jecxz
std
xchg
fisubrs
xor
in
arpl
mov
mov
movsb
fs
sub
xchg
jmp
xor
ljmp
and
call
jmp
cld
jle
push
jnp
sub
mulb
mov
dec
cmp
push
mov
cltd
les
into
jno
mov
push
dec
xchg
popf
loope
mov
and
lcall
fwait
out
je
jmp
inc
outsb
sbb
mov
scas
cli
push
ds
jecxz
mov
mov
add
lods
aas
hlt
fmuls
xchg
lock
in
addb
mov
das
fstpl
pushf
jae
xchg
ficoml
mov
xor
out
add
stos
iret
xchg
repnz
std
int3
popf
fs
add
xchg
leave
adc
int3
push
pop
pop
dec
repnz
jae
mov
mov
inc
pop
push
scas
pop
out
add
inc
js
loopne
push
test
and
mov
mov
enter
or
ss
push
mov
pop
xor
lcall
mov
mov
push
enter
arpl
push
and
clc
cwtl
cmpsl
lods
std
and
loope
sbb
sbb
movsl
mov
mov
lcall
je
ret
hlt
xchg
push
pop
iret
aam
inc
mov
mov
cmp
sbb
push
aas
cmp
sbb
lcall
andb
mov
movl
jae
jo
std
loopne
mov
cmp
sub
mov
add
pop
push
or
es
stc
adc
adc
outsl
mov
jns
or
and
loopne
jmp
add
sbb
sub
imul
cmp
cwtl
inc
stc
jl
lret
cltd
dec
mov
mov
icebp
dec
insb
leave
cli
cli
out
jmp
sbb
mov
mov
sar
lods
xchg
cmp
mov
data16
xchg
xchg
imul
inc
mov
push
and
add
testb
and
ljmp
sub
pushf
xor
testb
popf
sbb
push
sarb
jle
filds
movsl
xlat
jl
jbe
insl
rcrb
repz
dec
cmpl
jae
icebp
scas
push
in
xorl
dec
insl
xor
cwtl
es
out
mov
out
sbb
mov
sbb
adc
xor
scas
or
shlb
xchg
push
and
insl
cmp
push
out
test
mov
sub
cmpsb
inc
mov
sub
push
push
loopne
mov
adc
push
out
jbe
sbb
mov
fists
leave
sbb
pop
pushf
dec
inc
loop
ds
push
cmp
adc
out
pop
adc
fisubs
clc
xchg
sub
jno
cmp
inc
int3
mov
pop
and
mov
sbb
cmp
sub
mov
daa
inc
pop
das
pop
xchg
jg
idivb
jb
outsl
push
xchg
xor
pop
sti
imul
sub
xchg
insb
fcoml
xor
sbb
push
dec
sub
sbb
sbb
push
cmp
mov
int
adc
sbb
sti
adc
les
imul
pop
cmpsb
enter
cmp
mov
lahf
pushf
mov
mov
sub
cmp
imul
inc
push
leave
jbe
es
shlb
jo
and
mov
aad
or
or
sub
inc
lret
enter
cmp
push
or
mov
aas
mov
add
sbb
xor
xor
jae
jl
sub
dec
outsb
aaa
mulb
jb
nop
lahf
in
and
test
adc
rcrb
dec
je
mov
add
incb
bound
jae
mov
gs
icebp
cmp
fs
hlt
mov
pop
pop
lahf
loope
mov
push
mov
out
sub
add
lahf
fstpt
or
jl
outsb
push
dec
xor
rcl
fcompl
mov
mov
xor
jl
fmuls
pop
mov
mov
or
add
lret
fiadds
jg
mov
mov
xchg
sub
movsl
cltd
fbstp
jp
icebp
sbb
inc
push
outsl
or
sahf
idiv
leave
stc
cmpb
mov
ja
xor
sub
or
decb
xor
decl
dec
jnp
out
dec
dec
push
adc
mov
jl
insl
cmp
mov
into
push
cmp
imull
xor
jle
test
jb
mov
cmp
or
add
add
inc
out
out
adc
xlat
pushf
mov
repz
jmp
mull
inc
xor
and
jb
dec
dec
inc
stc
popa
cmp
jmp
sti
mov
lret
rorl
sarb
test
mov
cltd
adcl
push
and
xor
fistpll
andl
jl
mov
sbb
movsl
or
shrl
xchg
jno
rorb
jb
es
in
sub
lock
shlb
loopne
sahf
or
pop
xchg
sbb
sub
rclb
dec
mov
jbe
xor
push
cmp
xor
les
pop
ficoms
cmp
push
cld
fisubs
call
lock
push
cmp
mov
push
mov
push
mov
mov
popf
add
jno
outsl
sub
pop
ljmp
lret
pop
test
loope
sbb
add
jae
test
lods
bnd
shrb
test
lock
dec
push
negb
add
lcall
push
cmpsl
push
adc
divl
push
add
jne
arpl
or
pop
push
mov
ja
daa
lods
jge
pop
jl
addl
fwait
mov
adc
rep
or
jp
insl
ljmp
sub
aaa
dec
loope
add
punpcklwd
ss
mov
xchg
xchg
mov
cmp
xchg
movsl
int
call
add
sub
lahf
xchg
sbb
lods
scas
adc
imul
and
sarb
shl
push
lock
add
lods
inc
into
rclb
mov
testb
ja
jb
push
push
enter
lret
out
inc
aad
lock
mov
or
fstpl
push
fcompl
imul
daa
cmp
push
add
adc
push
arpl
pop
sub
mov
ja
adc
add
push
and
xchg
jp
out
mov
insb
jo
in
int3
xor
testl
pop
pop
mov
mov
and
negb
and
rorl
shlb
mov
fidivl
dec
jp
xor
xor
or
add
mov
mov
pop
cmpsb
jb
nop
fcmove
and
push
stos
dec
inc
inc
cmp
iret
push
xor
mov
mov
and
fmull
mov
xorl
jae
inc
sbbb
xorl
cmpsb
bound
scas
stos
outsb
lock
push
sbb
pop
lea
pop
and
outsl
cmp
pop
or
jecxz
imul
ja
mov
lahf
xor
xorl
repz
lods
add
xor
mov
xor
add
aas
inc
les
push
sbb
aam
inc
mov
dec
push
dec
add
cmp
add
push
repnz
fldl
push
xchg
push
roll
jae
inc
rorb
mov
sub
jbe
add
mov
popf
push
aam
adc
dec
add
mov
push
push
xor
negb
add
sub
in
sbb
shll
adc
je
mov
stos
sahf
push
jge
stc
call
iret
pop
fnstcw
pop
insb
or
or
inc
pop
bound
stc
lret
mov
stos
push
xor
mov
xchg
aad
test
mov
sub
aas
mov
scas
jp
sbb
pop
mov
cmp
std
push
iret
add
repnz
stos
divl
cmp
and
nop
xor
ret
hlt
xlat
dec
cmp
cmp
add
mov
cwtl
mov
fcompl
aas
adcl
es
cmpsb
jmp
add
stos
inc
sbb
mov
pop
inc
and
fisubrl
test
jmp
xor
xor
jbe
imulb
imul
mov
lret
es
test
aaa
sub
repz
mov
or
jp
lods
lds
out
lcall
rcrb
lcall
inc
testl
fildl
dec
and
dec
pop
stos
repz
mov
or
add
hlt
lods
pop
or
sbb
jge
stc
sub
stos
inc
adc
pusha
add
adcl
adc
cmp
or
xchg
shll
pop
pop
and
scas
fsub
mov
push
sub
mov
sbb
dec
mov
push
ret
sbb
mov
popf
outsl
sub
stos
jmp
xchg
or
aam
push
mov
mov
insl
push
imul
xchg
mov
aaa
mov
mov
or
clc
mov
test
pushf
loopne
lds
and
mov
mov
cs
mov
mulb
mov
outsl
mov
jne
pcmpgtb
loope
add
sub
xchg
sbbb
push
and
stos
inc
add
adc
sti
mov
push
addl
jb
push
insb
dec
push
push
stos
push
insl
test
mov
insb
cmpsl
sbb
adc
lods
fidivl
loopne
pop
or
and
xchg
cmp
arpl
mov
mov
into
int
adc
icebp
rol
xor
sbb
xor
mov
in
enter
add
jecxz
jmp
daa
pop
ljmp
stos
jns
lret
mov
out
mov
repnz
xchg
ficoms
xor
adc
mov
mov
enter
sbb
or
push
and
int3
lods
popw
jbe
xchg
andl
push
pop
mov
push
dec
mov
mov
cmp
xor
cmp
cld
jae
xchg
ljmp
imul
cltd
xor
dec
xchg
dec
mov
push
dec
arpl
push
cmp
dec
or
fnstsw
mov
std
movq
fnstcw
insl
or
and
jge
incb
lahf
stos
jle
bound
leave
test
rclb
push
out
movsb
lods
lret
test
rcr
jb
loope
fisubrs
iret
cmp
popa
in
jnp
jmp
sbb
es
jns
in
loope
push
movsl
out
pop
sbb
and
push
out
ffreep
aaa
mov
cmp
cmp
pop
into
test
lock
mov
or
fs
inc
hlt
fldenv
outsl
mov
call
imul
rolb
ficoms
into
mov
jmp
lahf
mov
pop
sub
mov
pop
mov
mov
mov
or
inc
mov
mov
pop
add
push
dec
ljmpw
sbb
lahf
movsl
lea
ret
xchg
lods
repz
sub
push
push
shlb
or
mov
ds
sub
jae
xchg
sarb
xchg
in
in
jl
dec
or
cmc
imul
ss
sbb
xor
test
xor
push
fmuls
xor
lcall
aam
pop
scas
scas
out
dec
ljmp
sbb
xchg
push
ljmp
cmp
mov
mov
fiadds
mov
shrb
sbb
pop
orb
test
and
mov
out
lcall
pushf
inc
jmp
add
or
xchg
aam
ret
push
sbb
rcll
push
icebp
sub
loope
aam
addb
mov
mov
lret
rcrb
ljmp
cmc
adc
add
lods
sub
xchg
inc
roll
lahf
lock
pop
xchg
dec
arpl
mov
dec
xchg
aas
das
std
inc
fcoms
lea
negl
adc
cmp
jg
icebp
test
sbb
mov
outsl
dec
testb
in
adcb
cli
fmuls
fwait
and
div
lods
and
pop
cmpsl
not
add
jecxz
adc
push
into
notb
cmpsl
movsb
mov
xchg
loop
adc
pop
push
cmp
aaa
pop
sub
loopne
in
cld
je
mov
dec
xor
jno
push
movsl
int3
sub
add
das
jl
lahf
std
arpl
jmp
dec
iret
fcmovbe
cmp
fcoml
mov
fldl2e
jg
lret
call
xchg
xchg
and
xor
cmp
cmp
sbb
popa
out
mov
cmp
adc
add
mov
inc
xchg
ror
jo
jo
aas
pushl
push
es
data16
scas
push
push
lret
es
xchg
pop
cld
mull
mov
scas
scas
in
stc
jmp
cmp
ljmp
adc
xchg
arpl
pop
adc
mov
insb
test
aaa
fwait
xchg
ljmp
imul
push
cmpb
pop
or
and
lea
dec
xchg
pop
dec
mov
push
js
push
inc
cmp
fwait
lods
and
sub
rcrb
dec
or
repnz
adc
xchg
mov
nop
mov
fistl
sti
jmp
dec
or
mov
push
pop
cs
add
add
lods
sub
pop
push
cmp
hlt
add
in
jecxz
testb
add
in
hlt
push
es
cmp
mov
loope
rcrb
out
insl
pop
add
popf
add
push
mov
xchg
mov
inc
pop
mov
sbb
lods
int
xchg
jl
mov
jle
call
push
fisubrs
fsubp
call
xchg
sbb
testb
inc
cmc
data16
int3
je
jp
cld
ret
inc
cmp
outsb
aas
test
popf
push
add
jbe
or
repnz
daa
decl
aas
daa
scas
cwtl
add
lods
incb
mov
aam
or
or
outsl
cwtl
pop
shrl
push
xchg
push
arpl
repnz
in
and
scas
adc
adc
push
sbbl
xlat
out
cmpsb
ds
out
push
sub
das
stos
dec
push
xchg
mov
and
adc
imul
jae
xchg
push
pop
mov
fadd
imul
in
jl
xlat
lret
adc
orb
fiadds
add
in
mov
daa
mov
mov
mov
dec
clc
and
xchg
in
cld
cwtl
lahf
adc
push
jae
jle
in
test
or
dec
insl
imul
popa
and
js
js
sahf
sbb
fistpl
pop
or
and
aaa
hlt
sbb
jge
xchg
fdivs
mov
jge
testb
stc
xor
cmp
jnp
fsubrl
and
pop
cmpsb
and
inc
and
xlat
daa
push
inc
cld
inc
call
xchg
fdivl
cmp
das
les
add
and
jae
cli
or
lods
jmp
pop
add
mov
nop
push
nop
movsl
andl
loop
push
cs
stos
sub
stc
test
rcr
lock
fsubl
pop
daa
int
dec
inc
xchg
cmp
mov
icebp
movsl
mov
sub
add
ffree
adc
dec
neg
shrb
mov
adc
mov
ds
cltd
shrl
fs
mov
fidivs
add
sub
jb
adc
frstor
iret
jo
imul
lds
int3
mov
mov
rcll
stos
into
pop
add
and
xlat
stos
sbb
xor
adc
sbb
int
lods
dec
dec
std
cmp
enter
mov
adc
bound
and
pop
sub
cmpsb
and
dec
adc
int3
xor
inc
pmovmskb
stos
ficoml
mov
mov
dec
sub
push
xor
repz
repnz
sbbl
das
add
mov
js
pop
lret
cmp
in
sub
addr16
push
lret
out
pop
mov
sub
push
sub
cmp
pusha
pop
mov
repz
iret
ret
out
jno
aaa
cmp
inc
loope
push
shll
cld
or
es
jnp
xchg
lock
mov
les
out
enter
mov
popf
push
stos
adc
cmpl
cmpsb
outsb
adc
das
push
imul
jge
outsl
sbb
push
inc
ljmp
and
add
popa
ja
icebp
mov
jbe
inc
rolb
imul
xlat
nop
inc
sbb
outsb
repz
mov
cmc
xchg
cmpsl
jecxz
xchg
lea
add
dec
or
cmp
pop
ljmp
aaa
scas
bound
js
dec
jmp
dec
ja
sbb
jno
and
xlat
or
fwait
das
aad
fldenv
cmp
pop
push
inc
push
test
leave
xchg
shlb
xchg
into
and
movsbl
cwtl
jle
sbb
pop
inc
xlat
out
call
out
mov
stos
movsb
insb
in
sbb
pushf
xchg
aad
nop
insb
inc
jg
cmp
insl
call
xor
les
jo
test
pop
fcmovnbe
xchg
adc
outsl
clc
cmp
push
js
mov
inc
pushf
push
test
mov
add
call
pushf
adc
cmp
fcomp
icebp
into
gs
test
imul
jmp
adc
pop
dec
jb
out
mov
xlat
loopne
sub
test
mov
addr16
cmp
dec
iret
jb
push
mov
sub
mov
negb
dec
add
cmpsb
cmpsb
sbbb
cmp
sbb
ds
adc
add
mov
test
clc
jge
jge
add
out
sbb
lock
add
xchg
pop
rcll
inc
add
imul
cmc
jl
fldcw
mov
xlat
pusha
ret
cmp
in
jge
subb
in
add
and
jno
in
iret
fcoms
pop
mov
in
cwtl
cmc
hlt
push
cmpsl
push
xchg
cmc
mov
inc
movsl
jns
insb
lock
icebp
push
in
mov
push
test
jb
pop
aas
push
jle
ss
mov
sbb
into
adcb
lcall
cmp
dec
xchg
mov
movsb
cmpl
lcall
jns
mov
jae
add
cmp
mov
or
aad
movsl
stos
lock
jle
popf
incl
or
test
lahf
xor
in
push
adc
icebp
test
jmp
incb
push
xor
push
repz
in
iret
aam
andl
cmp
icebp
xlat
and
cmp
inc
fs
pop
inc
outsb
dec
ss
pop
sub
xor
test
mov
pop
lods
bound
repnz
ds
push
les
adc
faddl
pusha
inc
in
ror
lods
outsb
divb
das
sti
add
ljmp
fs
or
mov
xor
aaa
push
bound
pop
xor
or
data16
out
jecxz
adc
in
mov
stos
cmc
mov
sub
pop
lods
jb
add
stos
fidivl
into
add
lods
loope
xchg
fnstcw
sar
adc
lock
inc
inc
lock
aad
daa
add
and
aam
out
and
shlb
stos
pop
mov
lret
mov
and
push
pusha
xchg
stos
adc
popf
mov
stc
mov
es
sarb
jno
insb
and
es
test
in
daa
xlat
inc
jg
jg
xchg
aaa
je
lods
pop
adcl
pop
sbb
nop
or
xor
pop
xor
test
fimuls
in
xor
orb
ds
mov
test
stc
mov
pop
xor
cmpsl
das
pushf
adc
xchg
out
cwtl
in
xchg
mov
xchg
mov
adc
push
sbb
jo
xchg
push
jb
outsl
jecxz
bound
adc
shrl
enter
mov
xor
mov
loopne
outsb
cmp
lret
fstpt
mov
ficoml
sub
sub
adc
aas
push
push
add
test
xchg
sahf
vpshld
pop
insl
outsl
and
mov
mov
inc
and
pop
dec
inc
fwait
xorb
loope
xchg
sub
shlb
and
ficomps
push
cli
test
and
jg
hlt
mov
mov
sub
mov
pop
add
out
adc
mov
xor
add
sub
rcl
xchg
jmp
mov
fildl
or
and
outsl
aas
push
xchg
jmp
sub
add
insl
mov
add
pop
pop
pop
dec
push
pop
leave
arpl
out
ss
adc
insb
or
in
lock
ljmp
xchg
jbe
movsb
sbb
das
lahf
out
lock
ss
imulb
pop
pop
mov
dec
clc
addr16
clc
cmpxchg
out
int3
or
aad
out
mov
cld
or
add
in
stc
lock
mov
test
ret
int3
dec
insb
dec
outsl
lods
adc
lods
fsts
insl
inc
add
push
xchg
into
movsl
sub
aaa
out
sbb
fnsave
dec
mov
jmp
push
mov
cmp
mov
movsl
mov
pushf
sub
test
adc
int
push
cmc
cmp
aas
enter
test
dec
add
les
sbb
gs
xacquire
in
mov
in
sbb
into
pop
dec
pop
inc
jo
xor
fdivs
in
in
cmc
mov
arpl
fdivrs
jge
xchg
pusha
cwtl
js
in
aam
cmp
cmp
dec
jecxz
fs
jns
cmp
dec
mov
push
xchg
push
pop
inc
std
sbb
roll
aam
mov
fcmovnu
mov
push
pop
inc
xor
mov
cmp
jp
jnp
push
or
sbb
mov
pusha
pop
mov
loop
sub
adc
pop
aad
xor
cli
fstps
scas
cmc
dec
and
stos
popf
fsubl
clc
jecxz
add
out
sub
cmp
mov
mov
scas
aam
inc
inc
js
xor
cltd
xchg
dec
mov
popf
enter
or
sbb
fdivl
int3
lahf
jbe
sub
adc
movsl
push
call
aam
adc
unpckhps
sub
iret
jne
adcb
add
pop
mov
mov
mull
push
es
and
and
pop
mov
outsl
push
in
outsl
cmc
mov
in
mov
mov
push
mov
push
test
ljmp
mov
cmpl
jmp
jp
leave
and
or
xchg
or
add
es
loope
imul
xor
xchg
or
iret
or
imul
inc
push
and
sub
xchg
js
call
add
mov
inc
pop
ret
test
lock
sbb
es
gs
sbb
inc
imul
andb
jle
out
and
xchg
adc
int3
add
add
cltd
add
popf
insb
cmp
push
mov
mov
cltd
cmpsb
mov
fcmovnbe
arpl
cli
repnz
andb
inc
inc
aaa
dec
jae
popa
in
xor
stc
je
or
mov
lahf
rorl
cwtl
imul
xor
push
push
ret
lcall
shrl
dec
or
ss
pop
xchg
repnz
push
nopl
adc
lock
fs
and
cwtl
pop
xchg
cli
fmul
movsl
mov
in
mov
popf
xchg
insb
xchg
sti
iret
xchg
je
or
cmpsb
cmp
popf
daa
dec
mov
shr
cltd
sbb
out
inc
fs
repz
jo
push
fisttpll
or
stc
pop
notb
inc
jno
pop
lock
js
aad
mov
sbb
adc
push
ljmp
add
cli
ljmp
movsl
jnp
mov
cmpsb
jg
rolb
mov
sub
cmpsb
jnp
in
clc
mov
cmp
aam
adc
xchg
sub
dec
cmp
not
push
fmull
mov
mov
cltd
or
jns
in
testl
pop
xchg
adc
loope
sub
sub
cmp
mov
aam
fidivl
cmp
les
movsb
mov
ja
xchg
or
stos
insl
in
xor
lods
push
out
xchg
hlt
push
cmpsl
cs
push
and
faddl
scas
mov
dec
mov
cwtl
and
fwait
popf
lock
scas
arpl
or
in
sub
rep
push
or
add
or
xchg
push
jecxz
sub
mov
pop
call
xorl
jg
test
mov
mov
xor
ljmp
mov
cmp
cltd
andb
nop
mov
sbb
mov
lea
jecxz
push
jmp
cltd
movsb
loopne
cli
and
xchg
rorb
dec
icebp
dec
push
in
in
fisttpl
out
mov
push
push
test
mov
arpl
test
mov
push
lret
xchg
adc
jge
and
xchg
push
cwtl
and
and
add
ret
shl
aas
jae
push
adc
enter
cmpsl
lock
rorb
movsl
xchg
pop
ss
pop
sub
add
sbb
inc
add
lds
out
add
push
decb
incb
sahf
jg
leave
pushf
and
or
jne
jg
insl
xchg
movsl
jne
cld
stos
sbbl
jp
les
and
sub
ljmp
cmpsl
imul
gs
add
fs
sbb
dec
je
sub
jp
inc
aas
mov
xlat
jge
loop
xlat
cmp
fnsave
dec
push
fwait
sub
or
mov
sbbb
mov
sbb
outsl
outsb
mov
add
sbb
bound
push
scas
mov
xchg
mov
dec
mov
xor
add
das
sub
out
jecxz
jb
jo
bswap
mov
inc
push
cli
or
add
leave
lahf
leave
inc
in
mov
div
pop
mov
mov
xor
outsb
sbb
fs
addr16
in
mov
push
or
xor
cs
push
dec
loope
clc
and
aad
sub
cmp
daa
pop
pop
dec
cli
loopne
sbb
xchg
mov
mov
lea
aam
or
pop
sbb
imul
pop
mov
jbe
dec
sub
sbb
pop
fwait
in
mov
mov
inc
iret
ja
jge
daa
mov
push
mull
addr16
push
movsb
or
jle
orl
rorb
push
cmovl
es
jecxz
movnti
scas
into
add
jae
adc
add
jnp
outsb
cmpsb
lea
lds
hlt
and
xchg
push
rcll
imul
or
jmp
mov
lods
fisubl
ret
mov
mov
sbb
pop
or
push
sti
jnp
pop
mov
pop
imul
mov
mov
aad
jno
negb
sub
cmp
imul
adc
iret
jno
lret
push
xor
scas
repz
cmp
mov
sbb
mov
xchg
adc
int3
mov
arpl
mov
icebp
add
into
xchg
cmp
xchg
clc
inc
pop
fdivrl
dec
mov
fistpl
popf
dec
scas
adc
outsb
repz
sub
pop
fdivr
pop
dec
enter
jecxz
jmp
inc
imul
mov
movsl
push
movsl
push
dec
into
out
rorl
roll
popl
dec
insb
push
cmpsl
xchg
cmp
gs
fdivs
adcb
nop
push
jecxz
pop
enter
stc
sbb
repnz
loopne
out
fstpl
rcrl
jo
pop
sbb
or
add
dec
lret
fdivs
push
push
les
leave
add
push
fld
lahf
out
sti
xchg
rorb
add
push
fwait
xor
loopne
repz
pushf
adc
inc
in
add
add
push
pop
jno
roll
mov
sbb
test
test
test
hlt
push
mov
jmp
call
sti
cmpsb
mov
mov
dec
pop
push
mov
imul
test
rcr
lds
popa
and
ret
nop
rol
arpl
icebp
jae
in
mov
out
and
pushf
ss
shl
addr16
mov
dec
ret
inc
mov
mov
lahf
jnp
pop
cmp
aaa
pop
rcr
out
shrb
cli
test
mov
in
mov
lret
repz
into
mov
jge
push
cmp
dec
sahf
scas
pushf
and
add
dec
popf
psllq
fnsave
lock
adc
adc
int
repz
jne
iret
stos
test
xchg
sti
pop
int
dec
mov
add
xchg
aaa
inc
xor
jae
inc
xchg
jl
push
mov
cmp
push
push
sbb
inc
rcrb
jbe
loope
insl
inc
rclb
roll
cmp
aam
mov
pop
stos
cmp
bound
out
inc
notl
aas
mov
add
cwtl
xchg
push
mov
pop
adc
call
sbb
xlat
pusha
xor
jge
push
or
mov
stos
add
push
add
je
test
adc
add
mov
sbb
mov
fwait
scas
pop
fiadds
sbb
test
popf
pop
xor
ficompl
shrb
dec
xchg
rol
pop
pusha
add
fcmove
adc
cmp
xchg
scas
jne
jmp
dec
xor
repz
inc
sbb
cmp
lret
mov
lods
xor
insl
pop
pushf
cmpsl
out
into
div
movsb
push
and
lods
mov
pop
nop
xchg
in
std
jns
mov
push
cwtl
xchg
insl
decb
mov
ds
and
cmp
aaa
adc
data16
rorl
fnstsw
es
pop
cmpsl
lahf
ret
lcall
arpl
mov
ret
jp
jecxz
jmp
je
mov
push
enter
movsl
push
jno
ret
fidivrs
dec
hlt
in
mul
xchg
push
inc
sbb
push
pop
fcmovnu
push
adc
repnz
in
adc
addl
xchg
push
outsb
xlat
jmp
xlat
pop
data16
and
dec
hlt
addr16
cs
outsb
sub
inc
and
sbb
jg
pop
jb
jl
popa
nop
ds
fldl2e
stos
sub
ja
scas
cltd
push
in
arpl
add
inc
in
pop
mov
cwtl
adc
push
xor
hlt
stc
fbstp
movsl
mov
sahf
iret
loopne
xorl
mov
rcrl
pop
out
enter
and
jns
inc
pop
adc
add
mov
adc
outsl
inc
cmp
xor
adc
xchg
xchg
mov
push
orb
ds
jnp
pop
xchg
push
outsl
sarb
push
or
pop
jne
sub
nop
mov
mov
sub
fisttps
dec
inc
sub
sub
test
shl
lods
call
test
xor
out
in
fiaddl
xchg
rorb
cmpsl
mov
pop
or
xchg
sar
outsb
mov
inc
mulb
jg
mov
dec
adc
push
flds
sub
lods
fcom
lcall
cmpl
jmp
popf
lods
rol
or
or
fstpl
xchg
jno
or
into
insb
test
push
imul
cmc
arpl
stos
rorb
lcall
insl
rcrb
inc
adc
rol
imul
out
and
imul
or
push
ja
loop
lea
mov
jp
push
sbb
push
loop
pop
int3
inc
inc
out
lods
mov
lcall
out
scas
fldl
xchg
mov
push
int3
insb
fistpl
enter
shlb
cs
push
into
cwtl
stos
pop
add
push
or
push
movl
rolb
cmp
nop
inc
ljmp
adc
mov
cwtl
clc
pop
lds
lds
mov
and
sub
scas
adc
std
push
je
icebp
xor
aam
cmp
test
pop
jno
lret
push
subb
imul
fldpi
fcoml
pusha
push
fstpl
push
jb
imul
test
js
mov
xor
xchg
dec
movsb
jne
add
subb
addb
push
adc
sbb
mov
pop
xor
in
sbb
aam
ljmp
ds
mov
fistl
cmpsb
pop
mov
or
jnp
adc
xor
scas
cs
pusha
mov
fcoms
pop
jmp
dec
mull
fwait
push
je
pop
test
scas
cwtl
lret
pop
sub
jmp
mov
inc
cmp
ror
xor
mov
pop
sbb
popf
test
and
nop
shl
xchg
mov
cs
and
lods
loopne
cltd
add
sub
inc
or
inc
jbe
jle
jl
jae
mov
dec
mov
fstps
shl
inc
push
movsb
shl
outsl
pop
negl
repnz
dec
and
movb
or
add
mov
lret
pushf
std
arpl
fs
add
in
or
mov
inc
mov
aam
leave
cmp
xor
fistpll
addr16
xchg
sbb
mov
ficoml
jne
sahf
mov
shl
lcall
add
movsb
ret
outsl
aas
cmpsb
xchg
sub
pop
je
cmp
pop
int
and
xor
push
cmp
cltd
push
add
inc
test
ljmp
hlt
and
push
adc
mov
fimuls
mov
xor
ja
sbb
inc
hlt
xor
mov
dec
addb
les
mov
js
mov
cmpsb
gs
fdivr
rorl
imul
push
mov
mov
mov
adc
out
jne
dec
out
ja
add
sbb
data16
mov
test
inc
pop
in
xchg
stos
add
pusha
pop
sub
fldl
add
jns
inc
mov
dec
out
jge
mov
ss
lret
pushf
cld
adc
dec
lods
xchg
sbb
mov
inc
ds
jecxz
xchg
ror
jae
divb
inc
mov
pop
push
xor
jae
push
xlat
sub
mov
and
lods
loope
cmp
and
scas
mov
out
xchg
mov
xchg
mov
les
data16
loope
push
pusha
sub
inc
test
loope
jmp
xor
jbe
xor
insb
int
imul
mov
xchg
fwait
or
push
cmp
jae
and
sahf
mov
push
or
test
repz
add
dec
icebp
outsb
sub
cld
add
jg
xchg
fldcw
jbe
fcompl
jp
lcall
movsl
out
addr16
mov
jmp
add
ret
jnp
adc
dec
inc
xor
fwait
cmp
mov
push
es
xchg
clc
sbb
dec
mov
daa
fnsave
or
xchg
push
cmpsb
shll
jmp
test
xchg
or
sbb
dec
in
and
jnp
ret
jecxz
jbe
popa
mov
leave
aad
dec
mov
insl
loopne
fstpl
arpl
sub
mov
into
cmp
mov
jl
mov
pop
or
fbld
icebp
cmovns
jb
push
leave
cwtl
mov
pushf
fwait
aas
bound
aaa
add
cltd
or
dec
jae
push
add
scas
mov
mov
test
test
orl
xchg
mov
andb
lds
mov
les
mov
repnz
and
fisubrl
pop
push
leave
bound
fistl
or
test
ret
xchg
cmp
pushf
hlt
or
xchg
and
outsb
dec
adc
pop
mov
xchg
in
lods
inc
aam
sbb
mov
js
dec
sbb
or
shlb
out
pop
cmp
xlat
sbb
xchg
cld
or
in
jne
aaa
outsl
daa
fs
ja
xchg
insl
out
repnz
loopne
push
inc
mov
mov
sub
and
pop
nop
in
fs
das
incb
inc
jne
mov
xchg
lcall
push
sub
push
aam
lahf
sub
xor
setns
insb
sub
adc
pusha
cs
fs
mov
or
and
jno
out
bnd
cmp
mov
sub
and
dec
ror
xor
sbb
stos
scas
push
jb
rcrl
push
in
cwtl
mov
sub
in
in
pushf
xor
inc
xor
mov
pop
add
sub
add
or
cmp
jecxz
adc
ds
cltd
pushf
push
mov
xchg
mov
cmp
int
fisttpl
or
inc
mov
sub
xor
je
inc
xchg
lcall
pop
and
pop
jb
mov
adc
in
nop
sub
or
mov
add
jge
add
pop
clc
fisttpll
test
sbb
push
pop
fcmovne
insl
push
add
movsb
xchg
js
cmp
push
xor
sbb
mov
push
pop
push
dec
outsl
daa
lcall
jns
mov
lock
xchg
roll
imul
les
and
add
cwtl
out
xor
pop
mov
jge
mov
js
fwait
mov
scas
and
ja
inc
imul
inc
mov
mov
pop
loope
xchg
scas
xlat
adc
sbb
test
repz
das
pop
std
mov
push
xchg
iret
cmp
push
cli
jno
lahf
xor
in
sub
ret
movsl
arpl
cmp
and
sahf
insb
push
sub
push
insl
hlt
scas
add
sarb
adc
out
add
mov
sub
outsb
lahf
pop
fwait
mov
add
fldt
cmp
inc
lahf
jp
fistpll
mov
and
adc
imull
xor
out
inc
cmpsl
and
adc
cmovbe
cmp
mov
sub
dec
repnz
stos
outsl
jge
imul
add
adc
gs
shl
add
popf
popf
pop
movsl
je
jae
lret
mov
inc
in
movsb
out
arpl
pop
xchg
cld
jmp
mov
mov
out
sbb
adc
test
pop
cmp
xor
add
lret
inc
mov
std
clc
test
imul
outsl
mov
loope
fiaddl
jb
sbb
std
out
arpl
mov
shll
mov
push
repz
mov
jge
mov
jp
cltd
insb
dec
les
jnp
shrb
xlat
xchg
cmp
shlw
lcall
imul
fistpl
ss
xchg
inc
push
ds
jle
add
std
adc
pop
in
call
nop
out
icebp
mov
out
push
cld
fcomi
push
or
sbb
ret
jle
inc
cmp
xchg
aad
jmp
lret
push
xor
push
scas
daa
mov
fcompl
lret
cltd
mov
scas
jnp
lret
ds
dec
out
adcl
repnz
push
test
adc
xorl
push
jns
fcmovnu
nop
insb
hlt
sbb
mov
xor
mov
loope
add
jns
seta
fwait
test
jle
jne
lds
inc
jle
lods
cmp
or
cmp
into
out
sub
push
jg
or
call
add
loope
dec
repz
push
jp
sbb
fidivrs
adc
mov
rolb
push
inc
ds
add
bound
faddl
sbb
jns
pop
jp
pop
jno
scas
into
out
sti
jo
inc
insb
cli
jg
lret
push
lods
aam
call
scas
add
sbb
mov
roll
mov
inc
cmpsb
enter
test
cwtl
rorl
mov
xchg
fimull
fnstsw
push
push
cmp
xlat
rcll
push
xor
imul
popf
xlat
xor
jle
pop
dec
cmpl
bound
clc
outsb
fabs
jae
add
push
lcall
mov
push
sub
jmp
cltd
push
jbe
mov
shlb
dec
bound
loopne
and
push
mov
mov
adc
xchg
test
or
imul
in
test
cmp
das
push
mov
sub
mov
data16
xchg
adcb
push
or
mov
mov
mov
push
xchg
cmp
or
movsl
add
call
js
xor
jns
movsb
subl
sbb
mov
arpl
and
mov
jb
inc
push
or
rcll
int
in
lods
xor
movsb
adc
test
inc
adc
call
aaa
sub
cli
in
sti
aad
pop
inc
adc
rolb
mov
repz
imul
shr
adc
rcrb
add
lea
dec
dec
lcall
dec
push
jae
add
lods
imull
bound
lds
mov
push
data16
mov
fdivp
ljmp
pushf
jle
xchg
or
sbb
add
xchg
mov
cvtpi2ps
lcall
out
stos
in
inc
std
sbb
cmc
mov
xor
cmp
rorl
jp
mov
std
fcmovu
xor
faddl
push
mull
std
mov
push
or
popa
dec
xchg
mov
sub
mov
lahf
xlat
popa
movntq
lahf
aam
cmp
es
push
and
data16
inc
jle
lock
mov
lock
stos
inc
and
test
pop
add
lret
leave
mov
mov
pusha
js,pt
xor
repnz
mov
xchg
push
aas
popa
ffreep
push
in
out
cs
fcomip
dec
sbb
out
gs
push
into
mov
in
daa
or
rcrb
out
daa
testl
movsb
or
in
lds
mov
out
cmp
jmp
adc
jp
jnp
cmc
dec
int3
or
gs
mov
popl
cmc
sarb
pop
push
or
mov
cwtl
push
jnp
int
pushf
add
cwtl
mov
int
inc
gs
lods
inc
test
jae
add
ljmp
xchg
sbb
addb
iret
mov
jecxz
pop
cmp
mov
test
into
mov
and
dec
dec
outsl
in
pop
and
xor
dec
cmc
lock
pop
cmc
cmp
xor
sbb
add
out
adc
in
sub
notl
das
lods
adc
push
jae
out
mov
es
and
jge
jnp
inc
inc
cs
pop
jae
sub
fstl
xlat
xor
dec
xor
jno
pushf
pop
stos
xchg
stos
and
xchg
mov
mov
les
dec
pop
push
aam
push
shlb
test
pop
and
pop
jmp
and
pop
cmp
cmp
div
inc
push
rcll
and
dec
call
outsl
cltd
jl
mov
out
sahf
sbb
popf
sub
movsb
std
adc
repz
clc
mov
jp
dec
jo
cld
mov
mov
pop
fsubrl
pop
ss
in
mov
ljmp
mov
pop
push
and
sbb
test
jne
xlat
push
push
aaa
movb
loope
cli
imul
dec
xor
aad
scas
adc
leave
sbb
imul
mov
xorl
mov
sti
pop
iret
push
fs
ret
add
dec
pop
mov
out
push
inc
movsb
js
test
jb
push
pop
loop
lock
dec
pop
adc
jbe
mov
xchg
outsl
mov
add
ja
loopne
test
sahf
das
inc
mov
push
mov
movsb
add
popa
cmp
adc
jo
inc
or
test
push
imul
scas
xchg
popf
es
movsb
adc
dec
in
xchg
and
mov
jns
aam
mov
dec
pop
aaa
push
xor
push
sbb
sbb
push
shrl
imul
push
lret
mov
out
iret
movsl
iret
pop
clc
js
loopne
pusha
les
ss
std
cli
out
pop
and
aam
and
jae
pop
out
inc
int
stc
cmpsb
pop
dec
sbb
lahf
inc
fnstsw
pop
sti
scas
aaa
lods
sub
into
xor
int
jae
mov
pop
clc
inc
or
push
push
adcl
hlt
push
push
and
lret
xchg
cmp
scas
test
sbb
fisubrs
sub
and
daa
or
or
call
dec
lods
int3
call
imul
ret
cli
mov
popa
insb
cmpsl
inc
xor
sbb
add
stos
mov
addb
aaa
or
lds
jne
lcall
xor
pop
or
shll
mov
inc
mov
or
pop
mov
rorl
dec
fs
nop
mov
sub
jg
mov
dec
in
or
adc
aas
xor
dec
rolb
sub
jae
sbb
mov
add
sub
pop
xchg
shr
xchg
insb
shrl
addr16
sahf
push
xor
sub
cmp
insb
sub
fildll
sub
push
push
and
mov
aad
push
cld
out
jg
jecxz
je
out
xchg
les
dec
js
movsl
lods
xlat
and
shrb
out
sbb
sub
and
xchg
in
mov
jo
mov
push
or
jne
in
xchg
leave
pop
push
sub
cwtl
dec
mov
movb
jecxz
or
leave
notb
pop
fs
push
adc
je
mov
sub
dec
push
dec
pop
pop
inc
dec
xchg
ficompl
mov
or
jne
push
add
clc
jmp
outsl
pop
insl
test
push
aad
iret
dec
out
jbe
add
movsl
mov
xor
mov
rcll
inc
jecxz
mov
out
xchg
gs
mov
and
dec
xor
mov
out
fnsave
add
push
out
ss
mov
ja
mov
jbe
sarl
fdivs
jmp
push
shlb
xchg
lahf
jbe
fsubrl
xchg
adc
aas
lods
jmp
jbe
loope
insl
icebp
das
push
jge
cmp
hlt
repz
roll
xlat
insb
movsb
sub
jb
arpl
xchg
xchg
sub
out
mov
mov
mov
ficomps
dec
push
sarb
negb
adcb
push
fnstenv
loope
cmp
hlt
jb
loopne
push
out
sahf
insb
add
sub
andb
pop
pop
outsb
movsb
mov
mov
mov
es
pop
test
mov
arpl
inc
jbe
mov
insb
pop
xchg
bound
in
mov
outsb
fldln2
sub
popf
popa
sbb
ljmpw
xchg
cmp
leave
push
sbb
aas
pop
mov
pop
mov
sub
cmp
movsl
xchg
pop
inc
push
ja
pop
xchg
add
mov
iret
stos
shlb
sti
pop
hlt
push
lcall
cwtl
ficomps
out
push
sbb
es
jo
jle
imul
pop
lret
jnp
sti
jle
pop
cmp
inc
lds
or
aam
test
mov
stos
and
js
jo
rorb
push
cs
ret
add
pop
leave
and
inc
das
and
xor
cmp
mov
in
shrb
or
inc
lea
fdivrl
jne
xor
leave
fldcw
or
mov
rcrl
cld
lods
andl
xchg
popf
and
cmp
sbb
adc
mov
negl
pop
add
pop
jp
and
incb
inc
jl
inc
mov
stos
ljmp
pop
pop
mov
es
or
jge
add
push
sub
stos
jmp
mov
lods
xor
mov
mov
mov
sahf
cmp
add
out
sbb
jb
cmp
push
push
out
sbb
pop
xchg
add
insb
sbb
iret
push
loope
iret
fxch
add
es
ret
daa
dec
sahf
adc
mov
outsb
push
stos
or
adc
push
jno
dec
xchg
lcall
sub
push
repnz
mov
sub
xchg
into
push
call
pop
popa
aad
inc
stos
jb
aad
jmp
out
dec
add
inc
push
xchg
ss
push
pop
jle
jecxz
push
nop/reserved
jge
rolb
cmp
stos
shlb
nop
push
repz
leave
push
testl
movsl
cli
jne
repz
jle
cmp
lods
dec
adc
pop
push
mov
push
jecxz
es
inc
sti
cli
pop
xchg
mov
ljmp
scas
cld
stos
mov
mov
add
faddp
push
mull
push
mov
popa
or
push
dec
stos
dec
call
test
cmp
rolb
pop
push
jle
ror
inc
jmp
leave
add
lea
rclb
std
add
add
ud2
scas
shlb
fs
ja
gs
and
dec
sar
mov
mov
and
and
pop
adc
add
xchg
aas
hlt
xor
cmp
mov
lahf
sub
or
pusha
or
mov
pop
std
mov
add
test
dec
ljmp
xor
cmp
adc
xor
nop
jmp
out
jge
test
and
ja
clc
cli
lea
scas
push
xchg
mov
or
addb
jns
or
fcom
daa
sub
nop
xor
pop
push
jmp
dec
loope
mov
mov
jl
fdivrl
test
xchg
incb
test
cmc
add
sub
inc
je
pop
das
dec
test
and
dec
jno
int3
in
mov
sub
mov
mov
stos
xor
rolb
push
pop
mov
jp
xchg
mov
mov
xchg
cmp
icebp
ret
subl
scas
inc
mov
and
gs
xor
mov
sti
and
pushf
or
das
push
xchg
add
int3
adc
sar
es
cli
dec
pop
scas
das
pop
jmp
mov
aam
mov
add
cmp
sbb
filds
jnp
or
int
aas
cmp
pop
out
inc
jmp
insb
mov
loop
sbb
cmp
cli
push
sbb
bound
push
inc
repz
xor
xchg
mov
inc
mul
push
add
jl
fs
sub
stos
testb
clc
or
xor
dec
sbb
pushf
adc
sti
out
call
and
cmp
rorb
into
and
and
int
pop
push
lods
mov
jmp
dec
sbb
lods
pop
jae
outsb
mov
sti
and
mov
ret
lcall
popf
daa
mov
mov
shll
repnz
rorl
jo
cmp
mov
js
or
in
outsl
sub
fisttpl
add
test
rorb
sub
stc
add
mov
shlb
pop
xchg
mov
push
adc
xchg
push
mov
push
insl
je
push
jae
cmp
dec
push
subl
pop
sub
mov
push
jae
sti
push
xchg
mov
dec
cs
pop
in
pop
cmp
jge
shrb
mov
adc
push
dec
in
icebp
dec
clc
jp
test
and
push
sbb
mov
push
outsb
fadds
daa
mov
aam
xchg
sub
dec
mov
nop
push
xor
sbb
pop
and
lcall
mov
rolb
aam
pop
jp
push
sub
es
dec
sub
or
xor
xor
mov
inc
jle
pop
aam
pcmpgtb
sbb
mov
in
clc
pop
add
movsl
pop
in
pop
xlat
fbstp
and
and
cs
pop
ja
sbb
xchg
cs
mov
push
flds
dec
aaa
int3
jmp
out
adc
xor
mov
fwait
mov
mov
daa
lret
fdivr
inc
aam
rol
xchg
mov
xchg
jns
inc
mov
sahf
mov
clc
lcall
sbb
inc
dec
xor
dec
add
or
xor
js
ret
and
bound
shrl
ja
mov
sahf
test
imul
mov
outsl
lea
mov
pmaddwd
adc
xchg
push
arpl
les
iret
movsb
test
jecxz
dec
and
xor
lds
push
mov
js
mov
cld
pop
mov
jmp
test
scas
sub
daa
mov
cmpsl
inc
mov
cmpsb
das
cmpsl
test
fwait
pop
mov
add
inc
dec
cli
fsub
xchg
push
mov
aas
scas
lea
fisubs
adc
mov
loop
add
std
cmpsl
inc
in
push
sub
test
adc
or
push
sub
call
loopne
addb
repnz
push
jbe
das
arpl
negl
rolb
jns
leave
sub
in
add
call
dec
push
pop
lea
out
sub
sbb
lahf
push
dec
sti
mov
xor
in
xchg
lcall
push
mov
mov
jne
adc
and
add
jns
push
dec
loopne
xchg
pop
lods
cwtl
xor
adc
leavew
inc
out
add
cli
in
jecxz
mov
pusha
pusha
xlat
adc
mov
test
lods
in
dec
adc
jno
lcall
js
cmpsb
test
jmp
inc
mov
pop
jbe
mov
cmp
mov
inc
inc
mov
sbb
fisttps
std
ds
push
adc
push
jle
sbb
pusha
aas
test
dec
inc
and
out
xchg
jecxz
das
mov
int
scas
stos
pop
ja
mov
ret
rclb
inc
arpl
ret
sti
aas
incl
mov
sub
arpl
in
sub
pop
cmpsl
in
lcall
addb
jl
fnstsw
negb
scas
leave
push
mov
inc
scas
test
in
cmpsb
xchg
fsts
mov
leave
sub
pop
mov
jge
pop
inc
test
ds
js
or
xchg
ds
push
jns
add
and
push
adc
mov
xor
and
pusha
jle
shl
cmpsb
dec
es
push
cltd
cwtl
lahf
fsubrs
xchg
xor
int3
out
sbb
jne
push
sub
jle
fistpl
mov
inc
dec
fs
ja
push
jmp
shl
sarl
or
cmp
dec
inc
cmp
fsubrl
pusha
rcll
imul
outsl
xchg
cmp
loope
inc
dec
insl
test
addr16
cmp
aas
mov
mov
das
ds
sub
xchg
orb
imul
mov
hlt
lret
jecxz
andl
push
stos
mov
sub
ds
data16
loope
pushf
arpl
movsl
lods
jbe
imul
sub
movsb
mov
cmp
scas
mov
jbe
leave
sub
adc
adc
icebp
negl
es
insl
iret
mov
mov
shlb
push
and
jl
scas
int
clc
stos
cs
jl
dec
push
lock
sbb
lea
cwtl
jbe
in
in
mov
ret
arpl
ja
jecxz
pop
cmc
mov
push
mov
addr16
xor
push
cmp
cli
mov
sarb
jg
add
pop
xor
adc
mov
dec
inc
sbb
xchg
and
not
pop
dec
imul
mov
dec
mov
push
mov
pop
je
jae
cmp
xchg
mov
and
add
inc
pop
out
pop
pop
mull
repz
mov
popf
mov
fiadds
push
es
xchg
dec
jge
rol
mov
inc
sti
popa
addr16
pop
inc
ljmp
mov
ljmp
in
ljmp
and
jno
sub
and
enter
mov
int3
mov
rol
lods
pop
or
test
mov
or
dec
lods
test
repnz
adc
inc
pop
add
or
mov
aas
fcomip
and
lods
scas
and
mov
fwait
test
icebp
jno
icebp
mov
cld
mov
fisttps
loopne
lcall
in
ds
es
xchg
jg
ljmpw
test
addr16
mov
rcrl
push
dec
popf
in
pusha
popf
repz
inc
sbb
into
inc
adc
rcl
xor
pop
cmp
sti
sub
movsb
insl
js
jecxz
rorl
jae
cmpsl
or
and
lret
in
call
jmp
mov
pushf
enter
pusha
jge
pop
sub
call
push
stos
sbbb
test
xchg
sbb
sbb
pop
imul
test
pop
push
jmp
push
and
lds
aaa
outsl
ret
xor
push
ds
daa
inc
dec
sbb
cmp
mov
xor
shl
fsubp
ljmp
and
xchg
jmp
imul
sub
pop
pop
mov
rcrb
es
cmp
faddl
ret
sub
test
nop
sub
cmp
into
movsl
ljmp
xor
stc
cwtl
imul
push
dec
and
pop
jb
cmc
jae
mov
jne
loope
push
cwtl
push
pop
pusha
push
cmc
or
ja
clc
sti
inc
lret
in
pop
add
enter
inc
sbbl
mov
cwtl
push
dec
test
pop
imul
dec
mov
inc
mov
call
add
repz
pop
push
and
bound
jae
ja
push
dec
jg
mov
xor
pusha
outsl
add
scas
jae
nop
dec
pop
xor
cmp
mov
lret
push
push
cmp
mov
mov
push
movsl
push
int
xor
xchg
push
fisttpll
push
mov
fadd
fnstcw
xor
mov
mov
into
pop
int3
and
gs
aas
orb
cmp
mov
push
mov
les
imul
fisubrs
cwtl
and
mov
fidivs
roll
es
inc
jl
loop
addb
lds
lret
mov
push
lods
inc
fldl2e
nop
out
mov
hlt
sbb
inc
fcoml
push
je
cmpsl
xor
xchg
ret
or
mov
jnp
shll
das
add
xchg
push
lahf
test
pop
add
dec
lret
dec
hlt
and
jmp
out
jne
inc
mov
pop
xchg
xor
mov
push
mov
lds
mov
cs
jge
aas
push
pop
pop
jae
mov
and
push
aas
cld
test
imul
dec
mov
mov
sahf
ljmp
test
jle
xchg
mov
stos
ret
push
pop
into
pop
xchg
js
int
push
adc
and
dec
out
inc
inc
jecxz
cltd
xor
cmp
push
dec
in
mov
pushf
lds
lods
call
sbb
pop
aaa
push
jg
lods
shll
push
cmc
cmpsb
mov
push
or
pop
jno
jns
or
sbb
mov
push
sbb
mov
pusha
pop
cmp
std
mov
mov
negb
dec
fstps
popf
roll
xlat
mov
loope
push
cmp
pop
pop
lret
movsb
out
leave
xchg
xor
xor
inc
add
push
cmp
cmpsb
jge
inc
mov
xor
mov
dec
jbe
dec
xchg
les
xor
and
xor
lcall
xlat
mov
divps
jg
xor
repz
negb
ret
popa
lds
hlt
arpl
lret
ss
int3
adc
push
mov
icebp
vmovdqa
add
fs
add
mov
cmpsl
adc
xor
dec
pop
or
fwait
or
mov
std
mov
and
xor
xchg
sbb
add
iret
push
xchg
jmp
leave
jp
mov
sub
aas
cltd
pop
mov
and
int3
insb
xor
inc
aaa
sub
inc
pop
cmpsb
mov
inc
jbe
insb
aad
cmpsl
inc
icebp
xchg
mov
sbb
sbb
pop
push
cwtl
pushf
add
lds
fidivs
push
lcall
add
inc
imul
aaa
cmp
in
dec
adc
inc
repnz
xor
fistpll
scas
and
pop
insb
lods
fwait
pop
pop
subb
lds
das
pop
push
inc
adc
out
outsl
nop
gs
cli
mov
out
js
mov
push
repnz
pop
dec
mov
outsb
in
std
pop
pushf
lahf
xor
cli
push
mov
dec
xlat
or
int
inc
pop
pop
adc
pop
mov
adc
movsl
mov
pop
mov
sub
inc
lret
sbb
add
mov
jecxz
cmpsb
jmp
pushf
mov
shr
jecxz
stc
lock
jle
dec
jecxz
in
dec
fisttpll
enter
ja
les
cmp
fdivrp
into
mov
insl
xchg
lret
xchg
xchg
mov
leave
lds
and
and
jno
clc
test
jno
add
dec
and
fmull
mov
mov
add
and
xor
lock
fnstenv
mov
lahf
popa
xchg
sbb
fucomi
pop
lret
out
dec
sbb
add
jo
int
dec
inc
arpl
cpuid
cmp
sub
pop
mov
fwait
and
in
and
xorl
fs
addl
fwait
cmp
sub
adc
es
jnp
and
dec
js
shrl
movsl
inc
lcall
dec
pushl
bound
mov
inc
jo
rcll
pusha
xor
std
aad
dec
rorw
mov
test
jno
in
adc
lret
pop
jns
divb
jp
outsb
lcall
nop
pop
cmpsb
and
aas
shr
push
mov
xchg
add
xor
dec
frstor
push
hlt
ljmp
sbb
lret
xor
pop
sub
xor
insb
xchg
sbb
jns
push
daa
push
sub
mov
or
mov
xchg
icebp
bound
jmp
faddl
cmp
je
xchg
pop
jg
test
jge
pop
icebp
jbe
cwtl
dec
xlat
jg
test
or
jae
repnz
mov
cltd
jns
sbb
mov
mov
xor
xor
aas
sbb
es
push
pop
and
cmc
mov
mov
fsubrl
or
andl
xor
push
lcall
xchg
jge
fnstsw
mov
in
lcall
mov
mov
inc
push
fmuls
call
and
rorb
hlt
jge
xor
arpl
jl
mov
fistps
imul
lods
pusha
jge
pop
outsl
push
je
mov
pop
cmp
repz
xor
int
std
idiv
fisubl
dec
js
into
pop
mov
andb
shlb
shl
test
sbb
fildl
push
sbb
push
or
jp
inc
test
iret
jmp
push
xchg
lea
pop
push
jns
stc
enter
pop
aas
mov
in
adc
dec
adc
mov
enter
lret
jge
pop
lret
lods
mov
cmp
or
fdivrl
pop
popf
pop
imul
inc
cmpsl
cmc
data16
add
xor
gs
mov
daa
into
mov
aam
mov
hlt
sar
mov
hlt
int3
or
lods
aad
daa
pop
jle
sarl
jbe
ljmp
sbb
mov
clc
aad
insl
jmp
mov
jge
cs
dec
mov
aam
sbbb
pop
outsb
hlt
jmp
add
fldenv
mov
stc
jnp
xchg
xor
mov
loope
mov
mov
mov
loop
mov
xor
sub
test
pop
mov
pop
sti
push
push
sub
lea
sbb
add
push
pop
push
jge
outsl
mov
cwtl
stos
lcall
outsl
shlb
sub
movl
ds
mov
aam
sbb
push
dec
cmp
pop
and
and
movsl
lahf
out
and
ror
mov
xchg
sti
mov
test
jl
xchg
pop
fisubl
jns
dec
ja
pop
push
mov
jl
scas
insl
loope
leave
das
int3
mov
sbb
add
ss
add
adc
clc
xchg
cmc
jno
addl
xchg
sbb
jns
sub
mov
mov
cmp
lret
and
mov
sub
jl
jg
mov
sub
lcall
inc
push
dec
loopne
scas
push
push
and
in
mov
mov
and
or
loopne
lods
push
lods
ret
decb
mov
aas
sti
jo
imul
mov
outsl
sub
nop
or
stos
rcl
mov
sarl
ret
loope
push
add
cmpsb
icebp
or
leave
push
mov
shll
push
imul
cmp
aam
xchg
scas
imul
or
fxch
stos
or
sbb
icebp
push
mov
xchg
les
loop
mov
push
gs
or
dec
push
sub
mov
and
rcll
stos
cmp
mov
inc
imul
mov
xchg
xor
xor
mov
lods
test
mov
mov
inc
and
jmp
jb
xchg
and
enter
adc
xor
xchg
shrb
mov
leave
or
dec
inc
cmp
adc
jns
popf
mov
cmp
cmp
cmp
bound
clc
in
jns
jns
xlat
mov
jo
pop
mov
pop
mov
mov
xchg
rcr
loop
lcall
jmp
test
out
mov
sub
jp
enter
add
xchg
and
in
lret
int3
push
fimuls
loope
jmp
jg
imul
cmp
popa
jae
lods
pop
adc
mov
dec
jge
inc
xor
mov
iret
fsubr
adc
jl
clc
in
bnd
addr16
dec
dec
mov
pop
repnz
fwait
or
mov
lea
fisubl
in
lret
call
lea
sub
push
jbe
mov
xchg
cli
out
mov
insl
aam
pop
movsw
jne
rorl
es
in
sahf
dec
xor
sub
je
sub
rclb
std
mov
xor
ret
ficoms
int
xchg
shlb
lret
mov
popa
imul
in
xchg
fidivl
pop
mov
pop
push
mov
xchg
jnp
add
mov
jnp
fadds
mov
xor
orl
pop
imul
and
sahf
aad
or
jmp
pop
fs
movsl
xchg
add
emms
jmp
adc
test
imul
mov
inc
aam
or
inc
xchg
je
jl
ret
decb
dec
lret
sub
add
dec
sbb
sub
bound
jg
dec
mov
mov
popf
mov
add
mov
xchg
dec
cmp
cmp
or
jbe
ja
dec
scas
inc
pop
sbb
cmp
push
mov
in
sbb
fcomi
call
jg
hlt
adc
out
and
sbb
pop
mov
pop
xchg
les
sbb
call
andb
mov
xor
test
enter
bound
mov
xchg
add
xchg
jae
cmpsb
mov
cltd
popf
mov
pop
xor
cmp
push
mov
push
xor
dec
xor
adc
fmull
arpl
lahf
aas
in
aad
sbb
mov
hlt
xchg
jg
mov
sar
ss
jecxz
jl
push
leave
sub
pop
sub
xor
ret
mov
or
mov
mov
jb
rcrb
and
outsb
mov
xchg
scas
jae
adc
push
lahf
data16
lods
lds
add
pop
dec
shrl
fadd
xchg
mov
push
cs
mov
minps
jp
jno
dec
stc
dec
lcall
xchg
adc
xor
mov
inc
jne
pop
mov
pop
rcr
mov
hlt
pop
cmp
push
fsub
mov
mov
adc
mov
jnp
iret
adc
mov
add
fidivrs
mov
icebp
out
scas
leave
mov
pop
cli
aad
jecxz
stos
scas
xor
das
cli
iret
lods
dec
test
and
insl
xchg
flds
je
adc
out
add
mov
sub
popf
or
movsl
clc
mov
aas
add
call
jge
mov
out
les
push
insb
fs
xor
mov
mov
jl
fimuls
in
lods
jp
xchg
scas
lea
leave
jnp
test
pop
fs
sub
mov
xor
cmpsb
sahf
push
mov
push
mov
movsb
lret
flds
mov
and
pop
fisttps
int
push
mov
xor
scas
movsb
ret
mov
xlat
icebp
aad
mov
cld
cld
sahf
dec
aas
pop
test
aam
dec
push
jge
mov
pop
insl
sub
stc
lock
adc
pop
rclb
int3
rclb
iret
jb
inc
es
inc
mov
add
repnz
bound
sub
andl
fcompl
fs
inc
mov
aam
mov
sbb
subb
jne
jmp
cmp
loope
arpl
and
add
imul
xchg
in
jb
and
stc
inc
or
push
maskmovq
notl
fsubrp
xor
jecxz
fs
mov
jge
in
dec
mov
sub
cli
adc
and
insb
and
or
pop
out
dec
mov
loope
jae
or
mov
xchg
xchg
push
out
sub
cltd
bound
adc
popa
push
and
stc
rorb
mov
sahf
aam
dec
mov
xchg
repnz
add
es
lret
repnz
sbb
lods
iret
push
xchg
push
sbbb
add
pop
pop
icebp
jp
nop
ja
mov
sbb
nop
push
sahf
jecxz
mov
jae
cld
pop
stos
std
pop
loop
mov
xchg
arpl
scas
cmp
jno
or
movsl
inc
jecxz
or
cmp
jmp
pop
test
daa
pop
aas
daa
pop
pushl
adc
inc
fildll
push
fmul
pop
je
and
adc
adc
stc
nop
shl
fisubrl
jl
scas
sarl
sbb
adc
xchg
and
xchg
dec
cmp
stos
and
xor
outsl
cs
mov
inc
xchg
jbe
cmovp
mov
mov
aad
push
jb
sti
sub
xor
cli
push
ja
testb
pop
sbb
jae
les
adc
imul
mov
std
push
outsl
into
addb
push
pop
mov
jae
jecxz
orb
mov
loopne
lret
jnp
js
adc
jb
and
pushf
into
xchg
pop
push
jl
aam
sub
add
dec
stos
mov
rclb
pop
fcomi
mov
enter
cmc
add
pop
mov
or
dec
out
or
jno
xlat
pop
mov
fistps
mov
mov
in
xor
in
shll
inc
aas
insl
fsubs
test
rcrb
jnp
mov
lcall
cmp
test
mov
mov
fistpll
xor
pop
pop
into
push
mov
push
mov
mov
sti
or
sbb
xor
mov
push
test
sub
inc
push
pop
sub
mov
outsb
add
sti
jnp
dec
mov
in
push
sbb
and
sub
mov
dec
insl
ss
or
add
push
pusha
ja
sbb
sub
pop
js
decb
cmp
popa
add
xor
insb
lahf
push
lret
in
popf
jmp
lods
push
movsb
cltd
mov
out
lret
call
push
aaa
or
jo
insl
call
jo
push
sub
push
mov
or
mov
push
jle
jae
sahf
cli
inc
sbb
mov
inc
stos
mov
or
jns
xor
nop
mov
lods
lret
xor
std
lret
ljmp
bnd
xorps
js
fistpll
inc
lret
addr16
jp
or
cmp
pop
out
cmpsl
movsb
fsts
mov
xchg
dec
add
inc
incb
fsubrs
xchg
jg
pop
pop
cmp
ret
rclb
cmpsb
mov
test
inc
jl
in
xchg
sub
jg
fldcw
mov
cmp
cwtl
dec
inc
popa
aam
fs
xchg
ficompl
outsb
mov
sub
stos
jp
iret
lds
adc
cmp
xor
jecxz
lret
push
outsl
or
xchg
roll
fildl
mov
or
idiv
push
rcl
lret
jb
ss
orb
ds
sar
and
mov
jmp
cmp
push
sub
xor
into
push
push
aaa
movb
bound
iret
push
scas
or
movl
out
icebp
popf
xchg
std
mov
adcl
fisubl
jb
bnd
jno
pop
outsl
and
sbb
mov
lock
pop
xchg
out
pop
dec
jge
mov
pop
enter
decb
dec
sub
sbb
push
xchg
dec
pop
jno
pop
jns
clc
imul
mov
pop
aaa
mov
mov
add
adcl
fiadds
and
sets
jo
push
stos
in
movsl
cmp
inc
push
lods
mov
xor
repz
xchg
xchg
mov
cmp
jnp
mov
pusha
scas
or
xchg
inc
pop
fdivs
sbb
xchg
inc
imull
jns
stos
sbb
mov
mov
mov
out
sbb
out
clc
cwtl
or
lcall
xor
add
or
popf
lret
mov
test
out
and
mov
outsl
sbbb
push
dec
sahf
imul
push
mov
xchg
push
mov
negl
adc
jno
pop
inc
movsb
enter
dec
and
push
js
push
pop
test
add
int3
movsb
add
insl
fbld
or
into
xor
push
lds
cmc
mov
add
pop
pop
repz
add
or
loop
jmp
mov
fcmovb
mov
lds
aad
ljmp
cmc
je,pt
fcoml
jmp
lock
pop
dec
std
add
mov
fsts
dec
lahf
cmp
mov
xor
add
loop
push
fmulp
sub
out
adc
adc
mov
in
and
lahf
xor
fidivrs
mov
insb
mov
pop
cli
sti
mov
cs
out
or
cli
or
mov
sbb
sti
in
push
jb
sbb
les
leave
cmp
pop
add
lds
out
inc
adc
push
sub
icebp
int3
push
es
insl
sbb
dec
lret
loop
xlat
adc
and
das
aaa
dec
push
dec
inc
ror
shll
sub
and
ds
mov
int
adc
js
aam
and
xor
xchg
cmp
pop
jg
sub
cmp
jb
xchg
test
xchg
repnz
add
mov
and
adc
inc
lods
scas
mov
inc
outsb
daa
pusha
ret
aad
leave
insb
xchg
or
xlat
loop
mov
fbstp
push
popa
dec
cli
fcom
sub
xchg
aaa
pop
mov
loope
fsubl
popf
js,pn
rorb
imul
jl
in
jnp
stc
dec
sbb
aad
dec
cli
rcll
push
pmuludq
add
mov
int
push
lahf
aam
aam
dec
dec
push
cmc
cltd
test
xor
jecxz
addl
shrb
dec
inc
fldcw
mov
sbb
lea
mov
mov
dec
or
push
inc
mov
clc
test
mov
xlat
push
into
push
push
xlat
test
shll
mov
sub
jb
sub
imul
xor
push
lods
ds
aad
add
addr16
pusha
adc
cld
lds
xchg
ret
cmp
mov
inc
mov
mov
clc
and
lods
movsb
lds
mov
out
inc
test
repnz
pusha
add
xchg
push
or
mov
mov
or
jo
sub
mov
std
sub
ret
icebp
ds
mov
xchg
and
or
xor
ret
sahf
repz
push
repnz
xor
cwtl
mov
xor
test
shl
inc
pop
mov
push
adc
sbb
cmpsb
rcrb
inc
cmc
push
lods
movsb
subl
lods
ljmp
mov
dec
pop
mov
jae
xchg
push
enter
rorb
popa
mov
and
sub
sub
imul
and
ja
jecxz
aad
push
xor
cmc
retw
sbb
sar
sbb
mov
pusha
add
dec
int3
js
aas
lock
inc
bswap
fdivrp
loop
scas
inc
inc
add
jne
fs
faddl
jge
pop
fwait
mov
loopne
std
inc
push
out
shr
insb
cmp
jmp
scas
popa
cltd
inc
and
push
or
push
js
fwait
cmp
jnp
push
or
xchg
and
roll
sub
outsb
or
ss
out
adc
fs
pextrw
mov
arpl
scas
or
je
test
add
inc
pop
mov
mov
lods
cs
cmc
pop
repnz
sub
lods
sub
cmp
and
pop
cld
add
popf
out
mov
out
insl
push
enter
movsb
stos
lret
jae
lcall
rorl
stos
mov
push
inc
stos
dec
cmpb
mov
fnstenv
dec
push
fstpl
leave
in
mov
xlat
gs
push
hlt
hlt
add
jg
mov
in
adc
push
pop
sub
jno
adc
mov
imul
out
rcr
cmp
pop
mov
xor
lahf
adc
lods
aam
xor
sbb
push
sbb
mov
push
rorb
sahf
sbb
jmp
jae
je
sub
jp
mov
dec
dec
inc
pop
sete
push
scas
mov
jnp
xchg
mov
or
cmp
sub
sbb
mov
inc
xchg
scas
jp
fsubs
xchg
lret
pop
out
and
mov
outsl
mov
xchg
mov
push
inc
mov
mov
inc
aad
mov
lret
xchg
push
cmp
jl
adc
mov
daa
cmp
mov
aad
sbb
adc
adc
out
or
outsb
fisttps
add
movsl
jl
loop
inc
lret
inc
or
xlat
jle
repz
rorl
mov
dec
popa
shrb
rolb
push
inc
sub
and
push
adc
stos
je
je
dec
lret
loopne
sbb
into
add
enter
inc
cmp
jbe
subl
sbb
mov
repz
xchg
xchg
xchg
stos
out
xorl
std
lods
jp
into
jg
int
mov
jb
iret
jne
test
adc
inc
jg
xchg
dec
push
std
push
xchg
ljmp
pushf
sub
sbb
jne
loopne
inc
and
rol
mov
mov
mov
inc
in
sar
aas
pop
push
add
ja
out
neg
pop
adc
pop
add
sub
inc
pop
cmc
cwtl
cmp
adc
and
mov
dec
leave
mov
mull
outsb
jmp
mov
lods
jg
daa
arpl
inc
imul
dec
int
mov
jecxz
nop
lahf
lahf
out
lock
xchg
cli
dec
adcb
or
pop
aam
add
std
lock
jp
fsts
lods
cmpsb
push
mov
in
pop
pop
mov
push
int
hlt
shlb
insb
sub
sbb
dec
repz
movd
scas
arpl
push
fdivrs
in
stos
pop
mov
int
stos
sbb
sbb
xlat
mov
stc
pop
xor
adc
int
stc
jnp
je
pop
negb
bsr
loop
pop
rolb
fists
stos
cmpsb
mov
cmp
or
sub
movl
fldl
sub
mov
ret
pop
jae
cmp
push
mov
add
subb
outsb
and
test
or
sbb
inc
cmp
adc
and
pop
xchg
jns
cmp
mov
mov
mov
test
pmaxsw
int
adc
lods
jnp
xchg
aas
and
shll
stos
inc
scas
fsts
mov
pusha
cld
cmp
lods
dec
lret
mov
jmp
adc
aas
mov
ffreep
rcrl
and
stos
and
int3
movsl
test
bound
sti
inc
in
popa
dec
out
jmp
or
jbe
fsubl
mov
sahf
loopne
ret
in
dec
jo
jmp
add
sbbl
mov
push
popa
dec
mov
pop
lret
fisubs
jmp
stos
and
mov
sti
subl
mov
jecxz
leave
inc
jecxz
xor
add
stc
dec
mov
int3
mov
hlt
adc
cli
lock
popa
cmpsl
in
mov
jmp
pop
lcall
addr16
jno
inc
aaa
cmp
stos
lods
pop
mov
scas
pop
enter
lock
mov
mov
mov
pop
cmp
div
out
popl
pop
push
popf
push
repnz
test
jne
rorl
dec
inc
and
dec
scas
cmp
hlt
lea
add
cltd
lods
ret
push
mov
mov
pop
pop
xchg
and
pop
dec
cmp
pop
inc
push
jp
jnp
xchg
mov
test
mov
shlb
add
icebp
insb
inc
lahf
stos
inc
icebp
mov
scas
mov
adc
pop
mov
clc
popf
cmp
subl
jmp
mov
bound
jp
daa
sub
in
or
fsub
xor
cli
pop
add
cmp
mov
jmp
mov
add
rcll
movsb
mov
push
pushf
scas
icebp
pusha
ljmp
push
sub
idivl
or
sbb
lret
rorl
daa
fisubrs
jecxz
scas
xor
inc
adcb
pop
popf
xchg
add
insl
push
sbb
sbb
aad
adcb
adc
repnz
ja
leave
pop
ret
sbb
pop
push
jle
adc
out
repnz
cmpsb
pop
setne
mov
lcall
imul
jns
unpckhps
mov
cmpsb
pushf
mov
push
xor
cmp
and
jnp
std
mov
fsts
inc
xchg
inc
sti
mov
xor
int
rclb
gs
test
mov
jmp
dec
out
outsb
cmpsb
dec
in
cmp
mov
in
lock
xchg
mov
scas
cmp
sbb
push
xchg
sub
mov
ja
add
in
sahf
mov
mov
pop
icebp
in
add
mov
int3
mov
lea
cmp
ljmp
lock
add
sub
xchg
adc
or
cwtl
in
mov
les
mov
loop
sbb
fstp
push
fwait
push
cmc
addb
push
int
or
inc
out
jg
out
insl
cmpsb
movsl
cmc
mov
fistps
push
pop
filds
mov
sbb
cmp
sub
xchg
daa
mov
lods
sbb
das
mov
add
or
lods
cmp
insl
mov
shr
mov
mov
mov
mov
stos
mov
jg
jns
or
xchg
flds
outsb
push
popa
dec
out
xor
adc
fwait
stos
fnstsw
aas
mov
jmp
mov
mov
iret
call
fsubrs
xchg
xor
push
xchg
inc
sbbb
xor
fmulp
sub
mov
roll
movsb
test
adc
lods
in
popa
sbb
sbb
mov
imul
shrl
push
les
popl
iret
or
je
in
js
xor
lcall
gs
insb
leave
jnp
sbb
sti
fcompl
cli
sbb
out
inc
mov
out
adc
mov
outsl
in
stos
mov
jne
popa
jl
inc
leave
fs
fsts
js
repnz
push
and
push
sub
or
movsb
jnp
xorb
add
adc
lds
push
push
xlat
mov
push
clc
std
sub
imul
hlt
inc
sarb
xor
cmpsl
pop
cmpb
lret
sub
and
invd
cmp
sbb
les
frstor
aas
rcll
scas
sub
push
push
pop
adc
jb
pop
orb
dec
mov
sub
xor
ret
dec
imul
lock
jb
jecxz
pop
leave
shrb
push
xor
cmp
adc
jmp
xchg
inc
cltd
push
jp
and
pop
or
sti
dec
scas
mov
push
out
popa
push
push
mulb
and
mov
cmpsl
pop
addr16
ljmp
and
adc
mov
pusha
popf
inc
cld
fcomi
pusha
aad
mov
mov
adc
pop
cmpsb
das
cmp
stc
mov
dec
sub
stos
popf
sub
fadd
fadd
inc
dec
movsb
jnp
cli
xchg
xchg
psrlq
psignd
jle
add
insb
fstl
nop
ror
jmp
sbb
scas
or
mov
es
add
rolb
ja
mov
fistps
push
ds
mov
push
test
lret
mov
pop
cmpb
push
pop
dec
mov
ds
jo
push
lcall
outsb
inc
sub
cld
and
and
imul
inc
push
clc
hlt
add
gs
mov
inc
or
jmp
hlt
js
lret
push
sbb
jns
lret
test
lds
xor
cli
pop
cmp
cmpsl
in
and
sub
lods
xor
push
pop
xchg
insl
sbb
sub
aad
aas
pop
dec
jbe
add
icebp
lods
in
jbe
mov
dec
sbb
out
mov
cmp
sub
dec
ret
pop
sbb
cmpsl
std
js
daa
cmp
inc
pop
xor
daa
xchg
aaa
inc
lcall
lds
cwtl
sub
divb
cmpsb
xlat
hlt
mov
mov
or
data16
andb
data16
cmp
mov
xlat
jne
or
mov
int3
xchg
add
jecxz
test
sbb
sbb
adc
mov
sub
mov
mov
xor
push
lcall
test
mov
fidivrl
dec
outsl
fdivr
ret
rcrb
mov
mov
sub
or
testl
pop
cs
fptan
ja
scas
lods
ja
iret
push
std
mov
xchg
in
push
jns
ret
int
sbb
movsl
vshufps
mov
mov
jno
lods
hlt
xchg
repz
jge
sahf
jge
push
fsts
cmp
mov
test
enter
jnp
pop
push
inc
add
mov
in
int
adc
adc
sbb
sbb
pop
inc
mov
dec
insb
jnp
xchg
out
dec
mov
in
loope
popa
mov
rorb
ljmp
and
pusha
xlat
in
xchg
add
sub
cmp
imul
lods
loopne
fsubrs
jmp
jmp
or
sbb
lock
int
movsb
hlt
sti
icebp
sarb
lods
std
decb
insl
and
add
pushf
lahf
cltd
lods
fidivl
mov
es
jno
or
loop
ret
push
xchg
loope
call
inc
lret
pushf
push
iret
push
ja
imul
movsl
subl
ljmp
enter
cmp
adc
ja
add
stos
inc
pop
sub
push
inc
inc
nop
add
mov
xor
imul
xchg
clc
xchg
inc
xlat
xlat
jb
fimull
int3
push
mov
ror
pop
inc
add
push
push
stc
push
cmp
or
push
movups
shrl
mov
mov
or
inc
fists
xchg
leave
arpl
mov
call
add
notb
icebp
xor
out
mov
mov
fldcw
aam
pop
shll
xchg
mov
mov
stos
inc
and
pop
jp
add
xor
xchg
notl
mov
xchg
and
iret
in
push
rorl
outsl
mov
and
fwait
ss
js
insl
sub
inc
add
mov
cmp
adc
push
mov
mov
xor
dec
jg
add
jae
fdivrs
add
mov
in
mov
ja
test
mov
xor
fsub
sbb
xchg
push
and
jp
cltd
test
inc
jbe
shlb
mov
repz
jge
addr16
mov
or
inc
push
cmp
outsb
pop
xor
fildl
call
cmp
ss
aaa
mov
fwait
aam
or
mov
repnz
sbb
ror
outsl
loope
sbbb
inc
in
adc
mov
fsubrl
pop
xchg
icebp
mov
test
cmp
and
es
popl
out
cmc
ret
mov
push
lret
jmp
fidivrs
std
aaa
add
nop
cmp
xchg
test
mov
mov
lret
push
sbbl
push
shl
xchg
add
imul
mov
mov
orl
pop
jae
pop
insb
cli
dec
sub
ret
xchg
mov
in
mov
lea
mov
cli
mov
xchg
test
js
das
js
dec
icebp
popf
adc
outsb
popf
jb
ret
fcomps
ljmp
push
cs
loope
das
adcl
or
gs
pop
icebp
out
mov
outsb
xchg
loopne
scas
fwait
cld
mov
movsl
adc
loope
or
push
xchg
ds
mov
arpl
outsb
lfs
push
cmp
test
loope
iret
lock
imul
pop
push
jns
imul
repnz
je
cltd
jge
rclb
sti
es
sarb
jle
add
mov
shlb
cld
xor
pushf
mov
loope
lret
scas
cmp
fists
pop
jb
xchg
aam
in
orl
lret
test
subb
icebp
pop
stc
jg
mov
fdivrp
push
test
sbb
cmp
hlt
ljmp
adc
mov
fimull
jp
das
rcrl
jp
push
lods
jg
test
cld
je
and
xlat
or
sbb
jmp
xor
pop
adc
rorb
call
sbb
push
clc
in
test
movntps
lret
fisttpl
mov
pop
insb
jp
bound
sbbl
push
sub
test
lock
sbb
add
loope
xchg
loop
fldenv
fdivr
imul
add
cmp
sub
imull
and
fstp
popf
xchg
push
add
aas
cmp
imul
imul
jae
test
jmp
and
subb
fcoml
dec
push
daa
mov
cmp
test
sbb
loope
bound
xchg
addr16
sub
ss
pop
aam
fsubrl
xchg
xchg
inc
fsubrl
lcall
fidivrs
push
or
mov
mov
xchg
jno
insl
mov
imul
fwait
popa
jmp
dec
fiadds
ss
push
xor
fstpl
loopne
push
sub
mov
inc
sub
sub
push
scas
inc
loopne
pusha
in
je
sti
push
imul
cmp
inc
sbb
lret
sbb
arpl
jns
adc
cmp
scas
jp,pn
mov
and
add
out
cmpsb
lahf
orl
inc
lret
cmp
data16
add
out
and
cli
inc
and
bound
push
stos
je
movsl
fs
jg
adc
mov
mov
add
cs
aas
inc
sub
sbb
call
stc
stc
mov
push
or
aaa
ss
test
xchg
les
dec
lock
jbe
jecxz
mov
nop
lods
movsb
ja
jl
cmp
or
mov
xchg
stc
push
lcall
push
push
mov
cwtl
jbe
mov
loope
pop
mov
sub
xor
cmpsb
testl
subb
sti
insb
pusha
mov
sbb
lds
dec
push
cmp
movsl
mov
into
jg
sub
fs
xor
out
xor
lods
push
in
cwtl
cs
push
jmp
xchg
xchg
jae
cld
roll
imul
shll
mov
divb
sbb
lds
cmp
in
not
dec
pop
mov
or
cmpsb
xlat
stos
test
aas
sbb
out
rorb
push
stos
cmc
imul
or
cs
or
mov
movsl
imul
fisubs
xor
imul
jle
movsb
popf
out
push
cmp
repz
cmp
iret
pop
cmp
cmp
in
lea
push
mov
rcrb
lds
push
gs
gs
jnp
adc
push
pop
in
cmp
cmp
push
cmp
xchg
push
lret
rorb
and
push
push
mov
cmp
push
mov
jne
adc
es
aam
pop
dec
cmp
inc
mov
aad
pop
cwtl
cli
jns
mov
scas
std
xchg
cli
lahf
out
out
jp
xor
and
push
iret
outsl
test
add
adc
popf
inc
cli
sbb
cltd
cld
ret
out
mov
mov
scas
inc
xchg
adc
dec
scas
arpl
sub
dec
cmp
xlat
sub
mov
outsl
popa
dec
and
roll
inc
shlb
and
mov
dec
ds
push
xchg
pusha
dec
cmpsb
or
out
fldl
add
iret
push
pop
sbb
cwtl
movsl
xchg
fdivl
jne
ret
popf
sub
xchg
std
lahf
adc
into
pop
fisubrl
outsb
cmp
push
fxch
and
and
shrb
push
and
inc
push
or
sub
test
sub
pop
adc
scas
nop
movsb
rcrl
mov
js
popa
xchg
cmp
mov
popf
xor
sub
iret
xor
test
lret
xchg
mov
sarb
xchg
rcl
push
cmpsl
cmc
mov
pop
pop
push
fnstenv
mov
xchg
mov
pusha
dec
push
lea
fstpl
insl
and
jecxz
lcall
mov
es
sarl
xor
jl
sub
add
repnz
inc
lea
ja
or
outsl
push
inc
orl
jb
adc
dec
adcl
mov
dec
mov
xlat
cmp
mov
pop
aad
mov
xor
pop
or
sti
sub
lret
push
js
sub
cmp
push
mov
rol
mov
rolb
insb
inc
adc
pop
jbe
pushf
repz
mov
sbb
dec
into
test
pop
dec
sahf
sbb
lods
enter
inc
aam
aas
mov
push
nop
aas
jb
loop
cmpsl
cltd
or
fdivrl
mov
xchg
add
cmc
jg
or
shrb
sbb
sbb
add
outsb
mov
sub
repnz
into
pusha
xchg
pop
push
and
jnp
inc
fsubrs
cmpl
sub
jg
jmp
ljmp
fs
daa
xlat
insb
lods
cwtl
lcall
jp
mov
push
xor
hlt
push
cwtl
sub
jae
cmpsl
inc
mov
jae
icebp
daa
clc
sbb
je
movsb
stc
cmp
sub
aad
jne
lcall
cmp
dec
lret
decb
jbe
into
pop
dec
add
jne
add
std
movsl
sbbb
ds
cmp
pop
jle
fwait
ljmp
clc
xlat
push
add
jle
push
and
bound
cltd
jo
cmp
popa
push
fcoml
cmpsb
in
sarl
popl
or
jbe
fnsave
fsts
cs
in
mov
jge
or
xchg
jo
lock
dec
clc
mov
aam
mov
pop
dec
in
into
repnz
out
sub
adc
into
rol
sub
lret
sbb
and
call
lock
pop
js
aam
xchg
xchg
sub
mov
fwait
aam
mov
aam
add
push
inc
in
bound
cmpb
js
inc
inc
dec
jnp
and
sub
les
movsl
rol
add
bound
ds
ror
push
dec
das
scas
cmpsb
jae
leave
mov
pop
loop
ret
xchg
sbb
inc
iret
das
mov
icebp
xor
icebp
stos
andb
sahf
not
dec
stos
out
repz
ficoms
and
or
jge
xor
jle
mov
inc
or
cmp
fcoml
and
jg
lcall
fsubs
shlb
testl
lock
lds
jnp
adc
sbb
jbe
mov
pop
xchg
lahf
nop
movsb
sahf
ret
mov
mov
imul
mov
inc
inc
icebp
push
in
jne
jns
mov
and
dec
int
arpl
mov
in
inc
test
xor
scas
roll
outsl
repnz
add
or
jnp
aas
pop
mov
sahf
repnz
lods
xor
jle
adc
mov
pop
into
aaa
pop
aad
outsb
xor
cwtl
or
adc
and
sub
lock
cmpsl
mov
cmpsb
pop
aam
pop
push
sub
jne
scas
aam
mov
data16
sbb
test
xchg
jmp
sub
out
sub
mov
xor
es
adc
enter
and
clc
sarl
sub
xor
jbe
lds
in
mov
ds
gs
mov
adc
jp
and
outsb
ret
adc
xchg
fldcw
das
xor
pushf
lcall
mov
or
test
out
fiaddl
cmp
mov
pop
sub
push
add
out
insl
mov
push
adc
or
dec
movsl
aam
add
stc
aad
repz
cmpsb
mov
and
sahf
cltd
daa
mov
inc
scas
test
dec
bound
lods
push
inc
jbe
movsb
mov
add
repz
cmp
mov
mov
out
out
jo
jl
xchg
adc
ljmp
pushf
test
loope
adc
lret
lods
dec
les
addb
shrl
pusha
stos
mov
dec
lea
jle
fs
gs
in
movsb
cli
outsl
sub
add
mov
or
xorl
jns
sub
and
cli
jmp
mov
fldt
xchg
mov
pandn
jp
orb
xor
inc
jge
iret
push
cmp
jb
cmp
imul
push
mov
push
aam
xchg
push
sub
or
ja
mov
mov
push
lret
das
cmp
push
bnd
mov
test
mov
sbb
xchg
jne
adc
repnz
sub
push
jge
mov
or
and
pusha
sub
lcall
sbb
and
mov
inc
movsl
sub
sub
or
arpl
ja
and
pop
jp
clc
data16
not
or
aad
mov
xrelease
pop
xchg
cwtl
clc
dec
jle
xor
mov
sbb
xlat
jecxz
js
pop
das
pop
into
mov
dec
lcall
push
data16
sbb
jae
inc
out
addr16
int
mov
les
enter
aaa
push
inc
sub
shll
dec
into
int3
add
hlt
xchg
cmc
fnsave
xlat
pushf
shll
pop
jb
xor
aas
jbe
sbb
xor
pop
ljmp
pop
fildll
scas
mov
adc
dec
xor
xor
cmp
mov
movsb
push
xor
mov
pop
adc
pusha
fbstp
xor
push
imul
lahf
fcomps
test
addr16
test
bound
cli
jno
rcr
cmp
cmp
clc
adcb
cmp
pause
mov
cmpb
outsb
pop
dec
jp
nop
and
mov
std
test
pusha
sbb
stos
lock
mov
outsb
fstps
out
fldcw
lock
in
call
loop
inc
jbe
xor
xchg
les
cld
js
dec
scas
insb
adc
in
pop
mov
pop
fdivrs
loop
push
mov
imul
pushf
mov
fmull
pop
mov
mov
in
pop
insb
cmpl
shlb
adc
mov
xchg
mov
dec
fcomip
out
cli
int3
ja
mov
lcall
pop
ljmp
mov
mov
push
das
mov
pop
imul
lods
pop
xchg
sub
dec
pop
mov
int3
cmp
out
xor
push
in
inc
jne
mov
stos
sub
movsl
cli
xchg
add
jle
inc
pop
fcompl
stos
mov
cmp
leave
inc
xor
pusha
sbb
outsl
cltd
cmpsl
cld
jns
into
sub
stos
xlat
pop
mov
daa
mov
mov
lea
movsb
bound
xchg
arpl
ljmp
or
adc
mov
sarb
test
aas
ja
sbb
pop
adc
dec
sbb
cltd
cmc
cmp
jecxz
add
dec
dec
jnp
xlat
sbb
loope
adc
mov
pop
test
adc
mov
mov
push
adc
inc
push
sarb
test
insl
jmp
mov
jge
sub
idivb
pop
or
mov
int
inc
inc
das
push
xchg
add
dec
add
fstl
out
ja
mov
push
movsl
xchg
and
cli
ret
push
sub
into
xbegin
pop
loop
notb
mov
and
icebp
and
push
mov
add
inc
cltd
jno
dec
loope
repz
push
xchg
push
pop
xchg
xchg
and
insb
mov
imul
add
pusha
stos
jae
icebp
adc
int3
call
mov
fstps
pop
cmpsl
test
adc
mov
push
cli
push
or
push
cltd
mov
arpl
lahf
xchg
lods
sbb
sub
popa
shrb
in
cltd
jne
xchg
cwtl
outsb
cld
movsl
popf
arpl
adc
scas
out
orl
jmp
add
pop
and
lret
cmc
dec
xchg
rcll
mov
testb
mov
fsubp
rorb
inc
mov
cmp
cmp
fisubl
cmpsl
mov
cmp
xchg
mov
sarl
lods
jl
stos
inc
sub
lds
fldl
xchg
jmp
dec
mov
xor
shll
scas
adc
xor
out
push
into
aaa
push
fiadds
shll
mov
fldcw
jns
out
pop
shlb
das
ja
cmc
aad
jae
mov
ljmp
push
cmc
call
add
lahf
andb
mov
fwait
jnp
cmp
fiadds
leave
mov
dec
mov
mov
shlb
sti
xchg
out
cli
cmp
sub
movsl
rolb
lss
xchg
sbb
fs
out
dec
int3
sub
sub
test
call
and
sahf
inc
movsb
inc
call
fs
cmp
int
mov
data16
inc
pop
imul
popl
pop
movsb
dec
pop
out
pop
je
inc
xchg
xor
or
ja
popa
imul
xchg
aaa
pushf
orb
aam
and
loop
sbb
stos
in
stc
fadds
ficompl
cli
mov
stc
push
push
sub
rcr
mov
lcall
andb
sahf
sub
mov
int3
sub
add
clc
push
and
dec
cmp
scas
lahf
sbb
mov
stos
leave
mov
dec
mov
xor
push
pop
scas
xor
sub
cmp
push
repz
gs
xchg
jns
addl
mov
into
cmp
inc
pop
insb
sbb
mov
inc
fbstp
in
mov
dec
dec
xchg
mov
jp
mov
sbb
dec
lds
or
je
or
stc
pop
xor
jl
jmp
lret
cmp
mov
lret
pop
int
mov
stos
xor
scas
sub
fcomps
inc
daa
ror
or
mov
fwait
push
shrb
mov
rolb
mov
adcb
cli
cmp
test
out
nop
push
jns
jl
inc
ds
sub
adc
ret
adc
adc
sub
xor
jb
dec
add
or
inc
jle
push
iret
mov
pop
sahf
loopne
sbb
jge
test
adc
mov
bound
mov
xlat
mov
stos
out
pop
mov
lds
mov
push
mov
xchg
nop
mov
mov
call
and
adcb
mov
call
adc
inc
dec
adc
je
dec
daa
xchg
push
clc
cmp
fstps
rorl
xor
xchg
add
inc
pop
jo
outsb
imul
test
sub
rcrb
cs
mov
bound
xchg
call
scas
jle
data16
int
sub
fs
dec
mov
outsb
js
mov
outsl
sub
call
rcr
inc
inc
dec
orl
aad
fstpt
jge
push
sbb
mov
xchg
iret
push
je
mov
xchg
pop
outsb
mov
cs
shll
out
sub
rcr
sti
ret
mov
scas
inc
mov
dec
push
pop
mov
pop
or
lods
mov
and
jno
pop
imul
stc
jb
jp
mov
scas
and
out
ljmp
lods
mov
mov
mov
lret
sub
mov
loope
in
jae
adc
decl
mov
in
xor
ljmp
cmp
sbb
mov
add
lds
and
std
xor
xor
sahf
orl
orb
cwtl
cwtl
cld
adc
ret
fidivrs
add
adc
xchg
leave
std
push
xor
movsb
inc
or
lods
scas
cmp
mov
or
fwait
jns
xor
sub
into
push
mov
cmp
xor
cmp
out
cmpsb
sub
add
inc
pop
out
mov
stc
leave
loopne
outsl
or
mov
pop
pop
push
cmp
inc
lods
add
inc
fstps
insb
lock
jbe
out
cmp
sub
xchg
mov
jns
push
mov
cmp
mov
bswap
jl
mov
popf
jo
addr16
mov
sbb
leave
aad
xor
gs
push
outsl
inc
inc
mov
jg
xlat
mov
out
xchg
shlb
xor
lahf
les
jns
inc
repnz
xchg
leave
popa
addl
lods
or
sub
xchg
mov
rcrl
mov
push
out
loop
adc
mulb
push
adc
enter
mov
push
call
in
jecxz
mov
in
mov
loopne
outsb
pushf
leave
mov
push
aas
test
or
cltd
insl
push
int
push
jae
pop
mov
aam
xor
cmpsb
xor
xchg
inc
popa
inc
cmp
xchg
repnz
into
push
out
or
push
xchg
mov
xchg
sarb
adc
ja
xchg
mov
push
in
or
jb
jnp
jle
and
sahf
push
and
inc
push
scas
jns
fsubs
pop
scas
fcompl
mov
in
mov
xchg
aaa
and
cld
xchg
inc
enter
jmp
stos
mov
lret
inc
jno
and
jnp
in
inc
mov
roll
jbe
add
sbb
mov
mov
aad
or
testb
leave
dec
or
dec
xchg
fs
jecxz
xor
fstl
inc
cmp
fldcw
and
fidivs
dec
test
outsl
push
and
lds
inc
call
cmp
lods
mov
pusha
push
pop
scas
xchg
mov
btc
dec
inc
test
cs
adc
nop
mov
shll
adc
jp
mov
shll
mov
mov
mov
out
int3
push
jne
push
and
xor
cltd
xchg
mov
adc
addr16
sbbb
xor
subl
inc
pop
cmp
adc
bound
iret
ret
pop
xchg
and
add
push
pop
push
test
int
outsl
jge
and
mov
xor
out
pop
xchg
xchg
jle
sti
imul
dec
les
xchg
dec
adc
mov
mov
adc
arpl
popa
mov
fcmovnb
cmp
sub
lea
mull
push
add
jmp
mov
js
lahf
cmp
gs
add
imull
or
loopne
sub
jbe
or
stos
xchg
ja
mov
sub
pop
sub
or
pop
add
mov
arpl
push
inc
cwtl
mov
loope
pushf
aaa
inc
sar
lds
push
in
mov
add
js
call
rolb
jecxz
fs
sub
arpl
adc
lds
mov
enter
cmp
shlb
int3
mov
fs
data16
jbe
push
je
sbb
or
mov
test
jae
std
stc
clc
aas
mov
aad
add
add
dec
sbb
cli
mov
dec
mov
add
rcl
mov
out
arpl
aaa
push
dec
in
xor
push
filds
inc
lret
xor
inc
js
sbb
rcrl
jne
shrl
mov
mov
push
push
lahf
fisubl
insb
popf
lret
enter
adc
push
addr16
dec
xchg
jnp
inc
movsb
test
lea
xchg
adcl
push
sbb
push
call
std
add
fistl
xor
fmuls
mov
pop
mov
mov
jne
xchg
sub
in
loopne
jg
hlt
in
incb
xchg
push
push
lret
or
in
mov
mov
mov
outsl
push
ja
mov
popa
shr
out
leave
js
rorl
icebp
inc
popa
inc
mov
in
jecxz
adc
js
xchg
push
push
xchg
stos
mov
mov
push
pop
mov
mov
call
fdivrp
repnz
scas
cwtl
add
pusha
bound
adc
sub
adc
mov
jge
out
jg
dec
mov
in
and
mov
jp
in
xor
push
push
mov
out
cmp
sbb
repnz
aam
sub
xchg
adcl
xor
xchg
popf
xchg
shl
jb
cmp
lods
shll
jbe
dec
loop
fildl
sub
mov
or
xchg
scas
lods
mov
jmp
pop
in
xor
stos
sti
call
push
gs
rcll
mov
repz
out
mov
out
aaa
push
fdivp
jge
add
rcll
aas
outsb
xchg
sub
out
mov
outsl
xchg
sbb
jmp
in
cld
scas
or
repz
sub
aad
jle
enter
cmp
push
dec
outsb
cmpsb
sbb
sbb
fwait
or
adc
add
adc
popa
inc
pop
test
movb
adc
push
inc
and
repz
test
mov
push
dec
jnp
push
or
push
add
and
ds
aaa
sub
mov
jle
inc
out
rcrb
iret
mov
jbe
loop
jns
sub
les
js
or
push
insb
pop
cmpsl
cmp
xchg
mov
add
sub
or
test
inc
fstpt
call
push
mov
fwait
mov
push
jl
lock
or
fwait
sbb
push
sub
pop
dec
mov
sbb
xor
sub
fxam
inc
clc
lods
push
mov
insl
imul
call
in
das
test
lret
jp
push
ljmp
xor
inc
aas
divb
adcl
add
dec
dec
xchg
adc
mov
addr16
add
ret
ret
jns
stc
push
xchg
cmp
mov
divb
inc
or
repz
neg
adc
jb
add
push
stos
in
shrl
add
dec
cmpsb
lds
ja
sbb
outsb
and
xlat
out
in
out
pusha
or
mov
jmp
inc
call
mov
mov
enter
jecxz
xor
push
add
cmpsl
mov
sahf
dec
mov
adc
insl
arpl
dec
mov
pop
pop
out
add
iret
scas
or
adc
aad
mov
push
or
jns
sbb
push
adc
xor
repz
jns
rcrl
jb
pop
or
stos
imul
cwtl
mov
mov
add
adc
imul
test
stos
or
sbb
dec
mul
inc
xor
jp
pop
icebp
mov
sbb
adc
xchg
hlt
or
push
mov
xor
sbb
cltd
xor
sbb
adc
in
lods
imul
mov
test
enter
arpl
xchg
dec
xor
ficompl
enter
pop
jne
jle
xorl
bound
add
cltd
out
cli
into
push
jo
int3
cwtl
stc
push
bound
mov
in
jg
dec
pop
inc
add
xorb
mov
pop
lods
mov
adc
shll
or
cwtl
xlat
or
dec
pop
xchg
test
mov
or
mov
mov
jnp
jb
and
cmp
fstpl
jle
decb
jecxz
fwait
rcrl
xor
es
or
mov
testl
jae
and
or
jg
andb
jns
jne
push
out
sub
mov
mov
jp
cmp
fnstsw
mov
rorl
cmp
dec
popf
push
shl
cmpsb
inc
iret
jb
mov
push
test
call
mov
cmp
lret
or
aam
mov
inc
fmull
in
add
mov
pop
clc
mov
and
pop
push
cmp
add
add
iret
imul
adc
jo
jmp
sti
fistl
repz
rcll
mov
lret
stos
inc
adc
sbb
mov
xchg
inc
loope
mov
out
sbbb
frstor
ss
push
cmp
add
fwait
xchg
and
ss
xchg
neg
scas
xor
sbb
fcomps
jns
or
mov
or
aam
mov
add
xchg
or
pop
push
leave
adc
lock
dec
push
iret
jo
mulb
dec
decl
lods
and
and
mov
xchg
enter
pushf
adc
dec
or
xlat
pop
xchg
add
adc
daa
mov
sbb
std
inc
stos
lret
test
call
in
and
out
pop
dec
sbb
lcall
insl
pop
aaa
jbe
xchg
stc
fcoms
or
push
lahf
daa
gs
sbbb
std
lahf
jg
fildll
pop
cmc
jg
and
idiv
std
mov
lods
fcomps
fidivrs
xor
mov
xchg
xchg
or
int
pop
das
cmp
out
addb
insb
addr16
pop
inc
push
or
in
sub
and
pop
clc
mov
data16
pop
or
imul
jb
movb
jp
dec
sub
popa
cli
mov
test
push
pusha
lods
mov
imul
adcl
aas
xchg
mov
fnstsw
cmp
push
fdivp
push
add
mov
ljmp
in
adc
add
ds
fwait
inc
pop
sbb
fwait
enter
mov
repnz
add
pop
dec
adc
fwait
mov
in
push
push
jp
jp
inc
cmp
adc
pop
pop
pusha
insl
not
cwtl
lods
call
or
push
aam
mov
pop
fwait
dec
mov
push
and
cli
sbb
negb
inc
xor
mov
mov
inc
cmp
pop
rorl
insl
mov
dec
lret
outsl
xchg
mov
adc
nop
repnz
hlt
into
push
shrb
bound
jne
insb
data16
mov
xchg
push
clc
sub
int
push
repnz
push
notl
repz
jmp
clc
pop
xor
movsb
jg
jae
es
in
adc
sbb
mov
popa
xor
mov
cmp
mov
lcall
sti
adcb
enter
xchg
sbb
js
pop
gs
mov
pop
addr16
xor
dec
pop
inc
jle
cmp
call
fisttpl
xor
add
ss
jmp
xchg
push
in
and
and
es
push
cwtl
repz
pop
jae
cltd
push
lret
sarl
mov
stc
mov
xchg
mul
pop
push
daa
mov
cmp
mov
mov
push
fcompl
lds
mov
test
repz
iret
and
outsb
out
test
xor
mov
push
or
pop
xorb
aam
mov
ret
mov
and
psadbw
cmp
sbb
fists
outsb
mulb
sub
jno
loope
mov
popa
orb
ret
int3
call
lea
sbbb
leave
dec
adc
or
mov
jo
cmp
repnz
repz
outsb
mov
daa
fisttps
test
jo
pop
sbb
dec
daa
jbe
out
daa
and
jmp
lock
scas
push
loope
jae
xor
push
inc
int
push
adc
add
nop
hlt
adc
rcrb
cmp
pop
cmp
jmp
sbb
xchg
push
pop
mov
rcl
fisubl
jnp
sbb
and
sbb
fcompl
mov
pop
ja
xchg
mov
filds
and
add
dec
mov
lock
xchg
push
movsb
inc
dec
jg
pop
bound
inc
jbe
xchg
ljmp
xlat
cli
or
movsl
dec
std
out
mov
or
xchg
add
push
inc
repnz
jnp
push
jmp
add
cmp
pop
jp
into
xor
add
les
or
mov
push
mov
imul
mov
cs
xchg
arpl
js
mov
int3
or
das
iret
cmp
jp
mov
xchg
nop
push
sbb
fstpl
push
jp
daa
fimuls
out
add
mov
rcrl
dec
jmp
dec
arpl
sbb
fucomi
mov
mov
pop
push
iret
andnps
adc
pop
into
cmp
or
movsl
lods
jb
xor
aaa
outsl
hlt
adc
bound
rcl
push
add
add
imul
sub
push
push
pop
mov
aaa
cmpsb
sub
es
mov
movsl
xor
mov
push
rcl
icebp
fnstsw
inc
or
mov
xchg
testb
sub
mov
mov
jns
sbb
xchg
pop
inc
mov
jo
dec
fbstp
jne
dec
outsb
push
inc
and
push
xchg
fs
bound
into
ja
adc
jnp
movsb
inc
dec
cmp
xor
mov
push
sbb
dec
dec
mov
aam
push
and
daa
jae
xchg
test
push
adc
hlt
ret
and
bound
pop
int
fnstcw
sti
mov
hlt
lret
sub
mov
xlat
arpl
and
es
icebp
fdivrs
cli
pop
inc
imul
sub
pop
cwtl
push
sti
xchg
subb
dec
mov
inc
xlat
scas
incb
and
sub
jle
xchg
rolb
ss
mov
jl
ss
mov
les
aad
mov
jl
mov
test
sub
orl
sub
iret
jne
enter
je
sub
cmp
push
or
mov
in
out
stos
and
shrl
nop
mov
pop
pop
adc
repnz
fcomip
int
adc
fcoml
mov
jp
loopne
push
sbb
pop
in
jns
dec
pushf
int3
mov
and
jbe
inc
cmpsl
dec
iret
lods
dec
jbe
xchg
sbb
inc
adc
cwtl
sti
mov
int
insb
xchg
xchg
lret
sub
push
or
ds
in
dec
fwait
jno
imul
sbb
es
fidivrl
scas
xchg
ror
movsl
mov
shrl
cmp
shrl
stos
pop
pushf
mov
or
sub
and
stos
pop
cmc
xor
icebp
std
mov
xor
jns
mov
adc
les
mov
dec
sahf
sub
out
sub
dec
jbe
stos
loop
inc
rcll
adc
nop
scas
xchg
or
dec
push
movsl
enter
out
mov
sbb
inc
in
hlt
iret
xlat
cmp
mov
data16
mov
ss
xchg
fnstsw
in
add
cmp
inc
int3
sbb
cmpsb
jge
cltd
mull
loop
pop
pop
pop
mov
xchg
out
dec
dec
add
mov
in
scas
inc
push
push
sub
cld
lods
test
sti
xchg
xchg
shlb
mov
outsb
jl
mov
pop
in
push
and
jl
sub
shlb
repz
mov
jne
xor
into
sub
sbb
and
jns
subl
aad
movsl
inc
shrl
movb
std
dec
loopne
pop
rcll
inc
iret
popa
cmp
mov
xchg
adc
jecxz
cmp
test
fs
iret
push
sub
cltd
test
pop
mov
call
add
jo
repz
dec
push
mov
scas
popa
mov
ds
lds
jmp
push
jo
mov
lds
test
xor
jl
add
jbe
nop
xchg
mov
and
mov
jno
xchg
in
pop
push
lcall
xchg
lods
mov
idiv
fnop
mov
loopne
push
push
lahf
pop
mov
cmpsb
pop
sbb
and
sub
out
aaa
dec
add
pop
mov
call
inc
scas
outsb
add
inc
jge
movsl
sbbb
decb
out
xor
jp
lock
mov
fdivrl
imul
ds
push
mov
fimull
dec
mov
jge
xor
dec
jbe
jmp
std
or
lea
out
push
inc
popf
xor
lods
mov
adc
andb
repnz
mov
jl
cmp
ljmp
and
and
sub
inc
inc
mov
push
roll
es
mov
dec
in
pop
xor
xor
adc
sti
mov
push
push
fs
stc
into
outsl
pop
in
cmp
stc
push
push
inc
jl
lock
push
in
les
push
dec
test
sub
jg
ss
repnz
push
fiaddl
testb
or
stos
xchg
cmp
mov
or
add
jge
cmp
lods
cmp
aad
mov
xchg
push
pop
ss
loop
pop
mov
mov
loopne
mov
ret
nop
outsb
loop
lock
xor
adc
mov
mov
add
jns
call
andps
aam
scas
push
loopne
cmp
dec
pop
ret
scas
push
sbb
sbbb
cmp
cmpsb
mov
mov
mov
jmp
test
rcr
popf
jp
xchg
mov
xor
add
out
and
stos
movsb
cmp
mov
movsb
jbe
subb
nop
jp
jecxz
imul
popf
ljmp
gs
push
insl
call
xlat
lods
sub
add
push
sbb
pop
push
xchg
lods
jnp
out
cmp
and
out
dec
inc
scas
push
mov
add
mov
add
fisttps
inc
cld
hlt
aad
xor
sbb
imul
pushf
gs
ja
int
in
ljmp
mov
fsubr
add
mov
pop
int
imul
or
shlb
mov
fxch
es
jno
xchg
bound
push
hlt
mov
cmc
mov
shlb
jno
clc
pop
dec
pop
mov
push
cld
cli
xchg
inc
in
lea
rcll
sbb
pop
sbb
mov
ss
movsb
adc
add
sti
lods
jp
hlt
adc
dec
in
ret
shrl
addr16
ret
xor
scas
push
jae
push
mov
das
xchg
insl
inc
mov
out
adc
adc
cmp
fcoms
add
xchg
ljmp
sbb
stc
xlat
cmpsb
xlat
push
inc
shll
sub
std
fs
xor
out
add
sbb
ja
scas
xor
in
push
and
loope
dec
lret
xor
inc
and
push
mov
in
cmp
icebp
nop
popf
stos
daa
js
dec
lods
imul
call
sbb
jg
je
pop
mov
add
or
push
xchg
nop
fcoms
pop
mov
lahf
imul
dec
in
push
pop
out
sahf
jmp
lock
jp
aad
dec
aas
jb
popa
sub
xchg
adc
inc
mov
xor
jns
inc
mov
dec
jp
adc
ljmp
xor
imul
ror
sbb
leave
lods
jb
mov
in
ret
cwtl
push
jnp
sti
addr16
xor
roll
xchg
fwait
sbb
mov
jge
insb
inc
pop
iret
push
mov
mov
lret
icebp
lea
inc
cmc
mov
xchg
cmp
cs
mov
xor
in
cmp
dec
je
push
jno
mov
pushf
or
mov
int
jb
lea
xchg
jg
xchg
xchg
adc
dec
xchg
ja
adc
dec
pop
test
xchg
movsl
js
bound
stos
addr16
xchg
ret
ja
fisubl
xor
xor
push
cmp
das
fnsave
adc
pop
dec
cmp
mov
out
mov
pop
imul
xchg
jecxz
ljmp
xor
cmp
adc
adc
push
or
pop
dec
jge
cmp
or
cmp
mov
imul
cmp
mov
leave
outsl
jbe
into
pop
mov
insl
negl
inc
adc
pusha
adcb
stc
scas
mov
sub
xchg
pop
sub
inc
adc
imulb
cmc
dec
pop
insl
imul
data16
and
sub
xchg
inc
jmp
add
ja
xor
push
xchg
stc
mov
cmp
lds
mov
inc
xor
dec
outsl
test
xchg
inc
adc
les
arpl
or
cmp
int3
test
and
pop
mov
lods
scas
dec
in
mov
dec
jae
bound
rcrb
sbb
push
and
pusha
add
lds
popa
repz
inc
or
xchg
pop
sti
dec
mov
subb
inc
sbb
ds
into
inc
outsb
pop
fwait
mov
outsb
scas
jno
aad
mov
sbb
jge
xchg
nop
sarb
jne
mov
xchg
repz
mov
lret
sbb
mov
ret
bound
call
push
aas
mov
in
mov
fstl
hlt
sti
subl
fwait
out
popa
fs
adc
clc
andl
shll
loope
lcall
and
lea
aam
pop
xor
push
inc
xchg
scas
mov
repz
adc
imul
jl
repz
push
sbb
ss
call
ret
stos
mov
enter
insb
sahf
add
and
outsb
dec
xchg
push
lods
cmp
into
push
stos
mov
push
cmp
lcall
xor
outsb
xor
lcall
jae
aaa
pop
mov
dec
imul
add
sub
inc
sbb
rorb
in
add
in
popf
mov
adcb
js
and
jno
movsl
sbb
push
dec
int
cs
push
rolb
mov
mov
ss
mov
scas
mov
xchg
push
scas
sub
lods
sub
jo
mov
push
subb
cld
pop
push
dec
pushf
ficompl
shll
cmpsl
xor
cmp
loope
push
roll
int
xchg
add
lahf
frstor
popf
loop
and
and
scas
adc
dec
dec
ret
je
mov
dec
ret
in
and
stc
inc
cmp
test
push
test
outsl
mov
addl
stos
add
mov
mov
outsb
pop
or
dec
pop
cmpb
pop
or
sbb
cmpsb
pop
mov
xorb
ds
gs
push
mov
jp
cmpsl
adc
int3
lock
pusha
mov
ja
ficoms
inc
pop
xor
inc
xchg
xor
imul
mov
mov
push
dec
adc
push
xchg
pusha
sti
xchg
nop
xchg
cmp
lods
sub
jo
cmpsl
pop
xchg
lahf
int
jl
mov
mov
leave
sbb
mov
adc
lahf
cmp
mov
push
sbb
sbb
gs
mov
mov
sub
fld1
mov
ret
mov
ja
enter
jns
mov
add
add
dec
inc
jp
push
sbb
js
and
scas
dec
pushl
decb
test
and
outsl
add
mov
cmp
in
iret
in
push
loope
xchg
scas
jp
addr16
and
sbb
arpl
gs
xchg
xor
pop
scas
or
sbb
aam
enter
jno
hlt
xchg
xor
nop
es
xchg
jp
adc
lods
adc
adc
xchg
test
jge
push
in
in
pusha
popa
mov
shlb
sbb
push
cld
xchg
xor
push
jp
test
popf
out
sbb
push
loop
pop
jb
or
loopne
fldenv
sbb
cmp
loopne
jp
mov
cmp
lds
out
adc
rorl
daa
sub
rcrb
dec
popa
js
je
sub
push
cmpsl
mov
mov
xchg
push
or
test
push
sbb
scas
and
lods
lds
aaa
insl
loop
sahf
xor
jne
xor
pop
mov
ljmp
lret
rorl
adc
adc
sar
lret
and
xchg
loop
repnz
jo
mov
lret
dec
jb
dec
and
loope
addr16
mov
enter
push
mov
adc
pop
sti
shr
mov
cld
sarl
and
movsb
sbb
fldt
or
dec
or
jb
data16
dec
xchg
ficompl
xor
ret
sub
cmp
or
cmp
lods
jns
dec
mov
and
pop
mov
imul
add
push
test
push
out
adc
push
lea
bound
jg
cld
clc
mov
mov
jp
cld
xchg
movlps
mov
cs
xor
dec
push
lcall
mov
and
jno
jo
mov
mov
jne
jp
inc
push
xchg
mov
xor
cmp
sbbl
test
lret
lcall
jno
fldl
mov
add
mov
ds
test
icebp
pop
stc
loope
xchg
mov
shl
jno
outsl
pushf
mov
pop
pop
or
mov
inc
xchg
sub
jne
or
test
cpuid
xchg
sbb
daa
sbb
pop
fdivr
pop
cmpsb
mov
push
sub
push
mov
mov
call
pop
pop
and
gs
sub
and
add
pop
inc
mov
cmpsb
sub
ds
push
adc
ficompl
jb
js
outsl
lcall
pop
jae
jno
fstl
mov
adc
xor
dec
leave
sbb
jge
add
cmp
shr
or
js
jbe
ja
test
adc
or
and
enter
jge
xchg
pop
xchg
enter
fcmovne
mov
adc
xor
jns
rep
inc
aaa
mov
jge
jns
jmp
pop
or
and
xchg
add
test
xchg
roll
scas
mov
stos
or
jae
adc
cli
xorl
mul
je
lret
inc
data16
bound
or
adc
or
cs
mov
inc
jle
mov
dec
push
lds
icebp
push
xchg
add
insl
mov
vmovd
xchg
jno
xor
cs
xor
out
jns
push
sbb
notb
in
rorl
inc
sub
add
mov
repz
or
into
mov
jecxz
jbe
lea
data16
sbb
test
dec
daa
loope
mov
inc
adc
push
dec
and
jne
jno
aas
dec
push
or
pop
int
mov
ss
in
outsl
in
sbb
ret
pop
and
push
mov
out
mov
xchg
xchg
inc
iret
cli
jb
outsb
dec
xchg
push
shl
fwait
mov
mov
stc
orb
mov
adc
stc
out
out
sub
push
and
enter
lea
or
leave
iret
enter
es
add
xchg
and
push
xor
inc
jmp
shl
sub
movsl
dec
pop
fmul
or
sbb
adc
and
or
push
lret
ja
mov
js
jge
dec
dec
inc
mov
cwtl
mov
arpl
push
cmp
jne
imul
ret
call
mov
adc
sub
stos
aad
sbb
cmp
dec
ficoml
jno
sub
decl
jmp
out
dec
and
loopne
adc
pusha
imul
xor
ret
pop
inc
bound
dec
ja
and
in
push
cmc
and
add
inc
push
cltd
sub
bound
push
mov
inc
out
pop
and
adc
push
dec
sub
inc
in
pop
iret
and
rorl
dec
xor
imul
jp
mov
xchg
cmp
inc
jg
xchg
ljmp
fadd
cmc
sahf
jl
ss
ficomps
mov
fstl
push
adc
or
add
out
popl
ja
pusha
dec
in
inc
dec
sti
adc
push
or
pop
mov
cmp
iret
sti
cltd
ljmp
xchg
aad
and
lock
adc
xor
jbe
scas
push
dec
add
xchg
jno
jo
xchg
lock
pushf
bound
inc
mov
fidivl
andb
and
or
push
fcmovne
mov
mov
inc
xchg
jbe
out
push
cmovo
rorb
or
mov
pop
stos
lahf
aaa
icebp
clc
sarb
mov
bound
dec
rol
sbb
call
mov
out
loope
cmpsl
ljmp
imul
add
xchg
outsb
mov
lret
lret
push
fidivrs
decb
add
jle
or
arpl
jecxz
push
lcall
cmc
dec
gs
movsl
mov
push
dec
xchg
xchg
sub
int3
dec
insl
dec
xchg
loop
shll
aas
testb
dec
fdiv
popf
stos
aad
ss
and
lods
fistpl
fsubrs
xor
xchg
xchg
add
dec
xor
cmpsl
pop
jo
mov
xor
cmp
test
mov
xchg
adc
push
loope
mov
mov
cmp
push
xchg
ja
imul
mov
pusha
daa
icebp
rorb
ja
aaa
fbstp
jbe
enter
jecxz
pop
mov
dec
mov
adc
or
pop
and
dec
sub
inc
or
icebp
jecxz
outsl
scas
pop
pop
xchg
movsb
inc
push
inc
sbb
xchg
add
nop
jo
and
shl
dec
xchg
and
rclb
fiadds
pop
push
adc
js
int3
adc
and
pushl
mov
pop
and
push
pop
inc
add
arpl
or
out
push
scas
mov
hlt
pop
cmp
lahf
xchg
or
cmp
jge
push
xchg
xor
stos
jp
mov
test
call
into
xchg
sub
jp
sbb
pop
gs
test
adc
sbb
cs
push
inc
out
dec
xchg
cmpsb
jg
cmpsl
cvttps2pi
call
pop
xchg
jge
pop
shr
out
jae
cltd
jmp
ja
imul
les
or
dec
push
pusha
fcomip
jno
imul
lods
pop
daa
inc
jne
mov
xor
pop
jge
sahf
xor
and
leave
cld
xchg
test
push
in
fimull
out
into
fisttpl
xchg
loopne
xlat
mov
sub
pop
leave
stc
push
call
ja
sahf
xchg
push
fxch
repz
sbb
shr
outsb
es
stos
push
arpl
adc
mov
mov
xchg
gs
repz
imul
push
pop
sub
rcl
push
adc
xor
lock
lret
outsl
sub
cmc
aas
and
loope
jmp
and
xchg
jp
add
cmp
sub
fbstp
mov
xchg
pop
sub
push
orb
int3
adc
in
pop
push
adc
in
add
cmpsb
jle
xchg
and
into
pop
xor
pop
hlt
xchg
out
or
xchg
jo
push
arpl
bound
movsl
daa
push
lret
out
pop
xor
enter
mov
bswap
setge
sub
out
test
or
or
roll
stos
cltd
bound
inc
shl
in
jno
push
and
xor
jecxz
pop
das
xchg
jp
sbb
shrb
mov
pop
dec
pop
cli
roll
sbb
and
mov
sahf
jle
mov
pop
push
dec
roll
xchg
rorl
fmul
fisttps
sub
mov
test
mov
lret
loopne
push
pop
and
pop
or
cmp
jb
mov
sub
push
mov
sub
cmpsl
std
jp
in
sbb
jne
sbb
cmpsl
test
add
cmp
shrl
xor
cmp
loop
aaa
and
imul
ljmp
push
int3
or
adc
rorl
dec
xor
mov
stos
sub
xchg
inc
test
gs
push
leave
lcall
fiadds
dec
add
sti
xchg
xchg
xchg
loopne
loopne
lds
aaa
test
fstpt
ret
adc
push
out
jmp
push
mov
cwtl
push
in
xor
and
pop
dec
jae
icebp
shlb
mov
push
pop
jl
jl
sub
sbb
int3
cmp
aaa
std
outsb
call
imul
push
add
sub
loop
inc
pop
xchg
out
rolb
cli
mov
lds
adc
scas
and
pushf
rcrb
mov
aam
or
fwait
lahf
pop
mov
int3
cmp
push
xor
and
or
adc
inc
in
add
cmp
and
std
mov
and
xchg
adc
mov
call
cwtl
dec
sub
jne
jmp
cmpl
cmpsl
dec
jbe
mov
lock
shrb
sbb
jns
push
mov
mov
iret
inc
daa
sub
cmp
inc
hlt
jl
movsb
insl
and
loope
jmp
in
hlt
push
test
sti
movl
sbb
in
sub
cmp
mov
dec
adc
pop
mov
jbe
into
add
dec
cs
test
mov
sub
xchg
sub
pop
cmp
mov
pop
sbb
push
push
cld
inc
lods
and
pusha
inc
popf
push
movsl
out
and
repz
outsl
cs
jmp
jnp
aam
push
ret
jge
dec
push
lahf
test
xchg
sbb
stc
fistps
cmp
out
jo
fstpt
movsb
and
xor
movsl
add
popf
and
jecxz
fnstcw
push
lcall
aas
push
in
inc
into
lret
mov
test
arpl
andb
into
in
push
imul
dec
movsb
jg
xchg
cmpsb
inc
xchg
mov
cli
mov
inc
iret
sub
mov
xor
imul
jae
insb
fistpll
nopl
nop
and
and
in
stc
pop
fistpl
gs
js
jno
orb
cmp
mov
mov
or
pop
xchg
fistl
fsubl
std
cmp
add
xchg
cmp
mov
xchg
xchg
cmp
jg
xchg
iret
fisubrl
xor
cs
popf
pop
lret
inc
lods
and
pop
int3
xor
jo
or
stos
adc
icebp
xchg
clc
testb
rcrl
testb
pop
sti
adc
stos
shr
inc
sbb
xor
xor
mov
ljmp
sbb
push
cmpsl
dec
adc
xor
dec
add
idivl
and
int
sbb
cmp
popl
loopne
add
int3
add
repz
jnp
add
ret
xor
xchg
lret
int3
xchg
pusha
sbb
idiv
sub
lods
and
inc
xlat
xchg
or
pusha
inc
bnd
or
subb
pop
jne
outsl
test
lret
and
addl
jge
roll
xchg
push
test
jnp
jmp
sub
xchg
inc
cmp
mov
xchg
pop
pushf
lock
insl
loopne
cltd
daa
stos
ret
stos
xor
inc
bndstx
push
scas
shll
push
sub
push
les
popf
jns
pop
fwait
xor
ret
test
repnz
nop
stc
insb
mov
mov
out
push
push
inc
ficomps
sbb
push
fwait
or
xchg
insl
into
mov
pop
subb
bound
jae
pop
dec
in
ret
dec
icebp
dec
fs
jg
jo
ds
push
sub
inc
testl
inc
cmp
mov
or
cli
pop
loopne
sbb
lock
lods
pop
mov
xchg
ja
inc
mov
aas
lret
add
pop
test
test
xchg
in
or
shl
stos
jmp
lds
jbe
dec
mov
dec
cmp
mov
jp
ljmp
mov
cmp
pop
pop
mov
lock
imul
cmp
clc
cli
and
lahf
mov
mov
iret
push
push
leave
stos
sbbb
in
xchg
dec
dec
test
sahf
add
cld
sub
sbb
xchg
mov
insb
notl
fstpt
mov
orb
stos
cs
jns
mov
mov
adc
push
out
test
push
push
sti
fwait
push
sti
andl
sti
ret
outsb
dec
movsl
mov
or
xchg
add
cmp
fistps
or
xor
and
xchg
xchg
mov
xchg
inc
je
mov
jge
mov
fdivr
push
je
push
mov
lcall
add
and
bound
push
xchg
push
lock
js
out
insl
icebp
mov
mov
and
outsb
addr16
jne
sbb
and
js
fwait
add
adc
sub
cmp
scas
mov
dec
jge
fidivl
out
mov
lock
lret
pusha
jae
stos
shl
and
jne
or
pop
mov
xchg
cmc
mov
and
cmpsl
or
rcrl
inc
jbe
jg
push
mov
inc
pop
jl
fstps
mov
mov
lds
dec
test
imul
in
ror
or
pop
ja
insb
incb
sbb
mov
inc
lods
popa
shr
pushf
loop
stos
mov
aad
xlat
or
fstps
or
mov
cmp
xlat
bound
push
in
add
inc
dec
stos
mov
sub
test
xchg
fistpll
adcb
and
lock
mov
cmp
add
pop
ret
mov
rcrl
xchg
out
lret
rol
push
cmpsl
jns
decl
add
cmp
jo
pop
in
icebp
icebp
add
inc
addl
adc
int3
pop
incb
iret
mov
scas
fistl
adc
dec
das
das
dec
insb
inc
cmpsl
lret
fucomp
jle
xchg
push
je
sub
pusha
pop
xchg
in
pop
imul
jne
mov
aam
and
sub
divb
cmp
daa
das
dec
outsb
stos
cwtl
stos
jae
and
cmp
fbld
je
mov
incb
stos
arpl
cmp
das
gs
cmp
cmp
sarb
inc
dec
mov
icebp
xor
mov
add
push
ret
mov
mov
scas
popf
xchg
idivl
cmp
or
xor
lcall
test
aas
xchg
and
andl
push
sbb
inc
call
sbb
inc
hlt
mov
rolb
test
mov
cmpsb
in
pop
adc
mov
rcrl
jo
cmp
or
or
scas
push
xchg
jle
pop
sbb
sub
xor
cmp
and
or
pop
push
jne
cmp
dec
pushf
int3
push
jne
inc
and
lods
out
scas
add
or
fnstenv
xchg
cs
inc
dec
lock
es
or
dec
add
popf
xchg
sbb
in
push
je
and
test
das
fs
fwait
mov
insb
repz
imulb
mov
mov
push
sub
and
mov
push
xor
cld
enter
sub
repnz
and
seto
cld
popf
inc
cmp
lcall
out
jg
mov
pop
xlat
decl
flds
shll
divb
jge
add
cmp
fcmovb
cmpsl
je
cmp
push
addr16
mov
aas
fnclex
ljmp
xlat
enter
enter
out
push
push
pop
sbb
imul
push
inc
je
imul
in
insl
pop
outsl
test
add
je
cmp
mov
ret
dec
sahf
sahf
adc
arpl
xor
shrb
jl
mulb
hlt
jno
or
jge
xchg
out
repnz
xor
popf
push
or
xchg
mov
imul
inc
inc
xchg
sub
jae
mov
and
xor
push
add
inc
mov
push
ljmp
stos
inc
pop
clc
lea
imul
push
mov
xor
testl
jge
and
xchg
enter
fildll
push
pusha
pop
sbb
jne
mov
in
popa
icebp
xlat
push
imul
mov
adc
sub
in
loope
int3
scas
mov
sti
repz
inc
and
ret
aam
mov
jmp
cmpb
add
shrl
push
mov
lods
push
push
push
outsb
jae
and
leave
out
add
fisubrs
sub
and
inc
sti
sub
mov
mov
inc
push
imul
and
sbb
jecxz
adc
ficomps
and
mov
jb
adc
inc
mov
cmp
andl
xchg
cmp
sbb
into
movsb
xor
dec
into
adc
adc
repz
push
and
data16
ret
incb
jg
push
or
add
add
call
stos
jae
sbb
mov
js
push
popa
dec
cmp
gs
clc
mov
jmp
inc
xor
push
xchg
and
movsb
mov
jae
pusha
icebp
pop
push
sbb
mov
out
cli
pop
roll
or
dec
push
test
movsl
jae
sbb
push
into
aad
mov
ljmp
jl
fdivp
adc
xchg
and
ret
sbb
lds
dec
test
dec
leave
scas
rorl
push
testb
idiv
xlat
and
jge
scas
or
jns
add
test
xchg
cmp
mov
loopne
xor
repz
aas
rorb
push
sub
or
mov
jb
inc
add
pop
xchg
inc
and
loope
mov
fisttpll
lods
inc
pop
adc
dec
rcrb
mov
jne
xchg
cmp
iret
mov
or
dec
add
or
sahf
sti
ja
push
push
dec
and
jmp
fldenv
sbb
cmp
imul
stos
sbb
mov
jecxz
lea
cmp
scas
imul
cmp
out
xchg
adc
fisttpll
cli
cmp
cmp
sahf
jecxz
fs
or
dec
mov
mov
push
stc
xchg
push
mov
in
dec
xor
andb
in
hlt
in
jae
jle
cld
nop
ret
add
mov
mov
jle
js
inc
jge
push
cmp
xor
xchg
loopne
int
jle
mov
mov
mov
jno
cmpsb
out
shll
mov
inc
jno
pop
loopne
cmp
in
sti
stc
aad
fs
xchg
pop
cmc
add
inc
pop
dec
xchg
adc
int3
cmp
lret
in
adc
cmc
addb
push
call
test
subl
mov
popa
movsb
out
dec
ret
mov
and
add
jne
ret
push
jbe
pop
dec
leave
in
pop
cmpsb
nop
loopne
loopne
out
xchg
pop
mov
pop
stc
inc
mov
push
adc
or
imul
push
repz
cmpsb
dec
dec
and
jp
inc
pushf
js
or
dec
jnp
out
test
push
mov
inc
les
pop
fxtract
xbegin
add
dec
cmp
mov
push
xor
repz
ret
and
loop
mov
inc
mov
adc
xchg
movsl
mov
inc
lods
push
enter
out
or
data16
test
imul
test
lock
fs
dec
frstor
in
pop
or
lods
xchg
jbe
lock
call
in
mov
push
adc
mov
outsb
push
inc
mov
and
fistpll
sarl
add
pop
sub
popf
xchg
mov
aad
outsl
add
arpl
fstps
cmp
or
lcall
mov
shll
cmc
pop
push
mov
scas
sbb
push
out
sub
outsb
mov
repnz
push
imul
or
mov
jns
mov
ljmp
aam
popa
cld
andl
jge
jbe
or
add
adc
sarb
sbb
or
jns
shl
mov
xchg
mov
and
mov
sbb
gs
xchg
sbb
push
loopne
in
xchg
imul
test
xor
outsl
inc
fsubl
gs
cmp
out
lock
cmp
inc
push
cli
ds
flds
and
xchg
mov
xchg
adc
push
push
adcl
jb
jmp
mov
add
sub
push
iret
sbb
push
push
clc
jecxz
imul
popf
adc
xchg
jge
mov
mov
sbb
out
sti
and
add
xchg
pop
jge
mov
in
out
je
adc
jne
outsl
adc
xchg
faddl
xchg
mov
repnz
push
sbb
xor
js
add
add
lahf
and
cltd
aaa
lods
xchg
mov
scas
outsl
sti
pop
adc
sbb
lret
ljmp
mov
ss
inc
pop
mov
or
push
dec
out
enter
sbb
cmc
sub
push
cmpl
jo
jae
es
push
cmp
call
insb
shrb
sub
clc
fildll
xchg
fdivrs
data16
dec
add
jns
test
xor
cmp
insl
movsb
mov
push
mov
stc
sbb
iret
add
sbb
in
fidivrl
or
or
xchg
aaa
es
or
push
cmpb
aas
pop
mov
repz
clc
dec
pop
pop
mov
in
fcom
xchg
into
or
scas
ljmp
and
sub
insl
paddsb
lods
sbb
dec
dec
test
add
movsl
cmp
adc
jp
imul
cmp
sub
shlb
jnp
fcom
test
jo
jb
inc
andl
das
or
adc
movsl
pop
xchg
add
iret
call
or
out
inc
xorl
andb
pop
daa
loope
or
testb
dec
cmpb
inc
sub
ret
nop
in
push
dec
mov
loopne
pop
jno
inc
push
ret
jmp
inc
inc
mov
dec
jo
in
and
call
shll
xchg
ss
push
or
and
nop
stos
pop
jmp
add
cltd
scas
cmp
mov
xchg
ja
es
mov
sbb
jle
sti
adc
cli
push
cmp
bnd
in
jmp
inc
pop
push
jp
cs
cmp
dec
dec
jne
and
xchg
bound
sub
xor
cmpsl
push
dec
ljmp
daa
mov
hlt
repz
or
inc
pop
sarl
mov
xor
imul
std
enter
ret
rcrb
call
mov
ret
std
scas
sub
or
pop
sub
pop
test
jb
mov
sub
mov
jno
and
add
aas
ud0
out
xor
fs
inc
or
je
cmp
fxam
xor
jp
sub
mov
iret
xor
sbb
and
xor
lods
jle
push
dec
sbb
cmp
xchg
jg
mov
mov
ja
addl
movsl
mov
mov
out
mov
jecxz
and
jecxz
repz
icebp
adc
dec
popa
jecxz
cmp
push
jnp
dec
sbb
push
mov
push
ds
insl
or
adc
fs
mov
jne
sub
rorl
jae
fs
pushf
rcl
insl
fstp
pop
aam
and
jb
jnp
jae
push
js
cmp
inc
pusha
mov
and
int3
pop
rolb
push
int
ljmp
xchg
mov
dec
xlat
sub
cld
fists
flds
dec
or
rcr
inc
jo
cmp
push
pop
mov
les
ret
test
mov
add
icebp
inc
mov
inc
or
mov
imul
mov
adc
jbe
test
test
push
call
mov
dec
fnsave
bound
pop
sbb
sbb
jmp
loop
add
pop
mov
jle
mov
jecxz
sub
out
xor
mov
ja
sti
bt
mov
cmp
xchg
mov
das
xor
and
clc
pushf
mov
in
xchg
ret
adc
pop
sbb
cmp
out
sub
mov
xchg
ret
out
cmp
es
movb
fstl
mov
dec
or
mov
dec
or
pop
mov
mov
sbb
ss
mov
dec
lcall
daa
inc
fs
sbb
loope
mov
jl
fs
dec
scas
les
xor
test
data16
into
inc
inc
sub
popa
xor
daa
or
xchg
fcompl
nop
clc
testl
out
insb
mov
xchg
or
adc
jg,pt
cmp
fimuls
xor
mov
push
jne
or
stc
jp
ss
push
mov
xchg
lcall
stos
pop
repz
in
add
scas
xchg
or
ss
xor
mov
fst
int3
adc
jecxz
jo
dec
ljmp
movsl
mov
mov
push
xor
push
ja
or
scas
mov
mov
mov
dec
shrl
jbe
icebp
lret
and
mov
dec
push
lds
jp
or
xchg
mov
add
daa
aas
aaa
mov
fidivs
shlb
add
fs
pop
jle
xlat
dec
mov
jne
movsb
mov
inc
popa
mov
add
sbb
mov
repnz
jb
mov
jp
jg
ret
add
sahf
mov
lea
ss
push
inc
fisttps
in
ja
mov
cmpb
test
add
push
push
in
mov
push
pop
ror
cmpsb
stc
out
xor
pop
push
mov
mov
shl
aad
xchg
push
and
sbb
stc
cmpsb
and
lahf
mov
fisubrs
jg
popl
and
lock
xchg
adc
mov
jns
out
pop
fdivrl
out
push
sbb
vpsllq
hlt
and
xor
and
sbb
dec
jmp
in
sahf
push
add
ja
push
push
in
sub
dec
jno
push
mov
test
mov
cmc
sub
in
dec
in
or
mov
mov
ss
pop
pop
adc
xchg
fildl
mov
aas
cmpsb
pcmpeqd
sbb
jne
lcall
push
dec
mov
and
jo
xor
xor
add
cmpsb
cwtl
shll
dec
aad
loope
fxch
imull
cmp
cwtl
fistps
lods
sahf
imul
cld
mov
cmpsb
das
out
icebp
inc
test
cmc
cmpsb
stc
xlat
mov
rorb
loope
int3
sbb
shlb
mov
clc
fucomp
jbe
enter
mov
lock
pusha
ljmp
push
lret
xor
mov
pop
inc
popf
cmp
sub
pop
and
xor
sahf
sbb
movsb
inc
mov
cmpsb
sbb
fstpl
loopne
or
imul
push
dec
mov
mov
jmp
jl
jns
rcrb
mov
loope
add
in
scas
stos
mov
outsl
mov
inc
jg
fdivrs
cld
jg
dec
xchg
clc
jbe
in
leave
sarl
lock
cmp
xor
ficompl
jecxz
push
mov
mov
addr16
mov
rorb
jne
lret
outsb
pop
dec
xchg
mov
pop
stos
or
and
push
sarb
and
scas
adc
cmpsl
adc
popa
cmp
add
push
push
cmc
jg
in
int3
or
mov
fisubs
icebp
addr16
pop
jecxz
das
mov
ret
ja
cmp
clc
sbb
dec
mov
adcb
xchg
sbb
push
mov
inc
push
inc
lcall
pop
cli
ret
mov
call
das
push
pop
inc
xor
iret
mov
cmpl
mov
sbb
mov
ficomps
sar
mov
add
pop
sub
mov
inc
ret
mov
cmp
out
push
lcall
lock
mov
or
lock
lret
xor
mov
jmp
inc
jge
and
mov
insb
xor
cmpb
dec
inc
adc
cmpsb
xlat
cmpsb
xor
cmp
and
dec
jp
xchg
push
mov
stc
pop
mov
clc
add
xlat
adcb
push
mov
push
mov
jns
mov
sbb
popf
std
jns
mov
gs
fwait
std
shl
cli
or
icebp
push
jle
or
mov
jmp
popa
into
ss
ds
and
in
mov
adc
mov
inc
and
lahf
jbe
sarb
push
ret
adc
aas
jo
mov
test
fidivrs
std
lret
sbb
mov
adc
push
shll
test
xor
cmp
xchg
out
fadds
push
mov
jnp
xchg
xchg
mov
enter
sub
rcl
xor
imul
add
or
nop
fidivs
in
cwtl
out
dec
popa
jge
mov
and
ds
movsl
inc
push
xor
sbb
mov
and
ljmp
std
sub
stos
aad
mov
pop
pop
pushf
rcl
jp
pusha
mov
pop
xlat
mov
cmc
mov
movsb
mov
or
inc
mov
xchg
rclb
pushl
jge
adc
js
das
or
scas
adc
das
ljmp
cmpsl
out
sub
add
jle
fstl
popf
into
adc
mov
sub
inc
or
jno
addr16
pop
sub
stc
lcall
cmp
fdivrs
adc
mov
andb
xchg
cli
push
mov
mov
aad
dec
daa
mov
add
mov
pop
mov
icebp
mov
mov
pop
mov
arpl
push
pop
push
jbe
clc
ja
sbb
aaa
dec
or
push
mov
and
lret
or
jecxz
dec
shrl
cmp
lahf
fisttpl
push
push
inc
lea
incl
insl
enter
push
jnp
je
lcall
push
in
aad
loop
cmp
jo
add
lds
sub
cmp
mov
xlat
pop
cmp
xchg
loop
pop
int
xor
loop
mov
in
stos
push
subl
adc
jo
jnp
int3
cmp
mov
sub
jns
pop
adc
repz
pop
clc
je
fs
aad
in
sbb
stos
and
or
arpl
pop
mov
mov
loop
insb
mov
inc
js
icebp
ja
inc
int3
xor
mov
das
cltd
pop
cmp
lock
mov
xor
mov
imul
jo
fstpl
ret
subb
pop
rcrb
jge
cmp
fistl
and
push
and
and
outsl
xchg
sub
lret
mov
int
lods
fnstenv
rcrb
adc
sub
sub
sbb
xchg
xchg
dec
lods
sbb
push
jae
add
jo
les
popf
testb
ja
adc
push
loope
psubsb
mov
jbe
inc
in
lock
pop
daa
inc
jmp
cmp
outsb
enter
imul
jmp
mov
sub
pop
inc
lds
xchg
mov
shr
fwait
lea
cs
push
test
mov
test
int
push
mov
pop
dec
push
shrl
pushf
cmp
out
ret
nop
mov
mov
das
dec
xor
adc
out
cmp
jecxz
cltd
pusha
inc
push
adc
inc
lret
inc
pop
sub
xchg
xchg
jno
xchg
mov
idivb
aas
xor
ficoml
ret
mov
pop
jmp
aad
and
jle
popa
and
cs
xor
stos
fcompl
inc
in
shl
inc
in
add
in
push
inc
repnz
mov
daa
push
xchg
insb
mov
repnz
dec
sbbl
shrb
mov
out
cmc
pusha
mov
sub
adc
jno
mov
mov
shl
mov
dec
push
in
xor
add
lcall
sbb
and
pop
aam
cld
sub
adc
pop
test
push
mov
mov
out
xchg
into
outsb
ds
js
imul
lcall
es
inc
mov
in
je
mov
movsb
cmpsl
push
orl
sti
insb
push
dec
leave
xor
mov
sbb
push
push
outsb
push
xchg
cwtl
scas
cld
aaa
lret
or
out
push
enter
cwtl
inc
xchg
mov
add
push
xor
dec
and
mov
faddl
push
insb
test
ret
repnz
repz
mov
push
and
and
pop
cmp
jge
das
in
adc
stos
fisubrl
aad
dec
outsl
les
jp
adcl
xchg
push
cmpsb
cltd
out
push
mov
or
pusha
or
test
xchg
xchg
scas
mov
test
xor
mov
mov
dec
addr16
xchg
cmp
aad
popa
in
gs
out
jb
in
xor
cli
jecxz
and
or
sbb
lods
or
push
mov
mov
je
or
pop
movsl
mov
stc
dec
cs
xchg
xchg
pop
mov
or
sahf
xorl
jnp
cmp
je
adc
mov
insl
out
mov
jge
repnz
push
inc
jb
in
pop
push
sub
jne
insb
pop
or
les
movsl
adc
inc
xor
hlt
repnz
scas
add
jmp
push
cltd
cmpsl
xchg
jnp
fs
into
cmp
jmp
faddl
idivl
mov
lock
mov
cmpb
add
fcos
add
movsb
pop
das
xchg
cwtl
out
arpl
loope
mov
inc
bnd
push
cmpsb
add
lock
inc
int
adc
negl
xchg
leave
mov
sbb
push
mov
or
and
push
sub
add
outsl
popl
pop
add
sbb
xor
xlat
into
loopne
in
cld
push
pop
test
rcrl
data16
outsb
push
xchg
pop
lahf
sub
test
mov
adc
xlat
mul
out
dec
rcl
sub
xchg
jno
or
scas
fimuls
stos
popf
fsts
or
pop
mov
aas
xor
addb
pop
das
push
xchg
sub
push
inc
and
cmpsl
mov
inc
lea
cs
mov
sub
cmp
popa
flds
lock
movsb
mov
sbb
pop
or
fcmovnb
mov
out
sbbl
neg
jnp
fcmovne
insl
mov
sub
add
aaa
inc
push
adc
pop
jmp
or
dec
xor
dec
je
inc
std
push
mov
mov
stos
popa
add
pop
xor
or
int
dec
test
repnz
add
leave
cmc
xchg
aaa
shll
fbld
cmp
mov
mov
mov
das
pop
jg
sbb
add
jge
in
push
and
mov
scas
test
pop
in
mov
mov
popf
and
or
dec
ja
ret
dec
mov
jmp
mov
movsb
mov
in
and
pusha
xor
xchg
inc
inc
lret
in
inc
add
movsl
jecxz
pop
int3
push
lcall
mov
pop
push
icebp
outsb
dec
dec
pop
sarl
loop
ljmp
xlat
outsb
sbb
lods
fisubs
inc
add
cmpsl
jo
movsl
lea
and
mov
xor
cmpsb
adc
insl
push
inc
sub
in
sub
int
mov
clc
aaa
xor
or
push
xchg
or
xchg
cld
push
ficomps
lock
jb
lret
shll
imul
dec
iret
lret
adc
add
mov
xchg
loope
sidtl
sbb
dec
adc
ret
pushf
nop
scas
and
repz
test
lds
xchg
loopne
push
lock
shl
add
insb
add
push
enter
out
adc
fwait
mov
hlt
mov
iret
stos
push
lahf
aad
push
rcl
repnz
out
fstps
fdivrs
xchg
sbb
ja
inc
int
adc
addr16
loop
jo
insl
les
ret
and
xor
pusha
mov
pusha
jb
adc
jmp
ss
cmp
cmp
pop
mov
push
jnp
xchg
adc
int3
daa
cmp
stos
rcll
adc
sti
lret
cmc
sar
pop
mov
in
cmp
fisubrl
cmpl
push
mov
popf
popf
pop
jbe
xchg
mov
or
mov
mov
js
xchg
and
int
fnstsw
out
dec
jnp
cmpsl
outsb
sbbl
sub
push
jns
cmp
xchg
das
push
cs
xchg
ror
rcr
xchg
jmp
jno
scas
rolb
push
mov
jnp
inc
imul
and
xchg
xor
addr16
ja
xor
in
lcall
push
adc
faddl
xor
imul
sbb
jne
ja
xchg
out
or
xor
jg
popf
aas
and
scas
shlb
xchg
mov
sub
jae
sub
js
negb
ja
xor
outsb
fcmove
arpl
jge
cmpl
xorl
gs
mov
cmp
jl
cmpsl
jae
in
ficoml
dec
xlat
mov
test
out
cmpsb
in
push
mov
loope
xorb
add
jb
cmc
je
lahf
rclb
hlt
jbe
adc
pushf
aad
xor
leave
js
mov
lock
je
or
leave
mov
jne
dec
mov
push
sub
xchg
cmpsb
popa
shrl
xlat
loopne
fidivs
test
outsl
mov
cmpsl
mov
cmp
imull
mov
bound
dec
addr16
aad
mov
test
iret
orb
xchg
or
sahf
fwait
scas
ficoms
xchg
sbb
push
stos
cmp
sete
push
dec
loop
movsb
dec
negb
pop
lahf
in
ret
mov
push
shlb
sub
pop
into
loope
jecxz
shrb
xchg
push
bound
out
mov
ret
push
stc
ja
or
jle
jbe
xlat
dec
dec
repz
data16
jecxz
jno
cmp
mov
scas
mov
push
lods
popf
push
enter
mov
or
inc
mov
xchg
pop
and
jecxz
mov
lock
mov
clc
in
dec
inc
popa
lret
cmp
mov
dec
ss
jns
out
mov
arpl
xchg
fs
and
push
push
inc
xchg
in
dec
cltd
lret
jecxz
fnstsw
outsb
lret
shr
roll
into
adc
notl
shlb
shrl
hlt
adc
xchg
add
mov
mov
insb
xor
pop
popf
mov
lret
mov
jne
jnp
ret
mov
test
fbstp
call
push
and
ss
cli
mov
jmp
popf
add
daa
cmp
iret
pop
sbb
dec
jns
xor
in
and
repnz
lret
xchg
sub
jne
aam
rclb
xorl
loop
test
repnz
iret
inc
xor
popa
sbb
bound
sub
idivb
jnp
add
sbb
jge
outsb
xlat
imul
cmpsb
cwtl
les
xor
out
mov
cmp
jle
fnstenv
in
xchg
rep
lret
fnstcw
xor
call
icebp
jmp
nop
push
hlt
lods
inc
adc
xchg
sar
int
stc
bnd
loop
jle
sahf
fistps
sti
ds
mov
xchg
or
or
or
add
dec
dec
sbb
inc
mov
adc
cwtl
ss
pop
jl
mov
jle
and
imul
mov
jle
push
dec
mov
hlt
xchg
add
ss
jg
movsb
mov
xor
js
cmc
fmull
xor
ja
fsubrs
mov
push
pop
or
sarl
and
add
clc
mov
insb
mov
loop
sahf
cli
jp
int
call
jl
out
or
or
jb
neg
out
lds
pmullw
decl
pop
lcall
pushf
jp
mov
add
jecxz
fmuls
les
sub
xor
dec
xlat
dec
xchg
jle
add
lea
and
loope
jmp
pop
fst
lds
ficompl
push
lods
mov
xor
push
xchg
call
and
enter
sbb
test
fiadds
jae
push
sti
dec
xchg
jecxz
dec
out
fcomip
pop
jp
dec
mov
lahf
jmp
es
push
cmp
popa
scas
arpl
sub
subl
in
insl
dec
popa
xlat
jmp
hlt
movsl
in
inc
xorb
push
add
mov
dec
or
insb
popa
enter
mov
stos
bound
cmp
in
out
jmp
xchg
lahf
sbb
std
push
popf
outsb
jne
add
movsl
pop
or
push
scas
mov
mov
cld
stos
aas
lahf
inc
xor
push
mov
incl
xchg
jp
mov
out
dec
jnp
out
xor
loopne
mov
lock
xchg
push
inc
clc
addb
fwait
jb
push
xor
nop
add
outsl
out
shll
insb
sbb
mov
cmc
mov
lcall
js
adcb
cli
adc
inc
inc
push
adc
jge
fists
cli
fdivrs
or
xor
or
or
stc
cwtl
xor
mov
add
sbb
jb
test
pop
adc
in
cli
insl
xor
call
lods
add
jns
add
add
scas
into
and
shrl
outsb
pop
jb
jle
lea
jb
scas
das
ss
pushf
lea
scas
pop
jnp
popa
enter
movsb
cmp
iret
mov
inc
rcl
je
in
jne
mov
imul
add
test
cmp
les
pop
hlt
call
sti
adc
fs
push
ret
push
sub
jbe
cmpsb
pop
push
insb
and
sbb
scas
xor
xlat
popf
xchg
xchg
push
xor
xchg
int3
inc
mov
insl
cmpb
in
jnp
xor
xor
xor
mov
xor
xchg
and
sti
jmp
mov
addb
addr16
js
into
mov
adc
jmp
daa
repnz
or
mov
cld
mov
lret
cmp
in
test
pop
jle
ret
cmp
sbb
int
dec
sbb
hlt
dec
dec
cmc
mov
xchg
mov
loop
push
cld
in
mov
inc
mov
jl
stc
mov
icebp
aaa
inc
insl
jp
cwtl
xor
or
lret
cmpsl
outsb
sahf
inc
sbb
sarb
scas
cmp
cltd
mov
incl
movl
jmp
xchg
das
mov
and
ds
mov
push
push
pop
inc
push
stc
adc
popf
or
or
inc
adc
mov
add
add
daa
inc
sbb
push
push
mov
mov
xor
ss
stos
jmp
andps
or
loopne
mov
jp
sbb
fstpt
mov
jecxz
inc
mov
xlat
push
mov
call
fnstcw
dec
inc
mov
out
pop
jbe
sub
outsl
mov
fcomp
push
in
xchg
ret
in
push
add
lcall
scas
not
flds
dec
test
pusha
stos
ss
stc
jecxz
repnz
mov
hlt
scas
mov
dec
roll
ds
and
cmp
roll
cltd
xchg
hlt
adcb
add
mov
and
test
mov
filds
lret
add
pusha
add
out
jp
push
loop
bound
js
lods
or
shll
dec
mov
jo
outsl
inc
lds
sub
jnp
adc
cmp
and
and
sahf
mov
clc
cwtl
mov
mov
jno
dec
cmpsl
testb
jnp
arpl
popa
or
cmp
fs
sbb
inc
adc
push
iret
pop
inc
sub
insb
pop
outsb
dec
shl
gs
inc
or
pop
fidivl
or
inc
lret
jo
lahf
popf
jge
cmp
push
push
testl
cmpsl
inc
fwait
mov
mov
test
scas
or
push
stc
pop
jg
or
and
icebp
sub
xlat
pushf
push
jl
clc
fimull
ret
ljmp
sub
mov
out
psubd
shl
inc
insb
aad
mov
rorl
popa
inc
add
sub
adc
leave
or
out
dec
xchg
mov
sub
sub
mov
jnp
adc
mov
addb
test
mov
push
dec
in
mov
pop
notb
xchg
xor
sub
xchg
mov
mov
imul
divb
fnstenv
mov
in
and
dec
imul
push
sbbb
inc
popa
aam
cmpsb
shl
add
dec
cmpsb
stos
fucomp
ret
push
xchg
mov
pop
out
int3
jmp
push
mov
rcr
stos
popf
rol
fisubs
out
push
push
int
cmpsb
and
mov
ret
push
push
daa
mov
loopne
adc
pop
hlt
ss
int
and
insl
iret
out
dec
adc
xchg
mov
lods
movsl
adc
out
aam
mov
pop
jmp
nop
fwait
mov
and
sbb
call
sub
inc
cmp
minps
jne
pop
dec
data16
mov
imul
fdivrl
sub
xor
or
mov
mov
push
dec
adc
loop
inc
pmulhw
mov
shll
add
stos
rcr
lods
in
pop
mov
push
loope,pn
mov
mov
xchg
loop
fcoml
dec
mov
cmp
cltd
cltd
aaa
lea
adc
mov
dec
sbb
add
mov
shrb
pusha
fidivs
ret
rcl
or
mov
ret
add
inc
stos
mov
mov
xor
rolb
lock
rcrb
dec
mov
inc
inc
loope
mov
xchg
test
ret
add
pushf
adc
shlb
pushf
cmp
sbb
mov
ret
movsl
add
mov
loope
mov
mov
je
testl
int
mov
sub
dec
mov
mov
test
xor
mov
adc
pop
sbb
xor
les
scas
scas
mov
jne
sub
inc
gs
ret
fldenv
mov
push
mov
add
xlat
divb
lds
in
lods
in
popf
jbe
jl
test
out
xchg
rol
jg
pop
pop
mov
cs
mov
ljmp
sbb
dec
out
and
je
pop
test
cmp
hlt
jmp
jecxz
and
push
fidivl
out
add
dec
cltd
jg
loop
sub
test
icebp
pop
mov
test
xor
je
and
pusha
sub
dec
cmp
sub
jp
enter
push
push
iret
call
or
inc
daa
jo
int
pop
mov
sbb
xchg
jb
adc
mov
xchg
cmp
dec
jbe
add
mov
cs
or
xor
rorl
cmc
out
in
cmp
es
stc
out
rcl
jge
pop
shr
mov
add
iret
mov
adc
jge
or
sbb
dec
insl
call
popf
out
xor
mov
dec
add
inc
push
xchg
jb
mov
lock
lock
mov
pop
ds
mov
jg
iret
shlb
outsb
sbb
inc
pusha
ret
mov
add
in
ds
je
imul
jns
add
call
outsb
lods
cltd
mov
jmp
xchg
inc
cmp
in
pop
pop
dec
stos
mov
xor
rclb
dec
add
lea
dec
xor
jns
inc
lods
lret
lret
inc
add
mov
out
push
and
out
int3
push
je
not
jns
arpl
dec
jge
dec
add
mov
lret
jbe
mov
pusha
fdiv
hlt
cli
popa
lods
sbb
mov
adc
jb
mov
test
je
test
mov
pop
cli
cmp
into
test
icebp
pop
xchg
mov
repnz
or
pop
lahf
dec
mov
in
adc
push
sub
mov
cwtl
push
out
mov
sub
pop
jg
leave
fldcw
idivl
scas
mov
incb
aam
je
sub
push
or
enter
lock
and
ret
lock
sarl
sbb
fdivs
and
jge
push
cmp
imul
arpl
int
imul
pop
pop
dec
mov
shlb
cmp
mov
enter
add
xchg
test
sub
movsb
xchg
push
adc
cli
ljmp
sub
enter
jmp
popf
sub
push
or
mov
test
sub
mul
push
push
pop
clc
movl
cmpsb
pop
pop
mov
mov
lods
add
and
jg
or
pop
sub
mov
sbb
inc
jno
scas
mov
pop
or
mov
jge
or
push
insb
sub
out
fs
gs
sbb
push
imul
ret
hlt
sbb
xchg
pop
ljmp
push
or
gs
hlt
add
mov
sbb
dec
pop
mov
cmpsl
mov
sub
rcll
subl
icebp
ret
xlat
fwait
or
hlt
movd
mov
lahf
ficoms
cmp
or
push
xlat
inc
xchg
ret
hlt
pop
sub
and
mov
xor
mov
or
cwtl
mov
mov
andb
mov
pop
mov
sbb
ds
rcl
iret
and
xchg
sbb
or
je
lock
std
fdivrl
pop
cmpsl
std
xchg
ja
fldt
inc
jmp
popa
push
je
jnp
mov
mov
mov
ds
andb
or
or
test
in
repnz
stos
mov
out
add
sti
xor
xor
ja
pop
scas
scas
aas
pop
xchg
stos
loop
inc
inc
cmp
jns
lret
pop
mov
or
pop
dec
mov
push
adc
inc
dec
and
adc
inc
dec
in
fcomps
mov
fs
or
adc
mov
inc
sbb
sbb
ss
repz
sbbl
jecxz
dec
out
xchg
mov
dec
jbe
enter
mov
sub
add
jp
xchg
cmp
mov
lret
cmp
push
sub
mov
addb
mov
cwtl
push
push
cmp
mov
int
adc
in
cs
mov
data16
cmpsl
outsb
adcl
sbb
pop
insl
pop
fidivl
jp
je
filds
lcall
mov
popa
test
outsb
mov
testl
and
xchg
dec
add
fstpl
shlb
or
jle
shll
insb
pop
lods
mov
jnp
jns
jecxz
or
adc
jo
roll
sub
xor
scas
xchg
jge
or
adc
jae
insb
inc
sub
mov
stos
addl
cmp
lods
push
aam
ljmp
daa
and
push
pop
popa
jge
repnz
cld
ficomps
mulb
lods
inc
dec
jo
xor
loop
loopne
daa
pushf
movsl
insl
cmpsl
sahf
mov
pop
in
test
ficoms
pop
mov
int
xchg
mov
inc
cs
jl
fbld
mov
or
clc
test
inc
sti
jb
sub
push
mov
jns
and
repnz
mov
repnz
xorl
insl
aam
or
dec
imul
test
or
gs
repz
or
sahf
push
push
icebp
loop
hlt
push
jae
int3
ljmp
xor
and
mov
fimuls
jmp
adc
call
cltd
sarl
push
fwait
or
sti
sahf
jle
sbb
xchg
je
scas
sub
shl
lahf
and
in
incb
cld
jecxz
pop
fcom
js
loop
stos
add
lds
fs
stos
pop
cmp
in
xchg
loop
das
dec
testb
mov
out
push
xor
xchg
lods
imulb
in
jecxz
add
jns
out
loopne
adc
test
rol
or
add
movsl
stc
pusha
xor
and
mov
adc
adc
ds
inc
adc
fprem
sbb
test
add
cmp
jecxz
or
pop
cltd
stos
mov
cltd
push
inc
xor
cmpsl
enter
lret
insl
out
mov
adc
loop
aam
push
inc
in
movsb
mov
shll
icebp
mov
mov
rcrb
and
add
sahf
cmp
mov
aas
fcoms
xor
test
cmp
movsb
lods
push
aad
mov
sub
xchg
jle
ds
outsl
inc
inc
mov
mov
adc
and
outsl
out
js
push
pop
test
mov
jg
popf
add
icebp
sbb
jns
aas
sbb
mov
mov
xlat
sbb
jns
fs
ss
sub
insb
popa
fs
sub
rolb
fnstsw
push
aaa
pop
or
ret
add
dec
xchg
add
cmp
les
cmp
outsb
popa
mov
leave
ljmp
jo
xlat
xor
pop
rorb
jnp
scas
dec
adc
mov
xor
sub
dec
mov
gs
fxch
icebp
icebp
sti
pop
pop
ss
jns
stc
out
andb
push
mov
jne
fsub
test
or
adc
or
dec
xchg
mov
clc
imul
iret
jg
or
cmp
fstpl
cmp
push
mov
aam
xor
out
inc
cs
divl
inc
pop
test
jo
pushf
into
push
add
pusha
arpl
jecxz
mov
enter
std
xor
fiaddl
xor
adc
fwait
sub
dec
shrb
sub
and
sti
aas
enter
dec
repnz
or
test
enter
adc
adc
mov
loopne
je
stos
loope
pop
shlb
mov
push
shr
mov
sub
aam
sahf
nop
std
mov
out
stc
push
mov
mov
lret
mov
adc
sub
loope
push
cs
or
lcall
sub
imul
xchg
subb
adc
push
mov
cmp
fs
cmp
dec
icebp
fnstsw
imul
jmp
pushf
fadds
mov
inc
das
jbe
dec
daa
dec
push
dec
out
test
pop
repz
in
add
out
lods
popa
jle
daa
jmp
loop
jge
test
cmp
mov
pop
xlat
cmp
push
cltd
test
mov
cwtl
xchg
xchg
lcall
mov
and
mov
mov
lahf
cmp
into
fcmovbe
sub
and
xor
sbb
pop
iret
lret
jl
das
mov
sarl
hlt
shrb
xchg
lcall
mov
pop
lds
pop
cli
sbb
xchg
fsub
sub
int3
jbe
jg
jmp
xorb
cmpsl
adc
cs
fwait
push
loop
jns
dec
jns
dec
and
jbe
mov
mov
lods
inc
cli
cmp
mov
test
test
inc
test
hlt
ja
pop
mov
mov
mov
sbb
mov
aas
xchg
mov
fldl2e
push
out
xchg
fsubl
add
pop
xchg
je
int3
cmp
push
mov
inc
imul
adc
jmp
mov
nop
and
pop
sub
mov
stos
xor
sbb
xor
push
mov
aaa
mov
push
mov
push
ljmp
stos
pusha
jmp
lods
jmp
aaa
xor
or
pushf
sti
data16
pause
xor
pop
loopne
in
pushf
mov
and
sarl
pop
leave
xor
or
and
dec
aas
lea
pop
xlat
int3
sbb
fildl
push
lret
or
adc
fwait
sub
cltd
and
in
mov
imul
in
out
add
mov
push
fnstsw
in
in
or
adc
push
adc
sub
jmp
cmp
addr16
das
cmpsl
outsb
call
js
sbb
sahf
xor
lret
daa
loop
insl
cld
scas
sbb
sub
xor
cmp
push
cmp
sub
inc
jge
lret
cmp
adc
mov
insl
leave
nop
dec
cmp
xchg
sahf
jl
pop
fwait
cmp
int
es
inc
lds
cli
jle
push
adc
shll
pop
and
gs
dec
pop
lea
leave
sbb
ss
jle
bndstx
pushf
xor
mov
shl
adc
push
test
insl
mov
data16
push
cmpsl
rclb
jmp
sbb
xor
mov
jp
lock
push
pop
cmp
fcoml
jp
inc
cmp
lcall
mov
fidivs
std
scas
fs
pop
mov
mov
and
jmp
mov
lods
sbb
in
fld
or
pop
mov
out
lret
xchg
sbbl
and
scas
es
cmp
fcomps
rclb
adc
mov
cmc
push
push
mov
movsb
xchg
or
dec
sbb
add
mov
lahf
cld
pop
jnp
mov
ret
sbb
mov
sbb
data16
lods
add
pop
aas
jo
jb
xorl
enter
mov
cmp
lret
loope
or
or
xchg
cli
mov
sub
fidivrs
push
mov
add
orb
cli
ds
lock
rcll
cmp
lcall
repz
pop
arpl
and
fmull
mov
icebp
adc
ret
fistps
repz
mov
mov
xor
hlt
pop
sub
movsb
jnp
push
or
outsb
lret
imul
add
and
mov
xor
outsl
hlt
scas
insl
rcl
mov
pop
adc
add
dec
cmp
stc
add
xor
mov
stos
or
scas
adc
test
sub
pushf
mov
cwtl
xchg
outsl
repnz
sar
repz
xlat
xor
rcrb
mov
les
jl
sub
jmp
mov
xlat
nop
test
pop
xor
hlt
insl
movl
jp
fwait
xor
mov
pop
jmp
xor
adc
xchg
iret
ret
mov
pop
mov
aas
push
cmp
or
fsubrs
mov
or
dec
aam
mov
or
cmp
fidivs
pop
shrl
das
mov
out
sbb
adcl
or
or
adc
int
push
mov
and
sti
mov
adc
xchg
cmc
or
jo
cmpsb
loope
popf
enter
inc
and
xor
dec
repnz
mov
js
push
jge
dec
insb
leave
jns
dec
and
pop
arpl
xor
push
mov
shrb
xchg
xor
dec
aas
lods
cmp
add
push
add
enter
dec
xchg
pusha
pop
xchg
call
loopne
fs
dec
sahf
out
jecxz
rorl
inc
mov
fnstcw
ljmp
sbb
adc
icebp
stos
cltd
rol
enter
sbb
cmpsb
ds
movb
push
shlb
and
lahf
jg
dec
popf
jl
lret
sbb
sbb
cwtl
stos
cmp
mov
jg
adc
scas
jno
pop
pushf
fsubrl
dec
popf
push
jle
mov
cmp
sbb
pop
and
ss
rorl
jl
push
push
add
aas
push
rcr
hlt
arpl
pop
cld
add
or
pop
outsl
mov
dec
add
xchg
loope
lea
lret
mov
in
mov
fisttpll
push
aas
push
test
daa
jo
mov
cmp
xor
ljmp
lea
ret
pusha
data16
stos
not
stos
xor
xlat
fisubs
push
rcrl
outsl
lock
jle
je
scas
and
lds
adc
daa
adc
ss
ja
mov
mov
jge,pt
pop
ljmp
imul
inc
and
and
loope
ja
sub
dec
sub
or
lods
push
sarb
or
je
push
into
push
push
inc
je
pop
mov
xor
dec
movsl
fs
dec
in
clc
cld
mov
adc
adc
push
jl
leave
js
or
nop
adc
testl
jl
jg
xor
sub
test
lods
in
iret
push
sahf
mov
imul
aaa
ret
pop
or
jle
gs
loopne
dec
popf
jmp
xchg
dec
mov
jmp
jge
and
xor
sti
loope
cmpb
lret
jmp
mov
lea
movsl
mov
scas
jecxz
cmc
dec
sbbl
push
imul
in
mov
and
imul
cmpsl
and
cmc
call
inc
js
sub
lret
add
shrb
fwait
inc
add
push
mov
cmp
or
mov
clc
jb
popf
add
jnp,pt
out
dec
sbb
test
stc
xor
cmp
cmp
ljmp
outsl
mov
fstl
push
imul
neg
inc
shll
push
les
nop
fiadds
dec
cwtl
push
pop
popa
rol
push
add
and
psllw
sub
pop
jno
push
in
insl
xchg
add
imul
inc
or
iret
push
mov
shrb
cltd
cmp
out
imul
mov
adc
mov
aaa
das
outsb
repnz
mov
sub
jns
pop
mov
cmpsb
mov
dec
cli
ljmp
dec
movsb
mov
lret
outsb
outsb
sahf
adc
adc
jg
push
rorb
test
fldl
ss
adc
sar
adc
inc
xacquire
sub
and
out
pop
mov
mov
push
fmull
in
add
aad
daa
push
inc
insl
adc
incb
xor
add
cmp
sbb
add
add
pop
inc
or
cmpsb
dec
imul
je
mov
cmp
push
test
shrb
ficompl
fidivrl
mov
stos
ja
lcall
xchg
jmp
adc
cmp
test
int
in
push
jge
xchg
push
sbb
sub
mov
fcompl
xor
jecxz
xchg
inc
xchg
xor
jmp
scas
sbb
cmpl
lods
sub
push
xor
pop
ja
mov
mov
in
jp
cmp
xchg
adc
aas
mov
push
es
jl
jp
rolb
xchg
adc
test
popl
aad
or
mov
push
and
cmc
sub
or
pop
insl
sub
mov
ret
xor
pop
fbld
repz
sbb
js
shll
add
xor
ret
ficoms
mov
mov
mov
mov
call
loope
mov
enter
rorl
or
xchg
movsl
inc
xor
andl
push
cli
mov
out
add
inc
sub
lock
loopne
push
inc
sub
cmpsb
movsb
sub
cmp
jae
inc
sub
push
les
inc
iret
aam
mov
xor
sar
in
lock
sub
or
mov
pop
or
xchg
je
fcompl
jmp
mov
push
dec
mov
and
push
mov
jb
push
xchg
out
cltd
fsubrp
lret
movsb
add
sbb
xchg
rolb
fimull
loopne
mull
dec
xor
in
cli
ret
repz
ret
xor
int3
push
jns
sbb
fwait
sahf
popa
jns
xchg
cmpsb
xor
push
jae
aad
mov
add
lea
cmp
jmp
sub
loope
cwtl
or
lea
std
rcrl
inc
addl
inc
adc
push
gs
cmp
add
adc
mov
xchg
push
imul
aad
or
push
inc
cmp
and
into
mov
in
daa
sbb
sahf
push
lods
xor
ss
sbb
pop
mov
hlt
test
outsl
pop
pushf
mov
sbb
cwtl
js
mov
xor
inc
xchg
aam
mov
pop
xchg
pop
notb
push
fsubs
adc
pop
cmp
rclb
xor
insb
mov
adc
jb
and
pop
cltd
mov
imul
stos
sbb
lret
out
dec
xor
ja
aas
pop
adc
mov
pop
mov
sti
out
sub
mov
out
sub
mov
in
or
lcall
roll
insl
xor
mov
cmp
popl
mov
xor
push
gs
pushf
inc
mov
scas
popl
loopne
xor
insb
lcall
mov
push
jnp
popf
adc
cmp
push
icebp
mov
or
dec
mov
dec
cltd
cltd
rcr
push
aaa
sub
andl
ret
ljmp
sar
jo
dec
dec
das
out
cld
fistpl
in
dec
imul
popa
dec
and
divb
shlb
or
xor
sbb
adc
push
ret
push
xchg
fisttpl
stc
jl
stos
fsts
dec
inc
jmp
xlat
pushf
xchg
pop
out
es
sahf
mov
xlat
stos
icebp
jb
stos
repz
fucomip
scas
or
loope
std
sbb
out
or
push
adc
sbbl
mov
scas
add
mov
mov
loop
insb
and
xor
ja
into
cmc
dec
icebp
xor
rcll
ss
rorb
inc
jp
adc
lret
sahf
xchg
and
in
add
xchg
aad
es
stos
mov
movsb
mov
nop
jp
xor
es
mov
push
dec
mov
stos
push
in
mov
push
cmpsl
aad
stos
outsl
dec
arpl
in
repz
mov
dec
xchg
push
fadd
sbb
inc
jno
rorl
inc
int
mov
xchg
int
dec
push
imul
popf
mov
mov
mov
xchg
mov
mov
aad
daa
loop
adc
rol
outsb
xor
das
rcrl
lcall
cld
mov
mov
mov
call
jno
pop
sub
dec
pop
mov
cld
lcall
jmp
jnp
xor
push
add
sbb
pusha
mov
movb
jno
dec
jnp
xchg
jae
loopne
jmp
es
mov
shrb
mov
fsubs
in
pop
stos
xchg
cmp
imulb
cmpsb
std
ja
dec
cbtw
out
xchg
pop
lds
sbb
pushf
or
add
cmp
or
movsl
lods
sbb
inc
loopne
jo
fs
xlat
inc
pop
or
les
cmp
inc
or
jo
test
cmp
movsl
sbb
cmpsl
lods
pop
push
scas
or
inc
sbb
shlb
jns
repnz
lea
xor
xor
out
jb
popf
loope
and
outsl
and
add
dec
movb
mov
jge
mov
mov
push
pop
ds
ja
call
adc
add
mov
repz
mov
sub
add
push
je
mov
xchg
divl
shrl
mov
fldz
inc
mov
or
cmp
andb
push
adcb
loope
jmp
loope
cmp
sub
scas
cld
fidivl
push
mov
aam
sbb
or
sbb
xchg
filds
ss
jmp
xor
cmp
xlat
sti
filds
fldt
adc
jo
xchg
mov
popa
bound
ficomps
sahf
dec
xor
jne
test
cmpsb
mov
jecxz
mov
xlat
xor
mov
mov
adc
xchg
imul
push
lret
push
imull
xchg
mov
enter
xor
imul
in
jecxz
dec
rol
ss
imul
add
mov
jo
and
mov
jb
bound
in
mov
dec
mov
mov
stos
sub
xchg
sub
insl
std
mov
inc
mov
lahf
mov
sub
mov
addl
popa
add
hlt
out
hlt
int3
xor
shrl
stos
push
inc
inc
mov
imul
loopne
xchg
or
or
mov
inc
aad
loope
test
add
je
jne
test
xor
stc
inc
stc
mov
mov
stos
xor
mov
mov
jle
pop
int
inc
ficomps
dec
mov
or
repnz
sbb
and
jmp
int
pop
pop
je
test
and
cmpl
insl
mov
pop
xchg
aaa
call
push
outsb
mov
mov
das
add
mov
imul
imul
jb
pop
and
fs
adc
push
loope
pop
xor
movb
sub
ret
cmpsl
lret
repnz
add
test
movsl
ljmp
pushf
in
loope
bnd
jp
repnz
fs
ret
push
push
int
or
add
xchg
aaa
pusha
cmp
mov
insb
mov
mov
hlt
mov
cmc
sub
mov
pop
pop
push
mov
inc
test
mov
pop
pop
jbe
mov
xor
cmpsb
dec
push
sub
cmc
sub
sbb
pop
mov
scas
mov
inc
ss
mov
jo
out
out
mov
pop
xchg
xor
fs
or
jo
cmp
jb
push
shr
xchg
ret
outsb
inc
pop
mov
inc
les
fistpll
push
lods
enter
pop
loopne
add
inc
and
lds
lds
jns
out
jae
mov
mov
lods
in
loop
jge
jae
stc
es
into
pop
mov
xor
sub
lret
test
mov
pop
fisubrs
loopne
cmpsl
in
push
and
sbb
jb
xor
add
icebp
int
xor
cmp
mov
mov
inc
jne
adc
push
inc
cmc
or
sarl
ror
out
mov
ficoml
andb
and
test
mov
jl
mov
jl
in
mov
sahf
mov
mov
cmp
fcomi
jbe
adc
lahf
sbb
xorl
mov
mov
hlt
add
scas
shlb
imul
fmull
std
insl
lock
push
out
ds
daa
mov
cli
xlat
lret
jne
add
movl
push
mov
pop
mov
push
xchg
jmp
ja
push
add
mov
cmc
lret
cmp
fdivrl
mov
cmp
sbb
in
add
dec
inc
dec
nop
movsl
sbbl
gs
fcoml
repz
out
jo
mov
jns
xchg
pop
push
mov
mov
xor
push
xor
or
fnstcw
dec
movsb
stos
loopne
addl
test
pushf
mov
in
push
std
mov
pop
sub
fists
cld
lret
loope
lcall
sub
and
arpl
in
sarb
cmp
loopne
mov
lcall
sbb
pusha
movsl
inc
push
scas
sti
cld
orl
mov
push
jecxz
test
xchg
dec
fsubrl
in
add
sub
mov
jl
cltd
push
jmp
out
sbb
adc
xor
and
cmp
subb
pop
ficoml
test
xor
cmp
stos
cmpsb
adc
out
sarb
push
inc
fistpll
stc
imul
cld
fsts
push
and
sbb
and
mov
ja
fisubl
inc
push
push
adc
lods
or
test
pop
xor
ret
push
add
lea
mov
pop
cmp
push
adc
test
addr16
jmp
push
fsubrs
pop
push
pushf
mov
aad
in
stos
fadd
and
mov
repnz
call
repnz
mov
pop
pop
loopne
ss
mov
add
sub
data16
xor
jnp
mov
adc
adc
or
cltd
iret
scas
ret
pop
mov
xor
mov
hlt
xlat
mov
add
outsl
es
dec
adc
push
aam
mov
push
xor
cmp
clc
push
andb
xor
mov
frstor
adc
sarb
cmpsb
ret
int3
mov
jae
loop
jge
or
pop
stos
dec
adc
jo
mov
jge
dec
ret
adcl
mov
pop
fadds
dec
push
add
out
in
xor
mov
push
into
pop
sub
rcrb
pop
hlt
testb
mov
test
cli
sbb
pop
leave
ret
push
int3
jg
mov
jmp
out
jnp
in
ja
jne
jmp
hlt
stos
push
jo
or
or
out
nop
mov
stos
inc
cld
stc
inc
lock
shr
fbstp
sahf
push
xlat
out
sbb
mov
pop
scas
leave
fidivs
jp
lcall
scas
mov
pop
push
add
call
enter
sbb
mov
pushf
pop
xor
std
pop
int
std
pop
imul
sbb
pop
insl
and
rorl
gs
movsb
iret
scas
rolb
push
xchg
ss
lock
sbb
shll
and
movsb
clc
fucomp
fisubl
sub
rorb
or
xchg
ret
xchg
xor
lock
sbb
mov
shrb
mov
sub
pmaddwd
mov
enter
push
mov
xchg
daa
push
dec
pop
cmp
jmp
jae
stos
je
shll
fsubr
addl
or
jp
adc
xchg
into
adc
into
pop
mov
fistl
xor
mov
and
mov
loopne
sbb
inc
popa
mov
adc
xchg
ffree
pop
jmp
cmpsl
jg
sarw
jns
dec
cmc
aas
jb
icebp
out
outsl
and
adc
popa
lds
imul
clc
push
cmc
lods
into
push
loop
imul
adc
adcl
jae
jecxz
scas
and
out
loope
ss
pop
xor
notl
ret
mov
repz
call
ss
fimuls
insb
test
aam
inc
fldcw
jle
out
rorl
sahf
loop
lcall
mov
xor
mov
jge
cld
mov
or
loopne
addb
xor
inc
fcomip
cs
pop
xlat
sub
shlb
jb
sbb
xor
add
xchg
cwtl
push
inc
or
xlat
push
inc
je
or
add
test
mov
fstp
fists
xchg
sub
out
mov
add
sub
stos
lds
gs
inc
cmp
lcall
je
ficomps
cli
out
cli
mov
sub
inc
xchg
mov
les
dec
inc
mov
pop
pop
aaa
dec
cmpsb
adc
push
jmp
mov
out
cmp
cmpsb
jg
shrd
cmp
cmpsl
ret
jbe
xchg
sub
xchg
in
incl
into
movsb
ds
inc
jmp
jl
pushf
xchg
cltd
dec
stos
add
pop
push
mov
dec
lea
insl
cmp
mov
cmc
jb
jge
and
xor
pop
jmp
fidivs
imul
dec
sub
push
mov
cmc
inc
adc
lahf
sbb
out
sub
jmp
lock
outsl
fwait
dec
sarl
sbb
pop
ja
lea
enter
xchg
mov
sbbb
inc
mov
cmpsb
leave
movsl
xchg
fdivrs
add
jmp
xor
in
xchg
js
aad
cmpsl
mov
jb
sbb
es
jnp
push
repz
xchg
out
xchg
into
ret
ror
scas
push
sub
pop
sub
aaa
adc
jp
outsl
adc
fisttps
mov
or
jo
lea
subb
ljmp
cmp
dec
data16
inc
aaa
jne
loopne
insl
jg
orb
add
cmpb
loopne
jg
repz
cmpsl
inc
loopne
loope
mov
loop
iret
pop
insl
je
adc
lods
test
sub
sub
mov
scas
or
cmp
lahf
jp
dec
sbb
sahf
pop
xchg
aad
popa
cmpsb
ds
or
addr16
stos
jg
mov
add
mov
inc
mov
mov
xchg
jmp
jnp
pop
andb
push
pusha
ja
aaa
ficoml
pop
cmc
xlat
cmpsb
xor
sbb
xchg
sub
rcr
mov
mov
lods
mov
scas
and
das
add
sub
ret
inc
push
icebp
xor
jp
jmp
lea
adc
cwtl
jne
test
push
icebp
sahf
mov
or
iret
out
cs
mov
gs
mov
dec
sbb
lods
jmp
addb
jnp
nop
dec
clc
dec
push
mov
jmp
cmpsb
dec
lahf
cli
xor
dec
test
sub
push
xor
mov
inc
loopne
fcoml
push
adc
add
scas
sub
jmp
add
xchg
fnstenv
lret
fst
jg
mov
mov
insl
pushf
cmp
pop
add
rolb
ret
sub
ljmp
mov
ljmp
cmpsb
mov
pop
repz
sbb
fwait
imul
sbb
mov
xchg
les
loopne
repz
jae
inc
add
scas
insb
bound
movsl
lahf
sub
push
cltd
das
sarl
xchg
push
sarb
fadd
cltd
test
dec
pop
sbb
testb
jmp
jne
repz
cli
add
xchg
test
push
inc
or
mov
jmp
dec
nop
add
pop
out
outsb
aam
jb
add
jbe
mov
cmp
sbb
mov
stos
lret
testb
add
aas
mov
jg
adc
mov
jecxz
jns
xchg
push
out
jge
fs
xor
adc
inc
mov
pushf
push
roll
mov
inc
std
cmp
daa
std
add
dec
faddl
mov
mov
pop
imul
push
rcrl
fwait
and
inc
leave
sbb
cmp
scas
stos
es
sub
add
xor
mov
push
add
sbb
rorb
ds
call
bound
and
adc
push
ss
dec
lods
jo
into
loop
mov
pop
gs
orb
pop
fistpll
fidivs
mov
lods
stc
popf
and
adc
dec
mov
out
loopne
je
test
inc
imul
cmp
in
scas
cmpsl
movsl
xchg
add
scas
iret
fildll
mov
xchg
adc
mov
mov
jl
adcb
adc
aaa
mov
jnp
xor
popf
into
dec
push
movsl
jmp
jecxz
jp
push
bound
das
rcll
adc
cmpsb
push
inc
andl
cmpsl
aam
xchg
xchg
lods
jge
jno
push
fstpl
out
add
cmp
push
stos
dec
push
stos
inc
mov
inc
je
sbb
mov
dec
adc
aaa
xchg
mov
loop
dec
movsl
addr16
xor
pusha
out
sarb
je
imul
mov
mov
int3
add
call
adc
aam
fs
nop
nop
xchg
mov
imul
test
lret
mov
ret
scas
int3
sbb
enter
ja
adc
mov
jp
subl
jmp
xchg
xchg
or
fwait
adc
mov
push
mov
dec
test
lcall
repnz
fildl
fildll
xchg
dec
call
adc
out
inc
orl
fsts
mov
outsl
push
jnp
jg,pt
shrb
push
mov
pushf
lock
out
je
leave
mov
dec
mov
outsb
das
or
pop
ss
and
lods
mov
pushf
or
jp
pop
jmp
mov
push
movb
notl
jb
loopne
sbb
adc
les
cli
and
icebp
dec
adc
sbb
popf
lock
outsl
mov
lea
jns
sbb
in
dec
aam
mov
push
testl
decl
push
push
xchg
ret
aaa
subl
cwtl
outsl
cmp
push
std
add
ds
leave
mov
clc
push
rcll
ja
data16
xor
or
je
in
les
in
inc
lret
enter
inc
test
nop
jbe
mov
jne
fisubs
mov
test
nop
pop
mov
fcomps
and
xor
pushf
push
test
les
mov
xchg
mov
fsubl
xor
or
adc
inc
out
ds
cmpl
mov
test
es
sub
jae
fldenv
add
push
sbb
pop
mov
sbb
and
outsl
push
push
mov
fldl
push
push
adc
mul
cltd
stos
or
mov
aad
int
or
stos
js
sbbl
subb
mov
in
std
sti
jmp
adc
lock
test
pop
and
mov
cltd
jnp
xor
sti
mov
pusha
out
mov
sbb
pop
mov
jae
lods
fidivl
outsb
ds
mov
dec
rclb
pushf
xchg
xchg
aad
fistpl
pop
je
ret
add
clc
xchg
dec
or
xchg
fs
fsubr
jge
push
sbb
into
pop
mov
leave
xorl
mov
xchg
mov
int3
data16
es
push
push
outsl
daa
stc
jmp
sbb
mov
jo
test
jl
dec
loope
mov
fadd
or
loope
add
arpl
repnz
push
fisttpll
ljmp
fmuls
in
jae
sub
inc
pop
push
mov
sub
push
adc
negl
test
adc
sbb
xchg
hlt
and
mov
out
imul
xor
jno
lcall
aad
ds
sub
clc
xchg
rcr
in
andb
push
jo
arpl
lea
cltd
rol
mov
inc
push
pop
jle
mov
cs
repnz
icebp
cmp
xor
dec
cmp
leave
push
repnz
push
add
rcll
arpl
add
orb
divb
fstp
mov
cmp
outsb
mov
cmpsb
inc
scas
test
mov
cmpsl
mov
jo
cmpb
sti
idiv
in
sub
sti
add
sti
adc
je
out
sub
mov
je
out
cmp
dec
fcmovne
jno
decb
sbb
mov
rclb
mov
mov
pop
pshufw
pop
push
pop
xchg
orl
pop
test
adc
lods
je
push
and
adc
ja
xorb
pop
out
arpl
mov
fstps
mull
fnstcw
sahf
daa
xchg
cs
iret
and
sub
sahf
jmp
movsb
sbb
ret
dec
sbb
lods
out
fisubl
mov
xorb
jno
inc
fwait
in
leave
fbld
mov
mov
mov
jmp
movsl
jne
insl
mov
and
xor
push
jb
shrl
adc
xchg
arpl
pop
adc
shlb
out
cmp
inc
sbb
mov
in
or
sbb
cmp
sub
loope
add
mov
loop
cld
jno
mov
nop
addr16
outsl
mov
nop
inc
cmp
scas
add
and
in
jmp
inc
pop
lods
out
push
mov
fnstenv
jnp
push
and
scas
sbb
sub
negl
jl
and
dec
out
dec
add
jns
imul
sub
lds
jne
push
xor
mov
mov
mov
popa
pop
dec
cmpsb
rcrl
sub
and
insl
outsb
out
outsb
loopne
push
jns,pt
sbb
sub
mov
sbb
mov
add
data16
mov
imul
fstl
flds
fldt
mov
clc
adc
leave
mov
clc
ret
or
pushf
or
int
ret
jecxz
call
sub
mov
pop
or
pop
aad
or
insb
sarb
sub
lahf
mov
aaa
xchg
cmp
jb
mov
sub
sahf
jg
xchg
lea
fs
lret
cltd
das
sbb
sub
aad
scas
cltd
add
xchg
lea
pop
cwtl
dec
jbe
pop
dec
or
cs
or
je
xchg
movsb
mov
fwait
push
xchg
loopew
mov
sub
std
das
cli
xor
fldz
and
or
ficompl
mov
aas
adc
jne
push
or
addb
push
push
pop
inc
ficoms
repnz
pop
mov
sbb
xchg
xchg
jecxz
cmp
mov
xchg
xchg
pop
xchg
mov
stos
and
leave
cmp
data16
pusha
mov
popa
mov
shll
lret
or
pusha
add
nop
xor
out
xlat
jne
fistpll
jecxz
or
mov
lahf
mov
imul
and
xchg
push
in
faddl
push
es
lret
inc
or
ds
jg
sub
js
stc
push
cmpl
pop
outsb
decl
push
sbb
pop
xor
xchg
or
andl
pop
and
xor
sbb
pop
xchg
stos
pop
rcrb
and
int
xchg
push
lods
and
in
and
fmull
movsb
push
imul
gs
aaa
sbb
cmp
push
movsl
cmc
jb
int
data16
lret
dec
lahf
jae
lcall
insw
fldenv
lds
and
and
sbb
les
xchg
pop
ss
mov
push
sbb
jb
stos
mov
mov
in
jb
sbb
adc
or
and
iret
push
subb
pop
andb
jo
mov
jnp
gs
push
insb
rcr
sbb
jg
jmp
lahf
scas
bound
xchg
loopne
mov
out
push
pop
cltd
cmp
sar
lahf
fs
push
xchg
mov
xchg
push
leave
or
test
mov
xlat
mov
rorb
iret
cmp
xor
sub
add
icebp
imul
and
movsl
lods
jp
ss
jmp
arpl
mov
inc
jbe
test
adc
push
repnz
lahf
frstor
dec
test
nop
xchg
rcl
xlat
cmp
in
rolb
push
in
lods
ljmp
je
pop
add
mov
sbb
xor
inc
sbb
rorb
add
imul
xchg
inc
cmp
add
cwtl
xlat
jno
lods
push
xor
push
inc
jge
addr16
xchg
add
mov
inc
mov
inc
inc
cli
es
push
and
xchg
pushf
mov
or
xchg
pop
mov
fiaddl
xchg
mov
jbe
mov
cs
jge
in
enter
sbb
outsl
imul
lods
pushf
or
lcall
sub
pop
push
mov
push
ret
loope
loope
push
loope
cmp
add
sti
pop
aad
xchg
jnp
xchg
jl
add
cmc
cltd
add
sub
dec
ficoms
push
les
jl
lret
je
mov
adc
sbb
sub
mov
push
cs
aaa
sub
out
leave
test
sahf
sahf
mov
cld
imul
nop
xchg
push
rolb
cmc
pop
lret
cmp
sub
sub
repz
stos
cmpsb
push
rol
movsb
xor
mov
add
leave
cmp
lea
inc
fisubl
mov
xchg
jno
das
jge
scas
jmp
and
mov
mov
xchg
aam
or
and
jle
loope
xorl
test
xor
sbb
push
repnz
xchg
shr
mov
lods
lahf
loopne
fcmove
pop
cld
xor
pop
lcall
fcmovb
cmp
dec
lods
insl
or
dec
mov
insb
sti
dec
inc
dec
jl
xchg
in
or
incl
ljmp
inc
push
xor
stos
mov
xchg
cmc
sbb
mov
out
jg
imul
rcrb
aas
mov
pusha
scas
xor
xchg
std
dec
adc
loop
daa
fucomp
add
insb
add
clc
and
cmp
in
in
loop
pop
in
mov
cmp
enter
sub
sub
loopne
xchg
jle
inc
outsl
bound
pop
push
mov
shlb
in
cmc
arpl
in
mov
jmp
dec
movlps
xor
or
jnp
jg
sahf
or
gs
dec
mov
adc
sbb
or
inc
xchg
lret
push
jge
bound
push
stos
adc
cmp
xchg
cmp
xchg
jae
dec
mull
jg
jl
rolb
push
push
pop
std
xlat
lds
ret
aaa
enter
xchg
je
cmpsl
xchg
subb
inc
dec
pop
lea
push
insb
jmp
dec
dec
cmp
incl
push
test
cltd
sbb
xchg
pushf
repnz
into
leave
mov
loope
push
pop
test
loope
vmptrld
and
shl
psubq
mov
xchg
mov
pop
outsl
mov
or
sahf
pop
xchg
jne
subb
pop
lods
outsb
cmp
loopne
and
js
push
sbbb
push
ss
cmpsb
ds
fnstsw
push
pop
dec
cmp
inc
xor
inc
es
lret
pop
in
push
scas
stos
sub
xor
inc
sub
mov
mov
cld
insb
sub
xor
imul
jle
add
mov
cltd
std
sbb
or
call
ljmp
adc
jne
in
jb
pop
pop
lcall
addl
gs
sbb
push
lahf
xlat
mov
cmp
in
add
pop
inc
cmp
into
out
test
mov
lretw
dec
cmp
rcrb
insb
sub
ret
dec
adc
pop
push
xchg
or
push
add
sub
adc
aad
jno
dec
xor
xchg
outsl
adc
loop
shll
xchg
int
sub
mov
out
fcoms
pop
fcmovnbe
imul
mov
pop
or
jb
push
test
inc
clc
push
push
sub
in
dec
xorl
mov
push
aam
outsb
ret
mov
dec
fidivl
dec
stos
ficompl
jmp
sbb
sub
sub
xchg
mov
pop
mov
popf
mov
inc
mov
stos
lret
adc
int3
imul
lods
adc
jl
mov
movsbl
shl
fs
fiaddl
xchg
sbb
pop
das
cmpb
shr
add
sub
jns
xor
sbb
push
enter
sub
fcoml
cmp
dec
pushf
setno
sbb
cmpb
inc
or
mov
or
mov
pushf
mov
or
repz
clc
or
lret
in
pop
movsb
movsl
push
sti
or
push
out
jecxz
enter
jns
cmp
sub
or
add
inc
or
xchg
cmp
cmpb
xor
lret
enter
mov
push
xor
fdivrp
mov
shlb
or
dec
pop
enter
xor
ljmp
xchg
push
scas
mov
testb
vcvttss2si
int
loop
pop
sbbb
inc
repz
ja
mov
mov
pop
cltd
add
orl
and
dec
jns
mov
aaa
push
into
pop
loop
cmp
insb
mov
and
repnz
movsl
insb
test
repz
xchg
push
in
das
fsubs
inc
jmp
jae
scas
enter
inc
sub
aaa
jmp
xor
and
mov
sbb
movsb
pop
scas
fwait
shrl
scas
add
iret
call
or
and
hlt
xchg
jge
mov
cld
push
push
in
movsb
push
call
push
sbb
inc
adc
out
push
push
xorb
cmp
mov
mov
and
push
out
pop
dec
pop
ret
addb
shl
and
in
add
mov
scas
cmp
mov
gs
ret
xchg
mov
scas
jmp
pop
cli
lods
inc
jp
push
fistps
mov
in
lret
pop
sub
mov
dec
mov
cltd
insl
jg
push
pop
jge
sbb
std
orb
or
mov
repz
sti
movsl
fwait
and
test
push
cmpsl
enter
sbb
es
jae
cld
int
mov
mov
ss
mov
int3
inc
inc
dec
rcrb
inc
addr16
loope
pop
dec
xor
leave
jbe
sbb
cmp
dec
adc
pop
insl
inc
push
das
fnsave
adc
or
fldenv
shlb
lret
push
jmp
cmp
frstor
lock
push
sti
lods
jl
call
push
idivl
mov
loope
mov
ja
int
push
nop
ret
stos
push
pop
std
mov
xor
test
arpl
jne
jge
or
mov
push
lcall
mov
pushf
into
inc
out
xchg
jp
xor
fcmovne
adc
jg
jge
rcl
ja
jge
mov
rcrb
cmp
popf
pusha
out
jne
stos
push
inc
lcall
lock
je
scas
out
aam
add
cmpsl
loopne
lods
shrl
lret
ljmp
cs
xlat
arpl
outsl
mov
add
ds
xchg
add
pushf
idivb
pop
mov
leave
icebp
dec
scas
pushl
nop
movsb
movsb
cmp
jno
movb
sbb
fsts
mov
sbb
inc
dec
jl
sub
xor
outsb
pop
pop
fistps
stos
sub
outsb
inc
mov
dec
fidivrl
fsubs
fcoms
mov
push
mov
inc
das
adc
je
cmc
jl
popl
mov
cmp
gs
out
or
adc
inc
push
and
es
sbb
inc
into
lcall
lea
in
addb
movsb
fcmovnb
inc
jae
jle
push
shlb
sub
jno
xor
in
inc
push
and
addr16
or
popf
jne
test
push
xor
sbb
scas
rclb
lea
fstpl
icebp
push
fdivs
inc
mov
pop
aas
arpl
mov
das
mov
leave
lcall
pop
sub
ret
int3
out
push
and
cld
mov
lods
cld
ds
lret
ljmp
and
pop
inc
aad
pusha
rcrb
or
or
and
ficomps
jl
pop
cs
mov
es
xor
ds
push
data16
mov
mov
xchg
stc
outsb
jno
adc
scas
push
sti
inc
and
dec
mov
clc
inc
dec
and
popf
ss
cmp
lock
dec
sbb
fdiv
dec
mov
sbb
xor
scas
inc
movsb
fcomp
ljmp
mov
fs
nop
inc
xchg
loopne
xor
pop
xchg
pop
fcomip
fdivl
sub
dec
add
mov
sbb
adc
or
sbb
and
call
pop
or
mov
sti
inc
out
pop
pop
mov
pop
pop
push
jno
add
mov
xchg
jo
into
jge
inc
pop
sti
pop
xor
inc
movsl
flds
lock
push
repz
mov
in
ds
cli
mov
lret
xchg
movsb
pop
sub
daa
mov
mov
pop
pop
lret
xchg
repnz
mov
adc
cmpsl
jno
out
mov
push
sbb
jp
jnp
xorl
and
push
jno
lea
and
inc
ja
mov
inc
xor
ja
mov
jno
xchg
insb
sbb
lahf
ss
xlat
lock
or
mov
popa
loope
or
call
loopne
sub
push
scas
sub
mov
mov
inc
mov
cmpsb
lods
andl
sbb
fdiv
push
xchg
outsb
push
les
push
mov
sub
outsb
loope
shrl
jmp
stc
mov
sub
xchg
or
cmpsb
cmp
sbb
lahf
dec
or
call
jno
outsb
pop
repnz
mov
xchg
sub
jb
sub
popa
in
shlb
inc
push
out
lsl
into
pushf
test
sarb
clc
push
jle
mov
shlb
ss
mov
rcrb
stos
loop
js
jg
fdivl
xchg
inc
sbb
or
mov
test
or
sub
push
cmp
sub
sbb
fcomip
pop
jb
cmpsl
mov
enter
mov
mov
jo
sbb
jbe
loopne
mov
jmp
pop
mov
adc
gs
loopne
fsubs
xor
cmpsl
dec
or
lret
lods
xor
sbb
and
in
mov
dec
lsl
cltd
jnp
out
ficoml
jno
add
call
push
lcall
std
pop
bound
jge
inc
and
pop
jo
aaa
cmp
add
fisubrl
or
outsl
popa
or
mov
test
mov
jg
call
dec
add
out
pop
mov
stc
sbb
fcoms
mov
jne
into
int
test
shr
mov
and
repnz
dec
aas
add
movsb
xchg
daa
lea
jg
repnz
lret
fadds
mov
clc
or
mov
push
push
stc
fistpl
sbb
cli
mov
mov
dec
dec
negl
adc
sti
out
mov
xor
gs
das
and
sbb
cs
cmp
mov
ljmp
push
aam
mov
inc
mov
push
push
imul
stc
mov
jecxz
sub
fistl
adcl
xor
add
jp
jle
pop
aad
shlb
addl
xchg
mov
mov
repz
or
repnz
jo
mov
lock
out
sub
xchg
cmp
popa
push
loopne
adc
mov
cmp
jmp
and
sahf
cmpsb
mov
scas
aad
mov
pushf
sbb
mov
test
aaa
sbb
push
push
cmp
xchg
push
cmp
sub
stos
mov
jae
leave
lcall
lods
push
push
in
out
xchg
pop
rcrl
xor
adcl
dec
jmp
add
jmp
call
das
pop
popf
ret
cmp
or
mov
xor
dec
pop
addr16
bound
pop
xor
mov
adc
arpl
rcr
or
sbb
jae,pn
xchg
imul
fcoms
cmp
icebp
push
in
in
test
bswap
xor
stc
dec
xchg
movsl
jnp
inc
mov
out
subl
push
icebp
rep
aad
in
lods
mov
testb
movsl
add
xchg
push
mov
push
pop
or
arpl
test
adc
outsb
nop
mov
in
jle
cs
dec
std
adc
mov
cltd
push
jg
inc
outsb
lea
enter
mov
fistpl
cmp
xor
cs
popa
stos
notb
daa
mov
cmp
inc
cmp
out
jno
into
arpl
ja
sbb
mov
loope
out
jnp,pn
jl
push
push
fisubrs
outsb
jne
dec
pusha
out
cmpsl
lods
sub
xorl
pop
dec
aam
sbb
hlt
jp
ret
bound
jae
inc
cmp
xor
frstor
inc
xor
addr16
test
dec
lods
push
stc
cmp
mov
out
test
adc
mov
and
cmp
lret
movb
xchg
mov
jp
enter
into
dec
mov
pop
fistpl
out
shlb
jle
ror
cmp
sbb
jg
xlat
push
in
pop
insl
imul
int
inc
bound
push
out
cmp
mov
in
rcrb
jno
xchg
ret
xor
lods
jbe
mov
cmc
push
and
adc
clc
add
movzbl
repz
in
stos
cmp
xchg
je
mov
rolb
xor
mov
aad
xchg
aaa
push
into
mov
push
lock
ljmp
fnstcw
int
add
call
xchg
mov
xchg
add
mov
scas
jno
cmpsl
fiadds
xchg
inc
leave
nop
loop
push
mov
dec
push
int3
nop
fwait
xchg
cmc
or
stc
cmpsb
or
xorb
sbb
pop
xchg
int
hlt
adc
adc
int
ljmp
push
pop
inc
scas
xor
popf
add
push
dec
push
pop
jns
sbbl
mov
sub
ret
sbb
cwtl
popa
sbb
icebp
faddp
pop
and
lods
xlat
in
in
dec
rcrb
lret
icebp
leave
cli
call
repnz
cmp
outsl
mov
popf
sbb
jns
pop
xor
dec
nop
jmp
or
movsb
pop
inc
dec
push
test
adc
sbb
mov
xor
mov
inc
roll
fsubr
sbb
jno
adc
lret
xchg
in
in
fnsave
or
test
xchg
jae
inc
shlb
mov
pop
mov
inc
xor
cli
mov
ret
sub
lea
lcall
jge
test
in
stos
rcrl
push
adc
mov
inc
iret
mov
or
sub
pop
sbb
add
scas
das
add
add
jnp
lea
pop
scas
dec
cld
shrl
jb
inc
test
cmpl
sarl
mov
int3
jle
pop
cmp
mov
shrl
pop
pop
xchg
addr16
and
and
cmpb
or
loope
ds
scas
mov
xchg
sbb
out
pop
add
xlat
sbb
lds
mov
mov
sbb
mov
push
xor
cmp
lods
mov
xchg
mov
inc
cwtl
stos
stos
adcl
jg
xchg
fimuls
fs
addr16
cmpsb
loope
jno
mov
sub
scas
cli
mov
pop
dec
out
sbb
cld
inc
push
xor
push
pop
pop
fimuls
shl
dec
nop
dec
push
sub
cltd
dec
mov
lahf
push
mov
roll
sahf
push
inc
push
pop
push
fcoml
xor
push
xlat
lcall
jl
xor
add
in
scas
mov
sarb
jo
sbb
imul
sbb
inc
and
or
mov
pusha
inc
jnp
pop
ds
loopne
loop
or
xchg
data16
inc
xchg
ljmp
sub
stc
and
jnp
bound
imul
or
or
gs
stos
mov
insb
jmpw
mov
or
aam
xchg
jns
pop
jle
ljmp
scas
cmp
sbb
cld
sub
lret
subb
ss
shl
call
sub
ret
mov
and
adc
lahf
inc
fucomip
imul
stc
rclb
adc
inc
pop
pusha
shrl
mov
mov
sbb
mov
mov
add
dec
rcrl
fdivrl
in
mov
outsb
xlat
mov
jecxz
pop
movsb
cmp
cwtl
pop
mov
mov
xchg
dec
inc
das
int
sub
inc
sbb
cmc
stc
in
sbb
inc
or
mov
sbb
and
cs
aad
push
jnp
rorb
push
lods
mov
mov
sub
daa
bts
mov
test
push
cld
shl
leave
cmp
aad
inc
shll
repz
mov
push
xchg
inc
call
imul
xchg
pop
aas
ljmp
cmc
jo
fstl
rclb
mov
fildl
xchg
adc
sahf
jg
sub
imul
xor
pop
mov
inc
imul
js
and
cmp
inc
test
test
fwait
or
out
push
das
testb
imul
enter
in
stc
cmp
outsl
xor
addl
test
mov
jo
adc
jo
ljmp
cmp
into
test
cwtl
sarl
inc
into
pop
stos
iret
cmp
dec
pusha
push
into
jecxz
outsl
pop
out
cltd
sahf
inc
add
jle
jg
mov
lcall
mov
fprem1
xor
mov
cmp
scas
fwait
xor
mov
jae
jl
loop
popa
or
inc
in
in
fimull
iret
ljmp
fst
insl
insb
sub
pop
jbe
idivb
loope
push
inc
gs
and
fisubrs
daa
in
mov
scas
mov
cld
and
ds
sbb
insb
sti
push
shrl
xor
inc
stos
pop
repnz
cmp
adcl
sbb
xor
jge
aaa
jnp
cltd
dec
arpl
mov
das
pop
int3
jno
and
hlt
stos
lcall
lret
push
jae
fldenv
and
adc
ret
insb
jle
icebp
repnz
bound
sbb
mov
lods
pusha
xor
or
cmp
les
lods
inc
sub
scas
adc
gs
mov
jg
jae
test
or
push
int
cmc
in
jns
adc
push
leave
push
jbe
rol
jle
je
inc
lret
shlb
push
dec
insb
inc
dec
and
pop
jbe
ret
pop
lcall
push
out
lret
mov
cmpsl
sub
fcoml
imul
xor
xchg
dec
imul
xchg
aaa
pop
ss
add
loop
lock
and
cltd
mov
cmp
xchg
mov
stc
mov
xchg
cs
add
rcrl
jae
aam
roll
psrlw
jb
fisubl
mov
or
or
loope
repz
mov
cmp
shlb
sub
pop
cld
hlt
mov
lds
xlat
pushf
push
ficompl
cmp
aas
subb
mov
push
repz
inc
cli
or
shl
roll
sub
push
inc
rcll
js
dec
popf
test
lcall
push
inc
push
fwait
jle
lahf
ja
movsw
loope
enter
shr
sub
pop
sub
iret
cmpsl
xchg
addr16
push
jmp
xor
std
jne
cltd
xchg
cmpsb
lea
enter
pop
xchg
cmp
ja
lcall
shll
dec
add
or
icebp
bound
outsl
cmp
or
hlt
mov
cmc
lods
sbb
cltd
loop
push
js
sub
leave
jecxz
ds
fwait
dec
mov
pop
dec
js
lods
in
sub
mov
sbb
cmp
cli
outsl
sbb
pop
or
mov
inc
jae
add
inc
fdivl
or
lods
sbb
dec
push
pusha
sbb
or
int3
je
push
jnp
sub
out
pushl
sub
xor
push
mov
sbb
lcall
pop
test
jnp
out
jl
or
pop
test
adc
aad
cld
cmp
int
lea
or
clc
xchg
aam
sbb
push
add
bound
pop
dec
and
mov
leave
mov
add
sbb
mov
jnp
aas
in
loop
mov
adc
mov
out
adc
xchg
in
out
out
or
fmull
mov
js
mov
or
repnz
push
sbb
and
and
jae
lea
les
mov
aaa
xchg
pop
push
cli
xchg
mov
dec
mov
std
jle
adc
cmp
dec
or
lret
pop
jns
xlat
jae
aad
mov
pop
idivl
push
jo
push
hlt
or
add
pop
int3
jg
pop
jmp
or
inc
pop
mov
pop
add
popf
xchg
jb
mov
push
scas
and
inc
adc
testl
arpl
stos
fwait
pop
jno
xchg
in
mull
rorl
gs
push
add
mov
lret
adc
int3
add
pop
mov
jg
push
pop
rcr
xor
lods
out
dec
inc
cmp
jp
and
and
push
int
dec
or
add
push
xchg
mov
int
repnz
lret
and
mov
mov
mov
xchg
out
push
adc
addr16
inc
xor
cmp
xor
mov
mov
fistpll
pushf
sub
fsubl
fcoms
push
out
dec
jl
pop
lods
xor
sti
fs
rcrb
xchg
dec
mov
mov
dec
shlb
pop
or
sbb
pop
jae
cltd
mov
inc
inc
or
cli
repz
pop
pop
popa
xor
lods
lcall
lret
push
and
jg
mov
push
xchg
outsb
push
mov
sub
sbb
daa
or
jecxz
int
movsl
xor
shll
das
dec
pushf
sbb
popa
rorl
mov
in
and
dec
or
dec
sbb
call
addb
fdivp
rcrb
xchg
cmp
push
pop
pusha
mov
pop
push
push
nop
cli
and
xchg
test
fadd
mov
dec
pop
sti
inc
ret
bound
xlat
jg
sub
imulb
mov
leave
xchg
mov
mov
in
arpl
and
mov
cmp
push
or
jp
xchg
push
cmp
imul
cmp
mov
testb
cmp
lcall
shrl
imul
push
ss
jo
repz
fldcw
ret
repnz
jno
or
loope
inc
dec
pop
movsl
xchg
or
add
addr16
daa
xchg
sbb
lea
aad
mov
pop
fnstsw
fldenv
cmp
mov
mov
or
pop
shlb
add
fsubrs
loopne
int
add
pop
sub
cli
shll
mov
cmp
pushf
leave
push
and
imul
nop
jge
sub
movsl
xor
mov
enter
dec
in
adc
xchg
push
jns
mov
popa
or
adc
test
and
aas
cltd
cmp
xchg
sbb
je
push
faddl
mov
hlt
ffreep
aaa
shlb
xor
adc
shlb
test
push
sub
cmp
rol
sti
jmp
pop
cltd
or
xor
std
jns
popf
sbb
popl
inc
jnp
push
leave
jb
fsubr
imul
xchg
pop
hlt
mov
inc
insl
sbb
push
mulb
loope
and
inc
jg
pop
std
ja
mov
rorl
mov
pop
ret
aad
push
push
popa
push
push
in
add
cmp
jo
int3
iret
jb
pop
mov
push
mov
fs
pop
dec
fstl
or
cmp
sub
jp
mov
fstpt
or
aas
push
mov
adc
scas
dec
lret
cmp
fs
mov
xor
mov
shll
pop
movsb
mov
cmp
adc
dec
push
pop
ljmp
prefetcht0
xchg
imul
lret
inc
out
divb
mov
mov
stos
loopne
repz
ljmp
aam
data16
push
cmc
cmc
mov
fsubrs
scas
xor
mov
jg
daa
xor
sub
enter
fwait
xchg
mov
pop
cmc
adc
aad
in
repz
cli
and
fadd
push
mov
enter
add
mov
fbld
rorl
std
xor
je
cmpsl
inc
mov
js
mov
cwtl
pop
dec
push
sub
pop
es
cmp
in
lea
sub
adc
jne
and
lods
push
cs
sub
mov
daa
mov
shll
pusha
mov
popf
js
scas
mov
xor
aaa
jmp
std
push
sbb
rep
cs
and
popa
inc
int3
inc
frstor
rorb
mov
inc
stos
fcom
jg
imul
inc
sub
add
jmp
test
insb
cmp
cmc
lret
addr16
mov
add
xor
scas
sbb
mov
ret
addb
js
lahf
mov
mov
adc
push
xor
dec
sbb
sub
mov
mov
popf
gs
iret
daa
jns
mov
mov
ljmp
lcall
stos
dec
mov
rcll
sub
sti
sub
inc
ret
mov
insl
pop
out
shlb
subb
stos
or
mov
outsl
scas
in
sub
mov
inc
stc
pusha
inc
pusha
int3
arpl
adc
mov
sub
das
call
insl
push
sbb
and
subl
xor
cs
mov
jp
adcb
or
xor
inc
add
push
aad
icebp
ret
or
or
cs
inc
add
call
rolb
mov
stos
inc
jbe
ret
outsb
mov
sub
add
sbb
inc
sbb
pusha
push
roll
jp
add
cmp
roll
cmp
loop
xor
fwait
lret
mov
adc
loope
or
push
clc
bound
mov
push
add
jmp
cmp
test
xor
dec
jl
mov
mov
add
jp
loop
pop
lea
aas
aaa
filds
repz
lret
and
outsb
ret
pop
jne
mov
mov
jnp
jb
imul
mov
sub
cmp
lcall
das
outsl
je
mov
and
test
sahf
adc
mov
repnz
cwtl
xor
dec
pop
test
repz
fwait
mov
aas
adcl
jne
gs
pop
in
mov
imul
andl
pop
repnz
icebp
jnp
es
mov
notl
int3
nop
mov
mov
inc
leave
data16
dec
xchg
sbb
dec
adc
test
mov
sahf
and
adc
daa
imul
enter
mov
push
cmpsl
add
mov
inc
lds
add
les
pop
and
bound
sub
gs
jae
leave
mov
in
packssdw
andl
pop
sbb
sbb
dec
jbe
mov
test
decb
jp
lcall
out
test
mov
imul
jo
js
pop
adc
mov
popa
cmp
testl
push
arpl
test
dec
loopne
mov
cmpsb
sub
mov
pop
or
sub
imull
and
pop
nop
les
aas
xchg
pop
sub
stc
jns
sub
mov
dec
mov
pop
pop
adc
mov
inc
ljmp
clc
mov
inc
sbb
cmp
inc
andl
adc
jne
pop
sarl
sbb
mov
mov
jb
adc
jae
lcall
add
js
in
frstor
mov
push
xor
jb
fmull
stos
or
movsb
inc
and
lock
insl
adc
loope
add
jmp
cmp
call
mov
or
popf
lahf
cmp
inc
add
out
pop
adc
cmpsl
test
inc
repz
cmp
stc
mov
popa
dec
shll
sbb
out
stc
out
jno
xor
cld
cmp
test
jge
adc
lahf
sbb
jmp
in
aad
xchg
push
aas
inc
and
xchg
into
dec
cmp
mov
jns
xchg
es
mov
rcl
adc
loop
fists
jg
xchg
or
iret
add
outsl
es
sarl
arpl
xchg
mov
cmp
cmp
or
sbb
mov
push
mov
fisttpl
add
fnclex
popf
and
jb
jl
mov
test
push
add
xchg
insl
mov
je
adc
mov
cld
es
fldcw
push
mov
sub
xchg
iret
int3
push
inc
hlt
mov
into
dec
sti
dec
mov
sub
nop
mov
add
jge
rclb
jne
add
testl
jmp
push
test
pop
scas
test
in
sub
mov
add
mov
xchg
imul
dec
cltd
and
mov
out
mov
xchg
xchg
cli
into
movsb
push
addr16
ds
jmp
inc
repnz
repnz
nop
insl
sub
mov
lock
loopne
cltd
push
out
shll
test
sub
call
stos
jae
and
and
or
icebp
fidivrl
sub
push
push
movsb
cld
les
jge
or
fnstcw
ljmp
cld
aad
dec
and
scas
adc
fwait
xor
and
mov
scas
add
fsubl
aam
cmpsl
movsl
lods
stos
sbb
inc
add
jae
cmpsb
mov
mov
enter
pop
ret
inc
nop
and
stc
in
pop
imul
shlb
xchg
shll
inc
push
pop
or
mov
repz
stc
fwait
out
outsl
neg
mov
shlb
stos
in
ja
lret
sub
sub
lea
push
stos
pusha
into
adc
les
add
aam
xchg
ss
out
mov
leave
push
xor
out
mov
mov
out
xor
push
lods
lods
lock
stc
cmpsl
subb
std
jecxz
icebp
sub
and
ljmp
cs
or
push
js
xor
push
push
cltd
stos
dec
out
dec
roll
daa
mov
pop
xchg
sub
xchg
mov
enter
sub
jb
and
add
add
sub
scas
adc
push
cmp
divl
xor
pop
xor
jno
mov
xor
test
sub
test
inc
cwtl
cmp
in
je
jns
les
loopne
and
inc
cwtl
out
sbb
fisttpll
mov
mov
sub
mov
xchg
xlat
fs
leave
jo
dec
jne
push
xchg
mov
sbb
arpl
inc
movsb
and
mov
sbb
or
scas
repnz
jge
add
jnp
sahf
sub
mov
adc
xor
jmp
sarb
push
jno
das
movsl
push
sbb
fildl
mov
inc
mov
lock
xchg
test
pop
stos
mov
mov
xchg
movsb
movsl
hlt
pop
movsb
ret
xor
add
gs
and
pop
stos
outsb
jb
les
push
movsb
lea
fmull
je
and
fidivrl
loop
loop
mov
sti
xchg
enter
jnp
mov
xchg
test
orl
cmc
pop
insb
scas
push
sub
adcb
or
pop
or
jb
lds
lock
mov
sub
xchg
push
jle
loopne
xor
cmp
imul
and
jle
dec
xor
fwait
insb
test
jnp
imul
push
mov
xchg
iret
sbb
popa
lods
mov
xchg
dec
push
std
faddp
test
int3
gs
pusha
aam
sub
mov
imul
mov
mov
jne
mov
xchg
lahf
and
mov
jp
in
jo
pushf
mov
fidivrl
dec
icebp
or
imul
cmpb
loopne
bound
add
mov
adc
leave
popf
mov
testb
xor
out
dec
mov
push
xor
mov
dec
test
jl
mov
lahf
insl
fwait
icebp
das
jae
xchg
cmp
repnz
inc
xchg
rorb
rorl
push
mov
dec
add
popf
or
xlat
mov
or
mov
fadd
jmp
sub
cmp
xorl
cmp
test
fcom
das
std
pop
dec
std
pop
adc
clc
imul
sbb
or
add
out
gs
push
cmc
fdivs
mov
pop
pop
sbb
add
lds
inc
add
sti
js
or
lahf
cltd
push
mov
shlb
adc
mov
xchg
push
jne
lea
push
mov
jecxz
add
rcll
out
and
pop
cmp
push
rcrl
pop
dec
sub
scas
mov
jnp
xor
lcall
adc
rorb
lock
push
sub
lea
adcl
adc
loope
rcl
mov
mov
jg
test
mov
sub
dec
xchg
sahf
pushl
push
cmpsb
jl
leave
hlt
iret
inc
or
mov
lds
cmp
xorb
push
test
daa
jl
scas
sub
pop
dec
iret
mov
sbb
addr16
push
push
xor
sbb
sbb
push
inc
jnp
test
shll
sbb
cmp
fldt
xchg
movsl
shlb
inc
pop
jmp
cmpsl
mov
and
inc
sbb
fs
pop
fldcw
lds
ret
cmp
add
push
stos
jnp
push
out
inc
mov
fmull
mov
mov
loop
outsb
push
adc
movsb
push
push
xor
pop
push
xchg
inc
pop
dec
push
and
pop
popf
xchg
stos
mov
lock
stc
enter
nop
sbb
fldl
cmpsl
imul
xlat
mov
jg
push
aad
sub
setl
das
cmp
ret
or
pop
mov
xchg
dec
mov
mov
mov
jne
int
bound
cli
mov
pop
cmc
jne
mov
shl
out
js
mov
pop
cmp
xchg
dec
in
push
cmp
imul
mov
imul
cmpsl
ljmp
mov
xchg
out
mov
adc
or
jge
jmp
jmp
stc
jle
and
loop
pushf
addb
popa
frstor
jge
xchg
fimull
inc
insb
sbb
test
loopne
inc
dec
test
inc
add
xor
fsts
stos
jae
xchg
rorl
xchg
stos
and
test
mov
mov
mov
mov
hlt
scas
jnp
push
scas
mov
pop
scas
push
or
push
mov
ret
mov
jg
ljmp
hlt
pop
int
jg
sbb
adc
movsb
mulb
imul
mov
sub
mov
les
cmp
sbb
xchg
push
cli
dec
ss
jle
stos
fs
adc
jbe
mov
nop
push
fucomp
hlt
sti
dec
adc
or
mov
adc
mov
into
leave
xor
repnz
jbe
sub
or
xchg
pop
outsl
pop
fwait
add
cli
aam
adc
insb
scas
arpl
insb
enter
lcall
inc
push
mov
jge
adc
test
subb
or
ja
pop
add
push
bound
lds
fidivrs
push
xlat
xchg
imul
jp
shll
push
es
ds
sbb
mov
inc
outsl
xor
pusha
cmp
jg
adc
and
and
push
ret
daa
in
adc
scas
pop
enter
inc
jl
push
gs
xchg
adc
test
mov
xlat
push
enter
les
repnz
cmpl
inc
fsubs
add
or
lods
testb
cmpl
les
outsb
mov
sbb
clc
and
repz
outsl
sub
insl
je
std
lods
bound
xchg
rorl
push
jmp
fildl
xchg
js
jmp
pop
ret
push
xchg
sbb
jecxz
lock
inc
mov
mov
mov
inc
or
cli
mov
mov
push
xchg
mov
das
daa
fcmovbe
fcmovnb
rclb
mov
imul
fcoml
push
mov
int
inc
add
mov
push
ficoms
mov
fcmovnbe
mov
outsb
fstl
add
lods
mov
inc
andl
lods
xor
out
mov
pop
cwtl
jl
push
lds
mov
orl
fstps
mov
fwait
arpl
or
mov
fcoml
rol
outsl
or
push
inc
mov
in
jg
mov
addr16
ds
push
mov
out
fldt
pop
jp
pop
mov
fnsave
cmp
movsb
test
mov
cld
inc
cmpsl
scas
add
cmp
lret
xor
inc
fisttpll
movaps
and
fadd
cmp
xor
fnstcw
les
cmp
sub
int3
jnp
add
std
stos
xchg
fwait
xor
aad
out
pop
sbbb
or
add
fcos
jecxz
ret
jne
jns
sbb
fcomps
jne
push
sub
clc
pop
sub
sub
daa
aam
mov
pusha
add
jg
sub
jge
push
fs
xor
jae
push
pop
or
arpl
loop
sbb
std
xchg
aad
xchg
or
cs
jne
dec
cld
scas
push
pop
aad
mov
pop
cmp
mov
mov
sub
xor
cwtl
mov
adc
shlb
mov
sbb
cmp
arpl
cmpl
lret
test
xchg
loope
test
ret
add
and
xor
sub
ja
nop
xor
push
dec
stc
xor
sub
pushf
lret
inc
jae
xchg
clc
xchg
jo
or
stos
mov
mov
sti
inc
or
push
mov
xchg
xorb
inc
pop
mov
adc
xchg
xchg
out
fwait
ss
mov
sbbl
inc
stos
and
lock
cmp
nop
dec
loope
int
scas
jae
sbb
cltd
mov
push
div
xor
ja
mov
mov
xchg
icebp
xchg
cmp
inc
cmp
inc
in
mov
pop
and
cmpsl
push
push
pusha
jne
xchg
xchg
mov
fs
lods
add
pop
mov
jnp
sub
inc
iret
fistpll
lcall
loop
sbb
cmp
add
stos
dec
mov
test
cld
nop
mov
out
xor
push
ja
or
jg
push
daa
int3
xor
test
cwtl
int
in
shrb
gs
sub
dec
out
aad
cli
xchg
lds
stc
gs
out
push
xchg
and
and
push
repz
icebp
mov
popf
xor
mov
xchg
mov
mov
js
movsb
dec
lods
outsl
out
push
sahf
sub
cmp
aad
jns
cltd
test
out
das
dec
lahf
nop
lock
sbb
push
dec
lea
xor
int3
fsubr
enter
add
jle
popa
cmpl
clc
cmp
outsl
cmp
pop
mov
push
jae
sbb
add
xor
pop
mov
lret
xor
jle
nop
mov
mov
cmp
pop
jecxz
pop
lods
xchg
pop
je
fxch
lret
sbb
cmpsb
mov
jae
fisttps
enter
jbe
dec
stc
out
adc
popf
stc
cs
std
out
xlat
fs
push
das
idivl
xorl
adc
stc
jb
lock
in
lret
mov
shll
inc
jecxz
cmp
pop
je
mov
fidivs
mov
shlb
adc
fnstenv
adc
hlt
mov
xchg
push
inc
mov
dec
jmp
mov
cltd
mov
adc
fisubrl
mov
in
inc
mov
iret
cmpsb
jb
xchg
mov
sbb
mov
sub
or
lds
cwtl
xchg
mov
mov
lods
icebp
sub
sti
push
lahf
icebp
xchg
mov
and
and
inc
out
out
sub
xchg
int
mov
aas
lret
xchg
leave
fstpl
test
push
cld
js
insb
add
pop
cwtl
insl
loope
sub
gs
fs
mov
push
add
loop
jg
adcl
jge
mov
les
into
adc
fisttps
lcall
push
ljmp
data16
pop
xchg
mov
leave
and
pop
mov
push
push
cmp
xchg
mulb
mov
mov
fwait
jb
sbb
lods
lods
lock
lds
add
dec
insb
fisubrl
shr
es
lock
fldcw
sbb
imul
sti
shrl
clc
and
into
cmp
or
data16
jle
or
cmp
ljmp
jnp
push
and
sub
sti
sbb
mov
aad
jae
cmp
bound
mov
inc
pop
jmp
jmp
or
adc
divl
out
ljmp
pop
ret
inc
xor
arpl
xchg
or
movsb
push
ret
push
scas
std
jae
jnp
jo
adc
enter
mov
inc
add
ss
add
sbb
sbb
out
cmpsb
add
sbb
pop
and
ljmp
add
jns
cmpl
in
mov
cmp
imul
xor
xor
add
arpl
mov
fsts
ror
mov
jae
mov
js
popw
cli
aaa
xlat
push
pop
pop
das
inc
inc
loopne
ds
rorl
mov
add
lds
int
fs
jbe
dec
lcall
mov
add
je
test
scas
cmp
dec
call
in
popf
fwait
subl
mov
lret
xor
test
filds
cwtl
cmc
mov
or
pop
push
clc
push
mov
xchg
sbb
xchg
mov
pop
loopne
das
add
push
adc
jae
cmpsb
jmp
push
jg
testl
and
sbb
lds
mov
out
add
ss
ret
mull
inc
cld
jmp
bound
adc
mov
repnz
ljmp
dec
mov
pop
sbb
mov
scas
hlt
push
sahf
outsb
fwait
stos
jb
cmpsb
arpl
pushl
or
xchg
xchg
fs
push
gs
in
push
aaa
inc
das
sbb
repnz
sbb
dec
mov
sbb
mov
sbb
mov
xchg
pop
mov
jmp
cmp
inc
out
sbb
icebp
push
xchg
shlb
les
scas
insb
cmp
push
in
jmp
xor
outsb
lock
aam
push
sub
movl
sub
xor
sub
in
stc
scas
in
popf
sbb
sbbb
add
cwtl
out
test
scas
sti
icebp
jae
ret
fwait
pop
dec
inc
pop
popa
inc
adc
sarb
enter
bound
das
insl
jl
mov
out
lods
sub
cmp
popa
add
pop
jns
push
sub
in
pop
jl
fsubrs
lods
out
in
adc
dec
mov
clc
mov
shrb
lret
out
fstps
adc
sub
scas
mov
mov
dec
dec
and
outsl
cmpsl
jnp
std
inc
jb
lret
dec
out
out
dec
fdivr
xor
cmp
add
pop
pop
xchg
pop
mov
add
sbb
add
rep
sti
mov
ljmp
dec
repz
hlt
ret
add
dec
cmp
dec
mov
sub
mov
pushl
lcall
push
popa
decl
leave
xor
out
push
adc
mov
ret
outsw
dec
jge
test
pop
pop
icebp
cmp
inc
cmp
or
pushf
xchg
xor
push
inc
push
stos
sub
addl
push
leave
inc
inc
andb
jne
or
mov
loope
or
fprem1
sar
inc
inc
in
out
test
pop
sarl
dec
and
mov
cmpsl
inc
sbb
mov
test
dec
mov
mov
xchg
sti
xor
scas
or
lea
loope
jno
arpl
enter
leave
cltd
inc
xor
fsubl
rcr
cli
out
cmpsl
mov
jnp
mov
push
mov
cmpsl
mov
scas
outsb
fsubrl
pop
pop
cmp
jp
fwait
cmp
rcll
push
mov
in
popa
mov
xchg
adc
push
inc
fcompl
adc
cld
lea
mov
ret
push
lcall
jo
sbb
and
xchg
jg
lcall
pop
or
jg
xor
nop
xlat
daa
pop
inc
bswap
sbb
pop
pop
aad
mov
jecxz
rcrl
mov
clc
push
aas
jecxz
call
adc
shlb
lret
es
sub
or
lcall
mov
xchg
mov
ja
lret
loope
inc
xchg
test
sbbl
sbb
mov
pop
sahf
pop
push
lods
int
push
pop
scas
shrl
iret
sub
cltd
outsb
aad
mov
js
add
outsl
jp
mov
sub
jne
push
jnp
je
pusha
inc
jecxz
mov
jmp
scas
loop
push
shll
sub
lea
inc
cwtl
std
popa
mov
mov
jbe
xor
mov
and
shll
call
xchg
in
xchg
int3
fldenv
jle
fdivrl
pop
fidivrl
cmp
sub
push
push
xchg
or
fldcw
int3
mov
mov
iret
dec
sbbl
fld
popf
rcrb
je
insb
pop
sub
pop
loop
mov
push
aam
inc
pusha
or
repz
jmp
jle
scas
push
test
loope
int
incb
leave
xor
push
mov
cs
not
jp
xor
push
aam
mov
std
repnz
inc
lret
adc
data16
lea
mov
adc
cld
and
sbb
jno
mov
lods
cli
mov
shrb
ret
mov
mov
mov
xor
dec
fwait
repz
ffree
dec
ljmp
fld
es
aad
add
clc
mov
push
and
cmp
cmp
cs
push
popf
mov
pop
inc
pop
mov
add
cwtl
sbb
or
lea
les
adc
out
xchg
add
data16
jo
dec
jg
add
inc
fbstp
jmp
je
jg
xor
nop
jnp
push
das
and
ret
pop
pop
bound
jo
mov
rcl
and
test
lcall
jo
scas
pop
int3
push
pop
mov
stos
and
sbb
stc
xchg
and
daa
mov
pop
pusha
xlat
pop
or
aaa
inc
popf
or
adc
aam
jecxz
in
push
add
test
xor
mov
imul
pushf
lods
cli
push
insb
mov
inc
adc
pop
xchg
add
das
push
cs
pop
out
arpl
aad
ja
xor
push
dec
movsl
push
imul
test
and
leave
sbb
aaa
inc
pop
inc
leave
sbb
and
and
mov
push
daa
mov
frstor
lds
aad
inc
js
jae
and
jo
fcompl
cmp
dec
xchg
test
add
xlat
fistps
leave
js
das
mov
inc
jne
or
jge
jo
push
outsb
pop
adc
cmpl
out
or
sub
pop
mov
cmp
xor
icebp
or
or
pop
cmp
cmp
xchg
sbb
sub
fsubs
jo
pushl
xor
out
and
xor
sbb
xor
cmp
aaa
sub
dec
lea
and
and
aam
xorb
pop
imul
daa
in
lcall
and
ja
cmp
or
xchg
mov
fs
test
jge
mov
lods
or
mov
sub
xor
jge
stos
ret
mov
inc
inc
sbb
add
scas
aam
sub
or
daa
push
out
cmpsb
sahf
outsl
sub
cwtl
add
jg
cmp
cmp
das
aam
sub
inc
dec
in
mov
and
stc
dec
andb
xor
cli
jne
sahf
mov
imul
pop
outsb
aaa
mov
pop
inc
or
push
or
add
icebp
cmp
decb
sub
jle
lock
xchg
inc
fsubr
add
lea
inc
pop
jbe
mov
push
rorb
inc
push
cmp
sub
in
xor
lock
jae
pop
mov
les
das
mov
fwait
test
and
adc
test
loopne
mov
mov
aas
cld
xorb
incb
cmp
icebp
bound
mov
pushl
dec
push
xchg
ja
dec
cmovs
movsl
pop
idivl
int
add
xchg
push
in
jb
jg
jmp
xchg
in
lret
mov
out
jmp
out
fstpt
arpl
mov
es
pop
fld
mov
jns
push
fnstsw
hlt
and
sar
fisubs
cmc
jbe
addr16
nop
loop
sbbb
repnz
call
out
mov
or
xchg
jecxz
jo
mov
jb
loop
push
cli
sbb
inc
inc
jmp
mov
lret
ffreep
push
mov
inc
es
inc
mov
sub
ret
pop
dec
jne
das
adc
jge
imul
in
int
rcr
loop
stos
jae
hlt
mov
push
dec
mov
cs
loopne
sbb
xchg
inc
iret
loop
mov
jbe
mov
mov
outsl
mov
cmp
lcall
cmp
notb
pop
in
repz
sbb
insl
out
xlat
jae
lea
xchg
loop
and
push
lods
out
xchg
mov
mov
cmp
adc
xchg
loopne
add
adc
outsb
sbb
jno
adc
loop
cmp
mov
outsl
push
add
and
aad
mov
jmp
jb
fcomps
out
icebp
mov
mov
lds
aas
rol
jnp
into
push
stc
shlb
call
xchg
inc
add
mov
jne
push
jb
sbb
lds
sti
xchg
or
pop
add
mov
pusha
xchg
sbb
xor
inc
andl
mov
fistpll
inc
jno
jmp
xor
sub
bswap
lcall
ret
add
popa
lods
loope
out
mov
cmpsl
and
ret
ret
mov
movsb
lcall
xchg
add
mov
mov
sub
scas
aaa
test
in
pop
hlt
xchg
lea
pop
test
sub
push
enter
fidivl
push
jae
cmpsl
int3
cmc
dec
add
mov
add
pushf
mov
test
push
lret
xchg
jb
scas
out
lock
test
subl
sbb
subl
xlat
or
and
mov
and
pop
stc
lea
hlt
arpl
push
repnz
cmp
add
mov
adc
mov
inc
mov
inc
jae
fisttps
sti
out
ss
add
imul
jecxz
psrlq
lock
jecxz
icebp
jnp
cmp
loop
xchg
or
pop
fsub
sbb
lods
or
add
or
dec
in
test
dec
xchg
dec
lds
mov
cmp
xchg
add
push
cmp
add
sbb
push
pop
out
sbb
and
sub
enter
das
pop
fistps
pop
repnz
int
shl
scas
icebp
xor
es
fbstp
in
adc
dec
push
or
test
or
dec
cltd
mov
xlat
mov
add
xor
stos
fs
test
repnz
mov
lods
repz
jg
mov
inc
fs
cmp
add
notb
and
rcr
fbstp
test
add
repnz
push
sbb
fdiv
push
shlb
sub
cli
dec
xchg
dec
xchg
sub
daa
or
arpl
cmpsb
imul
js
nop
add
mov
repnz
jp
or
dec
xchg
mov
xchg
or
xchg
scas
fimull
ds
push
in
mov
jl
aad
ss
lcall
add
fsubp
mov
jecxz
xlat
mov
sbb
fwait
test
loope
add
ret
jl
and
daa
mov
add
jg
cmpl
ffree
insl
and
rorb
jle
jmp
inc
popf
or
faddl
sub
push
dec
jecxz
lods
fcmovnbe
test
out
pop
mov
or
add
inc
cmp
xchg
iret
dec
mov
push
icebp
repnz
jecxz
jmp
call
push
pop
push
xor
or
inc
bound
push
fadd
test
add
ds
pushf
lods
inc
mov
dec
mov
bound
das
jle
fdivl
push
jno
mov
imul
adc
add
pop
stos
pop
shr
ficoms
xchg
jns
bound
xchg
inc
pop
or
icebp
popa
and
pop
dec
cltd
push
xchg
ret
aaa
xor
mov
loop
add
mov
movsl
and
in
or
cmp
aas
lds
dec
mov
stos
mov
xlat
pop
jne
vmwrite
out
cmc
xchg
cmc
fdivs
xchg
jg
xor
ret
pmullw
unpcklps
push
stc
je
jp
xlat
xor
popf
pop
pop
mov
cmc
pop
jmp
sbb
imul
jg
xchg
repnz
lds
fstl
pushf
mov
aas
mov
hlt
dec
inc
xorb
dec
pop
dec
mov
stc
push
lock
ret
mov
cmpsb
out
push
idivl
loopne
pop
xor
xchg
or
popf
mov
jb
lret
dec
sahf
mov
xlat
pop
cmpsb
jge
mov
lods
push
mov
add
dec
addl
lock
jmp
or
pushf
jmp
stc
jnp
mov
pushf
pop
push
sarl
mov
ljmp
out
icebp
mov
adc
xchg
call
pop
jl
pushf
call
mov
xchg
gs
inc
jno
xchg
cmp
das
adc
hlt
mov
call
cltd
popa
mov
add
scas
push
subl
xchg
test
nop
ja
fistl
push
adc
les
push
movsb
pop
outsb
push
jge
ja
push
mov
mov
gs
or
icebp
and
in
sub
cmp
cli
into
xchg
sub
jmp
in
push
or
inc
xor
push
xchg
loope
jp
pop
arpl
push
xlat
les
arpl
inc
jl
lock
pop
push
or
jbe
dec
aad
mov
push
mov
cmp
inc
cld
lock
fucomi
adc
adc
roll
xchg
je
hlt
mov
dec
int
arpl
out
add
loopne
outsl
push
cs
pop
call
call
pop
test
adc
movsb
xchg
fisttpl
lds
jne
pop
add
add
mov
mov
andl
in
aaa
and
insl
inc
and
mov
cs
pop
mov
cwtl
cmpb
ss
pop
sbb
fdivrs
mov
cmpsl
in
shll
or
xor
loopne
insb
int
mov
mov
dec
fadd
mov
add
mov
fidivrl
aas
je
jmp
mov
mov
jp
pop
mov
test
mov
rolb
jmp
ss
bound
mov
bound
outsl
dec
lret
mov
jo
and
push
outsl
mov
xchg
fninit
dec
enter
inc
sbb
cs
or
mov
sahf
test
xchg
mov
inc
mov
test
cmp
dec
outsb
rolb
dec
out
loop
jns
push
push
scas
es
xchg
mov
add
mov
adc
cmc
sub
js
fidivs
xchg
bound
pop
push
repz
mov
inc
insl
stc
pop
mov
mov
and
fisubs
sub
adc
xchg
xor
movsb
aad
cmp
popf
cwtl
shll
lcall
cmpsb
mov
mov
fbstp
lods
iret
loopne
cs
xchg
xchg
es
ja
out
and
lcall
int
je
icebp
pop
xor
icebp
mov
push
inc
xor
cld
fistps
sbb
or
dec
pusha
nop
lcall
cmp
xor
add
cmp
jo
test
mov
mov
pushf
pop
adc
mov
ja
cmpsb
adc
xchg
es
repnz
popf
push
popa
add
aas
xorl
mov
xchg
pusha
std
ss
in
inc
cld
addr16
pop
fwait
jge
push
sub
cli
outsb
jnp
stos
mov
sti
adc
loopne
roll
mov
adc
repnz
mov
fsubrs
add
sarl
cmpsl
clc
sub
add
stos
testl
mov
push
rcll
sub
mov
inc
das
jbe
into
adc
popw
imul
pop
repz
jge
int3
mov
push
out
or
leave
lret
dec
pop
lock
hlt
xor
roll
lcall
in
xchg
pop
movsl
shl
mov
mov
iret
mov
or
xor
ret
sub
jno
out
sub
or
nop
jecxz
adc
stos
xchg
lods
lods
jne
push
nop
aad
fdivs
or
scas
push
adc
pusha
scas
and
xor
inc
inc
fmuls
call
and
xor
lea
std
aas
mov
pop
add
lret
lret
dec
push
testl
sbb
sbb
lcall
in
ret
jle
movsl
mov
push
sub
pop
push
and
jne
mov
mov
lds
push
xchg
ret
addb
iret
add
pop
xchg
push
pop
insl
sbb
daa
enter
mov
lret
inc
jp
gs
stc
jno
fstp
mov
sbbb
incl
mov
icebp
add
rorl
push
xor
repz
sahf
and
out
pop
inc
sahf
mov
mov
mov
cli
xor
cmpsb
push
mov
mov
jmp
sahf
lcall
scas
and
sbb
insb
pop
mov
cli
sub
movsb
dec
inc
mov
xchg
iret
je
pop
mov
push
out
and
and
test
loop
leave
sub
movsl
sar
sti
ljmp
inc
sub
lock
mov
mov
and
and
repnz
inc
mov
lods
inc
xchg
add
sbb
popa
mov
dec
icebp
icebp
jmp
sbb
fisttpll
iret
les
jmp
test
insl
dec
negl
fsub
sub
xchg
mov
push
cmp
ljmp
ds
cmpsb
gs
fwait
xorl
leave
dec
mov
call
popf
idivb
mov
and
mov
jge
outsb
mov
scas
xchg
mov
mov
leave
jb
rcll
arpl
popa
or
xchg
sbb
mov
cmpsb
jne
fsubl
dec
in
cmp
divl
push
aad
jle
push
mov
mov
lds
rol
inc
cld
mov
fs
mull
adc
and
inc
loop
test
inc
adc
sarl
add
aas
scas
jne
adcb
jb
or
idivl
push
mov
pop
loopne
or
and
mov
pop
ss
xor
inc
jmp
ret
nop
dec
outsb
inc
mov
iret
mov
pop
or
push
mov
mov
pop
fdiv
inc
xchg
cmpsl
gs
jae
dec
mov
cmp
or
pushf
dec
imul
jo
sbb
sbb
mov
push
add
in
inc
orl
xchg
push
daa
xchg
adc
in
jae
lahf
mov
lret
or
mov
sahf
push
inc
push
lods
xor
or
fdivl
loopne
outsb
sbb
add
cld
into
fiaddl
cld
or
sub
jo
call
jle
cltd
mov
xchg
jb
adc
pop
fdivl
or
in
mov
or
or
cmpsb
sub
pop
je
add
xor
adc
cmpsl
push
int
mov
xchg
mov
loop
xor
stos
add
cli
and
leave
pinsrw
sarb
clc
sub
addr16
push
xlat
jo
and
movsb
cmc
jecxz
mov
shll
mov
inc
sub
out
add
idivl
repnz
popa
and
es
add
adcb
cmp
outsl
mov
mov
push
cmp
cld
jmp
aad
push
outsl
jo
shrl
icebp
dec
pusha
pushf
xorb
mov
fwait
or
push
and
flds
dec
inc
cwtl
movsl
insl
stos
mov
out
mov
jmp
mov
std
push
mov
out
sub
popa
add
jge
add
loopne
or
rcr
aaa
push
out
add
adc
fcoms
lahf
mov
jecxz
cwtl
add
adc
sbb
jle
mov
movsl
and
and
lods
mov
repz
or
ljmp
push
or
fiadds
xchg
mov
xchg
cmp
xor
test
or
xor
adc
in
add
sti
jg
xor
outsl
gs
adc
jo
mov
push
mov
inc
sub
jp
test
js
jno
push
fnstenv
aas
mov
adc
inc
rcll
rclb
cmpsl
push
inc
jo
int3
lods
xor
dec
xchg
sub
adc
xchg
and
pop
scas
xor
mov
sbb
xlat
leave
fsubl
addb
sti
sub
std
sbb
js
sbb
ljmp
ljmp
xlat
pop
push
jns
push
jbe
xchg
xor
and
cwtl
call
push
mov
cmp
mov
dec
outsb
adc
shl
inc
fs
mov
fistl
repnz
push
lock
push
aad
iret
stos
jne
xor
xchg
jmp
sub
and
jg
add
xchg
dec
inc
pop
out
jg
scas
ret
iret
or
mov
dec
mov
popa
test
cmp
pop
xchg
jo
arpl
mov
stos
or
repnz
int3
fstps
addr16
mov
jb
xor
mov
mov
sti
mov
inc
jl
mov
mov
add
mov
adc
int
xchg
jno
sahf
mov
lret
lods
sbb
es
xchg
dec
in
sbb
inc
and
push
fsubl
push
fsubs
lret
aad
mov
int3
sub
ja
mov
xchg
adc
pushf
dec
xchg
sbb
outsl
je
dec
out
mov
mov
andb
jge
imul
fld1
adc
cli
adc
es
adcb
scas
and
hlt
out
push
es
stos
or
out
aam
push
das
mov
inc
adc
xor
mov
push
jne
popa
push
rorl
jae
inc
push
jmp
fcom
lcall
je
xchg
push
popa
push
repz
pop
xchg
mov
sbb
outsb
cwtl
mov
xorb
pop
and
sahf
xchg
push
mov
aam
ja
lock
mov
enter
outsl
in
cmpsl
pop
ljmp
jle
xor
in
lds
mov
testb
test
aam
fwait
jae
mov
mov
test
mov
or
pop
dec
mov
mov
xor
popl
mov
adc
sbb
inc
fisubrl
lods
jb
loopne
mov
cli
jne
lea
cltd
dec
lods
lret
sbb
arpl
mov
fwait
jg
cmp
sub
movsl
pop
imul
xor
mov
mov
jmp
insl
aam
fwait
jmp
and
adc
jecxz
or
push
push
xchg
test
sbb
out
mov
sub
es
in
subl
mov
mov
pop
shlb
insb
loope
sahf
xchg
mov
cmp
divl
mov
dec
inc
sbb
data16
mov
out
sahf
shlb
repnz
xchg
out
inc
pop
sti
loopne
js,pt
ja
xchg
loop
or
mov
clc
pop
std
out
jmp
push
jnp
stos
pop
les
mov
les
das
sub
jns
sub
in
rol
jp
loopne
pop
mov
mov
push
scas
pop
mov
sub
enter
shll
mov
clc
ret
push
rcrb
fstl
mov
mov
pusha
lret
dec
push
push
popa
outsb
inc
push
mov
insb
std
push
pop
xchg
mov
popf
jbe
addr16
sub
cmp
sub
push
mov
cmp
das
fidivrs
rep
pop
pop
dec
dec
add
sub
hlt
lods
mov
sub
mov
pop
nop
mov
bound
xchg
mov
fldt
push
shl
mov
push
or
gs
sahf
inc
sub
repnz
cmp
outsb
sbb
pusha
mov
mov
pop
enter
sbb
xlat
outsl
outsb
push
sbb
inc
jge
mov
loopne
jg
loopne
xchg
shll
cmpsb
adcl
insl
cld
decb
cmp
mov
ja
push
push
aad
cmc
aam
jnp
sub
imul
or
inc
sub
xor
push
loopne
jno
dec
int3
dec
ja
outsl
mov
cmp
or
xchg
push
xchg
ja
out
lds
sub
xchg
ja
xor
std
test
jp
fmul
loop
cmp
mov
add
mov
xchg
pop
mov
into
dec
pushf
test
pop
loope
movsb
dec
insb
pop
mov
cmp
pop
les
mov
repnz
aas
jg
sbb
inc
xchg
pushf
jo
adc
mov
or
jbe
push
pop
lds
movsb
xor
insl
mov
cmp
mov
sub
subb
push
arpl
mov
add
int3
mov
int3
loop
sahf
ret
push
mov
xchg
jmp
int3
fimuls
shll
cld
mov
xor
dec
add
push
divb
or
pop
jmp
in
sbb
sti
dec
rorl
inc
add
jb
lret
cmp
jecxz
push
stos
mov
mov
xchg
pop
xchg
mov
push
je
test
pop
loop
mov
dec
dec
push
enter
jno
aas
lods
mov
cmp
push
out
jmp
mov
push
mov
aaa
push
xor
push
and
add
das
pop
in
mov
sbb
je
xchg
mov
movsb
call
in
cmp
mov
neg
push
and
and
scas
sub
push
push
out
aam
inc
xor
and
lcall
lcall
or
fcmove
and
test
hlt
push
cmp
stc
ret
mov
cmp
sbb
data16
sbb
xlat
mov
and
xorb
shrb
bound
pop
outsl
cmpsb
or
pop
int3
lock
fucompp
push
mov
inc
sub
fadds
mov
roll
insl
inc
pusha
sub
push
push
hlt
in
and
fcmove
icebp
stos
sbb
push
sub
into
ljmp
push
in
or
mov
xchg
add
inc
test
push
addr16
sbb
jg
jb
iret
mov
xchg
lock
mov
mov
ret
cs
insb
mov
mulb
xor
pusha
into
sbb
mov
cmpsl
leave
adc
mov
dec
into
lea
push
iret
fmulp
jg
sbb
add
sbb
int
movsb
sti
adc
lahf
andl
or
and
ds
sbb
fs
xchg
xor
sbb
dec
lret
pop
mov
ljmp
pop
jnp
jmp
mov
es
jle
adc
push
lret
repz
or
jge
sub
push
sub
jl
lods
sub
bound
xor
in
iret
fwait
or
fimuls
jbe
cmp
inc
jmp
push
or
pop
fcmovbe
jo
std
adc
in
or
std
pop
dec
jle
lret
lea
xchg
mov
fidivrs
out
or
or
stc
or
jae
xchg
jp
in
bound
repz
push
movsb
mov
popl
mov
mov
lcall
xchg
push
pop
sub
sbb
repz
pop
ret
mov
sbb
pop
out
sbb
mov
mov
sbb
and
rol
cmc
sbbb
cmp
xchg
fmull
loope
push
notl
dec
cltd
sub
das
movsl
shl
mov
std
fidivrl
dec
int
mov
mov
iret
jmp
mov
cmp
dec
add
es
je
les
and
stc
jle
test
jb
fwait
xor
mov
mov
repnz
mov
je
clc
nop
push
mov
inc
cmp
arpl
xor
imul
mov
adcl
add
dec
sub
pop
sub
imul
xchg
scas
sub
inc
in
jmp
test
test
mov
inc
enter
mov
stos
adc
cmc
xor
add
xchg
sbb
movsl
aam
dec
adc
mov
push
std
ds
sahf
cwtl
pop
xchg
out
in
mov
mov
mov
insl
push
sti
dec
mov
ljmp
sbb
add
das
add
ja
lea
pop
push
decb
or
pop
push
fs
stc
fs
nop
push
imul
sbb
push
pcmpgtb
lods
mov
notb
jge
in
lcall
out
ret
pop
inc
cmpsb
jbe
shrb
ss
clc
out
or
pop
mov
js
out
hlt
rorb
subl
in
xor
cltd
sub
sub
lcall
popf
repz
xchg
push
daa
lock
in
cld
xchg
inc
pop
mov
imul
pop
xchg
push
repz
and
cwtl
lock
test
xor
call
scas
jecxz
adc
stos
dec
xchg
pop
dec
mov
xor
leave
or
loope
insl
pop
mov
repz
int3
stc
push
sub
jne
aam
xlat
fsubl
inc
add
add
push
dec
cmp
jb
lret
push
cmp
inc
out
pop
xchg
xor
in
out
ds
test
into
mov
dec
out
pusha
xor
xor
addr16
sub
lret
xor
insb
ljmp
pop
andb
push
jns
jbe
cmp
js
sbb
aaa
ret
loop
ljmp
shrb
mov
dec
pop
gs
sbb
add
sbb
push
mov
outsl
aad
test
inc
jecxz
jbe
aas
insl
fucomp
int3
mov
outsb
mov
shlb
dec
jl
add
pop
and
fdivrp
popa
mov
jl
shr
xorl
iret
xchg
fcomps
or
rcrb
fisttpl
mov
loop
jmp
fistpll
pop
lahf
lea
test
cmp
popa
sub
arpl
xchg
sbb
loopne
push
neg
xchg
adc
xor
push
xor
mov
fildll
out
outsb
shll
xor
outsb
stc
aas
mov
inc
add
andb
movsl
sub
sbb
jns
iret
pushf
test
push
jae
fidivrl
je
inc
inc
add
push
ljmp
fsubrl
push
mov
imul
shll
jecxz
shlb
arpl
cld
sbb
mov
lods
jo
sbb
dec
adc
hlt
adc
mov
repz
sub
add
rcll
lcall
inc
push
dec
imul
nop
push
lds
mov
lret
sbb
jle
cmc
gs
jae
lds
add
cltd
mov
xor
aas
cmp
jge
jmp
lcall
loope
popf
lock
loop
and
jge
sub
cltd
or
and
mov
std
inc
mov
iret
in
loopne
cmp
xchg
xor
ret
adc
dec
sub
mov
rclb
ret
arpl
test
cld
pop
xor
pop
xchg
cld
jo
adc
imul
adc
pop
test
shlb
scas
jnp
dec
sbb
xchg
or
jno
mov
pop
push
inc
fstps
sub
movsl
mov
mov
ds
cli
sahf
dec
scas
sbb
dec
ljmp
gs
xor
pushf
mov
mov
xchg
xor
xchg
xor
cmc
dec
sbb
cmp
mov
inc
cmp
lds
imul
addr16
sbbb
lret
dec
sub
stos
xchg
cli
and
mov
dec
lea
imul
out
and
lods
sbb
scas
popa
and
mov
mov
mov
sub
jnp
jo
out
popa
adc
scas
insl
in
jl
and
mov
jp
sub
clc
sub
mov
imul
push
dec
mov
push
mov
push
dec
or
pop
xlat
fwait
in
push
cs
xor
lock
loopne
aam
clc
fcmove
xor
lea
mov
pop
and
das
int3
bound
mov
pop
or
mov
fmul
aad
movsb
pop
mov
add
ret
pop
sub
push
jo
in
rcrb
add
cmc
push
divl
sahf
jp
int3
lods
dec
xlat
adcl
add
add
or
in
dec
mov
mov
out
movsb
push
sub
pop
fstps
or
mov
dec
add
sbb
push
stc
mov
stos
es
movsb
loop
xor
stos
push
mov
rclb
pop
cltd
cmp
mov
xchg
pushf
pop
fwait
adc
repnz
adc
call
int
icebp
or
or
cmp
sbb
mov
cmp
xor
xchg
dec
ss
push
jne
inc
mov
in
stos
add
fisttpll
jns
sbb
adc
mov
out
and
mov
xchg
test
cld
xchg
int3
jns
pop
xchg
sub
xor
ljmp
hlt
push
jp
add
lods
mov
in
cmp
push
pop
jl
pop
jae
mov
imul
jecxz
stos
dec
mov
push
jp
cmpsb
mov
pop
adc
dec
mov
xchg
lods
sbb
or
adc
mov
dec
loop
sub
sbb
out
sub
bound
sub
shlb
mov
sbb
push
push
adc
adc
sarl
gs
dec
out
push
out
dec
test
cmp
insb
mov
add
mov
je
mov
out
and
ja
outsb
ret
outsb
nop
mov
adc
add
cs
repz
cmpsb
jge
sub
fmuls
dec
addr16
or
add
data16
test
mov
cmp
sbb
lock
sbb
jnp
push
in
movsb
jnp
push
dec
cli
andl
xor
push
addr16
push
jl
insb
nop
mov
stos
test
xor
mov
gs
mov
cmc
sub
repz
dec
or
fiaddl
push
xlat
cmp
cmp
and
int3
jp
adc
cld
push
cmp
xchg
or
sub
xor
sahf
push
sbb
popa
pusha
aas
lock
jne
pop
xchg
jl
dec
xor
lods
rcrb
subl
cmp
cmp
mov
push
push
dec
or
dec
rorl
jp
insb
and
outsl
push
les
lcall
dec
fwait
dec
stos
mov
pop
mov
inc
outsb
sbb
dec
mov
mov
pop
movsb
mov
fwait
arpl
dec
pop
cltd
sbb
testl
sahf
mov
cmp
das
dec
jne
ss
in
lret
or
int
sub
cmp
fsubl
inc
add
pop
mov
push
out
add
bound
adc
inc
outsl
lahf
stos
gs
jmp
or
push
dec
sbb
mov
inc
or
ljmp
mov
repz
shrl
mov
test
jmp
mov
jno
ja
call
nop
push
inc
leave
mov
aaa
loope
shl
mov
test
sub
mov
push
mov
int
es
xorb
je
mov
push
pop
add
ds
in
adc
cmp
mov
xor
jbe
sub
sub
fs
dec
push
jbe
pop
into
sbb
sub
data16
pop
arpl
imul
mov
jbe
pop
stos
add
jb
ds
or
inc
inc
sbb
push
rcrb
mov
cwtl
sbb
and
mov
mov
push
add
xor
test
rol
cmp
fwait
js
data16
fdivr
adc
lret
loop
repz
dec
out
pop
cmc
mov
mov
aam
stc
jecxz
in
sahf
jns
js
mov
imul
mov
outsb
xchg
gs
testb
call
xor
in
out
mov
loop
cmp
mov
out
nop
inc
push
add
ficoml
jbe
sti
pop
shrb
jo
cmp
sub
mov
addr16
adc
mov
gs
cs
dec
leave
sbb
sub
gs
or
int3
jnp
and
adc
sub
cmp
sahf
sbbb
outsb
imul
les
push
add
xchg
into
rcl
pop
jmp
mov
xchg
ror
rclb
push
or
push
pop
pop
add
xor
pushf
lret
into
dec
dec
ja
mov
arpl
gs
or
imul
cmpsl
stos
fcompl
mov
sbb
out
sub
fwait
or
mov
mov
gs
nop
jl
daa
sub
cli
mov
inc
dec
mov
orl
rcrl
inc
mov
inc
mov
xor
mov
shll
imul
add
jmp
movsl
push
loope
dec
xchg
mov
repnz
lcall
loope
rclb
jp
int3
loopne
idivl
repz
sbb
inc
lcall
out
lret
fnstsw
fdivl
ret
sbb
mov
enter
cli
jmp
jl
out
pushf
add
or
adc
mov
sbb
popf
scas
mov
repnz
pop
jge
sbb
adc
add
clc
mov
nop
push
pushf
push
jne
mov
mov
lods
leave
int
lret
sarb
cmpsl
dec
data16
mov
das
xchg
and
mov
jno
pop
fld1
sahf
call
cmp
pop
mulb
mov
push
rorb
sbb
dec
pop
lods
fs
mov
xchg
inc
and
mov
push
cmp
mov
xchg
cld
outsl
sahf
repz
xchg
mov
fmuls
inc
and
xchg
scas
mov
xchg
sbb
lods
mov
mov
jg
movsb
icebp
or
stc
clc
or
sbb
adc
or
xchg
jae
ret
xchg
xacquire
adc
pop
push
xor
loopne
add
and
mov
inc
and
aad
in
cmp
mov
pop
mov
and
xchg
ljmp
mov
pop
pop
mov
lcall
addl
leave
popa
vsqrtpd
out
scas
insb
aad
and
dec
inc
dec
clc
fcmovnb
cmpsb
ds
and
cmp
repz
push
test
jp
xchg
aam
and
inc
xchg
dec
push
jge
cmp
mov
insb
stos
mov
aaa
ficoml
push
push
dec
push
jg
sub
sbb
lods
pcmpgtb
imul
xorl
jne
push
or
jmp
push
ret
mov
in
lock
sub
adc
cmp
add
aad
lods
sbb
fsub
xchg
sbb
mov
mov
insb
xor
popf
lods
sbb
in
pop
push
sub
xor
mov
cli
xchg
fists
mov
inc
inc
add
mov
sbb
ljmp
std
cli
imul
in
xor
std
pop
aad
inc
rcll
mov
xchg
jge
add
sbb
mov
roll
dec
stos
cmp
mov
dec
cmc
popa
cmp
sbb
cli
xchg
jl
or
xchg
cwtl
repnz
loopne
scas
popa
fs
lahf
or
push
nop
push
or
iret
and
push
cmp
push
sbb
in
out
in
rcll
xchg
cwtl
je
inc
push
pop
andb
rorb
cmp
or
push
aaa
daa
mov
push
fisubl
pop
stc
jns
add
incl
std
stc
jg
aam
or
pusha
lea
adc
scas
into
jne
or
mov
push
cmpsl
jmp
mov
cmovnp
or
jecxz
pusha
aad
xchg
addr16
adc
inc
cmpsb
rolb
into
sbb
popf
jle
std
mov
dec
std
jno
mov
pop
pop
fbld
xor
lahf
mov
sbb
aad
loopne
shrb
fdivr
cltd
outsb
in
cld
jbe
adc
inc
mov
movb
sti
movsb
std
iret
and
scas
adc
sbb
test
mov
pop
cmp
xor
jmp
into
sub
push
adc
fistl
inc
fisubrl
andb
movsb
rorb
pop
jp
and
leave
dec
mov
xor
cmc
cmp
rcr
mov
jns
lods
xchg
pop
and
mov
fsubs
xchg
fst
pop
mov
dec
lret
push
daa
je
aas
mov
push
lods
sub
stc
icebp
sbb
movb
jge
push
xor
lret
cmp
xor
mov
scas
jg
pop
pop
ja
in
clc
xchg
mov
push
aam
sub
or
pushf
js
aad
aas
jns
sbb
loopne
movsl
scas
cld
cmpsl
cltd
and
cmp
call
mov
call
adc
iret
dec
mov
mov
js
out
jb
sub
sub
outsl
adc
add
sub
in
shll
mov
xchg
sbb
jne
push
testl
inc
and
add
adc
or
stos
rcrl
popf
mov
clc
popa
aaa
pop
int3
pop
sbb
sahf
add
repz
aam
lcall
je
call
lea
movsb
js
xor
out
test
jl
cmpsl
adc
sbb
rorl
data16
scas
inc
lods
movsl
lods
movups
flds
jmp
pop
mov
xor
inc
test
cs
andps
ret
push
jb
and
fxch
mov
in
insl
je
jmp
repz
xor
cmp
mov
adc
inc
sub
pop
pop
sbb
les
cwtl
orb
mov
push
pop
call
js
arpl
lahf
popf
in
push
and
push
loopne
jns
and
mov
or
loop
stos
mov
push
and
icebp
jnp
push
mov
add
lds
out
out
ffree
addr16
leave
imul
repnz
cs
data16
dec
adc
xchg
aaa
xchg
jne
repnz
mov
push
fwait
dec
xor
movsl
mov
mov
sbb
adc
leave
cmp
pop
push
cltd
js
jno
lds
inc
adc
aas
add
adc
in
mov
test
xchg
hlt
mov
bound
mov
mov
outsb
leave
jne
adc
aad
xlat
jo
dec
xor
cld
pop
mov
cmp
in
xor
add
fstpl
ret
hlt
sbb
push
fstl
gs
bnd
mov
dec
jl
rorb
sahf
add
in
out
jl
sbb
ja
add
jnp
in
sbb
test
mull
out
lcall
mov
ja
add
ret
xor
xchg
dec
sub
mov
cmp
popa
enter
cmpl
inc
mov
addl
cwtl
sbb
arpl
imul
cmp
jb
pop
es
push
mov
add
dec
mov
dec
mov
mov
outsl
or
or
jo
pop
repnz
in
and
imull
jns
das
pushf
mov
mov
mov
loope
xor
cwtl
mov
lds
lock
sbb
or
repnz
icebp
pop
push
out
loop
mov
rorl
inc
cld
adc
and
jo
lock
in
sub
dec
xchg
divb
mov
loopne
cltd
int
dec
xor
sti
call
js
daa
pop
imul
jle
xchg
xchg
mov
and
pop
add
lret
pop
mov
adc
imul
adc
dec
add
int3
inc
pop
shll
sub
int3
cmp
xchg
out
lods
daa
arpl
mov
lods
out
out
mov
pop
xchg
insl
out
sub
sbb
mov
out
mov
hlt
or
stos
outsl
iret
call
ljmp
jnp
ret
jmp
paddusw
xchg
movsb
daa
cmpsl
popf
lods
inc
sbb
inc
or
and
repz
imul
mov
cwtl
ret
fcomi
push
in
jns
int
addr16
repnz
pop
shlb
sub
shrb
mov
scas
ss
add
jp
notb
or
inc
sbb
out
adc
push
je
arpl
dec
scas
aam
outsl
test
pusha
outsb
sbb
jno
call
add
cmp
or
sar
or
jbe
inc
fstpt
or
stos
insl
clc
dec
mov
add
sbb
sub
pop
jno
mov
xchg
aad
fwait
mov
push
add
call
mov
xchg
add
cmp
fldl
add
loopne
adcb
sub
pop
clc
xchg
test
cmp
sub
and
fsubrs
imul
push
in
je
clc
push
mov
pop
sbb
mov
adc
fsubrl
ret
jno
and
push
pop
push
dec
pushf
adc
mov
sub
jnp
xor
xchg
dec
inc
out
in
add
sti
jno
inc
sti
adc
sbb
popa
subb
mov
push
hlt
mov
pop
iret
inc
repnz
push
or
jmp
xor
into
imul
repz
sbb
test
mov
pop
in
push
out
popa
mov
inc
xor
outsb
pop
shll
into
pop
cmc
call
cmp
sbb
cmp
out
ljmp
push
push
mov
cmpsl
dec
pop
or
scas
jmp
xchg
and
mov
push
outsl
adc
sbb
mov
dec
insl
and
xchg
xor
fisubrs
cltd
jbe
rclb
sub
lock
daa
lret
stos
mov
xorb
popa
cmp
mov
cmp
aaa
out
cmp
add
popf
jmp
popa
jle
inc
sti
seta
mov
jg
adc
das
or
and
cmp
cs
cmp
mov
inc
fs
xchg
push
enter
adc
sub
jo
dec
enter
sub
ja
les
inc
sbb
adc
pusha
mov
or
jp
mov
xorb
push
std
dec
ss
sub
sub
mov
arpl
jnp
fs
pop
jmp
repz
sti
mov
cmp
dec
mov
add
rcrl
iret
adc
cmp
aas
push
in
or
mov
out
int
sti
jns
aam
icebp
inc
shl
enter
cld
lods
fstpl
push
sti
adc
inc
ja
xor
aas
aam
pop
adc
sahf
lods
add
fisubl
inc
cli
in
fsubl
test
push
xchg
mov
pop
and
pop
movsl
adc
stos
and
movsl
xchg
cltd
mov
cmp
dec
and
data16
loope
je
mul
jp
stc
sbb
pushf
stc
or
test
xchg
sbb
cmpsl
push
ljmp
roll
outsl
xor
pop
test
adc
mov
into
mov
sub
dec
dec
gs
mov
out
inc
dec
cwtl
sbb
test
jl
mov
int
das
ja
jle
or
mov
loop
push
cmp
scas
pop
shl
les
dec
lods
shrb
jg
cld
inc
and
cmp
xchg
rorb
or
sbb
in
push
xchg
iret
out
mov
addr16
adc
daa
js
testb
cli
push
xchg
sbb
scas
pushl
loop
push
das
pop
dec
enter
add
rclb
or
mov
cmp
data16
lahf
sbb
lcall
add
sbb
repz
lock
imul
idiv
icebp
pop
dec
adc
stc
pop
cmpsl
adc
dec
inc
inc
stos
add
movsl
push
mov
hlt
and
mov
call
fstpt
mov
xor
cs
aad
inc
cmpsl
js
xor
cmpsl
lcall
sub
fwait
aaa
fnstenv
sti
dec
movsl
loopne
imul
xor
aad
divb
dec
jae
clc
jge
mov
push
ljmp
jno
sbb
les
sbb
inc
mov
shlb
jnp
shlb
mov
lcall
mov
jmp
stos
lea
lahf
cmp
shll
cmc
sbb
insl
or
jge
inc
mov
imul
in
jmp
int
int3
adc
and
mov
fsubl
jp
and
sahf
mov
jecxz
addr16
stos
cmpsb
aas
cli
dec
ja
nop
loopne
cmp
xchg
xchg
mov
in
hlt
sub
pushf
pop
inc
jg
sbb
sub
gs
inc
xor
test
jbe
in
dec
in
repnz
lods
cmp
add
loope
jae
ficoms
or
sbb
sbb
test
filds
mov
repz
jo
cwtl
mov
cltd
sbb
mov
sti
ljmp
jno
adc
stos
flds
or
jb
sbb
popf
adc
addr16
aas
xchg
adc
mov
lock
icebp
insl
or
nop
cmp
xor
aaa
call
adc
jg
pushf
in
jmp
aam
fistl
dec
xor
xchg
xchg
ret
inc
inc
rorb
pop
lcall
pop
push
pop
stos
mov
jb
enter
push
push
scas
sub
das
ret
xlat
mov
jne
outsb
or
pop
fs
mov
arpl
insl
or
push
pushf
mov
mov
sub
std
cwtl
rcll
push
ret
push
push
pushl
pop
popa
arpl
sub
test
mov
mov
sbb
sti
cmp
pop
jnp
mov
sbb
cmp
jae
cmc
dec
insb
cmpsb
adc
adc
sbb
rcrb
adc
mov
repz
in
movsb
add
dec
push
inc
xchg
cmp
jmp
scas
pop
popf
or
adc
lds
adc
jo,pt
pop
cs
mov
das
and
arpl
out
or
inc
sub
dec
jl
mov
sbb
add
push
arpl
mov
pop
push
leave
and
pop
decb
popa
es
mov
or
dec
sbb
mov
cli
adc
or
push
and
aas
sub
dec
sub
xor
dec
mov
das
mov
or
movsl
cmpsb
clc
xor
ret
enter
sbb
xor
sub
and
mov
inc
iret
mov
cmp
shrb
scas
cs
ret
lret
fucomp
je
adc
or
jo
flds
sub
pop
cmp
addr16
mov
jae
in
pop
cld
push
filds
adc
in
jnp
pop
xchg
mov
mov
sahf
scas
push
nop
dec
nop
sar
lock
jmp
dec
lret
aaa
sub
fnstcw
aad
mov
daa
stos
add
rcrb
aaa
jmp
adc
arpl
clc
pop
adc
push
adc
xchg
mov
mov
rcrl
mov
xchg
sub
orb
bound
idivb
xor
in
loop
jb
xchg
xor
dec
fcompl
pop
in
test
ss
inc
sti
adc
std
mov
bound
pusha
adc
daa
repnz
cmp
arpl
mov
cmp
cmp
adc
mov
lods
ja
pop
out
mov
mov
aaa
lret
into
adc
rol
int
inc
push
adc
push
loop
sbb
adc
mov
adc
jne
mov
ljmp
test
and
es
stos
fcmovb
inc
loopne
xorl
stc
sub
adc
mov
jnp
xor
loope
inc
jb
je
dec
adc
sbb
push
push
lcall
out
cmpb
dec
cmp
icebp
stos
outsb
mov
addr16
pop
sbb
call
fcompp
repz
mov
jae
test
inc
negb
inc
cmp
test
sahf
test
jbe
cltd
shlb
jl
rcll
vpinsrw
je
xor
push
daa
push
and
or
pop
outsl
daa
sarl
inc
mov
pop
push
test
push
sub
fwait
and
mov
xchg
sbbl
pop
pushf
sahf
popa
adc
adc
dec
push
lret
xchg
jp
xchg
imul
cmp
cwtl
hlt
and
jle
jle
push
mov
lods
cs
xor
sub
in
sbb
mov
aaa
mov
fstpl
xchg
adc
push
mov
dec
sbb
jo
fstpt
lock
dec
adc
std
mov
aam
mov
jb
push
mov
aas
hlt
lock
mov
ret
cmp
mov
push
push
sahf
sub
cmpsl
xchg
lret
dec
outsl
orl
sub
outsl
push
pop
insl
icebp
repz
into
pop
ret
test
pop
hlt
cs
push
cmp
jbe
pusha
stos
or
sub
xchg
jb
or
push
cmp
nop
jg
sbb
cmp
fdivl
mov
inc
mov
out
mov
mov
lcall
inc
mov
jns
insl
and
sbb
das
scas
xchg
addr16
sahf
add
push
mov
adc
dec
xchg
xchg
nop
jl
cmpsb
insl
jp
cltd
mov
pop
dec
cltd
enter
push
clc
dec
xchg
push
test
into
add
cld
repz
push
int
fistpll
jb
sbb
mov
adc
or
sub
daa
xor
dec
fcompl
xchg
pop
sub
out
leave
enter
jo
ss
sbbb
add
adc
jbe
addr16
jo
or
sbb
lods
jl
push
xchg
fs
sbb
scas
or
pop
push
lock
or
les
cwtl
cmp
iret
xorb
xchg
les
sbb
mov
mov
cmp
xchg
inc
adc
fisttpl
inc
ret
adc
repnz
ret
mul
inc
add
int3
add
fstl
jnp
xchg
shrb
xor
adc
xorb
ljmp
sahf
pusha
mov
stc
xor
cli
enter
xor
test
addb
lret
fwait
or
in
rcl
ficoms
scas
mov
out
in
mov
sbb
scas
and
cld
pop
imul
fs
mov
paddsb
add
push
fdivrl
adc
dec
mov
pop
cltd
push
outsb
rcll
aam
inc
add
cmp
sti
lds
inc
rolb
add
ss
je
popf
pop
cmp
cltd
iret
frstor
shll
imul
sub
jmp
mov
lods
cmp
xlat
test
outsl
cmp
push
cld
adc
icebp
or
scas
sbb
xor
dec
insl
jb
and
xor
cli
jmp
inc
lahf
fistps
inc
cmpl
sahf
pop
cmpsl
sahf
test
stc
mulb
xchg
scas
repz
and
imul
repz
jae
fmuls
dec
mov
lods
pop
popa
inc
jne
add
mov
loope
mov
in
repz
std
mov
pop
lret
cmp
xchg
sub
dec
gs
loop
jle
jo
aaa
lods
fsubr
add
lcall
out
mov
ret
xor
adcb
out
leave
add
movsl
sub
xor
ljmp
mov
sub
mov
shlb
pop
addr16
int3
test
dec
pop
add
mov
faddl
xchg
push
push
or
pop
and
imul
push
jg
xor
vrcpps
jge
out
int
xor
aam
pmulhuw
setnp
cmp
into
and
adc
pop
xchg
push
push
jbe
divl
add
mov
or
fbstp
sub
fbstp
out
std
add
sub
xor
cli
addr16
inc
jmp
in
ret
pop
mov
ds
repnz
clc
lods
jo
fs
and
and
cmp
xchg
outsb
inc
adc
cld
jne
cmp
jg
push
mov
repz
xchg
out
inc
xchg
out
cmp
cwtl
jg
jg
sbb
icebp
mov
call
inc
adc
stc
xor
mov
pop
inc
sbb
leave
ljmp
push
mov
lds
repz
repnz
imul
dec
jnp
cld
scas
popf
shrl
jbe
adc
test
xchg
sbb
inc
clc
pop
mov
sub
ss
adc
mov
fists
jns
jns
lods
cmpsl
imul
subb
arpl
cmp
call
xchg
dec
cltd
scas
inc
inc
push
and
or
adc
mov
adc
fimuls
dec
aad
mov
js
stos
pop
popa
es
jo
in
sahf
cmpsl
test
dec
ja
adc
shl
out
imul
lcall
cmc
or
add
or
xchg
cmpl
negl
test
sub
and
fs
lcall
cld
dec
std
add
adc
dec
inc
push
add
sub
fwait
lods
pusha
mov
in
dec
std
pop
mov
dec
xlat
pop
repz
push
or
ret
aaa
out
insb
mov
add
inc
fstl
add
pop
scas
pop
sub
aas
insb
ret
dec
or
inc
xchg
mov
pop
addl
out
cli
in
icebp
fsubrl
or
lods
inc
test
outsl
cmc
or
add
xor
in
or
clc
mov
es
or
pop
xchg
xor
test
dec
popa
cltd
shll
cld
popa
insl
adc
cmp
in
fnstsw
cmp
mov
xor
push
jbe
xchg
cli
aad
and
xchg
inc
pusha
flds
jecxz
and
cmp
fbstp
xchg
inc
das
pop
ffree
ds
xchg
out
in
xorl
mov
xchg
fldl
jo
cmpsb
loopne
sub
arpl
ret
mov
or
lcall
pop
pop
cld
ja
repnz
pop
dec
mov
jno
add
lods
cltd
mov
out
add
pop
cltd
jmp
adc
xor
dec
mov
insl
js
or
jno
fwait
xchg
arpl
and
in
mov
xchg
ficomps
xor
jb
and
sub
imul
cwtl
enter
mov
or
or
daa
test
mov
dec
or
dec
cmpb
shlb
test
mov
xor
mov
add
test
andl
jp
cltd
lret
jle
arpl
jnp
into
xchg
jo
scas
in
clc
mov
cs
sbbb
nop
jmp
fsubrs
stc
out
test
insb
add
cmpsl
or
xchg
sarl
or
subl
cmp
fisttps
cli
pop
dec
cmp
nop
add
pop
repz
push
rcll
jge
mov
dec
pop
add
test
stos
lahf
adc
adc
idiv
sub
aaa
inc
rol
sbb
aas
imul
mov
daa
testl
dec
mov
and
test
nop
pop
and
andl
insb
enter
nop
call
push
pop
leave
cltd
in
shr
aaa
daa
pop
inc
hlt
mov
xor
or
jl
xchg
scas
jbe
es
iret
rcl
push
jmp
sbb
stc
ja
jno
cmpsb
xor
mov
adc
out
call
push
mov
sbb
ret
lds
or
jl
repnz
movsb
subl
mov
mov
pop
mov
mov
push
push
xor
jp
in
xchg
cltd
sub
jl
clc
hlt
cmpsl
dec
xchg
test
in
xchg
jmp
clc
xchg
ficomps
xchg
cltd
inc
iret
and
stos
lea
fincstp
sbb
and
shl
pop
inc
inc
call
fucomp
idiv
cwtl
mov
add
add
into
loope
std
cmp
sbb
stos
lcall
fmuls
inc
movl
out
adc
add
and
cmp
sub
jmp
sub
xor
movsl
push
cmc
cmp
add
out
nop
orl
add
sub
mov
repz
lahf
cmp
inc
and
dec
in
cmp
sbb
xor
lods
cmpsb
push
pop
popa
jns
scas
f2xm1
cmp
jg
cmp
cmpsb
lock
fs
enter
outsl
shrl
int3
or
insb
inc
loope
push
sub
clc
stos
sarb
sbbl
ret
pop
xchg
sti
lock
stos
cltd
pop
stc
repnz
jecxz
aaa
jp
pop
push
mov
rorl
fsubr
cmp
mov
scas
sbb
les
shlb
test
pop
out
push
jmp
loope
inc
call
cmp
lahf
mov
mov
mov
jnp
sub
push
fwait
daa
cmp
xlat
and
mov
cmp
jnp
adc
mov
lock
push
or
testb
nop
push
ffreep
testb
insb
or
cmp
cmp
mov
test
pop
std
add
icebp
sysret
fxch
pop
out
lods
sbb
fs
xchg
mov
and
repnz
cs
sub
stc
in
or
xor
mov
movsl
idiv
and
sbb
xor
sub
scas
mov
pop
fptan
pop
mov
push
adc
or
mov
popf
in
push
or
or
fs
mov
test
cmpl
repz
mov
shll
jl
or
loopne
aad
push
in
test
pop
mov
sbb
lcall
mov
ljmp
ret
inc
mov
jae
hlt
scas
ret
pop
popa
adc
arpl
in
repnz
cmp
popa
xlat
pop
xchg
dec
inc
mov
mov
iret
push
jae
data16
lock
xchg
ljmp
aas
jb
jo
and
ja
imul
push
aad
sbb
lods
enter
ja
mov
scas
repnz
push
dec
inc
pop
xor
sub
sbb
into
dec
in
scas
cltd
pusha
add
adcl
jae
leave
mov
stos
inc
xor
dec
cmp
andb
pop
cmpsb
dec
fisubs
push
cmp
jne
add
loope
add
arpl
mov
inc
sbb
inc
jnp
pop
jge
pop
and
aam
mov
add
pop
in
rcrb
cmp
mov
xor
inc
scas
push
and
xchg
out
xchg
pop
or
ret
add
and
cmp
cmp
jp
pop
push
into
ret
bound
into
popf
shlb
and
mov
and
xchg
enter
jmp
scas
shll
adc
cwtl
hlt
inc
mull
or
insb
loop
xor
sub
mov
aas
xor
lcall
icebp
rolb
rcrb
aaa
mov
pop
hlt
xor
stos
cs
sbb
cmp
mov
insl
sahf
pop
mov
pop
iret
fldenv
or
mov
xchg
dec
cmp
inc
vrcpss
add
adc
pop
jae
inc
popf
jbe
in
in
inc
rcll
jle
mov
jmp
and
lret
in
call
lds
push
jle
mov
lret
adc
aam
popa
jg
imul
cmc
sbb
stos
fwait
add
mov
bound
pop
ret
out
imul
pop
mov
push
sub
cwtl
push
or
lea
jo
add
push
shrb
repnz
pop
test
loope
call
sub
mov
inc
test
fidivrl
cmpsb
fs
adc
ja
or
mov
cmpsl
ror
decb
and
iret
fs
andb
lods
push
and
cmp
inc
xchg
shrl
xor
jo
das
cmp
cwtl
dec
sbb
lahf
xchg
les
incb
push
mov
add
xchg
push
stos
sub
adc
adc
mov
pop
mov
fcmovnbe
dec
ret
pop
jnp
push
mov
repz
repnz
mov
pop
rcr
into
dec
lods
lods
mov
cmp
das
jno
scas
lahf
stos
sti
xchg
mov
imul
imul
jo
in
xchg
mov
cmpl
mov
jo
mov
cli
mov
jo
out
in
push
movsl
xchg
xor
inc
dec
push
pop
mov
inc
insb
scas
xor
add
push
shlb
sti
add
addb
nopl
movsb
mov
stos
mov
mov
inc
add
push
nop
mov
mov
xchg
in
xchg
pop
cmc
aas
insl
mov
in
jle
testl
lock
sbb
xor
pop
adc
lret
sub
xor
cs
jbe
lea
adc
out
aaa
pop
mov
sub
hlt
rcll
in
mov
cmp
mov
mov
test
jmp
jmp
add
mov
jbe
cmp
push
xor
movsb
enter
jae
cmpsb
andl
loope
mov
xchg
push
inc
adc
pop
xlat
out
push
and
popf
sbb
mov
rolb
jno
sti
loope
pop
popa
add
adc
sub
out
ja
aad
jl
mov
cmp
sar
aaa
je
andl
icebp
add
inc
popa
data16
inc
adc
out
fisttps
gs
dec
dec
pop
push
stc
fistl
mov
pop
int3
add
inc
loop
cmp
mov
lret
xchg
sub
out
rcll
sub
xor
loope
dec
jmp
sti
inc
and
stos
mov
pop
test
push
ja
adc
cwtl
repz
sbb
and
lods
adc
mov
dec
rorb
out
sti
mov
in
xchg
pushf
ljmp
call
mov
mov
jb
mov
fisubs
test
gs
mov
mov
out
jbe
cmp
sbb
xor
jmp
subb
xor
out
xchg
leave
lcall
add
push
int
mov
into
imul
cmp
bound
ds
xchg
sbb
adc
push
mov
je
fistps
jmp
sub
sub
cmovp
mov
stc
pop
shr
inc
test
sbb
and
jnp
push
push
in
iret
dec
dec
xlat
dec
xor
add
pop
cmpsl
sub
mov
mov
xor
mov
xor
lcall
xchg
xor
inc
or
out
xchg
push
out
adc
mov
dec
mov
pop
lds
les
add
dec
out
les
out
test
cmp
ss
pop
sub
pop
sbb
jne
inc
mov
je
adc
lahf
nop
enter
or
notl
rcll
add
mov
rcrl
orb
int3
xchg
xchg
sbb
fldcw
shr
cmp
push
leave
je
adc
mov
cmp
divb
and
adc
xchg
dec
lods
inc
mov
sbb
pusha
lret
xor
ret
add
jmp
stos
jg
iret
test
in
out
adc
and
cld
xor
xchg
sub
xorl
arpl
xor
idivb
xchg
dec
or
and
sub
mov
lret
add
xor
mov
enter
clc
jbe
out
jbe
or
jbe
pop
pushf
aaa
add
les
sbb
out
mov
mov
dec
adc
js
add
and
orl
sub
pop
add
push
divb
dec
dec
imul
ljmp
xor
cwtl
popf
repz
mov
addr16
cmp
stos
popa
outsl
pop
in
jmp
cmpsl
mov
or
jno
lcall
inc
xorb
xor
xchg
and
aam
add
addr16
adc
pop
arpl
add
test
adc
stos
hlt
fcmovnb
rcr
or
xchg
pop
sub
call
xchg
sbb
push
imul
dec
aad
push
aaa
xchg
adc
das
mov
data16
xchg
jge
imul
test
sub
sbb
ret
pop
lret
or
dec
cmpsl
aad
data16
pop
imul
outsl
pop
dec
sbb
movsl
icebp
cld
jecxz
or
inc
pop
pushf
cmpsl
fcmovu
sub
pop
ffree
jae
stos
inc
mov
scas
mov
scas
movsb
arpl
jmp
mov
sahf
aas
mov
std
sbb
test
push
push
jge
aas
jo
xchg
ret
push
daa
push
es
adc
and
popf
push
mov
enter
gs
loop
fdivrp
inc
fstl
mov
fs
call
or
scas
enter
in
or
setge
arpl
push
stos
mov
jl
pop
sub
adc
test
push
and
xlat
fmuls
gs
mov
dec
xchg
mov
cmc
daa
test
sub
adc
cwtl
jge
adc
mov
hlt
jne
add
sbb
stos
lcall
mov
jmp
and
xchg
pushf
pop
mov
cmc
cmpsb
xchg
lcall
mov
fisubl
imul
pop
cs
aam
jb
xlat
scas
sti
inc
mov
pop
sbb
lahf
mov
jecxz
pop
jae
ret
subl
jb
mov
int
insb
cmp
push
push
lret
nop
dec
jno
pop
pop
mov
mov
mull
cmc
jl
push
push
ljmp
pop
test
in
shlb
das
xchg
push
movl
popa
mov
mov
pushf
test
cwtl
jns
mov
adcb
test
enter
clc
xchg
ss
jl
outsb
dec
popa
rolb
mov
push
xchg
test
dec
and
xchg
loopne
popf
cmovbe
lahf
scas
xlat
jl
xchg
or
insb
imul
xchg
cmpl
enter
cltd
add
mov
popf
dec
sbb
jg
fidivs
mov
sbb
icebp
shl
add
test
int
lods
pop
sub
shll
out
out
or
xorl
xchg
pop
out
adc
gs
inc
cmpsb
repnz
cmp
and
pop
jno
lds
cmp
pop
jbe
and
aaa
sub
sti
adc
cmp
pop
fucomi
arpl
insl
push
fstl
idivl
jg
jp
addr16
lret
mov
ss
movsb
aam
add
add
jmp
sub
or
push
leave
or
gs
sbb
mov
int
int3
xchg
pop
pop
cli
jo
jmp
addr16
sub
sti
lds
xor
sbb
cmp
fiaddl
fs
mov
adcl
adc
fwait
clc
outsl
dec
or
dec
loop
ss
cltd
xchg
push
push
pop
push
jns
rolb
subb
sub
fwait
cmp
lea
sti
jb
fwait
adc
stos
mov
jl
adc
sarl
dec
xor
test
scas
sub
push
aam
mov
or
and
dec
sahf
shlb
xchg
aaa
fnstsw
add
jle
add
inc
adc
ss
jo
jno
xor
xorb
adc
sub
outsb
movl
das
mov
sti
clc
repnz
xor
xchg
sub
sub
inc
mov
pusha
lret
add
inc
mov
jmp
sbb
mov
jno
dec
or
sarl
popa
jle
loopne
loop
xchg
jg
iret
outsb
out
call
push
orl
adc
dec
mov
pop
inc
hlt
mov
jp
lock
sub
popa
cld
test
pushf
inc
mov
push
jne
jnp
xchg
dec
push
xor
into
imul
and
out
cli
mov
jne
in
movsl
gs
iret
sub
fldcw
push
divl
add
lcall
dec
cmp
loop
hlt
pop
ret
sahf
gs
inc
push
stos
pop
jle
add
shlb
xchg
sub
mov
pop
addr16
out
mov
jo
adc
stos
shlb
or
roll
fs
push
adc
aas
pop
out
sub
lds
and
lds
push
test
aaa
in
shlb
sub
ret
mov
repz
test
jb
dec
fsts
xchg
cmpsb
out
jle
shl
repnz
repnz
repz
in
jbe
pusha
mov
std
outsl
test
test
pusha
dec
sbb
cmp
inc
xchg
or
or
std
pop
je
lds
push
jg
add
jle
clc
out
mov
mov
jp
mov
jle
jle
jns
pop
cmp
jp
lods
mov
iret
pop
pusha
mov
xor
jno
cmp
add
repz
and
loopne
aad
insb
cmp
out
mov
sub
xchg
cmp
mov
push
xor
icebp
out
jg
push
jmp
rcrl
test
clc
fdivs
aad
repz
shrl
negl
push
mov
adc
cmp
neg
movsl
xor
jg
xor
push
inc
ret
xor
stc
push
xor
repnz
xchg
and
fcmove
push
xchg
mov
nop
daa
mov
sbb
clc
gs
xor
push
cmp
sub
repz
or
inc
cmp
int3
inc
or
push
push
push
imul
sbb
sti
pop
out
fwait
loope
inc
add
or
fsubr
adc
arpl
jne
xor
test
fsubs
inc
add
sub
lahf
imul
xchg
inc
inc
jbe
inc
push
repz
pop
in
test
sub
or
in
pushf
and
push
in
push
cmp
sbb
arpl
negb
jb
leave
cs
jge
mov
gs
bound
ds
sub
add
xor
cmp
and
add
xor
outsl
icebp
into
sub
andl
jns
push
outsb
ret
jl
or
jbe
pop
jno
jnp
into
mov
inc
sub
fs
call
loopne
ds
mov
out
js
sbb
push
pop
mov
adc
lock
or
or
ja
pop
jmp
pop
xor
and
mov
scas
xlat
adc
cmp
pop
rol
imul
lcall
stos
pushf
adc
mov
test
jb
dec
dec
cmc
sub
push
adc
in
mov
loopne
in
mov
jl
pop
jg
inc
mov
jbe
xor
out
fsubs
push
mov
inc
push
jbe
fwait
ds
movsb
out
pop
dec
lock
push
cwtl
testb
popa
pop
inc
pop
sti
scas
mov
xor
push
cmc
shrb
test
out
mov
or
mov
cwtl
dec
ret
adc
inc
xchg
addr16
shlb
int
aam
pusha
push
in
outsl
aaa
aad
and
xchg
cwtl
mov
scas
add
inc
ja
mov
repnz
jne
je
adcl
jg
xchg
addr16
fimuls
js
cli
ficomps
bound
js
cmp
mov
push
push
jne
add
icebp
xchg
pop
negl
jno
jmp
ljmp
sub
hlt
ret
or
mov
mov
xchg
and
push
mov
subb
fs
jp
jmp
test
pop
loopne
lea
push
popf
inc
adc
pop
mov
into
inc
lcall
pop
push
fcoml
rclb
pop
jmp
xor
ja
pushf
out
sti
push
push
xor
push
mov
adc
shrl
jbe
sub
inc
scas
inc
mov
in
adc
ret
cmp
into
mov
pop
cs
mov
xlat
cmp
dec
and
cmp
or
cmp
repnz
sub
lret
test
push
add
xorb
iret
aad
or
xor
mov
or
hlt
shl
inc
dec
mov
jno
loop
pop
adc
dec
push
out
das
mov
mov
dec
loopne
pop
fsubs
add
shll
cld
pop
pop
es
dec
or
es
mull
orl
jecxz
pop
test
rol
xchg
aam
pop
and
enter
push
or
hlt
pushf
nop
lock
mov
add
je
fsubs
stc
xchg
cmpl
jle
notb
mov
xchg
jmp
sbb
adc
and
mov
sub
fistl
pop
movsl
ljmp
mov
push
popa
adc
in
xchg
mov
jo
mov
dec
cmc
cmp
es
cld
inc
cmp
jecxz
dec
ljmp
mov
and
inc
jmp
lahf
jo
lods
jno
fcomip
push
inc
stos
ja
adcb
or
ja
dec
insb
mov
aaa
lock
shlb
push
sbb
fst
pop
sub
fs
loopne
loopne
fcmovb
sub
mov
push
jbe
aaa
scas
pop
sbb
int3
fucompp
pop
pop
adc
jo
xchg
imul
das
cwtl
lcall
cmpsb
mov
pop
cmp
or
aad
and
xlat
pop
cs
jge
pop
cmc
push
std
fldl
scas
sbb
jb
pop
push
xchg
sub
lea
dec
ljmp
push
pushf
ficompl
mov
fwait
arpl
add
xchg
arpl
push
fisttps
aam
loop
outsl
test
push
inc
mov
xchg
push
xchg
into
xlat
lea
stos
inc
lds
xchg
fsubrs
ja
js
cli
mov
mov
xchg
loop
dec
jmp
xchg
addl
pop
push
xor
jne
aad
jns
fsubs
inc
jmp
mov
lods
cs
aam
sub
add
cmp
xchg
mov
and
mov
inc
push
inc
fiaddl
mov
inc
xor
or
jo
insb
sub
sahf
xchg
ljmp
sbbl
fcomps
jmp
xchg
cmp
cli
adc
pop
pop
jae
movzwl
lret
lods
arpl
jb
xchg
push
cmp
lret
mov
es
dec
pop
enter
add
xor
mov
clc
bound
and
hlt
sti
xor
pop
in
inc
pop
pop
dec
aas
push
subl
or
popf
mov
ja
cmp
aas
outsb
push
adcb
dec
cltd
pushl
xor
sahf
and
xor
or
out
dec
and
sarl
adc
mov
sub
cmpsb
mov
in
mov
addr16
jp
mov
in
xchg
movsl
pushf
xor
aaa
adc
repz
insl
dec
int3
mov
pop
outsl
mov
ret
cmp
mov
push
div
cli
call
or
mov
movsb
cmpb
pop
sbb
dec
popa
orb
inc
adc
pop
mov
cmp
dec
cmc
dec
sub
pop
inc
and
in
mul
ret
mov
mov
push
dec
xchg
enter
add
movsb
dec
add
dec
stc
inc
cmp
arpl
mov
test
adc
jge
bswap
xchg
xlat
std
mov
shrl
lret
inc
fstps
arpl
fwait
gs
xchg
iret
addr16
jns
jg
fdivs
cwtl
cmp
lahf
lret
dec
shrb
mov
inc
lods
jo
mov
popf
pop
xor
add
push
arpl
icebp
xor
insb
insb
mov
out
cmp
push
inc
sub
and
sbb
jp
outsb
int3
jp
cmp
imul
cmp
push
inc
mov
lret
scas
add
cld
inc
cwtl
pusha
jg
dec
enter
in
jns
sub
dec
cmpsl
adcb
shlb
sub
fnstenv
jg
daa
xchg
jno
lcall
cltd
es
gs
sbb
adc
xorl
xor
dec
adc
hlt
popf
into
push
imul
outsb
adc
jecxz
adcb
jns
mov
or
mov
jle
and
lret
sbb
test
out
adc
dec
push
test
sahf
adc
movsl
das
mov
pop
and
dec
mov
and
cmp
adc
rcr
push
xor
mov
mov
addr16
lea
jp
movl
xchg
mov
sub
fnsave
add
lock
sub
push
push
daa
add
outsb
pusha
nop
xor
sub
int3
gs
out
mov
testl
mov
test
pop
daa
shll
jae
outsb
push
imul
daa
sub
jl
cld
sbb
sbb
push
adcb
outsl
and
fs
jne
mov
mov
mov
xchg
lret
ret
adc
push
mov
sub
leave
sbb
test
sti
lods
add
clc
add
rol
mov
adc
dec
test
xchg
pop
push
push
fnstsw
push
dec
sub
data16
mov
mov
mov
jne
andl
in
jmp
in
mov
dec
inc
mov
ret
pushf
cmpsb
push
ljmp
push
and
cmp
shrb
xor
jns
sub
mov
dec
aam
int
push
dec
dec
inc
or
pop
xchg
movsb
imul
cltd
enter
jnp
xor
insb
xor
sub
jmp
mov
je
mov
fcom
mov
rolb
out
imul
leave
sbb
cmp
in
or
sub
push
mov
fwait
push
mov
pop
and
sti
sbb
mov
jl
sti
mov
jne
sti
mov
add
cwtl
out
test
mov
dec
xor
xchg
mov
mov
or
stc
mov
or
fs
or
sti
enter
and
push
shrl
in
scas
pop
mov
dec
insb
shlb
jbe
pop
outsb
sub
jmp
mov
push
mov
in
fwait
cwtl
stc
test
pushf
pop
mov
movsl
subl
mov
mov
in
aam
vcomiss
bound
mov
ret
xor
lcall
call
popf
fstpt
in
ret
mov
push
shl
scas
stc
add
cltd
imul
cmp
imul
push
adc
lea
push
and
rolb
push
lahf
jmp
adc
push
inc
pusha
nop
hlt
adc
xchg
es
lahf
int3
jecxz
fiaddl
insb
imul
xorl
xor
rcll
xor
pushf
or
push
lds
daa
fs
ljmp
mov
daa
pop
pop
gs
jg
xlat
pop
stos
pusha
iret
fadds
stc
fnstsw
dec
ret
mov
addr16
les
int3
xor
hlt
out
and
ss
pop
mov
jnp
push
mov
jae
mov
mov
adc
sarb
mov
adc
or
fstps
outsl
ss
enter
shl
mov
dec
lock
push
sbb
xor
xor
mov
mov
inc
sub
cmp
inc
xor
mov
mov
mov
and
mov
mov
xor
aas
pop
shlb
dec
push
movb
sub
hlt
call
and
push
push
xor
imul
lods
xchg
xchg
mov
pop
xchg
sahf
adc
push
jo
sub
ret
add
mov
into
push
jmp
clc
jp
mov
xchg
fwait
insl
pop
fwait
mov
mov
mov
push
nop
jmp
int3
mov
jp
pop
jl
ficoml
stos
shl
jg
testb
scas
in
push
ja
inc
mov
sub
clc
inc
in
jns
or
cmp
dec
mov
and
pop
sub
mov
cld
jecxz
pop
pop
js
sbb
mov
jmp
imull
mov
fstl
mov
xor
fists
popa
dec
and
xor
pop
sub
cmpb
inc
cmc
sub
cmp
sub
or
mov
dec
neg
roll
xchg
add
dec
es
js
not
or
es
repnz
push
test
lret
xorl
divl
adc
cwtl
pop
shrl
lock
jbe
stc
push
or
xor
or
loopne
xor
jnp
repz
adcb
mov
leave
add
leave
int3
jge
movsl
jl
jge
fs
in
adc
add
inc
lret
lret
out
les
jl
outsl
dec
in
lea
mov
jmp
paddq
push
fisttps
insl
clc
popf
fistpll
movsb
xchg
xor
cmp
lahf
popf
push
int
movsl
rclb
inc
rorb
jae
add
mov
js
or
jge
xor
clc
mov
bound
icebp
jle
iret
add
xchg
in
lock
push
and
lock
inc
cwtl
shrb
or
xchg
rorl
std
mov
lahf
ror
mov
sbb
xchg
scas
data16
mov
jl
call
lret
repnz
cmpsb
add
repnz
imul
cltd
nop
lods
daa
push
cli
fstpt
mov
push
int
ja
inc
aas
sbb
arpl
adc
cld
push
sub
mov
mov
mov
mov
jo
cwtl
movsl
cltd
psubusb
test
push
pushf
or
in
mov
flds
inc
ret
in
cmp
shrl
xor
fmul
sbbb
sti
sub
into
jle
inc
and
lcall
out
pop
insb
mov
call
test
pop
mov
scas
push
into
cmp
xchg
jle
mov
mov
ffreep
mov
cmp
lahf
dec
add
push
and
adc
int
int3
shrl
imul
sbb
add
push
mov
and
ret
mov
fistpl
testb
lahf
mov
fmull
and
push
mov
sub
adc
xchg
stc
push
in
push
int
js
cmpsl
cld
adc
loopne
inc
mov
insl
push
inc
out
push
sbb
sbb
dec
outsl
inc
xorb
rcrl
mov
or
movsl
inc
push
pop
movsl
cs
xor
pop
pop
pop
dec
into
xchg
fcmovbe
mov
jne
push
mov
mov
sub
pop
push
das
jmp
repnz
mov
mov
repnz
leave
repz
cmp
jecxz
adc
outsb
lahf
sub
xor
or
in
xchg
inc
adc
outsl
xchg
aas
int3
pop
jns
add
or
fisubrs
dec
mov
mov
inc
mov
and
popf
idiv
jecxz
add
enter
jns
and
cmp
out
out
mov
jmp
xor
mov
xor
sbb
push
insb
data16
jbe
fnsave
into
dec
cmpb
mov
mov
xor
insb
fcmovnb
test
pop
bound
inc
jo
adc
pop
fimull
pop
fbld
and
dec
pushf
sbb
dec
adc
pop
negl
xchg
jle
jo
and
testb
aaa
jns
clc
pushf
das
outsl
lds
or
jnp
add
mov
nop
pop
jno
xor
mov
mov
add
out
lret
cmp
push
cltd
sbb
mov
pop
mov
inc
lods
jnp
dec
adc
push
mov
fsubs
cmpsl
push
shrl
jno
pop
outsb
cmc
test
xchg
sbb
mov
js
add
addr16
xorl
decl
decl
decl
or
and
or
js
cmpsl
adc
fs
cmp
fadd
mov
in
popa
shll
aam
push
test
xchg
push
cmpsl
xor
call
cmp
dec
arpl
jmp
xchg
leave
sbb
jns
sub
std
sub
jmp
mov
repnz
pop
xor
jo
mov
sub
lea
fisubs
ret
out
fisubs
sbb
sahf
add
shlb
inc
cli
in
or
adc
sbbl
cmp
loope
pop
or
jnp
xchg
mov
outsb
xor
gs
test
or
sub
sbb
or
arpl
jo
and
iret
mov
adc
nop
cmp
mov
rcrl
add
fistpll
aam
into
cmpsl
jmp
xchg
xor
into
mov
mov
mov
mov
xchg
push
mov
jns
int3
sub
add
stos
faddl
jp
ds
jmp
cmp
mov
push
ss
adcl
andl
mov
das
xor
cmp
scas
dec
lret
cmp
xor
and
or
ss
push
adc
fcomp
jae
into
cwtl
or
and
xchg
pop
jnp
mov
dec
ljmp
sbb
arpl
inc
pop
clc
sbb
stos
outsl
or
xchg
adc
bound
or
andb
cwtl
sbb
dec
outsb
fxam
enter
jp
call
mov
dec
cmp
in
mov
fimuls
sub
cmp
clc
daa
ret
or
and
sar
rcll
mov
push
mov
shr
sbbb
mov
imul
push
cli
cmpsb
jl
fstpt
stos
dec
nop
mov
dec
xchg
sub
sub
std
mov
out
jle
daa
pop
or
ja
sbb
push
mov
mov
or
cltd
arpl
pop
mov
imul
lahf
jl
cmp
test
popf
sarb
xor
loopne
test
mov
lock
add
adc
jl
in
jno
sbb
sar
or
cs
lcall
jbe
lock
leave
mov
fildl
mov
push
add
pop
rcrb
in
sahf
scas
loope
dec
jmp
js
and
push
cmpsb
lods
hlt
mov
mov
pop
pop
icebp
jg
adc
mov
or
lcall
jns
mov
ret
cli
ret
mov
xchg
cmp
xchg
addr16
pop
dec
jae
sub
pop
xchg
int3
call
xchg
lcall
xchg
sub
outsl
cmc
jns
mov
xchg
push
outsl
push
push
jbe
inc
mov
fmull
stos
cmpsb
enter
push
add
rclb
push
add
call
sub
es
ljmp
inc
pushf
or
jmp
mov
mov
sub
stc
cwtl
mov
ficomps
cmpsb
push
mov
mov
pop
and
and
mov
xlat
mov
inc
push
or
xlat
js
push
jbe
movsb
scas
icebp
inc
std
stos
sahf
jle
lock
mov
in
adc
fiadds
inc
ss
outsb
sub
aaa
xchg
repnz
jg
add
repz
mov
fsubs
shlb
in
daa
adc
movsb
fs
lret
shl
in
xor
mov
in
push
jne
jge
dec
call
addr16
insl
xor
xor
mov
jnp
addb
je
std
and
adc
mov
cmp
div
cmp
sahf
pop
testw
ja
xor
inc
je
xchg
mov
jo
je
mov
shlb
sbb
and
push
inc
clc
dec
add
cmp
mov
jle
negb
or
std
inc
push
xor
dec
mov
test
fstpt
mov
enter
mov
mov
and
loopne
pop
pop
mov
jecxz
mov
mov
ret
adc
pop
cs
ret
push
imull
xchg
int3
repnz
pop
mov
mov
pop
in
movsl
or
pop
aas
pushf
dec
shrb
mov
pop
sbb
fmulp
adc
nop
roll
jecxz
dec
pop
and
xchg
xchg
popa
ljmp
add
mov
push
outsb
push
mul
int
adc
mov
or
lret
aas
add
test
add
outsb
pop
jp
rorb
jle
mov
mov
adc
jp
mov
aam
jno
movsl
mov
mov
mov
push
inc
jecxz
cmp
idivl
fsubrs
adc
jns
mov
cmpsb
lahf
outsl
test
test
mov
mov
lock
leave
nop
xor
cmp
test
mov
fists
mov
lret
xor
imul
add
add
insl
std
ret
adc
dec
mov
push
push
jo
jo
or
loopne
and
and
sub
and
mov
pop
cmp
jno
fs
shl
divl
cwtl
sub
xchg
and
fs
ljmp
clc
sbb
loopne
add
icebp
rcrb
iret
outsb
adc
mov
mov
jecxz
faddl
cmp
and
jge
and
pop
cmp
loope
bound
es
loop
jno
icebp
movsl
jbe
mov
sbb
add
adcb
mov
add
fcoms
fimull
push
jne
inc
ret
fwait
inc
inc
les
push
lods
sub
dec
cmp
cmp
mov
test
sbb
add
mov
mov
nop
mov
and
jecxz
xchg
jmp
mov
popl
scas
adc
aam
out
pop
mov
jbe
inc
sar
and
jae
cmp
or
in
dec
or
mov
push
in
ffree
inc
jns
and
jmp
sbb
cmp
lock
test
pop
ds
es
or
arpl
and
aam
test
mov
out
ljmp
je
push
mov
test
jo,pt
adc
data16
and
xor
mov
dec
add
fwait
and
xchg
out
dec
repnz
jb
icebp
cmpsb
call
imul
ss
and
shl
inc
dec
cmc
pop
lods
adc
int
hlt
inc
pop
lods
std
mov
inc
scas
dec
std
ret
push
in
mov
repnz
cmp
pop
movsb
and
mov
int3
mov
mov
jnp
mov
sub
push
mov
inc
and
jbe
out
test
mov
xchg
lods
ficoml
notl
popl
add
xor
jbe
ret
mov
pop
es
sub
outsl
dec
inc
mov
add
jne
add
fcoml
dec
rol
xchg
imul
and
xor
mov
rclb
mov
push
rorl
sub
enter
std
out
adc
inc
ret
cs
jg
sub
mov
insb
out
aaa
clc
mov
inc
xchg
adc
cmp
xor
aam
je
add
sbb
sbb
jns
imul
xchg
mov
pop
negl
add
jns
cmp
lods
sbb
std
mov
xor
or
test
sti
xor
cmp
loope
movsl
out
push
dec
in
push
jl
mov
cmp
xor
shrb
mov
jbe
jbe
mov
fwait
xchg
add
insl
adc
inc
push
jns
adc
xchg
dec
jbe
mov
sbb
jne
fldcw
in
xchg
add
outsl
fidivrs
aas
mov
jle
cmc
jo
mov
xchg
push
and
push
jge
push
repz
jo
mov
test
sub
sub
jecxz
and
std
add
xchg
jle
icebp
lds
ret
pop
push
data16
sbb
pop
xchg
notl
fwait
repz
mov
out
ja
fistpl
cmp
loopne
jno
pop
pop
or
push
or
and
adc
xor
xor
sub
adc
jl
negl
pop
stos
jmp
in
rcrw
jb
sub
call
rcrb
hlt
icebp
sbb
fisttps
mov
lcall
ja
inc
inc
pushf
pusha
outsb
pushf
mov
dec
mov
inc
inc
and
add
iret
inc
insl
rcrl
ds
out
inc
lret
fwait
inc
and
ret
test
aad
je
push
xchg
lds
inc
sahf
mov
ds
mov
nop
pop
js
pushf
jns
adc
out
mov
mov
adc
mov
or
pushf
int
lods
push
mov
fisubs
pop
enter
mov
jmp
daa
mov
xor
adc
push
push
jno
lahf
mov
cmpsl
dec
xchg
lahf
fs
xor
push
or
mov
es
jnp
add
and
cmp
xor
xchg
mov
and
cmp
mov
xchg
arpl
movsb
dec
imul
lcall
daa
mov
mov
or
add
add
mov
loope
cmp
mov
cmp
out
rol
or
aam
adc
repz
sbb
in
test
sbb
jo
ja
mov
in
mov
test
mov
inc
cmp
ficompl
push
cli
std
mov
out
fwait
imul
adc
icebp
mov
jl
dec
xchg
subl
mov
mov
movsl
ret
ret
addb
fcompl
push
adc
insb
movsl
test
les
add
jecxz
sub
leave
pop
jns
mov
pop
sbb
cmp
rcrb
je
sti
fsubrs
jmp
rcll
mov
outsl
cmp
lret
shlb
in
mov
add
ja
stos
test
sub
jno
add
mov
xlat
scas
mov
fidivrs
iret
add
push
test
dec
mov
sbb
in
lds
or
jle
roll
movsb
xor
pop
outsb
das
fwait
sarb
pop
imul
ret
jo
pushf
adc
push
shl
cmp
jne
push
jge
cmp
mov
scas
mov
test
jne
xor
adc
les
adc
mov
aam
leave
adc
fsubrs
data16
lret
cs
lcall
and
nop
adc
incl
rorb
add
cmp
addb
imul
or
xor
mov
out
repnz
fsts
mov
out
pusha
cld
into
push
pushf
xchg
lds
je
push
lcall
lret
inc
add
or
lahf
mov
out
jle
dec
sbb
lea
and
push
repnz
ret
jmp
neg
rclb
jge
mov
add
inc
bound
iret
mov
lret
push
fs
scas
lock
sub
jecxz
and
shll
test
iret
and
dec
push
add
outsb
sub
and
cmp
dec
xor
push
lret
addb
gs
push
push
xchg
aad
push
mov
aad
hlt
inc
insb
sbb
lcall
shlb
xchg
cmpsb
xchg
mov
dec
sub
into
or
lret
hlt
sub
stc
push
mov
fisttpl
in
lea
repz
inc
int3
iret
mov
fldcw
mov
jbe
and
pop
jl
mov
or
sub
jp
fwait
dec
lret
jge
popa
ljmp
sbbb
cmpsl
popa
adc
mov
js
sub
add
push
aas
movb
insb
arpl
je
add
ss
jecxz
cld
inc
push
pop
mov
insb
or
stc
inc
loop
enter
adc
inc
pop
scas
xor
mulb
mov
cmpsl
and
pop
push
jno
adcb
push
addb
cmp
insl
mov
cmpb
sbb
iret
adc
sub
ret
sbb
add
sbb
mov
shll
inc
aaa
jecxz
jbe
cs
and
pushf
sbb
xlat
mov
mov
rolb
aam
push
stc
lret
add
add
std
outsl
and
xchg
lcall
sbb
adc
cmp
sub
or
fwait
mov
fs
gs
jbe
fsub
mul
nop
stos
lods
mov
lret
stos
sub
jge
xchg
pop
push
repz
ror
nop
dec
jae
fucomp
mov
inc
out
push
push
outsb
out
fidivl
dec
mov
push
sbbl
fcompl
sbb
push
inc
and
pop
ja
aam
adcb
lahf
fsts
xchg
divl
mov
mov
dec
and
sub
cli
or
xor
es
sbbb
in
pop
pop
mov
aas
mov
sar
flds
inc
fldl
dec
sahf
and
das
xchg
lods
sarb
jne
jno,pt
mov
data16
or
lods
ret
notb
xchg
xor
push
adc
inc
xchg
add
jnp
push
jo
dec
jnp
push
xchg
inc
pop
push
mov
xchg
mov
test
mov
xor
xchg
hlt
mov
dec
lea
xor
xchg
dec
ljmp
xchg
push
adc
and
pop
aaa
xchg
dec
int3
cld
sti
add
ss
scas
fimull
dec
pop
mov
js
btr
mov
test
fimull
or
ss
mov
stos
dec
fsubl
insb
inc
out
mov
and
mov
movsb
jg
and
dec
sub
das
addr16
xor
xchg
sub
cmpl
fdivr
add
jne
das
cmp
cmp
lret
push
or
daa
xchg
mov
push
pop
and
sub
jmp
pop
sbb
imul
lret
pop
pop
fsubrl
test
arpl
xchg
lock
orb
inc
jno
out
add
xor
js
sub
jg
testl
mov
fnstcw
dec
lods
xchg
jbe
aam
push
lret
xchg
inc
lret
push
inc
fidivl
jns
mov
scas
push
jg
push
fildll
int
inc
popf
scas
mov
or
adc
js
bound
outsl
inc
dec
sbb
xor
sbb
mov
inc
sub
in
repz
repz
shrl
cmp
adcb
pop
ljmp
out
sub
cmp
jge
xor
xorl
jne
inc
mov
aad
add
cmp
pop
push
shl
std
xchg
mov
mov
inc
jecxz
sbb
jl
mov
rolb
inc
dec
push
int
aad
test
push
inc
mov
pop
cld
sub
adc
mov
es
inc
dec
outsl
mov
test
or
sub
dec
pushfw
aas
inc
cmp
push
sub
loope
mov
mov
xchg
push
mov
push
ljmp
ss
xchg
popf
shlb
and
stos
jp
jo
rcrb
mov
les
push
data16
repnz
xchg
xchg
sbb
push
negl
pop
or
sarb
add
jae
xchg
dec
mov
mov
lods
les
mov
or
icebp
inc
frstor
js
xchg
sbb
aas
ror
cmp
je
pop
sbb
inc
mov
clc
dec
sbb
test
in
push
je
or
mov
daa
int3
jmp
es
rcr
sub
notl
and
out
fsubr
loope
imul
xor
push
jl
jp
cltd
data16
xchg
fadds
fwait
mov
dec
fisubrs
xchg
or
shll
test
push
push
fwait
xor
daa
xchg
inc
fisttpll
sbb
fldenv
test
push
lahf
insl
add
out
movsb
fmuls
mov
add
mov
mov
cli
lods
mov
gs
fistps
into
fmull
test
in
adcl
bsf
loop
jp
inc
xchg
ret
sti
sarl
aad
popa
sbb
push
mov
mov
jg
xor
push
mov
pop
cs
add
or
cltd
movsl
pop
jo
push
mov
lods
mov
lods
dec
mov
mov
int
jp
ja
gs
testb
movsl
inc
dec
dec
std
lds
dec
jmp
shrl
hlt
pushf
hlt
mov
sbb
int3
sahf
test
push
pop
out
dec
scas
push
lods
dec
lods
adc
adc
rcrl
in
push
popf
sub
aas
jmp
lret
jge
pop
jge
xor
ljmp
pop
test
test
in
mov
jo
cmpsb
mov
xor
push
fidivl
dec
mov
stos
in
bound
scas
ror
mov
jmp
mov
xchg
shr
std
dec
inc
iret
sahf
lods
fldt
daa
jnp
mov
shlb
nop
xchg
jmp
std
repnz
fldl
les
leave
stos
aas
loope
xor
in
out
inc
and
adc
cmpl
lea
jbe
pop
mov
xlat
mov
and
push
xor
nop
fwait
or
popf
cmc
out
test
cmp
and
push
fdivs
and
sahf
pop
loope
subb
mov
add
mov
cmpsb
push
scas
lods
push
jne
adc
jg
inc
ds
xlat
push
cmpsl
imul
into
ljmp
mov
gs
sar
xlat
cmp
lea
pop
xlat
mov
in
hlt
xchg
mov
pop
or
xchg
icebp
xchg
call
sbb
jg
jne
fstl
fcoml
add
jb
das
pop
mov
les
call
testb
xor
adc
or
or
pop
sbb
mov
scas
mov
ss
clc
rcll
jno
je
jne
arpl
call
inc
mov
sahf
mov
pop
jbe
cmp
lock
adc
mov
dec
andl
mov
std
fnstenv
dec
adc
or
xor
addr16
push
xchg
xchg
call
sub
loopne
dec
out
add
inc
popf
push
imul
into
lcall
hlt
iret
add
je
out
clc
dec
ss
into
inc
fidivrl
adc
jl
mov
rcrl
shrb
mov
arpl
push
in
mov
fsts
dec
es
dec
inc
shll
adc
push
xchg
push
mov
xchg
xchg
js
std
fs
mov
clc
popa
sub
sub
sbb
les
adc
lahf
js
xchg
ret
bnd
ret
pushf
shll
daa
dec
dec
test
insl
xchg
xchg
outsb
int
fcompl
out
xor
dec
or
in
jne
repz
xor
add
push
cmpsl
inc
test
mov
icebp
iret
mov
mov
inc
inc
shlb
lahf
std
sub
xor
fwait
shrl
mov
jmp
dec
jecxz
cld
mulb
lods
add
decl
lahf
out
repnz
imul
inc
jmp
dec
mov
loopne
adc
adc
jne
test
push
push
in
xor
pop
lea
inc
mov
aad
sbb
das
pushf
cltd
jg
ljmp
mov
cld
or
or
pop
adc
cltd
adc
mov
push
or
adc
mov
push
adc
shll
add
cmp
decb
ljmp
mov
je
add
xchg
and
xor
mov
mov
mov
int
hlt
xchg
pop
push
mov
cld
mov
test
out
imul
aam
cmp
dec
lock
mov
mov
xchg
out
mov
shl
inc
in
sub
jns
jnp
andb
mov
lock
rcll
ljmp
lds
mov
sub
js
lcall
push
sub
pop
xor
out
cmpsb
cmpsb
or
pusha
xchg
and
cmp
and
add
loop
xchg
sbb
sbb
jbe
bswap
lock
push
sbb
in
repnz
push
mov
icebp
jae
sti
add
pop
pop
push
scas
push
xchg
mov
xchg
push
inc
aaa
mov
sub
int
in
daa
sbb
mov
inc
sub
sbb
jmp
in
jmp
push
loopne
call
test
int
test
xor
aad
fsub
inc
push
ret
int3
sbb
subb
adcb
and
jge
pop
adc
fcomps
movsl
js
or
sub
mov
aas
insb
sub
out
mov
adc
push
dec
lds
les
psrlw
in
ss
mov
mov
in
mov
and
mov
shl
pop
lock
out
jbe
jno
push
pop
mov
je
cwtl
add
dec
jne
xor
dec
cmpsl
cmpsw
pop
push
mov
popa
int3
js
sub
fcompl
aam
sub
lds
inc
addl
lock
xchg
jecxz
push
push
lea
sbb
dec
or
fcmovnb
adc
jbe
fdivs
test
repz
mov
test
leave
xlat
xor
gs
dec
push
rcrb
xor
test
mov
pop
jne
jp
test
adc
mov
inc
cld
nop
jne
or
pop
jo
add
sti
or
unpcklps
ficoml
jbe
xor
fwait
clc
push
adc
pushf
in
mov
ss
cmpsl
imul
scas
gs
jne
loope
lds
push
nop
stc
dec
xor
stos
cmp
xor
sbb
call
mov
mov
dec
push
dec
je
or
test
adc
fists
pop
add
pop
std
dec
mov
ja
push
int
or
ret
mov
iret
cmpsl
lret
dec
adc
mov
ja
stc
sti
mov
dec
xlat
fsubr
rorb
movsb
aad
fidivl
mov
mov
inc
fsub
call
out
sahf
cli
aam
inc
adc
ds
jb,pt
test
ljmp
ss
cmp
or
out
int
cmp
fstpt
add
insb
cmp
push
adc
je
test
or
rol
mov
mov
and
loope
adc
ljmp
sub
repnz
fisubrs
jmp
in
repz
test
pusha
aam
xchg
sub
data16
shll
push
outsb
or
sbb
sub
dec
pop
data16
pop
subl
and
icebp
je
das
outsl
xor
add
lods
mov
push
shll
lret
pop
test
ret
sbb
jecxz
inc
in
bound
icebp
dec
orl
or
lahf
pop
push
in
mov
mov
mov
pop
enter
sub
add
out
dec
cs
repz
rorb
mov
cli
inc
out
mov
insb
mov
cld
jo
fisubl
mov
sbb
or
loopne
mov
jecxz
dec
fnstenv
ljmp
xor
in
jae
jne
mov
or
mov
out
ret
mov
mov
add
movsl
mov
mov
stos
sub
fmuls
xor
add
inc
mov
fsubrl
adc
jp
xor
mov
jns
enter
lds
xchg
add
test
aad
pop
xchg
jns
push
cmpsl
jp
mov
lret
sub
daa
div
and
and
jo
inc
in
adc
dec
fisttps
testl
packuswb
ret
jge
xor
jl
mov
inc
adc
jg
dec
gs
inc
leave
or
inc
std
outsb
mov
lret
push
outsb
ret
jns
ret
mulb
lcall
dec
jecxz
ret
loope
dec
arpl
add
pop
or
fimuls
call
jne
pop
subb
inc
nop
mov
mov
jae
mov
out
xor
cmp
dec
or
jl
out
jecxz
xor
rcrl
inc
lret
ds
rcl
dec
cld
pop
add
daa
jo
fidivrs
es
sub
pop
int
sti
inc
mov
addr16
mov
adcb
out
xchg
jno
push
in
loope
in
rol
add
sti
sub
lret
aad
lret
test
add
lock
cmp
shl
lds
sbb
loope
arpl
cmp
movsl
fs
ljmp
push
sbb
cli
xor
and
xor
dec
push
cmp
mov
or
outsl
push
add
push
inc
arpl
mov
divl
repz
add
mov
test
enter
jmp
fdivrp
bound
stos
pusha
inc
divl
gs
push
add
jp
jg
mov
popa
lds
inc
pop
jecxz
jns
fdivrl
push
cmp
outsl
test
loope
mov
sub
test
pop
cmpsb
dec
sarb
mov
pop
mov
mov
jno
dec
loope
mov
cmp
mov
jb
scas
outsl
cmp
je
jns
mov
fwait
xor
xor
mov
sbb
repz
ret
mov
push
adc
jle
dec
and
sarb
cmpsl
jae
jle
test
mov
fs
loopne
sbb
mov
in
mov
leave
flds
sub
mov
in
adcl
pop
jb
sub
and
sti
movsl
pop
xchg
xchg
jb
push
jp
ret
mov
subl
push
arpl
js
fimuls
call
and
jo
and
sbb
pop
int3
adc
scas
jp
jmp
mov
mov
bound
pop
cmp
pushf
sti
mov
push
cmp
lock
inc
ja
push
sbb
repz
sahf
push
or
inc
xor
fcomi
daa
xchg
out
shrl
mov
jmp
inc
fiaddl
mov
push
lret
rep
mov
clc
cwtl
rcl
jg
mov
repnz
cltd
call
jo
or
iret
sbb
jge
and
xchg
incl
adc
add
mov
mov
daa
dec
add
mov
sbb
aam
sub
push
cmp
ljmp
jns
cmp
xchg
std
adc
add
cmp
mov
fistps
push
mov
leave
pop
push
stos
into
pop
stos
call
insb
cs
push
push
out
and
jnp
scas
std
ficomps
sbb
das
jg
or
dec
xchg
fildll
pop
lods
imul
add
xchg
outsb
jb
imul
int3
sahf
jle
clc
js
subb
in
adc
jb
fimull
cmp
enter
dec
pop
adc
pop
mov
or
or
pushl
xchg
loop
sbb
sbb
popf
add
in
lds
jb
push
cmp
lea
rol
andb
or
inc
out
mov
mov
loop
xor
sti
jp
mov
and
mov
mov
lea
sbb
pmulhw
ret
fwait
stos
iret
out
push
mov
xlat
jne
andl
lret
andl
jge
mov
jbe
sub
pop
fchs
xorl
jbe
test
imul
sbb
jae
ret
pop
shrb
dec
bound
pop
fldln2
pop
sarb
fldcw
xchg
jp
dec
inc
sbb
dec
xlat
out
push
ja
cli
movsb
lret
dec
mov
popf
je
inc
mov
repz
pop
and
push
pop
fdivl
xor
jg
jmp
and
jb
popf
loope
iret
cwtl
call
cmp
pushf
push
jbe
inc
push
cltd
roll
cmp
xchg
inc
adc
dec
insl
inc
xchg
dec
jne
xchg
test
sahf
add
out
fcmovnbe
xor
mov
inc
ret
or
xchg
daa
mov
inc
and
and
shll
xchg
fwait
cmp
add
inc
arpl
sub
out
lret
sbb
jge
dec
jne
andb
mov
xor
les
fs
push
cmp
cs
jp
push
cmpsb
pop
mov
xor
push
xchg
bound
lods
push
dec
xor
xlat
add
xor
jle
push
jge
mov
push
lcall
dec
imul
sbb
sub
dec
pusha
jge
pop
sbb
jp
andb
cmpb
jp
lock
popf
movsb
imul
in
mov
sahf
mov
loope
fimull
cltd
adc
pop
pop
in
mov
imul
mov
mov
mov
cmp
jo
cmp
or
push
pushf
push
adc
xor
push
xor
pop
xlat
movsb
xor
mov
scas
in
les
je
mov
dec
inc
mov
inc
mov
pop
xor
ss
xor
pusha
mov
pop
push
adc
pop
xor
jmp
adc
xor
inc
xchg
jle
cmc
rol
repnz
inc
xchg
in
lret
cmp
push
sub
sahf
bnd
sub
ja
call
add
lock
jl
aaa
repnz
mov
ficoml
mov
xor
insl
fmull
xor
pop
popa
mov
cmp
adc
icebp
ljmp
add
mov
cmc
xchg
sub
stos
jle
inc
push
pop
rorl
addr16
and
dec
and
filds
inc
push
sub
mov
pop
mov
imul
cmc
jl
lret
out
pop
or
add
mov
mov
bound
or
imul
inc
push
adc
sarb
sub
push
arpl
lret
add
mov
cmc
lds
jp
xchg
mov
and
bound
mov
cmpsl
adc
jmp
out
push
aas
pop
shlb
pop
cmc
add
push
push
fidivl
mov
add
sub
pop
and
into
faddl
adc
pusha
jl
inc
add
dec
fiaddl
aaa
adc
push
dec
jno
sti
mov
ret
in
out
and
das
jmp
cmp
mov
ret
shl
jge
push
xchg
data16
mulb
rcr
jg
shlb
sub
in
ret
test
lds
repnz
es
xor
cmp
push
and
in
mov
testb
insb
inc
mov
or
pop
adc
jmp
mov
pop
data16
mov
jbe
xchg
xor
mov
add
jns
in
xchg
inc
adc
ficompl
mov
ljmp
mov
push
or
dec
scas
xchg
dec
inc
loopne
fldenv
and
push
inc
lahf
imul
int3
push
repz
mov
rcr
or
sub
sub
ret
ret
mov
pop
and
pop
in
xor
cmpsb
not
pop
sbbb
scas
push
ljmp
pop
out
xor
pop
je
mov
ds
push
or
mov
inc
cmp
movsb
jecxz
repnz
loop
jmp
ljmp
cmp
mov
stos
or
push
ljmp
cmp
and
insl
pop
aad
and
mov
add
leave
test
xchg
cmp
push
adc
jp
lret
adc
inc
imul
out
jnp
pop
lods
mov
aam
lock
push
add
loopne
stos
and
shrb
pop
stos
test
in
dec
xor
jg
mov
rcl
sbb
mov
mov
push
stos
pop
cld
push
jecxz
xor
mov
cwtl
leave
pop
repz
cmovb
cmp
sub
mov
mov
mov
outsb
daa
sbbb
jmp
ret
sbb
mov
push
adc
xchg
push
js
push
nop
aam
and
js
aaa
outsl
xchg
sbb
cmp
lods
mov
or
and
and
jle
out
outsb
add
inc
add
sub
scas
jmp
xchg
ficoml
dec
cltd
xor
mov
or
pop
loopne
cwtl
stos
into
rol
pop
or
jl
sbb
arpl
loop
aas
out
rcl
out
icebp
enter
inc
sub
imul
pop
push
cmc
push
jmp
scas
icebp
xchg
sbb
mov
push
pop
inc
loopne
adc
lcall
jmp
pop
pop
pop
fsts
aaa
cmp
arpl
arpl
mov
ret
stos
call
cmp
add
inc
jmp
std
cmpsl
push
dec
icebp
dec
rorl
and
add
fwait
repnz
jecxz
adc
cmc
ffreep
or
push
and
loop
sarl
mov
stos
testb
inc
das
inc
mov
in
cmp
or
scas
in
gs
adc
notl
rcrb
mulb
push
shrl
mov
jo
mov
xchg
push
cltd
mov
and
packsswb
cwtl
cmp
or
push
fdivrl
sub
out
into
pop
inc
arpl
add
hlt
fiaddl
nop
ret
imul
mov
push
jmp
cmc
or
xchg
dec
repz
popa
or
shl
jns
cld
sub
jmp
pop
in
mov
push
mov
xchg
add
mov
jl
pop
scas
hlt
jge
pop
popf
push
loope
scas
insb
adc
mov
jns
and
scas
std
jae
leave
dec
or
scas
in
push
mov
in
cwtl
js
add
push
out
fwait
push
scas
pop
dec
lods
sbb
push
lock
ret
mov
popf
add
fstps
mov
dec
sbb
aas
sbb
out
pop
add
jle
imul
mov
das
and
lods
jns
and
cmp
cmpsl
dec
fdecstp
mov
aam
cld
dec
test
cmpsl
dec
insl
fisttpll
int3
push
iret
sbb
test
imul
pop
cwtl
adc
leave
iret
out
cmc
or
outsb
mull
sbb
fs
adc
dec
imul
ja
inc
out
outsb
hlt
out
adc
dec
test
dec
lret
cmp
pop
mov
ret
xchg
xchg
lock
std
sbb
stc
inc
cwtl
and
push
pop
xchg
lahf
pusha
loope
mov
shrb
sti
in
adc
insl
repz
rcrl
sahf
iret
aaa
pop
mov
loope
sahf
push
mov
xchg
cmp
push
gs
sbb
lret
mov
into
sbb
xchg
mov
ds
fwait
pop
ret
adc
lds
bound
in
jge
call
into
cmp
ja
push
bts
cmp
outsl
xchg
mov
jno
cmp
outsb
or
loope
add
popf
pop
stc
adc
pop
cmp
mov
outsb
jmp
pop
inc
sub
cmpsb
dec
rclb
movb
adc
aaa
xchg
je
cmp
mov
popf
aad
and
sub
imul
mulb
jge
jmp
pop
sub
cmpsl
push
adc
sub
scas
push
xchg
mov
mov
push
inc
adcl
cmp
stos
mov
bnd
pop
adc
sbb
das
cmpsl
aaa
pop
xor
mov
pop
jmp
outsl
mov
mov
push
pop
sub
call
add
jo
in
push
fcmovnu
pop
in
daa
imul
or
xor
mov
stos
mov
jbe
sbb
leave
jbe
pop
push
iret
sub
add
mov
lods
stc
add
fs
push
test
imul
pop
mov
mov
mov
mov
jecxz
sub
loop
out
ret
adcb
scas
inc
imul
aas
inc
jne
aaa
test
imul
ds
sub
dec
loopne
fdivl
ret
mov
and
or
xor
push
shll
fs
jmp
out
adcb
jne
in
fists
in
cli
in
stos
jno
xchg
mov
jmp
push
ds
rcr
mov
pop
push
jmp
das
inc
cwtl
pop
std
push
and
and
and
fdivl
in
inc
lcall
js
mov
in
add
pop
sbb
push
or
icebp
xlat
or
and
xchg
sub
lret
xchg
sbbl
aad
mov
mov
mov
and
mov
in
sub
lahf
std
outsb
and
sub
mov
dec
dec
or
jae
scas
pop
pop
fwait
sub
addl
jno
into
cmpl
stc
ljmp
loopne
stos
fisubrs
mov
sbb
test
lock
addr16
cmpsb
test
icebp
jle
jl
loopne
or
enter
inc
sbb
sbb
inc
lea
cmp
fs
jmp
es
jmp
dec
xor
push
mov
int3
test
push
insl
inc
test
out
std
hlt
arpl
int
repz
push
add
pusha
add
fstl
iret
cmp
sbb
dec
add
mov
sub
cmp
leave
adc
outsb
or
fcmovu
cmp
aad
test
test
jno
out
cmp
jne
xor
sub
dec
popf
cmp
pop
mov
sti
lods
mulb
je
or
in
dec
xor
std
mov
lods
inc
cmpl
or
mov
aas
or
je
xlat
fsts
std
cmp
xor
scas
aas
ficomps
lret
aam
aam
mov
adc
or
push
lret
data16
jns
add
push
sub
nop
push
cmp
add
in
push
ret
xchg
cmp
rcl
idiv
das
mov
or
mov
or
add
icebp
xchg
adc
aam
pop
cmp
dec
pop
repz
push
add
xor
push
mov
addr16
insl
jae
mov
popf
popa
sub
push
mulb
mov
dec
mov
pop
mov
add
mov
or
push
cli
push
imul
pop
adc
aas
jl
jbe
jns
rcrl
pusha
xor
lods
stos
inc
jle
sar
prefetcht2
in
cmp
xor
in
lea
jae
jb
mov
inc
push
xchg
ja
jo
mov
cmp
xor
push
imulb
mov
dec
push
imul
mov
adc
test
jbe
into
push
jp
sbb
leave
and
fistpl
mov
push
jne
cmp
adc
test
xor
sbb
adc
test
or
rcrl
pop
rcr
xchg
div
out
loopne
mov
rorb
in
scas
fldl
add
jo
mov
sub
stos
shrl
inc
arpl
xor
fmull
ret
icebp
hlt
fidivrs
jns
xchg
icebp
insb
ja
jmp
fs
mov
popl
xchg
mov
jo
dec
aad
fldt
icebp
adc
inc
scas
cmc
pop
mov
mov
push
imul
xchg
divl
out
sub
push
mov
mov
daa
dec
or
outsl
cmc
or
xor
lods
jae
sbb
mov
or
dec
or
inc
xor
shll
cltd
jl
outsb
xor
aam
fucomip
mov
hlt
jo
xchg
fcoms
lahf
mov
aad
inc
hlt
push
mov
pop
add
add
and
test
ss
xor
inc
and
push
and
pop
cmp
inc
sub
lcall
or
ret
js
cld
push
clc
into
xor
incl
inc
push
push
dec
adc
std
xor
and
cld
xor
mov
addr16
xchg
vmread
es
dec
insl
pop
mov
fimuls
jns
mov
sbbb
imul
bound
cmp
and
sub
push
mov
cmpsl
out
int3
cltd
dec
adc
mov
mov
pop
and
fwait
adcl
sbb
and
add
add
dec
mov
icebp
aas
sbb
call
xor
imul
andb
repnz
notl
push
dec
add
dec
stc
sub
jp
out
hlt
fcoml
in
out
js
dec
adc
dec
addr16
mov
mov
pusha
sahf
jo
jmp
insb
test
repnz
stc
jmp
adc
pop
ja
cmp
pop
mov
xchg
pop
insl
xor
pop
jo
fmuls
mov
xor
mov
scas
iret
mov
jbe
adc
aaa
je
insl
mov
pop
cmc
cli
mov
mov
in
test
aad
push
sub
adc
pusha
xor
mov
adcl
cwtl
or
pushf
add
adc
and
pop
dec
movsl
popf
or
pop
gs
pop
fnstcw
pop
adc
fsub
inc
insl
fidivrl
fs
fsub
sub
in
ljmp
enter
or
push
in
bound
inc
cmp
je
lar
fucom
xchg
nop
mov
mov
push
mov
jb
mov
lds
adc
add
stc
mov
sar
lods
mov
push
mov
fistps
cli
out
adc
mov
sbb
in
sbb
lods
fs
dec
cmp
dec
ret
jb
into
in
xchg
and
fiaddl
test
and
es
int
int3
or
test
jns
pop
out
test
mov
flds
push
test
mov
icebp
in
cltd
das
xchg
cmp
fidivs
push
add
frstor
iret
push
xor
icebp
jne
jo
and
sub
mov
mov
movl
mov
pushf
fwait
dec
aaa
xadd
mov
adc
and
scas
xchg
lret
and
and
sahf
inc
inc
sbb
sti
cmp
cli
sti
cmc
shrl
inc
xchg
fstps
test
out
bound
nop
cmp
and
pop
push
pop
rcr
xchg
ret
adcb
ret
xchg
mov
push
fs
cli
adc
jmp
addb
push
cmp
inc
xlat
add
icebp
inc
pop
push
scas
lcall
jge
inc
ja
pop
cmp
fsubl
sbb
rcl
inc
test
mov
push
xor
in
dec
clc
pushf
or
rcrb
mov
and
add
jb
xchg
mov
enter
adc
lcall
cs
sub
mov
push
clc
xor
cmp
scas
cmc
xor
lock
scas
xor
mov
sub
push
or
xor
fs
cmp
testb
xchg
fildll
pop
out
imul
mov
mov
cmp
cmp
lcall
mov
sbb
mov
dec
in
fldt
sbb
jmp
andb
sub
push
xor
gs
stos
shl
daa
pop
inc
mov
dec
in
into
dec
int
movsb
pop
ljmp
bound
dec
hlt
cmp
push
mov
adc
loopne
lods
mov
dec
pushf
dec
push
cli
dec
xor
push
fistl
incl
pop
int3
pop
mov
stc
and
and
mov
ja
cli
push
or
xchg
push
leave
mov
stc
inc
mov
test
shlb
jne
pop
call
fnstenv
stc
push
mov
test
sub
adc
ljmp
mov
in
jne
add
pop
pushf
hlt
lods
mov
xchg
repz
mov
push
push
inc
sbb
scas
sub
repnz
inc
decb
push
pusha
mov
mov
xchg
rcrl
sub
push
or
mov
icebp
loope
orl
jmp
lods
add
pushf
xchg
cltd
lret
out
cltd
push
sub
loopne
leave
mov
repnz
iret
xchg
push
out
inc
dec
insb
cli
ja
mov
psubsw
pop
xor
andb
xor
hlt
xchg
divb
pop
mov
clc
and
inc
push
mov
cmp
pop
cmpsb
push
sbb
test
inc
scas
aam
aas
out
pop
jle
inc
fsubrs
mov
xor
dec
xor
pop
gs
xchg
mov
mov
pop
sbb
jg
jae
or
xchg
inc
mov
inc
jmp
stos
dec
xor
pushf
popa
mov
mov
jp
cmp
scas
movsl
outsb
cmp
lods
lahf
cmp
add
imul
call
shrb
adc
dec
loopne
cmp
shr
inc
jg
adc
inc
stos
insl
jle
shl
and
aam
scas
rcrb
mov
mov
movsl
leave
and
xlat
mulb
bound
xlat
push
xchg
mov
scas
inc
cmp
outsl
jl
sti
adc
fs
fsts
push
movb
push
daa
push
xchg
push
gs
pop
push
mov
push
add
dec
jmp
or
add
cmc
push
inc
xchg
gs
push
shlb
add
xchg
fcomps
dec
bts
addr16
gs
mov
scas
and
std
pop
enter
sahf
mov
jo
dec
pop
push
dec
pop
adc
mov
loop
sub
adc
movsl
mov
adc
dec
into
jbe
aas
inc
decb
push
xor
dec
mov
pop
sbb
pop
adc
or
and
dec
call
clc
loopne
mov
hlt
aad
and
out
push
add
loope
mov
mov
adc
xchg
mov
incl
mov
outsb
test
jae
sbb
imul
repnz
lret
fisttpll
repz
roll
ror
push
mov
out
xchg
or
sbb
out
jne
daa
push
pop
scas
sub
ds
dec
mov
pop
pop
push
inc
ds
cmp
notb
icebp
bound
shrl
sbb
jg
cmc
leave
dec
mov
xchg
mov
or
mov
in
jbe
jl
pop
sub
mov
push
sbb
leave
dec
mov
xor
cmp
cltd
inc
outsl
sbb
addr16
push
lahf
daa
mov
dec
rcll
pop
mov
mov
xchg
push
mov
lret
inc
arpl
jmp
inc
push
adc
in
aas
inc
outsb
in
and
lcall
mov
repz
and
fdivrs
sub
ds
ss
pop
push
xor
int3
lock
cwtl
lock
dec
mov
lret
mov
xchg
xchg
leave
cli
cmpsl
push
and
shl
rorl
lock
call
dec
subb
add
or
and
mov
fsubrs
out
addr16
push
push
arpl
cltd
stos
das
scas
out
and
cmp
or
push
faddl
rcrb
add
aad
fcmovne
xor
inc
xchg
test
stos
ja
dec
inc
ja
inc
pop
or
xorb
out
lret
xor
cltd
pop
and
out
mov
inc
fcomps
rcl
dec
mov
mov
push
xor
outsl
fldcw
xchg
sub
pushf
mov
movsb
mov
ljmp
dec
adc
loope
les
popf
inc
xchg
pop
sbb
dec
add
cmp
xchg
jo
inc
inc
mov
sbb
repz
sbb
shrl
out
jns
enter
mov
std
insl
test
callw
adc
pop
cmpsb
setge
pop
sub
nop
out
sub
inc
int
xchg
lret
lods
hlt
push
xorl
push
push
imul
sahf
push
rcl
dec
int3
vdivpd
outsl
inc
cmpl
dec
push
and
lock
jecxz
ficompl
int
call
lods
and
stc
xchg
movsl
jno
push
repnz
pop
sub
mov
pop
aam
and
andl
xor
stc
out
mov
sarl
stc
sbbl
pop
push
mov
xchg
in
fistpll
pop
pop
mov
je
dec
sub
pop
mov
pop
sahf
and
push
sbb
or
aad
cwtl
mov
push
xchg
mov
popa
mov
mov
push
sub
in
std
repnz
lods
push
out
sub
jns
dec
mulb
stc
sbb
lret
adc
shr
loop
enter
fsubs
mov
jae
lret
rorl
add
sbb
push
or
scas
or
hlt
bound
leave
mov
call
adc
insl
addl
pop
and
mov
jmp
in
lret
pop
pop
cmpsl
jl
sbb
sti
negb
nop
shrl
lret
fsubrp
or
adc
jae
repz
jg
push
push
lret
clc
icebp
mov
xchg
in
mov
hlt
popa
ret
mov
aam
negb
dec
sbb
mov
dec
fidivrs
shrb
mov
pop
movsb
mov
pop
test
xchg
out
test
dec
imull
sbb
fbstp
out
xorl
xorb
fldl
mov
jl
mov
jbe
stc
addr16
decb
jg
std
stos
pop
and
movsl
mov
or
inc
imul
cmpsb
and
pushf
xchg
jmp
jmp
repnz
scas
dec
test
gs
loope
or
test
inc
adc
add
mov
into
fcomps
jnp
sub
rcl
fimuls
aas
js
push
sub
incb
xchg
mov
fidivrl
mov
sub
or
ljmp
mov
lcall
loopne
fstpl
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
inc
sbb
mov
sbb
les
inc
mov
inc
lods
rcrb
outsl
pop
jbe
push
std
stc
fld
xor
dec
jbe
lds
sbb
add
testb
add
push
gs
loopne
orb
xor
sti
mov
sub
sbb
cmp
add
mov
fs
push
nop
inc
mov
xchg
or
xchg
out
inc
mov
incl
pusha
cmpsb
je
mov
por
add
mov
pop
add
std
mov
inc
loope
jge
adc
pop
loope
push
push
orl
mov
xchg
inc
sub
fwait
pop
inc
ficompl
int3
in
adc
je
mov
and
out
call
xor
sti
fisttpl
lret
sbb
pop
ja
push
imul
adc
pop
loop
imul
out
cli
push
dec
aaa
push
add
popa
mov
test
cltd
mov
cmp
xchg
mov
fsubs
mov
in
movsl
sub
dec
sahf
jne
nop
xchg
jbe
or
xor
mov
fildl
in
or
ja
aad
cltd
sub
js
dec
jb
nop
push
cltd
adc
sti
rcll
and
sbb
setl
cmc
repz
aaa
out
mov
cwtl
inc
pop
push
loope
out
mov
stos
mov
fs
mov
cmc
stos
sub
test
push
repnz
or
mov
mov
or
in
insl
hlt
mov
stc
or
mov
insl
or
dec
push
push
pop
cmp
jecxz
sbb
sub
insl
rol
test
repnz
jns
ficoms
mov
inc
mov
dec
inc
scas
es
cmpsb
mov
sbb
pop
popa
jb
insb
pop
or
outsb
mov
add
xor
jp
movsl
xor
adc
inc
pop
push
cs
add
cmp
movsb
push
pop
adc
dec
xchg
sahf
xchg
mov
and
lods
ficompl
js
dec
ss
push
and
sub
xchg
push
out
mov
xchg
jl
mov
jns
int
jg
push
dec
jbe
adc
or
push
xlat
inc
sbb
int3
sub
mov
adc
cmp
std
aas
adc
dec
mov
lds
xor
add
push
fildll
daa
jne
out
xchg
jnp
lea
aam
repz
dec
aas
testb
fucom
mov
cmp
xor
rcrb
lds
sahf
jo
mov
cmp
and
pop
mov
sbb
mov
xor
sbb
push
out
jmp
sbb
fmull
sub
inc
jb
cwtl
pop
push
sub
lds
sti
insl
fstpt
cmc
jnp
cmpsb
mov
daa
push
cs
in
outsl
stos
pop
pop
dec
loope
shlb
jno,pn
loopne
fidivs
repnz
jmp
mov
push
addr16
add
ljmp
sbb
pop
add
arpl
or
scas
cmp
inc
fnstsw
outsb
sub
adc
cmc
popa
mov
clc
out
xor
cmpsb
fwait
jae
inc
ja
mov
mov
cmp
hlt
in
ficomps
orb
and
cmp
cs
dec
and
add
xchg
and
pop
inc
jg
fisttpll
push
cmp
sub
ja
les
push
outsl
pop
ss
and
xor
pop
pop
mov
in
inc
push
xchg
pop
call
dec
.byte
loop
.byte
