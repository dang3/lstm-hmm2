inc
mov
and
rep
mov
dec
sub
pop
xor
fmulp
xor
jnp
inc
lds
mov
adc
jnp
lahf
fisubrs
or
sub
lods
ss
and
sar
lods
loope
subl
cmpsb
push
xor
nop
dec
sbbl
and
aas
pop
dec
shlb
mov
test
add
inc
out
js
bound
pop
lcall
pmaxub
insb
cltd
mov
pusha
sahf
movsb
test
lret
mov
popa
gs
dec
out
insb
push
dec
and
cmp
mov
mulb
dec
fldenv
mov
addb
sub
sub
lcall
ret
addl
fucomi
inc
shll
dec
rcl
sub
bound
clc
xor
jg
mov
fcoms
enter
inc
pop
lds
xor
mov
rol
ja
es
jb
xchg
pop
dec
inc
add
lahf
jo
loop
and
sbb
inc
imul
push
lret
adc
push
xchg
sub
xchg
in
mov
leave
cmp
sbbb
mov
icebp
mov
jnp
cltd
inc
sbb
mov
xor
pop
mov
lea
shlb
mov
cmp
loope
test
lret
cmpsl
jmp
stos
test
shll
cmp
xchg
sti
nop
mov
jp
add
mov
fmull
push
lahf
jp
out
add
cmpl
in
mov
cmpsb
pop
adc
sbb
jns
push
xchg
jno
je
sti
mov
popf
pop
in
dec
in
jmp
cld
in
push
jp
les
fadds
lock
inc
sub
mov
sub
fwait
pop
and
pop
cmc
add
jb
mov
aaa
sub
pop
dec
push
mov
adc
in
mov
dec
rcrb
push
lods
in
dec
shr
dec
addr16
cmpl
xchg
or
bound
ficoms
mov
inc
xor
outsb
test
leave
rcrb
loop
lods
and
xchg
sbbl
mov
les
outsl
mov
mov
daa
stos
mov
popf
aad
ror
sub
mov
or
inc
cmp
jae
or
idiv
repz
test
pop
testw
sub
outsl
leave
mov
lahf
xchg
sub
adc
nop
cs
and
xchg
cmp
xchg
popf
adc
repz
push
push
and
pusha
and
int
leave
pop
sub
xchg
pop
inc
jo
pop
adc
inc
lods
iret
ss
lea
es
dec
sub
cmpsl
mov
sub
in
xor
pop
and
in
fdivl
jb
and
cs
jno
dec
cmp
int3
repnz
pop
addr16
in
in
lock
xchg
cld
mov
fisubrl
push
in
mov
jns
add
or
iret
pop
inc
pop
xchg
mov
sti
mov
inc
jg
int
and
push
and
pop
pop
jmp
enter
mov
dec
add
mov
xor
fiadds
xchg
test
dec
in
sub
hlt
and
cmp
mov
sahf
xchg
out
je
lock
fdivs
push
rolb
dec
ret
cmpsl
jae
mov
cmp
xor
lea
jmp
repnz
call
fcomp
pusha
cmpsb
ja
ljmp
es
push
arpl
sub
rcrb
push
push
fidivrl
cltd
mov
push
ret
in
xor
push
inc
pop
jns
jae
dec
or
test
and
cli
fnstsw
push
cmp
xor
add
popf
pop
shll
jp
mov
jmp
dec
jmp
fxtract
notb
iret
cmp
xorl
cmp
imul
push
ljmp
push
and
sbb
xor
cmpsl
loopne
xor
cltd
push
aas
stos
fdivrs
mov
pop
mov
xchg
xor
mov
mov
data16
cs
int
filds
test
out
popf
xchg
cmp
mov
push
cmp
inc
leave
sbb
insl
cmc
mov
gs
icebp
jb
in
pop
fisttpl
mov
mov
outsl
dec
pop
stc
cltd
dec
aad
popa
push
fadd
push
pop
negl
sbb
ffreep
cwtl
mov
fdivrl
repz
dec
outsl
mov
xor
xor
adc
mov
test
cmp
enter
out
xor
fimull
call
arpl
cmp
inc
adc
testl
icebp
test
push
sbb
call
cmp
adc
dec
push
pop
adc
iret
popf
daa
enter
das
inc
and
bound
jb
adc
mov
ljmp
std
imul
out
cmp
mov
mov
adc
xchg
loope
loopne
dec
jmp
mov
pop
or
mov
sub
pop
push
incb
sbb
jge
movsl
stos
jnp
xchg
decb
ljmp
inc
xor
repz
shrb
xchg
sbb
les
pusha
int
jl
pop
sbb
js
jo
movsl
out
add
js
jns
mov
lods
lahf
mov
ja
xchg
mov
pop
arpl
pusha
mov
rcrl
shrl
fwait
movsb
cmc
sub
fcompl
pop
lret
not
xor
cmpsb
psubw
lret
cmp
cmc
or
stc
ret
or
fnstenv
cld
lods
into
in
cltd
mulb
adc
ss
aas
ja
repnz
cli
shr
aad
cmp
imulb
aas
xchg
sub
call
fnstenv
jmp
mov
cmpsb
aaa
aas
int
rclb
add
and
jge
je
push
adc
sahf
xchg
inc
les
rorb
inc
test
mov
cmpsb
push
in
shr
sti
hlt
test
test
das
stos
jne
lahf
sti
adc
lds
mov
adc
xchg
cmp
sbb
cmp
rol
imul
cmp
pop
out
mov
sarl
sub
xchg
jno
mov
push
stos
xchg
cmp
add
sbb
pushf
jo
out
cld
cmp
adc
mov
negb
push
lock
xchg
jmp
inc
test
xor
pop
out
add
adc
sub
popf
pop
nop
mov
sbb
jae
sub
lahf
jno
jae
sub
lods
add
jno
in
adc
cmp
leave
add
aam
movd
dec
fwait
and
inc
cs
push
iret
jb
shlb
and
in
test
faddl
subl
xchg
mov
imul
dec
push
xchg
sbb
adc
jg
repz
pop
loopne
fsubrs
std
or
call
pop
xchg
pusha
push
rep
mov
jp
es
js
cld
dec
jp
mov
aaa
pop
adc
xor
sub
sbb
mov
or
jae
inc
pop
add
push
lahf
gs
shrb
sahf
popa
and
mov
insl
or
dec
mov
aad
push
pop
sbb
pop
ret
cwtl
xor
leave
outsl
dec
and
leave
aam
push
add
ret
pop
xchg
mov
les
dec
or
dec
mov
imull
cmc
int
fisubs
xchg
je
push
shrl
ss
or
xchg
incl
das
lods
or
and
push
lods
shl
cmpsb
bound
sub
insl
sub
sbb
pop
dec
ffree
scas
add
in
sbb
cli
mov
jne
lahf
cmp
inc
or
xor
push
jb
xchg
sbb
imul
and
pop
mov
cmp
testl
popl
ds
adc
cmpsb
es
lea
sub
mov
mov
adc
repz
lds
xor
dec
xor
xchg
movsl
add
push
push
es
es
dec
movsl
orl
dec
push
aas
fistl
pop
xor
sub
inc
shlb
mov
cmpsl
xlat
sti
daa
mov
movsl
adc
hlt
ret
movsl
xchg
sub
adc
push
adc
or
pushl
sub
ret
fisubrl
mov
mov
inc
add
cmp
mov
jmp
cmc
dec
xor
es
sbb
mov
fstpl
push
cs
sub
cli
popf
jle
movsl
sbb
insb
lods
dec
fidivrs
pop
cs
cmp
rcrb
pop
add
jns
push
and
pop
stos
ret
mov
mov
sub
or
lahf
mov
andb
dec
inc
mov
bound
stos
jp
lret
lds
addr16
mov
into
cmp
rolb
push
aad
sub
xchg
clc
lcall
push
adc
pusha
cwtl
add
call
lods
pop
jb
inc
dec
mov
xchg
bound
or
ret
lret
jle
add
fwait
xor
lods
add
xor
cmpl
call
or
add
jecxz
lods
adc
mov
psubb
sbb
push
out
test
enter
inc
add
pop
cmc
jp
pop
push
lods
movsb
cwtl
adc
xchg
in
adc
test
fwait
lret
sub
cmpb
push
lahf
mov
jle
sti
mov
cmpsb
cmc
lret
dec
and
in
and
or
pop
xor
inc
inc
sub
pop
lcall
mov
stc
lods
mov
cld
sbb
or
add
pushf
dec
sub
js,pn
mov
loop
outsl
mov
mov
sarl
dec
xor
inc
not
sub
cmp
sbb
ljmp
xchg
adc
in
setne
fwait
inc
dec
pop
push
sub
inc
mov
aaa
or
dec
adc
pushf
or
nop
jecxz
xor
in
movsb
pushf
jno
and
cmpsl
dec
push
fsts
adc
fdiv
pop
mov
popa
dec
cs
xchg
fsubl
lods
sbb
shll
icebp
cmp
cmp
xchg
rcll
xchg
adc
out
jg
fwait
imul
pop
je
loope
bound
add
sub
jbe
movsl
sbb
enter
pusha
xor
and
sahf
std
xchg
fnstcw
jae
int
sbb
outsb
stos
ret
xchg
popa
adc
arpl
mov
out
sub
idivl
aaa
dec
cmp
subb
xor
push
pop
cld
call
hlt
ret
xchg
aad
lods
cmpb
xchg
out
and
and
lock
test
mov
lcall
mul
and
stc
in
add
jne
xchg
aam
xchg
or
dec
mov
out
mov
insb
ss
xlat
out
xor
shl
mov
ds
sti
cmpsl
lahf
arpl
cmp
test
adc
mov
dec
mov
jle
add
cmp
enter
sub
push
push
fldt
dec
add
jge
movsl
sub
push
cmpsl
jnp
jbe
imul
jb
sbb
mov
outsl
test
pushf
and
or
fstps
cld
cmp
or
jns
nop
dec
out
fwait
mov
push
jmp
xchg
or
adc
pop
adc
pop
inc
xlat
cltd
dec
pop
hlt
cmp
adc
into
rolb
cmp
sub
in
adc
call
sbb
out
and
mov
jecxz
mov
mov
xchg
cmpsb
dec
out
mov
push
fcmovnu
cli
sbbl
inc
dec
mov
adc
mov
and
imul
sub
ret
outsb
scas
or
out
icebp
aad
mov
push
js
mov
adc
jae
addr16
inc
outsb
pop
fcomi
cmpb
mov
lahf
dec
jl
je
sub
fbld
out
adc
arpl
call
popf
cltd
inc
sbb
mov
psllw
mov
fs
leave
pop
jg
mov
inc
sub
out
jne
nop
dec
mov
xlat
or
push
rorb
sub
push
jo
adc
or
mov
sbb
dec
pop
mov
and
sbb
xchg
lods
sub
jnp
scas
les
inc
mov
mov
cmp
loope
push
out
cmp
add
bound
loope
fisubl
mov
dec
aam
xchg
push
sub
inc
or
test
jecxz
nop
inc
dec
lahf
lahf
adc
mov
sbb
fsubl
negl
xchg
bound
aas
out
add
ss
sbb
je
mov
adc
sub
mov
scas
mov
pop
icebp
fildl
cltd
enter
js
out
fstl
js
popa
cmp
fnstcw
insb
decl
xchg
mov
inc
aaa
fidivs
rcl
inc
out
add
mov
pop
or
orl
mov
push
pop
jle
inc
sub
mov
or
adc
pop
clc
cwtl
xchg
lcall
ljmp
roll
sub
mov
pop
push
inc
jg
adc
push
arpl
and
push
in
decb
les
sub
dec
inc
fisubrs
mov
add
scas
or
das
lods
adc
loopne
pop
daa
stos
add
lret
shlb
in
jbe
packssdw
cld
sub
imul
iret
mov
inc
cmp
xor
mov
mov
jmp
pop
iret
push
xor
out
pop
sbb
sub
jmp
daa
adc
xchg
lahf
test
outsb
dec
js
arpl
int
popf
data16
pushf
mov
inc
jae
xor
sbb
icebp
xor
jnp
xor
daa
repz
adc
mov
mov
inc
lret
dec
or
jne
jmp
je
sbb
lahf
fdivs
push
lods
inc
push
lock
ljmp
mov
sbb
mov
iret
mov
mov
pop
notl
nop
mov
imul
push
jns
mov
cmp
pop
shrb
jmp
iret
xor
mov
nop
fistpll
and
fs
popa
mov
sbb
cmp
push
loope
in
push
dec
int3
aad
repnz
int3
mov
push
lret
mov
mov
arpl
push
mov
dec
dec
hlt
lods
hlt
jo
aad
xor
add
dec
lock
fstpl
mov
test
cli
test
lret
pop
aaa
ficomps
inc
in
jns
insl
adc
sbb
into
mov
stos
imul
adc
stc
cld
mov
and
push
ja
dec
xchg
mov
js
fmulp
mov
sub
or
push
test
lods
lds
mov
daa
fadd
aas
xchg
out
cmpsl
inc
les
test
cmp
test
mov
movsb
mov
xor
stos
jbe
cmp
fcomps
inc
push
stos
imul
jbe
xchg
and
dec
call
loopne
sub
mov
unpcklps
ja
push
xlat
push
fadds
dec
ret
lcall
mov
or
push
dec
and
inc
aam
call
in
stc
cmp
int
clc
sub
sti
push
add
aad
mov
mov
cwtl
jp
jp
and
mov
iret
ss
js
xchg
cmpsb
stos
inc
sahf
push
fcompl
lock
adc
leave
jne
test
dec
adc
scas
lahf
insb
out
fldenv
jbe
mov
xor
clc
push
cld
jno
sub
mov
popf
ljmp
stos
xlat
mov
test
fadds
push
out
and
and
mov
cwtl
add
sbb
jnp
daa
aaa
xor
adc
jge
pop
in
test
dec
cmp
cwtl
cltd
pop
or
push
test
out
cmp
cmp
movaps
ljmp
out
pop
pushf
imul
inc
mov
repz
xor
xchg
adc
mov
inc
xchg
int3
mov
push
scas
inc
cld
push
sub
cmp
lock
adc
stos
stos
arpl
into
xchg
pop
cld
aas
and
cmp
or
imul
enter
xchg
fisubrs
xor
and
nop
jbe
shll
enter
pop
or
mov
adc
mov
stc
sbb
fidivrs
add
pop
cmp
add
sarb
out
cwtl
inc
pop
mov
lret
shlb
mov
lret
mov
ret
xchg
ret
jnp
notl
mov
sub
jb
pop
pop
test
adc
inc
xchg
stos
xor
outsb
mov
xor
inc
ja
xchg
adc
dec
sub
call
or
pop
sub
call
push
dec
stos
lock
jge
scas
adc
and
int3
in
mov
add
arpl
in
fisubrs
cmp
mov
jno
gs
mov
jns
sti
lret
shlb
jle
inc
cwtl
imul
lret
aad
mov
inc
pop
xchg
inc
jl
pop
push
iret
iret
add
lds
cmpsb
scas
lcall
mov
pop
leave
adc
mov
sub
sub
pop
or
xor
cld
clc
roll
inc
add
mov
add
add
xchg
daa
jg
sbb
in
mov
push
xchg
mov
push
push
mov
outsl
or
push
mov
xchg
outsb
adc
or
mov
or
push
xchg
inc
rorl
mov
lret
shlb
test
push
cld
test
scas
or
dec
jp
adc
pop
dec
or
xor
jecxz
inc
int3
and
in
popl
sbb
ja
dec
fildll
hlt
leave
dec
fstpl
xchg
mov
leave
mov
xor
lret
or
stos
dec
imul
mov
adc
inc
divb
aaa
mov
xchg
cli
sub
xchg
add
imul
scas
mov
push
add
daa
xor
dec
ficoms
aam
add
mov
clc
into
out
push
pushf
jae
shll
jne
repz
lds
cmc
ret
mov
js
int
jl
fcomps
or
loopne
jo
dec
cmc
inc
jle
popa
jle
testl
jne
lods
xchg
sub
sub
dec
in
fs
add
popf
push
push
xor
mov
mov
sub
data16
mov
lds
pop
dec
ja
loopne
xor
mov
or
lret
cli
push
in
stc
mov
cwtl
adc
xchg
mov
adc
cld
rol
xchg
sahf
pop
out
out
hlt
mov
mov
cmp
pop
mov
inc
pushf
pop
and
dec
dec
xchg
cli
daa
nop
out
push
loop
push
dec
add
mov
pop
add
mov
push
out
dec
inc
cli
xchg
jl
roll
lcall
test
sbb
imul
rorl
lret
lods
pop
sarl
fcoml
pop
outsl
cmp
fiaddl
je
js
pop
lcall
cmpsl
add
push
fildl
xor
mov
inc
daa
and
frstor
sbb
rsm
lcall
mov
aaa
jb
push
clc
push
xor
push
mov
push
jb
adc
mov
inc
cmp
jae
jl
mov
xchg
int
jbe
jnp
xor
outsb
jo
add
xor
jbe
cwtl
fsubr
ret
out
in
stos
mov
int
adc
mov
dec
dec
sub
gs
sbb
hlt
les
loopne
nop
inc
sbb
or
dec
mov
or
xor
dec
cmpsb
int3
loop
dec
cmpsl
mov
pop
test
fwait
adc
push
cmpsb
sub
mov
and
aam
adc
mov
or
mov
inc
out
xor
inc
and
imulb
and
pushf
lea
add
scas
sbb
inc
mov
jp
es
push
jmp
enter
adc
mov
sbb
push
stos
ficompl
movsl
adc
adc
stc
and
mov
sub
sbb
jb
pop
mov
lcall
xchg
cli
lods
adc
aaa
mov
pusha
dec
cs
lahf
out
add
fisubs
sbb
shlb
or
dec
pop
loopne
lcall
and
movsl
repz
negl
and
imul
push
int3
popa
mov
in
mov
add
arpl
ja,pn
xchg
ja
mov
xor
mov
fwait
daa
ret
jmp
iret
addl
adc
dec
mov
stos
fldt
shrb
lcall
pop
push
and
movl
add
mov
and
inc
dec
adc
jmp
push
jp
mov
and
or
push
out
out
inc
popf
icebp
dec
pop
daa
les
cmpsl
push
pop
lret
adc
xor
lods
cmp
sbb
mov
or
push
xchg
xchg
int
popa
xchg
jmp
fstps
dec
dec
or
out
mov
inc
or
nop
jns
in
jb
xchg
push
xchg
sub
cmc
add
adc
sub
xchg
mov
pop
cmc
jns
popf
jne
or
mov
jnp
in
sub
lock
jmp
dec
icebp
sub
fcos
cmp
in
xchg
mov
xchg
xchg
mov
lret
cmp
adc
aad
mov
pop
mov
push
sbb
jnp
out
lret
repnz
pop
jle
inc
aad
pop
jg
pop
sti
push
pop
ja
pop
cmp
fcmove
in
mov
imul
ss
int
mov
sti
stos
cltd
out
clc
xor
push
jns
xor
mov
pop
shrb
es
sub
xchg
adc
lock
and
in
xchg
sub
popf
jg
popa
sbb
jmp
andb
or
andl
inc
push
rclb
or
sbb
dec
push
nop
xor
adc
clc
xchg
nop
mov
add
pusha
xor
shrb
or
push
mov
and
stos
enter
jmp
sahf
add
adc
insb
ret
icebp
add
add
test
mov
cmp
js
lret
fwait
out
js
jp
addr16
and
lock
xor
sbb
push
mov
pop
cltd
pop
or
adcb
fmul
mov
xor
jle
mov
mov
jmp
mov
adc
mov
mov
cmpl
cld
fsubl
shll
jmp
mov
adc
and
jl
loope
adc
loopne
mov
mov
dec
icebp
sbb
mov
sub
jecxz
or
cmpb
into
aas
cmp
add
jno
jge
mov
and
inc
pop
xchg
loop
dec
scas
ljmp
xchg
les
xchg
scas
xor
pop
sub
inc
jecxz
sub
inc
cmp
jl
loopne
push
cmp
test
pop
push
sbb
mov
push
daa
cmp
inc
xchg
pop
and
aaa
orl
xchg
and
dec
ss
imul
sub
push
popw
insl
data16
jmp
sub
jle
shr
adcb
pop
push
jno
movsb
mov
loopne
loop
aam
push
sub
js
pop
inc
imul
sbb
testl
mov
rolb
or
add
pop
dec
loopne
aad
mov
jp
mov
mov
push
push
fisubrl
icebp
dec
and
cld
jle
jo
add
cmp
xchg
stc
jno
mov
pusha
add
xor
or
jbe
inc
gs
call
mov
movsl
cmpsl
mov
sub
cmc
movl
stc
stos
mov
add
cmc
adc
movsl
sbb
pop
sbb
icebp
out
mov
insb
sbb
push
xchg
add
jecxz
pop
xchg
cltd
lds
out
lock
adc
psubsb
xchg
sbb
mov
out
insl
loopne
sbb
out
addr16
fmull
add
jl
mov
sub
push
out
out
jmp
pusha
or
push
mov
nop
sub
push
sbb
in
sub
outsl
fs
mov
lcall
inc
jno
jae
imul
shrl
mov
js
popa
outsl
fnstcw
adc
dec
fiadds
imul
shrb
pop
int3
sti
xor
push
pop
inc
sbbb
imul
sbb
push
mov
psubusb
outsl
cmc
cs
xor
fiaddl
push
adc
sbb
sbb
rolb
icebp
dec
sub
xchg
push
dec
mov
popa
sbb
mov
cmp
out
hlt
add
js
out
js
dec
adc
mov
push
adc
int
pop
call
mov
stos
jge
cmp
loop
decb
iret
dec
sub
insl
jle
pop
push
bound
xor
sub
imul
test
fisttps
lods
sbb
pop
push
xchg
push
and
mov
insl
push
shrb
cld
fs
add
push
stos
sub
lret
sahf
les
xchg
pop
or
xor
ljmp
pop
and
in
inc
sti
jl
hlt
add
sbb
fisubrl
fisubrl
cwtl
lret
xchg
cld
sbb
mov
pop
fs
lock
sbb
inc
mov
in
out
pusha
ds
fcmovne
rcr
jl
rolb
es
add
inc
adc
mov
xor
push
jae
xchg
xor
xlat
mov
sbb
lods
adc
or
cwtl
cmp
pop
sub
cmp
imulb
mov
push
mov
cs
add
xor
adc
or
mov
popf
add
lds
pop
sub
sbb
imul
and
cmp
mov
loope
push
lods
icebp
mov
test
mov
in
ret
adc
jge
jne
movsl
or
jmp
ja
push
xchg
dec
dec
pop
and
lods
inc
jecxz
cmpsl
rcll
xor
ret
popa
inc
and
adc
fnsave
out
mov
pop
mov
inc
push
mov
dec
aad
pop
adc
mov
mov
ss
pop
shll
nop
inc
xchg
mov
es
cld
fwait
lds
jns
inc
fcoms
inc
into
sti
lret
inc
inc
pop
mov
sarb
add
int3
fucomp
mov
dec
push
sbb
test
repz
lret
xor
cmpsb
or
mov
and
push
rcll
int3
frstor
movsbl
inc
jbe
pop
adc
sbb
and
adc
or
pop
les
mov
pop
shll
lcall
ds
lods
cwtl
pop
xchg
mov
enter
je,pn
pop
pop
jg
loopne
push
pushf
push
xchg
insb
mov
cld
or
pop
pushf
push
rcll
js
cmp
mov
adc
add
push
push
add
or
mov
dec
sbb
add
inc
mov
testl
in
je
sar
adc
lret
xchg
out
lret
lea
rclb
mov
and
icebp
push
pop
push
fmulp
rcll
xchg
lcall
push
dec
loop
and
adc
mov
inc
xchg
sahf
ljmp
iret
outsb
movsl
or
mov
jns
or
ficomps
test
push
push
iret
sub
hlt
dec
cmp
pushf
push
dec
mov
stc
repz
mov
xlat
test
jno
vrsqrtss
mov
xchg
test
pop
imul
jb
popf
push
enter
and
cwtl
test
and
call
stc
clc
adc
cmp
daa
pop
cmp
ret
jmp
outsl
mov
testb
jnp
jge
xor
pop
shr
stos
jo
cmp
shll
cmpsb
jbe
sbbl
adc
mov
fdivs
and
or
mov
movb
cmpsb
loope
pop
in
inc
add
jg
jg
clc
movsl
cmp
popf
lcall
in
add
lds
scas
lods
xchg
sbb
and
xchg
lret
dec
cmpsb
pop
adc
sub
xchg
das
fistps
lods
popf
repnz
sbb
imul
mov
sbb
leave
and
mov
sbb
in
add
xor
jmp
or
ror
je
loope
aad
mov
dec
in
fcmovbe
js
xchg
dec
mov
jmp
cld
xorl
pop
and
imul
xchg
add
pop
jp
cmp
fildl
and
sub
mov
cwtl
cmp
mov
lock
data16
orb
cli
into
lds
and
mov
push
cmp
out
xlat
loope
and
negb
cmp
pop
ja
pushf
mov
imul
pop
sbb
scas
sub
sbb
loope,pn
inc
sub
add
test
aaa
repz
and
or
cs
jmp
cmp
je
push
pop
shll
mov
ljmp
jae
inc
out
mov
ficoms
add
jns
push
xor
push
jge
pusha
sbb
or
add
mov
loop
ret
add
je
inc
or
cmp
cmpsl
icebp
rorb
jne
shlb
pop
scas
fwait
cmp
int
out
outsl
test
shll
jnp
inc
xchg
xor
xor
inc
inc
or
filds
outsb
mov
dec
mov
fbld
sub
and
ja
or
cmc
popa
in
mov
push
mov
mulb
jge
test
outsl
sub
addr16
cs
mov
jl
pop
mov
loop
cld
jl
daa
jp
out
fs
or
lea
stc
xchg
xchg
xor
call
cltd
jo
sbb
cmpsb
fldl
mov
int3
in
cld
xor
push
or
les
sbb
pushf
pop
test
mov
mov
lret
inc
mov
and
sbb
jbe
and
cltd
sbb
adc
xor
push
dec
xchg
lcall
popa
rclb
clc
enter
sti
adc
xor
cs
adc
inc
mov
dec
movsl
or
das
dec
push
push
mov
cmp
shll
scas
add
popa
stos
div
std
leave
cmp
mov
pop
jmp
in
ljmp
dec
out
dec
push
sub
test
loopne
push
lret
push
mov
out
divb
xor
add
and
sub
loope
test
pop
or
and
mov
mov
fstpl
insb
fisttpl
imul
mov
xchg
xor
add
mov
cmpsb
jecxz
push
inc
jecxz
gs
and
adc
subl
cwtl
push
out
cld
incl
in
cmpsb
xor
ret
popf
fptan
mov
cltd
inc
xlat
mov
cli
adc
sbb
stc
inc
stos
add
pop
xchg
add
xchg
in
cwtl
testb
insl
dec
adc
rcrl
add
cld
out
cmp
repnz
or
dec
out
daa
loope
lods
stos
push
mov
stos
cmp
addr16
xorb
scas
sub
pop
adc
repnz
inc
sahf
xor
adc
mov
es
mov
and
mov
stc
mov
ss
fadd
into
into
adc
jp
push
aam
mov
dec
inc
cld
or
sbb
stos
fisttpl
or
add
pop
fdivrs
mov
xor
add
add
das
fcoms
fwait
push
and
cmpb
pop
push
cmpsb
enter
and
mov
lcall
gs
dec
sub
insl
jg
adc
inc
loopne
pushf
dec
sbb
mov
jnp
in
leave
jl
mov
dec
ror
dec
pop
jge
pop
in
push
lahf
jecxz
pop
inc
dec
ret
mov
cwtl
stos
in
or
and
mov
mov
add
lock
xor
adc
int3
js
pop
add
push
push
icebp
in
pushf
mov
xchg
cld
fs
data16
sbb
cli
scas
lods
call
push
mov
lock
jno
dec
mov
std
daa
je
mov
fildl
fsubl
insl
jp
sbb
and
jge
std
and
sub
xor
test
sub
mov
pop
int
data16
insl
push
sub
into
test
fnstsw
inc
call
push
jne
in
lret
test
cs
out
movsb
adc
loopne
out
xlat
movsl
cmpsl
daa
sbb
addr16
dec
jnp
or
scas
pushf
add
adc
dec
in
mov
push
jns
js
mov
xor
loopne
cmp
daa
mov
fld
clc
mov
scas
cmpl
or
ljmp
test
cmp
add
pop
mov
mov
into
mov
int
mov
push
inc
jp
xchg
cs
enter
mov
shll
add
push
or
xor
push
adc
pop
fidivs
jmp
setns
je
mov
clc
mov
test
or
sub
push
int
into
mov
jmp
dec
mov
jns
pop
dec
mov
into
addl
leave
or
inc
stos
loope
and
push
mov
cmp
mov
sbb
shl
cmp
lret
pop
jecxz
rclb
addr16
sar
mov
mov
stos
lret
inc
cld
lcall
pop
insb
inc
cwtl
stos
ret
mov
leave
inc
in
ret
lahf
out
mov
movsl
and
cmp
lahf
xor
out
cli
sbb
adc
jp
jno
mov
cltd
out
or
jo
in
mov
or
in
inc
rcll
and
jne
cmp
dec
mov
xor
jg
adc
jp
hlt
dec
ret
in
shrl
rcll
cmp
mov
xor
lret
and
jae
add
mov
inc
mov
test
xor
push
sbb
pop
push
add
and
leave
call
jp
mov
jmp
popf
ret
jg
mov
call
sub
sub
rcll
adcb
out
mov
cmpsb
xor
add
xor
shrl
jae
or
mov
xchg
push
test
mov
mov
negb
inc
add
hlt
adc
hlt
bound
pop
cli
es
or
outsl
out
mov
fmuls
out
adc
jbe
in
mov
in
and
ds
sti
repnz
push
cmp
in
dec
testl
mov
adc
enter
push
rol
stc
pop
mov
out
xchg
add
out
aad
or
inc
stc
fadds
pushf
movsb
in
data16
enter
rclb
xchg
ret
inc
popf
aas
mov
daa
add
push
divb
decl
mov
addr16
mov
loop
cmovno
push
addr16
jo
out
push
dec
mov
stos
imulb
pop
sar
mov
lcall
xor
mov
test
js
pop
mov
sub
sarb
sub
push
and
lret
cltd
insl
lret
sbb
dec
je
inc
repnz
pushf
pop
out
mov
pusha
rcl
fcmovnb
mov
aad
les
test
push
mov
xchg
das
ffreep
insb
jo
enter
stos
mov
and
gs
hlt
sub
add
mov
jg
test
jmp
jl
cmp
scas
mov
jge
pusha
push
jp
fiadds
mov
data16
mov
pop
int
cmp
inc
mov
lret
aad
dec
push
fmull
fldt
jns
or
test
cmc
addr16
hlt
jno
insl
pop
add
jecxz
sub
mov
adc
cmpsl
bound
loope
cmpsl
lcall
hlt
clc
lds
pop
rol
mov
jnp
add
ds
fs
jmp
inc
cmpl
loop
pop
jb
pushf
inc
les
push
rorb
add
xchg
xchg
test
negb
and
das
cmp
scas
jecxz
xor
push
push
stos
jmp
int3
push
mov
and
es
and
fbstp
jo
and
push
and
sar
stos
xchg
mov
inc
arpl
push
or
and
mov
lcall
cmpsl
pop
adc
jecxz
out
jecxz
mov
insl
cmp
dec
jne
sbb
stos
les
xchg
rol
out
inc
pop
push
push
iret
xchg
cs
mov
pop
xchg
out
or
mov
and
pop
push
ret
jb
push
xlat
mov
andb
or
stc
std
outsl
stc
cltd
and
add
adc
push
loop
fs
pusha
cld
pop
inc
pop
dec
cs
push
outsb
into
in
bound
sub
cwtl
imul
daa
jp
adc
rcrb
adc
pop
jnp
mov
mov
inc
es
ret
mov
daa
aas
and
mov
inc
in
add
adc
xchg
mov
js
jbe
jecxz
or
clc
cmp
sub
mov
fistpll
pusha
inc
cld
clc
add
mov
mov
xor
pushf
or
xor
jne
std
push
imul
push
stc
test
imul
add
ss
cli
jne
shll
xor
and
mov
cvtps2pd
cltd
sahf
clc
insl
shlb
mov
or
or
and
addr16
je
leave
and
xor
shr
arpl
negl
push
xchg
test
cmp
xor
cmp
dec
adc
cmp
test
pop
jg
xorb
repnz
stc
loopne
stc
jcxz
adc
jno
cmc
stos
xlat
insl
cmp
push
mov
mov
sub
adc
pusha
out
mov
mov
sahf
or
mov
stc
xchg
das
cmpsb
push
cmpb
xor
lret
in
pop
fildll
inc
push
xchg
rcr
mov
fstl
pop
mov
sub
loop
sar
sbbb
or
test
sub
icebp
or
cmp
pop
incl
mov
testl
dec
xor
pop
jl
xchg
jle
out
ficomps
outsl
rcrl
inc
test
loope
out
xlat
mov
cmp
mov
fiaddl
add
mov
out
das
adc
stos
mov
inc
or
xor
mov
sahf
bound
xchg
push
daa
and
sti
fsubrl
arpl
dec
push
jp
lcall
cmp
mov
loope
bound
jmp
out
jp
pusha
jo
inc
enter
pop
cltd
fsubrs
ljmp
dec
cmp
mov
rcrl
faddp
stos
push
cmp
cld
gs
jle
decb
dec
nop
paddusb
and
push
shl
aam
xor
adc
add
xor
mov
lods
stos
mov
lods
push
push
push
int
aam
aaa
push
mov
push
jo
xchg
in
push
and
sbb
mov
mov
pop
mov
stos
dec
sub
js
mov
mov
xchg
xor
mov
mov
cmp
sub
pop
mov
out
loopne
jge
arpl
hlt
aaa
add
or
shlb
jne
fs
cld
icebp
fwait
lea
mov
adc
push
and
sbb
repnz
scas
fwait
inc
inc
pop
aas
dec
shll
pop
xor
sub
mov
cmp
fstps
adc
inc
les
dec
movsb
mov
xor
movsl
out
mov
roll
pushf
sarb
xchg
dec
lea
out
cmp
mov
daa
test
mov
mov
xchg
sub
sub
test
cs
jo
inc
dec
movsb
ds
aad
fadd
lret
add
jge
and
mov
dec
aaa
lea
std
adc
daa
mov
repz
out
sbbb
jno
cld
jne
mov
mov
insb
mov
jg
lock
inc
pop
repz
push
jp
dec
pop
aas
into
loopne
and
aas
inc
aas
push
sub
sarl
ja
sbb
arpl
mov
rcrb
mov
and
jbe
hlt
cltd
je
and
stc
sub
sbb
cli
inc
pop
cwtl
sbb
fimull
sub
into
xor
movsb
mov
outsl
iret
adc
adc
cmpsl
and
inc
pop
jp
pop
mov
divb
outsb
inc
cld
scas
popa
sub
fstpl
lea
iret
test
adc
orb
sbb
fsts
mov
sub
lock
xor
popa
pop
mov
sbb
imul
add
sbb
cmpsb
xor
fildll
inc
stos
push
xchg
inc
sbb
aas
adc
ds
add
inc
mov
ss
xchg
dec
pop
jg
xchg
mov
mov
sbb
mov
push
mov
imul
pop
aam
xchg
scas
dec
lret
xchg
mov
scas
push
sub
lret
fs
sbb
stos
scas
inc
and
cmp
call
fisubrl
add
push
es
xlat
jp
xor
add
cmp
push
mov
lock
scas
orl
fnstcw
pop
pop
xor
testl
sti
lret
mov
lahf
xchg
pusha
dec
dec
and
inc
pop
jne
add
jne
xchg
shr
dec
add
and
test
in
lahf
mov
sub
jae
sub
push
or
ss
sahf
xchg
jg
scas
data16
clc
aam
push
and
push
je
jbe
in
inc
ret
test
mov
mov
push
xchg
nop
push
test
int3
pop
cmp
dec
lea
in
in
nop
fwait
and
jecxz
or
push
push
fnstenv
and
sbb
enter
in
dec
mov
movsl
arpl
mov
decb
pop
pop
mov
jmp
js
jo
roll
shlb
cmp
jecxz
dec
lret
fnstenv
in
dec
enter
dec
mov
js
mov
inc
test
sub
xor
adc
cmp
add
scas
push
jmp
dec
in
and
push
pop
or
xchg
cmp
sub
shll
les
push
dec
loopne
mov
push
xchg
imull
xchg
pop
pop
mov
aaa
sub
jmp
and
sub
lcall
rclb
aam
test
ja
jecxz
xchg
mov
jno
jns
add
dec
lret
fcmovbe
mov
add
push
jno
mov
icebp
sub
adc
adc
addr16
inc
xchg
int
mov
movsb
iret
xchg
xchg
push
push
rcl
and
call
or
cs
pusha
call
out
popa
sti
cmpsl
into
loop
pop
fwait
xlat
ja
sbb
fnop
iret
pop
inc
pushf
enter
rcll
fucomip
hlt
mov
mov
mov
js
push
pusha
rcl
mov
dec
pop
or
and
push
fsubr
mov
jb
dec
test
int3
daa
or
pop
fimull
dec
lds
jle
out
xchg
cmp
lods
stos
cs
xchg
xor
pusha
xchg
lock
mov
mov
inc
sub
sub
cmp
sar
xor
daa
jg
cwtl
and
and
ss
dec
js
fcomps
hlt
sahf
and
jge
mov
loop
testl
ret
int
test
xchg
outsl
lcall
fs
aad
leave
jnp
repz
or
dec
pushl
jmp
int3
xchg
andb
fmull
sbb
cmpsb
imul
test
push
call
mov
cld
mov
mov
pop
rclb
and
pop
fldenv
jnp
dec
inc
les
push
mov
mov
mov
popf
dec
sub
or
jp
and
xor
mov
dec
inc
sbb
jecxz
popf
sarl
xor
fcompl
xchg
pop
nop
fimull
and
fistps
mov
movsl
insb
mov
stos
movl
aaa
mov
jmp
inc
sub
jle
and
out
int
push
cmp
adc
xor
inc
and
or
xchg
test
stos
sub
fstl
cmp
cmp
jb
add
loopne
sub
pop
nop
addb
pop
sub
ja
sub
adc
cmp
and
std
aam
pop
sub
mov
push
ficompl
xchg
xchg
add
stos
pusha
outsl
mov
mov
hlt
mov
icebp
std
lods
je
test
push
gs
repz
mov
inc
or
cli
enter
inc
and
lcall
xorps
dec
or
mov
ss
int
mov
cmp
jle
insb
add
cltd
fdivp
dec
cltd
or
push
jmp
fsubs
sub
or
cmp
sbb
and
lcall
lock
xchg
add
sub
xor
jb
movsb
pop
cmp
mov
lods
iret
dec
scas
inc
push
push
mov
jg
inc
in
imul
sub
fs
or
jb
inc
lahf
les
sub
dec
or
cwtl
mov
nop
sub
nop
xchg
jge
jns
pop
call
popa
mov
fldcw
mov
lret
push
sbb
add
out
ss
xchg
jo
mov
and
ss
cld
pusha
fiadds
mov
lock
mov
mov
mov
addr16
stos
pop
sub
repnz
out
out
xor
xchg
jg
enter
add
ja
std
mov
push
mov
jb
aaa
fidivs
and
stos
mov
ret
shll
add
pushf
lret
xor
fsubl
orl
fxch
mov
int
fiadds
or
inc
test
ret
mov
xchg
fbstp
pop
arpl
push
adc
ds
add
add
iret
sub
ja
ljmp
outsl
in
notb
fnstenv
jnp
mov
outsb
pop
mov
or
push
pop
jmp
dec
cs
jge
pop
mov
xchg
inc
cmp
push
xchg
jge
sub
stos
ficompl
out
hlt
inc
into
jl
mov
jno
lds
adc
inc
pop
mov
push
int3
mov
jno
fwait
mov
xor
iret
jp
pusha
cld
and
sub
data16
mov
lds
cmpb
fadds
mov
push
pop
jno
pop
sub
fcmovu
sti
sbb
mov
leave
ss
cmp
fistl
add
jne
iret
outsl
sbb
adc
xlat
sbb
dec
enter
popf
sbb
icebp
dec
add
ret
repz
out
cmpsb
cs
test
mov
mov
add
xchg
outsb
dec
sbb
ds
lea
push
in
sar
mov
pop
sbb
ret
mov
jecxz
sbb
push
aam
std
mov
mov
mov
sbb
xlat
lret
stos
mov
nop
and
stos
xchg
popl
cmpsl
int3
repz
and
movsb
pop
jnp
sub
sub
jecxz
push
fs
and
push
push
mov
xor
clc
pop
jnp
imul
jb
cmp
lods
add
fnstenv
icebp
ja
test
mov
lahf
dec
push
mov
fimuls
rol
xor
jl
cwtl
stos
inc
call
test
or
mov
adc
aad
jl
popf
push
loope
adc
pusha
mov
ret
sbb
rorb
movl
xchg
lret
push
mov
jns
ret
push
mov
jle
clc
aam
out
push
fidivrl
xor
xor
icebp
xlat
jge
inc
int3
cmpsl
icebp
push
pop
push
lods
dec
xor
movsb
popf
and
xchg
xor
cltd
push
outsb
mov
out
add
push
daa
lahf
or
or
sarl
cld
lock
dec
rorl
push
xlat
pop
inc
push
push
subl
dec
cwtl
mov
test
divl
pushf
hlt
jns
pop
mov
loopne
xor
int3
pushl
arpl
adc
push
mov
adc
and
pushf
push
movsb
mov
xchg
sbb
scas
sub
cmp
mov
pop
sub
sarb
pop
pop
push
sub
fwait
lcall
sub
ss
movsl
aam
out
and
mov
jno
xor
jb
lcall
lea
or
and
dec
jl
fs
or
shll
lcall
mov
mov
and
jns
cld
mov
jbe
adc
in
pushf
cld
xor
or
add
push
add
jp
loop
data16
in
shlb
insl
outsl
inc
pop
xor
aad
sbb
dec
dec
and
jbe
and
add
repz
cmp
in
lds
aam
lret
xor
mov
xchg
jno
or
lods
iret
jns
xor
add
mov
scas
hlt
fdivr
inc
add
jge
test
pop
xor
adc
push
dec
test
push
rcl
mov
cli
outsl
xchg
and
push
xchg
pop
addr16
sbb
lds
test
pop
push
les
add
jmp
js
sub
adc
jb
scas
es
imull
sbb
add
insl
xchg
ret
cmpb
repnz
decl
lcall
arpl
cli
mov
dec
sar
sub
pop
adc
lret
sub
push
repnz
in
ret
frstor
jg
flds
jae
leave
mov
xlat
cs
movsb
scas
fstl
into
insl
daa
and
mov
enter
stc
xchg
push
mov
iret
clc
mov
xchg
fnstsw
outsb
cmp
jne
loop
add
icebp
or
rcrl
mov
or
xor
sub
dec
stos
fmuls
clc
pop
adc
stos
mov
or
mov
jnp
aad
xor
mov
inc
jns,pn
loope
cltd
ja
dec
daa
mov
push
push
clc
mov
es
mov
push
cmp
add
mov
adc
jl
cwtl
adc
aaa
je
push
imul
cmp
ret
or
ficoml
jnp
add
rcll
xchg
insb
test
movsb
xor
push
inc
push
sub
push
lcall
sahf
cmp
int
bound
and
pop
mov
pop
cmp
lds
mov
shrl
mov
divb
xor
ror
pop
push
cs
add
dec
jge
jb
movsb
inc
nop
fwait
push
and
repz
xchg
insb
mov
mov
fbld
mov
mov
inc
add
inc
pusha
jge
sbb
por
sbb
dec
dec
push
pop
xchg
dec
xlat
or
das
ret
sbb
out
cmp
aas
dec
add
jne
mov
lcall
add
test
adc
ja
xor
add
xlat
cltd
dec
gs
add
jmp
inc
xlat
dec
adc
cmp
cmp
orl
mov
adc
pop
xchg
repnz
mov
ja
popf
mov
adc
sbb
or
adc
test
stos
push
pushf
pop
test
in
arpl
pop
and
inc
mov
not
lret
sbb
into
aam
add
aad
call
adc
cld
add
xor
pop
inc
in
pop
sub
or
je
outsb
loop
lea
or
insl
mov
or
and
sub
imul
mov
xor
mov
scas
xchg
aad
or
arpl
mov
sub
mov
arpl
insl
fs
add
sbb
mov
and
sub
push
adc
sub
in
add
xor
rcl
mov
push
test
mov
sbb
loop
std
lcall
mov
cmp
in
mov
gs
and
int3
ss
scas
loope
fs
and
sbb
js
adc
pop
push
mov
ljmp
leave
mulb
ljmp
or
xor
insl
dec
inc
pushf
lcall
fistps
addr16
ja
xchg
mov
jg
ret
imul
test
pop
out
jbe
cmp
mov
std
lds
push
fmuls
outsl
inc
xchg
inc
repnz
into
adc
add
ret
sub
imul
inc
mov
pop
xchg
push
pushf
jle
in
xor
push
pop
arpl
or
repz
int
aad
xchg
or
cmpb
jecxz
imul
xor
dec
sbb
inc
push
sbb
ficoms
pop
push
movsl
jl
dec
pop
xor
imul
xchg
mov
out
mov
shlb
mov
sbbl
mov
rcll
movsl
aam
leave
xlat
aad
jle
call
pop
xor
lea
rol
mov
mov
aaa
cmp
dec
test
les
sub
jne
clc
inc
scas
in
dec
subl
xlat
xbegin
fwait
andl
mov
scas
xchg
out
out
int3
inc
call
ss
adc
push
or
xorl
jge
mov
shl
and
jno
push
aad
inc
pop
daa
das
nop
mov
dec
sbb
sub
lret
pop
test
out
lea
fwait
push
int
ja
xor
fistl
add
add
or
call
push
mov
xorl
add
or
mov
lock
out
inc
mov
pop
cld
negl
out
sub
outsb
ret
cmp
inc
out
mov
sbb
jmp
mov
inc
pop
int3
mov
pop
movsl
repz
pop
sub
sub
test
pop
xchg
xor
lock
dec
das
call
cmpsl
xchg
or
stc
sub
add
sbb
arpl
mov
out
bound
push
fwait
clc
mov
into
mov
sbb
sbb
jg
cmp
stos
icebp
scas
pushf
sub
push
mov
in
mov
push
jns
mov
push
xor
mov
ret
jno
sbb
popf
ss
sbb
fwait
nop
insb
adc
mov
mov
jb
dec
leave
xor
xor
addr16
std
xor
lods
je
sahf
data16
popf
cltd
cmp
mov
cmp
mov
repz
pop
mov
in
mov
out
insl
pop
dec
push
leave
cs
testl
jmp
daa
xchg
pop
cmpsb
popf
lds
movsb
add
jnp
add
mov
adc
mov
cmp
call
mov
into
iret
lret
popf
lods
mov
cmp
sbb
out
imul
gs
inc
outsl
pop
dec
and
enter
xchg
jns
adcl
fwait
dec
dec
dec
mov
sub
cwtl
cmc
insl
and
fldt
inc
dec
xchg
mov
or
sub
xor
in
or
cld
mov
mov
rolb
add
push
lret
int
and
xor
adc
sbb
out
in
shll
or
fldl
imul
nop
sahf
adc
cmp
dec
jns
std
fidivrs
hlt
cmc
inc
jmp
adc
loope
loop
jns
ljmp
add
jp
out
into
jns
and
push
imul
pop
lret
int
in
js
jns
mov
fadds
test
ret
xor
lock
jnp
imul
sub
popa
dec
cmp
jmp
data16
pop
or
xor
repnz
in
push
sti
es
pop
push
cmp
iret
iret
aaa
insb
fisttpll
lret
ja
sub
hlt
call
inc
jge
mov
lahf
cld
jno
ss
insl
and
pop
cwtl
sbb
inc
fnstcw
dec
push
jne
push
ja
sub
fdivrs
pop
pop
xlat
xchg
cmp
jge
cmp
shr
je
mov
rcrb
mov
mov
shlb
vpxor
imul
push
arpl
dec
pop
std
mov
and
mov
loopne
mov
dec
sti
sbb
pop
pop
xchg
or
push
or
jecxz
mov
push
adc
es
ret
jae
adc
ss
dec
pop
pop
rol
inc
in
ds
dec
sub
mov
lea
sub
repz
loop
adc
push
insl
mov
outsl
and
sahf
adc
or
cmp
incb
pushf
mov
fwait
jb
xlat
mov
fs
mov
push
dec
fildll
sti
bound
pop
decl
nop
mov
add
bnd
add
inc
int3
jbe
pop
mov
jmp
popf
xchg
pop
mov
ret
adc
and
data16
dec
push
icebp
fiadds
pop
sahf
movsl
mov
sbb
jl
imul
pop
dec
lret
xor
jnp
fldt
rcrb
xor
ds
jge
or
test
mov
xchg
fistpll
push
into
jle
fnstenv
pop
int3
cli
xchg
xchg
mov
mov
jge
xchg
sahf
adcb
test
outsb
cmp
std
test
lret
dec
pop
mov
inc
jae
pop
mov
inc
jo
aas
mov
shll
push
add
push
cltd
sti
adc
ret
mov
or
adc
rol
shrl
insl
sub
push
jbe
insb
xchg
sbb
and
mov
and
lods
dec
roll
mov
sbb
push
popa
lods
stos
icebp
ret
cltd
push
push
shll
repz
mov
fildll
es
and
jbe
fnstcw
shl
sbb
mov
dec
xor
leave
mov
pop
popf
repnz
push
lretw
xor
xchg
mov
outsb
mov
movsl
push
jle
mov
mov
push
negl
mov
jmp
jl
cs
push
addb
sub
mov
outsb
lcall
or
stc
stos
scas
push
xchg
scas
or
cmpsb
faddl
mov
adc
repz
shrl
add
jle
adc
cs
mov
cld
adc
outsb
push
cmp
mov
mov
shl
and
cli
mov
cs
lret
xchg
cmpsl
push
paddb
xchg
cmpsl
cld
in
imul
xor
or
in
inc
sub
dec
fwait
push
pop
jp
movsl
call
aas
cwtl
inc
test
sbb
push
sbb
jno
dec
mov
xor
push
cld
inc
roll
dec
cmp
data16
xor
fsubp
and
and
lret
movsl
shl
sub
push
mov
rep
iret
lods
je
adc
divb
push
push
push
sarl
or
mov
fdivr
je
imul
xchg
mov
push
lcall
dec
int3
in
pop
xchg
push
pushl
std
cmp
xchg
add
js
jb
lock
aaa
fistps
xchg
mov
fwait
lods
mov
mov
test
and
mov
pushf
repnz
lock
fstpl
fs
fsubrl
jl
mov
cmp
scas
in
sysenter
jmp
or
pop
aaa
loope
lea
jb
mov
aam
test
xchg
inc
push
hlt
addb
jle
aam
xchg
out
cmp
lret
cltd
insb
sbb
cmp
divb
cwtl
xor
or
fidivrl
dec
movsb
dec
jg
popa
xorb
icebp
and
addl
aaa
inc
adc
and
push
arpl
pop
clc
ds
dec
xor
call
movsl
xor
jg
mov
mov
mov
or
repnz
cmp
cmp
push
push
jle
fwait
push
inc
xchg
dec
pop
adc
lods
dec
inc
push
icebp
jne
jle
mov
sub
xchg
xchg
cltd
adc
pop
stos
aam
test
into
xchg
out
xor
mov
fwait
ja
sbb
pop
cmp
dec
sub
jg
popa
in
subb
shl
outsl
dec
punpcklbw
xor
mov
into
and
ret
xor
add
push
bound
shl
xor
inc
push
bound
mov
ret
rol
cmp
add
les
in
fwait
sbb
and
jnp
xchg
rolb
in
popa
mov
ljmp
int3
lea
mov
in
cmpsl
lea
xor
jmp
les
jb
lret
mov
xchg
cmpsl
push
pop
fsubrs
xchg
nop
gs
cmpsb
xor
shll
adc
outsb
aaa
sti
inc
sbb
sahf
clc
or
stos
sub
sbbb
inc
jnp
mov
daa
mov
xchg
icebp
xchg
jmp
push
divb
dec
movsb
lret
sar
mov
mov
add
adc
repz
das
add
push
int
imul
pop
mov
mov
clc
and
stos
add
ljmp
imul
gs
jl
fiadds
push
inc
add
daa
addb
rcl
push
cmpsb
sub
push
push
mov
sub
dec
jmp
sbb
push
lods
cwtl
std
pop
ljmp
mov
lods
decl
adc
mov
ret
or
aaa
repz
adc
movsb
inc
fdiv
fmull
ss
popf
and
ret
out
lret
xorl
fcoml
sbb
popa
xor
sti
xchg
sub
negl
cli
mov
inc
adc
mov
call
sub
jmp
cmpl
xchg
xchg
xor
addr16
mov
in
movsl
fs
cmc
or
or
lods
xor
xchg
inc
popf
xlat
or
int3
xlat
mov
push
fisubl
movsl
adc
pop
iret
out
stc
fidivl
add
jae
outsb
dec
push
jle
andl
jns
hlt
lods
sub
cmp
aas
add
mov
or
mov
pop
nop
out
or
shrb
push
mov
pop
or
test
fcoml
jmp
jle
insl
in
jno
xchg
lahf
gs
imul
push
add
fnstcw
jge
ja
scas
and
lcall
sbb
cld
pop
sbb
into
add
jo
repz
ja
jne
mov
daa
mov
cmp
std
mov
test
push
ret
mov
cmpsb
adc
jp
aas
jle
push
mov
xor
mov
dec
addb
lcall
sahf
pop
mov
lcall
pop
xor
jg
ss
leave
lret
jmp
out
push
notl
scas
lock
cs
negb
rol
xchg
or
shl
leave
xor
xchg
rclb
in
push
mov
push
or
clc
or
push
mov
iret
xchg
cmpsb
shl
aaa
push
jnp
popa
jecxz
stos
jb
add
lahf
adc
pop
mov
dec
cmp
jne
push
jle
arpl
ret
pop
dec
mov
pop
pop
mov
ret
inc
inc
dec
daa
dec
mov
dec
std
adc
stos
loope
out
pusha
and
sysexit
add
jbe
fbld
test
outsl
pop
lods
pop
ljmp
jne
into
outsl
aaa
pop
push
fisttpl
xor
mov
adcb
mov
lods
xchg
shlb
mov
mov
jl
out
inc
mov
jmp
sbb
xor
dec
gs
arpl
sbb
push
xchg
mov
or
mov
out
in
jg
aad
dec
int3
es
inc
pop
cmp
add
add
sbb
addl
dec
idivl
ds
sub
xchg
test
enter
cmp
add
mov
andl
jb
adc
adc
roll
or
pop
cltd
sub
mov
dec
std
pop
mov
jl
cwtl
mov
sar
leave
push
cltd
mov
jp
rcll
in
fisttpl
lock
mov
mov
jb
testb
pop
fnstcw
int
inc
xchg
fldl
jge
sub
pop
jmp
push
bound
lods
imul
cmc
rorl
and
add
imul
push
pop
lods
into
inc
adc
inc
loope
jno
fbld
fdivl
jmp
cwtl
xchg
push
jp
iret
xchg
mov
xchg
pop
xorl
add
popa
mov
mov
or
xchg
fdivrs
pop
adc
mov
cmp
jae
mov
lret
jne
data16
in
sti
fsubrs
cwtl
mov
mov
mov
jno
nop
dec
cmp
leave
pop
lds
pop
add
nop
pusha
hlt
adc
add
adc
aas
repz
scas
dec
push
mov
les
test
pusha
add
push
lea
clc
pop
iret
fstpl
and
insl
in
int
xchg
or
mov
pusha
cmp
push
stos
or
add
lcall
dec
call
mov
inc
repnz
push
dec
pop
aad
inc
dec
pop
push
or
sti
inc
cmp
ja
out
test
fistpll
or
mov
jb
inc
clc
mov
mov
scas
add
mov
jo
pop
out
js
push
lods
xchg
imul
call
jecxz
pusha
mov
push
xor
lret
jne
js
mov
aad
inc
mov
gs
adc
fwait
insl
add
lock
fs
xlat
pop
sahf
fmull
inc
sti
lds
mov
mov
jg
xchg
jg
fisttpll
sbb
mov
cmp
mov
test
fstpt
jmp
add
jns
fsub
hlt
xlat
int
int
add
aas
out
cmc
and
inc
xchg
js
fisubrl
pop
pop
imul
cli
push
lods
inc
pop
dec
fnstsw
je
sbb
add
mov
aas
leave
std
push
jp
dec
push
bound
dec
cmc
popf
xlat
pop
push
outsl
aad
push
pop
adc
sbb
dec
adc
in
hlt
xchg
add
out
inc
sub
pop
add
inc
or
ljmp
jnp
test
aam
addr16
jl
xorl
sbb
repnz
push
out
inc
add
cs
xchg
sub
ljmp
mov
bound
icebp
sub
mov
xor
out
or
xchg
mov
or
aam
into
out
jg
mov
je
inc
outsl
push
pop
mov
and
sub
jb
mov
rol
cmpb
cmp
daa
outsb
sti
scas
jns
push
fnsave
inc
ror
sbb
mov
xor
lcall
adc
and
cmc
cmp
and
insl
pushf
jae
mov
movsl
inc
adc
push
xchg
ja
sbb
xor
daa
aam
adc
in
or
push
or
std
mov
mov
stos
sub
dec
lcall
mov
or
out
xlat
mov
xchg
mov
sub
mov
in
aam
cmp
cmpsl
adc
dec
mov
addb
mov
jo
mov
push
add
lock
push
pop
outsl
orl
fsubs
mov
es
adc
mov
mov
ret
pop
jle
lock
mov
xlat
lret
or
adc
dec
es
rcr
push
jle
loope
sbb
imul
mov
push
and
or
lcall
inc
dec
imul
sbb
sbb
dec
std
xchg
fistpll
jb
enter
push
mov
rorb
sbb
sbb
mov
sub
popf
mov
popf
pop
mov
jle
xor
shrd
xchg
jge
ja
in
jnp
pop
adc
jb
add
adc
sahf
das
and
mov
out
fstps
lds
inc
popa
pop
icebp
mov
lret
cltd
mov
iret
repnz
or
arpl
ss
and
jp
pushf
mov
xlat
mov
dec
sbb
mov
in
sbb
pop
sub
test
ret
and
in
or
sub
in
enter
cmpsb
inc
mov
adc
xchg
dec
and
dec
push
sub
cmpsb
out
xor
nop
ret
or
inc
cmp
pop
and
mov
repz
push
or
setno
inc
pop
jg
jl
mov
jp
aad
int
testl
mov
imul
pusha
push
and
pop
cld
cmp
or
xchg
push
cmp
push
jg
popa
pop
int3
int
or
fmuls
test
scas
mov
xor
add
inc
mov
shll
add
pop
sub
icebp
arpl
nop
add
sahf
es
in
sub
loop
fld1
test
push
or
inc
jg
std
in
xor
push
pop
nop
jae
push
add
mov
jnp
or
xor
cmp
enter
xor
pop
aas
addr16
popa
sbb
inc
outsb
mov
fucomi
dec
mov
mov
in
xchg
adc
mov
fldt
jb
in
dec
inc
pop
mov
das
enter
pushf
sub
lds
enter
dec
bound
sti
jge
cmp
das
jb
int3
ret
mov
cmp
inc
dec
adc
int3
add
loop
pop
cmpsl
clc
lods
shrb
mov
sub
int
outsb
sarb
out
mov
enter
fldcw
pop
mov
fsubrs
pop
jl
pop
jl
mov
out
inc
xchg
and
sub
dec
dec
adc
ret
call
fildll
adc
int
fdivr
rolb
pop
mov
test
nop
add
adc
inc
gs
daa
cltd
jnp
out
cli
cltd
les
dec
xlat
cmp
xchg
add
add
sbb
xor
mov
insb
loopne
pop
pop
insl
sti
cmp
out
enter
out
out
popa
into
popa
stos
icebp
push
sub
cs
cmp
jbe
les
add
fisubrs
xchg
jl
pop
dec
mov
mov
mov
push
in
add
int
in
js
sbb
int3
inc
or
sbb
inc
mov
xor
or
xor
cmp
les
and
mov
inc
adcb
shl
in
popa
out
orl
insb
mov
mov
mov
or
imul
jae
xlat
jb
push
sub
push
mov
inc
push
or
xorl
xchg
mov
insl
cmp
in
lds
or
rorl
mov
mov
repnz
into
fs
enter
mov
lods
or
mov
cmpsb
clc
push
iret
imul
jae
pop
sub
push
mov
dec
add
cmp
dec
dec
in
out
jle
xchg
mov
sub
xor
mov
and
push
xchg
ja
jo
int
test
xor
icebp
ja
rcl
push
mov
pusha
ss
cmpl
fisubs
mov
dec
cmp
fists
jae
adc
sub
sub
dec
jb
addr16
push
dec
mov
mov
fsub
movsl
imul
inc
sbb
cmp
xchg
clc
fs
test
inc
roll
jne
int3
pop
insl
sub
sbb
test
mov
xchg
bound
imul
cmp
mov
inc
mov
cmc
cmpsl
push
jb
and
sarb
popf
out
adc
pop
sub
jnp
aam
leave
dec
fs
cli
daa
sbb
lret
push
xor
jg
andb
mov
in
lods
loope
add
iret
cmpsl
out
cmp
inc
imul
mov
sbb
xor
jp
mov
das
push
sbbl
ret
adc
bound
jne
sbb
push
mov
ficoms
cmpsl
ret
lock
cli
add
xchg
mov
ljmp
or
lret
call
out
push
mov
rcrb
loopne
xchg
adc
jnp
push
pop
inc
sub
aaa
jmp
pop
ret
pop
sub
push
jo
into
mov
fs
and
add
mov
in
pop
sbbb
shl
test
cmp
pop
cltd
les
insb
movsb
dec
mov
dec
rcr
sub
mulb
inc
push
movsb
es
xchg
and
dec
aaa
inc
pop
xchg
sub
push
mov
mov
shlb
enter
ss
ret
xchg
xor
dec
pop
addr16
outsb
mov
push
jp
es
gs
aad
insl
push
pushf
fmull
enter
xchg
cmpsb
push
insl
adc
mov
jnp
inc
push
jle
andb
sbb
pop
cli
jg
cltd
lods
add
push
xor
xor
pop
adc
mov
adc
dec
push
mov
pop
push
cwtl
mov
lahf
lea
sub
das
adc
sbb
shl
test
test
cmp
sub
jns
add
sbb
pop
mov
insb
js
fistl
loop
ljmp
pop
xor
or
mov
push
jp
push
roll
sub
imul
mov
xchg
das
inc
dec
push
in
scas
stos
mov
xor
push
jne
int
cmp
cmp
sub
cmpsb
test
test
inc
mov
dec
aad
dec
xorb
sbb
push
cld
popf
push
insl
or
xor
fwait
adc
aad
mov
add
fs
xchg
mov
cmc
aas
dec
subl
inc
insb
divl
lds
adc
mov
ja
gs
adcb
push
in
data16
fldl
lahf
pushf
and
jl
shld
and
or
scas
dec
xchg
pop
sbb
popa
mov
mov
movsb
xor
cmc
insl
mov
fimull
push
je
or
rorb
iret
cmpsb
push
ret
test
test
stos
fwait
jnp
cmp
and
pushf
cld
insb
cli
test
cli
popl
ret
insb
mov
jns
cmp
xchg
dec
add
rol
out
pop
jg
pop
mov
test
inc
cmc
jg
pop
jp
push
dec
cmp
icebp
lcall
and
nop
dec
cmc
mov
xor
dec
mulb
adc
in
xchg
sbb
or
pop
fistps
pop
rcll
ja
sub
add
mov
testl
movsl
inc
je
add
add
pusha
or
pop
ljmp
popa
and
push
inc
lahf
jge
std
pop
cmp
jg
dec
push
mov
mull
inc
fistpl
pop
daa
xchg
out
xor
imull
out
fldenv
lods
roll
stos
mov
sbb
jnp
aad
fs
sub
hlt
jne
push
fld
cld
int3
adc
movsl
add
cmp
les
jmp
cli
cs
js
add
dec
sbb
dec
aam
out
pop
int3
and
add
mov
std
xchg
mov
push
mov
dec
or
movsl
aam
jmp
ljmp
loopne
cmp
mov
rorl
sbb
ljmp
out
push
or
mov
aas
xchg
mov
mov
fldl
stc
out
sahf
or
neg
push
cltd
mov
push
rcll
les
jg
pop
out
adc
and
addl
add
push
lds
iret
filds
hlt
test
js
dec
int
mov
mov
xor
dec
ret
mov
xchg
js
mov
or
repz
cmp
jne
or
pop
or
and
ficomps
cwtl
pop
pop
or
cmp
pop
push
shlb
ret
sub
mov
adc
mov
push
test
push
in
imul
pop
sbb
sti
cmpsl
cwtl
ljmp
dec
mov
inc
lret
fisubrl
fldcw
nop
sub
mov
xor
cltd
inc
mov
ror
inc
ja
imul
push
dec
clc
bound
jg
add
cmpsb
push
push
loop
test
sbb
lods
ds
das
daa
pop
lcall
sbb
push
dec
inc
push
stos
mov
bound
ljmp
sbb
adc
mov
rcll
adc
and
insl
mov
jb
push
loope
gs
xor
mov
xchg
popa
push
dec
imul
roll
pop
and
push
ret
mov
mov
cmp
test
cmpsb
andl
mov
popf
xor
adc
mov
sub
test
repz
cmp
mov
stc
sbb
push
test
aas
clc
cmp
pop
mov
insb
jnp
inc
adc
jno
inc
cld
pop
in
inc
lret
and
mov
insl
cmc
orl
stos
es
mov
inc
rolb
and
and
iret
out
push
popf
lea
rcl
ds
xchg
pop
adc
stc
stc
push
mov
ljmp
and
aam
pop
sarl
cld
sbb
push
adc
or
push
mov
or
call
push
shrl
sbb
ret
and
inc
gs
int
or
cmpsl
inc
testb
dec
shll
mov
dec
sbb
dec
mulb
add
mov
int3
and
xchg
dec
gs
jp
pop
daa
sbb
bound
or
pop
jp
ds
movsb
int3
test
pop
outsl
push
cmp
fdivl
les
icebp
sbb
jae
pop
pop
adc
adc
push
sub
jno
inc
divb
cmpsl
xor
sti
mov
stos
inc
jl
mov
pop
sub
nop
mov
cmp
jno
addr16
ret
mov
mov
jo
add
mov
or
add
jno
and
or
imul
push
xchg
add
or
and
mov
mul
fistps
jnp
ret
push
add
sub
sub
jmp
movsb
xchg
push
movsb
inc
push
jb
or
repz
and
iret
and
mov
push
and
out
adc
subb
fcoms
lahf
aad
xchg
xor
scas
xor
ret
fdivrs
out
xchg
inc
jnp
aad
push
outsb
in
icebp
inc
or
and
jle
mov
sub
mov
or
add
fstps
xor
enter
adc
cwtl
pop
inc
out
les
pop
mov
and
int3
sbb
inc
mov
pop
jl
test
pushf
sub
clc
ret
mov
test
iret
adc
xor
loopne
adc
add
test
fdivs
push
mulb
mov
pop
push
out
add
push
rcl
mov
xor
aam
inc
lret
xchg
mov
push
lcall
movb
into
outsb
jo
sbb
mov
mov
and
xchg
incb
xor
loope
lcall
inc
jge
rcr
xchg
lea
ret
xor
add
lds
cmp
cltd
sub
xchg
and
iret
jecxz
insl
sbb
fisubl
iret
xchg
jo
test
pop
scas
jo
sbb
loop
inc
xchg
push
and
mov
loop
inc
inc
push
inc
outsl
inc
mov
xchg
dec
int
std
jbe
pusha
pop
pop
and
cwtl
mov
scas
cli
ja
in
jp
xchg
in
jae
inc
mov
xchg
jb
sub
movsb
js
aam
xlat
clc
add
xchg
in
jp
xchg
mov
mov
sub
sub
sub
push
test
or
dec
cmp
dec
push
in
xchg
pop
inc
jne
push
mov
imul
pop
add
and
xor
jp
inc
pop
aad
cmp
daa
inc
push
es
cs
lods
cmc
push
inc
sub
sbb
adc
insb
mov
mov
scas
int3
stos
je
out
daa
je
mov
ret
mov
ret
rolb
mov
push
fistpll
jo
mov
das
cmpsb
test
pop
or
test
and
js
add
imul
gs
jg
or
add
xor
add
mov
mov
fcompl
cmp
in
xor
dec
cmpsb
rcl
bnd
xor
inc
mov
fwait
popa
data16
cmp
cmp
jns
icebp
pop
jno
xor
cltd
frstor
ret
cmpsb
cmp
lcall
out
sub
enter
dec
dec
xchg
int3
push
rclb
hlt
std
cmc
scas
jns
push
es
sub
pop
aad
jno
mov
das
push
addr16
test
jecxz
fs
ret
sti
cltd
sti
cmp
mov
mov
jge
jmp
std
dec
in
inc
mov
inc
lcall
push
push
mov
mov
scas
mov
fisttps
scas
push
fadd
sbb
pop
adc
data16
cmp
inc
inc
inc
out
fsubl
sbb
jg
xor
cld
or
fwait
lods
fildll
mov
loope
inc
imul
mov
dec
or
sub
sbbb
mov
xchg
adc
mov
pop
scas
imul
xchg
xor
nop
fcomps
pop
outsl
cwtl
out
in
mov
aas
sahf
mov
outsb
aas
jne
insl
sub
or
jns
lds
xor
inc
stc
jmp
shrb
call
push
jmp
imul
pop
mov
test
inc
sbb
imul
popw
mov
cmp
xchg
push
adc
adc
pushl
push
shlb
cmp
mov
in
lret
and
imul
shrb
inc
ss
shll
push
adcb
lret
xor
lods
mov
fs
nop
push
lods
lds
adc
xor
lahf
xor
jns
inc
or
ja
xor
adc
stos
div
sub
mov
adc
inc
add
ss
mov
pop
adc
clc
orl
push
mov
ss
popf
and
iret
loope
pop
or
mov
lahf
dec
adc
mov
add
leave
push
adc
mov
sbb
inc
pusha
dec
inc
mov
add
cmp
into
jg
sub
xor
push
mov
pusha
lret
repnz
cmp
stos
add
loope
mov
push
cmpsl
cmc
push
xchg
out
pop
call
mov
lret
mov
inc
arpl
incl
pop
or
ljmp
mov
popa
dec
lock
xchg
in
in
mov
ljmp
dec
lahf
push
das
or
xlat
push
mov
inc
iret
out
jne
jl
jo
iret
dec
or
arpl
xchg
sbb
mov
insl
rcr
imul
xchg
sbb
mov
jbe
or
insb
or
lahf
sti
icebp
or
outsb
and
call
cli
cmp
daa
dec
or
jne
cmpb
dec
insl
cmp
dec
cmp
jnp
pop
lret
and
inc
jmp
fst
cwtl
and
rolb
pop
rol
push
or
cli
sbb
mov
mov
lods
movsl
sub
sbb
movsb
loop
imul
xlat
add
xor
fprem1
cmpsb
mov
dec
pushf
or
mov
adc
push
fiadds
adcl
int3
pop
adc
xor
lds
lahf
in
aas
in
mov
or
mov
mov
pusha
out
adc
imul
shrl
push
dec
test
clc
sarl
add
pop
inc
cmc
mov
lock
arpl
xchg
xchg
dec
or
dec
daa
pop
adc
mov
add
jg
cmp
cmp
mov
pop
sbb
clc
sub
xchg
imul
cld
insb
xchg
cmc
xor
addl
lahf
push
scas
clc
hlt
lods
in
clc
cmp
repnz
jg
rclb
push
mov
and
sub
sahf
cmp
xchg
jno
xor
ja
test
cmp
lds
jb
lds
hlt
repz
inc
push
iret
out
je
scas
aam
xchg
xchg
inc
pop
push
jmp
std
stos
push
adc
ss
xor
pop
cmc
push
cmp
add
ret
add
mov
jle
bound
shlb
mov
enter
and
int3
jmp
int3
lods
or
sub
repnz
jne
movb
mov
sbb
cmpl
loop
jb
cli
test
fcmovne
sbb
jne
or
mov
dec
loopne
leave
fidivrs
call
aam
js
pop
adc
or
cmp
rclb
das
fucom
adc
inc
int
sub
push
cwtl
mov
adc
cmp
mov
call
lret
and
adc
test
jmp
outsb
lret
and
or
jae
mov
push
popa
test
fmulp
dec
test
pusha
add
push
mov
dec
jmp
mov
outsb
mov
insl
pop
imull
stc
loope
jp
adc
imul
sbb
roll
mov
cmp
call
movsb
loopne
repnz
dec
inc
cld
cmp
cmp
je
push
or
add
push
push
loope
push
fcoms
icebp
notb
xor
sub
icebp
sub
mov
xor
aas
inc
ss
ljmp
call
mov
jo
push
jl
or
das
add
mov
xor
orb
fnsave
or
ljmp
loop
push
into
fistpl
sbb
push
mov
add
mov
fildll
sbb
pop
jne
nop
insb
aaa
push
sub
adc
fs
push
clc
jg
es
mov
idivb
add
jecxz
lahf
xchg
dec
pushf
push
jecxz
mov
mov
int3
lret
cltd
pop
push
mov
in
jg
push
dec
adc
and
jecxz
cmp
jae
jb
cmp
dec
add
push
jo
aad
jb
dec
loop
dec
sbb
int3
jnp
or
sarl
dec
fstpt
jne
sub
lret
mov
cmp
cmpl
orl
aam
mov
inc
mov
cmp
mov
psrlw
scas
and
mov
cs
dec
ja
xlat
mov
inc
mov
lcall
push
push
repz
xchg
sar
jecxz
jne
popf
imul
jb
xor
stos
in
fistpll
sbb
mov
jae
aaa
and
sub
and
leave
sbb
mov
sahf
jno
mov
sbb
pop
movsl
shlb
xor
or
cmp
loope
inc
push
hlt
outsb
out
lret
jbe
mov
sbb
ud1
sbb
outsb
or
cmc
shrb
pop
push
aas
test
pusha
dec
xor
and
xor
mov
mov
shlb
xor
lock
fldln2
xchg
xchg
xchg
out
mov
dec
pushf
cmpsl
adc
hlt
pusha
rclb
push
or
pop
dec
imul
jp
cmp
jno
xchg
xor
mov
int3
cmpsb
pop
jbe
mov
repnz
inc
xchg
test
or
mov
negl
test
push
and
jo
mov
inc
mov
push
divb
int
les
xchg
xchg
cmpsb
mov
xchg
jl
out
fwait
mov
cmp
or
jb
js
cli
outsl
rdpmc
xor
daa
xor
shlb
dec
clc
pop
out
fimull
add
mov
popf
pop
jg
xchg
pushf
sti
mov
clc
jg
mov
pop
cmc
dec
fidivrs
dec
inc
mov
cli
push
fwait
xor
push
or
sarl
inc
icebp
pusha
push
mov
sub
int3
mov
inc
push
stos
popa
pop
pop
insb
lret
jbe
test
leave
bound
fyl2xp1
pop
push
jne
das
arpl
xchg
inc
jecxz
popf
inc
adcl
fld1
icebp
iret
rcll
jle
jnp
rcll
popf
aam
stos
stos
lret
popa
mov
cmp
ret
inc
dec
lcall
test
inc
lret
ljmp
rcrl
mov
inc
aaa
and
adc
add
lods
in
jnp
test
cmc
mov
mov
pop
cwtl
or
adc
jnp
cwtl
int
inc
in
pop
gs
dec
jne
mov
fcoms
xor
push
pop
adc
mov
icebp
leave
fdivr
mov
fstp
xchg
jecxz
lahf
rclb
sbb
movsb
pop
push
scas
dec
stos
pop
repnz
sub
adc
pop
mov
mov
mov
or
ret
pop
push
aas
cmp
dec
pop
addr16
fbld
lock
rolb
xchg
jbe
es
and
mov
sbb
int3
test
fbstp
mov
into
loop
dec
popf
dec
xchg
popa
ds
ficoms
mov
ljmp
mov
cmp
add
push
sub
push
loopne
pop
in
mov
lahf
and
pop
jle
stos
addr16
dec
negl
sbb
xchg
ss
or
xor
push
dec
jle
mov
adc
lret
lods
sub
cwtl
in
lock
mov
popf
divl
inc
nop
movsb
push
sub
fstps
xchg
xor
das
mov
inc
push
mov
fisubs
adc
loop
lea
lret
cmovnp
call
mov
outsb
pop
sub
ret
in
or
je
out
fisubrs
mov
in
cwtl
xor
pusha
jns
push
mov
push
out
dec
or
lret
mov
jno
mov
mov
mov
adc
inc
xchg
fwait
inc
loop
je
mov
adc
sub
fadds
cmpsb
xchg
push
mov
or
mov
fnstsw
inc
or
mov
xchg
shll
sarb
pop
dec
bound
add
and
and
movsl
sbb
push
xlat
xor
sahf
pop
jne
mov
popf
aam
jae
dec
cld
mov
inc
movsb
imul
inc
add
daa
pop
insb
xchg
test
int3
xchg
pop
sub
xor
push
loope
test
add
mov
mov
stc
sub
loope
mov
add
jp
imul
jp
add
mov
or
das
out
dec
fmull
aam
inc
decb
fdivrs
push
ljmp
loop
xchg
add
and
xchg
xchg
lods
jge
dec
fbstp
adc
ds
aaa
fucomp
and
mov
in
jo
movsl
jle
aad
dec
shrl
rcll
sbb
cld
mov
mov
xor
lock
jno
adc
test
cmp
mov
mov
and
lds
and
xor
sbb
or
and
mov
rcrb
xchg
fwait
mov
add
cmp
xchg
lea
sbb
mov
pop
push
push
stos
in
out
daa
ret
push
and
out
insb
insl
xchg
stos
dec
insb
call
or
pop
ficoml
mov
adc
jae
xchg
dec
subl
push
shl
xor
insb
int
mov
add
cs
dec
nop
nop
out
call
xchg
xchg
popa
lods
xchg
xchg
ds
pop
add
cmp
xchg
mov
xchg
push
and
out
mov
sub
sbb
subb
dec
push
push
mov
cltd
cmp
cmp
mov
sub
stos
shrb
mov
jecxz
push
je
sub
in
push
mov
pop
dec
xchg
addr16
push
mov
bound
repnz
daa
pop
sbb
addr16
pop
xchg
pop
inc
pop
ljmp
pop
sbbl
cmp
popf
mov
lret
lret
cli
add
pop
jg
jbe
aam
adc
and
test
pop
mov
sub
ret
mov
jmp
lret
sar
pushf
out
popf
sbbb
into
addr16
arpl
inc
jnp
fsubr
mov
in
js
jae
cmp
jno
jae
pop
xor
xrelease
push
dec
push
pop
and
loopne
mov
cmpsl
jae
pop
scas
lods
jl
fidivrs
xor
dec
push
pop
sub
loope
sub
ljmp
lea
fisttpl
arpl
rcrl
addr16
aad
and
test
xchg
jae
pop
stos
mov
lds
out
xchg
and
xchg
inc
std
jmp
dec
stos
adc
push
mov
cmp
and
inc
mulb
popf
iret
addl
stos
fiaddl
fidivrs
dec
scas
into
mov
lock
mov
negl
out
inc
mov
cld
lds
imul
push
xor
sar
nop
lds
xchg
add
lods
jne
sbb
aam
cmp
cmp
std
push
xchg
or
xchg
lret
pop
out
sbb
fmull
mov
pop
in
cli
adc
jmp
mov
shlb
pop
xlat
dec
andl
js
inc
negb
pop
adc
add
sub
rcl
and
ss
andb
icebp
dec
sbbb
enter
jno
jns
loopne
inc
shrb
jg
lds
negb
jg
out
and
push
xchg
dec
lods
xchg
pushf
fsubl
orl
jge
sbb
pop
dec
shl
sbb
adc
mov
mov
aas
aaa
divb
and
lea
jae
xor
fcmovu
hlt
xchg
sub
add
xchg
mov
dec
cmp
fcmovnu
or
xchg
xchg
mov
adc
int
pop
sub
mov
mov
out
lea
push
rorl
faddl
lods
bnd
movsl
adc
adc
nop
sbb
jo
push
jbe,pt
mov
dec
out
add
push
scas
aam
mov
movsb
mov
mov
and
fdivs
jno
std
cltd
lea
mov
cmp
cmpsl
adc
mov
xor
dec
cs
js
mov
cmp
and
test
sbb
pop
cmp
fdivl
aas
cmp
push
inc
sbb
pop
imul
dec
pop
xchg
fimuls
pop
cmp
or
addr16
pop
iret
inc
mov
mov
dec
xchg
clc
xchg
mov
sbb
roll
pushf
mov
in
pop
enter
sbb
test
lret
pop
pop
out
and
sub
imul
adc
jno
adc
push
sub
pushf
mov
xor
addb
call
into
hlt
dec
and
repnz
shl
ret
pushf
pushf
cmp
xor
jb
push
hlt
sbb
jecxz
hlt
outsb
inc
sahf
jp
mov
jp
dec
iret
call
roll
xlat
pushf
jne
adc
push
cmp
cltd
lock
inc
shlb
in
insl
int3
sbb
or
or
xor
lret
mov
sub
push
fisubs
popa
push
shll
sahf
or
lods
imul
sbb
sbb
add
sub
inc
data16
xchg
aad
mov
loope
cmp
or
mov
test
insb
push
repz
cmp
jae
or
sub
pop
lret
dec
mov
and
int
xor
mov
js
mov
outsb
test
cld
fisubl
xchg
dec
mov
cmp
sub
cld
fdiv
adc
sbb
mov
adc
xchg
xchg
push
repz
mov
imul
mov
loopne
imul
mov
xor
enter
rcll
mov
mov
inc
mov
mov
mov
std
push
in
sbb
add
test
pop
cmp
pop
mov
xor
pop
les
mov
gs
sub
in
xlat
jg
dec
outsl
stc
ds
dec
jo
idivb
bound
test
or
fldt
lock
subl
aaa
inc
dec
andl
sbb
push
xchg
stos
lods
push
stc
cmc
aas
push
sbbb
mov
nop
popa
dec
loope
cmc
call
data16
gs
mov
xchg
test
dec
clc
std
fwait
out
add
mov
fisubrs
imul
imul
jecxz
fdivrl
push
xor
sbb
arpl
mov
js
stc
test
int
cmp
in
in
sbb
xchg
xchg
cs
mov
push
mov
sbb
pushf
jmp
cmp
hlt
mov
sahf
and
xor
pop
xchg
cmp
imul
push
adc
mov
sub
cmp
int3
paddsw
jle
mov
mov
mov
mov
mov
mov
cmpsl
imul
gs
icebp
scas
ss
ss
bound
cmc
push
loopne
fsub
movsl
mov
xchg
jne,pn
in
pop
mov
insl
stos
push
jbe
push
sbb
jmp
push
or
sti
imul
ljmp
and
jecxz
push
movsl
jnp
sub
sub
mov
imul
addr16
inc
and
cmc
inc
out
push
sub
leave
adc
mov
jl
dec
fnstenv
fisttpll
outsb
fnsave
call
ja
jno
icebp
orl
push
in
and
add
or
insl
orl
mov
inc
jp
outsb
mov
lods
jp
mov
popl
lock
mov
sbb
sbb
cwtl
push
dec
or
mov
inc
push
cmpb
into
ljmp
les
push
jle
and
stos
sub
xor
sbb
sub
sub
xchg
and
call
mov
and
xchg
pop
dec
test
out
test
pop
jo
mov
sub
ficoml
scas
inc
cmp
pop
cmpsb
pop
dec
fsubl
jne
or
sahf
adc
enter
xchg
lret
leave
stos
lea
mov
or
repnz
shrb
outsb
mov
mul
mov
xor
jne
dec
scas
xor
pusha
in
push
pop
movsb
sub
sahf
add
scas
arpl
xchg
cltd
xchg
aaa
cmc
add
in
ljmp
pusha
aad
dec
insb
out
xchg
pop
pop
sbb
aaa
ss
pop
xchg
mov
mov
sub
push
sti
cwtl
fs
stos
inc
add
into
out
inc
aam
xchg
adc
and
movsb
inc
aaa
shrb
fsubs
sbb
mov
movzbl
pop
cwtl
xorl
fcoms
aad
cltd
mov
mov
lods
sbb
rcll
sbb
adc
add
ss
jmp
mov
leave
cmpsl
sub
cmp
xor
hlt
add
dec
bnd
jl
insl
cmp
mov
popa
shl
push
mov
mov
popf
pop
test
out
dec
lds
loop
or
inc
adc
push
sbb
aad
jb
jnp
ficoms
push
test
mov
test
or
mov
mov
mov
loope
icebp
sahf
xchg
daa
pop
mov
mov
idivl
dec
pop
das
jg
test
jno
bound
or
mov
gs
mov
add
enter
mov
out
push
insb
sbb
mov
xchg
stos
rep
ret
or
dec
jg
mov
lock
das
sbbb
aam
lret
dec
ja
stos
data16
imul
rcll
and
jle
test
gs
lods
punpckhbw
or
lahf
mov
pop
fwait
jmp
push
les
lcall
fadds
jno
mov
add
cmpsl
xchg
enter
lods
popa
dec
cmc
iret
xor
jge
sbb
in
jmp
ss
fiaddl
sbb
out
sub
push
fwait
punpcklwd
mov
jbe
adc
adc
adc
add
xor
adc
lods
loop
mov
insb
and
dec
xchg
xchg
in
xchg
pop
mov
inc
fistpll
icebp
sbb
lcall
jg
inc
mov
sbb
push
push
mov
xchg
xor
adc
rcrb
inc
adcb
test
lret
pop
popf
jge
into
mov
xchg
pop
jae
mov
ret
mov
nop
popf
inc
push
pop
pop
mov
nop
fisubs
in
pop
ljmp
mov
lret
mov
dec
cmp
sahf
jge
mov
jo
add
xchg
push
adc
mov
lock
mov
cmp
push
dec
aad
inc
jnp
les
ljmp
ja
das
je
add
adc
xchg
test
data16
test
lahf
xchg
adc
ficoml
in
xor
pop
test
mov
out
cmpsl
push
add
mov
pop
and
and
mov
push
adc
and
sbb
mov
jle
push
mov
test
sti
push
stc
shll
mov
jb
push
ljmp
lcall
or
add
ret
mov
sub
push
and
sbb
movsl
mov
pusha
mov
push
fdivl
fwait
pop
imul
loop
clc
add
adc
xor
push
fcoml
xchg
jbe
mov
int3
fstp
push
mov
adc
mov
imul
xor
jae
dec
testb
xchg
cmp
mov
dec
jge
add
mov
mov
sbb
in
imul
shrb
test
mov
dec
jecxz
lds
mov
or
add
fwait
add
adc
mov
lret
pop
mov
shll
imul
xlat
iret
adc
pop
jb
loope
sahf
mov
add
mov
cmp
adc
pop
jmp
inc
jns
in
arpl
mov
sbb
faddl
iret
push
lds
fnsave
outsl
xchg
mov
sbb
dec
push
cmpl
stos
mov
shll
push
sub
in
ret
jge
std
mov
pop
sub
test
fisubl
jo
js
cmp
mov
aas
mov
jo
rolb
inc
xor
mov
jg
push
xchg
adc
fisubrl
push
xchg
testl
xchg
and
mov
xor
loopne
aas
sbb
mov
fwait
ret
int3
xchg
dec
sti
sub
imull
mov
ds
fadd
inc
jmp
sti
mov
mov
ds
pop
cmpsb
sbb
jl
scas
mov
std
in
es
sbb
xor
and
pop
movsb
clc
mov
lods
or
mov
js
cli
adc
push
or
dec
or
push
or
movsb
xor
xchg
sub
lret
adc
jp
pop
adc
pop
sub
test
mov
fimull
sub
mov
xor
es
in
pop
xchg
ljmp
fstp
out
fwait
pop
scas
jbe
or
in
stos
pop
sub
das
or
movsl
addb
xchg
push
xchg
xor
inc
xchg
xchg
aad
daa
dec
sbb
enter
sub
lods
and
or
cltd
dec
push
mov
sahf
scas
mov
shlb
fwait
sub
xlat
loopne
cmp
pop
stc
sub
mov
fstl
or
dec
jge
data16
and
faddl
xor
outsl
xchg
stos
ss
movsl
out
out
andb
loopne
and
dec
sbb
stc
cmp
out
push
xlat
jb
sti
jp
lret
fidivl
add
scas
inc
int3
xor
xor
les
mov
add
inc
ja
scas
fnstenv
std
sub
push
js
jns
jp
popa
leave
subb
movsl
adc
data16
fs
aaa
leave
mov
fnstenv
jle
or
jle
cmp
lret
push
rolb
test
pop
push
cmp
jmp
cmp
sbb
psubq
into
lcall
sbb
sahf
sbb
push
mov
in
js
xchg
loope
push
stos
cmpsl
xor
in
push
or
dec
mov
cmp
sub
imul
inc
ja
sub
sti
in
inc
sahf
fwait
xchg
mov
in
jl
mov
mov
das
pop
cmpsl
js
ret
mov
jae
cmp
movsl
mov
daa
arpl
xrelease
push
ljmp
cmp
cwtl
pop
out
inc
inc
or
xchg
and
or
lods
jo
cpuid
jp
pop
lret
out
ret
push
xor
mov
ja
push
int
fcmovu
pop
cld
mov
inc
in
sub
test
stos
jg
sub
enter
cmp
push
icebp
add
mov
xor
add
test
pop
sub
pop
or
mov
out
mov
push
cmp
ljmp
mov
fdivs
adc
mov
js
mov
jae
jecxz
push
adc
mov
insl
fwait
pop
lods
mov
mov
and
jb
in
add
int3
popf
and
inc
out
add
decl
add
adc
jge
push
xor
test
bound
push
das
gs
push
or
cmp
repz
xlat
orl
nop
dec
cli
sti
xor
loop
jno
cltd
shrb
mov
push
xor
pop
ret
pushf
popa
mov
scas
in
xor
cli
pop
jo
pop
lea
cmc
sbb
xor
mov
jle
loope
cwtl
call
pop
sbb
jb
jns
popf
push
dec
nop
and
jnp
stos
daa
sbb
imul
cmp
cmp
repz
addr16
push
xchg
mov
xor
ret
in
or
push
add
loopne
imulb
lret
inc
xchg
in
sub
xlat
or
dec
or
aaa
pop
les
aaa
gs
pusha
testb
mov
lock
push
xchg
inc
insb
jle
in
fmull
push
rcll
pop
gs
mov
xor
and
push
andps
jb
push
jecxz
loop
stos
or
dec
or
cltd
cmp
movsb
lret
sub
push
or
fnstenv
call
out
adc
pop
stos
clc
xchg
ja
ret
ret
adc
mov
sbb
xchg
pop
sahf
mov
mov
pop
lods
adc
push
jp
mov
pushl
shlb
sbb
inc
xchg
xlat
ljmp
mov
cmp
xchg
adc
fisttpl
es
stc
mov
mov
or
inc
inc
add
xor
pop
and
jo
inc
loopne,pn
sar
mov
jbe
and
aas
xchg
push
fidivl
adc
test
in
jecxz
jb
ds
stc
sahf
arpl
and
out
or
or
jbe
adc
push
jle
mov
call
scas
mov
loope
pop
xchg
jp
pop
jmp
add
push
fidivs
xor
pop
or
pop
ds
sub
jno
xchg
adc
sub
ds
inc
loopne
xor
orb
jo
lods
andb
repz
push
scas
mov
push
cmp
ljmp
xor
out
scas
popf
xor
les
jecxz
inc
jp
pop
movsb
dec
fnsave
push
inc
and
cmp
loope
push
adc
call
push
shll
in
dec
or
sbb
or
jg
fdivl
push
mov
hlt
mov
mov
out
stos
pop
cmpsb
add
dec
cmc
stc
das
outsl
lds
insb
xchg
push
sbb
cmp
adc
inc
clc
push
movsb
loope
sub
add
jns
fmull
out
ds
cmp
jmp
popf
pop
or
sbb
mov
xadd
adc
jp
mov
lock
add
hlt
lock
xchg
jle
lods
das
mov
mov
sub
inc
fadds
add
mull
cltd
lret
jl
inc
xor
out
imul
stos
andl
push
push
repnz
add
mov
insl
push
jns
pusha
jp
les
pop
ss
pop
mov
test
jl
jecxz
mov
mull
mov
shll
jae
in
inc
cwtd
fwait
mov
cmp
xor
jae
rclb
add
pop
ret
js
fnstsw
sti
sbb
test
in
into
mov
pop
mov
mov
jne
cld
out
lahf
inc
enter
enter
sub
js
data16
out
mov
or
mov
or
sub
push
mov
pop
adc
and
inc
in
testb
inc
sub
sahf
adc
xchg
arpl
dec
sahf
add
in
mov
leave
mov
std
fnsave
cli
repz
xor
cmp
pop
outsl
stc
int3
pop
push
pushf
daa
adc
and
jnp
add
scas
fnstcw
inc
mov
dec
mov
adc
jl
test
jnp
adc
fmuls
fadds
pop
jecxz
mov
adc
inc
cmp
nop
sbb
repnz
adc
jge
ljmp
fisubs
movsl
rol
adc
test
inc
outsb
jb
icebp
mov
mov
add
into
pop
pop
ss
stos
push
scas
shrb
ret
or
or
popf
adc
xor
and
push
in
dec
fbld
or
cld
sbb
icebp
pop
int
repz
outsb
lds
mov
cmp
or
insl
aas
dec
lret
ds
adc
cmp
push
sahf
subl
xor
gs
rorb
add
dec
repnz
in
out
xor
scas
movsl
lods
or
data16
ja
mov
mov
mov
jecxz
ss
mov
jno
jbe
rorl
jns
les
cmp
scas
xchg
js
mov
cmp
or
sbb
js
or
imul
jne
mov
outsb
mov
in
test
pop
cmp
mov
rcrl
shlb
xor
sbb
mov
pushf
test
xchg
mov
je
mov
push
add
jbe
popf
pop
add
lret
jp
cmpsl
pop
loope
ret
push
lret
push
sub
sbb
test
sub
pop
cli
sub
mov
sarl
adc
in
push
fldenv
fnsetpm(287
mov
jb
stc
lcall
or
loope
sub
scas
add
je
inc
pushf
or
xor
fidivs
mov
dec
inc
jb
adcl
dec
ret
lret
cmpsl
sbb
ficoms
out
adc
sub
aaa
jmp
or
adc
loop
test
jge
push
inc
xchg
shrl
sub
pusha
mov
in
mov
lock
shlb
faddl
loop
rcrl
xchg
or
rcrb
les
pop
js
std
mov
lea
jb
sub
fildl
scas
push
jae
jp
aad
mov
ret
mov
dec
shl
adc
pop
arpl
vpunpckhwd
push
imul
das
mov
and
mov
addr16
pushl
adc
mov
pop
sbb
outsb
lahf
hlt
movsl
cmp
gs
clc
sbbl
sub
lahf
cwtl
mov
or
cmp
enter
fistpl
adc
mov
mov
or
push
out
sub
jg
mov
std
adc
out
fcoms
xchg
cmpsb
out
loop
sub
dec
pop
or
jb
imulb
add
rcrl
cmpsl
pop
adc
out
je
rclb
movsb
push
jnp
cmp
insl
out
push
and
sub
adc
push
jne
adc
pop
es
jle
ror
push
fistps
fidivrs
cmp
jbe
cs
inc
repnz
add
or
sub
jne
scas
bound
push
sbb
jmp
sbb
or
pop
in
outsl
xchg
and
jge
fcompl
lret
jae
jno
dec
ljmp
popf
outsl
jnp
int3
xor
add
insl
ds
and
int
addr16
pop
add
and
sahf
aas
cmp
pop
fs
and
pop
dec
push
sbb
icebp
jl
addr16
cmp
int
outsl
xor
cmp
int3
jnp
mov
xor
sub
out
push
ret
test
int
inc
and
xchg
clc
jno
add
cmp
jo
and
jl
repnz
mov
cmpsb
push
gs
stos
addr16
mov
xchg
jne
iret
xor
sbb
push
mov
outsl
sti
pop
sbb
addr16
je
out
addr16
xchg
int
inc
test
xchg
inc
cmp
out
push
or
push
jle
dec
test
jl
mov
push
cmp
xchg
rcrb
arpl
pop
dec
rorl
cmc
stos
or
inc
mov
sbb
inc
ror
and
inc
sub
sti
push
aad
push
addb
mov
jg
sub
pop
lds
in
jne
push
pop
rorb
pop
push
xchg
mov
pop
sub
dec
shll
mov
out
or
jbe
sub
adc
adc
and
shrl
cmpsb
loopne
punpckldq
or
add
or
pop
pop
cmp
outsb
gs
fadds
shrl
hlt
sbb
repnz
in
cwtl
adc
pop
xchg
mov
rcll
xor
es
sbb
xor
icebp
ljmp
mov
xchg
mov
cltd
and
mov
xor
rolb
call
daa
fisttpl
lcall
subl
and
dec
shr
mov
and
fsubrs
dec
or
mov
pop
add
adc
mov
cmp
jae
leave
out
pop
adc
psubsb
jp
sub
adc
adc
sar
add
aas
pusha
jge
sbb
mov
in
roll
pop
call
pop
xlat
loope
outsl
add
inc
add
aaa
jne,pn
nop
xor
inc
sub
inc
mov
mov
sti
shlb
pop
or
jge
or
sub
int
repnz
scas
mov
insl
mov
or
int
inc
xorb
loop
test
xchg
cs
in
adc
jbe
mov
adc
or
jbe
sub
lahf
push
cmp
int3
sub
pop
cli
pop
and
inc
repnz
jns
test
inc
in
mov
mov
sbb
rcrl
test
jp
jecxz
and
das
in
imul
ljmp
loop
dec
xor
adc
test
mov
sti
push
mov
jecxz
sbb
ljmp
mov
hlt
rclb
mov
mov
mov
cltd
mov
jl,pn
loop
imul
jb
pop
and
leave
jge
and
adc
cmp
jae
mov
jnp
mov
notb
inc
mov
dec
mov
cltd
add
mov
je
sti
adc
cmpsb
daa
jecxz,pn
movsb
insl
stos
jb
scas
filds
jae
pop
ds
lods
pop
pop
pop
lret
scas
andl
xchg
ja
xor
pop
adc
gs
clc
hlt
mov
mov
push
push
inc
in
repz
xchg
cld
shlb
mov
push
test
fsts
xor
pop
jb
ja
mov
inc
or
scas
push
aaa
ljmp
mov
call
mov
mov
nop
mov
mov
in
cli
int3
pushf
int
imul
dec
xchg
push
dec
stc
inc
lods
push
rcrb
mov
mov
sub
and
cmp
mov
push
add
cmp
int
insl
ljmp
or
push
and
and
mov
test
aas
sahf
ss
xchg
orl
inc
nop
cmp
mov
adc
dec
xchg
lock
lds
sub
mov
sbb
mov
jg
jne
jns
divb
mov
clc
lods
mov
push
xor
xchg
sti
sbb
loope
pop
mov
lods
fsubs
test
xchg
push
fnstenv
add
sbb
pop
ljmp
arpl
push
mov
out
ja
cmp
jo
insl
dec
daa
xor
pusha
loopne
pop
adc
cmpsb
pop
clc
insl
push
or
xor
xor
jg
jmp
adc
fs
notl
fiadds
loope
xor
push
mov
xor
push
shlb
inc
jae
aaa
pop
and
jl
cltd
jae
das
mov
call
dec
nop
xchg
cld
sbb
insl
lahf
imul
cmp
outsb
jmp
push
mov
das
loopne
js
push
int
push
mov
sbb
pop
pop
lret
xchg
mov
mov
aaa
sub
cld
hlt
sahf
push
xchg
sbb
mull
pop
xor
decb
outsb
mov
add
sbb
pusha
dec
push
sub
sbb
fwait
cmc
push
inc
xor
ret
out
pop
or
mov
sbb
lods
shlb
mov
and
std
daa
jge
push
cli
fwait
mov
jmp
jno
lahf
fildll
aad
add
fildl
inc
or
loop
in
lcall
loopne
mov
add
in
push
inc
lcall
pop
mov
inc
or
iret
negb
sar
adc
addr16
sar
and
fs
inc
or
fldcw
lods
adc
rcll
dec
dec
xor
xor
lret
add
mov
fsubs
xchg
xchg
xor
out
sub
push
sub
mov
or
or
jle
pop
cli
xchg
sub
enter
jns
or
and
pop
lds
push
in
fdivl
dec
stos
hlt
cwtl
push
aam
and
das
cmp
jl
inc
pushl
xlat
mov
adcl
mov
testb
lretw
divb
fmull
inc
adc
add
pop
xor
lods
sub
jg
push
ja
adc
mov
js
sub
loope
cmpsb
lret
ret
push
cmp
lods
mov
lock
jae
adc
movsl
mov
xchg
dec
dec
cli
xor
jmp
mov
in
push
add
sbb
bound
fcom
mov
push
cli
mov
mov
add
push
jne
sahf
add
sbb
imul
sbb
jo
frstor
popf
loopne
sub
outsl
repz
cmp
rorb
inc
jecxz
mov
push
dec
popa
push
add
or
sbb
int
iret
outsl
jge
daa
mov
mov
cmp
fs
dec
jmp
rclb
in
xor
data16
xor
out
out
ja
adc
addl
call
mov
fwait
mov
xor
repnz
lea
das
in
imul
mov
and
jbe
add
mov
mov
fucomip
mov
push
outsl
push
bswap
push
sbb
mov
push
and
add
mov
mov
and
loope
daa
repnz
out
lods
inc
imul
xchg
jmp
mov
and
xor
clc
mov
js
jp
adc
adc
das
or
js
aad
xchg
add
std
jp
pushf
std
push
cmp
cmp
push
lods
cltd
jge
cmp
inc
sbb
cmp
aad
aas
enter
mov
mov
pop
jae
lock
jg
and
mov
push
cmc
add
and
push
lea
out
push
in
dec
inc
push
adc
mov
jnp
mov
test
shrb
fldenv
movsb
lods
mov
xor
pop
stc
jp
int
fisttps
lret
jo
bound
stos
xchg
aaa
lret
jle
movsb
dec
jecxz
add
push
pop
and
dec
and
es
jae
mov
mov
std
cli
or
and
mov
fstpl
repz
leave
push
fmull
dec
push
jne
clc
lock
fistl
dec
jg
lcall
pop
inc
aam
add
jb
pop
mov
xchg
loope
cmpsl
addb
rolb
cmp
cmp
push
ds
mov
sub
hlt
cld
ret
mov
sbb
jg
nop
xor
imul
lods
stc
xor
xor
xor
shl
push
cmpsl
andl
lret
pop
decb
dec
ss
addr16
mov
mov
mov
cmp
std
popf
ret
lods
insl
insl
sub
arpl
push
mov
int3
hlt
dec
mov
xor
jg
out
jge
icebp
mov
push
mov
outsb
test
std
push
sbb
add
out
mov
outsb
jmp
xchg
mov
aam
insl
adc
sub
cmc
xchg
call
jecxz
push
add
lods
iret
aaa
sbb
adc
fisttps
jge
stos
popf
cld
je
lret
mov
ljmp
and
into
xor
scas
jmp
outsb
push
les
xchg
jmp
gs
mov
sbb
popf
xchg
sub
lret
push
mov
hlt
pushf
cmp
add
sub
fcmovbe
xchg
sarb
mov
mov
int
test
inc
cwtl
shr
je
adc
inc
mov
jmp
shrl
out
out
mov
jo
dec
aam
xlat
loop
xor
fisttps
aam
pop
add
mov
xchg
aam
popa
cmc
iret
fnstenv
sbb
data16
mov
fsubr
and
sub
mov
jns
pop
in
cs
adcb
xchg
xchg
xchg
or
clc
lods
outsb
push
and
std
lock
cs
icebp
pop
push
mov
pop
das
stos
daa
or
pop
or
in
sub
push
test
mov
rorl
aam
or
out
es
sbb
cmc
xor
movsb
adc
sub
dec
addr16
xor
sub
popf
clc
pop
imul
int3
dec
add
test
mov
mov
or
jmp
into
mov
and
cmc
sub
or
mov
pop
leave
xchg
test
mov
stos
das
cmovb
xchg
mov
mov
adc
mov
into
loop
sbb
test
das
adcl
xlat
adc
adc
out
cmpsl
inc
jl
repz
sbb
xchg
lret
xor
or
aad
cmpsl
loope
fwait
jl
repnz
cmp
imul
leave
add
fmulp
cli
pop
aad
orl
push
jp
mov
rcrb
dec
inc
xchg
sub
rolb
sub
in
dec
ror
cmpsb
lea
sub
jge
jo
and
aam
popf
imulb
es
xchg
push
add
sbb
xchg
lock
xchg
push
pushf
cli
xor
push
mov
push
fwait
pop
dec
pop
nop
or
xchg
fnsave
and
shr
popa
add
dec
iret
pop
scas
leave
or
cmp
and
in
dec
arpl
scas
dec
cmp
rcrb
pop
popa
aam
lods
xchg
gs
or
pop
sbb
idivl
add
xchg
mov
stos
sub
aas
mov
xchg
xchg
mov
adc
adc
and
sbb
cli
aam
nop
sahf
addb
shll
fwait
xchg
ljmp
idiv
lods
in
and
nop
xor
adcl
test
stos
shll
xchg
add
jo
roll
ss
inc
or
scas
cld
dec
dec
xlat
data16
ficoml
and
or
inc
and
push
or
xorl
jae
jnp
add
add
test
mov
test
add
jbe
icebp
pop
decb
cmp
and
xor
ret
rep
faddp
mov
adc
out
sub
movsl
pop
in
sbb
pop
mov
or
outsb
int3
fs
cld
cmc
jmp
cld
inc
fists
inc
std
cwtl
fnsave
add
in
adc
jo
push
inc
sub
loope
in
js
cld
push
cmp
mov
je
mov
outsl
add
add
jns
fisttpl
mov
mov
mov
ss
cmp
cltd
jb
sbb
xor
scas
sbb
outsb
cli
jae
loopne
inc
icebp
add
cltd
loop
lcall
cwtl
dec
faddl
shrl
and
adc
or
frstor
xchg
sarb
les
pop
mov
push
cmpsl
mov
jae
adc
pop
pop
stos
push
mov
ja
pusha
xor
mov
sbb
xchg
ret
xchg
shr
rcrb
fisubs
jno
pop
add
push
mov
push
and
insl
out
fbld
icebp
pop
lock
cmp
mov
xorl
iret
es
mov
and
cmp
pop
jmp
xor
dec
jp
and
cmp
enter
icebp
ror
mov
sbb
test
addl
or
or
out
lcall
clc
ds
enter
int3
xacquire
mov
in
iret
fdivs
imul
ss
mov
mov
mov
sbb
out
cmp
mov
and
adc
int3
sbb
xchg
pop
adc
and
add
lcall
sti
dec
jo
push
sbb
ds
out
in
fmul
inc
cmp
scas
enter
sbb
jne
jl
dec
pop
or
adc
mov
xor
cld
adc
movsl
enter
xchg
add
sbb
dec
rclb
sbb
xchg
mov
int3
ja
fidivrl
sarb
lahf
popf
mov
mov
insb
stos
pop
lds
mov
aam
inc
mov
in
cmpsl
fwait
loop
mov
push
lcall
mov
fcomps
enter
sub
xorb
mov
xlat
jb
loopne
cltd
in
lods
push
mov
jbe
and
aad
mov
clc
inc
dec
inc
popa
sbb
cs
xorb
xchg
pop
mull
dec
cmp
int
out
mov
lea
adc
int
mov
inc
sbb
inc
mov
subb
mov
inc
cmp
out
or
xchg
and
sbb
leave
push
dec
pop
out
push
movsl
adc
push
out
jns
jle
cwtl
les
inc
ljmp
push
aam
mov
cmpsb
pop
xor
enter
xor
in
sbb
mov
imul
fneni(8087
gs
or
xchg
and
lcall
aad
cmpsb
inc
mov
adc
sub
roll
or
das
adc
stos
dec
xor
sub
in
ret
pop
pushl
mov
stos
mov
das
push
inc
es
add
test
lea
push
shl
insl
cmp
not
mov
sbb
cli
pop
push
adc
inc
popa
int
sub
cld
addr16
repnz
jnp
scas
testb
insl
mov
in
lock
mov
loope
push
mov
stos
sarl
das
in
dec
jbe
imul
lods
sbb
loope
sbb
add
jnp
ss
out
ljmp
and
jmp
negl
rclb
iret
jmp
mov
out
xchg
cmc
inc
bound
mov
adc
shl
cmp
mov
dec
std
pop
inc
sti
jle
pop
dec
leave
pop
sti
idivl
sub
adc
push
in
pop
fsubs
xchg
aam
lahf
mov
aam
out
mov
add
in
cmc
popa
adc
sub
push
hlt
mov
jbe
xchg
push
popl
push
fs
mov
cld
test
mov
ret
cmp
push
cmpsb
xor
fcoms
xlat
xor
inc
das
add
mov
pop
out
outsl
mov
rcr
int
mov
out
jo
lret
and
xchg
inc
mov
cmp
mov
ret
ds
dec
scas
out
xchg
pop
or
mov
iret
jmp
lcall
xchg
adc
imul
jno
in
dec
or
adc
lea
ret
push
jnp
and
shrl
daa
std
mov
std
lret
jl
inc
mov
je
jp
bound
dec
nop
adc
jbe
lahf
mov
in
and
cltd
mov
push
push
sub
push
rorl
rcrb
fwait
cmp
mov
nop
inc
add
cmpl
mov
mov
cwtl
mov
jmp
bound
call
and
popf
add
outsb
inc
pop
imul
les
in
or
pusha
push
imul
lcall
test
push
sbb
in
fldl
fiadds
je
into
xor
lea
icebp
mov
jmp
mov
sub
sbb
leave
adc
shr
dec
aad
loopne,pn
dec
cwtl
lahf
xor
xor
aad
xor
pop
rcl
inc
or
mov
xchg
cli
jno
or
xor
add
add
hlt
in
jl
fisubrl
sub
mov
cmp
inc
mov
xchg
insl
test
in
push
lret
xor
push
movsl
fcompl
scas
push
and
insb
mov
shlb
push
xchg
sub
sbb
call
xlat
jns
ror
cmpsb
sbb
adc
cmp
inc
jge
mov
popa
sarl
fsubp
cmc
mov
arpl
mov
aas
adc
pop
movsb
pop
repz
xchg
out
outsl
or
and
scas
fidivl
neg
je
mov
mov
into
sbb
push
xlat
bound
movsl
mov
xchg
in
push
daa
mov
scas
jecxz
sbb
dec
test
dec
xchg
jge
lahf
inc
fnstsw
and
mov
dec
xor
loop
cmp
in
or
mov
xor
jnp
movsl
mov
rcll
push
ss
out
scas
xchg
call
mov
and
adc
cld
test
sbb
icebp
notl
lods
inc
pop
negb
daa
sahf
data16
sub
int3
jle
jl
aam
pop
or
popa
mov
dec
jle
mov
pop
jmp
cli
xlat
push
push
gs
iret
sub
fwait
sub
inc
mov
lock
add
loopne
mov
push
add
jecxz
loope
shl
mov
mov
jo
stos
mov
aam
xchg
pop
dec
jmp
dec
push
gs
and
mov
push
xchg
add
testl
dec
or
pop
test
roll
shrl
pop
sti
adc
sbb
into
inc
shrb
adc
pop
repnz
out
movsb
dec
sti
cltd
pushf
mov
inc
pop
add
push
and
xchg
pop
jns
scas
or
jb
mov
inc
and
add
je
ret
mov
insl
pop
ret
sbb
shrb
ss
mov
je
mov
orb
outsb
gs
rol
hlt
pop
enter
rol
pop
cwtl
jne
or
cmpsl
adc
cli
cmpsb
lret
loop
jmp
adc
cmp
xor
pop
movsb
and
std
stos
jl
cmp
out
mov
test
xchg
push
and
lds
bound
cli
aaa
cs
mov
pop
jl
sbb
sub
adc
mov
mov
into
enter
arpl
cmp
xlat
mov
pop
adc
mov
adc
mov
nop
out
sbb
xchg
outsb
popa
push
aam
nop
outsb
xchg
or
ljmp
mov
sbb
and
push
xchg
sti
jo
push
add
mov
iret
idivl
sub
lret
mov
es
sarl
fwait
gs
sub
mov
ja
call
push
sbb
dec
sbb
lret
ja
jecxz
mov
test
mov
sti
add
xor
cli
mov
jb
int3
xchg
and
fistpl
mov
lret
pop
sbb
mov
pop
mov
sbb
mov
sbb
inc
push
and
or
jno
cmp
mov
push
fnsave
fisubs
xor
lods
sub
data16
lret
sbb
out
sub
xor
sub
mov
or
mov
pop
rorl
sar
xor
xlat
fdivr
data16
and
clc
je
aad
inc
loop
or
ret
add
push
mov
shll
fisubl
ret
lret
mov
cmp
mov
clc
jp
arpl
xor
imul
inc
daa
popf
lahf
ja
leave
hlt
push
neg
push
dec
xchg
cmp
push
enter
jns
gs
dec
inc
xchg
popf
fidivrs
mov
sbb
loopne
push
jg
and
je
negb
outsb
outsl
jle
sub
roll
loopne
dec
inc
jne
es
sarb
mov
fimuls
in
pop
mov
cmp
les
cld
lock
xlat
out
repz
cmp
xchg
sub
pushf
pushf
imul
popa
cs
jp
sub
sub
imul
dec
sub
lret
hlt
cmp
movsb
push
jmp
pusha
and
pop
aaa
call
mov
dec
cmp
lret
movsl
push
icebp
adc
and
je
pushf
dec
pushf
movsl
test
lcall
scas
push
mov
sbb
ja
mov
imulb
cli
push
cli
adc
cwtl
enter
xor
cmpsb
mov
dec
sub
fsub
sub
call
or
fsts
js
fbstp
dec
xchg
js
lock
cmpsl
mov
outsb
mov
jmp
frstor
leave
cs
shll
testb
je
rcrb
pop
insb
inc
addr16
and
decb
clc
addb
into
jle
cld
enter
cmp
add
mov
jo
push
push
roll
xorb
iret
outsl
pop
and
xorl
into
adc
dec
stos
leave
fsubrs
inc
mov
cld
fisubs
pop
adc
dec
xchg
add
out
pop
sbb
jl
xchg
dec
or
cmc
fcoml
adc
in
cmc
ret
in
xlat
cwtl
mov
jnp
imul
int3
divl
jecxz
sub
ret
shrl
decb
mov
imul
mov
repz
fstl
movsb
mov
ljmp
inc
push
add
adc
adcl
cmc
gs
add
mov
ud0
push
orb
xchg
test
jp
fsubrl
movsl
icebp
in
xchg
js
js
test
mov
clts
push
lcall
mov
inc
shlb
sahf
sbb
fistps
and
sti
xor
in
cwtl
outsl
push
aas
mov
adc
xchg
jo
icebp
jo
xchg
call
inc
sbb
mov
jbe
sti
cmpsb
jb
sbb
dec
cli
dec
arpl
cmp
add
jmp
imul
lock
iret
pop
popa
dec
nop
icebp
cmpsb
xor
adc
pop
ss
mov
inc
pop
cmp
out
mov
xchg
test
xor
sbb
push
jbe
int
xchg
notb
xor
test
jbe
add
sbb
xchg
arpl
xor
xor
addl
adc
and
or
inc
ficompl
fistps
xchg
xchg
jge
lds
jg
insl
test
loope
inc
cltd
push
pop
jbe
clc
fnstcw
jp
ja
notl
cmp
jl
divb
imul
insl
or
fxch
gs
sbb
mov
dec
out
popf
popa
lahf
fnstcw
xor
mov
fiadds
xor
sub
es
lea
and
pop
les
and
jo
pop
jle
xor
std
bound
scas
inc
scas
sti
int
arpl
xor
lcall
aas
pop
int
pop
push
mov
hlt
push
push
push
xchg
cltd
cmp
in
inc
cltd
into
fisubs
hlt
xchg
lods
jmp
mov
shll
mov
cmp
out
ret
jo
lahf
xor
or
addb
adc
xor
dec
mov
or
add
sbb
ljmp
dec
or
decl
shll
xorb
bound
xchg
mov
add
mov
jle
ficoml
cmpsb
scas
or
jecxz
movsl
dec
adc
in
mov
out
loope
cmp
add
sbb
loop
jmp
out
int3
int
push
ljmp
ret
sbb
gs
jns
out
push
sub
dec
pop
push
bound
sahf
fbld
test
and
lahf
or
jmp
mov
push
int3
fwait
push
addr16
and
mov
inc
fs
es
or
insb
pop
mov
enter
movsb
cwtl
testb
mov
popf
in
test
mulb
ja
nop
xor
jp
sub
fistps
jae
pop
add
loop
adc
aam
fstps
subb
lock
mov
rorl
pop
cmp
add
xlat
jle
sub
jbe
aad
jnp
mov
pusha
mov
dec
inc
cld
pushf
fiadds
sti
mov
insb
and
sahf
mov
adc
mov
imul
sahf
sub
push
ret
add
sub
jbe
cmp
adc
push
inc
shrb
outsl
ret
inc
adc
ja
push
dec
test
call
pusha
std
pop
lods
jnp
cs
jne
cmc
xchg
cmp
in
cltd
js
dec
outsb
jecxz
inc
sbb
push
insl
or
call
or
lcall
out
add
nop
sub
insl
cmpsb
cmp
shll
sub
loope
movsl
add
outsl
popl
incb
stc
mov
inc
mov
sub
xor
and
mov
mov
adc
or
incl
pop
sbb
enter
fwait
push
lods
lods
mov
aam
in
xchg
nop
fucomi
jp
icebp
movb
loop
xchg
jp
pop
inc
xor
sbb
cmp
ja
daa
push
adcb
lods
into
loope
push
scas
jbe
and
push
rorl
enter
add
jo
or
mov
inc
cmp
mov
aam
xchg
or
xor
sti
sbb
dec
daa
arpl
inc
jbe
outsb
icebp
ret
sub
ds
push
lret
ret
in
xor
and
mov
mov
push
push
test
xor
ret
xchg
add
xor
cmpsb
imul
mov
loope
dec
lock
cli
mov
push
mov
lods
sbbl
mov
cltd
lods
cmpsb
push
pusha
addr16
sarl
and
mov
jae
fmull
sbb
mov
das
xor
shl
cli
inc
add
in
cmp
fwait
xor
fists
sub
push
cmp
int3
rcll
xchg
mov
mov
mov
and
xlat
fadds
ljmp
adc
out
inc
sbb
xchg
xchg
mov
out
mov
push
sub
repnz
inc
scas
push
xlat
clc
sub
and
pusha
jno
fwait
mov
lods
lahf
inc
lret
fwait
in
addl
or
insb
shll
rcrb
push
fadds
xor
push
ret
inc
int
and
jne
mov
iret
sti
and
es
fdivrs
test
or
xchg
and
jp
jle
mov
js
mov
inc
stos
cld
or
cld
rorb
dec
mov
insl
loop
pusha
cmp
inc
enter
js
mov
adcb
push
sahf
mov
je
in
pop
dec
dec
and
cmp
dec
inc
sar
xchg
or
cmp
or
dec
jns
aaa
jns
xlat
or
pushf
movsb
push
test
xchg
test
jne
std
movsl
mov
xchg
lea
insb
imul
bound
divl
lahf
fs
rclb
hlt
xorl
cld
loope
mov
out
rol
and
outsl
in
pop
dec
push
aam
push
adc
add
mov
and
push
hlt
ss
int3
pop
mov
lcall
int3
mov
pop
sahf
mov
xchg
lea
enter
jns
dec
repz
fcoml
in
or
sti
popf
incb
dec
out
sar
dec
cs
outsb
sbb
les
ljmp
dec
ret
mov
inc
xchg
mov
add
in
mov
aam
pop
xchg
dec
mov
sbb
sbb
cwtl
adc
jnp
dec
sub
popf
mov
rcrb
add
add
xchg
push
push
lahf
and
mov
insl
inc
cs
inc
or
pop
push
std
xor
bnd
pusha
sti
pop
shrl
jns
jle
cmp
js
mov
xor
and
les
dec
jne
and
add
out
inc
mov
push
cwtl
jbe
push
mov
xchg
and
fisubrs
jecxz
push
test
adc
pop
loope
xor
mov
sbb
inc
repnz
cli
and
pop
sub
pop
jmp
ds
fidivrs
fxch
bound
popf
cltd
cmp
fisubs
mov
mov
jno
mov
pushf
mov
sahf
aad
mov
sbb
std
sbb
sub
mov
cmovl
mov
cmp
xor
mov
lret
stos
or
stos
pop
repnz
in
mov
push
pop
pop
mov
mov
mov
mov
lret
out
pop
je
outsl
cmpsb
iret
dec
mov
out
push
cmp
imulb
stos
sbb
out
mov
push
cltd
add
add
or
lret
shlb
jbe
filds
xchg
dec
fsubrl
dec
jmp
dec
fwait
adc
pop
adc
fucomp
cltd
les
out
inc
subl
les
push
movsb
inc
xchg
ret
mov
mov
sub
fsubs
cmp
xchg
and
pop
push
mov
adc
fidivrl
xor
cmp
mov
in
jbe
imul
adc
fists
xchg
xchg
push
stc
xor
ljmp
dec
inc
int3
subl
adc
ljmp
xchg
stos
push
shll
das
in
xchg
pop
or
xchg
dec
pop
push
xor
ds
flds
and
in
push
inc
and
insl
push
insb
lcall
stos
bound
pop
shll
sub
fdiv
daa
xchg
pop
inc
and
jae
mov
adc
mov
std
in
shlb
mov
pop
push
mov
push
sbb
push
ret
test
or
inc
jl
pop
fwait
mulb
jge
pop
ret
rcll
jmp
stos
sbb
das
mov
mov
fsts
add
cmp
pop
clc
cmc
xchg
mov
clc
pop
xor
popa
adc
pop
repnz
insl
or
inc
iret
das
dec
js
or
int
das
jnp
mov
lret
sub
jbe
repnz
bound
sahf
aas
into
movsb
cmc
cmp
jae
int3
cmc
movsb
lahf
cltd
es
lods
rorb
or
jnp
popf
pop
mov
and
or
adc
add
sti
stos
loope
mov
sti
xchg
ret
inc
out
outsl
jns,pn
js
push
inc
fdivs
stc
je
jge
mov
cmp
pop
fsubr
in
add
roll
into
ja
movsb
or
sub
outsl
jg
mov
jp
movsl
cmpsb
mov
test
mov
mov
fidivl
adc
je
and
pop
mov
pop
cmp
or
mov
mov
scas
es
ds
or
inc
test
stos
pop
sahf
mov
sbb
mov
leave
pop
add
xchg
iret
add
sbb
inc
sbb
xor
or
pushf
mov
repz
or
jl
pop
imul
cli
adc
in
nop
lock
mov
push
insb
inc
popf
push
fmuls
pop
cmp
cli
fwait
jge
xor
mov
jecxz
xlat
test
fstl
imulb
cmovle
out
jmp
inc
jo
inc
div
addb
mov
mov
push
pop
lcall
popa
lea
addr16
mov
cwtl
push
lret
pop
bound
push
inc
int
inc
jnp
sti
aad
and
test
outsb
and
insb
jb
insb
jae
mov
xchg
mov
lea
sti
inc
loope
aas
cmp
cs
mov
jo
int
call
fs
icebp
in
jne
adc
inc
arpl
into
push
mov
cmp
mov
insb
outsl
dec
or
or
rclb
rolb
and
pop
call
push
push
push
adc
and
test
imul
mov
push
dec
mov
loope
notl
fcmovb
sub
or
bound
fld
xchg
cmp
xchg
loop
pushf
or
scas
push
mov
sub
cmc
sbb
sbb
adc
sub
enter
enter
mov
loope
es
adc
out
lret
jmp
data16
push
fcoml
xchg
xchg
jnp
xchg
inc
fwait
hlt
outsb
push
adc
ret
add
aam
decl
or
add
pop
loopne
mov
cmp
mov
jl
push
clc
mov
inc
and
jnp
div
cmp
cmp
add
rclb
mov
sbb
mov
jae
subl
fdivrs
cmp
repnz
mov
mov
scas
dec
jecxz
pushf
mov
dec
inc
xchg
popf
pop
pop
pop
mov
pop
inc
xor
in
jmp
push
aaa
out
ds
addr16
or
adc
mull
cmp
popf
into
test
add
push
adc
pop
enter
icebp
jb
jbe
cwtl
int
mov
jl
xor
ja
jmp
in
jecxz
jp
loop
jne
push
int
iret
xchg
push
repz
cmp
pop
push
add
lret
insb
scas
mov
jge
arpl
mov
daa
jne
adc
nop
cmp
into
mov
mov
fimull
or
rcll
pop
mov
testb
fisttpll
mov
and
lods
mov
out
in
ret
jmp
lods
fcompl
inc
rclb
scas
dec
cmp
sbb
inc
cmp
cmpb
es
and
cmp
repz
add
dec
cmp
mov
pushl
jmp
push
lock
push
xchg
test
push
or
mov
insb
rolb
fstl
ja
pop
ds
fidivrl
pop
lea
pop
or
and
add
push
inc
dec
mov
push
jb
insl
addl
jne
dec
sub
mov
out
mov
mov
mov
or
mov
push
add
scas
int3
pop
mov
rcrb
pop
stc
push
fcmovb
nop
or
push
cs
pop
sbb
add
adc
pop
mov
movsl
sbb
out
dec
sets
pop
daa
xor
mov
jo
popa
scas
testb
push
sbb
cmp
roll
fsubrl
dec
pop
imul
movsb
addb
and
data16
movsl
mov
jo
xchg
inc
in
sbb
fsts
inc
add
fstl
sub
mov
adc
xchg
lcall
push
fnstenv
sub
icebp
fs
cmp
loopne
mov
sti
pop
or
cmpl
sbb
push
call
aaa
sub
ljmp
push
shl
cld
scas
jo
sti
xchg
pop
jb
iret
adc
push
mov
repnz
out
std
cltd
test
sbb
push
clc
mov
outsb
subl
sar
push
xchg
xchg
clc
xor
push
lahf
outsl
mov
jecxz
and
in
call
daa
pusha
lock
in
jnp
mov
mov
lret
outsl
xchg
sub
jbe
inc
dec
ret
and
idivl
adc
fildl
sbb
in
pop
insl
mov
out
mov
arpl
xchg
add
gs
sbb
cmpxchg
or
je
icebp
hlt
scas
adc
fnstenv
pop
jb
sarb
push
shrl
xor
in
addl
push
adc
imul
jmp
pushf
dec
sbb
mov
mov
in
or
mov
push
repz
popa
in
repnz
push
stos
cltd
out
adc
pop
popf
out
cmp
popf
aaa
push
fidivl
popa
outsb
insb
inc
mov
stc
or
dec
lock
mov
mov
cltd
sbb
cmp
addr16
sub
mov
mov
inc
adc
mov
stos
mov
jbe,pn
inc
jge
inc
popa
sbb
ret
ja
lcall
mov
fimull
mov
or
sbbb
sub
xchg
add
fnsave
cli
xlat
sub
dec
lcall
shll
ja
cmp
ret
in
pop
cmp
adc
cmp
and
mov
xor
arpl
pop
inc
in
dec
aaa
add
mov
push
sub
inc
sub
fcomps
cmc
dec
jl
mov
cmp
imul
jae
loope
mov
jno
sbb
sub
mov
sub
xchg
mov
subl
or
sub
adc
test
fstl
lcall
imul
gs
subl
push
testl
loop
jno
dec
subb
pop
adc
or
fsts
stos
mov
add
adc
js
mov
cmp
xor
dec
jp
sbb
cmp
pop
pop
dec
shrl
or
pop
mov
jge
lods
cmp
jle
dec
dec
mov
sub
push
imul
add
arpl
pop
or
mov
xchg
sub
test
popa
outsb
xchg
inc
jae
je
and
aaa
cltd
out
mov
cmp
mov
mov
xchg
sbb
inc
jns
movsb
cwtl
ds
and
mov
jb
cmc
nop
pop
push
loopne
inc
pop
int3
lret
add
fstps
lds
enter
ret
scas
packsswb
sbb
pop
rcrb
jg
jmp
jge
jne
and
xchg
pop
and
pop
int3
dec
mov
add
adc
sub
pop
mov
sbb
imul
cwtl
shl
fisubs
shr
sub
das
jmp
mov
inc
adc
cmp
inc
enter
loopne
sub
sub
xor
jmp
repnz
or
add
pusha
scas
sbb
imull
incl
fxch
push
es
sarb
push
lahf
mov
jae
and
sbb
fwait
jp
pop
push
fs
dec
cmc
out
dec
mov
push
mov
mov
js
jge
adcl
jl
add
cmc
loopne
ja
inc
mov
pop
lods
in
mov
das
cld
mov
imul
cld
pushf
mov
sub
fbstp
inc
jmp
notl
cvtpi2ps
adc
scas
push
sbb
mov
fiaddl
popf
outsb
mov
or
das
xchg
fcoml
sahf
rcll
aas
jg
xchg
das
inc
aaa
sub
sbbb
cmp
std
aas
sahf
cmp
jne
dec
mov
sbb
aam
subb
shrl
fnsave
lods
ds
mov
lods
lods
icebp
cmp
insl
xchg
mov
sbb
push
ja
std
out
push
cmc
dec
cld
shrb
xor
fmull
pop
into
out
dec
cmp
adc
dec
into
shrl
or
mov
sub
push
in
lds
push
mov
push
dec
push
sbb
sub
mov
leave
and
outsl
xor
jnp
xchg
lret
cmp
wrmsr
leave
sub
call
xchg
or
insl
and
outsb
lds
dec
jle
repnz
dec
aas
cli
arpl
mov
test
fistps
iret
cli
lods
loope
sbb
push
mov
inc
outsb
rorl
mov
or
jb
xor
and
dec
shlb
push
inc
mov
sub
lret
lahf
outsl
xor
bound
adc
jmp
int3
lods
in
cld
xchg
hlt
xor
pusha
lock
adc
push
cmp
jle
pop
push
mov
add
jmp
sbb
out
frstor
outsb
adc
pop
mov
push
icebp
rorb
sub
add
and
sub
or
cltd
insb
xlat
and
ds
les
push
inc
inc
and
and
addr16
xchg
and
cli
or
xor
sti
pushf
scas
repz
inc
xor
stos
dec
push
mov
add
mov
xor
clc
push
inc
jmp
cli
xor
ss
inc
enter
sbb
pusha
lods
pusha
pop
movsb
pop
inc
pop
mov
aaa
dec
inc
mov
jne
add
xor
mov
pusha
mov
ret
sbb
and
push
adc
add
scas
and
mov
xor
sub
inc
inc
adc
dec
sbb
mov
mov
outsl
les
lods
les
cmp
aas
mov
push
sub
xchg
scas
cmp
int3
add
mov
fsubrl
shlb
int3
out
sbb
fsubs
jns
scas
xchg
mov
adc
pop
push
xlat
xchg
inc
mov
lock
mov
jmp
mov
out
adc
dec
loopne
add
popa
mov
sub
jnp
sub
mov
sub
sbb
lahf
mov
mov
xor
mov
xor
fisttps
xor
mov
or
ret
popf
ret
aaa
test
mul
data16
inc
sub
sti
popf
push
sbb
cmpsl
hlt
mov
mov
ds
loopne
lds
dec
scas
sub
xchg
loop
sbb
push
ret
push
xor
push
push
pop
out
push
push
adc
sub
xchg
jmp
jo
outsl
push
jmp
push
and
insb
xor
inc
loope
mov
jno
nop
mov
inc
fadd
bound
jae
arpl
jae
ret
cmpb
xchg
add
or
push
sub
insl
jl
sbb
inc
jg
jg
pop
test
stos
fiadds
sub
inc
sbb
mov
insl
pop
pop
jmp
xor
pop
stos
in
sbb
out
popf
add
mov
movsb
jecxz
lock
cltd
xor
jmp
std
jae
inc
adc
inc
cmpsl
or
lret
and
ljmp
clc
and
sbb
xor
in
and
iret
and
repnz
pop
jne
or
pop
xor
push
push
lea
cmp
int3
pop
mov
inc
iret
cmpsb
lret
push
out
jp
pushw
shrb
cld
or
jb
sub
inc
rcll
xor
out
inc
ret
mov
push
scas
imul
cmc
lea
cmp
pop
mov
jle
mov
loop
popa
insb
cmp
adc
pop
mov
js
push
lods
sbb
pop
pop
lods
add
inc
push
or
inc
inc
lcall
cmp
sysret
lods
ret
cmc
ret
inc
paddw
addr16
jae
ficompl
orb
ficoms
pop
mov
sub
add
mov
sub
sub
xchg
fs
movsb
stos
repz
add
adc
xor
into
jg
ret
sbb
sub
insb
push
dec
xor
mov
into
xchg
data16
sahf
daa
sbb
sub
xchg
outsl
int
fidivrl
orps
mov
inc
mov
sub
xorl
and
push
mov
jle
pusha
pop
bound
cmp
out
icebp
stos
push
xchg
pop
adc
inc
xor
inc
cmpb
stos
sub
push
ljmp
cli
clc
daa
das
js
sub
and
pushf
sbb
scas
in
idivb
or
rcpps
fstpl
sbb
sbb
mov
mov
inc
cmp
loop
push
daa
out
lea
repz
push
fisttps
jg
or
fstpl
ret
cmp
sub
js
jns
stos
jle
or
aaa
xor
mov
adc
inc
lcall
sbb
mul
xchg
cmpsb
cwtl
cmp
adcb
fisttps
ss
loope
cmp
mov
addl
lea
adc
mov
xor
xchg
push
inc
or
outsl
sbb
aam
cmp
or
push
call
inc
inc
iret
fadds
lods
scas
test
xchg
push
fwait
lret
push
dec
insb
xchg
or
xchg
sbb
andl
repnz
jb
xchg
orl
mov
jb
inc
xor
sub
sub
clc
mov
dec
ret
lods
add
mov
push
dec
dec
in
into
pop
sahf
jmp
push
les
dec
dec
push
add
sub
jp
mov
jle
xchg
jecxz
pop
cmp
test
lods
fdivrp
inc
pop
cmpsb
fcompl
inc
mov
xor
mov
mov
aad
sbb
pop
pop
dec
addb
add
pop
cmc
in
pop
jecxz
xlat
add
pushf
cmpsl
cld
addl
and
insb
cltd
das
in
cli
mov
mov
fst
push
jb
cmp
mov
insl
sbb
adc
mov
int3
loope
add
insl
jno
in
data16
fcmovnbe
imul
cmp
jmp
fwait
fs
ret
hlt
mov
push
ret
fbld
daa
mov
jp
mov
lret
fs
cmpsb
popf
cld
iret
mov
repnz
xchg
xor
cli
xor
sub
movsb
jg
movsb
and
in
sti
test
sbb
push
fistl
sub
ljmp
test
jmp
mov
or
mov
adc
add
mov
cmpsl
ljmp
out
es
mov
insb
xlat
and
sub
mov
shrl
pusha
fildl
in
enter
pushl
daa
and
lock
imul
loopne
in
dec
adc
fists
les
sti
cli
sub
mov
shl
adc
je,pn
cmpsl
lret
xor
dec
mov
mov
push
xor
mov
mov
dec
push
mov
inc
stos
pop
sbb
and
xor
jl,pn
mov
clc
xchg
sbb
jmp
subl
and
push
sti
adc
mov
mov
or
movsb
cmp
jg
cltd
nop
fsts
push
pop
push
push
add
and
sub
jb
aam
incb
sbb
mov
inc
add
insl
mov
or
sbb
stc
ret
mov
sbb
pop
test
cmp
push
push
or
fisubrl
cmp
and
and
outsb
adc
jbe
sub
mov
push
mov
inc
mov
loope
mov
mov
stos
cmpsb
jle
push
cltd
gs
mov
jb
ret
rcll
cmpsl
xorb
jno
pop
sbb
mov
push
cmp
out
push
pop
aas
pop
push
push
mov
out
bound
push
and
and
inc
das
std
dec
push
pushf
push
and
mov
test
jge
and
cwtl
mov
push
test
outsl
mov
sub
lods
cwtl
lods
pop
jbe
arpl
jle
cmp
add
xchg
aam
or
push
imul
adc
sbb
mov
xchg
incl
xchg
jne
mov
mov
push
jmp
cltd
mov
lret
das
int
or
mov
dec
cmp
xor
xchg
or
cld
sbb
gs
push
adc
jbe
into
push
fsin
aas
mov
dec
sbb
inc
out
fistl
lret
jnp
loop
sub
js
push
or
roll
test
dec
inc
mov
lar
push
ret
and
data16
jno
sbb
sar
push
mov
adc
arpl
sahf
dec
push
sub
xchg
push
mov
pusha
mov
testl
cmp
push
sub
pop
movsl
mov
mov
mov
sbb
lods
adcl
push
jle
mov
das
aam
add
cmp
cmp
insl
jbe
mov
fs
sbb
icebp
imul
push
sti
cld
iret
ja
pop
mov
leave
dec
outsl
pop
or
mov
fbld
push
ds
insl
orb
fisubrs
cli
cmp
adc
xor
xor
sbb
adc
imul
test
jb
fidivl
or
or
or
fadd
icebp
rcll
jg
pop
jg
mov
and
sbb
sub
xchg
lret
mov
sub
mov
outsl
dec
mov
xor
push
adc
outsl
test
jb
fwait
popa
rdpmc
sahf
cmp
mov
aam
xchg
lea
adc
and
sbb
sti
out
adc
xor
adc
cmc
xchg
sbb
pop
test
lcall
addr16
mov
inc
cmpsl
loopne
aaa
cmp
mov
xor
xchg
int
mov
or
ljmp
aam
sub
and
aas
push
es
in
ss
jge
fcmovnbe
rcrb
and
movsb
aam
dec
or
icebp
mov
and
mov
rcrl
cwtl
and
ficoms
pop
push
movsb
mov
xor
or
jnp
pop
out
pop
loope
push
dec
mov
add
repz
push
fistl
lods
sarb
pop
adc
dec
rcll
sbb
nop
sub
jle
mov
cmc
adc
stos
movsb
jbe
cli
cmp
cwtl
mov
add
mov
dec
mov
mov
mov
jmp
int3
stos
out
out
xchg
es
mov
data16
xchg
adc
push
in
out
mov
cmp
rorl
js
xchg
test
dec
outsl
xchg
or
das
jl
test
add
xor
into
pop
rcrb
lock
lahf
dec
loop
dec
mov
lcall
test
mov
shll
gs
mov
negl
stc
sub
in
cmc
push
fs
xchg
cmp
ret
in
imul
fcoms
pop
push
inc
push
test
rcll
popf
push
fldt
cmpsb
cmp
push
mov
cmp
add
outsl
aam
stc
add
shl
into
dec
mov
add
in
cmp
dec
leave
ds
inc
pop
xchg
dec
pop
adc
add
lods
hlt
lret
int3
sti
dec
adc
mov
add
add
jae
std
adc
mov
test
pop
push
pop
mov
mov
lcall
jns
dec
adc
jmp
movsl
call
jle
clc
out
ss
mov
jo
test
mov
hlt
inc
inc
scas
mov
mov
inc
movsl
xor
push
call
pusha
pop
xchg
lcall
cwtl
and
or
das
and
pop
sbb
lods
mov
mov
inc
fisubrl
jmp
or
or
inc
adc
shlb
inc
into
pushf
jne
pop
mov
loopne
push
push
arpl
pusha
sbb
popa
out
mov
int
ja
jp
sub
or
test
std
push
cmp
mov
das
sahf
jp
es
in
pushl
cmp
fidivrl
dec
and
lret
jnp
gs
out
jmp
pop
jg
insl
fcomps
scas
or
ret
loope
shll
inc
push
adc
cmc
imul
jo
xchg
mov
mov
les
scas
fsubrs
ja
pop
mov
inc
popa
insb
shll
adcl
loopne
xchg
out
jnp
pushf
mov
aad
sub
pop
sbb
into
and
fnstsw
mov
aad
jle
ja
cmc
popa
inc
xor
sbb
mov
or
mov
cmp
negb
cmp
or
loop
jl
inc
loop
mov
aam
cld
mov
shrl
shr
mov
add
test
sbb
outsb
add
movl
sub
sub
pop
loope
cmp
daa
mov
mov
pop
adcl
repz
icebp
cs
test
ljmp
mov
mov
rcrl
cmpl
xlat
int
insb
sub
mov
loopne
dec
addr16
clc
jmp
pop
mov
push
push
mov
rclb
xchg
cmp
push
mov
bound
shrb
out
or
inc
das
dec
call
mov
mov
es
icebp
xlat
bound
xchg
in
lahf
rorb
clc
fcmovnbe
fsubl
adc
jnp
adc
dec
jno
pop
mov
mov
jb
dec
mov
les
cs
scas
mov
repnz
adcl
idiv
jae
xorb
sub
stc
scas
jmp
add
gs
dec
mov
lods
sbb
jg
shl
dec
cli
in
push
sti
sbb
das
mov
lods
xchg
cmpsb
jno
popf
cltd
js
mov
out
or
imul
cltd
insl
sti
inc
inc
xor
icebp
jbe
jg
add
or
push
data16
daa
leave
cmpsb
jo
sbb
push
add
aaa
add
scas
xlat
jno
xchg
cmpsl
sub
jae
dec
enter
imul
je
int3
xlat
andb
dec
setae
jns
ds
ds
cmp
inc
jg
xor
adc
push
into
jnp
sbb
cmp
mov
shll
leave
xchg
test
mov
push
js
mov
jae
stc
mov
in
fisubrl
shll
cmp
add
add
cmp
imul
inc
in
adcb
movsl
add
cmpsl
fldenv
rcrb
gs
aam
out
sbbb
and
or
cmpsl
mov
mov
lods
fistpll
rcll
out
cmpsl
imul
mov
lahf
outsb
sbb
cmpsb
mov
mov
lea
mov
aad
popa
cmp
sub
mov
cmpsb
lret
and
mov
lret
lods
jp
repnz
sahf
and
and
pusha
add
sub
leave
enter
frstor
push
aam
aam
jmp
imul
add
inc
mov
je
mov
jno
repnz
sti
xchg
xchg
jno
sbb
jns
dec
push
adc
mov
mov
cmp
movsb
mov
xor
add
das
xchg
imul
fistl
dec
mov
lds
fwait
sub
cmpsb
lahf
mov
fwait
mov
pop
rcrb
jbe
fmul
in
lds
pop
xor
xor
xor
mov
nop
pop
mov
push
orb
push
movsl
scas
cmp
aam
fisubs
sub
call
ljmp
dec
pmulhw
and
push
into
je
push
fsubs
adc
nop
loope
daa
cmp
inc
or
out
pop
mov
dec
jb
push
gs
stc
pop
jge
orl
pop
jo
lods
fsubs
cmpsb
les
mov
shl
jp
cmp
scas
pushf
ss
stc
scas
add
dec
or
and
pushf
int
pop
sarl
add
ffree
and
lcall
ret
jmp
and
stos
lret
push
jp
adc
xchg
shl
arpl
mov
hlt
xlat
xor
pop
test
mov
fisubl
pushf
rorl
shrb
xchg
mov
int3
xor
cmp
out
inc
push
addr16
push
orb
jae
out
mov
out
sbb
add
repnz
repz
imul
daa
cmp
xchg
cmp
in
das
push
jno
outsl
repnz
mov
insl
sub
inc
push
mov
push
pop
aas
enter
sti
mov
sub
iret
sbb
mov
dec
ljmp
push
pop
jne
movl
out
push
outsl
and
sti
mov
dec
or
sbb
adc
test
aas
inc
or
pop
mov
int3
dec
loopne
popa
push
cmp
push
xor
pop
or
aam
xchg
hlt
rclb
ljmp
pushf
or
movsb
add
loopne
cmp
jb
fnsave
pop
and
and
jmp
xchg
push
cli
dec
nop
dec
add
repz
insb
ljmp
fcmove
mov
aad
test
std
outsl
xor
fwait
add
push
mov
cmp
mov
mov
popl
std
jnp
rcrb
adc
movsb
lret
add
dec
adc
xchg
cmpb
pop
xchg
test
adcl
inc
lahf
mov
mov
jnp
mov
pop
xchg
testb
rorb
mov
fcmovnbe
pusha
push
pop
add
jle
les
aaa
vxorps
mov
xchg
jb
lahf
fidivrl
push
cltd
in
loope
sti
testl
add
mov
xchg
push
lret
outsl
nop
ss
and
pop
push
cmp
lret
cmp
mov
mov
or
rorl
inc
push
mov
pop
lods
scas
clc
sub
pop
int3
fisubrl
fs
or
inc
ss
add
mov
add
xchg
ret
pop
and
test
pop
mov
aad
mov
adc
add
test
lret
movsb
std
in
test
repz
inc
inc
mov
dec
cmpsl
sub
add
inc
or
movsl
xchg
rorb
mov
imul
lds
mov
sbb
dec
aam
fisttpll
dec
mov
rcll
add
inc
arpl
ss
sub
mov
adc
aam
in
mov
pop
stos
or
bound
mov
or
in
mov
add
fwait
cvtps2pd
push
ficomps
ret
aas
inc
scas
pop
jae
out
and
or
scas
lcall
ja
xchg
cmp
jecxz
stos
push
in
cld
mov
lahf
popf
outsb
ljmp
into
in
dec
and
sahf
rorb
test
sti
les
lods
fwait
daa
out
ja
mov
or
push
inc
out
dec
push
ljmp
sti
aam
lds
mov
test
sbb
or
in
sbb
jne
push
and
and
ret
idivl
sbb
pop
aad
adc
mov
xchg
dec
xor
xchg
cwtl
out
dec
xchg
addb
mov
pop
imul
iret
push
fs
je
aaa
in
push
lock
dec
jp
stos
jbe
cmc
repnz
test
mov
clc
jecxz
cmpsl
pop
pop
loop
std
daa
mov
popl
scas
mov
sbb
rol
scas
pop
xor
test
xor
push
or
push
jbe
fstpl
ljmp
negb
push
push
sub
inc
cwtl
pushf
dec
mov
shrl
arpl
loopne
mov
adc
outsl
into
movsl
pop
mov
sub
rcll
mov
ror
and
push
mov
mov
imul
fs
into
sbb
adc
xchg
or
pop
fldenv
in
fidivs
push
jmp
push
push
push
es
insl
cmp
lret
ret
sub
into
das
imul
add
mov
mov
inc
and
and
mov
or
jmp
fwait
mov
popa
and
sbb
cmp
enter
push
pop
xchg
pop
inc
out
jbe
cmp
add
test
addr16
mov
xchg
filds
movsb
data16
or
or
dec
jbe
shll
sbb
pop
sub
cmp
mov
add
jmp
push
push
xchg
cmp
cmc
les
ja
insl
add
jb
out
ret
inc
mov
std
fiaddl
scas
xor
lds
call
ds
push
inc
stc
sbb
push
aad
mov
es
movb
mov
mov
hlt
cltd
loop
sti
fldl
inc
int3
stos
add
mov
std
leave
mov
jae
adc
icebp
int
mov
jnp
rcl
xor
rcl
xchg
paddw
aad
js
cmp
in
ds
hlt
pop
jne
nop
sub
cld
addr16
jle
sub
lcall
inc
popa
cmpsl
hlt
out
mov
ficomps
sub
aam
pop
pusha
push
adc
xchg
mov
lcall
dec
std
and
adcl
lahf
outsw
and
xlat
jns
repz
inc
lret
inc
ljmp
pop
add
mov
adc
into
mov
mov
xchg
dec
mov
cmp
xor
xor
into
and
sub
xchg
xor
ret
ja
jle
mov
xchg
ja
push
popa
pop
fldl
inc
into
lahf
jbe
inc
movsl
adc
lcall
inc
dec
rcr
jecxz
notl
sbb
daa
cmp
jle
incl
inc
mov
in
repz
adc
scas
mov
push
in
popf
inc
lret
xlat
dec
shlb
fisubs
cltd
or
xlat
jnp
aam
mov
jmp
inc
lods
push
movl
push
mov
jbe
xchg
xlat
and
popa
insb
ficomps
aaa
lahf
inc
lea
add
mov
inc
orl
xor
arpl
scas
xchg
lahf
jge
push
leave
sub
inc
cmpsb
and
fst
adcl
ja
insb
jge
pop
pop
jnp
inc
dec
push
pop
mov
and
dec
sbb
aam
sbb
movsl
xchg
dec
ja
cmpsb
inc
mov
lea
aam
outsl
out
insb
mov
pop
data16
mov
fisubrl
jns
jecxz
das
stos
cwtl
sub
cltd
lret
hlt
xor
cwtl
push
idivl
fmuls
sub
xor
inc
bound
ret
or
divl
fldcw
jecxz
es
xor
fwait
stos
sbb
pop
enter
in
test
sub
js
mov
dec
mov
es
cwtl
iret
es
loop
fiadds
icebp
cwtl
adc
ror
jecxz
mov
stos
xchg
xor
sti
jb
cltd
fidivrs
jle
insb
or
and
mov
cmp
sbb
push
mov
sbb
push
mov
rcrl
and
add
mov
add
jae,pt
test
adc
in
jnp
mov
enter
pop
mov
dec
loope
aaa
shll
pop
push
ds
mov
or
imul
lret
sbb
movsb
sbb
pop
in
jl
decl
scas
lods
cmpsb
pop
sub
push
neg
call
inc
add
mov
jl
sbb
subps
jnp
cwtl
push
loop
cmpsl
pop
xor
fiaddl
fstl
outsb
or
jl
loopne
inc
and
fwait
pop
negl
dec
mov
aam
notl
ljmp
icebp
int
adc
and
cli
inc
or
rorl
jl
movsb
cmp
popa
movsb
out
mov
mov
xchg
xor
cld
xlat
cmp
shrl
cmpsb
lcall
jne
pop
fldl
add
notb
jae
xchg
jne
dec
fsts
insb
xchg
xchg
pop
mov
xchg
push
shr
addb
adc
pusha
push
mov
fisubs
add
mov
push
jecxz
xchg
shll
and
sub
rol
sti
push
mov
xchg
scas
lock
jecxz
cs
push
mov
mov
dec
rcrb
in
outsl
loopne
cmp
out
nop
fldt
xor
repz
sar
push
xchg
lret
mov
test
aam
into
fs
and
ret
call
imul
sub
testl
push
fcmovnu
mov
mov
xlat
cmpsl
into
lret
fstpl
aaa
sub
inc
and
xchg
mov
push
pop
sbb
int
push
dec
loope
aam
push
jne
out
stos
sahf
xor
stc
inc
clc
bound
int3
add
out
in
gs
pop
add
in
mov
imul
push
pop
in
mov
pop
int
test
jp
xchg
xor
cmp
jno
stos
fs
lret
push
test
stos
push
mov
fistpll
add
fdivrl
push
cmp
lahf
cld
push
dec
jbe
sub
mov
mov
push
fldl
sub
xchg
dec
or
mov
or
mov
lea
or
or
dec
push
push
movsb
out
sub
adcl
cmc
xor
sub
ret
cwtl
cmc
call
push
jb
mov
xchg
int
pop
adc
jl
xchg
add
inc
sub
cmp
mov
xor
int3
rcrl
sub
xor
hlt
imul
sbb
lret
sbb
testb
int
mov
mov
sub
ror
lods
ret
sub
mov
test
aaa
xor
dec
std
or
xor
aas
stos
mov
cmovo
sbb
cwtl
jne
sub
xchg
imul
imul
jl
aaa
mov
push
xor
cmpsl
int
and
test
cltd
fwait
sbb
or
lret
jge
sti
test
push
push
leave
mov
mov
xchg
mov
add
mov
mov
stc
pop
xchg
mov
roll
ds
sbb
jge
inc
icebp
sub
cli
mov
jl
js
sub
xor
imul
pop
jge
sbb
pop
inc
sbb
aam
lret
push
insl
sti
frstor
mov
rorb
out
in
xor
mov
aad
out
dec
cld
out
subb
xchg
lods
xor
dec
and
out
dec
and
cmc
sbb
sbb
mulb
dec
js
pop
sbb
and
jle
fnsave
sub
sub
mov
loopne
xor
sbb
das
mov
ffree
lock
jp
xchg
sti
out
fidivs
dec
xchg
push
fldl
loope
hlt
cmpsl
lock
inc
pop
jle
xchg
stos
out
mov
push
sbb
xor
pushf
pop
rolb
jecxz
popa
out
mov
ds
lret
and
lcall
int3
dec
loope
ljmp
ja
cs
icebp
das
mov
push
dec
loope
mov
pop
inc
jge
xchg
aas
add
lea
xchg
in
or
adc
jo
or
jmp
adc
inc
ret
in
jp
or
cmpsl
in
cmp
call
outsb
cli
bound
push
jb
push
aam
insl
scas
inc
push
mov
push
nop
jo
es
mov
ret
in
xchg
sbb
jae
ss
sbb
mov
jmp
dec
lretw
bound
inc
mov
mov
data16
ficompl
add
fldcw
stos
addr16
xchg
pop
add
les
les
pop
call
sbb
jmp
push
mov
xchg
xor
int
sbb
out
inc
in
cmp
and
pop
or
test
aad
arpl
push
jmp
jae
shlb
rcll
pop
shr
out
jecxz
mov
mov
jg
xchg
ds
icebp
imul
aad
adc
sub
in
orl
sub
add
dec
ljmp
ja
dec
cli
xor
inc
movsl
movsb
mov
andl
adcl
pop
fstl
les
xor
push
mov
daa
daa
push
cltd
push
dec
roll
sbb
rorl
push
mov
rolb
cmp
fwait
jmp
shl
mov
add
push
mov
push
lds
sbb
mov
orl
xor
jecxz
outsl
sbb
fnstsw
mov
jae
adc
push
cmpsl
sti
push
imul
pop
icebp
stos
fisttpl
jb
stos
cmpl
mov
mov
mov
mov
stos
movsl
pop
cmpb
pop
mov
out
es
imul
bound
add
stc
mov
xor
pop
inc
push
pop
arpl
sub
btcl
push
mov
xchg
fsubrs
movsb
ljmp
mov
cmp
sub
cltd
sub
decl
adc
mov
loopne
in
in
pop
cld
cmpsb
ds
sub
cmp
dec
push
xchg
jns
fidivs
nop
addr16
mov
stos
js
mov
adc
outsl
mov
cld
inc
push
jl
xchg
mov
xchg
int3
fidivl
fwait
mov
mov
cmpsl
insl
stc
jns
cltd
xor
push
and
or
mov
lret
push
fsubs
xchg
sub
int3
rorl
lea
sbb
fwait
jns
ds
je
push
pop
fsts
stos
mov
fsub
popf
push
mov
adc
mov
or
mov
decb
inc
add
sub
lods
mov
xlat
xorb
jno
sub
cld
inc
jbe
je
in
sahf
clc
aas
iret
mul
jne
lds
repnz
data16
stc
loop
outsb
lret
or
sbb
loop
pop
imul
aam
inc
mov
rorl
test
ja
push
and
and
pop
lret
mov
loop
jle
mov
popf
int3
mov
dec
daa
in
shlb
lds
lds
xchg
not
push
les
aad
sbb
jns
js
test
loopne
repz
and
mov
xlat
pop
outsb
mov
lahf
sub
jmp
pop
cmc
jne
addb
ffreep
push
mov
ret
pusha
and
mov
push
dec
inc
pop
leave
scas
jbe
std
dec
ss
or
dec
pop
dec
les
jbe
icebp
or
xchg
and
stos
xlat
cmp
aam
xor
in
repz
repnz
add
mov
xchg
sbb
mov
push
fcoml
or
push
xchg
and
outsl
inc
xchg
cmpb
jp
mov
int
cwtl
adc
inc
js
push
sahf
pop
inc
hlt
adc
cmp
arpl
ret
sbb
ja
imul
dec
adc
mov
pop
iret
mov
pop
pop
mov
aad
sbb
mov
cmp
ret
add
mov
inc
push
leave
loop
movsb
or
adc
repnz
xchg
addr16
xor
je
ffreep
xor
cmc
pop
stos
sub
cmp
cmp
cmpl
mov
movsl
dec
cmp
mov
xchg
mov
shrb
add
push
scas
das
or
sbb
mov
adc
push
jge
popf
sub
pop
push
dec
or
lock
sti
mov
bound
mov
rorb
or
mov
cmp
or
popa
insb
cs
inc
out
mov
and
lret
imul
shlb
int3
pop
jg
fnstsw
in
pop
jg
push
inc
pushf
repz
fistl
test
ds
lock
pop
fs
push
xlat
fcomi
inc
inc
pop
adc
inc
xchg
addr16
fiadds
push
jbe
sarl
pop
ss
cmp
mov
and
fmuls
mov
pop
sti
inc
jl
aad
ret
out
fstpt
cmp
pop
pop
push
test
pop
sti
andl
dec
rorb
mov
cli
or
ja
inc
mov
inc
or
sub
pushf
push
cmp
xor
push
or
repnz
fdiv
jo
rep
scas
mov
clc
push
gs
jno
add
inc
push
aaa
lods
into
pop
pop
or
ds
pop
in
loope
add
daa
jge
mov
cli
jb
add
xchg
adc
daa
cld
ficoms
out
sbb
xchg
jle
pushf
mov
pop
xor
popa
cmp
movsl
or
aam
push
lds
fsubl
or
mov
add
test
call
xchg
gs
into
or
xorl
aam
push
or
or
cmpsb
jecxz
ljmp
push
adc
mov
mov
mov
or
push
movsl
jecxz
and
inc
push
pop
dec
fimull
inc
inc
and
clc
ljmp
cld
iret
sub
push
adc
shll
fdivl
aam
or
into
jno
les
mov
sub
cmp
or
imul
pop
and
jl
clc
sar
dec
setnp
pop
or
add
or
lock
xor
sti
cmp
xor
xlat
pop
iret
lods
hlt
xor
add
cmp
inc
mov
sub
inc
scas
and
repnz
arpl
pop
icebp
adc
push
mov
jnp
xor
add
and
mov
xchg
fstpt
imul
push
push
push
xchg
call
mov
mov
cmp
add
pusha
adc
xchg
insl
mov
push
push
cmp
cwtl
xchg
ljmp
enter
push
cmpb
icebp
push
in
xchg
ss
dec
mov
jge
fisttpll
or
push
xchg
inc
in
fldcw
insl
out
call
loope
jo
loop
push
notb
pop
sahf
sahf
orb
inc
jae
adc
popf
dec
jnp
adc
idiv
jge
pop
ljmp
mov
mov
xchg
push
xor
ret
test
cmp
push
or
stc
jb
sub
loopne
jp
push
cmp
mov
popl
push
scas
add
pop
sub
addr16
sub
mov
jle
xchg
aaa
icebp
aas
into
repnz
jle
repnz
call
xchg
dec
xchg
and
add
cmp
adc
divb
dec
or
adcb
pop
js
jl
push
xor
pop
dec
mov
mov
add
fwait
and
pop
inc
ret
pop
xor
or
lret
mov
cld
xor
or
jge
pop
xchg
jne
pop
cmp
insb
cmpsl
xchg
push
pop
je
mov
sbb
mov
and
and
mov
call
or
pusha
cmp
or
xlat
hlt
add
rcrb
in
xor
das
fbld
cmp
scas
in
xchg
aaa
xor
mov
mov
cs
add
dec
je
cmp
xchg
test
hlt
push
mov
xchg
test
jne
test
xchg
adc
jb
flds
in
daa
pop
js
test
mov
mov
mov
inc
dec
pop
xchg
push
std
bound
ret
push
adc
and
mov
cmp
mov
push
or
mov
sbb
lret
xchg
dec
cli
call
cld
xchg
loope
or
pop
adc
inc
sbb
fsub
sbb
fnstsw
pop
mov
ss
xchg
hlt
test
dec
test
push
bnd
push
movsl
jne
stc
movsb
popf
mov
js
mov
dec
popf
cmp
outsb
mov
arpl
popa
repz
insl
inc
inc
mov
lods
xor
or
add
loop,pn
imul
sbb
push
mov
outsb
xchg
idivl
cld
xor
mov
popl
out
push
testb
adc
xchg
mov
into
sti
jecxz
adc
lea
jno
push
adc
pop
adc
push
sbb
xchg
negb
inc
outsb
jo
pop
dec
inc
mov
dec
mov
cmp
mov
stc
js
sub
sbb
cmpb
xchg
sub
mov
int
call
pop
arpl
rcrl
in
pandn
dec
les
flds
insb
cmp
int3
outsb
rcrb
jmp
cld
dec
into
fbstp
in
popa
rorb
push
sub
dec
jne
ret
bnd
scas
adc
shll
icebp
cmp
sub
icebp
repnz
pop
sbb
push
out
decb
xchg
outsl
fcmovb
sub
xchg
movsb
stc
hlt
add
and
sub
cmpsb
lahf
je
and
loop
sub
jecxz
and
add
jp
sub
data16
dec
sub
adc
ja
dec
lcall
rorl
mov
divl
xchg
mov
paddusb
and
sahf
call
cmp
push
andl
mov
add
scas
xor
aam
push
mov
mov
dec
fs
in
shrb
imul
dec
repnz
and
bound
xor
jmp
test
test
add
mov
xchg
scas
fmull
sub
imul
cli
pop
aaa
popa
push
xorl
gs
repnz
fs
scas
jle
pop
inc
or
popf
push
in
addr16
pop
inc
movsb
arpl
jno
dec
cli
in
test
jmp
push
mov
jle
pop
push
push
inc
inc
ds
je
les
dec
mov
jae
inc
je
nop
inc
es
mov
pusha
insl
mov
push
xchg
fstps
insl
mov
mov
xor
insl
bound
in
sbb
inc
inc
dec
sub
jo
mov
inc
adc
loope
or
mov
outsl
cs
in
pop
outsb
sub
addl
ja
jns
xchg
add
lods
imul
jae
mov
xor
ljmp
bound
and
lock
sti
pop
loopne
or
shrl
arpl
test
fs
stc
jmp
sbb
insb
lock
repz
or
out
mov
jno
jns
je
insl
cmp
mov
call
mov
push
mov
add
fisttpl
dec
dec
test
pop
jl
adc
pushf
add
mov
ret
stos
mov
add
loopne
sbb
fcomi
loop
and
and
dec
xchg
ret
shll
arpl
out
mov
adc
hlt
outsl
xchg
mov
sub
push
hlt
jo
and
inc
sub
aas
pop
sub
arpl
mov
cmp
xchg
jl
inc
xchg
ficoms
jnp
sbb
ret
aas
pop
lahf
mov
mov
repz
cmp
fwait
xchg
stos
popa
adcb
mov
jmp
sub
fcmove
repz
pop
cmp
mov
cmp
jbe
mov
daa
sahf
push
std
add
mov
sar
cld
lcall
sub
mov
pushf
dec
mov
or
push
hlt
mov
pusha
jl
clc
lahf
enter
sub
cmp
xor
xchg
sbbl
les
sti
inc
xor
mov
shlb
push
neg
les
mov
popw
adc
cmpsb
adcl
fidivs
pcmpeqd
pop
std
je
xchg
pop
sub
and
or
mov
insb
pop
xchg
bound
dec
xchg
cmp
outsl
in
and
fimull
fcomp
scas
and
leave
jae
xor
call
fisubs
cmc
mov
ficoml
repz
jp
notb
lahf
dec
jecxz
cmp
and
xchg
ljmp
fwait
jl
lcall
mov
hlt
cmpsl
addr16
cmp
out
xchg
sbbb
ja
test
addb
xorl
test
sub
sahf
xor
aas
pop
push
insl
lock
out
pop
pop
sarl
sbb
andb
ficomps
sub
fmull
int
lods
movsb
mov
aad
dec
add
imul
push
mov
mov
jmp
int
dec
jecxz
push
add
popf
cmp
test
or
add
cmp
dec
shrb
cld
daa
sbb
or
in
stc
jmp
mov
xlat
sbb
push
lds
cltd
cwtl
dec
mov
enter
jbe
dec
test
and
shl
cld
lock
fstl
jne
hlt
in
fdivrl
xor
xchg
add
jecxz
sub
popa
or
negb
xchg
fcmovu
dec
dec
sbbl
xchg
cmp
lcall
adc
pop
cmc
addr16
mov
inc
mov
adc
or
and
mov
cmp
and
lock
sbb
scas
jge
pop
aad
xchg
shll
fincstp
fmuls
xchg
push
sarl
fadds
pop
rorl
add
scas
movsl
sarl
or
in
mov
adc
dec
nop
sub
popf
iret
lret
cmp
pop
sbb
sub
fnstsw
scas
and
mov
inc
add
mov
hlt
xchg
loopne
pop
outsl
sub
es
and
les
push
lea
fnsetpm(287
xchg
and
xlat
inc
add
or
adc
and
inc
pop
nop
or
add
sahf
xchg
xchg
rol
adc
scas
lret
jns
rol
mov
jle
sbb
repz
nop
lcall
lods
adc
xchg
pop
sbb
adc
xchg
push
jne
pop
clc
pop
arpl
cli
dec
add
je
pop
dec
stc
mov
add
or
sub
sbb
insl
inc
mov
mov
mov
shlb
sub
xchg
sbb
ja
pop
out
dec
xor
and
cld
in
out
mov
sub
push
and
dec
mov
sub
push
jno
sbb
jo
insb
clc
jb
pop
int
jae
sbb
ret
imul
mov
inc
inc
lahf
xchg
lds
insb
neg
xor
gs
hlt
and
int3
lret
out
stc
inc
inc
mov
imul
cmp
cmp
and
out
mov
mov
xor
mov
rol
loopne
cmp
gs
mov
push
das
push
dec
mov
test
fstpl
sarl
xor
inc
jg
jne
jp
xchg
xlat
xor
cmp
and
adc
sub
mov
jmp
pop
lds
add
cmpsb
cmp
js
dec
mov
call
retw
adc
dec
mov
or
mov
addr16
mov
cmp
insl
xchg
addr16
pop
jecxz
es
inc
inc
or
xor
pop
dec
cltd
add
sbb
enter
mov
xor
xchg
jp
faddl
rcrl
pop
cmc
lock
lcall
xor
mov
jnp
xor
add
cs
add
xlat
mov
rcrb
pop
rolb
or
xchg
in
add
inc
mov
ja
pop
mov
insl
pop
push
movsb
es
sbb
inc
test
scas
push
push
flds
in
push
adc
mov
adc
daa
repnz
out
inc
cmpsb
arpl
jae
dec
sbb
in
mulb
aas
push
xchg
pop
nop
das
pop
sbb
stos
outsb
fmuls
fwait
loopne
xchg
cmc
sub
jae
or
xor
enter
cmp
jmp
fwait
cmp
mov
inc
xor
lds
shll
arpl
jge
and
je,pn
mov
loopne
and
or
pop
pushf
lea
lcall
mov
int
lock
addr16
add
js
pop
fstp
cmp
mov
testb
inc
and
out
lock
stc
lods
dec
push
cmp
mov
adc
fs
clc
add
cld
movsl
int3
mov
stc
ja
cmpsl
inc
pop
xchg
fistl
jno
sub
jecxz
jmp
movsb
mov
lods
je
add
xchg
scas
sbb
mov
test
rolb
inc
sbb
rcrb
mov
xchg
out
dec
mov
xor
int
cmpsb
lcall
lcall
loopne
add
xlat
mov
cmp
adc
push
adc
clc
ja
es
movb
test
cmp
jp
or
insb
jl
add
lret
insb
add
int3
pushf
cli
idivb
xchg
xlat
flds
dec
cmp
scas
das
loopne
jmp
cmp
icebp
mov
sub
mov
sbb
mov
lahf
sub
pop
test
test
sbb
jge
and
pop
pop
pop
fistl
xor
jle
pop
lds
js
mov
sahf
mov
push
fcomps
scas
sub
icebp
das
clc
mov
sub
and
lock
mov
cmpl
cmp
add
fwait
arpl
cwtl
jns
jae
mov
loope
sub
iret
xor
aam
lods
push
and
inc
and
pop
pop
fsubr
ljmp
nop
jne
sub
shrb
xchg
xor
shll
pop
adc
jns
inc
addr16
and
mov
mov
cmpsb
repz
addr16
mov
rcrb
cld
bound
out
mov
ja
enter
aam
mov
dec
lds
sbb
pop
int3
pop
aas
mov
aaa
inc
push
pop
aad
jno
pop
pop
add
and
lret
or
ljmp
les
les
hlt
daa
mov
rorl
dec
push
or
jl
inc
cmp
jno
insb
cmp
cmp
mov
or
lds
jmp
ljmpw
out
sbb
pop
or
fildl
push
sahf
xchg
jp
push
push
pop
and
push
xchg
addr16
test
stos
sbb
mov
aas
rorb
mov
stos
not
mov
pop
aam
out
out
xchg
rcr
or
xor
jbe
xchg
cmp
aam
jg
mov
and
xor
scas
inc
dec
xchg
mov
aaa
sbbb
sbb
cmp
cmp
or
xchg
out
mov
xchg
mov
push
cs
addb
je
imul
add
xchg
clc
iret
jo
xchg
mov
sbb
mov
shll
inc
aam
add
bound
aaa
ret
jl
dec
fldcw
rorb
push
insb
insl
stos
in
sub
pop
push
loope
dec
cltd
out
dec
hlt
icebp
sub
xchg
insb
idivl
add
lcall
pop
hlt
lea
aaa
xor
jne
lock
bound
lods
sahf
mov
mov
loop
jbe
sub
adc
jno
sarl
pop
out
or
test
add
or
pusha
call
pop
adc
add
mov
icebp
jg
dec
push
xchg
add
xchg
pop
in
push
in
and
std
jle
cmp
cltd
pop
popa
sbb
movsb
inc
pop
push
cltd
inc
test
mov
lods
cld
jge
and
and
jmp
inc
xor
push
pop
je
repnz
xchg
jl
sar
outsl
fs
push
movsb
mov
push
inc
int3
mov
pop
ljmp
push
cmpsl
xor
repz
jg
lods
cs
sti
and
mov
pop
push
test
call
stos
movsb
add
in
jp
pop
and
loope
cmc
or
pop
sub
fxch
js
adc
sub
test
dec
mov
fsubrl
sbb
int
inc
sub
mov
repz
xor
into
xor
mov
xchg
clc
mov
scas
push
add
or
sbb
es
mov
nop
mov
sbb
add
jp
fbld
ret
mov
push
dec
and
pop
jo
fcompp
dec
xchg
push
push
xor
sti
mov
ja
xor
ljmp
and
hlt
inc
adc
into
xchg
pop
mov
cwtl
cltd
insl
or
jp
pop
cmp
jb
jecxz
mov
jecxz
test
pop
test
push
divb
jb
xchg
adc
out
sub
sbb
nop
add
adc
daa
xchg
shrb
xlat
daa
mov
lods
aam
lods
push
push
test
xchg
insb
pop
jo
xchg
stos
sar
addr16
add
xor
push
imul
push
icebp
adc
sarl
adc
jecxz
aaa
sbb
repz
pop
fmull
and
loop
lret
cmc
pop
xor
ja
insl
divl
mov
dec
add
mov
xchg
jns
inc
mov
xchg
cltd
push
aad
frstor
xchg
mov
pushf
pop
test
fwait
xchg
lahf
dec
mov
cld
repnz
add
inc
in
jg
mov
cmc
mov
outsb
and
ret
int3
orb
shl
pusha
and
and
clc
cmp
int3
inc
jo
stos
mov
jp
and
in
insl
jg
fsts
mov
and
sub
or
mov
dec
pop
inc
ja,pn
in
jnp,pn
shlb
add
add
js
mov
scas
dec
bnd
and
iret
inc
jl
pop
mov
jae
popa
mov
daa
imul
stos
jp
fisttps
loopne
inc
mov
jp
push
lcall
lret
popf
std
icebp
cmc
mov
pop
adc
pushf
lahf
push
adc
jmp
xchg
sub
cmpsl
jle
hlt
ret
insl
rclb
jb
jmp
xchg
mov
and
rorb
lret
ss
scas
jb
add
ret
xchg
dec
repz
sbb
inc
xchg
push
adc
lods
jmp
pop
aaa
cmc
arpl
cmp
cmpsb
cmp
fdivl
clc
or
jno
xchg
fmull
in
in
pop
sub
xchg
inc
adcl
sbb
rcll
fmul
je
scas
xor
testl
into
and
mov
xchg
and
lret
repz
fcmovbe
jp
mov
jb
out
loope
into
lret
and
arpl
lods
lret
lcall
xchg
ljmp
movsb
mov
inc
xlat
push
xchg
testb
mov
fdivrs
fstps
mov
mov
xchg
mov
inc
fs
dec
dec
testb
mov
mov
jecxz
adc
pop
imul
dec
les
mov
repz
and
out
gs
jmp
and
enter
test
mov
arpl
insb
add
fucomp
out
dec
adc
sub
jne
lahf
movl
in
pushl
mov
jl
or
lret
cmp
xchg
cmp
push
push
jae
imul
iret
aaa
cmpsl
imul
test
adc
daa
jns
push
sub
mov
mov
or
pop
push
imul
xchg
xchg
inc
aaa
ret
sbb
mov
and
int
inc
push
push
mov
scas
fucomip
jne
jmp
fs
loope
daa
jp
popa
add
test
shl
inc
mov
and
mov
ss
cmp
aad
xchg
call
mov
and
pop
lods
add
adc
pop
sub
or
das
rcll
popf
and
and
or
mov
xor
sti
push
add
cmp
pushf
jmp
push
mov
rclb
inc
adc
imul
sbb
sbb
popf
rcrb
scas
cltd
divb
aas
lahf
adc
imul
imul
adc
mov
cli
or
mov
sbb
mov
cltd
rcll
or
or
dec
push
lods
nop
inc
cld
jne
xchg
ffree
cmp
das
jle
mov
dec
out
push
hlt
push
jne
lods
adc
pop
fs
sti
data16
icebp
aad
xlat
push
in
jmp
jg
stos
fstpt
fsts
mov
cmp
out
adc
jbe
cmpsb
or
and
dec
pop
adc
iret
rcll
xor
lcall
push
jo
xchg
dec
bound
rolb
mov
push
ja
jae
shll
inc
clc
or
testb
out
movsl
mov
es
jg
push
arpl
imulb
jb
lret
pop
jbe
sub
inc
xchg
add
xchg
cmp
cmpsl
lock
in
xchg
mov
icebp
add
sub
cltd
je
add
in
pop
mov
int3
push
mov
stc
jmp
cld
enter
dec
xor
arpl
aad
inc
in
stc
mov
jbe
dec
add
aaa
addr16
pop
int
aaa
std
pushf
lahf
out
cmp
jg
out
repnz
into
pusha
aaa
jb
adc
imul
jg
movsl
pop
sub
shr
xlat
rcrb
mov
mov
cmp
and
push
les
dec
bound
push
shll
lock
cmc
sbb
iret
jmp
mov
fldcw
jo
xlat
inc
imul
inc
roll
mov
fiadds
cmp
mov
mov
dec
xchg
enter
in
push
fucomi
inc
imul
xchg
cmp
mov
cld
sub
sub
pop
push
cmp
out
dec
ja
xchg
or
pop
out
imulb
mov
or
cmp
sub
sub
or
mov
test
add
dec
shll
jae
pop
xor
or
fstpt
xchg
int3
mov
push
out
mov
pop
mov
iret
push
xchg
scas
sub
cmp
in
insl
fldenv
pop
adc
jbe
adc
fdivrs
xchg
lods
rcl
gs
jns
lahf
jbe
add
jb
btl
subb
lea
adc
aad
inc
mov
cmpsl
dec
insb
jp
imul
xor
adc
jb
js
rclb
int
dec
mov
call
push
xor
loop
cmp
test
lret
or
dec
cmpsb
sub
mov
add
xchg
jp
xchg
es
fidivrs
pusha
xor
add
xchg
xchg
insl
fs
call
add
sub
mov
out
enter
fwait
mov
inc
mov
xchg
test
jge
cwtl
push
enter
pop
xorl
outsb
mov
outsl
les
mov
out
pop
popa
xchg
mov
out
lods
pop
and
arpl
xchg
pop
repz
cmp
mov
out
pop
xacquire
or
jo
sub
fnstenv
call
mov
es
pop
push
jnp
cmp
mov
pushf
mov
test
outsl
mov
mov
ljmp
arpl
pop
outsb
jp
add
or
pop
in
pop
inc
mov
pusha
xor
leave
pop
sti
mov
sahf
xorl
push
fistl
loopne
lret
fisubl
mov
push
inc
iret
mov
lcall
cmp
pop
outsl
fiadds
jle
xchg
mov
mov
mov
mov
sub
mov
or
sbb
mov
ret
loopne
aad
movsl
ret
jno
pop
loopne
mov
inc
popa
iret
mov
sbb
lcall
push
icebp
adc
stc
negb
and
cmp
dec
inc
into
dec
scas
dec
aaa
pop
jns
cmc
std
loop
test
push
adc
pop
lcall
scas
pop
sub
sbb
push
sbb
push
aaa
push
and
addr16
ja
push
adc
push
cmp
lahf
sbb
lret
pushf
or
faddl
insl
mov
xor
scas
mov
sub
sub
adc
iret
orb
mov
or
pop
push
aad
mov
sub
call
adc
pushf
rcr
push
icebp
pop
mov
or
imul
and
or
mov
xlat
or
test
push
sbb
mov
les
jae
cmpsl
jae
ret
fstpl
xor
hlt
sub
idiv
mov
pusha
xchg
xchg
dec
push
mov
sbb
daa
into
outsb
incb
and
cltd
stos
nop
mov
mov
adc
dec
or
fdivrp
aam
dec
jmp
mov
add
lret
mov
adcl
faddl
mov
xorl
mov
orb
sbb
clc
mov
imul
mov
fisttps
repz
mov
xchg
sti
pop
mov
jge
loopne
pop
mov
add
repnz
sbb
push
cmp
pop
lahf
shlb
push
xor
pop
dec
subl
xor
fldl
sbb
sbb
mov
mov
in
xor
dec
sarl
inc
out
and
pop
cmp
lahf
mov
mov
dec
bnd
push
cmovbe
mov
scas
cld
jne
jg
push
call
add
inc
mov
pop
adc
movsl
xor
inc
pop
cmp
not
xchg
add
jg
cmp
sbb
sahf
lds
nop
mov
aad
mov
mov
out
cmp
adc
and
xchg
mov
enter
add
push
xchg
xchg
roll
rcrl
cbtw
sbbb
jge
adcl
imul
adc
imul
pushf
in
popa
push
popf
aad
push
cmp
cmp
into
sbb
cmp
int
lds
jmp
test
mov
in
cmc
outsl
push
arpl
and
mov
adc
ret
lock
adc
std
sahf
gs
sarb
inc
inc
pop
adc
mov
jl
sbb
dec
adc
je
sub
pop
adc
push
push
jbe
or
ljmp
cwtl
jp
mov
and
sbb
shrl
mov
rcrl
popa
aam
ret
mov
jge
lcall
scas
add
push
out
shll
pop
adc
mov
subb
jo
mov
cmpsb
rcrb
push
cmp
sahf
push
test
push
jb
mov
or
and
bound
es
clc
cmpsl
sbb
add
stc
xchg
mov
loope
fsubrl
jge
xor
imul
pusha
bound
push
cld
mov
jge
sbb
rolb
mov
insl
push
push
jmp
adcb
sub
add
shr
pop
test
int3
gs
lret
fwait
add
pushf
add
pop
cmp
dec
fisubrs
roll
int3
xor
repz
xor
inc
dec
es
ds
xor
outsb
imul
or
gs
pop
leave
dec
cmp
jmp
mov
pop
dec
lret
mov
xor
mov
lea
jno
fdivl
fs
adc
jbe
xchg
dec
sub
mov
insb
in
or
mov
nop
subb
mov
rol
loopne
push
stos
jne
or
xor
push
jae
mov
insl
out
mov
rcrl
mov
mov
dec
mov
fwait
mov
loopne
inc
nop
sub
inc
sub
popa
xchg
inc
lods
fdivrp
pop
and
cs
imul
sub
sub
push
aad
std
out
add
push
mov
jl
hlt
jg
sbb
mov
sbb
sub
icebp
loope
cmp
clc
and
mov
push
lods
pop
sahf
and
testb
inc
ljmp
dec
lret
cmp
add
and
lcall
xor
sbb
inc
stos
lahf
push
jle
adc
ret
or
js
dec
adc
mov
sbb
frstor
mov
xlat
jbe
mov
fdivs
movsl
xor
or
jns
lret
test
pop
fxch
or
cmpsl
xchg
push
sahf
sub
pusha
jns
cmp
fidivs
pushf
out
cmp
in
in
sbb
subb
aaa
push
mov
sbbl
arpl
das
int
add
mov
addr16
jnp
lea
add
clc
outsb
pushf
in
clc
mov
jecxz
pusha
fsubrs
out
int
popf
and
aam
popf
xorl
stc
push
sub
and
fwait
fwait
sub
pop
xchg
adc
push
cmp
inc
cltd
mov
adc
adc
dec
xor
xchg
cmc
mov
out
mov
and
mov
cwtl
pop
jb
fistpl
rcr
mov
shl
mov
enter
leave
lret
out
jns
call
icebp
out
fwait
in
add
and
dec
test
fsubr
mov
repz
jp
sub
or
aaa
icebp
mov
incl
in
jae
outsb
sub
mov
xor
sbb
mov
jmp
mov
jbe
dec
jl
adc
cmp
pop
gs
es
jns
std
rolb
mov
xor
and
ret
scas
mov
xchg
fdivp
jg
sbb
subb
cmp
dec
xchg
pushf
rolb
pusha
cs
dec
or
cmc
jp
xchg
cmpsl
add
add
neg
xchg
mov
or
xchg
shrl
and
adc
addl
int
jmp
mov
ljmp
cld
push
inc
cmp
dec
mov
pop
in
ds
add
pop
movsb
das
cmp
push
aaa
add
mov
gs
pushf
jg
scas
lcall
rcl
xor
rcrl
or
fdivrl
xor
lods
push
fmul
cmp
push
icebp
pop
push
mov
sbb
pop
jne
adc
ss
or
push
sahf
dec
sub
add
scas
mov
push
enter
test
fdivrl
cmpsb
pop
pop
sbb
pop
lahf
inc
mov
push
push
shlb
sarl
fcoml
xor
dec
in
roll
push
mov
dec
push
pusha
xchg
sub
out
lcall
or
cmp
movsbl
dec
cmp
ret
lea
insl
movsl
shrl
add
movsb
ja
pop
lcall
and
xchg
enter
ja
xchg
out
mov
stc
test
adc
jge
pop
fcmovnbe
cmp
mov
nop
xor
sbb
push
and
in
in
out
adc
mov
cwtl
sub
adc
cmp
lea
shll
fmul
int3
xchg
shlb
mov
enter
jns
daa
mov
es
aam
lea
fisttpll
fldt
xchg
std
inc
pop
inc
or
mov
shl
xchg
jecxz
jo
jns
dec
pop
shll
movsl
fstl
es
inc
aas
or
push
lret
int3
sub
add
mov
cmpb
fxtract
mov
sub
insl
push
xchg
fs
cmp
lods
mov
mov
jbe
xchg
dec
scas
add
daa
dec
adcb
dec
fiadds
sahf
mov
add
int3
mov
cwtl
rcll
jle
fcmovb
pop
adc
cmp
enter
inc
jns
test
and
ret
add
das
adc
gs
xchg
lcall
sbb
or
and
and
xor
lret
in
jle
mov
sub
mov
fcomps
mov
adc
andb
adc
jmp
or
dec
jbe
setge
in
sbb
jg
test
jns
inc
mov
xor
fdivl
xor
ljmp
jge
jo
ret
jo
pop
rcrl
mov
stc
xor
xlat
push
loop
mov
sub
bound
sbb
or
push
test
lahf
cwtl
jne
jle
jle
imulb
mov
mov
ss
jge
enter
push
or
icebp
xchg
into
mov
mov
mov
leave
cli
and
es
fs
int
scas
xchg
push
push
push
ljmp
xchg
adc
mov
jmp
jnp
xchg
pop
push
fbstp
adc
sbb
add
outsb
scas
adc
out
cmpsl
repnz
icebp
cltd
add
jp
dec
rorl
sahf
pushl
bound
jno
mov
jge
outsb
cmpsl
and
jmp
xchg
repnz
popa
inc
stos
push
int3
mov
mov
std
dec
adc
jno
pop
lock
out
sti
imul
and
jl
lock
movsl
and
cs
fcomp
xchg
push
mov
aad
mov
xlat
dec
xchg
or
jb
xor
out
rcr
popa
xchg
imul
pop
daa
repz
shrl
sbb
mov
pop
pushf
pop
mov
mov
lds
sbb
mov
cs
iret
leave
xor
mov
dec
mov
bound
add
and
push
shlb
outsb
scas
cwtl
xchg
popa
popf
imul
push
cltd
imul
dec
into
add
mov
movsb
dec
jecxz
aas
arpl
out
sub
jg
adc
or
leave
ret
js
sub
xchg
out
xchg
xchg
popf
jns
cmp
outsb
xor
test
and
sbb
sub
push
push
fildl
mov
shlb
xor
sub
fisubrs
push
test
std
cmp
pop
dec
cwtl
xchg
mov
stc
inc
les
jb
lock
sub
imul
cmc
adc
scas
cmp
sti
xor
and
inc
ret
sarl
xchg
shlb
mov
dec
xchg
lods
mov
pusha
inc
xchg
sub
sub
call
jns
lcall
mov
xor
mov
lock
xchg
movsl
stos
sti
xchg
pop
add
push
jbe
adc
mov
loop
aas
bound
pop
je
les
loopne
arpl
in
xchg
or
dec
cli
xor
sbb
mov
jge
adc
or
addb
inc
jo
aaa
or
and
cltd
sbb
in
lds
test
ret
cmp
xchg
inc
jb
push
xchg
jno
sarb
mov
pop
enter
and
inc
push
je
mov
push
jnp
pop
cmpsb
lds
fimull
enter
mov
subb
add
sub
arpl
test
cltd
fsubs
push
test
fisttps
and
xchg
popa
cmp
sti
inc
xor
scas
cwtl
lret
jge
loopne
inc
mov
mov
popf
xchg
fistpl
jbe
es
insl
add
and
xor
xchg
pusha
or
add
push
ljmp
lret
inc
pop
mov
loope
fs
aaa
jg
push
lcall
rclb
and
hlt
add
add
divb
mov
mov
xchg
dec
cmpl
notl
js
iret
cmpsl
mov
sbb
jp
or
pop
mov
loop
out
fcompl
data16
sbb
jae
mov
imul
sahf
stc
ljmp
addr16
dec
pushf
sahf
add
xor
sub
incl
lods
add
repnz
xchg
mov
adc
pop
leave
sti
je
sbb
and
test
and
pop
fs
sbb
scas
and
aaa
and
xchg
sbbb
les
lahf
inc
in
fistpl
pop
xchg
sub
fwait
and
jl
repnz
add
es
dec
jmp
cli
iret
jle
mov
xchg
xchg
add
mov
test
cld
loop
jo
jge
cmp
jmp
fldt
jne
iret
aaa
or
dec
xchg
dec
push
div
aad
leave
jge
inc
stos
inc
sub
popa
cmpsl
dec
dec
lret
lret
adc
in
and
inc
imul
call
sbb
and
out
or
push
push
and
or
push
jmp
fsubl
adc
rcrb
lds
xor
mov
dec
sub
int3
push
xor
movl
dec
iret
fsubl
sub
andl
pop
sbb
adc
pop
mov
and
test
mov
and
jl
push
xorb
lahf
or
mulb
lods
xchg
xchg
imul
enter
cmp
pop
inc
sub
inc
add
xchg
lcall
int
enter
mov
cmc
sub
mov
push
mov
es
adc
in
jecxz
pop
cmp
xor
lret
inc
into
and
push
jg
iret
cmc
pop
sbbl
add
out
or
pop
inc
cltd
stos
push
xlat
xchg
mov
js
inc
cmc
xor
lahf
sahf
dec
mull
fistpl
sbb
pusha
test
dec
push
mov
lods
insl
or
push
scas
sub
int
mov
mov
and
insb
push
iret
aaa
sbb
or
test
fdivrl
inc
xchg
cmpsb
lods
lock
stos
int3
and
add
add
xchg
xchg
lods
mov
enter
leave
cmc
xor
jb
in
test
rol
push
mov
ja
ret
push
movsl
push
pop
imul
arpl
inc
push
gs
inc
out
or
das
and
xor
or
mov
into
in
cmp
cmp
out
cs
sub
inc
lahf
arpl
jp
stc
enter
add
idivl
cmpsl
out
outsb
or
mov
nop
pop
fildl
outsb
and
int
push
fidivrs
mov
xor
sbb
jmp
mov
xor
dec
idivl
sub
gs
or
cmpsb
mov
dec
pop
movsl
push
popf
and
test
push
jmp
out
aas
and
arpl
mov
cli
push
xchg
xchg
lods
rcl
add
ja
sbbb
movsb
ja
outsb
add
xchg
pushf
sub
sbb
pop
push
leave
clc
push
pop
dec
inc
push
or
je
fwait
int3
mov
inc
lds
add
andl
inc
xor
arpl
adc
imulb
fistpll
sbb
inc
outsl
in
push
mov
lahf
gs
cltd
dec
mov
imul
stos
sub
cmpsl
scas
popl
repz
xchg
dec
data16
xor
sar
loope
mov
cmp
jge
adcl
sti
jmp
mov
mov
xchg
lods
stos
mov
sbb
les
inc
xor
or
inc
push
jno
and
mov
shl
xchg
mov
jl
imul
push
clc
xchg
sub
addr16
or
sahf
mov
shlb
add
pop
neg
dec
or
xchg
incl
jg
jnp
imulb
xorb
roll
mov
add
rorb
xchg
stos
add
push
jp
out
sti
out
xchg
insb
aas
insl
fcoms
cmc
gs
pop
inc
fldenv
mov
ja
enter
pushf
dec
hlt
inc
in
fidivrl
push
mov
or
into
jg
jecxz
xor
xchg
sub
push
mov
inc
jmp
movl
jp
jge
rcll
pop
addr16
xor
jl
or
jne
xor
out
inc
mov
pop
out
out
cmpsb
enter
mov
jmp
dec
ret
mov
xor
mov
neg
hlt
out
mov
fstl
incb
rcll
push
mov
adc
idiv
idiv
cli
and
xlat
dec
mov
das
dec
mov
jns
cmc
out
xchg
cmc
repnz
jmp
jecxz
push
call
neg
pushf
js
adc
ror
xchg
shlb
rcl
out
or
in
insl
and
xor
ljmp
in
faddp
scas
add
mul
mov
sbb
cld
ret
ret
lods
mov
and
and
xchg
sahf
pop
bound
xor
pop
push
movzwl
aam
cmp
mov
stos
pinsrw
pop
pop
cwtl
xchg
mov
stc
addr16
adc
add
fcmovbe
cmp
aam
adc
push
cmp
pop
mov
je
std
vcvttpd2dqy
sahf
lods
mov
fs
xchg
in
movsb
dec
movsl
lret
ficompl
cmp
rol
adc
in
push
and
add
movsb
xchg
pop
loope
mov
aas
scas
lcall
add
or
in
jb
cmpsl
in
sbb
xor
loopw
jmp
iret
shl
out
data16
xchg
lods
bound
aas
test
mov
fmul
in
xchg
outsb
subl
jge
call
fdiv
test
xchg
inc
jmp
test
inc
cmc
roll
out
arpl
or
jp
orb
mov
aam
push
lods
sti
fists
push
jno
mov
dec
sbb
mov
sub
mov
in
add
scas
mov
mov
cmp
push
mov
cli
inc
inc
imul
adc
pop
mov
sti
outsb
mov
push
xor
icebp
ds
cltd
jnp
mov
movsl
pop
call
xchg
scas
repnz
mov
in
or
gs
adc
ljmp
push
inc
jbe
xchg
icebp
xor
inc
bound
mov
push
cli
jo
sub
lock
sbb
jge
arpl
bound
inc
and
jbe
push
mov
daa
sub
jo
push
or
bnd
stos
loope
popa
cwtl
adc
daa
fdivp
jmp
dec
aaa
sbb
sahf
repz
jo
dec
push
int3
lahf
imul
inc
add
jmp
in
jae
xor
lahf
adc
xchg
cmpsb
into
ret
outsb
stos
xchg
daa
fimuls
adc
push
outsl
roll
add
movsl
dec
enter
mov
pop
iret
pop
stc
aam
pop
jmp
ja
mov
mov
pop
xchg
lret
lods
xchg
push
testl
into
mov
mov
ss
jmp
icebp
and
sbb
test
xchg
push
cmp
mov
add
mov
mov
cld
fildl
push
pop
push
mov
adc
int3
stc
in
cmc
pop
mov
jge
sbb
in
movb
adc
lahf
aas
ljmp
adc
dec
push
jnp
ljmp
mov
or
rcrl
movsb
shll
cli
add
aam
enter
insb
jmp
out
and
cltd
dec
cmp
or
mov
jg
dec
push
mov
scas
sub
or
pop
clc
cli
outsl
sar
leave
stos
jmp
cwtl
or
imul
push
pop
fistl
sahf
stos
push
or
jno
dec
mov
or
ficoms
cs
sahf
cmp
imul
mov
fldenv
ds
xchg
pop
jp
jp
pushf
cld
or
repz
scas
and
xchg
mov
cwtl
lods
shrb
or
scas
popf
lock
loop
cmp
add
jecxz
int3
jb
std
ds
test
mov
js
cwtl
jns
xchg
mov
stc
push
cwtl
scas
rcll
mov
enter
sahf
movsb
jae
call
es
adc
xchg
inc
inc
mov
mov
and
out
mov
mov
nop
fstpt
lods
cmp
ret
jb
outsl
shl
aas
jno
cli
not
pop
test
sar
xor
gs
jle
fdivrs
lret
out
inc
jmp
dec
inc
push
inc
fdivrp
lahf
bound
ljmp
inc
pusha
mov
daa
sub
push
repnz
mov
jne
push
xlat
lcall
adc
sbb
xor
int
pushf
lahf
mov
xchg
out
mov
lret
jle
aad
or
fs
in
mov
mov
enter
rcr
jp
jecxz
inc
sub
dec
or
cmp
push
add
inc
hlt
inc
inc
scas
fmull
addl
das
and
xchg
or
imul
out
xor
cmp
fs
cmp
mov
scas
mov
inc
or
jp
mov
push
aad
lahf
cmp
dec
int3
pop
aam
pop
scas
ljmp
jp
mov
add
mov
mov
xchg
sahf
ficoml
mov
ror
dec
sub
leave
out
adc
adc
pusha
jmp
arpl
pop
mov
jno
cmp
jg
mov
cld
daa
iret
or
xchg
push
mov
cmpsl
add
mov
pop
int
call
fistpll
jl
and
cmp
shl
mov
jb
aas
mov
das
fdivrs
pop
xchg
or
cmc
xor
xor
into
lea
stos
inc
xchg
adc
adc
xor
xor
daa
cmpl
jno
outsl
inc
roll
test
cs
xor
ret
cwtl
push
les
pop
mov
les
dec
popa
ds
mov
xchg
xor
inc
test
xchg
and
scas
fldcw
cmp
or
je
mov
push
movsl
lods
xor
js
xor
mov
sbb
push
push
dec
icebp
ja
mov
adc
jp
fidivrl
sub
aaa
gs
dec
jb
dec
add
call
and
in
inc
test
pop
insl
jbe
xor
jp
push
cld
inc
push
aas
mov
dec
gs
mov
mov
mov
test
add
fisttpll
xchg
or
insl
orb
fwait
jns
jb
nop
xlat
jmp
setb
mov
pop
inc
shlb
xchg
mov
jp
loopne
xor
mov
dec
pop
inc
and
inc
das
out
rorl
dec
dec
push
mov
scas
shll
outsb
cmp
ss
lods
popf
xchg
std
add
mov
xor
jns
ret
mov
lock
clc
xchg
dec
inc
lock
fistps
fnstenv
mov
pop
les
sarb
idivb
push
mov
sub
push
sbb
inc
mov
imul
and
stos
arpl
cmpsl
inc
jle
out
jb
and
rorb
jge
xchg
dec
pop
adc
rdtsc
inc
mov
bound
and
les
sbb
push
add
mul
inc
xchg
js
add
out
popa
ja
push
pop
popf
xchg
mov
into
xchg
push
jae
lret
pop
rorl
ficoms
adc
sub
xchg
mov
jae
and
jno
out
push
cs
inc
leave
scas
adc
mov
mov
mov
mov
xor
or
test
das
es
mov
test
push
test
pop
jb
cmp
add
in
enter
sahf
mov
fistl
push
lahf
testb
xchg
jb
loopne
xchg
mov
jle
das
jno
call
mov
inc
adc
cmp
or
nop
int
repnz
xchg
into
sbb
xchg
sti
ja
or
add
fsts
mov
adc
sbb
sub
cmp
mov
cmp
cmp
cmp
addl
xor
dec
sti
stc
shll
push
daa
les
mov
cmp
add
fwait
outsb
mov
jno
pop
fwait
cmp
or
push
xchg
loopne
rcl
mov
inc
pop
ds
mov
pop
das
mov
cmc
imul
outsl
sub
or
cmp
sbb
xor
xchg
test
data16
sub
dec
and
sub
push
cmpsl
loop
pop
cltd
in
jmp
sbb
fdivp
scas
push
fildll
pop
jae
pushf
pop
icebp
ret
jb
sbb
aam
mov
sti
loope
mov
fcmovbe
jbe
lds
aam
adc
mov
xchg
stc
dec
and
adc
mov
in
loope
dec
inc
push
adc
add
loope
cld
mov
and
fldt
push
push
scas
roll
mov
dec
leave
pusha
inc
sti
fcmovnb
testb
mov
shlb
jg
ret
mov
mov
lahf
jae
pop
into
add
movb
std
scas
xor
test
push
rcrb
inc
pusha
cmp
jg
orb
popf
inc
loopne
add
adc
shlb
jecxz
xchg
mulb
aaa
shrl
push
add
inc
mov
test
xchg
mov
or
mov
xor
insb
clc
gs
ljmp
inc
shrb
mov
dec
sbb
cmpsl
fnstcw
mov
jl
push
loop
jne
inc
sub
xor
inc
sbb
sub
and
leave
sti
nop
ss
je
shl
inc
ucomiss
push
lcall
jb
mov
cmp
ja
shll
jl
cmpb
add
mov
mov
push
dec
call
jo
fdivrp
fidivrs
dec
fbstp
aam
fsqrt
lock
popf
jns
into
xor
shl
lds
les
mov
mov
sbb
stc
xor
xchg
sahf
inc
mov
loopne
test
enter
mov
shll
movsl
mov
sti
gs
jae
xor
mov
inc
test
nop
jge
mov
adc
sbbb
enter
xchg
and
jl
js
jg
dec
mov
ret
xchg
jbe
sahf
and
je
mov
push
imul
cs
jmp
and
pop
jb
outsl
dec
scas
dec
adc
stc
or
aaa
pop
stc
mov
into
repnz
pop
or
mov
imul
popa
scas
mov
lret
scas
cmp
jb
out
out
lock
add
xlat
out
jb
xchg
push
mov
fdivp
pop
dec
loopne
inc
aaa
inc
mov
inc
lock
add
xchg
mov
rol
mov
inc
xchg
in
gs
fnstsw
fdivp
mov
rolb
cmp
repz
mov
icebp
outsl
dec
js,pt
mulb
mov
push
bswap
jmp
xchg
push
fidivrs
in
mov
sbb
dec
adc
fdivrl
arpl
out
into
in
scas
scas
lcall
push
push
repnz
fcomip
lret
fwait
mov
mov
cld
pop
gs
cld
push
les
imul
shll
rcl
lods
cld
clc
dec
imulb
sbb
or
inc
jg
xor
popf
push
sub
jb
sarb
add
mov
cmp
mov
daa
push
push
xor
loopne
push
cmp
sti
push
or
jo
loop
repz
push
mov
das
dec
inc
mov
js
and
outsl
cli
push
pushf
repnz
test
cmpsl
sub
cli
mov
and
xchg
mov
lret
cld
jmp
out
cmp
test
imul
cmp
push
loop
scas
loop
ss
rcpps
xchg
loop
fcoml
jnp
mov
push
jae
mov
addb
or
xchg
dec
pop
add
mov
or
addr16
mov
xchg
pop
xor
cltd
ljmp
mov
popf
stos
cmp
mov
into
cmp
jne
pop
orl
inc
clc
inc
cmp
hlt
mov
sbb
pop
xlat
les
jo
and
cmp
push
xor
mov
insl
ljmp
sub
cmp
sub
sbb
outsl
jmp
je
or
sti
jnp
sub
aaa
fwait
int3
or
and
adc
pop
cmpsb
pop
fists
insb
xor
mov
roll
mov
sarb
mov
ja
add
int
xlat
dec
inc
test
lods
outsb
xor
fdivs
dec
mov
inc
mov
xor
mov
and
or
daa
jmp
xor
sti
or
jo
lods
pushf
cmp
sbb
in
mov
mov
xchg
sub
or
adc
xor
mov
adc
imul
pop
xchg
adc
stc
cmp
dec
pop
je
xlat
cwtl
push
pop
comiss
xorb
pop
or
mov
jns
insl
xchg
push
sti
jmp
dec
sbb
jnp
fiaddl
lahf
ljmp
xor
sub
bnd
pushf
jae
call
sahf
or
pop
addr16
cmp
imul
movhps
sahf
mov
imul
cli
xor
push
adc
push
sub
dec
stos
aad
std
push
arpl
sub
out
and
or
jecxz
movl
inc
cmp
in
cmpb
in
adcb
mov
shll
testb
out
scas
test
mov
inc
int3
loop
hlt
daa
or
dec
inc
lock
pmaddwd
lcall
lods
jae
xchg
push
je
ja
inc
push
jne
push
loopne
jnp
cltd
cmp
mov
stos
xlat
bound
sbb
ss
loopne
bound
jne
mov
sahf
lret
ds
jo
sbb
data16
jmp
insl
aas
add
negl
pop
in
inc
cltd
leave
pop
sarl
insl
cltd
iret
stos
scas
lock
mov
sub
rcrb
test
cmp
mov
lea
jbe
or
push
cmp
addb
out
cmp
adc
jmp
or
pop
mov
xchg
divps
std
cwtl
or
aad
xchg
and
imul
sti
lds
icebp
mov
adc
push
dec
pop
xchg
int
shl
dec
sub
inc
loop
fistl
cmp
hlt
mov
xchg
sub
dec
push
ss
movsl
pop
roll
pop
in
push
push
jg
jbe
cmp
jle
popa
cwtl
xor
dec
mov
cmp
add
shlb
rolb
pusha
adc
addb
inc
inc
adc
mov
or
hlt
lcall
jo
out
mov
inc
cli
lahf
ret
lds
jae
aam
or
ss
add
pop
xchg
in
fldenv
dec
nop
jb
pop
insl
shlb
sbb
xchg
cld
push
cmp
push
data16
fnop
push
out
icebp
stc
imul
call
in
nop
mov
nop
mov
insl
ret
in
fistpll
push
cmpsb
pop
imul
data16
lock
dec
cmc
imul
cmpsl
xor
xor
push
push
xchg
cmp
push
sub
popf
dec
fadd
pop
jl
jge
mov
out
stos
ret
pop
pop
push
or
jnp
pushf
cmpsl
lods
daa
mov
xor
lahf
test
mov
fwait
add
addr16
lret
mov
jl
and
stos
test
or
sub
jecxz
pop
inc
int
xchg
pushf
sbb
iret
mov
sub
pop
shrl
sbb
insl
ja
flds
and
hlt
push
sarl
sbb
cmp
imul
push
sub
inc
mov
je
xor
shrl
dec
push
adc
leave
leave
jnp
ds
add
aas
call
cmp
cmpb
fdivs
and
pop
mov
sbb
xchg
ljmp
cmp
xorb
in
xor
pop
insb
fcmove
add
lret
imul
inc
xlat
sbb
and
movsb
cwtl
sbb
in
mov
push
mov
test
arpl
pop
addr16
mov
stos
testb
jle
cli
mov
jnp
call
jp
xchg
jnp
mov
call
mov
sub
adc
in
cmc
nop
pop
mov
and
jecxz
push
cmp
sub
push
add
xchg
xchg
ret
jae
sarl
loop
push
push
adc
mov
sbbb
or
iret
pop
fildl
mov
mov
movsb
outsl
rcl
sti
outsl
cmpsl
sbbl
test
mov
push
jo
cmp
lock
add
dec
xchg
jecxz
sub
push
push
nop
repnz
or
stc
jns
leave
out
outsl
add
dec
sti
inc
stc
push
je
mov
mov
cmp
sahf
mov
shrl
in
aas
fiaddl
xchg
jno
mov
or
in
xorb
cmp
mov
in
out
push
call
push
pop
cmp
adc
movsl
mov
outsl
add
dec
loop
push
cmpsb
dec
xor
call
daa
shl
scas
sbb
mov
pop
lea
push
sub
iret
out
add
push
cld
or
dec
jge
lock
sbb
out
lahf
out
dec
jl
bound
push
scas
pushf
sbb
mov
pop
xchg
add
sahf
push
sbb
sbb
cmp
popf
jecxz
dec
int
mov
lea
ret
and
lods
push
gs
add
rcrl
jae
test
jno
pop
dec
xchg
out
jp
inc
adcb
push
int3
xchg
inc
fcoms
js
or
push
mov
pop
daa
jecxz
gs
fistl
lret
push
or
pop
lds
adc
cltd
xchg
cmp
jl
mov
cmp
loopne
push
call
fisubrs
cmpsl
shll
xchg
xchg
aaa
adc
js
ja
inc
cmp
sahf
push
add
mov
add
xorl
cmp
popa
jae
pop
jl
inc
xor
cmp
fisubrs
or
lahf
outsl
xchg
out
jno
movsl
push
lds
popa
sti
ret
movsb
fstps
dec
sbb
jmp
push
mov
mov
inc
fwait
jo
loop
lock
mov
popf
std
and
adcl
outsl
jo
inc
pop
fistpl
mov
popl
mov
push
jnp
enter
rcr
push
pop
fisubs
lcall
or
sbb
loopne
pop
sub
stos
cmp
loop
inc
ficompl
pop
mov
mov
push
out
fwait
xchg
les
shrb
enter
dec
mov
add
pop
jmp
rorl
push
mov
fcomi
daa
xchg
push
int3
dec
nop
or
inc
cmpsl
cltd
int
aad
push
lea
iret
ds
out
push
ljmp
scas
jae
inc
inc
xchg
xchg
sbb
icebp
or
adc
mov
xchg
xchg
arpl
popa
mov
mov
rorl
jae
lods
push
js
adc
stos
mov
sub
mov
mov
lds
add
out
push
pop
idivb
aaa
hlt
mov
push
jg
roll
adcl
xor
mov
je
sbb
or
push
dec
andb
je
fisubl
js
jmp
sbb
or
out
lock
stos
xchg
aaa
sbb
and
mov
lock
lret
fimull
int
sub
testl
cmp
iret
outsb
pop
ret
xchg
mov
xor
stos
and
lds
xor
lods
or
enter
dec
mov
mov
ret
mov
adc
cmp
push
lahf
cmp
sbb
or
push
mov
sbb
sub
sub
fwait
sbb
add
adc
ljmp
jb
in
lahf
dec
daa
jb
mov
aad
out
aam
ret
inc
inc
xor
cmpsb
repnz
aaa
ja
pushf
push
pop
mov
sarb
adc
lods
loop
ja
scas
xor
mov
cmpsb
fisttpl
sbb
rolb
or
jno
or
fnstcw
or
sahf
insb
adc
inc
xchg
sti
mov
es
fscale
je
push
test
insl
xchg
dec
xchg
push
sub
cwtl
lret
fucomip
test
pop
or
inc
xchg
bound
rclb
ljmp
mov
add
fs
call
or
ror
push
jl
outsl
scas
enter
test
in
and
jne
rclb
enter
jne
lret
jno
jb
mov
movsb
mov
aaa
cmp
adc
inc
sbb
mov
scas
stc
pop
mov
popa
repnz
cmp
loopne
add
jae
xchg
or
dec
lret
mov
sub
mov
ds
jo
add
in
pushf
out
lret
loope
xor
je
nop
je
fisubrl
nop
mov
insl
cmp
or
and
mov
add
fbld
loopne
mov
std
test
xor
lret
ja
dec
enter
inc
push
into
lds
loopne
xchg
mov
es
push
mov
cmp
cld
and
dec
fidivl
mov
dec
adc
jp
fstl
cmp
xchg
subl
jno
ds
in
es
dec
cltd
leave
fdivp
daa
add
mov
and
leave
cmp
jb
dec
fdivrs
inc
inc
out
in
sub
mov
sti
lods
lods
xor
repnz
or
push
mov
popf
mov
fs
cmpsb
xchg
xor
cmp
xor
into
iret
or
repz
mov
push
fisttpll
push
int3
notb
push
cmp
xchg
lret
aam
sub
sbb
xor
test
sbb
pop
sub
sbbb
add
push
shll
data16
std
gs
and
xchg
pop
outsl
add
mov
aaa
imulb
push
loope
inc
out
mov
daa
fmul
iret
and
aam
inc
rclb
push
pop
jl
inc
and
add
push
adc
mov
push
and
jle
cli
in
lds
mov
pop
push
and
lret
pop
xor
clc
adc
inc
mov
or
lods
aad
cmp
cmp
lods
js
mov
movl
cltd
test
shrl
mov
leave
inc
loope
cli
fbstp
test
xchg
add
or
xor
xchg
push
in
aad
cld
pop
sub
je
scas
int
loopne
mov
sub
out
xchg
cld
sub
dec
ret
jmp
lret
or
test
mov
fildl
in
jne
iret
adc
mov
adc
popf
es
lret
pop
mov
jl
leave
mov
out
sti
loopne
int3
push
adc
jle
sahf
push
push
and
pop
out
sbb
test
loope
mov
divb
aaa
loop
lret
test
lcall
leave
sub
arpl
pop
sbb
and
add
jo
sbb
dec
enter
cmp
pop
push
push
xchg
mov
lcall
daa
mov
ret
dec
push
sub
add
inc
fnstcw
push
adc
lret
cmp
iret
or
xchg
push
lods
dec
mov
notl
stos
lods
and
pop
movsl
sub
pop
or
jp
fimull
xchg
xchg
loope
adc
xor
sbb
dec
mov
pop
push
xchg
xchg
cmp
popa
arpl
xchg
adc
in
xor
enter
push
dec
mov
int3
dec
jl
mov
mov
int
push
hlt
and
popf
out
stos
sub
jg
push
inc
mov
js
jae
addb
push
addl
jmp
repnz
lock
xchg
or
sbb
imul
and
sbb
pop
lds
jo
push
jb
hlt
popa
jne
xor
mov
sub
lret
push
clc
lret
adc
xlat
std
inc
sahf
sbb
mov
lds
cmp
xor
or
inc
test
cmc
pusha
jecxz
xchg
sti
dec
xchg
cmovle
mov
mov
sub
push
pop
mov
jne
divl
sub
test
adc
mov
stos
lock
jmp
subl
leave
dec
incl
sub
fucomi
mov
pop
stc
mov
sub
xchg
fwait
xor
hlt
cwtl
sub
aad
adc
dec
loope,pn
orl
dec
fwait
out
adc
inc
les
mov
data16
repz
std
mov
adc
dec
cmp
idivl
cli
hlt
and
sti
cs
add
ja
inc
pop
mov
cmp
xorb
sti
iret
sarl
push
jbe
arpl
dec
iret
mov
sar
inc
in
icebp
push
xor
adc
or
mov
inc
shlb
pop
loopne
add
es
inc
into
add
andb
dec
xchg
and
fdivs
xchg
cwtl
icebp
ljmp
xchg
out
ljmp
mull
adc
sti
add
ljmp
jns
or
mov
bound
jo
pop
cmp
dec
push
jb
xor
es
xchg
std
mov
out
sbb
es
test
mov
mov
popa
cmc
and
aam
ficomps
xchg
cmp
out
fstpt
xchg
add
mov
pop
pop
fistpll
pop
out
in
and
mov
addr16
aam
or
xchg
dec
sbb
out
pusha
jo
dec
ret
mov
pop
sub
pop
test
push
inc
out
int
stos
ror
scas
aad
or
add
push
les
mov
mov
and
cli
outsl
mov
cltd
stos
jmp
xchg
loop
or
or
ficoms
jl
mov
ds
stc
add
mov
loopne
lods
leave
sbb
sbb
or
lods
mov
in
dec
loop
repz
xorl
mov
dec
or
es
sub
int3
mov
test
mov
pop
fstpl
call
mov
and
mov
and
in
xor
add
jg
ficoml
jecxz
cmp
out
lock
mov
pop
and
insl
cmp
add
test
cmpsb
cmp
push
push
fdivl
jb
or
fmull
xor
std
stc
and
jno
sti
push
inc
jnp
daa
xchg
sbb
subb
cmp
gs
stos
sbb
add
mov
rcrb
xchg
xchg
cmp
loope
or
or
int3
sbb
xor
sub
mov
lea
or
repz
ret
cmp
dec
push
add
xchg
loop
cwtl
movsl
adc
imul
push
data16
fnstenv
dec
jmp
shll
sub
cmpb
sub
aas
lock
mov
push
add
icebp
dec
mov
pop
testb
dec
call
lret
sub
sbb
sbb
mov
mov
mov
in
jecxz
sub
enter
push
xchg
xlat
test
xchg
push
push
and
in
mov
mov
dec
add
movsb
jmp
inc
lea
ss
std
adc
sbb
pop
aam
and
add
rcrl
push
scas
lret
pop
xchg
cld
cs
out
pop
bound
inc
imul
push
pop
popf
out
or
out
sysret
movsb
inc
hlt
imul
mov
mov
es
out
mov
xor
sub
inc
ljmp
push
cmpsl
fisttps
xchg
repnz
gs
cmpl
lcall
and
ljmp
sub
adc
jbe
ret
jns
fldl
aad
pop
inc
sahf
sub
nop
pushf
cmpsl
movsl
daa
roll
and
std
out
push
je
sub
mov
scas
cmpsb
insb
into
jns
push
cmc
insb
xor
mov
cmpl
call
shll
cmp
xchg
mov
cli
fldcw
mov
lret
mov
fnstenv
out
lahf
cmp
out
xchg
fs
cld
enter
lock
sahf
clc
ror
movsb
adc
xor
popa
jle
andb
mov
sub
mov
hlt
mov
xor
jnp
clc
mov
cli
mov
pop
mov
adc
mov
in
pop
fwait
dec
pop
insb
inc
mov
and
mov
into
movl
shlb
inc
je
push
jmp
test
jne
mov
mov
mov
mov
gs
push
les
into
roll
loope
lcall
jg
xlat
jecxz
dec
int
push
lea
fimuls
stc
aaa
js
and
inc
xorl
into
imul
dec
jnp
sbb
or
sub
pop
lea
mov
adc
arpl
cmp
add
rcll
jno
jne
mov
fadds
mov
aad
jae
mov
pop
into
aaa
out
dec
pop
inc
add
clc
mov
jle
push
aam
mov
dec
jecxz
xor
es
cli
sbb
shll
lcall
jge
push
imul
adc
repz
inc
or
dec
dec
push
fisttpl
jmp
mov
ds
lcall
jo
xor
lea
loopne
jecxz
lea
jmp
sub
jns
pop
ds
xchg
cmpl
out
mov
inc
jge
cmc
int
mov
jae
cmpsl
lea
mov
lahf
pop
lds
push
lds
shrb
ds
sbb
shr
lods
xor
push
sti
xlat
hlt
dec
xor
out
sar
or
ficoms
js
je
push
xor
add
jmp
daa
push
cmp
bnd
mov
lahf
pop
mov
mov
pop
pusha
sbb
call
movsb
push
pop
sbb
jge
cmc
push
ret
int
xchg
std
sbb
rcll
ss
jg
inc
loope
aas
pop
int
inc
das
cmc
int3
xlat
fstps
mov
movsl
pop
mov
jb
inc
xchg
push
xchg
push
sarl
mov
mov
mov
fstpl
pusha
mov
test
pop
pop
adc
clc
adc
add
repz
cmp
lret
xlat
inc
fwait
imul
or
fbld
lods
ja
xor
lret
jae
xchg
out
lahf
xchg
inc
decb
arpl
cmpsl
sub
dec
cmpsb
mov
pop
sub
push
pop
shlb
jge
stos
xchg
je
sarl
fdivl
xchg
sbb
loop
std
mov
push
in
sbb
dec
inc
cmpsb
sbb
lods
lods
lds
gs
add
or
imul
ret
fiaddl
or
lods
movsb
out
and
subl
xchg
roll
ret
cs
fcmove
jnp
decb
leave
lret
push
pop
leave
into
mov
jp
dec
or
ljmp
subps
cmp
daa
scas
jle
add
mov
sub
jecxz
lds
loope
ja
mov
push
pop
ja
lds
push
mov
scas
pop
jo
loopne
data16
inc
or
or
sub
jmp
sub
test
lock
int
fstl
or
mov
push
push
fimuls
push
jmp
xor
shrb
fmuls
repz
push
test
aas
addl
or
mulb
inc
je
scas
lcall
add
jg
mov
and
mov
stos
fadds
das
pop
xchg
xchg
mov
movsl
inc
pop
mov
negb
pop
mov
ds
lret
iret
pop
ror
push
or
loop
dec
dec
arpl
xor
pop
lock
dec
shl
in
mov
les
out
rcr
stc
xchg
adc
pop
ss
sahf
jecxz
mov
ds
lods
xchg
jno
dec
add
sub
fildl
pop
inc
add
pop
dec
test
dec
sub
sar
or
pop
xor
sbb
lret
push
js
jg
cmp
sti
push
hlt
push
fs
cltd
jae
outsb
imul
mov
mov
ss
je
fcomi
test
add
jmp
push
and
dec
sbb
cltd
pushf
inc
les
movsb
push
mov
cmp
or
les
leave
notl
pop
xchg
shlb
push
push
bound
fstpt
inc
std
mov
ja
dec
std
icebp
jl
cmpsl
mov
rcrb
pop
cmpsb
jns
or
dec
xor
add
insb
sti
fistpll
sbb
ss
imul
daa
mov
cmp
adc
mov
push
fsubp
orb
cld
add
sub
jo
out
std
jne
jns
fwait
lret
fidivs
in
cmp
dec
repnz
mov
mov
rcll
in
pop
xor
imul
out
mov
lcall
jmp
inc
sub
sbb
push
xor
lods
adc
mov
inc
adc
xor
movl
sub
inc
mul
fstps
and
lcall
frstor
add
xchg
das
xchg
or
outsb
test
addb
pop
int
mov
sub
xchg
fdivrs
test
add
mov
inc
out
lods
fiaddl
icebp
dec
mov
outsb
mov
or
jne
dec
add
push
rcll
xchg
jmp
mov
sub
adc
cmpsl
adc
pop
sbb
sbb
pop
or
fildll
ret
dec
sub
js
mov
jp
enter
insb
and
jmp
add
sarb
xchg
push
mov
inc
cltd
cmp
cwtl
fwait
orl
xor
iret
iret
adc
inc
mov
lahf
in
cwtl
outsb
jne
xchg
addb
push
or
and
loopne
into
stos
call
mov
and
mov
into
mov
clc
dec
fidivs
xchg
imul
mov
sbb
fiadds
call
pop
cltd
mov
and
es
outsb
js
inc
pop
in
roll
inc
xchg
jmp
gs
cmp
and
dec
or
mov
imull
sub
mov
flds
push
lcall
fs
rclb
mov
aas
stc
sbb
dec
cmpsb
imul
aas
mov
cmpsb
movsb
pop
jmp
mov
scas
add
int3
out
push
cpuid
pop
jl
push
cmp
and
sub
cmp
ja
add
lahf
jb
add
or
sbb
cmp
fsubs
dec
and
cmp
fs
mov
pusha
lods
cwtl
xchg
imul
out
stc
jle
in
add
mov
shrl
xor
push
out
mov
inc
arpl
imul
sar
das
push
into
inc
fs
inc
adc
mov
enter
cltd
sbb
fistl
mov
ja
addl
ljmp
mov
push
and
push
in
outsb
cmp
or
pushf
jno
fcom
push
and
cltd
mov
jno
fnstcw
test
adc
lods
repz
sub
orps
ds
int3
leave
sub
adc
lahf
xchg
xchg
imul
icebp
adc
shl
sub
mov
and
xchg
adc
xchg
or
movsl
lock
popl
daa
call
xlat
imul
or
aam
roll
add
mov
adc
jno
xlat
inc
push
mov
jmp
gs
mov
sbb
mov
loopne
outsl
jno
or
fbstp
sahf
ds
xor
std
aam
sbbb
mov
iret
fisubs
cmpsb
sbb
add
lretw
sbb
add
inc
jge
xor
ds
enter
xchg
xchg
insl
mov
rorb
jp
mov
xchg
bound
push
movsb
adc
mov
inc
and
inc
sbb
out
jae
test
cli
dec
pop
scas
add
mov
dec
das
cmp
cwtl
jg
jp
dec
xor
and
mov
iret
adc
pop
cmp
inc
pusha
outsb
into
sbb
jnp
out
sub
fcoms
xchg
push
sub
jmp
ret
inc
xor
add
sti
int
jge
xchg
cli
pop
jmp
pop
or
xchg
jb
or
into
lret
xchg
mov
cmp
clc
mov
cltd
decl
lret
jle
push
jne
out
fwait
xor
js
xor
out
mov
dec
dec
add
mov
or
xchg
cmpxchg
mov
mov
push
shl
xor
mov
mov
js
js
inc
sbb
cli
dec
mov
inc
add
call
les
xchg
insl
fwait
pop
pop
fstp
sub
into
icebp
rol
fs
clc
jmp
filds
jmp
xchg
mov
push
ja
or
test
lds
insb
xor
out
nop
imul
push
sub
nop
sbb
aad
push
and
inc
dec
add
mov
jle
mov
lods
jecxz
and
fsts
cmp
mov
daa
lcall
outsl
mov
fmuls
lods
sarb
sub
or
into
pop
or
popa
pusha
jae
dec
cmp
xchg
cmp
inc
jge
jge
adc
mov
test
clts
notl
or
add
sub
gs
cmpsb
imul
cmp
sbb
fbstp
repz
repz
adc
aaa
sub
xchg
jo
cltd
test
out
test
or
mov
enter
jns
dec
or
shrb
leave
cmp
cmpsl
and
add
imul
mov
dec
stc
stos
fwait
push
ljmp
xor
push
or
jno
and
ja
ret
stc
nop
ret
ds
xchg
mov
aad
xchg
rcll
stos
pop
movb
inc
adc
insl
pop
fdivrl
in
sbb
lods
push
push
or
add
inc
hlt
fldt
gs
dec
xchg
xchg
jmp
lcall
inc
push
jo
add
xlat
jnp
lock
decb
out
mov
mov
mov
scas
mov
xor
push
adc
mov
xchg
xchg
jo
inc
xor
test
push
fidivrs
dec
not
scas
test
sub
jle
fs
xchg
or
movsb
ror
and
adc
fidivrl
and
imul
call
jo
adc
sub
scas
lea
mov
aad
inc
dec
aas
pushf
test
or
cld
ret
xor
in
xor
dec
in
pop
lock
mov
lret
cmpsb
and
cltd
shll
ljmp
bnd
lret
jge
neg
shrl
or
ficompl
shl
lods
xchg
xchg
jne
pop
nop
aaa
sub
dec
push
loope
mov
mov
in
sub
enter
push
sbb
xchg
loop
sub
sub
push
mov
icebp
test
mov
adc
jns
xor
lds
popf
imul
pop
push
lahf
inc
lret
arpl
mov
xor
push
push
cmp
daa
out
and
sub
lds
shr
jl
iret
mov
jbe
in
push
aas
loopne
push
outsl
not
xor
test
pop
sbb
lods
or
or
sbb
mov
adc
jge
xchg
call
mov
fbld
dec
mov
hlt
ret
lea
mov
ficompl
pop
cmp
lds
inc
and
xor
inc
dec
fildl
cmpsb
add
insb
in
es
ds
sar
ret
mov
pop
dec
adc
stos
cli
cmp
xchg
push
fs
mov
lahf
loopne
dec
movsl
std
ret
dec
xchg
push
push
repz
loope
cmp
push
mov
push
popf
mov
shll
xchg
cwtl
loopne
jle
jbe
aas
bound
insl
data16
xor
mov
add
jno
pusha
outsl
imul
loope
scas
mov
andb
cld
sbb
in
cmpl
fisttpl
mov
jl
in
add
push
out
into
addr16
loop
imul
std
adc
mov
movsb
inc
jmp
adc
jne
xorl
repz
out
adc
js
fmull
sub
or
jns
add
movsl
mov
and
fldt
xor
push
test
xchg
xchg
orl
lahf
in
fucomi
xchg
adc
in
insb
fdivrl
sbb
int
in
mov
push
inc
dec
mov
jg
in
mov
int3
stos
xor
in
sub
cld
lock
icebp
or
mov
dec
bound
js
or
jbe
dec
call
mov
jle
cmc
mov
jl
decl
add
mov
inc
and
dec
fldl
inc
fdivp
std
jp
sahf
cltd
sbb
ret
popa
sti
daa
mov
fcmovnu
push
adc
orb
xorb
mov
jbe
cli
xor
pop
add
inc
push
inc
dec
ss
pusha
icebp
test
jns
adcb
push
mov
sbb
xor
add
or
iret
shrb
ret
jecxz
sbb
and
out
push
fsubl
lret
enter
cmp
out
movsl
dec
out
insl
aam
addl
adc
std
and
xchg
std
repz
shlb
cmp
lds
jae
ret
mov
jg
xchg
insl
or
jae
xchg
out
lock
xchg
arpl
xchg
clc
pop
push
mov
push
inc
cmc
lea
sub
lds
int
ljmp
outsb
ds
aaa
insb
arpl
xchg
sbb
push
stc
pop
cs
mov
fadd
leave
pushf
push
xchg
mov
or
in
and
mov
or
decb
and
mov
pop
xchg
xchg
popf
cltd
test
scas
inc
int3
add
scas
testb
mov
jmp
mov
add
hlt
sti
or
lidtl
stos
inc
inc
les
pop
lahf
jecxz
imul
addr16
or
fsubrl
pop
cmp
int3
mov
in
lret
repz
dec
push
or
xor
dec
roll
fdivrl
cmp
lods
lahf
sbb
out
outsl
jl
popf
ss
out
xchg
shll
push
jge
inc
mov
rorb
ja
imul
mov
ds
incl
hlt
negl
push
cmp
out
lret
sarl
jl
or
inc
or
in
sbb
pop
int3
sub
call
inc
aad
jl
cmp
rorl
gs
rol
push
fldenv
add
xchg
dec
pusha
pop
iret
xchg
or
stc
xchg
ljmp
popl
pop
xchg
dec
push
pop
or
call
push
aas
push
mov
push
popf
cmpsl
xchg
mov
outsl
xor
add
sbb
addb
push
aas
xor
sbb
inc
or
mov
or
xor
adc
dec
aaa
or
enter
pop
add
std
dec
push
push
jp
add
cltd
pop
pop
jne,pn
mov
cwtl
data16
sub
mov
out
je,pt
decb
cmp
mov
dec
mov
xor
push
sub
push
inc
or
pop
inc
jg
mov
movsb
mov
add
sub
cmp
divl
pop
lret
movsl
push
xor
sub
outsl
mov
lods
ja
ret
fidivs
inc
adc
divb
cmp
fwait
adc
stc
rclb
sub
into
xchg
push
xchg
je
jnp
insl
psubd
xchg
sbb
outsl
or
add
cld
jmp
test
shll
mov
outsl
mov
jnp
sbb
jecxz
cmp
js
jle
jae
cmpsb
lods
push
adc
ja
and
aaa
inc
pop
adc
clc
push
mov
icebp
push
in
incl
mov
repz
icebp
pop
into
pshufw
insb
scas
push
mov
sbb
mov
pop
orl
pusha
fiaddl
movzbl
fistl
mov
in
and
bound
add
out
pushf
pop
mov
fwait
xor
and
xor
jp
pop
stc
xor
xchg
in
cmp
pop
popl
call
adc
pop
iret
jle
xchg
lock
mov
xchg
lret
mov
dec
sbb
mov
inc
lds
cmp
std
or
int
jne
cli
sub
push
cmp
and
dec
add
mov
aas
sti
sub
adc
loop
imul
out
cmpsb
rolb
imul
or
adc
sub
mov
aam
and
gs
movsl
jge
aam
sbb
lods
popf
inc
dec
or
outsb
add
pop
push
mov
lret
test
lods
bound
imul
xor
stos
mov
nop
xchg
push
jno
push
xchg
pop
shll
jl
add
push
stos
or
pop
out
jl
sbb
sbb
cmp
ljmp
pop
push
das
mov
getsec
out
dec
ds
adc
add
inc
int3
rolb
sub
push
cld
cmp
inc
hlt
es
or
testb
lret
dec
sub
lahf
idivl
mov
fs
push
inc
test
stos
xchg
je
mov
jmp
push
pop
into
pop
inc
adc
inc
jo
mov
int
xor
mov
add
mov
xlat
loopne
movsb
push
mov
idivb
add
inc
movsb
mov
ret
in
sub
les
sub
inc
lods
cltd
mov
cmc
push
shl
ss
xchg
xchg
sbbl
pop
add
jns
stc
inc
call
cs
iret
or
fiaddl
cli
xchg
es
and
jecxz
dec
mov
jnp
out
ret
xor
fistl
sbb
xchg
repnz
daa
pop
cmp
dec
inc
hlt
and
iret
or
lods
and
add
loop
pop
inc
jmp
xorb
dec
jae
lcall
jmp
out
aaa
push
sbb
movsl
mov
les
jl
hlt
mov
mov
sub
jl
int
push
mov
in
ljmp
arpl
mov
lea
in
add
aad
fwait
lock
xchg
shll
sbb
shl
lcall
push
mov
xlat
mov
push
cld
pop
dec
sub
push
jns
sub
ja
mov
shlb
fldt
xchg
mov
push
xor
pusha
test
cmp
pusha
hlt
add
mov
dec
leave
js
mov
jg
into
rolb
fdivs
out
cmpsb
xor
lcall
data16
adc
xchg
enter
add
jnp
add
pop
xchg
dec
jno
rcll
and
push
push
inc
ja
cmpb
mov
pop
xchg
inc
add
sub
cmpsl
sbb
daa
and
shl
pushf
push
xchg
mov
mov
adcl
add
and
out
push
mov
call
add
inc
into
imul
push
jge
js
inc
in
cmpsb
xor
jecxz
add
aaa
or
hlt
movsl
pop
mov
shl
int
das
xor
dec
push
add
mov
and
pop
push
mov
xor
test
add
push
imul
shlb
hlt
jo
mov
xor
mov
fdiv
push
ja
mov
mov
lds
mov
mov
jb
and
ss
sbb
lods
and
pop
sub
les
pop
stc
push
mov
fdivs
xchg
cmp
stos
loopne
int
sbb
mov
cs
in
movsb
push
out
int
xchg
cmp
outsb
adc
repz
sbb
push
repz
fwait
mov
enter
clc
xlat
dec
frstor
mov
mov
in
movsb
dec
sbb
push
stos
aad
cmp
dec
mov
sub
cmpsl
adc
aam
imul
or
jecxz
notb
fldcw
dec
mov
or
cwtl
jne
leave
inc
mov
jns
sbb
into
cmc
mov
mov
pop
inc
clc
bnd
lock
sub
and
out
lahf
scas
shlb
insb
push
mov
out
adc
adc
adc
pop
and
leave
xlat
pushf
and
ds
clc
jmp
xor
fadd
repz
sahf
add
dec
fnstcw
pop
adc
sbb
imul
sbb
sub
inc
jo
outsb
or
loopne
xchg
mov
lcall
dec
jecxz
mov
mov
shlb
lcall
aas
push
mov
inc
outsl
cmp
dec
out
xchg
cmp
mov
adc
push
jle
jecxz
dec
push
xchg
movsl
test
or
ror
prefetchwt1
xchg
ja
popa
fadds
mov
test
sbb
sub
push
je
leave
inc
pushf
ja
addr16
lock
insl
aam
mov
mov
into
mov
push
adc
or
call
add
call
or
stc
jmp
add
into
stos
fistps
mov
cmpsb
in
lds
cmp
test
loope
mov
dec
adc
repz
outsl
dec
std
jne
sbb
pop
or
cmp
leave
mov
loope
pop
adc
popa
and
sub
aaa
adc
ficompl
pop
add
lods
int
mov
faddp
xchg
into
mov
add
sahf
xchg
pushf
or
cmp
pop
test
jle
mov
cmp
jbe
sbb
mov
mov
inc
rcrb
mov
sub
enter
xor
call
shrb
cmpsl
sbb
fstl
incb
mov
push
xor
shlb
push
add
or
jl
inc
or
inc
sbb
inc
into
ret
pop
pop
mov
inc
mov
xchg
xrelease
push
fdivr
lret
inc
cwtl
sub
loop
aaa
jecxz
outsb
mov
mov
xor
jnp
mov
inc
cmp
rcl
mov
in
lods
mov
lea
or
cmp
insb
mov
mov
mov
aaa
mov
out
push
not
jge
dec
fsubs
cld
or
loopne
add
cmp
cwtl
mov
mov
cmpsl
and
fadds
aad
enter
test
mov
push
xor
addb
arpl
outsb
mov
and
pop
gs
loope
clc
cmp
jne
pop
movsb
clc
fdiv
mov
addr16
jmp
cmp
fs
imul
xchg
push
xlat
sub
dec
inc
mov
and
and
arpl
jnp
repnz
mov
cmp
pop
stos
mov
jbe
cmp
fyl2xp1
mov
sub
bound
xchg
inc
xchg
loopne
jmp
cltd
jle
in
jb
sbb
jmp
lods
out
sbb
xor
lahf
std
stos
out
add
jecxz
mov
in
mov
inc
adc
and
shrb
cld
lods
loope
or
lods
int
xchg
jge
mov
xor
or
push
adc
add
out
jnp
hlt
pop
out
dec
subl
inc
add
adc
lahf
adcb
jbe
sbb
mov
pop
jno
test
out
std
out
adc
insl
jno
rcll
aad
loop
popl
sbb
std
orl
lret
lcall
lock
out
ficoms
lcall
leave
jbe
push
lods
mov
mov
mov
xchg
and
hlt
hlt
ds
or
pop
mov
rol
out
adc
pop
xchg
mov
lds
aas
cmp
das
clc
jo
inc
out
imul
xchg
fnstenv
dec
push
inc
and
cmc
cmp
insl
lcall
ret
aas
arpl
rol
dec
in
adc
push
imul
aas
sub
mov
sahf
fldt
adc
scas
es
sub
and
dec
push
and
fld
xor
fwait
adc
mov
lret
mov
mov
dec
in
cltd
mov
mov
roll
stc
or
mov
sar
sub
xchg
dec
fsubs
xorl
pop
xchg
xchg
lds
aaa
fsubrs
scas
and
push
mov
or
in
shrl
aaa
cmp
addr16
jae
xor
rcll
mov
xchg
repz
int
cltd
clc
fistpll
sbb
push
push
lea
lcall
shrb
add
lcall
jbe
adc
mov
dec
push
popa
ret
lods
dec
es
mov
push
adc
jecxz
sbb
push
repnz
push
cmp
lods
fucomip
mov
lods
jns
and
int
pop
or
sbb
sar
fwait
popf
mov
out
jb
in
inc
jge
adc
mov
hlt
fdiv
dec
add
int3
ja
daa
sbb
cmp
pop
mov
mov
lahf
mov
lahf
nop
bound
data16
dec
xchg
jnp
cmp
andb
mov
and
movsl
mov
ja
add
fwait
dec
gs
sub
div
bound
inc
sub
rclb
xor
ljmp
lret
int
or
cmpsl
cmp
pop
arpl
mov
movsl
mov
loop
push
push
cmp
cmpsb
stos
push
mov
add
in
xlat
push
sub
push
dec
mov
cmpsb
daa
div
push
out
iret
sbb
pusha
pop
fnstsw
adc
movsb
push
adcb
mov
jnp
movsl
jecxz
sub
cmp
lret
xor
sarb
xchg
sbb
cwtl
jbe
aas
sub
stos
scas
mov
add
jg
push
jg,pn
push
jecxz
sub
jp
cmpsl
idivb
add
jnp
stc
add
pop
dec
mov
push
adc
shlb
lahf
loopne
nop
stc
cmpsb
jp
aad
mov
leave
movsb
push
push
movsb
inc
mov
movb
and
sub
mov
push
nop
lret
popa
inc
and
popa
stc
into
iret
mov
sbb
cmpsb
lcall
lahf
ret
xchg
movsb
mov
arpl
push
ret
mov
and
movsl
xor
dec
lahf
inc
push
shll
mov
xor
rolb
repnz
rorb
and
mov
sub
out
loope
std
movsl
mov
pop
cmp
jo
popf
inc
in
cwtl
stos
pop
fidivrs
mov
or
pop
jg
pop
add
lea
lcall
push
in
cmp
sarl
xor
mov
rclb
jg
mov
mov
cmp
repnz
test
std
arpl
shl
sub
ljmp
ret
aas
jl,pn
pop
outsl
dec
cmp
sbbb
aad
pop
insb
add
sub
pop
outsb
xchg
xchg
data16
shll
add
pop
cli
pop
mov
mov
or
dec
in
sub
or
push
nop
dec
rorl
leave
pop
int
xchg
xor
jno
inc
pusha
les
mov
outsb
cmpsb
shl
repnz
push
divb
push
inc
scas
add
inc
lahf
add
sub
inc
xor
cltd
cmpsb
push
and
sub
pushf
mov
stos
js
movsb
hlt
nop
jo
mov
cmp
stos
mov
dec
xor
jl
add
int3
adc
icebp
popf
push
nop
push
sub
and
orl
movsb
jno
jno
sub
mov
xor
inc
lds
shlb
stos
adcb
leave
mov
imul
xchg
sub
fs
adc
rol
xchg
bound
jecxz
ds
loope
push
addr16
dec
lret
gs
cwtl
ret
jnp
push
push
mov
adc
fsubs
aam
mov
scas
jmp
jb
mov
jmp
mov
aad
repnz
ret
xor
cld
push
or
stc
out
adc
cwtl
subl
mov
pop
dec
rcll
les
pop
adc
shr
jp
stc
add
dec
test
dec
fsubrl
loop
lcall
call
adc
ja
mov
pop
sarl
scas
call
mov
inc
pop
sbb
inc
arpl
lret
fwait
sub
popf
sbbb
add
and
jg
xor
mov
sub
ficoml
ljmp
xorl
fwait
adc
mov
icebp
or
pusha
and
push
out
loopne
movb
dec
cld
iret
mov
pop
push
test
sbb
xchg
mov
add
dec
stos
or
jmp
mov
les
aaa
lock
mov
xchg
and
mov
call
mov
and
jb
inc
das
pop
test
adc
pop
dec
aam
and
jle
pop
dec
mov
bound
cld
in
inc
mov
cltd
cmp
imul
adc
sub
nop
mov
daa
mov
push
cmp
or
mov
fildl
xor
lock
fnstenv
jmp
inc
mov
push
and
mov
adc
shl
jp
pop
sub
mov
mov
pop
negb
inc
js
dec
sub
xor
xchg
outsl
add
jmp
jbe
mov
adc
jnp
fstl
pop
xor
pop
subl
fcoml
inc
mov
dec
add
rolb
mov
insb
pop
sbb
repz
in
subl
insb
sbb
mov
fbstp
xchg
test
dec
cli
sahf
pusha
rcrb
out
bound
and
pusha
xor
out
into
rcll
push
cmp
xchg
pop
mov
and
cwtl
out
pop
sbb
pop
mov
stos
push
xor
aad
pop
imul
rcrl
dec
jnp
out
lahf
das
fstpt
xor
xor
nop
pushf
data16
push
adc
sbb
add
xor
popa
jg
mov
mov
and
sbb
adc
mov
mov
mov
pop
and
push
jo
fcmovbe
sbb
lret
mov
aas
push
add
iret
mov
insl
scas
cmp
test
fnstsw
adc
outsb
cs
cmp
mov
frstor
lcall
adcb
aas
fildll
pop
in
movb
xchg
cli
dec
mov
dec
inc
imul
sbb
cli
bound
xchg
shl
cltd
fs
xchg
jmp
fwait
or
sbbb
repz
dec
andb
das
enter
push
adc
sub
pop
xor
mov
pushl
cld
dec
pop
xor
sub
loope
xchg
rcrb
or
call
inc
lods
adc
sub
sub
das
scas
and
mov
jge
or
pushl
sub
rcll
push
dec
mov
hlt
les
inc
xchg
inc
push
sarl
pop
addr16
dec
mov
push
jmp
lret
outsb
jmp
stos
dec
mov
int3
cwtl
iret
in
xchg
movsl
mov
imul
mov
xor
jmp
enter
sahf
add
icebp
sarl
push
mov
imul
lahf
enter
arpl
xchg
add
mov
dec
pop
pop
pop
xchg
or
test
push
mov
pop
mov
pusha
jmp
loop
mov
fldcw
pop
sub
popf
sub
pop
sub
xchg
jecxz
or
mov
mov
scas
jno
rcll
adc
repnz
daa
mov
jne
pop
cmp
add
stos
adc
mov
pop
sub
stos
fwait
fwait
int3
mov
fidivs
cmp
xlat
lcall
pop
mov
push
cmc
pop
push
cmp
test
pop
and
outsl
stos
mov
sarl
hlt
adc
push
pop
pop
in
loopne
sub
pop
out
hlt
mov
jle
out
mov
jp
jl
jne
test
outsl
jecxz
sbb
pop
test
setb
fs
push
mov
imul
addr16
imul
pop
shl
xor
pop
pop
lds
cmp
dec
aaa
mov
js
jmp
lea
jae
pop
es
ss
insl
lret
in
fisttps
push
cmp
mov
in
loop
sub
dec
mov
jnp
pop
mov
sahf
or
inc
in
and
add
repz
sti
sahf
dec
in
and
sar
rorb
je
push
cmpsl
orl
inc
rcl
insl
fistps
test
std
cli
nop
orb
sbb
ss
lret
mov
jns
test
pop
push
cmp
jmp
in
pop
lea
add
sbb
mov
fnsave
enter
pop
sub
arpl
negl
daa
cld
les
popa
jnp
adc
cmp
jbe
das
loopne
inc
and
mov
xchg
js
insl
cmpl
cmc
fisttpl
test
sbb
adc
and
xchg
lret
add
inc
jp
jp
daa
pusha
xor
cmp
or
outsb
xchg
cltd
jmp
pop
inc
nop
imul
test
les
xor
xlat
mov
fistpl
or
in
xor
mov
imul
popf
jg
mov
and
or
lds
pop
mov
inc
mov
paddsw
mov
fs
insl
push
xorb
push
cld
dec
in
pusha
pop
sub
xor
or
jge
insb
sar
push
rolb
push
loopne
dec
jae
data16
sub
and
out
cmp
and
push
xor
mov
inc
push
ds
rorl
pop
add
lea
adc
fldl
insb
addr16
dec
jecxz
pushl
xlat
mov
out
lret
ljmp
sub
movsb
stos
frstor
xlat
andl
cmpb
jns
ds
cwtl
pop
cmpsl
jl
decl
mov
or
xor
stos
xchg
jge
repz
shr
cmp
or
aad
push
lcall
fmuls
arpl
jge
mov
data16
sub
aad
cmc
rorb
hlt
js
mov
adc
push
or
imul
aas
and
shll
insb
dec
push
into
mov
or
das
sub
out
repnz
loop
mov
js
jnp
loop
gs
negl
sbb
mov
and
mov
mov
fwait
das
stos
fdivrl
cli
mov
nop
inc
popa
sub
jl
enter
ret
cmpb
or
cld
aaa
mov
push
sub
scas
sub
das
enter
loopne
xchg
jne
stos
mov
dec
cmp
in
push
pop
xor
loopne
push
jecxz
mov
cmc
les
divb
test
xchg
mov
jne
ljmp
push
or
repnz
sub
aad
out
pushf
shlb
je
xchg
mov
mov
mov
xchg
xchg
cld
cmp
loope
sub
cmp
mov
jnp
test
daa
mov
sbb
and
add
jno
push
xor
fisttpll
stos
mov
ja
fcompl
jecxz
cwtl
ja
hlt
inc
pop
cmpsl
arpl
cwtl
aas
jnp,pn
xchg
sbb
loope
pushf
jno
dec
push
dec
loop
adc
lds
ss
xchg
lahf
addr16
dec
imul
ds
bound
popf
fstpt
movsl
push
pop
dec
add
inc
test
gs
test
pop
subb
fiadds
testb
int
fs
sbb
sub
dec
cmp
adc
xchg
lret
sahf
mov
sub
pop
and
jns
sbbl
addr16
rorb
mov
push
push
data16
shlb
sub
adc
dec
push
dec
pop
mov
out
test
pop
push
mov
push
sub
int
ja
jo
jno
fwait
or
and
mov
or
push
cmc
mov
std
sub
pop
in
in
mov
sbb
push
and
popf
mov
jnp
xorb
pop
lock
dec
lock
pop
cli
es
mov
xchg
push
loope
jno
mov
ror
sub
push
into
and
int3
xor
pop
sub
or
cmp
fsubl
call
in
mov
std
xor
notl
jo
mov
cmp
call
jg
add
fsubrs
sbb
dec
push
add
outsl
std
out
mov
sub
pop
lea
jns
mov
ljmp
into
lods
sub
insb
loopne
adcl
sbb
ret
ja
mov
daa
mov
outsb
or
stos
cmp
sub
sti
inc
dec
ds
cs
add
in
cmp
mov
call
cmp
add
hlt
jmp
lods
add
cs
inc
dec
sahf
sbb
inc
pop
loope
idiv
mov
popf
add
shrl
cmp
jl
add
push
push
cmp
cmpsb
leave
jge
popf
in
repz
mov
and
or
addl
or
push
and
mov
sub
inc
mov
mov
add
push
and
fimuls
arpl
negb
jp
xor
inc
mov
add
mov
lret
std
xchg
push
xchg
or
out
and
push
mov
call
and
gs
pusha
jae
rcr
jmp
cmp
sub
push
popa
or
adc
add
jmp
jne
pop
test
mov
push
mov
xor
or
lret
idivb
pop
xchg
adc
xchg
movsb
hlt
dec
enter
test
cltd
push
fldcw
cmp
icebp
push
sahf
stos
iret
push
fnstsw
cmc
pop
inc
cltd
pop
ss
pop
sbb
fstpl
sbb
jnp
shlb
enter
cmc
sbb
fidivs
and
bound
mov
lds
jg
and
testl
sbb
jo
test
add
sub
add
push
mov
and
aad
pop
xchg
clc
call
jmp
ds
in
jo
cli
daa
sbb
mov
push
leave
popf
push
cmc
jbe
mov
add
sbb
sahf
dec
into
or
sub
outsb
ljmp
pop
rcll
pop
popa
out
mov
inc
pop
xchg
jb
mov
mov
in
sbb
aad
sub
jno
jl
mov
xchg
mov
xor
add
or
std
repz
enter
fildll
es
pop
mov
adc
test
inc
jbe
pop
rcl
xchg
mov
dec
xor
add
shlb
push
in
fisttps
mov
and
mov
xchg
push
xor
in
fisttpll
adc
daa
add
xor
testb
outsl
xchg
sub
bnd
stc
into
cmp
push
sbb
cmpsl
xor
sti
notl
rclb
int
das
and
sbb
adc
cmp
insl
ret
pop
sarl
js
rcl
aam
fxch
push
add
mov
loop
adc
stc
imul
sbb
sub
push
push
mov
outsl
stos
xchg
roll
daa
loop
sbb
mov
xchg
mov
es
lcall
ja
cmpsl
hlt
test
lcall
daa
pushf
pop
jl
push
jl
mov
jmpw
rcrb
lret
mov
xchg
inc
push
cmovno
aad
mov
lods
sub
push
push
sahf
mov
mov
pop
fwait
stos
sub
mov
adc
pop
rep
xchg
lret
hlt
test
mov
lret
push
push
lods
out
popf
sub
nop
push
andl
push
repz
fsub
or
stc
aad
or
fisttpll
xor
inc
push
rcll
xchg
repnz
mov
sbb
je
idivl
cs
bound
pop
imul
lret
jecxz
enter
jecxz
out
inc
leave
xchg
leave
pop
fwait
add
loop
inc
aam
inc
pop
lret
pop
mov
add
mov
jle
pop
inc
xchg
or
push
stos
mov
cli
sti
jge
and
dec
adc
lods
outsb
jmp
leave
cmpsb
xor
dec
arpl
cmp
pop
jo
pop
notl
lret
jb
pop
inc
sub
stc
add
ljmp
and
and
xor
adc
loopne
in
push
sbb
fs
cs
insb
push
and
ret
dec
push
inc
xor
lcall
das
push
cmp
lret
lock
dec
or
adcl
mov
sub
pop
inc
or
ja
std
pop
dec
out
mov
pop
lods
cmpsb
cmc
push
movsl
sbb
mov
and
adc
ret
or
cmp
insl
cltd
mov
push
xchg
mov
lods
into
pop
jno
or
enter
repz
aaa
xchg
xor
shll
and
js
imulb
mov
xlat
lods
loop
inc
xchg
adc
jecxz
leave
cwtl
xorb
adc
cmpsl
push
and
or
or
fiaddl
cmp
jno
nop
mov
push
push
push
cmp
mov
pop
xchg
inc
leave
into
popf
out
cmp
rcrl
lock
adc
pop
add
lret
aaa
in
jb
cltd
pusha
jae
or
nop
inc
fmuls
mov
test
je
std
or
mov
inc
inc
imul
mov
inc
pop
shlb
andl
nop
add
inc
icebp
pop
out
test
mov
mov
loope
inc
add
lods
into
pop
xor
outsl
andl
cmc
xchg
inc
in
sub
adc
ret
or
sub
cmc
sti
sub
ja
cli
cmpb
jbe
mov
std
sub
fninit
push
sub
iret
mov
jns
jae
pop
add
sub
sbb
inc
cmp
outsl
dec
xor
in
xchg
repnz
jge
add
and
mov
inc
xchg
sarl
fs
jb
pop
cmpsb
js
add
aas
rcrl
sbb
lds
loop
mov
clc
mov
sti
push
pop
mov
stc
daa
iret
leave
nop
xor
popa
mov
sbb
push
dec
fadd
lea
insb
aad
js
orl
gs
arpl
jg
cltd
insl
pop
gs
inc
mov
dec
xchg
test
xchg
dec
push
sbb
adc
scas
das
cmp
cmpsb
mov
arpl
mov
sub
in
push
xor
adc
pop
dec
popa
orl
push
stos
or
pop
test
iret
scas
outsb
lret
es
mov
mov
stos
add
insl
mov
xor
rclb
pop
jge
pop
and
mov
mov
adc
push
aad
cwtl
cmpl
faddp
jge
cld
inc
sub
mov
ds
adc
pop
rolb
xor
or
test
xchg
mov
mov
fsts
fisubrs
out
push
fildll
mov
or
and
fwait
pop
sbb
ljmp
std
lock
sub
jb
mov
jge
test
notb
pusha
pop
push
outsb
mov
pop
xor
out
adc
pop
mov
inc
int3
jbe
sub
sbb
test
mov
pusha
xor
pusha
push
pop
push
insl
fsubrl
lret
jno
cwtl
flds
faddl
loopne
out
adc
mov
frstor
xor
int
cmpsl
mov
add
in
loopne
test
lahf
mov
jge
mov
add
outsl
cmpsl
inc
push
shl
shrb
imul
pop
pop
sub
nop
inc
mov
mov
clc
jecxz
leave
lods
xchg
cmpsb
nop
xor
hlt
mov
adc
stos
add
xor
mov
adc
lret
ss
jbe
pop
rol
imulb
or
dec
jnp
jg
jecxz
bound
mov
test
stos
aaa
popa
cmp
push
or
cmp
push
in
pop
push
jae
inc
dec
pop
repz
xchg
add
adc
mov
mov
push
wbinvd
orb
fdivrl
sti
or
pop
add
iret
push
sbb
out
pop
or
fwait
sub
les
jbe
mov
out
dec
das
xchg
xorl
loop
inc
lcall
hlt
xchg
aaa
lds
inc
stos
mov
fdivs
outsb
nop
ficompl
dec
push
clc
or
int3
push
dec
movsb
inc
mov
pop
push
bound
pop
lret
xor
lahf
mul
mov
mov
fs
shrl
push
fimull
xor
xchg
mov
xchg
add
in
test
mov
xchg
and
loope
data16
pop
push
ds
inc
adc
mov
test
and
in
xchg
sub
and
ss
ds
sub
push
xchg
mov
scas
lods
mov
dec
fstl
mov
cwtl
pop
idivl
ss
dec
cmc
out
and
xchg
mov
out
in
imul
adc
popa
es
and
sub
test
loopne
in
das
fstps
imul
mov
push
push
push
dec
loope
gs
adc
pop
push
xchg
cmp
pop
test
ret
xor
stc
inc
mov
push
stos
xchg
subb
dec
fwait
and
xor
test
dec
call
mov
into
mov
clc
or
sbb
adc
jmp
mov
sub
xor
jae
mov
mov
lds
cmp
jb
enter
out
sbb
testb
cmp
jmp
sbb
ret
out
inc
cmpsl
sbb
imul
ljmp
jg
imul
loop
movsl
mov
rcll
hlt
xor
gs
popf
insb
xchg
push
push
mov
and
les
jg
lods
cmc
or
jns
movsb
addl
test
pop
cmpsl
adc
lds
jecxz
push
sbb
out
gs
push
adc
mov
jb
dec
in
cltd
dec
popf
sbb
xchg
and
lods
jecxz
push
cmp
push
jne
repnz
out
sbb
mov
fdivr
xor
stos
sbb
or
and
mov
and
shl
shll
dec
aam
aad
iret
push
lret
bound
add
add
in
adc
fstl
pop
dec
sub
and
popf
popa
js
xchg
jnp
inc
or
imul
ljmp
cs
push
test
sub
xchg
mov
sub
pop
adc
in
subl
ja
pop
and
jbe
inc
pushf
dec
lret
ljmp
or
mov
dec
jb
inc
xchg
sub
out
imul
sub
sub
js
out
sbb
push
mov
dec
mov
testb
dec
sahf
fisubs
stc
cmp
into
xor
sbb
add
iret
pop
sti
enter
ret
jnp
out
sbb
cli
sub
pop
int3
lcall
push
and
cltd
mul
imul
fs
out
mov
add
push
inc
lods
jmp
int
sub
inc
call
cmpsb
sti
stos
pop
dec
cmp
mov
push
adc
pop
repnz
daa
dec
aaa
scas
xchg
in
jbe
add
subb
data16
loopne
cmp
sbb
xor
jns
xchg
into
fcoms
xor
insb
iret
in
jecxz
stos
pop
dec
addb
mov
sbb
aam
cmp
int3
pushf
lods
adcl
push
lret
sbb
and
iret
mov
xchg
imul
out
scas
ds
lods
inc
push
push
and
aad
jae
incb
shl
mov
and
stc
pop
out
and
xchg
mov
cmpsl
popa
mov
adc
inc
sbb
xchg
jnp
lret
mov
in
jge
dec
loope
push
test
repz
popa
imul
outsb
pop
scas
jbe
pop
pop
das
fisubl
cmp
mov
bswap
inc
push
xlat
push
dec
or
jnp
divl
pop
outsl
bound
ss
mov
ds
cmc
jp
push
je
testl
mov
fbld
mov
jb
pop
adc
add
je
jecxz
popa
lcall
fwait
add
inc
insb
and
insb
or
xchg
add
pop
add
lock
or
inc
xor
mov
jmp
mov
mov
out
ror
mov
loopne
cmpsb
scas
mov
xchg
scas
sbb
cli
dec
int3
cs
or
or
sbbb
rcrb
test
inc
jge
jle
jae
aad
loop
ss
insl
and
cmc
add
jne
mov
mov
mov
enter
or
add
jge
ja
iret
loop
mov
out
cmp
pop
fsubl
clc
mov
mull
mov
stc
inc
jmp
push
int
test
inc
add
mov
dec
subl
push
in
cmp
popa
imul
ss
push
push
mov
mov
pop
ret
call
mov
cltd
test
shlb
int
lds
add
into
call
rolb
and
clc
jne
dec
sti
pop
and
push
sbb
sub
fcoml
in
sti
jp
adc
sbb
clc
or
jecxz
push
and
or
and
adc
xchg
xor
xor
mov
xchg
or
lret
adc
mov
addl
sbb
fistpll
inc
or
mov
out
lock
imul
test
rcll
and
jmp
add
outsl
pop
sub
cmp
cmpsl
jle
push
add
out
pop
pop
movsl
push
push
fcmove
pop
sbb
push
test
divb
xchg
lods
lcall
out
out
push
xchg
ljmp
nop
into
mov
jbe
das
jl
rcrl
mov
sub
stos
inc
sarl
pop
pop
decb
mov
test
outsl
lock
repz
out
into
dec
aam
test
push
pop
xor
push
dec
into
test
dec
or
mov
xor
or
mov
mov
pop
pop
mov
mov
movsb
sti
sbb
data16
out
pop
addr16
mov
lock
mov
xor
xor
push
add
jne
jne
mov
rcll
je
repnz
mov
roll
jge
adc
xchg
mov
xor
push
jecxz
nop
roll
fcoml
push
or
fwait
test
lods
rorb
scas
push
repnz
xor
xchg
dec
mov
xor
cmp
mov
xchg
jle
lret
out
xchg
xor
fucom
outsl
xor
pop
inc
sub
aaa
in
inc
fmull
mov
cmc
add
jg
dec
jmp
and
inc
ljmp
pop
cmpsl
outsl
ljmp
mov
orb
jle
mov
and
in
jge
stos
sbb
xor
fimull
pusha
loope
mov
stos
sub
xchg
imul
fldcw
jns
pop
imul
inc
dec
outsl
dec
imul
lds
and
jne
inc
cmp
xchg
out
fsts
cli
lret
mov
out
sbb
jns
lahf
leave
ds
xchg
addr16
andb
test
push
mov
int3
pusha
leave
mov
adc
jp
adc
mov
dec
xor
out
dec
xor
adc
mov
in
dec
mov
sub
xchg
movsb
or
imul
pop
fnstenv
scas
in
pop
sbb
xchg
adc
push
jne
divb
ljmp
scas
or
mov
jb
xlat
imul
cli
mov
mov
xor
jge
ja
aad
cmp
inc
dec
out
xor
jmp
add
inc
ret
sub
in
int3
mov
mov
popa
jge
or
fcoms
out
scas
pop
mov
mov
outsl
jne
lcall
cmpl
sbb
test
push
mov
cmp
adc
std
add
lahf
pop
popf
push
daa
stc
adc
push
pop
or
push
jne
add
xchg
fmulp
mov
loopne
sbb
mov
mov
in
adc
lret
mov
mov
or
aad
and
add
std
das
imul
iret
mov
icebp
mov
je
jbe
out
mov
fldenv
call
fisubrs
inc
mov
mov
imul
popa
data16
mov
ljmp
pop
dec
rcrb
lock
cli
mov
fstpl
stos
ret
xor
mov
cmp
fidivrl
and
test
push
stc
xchg
lret
andb
sub
outsb
std
loope
orl
les
push
test
es
repz
call
mov
fdivl
scas
mov
jae
sbb
int3
push
sbb
cmpsb
mov
push
imul
mov
add
cltd
mov
aam
dec
push
lods
dec
mov
out
inc
adcb
test
test
mov
mov
push
lock
sarb
and
mov
ja
jg
mov
pop
sahf
out
fstl
sbb
fcoml
lret
jns
adc
mov
xor
cmp
lods
cmp
imul
xor
pop
push
jmp
int3
out
jmp
pop
mov
pop
jp
add
mov
sub
or
lahf
jg
repz
cmovo
push
lcall
pop
and
mov
fwait
add
mov
cmpsl
mov
clc
dec
xchg
cs
fcoms
jbe
cs
push
adc
jne
lcall
cmpsl
enter
lret
fwait
ret
add
fs
cmp
or
cmpl
sub
xorl
outsl
outsb
mov
bound
out
jae
imul
mov
add
xchg
dec
ret
jge
pushf
sti
push
jg
out
mov
or
scas
ljmp
pop
push
add
pop
hlt
or
and
dec
mov
dec
jmp
xchg
sub
fidivl
movsl
adc
ret
push
mov
fnsave
nop
in
fists
pop
cmpl
movups
xchg
push
filds
jge
mov
jo
stc
xchg
cmp
in
cld
leave
in
out
or
imul
mov
jg
pop
fsubrs
push
mov
cmp
loope
bound
pop
adc
sbb
dec
test
cs
scas
xchg
jge
inc
jle
mov
jne,pn
xchg
fmull
test
push
test
arpl
cmp
aas
inc
test
scas
shll
scas
and
adc
mov
jbe
jae
sub
outsb
adc
jp
xchg
lret
pushf
push
pop
inc
mov
jmp
push
mov
sbb
in
out
icebp
adc
outsb
leave
int
in
enter
insb
rcll
adc
push
orl
int
and
jge
notb
pop
ja
fsubrl
adc
cmp
addb
mov
push
add
jmp
cwtl
pop
jo
lret
mov
dec
loop
push
xchg
pop
pop
or
cltd
jnp
loop
imul
sti
ss
js
sub
int3
inc
js
jo
rcrl
sbb
or
stos
sbbl
adc
inc
cmpsl
ja
gs
outsl
and
sbb
and
sub
ja
stos
gs
popa
adcb
je
ds
add
or
aam
nop
fs
xor
xor
inc
push
pop
std
jne
xor
stos
jns
add
in
jmp
push
adc
daa
cmpsb
imul
movsl
jmp
push
sub
push
lods
dec
inc
nop
aaa
loopne
or
shrl
mov
push
push
leave
fisubrs
mov
pop
xchg
repz
stos
mov
mov
js
xchg
popa
test
test
rcl
mov
fildl
fnstcw
les
nop
mov
out
xor
int3
cli
stos
sub
or
cli
pushf
push
notb
cmp
popa
pop
mov
clc
mov
les
pushl
enter
jge
movsb
dec
push
inc
adc
nop
jmp
test
mov
pop
sub
call
fdivl
mov
sub
fwait
jnp
fcomip
add
repnz
sub
cmp
mov
push
outsl
sub
dec
mov
xor
or
das
fists
cmp
jecxz
push
xlat
loop
add
int3
mov
fcom
bound
lcall
inc
stc
and
push
jle
out
inc
add
pusha
cmp
pop
inc
and
xor
adc
push
jae
xor
fidivs
and
jg
cld
scas
sbb
pop
fwait
ljmp
js
lcall
xor
lods
ja
and
dec
scas
lret
jle
inc
jge
xor
or
cmc
jecxz
mov
fidivl
adc
shl
jno
xor
push
in
ffreep
adc
movhlps
das
inc
fsubr
push
push
in
lock
std
push
push
leave
inc
pop
lock
in
insb
pop
inc
das
mov
push
test
dec
scas
sub
add
daa
lcall
sahf
test
shll
or
inc
xlat
xor
cltd
popa
mov
cmp
sbb
ljmp
ds
mov
xchg
push
cmpsb
xchg
aas
xchg
outsb
push
dec
mov
inc
mov
jge
mov
outsb
test
in
icebp
lret
cs
pop
mov
bound
repz
cmp
repz
pop
xor
xor
jno
rcr
fcomp
fwait
jp
sahf
scas
repnz
cmp
and
lcall
stos
into
push
enter
fisttpl
jno
jae
sbb
dec
cwtl
in
cmp
test
lcall
nop
jmp
add
repz
cmp
lcall
mov
les
dec
xor
cmp
jge
inc
daa
xchg
rclb
iret
cld
iret
pop
in
mov
jb
leave
loop
mov
test
std
imul
jg
mov
and
fnsave
aam
nop
fcoml
dec
push
push
fstpt
xor
aad
push
xlat
xor
add
imul
pop
or
jae
ret
mov
in
xchg
mov
pop
and
shll
mov
int3
and
jnp
cmc
inc
sub
and
cmp
lret
xchg
call
pop
jl
ret
cmc
lahf
dec
cmc
xchg
mov
stos
loopne
inc
cmpsl
imul
pop
mov
cmp
mov
es
stc
mov
fisttpll
mov
xchg
and
jge
sbb
dec
xchg
cmpsb
mov
nop
xchg
cmp
es
cmp
fidivrl
sub
dec
push
xchg
out
and
gs
dec
xlat
pop
mov
xchg
das
or
es
cmpsb
shlb
leave
testl
xchg
les
pop
xchg
arpl
int
or
fcoml
bound
mov
pop
xchg
pop
test
in
dec
and
sub
mov
lods
unpcklps
lcall
dec
popf
gs
popl
mov
inc
pop
push
pop
jp
pop
xor
cmpsl
std
bnd
sub
pop
aad
inc
cwtl
int
or
sbb
xorb
dec
mov
xorl
add
mov
aaa
xor
push
sbb
inc
lds
inc
sbb
out
dec
sbb
mov
scas
daa
mov
cmp
sahf
pop
popa
dec
xor
mov
add
mov
fistpll
lret
ja
inc
imul
xor
xor
repnz
std
xchg
pop
jne
xchg
sub
into
addl
icebp
fs
imul
les
jle
lock
pop
sub
pop
lea
stos
push
xchg
lret
xor
jl
jo
scas
call
dec
sbb
fistpl
jne
scas
into
sub
lods
movsl
insl
pop
pop
int
addr16
es
push
out
lahf
pop
ja
mov
cmc
popa
mov
cmp
ja
adc
ss
pushw
cmc
popa
ret
or
xchg
cmpsl
mov
outsl
movsl
push
cmpsl
mov
loope
jge
lcall
clc
hlt
lret
mov
leave
sbb
mov
mov
dec
ja
lret
lock
cmp
cmp
cmpsl
adc
int3
out
scas
std
ja
mov
jmp
pushf
mov
xchg
ja
sub
xor
xchg
jmp
push
ret
test
in
sub
dec
inc
in
cmp
iretw
inc
sub
jecxz
xor
fwait
cld
outsb
int
fdivrl
rorb
cli
add
jb
ficoml
les
jne
mov
pop
shlb
cmp
leave
and
mov
xchg
cmp
xor
call
or
movsl
ret
cmp
and
xchg
jb
cmp
mov
incl
lret
dec
adc
xor
ss
jmp
out
xor
xchg
test
mov
and
dec
cmc
sbb
or
pop
aas
fs
mov
pop
in
adc
fildl
mov
xchg
push
inc
fistpl
pop
movb
bound
jge
test
fwait
mov
ds
pop
insl
out
inc
scas
mov
aam
dec
lods
sub
mov
pop
and
xor
repz
insl
fmul
sahf
push
sbb
mov
cmp
mov
push
ds
and
jo
inc
inc
jnp
test
push
call
cmpsl
out
das
xor
sbb
xor
fistl
in
mov
add
cmpsl
mov
add
or
div
imul
cli
out
pop
jnp
pop
mov
jbe
pop
jb
push
xchg
hlt
cld
cmp
push
clc
out
mov
movsl
jp,pt
sub
addps
out
adc
sbb
dec
xchg
xchg
jge
pop
and
pusha
mov
xor
and
push
jnp
inc
into
jno
fnstenv
inc
mov
inc
testl
insb
jne
pop
inc
and
or
adc
int
lods
aaa
aaa
xchg
rorb
add
dec
xchg
cmp
stc
jecxz
dec
add
xchg
xchg
rorb
shlb
adc
dec
push
mov
mov
inc
lock
aaa
jmp
lods
cmp
test
pop
iret
lock
xor
sbb
dec
rcr
add
js
or
sbb
outsl
cli
jae
pop
cwtl
es
jmp
stc
cltd
sahf
out
jmp
outsb
cmp
loope
mov
rcrl
in
xchg
add
int3
mov
scas
xchg
push
jmp
pop
call
mov
daa
xchg
pop
pusha
lods
js
test
aaa
cmpsb
in
inc
xchg
fidivl
fbstp
out
inc
jg
imul
jmp
xor
std
jo
mov
sti
outsl
sub
aaa
pusha
fldcw
gs
cwtl
ljmp
je
mov
aad
adc
push
lcall
add
ja
imul
cs
std
add
xor
shl
imull
cwtl
aam
xor
ja
jmp
mov
fstps
push
shll
int3
mov
jb
jns
idiv
adc
ja
jno
add
scas
out
mov
push
mov
out
outsb
in
inc
cmp
pop
pop
lds
out
adcb
lods
ret
ret
sbb
sbb
mov
mov
movl
push
xchg
inc
fbstp
and
shll
xchg
pop
scas
sub
fwait
cwtl
aam
mov
sbb
addr16
adc
dec
gs
lahf
ds
cmp
pop
and
ret
add
stos
adc
aam
in
jae
or
add
pop
jl
mov
data16
addr16
inc
xchg
enter
in
ret
adc
pop
addr16
xchg
ret
call
adc
push
push
mov
mov
cltd
push
scas
test
cmpsl
sub
lret
xlat
pop
cld
std
adc
jmp
inc
out
enter
adc
cmp
mov
add
mov
push
subl
push
int3
sub
push
cmpsb
push
addr16
and
mov
or
dec
pand
sahf
jns
inc
out
pop
adc
fcmovnbe
jge
add
out
sbb
hlt
add
pop
mov
iret
push
popa
dec
fs
add
dec
pop
or
push
sub
pop
aas
pop
incb
in
stos
ret
clc
push
clc
lods
mov
inc
rcrl
ret
inc
out
mov
adc
jns
jno
sahf
aas
xor
lea
out
in
rcrb
mov
jmp
sbb
idivl
add
cmp
repnz
shlb
clc
sub
nop
stc
push
push
add
rcr
test
pshufw
mov
jns
shlb
ja
cs
in
jg
lcall
lret
nop
dec
pop
dec
pop
jmp
pop
mov
mov
mov
cmpl
sbb
aad
daa
dec
test
cmp
push
mov
mov
mov
add
pop
jp
rcl
xor
jmp
lcall
jp
xchg
cmpsl
repz
sub
pop
leave
ja
jmp
fwait
incl
lahf
shr
test
or
pop
fldenv
pop
or
push
cmp
aam
ds
and
stos
in
jne
outsl
aas
xor
out
int
mov
xor
mov
sub
imul
push
fwait
inc
sub
jno
xchg
pop
mov
repz
daa
sbb
lods
xchg
bound
jnp
ja
xchg
xchg
es
aad
inc
jae
pop
enter
data16
loope
data16
fcomps
or
ss
aaa
fisttpll
jo
mov
mov
rcrb
adc
xor
jbe
or
cmc
or
push
loop
js
push
push
fmul
push
pushf
mov
adc
xchg
pop
pop
sahf
movsb
ja
test
and
loopne
jp
mov
insb
add
lock
ja
mov
adc
shrl
aad
lea
jge
mov
lods
or
outsb
insb
fwait
or
cltd
xchg
filds
fldcw
js
xor
lcall
clc
test
jb
xchg
pop
adc
cmc
pop
or
xlat
cmp
aaa
jle
push
cmp
mov
nop
sbb
dec
push
inc
sbb
push
rolb
mov
jg
mov
out
lds
lock
out
mov
pop
cmp
or
pop
jb
mov
bound
movsb
les
into
sar
clc
add
js
repnz
or
dec
push
icebp
mov
mov
popf
sbb
sbb
insb
push
enter
cwtl
ret
and
leave
popf
mov
mov
jnp
add
rcr
push
shr
idivb
mov
ficoml
pop
loop
loope
xor
das
adc
in
jnp
mov
inc
jle
adc
ljmp
test
jmp
pushf
sub
push
adc
pop
jno
shlb
pop
iret
or
push
rol
add
test
shlb
mov
mov
dec
xchg
loopne
and
outsb
cmp
pop
cld
mov
mov
jno
lods
pushf
cli
and
jmp
mov
lods
test
popw
xchg
and
test
mov
dec
mov
mov
mov
adc
insb
and
mov
inc
int3
inc
xor
movsl
xchg
jmp
push
jg
cmp
adc
loope
jge
pop
push
scas
inc
rorl
dec
push
mov
cmp
idivb
sbb
sub
mov
xor
imul
add
out
pop
add
dec
jl
inc
inc
roll
xor
inc
sahf
push
insl
and
icebp
movsb
daa
out
insl
mov
cmp
push
test
js
out
dec
movsl
and
dec
dec
pop
push
jb
push
fwait
das
outsl
mov
and
jae
cld
add
mov
or
mov
and
xchg
scas
cmc
add
sub
fsub
scas
pop
jb
jno
xor
dec
roll
sbbb
movsl
push
test
push
push
xor
pop
sti
stos
mov
xlat
adcl
ss
popa
imul
jle
sbb
repnz
xor
inc
cmp
imul
xor
push
dec
outsb
ret
jmp
jle
aad
jnp
imul
popa
call
cmp
les
adc
push
int
frstor
jbe
inc
push
decl
inc
cmp
test
jb
in
ret
enter
outsb
enter
push
fistl
sub
stos
cltd
nop
jp
pop
mov
iret
push
stos
inc
cmpsl
inc
jmp
inc
adc
call
mov
insl
mov
mov
stc
out
cmp
sub
push
push
sub
xor
sub
daa
rcl
pop
cmpsl
sbb
dec
scas
jns
out
out
aaa
push
aas
sbb
stc
mov
daa
mov
inc
aam
nop
cltd
enter
repnz
sahf
orl
push
iret
ja
in
pushf
and
jmp
push
pop
ds
enter
and
arpl
pop
push
xchg
mov
aad
pop
ror
ja
jl
test
stc
sbb
mulb
jge
inc
xor
jae
dec
sbb
scas
les
push
pop
mov
push
pop
popf
fbstp
or
test
repnz
cmpsb
xlat
and
mov
es
xchg
ss
jl
sbb
jle
xchg
scas
dec
nop
in
mov
sbb
scas
inc
pop
jne
lcall
outsl
in
inc
sbb
pop
adcl
test
icebp
add
pushf
arpl
or
and
faddl
push
ljmp
sub
inc
cli
adc
inc
adc
repz
clc
jnp
and
cwtl
inc
push
jno
cmp
lods
fwait
mov
cld
cmpsb
repz
pushf
movsb
xor
lods
test
repnz
aad
push
arpl
ss
jo
cmp
fists
out
jecxz
mov
rsqrtps
add
enter
imul
mov
imul
pop
daa
push
lods
xlat
add
out
mov
cmp
test
mov
xchg
adc
mov
ja
sub
mov
lea
mov
sbb
mov
pop
xor
aas
insl
jb
cmp
jl
push
int
xlat
push
cmovnp
xchg
sahf
aad
lret
ss
aam
mov
mov
dec
or
cmp
sbb
lock
roll
shlb
imul
les
xor
stc
out
lea
cmc
sbb
ret
aad
das
mov
pminsw
jge
pop
in
and
sbb
arpl
negl
loop
fldl
mov
cmp
std
mov
stos
pop
je
mov
aaa
scas
fwait
jno
loope
jmp
mov
inc
arpl
push
adc
inc
mov
dec
addr16
std
dec
pop
sbb
push
out
out
leave
cmp
jl
mov
das
and
xchg
test
shlb
pop
jecxz
outsl
jp
aad
dec
jle
mov
push
fidivrl
jb
sbb
xchg
adc
mov
mov
enter
jmp
and
aaa
popf
data16
mov
cld
in
fld
push
cmp
dec
mov
or
dec
dec
sti
dec
fsincos
add
adc
adc
dec
cld
fcoml
or
cmp
mov
xor
add
push
dec
pop
cmc
jae
jne
imul
outsb
call
jo
ficomps
out
inc
jae
jl
mov
xor
and
rcr
mov
xor
in
out
rcll
es
push
xchg
test
cmp
leave
scas
fists
pop
inc
cmp
cmp
sbb
fnstsw
mov
pop
sti
loop
xchg
mov
and
lea
shrl
stc
jne
and
mov
cmp
inc
fimuls
cld
scas
dec
adc
sub
or
cwtl
adc
xor
in
dec
xchg
and
inc
shrb
cmpsl
mov
lods
fcompl
xlat
adc
lret
jo
and
push
adc
fidivrl
xchg
pop
ljmp
pusha
sti
es
repz
add
dec
call
loope
dec
sbb
negl
sbb
inc
mov
shrb
stos
xchg
int
pop
push
mov
dec
ffree
popf
fists
insb
cmpsl
ljmp
mov
sub
mov
aas
ficoml
inc
pop
addl
adc
add
sub
mov
xchg
or
xchg
pop
adc
negb
mov
int3
popf
jnp
fstps
test
idivb
sub
subl
outsl
js
xchg
cld
mov
nop
pop
xlat
xchg
and
add
cpuid
push
add
inc
cmp
jg
enter
mov
xlat
in
fcompl
pushf
xor
iret
sub
lods
fnsave
scas
add
ljmp
pop
push
arpl
cmpsb
bound
push
jo
ret
mov
das
push
mov
lods
inc
repz
rorl
vmaxps
cmp
add
out
lcall
decl
lea
and
adc
add
mov
jl
sbb
inc
cld
scas
test
loope
jns
cltd
repnz
pop
lds
sub
add
jnp
movsl
daa
pop
stc
pop
cmp
jmp
ficoml
scas
jmp
lcall
popf
xlat
roll
sbb
cmp
inc
shr
push
xchg
and
mov
lret
jmp
rol
xor
xchg
lcall
iret
pop
outsl
or
test
sub
hlt
stc
pusha
test
insb
scas
push
cmc
push
imul
mov
jbe
pop
pop
mov
cwtl
jmp
push
fists
mov
mov
in
mov
sbb
inc
pop
cmp
loope
addr16
mov
lds
dec
and
sti
mov
xor
repnz
mov
sub
movq
sbb
xlat
movsb
pop
lahf
cmc
dec
mov
mov
sub
xchg
ljmp
xor
jne
ljmp
test
inc
ret
adc
stos
aad
aaa
dec
jmp
dec
bnd
mov
xor
xchg
dec
daa
movsb
or
out
push
push
mov
jnp
jle
cmp
std
xchg
pop
hlt
ljmp
jp
test
mov
out
cmp
xor
pop
pop
ja
pop
js
sbb
lock
cmp
jne
sbb
dec
or
jne
mov
mov
jl
cmp
imul
pop
ds
ret
pop
inc
adc
imul
dec
cltd
xchg
shrl
sbb
shll
add
adc
adc
adc
lods
jbe
add
xor
mov
scas
jo
dec
out
leave
out
jmp
cld
add
pushf
mov
push
sbb
test
les
xlat
cs
mov
out
sbb
xchg
inc
ffree
dec
cmp
inc
icebp
bound
js
xor
adc
loope
dec
std
add
int3
or
cmpsl
leave
cmp
xor
sub
mov
sbb
and
sbb
sub
outsb
arpl
adc
cmpsb
mov
sbb
pushl
nop
stc
and
mov
cli
sbb
cmpsl
insb
jmp
fwait
sub
adc
test
imul
or
cwtl
shlb
aad
out
jno
sub
divb
inc
cmp
xchg
push
out
ss
xchg
clc
mov
aas
push
cli
aas
dec
adc
insl
iret
dec
ljmp
hlt
push
mov
jns
imul
xchg
cmpl
push
xchg
push
mov
test
lea
jge
scas
fistps
arpl
test
pop
jl
test
sub
ret
dec
pop
jmp
popl
pop
mov
lods
stos
pop
in
sub
add
pusha
jno
xorb
stos
les
outsb
mov
test
or
mov
fcmovb
xchg
mov
test
and
push
cmp
pop
xchg
push
mov
rorb
or
ljmp
int
mov
icebp
outsl
repz
pop
xchg
cmc
xchg
mov
call
jo
cmp
hlt
and
mov
adc
push
sub
cwtl
xor
xchg
mov
fisubrs
xor
and
cltd
lods
push
pop
int3
das
mov
xchg
push
inc
jmp
lods
jle
adc
push
insl
les
mov
ss
rorl
sahf
and
xor
xchg
out
fisubs
cs
push
ss
xlat
mov
xor
into
mov
sub
sar
int
pushf
xor
sub
xchg
jmp
cmc
xchg
adc
inc
xchg
mov
adc
push
pop
jb
inc
xchg
lods
leave
cld
je
cmp
pop
lea
imul
gs
test
jg
push
shll
outsl
ljmp
xor
jp
popa
mov
inc
and
jg
inc
enter
cmp
inc
pop
push
pusha
xor
testb
jmp
push
and
adc
lods
jecxz
mov
ja
je
test
jge
test
pusha
or
cmpsl
scas
add
dec
or
pusha
mov
add
icebp
fwait
das
xchg
adc
mov
sbb
enter
sbb
repz
dec
mov
outsl
mov
repz
cmp
test
dec
jae
inc
shrl
ret
outsb
insl
jns
in
cmp
pop
mov
mov
xor
push
clc
mov
pushw
adc
dec
push
mov
imul
xchg
aaa
mov
mov
push
scas
pop
inc
int3
push
cmp
loopne
testl
adc
ret
call
dec
outsl
insl
cltd
loope
cltd
push
clc
negl
dec
int3
test
xor
cmp
adc
mov
stos
xlat
xchg
gs
mov
ficoml
rcrl
sub
xor
out
adcl
push
mov
jp
inc
int
jb
push
outsb
mov
enter
pop
or
pop
loop
movsb
xchg
dec
sbb
cmpsb
adc
paddusw
mov
xchg
js
dec
push
cmp
adc
in
push
fwait
adc
push
pop
insl
mov
cmp
add
mov
jmp
aam
push
pop
mov
rol
push
xchg
jl
jno
inc
sub
xchg
inc
nop
pop
loopne
cmpsl
dec
insb
sub
adc
adc
mov
out
loopne
push
cmp
movsl
movsl
sbb
out
jb
adc
stc
jbe
push
mov
fldl2e
push
mov
pop
pop
fmulp
lahf
int3
imul
adc
xor
push
nop
inc
jle
jb
or
popf
jb
mov
jns
mov
jecxz
lret
adc
fsubrs
jmp
or
xor
adcb
dec
jp
fsts
mov
xchg
or
insb
icebp
imul
movsl
roll
cmpb
jne
stc
jecxz
dec
ja
ret
outsb
inc
cmp
in
push
imul
cmp
jne
add
popf
xchg
pusha
cmp
inc
pop
pushf
hlt
lods
fdecstp
dec
push
bound
inc
sub
push
data16
push
insb
cmc
push
fcoms
xchg
mov
jbe
sub
cltd
mov
cmpsb
jle
jne
aam
scas
loopne
cltd
sub
shl
movsb
aam
rcr
adc
clc
popw
shrb
adc
dec
add
jnp
movsb
cmp
aad
pop
int3
sub
insb
cltd
inc
mov
xor
shrl
mov
stos
popa
out
mov
rcrb
adc
outsl
outsl
hlt
cmc
jno
mov
out
mov
mov
loop
lds
mov
imul
inc
dec
adc
rcrb
adc
cwtl
push
pop
notb
lret
call
mov
cmpsl
das
jae
popa
mov
add
shrl
cmpsl
out
push
loopne
xorb
or
shrl
pop
cs
fwait
outsb
jb
outsl
push
or
in
je
inc
in
repnz
pop
push
fcomp
clc
dec
fdivl
mov
xchg
and
inc
sar
int
enter
push
sahf
fwait
lcall
dec
scas
out
jge
mov
and
in
fsubrs
mov
sbb
inc
pop
mov
mov
sar
lret
outsb
mov
or
rorb
mov
scas
sbb
xor
xor
mov
or
xchg
sbb
ret
xor
in
xchg
sbb
pop
dec
mov
mull
push
pop
fs
push
mov
mov
jno
mov
iret
fsubrs
mov
inc
lcall
rorl
add
pop
clc
jecxz
loopne
cmp
imul
call
jle
mov
clc
push
int3
stos
adc
aam
jne
roll
in
mov
sarb
fsubrl
clc
jmp
mov
dec
mov
cmovp
movsl
mov
cmpsl
enter
stc
or
mov
popa
xchg
es
push
subb
xchg
ret
idivb
pop
in
pop
or
jp
shll
ds
lret
in
mov
enter
sbb
inc
rcll
test
mov
andl
div
mov
xchg
mov
jne
pop
or
fsubs
notl
daa
outsb
inc
jb
addl
test
sbb
add
xchg
cli
cmp
mov
mov
sub
cmp
adcb
jmp
popa
fcomip
adc
es
add
sbb
int
sbb
les
inc
mov
mov
shr
ds
lcall
aaa
adc
loop
popf
pop
pop
popf
out
imul
addl
std
or
js
nop
push
lods
test
mov
addl
cmpsl
sbb
jl
imul
jge
loope
mov
inc
mov
pop
push
sbb
in
cld
xor
or
and
mov
mov
nop
dec
dec
fsub
lock
loope
mov
or
or
push
inc
sti
cmp
sti
jo
cmp
popf
cltd
les
adc
out
pop
in
mov
inc
adc
sub
sub
xchg
jne
or
lods
fcomp
and
pop
pop
fwait
rorl
rcrl
out
int
mov
rcl
dec
jmp
sbb
outsl
push
cmp
mov
test
sub
or
mov
data16
fs
lret
adc
push
mov
mov
repnz
testl
add
ss
lret
frstor
push
dec
xchg
test
mov
or
sub
inc
and
mov
mov
inc
jle
mov
arpl
pop
mov
int3
test
imul
lret
lret
sub
xrelease
aad
or
xchg
aad
ljmp
lahf
xchg
int
mov
pusha
idivl
mov
push
mov
and
cmp
sbb
out
ss
xor
cld
das
jno
adc
sub
add
in
lcall
adc
in
mov
jb
clc
rep
pop
test
test
pop
pop
repz
roll
divl
dec
jl
xor
and
fisubl
dec
andl
test
mov
xlat
out
xor
inc
mov
cmc
fcmovnbe
dec
sbb
pop
or
pop
mull
movsb
aam
pop
mov
inc
or
into
in
xchg
leave
aaa
mov
leave
xchg
ret
frstor
es
xchg
dec
sbb
enter
jo
add
rorb
rcll
gs
imul
mov
call
push
imul
cmp
cld
pop
cmp
push
notl
std
repnz
out
pop
popf
test
add
out
in
std
je
or
mov
inc
push
lret
lods
divl
mov
andb
rcrb
leave
push
sub
mov
inc
mov
mov
pop
cmp
xor
add
pop
mov
sbbb
push
hlt
cltd
jne
popa
add
mov
add
movsb
psraw
mov
fnstsw
popa
sbb
push
push
popa
mov
ss
push
push
cs
pop
mov
nop
sub
inc
les
cwtl
push
roll
pop
ficompl
mov
lock
xlat
mov
xor
xor
sti
mov
je
and
and
shlb
int3
pop
nop
push
mov
clc
pop
ret
outsl
xchg
ret
ja
add
adc
xchg
out
push
out
dec
xchg
dec
into
lret
cs
inc
dec
push
movsb
int
mov
dec
mov
rcrb
xchg
mov
loop
sbb
lea
mov
and
pop
fldl
fcom
in
pop
fs
push
add
or
pushf
cltd
outsb
xchg
ja
sahf
mov
outsb
mov
mov
mov
push
pop
pop
jo
or
lahf
dec
cli
pushf
lret
loope
mov
repz
add
lea
cmp
cld
push
xchg
mov
xchg
push
jae
mov
ja
clc
icebp
fsubrp
movsb
sub
out
neg
aad
push
mov
mov
movsl
nop
sbb
jno
icebp
pop
les
cmpsb
and
inc
mov
inc
es
sti
shrl
cwtl
call
inc
mov
mov
or
outsl
push
mov
xchg
push
push
jno
roll
in
std
adc
add
adc
mull
xchg
and
adc
mov
das
ljmp
mov
and
adc
pop
mov
and
dec
lret
int
jecxz
sub
jbe
aas
hlt
push
pop
fwait
mov
lea
jnp
aam
and
stc
fcmove
mov
jecxz
sub
adc
and
or
xor
jno
mov
cli
mov
mov
add
repz
out
mov
dec
mov
js
mov
call
jl
scas
call
mov
stos
dec
and
adc
jns
mov
je
sbb
adc
sub
int3
mov
shrb
pop
inc
jno
insl
scas
fcmovnu
fwait
xor
lret
mov
int3
xor
loop
push
arpl
sbbb
push
pop
pop
outsl
xchg
je
imul
mov
or
push
mov
jl
movsl
inc
loopw
rorb
dec
enter
adc
fadds
push
inc
push
mov
lahf
nop
sub
je
jge
inc
or
xchg
arpl
or
loope
data16
cltd
pushf
cmp
or
loop
fnstcw
cmpsl
mov
jno
out
test
repz
mov
popl
pop
cmp
test
pop
push
fyl2x
in
xchg
push
push
push
and
jl
cltd
pop
in
lds
xchg
xchg
data16
mov
xlat
pop
sub
mov
addr16
or
pushl
push
or
mov
cmp
bound
adc
pop
sub
push
outsl
push
sbb
sbb
in
mov
or
sbb
jge
sub
push
in
dec
mov
xchg
mov
cmp
aad
ret
cmp
sub
mov
pop
leave
loope
or
jo
push
pusha
inc
test
mov
mov
mov
ret
pop
xor
sbb
mov
cmp
push
mov
lods
outsb
jmp
xchg
push
lret
inc
lea
out
popl
les
xchg
mov
lret
xor
outsl
push
leave
cltd
je
data16
inc
daa
xchg
sarl
jbe
xchg
add
jne
cmp
jecxz
inc
into
add
sub
adc
mov
mov
out
pop
xor
push
sub
push
iret
in
ljmp
lods
add
into
je
push
ja
cmpb
push
pop
pushf
lods
sbb
and
inc
push
adc
xchg
mov
pop
in
test
inc
xlat
push
lahf
out
pop
jmp
data16
jb
push
inc
shrl
cmp
test
lcall
push
or
loop
mov
ror
stc
gs
lods
add
mov
mov
push
xchg
dec
pop
rcrb
cmp
jbe
push
push
hlt
stos
adc
fs
fsubr
fmulp
lcall
nop
jo
scas
or
shl
push
test
xchg
and
pop
xor
mov
fisubs
mov
daa
mov
ret
dec
into
imul
ret
stc
mov
xchg
push
rcl
pop
pop
call
insl
dec
inc
jb
push
mov
popf
iret
mov
icebp
mov
popa
mov
iret
adc
cs
cmp
lea
das
cmp
cmc
xchg
sbb
rorl
in
hlt
pop
push
out
mov
enter
push
daa
cmc
jmp
xlat
pop
outsb
jb
jle
jo
xor
mov
cmpb
adc
out
aaa
lret
je
rcrl
dec
xchg
jmp
test
push
jno
sar
xchg
stos
sarb
xlat
jns
test
shrb
xor
mov
sub
jo
jbe
dec
in
aas
push
xor
xor
xor
bsf
dec
movsl
sbb
les
les
xchg
lcall
xchg
or
sete
sub
addr16
dec
jo
adc
xchg
add
jecxz
aad
mov
ds
xor
arpl
mov
mov
add
xor
sbb
out
pop
xchg
movntq
pop
test
je
stc
mov
stos
popf
pop
mov
push
inc
jae
push
or
add
xchg
jge
jg
add
push
call
cmpsb
and
lret
sub
les
mov
jp
pop
adc
xchg
fistps
xchg
repnz
std
nop
aad
gs
cltd
push
les
xlat
sbb
lcall
out
cmpsb
cmp
in
jle
fcoml
dec
and
scas
push
cld
scas
inc
pop
mov
and
cmp
inc
mov
inc
jo
mov
mov
mov
xor
sub
ret
enter
push
int
imul
sbb
or
sub
rcrb
xor
sub
je
jno
movsl
xchg
add
inc
push
sub
fbstp
inc
mov
cs
mov
mov
mov
cld
bound
inc
in
adc
xorl
jne
sub
lds
mov
shll
shll
fwait
lock
dec
movsl
xlat
mov
push
xor
lahf
loopne
std
xchg
xor
mov
mov
push
dec
in
push
andb
cmp
pop
jb
and
push
pop
cld
in
imul
fstpt
xchg
imul
imulb
mov
pushf
or
mov
ja
pop
xor
mov
loopne
add
aas
fsubs
in
cwtl
dec
repz
nop
jl
mov
ss
pop
inc
out
pusha
sbb
sub
xchg
mov
dec
mov
dec
xchg
pop
mov
je
ss
js
jbe
and
add
cmp
test
or
icebp
jnp
add
sub
out
or
jl
cmc
pop
jne
shll
mov
int3
repnz
mov
mov
fnstenv
outsb
loopne
xchg
in
out
push
xor
xor
mov
xchg
cmp
mov
gs
jbe
mov
inc
test
push
fistpll
mov
and
repz
sub
push
add
lcallw
les
push
mov
xor
loope
dec
mov
inc
scas
repnz
bound
mov
imul
lds
out
push
mov
dec
inc
mov
mov
mov
xor
xor
mov
aad
int
pushf
and
sarl
fnsave
push
push
jne
es
xor
push
mov
movb
dec
rolb
lret
pop
mov
arpl
and
cmpsb
dec
cs
dec
les
mov
add
pop
inc
inc
add
cmp
scas
xchg
jl
adc
xchg
repz
les
push
aam
ret
popw
mov
xor
adcl
and
inc
push
int3
cmpsl
xchg
data16
push
inc
iret
aam
push
mov
decb
or
push
and
dec
xchg
mov
mov
sbb
lahf
std
mov
std
test
ret
add
sbb
mov
sbb
push
cmpl
cmp
jno
dec
stos
cltd
mov
mov
fmul
loop
es
push
lea
pop
pop
pop
cmp
outsl
lock
inc
scas
roll
add
pop
mov
add
inc
mov
lcall
mov
imul
hlt
popa
jns
sbb
sub
lock
rolb
mov
fs
xchg
mov
xchg
mov
insl
jecxz
jno
jecxz
repnz
xor
das
lret
pusha
icebp
cmp
call
cmpsl
cmpsl
and
roll
into
jmp
fisubrs
je
xchg
mov
xchg
mov
pop
dec
cmp
sarl
fwait
push
mov
pop
cmp
lds
sahf
pop
mov
adc
insb
into
incl
lret
mov
sub
imul
cli
notb
rorb
jns
fcompl
insl
jp
adc
add
ret
mov
cmp
add
mov
mov
mov
fst
xor
iret
or
sub
mov
inc
mov
sbb
insl
pop
rorl
or
lods
dec
orb
movl
mov
sub
gs
pop
cmp
lret
fs
movsl
ljmp
testb
mov
negb
fsubs
pop
jle
daa
dec
shlb
pop
and
fs
pop
add
mov
and
and
and
push
mov
or
pop
xchg
sub
or
cmp
call
or
inc
scas
mov
or
xchg
dec
jbe
adc
sbb
inc
fcomip
inc
jg
mov
loopne
mov
cwtl
cli
jl
popa
aaa
push
dec
inc
or
fisttps
js
push
mov
cmp
xchg
cmp
mov
sub
cmp
push
out
jo
loope
mov
outsl
test
sub
mov
andl
sbb
mov
fisttpll
ljmp
mov
popa
hlt
nop
fs
iret
pop
shrl
aam
aas
ljmp
and
les
inc
stos
ret
sbb
shll
cs
ds
mov
enter
mov
dec
xchg
mov
cmpsl
xor
rorl
push
cld
push
cs
jno
push
xchg
dec
pop
pop
cmpsl
dec
cmp
test
mov
addr16
and
in
pop
inc
adc
data16
xor
pop
mov
iret
xor
rorl
fsub
xorl
popf
or
jbe
ss
pop
sbb
loope
or
add
in
stos
dec
jmp
lds
xchg
imul
daa
push
jmp
cld
inc
and
sbb
mov
in
cwtl
mov
adc
mov
pop
fdivp
lahf
testb
test
js
mov
lahf
dec
mov
mov
or
sbb
and
lahf
sbb
jmp
xchg
bound
lds
sbb
std
add
stc
mov
sub
fisubrs
daa
or
in
dec
jb
fisttpl
shll
popa
bound
mov
mov
adc
jl
mov
jecxz
pushf
enter
ss
cld
fadd
jbe
xchg
gs
cmpsb
jle
xchg
insb
push
hlt
hlt
push
dec
sti
leave
loopne
divl
cmp
lds
pop
adc
ret
sbb
sbb
cwtl
jne
lahf
xchg
inc
shlb
repz
cli
push
iret
inc
loop
jg
jnp
lret
cmpsl
jb
scas
and
icebp
out
stc
sub
loop
arpl
je
fistpl
cmc
mov
mov
xor
and
pop
push
jbe
cmpsb
nop
xchg
xchg
scas
fisubrs
adc
je
call
fidivl
stc
xchg
shl
dec
or
mov
mov
psrlw
addb
jno
sub
and
shlb
adc
jmp
sub
lcall
movsl
mov
jle
jl
adc
mov
xor
imul
outsl
jbe
rclb
adc
mov
xor
mov
in
call
mov
shlb
ret
xchg
stc
push
mov
mov
xor
push
mov
cmc
add
stos
dec
fcomps
scas
push
lret
jb
sub
xor
ljmp
fs
or
sub
pushf
or
fnstenv
roll
jae
mov
dec
pop
dec
push
mov
mov
jae
mov
lea
ljmp
cmp
mov
sarb
jns
bound
adc
xchg
ja
outsb
push
stc
sub
icebp
cmp
xchg
sbb
mov
or
inc
xorb
cmp
das
jg
loope
inc
xor
sbbl
jecxz
out
mov
xor
pop
and
stos
je
movl
in
dec
dec
mov
loop
in
sub
mov
mov
cmpsb
jmp
cmp
push
xlat
les
iret
pushf
in
mov
mov
add
ljmp
mov
sub
xor
cmp
out
inc
add
jo
into
inc
test
pop
mov
sbb
das
imul
pusha
sub
stos
fs
aam
shrb
jle
xor
mov
js
data16
sbb
and
lret
inc
les
mov
lret
dec
stc
gs
mov
xchg
fcomps
bound
sbb
jle
scas
adc
stc
mov
mov
jp
fnstenv
pusha
dec
int3
aas
mov
dec
push
jne
call
sub
pusha
ret
cmp
xchg
inc
jp
cmpsl
rcl
mov
ficompl
mov
sub
inc
mov
repz
push
and
mov
into
ljmp
mov
cmpb
or
dec
mov
pop
es
je
shrl
rclb
es
sti
ss
mov
mov
pop
out
dec
or
shlb
test
addr16
test
mov
sbb
repnz
je
or
adc
push
xlat
lods
gs
fnstenv
push
pushf
and
inc
in
int3
and
aam
jnp
int
sub
shlb
les
push
nop
cmp
jbe
mov
xor
jl
ja
pop
stc
jp
push
inc
cmp
cmp
cs
fmuls
imul
aad
push
in
fwait
pop
adc
aam
les
inc
sbb
add
mov
mov
fisttpl
or
xor
rclb
insb
inc
fildll
adc
and
test
fdivr
mov
jp
push
jns
jnp
dec
sub
push
es
push
fisubs
jnp
fdivs
test
mov
pusha
xchg
shrb
mov
dec
inc
jno
lds
push
aaa
push
stos
arpl
shrb
int
add
dec
cli
cmpsb
aad
mulb
rorb
shll
std
int3
mov
ret
lcall
icebp
ds
mov
push
rcrb
adc
inc
ja
inc
jge
fcomi
jg
inc
mov
mov
adc
add
cmpl
scas
cmc
add
pusha
shll
sbb
jge
sbb
roll
sbb
sbb
jmp
sahf
outsl
mov
cmpl
shll
jl
xchg
adc
or
mov
rcrl
inc
dec
push
dec
loop
dec
add
pop
mov
lds
sub
test
fistpl
push
out
sub
rorl
push
scas
mov
dec
and
mov
mov
push
nop
pop
test
add
add
ret
pop
sbb
mov
hlt
and
hlt
or
lret
scas
sbb
fisttpl
jecxz
mov
pop
mov
pop
mov
and
repnz
cmp
mov
xchg
push
jmp
lds
add
dec
inc
sbb
fsubr
xchg
out
outsb
push
mov
cmpsb
in
pop
repnz
int3
pop
mov
fstpt
push
scas
sub
pusha
inc
movsb
pop
fisubl
lods
ljmp
xchg
call
mov
add
stos
xchg
lods
jo
daa
loope
lds
push
pop
xchg
cmp
popf
mov
xor
push
and
jnp
jle
pop
push
adc
xor
test
push
popa
or
mov
fwait
sub
sub
int
jg
addb
push
int3
mov
mov
out
and
pop
aad
sub
sbb
sub
add
fsub
ljmp
xor
xor
popf
and
add
jns
inc
ret
push
and
push
mov
mov
loopne
mov
jmp
cld
cs
mov
xchg
xchg
fwait
loopne
call
fwait
cmpsb
and
loope
imul
loope
jp
and
aam
mov
mov
jbe
and
ljmp
and
jne
icebp
dec
sbb
push
xor
add
push
lret
or
pop
and
push
pop
mov
fnsave
dec
sub
dec
add
repnz
inc
fdivl
test
sbb
mov
mov
or
or
aam
dec
ss
pop
pop
sub
mov
lods
das
clc
sub
imulb
inc
lock
cmp
mov
stc
enter
mov
shr
aaa
pop
add
dec
push
dec
pop
cmp
mov
loopne
lock
sbb
dec
enter
js
fadd
fsubl
adc
push
fucomi
mov
lcall
sbb
or
add
sub
inc
sbb
int
cmp
mov
in
pop
aad
dec
cmp
mov
in
test
data16
out
psubd
scas
push
loop
xchg
inc
out
add
dec
mov
add
add
sarb
loope
mov
push
rorl
lahf
andb
cmpsl
jbe
add
add
loope
ss
sbb
roll
or
jb
xor
fldcw
xorl
and
lods
mov
push
in
push
and
fcmovbe
mov
add
xor
xorb
cmc
lcall
xchg
mov
mov
cmp
xchg
aad
or
xchg
jl
cmp
in
mov
add
xchg
push
stos
add
mov
fmull
and
dec
jae
lea
cwtl
mov
enter
sbb
mov
mov
ss
sub
aam
testl
out
stc
pop
ret
call
cmp
mov
call
xor
shrb
in
add
xchg
bound
lahf
les
or
insb
lcall
fs
out
aas
jmp
pop
mov
stos
pop
imul
jo
inc
and
test
xchg
or
aaa
inc
fldcw
shll
repz
fmull
fsts
sub
jnp
xchg
dec
popa
mov
lahf
lcall
test
xor
mov
inc
jle
adc
pop
aad
lods
cmp
add
mov
push
xchg
loop
xchg
jp
and
int
xchg
and
sahf
or
jne
jb
dec
mov
pop
mov
sbb
sbbl
loopne
out
pop
outsl
adc
cs
xchg
mov
dec
jns
push
jmp
stos
fidivrl
imul
add
pop
sbb
push
push
nop
xchg
aad
in
push
out
loopne
sahf
sahf
dec
push
in
bound
add
xor
shll
push
test
lds
inc
or
dec
into
movsl
xchg
adc
and
scas
adc
cs
sub
rcrl
or
mov
and
cmp
adc
imul
in
xor
loop
adc
movsl
push
fmull
fsubr
loop
clc
push
in
in
jne
lret
movsb
inc
xchg
mov
cwtl
xchg
sbb
mov
imul
inc
mov
adc
lock
push
sbb
xchg
div
imul
outsl
pop
bound
in
jnp
jne
xchg
mov
test
adc
jno
and
fistps
mov
fwait
push
adc
in
insl
pop
mov
mov
insb
jge
add
add
jge
push
fistps
icebp
rcr
popa
xor
add
adc
pushf
mov
and
pop
pusha
and
mov
xchg
cmp
and
mov
mov
adc
mov
sub
mov
rclb
mov
cmpsb
dec
xchg
inc
popf
inc
aam
mov
fwait
insl
js
push
lahf
adc
test
sub
inc
sub
lahf
mov
pusha
sarl
pop
xchg
pop
clc
in
lods
sub
pop
icebp
rcr
xor
mov
mov
xor
js
xchg
movsb
std
jecxz
mov
fdivrp
or
mov
xchg
cmp
jo
orb
jno
dec
pop
rorb
xchg
jl
or
test
mov
sub
fwait
loopne
out
jnp
pop
out
divl
cwtl
arpl
pop
cmp
jl
add
xor
fisttps
push
pushf
inc
ja
stos
xchg
jno
leave
push
iret
rclb
cld
sbb
in
mov
inc
and
daa
sbb
fidivrs
repz
outsl
lcall
roll
daa
aad
mov
or
sub
xchg
mov
cwtl
push
out
mov
gs
mov
inc
inc
dec
mov
mov
stos
mov
mov
xchg
xchg
mov
sbb
xor
ret
stos
or
adc
xor
xchg
or
iret
xchg
aaa
orl
or
aaa
xchg
jns
and
push
jmp
movsb
je
outsb
clc
insl
mov
dec
xor
lock
mov
and
out
sub
mov
sbb
push
xchg
push
mov
leave
sub
pop
mov
test
mov
testb
outsl
mov
dec
pop
jmp
sar
xchg
pop
jns
mov
jbe
mov
mov
ret
popa
or
inc
push
xchg
sahf
xchg
mov
jmp
adc
ror
dec
roll
or
xchg
lret
push
xchg
fwait
xchg
mov
mov
into
cmovo
lods
pusha
mov
dec
cltd
daa
mov
insb
xchg
pusha
fbld
mov
mov
jecxz
xchg
mov
dec
pop
jle
xchg
inc
mov
int
add
pop
ficomps
cwtl
inc
add
call
scas
decl
shl
roll
pop
in
mov
jp
add
or
out
int3
sbb
xchg
std
outsb
or
push
sti
mov
popf
push
es
inc
insb
xchg
lahf
stos
lcall
pop
test
imul
mov
in
cwtl
adc
pop
push
stos
dec
popa
push
int3
dec
jmp
mov
mov
push
andb
pop
mov
enter
mov
aaa
lret
cmpb
subb
pop
and
in
push
stos
add
sbbb
or
xchg
cmc
or
push
push
dec
mov
outsl
sarl
aaa
jge
and
add
scas
push
lea
jae
aas
mov
and
mov
dec
movsl
cli
out
cs
pop
jae
daa
adc
xchg
movsb
rcll
mov
mov
or
pop
adc
jae
jns
call
fwait
pop
jg
pop
lret
pop
xchg
stos
popf
pop
sub
inc
adc
ss
imul
cmpsl
push
out
sub
pop
lods
pusha
adc
jbe
mov
inc
ljmp
jmp
inc
mov
mov
bound
fucomip
divl
jo
andl
popw
xorb
sbb
idivb
add
mov
fcmovb
aas
das
into
inc
test
fistpl
icebp
push
aas
push
jns
or
add
jg
cmpsl
dec
fbld
push
mov
cmpsl
adc
inc
aas
lods
outsl
mov
and
adc
sbb
jae
mov
inc
insb
fiadds
adcb
jno
pop
arpl
mov
lea
fldcw
add
jp
sbb
jo
ljmp
in
inc
sub
sbb
enter
mov
xchg
idivl
test
lea
pop
xor
sub
adc
inc
dec
in
pushf
dec
push
or
jmp
scas
xchg
sbb
sub
test
xbegin
faddl
mov
fisubrs
loope
mov
pop
out
jnp
shlb
pop
rcrl
sbb
mov
pop
xchg
rclb
std
pusha
add
addr16
sbb
scas
pusha
outsl
std
push
xchg
mov
addr16
and
xor
xor
enter
sbb
mov
xchg
out
xorb
adcl
das
jg
sub
popa
xchg
add
lcall
mov
sub
data16
mov
int3
dec
or
pushf
enter
gs
pop
mov
add
or
jmp
gs
je
pushf
mov
sub
xor
adc
shr
cmc
adc
ret
cmp
cmpsb
cltd
push
idivl
popa
ss
adc
mov
cmp
aas
popf
xchg
in
lret
cmp
fldcw
cltd
pop
mov
pop
je
aad
sub
push
and
aas
es
sarl
imul
dec
lds
aas
orb
jb
jmp
test
stos
or
ftst
mov
ss
ret
push
sub
aad
inc
sub
and
add
out
mov
lds
js
push
scas
or
or
adc
fiadds
mov
mov
and
pop
popa
add
pop
outsl
cmp
inc
mov
popa
test
test
xchg
or
add
add
adc
mov
mov
mov
movb
enter
ret
xor
imul
or
test
pop
vaddss
cmp
inc
icebp
lret
scas
lds
fmull
in
jmp
leave
movsl
jb
pop
xchg
sbbb
out
arpl
in
dec
rsqrtps
mov
jno
test
fsincos
lahf
dec
add
in
hlt
daa
daa
mov
push
or
jbe
imul
or
enter
test
push
ror
mov
dec
mov
push
and
inc
cmp
mov
mov
es
shl
inc
xchg
or
inc
lds
js
xchg
jns
popf
std
xchg
notl
mov
adc
mov
aas
pop
fisttpl
loopne
inc
mov
ds
push
hlt
sbbl
dec
sbb
in
push
push
or
mov
clc
fucomi
xor
jmp
mov
pop
mov
loopne
enter
jnp
loope
xchg
pop
sbb
mov
lret
jb
scas
nop
sti
mov
lock
mulb
mov
sbb
mov
cmpb
xchg
js
cli
xchg
cwtl
add
sbb
divb
sub
add
push
insl
cmp
leave
and
loope
inc
int3
in
dec
std
std
push
sbb
call
add
shrl
sarb
testb
arpl
sbb
dec
mov
dec
mov
xchg
jb
outsl
mov
lcall
mov
cmp
mov
gs
add
or
and
fmul
subl
pop
and
push
scas
mov
jmp
jg
mov
inc
fsts
inc
imul
iret
iret
sbb
add
sub
sub
mov
cli
lds
loop
inc
call
jecxz
rolb
lret
xor
push
push
testb
inc
cmp
xchg
pop
decb
or
and
and
fsubl
iret
and
hlt
push
outsb
adc
jl
rcll
call
scas
iret
es
lahf
cmp
mov
cltd
test
das
iret
dec
add
push
cmp
dec
cli
inc
mov
mov
daa
cmp
push
lea
ret
pop
das
or
mov
sbb
jae
jbe
mov
inc
dec
mov
sub
adcl
adc
shll
sbb
les
rolb
js
cmp
call
dec
scas
adc
inc
test
sub
jg
es
aaa
xchg
sub
in
in
pop
pop
loope
mov
pusha
xor
ds
mov
loope
aad
arpl
lods
mov
jne
fwait
dec
arpl
imulb
mov
adc
idivb
sbb
sbb
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
.byte
jnp
cmp
adc
fdivs
fimuls
pop
test
push
subb
push
xchg
mov
lods
push
inc
add
mov
test
jge
mov
insl
adc
popa
imul
fbstp
movsb
xor
cwtl
movsb
push
pop
pushf
push
loopne
psllw
dec
mov
cmpsb
sbb
fucomip
testl
mov
pop
fsubrs
fmull
cmpsb
or
fimuls
add
push
repz
out
movsb
push
inc
mov
aas
test
testb
mov
pop
sbb
scas
jle
push
or
xlat
xor
mov
insl
mov
aas
dec
icebp
inc
outsb
roll
mov
xchg
mov
ficompl
inc
stc
cmpsb
aam
mov
addr16
test
or
test
cmp
pop
sbb
pushf
je
dec
pop
push
add
dec
test
test
outsl
jmp
loopne
xchg
push
in
call
push
shll
ficoms
cli
lahf
sub
xor
push
adc
and
inc
outsb
mov
lds
pop
fwait
push
push
inc
out
es
fcmovnbe
in
xor
push
xchg
jle
push
addl
mov
mov
xor
jl
fldl
test
in
sbb
dec
adc
jae
or
jbe
xlat
popf
adc
cmp
enter
loope
adc
jp
outsl
leave
faddp
and
mov
fnstenv
lcall
mov
lea
xchg
movb
xor
notb
rcll
inc
push
insl
push
pop
out
sarl
enter
xlat
xchg
add
sub
cmc
pop
lds
lahf
int
mov
icebp
lods
pop
hlt
and
fldln2
das
cmpsb
repz
test
adc
je
xchg
popf
mov
in
movsb
enter
test
or
mov
cmp
dec
pop
sub
xchg
movsb
sub
test
mov
sub
daa
push
lods
sbb
scas
sbb
lcall
sub
pop
test
add
lahf
in
push
fbstp
sub
addr16
test
fcmovnu
loope
push
popf
mov
jle
mov
test
pop
addr16
pop
inc
pop
adc
fiaddl
push
and
inc
outsb
push
xor
cmpsb
xchg
dec
adc
push
std
mov
fsts
push
jbe
mov
sub
std
push
movsl
cmp
or
inc
xchg
rolb
pop
fs
sbb
loope
cli
xor
imul
xchg
std
push
lds
mov
das
mov
pop
xchg
mov
std
repz
and
rol
sahf
cld
jmp
sub
pop
sub
inc
cmpsb
movsl
mov
mov
insb
jge
inc
adc
push
shrl
loopne
sbb
jge
cltd
gs
dec
pop
sub
pop
jle
jle
sub
mov
lcall
mov
mov
cld
or
lret
orb
cld
push
out
and
adc
pop
jo
ja
scas
fiaddl
and
pushf
dec
mov
out
das
mov
mov
jp
add
bound
psrad
and
outsb
xchg
push
filds
loopne
ds
adc
xor
lods
les
mov
fs
xchg
loope
lret
stos
push
xchg
bound
cld
jl
int
imul
mov
sub
int3
orl
imul
jg
mov
rcl
movsb
movsb
pop
es
scas
cmp
int
add
not
jno
sbb
nop
and
lret
cs
arpl
dec
ja
pusha
jmp
xor
dec
xor
fdivs
push
push
jle
dec
fldcw
popa
adc
push
int3
sub
arpl
into
and
ljmp
lock
xchg
sub
fistps
inc
push
cmpsl
jns
jno
push
andb
xlat
sarb
mov
push
pop
sti
test
testb
mov
mov
imul
call
jnp
jg
or
dec
cmp
inc
loop
sub
push
push
push
ja
xchg
jae
xchg
sti
xlat
in
fldl
ss
negb
xlat
add
lcall
sbbl
aad
cmp
rorb
sbbl
sbb
and
out
rol
les
dec
xor
loopne
mov
pop
push
inc
popa
inc
ret
inc
jns
out
ljmp
addr16
mov
cmp
pop
and
out
mov
scas
dec
insl
nop
arpl
adc
lcall
out
call
inc
sahf
imul
jge
xor
xchg
test
push
jne
jbe
dec
cmp
jge
xchg
jge
ret
add
mov
xchg
stc
xor
cmpsb
pop
xchg
and
pusha
and
jl
adc
mov
mov
push
imul
fdivrl
dec
daa
je
mov
mov
lret
sub
xor
dec
test
cld
stc
fiaddl
shr
push
sbb
loop
cwtl
into
cmp
mov
sti
fstps
xor
addl
add
cmp
and
mov
imul
jne
popf
test
mov
ret
bound
xchg
cltd
mov
lret
mulb
insb
add
fs
nop
jb
mov
rcll
icebp
lods
sub
cvtps2pd
bswap
pop
pop
int
jl
or
fwait
or
pusha
in
jecxz
dec
repnz
dec
fs
or
jecxz
andb
adc
les
mov
aas
repnz
jmp
pusha
int
push
dec
shrb
and
adc
and
lret
les
fldpi
mov
aam
stos
xor
in
imull
popa
test
push
out
jge
push
and
xchg
lods
xchg
push
mov
scas
incb
repnz
inc
cmp
and
sbb
out
push
stos
js
push
mov
xor
push
stc
inc
add
mov
mov
out
adc
and
shl
insl
in
arpl
pop
push
jae
mov
shll
dec
scas
sub
sahf
push
adc
aaa
cs
dec
mov
das
mov
xchg
add
and
mov
xlat
lods
stos
mov
rcrb
or
pop
or
aam
pop
mov
jp
sub
int
in
mov
jae
or
int
mov
jns
jle
repnz
push
jmp
dec
scas
movsb
ret
xorl
inc
pmaddwd
icebp
mov
fldcw
lods
pusha
jo
outsl
jne
leave
test
js
iret
mov
out
movsl
push
dec
sbb
jne
popa
push
cmpl
ljmp
sub
or
gs
xchg
jb
adc
jg
cwtl
lock
adc
inc
cmp
out
out
test
js
push
in
popf
adc
cmpsb
xor
sbb
out
sarb
mov
orl
lcall
push
movsl
add
add
test
jbe
or
loopne
jmp
pusha
sub
xor
inc
fldcw
test
pop
xchg
mov
or
adc
push
sub
loopne
push
cmp
and
rorb
dec
aaa
xchg
fildl
pusha
lods
shl
jg
rorb
mov
xor
pop
mov
test
and
int3
insl
and
jl
stc
add
sub
gs
and
jns
mov
mov
imul
mov
mov
test
mov
pop
push
sub
rcrl
pop
ret
pushf
xlat
fcoms
insl
cmpxchg
popa
sub
fldl
push
push
dec
xchg
push
aad
xor
shlb
jo
cmpsb
mov
dec
loopne
fucomi
xchg
push
cmp
mov
sbb
imul
add
lock
outsb
cmp
andl
push
mull
andl
mov
dec
stos
jl
cmp
lea
or
js
xchg
lret
into
aam
mov
mov
cltd
or
ja
dec
jns
pushf
loope
test
sub
sbb
dec
cmp
fnstcw
aad
shrl
pop
sbb
jns
xchg
pop
pop
std
pop
leave
repnz
mov
imul
loopne
cmp
inc
pushf
push
xlat
test
or
push
and
dec
dec
mov
fcompl
xor
dec
xchg
insb
pop
jmp
aad
mov
adc
sbb
jmp
test
mov
mov
cmpl
or
xchg
cmp
out
in
sub
data16
in
jno
mov
push
xchg
inc
mov
mov
data16
rcrb
ljmp
ss
andb
ret
mov
mov
fbstp
mov
cmp
ja
lcall
push
mov
xor
je
add
jle
mov
pop
cmp
push
xor
aam
add
and
insb
aad
jne
jo
fimull
fdiv
inc
stc
je
aam
pop
pop
cmp
pop
pop
cltd
lret
out
mov
lods
insl
cmp
sbb
fidivl
movsb
push
add
adc
lea
fwait
lcall
jns
adc
jb
dec
cmp
xchg
push
xchg
pop
jns
stos
inc
outsb
pop
daa
iret
scas
pop
nop
hlt
aas
addr16
mov
and
in
cmp
add
jl
mov
push
lahf
out
jbe
test
jbe
int
jmp
iret
lahf
pop
nop
inc
lahf
pop
out
rorl
or
and
mov
adc
jae
xor
add
jnp
loop
mov
mulb
lock
inc
cld
not
xor
inc
push
add
out
fsubl
popf
bound
or
movsl
xor
xchg
pop
sbb
pop
lea
dec
aad
in
jb
into
xor
dec
mov
adc
fldt
push
ljmp
lods
jns
adc
jmp
inc
sub
lea
sub
dec
or
lahf
stos
outsb
mov
ds
orb
mov
orb
dec
jg
pop
stc
mov
xor
test
pop
push
add
mov
cmp
insl
or
pop
push
mov
ret
jae
lcall
xchg
mov
push
cmc
ds
mov
loopne
push
and
shlb
cmpsl
xchg
or
loopne
cs
in
xchg
or
push
scas
inc
adc
mov
insl
mov
adc
lret
in
jecxz
jb
pusha
loop
inc
insl
int3
pop
mov
loope
sbb
jno
fists
push
rcrb
xchg
stc
mov
dec
push
cmp
mov
sbb
xor
inc
push
pop
addr16
pusha
mov
and
or
fildll
push
mov
adc
lcall
sub
add
sub
int3
ret
out
inc
shlb
xor
stos
je
cs
push
repnz
dec
outsl
std
and
movb
rcrl
dec
in
inc
xchg
sub
rdpmc
xchg
xchg
test
icebp
cmc
adc
inc
arpl
inc
xor
adc
psraw
mov
adc
xor
aad
sub
jno
fistpll
loopne
nop
stos
sarb
fmul
pop
sub
mov
mov
mov
in
cmp
in
inc
jge
mulb
nop
cwtl
rcrl
xor
pop
in
fstpt
and
jne
es
aam
xor
cmp
mov
sbb
icebp
jno
jo
out
rcrb
bound
mov
push
nop
or
rcl
sub
movsl
ret
sbb
adc
movsb
pop
lret
dec
sbb
adc
pop
mov
icebp
push
mov
daa
sbb
and
in
movsb
pop
jb
lret
cmp
or
push
mov
cmp
int3
sbb
push
lods
addl
pop
not
daa
das
in
mov
frstpm(287
enter
pushf
mov
pushf
push
lods
cld
or
xchg
push
and
imul
ss
or
mov
dec
add
jnp
jl
fidivl
out
pop
mov
inc
addr16
and
mov
or
fcmovnu
es
xchg
mov
les
jmp
ja
pop
jp
icebp
mov
jg
cmp
adc
cltd
mov
bound
dec
nop
push
dec
lret
into
movsl
lea
out
imul
inc
fidivrl
pop
dec
sbb
test
mov
add
sbbb
daa
mov
xchg
inc
mov
enter
add
mov
jno
shl
add
sbb
pushf
mov
test
or
sti
mov
xchg
pushf
test
cli
jmp
xor
xchg
rolb
jecxz
arpl
pushf
mov
ret
lret
or
jmp
iret
and
out
sbb
les
mov
movsb
mov
imul
cwtl
mov
mov
test
jo
roll
push
adc
nop
xor
or
outsl
ljmp
xor
mov
lds
mov
inc
pop
fisttpl
loopne
jecxz
xchg
rorb
leave
pop
sbb
jmp
mov
jge
mov
mov
shl
push
shll
leave
js
movsb
xorb
sub
popf
mov
push
fmul
ds
mov
sub
push
mov
insl
test
imull
mov
int3
add
mov
addr16
pop
call
les
mov
hlt
rcll
cmp
pop
fwait
cwtl
inc
xchg
test
sti
mov
push
or
fwait
fwait
insb
shrb
adc
sbb
ljmp
cmp
inc
stos
add
and
out
sub
mov
fdivp
movsl
sbbl
mov
sahf
cmp
fistpll
push
jmp
push
dec
enter
rorl
push
jnp
jnp
ret
and
or
push
cmp
mov
ljmp
jne
scas
scas
push
sbb
sub
pop
pop
jo
les
ret
xor
les
shlb
jns
cmp
pop
xor
jg
sub
cs
dec
push
or
jmp
lods
xchg
adc
cmp
movsb
dec
popf
lods
aad
ljmp
dec
inc
xor
insl
xor
cmp
dec
jp
out
xor
add
shlb
stos
or
aas
pop
lock
mov
or
loope
dec
popw
or
rcrb
mov
mov
or
add
loopne
lret
pop
pop
mov
das
es
jne
movsb
sbb
dec
dec
lds
ljmp
mov
sbb
outsb
push
lahf
pop
fcom
scas
cwtl
pusha
sub
mov
fsts
jnp
xchg
jb
popf
xchg
lds
mov
xchg
rol
pop
sahf
pop
stos
jbe
cs
inc
mov
lret
adc
xor
ss
mov
mov
ja
mov
xchg
ja
inc
std
das
inc
mov
and
fnsave
jmp
dec
icebp
jns
or
imul
jmp
jns
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
.byte
lret
dec
and
cmp
lahf
lock
rcl
adc
repz
jns
imulb
or
sbbb
mov
insb
push
mov
hlt
fwait
mov
flds
or
mov
or
sahf
loopne
pop
cmpl
pop
jb
fbld
mov
addr16
adc
add
xchg
adc
mov
iret
or
and
xor
push
popf
pop
gs
xor
fisttps
xchg
push
sbb
mov
add
lret
xchg
xor
sbb
push
inc
cmc
dec
lds
mov
cmovbe
cmc
sub
lret
in
sbb
aad
in
sti
ss
imul
js
mov
fs
lret
pop
jmp
mov
into
add
add
pop
sub
mov
mov
add
fs
mov
mov
outsl
mov
and
sahf
mov
cwtl
or
rcll
xor
xchg
adc
shll
pop
or
jbe
pop
pushf
mov
bound
pushf
stos
sbb
scas
mov
outsl
or
inc
fiadds
into
push
xor
dec
dec
cwtl
push
sub
sbb
lret
lods
fisubrl
inc
cli
or
ss
sub
push
pop
test
and
mov
pop
and
pop
mov
bnd
mov
xchg
cmc
sub
xchg
pop
fisubrl
or
setle
shlb
outsl
mov
scas
push
in
test
sbb
sub
xor
je
push
enter
xlat
mov
lcall
dec
jecxz
jg
mov
ficompl
and
inc
xchg
and
inc
push
hlt
pop
or
ds
inc
push
push
inc
xchg
jno
sub
cwtl
pusha
jo
scas
push
mov
loop
lea
sub
ret
das
fwait
prefetchw
mov
and
movsl
add
lret
and
and
or
lret
mov
in
ja
dec
jl
movsb
pop
xchg
xchg
inc
flds
decl
dec
imul
lea
outsb
out
xchg
mov
stos
mov
pop
pop
push
adc
lods
xor
test
lcall
add
or
mov
xchg
jnp
mov
jg
mov
dec
nop
hlt
arpl
push
pushl
insb
into
cli
jmp
xchg
mov
loope
jno
mov
pop
les
xor
lock
add
dec
repz
rdmsr
cmp
daa
aas
pop
mov
sbb
iret
aam
push
mov
sti
mov
xchg
push
in
lock
xchg
push
inc
testb
filds
les
cwtl
scas
movsb
or
idiv
mov
inc
outsb
mov
pop
sub
xchg
out
add
push
jmp
inc
pop
push
leave
sub
xchg
mov
ret
movsb
fwait
mov
das
fistl
xchg
movsl
mov
cli
test
jg
lret
cmp
push
ret
stos
mov
data16
cli
adc
add
jge
mov
lock
insl
lahf
adc
push
xchg
sub
dec
mov
sbb
inc
negb
inc
pop
jecxz
ljmp
in
jecxz
ja
dec
mov
nop
inc
pop
hlt
rcrl
pop
xor
pop
and
das
out
mov
sub
pusha
inc
jl
test
dec
mov
sbb
or
and
xor
sub
test
cld
scas
dec
enter
jnp
inc
and
iret
or
add
jmp
test
or
test
call
cmp
adc
add
pop
das
sbb
add
in
sub
cmp
sbb
cmp
mov
push
push
jl
int
mov
movsl
aas
sub
mov
call
mov
mov
jle
mov
jo
cmp
fs
shrl
jle
test
sbb
push
push
pop
dec
sub
cmp
gs
cmp
iret
std
loopne
hlt
inc
and
out
out
lcall
inc
add
mov
or
mov
pop
jle
and
aam
lret
movsb
jmp
xchg
sub
adc
add
jge
lock
lret
inc
shr
leave
dec
pop
jbe
cmp
push
cmp
ljmp
repnz
pop
in
int3
mov
icebp
jb
push
mov
sbb
dec
add
cmpsb
mov
sub
enter
adc
mov
aad
cmp
dec
sbb
push
inc
out
sbb
mov
out
dec
loope
add
cltd
push
mulps
mov
mov
imul
pop
icebp
xadd
int3
shll
addr16
jg
scas
call
cli
in
clc
jmp
lcall
fwait
and
ja
insl
or
xchg
sub
lret
push
shlb
push
pushf
lds
push
cmp
dec
das
loopne
insl
mov
imul
fs
push
cli
test
mov
cli
repnz
mov
jge
cmp
lret
roll
sub
mov
pop
stos
hlt
jb
xchg
xlat
cmp
es
dec
add
test
repnz
xchg
stc
sub
sbb
xor
mov
jle
out
out
cmp
shlb
inc
jp
dec
and
xchg
cltd
jns
mov
or
jbe
xor
aas
mov
or
fistpll
mov
push
xor
out
cmp
and
orb
jp
pop
xchg
and
lods
push
test
cmpsb
jl
pop
mov
fcmove
pop
ds
push
andl
mov
out
imul
xor
js
cmpsb
inc
shrb
out
into
mov
pop
pop
push
jmp
dec
bound
clc
popf
add
sbb
inc
jne
jp
outsb
push
mov
out
sub
stos
sarl
cmp
mov
xor
pop
out
pop
stos
ret
pop
pop
xchg
mov
xor
mov
inc
out
mov
sbbb
dec
push
and
add
mov
icebp
movsb
popa
std
push
sbbl
mov
scas
xor
xor
loopne
inc
int
stos
fisubl
or
xchg
insb
jns
pop
push
iret
int3
inc
adc
pop
inc
ficoms
pushf
inc
add
cmp
cmp
sti
and
into
mov
mov
jmp
addl
mov
xor
imul
sbb
inc
dec
add
and
data16
inc
addb
lahf
cmp
lds
xor
rcll
push
and
outsb
add
mov
fsubs
popf
pop
mov
loopne
je
dec
lcall
lcall
or
and
aad
sub
data16
sti
cmc
out
pop
loopne
stos
mov
fnstsw
lret
adc
js
adc
adcl
push
mov
jns
jb
mov
out
into
movsl
xlat
ret
loope
imul
push
lds
push
andl
ljmp
adcl
mov
sbb
jno
or
sbb
idivl
mov
dec
pop
add
push
xchg
shl
sti
jno
dec
cmp
ja
leave
xchg
add
lret
add
imul
adc
or
xor
mov
mov
negl
mov
lds
fnstenv
out
movsb
xor
sbb
mov
sub
add
and
mov
mov
out
jl
xchg
jecxz
or
sbbl
std
ja
inc
cmovo
cmp
fs
push
cli
cmpsl
dec
inc
cmp
inc
or
icebp
pusha
or
das
test
jb
shlb
push
add
xor
mov
repz
scas
test
sbbb
dec
sub
or
ror
std
mov
incl
sub
jmp
xchg
cltd
leave
jmp
ljmp
inc
mov
movsb
add
enter
sahf
movsb
add
mov
inc
hlt
cmovb
add
or
movsb
sub
jecxz
jnp
stc
sbbb
pop
push
jb
inc
shll
dec
in
xchg
insl
in
cs
xor
xchg
aam
jecxz
imul
pop
push
xor
and
cmp
stc
aam
add
xchg
inc
cwtl
mov
int3
sbb
dec
pop
mov
add
negl
inc
and
xor
in
fiadds
sbb
imul
call
enter
out
mov
aas
into
loopne
dec
and
test
aad
mov
xor
aad
mov
xchg
int3
es
xlat
lret
popf
push
enter
outsb
fwait
lahf
mov
test
mov
inc
and
mov
add
je
test
inc
xchg
and
icebp
lock
fs
jge
addl
push
fwait
test
lret
pop
movsb
sub
rcrl
test
es
cmp
jno
leave
pop
into
aam
jns
push
outsb
jecxz
push
mov
popf
test
cmc
ja
jg
xor
dec
clc
test
outsl
jg
mov
aaa
insb
pop
sbb
dec
xchg
add
cmp
inc
mov
aad
mov
mov
dec
insl
in
cmp
dec
pop
mov
mov
mov
stos
and
lock
in
stc
or
mov
mov
cli
mov
jg
sub
jae
sbb
fstpt
mov
sti
addl
scas
and
adc
xorb
leave
dec
pop
mov
daa
cmc
mov
xchg
mov
movsb
sub
mov
or
mov
stc
or
jnp
xor
mov
sbb
add
add
pop
hlt
pop
or
pop
movl
popf
push
stc
dec
stos
movsb
dec
jno
inc
lea
std
sub
xor
xchg
pushf
mov
xchg
cmp
mov
sbbl
int
cmp
lcall
xor
cmp
mov
xor
xchg
jnp
mov
insl
sbbb
inc
mov
call
adc
mov
mov
daa
adc
rcr
or
adc
into
call
leave
mov
mov
ljmp
out
nop
in
dec
xorb
jb
adc
pushf
sbb
push
insb
lock
jb
cs
test
pop
jo
outsb
mov
pop
stc
daa
xchg
push
inc
fildl
cmp
or
call
inc
pop
jl
shlb
rcll
shlb
and
mov
insl
push
lods
divb
xchg
cmc
cmp
ret
jo
fwait
push
xchg
addr16
lods
gs
mov
xchg
pushl
pop
je
stos
jmp
push
push
fucomp
jns
sub
adc
mov
xor
cli
fadd
and
fstps
xchg
jnp
mov
mov
loope
mov
push
sbb
cli
adc
sti
mov
iret
test
addr16
push
mov
cmp
cmp
pop
push
cmpsb
cwtl
sub
pop
push
adc
push
fmul
push
arpl
push
in
jecxz
and
xchg
icebp
rcr
mov
ficoml
pop
ja
gs
lock
mov
mov
push
ficoms
sbb
repz
cltd
shl
jae
inc
icebp
mov
movsbl
out
lods
pop
cltd
push
sub
aas
mov
js
and
fs
gs
cmpsb
sbb
mov
or
adc
lds
add
sbb
jle
push
enter
mov
push
mov
pop
mov
mov
fs
hlt
jle
rolb
pop
mov
repz
je
push
pop
repnz
cmp
aad
jns
push
mov
fisubs
mov
lds
xchg
inc
pop
daa
test
mov
dec
mov
xchg
or
movsl
mov
cmp
data16
iret
pop
clc
xchg
jns
mov
pop
or
xchg
or
repnz
ret
popf
call
xchg
leave
stos
movsl
out
sub
sub
pop
int3
ljmp
xchg
iret
or
fsubp
add
mov
int3
es
shl
mov
and
xorl
sti
dec
jb
xchg
setns
lahf
pop
mov
clc
loopne
mov
xor
mov
cmp
push
pop
dec
in
jge
adc
aaa
pop
adc
push
mov
push
jecxz
loop
pop
mov
xor
add
fs
dec
les
jb
cwtl
lock
pop
int3
add
ss
mov
into
dec
in
sbbl
sub
divb
mov
pop
lock
test
aas
or
icebp
ret
inc
mov
icebp
fwait
pop
mov
mov
jne
daa
inc
stos
hlt
jecxz
scas
lret
add
and
jmp
mov
adc
scas
sub
push
sti
sti
sub
icebp
or
sti
push
xchg
int
push
js
xchg
scas
sub
pop
inc
fldpi
outsb
cmp
adc
push
dec
cmp
cs
and
adc
jmp
xor
mov
mov
test
lods
popf
cmpsl
ja
mov
std
dec
sbb
xchg
into
dec
jge
negl
xchg
dec
dec
lds
ret
xor
sub
mov
mov
mov
out
mov
in
loop
pop
dec
mov
pop
pop
loopne
inc
lock
lods
fildl
pop
dec
fildll
add
mov
outsb
imul
sbb
cli
jno
jbe,pn
push
xchg
out
inc
inc
dec
push
ss
rol
push
es
pop
adc
sub
dec
push
lea
arpl
jo
push
cwtl
xor
insl
mov
jb
sbb
mov
stos
icebp
xchg
dec
jg
cmp
xchg
lahf
inc
rcll
or
bound
dec
sti
adc
es
push
mov
gs
sbb
pop
lods
xor
mov
sbb
xlat
or
mov
cwtl
dec
call
pop
sahf
fldl
js
stc
mov
inc
pop
inc
in
mov
dec
icebp
mov
shrl
jge
xor
cld
outsl
sahf
dec
mov
dec
mov
lods
xchg
or
jge
xchg
jl
xchg
push
adc
adc
or
cs
mov
xor
daa
loope
imul
pushf
jle
popa
inc
xchg
lea
xor
xchg
push
push
xchg
leave
sub
pop
daa
fstps
and
pop
fstl
push
xchg
lret
xchg
jbe
cmp
enter
jnp
cltd
sub
paddusw
rorl
mov
decb
push
addps
mov
mov
add
enter
shrl
push
out
cmp
jo
daa
or
inc
pop
sub
shl
mov
xchg
je
mov
inc
mov
shrb
push
enter
pop
mov
and
stc
gs
xor
mov
mov
and
sub
jns
das
stc
xchg
insl
ret
and
pop
rol
loop
gs
cmp
lahf
xlat
hlt
cmp
ljmp
xchg
jg
out
push
inc
xchg
mov
cmp
addr16
xchg
mov
into
sub
cmp
filds
popa
xor
lods
aas
repz
mov
ret
mov
popa
and
jno
add
push
mov
pop
fiaddl
xchg
inc
xlat
xor
pop
sub
loope
test
push
cmp
mov
sarb
sub
sahf
inc
arpl
syscall
jg
pop
xor
mov
inc
jo
clc
out
xchg
movb
xor
fldcw
sbb
iret
test
fs
loope
leave
bswap
leave
cmp
mov
fsubl
mov
jecxz
xchg
sbb
inc
jnp
scas
popf
orb
cmp
jb
fildl
mov
sub
and
mov
rorb
outsb
inc
fwait
outsl
cmp
push
clc
test
or
jecxz
cmp
pop
arpl
pushf
fwait
push
imul
push
in
cmp
pop
pusha
aad
mov
mov
les
adc
popf
jle
and
push
inc
fistl
sbb
imul
loope
jl
mov
push
fs
loop
adc
popf
add
movsb
dec
inc
push
pop
xorb
in
and
int
inc
cmp
rcll
sub
xor
add
mov
jae
or
push
pushf
or
adc
nop
pop
sbb
mov
addr16
add
jns
mov
mov
push
jp
xor
jne
in
pop
fucom
xor
xor
pusha
int3
cmp
je
add
lock
aam
dec
push
stos
sbbb
out
pop
mov
cs
xchg
lock
adc
mov
add
mov
aam
test
xchg
int3
push
fnstenv
pop
sbbb
mov
or
xor
mov
xor
mov
sbb
decb
add
pop
xchg
in
sub
dec
push
mulb
xchg
pop
arpl
ret
mov
ret
and
pop
movsl
cmp
subl
inc
and
and
mov
adc
jnp
stos
roll
popa
arpl
xlat
dec
mov
or
xor
imul
imul
movsb
push
and
int3
dec
mov
xorb
mov
dec
rcrb
sbb
jmp
pop
shll
jae
add
orl
orb
jae
hlt
loopne
or
mov
sub
test
aam
rorb
loope
adc
hlt
jbe
xlat
add
fdivr
jns
push
jg
push
inc
repnz
mov
xlat
mov
stos
mov
pop
pop
mov
flds
dec
fdivrl
inc
sahf
test
dec
mov
sub
xchg
test
jo
cmp
nop
iret
sub
rcll
sbb
pop
and
jmpw
int
fists
push
mov
icebp
mov
ret
or
inc
cmc
leave
mov
stc
or
push
popa
jo
pop
push
xor
pop
jge
lods
lock
dec
mov
sbb
adc
xchg
sbbb
jl
lahf
rcrb
and
mov
cmp
mov
inc
popf
pop
mov
insl
add
or
xchg
pop
xchg
sub
and
jnp
arpl
sbb
mov
adc
pop
add
lret
and
loope
mov
ja
lcall
hlt
daa
fwait
inc
into
ja
insb
pop
pop
push
aad
dec
fstpt
repz
imul
mov
mov
xor
enter
int3
icebp
push
xor
sbb
divl
mov
inc
scas
inc
scas
fwait
jmp
sarb
fidivrs
popa
not
jae
jo
mov
jmp
call
fldenv
stc
shrb
mov
pop
adc
lcall
movsl
xor
outsl
mov
in
dec
daa
sub
loopne
repnz
popl
pop
xchg
cmp
pop
adc
imul
mov
sbb
and
adc
data16
adc
push
xchg
lock
fsubr
ds
xchg
push
pop
les
movsb
inc
adc
js
sahf
mov
push
cltd
lcall
popa
cmp
jno
cmp
pop
shr
les
xor
jo
push
mov
jo
mov
mov
xor
aaa
ljmp
xchg
cmp
jnp
ds
aam
int
out
loope
sbb
testb
movsl
shlb
scas
lcall
and
insl
cmp
in
fisubl
mov
pop
inc
lret
mov
or
inc
rep
shll
cmpsb
arpl
adc
cmpsb
jle
push
push
aad
sarb
jmp
add
or
aas
daa
sub
inc
add
inc
ja
cmp
loop
mov
mov
sahf
ljmp
mov
stos
aaa
scas
or
xchg
fisubs
fbld
pop
movsl
in
and
cmp
jp
int
push
fadd
sbb
in
push
lcall
mov
fstpt
fnsave
iret
cmpsl
lcall
rcrb
mov
and
rcrb
jns
test
push
and
stos
pcmpeqb
jns
jmp
cltd
outsb
test
out
rcl
cmc
pop
push
mov
xchg
push
jb
xor
aad
movsl
xchg
test
jecxz
aad
mov
aam
inc
ss
mov
enter
dec
addb
lds
jecxz
insl
in
loop
mov
lock
dec
and
fldcw
loope
stos
inc
pop
and
outsb
jo
mov
decl
jae
jp
pop
test
out
aam
movsl
inc
fs
nop
test
ficoml
rcr
cmp
leave
sub
and
aas
pusha
mov
lods
cmpsl
mov
fistpll
dec
ret
mov
sbb
xchg
pop
sub
xor
mov
add
add
cmpsb
xchg
inc
sarl
repnz
aad
mov
jnp
inc
xor
cmpsl
fiaddl
clc
mov
scas
dec
repnz
mov
add
ret
ja
mov
loope
lahf
mov
jae
and
test
test
or
in
in
mov
icebp
sub
mov
scas
pop
dec
push
jl
lret
fildl
jns
jl
repnz
fldt
jle
ljmp
mov
inc
xor
cmp
sar
dec
jle
inc
jg
xor
mov
lret
lea
lds
lcall
sub
and
aas
cmp
fistl
jbe
cmpsb
sub
ljmp
nop
ljmp
xor
sub
push
scas
push
pop
cltd
sbb
into
gs
setnp
add
test
pop
xor
push
test
mov
repz
leave
mov
mov
inc
xlat
pop
add
mov
sbb
icebp
sbb
dec
inc
xchg
pushf
pop
lods
test
push
cmp
pushf
sub
cmpsb
int3
les
lret
shll
enter
mov
or
and
sub
mov
inc
aam
cld
daa
cmp
testb
popa
mov
out
cli
fs
adc
mov
pop
mov
test
cli
xchg
push
les
pop
leave
push
mov
jle
int3
adc
pop
inc
scas
adc
mov
sbb
jmp
sbb
jecxz
pusha
mov
imul
int3
xor
xchg
mov
mov
je
sub
cmp
push
mov
mov
jmp
add
jp
cmpsb
and
xor
mov
clc
jbe
cmp
in
int3
lea
outsl
inc
mov
andl
sub
mov
imul
fisttpl
fistps
or
repz
dec
cli
aas
in
jne
loopne
or
aas
fstps
xchg
or
out
fistpl
lock
xchg
dec
jmp
xlat
test
push
jp
mov
cmp
in
ss
dec
das
jg
xor
shll
cmc
aad
mov
cmpsl
mov
test
sti
xor
jge
aaa
xor
outsb
stos
cmpsb
js
pop
mov
pushf
add
jmp
dec
out
iret
cs
dec
aaa
jae
insb
pop
adc
mov
addb
mov
mov
add
push
bound
fisubl
dec
jb
fdivrl
mov
popf
in
dec
test
fisttps
xchg
or
test
jl
popf
xor
jne
cwtl
push
enter
mov
movsb
in
popf
cmp
push
mov
jbe
jnp
xor
mov
aad
xchg
orb
repz
out
adc
out
arpl
push
pusha
and
push
or
pop
sahf
xchg
addr16
pop
loop
jl
sbb
mov
xor
daa
leave
inc
ret
lea
orl
xchg
aas
shlb
fmuls
lcall
xlat
mov
dec
cwtl
cmc
bndstx
lret
sbb
stos
ret
xor
inc
aaa
cld
inc
xor
addr16
jecxz
imul
sub
orl
pusha
adc
bound
cmp
fidivl
cltd
xor
cld
inc
pop
lock
inc
outsb
cwtl
jecxz
or
push
out
fs
jmp
aad
sbb
jo
adc
xchg
xchg
jbe
pop
sub
pushl
sbb
bound
mov
in
iret
push
sbb
incl
addr16
pop
js
addr16
mov
negb
mov
lahf
jbe
adc
dec
cmp
mov
and
cli
ficompl
cmp
outsb
cmpsl
pushf
push
dec
int3
data16
mov
sbb
mov
loopne
js
sbb
in
jno
loopne
ret
dec
into
lods
out
daa
shll
jmp
enter
or
mov
mov
xchg
data16
mov
xor
dec
jno
aam
popa
pop
add
es
addb
sbb
or
pop
and
sbb
push
iret
repz
mov
gs
inc
adc
leave
mov
ljmp
adc
jmp
dec
pop
mov
je
push
jnp
mov
xlat
inc
daa
mul
lret
pusha
loop
fwait
sub
movsl
mov
sub
out
pushf
or
pop
xor
jne
dec
jl
test
mov
or
adc
and
decb
push
lock
sbb
sbb
mov
aaa
test
add
nop
repnz
cld
xchg
mov
aas
lods
out
dec
pop
adc
ficoml
andb
dec
mov
stos
std
sbb
shll
mov
pop
sub
add
insb
jae
push
and
push
pop
dec
push
cmp
mov
dec
ss
xor
mov
std
sahf
xlat
jo
xchg
inc
mov
push
mov
adc
or
int3
pop
xchg
push
insl
push
lds
jmp
rcr
or
xor
out
jns
inc
add
adc
sahf
add
adc
push
xchg
adc
sbb
jb
movsl
or
int3
jo
push
imul
inc
popf
sbb
mov
fcomip
dec
sti
enter
mov
in
movsb
and
push
xor
test
outsb
mov
mov
cmc
jnp
push
popa
jge
in
sbb
out
jb
sbb
mov
lods
inc
and
call
jno
jecxz
cltd
int
xchg
pushf
divb
cmc
xchg
stc
cmp
inc
aad
into
sbb
sub
into
or
sahf
mov
stc
cmpsb
adc
aad
sti
inc
daa
xchg
jp
or
push
das
mov
mov
notl
mov
xor
sahf
outsl
inc
jne
popa
aad
cmp
mov
jmp
push
test
ljmp
xchg
dec
xchg
scas
adc
mulb
pushf
adc
sbb
sbbl
xchg
nop
cmpsb
cmp
xor
sti
fdivrs
xor
xor
cmp
gs
nop
cmpsb
shrb
scas
push
sbb
jo
aaa
mov
in
out
add
xor
mov
jno
dec
loop
shlb
sbb
xor
mov
dec
aam
mov
lahf
mov
repz
inc
push
lods
add
pop
push
sub
bound
int3
add
sub
mov
sbb
stos
inc
cmp
xor
jb
xlat
and
or
scas
cmpsb
push
jns
add
push
js
xor
pop
out
cmp
lahf
imul
lahf
sahf
cmp
mov
les
jg
push
loope
push
iret
push
clc
dec
push
cmp
xor
idiv
nop
mov
mov
xor
sub
shrb
insl
add
out
jmp
testb
jge
sub
cmp
sbb
je
cmp
xor
je
andl
jecxz
arpl
mov
pop
sbb
cmp
lcall
push
rcrb
repz
sbb
push
inc
push
lds
iret
adc
jmp
dec
push
push
in
mov
or
xor
mov
dec
jmp
or
push
popw
sub
xchg
mov
mov
into
sbb
nop
pushf
or
in
mov
in
loopne
rcrl
dec
ret
pop
dec
fs
sub
aaa
fldl
inc
sbb
insb
add
sti
into
aad
call
cs
adc
push
gs
pop
lock
imul
fcomps
bound
fidivrs
ds
addr16
pop
push
cmpsl
sub
mov
scas
xor
lds
or
or
pop
pusha
mov
notl
xor
mov
sub
inc
repnz
cmp
fs
xchg
je
fistpl
dec
test
dec
xchg
fmul
jg
ret
ja
jnp
lds
into
daa
sub
inc
fiaddl
outsl
inc
mov
sub
dec
out
add
repnz
repnz
jp
xchg
adc
mov
out
jo
sub
pop
add
inc
mov
rolb
push
jbe
call
loope
mov
fisttps
call
ss
add
sub
pop
lahf
fisubrs
lock
inc
inc
pop
or
sahf
test
pop
fldcw
xchg
pop
out
gs
xchg
mov
pusha
push
js
cmp
adc
cld
nop
fnstsw
repnz
jle
cmp
cld
mov
pop
mov
sbb
adc
add
mov
iret
mov
inc
xchg
in
mov
sti
push
test
lahf
xchg
sub
gs
pop
xor
je
int
loope
into
fsubp
add
adc
ljmp
sub
and
cmpb
nop
clc
shll
xchg
push
inc
jns
clc
sahf
push
leave
add
dec
fildll
movb
rorb
stos
call
jne
or
sbb
test
fadd
cmp
sub
push
js
mov
movb
pop
cmc
dec
push
or
dec
lea
xor
outsl
push
cmpl
test
iret
lock
aaa
mov
or
cmpsl
imul
orl
sbb
and
sbb
pusha
lock
adc
xlat
je
popf
or
fiaddl
xchg
testl
mov
cltd
lea
xor
add
ret
sahf
jp
loop
xchg
ffreep
insb
pop
jge
js
mov
cmp
mov
xlat
stc
bound
es
jmp
rcll
movsl
pop
jae
gs
mov
pusha
scas
pop
fwait
mov
into
adc
loopne
repnz
ljmp
ror
mov
subl
and
jp
in
test
mov
insb
dec
int
std
jo
nop
lds
mov
dec
sbb
push
shl
jmp
or
lds
dec
push
stos
adc
jo
or
rcrb
dec
loop
repz
cmp
jmp
aam
push
pop
or
jns
sbb
mov
xchg
mov
movsl
mov
movsl
jae
inc
mov
sahf
mov
mov
push
into
adc
mov
cld
or
xor
cltd
adc
sub
fiaddl
cwtl
test
lea
rcll
sub
push
pop
xor
mov
enter
and
sbb
and
xchg
cs
dec
inc
push
xlat
add
mov
addr16
inc
mov
jne
repnz
jb
push
in
les
scas
jecxz
je
mov
sbb
or
outsb
clc
out
push
cli
lds
push
and
stc
jbe
push
call
stos
or
ret
test
orl
and
out
jp
push
or
dec
mov
add
adc
sbb
lock
xchg
and
imul
adcl
dec
mov
add
and
imul
sbb
or
fwait
pop
and
jmp
ret
push
mov
dec
int
dec
mov
ret
dec
pop
or
int
dec
push
mov
mov
pop
jp
mov
mov
pop
sub
incb
lret
cs
fninit
push
mov
lret
mov
dec
test
jnp
lods
cwtl
mov
push
std
cmovp
push
int
ss
mov
clc
stc
xlat
lods
sti
cmp
sbb
jg
adc
ds
dec
mov
fistps
movsb
sub
dec
jg
mov
cld
in
mov
sub
and
in
dec
lods
and
push
jmp
adc
sbb
sbb
add
pop
and
xchg
mov
test
push
rcl
out
outsb
and
cld
fcomi
cmp
mov
inc
jno
sbb
outsb
xchg
gs
mov
aaa
and
leave
je
test
test
mov
daa
pop
mov
push
lods
lcall
pop
in
jno
into
cmp
in
mov
adc
repz
mov
pop
mov
mov
ret
mov
lcall
sub
cmc
jg
mov
xchg
es
jl
mov
loope
xor
and
lahf
test
shll
lods
cmpsl
bound
jmp
or
cs
sahf
lret
mov
adc
ret
sarl
pop
sbb
sbb
adc
push
testb
dec
outsb
push
sbb
loope
fists
je
in
inc
lods
pop
mov
xchg
push
insb
xchg
jno
in
or
mov
mov
mov
push
call
ficomps
xlat
test
push
int3
dec
and
push
mov
into
xchg
push
subb
pop
lret
or
test
cwtl
mov
cs
inc
cltd
ljmp
jo
pop
jb
insb
adc
in
xlat
xchg
mov
add
add
in
ret
pop
xor
push
nop
jecxz
lea
subl
cmpsl
mov
imul
lret
and
xorb
iret
xor
ss
out
rcll
out
ja
data16
add
cli
rorl
cmp
adc
pop
mov
cmp
dec
dec
dec
scas
dec
cvttps2pi
jae
aam
jmp
push
push
or
cmpsl
push
in
fucompp
and
scas
add
js
shl
xchg
fsubrp
sub
out
movsb
dec
imul
push
out
imull
fs
push
cmc
lods
dec
stos
mov
and
adc
jae
in
lods
movsb
inc
add
orb
fsubrp
pop
pop
in
inc
push
cmp
aam
fistpll
push
dec
and
frstor
insb
gs
mov
cmp
pop
ja
icebp
repnz
mov
inc
sub
popa
repnz
loopne
or
inc
or
or
dec
inc
scas
jg
add
ret
fnstsw
out
cli
dec
pop
push
pop
les
push
mov
in
call
dec
popa
xor
mov
lods
cmp
repz
or
xor
lret
jb
and
push
cld
out
stos
int3
lods
subb
out
frstor
scas
push
mov
jbe
aas
xchg
dec
fisubl
je
pop
mov
pop
pop
xchg
lds
sub
into
and
test
loope
or
and
popf
push
add
lods
incl
aad
push
mov
adc
and
or
mov
filds
push
cmp
xor
imul
jle
test
adc
and
inc
outsb
in
pop
into
in
out
clc
popf
xchg
sbb
int3
dec
out
cmp
mov
test
incb
cmp
xor
mov
divl
sub
icebp
dec
jecxz
mov
mov
mov
mov
les
cs
mov
cmpsb
jo
push
es
rcrb
in
call
outsb
nop
dec
mov
cmp
adc
movsl
push
ja
xlat
lret
mov
notl
aas
das
jnp
ds
push
pop
push
xlat
mov
inc
call
jecxz
outsb
xchg
cmp
fmulp
mov
hlt
std
xlat
mov
push
mov
movsb
xor
xchg
dec
inc
inc
mov
neg
sbb
pop
popf
mov
rep
mov
testl
outsl
pop
push
mov
daa
lahf
cmp
lea
fsubrl
push
inc
mov
adc
dec
sahf
and
or
jb
lods
sub
mov
fisttpl
xchg
mov
bound
icebp
fldcw
sbb
fstpl
push
mov
loope
f2xm1
fwait
and
or
xor
mov
jecxz
add
sti
mov
pop
cmp
jp
push
ret
xchg
mov
and
adc
cmc
mov
scas
sub
push
jne
mov
lahf
and
inc
sbb
enter
loopne
call
stos
ljmp
scas
cmp
mov
mov
daa
inc
sahf
xchg
stc
cmp
mov
mov
pop
and
and
and
adc
push
lods
mov
mov
or
andl
add
sahf
jl
inc
cmp
scas
inc
fisubl
test
xchg
ja
or
and
loope
cmp
adc
adc
fcomps
inc
xchg
and
mov
pop
test
cmpb
outsw
and
fiaddl
push
and
or
push
xchg
jo
pop
sbbl
fidivs
in
pop
add
shlb
xchg
mov
movsb
push
push
pop
mov
fmull
dec
xchg
pusha
mov
dec
add
mov
cmp
aaa
jns
aas
push
sbb
mov
xchg
in
lcall
push
or
sbb
mov
std
and
sbb
int
hlt
mov
add
testb
pop
iret
mov
add
push
lcall
add
adc
clc
cmp
outsl
imul
sub
sub
mov
mov
lds
push
xor
cmp
add
sub
faddp
lods
hlt
andb
shrb
aad
and
dec
mov
dec
push
clc
outsl
lret
lods
dec
xor
subl
or
imul
inc
cltd
enter
sarl
push
push
rol
mov
roll
stc
out
xor
xchg
jg
pop
jno
loopne
sbb
jg
lcall
jb
push
leave
inc
cmp
jbe
push
push
stos
sub
arpl
jmp
sbb
jl
pop
mov
lret
rolb
push
adc
into
jns
fidivrs
mov
push
out
test
adc
in
test
imull
add
push
pop
lcall
pop
and
loopne
scas
and
js
test
cmp
mov
sub
pop
push
or
adc
sub
in
inc
pop
inc
shlb
sbb
adc
dec
xor
sub
test
pop
sahf
pop
dec
adc
push
popa
sahf
mov
push
push
pop
jns
leave
jbe
mov
out
int3
pusha
movsl
lret
adc
push
movsl
cwtl
and
cmpsb
or
stc
adc
insl
inc
pusha
xchg
inc
jae
xlat
outsl
xor
jne
cltd
in
movsb
js
aam
insl
push
jb
adc
pop
jmp
fcoms
cmc
fnstcw
add
xchg
iret
sub
data16
mov
adc
mov
add
adc
insw
int3
cmp
push
popf
shr
sub
pop
and
push
das
nop
adc
and
sarb
jle
dec
faddl
jbe
fimuls
dec
sbb
aaa
insl
mov
pop
in
out
sbb
in
jg
jl
cmp
inc
bound
pushf
fidivrl
sub
push
jg
or
adc
scas
loope
push
mov
pusha
ljmp
jne
push
out
lea
cmpsb
or
adc
sub
and
rclb
stos
mov
out
movsb
dec
loopne
add
pop
and
push
adc
mov
out
jb
jmp
fistpll
xchg
pop
or
xchg
inc
add
arpl
and
stc
push
cmp
mov
outsl
lcall
mov
loop
lock
andb
jb
mov
call
dec
push
je
xor
xlat
ja
jle
ljmp
pop
mov
xor
and
bswap
fstps
xchg
pop
inc
jmp
sbb
cmp
test
out
push
bswap
mov
les
ret
scas
jmp
cs
xchg
lea
add
out
je
lahf
lea
mov
leave
sbb
lds
mov
mov
das
leave
out
mov
nop
sbb
push
ror
imul
sub
repnz
cmp
xchg
cmp
in
cld
jge
rol
push
dec
add
jecxz
imul
fsubrs
mov
fldcw
cmpsl
call
ja
stos
lahf
mov
mov
pop
xor
adc
out
sub
and
push
jge
enter
push
lret
shrb
insl
xlat
pop
jno
ffreep
add
imul
dec
sub
clc
sbb
xor
out
mov
push
inc
mov
mov
mov
xchg
push
fucomip
ljmp
dec
mov
inc
fimull
and
lcall
jae
stc
cmp
cmpsb
and
int
mov
lret
push
xchg
adc
and
sbb
pop
icebp
and
test
push
repz
mov
cmpsb
gs
dec
jbe
dec
and
mov
jnp
sub
test
and
xlat
daa
dec
pop
jae,pt
sub
mov
lock
sbbb
pop
mov
or
jnp
pop
out
mov
add
xor
sti
in
mov
dec
outsl
and
shlb
add
cli
pop
xchg
mov
inc
roll
popa
loopne
imul
sbb
and
out
xor
lahf
mov
fdivrs
jo
dec
pushf
stc
jge
jne
push
fdivrp
xchg
imul
xchg
mov
inc
mov
mov
push
push
or
xor
push
idiv
idivl
mov
add
or
repz
inc
lods
xor
les
and
pop
loopne
lds
mov
fdivl
call
pop
xor
mov
movsl
pop
jmp
xor
or
aad
popa
dec
out
scas
sub
aam
outsl
cli
add
mov
jbe
dec
rcrl
and
mov
out
inc
mov
popw
divl
lds
mov
pop
xor
cmp
adc
test
sahf
loopne
cmp
cmp
enter
out
jge
leave
add
daa
jp
push
xchg
fs
not
stos
mov
jno
cwtl
cmp
pop
daa
jbe
sbb
sbb
loop
enter
fldcw
pop
loopne
int
sub
jp
or
arpl
jmp
test
addr16
sub
les
cmp
jg
int
sbb
inc
or
cmp
sahf
enter
push
inc
push
push
adc
popa
and
in
lds
or
sub
imul
insl
stos
outsb
push
andl
lret
andb
inc
pusha
push
inc
mov
test
and
movsb
and
lret
push
shrb
mov
cmpsb
fmuls
out
insl
das
pop
int
jl
sub
movsl
xor
dec
loope
mov
int3
jge
adc
ss
mov
xor
jp
test
data16
jl
pop
sub
int3
fdivrs
loopne
inc
adcb
nop
shrb
mov
cmc
adc
inc
iret
cmc
mov
sub
popf
mulb
push
js
sub
pop
or
bound
push
xor
test
cmp
movsb
rcll
clc
lahf
idivb
cmp
mov
out
pusha
dec
cmpsl
enter
test
adc
push
push
lret
mov
leave
int
decl
jns
xor
aaa
push
sub
stos
mov
sub
xor
pop
jle
std
add
pop
push
push
adc
adc
dec
xchg
inc
and
mov
cmp
loopne
mov
ficomps
or
and
mov
das
insl
bound
mov
xchg
inc
dec
adc
add
movsb
mov
sbb
shlb
pushf
into
sbb
sarl
or
fiaddl
js
mov
imull
jne
loope
bnd
repz
out
ret
mov
sbb
mov
in
cmp
clc
mov
dec
xor
xor
inc
loop
sbb
pusha
std
ja
rolb
fcomi
jne
in
inc
push
repnz
pop
int3
or
sub
jmp
dec
or
sub
aas
fsubs
dec
aas
inc
mov
cld
sbb
or
lds
fst
cmpsl
or
xor
dec
push
shll
outsb
insb
mov
add
fdivr
pusha
out
push
cmp
iret
mov
test
int
aas
inc
call
adc
inc
xor
add
ljmp
insl
rclb
scas
sbb
popf
test
stos
sbb
loop
mov
cmpsl
fcmovnb
inc
push
cli
dec
addl
loopne
fwait
ss
xorl
clc
pop
cltd
ja
out
lds
js
pop
jb
sub
cmpl
popf
mov
and
push
xlat
push
jno
add
mov
ficoml
in
sahf
mov
and
mov
cmp
push
bound
ret
mov
jns
loopne
inc
shl
lcall
push
jge
mov
cmpsb
add
mov
mov
mov
pusha
and
into
mov
cmp
add
jecxz
movsl
lcall
inc
cmp
inc
dec
test
lock
ds
and
nop
mov
lahf
cmp
xlat
jb
jmp
insb
movl
loop
or
insl
arpl
inc
sub
pop
mov
lret
icebp
xchg
jle
rclb
push
mov
jge
mov
les
in
and
fsubrl
or
adcb
jl
jmp
mov
cmpsb
adc
in
out
in
jecxz
inc
mov
adc
fldenv
mov
mov
cmpb
sbb
in
or
xchg
out
test
rol
mov
cs
pop
mulb
loopne
std
sbb
or
and
fldenv
pusha
pushf
add
xor
dec
out
push
jp
mov
inc
enter
inc
adc
inc
fsts
in
lahf
in
ja
addr16
jo
dec
push
enter
xorb
or
sub
mov
and
les
popf
or
test
pop
pop
mov
sti
push
movsl
jo
scas
std
out
adc
jne
mov
arpl
xchg
and
pop
test
push
leave
sub
rcrb
jl
clc
repz
mov
loop
rorb
into
fidivrl
shrd
sub
aas
xchg
outsl
int
pusha
imull
mov
xchg
out
out
jmp
test
push
xchg
icebp
push
inc
mov
xchg
imul
ljmp
movsb
mov
test
int3
leave
ret
mov
inc
mov
xor
in
pop
pop
xchg
pushf
addb
mov
lahf
dec
or
vmulsd
push
pop
cmp
mov
insb
or
cmp
pop
or
loop
hlt
pop
vunpckhpd
lret
xor
leave
cmp
test
push
inc
pop
and
mov
adc
ret
mov
xlat
pop
xor
push
scas
xchg
aas
dec
call
xor
push
push
push
mov
out
test
add
scas
scas
dec
jne
cmc
pop
in
mov
shll
xchg
pop
imul
imul
ret
lcall
es
xor
push
ret
jnp
sub
mov
sub
rcrl
rol
mov
sub
lock
xchg
mov
xchg
ret
push
mov
test
push
lds
mov
sbb
dec
jno
or
inc
jo
push
or
sub
outsl
mov
cmp
out
sub
loopne
aad
dec
ret
jge
xchg
mov
mov
sub
adc
mov
mov
lea
movsl
and
ja
mov
mov
or
dec
stos
pop
push
inc
and
push
adc
out
hlt
add
loopne
into
test
push
clc
fcoml
mov
into
or
sub
movsb
xchg
lods
push
rcr
gs
pop
jecxz
dec
mov
dec
fs
mov
je
sbb
xor
push
push
jecxz
fcmovnb
add
mov
jbe
hlt
movsb
pop
push
outsl
push
aaa
and
sbb
xor
and
adc
jge
mov
shll
dec
push
outsb
cmpsl
sub
loop
or
push
inc
push
popa
xchg
cli
sbb
push
sub
test
jle
addl
repnz
inc
dec
push
cli
cmpsb
cmpsl
ja,pt
je
cmp
in
pop
add
lret
call
xor
mov
fiadds
lret
int
shlb
daa
adc
mov
les
xchg
mov
jle
test
jno
cwtl
inc
fisubs
data16
stc
xor
inc
je
fbstp
cmp
push
addl
adc
dec
test
lahf
mov
insb
shl
testb
cmp
inc
or
outsb
push
xchg
sub
loopne
stc
mov
xchg
repnz
push
push
rolb
push
test
dec
das
mov
cmpl
dec
xchg
mov
push
cmp
mov
push
call
push
dec
pop
or
les
sti
je
aad
pop
cmp
mov
les
icebp
out
mov
fidivl
addr16
fstpt
shl
push
jno
mov
test
mov
aas
mov
and
insb
mov
test
jg
in
sar
dec
and
dec
outsb
or
sbb
inc
out
cli
add
inc
lea
shll
enter
jo
pop
pop
or
pop
cmpsl
es
cmp
adc
inc
dec
ja
jo
enter
add
xchg
ret
inc
icebp
out
cmpl
cmp
sbb
mov
repnz
mov
inc
cmc
mov
sbb
leave
mov
sahf
adc
or
push
pop
loopne
stos
pop
cmp
test
push
std
mov
pop
fstps
hlt
sbb
jns
add
jmp
pusha
xor
out
addb
mov
sub
rcll
out
and
scas
arpl
push
cltd
mov
in
push
and
sub
dec
cld
sbb
mov
pop
je
imul
xor
push
xor
push
add
aaa
rorl
mov
add
sbb
test
stos
dec
xchg
sbb
out
add
or
stos
adc
into
int
jnp
imul
xchg
ret
aaa
cmpsb
mov
inc
mov
ret
jecxz
mov
lods
cmp
mov
adc
fnstsw
mov
or
xchg
bound
push
mov
sub
cmpsl
pop
scas
xchg
jge
add
mov
dec
fsubrl
leave
ja
repz
sbb
dec
pop
sub
mov
mov
xor
subb
cmp
xchg
movsl
mov
mov
ss
sarb
push
push
bound
dec
in
mov
adc
pop
inc
and
xor
adcl
inc
fs
daa
jns
pop
jge
test
fs
es
jmp
pop
add
dec
popf
sbb
shr
pusha
lods
xchg
inc
and
in
pop
jmp
lods
jns
shrl
or
iret
fdivl
in
sub
and
fldl
pop
sub
mov
and
inc
cmc
jo
rcll
jmp
fs
hlt
mov
adc
xlat
in
mov
fldcw
add
sbbb
jmp
or
cs
leave
scas
popf
xchg
push
into
cmp
rol
cli
fdivrs
jbe
mov
cli
jne
lahf
push
pop
stc
pop
outsl
in
stc
adc
das
scas
cmp
inc
mov
adc
fstpt
xor
sub
dec
shlb
leave
in
test
jae
out
addb
xor
fs
stos
sub
lock
add
jmp
mov
xchg
aaa
sbb
les
mov
in
xorb
pop
shl
lret
lods
jecxz
add
in
xchg
xor
popf
mov
xor
or
adc
cli
mov
and
imul
sbb
lea
dec
sahf
pop
scas
xchg
mov
push
adc
cmp
mov
sti
sbb
inc
popa
jo
movq
mov
sub
mov
pushf
movsb
js
adcb
cmp
mov
mov
jno
xchg
movsl
addr16
ja
and
mov
dec
popf
inc
mov
fistpll
mov
pop
ljmp
sub
jno
push
jmp
rcrb
cmp
out
push
fstl
xchg
lea
sub
call
xor
cmp
mov
inc
decl
sbb
or
cmp
mov
cld
mov
andb
jle
pushf
sbb
pop
ds
test
shrl
adc
dec
addb
xor
xor
stos
xlat
sub
shlb
xchg
insl
sbb
push
ja
inc
mov
mov
sub
enter
xchg
cli
stos
sub
flds
mov
mov
sub
incb
jp
mov
and
jno
or
js
pop
dec
int
pop
dec
lcall
clc
out
inc
or
push
adc
adc
cwtl
aad
stc
mov
inc
pop
mov
or
popf
fwait
pop
stos
push
cmp
cmp
dec
mov
mov
mov
xchg
test
xor
sbb
jp
xor
iret
and
mov
xchg
in
xchg
or
push
xchg
add
aas
pop
xor
xchg
xlat
push
ja
nop
cmpsl
aaa
je
fnstcw
mull
lret
xchg
aam
adc
xor
loope
in
subb
mov
xor
fcmovbe
jp
fcmovnb
mov
stos
mov
inc
jecxz
cwtl
imul
shrb
mov
cmp
pusha
lods
rcrb
mov
adc
neg
addl
jecxz
push
scas
test
sbb
xchg
je
xor
adc
out
call
xor
sbb
add
cmp
out
mov
xchg
repnz
cmc
fs
jbe
hlt
jecxz
mov
movsb
lret
push
xor
sub
cmp
fldcw
dec
mov
xor
lret
out
and
sti
push
push
xchg
or
adc
insb
jecxz
ret
push
aam
scas
push
cltd
rorb
ds
push
pmulhw
out
iret
and
ret
psubusb
or
jnp
sub
pop
ss
cmp
xchg
mov
sub
popa
repz
pop
xor
ja
jb
or
ficompl
mov
data16
fwait
in
out
pop
in
ret
das
mov
pop
stc
out
sarb
repnz
bound
sub
ret
sti
fwait
mov
jle
adc
cmp
ret
sub
fucomip
mov
inc
jle
andl
cltd
xchg
pushf
cld
adc
jo
lahf
cmpsl
mov
and
test
ja
jp
mov
xchg
dec
mov
sub
sbbb
jbe
pop
mov
lock
xchg
push
pop
imulb
bswap
loopne
push
test
lret
jo
or
lret
fs
mov
mov
lahf
fs
and
sbb
cmc
adc
push
sub
mov
nop
cmp
loopne
dec
xor
xchg
adc
mov
inc
xlat
dec
or
adc
pop
mov
leave
or
xchg
scas
lret
dec
mov
xor
out
scas
mov
inc
pop
and
pusha
lahf
sbb
fldl
mov
and
jle
mov
pop
testb
clc
cld
push
pusha
outsb
insl
jmp
xor
in
inc
gs
mov
jp
icebp
leave
dec
stos
repz
and
jns
push
xor
xchg
sbb
popa
cmp
adc
test
dec
mov
divb
imull
sub
inc
inc
in
pop
mov
test
inc
cmp
jmp
fcmovb
dec
xchg
xor
mov
and
and
jge
lock
outsb
xchg
in
out
lahf
cli
and
mov
test
repz
sub
les
jp
mov
sbb
sbb
lds
rolb
and
inc
test
mov
push
mov
scas
mov
aas
test
mov
sbb
inc
xchg
push
ja
not
jecxz
pop
sahf
xchg
out
mov
sahf
sbb
mov
sub
xorl
xor
inc
pop
popl
push
mov
and
or
clc
in
gs
fs
adcl
mov
ret
xchg
insl
jbe
mov
push
sti
test
xchg
and
aaa
xchg
sub
push
jno
and
cltd
xlat
call
mov
call
or
add
negb
dec
push
or
cmp
sub
jne
sbb
ja
rorb
ficoml
mov
repz
fwait
sbb
in
push
iret
inc
xchg
divl
fcomps
cmp
enter
push
repz
dec
add
ss
inc
or
xlat
pop
in
lret
jecxz
enter
mov
xchg
push
jno
movsb
cvtdq2ps
adc
mov
push
xchg
jbe
stc
stos
jne
out
sub
cli
outsl
leave
andb
movsb
call
dec
mov
ret
pop
inc
or
xchg
mov
jns
popf
mov
xor
and
inc
incl
orl
out
xchg
pusha
ja
cmpsb
in
dec
out
and
xchg
add
dec
lret
std
xchg
sahf
fcompl
in
cli
aam
adc
lcall
repz
pop
scas
test
cli
daa
jl
inc
movsb
push
das
ret
push
stos
mov
loop
mov
insb
and
sub
pop
pop
shrb
int
and
push
push
sub
ret
and
and
cltd
test
add
push
or
xorl
cmp
pop
incb
mov
xor
outsb
or
cmp
sub
jno
inc
push
sar
roll
fwait
jo
lock
loope
call
push
aad
test
lcall
nop
mov
xor
call
jns
mov
insb
test
sbb
das
repnz
loopne
lds
shll
pop
add
xchg
mov
in
cmpsl
ljmp
adc
dec
ljmp
xor
or
rcrb
or
daa
xchg
xor
and
mov
mov
pusha
sub
sbb
icebp
xchg
lock
or
jmp
add
push
lret
sub
xchg
lods
stc
aas
mov
mov
add
adc
shl
rorb
adc
popa
arpl
aas
dec
fisttps
ds
or
pop
mov
lret
enter
test
sti
pop
cmpl
cmpsl
les
push
push
cs
mov
xchg
aaa
les
shlb
aaa
rep
mov
rcl
int
mov
loope
xchg
pop
je
loope
aas
and
or
cmc
mov
xchg
add
in
ja
mov
lret
aad
mov
cltd
daa
cmp
imul
cmp
xchg
ja
mov
or
lret
and
sti
lods
mov
xchg
add
mov
mov
sbb
stos
pop
arpl
test
mov
aaa
je
div
lahf
imul
je
and
lds
fcmovbe
sub
test
data16
mov
int3
es
arpl
xchg
push
out
jmp
sub
push
ret
jnp
movsl
loopne
xor
mov
pop
dec
push
aad
sub
stos
or
jb
ficompl
ret
mov
loop
hlt
sbbb
adc
hlt
in
dec
loopne
sub
ss
or
mov
les
cmp
xchg
inc
cmp
and
push
sbb
pop
jns
inc
insb
mov
push
and
add
pop
lock
xchg
mov
lods
push
dec
cmpsl
sti
dec
mov
jmp
outsl
sub
movsl
mov
out
mov
bound
mov
jo
add
and
scas
das
scas
mov
sbbl
adc
idivl
xor
gs
dec
imul
int
mov
jmp
xor
fistpl
fwait
xchg
icebp
ja
xor
sahf
cmp
jno
out
adc
xor
gs
push
js
xchg
mov
push
scas
lret
movsl
fisubl
dec
rcrb
sarl
faddl
mov
imul
lcall
test
sub
xor
mov
cmpsb
lock
or
ret
sarb
adc
stos
sbb
inc
jns
mov
shlb
outsb
lret
xlat
push
lret
leave
push
push
aam
cmp
ds
pop
xchg
jle
gs
mov
adc
push
inc
pop
std
mov
and
mov
sbb
popf
scas
das
lret
mov
testb
sub
icebp
aad
in
out
fnstsw
mov
xlat
push
cld
outsb
insb
cmp
ret
fists
and
fidivrs
pop
in
dec
adc
cmp
mov
cmpb
fsubp
jae
pushf
mov
dec
mov
cmp
pop
std
jp
push
sarl
mov
xor
outsl
jg
pop
dec
mov
fmuls
cmpsb
push
aad
push
pop
sbb
cmpsl
in
pop
cli
fistl
popa
hlt
rorl
inc
aas
loop
adc
xchg
repz
mov
lret
pushf
push
int3
rclb
push
and
insb
jae,pt
pop
xchg
sbb
xchg
mov
jg
or
fisubrs
scas
and
mov
aaa
mov
fsub
pop
call
shlb
jmp
clc
xor
shll
or
orl
push
jns
jl
or
dec
out
imul
sarb
adc
fisubrl
and
clc
jnp
inc
popa
popa
push
stos
fwait
out
mov
pop
mov
je
push
sbb
into
stos
cmpsl
sbb
inc
xor
subl
mov
test
pop
mov
push
inc
aaa
fldt
loopne
dec
and
inc
in
hlt
adc
hlt
adc
and
loopne
fisttpll
inc
pop
sub
push
sub
js
mov
arpl
xor
testl
jge
test
jns
jo
lcall
stos
mov
push
push
push
or
jmp
mov
enter
xor
and
lock
nop
ret
int
xchg
pop
outsl
xchg
jecxz
sub
cmp
and
jl
pop
and
xchg
les
lret
mov
std
inc
add
or
clc
xchg
out
out
cmp
cs
pop
jo
shrb
mov
push
insb
andb
lea
or
insb
pop
cli
popa
inc
adc
stos
stos
push
or
xchg
sbb
sub
cmp
loop
pusha
jle
dec
or
sub
jne
aad
and
repnz
mov
pop
push
repnz
push
or
inc
or
lods
insl
jne
sbb
jns
xor
lods
out
pop
int
jmp
mov
popa
scas
xor
mov
insl
orb
sub
sub
shrl
addr16
add
hlt
addl
pop
lea
leave
mov
iret
push
jmp
enter
sti
sahf
popf
imul
out
sbb
cmp
inc
enter
pop
test
loop
mov
adc
repnz
xchg
data16
je
mov
push
cmpsb
jo
loop
test
push
mov
sti
mov
cwtl
xlat
mov
xchg
pop
insb
jge
lret
push
lds
mov
dec
cmp
cmp
jo
mov
arpl
int3
jecxz
lock
out
nop
sub
push
dec
jl
cltd
push
sbb
xchg
popf
pop
add
jle
dec
add
cltd
add
aam
lret
cmp
pop
aad
hlt
pop
popa
xor
in
enter
push
mov
pop
adc
mov
repz
and
repnz
push
jge
test
mov
xchg
aad
repnz
sbb
js
xor
fmul
mov
jp
mov
das
out
lret
inc
jo
jg
pusha
xor
adc
add
fsubl
and
xlat
xchg
shr
mov
out
mov
jb
push
sti
pop
cmpsb
jg
push
lods
adc
fnstsw
mov
lret
lock
push
sbb
scas
btc
sarb
jecxz
fnstcw
iret
movsb
add
and
in
pop
pop
xor
pop
pop
add
or
mov
lcall
in
adc
test
cmp
test
mov
cmpsb
add
cmp
cwtl
shl
sbbb
dec
mov
cli
or
and
data16
push
lcall
dec
test
add
jae
repnz
or
int
cli
enter
pop
mov
subl
int3
daa
cmp
mov
xchg
cmpsb
xor
shrl
test
adc
push
adc
int
fmull
or
movsl
test
and
call
jnp
or
dec
jp
insb
fidivrl
inc
fnstenvs
in
add
mov
jae
leave
aad
stos
jbe
jg
mov
idivl
ret
sub
ret
in
test
sahf
fwait
inc
ror
mov
lock
mov
mov
or
xor
in
add
dec
cmp
inc
hlt
test
gs
xorb
xchg
cli
or
adc
mov
jp
jb
jge
jl
int3
mov
lds
xchg
sar
and
arpl
bnd
pusha
repnz
dec
out
mov
int3
outsl
xchg
es
adcb
pop
shr
dec
out
xchg
jmp
arpl
dec
lcall
out
lods
arpl
dec
xchg
rol
adc
std
and
push
push
xor
or
int
lcall
mulb
popf
out
push
sub
in
js
or
iret
icebp
mul
stos
dec
sti
pop
jbe
mul
nop
cmp
sbb
out
cmpsb
fldt
aas
jno
mov
sahf
mov
insl
mov
jle
mov
js
out
cwtl
push
dec
xlat
nop
and
cwtl
mov
cld
fstl
pop
cli
in
mov
popf
jb
jo
cltd
pushf
es
fnstenv
lcall
fnstsw
add
and
mov
dec
sbb
cmpsl
xchg
divps
cmp
aaa
lret
xor
mov
in
fmull
add
stos
arpl
adc
dec
insl
aaa
sbbl
pusha
inc
cmpsl
adc
ret
mov
rorl
sbb
arpl
mov
inc
loop
xor
adc
cmp
xor
fcompl
jmp
push
cmp
xor
sti
fdivrl
aam
in
aas
fs
sbbl
nop
adc
cltd
pushl
nop
push
in
test
imul
jns
mov
xor
ss
mov
add
lock
imul
je
icebp
mov
push
js
shlb
sbb
cmp
mov
mov
push
cs
aaa
jg
xchg
xchg
pop
push
jno
lahf
pop
xchg
scas
jl
cmpsb
sub
test
shlb
pop
cltd
mov
inc
imul
leave
stos
push
lds
push
mov
clc
lds
les
jmp
fstps
fs
sbb
sub
jl
cmp
sub
push
pop
adc
fdivrs
and
ljmp
lock
hlt
xchg
inc
mov
sbb
lea
cli
mov
movsb
mov
in
push
xor
inc
fidivs
loopne
pop
arpl
test
in
insl
mov
aad
adcl
mov
dec
fiadds
jg
mov
in
test
xchg
aaa
dec
push
push
dec
inc
cmp
ljmp
fyl2x
xchg
stc
fistl
pusha
inc
insb
lods
notb
and
mov
cmpsl
mov
xchg
add
mov
inc
cmc
sbb
and
xor
cltd
aam
add
inc
stos
or
jb
xchg
fcomps
sbb
cmp
dec
sub
mov
mov
lret
ja
outsb
adc
leave
rolb
dec
mov
xor
xchg
jl
cmp
xor
cmpsb
insb
cmovb
leave
inc
dec
mov
push
xor
mov
and
jnp
fs
or
test
lret
ss
xorl
jl
adc
xor
in
nop
add
arpl
sbb
mov
mov
insb
sub
jae
stos
mov
cli
dec
add
sbb
push
mov
cltd
fwait
gs
test
and
mov
inc
js
dec
mov
test
aaa
mov
xchg
pushf
lahf
or
mov
pop
sub
pop
sbb
ds
push
push
stc
outsb
sub
je
or
gs
fwait
hlt
lahf
pop
cli
sbb
push
jo
cmc
cltd
sub
in
fisubrs
inc
popa
inc
mov
cld
adc
adcl
add
loopne,pn
xor
movsl
push
sti
call
pop
dec
and
inc
inc
fstpt
call
lods
pop
adc
xchg
xchg
adc
sarl
mov
and
pop
outsb
sub
mov
xchg
test
subl
mov
mov
jge
mov
mov
push
mov
pop
mov
sub
jno
adc
scas
cld
jmp
push
mov
and
rorb
xor
xor
mov
addr16
es
xor
or
rolb
xchg
mov
imul
data16
xlat
jb
fstl
lods
jg
dec
and
notl
xlat
lcall
ret
cld
lock
gs
mov
aad
repnz
pop
push
ss
imul
push
test
popf
sub
mov
imul
fwait
cmpsb
or
lods
xlat
xor
add
adc
mov
mov
jl
in
jno,pt
sub
hlt
jo
test
add
enter
clc
cltd
pop
sahf
pop
and
mov
cmp
in
push
sbb
movl
stos
sti
mov
push
jmp
test
jle,pt
mov
enter
pop
jl
xor
cmpsb
sbb
out
bswap
jnp
jmp
pop
div
xor
xor
xchg
pop
xchg
stos
iret
cld
mov
pop
jg
push
bound
pop
stc
frstor
sub
jno
ret
xchg
sbb
xchg
adc
out
or
out
repnz
ret
cmp
je
movl
ja
mov
aaa
lahf
es
inc
stc
mov
fnstcw
cmp
pop
mov
cmp
xor
test
xlat
lds
outsl
push
sub
cs
ret
xchg
cmpb
imul
xchg
inc
jmp
cmp
movl
insl
push
sti
sbb
loopne
sub
in
jl
adc
mov
dec
jg
mov
xor
dec
push
or
iret
lock
mov
ficompl
dec
jmp
adc
xor
stos
jno
cmc
mov
push
pushf
shrb
push
int
mov
jle
insb
dec
fidivrs
jg
push
push
mov
out
push
sbb
sub
xchg
insb
shrl
outsb
adc
xchg
out
mov
shr
adc
mov
filds
pop
jmp
lods
cltd
xor
xor
jg
xchg
movsb
test
fisttpll
inc
mov
insl
and
call
jge
cwtl
andb
frstor
shll
dec
xor
inc
mov
pop
xor
sub
xor
jb
push
mov
xchg
dec
push
adc
xor
dec
cmp
dec
jg
xor
in
arpl
mov
stos
sar
pop
push
lds
push
mov
xchg
adc
mov
mov
aaa
shlb
inc
lds
popa
cli
fldenv
jle
jp
adc
scas
push
push
scas
std
push
sub
mov
push
lahf
out
jecxz
lods
mov
push
outsb
xchg
aam
ret
popf
outsl
pop
xor
xchg
or
cld
pop
inc
imul
das
mov
out
mov
enter
jmp
cmc
inc
jmp
scas
cltd
sar
shrb
xchg
cmp
mov
arpl
xor
cmp
xchg
das
lea
pop
aad
or
loopne
ror
cmp
and
mov
sub
and
add
scas
push
dec
leave
mov
popf
movsl
nop
jns
cmp
adc
pop
adc
in
ret
imul
sub
int3
nop
pop
les
lods
cli
sbb
fsub
ljmp
lret
pop
lds
outsb
outsb
pop
pop
push
inc
pop
aas
lock
add
movsl
mov
fists
or
jp
xchg
cs
xchg
ret
inc
les
xchg
fadds
frndint
ss
ljmp
ret
mov
jmp
div
xchg
mov
mov
inc
jb
mov
insl
das
stos
adc
inc
rcrb
pop
fs
push
pusha
mov
test
sahf
data16
movsb
dec
lret
hlt
mov
mov
mov
mov
or
mov
mov
pop
push
and
icebp
mov
sbb
pop
aaa
xchg
mov
scas
scas
cmp
mov
pop
pusha
pop
icebp
imul
xchg
add
push
jecxz
mov
sbbl
sahf
push
sbb
cmp
int
cld
inc
mov
push
lock
das
stos
scas
sarb
xchg
cltd
cltd
inc
pop
sbb
pop
cmp
ficomps
jno
xlat
mov
pop
pop
cmc
xor
lret
lods
loopne
ljmp
adc
cmp
push
fmuls
jbe
nop
cmp
xor
imul
mov
jno
ret
dec
mov
aas
int
cmp
cmp
repnz
xchg
mov
cmp
and
decb
xor
stos
cld
je
push
mov
lret
repnz
int3
mov
dec
insl
loop
pop
dec
into
xor
pushf
or
or
xor
rcll
imul
jp
xor
icebp
divl
cld
sti
inc
xchg
mov
fidivrs
jbe
and
dec
or
pop
push
mov
icebp
and
nop
sahf
int3
rorb
jno
sub
stos
push
or
inc
add
cld
and
adc
jg
sbb
mov
xchg
fwait
push
sarl
pop
bswap
and
mov
add
out
mov
vcmpps
out
sub
xchg
mov
jmp
mov
mov
inc
cmp
dec
or
pop
ja
in
adc
ficoms
cmp
cmp
ficoms
mov
mov
outsb
jecxz
mov
cmc
in
sub
inc
sahf
and
ss
push
pop
mov
mov
or
rclb
inc
push
insb
xchg
test
inc
repnz
or
in
jae
mov
mulb
push
dec
test
popf
xor
push
rorl
imul
mov
sbbb
in
shrl
jne
lret
mov
dec
push
xchg
xchg
sub
push
aam
mov
mov
xor
jle
xchg
imul
push
dec
pop
mov
out
push
or
cmp
test
jmp
repnz
cmp
sub
jb
loop
fwait
jmp
jp
imull
rorl
fcompl
mov
pop
jno
inc
scas
out
xchg
lea
mov
cmp
sbb
sbb
pop
sahf
jecxz
or
or
inc
popa
fcomp
xchg
repnz
add
stos
lret
xchg
cld
mov
arpl
jbe
rorb
pop
xchg
or
xchg
lcall
sub
mov
mov
mov
push
fcmovnu
iret
lock
fisttpl
mov
jns
adc
adc
fdiv
data16
into
insl
pop
xor
inc
movsl
faddp
pop
andb
aam
jmp
outsl
mov
adc
push
pop
xchg
push
fstcw
nop
into
dec
mov
shlb
push
movl
inc
mov
fistpl
rolb
mov
sbb
add
inc
fnstcw
push
lret
inc
fucom
ss
inc
lds
inc
insl
inc
push
ficoml
sbb
sub
out
adc
or
dec
xlat
adc
pop
lret
imul
fisubs
xlat
les
leave
imul
mov
push
and
mov
cmpsl
repz
add
mov
shl
incb
sbbl
mov
mov
arpl
push
inc
lds
aaa
xchg
ja
push
ret
addr16
aam
cmp
cmc
test
sti
mov
dec
out
lahf
aaa
cwtl
sbb
inc
mov
bound
mov
subl
shrl
loopne
cmpl
ljmp
lods
xlat
and
push
loop
jmp
push
cli
dec
add
add
sbbb
cmpl
sbb
insl
je
stc
inc
aam
or
les
orb
pop
mov
aaa
test
push
fbstp
movsb
loop
lds
push
mov
cli
xchg
cmpb
inc
jb
mov
or
jp
out
inc
scas
add
mov
ljmp
xchg
or
jmp
push
push
lret
sti
jmp
orl
movsb
mov
mov
daa
xchg
pop
mov
test
cmp
push
in
test
mov
das
and
jb
fcomps
outsl
popa
jg
jmp
push
sub
mov
aad
adc
pop
mov
jbe
cs
aas
cmc
jo
lods
adc
xor
mov
scas
dec
xchg
bound
nop
mov
push
flds
xor
inc
xlat
repz
lret
sahf
mov
sahf
cmp
push
adc
mov
or
fnop
inc
lock
or
xchg
loop
mov
xchg
sub
push
mov
jno
std
mov
jo
fdivs
iret
fisubl
sahf
or
jnp
loop
incl
mov
hlt
int3
adc
inc
jl
iret
mov
scas
movsb
dec
call
jb
push
shrl
xor
rolb
lcall
sahf
cmp
fimull
cmp
stos
cld
sbb
mov
call
sub
mov
arpl
xchg
inc
xchg
daa
pusha
movzwl
vmovdqu
inc
clc
adc
jnp
repz
cwtl
pop
push
mul
cmp
add
pop
xor
and
addr16
sahf
bnd
xchg
stc
roll
in
push
mov
xor
ljmp
xchg
andl
clc
adc
movsb
sbb
addr16
repnz
jb
fisttpll
lds
cmpsb
das
test
rclb
push
iret
mov
cmpsl
in
push
cmp
movsb
push
pop
sub
or
adc
outsb
jg
sub
pop
sub
lods
loop
lea
xor
xlat
jmp
fwait
mov
negb
lcall
into
push
addb
into
bound
add
push
xor
xchg
cld
scas
xor
xor
icebp
xor
imul
jbe
rorl
icebp
loope
adc
je
jecxz
cmp
adc
repz
enter
inc
js
lret
xor
out
test
mov
xchg
sub
sbb
pushf
movsb
push
pop
add
mov
loope
lret
lret
clc
mov
xor
jnp
inc
stos
cmp
movsb
mov
mov
push
ffree
es
xchg
cmpsb
add
scas
jae
mov
xor
jnp
xchg
lods
jae
imul
inc
sar
arpl
stos
das
in
int
adc
mov
xor
cmp
add
aaa
sbb
sub
mov
pop
scas
pop
sub
add
pop
xchg
mov
pushf
and
jmp
cmc
loop
lcall
xor
loop
scas
or
mov
cmp
aad
or
aad
bound
xchg
adc
movsb
mov
cmp
jo
bswap
mov
shrb
out
int
dec
xor
and
imul
push
jb
arpl
inc
mov
scas
cli
int
cmp
je
test
push
sub
rclb
pop
inc
dec
movsb
cmp
push
test
pusha
cltd
popf
lret
fldl
test
es
push
lahf
sub
dec
mov
push
mov
add
sbb
xor
dec
pop
mov
push
ret
test
inc
xor
sub
int
jge
fists
jne
jmp
in
sbb
lret
mov
jne
mov
ja
fs
push
mov
push
mov
loop
daa
adc
enter
shlb
mov
imul
cmpsb
push
inc
mov
ljmp
divb
dec
mov
arpl
or
aam
js
pop
imul
push
add
sbb
jmp
popa
repnz
cmp
adc
and
pop
push
into
addr16
lock
inc
arpl
mov
aas
jge
cmp
and
mov
jno
jmp
jecxz
lods
pop
sbb
ds
jae
pop
arpl
sbb
dec
mov
mov
pop
push
cltd
adc
push
out
incb
and
fmuls
jno
mov
iret
sub
sub
sbb
pop
test
ret
lret
dec
xchg
mov
xor
mov
addr16
call
lea
inc
mov
jnp
inc
jle
mov
or
cmp
ds
lahf
jmp
jmp
clc
sub
aam
mov
clc
dec
shl
das
pushf
daa
dec
lods
out
fmull
scas
icebp
push
mov
mov
sbb
mov
mov
push
lock
pop
lods
pop
xchg
cltd
cmp
fdivrs
stos
jo
jno
sti
nop
push
sbb
push
stos
sarb
fcompl
scas
cmpb
push
jl
leave
loop
into
mov
pop
or
add
jbe
add
dec
mov
xchg
jno
in
and
in
lock
or
js
cmpsb
rcrb
mov
stos
ja
and
test
push
les
push
jecxz
negl
pop
xchg
aas
sbb
mov
jp
scas
pop
call
inc
stc
dec
aad
jp
fdivrl
cmp
inc
push
inc
popf
jmp
insb
out
adcl
sub
mov
stos
xchg
cmp
iret
xchg
loope
xchg
pusha
imul
xchg
pop
mov
pop
aad
fidivs
jmp
or
add
adc
pop
jae
mov
fsts
ja
and
dec
mull
xchg
lods
push
aam
stc
push
xor
mov
dec
fs
cld
mov
inc
leavew
jg
sarb
iret
cmp
fcomps
jns
add
pop
push
mov
outsl
add
cmp
out
clc
xor
lret
pop
out
repz
stos
nop
pushf
call
fildll
movsb
incb
dec
rclb
addr16
imul
addr16
insl
ret
pushf
adc
in
jp
ds
jg
and
int3
inc
rclb
pop
mov
call
in
shr
mov
pop
jle
outsl
ljmp
test
ds
call
fmull
out
cmp
lds
dec
mov
shrb
push
sub
in
std
cltd
sub
adc
push
inc
mov
push
inc
pop
test
mov
mov
dec
and
inc
jmp
frstor
rorb
xchg
xlat
sti
cmp
inc
fmuls
test
jo
mov
sbb
test
sub
jbe
imul
fwait
test
enter
inc
add
or
push
push
sbb
sub
push
add
iret
test
cmp
xchg
mov
add
sub
push
lods
scas
stos
enter
gs
mov
cmp
outsl
xlat
add
mov
inc
clc
leave
xchg
aaa
out
mov
mov
adc
pusha
sbb
jl
test
cmpsl
shl
test
pop
pop
push
mov
iret
mov
dec
push
les
cmp
cmp
test
ficoml
inc
mov
cmp
loope
loop
pop
adc
sbb
xchg
lds
pop
rcrb
sbb
push
jbe
mov
mov
out
imul
mov
and
push
insl
lret
and
mov
fcomp
mov
pusha
ja
or
push
inc
or
fcoms
or
xor
push
insl
mov
sbb
in
addl
imul
xor
lret
shll
mov
mov
aaa
add
scas
subb
adc
xchg
shrl
mov
ja
int3
clc
xchg
sub
mov
push
xor
push
dec
stos
addb
sbb
add
mov
cmpsb
mov
jns
popa
xorb
ljmp
fld
mov
sub
xor
pusha
jecxz
jne
mov
xchg
shrl
das
mov
pop
xlat
push
popa
ss
mov
loopne
pop
dec
and
sub
mov
fidivrs
pop
sbb
xor
shr
mov
cmp
lea
sub
fs
shrb
aaa
dec
mulb
pop
sub
mov
mov
insb
ds
arpl
je
xchg
or
mov
dec
mov
mov
jne
adc
push
xchg
dec
outsb
repnz
push
adc
mov
lock
lods
pop
inc
jmp
mov
rcll
ret
ja
imul
cmc
push
mov
std
scas
imul
int
cmp
pop
movsb
stc
jmp
jnp
aaa
add
out
push
cmp
xchg
xchg
inc
mov
jb
push
divb
mov
cmpsl
mov
and
sbb
or
sub
pop
pop
into
xor
lret
push
cmp
jnp
bound
mov
sub
imul
dec
jmp
call
andb
frstor
enter
fstpt
push
jge
ficomps
mov
daa
sub
outsl
xchg
pop
push
sbb
iret
call
rcrb
shrl
popa
or
enter
mov
fsubs
sbb
jmp
xchg
mov
fneni(8087
cli
daa
pop
dec
cwtl
stc
inc
add
mov
lahf
test
ss
enter
stos
and
addr16
push
mov
in
push
lods
inc
insl
bound
out
ds
sub
mov
loop
xchg
sub
cmpsb
xchg
xchg
and
mov
orb
rcl
xchg
addb
popa
negb
cmp
jl
jmp
sbb
test
lret
xor
in
dec
das
in
into
xorl
testl
pop
lahf
cmp
out
xorl
push
adc
shlb
mov
fadds
fmuls
add
xor
add
imul
mov
xor
dec
push
faddl
mov
push
or
icebp
out
shlb
icebp
ds
or
sbb
leave
or
lret
sub
pop
xor
push
mov
pop
jns
sub
les
call
call
cmpsb
out
xor
mov
or
dec
sub
add
adc
pop
scas
xor
mov
push
pop
xchg
call
fcmove
dec
sub
xor
sbb
sub
sbb
inc
mov
adc
fldenv
pop
cmp
add
adc
fwait
mov
lds
cmp
xchg
xchg
rcr
sub
dec
sub
popl
add
fdivrs
push
hlt
inc
xchg
std
xor
dec
adc
daa
push
int
mov
in
insl
bndstx
pop
flds
or
outsl
xor
sbb
leave
ljmp
in
or
mov
test
xchg
xchg
pop
xchg
hlt
sbb
ljmp
or
xlat
and
fwait
es
in
or
cmc
push
or
xor
add
mov
fdiv
fistpl
mov
sti
push
jp
in
imul
popf
clc
xor
dec
inc
adc
mov
and
test
repnz
mov
stc
push
out
jge
push
dec
dec
cmp
or
ficomps
in
sub
test
sub
cmp
inc
mov
pop
dec
sarl
sti
dec
rcll
fldt
mov
pop
stos
xchg
rol
shl
rorb
and
ljmp
or
testl
xchg
arpl
pop
aad
jno
call
jmp
pushf
cmp
arpl
lahf
pusha
outsl
ret
nop
clc
shlb
ja
lods
shlb
mov
bound
cmpb
push
jl
inc
dec
xlat
jmp
mov
sbb
fstps
mov
mov
mov
loopne
jns
pop
push
adc
inc
shrl
add
jnp
ss
cltd
test
xlat
push
adc
cli
sub
cmc
xor
jnp
clc
xor
arpl
pushf
mov
aad
push
mov
fcompl
cmp
mov
inc
dec
push
rcrb
ret
mov
out
dec
jl
pop
pop
fimuls
fildll
mov
pop
push
mov
or
jge
or
pop
push
mov
push
dec
in
mov
lcall
fnstcw
pop
push
and
insl
fwait
loop
mov
add
aas
or
jmp
push
mov
xchg
ret
mov
and
lcall
or
imul
popl
aaa
or
je
and
sub
pop
stos
inc
mov
mov
hlt
mov
sbb
gs
out
popa
inc
jns
mov
and
enter
mov
mov
fimull
fs
cmp
ljmp
mov
fwait
jg
cli
insl
mov
add
popf
insl
adcl
mov
add
lock
adc
adc
das
xor
and
cmp
call
xchg
fcmovb
mov
xchg
mov
sub
dec
dec
sub
pop
or
cmp
and
insl
aaa
jge
xor
gs
push
and
sbb
cmp
andl
mov
push
dec
mov
dec
js
stos
push
pop
rcl
xchg
ljmp
and
add
test
jmp
jp
cmpsb
out
loope
js
into
movsl
shrb
js
jae
dec
test
or
mov
shll
icebp
daa
jnp
dec
mov
mov
fs
cmp
ret
in
lret
mov
jb
sbb
int3
cwtl
pop
cmp
shll
out
push
fstpl
scas
test
imul
testl
pop
std
and
int
inc
fcom
sbb
ja
or
xorb
int
pop
icebp
lcall
fdivrs
fidivrl
push
sub
jns
pop
aam
out
cwtl
rolb
mov
mov
push
stos
jmp
stos
fcomp
sbb
hlt
ja
push
insb
outsb
xchg
cmp
or
lds
cmpsl
mov
cwtl
out
iret
fisttpl
leave
or
lahf
ficoml
int
xchg
lock
ljmp
ljmp
cmp
popf
call
popf
adc
imul
cmp
mov
xor
filds
fdivrl
inc
shrb
dec
leave
clc
mov
pop
shrb
lds
inc
sub
ficoms
jno
pop
popa
jl
shl
popl
movsb
shrb
or
cmpsb
pmovmskb
decl
loop
mov
popa
sti
and
movsl
push
notb
aad
push
adc
pop
insl
in
mov
sbbl
adc
cmc
mov
popa
and
out
xchg
dec
and
insl
sbb
xor
jle
mov
mov
ds
insb
repnz
test
je
push
je
sbb
jb
das
hlt
sbb
ret
scas
into
push
negb
fwait
sahf
jg
repnz
bound
call
out
lahf
ret
subb
cmp
xchg
popf
dec
test
sarb
mov
and
mov
xchg
test
imul
push
lret
xor
mov
je
and
stc
ds
jl
loop
movl
inc
push
aad
jns
shlb
cmp
xchg
in
mov
in
xchg
add
decb
mov
sbb
or
jbe
das
scas
test
jae
cli
inc
inc
inc
iret
jl
rclb
nop
outsb
cli
sahf
sub
cmpsb
mov
add
jle
stc
fs
orb
ja
fcmovnbe
mov
je
jbe
mov
xchg
orl
inc
aad
lock
jno
jmp
inc
pop
shlb
inc
inc
xor
push
mov
fwait
insl
mov
ror
jge
inc
xchg
insl
scas
push
or
nop
in
add
orl
loope
jnp
pop
pop
add
mov
stos
sarb
push
xchg
adcb
lds
push
add
scas
jg
cmp
jecxz
shlb
cmp
xor
cmpsl
mov
mov
xor
fcom
adc
adc
andb
dec
out
mov
int
pop
ljmp
sarl
out
cmp
add
add
outsl
ficoml
rcll
mov
xor
movl
pop
pop
xlat
rolb
xchg
jno
xchg
inc
sbb
mov
mov
mov
pop
js
out
and
in
adc
inc
mov
add
call
cwtl
loopne
pop
icebp
pop
xchg
dec
sbb
mov
adc
movsb
scas
daa
xchg
xchg
fsubs
gs
add
out
push
xchg
aaa
mov
jge
cld
out
pop
clc
adc
iret
clc
fbld
mov
int3
sbb
xchg
adc
sub
es
das
shr
dec
cltd
addr16
inc
dec
ss
mov
push
out
rcrl
push
mov
insb
lcall
xchg
aas
orb
fs
pop
cmpsb
add
pushf
jno
fisttps
push
mov
test
pop
sub
loope
es
cmc
cmp
sub
adc
inc
sbb
out
mov
jl
mov
add
cld
movsb
mov
mov
sti
or
or
int3
add
aaa
xlat
mov
call
mov
xor
cmc
ljmp
stos
rolb
loop
fsubl
and
jp
inc
push
ljmp
repz
mov
les
jne
sub
fldt
mov
js
negl
ja
sbb
xchg
aad
outsb
jmp
xor
mov
mov
dec
out
push
and
mov
repnz
sub
andl
cmc
push
ret
popa
loopne
jg
test
das
enter
and
xchg
jg
jmp
sub
jae
data16
sub
jne
out
repnz
and
in
bound
adc
test
imul
ja
mov
pop
jge
shrl
and
sub
fidivrs
scas
ret
gs
pushf
sbb
jp
scas
in
loopne
inc
fcmovu
aas
xchg
lea
ds
mov
pop
xlat
or
outsb
push
push
pop
inc
and
lret
push
lea
xor
mov
push
mov
mov
xchg
test
cmpsb
addr16
rcl
and
lahf
mov
fidivs
xchg
and
orl
lahf
or
mov
push
xchg
inc
or
bound
push
cwtl
rcrb
inc
and
sub
ss
inc
out
hlt
sbb
mov
or
or
fs
mov
add
nop
sbb
ja
mov
add
aam
xor
ljmp
lret
in
lcall
popa
inc
mov
loopne
outsl
xchg
cltd
outsb
and
ljmp
and
inc
sahf
push
sub
scas
mov
scas
sbb
call
pop
cltd
add
scas
cmp
and
movsb
fldcw
mov
aam
lcall
mov
cmp
popf
pop
mov
insb
cld
shlb
out
in
lods
shll
fs
push
xchg
fwait
mov
xchg
stc
inc
in
mov
js
out
insl
xor
in
sar
sub
lahf
aam
mulb
int3
sub
mov
jb
stos
or
ss
jae
je
xor
push
sti
and
dec
push
ja
ljmp
aam
fsts
or
test
in
shll
dec
mov
mull
in
out
test
int
inc
arpl
cmp
pop
into
fcmovne
aas
jle
pop
pop
movsb
cli
add
mov
notb
loope
mov
jne
arpl
inc
xchg
mov
inc
lcall
and
sarb
xor
aas
test
sub
insb
mov
jae
aam
mov
mov
cld
pop
mov
sub
xor
loop
jno
xorb
pop
sub
xor
inc
jecxz
sub
inc
xchg
xchg
shll
repnz
insb
cmc
fbld
jne
xchg
or
mov
mov
lock
xor
inc
add
nop
inc
push
fcomps
ljmp
pop
int
dec
call
add
or
sahf
pop
xor
sbb
sbb
xor
addr16
out
mov
adc
xchg
cmp
out
mov
jmp
cs
xor
pop
pop
arpl
xor
and
or
int3
repnz
cmc
fs
xchg
mov
sub
push
scas
pop
jnp
push
cmpsl
mov
mov
jns
and
sbb
mov
stos
mov
in
movl
mov
sub
movsb
int3
pop
xchg
mov
inc
scas
insb
lahf
pop
rcll
and
inc
push
in
mov
clts
jae
shlb
or
fs
dec
xchg
and
pop
xchg
sub
mov
sbb
stos
in
jp
and
push
jecxz
xchg
pushf
shll
fs
in
insb
dec
inc
xchg
cs
fdivr
sbb
sub
dec
jb
loopne
sub
test
or
cmc
dec
shll
inc
push
mov
dec
sub
bnd
sti
or
out
scas
inc
add
pop
pusha
push
out
jmp
xchg
pop
or
subb
stc
add
fdivrs
cs
out
jns
test
add
xlat
inc
sahf
sbb
in
sbb
outsb
sbb
roll
cmp
roll
int
scas
repz
lret
dec
add
inc
xchg
xchg
sbb
sub
rclb
scas
mov
add
xchg
stc
iret
add
out
add
pop
outsb
mov
roll
sub
sub
push
sar
jmp
loope
punpckhwd
jecxz
inc
dec
cmpb
or
add
dec
inc
lock
add
out
js
pop
mov
daa
cmp
aad
lret
clc
cmp
test
mov
fcomi
mov
add
int3
add
mov
ss
sahf
inc
aaa
into
dec
jns
popf
mov
sub
mov
addr16
mov
and
jns
loop
rcl
and
hlt
mov
lahf
sbb
jne
cli
clc
sarl
and
pop
sub
xchg
push
dec
cmp
xchg
adc
scas
sub
jne
rcr
mov
call
cmc
mov
xor
or
bswap
cmpl
inc
pop
mov
pop
mov
inc
loope
cmp
mov
and
stc
sbb
idivl
cmp
loope
jno
fs
out
xlat
jne
fmuls
ds
mov
rorl
aaa
cmpsb
cltd
scas
ret
mov
push
xchg
push
inc
push
out
mov
pop
pop
cmc
daa
in
sub
gs
imul
pop
xchg
pop
je
push
add
mov
cmpsl
mov
daa
ret
cltd
lea
add
lahf
dec
xor
dec
cs
lods
out
push
mov
loope
imul
adc
dec
stos
cmpsl
addl
fnstcw
mov
sbb
test
popf
ret
jp
push
add
xlat
std
cvttps2pi
push
pop
xchg
xor
mov
scas
xor
push
jp
icebp
inc
sub
mov
xchg
xorb
daa
lock
mov
sbb
test
mov
std
sbb
sbb
push
cld
hlt
insl
cltd
add
repz
sub
pop
push
or
shl
sub
pop
jl
cmp
sti
lods
dec
inc
std
pushf
outsb
mov
jns
pop
mov
and
clc
movsb
addr16
rcr
mov
jns
ret
push
mov
stos
or
cmc
mov
sub
neg
or
xor
pop
jb
stos
jl
dec
cmp
fadd
push
in
in
js
cld
jo
xchg
sahf
xchg
mov
inc
insl
ret
push
mov
or
mov
loop
xor
fadd
fcoml
inc
add
scas
jg
outsl
cmp
fwait
das
cltd
in
adc
sarb
cs
push
or
jne
mov
je
and
stos
insl
xchg
xchg
dec
shll
mov
ficoms
jecxz
rolb
adcl
inc
push
out
sbb
je
daa
in
inc
jle
fistpll
pop
jo
cmp
aaa
mov
repnz
shll
cmp
test
dec
sbbl
outsl
push
sub
mov
aad
inc
scas
cwtl
in
out
xor
pushf
sub
out
in
cmpsb
jne
lds
lods
jbe
lock
in
imul
push
xchg
lea
pusha
sbb
jg
iret
inc
ja
mov
cmc
dec
ds
and
cs
xchg
mov
icebp
pusha
jecxz
lcall
inc
movsl
jnp
ja
cmp
lds
pop
roll
in
loop
add
push
pushf
inc
cmp
test
push
data16
pop
popa
xchg
ss
cs
imul
loop
push
and
fs
ja
mov
push
jecxz
mov
fs
sbb
pusha
add
cltd
mov
pusha
mov
loope
push
mov
mov
andl
jp
or
mov
js
jge
mov
add
loopne
pop
push
sbb
inc
jge
xchg
cmp
aaa
sbb
mov
mov
sti
push
push
mov
cmpsl
shlb
imul
push
mov
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
.byte
inc
stc
outsl
adc
hlt
xchg
sti
add
push
xor
out
mov
fsubrl
push
lods
test
push
mov
mov
cmpsb
dec
test
lret
lods
cmpsl
fdivrs
sbb
test
out
in
test
out
jbe
in
or
xor
aam
repnz
xchg
mov
jns
sub
inc
jns
mov
insl
mov
scas
cltd
shlb
in
jg
push
and
ja
test
andnps
mov
xlat
adc
cmc
ss
pusha
out
inc
lds
ret
mov
cmp
jo
adc
xlat
pop
mov
int3
mov
scas
cmp
sti
pop
jns
cmp
rorl
arpl
in
pop
scas
fildl
data16
dec
sti
push
loopne
sbb
ljmp
aas
cmp
adc
stos
loop
mov
sbb
xor
pop
jp
das
mov
scas
shrl
and
movsb
flds
or
sbb
or
jge
push
xchg
and
fildl
or
add
and
or
jp
jecxz
movsl
ss
mov
bnd
les
sarl
jecxz
repnz
lcall
xchg
pause
loope
lcall
dec
pop
fs
jne
rcll
or
xchg
xchg
jmp
jnp
sbbb
leave
cmp
adc
rclb
loop
pop
test
pop
cmp
cmp
xchg
movsb
push
out
mov
rol
adc
xor
outsl
xor
es
add
cli
shlb
repz
movsl
test
cmp
shlb
cld
fisubl
jg
or
xlat
push
jl
cltd
and
pop
cmp
fildl
dec
cs
in
jbe
add
icebp
or
test
test
fnstcw
xchg
lret
iret
test
enter
lcall
ret
out
dec
add
jmp
sbb
xchg
push
and
lret
ljmp
jp
sbb
push
jmp
scas
ljmp
xchg
int3
clc
adc
add
loop
into
or
pop
mov
scas
pushf
mov
insb
imul
imul
shll
cmpsl
mov
sub
sub
in
nop
cmpsb
loopne
dec
jge
sub
xchg
sbbl
daa
or
or
and
ret
cmc
jbe
jmp
pop
aas
and
mov
cltd
in
leave
mov
mov
inc
mov
pop
adc
je
mov
cmc
rcl
clc
and
jp
mov
push
mov
sbbb
das
sub
clc
mov
xchg
sbb
lea
inc
cmpsb
incb
cmpsl
inc
mov
xor
xor
fcomp
push
stc
sub
cmp
fistpl
sub
decb
in
lock
xchg
dec
mov
jmp
aas
mov
and
dec
cmp
sbb
xorb
mov
outsb
inc
pop
aaa
adc
repz
cld
pushl
lock
hlt
cmc
ljmp
je
sti
cmp
push
ja
cltd
dec
jae
sti
addr16
push
sarb
or
sub
add
xlat
mov
mov
fidivrs
stos
and
test
push
jb
jnp
mov
cld
cwtl
stos
push
int
ss
xor
add
and
push
cmp
sbb
xor
sub
or
insl
ljmp
shlb
sbb
add
cmp
push
sbb
stos
and
popa
push
push
not
pop
shl
mov
or
aad
stos
sbb
sbb
outsb
cmp
pop
jne,pt
add
in
iret
push
jmp
dec
dec
xchg
andl
arpl
jno
mov
push
push
fsubrs
ja
inc
xor
push
std
or
mov
jp
pop
mov
xchg
push
repz
icebp
push
or
dec
incb
inc
aam
xorl
icebp
or
xlat
mov
xor
mov
xchg
scas
out
jmp
dec
add
jl
push
dec
mov
sti
jmp
mov
xchg
push
inc
std
cmp
leave
jmp
int3
xchg
lahf
fsubl
shll
or
andb
dec
icebp
add
jae
and
test
pop
lret
inc
push
adc
out
addr16
ret
inc
incb
sub
movsb
adc
enter
into
push
jl
scas
pop
imul
mov
cmc
loop
add
xlat
sbb
js
xchg
pop
jb
mov
loop
ret
adc
cli
hlt
mov
jne
or
movsl
cmp
insb
add
mov
popl
lods
inc
sbb
fdivrl
sub
inc
and
in
test
cmp
cmp
adc
or
test
outsl
lea
dec
add
cli
idivb
sbb
fsubp
dec
xorl
pushl
int
dec
xorl
and
push
adc
ljmp
or
stc
aaa
adcl
stos
push
jg
or
push
xchg
pushf
mov
cmp
xchg
mov
inc
adc
xchg
clc
mov
mov
fsubs
inc
xor
mov
xchg
sbb
lret
adc
sub
xor
inc
and
mov
add
sbb
xchg
lcall
repz
arpl
sbb
stc
jle
add
fnstsw
sbb
outsb
xor
sbb
push
dec
fucomip
stos
mov
xchg
or
orb
jb
xchg
mov
xchg
add
pop
mov
jbe
jp
mov
xchg
cwtl
adc
loop
mov
and
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
jecxz
pop
lods
data16
.byte
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
lea
push
call
andl
pushl
pushl
mov
call
orl
call
mov
mov
pop
pop
pop
leave
ret
mov
add
push
call
ret
push
mov
mov
push
test
je
mov
test
jne
xor
jmp
cmpb
jne
xor
cmp
sete
jmp
push
push
mov
mov
mov
mov
cmp
jne
test
je
mov
mov
cmp
jne
inc
inc
inc
inc
test
jne
xor
jmp
sbb
sbb
pop
pop
test
jne
mov
push
push
call
pop
pop
pop
pop
ret
push
mov
push
mov
push
mov
mov
push
test
je
movsbl
movsbl
inc
cmp
je
cmp
je
push
call
mov
push
mov
call
pop
pop
mov
cmp
jne
jmp
test
je
mov
inc
test
jne
xor
cmp
sete
pop
pop
pop
pop
ret
xor
jmp
xor
cmpb
je
inc
cmpb
jne
test
jl
add
push
push
call
pop
test
pop
jne
dec
dec
test
jge
jmp
push
pop
jmp
push
mov
sub
push
cmpl
jne
andl
xor
lea
stos
stos
stos
stos
stos
lea
push
push
pushl
call
lea
push
pushl
call
pushl
call
mov
pushl
pushl
call
mov
push
push
push
pushl
pushl
pushl
push
push
pushl
call
pushl
pushl
call
pushl
call
lea
push
pushl
call
xor
jmp
pushl
pushl
pushl
pushl
call
pop
leave
ret
push
mov
push
andl
lea
push
pushl
call
call
cmp
jne
mov
cmp
je
pushl
call
andl
pushl
call
pushl
call
xor
jmp
push
pop
leave
ret
push
mov
sub
push
mov
mov
andl
xor
lea
stos
stos
stos
stos
stos
lea
push
push
pushl
call
movl
movl
movl
push
call
mov
push
call
push
call
mov
push
call
mov
mov
sub
cltd
sub
sar
mov
mov
sub
cltd
sub
sar
mov
mov
add
mov
mov
add
mov
movl
push
push
pushl
lea
push
call
push
push
push
push
mov
sub
push
mov
sub
push
pushl
pushl
pushl
push
push
push
call
mov
mov
mov
push
push
pushl
lea
push
call
test
je
mov
cmp
jne
cmpl
jne
jmp
lea
push
call
lea
push
call
jmp
push
call
andl
jmp
mov
inc
mov
cmpl
jge
push
push
call
cmpl
jne
jmp
push
call
jmp
pushl
call
xor
pop
leave
ret
push
mov
push
push
push
lea
push
push
push
push
call
test
je
pushl
call
pop
mov
cmpl
je
push
push
pushl
push
push
push
call
push
call
push
pushl
call
leave
ret
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
inc
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
int3
int3
int3
int3
push
mov
push
mov
xor
or
repnz
inc
neg
dec
mov
std
repnz
inc
cmp
je
xor
jmp
mov
cld
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
dec
dec
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
cmpl
push
push
push
jne
mov
cmp
jl
cmp
jg
add
jmp
mov
mov
push
cmp
pop
jge
cmp
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
jne
mov
jmp
mov
mov
sar
movzbl
testb
je
andb
push
mov
mov
pop
jmp
andb
mov
mov
push
push
lea
push
push
push
lea
push
push
pushl
call
add
test
je
cmp
jne
movzbl
jmp
movzbl
movzbl
shl
or
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
push
push
xor
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
dec
jne
neg
neg
sbb
pop
pop
pop
ret
push
push
push
push
mov
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
movzbl
mov
mov
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
lea
lea
movzbl
inc
jmp
cmp
mov
jne
neg
pop
pop
pop
pop
ret
pushl
call
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
mov
lea
cmp
ja
mov
movzwl
jmp
mov
push
mov
sar
movzbl
testb
pop
je
andb
mov
mov
push
jmp
andb
mov
push
pop
lea
push
push
push
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
push
mov
mov
push
push
mov
mov
and
shr
test
jne
push
pop
jmp
cmpl
jbe
push
mov
cmp
jae
mov
sub
cmp
jl
mov
shr
mov
neg
shl
add
movzbl
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
add
add
dec
jne
test
je
movzbl
add
inc
add
dec
jne
mov
mov
xor
mov
div
mov
mov
xor
div
cmpl
mov
ja
pop
mov
shl
or
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
movl
jmp
mov
add
mov
cmpl
jge
mov
add
movb
jmp
movl
movl
mov
shr
mov
mov
and
test
jne
mov
call
mov
cmpl
jne
jmp
mov
or
mov
mov
and
test
je
mov
call
mov
cmpl
jne
jmp
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
mov
call
mov
cmpl
jne
jmp
mov
call
mov
cmpl
jne
jmp
mov
and
shl
mov
or
mov
mov
and
add
mov
movl
jmp
mov
add
mov
mov
cmp
jg
mov
add
and
mov
xor
mov
mov
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
jmp
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
mov
cmp
jb
or
jmp
mov
mov
mov
mov
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
push
mov
sub
mov
mov
mov
mov
mov
cmp
jb
jmp
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
call
mov
push
push
call
mov
mov
sub
mov
mov
sub
mov
movl
movl
movl
movl
mov
mov
imul
mov
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
ja
mov
cmp
jae
mov
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
call
push
call
mov
cmpl
jne
push
push
push
push
call
push
mov
push
call
mov
push
mov
push
call
mov
cmpl
jne
push
push
push
push
call
call
mov
movl
movl
movl
mov
mov
imul
mov
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
jae
mov
cmp
jae
mov
mov
mov
mov
mov
add
and
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
mov
push
mov
push
call
mov
push
call
mov
push
call
push
call
call
push
call
add
mov
cmpl
je
mov
call
mov
jmp
movl
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
pop
pop
mov
pop
ret
int3
int3
int3
call
pop
call
pop
mov
popa
pop
pop
call
call
int3
int3
int3
int3
int3
int3
daa
dec
inc
push
inc
dec
push
inc
dec
dec
push
inc
dec
inc
inc
daa
or
add
je,pn
js
add
add
pop
add
add
add
add
add
and
add
jb
popa
je
add
pusha
pop
add
add
add
adc
add
cmpsb
add
inc
add
inc
cs
je
add
add
or
add
add
add
add
inc
add
shrb
fs
je
add
test
add
add
push
add
or
add
add
inc
add
shrb
gs
outsl
arpl
add
add
add
sldt
add
add
add
je
js
add
add
add
add
add
mov
add
add
inc
add
loopne
jb
popa
je
add
cmp
adc
add
add
add
add
inc
add
loopne
fs
je
add
add
jo
add
adcb
add
add
testb
inc
add
loopne
add
xor
xor
call
pusha
call
testb
xor
pop
pop
lods
push
inc
fmull
mov
xor
jnp
faddl
fiaddl
iret
sub
sub
xchg
pushf
cmp
pop
xchg
mov
sbb
mov
sbb
jmp
jmp
jmp
call
jle
add
notb
test
cmp
jl
loopne
cltd
xor
push
push
loopne
push
mov
add
lahf
pop
movsb
jecxz
mov
mov
sub
push
jle
push
mov
and
sahf
cld
enter
adc
fadd
inc
jmp
mov
jge
ret
aad
adc
pop
add
dec
in
fdiv
stos
mov
inc
mov
xorl
xlat
call
dec
data16
jno
cld
mov
mov
mov
fwait
mov
push
sbb
dec
xchg
inc
mov
push
iret
daa
xchg
js
mov
call
dec
mov
subb
lcall
jecxz
push
dec
hlt
jecxz
ja
sbb
mov
dec
pop
rcr
cmp
ja
outsb
repz
rorl
mov
mov
mov
inc
or
xchg
add
dec
add
push
pushf
push
ret
xchg
daa
jmp
sub
inc
xchg
repnz
test
mov
sti
jae
jns
mov
lods
sahf
dec
cmp
pop
pop
lea
jl
push
sub
xchg
shlb
imulb
test
or
or
cmpsb
jg
push
aam
outsb
xor
or
push
or
in
sub
lret
fidivl
jb
jecxz
outsb
mov
fmull
popa
cmp
xchg
fcoml
mov
inc
shll
aaa
adc
mov
push
andb
ljmp
mov
test
fs
mov
sub
add
push
lahf
push
cwtl
mov
sub
stos
sbb
sub
cltd
int
cmc
add
or
fistpll
sahf
lret
mov
jbe
adc
jmp
cmc
mov
fwait
adc
dec
inc
jno
jno
movsb
arpl
addr16
dec
jbe
pop
inc
jg
or
jg
fidivl
icebp
add
lds
sbb
lret
mov
fistps
or
xor
fwait
jecxz
pop
inc
and
mov
sbb
ja
test
xchg
xor
cmp
ds
sbb
xlat
pop
sbb
sub
out
xchg
scas
test
dec
out
mov
push
adc
jbe
rcll
sbb
xchg
fmuls
add
aad
jbe
aad
out
inc
add
popa
nop
or
or
lock
fs
clc
cld
pop
rorb
imul
jmp
mov
jle
into
enter
in
cs
adc
sub
stc
popa
outsb
nop
es
outsl
xchg
fcomps
out
in
inc
mov
ret
mov
testb
icebp
shl
pushw
dec
ja
bnd
test
push
push
inc
sub
adc
or
dec
mov
xchg
stos
jno
mov
clc
test
inc
inc
cmp
cld
mov
dec
add
add
dec
or
push
fisubs
ret
pusha
out
cmpsb
popa
notb
lcall
aaa
dec
jo
stos
jae
lea
pop
push
js
rclb
inc
int3
sbb
or
or
mov
loope
pop
pop
sbb
out
loopne
or
lcall
aaa
sahf
mov
and
dec
xchg
in
cmpb
mov
mov
sub
add
vmovd
xor
mov
sbb
insb
jae
sbb
xchg
cmpsl
call
or
push
hlt
aam
popa
pop
jg
sahf
subb
in
lret
insb
jae
das
mov
push
or
ss
addr16
outsb
or
push
push
fdivs
aad
aaa
lahf
js
pop
mov
dec
inc
lea
sbb
mov
xchg
mov
in
mov
add
push
leave
rorb
mov
cmpsb
jbe
push
pushf
or
jb
les
xchg
cmp
je
mov
insb
bound
sub
jns
in
mov
push
ss
jo
aaa
ficoms
sub
nop
add
push
insl
incl
insl
cmp
and
hlt
inc
cmpsl
popf
cmp
cmpsb
pop
into
pop
outsl
mov
or
sbb
mov
testl
inc
arpl
push
loop
bound
pop
mov
in
mov
push
sbb
and
push
xchg
sub
push
mov
xchg
repz
or
jle
pop
xchg
pusha
ljmp
mov
adc
clc
jbe
pop
in
xchg
or
lret
dec
cmp
mov
rcrb
mov
mov
hlt
aam
adc
xor
cmpsb
mov
nop
jp
insl
divb
int
dec
xchg
push
int3
xor
sub
repz
jne
xchg
lret
leave
inc
imul
cmc
adc
stos
sub
cs
dec
jmp
sub
js
mov
push
pop
mov
inc
gs
repnz
andb
cld
in
pop
push
cli
fbld
cmp
and
mov
cmc
je
add
aam
pushf
fs
ret
dec
cmp
enter
fldenv
lret
jne
xor
add
inc
adc
mov
dec
dec
and
mov
jb
rorl
push
hlt
push
xor
pop
xchg
or
dec
popf
cmc
subl
sahf
pushf
xchg
into
jge
sbbl
mov
cmp
jl
ret
inc
and
out
mov
adc
int3
insl
sub
std
test
adc
cs
push
xchg
idiv
sbbl
mov
adc
shlb
add
jbe
inc
andl
or
dec
mull
mov
jbe
or
aad
ret
cmpsl
pop
xchg
add
pop
xchg
leave
repz
pusha
out
and
test
popf
adc
enter
lret
mov
rcrl
jge
jns
xlat
lcall
aas
add
xor
mov
repnz
je
andb
mov
leave
push
inc
loopne
cmp
adc
lds
popl
sbb
aas
in
jnp
add
lret
mov
sbb
mov
int
out
out
inc
push
push
adc
popl
mov
stos
cmp
jle
rorb
xor
fldenv
xchg
cmp
add
ret
pop
sbb
ret
divb
out
ret
mov
mov
in
ja
or
adc
stos
jg
fstpt
pop
pop
xor
movsb
push
shlb
in
adc
add
jns
cld
popa
push
jecxz
out
cltd
sub
mov
mov
add
jg
or
iret
mov
dec
cmp
mov
mov
test
jae
inc
and
stos
inc
push
ret
rcr
ret
and
fisubrl
add
cmp
adc
cs
xor
mov
adc
push
insb
mov
stos
test
cmp
movb
rorb
fmull
cmp
and
mov
out
or
je
pusha
inc
and
orb
mov
add
dec
and
loope
or
outsl
movsb
xor
out
xchg
lcall
or
test
fcomip
icebp
ret
jl
lahf
cs
lahf
pushf
cwtl
aas
movsb
idivb
or
int3
lea
add
lahf
pop
fdiv
and
dec
add
mov
mov
loop
jp
jae
or
add
pop
ficomps
mov
jno
pop
jnp
pop
out
lahf
pusha
loop
or
and
es
adc
cmc
rolb
mov
orb
push
and
adc
sbb
movsb
addr16
aam
fisttps
and
xor
sbb
and
mov
fnclex
xchg
lods
lret
mov
pop
mov
mov
scas
mov
ret
scas
or
jmp
sbb
pop
jmp
in
xchg
lock
pop
cmp
test
xchg
adc
out
adc
mov
xchg
aas
movsb
adc
mov
add
dec
add
lret
mov
fmul
add
test
fldenv
bound
push
arpl
sbb
add
inc
sar
in
cmpl
sbb
sbb
dec
sbb
out
lret
jmp
incb
cwtl
movsl
pop
movsl
js
push
dec
xchg
into
ret
jle
nop
inc
stos
push
aas
out
push
push
or
add
rcr
pop
test
adc
cmpsl
or
adc
loopne
mov
sar
sub
mov
xchg
pop
or
fstl
inc
inc
ds
int3
nop
dec
jne
pusha
add
aas
add
jo
test
and
clc
push
in
mov
arpl
mov
mov
cmp
pop
rcl
repz
xor
aaa
cltd
icebp
lds
inc
mov
imul
xchg
cwtl
xor
push
cs
inc
iret
xchg
out
iret
loop
adc
stos
fsts
pop
xor
repnz
cli
fistps
inc
xchg
mov
jnp
cwtl
or
inc
mov
mulb
clc
sub
mov
adc
ds
pop
aaa
int3
mov
mov
lahf
cmpsb
adc
xlat
data16
daa
push
ret
pop
cld
sahf
movsb
cmp
pushf
jns
jns
lock
add
in
fsubrs
daa
and
sti
data16
or
stc
adc
inc
pop
push
bound
ret
jne
hlt
clc
lret
rcrb
add
add
iret
push
scas
ja
enter
dec
imul
or
cltd
rcrb
les
ss
push
enter
inc
gs
mov
das
xor
xor
sub
ret
push
jno
insl
sub
lahf
loope
and
push
pop
pop
mov
mov
mov
push
xchg
sbb
jne
or
repnz
pop
repnz
lret
out
fcmovne
fsubl
pop
dec
dec
popa
mov
pop
loope
aas
mov
mov
lret
mov
jne
in
adc
pop
imul
add
and
dec
insl
data16
dec
pushf
mov
dec
pop
orl
xchg
xchg
dec
pop
dec
xchg
jnp
lock
push
das
notb
or
jge
push
add
pop
faddl
sbb
inc
mov
push
adc
mov
dec
mov
jno
js
xor
push
jns
lahf
addr16
outsl
imul
dec
daa
inc
xor
sbb
hlt
ret
cmc
loop
nop
xor
in
neg
test
jns
push
adc
jg
inc
sbb
hlt
pop
mov
loopne
roll
push
dec
mov
sbb
neg
jmp
popf
xor
sahf
cltd
adc
sbb
mov
push
fmull
outsb
pop
push
push
adc
add
add
es
inc
jge
imul
fisubrs
mov
popa
add
aas
arpl
ret
in
testl
pop
xchg
sahf
cwtl
ss
push
jne
imul
or
daa
dec
lods
rcrl
and
inc
data16
jne
pop
pop
mov
mov
pop
mov
loope
rorb
iret
dec
frstor
push
testb
jns
mov
ret
shlb
sub
mov
mov
dec
pop
sbb
fisttps
shrl
adc
adc
repnz
cwtl
mov
inc
mov
jecxz
scas
sahf
xor
inc
or
fwait
inc
fisubs
pusha
rcrl
jns
push
mov
xor
lea
dec
xchg
popf
xchg
cld
adc
aaa
test
decb
icebp
int
loope
imul
stos
out
adc
mov
leave
dec
aam
sub
outsl
jnp
ja
stos
loop
jmp
insb
and
adc
loopne
shll
ja
sub
in
dec
inc
xor
loope
add
ljmp
repnz
fists
int
push
mov
jge
lret
jnp
inc
cmpsl
std
jns
sub
dec
clc
rcrl
shr
push
test
ja
adcb
scas
xchg
lods
loope
inc
pusha
fs
cmp
jmp
dec
sti
pop
push
sub
test
divl
rolb
sbb
insl
dec
iret
movsb
and
mov
pop
repz
xchg
mov
data16
loopne
mov
inc
push
fs
push
mov
sbb
fstpl
repnz
std
test
push
and
xor
jo
ret
sbb
and
inc
cmp
scas
loopne
cmp
cmpsb
add
cmp
add
jge
andl
rcrl
hlt
push
sbb
pop
inc
arpl
clc
call
dec
jp
mov
stc
jmp
sub
imul
mov
xchg
mov
pop
subl
in
xchg
mov
test
mov
dec
loopne
pop
mov
ljmp
out
mov
or
imul
sbb
jb
in
rolb
cli
mov
jae
or
lds
ret
in
dec
ljmp
mov
fwait
adc
adc
loopne
jecxz
mov
out
add
xor
pop
cmp
andl
out
enter
scas
aaa
in
aas
pop
mov
popl
lcall
push
out
pushl
fstpl
lods
sbb
in
outsl
nop
cltd
or
in
jge
add
in
xchg
push
xlat
cli
dec
stos
rol
pusha
lods
sub
mov
inc
aam
add
lea
mov
jne
cmp
outsl
and
push
pop
push
lods
les
gs
dec
push
fidivs
fidivs
cmpsb
popa
sub
mov
cmpsb
mov
push
or
pusha
adc
shl
pop
xchg
xchg
arpl
idivl
pop
pop
push
insl
cmp
xorl
shr
xor
mov
adc
aas
ds
insl
dec
fcoml
adc
dec
xchg
jecxz
cwtl
push
push
ss
push
or
adc
adc
lock
addl
push
jb
aaa
add
adc
inc
outsl
lret
hlt
loopne
mov
push
pop
mov
rcll
cmp
rorl
push
rcrl
outsl
into
out
mov
sbb
and
icebp
jmp
push
pushf
mov
roll
scas
inc
mov
lds
hlt
jecxz
adc
outsb
and
add
cmp
movsl
xchg
mov
xor
cld
cmp
shll
adc
jl
add
loopne
out
push
xor
aas
cmpsl
xchg
dec
adc
push
mov
test
lock
mov
add
fiadds
sbb
popf
lock
pop
repz
outsl
cli
add
sbb
fistpll
scas
pushf
daa
stos
pop
pop
push
pusha
lods
icebp
ja
movl
dec
ss
push
push
leave
in
cmc
fldl
cs
popa
sti
mov
mov
jge
lock
adc
insl
pusha
dec
pop
xchg
jae
mov
movsl
outsb
sbb
jns
test
mov
mov
sbb
mov
call
ss
jb
push
je,pn
mov
das
inc
xchg
cmp
cwtl
jp
or
push
cs
jmp
sub
push
mov
xchg
xor
add
add
rcl
aad
fldt
cld
scas
or
mov
dec
dec
mov
pop
js
or
gs
scas
aaa
sub
mov
imul
fcoms
inc
es
sbb
and
add
inc
pop
jge
jo
loope
insb
cmp
mov
cmp
fisubrl
hlt
subl
mov
bound
dec
lods
adc
jp
lods
and
xchg
adc
addr16
lods
fs
mov
lods
cmp
sbb
sub
push
xor
fldcw
sub
lods
js
test
lods
imul
sahf
adc
push
cmp
push
imul
dec
inc
fmulp
int
mov
and
repz
jne
xchg
adc
les
stos
cmpsl
sbb
inc
push
leave
xchg
pusha
and
jge
insl
xor
mov
repz
mov
or
insl
out
into
xchg
cmc
fnstcw
mov
bound
adc
movsb
rorb
dec
sub
sub
clc
daa
fists
lahf
rorl
xlat
mov
dec
bound
pop
mov
mov
adc
mov
mov
hlt
cmp
jnp
push
aam
sbb
cmp
subb
out
mov
dec
sub
xchg
adc
pop
enter
js
imul
sub
dec
inc
mov
jno
cmp
mov
jle
xchg
mov
out
mov
inc
xor
jmp
movsb
es
push
je
dec
gs
std
sub
pop
ss
jle
rep
sbb
lea
test
fs
and
jae
call
negb
test
ja
repnz
mov
add
ret
nop
mov
fisubs
inc
test
inc
jp
mov
daa
mov
mov
dec
test
int3
adc
xchg
negl
mov
roll
ljmp
mov
sbbb
shrl
and
xor
in
mov
xor
and
mov
push
in
mov
push
fcomi
cmp
jbe
mov
sub
push
cmpsl
inc
lahf
dec
xchg
adc
sbb
inc
inc
push
mov
or
mov
mov
lock
inc
out
pop
sbb
adcb
inc
jle
mov
push
cmp
inc
add
js
aam
push
pop
in
lret
sub
mov
int3
or
xchg
test
sub
jns
push
lds
mov
addr16
sbbl
sub
mov
jo
mov
lods
cld
pop
adc
jle
lods
sbb
add
notl
int
sub
pop
inc
test
ds
sti
mov
popf
and
mov
xor
push
in
insl
dec
fdivs
stc
loopne
sbb
pop
ds
xor
push
std
pop
push
push
stos
sub
ljmp
ja
push
pop
sbb
cli
mov
push
loop
enter
pop
xchg
lock
dec
das
pop
dec
mov
adc
lods
pop
fucomp
mov
stc
adc
ds
mov
lea
cmpsl
mov
int
cmp
pop
fisubrl
or
push
xchg
adc
mov
push
test
add
loop
xchg
pop
test
ss
outsb
add
inc
mov
or
ds
jae
cmpsb
add
leave
mov
shrb
cmp
push
xchg
frstor
jecxz
test
call
mov
or
sbb
cwtl
mov
sbb
mov
cld
cmp
lcall
outsl
mov
cmp
add
or
int
mov
out
rolb
xchg
mov
xorl
lods
jmp
testb
lret
in
icebp
and
inc
push
sbb
push
cmp
mov
imul
xchg
inc
leave
in
popa
in
pop
inc
fwait
pop
xor
sti
xchg
stos
test
jecxz
xlat
call
xchg
mov
test
addr16
fcompl
in
mov
stos
ja
sbb
ljmp
dec
jbe
hlt
adc
push
mov
mov
dec
jge
loope
ds
aad
fnstsw
sti
adc
sub
xor
ret
add
icebp
lret
lahf
mov
push
shlb
push
add
pop
add
fsubrs
je
ja
shlb
lods
pushf
mov
mov
sub
cmp
mov
dec
pop
ja
int
mov
inc
movsb
mov
mov
iret
cmp
cli
jp
fs
in
push
push
pop
mov
jmp
push
hlt
int3
mov
mov
push
cmc
inc
pop
pop
popa
pop
mov
dec
pop
sub
mov
fs
repnz
sbb
lock
push
outsl
cli
addl
xchg
pop
enter
cwtl
leave
push
pop
jp
dec
and
or
push
test
cli
pop
sti
mov
popa
sbb
mov
fwait
cmp
pop
les
fcomps
inc
popa
pop
mull
or
sti
movsb
sarl
mov
lret
and
and
mov
inc
pop
push
pop
inc
jg
imul
fimull
insb
xchg
xor
mov
hlt
in
jno
in
outsb
xchg
mov
sarl
stos
cmp
mov
icebp
sbb
shll
inc
test
js
jae
fcompl
jl
push
dec
pop
outsl
mov
aaa
sbb
or
outsl
xor
inc
xchg
fwait
iret
div
mov
ret
outsb
das
dec
rcrl
and
cmp
rol
outsb
inc
cmp
loope
adc
pop
or
jecxz
fildll
xor
cmpb
je
aas
sbb
imul
dec
ja
lcall
pop
addr16
je
out
jne
xchg
dec
or
or
inc
lods
push
out
add
sub
jp
or
shlb
into
xchg
and
xchg
xor
fistps
mov
xchg
add
mov
icebp
xchg
leave
outsb
mov
fmull
mov
out
mov
inc
push
daa
fwait
test
mov
cli
fcomi
in
xchg
outsl
cmc
scas
mov
push
push
out
push
test
cs
stc
jg
jmp
jne
fsubs
push
adc
dec
xchg
lret
leave
fmuls
and
outsl
push
scas
xchg
push
dec
sbb
adc
loope
aam
adc
stos
adc
enter
mov
and
jae
std
sub
inc
cmp
shl
pop
ljmp
stos
mov
mov
in
adc
adc
adc
in
rorl
inc
mov
sub
into
test
adcb
inc
lods
xchg
daa
sub
icebp
adc
scas
hlt
push
jmp
mov
hlt
mov
hlt
rcl
sub
xchg
mov
mov
jg
xchg
in
into
movsl
or
pop
hlt
scas
or
and
push
xchg
sub
int3
lcall
add
add
fcomps
push
inc
rorb
xchg
mov
push
cmp
addr16
addr16
cwtl
int3
lock
pop
aaa
mov
cmpsl
cs
and
jecxz
fs
xor
ret
sbb
mov
movsb
jbe
cmp
cltd
fdivs
ret
inc
sub
mov
push
lea
es
xor
and
mov
stos
dec
dec
mov
ja
out
cld
push
outsl
fisttpl
imul
out
rorb
rcrl
addl
insb
jne
adc
lcall
cs
ret
jns
push
inc
outsl
lods
lcall
xor
lahf
mov
mov
hlt
aas
sbb
cld
mov
loopne
icebp
pop
add
cmp
jno
lea
add
fwait
mov
mov
stos
lea
pop
mov
add
push
adc
and
and
inc
mov
gs
rorl
pop
pop
outsb
sub
xor
mov
pop
push
dec
imul
xor
add
cmpsb
imul
loope
jno
add
movsl
mov
jo
mov
daa
mov
dec
ljmp
xor
dec
sbb
mov
cmc
lahf
stos
push
or
push
test
pop
mov
and
pop
jo
cli
fwait
adc
or
ret
pop
xchg
jl
inc
jne
mov
cmp
sub
inc
sub
pop
mov
pop
dec
lods
mov
imul
jbe
enter
dec
fcompl
sti
insb
jmp
sbb
mov
stos
mov
xchg
xchg
push
rorl
mov
sbb
xlat
jg
lret
sbb
popa
imul
pop
aad
push
aam
js
sbb
outsb
loope
xchg
aam
jnp
fcomps
mov
lcall
fildl
ljmp
mov
cmp
jae
pop
mov
xorl
pop
cs
cltd
and
push
mov
loope
mov
dec
adc
loop
push
xchg
div
sbb
pop
scas
dec
mov
fldenv
stos
dec
fdivrl
sbb
testb
popa
aam
mov
jb
mov
mov
sbb
mov
xchg
mov
mov
xchg
mov
addr16
daa
call
subb
lock
ds
sbb
or
stc
mov
dec
pop
sbb
iret
mov
adc
mov
pop
push
mov
jns
xchg
cli
mov
lds
stc
sub
push
pop
mov
push
dec
jne
adc
add
cmp
push
test
in
inc
add
and
mov
js
in
cmp
cmp
xor
push
mov
fldenv
mov
lahf
test
mov
aaa
push
xchg
les
popa
jns
cltd
or
sub
out
rcrl
inc
sbb
fwait
insl
dec
xor
or
pop
test
mov
fimuls
pop
mov
lock
push
les
pop
aam
fbstp
cli
sbb
cmpsb
sub
sbb
push
dec
mov
sahf
adc
std
loope
sub
loope
push
jecxz
xor
add
ret
aaa
lea
push
in
into
push
push
call
cmpsl
push
rorl
or
out
jns
push
lahf
xchg
add
lods
test
fiaddl
fsubr
mov
adc
ss
pop
jmp
xlat
fdivrp
mov
fnstenv
or
sarl
ret
mov
sbb
ljmp
and
repz
das
add
pop
mov
js
ds
adc
push
cli
or
push
adc
sub
xchg
jne
xchg
repnz
lcall
inc
push
ja
test
sarl
movsb
mov
xor
pushf
adc
aaa
xchg
adc
les
add
dec
mov
sbb
outsb
and
cmp
and
push
push
jg
aas
xchg
push
sbb
inc
das
enter
scas
push
pop
enter
aam
sbb
lock
jnp
mov
out
mov
popf
jp
jmp
test
and
cmpb
add
sbb
or
insb
popa
inc
add
sub
enter
enter
lahf
aad
sbb
adc
push
lea
inc
xchg
mov
nop
loop
testl
jne
fs
rcrl
mov
mov
mov
mov
sbb
repnz
daa
pop
ljmp
movsb
and
jg
filds
mov
ljmp
or
and
addr16
xchg
loopne
cld
sub
movsb
or
loopne
sbb
mov
push
mov
or
and
clc
bound
in
mov
adc
and
loopne
sbb
stos
cmp
mov
lods
insl
hlt
or
dec
imul
dec
out
add
ret
xlat
sub
jns
leave
lock
add
mov
imul
cmp
pop
loope
push
cld
lret
sbb
jl
inc
ror
and
cmp
in
loop
xor
pop
xorb
pop
ds
aam
not
aas
mov
jl
jp
xor
scas
loope
jge,pn
xorb
mov
inc
mov
sbb
push
xor
ret
into
lods
movsb
in
pop
mov
sbb
in
lds
xor
sub
jecxz
std
outsb
mov
xchg
aad
test
or
dec
adc
bound
xchg
mov
sti
jne
or
mov
iret
pushf
mov
sub
notl
jl
push
jge
lret
int3
xchg
popa
cmp
mov
scas
jno
sahf
and
jne
add
subl
lds
sbb
adc
add
out
out
clc
test
jne
jnp
add
cmpsl
xchg
jmp
out
xor
jnp
hlt
xor
outsl
leave
test
rcrb
into
mov
and
dec
jb
loop
data16
push
inc
repnz
sbb
inc
jns
mov
adc
sub
incb
test
insb
fsubrs
xchg
sarb
stos
icebp
aas
mov
lods
push
mov
cmp
mov
xor
xchg
inc
pop
fldenv
pop
enter
notb
push
fadds
jg
stc
push
inc
lods
add
mov
bound
push
test
ljmp
xchg
xchg
test
cmp
xlat
test
inc
add
add
inc
adc
addr16
ss
mov
jnp
jmp
call
lods
subb
and
out
push
mov
gs
xor
test
das
out
xchg
pop
push
js
jle
pop
gs
aad
movsl
repz
bound
bound
adc
int3
stc
pop
cmp
push
inc
out
push
popf
arpl
testb
jns
sbb
jae
lret
dec
loopne
mov
js
addr16
inc
push
int
adc
inc
gs
cmp
xor
push
js
or
dec
dec
mov
mov
and
push
lods
jg
inc
cmp
inc
sub
mov
subl
fs
das
out
loopne
out
fldcw
or
push
call
fcomp
jmp
mov
mov
insl
push
cld
movsb
out
push
in
int
jl
daa
sbb
mov
cmp
inc
push
out
pop
lret
inc
mov
dec
daa
loop
jns
ja
les
xchg
sahf
inc
push
adc
cli
leave
jmp
insl
sub
push
adc
aas
sbb
and
mov
cwtl
jbe
hlt
ret
int3
xchg
push
mov
gs
stos
xor
push
inc
inc
mov
pop
jge
fisubrs
fildll
int3
inc
jmp
leave
mov
inc
sar
sub
xlat
xor
xchg
fcmovu
inc
or
imul
popf
lret
sbb
jb
mov
and
in
insb
sub
cmpsl
push
subl
sbb
adc
je
or
mov
out
cwtl
or
mov
popf
jg
call
inc
dec
push
insl
push
inc
pop
jnp
mov
insb
lods
sahf
sbb
or
inc
cld
cs
lock
lea
mov
popf
cs
sub
pop
and
jae
push
lcall
lret
faddl
orl
jle
add
out
cs
inc
daa
repnz
fstpt
shlb
xor
mov
cli
xlat
negl
in
jae
insl
or
sub
notl
mov
pop
clc
pop
cmp
loope
sbb
jmp
fists
mov
inc
add
lret
push
popf
dec
xchg
mov
imul
inc
movsb
cmc
mov
out
dec
in
notb
cli
fucomi
cwtl
repnz
insb
add
aad
sbb
js
dec
and
sti
dec
inc
imul
hlt
jae
aam
push
cmp
sub
inc
iret
or
test
pusha
or
or
xor
sub
addr16
in
test
push
std
xor
call
sub
xor
mov
inc
sbb
cmp
out
pop
pop
popf
shrl
lds
jl
ljmp
mov
cwtl
imul
bound
test
mov
jecxz
pop
test
aaa
lahf
jp
cmp
imul
cmpl
pushf
xchg
jae
xchg
and
mov
push
adc
cmp
lods
in
jecxz
das
std
dec
push
inc
scas
mov
and
cmpsl
les
mov
test
je
xor
adc
mov
out
ss
cld
pop
shl
ja
dec
divl
xchg
negl
aad
movl
inc
mov
es
popf
jecxz
inc
xor
sbb
das
jmp
outsb
mov
and
jnp
sub
mov
cltd
xchg
push
fbld
cld
pushf
push
fildll
xchg
lcall
adc
stos
cmp
loop
pop
mov
call
add
jecxz
outsb
shrb
lahf
push
jl
sarl
or
test
jo
nop
mov
stos
loope
sahf
dec
roll
int
das
fisttps
sbb
or
sahf
int
xchg
mov
and
add
popa
inc
dec
cwtl
movsb
sahf
mov
sti
dec
clc
mov
clc
fstps
cmp
cmp
push
lcall
inc
push
pop
lret
mov
sub
sub
mov
fsubrl
ret
xchg
out
dec
ds
stc
js
xchg
hlt
lods
fidivl
add
rolb
mov
mov
jge
call
stos
jne
clc
out
xchg
adc
out
jle
dec
lahf
in
fsts
aad
icebp
mov
cmp
add
dec
mov
fsubr
jl
xchg
jnp
cmc
loope
fs
ss
mov
gs
fsubl
dec
fsubr
sbb
jecxz
mov
xchg
pop
mov
mov
jb
add
cmpsb
pop
mov
pop
mov
lret
mov
cmc
cmovns
xor
mov
mov
mov
pop
popf
mov
push
mov
xor
and
pusha
sub
popa
jno
fldcw
sti
scas
subl
adc
dec
pop
xchg
int
jecxz
sub
sbb
push
inc
xor
lcall
and
xchg
loop
and
pop
repnz
loope
aas
pushf
jae
sbb
dec
lcall
pop
jne
jg
mov
orb
mov
roll
out
popl
dec
out
out
pop
testl
jne
and
push
ficomps
dec
pop
mov
fwait
insl
cmp
enter
fadds
mov
mov
in
sbb
mov
fwait
xchg
sub
jb
mov
mov
add
pop
mov
dec
mov
sub
sbb
xchg
add
or
adc
stc
fisubrs
cmp
cmp
pop
jge
cvtpi2ps
jo
cmpsl
mov
sub
lahf
mov
in
ss
cmp
inc
adc
std
call
mov
or
leave
inc
or
add
in
sbb
fidivl
mov
mov
mov
loope
subl
xchg
xor
in
imul
cld
pop
push
cmp
rcl
pop
sub
popf
pop
call
cmp
test
jnp
arpl
xchg
sub
ja
fldt
insb
or
je
xor
pop
aad
push
enter
push
cmp
add
push
das
or
gs
sbb
or
dec
int
pop
sub
arpl
push
adc
add
mov
repz
decb
sarb
adc
sbb
testl
test
sbb
icebp
in
cmp
and
jb
cli
xchg
outsl
imul
imull
push
jne
lock
test
sarl
test
mov
mov
hlt
sub
mov
sarb
lock
aas
push
in
test
pop
int
imul
das
or
mov
push
push
push
cld
loop
mov
cmp
mov
in
hlt
jmp
jbe
or
es
pop
inc
int3
add
xchg
movsb
js
or
pop
mov
sbb
mov
lods
sbb
inc
or
sub
das
xchg
ljmp
mov
push
loopne
mov
dec
repnz
pop
fs
fadd
sbb
cmp
cmc
adc
mov
in
xor
xchg
rclb
vandnps
push
mov
and
ret
pop
cli
addb
insb
sub
mov
sbb
aas
add
loop
sub
jo
outsl
std
loope
imul
lcall
jb
push
in
mov
adc
xchg
mov
xorl
icebp
sub
mov
fsubr
xchg
bnd
aad
movsb
jmp
sub
leave
push
xor
mov
cmp
push
push
insb
or
or
sbb
dec
loope
dec
sahf
pop
cmp
icebp
jno
jne
inc
stos
out
lret
int
dec
add
std
mov
fisttpl
fsubs
push
xorb
dec
or
stc
dec
cmc
mov
push
xchg
pop
lea
sbb
sub
bound
aad
repnz
mov
xor
mov
out
mov
shl
popa
cmc
cmp
sub
pop
inc
iret
push
xchg
mov
or
mov
int3
sti
push
mov
hlt
outsl
imul
es
mov
cmc
fwait
subl
jmp
xchg
jne
or
sbb
adc
mov
push
loop
clc
jb
mov
aad
xor
mov
into
cli
lds
xchg
js
ljmp
cmpsl
and
mov
mov
scas
sub
sbb
scas
into
push
dec
loop
jg
xchg
stc
inc
loop
lods
jl
pop
mov
ss
mov
hlt
jp
sti
out
adc
loop
testb
imul
sbb
lds
lret
mov
mov
sbb
cmp
xchg
dec
lret
xor
adc
mov
pop
loopne
daa
cld
mov
inc
nop
push
and
jmp
mov
fdivr
orb
mov
push
cmpsl
repz
cmp
push
ret
cmp
sbb
dec
in
repz
mov
adcl
subb
lahf
or
in
cs
out
mov
cmp
dec
jbe
add
push
or
outsb
test
lret
test
mul
and
pop
sub
hlt
ret
sahf
aaa
aas
in
jne
daa
outsl
jle
xlat
les
sub
imul
lret
xchg
and
imul
adc
jle
xchg
addr16
aad
jbe
mov
jne
mov
adc
out
xchg
sbb
movsb
repz
les
std
aas
push
push
add
add
lods
adc
pop
mov
mov
fwait
int
or
pop
sti
outsl
outsb
subb
adc
push
jl
pop
mov
sub
and
sbb
add
or
pop
inc
push
mov
mov
add
pop
shrb
jle
jle
imul
push
out
and
cmp
mov
jo
and
clc
xor
xor
mov
sahf
mov
xchg
dec
cmp
pop
push
ror
fldl
pushf
xor
mov
sub
arpl
subb
test
sbbl
mov
into
push
push
data16
icebp
out
or
inc
mov
bound
in
in
out
xchg
das
out
pushl
shrl
cmpsb
test
mov
adc
sub
mov
ficoms
fwait
pusha
add
lcall
mov
sti
xorl
fucomp
jle
repnz
lret
out
out
sub
fidivrl
lret
repz
not
call
push
mov
mov
pop
sub
xor
mov
ja
push
das
repnz
pusha
imul
das
shrl
int
xlat
lret
inc
aam
repnz
repz
sahf
push
mov
cmp
shll
imul
adcb
sub
mov
mov
clc
stos
jbe
inc
jns
int
ja
jmp
xchg
shl
test
fiadds
int3
or
stos
mov
push
dec
lahf
nop
mov
lock
pop
xor
sbb
lret
das
xor
xlat
sub
fstps
cmp
test
fisubrl
and
pop
stos
cli
add
jge
push
adc
xor
or
in
fildl
adc
add
xchg
jmp
ja
add
jle
test
jle
push
jge
jb
clc
js
fwait
dec
jns
cli
int3
mov
mov
jbe
outsb
mov
addb
xlat
ret
ja
dec
ficoms
dec
pop
cs
std
mov
lret
pushf
sbb
xchg
in
imul
mov
mov
push
cmp
add
mov
aas
pop
xor
into
cmc
xor
pop
xor
and
aad
mov
cltd
adc
rcll
and
lock
sub
add
out
fmull
dec
cld
lds
aas
mov
xor
mov
cwtl
push
pop
test
cmp
pop
test
push
mov
outsb
pop
bound
add
pop
add
outsl
or
dec
add
scas
lods
shll
out
sbb
loopne
xchg
xchg
dec
popa
jbe
fistpl
sbb
lahf
or
jno
inc
lahf
jle
cmp
nop
idivl
or
jmp
sti
pusha
pushf
sub
adc
call
add
fcompl
xor
testl
jnp
mov
notl
mov
add
pusha
cld
popa
xchg
jmp
fdivs
dec
jl
adc
fstps
inc
ret
xor
pop
dec
ret
and
push
je
int3
cltd
test
sbb
lret
sub
inc
out
sti
jg
jbe
sbb
dec
push
inc
pusha
push
lea
push
pop
lods
aam
pop
mov
pop
inc
add
gs
push
sbb
sub
pushl
lret
repnz
sbb
and
int3
add
scas
xor
and
ja
sbb
xor
adc
mov
pop
std
sti
sub
lret
shrl
idivb
push
lock
adc
add
jne
pop
mov
adc
mov
pop
lret
jnp
movsl
mov
fidivs
js
mov
and
and
ret
xchg
call
fdivl
sub
or
inc
mov
sub
sub
fwait
mov
repnz
ret
idivl
pop
cmp
sub
ret
bound
std
imul
jb
jne
xchg
mov
call
inc
sbb
repz
js
sarb
sbb
outsb
in
or
adc
cmpsl
movsl
push
push
sub
cwtl
ds
out
cmp
sbb
pop
in
fisttpll
aas
sahf
insb
jns
mov
pop
mov
cmp
mov
mov
insb
imul
lcall
call
push
ficoml
inc
shlb
mov
pcmpeqw
xchg
aaa
or
stos
xchg
adc
xor
mov
fisttpll
jg
roll
xor
xchg
out
imul
sbb
ret
add
iret
mov
xor
adc
sti
jno
mov
sub
push
insl
cmp
psubq
lcall
stos
aam
dec
hlt
cmp
push
ret
lret
push
aad
jbe
lock
in
bnd
push
mov
loopne
mov
xchg
xchg
add
dec
gs
pop
xor
imul
push
sbb
mov
shl
les
int
adc
ret
xor
sub
lods
ficoml
adc
data16
pop
test
lret
cvttps2pi
addb
loop
dec
push
lock
push
sarl
lods
mov
add
daa
xchg
sub
stos
daa
mov
and
cmp
loop
ljmp
pushf
jg
and
insb
cli
mov
xchg
leave
xchg
xor
sub
and
andl
iret
push
mov
adc
or
pop
and
into
mov
rolb
je
out
rcrb
cmp
loopne
mov
inc
cmp
mov
ss
aaa
out
dec
pop
xchg
imul
lods
das
add
shl
jbe
jmp
inc
popf
jo
push
loope
mov
sub
gs
scas
int
or
ss
inc
test
inc
mov
mov
or
out
xchg
ljmp
mov
xchg
dec
push
jle
shlb
mov
or
add
jp
repz
jg
repnz
adc
push
jg
fldcw
pop
cli
outsl
scas
mov
push
repnz
add
mov
push
test
pop
mov
lds
adc
dec
pushf
mov
add
inc
out
lret
stos
pop
push
jle
pop
sub
popf
sbb
outsl
mov
sbb
imul
add
mov
dec
out
jmp
or
je
pop
xor
enter
leave
cld
les
int3
add
jnp
scas
jnp
leave
out
push
or
pop
adc
pop
add
mov
imul
insb
mov
pop
js
lock
call
leave
inc
es
out
lock
iret
idivl
shl
mov
jge
pop
sub
mov
subl
cmpsl
testb
ds
cmp
out
dec
pop
fstl
das
inc
adc
mov
fnstsw
mov
movsb
cmc
out
hlt
out
aas
jge
mov
lds
mov
stc
arpl
or
or
ljmp
js,pn
loope
lret
add
mov
das
cpuid
in
js
lods
std
pusha
je
mov
adcb
lods
mov
jns
fsubl
mov
mov
sub
inc
std
xchg
mov
and
not
cli
hlt
dec
shll
dec
push
and
pop
inc
push
dec
dec
add
dec
outsl
pop
into
nop
cmovl
dec
xchg
test
mov
cmpb
adc
in
sarl
push
xlat
filds
jmp
addr16
adc
les
and
jle
mov
add
push
ret
aaa
into
lret
xor
stc
push
jp,pn
cmp
inc
mov
js
pop
xchg
bound
xchg
mov
sbb
fidivl
xchg
sti
subl
jb
das
test
jns
aad
jb
or
or
mov
loop
cmp
pop
outsl
fdivr
mov
enter
data16
push
fstpt
mov
and
ds
lret
jno
and
jo
test
cmp
push
or
and
enter
cmp
xor
or
hlt
nop
sbb
jp
pop
addr16
lods
sbb
sub
in
mov
cmp
xchg
and
adc
xor
sar
push
lret
or
movsb
sbb
cmp
push
test
cli
gs
mov
fisttps
xor
insb
and
fisttpll
inc
in
or
fstl
or
les
inc
lcall
cmp
ja
dec
aad
adc
leave
mov
movsb
mov
jb
cltd
fbld
xor
mov
sbb
push
mov
dec
fwait
xchg
mov
lock
add
add
or
shll
cmc
jmp
lret
loope
xchg
push
fstps
loop
ret
sbb
jmp
test
push
fcmovu
lcall
fcomps
stc
mov
dec
dec
jp
iret
addr16
enter
xchg
push
push
das
inc
mov
icebp
dec
dec
xchg
mov
cmpsb
cmp
fisubrs
in
cmp
rcrb
push
into
out
push
xchg
ja
iret
rclb
sub
mov
cs
fwait
xchg
xor
dec
ret
jns
sti
shlb
xchg
stos
stc
jno
cli
outsl
frstor
add
pop
scas
stos
mov
or
lret
mov
sub
xlat
inc
jecxz
add
ficompl
inc
addl
rorl
push
xor
sti
mov
add
mov
popf
insl
fninit
call
pop
cli
xor
cli
aaa
loope
aad
lea
rcrb
sbb
add
jge
test
stos
pop
add
cmpsb
ficomps
sbb
lods
push
rcrl
aas
les
sub
inc
pop
hlt
in
shlb
in
mov
push
push
mov
lods
push
lods
cmpsl
or
jo
xchg
push
stos
add
or
and
outsb
rolb
dec
adc
in
and
adc
push
add
mov
or
bswap
scas
imull
lcall
push
dec
cmpsl
rcll
push
lahf
jge
xor
mov
test
aaa
push
jae
adc
jne
adc
clc
fimuls
fsubl
cmp
ja
inc
cmp
push
add
pop
xchg
mov
xor
mov
cmp
rcr
shll
push
je
aaa
sbb
or
mov
sbb
inc
movsb
enter
add
mov
xor
cmp
dec
lock
std
adc
fidivrs
and
das
mov
pop
pop
mov
dec
in
iret
fsts
stc
test
cmpsb
push
mov
sbb
repnz
bound
xorl
mov
or
std
xchg
cmp
jns
mov
repnz
pop
mov
call
jno
or
decl
jp
inc
pop
jb
xchg
arpl
ret
hlt
js
or
rcrb
sub
xchg
mov
lahf
addl
roll
push
ja
aad
add
add
fidivs
add
jae
lcall
rorl
sahf
inc
and
sub
bnd
iret
mov
cwtl
adc
mov
pop
lods
data16
shlb
sbb
incb
mov
push
xchg
and
mov
out
adc
and
or
jbe
pop
in
sub
mov
add
sarb
inc
shll
popa
sbb
dec
int
cmp
sbb
mov
mov
jecxz
cs
add
add
mov
aas
push
add
push
sbb
adc
loopne
ret
jbe
cmp
pop
cmp
test
shl
dec
mov
repnz
clc
in
adc
insb
ffreep
xchg
fsubr
sbb
mov
push
or
pop
jp
out
adc
add
xor
fiadds
mov
loopne
imul
je
sub
and
jge
sarl
pop
fwait
ret
cmpl
mov
movsl
mov
rol
jb
cmp
lock
xchg
inc
dec
aam
add
xchg
cmp
mov
int
jbe
pushf
in
push
inc
test
aas
mov
rcrl
fimuls
icebp
pop
sahf
jae
cli
shll
jo
bound
imul
sbb
movsl
mov
sub
js,pn
cmp
in
adc
cmp
jb
lods
or
stc
push
test
mov
les
stos
cmp
iret
sub
xchg
adc
subb
push
subl
repnz
outsl
fcmovnu
idivb
ljmp
outsb
lods
jb
add
call
in
es
lea
movsb
aad
daa
out
xchg
jl
xor
sar
scas
xor
shlb
jle
sub
cmpb
addr16
push
movsl
add
scas
xor
add
sbb
sub
jns
fimuls
adc
pusha
arpl
cmc
xchg
mov
dec
dec
fwait
leave
ja
in
pop
popl
and
xor
test
xor
data16
adc
rorl
cmp
mov
lds
sbb
pop
xor
jae
mov
sub
jae
or
data16
lahf
inc
and
imul
inc
cmp
in
aam
test
pop
mov
mov
jecxz
test
inc
adc
push
aas
rolb
dec
pusha
shl
and
stos
daa
fwait
jp
stos
add
jmp
insl
cmp
or
punpckldq
pop
scas
shrl
push
test
movsl
ljmp
stc
sub
in
dec
jp
arpl
shl
cmp
ficoml
pop
outsl
js
inc
lea
fimuls
lods
cs
jb
sbbb
push
or
adc
imul
or
jge
push
and
sub
sub
mov
mov
leave
jne
sahf
andl
into
ljmp
push
or
vpmaxsw
call
movsb
call
scas
mov
inc
pop
rcrl
fidivl
mov
inc
xchg
jne
xchg
out
pushf
dec
scas
call
cmp
into
mov
stos
push
cmp
add
fildl
xchg
adc
pop
and
popf
mov
inc
fdivrl
xchg
add
data16
xor
ret
fistpl
pop
nop
loop
xor
fsubl
push
or
testl
sbb
add
mov
mov
mov
imul
inc
data16
jbe
pushf
mov
mov
adc
pop
and
enter
out
cmpb
imul
or
dec
push
jmp
das
fisubs
sub
outsb
stos
xorb
jns
je
hlt
lods
or
dec
push
roll
dec
cmp
out
or
out
aas
repz
lcall
loopne
and
fnstcw
insl
popa
ficoms
add
mov
daa
adc
test
and
aaa
mov
enter
fisttps
xchg
mov
inc
or
out
xor
add
loopne
test
sbb
in
dec
fisubrl
jl
adc
jnp
cmp
bound
add
dec
pop
in
fistpl
data16
ds
jo,pt
cmp
dec
bound
adc
sub
outsl
push
adc
icebp
xchg
xor
pop
mov
lahf
mov
cmp
cmpsl
jp
mov
inc
rclb
adc
aad
xor
iret
into
and
mov
mov
or
jb
stc
cmp
out
sahf
mov
jge
notb
xchg
jle
in
pusha
mov
fldcw
imul
aad
mov
out
jp
push
push
insb
outsb
popf
aas
sub
pop
xchg
aaa
mov
and
or
push
mov
lahf
sbb
adcl
sbb
xor
arpl
fidivrl
div
adc
fabs
repz
jo
rcrl
dec
xor
cmc
sub
jo
sub
push
lret
sbb
inc
cmp
xor
mov
inc
jp
bound
and
fwait
mov
in
in
cwtl
jb
bound
shlb
sar
jbe
ret
repnz
add
xchg
clc
cmp
fwait
dec
push
and
into
mov
push
sub
mov
dec
cwtl
sahf
fstl
xchg
fistps
es
test
dec
fwait
addr16
pop
xchg
mov
mov
sub
pop
adc
ret
or
add
jne
popa
pop
jns
pop
mov
cmp
test
add
sub
sub
dec
dec
sub
push
fwait
inc
xchg
adc
cmp
fldenv
pop
ljmp
pop
int3
or
les
movsb
leave
adc
stos
loop
pop
popl
pop
das
xchg
push
mov
mov
inc
cmp
push
fucomp
add
lcall
fstps
fnsave
sahf
push
xor
sahf
lods
add
cmp
mov
or
fsubs
int
jg
dec
xorl
push
icebp
flds
or
xchg
add
sub
fadds
icebp
mov
dec
lret
inc
jmp
dec
add
dec
lods
fcom
pusha
mov
rcrl
sarb
je
and
pop
rol
fwait
stos
gs
xor
lea
jmp
push
fcomp
cmp
push
inc
push
xchg
stc
int3
mov
cmp
imul
je
jb
push
xor
jle
shlb
nop
xchg
popf
jl
mov
and
je
inc
das
push
inc
fistpll
cmc
adc
gs
mov
rolb
les
repnz
pop
bnd
pusha
outsb
jl
das
lds
arpl
sbb
int
jae
dec
push
and
and
fldt
add
cmp
scas
in
xchg
lods
cwtl
pop
jbe
jb
lods
xchg
xchg
mov
xor
add
push
lea
loope
mov
xor
lahf
dec
pop
sti
push
dec
add
mov
out
cwtl
movsl
xchg
cmp
sub
fisttpll
fmuls
push
push
iret
into
and
jns
sbb
mov
sbb
rcrb
push
sti
stos
adc
add
lods
xchg
xchg
lods
fldenv
iret
ja
pop
push
cmc
cmpsb
cmpsb
rcrl
jb
lret
jne
shll
clc
aad
inc
loopne
ja
mov
dec
jb
and
lret
cli
rcl
ret
dec
jnp
and
or
rclb
sbb
pop
mov
clc
loopne
lret
pop
xchg
push
mov
fildll
leave
mov
into
jle
push
adcb
sbb
sbbb
and
inc
xchg
jecxz
cmc
and
insb
add
push
push
sub
ja
jmp
mov
fs
adc
inc
and
mov
inc
xor
sti
mov
js
lcall
gs
in
sarb
xor
xchg
sbb
pop
dec
pop
les
push
or
sbb
lret
cmc
nop
pop
pop
pop
sahf
test
adc
add
leave
sub
push
arpl
xor
in
mov
mov
mov
clc
testb
stos
lcall
test
pop
pop
test
je
lret
sar
adc
mov
das
push
mov
sub
fisubl
outsl
inc
sbb
and
fcomps
xchg
pop
popf
pop
sbb
fsin
xlat
xchg
insl
cwtl
dec
icebp
mov
mov
gs
rcl
push
and
sbb
daa
sbb
mov
cmpsb
mov
mov
aad
inc
cs
iret
ret
xchg
in
leave
lahf
dec
jge
jbe
pop
loopne
cli
mov
mov
jmp
cmpsb
mov
sub
nop
inc
sub
jle
and
js
ret
lret
and
add
push
stos
mov
ud0
ss
ret
popf
hlt
sbb
outsb
mov
adc
push
daa
sbb
test
inc
mov
mov
add
add
test
xor
dec
ret
adc
pop
mov
xchg
pop
xor
imul
inc
jg
cwtl
cmpsl
push
ds
sbb
aaa
mov
adc
inc
frstor
and
outsl
add
movsb
daa
mov
inc
and
aaa
inc
dec
ja
sub
dec
dec
jl
mov
sbb
fdiv
rorl
popf
in
pop
push
mov
stc
repz
inc
pop
mov
or
xchg
insb
sub
cmp
test
push
push
dec
push
mov
sub
ret
push
mov
mov
sub
orb
sub
and
aad
push
retw
fdivl
push
add
into
inc
call
lret
dec
roll
cmp
ret
cmp
cmp
push
icebp
adc
movsb
cmpsl
mov
inc
fsts
mov
sub
jae
xor
mov
pop
in
sbb
sbb
mov
jne
xchg
test
pop
xchg
sub
pop
fdivrs
mov
out
ficoml
pushf
cmp
es
popa
int3
push
xor
imul
pop
sub
dec
insl
loope
sbb
xor
add
mov
add
testb
rol
imul
shl
test
pop
jbe
cli
cmp
shlb
mov
xor
loop
loopne
insb
addr16
cld
sbb
or
push
or
sti
mov
lcall
lret
in
fisttpl
cld
ss
int
rcrl
outsl
popf
cltd
nop
mov
mov
jl
in
mov
pop
loope
mov
xchg
pusha
ret
std
stc
lods
loop
jne
fidivrs
stos
sub
shll
in
mov
hlt
dec
lret
pusha
pop
cmpsb
push
mov
fstpl
in
dec
ja
mov
leave
inc
repnz
repnz
fidivrl
cmp
sub
sub
pop
jmp
push
sbb
cmp
jo
mov
mov
testl
pop
dec
pushf
test
repz
sti
in
data16
aam
std
idiv
inc
mov
push
cli
cmc
sbb
add
adc
jns
inc
mov
xchg
cli
loopne
push
inc
ret
and
lock
lds
inc
and
insl
addr16
mov
sbb
lods
movsl
stos
repnz
ja
cmp
je
xor
push
loop
sbb
pop
loope
and
fmuls
lods
inc
push
mov
inc
jle
mov
stos
lahf
js
push
add
sub
mov
pop
aam
cld
int3
filds
mov
sti
xor
cltd
pop
pop
rcl
ds
ss
sbb
orb
fmul
in
mov
icebp
rsm
loopne
add
push
cmp
out
xor
add
clc
sbb
mov
xor
mov
pop
sahf
imul
int3
imul
shrb
jne
xchg
mov
movq
sub
cmp
and
gs
lock
outsb
cmovns
gs
fstpl
dec
sub
inc
mov
and
scas
les
fcmovnb
cmpsb
sti
mov
movsb
cmp
push
pop
push
or
push
push
push
data16
or
dec
dec
pop
cmp
mov
adc
popa
cmpsl
js
test
push
push
cmp
in
aam
push
adc
sub
inc
mov
pop
jl
jne
daa
mov
sub
mov
and
mov
jo
stos
xchg
sbb
cmp
push
daa
or
inc
fimull
push
jns
aaa
adc
adc
jo
adc
icebp
adc
push
push
int
pop
scas
rcrl
addr16
adc
jecxz
std
pop
sbb
mov
xchg
daa
and
cld
jle
jae
push
js
rcrb
scas
lret
dec
sbb
ret
pop
lahf
sti
out
call
cmp
fcompl
pop
iret
jbe
push
and
js
pop
mov
ds
jmp
and
push
lods
adc
push
imul
mov
mov
dec
je
mov
push
ds
lret
hlt
dec
jl
jle
fisttpll
aas
mov
data16
mov
daa
pop
mov
and
rcr
test
pop
sbb
lahf
je
popf
or
and
jno
shl
jns
ljmp
cltd
inc
jnp
mov
sub
ljmp
ficomps
sub
inc
and
lcall
xchg
stc
das
sub
in
aaa
in
mov
mov
pop
stc
jp
fldpi
dec
shrl
outsl
fmull
sbb
cmpsl
mov
adc
enter
lahf
mov
inc
fisubl
ljmp
out
push
test
push
cmp
jo
add
push
adc
out
inc
inc
push
pop
sbb
mov
mov
sbb
cmpb
push
mov
sarb
insb
popa
outsl
xchg
sub
mov
dec
pop
or
mov
push
mov
das
dec
cmp
arpl
push
inc
dec
mov
mov
outsb
daa
add
fcompl
mov
pop
arpl
addr16
pushl
or
and
inc
cmpl
addr16
sarb
lods
outsb
mov
sub
sub
inc
cmp
rorb
mov
jno
dec
xchg
xchg
nop
les
lret
or
incl
jl
lds
ja
mov
adc
loope
mov
xchg
lahf
popf
fs
movsb
imul
daa
scas
ficoml
push
icebp
les
sar
xchg
jecxz
mov
xchg
stos
out
dec
mov
fmull
dec
xchg
popa
mov
mov
push
pop
stos
cmp
ret
sub
and
mov
pushf
inc
fucomp
loope
lds
push
packsswb
cmp
jp
pop
stos
fadds
and
inc
xorl
dec
add
jne
ss
or
sbb
call
shll
pop
ss
cmc
out
push
add
mov
or
sbb
imul
call
jne
in
in
or
fwait
adc
lds
int3
data16
pusha
add
mov
push
add
andl
adc
push
repnz
out
mov
or
daa
mov
aam
push
and
int
add
into
insl
xchg
or
jbe
leave
cmp
cmp
or
movsl
xlat
sub
ret
lret
mov
jnp
sub
dec
push
or
stc
fimuls
sub
icebp
inc
mov
and
push
mov
dec
xchg
mull
dec
jmp
mov
and
dec
jl
sahf
push
movsl
xchg
mov
cmpsb
scas
push
push
pusha
xchg
adc
dec
stos
pushf
pusha
rcl
sbbl
xchg
or
pop
cmp
jg
mov
xor
push
sbb
mov
cmp
std
mov
insl
dec
adc
dec
pop
mov
adc
dec
stos
out
push
pop
xchg
xor
pop
mov
jecxz
into
scas
ror
popa
fistpl
cli
fstpt
pop
mov
leave
loopne
fucomip
pop
pop
je
cmp
fistl
pop
cmc
mov
out
leave
cltd
aaa
add
or
call
popa
cld
jns
adcb
popf
jno
pusha
jo
lret
mov
cmp
add
sub
fimull
adc
sub
or
fnstcw
mov
sub
sti
pop
lds
mov
xchg
lods
push
jnp
jp
inc
sbb
aad
sbb
sbb
jg
mov
popa
in
shrb
adc
stos
mov
shrl
sbb
jmp
jle
adc
loopne
loop
xchg
mov
xchg
ucomiss
lahf
into
push
int3
inc
mov
mov
pop
js
outsb
ror
push
and
or
or
pop
fsubrp
and
ret
ljmp
add
or
pop
or
add
pop
sub
inc
scas
outsb
inc
sbb
icebp
popf
or
into
out
or
testl
fsubl
fistl
mov
mov
or
pop
sbb
or
jo
jns
test
fsts
std
sbb
inc
mov
dec
add
stc
into
out
pushf
xchg
mov
add
and
jns
lock
push
or
ffreep
xchg
pusha
mov
or
jge
fistps
inc
pop
push
xlat
idivb
mov
test
xchg
and
stos
mov
adc
cwtl
xor
add
mov
dec
add
xor
pushf
nop
andl
xor
scas
cld
dec
xchg
mov
ss
adc
outsb
test
dec
cld
clc
orb
xchg
popa
jno
xlat
push
sar
orl
cld
in
cld
fldt
out
or
mov
add
cs
adc
std
jb
loop
lret
and
sbb
and
in
add
iret
arpl
inc
daa
push
and
ret
adc
rcll
jp
mov
pop
sub
adc
inc
rcr
insl
and
xchg
orw
gs
bound
inc
or
push
jg
jo
inc
jg
fsubr
out
sbbl
dec
popf
xor
push
mov
dec
sti
push
call
lea
jle
mov
mov
add
and
int3
sub
bound
adc
xor
into
push
insl
shrl
andb
xor
cmpl
mov
int3
in
test
mov
pop
lcall
fimuls
add
mov
jl
lods
movsl
pop
cwtl
pop
in
stos
mov
cli
fcomps
pop
jmp
mov
decb
cmc
pop
mov
faddl
in
sbb
scas
fwait
inc
or
mov
cwtl
sbbl
pop
addr16
sbb
inc
mov
nop
aas
lret
xchg
lods
aad
sbb
rorb
mov
out
jle
hlt
mov
bnd
rorb
loope
mov
loope
mov
push
fcmovne
mov
lea
jae
sub
icebp
ljmp
push
enter
mov
cli
std
insb
hlt
pop
mov
in
sub
xor
add
ret
pop
imul
pusha
cltd
cmp
out
add
xchg
xor
adc
adc
cmp
sub
loop
shll
push
cs
or
cmc
nop
or
cmc
cld
movsb
fcmovne
insl
jp
add
xor
fs
inc
mov
add
into
push
gs
xchg
out
das
sub
dec
dec
sahf
sbb
push
cmp
dec
das
jge
sbb
mov
jl
jb
mov
xchg
leave
and
rcll
leave
mov
shl
and
cmpsb
adc
lea
inc
popa
mov
push
pop
inc
ja
fildll
pop
jo
dec
popf
outsb
out
lds
sahf
pop
push
xor
repnz
inc
cmp
cmp
sbbl
fnstsw
movsb
stc
lret
fadd
inc
stos
cli
or
pop
adc
pop
push
lods
xor
gs
and
fwait
mov
dec
cmp
push
push
mov
mov
and
or
add
test
push
mov
push
mov
pushf
pop
imull
sbb
aas
jecxz
inc
stos
mov
cmpl
aas
icebp
mov
xchg
dec
push
xchg
jnp
ds
cmpl
mov
push
adc
popa
movsb
jno
loopne
pop
mov
mov
sub
and
sub
mov
ja
es
jp
lds
inc
inc
xchg
pop
bound
pop
ljmp
mov
push
mov
mov
lret
sub
or
test
out
push
add
clc
dec
inc
adc
leave
inc
or
pop
or
aam
rcrb
xor
mov
sbb
sbb
cmp
out
leave
jl
jae
mov
in
xchg
fwait
inc
push
adc
iret
ficoms
ficoms
and
cli
pop
jle
mov
lock
pop
mov
cmp
adc
and
adc
out
xlat
js
push
cmp
pop
imul
cmp
gs
sbb
inc
pop
lock
shrb
adc
outsl
add
jb
mul
adc
clc
mov
push
add
pop
pop
fistl
adc
dec
xchg
stos
ja
xlat
mov
sbb
sar
int
ljmp
adc
push
xchg
mov
jmp
sbb
push
dec
inc
shll
test
stos
cmpsl
dec
mov
loop
or
mov
pop
sbb
out
mov
cwtl
xchg
rclb
pop
hlt
mov
mov
mov
nop
or
call
push
insb
add
ds
fildl
call
fiaddl
movsb
push
cmpsb
negl
fs
sub
fsubrs
mov
adc
push
fnstcw
stos
out
fstpl
pop
pop
push
sub
ret
xor
mov
adc
xor
pop
push
fimull
mov
fiaddl
dec
mov
fcmovnb
popf
lret
repz
jecxz
movsb
pushf
mov
loop
rcrb
pop
hlt
mov
cld
sbb
mov
das
mov
xor
add
push
and
mov
mov
mov
int3
push
pop
test
out
sbb
das
icebp
dec
mov
pop
add
loope
ds
icebp
push
shll
rorb
mov
in
into
mov
xor
insl
sub
pushf
cmp
dec
and
sub
mov
and
inc
dec
pop
cmpsb
dec
leave
mov
xchg
adc
test
pop
pushl
sbb
gs
mov
xor
jl
or
sub
int3
and
mov
adc
mov
or
push
cmpsl
jne
stos
imul
jle
sub
xchg
inc
push
mov
cmp
add
fstps
mov
push
enter
push
popf
movsb
je
cltd
fstpl
mov
xor
int
pop
xor
movsl
jmp
cltd
out
and
mov
int
mov
sub
test
pop
pop
orl
pushf
jecxz
mov
fistps
sahf
mov
jmp
dec
imul
cmp
out
dec
stos
inc
or
hlt
enter
push
xchg
or
adc
xor
mov
xor
push
xor
jns
push
mov
js
insb
pop
and
jp
aaa
mov
lock
js
pop
push
cmp
inc
flds
mov
mov
and
mov
dec
pop
add
into
pop
pop
dec
dec
or
hlt
cli
or
addr16
pop
sbb
int
fwait
loop
stc
and
dec
push
test
dec
cmp
mov
or
xchg
in
nop
outsb
and
cmp
push
mov
lcall
mov
push
jl
inc
jne
push
int3
pop
popf
mov
shl
xchg
in
push
call
xchg
and
adc
pop
pop
outsb
ds
cmp
add
inc
fisttpll
imul
push
lret
xor
cmpsl
xor
sbb
mov
xlat
cmpb
inc
dec
push
subl
lods
lahf
popf
arpl
cwtl
mov
nop
fmull
ljmp
jg
test
or
pop
add
in
xor
add
cmp
pop
push
jne
sub
aaa
in
adc
cmp
lods
xchg
pop
lods
sbb
xlat
jl
sub
cld
out
icebp
pop
sbb
pop
and
mov
jp
xchg
out
test
push
daa
das
add
ret
dec
push
push
adc
ss
lods
pop
mov
xlat
icebp
insb
outsb
xor
sbb
or
jp
mov
clc
xchg
jg
mov
add
fdiv
push
and
lret
stos
inc
repz
jecxz
aam
mov
dec
xchg
enter
add
cmpsl
rcl
and
cmp
sbb
scas
dec
inc
sbb
and
hlt
lea
aad
xor
roll
daa
mov
popa
inc
pop
and
xchg
inc
mov
repnz
roll
mov
jbe
mov
imul
and
ss
jecxz
dec
xchg
pop
xlat
data16
idivl
fcmovu
daa
lahf
lret
mov
hlt
ret
add
sub
jge
mov
daa
adc
mov
cmpsb
cmpsl
lock
jmp
lods
pop
std
mov
test
sbb
pushf
loop
jp
cmp
clc
mov
stos
fldenv
aam
int3
fcom
pop
or
adc
jp
pop
adc
mov
sti
in
jecxz
enter
test
adc
testl
mov
adc
pop
jo
dec
xchg
jae
dec
inc
jle
pusha
in
in
popf
test
jp
into
call
add
movsb
gs
inc
add
inc
xchg
shrb
sbb
cld
frstpm(287
jbe
mov
push
mov
sar
in
pop
dec
movsb
gs
xchg
aad
pop
push
fldl
xchg
xor
inc
adc
ja
push
adc
loopne
lahf
in
xor
dec
jge
fbstp
and
sub
xor
aaa
popa
daa
sbb
pop
jo
jae
cmp
ror
mov
xor
pushf
sbb
adc
call
jmp
nop
popa
jge
orps
or
roll
repz
inc
iret
jne
sbb
xchg
and
das
lods
sbb
in
mov
mov
loopne
mov
cmpsl
repz
lods
mov
push
cwtl
inc
add
movsb
incl
in
cmp
in
pusha
pop
test
adc
or
mov
ficompl
sub
jmp
and
jne
inc
push
push
daa
xorb
inc
jmp
and
sbb
lret
outsl
sub
or
and
mov
mov
outsl
hlt
inc
stc
ret
dec
sbb
xor
xchg
push
sbb
xlat
and
mov
pop
in
cli
xor
xchg
rcll
lock
sahf
test
mov
mov
arpl
mov
adc
adc
fs
int
mov
mov
push
and
stc
rcrb
mov
out
int
sar
push
fiadds
jle
push
inc
cmpsl
andl
jns
jbe
sub
jp
jae
cmpsb
test
loop
xchg
lret
movsb
sbb
cmc
dec
rclb
and
aas
add
sub
xchg
mov
xchg
mov
or
jae
mov
xor
mov
imul
enter
mov
rcrb
jns
iret
ret
mov
jle
sbb
inc
sub
jnp
push
idiv
jle
pop
xchg
in
clc
xchg
xchg
stos
inc
hlt
mov
sbb
mov
popf
cmp
push
pop
sbb
sbb
dec
jae
adc
sbb
ds
mov
sbb
pop
cwtl
mov
adc
add
lcall
lock
mov
ss
add
sti
and
pop
out
shld
aad
inc
mov
cmpsl
push
mov
push
mov
faddl
lea
leave
mov
add
sbb
lds
lods
jbe
push
arpl
lahf
inc
push
inc
out
jle
sub
add
jbe
test
fldcw
aas
bnd
xchg
cmp
out
mov
and
dec
add
mov
jle
and
jge
mov
or
xlat
sub
lea
xchg
sub
cld
add
loopne
and
push
outsb
or
dec
repnz
jns
test
mov
mov
push
sbb
mov
mov
enter
pop
cmc
mov
cld
dec
cmp
dec
es
fs
iret
and
ljmp
xchg
movsl
dec
xor
movsl
xlat
jle
push
lea
xchg
pop
movsl
add
icebp
jb
sub
or
cmpsb
sbb
es
xor
mov
xor
pmaxsw
sbb
cmp
and
cli
mov
jb
sub
bound
mov
adc
jge
cmp
pop
sbb
out
ljmp
in
fwait
and
aad
jb
xorb
enter
cmpsl
sti
movsb
add
xchg
stos
push
loopne
mov
mov
push
jae
dec
lcall
xor
cmp
and
adc
jg
mov
lods
mov
xor
cmp
mov
fadds
testl
stc
imul
push
das
mov
das
mov
sbb
jae
lcall
jne
xor
fwait
xchg
xchg
mov
xor
pop
push
ror
insl
adc
add
push
inc
imul
bswap
xchg
loope
jae
pusha
fmulp
jnp
cmpl
je
inc
push
adc
lock
mov
add
pcmpgtb
fstp
push
test
and
out
fdivrl
jne
jnp
dec
repz
mov
cmpsb
push
div
xchg
and
push
mov
xchg
repnz
aas
mov
xchg
les
push
into
mulb
inc
fs
test
hlt
shrb
pop
dec
xlat
pop
pop
xor
das
jbe
and
xchg
cmp
jno
imul
mov
or
cld
iret
xchg
dec
pusha
mov
scas
aaa
inc
ja
das
add
stc
popf
jns
outsl
push
mov
jb
sbb
cmp
mov
stc
out
fidivrs
xor
cs
sbb
lret
lahf
jg
ja
enter
mov
nop
fwait
mov
adc
xor
scas
nop
out
sbb
andb
xchg
popf
hlt
jo
or
daa
jmp
cli
lcall
ret
pop
dec
lods
add
test
mov
push
aam
sbb
std
lcall
stos
dec
das
movsl
icebp
push
cmp
inc
loope
cmp
dec
adc
int
sti
and
and
jnp
push
fidivs
test
xor
rcll
repz
outsl
mov
cmp
ret
mov
scas
xorl
test
jae
push
lea
push
and
decb
movsl
push
or
loop
stos
ret
fs
push
sbb
dec
xchg
push
xchg
or
cld
or
loope
outsb
xor
mov
sub
fiaddl
xor
jbe
pop
iret
inc
push
pop
cmp
cmp
mov
outsl
or
hlt
and
lahf
lods
xchg
push
pop
dec
arpl
stos
bound
inc
scas
adc
sub
or
inc
or
xchg
int3
lds
clc
insb
dec
outsl
icebp
loop
js
mov
mov
xor
fdivl
insl
inc
or
push
dec
icebp
mov
fwait
pop
rcll
scas
sbb
pop
push
pop
xchg
inc
jmp
inc
pusha
adc
popf
jmp
hlt
aas
inc
les
dec
mov
xchg
add
cli
mov
neg
adc
mov
mov
mov
pop
adc
adc
bound
loop
mov
icebp
jl
inc
dec
adc
fsubrs
arpl
pusha
cmp
adc
cwtl
out
loope
pop
xor
lods
adc
dec
xor
and
cltd
lcall
dec
out
push
jge
imul
xchg
fnstsw
pop
insb
push
loope
adc
les
test
xchg
push
in
fnsave
xor
sub
arpl
adc
xor
inc
scas
push
inc
push
stc
and
xchg
dec
movsb
or
dec
mov
sub
fnstenv
sbb
into
push
sbb
add
add
sbb
xchg
inc
ss
lods
xchg
xchg
dec
sbb
jb
pop
push
sbb
lock
in
popf
test
and
xchg
or
mov
jo
sar
xchg
pusha
test
in
call
iret
addb
push
sbb
call
jb
lods
insb
je
jl
std
inc
dec
adc
mov
lret
fsubl
or
iret
mov
cmp
outsb
mov
inc
xchg
mov
push
je
push
cs
fldcw
rorb
hlt
sub
insl
out
loopne
sub
mov
fwait
xchg
adc
xchg
fucom
sub
lds
popa
inc
mov
jle
movsl
les
sbb
jp
notb
or
jne
icebp
incb
por
lods
stos
mov
out
mov
rorl
in
cmp
scas
insb
test
ret
pop
lods
pop
ds
test
movsl
repnz
pop
addb
int3
xchg
jo
inc
sub
aas
ja
pusha
xor
sub
je
jecxz
lock
sti
pop
push
push
lcall
mov
sbb
and
daa
mov
dec
sbb
mov
mov
inc
or
mov
adc
mov
pop
imul
jecxz
xlat
jecxz
add
cmp
cwtl
repz
stos
dec
sbb
pop
or
icebp
sub
add
mov
sbb
addr16
loop
fidivs
mov
ret
into
jmp
sub
jb
sub
lock
clc
cmp
popf
adc
xor
enter
add
enter
xchg
mov
xchg
ror
sti
dec
jecxz
inc
jnp
call
xor
adc
and
or
stos
sub
mov
mov
outsb
sbb
repnz
lret
xor
out
sbb
add
out
cmp
notl
pop
addr16
jecxz
cld
add
sub
lock
out
jne
mov
xchg
and
cld
cld
out
gs
daa
cwtl
repnz
xchg
pop
cmp
xchg
push
or
add
pop
adc
inc
jnp
mov
lret
pop
fwait
stos
mov
jge
sbb
ljmp
push
jno
sbb
je
xor
mov
pusha
mov
insl
out
mov
xor
imul
lock
hlt
add
xchg
push
dec
xchg
push
jnp
inc
rorb
out
inc
outsb
pushf
push
push
push
pop
jl
sub
std
sub
jp
outsb
iret
inc
fsubrl
jl
cmpsl
out
sysexit
or
or
fists
push
jne
popf
lods
scas
and
mov
les
xor
jo
je
or
sbb
movsb
fdivrp
adc
imul
xor
orl
mov
push
xor
pusha
push
lods
aad
mov
scas
idivl
sbb
dec
mov
adc
and
inc
push
shlb
pop
mov
mov
xor
xor
push
jmp
dec
insb
ret
push
lret
sbb
cs
mov
xor
enter
mov
push
adc
jne
mov
icebp
ja
mov
out
out
adc
icebp
aas
and
xchg
cmpsb
mov
jle
in
shlb
mov
adc
push
sbb
lods
dec
mov
or
shr
pusha
cmp
test
dec
in
aaa
movsl
in
hlt
pusha
pop
fistpl
outsb
popa
sub
mov
sub
mov
sbb
xor
lods
add
sub
divb
and
mov
push
xchg
gs
dec
pop
xlat
fidivl
add
mov
outsl
adc
xchg
into
xor
ljmp
clc
insl
fadd
inc
lret
sub
mov
cld
adc
shr
dec
aad
jge
mov
sbb
mov
aaa
aam
hlt
or
sbbl
in
mov
pop
je
xchg
je
lea
jle
sub
iret
in
out
cwtl
push
cmpsb
dec
lret
xchg
std
andl
lds
shr
dec
mov
mov
mov
lds
pop
pushf
jb
iret
movsl
hlt
pop
loop
push
imul
jbe
fcompl
dec
sub
xchg
or
dec
cmp
clc
repnz
out
movsb
xor
jg
xor
cli
and
addr16
jae
add
ja
rclb
push
cmp
ret
push
scas
into
sahf
mov
dec
in
sahf
adc
or
mov
mov
faddp
insb
mov
rorl
mov
stc
cmp
and
mov
in
fucompp
repz
outsb
aas
fisubrl
push
lcall
dec
scas
dec
add
sbb
int
stos
jae
sti
aaa
and
sbb
adc
adc
push
es
pop
movsb
jns
mov
jbe,pn
mov
push
aaa
jmp
in
rorl
push
jmp
jmp
mov
psraw
dec
leave
lock
mov
push
inc
mov
adc
sbbb
cmp
ja
cmp
cmp
ret
stc
pusha
repz
pop
dec
outsl
xchg
inc
inc
out
xor
inc
out
idiv
mov
push
pusha
ror
cltd
jns
and
and
sub
lds
mov
xor
pushf
icebp
inc
ficompl
inc
ror
lods
or
push
mov
add
and
in
leave
sbb
frstor
in
fnsave
and
fnsave
fldcw
jne
jmp
pop
dec
pop
lock
and
imull
aas
dec
inc
repnz
dec
mov
fs
insl
dec
leave
enter
push
add
mov
or
pop
into
sub
ret
push
pop
out
divb
popa
mov
xor
sub
lods
mov
negb
loopne
stos
push
test
adc
mov
daa
cmpsl
cmpsb
lods
xchg
xchg
sub
and
cmp
rol
adc
loopne
adc
in
and
dec
adc
dec
add
jno
mov
mov
mov
cmp
fists
test
dec
out
jo
je
je
arpl
xchg
dec
xchg
aaa
sarl
add
cmp
sahf
imul
mov
lods
pop
aad
in
and
ret
xchg
movsb
out
ret
imul
pop
shr
rcrb
sub
inc
jo
loope
inc
movsl
pop
xor
pop
aad
sub
and
pop
stos
bound
dec
push
inc
in
jb
pusha
out
sbb
mov
cmp
movsl
ja
pop
arpl
mov
adc
inc
jo
sbb
mov
call
jmp
jae
aas
std
lcall
or
ja
pop
test
cli
or
adc
adc
xchg
loop
push
popa
lea
mov
push
loope
jbe
jg
mov
push
sbb
mov
adc
pop
or
notl
mov
std
push
imul
std
jge
repnz
jmp
inc
or
mov
jbe
add
vpand
adc
ret
push
mov
ret
xchg
popf
adc
xlat
xchg
sub
movsb
lds
out
in
aas
adc
cmc
jnp
or
push
sub
xor
cmp
sbb
pop
lcall
jl
loope
rclb
cmp
into
mov
faddl
sbb
cwtl
lods
mov
push
pop
push
pop
shll
mov
mov
push
push
movsl
jle
dec
push
je
lret
pusha
movsb
cmpsb
add
add
lea
sub
xchg
ss
jmp
add
stos
jg
bound
mov
icebp
xor
sub
ljmp
les
lods
inc
push
andl
fidivl
test
out
xor
pop
dec
divb
push
repnz
test
xchg
and
in
inc
ds
mov
stos
pop
out
xchg
xor
in
iret
clc
shll
scas
add
pop
jb
push
stos
dec
xor
int
arpl
jae
int
dec
dec
repnz
adc
aaa
in
xchg
jle
daa
dec
test
in
jl
adc
mov
mov
push
insb
or
lock
bound
sbb
mov
push
push
push
scas
aad
or
leave
jne
sub
pop
mov
mov
inc
adc
rcrl
mov
stos
imul
xor
add
nop
int3
and
aas
lods
repz
into
add
imul
insl
mov
mov
rcrl
aaa
cmp
adc
insb
in
lahf
fnstsw
jle
push
mov
cmp
cmpsb
imul
enter
sahf
and
and
stos
mov
adc
push
jmp
scas
movsb
movb
cld
out
cmpsl
adc
sub
sub
test
aas
in
fs
fnstcw
pop
in
sbb
sbb
add
insl
xchg
mov
adc
add
jo
jb
ss
adc
mov
adc
add
test
imulb
repz
jno
je
inc
or
push
pop
roll
sahf
adc
pop
mull
pop
icebp
jb
decl
call
icebp
push
cld
and
cmp
test
out
movsb
push
push
js
and
rcll
xor
sub
stc
dec
aas
dec
lods
and
mov
mov
xchg
mov
movnti
jecxz
in
shll
pop
or
std
push
pop
in
rclb
lock
mov
fnstcw
pop
and
mov
push
sub
rolb
pop
aas
jbe
rolb
pop
out
push
jne
and
inc
test
out
fcomps
mov
dec
mov
outsb
lcall
xor
dec
xchg
pop
sbb
ret
out
enter
mov
push
repz
mov
stos
xchg
out
in
repz
scas
shlb
push
pusha
daa
scas
push
popf
frstor
aas
adc
pushf
insb
xlat
mov
push
roll
call
dec
and
or
or
aas
push
sbb
test
out
mov
jp
in
enter
pushf
pop
sub
enter
and
cld
mov
or
cmp
lock
mov
add
mov
sub
mov
pop
aaa
mov
inc
icebp
test
daa
mov
jnp
pop
pop
cmc
pop
sbb
adcb
cmp
cltd
mov
imull
enter
jmp
mov
pop
or
jle
cmpsl
fs
cmp
das
inc
push
leave
or
mov
arpl
and
insl
adcl
fildll
cmc
xchg
jl
dec
dec
fstl
mov
jp
dec
or
jmp
xor
mov
xlat
movb
push
jmp
mov
or
sbb
out
clc
popf
repz
fsubs
lea
add
sbb
popf
mov
fistpll
hlt
push
pop
mov
pop
pop
sbb
aad
lahf
mov
mov
mov
pushf
arpl
push
cmp
int3
ficompl
ja
aad
adc
fs
lds
add
clc
notb
int
push
and
add
ds
pop
fildll
out
mov
into
adc
cs
push
mov
and
sti
xchg
sub
xabort
mov
rcrb
xchg
jecxz
mov
mov
sub
aaa
hlt
cltd
test
shrl
nop
icebp
mov
cmp
push
mov
scas
or
dec
sub
mov
lods
or
int
hlt
incb
mov
pop
aaa
cld
pop
loope
inc
cmp
pop
mov
cmp
cmp
aam
jb
cmp
and
movsb
test
dec
lods
mov
test
xchg
jne
mov
cwtl
out
incl
inc
pop
in
andl
pop
inc
orb
insl
out
push
fistl
mov
pop
xor
ja
scas
mov
aad
push
lret
add
push
lret
out
cmp
lods
cwtl
mov
or
mov
frstpm(287
mov
push
outsl
test
adc
aad
push
es
pop
int3
inc
mov
mov
stos
call
adc
test
jmp
jns
and
push
push
dec
mov
xor
sbb
popa
in
nop
les
ret
cli
mov
daa
push
sbb
xorl
dec
mov
xchg
add
cmpsb
sti
shr
ljmp
pop
js
xor
and
test
cmc
add
add
xor
out
aam
js
sbbl
cmp
sbb
fisttps
ja
mov
add
adc
sbb
rol
fisubs
mov
ja
add
add
int
lods
test
aad
enter
push
xchg
jge
sti
sbb
cmp
iret
add
stos
scas
dec
and
in
sbb
lret
jae
loope
cmove
sub
jno
pushf
jbe
xchg
stc
xchg
cld
pop
xchg
jno
in
add
sbb
mov
repz
bound
sbb
inc
movsb
add
ds
pop
or
rorb
and
mov
sub
int
push
rolb
and
out
jmp
inc
xor
dec
mov
mov
adc
test
outsb
sub
outsl
push
adc
or
pop
xchg
loop
cli
push
loop
adc
pop
pop
ljmp
ss
cmp
fs
in
mov
outsb
fsubr
ljmp
mov
rcll
sub
or
cltd
mov
hlt
mov
sub
add
or
cmc
les
popa
xchg
push
or
nop
mov
test
or
fists
add
ret
and
cmc
mov
xchg
xor
cld
push
repz
test
mov
push
nop
jle
nop
inc
lods
test
pop
fucomi
push
inc
xchg
mov
ds
mov
dec
pop
fistpll
cmpsl
pop
cmpsl
jne
mov
xor
repz
mov
and
or
xor
sbb
add
cmpsl
add
aad
jns
jp
dec
xchg
out
addr16
or
cli
sbbb
call
inc
pop
mov
fnstsw
imul
jo
adc
lds
adc
jge
je
jno
mov
cmpsl
mov
jmp
test
mov
inc
mov
or
scas
arpl
jae
out
and
inc
mov
pop
das
inc
and
ds
and
or
out
and
ret
cmc
data16
test
notl
push
in
cmp
call
loope
jo
pop
shll
dec
aas
enter
adcl
outsl
cmp
mov
lret
out
and
fimull
lods
sbb
andl
sub
jno
pop
fisubrs
mov
cwtl
inc
xchg
dec
jg
sub
fstpt
imul
test
fists
jle
or
gs
cld
pop
cmp
mov
movsl
pop
call
ja
test
xchg
lahf
add
movsl
mov
xor
adc
rcll
pop
sti
mov
dec
fwait
cmpl
ffreep
xchg
fstpl
repnz
or
je
aam
nop
js
inc
inc
push
les
lea
mov
aas
xchg
mov
dec
sbb
repz
outsb
adc
lret
adc
int3
dec
je
push
cmp
jae
jno
enter
stos
loop
xor
fwait
insl
add
mov
stos
fldl
fldenv
inc
mov
mov
xchg
sti
sub
pop
dec
mov
pop
ret
mov
repz
inc
adc
or
daa
or
sub
test
bound
ret
mov
mov
lea
inc
mov
mov
ficoml
icebp
ror
sub
jl
jno
fwait
daa
and
mov
daa
fwait
mov
test
cmp
addr16
call
xor
inc
pop
add
or
and
push
and
repz
mov
push
push
ss
loop
inc
add
mov
xor
fisttps
rdmsr
orl
shlb
mov
cmpsb
inc
test
imul
push
cwtl
cmp
fiadds
dec
jle
xchg
jb
xchg
dec
inc
mov
xor
adc
dec
sub
xchg
xchg
lods
or
xor
jbe
push
fidivrs
fadd
or
int
dec
sbb
cmp
inc
cmp
sbb
ret
xchg
xor
jns
aas
insl
aas
movsl
add
jo
movsb
or
add
add
add
cmp
sub
mov
cmp
loopne
cld
in
pop
es
popf
mov
push
cli
inc
fcoms
out
out
enter
push
push
mov
or
cli
xlat
cmp
xchg
push
sub
dec
xor
push
ss
inc
xor
cs
pop
jecxz
cmp
fiadds
pop
testl
mov
cmp
scas
pop
pop
pop
dec
lea
or
jge
mov
cmp
ret
ret
insl
mov
mov
xor
push
push
ljmp
cmp
movsl
or
and
push
repz
push
rclb
pop
mov
push
cwtl
fidivrs
and
pop
loope
inc
stos
imul
mov
loop
pop
mov
mov
mov
xlat
sbb
sbb
and
jb
cmp
nop
pop
xor
add
int
pop
push
mov
inc
xchg
cld
adc
adc
mov
ret
outsl
adc
orl
xchg
mov
push
cmp
and
shrl
test
cltd
insl
inc
js
out
sub
mov
out
pop
add
rorl
pop
pop
xchg
or
xlat
dec
cmc
dec
pop
fs
rorb
push
clc
fnstsw
mov
leave
lret
fdivrs
ja
jae
mov
stos
shl
mov
loope
fimuls
icebp
loope
push
movb
push
sub
shl
and
mov
stos
xor
cmp
ret
fists
loopne
push
mov
mov
sahf
cmp
repz
jo
or
loopne
out
popa
cmc
mov
pushf
xor
push
lcall
push
aas
mov
pushf
call
mov
cmp
sbb
repnz
addr16
sub
or
fidivl
inc
ret
xchg
jb
adc
mov
orb
dec
cli
loop
xor
pop
pop
pushf
jbe
iret
enter
subl
cmp
icebp
or
fstp
cmpsl
jb
inc
arpl
incb
arpl
mov
add
in
lret
jnp
cmpsl
xchg
mov
push
xor
lahf
mov
out
mov
jne
push
int
mov
cmp
pop
movsl
hlt
push
repz
push
push
aam
loopne
mov
fnstsw
in
push
mov
ljmp
cld
leave
ljmp
jne
dec
or
jecxz
mov
and
add
loop
inc
dec
mov
gs
or
scas
mov
imul
dec
daa
orb
mov
mov
mov
test
sbbb
call
mov
das
ljmp
xor
rcll
int
fdivp
nop
inc
jmp
inc
loope
dec
movsb
sbb
movsl
and
dec
leave
dec
negb
xchg
cltd
lock
fldt
and
gs
jl
push
push
sub
cld
mov
andb
pop
lods
push
sub
rol
lret
xor
inc
sbb
enter
jbe
mov
cmp
iret
sub
fsubl
push
push
cmpsl
sarl
arpl
mov
hlt
sbb
fsubs
or
ret
mov
push
or
pop
cmpsl
xor
icebp
xorb
pop
mov
je
mov
pop
fwait
mov
and
repz
stc
sbb
sbb
sbb
outsb
out
xor
adc
push
add
jecxz
inc
jno
fst
repz
mov
and
mov
push
lods
jle
cmp
test
lods
das
xor
cmp
add
mov
shrb
xor
pop
jge
sbb
in
dec
in
ret
push
sub
lret
or
fs
sbb
pop
cmpsb
fdivr
jecxz
inc
stos
lds
lods
imul
push
mov
sbb
daa
and
push
dec
push
loope
cmpsl
push
rorl
push
jmp
aad
adc
cmp
and
stos
dec
shll
mov
out
loope
mov
test
mull
push
jle
push
sub
popa
sti
jae
lret
xchg
jo
or
sbb
jne
add
movb
xor
lods
popf
or
pop
sub
xchg
aad
fdivrl
xchg
mov
jp
jmp
adc
fdivl
testb
insb
jno
inc
push
cmp
es
in
out
fdivr
lahf
sbb
scas
lahf
push
imul
sub
sbb
mov
jl
jg
push
add
jge
push
ljmp
jne
mov
sarl
push
pop
mov
push
pop
inc
fisubl
and
int
and
cmc
jbe
push
pop
inc
sbb
mov
into
aas
adc
stos
faddl
inc
mov
inc
mov
mov
sub
std
fwait
or
mov
out
pop
rcrl
cli
inc
cs
in
or
in
aam
pop
icebp
jno
xchg
cmp
pop
jl
pop
xchg
int3
mov
aam
mov
sahf
mov
add
add
test
sub
out
pop
cld
mov
jns
xor
adc
dec
push
cmp
mov
inc
repnz
jge
push
push
push
and
mov
mov
popa
jmp
mov
stos
out
adc
add
inc
adc
insl
scas
arpl
cld
ds
or
jae
in
jo
rorb
mov
cli
aam
cmc
xchg
mov
in
cld
mov
push
adc
gs
inc
das
je
jbe
sti
jl
adc
mov
mov
mov
pop
stos
pop
mov
mov
pop
or
or
jae
outsb
addr16
or
pop
adc
or
or
loope
mov
mov
xor
mov
add
test
imul
fisubrl
data16
jle
popa
addr16
pop
ret
popf
and
xor
jns
out
adc
fldl
stos
in
leave
int
mov
sti
out
js
and
shl
icebp
out
mov
mov
call
icebp
add
jp
vpmovusdw
sbb
stos
repnz
push
in
cli
add
movnti
add
xorb
loope
mov
js
pusha
dec
popl
imul
arpl
mov
dec
in
or
stos
aam
sbb
lods
rorl
xchg
xor
push
lret
fisttpll
pusha
jne
dec
push
dec
lods
loopne
aad
adc
add
adc
int3
mov
inc
and
push
mov
adc
add
jle
adc
rcrb
jmp
jno
orl
inc
dec
xchg
cli
lods
pop
ja
cmp
xchg
pop
cmp
sti
add
cmovo
js
es
inc
rcll
sbb
adc
icebp
popf
aam
rcrb
mov
mov
imul
jns
dec
jecxz
pop
out
cs
cmp
xor
pop
lret
or
test
inc
lahf
cli
nop
mov
push
or
dec
mov
sarl
adc
or
roll
inc
mov
mov
push
mov
popf
jo
rclb
adc
jl
xchg
or
cmp
loop
push
std
mov
mov
stos
xchg
out
call
cld
subb
push
adc
sub
rcrl
mov
addr16
stos
xchg
insl
adc
inc
jae
jae
dec
add
test
sbb
mov
loop
into
dec
lock
cld
je
mov
sbbb
das
dec
dec
push
iret
fimuls
aam
jl
in
mov
mov
pop
mov
jmp
pusha
xor
movsb
out
cwtl
in
push
mov
jb
sbb
test
push
sbb
andb
dec
cmc
lahf
push
adc
dec
mull
or
out
cmp
jle
lods
fdivrs
sbb
rol
outsb
imul
dec
and
mov
sbb
movl
aas
sub
mov
jle
add
add
sub
add
jecxz
dec
xchg
mov
inc
iret
or
aam
and
dec
imul
jge
fidivrl
js
xchg
aas
sub
orl
out
push
enter
pop
jp
stos
call
leave
jns
push
in
jl
gs
js
int3
imul
lret
mov
jns
lcall
push
lahf
fstps
mov
and
sbb
sbb
ljmp
loop
xor
push
jge
cmp
mov
in
mov
inc
pop
mov
dec
pop
xor
sbb
jp
std
repnz
mov
jmp
fs
scas
aaa
shlb
and
pop
mov
jne
add
cmp
test
fidivl
fld
mov
es
out
mov
mov
movsl
add
xor
mov
test
lock
and
in
fstpl
jo
cmp
test
xchg
mov
xchg
and
add
rcrl
or
cmp
jb
pushf
icebp
inc
sbb
int
sub
cmp
xchg
cs
test
fsubrp
lds
xor
xchg
jmp
fs
sbb
pop
ds
ret
push
mov
sub
mov
xor
xchg
insl
xlat
sbb
mov
push
push
lcall
lcall
pushf
shll
mov
ret
xchg
add
xor
das
add
fcos
lea
add
adc
enter
push
out
jmp
cmp
sub
mov
cmp
adc
and
adc
cwtl
cmpsl
clc
pop
lcall
and
inc
loope
cld
bound
or
push
xchg
mov
mov
ss
add
xchg
pop
inc
mov
push
jne
push
jle
pop
jnp
and
out
jo
repz
or
cmp
sbb
divb
add
inc
loop
dec
in
das
notb
dec
xchg
rol
or
lea
aam
xchg
mov
decl
stc
shlb
mov
xchg
sub
mov
inc
jns
std
test
adc
inc
mov
icebp
pop
or
std
jns
and
and
jge
jp
stos
sti
xchg
xor
xchg
iret
bnd
movsb
mov
aaa
lcall
sub
xor
mov
outsl
ds
mov
dec
ret
insb
mov
bound
and
push
fistpll
adcl
sub
xchg
cmc
mov
repnz
mov
xor
dec
repz
test
mov
cltd
cli
iret
dec
std
pop
inc
mov
insb
enter
push
ja
aad
adc
rorb
push
data16
sub
lcall
or
mov
dec
mov
hlt
je
cmp
dec
mov
xchg
imul
or
sub
pop
dec
out
pushf
pop
mov
shlb
negb
cmp
sub
addr16
xchg
mov
and
cmpsb
jmp
jle
lahf
outsl
inc
cs
enter
nop
test
xchg
dec
and
sub
cmp
aas
sub
je
mov
cmpsb
jecxz
dec
mov
jno
mov
popf
jnp
enter
mov
lahf
out
pop
test
jo
and
repnz
push
pop
std
adc
stc
fwait
inc
out
fiadds
mov
sbb
loop
decb
jbe
xchg
and
jns
mov
ljmp
aaa
cwtl
int
mov
rclb
ret
sbb
clc
and
mov
lock
sarb
mov
jp
cmc
mov
cmp
in
icebp
add
in
mov
outsl
mov
xchg
ss
xchg
nopl
sub
repz
lods
inc
lret
mov
xchg
ds
sub
cmp
push
jno
jb
cli
ds
rcr
clc
inc
in
xchg
pop
lret
test
mov
push
dec
mov
arpl
inc
jmp
iret
xor
shrl
dec
cmp
icebp
adc
cli
jb
scas
push
lret
in
sub
push
adc
pushf
int3
fiaddl
jl
cwtl
stos
lcall
outsl
imull
xchg
mov
mov
dec
lods
loope
ror
hlt
xchg
in
ret
mov
jns
xchg
arpl
mov
add
sub
lss
inc
push
fisttpl
sbb
ror
or
stos
ret
jns
xlat
jnp
jb
mov
popa
gs
and
loopne
shlb
push
pop
scas
adc
sub
jmp
or
mov
pusha
pushw
xchg
inc
sbb
movb
push
xchg
mov
and
jb
push
notl
jg
faddl
inc
push
mov
inc
pop
sbb
jb
or
mov
ja
xor
push
mov
mov
sti
filds
cmpsl
pop
push
push
imul
and
or
in
add
inc
hlt
dec
into
arpl
sahf
mov
or
jecxz
pop
clc
shlb
xor
xor
icebp
shll
xor
adc
sbb
push
mov
sti
aam
mov
dec
lret
xchg
xor
and
sub
adc
cltd
xchg
test
xor
roll
add
loope
insl
cmpsl
in
xor
cmpsb
mov
dec
popa
cmc
fs
sbb
into
push
scas
mov
stos
mov
xor
out
cwtl
jb
out
test
fsubrl
rol
icebp
jbe
ret
dec
test
insb
xor
jnp
leave
sti
idiv
sub
cwtl
sbb
add
mov
rcr
add
mov
lods
sub
int
cmp
cmp
sub
sub
js
mov
sub
sbb
in
jle
data16
or
jbe
inc
mov
popa
sub
out
jecxz
cmp
insl
xchg
insb
mov
or
cld
or
popf
adc
sub
popf
sti
jo
stos
lock
cmp
push
test
jns
xor
jno
clc
scas
movsb
mov
or
es
pop
icebp
cmc
cmp
shl
push
mov
data16
and
jle
repz
insb
mov
test
push
inc
cli
int
jg
sbb
or
ds
shl
clc
out
scas
xchg
cli
mov
or
push
mov
int
mov
hlt
cwtl
mov
dec
push
rcr
add
mov
xor
pop
push
xchg
dec
les
push
dec
sarl
nop
cmc
xor
iret
das
gs
mov
dec
icebp
xchg
movsl
dec
pandn
test
divb
mov
xor
pusha
pop
ss
push
repz
jbe
or
push
jns
dec
mov
or
xchg
fmull
add
aaa
scas
out
jl
mov
and
int
aad
sbb
sub
pop
jg
daa
jmp
aad
push
or
jne
dec
cmc
pop
lds
pop
aas
mov
popf
sbb
jge
test
sub
cmpsb
js
lcall
pop
scas
pop
jo
dec
or
lcall
roll
jecxz
pop
ds
fisttpll
pusha
push
xor
jnp
xchg
popf
lahf
pop
ret
scas
xchg
inc
fistps
cmp
add
dec
shl
or
cs
out
lock
sbb
add
or
fsubl
sbb
xor
adc
adc
push
push
lock
cmp
add
sar
sub
out
aad
mov
add
loop
subb
dec
daa
aad
fiaddl
hlt
aam
mov
mov
jecxz
mov
fmuls
in
testl
jnp
mov
push
push
jno
sbb
fwait
test
inc
pop
fisubrl
xor
fcmovne
rcr
stos
xor
jle
cs
push
movsl
xchg
and
inc
inc
rol
int
pop
loope
jmp
mov
rorl
lock
test
lret
ljmp
sub
out
or
inc
jge
and
xchg
in
nop/reserved
cmpb
fnstenv
xchg
inc
repz
sbb
lret
mul
adc
xorb
jecxz
cld
imul
jae
rcr
lods
push
mov
pop
jne
fiaddl
xchg
inc
popa
sub
mov
inc
imul
push
sub
sub
std
push
or
jne
repnz
push
adc
mov
mov
mov
jecxz
dec
cmpsb
push
sub
add
mov
jmp
mov
pop
inc
and
push
mov
hlt
xor
mov
add
xchg
scas
xor
sbb
and
and
sahf
lock
fdivrs
pop
sub
hlt
push
pop
xor
mov
and
mov
jg
and
mov
pop
orl
push
pop
pop
pop
int3
out
mov
mov
pop
sub
lret
push
popf
outsl
jns
add
mov
testb
jp
es
cmp
mov
add
cmp
ret
xchg
jae
cmc
push
outsb
loop
xor
in
xlat
or
xchg
add
mov
push
mov
scas
les
xchg
lods
mov
pop
or
sub
dec
pop
fnsave
pop
xchg
in
adc
cs
int3
sbb
mov
movsl
xchg
nop
jp
sub
pop
dec
push
dec
hlt
sahf
mov
pop
arpl
test
int3
outsl
in
push
adc
pusha
jns
jae
and
mov
cwtl
push
andb
arpl
sahf
les
iret
ret
mov
out
divb
sbb
mov
in
dec
ja
cwtl
dec
ss
xor
push
pop
sub
jb
mov
pop
cmp
sarb
dec
mov
xor
push
aad
cmp
sub
into
xchg
xor
test
xchg
ss
cltd
scas
out
clc
pop
mov
push
ljmp
hlt
and
cmp
adc
subl
mov
mov
loop
mov
int3
pop
scas
push
mov
mov
sbb
mov
sub
js
mov
pop
cmp
dec
fwait
jg
fldl
add
mov
roll
and
jl
cmp
in
sti
inc
movsl
fucomi
pop
loop
lret
jecxz
repz
pop
in
mov
sub
push
ss
call
push
lahf
sbbl
push
gs
jmp
pop
sbb
call
aas
outsb
add
dec
orb
jl
sbb
in
push
sub
sbb
adc
movsb
lcall
or
sub
dec
sbb
jbe
xor
scas
pop
and
pop
test
repnz
loope
lods
adc
dec
pop
and
sahf
cmpsl
test
mov
pop
call
lea
arpl
adc
sub
scas
lods
sub
mov
dec
data16
push
jnp
cltd
and
arpl
xor
pop
in
mov
inc
lcall
add
out
xchg
aas
rcll
outsb
into
jnp
out
xchg
loopne
xor
rcrb
and
out
xchg
mov
dec
mov
clc
push
roll
mov
adcl
mov
adc
ljmp
subl
push
test
leave
mov
sbb
arpl
xor
mov
sahf
jae
mov
andb
mov
sbb
aam
mov
dec
daa
xor
cmp
mov
lods
xchg
aas
rorb
or
les
scas
xchg
ja
mov
pop
test
cmp
dec
clc
or
insb
movsl
outsb
popf
std
mov
cwtl
adc
xor
cs
pop
xchg
loop
mov
in
mov
xchg
push
mov
xorl
outsb
testl
imul
xorl
adcl
adc
bound
and
pop
jg
fisubrl
insl
sub
lret
in
iret
jb
sub
fcmovnb
push
lret
loope
dec
ret
sbb
cmpb
xchg
mov
test
ret
ret
loopne
gs
insl
push
sbb
pcmpgtb
jecxz
mov
cmp
jp
ror
out
ret
jb
sub
icebp
shl
fcomps
aad
cmp
fcmovnb
dec
repz
ss
sbb
inc
fs
cmpsb
int
add
xor
fildll
mov
popf
repnz
sti
lahf
jmp
pushf
movsl
stc
inc
push
inc
std
xor
sarl
addb
xchg
push
xchg
jne
call
ficoms
insl
insl
movnti
mov
mov
imul
sbb
jo
cmp
jns
popf
loop
daa
scas
jno
test
mov
fisttpl
fistps
clc
pop
pop
pop
ds
bound
or
mov
das
aas
pop
dec
mov
xor
ret
xor
and
push
push
rcll
xchg
rcll
xor
aam
loop
mov
jns
aas
stos
or
jo
addl
dec
mov
jbe
jae
xchg
dec
jns
xor
sub
mov
adc
mov
iret
out
lcall
push
sub
mov
lret
push
mov
scas
dec
inc
jns
jns
pushf
imulb
daa
xor
jmp
cmpsb
mov
jne
mov
js
cmpsb
mov
notb
cltd
jbe
cwtl
loop
lea
xchg
add
jb
inc
lret
test
or
pop
jno
dec
scas
into
jmp
cmpsl
lods
or
add
sub
mov
mov
hlt
push
pop
mov
out
repz
lret
push
popf
sub
mov
mov
xor
cmp
xor
aam
add
jp
test
aam
rorb
das
push
xchg
xor
mov
dec
xchg
nop
jo
pop
mov
jmp
mov
test
adc
loopne
imul
call
adc
test
popa
loopne
sbb
loope
lds
sbb
sub
dec
mov
out
jns
lods
lds
sub
cmp
jp
mov
loopne
or
pop
scas
cmp
mov
pop
outsb
sti
out
stos
loop
rcr
xchg
mov
jge
push
cmp
fsts
out
out
bound
add
cs
sarl
orl
push
mov
xor
pop
sbb
mov
sar
push
clc
bnd
xchg
mov
div
fldl
cmp
jp
popf
adc
dec
sub
icebp
jl
push
pop
mov
pop
data16
push
les
addr16
cmp
and
loop
push
dec
out
rolb
stos
sub
fidivs
incl
repnz
mov
push
out
test
rcrb
mov
jbe
mov
sub
dec
adc
adc
es
push
sub
scas
ffree
sbb
lods
bound
aam
sbb
lcall
and
out
nop
repnz
or
shr
cltd
mov
push
xor
sbb
insl
pop
bswap
clc
adc
xor
mov
mov
xor
sbb
jno
and
scas
in
push
and
ds
cmpb
mov
pop
push
pushf
jle
push
inc
fdivrp
js
ja
stos
adc
dec
scas
dec
push
mov
cmc
jle
xlat
inc
lret
xchg
mov
call
ret
jecxz
shlb
movsl
xchg
outsb
and
lahf
mov
popa
jecxz
push
cs
sbb
pop
fnstenv
loopne
add
adc
and
insl
cmpsb
in
cmp
fmull
mov
xchg
les
mov
xchg
jo
imul
dec
roll
mov
aaa
push
mov
mov
insb
jp
xchg
lret
sbb
cld
nop
pop
test
adc
fdivr
push
mov
mov
sbb
mov
add
lcall
lea
add
mov
push
sub
sti
xor
leave
daa
xchg
arpl
jl
cmp
jmp
adc
fcoms
and
xlat
mov
pop
cmp
lahf
call
scas
dec
les
test
inc
dec
inc
jne
out
add
mov
jmp
dec
dec
cli
add
or
add
push
xchg
pop
mov
imul
in
fwait
jo
inc
add
repz
jmp
mov
scas
ds
rorb
pop
int
sub
inc
cltd
jb
pusha
mov
scas
mov
jno
lret
mov
or
out
inc
pop
or
inc
inc
xchg
pop
or
mov
jmp
cld
push
iret
fists
ds
jl
outsb
mov
fcmovu
push
out
xchg
inc
arpl
dec
adc
stos
add
sub
adc
cmp
bound
cltd
inc
xchg
cmpsb
push
mov
cmp
clc
andb
je
sbb
inc
inc
daa
push
in
call
push
sub
fidivrs
jno
pop
jle
pop
insl
cmp
push
lret
xor
xor
pushf
test
xlat
inc
xchg
sub
adc
fsts
push
repz
jo
in
insl
xchg
xchg
das
les
sahf
mov
cmp
mov
dec
shrl
and
jae
sti
add
pop
xchg
shrb
sahf
divl
mov
ret
mov
xor
stos
je
enter
sub
dec
addr16
xor
shll
cmp
pop
cwtl
shlb
loope
xor
pushf
mov
inc
pop
in
push
lahf
sub
test
mov
cmp
dec
cs
jnp
movsb
es
and
xchg
loope
jle
sub
loopne
xor
cld
rcrl
pop
inc
xor
je
sub
leave
jecxz
push
add
pop
adc
rcl
and
iret
into
xchg
lcall
popa
mov
cmp
roll
arpl
std
mov
and
or
push
cmc
test
or
adc
inc
cld
pop
roll
or
rolb
pop
jnp
std
xchg
inc
in
mov
mov
test
fmull
push
xchg
add
test
insl
mov
and
or
aas
dec
dec
or
loopne
cmp
sbb
mov
std
dec
in
or
mov
xor
stos
lea
aas
frstor
iret
mov
out
mov
addr16
xchg
sbb
vaddsd
cltd
push
push
inc
pcmpgtb
out
out
movsl
arpl
xchg
sbb
mov
ljmp
mov
hlt
mov
rorb
loope
xchg
mov
jne
sub
adc
ret
adc
mov
xor
out
ljmp
iret
pop
notb
imul
mov
jbe
insb
and
f2xm1
cmc
push
jo
inc
and
add
daa
lret
sub
jmp
and
mov
addr16
out
mov
insl
cmp
dec
jp
movsb
fcomps
jecxz
mov
push
adc
lods
dec
and
pop
pusha
in
stos
cltd
and
nop
clc
out
inc
les
adc
cli
popa
mov
mov
rcrb
lret
mov
and
lahf
pop
pop
jo
int
icebp
and
lcall
aaa
shl
ret
xchg
sbb
inc
fcmovbe
mov
fwait
jnp
andl
mov
inc
pusha
call
jmp
mov
cld
gs
cmp
cmp
inc
push
je
shll
and
in
sbb
popa
or
jne
adc
shrl
iret
mov
insl
gs
jl
outsl
inc
shll
cmp
mov
jno
ds
ss
lock
sub
xor
arpl
xor
add
fwait
js
fwait
test
andb
pop
mov
or
js
adc
leave
scas
in
push
int
lcall
or
xor
enter
adcl
jo
inc
dec
ret
jmp
jg
and
sahf
lods
mov
cs
dec
add
outsb
adc
movsb
cmp
movsl
adc
stc
and
mov
arpl
repz
pop
int
push
cmp
test
insb
and
and
notl
aaa
xor
cmp
mov
inc
lods
dec
xor
xchg
rclb
clc
loopne
aam
mov
jecxz
mov
inc
mov
cli
cltd
cli
sbb
call
pop
jge
prefetch
adc
int3
inc
inc
aaa
pop
sbb
xor
into
adcl
shll
dec
sti
adc
sbb
scas
mov
pop
jb
mov
insl
inc
mov
out
int3
fcomip
enter
dec
lds
push
xor
mov
dec
mov
dec
mov
popa
and
imul
xor
inc
stos
das
rorb
dec
dec
cmpsb
mov
add
subl
ud1
adc
and
xor
inc
pop
mov
inc
lahf
cld
add
int
xor
cmp
mov
pop
push
jge
sub
push
xor
jle
mov
dec
imul
fldcw
into
xor
xchg
cmpsb
mov
jl
push
jmp
int
sahf
push
out
ja
fdiv
lea
bound
pop
xor
shrb
sub
sub
fwait
js
mov
adc
jnp
movsl
pop
jbe
pop
fsubrs
js
lahf
push
cltd
mov
pop
js
movsl
fld
mov
pop
ds
imul
out
es
imul
jns
mov
and
pop
push
push
sub
inc
add
push
aam
outsb
mov
xchg
dec
push
add
and
add
mov
fiaddl
jb
je
dec
inc
xor
or
loope
cmpb
fcoml
jb
stc
icebp
int3
sub
enter
xor
add
inc
or
das
call
stos
jo
lds
test
fidivs
int
adc
lods
les
jle
xorb
mov
lds
sub
in
repz
scas
rcr
cmpb
xor
push
push
std
push
mov
out
insl
fsubrl
xchg
dec
pop
jecxz
xchg
fisttps
daa
aaa
cmp
nop
mov
lods
xchg
dec
jl
pop
push
sti
dec
fsubrs
cmp
cmp
repnz
add
mov
mov
cmp
or
jmp
and
and
in
dec
add
out
sti
popa
test
cltd
jns
jp
mov
faddp
js
lea
movsl
sbb
inc
jno
mov
mov
pop
adc
inc
jmp
bound
push
jmp
sub
pop
push
jle
add
int3
test
and
in
std
cmp
pop
sbb
adc
xor
je
jecxz
imull
xlat
aas
testl
rorb
loope
call
sbb
cmpsb
inc
mov
dec
add
in
flds
movsb
fldenv
sub
pop
insl
lret
fdiv
jae
adc
adcb
mov
outsb
negb
addl
rcll
in
jo
dec
adc
mov
sub
iret
xchg
jmp
repnz
es
ret
ret
cmpsl
out
test
sahf
andl
cwtl
les
outsl
inc
movsl
std
push
pop
cmp
aas
pop
fnsave
bound
cmp
sti
cs
and
mov
xchg
es
ficompl
lret
inc
fiaddl
es
adc
sub
adc
test
mov
test
loopne
aaa
jp
popa
jmp
fwait
or
mov
jo
aaa
push
push
fcompl
stc
jne
sub
pop
fwait
add
stos
clc
pop
pop
sub
faddl
daa
cmp
and
pop
mov
mov
std
and
ucomiss
push
fidivl
adc
add
cwtl
mov
jbe
add
dec
and
xchg
nop
xchg
orl
mov
mov
imul
lcall
mov
fs
insl
int
mov
ds
negb
loopne
imul
jmp
pop
clc
push
pop
mov
xor
adc
je
inc
sbb
mov
jae
mov
mov
pusha
out
inc
aad
xor
daa
test
es
and
fnsave
sbb
add
lcall
loop
sti
repz
jo
xor
std
stc
sahf
xchg
in
xor
jno
enter
and
xor
fisubs
lock
sbb
sbb
jbe
pop
sub
dec
mov
lahf
sahf
add
rorb
andl
cmpsb
mov
pop
pop
lahf
cwtl
mov
jg
xchg
adc
insl
mov
sub
sub
cli
jmp
push
dec
push
jne
test
cmp
lret
mov
lret
daa
dec
pop
pop
sub
push
xchg
ss
out
movzbl
aaa
int3
lods
jecxz
fucomp
enter
fstl
pop
xchg
repz
fmul
jo
cmp
divb
mov
push
lock
out
negb
xor
lahf
push
mov
adc
and
xchg
shl
adc
push
sarb
mov
cmp
vmovdqa
subb
push
popl
cmp
mov
pop
jp
fnstcw
rclb
lea
jns
adcl
mov
push
xchg
or
sbbl
lcall
dec
xor
add
call
jp
scas
hlt
mov
lea
mov
push
ljmp
sub
or
lock
imul
sub
mov
cmp
andl
jmp
aaa
push
pop
mov
test
adc
data16
loope
xchg
jmp
jne
xor
dec
lods
push
inc
sub
leave
jle
mov
mov
test
push
sarl
mov
mov
mull
test
cmpsb
shll
adc
movl
cmpsb
push
cmp
or
or
push
loop
out
fucomi
fidivs
mov
dec
mov
or
xchg
test
pop
movsl
dec
fcmovnu
add
lahf
dec
mov
test
xchg
out
xor
shrb
mov
shrb
js
repz
cmp
pop
mov
and
sub
fildll
iret
xor
popa
lock
lea
sub
in
out
rclb
xchg
jge
xchg
xor
scas
push
arpl
test
jno
aad
mov
jnp
cmp
lods
dec
mov
mov
rcrl
out
call
cmp
xchg
inc
aaa
sub
push
mov
jbe
xlat
xor
mov
xor
fsts
sarb
es
int
pushf
push
insl
xchg
mov
or
les
sub
xchg
and
inc
pop
stos
jb
jne
adcl
jnp
mov
imul
sti
lea
mov
aam
rcll
or
mov
in
dec
adc
adc
xchg
xchg
shl
xchg
jl
push
ljmp
jb
inc
bound
push
cmpb
pop
mov
lea
cwtd
mov
rclb
push
xor
out
dec
out
pop
jb
fucom
int
mov
in
add
push
dec
and
not
es
fdivrl
jmp
pop
inc
repnz
lods
mov
sub
or
xor
sub
inc
inc
jbe
mov
sysenter
bound
loope
xchg
inc
lcall
mov
jns
sub
out
dec
cmp
cmpl
cmp
sub
xchg
adc
popa
dec
.byte
mov
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jl
add
jl
add
jl
add
adc
pop
jl
add
adc
hlt
jl
add
adc
fidivrs
es
add
add
add
jl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
jae
add
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
sbb
add
and
add
xor
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
incl
add
add
jge
add
add
add
dec
add
incl
add
add
jg
add
add
add
incl
add
add
orl
incl
add
add
xchg
add
add
incl
add
add
dec
add
add
add
incl
add
add
xchg
add
add
incl
add
add
add
add
incl
add
add
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
xchg
dec
add
add
add
incl
add
add
xchg
dec
add
add
add
incl
add
add
xchg
dec
add
add
add
incl
add
add
xchg
dec
add
add
add
incl
add
add
cwtl
dec
add
add
add
incl
add
add
cltd
dec
add
add
add
incl
add
add
cltd
dec
add
add
add
incl
add
add
add
add
incl
add
add
movsb
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
incl
add
add
mov
add
add
add
incl
add
add
dec
add
add
add
rorl
rorl
incl
add
add
dec
add
add
add
incl
add
add
add
incl
add
add
add
add
incl
add
add
add
add
ljmp
dec
add
dec
add
add
add
fimuls
inc
fimuls
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
jmp
add
add
add
sub
dec
add
add
add
incl
add
add
cli
dec
add
add
add
cmc
dec
add
cmc
dec
add
add
add
add
add
add
add
decl
std
dec
add
add
push
add
add
popf
push
add
lcall
push
push
add
add
add
incl
add
add
adc
add
add
incl
add
add
adc
add
add
incl
add
add
add
add
jmp
push
push
add
push
push
add
add
add
incl
sbb
or
push
add
add
add
call
push
add
push
add
dec
sbb
add
sbb
add
incl
add
add
push
add
add
add
incl
add
add
add
add
incl
add
add
and
add
add
incl
add
add
and
imul
gs
xor
cs
insb
add
add
imul
insb
add
add
gs
xor
fs
insb
add
outsl
insb
xor
cs
insb
add
add
jbe
jo
xor
cs
insb
add
add
outsl
insb
gs
jne
xor
cs
insb
add
add
push
gs
outsb
push
gs
js
gs
imul
gs
inc
jb
popa
je
inc
imul
popa
je
inc
imul
fs
imul
insb
outsl
jae
dec
popa
outsb
fs
add
je
imul
gs
add
je
imul
inc
js
je
jb
arpl
jae
inc
jb
popa
je
inc
imul
outsb
addr16
add
inc
jb
popa
je
inc
imul
outsb
addr16
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
inc
jb
gs
imul
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
insl
popa
addr16
add
dec
popa
jo
imul
insb
add
add
insl
popa
jo
imul
insb
add
je
imul
bound
gs
add
inc
gs
imul
bound
gs
add
inc
gs
imul
bound
gs
js
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
outsl
fs
gs
imul
add
inc
gs
outsl
fs
gs
imul
add
push
gs
jb
push
push
add
popa
jb
push
inc
add
fs
outsl
outsb
je
gs
jne
arpl
add
add
push
gs
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
outsb
fs
imul
gs
add
inc
imul
je
imul
outsb
fs
insb
outsl
jae
add
add
outsb
fs
gs
inc
imul
imul
inc
imul
imul
je
imul
add
pop
insb
outsl
jo
outsb
add
dec
jo
outsb
inc
imul
insb
jb
popa
add
pop
insb
insb
jae
imul
insb
arpl
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
add
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
js
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
inc
gs
jb
jbe
je
push
jb
imul
imul
add
je
jb
jbe
je
push
jb
imul
inc
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
dec
popa
insl
gs
add
inc
gs
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
je
imul
insl
popa
je
outsl
outsb
inc
jns
popa
outsb
fs
add
dec
outsl
arpl
imul
outsl
arpl
imul
outsb
insb
outsl
arpl
imul
outsl
arpl
imul
add
je
arpl
fs
outsb
outsw
inc
jb
insl
inc
jne
fs
add
je
arpl
fs
outsb
outsw
inc
jb
insl
push
jns
gs
outsb
outsw
add
add
fs
gs
jns
gs
imul
fs
jns
gs
imul
cmp
push
add
push
add
call
push
add
add
pushl
push
add
push
add
incl
sub
ljmp
sub
mov
sub
incl
add
add
sub
add
incl
add
add
add
add
incl
add
add
das
push
add
add
add
incl
add
add
add
add
incl
add
add
xor
add
add
incl
add
add
aaa
push
add
add
add
incl
add
add
cmp
add
add
decl
cmp
incl
add
add
cmp
jle
push
add
add
add
incl
add
add
push
add
call
pop
dec
add
incl
add
dec
add
mov
pop
dec
add
jnp
add
adc
add
add
add
add
add
add
jo
add
adc
mov
jnp
add
jnp
add
jnp
add
jnp
add
jl
add
jl
add
jl
add
adc
pop
jl
add
adc
hlt
jl
add
adc
fidivrs
es
add
add
add
jl
add
add
add
add
imul
inc
jb
je
arpl
push
arpl
outsb
add
push
jb
arpl
fs
jae
add
push
add
popa
insb
inc
jb
add
jae
inc
js
gs
imul
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
inc
add
jbe
inc
jb
je
arpl
push
arpl
outsb
add
popl
inc
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
into
add
popa
jb
push
inc
add
add
jae
insl
gs
push
add
popf
add
imul
jae
dec
gs
outsl
jb
add
nop
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
push
dec
inc
dec
xor
cs
insb
add
mov
inc
gs
imul
outsl
arpl
add
add
push
jae
push
imul
arpl
add
push
push
inc
push
xor
cs
insb
add
lret
je
push
outsb
ja
outsb
add
gs
push
dec
jne
je
inc
jns
add
dec
jne
je
inc
jns
gs
outsl
push
imul
cmp
dec
inc
dec
popa
jo
je
imul
add
popa
jo
je
imul
add
je
je
imul
inc
add
mov
inc
gs
je
imul
push
jne
test
inc
je
insb
cmpsl
std
sbb
inc
push
xor
pushf
xor
mov
fwait
rcrl
out
ret
dec
out
dec
je
mov
xor
cmpsb
sbbl
push
sub
adc
mov
imul
add
mov
push
push
out
xor
call
xchg
jae
mov
sbb
shll
enter
aam
xor
aaa
repz
push
in
sbb
stc
cs
sahf
dec
fcmovnu
or
pushf
xor
or
fildll
or
stos
fwait
std
test
rcr
push
out
lret
pop
je
repnz
lock
push
xchg
in
sub
dec
jnp
xchg
gs
adc
fistpl
xchg
mov
daa
or
ret
mov
pop
xchg
int
fcomps
mov
cs
addr16
sub
ss
jbe
xor
sarb
es
pop
inc
jb
cld
dec
ffreep
js
clc
cmpb
pop
sub
inc
inc
je
cmp
adc
push
in
xor
add
sub
adc
mov
add
xor
scas
dec
pop
iret
in
fs
push
sarb
movsl
sbb
roll
and
in
pop
pop
lret
push
movsl
mov
hlt
lahf
int
rclb
add
shr
mov
ds
sub
mov
imul
mov
movsb
lds
jge
dec
adc
or
mov
adc
push
into
push
lret
pop
sarb
out
xor
cwtl
lds
xor
mov
sbb
jno
adc
cwtl
mov
mov
ljmp
into
fidivs
pop
add
push
jp
int3
sub
repnz
testl
stc
ret
aas
push
lea
or
add
jno
mov
xor
sbb
lods
cwtl
mov
loopne
nop
lods
or
push
xchg
addl
ret
xor
push
inc
mov
loope
and
enter
jge
ljmp
and
daa
call
jmp
scas
insl
cmp
push
mov
sbb
test
xor
push
jle
fldcw
pop
mov
je
xchg
sbb
movsb
divb
mov
pop
mov
xor
int3
jge
sub
push
sarl
push
mov
cwtl
data16
in
ret
xchg
fidivl
ficoml
outsb
insb
dec
add
jo
sbb
cmp
aas
enter
and
sbb
std
pop
mov
cmp
or
pop
testl
sbb
cmpsl
repz
jns
or
jmp
jae
pop
sbb
lahf
mov
mov
xchg
push
xchg
jg
pop
xor
aam
andb
jge
outsl
ss
pop
mov
inc
lock
in
xchg
mov
nop
sarb
insl
cmp
push
mov
movsl
sbb
ret
imul
lahf
xchg
xchg
inc
adc
adc
sbb
push
int3
pop
es
cli
rclb
cmp
out
jecxz
dec
imul
scas
fwait
lcall
xor
mov
xchg
fadd
jbe
pop
xchg
js
cmp
lret
leave
push
pop
push
xor
xchg
or
add
sub
rcrb
out
xchg
std
into
adc
aad
addl
or
xchg
mov
enter
loopne
out
test
and
pop
test
addr16
rcr
popf
add
lea
mov
fs
repnz
push
mov
fldt
mov
inc
sub
inc
xlat
inc
roll
jg
xor
jbe
cld
cs
sub
arpl
fsubrs
rcll
add
mov
pushf
sbb
and
insl
adc
out
lds
mov
ljmp
sub
imul
hlt
fldt
in
adc
or
ficomps
cmp
ja
je
pop
push
xchg
sbb
js
dec
xchg
jne
subb
mov
cltd
fisubrs
popa
mov
adc
shll
or
or
dec
cmp
and
mov
inc
cli
movsb
cmpsb
lea
lods
inc
and
jg
push
push
mov
pop
dec
mov
nop
or
xchg
pop
in
pop
repz
mov
lahf
adc
stos
rorb
ljmp
push
ds
sub
cmp
xor
es
mov
mov
lods
es
testb
arpl
jmp
jo
sbb
test
out
sbb
push
dec
pop
aad
cmp
push
cmpl
and
xorb
lret
adc
rol
mov
loop
xchg
in
sbb
in
add
pushf
int3
jg
clc
cmp
leave
cs
aam
pop
sub
cmc
push
mov
outsb
and
mov
ret
movl
push
adc
mov
jmp
out
push
shl
dec
sub
push
pop
push
add
sub
cwtl
test
pushf
cmc
sub
data16
mov
dec
popl
pop
test
hlt
mov
push
inc
mov
add
shl
pushf
fdivl
and
scas
lock
cs
sbb
push
fldcw
cmp
aam
mov
mov
push
jo
pop
lret
mov
rorb
mov
push
fnsave
enter
push
loopne
int
test
add
scas
paddq
sub
sahf
mulb
cmpsl
repnz
aam
xor
outsb
sbb
and
inc
mov
jl
or
pop
lods
cmp
fbld
push
jo
jmp
aas
or
adc
mov
push
jp
mov
js
sub
movsb
mov
sbbl
mov
dec
mov
mov
xor
popa
sub
outsb
cli
pop
mov
and
dec
xchg
dec
mov
stos
out
in
push
add
sahf
mov
test
cli
sahf
sub
add
enter
call
es
pop
and
fnstcw
std
sahf
shrb
icebp
fdivrl
pop
dec
jae
fisttps
cmc
shr
sub
mov
mov
sbb
hlt
sbb
sbb
adc
xor
add
mov
mov
int
sbb
cmpsb
mov
push
lock
scas
into
cmp
rcrb
dec
and
sbb
adc
ss
pop
mov
push
ljmp
sub
ss
cli
out
xchg
jb
or
jg
mov
loop
xchg
or
pop
jp
lea
insl
pop
sbb
sub
les
fstpt
jp
pop
pusha
adcb
scas
lcall
mov
dec
daa
adc
in
sub
imul
inc
sahf
rcr
js
scas
cld
or
test
stos
inc
mov
xlat
sbb
cmpsl
arpl
dec
push
lret
int
or
fldcw
rcr
notb
mov
pop
lret
je
push
popa
rcr
inc
mov
mov
and
stos
or
out
inc
adc
test
pop
arpl
xchg
scas
sti
loop
out
std
xor
lods
scas
pop
inc
xor
test
shll
push
sub
out
pop
jp
gs
in
xchg
or
dec
test
aaa
sahf
mov
mov
lcall
dec
pop
pop
jge
popa
sbb
push
jb
or
pop
add
leave
rorl
add
mov
add
in
aad
jl
cwtl
mov
jb
pop
xchg
xor
add
rcrl
pushf
out
into
sub
aad
fildll
push
out
adc
pop
bound
scas
jmp
insb
dec
or
dec
dec
mov
addl
notl
andb
pop
pop
sbb
sbb
es
dec
into
outsl
jns
sahf
loopne
fstp
sub
and
inc
aad
cmp
xlat
pusha
mov
push
insb
xchg
shll
inc
repnz
stos
mov
mov
mov
sahf
notl
hlt
push
mov
pop
push
into
jp
adc
mov
mov
adc
mov
fidivs
out
ftst
xor
shl
xchg
and
mov
arpl
std
or
mov
xor
adc
adc
mov
pop
mov
adc
pop
loope
cmp
aad
pop
adc
int
leave
pop
je
pop
es
mov
movsl
shrl
mov
adc
xor
mov
mov
xchg
repnz
shll
fmuls
shr
rcrl
sub
mov
iret
jmp
ss
mov
jno
inc
dec
xchg
mov
das
and
lods
shrl
xor
mov
call
jl
mov
jo
add
fsubr
dec
out
rorl
test
pop
and
xor
mov
push
sub
loopne
pop
fisttpll
lods
dec
into
loope
inc
and
stos
jge
xor
out
loopne
std
pop
imul
orb
jbe
jge
movsl
xor
add
aam
mov
pop
push
mov
loopne
movl
xchg
or
inc
mov
push
mov
mov
in
and
mov
outsl
repz
fcmove
cli
xchg
mov
mov
sti
mov
or
pop
sbb
ljmp
cmp
dec
test
and
jle
push
jg
jle
cmp
mov
pop
lcall
popa
ds
ficoml
cwtl
and
inc
sbb
imul
out
dec
push
fldcw
and
out
jno
jo
lret
subl
test
pop
js
scas
in
in
push
fcomps
pop
cmp
inc
push
pop
fisubl
sub
pop
mov
pop
adc
cli
ret
lds
dec
mov
es
in
dec
fstpt
lahf
nop
mov
jnp
push
pop
hlt
mov
xor
dec
iret
out
push
call
adc
jns
push
lock
adc
test
cmp
add
fs
sbb
dec
xchg
out
jbe
cltd
jl
mov
and
mov
fcmovu
mov
push
cmp
out
dec
jno
push
jo
rorb
jg
mov
sub
test
xchg
xor
insb
push
push
popa
mov
jle
ror
fs
mov
iret
fisubs
and
jnp
adc
mov
jecxz
orb
test
jmp
xchg
push
pop
mov
jno
out
loop
and
adc
mov
pushf
lcall
fidivl
or
and
adc
sub
add
dec
sbb
xchg
cmc
mov
mov
jle
jl
imul
push
mov
xchg
jmp
loopne
data16
test
cmpb
and
pop
xchg
inc
insb
movsl
push
in
inc
div
lahf
inc
xor
mov
sarb
sbb
ds
addr16
lea
loop
sbb
pushw
stos
cli
fsubrl
rcrb
movsb
rclb
stos
push
out
mov
dec
mov
inc
call
mov
jb
lods
shrb
cltd
rcrb
jnp
and
dec
pop
xor
pop
dec
es
shrb
cli
sbbl
pop
fisttpl
and
inc
popf
xchg
pop
cwtl
int
xor
shlb
sub
cwtl
inc
test
mov
test
inc
pop
pop
mov
jne
into
pop
mov
push
xor
or
mov
pop
jb
mov
pop
icebp
add
cmp
std
jge
mov
mov
cmp
pop
clc
je
add
jo
sub
shll
notl
jb
test
cmc
push
pop
add
ror
adc
out
mov
xor
mov
out
jno
fidivl
dec
daa
outsl
add
jmp
fdivs
jbe
cli
jmp
sahf
or
dec
sub
mov
jle
ret
pop
xor
loope
inc
push
xor
cmp
adc
filds
movsl
movb
sub
loop
incl
push
or
sub
xor
outsl
adc
loop
mov
mov
icebp
aam
jg
out
iret
or
sbb
mov
mov
push
mov
jl
loopne
cmp
cmc
bound
fstpt
shl
inc
cmp
mov
fildll
aaa
insl
push
mov
mov
mov
test
cld
jg
lods
push
pop
into
jb
fwait
mov
mov
mov
dec
mov
cwtl
xor
fsub
lods
fwait
mov
lret
mov
mov
push
push
notb
or
imul
out
rorl
les
or
sub
jnp
dec
ret
pop
fisttpll
cltd
pop
test
sbb
push
aam
mulb
das
lock
scas
hlt
out
insl
jbe
jl
jg
out
fnstenv
push
aad
out
jle
xchg
add
sahf
xor
out
std
push
mov
out
xchg
mov
sahf
pop
fldenv
cmp
push
jb
hlt
gs
cmp
add
cmp
mov
xchg
lea
jb
mov
test
dec
push
int3
sarl
das
dec
aam
push
sbb
sub
xor
mov
add
test
sub
mov
scas
pop
dec
enter
mov
subb
and
dec
pusha
leave
sahf
xor
xchg
cmp
fs
xchg
push
int3
jae
lods
add
int
mov
cmpl
mov
add
pop
fcmovne
xor
pop
incb
mov
inc
inc
aaa
mov
lahf
popf
fcom
mov
add
int
jmp
jle
add
xor
data16
mov
imul
or
fldenv
hlt
hlt
adc
sub
fildll
in
lds
fildll
push
lods
test
xor
lds
hlt
add
in
mov
lock
test
push
mov
xor
mov
mov
jg
mov
iret
jbe
mov
iret
pusha
shlb
stos
insl
daa
out
outsl
fstpt
xor
jns
lret
jb
outsb
and
ret
mov
jge
call
or
repz
popa
dec
push
jge
xor
sub
fs
xor
cld
js
sti
fwait
aam
dec
repz
test
idivl
mov
mov
cmp
mov
movl
sbb
cmp
sbb
mov
inc
shlb
lock
pop
out
inc
and
cmp
nop
mov
loopne
or
dec
xchg
add
pushw
dec
push
xchg
out
pop
jp
add
xlat
xchg
jno
ds
das
aaa
fwait
in
shl
aas
push
gs
mov
int
jge
jnp
ja
sub
lahf
push
dec
pop
cmp
sub
ljmp
push
jge
add
push
mov
repz
lcall
lds
cmc
dec
add
xchg
movsb
jno
scas
lea
lahf
push
mov
ret
scas
test
inc
push
sbb
cli
pop
push
mov
test
pop
push
stos
hlt
adc
pop
lret
adc
xchg
pop
icebp
cwtl
ret
fnstenv
and
sbbb
inc
imul
cmp
mov
sub
das
push
outsl
loope
mov
icebp
or
xor
mov
sub
or
inc
adc
popf
inc
inc
fs
xlat
repnz
lret
daa
les
adc
in
lret
insb
sub
test
fisubl
or
inc
or
pop
jns
addr16
xchg
pop
cmpsl
arpl
mov
int3
mov
xchg
cmp
rcr
jne
cmp
sbb
dec
adc
cwtl
add
cmp
lds
dec
add
aaa
jb
mov
test
ret
in
inc
out
jecxz
pushf
scas
pop
fstps
stos
pop
mov
push
les
dec
and
and
sbb
dec
adc
scas
push
insb
adc
adc
aaa
adc
js
mov
lods
dec
lret
sbb
into
fadd
out
fisttps
movsb
inc
jmp
xchg
jecxz
sub
and
fs
test
arpl
jl
daa
adc
cltd
mov
dec
addl
cmp
push
adc
lock
sub
insb
sub
std
out
fwait
mulb
push
cltd
rolb
inc
jo
dec
aas
xchg
loop
sub
xchg
adc
mov
test
pop
popa
in
inc
dec
mov
ret
push
xchg
mov
in
mov
sub
dec
scas
adc
xlat
fmull
out
lea
cs
pop
int
push
aas
cmpsb
pusha
call
fwait
js
jb
pop
mov
jge
jmp
aas
out
lds
xor
popf
sub
pop
adc
add
loop
push
rol
enter
add
jbe
push
add
push
xchg
pop
loope
push
and
iret
inc
adc
sbb
imul
dec
pushf
fcoms
fistpll
iret
es
pop
mov
adc
lock
ret
xor
pop
ss
sahf
ds
lods
ss
shlb
in
add
mov
mov
xchg
adc
push
pusha
push
push
sahf
lods
mov
loop
scas
loopne
shl
daa
aaa
inc
pop
push
mov
je
cs
dec
cltd
or
arpl
cltd
in
mov
and
jp
mov
leave
mov
lods
int3
into
sbb
xor
xor
mov
lret
repz
ja
jmp
mov
adc
push
lret
lods
insb
gs
sub
dec
dec
scas
adc
dec
add
std
insb
mov
mov
rcll
mov
sbb
int
mov
jl
xlat
mov
dec
sbb
aam
aam
stos
rorl
mov
cmpsb
xchg
adc
aad
pop
mov
test
cmpsb
pop
cmpsb
and
pop
mov
loope
push
mov
in
push
sbb
or
loope
pop
dec
pop
adc
sti
out
loopne
push
call
pushf
lret
hlt
and
push
push
xor
and
inc
add
dec
sti
mov
dec
dec
mov
push
xlat
je
fistps
inc
movsl
sub
dec
loop
addr16
mov
in
popf
in
mov
xchg
mov
jne
mov
jp
push
inc
inc
pop
je
pop
mov
cmp
sar
fsubl
dec
sub
sbb
and
jae
les
cltd
ss
jbe
outsb
test
cld
lahf
inc
notl
ret
push
lea
hlt
scas
pop
mov
mov
pop
pop
shlb
bound
push
inc
mov
mov
mov
and
and
push
mov
sarl
pop
push
sbb
lahf
jecxz
adc
mov
sti
cmp
mov
add
inc
jo
lcall
adc
mov
movsb
pop
push
ljmp
jg
stos
pop
jp
mov
cld
lock
or
pusha
test
aad
rcrb
mov
jae
nop
pop
js
addr16
push
cmp
pop
icebp
lock
cmp
inc
inc
or
and
cli
xlat
addl
mov
mov
fdivrl
out
movsb
and
adc
pop
lods
rolb
cmp
push
and
ret
sub
rolb
outsl
push
jb
dec
rclb
and
inc
adc
sbb
jl
jecxz
pop
int3
movsb
push
jae
dec
cmp
inc
inc
fcmovnb
imul
insb
out
lock
pop
and
ds
inc
popa
jmp
sbb
stc
repnz
add
aam
mov
shrb
rolb
fldcw
add
jp,pn
adc
sub
lea
fcom
ss
inc
hlt
and
mov
cmpsb
hlt
loopne
add
int
xchg
dec
mov
and
or
pop
mov
add
and
cmpsb
fisubrs
fcmovnu
jae
xor
cmp
pop
cltd
sahf
or
outsl
xor
mov
dec
fwait
sub
jg
rolb
inc
ljmp
sub
shl
inc
test
mov
xchg
jp
sarl
lods
shlb
aad
pop
cmp
push
enter
sbb
mov
ss
xchg
insl
shll
xor
cmp
mov
sub
xor
mov
sbb
xor
mov
fistps
test
inc
sahf
cmpb
sbb
mov
lea
mov
cmp
or
or
sbb
cmc
push
sar
ja
gs
jae
outsb
sub
xor
cmova
scas
es
aas
lahf
rcl
fdivs
sub
cmp
das
cmpb
test
push
cmp
cmp
dec
pop
into
in
jmp
inc
mov
jbe
andb
scas
push
xchg
das
subb
out
ret
mov
inc
dec
inc
cwtl
xor
scas
rcrl
loopne
lcall
dec
mov
sub
test
test
addr16
daa
test
bound
int3
dec
imul
aaa
pop
fiadds
xchg
insl
data16
push
scas
test
fsubrs
das
mov
aas
mov
cmpsl
in
mov
cltd
std
fdivrs
sahf
aas
dec
push
fnstsw
mov
loop
or
inc
dec
loopne
push
orl
popl
stc
mov
arpl
mov
dec
stos
arpl
push
xchg
add
mov
cmp
rcll
aas
or
popa
or
mov
sarl
ss
cmpsb
pushf
cwtl
sub
cs
jns
cmc
add
das
stc
ror
cmp
cs
push
in
or
loopne
dec
in
stos
mov
psubq
fwait
sub
cld
into
push
out
sbb
insb
push
sbb
mov
cmpsl
pusha
into
ret
cmp
adc
mov
jle
movsl
push
cmp
jnp
cmp
pusha
imull
xchg
out
lret
and
jecxz
push
mov
push
mov
dec
pop
enter
sbb
pop
cmp
add
shrl
push
repz
dec
popa
test
int
mov
inc
loopne
push
sarl
add
jl
sub
loope
jle
adc
xchg
inc
and
xchg
clc
scas
jmp
into
in
push
mov
cmp
in
cmp
lret
sbb
shll
mov
mov
xchg
xchg
mov
xchg
pop
adc
divl
jns
in
fisubl
pop
adc
mov
xor
pop
mov
dec
or
loop
stc
inc
call
in
out
jle
loopne
and
pop
add
mov
mov
sub
jl
outsl
cmpsl
pop
test
lcall
sar
arpl
stos
xchg
mov
sbb
mov
imul
sub
imul
jge
adc
cwtl
ret
cmpsb
dec
push
mov
popf
imul
mov
mul
jmp
inc
inc
adc
jp
pop
adc
or
cld
insl
or
pop
mov
cmpsl
out
pushf
dec
shlb
mov
in
xchg
nop
movsb
cs
xchg
hlt
or
add
faddl
iret
inc
sub
test
popa
ret
enter
addb
loop
pop
ret
in
call
stc
into
into
dec
outsb
sti
xchg
or
idivl
stos
mov
lods
cmp
in
enter
shr
xchg
mov
insb
adc
jno
push
ret
push
xlat
mov
jo
jae
xchg
scas
gs
mov
cmp
pop
inc
imul
lret
jl
ds
mov
cs
imul
inc
gs
ret
mov
mov
cmpsb
cld
cmp
icebp
xchg
push
out
imul
dec
fs
std
lods
xchg
mov
pusha
or
sarb
in
lock
push
mov
xchg
add
jbe
shl
outsb
ret
jmp
cli
xchg
add
fistps
mov
sub
imul
push
pop
pop
movsb
push
and
pop
jae
les
sahf
sbb
inc
aad
pop
aas
or
ss
xchg
mov
inc
jle
in
pop
scas
xor
push
add
loop
xchg
iret
inc
test
test
inc
call
jbe
decb
mov
loop
dec
out
aas
mov
xchg
and
dec
jmp
and
push
mov
mov
and
scas
call
scas
push
in
xor
ret
rcr
fistl
ss
iret
inc
mov
mov
and
pop
data16
ret
jo
add
adc
adc
jns
add
bound
divl
fsub
lods
clc
dec
pop
shll
or
push
cmp
jb
dec
add
cmc
call
and
arpl
inc
