fdivl
xchg
in
jnp
sub
inc
push
subb
push
xchg
adc
push
test
mov
divl
mov
mov
add
pop
imul
call
mov
xor
aaa
cwtl
stc
xchg
adc
cmp
sbb
fcoms
dec
bound
inc
leave
bound
loop
mov
repnz
stc
jmp
clc
or
push
out
pushf
xorb
cmp
cmp
leave
ret
mov
adc
shlb
scas
mov
sbb
out
aam
icebp
xorb
or
push
sub
loope
aad
into
insl
jmp
pop
xchg
adc
flds
mov
push
xchg
cmp
fstps
lea
xchg
dec
sbb
jmp
jb
fidivl
in
xbegin
pop
cld
fmull
out
xchg
and
dec
pop
fists
jg
xor
neg
add
push
nop
rcr
aam
inc
dec
repz
std
das
sbb
or
xchg
sbb
jg
add
push
mov
adc
das
push
jns
pop
push
mov
mov
pop
xchg
dec
pop
add
pushl
pop
xchg
cmc
scas
pop
movsb
adc
cmp
es
xchg
adc
pushf
bound
outsb
sbb
test
and
repz
iret
daa
sahf
sub
inc
jbe
shl
pop
sahf
lds
lcall
dec
jne
scas
loopne
adc
aas
cmp
mov
mov
cmp
jge
scas
call
cmpsl
inc
shr
xchg
lods
mov
sub
imul
xlat
out
stos
fmulp
pop
shl
lahf
dec
dec
inc
mov
sbb
daa
loopne
cmp
mov
mov
leave
push
arpl
in
inc
cli
and
push
scas
pop
cmp
pop
cmp
mov
das
mov
fimull
lods
movsb
xchg
push
or
xchg
ret
push
test
xchg
leave
inc
arpl
push
push
loopne
sbb
cmp
ret
fstpt
xor
outsl
sbb
push
push
lret
lcall
pop
sahf
xchg
enter
mov
add
xor
adc
jae
rcll
insl
xor
and
dec
sub
or
sbbb
je
sub
aas
fstpl
ds
pop
mov
push
pop
mov
jbe
mov
lahf
in
sub
xchg
mov
sub
and
add
dec
fwait
addr16
pop
jbe
pusha
iret
dec
sbb
ds
or
mov
mov
in
pusha
outsb
cmp
or
outsb
sbb
leave
adc
mov
sbb
lods
mov
shrl
outsl
push
xchg
dec
insb
dec
inc
ret
xchg
sarb
mov
inc
into
ja
adc
ret
mov
fwait
pusha
xor
and
mov
loopne
cmc
fwait
dec
adc
cmp
adc
sub
movsb
push
stos
stos
adc
xchg
mov
and
pop
and
sahf
icebp
leave
mov
mov
sbb
stos
mov
fmull
stos
in
nop
sbb
push
fisttps
xchg
lods
std
mov
arpl
add
pop
stc
js
ljmp
sbbb
mov
rcr
nop
xlat
negl
mov
and
mov
ljmp
sti
and
ljmp
pop
add
cmpsb
xorb
nop
aas
js
in
in
iret
in
mov
cmpsb
enter
or
cmc
outsl
sbb
xchg
stc
adc
es
sahf
sub
jno
daa
or
or
in
or
ror
jnp
cmp
js
xor
out
mov
ret
enter
int3
and
loopne
imul
dec
cli
lret
nop
imul
aas
push
lret
pushf
inc
add
dec
cmp
jnp
xor
jecxz
and
pop
ret
test
adc
pop
rorl
lods
sub
mov
aaa
lret
js
nop
int3
pop
mov
in
mov
pop
ficoml
not
xchg
xchg
sbb
sahf
adc
int3
push
xchg
adc
lods
inc
sub
mov
sub
nop
add
mov
cmp
xchg
sbb
das
cmpsb
outsl
sub
rcrl
ljmp
ds
sbb
scas
daa
xchg
adc
test
cmp
lahf
inc
aad
adc
enter
adc
icebp
xchg
push
dec
jns
lret
xchg
scas
cmp
xchg
out
mov
shll
test
xchg
push
push
aas
inc
xor
pop
and
cmp
and
sub
aad
adc
std
insb
test
sti
xchg
xlat
fsts
cltd
iret
add
aaa
xchg
dec
xchg
shll
test
rcrl
insl
shlb
jge
xchg
lret
xchg
lcall
inc
and
shlb
cld
and
mov
sub
push
sbb
popf
xchg
xchg
mov
jno
mov
mov
sbb
xor
inc
mov
pop
xor
xchg
pop
adc
and
sub
xor
or
adc
fsub
mov
shl
repz
bound
pop
cmc
idivb
int
lock
sub
pop
ds
rcl
or
mov
xor
test
aaa
add
mov
adc
mov
adc
lahf
mov
nop
lahf
lods
fcoms
inc
xor
in
out
pop
pop
sahf
xor
xchg
pop
push
mov
xchg
cmp
inc
mov
mov
shrl
or
sbb
sbb
lock
sbb
outsl
dec
add
mov
xchg
outsb
shrl
mov
sub
dec
outsb
mov
ret
in
adc
in
mov
mov
mov
mov
lock
dec
jmp
xchg
pop
stos
sub
xchg
daa
popf
scas
sbb
adc
std
add
into
in
fwait
pop
xchg
pushf
sub
mov
orb
jae
stos
adc
jne
stos
aam
sub
xchg
sub
jnp
xchg
popa
mov
xchg
sub
js
sahf
jnp
imul
dec
dec
das
movsl
xchg
mov
int
shrb
das
mov
mov
sti
xchg
out
xchg
outsl
lock
rcrb
sub
pop
mov
out
lahf
and
bnd
lahf
push
fisttps
or
xchg
dec
das
xchg
adc
lock
rcll
addr16
lcall
ja
arpl
xor
or
xor
or
inc
out
outsb
mov
mov
sub
leave
xchg
cwtl
push
ret
xchg
xchg
imul
lds
scas
sahf
mov
add
cs
push
hlt
cli
xor
in
mov
sar
dec
jecxz
js
mov
sub
dec
imul
mov
mov
nop
lods
mov
rol
pop
outsl
jmp
inc
pop
lods
sub
movsl
push
cli
cmpsb
dec
pop
stc
cmp
bound
dec
pop
sbb
dec
fcompl
mov
push
mov
in
jle
adc
cmp
imul
clc
aad
fsubrp
sub
aad
mov
rorl
das
jp
imul
bound
mov
orb
xchg
inc
ldmxcsr
leave
adc
add
pop
mov
xorl
cs
cli
clc
loopne
sahf
sti
lret
xchg
lret
xor
testb
stos
mov
xor
cmpsb
shl
ret
in
rcrb
je
ret
pop
inc
sub
mov
shlb
and
negb
push
sub
sbb
ret
je
inc
lahf
sub
jne
add
shrb
dec
xchg
mov
repz
dec
mov
fcom
stos
mov
dec
sti
cmp
push
mov
mov
or
jns
arpl
stos
mov
or
imul
scas
mov
in
gs
pop
mov
sub
pop
mov
mov
xor
outsl
jmp
ds
arpl
xor
imul
shrb
jp
outsl
inc
mov
insl
pop
push
icebp
mov
and
insl
dec
xchg
orb
pushf
icebp
and
sbb
loope
int3
outsb
int
xlat
and
test
fistl
xchg
loopne
stos
cmp
clc
dec
loop
adc
in
nop
jmp
fisubs
out
cld
and
and
outsl
imul
and
mov
ror
mov
loopne
xchg
mov
cmp
xchg
pusha
push
xchg
lods
and
pop
or
jg
adc
shrl
addb
mov
dec
mov
push
imul
ljmp
je
negl
jae
pop
sbb
in
cwtl
xchg
push
jg
and
pop
fmul
xchg
fadds
and
les
inc
loope
dec
xchg
call
jo
dec
sub
push
push
cmc
pop
adc
add
cld
xlat
adc
test
scas
imul
imull
aas
outsb
push
int
dec
adc
out
cmp
sub
aam
shll
mov
dec
enter
das
xchg
mov
call
insb
sarl
cli
daa
lods
call
bound
mov
mov
adc
mov
fcmovbe
cmpsl
mov
or
pushl
mov
mov
cmp
mov
fwait
adc
rorl
loop
sar
jp
imulb
sub
movsl
mov
pop
cmpsb
lock
cld
xor
bound
sub
pop
scas
ret
loop
dec
pop
mov
fidivs
push
ds
mov
adc
fwait
out
xorb
push
mov
cmovle
nop
xchg
push
popa
add
pop
mov
xchg
adc
push
mov
jecxz
push
lret
mov
test
mov
push
mov
cld
mov
negl
shll
adc
cwtl
cli
out
mov
xor
out
jg
jb
cltd
sub
ficompl
pop
pop
xor
dec
ja
imul
sahf
adc
in
daa
or
pop
fsts
enter
pop
popf
cmp
jl
mov
das
lock
and
sub
rcrb
int3
ja
sbb
pop
hlt
lea
cmc
les
lods
subl
repnz
leave
add
js
inc
cmpsb
or
out
add
jo
jmp
ja
andb
gs
mov
xchg
popf
cwtl
cmp
loope
and
xor
out
or
cmp
sbb
pop
mov
dec
fadd
inc
mov
repz
cmp
jne
shlb
outsl
mov
ret
push
pop
int3
push
jns
jl
fsts
out
mov
push
xchg
les
inc
pop
nop
rcrl
push
lock
in
shl
inc
pop
ret
in
out
xor
aam
mov
dec
jb
arpl
xor
pop
enter
mov
push
cmp
leave
lock
mov
sbb
test
shlb
call
pop
xchg
mov
dec
aaa
or
call
sti
pop
test
jb
sub
cmp
dec
mov
stos
rorb
loope
add
jbe
xor
mov
movntq
jge
adc
outsb
xchg
push
out
jbe
out
aad
jo
mov
ja
lcall
xchg
aaa
fisttpll
das
sub
data16
rcrb
shrb
inc
popf
xlat
enter
jns
sub
lock
push
test
scas
xor
bound
movsl
das
jg
std
imul
je
clc
jmp
ja
cwtl
xchg
pop
mov
pop
mov
subl
repz
mov
adc
pop
lock
jo
jmp
jbe
lret
ljmp
mov
andl
es
es
mov
out
xor
jle
clc
and
jg
dec
mov
fcomps
test
leave
inc
arpl
mov
cmp
inc
mov
xor
adc
lret
orl
fs
mov
pushf
mov
adc
xchg
xor
hlt
mov
ljmp
inc
mov
clc
lods
push
fidivrs
xor
rcll
clc
stos
pop
fimull
adc
jp
in
cmp
rolb
or
xchg
fsts
mov
int3
sbb
mov
lret
popa
and
jge
adc
jg
cmp
repz
xchg
mov
pop
rcr
push
xchg
fisubrs
ja
push
sub
icebp
cmp
jb
mov
lock
push
repz
jae
mov
shr
mov
js
add
lahf
inc
pusha
mov
rcll
push
mov
mov
mov
sub
lods
pop
and
pop
xchg
aad
out
sbb
mov
lret
xchg
pop
sub
nop
push
mov
movsl
cltd
mov
dec
xchg
inc
xor
push
mov
jnp
mov
repnz
mov
popf
repnz
jae
in
in
push
loopne
xchg
push
jne
loop
sub
xchg
ror
mov
fsubp
stos
mov
adc
shlb
mov
fsts
into
adc
inc
push
fnstcw
shlb
repz
mov
and
js
mov
sbb
or
es
out
filds
pop
push
aad
and
mov
xor
xchg
ret
lea
bound
pushf
cmp
test
push
mov
ss
jnp
repz
fwait
xchg
xchg
mov
sbb
add
add
stc
mov
and
outsl
mov
cmp
aam
pop
sti
aad
push
lods
cwtl
les
mov
pop
sub
divb
lds
call
sub
mov
fcomps
mov
dec
daa
ljmp
shlb
ja
sbb
cmp
lret
stc
mov
cmp
pop
pop
int3
xor
jmp
scas
sbb
inc
mov
pop
cmp
push
pushf
mov
ret
insb
or
push
push
fnstsw
iret
loop
pop
nop
call
int3
and
lahf
jno
mov
cmp
xor
aad
neg
into
lods
sub
fadd
or
in
lahf
fdivs
mov
inc
dec
xor
lods
ds
fcoms
aaa
xchg
jb
push
lret
loope
adc
pop
repz
fcomi
in
sarl
or
pop
lret
pop
loope
out
stc
cmp
icebp
lea
cmp
pop
jo
lret
xchg
sbb
xor
ret
xchg
sbb
jns
push
stc
lock
jae
push
and
in
sbb
out
xor
xchg
and
mov
push
adc
stc
jbe
jmp
and
inc
rcll
mov
add
lea
push
xor
aam
cmp
push
test
or
out
fcmovbe
mov
fnstenv
push
and
rorb
jge
jno
out
fisubrs
mov
add
xchg
xchg
aam
adc
ljmp
lret
iret
jmp
les
sub
imul
rcrb
movsb
mov
inc
out
aam
cmc
cmp
pop
jl
or
xchg
fnstcw
out
enter
cwtl
and
movsb
push
std
jno
xchg
leave
push
or
jne
out
sarb
mov
mov
xchg
xor
cltd
mov
mov
push
clc
std
push
mov
aas
inc
fisttpll
jl
jg
pop
inc
xchg
sbb
test
cmp
rcll
les
adc
adc
sbb
test
xchg
push
sub
aaa
dec
jae
mov
test
gs
push
or
mov
pop
sahf
inc
adc
xlat
sbb
xchg
push
lahf
fmulp
test
hlt
jae
call
push
adc
in
xchg
mov
pop
push
js
xchg
cld
rcrb
repnz
out
sar
imul
movsb
dec
jbe
xchg
dec
cmpsl
stos
js
pop
push
jle
jle
fildl
push
js
out
mov
mov
les
adc
nop
mov
mov
cmp
es
sub
mov
aas
dec
int
ds
lock
outsb
push
xchg
pop
iret
ffreep
pushf
out
jl
test
int
subb
dec
add
lods
and
lret
mov
xor
or
rorl
fildl
jge
inc
mov
mov
mov
repz
cwtl
mov
adc
cli
or
inc
pop
jle
adc
in
cltd
shr
aam
daa
lock
xchg
dec
pop
leave
das
gs
mov
dec
shlb
out
xchg
aas
add
sub
inc
bnd
or
lods
cld
cltd
inc
xchg
adc
pop
xor
dec
testb
inc
jbe
out
ret
add
imul
mov
sub
inc
sbb
shlb
test
mov
insl
and
dec
iret
insb
inc
not
dec
mov
sahf
insl
inc
sahf
or
mov
and
iret
movsl
and
inc
and
cmp
js
xchg
fdivrp
testl
xlat
or
int3
call
cmp
mov
or
inc
jbe
into
dec
repnz
dec
lea
jbe
cmpsl
mov
call
fsubrl
ss
pop
xchg
pop
sub
mov
std
or
sub
test
and
in
scas
push
fmul
mov
movsb
out
push
cli
aad
push
sbb
stos
or
cs
xor
jnp
incb
imul
xchg
inc
mov
stos
pop
in
mov
cmc
mov
lock
ret
and
inc
sti
outsb
pop
sub
sbb
mov
aad
pop
push
popf
das
xor
outsb
imull
daa
xor
out
shll
pop
orl
out
xchg
inc
ja
sti
and
iret
and
iret
adc
test
dec
mov
mov
mov
pop
iret
jle
in
mov
scas
push
jge
stos
scas
iret
pop
int
lock
lcall
mov
int
das
push
fisubs
mov
out
cmpsb
jno
sbb
scas
cmp
loope
mov
mov
sbb
les
lahf
fists
fstl
jb
add
imul
aam
add
dec
adc
test
cli
xlat
pop
ret
jg
and
jecxz
icebp
mov
lds
and
adc
iret
mov
pop
jae
stc
pop
mulb
dec
cmc
mov
mov
repz
cmp
int
sbb
sbb
dec
pop
add
dec
jns
lcall
sbb
pop
jo
lahf
not
cmp
cld
adc
packsswb
mov
jno
ret
outsl
fdiv
xchg
cmp
enter
scas
outsl
inc
ret
fsub
scas
fistl
pop
xor
dec
mov
dec
scas
sbb
lret
pop
aad
xor
into
negl
aam
mov
jae
or
daa
insb
xor
mov
scas
sbb
cmc
sarl
enter
lods
inc
rclb
pop
iret
daa
fwait
daa
pop
inc
sbb
jnp
dec
or
xchg
dec
fs
dec
and
and
les
lods
loopne
and
scas
mov
jae
fwait
push
fisttps
addr16
mov
lock
mov
test
and
ljmp
sahf
inc
imul
xchg
jmp
mov
lret
test
mov
in
jo
lods
add
aad
popf
ret
pop
cmp
mov
aam
inc
roll
imul
add
jae
jl
mov
hlt
and
jnp
shrl
or
cli
pop
cmpsl
or
insl
testl
cmp
mov
shlb
and
mov
xchg
clc
out
arpl
cmpsb
push
xchg
push
sbb
xchg
and
lock
cmp
add
push
out
arpl
in
jb
scas
cmc
insb
das
mov
push
push
cmp
gs
in
cmc
adc
sbb
mov
xor
sub
icebp
mov
cmp
test
adc
push
pop
sub
jle
mov
xchg
add
adc
sub
shrb
cwtl
icebp
mov
jge
negb
mov
xchg
sbb
xchg
add
xor
repz
aam
and
xchg
jg
mov
mov
es
clc
dec
sahf
xchg
sub
rorb
lods
pop
sbb
dec
ficoml
and
subl
lahf
insb
data16
idivl
nop
dec
xchg
aas
stos
adc
or
fdivrs
mov
stos
imul
jne
sub
adc
mov
dec
mov
popf
fmuls
sbb
mov
push
pusha
lahf
int
flds
sub
gs
cld
push
or
mov
mov
xchg
cmp
iret
jmp
das
mov
adc
dec
ljmp
cli
in
les
ds
stos
xor
pop
jle
pushf
adc
cmp
les
inc
xchg
mov
mov
nop
push
sti
or
push
sbb
mov
mov
roll
imul
pop
in
scas
fsubl
and
out
sub
stos
fidivrl
fildll
sub
lods
mov
adcl
lahf
aas
out
cmc
mov
mov
mov
hlt
jbe
test
or
dec
pop
int3
fcoml
shll
xchg
cmp
dec
sar
lret
cmpb
popa
add
adc
jl
mov
pop
push
cmpsb
int
clc
push
or
mov
pusha
enter
lcall
xor
adc
mov
mov
add
loop
dec
mov
push
push
mov
int3
in
cmpsl
das
xchg
lods
mov
rcrl
inc
push
push
xchg
scas
sbb
pushf
jae
pop
mov
xchg
bound
scas
or
aaa
fiadds
mov
psllq
xlat
ret
push
gs
xchg
jns
pop
mov
adc
xchg
scas
cmp
lret
aam
adc
sarb
int
inc
push
add
or
ds
ffreep
inc
divb
jl
or
push
clc
or
and
lret
adc
mov
pop
mov
or
clc
fidivs
fnstcw
out
add
and
rcrb
xlat
cmp
fwait
rcrb
inc
mov
repz
push
clc
jnp
mov
sbb
shrl
jp
xlat
sbb
xchg
xchg
xor
dec
imul
xchg
and
dec
ja
xor
das
sti
lods
xor
sub
ja,pn
lahf
jae
xor
add
push
pushf
mov
mov
jle
sub
jg
cmp
push
mov
not
mov
push
cltd
dec
leave
xlat
stc
or
push
mov
push
mov
arpl
rcll
xchg
in
outsl
inc
scas
jmp
inc
pop
xchg
xchg
mov
std
cld
ds
push
shll
xchg
add
iret
das
sar
jo
inc
xchg
aaa
sub
jae
in
icebp
inc
rcll
call
cmpsb
inc
mov
ds
xor
sbb
mov
mov
sbb
xchg
cmpsl
daa
mov
sbb
mov
scas
es
negl
mov
push
pop
jae
mov
inc
sbb
dec
divb
mov
and
jl
sahf
adc
rorb
mov
inc
jns
jne
xchg
xchg
sub
xchg
mov
pop
mov
pop
mov
push
daa
xorl
push
xlat
jl
scas
mov
xchg
sbbb
and
dec
ds
inc
xchg
lret
adc
sub
push
jne
ja
cwtl
subl
in
pusha
aas
dec
loop
pop
mov
fs
or
cli
inc
xor
ds
adc
pop
xchg
clc
lock
das
std
int3
ds
inc
das
xchg
lahf
loope
cmp
out
lret
call
push
lahf
pop
loopne
mov
daa
and
xchg
inc
dec
push
or
addr16
jmp
das
jle
insb
xchg
shl
or
lock
jno
sbb
sub
imul
iret
leave
aad
shlb
movsb
lahf
sbb
fimull
shlb
and
mov
and
iret
push
aam
jmp
outsl
cli
pop
fidivs
xchg
andl
dec
int
pusha
inc
jns
cmp
sbbl
and
mov
lock
fdivrl
adc
test
dec
lock
pop
xchg
inc
sub
jle
cmp
enter
sub
sbb
xchg
stos
rep
iret
daa
rcrl
inc
mov
xchg
stos
lock
jae
std
cwtl
aas
pop
push
nop
fiadds
test
lahf
imul
cmp
cmp
lahf
sarl
sbb
lret
cmpb
jae
scas
add
sub
scas
mov
shl
ret
adc
out
arpl
pusha
hlt
daa
in
call
test
pop
sub
or
add
jg
ficoml
sbb
cwtl
fdivrs
stc
das
xchg
sub
push
mov
pop
push
in
fisubrs
daa
stos
das
insb
push
inc
mov
test
cmpsl
mov
xor
pop
daa
mov
mov
daa
adc
sti
hlt
shl
loopne
push
sub
addl
jne
xchg
dec
fcmovu
cmp
dec
out
int3
out
fisubrl
pop
repnz
pop
jne
aaa
pop
inc
and
nop
je
sti
test
cmc
subl
sbbb
and
adcl
pop
jp
xchg
xchg
rcll
sub
lret
pusha
fistpl
sahf
loope
mov
dec
nop
jo
out
scas
pop
xchg
mov
pop
lods
test
scas
xchg
inc
scas
sub
jno
or
add
pop
nop
fs
or
stos
cmpsb
ret
mov
sbb
shlb
mov
mov
xchg
fmuls
sbb
fcomps
or
int
das
dec
stos
inc
and
mulps
lret
aas
cmp
int
das
push
and
sti
out
jle
mov
jae
inc
push
sub
sbb
push
mov
jp
xorl
jle
pop
jle
mov
sahf
cmp
outsl
lcall
push
cmpsl
and
inc
mov
in
daa
stc
mov
fdiv
fnsave
jge
or
and
xor
pop
pop
ficomps
sub
mov
or
fsqrt
stos
mov
or
and
push
mulb
bound
repnz
std
pop
fimull
rclb
nop
pop
jnp
stos
cltd
jne
orb
sub
inc
je
mov
dec
push
les
leave
push
xor
inc
shr
xor
adc
add
fs
daa
mulb
push
jmp
dec
pop
inc
mov
jns
mov
rcrl
xchg
pop
xchg
adc
push
fnstenv
or
xchg
cwtl
shll
sub
prefetcht2
dec
sub
mov
ud1
dec
push
test
and
out
pop
or
mov
dec
rorb
inc
shrb
mov
ret
mov
jg
mov
xchg
in
in
cmp
iret
nop
not
or
xchg
addl
inc
xor
jmp
je
jge
fsubrl
adc
popl
cltd
xchg
jns
icebp
in
shrb
push
idivb
add
mov
cmp
ret
push
call
insl
jg
lret
repz
loop
imull
jge
lahf
sub
movsb
adc
pop
fimuls
rclb
in
inc
push
imul
cwtl
xchg
xchg
sub
scas
xlat
jge
jecxz
mov
stos
or
das
or
data16
or
inc
xor
push
arpl
inc
xchg
clc
xlat
aaa
adc
dec
lahf
sarb
pushf
sub
pop
adc
mov
in
outsb
mov
xor
mov
and
mov
xor
fstl
stos
scas
rcrb
stos
sbb
out
mov
or
rcr
jae
mov
add
sbb
lret
or
test
lahf
push
mov
cltd
bound
jle
in
int3
inc
test
in
arpl
fsubs
arpl
mov
addr16
ficoms
std
std
or
test
rcrb
jnp
inc
push
jecxz
jns
xor
adc
push
sbb
loopne
and
scas
sub
notb
add
imul
sbbl
cmp
fnsave
movsl
jge
jae
sahf
fwait
insb
mov
adc
pop
and
insb
pop
xchg
negl
in
pushf
adc
clc
xor
dec
subl
mov
jbe
xchg
sbb
fsts
lods
scas
fdivr
xor
sbb
push
sub
aas
xchg
fwait
int
adcl
rcrl
adc
das
cmc
insb
popa
adc
call
xlat
test
cmpsl
adc
sahf
lds
mov
movsb
fsubl
sub
pop
insb
and
int3
xor
sub
leave
jmp
insb
pop
mov
xchg
xor
popf
popf
iret
and
dec
and
pop
and
xorl
nop
fdivrs
xchg
dec
push
shlb
adc
cmp
pop
leave
cmc
roll
lcall
mov
fs
cmp
adc
mov
mov
mov
jmp
aam
mov
bound
sbb
xor
xor
das
mov
dec
xor
adc
int
daa
mov
cs
pop
lret
dec
sbb
sar
or
cmp
cmp
lea
ja
es
fcoml
jo
mov
push
xlat
aaa
jge
sbb
adc
jge
add
repnz
jge
xchg
loopne
in
mov
loope
pop
inc
inc
lret
loopne
mov
mov
mov
rcrl
pop
fnstenv
test
aaa
popf
jo
mov
pop
faddl
scas
shrb
call
sub
push
adc
fcoms
pop
stc
pop
ja
notb
lcall
mov
adc
mov
int
sub
ja
into
jmp
test
and
or
test
cmp
push
and
jbe
pop
mov
hlt
add
xchg
cmc
dec
mov
xchg
test
pop
outsb
adc
mov
stc
jmp
mov
addr16
cltd
lock
xor
mov
xorb
cwtl
or
test
dec
scas
xorl
ret
dec
nop
add
xchg
lahf
test
xchg
mov
fsubs
mov
call
mov
jno
mov
dec
je
xchg
or
jo
add
adc
movb
add
jmp
sbbb
jmp
lret
mov
inc
adc
fs
pop
xchg
outsb
mov
dec
xchg
mov
add
adc
stos
int
push
daa
cmpsl
push
inc
and
aad
add
pop
and
cmp
xchg
mov
lea
fdivs
aam
mov
adc
dec
das
repnz
cmp
jbe
cltd
mov
js
sbb
xchg
std
adc
push
cmpsl
and
cmc
mov
mov
mov
aas
sbb
pop
sbb
jecxz
filds
cmpsb
push
fsubs
lahf
gs
jno
mov
jns
inc
cmp
stc
xchg
mov
push
iret
in
bound
stc
mov
ds
fwait
xorb
shll
gs
jno
pop
ljmp
pop
cltd
outsl
in
leave
cmpsb
outsl
jmp
mov
decb
jl
daa
push
loop
pop
fistps
scas
ds
dec
and
dec
out
out
inc
frstor
adc
push
and
dec
out
jp
dec
or
lret
and
das
or
sbb
xchg
jge
faddl
ljmp
mov
and
push
sub
mov
cmp
movsl
in
xchg
into
dec
leave
ljmp
enter
aam
inc
mov
sti
xchg
pop
lret
inc
aas
div
jnp
push
lods
jge
cld
movsl
dec
aaa
pop
out
fidivrl
xchg
js
shll
in
dec
movsb
popa
je
add
dec
add
std
xchg
test
jge
cld
xor
xchg
lods
xor
in
adc
xor
ljmp
jmp
xlat
xlat
jg
in
push
fmulp
jmp
aam
push
push
pop
sbb
inc
lahf
sub
jecxz
sub
int
gs
negl
sbbb
push
repz
mov
mov
dec
jmp
xchg
ljmp
lea
mov
popa
fwait
push
fimull
mov
mov
rclb
jae
xchg
push
shll
mov
outsl
repz
mov
leave
sahf
pop
stos
pop
cwtl
and
cmp
adc
stos
in
pop
std
inc
jo
mov
shll
push
lret
cmp
adc
jmp
fwait
mov
dec
and
push
xchg
dec
cmp
out
mov
les
xchg
jo
int
mov
sub
daa
jnp
add
outsl
sahf
mov
dec
popa
add
ud2
dec
or
cmc
int3
push
jnp
ret
and
and
in
mov
ds
ret
loopne
hlt
push
mov
movsl
shrb
lahf
xor
pop
icebp
daa
hlt
and
js
mov
ret
fwait
imul
arpl
sbb
popa
xor
xchg
popf
aas
mov
dec
inc
in
xchg
adc
pop
xchg
xchg
scas
dec
mov
test
add
xchg
int
mov
add
jns
lahf
mov
outsl
iret
dec
ret
xchg
loop
lods
bnd
adc
xor
dec
sti
pop
and
cmp
dec
mov
negl
push
cmp
xlat
jmp
jne
mov
fwait
jb
ret
xchg
rorb
faddl
sub
clc
inc
iret
outsl
adc
es
test
je
shlb
xchg
mov
jge
inc
xchg
push
rol
ljmp
sub
hlt
clc
xchg
fldcw
psubusb
clc
sbb
jne
jb
push
mov
cmp
pop
mov
imul
xor
push
inc
loopne
adc
sub
mov
cmp
xchg
mov
inc
fcoml
jmp
and
fdivrs
mov
cmp
push
repnz
pusha
das
lahf
cmc
add
sbb
pop
cltd
push
rcl
popl
or
shlb
ficompl
rclb
into
mov
and
pop
xchg
rolb
push
xchg
and
mov
insl
fxch
lock
push
push
ret
add
in
sub
inc
xchg
lock
xchg
es
mov
cmp
pushf
mov
sbb
out
adc
mov
sarl
xor
sub
dec
lret
test
outsl
cmpsb
lods
lods
pop
jge
fmulp
xchg
aad
in
jge
dec
dec
mov
scas
inc
int
add
or
add
lret
pop
xor
mov
xchg
xchg
or
out
out
add
aad
les
or
mov
push
roll
mov
mov
sbbb
inc
aas
outsb
and
lock
and
andl
in
pop
in
leave
in
ljmp
fimuls
out
call
mov
xchg
adc
loopne
int
xor
xlat
pop
pop
sahf
frstor
out
lock
shl
nop
cmpsl
sub
push
das
stos
lahf
xchg
fildll
xchg
lods
dec
pushl
gs
rorb
dec
f2xm1
push
div
fwait
leave
ficompl
push
idivl
outsl
cmp
inc
sub
je
es
mov
call
and
dec
shlb
mov
sbb
stos
xchg
pop
mov
xchg
rcr
add
lock
cwtl
xchg
hlt
sub
popf
cmpsb
pop
mov
insl
cwtl
mov
test
xchg
cmpsl
adc
mov
shll
js
xor
mov
addr16
jns
or
pop
and
dec
inc
cmp
sbb
fidivrs
inc
scas
dec
add
sar
fldl2e
and
scas
loopne
test
pop
imul
loopne,pn
or
lret
popf
and
rcrl
pop
adcl
adc
stc
inc
add
ret
cmc
pop
testl
xor
outsb
add
pop
xchg
and
or
mov
movsl
mov
push
inc
or
xor
jns
mov
nop
clc
xchg
pop
lods
lods
cs
in
pop
daa
jp
mov
jmp
xor
adc
sbb
inc
sub
cmp
cwtl
rolb
xor
ljmp
jecxz
dec
mov
pop
mov
cwtl
xor
divl
cmpsb
pop
jp
fwait
pop
adc
xchg
leave
cld
xchg
mov
mov
cmp
cwtl
mov
push
or
je
add
lods
or
test
mov
nop
scas
push
mov
int3
push
call
or
sarl
loopne
mov
scas
push
inc
inc
adc
leave
add
mov
pop
inc
fidivrs
pop
cmovp
icebp
jno
decb
fidivs
xchg
xchg
or
adc
jb
cli
fisubl
addr16
imul
fwait
xor
sbb
aas
test
xchg
fwait
lock
addb
pop
push
out
jae
in
and
and
jne
shll
xor
ret
mov
stc
mov
sahf
mov
je
fcompl
jb
scas
ffreep
aas
mov
jae
push
mov
mov
lock
scas
or
sar
mov
mov
mov
das
xchg
add
icebp
jae
std
xor
xor
nop
cs
dec
nop
repz
stc
fcmovnbe
lahf
and
lods
pop
inc
aam
mov
outsl
ljmp
das
es
insb
mov
mov
lret
sbb
test
jg
push
inc
mov
movsb
xchg
inc
jae
push
daa
dec
lods
scas
arpl
xchg
dec
dec
testb
shlb
xchg
inc
xchg
xchg
stc
dec
ljmp
dec
sahf
aaa
cmp
or
ja
xchg
xor
mov
adc
and
xor
inc
fldenv
daa
xchg
ficompl
adc
orb
imull
leave
mov
sti
in
push
xchg
sbb
mov
mov
bound
push
js
out
les
cmpsl
arpl
push
mov
adcb
std
or
mov
mov
sbb
cmp
inc
out
mov
mov
scas
pop
adc
popl
mov
push
xchg
aas
lock
aas
lret
push
adc
mov
mov
inc
mov
push
in
mov
push
lahf
fidivrs
scas
mov
aas
cmp
fldcw
in
jge
pushf
xchg
jne
stos
cmpsb
cmp
mov
movsl
popf
pop
jecxz
popf
rol
xlat
insl
pop
jae
cmpsb
push
scas
aas
in
xchg
stc
adc
dec
pop
mov
iret
movsb
scas
pop
scas
aas
mov
je
xchg
outsl
cli
dec
push
adc
clc
inc
mov
jl
scas
jmp
sbb
adc
mov
dec
dec
mov
mov
test
out
adc
mov
ja
and
inc
inc
xchg
pop
inc
loop
sub
xchg
or
xchg
js
mov
mov
cmp
lahf
fiadds
push
popa
mov
mov
xor
fnstsw
das
lods
int
sbb
scas
jge
push
sub
xor
pop
mov
mov
push
mov
pop
in
or
pop
nop
add
xchg
and
pushf
daa
add
pop
push
xchg
jo
out
fildl
aaa
cmp
or
mov
xor
cmp
push
cmp
pop
aam
or
add
lahf
pop
nop
push
ljmp
xor
out
inc
roll
dec
or
push
mov
xchg
xor
sbb
scas
jmp
pushf
aas
movsl
ret
mov
push
mov
pop
mov
mov
sub
or
das
jle
jae
lahf
add
mov
push
xlat
insb
adc
ffreep
mov
xchg
fwait
sub
in
shll
xchg
in
dec
int3
pop
lock
popf
cltd
in
test
fstp
aas
in
stos
mov
int
das
lods
lods
sub
sbb
test
outsb
mov
mov
pop
adc
xor
outsl
stos
ret
bound
and
pop
lahf
sbb
cmp
leave
mov
mov
or
xor
sbb
adc
sub
push
push
push
subl
jge
in
insb
jno
popf
mov
push
push
ja
inc
push
cmc
jno
pop
fcoms
and
sbb
add
pop
add
stos
jno
rolb
fidivl
inc
nop
push
mov
fistps
cmovns
popa
add
mov
push
xor
pop
ret
jo
lods
lcall
cmc
cmp
test
mov
sbb
test
outsb
popf
cwtl
and
jmp
stos
xlat
fmull
dec
movsb
int3
cmpl
sub
cmp
and
mov
inc
inc
subb
push
jmp
or
rcr
xchg
mov
pop
and
push
cmpb
or
cwtl
ds
leave
cmpl
xlat
jo
lcall
jne
outsb
xor
cmc
sti
mov
adc
or
imul
jb
xchg
arpl
fdivr
test
xor
aas
push
jnp
sub
mov
stc
mov
fmulp
in
mov
pop
les
imul
inc
cmp
pushf
adc
pop
cwtl
cmp
inc
adc
push
mov
popa
std
mov
pop
mov
scas
pushf
ds
lahf
jmp
xchg
in
xor
mov
lock
mov
scas
nop
enter
jg
or
ret
lret
sub
adc
insl
stos
jo
ja
push
push
bound
mov
jp
inc
push
insb
loopne
inc
pop
icebp
xchg
insb
jne
into
les
in
push
jae
cmpl
mov
push
imul
mov
rcrb
inc
lcall
xor
fdivl
push
xchg
sarb
mov
xor
or
push
sahf
push
pop
mul
jg
pop
inc
jae
mov
mov
jae
mov
lods
cwtl
push
xchg
xor
fstps
stos
xchg
sub
movsl
ljmp
xchg
mov
ss
js
adc
sbb
leave
icebp
dec
mov
loope
shll
dec
mov
inc
sub
mov
mov
cmpsb
fcomps
mov
add
cs
leave
popa
sub
add
sub
push
lock
xchg
xchg
fnstenv
pop
lods
ret
aad
daa
cltd
movsl
mov
jl
js
add
lods
xchg
push
or
jge
dec
hlt
or
add
iret
aaa
cltd
lret
scas
mov
sbbl
scas
mov
xchg
sarl
movsb
pop
rol
pop
push
stos
popa
pop
xchg
xor
mov
jl
mov
push
das
sahf
jns
xor
mov
lods
dec
inc
cltd
jge
fcmovnb
fcmovne
pop
fsincos
insb
push
fmull
stos
test
int
test
cld
fldl
or
add
gs
mov
jbe
sbb
pop
and
jmp
mov
push
pusha
push
pop
mov
mov
cli
pop
xor
mov
mov
add
mov
test
les
insl
xor
imul
movsl
jmp
fucom
sub
js
adc
out
lcall
ja
lcall
sti
ret
inc
enter
lods
pop
rcll
xchg
xor
pop
stos
jmp
imulb
xor
ret
and
xchg
pushf
int
enter
mov
xchg
mov
xchg
and
roll
mov
cmc
nop
pop
fimull
scas
pop
or
mov
push
xchg
pop
cmp
adc
lods
inc
mov
xor
cs
jmp
push
rolb
adc
sub
outsb
clc
inc
test
cmp
cmc
stos
mov
test
inc
call
movntq
dec
mov
dec
sub
fldt
push
mov
pop
dec
test
push
lret
in
add
jp
jle
adc
mov
push
cld
int
arpl
cmp
jnp
popa
mov
leave
addb
pop
fisubrs
jo
iret
test
imul
mov
mov
xchg
xor
sbb
int3
and
and
or
repnz
es
xlat
test
shr
push
xchg
sub
mov
cmp
rcrl
call
mov
out
pmulhuw
inc
cmp
inc
out
mov
and
lahf
and
loope
and
adc
pop
imul
jne
sbb
pop
andb
mov
mov
fnstcw
push
ss
or
rclb
and
inc
cs
ja
test
in
cmp
in
add
out
ficoml
in
in
inc
movsb
adc
fildll
subl
mov
ret
dec
aam
sbb
sbb
andl
aas
adc
aad
lods
cmp
js
xchg
movsb
mov
dec
jmp
push
pop
and
jb
in
shrb
into
sub
jae
insb
mov
lods
xchg
mov
les
jg
imul
pop
cmp
push
push
mov
jbe
pushf
cmp
xchg
cmp
fdivr
mov
mov
xchg
mov
ret
inc
imul
cmp
mov
loope
cmp
sbb
jbe
jle
cltd
arpl
mov
mov
jge
insb
icebp
xchg
xchg
and
nop
push
lods
test
cmp
ljmp
adc
negb
loop
loop
rorl
arpl
mov
fdivs
mov
popa
icebp
or
dec
inc
mov
or
push
clc
add
or
clc
jo
push
jnp
fwait
shl
ret
cmp
faddl
xchg
inc
dec
xchg
mov
es
sbbl
mov
cwtl
shrl
push
ficompl
test
lods
out
xchg
xchg
pop
daa
jecxz
dec
dec
mov
popf
cmp
aas
mov
int3
xchg
stos
adc
lea
mov
loop
push
cmp
push
jbe
ds
add
fcomp
jmp
outsl
sbb
fcomp
call
jle
mov
xor
cmpsl
scas
rcll
cmp
bound
or
ficoml
lret
fsubs
jmp
fwait
jo
jns
cmp
mov
dec
test
dec
andl
loop
lcall
in
inc
ficoml
cltd
dec
fbld
in
push
adc
mov
mov
stc
inc
sti
test
rcr
inc
fwait
sbb
dec
xchg
cltd
lods
xchg
dec
mov
dec
pop
pusha
lock
adc
loope
and
adc
xchg
pop
cmp
push
fbstp
add
repz
lret
fldenv
push
dec
stos
adc
or
orb
ret
out
je
lcall
stos
mov
xchg
icebp
xchg
add
jnp
inc
fcoms
fdivrs
lahf
add
jns
mov
leave
and
pop
jnp
js
iret
pop
andl
sbb
dec
int3
cmpsl
sub
jl
mov
test
mov
mov
lret
xlat
mov
jle
inc
test
fstpt
adc
idivb
andb
cmpl
xlat
pop
and
xrelease
and
xchg
jecxz
push
xchg
andl
xchg
das
test
inc
shll
shl
xor
mov
or
sbb
jb
lock
mov
pop
xchg
pop
mov
mov
mov
push
inc
ljmp
fs
or
negb
xchg
pop
je
or
or
aas
mov
popa
adc
sub
insl
loopne
and
fcomps
bswap
mov
jns
sub
and
mov
xorb
and
aaa
jle
cld
xchg
push
xchg
cmp
out
push
or
adc
test
inc
sahf
sub
mov
sub
cmp
jle
mov
or
rcl
inc
xor
and
movsb
add
stos
test
inc
insl
add
adc
add
xchg
shll
aas
cmpsb
testl
adc
ljmp
cmp
repz
stos
adc
pop
mov
mov
jns
fidivs
or
push
xchg
in
push
aas
lcall
push
arpl
add
pop
cli
lret
sarl
cmp
pop
insb
push
aas
cs
dec
loope
mov
adc
or
pop
fwait
jns
hlt
or
sub
movsb
lods
clc
xor
ja
xchg
imul
jnp
jno
pop
rclb
repnz
jecxz
arpl
andl
pop
sbb
mov
imull
into
push
lods
stos
inc
int3
clc
xchg
pop
sarb
or
inc
scas
inc
push
push
scas
cmp
in
lods
bound
xor
cmp
jbe
push
out
into
and
int
mov
jle
shll
aad
movups
and
fdivs
pop
lea
pop
arpl
mov
cmp
fnstenv
adc
pop
sbb
mov
rcr
mov
sarb
push
xchg
outsb
sbb
mov
hlt
mov
in
adc
xchg
mov
aad
xor
stos
cmp
scas
sub
dec
fwait
enter
add
xor
xchg
push
dec
into
pusha
jae
stc
fldln2
adcl
icebp
aaa
push
rcrb
punpcklbw
ljmp
inc
pop
or
inc
ficompl
or
sar
mov
clc
dec
stos
dec
jb
lock
mov
jb
fucomp
fdiv
mov
jb
aam
repnz
jle
outsl
rcr
and
pushf
dec
or
icebp
into
push
jns
cmp
mov
loopne
inc
jp
sbb
pushf
ret
sbb
idivl
rcrl
mov
popf
adc
icebp
ficompl
sub
rcl
fwait
pop
adc
xchg
imul
fcomps
repnz
fwait
jmp
out
xchg
mov
shlb
add
test
xor
mov
popa
scas
xchg
lahf
mov
push
in
cli
dec
lods
mov
jb
ret
mov
imul
xchg
dec
scas
fs
mov
mov
cld
pop
push
jae
xlat
imul
pop
xor
inc
fcomps
ret
adc
lcall
clc
rdpmc
lahf
pop
adc
sub
ret
loopne
add
testb
lcall
xchg
sbb
push
mov
inc
or
xchg
or
mov
mov
add
lcall
ret
xchg
sti
inc
pushf
push
out
rcrb
xor
in
nop
cmpsl
jmp
loope
leave
aaa
into
xchg
push
inc
mov
and
xor
roll
scas
stos
out
rcr
cmp
cmp
subb
push
orl
pop
loopne
pop
and
out
push
enter
cltd
adc
cmpsl
xor
xchg
jl
cmc
pop
mov
push
fsts
sub
sub
fsubs
rcrb
sub
pop
mov
ja
ljmp
mov
pusha
popl
jnp
sbbl
fwait
add
aas
sub
js
sbb
mov
jge
mov
shll
mov
dec
jno
int
movl
icebp
notb
loop
rcrb
shrb
mov
mov
push
leave
sbb
outsl
rcll
push
xor
and
in
adc
pushf
mov
cmp
sub
icebp
mov
leave
mov
dec
xchg
dec
sarb
aas
arpl
psubsw
jg
and
mov
lock
xlat
outsb
in
cwtl
sub
dec
int
xchg
int
cmpsl
fdivr
aas
test
cmp
mov
jo
sub
jne
mov
cmpsl
adc
inc
andb
fcompl
jne
mov
divl
or
inc
pop
xlat
jne
jecxz
xorb
fisubl
dec
add
adc
or
loope
and
push
aaa
adcb
mov
imul
cmp
mov
ja
enter
sbb
int3
lods
js
sarb
adc
dec
loope
push
fadd
mov
fsts
mov
jo
rcll
xchg
mov
cltd
arpl
pop
in
mov
cmp
bound
xchg
add
jns
stos
out
call
xchg
js
scas
jo
xchg
sahf
cli
sbb
push
insb
lods
iret
add
imul
push
push
sub
clc
add
adc
cmp
mov
repz
add
cmpsb
mov
xlat
jbe
je
rorl
aaa
nop
xorb
cmc
insb
fidivs
sarb
fcom
sub
jnp
dec
aad
or
jge
pop
pop
and
in
push
movsb
cltd
icebp
adc
dec
dec
js
mov
jp
push
mov
jae
pusha
sahf
sbb
xor
aaa
adc
fidivl
subb
dec
mov
insb
push
fwait
xchg
lahf
call
mov
loope
push
dec
add
in
adc
loop
mov
sbb
cwtl
mov
jl
fcomps
inc
gs
push
xchg
repnz
insl
jno
sbb
sbb
pop
cmpsb
subl
sub
mov
inc
add
arpl
leave
enter
and
xlat
mov
dec
sti
mov
nop
sub
cmp
pushf
in
cmpl
rcrb
cmpsb
adc
or
ds
rorb
fmull
push
cmpsb
push
rorl
mov
stc
into
cmp
mov
lock
or
sbb
add
in
pop
push
lahf
sahf
xchg
fcom
stc
pop
std
xlat
loop
or
repz
mov
inc
lock
rcrb
xchg
lock
jbe
lahf
pop
inc
xor
push
add
loopne
sbb
dec
inc
test
aas
ret
lret
xor
fcmovne
push
addr16
icebp
or
stos
scas
xor
add
pop
out
sbb
pop
frstor
push
xor
xor
jp
mov
and
adc
and
pop
mov
jns
jns
cld
out
adc
aam
jg
das
mov
js
jno
jecxz
adc
int
cwtl
mov
mov
sub
push
sahf
fisttpll
stos
mov
mov
pop
gs
xchg
scas
and
sbb
mov
pop
lret
push
and
jo
inc
push
loop
stos
pop
clc
aaa
jp
jmp
mull
mov
add
lds
setae
je
push
sub
stos
mov
sahf
mov
mov
andb
shlb
sarb
in
pop
dec
or
inc
dec
adc
fimuls
dec
jg
shrb
gs
test
ja
xchg
jecxz
stos
mov
jp
jle
mov
pop
out
jno
js
cmp
std
push
mov
inc
mov
push
pop
add
jns
sub
xchg
lods
lods
cmp
sar
pop
jbe
hlt
movsl
jle
stos
mov
mov
cwtl
fsts
insb
adc
sbb
sahf
mov
into
sbb
aam
leave
out
jb
loope
xor
jbe
xchg
stc
cmc
je
test
pop
push
jp
sbb
lret
add
or
test
xor
xchg
mov
lock
xchg
xor
adcb
pop
fs
sbb
mov
push
xchg
pop
jbe
stos
das
lock
pop
mov
mov
gs
clc
outsb
cltd
cld
mov
insl
ret
pop
mov
push
jge
daa
js
jle
les
pop
jle
fists
sub
mov
sbb
or
jecxz
in
push
rolb
ljmp
std
cltd
fisubs
inc
jne
xchg
add
fadds
mov
lret
fstps
dec
in
insl
or
ja
out
mov
jno
ljmp
sarl
inc
dec
cmpsl
adc
lea
nop
jne
mov
jo
inc
nop
stos
xrstor
daa
outsb
or
jns
bound
inc
push
inc
mov
pop
ficomps
movsb
mov
in
arpl
int
fidivl
pop
pop
dec
sbb
lahf
fldt
js
popf
out
inc
push
mov
movsl
repz
aaa
dec
stos
dec
ja
adc
subl
sbb
mov
lea
sub
cld
and
push
std
mov
pop
test
dec
cmpsl
popa
push
cmp
cltd
sbb
jo
test
fdivs
and
shlb
mov
movsb
int3
stc
sbb
jbe
cmp
cwtl
mov
insb
mov
out
insb
inc
sarb
jmp
sub
push
cmp
iret
adc
xor
leave
jge
daa
pushf
push
or
mov
lds
insb
push
int
es
clc
aad
jp
jge
ficoms
inc
pop
cmp
mov
out
scas
insl
stos
push
vmovntpd
add
cs
mov
mov
sbb
les
lds
pop
ret
clc
jmp
scas
iret
ds
in
in
iret
ss
orl
out
pop
lods
cmp
cmp
mov
pop
out
fs
cmp
pushf
shrl
imul
sbb
fildl
dec
lret
pop
jecxz
scas
shrb
lret
jb
cmc
pop
dec
fstpt
js
mov
leave
incb
inc
pop
jg
decb
pop
jae
and
add
pop
ss
inc
adc
pop
jo
and
sbbb
int
js
fcompl
add
aam
call
cmp
leave
or
xor
adc
aad
and
and
in
in
inc
in
mov
pop
sub
imul
fcomi
mov
adc
inc
cwtl
shl
mov
jmp
xor
outsl
icebp
mov
out
data16
call
cmpsb
fsubs
scas
into
xchg
sub
aam
xchg
shrb
leave
in
push
mov
nop
lock
sbb
daa
lods
cli
xlat
sub
pop
jge
mov
mov
ds
xchg
jae
pop
sbb
pop
jp
imull
cmp
ficoml
test
out
jo
dec
xlat
push
dec
dec
sub
mov
lret
and
daa
lods
jecxz
lahf
pop
xchg
jmp
fsts
add
cmp
imul
pop
adc
cmp
push
adc
pop
adc
inc
enter
jge
lahf
cli
mov
inc
iret
flds
outsl
inc
shlb
mov
sbb
xor
mov
xchg
ret
enter
scas
pushf
stos
add
movsl
fdivrl
xor
iret
sbbb
sbb
shrl
rclb
xchg
sahf
andl
sub
in
nop
aas
xor
cltd
mov
mov
adc
ret
cmp
fildll
adc
rol
fnstcw
xchg
addl
jmp
mov
push
add
push
pop
xchg
fs
insb
or
sub
mov
movsl
inc
jnp
addr16
xchg
xchg
sub
mov
inc
pop
std
xor
addl
mov
add
mov
adc
lret
mov
les
jl
loopne
stos
mov
xor
shrl
ficompl
or
jle
mov
mov
xchg
sti
cmp
pop
imul
sub
aam
imul
sub
daa
mov
xchg
daa
jmp
bound
scas
mov
imul
mov
cli
add
push
pop
mov
mov
xchg
movsl
pop
push
in
mov
pop
mov
cmp
cmp
mov
mov
jbe
cld
adc
xor
rcrb
dec
faddl
data16
pop
outsl
or
fistpll
fisttpl
jne
and
adc
and
dec
das
sub
lea
fstl
xor
lock
fcmove
shrl
pop
xchg
adc
xor
loop
push
and
clc
notb
shlb
mov
mov
cmc
ret
mov
pop
cmp
dec
cmp
mov
shl
sub
pop
jns
mov
push
jbe
adc
out
xchg
sbbl
add
jmp
dec
xchg
in
pop
scas
jo
xor
insb
pop
mov
mov
add
inc
and
push
inc
jg
into
cmpsb
das
pop
xchg
rolb
loop
movsl
push
dec
jmp
sub
icebp
xor
mov
jg
dec
fadds
lods
pop
push
nop
cltd
pop
push
mov
sub
cmp
ljmp
repnz
add
rcrb
sbb
xor
xchg
or
adc
mov
cmp
mov
nop
cwtl
fcoms
pop
test
sbb
add
idiv
enter
lods
je
ficompl
cmp
pop
push
shlb
movsl
dec
push
test
enter
pop
xchg
jmp
ror
rorl
mov
push
mov
je
ljmp
dec
adc
mov
ljmp
dec
cmp
sahf
push
jge
sub
test
dec
ret
ds
mov
adc
xchg
mov
loop
cmp
xchg
sbbb
xor
xchg
imul
cli
inc
mov
mov
ret
aas
iret
imul
xorl
add
bswap
cltd
aaa
popf
adc
push
ret
arpl
push
push
test
inc
jge
test
pop
xchg
cltd
ret
sbb
inc
inc
jle
lods
push
shlb
cwtl
adc
or
addl
sbb
adc
das
xchg
daa
es
out
jae
add
test
nop
scas
jns
in
mov
jge
sub
nop
or
outsb
and
dec
inc
adc
xor
imul
notl
jae
ja
daa
ja
inc
shrb
xor
sbb
test
mov
cltd
adc
fldt
fldcw
scas
in
push
lret
mov
inc
sti
dec
pop
loope
or
stc
inc
and
inc
std
orb
aam
jp
aas
and
dec
aaa
loope
mov
dec
rcll
rcrb
mov
imul
add
test
ss
pushf
out
mov
mov
xchg
cltd
notb
lahf
mov
xor
lcall
popa
mov
fdivl
adc
push
scas
fisubrl
cmpsb
jge
fcmovnb
cld
mov
jno
pop
xchg
inc
push
mov
rorb
xchg
fsubrl
jbe
cwtl
hlt
jecxz
or
das
andb
xchg
call
lret
inc
mov
popl
jmp
int
jp
cmpsl
test
pop
fs
and
jmp
and
sub
aas
loope
test
mov
in
fwait
jmp
pop
pop
or
xchg
pop
loope
xchg
and
mov
int
jg
sbb
xorb
cli
mov
mov
pop
das
xchg
hlt
adc
cli
mul
bnd
mov
pop
outsb
pop
or
jge
push
lret
sti
vpunpcklwd
cmpl
mov
mov
adc
cmpl
or
roll
push
sub
bound
scas
mov
mov
sti
ljmp
sbb
push
mov
das
test
or
das
sub
sub
push
add
push
clc
lcall
scas
aas
and
fbstp
xchg
fcomip
cmpsb
mov
cmp
ja
mov
les
sub
dec
cmp
mov
or
xchg
sahf
int
mov
xor
call
adcl
jmp
imul
int
lock
nop
or
and
push
ja
sub
push
ja
cmp
mov
xor
fistl
dec
adc
icebp
hlt
test
mov
bound
mov
adc
mov
repnz
mov
xchg
sbb
cli
pop
add
dec
jl
dec
lea
jmp
mov
nop
ret
lcall
cltd
stos
popa
nop
dec
roll
sub
mov
mov
sbb
mov
mov
lcall
rcll
aad
or
xchg
mov
imul
push
pop
dec
xor
dec
nop
add
cmp
pop
xchg
in
or
adc
loopne
xor
rcll
cmpsl
fnstsw
pop
nop
cltd
shlb
call
lock
nop
lods
pop
movsl
ret
rclb
mov
cmp
push
mov
out
fsubr
cwtl
jp
cmpsl
rcrl
or
xchg
inc
out
adc
push
filds
xor
clc
lea
nop
add
ret
filds
lods
loop
je
loop
pop
pop
shl
sarl
sub
popa
out
xlat
mov
call
stos
sbb
arpl
dec
add
out
scas
stos
and
cmpsl
lds
xor
add
cmp
sbb
ja
adc
sbb
inc
movsb
lcall
sub
fildll
xor
popa
gs
mov
adc
in
sbb
ret
lret
sahf
aaa
fsub
xlat
sbb
cmc
dec
sbb
mov
push
cmpsl
insl
add
mov
jae
out
lods
pop
mov
sbb
sbb
xchg
sbb
push
add
xchg
xchg
addl
inc
in
jbe
sub
out
out
push
xor
arpl
xchg
lods
pushf
in
cli
xor
jne
lea
popf
lret
mov
ret
pusha
pushl
out
xchg
sub
sbb
or
es
insb
pushf
add
cmpl
push
and
jp
in
movsb
xor
lea
clc
sbb
aam
jns
fbld
divl
push
into
insb
popa
aad
pop
cmpsl
clc
xor
aaa
outsb
loopne
mov
lcall
mov
jns
mov
xor
xchg
jmp
sbb
lods
popf
xchg
cs
and
push
int
or
xchg
mov
mov
fs
lret
jle
outsl
cli
lea
nop
pop
mov
pop
in
pop
lret
and
mov
cltd
fs
pop
add
and
push
push
push
hlt
fcomp
call
push
lahf
pop
mov
mov
cmp
outsl
or
or
jo
pop
in
lahf
repz
loope
lods
call
stos
cmp
shll
pop
out
leave
lret
ja
mov
and
sbb
repnz
push
jg
sbb
cmp
scas
xchg
mov
int
and
imul
inc
xchg
pop
cs
fmuls
xor
pop
pop
imul
dec
ret
mov
inc
nop
lock
mov
jle
in
push
xlat
inc
adc
sub
push
or
das
push
je
jno
rclb
in
rcl
imul
rclb
sub
push
pop
icebp
adc
dec
into
mov
mov
loopne
mov
jne
jmp
js
insb
aaa
je
out
mov
dec
das
xchg
ficoml
std
adc
cmp
faddl
ljmp
sbb
jno
mov
dec
loopne
dec
test
inc
mov
xchg
add
int3
fsubrp
pop
nop
inc
mov
lock
insl
mov
xchg
pop
in
in
xchg
xchg
mov
aad
repz
sub
jg
push
lahf
call
adc
stos
add
inc
dec
test
int3
sbb
aaa
jl
sbb
lea
sti
mov
pusha
xchg
adc
mov
xchg
inc
sbb
loop
sbb
pop
rclb
add
ljmp
push
mov
push
dec
jbe
inc
popl
add
mov
mov
push
push
add
dec
stos
out
mov
and
loope
les
mov
xchg
bound
leave
inc
adc
xchg
scas
aas
out
icebp
push
aas
fdivl
inc
mov
insl
inc
dec
stos
mov
inc
or
insl
fidivl
inc
or
sub
out
outsb
cwtl
test
push
fs
rcrb
dec
out
dec
sbbl
pushf
test
jp
xchg
outsb
in
arpl
add
insb
xchg
movsb
adc
jecxz
dec
xchg
mov
and
push
sti
or
xorl
or
repz
jbe
stc
lcall
out
xchg
lds
test
out
pop
sbbb
or
in
sub
jo
lahf
arpl
mov
mov
pop
dec
sbb
sti
arpl
mov
nop
mov
add
adc
mov
pop
xchg
push
push
jno
cs
sahf
jno
imul
push
and
xchg
xchg
push
inc
insl
test
mov
cmp
jl
jbe
gs
jmp
test
push
repnz
pop
mov
push
in
frstor
leave
adc
pop
out
xlat
jne
add
lods
cltd
or
leave
icebp
vpshufd
repnz
sub
gs
pop
ficoml
jns
pop
push
enter
sub
push
testl
jecxz
xor
xchg
mov
or
mov
clc
mov
jns
insb
cmc
mov
jg
dec
add
dec
aaa
inc
xchg
push
repz
cmpsl
addr16
orl
hlt
movsb
add
scas
mov
add
or
mov
pop
xchg
clc
lea
adc
pop
pop
and
aaa
add
neg
cmp
inc
fdivl
out
jge
test
icebp
stos
out
dec
sub
cmp
adc
hlt
cltd
fdiv
jno
lret
fucomp
insl
rorb
jno
dec
mov
lcall
in
mov
push
or
xchg
lret
cltd
push
mov
mov
lret
push
and
xchg
sub
mov
dec
mov
into
inc
xor
jnp
repz
dec
dec
dec
jne
sbb
mov
lret
jmp
mov
xchg
mov
lret
and
adc
sbb
mov
or
pop
int
mov
mov
lock
into
pop
iret
outsl
data16
or
gs
inc
xchg
ljmp
fdivrp
loope
loope
cs
sbb
jae
add
mov
loope
jb
ljmp
arpl
or
jb
mov
lods
ss
neg
adc
fcoml
xchg
push
jne
data16
icebp
mov
scas
mov
jg
inc
out
jmp
js
fnstcw
inc
mov
xchg
lock
cmp
fldenv
ret
ja
xchg
mov
and
in
aaa
push
xchg
orl
popf
je
adc
xchg
inc
xor
aas
jg
sub
jp
ret
jp
cmp
std
xchg
cwtl
jmp
out
pushf
dec
dec
mov
in
pop
fsts
xor
jmp
test
es
mov
shr
push
jnp
dec
cltd
cwtl
mov
subl
cld
arpl
add
lcall
and
popa
xchg
aaa
loop
leave
in
ret
clc
jnp
or
jbe
das
sbb
cmp
not
cltd
xchg
test
inc
outsl
pop
andl
outsb
mov
jnp
mov
mov
leave
xor
dec
push
in
scas
push
gs
pusha
cmpsl
insb
pop
popf
jns
int
das
ja
adc
sahf
movsl
jmp
cmp
test
inc
out
fimuls
xchg
ret
adcl
mov
in
mov
mov
das
js
push
jmp
mov
mov
clc
mov
dec
aam
mov
and
jmp
wbinvd
fs
lea
add
out
add
mov
mov
imul
out
nop
outsb
daa
gs
or
pop
jl
mov
test
sahf
daa
jae
icebp
roll
xorl
clc
loopne
fsub
dec
call
pop
and
les
enter
gs
aam
jecxz
cmp
fdivr
fmulp
mov
in
test
push
xor
xchg
inc
rcl
xchg
lods
fcmovb
xor
stc
cmpsl
and
push
int
or
outsl
sbb
in
outsb
xchg
mov
fnstenv
sbb
ret
add
pop
push
addr16
push
adc
cmc
and
dec
mov
push
sub
push
scas
push
std
adc
cld
dec
cmp
shrl
or
mov
mov
outsb
add
nop
xchg
sub
push
jmp
dec
mov
mov
outsl
test
sbb
xor
ja,pt
jno
leave
mov
adc
xchg
sub
enter
or
movsb
adc
subl
or
inc
fdivs
test
repz
push
int
aam
mov
sub
pop
sub
cmpb
jg
bound
ret
dec
lret
sbb
mov
xor
out
les
in
out
aas
jp
xchg
fcmovb
add
xlat
mov
es
and
xchg
pop
mov
scas
enter
lret
sar
mov
pop
and
sub
imul
lahf
push
jbe
xchg
out
inc
adc
cli
or
or
jg
cwtl
out
mov
es
add
cltd
push
rolb
test
sahf
sub
loopne
inc
mov
pop
fcompl
mov
ljmp
enter
stos
push
cli
stc
mov
add
and
repnz
scas
leave
jle
inc
sbb
scas
sarb
mov
xor
inc
mov
enter
xchg
js
dec
lret
test
mov
mov
movsb
pop
fwait
sbb
push
xchg
mov
orb
in
add
inc
jle
mov
fsts
mov
and
stos
test
sub
xor
xchg
cwtl
nop
nop
dec
mov
mov
leave
sbb
push
lock
jb
aam
lods
loope
adc
iret
sbb
jo
push
mov
in
cli
out
xor
stc
icebp
add
jecxz
ret
lods
lret
mov
dec
jne
test
daa
fidivrs
fsts
popf
inc
jbe
out
fdivr
call
stos
xchg
and
and
repnz
fsts
fcmovnbe
sbb
enter
scas
inc
or
loope
movsl
sub
add
mov
int3
faddl
mov
cwtl
cli
and
jg
push
push
sub
mov
inc
or
ja,pt
lock
movsb
test
test
and
xchg
xchg
mov
mov
mov
popf
pop
pop
sti
xchg
ffree
push
stos
add
push
xchg
orb
adc
scas
les
xchg
xlat
clc
mov
jl
jg
cmp
addr16
push
and
test
lods
not
xchg
mov
test
or
int3
pop
pop
dec
test
jo
imul
cmpsb
push
mov
inc
adc
push
dec
mov
xchg
xlat
cmp
cmpsl
push
lock
inc
mov
notb
jnp
mov
lret
das
xor
adc
push
sbb
arpl
inc
jo
sbb
mov
dec
pop
mov
or
scas
or
dec
cmp
in
mov
lods
lds
pop
mov
pushf
aas
dec
fldl
ret
les
movb
fistps
lds
dec
lock
popa
adc
mov
outsl
push
insb
inc
adc
push
xchg
adc
dec
pusha
inc
mov
push
jo
dec
inc
ror
sub
lods
jg
mov
into
mov
xchg
rdtsc
sub
inc
sbb
mov
push
add
pop
push
xchg
mov
mov
mov
xchg
push
mov
test
fidivl
mov
loop
scas
repnz
shl
loop
clc
shlb
call
ljmp
pop
lock
mov
xchg
push
cmp
mov
daa
lods
fcmovnu
jne
adc
call
xchg
add
mov
cltd
inc
jg
in
pop
or
jns
pop
mov
mov
and
sahf
in
pop
call
cmpl
mov
push
ljmp
xor
cmp
repnz
pop
arpl
mov
into
es
loope
divb
and
mov
push
inc
mov
adc
mov
leave
mov
jns
daa
add
lea
popf
rolb
xchg
rorl
pop
adc
cmp
test
xorl
xor
sbbl
inc
shlb
ss
pop
and
ljmp
mov
mov
lock
sbb
push
push
lret
push
std
lret
ret
push
inc
mov
loopne
pushf
lret
dec
xor
ja
nop
movsl
dec
test
ljmp
lods
mov
fistl
dec
ss
fimull
push
fstpt
out
xchg
push
rorb
adc
mov
icebp
dec
adc
xorl
cs
dec
cmp
add
xorl
push
push
insb
out
sbb
xchg
out
inc
dec
das
call
cmp
mov
ficoms
push
outsl
mov
call
xchg
nop
fwait
aas
inc
dec
sti
mov
xor
push
aad
pushf
aaa
adc
mov
test
out
cmc
jnp
mov
xchg
scas
xlat
das
iret
inc
arpl
sti
js
aad
mov
je
in
dec
inc
aaa
stos
xorb
mov
out
insl
dec
gs
add
mov
push
js
aam
lret
dec
loopne
and
mov
push
cmp
cmp
push
cmp
sub
addb
cltd
sub
cmp
aas
ljmp
rcll
and
sbb
imul
mov
in
adc
xor
movsl
cmpsb
iret
sub
xor
test
aam
xchg
ret
int
jae
in
scas
mov
pop
jl
pop
jmp
or
mov
inc
popf
cmp
xchg
cmp
lds
inc
and
push
or
mov
popf
xor
filds
mov
aam
arpl
pop
push
test
mov
lods
sbb
push
test
and
cmpsl
xchg
inc
sbbb
xchg
icebp
and
mov
lahf
pop
cli
lret
push
frstor
dec
scas
mov
xchg
or
popf
subb
mov
leave
shld
mov
inc
push
adc
push
mov
scas
adc
cld
xchg
dec
pop
in
jmp
out
hlt
int
cmp
int3
jecxz
dec
xchg
and
fwait
iret
lock
jl
dec
sar
rol
in
ss
sbb
dec
loop
in
adc
or
pusha
sbb
sbb
mov
pop
xor
mov
imul
push
or
sarb
mov
test
jbe
mov
repnz
movsl
fmul
or
addr16
adc
mov
mov
pushf
adc
sbb
inc
inc
jge
test
out
fwait
or
out
jecxz
dec
gs
mov
shrl
add
cmp
push
mov
xor
popf
pop
xor
jns
fxch
adc
lahf
sub
mov
push
add
and
and
movsb
mov
jle
shlb
and
iret
pop
inc
out
stos
pop
xlat
js
inc
stos
mov
subl
stos
adc
addl
pop
ficoms
jb
ficoml
pop
shlb
adc
lcall
aam
fiaddl
xor
xchg
fs
mov
xchg
xchg
jb
fwait
dec
out
in
cmc
inc
addr16
mov
push
cld
cmovb
cmpsl
cwtl
js
adc
out
jns
adc
ret
dec
hlt
ss
push
lods
mov
test
or
sbb
mov
mov
int3
xor
inc
inc
mov
jp
sub
mov
call
mov
sbb
out
leave
jne
mov
mov
mov
movsb
lret
and
pop
insl
jp
cmpsl
jae
fisubl
cmpsb
or
mov
xor
pop
aam
xchg
mov
dec
push
andl
iret
ja
les
ljmp
push
stos
sub
ss
xor
mov
mov
fmuls
cmp
lret
lds
push
daa
or
ds
imul
adc
mov
js
mov
gs
div
mov
dec
fisttpl
call
add
inc
stc
push
or
ret
mov
sub
or
iret
add
and
out
adc
mov
mov
sbb
call
cmp
xor
rcll
cmp
xor
mov
shr
bound
xchg
andl
into
std
pop
xchg
fsubr
cmp
lret
dec
or
mov
or
mov
adc
mov
fcoms
jmp
sbbl
dec
leave
arpl
or
stc
mov
jns
ret
loopne
pop
rorl
mov
subl
adc
push
jl
call
jg
sti
sbbb
xchg
pop
and
fimull
fisubrl
jge
xor
icebp
or
mov
push
xchg
repz
enter
sahf
sbb
enter
xor
fstp
or
dec
popa
sbb
xlat
pop
dec
sub
stos
adc
xor
loopne
cld
pop
out
repnz
cld
xchg
lds
test
jbe
push
test
adc
cmp
cmp
dec
add
add
sbb
xchg
std
dec
inc
pushf
js
lea
mov
xchg
nop
fdiv
std
xchg
inc
add
mov
and
fstps
sbb
adc
mov
test
fwait
inc
xchg
xchg
inc
pop
clc
xor
jo
fxam
imul
jbe
cli
adcl
idivb
les
pusha
sub
stos
dec
cli
out
cmp
and
adc
add
js
test
les
mov
xchg
adc
jns
add
xor
or
mov
xor
test
and
ss
outsl
xchg
das
push
js
sbb
rorb
mov
leave
adc
aam
mov
xor
mov
gs
cwtl
dec
loopne
fbld
sbb
pop
insb
or
mov
lret
jnp
jnp
jmp
lock
popf
xchg
hlt
fldt
pop
inc
sbb
gs
adc
mov
mov
and
icebp
mov
mov
test
sub
in
pusha
jbe
out
divb
decb
mov
cmpsl
aad
sahf
xor
mov
or
addr16
xchg
in
cmp
pushf
xor
add
in
mov
loopne
push
sbb
shll
sub
or
or
sti
imul
inc
dec
decb
cmpsl
ss
addb
ljmp
int
jecxz
out
rcrl
or
mov
jle
jbe
cmc
cs
rcll
out
int
xor
mov
mov
pop
aas
mov
or
test
inc
test
pop
xor
push
pop
cmpl
stc
xchg
dec
testl
lahf
aaa
fldenv
jl
leave
or
xchg
ficoms
sub
mull
shlb
pop
fisttpll
orb
popf
jp
mov
gs
fsts
insl
pop
and
test
sarb
mov
js
call
stos
imul
jl
shll
cli
pop
and
je
int3
cmp
scas
cmpsl
mov
pop
mov
push
inc
add
loop
mov
jno
xchg
cwtl
mov
mov
outsb
das
push
push
rcrl
jne
mov
mov
cmp
fstpt
push
and
ret
adc
nop
leave
push
pop
and
lock
adc
jno
dec
pminub
sbb
aaa
jecxz
int
inc
into
fsubs
xchg
icebp
cmp
dec
and
xor
mov
jne
inc
add
aas
mov
pop
sub
mov
cmp
push
mov
mov
cld
mov
lcall
cwtl
ljmp
das
jg
dec
jo
imul
lods
xor
pop
gs
sarb
shlb
insl
lea
pushf
icebp
jns
xchg
push
pop
mov
or
mov
mov
pop
in
xlat
rol
pop
push
jae
pushf
mov
ljmp
push
sbb
push
pop
loope
or
lds
mov
sarl
xor
clc
or
das
ja
test
dec
mov
bound
ret
and
xor
clc
cmp
iret
popa
pop
xor
repz
pop
or
mov
aaa
cld
mov
pushf
add
ret
xchg
mov
call
sbb
out
inc
xchg
mov
int
outsl
mov
lret
xchg
or
popf
leave
hlt
xorb
cmc
roll
dec
mov
aas
adc
stos
out
push
dec
test
xchg
shlb
rol
fistpll
leave
add
iret
data16
fadd
int
xchg
enter
xchg
inc
shl
mov
scas
pause
aaa
dec
jae
in
das
dec
addr16
mov
dec
in
clc
xchg
xchg
mov
pop
dec
das
stc
fcoms
int3
push
or
out
iret
push
cmc
pop
bound
scas
mov
movsb
fs
arpl
mov
ror
and
xchg
leave
leave
pop
adc
out
or
and
les
pop
jmp
mov
repz
ret
mov
testl
adc
in
xchg
lret
lret
lahf
cltd
in
mov
sbb
fdivrs
rorb
xchg
mov
cmp
mov
fwait
sbb
jae
mov
jae
std
fistpll
jge
pop
cmp
jle
fdivl
cwtl
sbb
push
bound
mov
jbe
cmp
pop
in
jae
adc
mov
mov
imul
xchg
xchg
adc
insl
fwait
jo
dec
mov
push
sub
aas
popf
pop
push
out
clc
pop
in
cld
add
cltd
xor
bound
mov
sbb
decb
call
xchg
loope
and
hlt
jo
jbe
jbe
sub
xchg
or
jl
jmp
mov
insb
push
xor
and
repnz
stc
sub
in
sub
pand
mov
ret
jb
imul
cs
cmp
arpl
push
add
mov
stos
xchg
adc
out
pop
xchg
les
xchg
nop
pop
je
inc
adc
mov
in
notl
rclb
push
adc
jbe
cmp
icebp
push
push
dec
push
cltd
test
or
add
sahf
push
pop
pop
sti
sub
jmp
sbb
xchg
js
push
push
das
cmp
mov
mov
sbbb
xor
dec
xchg
shl
pop
data16
cwtl
stc
cs
jg
pushf
jge
inc
push
mov
aas
pop
scas
xchg
xor
push
repnz
ja
jp
mov
shr
mov
xchg
jp
xchg
adc
add
xchg
fmuls
fistps
mov
ds
mov
sub
mov
push
aam
aam
nop
lret
sub
xchg
int3
and
js
xchg
lods
mov
lock
popf
popf
lods
mov
lret
call
and
cltd
outsb
cmp
mov
shll
fidivrl
aas
dec
mov
pop
rclb
ss
xorl
dec
and
and
inc
and
adc
lret
out
dec
pusha
push
leave
inc
mov
jmp
dec
pop
es
les
aam
add
or
imul
sbb
mov
test
mov
xchg
stos
dec
sub
or
jae
add
movsb
shr
stos
int3
in
push
dec
adc
rol
jae
and
daa
sub
pusha
jbe
int
mov
push
and
xlat
inc
lahf
mov
mov
inc
sbb
dec
sbb
out
sbb
mov
inc
sub
push
dec
and
out
fnstenv
xchg
adc
mov
jle
xchg
or
mov
stc
push
sub
and
ljmp
in
and
jg
pop
jbe
dec
mov
int
xor
or
rcll
scas
stos
roll
mov
iret
mov
xchg
es
daa
sub
pop
xchg
scas
call
or
das
mov
mov
repnz
arpl
outsb
lahf
mov
inc
mov
fmuls
daa
pop
xchg
test
jo
ss
pop
stos
dec
dec
inc
mov
inc
outsb
and
fcmovbe
mov
jno
add
or
clc
lcall
add
out
fimull
mov
sbb
xor
bts
pop
xchg
pop
dec
mov
mov
mov
mov
cmp
leave
mov
pusha
dec
lds
pop
or
je
jo
xchg
sbb
sarl
mov
data16
mov
insl
adc
pop
add
ds
sbbl
sbb
sub
in
lret
fdivrl
cwtl
leave
out
shll
mov
jns,pt
xor
pop
mov
lods
push
xchg
xor
mov
push
ja
fmulp
fdivrs
push
and
mov
jbe
outsl
pop
pop
negb
xor
cltd
adc
lcall
xor
imul
or
insb
mov
and
mov
inc
mov
test
aad
jg
inc
sub
js
push
jbe
pop
jbe
in
mov
out
ret
bnd
adc
push
cwtl
sbb
mov
ja
jp
jb
lcall
add
insl
xchg
hlt
push
insl
hlt
testl
xor
fucomip
ds
push
lahf
sbbb
sub
push
imul
cli
lret
jmp
js
test
sbb
lods
jge
sub
dec
imul
clc
lahf
adc
je
push
movsl
subl
xor
add
inc
adc
pop
ss
jge
mov
aam
add
sub
mov
jns
in
mov
loopne
sub
or
push
ljmp
jmp
popa
imul
nop
subb
push
sbb
divl
daa
out
add
sub
and
xchg
cmp
in
jnp
and
jb
push
inc
jbe
push
rcll
mov
and
or
jo
lret
cmpsl
test
aam
push
mov
scas
mov
xor
mov
mov
hlt
into
inc
scas
shlb
dec
inc
enter
fwait
push
cmp
cmp
ret
mov
outsb
xor
icebp
dec
jo
lret
dec
sub
xchg
mov
aaa
cwtl
popf
pop
lds
mov
inc
pop
test
mov
sub
push
add
arpl
xorb
mov
mov
xlat
dec
mov
lea
jo
pop
sub
xor
inc
lcall
in
jg
ficoms
or
out
lret
lret
cmpsb
and
mov
jmp
cmp
add
cmp
ljmp
in
adc
xor
cmp
daa
and
test
push
inc
adc
in
sbbb
movsl
sbbb
fists
lahf
pop
lock
lods
xchg
xor
cmpb
jns
lods
sbb
pop
add
movsb
test
fidivrs
shlb
xor
mov
aas
xchg
ret
pop
mul
mov
xchg
ljmp
iret
mov
cs
mov
sub
ret
rcll
movsl
das
push
mov
test
sbb
outsl
ret
mov
imul
in
or
fbstp
or
xchg
pop
push
mov
pop
jno
es
jge
mov
sub
insl
or
jp
mov
jge
add
pop
loop
test
repnz
aam
inc
mov
enter
mov
sbb
fsts
in
push
aad
fwait
inc
loopne
stos
sub
ss
xor
popf
repz
add
fsubr
lret
lds
sahf
jg
sbb
imul
adc
xchg
sub
lahf
push
lock
js
jae
push
pop
vmovq
pop
test
mov
orl
cs
mov
dec
cwtl
add
sar
popf
sahf
or
mov
and
fbld
fnstsw
mov
mov
mov
ds
out
and
jge
loopne
pop
pop
lahf
or
je
cmp
pushf
out
sub
push
push
xchg
and
lods
and
mov
push
scas
sahf
vfrczsd
popf
pushaw
movsb
sbbb
jb
stos
push
outsb
test
cmp
in
push
xchg
call
sub
xchg
pop
push
sbb
mov
mov
and
sbb
sahf
push
in
adcb
cmpsb
or
xor
mov
cmp
rolb
lret
xchg
xchg
jmp
inc
setl
xor
imul
enter
jmp
movsb
cli
pop
je
ds
lods
mov
dec
sbb
mov
test
fnstcw
jne
dec
mov
and
int3
jne
outsl
lock
sti
jecxz
addl
mov
xchg
xor
stos
push
jecxz
push
inc
stos
or
pop
xor
lret
lds
and
jle
movsb
mov
addl
adc
lret
add
pop
sbbb
dec
rol
sbb
popf
mov
das
mov
insb
add
push
mov
push
fcmovnb
adc
push
push
call
push
iret
xor
push
fstps
dec
loopne
add
cmp
ja
inc
xchg
fistl
fwait
inc
sub
cltd
cmpsb
dec
fdivrp
adc
mov
dec
dec
movsb
pop
add
cmpsl
pop
stos
lea
mov
ja
imulb
js
sbb
xchg
test
sub
ja
fs
and
xlat
inc
popa
mov
mov
mov
push
ret
jne
fwait
adc
lret
sbb
adc
push
fdivr
rolb
loop
mov
das
idivl
mov
fcomps
insl
fiadds
hlt
je
popa
mov
cmp
jae
inc
cli
shrb
push
sub
sub
or
mov
push
mov
addr16
xor
pushf
lods
out
pop
fisubrs
mov
bound
push
pop
ss
mov
jle
mov
adc
dec
add
repnz
add
cmp
cmp
mov
cld
xor
test
mov
xor
sbb
jg
inc
jbe
jp
gs
enter
cltd
js
cmc
imul
lcall
sub
cmpl
lret
popa
out
rorl
mov
and
in
push
arpl
pop
bound
fsts
shlb
pop
inc
movsb
sub
lods
cmp
out
cmp
and
jg
stc
xchg
nop
leave
gs
std
sub
rolb
pop
xchg
and
mov
jge
push
xchg
shll
in
or
dec
jnp
cmp
xor
ret
mov
add
mov
stos
stos
mov
leave
mul
mov
aaa
mov
jbe
fs
sub
sbb
aam
jmp
jnp
je
jge
pop
jp
sbb
pop
shll
call
clc
jmp
push
push
cld
mov
pop
adc
jnp
mov
shlb
jmp
cwtl
dec
lahf
xor
cmp
push
arpl
jo
scas
js
das
jno
or
cmp
cmp
sub
mov
mov
imul
lcall
cmpl
int
xor
mov
add
lods
sarl
fistps
jne
fstpl
aad
rorb
pop
lods
dec
mov
add
xor
enter
jbe
outsl
jmp
scas
cmp
mov
xchg
sub
mov
clc
or
sti
cmp
mov
jae
jecxz
push
loopne
insl
pop
cwtl
jns
or
fcoms
cmp
test
rcrl
lock
mov
sahf
xchg
cmp
repz
xor
mov
mov
xchg
fucomi
popf
dec
dec
mov
xor
adc
popf
stos
mov
inc
jle
nop
ds
push
jns
mov
xlat
push
cmp
sbb
xorl
adcl
xchg
pop
cltd
stc
test
aad
sub
mov
dec
call
fwait
mov
in
xchg
sahf
dec
push
fdivl
lds
std
ds
xor
sbb
lcall
xor
or
push
mov
mov
xchg
in
cs
ror
fmull
enter
sar
scas
in
fistps
fwait
push
lock
ss
cmc
clc
lods
jne
cmp
outsb
push
add
int3
mov
clc
mov
mov
xor
in
in
imul
inc
pushf
cmp
cmpl
mov
sub
mov
cmp
mov
das
in
daa
jmp
ret
mov
ficomps
adc
xchg
outsl
jecxz
mov
xchg
sbb
loopne
call
xchg
in
inc
push
sub
adcb
call
pop
test
add
push
cmp
cmp
es
jg
sub
xor
lods
adc
dec
orl
sahf
or
jmp
or
mov
or
mov
fsub
pop
leave
sbb
rcll
jno
ss
divb
push
js
dec
sbb
cmp
add
ret
jg
sub
jg
sbb
lret
loopne
or
cmp
pop
adc
jne
js
inc
cmpsl
je
cmc
pop
jns
je
mov
outsl
mull
push
cmp
mov
dec
mov
push
dec
mov
incl
push
push
leave
cmp
enter
add
fsub
inc
cmp
cld
data16
cs
test
pop
orl
movsl
cmp
pop
dec
add
pop
outsl
in
push
sub
rolb
xchg
mov
mov
jnp
daa
pusha
pop
jne
shlb
scas
pop
xchg
cmp
sbb
daa
movsl
pop
loopne
pop
fnstsw
mov
cwtl
andb
mov
inc
xchg
inc
fmull
dec
xor
cwtl
ljmp
mov
push
jns
mov
xor
adc
ret
cmp
adcb
cli
mov
dec
inc
push
stos
loope
jmp
jns
xor
cmp
inc
dec
and
sub
xor
ja
xchg
ljmp
and
neg
inc
push
sbb
bound
sbb
dec
in
push
nop
std
xchg
loopne
and
mov
repnz
loop
dec
push
pop
xchg
mov
rep
imul
inc
xchg
sub
int
mov
cs
xor
les
mov
sahf
aas
cmc
out
dec
dec
popf
popf
ficomps
xchg
outsb
out
sarb
ds
fwait
cmpl
stos
test
sahf
scas
push
sbb
mov
pop
fmull
scas
hlt
lods
add
adc
pop
mov
pushf
jnp
in
scas
pop
lods
lds
adc
mov
and
push
in
mov
lds
insb
fimuls
dec
dec
push
out
adc
cmp
repz
cwtl
xor
pop
movsl
out
cwtl
scas
cmc
lahf
cmc
push
roll
jbe
clc
ficomps
xchg
lahf
aas
lcall
adc
cld
mov
test
in
testl
sbb
add
push
jmp
inc
cmp
call
lods
mov
in
ret
aam
stos
xchg
pop
adc
es
out
mov
call
insl
jnp
xchg
loop
sub
inc
movsl
enter
xor
stc
jmp
sbb
push
insl
repnz
fimull
pop
mov
cmp
in
fs
and
jle
fmuls
mov
jl
mov
inc
neg
movsb
xchg
test
xchg
or
scas
jnp
fsubs
fisubl
filds
sbb
fbld
movsl
adc
xchg
test
dec
aaa
stc
inc
mov
mov
and
lret
and
in
out
adc
movsb
cmpl
mov
gs
pushf
mov
inc
out
clc
inc
rorl
int
adc
movsb
andl
popf
sbb
mov
scas
dec
shlb
lret
sub
cmp
das
rolb
clc
stos
inc
fs
mov
jnp
inc
insb
sub
mov
test
leave
sub
lret
and
or
rcll
pop
movsb
pop
xchg
xchg
imul
fwait
sub
mov
sti
aad
cmp
xchg
adc
add
repnz
in
dec
fstps
andb
fisubs
fnstsw
fcoms
mov
test
xchg
js
mov
cltd
xchg
mov
xchg
leave
cmpl
inc
mov
dec
jp
mov
test
insl
inc
or
aaa
cs
inc
inc
pop
outsb
inc
mov
jge
out
into
test
test
mov
cld
das
mov
jge
pop
mov
mov
dec
inc
add
mov
xchg
fcoml
cmp
add
inc
push
pop
xchg
mov
das
push
cmp
aam
lds
mov
daa
adcl
cmp
push
xchg
or
in
sbb
inc
xchg
lcall
lods
push
popf
push
stos
xchg
dec
push
dec
push
dec
filds
dec
inc
cmp
dec
imul
test
add
sbb
testb
xchg
inc
in
clc
aad
ljmp
fidivs
adcb
fisubrl
push
in
insb
xor
ljmp
pop
mov
cmpsl
jb
lods
in
cmpb
xchg
dec
lahf
sub
inc
mov
xor
xor
xchg
mov
cld
mov
arpl
sbb
and
and
test
adc
xor
int3
imul
jg
ljmp
inc
add
jl
fiaddl
pop
inc
cwtl
adcb
pop
lods
scas
cmpsl
add
inc
orb
push
stos
pop
pop
dec
fisttps
adc
lahf
sbb
jbe
jns
divb
in
pop
dec
jg
lock
cmp
mov
arpl
enter
sbb
xorl
incb
add
mov
cmpsl
loopne
mov
sbb
sti
and
sub
mov
jmp
scas
mov
or
mov
shr
les
add
popf
ret
ds
mov
shrl
mov
dec
fucom
pop
xchg
mov
inc
or
push
rcrb
test
jo
sbb
push
repnz
std
nop
xchg
xchg
lea
fsts
int3
sbb
jmp
sti
shrb
xor
inc
fisttpll
xor
mov
imul
xor
mov
mov
jp
in
je
or
sbb
mov
je
mov
mov
cmp
loopne
and
aas
movb
and
xor
test
cmpsl
insl
js
mov
outsl
sbb
sub
sbb
jg
insl
int
notb
loopne
inc
adc
dec
sbb
cmp
negb
sbb
lahf
mov
pop
repz
push
sbb
xchg
in
pop
push
xchg
repnz
inc
add
out
jl
insb
sbb
in
lds
mov
or
fisttpll
mov
mov
addb
and
aas
sarl
mov
push
fcoms
inc
adc
sbb
pop
push
fadds
scas
ror
in
xchg
mov
xchg
add
fwait
mov
and
mov
hlt
aaa
cmp
xchg
shl
jle
leave
fsts
adc
mov
test
dec
jbe
mov
add
insl
and
xchg
ficompl
addl
mov
aas
movsb
mov
pop
xchg
push
loopne
cwtl
jg
push
int
outsb
test
into
cli
inc
push
jnp
adc
arpl
stos
fistpll
out
mov
cwtl
fbstp
push
mul
inc
xchg
mov
lods
mov
sbb
lock
and
cli
cltd
push
jns
xor
insb
push
js
sub
les
imul
jno
or
das
stos
cmp
ss
in
adc
test
inc
lret
inc
in
xchg
adc
mov
xchg
sub
jg
or
jb
test
dec
and
out
mov
sbbb
inc
dec
push
ds
and
fdivl
test
cmpsb
sarl
push
mov
or
jo
sbb
pop
test
mov
lock
sub
inc
lret
outsl
scas
test
xchg
push
addr16
sbb
xor
mov
das
add
add
fsts
ja
sarl
shl
lods
pop
sbb
push
ja
lods
fisubl
adc
push
int
incb
popf
pop
outsb
jbe
jns
xchg
xchg
sbb
xor
outsb
xor
cltd
dec
cmp
adc
mov
jl
call
push
cltd
rep
stc
dec
sbb
fcoms
cs
jg
loope
push
jae
cmp
iret
xchg
sar
aaa
jmp
cmp
nop
push
cmpsb
nop
mov
mov
icebp
andl
aad
aaa
nop
loopne
inc
add
adcl
int
jle
ffree
jb
xor
cmp
pop
lahf
inc
loope
pop
pop
jmp
add
test
test
loop
sub
fs
xchg
fcmovnbe
pusha
icebp
add
clc
jmp
loopne
pop
in
stos
popf
adc
fdivp
in
pop
loope
add
jb
inc
mov
rorb
fidivs
shll
and
pop
js
jmp
jae
xlat
mov
imul
jb
lahf
adc
inc
fstps
xchg
aad
cld
flds
scas
cld
mov
mov
cwtl
aas
shll
jo
pop
jge
xchg
jne
adc
sbb
lock
out
call
sbb
inc
dec
adc
aad
xlat
ja
in
cmp
xor
rdrand
and
dec
out
addr16
in
xor
and
loop
hlt
mov
jmp
add
ss
repz
mov
xor
add
xor
mov
inc
sbb
in
das
daa
jae
jmp
mov
push
mov
cmpsb
or
outsl
mov
dec
sbb
xchg
jne
jns
lret
iret
sbb
xor
call
lea
xchg
fistl
mov
push
xor
stos
push
mov
pop
clc
in
icebp
add
push
sbb
roll
mov
aam
jb
mov
cmp
push
lret
inc
clc
stos
sahf
jo
xchg
outsl
arpl
adc
cmpsb
je
outsb
movsb
push
popf
aaa
sbb
cld
lahf
iret
xor
call
sbb
scas
lea
test
aas
bound
aam
cmpsl
mov
adc
sub
je
add
test
cs
scas
mov
sub
in
sub
push
ss
test
or
fs
lods
push
nop
insb
pop
and
ficomps
jbe
pop
cmpsl
inc
inc
push
pushl
ret
sar
out
or
jp
test
inc
xor
jnp
pop
leave
enter
inc
lret
add
outsl
add
fs
or
adc
nop
pushf
mov
pusha
dec
add
outsb
imul
ret
js
ret
hlt
and
roll
pushf
hlt
pusha
imulb
enter
mov
push
pushf
add
cmpsl
or
and
lcall
ss
xchg
dec
je
mov
mov
sub
popf
mov
sub
jns
sahf
inc
mov
test
mov
fcmovnbe
aaa
lds
xor
dec
xchg
out
rcrl
mov
pop
out
jmp
fld
ljmp
arpl
ja
mov
dec
aas
or
leave
add
inc
sbb
push
pop
xchg
lea
test
lods
push
into
mov
mov
std
pop
out
bound
das
pop
or
int
sbb
dec
in
xchg
mov
push
cld
mov
sub
stos
in
mov
outsl
sub
add
call
mov
and
cmc
fwait
inc
or
xchg
jnp
sbb
stos
dec
fs
or
adc
pusha
sbb
pop
mov
mov
cmpsl
repnz
lods
stc
into
jbe
xchg
dec
or
jecxz
and
or
adc
rcrb
sub
and
push
call
pop
mov
mov
or
fwait
or
ret
clc
out
mov
cmp
popf
ret
jp
ss
adc
inc
jnp
sti
sbb
jae
sub
mov
stc
sub
cmp
xchg
pop
adc
xlat
cmp
push
sti
sub
jno
stos
jl
in
mov
jbe
xchg
push
jecxz
pop
xchg
aaa
adc
add
inc
scas
lods
mov
xchg
xchg
repnz
aam
sub
out
push
leave
inc
arpl
jns
ja
stc
mov
lods
or
mov
pop
mov
xor
sbb
xchg
jo
ret
mov
jne
mov
inc
cmp
int
xor
loopne
jmp
mov
nop
cmpsb
testb
sbb
xor
lret
sub
clc
and
stos
test
dec
out
insb
imul
xor
sti
mov
cs
jle
adc
cmp
and
dec
xchg
adc
addr16
adc
xor
int
xor
sub
pop
push
shrl
outsl
jle
cwtl
mov
mov
stos
xchg
sti
mov
jnp
adc
je
popf
dec
xchg
mov
clc
into
xor
int3
push
hlt
fildl
jae
pop
test
mov
xor
shrb
jmp
inc
cli
std
sbb
stc
mov
mov
hlt
push
pop
mov
lea
and
sub
mov
push
scas
mov
mov
mov
push
iret
xlat
scas
fs
shlb
hlt
sub
call
or
fisubrl
xlat
hlt
testb
lods
xchg
or
movsl
jmp
shlb
adc
decb
mov
xor
filds
xchg
jecxz
adc
inc
inc
jg
cltd
outsl
loope
rolb
xchg
add
cmpsl
es
and
jmp
rcl
xor
fcmove
cmc
clc
test
fidivs
leave
enter
rcll
clc
sbb
mov
mov
mov
in
addb
into
movsl
mov
sarl
mov
mov
add
ja
ss
pushf
cmc
push
xor
lret
iret
sti
pop
data16
sarb
aas
xchg
mov
fcomp
nop
roll
enter
adc
jmp
data16
fs
add
std
adc
push
mov
loop
cmp
ud1
dec
jns
enter
in
repz
jns
mov
lret
lods
inc
aaa
int3
std
rolb
insl
clc
aas
adcb
xchg
jmp
out
stc
loop
mov
imul
and
pushf
or
jb
int
test
push
xchg
pop
out
xchg
pop
addr16
mov
int
ficoml
dec
dec
pop
dec
adc
popa
or
and
outsb
jl
mov
mov
add
dec
add
inc
add
gs
das
aas
outsl
pop
dec
xor
push
and
xchg
mov
lds
pop
rcrl
lock
stos
out
xchg
or
mov
push
xchg
scas
or
cmp
stc
jo
mov
or
ja
in
clc
mov
fscale
mov
das
int
mov
xchg
call
jns
mov
cmp
xchg
sub
and
jge
mov
rol
jecxz
jae
jmp
mov
cmpsb
in
movsb
mov
adc
mov
dec
pop
jnp
adc
pop
mov
cli
stos
into
jbe
or
xchg
sub
mov
aad
cmp
xchg
mov
xor
jmp
xor
and
aam
pushl
dec
push
ret
test
das
out
lods
cmp
mov
lahf
mov
lods
enter
es
xor
stc
dec
idiv
push
pop
jne
push
leave
movsl
push
xorl
xchg
inc
lock
sub
push
xchg
js
sbb
rcrb
push
cmp
int3
in
aas
lahf
jno
inc
pop
ficompl
mov
inc
addr16
dec
les
or
xor
mov
dec
xor
mov
mov
xchg
dec
loopne
sbb
aam
jo
stc
movl
iret
xchg
inc
push
lret
std
cmp
jecxz
in
pop
xor
popf
ret
hlt
push
xlat
loop
repz
iret
pop
shll
notl
xchg
xchg
xor
movsl
and
cmp
stos
dec
rolb
xchg
pop
mov
sbb
int
jne
push
xor
in
mov
jecxz
mov
mov
push
xchg
push
push
scas
pop
xchg
mov
insb
orb
pop
or
inc
push
mov
push
xor
outsb
mov
dec
dec
mov
jae
cmpl
push
jle
dec
repz
pop
mov
or
sub
mov
jge
sti
mov
or
int
xor
dec
cmpsl
dec
cmp
dec
mov
lahf
movsl
aas
in
mov
lds
jl
add
xor
loop
mov
sub
mov
enter
xor
scas
pop
fcmove
cmovno
outsb
mov
or
paddsb
insl
cmpsl
jne
mov
test
nop
inc
shll
mov
shrl
fwait
add
adc
xchg
xor
inc
stos
add
jmp
sbb
repnz
sahf
and
test
lods
cmp
cld
push
mov
aas
push
jnp
call
fnstenv
or
mov
fsts
in
xor
scas
subl
test
mov
lcall
popa
xchg
xchg
pusha
sbb
inc
repnz
mov
imul
fmuls
or
ret
js
cmpsl
add
cltd
mov
or
and
into
xchg
xor
scas
clc
and
mov
xor
lds
ret
pop
fimull
pop
cmp
xor
loopne
push
iret
cmc
clc
xlat
ror
jg
xor
in
nop
jbe
or
push
pop
cmp
ss
pcmpgtd
in
jno
mov
xlat
mov
push
in
stc
add
jae
iret
push
addr16
sbb
imul
mov
lahf
mov
mov
xchg
sahf
in
cmp
and
pop
jb
jp
decb
inc
xchg
call
sbb
or
pop
xor
add
insb
mov
and
xchg
add
pop
dec
dec
inc
jl
imul
daa
mov
or
lods
or
loope
dec
jo
pop
in
push
inc
sbbl
aam
movsb
mov
shll
pop
and
sbb
lods
dec
xor
lock
mov
jge
shll
mov
sub
std
fldcw
shrb
lods
sti
pop
hlt
pop
pusha
rorl
fidivl
lds
dec
leave
adcl
mov
loop
jne
jbe
leave
std
es
hlt
sbb
mov
pop
pop
int
dec
inc
popf
push
xor
cmp
sbbb
xchg
mov
dec
sar
lods
fsubp
loopne
daa
push
jb
ret
dec
mov
cli
pop
aam
push
mov
jb
mov
inc
inc
cld
inc
cmp
cltd
sbb
ret
mov
in
push
inc
push
loope
or
test
insl
in
sti
fwait
sti
out
inc
xor
stos
sub
pop
cmpl
popf
jns
movl
xchg
aaa
test
cmpsl
or
out
sub
dec
shrl
shll
adc
lock
pop
lock
jmp
jecxz
fwait
xchg
enter
scas
or
jmp
jns
cmp
sbb
rcrb
xor
pop
rclb
lods
testl
in
mov
dec
jns
call
movsb
add
int3
leave
jb
jecxz
dec
in
fwait
movsb
pop
test
in
std
enter
test
cwtl
lock
xor
notl
pop
jg
pop
inc
lea
das
lods
divl
test
iret
subl
jle
call
lea
or
xor
arpl
mov
xor
int3
sti
mov
jmp
mov
jle
push
shrb
mov
jmp
test
mov
adc
mulb
mov
ss
pop
in
les
aas
std
aam
inc
jne
inc
sbb
push
lds
mov
inc
loopne
stos
popa
js
xchg
dec
cmp
push
lret
dec
fisubrl
dec
fsubrs
data16
ljmp
leave
lock
jo
mov
push
int3
dec
cmp
mov
add
fstpl
aam
aam
fiadds
daa
mov
add
sub
fstl
sub
les
std
and
sbb
mov
rolb
sub
jp
lahf
lret
adc
xchg
jmp
cmovno
mov
jg
xchg
stos
ss
mov
shr
xchg
push
test
pslld
add
nop
xchg
fbld
sbb
fidivrs
pusha
cmp
push
ret
or
mov
aas
pop
aam
out
dec
jl
jmp
fisttps
mov
pushf
pop
ljmp
hlt
xadd
fistpl
add
stc
fstpl
xchg
xchg
cmc
test
aas
and
lods
fnsave
cmpl
inc
pop
or
pop
test
mov
in
in
mov
xchg
push
add
in
inc
clc
stos
xchg
sbb
nop
sarl
mov
stos
arpl
shrb
outsl
pusha
int
xor
dec
mov
mov
sahf
ljmp
xchg
cwtl
xor
xchg
leave
pop
gs
or
mov
hlt
bound
mov
cmp
mov
dec
xorl
imul
rcr
or
xchg
inc
jne
movsl
sbb
dec
scas
sbb
mov
add
or
or
sub
call
gs
idiv
icebp
lahf
scas
and
in
hlt
pop
sahf
and
xchg
mov
jg
rcrb
jmp
mov
cld
fmul
into
cmp
mov
sbb
xchg
add
lret
inc
movlps
pop
pop
or
cltd
roll
jecxz
mov
cmpl
fimuls
ss
add
dec
adc
sub
in
jne
lcall
mov
hlt
outsl
rcl
out
push
sti
jge
sahf
adc
data16
dec
mov
lds
pop
mov
inc
lods
fistpll
stos
cs
cmp
mulb
mov
xchg
stos
stos
pop
xchg
pop
nop
jns
and
sbb
xor
movsl
sub
popa
xchg
outsl
les
cli
iret
fldcw
mov
into
cmp
popa
mov
mov
andb
mov
out
addr16
gs
mov
push
sbb
cmc
sbb
xchg
sbb
adc
ss
dec
pushf
xlat
in
mov
pop
mov
ja
dec
inc
lea
insb
cmp
cwtl
push
xlat
arpl
xor
mov
cmp
sub
pop
fucom
and
dec
pop
ret
lahf
faddl
sbb
cmp
lods
pop
cli
pop
scas
pop
in
xorb
add
or
cmp
ret
xchg
dec
jmp
sub
cmp
pop
push
shll
dec
jge
mov
enter
xchg
cs
dec
shll
pop
stos
pop
cld
loope
stos
inc
cmp
popf
test
repnz
sub
sub
ret
nop
int
nop
loopne
jp
xor
cli
inc
mov
cmp
cli
mov
in
sub
testl
and
add
dec
fcompl
pop
sahf
push
mov
mov
mov
stos
in
xchg
mov
test
inc
loope
roll
loop
pop
insb
loopne
out
lret
imul
cmpsl
ljmp
mov
call
add
pop
fnstsw
mov
mov
out
das
mov
and
call
mov
inc
xchg
into
rorl
sub
push
xchg
xor
push
mov
out
js
das
pop
mov
subb
mov
add
stos
jecxz
inc
enter
jl
dec
daa
mov
sub
pop
xchg
sarb
outsl
and
xchg
addl
xor
mov
cltd
inc
loope
test
pop
sbb
aam
lds
xor
fnstenv
testb
xchg
mov
fisubl
push
test
mov
fdivrs
pop
push
xor
fcomps
stos
jecxz
mov
jne
jge
loope
rcll
mov
add
mov
fcomi
adc
lods
sbb
cmp
fisttpl
push
mov
cltd
js
imul
fs
fcmove
negl
xchg
xchg
inc
out
lea
test
ret
cltd
cs
aas
int
xor
and
arpl
jbe
pusha
scas
or
sbb
push
mov
dec
ror
rcll
iret
inc
adc
mov
iret
mov
jb
loop
imul
arpl
push
mov
clc
cmp
xchg
std
mov
stc
pop
aaa
push
pop
cltd
xor
ljmp
sbb
jo
adc
mov
mov
and
fcomip
pop
movsb
dec
in
adc
ret
ljmp
jns
push
aad
lds
pusha
dec
mov
mov
mov
mov
sub
mov
js
sub
mov
lret
ja
ja
fs
test
dec
rcr
insb
das
lock
data16
rolb
adc
sahf
lret
xchg
test
lods
imul
mov
icebp
jle
fisubrs
sub
filds
jle
sbb
or
sbb
adc
rorb
push
popf
nop
scas
add
cmpsb
aam
xlat
adc
xchg
sbb
push
shll
cmp
cwtl
daa
shld
sub
push
xor
sbb
int3
mov
std
mov
nop
cmp
xchg
bound
cmp
adc
add
push
insb
sbb
adcb
xor
test
push
ljmp
ss
mov
mov
subb
loopne
jp,pt
stos
aam
push
xchg
mov
mov
xchg
or
sbbl
pop
pushf
insb
fiaddl
fld
xor
hlt
inc
mov
pop
sbb
inc
pop
and
frstor
lods
sub
dec
lods
cmpsl
xor
cs
mov
loop
mov
test
fldt
xlat
mov
and
rcrl
dec
jp
sbb
filds
pop
mov
jae
scas
fcmovnb
adc
mov
cmpsl
scas
outsl
sarb
mov
arpl
and
mov
xor
sbb
stc
add
push
idivb
cmp
cmpl
sar
adc
pop
pop
xchg
movsl
mov
rorb
mov
es
scas
cmp
mov
popf
aam
lock
lds
inc
clc
adc
push
aas
inc
add
push
sbb
mov
jae
fldenv
mov
adc
add
or
sbb
xor
xlat
jns
fucomip
xchg
xchg
or
dec
enter
icebp
or
push
mov
iret
mov
mov
stos
rorl
popa
sbb
rorb
mov
and
fucomp
test
dec
push
lret
mov
xchg
out
ljmp
mov
xlat
sahf
dec
movsb
cli
leave
push
mov
mov
cmp
popa
push
mov
fs
out
scas
sub
std
cwtl
iret
mov
ret
lea
loope
std
jb
lea
lcall
jle
pop
jle
leave
add
add
mov
and
add
data16
mov
adc
jl
gs
pop
xchg
mov
iret
inc
adc
mov
pop
imul
outsl
fldcw
sub
mov
pop
clc
or
add
xlat
xchg
mov
push
add
rolb
sar
pop
pop
xor
aaa
mov
jnp
js
xor
out
mov
push
jo
enter
jns
iret
mov
inc
cmpsb
ss
sub
je
or
iret
ljmp
pop
inc
mov
push
sub
push
xchg
pop
ficompl
xlat
loop
fistpl
sti
or
sbb
loope
pop
nop
xchg
movsb
xor
lret
int3
cmp
shrb
xchg
cmp
xor
dec
repz
fnstenv
mov
mov
cmp
stos
sub
and
lcall
jl
mov
dec
adc
loop
mov
xor
mov
mov
sbb
inc
jp
fwait
dec
or
loop
xlat
dec
insb
insl
fdiv
clc
aad
lahf
outsl
testl
cmc
mov
push
dec
jge
jne
andb
inc
or
add
pop
push
fisubrs
mov
in
xchg
pop
adc
mov
jmp
leave
testb
push
stos
popl
xchg
lds
xor
jnp
xchg
xchg
push
jl
or
mov
mov
rolb
add
lcall
cmp
in
out
stos
in
inc
jle
sbb
ds
push
pop
jp
leave
jl
in
jmp
sti
mov
jnp
add
imul
outsb
mov
push
pop
test
repz
jmp
add
cmpsl
mov
dec
pop
cld
jmp
pusha
fwait
and
addr16
or
stc
repnz
adc
mov
test
jnp
xchg
test
adc
imul
cld
cmc
and
and
repz
inc
lods
and
adc
mulb
xlat
xor
xchg
xor
jmp
inc
stos
cwtl
xlat
push
inc
mov
jns
cmp
enter
pop
sub
cmp
jbe
imul
in
inc
lds
pop
and
pop
adc
inc
insl
sbb
adc
je
jae
lds
jecxz
call
mov
scas
insl
and
sub
jnp
and
dec
outsb
push
push
or
xor
pop
mov
xchg
cltd
leave
jne
or
jl
ja
cld
fadds
mov
cwtl
inc
dec
inc
jmp
inc
cmp
mov
dec
mov
push
push
pop
adcb
jbe
inc
adc
ss
scas
cmp
addl
xchg
add
push
das
rolb
inc
fdivrs
push
xadd
movsl
xchg
stc
xchg
mov
and
jae
fcomp
push
sbb
sbb
movsb
rcrb
sbb
dec
mov
adc
xchg
adc
shlb
push
aas
sub
outsb
testb
add
xchg
pusha
xchg
add
push
add
test
popa
fcoml
test
xchg
jg
xchg
fwait
lods
adcl
rcr
cltd
xor
aas
mov
mov
daa
rclb
out
ss
or
pop
inc
in
sbb
dec
mov
shl
cli
mov
inc
adc
mov
xchg
mov
jle
cmc
xchg
mov
sub
lods
xorl
xor
mov
daa
out
inc
ror
cmp
es
push
iret
mov
xchg
and
mov
sub
test
sbb
imul
lock
and
or
in
xchg
cmp
stos
movsb
bound
dec
pop
and
xlat
pop
sub
and
fisttpl
bound
jne
nop
mov
and
rclb
mov
mov
lods
ss
jge
sti
cmpb
push
sub
fildll
xor
clc
pop
cmpl
jno
rorl
add
xchg
andb
in
fmuls
sahf
inc
cmp
xchg
push
add
outsb
bound
ds
mov
addl
add
sbb
mov
lods
pop
xchg
in
fstps
hlt
cli
inc
fdivrl
mov
adc
jno
sbb
js
iret
aaa
add
std
es
into
mov
push
xorb
leave
in
bound
mov
xor
mov
std
sar
jle
stos
ljmp
fdivr
jg
mov
scas
ficoms
call
xchg
sbb
rclb
jecxz
xchg
push
inc
in
mov
les
mov
adc
push
paddw
xor
fidivl
js
push
dec
movsl
les
mov
fisubs
mov
das
inc
pop
jge
cmp
dec
xor
divb
cmp
push
les
xchg
stos
pop
push
adc
int
xor
fisubrl
arpl
push
clc
daa
adc
xor
cli
ljmp
mov
idiv
dec
test
rcrl
xchg
or
lret
dec
out
popf
cmp
xchg
cmp
cmp
test
cwtl
lock
insl
cmpsl
cmpsl
xor
mov
or
inc
es
psubb
and
insb
xchg
dec
lea
mov
inc
jb
les
lods
jns
outsl
call
jo
rcrb
mov
outsb
ret
je
orl
clc
xchg
in
scas
pop
or
inc
xor
nop
cmpsl
mov
clc
xor
sar
jg
adc
pushf
clc
xchg
cmc
cmpsl
fsts
push
mov
mov
add
mov
push
lea
or
xchg
insb
cmp
loop
mov
sub
pop
pop
xor
inc
jg
inc
clc
push
addb
js
adc
sbb
fs
sub
xlat
and
daa
add
int3
jg
mov
or
sub
mov
lret
xchg
cs
xor
int
pop
xchg
lock
xchg
stos
pop
adc
mov
mov
mov
lods
mov
mov
aam
or
fdivs
and
mov
fstpt
push
push
fistpl
dec
into
test
dec
add
out
mov
lret
inc
inc
xchg
cmp
push
lock
sti
mov
aas
out
out
jmp
jle
mov
jl
nop
pop
into
xor
test
out
pop
mov
xchg
push
jmp
adc
std
movsb
nop
int3
je
enter
hlt
push
mov
shl
in
insb
pop
lret
cmp
ds
xchg
inc
inc
stos
icebp
pop
dec
lret
fldt
pop
lahf
mov
sbb
ficoms
iret
fimuls
dec
xchg
fs
push
or
js
pop
push
or
loope
and
pop
mov
push
xor
xor
movsl
pop
out
lock
xchg
clc
data16
idivl
inc
subb
adc
pop
add
xchg
test
mov
fistl
loopne
cwtl
xlat
vphaddbd
sti
jae
int
lcall
add
ds
das
pop
mov
push
and
nop
mov
iret
addr16
dec
add
nop
cli
or
cwtl
fildll
jg
arpl
xor
es
lahf
push
scas
inc
jb
in
fildll
mov
fists
scas
dec
addl
dec
mov
iret
jl
push
cmp
loope
mov
mov
in
dec
jb
push
sub
scas
scas
rcrl
adc
mov
outsb
cs
cmp
div
mov
or
testb
or
dec
jnp
lret
jle
mov
fsubs
pop
ljmp
subl
out
loop
xor
int
jne
mov
adc
or
and
push
xchg
or
test
sub
jp
dec
fcomp
scas
mov
mov
ds
ret
inc
and
jge
pushf
mov
mov
fwait
scas
rcl
inc
mov
and
imul
fldt
push
xor
sar
mov
fldenv
ja
xchg
mov
pop
mov
test
mov
xchg
sbb
ds
mov
adc
add
das
stc
dec
dec
dec
add
cmp
pop
adc
adc
out
jo,pn
pop
cmp
mov
xor
dec
imul
out
repnz
jecxz
mov
addr16
dec
xlat
cmp
add
xchg
lds
and
jo
jno
cmp
int
add
sti
lods
iret
mov
or
ja
sti
jne
rorl
testl
in
in
cltd
xchg
scas
cld
jbe
pusha
out
stos
push
ja
or
sbb
and
jnp
pop
jne
xchg
fwait
pop
add
dec
pop
adc
cltd
cmp
xchg
jmp
scas
adc
in
ss
adc
sbb
mov
xchg
mov
xchg
sbb
cmc
fcomps
aaa
cs
or
pop
xor
sarl
lcall
mov
lods
dec
and
lret
dec
mov
leave
daa
mov
mov
addr16
or
jl
lods
push
js
shlb
pop
fistps
jge
xchg
stc
pop
fnstenv
pop
test
inc
aam
sbb
adc
or
in
mov
scas
enter
lret
inc
sarl
icebp
mov
js
fnstenv
xor
cmp
push
lock
pop
sti
or
daa
insl
insl
inc
es
adc
xchg
loop
xchg
pop
pop
out
pop
pushf
adc
into
mov
dec
fsts
push
inc
sub
out
sub
mov
pop
cld
pop
sbbb
js
sarb
xor
jno
jbe
inc
in
cmp
sub
cs
cmp
gs
mov
and
test
ret
std
pusha
add
daa
lret
out
icebp
and
ja
ret
js
addb
es
movsl
jp
test
push
inc
and
mov
inc
mov
in
mov
cwtl
ret
push
hlt
xchg
mov
lds
push
cmp
add
jbe
xor
push
push
clc
flds
repz
movsb
into
icebp
popf
push
mov
jmp
cmp
xchg
outsb
sahf
stc
sti
repz
and
xchg
out
xor
mov
std
mov
and
adc
outsl
and
cmpsl
mov
mov
das
xchg
lds
dec
sub
lods
push
test
aam
xchg
je
fisubrs
push
dec
cmp
adc
sub
pop
sbb
loopne
lds
shrb
inc
pop
scas
fdivl
mov
dec
andb
ficompl
xor
xor
lret
inc
out
cltd
xchg
jno
aad
fadd
add
cmp
sbb
loope
insb
rolb
aas
jnp
mov
xor
sbb
pop
ja
lock
and
lahf
mov
mov
and
lds
aas
xor
dec
or
xchg
xchg
mov
inc
cmpb
add
pop
inc
lods
inc
jne
pop
inc
ss
mov
push
dec
inc
push
mov
push
or
jle
sti
dec
outsl
or
jns
sbb
sbb
aas
mov
rcrb
ja
test
int
jg
mov
cmp
pop
sub
fmul
sarb
out
and
fistps
out
jge
add
lea
mov
sbb
imulb
nop
cld
adc
les
adc
mov
mov
frstor
in
cmp
dec
aaa
lods
fidivrl
mov
in
xchg
loope
xchg
nop
pop
je
jns
out
lea
pop
imul
cmp
test
pusha
es
dec
mov
lock
sbb
out
push
rorb
ret
sbb
fdivl
clc
iret
xchg
cmpsb
xor
rcrb
cmc
das
add
popa
sub
std
cmc
cmp
aam
or
iret
and
push
nop
inc
push
leave
dec
das
dec
sbb
sbb
into
jp
pop
test
std
ds
gs
or
push
and
dec
mov
rorl
daa
adcb
jne
or
add
iret
push
cwtl
aaa
and
push
lret
mov
insl
roll
scas
xchg
pop
daa
cmp
pushf
or
adc
mov
add
and
ljmp
xchg
repnz
or
xchg
loop
sarl
dec
push
pop
add
in
xchg
mov
dec
pusha
xor
clc
jl
push
or
fcmovnbe
sub
pop
jnp
fdivs
fwait
sbb
sarl
test
js
out
ds
enter
jecxz
lods
pop
pop
fldenv
mov
ret
out
insl
out
add
mov
dec
jne
fstps
mov
inc
loopne
sub
cli
mov
inc
outsb
test
addr16
or
sub
sbb
cld
inc
inc
cmp
mov
sbb
in
mov
cld
lods
mov
aam
push
sbb
push
and
leave
push
bound
cltd
mov
push
and
addl
sub
mov
jecxz
mov
jp
cs
or
pop
dec
dec
push
push
lock
cmp
xchg
or
adc
mov
popa
inc
inc
je
pop
sbb
das
jmp
hlt
xlat
lret
pop
into
push
fxam
cs
movsl
call
pop
out
testb
xor
orl
adc
addr16
xchg
sahf
push
fsts
push
inc
mov
das
pop
sbb
or
das
jecxz
sbb
cs
es
cmp
stc
lods
adc
movsl
imul
xor
mov
lock
inc
inc
cmp
inc
dec
pop
loopne
imul
push
or
cmp
lahf
inc
popa
inc
jbe
and
fcomps
mov
xor
idivb
loop
mov
stos
adc
mov
mov
or
jbe
in
mov
cmp
push
fwait
xor
fldl
lea
in
aas
imul
push
jnp
mov
in
sub
shl
push
jne
shll
xchg
divps
jb
shlb
inc
dec
adc
jg
inc
cmp
inc
jae
jle
jmp
bound
shll
in
and
sti
jmp
lret
in
push
add
lea
cmc
ss
out
in
mov
js
cwtl
push
scas
xchg
shrb
clc
std
fs
mov
js
popf
or
ljmp
fisubrs
aam
or
std
adc
xor
ss
iret
int3
ret
pop
xor
mov
out
mov
repz
dec
mov
das
iret
movsb
ret
js
adcb
in
jecxz
inc
out
andl
call
sub
ficompl
gs
andb
aaa
mov
pop
jg
stos
lock
inc
mov
decl
stos
push
jb
add
mov
pushf
xchg
lods
adc
out
push
adc
jo
mov
cltd
stos
push
rcll
cli
mov
lock
dec
xchg
and
inc
cmpsb
push
sub
jbe
out
cltd
push
test
push
jmp
xchg
lock
imul
jge
push
xchg
cmpsl
sub
out
mov
mov
cmpsl
lret
rcll
iret
leave
adc
mov
add
pop
mov
mov
dec
and
fldt
loope
into
inc
mov
mov
xchg
push
test
cwtl
cmp
adc
rclb
insb
pop
cli
jo
inc
insb
sbb
cwtl
mov
test
dec
lahf
xorl
mov
in
jmp
xchg
fnstsw
mov
and
imul
cltd
sub
popf
mov
xor
js
xor
pushl
xchg
ret
xchg
xchg
mov
mov
and
xor
dec
iret
dec
cli
jno
inc
test
xchg
mov
test
push
sbb
mov
cmp
fldenvs
cwtl
or
addl
cltd
movsl
inc
sbb
call
fstl
adc
imul
mov
sub
call
mov
out
and
ret
mov
fs
ljmp
jnp
js
mov
outsb
push
insl
les
mov
das
xchg
loopne
push
add
fxch
pop
xchg
fbstp
and
cmp
push
or
cs
pushf
das
clc
mov
lret
sbbl
and
push
icebp
and
shrl
cmc
xor
add
ret
pop
js
test
push
iret
cltd
cmp
repnz
cmp
rcrb
cmp
add
jnp
jb
fadds
out
or
jge
push
mov
lds
jne
sahf
imul
iret
push
dec
idivb
xchg
punpcklwd
movsl
mov
stc
cs
ds
mov
sub
adc
xchg
adc
jbe
aad
ja
ja
push
sub
pop
fstp
push
mov
inc
jl
aas
xor
out
push
ret
mov
faddl
je
into
jnp
aas
in
lret
in
mov
out
repz
adc
aam
sub
insb
sbb
out
sbb
mov
adc
cmpsl
sti
sbb
das
mov
and
aad
in
push
stos
mov
clc
inc
ret
xchg
mov
ret
inc
mov
mov
fcomps
add
push
xchg
sub
jo
rcrl
add
nop
int3
insb
pop
or
fiaddl
push
stc
push
lret
add
sbb
sbb
psrlq
inc
jo
test
xchg
cltd
in
stos
fs
nop
xchg
rcrb
mov
push
xchg
adc
in
sub
push
pop
mov
ffreep
mov
sbb
das
fs
jo
push
call
mov
andb
adc
call
adc
fadds
lcall
bound
repz
xor
mov
jo
fnstenv
lahf
mov
lods
push
jbe
pop
call
add
hlt
dec
xor
pop
dec
adc
loop
push
sbb
xor
ljmp
imul
in
fdivrp
dec
aam
jl
xchg
sub
pusha
mov
inc
sbb
lds
adc
mul
call
das
mov
jl
add
repz
pushf
aaa
fwait
popa
adc
jo
pop
test
bound
scas
jl
sahf
pop
movsl
mov
test
imul
pop
and
jno
int3
cli
xor
or
cmp
dec
int
out
mov
notl
inc
cmpb
dec
das
pop
and
jmp
add
sarb
pop
stc
xor
add
scas
out
loop
cmp
in
add
mov
rcr
out
cld
adc
outsl
aaa
ljmp
pop
jmp
fsubl
mov
jg
adc
cltd
shll
pop
cmp
int
mov
push
pop
xchg
and
icebp
rcrl
scas
push
testb
pushf
xchg
ret
push
cli
mov
xchg
fcompl
jge
ret
add
xor
push
popa
adc
inc
sbb
sahf
inc
das
pop
outsl
pop
adc
push
push
cli
fdivrs
inc
xchg
xchg
scas
xor
test
sbb
rcrb
mov
adcb
rorb
jge
cmp
push
data16
and
jnp
or
setno
adc
lea
in
inc
fs
repz
mov
jmp
aaa
mov
pop
push
pop
ss
js
lret
sub
daa
and
fdivrs
mov
push
std
push
xor
mov
mov
xchg
pop
jno
dec
dec
sbb
sbb
imul
loopne
stos
mov
lea
jmp
cmp
lret
fstpt
xor
or
or
test
imul
insl
mov
enter
and
mov
inc
out
adc
push
ja
xchg
in
insl
or
pop
repz
data16
jg
lret
pop
testl
xlat
jl
adc
mov
iret
jnp
out
mov
stos
popa
inc
sbb
adc
jg
push
mov
dec
ftst
dec
imul
jo
pop
scas
lcall
mov
aad
push
mov
pop
sahf
xchg
or
sub
adc
fcoms
push
pop
mov
mov
cmp
imul
or
ffree
mov
mull
mov
out
sub
pop
adc
cmp
arpl
sbbl
mov
and
jmp
jne
scas
or
cwtl
lods
and
mov
add
and
add
nop
push
scas
push
dec
pop
sub
mov
push
xlat
insl
add
pop
mov
jmp
inc
or
cmp
xchg
dec
push
into
in
fwait
xchg
adc
add
pop
ds
dec
mov
into
cmpsl
mov
mov
pop
lods
push
add
lahf
sbbl
xchg
jle
dec
cltd
pusha
and
xchg
xchg
mov
loope
psubb
pop
xchg
out
mov
or
repz
lahf
or
pushf
xor
adc
lods
xlat
mov
lret
inc
mov
jp
imulb
and
addr16
sub
fbld
pop
push
mov
call
jne,pn
push
mov
in
in
inc
adc
or
adc
jne
cwtl
and
jae
insb
rcll
rcr
mov
pop
mov
push
scas
cli
stc
adc
icebp
shrb
pop
shll
fcomi
mov
inc
mov
or
aad
or
in
and
jle
outsl
jp
in
jb
dec
cmp
nop
pop
xchg
aaa
xchg
inc
xchg
and
and
mov
into
pop
mov
cli
sbb
sbb
mov
movsl
and
push
cmpsl
sarl
jns
fwait
pop
seto
ja
rcrb
stos
mov
icebp
enter
adc
sbb
mov
xor
lea
sub
dec
xchg
pop
sbb
test
xchg
lds
mov
xor
mov
out
sbb
fists
lock
dec
mov
sarb
cmp
inc
xor
cld
lret
dec
rolb
cmp
pop
stos
dec
pop
pop
sub
adc
fstps
cs
shll
mov
or
fistpll
out
in
in
push
aaa
popf
lcall
popf
in
push
adc
adc
roll
mov
jg
negl
cmp
and
or
mov
pop
daa
pop
xchg
push
sbb
sub
dec
push
dec
sub
loope
and
cmpsl
xchg
sbb
notl
fbld
lods
xlat
fisttpll
sub
jl
push
mov
dec
int
repz
pushf
cmp
mov
mov
daa
scas
enter
adc
xlat
popf
ss
scas
aad
jl
adc
cmc
pop
xchg
ret
ret
xlat
neg
stos
adc
lds
out
cmp
notl
xchg
cwtl
push
aas
lods
dec
jno
jg
fwait
ljmp
dec
lock
mov
jns
jnp
and
outsl
mov
outsb
scas
sbb
cmp
jae
scas
push
xor
maxps
dec
xor
jg
dec
sti
cmp
xlat
and
scas
inc
mov
outsl
xor
or
push
mov
nop
in
loop
jg
xchg
or
les
jge
pop
xlat
repnz
shl
mov
inc
sarl
rcrb
mov
insl
mov
add
xor
mov
push
mov
mov
out
mov
cmp
out
lret
jb
adc
pushf
cmp
shl
leave
aam
ja
imul
clc
or
inc
sbb
xor
mov
xchg
mov
sbb
loopne
in
das
pop
xor
mov
pop
mov
nop
sbb
bound
pop
ds
adc
scas
xor
or
sub
push
imul
dec
sub
xchg
or
jecxz
adc
stos
mov
fs
inc
hlt
stos
cmp
mov
inc
ja
pop
inc
sti
shlb
lcall
test
fadd
enter
push
or
shrl
outsl
or
sbbb
fstpt
popl
pop
loopne,pn
sbbl
clc
ds
mov
mov
jg
or
mov
adc
sub
adc
addl
mov
jmp
lret
fwait
adc
daa
decl
addb
inc
and
inc
fmul
out
jbe
mov
outsl
inc
jg
mov
dec
loope
mov
mov
push
movsb
fcomps
jle
adc
lcall
push
xchg
adc
fsub
jae
shlb
ret
rcl
rorl
jle
mov
lods
call
je
and
mov
rcrb
sub
out
movsb
ljmp
jns
in
cmp
mov
loope
loop
jg
jp
mov
out
rorl
repnz
mov
fwait
sahf
sub
sbb
sub
das
test
or
aad
sbb
adc
push
leave
sub
ficoms
addl
cmpsb
negl
push
push
mov
push
ss
ds
jns
inc
iret
cmp
movsb
xchg
and
dec
xchg
fistps
out
adc
fisubrl
aaa
push
ret
push
call
fnstcw
push
daa
jb
subb
sahf
adc
inc
ja
cmp
mov
shll
data16
das
aaa
mov
popa
xchg
xor
ret
push
sbb
inc
xchg
sub
push
add
arpl
adc
mov
test
cmp
call
fnstcw
out
imulb
pusha
cmp
cltd
mov
fiaddl
jge
jns
mov
jp
sbb
out
hlt
and
loop
hlt
mov
push
add
outsl
pop
pop
jle
or
jo
in
cld
cmc
mov
imul
orb
loopne
je
sub
mov
jmp
inc
xchg
and
popf
enter
out
in
fcmovu
sbb
or
out
in
into
das
nop
in
xchg
pop
jg
into
pop
pusha
lcall
pop
push
pop
out
andl
out
fnsave
sti
les
mov
xchg
sbb
ja
sbb
mov
test
sti
fists
fists
lahf
inc
fbstp
adc
ds
xchg
pushf
pop
out
mov
xchg
pop
mov
adc
or
loopne
cmp
xchg
jp
or
lods
mov
test
mov
adc
rcrl
cltd
bound
std
out
in
aaa
sbb
fsubrs
push
cwtl
push
lds
push
mov
je
cld
sti
lret
pop
out
mov
push
sbb
cmpsb
loope
pusha
mov
sbb
in
sbb
lret
jbe
sbb
pop
aam
negl
jp
mov
in
loopne
sub
clc
data16
or
lcall
imul
or
xor
dec
fistps
xchg
addr16
repz
test
arpl
iret
clc
fists
sahf
add
cwtl
nop
cmp
int
call
lea
data16
dec
fcomps
dec
fwait
or
and
sbb
mov
insl
test
outsl
xor
xchg
out
into
and
or
mov
sti
stos
repz
cli
dec
mov
xchg
std
inc
cli
daa
inc
les
movsl
pop
imul
movsl
cmpsb
testl
mov
std
stc
jns
pop
mov
inc
dec
fcom
std
mov
arpl
pushf
dec
into
inc
xchg
scas
enter
imul
xor
stos
loope
xor
out
stc
int3
das
jno
das
jo
xor
rcr
dec
icebp
pop
test
cmp
enter
mov
xchg
jg
fistl
insb
call
jmp
mov
in
or
mov
cwtl
inc
adc
mov
mov
sub
mov
pcmpgtb
pop
dec
sahf
push
popf
arpl
sbbb
xor
push
mov
xlat
xchg
xor
inc
lahf
mov
pop
mov
lret
adc
and
sbb
test
fmul
or
mov
rol
jle,pt
xorb
test
mov
jne
xor
fs
mov
cmp
call
pop
pop
stc
xchg
jne
add
jmp
xor
mov
xchg
sbb
enter
pop
dec
mov
pop
cmpsl
xor
ja
loopne
inc
jp
jmp
fiaddl
adc
rclb
gs
adc
jl
or
stc
jmp
or
pop
lods
scas
pop
xlat
leave
mov
and
nop
pop
adc
rclb
dec
lret
call
lret
pop
push
std
jbe
call
inc
nop
adcb
adc
pusha
sbb
or
jle
pop
pop
clc
push
pop
in
stos
mov
mov
inc
xchg
aaa
lods
cmp
ja
xor
inc
mov
push
aad
and
xchg
jnp
or
lock
adc
cli
divb
lahf
roll
and
jecxz
push
add
push
insb
repnz
push
dec
sbb
dec
pop
adc
test
xor
rorb
sti
lahf
cmpsl
cmp
jle
orl
stos
test
jmp
and
cwtl
ret
sbb
test
popa
xor
xchg
sbb
psubsw
aad
ja
ror
je
mov
and
inc
outsl
stos
sbb
mov
pop
cmpsb
stos
push
scas
daa
mov
mov
hlt
test
inc
mov
je
sbb
adc
aad
lds
std
cs
add
dec
sub
mov
mov
mov
push
xor
fld
test
mov
xchg
cmp
fwait
inc
pop
cwtl
pop
pop
pop
jmp
mov
ret
mov
daa
mov
mov
add
sarb
lock
popa
add
mov
sub
mov
cltd
jge
notb
outsl
add
and
fmul
mov
popf
pop
hlt
pop
mov
cmp
adc
inc
push
jo
fsubrs
das
sub
mov
add
and
ret
pop
fsubrs
mov
mov
cs
lret
xorl
fadds
test
dec
aam
push
sti
adc
shl
sub
lock
insb
es
enter
les
mov
mov
sbb
leave
inc
popa
push
sub
mov
iret
out
cmp
cmpsb
xor
dec
add
les
cli
mov
ds
dec
rorl
mov
jo,pt
lret
scas
pop
sbb
jno
rolb
shll
jae
xchg
mov
cmp
mov
inc
fcmovbe
inc
cmp
or
dec
pusha
pop
dec
adc
pop
adc
pop
xchg
push
mov
xchg
jg
movsb
dec
lret
lea
out
nop
push
aam
or
mov
js
addb
xlat
out
stc
jp
loop
pop
into
pop
ret
sub
aad
mov
hlt
inc
fsubr
fwait
cwtl
lret
mov
cmp
sbb
fldl
int
shlb
mov
dec
adc
or
sub
xchg
adc
insl
inc
cmp
and
inc
inc
ss
cmpsl
loopne
test
xchg
das
hlt
loop
cmpb
push
popa
lcall
out
mov
add
cmp
add
inc
ret
lahf
or
fdivl
out
add
rcrl
mov
les
rcrl
andb
shlb
pushf
add
inc
pop
scas
js
adc
pop
sub
mov
adc
pop
inc
icebp
jg
jg
mov
mov
loope
lods
imul
insl
ss
push
adc
ljmp
cs
insb
aad
xchg
fs
pop
es
sub
in
adc
rcrb
xor
xor
lea
outsl
xor
imul
shlb
dec
ja
jns
add
test
adc
outsl
dec
cmp
ret
jmp
test
cmp
push
das
sbb
inc
cmp
mov
mov
dec
stos
dec
xchg
cmp
xchg
out
jb
lds
jns
sub
lahf
call
mov
add
out
xchg
jl
adc
movsb
aam
ljmp
add
or
cmp
xchg
xchg
dec
inc
insl
stc
mov
mov
mov
mov
es
xor
clc
and
jecxz
and
pop
out
pop
lds
xchg
xchg
pop
xchg
daa
inc
test
mov
xchg
lods
inc
jns
addb
mov
mov
inc
push
jmp
xchg
enter
push
out
jo
subb
ja
sub
arpl
mov
jb
and
inc
repnz
fldl
pop
mov
arpl
jge
xor
mov
mov
int
pop
ljmp
mov
sahf
push
xor
dec
adc
push
cli
or
jge
mov
and
dec
mov
xor
cs
test
mov
lret
mov
mov
adc
jmp
in
xlat
dec
out
xchg
call
int3
jns
fistpl
fcompl
bound
cli
repnz
mov
dec
mov
push
or
sub
in
lret
loop
andb
fidivrl
movsl
rolb
push
mov
mov
popf
lret
push
ret
adc
mov
xchg
mov
push
sub
scas
dec
and
pop
push
and
das
jae
add
pushf
scas
push
cmpsb
sub
or
pop
mov
fldt
xchg
das
sahf
push
pop
lds
sbb
sbb
or
dec
in
scas
jno
jo
dec
add
xorb
in
call
out
dec
rolb
imul
adc
insb
adc
sub
jp
jne
push
pop
jmp
fwait
sarl
enter
mov
aas
iret
add
push
jae
fcompl
xor
push
aam
js
pop
and
or
xor
lcall
lcall
sti
jne
add
test
adc
jp
xchg
fdivs
ss
push
cltd
popf
aam
scas
int
js
adc
add
aaa
out
jmp
sbb
rcl
ss
arpl
in
repz
popl
ds
stc
das
pop
ja
xor
lock
aaa
pop
cwtl
inc
jp
pop
xor
fists
idivl
push
pop
xor
push
leave
imul
sub
inc
xchg
popf
loop
popl
inc
jge
sbb
adc
outsb
dec
ss
ret
ja
cmpsl
pop
sahf
cmp
ret
pop
shr
addr16
push
movsl
es
fucom
mov
push
jbe
or
test
aam
sbb
sarl
inc
pop
std
int
out
pop
jge
outsl
pusha
lock
aam
xor
jb
xlat
mov
ret
movmskps
push
jle
push
add
pop
xchg
out
jb
jmp
mov
in
push
in
ljmp
lret
push
nop
adc
shll
push
xchg
addr16
push
popa
mov
hlt
sub
lods
cwtl
dec
add
call
sub
ret
ds
pop
pop
leave
pop
pop
rol
aaa
popf
cld
insl
add
adcl
jle
jb
pop
ljmp
fs
call
xor
cmp
sub
and
out
jno
jns
test
add
icebp
sbb
xchg
cltd
mov
loope
out
mov
cs
pop
inc
xor
test
mov
aaa
sti
xor
mov
cwtl
mov
mov
out
iret
sahf
push
mov
and
mov
fidivs
cmp
add
xorb
dec
mov
sub
cltd
adc
cltd
nop
loopne
fcmovu
call
mov
push
rolb
and
lret
lods
fwait
xchg
movsl
mov
int
mov
xor
loopne
push
ret
xor
sti
cmpsb
cmp
jg
inc
mov
jb
xchg
inc
mov
cmp
test
add
int
and
adc
adc
cmp
cmc
das
cltd
mov
pop
mov
xor
cli
xor
out
lds
sbb
pop
jp
push
mov
div
test
xchg
xor
pop
jbe
adc
inc
mov
repnz
mov
mov
push
mov
lods
pop
sbb
sub
adc
cwtl
and
xor
insl
outsl
inc
sub
hlt
imul
les
sub
out
push
mov
rorb
xor
xchg
in
cli
lods
dec
xchg
cmp
jae
adc
in
test
adcb
out
mov
pop
sub
adc
and
lahf
jb
fmulp
ret
leave
data16
cmpsl
xchg
xor
jne
jnp
push
scas
shr
jmp
cmpsl
mov
mov
stc
cltd
mov
jno
xchg
sub
inc
xchg
aaa
pusha
int3
xor
cmpsb
pop
inc
inc
xchg
mov
test
fmuls
inc
aas
mov
mov
mov
loop
jbe
and
je
lock
push
mov
pop
pop
or
mov
aam
add
pop
aad
scas
movsl
iret
or
or
pop
and
xlat
push
ja
shrb
sub
sbb
leave
test
js
clc
test
cltd
adc
mov
jle
shl
out
or
xchg
jno
push
test
and
push
dec
dec
dec
test
xchg
pop
gs
mov
adc
mov
in
pusha
es
or
mov
push
xchg
push
sarl
pop
xchg
arpl
push
addr16
inc
mov
cltd
cwtl
sub
stos
ljmp
addl
ret
and
cli
sti
ja
xor
daa
jne
jns
adc
hlt
arpl
clc
lds
mov
lcall
xlat
sub
mov
push
inc
pop
dec
mov
rolb
pop
push
mov
in
arpl
pop
lret
ret
popa
cltd
pushf
ret
sbb
popa
xchg
ss
inc
cmp
aaa
xchg
sub
call
rcll
mov
adcb
jge
and
adc
cmp
sub
dec
in
xor
jmp
into
push
jb
push
xor
daa
mov
cmp
add
sbb
jl
rolb
add
fists
or
sbb
sub
xor
xchg
pop
add
push
lret
ja
xchg
fwait
push
xor
cltd
sbb
pushl
fwait
cld
push
mov
jbe
push
das
ja
and
dec
inc
mov
inc
jbe
push
cmp
cmpl
push
xlat
out
popa
lcall
push
or
orl
xchg
in
dec
xor
and
push
lods
sub
and
adc
push
int3
jmp
adcb
sbbb
adc
lret
test
pop
inc
sbb
bound
dec
xchg
xorl
mov
cmpb
addr16
mov
gs
push
fnsave
jl
add
pop
pushf
rclb
inc
scas
sbb
out
shrb
clc
mov
popa
sbb
and
xchg
adc
clc
lods
adc
cmp
and
in
rcr
jl
jae
loopne
inc
xchg
fsts
das
jnp
sbb
ja
push
or
neg
mov
mov
cmpsl
jne
insb
inc
fisttpl
out
jge
jae
lock
cltd
sarl
pop
rcll
or
fs
mov
cwtl
retw
pop
ja
popa
cmp
aam
mov
jae
hlt
push
and
popf
lcall
and
jge
xchg
and
roll
mov
lods
inc
sti
cli
push
mov
shlb
mov
dec
and
xchg
outsl
add
pop
dec
sbb
pushl
xchg
mov
push
lahf
mov
and
das
loope
iret
int
jp
bound
insb
mov
pop
add
mov
clc
mov
push
fadds
xor
fcomps
inc
popf
mov
push
fadd
adc
and
push
add
cmc
push
mov
inc
xlat
gs
aaa
push
cmp
sarb
int
push
cmp
fcoms
push
pop
rcrl
sarb
mov
arpl
fs
dec
pop
addr16
insl
ficoml
adc
in
mov
leave
xor
xlat
imul
mov
lods
sub
adc
out
xor
ljmp
not
lea
push
pop
sub
shlb
sbb
les
jne
xchg
scas
mov
rcrb
mov
mov
aas
xor
repnz
or
ja
enter
mov
mov
push
loopne
push
pop
push
js
lcall
inc
popa
ljmp
sub
mov
and
pop
test
inc
pop
sahf
repnz
movb
mov
add
das
xchg
sub
jb
mov
mov
inc
adc
push
pusha
std
or
popf
xchg
dec
xchg
mov
xorb
outsb
addr16
cmp
inc
int
cs
jl
cmp
adc
inc
xorb
sbb
cmp
int
scas
add
ja
or
in
or
push
icebp
lock
pop
or
mov
cltd
loop
push
push
pop
cmp
xor
loop
pop
leave
push
test
sarl
sbb
lock
rcrb
or
mov
mov
loopne
cmp
xorl
dec
push
cwtl
insl
and
stc
xor
and
in
xchg
repz
jmp
push
scas
in
push
fidivs
dec
adc
push
sbb
clc
mov
lods
xor
pop
pop
or
and
jl
xor
ds
mov
mov
pop
out
popa
xchg
out
xchg
nop
mov
mov
xchg
jae
call
stos
mov
mov
fists
mov
push
scas
ficoml
pusha
sub
jo
xor
or
hlt
scas
adc
roll
insl
addr16
cli
push
jle
call
mov
pushf
mov
or
cltd
mov
add
dec
fimull
out
cli
push
xchg
jae
lds
fs
arpl
add
and
xor
xlat
scas
pop
ss
mov
jge
in
pop
mov
in
jg
int
cmp
xchg
xchg
adc
cltd
lahf
lret
and
xchg
push
adc
dec
adc
bound
pop
fstl
push
pop
ret
sub
sbb
pop
lea
jno
flds
xor
daa
add
stc
adc
lret
pop
sbb
pop
or
pop
sbb
je
mov
xchg
cmp
push
mov
xchg
and
xchg
mov
mov
fsubr
adc
and
dec
push
add
jo
aam
xchg
sti
fstpl
inc
xorb
lds
pop
lea
fs
aam
mov
inc
pop
cwtl
xchg
jle
sahf
mov
xchg
cltd
fsubrl
ja
xlat
das
punpcklbw
add
add
gs
or
pop
adc
scas
lods
cmp
mov
xchg
mov
in
test
shrb
dec
adc
lods
bound
push
cmp
test
mov
mov
pop
es
mov
fimull
xor
repz
out
cmp
jb
dec
xchg
js
mov
js
ror
ds
cwtl
shrb
lret
iret
dec
mov
sbb
mov
sbb
mov
xchg
mov
xor
ret
loopne
mov
jmp
notl
mov
sbb
test
mov
mov
pop
dec
sub
lahf
inc
xchg
xchg
mov
or
xchg
mov
xor
mov
sahf
xor
test
sub
aas
jg
sub
jbe
mov
call
xchg
or
adc
scas
sbb
pop
bound
mov
outsb
pop
ja
inc
sarb
cmp
dec
dec
scas
rorl
je
xchg
add
xor
pop
lahf
cltd
mov
adc
jae
xchg
mov
lock
pushf
mov
or
dec
pop
jmp
cmp
sti
js
cmp
mov
ds
in
shl
adc
inc
mov
inc
addr16
jo
adc
push
push
cwtl
xor
test
jns
in
pop
sub
test
cmc
mov
scas
xchg
cmp
push
in
ljmp
xor
adc
insb
push
dec
sub
or
and
push
stc
leave
fldcw
adc
push
test
aaa
test
pop
je
pop
fnstenv
idivb
jge
int
cmp
popa
adc
jbe
pop
insb
sbb
inc
bound
rolb
inc
in
mov
lea
aam
cli
testl
xchg
aam
into
sbb
in
pop
push
arpl
sbb
popf
lea
add
ss
int
xchg
rcr
pop
xchg
insl
fwait
xor
mov
out
and
popf
aaa
jae
sbb
and
insb
xor
iret
sub
mov
fidivrs
inc
int3
sbb
sar
jns
jo
ffreep
xchg
lea
xchg
xchg
sbb
xchg
es
jae
mov
jge
lcall
and
scas
lock
mov
daa
insb
or
push
dec
cmp
add
jne
jmp
fs
xorl
test
xor
push
mov
dec
sbb
adcl
or
push
and
sub
enter
add
add
ds
mov
es
hlt
stos
fmull
call
call
push
xchg
scas
mov
out
imul
xchg
fnsave
in
sub
inc
inc
aad
pop
and
push
and
in
xor
dec
lds
cmove
aas
shrl
jmp
pop
adc
rol
mov
pop
inc
shr
in
cmp
inc
mov
dec
scas
rclb
jp
pop
fstl
test
cwtl
orb
or
cmpsb
or
push
orl
or
cmpsb
pushf
push
xor
lcall
out
xchg
lcall
inc
test
push
mov
ret
and
inc
idivl
mov
mov
lcall
cmpl
loope
repnz
div
pusha
sti
fsubrs
mov
mov
and
xchg
cltd
mov
xor
rcll
jge
cmc
and
sti
jp
arpl
cmp
push
push
or
sahf
jno
fcmove
sub
ja
cs
jle
mov
push
and
sbb
shrb
xor
negl
std
aas
sbb
cltd
mov
and
push
cmp
inc
lcall
pop
pop
sbb
shll
sahf
ficompl
ljmp
add
mov
in
sbb
ret
mov
out
daa
mov
sub
imul
popf
mov
inc
aad
int3
sbb
das
push
fs
test
push
jbe
sti
cs
inc
ja
mov
cmpsl
lods
ror
sub
push
mov
pop
xor
ljmp
xor
insb
pop
mov
xchg
pop
add
leave
mov
in
fwait
pop
xchg
pop
jge
aad
xchg
xor
les
mov
pop
notb
mov
into
inc
js
pop
imul
xor
test
sub
xchg
cmp
and
mov
rorb
sbb
jmp
pop
repnz
cmpsb
out
ja
ds
test
add
out
divl
and
arpl
pop
inc
cwtl
sbb
insb
pop
mov
dec
xor
into
jmp
iret
push
in
stc
push
stos
xor
pop
pop
cmpb
bswap
lods
pop
idivl
add
sbb
and
mov
adc
mov
xchg
mov
pop
out
push
enter
popf
insb
or
xchg
jno
cld
icebp
push
mov
adc
lahf
sub
jo
dec
mov
push
inc
sbb
int
mov
mov
adc
dec
lret
xlat
mov
in
add
mov
xchg
push
repnz
xor
jne
out
pop
repz
in
dec
fnstcw
xchg
leave
sbb
sbb
mov
shl
test
adc
xchg
imul
jnp
lods
dec
cwtl
incb
lahf
sub
aas
sbb
jne
jecxz
xchg
pop
sbb
test
dec
cs
mov
fldenv
cmp
or
mov
mov
lods
daa
mov
mov
repnz
sbb
std
adc
ja
cld
pop
push
lock
flds
sbb
sbb
outsl
inc
jne
lea
jne
sbb
rol
imul
adc
and
sbb
clc
mov
scas
push
mov
jno
loopne
in
dec
hlt
hlt
setle
subb
popa
mov
and
jnp
add
mov
out
jne
rorl
adc
cltd
sbb
clc
rorb
xchg
mov
cmp
mov
jle
xor
idivb
dec
mov
push
mov
shll
mov
fnstcw
jb
mov
aam
mov
mov
add
xchg
orl
rsm
out
out
dec
sub
push
sarb
mov
inc
inc
jo
sbb
push
out
fnstsw
inc
dec
mov
shll
mov
jo
inc
pop
cmp
sub
mov
cmp
mov
ret
and
mov
sbb
lock
dec
jo
insb
pop
push
and
dec
sbb
mov
mov
inc
mov
xor
adc
icebp
test
mov
push
sbb
daa
movb
imul
shll
aaa
dec
sbb
inc
imul
aas
arpl
lahf
pop
fwait
cmpsl
mov
push
outsb
cmpsl
and
fists
cmovno
cld
repz
mov
popa
inc
cmpsb
enter
int
loopne
push
push
shll
das
push
ljmp
popa
js
cmp
arpl
pop
mov
inc
shrl
lcall
push
push
pop
stos
pop
sbb
sub
shrl
pop
add
out
clc
mov
adc
pushf
sahf
ja
fwait
xchg
cltd
xor
mov
loop
cmp
mov
nop
mov
ficomps
jmp
stos
and
pop
stc
pop
pop
xchg
lcall
fstps
cmp
xor
mov
mov
ja
cltd
imul
outsl
cmp
iret
add
pop
fs
adc
shlb
ss
cmp
fstpt
sbb
and
iret
insl
or
mov
rolb
ja
ds
mov
mov
enter
mov
pop
sbb
ficoml
jle
jmp
data16
xlat
push
scas
pop
pop
mov
sbbl
sti
xchg
cmp
in
mov
or
popa
xor
or
cmp
outsl
push
std
incb
movsb
lods
das
int3
push
xchg
shrb
push
out
mov
push
xor
aas
sahf
lret
jmp
leave
loope
mov
sahf
cmp
inc
movsb
lods
jg
or
mov
xor
ljmp
std
sbb
adc
add
fs
mov
and
adc
loop
shlb
ficoml
sbb
addb
sub
and
xchg
cmp
stc
stos
pop
in
or
cmp
in
out
sbb
sub
jno
add
pop
into
aaa
lcall
inc
fs
inc
orb
cmp
push
je
lods
cmp
dec
lret
jg
mov
fstps
enter
lods
cmp
lret
pop
pop
mov
clc
mov
cmp
in
and
mov
cmp
ret
clc
icebp
cwtl
xchg
inc
xchg
repnz
pop
cltd
jb
xchg
jg
sti
into
dec
mov
call
icebp
push
jg
or
fwait
adc
add
inc
outsl
shl
and
iret
mov
or
xor
pop
in
cmp
dec
insb
lret
lret
xor
imul
dec
add
stos
jg
pop
loope
jg
mov
rorl
sbb
xor
int3
push
lcall
inc
cmc
pop
dec
pop
xchg
dec
leave
cmp
push
xchg
sahf
adc
pop
movsl
in
clc
and
mov
inc
push
xchg
jbe
jmp
aas
sbbl
scas
or
rcrl
notb
inc
and
add
xchg
pop
jle
test
push
xlat
mov
mov
mov
xchg
lds
lcall
test
int3
clc
push
push
loopne
lods
lock
shlb
jbe
sti
insb
and
loop
mov
jg
jmp
fistps
and
inc
xchg
ss
inc
aam
shr
bound
cmc
arpl
mov
inc
sbb
rolb
ret
iret
xchg
mov
outsb
push
stos
fmuls
cmp
xchg
push
mov
adc
test
lds
mov
pop
sbbl
lret
lods
jg
cmpsb
adc
stc
cwtl
iret
push
outsb
test
aam
out
pusha
outsb
adc
push
cmp
jnp
mov
xchg
sarb
aas
push
push
out
ret
stc
fists
xor
inc
stc
jbe
cmpb
nop
aas
push
in
je
cli
sbb
cmp
nop
or
mov
lods
pop
jmp
lods
mov
outsb
xchg
lea
mov
outsb
mov
pop
sbb
mov
hlt
push
out
daa
jp
scas
test
sbb
jns
ret
inc
adc
lahf
subb
dec
xchg
adc
mov
pop
xchg
loopne
or
or
sbb
xchg
jae
lcall
mov
xchg
push
movsb
xchg
lods
je
lds
pop
xchg
pushf
mov
xor
out
mov
out
push
icebp
pop
pop
mov
xor
jmp
or
push
dec
and
or
sbbl
rcr
nop
inc
rorb
ret
shll
scas
out
cmp
popa
jae
ds
fs
pop
pop
mov
jne
shlb
sub
xchg
pop
shl
inc
out
pop
push
adc
push
mov
rorb
les
xchg
and
sbb
aad
in
sbb
sbb
pop
pop
pop
dec
inc
cli
std
pop
cmp
jg
pop
popl
insl
cwtl
jae
daa
inc
adc
int3
lods
sahf
fwait
push
inc
mov
pop
out
gs
shlb
jb
xchg
loope
aas
push
sahf
pminub
sub
pop
stos
jecxz
adc
dec
nop
push
sub
adc
test
addr16
xchg
inc
in
fcomps
mov
xlat
std
jno
mov
stos
nop
shlb
xor
scas
mov
inc
jp
dec
pop
mov
sbb
ret
mov
lea
scas
vmread
add
loopne
fcmovne
ja
add
out
pcmpeqd
cmpsb
sbb
and
mov
rorb
cmp
jnp
jmp
imul
rcrb
rorl
jo
lret
mov
ret
jns
cmp
lock
leave
sub
shlb
stos
push
sahf
mov
psubusw
sbb
or
dec
cmp
dec
jno
dec
mov
jg
aaa
xor
sbb
mov
xchg
rcr
sbb
jmp
out
jmp
cmp
shlb
and
jne
cmp
mov
adc
sbb
jge
jb
lods
adc
sbb
ret
jge
jg
dec
or
or
push
jmp
cltd
in
mov
xchg
pop
aad
adc
push
les
add
inc
aaa
and
cmp
out
aaa
add
fsubrs
add
inc
dec
mov
jns
xchg
fisubl
into
loopw
bound
insb
cmc
adc
inc
fimuls
jb
mov
inc
cmp
cmp
mov
pop
adc
loop
subl
inc
mov
sub
ret
in
outsb
pop
pop
add
jecxz
adc
push
or
jns
xchg
pop
jp
cmp
xor
fistl
or
stos
xor
xor
pop
cmpb
adc
dec
dec
xchg
jl
jl
out
icebp
fs
shll
les
iret
movsl
loope
pop
insb
dec
push
test
aam
mov
push
cli
movsl
adc
jmp
xchg
cltd
sub
push
xlat
shll
lahf
jo
fnstcw
test
shll
in
push
lea
ret
mov
mov
dec
insb
ret
and
cld
popf
mov
cmp
insl
jo
sub
pop
dec
sbb
sub
leave
xor
pop
cli
lgdtl
mov
sbb
lock
and
sti
cld
lahf
and
xchg
add
cltd
pop
lret
xchg
scas
adc
or
push
mov
mov
push
notl
xchg
in
dec
fldl
jnp
pop
arpl
xor
jle
dec
pop
sbb
inc
cs
scas
xchg
fisubrl
ret
adc
and
sub
jae
cld
adc
xchg
push
sub
jecxz
lcall
mov
inc
fnstcw
loop
mov
and
mov
aam
fldt
jnp
inc
adc
fistpll
push
mov
cmpsb
test
xchg
lret
cs
int3
or
ljmp
cltd
lds
push
dec
aaa
mov
je
loop
push
scas
and
lock
scas
push
loop
scas
cwtl
jmp
sbb
cmp
and
sti
sbb
movsb
and
pop
mov
mov
adc
shll
cmp
outsb
sub
or
dec
mov
sub
push
push
xor
shrl
jno
aaa
shlb
cltd
sbb
out
cmp
addl
ljmp
and
cmp
fnsave
ljmp
adc
cmp
aad
das
es
mov
shlb
mov
sub
lock
sub
fs
stos
add
mov
ss
sub
movsl
push
push
sbb
jb
mov
xchg
and
loop
mov
xchg
sbb
mov
enter
dec
lods
adcl
adc
xor
lock
fcompl
shll
jp
xchg
adc
jmp
mulb
insb
pushf
lcall
mov
inc
mov
xor
cmpsb
mov
lods
mov
mov
xchg
ficompl
nop
sub
pop
and
fistpll
movsl
inc
test
scas
arpl
iret
iret
push
dec
nop
dec
cwtl
pop
inc
mov
jns
inc
inc
test
or
mov
push
or
mov
dec
mov
and
ljmp
lods
gs
jge
mov
xchg
inc
and
jns
out
shr
jg
and
rcll
cwtl
xchg
pop
xchg
out
mov
std
loop
jne
lock
mov
cs
leave
adc
sahf
cmp
or
pushf
mov
fists
orl
and
js
xchg
fwait
outsl
call
test
stos
popf
ret
test
js
ja
out
add
outsb
push
outsl
lea
push
adc
loopne
add
jns
push
adc
arpl
lods
es
jns
xchg
loop
xchg
jnp
xchg
aam
fisubs
adc
mov
leave
lret
call
pop
dec
inc
jbe
clc
mov
jmp
aam
xchg
xchg
and
mov
incb
fists
and
dec
pop
mov
cld
mov
hlt
out
mov
add
testb
inc
adc
and
popf
pop
xchg
ror
mov
jo
imul
cltd
inc
or
xor
cld
cmp
mov
lret
lret
stos
mov
clc
push
adc
adc
shlb
dec
shr
int
andb
fsubs
or
fnsave
sarl
ljmp
cmp
push
xchg
cmpsl
pop
dec
mov
jo
adc
mov
iret
int
jno
cwtl
pop
or
xchg
imul
aad
sub
frstor
sub
lret
lret
jle
cltd
ja
mov
pop
sbb
sub
cwtl
sbbl
movsl
sbb
outsl
ret
push
mov
fadds
imul
mov
scas
test
sub
aaa
xchg
xchg
shlb
mov
pop
shl
mov
sub
mov
jg
in
scas
xor
in
push
mov
pop
mov
mov
jle
or
leave
adc
pop
xchg
add
add
sbb
sbbl
loopne
inc
ficoms
cmp
mov
fstps
adc
mov
repz
out
mov
arpl
and
scas
dec
int3
pop
lret
rcrl
sbb
adc
imul
and
cmpsl
sbb
js
lock
js
push
inc
sub
ret
lea
mov
shlb
pop
xor
mov
xchg
pop
out
mov
and
jns
pop
ds
es
andb
jp
jl
and
scas
dec
popf
lahf
out
out
add
mov
daa
pop
sbb
insl
xchg
jno
cld
clc
out
lcall
adc
pop
push
mov
jle
adc
shrl
adc
jae
enter
shll
add
inc
lcall
jg
hlt
outsb
mov
jmp
nop
mov
cmpsl
aad
jbe
and
scas
adc
mov
pop
push
mov
mov
shrl
mov
outsb
add
mov
xchg
in
stos
outsb
sbb
aad
mov
mov
popf
test
push
mov
sar
cs
jl
cwtl
icebp
dec
sbbb
xlat
adc
hlt
sub
popl
xorps
movsb
enter
push
xor
rorb
sbb
dec
jg
das
push
or
addr16
add
leave
add
push
pop
stc
add
insl
sbb
mov
mov
xor
ds
xchg
movsl
push
mov
js
out
scas
and
add
cmp
push
jecxz
or
inc
mov
sti
and
jbe
sub
mov
fsubl
dec
and
fwait
sbb
and
dec
mov
stos
lea
mov
inc
adc
xor
fidivl
mov
jle
pop
sbb
jne
repz
dec
fsubl
jp
jl
jno
movsl
pushf
int3
mov
xlat
mov
pushf
pop
pushf
or
rorl
ret
jbe
out
jmp
jae
das
call
es
fnstcw
cmp
sar
sbb
cmp
js
jmp
mov
sbb
fs
pop
dec
cmc
jmp
je
fcoms
shrd
ds
in
mov
pop
jns
xchg
push
xchg
xor
outsl
mov
cmp
ret
lret
nop
in
ret
cmp
ds
cmp
lods
shl
imulb
stc
add
mov
xabort
xor
inc
popa
pop
ds
lahf
aaa
xchg
out
nop
test
lcall
stos
movsl
arpl
hlt
mov
inc
cmp
ljmp
rcrl
inc
inc
jecxz
pop
add
aaa
mov
xchg
jl
xchg
les
rcrl
fs
cmp
jns
out
jp
jl
jp
lock
pop
movb
push
insb
in
mov
imul
sti
jecxz
cmp
fiaddl
lods
imull
sarb
sbb
fnstcw
xchg
pop
pop
scas
lcall
dec
xchg
and
std
lret
lret
test
gs
loop
icebp
mov
mov
xchg
lds
push
int3
sub
lahf
aam
push
xchg
xchg
imul
mov
scas
pop
push
loopne
mov
xor
lods
shlb
iret
jecxz
pop
jne
adc
pop
fmulp
stc
fwait
das
sbbb
sub
ss
mov
addb
lods
into
stc
addb
sub
lock
dec
pop
push
in
push
cmp
fmull
xchg
cmp
out
add
lret
dec
dec
lahf
mov
das
sub
test
mov
int3
push
mov
into
imul
dec
mov
pop
inc
in
hlt
ror
add
mov
jbe
and
lret
jo
push
jl
push
xchg
das
sub
push
xchg
mov
mov
fisubrl
pusha
aad
add
pop
cmpsl
std
cmc
pop
xchg
xchg
xchg
mov
xor
lock
insb
dec
je
jmp
adc
ljmp
mov
jmp
sbb
hlt
add
xchg
pop
cmp
lods
ja
scas
push
daa
adc
inc
pop
stos
test
xor
and
cmpsb
aad
add
fwait
or
scas
lock
xchg
sti
xor
andb
cmp
ficompl
pop
stc
rorl
fwait
xchg
pop
mov
lcall
mov
das
cmp
cmp
mov
data16
adc
into
mov
add
int
fsub
mov
in
jno
lods
push
mov
dec
sbbl
loopne
push
lret
popa
inc
or
adc
mov
sbb
test
lds
sahf
inc
jge
cmpsb
in
rcrl
movsb
fwait
loope
hlt
xchg
pop
or
lret
push
pop
leave
testl
xor
jae
test
dec
test
jo
sbb
and
jmp
scas
mov
inc
xor
push
pop
cmp
popf
mov
je
ret
mov
sbbl
in
mov
je
dec
pop
or
mov
outsb
mov
gs
gs
scas
xchg
mov
cmp
loopne
push
test
arpl
sbb
das
mov
cmc
hlt
and
jg
mov
mov
push
inc
cmpsl
mov
in
and
insb
jns
sbb
in
sbb
imul
add
pop
leave
fsubrs
imul
xchg
jp
inc
xchg
mov
ret
or
les
sbb
adc
rolb
leave
xchg
mov
jns
movsl
sbb
jns
pop
test
adc
out
xlat
outsb
mov
mov
aad
inc
enter
pop
mov
out
mov
adc
pop
push
jle
ficoms
mov
subb
ficomps
push
dec
sarl
stos
cwtl
xchg
mov
aam
outsb
lahf
ret
sub
mov
je,pt
insb
lret
adc
inc
mov
sbb
fisubrl
xlat
xchg
jmp
push
sahf
lds
mov
mov
ds
out
jmp
pop
mov
pop
rorl
xchg
and
xchg
mov
loopne
cmp
jmp
aad
mov
pop
filds
jg
or
mov
dec
std
fcoms
addr16
stc
inc
xchg
repz
mov
fwait
mov
pop
sub
andl
dec
push
lea
inc
sarb
cmp
pop
mov
xlat
mov
cwtl
scas
inc
lea
xchg
insb
sbb
iret
push
xchg
ds
inc
pop
lcall
mov
jg
ficompl
daa
and
lcall
aad
adc
cltd
pusha
int
mov
call
sub
out
loop
mov
fwait
jae
pop
mov
jecxz
icebp
sub
or
cmp
test
or
and
push
push
jns
mov
xchg
in
clc
mov
sub
repz
cmpsl
mov
mov
cs
mov
dec
inc
adc
mov
lds
out
xor
mov
outsl
cmpsb
xor
test
insb
das
lods
dec
adc
lret
lock
iret
or
and
imul
cmpsb
add
mov
daa
add
stc
dec
lcall
out
negl
push
jns
pop
ljmp
adc
aaa
std
and
mov
xor
or
and
mov
mov
or
insb
iret
push
mov
push
fistl
pop
jbe
xor
data16
mov
push
insl
mov
dec
icebp
mov
test
xor
mov
cmp
inc
bound
fs
in
jecxz
add
pop
clc
cld
inc
push
or
jae
std
movsb
jne
cmp
cwtl
jne
dec
pminsw
or
ret
fidivrs
sub
xorl
cmp
daa
xor
mov
dec
lods
dec
int
pushf
dec
mov
push
mov
and
repz
lcall
cmpsl
pushf
lret
mov
out
fidivrl
jo
jmp
call
xchg
stos
lods
mov
and
cmc
push
enter
out
add
in
repz
push
loope
lea
jnp
or
bnd
add
dec
pop
shll
cmp
or
xchg
sub
and
sar
sti
pop
dec
rorb
add
and
test
sbb
sub
addl
sub
int3
scas
insb
lret
in
imul
les
fs
fsub
jg
jae
xchg
jp
js
test
ds
shrb
xchg
xor
test
xchg
enter
loop
fiadds
aaa
fisttpl
test
jo
test
mov
lret
push
add
xchg
scas
scas
cmc
mov
pushf
xor
enter
rcrl
inc
loope
lahf
sbb
inc
push
sbb
pop
test
repz
sti
pop
cmc
scas
lret
call
dec
inc
cmp
sbb
testl
rcll
jno
jo
cli
sbb
xchg
gs
xchg
ret
cmpsb
dec
lret
cltd
add
push
mov
add
daa
sub
inc
push
lret
cltd
and
stos
das
nop
mov
int
xor
pop
in
push
incb
aaa
xor
pushf
jnp
pushf
sbb
dec
rcrl
fistpll
lds
cltd
scas
mov
pop
adc
sbb
aaa
adc
cmp
inc
in
and
repnz
pop
jg
int
ss
popa
push
leave
xor
arpl
mov
pushf
loopne
leave
mov
adc
mov
mov
fwait
test
fdivs
mov
push
xchg
sub
shrb
mov
sub
mov
mov
jg
sub
je
jo
and
push
inc
rcrb
arpl
or
ja
mov
aaa
or
add
xchg
xor
fmuls
xor
mov
xlat
imul
xchg
lods
decb
mov
add
sbb
mov
imul
int3
jg
js
xor
imul
push
xchg
inc
mov
sbb
pusha
fisttpl
scas
pop
add
xchg
popa
in
adc
cli
jl
es
or
xchg
pmaxsw
adc
cmp
or
lods
shlb
test
xor
xchg
mov
call
push
inc
orl
maxps
in
pop
jg
enter
stos
out
test
sbbb
mov
dec
test
ficomps
cli
sahf
loop
addb
cmpps
xor
jge
sub
xchg
scas
jae
jae
repz
pop
imul
cmp
lods
jae
aad
leave
scas
push
mov
das
fcompl
lea
mov
imul
mov
mov
mov
mov
aad
fdivrl
sub
xor
and
pop
pop
xchg
inc
add
pop
cs
pop
adc
rorl
pop
push
mov
lcall
test
addb
jg
push
lea
jnp
call
pop
pop
sub
stos
adc
jecxz
or
lret
mov
pop
adc
add
push
dec
or
lahf
out
or
in
pop
out
xlat
push
push
insl
inc
and
out
mov
mov
clc
lods
ljmp
stos
inc
inc
loopne
stos
or
mov
sub
mov
sub
ficompl
pop
jg
ljmp
shrd
jecxz
or
ja
push
insb
push
pushl
mov
das
fistl
fsts
loopne
pop
jbe
mov
cs
cli
jb
lods
mov
push
lcall
inc
das
icebp
mov
cltd
je
mov
mov
xor
pop
dec
dec
pop
sub
mov
adc
xchg
jae
call
addr16
lahf
lea
xlat
scas
jae
inc
cmc
das
aaa
in
addl
fistl
inc
les
mov
sub
and
sbb
lcall
push
adc
cmp
sub
fmuls
mov
jne
test
cmc
pop
int
mov
sarl
mov
aam
aaa
xor
xchg
outsb
and
xlat
scas
jmp
sbb
mov
das
hlt
das
push
mov
out
xchg
jmp
pop
add
sub
mov
lahf
rcrl
mov
std
pusha
stos
notb
xor
add
lahf
cltd
les
adc
test
fiadds
sub
sbb
ja
push
dec
sub
shrl
cmp
mov
nop
fisttps
rorl
insb
adc
pushl
addr16
fwait
inc
cmp
xchg
repnz
mov
mov
mov
inc
call
jecxz
cmc
push
push
lock
hlt
fucom
fisttps
loopne
repnz
call
test
call
cmc
sbb
test
fbstp
std
xchg
sbb
mov
loopne
jnp
adc
das
in
and
push
push
pop
sahf
fstpt
adc
cmp
jb
pop
arpl
mov
js
jb
testl
les
test
adc
dec
pop
dec
scas
push
xchg
cld
cmp
fs
add
out
pop
cld
or
movsl
shrl
roll
popf
mov
mov
testb
and
aad
mov
loopew
cmp
mov
pop
scas
and
mov
mov
xchg
stos
push
cld
sbb
mov
aas
gs
outsl
mov
int
mov
jb
jg
lret
movsb
xor
pop
add
jge
repnz
aad
push
xlat
pop
xlat
test
xor
push
add
fwait
clc
repnz
or
cs
andl
stc
clc
sbb
movsl
mov
sbb
mov
add
add
mov
mov
mov
into
pop
out
pop
jb
mov
inc
cli
cmp
aaa
xor
push
mov
in
cltd
es
pop
dec
test
js
mov
aaa
lahf
jmp
stc
fsubrl
sub
loope
mov
xor
pop
daa
jae
lcall
mov
inc
lahf
dec
mov
pop
shll
xchg
xchg
jns
lret
dec
xor
lds
pop
int
push
movsl
jo
ds
lea
push
pop
sub
cs
test
add
dec
mov
jbe,pt
sbb
repnz
test
mov
pop
lcall
xchg
sti
int3
dec
push
in
jg
pop
mov
adc
jae
loope
lods
outsl
jo
pop
test
sahf
jno
sub
cld
mov
js
out
sbb
push
lret
jb
lods
push
mov
pop
repnz
in
push
mov
inc
jmp
push
cmp
arpl
sub
aas
mov
mov
jo
and
mov
mov
jp
xchg
xorb
xchg
lcall
cmp
addb
repz
inc
bnd
pusha
sahf
addr16
push
add
pop
loopne
mov
imul
xchg
in
sti
aad
pusha
and
mov
push
adc
mov
repnz
fstpl
pop
sbb
mov
jecxz
or
mov
das
adc
sub
ficompl
pop
cmc
add
shlb
fistl
dec
jle
cmp
lahf
add
out
mov
or
push
cmp
mov
pop
cli
std
sub
adc
cld
ja
shr
sti
es
pop
fsubl
dec
movsl
mov
jb
push
cmpsl
xchg
cld
mov
push
push
cld
xchg
jg
jmp
lret
cs
mov
in
clc
into
cltd
pop
inc
pop
cmp
push
pop
inc
cmpsl
sbb
sbb
mov
shl
xlat
dec
shrl
aas
jno
sahf
jo
inc
aad
hlt
rolb
dec
les
idivl
dec
jbe
inc
mov
jns
mov
in
sbb
inc
add
or
fstps
in
mov
cmp
mov
mull
dec
int
pop
rcr
push
fwait
push
test
xor
lea
fdiv
pop
lock
sub
pop
cmp
sbb
or
repnz
stos
sarb
cld
xchg
cmpsb
adc
test
stos
testb
neg
in
xchg
or
push
hlt
ret
fcomps
outsl
dec
adc
daa
hlt
jbe,pt
sub
inc
fcmovnbe
push
les
cmp
mov
aad
cli
or
pop
pop
data16
adc
jle
shl
sbb
lock
fistpll
clc
pushf
jle
rcr
rcrb
das
out
ret
adc
jns
out
shl
pop
enter
repz
inc
rclb
repz
sar
xor
insb
in
xlat
stos
xorb
mov
scas
rolb
and
rclb
shl
and
mov
je
pop
jnp
testl
mov
nop
leave
xlat
loope
jb
ja
call
call
mov
outsb
js
xchg
jmp
mov
mov
mov
fsub
dec
and
sub
sarb
xchg
xchg
stos
push
fisubrs
orb
dec
movb
lock
mov
lods
add
addr16
pop
cmp
mov
mov
fistps
aas
subb
fidivrs
dec
add
and
stc
insb
dec
insl
mov
cli
jle
sti
loop
ficomps
add
scas
xor
shl
pop
dec
dec
mov
add
scas
sub
mov
push
fsubrl
inc
sbb
sar
cwtl
adc
insl
mov
xchg
push
out
xchg
xor
shl
in
cwtl
mov
mov
adc
pop
in
popf
pushf
inc
jo
xchg
cwtl
xchg
mov
pusha
mov
movsl
mov
sub
inc
mov
ds
jae
lods
ss
mov
add
fwait
sbb
xor
mov
nop
add
cmp
jbe
cmp
push
repz
stos
add
mov
xor
lea
mov
dec
sbb
cmp
lret
scas
xchg
pop
cmp
xchg
jmp
decl
mov
loope
add
clc
inc
or
shll
ret
xchg
iret
call
or
jns
mov
scas
mov
add
pop
mov
jae
std
push
xor
inc
sub
fistpl
sbb
ss
or
jns
and
mov
out
jae
cld
adc
cmp
pop
pop
adc
pop
gs
mulps
out
adc
jle
inc
out
mov
icebp
mov
xchg
subb
lret
aam
or
jg
rorb
pop
mov
test
sarb
jno
add
int3
rcll
lret
ja
adc
and
je
mov
mov
cmc
mov
dec
mov
icebp
add
insb
adc
push
mov
ror
outsl
add
add
jl
stos
adc
xlat
addr16
mov
stos
push
xchg
sbb
adc
mov
or
push
and
or
jae
fs
out
loopne
xchg
flds
lret
sahf
pushf
or
out
call
mov
inc
push
sbb
and
add
icebp
adc
xchg
xor
fstpt
lods
xor
shll
das
insb
adc
mov
pop
jg
push
sbb
jb
lea
lock
inc
lret
dec
sbb
iret
mov
fiaddl
pop
jle
clc
aaa
and
inc
clc
pop
push
repz
mov
mov
adc
ss
sbb
mov
mov
mov
mov
sti
sbb
jecxz
pop
mov
lahf
xor
loopne
cmp
pop
xchg
pop
adcl
nop
test
outsl
xorl
test
dec
fwait
push
and
pop
cmp
sub
sbb
pop
lretw
out
cwtl
lea
adc
inc
sbb
daa
mov
inc
cmp
data16
mov
enter
lahf
outsl
xchg
inc
sbb
pop
pop
insb
shr
sbb
push
lea
je
enter
mov
pop
push
mov
ret
sub
jg
sbb
ret
xchg
int3
pop
mov
xchg
jp
fldt
mov
nop
push
test
mov
shr
int3
adc
mov
mulb
rol
aaa
out
lock
inc
push
mov
inc
fdivr
mov
jp
rorl
inc
mov
adc
pop
xchg
stc
mov
and
hlt
xchg
leave
jmp
push
call
inc
lahf
adc
xchg
cltd
popa
clc
sub
mov
out
sbb
xor
nop
rclb
repnz
push
rolb
fisubs
and
jno
sti
in
lahf
pop
test
inc
orl
roll
or
add
cmpl
mov
std
loop
cmpsl
pop
mov
xchg
xor
ficomps
or
lds
ljmp
push
aas
rclb
sahf
dec
xor
push
pop
dec
xor
repz
xchg
out
rcl
push
pop
int
arpl
mov
test
push
rcl
pop
cltd
push
jl
jp
pop
xor
incl
pop
xchg
mov
lret
loope
sub
inc
jg
jmp
test
popf
mov
dec
das
roll
leave
push
movsb
jp
in
data16
imul
lea
ds
jmp
mov
adc
jb
lahf
cmp
jns
mov
cli
mov
xchg
xchg
xor
out
xor
mov
idivl
push
xchg
repnz
push
dec
fists
aam
mov
scas
dec
scas
int
pop
jne
aaa
mov
xchg
lock
test
xor
adc
jmp
pusha
xor
push
mov
int
fildl
cltd
mov
xchg
ret
in
stos
push
adc
push
mov
xor
test
xchg
divb
mov
test
mov
stos
or
mov
sbb
div
cmp
cmp
xor
xchg
sub
lds
mov
mov
arpl
scas
sbb
mov
jle
cltd
xor
adc
aad
repnz
out
push
outsl
fisttps
sub
mov
inc
cmp
rclb
mov
jge
mov
push
or
inc
adc
clc
adc
leave
adc
incl
mov
add
and
imul
sub
js
mov
xchg
inc
je
pop
sub
inc
sahf
dec
fidivs
mov
mov
xor
xchg
push
fsubr
and
or
cmpsl
lds
cltd
fistpl
test
popa
iret
xchg
dec
or
daa
xchg
fstpt
insl
rcll
inc
cmp
mov
stos
dec
int3
bound
in
mov
lea
cwtl
push
jle
push
and
add
test
add
cmc
sti
shll
lock
outsb
dec
xchg
push
jecxz
or
lods
call
cmp
or
out
add
and
push
add
push
pop
inc
lods
and
insb
stc
mov
dec
cmp
pop
lahf
jp
xchg
cmpsl
or
or
sub
scas
xor
mov
add
mov
and
mov
or
jmp
adc
xchg
inc
enter
adc
or
stc
dec
jnp
into
push
fs
ss
mov
out
xchg
jb
mov
ja
dec
pop
xor
jns
push
mov
push
les
lods
pop
mov
repnz
fistps
mov
mov
sbb
xchg
add
sub
push
fs
jb
pop
cld
mov
inc
test
cmp
stos
data16
adc
push
sbb
imul
outsl
daa
sar
popa
inc
arpl
pop
in
or
sbb
lock
out
pop
shr
and
or
in
test
fst
xor
mov
push
insl
mov
outsl
xchg
clc
jae
pushf
push
pop
ss
lcall
inc
sbb
imul
lahf
dec
inc
lock
xlat
fsubs
inc
jbe
sub
cmp
punpckhdq
sbbl
mov
xchg
mov
daa
imul
push
daa
lcall
insb
xor
scas
insb
ret
jb
and
lods
aaa
leave
lahf
lds
mov
cmp
lods
xor
or
xor
push
daa
push
lcall
cmp
mov
insb
mov
jmp
adc
mov
and
into
adcl
xor
jb
push
cmp
xchg
push
movsl
jecxz
aaa
or
or
fs
sti
hlt
mov
out
scas
lea
pushf
pop
push
mov
insb
sbb
and
bound
mov
in
sti
push
pop
stos
sub
lcall
popa
in
and
or
inc
fimull
jbe
js
aas
out
fimull
cmp
push
insb
mov
xor
pusha
sub
leave
jge
push
sahf
adc
adc
sbb
loopne
push
test
mov
push
inc
inc
jae
fnstsw
je
mov
xchg
push
push
nop
ss
and
mov
scas
adc
ljmp
mov
pop
sbb
mov
fdivs
add
scas
sub
sbb
or
mov
js
shll
lahf
inc
inc
leave
push
mov
ja
shll
out
inc
cmpsl
adc
push
xor
mov
cmp
mov
mov
shr
mov
js
shll
mov
lock
or
aaa
add
leave
pop
pop
or
cmc
and
pop
cmp
push
adc
mov
mov
push
daa
cmp
testb
push
mov
shlb
aaa
std
sbb
mov
inc
sbb
inc
sti
sbb
mov
pop
mov
fcmovb
or
sub
repz
jb
push
insl
xchg
xchg
jbe
xorb
repz
loopne
mov
xchg
addr16
sbb
int
jo
cmp
iret
adc
fs
mov
in
sbb
insb
in
dec
adcl
les
push
bound
jl
lods
inc
sub
pop
loope
insb
sahf
inc
sub
sub
xchg
pop
rorl
loope
scas
sbb
sub
dec
push
mov
mov
movb
insb
aad
out
mov
out
cmp
jmp
jo
cwtl
lock
mov
dec
xor
aaa
pop
sahf
movsb
jmp
xor
sbb
fnstcw
push
popf
xor
inc
or
int
xchg
sbb
imul
shlb
push
add
sbb
movsl
jae
adc
arpl
out
stc
filds
lret
mov
mov
xlat
mov
fwait
out
das
les
loopne
cwtl
sub
lea
mov
iret
add
ja
out
ss
frstor
nop
jmp
call
or
xchg
or
dec
mov
ja
insb
pop
dec
mov
cmpsl
xchg
rorl
adc
aas
mov
lods
mov
xor
pop
out
jo
mov
fwait
test
xchg
inc
nop
mov
lods
bound
adc
and
pop
dec
mov
clc
dec
in
mov
adc
jns
je
sbb
add
fmul
mov
lahf
in
sar
xchg
data16
mov
jecxz
icebp
xchg
jns
orl
int3
xchg
and
sbb
clc
or
mov
pop
mov
iret
gs
push
pop
xor
mov
andb
insl
cmp
mov
ja
mov
nop
fcmove
dec
adc
sbb
cmp
test
imul
adc
or
imull
sub
xor
pop
bound
lea
push
mov
push
dec
adc
pop
in
sbb
aaa
adc
sbb
xor
call
inc
insl
dec
aad
fildl
clc
test
add
push
popf
js
loop
jb
dec
adc
sub
mov
fs
sub
push
scas
out
sub
cmp
in
or
dec
lods
mov
mov
mov
cmp
jle
jo
ret
imul
push
sub
imul
mov
xchg
xchg
ffreep
and
sbb
call
js
pop
push
fisubrl
repnz
inc
sub
enter
jno
nop
jp
sub
popa
daa
inc
jne
faddl
pusha
mov
inc
sub
add
out
cmp
pop
ja
aam
adc
jae
inc
sti
lret
pop
inc
or
scas
push
inc
push
mov
fcmovu
inc
bound
dec
insb
out
imul
ss
add
jmp
xor
mov
aaa
push
into
lods
mov
pop
jp
mov
in
js
mov
mov
mov
mov
in
jecxz
popf
mov
stc
xchg
push
in
mov
or
xchg
call
jecxz
mov
fildl
cs
adc
cs
pop
sub
push
into
mov
leave
cmp
or
push
pop
mov
test
sbb
mov
pop
pop
ds
push
adc
ret
loop
pop
dec
fimuls
adc
adc
shlb
fidivrl
cs
push
adc
loope
jae
test
pushf
cs
cmpsl
mov
popf
aas
insl
data16
arpl
adc
int3
push
in
dec
push
fsubs
mov
mov
aam
sub
cmp
int
das
dec
das
rol
insb
subl
int
mov
add
or
arpl
test
pop
fldt
mov
fimuls
std
cmp
addr16
ja
adc
and
pop
pop
cmp
test
fwait
sbb
dec
repnz
or
in
inc
popa
push
sbb
sub
int3
pop
loop
imul
pop
into
pop
adc
lret
mov
fs
pop
enter
push
ficompl
lods
fcomps
push
cmp
aam
cltd
xor
test
or
xchg
sub
mov
mov
clc
mov
stc
mov
int3
lods
adc
push
pop
push
in
fcom
ficomps
nop
sub
dec
test
pop
clc
push
js
inc
mov
addb
sub
sar
lret
sbb
cmc
mov
fsts
xor
and
pop
das
lcall
es
sbb
pop
xchg
xchg
sahf
xchg
lahf
insb
cli
cmc
jo
sub
and
arpl
ret
aaa
ficomps
in
mov
and
cmc
adc
sbb
or
cmp
add
imul
stc
adc
xchg
sub
loope
sub
dec
in
lods
jg
cmpb
xlat
scas
sub
and
and
dec
repnz
dec
mov
repz
out
ja
icebp
sub
imul
and
ret
ror
xchg
dec
out
mov
jecxz
je
mov
mov
testb
pop
aam
cmpsl
into
fcom
xchg
and
mov
aas
dec
ja
mov
lret
fcoms
inc
mov
orl
orl
lcall
mov
xlat
push
pop
movsb
cmp
loopne
and
js
mov
fucomip
mov
jge
cmp
pushf
mov
cmp
popf
iret
jno
lret
cmpsb
or
pop
jno
adc
mov
hlt
fs
sub
fcomps
sub
adc
imul
arpl
mov
int
pop
fldcw
push
and
inc
fwait
push
rorl
lret
mov
fadd
sbb
in
dec
lret
lock
dec
xor
cmpsb
dec
fsubrs
or
int3
xor
insb
sub
bswap
notb
aad
in
or
mov
stos
xchg
cli
lahf
sar
adc
cmp
adc
xchg
pop
nop
shrl
outsl
inc
pop
mov
sub
xchg
inc
adc
jb
sub
inc
push
sti
int
xor
shl
push
mov
ja
sahf
mov
mov
jae
push
iret
pop
xor
dec
sub
aad
xor
push
adc
ds
lahf
cmp
mov
imul
or
or
dec
and
das
lcall
sbb
leave
je
out
pop
pop
mov
cmp
sti
jb
mov
cmp
arpl
xlat
mov
divb
fwait
jmp
test
sub
je
sub
jge
xchg
popf
mov
mov
adc
xchg
or
xchg
pop
testb
inc
mov
sbb
pop
sub
mov
stos
jl
jbe
sbb
or
adc
dec
xchg
or
lods
push
test
jge
mov
and
fstpl
push
in
sbb
or
cmp
out
hlt
adc
sub
loope
xor
push
xchg
sbb
xchg
cmp
mov
stc
push
mov
push
ja
aam
pop
cltd
clc
fidivl
add
aaa
adc
cmc
push
pop
out
mov
ds
xor
jns
add
mov
xor
push
xlat
or
xchg
xchg
lods
mov
push
cltd
sbb
and
dec
mov
xchg
aas
pop
pop
lock
push
leave
pop
sarb
call
pop
aas
cld
es
leave
pop
or
jno
pop
cmp
inc
lods
roll
mov
inc
popf
pop
mov
pop
mov
movsb
cmpb
push
or
clc
flds
sti
das
push
fcmovb
scas
sbb
cli
jmp
sti
adc
lods
pop
aas
cli
xchg
jbe
or
loop
pmaxsw
fcoml
jne
xchg
push
mov
test
arpl
dec
push
pushf
sbb
repz
cmp
xor
or
sbb
imul
std
in
jle
cmp
test
lea
cmp
pop
add
jb
lahf
fildll
cmp
jnp
stos
js
iret
jg
and
stos
ds
lods
mov
sub
fsts
outsl
in
xchg
add
bound
pop
push
xchg
shrl
stos
scas
and
cli
in
leave
push
xchg
adc
dec
arpl
push
mov
lcall
pop
jp
ficoml
stos
das
xor
test
call
rcrl
adc
jo
outsb
xchg
xchg
adc
jl
loop
xlat
lods
in
ss
adc
pop
addl
test
je
adc
insb
movsl
and
inc
mov
xchg
adc
mov
icebp
xchg
cmp
xchg
icebp
movsl
divb
lret
mov
cmpb
sub
lea
lea
cmp
movsb
adc
xor
sub
call
out
fistpl
imul
lock
mov
xor
insb
sahf
test
sti
mov
shll
adc
xchg
adc
test
iret
mov
inc
adc
pop
push
dec
add
inc
jo
shll
jae
hlt
push
xlat
rol
push
in
and
imull
pop
wbinvd
jo
lods
inc
inc
push
inc
iret
scas
inc
std
xlat
jnp
mov
sbb
push
jle
in
or
fsubl
pop
sbb
inc
mov
out
mov
push
cwtl
in
and
mov
mov
pop
sahf
out
mov
xorb
or
push
call
push
ret
mov
pop
lret
fcmovnbe
or
push
push
fsubs
lds
xchg
test
mov
mov
scas
pop
adc
xor
lahf
pop
xchg
subl
jge
xchg
in
adc
mov
push
xchg
icebp
pop
jl
inc
ja
int3
rorb
pushf
pop
mov
cmp
mov
in
push
test
xchg
cmp
jge
cmp
xchg
imul
aaa
testl
push
repz
or
push
lret
test
jl
cmpb
daa
lcall
stos
ljmp
fimull
rorb
inc
into
sbb
fs
mov
mov
lcall
dec
sarl
nop
cmp
and
sahf
insb
cld
fdivrl
cmp
sub
sbb
sub
inc
cltd
das
fsubr
roll
cmp
mov
sti
into
and
or
pop
insl
jg
xchg
enter
xchg
mov
mov
inc
sub
mov
icebp
mov
or
lds
mov
aas
pop
sub
movsl
xchg
cmc
xchg
repnz
clc
jnp
imul
stos
mov
fidivl
mov
dec
mov
push
scas
or
fnsave
pop
int
add
sbb
lret
bound
mov
pop
mov
aam
sbb
sub
in
daa
pop
adc
mov
ja
pushf
mov
rorb
sarb
leave
int3
lds
fdiv
or
sahf
bound
test
ss
das
cmpsb
testb
ja
clc
out
pop
pop
das
lahf
test
rorl
cmpl
test
push
add
cmp
inc
push
lods
pop
xor
push
out
cmp
xchg
inc
xor
cmp
or
jno
sbb
xchg
inc
xlat
or
xor
cmc
xchg
sahf
jbe
aas
int
dec
cmp
pop
pop
adc
cmp
test
xchg
xchg
scas
scas
inc
jmp
mov
loope
pusha
out
in
popf
in
mov
sub
test
or
and
jmp
fistps
das
jno
xchg
andb
inc
sub
jecxz
cmpb
xor
xchg
clc
dec
xchg
and
lods
lahf
push
sub
int3
in
xchg
les
hlt
pop
mov
imul
and
cmpsb
push
push
iret
adc
xchg
jbe
loop
adc
int
xchg
sbb
or
sub
jle
mov
shr
ljmp
sub
lcall
xchg
jecxz
aas
cltd
cmp
xchg
fisubrl
repz
inc
or
jne
inc
cmp
pushf
adc
cs
fisttpl
test
aad
ljmp
sahf
cmp
sti
negb
sti
push
xlat
inc
aas
into
sbb
dec
maskmovq
testl
dec
rcl
ret
adc
es
das
jae
adc
lret
and
jp
jp
dec
fldt
add
adc
in
sub
mov
xchg
js
jge
pop
cmp
mov
inc
dec
shrb
filds
and
cmpxchg
lods
and
aad
hlt
faddl
movsl
outsl
enter
jb
and
out
dec
cmp
cmp
xchg
stos
xlat
lods
stos
xor
or
les
inc
mov
iret
sbb
adc
nop
add
sbb
xor
jmp
iret
clc
or
aas
dec
decl
inc
stos
xchg
movsl
ja
fwait
mov
icebp
rcll
mov
add
icebp
and
push
popf
cs
pushf
ret
and
loop
xor
sbb
fsubs
jge
scas
lea
mull
movsb
sub
dec
mov
out
je
dec
xchg
out
lods
fstps
loope
adc
test
aad
repz
mov
daa
jo
nop
adc
and
adc
or
aas
inc
mov
xchg
push
pop
dec
cmpl
inc
sub
ret
cmpl
pop
sub
out
mov
fdivl
jae
push
mov
fsub
ds
and
ljmp
and
push
push
push
shlb
and
mov
fs
mov
cmp
and
cmp
pop
mov
scas
lods
or
imul
pop
mov
xor
fs
or
dec
lods
jmp
push
and
sarl
and
and
daa
xor
stos
in
cwtl
std
stc
mov
das
cmp
imul
mov
pop
rclb
test
pop
out
xchg
pop
lret
fcomps
clc
and
sbb
out
cmpsl
lds
dec
pusha
adc
dec
test
out
jl
push
add
or
push
xchg
fbstp
mov
mov
xor
es
push
jns
xor
add
jmp
mov
xchg
xchg
in
out
push
jge
and
in
xchg
inc
lods
in
std
or
push
adc
fists
push
jmp
lods
sbb
das
cmc
and
gs
das
add
std
pop
inc
inc
jp
lahf
test
lret
xchg
inc
add
test
ret
jp
inc
lods
jo
push
jnp
adc
pop
out
dec
cmp
fs
and
ljmp
test
push
hlt
data16
jecxz
in
mov
inc
mov
pop
adc
mov
in
cld
fs
notl
andl
cltd
jne
iret
fucom
das
sub
nop
jle
jo
pop
into
xchg
dec
loopne
xchg
or
mov
xchg
lock
pop
test
mov
gs
out
pop
ds
xchg
xor
add
flds
inc
pop
push
inc
movsb
xlat
mov
nop
in
outsl
notb
pop
mov
xor
sbb
pop
xchg
loope
mov
lods
stos
repz
in
add
data16
or
imul
xchg
outsb
aam
mov
subl
pop
xchg
rorb
and
shlb
xor
or
dec
pop
roll
dec
mov
dec
negb
mov
sbb
sub
mov
adc
lret
xchg
lret
repnz
jge
adc
push
pop
daa
hlt
pushf
push
shlb
lods
pop
or
out
arpl
push
adc
mov
mov
fwait
and
jne
xchg
or
into
mov
sbb
mov
jo
or
movsb
rdtsc
mov
lret
and
push
pop
push
xchg
and
fdivs
arpl
sti
pop
cmp
enter
cmpsl
aaa
aad
and
adc
and
es
sub
xchg
jmp
jo
mov
cli
pop
in
jmp
push
jmp
sbb
jb
xchg
fs
lds
add
pop
sub
dec
pop
and
push
mov
cmp
push
les
dec
mov
adc
loope
shrl
xor
rcll
cmp
add
xor
les
cli
lret
add
fwait
loopne
daa
lahf
repz
dec
cmc
pop
out
mov
pop
pop
and
stos
xchg
mov
jns
mov
lods
jmp
fisubs
fwait
pop
mov
xor
cld
or
test
jns
lcall
fistl
adc
sbb
mov
sub
pusha
aaa
lea
loope
shrb
imul
xor
xchg
lock
pushf
sub
fcoms
xchg
push
fcoml
lahf
cmp
gs
mov
mov
repnz
into
pop
data16
iret
imul
mov
cmp
into
adc
pushf
int3
mov
lcall
stos
bound
or
mov
test
inc
popf
insl
sub
push
insl
popf
sbb
sub
lea
fists
fisttpl
bound
lock
pop
mov
scas
jns
cmc
pop
jp
adc
pop
fucomi
mov
jbe
mov
jmp
ss
sub
cli
es
clc
popf
or
fstps
lock
pop
mov
adc
inc
jae
shl
aad
popl
mov
divl
jmp
in
lret
mov
lea
inc
cmp
nop
pop
loop
iret
out
gs
jge
sti
lahf
dec
dec
enter
fstl
xchg
test
cmpsl
aaa
stc
pushf
inc
dec
pop
xchg
pop
call
dec
test
jae
mov
movsl
xchg
rcl
cmp
sub
outsb
dec
pushf
or
nop
iret
push
loope
xchg
xchg
out
cli
pop
push
push
stos
clc
xor
adc
push
repz
mov
in
nop
or
lods
inc
mov
fbld
inc
jl
pop
andl
cmp
fstl
sbb
mov
xchg
xor
mov
adc
pop
dec
sub
xchg
out
xor
add
inc
xchg
xchg
sahf
mov
pop
push
mov
iret
add
mov
aaa
sub
lods
jb
mov
mov
movsl
out
pop
inc
mov
inc
int
fsin
test
lret
js
jb
in
sbb
js
ret
push
iret
sbb
sbb
mov
ljmp
loopne
dec
mov
mov
iret
xchg
clc
fcoms
mov
lret
lea
jnp
mov
mov
dec
sub
mov
rol
and
fwait
mov
cli
aas
pop
out
ds
aaa
sbb
xor
sbb
leave
cmp
xor
lret
aam
sbb
or
scas
xchg
xor
out
stos
xchg
push
nop
or
jnp
test
jb
shll
repnz
xor
shr
mov
mov
xlat
inc
data16
iret
mov
mov
jl
and
js
in
pushf
jae
in
jnp
jg
pusha
jg
push
push
mov
test
nop
pusha
adc
or
cs
add
mov
xchg
or
xor
jecxz
insb
iret
xchg
fdivrl
fstps
fistl
mov
ret
pop
mov
bound
aaa
aad
jg
mov
jp
pusha
push
ror
inc
inc
add
xor
and
dec
mov
jmp
fcmovu
lret
adcb
loope
xor
das
lret
jl
xlat
xchg
dec
jo
adc
ja
xor
add
pop
stos
mov
jns
rolb
cltd
adc
inc
xchg
xchg
addr16
pop
jb
inc
gs
xor
sbbl
mov
cmp
dec
xlat
mov
mov
mov
push
punpckhwd
jne
decl
pop
mov
xor
ficoml
push
xchg
mov
mov
pop
mov
psubsw
mov
mov
ss
pop
fldt
mov
pushf
and
cmp
vmwrite
adc
lahf
fwait
clc
lds
jae
and
clc
in
xchg
cld
out
mov
scas
aaa
pop
dec
rcrl
lds
jnp
pop
dec
mov
fstpl
lock
xchg
mov
imul
loop
push
mov
aaa
mov
mov
mov
inc
jge
xchg
fst
in
mov
sub
xor
cmp
fiaddl
inc
dec
cmc
daa
popf
inc
push
cmp
adc
test
fdivrs
in
mov
movsl
sbb
dec
aaa
movsb
dec
sbb
xchg
mov
mov
inc
xor
push
pop
in
scas
in
sub
push
movsl
or
data16
and
movsb
movsb
lock
push
sub
outsl
lret
mov
mov
push
or
mov
inc
adc
in
sti
inc
into
pop
xor
testb
flds
cwtl
hlt
arpl
int3
in
lret
in
addl
test
loopne
cwtl
cmp
lods
lods
loope
popa
fcoms
mov
cmp
aam
cmc
out
add
xchg
mov
and
hlt
shl
mov
loop
mov
pop
add
pop
xchg
sbb
adc
mov
lods
nop
orl
pop
add
in
out
out
outsb
cmpl
push
xchg
cmp
ret
push
das
imull
and
in
repz
or
dec
mov
in
jge
shrb
adc
inc
mov
jbe
xchg
inc
push
jl
adc
or
out
fdivrs
and
ds
cmpsb
sub
xchg
mov
aad
stc
jg
es
lods
rorb
dec
jbe
inc
pop
and
aad
or
adc
mov
outsl
cwtl
jbe
or
lcall
clc
or
xor
shl
in
ret
push
jp
and
cmp
shlb
mov
sbb
pop
stos
xor
mov
test
roll
adc
stc
scas
xchg
outsl
pop
sub
mov
insb
stos
or
insb
xorl
movsb
lret
test
and
scas
out
adc
iret
jbe
ret
pop
jns
xchg
mov
cld
je
stos
loopne
andl
sbb
dec
mov
adc
test
shr
sub
cmpsl
xchg
mov
pop
lock
lret
inc
scas
add
or
mov
ja
mov
in
sbb
cmp
or
lods
pushf
inc
and
dec
mov
test
lret
aam
sti
idivb
mov
xor
out
mov
add
ret
jecxz
idiv
cltd
scas
push
xchg
jle
mov
xor
lea
or
dec
cltd
jmp
ss
jmp
fstps
loop
mov
leave
sbb
jno
loope
pushf
xchg
in
dec
mov
push
mov
fbld
push
cmpsb
lahf
cmp
sbb
xor
in
outsb
inc
sub
scas
xchg
aam
arpl
cmp
int3
aaa
roll
cwtl
test
mov
int3
bound
aas
scas
sbb
lret
jmp
fildll
aas
js
aad
mov
fsubrs
adc
outsb
cwtl
pop
xchg
cmp
xchg
sti
mov
add
xor
mov
jle
push
inc
push
jp
sti
jmp
test
pushf
lcall
and
scas
push
lods
mov
cmpsl
xor
adc
dec
push
gs
hlt
or
cmp
pop
subl
xchg
sub
aaa
rclb
add
ljmp
pop
mov
or
adc
xor
xchg
fmull
lsl
and
ret
adc
xchg
mov
das
out
mov
push
jnp
mov
jb
in
xchg
xlat
popl
sti
insb
lds
icebp
jle
adc
aas
sbb
stos
aaa
push
and
push
xchg
fimull
sbb
lods
idivl
mov
in
rcrl
sbb
int
fsubs
xchg
add
jge
mov
test
mull
mov
outsb
mov
xchg
or
andb
fistpl
jnp
mov
push
loope
pop
imul
mul
pop
mov
pop
fwait
mov
cmp
addb
int
mov
dec
add
mov
imul
inc
mov
mov
jmp
add
aam
xor
xchg
es
pop
and
stc
cltd
push
lcall
adc
repnz
out
sub
lock
aam
sbb
pop
fcompl
pop
rol
inc
aam
push
mov
mov
pop
jae
test
fimull
gs
rcr
adc
inc
popa
test
scas
leave
orb
adc
mov
cs
dec
cmp
dec
xchg
jg
dec
cmp
movsb
cmp
xchg
sbb
sub
insb
jmp
jecxz
pop
push
aas
mov
add
aam
cltd
jns
and
cmp
sbb
arpl
into
je
mov
add
mov
jnp
xchg
and
fldcw
out
addr16
push
add
stos
and
fdivs
dec
adc
mov
or
xchg
xor
gs
mov
fists
cltd
mov
pop
pushf
push
arpl
scas
pop
out
cmc
jb
jmp
leave
fmul
xchg
xlat
ficoms
fs
daa
push
fsubrl
inc
lds
lock
xchg
mov
or
jp
lea
mov
sub
jnp
cmp
xchg
in
add
mov
test
int3
adc
pop
pop
lret
and
es
lahf
stos
mov
nop
xchg
push
xor
sar
or
xor
cmc
mov
cmpsb
or
push
popaw
es
aas
add
stc
repnz
cltd
mov
lret
in
imul
dec
inc
popf
js
movsl
jl
jge
add
mov
pop
ja
lahf
mov
mov
pop
sub
lahf
ds
mov
xor
fidivrs
mov
dec
repnz
ja
xlat
aas
loope
es
int3
lds
mov
fsubrs
xor
jno
mov
jg
mov
std
mov
stc
sti
repz
stc
and
and
iret
outsl
push
cmp
xchg
cltd
dec
pop
adc
bound
xchg
adc
mov
test
mov
jb
or
xchg
les
adc
leave
pop
push
push
pop
or
mov
cmpsl
push
push
cmpsb
push
mov
fwait
jmp
aas
add
mov
stc
inc
mov
sbb
jmp
dec
daa
adc
sahf
mov
pop
jl
in
lret
sbb
and
fistpl
icebp
lea
jmp
out
push
inc
xor
cmp
mov
test
or
pushf
mov
mov
cmp
sarb
adc
adc
inc
fdiv
adc
rcl
xchg
and
cmp
pop
repnz
push
pop
aas
mov
jbe
cmpsl
or
insb
mov
sub
aad
popa
lods
sub
pop
fcmovu
arpl
lcall
pushf
mov
repz
sub
repz
xchg
jmp
push
lods
pop
and
push
arpl
scas
cmc
adc
insl
xchg
or
push
in
mov
cmp
jae
cmp
in
fidivrl
imul
ljmp
fldl
shrl
inc
mov
fsubrl
lock
lock
loopne
cmp
sub
or
and
ljmp
xchg
imul
lret
cld
ds
popa
std
jmp
ds
cwtl
jge
fisubs
movsb
cmp
mov
enter
clc
das
inc
mov
xlat
mov
shll
fidivl
sbb
addr16
cmp
fisubrs
xchg
aad
cmp
pop
adc
pop
fiaddl
nop
std
xlat
fidivrs
hlt
loope
jmp
ret
cmp
mov
push
imull
fs
dec
popa
sbb
subl
mov
pop
xor
xchg
lock
int3
push
stos
out
adc
sti
mov
fisubl
xor
and
fs
pop
push
cwtl
aaa
call
cltd
adc
xchg
popf
mov
mov
lods
out
hlt
add
imul
ficompl
rcrl
fsubrs
cwtl
push
inc
jnp
mov
dec
mov
xchg
sbb
sbb
mov
mov
es
negb
and
cmpsl
dec
aas
or
mov
xchg
push
insl
push
jl
cli
pop
mov
rorb
jmp
test
mov
xor
jmp
repnz
cmp
cmp
add
in
movsl
mov
and
jb
divb
iret
flds
inc
inc
dec
add
jns
mov
sub
inc
sbb
stos
ret
out
xor
dec
cmp
iret
cwtl
clc
jmp
pop
xchg
ret
add
mov
mov
sub
push
rclb
push
mov
pop
adc
cwtl
xchg
stc
movsb
outsb
push
test
out
daa
scas
mov
jno
cmpl
mov
jnp
repz
in
cmp
mov
dec
ds
jle
std
in
call
mov
out
aam
mov
sub
jne
scas
in
sub
out
push
adc
push
dec
call
adc
dec
lret
xlat
ds
xchg
mov
xchg
test
push
xchg
je
add
loope
ja
sbb
and
cld
lea
push
dec
aam
fidivrl
push
mov
imul
icebp
xor
or
nop
mov
mov
pop
pop
pusha
out
cmp
push
adc
sbb
negb
or
adc
pop
xchg
ja
int
cwtl
xlat
test
sbb
icebp
xchg
push
fnstsw
xchg
cmp
lcall
pop
xor
arpl
cmpl
repnz
lcall
dec
popa
into
xchg
sbb
and
rcrb
sahf
fdivl
push
xor
fs
lds
clc
out
rolb
pop
aad
lret
dec
pop
cwtl
cs
rcl
dec
mov
cwtl
nop
pop
and
je,pt
xchg
mov
pop
andnps
cwtl
lahf
out
mov
jge
lret
jbe
adc
ficomps
sbb
lock
data16
pop
iret
pop
jns
pusha
icebp
push
jno
inc
mov
rcrb
jecxz
shr
aas
jne
inc
cmp
leave
arpl
push
lcall
fisubl
xchg
dec
pop
stos
inc
les
xchg
outsb
jp
adc
pop
iret
jne
fsubr
rclb
or
notl
aaa
sbb
imul
aas
and
stc
fcoms
mov
nop
adc
cli
xchg
xchg
clc
lahf
pop
cwtl
sub
adc
pop
loopne
hlt
fnsave
and
or
and
test
fwait
push
not
lahf
pop
loope
rcrb
in
xchg
cmp
sahf
sub
pop
sbb
mov
xchg
pop
movsl
sub
pop
dec
and
xchg
mov
outsb
sub
mov
mov
add
sbb
push
fisttps
pushf
popa
pop
ret
scas
shlb
sbb
or
mov
xchg
jbe
ja
adc
cmp
clc
cs
in
lock
stc
mov
sbb
dec
sub
stos
notl
test
jge
cmp
lock
and
sbb
xor
loopne
sub
and
xchg
lcall
push
int3
mov
xor
popa
cmc
cmp
leave
mov
jb
sbb
scas
jb
push
dec
stos
repz
adc
dec
pop
stos
mov
dec
jmp
xor
sqrtps
bound
dec
mov
lahf
iret
mov
into
popa
cmpsl
xlat
lret
lcall
sub
push
push
sbb
hlt
xchg
mov
ds
sub
mov
je
jg
fsts
sub
dec
jmp
lcall
movsb
out
pop
imulb
jno
nop
jmp
or
adc
cmp
jp
roll
jmp
rorl
fwait
nop
push
push
mov
lea
or
pusha
das
popf
mull
lret
clc
xor
popl
imul
jo
in
adc
jno
jo
test
lods
mov
push
or
push
mov
fdivr
lods
dec
ja
mov
das
pop
and
pop
mov
fcomps
fisubrl
jecxz
jo
push
adc
pop
rcll
aam
push
xchg
fisubrl
add
rcl
dec
pop
aam
dec
push
fsubrs
cmp
adc
jb
not
in
jne
aas
cmpsb
or
out
icebp
pop
and
fdivr
sbb
arpl
jmp
push
loopne
mov
xorb
dec
push
out
pop
test
push
mov
jns
sbb
sbb
dec
arpl
jae
roll
jle
and
pop
mov
scas
mov
cld
loopne
jne
enter
test
sub
dec
sahf
adc
stc
rcrl
jmp
push
sub
fldcw
ds
mov
in
jg
aas
lret
pushl
mov
fs
fidivs
in
cmp
dec
xlat
and
and
pushf
mov
movsl
cmpsb
xchg
jo
cli
jl
mov
mov
mov
popa
xor
mov
mov
push
daa
push
cwtl
cmp
and
inc
mov
xchg
int
mov
mov
xchg
ss
sbb
cli
xor
mov
ljmp
loope
mov
pop
xor
cmp
xchg
sahf
test
xchg
or
jnp
push
out
xchg
push
and
push
enter
mov
dec
out
fyl2x
int
push
in
adc
push
add
aaa
push
data16
pop
cmpsb
aaa
push
or
push
cmova
sbb
sbb
outsb
add
insb
dec
push
sbb
cmp
and
push
dec
ret
inc
stc
xchg
cld
and
das
xchg
add
dec
lods
xor
sub
mov
mov
sbb
scas
sbb
cmpsl
xor
stos
mov
fldl
fisubrs
pop
jmp
scas
jne
loopne
cmpl
test
sub
adc
rcrl
shrb
bound
or
cmp
and
loopne
ss
stos
lods
dec
or
sbbb
mov
pushf
mov
add
sub
push
movsl
sbb
mov
push
xchg
pop
sub
jl
in
ret
cld
std
rorl
dec
mov
addb
add
out
cltd
icebp
cmp
les
mov
cwtl
pop
jns
or
out
and
xor
call
lret
push
xchg
xlat
xchg
out
icebp
fcoms
sbb
xchg
and
mov
imul
cmp
pop
arpl
or
sub
pop
sbb
add
mov
mov
scas
pop
xor
mov
xor
shlb
out
ja
cmp
mov
pop
in
inc
in
movsb
cwtl
aad
or
test
addr16
int
leave
icebp
lahf
push
jg
jp
icebp
or
cltd
cmp
and
test
cmp
sbb
and
out
jb
flds
sbb
inc
xor
add
repnz
mov
push
dec
pop
push
cmp
les
cmp
in
inc
sti
and
es
nop
mov
sbb
rclb
js
xchg
push
cmpsb
in
movsl
and
int
scas
sbb
inc
mov
popf
inc
int
aad
push
loopne
loopne
jo
scas
sbb
lods
mov
test
mov
out
out
test
cmc
loope
test
jmp
icebp
nop
add
and
jbe
je
mov
lret
and
inc
fldt
dec
pop
pop
std
stos
jo
into
jmp
cld
icebp
gs
cwtl
mov
popf
sbb
into
jmp
out
inc
out
sub
pop
std
sahf
or
dec
xchg
loop
aad
ljmp
out
dec
pop
push
out
imull
enter
out
dec
jg
or
fisubl
and
shrl
jecxz
and
xlat
jecxz
int3
sahf
mov
pop
repz
ja
sub
sti
in
mov
insb
mov
xchg
cmp
push
mov
or
jmp
popa
ret
movsb
das
cmpsl
pop
aad
sub
sub
cmp
add
call
cltd
sbb
clc
pop
sbb
fwait
shll
sbb
mov
nop
divl
push
loope
sti
int
pop
pop
ja
push
addr16
add
jecxz
or
ftst
sarb
fisubrl
enter
lcall
int
inc
adc
mov
dec
jnp
stos
in
aaa
mov
out
mov
ret
lahf
push
cmp
pop
orl
jecxz
xor
scas
in
cmp
inc
iret
inc
in
pop
add
rol
nop
push
ret
fs
jl
push
pop
xor
ss
inc
out
xchg
fldenv
push
or
mov
fsubrs
fisttps
daa
sbb
jle
mov
mov
bound
push
sbbb
sub
loop
xor
sbb
mov
adc
push
lods
insw
mov
mov
repz
jo,pt
add
fwait
stos
in
jmp
cmpsb
lcall
inc
dec
lods
mov
dec
xor
add
mov
dec
xchg
inc
inc
inc
and
pop
call
inc
jnp
dec
inc
dec
insb
stos
jmp
movl
or
fldl
dec
mov
and
cwtl
sti
push
das
xorl
mov
xchg
jmp
xchg
xor
dec
not
push
mov
and
cs
cltd
inc
bswap
scas
mov
shr
scas
jo
push
add
or
lea
pushf
imul
pop
movsl
aaa
or
rcrb
leave
call
pop
cmpsl
and
jbe
cld
nop
stos
jmp
dec
jecxz
rorl
insb
pop
insl
or
lcall
xchg
rolb
ret
addl
fstl
xchg
mov
sub
mov
jne
sti
mov
negl
xchg
xchg
fwait
enter
dec
enter
jecxz
pop
xor
adc
aad
and
out
fwait
xor
nop
cmp
lcall
and
mov
and
bound
cmp
mov
dec
pop
lds
push
loop
sbb
stos
outsb
sbb
dec
dec
mov
cli
sub
mov
xchg
mov
pop
cmp
dec
xchg
je
xor
ds
sub
addb
int3
sub
cmp
xchg
lcall
inc
lcall
dec
js
mov
inc
lcall
stos
pop
mov
aam
adc
test
dec
enter
int3
xchg
arpl
jne,pn
or
sar
rorb
loope
lds
inc
mov
jns
jl
xor
add
push
jns
or
sbb
xor
std
out
push
lods
mov
fisubl
lret
iret
xchg
roll
data16
movsl
nop
test
inc
inc
pop
lock
jbe
mov
mov
sub
xorl
dec
lahf
mov
clc
inc
adc
mov
push
adc
mov
out
xchg
jmp
push
add
shlb
loope
sbb
sbb
iret
test
mov
cmp
ds
dec
push
cmp
cmc
push
and
xor
clc
les
fmull
mov
and
loopne
out
repnz
ret
daa
movsb
in
add
mov
and
xchg
popw
cmpsl
pop
and
subl
enter
pop
sbb
lret
out
fistps
fstps
sbb
xchg
and
adc
jp
jge
inc
into
mov
mov
addr16
cmp
pop
ds
pop
pop
scas
xchg
aaa
mov
scas
rcrb
and
fisubl
adc
add
mov
jmp
mov
xor
loope
fadd
lock
lock
aam
movsb
mov
imul
mov
gs
pop
dec
sbb
out
nop
jo
xchg
cmp
xor
sub
insb
cltd
jl
fwait
inc
push
stos
cmp
out
lret
fsubl
fisubrs
xchg
xchg
aam
incl
push
cmp
test
aas
jb
rolb
dec
divl
pop
jmp
fadd
imul
xchg
sahf
pop
aas
addr16
inc
ljmp
or
fwait
pop
sub
inc
xor
fbstp
sub
xchg
mov
mov
dec
testl
xor
adc
in
lret
xor
outsl
pop
ficompl
std
loop
push
gs
nop
jp
ds
repz
test
push
sbb
int
push
cmp
es
ret
cmp
mov
clc
std
jne
stos
pop
pop
adc
pop
pushf
scas
adc
inc
aad
test
mov
test
xlat
hlt
pop
jp
out
jbe
push
pop
and
sbb
mov
or
aam
roll
int3
dec
dec
sbb
fcompl
pop
xor
and
cltd
out
xor
nop
xor
sbb
mov
mov
addr16
mov
test
pop
adc
xor
push
stos
adc
adc
xchg
arpl
ljmp
dec
jmp
cmpsb
sub
mov
pop
push
push
jle
jl
pop
inc
test
in
pop
xor
das
nopl
jge
outsb
mov
mov
es
stos
dec
sub
sub
test
mov
int
mov
mov
inc
push
testb
sub
jp
inc
lods
iretw
scas
cltd
scas
push
mov
mov
mov
fwait
aaa
and
lea
lods
in
inc
mov
or
js
call
or
in
mov
cmp
pop
in
add
cmpsl
lret
mov
stc
mov
cmp
lcall
or
sbb
jmp
movsb
hlt
dec
loopne
scas
idiv
jns
out
mov
sbb
int
mov
ds
subb
and
or
in
mov
cmpsl
push
mov
shrl
mov
pop
cmpb
ss
jl
and
lret
lds
popa
nop
cwtl
jnp
lds
sub
cltd
xor
repnz
adc
add
mov
rcrb
clc
arpl
xchg
mov
les
adc
stos
ret
sub
cmp
outsl
dec
cli
sub
sbb
jle
mov
pop
ret
xchg
mov
adc
dec
movsb
jno
push
stc
int3
jns
push
mov
jns
push
xchg
push
stos
fists
cwtl
mov
sub
add
jmp
aas
sub
imul
fdivr
mov
push
adc
fldt
xor
add
mov
pusha
mov
dec
mov
inc
mov
fsubrs
or
lock
lds
pop
pop
jbe
pop
inc
jbe
hlt
jg
in
testl
jb
inc
lods
add
jmp
and
sbb
inc
jp
loope
sub
mov
xchg
data16
and
push
and
add
fs
idivb
dec
pop
fcmove
cmp
repnz
mov
ja
add
test
mov
ss
shrl
push
cmpsb
test
enter
ja
mov
pop
ss
inc
insb
dec
scas
pop
push
mov
dec
subb
aas
out
out
jns
bound
xor
mov
xchg
jbe
push
push
mov
orb
pop
mov
sbb
inc
adcb
fisubrl
push
mov
aam
int
das
xchg
in
sbb
daa
mov
jecxz
mov
jae
out
ds
mov
repz
aad
jg
out
mov
mov
adc
push
xor
jecxz
mov
pushf
adc
das
mov
into
cmpsl
sahf
pusha
sub
jp
cmpsl
and
divl
push
icebp
jns
sahf
inc
cwtl
inc
jns
xchg
mov
or
sbbb
push
test
std
sub
push
mov
stc
aam
xor
xchg
andl
fidivrl
inc
je
or
sbb
aaa
mov
sbb
leave
int
sub
or
sub
pop
xchg
stos
push
test
mov
sub
popa
das
aad
cs
dec
rol
mov
out
iret
or
push
mov
cmpl
fsub
bound
push
adc
cli
mov
shll
arpl
xchg
adc
ss
ffreep
dec
test
stos
mov
xchg
jecxz
mov
push
adc
xchg
mov
and
popf
cmp
outsb
shr
cwtl
and
sbb
aam
jns
sub
out
rclb
hlt
jl
ret
adc
fstpt
xchg
movb
in
cmp
add
jge
les
mov
sbb
jmp
mov
out
in
ss
or
loopne
jmp
nop
mov
and
data16
popa
xor
xchg
rcll
push
das
sbb
js
stc
ljmp
xchg
or
inc
xlat
mov
xor
repz
into
cltd
jbe
push
xor
outsb
xor
cmpsb
ds
fs
push
adc
into
jl
or
enter
fildll
cmp
jmp
inc
movsb
mov
mov
das
inc
clc
lods
aam
dec
xchg
out
stos
xor
in
arpl
or
les
sbb
ror
inc
popf
mov
loope
mov
pop
mov
out
jno
or
xchg
or
xlat
leave
clc
scas
shrb
jg
sub
push
push
movsb
cltd
inc
lret
popf
jmp
loop
outsl
lret
outsl
insl
daa
fildl
je
in
lods
movsl
gs
jnp
jl
int
push
cwtl
repnz
and
mov
arpl
cli
pushf
mov
mov
jb
mov
ja
mov
jne
xor
in
adc
mov
nop
dec
jnp
mov
hlt
popf
and
mov
xchg
mov
leave
test
mov
fldz
xlat
or
push
roll
inc
stc
jmp
adc
int3
enter
cmp
bnd
cwtl
sub
lret
fxch
lods
jbe
lahf
push
inc
ja
pop
test
inc
stos
sub
es
xor
and
mov
mov
jg
fwait
aam
jno
das
jecxz
aas
xlat
testl
faddp
test
mov
pop
pop
mov
orb
rol
test
movsb
pop
add
nop
pushf
pop
sahf
push
push
sub
adc
sub
adcb
les
ficompl
inc
fdivl
cli
mov
fisttpl
fistpll
sub
mov
loopne
inc
xor
test
mov
mov
jl
ljmp
ret
jae
and
pop
cmp
sbb
jle
movsl
cmp
xlat
push
insl
cmpsl
pop
jbe
repz
aas
push
iret
jl
cmpsb
adc
jo
xchg
fidivs
adc
jbe
mov
adc
test
mov
stc
stos
cmp
pop
or
xchg
mov
outsl
dec
lods
or
jl
mov
fwait
fs
xchg
aad
and
fisttps
mov
clc
in
icebp
mov
rorb
dec
ja
jnp
fildl
add
jmp
test
ud1
and
pop
lods
xchg
sarb
stc
cmp
jnp
aaa
xor
fsub
push
inc
fbld
in
jnp
mov
fwait
mov
mov
cmp
test
leave
jecxz
dec
sub
mov
fldcw
adc
dec
mov
jl
rorb
lds
testl
sub
cmp
push
xlat
or
aaa
pop
insb
cwtl
adc
pop
jmp
inc
cld
xchg
jle
dec
push
mov
and
js
xor
sahf
mov
dec
adc
out
sub
cmpsl
mov
aad
cmp
cwtl
mov
pop
adc
mov
dec
in
stos
inc
adc
jae
sbb
add
arpl
or
cs
adc
sub
stos
ret
xchg
out
adc
fs
adc
fs
add
cmc
sahf
sbb
into
add
test
outsb
fcmovb
xchg
das
lcall
hlt
popa
dec
lcall
mov
andl
push
addr16
out
js
pop
push
mov
xchg
mov
in
leave
rorb
sbb
es
jle
inc
je
fs
popf
mov
xchg
pop
std
pushf
sbb
enter
or
and
jl
imul
out
scas
adc
les
call
mov
inc
je
test
add
in
mov
mov
mov
bound
jge
mov
xor
ds
cs
ret
stc
pushf
jns
pop
add
xchg
not
mov
sti
imul
leave
cmpsl
xor
mov
in
insl
inc
sbb
das
inc
jl
cmp
mov
sbb
ret
mov
push
xchg
ja
add
or
xchg
mov
push
gs
mov
adc
pop
into
and
and
jno
lods
int
fwait
sbb
ja
out
adc
mov
int
sbb
xor
stos
rclb
jne
xchg
push
fsts
cmp
sbb
sti
shr
aaa
repnz
lret
adc
jg
enter
jmp
mov
lods
loopne
cli
jmp
loop
dec
lods
cmp
xor
ds
and
xlat
sub
loope
push
sub
test
dec
daa
fidivrl
loopne
mov
add
lea
in
adc
add
js
pop
pop
adc
push
daa
ficoml
decl
outsl
add
int3
sti
cmp
je
js
cltd
fnstcw
lods
jns
sub
xorb
repz
imulb
aad
jecxz
js
mov
rorl
mov
inc
mov
addb
push
test
cmp
addr16
inc
mov
pusha
xchg
dec
hlt
xor
test
movsl
add
jae
ss
aas
adc
lret
pop
arpl
mov
cli
fstpt
mov
sub
inc
and
dec
imul
adc
mov
incl
pop
inc
push
fdiv
push
loopne
sub
loope
cltd
push
and
and
mov
and
rcrb
xor
jo
loope
xor
out
push
xor
mov
lods
mov
cmp
pop
test
mov
dec
lods
js
or
push
jg
testl
cs
call
nop
adc
sarl
int
sarb
ret
dec
fldcw
cmpb
cmp
cli
lds
xor
jp
pusha
out
cwtl
scas
xchg
sbb
pop
push
push
add
push
inc
xor
aaa
xchg
inc
mov
out
shll
xlat
pop
shlb
js
xor
cmp
leave
or
ds
push
mov
flds
das
inc
dec
mov
mov
mov
out
scas
arpl
adc
xor
pop
mov
pop
aas
out
mov
cli
adcl
cmpb
push
xchg
pop
shr
pop
out
xchg
add
movsb
pop
scas
stos
into
jne
ret
add
pop
xchg
jns
pop
add
mov
pop
scas
js
lods
out
pusha
cmp
mov
sbb
fs
jbe
outsl
imul
sbb
shlb
mov
and
cltd
dec
mov
push
dec
inc
lods
stos
aad
jb
xchg
xchg
out
pop
test
arpl
xchg
outsb
jmp
aas
sbb
movsl
mov
mov
out
push
imul
adc
insl
inc
adc
jb
jbe
cmp
xor
outsl
jp
scas
es
sarl
cmp
mov
pop
xchg
dec
lcall
jge
pushf
or
push
data16
sbb
repnz
sbb
dec
jl
mov
je
aaa
mov
lds
mov
jae
incb
sbb
test
push
lock
and
adc
movsl
lods
lret
cli
daa
mov
mov
dec
lret
imul
outsb
pusha
lahf
jecxz
and
xchg
xchg
lcall
ret
loop
in
or
flds
mov
xor
inc
hlt
sub
outsl
adc
push
test
popf
mov
push
stos
sub
pop
ror
sub
fstpt
push
outsl
es
popf
in
or
sbb
or
lods
mov
xchg
lods
pop
pop
aas
addl
loopne
sbb
loop
jbe
out
and
in
test
roll
inc
and
cmpsl
mov
lods
mov
loopne
ret
push
adc
pop
into
cmp
dec
testl
insb
arpl
adc
push
dec
scas
mov
flds
test
or
push
idivl
add
arpl
and
mov
pushf
inc
test
in
xor
fidivl
scas
insl
cmp
notb
cli
sub
nop
into
outsb
inc
or
icebp
test
mov
std
xor
mov
iret
dec
pop
jne
test
sbb
cmpsb
fwait
cwtl
mov
xlat
lcall
scas
dec
sbb
aam
cmp
test
ds
mov
push
frstor
push
adc
mov
pop
mov
jle
in
dec
in
rolb
cmp
and
cmp
insb
sub
jae
adc
cmp
mov
out
sbb
fucomp
lods
sub
pop
xchg
xchg
mov
test
dec
fimull
adc
and
push
pusha
in
cmp
sbb
ss
adc
add
pop
clc
out
fsubl
inc
jmp
lcall
xlat
xchg
jns
popf
std
pop
mov
pushf
idiv
sahf
jecxz
adc
in
or
pusha
fidivrl
jns
dec
jns
jg
pop
addr16
push
ret
sub
adc
dec
lods
pop
sub
mov
clc
adc
test
fimuls
leave
fs
loope
fists
sbb
testb
sub
arpl
int
std
push
xor
cmp
lock
cld
xchg
pop
sahf
loopne
hlt
lahf
xchg
stos
xchg
call
lret
shlb
rorl
mov
pop
inc
jbe
sbb
fisubrs
sub
jns
cmp
push
cmpsb
or
sbb
mov
jo
clc
xchg
jnp
aaa
push
cli
mov
pop
lods
dec
jbe
inc
jbe
scas
cwtl
fidivrs
adcb
data16
sti
repz
push
pusha
mov
sbb
inc
rorl
ret
testb
inc
pop
lods
mov
xchg
daa
xor
mov
call
ja
fisttpll
cli
in
add
adc
jb
mov
inc
xchg
push
jl
xor
add
cmp
fisttpll
push
xor
fcos
es
mov
loope
movl
sub
insb
shll
cmp
dec
nop
cltd
daa
push
and
mov
ficompl
enter
sbb
fwait
xchg
rorb
cwtl
and
jns
pop
mov
imul
mov
jb
movsl
cmp
xchg
mov
mov
js
loop
jle
movsb
std
loop
loopne
gs
jmp
test
je
loopne
adc
sbb
mov
ret
xor
sbb
fwait
sbb
xor
sub
cmc
daa
out
fdivs
pop
mov
in
adc
add
dec
lods
or
inc
sub
ud2
xchg
clc
in
push
lahf
inc
mov
jle
ret
inc
cli
aad
scas
push
lahf
xchg
dec
and
fsubp
stos
les
mov
lods
data16
out
test
inc
inc
sbb
bnd
lcall
enter
test
shlb
aaa
push
xchg
push
xchg
xchg
mov
daa
adc
aaa
jnp
lds
rcrl
hlt
mov
dec
cwtl
fists
test
loopne
jno
push
mov
js
mov
mov
mov
ljmp
mov
adc
mov
clc
aam
es
cmp
iret
fistps
pop
mov
cmp
test
inc
xchg
clc
enter
pop
cmp
mov
push
std
daa
in
mov
cmp
sub
dec
adc
leave
dec
xlat
out
push
jns
sub
sbb
add
cmp
lods
mov
fdivrs
and
js
hlt
xor
fnsave
mov
mov
push
subb
testb
xchg
mov
push
aaa
ss
ja
pop
ds
xchg
ss
inc
xor
dec
xor
mov
pusha
cld
mov
xchg
inc
xorl
cmp
push
sbb
stc
iret
jns
fldcw
jnp
adc
sbb
cmp
sub
cmp
add
popf
pop
repnz
sub
push
and
repnz
jl
ds
ret
mov
fldt
push
loop
jb
sbb
lea
jmp
push
call
fnstsw
cmpsl
jnp
sar
xchg
cmp
ficoml
or
cmp
inc
cmp
fidivrl
or
popa
xchg
xchg
lret
xor
loope
aad
fs
xlat
popa
jo
mov
loop
ret
imul
pop
add
push
neg
push
clc
pop
in
imul
imul
mov
stos
arpl
xchg
inc
pop
inc
pop
mov
nop
jnp
popl
fnstcw
repz
mov
mov
mov
jmp
xchg
loopne
out
loop
pushf
cmp
scas
fidivl
out
sub
mov
lods
insl
cmpb
out
jle
jge
movsb
aam
popf
repnz
xor
int
pushf
and
push
sub
lods
subl
mov
clc
outsb
out
push
xchg
dec
loope
mov
sbb
jge
or
xlat
lods
ficoml
pop
lret
test
lea
ja
repnz
pop
pop
xor
xlat
jmp
pop
lret
pop
mov
enter
sub
leave
ret
sar
loopne
or
jbe
shrl
inc
mov
inc
inc
jle
je,pt
lcall
insl
jle
ljmp
mov
xchg
test
sbb
push
mov
ljmp
pop
mov
ljmp
mov
inc
or
sti
sub
mov
ret
andb
sbb
xor
test
je
add
xor
cld
fwait
push
mov
sbb
nop
mov
scas
addb
sarb
stc
pop
mov
add
data16
mov
roll
adcb
cmp
jp
adc
jb
mov
mov
lods
jbe
imul
mov
sub
cmp
hlt
and
orl
jb
cmp
xor
pop
pop
mov
lret
push
inc
and
pop
push
in
xchg
mov
add
movsl
in
push
sbb
cli
psubsb
push
addr16
mov
scas
add
js
mov
jnp
fcoms
pop
and
fidivl
xor
iret
fmull
jb
into
push
mov
test
push
mov
dec
mov
sbb
mov
mov
jmp
aaa
cltd
lods
into
push
jp
dec
cmpsl
mov
idivb
lds
xchg
lock
pop
sbb
mov
pop
ret
popa
lret
push
cltd
mov
inc
jo
js
fwait
pop
lea
cmp
cltd
popf
divl
xor
lock
pop
and
test
int
nop
movntq
out
mov
xor
jne
sub
pop
enter
sbb
cmp
sub
xchg
rcr
shrb
cmp
push
loope
test
sbb
rclb
sti
or
out
inc
data16
and
mov
mov
xor
mov
outsb
inc
stos
movswl
leave
or
pop
push
dec
aam
sub
int
pop
xchg
mov
mov
sbb
pop
repz
xchg
repnz
lods
js
scas
cwtl
xor
das
and
filds
cwtl
inc
scas
push
fistl
insl
sub
loop
addl
xchg
inc
inc
cs
notl
mov
cmp
xchg
lret
lahf
jle
sahf
into
aas
insl
or
push
cmp
mov
rorl
mov
stos
mov
pop
xor
mov
pop
add
bound
daa
int3
push
stos
sar
fadd
lret
mov
movsl
stos
pusha
xor
rorb
dec
pop
loopne
vpunpcklbw
pusha
xchg
push
ficompl
mov
mov
jecxz
fs
sbb
pop
jge
cmp
ds
jmp
xor
aad
pop
sbb
mov
jge
jae
jp
sub
sbb
and
cmpsl
mov
enter
aam
lret
aas
jge
orl
ret
mov
cld
iret
pop
cwtl
fcomip
clc
pop
stc
fldcw
cmp
mov
ds
or
pusha
cmpsl
jo
sbb
inc
pop
and
mov
rcrl
inc
xchg
int
pop
das
sub
imul
push
and
push
pop
push
lcall
ror
pop
arpl
out
icebp
add
ficoms
mov
mov
adc
push
pop
sbb
loopne
sbb
cmp
addr16
xor
loope
and
fistl
mov
divb
mov
pop
sub
dec
mov
or
sbb
dec
mov
add
int3
mov
movsl
mov
dec
mov
aas
or
push
push
and
fnstcw
xchg
enter
and
call
or
adc
xor
repz
pop
lcall
shlb
mov
pop
xor
enter
pop
jns
test
xchg
into
aam
out
in
sub
mov
mov
push
adc
fisttpll
pop
adc
pop
leave
xchg
cmp
stc
mov
pop
andl
rclb
sahf
sbb
das
push
xlat
mov
ret
sub
xor
pop
ds
das
pop
ret
je
nop
jb
fiadds
ret
mov
loopne
sub
out
xchg
or
add
stc
mov
inc
sbb
orb
jae
inc
push
bound
jp
xor
in
pop
lds
stos
in
lods
mov
mov
cld
inc
bound
lret
mov
xlat
adcb
mov
add
cld
push
jp
mov
jbe
aas
adc
xchg
test
xchg
xchg
or
xchg
mov
imul
popa
lods
or
flds
cmp
cmp
ss
icebp
mov
cltd
insb
jo
test
sub
faddl
jp
scas
jmp
fsts
aam
sbb
inc
mov
xchg
and
lret
and
les
sbb
int
clc
pop
push
aas
cs
in
lock
or
mov
add
sbb
jbe
int
mov
ljmp
add
mov
and
dec
cmpsl
ss
and
adc
lcall
pop
test
push
jp
jl
sub
mov
push
popf
inc
jns
out
xor
inc
xor
and
mov
sub
cmp
dec
filds
and
fcos
imul
mov
cltd
xchg
dec
xor
ficompl
loope
push
lods
cmp
push
enter
jmp
mov
pop
xchg
sbb
jo
jb
movsl
adc
mov
lods
mov
add
in
movsl
cli
js
loope
mov
movb
cmp
and
stc
sbb
jg
add
lods
daa
sbb
mov
and
push
gs
shlb
jbe
or
or
imul
inc
xor
pop
adc
push
movsl
sti
pop
jp
xor
rorl
jp
out
aam
shrb
fmul
outsl
inc
sbb
subl
dec
les
subl
out
mov
ficompl
js
cwtl
nop
add
mov
enter
ds
outsb
sbb
push
imul
xchg
inc
mov
pop
ljmp
jl
pop
push
xor
adc
fs
fcoms
push
pop
inc
jbe
in
or
or
pop
adc
inc
mov
ljmp
mov
adc
lahf
outsb
icebp
aam
pop
jae
lods
mov
je
sub
call
pop
jmp
and
jbe
out
lret
cltd
push
cmpsl
push
mov
pop
cmp
lods
pop
xor
lcall
sub
int3
scas
sbb
lods
sub
cmp
fsubrp
fidivl
test
sub
push
mov
cli
stos
cmp
dec
lock
jb
insl
in
mov
sub
rol
dec
pop
shll
jl
jbe
andb
push
insl
mov
dec
mov
mov
pop
xchg
insl
fbstp
aad
test
repz
dec
adcb
int
in
inc
push
sub
inc
mov
testl
inc
scas
push
cmpb
cmp
sub
xor
add
enter
and
test
push
stos
and
mov
in
sub
mov
mov
icebp
cmp
mov
jbe
push
orl
stc
scas
mov
mov
scas
movsl
das
pop
pop
push
pop
out
push
adc
add
mov
ficomps
jae
dec
mov
pop
dec
adc
xor
push
lods
add
dec
hlt
xlat
add
notb
xchg
xchg
in
outsl
jne
jo
pop
mov
mov
rclb
jle
fcmovu
dec
jg
sahf
ja
lea
loope
outsb
pop
or
inc
aad
sub
ss
mov
pop
lcall
cmp
mov
daa
and
sub
int3
add
jp
mov
add
mov
hlt
fdivrl
cli
cwtl
icebp
xlat
mov
lds
shl
mov
jecxz
js,pt
imul
dec
and
sbb
cmp
jecxz
in
mov
fldcw
adc
outsb
addr16
or
jbe
loope
xor
jnp
in
adc
sub
fnstenv
lsl
xor
call
add
cwtl
shrl
fldenv
xchg
xchg
cwtl
mov
test
cmpsl
pop
lcall
stos
pusha
ret
out
mov
jo
jp
fists
pop
out
lret
mov
adc
mov
push
pop
ret
pop
xchg
shll
xchg
jg
cmp
xchg
push
sbb
cmp
sbbb
jbe
push
orl
sub
out
xchg
in
test
leave
mov
sbb
enter
sbb
inc
cmp
gs
les
stc
rolb
ret
cmpsl
adc
out
rcrl
xor
fdivrl
je
in
fsubr
test
jecxz
mov
xchg
push
jnp
stos
or
sub
std
movsl
xor
or
mov
mov
and
jne
pop
or
push
sbb
lahf
shll
push
and
rcll
mov
lods
add
pop
jbe
add
bound
xchg
cwtl
mov
inc
je
mov
fst
repz
hlt
sbb
in
ljmp
pop
push
shll
add
adc
xchg
xor
and
adc
in
or
stc
cwtl
xor
sti
insl
adc
xor
repz
mov
ja
mov
or
loope
jp
pop
push
xor
insl
mov
inc
mov
iret
pushf
mov
das
mov
testl
adc
mov
mov
out
cmp
push
and
sarl
mov
add
mov
mov
xchg
adc
jns
and
mov
xor
aaa
mov
or
stos
hlt
cmpsl
sbb
cmpsb
dec
xchg
popf
mov
lock
cltd
mov
sbb
fimull
mov
and
jl
cwtl
push
jbe
not
insb
push
fsubr
mov
mov
cmp
lahf
dec
xchg
mov
sbb
push
adc
mov
scas
cmp
jne
xchg
ss
shrl
subb
mov
and
jecxz
add
dec
hlt
push
push
mov
fidivl
in
jmp
xor
fldenv
inc
push
mov
mov
jo
enter
clc
xor
cwtl
xor
push
repnz
push
lds
push
push
fdivs
sbb
out
jmp
xchg
lods
repz
cmp
hlt
ficoms
or
stc
lods
add
clc
out
popf
sbb
inc
lret
xchg
aam
loop
mov
insl
push
loop
mov
movsb
in
mov
mov
outsb
mov
sub
cmp
ja
mov
lds
mov
iret
into
rcll
mov
in
xchg
gs
xor
movsb
sbbl
rcrb
aam
js
push
lods
mov
jp
out
aad
add
in
inc
fsts
cmc
lret
push
ljmp
in
ljmp
mov
mov
dec
mov
fmuls
int
xor
arpl
xchg
mov
icebp
xchg
and
lret
lds
mov
xchg
je
fcomip
cmp
mov
ds
inc
lret
jmp
and
xchg
mov
pop
and
jecxz,pn
cmp
pop
sbb
add
dec
sbb
outsb
cmp
lock
hlt
push
repz
lret
popl
xor
sub
mov
inc
das
jnp
mov
pusha
pop
inc
mov
adc
sbb
sarb
xchg
adc
add
jg
in
pop
and
ret
sbb
addb
insb
jb
sbb
jnp
jg
in
push
imul
in
cmp
xor
aam
xlat
xchg
sbb
lret
shl
jmp
clc
mov
inc
jbe
xor
out
pop
dec
arpl
cmp
inc
roll
sbb
jmp
sbb
lcall
adc
ret
fidivrs
jecxz
jmp
pushf
scas
in
jo
sub
lds
out
inc
xor
inc
test
sub
shl
pusha
or
test
adc
loope
and
sub
pop
xor
test
movsl
out
ficomps
mov
push
ss
sbb
outsb
leave
ret
xor
in
aaa
cli
and
sarb
dec
test
mov
sbb
insb
aam
out
fcomps
inc
sub
jp
mov
inc
cmp
sub
xor
js
dec
movsb
test
or
in
fisubrl
or
xchg
pop
imul
out
fs
inc
das
xor
int
popa
inc
cwtl
out
sbb
insb
mov
popa
das
repnz
pop
cmc
outsb
and
repnz
es
repz
inc
loopne
mov
mov
insb
push
lea
jb
mov
mov
stos
pop
jmp
daa
loope
jo
pop
pop
pop
cli
test
test
mov
xchg
mov
dec
pop
jne
movsb
sarl
mov
sti
adc
mov
pop
jnp
popl
jae
mov
int
xor
in
add
inc
into
pop
pop
pop
sbb
in
or
inc
fs
push
test
psubd
ficompl
jbe
jns
cli
cmp
jns,pt
stos
rcl
call
outsb
pop
out
mov
inc
add
daa
imul
jne
sub
stc
cmp
sub
mov
pop
or
xor
push
nop
push
pop
dec
mov
mov
sbb
lea
mov
inc
push
and
int3
inc
cmpsb
lcall
mov
fisubl
jge
xor
imul
out
and
add
push
iret
clc
mov
adc
aas
adc
adc
inc
in
cmp
int
pop
pop
fucom
orb
in
cld
adc
inc
jmp
lcall
or
lret
subb
xchg
push
or
int
sbb
adc
push
xor
sub
xor
rcrb
and
xor
sbb
loope
fbstp
pop
or
in
xor
cmp
lcall
call
cmp
mov
xchg
push
xchg
test
mov
push
mov
ja
nop
movsb
aas
test
xor
push
adc
inc
lret
mov
negb
inc
and
cmp
fisttpl
mov
sbb
daa
pop
mov
inc
movsl
pop
xchg
ret
fstl
adc
pop
lods
jmp
sbb
pop
pop
imul
dec
inc
out
stos
in
fisttps
insb
je
cmp
lods
and
jmp
stc
and
in
mov
ret
stos
rcll
dec
push
mov
cmp
push
adc
jne
lock
lcall
push
nop
and
lahf
add
push
jmp
sub
roll
in
push
ja
push
std
fs
mov
mov
push
adcl
xchg
sbb
xor
outsl
jns
push
das
jno
inc
sub
push
xor
mov
je
push
cmp
cmp
cmpsb
inc
fsubr
mov
jae
loope
movsl
ret
push
mov
mov
cmp
cmp
mov
xchg
and
aad
inc
leave
jae
sbb
sub
inc
ret
push
and
lock
js
insb
jb
clc
adc
mov
out
sub
sarb
add
les
xor
in
sbb
clc
sti
push
xor
pop
cwtl
jnp
shrb
jae
rcll
mov
xchg
ret
jb
mov
lahf
cmc
je
inc
jg
cltd
test
call
xor
mov
pop
rorb
xor
clc
xor
jge
mov
es
ss
and
repnz
dec
lods
ret
cmpl
pop
enter
or
cli
leave
addr16
in
mov
xor
ja
leave
adc
lret
pop
inc
into
sub
mov
xor
or
push
add
pop
sbb
mov
xor
jne
pop
mov
gs
mov
imul
xor
test
cmc
pop
cwtl
jge
iret
mov
loopne
dec
inc
out
cmp
mov
jnp
mov
push
mov
jbe
xchg
mov
cmc
aaa
mov
das
shrl
ss
xchg
and
dec
push
int3
adc
test
mov
test
cwtl
cwtl
imul
les
lock
fcoms
sahf
lods
outsl
loopne
imul
and
loop
push
xchg
sub
cmpsl
test
add
sahf
js
cmp
aam
dec
sub
or
dec
test
sub
imul
pop
mov
in
lock
data16
sbbb
rcl
es
push
lods
cmp
pop
loope
mov
lds
out
dec
xchg
out
repnz
push
push
mov
ret
dec
xor
cmc
fcoml
add
lods
loopne
mov
imul
inc
movl
inc
push
imul
cs
push
adc
ss
push
lcall
aas
inc
fists
fadds
lahf
ss
mov
mov
cmp
sarl
and
mov
or
int3
adc
jge
mov
test
mov
int
je
repz
lcall
movsl
xchg
or
les
inc
add
negb
roll
sahf
movsl
hlt
mov
sahf
movsb
fs
lret
out
lahf
andl
sbb
add
int
jmp
mov
xor
fstps
xchg
roll
sub
lret
loopne
jp
xor
test
xor
ljmp
iret
dec
ja
dec
out
and
daa
xchg
lcall
stos
xor
in
pop
fmull
inc
fnstcw
jge
jae
test
lea
shl
or
sub
clc
ds
xchg
inc
stos
and
cmp
popf
inc
iret
adc
adc
jbe
fistpl
add
pop
mov
xchg
cmp
outsb
incl
pop
sbb
cmp
test
sbb
jg
jp
inc
lock
jp
mov
ficompl
roll
cmp
clc
xchg
pop
and
adc
hlt
pop
aas
loop
mov
xchg
sub
or
out
rcr
cld
les
sub
push
ss
jns
adc
pushf
sub
mov
jno
mov
inc
clc
sub
adc
mov
push
das
iret
or
jp
sarb
sub
inc
lds
xchg
xchg
add
push
sti
ja
xor
push
cmp
cmp
xchg
arpl
aam
test
pop
or
and
lcall
scas
push
mov
call
pop
or
scas
fstl
outsl
cmp
test
iret
add
jnp
mov
loope
cmp
jo
fsubrs
xchg
mov
lea
cmp
es
push
dec
dec
std
scas
das
fsubrs
jb
stos
dec
mov
dec
lods
inc
lods
and
adc
add
add
ljmp
loope
lahf
adc
mov
fistpll
gs
stc
push
cli
inc
in
inc
sbb
hlt
call
test
ljmp
and
sbb
fcompl
mov
js
out
adc
push
jb
lahf
ss
imul
addr16
aas
bound
xlat
mov
icebp
outsb
nop
aaa
dec
sub
stos
mov
mov
jns
push
cmp
fiaddl
pop
push
fcoms
push
mov
inc
lock
lret
mov
adc
mov
shll
test
jns
daa
outsb
insl
xor
mov
adc
mov
pop
std
inc
pop
aam
mov
repz
inc
sub
add
into
test
imul
push
fnstcw
xchg
or
fsubl
js
xchg
xchg
pop
dec
mov
pop
jp
adc
call
or
nop
jne
jecxz
push
sub
mov
mov
mov
scas
fdivrl
in
shlb
js
addr16
sub
ja
dec
sub
pop
jmp
and
xchg
lahf
test
in
fcmovbe
repz
shrl
xchg
mov
nop
mov
sub
mov
test
lods
out
popf
scas
cltd
push
xlat
adc
adc
push
aas
xor
in
cmp
std
out
or
cmp
sbb
mov
cli
test
test
fcomi
jge
jmp
inc
inc
fcoml
lds
mov
xor
or
xchg
out
mov
dec
ficoml
cld
call
aas
adc
xor
aas
xchg
fisubs
inc
cmp
and
cltd
jo
cmp
fnstcw
jmp
and
cmp
push
mov
std
nop
repnz
mov
out
cmp
jo
xchg
lret
adc
scas
mov
scas
leave
ljmp
dec
sub
inc
mov
sbb
shlb
xchg
cltd
mov
mov
fsubp
lret
popa
xor
into
stos
sub
insl
andb
inc
ss
pop
pop
clc
push
into
insb
pcmpeqd
and
jno
and
sbb
mov
xchg
adc
leave
movsb
adc
cmp
aam
cmp
push
aaa
jns
adc
lcall
rorb
outsb
pushf
and
test
movsl
xchg
mov
cltd
or
in
and
xlat
scas
outsb
or
fs
push
and
int3
xchg
in
or
enter
fiaddl
bound
inc
xchg
shlb
jo
in
mov
inc
in
scas
add
shll
lahf
push
in
adc
jge
dec
mov
test
testl
xor
push
andl
pushf
push
mov
sub
rcr
ds
cs
cli
inc
fsubrp
aas
jb
loopne
xchg
out
pop
pop
andb
mov
scas
adc
loope
sub
xor
jae
rol
outsb
int3
mov
lcall
sbb
cmpsl
lahf
mov
inc
inc
adc
xchg
or
mov
mov
inc
jmp
mov
push
ret
mov
leave
or
jns
jl
inc
mov
pop
mov
mov
mov
lods
repz
mov
loop
popa
movsb
stos
enter
cltd
aaa
lock
jnp
mov
dec
fisttps
sbb
or
jle
xchg
sahf
outsb
cmpsb
jae
fcmovb
pop
push
cmp
imul
roll
mov
subb
addr16
ljmp
lea
cld
sub
pop
addb
push
jle
cmp
jno
push
clc
testl
push
pop
mov
inc
cmp
daa
ds
cmpsb
repz
push
les
ret
out
mov
pop
popf
pop
inc
or
stc
pusha
pushw
adc
pop
movsl
jg
cmp
mov
inc
jge
call
xchg
cmpsl
push
jmp
add
leave
in
dec
push
dec
inc
mov
leave
and
insl
aas
mov
inc
leave
jg
insl
cmpsl
fs
test
imul
les
stos
push
add
push
adc
sbb
lcall
imul
jnp
mov
mov
mov
inc
fadds
sbb
cmpl
lock
jno
mov
icebp
add
aad
into
pop
xchg
ja
push
arpl
jmp
mov
aam
or
mov
sub
loopne
enter
sti
scas
incl
dec
sahf
fidivrl
xor
stos
pop
and
push
test
ja
pop
mov
cwtl
xor
and
or
lahf
mov
adc
lods
or
and
in
push
push
sbb
cmp
nop
xchg
jb
ret
mov
hlt
mov
cmp
push
push
and
cmp
cmpsl
pop
push
pusha
clc
xlat
lea
push
xchg
stos
xor
pop
cwtl
out
test
lock
repnz
subl
jo
mov
or
cmp
jnp
inc
sub
jno
testl
push
out
mov
cs
divl
aas
sbbb
sub
inc
cmpsl
xor
and
cmp
insb
mov
xchg
pop
lret
out
jno
jg
lcall
mov
sbb
pop
gs
mov
aam
daa
ja
cmp
sbb
rorb
pop
push
adc
and
xchg
sti
cmpsl
pop
cltd
push
mov
popf
mov
enter
cmc
mov
push
adc
les
and
xchg
test
mov
cwtl
xchg
mov
jle
mov
xchg
daa
mov
icebp
clc
inc
in
pushf
cmp
jmp
mov
gs
sbb
jo
lret
xchg
jae
jg
lods
xchg
add
mov
shl
jns
and
xchg
xchg
push
out
and
pmullw
sbb
xchg
rcrl
adc
icebp
loope
adc
pop
sub
jo
aam
jae
jg
lods
popf
add
test
int3
adcl
and
sub
xchg
xor
lret
js
sub
add
sbb
sub
ret
sub
shl
add
aam
add
ja
lock
rcll
and
or
jb
nop
enter
xchg
nop
lock
rorb
xchg
jae
jg
enter
mov
inc
xchg
xchg
xor
out
mov
fidivrs
das
xor
std
in
pop
scas
jp
adc
fmuls
cmpsl
fnstenv
lret
sbbb
sub
jecxz
fwait
adc
pop
jbe
mov
les
and
dec
nop
xor
dec
jne
dec
or
push
cwtl
lret
xor
testl
sub
push
sbb
xchg
dec
int3
mov
daa
lahf
fisubl
sub
leave
push
nop
paddb
xor
leave
mov
leave
rcrl
add
pop
ficoms
loopne
pop
fldt
mov
pop
daa
pop
out
or
inc
fistpl
mov
push
mov
mov
mov
lahf
xor
mov
mov
mov
cmp
fistpl
mov
mov
cs
sbb
es
mov
adc
sbb
dec
pop
cmp
mov
outsl
outsl
mov
sbb
jl
cmpsl
mov
cmp
mov
mov
int3
lea
jmp
dec
out
rcll
inc
leave
call
mov
push
inc
cmc
or
dec
sub
cwtl
arpl
xor
stc
out
push
mov
aad
cmp
in
pop
lahf
mov
out
push
je
mov
leave
cmp
mull
insl
jl
sahf
les
push
fsubrs
mov
sbb
xorl
into
test
fwait
mov
mov
aaa
arpl
lret
jo
push
int
mov
mov
mov
add
xchg
loop
push
mov
mov
pop
push
int
sbb
lods
sbb
call
add
mov
es
add
enter
mov
jns
cmp
xchg
repz
lcall
ljmp
xchg
fwait
pop
jae
das
stos
push
stc
lock
xor
or
negb
das
lahf
into
pop
test
pop
jne,pt
lods
sahf
popa
mov
sub
xchg
mov
adc
cmp
bound
cmp
stc
clc
cmc
pop
xor
jmp
sbb
sbb
jmp
cmp
fisttps
fnstcw
or
bnd
push
fistpll
out
push
test
test
sbb
xor
rcrb
mov
cmp
push
pop
outsl
xlat
popf
insb
mov
arpl
scas
sub
outsb
push
fisttpl
dec
xchg
test
jl
jnp
or
or
loop
fnstenv
in
in
adc
mov
and
rclb
sbb
insl
ficompl
mov
fsubrl
testb
fwait
xchg
pop
cmp
lds
xchg
sbb
daa
mov
enter
addr16
sub
int3
xchg
xchg
popl
mov
push
push
jo
into
jmp
je
mov
cwtl
loopne
dec
fmul
xchg
inc
adc
push
loop
or
loope
cmp
pop
push
repz
nop
mov
ss
or
int3
add
out
sbb
lret
nop
sub
mov
and
fs
xchg
fstpt
loopne
push
and
inc
push
cmp
in
ret
jo
gs
ret
pop
cmp
sbb
mov
adc
in
mov
mov
push
test
shrl
jbe
cmpsb
xor
loop
xchg
sbb
repnz
jbe
adc
fldl
test
rolb
inc
subb
push
push
mov
xchg
jns
fstpl
xor
cmp
mov
push
add
jmp
pop
jg
leave
addr16
shlb
adc
popf
mov
inc
aas
xor
clc
iret
gs
ret
push
pop
jl
sub
or
and
adc
or
cmp
test
sti
inc
cs
test
fcompl
fadds
jb
std
rolb
and
mov
sbb
pop
cmpsb
out
xchg
std
fldcw
imul
xlat
shll
push
repz
xchg
pop
mov
mov
vpcmpgtb
add
adc
or
xchg
sbb
adc
fisttps
pop
ss
sub
push
movsl
cltd
arpl
repz
pop
xchg
xchg
jp
pop
cwtl
pushf
inc
js
sbb
test
jecxz
jmp
mov
sahf
jmp
rolb
jp
mov
mov
adc
fdivp
xchg
inc
lods
adc
and
sub
pop
mov
in
fcmovb
pop
sbb
cmp
lret
jp
mov
je
fdivs
loope
xor
mov
es
addr16
cmp
cltd
lods
stos
push
sbb
add
and
adc
xlat
cwtl
mov
repnz
ret
mov
pop
dec
in
addr16
inc
shlb
fucomp
xchg
arpl
fwait
mov
pop
rcr
test
std
pop
in
in
push
mov
pop
xchg
sbb
dec
sbb
psubusb
call
adc
ret
std
jle
pop
scas
insb
fdivrl
pushl
mov
scas
mov
stos
loop
pop
xor
mov
xchg
jbe
xor
jp,pt
lea
clc
in
sbb
sbb
xor
xchg
lock
iret
sub
adc
out
rcrl
xor
xchg
add
loope
jo
jns
in
arpl
xor
push
out
iret
fwait
sub
cwtl
lahf
mov
shl
mov
adc
dec
scas
jo
pop
insb
insl
cltd
inc
notb
stos
jp
sahf
xchg
xor
imul
data16
int
inc
xchg
mov
mov
cli
sub
daa
cmpsb
mov
pop
sbb
ja
dec
or
push
mov
orb
cmpsl
pop
dec
inc
js
xchg
jae
popf
jnp
test
xchg
cli
in
mov
arpl
sbb
cmp
or
jae
adc
cltd
test
or
dec
add
pop
dec
mov
fs
cmp
dec
push
in
mov
add
les
xor
sahf
fidivrl
jg
jo
cwtl
lcall
ficompl
daa
shrb
mov
xor
mov
hlt
call
jmp
lock
andb
and
push
daa
div
incb
movsb
mov
in
stos
cmpsl
out
pop
rcr
jmp
fcmovu
push
dec
push
sbbl
or
mov
add
mov
ret
loopne
pop
iret
push
mov
lock
xor
push
xchg
mov
dec
dec
adc
and
jo
cwtl
push
stos
jnp
adc
jge
push
or
and
pop
sbb
lahf
jp
cmp
xchg
cld
call
lods
pop
rcll
pop
adc
scas
xchg
out
adc
inc
xlat
add
sub
notl
imul
inc
sbb
xchg
mov
xchg
mov
mov
cmp
dec
sti
scas
jle
xchg
call
dec
sub
sbb
aaa
test
or
push
js
mov
cwtl
ret
lcall
sti
notb
jecxz
push
es
sub
notl
add
test
mov
dec
fisubl
aaa
push
sbbl
inc
dec
in
and
mov
dec
stc
popf
xchg
xor
sub
dec
cmp
mov
lods
xchg
out
jo
mov
jnp
xchg
push
mov
iret
aaa
xchg
push
mov
fisubrs
sbb
fucomip
push
xchg
lahf
aaa
mov
ret
sub
call
fnstcw
das
lock
int
pop
and
fisubl
inc
aam
aam
arpl
or
xor
ret
xor
enter
cmc
jl
jae
inc
xchg
fsubrl
sbb
dec
add
cltd
outsl
cs
pop
mov
out
rcll
sti
add
int3
movl
mov
fisttpll
loopne
mov
shll
clc
push
add
xchg
into
fs
loop
pop
mov
das
or
xchg
dec
repz
iret
adc
adc
outsl
mov
inc
test
jns
sbb
mov
jg
cmp
xchg
or
sbb
push
cs
in
mov
dec
mov
xchg
aaa
and
xchg
in
xchg
mov
xchg
test
nop
loope
xlat
mov
xchg
dec
cmp
pusha
sbb
in
jb
mov
pop
cmp
adc
pop
sub
ficoms
clc
fisubrl
adc
cli
pop
shll
cmc
ss
lods
xor
adc
scas
es
ss
inc
adc
loop
and
pop
inc
mov
jno
mov
mov
inc
jp
dec
xor
xlat
push
or
jmp
pop
xchg
inc
cmp
pop
pop
jg
add
and
add
insb
and
and
push
sahf
xchg
cmp
mov
jmp
or
push
fldl
xor
bound
push
or
out
lahf
test
sbb
test
fistpll
fldcw
mov
adc
mov
aam
pushf
inc
stc
ss
insl
pop
or
hlt
mov
icebp
pop
xor
idivl
loopne
lret
insl
out
ja
ret
scas
cwtl
inc
push
aas
pop
jg
stos
xchg
add
out
or
outsl
sbb
dec
int
jns
xchg
movsl
push
sub
sbbb
data16
inc
lret
lds
and
bound
adc
push
mov
aas
stos
xor
call
fs
cltd
mov
jecxz
and
mov
and
fucomip
cmc
loop
mov
sub
rorb
js
clc
test
push
sbb
jno
in
push
add
and
xorb
in
dec
mov
and
sar
push
aas
scas
mov
lock
adc
and
or
inc
xor
inc
out
xchg
rcll
jno
leave
jmp
sub
lret
mov
add
mov
sbb
in
cmp
dec
pop
mov
or
loope
repnz
outsl
jp
pop
inc
dec
jl
jge
insb
xchg
cld
filds
rcrl
ret
shrl
dec
insl
mov
cmp
mov
push
sub
imul
insb
lahf
and
out
in
into
bndldx
subb
clc
and
cvtpi2ps
xchg
push
pop
in
push
mov
push
inc
sbb
mov
inc
in
das
fisubrl
ret
mov
and
push
jae
dec
jmp
out
cmpsb
out
std
xchg
outsl
jbe
out
int3
push
std
mull
nop
lock
cmp
adc
xor
xor
cmp
fists
fsub
adc
or
inc
aaa
cs
lods
xor
xchg
int3
pop
adc
das
sub
mov
arpl
mov
or
std
add
and
stc
sub
pop
sti
add
lcall
das
fdivs
daa
pop
push
in
push
fld
orb
push
arpl
imull
fnstcw
les
ss
imul
fisubl
out
ds
cmp
inc
jmp
js
aaa
repnz
es
pop
cwtl
cmc
sti
xchg
dec
jmp
xor
lock
rcll
mov
cltd
aaa
add
pop
movsb
mov
sbbl
shrl
test
push
dec
mov
lock
dec
aas
sahf
js
call
mov
adc
xorl
fiadds
adc
jge
ret
sub
jmp
mov
notb
and
test
sarl
and
mov
inc
mov
in
call
cmc
push
mov
movsb
add
mov
fidivrl
cli
repz
pop
jo
aaa
sub
test
stos
lcall
mov
sub
or
mov
ret
outsl
shlb
cwtl
jle
push
lods
add
xchg
movsl
les
xchg
and
adc
aaa
loop
stos
mov
dec
iret
dec
hlt
or
sub
out
les
int
pop
fistl
and
frstor
scas
sub
jne
xor
sub
stc
mov
add
fisubrl
ret
inc
xchg
adc
sbb
jb
jbe
cmp
mov
xor
gs
push
sub
enter
jno
pop
add
jbe
mov
aam
add
push
rcl
loop
adc
fdivrl
stos
rorl
push
push
loop
lahf
xor
mov
add
int
cmp
mov
shrl
xor
push
stos
and
mov
inc
xchg
inc
outsb
fidivl
sar
pop
jp
mov
xorb
push
fistl
call
sbb
xor
addr16
cld
rorb
outsl
shll
xorl
sbb
ss
cmp
fucomp
push
mov
pop
lock
or
and
push
add
xchg
xchg
jno
push
test
jae
ja
lods
push
gs
arpl
push
add
jl
push
pop
pusha
in
xchg
cmp
xchg
sahf
shrl
nop
mov
js
mov
lods
push
pop
dec
ja
mov
ficompl
push
dec
loopne
mov
stc
cmp
xchg
test
pushf
xchg
into
inc
xor
shrl
enter
cwtl
stos
nop
int3
push
fwait
sbb
push
dec
cmpsl
dec
jmp
adc
xchg
mov
cmp
jb
cmp
lret
adc
sarl
adc
lock
mov
cmp
test
cmp
and
aam
sbb
test
pop
movsb
sub
mov
iret
add
cmp
adc
add
test
or
cmp
jmp
cltd
mov
dec
pop
cli
jno
or
test
dec
repnz
stos
stos
xor
repnz
outsb
cmp
out
push
and
ds
mov
loopne
dec
xchg
xchg
xor
popf
insb
test
jle
pusha
scas
xor
shlb
mov
mov
gs
lea
xor
xor
dec
mov
aam
sbb
fcoml
test
fnstcw
and
lea
aad
push
mov
fdivp
ret
notb
xor
ficoms
add
int
sbb
or
cwtl
jmp
xor
mov
stos
das
aas
shlb
jl
out
es
outsb
orb
and
inc
adcb
in
inc
in
cmp
out
rorb
aad
mov
enter
je
mov
xor
pop
gs
mov
add
mov
mov
rol
dec
data16
into
jmp
daa
scas
cmp
gs
mov
shl
dec
mov
dec
imul
or
data16
sbb
mov
xlat
xchg
xchg
aas
test
repnz
dec
cmp
dec
fildll
faddl
mov
and
std
xor
gs
ja
push
inc
pop
cmp
jp
lahf
cmp
fsubrs
cmp
dec
mov
out
test
dec
cmp
js
cmp
xor
std
mov
fcomps
lcall
scas
movsl
xor
and
sarb
xchg
icebp
adc
push
fcomps
sbb
sbb
outsl
fcomps
jecxz
dec
cmp
cmp
push
inc
pop
push
in
inc
pop
push
jmp
xor
fwait
sahf
adc
pop
xchg
js
test
in
sub
js
out
dec
push
jno
pop
test
add
int3
mov
loop
stc
outsl
fwait
push
or
add
stos
pusha
lds
sbb
jno
adcb
stc
mov
cmp
push
and
inc
ja
das
pop
cltd
push
or
xor
xchg
movsb
repnz
ficomps
sti
jnp
jo
sub
dec
lods
xor
jns
in
lds
rclb
push
sub
or
mov
jae
jnp
sahf
daa
push
insl
int3
das
int
pushf
or
pop
es
test
fs
lcall
fisubl
sarb
jo
adc
icebp
add
inc
dec
sub
or
cmp
or
inc
dec
cld
testb
xchg
ss
mov
cli
sub
jb
sub
adc
mov
mov
ja
ja
lods
cmp
ficoml
outsb
push
jno
add
dec
fiaddl
adc
adc
add
clc
cltd
cmp
mov
sub
mov
xchg
mov
jl
cmp
insb
push
jg
dec
push
daa
stos
xor
cmp
dec
and
lcall
jb
jns,pt
sti
sbb
les
fistps
jbe
jmp
repz
xor
clc
sbb
and
or
lret
je
les
mov
int3
int
aaa
and
add
mov
mov
inc
pop
sub
repnz
mov
out
dec
lods
es
int
jnp
fldenv
mov
xchg
pop
xchg
push
stc
stos
add
addr16
int3
inc
xor
dec
or
mov
int3
cmpsb
lret
cmp
xor
push
mov
xchg
mov
lods
aad
jmp
insl
or
fbstp
push
jecxz
adc
xor
cwtl
mov
xor
fimull
mov
mov
test
nop
xchg
loope
and
dec
push
adc
cmp
insl
stc
jecxz
pusha
xor
cli
push
add
inc
jbe,pn
or
out
xor
and
xchg
pop
sub
fs
pop
mov
dec
imul
fnstsw
shll
in
lea
dec
shl
lahf
into
shrl
sbb
je
mov
scas
subb
cwtl
sbb
jmp
hlt
ja
cli
mov
pushf
stos
loop
aad
in
pop
out
jl
jbe
inc
xor
or
pop
inc
push
insl
test
pushf
fstps
les
into
adc
cmp
insl
into
lahf
sarb
fisttps
out
cmp
pop
ret
xchg
mov
testl
or
mov
lret
ja
mov
loope
adc
into
dec
cwtl
jns
cli
or
mov
sti
add
mov
and
insl
mov
in
cmp
subb
js
fadd
data16
mov
fnstcw
fimuls
arpl
out
xchg
and
jl
filds
mov
lfs
shlb
xor
clc
lahf
dec
ror
jge
sub
lret
pop
ljmp
cmp
xchg
mov
cmp
cwtl
pop
dec
ror
jmp
pop
xor
jle
xor
pusha
xchg
xchg
cs
icebp
pop
mov
daa
xchg
scas
lahf
cmp
out
pop
scas
or
iret
mulb
lock
sub
sub
or
cwtl
xor
arpl
pusha
sahf
jl
xchg
clc
or
sub
jp
xchg
lock
push
pushf
out
jp
xlat
jmp
mov
in
mov
jg
fistpl
mov
mov
les
stos
fstps
stos
sbb
xor
jbe
jae
mov
mov
mov
hlt
out
inc
das
mov
jae
hlt
fxam
push
cli
call
pop
or
clc
test
aad
dec
pop
rorb
sbb
fldl
add
in
arpl
xchg
xlat
pushf
stc
rorb
push
out
in
dec
mov
fwait
inc
mov
sub
hlt
cmpsl
in
xor
jb
mov
mov
fimuls
mov
gs
nop
lret
les
push
pop
add
cmp
adc
pop
or
rclb
lahf
repz
movsl
movsl
lret
jmp
dec
add
andb
flds
pop
pop
test
add
aad
imul
push
cmc
or
xor
out
lods
lods
jmp
sarb
pop
jns
push
pop
push
into
mov
fsubrl
cwtl
lcall
stc
ret
push
xlat
xor
xor
lcall
ret
sbb
fidivs
repnz
out
inc
fbld
fdivrs
stos
nop
dec
xchg
jo
xor
lds
lret
rcrl
xchg
repz
mov
popa
movsl
add
ret
ret
cmp
and
fpatan
loopne
push
or
out
cmp
dec
sub
icebp
xchg
repnz
leave
mov
mov
dec
mov
movsb
arpl
sub
jge
lcall
or
mov
adc
mov
das
pop
mov
xchg
inc
cwtl
rcrl
lret
fists
or
scas
popa
rorl
add
cli
fcmovnu
mov
push
fwait
scas
dec
push
xor
push
lcall
daa
loope
fistpll
loopne
rol
outsb
jge
lods
mov
xor
jl
hlt
or
mov
stos
test
lds
out
xor
jp
out
lret
mov
pop
jnp
enter
repnz
pusha
adc
lret
cmp
cmp
cli
mov
jne
xor
aaa
loope
jne
push
mov
and
pop
lds
movsb
insl
dec
pop
fcmove
pop
fildl
int
fstpl
mov
mov
dec
lret
mov
js
lds
jg
mov
ss
mov
xchg
cltd
dec
xchg
xchg
pop
orl
out
aaa
movb
shll
cltd
pushf
rclb
bound
jg
push
and
aas
int3
fstpt
adc
xor
lds
sti
dec
cs
enter
push
imul
mov
shlb
adc
fcoml
jae
sub
aam
out
pushf
or
cwtl
iret
dec
in
pop
aad
int3
mov
pop
mov
decl
movsb
jl
repz
iret
xor
pop
jmp
in
ja
xlat
jno
inc
insl
cmp
xchg
daa
out
js
push
cmp
mov
in
sets
nop
pusha
daa
aaa
data16
stos
outsl
jbe
aad
cli
push
fisttps
fistl
and
pop
rol
xor
cmpl
jp
add
fwait
pushf
push
dec
and
mov
mov
xor
mov
rcll
mov
mov
dec
xchg
iret
cmp
shr
push
push
add
ja
imul
mov
mov
mov
sub
aas
xchg
cltd
std
pop
loop
sbb
mov
popa
out
push
mov
adc
pusha
and
daa
lret
scas
push
xor
imul
pop
xchg
in
and
loop
testl
sub
scas
push
mov
shll
adc
addl
push
pop
fs
rcr
mov
stos
jmp
mov
sub
mov
jg
sub
mul
enter
fsubrl
xchg
inc
sbb
mov
xor
sbb
cmp
outsb
insl
sbb
fsts
ljmp
mov
orl
push
in
int3
sbb
pop
rcll
into
push
xlat
enter
shll
das
and
push
pop
cmp
jg
xor
gs
test
adc
repz
or
cmp
mov
sahf
pop
data16
mov
sahf
add
je
jae
xchg
cmc
lods
xchg
jp
xchg
lds
mov
jno
xchg
xlat
jg
shll
fstl
into
adc
stc
mov
int
jmp
mov
mov
fimuls
movsl
lods
pop
mov
scas
call
push
mov
jo
aaa
inc
mov
mov
out
sub
div
aas
mov
mov
mov
pop
dec
cmpsl
addr16
jb
pop
inc
jne
inc
rcrb
pop
xchg
imul
pop
or
lds
and
jbe
adc
loop
mov
hlt
daa
inc
stc
dec
xchg
push
loope
cltd
xor
pop
or
pop
push
mov
sahf
cmpsb
mov
mov
cmpsl
decb
movsl
fsubl
divl
or
push
jnp
jmp
mov
imul
mov
adcl
rorb
sub
and
or
jmp
loopne
clc
lds
push
int3
xor
and
ss
inc
xchg
jno
and
add
movsb
jle
dec
fs
or
jns
mov
es
pop
leave
addl
push
sub
xor
rorb
xor
cmp
xor
inc
dec
lcall
addr16
jne
adc
xor
es
xchg
dec
ljmp
sbb
sbb
push
shl
cmpb
push
xor
or
mov
out
pop
cmp
xor
push
lcall
aas
dec
iret
sub
adc
push
lods
push
push
or
aas
dec
in
int3
das
stos
pop
out
mov
test
cmpsb
loopne
push
daa
call
andb
ret
mov
xchg
mov
inc
cmp
mov
push
mov
push
or
mov
pop
xchg
adc
xchg
pop
stc
push
lahf
sbb
inc
nopl
jg
pop
pop
inc
leave
shll
mov
lea
jmp
mov
jae
mov
pop
adc
ss
mov
arpl
aaa
je
mov
pop
mov
stos
pop
add
push
sbb
in
aad
lahf
mov
or
push
std
inc
ss
inc
or
jmp
je
cltd
adc
fstps
movsb
cmp
ss
test
xchg
cmp
add
cmp
sarb
pop
xchg
stc
and
adc
hlt
inc
fnstsw
and
mov
rcr
call
aaa
nop
enter
and
in
sbb
ljmp
push
mov
push
mov
mov
insl
and
jle
and
pop
enter
stos
sbb
cmp
and
ret
adc
sub
lret
xchg
movsl
push
stos
ljmp
or
fwait
addr16
popa
and
xchg
sahf
aas
ror
cmpsb
fst
jg
into
xor
mov
dec
push
pop
xor
ror
sub
lock
mov
das
mov
adc
jb
or
ja
mov
hlt
add
das
inc
dec
ror
stos
mov
xchg
inc
xchg
sarl
xor
push
adc
xchg
mov
cs
out
dec
int
inc
add
push
loopne
push
adcl
pushf
or
xlat
xlat
cwtl
xor
outsl
add
jb
and
divl
mov
cmc
cmp
lcall
aad
sarb
into
ss
not
stos
nop
cmp
pop
fsubl
adc
lea
mov
pop
dec
jo
call
xchg
daa
call
pop
fstl
sub
mov
xor
in
sub
push
decl
mov
cmp
loopne
xchg
push
xor
or
cmpsl
idivb
xchg
mov
cmc
pop
subb
push
xchg
jg
adc
push
call
je
popf
shll
push
lcall
sbb
push
xor
pusha
cs
xchg
cmp
sbb
xor
cli
aas
mov
cmp
cmpsl
push
cmp
mov
outsb
js
dec
clc
mov
jb
pop
mov
sbbl
ret
sub
ljmp
cltd
mov
sub
lahf
cmp
lea
adc
sarb
mov
movsb
xor
xlat
fnstcw
aam
xchg
cmpsl
xor
push
xchg
pop
mov
xchg
jnp
cmc
push
sbb
sub
dec
lcall
push
test
lods
das
mov
scas
adc
pop
nop
push
lods
test
pop
xchg
cli
ret
lods
js
pop
mov
loopne
sti
xor
in
inc
inc
fistl
mov
andl
les
insb
push
pop
mov
sub
lret
repnz
mov
sub
add
mov
xlat
sub
aaa
cmpb
and
push
cmc
mov
lods
testl
stos
inc
mov
fwait
adc
sbb
pop
insl
push
xchg
pop
je
xchg
fsts
sarl
fnclex
xlat
mov
mov
xchg
xchg
jmp
fwait
and
lock
hlt
fidivrs
jo
int3
cmpsb
mov
mov
in
cmp
dec
xor
cmpsb
ret
push
dec
add
roll
inc
insb
popf
lcall
mov
test
arpl
mov
int3
dec
lcall
pushf
mov
jo
rcr
sub
jns
push
xchg
xchg
jp
jo
cmp
sbb
jae
xchg
pop
add
popf
sub
stos
adcb
mov
cmp
shl
pop
jmp
fisttpll
sub
fisttpll
arpl
bound
insb
fcoml
data16
push
in
data16
sub
push
mov
aad
idivl
inc
and
adc
aaa
xchg
imul
pop
mov
sub
xor
jae
imul
cmp
xor
popa
mov
std
mov
lcall
xor
out
push
mov
add
push
jns
sub
fnstsw
bound
pop
push
mov
push
mov
and
pop
sbb
popf
cli
fcom
inc
in
insl
scas
xchg
lods
aas
lea
push
jae
jnp
jecxz
mull
inc
dec
or
push
insb
out
cmpsl
lret
sub
mov
mov
stos
mov
and
das
lahf
cwtl
cld
jge
test
pop
inc
fimuls
mov
and
inc
pop
das
addl
repnz
stos
stos
aad
lea
add
cmp
jo
jae
rolb
mov
fwait
sbb
sbb
cmp
leave
mov
int
in
popl
sub
jae
dec
dec
mov
daa
xchg
and
mov
jae
inc
mov
data16
xor
inc
jns
cltd
pop
xchg
add
mov
inc
inc
out
mov
imul
addl
mov
and
adc
cmp
out
rorl
dec
outsb
lret
mov
out
cmp
jmp
jno
rorb
mov
loopne
clc
arpl
ja
into
jle
mov
sub
das
or
stos
mov
les
mov
iret
add
dec
jmp
fistpl
inc
pop
mov
jbe
adc
std
sub
cmpsl
sbb
pop
and
cmpb
scas
mov
mov
aam
mov
into
popf
addr16
addb
xchg
sub
leave
dec
enter
scas
inc
pop
mov
add
cmpb
in
es
test
push
mov
xchg
sbb
jg
or
popa
es
add
jg
vunpcklps
pop
scas
jnp
loopne
add
sti
jle
and
mov
scas
iret
adc
and
movhps
fldcw
jle
pusha
sbb
sub
mov
ja
add
jl
inc
mov
fimuls
aas
mov
inc
inc
rcl
cmc
jbe
jecxz
adc
lock
cli
ljmp
imul
mov
add
dec
inc
fsubrl
sub
cmpsb
pop
dec
cmp
pop
xchg
sbb
push
xchg
adc
outsb
push
inc
add
jmp
outsb
out
push
std
xchg
mov
mov
push
out
daa
loop
sbbb
xor
add
add
cltd
sub
sbb
add
fildl
cmpsb
inc
pop
xchg
pop
push
repz
and
mov
enter
add
fstpt
mov
mov
or
sbb
aaa
stos
das
pop
jns
jecxz
jl
pop
mov
mov
or
imul
cmp
push
js
outsb
fcoml
adc
loop
sbb
fstpt
push
xor
pop
xchg
cmova
inc
or
pop
mov
lret
adc
xchg
pusha
add
mov
mov
pop
mov
or
fcmovnu
adc
xor
xlat
push
or
dec
js
nop
mov
gs
sbb
sbb
hlt
in
xchg
popf
arpl
mov
sbb
test
dec
int
movsl
adc
jns
bound
cmp
lock
bound
insb
add
je
xchg
pop
les
add
nop
mov
xor
sub
lret
out
xchg
decb
adc
push
in
mov
pop
loope
rclb
ja
stc
xchg
int
and
lods
cwtl
jge
dec
cmp
jg
jg
aam
js
and
push
dec
cld
or
clc
mov
ss
mov
xor
outsl
lock
add
mov
mov
add
fimuls
cmp
xchg
arpl
sub
push
mov
ss
not
cmp
or
add
mov
shll
std
sbb
jb
or
imul
in
pop
aaa
xchg
pop
imul
outsb
daa
sub
and
cmp
gs
add
and
subl
cli
xchg
fcoml
sub
or
cmp
loopne
sub
and
in
ljmp
pop
xorl
popf
sbb
xchg
faddl
subb
jp
xor
cmp
mov
xor
ljmp
or
sbb
xchg
sarl
ret
add
ljmp
addr16
dec
decb
cmp
arpl
adc
push
adc
testb
or
aad
push
test
ljmp
add
or
add
adc
pop
xor
inc
lds
roll
mov
arpl
daa
and
mov
jnp
inc
roll
je
addb
jg
fcmovne
aaa
cltd
cld
or
insb
cld
insb
jbe
xor
mov
shll
mov
pop
aas
inc
mov
and
je
pop
jmp
pop
or
jb
ljmp
ja
xor
into
loopne
ret
outsb
xchg
int3
mov
js
cmpsb
loopne
bound
les
xor
adc
cmp
sub
addr16
inc
nop
test
das
sub
jle
cmp
jnp
loopne
movsb
mov
mov
fdivrl
stos
cmp
mov
xor
out
ficoms
cmp
pop
ljmp
cld
adc
negb
in
mov
outsl
sbb
ds
hlt
xor
xor
aad
sub
rcll
cltd
mov
xchg
add
lock
mov
lcall
or
and
adcl
sbbb
pop
xchg
rcll
mov
out
mov
pop
pop
cmpsl
stos
cmpsb
insb
clc
inc
pand
arpl
adcl
dec
add
mov
jge
das
lcall
cli
jns
xchg
lds
clc
mov
mov
mov
pop
push
gs
js
fstl
cld
push
iret
fsubs
cmp
jb
cmpsb
shll
or
lea
mov
or
in
cmpsl
aaa
sub
adc
inc
stos
inc
sub
jns
test
js
leave
pusha
mov
add
jns
adc
fcmovnbe
and
pop
jge
out
pop
adc
loop
xchg
int3
xor
outsl
cmp
fisubl
xchg
bound
pushf
sub
shrl
push
insl
je
fcoms
pop
shlb
in
dec
mov
and
xlat
and
pop
inc
test
stos
push
mov
repnz
mov
add
sbb
or
loopne
sub
pop
or
push
mov
outsb
subb
dec
xor
add
jns
test
les
mov
xor
jns
cmp
pop
cmpsb
js
mov
aam
stos
insl
lods
inc
test
test
int
xor
inc
nop
cs
stc
test
mov
mov
sbb
or
xchg
pop
pop
mov
and
and
sbb
and
ds
xlat
or
aam
fildll
and
jo
push
xlat
inc
cltd
andl
aas
les
imulb
fdivs
cmp
sti
pop
cwtl
js
iret
int3
lahf
inc
leave
movsb
lds
dec
mov
aas
dec
stos
lds
pop
insl
mov
jbe
or
push
adc
or
adc
inc
mov
or
jbe
popa
enter
mov
cltd
pop
aam
push
ja
or
out
pop
jle
lret
mulb
adc
mov
pop
cmpsl
inc
sub
dec
das
movsb
inc
ror
test
ja
mov
sar
xchg
out
pop
das
shlb
or
enter
faddl
notb
subl
test
cltd
aad
adc
insl
arpl
jge
aaa
jns
lret
hlt
mov
pop
frstor
xor
sub
lret
jb
add
incb
pop
cmc
out
adc
add
fildl
and
push
flds
cmp
inc
lret
xchg
es
push
pop
lods
lcall
xchg
push
push
xor
aaa
push
fs
pop
lods
pop
mov
test
push
cmc
rclb
in
jbe
add
xlat
cmp
sbb
adc
inc
sahf
cwtl
jg
aaa
jg
inc
xchg
xlat
ja
lret
or
mov
mov
popf
sub
lret
cmpl
or
mov
jge
sub
mov
cmp
shr
js
pop
xchg
jg
jno
xchg
adc
sbb
rol
pushf
cmp
lret
cmp
cmp
iret
mov
iret
subl
insb
xor
test
outsb
cmc
out
aaa
cmpsb
jecxz
fldenv
jne
fwait
std
cmp
mov
clc
push
and
movl
out
pop
pop
and
adc
cmp
nop
fadd
in
aaa
arpl
in
jno
adc
pop
inc
xchg
inc
addl
outsl
jbe
jns
mov
cmpsl
ret
pop
or
fadds
sbb
sbb
lcall
test
mov
lret
dec
jbe
push
cltd
pusha
test
xchg
mov
dec
mov
mov
in
mov
adc
inc
or
fsubrs
inc
shr
jno
jne
mov
js
popf
pop
mov
lahf
mov
in
dec
clc
mov
or
cmp
cmp
insl
pop
jno
test
mov
aad
insb
cmpsl
mov
dec
cmp
jne
sbb
stos
sbb
imul
and
out
push
fistpll
adc
and
pop
shrl
clc
rorb
pop
shl
cmpsb
xchg
mov
stos
enter
aaa
mov
cmp
shlb
adc
test
pop
inc
push
rorb
test
cli
xor
mov
sbb
stos
xchg
jg
negl
scas
and
xchg
pop
je
stos
xor
mov
dec
xor
adc
aam
mov
inc
outsb
cltd
mov
outsl
shl
xchg
dec
fnstcw
ljmp
ret
sti
add
inc
sub
aad
out
sbb
iret
and
fwait
xor
mov
xchg
adc
inc
pusha
in
or
popl
sbb
lock
scas
shrl
data16
pop
clc
leave
inc
aam
inc
arpl
shrb
jge
sub
or
and
mov
lds
pop
cli
xor
cmpsl
and
nop
mov
mov
in
xchg
adc
es
mov
push
pop
jl
xchg
int
mov
adc
xorb
adc
outsl
adc
nop
sub
lahf
xchg
add
lods
mov
shll
cmpsb
lods
pop
test
and
test
mov
pop
dec
pop
aam
fs
dec
cmp
leave
adc
dec
int3
push
out
fcomps
push
bound
je
inc
sub
push
add
xchg
push
mov
rcrl
sbb
or
bound
adc
in
xor
in
dec
inc
mov
fst
stos
mov
pop
mov
flds
xchg
daa
xor
cmc
and
js
xchg
in
jl
sub
ds
aad
push
pop
xchg
gs
fistps
fcoml
out
test
pop
mov
xor
test
popl
sbbb
popf
cmp
lcall
cs
xchg
and
sbb
pop
icebp
jg
lock
mov
mov
test
test
aaa
pop
push
dec
ds
xor
test
push
dec
xchg
pusha
aad
loop
cltd
cwtl
jo
jmp
pop
sub
xchg
shrb
inc
dec
out
dec
shrl
scas
push
jbe
loopne
jle
popf
fidivl
mov
pop
and
les
pop
loope
mov
sbb
lods
fs
iret
lods
sub
aad
mov
je
test
insl
ja
sub
cmpsl
int3
mov
lahf
loop
pop
setns
aas
push
lret
jp
aaa
sbb
roll
xchg
mov
dec
in
inc
ljmp
jge
add
shl
push
or
call
out
insl
lods
hlt
decl
push
sub
mov
xchg
dec
adc
int
xchg
or
pop
mov
and
popf
pusha
mov
fcmovnu
daa
fadd
adcl
subb
sub
sbb
add
add
in
pushf
jl
push
jno
je
cmpl
dec
das
ja
or
mov
mov
imul
les
inc
push
ljmp
add
mov
ss
cmp
pop
ljmp
les
jecxz
mov
sbb
rcrb
mov
adc
jp
test
mov
pop
push
scas
cmp
jp
sub
ja
cmp
add
cmp
in
mov
mov
cmp
filds
jle
call
shr
clc
lcall
sub
enter
adc
xchg
mov
adc
cmc
call
test
js
rclb
add
lcall
shrl
push
out
fidivrl
je
push
xor
mov
loope
aam
push
mov
mov
mov
pop
sbb
mov
mov
popa
in
imul
mov
test
dec
add
push
insl
lds
arpl
pop
rcr
fnstsw
jecxz
sub
lock
sbb
jle
adc
bound
adc
int
outsb
insb
xchg
sub
mov
sti
push
xchg
call
bound
test
xchg
mov
cmp
in
rcr
mov
out
push
in
mov
stc
data16
cwtl
popa
mov
inc
fldenv
mov
imul
jecxz
ljmp
daa
int3
push
sbb
ljmp
xchg
stc
lods
xor
push
testb
sbbb
clc
enter
movsl
lds
mov
lods
xchg
sub
popl
dec
hlt
lret
fistpl
cmp
pop
mov
cld
fisubrs
pop
or
shrb
xchg
cmp
sbb
sbb
out
xlat
and
add
and
lea
sbb
cmp
add
lret
inc
movsb
nop
ret
out
into
dec
nop
dec
pop
addr16
lret
xchg
fdivrs
testl
addl
push
out
and
adc
or
push
imul
into
xchg
inc
push
mov
mov
outsl
xchg
xor
jg
sbb
dec
mov
fnstsw
pusha
push
mov
pushf
dec
into
std
cmp
xchg
imul
pop
rol
pop
das
xor
pusha
lcall
add
into
dec
pop
and
shr
push
or
xlat
pop
cmpsl
andb
inc
mov
and
push
jg
out
fcoml
pop
xor
cmpsl
push
inc
dec
ja
je
xorl
jb
pcmpeqd
scas
shrb
mov
jmp
xchg
pop
xor
scas
xorps
in
pop
pushf
push
scas
jo
mov
int
ret
add
jecxz
xchg
pop
mov
cmp
pushf
jl
mov
pop
pop
sub
into
dec
lods
xor
jno
sarb
pop
arpl
mov
popa
adc
pop
stc
dec
pushf
mov
lods
cmp
sbb
mov
push
or
xor
or
mov
ja
mov
cmp
out
les
add
push
in
jns
bound
mov
lods
pop
dec
cmp
mov
lock
jl
push
mov
and
cld
cmpsl
jne
adc
pushf
out
scas
ds
es
test
mov
insl
mov
push
pop
sbb
adc
jns
lods
arpl
and
and
mov
sub
inc
push
sub
lret
pop
xor
dec
push
fsubs
ret
mov
inc
inc
push
dec
arpl
mov
jae
pop
mov
in
and
cli
das
and
test
xchg
aad
ret
in
dec
pop
imul
pop
pop
pop
testl
cmovle
add
mov
lret
push
shl
push
cwtl
jne
imul
adc
sahf
push
daa
lods
lgs
stos
jl
test
imul
std
jne
mov
mov
arpl
dec
pop
addr16
pop
xor
pop
out
inc
ret
adc
xchg
adc
ds
jecxz
movsl
lea
dec
out
xor
inc
movsl
mov
inc
push
sbb
aas
mov
fstpt
push
adc
add
jno
mov
pop
repz
mov
sub
sbb
xor
mov
push
movzbl
pop
outsb
mov
dec
movsb
inc
repz
mul
jge
lock
je
pusha
movsl
mov
cmc
dec
mov
test
dec
outsb
testb
out
or
push
jnp
in
mov
cmpsl
xchg
jb
cmp
scas
fdivs
and
adc
addr16
popf
jg
sub
and
fs
mov
aad
or
xchg
addr16
cwtl
jb
out
push
xor
or
jne
push
fildl
dec
mov
pop
sbbl
pop
and
adc
cmc
in
sahf
repnz
fnsave
push
int
sub
sbb
orl
loopne
aas
popf
mov
imulb
lea
push
push
pop
sbb
and
or
jno
mov
inc
dec
leave
jmp
adc
adc
push
xchg
xor
shr
or
lods
push
adc
and
repnz
lahf
or
lret
cmovp
pop
popf
mov
pop
sub
movsl
je
gs
gs
adc
iret
sub
add
mov
mov
ss
cmp
fs
xchg
xchg
jp
mul
addr16
clc
adc
dec
pop
push
scas
jbe
push
mov
andb
jb
pop
int
out
cmpsl
in
dec
repnz
xchg
outsl
xlat
add
or
inc
lss
out
jmp
mov
pop
aam
ja
pop
push
hlt
add
pop
jno
mov
bound
enter
loope
and
push
mov
cmc
mov
mov
into
cmp
dec
push
stc
rolb
mov
jnp
push
mov
pop
hlt
dec
mov
push
test
pop
xor
xchg
dec
btr
in
cmp
cmc
mov
inc
push
sbb
in
adc
mov
sbbl
xchg
fidivrs
dec
jae
jl
hlt
push
and
push
lret
out
xchg
sub
cmp
add
adc
stos
xor
mov
push
push
bound
data16
jmp
sahf
inc
test
jg
mov
dec
dec
mov
push
adc
jl
dec
dec
pop
jnp
cmp
fistps
and
inc
lds
out
xor
pop
inc
inc
or
jbe
loopne
rol
and
xchg
mov
sarl
push
xor
dec
data16
rcll
adc
out
popl
shlb
sub
lods
push
fs
pop
jne
push
addb
push
dec
int3
in
rcrl
fisttpl
xchg
mov
lret
lods
out
repnz
xchg
pop
pop
xor
test
jbe
add
cmc
cmp
jb
cmp
mov
pop
mov
push
pop
loopne
dec
cltd
mov
js
jmp
test
mov
repz
sbb
mov
cmp
test
bound
fs
fildl
fwait
pop
popa
push
fistl
mov
lods
dec
js
sbb
fwait
or
dec
nop
outsb
je
xor
xchg
mov
loop
xchg
idivl
sti
pop
ret
sub
pushf
ja
jl
movsl
iret
jp
out
es
lock
xorb
xchg
insb
ret
das
xchg
sub
gs
js
movsb
loop
pushf
push
into
jns
adcb
add
stos
fdivr
dec
mov
les
or
popf
addr16
pushl
dec
sub
call
mov
repz
push
rcrb
mov
addb
js
fsubl
cwtl
xor
adc
dec
xor
xchg
push
int
stos
out
pop
fisubs
js
imul
pop
jb
mov
jae
lea
popa
mov
xchg
scas
jg
sahf
xchg
sbbb
imul
cmp
push
mov
xchg
mov
lods
jbe
andb
outsl
fwait
mov
mov
cmp
push
pop
mov
push
clc
js
mov
loopne
or
test
inc
inc
jne
ja
jo
outsl
rcrb
lret
cwtl
ret
push
sbb
and
fnstcw
ficoms
rcl
and
xchg
xchg
jno
inc
mov
rorb
sub
pop
jge
arpl
int3
and
adc
lcall
fwait
adc
mov
push
jne
ficoml
jp
cltd
mov
ret
hlt
pop
xchg
test
enter
xchg
or
and
jns
push
loope
sti
mov
lock
cmp
xchg
in
jmp
lock
cmp
lret
rolb
test
pusha
and
push
mov
aam
adc
xchg
mov
lret
sbbb
mov
nop
jae
add
sub
scas
mov
int
addb
mov
out
mov
movsl
subl
push
shlb
test
push
fs
mov
or
movsb
lret
jge
xchg
and
mov
insb
inc
xchg
mov
push
mov
push
mov
stos
popf
sub
adc
push
push
mov
sbb
mov
ret
leave
mov
push
lcall
jb
or
nop
dec
push
scas
mov
popa
les
stos
jecxz
lcall
adc
popa
outsl
and
stos
and
cltd
ficompl
icebp
jp
je
hlt
aas
push
stos
scas
xor
xchg
or
or
adc
hlt
fcmovnb
pop
mov
add
push
out
scas
cmp
jnp
inc
out
sbb
xor
divb
hlt
mov
loop
lret
mov
mov
jle
aad
int
lret
sti
and
mov
mov
sub
fwait
inc
inc
repnz
cwtl
sbb
nop
xor
adc
mov
inc
repnz
andb
mov
aad
inc
cwtl
xor
mov
add
adc
push
fisubrl
leave
jle
clc
loop
sahf
fisubrl
hlt
push
stos
push
ret
sbb
push
sub
das
fcomps
or
jecxz
xchg
pop
fucom
pop
popa
imul
lods
add
js
test
pop
andl
sarl
cmp
fildll
add
imul
inc
je
jne
xor
aam
inc
ljmp
xchg
je
sbb
add
lods
and
out
push
xchg
mov
lods
shll
cwtl
bound
addr16
xchg
aam
das
or
lods
lcall
int
xchg
push
scas
adc
pop
xorb
add
mov
xorb
cld
rcrl
mov
lock
pop
push
jne
cmp
mov
jnp
jmp
xlat
inc
mov
into
repnz
mov
negl
push
push
inc
and
ret
pop
sbb
clc
mov
cs
int3
jae
push
in
and
push
pop
subl
cmp
ret
jle
lods
ds
imul
inc
mov
mov
jae
mov
dec
push
pop
loop
cmp
push
xchg
bound
lods
mov
pop
or
icebp
daa
scas
into
out
shll
dec
sub
xchg
dec
mov
lods
pop
lds
rorb
je
inc
cmp
mov
mov
dec
pop
rcrl
inc
adc
pusha
sub
adc
leave
xchg
push
adcb
imul
mov
ret
and
ja
insl
cwtl
cmp
adc
loope
mov
xchg
cmp
sbb
push
ja
je
scas
mov
cmp
push
cwtl
pop
mov
sahf
cmp
or
int3
clc
push
mov
fwait
and
fildll
scas
imull
lock
inc
sub
subb
in
mov
lcall
ljmp
adc
push
xchg
rcrb
pmuludq
lods
movl
mov
jecxz
pop
pop
mov
cmp
shll
mov
and
or
mov
jecxz
jg
xchg
xchg
mov
cltd
in
int
xchg
add
test
adc
nop
sti
push
jge
lret
lds
cli
and
cmp
inc
sub
popf
lods
idivl
mov
inc
test
sbb
cmc
stc
stc
jo
pop
pusha
bound
std
push
pop
sbb
insb
xchg
ret
lcall
xchg
pop
cmp
mov
stos
lahf
cmpb
repz
fisubs
xlat
mov
nop
adc
push
stos
daa
leave
inc
repz
ljmp
add
sub
push
mov
mov
fninit
imul
aam
mov
daa
adc
les
daa
movsb
cmp
fdivrs
aas
neg
mov
dec
mov
dec
push
cmpsl
mov
jbe
mov
mov
int3
xlat
add
icebp
add
ret
jno
fcomps
sbb
or
loopne
not
rolb
test
dec
mov
lret
xchg
leave
out
pop
and
mov
add
sbb
mov
insb
repnz
and
push
mov
js
sub
xchg
xchg
push
cwtl
mov
push
repz
and
sbb
add
fdivs
or
aam
or
mov
subb
inc
add
ljmp
mov
or
arpl
ret
mov
pusha
dec
pop
lret
dec
push
mov
mov
lds
push
sbb
sub
cld
aaa
pusha
loopne
imulw
pop
sbb
pop
mov
mov
jne
push
loop
or
repnz
addr16
in
dec
mov
mov
mov
sub
push
jbe
xchg
xchg
sub
sbb
or
stos
cli
out
lcall
scas
mov
movsl
jnp
mov
push
leave
or
cld
lret
jb
jnp
push
pushf
outsb
dec
enter
scas
fisubs
sahf
mov
cmp
idivl
cwtl
mov
inc
in
fwait
add
or
lret
jle
and
insl
xor
xchg
lret
orb
pop
mov
sub
fsubr
inc
inc
or
inc
fisubl
or
outsb
inc
cmpsb
jnp
or
or
mov
fiaddl
and
adc
jne
fs
hlt
daa
ficoml
jecxz
pusha
xor
fwait
out
dec
dec
fcmovnu
test
arpl
lret
inc
out
jo
cs
mov
xor
fcmovnbe
xchg
push
and
int3
cmc
shrb
neg
dec
bound
jnp
hlt
arpl
cmpsl
mov
jbe
repnz
mov
loope
pusha
popf
jg,pn
jge
mov
imul
push
inc
cmp
push
cmp
lods
js
add
sbb
adc
inc
or
out
insl
xorl
pop
shll
imul
cmp
pushf
shrb
adc
mov
adc
push
pushf
mov
and
cwtl
adcl
inc
fchs
sarl
jp
mov
test
pop
clc
sbb
jae
xchg
stos
scas
mov
fildll
mov
lcall
adc
mov
mov
mov
mov
into
pop
je
fisubs
lahf
adc
mov
add
sahf
cmp
adc
mov
dec
mov
pushf
dec
xchg
or
sbb
int
pop
ret
sub
inc
push
imul
mov
ret
stos
repz
js
js
pop
pop
notb
loopne
jnp
scas
xchg
ss
mov
xchg
xor
and
aaa
int
and
mov
je
std
jnp
and
adc
and
popa
sub
roll
mov
sbb
xor
add
cmp
bound
mov
mov
mov
out
ds
xchg
cmpl
iret
xchg
cmp
pop
xchg
sbb
out
sub
std
hlt
aad
sbb
xor
fwait
dec
repnz
mov
into
adc
jae
ljmp
pop
pop
jae
fsubrl
ja
rorl
lahf
int
sbbl
ror
clc
and
hlt
pop
sbb
sub
inc
mov
shll
sbb
fs
mov
inc
sbb
ss
push
out
shll
insl
inc
sahf
fcmovne
je
lahf
into
jmp
xor
rorb
out
mov
js
mov
xor
movsb
or
fisttpll
mov
shld
jno
jg
dec
pop
pop
mov
cmp
push
and
hlt
push
orb
jmp
add
pop
or
testl
inc
mov
add
call
shlb
mov
cld
mov
pop
xchg
jl
lds
out
cs
addr16
mov
das
in
and
rcl
jo
cmpsl
popa
ljmp
inc
je
rcl
or
sub
mov
xchg
mov
daa
add
fcoms
jp
jnp
aaa
testb
fwait
popf
push
out
out
outsb
aas
movsl
xchg
mov
cmp
fstps
loopne
lods
pop
loopne
je
cmp
bound
push
in
sti
arpl
xchg
inc
xor
out
mov
cltd
lret
xchg
pop
arpl
lods
aas
js
je
mov
pop
out
outsb
push
cld
sarl
mov
frstor
out
mov
xchg
fisubs
jo
jmp
das
or
and
out
jg
aam
sbbb
outsl
out
movsl
lret
cs
daa
jns
enter
mov
out
jae
call
mov
cmp
out
rcr
push
mov
xchg
mov
call
xchg
insb
ss
pop
push
jp
out
mov
movsb
popf
andb
mov
pop
scas
pop
aas
fnstenv
aad
sbb
pop
push
mov
mov
in
rorb
cwtl
iret
lret
cmp
pop
lret
outsl
nop
mov
lret
and
cmp
inc
adc
fidivrs
and
xor
test
adc
mov
push
add
push
repnz
stc
adc
pop
pop
inc
lods
jecxz
pop
mov
inc
rcll
mov
adc
bound
and
scas
div
or
pop
mov
push
out
loop
jno
loopne
mov
mov
and
and
jns
jmp
and
and
scas
inc
mov
outsl
sub
pop
xlat
outsb
add
pop
push
iret
xchg
mov
out
repnz
pop
lahf
loop
xor
pop
mov
out
dec
outsb
pop
aam
lds
cmp
mov
cwtl
xor
cli
loopnew
fcoml
out
push
and
or
ret
mov
inc
rep
mov
mov
cmpsb
outsl
enter
lret
dec
out
xchg
mov
mov
imul
inc
nop
sbb
cmpsb
iret
insb
mov
mov
ret
frstor
mov
es
push
lret
inc
roll
clc
pop
lret
xchg
call
mov
ficomps
cs
sti
cmpb
pop
xchg
ljmp
jnp
pop
imul
mov
pop
sub
mov
lret
fsts
jno
cmp
fsubs
fildll
sbb
cmp
adc
ja
rol
scas
hlt
mov
cmpsb
int
mov
or
iret
je
sahf
imul
dec
fsubrl
cmp
nop
fdiv
mov
fidivl
das
test
cwtl
lahf
fbld
sub
jne
cmp
push
sahf
pop
mov
cmpb
mov
and
imul
mov
pop
sbb
mov
sbb
scas
and
sbb
cmpsb
mov
rclb
icebp
in
xor
mov
inc
mov
arpl
sbb
sti
scas
je
pop
adcb
gs
xchg
out
notl
cmc
cmpsl
lods
mov
sbb
out
add
cmp
divl
mov
fucomi
jmp
fstp
push
in
cmp
mov
imull
xchg
lods
push
jmp
fdivrs
popf
hlt
andb
push
shlb
mov
xchg
add
lcall
mov
and
fbstp
lods
and
cltd
xchg
sub
adc
sub
cmpsl
dec
pop
pop
adc
inc
lahf
sbb
inc
cmc
or
push
mov
rolb
push
fcomip
lods
int3
and
ja
cmp
sub
adc
mov
xlat
or
mov
dec
clc
clc
mov
imul
lret
imul
cwtl
les
cmp
out
outsl
popa
rcrb
popf
sub
mull
add
in
bound
and
stos
pop
shll
xchg
xor
jecxz
mov
pop
cmpsl
mov
out
push
pop
xchg
and
sbb
cmp
aam
jae
aad
pop
nop
std
aam
mov
das
sub
sub
sbb
std
in
rolb
sti
sbb
jmp
mov
fisubrs
fisubrl
iret
out
xorl
pop
out
xchg
andl
add
shl
stos
xchg
clc
orb
aam
roll
out
bound
mull
daa
loope
and
xor
pop
xor
mov
adc
jae
je
imulb
xchg
mov
jle
jo
test
push
icebp
push
jmp
sbb
addr16
test
sub
out
cmpsl
ds
iret
rorl
repz
jne
or
lret
mov
adc
lods
sti
mov
pop
test
push
jl
mov
loope
sar
loop
cltd
mov
mov
cmp
cmpsl
ljmp
int
ret
sub
outsl
je
clc
mov
jmp
lea
iret
leave
cltd
mov
sbb
bound
in
nop
lea
dec
xchg
test
ret
leave
in
push
lret
mov
add
ds
scas
fnstcw
push
cmp
sti
jnp
dec
icebp
std
mov
dec
outsl
push
sbb
cmp
add
add
lret
xchg
mov
cs
popa
mov
push
dec
data16
fnstsw
jnp
lods
jle
stos
leave
lock
push
xchg
adc
pop
pop
mov
mov
mov
into
jle
or
rcrb
pop
cld
test
pop
call
xlat
mov
and
pop
in
jge
dec
jb
lahf
inc
jns
sub
testl
and
aad
outsl
jno
iret
pop
testb
mov
jns
negb
insl
push
jo
clc
insl
imul
push
ret
cmp
mov
mov
sub
scas
sti
ja
daa
addr16
cwtl
das
lock
lret
xor
shl
das
loope
dec
mov
or
xchg
popf
cmc
fstl
cli
cs
fdivrl
imulb
dec
xchg
sti
mov
stc
mov
push
cltd
cmc
or
popf
lret
pop
outsb
push
pop
cmp
mov
xor
mov
cmp
xor
mov
mov
aas
or
ss
mov
fistl
insb
dec
int3
dec
notb
popa
mov
push
out
shll
or
cli
mov
adc
mov
dec
mov
xlat
pop
add
cmp
xchg
mov
mov
adc
addr16
mov
mov
call
mov
sub
push
lret
pushf
ficoms
pop
shll
sub
mov
fistpl
and
dec
fidivs
lea
sbb
shrl
push
cmp
test
inc
shll
lret
ret
jge
lahf
cld
cs
jecxz
mov
fstpt
outsb
das
repz
iret
dec
dec
aam
sub
cmp
cmc
int3
mov
cmp
sbb
test
imul
xchg
or
mov
shlb
xchg
popa
sub
test
mov
dec
sub
inc
and
idivb
add
cmp
pusha
js
loop
popf
out
sarb
inc
cmc
xchg
xor
les
cmp
nop
push
mov
mov
adc
mov
ror
lds
push
pop
pop
hlt
fcmovnb
pop
mov
popf
sub
shrl
sub
aaa
pop
sub
xchg
push
mov
dec
xchg
xlat
je
jl
mov
test
test
out
xchg
repz
cmp
mov
fstp
and
dec
int
lret
test
push
cmc
add
cli
mov
xlat
sbb
push
mov
mov
notl
or
jb
push
imull
fistpll
push
or
adcb
push
repz
mov
dec
add
psrlq
xchg
mov
outsl
cli
cwtl
push
aas
stc
lods
out
mov
lea
fistpll
push
add
inc
lret
mov
cmpsl
or
adc
mov
xchg
addr16
scas
movsl
pop
mov
daa
or
mov
mov
xchg
fidivs
pop
pop
xor
mov
call
xor
mov
xchg
stc
add
loope
lret
push
mov
xchg
lods
jl
xor
popa
out
ret
insb
jl
aam
cmp
inc
sti
data16
cltd
ja
scas
jb
cs
jo
out
xchg
inc
in
mov
ja
fldt
fadds
ds
adcb
or
idivl
fdivrl
mov
aaa
push
xor
xchg
pop
jb
jle
or
adc
js
jmp
enter
mov
je
mov
fnstenv
jmp
push
and
shr
dec
lcall
push
pop
int
sub
fnstenv
mov
mov
mov
cmp
mov
pushf
dec
cwtl
inc
pop
xchg
push
aas
xlat
pop
je
jo
ds
xor
or
cmp
test
jae
ret
and
enter
cltd
mov
or
sbb
pop
pop
stos
daa
mov
clc
adc
insl
int3
xor
add
jbe
fsubr
adc
sbb
cwtl
mov
into
rcll
sahf
sub
movb
jb
jbe
test
pop
out
adc
mov
fsubrl
add
sbbl
aas
ficoms
rcll
push
loop
cmc
sahf
daa
jns
mov
sbb
xchg
hlt
outsb
subl
xor
jns
ss
jl
leave
sahf
xchg
rclb
jmp
aam
jbe
loopne
clc
outsl
addr16
mov
mov
sbb
repnz
xchg
cltd
xchg
inc
cmp
and
pusha
jmp
bound
xchg
xor
mov
std
fisubrs
into
xor
sar
stos
mov
pop
or
adc
and
mov
pop
mov
adc
pop
shll
pop
lahf
mov
sbb
stos
stos
daa
jecxz
ljmp
pop
mov
cmpb
mov
xor
inc
xchg
mov
inc
inc
icebp
inc
dec
pop
mov
jmp
pop
gs
inc
cmp
inc
loopne
mov
pushf
cmp
mov
loopne
iret
push
push
addb
push
addr16
dec
popf
mov
inc
in
mov
cwtl
xchg
push
push
dec
pop
adcb
xor
lea
cmp
jl
jb
jg
out
push
pop
int
pusha
aas
scas
jno
mov
push
outsb
test
jbe
cltd
in
dec
mov
mov
sub
mov
jb
lcall
imul
mov
mov
push
scas
sub
xchg
punpcklwd
jns
fs
lcall
or
mov
jg
jl
xor
imull
addr16
xor
pop
imul
jmp
aad
and
outsb
les
movsl
mov
sub
gs
sub
movsl
adc
adc
cmp
pop
push
ret
mov
lret
mov
push
pusha
in
jnp
or
mov
mov
xchg
aaa
daa
mov
das
pop
cld
mov
dec
xchg
dec
sahf
xchg
mov
scas
pop
xchg
push
les
movsl
repz
pop
lret
pop
mov
pop
push
pop
cmp
out
lret
jmp
sbb
test
pop
xchg
lods
andb
pop
ljmp
repz
mov
mov
ja
lahf
mov
test
loop
sbb
arpl
xchg
js
mov
roll
aas
push
jno
xchg
fdivs
inc
xchg
sub
xchg
cwtl
ficoms
bound
das
pop
lods
mov
cmp
loop
pop
push
xor
enter
fwait
cltd
leave
movsl
shlb
ja
pop
mov
stos
dec
nop
push
mov
xchg
add
pop
ss
lahf
sbb
sahf
fildl
sarb
lahf
cmp
andl
xchg
pop
popa
xchg
sti
hlt
inc
ret
roll
inc
push
add
xchg
sub
hlt
dec
pop
cmc
stos
mov
test
adc
aas
cmp
rclb
inc
dec
pop
xlat
mov
or
inc
js
cmp
jl
dec
push
sub
inc
add
jp
jmp
push
push
pop
fdivrs
rcrb
push
clc
iret
into
cmp
movsl
mov
and
or
and
mov
or
es
fsubs
cmc
and
cmp
xchg
push
clc
and
lds
addr16
movsb
jne
mov
aas
pop
mov
pop
movsb
xor
cld
movsl
stos
test
shlb
scas
inc
repz
xor
notl
movsl
pop
clc
mov
xchg
inc
pop
pop
jns
sub
jno
mov
loope
inc
adc
push
fisubrs
popa
pop
stc
out
out
clc
sbb
push
mull
jne
inc
dec
idivb
jmp
sahf
or
aaa
stc
out
and
add
push
bound
pop
rcrl
dec
inc
jno
push
lea
pop
dec
aaa
in
pusha
rolb
aaa
shlb
sbb
fld
add
jae
pop
dec
inc
repz
iret
pop
mov
sub
xchg
popa
cli
push
ljmp
fwait
pop
inc
push
inc
mov
pop
ds
xor
bound
or
mov
cmp
sub
and
bound
mov
pop
aam
or
or
outsl
nop
inc
mov
xor
inc
and
repz
sar
fs
test
xor
and
out
dec
xor
fwait
popa
pop
fucomp
push
lret
xor
sub
lods
mov
fists
dec
shrl
mov
jp
aaa
cmp
popa
xchg
mov
mov
push
out
xchg
sub
mov
add
je
test
addr16
bsf
sub
and
out
pop
mov
mov
xor
push
aas
addb
fs
enter
push
dec
sahf
call
push
lock
cmp
aaa
fcoml
mov
dec
rclb
xchg
leave
and
aas
mov
sti
popf
sub
xchg
ret
dec
mov
mov
jecxz
xlat
inc
inc
loopne
repnz
xor
fcoms
xchg
fcoms
pop
inc
xor
mul
sbb
ds
add
dec
mov
mov
mov
xor
mov
sub
xlat
xchg
subl
xchg
cmp
inc
pop
cli
fsubrs
jecxz
add
out
cmp
mov
xchg
test
mov
dec
mov
inc
pop
mov
popa
pop
outsb
ja
loopne
inc
jnp
jl
aas
pop
inc
pop
jmp
pop
bound
repz
cmpsb
or
jo
xor
push
pop
in
insl
pop
test
pop
shll
aas
idivl
bound
xchg
or
mov
sub
mov
fdivrs
dec
mov
sub
test
or
jne
push
cld
int3
sti
pop
dec
pop
push
and
pop
lcall
lcall
xchg
sarl
adc
xchg
stos
dec
shll
mov
pop
inc
fcomps
dec
pop
xor
stos
sub
sub
jmp
adc
mov
inc
outsb
int
pop
ficoml
rcrl
xchg
dec
fs
jg
lods
popa
push
push
sbb
cmp
jnp
fwait
jg
xchg
stc
push
inc
and
xor
sub
push
cmp
sub
add
jns
nop
insb
inc
js
pop
lods
push
gs
imul
inc
push
mov
xor
push
xchg
xchg
in
pusha
sbb
sbbb
pop
pop
inc
repnz
insb
mov
sub
mov
push
icebp
mov
jnp
imul
daa
xchg
icebp
aas
mov
test
in
lea
hlt
fadds
int
and
sbb
lods
lret
hlt
ja
movsl
sub
aam
rcll
and
push
pop
js
clc
pop
push
loopne
xchg
mov
sti
stos
repz
test
std
pop
repnz
mov
aad
pop
and
mov
dec
cmp
mov
ljmp
notb
adc
xchg
mov
mov
dec
cmp
fcmovnbe
addb
subb
push
enter
ds
cmc
mov
outsb
je
out
lahf
es
sahf
or
xchg
jb
and
xchg
jo
dec
fdivs
and
jecxz
pop
call
aam
leave
pop
insl
dec
mov
dec
inc
dec
mov
fstpl
push
mov
sub
xchg
pop
push
mov
dec
fsubs
pop
cs
cwtl
pop
push
mov
inc
mov
or
test
and
pop
and
addr16
sub
pop
push
jb
pop
fldl
cmp
std
ss
notl
enter
push
inc
xchg
mov
andl
sub
lcall
je
clc
xchg
sahf
xchg
insb
jecxz
or
sub
inc
jge
inc
jge
jns
pop
jmp
cmp
ficoms
mov
push
xor
imul
mov
push
hlt
mov
inc
sub
push
subl
cmpsl
add
pushf
jp
xor
inc
inc
cli
pop
inc
mov
mov
pop
outsl
adc
aas
and
cmp
stos
dec
inc
pop
dec
fistpl
mov
daa
jge
lcall
pop
lcall
shl
in
pop
gs
push
pop
mov
and
mov
aam
lds
test
xor
adc
inc
stos
subb
ror
inc
shrb
repz
sbb
add
xchg
mov
dec
xor
mov
adc
loope
or
mov
sahf
mov
cltd
in
jl
inc
test
sahf
mov
inc
cmp
and
subb
push
jl
ja
pop
add
jne
inc
aam
inc
sti
out
jbe
and
popa
pop
mov
sbb
xchg
repz
sub
lds
shll
sub
xchg
xchg
hlt
ljmp
mov
lods
jnp
lock
xchg
fcomp
mov
das
pusha
pop
cs
pop
pop
and
sub
and
pop
js
lret
pop
jae
add
jl
repz
pop
in
mov
cmp
lea
mov
dec
popa
sbbl
mov
pop
add
rolb
dec
mov
add
fdivrp
test
cmp
mov
pop
push
pop
adcl
mov
repnz
mov
cli
lods
mov
add
mov
js
adc
and
and
cld
lea
sbb
pusha
mov
mov
xlat
ljmp
and
shr
aas
stos
lods
pop
stc
pop
jbe
lock
inc
adc
dec
cld
scas
jp
pop
and
xchg
lock
cmp
mov
xchg
xchg
enter
sbb
xor
pop
dec
bound
in
inc
aas
xchg
enter
ja
aaa
and
jnp
daa
push
repnz
push
add
aas
and
xor
jno
push
mov
sbb
sahf
mov
xor
mov
mov
adc
test
mov
sahf
xor
xchg
stos
and
adc
and
mov
sahf
ret
mov
or
dec
and
test
outsb
pop
or
jmp
push
inc
lock
fwait
dec
outsl
into
fisttpl
pop
sbb
mov
jp
xor
inc
hlt
stos
ss
cli
add
into
push
jae
mov
pop
sbb
movsb
push
int3
movsl
scas
arpl
addr16
out
mov
int
inc
sub
rclb
sbb
out
pushf
pop
stos
mov
ljmp
ja
lock
fisubrl
inc
popa
xor
sti
pop
jl
fstpt
scas
pop
push
inc
sub
mov
xbegin
xor
add
sbb
xlat
xchg
and
mov
mov
inc
or
add
dec
jne
adc
xchg
fwait
mov
mov
je
add
daa
mov
adc
pop
sarb
rclb
xchg
jae
or
or
mov
or
push
cmpsb
xor
fs
xor
pop
in
mov
mov
sub
roll
rorl
pop
scas
xchg
pop
adc
xchg
scas
pop
and
or
xchg
cmp
sahf
pop
les
cmp
test
pop
dec
cmp
cmp
lock
fs
mov
shrb
dec
arpl
pop
je
stos
add
ss
mov
pop
cwtl
je
jmp
xorl
stc
inc
xchg
ror
mov
push
jne
push
movsl
push
bound
popa
loope
test
das
test
leave
adc
inc
xor
xchg
test
add
push
pushf
inc
jnp
repz
mov
pop
adcl
jnp
icebp
fildll
push
pushf
mov
ret
pop
add
xchg
dec
rcrb
pop
jmp
xor
lods
push
mov
xchg
and
mov
jo
pop
add
int
js
pop
in
arpl
push
and
cmp
inc
jno
cld
cmp
and
sbbb
push
inc
cmpl
mov
inc
pop
jmp
enter
mov
push
mov
inc
repnz
out
push
push
lods
rcl
pop
je
pop
imul
lea
test
pop
dec
repnz
pop
jge
or
mov
fidivrl
scas
jae
mov
pop
jae
out
jbe
jg
xor
test
in
mov
jmp
pop
xor
pushl
sbb
lahf
sbb
mov
dec
pop
lahf
enter
mov
push
xchg
xorl
aam
dec
mov
xchg
xlat
test
iret
adcl
cmp
dec
repz
mov
pop
rorl
data16
test
je
pop
leave
jge
mov
push
mov
pop
mov
pop
cmc
popf
mov
inc
xchg
push
icebp
sbb
mov
dec
dec
add
dec
pushf
xchg
mov
cld
popf
dec
dec
cmp
push
pusha
mov
cs
mov
add
outsl
push
mov
out
dec
jle
aas
aaa
xchg
jmp
push
fwait
mov
popf
inc
xor
xor
mov
mov
rcrb
cmp
inc
loope
mov
dec
mov
aaa
mov
add
cmpl
arpl
dec
shl
mov
mov
xchg
out
or
cmc
jb
add
pop
mov
cli
jae
xchg
std
add
dec
inc
push
les
or
mov
fsubr
cmc
repz
mov
pop
ljmp
xor
mov
pushf
into
dec
cwtl
mov
pop
push
jbe
cmp
push
inc
dec
pop
sti
aas
in
negl
xor
jnp
lods
mov
sbb
pop
popf
and
sarb
aaa
fisubrs
lahf
pop
popa
popa
and
sbb
dec
pop
mov
popf
mov
loopne
fildll
dec
cli
sti
fabs
fldl
out
cs
pop
sarb
mov
dec
jl
into
push
push
hlt
out
xor
xchg
jl
data16
cmp
jmp
add
hlt
pop
jns
dec
enter
lods
lahf
jns
mov
push
outsl
sub
lahf
movsb
adc
or
mov
cmc
jae
sub
mov
mov
jnp
mov
inc
xchg
xor
push
lahf
fadds
xchg
in
jle
fwait
rorl
in
js
adc
xchg
mov
out
lret
setae
mov
pop
pop
call
and
dec
pop
push
pop
inc
cli
stos
jle
stos
gs
jnp
xor
mov
fsubl
adc
lods
pop
dec
adc
jno
clc
xchg
ss
xchg
add
jge
inc
dec
mov
fs
popa
cwtl
pop
lods
and
aad
arpl
xlat
in
pop
std
fistpll
rol
mov
mov
add
pop
or
mov
outsl
xor
add
and
pop
pop
pop
jns
icebp
xchg
xor
jno
inc
xchg
lcall
inc
adc
xchg
sbb
jl
inc
add
pop
testb
mov
lods
loope
pushf
sahf
mov
xchg
loop
sarb
mov
push
mov
jb
js
inc
and
out
mov
jge
xlat
scas
dec
sbb
mov
bound
aaa
jmp
ss
pop
subb
push
jno
in
pop
jle
xor
pop
scas
fstpt
and
xchg
in
jl
or
daa
jge
dec
xor
aas
lds
mov
dec
shrb
pop
push
xchg
scas
and
adc
in
mov
popw
test
pop
add
popa
push
aaa
add
movsl
sub
lock
je
xor
test
subps
lods
mov
cmp
aaa
ja
adcb
fmul
pop
jnp
out
push
pusha
adc
bound
pusha
aam
jmp
pop
push
add
cwtl
ds
pusha
aas
cmc
push
adc
pop
sbb
orl
pop
and
shlb
add
imul
stos
pop
sahf
pushf
or
push
adc
sahf
mov
add
pop
xor
pop
call
add
aaa
inc
or
in
inc
jne
repnz
pop
jo
fs
dec
rclb
aam
insb
push
lcall
add
pop
jnp
jno
test
pop
adc
pop
in
push
push
fstl
add
mov
inc
pop
pop
out
add
popa
icebp
stc
dec
inc
sarb
call
mov
cmp
adc
rclb
pop
jg
lahf
xorl
add
push
sub
cmp
fs
mov
inc
js
pop
sahf
mov
mov
fwait
stos
popf
gs
pop
or
xchg
adc
jge
pop
push
mov
add
jae
mov
inc
enter
xchg
mov
call
loope
loopne
push
es
sbb
or
in
mov
xor
add
icebp
sub
sahf
cmp
subl
popf
sbb
jo
addr16
out
cwtl
mov
ret
sbb
pop
pop
pop
fidivrs
or
push
mov
insl
mov
es
push
dec
dec
or
push
lret
dec
arpl
or
fsubrs
add
shrb
ret
mov
aas
mov
dec
idivb
imulb
leave
mov
sbb
enter
int
inc
cli
rclb
cmp
push
aas
jne
cmp
iret
jmp
sahf
ljmp
pop
int3
mov
push
popf
lcall
cmp
mov
js
mov
xor
fwait
cmpsb
pop
jbe
sahf
testl
xor
aam
push
xlat
and
outsl
mov
inc
popa
popa
loop
add
pop
aaa
popa
mov
adc
aas
adc
jbe
test
orl
push
aas
ja
loop
mov
bound
leave
mov
jne
pop
pop
les
push
inc
adc
in
popf
fdivr
xchg
shll
cmpsl
xor
ljmp
mov
add
test
loop
loopne
pop
mov
xor
mov
and
adc
jbe
mov
js
mov
loopne
js
mov
frstor
stc
mov
sahf
lock
fisubs
shll
mull
xchg
hlt
ds
inc
xchg
jmp
mov
arpl
out
pop
sbb
mov
cltd
pop
sahf
sar
and
lods
stos
mov
inc
addb
xchg
pop
stos
mov
stc
cmp
jb
mov
imul
adc
pop
pop
lea
adc
or
dec
je
or
sbbb
xchg
stc
lods
dec
add
sti
mov
dec
xchg
mov
test
nopl
aaa
pop
xor
lahf
mov
cld
xor
inc
jg
pop
addr16
repnz
popa
xchg
cmp
inc
sbb
enter
lds
xchg
pop
nop
xlat
aas
aam
movsb
mov
mov
loopne
dec
or
hlt
and
and
xchg
inc
lock
xchg
pop
cmp
mov
sub
mov
and
negl
dec
push
pop
sbb
pop
push
add
mulb
xchg
xor
pop
mov
orb
pop
lcall
nop
negl
xchg
rcrl
pop
cmp
addb
xchg
inc
xchg
sbb
adc
xchg
adc
xchg
and
jo
dec
aas
cmc
sbb
mov
push
cmpsl
fwait
and
mov
jae
mov
push
pop
pop
sub
lods
test
or
pop
inc
sbb
les
sub
pop
push
dec
push
fwait
lcall
aaa
lcall
cltd
fisubrs
add
int
popf
dec
sub
aas
add
sarb
lret
mov
js
icebp
lcall
xchg
pop
int
repz
pop
fistpl
cmp
call
repz
sahf
icebp
shrb
and
cs
dec
in
lret
jl
adc
call
sbb
or
mov
xor
dec
pop
aas
shll
mov
gs
mov
roll
clc
fstps
sti
pushf
dec
jnp
icebp
dec
xchg
sub
jb
mov
ficoms
cwtl
push
dec
pop
push
jg
jge
scas
pop
and
das
dec
inc
xchg
ds
hlt
cmc
xlat
mov
jns
xchg
pop
sub
push
addr16
in
sub
pop
jge
lods
mov
sarl
test
push
mov
movsl
leave
aam
lods
out
sub
ja
push
pop
pop
in
mov
push
fiaddl
pop
jp
adc
int3
sub
subl
push
lret
cltd
adc
mov
push
mov
outsb
fstpt
jg
sbb
aaa
ljmp
dec
out
sub
outsl
push
jns
xor
mov
aad
addr16
lret
push
push
addr16
aam
aad
pusha
xchg
push
fcoml
movsl
pop
mov
out
adc
lea
daa
pop
push
inc
insb
pop
popa
js
in
mov
jge
pop
dec
dec
je
cmpsl
pop
sbb
aad
add
inc
jg
pop
divl
sub
jne
orb
shll
xor
inc
loope
orl
arpl
jno
adc
in
jae
mov
and
pop
cli
js
jnp
leave
xor
call
hlt
je
sbb
sbb
lock
outsl
hlt
mov
xchg
ja
insb
ret
adc
test
in
jl
faddl
pop
divl
inc
or
in
jno
mov
xchg
add
pop
mov
mov
nop
jp
arpl
mov
pop
icebp
lea
dec
pop
xor
cltd
loop
insl
jno
and
mov
shl
push
shlb
loopne
xchg
sub
pop
mov
into
adc
xchg
mov
fisubl
in
lods
jmp
mov
inc
fs
cld
dec
cmp
mov
mov
sbb
rorb
cmc
push
stos
xlat
xor
test
pop
mov
pop
sub
test
adc
and
sbb
and
popf
leave
out
ljmp
or
clc
ds
popa
test
mov
mov
hlt
shl
lock
ret
hlt
sbb
fisubl
and
fadds
lds
adc
scas
iret
mov
inc
pop
shrl
mov
dec
fstpl
mov
dec
and
fcomip
ds
xchg
and
into
mov
js
out
enter
jge
xorb
test
aas
xchg
repz
arpl
inc
pop
stos
add
and
pop
aam
pop
push
lods
pop
mov
cli
imul
lret
stos
aam
inc
cltd
cli
repz
or
pushf
inc
xchg
pushf
js
pop
shll
mov
push
sarl
push
aas
fiadds
fsubrs
popf
sub
divb
jno
mov
mov
fmuls
push
lcall
aas
dec
jp
test
adc
jno
int
jl
pop
mov
push
pusha
cs
pop
outsl
sbb
arpl
mov
add
sub
jbe
xor
sbb
jnp
xchg
les
xor
or
xor
cs
out
lods
movsl
mov
jae
push
shll
dec
pop
jae
js
or
and
rcrb
xchg
lods
push
das
stos
mov
push
aam
or
or
stos
ss
popf
sbb
inc
pop
add
bound
cltd
popf
mov
mov
test
iret
xor
sub
inc
pop
rcrb
push
out
test
dec
ja
enter
pushf
cmc
xchg
dec
daa
bound
mov
popf
mov
add
xchg
int
mull
popf
outsl
popf
pop
sarb
mov
dec
subb
inc
xor
sub
add
ss
outsb
pop
mov
pop
jns
lret
pop
push
out
push
pushf
jp,pt
je
and
movsl
popf
cmp
and
fwait
inc
outsl
jnp
and
and
pop
cmp
repz
sbb
int
jae
ds
js
ret
movsb
data16
mov
dec
pop
andl
int
jnp
lret
rcl
cmpsb
cmpsl
push
dec
les
push
mov
inc
addr16
inc
jmp
loop
push
in
sbb
push
test
jge
dec
sarl
sub
or
hlt
ret
jnp
push
lods
mov
movsb
in
es
pop
add
add
daa
adc
in
fs
in
js
jnp
cld
lods
fcoml
cmp
xor
decl
jb
inc
imul
or
dec
inc
add
jno
xchg
cmpl
push
or
std
sbb
or
jbe
push
pop
pop
loope
inc
mov
stos
add
fbld
stos
cmp
js
iret
cmp
xor
lds
popl
or
lods
lods
dec
je
xchg
rolb
pushf
iret
and
aad
inc
ror
iret
es
adc
cmp
sub
xchg
lret
mov
js
mov
or
shrb
sbb
popf
inc
mov
adc
and
mov
and
movsl
dec
xor
inc
xchg
sbb
jae
les
movsl
mov
push
or
push
cmp
pop
fwait
cmp
fbstp
push
or
lods
mov
mov
xchg
shl
lar
shll
jbe
dec
sahf
call
xor
inc
cwtl
xchg
sub
enter
pop
mov
andb
in
xor
sti
lahf
stc
mov
jl
js
movsb
mov
loopne
popf
and
hlt
push
pop
std
pop
cli
pop
pop
push
ret
les
add
int3
dec
or
mov
repz
xchg
mov
ret
movsl
jnp
std
loopne
push
mov
xor
xor
movsb
inc
negb
aas
popw
mov
andl
outsl
in
in
enter
cmp
jp
fwait
or
cmpsb
add
pop
out
popa
mov
insl
cmc
add
xchg
sbbb
xchg
mov
enter
sub
je
jo
sub
repnz
stos
mov
jo
ss
sub
fidivs
inc
pop
inc
cs
mov
jb
fwait
out
insb
add
xchg
inc
sub
nop
ja
mov
stc
dec
cmp
test
fstps
sbb
xor
pop
mov
cmpsl
jae
lods
lahf
push
lea
addr16
lock
aaa
insl
loopne
xchg
lods
rorb
ret
inc
stos
and
pop
repz
and
add
rcrl
push
mov
push
cmp
pushf
inc
inc
enter
mov
push
jmp
cwtl
pop
mov
int3
sti
push
cmp
in
scas
pop
inc
push
lcall
xchg
mov
fisttps
mov
insb
insb
or
or
xor
hlt
call
addr16
lock
cmp
xchg
sahf
daa
cmp
mov
aas
and
pop
insl
nop
cwtl
addl
mov
cmp
push
cltd
ret
enter
mov
ja
mov
dec
sbb
or
jb
cmp
sahf
or
sahf
jmp
cwtl
scas
mov
pushf
sub
lret
ret
fstpt
pop
stos
xchg
pusha
lret
xlat
adc
xlat
adc
inc
dec
cmp
mov
aas
sub
sbb
mov
inc
stos
and
pop
repz
and
iret
jp
rcrl
push
mov
cli
ret
aaa
fcomps
insl
mov
push
jmp
cwtl
bound
call
push
lcall
xor
lret
jo
pop
ffreep
mov
mov
xor
xor
xlat
and
push
pop
cmp
sub
mov
cmp
xor
repz
add
pop
rcll
xlat
std
sbb
xor
and
jnp
lods
lahf
dec
lea
pop
inc
or
sub
jns
in
xchg
lcall
repz
and
add
rcrb
pop
cwtl
mov
cmp
push
cmpsl
ret
mov
ja
mov
lret
insl
sbb
call
inc
xchg
lret
les
repz
add
pop
rcll
xlat
std
sbb
cmp
ss
test
dec
lea
pop
inc
or
cwtl
in
mov
jns
pop
jmp
cmp
sti
movsb
xlat
leave
sbb
push
mov
push
cmp
lahf
lahf
enter
mov
dec
cwtl
cmc
inc
pop
jmp
cwtl
push
aad
jp
in
repnz
call
inc
mov
pushf
cwtl
into
mov
push
js
mov
jns
push
fwait
xchg
mov
ja
xlat
inc
sbb
cld
mov
jb
cmp
sub
mov
xor
iret
ret
fstpt
pop
stos
xchg
pusha
lret
xlat
adc
or
xor
sbb
dec
push
cmp
mov
xor
scas
inc
sahf
push
and
jns
lret
cmp
cwtl
jne
out
push
cwtl
mulb
xor
push
cmpsl
ret
mov
ja
movsb
push
adcl
imul
inc
inc
mov
insl
xor
cwtl
popf
inc
ret
cwtl
shlb
push
fs
pop
fsubrs
outsl
xchg
mov
push
sbb
int3
mov
orb
into
popf
cwtl
leave
inc
stos
jmp
cwtl
mov
jl
pop
stos
ret
ret
js
push
lahf
xchg
enter
xlat
inc
sbb
add
jle
cmp
mov
lcall
xor
lret
jo
pop
ffreep
mov
mov
inc
xlat
and
xlat
sbb
inc
in
in
xchg
push
pop
cmp
aaa
loopne
inc
sbb
mov
repz
and
add
rcrb
dec
cwtl
repnz
cmp
push
cmpsl
ret
mov
jae
movsb
push
dec
xchg
sbb
addr16
jno
fnsave
or
scas
xchg
adc
mov
insl
xor
cwtl
test
cwtl
fisubl
pusha
push
test
outsl
xchg
mov
dec
sbb
or
jle
cmp
das
or
xor
lret
ret
fstpt
pop
mov
pusha
lret
xlat
sbb
xlat
and
push
pop
cmp
aaa
loopne
inc
cmp
mov
lcall
sub
fists
xlat
stc
sbb
inc
mov
ss
lods
lahf
push
lea
arpl
scas
xor
adcl
insl
xor
cwtl
popf
inc
ret
cwtl
shlb
pop
pusha
pop
mov
les
mov
sbb
mov
push
cmp
pushf
or
xchg
mov
mov
pop
pop
ret
nop
stos
xlat
js
pop
out
jo
mov
xlat
add
xlat
inc
mov
xor
lods
lahf
dec
lea
pop
inc
or
aaa
insl
in
xchg
lods
mov
adc
dec
stos
out
js
pop
sti
xchg
sub
lret
je
in
push
xor
xlat
pop
mov
adc
lea
push
insl
add
roll
jmp
xchg
adcb
mov
insl
xor
cwtl
popf
inc
into
jmp
cwtl
fisubs
push
fs
ret
ret
xchg
jns
push
outsl
xchg
mov
dec
sbb
sarb
orb
mov
imul
lea
mov
insb
js
cwtl
imul
mov
ret
movsb
test
pop
xchg
or
aaa
loope
test
lods
mov
pop
inc
inc
mov
insb
cmp
jmp
cwtl
fisubl
pusha
push
test
outsl
xchg
mov
push
sbb
aam
jns
jo
xchg
cwtl
leave
inc
scas
jmp
cwtl
mov
lret
js
pop
out
jo
mov
fs
ret
xchg
aam
xchg
cmp
xor
xlat
sub
pop
addr16
lahf
aaa
loopne
inc
sub
cmp
mov
xor
repz
pop
iret
xchg
cwtl
lret
xlat
in
sbb
push
xchg
push
cmpsl
cmp
aad
inc
adc
cwtl
roll
jmp
xchg
xchg
and
pop
sbb
nop
pop
xlat
ret
out
jo
mov
pusha
lret
xlat
adc
xlat
adc
inc
dec
cmp
mov
aaa
inc
loopne
inc
xchg
push
xor
mov
pop
out
ret
js
pop
lret
xchg
pushf
lret
xlat
jmp
xlat
xor
outsl
cmp
aad
inc
sbb
pop
insl
or
cwtl
aad
jp
in
mov
negb
pushf
cwtl
ret
xor
lret
jl
pop
stos
ret
js
push
xchg
xchg
ror
adc
xor
clc
mov
outsb
aaa
cmp
lahf
inc
xchg
push
xor
xlat
les
lret
aaa
pushf
mov
stos
aas
jl
mov
inc
inc
es
cwtl
mov
lock
pop
pop
ret
or
aas
xchg
in
mov
subl
xchg
xlat
mov
xlat
je
fldln2
test
ret
mov
aad
inc
int3
scas
imul
cwtl
icebp
inc
push
jmp
cwtl
data16
loopne
sbb
mov
xchg
mov
xlat
mov
mov
insb
pusha
push
cwtl
sub
cwtl
mov
and
pop
pop
ret
or
inc
rcll
xchg
cmpsb
out
aaa
cmp
iret
aas
cwtl
mov
insb
mov
cwtl
pop
inc
jmp
cwtl
push
mov
dec
mov
ja
mov
pop
pop
xchg
or
sub
jns
in
mov
pop
sbb
mov
insb
cmp
cwtl
movsl
inc
jmp
cwtl
out
dec
xor
lret
pop
rclb
xchg
ret
shrb
xchg
movsb
leave
sub
push
sbb
aam
test
shll
nop
mov
iret
aaa
cwtl
mov
stos
aas
jl
mov
xor
cwtl
ss
pop
push
ret
add
xor
nop
cmp
cmp
jmp
and
pop
inc
nop
mov
insb
and
dec
inc
bnd
cwtl
add
cmp
push
ja
mov
pop
push
xchg
add
arpl
jge
jmp
out
xchg
sbb
pop
jmp
cmp
sti
jo
aad
xorl
in
fs
or
lea
scas
dec
insl
sbb
cwtl
add
xchg
jp
in
mov
mov
in
out
push
subl
sarl
sbb
pop
mov
push
cmpsl
cmp
dec
inc
sbb
cwtl
flds
jmp
mov
mov
xchg
sbb
iret
insb
cwtl
ficomps
pusha
cwtl
push
mov
inc
int3
push
imul
mov
xchg
adc
push
add
gs
fdivrl
jbe
xchg
xchg
stc
mov
sarl
test
cwtl
imul
mov
sbb
stos
push
jns
pop
addr16
lock
xor
fmuls
test
dec
mov
insb
cmp
jmp
cwtl
out
push
xor
lret
pop
rclb
xchg
ret
shrb
xchg
mov
push
sbb
aam
jns
in
xchg
xchg
xchg
inc
int3
loop
xchg
pushl
sub
fstpt
mov
cwtl
gs
or
xor
sbb
adc
push
add
stos
pop
jns
pop
das
xchg
clc
leave
aas
jmp
pop
mov
jmp
cmp
pop
insl
nop
rcrb
dec
cwtl
repnz
cmp
push
mov
jns
push
dec
xchg
sbb
pop
or
insl
sbb
call
add
call
lea
jecxz
je
cwtl
imul
mov
and
stos
pop
jns
pop
das
xchg
clc
leave
aas
jmp
pop
pop
inc
dec
mov
insb
cmp
jmp
cwtl
fisubs
pop
pusha
pop
ret
ret
xchg
jns
push
imul
dec
sbb
add
jne
fcoml
xchg
cwtl
mov
cwtl
mov
lret
je
pop
jecxz
je
mov
fs
ret
xchg
aam
lahf
dec
xlat
sub
lock
sub
cld
lahf
cmp
lret
xor
ljmp
cwtl
jne
push
cwtl
repnz
sub
push
cmpsl
ret
mov
ja
movsb
inc
dec
cmc
gs
call
cwtl
inc
int3
aas
push
scas
in
cwtl
xchg
mov
xlat
mov
mov
insb
push
push
jmp
cwtl
mov
and
pop
push
ret
add
arpl
push
aas
xchg
call
scas
inc
mov
push
mov
fbstp
mov
aas
shrb
cwtl
or
cwtl
dec
mov
or
push
aaa
ret
loopne
inc
outsl
push
push
xor
push
mov
lret
pushf
sub
lret
ret
out
jo
mov
fs
xlat
adc
sbb
dec
push
cmp
mov
aaa
inc
loopne
inc
adc
aaa
inc
je
and
pop
sti
xchg
sub
lret
je
fstps
push
mov
adc
lea
cwtl
cmc
inc
data16
xchg
jbe
loope
xchg
lods
adc
adc
xor
xlat
test
leave
in
je
aaa
je
mov
push
scas
lahf
insl
int3
sub
lock
push
mov
shl
push
cmp
in
scas
or
push
sahf
xlat
enter
cwtl
xchg
mov
rorl
mov
insb
push
push
jmp
cwtl
mov
and
pop
push
ret
or
aas
xchg
call
xchg
daa
cmp
mov
add
mov
insb
test
cwtl
dec
inc
bnd
cwtl
add
cmp
push
imul
test
push
xchg
add
das
jns
in
mov
negl
dec
xchg
xchg
mov
andb
aas
jl
mov
dec
inc
cs
cwtl
mov
lock
addr16
hlt
test
pop
clc
ds
nop
mov
fistpll
mov
cwtl
gs
push
jmp
cwtl
push
mov
adc
push
dec
ret
adc
push
jns
pop
das
xchg
cld
leave
aas
fst
test
lods
sbb
insb
repnz
fldcw
jo
mov
pusha
mov
insl
enter
inc
inc
jmp
xchg
pop
mov
sar
push
aas
ret
in
scas
pop
cli
push
xchg
xlat
sarb
divl
cmp
pop
lea
iret
aas
xchg
mov
insb
test
cwtl
pop
inc
bnd
cwtl
or
sbb
push
jns
pop
arpl
cmp
insl
dec
mov
jmp
cwtl
lret
xor
lret
pop
fs
mov
mov
imul
sahf
aad
mov
jecxz
pop
lds
sbb
add
sub
stos
test
xor
mov
mov
rolb
inc
push
and
push
push
mov
jnp
adcl
addr16
xchg
shl
inc
jmp
dec
sub
ja
in
fcmovb
mov
add
cld
dec
mov
fistl
inc
fisttps
orl
icebp
shlb
mov
in
pop
inc
jbe
pop
outsl
jo
mov
outsb
test
jp
pop
cli
jne
out
fidivl
mov
xorb
dec
lret
outsl
test
pop
mov
frstor
ret
sbb
repz
inc
scas
arpl
jae
sub
mov
xchg
add
mov
cld
inc
and
jae
mov
jne
scas
push
arpl
pop
mov
jle
jo
leave
dec
rorb
inc
jge
enter
xor
aas
xor
out
mov
mov
mov
adc
cld
ss
mov
sarl
sbb
lods
add
cwtl
pop
xchg
sub
loop
jge
sub
fs
mov
inc
cmp
das
sarl
jb
xlat
in
xchg
vsubss
in
sbb
divl
xchg
adc
jns
sub
dec
mov
sub
pop
mov
pop
xlat
shrl
ret
inc
icebp
add
mov
dec
pop
and
mov
sub
xchg
sbb
scas
pop
enter
vpminub
mov
mov
or
dec
mov
clc
fbstp
cmp
dec
movsl
jle
pop
flds
fs
xor
addb
js
in
aad
ja
mov
les
in
sahf
jne
stos
shll
arpl
jp
xor
cli
call
mov
fs
rcll
mov
cmpsb
adc
out
mov
aaa
cmp
inc
scas
in
mov
stos
lds
mov
rcrb
xor
out
mov
pop
movsl
cs
cwtl
stos
mov
mov
es
cltd
push
pop
insb
test
pusha
mov
js
movsl
stos
cmpsl
lcall
mov
xchg
sub
pop
cmp
mov
pop
outsl
fdivs
mov
mov
notl
xchg
cmpsb
mov
cmp
out
mov
inc
icebp
lds
stos
xor
add
mov
ds
ljmp
pushf
sahf
out
out
and
or
or
das
ljmp
cmp
cmp
xor
std
rolb
or
add
xchg
sbb
push
das
inc
mov
sbb
xchg
fsts
lret
hlt
and
pop
sbb
aas
hlt
addr16
std
or
xor
mov
es
and
pop
sub
dec
imull
jnp
sbb
sbb
sub
xchg
and
sarl
sub
setbe
mov
pop
int
xor
sbbb
jno
inc
sti
sbb
rsqrtps
add
or
gs
cwtl
or
add
test
or
adc
cmp
xchg
dec
jne
adc
stos
and
fnstsw
popa
xorb
movsl
popf
sbb
leave
negl
nop
push
mov
mov
xchg
repnz
xchg
jecxz
enter
movsl
xchg
repz
je
xchg
fidivs
bound
cld
or
lcall
push
popa
and
xchg
cltd
rorl
xor
fisttpll
pop
pop
or
jecxz
in
dec
dec
push
xchg
mov
in
sub
in
add
push
add
sbb
push
cmpsl
push
mov
arpl
call
jmp
mov
jmp
xchg
push
icebp
in
cwtl
sarb
cmp
loop
insl
jle
cmpb
loope
sbb
pop
cmpsl
adc
cmp
aas
adc
inc
das
loop
in
xchg
ds
inc
dec
and
lahf
je
stos
mov
adc
jle
xor
insb
arpl
add
xchg
push
and
in
xor
in
movsl
mov
les
aaa
xchg
mov
scas
xchg
outsb
sub
xor
out
mov
xor
imul
neg
shll
mov
hlt
xor
hlt
enter
out
ret
add
into
out
mov
fs
mov
aad
add
js
out
aad
or
das
lcall
sti
mov
lret
mov
aad
mov
hlt
fwait
test
sar
push
sub
xchg
cli
add
sub
cltd
lret
inc
movsb
dec
mov
fsub
cmpsl
sub
push
ljmp
or
lds
xchg
enter
cmpsb
mov
and
ficompl
mov
fildll
xchg
mov
addr16
adcb
mov
call
aam
loopne
jge
add
or
fidivrs
jg
pop
andb
ror
roll
inc
pop
ds
xor
sbb
sar
aas
cmp
mov
sub
pop
aas
movsl
pop
out
jge
into
fs
mov
pop
stc
inc
cmp
mov
int
stos
and
lods
cmpsb
xchg
inc
mov
pop
movsl
mov
ret
cmp
push
decl
loope
or
test
xchg
dec
jmp
cltd
stc
ffree
or
xchg
adc
jecxz
ret
jo
adc
inc
pop
xor
daa
xor
js
pop
and
int
xor
pushf
in
repz
or
movsl
ror
or
mov
cli
sub
sbb
add
pushf
jl
mov
jle
hlt
mov
adcl
fisttpl
or
cmp
mov
int3
adc
add
cmpsb
sub
mov
xchg
mov
or
lods
bound
enter
stos
das
jns
and
adc
push
cmp
and
sti
jb
cltd
pop
pop
rcl
popf
mov
pop
xchg
int
ret
in
ja
pop
pop
js
gs
mov
mov
ljmp
sub
push
aas
lcall
popf
add
aaa
js
and
hlt
movsb
sbbl
sub
cmp
xlat
shll
mov
add
jns
adc
jl
inc
jl
add
lret
sbb
fdiv
mov
or
push
sahf
push
mov
xor
fnstcw
sti
push
push
orb
in
push
arpl
sub
stos
push
xchg
xrelease
divb
out
aam
andb
test
call
out
jl
cld
cmp
arpl
testb
es
loopne
in
clc
rcrb
cwtl
sub
xchg
push
popf
scas
flds
cltd
cmp
mov
or
xor
mov
korb
imul
jae
test
test
mov
int3
adc
fldt
lock
pop
cmpsl
cwtl
pop
je
movsb
xor
aam
popa
add
xchg
jmp
jmp
xchg
insb
insb
adcb
es
inc
xor
add
push
fistps
gs
cmpsb
xor
lcall
push
sbb
and
mov
gs
jns
aam
loopne
out
shr
roll
jne
lret
ret
mov
jnp
das
xchg
pop
cmp
sbb
adc
pop
pop
sti
push
mov
inc
xchg
hlt
xor
and
cld
mov
push
stos
enter
stc
push
scas
and
pop
int3
pop
jae
push
sbb
sub
mov
loop
pop
cmpsl
mov
repnz
xchg
je
scas
sbb
mov
cs
out
lret
je
popa
scas
out
aad
js
dec
outsb
jns
adc
mov
test
ret
or
and
ret
in
lahf
pop
mov
adc
mulb
aad
or
testl
div
enter
mov
mov
leave
jne
jl
jge
int
mov
jmp
xor
cmp
mov
out
mov
cmp
xor
in
push
adcl
imul
xor
je
cmpsb
lock
sub
or
sbb
push
push
push
mov
inc
sub
xchg
push
or
outsl
popf
out
mov
sbb
xor
mov
sbb
adc
inc
jae
out
imul
lahf
push
xor
xor
sahf
test
mov
or
ja
lret
test
faddl
loope
dec
push
mov
add
ss
xchg
adc
popa
gs
dec
jb
xchg
mov
leave
cwtl
xchg
push
imul
push
inc
dec
mov
out
jp
add
lods
aaa
addb
stos
jbe
and
dec
daa
xor
nop
push
test
push
and
adc
jbe
in
repz
add
sbb
adc
add
inc
daa
add
imul
cld
icebp
scas
pop
sub
xor
lahf
orl
sahf
daa
js
sub
js
jl
rclb
fcmovne
test
adc
mov
xchg
pop
xchg
and
sub
and
jle
push
mov
roll
mov
add
mov
jbe
imul
inc
jl
pop
insb
pop
insl
mov
pop
test
jne
push
pop
xor
fs
insb
cmp
out
clc
mov
data16
xchg
and
xor
xor
xchg
mov
mov
scas
xchg
insb
cli
xor
xchg
imul
lret
jg
jo
jge
xor
sub
inc
mov
insb
and
sub
cmp
sub
inc
xchg
jge
int3
arpl
sahf
sub
pop
pop
mov
jmp
add
mov
mov
xchg
pop
into
lods
roll
inc
cwtl
lods
addr16
lret
xchg
out
push
dec
incb
cli
cld
xor
nop
fwait
daa
lea
dec
add
in
cmpsb
or
sub
cmp
lahf
adc
push
mov
outsb
inc
scas
shrl
and
aas
mov
push
stc
repz
mov
mov
xor
js
cmp
lret
lahf
sub
sub
inc
mov
dec
shll
pop
jle
pusha
mov
adc
ret
mov
push
sub
enter
fimuls
add
loopne
test
loopne
dec
mov
mov
mov
xchg
jmp
and
mov
ja
rclb
mov
or
jge
mov
cmp
sub
sahf
inc
shrb
pushf
insb
sub
ss
xor
imul
sub
fdivs
push
adc
cmp
test
mov
out
jnp
sub
cmp
fildll
stos
movsb
iret
mov
sbb
mov
cmpl
cmp
fsubrp
jno
fldt
and
in
es
lahf
and
jecxz
add
gs
lock
dec
xor
xchg
xchg
xchg
xor
loopne
mov
arpl
mov
hlt
ljmp
xor
cwtl
add
push
insb
es
je
xchg
imul
inc
in
stos
jae
sub
test
push
sbb
fdivr
mov
ficomps
sbb
mov
adc
mov
ror
mov
xor
xchg
jno
jno
sti
mov
cmc
cmc
add
inc
inc
jo
xchg
and
push
lock
pop
mov
dec
mov
mov
test
and
int3
orb
sbb
sbb
and
aam
xor
outsb
test
stos
cwtl
pop
aam
inc
cwtl
jmp
pop
hlt
pop
jp
add
nop
je
lret
cmp
xor
xor
fisttpll
sbb
xor
cmp
sbb
jb
mov
lret
pop
fdivs
sti
shlb
addr16
mov
les
add
lcall
sub
push
pop
addr16
into
movsb
mov
popa
inc
cltd
push
addl
push
lret
insl
mov
mov
cmp
jbe
ds
inc
push
mov
adc
add
push
mov
and
sbb
mov
mov
gs
imul
ja
into
xor
push
stos
or
enter
addr16
shlb
hlt
sti
sub
mov
xchg
add
add
push
ret
jnp
jp
aad
cmpsb
jb
lret
out
andb
and
scas
je
push
jns
out
cwtl
cs
adc
rcrl
adc
pop
je
ret
cli
xchg
cmp
aam
push
pop
sti
sbb
mov
sub
jecxz
jne
je
dec
into
leave
mov
push
js
in
push
out
fadds
xchg
divl
scas
int
gs
sub
xchg
scas
fisttpll
xchg
stos
and
xchg
fiadds
mov
icebp
xchg
sbb
inc
jno
fnsave
or
jmp
rcr
and
xchg
shll
sbb
mov
scas
vcvtsd2si
inc
adc
loop
mov
push
add
xlat
cmp
cmp
std
xchg
test
xor
nop
push
jb
sbb
xlat
int3
leave
push
sarb
out
and
call
movsb
shlb
std
mov
or
adcl
test
out
dec
push
mov
xchg
pushf
insb
test
xor
out
jbe
andl
and
pop
scas
push
addr16
dec
lcall
iret
mov
fsubl
orb
je
std
fistpll
mov
jmp
iret
hlt
sub
or
fs
lods
loop
hlt
pop
lret
jbe
in
push
sbb
test
lret
mov
and
push
and
fbld
les
fdivs
mov
rcr
call
test
dec
rclb
mov
negb
sahf
jge
insb
mov
mov
jmp
mov
xchg
sahf
mov
inc
cmp
mov
sbb
mov
cmp
add
fildl
cmp
std
jns
out
mov
iret
loopne
mov
cmp
mov
pop
imul
insb
mov
cmc
sbb
jp
mov
mov
mov
ds
jo
jmp
stos
cwtl
inc
pusha
xchg
xchg
aaa
call
jne
adc
rolb
adc
dec
movsl
dec
aas
push
xchg
pop
repnz
mov
mov
or
pusha
mov
scas
mov
mov
adc
sbb
push
imul
dec
roll
fsubl
mov
xor
sub
call
fidivl
icebp
pusha
mov
pop
or
xor
fdivl
push
inc
pop
cltd
packssdw
out
pushf
sbb
pop
jbe
mov
insl
lods
mov
aam
imul
mov
xchg
in
adc
jo
pop
sbb
loopne
jbe
mov
scas
pop
into
inc
out
adc
in
orl
bnd
push
mov
loopne
je
test
pop
jae
cli
and
mov
sbb
mov
stc
call
push
push
popa
xorl
insb
outsl
shrb
ss
iret
push
mov
add
and
cld
movsb
test
into
and
rorl
sub
xchg
jae
cmp
mov
sbb
mov
cltd
mov
pop
and
mov
adc
shrb
mov
lock
popf
in
fwait
roll
popf
pop
daa
sub
mov
cmpsl
push
adc
cmp
add
inc
andb
mov
rorb
sub
out
pop
insl
mov
jb
pop
xor
stc
and
sbb
stc
ds
dec
mov
sti
push
ja
dec
in
inc
or
mov
jge
test
or
ljmp
hlt
enter
inc
insl
scas
push
jle
loop
out
ret
loope
dec
ror
sbb
mov
pop
push
dec
push
jmp
xor
loopne
pop
daa
push
lds
cmp
mov
sbb
sbbl
and
mov
cmp
pushf
push
dec
pop
sub
or
scas
mov
push
cmc
iret
cltd
popa
cmp
push
push
or
jle
lock
jge
ljmp
decb
and
leave
das
xor
icebp
xadd
pop
push
call
inc
pop
in
mov
clc
jnp
or
dec
jp
cli
mov
inc
aam
mov
arpl
fistpll
mov
pop
mov
ljmp
xor
ljmp
cmp
loopne
jne
sbb
add
inc
dec
mull
aaa
dec
or
insb
cmpl
sbb
jne
scas
mov
nop
jae
mov
xor
pop
daa
sub
mov
xchg
out
scas
add
insl
sahf
adc
cli
outsb
sub
pop
test
das
test
jne
push
dec
jne
pop
adc
ja
pop
into
mov
pop
jmp
dec
cmpsl
test
jns
jmp
cwtl
mov
push
stc
xchg
sbb
aaa
arpl
add
push
and
je
xchg
add
out
jno
mov
lds
push
gs
and
fstpl
sub
and
mov
mov
fwait
test
or
ljmp
jbe
jno
mov
in
dec
in
mov
repz
xor
popa
loop
jnp
inc
ficoms
out
ficoml
js
imul
cmpsb
shlb
in
add
or
pushl
cmp
in
xchg
pop
pop
sub
mov
push
dec
sbb
pushf
lret
sub
js
loope
jns
negb
adc
popf
daa
ljmp
dec
pop
mov
cmpb
movsl
add
cltd
into
add
cli
into
and
insl
xchg
lret
in
lods
xchg
call
pusha
sbb
stc
scas
or
cmpb
inc
mov
and
sahf
push
pop
mov
pop
lods
jmp
dec
nop
nop
push
je
xor
push
out
xchg
out
in
cwtl
nop
jp
xchg
add
subl
adc
lahf
jle
fdivs
push
mov
mov
outsb
xor
jp
dec
mov
jbe
lods
add
push
jp
fwait
into
lock
nop
mov
dec
mov
inc
pop
or
xchg
xlat
inc
test
sub
cmp
pop
cmp
test
rolb
out
je
jo
push
movsb
xchg
dec
sub
push
mov
jmp
pop
scas
sbb
ljmp
jb
in
add
mov
jns
cmp
and
xchg
fcmovu
jne
flds
mov
lret
rorl
ds
rorl
and
cmp
cmpsl
imul
dec
shl
outsl
mov
out
icebp
pop
jle
mov
mov
sbb
xchg
bound
leave
pop
test
lods
aas
loope
lret
fcompl
xor
lea
mov
push
lret
into
aad
jl
lds
lret
add
jb
sbb
js
fcom
adc
addl
jns
jbe
mulps
mov
jnp
mov
pusha
aas
lret
inc
sti
mov
mov
cmp
test
cmp
insb
aaa
aam
test
pop
push
mov
dec
enter
repz
sbb
divb
jl
lcall
les
or
pop
cmp
faddl
cmp
imul
cmpsb
popf
push
loop
jecxz
icebp
jg
or
mov
sbb
xchg
adc
outsl
jbe
pop
out
rcl
and
push
nopl
jno
aas
out
sbb
lods
xor
dec
mov
int3
pop
stos
add
push
cwtl
xchg
push
inc
test
cmp
fs
jo
into
pop
stc
jg
lds
xchg
lock
dec
push
lods
mov
dec
cmp
sub
into
stos
dec
imul
xchg
ss
loope
or
orl
test
dec
dec
mov
pop
stc
jo
mov
outsb
aaa
push
xchg
cli
outsb
push
sub
xor
inc
insb
sub
fisttpl
adc
mov
outsb
shrb
fsubs
and
sbb
push
test
arpl
dec
scas
stc
jns
gs
mov
dec
or
out
and
dec
arpl
adc
paddsw
out
sbb
in
insb
pop
xor
in
outsb
lea
mov
cmovge
test
lret
dec
mov
roll
rcrl
je
push
mov
movsl
or
pop
ja
lea
stos
insb
mov
pop
sub
add
pop
out
pop
stos
xor
aam
das
dec
out
pop
adc
outsb
addr16
add
adc
rcrb
mov
adc
scas
adc
or
cwtl
adc
mov
adc
mov
push
sbb
add
ss
sbb
xlat
sub
lea
adc
sahf
jnp
mov
mov
xchg
xchg
es
pop
orl
ret
mov
jns
sbb
lods
out
dec
inc
test
pop
sbb
inc
fdivrs
push
add
cmp
jge
je
fs
adc
movl
inc
mov
push
inc
adc
push
mov
addr16
inc
adc
cltd
enter
lret
jl
fdivr
clc
sbb
pop
loopne
movsb
pop
out
cmpsl
adc
insb
and
adc
rcrb
add
pop
mov
pop
sub
rcll
pusha
mov
sub
ds
aam
test
inc
ret
jp
sbb
add
pushf
stc
negl
push
and
daa
sar
js
or
addl
outsb
int
xor
jae
mov
add
adc
test
push
ret
rol
mov
add
out
psubsb
sub
nop
sbb
les
xchg
popf
nop
and
jle
cli
lods
adc
sbb
scas
mov
xorb
stc
push
pushf
mov
add
mov
xor
test
pop
cmp
addl
clc
mov
mulb
xchg
and
mulb
orb
mov
cld
loope
shrb
hlt
gs
sbb
cmp
pop
fs
push
sahf
aaa
fadds
insl
mov
in
xchg
xchg
xor
cmpsl
sbb
xor
popf
or
xlat
popf
mov
nop
les
push
pop
xor
adc
repnz
popf
sbb
jb
dec
jp
adc
xor
mov
mov
and
jmp
sub
and
adc
add
sbb
adc
xchg
lahf
jno
mov
jl
xchg
sbb
fsubrs
xor
cmpsb
mov
push
subb
dec
mov
mov
jne
sub
bound
das
test
andl
inc
mov
dec
and
fdivrs
and
add
dec
sahf
cmp
stos
pop
xchg
arpl
add
pop
cwtl
sbb
popf
lods
ljmp
jge
cmpl
cmc
push
push
push
nop
inc
lock
mov
inc
pusha
lahf
in
adc
and
cmp
dec
test
test
cli
pmaxub
xchg
pop
cwtl
push
dec
push
mov
mov
ja
sbb
push
pop
clc
test
add
rolb
cmp
cmp
mov
aaa
insb
push
mov
pop
mov
jp
shrl
outsl
mov
push
idivl
in
lods
adc
outsb
lea
mov
nop
std
mov
nop
out
gs
sahf
pop
xor
lahf
mov
or
mov
mov
push
push
sahf
inc
rorb
in
in
sub
jbe
test
stos
in
push
mov
pop
ficoml
or
out
inc
push
xchg
je
sbb
addr16
fcomps
pop
sub
fdivs
pushf
subl
mov
or
xor
dec
xchg
movsl
sbb
mov
arpl
mov
lret
jl
add
mov
jmp
in
adc
jp
dec
cld
outsb
test
pop
movsl
aas
shlb
push
icebp
dec
sbbl
sub
sbb
push
cli
add
scas
and
daa
inc
jmp
sbb
lds
jg
movsb
out
js
ds
scas
in
imul
mov
lcall
fmuls
mov
rcrb
pop
lock
inc
out
or
cld
pop
mov
loopne
dec
fidivs
mov
xor
repnz
pushf
lcall
pop
movsl
adc
pop
scas
or
sarl
xchg
sahf
mov
dec
add
adc
ret
inc
mov
fldt
test
sub
push
mov
in
ja
inc
add
cmp
lcall
nop
inc
and
mov
xchg
lods
mov
and
and
mov
ja
pop
icebp
pop
xchg
or
mov
outsb
fnsave
or
pop
jecxz
cli
out
jmp
addl
test
lock
mov
add
xchg
call
dec
pop
mov
loop
js
rcl
mov
jecxz
pusha
out
xchg
stos
fwait
pusha
lahf
or
mov
stos
sarb
push
mov
sub
mov
aas
loope
lods
aad
das
out
mov
cmpsl
test
addb
in
icebp
xor
add
movsb
sti
dec
ja
inc
pushf
mov
out
loop
movsb
sti
cmp
mov
adc
cli
mov
mov
adc
push
push
bound
push
cld
cmp
xchg
icebp
ja
mov
dec
pop
or
sti
push
int
mov
jb
cs
fsubs
pushf
or
cmp
push
outsl
pop
les
pushf
pop
ret
and
movsl
shrb
and
jp
enter
mov
or
sub
xchg
dec
out
pop
push
or
or
and
xchg
dec
mov
das
add
js
xchg
ja
fnstcw
add
mov
clc
loopne
or
adc
xor
push
sbb
fldl
lods
subb
push
sbbb
push
daa
fcoml
ds
ljmp
aaa
xchg
repz
pop
sahf
movsb
sbb
lea
mov
sahf
or
xor
testl
and
repz
sbb
xchg
xchg
rdmsr
jb
mov
adc
or
out
mov
dec
fistps
mov
arpl
push
lds
cmpsl
aam
adc
lea
jp
or
leave
call
push
xchg
xor
pusha
inc
popa
sub
push
repz
fwait
xchg
rcr
dec
sbb
imul
xchg
push
mov
leave
stc
pop
mov
sbb
je
mov
and
or
jnp
and
xor
imul
mov
mov
adcl
adc
insb
inc
jo
int3
push
out
fdivrl
bound
fdivs
bound
xchg
push
pop
pushf
dec
shrl
inc
mov
scas
lcall
mov
ficompl
pop
xor
push
sbb
into
sbb
in
sbb
icebp
cs
mov
mov
xor
inc
cmovns
pop
loop
jmp
rorl
dec
sbb
daa
shll
addb
aad
sti
add
rcr
sbb
lock
data16
fistps
dec
mov
xchg
fdivrl
lret
lret
cmp
int
ljmp
xchg
ret
lret
push
push
jg
push
jge
add
daa
mov
outsl
lret
xchg
sub
je
mov
mov
repnz
dec
mov
insb
aam
dec
push
ss
movsl
mov
shrl
mov
das
jmp
les
push
mov
sub
mov
mov
mov
and
fwait
lds
cmp
inc
and
mul
data16
jge
insb
mov
jno
fnstcw
mov
aas
ret
mov
in
sbb
mov
addl
sahf
daa
jl
mov
mov
outsl
and
bound
adc
ss
sahf
mov
dec
pop
add
in
iret
mov
mov
pop
jns
cmpsl
mov
subl
lea
dec
mov
dec
jnp
mov
rcrl
cmp
enter
and
data16
sbb
push
std
lods
xchg
pop
add
fadds
pop
add
out
pcmpeqd
jge
lods
xchg
add
cmovs
and
push
pop
inc
lock
add
ret
out
sbb
pop
add
push
in
sub
and
add
insl
scas
sbb
ja
mov
xor
inc
insl
mov
js
pusha
mov
mov
jmp
xor
mov
shll
mov
pop
jns
iret
inc
mov
sti
seto
cld
sbb
inc
jge
mov
pop
jo
push
negl
push
in
jo
lcall
daa
jnp
lods
push
cmp
vucomiss
les
add
jge
push
sub
test
adc
stc
lret
cmovae
mov
outsb
hlt
xor
orb
sarb
scas
cltd
mov
in
inc
mov
ret
test
popa
cli
cli
inc
dec
add
push
shrl
or
and
sarl
stos
push
xchg
addr16
sub
inc
jg
add
gs
add
push
aam
or
movsb
xchg
cmp
jmp
mov
sti
lods
cmp
inc
aad
xlat
and
jmp
or
in
lahf
movsb
nop
inc
into
and
mov
pop
addr16
dec
lds
int
push
mov
jae
call
rcrb
out
or
mov
sbb
stos
mov
inc
icebp
lcall
in
sbb
xor
sbb
pop
xchg
sbb
leave
inc
jbe
mov
mov
pop
sub
test
jecxz
aam
iret
mov
cli
jns
pop
inc
mov
mov
pop
push
mov
lret
add
clc
ret
cmp
pop
jbe
inc
jl
dec
aaa
and
xchg
iret
or
mov
test
fldl
pop
add
mov
rcll
pusha
push
fwait
push
xchg
add
popa
inc
sbb
jne
fdivrp
repz
mov
out
dec
pop
sbb
cmp
das
pop
adc
adc
insb
in
push
imul
scas
sti
push
push
dec
cmp
sbb
mov
idiv
pushf
shld
inc
push
repnz
int3
mov
cwtl
xchg
in
jns
hlt
mov
jo,pn
lret
mov
scas
pop
mov
inc
xor
sub
xchg
mov
repz
mov
xchg
addr16
push
or
sub
push
jns
mov
out
and
adcb
ret
xchg
pop
movq
jae
fmull
mov
dec
xor
xchg
xchg
jp
add
mov
push
push
jmp
sub
jbe
subps
jo
mov
ljmp
push
xor
adc
out
pop
mov
sbb
sbb
into
dec
roll
cmp
lea
push
rclb
movd
dec
adc
les
fcomip
movsb
popa
pop
rcll
xor
aam
push
cmp
out
or
xorps
sub
sbb
in
sub
lods
inc
inc
sub
dec
mov
xchg
je
or
mov
mov
mov
dec
cmc
or
mov
and
aaa
sub
repz
lret
push
lods
pop
int
lods
cmpsl
or
dec
xchg
xchg
std
fstps
loope
add
out
das
sub
nop
sahf
call
lret
push
imul
xor
rorl
stc
in
jle
mov
push
xchg
cmp
imul
subb
xchg
or
popf
sahf
das
imul
into
xlat
es
mov
xchg
push
jg
sub
fs
cmp
jnp
sub
scas
pop
mov
push
add
add
add
sarb
mov
or
stos
subb
loop,pt
cltd
dec
iret
push
mov
or
mov
xchg
push
mov
jbe
mov
cld
dec
jmp
enter
adc
rorl
addr16
addr16
fbld
mull
fldenv
mov
stos
inc
xchg
in
lea
ds
cmp
adc
hlt
xor
mov
sub
jl
and
sub
dec
xchg
stos
xor
jno
decb
cltd
aam
movd
push
mov
sahf
stos
and
mov
push
xor
or
out
add
and
mov
cmp
mov
imul
mov
lea
stos
mov
adc
fistps
mov
mov
or
push
fucomi
inc
mov
push
cmc
dec
jo
adc
push
stos
mov
xchg
insb
dec
in
imul
xchg
cmovae
pushf
mov
and
dec
movd
and
test
xor
pop
mov
push
mov
cmpsb
cs
xchg
js
cmpsb
insb
mov
adc
cmp
xor
dec
jns
clc
aas
pop
xor
mov
push
xor
sub
cmpsb
lea
lods
daa
fistps
stos
and
leave
push
dec
scas
inc
rol
jne
push
jne
sbb
xor
sbb
test
incb
stos
pop
jb
mov
mull
in
data16
aam
xor
jmp
rcl
lahf
js
mov
push
mov
in
xchg
lods
pop
ljmpw
mov
cmp
scas
lcall
rcll
sti
mov
mov
add
insl
jge
fstl
stc
aam
jbe
fstpt
mov
and
fbstp
jle
sti
popf
arpl
push
je
add
jns
fcoms
aad
mov
out
stc
dec
jmp
out
ja
xchg
nop
inc
sbbl
pop
push
xchg
clc
mov
jb
mov
mov
movsl
lods
jmp
mov
imul
dec
jle
xchg
dec
xchg
push
aam
daa
lret
stos
and
int
arpl
mov
push
popf
mov
xchg
fsubp
lods
push
mov
xchg
fsubrl
pop
xchg
mov
je
out
rol
xchg
call
adc
testb
fimull
add
scas
jne
lds
pusha
fwait
inc
lahf
push
fildll
bound
xorl
pop
js
add
inc
mov
pushf
or
jno
rcl
jbe
jno
ja
fimull
mov
or
jmp
pop
or
nop
iret
stos
push
push
pop
int3
imul
lret
sahf
jnp
mov
mov
int3
outsl
jge
outsl
repz
sub
mov
out
imul
or
sbbb
insl
xchg
xor
fisttps
inc
xor
push
pop
or
aad
stos
and
mov
adc
out
adc
xchg
sbb
mov
in
out
xchg
lods
adc
test
adc
ret
nop
testb
push
mov
notb
out
xchg
push
pop
dec
test
scas
out
push
pop
lods
mov
push
repnz
icebp
into
xchg
ficoml
adc
dec
fidivs
lahf
stos
push
das
dec
add
stc
syscall
mov
stc
subl
xor
mov
out
inc
in
fnsaves
rclb
icebp
ret
push
into
push
aad
and
into
testb
cmp
test
out
stos
jmp
xor
mov
rcll
mov
sub
cwtl
aaa
and
shlb
cld
jecxz
pop
pop
clc
dec
adc
aam
sbb
add
add
rcrl
mov
adc
adc
inc
imul
sti
mov
or
push
sub
movsb
fs
fidivl
add
fistps
jb
loope
jmp
sbbl
dec
jle
jge
mov
hlt
movl
mov
call
scas
pop
dec
mov
lock
cmpb
add
add
mov
popf
sub
cmc
mov
cli
lods
lea
cmp
lahf
leave
loopne
insb
mov
repz
add
fmul
idivl
xor
push
daa
xchg
mov
pop
mov
arpl
add
lahf
mov
push
rcll
cmc
xchg
sub
test
leave
mov
adc
ja
cmp
ds
loopne
xchg
clc
push
sbb
jbe
sbb
shlb
push
fldt
add
cmp
mov
xor
outsb
or
arpl
gs
cltd
pop
jp
and
std
dec
inc
loopne
test
lret
ja
je
add
filds
and
loop
inc
sbb
xchg
pop
mov
movsl
cli
mov
jmp
add
sbb
insb
jo
cli
nop
xor
repnz
adc
pop
dec
mov
cmp
and
fbld
insb
sti
inc
sbb
in
rolb
sub
fadd
mov
dec
pop
adc
cmp
xor
clc
ja
dec
xchg
lahf
lcall
inc
xchg
fbstp
scas
sbb
mov
mov
jle
ljmp
cwtl
and
xchg
arpl
movsl
add
xchg
jge
push
add
popf
fs
push
rcr
mov
iret
fldl
mov
loope
int3
pop
stc
jg
jno
js
call
xchg
dec
inc
aad
cmpsl
jge,pt
gs
fstpt
mov
jb
and
jae
cmpsb
es
sub
movsb
mov
lods
mov
int
jns
lds
int
cli
xchg
inc
sahf
push
add
mov
mov
js
mov
nop
cmc
xor
cmp
mov
lods
aaa
dec
jge
sub
mul
add
cmp
jbe
and
ret
pop
cmpl
out
neg
adc
lahf
dec
add
xorb
and
in
rcll
insb
ret
pop
dec
cs
xor
xorb
mov
sbb
enter
and
add
scas
xchg
std
insb
sub
rorl
imul
push
pop
gs
ss
cmp
pop
push
jo
addr16
hlt
addb
arpl
xor
mov
in
scas
outsl
mov
int
jl
jnp
aam
mov
cmpsb
mov
ja
mov
xor
into
imul
add
and
das
cld
mov
sub
in
mov
ret
mov
fsubrl
rorl
pop
in
lcall
cmp
sbb
aaa
das
pop
adc
mov
cmp
push
add
push
mov
frstor
xchg
jae
lock
inc
xchg
pop
insb
pop
mov
in
js
iret
xchg
push
lcall
adc
lods
out
add
incb
mov
imul
outsb
fmul
int
xor
add
bound
sti
jl
scas
lret
ret
xor
fsubs
mov
inc
jb
cs
add
aad
xor
cmp
xor
shlb
shll
dec
loopne
sub
jmp
jae
and
inc
or
roll
and
js
xchg
rcl
mov
mov
and
mov
jle
sub
ret
or
mov
and
mov
lret
faddl
sub
xchg
hlt
mov
and
mov
xor
push
jecxz
or
outsl
inc
or
out
into
test
xor
sbb
xor
jp
cmp
jnp
cld
jne
add
pop
fs
mov
jne
inc
mov
pop
push
orl
mov
int3
mov
jnp
jne
xchg
inc
cmpl
movsb
push
and
pop
inc
imul
test
imul
mov
add
xor
and
loopne
sub
cmp
test
adc
out
fcomps
pop
or
mov
mov
sub
and
mov
rcr
add
lods
pop
push
int
jne
ds
enter
repnz
mov
pusha
sbb
jecxz
imul
mov
add
adc
popf
lea
lock
jnp
insl
fwait
mov
jns
push
ffreep
adc
in
sub
jg
sub
cmp
ljmp
test
fsubp
imul
rcrl
dec
xchg
mov
xor
inc
cmp
lds
loopne
std
jb
test
arpl
fimull
xchg
in
outsl
outsl
scas
xor
push
test
rcll
cmc
mov
mov
adc
pop
data16
mov
inc
cmp
movsb
fnstsw
andl
mov
add
cmpsl
mov
xor
cmp
pop
sbb
xchg
push
loop
pop
xchg
repnz
dec
faddl
test
ficompl
shll
cli
pop
sub
ds
fisubs
fcomi
sub
mov
push
arpl
sbb
jmp
jg
push
sbb
scas
bound
hlt
fnstenv
outsl
mov
arpl
pushf
addl
add
xorl
mov
mov
pusha
push
xchg
mov
stos
add
enter
loopne
insl
adc
ljmp
sbb
pusha
aad
pop
xchg
subl
sar
inc
jmp
mov
xchg
xchg
and
xchg
inc
loopne
mov
xlat
pop
pop
jg
xchg
nop
sub
andl
xchg
or
xor
clc
sub
cmp
pop
xchg
mov
push
jns
cmpl
sub
rcl
cmp
sub
leave
popa
sbb
out
mov
inc
push
xchg
push
fldl
sub
neg
je
or
xor
fwait
mov
je
add
gs
imul
sti
lods
pop
movsl
jle
fisubs
fnsave
and
inc
xchg
fldenv
aad
xor
cmc
dec
jp
mov
mov
stc
fwait
jmp
sahf
pop
mov
jle
imul
iret
sbb
mov
shlb
jmp
jo
fldt
movsb
sarl
adc
daa
aad
dec
loopne
mov
dec
inc
pusha
shl
lcall
sub
jg
and
lcall
or
xor
cmpsl
sti
xchg
aam
fstpt
xor
cmpsb
lods
cltd
pop
inc
fmull
mov
cmc
popa
xor
cmp
out
add
pop
pop
lds
lahf
adc
mov
xchg
ljmp
fdiv
lret
and
cmpsb
insb
xchg
xor
jl
pusha
xchg
pop
jp
add
xchg
pop
inc
mov
pop
cmp
test
loop
mov
stos
xchg
mov
sub
xorl
out
subl
mov
mov
inc
jge
pop
fwait
mov
iret
in
push
add
add
jge
adc
mov
enter
mov
xchg
pop
xorl
cmp
xlat
xor
lret
jbe
lret
je
mov
mov
adc
fisubrs
xchg
inc
fcomps
add
ficoml
xorb
loop
xor
les
cltd
and
sub
jge
movsb
fwait
cmc
lret
cmp
cld
cs
pop
xchg
fdivrp
cmp
sarb
mov
cmpsl
push
pop
fcmovbe
mov
sub
in
jne
mov
pop
pop
outsl
frstor
jne
in
in
lods
pop
adc
bound
ret
cmc
sub
fwait
repz
test
mov
cmp
test
jl
stc
das
pushf
pushf
pop
dec
xor
cmpsb
std
scas
cltd
fiaddl
icebp
and
mov
mov
push
mov
add
adc
fdivs
shrb
cmpsl
popa
daa
out
and
ror
addl
pop
shl
mov
or
xchg
lock
arpl
sbb
push
decb
push
pop
sbb
dec
in
jmp
pop
cmp
and
or
imul
sub
sbb
push
test
call
mov
add
out
xchg
add
mov
insl
mov
in
and
lret
jae
jns
fucomip
push
add
sbb
dec
aad
push
dec
arpl
add
xchg
out
test
sbb
rcll
xlat
inc
enter
jle
fdivrl
cmpb
jge
or
adcl
mov
sbb
decl
and
js
push
mov
mov
mov
fsub
leave
fdivl
repz
out
and
mov
pop
sarb
mov
orb
and
popa
push
jne
jb
cmpsb
in
jecxz
adc
mov
addr16
jle
sbb
jg
xchg
jge
mov
hlt
scas
push
sbb
cld
adc
xor
mov
scas
nop
dec
daa
jb
test
pop
push
lahf
push
mov
inc
xchg
enter
add
sahf
not
jle
test
pop
inc
or
cmp
xchg
dec
push
sar
fmulp
nop
js
mov
xchg
cmp
inc
ja
push
adc
dec
stc
mov
add
shl
imul
aaa
jg
xchg
cmp
gs
add
stc
xor
push
push
add
stos
jmp
daa
das
pop
fidivrs
das
dec
add
shr
pop
outsb
xor
adcl
or
xchg
jnp
push
xor
aam
mov
nop
xchg
mov
pop
stc
cmp
inc
sub
sbb
or
dec
pop
hlt
pushf
mov
add
mov
and
aam
mov
sarl
pop
iret
call
add
jg
and
jmp
sti
or
push
sbb
insl
arpl
sbbb
mov
out
adc
int
fwait
or
jae
jmp
cli
les
inc
test
loope
push
sub
mov
cmp
imull
nop
rcr
add
sub
cmp
sub
fldenv
dec
mov
adc
imul
jb
add
in
jmp
inc
adc
pop
dec
inc
int3
or
or
cwtl
pushf
xor
ja
out
adc
xchg
mov
lahf
and
sahf
mov
repz
lods
mov
lea
mov
dec
fwait
imul
int
push
lds
xchg
cmpsl
lahf
sbb
shrb
call
xchg
dec
aam
int3
xchg
inc
lret
shrb
or
bound
xchg
and
push
dec
push
xchg
dec
xor
pusha
fdivl
shlb
pop
inc
movsb
jns
mov
imul
mov
lret
jno
clc
inc
cltd
loopne
je
dec
sti
inc
rorb
mov
cld
pop
push
push
jno
stos
cmpsl
bound
fcompl
inc
adc
and
jecxz
cmp
mov
mov
rcr
repnz
rol
jbe
pop
and
sarb
aad
cltd
xchg
hlt
pop
je
pusha
pop
and
xlat
gs
hlt
dec
inc
shlb
xchg
add
int3
or
clc
test
push
sar
dec
jl
test
cmp
sbbl
cmpsb
lret
or
roll
idivb
packsswb
sub
push
add
cwtl
fnstcw
xchg
arpl
cmpsl
mov
or
xchg
insl
pushf
lods
sarb
dec
nop
jno
jl
jae
xchg
cwtl
outsl
inc
jmp
cwtl
shlb
addb
js
pop
loope
jo
lods
dec
xlat
jmp
pop
xor
xlat
push
mov
add
mov
ret
aas
outsb
mov
insl
rorb
cwtl
das
inc
push
jmp
cwtl
adc
inc
les
cltd
ret
enter
int3
push
mov
or
xor
xlat
in
mov
outsb
aaa
cmp
lahf
inc
xchg
or
pop
mov
sahf
lret
enter
ret
sti
js
inc
lret
je
in
push
xor
xlat
pusha
mov
lahf
cmpsl
lea
scas
xchg
pop
cwtl
add
xchg
jp
lods
shll
mov
cmp
jmp
cwtl
fisubl
pop
insb
pop
mov
fsubrl
imul
pop
sbb
fdivrs
mov
leave
xlat
test
loop
xchg
fsubp
aaa
jo
mov
fs
popl
scas
fwait
insl
int3
sub
in
xchg
push
mov
aam
sbb
leave
cwtl
scas
mov
test
test
scas
xchg
js
mov
inc
xor
xlat
adc
inc
dec
cmp
mov
das
inc
clc
scas
cmp
mov
cmp
mov
aas
sub
xlat
insb
test
cwtl
dec
inc
bnd
cwtl
or
or
adc
iret
push
mov
out
ss
inc
ljmp
add
inc
dec
or
test
cmp
loop
mov
pop
sarb
mov
les
pop
cmpsb
mov
ljmp
hlt
dec
sub
xchg
bnd
out
mov
fildll
push
outsl
bound
add
loope
mov
push
sub
hlt
push
push
sahf
shrb
addr16
add
outsl
cmp
test
add
push
inc
out
popa
je
mov
mov
xchg
pop
mov
mov
icebp
jl
xchg
loopne
mov
out
cli
mov
mov
or
pop
mov
or
clc
pop
stos
clc
pusha
add
outsl
cltd
and
js
out
popf
outsb
xor
aad
xchg
pusha
in
sub
push
cld
aam
mov
das
popa
inc
xor
outsb
mov
cmpl
popa
mov
mov
sti
lcall
in
jns
ficoml
push
lods
jge
pushf
sub
add
int3
push
sbb
xor
cld
pop
pop
arpl
hlt
test
inc
rcll
xchg
lcall
sub
add
add
outsl
inc
jmp
cwtl
shlb
addb
js
pop
loope
jo
lods
dec
xlat
cmc
sbb
push
mov
cli
aaa
rcrb
sub
dec
inc
cs
cwtl
mov
sub
daa
mov
sbb
sub
xchg
test
test
aaa
pusha
mov
insl
lock
dec
lahf
out
mov
and
sbb
push
shlb
push
sahf
jmp
cwtl
scas
mov
pushf
sub
cmp
pop
rcll
xlat
std
sbb
mov
lcall
mov
jge
and
jbe
ja
stos
in
pop
inc
mov
jo
mov
xor
and
cli
push
and
std
lock
loop
push
or
subl
pop
insl
aad
mov
inc
xor
add
scas
jns
jmp
lahf
clc
aaa
dec
js
mov
inc
mov
roll
jg
orb
sbb
scas
jbe
inc
xchg
popl
andl
sbb
xchg
fwait
js
int
mov
ss
int3
test
xchg
pop
negb
repnz
jb
scas
sbb
jp
pop
dec
push
out
aad
cmp
or
mov
das
aad
lock
cltd
loope
push
popf
scas
sbb
jle
imul
enter
aas
rolb
int
test
cmp
and
mov
mov
in
mov
and
cmp
js
xchg
cwtl
cld
mov
mov
sbb
ja
fs
cld
in
pop
adc
clc
mov
lock
xchg
xor
pop
pop
int
sub
add
mov
fs
pop
push
addr16
mov
je
add
into
cs
sub
cwtl
mov
enter
push
in
out
jo
sbb
pusha
loopne
shrb
js
ljmp
jp
sub
negl
sbb
rcrl
je
iret
push
jne
stc
aad
sbb
jp
lcall
fsubrs
fcomps
bound
and
loope
jl
lret
lea
inc
cmp
popf
add
call
insl
fisubrl
push
je
dec
pop
mov
popf
fadds
scas
push
xchg
jmp
dec
jle
dec
sbbw
add
sub
daa
xlat
aaa
push
lret
pop
pop
addl
mov
clc
mov
pop
sbb
add
rolb
pop
sbb
or
xchg
or
push
and
andb
aaa
lret
lret
mov
movl
stos
jp
or
xchg
push
mov
loopne
mov
addr16
jbe
xchg
pushf
repnz
jae
shlb
sbb
jecxz
lret
cmpsl
dec
gs
jp
mov
fnstenv
sbb
test
lret
push
adc
aam
repz
test
rcl
mov
push
jl
mov
jne
inc
add
les
movb
daa
sbb
popf
rorb
test
mov
sti
gs
pushf
xor
int3
sbb
lret
out
in
pushf
mov
xor
jb
mov
sbb
out
dec
adc
stos
call
pop
or
repnz
fildl
lods
int
add
xchg
add
int
push
aam
xchg
sub
cmpsl
mov
pop
push
dec
outsb
sbb
stos
pop
xchg
aam
mov
in
pop
out
xor
dec
sbb
fdivp
imul
insb
or
fstpt
fists
cld
test
popl
cli
push
push
insl
inc
rcl
jae
mov
cmc
repz
push
cmc
mov
pop
jp
leave
fwait
mov
sbb
imul
leave
sub
mov
xor
data16
pop
ss
jl
mov
nop
aad
xor
and
xorb
or
fs
popa
cmpsl
loope
cwtl
sti
push
dec
cli
push
ficompl
icebp
push
and
stos
fidivrs
mov
fistpl
rorl
pushf
mov
jnp
add
enter
jb
dec
test
mov
dec
fadds
out
mov
dec
js
inc
pop
fldenv
outsl
sbb
xor
lret
ret
ret
js
cmpsl
repnz
lcall
mov
rcl
addb
xorb
ljmp
xchg
inc
std
xor
jo
adc
pushf
xchg
test
in
rcrb
push
shll
mov
sbb
sbb
push
ljmp
mov
pop
out
xlat
lds
inc
pushf
xchg
arpl
mov
shll
xor
sub
nop
cmp
mov
shrb
pop
rcrb
popf
jge
add
shrb
pop
cli
xchg
sub
into
pusha
jle
dec
fsubrl
sbb
mov
repnz
divl
fcomps
sbb
iret
lcall
jge
addl
fwait
aas
mov
jecxz
and
sbb
fiadds
adc
jnp
jge
xlat
pop
js
adc
ret
loopne
cli
inc
mov
mov
loop
cld
jecxz
add
mov
movsl
cmp
push
in
xor
sub
fisubrl
or
sub
mov
int3
rorl
mov
pop
les
sbb
mov
lret
cmc
mov
jae
gs
xor
mov
jbe
rcrl
jmp
popf
xchg
mov
jno
xchg
insb
jae
out
gs
sbb
fbstp
popa
stos
xor
insl
dec
xor
fldz
and
in
lret
mov
mov
adcl
fwait
pusha
pop
rcll
mov
pop
jle
pop
int
push
sbb
ret
ret
in
and
mov
mov
andb
mov
mov
shll
inc
xchg
stc
ret
into
add
daa
fstpl
mov
xor
shlb
scas
fdiv
mov
xchg
push
and
cltd
mov
xchg
aam
sub
shlb
repz
mov
mov
repz
pop
rcrl
popf
aad
pop
fsubp
add
int
pop
dec
lea
fstpt
and
inc
adc
or
hlt
adcb
push
fcomp
cmp
xor
sti
inc
int3
jecxz
roll
shr
int3
icebp
out
stos
shlb
sub
mov
sbb
xchg
aam
cld
mov
aad
inc
loopne
clc
ret
insl
add
mov
mov
movsl
jmp
mov
test
dec
sarb
fnstsw
push
sub
ret
popf
std
aam
hlt
xchg
pusha
cmp
stos
sahf
fwait
sub
pop
jb
loopne
mov
cs
xlat
insl
inc
mov
ficomps
ja
cmpsl
cmp
mov
cmpsl
mov
loop
pop
sbbb
fwait
test
and
in
sbb
ds
mov
into
icebp
aad
lods
hlt
loope
mov
fstl
inc
add
loope
xor
adc
and
je
pop
fisubrs
xchg
sahf
mov
xor
sub
call
cmpl
in
mov
mov
mov
mov
fbstp
mov
aas
and
sub
in
outsb
jl
lods
faddl
sahf
xchg
mov
mov
call
lahf
jb
xor
lea
ja
popf
cmp
fadd
loop
and
out
andl
cld
mov
jle
lahf
xor
insl
cld
push
jecxz
movsb
add
cmp
add
xlat
gs
and
cmp
shrb
ret
pop
icebp
jo
repnz
jp
sahf
sahf
lock
mov
insl
lret
pop
sti
pop
pop
shr
pop
sti
sub
inc
outsb
mov
mov
sti
fstps
or
lahf
cmp
mov
arpl
xor
inc
push
jae
test
lea
or
in
int3
xchg
jb
fcoml
adc
aas
mov
jmp
aas
mov
test
inc
in
shr
xor
test
mov
pop
repz
mov
pop
jge
pop
add
push
pop
mov
fs
ss
roll
bound
icebp
xchg
int
cmp
sarb
adc
lods
jmp
daa
pop
pop
dec
popf
pop
xlat
ja
xchg
or
mul
daa
outsl
inc
mov
xor
outsl
aaa
sbb
mov
data16
aaa
xchg
lock
fs
nop
das
and
push
add
add
pushl
ficoms
jbe
push
lret
sbbl
das
pop
shll
ds
jge
gs
add
jns
cltd
cmc
mov
xor
cli
pop
stc
scas
adc
loop,pn
and
dec
and
test
je
test
icebp
adc
je
test
shlb
popa
test
pushf
ja
lcall
daa
lods
stos
ret
cmp
insb
fnstsw
sbb
cmp
fisubrl
shl
jb
addr16
test
mov
aad
jo
fisttps
es
aas
pop
test
lret
xchg
into
xor
sarb
push
cli
add
addl
clc
pop
sahf
outsl
mov
andl
adc
dec
push
icebp
cmp
xchg
mov
int3
push
ljmp
enter
dec
ret
and
dec
daa
in
lods
pop
and
push
mov
in
lods
lods
xchg
mov
cmp
push
insb
dec
mov
jne
and
lret
pop
gs
and
and
xchg
ljmp
loopne
addr16
es
push
scas
enter
inc
push
push
xchg
xor
call
push
hlt
fidivl
daa
add
xchg
jl
stos
movsb
or
stos
test
inc
pop
daa
inc
les
jge
mov
cmp
lret
call
in
repz
popa
movsb
cmp
daa
mov
lahf
mov
cmpsl
lea
out
adc
or
inc
ret
lret
addr16
pop
ret
xchg
mov
cmp
sub
rcll
stos
hlt
lahf
and
sahf
or
fisttps
lahf
arpl
mov
outsl
xchg
add
push
lds
xor
fnstcw
pusha
ficoms
scas
jns
mov
mov
lcall
pop
ja
fsubrs
inc
test
add
testb
lret
pop
mov
psllq
js
loopne
mov
xchg
arpl
ds
adc
mov
jns
fwait
movsl
push
cmp
and
decb
subb
inc
sbb
sub
inc
fidivs
testl
dec
and
xor
push
fst
shll
mov
ljmp
in
cld
mov
les
ffree
xor
int
xchg
pop
xor
cmc
inc
outsb
xor
and
aas
sarl
or
lods
pop
sahf
inc
test
fistpl
sbb
xor
xor
test
sub
inc
fsubrl
mov
fcoms
jns
mov
fnsave
add
dec
les
fs
cmp
pop
jno
xlat
lcall
or
dec
sbb
nop
xor
cltd
mov
inc
mov
fcom
flds
loop
incl
and
jbe
outsl
into
ds
sub
mov
nop
rcll
push
lret
jg
imul
pop
out
and
pushf
mov
pop
test
or
xchg
add
mov
insl
mov
loope
ja
in
insl
fnop
adc
into
bound
and
jne
cld
cld
rcrb
das
mov
imul
xchg
jo
xchg
mov
pop
mov
subl
outsl
stos
jnp
mov
lea
or
stos
mov
int
lcall
ja
loope
in
mov
pop
adc
test
mov
aam
dec
xor
lret
dec
int
inc
movsl
inc
in
pop
lods
pop
cmp
mov
cmp
arpl
inc
or
aad
out
outsb
repz
rcrl
incb
xchg
or
imull
subl
enter
add
ss
daa
inc
mov
inc
cmp
inc
lock
fsubl
push
out
push
add
aaa
daa
enter
in
lcall
daa
daa
stc
insl
pop
nop
and
pop
loopne
lcall
sbb
fucomip
xchg
movsl
sbb
mov
mov
bound
jne
mov
daa
or
das
xchg
sub
loope
sub
adc
stos
addb
ja
lock
xchg
inc
dec
and
cmpsl
insb
mov
in
sub
cmp
xchg
xchg
movsb
leave
xchg
movsb
dec
push
sub
fidivrs
sahf
enter
inc
jne
fistps
ljmp
lret
pop
rcl
jbe
jmp
xchg
mov
subl
cmp
ficoms
sub
fadds
arpl
fbstp
jnp
loop
andl
inc
fcmove
jne
es
outsb
adcl
cld
jge
sar
sbb
mov
bound
jne
cmp
pop
dec
test
test
dec
xchg
mov
std
stos
ficoml
out
fs
mov
push
pop
jg
aam
sarl
cld
subb
daa
sbb
insb
push
aas
daa
outsb
xchg
dec
movsl
mov
xchg
jg
mov
stos
insb
inc
scas
xchg
fwait
test
sub
mov
fbstp
xlat
gs
insl
mov
adc
inc
rcr
fstpt
call
outsb
enter
xchg
xchg
xchg
adcl
sbb
xchg
fwait
xchg
jge
int3
jne
mov
jb
and
shrb
test
call
in
inc
fmul
lahf
daa
mov
fldt
das
lret
xor
xlat
rolb
push
bound
int3
inc
inc
inc
push
pusha
pop
adc
xchg
dec
pushf
loop
adc
push
out
int
fisubs
cmpl
ret
or
fcomps
inc
push
adc
inc
in
test
daa
loope
inc
dec
xor
into
mov
cwtl
sbb
aas
test
test
popf
repnz
xchg
pop
dec
fwait
aam
shll
fldenv
pop
xchg
cmp
xor
sarl
fdivl
sub
xchg
adc
fwait
cmpsb
or
and
ficoms
cmc
or
hlt
mov
or
inc
sbb
daa
adc
sbb
call
in
ret
in
dec
nop
inc
frstor
push
ret
into
stos
xchg
pop
cwtl
push
or
and
test
sbb
sti
int
jo
cmp
jbe
mov
sbb
cmpsb
inc
pushf
or
movsl
mov
rclb
add
xchg
mov
bound
stos
pop
aam
loopne
cmp
cmpsl
pop
fnsave
cmpsb
fldt
xchg
lea
mov
arpl
divb
stos
sti
fisubrl
shrl
and
ljmp
out
push
xchg
and
xorb
push
add
push
popf
lds
mov
add
test
sbb
pusha
sbb
cmp
add
jmp
subb
and
pop
jno
fsts
lahf
fcmovb
xorb
cwtl
mov
sbbb
xor
xlat
cs
xor
mov
outsb
jp
imul
mov
rolb
jge
sahf
pop
jge
mov
nop
adc
cmpsb
popf
jbe
add
sahf
repz
into
xchg
shrl
xchg
lahf
test
mov
repz
je
adc
mov
ficomps
pop
adc
shll
lods
sbb
iret
lods
jg
adc
subb
add
int
or
stos
cltd
rorb
jo
ljmp
pop
dec
in
out
dec
dec
xchg
jg
aam
xchg
cltd
push
cmpsb
ja
pop
shlb
rcrl
inc
jle
into
cmpsl
in
scas
sub
jb
mov
mov
dec
pushf
fldt
sub
push
stos
movsl
pop
or
xor
xor
and
call
xchg
test
lret
int
je
imul
cmpsb
pop
and
add
loop
fisttps
fbstp
cmpsb
xor
cmp
shll
lret
push
jge
or
pop
lea
sbb
adc
cmp
pop
xlat
in
into
xchg
sbbb
and
xchg
movsl
pop
scas
fistps
addl
xchg
out
dec
jmp
aam
divl
or
rol
aaa
fimull
mov
and
xchg
int
mov
push
mov
fsubrl
push
jge
dec
mov
mov
aas
rcl
jl
out
add
sub
sbb
stos
add
movsb
mull
push
xor
add
cli
sbb
aas
xlat
leave
pop
sbb
mov
mov
fidivl
stc
daa
insb
clc
mov
pop
std
shrl
push
shrl
lea
aad
insb
sub
add
popa
cmp
sbbl
out
scas
filds
addr16
lcall
insl
xchg
mov
dec
push
clc
xlat
cmp
sub
mov
je
ficoms
sub
cmp
in
ljmp
sarb
addl
inc
aam
inc
cld
fwait
pop
sti
cmpsl
push
popf
cld
vcvtsd2si
test
sbb
jp
test
mov
sbb
lahf
cmp
dec
jne
dec
shr
enter
xchg
lret
dec
insb
lock
jnp
imul
loope
imulb
popf
push
xchg
ret
push
xchg
int3
fnstenv
xchg
je
scas
loope
sub
pusha
mov
add
js
lret
addr16
xor
jg
sahf
pop
and
loop
mov
testb
nop
lcall
bound
add
inc
lods
std
movsb
movsl
xor
sbb
lea
outsb
shl
pop
sahf
out
mov
mov
mov
adcb
mov
dec
outsl
xchg
je
mov
jecxz
xchg
jmp
and
push
cwtl
scas
ror
lahf
outsl
sub
shlb
lret
gs
dec
jns
sbb
lea
mov
inc
shlb
cmc
popa
repz
jge
bound
push
xor
leave
scas
xor
xlat
pop
into
repz
cmp
fisubs
mov
dec
iret
mov
xchg
popf
cmpsb
hlt
icebp
lods
cmpsb
pop
lods
xchg
xchg
sarb
sahf
xlat
lret
lret
add
outsb
je
fadd
xchg
lock
inc
push
out
mov
leave
out
popf
jo
aad
cmp
fists
mov
xchg
mov
cmp
loope
icebp
cmpb
jne
dec
lea
inc
ret
test
out
cmp
add
xchg
clc
and
enter
and
mov
cwtl
cmp
add
fisubrl
ffree
cwtl
xchg
xor
push
movsl
enter
jb
movsl
add
stc
push
mov
lar
ljmp
scas
out
inc
mov
jns
sub
test
and
cmpsl
lret
adcb
push
add
xlat
shrb
cwtl
push
mov
mov
mov
pop
jne
cmpsb
sarl
sub
xchg
jbe
or
adc
mov
pop
cld
mov
inc
pop
add
cmp
mov
loopne
insb
repnz
sbb
lea
pop
pusha
aad
imul
xchg
dec
xor
xor
mov
mov
sahf
aad
mov
sti
xchg
push
gs
lcall
jp
mov
out
sbbl
jle
jmp
lret
in
call
rolb
rol
inc
sahf
data16
lods
pop
inc
sahf
inc
movsl
fwait
sub
sub
cwtl
jle
rorl
push
lret
add
xchg
addr16
xor
jge
filds
das
jo
mov
stos
or
cmc
push
cmp
aaa
xor
stos
sbb
adc
fldt
jne
dec
popf
das
add
add
out
cmpsb
or
ss
pop
je
mov
addr16
ficoml
pop
out
xchg
xchg
mull
inc
popf
es
add
add
ret
jle
sahf
popf
frstor
lds
xchg
xor
imul
gs
lahf
and
mov
stos
scas
pop
in
aaa
fistps
mov
sahf
ret
pop
shlb
jae
xchg
ja
lock
jno
testb
sbb
sbbl
push
inc
aad
xchg
loopne
nop
xlat
adc
xchg
sbb
fnstsw
ja
add
jae
dec
and
inc
aad
in
sub
dec
xorb
movsl
aas
out
jae
mov
sahf
add
push
dec
xor
cmp
mov
cmp
sarl
fsubrl
sbb
pop
cli
scas
lea
jmp
mov
sub
or
inc
in
xchg
xchg
rcll
out
cmp
fnstsw
lea
scas
sub
lea
dec
dec
fcoml
xchg
mov
mov
shll
cmp
test
xchg
test
lea
cmp
sub
pop
or
out
int
into
jbe
push
mov
nop
clc
xchg
xlat
les
mov
insb
jae
fmul
mov
cmp
aas
fnstsw
je
shll
les
adc
sub
in
jg
sub
int
movsb
inc
movsl
xlat
dec
inc
in
out
jle
xchg
shlb
pop
cltd
xchg
cmp
std
mov
pop
aam
mov
fwait
or
push
popa
jmp
daa
jp
sbb
xor
mov
adc
push
push
adc
fs
and
imul
lods
xchg
imul
movb
jae
imull
dec
call
aaa
cmpsb
or
aaa
mov
add
jne
and
aam
icebp
pop
stos
mov
popf
xchg
leave
das
int3
fcomps
jmp
sbb
mov
shrb
ss
pop
and
lods
mov
pop
mov
enter
aas
xchg
pop
test
cltd
xchg
cmp
ss
in
lahf
and
mov
pop
pop
jb
jb
mov
ljmp
bound
jl
pop
shl
mov
scas
popf
push
repnz
jmp
pusha
test
sub
rclb
inc
add
jbe
jp
es
call
push
xchg
popf
out
push
das
repnz
jnp
cmp
pushf
xor
xchg
mov
shll
adc
pushf
pusha
jle
xor
int
xlat
out
rcrl
sahf
rcrb
push
lret
mov
jp
test
or
fdivs
add
leave
mov
mov
and
xchg
or
incb
adc
orb
outsw
xor
jp
xchg
jne
ss
lcall
xchg
cmp
fwait
dec
jg
jo
xchg
adc
bound
sbb
sbb
sarb
xchg
sahf
imulb
std
sti
mov
push
arpl
xor
pop
jae
lds
fstp
jecxz
pop
adc
xchg
and
jge
push
bound
mov
lods
loope
inc
shll
cs
inc
insb
sub
mov
ss
into
in
jb
mov
daa
ljmp
aad
sbb
movsl
ja
mov
xchg
popf
ret
shll
andb
js
sub
push
xor
cld
mov
cmpsb
push
pusha
ja
call
and
sti
push
test
xchg
or
mov
daa
cmp
pop
fdivrl
jne
sbb
lds
pop
add
in
pop
aad
and
rorl
test
leave
cld
fnstenv
ret
sub
out
xchg
int
xor
jp
js
mov
xchg
loope
mov
mov
iret
add
mov
sub
mov
ja
or
push
lahf
mov
aaa
and
test
hlt
pop
movsb
cmpsb
xchg
arpl
sub
xlat
xchg
dec
and
mov
mov
inc
pop
fldenv
repnz
pop
pop
gs
fst
add
iret
mov
xchg
sbbb
inc
xor
cld
inc
fwait
int
xchg
and
out
pop
arpl
mov
subl
and
movsb
and
aas
or
jnp
sti
test
sub
fwait
xor
or
and
test
mov
test
in
lods
cmpsb
xchg
gs
xchg
inc
and
arpl
cmp
mov
scas
fsubrl
lcall
jbe
pop
jb
push
mov
fisubs
cmpsb
adc
in
arpl
shll
movsl
push
std
ret
mov
leave
cmpsb
int
pop
fldcw
xor
mov
shl
inc
lahf
rclb
fdivr
adc
incl
in
mov
mov
icebp
mov
pop
mov
mov
pop
test
cli
imul
mov
add
mov
insb
js
cwtl
sub
cwtl
cmp
cld
repz
cmp
push
inc
or
mov
fisubrs
rcl
inc
mov
pop
cwtl
add
xchg
mov
cmp
add
out
push
inc
bnd
cwtl
push
mov
adc
push
push
ret
or
inc
lret
test
xchg
scas
js
pop
xchg
fmul
mov
icebp
xor
add
jge
in
xchg
subb
cwtl
popf
inc
jbe
xorl
pop
ret
ret
lahf
jns
push
jg
test
dec
cmc
popa
sbb
mov
cmp
sti
xchg
nop
lret
xlat
cmc
sbb
inc
mov
inc
push
cmp
aaa
loopne
inc
xor
dec
test
cmp
pop
cmp
aad
aas
je
mov
inc
inc
ss
cwtl
inc
mov
fsub
adc
sbb
movsb
mov
loop
aaa
push
aad
inc
test
push
insl
add
cwtl
in
xchg
dec
and
iret
aas
pushf
mov
insb
je
cwtl
gs
adc
inc
cwtl
mov
add
push
aas
ret
in
mov
in
jae
sbb
xor
lret
push
jl
mov
int3
push
jae
movsb
leave
dec
add
imul
inc
cmp
cwtl
mov
jmp
cwtl
push
mov
sbb
stos
sub
inc
cli
out
aad
mov
mov
fistl
icebp
sbb
inc
mov
cmp
sbb
addr16
hlt
aad
inc
in
popf
pop
out
xor
rol
je
jns
push
jae
adc
pop
int
jge
rcrb
mov
insb
sub
cwtl
test
jmp
cwtl
push
mov
or
push
dec
ret
sbb
arpl
push
inc
rcrl
mov
nop
mov
stos
aas
pusha
mov
insl
les
jmp
xchg
pop
mov
fcoml
push
dec
push
scas
cwtl
xchg
inc
repnz
fmulp
test
mov
jns
push
jae
lods
leave
push
std
imul
insl
cmp
cwtl
jno
loop
pusha
cwtl
push
mov
sub
pop
ret
or
aaa
jns
sub
daa
ret
cmp
fistl
xlat
sbb
and
push
in
cld
xchg
outsb
xor
inc
push
nop
xchg
inc
ret
cwtl
out
mov
xor
push
ja
test
dec
jns
pop
arpl
nop
push
sbb
xor
decl
mov
insb
fs
cwtl
inc
inc
cs
cwtl
inc
mov
loopne
adc
sbb
cwtl
shlb
xor
push
outsl
ret
mov
pop
das
xchg
cld
leave
inc
lods
jle
cwtl
inc
je
repz
inc
lret
jl
jmp
xlat
xor
and
push
cmp
aaa
in
or
pop
sahf
mov
jo
pop
mov
push
push
outsl
xchg
mov
pop
sbb
call
inc
mov
insb
cmp
xchg
fstl
repnz
fcoms
fwait
ret
mov
jg
adc
pop
xchg
or
xor
xlat
xchg
pop
xor
jmp
and
add
xchg
ficomps
pop
cwtl
push
mov
adc
pop
jns
and
push
xchg
xchg
and
xor
pop
lea
mov
insb
jl
cwtl
sub
cwtl
sub
hlt
pop
pop
sub
loopne
inc
insl
pop
pop
pop
leave
mov
ret
test
ret
aas
fsubrl
cwtl
or
jmp
xchg
adcb
mov
insb
sub
cwtl
jge
loop
dec
cwtl
repnz
inc
int3
push
ja
movsb
test
arpl
nop
pop
sbb
xor
decl
mov
insb
pusha
add
or
mov
or
push
aas
ret
in
mov
or
xchg
push
into
lret
xorb
ret
mov
push
mov
stc
fadds
mov
lds
jmp
cwtl
shlb
pusha
rclb
xchg
ret
int3
test
push
xchg
or
aaa
fst
mov
inc
mov
pop
inc
cwtl
mov
insb
je
cwtl
xor
jmp
cwtl
mov
rcr
push
inc
rcrb
inc
xchg
pop
sbb
subb
xchg
enter
xlat
dec
sbb
fdivrs
push
mov
jno
shl
aaa
js
mov
inc
int3
scas
ja
test
xchg
adc
pop
arpl
stos
mov
lret
call
out
mov
cmpsb
call
ret
popa
sbb
stos
mov
incb
enter
adc
filds
clc
fisttpll
pop
movsb
jg
cmp
roll
negb
sub
and
bound
aam
sbb
aas
mov
sahf
mov
mov
cmc
imul
cmc
ja
jecxz
cli
xchg
fidivrl
mov
jp
pop
daa
mov
cld
int3
test
ja
push
inc
mov
mov
in
pop
xchg
cwtl
mov
xor
mov
mov
repnz
sub
ljmp
mov
add
sub
scas
and
arpl
mov
in
add
mov
jae
pusha
addr16
test
xchg
pop
xchg
push
push
arpl
inc
mov
pushf
stc
test
adc
inc
mov
sbb
jmp
ss
cmp
adc
repz
jle
loop
mov
mov
fsubrs
inc
mov
pop
stos
icebp
cmp
cmp
push
xor
lds
xlat
xchg
lahf
daa
fwait
dec
xchg
rorl
push
imul
cmp
je
aam
adc
movsl
or
es
in
dec
lea
bound
add
popf
in
loop
cmp
pop
push
pop
cli
mov
xchg
push
mov
xchg
pop
cmp
lock
pop
add
pop
xor
icebp
fs
add
lock
xchg
enter
shrl
scas
mov
push
clc
mov
insl
push
jne
inc
shlb
movsb
add
adc
adc
movb
adc
sub
ja
pop
shl
mov
out
into
jns
out
scas
pusha
sti
inc
out
sub
int3
xchg
lock
in
stos
std
mov
dec
bound
xor
mov
lret
mov
in
xchg
push
movsl
xchg
push
int3
mov
outsl
lcall
jne
mov
cmp
mov
hlt
pop
mov
pop
xchg
mov
mov
cmp
jg
jo
stos
dec
addr16
std
lods
and
push
aas
test
flds
in
outsl
in
pop
fisttps
cmp
push
pushf
jbe
or
sbb
push
mov
push
pop
enter
add
cs
hlt
fnstenv
mov
push
add
into
addb
sti
pop
fwait
lds
lahf
pop
iret
jg
dec
scas
or
push
jbe
add
cltd
dec
mov
idivb
inc
sbb
xchg
stc
xchg
push
lret
arpl
dec
mov
cld
mov
addr16
hlt
ret
cwtl
andl
jbe
mov
movsl
sub
adc
test
mov
cmp
push
pop
inc
dec
mov
lret
add
mov
push
repnz
pop
shll
xchg
jne
repnz
sbbb
addr16
fnstsw
pop
add
les
jae
inc
push
mov
push
rol
and
sbb
xor
xlat
push
inc
sahf
pop
pop
enter
loopne
outsl
cwtl
xor
or
and
push
arpl
rcl
fmulp
adc
adc
lds
jl
test
scas
out
push
mov
rclb
cwtl
push
xor
lcall
push
pop
nop
xor
negl
inc
testb
xorb
mov
cmpb
fistps
aad
dec
outsb
mov
mov
jae
out
fs
mov
es
inc
xlat
sarb
adc
in
cmp
jp
jno
sub
movsb
ss
daa
jl
jmp
mov
jno
das
popf
add
push
cltd
push
mov
mov
pop
out
lea
scas
imul
into
and
in
popf
iret
data16
push
xsaves
xchg
bnd
xchg
test
jo
sbb
mov
aas
cmpsb
xchg
push
adc
shll
mov
scas
ficoms
or
clc
xor
push
outsb
dec
xor
add
pop
xor
sbb
and
or
pop
mov
insl
push
lea
mov
xchg
cltd
push
mov
pop
out
roll
inc
mov
pushf
inc
ljmp
and
imul
test
fwait
mov
enter
out
mov
daa
mov
xor
iret
xchg
clc
xor
pop
mov
rcl
stos
aas
cwtl
mov
inc
inc
pop
jo
repz
pusha
mov
jp
mov
imul
push
mov
mov
ja
cmp
lcall
aas
shr
lret
mov
lds
pop
push
ret
and
adc
mov
out
inc
ret
pop
sahf
cli
and
cmp
lock
ret
inc
xchg
nop
cwtl
jp
mov
jb
mov
or
and
pop
sub
movsl
sbb
sbb
pushf
in
adc
mov
cmp
mov
outsl
mov
pop
mov
xor
ja
and
shl
pop
shrl
pushl
jo
fnsave
cmpb
test
adc
ss
sbb
mov
cli
shlb
or
or
pop
inc
pusha
or
xor
xchg
and
dec
push
jge
mov
push
aas
cltd
xchg
in
xor
adc
inc
aad
mov
inc
sbb
jg
push
popf
out
pop
xchg
mov
pop
mov
mov
push
shrl
stc
dec
repz
addb
loopne
cmpsl
cmp
push
scas
rcrb
mov
cmc
aas
outsl
sub
jne
pop
and
pop
sbb
hlt
mov
jo
cmp
dec
andb
xchg
dec
mov
xchg
das
lods
pop
daa
dec
cmp
mov
loopne
ja
jb
mov
inc
sbb
mov
pop
pop
xchg
xor
ss
adc
leave
cwtl
mov
cmp
push
sbbl
and
add
and
jecxz
push
popa
lret
loop
push
loopne
push
rcrl
mov
ret
push
cmp
into
test
ss
cmpl
test
pop
sar
out
imul
dec
mov
roll
adc
push
loopne
cmp
xchg
mov
fists
js
loope
fs
xchg
outsb
xchg
adc
cli
int3
jae
dec
xchg
sbb
pop
jle
mov
xchg
pop
jl
and
fdivrl
popa
lods
mov
pop
ss
fwait
dec
outsl
sub
pop
fisttpll
sub
clc
bound
cmp
xchg
xchg
scas
int3
and
lret
inc
xchg
int3
mov
push
and
adc
xchg
push
adc
cmpsl
xor
out
imul
adc
cs
arpl
pop
and
mov
mov
test
inc
mov
mov
jb,pt
sbbb
out
mov
lret
sbb
inc
mov
jae
mov
inc
pop
push
out
pop
out
mov
mov
daa
inc
sub
pop
popf
dec
sbb
add
xchg
int3
les
push
in
pusha
int3
and
cmp
out
rorb
js
aad
or
dec
out
mov
mov
in
xor
sti
lcall
roll
loopne
or
inc
mov
fstpt
call
jl
movsl
and
or
in
xchg
jl
push
sti
sub
cmp
mov
inc
movsb
out
jl
shrb
mov
call
or
cmp
or
pusha
es
pop
xorb
xor
jmp
inc
mov
pop
les
in
rolb
arpl
pushf
dec
daa
stc
ds
inc
inc
fiadds
sub
outsl
mov
int3
mov
mov
mov
and
scas
mov
inc
push
subl
push
push
xchg
scas
xor
and
push
xor
pop
fnstsw
fdivs
das
rcl
push
addl
and
jg
lahf
popf
adc
sbb
or
jg
les
pop
sti
xlat
lods
stos
pop
and
jecxz
aad
je
lret
and
or
mov
pop
lock
pop
jnp
int
mov
cmp
xchg
pop
into
and
aaa
out
cmp
pop
and
xchg
jo
scas
cmp
inc
sti
movsl
jo
sbbl
xchg
jle
xor
push
addps
jnp
lock
cmp
sub
xchg
out
pop
push
outsl
jge
icebp
stos
mov
jmp
movsl
inc
shll
inc
cmp
arpl
or
pop
sub
inc
call
mov
jno
in
pop
sub
test
inc
jne
icebp
aaa
imul
lahf
stos
mov
scas
xchg
or
cmpsb
sub
mov
fdivr
test
aam
pop
insb
stos
js
pop
mov
mov
rcrl
xchg
mov
scas
and
dec
mov
adc
mov
sarb
cmpb
lock
addr16
pop
push
rcrb
dec
cmp
fwait
inc
shrb
pop
mov
das
adcl
mov
and
dec
adc
xchg
ljmp
mov
xor
int
iret
or
or
push
inc
pop
rorl
das
scas
jb
idiv
dec
pop
gs
mov
loopne
cmp
in
lret
add
mov
xor
rcll
lods
xorb
adc
movsl
add
imul
and
xchg
fmul
push
lret
and
lods
or
xor
std
das
gs
jle
aaa
push
fs
inc
jmp
mov
psadbw
cs
loope
setbe
push
jmp
les
dec
dec
jmp
js
std
sub
lds
sbb
dec
mov
enter
outsl
pop
sbb
mov
fwait
out
int3
mov
or
and
lock
repz
bound
mov
in
sub
adc
dec
mov
cli
dec
incl
mov
or
adc
sub
mov
cmp
lea
xchg
fimull
in
in
rcll
mov
mov
shlb
mov
mov
xchg
jle,pt
add
jecxz
dec
add
sub
xchg
popl
pop
mov
outsb
bound
xor
nop
sub
pop
jl
jb
stos
mov
add
push
rol
lret
add
cmp
test
jmp
push
push
aam
mov
xchg
push
shl
iret
lcall
clc
sub
adc
inc
xchg
dec
stos
sbb
insb
mov
xchg
mov
dec
sub
push
flds
dec
add
aas
fisubs
loop
add
xor
rcrl
xor
push
mov
movsb
ret
mov
adc
imul
push
imul
or
sub
inc
stos
inc
or
icebp
mov
lds
xor
pop
push
add
dec
aas
aaa
rcl
sub
mov
dec
mov
jns
arpl
pop
dec
pusha
xchg
push
shlb
shl
pmullw
insb
xor
xor
jo
and
sub
call
ja
mov
lahf
and
ficoms
push
stc
xor
xchg
dec
fs
and
cmp
inc
fbstp
xor
lods
jecxz
adc
and
mov
add
lods
or
pusha
dec
cltd
arpl
xchg
add
fsubrl
pop
iret
pushf
dec
jp
and
jo
jno
cli
stos
adc
stos
push
mov
shr
das
jge
mov
arpl
rorl
loop
pop
mov
loop
add
pop
mov
ljmp
es
sbb
dec
mov
xor
inc
ljmp
inc
inc
dec
mov
out
adc
lods
test
call
in
push
adc
mov
fst
lods
iret
mov
nop
cmp
cmp
sbb
mov
js
and
sbb
xchg
adc
imul
