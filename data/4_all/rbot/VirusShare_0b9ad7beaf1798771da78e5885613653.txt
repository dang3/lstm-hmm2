lcall
rcrl
xchg
xor
movsb
sbb
aas
ljmp
cmp
cmp
mov
adc
ret
lahf
js
dec
jnp
inc
mov
push
je
dec
clc
shrl
jae
ljmp
rorl
in
inc
or
sti
mov
jnp
ss
and
scas
scas
leave
xlat
flds
sub
lods
lock
in
sub
outsl
cwtl
mov
inc
xchg
in
aad
bound
dec
test
jnp
sbb
sub
iret
cmp
jge
gs
mov
lods
imul
inc
movlps
popf
mov
test
mov
test
push
sbb
pusha
out
xchg
push
sbb
cmpsl
jno
sahf
cmpsb
sub
sub
daa
das
lock
push
xor
jae
add
jle
sub
outsl
jno
test
insl
push
test
xor
test
ljmp
inc
adc
mov
add
mov
fldt
inc
pop
shlb
jbe
shrl
add
hlt
out
nop
xor
popf
jl
stos
mov
das
rclb
neg
lahf
outsl
ret
push
xchg
or
in
dec
into
add
push
popa
sbb
fwait
pmovmskb
push
fcmovnbe
and
jae
mov
sahf
pusha
pop
or
notb
fadd
mov
and
in
dec
lcall
inc
aaa
xor
xchg
cmc
ja
ficompl
popa
or
in
test
sub
aaa
lea
cmpsl
mov
rcr
inc
jbe
sub
int3
push
jno
xchg
pop
or
add
push
mov
rorb
cmpsl
mov
dec
mov
mov
and
cmp
mov
cmp
fstl
es
aaa
or
inc
ret
ficoml
xor
push
insb
inc
mov
test
imul
insl
cmp
out
es
inc
inc
notl
push
jno
sarl
out
lea
inc
mov
pushf
jns
xchg
vmaxps
push
mov
scas
dec
jno
xor
and
adcb
ja
mov
das
sarl
jge
sub
or
insl
outsb
cli
pop
mov
pushf
rcl
ret
inc
clc
xchg
scas
jp
daa
loop
mov
inc
loop
shl
and
inc
jmp
imul
jmp
inc
in
call
fldenv
in
ret
insb
insb
xchg
jbe
push
lahf
mov
sub
cmp
cmpsb
and
inc
jecxz
mov
pusha
dec
xchg
daa
lret
faddl
xchg
inc
and
pop
fldt
xor
or
jle
adc
mov
pop
sbbl
fnstsw
jmp
inc
jge
inc
incl
mov
nop
xchg
xor
pop
sub
jg
ficompl
ret
pop
pushw
mov
test
sbb
push
sub
add
out
inc
adc
jnp
xor
mov
push
popf
dec
xchg
add
adc
xor
jecxz
mov
dec
mov
add
call
xor
andb
jno
repnz
sub
imul
addl
or
sbb
mov
adc
es
push
sysret
mov
bound
iret
enter
outsl
lea
scas
enter
jge
imul
out
push
mov
jae
mov
sub
mov
sbb
mov
arpl
inc
pop
dec
aad
xchg
xchg
pushl
popa
sar
loopne
jecxz
or
dec
adc
mov
or
or
push
mov
fisttps
inc
out
in
mov
pmaxsw
test
mov
cltd
mov
shl
adc
out
cmp
jmp
mov
xor
loope
xchg
jecxz
xchg
test
cvtdq2ps
or
adc
es
xchg
push
adc
add
and
ss
sti
lods
xchg
addb
mov
adc
arpl
add
in
repz
dec
inc
notl
mov
imul
out
daa
adc
jnp
rorb
xchg
rcl
cltd
pop
adc
xor
jmp
cmp
mov
pop
or
in
jl
or
bound
mov
xchg
dec
jg
dec
pop
outsl
sti
pusha
in
dec
pop
jo
out
leave
in
ja
and
out
std
ret
lret
sub
jecxz
sub
jmp
dec
subl
pmulhw
adc
int
stc
cmpsb
adc
mov
ffreep
fldt
fistpl
fcoml
lods
addr16
jl
div
pop
enter
inc
pop
stos
notl
inc
jmp
jmp
fwait
xor
inc
idivl
add
xchg
push
adc
xchg
loope
push
cld
pop
in
icebp
test
xchg
out
fimuls
and
repz
mov
jae
cmp
aas
jle
inc
inc
fldt
adc
pop
jnp
lret
jecxz
lret
loopne
jo
cmpsb
adc
lods
ret
inc
lods
xchg
jnp
test
outsb
xchg
jb
in
fucom
mov
cmp
call
add
shrb
jne
out
out
sub
pop
pop
icebp
pop
xchg
pushf
cmc
push
add
addr16
mov
les
and
fwait
pushf
jle
mov
loop
mov
or
inc
inc
icebp
shll
pmaxub
sub
imul
cmp
mov
xchg
test
movsl
cltd
pop
or
rolb
subb
sub
cs
loopne
xchg
movsb
add
jl
sbb
sbb
cmp
in
idivl
lds
aas
cmpsb
std
lret
push
enter
repnz
xor
fldenv
test
push
xchg
add
mov
xlat
fisubrs
leave
mov
fstps
mov
daa
scas
fwait
out
adc
das
aad
out
cmp
xchg
xor
xchg
sbb
xchg
sarl
or
cltd
repz
cmp
cmp
aas
loopne
aaa
cmpsl
loopne
xchg
pop
in
arpl
mov
push
cmp
or
lods
cmp
xchg
dec
sbb
or
mov
fdivrs
mov
out
pusha
scas
pop
pop
cmp
mov
icebp
sub
rol
in
mov
int3
adc
sub
sbb
dec
in
repz
pop
pop
leave
call
shrb
jns
clc
ret
in
lods
fsubr
and
ja
push
mov
loopne
xchg
push
add
sub
xchg
dec
mov
pop
dec
setl
and
es
cwtl
xchg
push
xchg
aad
inc
xlat
test
arpl
inc
jmp
pushf
int
pop
imul
jecxz
add
jb
mov
mov
insl
adc
mov
mov
inc
lea
xor
dec
inc
pop
cltd
add
xor
mov
fwait
xchg
fucomi
adc
movsl
xor
enter
packuswb
imul
push
xchg
scas
and
outsl
sahf
rorl
test
imul
cmpsl
xchg
out
rcrl
mov
fistl
cmpsb
push
xor
xchg
mov
lret
mov
mov
negl
idivb
xor
fcompl
mov
lods
pop
and
gs
mov
mov
mov
pop
jbe
push
into
dec
jp
lcall
fwait
dec
rolb
rol
out
notb
push
inc
lcall
and
fcmovb
pop
add
pop
cmp
adc
aas
cmp
or
ja
es
pusha
xchg
insl
add
iret
fsubs
pop
pop
adc
jb
por
arpl
pop
and
daa
fstpt
int
daa
insb
pop
xchg
inc
jg
test
fldt
or
daa
insb
push
insl
push
adc
fsubrs
cmp
pop
push
es
sub
push
sbb
xchg
arpl
push
mov
mov
adc
dec
jae
xchg
cmp
or
iret
xor
notb
lahf
cmc
xor
cmp
subl
insl
sbb
jp
xchg
lret
mov
vmovaps
sub
sub
shlb
inc
lods
pop
inc
dec
jmp
xor
dec
sbb
push
lahf
pop
mov
fucomip
sub
in
ds
andl
mov
jnp
mov
sbb
mov
ret
fcmovnbe
mov
cmp
daa
fmulp
inc
inc
sbb
cmp
cld
xchg
xor
enter
or
jge
subl
out
cltd
ret
in
sub
cmc
aaa
in
sub
decl
sbbl
mov
sbb
nop
aad
repz
adc
hlt
pop
adc
aad
xor
cltd
fistpl
out
stos
rcpps
pushf
inc
outsb
mov
mov
pop
jg
xor
push
rcl
inc
xchg
out
popl
sahf
dec
jmp
sti
out
testb
cmp
out
sbbl
dec
cwtl
and
cmp
mov
fdivl
loopne
push
mov
rcrb
cmp
push
das
imul
mov
je
fsubl
adc
sbb
add
cmpsl
iret
push
cli
adc
pop
cld
icebp
or
push
shl
add
frstor
mov
cmp
lds
leave
or
or
ljmp
cmpsb
das
aas
xchg
mov
nop
xor
mov
pop
sar
mov
sar
xor
es
or
add
ficoml
inc
xchg
cwtl
out
or
dec
cltd
es
inc
push
cmpsb
and
shll
lahf
sbb
aaa
adc
fidivrs
scas
shrl
or
arpl
ret
xchg
mov
fmull
outsl
mov
push
fwait
lods
mov
jb
shll
sahf
xor
mov
sarl
fmull
xor
movsb
mov
out
dec
mov
dec
decl
enter
inc
xor
rcrl
sub
xchg
fidivrl
aas
push
jl
sub
lahf
stos
jbe
push
hlt
jne
dec
push
mov
or
push
in
lock
mov
or
test
or
pop
addr16
out
xor
xchg
cli
mov
mov
push
ret
lods
push
pop
getsec
sahf
sub
and
fwait
data16
xchg
dec
jbe
inc
cmp
and
lahf
ficoms
lods
mov
xor
bswap
sti
cmp
arpl
and
aad
jae
xchg
repz
iret
inc
jecxz
mov
lret
jge
jp
cmpsl
xchg
cmp
add
mov
stc
pop
pop
loop
outsb
pop
cmp
inc
out
jmp
mov
cli
add
adc
jb
das
push
dec
add
jg
xchg
enter
xchg
jge
aas
push
lcall
lret
addr16
and
jo
aas
dec
mov
orl
inc
push
sub
jbe
jno
pop
and
mov
sub
loopne
cmp
mov
mov
roll
mov
testb
cmpsb
dec
jmp
push
inc
and
ja
xchg
stc
or
dec
ret
stos
inc
adc
fisubrs
sub
xchg
aad
add
mov
and
adc
enter
mov
push
shrb
mov
mov
adc
push
inc
dec
dec
push
xchg
cmpsl
dec
adc
mov
cmc
cmp
std
andb
xchg
popf
clc
push
mov
out
sbb
mov
pop
je,pn
pop
les
dec
jmp
mov
push
cmpsl
in
jecxz
in
and
mov
mov
jmp
cmp
push
and
sub
jl
loop
stos
cmpsl
cmp
divb
xor
sub
dec
jns
pop
inc
inc
enter
inc
fmull
shlb
jae
pop
hlt
ja
cmpsb
loope
or
pop
or
add
adc
stc
sbb
inc
popa
sub
add
adc
mov
mov
inc
mov
sub
pushf
xchg
pop
aaa
jecxz
push
pop
mov
pop
sbb
mov
xor
xlat
int3
jecxz
int
cli
rcll
sahf
lds
lods
inc
sbb
mov
jmp
stc
scas
add
ds
push
mov
inc
xor
outsb
bound
repz
loope
dec
xchg
in
push
cmpsb
xchg
inc
lods
inc
jle
mov
mov
cmp
mov
out
enter
dec
mov
mov
cmpsb
push
ljmp
xor
out
ds
xlat
das
in
inc
imul
dec
mov
jecxz
or
sub
inc
shrl
and
jns
mov
mov
sub
sbb
pushf
pop
ds
inc
jb
lret
xor
jp
in
xchg
adc
inc
mov
sub
add
mov
add
filds
stos
xchg
imul
cwtl
mov
push
hlt
xchg
and
das
popa
add
add
daa
inc
jle
cmp
inc
jle
out
dec
inc
mov
fcmovb
lret
repz
ret
rorb
loop
sbb
sub
mov
lods
movsl
dec
sbb
xchg
mov
shlb
shlb
stos
ds
xchg
or
test
bound
mov
adc
push
or
mov
jge
mov
arpl
xor
inc
stos
repnz
xor
xor
sahf
test
xchg
fistps
nop
mov
imul
das
xchg
test
fistps
ffree
imul
ja
fsubrp
aas
jae
dec
bound
popa
hlt
fisubrs
ja
mov
xlat
ljmp
adc
and
xor
xchg
std
call
push
sub
inc
and
sub
cmp
call
mov
hlt
imul
loop
cmpsl
lahf
dec
adc
popf
ja
sub
lods
mov
jl
shl
sbb
mov
push
or
daa
sub
ja
cwtl
fadds
add
lret
dec
jns
xor
test
sub
push
jbe
or
jecxz
or
lea
sub
js
lds
inc
pop
nop
adc
ss
mul
and
outsl
jb
dec
fstpl
inc
fdivr
pop
popf
pop
mov
aad
jg
lret
fnsave
fstl
outsb
adcb
sub
mov
outsb
jno
cmpsl
push
dec
sbb
pop
repnz
fnstsw
xchg
sbb
test
xchg
mov
int3
push
xor
idiv
mov
out
xor
push
or
call
iret
movsl
pop
jae
andb
pushl
mov
shlb
cmp
int
sub
movsl
lret
lret
jnp
stos
in
fisubl
dec
scas
rolb
ss
lret
adc
ret
loop
sub
out
push
std
xlat
or
jg
inc
xlat
lods
lahf
mov
insb
ret
or
cmpl
daa
in
cltd
cmp
xchg
out
hlt
inc
xor
mov
faddl
filds
xchg
cmp
xchg
je,pt
inc
neg
mov
out
icebp
pop
xor
fsub
xor
push
imul
ja
pop
loopne
mov
xor
insb
jae
cltd
add
adc
cltd
xchg
cmpsl
out
sub
jnp
ret
jp
jmp
fisubrl
out
mov
outsb
push
push
cmp
sahf
gs
fcmovbe
cwtd
xchg
mov
dec
mov
jb
add
lods
fdivrs
xor
jmp
pusha
sub
push
fbld
gs
mov
test
sysenter
ficompl
lcall
mov
sbb
xlat
pop
cmp
rorb
push
test
outsl
xchg
lahf
enter
ret
out
xchg
cmp
dec
fisubl
dec
dec
xchg
cld
sarb
dec
add
cmp
rep
mov
pop
inc
xor
aaa
in
cmc
test
fcoms
lea
sub
jo
imulb
add
mov
lret
leave
and
and
add
rol
sahf
leave
lock
fwait
push
je
or
fwait
mov
xor
fwait
pushf
hlt
es
ret
fmulp
mov
cmp
mull
pushf
xor
test
dec
iret
jmp
push
cmp
sar
lock
mov
mov
call
adc
sub
leave
sbb
movl
adc
xchg
imul
mov
xor
dec
mov
inc
inc
aad
outsb
bnd
lock
outsl
je
cmp
loopne
or
repz
inc
mov
push
loope
mov
fstps
cmp
mov
push
in
xorl
imul
scas
insb
aas
xchg
sti
scas
inc
ljmp
jge
es
cmpsl
fstpt
int
test
outsl
lods
sub
bound
aaa
mov
mov
pop
pop
xchg
inc
cmpl
xchg
ficoml
sub
jbe
scas
xchg
mov
daa
dec
inc
sti
pop
adc
repnz
xor
inc
js
notb
addr16
fldcw
xchg
mov
xchg
mov
sbb
and
mov
add
jae
test
sbb
adcl
fisttpl
pop
nop
stos
mov
adc
sub
mov
repnz
movsb
xchg
dec
mov
negl
inc
pop
mov
mov
jns
cmp
sbb
pop
stos
lcall
cs
int3
cmpsb
cmpsb
inc
lret
loopnew
pop
nop
mov
and
pushf
jb
or
lods
ss
fisttpl
test
insb
movsl
or
jle
ljmp
shll
insl
pushl
in
into
dec
push
and
cmpb
pop
jecxz
rcr
jbe
inc
lahf
jecxz
cmp
push
repz
xchg
aaa
jbe
pop
std
mov
imul
mov
into
aam
cltd
sarl
xor
lcall
bound
adcb
push
and
fidivrs
imul
repnz
popa
stos
cmp
mov
and
dec
inc
xor
pop
push
xor
out
inc
adc
mov
or
xor
push
jg
and
mov
lret
in
inc
mov
xchg
test
in
pop
in
and
test
insb
aas
imul
loope
xor
bound
ljmp
and
or
pop
cmp
adc
aaa
sarb
cmpsl
bound
mov
inc
adc
push
inc
fldt
out
fisubrs
scas
into
ljmp
outsb
call
nop
add
movsb
xchg
enter
aas
into
push
mov
fnstcw
xchg
loop
rcrl
negb
inc
std
dec
das
jg
pushf
lret
andl
dec
nop
jmp
mov
adcl
in
inc
or
dec
xchg
outsl
mov
mov
loop
sbb
pop
shrb
or
sub
xchg
mov
inc
movsb
sbb
inc
adc
push
xchg
incb
fildl
movsb
dec
or
xor
pop
popa
cmpsb
sbb
icebp
adc
mov
inc
cmp
int3
repz
jle
test
popf
xor
or
test
outsb
enter
dec
enter
and
outsl
xchg
push
jno
rorb
cmp
addr16
mov
cmpb
ss
push
dec
lret
cmp
aas
mov
jne
in
in
lcall
xlat
repz
dec
push
popf
push
adc
fwait
xchg
cmpsl
ret
lahf
jnp
xlat
in
aad
ret
subps
decl
inc
icebp
or
and
mov
xchg
mov
and
inc
popa
sarb
xor
jb
push
movsb
mov
add
cmp
mov
lds
push
stos
push
das
add
xor
xchg
pop
fildl
and
mov
dec
dec
inc
movsb
mov
and
mov
cli
ja
outsl
std
pop
fcoms
pop
data16
call
inc
fiaddl
pop
lret
fldl
jp
xchg
test
cmp
icebp
or
xchg
push
or
xorl
and
mov
pop
mov
xor
push
mov
in
int
jmp
jnp
loop
xlat
xlat
xchg
movsl
cmp
out
insb
fdiv
iret
bswap
mov
push
dec
out
rorb
ja
adc
pop
lock
xor
and
cmp
imul
lret
call
xlat
out
xor
movsl
and
out
add
ud2
cmpsl
outsb
dec
gs
or
xor
mov
jnp
nop
pushl
iret
mov
pop
out
cmpsl
test
inc
push
sbb
adc
stc
outsl
inc
fstl
es
add
mov
push
daa
mov
adc
add
dec
fisttpll
jbe
popf
push
scas
push
mov
flds
outsl
std
pop
lahf
fwait
das
jb
in
rolb
das
int3
cmp
test
inc
fists
and
push
mov
mov
sbb
xchg
sbb
jns
int
jmp
movsb
add
inc
subb
push
add
aaa
aam
push
stos
inc
pop
sbb
dec
daa
pop
sub
sub
imul
and
sbb
jl
in
inc
mov
aaa
call
insb
rolb
pop
push
mov
dec
inc
cltd
inc
push
pop
cmpsb
or
or
arpl
xchg
cmp
sbb
or
sbb
aaa
inc
test
sbb
outsb
pop
out
addr16
enter
subb
and
cwtl
int3
mov
jb
adc
loop
sbb
add
fimuls
aam
ds
lret
dec
cli
mov
pushf
dec
push
sti
pop
mov
sbb
add
mov
ffreep
push
jl
push
push
into
inc
subl
xchg
outsl
stos
and
adc
rdpmc
mov
movsb
insl
mov
leave
push
jae
out
clc
fildl
mov
das
add
stc
pop
mov
ds
leave
les
rorb
mov
sti
andl
jecxz
lock
mov
out
mov
dec
ds
cltd
dec
xor
addr16
sbb
add
ficompl
and
fistpll
mov
ret
add
xchg
jo
push
popa
fwait
mov
pop
dec
sub
lcall
adc
rorl
xchg
bound
mov
push
mov
ret
mov
and
fiaddl
xor
addb
daa
xor
push
aaa
cmpsl
inc
and
and
jmp
mov
sub
inc
mov
xchg
xchg
xchg
daa
mov
mov
xor
arpl
pop
repz
jmp
mov
jb
cmpsl
cli
es
or
dec
jns
mov
or
rcl
int
dec
mov
into
mov
mov
ror
jbe
or
cmc
xor
adc
or
je
lods
rcll
inc
data16
mov
imul
or
xchg
xcrypt-cfb
cmpsl
loop
dec
xchg
sub
mov
xor
jns
int
inc
into
loopne
cmp
xor
mov
xor
popa
pop
int
les
cli
mov
lock
bound
jno
ret
sbb
in
testl
lods
and
sar
scas
pop
stc
mov
ror
and
cs
adc
hlt
and
inc
mov
in
adc
hlt
sbb
ds
inc
frstor
pop
mov
cmpsl
ret
or
popa
mov
sar
xchg
std
out
pop
rclb
mov
int3
ss
pop
cmpsb
inc
push
mov
clc
cmp
ja
stos
mov
jge
mov
out
xlat
adc
mov
inc
adc
in
xor
stc
xor
jge
repz
test
fldl
sbb
pop
pop
inc
fidivrl
ss
stos
ret
jo
les
push
jno
hlt
mov
leave
rcrl
in
ljmp
in
cmp
imul
xor
sbb
push
sub
add
dec
js
loopne
out
cmpsb
add
into
and
xor
out
jg
mov
mov
and
mov
jecxz
test
cld
xor
ret
ljmp
fwait
mov
and
out
sub
xchg
cmp
fldenv
pop
js
inc
fs
std
imul
adc
mov
ds
xchg
mov
mov
arpl
xchg
mov
movsb
adc
push
in
or
sub
push
mov
stos
fadd
push
aad
xorl
fstps
stos
loop
movsb
xchg
add
stos
fists
push
fwait
sub
rorb
fsub
inc
cli
int
xchg
inc
pop
out
leave
cmpsl
movsl
cmc
or
mov
out
sbb
mov
mov
cs
cmp
jo
push
dec
in
mov
ss
divb
std
fcoms
subl
shl
cwtl
dec
or
pop
sbb
imul
xchg
cli
in
data16
aam
fwait
dec
jno
test
cmp
jo
outsl
jns
jg
pop
inc
insl
inc
inc
jmp
jp
xchg
mov
sahf
jg
push
xchg
xor
jl
adc
arpl
mov
ss
mov
mulb
cmp
jmp
dec
test
fwait
lds
daa
fdivs
test
mov
mov
xchg
xchg
adc
aas
adc
mov
adc
filds
movsb
out
cmp
rorl
cld
inc
and
outsl
sub
add
popa
in
xor
pusha
in
sbb
xor
add
insb
jle
pop
iret
xor
inc
pop
mov
jae
fbstp
cwtl
out
push
inc
dec
ss
mov
mov
cwtl
and
jbe
fwait
jecxz
mov
stc
xchg
in
popf
roll
mov
inc
or
and
jl
xor
adc
ja
and
jo
push
ret
loope
fnsave
insl
and
cmc
gs
negb
pop
mov
mov
jno
std
mov
inc
lret
popf
xchg
idivb
data16
inc
outsl
lahf
or
outsb
pop
mov
in
icebp
enter
lret
pop
or
movsl
rclb
fstl
fdivrs
and
unpcklps
mov
jns
adc
mov
and
ret
psubsw
pop
or
sub
pop
sub
cmp
scas
inc
add
sahf
dec
ret
scas
push
jb
mov
insl
xor
jmp
pop
pop
imul
rorb
cmpsb
enter
shr
cs
mov
ss
pop
ljmp
lahf
xor
repnz
adc
sbb
aam
cs
ja
push
lcall
pop
sub
adc
mov
les
repz
lret
and
scas
cwtl
xchg
pushf
ds
call
sbb
push
cmpsl
push
jecxz
pop
xchg
sahf
mov
loopne
and
jl,pn
daa
jo
jbe
xor
sbb
push
dec
adc
xor
inc
mov
mov
out
lret
inc
mov
pusha
gs
rclb
movsb
xor
or
shlb
nop
xchg
sahf
xchg
sbb
or
xchg
pop
out
sarl
test
sahf
cs
call
inc
add
sbb
jne
push
jmp
in
adc
mov
in
cltd
scas
sbb
mov
mov
leave
leave
repnz
ljmp
pop
cs
mov
sar
ja
aaa
jnp
mov
push
lds
dec
inc
out
mov
jmp
and
into
add
loop
iret
in
test
adc
mov
pop
lods
repnz
rcl
mov
cltd
adc
ds
cmp
mov
aas
in
js
xor
mov
and
leave
shl
sbb
xor
shl
aas
xchg
sub
xlat
adc
cmpsl
cltd
mov
jg
out
imul
jp
cmp
inc
pop
faddp
js,pn
ror
cmc
or
rorb
cmpsl
or
jg
push
mov
cli
dec
jns
iret
jle
xor
out
in
xchg
sbb
pop
iret
sub
or
out
scas
out
scas
lret
ud2
pop
lret
cld
shrl
lods
and
pushf
adc
and
cmp
sub
in
mov
adc
hlt
xchg
push
cmp
imul
out
and
lret
pop
jbe
sub
pop
push
dec
aaa
adc
lret
rcr
enter
mov
xchg
fstpl
xchg
lea
shl
movl
cmpsl
lcall
loope
xchg
loopne
subl
loop
mov
cwtl
lcall
repz
sub
inc
push
addl
mov
aas
mov
cmp
ss
cmp
adc
sub
jbe
in
mov
in
dec
push
sbb
ss
nop
ret
xchg
pop
mov
pop
daa
jb
mov
cmpsb
rcrl
daa
adc
pop
xchg
movsl
out
ja
mov
push
pop
push
mov
dec
sahf
xchg
pushf
aad
pop
pop
and
push
ret
test
sub
inc
lds
scas
cld
dec
ret
add
sbb
dec
dec
push
inc
jae
sub
pop
mov
xchg
rcrl
lods
pusha
pop
dec
or
push
loopne
mov
cmp
neg
emms
add
mov
push
jns
dec
daa
jo
fwait
imul
ljmp
movsb
push
cmp
inc
ret
pop
shl
out
and
add
sub
insl
cltd
adc
fwait
loop
dec
in
cs
lret
push
sbb
lock
add
stc
mov
outsb
popf
mov
ja
dec
pop
stos
jecxz
sbb
and
inc
cld
scas
and
insl
adc
mov
mov
jmp
inc
xor
out
or
loopw
xchg
hlt
lret
sarl
jb
push
cmpsb
add
inc
out
xor
fdivr
out
sbb
push
mov
xchg
out
or
push
and
loop
fimuls
inc
nop
dec
dec
mov
jecxz
lea
in
pop
mov
andl
arpl
dec
push
mov
repnz
das
add
xchg
or
lretw
jno
mov
pop
pop
sbb
out
pop
xchg
test
addr16
sub
pop
scas
pop
add
dec
out
sub
rorl
aaa
xor
pop
in
and
dec
loop
movsl
or
loopne
out
test
dec
jo
push
movsl
jl
sub
lahf
mov
add
cmpb
xorb
push
shll
xor
pop
in
test
ret
mov
outsl
push
pop
pop
add
je
cmp
sahf
es
lret
shlb
fwait
add
daa
inc
into
pusha
and
pop
fidivrs
sahf
inc
in
mov
mov
pop
jne
lock
popf
ja
shlb
andnps
jecxz
pop
data16
xlat
pop
pushf
dec
inc
out
dec
popa
bound
pop
sub
jmp
and
insb
pop
divb
aaa
xor
push
fcomps
sbb
hlt
dec
push
aad
fwait
push
in
sbb
sti
pop
jecxz
adc
or
xchg
icebp
cltd
aad
xchg
jl
ffree
xor
std
mov
loopne
nop
xor
jecxz
not
pusha
push
and
cmp
cltd
pop
sahf
pop
sbb
roll
mov
sbb
xor
sbb
push
mov
push
fstl
rol
les
stos
xchg
nop
jns
mov
push
push
repnz
mov
pusha
outsb
adc
es
cld
cmc
xchg
add
fstl
mov
xor
mov
andl
fldz
daa
mov
roll
sub
ljmp
std
jecxz
push
jnp
lock
sbb
jno
sbbb
cmp
cmpsb
push
lods
test
mov
ja
cld
cwtl
fsubs
add
jle
xchg
xor
cmp
dec
addr16
lret
fsubl
icebp
pop
outsl
or
xchg
push
sub
out
and
or
mull
push
movq
mov
or
out
mov
ss
ljmp
in
cwtl
adc
in
xchg
pop
js
push
clc
inc
arpl
dec
gs
scas
mov
cmpsl
fs
mov
testl
outsl
orl
aaa
ret
les
xlat
ljmp
outsb
xor
pop
shl
mov
ficoml
in
xor
inc
repz
jnp
or
ja
andl
out
jb
xchg
rorb
movsb
lret
xchg
pop
and
xchg
cmp
popl
xchg
loop
out
js
cmp
lods
xor
cmp
jae
aad
in
mov
mov
jmp
pop
inc
mov
mov
inc
pusha
dec
ret
cmp
sbb
js
out
inc
mov
inc
inc
lahf
pop
orl
sbb
out
cltd
fisttpll
ret
das
cltd
add
jp
dec
test
and
out
ljmp
cmp
mov
mov
jp
sub
decl
xchg
data16
lods
adc
movsl
and
inc
out
jae
push
mov
sub
xchg
inc
push
aaa
add
outsl
daa
clc
xchg
cmp
dec
lods
jge
mov
lock
dec
jae
xchg
or
and
sbb
sub
cld
aad
scas
fcomps
loope
stc
aaa
ds
mov
pop
dec
inc
sub
push
sub
xchg
mov
lret
mov
shll
out
test
add
xchg
sbb
cmpl
sub
into
pop
push
fidivl
jnp
andb
mov
clc
cmp
decl
stc
dec
ss
cmpsl
sub
call
inc
inc
push
push
jmp
setg
pop
leave
xchg
gs
out
fists
add
dec
fwait
cvtps2pi
jmp
rcl
fidivl
insl
ret
outsb
cmpsl
aad
dec
sub
inc
dec
aam
stc
cs
jnp
loop
inc
lret
sbb
gs
scas
out
lods
xlat
loope
je
xor
repz
outsb
ss
mov
jb
hlt
add
mov
or
sub
cmp
andl
cmp
and
iret
dec
push
jno
or
jle
test
dec
pop
enter
inc
jb
rolb
sub
xchg
cmpsl
adc
inc
mov
pop
orb
test
aam
mov
inc
pop
pop
test
dec
pop
add
inc
push
aam
adc
dec
mov
inc
push
shll
aam
inc
fwait
inc
out
lock
testb
cmp
and
xor
in
inc
dec
push
mov
fildll
xchg
mov
add
mov
fbld
loope
testl
rol
mov
fdivl
rorb
xorl
mov
xor
xlat
push
and
push
xor
shr
push
outsb
out
xchg
cmp
imul
push
push
lcall
out
cmp
dec
mov
add
lret
sahf
xchg
mov
int
cmpsl
xchg
in
ret
inc
mov
mov
mov
push
cmpsl
xor
arpl
cmpsl
xchg
nop
cmp
jbe
roll
dec
aas
xlat
pop
jo
add
jecxz
mov
mov
cld
adcl
push
add
outsb
mov
push
jo
or
mov
adc
adc
xchg
jmp
inc
cmpsl
loop
jge
jmp
notl
mov
rclb
rorl
adc
xchg
ja
push
ja
es
jno
movsl
xor
inc
mov
and
xor
adc
lods
cltd
ss
arpl
testl
cwtl
insl
pop
push
dec
mov
outsb
dec
stos
addr16
nop
cwtl
je
adc
mov
lcall
iret
mov
add
and
dec
fwait
call
fs
cmp
jb
in
out
scas
sbb
or
lcall
mov
dec
add
cmovae
inc
add
fsts
shll
movsb
insb
sbb
data16
adc
ja
out
xor
lahf
xor
scas
jge
iret
push
adc
dec
add
pop
inc
sarb
adc
jge
movsw
int
sub
mov
imul
xorb
xchg
aas
push
mov
cli
mov
inc
fs
ret
fbstp
sti
jbe
outsl
push
cltd
or
je
push
imul
les
jmp
arpl
cli
in
std
rorl
xor
out
das
xchg
loop
mov
push
inc
add
jno
enter
sub
divl
push
dec
pop
adc
mov
icebp
ret
mov
push
jmp
cmpsl
je
fs
pop
push
addr16
fadd
dec
cwtl
xor
aaa
jo
in
das
inc
adc
out
cmp
rorl
idivb
gs
pop
mov
cmp
lahf
dec
pop
jl
jbe
push
push
mov
xchg
xchg
cs
and
and
scas
pop
pop
pop
add
fisubrs
into
call
cltd
mov
ror
pop
sti
sahf
outsl
push
xchg
cmp
mov
lds
dec
jecxz
or
loop
aam
ja
in
cs
notb
xchg
pop
das
add
dec
out
imul
lock
js
mov
enter
je
jb
xor
pop
aas
adc
in
sbb
pop
pop
idiv
lock
lods
out
mov
mov
inc
dec
ds
aas
add
mov
push
pop
imul
cs
mov
pusha
add
and
outsl
or
es
push
cmc
mov
stos
pop
or
mov
lret
jecxz
loopne
xchg
sub
int
mov
xchg
push
xchg
ret
mov
pop
nop
movsl
push
cmp
popa
or
xor
mov
dec
nop
inc
cmp
sub
scas
jbe
cltd
jne
sub
add
dec
aam
jae
sahf
xor
orl
xchg
mov
adc
inc
pop
cli
pop
test
fdivrp
push
lret
push
decb
inc
sti
inc
sbb
out
xchg
jb
mov
and
xor
int
jb
add
jo
xchg
stos
lret
sub
mov
int
cmpsb
pop
fbld
scas
pusha
dec
xchg
cld
xchg
dec
mov
adc
inc
lcall
push
pop
xchg
adc
dec
inc
dec
xchg
xlat
sbb
add
fisttpll
mov
or
mov
gs
xor
and
je
xor
arpl
lcall
jae
stos
mov
mov
call
push
xchg
repnz
cmp
cwtl
shrl
push
rep
push
cmc
mov
sbb
inc
ljmp
inc
mov
mov
pop
jbe
aaa
icebp
dec
xchg
mov
rcrl
scas
push
pusha
and
adc
adcl
mov
inc
dec
hlt
pop
sub
push
add
pop
stc
lock
movsl
shlb
cmp
mov
in
ljmp
cmp
jno
add
pop
add
out
je
stos
dec
call
or
je
dec
lahf
rcrl
jbe
ja
dec
sbb
cli
arpl
push
mov
push
idivl
cmp
xchg
jmp
in
mov
out
inc
push
ret
inc
lahf
lret
and
mov
mov
lods
add
mov
lahf
inc
pushf
das
pop
out
rclb
lods
sbb
out
pop
dec
mov
push
xor
aad
push
add
test
fdivl
insb
cmpsl
dec
cmp
out
xchg
add
xchg
lret
imul
push
iret
xor
out
mov
sti
jne
icebp
push
cmp
mov
fildl
pop
lahf
paddusw
pavgb
stc
add
ds
inc
fists
std
es
sub
out
pop
movl
aaa
adc
cmp
ljmp
mov
sub
test
xor
dec
sti
jb
bound
pop
mov
jb
fdiv
add
mulb
ljmp
xlat
sub
dec
adc
adc
inc
mov
pop
or
popa
jg
and
cmp
pop
outsl
inc
call
nop
or
xor
mov
jle
fisttps
insl
scas
mov
dec
fcomps
adc
sbb
loop
fwait
sbb
sbb
dec
adc
loopne
push
xor
push
out
jg
jp
xchg
cmp
xor
aas
jecxz
stos
in
int3
enter
mov
dec
cmp
test
nop
mov
push
push
addl
mov
jle,pn
or
jge
dec
add
lds
xchg
lcall
out
xchg
loope
pop
xchg
in
and
loopne
lcall
sbb
xlat
jl
lahf
imul
rcl
ds
popf
xchg
xchg
std
push
sub
jae
sub
movsl
jbe
jecxz
sbb
inc
sub
pop
in
into
out
jnp
ret
jne
adc
bound
xlat
adc
jmp
fldt
xchg
movsl
insl
arpl
popa
xchg
dec
in
mul
test
cmp
jle
lock
inc
cwtl
shll
ljmp
fs
loop
push
rolb
das
outsl
sbb
dec
insl
adc
or
pop
cmpsb
jne
xchg
dec
sbb
jbe
sbb
mov
negl
sub
icebp
in
and
or
outsb
jae
mov
xchg
push
shr
nop
xor
out
jns
xchg
inc
movsb
push
insb
inc
sti
push
je
cmp
mov
cld
xorb
pop
dec
jns
mov
jl
push
cmpsl
xchg
pop
push
pop
scas
cmpsl
inc
sub
xlat
push
push
dec
jne
subl
push
mov
cmpsb
add
leave
fs
cmpl
xchg
sbb
mov
jmp
mov
cmpsb
sub
sbb
pop
mov
sbb
dec
push
daa
inc
cmp
mov
pop
or
inc
negl
fsts
xor
or
scas
sub
and
jo
rol
sbb
ljmp
outsb
adc
addb
fsubrl
or
push
mov
add
dec
pop
mov
xchg
das
cmc
jg
push
mov
mov
loopne
dec
jno
push
cs
dec
mov
arpl
inc
mov
decl
mov
dec
rclb
push
xor
push
movsl
ljmp
pop
mov
jbe
push
push
xchg
xor
ja
bound
scas
xor
push
lret
mov
shlb
dec
push
scas
adc
push
imul
cmp
testl
stos
push
aad
movsb
in
stc
pop
dec
fsubr
les
xchg
cltd
xor
loope
pop
pushf
push
ss
ret
mov
aas
cld
add
dec
cmp
xor
mov
popa
dec
cmpb
fiaddl
arpl
push
fmull
out
movsb
adc
mov
fbld
fdivs
mov
sub
inc
dec
push
add
outsl
xor
nop
jns
pop
inc
pop
push
or
cmp
or
arpl
fbld
inc
or
or
pop
jp
popf
jmp
outsb
fistpl
stos
mov
mov
pop
jg,pn
into
in
mov
ficomps
and
dec
ja,pt
jl
rcll
xor
icebp
jmp
inc
in
cmp
dec
xlat
dec
push
imulb
scas
pop
ljmp
add
dec
add
xor
shl
xor
and
shl
push
cmpsb
jp
or
fcmovne
nop
jmp
ret
lret
sbb
pop
ficoml
xchg
ljmp
jge
adc
jge
sbb
lock
mov
jecxz
outsl
orb
lock
daa
ficomps
pop
test
iret
shlb
pop
xchg
xor
daa
xchg
or
or
jbe
sub
in
cmp
pushf
xchg
leave
sub
xor
or
lahf
push
arpl
fwait
push
xor
adc
xchg
adc
test
mov
cmp
xchg
mov
and
mov
into
jg
sti
mov
mov
fmuls
fwait
lds
out
and
bound
out
xchg
push
lret
aaa
add
imul
cmp
into
sar
cmpsb
pop
pop
mov
loope
mov
fs
outsl
jae
or
icebp
sahf
outsb
shrl
stos
sbb
jle
fwait
xor
push
inc
sub
jno
cmp
mov
test
mov
or
add
fsubrs
stos
fimull
in
inc
lahf
jne
pop
loopne
push
sbb
mov
gs
fbld
xlat
in
pop
adc
add
sub
jg
pop
out
dec
outsl
xorl
fwait
cmpsb
mov
jae
es
adc
dec
ljmp
and
ds
mov
cmp
hlt
test
jb
or
cwtl
and
lret
xchg
xor
cmpsb
sub
jae
inc
xchg
std
xchg
xor
lods
xchg
or
or
sbb
pop
je
push
fbld
mov
cs
arpl
inc
jb
shlb
inc
daa
xor
loopne
loop
shll
popa
or
jo
push
jle
sbb
xor
and
es
mov
pop
or
cmp
cltd
in
mov
dec
scas
inc
sub
fistps
adc
loop
jae
enter
cmp
pop
jle
addr16
adc
fcomip
and
push
lods
cmp
and
test
cltd
push
inc
sbb
pop
fwait
pop
jnp
out
in
mov
outsb
data16
pop
sub
jo
adc
jge
sbb
or
dec
push
jecxz
ret
call
push
push
push
stos
sub
inc
shl
push
pushf
adc
jl
cld
jp
and
popf
dec
lahf
sub
jl
sub
cwtl
fiaddl
jp
stos
mov
inc
cmpsl
pop
pusha
dec
jo
lcall
pusha
dec
fsts
stc
hlt
jle
enter
lds
cld
or
cli
dec
mov
loope
inc
jnp
xor
sti
dec
dec
and
jbe
rcrl
rclb
jae
xchg
mov
repz
arpl
mov
stos
in
sbb
xchg
sbb
inc
jecxz
pop
ret
mov
notl
mov
pop
xor
in
sbb
mov
fisttps
fwait
loop
push
dec
adc
ja
mov
out
add
or
out
cmp
dec
and
mov
inc
aam
ljmp
pop
mov
pop
test
hlt
aas
shrl
mov
sbb
inc
jne
add
pop
jle
mov
sbb
xchg
mov
ds
mov
push
dec
mov
imul
jne
dec
ja
cmp
cmp
jbe
lock
in
xor
xor
cld
lahf
sbb
xor
cwtl
hlt
mov
daa
nop
push
stos
in
xchg
aas
dec
mov
sub
fldt
stos
or
sbb
jnp
sub
ljmp
nop
mov
aas
dec
mov
jno
dec
jb
push
fwait
inc
mov
inc
loopne
fwait
xor
mov
fmulp
jnp
mov
or
rorl
cli
inc
filds
stc
pop
dec
cmpsl
jnp
mov
mull
shll
cmpsl
mov
ds
push
pop
orb
mov
fdivs
aad
mov
lea
xchg
call
cmp
inc
andl
push
cmp
imull
icebp
push
mov
sbb
add
lods
fcmovbe
mov
aam
test
mov
jb
loopne
arpl
fiaddl
aad
mov
inc
and
inc
sbb
jno
adc
jb
movsb
out
mov
add
push
and
out
xchg
das
pushf
jo
ja
mov
jae
pushf
adc
lret
mov
dec
xchg
push
jmp
push
mov
fnstcw
insb
or
sysenter
addr16
jnp
xorb
shlb
or
in
push
sbb
dec
in
adc
xor
adc
xchg
and
push
not
mov
lock
ds
shlb
and
stc
mov
mov
inc
mov
jne
mov
xor
add
out
mov
push
in
insb
inc
fsubs
cwtl
jne
sub
adc
movsb
fidivrs
sbb
flds
xor
fimuls
fcoml
scas
dec
ret
cmp
stc
insb
fbld
shl
outsb
adc
inc
adc
mov
or
and
cmpb
int3
xchg
int3
orb
or
cmp
fbstp
cld
out
jae
jmp
out
loop
adc
sbbb
subl
sbb
lcall
add
mov
ss
mov
popf
test
add
nop
push
mov
jb
popf
or
popf
xor
cld
movsl
cmp
out
aaa
cmp
push
dec
push
cmpsl
cltd
test
ret
fidivrl
lea
jne
fistpl
xchg
imul
shlb
sub
lret
out
loop
cmp
pop
push
ja
jmp
arpl
outsb
jo
pop
dec
andl
aaa
push
cmp
and
sub
inc
pop
cmpsb
mov
cmpb
lods
in
sbb
jo
xor
jae
sbb
fs
andl
pop
and
adc
jmp
scas
push
test
stos
ja
mov
aam
shll
dec
push
xor
outsb
aaa
inc
clc
add
dec
xlat
pushf
stc
insb
ljmp
dec
inc
roll
movsb
inc
loop
outsb
mov
inc
add
jl
rclb
xchg
adc
xor
ss
decl
xchg
inc
nopl
mov
ss
mov
adc
mov
inc
or
dec
push
cwtl
push
mov
iret
icebp
jmp
sub
xlat
sahf
and
mov
jno
popf
push
push
out
jbe
cltd
and
cmp
pop
popl
je
sub
rolb
pop
loope
aaa
sahf
jecxz
sarb
cmp
xor
jl
daa
push
lods
ja
imul
push
mov
mov
lds
imul
push
fnstenv
enter
test
das
cli
sub
dec
mov
movsb
mul
test
sar
fists
and
ret
sbb
ljmp
mov
fistl
fcmovb
fsubrs
push
dec
ljmp
ret
gs
xor
fists
aad
xor
add
mov
push
mov
sbb
call
aad
sub
xchg
out
adc
loope
and
faddp
test
daa
stc
insl
pop
jg
and
dec
xlat
jge
pop
adc
and
rcrb
xlat
divl
out
inc
push
movsl
leave
cmp
test
loop
sub
cmp
shlb
mov
in
sbb
push
filds
cltd
out
paddq
clc
movsl
pop
xor
setnp
std
ja
sub
pop
cld
out
push
fidivrs
or
and
cmpsb
mov
cmp
enter
mov
andl
and
rclb
mov
push
push
imul
fstpt
outsb
sub
push
lret
xor
and
mov
push
das
pop
or
and
dec
in
inc
cmpsb
arpl
mov
dec
ljmp
out
cmp
or
xchg
out
pop
push
adc
int3
imul
jecxz
mov
or
lret
xchg
loop
cmp
or
pop
xlat
nop
jmp
inc
adc
int3
pop
push
cmpsl
mov
jmp
push
shrb
xor
mov
fbstp
ljmp
ds
sar
push
and
dec
lods
lods
or
and
leave
rolb
jecxz
pop
fs
call
int
dec
pushw
aam
repnz
sbb
mov
cmp
mov
add
push
inc
daa
fnstcw
idivl
push
mull
outsb
cld
fwait
aam
test
cltd
loope
jae
add
dec
add
or
cmp
push
clc
into
or
mov
xchg
jecxz
pushf
inc
std
outsl
icebp
cs
and
mov
push
iret
out
adc
push
imull
outsl
push
ret
jae
test
ja
pop
inc
aaa
fildll
clc
scas
fbld
std
rorl
into
pop
movzwl
inc
frstor
jle
add
pop
or
mov
jecxz
out
jbe
shll
add
fucomip
dec
fistpll
push
xchg
add
add
jae
pop
jae
les
xchg
scas
adc
mov
seto
jae
loopw
xchg
cmpsb
sti
cmpsl
xchg
jmp
inc
imul
or
mov
lahf
add
mov
xchg
xorl
jecxz
repz
iret
inc
imul
jae
xchg
mov
xchg
aas
js
mov
or
mov
push
push
add
fistps
cmp
out
or
push
stos
scas
sub
sbbl
mov
rcr
jecxz
aad
insb
xchg
shl
mov
mov
sub
fcmovne
arpl
cs
dec
inc
add
loopne
adc
mov
scas
mov
mov
jmp
adc
inc
pop
stc
mov
shll
aaa
lock
into
fcomip
jb
imul
mov
xchg
mov
cmp
pop
mov
add
pop
movsl
cmpsl
add
ficoml
pop
lcall
push
mov
hlt
decb
add
sub
push
inc
lahf
cmp
xchg
mov
push
pop
rcl
pop
out
dec
cmp
lds
sti
xchg
pop
stos
daa
sub
ljmp
push
pop
or
imul
inc
inc
out
rorl
mov
dec
xor
ljmp
in
inc
pop
fnsave
pop
mov
pop
subl
rclb
arpl
pop
sti
pop
pop
out
jnp
out
ret
dec
xchg
jp
and
stos
out
lea
psllw
jbe
jmp
inc
xor
mov
imul
out
jg
lods
pop
add
jle
into
daa
inc
sub
filds
shlb
fnstcw
nop
ret
xchg
fwait
pop
push
out
pop
mov
mov
mov
cmp
lahf
jmp
fcmovu
neg
or
add
pop
dec
xchg
jp
inc
out
push
fisttps
sbb
push
pop
call
fdivl
iret
or
inc
fadds
not
ja
or
in
bound
not
sbb
and
into
jg
push
pop
add
add
adc
into
push
cmp
imul
mov
outsb
fldenv
mov
daa
lret
fsub
cs
scas
data16
sub
scas
pop
xor
cmpsb
into
xor
aas
jae
xchg
push
push
lods
dec
into
pop
ljmp
mov
je
add
push
cmp
fistpll
cmp
ss
fildll
cmp
fwait
or
dec
mov
ret
and
sti
inc
sub
mov
add
mov
jecxz
out
addl
inc
sub
pop
push
into
shll
shlb
pause
adc
jmp
data16
fimull
into
push
cmpsb
xlat
lret
popf
test
adc
sar
jae
jle
daa
cmp
shrb
repnz
ja
and
iret
or
add
pop
cmpsb
mov
jnp
cli
lods
xor
xchg
xlat
fs
sub
pop
pop
cmpl
in
out
push
fnsave
push
push
out
outsl
cmp
in
mov
xor
jbe
xchg
dec
insl
push
add
cmpsb
xchg
xlat
popw
ja
out
outsl
fstpl
push
mov
and
add
fwait
jmp
lret
sub
pop
outsl
mov
push
inc
and
shrb
mov
arpl
arpl
dec
mov
cmp
jecxz
outsb
mov
sub
add
dec
outsl
jbe
push
fsubrp
decl
ficomps
ljmp
push
push
subl
dec
movsl
inc
xor
xlat
daa
mov
decb
xor
xchg
dec
jbe
pusha
out
pop
pop
into
pop
leave
xor
inc
inc
push
xchg
lds
fidivs
jns
jecxz
fwait
outsb
movsl
xchg
push
arpl
pop
stos
fwait
adc
outsl
test
lods
ja
jp
loope
mov
pop
shrl
inc
ror
and
mov
dec
jae
mov
pop
nop
push
sub
stos
orl
inc
add
or
pop
shl
pop
ret
push
pop
out
sti
aas
mov
sub
rcll
sahf
or
dec
psllq
out
xchg
fmull
negb
mov
inc
addr16
mov
inc
sbb
xchg
dec
shrb
fcoms
lock
aaa
cmp
cmp
sahf
loop
cld
icebp
out
test
and
pop
fimull
insl
mov
es
jmp
push
dec
ss
sti
loopne
jbe
inc
and
test
xchg
and
pop
mov
dec
std
or
push
orl
sub
and
dec
ss
stos
loopne
fisubl
jae
mov
scas
imul
call
mov
imul
loop
outsb
nop
mov
insb
sub
in
dec
stc
rcll
adc
jp
adc
adc
cli
in
ja
cwtl
sbb
mov
xchg
loop
sbb
cld
into
out
movsl
push
xchg
stos
mov
dec
xchg
pushf
cli
pop
inc
or
or
insb
add
or
xchg
cmp
or
xor
push
push
mov
scas
bound
dec
cmp
ss
mov
cmpsl
adc
xchg
adc
test
adc
mov
sbb
and
mov
movsl
xor
sbb
mov
xchg
popa
fwait
cmp
adc
enter
roll
xor
fisubl
push
leave
xorb
cwtl
sub
adc
out
cwtl
insb
dec
sbb
dec
inc
ficompl
mov
push
outsl
aad
adc
mov
pop
and
dec
cli
mov
stc
sbb
jae
addl
arpl
ja
jnp
hlt
ja
leave
mov
adc
sub
fiaddl
pop
inc
test
sub
mov
arpl
in
scas
out
scas
ds
sbb
gs
ficoml
movsl
cltd
pop
jp
ja
cmpsb
jno
xchg
orb
cmp
out
sub
xor
repz
push
das
mov
sub
popf
jnp
jns
add
adc
sub
lahf
outsl
test
inc
lahf
dec
mov
xor
out
test
sbb
int3
lahf
in
insl
sub
cmp
loop
dec
subb
push
add
outsl
pop
mov
aad
jecxz
test
dec
popa
push
stos
test
sbb
nop
out
or
iret
push
jecxz
push
push
mov
add
int3
outsl
fwait
cmp
sbb
in
lds
sub
xchg
pop
loop
das
xchg
not
add
push
in
mov
cmpl
pop
comiss
scas
or
cmp
aad
mov
icebp
adc
loop
and
push
loop
mov
adcb
adc
into
addr16
add
lcall
push
dec
dec
push
mov
mov
jg
jb
shlb
rcrl
les
or
and
pushf
loopne
xor
arpl
dec
pop
mov
scas
dec
xor
fidivs
push
ret
out
cwtl
mov
pop
movsb
mov
in
cmp
in
and
lods
subl
adc
xchg
nop
in
roll
pop
sbbb
lcall
ret
outsl
sbb
pop
ljmp
add
mov
out
and
mov
bound
sub
arpl
daa
je
jbe
lds
bnd
pop
adc
in
icebp
and
loope
mulb
sub
add
sub
lahf
adc
incb
scas
fwait
insl
inc
insl
out
push
pop
jae
push
lahf
xchg
movsb
sarb
or
rol
ret
cmpsl
mov
mov
adc
adc
mov
adcl
adc
ret
sbb
xchg
mov
repnz
out
add
pop
pop
dec
loopne
test
fisubl
dec
mov
mov
movsb
cmpsl
inc
mov
out
mov
popa
push
add
out
push
add
push
es
rcrl
movsb
mov
aaa
movsb
daa
and
stos
or
cmp
mov
fisttps
lock
cld
stos
jecxz
xchg
ds
and
addb
hlt
loopne
inc
divl
popa
xchg
mov
out
cmpsb
push
bnd
mov
and
cmp
inc
cmpsl
xchg
imul
int3
jnp
add
or
mov
push
push
bound
jge
aas
out
pop
shlb
pop
loop
sub
inc
data16
mov
sarb
inc
es
jne
pop
sub
cs
cwtl
add
push
je
dec
cwtl
fcomps
add
push
sub
scas
inc
push
adc
cmp
inc
cmp
insl
cltd
aas
pop
xchg
dec
shll
insl
and
test
mov
in
rclb
mov
jmp
inc
sub
shll
add
xchg
and
enter
xorl
push
dec
xor
adc
pop
in
mov
mov
push
cltd
cmp
lods
lods
sti
icebp
adc
jecxz
pop
mov
jb
dec
movsb
add
hlt
pop
imul
sbb
jle
bound
cmp
std
ret
imul
cwtl
mov
aam
lea
aad
out
push
pop
rclb
scas
outsl
jp
cmc
or
sbb
lods
xor
xor
pop
insb
ljmp
ret
std
icebp
mov
push
leave
es
pop
mov
xor
lret
jnp
cmp
pop
push
sbb
pop
roll
aas
loope
add
mov
sub
mov
push
and
loopne
fmull
lret
movsb
mov
lcall
andl
push
push
xor
bound
sbb
mov
xchg
fcomi
in
mov
lock
and
pop
xorb
pushf
jge
aas
xlat
scas
fstpt
adc
or
imul
pusha
cs
test
loop
and
mov
or
jbe
mov
add
data16
mov
inc
add
sbb
test
int
or
mov
push
pop
xor
dec
cmpsb
fstpt
in
xor
dec
lret
xor
xchg
jp
mov
push
scas
xchg
pop
dec
mov
push
and
inc
adc
mov
mov
add
cmc
jge
fcmovb
xchg
sub
in
cmp
xor
adc
in
push
aam
push
aad
mov
sbb
stos
je
cmp
push
or
les
pop
adc
mov
rorl
divb
nop
cmpl
shlb
mov
sub
lret
and
lds
xchg
xor
cwtl
and
popf
iret
out
adc
mov
mull
test
inc
sub
leave
xchg
mov
pop
mov
xor
or
adc
cli
dec
adc
sbb
repnz
gs
cmp
daa
adc
test
mov
pop
xor
add
or
xlat
fs
adc
or
mov
loop
inc
mov
test
jg
sti
xchg
jbe
xchg
notl
popa
xor
repz
int
dec
fsubp
out
cmpsl
mov
add
jne
jns
ret
add
movntq
arpl
popa
jnp
xchg
stc
adc
xchg
cmpsb
inc
outsl
lds
scas
lock
imul
xor
subl
fdivrp
dec
ljmp
add
xchg
int
jecxz
in
out
sbb
in
dec
int
lea
insl
rclb
data16
adc
cmp
dec
ret
cli
in
stos
adc
mov
dec
enter
xor
imul
test
rclb
add
movhps
pushf
push
iret
jecxz
pop
mov
fisubs
imul
xor
xor
das
or
cmpsl
xor
addb
jo
mov
fadds
cmp
jle
pop
jne
insb
and
cmp
dec
repnz
or
mov
xor
and
cmp
inc
int
je
pop
cmp
dec
cltd
adc
mov
or
mov
aaa
mov
out
subb
fsubp
xor
push
insb
mov
dec
jbe
fsubrl
fstl
xlat
xchg
pop
sbb
pusha
outsb
stos
mov
or
cmpl
fistl
pop
mov
repnz
outsb
ret
mov
inc
fistl
sbb
scas
cmp
mov
and
adc
or
adc
ret
aad
mov
cmp
push
or
daa
loop
outsl
imul
push
xor
sub
adc
cmc
pop
sbb
call
lahf
int3
sahf
testb
pop
nop
cmp
and
or
jns
or
cmp
cmp
mov
add
movsb
in
xor
je
xchg
xchg
pop
rcrl
nop
dec
pop
out
jmp
f2xm1
cs
ret
outsl
add
aad
jae
sahf
lds
lock
push
gs
mov
jo
pop
int
inc
sub
sti
in
shrl
mov
dec
nop
outsl
loope
mov
das
mov
sarl
test
mov
jne
cmp
rcrl
fldcw
inc
mov
cmp
dec
roll
mov
or
cmp
lea
inc
mov
dec
lea
mov
jns
fcmovnu
insb
sahf
enter
mov
dec
fadd
nop
jl
rorl
mov
icebp
mov
out
cwtl
push
xchg
and
rolb
ret
and
into
fisubs
rorl
dec
sti
push
or
rol
inc
cmp
aad
mov
testl
and
dec
xchg
loope
pop
dec
out
loope
xor
lcall
inc
out
inc
lret
mov
dec
fwait
xchg
add
cmp
gs
mov
imul
sub
shll
xlat
aaa
out
xor
jae
ja
rcr
xor
incb
mov
std
icebp
insb
sahf
data16
sub
icebp
repnz
ffreep
pop
dec
xchg
dec
sub
jmp
dec
add
hlt
out
cmp
jg
pop
push
movsl
iret
in
sub
dec
sub
cmpsl
and
fwait
stos
xor
inc
cmpsl
shrb
fs
inc
mov
cmp
dec
ret
sbb
or
test
inc
or
and
cld
sub
inc
add
out
mull
inc
push
shl
loope
xor
ja
jo
cmpl
outsl
add
cmpb
mov
jecxz
sahf
or
aaa
popa
subl
mov
push
xor
out
xor
sub
push
push
imul
pop
pop
mov
pop
orl
adc
sub
ss
adc
add
out
idivl
xor
sbb
push
divb
xchg
insb
cmpsb
xchg
fdivl
movsl
inc
jae
fbstp
loop
push
cs
imul
shrb
test
fdivl
stos
sub
or
cmp
jecxz
je
jp
inc
push
je
xchg
sub
mov
mov
push
dec
dec
outsl
sub
lock
mov
jp
in
pop
push
jmp
inc
les
ja
ds
push
in
jle
cmc
cmc
push
dec
divl
and
fbstp
dec
pop
pushf
add
das
push
decl
sub
dec
leave
adc
mov
repnz
sbb
jo
sbb
dec
mov
fwait
inc
mov
cmp
sbb
mov
std
ret
idivb
xlat
mov
cwtl
mov
push
dec
adc
mov
insb
xor
adc
mov
cld
mov
dec
add
movsb
push
mov
sahf
aaa
in
ret
add
add
pushf
mov
popf
outsb
rcll
adc
insl
mov
fisttpll
in
lret
pop
call
cmp
dec
icebp
mov
stos
neg
jnp
push
pop
xchg
outsl
xorb
sbb
pop
loope
mov
frstor
in
push
xlat
mov
aaa
mov
jle
iret
in
outsb
ss
jae
repz
adc
loope
xor
jp
cltd
inc
adc
push
jns
adc
popa
imul
or
out
ficoms
aas
jno
dec
shlb
cmp
test
xor
push
lret
mov
push
cltd
add
push
sbbl
in
in
dec
cltd
popa
mov
sbb
sub
push
in
out
fnstenv
push
into
push
pop
or
mov
clc
and
dec
pop
mov
adc
aas
mov
inc
jmp
mov
sub
outsl
stc
xor
xor
hlt
sub
xchg
mov
push
pop
out
dec
mov
add
comiss
add
aaa
inc
popf
mov
je
mov
out
iret
bound
out
inc
jns
lret
loop
fnstcw
stc
lret
mov
pushf
icebp
sub
sbb
test
stc
xor
nop
insb
xor
pop
dec
and
mov
inc
push
pushl
popf
test
mov
repz
jp
jmp
push
inc
in
pop
cmp
xchg
and
addl
call
scas
mov
ss
in
fstp
adc
mov
out
loopne
loopne
shll
adc
outsl
jns
frstor
push
xchg
dec
mov
nop
sbbb
clc
or
jmp
cld
mov
xchg
and
pop
dec
xor
repz
adc
xor
xorl
ss
adc
ss
lcall
bound
hlt
in
add
lods
push
add
repz
push
and
lds
mov
or
fs
decl
call
fcomps
out
xor
push
lods
test
inc
xchg
addb
sahf
xchg
popf
cmp
movl
lods
movsl
cmp
xor
pop
je
insl
and
lcall
sub
dec
xchg
lods
stc
cmp
call
sbb
lret
add
fwait
inc
pop
into
fisttps
or
jg
jecxz
ja
xchg
inc
pusha
sbb
inc
push
push
fcoms
and
aam
jnp
sub
cltd
xchg
bound
cmpsb
mov
arpl
adcb
pusha
out
imul
mov
and
dec
push
mov
jl
xchg
in
and
cld
ret
mov
mov
dec
test
mov
int
cltd
jle
ds
push
jecxz
jp
in
hlt
mov
jle
lods
mov
or
mov
int3
or
aaa
cmpsb
cmp
and
cmp
in
add
out
push
mov
xchg
les
outsb
or
lock
inc
rorl
push
push
mov
mov
push
je
dec
popf
arpl
xchg
xor
imul
mov
push
cmp
xchg
mov
mov
aam
add
lahf
dec
mov
mov
das
mov
push
dec
push
pop
cwtl
rclb
scas
mov
fwait
cmp
or
outsl
test
inc
push
sti
adc
test
mov
mov
inc
imul
pushl
and
call
fadd
cs
xchg
aas
cli
lahf
mov
mov
fsubrs
mov
jecxz
jg
arpl
cltd
mov
rolb
cmp
mov
sub
sahf
jg
lret
jb
maxps
mov
popf
les
pop
cmp
lea
adc
dec
dec
xchg
mov
pop
lret
stos
ret
add
nop
orl
mov
or
cmpsb
mov
push
push
inc
jecxz
sbb
lea
push
cmp
sub
popl
dec
and
jmp
push
ds
pop
mov
pop
fwait
mov
mov
loope
adcl
scas
mov
enter
iret
sub
in
test
xchg
and
mov
mul
lahf
jno
mov
jle
aas
insl
fmull
pop
or
mov
inc
loopne
xchg
jo
mov
and
xor
stos
movsl
repz
xchg
nop
lods
push
adc
repz
lea
push
inc
lods
cwtl
not
and
fisttps
negb
imul
xchg
jne
test
loop
loop
cmp
lock
push
outsl
pop
in
cmp
mov
and
std
test
mov
pop
aas
emms
insl
out
data16
movsl
mov
push
data16
mov
jns
mov
jbe
xchg
cmp
outsb
dec
inc
popf
ds
insb
mov
inc
test
lods
fdivl
xchg
scas
stos
cwtl
push
in
xor
test
or
xchg
dec
push
jae
movsl
arpl
fwait
or
jae
test
or
stos
out
cli
and
inc
xorl
pop
push
cmp
inc
sbb
xor
add
inc
push
shrb
adc
test
pushf
test
cmp
test
js
push
in
mov
dec
dec
xchg
jl
repz
xchg
push
sahf
xlat
repz
push
std
xor
loopne
ss
inc
fs
sbb
psubw
push
pushf
pop
and
mov
andb
dec
into
fidivrs
loopne
das
pop
cs
lret
pop
xor
das
push
and
out
popa
imul
jg
fidivl
shld
dec
or
jge
inc
pop
sbb
std
jge
pushf
sbb
push
dec
xor
push
out
stos
fdiv
idivl
jl
test
adc
inc
xchg
in
dec
xor
sti
sub
xchg
ds
push
out
jnp
es
sbb
das
in
sbb
mov
repz
rorb
in
mov
cs
loop
push
lods
fwait
inc
mov
dec
xchg
sub
ljmpw
ljmp
into
pop
dec
sti
or
jae
xor
data16
xchg
sub
pop
add
jmp
sbb
test
out
xchg
shr
sbbl
xchg
leave
mov
ss
xor
shll
das
xor
aas
add
arpl
popf
adc
pusha
sbb
movsl
je
lret
lds
inc
scas
movsb
cmpsb
leave
dec
xor
mov
out
dec
cmp
inc
dec
xor
add
mov
or
adc
cmp
xchg
mov
mov
jmp
imul
pushf
push
fcoms
fldcw
mov
push
add
or
mov
mov
fs
std
inc
mov
les
adc
sahf
arpl
shlb
mov
add
mov
push
lret
movsb
pushf
lock
hlt
dec
imul
inc
mov
lret
cwtl
cvtdq2ps
test
aas
mov
hlt
push
mov
add
stc
or
dec
or
popa
ret
cltd
push
mov
shlb
push
lock
cmpl
in
dec
nop
pop
cld
rorb
mov
dec
and
lahf
dec
cwtl
dec
pop
dec
mov
fidivl
out
pop
xchg
call
fsubl
sbb
insb
iret
scas
jno
shll
ds
sahf
push
push
jmp
jo
pop
nop
int
ds
mov
popa
mov
pop
mov
mov
inc
inc
or
enter
adc
jg
sti
xchg
sbb
imul
xchg
mov
repnz
dec
jg
push
xchg
or
pop
out
movb
dec
lea
test
push
or
mov
adc
daa
dec
xchg
push
jecxz
rcr
push
xor
ret
fs
cvtdq2ps
rcrb
sbb
fstpt
jle
adc
cltd
push
cld
scas
inc
insl
shrb
inc
jb
xchg
shlb
into
and
sbb
add
bound
add
popf
lahf
xchg
adc
mulb
and
call
mov
xor
daa
cmp
sub
xchg
in
xor
push
repnz
out
sbb
inc
pop
insb
imul
es
fwait
push
imul
dec
mov
add
popa
aaa
test
xchg
int3
inc
jo
addb
push
sub
in
lock
ds
dec
adc
xor
xlat
gs
leave
or
push
popa
cmp
stos
pop
sub
mov
fldl
paddsb
std
imul
cmp
shlb
dec
xchg
mov
jns
xor
fwait
sub
insl
cmpsl
leave
mov
mov
add
sbb
cmp
mov
lea
sub
dec
add
push
mov
mov
cs
mov
int
or
xor
xchg
aam
fmul
jmp
add
pop
and
mov
ficoms
movsb
mov
add
push
stos
xor
ljmp
mov
sub
cs
sahf
andb
lock
jno
shrb
xor
push
push
stos
jl
rcr
in
jge
mov
ljmp
xor
jl
call
adc
cmp
cmp
inc
add
xchg
dec
iret
jge
dec
cli
sahf
cmpsl
cmpsl
jge
lock
sahf
xchg
inc
push
xor
lods
push
arpl
rcrl
out
and
aaa
pusha
mov
lret
push
dec
pop
push
and
arpl
or
jle
stos
pushf
es
mov
je
aad
sahf
mov
cmp
mov
popf
jnp
xchg
cld
mov
in
xchg
sbb
cli
rclb
jae
movsb
sub
jne
jne
mov
repnz
lret
bound
fsubr
sbb
in
roll
shr
or
and
je
inc
sub
popf
popa
adc
pop
push
pop
mov
jle
int
into
arpl
popa
pop
stos
mov
mov
fxch
or
or
or
divb
je
sub
aad
jo
ljmp
dec
fsub
cmp
insl
clc
jg
mov
jg
cmpsb
xchg
mov
push
cwtl
jge
xchg
or
sub
rclb
cmp
mov
mov
stos
lds
fnstsw
lods
xchg
out
dec
ret
fs
aaa
sbb
lret
dec
xchg
fldl
sbb
mov
fs
adc
inc
mov
mov
or
xor
stos
call
gs
sbb
jbe
mov
inc
pop
dec
or
repnz
cmc
hlt
jne
pop
push
sbb
push
or
cmp
adc
arpl
inc
jb
xor
cmp
frndint
cmpsl
xchg
inc
mov
jg
out
jbe
mov
ja
lret
in
and
jb
cld
cltd
push
and
into
ss
pusha
cmpsl
jb
pop
mov
lods
enter
dec
das
out
xchg
jo
lods
inc
outsl
nop
pop
lock
xor
jns
sbb
pop
lret
sbb
loope
leave
jg
out
xor
push
ljmp
aaa
adc
or
xor
pop
scas
in
ficoml
ret
sbb
dec
jmp
or
sti
xchg
dec
aas
xchg
out
lret
cmc
out
repnz
repz
xchg
and
push
sub
sbb
sub
jecxz
push
or
xor
cmpsb
push
jmp
xchg
enter
dec
orl
in
int3
lods
mov
js
xor
sbb
je
cmp
shlb
cs
or
ljmp
rcrb
shll
sarb
push
mov
mov
imul
ljmp
lcall
jnp
addl
loopne
xor
xchg
in
xchg
jns
mov
mov
mov
mov
or
mov
push
xor
sahf
mov
cmp
inc
lret
xor
in
cs
ret
xchg
mov
out
add
cmp
out
mov
fists
mov
fwait
stos
jmp
leave
push
pushf
jne
daa
adc
incb
jp
fcompl
ret
inc
jb
fbld
sti
int3
mov
or
jno
jo
mov
in
jg
fiadds
dec
movsl
orb
adc
xor
arpl
nop
loop
lret
pop
aam
inc
push
leave
push
jmp
push
pop
pusha
sub
dec
les
nop
leave
pushf
fnstsw
test
movsl
jo
mov
cwtl
push
cmpsl
inc
mov
mov
rclb
xchg
xor
outsl
adcb
mov
test
mov
inc
jl
fildll
xor
xchg
xchg
dec
test
adc
lahf
and
shlb
ficoms
fcmovbe
or
and
dec
xor
mov
xchg
in
mov
andl
adcl
cs
out
mov
cmpsl
jge
pop
xlat
repnz
jl
das
cmp
dec
scas
mov
out
ds
jg
jl
cltd
jg
push
and
pop
xor
scas
inc
jmp
arpl
les
imull
and
cwtl
cld
out
push
adc
jp
sbb
or
mov
xchg
dec
repz
mov
mov
aas
repz
push
dec
lock
and
sub
dec
movsl
pop
arpl
in
stc
pop
cwtl
add
cmp
icebp
adc
mov
xchg
lahf
insl
scas
ds
fidivl
mov
orl
fimull
push
lds
cltd
popf
fsts
xchg
fildl
fistpll
ja
xor
mov
ja
leave
rcrl
jns
cld
jge
add
mov
fnstcw
and
push
xor
xchg
pop
daa
pop
xchg
xchg
sub
lcall
mov
out
scas
pop
xorb
les
jb
adc
shr
out
sbb
dec
push
repz
jbe
test
scas
xchg
mov
push
push
aas
mov
mov
insl
fsubrl
outsb
ds
addb
mov
pop
std
xchg
sub
mov
jae
sbb
call
sbb
push
call
sub
push
fs
mov
lcall
xlat
pop
xchg
mov
and
cmpsb
fimull
jl
push
push
or
out
std
mov
dec
lahf
scas
cmp
mov
cmpl
adc
pop
shlb
sti
add
stos
aaa
or
fisttpl
jl
int
rorl
or
movsb
sti
out
je
fsubl
dec
xchg
fs
inc
jb
adc
scas
pop
cmp
mov
xor
imul
sbb
jg
pusha
push
pusha
bound
pop
daa
push
movsl
bound
inc
jmp
cld
in
sbb
cmp
push
pop
aas
sbb
shlb
jl
xchg
fisttpl
jecxz
idiv
lea
lcall
rorl
and
pop
fcompl
dec
jge
call
lahf
mov
inc
mov
aaa
out
enter
mov
jne
out
test
pusha
aad
mov
leave
fldenv
jae
cmpsb
xchg
dec
add
xchg
xor
and
or
popa
lea
jl
addr16
popf
fldpi
mov
xor
fs
push
push
stos
aas
add
jecxz
insl
repnz
scas
leave
mov
shr
cmp
push
into
and
jge
dec
dec
jae
gs
popf
shll
rorb
fistpll
xchg
adc
cmp
adc
push
dec
xor
jb
cli
dec
js
mov
mov
repnz
push
int3
mov
out
push
gs
addl
xchg
push
xchg
adc
sub
movsb
mov
push
or
dec
cli
roll
mov
popf
pop
sbbb
cli
push
out
inc
lods
mov
or
inc
jns
jle
and
add
in
and
lds
mov
sub
dec
xchg
dec
mov
stc
push
test
adc
outsl
sbb
pop
push
inc
jg
add
mov
dec
repz
cmp
sahf
clc
xor
dec
xlat
pop
mov
dec
mov
test
ljmp
jmp
cmp
leave
cmp
pop
pushf
mov
dec
xor
and
inc
inc
add
mov
out
mov
lret
add
movsl
push
push
mov
adc
mov
sbb
idivl
rcll
adc
sahf
bswap
sbb
push
mov
mov
shlb
dec
aaa
insl
and
push
mov
test
loop
sbb
cltd
sti
daa
push
lea
aaa
jmp
inc
xchg
add
and
mov
add
fistl
cmp
outsb
jne
mov
pushf
push
lds
in
xchg
sbb
push
inc
adc
rolb
sbb
mov
cmpsl
daa
sahf
lods
es
mov
inc
jnp
les
cs
push
cwtl
dec
inc
jno
xor
add
cmp
cmp
xor
out
jbe
cmp
adc
sbb
push
loop
stos
movsb
out
add
sti
jae
dec
in
jb
cmpsl
sbb
mov
lcall
dec
mov
mov
sub
sub
mov
fdivl
nop
test
out
arpl
out
gs
inc
fldt
xchg
mov
mov
enter
mov
jnp
sub
sub
pop
inc
std
push
subb
mov
inc
aad
fldcw
dec
jae
pop
sub
std
sub
sbb
sbb
ss
xchg
lods
jne
xor
call
jg
xor
in
lahf
daa
mov
inc
cmpsb
inc
addr16
add
jne
test
leave
push
inc
pop
xchg
pop
push
mov
cmp
sti
xchg
pusha
shlb
xor
int
inc
add
add
mov
xorl
gs
sahf
push
xchg
cmp
jbe
imul
add
dec
dec
inc
jmp
mov
push
push
ficompl
fildll
fs
mov
jg
pop
movsb
loopne
out
pop
jge
mov
jge
xor
mov
ja
stos
mov
pop
mov
repz
shl
movsb
outsl
add
xor
push
mov
adc
in
mov
iret
jge
dec
sub
imul
cmp
scas
sahf
mov
pop
pop
pushf
loope
xchg
pop
jg
adc
jmp
inc
std
pop
cmp
test
add
and
pop
xchg
xchg
push
push
mov
scas
xchg
aad
adc
je
xchg
pop
lods
es
add
je
jo
test
fdivl
inc
adc
jbe
bound
leave
pushf
outsb
stos
cmpsb
pop
int
shrl
or
xchg
shl
ja
in
jno
inc
lock
cmp
sub
aas
sbb
lret
or
pop
add
mov
inc
out
movsb
and
dec
shl
insb
pop
mov
fiadds
jecxz
xchg
std
push
xlat
call
push
add
jecxz
mov
inc
cmpsb
pushl
mov
addr16
mov
cltd
mov
call
lods
inc
fwait
lock
push
out
shll
inc
mov
push
lcall
rcrb
dec
push
push
sbb
push
js
xchg
pop
repz
das
sbb
movsb
or
inc
call
push
out
ss
pop
sbb
cmpsl
out
mull
lcall
fwait
imul
mov
and
aas
scas
push
inc
and
outsb
shlb
lea
insl
add
and
and
imul
inc
add
xchg
call
cmc
call
xorb
lret
insl
sub
mov
ss
dec
aaa
lret
shl
add
xchg
inc
nop
fdiv
out
mov
sbb
adc
aad
and
pop
pop
xchg
mov
xchg
dec
and
das
aad
fidivl
xadd
and
pop
sub
xchg
jne
into
or
mov
fidivs
out
cmp
cwtl
pop
xchg
adc
rorl
cmpl
mov
stc
fcomp
es
jmp
cs
imul
arpl
cmp
in
ror
shl
cmpsb
lret
lret
out
outsb
and
notl
scas
pop
aam
fistpl
or
sub
in
or
fwait
add
out
xor
fisttpll
xor
arpl
mov
test
leave
jmp
repz
mov
push
sub
pop
movsb
fwait
mov
dec
test
test
xor
stc
xchg
movsl
push
xchg
push
sarl
jo
mov
cmc
adc
pop
jecxz
out
sbb
dec
outsb
adc
add
sarb
sbb
push
fs
sbb
lahf
push
push
mov
out
push
adc
mov
xor
xlat
or
push
in
pop
fistpll
pop
sub
add
testl
aas
xor
ror
ds
pop
cmp
out
fbld
mov
loope
push
in
or
sbb
fimuls
xlat
icebp
or
adc
fimull
or
iret
push
jmp
popa
fistps
out
pushf
push
int3
add
incb
jge
rclb
ja
xchg
out
xor
rcrl
enter
notl
pop
out
jbe
ret
in
jp
pop
stos
jecxz
ja
icebp
mov
xor
sbb
aad
xor
ja
cmp
hlt
add
popf
dec
xchg
sahf
sbb
divb
xchg
mov
pop
push
ljmp
jo
loop
out
or
mov
movsb
inc
mov
frstor
inc
sahf
xor
adc
dec
push
push
movsb
xor
jg
std
xlat
scas
xlat
out
mov
imul
popa
pop
idiv
scas
out
add
and
xchg
cmp
scas
mov
pop
mov
std
das
daa
adc
es
or
xor
lret
mov
rcrb
loop
inc
pop
sub
mov
xor
pop
imul
sbb
push
pusha
push
jle
fsubr
out
mov
adc
pop
shll
addb
cltd
ret
and
push
ja
out
mov
stos
fistl
aaa
stc
sahf
and
and
pop
adc
inc
outsl
mov
outsb
dec
and
dec
mov
loope
lret
daa
in
xchg
mov
or
data16
dec
sahf
or
lds
fistpl
cmp
fbld
push
pop
adc
ja
or
fcompl
pusha
adc
cli
mov
mov
jge
mov
mov
inc
stos
out
jb
xchg
dec
scas
push
mov
mov
andl
or
ret
mov
lahf
xchg
out
lahf
fs
inc
cmp
and
loope
mov
pop
ficoms
adc
jmp
or
push
push
outsl
in
mov
add
mov
add
outsb
mov
popf
test
jbe
in
jmp
adcl
inc
xor
lret
dec
imul
dec
jg
addb
pop
lds
sahf
cs
add
aaa
add
and
fsubr
xor
out
shll
repz
inc
ljmp
scas
adc
xor
loope
cmp
mov
inc
incl
or
sbb
inc
mov
add
cmp
not
add
and
dec
add
jbe
or
push
fiadds
or
pop
adc
sub
inc
mov
xchg
test
push
stc
sti
repz
sub
out
das
xor
sub
roll
roll
cmp
outsl
cli
push
in
fsin
mov
or
xchg
cmc
jmp
scas
int3
and
ja
mov
arpl
dec
cmp
or
imul
lods
mov
outsl
ficompl
mov
cmp
sahf
lds
andl
repz
subl
out
sub
lahf
and
mov
mov
imul
repz
lods
sub
and
negl
cmp
xor
push
xor
pop
aas
cs
inc
shll
mov
fbstp
daa
lds
mov
dec
dec
cmp
lods
and
mov
iret
cvtps2pd
xchg
cmp
xchg
xchg
mov
addl
ficomps
pop
inc
mov
popa
mov
jge
or
xchg
and
out
dec
aam
int
mov
arpl
ret
mov
out
push
in
fstl
fst
push
insb
fistl
inc
call
xor
cmp
and
xor
ds
jno
mov
cmp
out
sahf
into
mov
push
bound
pop
mov
inc
lcall
cmc
cs
jae
or
pop
nop
lret
pop
loop
imul
sub
cltd
movsb
adc
movsb
lret
ret
sub
outsl
rol
out
sub
js
int3
jmp
js
lcall
jo
fisubs
test
ljmp
pop
push
pop
dec
pop
insl
lcall
cmp
notl
xor
push
push
adc
xchg
lcall
aam
mov
fs
push
xchg
daa
sub
pop
and
add
pushf
mov
sub
mov
sub
adc
push
pusha
push
outsb
rclb
jge
pop
jge
mov
stc
insl
hlt
cmovns
pop
mov
lret
or
int
jg
cmp
out
inc
arpl
or
adc
sbb
cltd
sbb
pop
test
or
jbe
in
andl
pop
mov
lcall
fwait
add
inc
sbb
sub
aad
jl
mov
stos
orb
clc
test
cmp
or
push
mov
fsubr
jg
outsb
cs
cmp
imul
mov
shr
pop
push
push
scas
lcall
push
stc
pop
push
dec
addr16
in
push
mov
pop
icebp
test
inc
inc
push
sahf
adc
cmp
idivl
pop
pop
dec
stc
mov
test
add
sbb
add
repz
fcos
fwait
dec
dec
pop
fcom
xor
push
sub
add
sbb
jle
or
pop
xlat
jg
dec
mull
or
push
jns
mov
cli
and
jg
dec
fisubrs
dec
mov
xchg
popa
arpl
mov
das
test
imul
pop
dec
or
xchg
and
mov
or
pop
push
jmp
fucomp
pop
repnz
nop
or
fbstp
and
pop
fdiv
sbb
sarl
xor
rcll
and
push
inc
pop
mov
subb
arpl
mov
or
mov
fcmove
mov
xor
cld
mov
es
clc
sub
rorl
dec
lahf
cmc
enter
fsubs
cmp
mov
adc
inc
and
jp
inc
mov
dec
mov
pop
insb
in
pop
jo
ret
and
aad
add
push
ljmp
outsb
aad
add
mov
ss
test
rcll
pop
les
xlat
out
es
cli
fwait
loopne
add
sarl
lret
or
pop
std
data16
lds
or
pop
shrb
pop
call
sti
mov
iret
cmp
fldt
iret
adc
orl
mov
cmp
jecxz
mov
cmpsl
loopne
int3
in
xor
pop
aas
rorb
or
add
sub
fucomip
ret
mov
hlt
lods
loope
jno
lcall
xor
fistpl
ficoms
mov
fucomi
jb
xchg
push
popa
mov
inc
fiadds
add
lret
imul
push
inc
in
mov
cmp
cmpsb
push
cltd
mov
adc
push
loopne
lret
cmpsb
cwtl
data16
push
data16
pop
sarl
xchg
ljmp
js
mov
cld
adc
jnp
xchg
popl
ja
popl
ss
inc
dec
cltd
jo
lock
das
inc
cmp
bound
mov
xor
loop
insl
dec
idivl
push
xor
stos
jbe
pop
xchg
in
ss
cmpsl
outsl
mov
loopne
lea
dec
push
xorb
cltd
loop
arpl
jge
int
outsb
ret
sub
les
sub
push
dec
xlat
lahf
jo
lret
aaa
jbe
adc
sbb
out
ficoms
fisttpll
inc
cwtl
jmp
or
xor
ror
pop
push
pop
mov
mov
xor
jns
jae
inc
enter
cmpsl
shlb
inc
sbb
movsb
cwtl
int
insb
out
mov
mov
xchg
lret
aad
stos
push
fcmovnbe
idiv
or
js
push
cmp
inc
pop
mov
popa
pop
xchg
push
jno
js
inc
xor
loop
dec
push
add
and
rorl
andb
test
out
fwait
ds
adc
sti
mov
and
mov
xor
mov
stos
loopne
dec
cld
in
add
push
xchg
pop
push
int
call
sbb
insl
inc
inc
aad
mov
movsl
sbb
jae
or
dec
jae
inc
or
pop
push
int3
xlat
out
enter
dec
pop
adc
and
pop
inc
jp
push
mov
cmp
rol
nop
jmp
and
push
je
int3
mov
pop
stos
xor
jbe
arpl
mov
cmp
outsl
cmp
mov
in
mov
sbb
roll
aaa
cld
mov
fidivl
es
loope
xchg
icebp
scas
inc
add
ljmp
xchg
call
imul
mov
sub
mov
sub
fisttpl
bound
rcr
popf
jmp
inc
dec
mov
mov
clc
sbb
test
and
sbb
imul
jbe
jecxz
in
negl
pushf
sete
out
xchg
pop
fimull
ret
mov
repz
jp
cmc
lret
sti
imul
inc
iret
xor
mov
jae
into
in
adc
sbb
jnp
shlb
inc
push
ds
xchg
mulb
sbb
movsl
scas
xchg
or
sar
jo
pop
jmp
enter
popa
adc
dec
xor
xor
out
data16
adc
int3
lock
mov
insl
shlb
mov
js
sub
jl
dec
movsb
xor
mov
es
mov
rcrl
test
dec
or
push
adc
push
ljmp
insl
or
inc
leave
cmp
stc
sbb
imul
lods
in
sahf
inc
repz
fisubs
ds
stc
bound
sahf
xchg
inc
mov
and
aaa
jg
je
jge
lods
adc
xchg
cld
cmpsl
addr16
movsl
push
mov
xchg
aaa
dec
cmp
out
inc
in
mov
cmpsl
test
jns
xlat
mov
shl
shll
in
loopne
jecxz
hlt
fsts
hlt
test
sbb
into
xor
inc
push
repz
fldl
push
and
push
xor
dec
xor
push
pop
inc
ret
in
shll
jle
jmp
cmp
adc
mov
ret
test
mov
lock
jne
lea
add
mov
mov
rol
and
loopne
cmp
push
xlat
lcall
cmp
add
xor
mov
aaa
jb
jb
add
pop
cs
das
adc
mov
clc
sub
out
add
imul
or
movsl
pop
ss
push
xchg
xchg
push
sbb
jne
jae
subb
mov
rcll
out
in
loop
es
fnstsw
xchg
adc
subb
xchg
fisubrl
mov
inc
ja
mov
inc
pop
out
cli
cmp
imul
in
mov
dec
push
xor
popf
adc
ret
in
pop
inc
mov
loope
inc
push
sub
cmp
xchg
scas
shrl
cli
mov
ss
dec
push
inc
jp
ret
xor
ss
test
mov
jg
and
cwtl
mov
dec
ja
lea
inc
cmp
ret
sub
mov
push
xor
insl
mov
pushf
push
mov
out
sub
xchg
ds
jbe
iret
into
mov
xchg
jmp
jno
shlb
dec
adc
hlt
call
jge
mov
cmp
jecxz
fs
cmp
push
lds
push
jo
stc
mov
push
sahf
cmpsb
fisttps
inc
out
sahf
ljmp
pop
ljmp
dec
jecxz
xchg
jl
push
inc
push
cmp
jne
loope
das
sbb
cli
lret
lea
test
dec
sbb
push
xadd
test
movsl
or
cmp
inc
mov
adc
fstpt
adc
sbb
sub
and
jecxz
xor
das
scas
cmp
mov
sub
ljmp
xchg
repnz
xchg
sbb
mov
mov
outsl
xlat
adc
testl
cltd
inc
daa
mov
not
cmp
outsl
adc
xchg
jne
adc
jge
imul
addr16
mov
push
lock
jns
repz
add
pop
and
loopne
jae
lea
and
pop
fdivs
es
enter
cld
shlb
mov
add
daa
loope
sbb
sub
test
cs
rcr
inc
cld
or
jle
jp
push
add
decl
sub
repnz
testb
or
outsb
push
clc
enter
stos
xlat
sub
in
sub
mov
jl
xchg
jge
or
cmp
mov
icebp
call
xchg
pop
ss
lea
rcrb
cmp
pop
in
scas
and
lock
jg
dec
lahf
xchg
pop
movsb
in
add
pop
sub
imul
loop
mov
jg
lcall
stc
mov
jne
inc
repz
sub
or
int
mov
pop
jp
jno
push
daa
outsl
pop
cmp
lahf
xchg
idivl
enter
mov
out
and
outsb
sahf
pop
jbe
jg
inc
outsl
and
adc
mov
es
xchg
cmp
sti
add
xlat
shrb
push
push
outsb
add
repz
repnz
push
inc
mov
xor
outsl
mov
repz
pushf
add
inc
lret
pop
xchg
cmpsb
adc
outsl
je
add
ja
scas
outsl
add
sti
sub
xchg
jne
sub
aas
sub
subl
jge
push
mov
pop
jae
dec
outsl
sub
pop
mov
arpl
pop
mov
loope
fcomp
adc
sub
aam
mov
sbb
insl
addr16
xor
rclb
jge
push
jae
pusha
mov
bound
ds
or
jnp
je
outsl
das
and
inc
lahf
data16
divl
jge
jns
pushf
dec
mov
push
sbb
mov
loopne
sarb
andl
xor
ja
inc
cmp
outsl
scas
sub
jecxz
xor
dec
scas
push
jb
xchg
jno
addb
jecxz
pop
mov
adc
add
shll
repz
xchg
ret
idivl
mov
cwtl
pop
testl
or
push
incb
test
xchg
cmp
adcb
and
mov
xchg
aam
shll
xchg
hlt
sbb
jg
mov
ss
cmp
shlb
mov
pop
lret
lahf
stc
popf
stos
shl
mov
or
scas
push
iret
mov
or
fdivp
and
insl
nop
xchg
pop
andb
sar
cltd
adc
cmp
std
xor
shll
iret
push
or
mov
pop
repnz
push
and
jae
rorl
inc
aam
in
hlt
mov
adc
and
push
sub
dec
adc
xor
xchg
pop
loope
inc
mov
iret
fcomps
mov
dec
scas
sti
insb
repnz
fisubs
cmc
dec
jge
imul
xor
sub
pop
test
negb
mov
pop
jnp
imul
sti
xor
outsb
xor
enter
xlat
scas
ds
nop
or
mov
mov
dec
das
sti
pushf
mov
or
add
icebp
sub
xor
or
sti
jmp
in
test
lahf
pop
adc
mov
jmp
sbb
sub
push
loop
and
push
insw
daa
outsl
shlb
call
int3
sub
es
lods
pop
in
rclw
xor
inc
filds
imul
scas
xor
xor
mov
dec
jl
test
xchg
stos
incb
jae
in
jno
out
ret
mov
ja
dec
xchg
je
inc
addr16
ja
xor
lcall
cmpsl
xor
test
sti
gs
sbb
dec
add
cmc
loopne
jg
les
xor
mov
rclb
in
jge
cwtl
lret
jns
test
cltd
rorb
dec
sub
push
ss
xor
shlb
pop
xor
mov
xchg
push
jbe
insl
jno
aam
fs
mov
cltd
loope
std
cmp
or
lock
jp
sub
pop
lock
xchg
push
and
mov
and
and
movsl
or
xor
pop
sub
out
imul
int
mov
mov
repnz
adc
out
sub
xchg
je
stc
jg
outsl
xor
pop
mov
xor
dec
shlb
mov
mov
icebp
shlb
subb
sbb
lret
xchg
fnstenv
cld
loop
dec
adc
jo
mov
jo
ds
icebp
out
jnp
movsb
das
inc
enter
cltd
insb
or
push
ds
loop
adc
lea
lods
mov
mov
add
xchg
stos
aad
mov
sbb
js
jns
sbb
lahf
lret
cltd
pop
add
dec
lock
mov
cmpsl
jnp
xchg
mov
inc
popa
cmpsb
inc
ljmp
stc
outsl
jo
out
dec
cmp
add
xor
sti
jecxz
pop
mov
fdivs
mov
adc
pop
hlt
lods
insb
mov
mul
rorb
loop
sub
test
rolb
aad
loop
test
dec
shll
pop
push
xlat
pushf
sub
jno
pop
mov
int
movlps
insb
imul
aad
pusha
mov
jl
icebp
adc
rcrl
cmp
jo
mov
sbb
in
sarb
test
xchg
jns
cwtl
xchg
fidivrl
mov
jge
jae
out
enter
jnp
push
inc
push
or
sbb
jle
jmp
inc
inc
mov
mov
shl
xchg
outsb
fsub
xchg
imul
xchg
or
sti
cld
adc
mov
mov
les
shlb
popf
xor
and
mov
mov
in
mov
mov
jle
fstpt
push
lods
daa
mov
jne
xor
fldcw
cld
jbe
mov
push
fnstcw
test
and
sarl
pop
xor
jne
mov
sahf
mov
in
leave
idivl
xor
push
xor
out
dec
loop
pop
mov
jp
fistps
pop
cmp
adc
push
sbb
popa
cld
ss
outsb
mov
mov
and
add
aas
jb
push
enter
jnp
mov
dec
sahf
fdivs
loop
xchg
std
test
mov
pop
insl
dec
mov
std
cmp
fstps
cmp
or
xor
xor
ss
lods
jb
inc
dec
aas
and
push
jns
push
xchg
jge
mov
pop
movsb
xchg
ret
insl
sub
dec
jp
mov
add
fbstp
push
add
xchg
aad
enter
popa
loop
xor
pushl
js
adc
adc
ds
cmpsl
xor
and
insb
xor
negl
shrl
leave
jae
repz
imul
lea
inc
sbb
push
cmp
lcall
fstpl
sbb
fbstp
mov
mov
xchg
push
and
popf
sub
push
int
and
into
jmp
sub
cli
ljmp
rolb
and
notl
cmp
lds
repz
add
inc
push
jecxz
hlt
xchg
es
fwait
js
das
mov
rcrb
mov
inc
movsb
psubq
ja
sub
mov
movsb
mov
mov
mov
xor
ffree
dec
add
jae
lret
in
subb
adc
push
aad
mov
mov
inc
sub
les
adc
xlat
xchg
mov
cmp
or
cmp
jnp
mov
int
lods
test
aaa
aad
add
xchg
aaa
icebp
shlb
mov
fwait
cmp
inc
into
repz
das
mov
fcmovb
or
or
jge
mov
push
int3
aam
inc
pop
xchg
xor
xchg
mov
lds
or
xor
inc
dec
xor
int3
pop
mov
jp
ror
aaa
add
sub
mov
aad
leave
fists
push
mov
or
fcomp
xor
sar
nop
dec
inc
ljmp
add
fisttpl
mov
js
sbbb
cmpb
pop
pop
push
mov
loop
push
push
cmpsl
xor
add
fxch
fsubp
push
mov
repnz
add
dec
out
dec
mov
cli
fildl
das
pop
jo
xor
stos
adc
ret
dec
in
outsb
xorb
cmc
nop
push
mov
fiadds
ret
pop
add
out
and
add
test
int
and
int3
fcmovne
lret
jecxz
sbb
and
sbbl
dec
cmp
add
pop
sbb
add
faddl
ljmp
js
sbbl
xchg
fnstcw
mov
lahf
and
loop
push
jge
push
sbb
stos
mov
adc
cmp
pop
and
xlat
sbb
or
sub
pextrw
xor
fwait
adc
repnz
cltd
icebp
std
cmpsl
push
nop
mov
movsl
cmp
fisubrs
lea
pusha
or
push
or
aaa
sbb
dec
mov
inc
dec
push
fisttps
inc
int3
lock
mov
mulb
jg
pop
movsl
or
jnp
jne
jnp
pop
sbb
imul
fisubrl
mov
push
out
in
mov
cmp
pushf
nop
xor
jecxz
aaa
push
andl
test
cs
cmp
in
stos
xor
and
cmc
sbb
test
fwait
xor
mov
or
mov
pop
dec
jg
stos
push
enter
mov
inc
es
dec
shl
add
adc
testb
lds
jne
add
fistps
out
aaa
pushf
push
xor
mov
clc
inc
sbb
push
jmp
das
sub
or
stc
in
inc
fcoml
or
xor
jecxz
adc
cmpl
repz
cmp
push
xchg
xchg
mov
cltd
imul
test
aas
jne
ja
jmp
aaa
loopne
je
pop
cmp
testl
fildl
scas
xor
scas
sahf
mov
idivb
les
out
lahf
jb
dec
or
pop
lahf
sub
nop
stc
rclb
xor
pop
mov
lahf
iretw
and
int
insl
adc
lock
lret
ret
ljmp
dec
inc
out
mov
dec
mov
es
loope
js
add
ds
dec
adc
jnp
imul
outsb
jecxz
pushf
xchg
xorb
jle
inc
out
dec
xor
arpl
fs
mov
push
idivb
shl
adc
add
mov
ret
int
and
fwait
xchg
iret
xchg
lcall
mov
out
daa
jne
ret
es
cmp
hlt
sub
stos
fcompl
push
xchg
cltd
sbb
pop
mov
dec
gs
sbb
or
arpl
lds
or
dec
fs
mov
add
xchg
fsubl
bound
or
aam
dec
xor
cli
sub
push
sub
mov
lds
xchg
sub
lods
jle
jnp
push
inc
ja
push
sub
jne
jp
invd
mov
minsd
jmp
lcall
shr
xchg
into
enter
and
xchg
mov
xor
nop
xor
xchg
mov
adc
mov
lock
out
cmp
aas
xchg
popf
aaa
testb
cmc
or
std
fists
dec
xchg
push
pop
lds
dec
out
inc
out
mov
dec
cmp
in
dec
pop
xor
jle
inc
in
lret
outsl
imul
fisttpll
and
neg
fwait
adc
mov
mov
dec
mov
cltd
test
dec
and
push
popa
push
dec
cmp
inc
icebp
push
inc
add
sub
mov
push
aam
mov
test
cmovb
fcmovnu
imul
addr16
cmp
jle
pusha
cmp
mov
lret
popf
les
and
cmp
clc
lock
push
lock
push
jp
ret
xor
cmc
adc
mov
pusha
jnp
mov
dec
and
xor
adc
pop
lahf
cmpsl
movsl
sti
shll
test
push
push
into
loop
fstpt
jno
mov
enter
sbb
xor
or
mov
push
mov
mov
inc
cwtl
rcrb
aas
mov
pop
ljmp
jmp
adc
push
jp
mov
fisttpll
mov
dec
outsb
test
sbb
sub
jle
mov
ret
out
mov
or
lock
sub
dec
inc
xchg
roll
fcomps
jo
nop
mov
repnz
sbb
popf
jmp
mov
aad
and
mov
lahf
icebp
xchg
mov
sbb
dec
pushf
lret
cmp
xor
xor
ja
or
gs
dec
mov
push
in
call
loope
fldenv
arpl
mov
lret
fcoms
repz
dec
sti
daa
fwait
mov
adc
jnp
arpl
rorl
test
lret
fildll
ss
shlb
insl
nop
cwtl
jp
jp
jae
filds
pop
adc
in
dec
fistps
out
cmp
adc
sub
mov
xor
adcl
xchg
mov
mov
pop
pushf
or
repz
cmp
mov
fs
aad
push
adc
jge
stos
cmp
and
out
ror
jae
fisttpll
in
mov
in
aas
dec
enterw
push
and
cmp
dec
pop
jecxz
xchg
lahf
push
or
mov
in
shll
fmull
in
add
fcmovu
push
mov
lds
push
or
mov
dec
adc
cmpsb
jge
or
scas
mov
dec
cmp
mov
popa
or
shl
pop
pushf
repz
scas
inc
add
sub
adc
lods
or
lds
inc
jae
adc
xchg
jno
dec
adc
pop
mov
loopne
pop
cmp
jg
sbb
imul
dec
pusha
insb
hlt
in
cmpsl
jno
loopne
xchg
out
outsl
aam
jae
mov
cmpsb
pop
or
dec
push
cli
pop
pusha
push
cs
mov
and
je
cmp
stc
sub
mov
sbb
imul
loopne
and
inc
out
ret
int
sbb
lret
mov
jle
leave
outsl
xchg
addb
sub
cs
call
lret
int
or
sub
lods
adc
sahf
shlb
pop
sbb
lcall
pop
mov
jmp
jae
inc
test
out
inc
fcom
inc
shlb
mov
adc
inc
out
add
and
test
mov
pusha
aas
jmp
add
push
hlt
movsb
or
mov
push
mov
adc
mov
mov
es
out
lret
scas
pop
sahf
lods
daa
mov
dec
pop
adc
inc
xor
mov
das
dec
lods
pop
cmpsl
mov
ret
cmp
mov
push
inc
mov
mov
sahf
jge
pop
je
pop
cmpsl
arpl
push
push
sahf
xor
lea
sbb
mov
loopne
cli
movsl
inc
dec
sub
in
inc
js
xor
sub
jecxz
lods
idivl
sub
inc
lea
fdiv
mov
leave
and
out
xor
xchg
out
or
pop
sarl
fcoms
mov
pushf
roll
dec
pop
mov
dec
lret
int
es
cwtl
sbb
ficompl
pop
xor
lret
inc
push
xchg
sub
lcall
xchg
ljmp
movsl
imul
outsl
push
popf
push
out
xor
out
mov
or
lods
xchg
fidivl
mov
mov
enter
add
sarb
popa
ds
out
es
push
scas
in
aam
xor
jno
jne
pop
xchg
nop
testb
hlt
pop
repz
cli
add
je
aaa
push
cmp
addr16
and
jne
sti
push
cwtl
xor
fistpl
inc
push
inc
fmull
or
sti
mov
sti
pop
inc
aaa
pushf
xchg
leave
and
mov
fmuls
lcall
fldl
packssdw
xor
cmc
jae
ds
leave
cli
cmp
pop
xchg
idivb
sbb
pop
lcall
out
cs
push
fbstp
xor
mulb
inc
xor
les
scas
iret
cmp
jae
mov
in
dec
mov
lods
rcll
mov
mov
jecxz
push
subb
jae
mov
jb
xlat
add
aas
mov
call
jne
dec
jae
dec
mov
fisubrl
call
mov
add
in
outsl
in
dec
decl
loope
push
incl
dec
inc
fmulp
aas
out
add
shr
fcomps
mov
int3
sahf
call
ret
mov
xchg
loopne
adc
outsl
stos
inc
dec
imul
add
push
call
or
jecxz
das
stos
sbb
xchg
rolb
jmp
jne
jo
xchg
mov
push
add
adc
xor
lahf
xchg
outsb
sbbb
shl
mov
add
mov
aaa
orl
rcrb
sarl
pop
dec
dec
sbb
xchg
dec
sahf
setle
pop
lods
sbb
dec
or
cmp
aad
push
ss
lcall
mov
fwait
push
push
shlb
jecxz
xchg
inc
lea
repz
add
lds
adc
in
dec
jnp
rorl
inc
rcrl
mov
fwait
mov
cmpl
fisubs
xor
fcoml
rolb
fcmovnu
push
rcll
bound
fstpt
inc
pushf
inc
dec
ficomps
dec
cs
jmp
and
mov
sub
loope
testl
into
xor
mov
roll
call
in
push
es
cmp
mov
jnp
aaa
cmp
mov
jecxz
push
pop
popf
clc
cmp
push
inc
cmp
dec
jno
sbb
fidivrl
test
movsb
cmp
and
push
cli
addr16
stc
ljmp
lahf
aaa
stc
jb
or
xchg
fcmovu
movsb
cmp
mov
pop
inc
sti
push
aaa
jp
call
add
mov
sbb
stos
pop
jle
xor
insl
fsubs
add
rcr
pop
clc
and
daa
cmp
jno
shlb
stc
xchg
arpl
mov
mov
pop
mov
addb
mov
cmp
idivb
aam
loopne
scas
and
and
jae
daa
dec
cmpsb
arpl
lcall
pop
add
cmp
insl
pop
cmp
inc
and
jecxz
jcxz
mov
imul
sub
out
pop
in
fs
dec
mov
outsb
sbb
push
or
gs
mov
push
or
mov
or
dec
rol
ljmp
mov
cmovge
shrl
fistl
and
mov
enter
xchg
jnp
leave
je
jmp
icebp
popf
das
sub
popa
adc
mov
cs
mov
jne
or
adc
adc
out
shr
scas
dec
in
aas
push
inc
lahf
enter
int3
lds
stos
mul
push
fdivrs
pop
xchg
insb
xchg
mov
add
add
mov
fcmovnu
adc
xor
icebp
dec
xlat
dec
nop
fisttpl
movsl
jg
out
xchg
cmp
xchg
stos
xchg
push
movsb
xchg
lods
ret
or
jl
cmp
mov
insl
or
vmwrite
inc
stos
push
pop
inc
nop
add
in
fcmovnu
cmpl
bound
push
out
repnz
dec
xchg
and
adcb
mov
ds
jbe
dec
or
xlat
scas
cmp
xchg
movsl
cmpsl
dec
fsubrp
xor
idivl
add
icebp
cwtl
call
jle
or
dec
push
or
mov
imul
lahf
sbb
lret
cmpsl
fistpll
cltd
test
outsl
adc
xchg
xor
inc
xor
lahf
bound
adc
loope
cmpsb
inc
rorb
test
pop
bnd
jnp
out
test
jnp
out
jg
or
scas
jmp
jae
mov
xor
int
mov
xchg
mov
ljmp
sbb
and
or
mov
cltd
add
mov
call
pop
fs
jne
jecxz
icebp
pop
mov
or
jno
jmp
or
aas
push
xor
cmp
imul
les
aas
test
je
outsb
leave
and
ss
mov
sahf
xchg
addr16
push
mov
popa
mov
or
and
cltd
call
inc
es
xchg
and
push
mov
jp
loop
push
add
arpl
mov
adc
adc
or
lahf
mov
gs
repz
cmp
cmpsb
pop
repnz
xchg
lahf
add
adc
mov
popf
xchg
add
jge
data16
data16
dec
outsb
lds
insl
lcall
inc
mov
pop
ss
sahf
push
xor
xchg
fcomi
inc
out
imul
scas
sub
aad
enter
inc
cmp
sub
and
mov
in
inc
sub
adc
xor
sbbl
iret
cmpsl
jno
xor
xor
popf
xchg
loope
mov
mov
fisttps
arpl
cs
or
mov
xchg
pop
sti
cli
add
mov
xorb
fwait
call
ss
cmpsl
mov
pop
sub
mov
jp
in
xor
dec
adc
cmp
adc
jae
test
pop
in
and
and
outsb
adc
dec
adc
mov
outsl
fidivs
daa
dec
xor
insl
je
in
data16
mov
mov
cmp
movsb
sbb
in
inc
negb
out
aaa
xchg
pop
in
mov
in
push
ficoml
cmp
js
pop
mov
jg
ret
clc
or
pop
loopne
adc
daa
shl
or
jno
or
cmp
mov
and
cmp
lds
je
ja
mov
jno
paddd
aam
jecxz
out
loope
data16
int
push
adc
test
xchg
adc
lock
repz
mov
inc
push
inc
pop
push
pop
push
test
pop
stos
gs
inc
xor
insl
out
insl
or
fwait
out
dec
sbb
inc
jmp
lock
repnz
mov
loopne
mov
frstor
push
push
xchg
repnz
hlt
push
ds
xor
outsb
push
loope
push
xor
jecxz
add
push
fwait
sub
lock
shr
push
decb
mov
sbb
adc
dec
jne
cmc
into
push
dec
lret
fcomps
pop
aaa
sbb
outsb
mov
push
adc
fsubrp
mov
lock
rclb
mov
mov
stos
popf
imul
cmpsb
xor
xchg
dec
add
mov
jno
outsl
test
nop
or
inc
dec
push
push
sub
lea
mov
fistl
and
je
outsb
movsb
lret
xlat
sahf
mov
push
cmp
sbb
jmp
xchg
inc
js
adc
push
xor
repnz
in
rcrl
xchg
gs
call
aam
cwtl
mov
scas
icebp
loop
iret
popf
sar
adc
cmpsl
cmpl
repz
xchg
adc
mov
hlt
lods
mov
rorl
stc
jae
lea
and
and
dec
fwait
int3
mov
mov
enter
pop
sub
sub
sub
adc
popa
dec
adc
iret
inc
jmp
inc
ret
icebp
je
lahf
in
sahf
xchg
cmp
pop
icebp
jecxz
dec
into
test
sbb
jo
cmpsl
outsl
lds
pushf
das
add
out
pop
inc
mov
icebp
idivl
inc
int
cmp
and
add
inc
mov
cmp
js
inc
jg
fadds
inc
push
dec
lret
test
xchg
add
adc
jno
xchg
sbb
je
inc
jbe
mov
mov
js
jne
adc
ja
fadd
cmp
cmpsl
mov
fsubrl
lods
aad
jge
mov
push
or
std
mov
cmpsl
jae
mov
jp
mov
mov
jb
xchg
mov
popa
fucomi
mov
xor
pop
push
scas
gs
pushf
enter
cmc
fidivrs
das
scas
sbb
xor
outsb
cs
clc
mov
movb
jmp
mov
adc
push
movsb
push
push
out
dec
fdivl
fucomip
into
mov
or
adc
xchg
cmp
mov
cmp
mov
cltd
inc
jo
and
ret
pop
cmp
outsb
cmpsb
or
jecxz
aaa
inc
push
jmp
test
add
and
mov
adc
cmpsb
mov
mov
inc
mov
xchg
cltd
pop
xor
fidivl
adc
add
daa
and
sub
inc
out
xor
add
in
cmp
push
mov
dec
leave
inc
xchg
lcall
sti
outsb
xchg
jmp
or
pushf
nop
inc
xchg
pushf
insl
inc
inc
cmp
xchg
pop
sbb
push
cmp
rorb
sarb
mov
dec
pop
and
push
push
sub
icebp
dec
pushf
sbb
fs
sti
fcmovb
ret
fs
pop
sbb
js
ficoms
jnp
out
shr
adc
pop
push
sub
adcl
sti
ret
repz
cmpl
fwait
cmp
dec
subl
cmpsl
stos
clc
cmpsb
jno
dec
enter
push
std
xchg
sgdtl
xor
outsb
mov
cmp
shrb
xchg
insb
in
push
or
jb
ljmp
shll
lcall
jp
push
mov
and
sub
push
adc
xchg
test
xchg
ret
and
pop
into
add
inc
jne
mov
mov
icebp
push
push
cmc
repnz
and
or
sub
insb
dec
gs
test
ret
in
adc
int
outsl
jmp
out
xor
stos
xchg
inc
inc
adc
fnstsw
fisttpll
jne
enter
enter
add
mov
fbstp
xor
in
test
xchg
sub
dec
out
pop
pop
xor
lock
jne
dec
sbb
adc
sbb
mov
inc
xchg
lret
mov
int
cmc
cmp
lock
xchg
dec
hlt
push
cld
imul
fcoms
cmp
inc
fists
hlt
loop
and
jge
clc
fcompl
xchg
pop
rorl
ret
mov
jg
sbb
gs
fisubl
mov
cmpsb
das
int3
fdivs
adc
mov
adc
inc
jb
xchg
jno
sbb
jns
add
adc
dec
repz
adc
mov
fsub
fsts
ss
nop
pop
cmp
out
sub
leave
xor
shrb
test
sahf
rclb
into
adc
dec
lret
pop
sub
pop
repnz
ret
sbb
xor
pop
out
mov
mov
bts
sbb
jge
jmp
daa
daa
out
sbb
cmp
test
and
imul
lfs
push
dec
lret
mov
pop
push
lock
push
les
push
mov
out
jl
jbe
je
push
cmp
mov
cs
test
pop
cmp
fists
dec
dec
and
gs
inc
pop
inc
xchg
shll
dec
pusha
xchg
and
mov
das
das
movhps
scas
loop
sub
ljmp
push
ljmp
outsl
sbb
pop
cltd
lock
pop
and
lret
jns
sub
lret
xchg
fxch
fcomp
dec
ss
lcall
xchg
pop
cli
mov
fists
adc
jp
xchg
cmc
in
xchg
cltd
in
push
sub
mov
hlt
xchg
ds
mov
sub
scas
les
pushf
clc
xchg
rcrl
mov
mov
pop
pop
ret
sbb
jno
dec
idivl
add
inc
xchg
xchg
fs
fcmovnb
inc
inc
rol
leave
cli
js
push
push
xchg
add
pushf
xchg
cmp
faddl
repz
lock
jp
xchg
mov
out
dec
xchg
fwait
movsl
icebp
inc
and
add
outsl
outsb
fcoms
loop
negb
push
cmp
push
in
cwtl
sub
test
shll
cmp
pop
fidivrs
xor
les
sbb
call
inc
repnz
inc
pop
out
pop
mov
jecxz
and
xchg
add
stc
jp
jmp
inc
test
and
fildl
fwait
inc
out
sahf
add
jp
scas
insl
jnp
push
das
sbb
cmp
fsub
aam
jecxz
sti
repnz
fildl
in
fstpl
out
pop
cmp
cs
out
cmp
stos
imul
sub
into
pop
push
iret
fistl
jo
lock
xlat
add
and
addr16
jns
lret
rorb
xor
dec
pop
loop
jge
adc
mov
cmp
xchg
mov
stos
mov
pop
sbbb
cmpsl
adcl
sbb
fsubrp
pop
into
pushf
jb
push
ret
or
pop
aad
in
adc
lret
dec
cmp
rcr
jle
jo
and
aaa
or
adc
jne
mov
fcoml
call
ficoms
packuswb
jecxz
lahf
pop
inc
testb
add
js
pushf
xor
out
inc
jle
cmp
das
js
push
dec
sbb
mov
pop
sbb
outsl
sbb
rcrl
mov
clc
push
pop
addr16
iret
mov
lock
adc
rorl
rol
in
into
mov
cmpl
inc
scas
xor
jge
dec
cmp
mov
loopne
popa
mov
icebp
lock
ja
mov
dec
outsb
scas
fdivs
subl
repnz
xor
in
fildl
xchg
shl
js
mov
js
out
push
jno
mov
cmp
xchg
xor
stos
and
insl
jne
and
inc
add
push
push
outsb
cmp
add
mov
test
rclb
inc
out
mov
aam
addr16
push
cltd
je
push
xor
test
mov
cs
push
in
aam
mov
out
xchg
out
test
add
andl
das
out
and
push
mov
mov
lahf
dec
or
ret
mov
mov
mov
sub
xchg
cmp
cmp
hlt
filds
jl
aaa
adc
pushl
pop
arpl
mov
inc
xor
nop
ret
outsl
and
mov
lds
jo
push
fildll
inc
sub
rcrb
adc
xchg
pusha
xchg
add
mov
sub
or
sbb
cltd
insl
imul
adc
mov
sbb
mov
mov
dec
sahf
adc
repnz
enter
sbb
movsb
aaa
or
loop
xchg
fwait
ss
fildl
stos
stc
movsb
scas
insb
xchg
lret
mov
cmp
push
in
xchg
sub
sbbb
popa
adc
fnsave
mov
xchg
mov
sub
dec
rcll
shl
cmp
cmp
mov
js
jecxz
dec
push
jnp
lret
fildl
xchg
fwait
mov
cmp
adc
xchg
dec
sub
xchg
dec
push
jbe
inc
cmp
adc
dec
aas
fisttpll
xchg
in
mov
ds
xchg
movb
sti
int3
xchg
aas
cmp
xor
loope
aaa
cmp
xchg
and
pushf
mov
cmp
push
into
mov
into
mov
sub
popa
xchg
mov
mov
mov
jmp
orb
push
inc
sub
cmp
inc
es
mov
fadd
cmc
mov
or
pushf
ret
stos
or
cmc
mov
xorl
je
xor
in
jno
cmpsb
and
dec
mov
mov
ja
fldcw
outsb
mov
hlt
out
movsl
pop
cwtl
add
jecxz
dec
and
outsb
jmp
push
add
mov
and
dec
imul
js
imul
lret
in
mov
dec
das
push
into
in
sbb
fisubrs
xchg
push
xchg
push
jp
das
xchg
aaa
popf
ja
inc
xorl
ret
jge
pop
mov
in
add
daa
add
pop
sbb
loope
add
mov
sub
lds
add
jmp
fistpll
add
mov
leave
dec
lahf
ret
int3
adc
out
lret
fisttpl
sbb
sbb
sahf
cmpsb
ljmp
add
dec
add
in
shlb
jbe
aad
push
ja
mov
out
cmp
movsl
into
out
add
nop
int3
insl
inc
sbb
inc
xor
es
in
jecxz
pusha
adc
jns
dec
mov
cmp
mov
mov
inc
lret
ret
mov
push
jecxz
mov
sub
bound
sar
mov
negl
es
outsb
pop
xchg
mov
and
push
addr16
xchg
and
repz
mov
inc
xor
sbb
mov
sbb
pop
sub
mov
mov
fld
into
out
and
pop
fsub
sbb
jb
out
sub
xchg
pushf
xor
fisubrs
jb
mov
sub
add
or
addb
sbb
pop
sarb
repnz
lret
scas
gs
les
push
cmp
add
dec
js
mov
mov
mov
and
mov
xchg
add
dec
sarb
mov
push
daa
and
mov
push
mul
push
inc
mov
mov
movsl
fidivrs
inc
sub
inc
lret
or
push
fldt
xchg
mov
cld
test
imul
imul
jbe
mov
in
push
rcl
push
scas
or
rolb
les
dec
jle
int3
pop
enter
jle
movsb
jno
nop
mov
dec
sub
dec
or
jb
out
lock
cs
jbe
sti
dec
xor
mov
cmc
adc
ds
clc
js
cltd
nop
mov
push
push
add
inc
mov
mul
lcall
sub
mov
test
jbe
shlb
add
xchg
mov
cmc
mov
or
lcall
addl
push
jns
fcmovnb
jl
xchg
aad
sub
push
fsubs
stos
adc
jno
fmulp
ja
cs
das
push
das
inc
imul
nop
test
pop
dec
iret
stos
jne
test
jae
sbb
int
mov
std
inc
aas
rcr
test
stc
jle
add
in
out
lcall
test
xchg
jmp
lods
mov
out
pop
pop
bound
xlat
xlat
insb
push
push
aad
jp
in
adc
mov
jge
popl
or
addr16
jecxz
arpl
es
push
repz
incl
push
pop
cmp
test
stos
xor
sub
out
push
cwtl
mov
jle
mov
mov
cs
ficoml
or
fsubp
popa
dec
adc
arpl
mov
jge
jb
imull
insb
mov
add
dec
stos
pop
notb
dec
cmp
pop
adc
sub
inc
lret
mov
push
push
push
and
xorb
addl
push
jge
pushaw
xchg
stos
rcr
sub
pop
mov
sbb
dec
sub
xchg
xchg
outsl
lcall
sar
mov
cmp
pop
mov
mov
repz
xor
mov
lea
pusha
or
je
sub
push
pushf
lret
rcll
mov
int3
jge
aas
sbb
enter
fsubrp
adc
loopne
mov
dec
mov
fucomi
cmp
inc
es
daa
inc
lahf
dec
push
push
sahf
mov
xor
mov
sarl
jge
mov
lea
mov
add
jmp
pop
mov
xchg
lahf
mov
popf
adc
pop
loopne
cmp
inc
outsb
das
cwtl
jle
adc
scas
int3
mov
mov
push
clc
push
adc
cmp
xlat
adc
fmuls
cmpxchg
bound
inc
insl
popa
les
push
je
xchg
dec
push
jmp
popa
fnstenv
push
test
fsubrs
push
mov
dec
mov
dec
fwait
push
xor
cmp
sub
xor
lock
pusha
ret
push
pop
into
mov
pop
xor
mov
and
sbb
sbb
mov
out
xchg
add
mov
jo
and
push
fxch
inc
fmuls
aas
ficoms
push
roll
lock
cmp
add
push
push
lods
jmp
pusha
inc
cmp
subb
pop
nop
loope
mov
push
out
add
arpl
xor
addr16
cwtl
add
ret
cld
inc
and
push
sbb
loop
push
into
fstp
stos
xchg
mov
std
and
cli
cltd
sti
enter
fisttpll
std
mov
xorl
cli
dec
insl
jg
jne
sbb
imul
stos
and
out
push
mov
gs
and
lock
mov
cmp
mov
add
ret
sbbl
cmpsb
inc
ljmp
lahf
out
nop
xchg
sti
push
out
cmp
pop
fistpll
xlat
ret
jmp
call
xchg
rcrb
hlt
mov
push
add
loopne
jo
jle
xor
sbb
sarl
push
mov
in
and
out
into
out
or
imul
popa
cmp
imul
call
pop
aas
add
test
sub
xor
push
fs
sub
sub
loope
mov
cwtl
cmp
loopne
ret
sbb
jns
push
cltd
dec
jg
pushf
lret
mov
sbb
popf
imul
add
test
jmp
fimuls
imul
pop
adc
addr16
adc
inc
xchg
push
cmp
pusha
jae
lods
adc
sub
inc
or
fists
les
mov
cmpsb
mov
mov
sbb
xor
cmp
cwtl
scas
add
pop
cmp
sahf
into
outsl
in
hlt
jnp
mov
mov
out
scas
and
das
sub
fstp
inc
mov
out
mov
repnz
or
or
push
dec
jmp
mov
dec
xchg
fisttpll
push
mov
popf
pop
nop
adc
lret
xchg
inc
sbb
jns
adc
push
and
les
cwtl
test
sahf
mov
mov
mov
mov
imul
mov
push
dec
call
jae
cmp
js
mov
xchg
ds
xlat
leave
jae
sti
dec
xchg
push
dec
jecxz
mov
pop
or
adc
dec
dec
pop
pop
nop
push
cmp
mov
dec
jmp
pop
jmp
push
stc
jb
pop
pop
stos
stos
jne
xor
adc
mov
aas
rclb
lods
xlat
jle
inc
outsl
jle
movl
mov
scas
sub
repnz
gs
add
test
into
push
sahf
jnp
fwait
jle
outsb
fnstsw
add
iret
push
inc
orl
out
sub
ret
lret
out
daa
or
mov
mov
or
and
leave
les
sbb
xor
dec
jmp
inc
xchg
adc
nop
nop
js
add
aaa
sub
mov
popa
pop
pop
xchg
mov
dec
testb
sahf
sbb
imul
push
test
repnz
cmp
cmp
sub
xchg
cmpsb
pop
incl
into
adc
test
adc
lds
dec
lods
in
push
mov
adc
ds
out
outsl
cmp
pushf
sarb
dec
shr
insb
ret
sbb
mov
mov
pop
jmp
lret
test
dec
mov
pushf
daa
add
aam
push
cmp
or
push
int
push
dec
xchg
and
add
inc
mov
pop
call
and
call
adc
jno
sbb
repz
loopne
insl
aas
mov
dec
mov
adc
and
bound
test
mov
xor
popw
adc
mov
mov
movsl
or
mov
imul
les
xor
in
mov
pop
sti
ret
push
ja
hlt
pop
and
and
adc
lahf
cmp
das
insl
dec
arpl
lret
ror
fmulp
xchg
adc
cmp
sub
xor
aas
js
jp
push
outsl
mov
fstpl
nop
call
cld
adc
into
iret
and
aam
data16
gs
mov
loop
mov
mov
lds
data16
adcb
in
cltd
shll
xor
xor
dec
add
shrb
mov
jns
sahf
mov
xor
mov
mov
xchg
and
sub
cltd
das
or
lods
fucomp
lea
repnz
out
and
cli
ljmp
or
ret
in
fidivs
pop
lcall
pop
xchg
xor
in
xchg
mov
hlt
bound
jle
adc
fldenv
imul
in
inc
or
out
jl
rcr
inc
sti
sub
sbb
xlat
push
jnp
fs
or
cwtl
outsl
fstps
mov
adc
adc
push
call
cmp
push
mov
aaa
pop
adc
push
inc
popa
outsb
and
and
cmp
xchg
jle
xlat
into
xchg
iret
inc
sahf
or
fld
out
repnz
adc
mov
aam
loop
or
stos
push
mov
mov
add
cmp
pop
dec
dec
push
sub
xchg
outsb
and
in
dec
push
sub
call
in
pop
bound
loope
imul
inc
add
pop
leave
icebp
les
rcll
leave
ds
and
adc
mov
fsubrl
cmpsl
arpl
rorl
sub
adc
loop
or
and
sbb
add
outsl
ljmp
jmp
push
lret
push
pop
inc
sahf
cwtl
incb
push
and
cld
mov
out
and
mov
loope
jg
mov
mov
enter
jl
inc
xchg
add
rep
loop
xchg
xchg
pop
sbb
inc
and
jnp
ficoml
sahf
in
sbb
xchg
cmpsl
dec
adc
cmc
ror
push
imull
jecxz
mov
lock
mov
lock
mov
inc
out
insl
push
lcall
cmp
dec
jp
addr16
push
xor
xchg
cmp
dec
inc
xor
ret
addl
lret
jae
add
arpl
add
addr16
inc
xchg
sbb
enter
outsb
sub
cmp
fcompl
js
inc
sub
jg
out
push
es
test
inc
xor
movsb
and
hlt
int
lret
xchg
sub
pop
inc
adc
sub
xchg
pop
cmp
dec
je
sahf
mov
or
divb
loope
notb
inc
mov
shl
dec
xorl
dec
push
pop
orb
into
mov
jae
mov
sbb
push
data16
cld
sbbb
mov
mov
data16
jmp
sbb
pop
leave
iret
scas
outsl
jbe
icebp
jne
fcmovnb
dec
cld
stc
cld
jbe
addr16
fwait
dec
xlat
inc
out
and
in
pop
movsl
ja
lret
in
push
lret
mov
inc
sub
out
cmp
ret
mov
sbb
mov
xchg
and
xchg
cmp
test
xor
sbb
rclb
xor
pop
xor
xchg
test
jmp
xor
mov
mov
cltd
arpl
out
pop
pop
inc
push
pop
mov
insl
xchg
icebp
arpl
xor
or
adc
fldenv
push
pusha
jnp
fldcw
lods
adc
popa
insb
mov
push
dec
aas
mov
mov
out
sbb
pop
ficoms
inc
fisttps
push
jmp
pop
adc
jecxz
push
adc
mov
jg
lds
test
pop
push
out
call
movsb
mov
stos
insb
mov
and
les
pop
cld
cmpps
xchg
xchg
int
jno
or
push
movsl
xchg
adc
cwtl
pop
stos
mov
jb
inc
and
into
xor
cli
enter
das
xor
stc
int
and
cmc
mov
add
aad
xchg
fwait
or
mov
and
lahf
inc
xchg
ss
mov
sbb
fadds
sub
dec
jle
jae
jge
mov
fwait
mov
in
nop
xor
sti
enter
and
adc
out
lods
enter
popa
lret
xchg
inc
dec
mov
fadd
inc
and
mov
gs
push
insl
inc
push
insb
sub
push
jle
lock
add
in
and
sub
inc
jo
or
out
xor
pop
mov
test
in
cmpl
stc
movsl
xor
sub
mov
xchg
jp
addl
lds
jnp
loopne
pop
adc
push
out
add
ret
and
pop
jmp
sahf
in
push
push
mov
push
push
outsb
sbb
pop
and
inc
mov
sub
pop
lock
clc
fdiv
push
push
and
xchg
sbb
sti
adcb
mov
lahf
sarl
cmp
jg
inc
loope
mov
lock
push
jb
rcrl
jecxz
clc
shll
dec
push
ret
dec
pop
call
rolb
inc
xchg
outsb
inc
sub
jns
inc
fcomi
mov
or
jno
xchg
adc
rcrl
cs
inc
adc
mov
jmp
push
scas
xor
out
insb
repnz
sub
jg
and
into
pop
pop
or
insl
dec
jge
or
xchg
sahf
pop
push
dec
xchg
fnstenv
enter
adc
mov
pop
out
lahf
push
notb
ror
imul
rcrl
outsl
or
inc
add
out
jbe
xlat
or
rcll
enter
push
bound
xor
push
pusha
jg
or
testl
rcrl
lock
xchg
push
aaa
lcall
and
pop
sbbl
mov
adc
sbb
cwtl
loop
jne
inc
mov
out
jb
adc
js
rcrb
stos
fisttps
and
test
pop
subl
in
int3
es
aas
pop
jno
lahf
mov
inc
mov
pushf
add
data16
sahf
xor
leave
inc
outsb
lds
idivb
popa
xchg
mov
daa
out
jge
lock
test
dec
in
stos
insb
inc
xor
hlt
cltd
imul
or
pusha
push
adc
xor
enter
outsl
in
rorb
xchg
jecxz
inc
ds
stc
xor
push
pushf
testb
adc
mov
ret
pusha
push
jnp
sub
shr
pop
movsb
dec
fsubs
dec
loop
out
add
movsb
mov
cmpsb
push
sub
and
push
mov
aas
mov
jl
daa
inc
sub
add
into
cli
cmc
adc
push
mov
je
lods
mov
aad
jge
mov
enter
push
jp
fsubrs
or
xchg
mov
inc
jmp
xchg
sub
jne
cltd
mov
pop
mov
adc
lahf
cmp
jbe
outsl
testb
shll
pop
out
scas
push
rorb
hlt
pop
mov
and
test
xor
insb
fdecstp
in
dec
lahf
xchg
adc
inc
mov
call
leave
outsb
insb
xchg
xchg
insb
test
idivb
test
xchg
aad
push
mov
filds
inc
xor
fidivrl
test
mov
and
xchg
sub
pop
sub
arpl
insl
inc
in
mov
dec
sbb
sub
adc
loopne
ljmp
push
rcrb
aas
jecxz
mov
ds
lret
push
cmp
in
sub
imul
cmpsb
inc
push
cmpsl
mov
xor
pop
cmp
rolb
adc
insb
jl
mov
roll
xor
out
fucom
hlt
ffreep
pushf
xor
dec
sub
int3
in
jmp
in
loope
push
sub
and
sub
nop
mov
mov
cmp
popf
pushf
jne
and
shlb
popa
test
xor
les
icebp
mov
jmp
rolb
jno
dec
cmpsl
mov
dec
pop
fisubrl
mov
push
pop
push
lret
mov
add
or
out
sub
popf
push
mov
fsts
or
movsb
lods
loop
jp
andl
iret
jge
and
jle
lock
dec
into
movsb
outsb
lcall
ljmp
sbb
dec
mov
jnp
jnp
fsubp
inc
loopne
jae
shlb
repnz
fwait
lcall
and
ret
inc
cmp
mov
test
lea
lea
cmp
jo
cs
adc
cwtl
lret
stos
out
sub
sbb
leave
daa
lcall
lds
xchg
lock
pusha
idivl
fucomi
stos
jbe
lret
sub
xchg
out
cmp
pushl
push
inc
lret
xchg
add
or
iret
stos
sub
es
outsb
dec
daa
clc
jmp
sar
hlt
push
sbb
xchg
imul
dec
mov
hlt
inc
xor
stos
sti
repnz
insb
ds
xchg
outsl
or
mov
aaa
or
mov
jo
jmp
and
xor
lcall
mov
loop
call
mov
adc
cmpsb
jno
push
push
lock
push
call
stos
xor
leave
sbb
sbb
push
mov
call
pop
adc
mov
mov
and
fiadds
jb
push
push
lret
daa
pushl
sub
sub
mov
sti
bound
ret
jecxz
mov
add
aam
xorb
pop
push
xor
push
shlb
jp
bound
inc
jge
xor
inc
jno
int
jle
mov
scas
add
and
or
pop
sub
and
mov
je
add
adc
inc
ja
ljmp
insb
ficoml
aaa
das
or
cltd
into
xor
hlt
mov
pop
stos
je
ds
sbb
fnstcw
sub
fimull
jge
sbb
dec
std
out
push
sarb
orb
adc
in
cmp
or
movsl
lea
push
dec
sbb
into
pop
aaa
addr16
mov
sbb
xchg
call
mov
fwait
ljmp
add
fistl
aaa
jns
cmp
cmp
lock
mov
lret
jne
mov
xchg
insb
loope
fldl
push
pop
pop
fnsave
pop
or
test
jo
push
jmp
ds
push
mov
jo,pn
loopne
fiadds
mov
rol
cmp
jmp
pop
adc
sbb
push
mov
stos
push
cmpsl
roll
add
fwait
pop
roll
arpl
lea
mov
mov
mov
jnp
inc
insl
xor
fucomip
dec
add
gs
clc
out
popa
movsb
cmpsb
outsb
stc
aad
leave
icebp
mov
aaa
xchg
mov
das
lods
xchg
mov
mov
sbb
jecxz
lds
daa
mov
and
cmp
loope
push
sarb
insl
mov
fcoml
cmp
xchg
bound
arpl
mov
inc
push
imul
out
mov
arpl
mov
ja
mov
pop
ds
mov
ret
sub
push
popa
inc
shlb
sub
cmp
flds
outsl
dec
or
rcr
imulb
sbb
cltd
xchg
int3
pop
and
stos
jmp
mov
jp
out
inc
xor
mov
rorb
jne
test
stos
push
mov
loop
daa
lret
outsl
cmpsb
dec
daa
cli
cld
in
lods
mov
imul
rcrb
mov
int3
add
mov
aaa
sbb
out
js,pn
jne
mov
add
daa
in
loop
adc
test
cmp
xchg
sub
orb
dec
orb
jbe
nop
xor
sti
mov
inc
inc
dec
shlb
test
cltd
daa
out
imul
or
lds
sub
jg
inc
jmp
sbb
mov
inc
cmp
sub
aas
sbb
push
psubq
out
inc
xor
rorl
arpl
inc
icebp
jg
orb
jmp
mov
pop
enter
rcrl
pushf
pop
xchg
add
pop
inc
jecxz
inc
xchg
sbb
lcall
es
fwait
push
push
or
out
push
stc
inc
outsl
mov
enter
jno
dec
jb
jno
inc
mov
xor
ljmp
fisubs
xor
daa
and
pop
inc
jne
test
dec
orl
rclb
adc
ret
lret
sub
pusha
fbstp
daa
mov
pop
add
adc
dec
fldt
dec
jae
cmc
mov
push
sbb
cli
adc
jbe
adc
int
cltd
popl
ja
loop
pop
sub
xor
mov
es
add
cmp
dec
jl
push
lods
ret
or
cmp
jg
adc
sbb
push
cs
jb
add
xchg
or
in
lret
add
pop
jecxz
cwtl
xchg
inc
jg
pop
test
xlat
adc
loop
mov
out
push
mov
repnz
filds
mov
ficoml
sub
movsl
test
and
push
nop
xor
mov
push
adc
jne
push
in
loope
in
imul
adc
iret
mov
jp
xor
orb
out
and
into
mov
cmp
addr16
sbb
cld
aas
popa
pop
sub
pop
sbb
dec
bound
daa
add
dec
xor
nop
ss
xchg
mov
call
mov
bound
aam
movsl
cld
insl
jl
or
insb
cmp
int
push
lods
ds
imul
jge
imul
mov
imul
dec
xchg
enter
dec
dec
movsb
or
jo
lret
push
movsl
cmp
adc
xchg
std
js
jmp
push
es
js
arpl
insl
push
pop
lahf
fwait
jl
mov
jb
imul
jmp
pop
dec
push
push
dec
cmpsl
adc
outsb
jmp
aaa
test
out
xchg
rclb
pop
cmp
xor
negl
inc
sub
iret
test
push
sub
fwait
outsl
cmp
inc
popf
xchg
or
dec
push
add
hlt
cmp
mov
lods
inc
dec
pop
mov
mov
hlt
dec
mov
rorb
inc
xchg
enter
lock
cmpsb
push
xor
inc
mov
dec
push
jmp
push
jbe
in
mov
push
insb
xor
sub
sub
dec
xor
pushf
cwtl
adc
pop
sbb
orl
fstpt
stos
icebp
repnz
rolb
imul
fadds
mov
dec
push
add
loop
std
adc
jl
sub
jbe
int3
cmp
pusha
enter
enter
push
pushf
insl
inc
sub
push
pop
test
pop
cmpsb
cmpsl
add
dec
out
pop
lods
mov
insl
lock
and
outsl
fs
sbb
mov
jno
sbb
xor
imul
sub
test
sbb
cli
sbb
cmp
std
mov
jo
mov
incb
nop
mov
sbb
loop
decb
cwtl
xor
cwtl
sub
popf
inc
or
or
sub
rorl
iret
shrd
sub
jp
xor
xchg
inc
mov
xlat
in
sub
dec
sub
test
cmp
sub
inc
mov
daa
fwait
xor
mov
in
mov
ss
xor
mov
leave
out
cmc
test
mov
xchg
sub
push
insb
inc
int
jno
daa
mov
mov
add
and
or
pop
adc
popf
xchg
sbb
cs
inc
lahf
xchg
mov
int3
and
or
sbb
inc
sub
outsb
xchg
jb
add
and
inc
stos
adc
dec
jmp
lret
adc
pop
xor
je
sub
mov
orl
push
fwait
or
fstp
cmp
inc
subb
lret
pop
arpl
call
gs
decb
cmp
out
sub
clc
push
lret
imul
cmp
or
push
fst
cld
pop
jnp
jecxz
sbb
inc
fcoms
push
jno
add
shrb
inc
sbb
push
jmp
je
sub
cwtl
fidivs
mov
lret
pop
inc
stos
ss
shlb
jge
mov
xchg
xchg
sahf
mov
mov
rclb
mov
data16
cmp
or
pushf
and
cmpsl
xor
mov
aas
movsl
gs
in
into
xchg
pusha
aas
mov
cmpsl
iret
push
insl
pop
call
sub
add
inc
dec
dec
rcrl
add
iret
pop
enter
shlb
pop
jnp
mov
xchg
add
sub
dec
rcr
loope
int3
lcall
cmpsb
cmpsb
stos
lahf
add
jns
repz
cs
fxch
loope
add
inc
into
dec
and
jnp
out
cmp
out
adc
data16
test
bnd
fwait
cmpsb
push
shll
das
mov
daa
jns
sbb
pop
dec
inc
mov
cmpsb
movb
out
iret
xchg
fdivs
sbb
cmp
test
nop
loopne
xchg
out
imul
lret
cmp
out
inc
jp
jbe
mov
inc
bound
out
xchg
aaa
test
push
or
cmp
fs
ret
pop
mov
sub
arpl
imul
mov
ret
sbb
repz
test
cmp
mov
lds
push
xchg
add
push
cmp
xchg
push
jmp
scas
jecxz
shl
js
lods
in
adc
jge
addb
mov
xlat
pushf
sub
jae
mov
mov
dec
lret
xlat
mov
call
call
push
lods
mov
push
andl
rcr
es
leave
pop
and
push
sbb
mov
dec
data16
test
insb
jle
push
inc
adc
adc
xor
cmp
repz
adc
repz
dec
inc
mov
nop
inc
insl
push
jl
cmpsl
outsb
loop
lock
std
out
sbb
fsubr
pop
frstor
leave
aas
mov
xlat
es
in
and
xchg
decb
mov
pop
sti
push
lret
aad
or
out
popf
fcoms
xor
in
add
hlt
ja
jmp
movsb
fwait
movsb
sub
and
in
imul
cmp
add
fists
dec
jp
pop
sub
test
in
sbb
scas
adc
pusha
mov
nop
cmp
lods
dec
lock
lock
xchg
adc
enter
andl
cli
aad
mov
mov
push
mov
mov
mov
test
inc
dec
cmc
sarl
std
jge
mov
push
xchg
lea
out
mov
fisttps
mov
dec
push
sub
lcall
jb
or
loop
out
testl
leave
outsl
mov
mov
and
push
mov
push
daa
inc
pushl
mov
and
daa
inc
fldl
lahf
out
in
in
mov
jge
push
or
fdivs
aad
int
aad
adc
out
cld
mov
into
dec
repz
pop
out
push
xor
xlat
sub
dec
aad
add
cmp
mov
push
inc
push
jg
enter
pop
xchg
loopne
inc
jb
xchg
jne
ds
and
gs
inc
jp
imul
fdivrl
lods
insl
pop
ds
sbb
mov
lock
inc
push
in
pop
jmp
jecxz
les
and
lahf
push
dec
jmp
pop
sbb
xor
fisubl
cmp
xor
jne
and
pop
and
xor
mov
jns
icebp
rol
lds
pop
rcll
pushf
and
test
rclb
xor
stos
dec
push
and
xchg
ffreep
jns
add
add
xor
fldenv
sbb
ljmp
fnsave
test
out
lcall
outsb
push
xor
jg
dec
cmp
inc
or
adc
iret
andb
push
push
js
dec
mov
jo
test
pop
jae
inc
inc
ljmp
aas
insl
sbb
pop
addr16
fs
jecxz
xchg
xor
negl
fldcw
repz
jge
sub
cli
push
cmp
jno
fcoml
into
push
aaa
pop
push
xor
mov
cld
movsl
dec
in
xor
rorb
xlat
xor
dec
in
lock
xchg
jno
pushf
das
pop
cwtl
cwtl
xor
int3
iret
add
into
mov
neg
popl
out
ds
push
movsb
push
xor
imul
inc
adc
mov
adc
adc
dec
xor
repnz
in
mov
adc
or
add
sub
adc
add
stos
cwtl
xchg
xor
jb
jno
inc
outsb
ret
mov
rep
adc
push
or
iret
jb
inc
jae
lret
jno
mov
mov
inc
jo
add
dec
fimuls
sub
fisttpl
cmp
jb
rclb
mov
mov
fnstsw
in
fiaddl
and
or
hlt
bound
pop
inc
pop
addr16
jecxz,pn
sbb
xor
push
out
pop
xchg
fidivs
pop
dec
ss
aaa
mov
daa
lahf
ret
data16
mov
dec
mov
mov
fs
xchg
adc
shl
jmp
mov
inc
cmp
mov
in
sbb
sbb
xchg
mov
arpl
sub
inc
jp
cltd
adc
shl
dec
test
xchg
aad
xchg
ja
movb
sbb
sbb
pushf
adc
call
inc
in
lcall
add
dec
sub
dec
or
out
test
dec
dec
outsb
ds
inc
cmp
inc
stc
adc
rolb
movsl
mov
sti
ret
out
xlat
shll
push
movsl
sti
push
pop
ret
flds
jl
data16
and
mov
mov
std
sbb
and
xchg
mov
int
addr16
jge
mov
mov
pop
mov
xor
imul
xor
mov
test
lahf
jns
cmpsb
xor
lea
sahf
jmp
pop
jg
repz
stos
xor
cwtl
pop
ret
pop
add
loop
sbb
push
cmp
es
imul
xchg
insb
ficompl
add
in
xor
jecxz
jle
sub
mov
cmp
sbbl
fsts
cmp
loop
cs
ja
jne
shlb
fisubl
sarb
ret
rorl
cvtps2pd
ss
xchg
icebp
cmp
xchg
int
pop
cmc
sbb
imul
sbb
xor
fwait
mov
pop
pop
cmp
jne
mov
pushf
jnp
mov
rorl
fstpt
je
mov
xor
mov
fwait
add
insl
fmuls
out
xor
pusha
or
sahf
xor
push
or
xor
enter
sarb
jae
in
jle
stos
xchg
push
addr16
es
dec
movsb
push
psllq
inc
mov
cli
xor
arpl
roll
imul
cltd
jg
lock
and
mov
sub
in
adc
test
add
push
push
arpl
out
lret
jle
add
leave
add
pop
push
or
mov
mov
jbe
mov
pop
inc
push
dec
pop
bound
sub
push
rcrb
inc
sbb
outsl
dec
xchg
xchg
and
and
jmp
push
mov
imul
inc
mov
add
ds
fists
and
in
xchg
fildll
xor
rcrl
inc
ss
das
mov
mov
mov
mov
inc
dec
pusha
and
push
leave
int3
or
mov
into
mov
fistpl
cvtdq2ps
ret
int3
mov
mov
mov
decl
xor
jp
xchg
fnstenv
adc
pop
test
cmp
add
sahf
or
and
xor
ss
adc
jge
jo
xchg
pusha
fnstsw
sub
and
push
inc
push
ret
xchg
sub
cwtl
mov
loop
jmp
rorb
inc
cmp
pop
add
cltd
adc
testl
in
les
xchg
jecxz
notl
popf
dec
jb
dec
jl
cmpsl
sbb
adc
in
das
aad
adc
mov
int
xor
andb
ret
or
push
stos
outsl
fcmovnb
ficomps
adc
shl
jmp
inc
fnstsw
push
or
mov
stc
mov
sbb
ret
xchg
das
inc
mov
jae
mov
loope
dec
lret
clc
lods
aaa
cmp
aas
sbb
xor
xor
pop
adc
sbb
fstl
sahf
outsl
mov
aam
icebp
add
divb
fnstsw
xchg
lds
outsl
xchg
or
adc
movsl
push
dec
in
or
adc
xchg
jno
xchg
xchg
pop
aaa
dec
fdivrp
ds
sahf
das
lock
pop
adc
cld
lea
test
leave
lret
pandn
mov
sub
sti
sub
hlt
cmp
gs
int3
ja
call
out
orl
into
push
inc
imul
fwait
cwtl
popf
mov
mov
cmpsl
stos
rcrl
or
add
inc
arpl
dec
cmpsb
adc
scas
daa
sbbl
rorl
dec
and
ret
cmp
cwtl
insb
cmp
pop
lret
test
shrb
add
xchg
mov
imul
inc
dec
dec
fs
fistpl
les
adc
mov
xchg
in
push
out
or
test
fsubl
cli
fwait
xor
je
lds
xchg
jecxz
es
inc
lahf
cltd
inc
ret
push
lea
out
dec
test
rorb
and
inc
jae
cmp
inc
and
pop
call
in
dec
cmpsl
pusha
dec
inc
sub
movb
fsubr
aaa
adc
fs
sbb
mov
dec
dec
es
jno
int
loop
inc
lret
mov
repz
inc
jecxz
and
ret
popf
hlt
pop
add
ror
jns
stc
cmp
xchg
xchg
test
xlat
or
jmp
out
adc
aam
outsb
jecxz
andl
idivl
jmp
mov
xchg
repz
mov
fisttps
xchg
lahf
out
add
ret
inc
in
fidivrl
push
fbld
xor
inc
mov
outsb
stos
inc
xchg
jne
into
dec
aaa
pop
sbb
imul
hlt
jns
lcall
or
fstps
dec
mov
std
pusha
jbe
jge
add
in
das
dec
inc
jne
xor
leave
lcall
cmpl
aas
cmp
movsl
xor
es
or
jo
push
cwtl
lahf
ret
dec
inc
ja
push
push
lods
xchg
push
jle
cmp
cmp
push
ret
pushf
mov
test
push
call
hlt
dec
push
push
dec
in
mov
popa
popa
pusha
shll
push
mov
out
insb
sarb
push
shrl
dec
into
mov
out
les
loopne
xchg
dec
cmc
popa
std
add
sub
pop
xor
jns
add
adc
add
dec
loopne
idivb
sbbl
mov
fwait
cmpsb
movsb
div
sti
gs
xchg
sbbb
jl
jle
sub
cmc
push
cmp
jg
outsb
adc
ret
jbe
out
lods
mov
mov
daa
lahf
call
dec
adc
cmp
cs
cwtl
push
mov
adcb
dec
call
outsl
pop
xchg
jnp
add
push
dec
out
mov
test
outsb
or
push
xchg
inc
cmpsl
pop
add
daa
neg
lods
fyl2x
andl
mov
adc
int
movsl
push
loope
mov
xchg
push
es
dec
lcall
xor
sub
movsb
and
aaa
adc
inc
inc
cmp
mov
pusha
fcompl
xchg
add
imull
add
inc
movsl
scas
mov
out
cmp
dec
outsl
xor
mov
rep
adc
imull
into
fisubl
jb
inc
or
notb
pusha
gs
dec
push
dec
lea
dec
pop
addl
cwtl
in
aam
leave
jg
cmp
aas
ljmp
insb
mov
mov
sbb
dec
cmc
cmc
inc
sbb
adc
inc
push
je
addb
loopne
and
jle
lods
shl
dec
mov
inc
fdivrs
xchg
out
adc
mov
xchg
bound
and
ret
xchg
stc
cld
dec
ret
and
hlt
data16
ljmp
lret
sahf
loopne
xchg
push
mov
fwait
cmp
xor
int
arpl
or
or
nop
and
xor
cmc
and
mov
mov
fstl
push
ret
xor
out
mov
fadds
push
mov
dec
xchg
mul
cmpsb
add
pop
call
pop
rcrb
das
lcall
jg
and
rcrl
jecxz
das
and
dec
mov
adc
xchg
jge
fldl
in
lret
xchg
inc
xor
jo
movsl
jnp
mov
push
jnp
mov
push
outsb
gs
add
fnstenv
xor
push
lds
xchg
sub
dec
rcrb
iret
lods
addr16
cmp
mov
cmp
call
mov
out
add
pop
pop
or
test
jnp
mov
add
aaa
pop
in
clc
std
sub
outsl
sub
xchg
jo
xchg
push
addb
pop
dec
pop
mov
shll
aaa
dec
imul
js
outsl
xlat
ficoml
shl
js
jmp
or
mov
dec
sbb
ret
fnstcw
lock
sbb
mov
sti
daa
pop
mov
xor
mov
push
aaa
sti
and
adc
shl
in
pusha
gs
adc
xor
nop
out
and
mov
xor
inc
sbb
sbb
cwtl
xor
add
loop
inc
add
lods
dec
xor
loope
mov
or
loop
inc
inc
xchg
xchg
cmpsl
lahf
mov
orb
inc
xchg
sarl
add
daa
sbb
sbb
decl
dec
repnz
daa
and
mov
lahf
push
mov
cmpsl
push
loope
je
into
pop
cmpsb
out
idivb
xchg
int3
shll
inc
stos
pop
test
mov
xor
in
xor
leave
push
dec
fistl
adc
adc
xor
xchg
xlat
ljmp
push
adc
mov
subl
inc
decb
push
movsl
lcall
roll
into
jbe
dec
nop
cmpsb
inc
mov
shr
cmc
incl
sarl
fs
pop
popf
cmp
das
shl
addr16
inc
adc
inc
repnz
inc
dec
xchg
out
xchg
std
imul
nop
mov
xchg
loopne
sub
jne
pop
dec
inc
jp
xorb
bound
mov
mov
xchg
mov
sbb
aam
xchg
sti
mov
sub
pop
addr16
std
inc
shr
and
lds
jnp
jl
insl
adc
arpl
push
out
or
sub
in
movsl
push
stos
mov
leave
fadds
pcmpgtb
jns
inc
imul
movsl
xor
mov
mov
and
inc
cmp
sbb
inc
lds
and
jb
orb
fcomi
inc
sbb
add
fsubs
inc
gs
and
mov
stos
dec
pop
adc
std
cwtl
test
mov
rol
adc
std
pop
mov
add
movsl
in
hlt
mov
dec
pop
cmp
jecxz
push
push
mull
movsb
out
jbe
cmp
mov
in
mov
shl
fbstp
xchg
mov
enter
int
push
aaa
sti
pop
add
movsb
jecxz
xchg
mov
push
daa
out
pop
out
in
lcall
sahf
mov
inc
mov
sbb
sti
cmp
xchg
add
jb
push
pop
iret
adc
imul
jecxz
mov
pushf
push
inc
or
aaa
adcl
pop
lds
inc
add
lods
push
in
ljmp
jp
or
adc
cmp
into
inc
mov
xor
ret
out
call
pop
mov
dec
or
pop
cbtw
mov
gs
or
inc
mov
test
dec
mov
dec
jbe
pop
call
or
mov
or
add
arpl
pushf
add
dec
test
cli
in
in
fldcw
bound
aam
or
xchg
outsl
pop
cwtl
sub
dec
out
dec
add
push
cltd
jns
inc
das
sbb
dec
outsl
lds
gs
mov
ja
jl
mov
pop
les
loop
jb
ljmp
nop
jge
outsl
div
dec
cmpsl
mov
js
lret
movsl
add
dec
sbb
sub
test
aam
lds
lret
inc
lods
dec
popa
out
jecxz
lea
sbb
cmp
out
test
fdivrs
adc
dec
out
push
inc
pusha
out
test
dec
bound
aaa
fidivl
mov
jno
cmp
fdivs
shlb
mov
xlat
addr16
add
into
adc
sub
xchg
bound
and
mov
cmpb
in
fsubl
cmp
dec
aas
add
rclb
jae
sbb
push
bound
mov
cmpsl
outsb
fmull
sbb
jmp
add
jnp
cmp
insl
pop
xor
int
or
cmp
test
xor
xlat
ds
jns
in
or
gs
vorps
cwtl
adc
fcompl
xchg
pop
xor
pop
xchg
cwtl
aas
test
sub
out
inc
mov
jecxz
andb
fwait
test
fwait
or
or
in
pop
mov
dec
add
xor
lahf
adc
leave
xacquire
or
or
pop
and
adc
pop
mov
call
mov
jg
stc
jmp
mov
add
pop
into
mov
arpl
lret
test
mov
cmp
ficoms
cmp
idivl
mov
out
adc
dec
or
inc
pop
xchg
push
jle
sbb
push
mov
int
sub
mov
rorb
movsl
mov
je
cmp
adc
lret
daa
test
pop
push
xchg
ljmp
xlat
test
mov
sub
outsb
and
popl
loope
enter
cmp
fwait
jnp
in
add
in
lahf
mov
shl
adc
cmp
add
xchg
push
and
mov
or
jge
scas
cmp
out
ja
xchg
xor
aad
inc
jbe
push
int3
in
adc
mov
sbb
fisttpl
and
add
lods
fldcw
adc
repnz
xor
sub
mov
mov
jne
push
xor
jae
ret
sub
xchg
inc
inc
pop
ds
lea
mov
out
ffreep
cltd
lds
xchg
les
outsb
dec
inc
cwtl
dec
xchg
cwtd
jnp
test
js
shlb
pop
mov
push
movsb
jle
push
psubw
pop
adc
fbstp
push
add
ja
ret
mov
mov
loope
or
add
mov
sbb
lcall
sbb
and
xchg
inc
dec
outsl
ret
aam
lea
lods
ret
or
in
sbb
es
out
add
leave
mov
inc
jmp
fstps
xor
outsl
mov
out
daa
rcr
cwtl
mov
dec
mov
sbb
push
cli
inc
fsubrs
fcoms
cmp
pextrw
addr16
sbb
sub
jecxz
dec
imul
mov
inc
inc
mov
movsb
mov
push
adc
andb
cld
fldcw
mov
jge
les
cmp
adc
adc
fs
inc
fldenv
fadd
sub
and
and
decl
dec
ss
or
jno
push
push
dec
lock
and
int3
lock
gs
xchg
lcall
jg
dec
lcall
data16
divl
shlw
in
ds
xor
loope
push
mov
mov
ljmp
sub
sahf
push
lds
lahf
cmp
ja
sbb
mov
push
jl
scas
adc
xor
push
daa
repz
inc
mov
lahf
pop
and
add
lahf
insb
fildll
addb
dec
xlat
loop
xor
js
ret
jg
push
or
pop
pop
test
mov
or
and
es
adc
pushf
fdivs
pushf
outsb
jae
fimull
pop
fs
aaa
ljmp
lahf
pop
lret
or
sub
into
fcoms
jge
shll
add
and
cmp
cmpsl
psrlw
jle
inc
es
jge
repnz
xor
mov
and
or
ret
andl
inc
mov
xchg
ror
inc
int3
ret
pop
rcrl
push
ret
pop
out
sbb
push
push
inc
ss
test
and
cltd
mov
xchg
repz
lahf
dec
fisubs
icebp
inc
imul
aam
sub
mov
adc
dec
inc
dec
dec
popf
push
subl
jmp
and
xchg
lret
test
mov
add
dec
pop
inc
data16
or
cmpsb
movl
les
test
sahf
jae
inc
testl
ret
lret
scas
pop
inc
popa
and
adcl
mov
cmp
in
xor
mov
and
addl
mov
fcomip
scas
cli
sahf
jnp
or
gs
out
push
dec
mov
xchg
lret
adc
inc
mov
pop
push
push
out
imul
fisttps
sbb
inc
pop
test
out
cmp
mov
dec
sbbb
out
mov
pop
dec
jg
inc
xor
fstpt
adc
and
pop
sbb
push
mov
sbb
cltd
xor
push
outsb
iret
push
jecxz
rolb
cli
notb
test
imul
repnz
sub
sub
mov
mov
shll
in
imul
lret
fmuls
sbb
pop
pop
gs
aas
mov
ljmp
adc
or
pusha
sub
mov
shll
push
subl
inc
dec
enter
and
push
xor
dec
mov
into
jb
sbb
popa
xchg
hlt
lock
out
and
minps
ds
or
enter
in
addr16
mov
lods
push
push
xchg
push
sub
aaa
dec
mov
imul
adc
testb
push
cmpsb
xchg
or
es
jnp
xor
mov
loope
sbb
mov
xchg
cmp
nop
cmp
cld
outsb
movsb
fadds
or
fildl
fcmovnbe
ja
xor
or
or
cld
in
rclb
cmovb
add
sti
and
sub
loope
sbb
movsl
std
push
cmpsb
jecxz
jge
fsubrl
cmp
mov
aaa
xlat
sub
movaps
je
ss
cwtl
inc
push
mov
mov
cltd
pop
pop
xchg
xlat
fs
aam
xor
out
cmp
xchg
jo
push
in
jle
ds
movsb
push
loopne
mov
inc
pop
pop
sarb
jge
out
xor
jg
dec
inc
testl
nop
out
pop
rsqrtps
fcomps
out
dec
out
fnstsw
cmp
push
movsl
outsl
loop
js
popa
aas
fldcw
fisttpl
nop
inc
jg
into
dec
sbb
push
sbb
mov
mov
mov
fmull
int
loop
xor
cmp
out
inc
outsb
xor
data16
xlat
xchg
mov
outsb
roll
lea
jne
fidivs
test
push
dec
push
xchg
mov
loop
mov
dec
add
dec
imul
pushf
test
into
mov
repz
in
out
cwtl
sub
ficompl
push
xchg
add
nop
sbb
inc
dec
dec
decb
outsb
nop
adc
nop
and
aaa
gs
test
ss
sbb
pop
out
pop
pop
jp
sub
or
mov
xor
jecxz
pop
cmp
mov
xchg
pop
xchg
cld
mov
or
shlb
data16
mov
jge
pop
push
call
dec
and
cmp
pop
mov
addr16
fmul
fisttpl
mov
push
xchg
mov
fisttpll
mov
dec
test
sbb
flds
sbb
sbb
cmpsb
dec
repnz
lcall
dec
xchg
mov
cltd
shrl
xchg
out
xchg
jp
mov
adc
mov
fs
pop
push
push
sarb
push
shr
or
mov
sbb
mov
aas
inc
jo
mov
icebp
and
data16
mov
aad
mov
arpl
ljmp
subl
sbbl
fcoml
loopne
popa
sbb
ror
mov
sbb
push
cmp
hlt
out
xor
push
lret
test
stos
out
in
sub
int
test
cmp
out
ds
ds
in
push
jg
inc
cltd
insl
mov
sbb
adc
pop
sub
push
jae
int3
int
xchg
lahf
leave
aas
mov
bound
shlb
push
fldenv
lcall
dec
push
das
xor
shl
fs
add
iret
sbb
add
fwait
or
cli
mov
push
cmp
fdivp
or
call
loop
pop
add
rcrl
andl
sbb
stos
and
pop
inc
out
xchg
dec
dec
subb
jns
mov
mov
lds
cmp
data16
and
jmp
sub
rcrb
aam
adc
pop
jb
aas
push
add
jnp
sti
out
fcoms
dec
ficompl
nop
fidivl
ds
test
inc
in
sbb
lea
pop
shr
cmp
jg
outsb
jnp
in
leave
mov
out
enter
xor
dec
or
and
ret
dec
mov
jl
sub
fs
xchg
dec
sub
iret
pusha
loope
add
je
andnps
mov
outsl
fadd
mov
lods
pop
cli
jnp
in
or
aad
add
or
push
dec
sbb
fsubrp
pop
pushf
lret
testb
pop
jae
lods
in
xchg
mov
ffreep
shrl
mov
nop
cmp
xchg
insl
fisubrl
arpl
push
jo
dec
sbb
inc
add
dec
fnstenv
jmp
push
jl
sub
je
dec
fistl
xor
push
push
jecxz
sti
push
sub
xchg
mov
dec
fldcw
dec
enter
in
cmpsl
lret
mov
jg
xchg
dec
adc
out
xchg
jmp
dec
mov
xor
pop
cwtl
aaa
jnp
and
and
mov
ret
loope
cli
in
jl
pop
fidivs
lahf
dec
dec
xchg
mov
sub
jne
push
push
cmp
movsb
stos
adcl
inc
xor
push
scas
push
fdivrs
pop
outsb
mov
loopne
das
or
ss
movsl
leave
mov
mull
pop
int
or
mov
lea
dec
int
fldl
sbb
and
push
stos
pop
in
imul
jp
jmp
adc
cs
and
dec
or
lods
push
pop
mov
lret
xor
inc
jmp
cmp
fwait
pop
loope
jbe
mov
fwait
dec
loope
into
jbe
imul
mov
cmp
and
or
sub
sub
cmp
pop
cmp
es
cwtl
cltd
add
lret
pop
mov
add
sarl
fldt
in
pop
cmc
sbb
out
fs
in
lret
lcall
incb
data16
test
sub
int3
xor
xchg
cmp
pop
xor
shrb
inc
mov
ficoms
inc
xchg
out
loopne
pop
xchg
insl
aas
pop
shlb
test
jne
sbb
mov
nop
sbb
sbb
ret
fs
pop
jo
ret
mov
cmp
or
and
incl
push
jbe
adc
pop
push
les
pop
inc
xlat
jb
inc
cli
lret
fs
xchg
xchg
filds
cmc
inc
frstpm(287
pop
cld
sub
xor
xchg
faddl
add
mov
inc
lcall
adc
sub
pop
ds
mov
lcall
decb
xor
xchg
or
cwtl
add
out
pushf
popf
enter
and
imul
cmp
adc
in
test
aad
cmp
xchg
out
cmp
lea
adc
lock
dec
pushf
push
mov
rorl
sbb
into
xchg
push
in
lahf
ljmp
mov
add
or
fwait
mov
or
testb
push
out
in
sbb
pop
xchg
mov
nop
xor
pop
cwtl
cmpsl
adc
mov
and
ljmp
cmpsl
clc
leave
fistl
das
out
pusha
or
or
daa
cld
imul
in
mov
out
push
pop
mov
sub
notl
xchg
lock
rorb
pop
or
in
mov
push
in
dec
mov
js
fldt
sub
std
mov
or
cmp
fwait
inc
popa
rorl
adc
mov
stos
insl
out
dec
mov
je
arpl
pop
rolb
mov
mov
aaa
add
mov
push
lds
add
adcb
lcall
pusha
mov
pop
lahf
das
or
out
pop
and
repnz
pop
sbb
jmp
je
stos
cmc
mov
insb
shl
repnz
dec
outsb
aad
xor
xchg
sbb
gs
sub
dec
cwtl
and
xchg
es
xchg
push
lahf
push
dec
gs
int
add
in
mov
push
mov
shll
mov
lret
fsubl
fbld
push
mov
dec
rcrl
out
sbb
lods
cmp
es
pushf
jle
std
insl
pop
sub
fxch
testb
cmc
imul
mov
sub
rorl
ljmp
mov
loope
dec
xorl
dec
negl
mov
pop
mov
push
xchg
add
cmp
aaa
adc
inc
scas
cltd
xchg
sbb
insl
fs
xchg
adc
aas
mov
jmp
lods
mov
jo
stos
or
dec
push
ficomps
mov
jne
xchg
and
popf
rorl
inc
fisttpll
mov
stc
inc
mov
lock
aaa
jmp
lret
jbe
jle
jp
mov
add
xchg
inc
cld
pop
inc
mov
push
add
mov
loopne
push
inc
icebp
mov
sahf
ds
stc
pushf
js
mov
jge
xchg
mov
add
mov
dec
sub
cmp
sbb
cmp
push
and
xchg
mov
push
and
inc
loop
shlb
iret
xchg
add
movsl
fs
cwtl
xor
mov
mov
mov
data16
test
gs
out
dec
lcall
popf
mov
sbb
xor
pop
xchg
into
inc
sub
aas
cmpsb
lock
movsl
inc
jl
mov
jecxz
push
leave
int3
xchg
xor
mov
rcll
in
lret
enter
lret
or
sbb
sub
ficompl
sub
jnp
rorl
dec
nop
add
mul
arpl
mov
data16
roll
ds
subl
enter
sub
das
adc
div
lods
lahf
mov
shl
std
sbb
pop
or
aaa
lahf
daa
js
dec
inc
loope
cmp
jno
mov
sti
sub
dec
mov
mov
imul
es
or
xor
cld
ds
jmp
xchg
inc
outsl
sahf
xchg
fnstenv
fistpl
call
es
mov
mov
rorb
jg
mov
shrl
std
insb
sub
imul
out
mov
lea
pop
pop
repnz
sub
fs
pop
cmc
mov
popl
pop
lahf
ds
jae
inc
and
push
call
pop
iret
inc
inc
or
lcall
xchg
xchg
mov
inc
sbb
xor
fsubrl
pusha
fsubp
add
aaa
xchg
and
sbbl
fbld
jmp
xor
push
int3
lock
xor
ret
sub
jmp
dec
or
and
pop
xor
roll
int
pop
std
add
jnp
cwtl
mov
lret
jg
mov
in
pop
mov
cmc
mov
adc
push
and
mov
scas
insl
xchg
inc
ja
sub
sub
ljmp
fsubrs
cli
mov
xor
scas
xchg
xchg
sub
lret
cwtl
adc
aas
loope
nop
les
and
div
xlat
loopne
aam
out
dec
inc
adc
jmp
pop
test
and
and
ds
mov
test
aas
pop
lods
pop
outsl
pop
xchg
jb
adc
dec
scas
and
sbbb
adc
cld
clc
std
jmp
in
push
push
mov
xor
xor
mov
xor
add
lret
out
jo
in
and
enter
pop
fdivrp
xlat
mov
arpl
inc
fisubs
pop
insl
xchg
mov
or
pop
pop
sbb
cmp
jecxz
push
leave
add
cmp
sbb
aaa
test
mov
adc
lds
scas
mov
or
sbb
es
rcrb
dec
sbb
pop
lea
cmp
xor
mov
dec
dec
and
xchg
sub
lock
push
in
inc
push
dec
pop
in
fs
push
cmpsb
ljmp
in
add
cmpl
ficompl
movsb
xchg
mov
push
fistpl
xchg
xchg
xchg
lahf
aas
rcrl
push
xor
ljmp
pop
jb
or
add
ret
push
push
sub
pop
jns
pushf
dec
inc
jbe
inc
icebp
xor
dec
pop
cmp
jmp
push
xchg
push
adc
cltd
es
loopne
inc
mov
in
pop
jecxz
push
clc
push
jmp
xor
adc
mov
push
jae
mov
mulb
push
pop
jo
or
mov
andb
inc
lcall
testl
in
dec
add
movsl
cltd
mov
pop
sbb
in
jae
mov
repnz
pop
cmpsb
lods
daa
test
jge
in
push
nop
out
and
loop
leave
int3
aad
and
and
add
push
dec
push
cli
loope
mov
adc
aaa
out
loop
jp
cmc
out
mov
repz
add
jno
into
out
fnstsw
movsb
fwait
jp
cmp
imul
jb
xchg
call
cmp
or
mov
mov
sar
jns
jno
aaa
or
stos
push
or
into
fcoms
enter
lret
dec
cmp
sar
push
movsb
xor
sbb
loop
test
outsl
das
repnz
xchg
and
mov
clc
jnp
mov
ljmp
jne
cmpsl
sbb
std
and
mov
jmp
or
fwait
mov
bnd
or
insl
sahf
leave
ret
out
shr
cltd
addl
shll
hlt
or
sarl
add
add
leave
inc
outsb
ret
je
and
ljmp
fdivp
mov
jne
pop
pop
cmpsl
or
and
ffree
clc
push
dec
pop
adc
push
xchg
mov
sub
push
dec
push
lds
icebp
loop
pop
stos
fistl
pop
push
sahf
lret
ret
sahf
jmp
or
inc
in
adc
lret
stc
dec
das
outsb
daa
or
in
pop
mov
xchg
cmp
fdivs
mov
dec
shl
in
neg
push
pushf
in
out
mov
hlt
dec
daa
int
xchg
stos
in
xchg
sub
mov
sarb
dec
arpl
lret
mov
pop
push
nop
mov
negb
dec
shlb
cltd
aaa
scas
pop
add
push
sub
cltd
pop
mov
mov
xlat
arpl
ja
pop
xchg
bound
adc
pusha
sbbb
pop
sbb
mov
xchg
or
pusha
dec
jecxz
xor
jbe
repnz
imul
inc
sbb
fxch
into
mov
jmp
jns
adc
movsl
mov
sbb
btc
adc
cmp
aas
clc
xchg
fbstp
push
pop
fs
adc
xor
pop
lret
mov
inc
test
loop
pop
sub
add
in
lds
push
sub
mov
xor
imul
ret
jbe
lock
daa
dec
in
dec
fidivrl
sarb
bound
popa
clc
test
sbb
push
add
xor
sarl
pushf
and
mov
cs
xor
xchg
push
mov
sti
jmp
sub
sub
dec
mov
es
and
mov
roll
lods
push
and
pop
shlb
decl
hlt
sbb
int3
cmp
stos
outsl
pop
js
mov
test
je
sub
sub
sub
pop
pop
jle
push
ficomps
sbb
xchg
insl
push
dec
pop
data16
mov
fs
je
xor
movb
sarb
or
mov
andl
lock
or
test
loopne
out
mov
in
loopne
mov
inc
pop
in
stc
adc
xor
aam
add
jmp
lcall
or
mov
je
je
je
je
wbinvd
mov
adc
fistps
adc
cmp
imul
aam
mov
add
adc
xor
push
mov
cmp
mov
fdivrl
cmpsl
icebp
pop
inc
std
dec
sbb
sbb
inc
add
mov
add
sbb
jbe
jnp
js
shlb
les
sub
jae
mov
test
xlat
mov
loop
gs
inc
fidivl
add
and
add
lock
fidivrl
mov
mov
add
fs
test
clc
sbb
xchg
cmp
cltd
arpl
jp
iret
cmp
notb
mov
xlat
pop
xor
mov
and
jno
jl
cmpsl
sub
lcall
inc
xchg
cmp
dec
xor
test
xlat
int
loope
rcll
movsb
insl
fcompl
orb
dec
mov
outsl
repnz
or
inc
xchg
inc
add
pop
out
mov
xchg
dec
cmc
xchg
negb
jns
push
jge
and
popa
outsl
out
inc
sbb
iret
mov
hlt
mov
out
pop
add
dec
insl
cli
cmp
aad
xor
push
sub
jecxz
mov
jns
add
sbb
popa
out
lret
jne
add
mov
cmp
ds
mov
aas
dec
mov
in
sbb
repnz
dec
clc
imul
jmp
xor
insl
imul
and
or
rolb
jne
lods
cmp
cli
push
pusha
xor
out
inc
aas
xchg
xor
sub
add
push
mov
aad
push
dec
loop
dec
movsb
into
adc
inc
daa
aaa
xor
mov
das
ret
fistps
stc
mov
or
adc
fsubs
mov
push
jnp
pop
sbb
fisttpll
and
adc
xorb
lret
or
in
lds
add
ss
xor
je
sbb
stc
push
adc
jge
inc
cmpsl
xchg
in
mov
xorb
outsl
xlat
xchg
mov
lea
outsb
adc
out
loope
popf
lea
dec
loop
mov
xor
add
mov
or
out
jp
mov
sahf
xchg
movsb
jae
flds
nop
rorl
outsl
aam
pushf
push
rolb
push
mov
hlt
int
outsl
rcr
inc
cmpl
xor
jp
inc
push
pop
mov
fstp
lock
xchg
add
lds
rorl
test
add
scas
adc
insb
int3
test
dec
mov
jl
cmp
jnp
mov
aas
daa
aas
mov
jbe
jmp
addr16
idivb
sub
adc
ljmp
js
or
sub
bound
mov
dec
outsb
inc
inc
pusha
outsl
rorl
dec
scas
fcomp
cmc
mov
lods
lods
mov
mov
insl
cmp
lock
imul
dec
movsl
push
jp
add
inc
adc
fstl
xor
mov
add
cmp
mov
push
into
pop
push
incb
adc
mov
bound
sub
jmp
into
popa
dec
xchg
push
in
fdivl
and
cmp
jecxz
or
sbb
imul
xchg
mov
lock
notl
bound
pop
lea
icebp
mov
loope
and
or
and
leave
out
lret
dec
sahf
adc
jae
add
push
lcall
mov
fmull
sub
push
in
jae
sbb
xchg
sbbl
std
cmp
sub
and
inc
and
stc
add
int3
lret
or
mov
add
sbb
mov
dec
adcb
cmpsl
in
insb
mov
lds
jecxz
push
flds
mov
daa
or
xor
jb
stos
orl
and
or
sbb
sub
pushf
sbb
adcb
fldt
pop
add
ss
insl
aas
mov
mov
pop
pop
jnp
aad
or
imul
fnsave
xchg
jmp
insl
pop
lods
push
inc
jmp
outsb
or
xor
inc
out
adc
in
jb
rorl
bound
pop
leave
mov
sub
test
cmp
push
xchg
insb
dec
ret
bswap
gs
sbb
mov
fidivrl
pop
je
bound
gs
jb
add
fs
lods
pusha
mov
in
adc
mov
sub
adc
mov
ljmp
into
ret
sub
pop
es
lcall
jecxz
mov
hlt
adc
dec
arpl
inc
pop
cltd
inc
filds
dec
cmp
and
xchg
jmp
out
xchg
test
gs
adc
mov
jo,pt
arpl
jnp
inc
adc
ljmp
pop
fistps
fiaddl
mov
sub
mov
xchg
cmpsl
xchg
add
arpl
fists
out
dec
insb
cs
mov
or
mov
inc
cld
jg
repz
or
fnsave
inc
mov
cmp
out
or
mov
pop
adc
pop
iret
dec
ja
out
adc
mov
pop
mov
cmpsl
cmp
repnz
add
xchg
push
dec
dec
xchg
xchg
lods
inc
jns
popf
rcrl
jne
ljmp
pop
xchg
pop
mov
lods
mov
adc
jl
movsl
dec
cmp
in
sahf
nop
add
iret
pop
outsl
dec
decl
pop
dec
xchg
sbbl
pop
pop
inc
dec
xchg
pop
fadds
popa
in
js
xchg
pop
or
repz
in
dec
rorb
inc
out
push
into
hlt
inc
add
jb
push
inc
jg
fstpt
lea
xor
inc
cltd
icebp
int3
push
sarb
mov
cld
xchg
aad
adc
or
mov
xchg
icebp
lds
arpl
repz
aam
lahf
jae
or
mov
std
les
xchg
mov
or
pusha
push
jecxz
push
add
jbe
dec
je
inc
or
xor
mov
mov
das
and
and
cmp
mov
cwtl
cld
into
loop
inc
mov
jno
add
popf
call
lret
mov
and
mov
adc
dec
mov
not
test
lret
fimuls
push
mov
das
cmpsl
call
cs
add
mov
dec
dec
dec
jecxz
mov
xor
inc
shrl
pusha
nop
xchg
fildl
ret
out
push
pop
sahf
mov
inc
push
push
jecxz
dec
xor
imul
iret
das
cmp
inc
movsl
lock
inc
adc
xlat
push
lret
in
enter
adc
add
cmp
loop
add
dec
iret
mov
dec
mov
nop
shl
adc
pushf
ret
xor
and
jnp
int
sbb
loop
mov
aas
inc
mov
cld
cmp
jno
adc
lret
fs
in
call
iret
sbb
xor
dec
shlb
mov
iret
mov
sub
adc
sbb
outsb
jmp
mov
ds
sub
icebp
leave
jge
push
cmp
int
repnz
or
loop
dec
mov
xchg
mov
mov
and
pop
add
jg
cmp
jmp
jecxz
mov
repnz
daa
enter
adc
xchg
mov
movl
jo
dec
insb
cmp
nop
xor
mov
xchg
flds
int3
aam
jl
cld
cmp
dec
out
dec
pop
lea
adc
and
dec
push
sahf
sub
mov
pop
jp
test
jecxz
lret
jmp
bound
cmp
mov
insb
adc
cmp
in
out
addr16
cmc
fnstsw
sbb
adc
xchg
mov
xor
mov
push
push
vhsubps
and
lcall
rcr
out
push
sbb
push
jge
das
cs
lods
add
and
enter
sbb
pop
fisubs
push
push
addb
push
ret
lock
push
les
fidivrl
insb
sub
mov
rorl
shlb
and
stos
push
nop
jo
orb
jnp
inc
pusha
xchg
xchg
inc
sbb
lret
fwait
mov
loopne
adc
add
fidivrl
pop
sub
icebp
imul
out
rcrb
in
int3
pop
hlt
inc
pop
push
ja
pusha
xor
leave
xchg
sub
sub
jg
nop
mov
mov
mov
fcoms
hlt
cltd
cmp
das
into
pop
ret
cmp
addb
into
insb
pop
inc
dec
shlb
xchg
sbb
xor
jno
push
mov
repz
aad
fidivrs
lds
adc
out
push
lret
or
adc
nop
aam
ret
inc
xor
addr16
xor
mov
push
mov
push
sub
mov
mov
cmpsb
cmp
cmp
in
cmpsb
mov
or
mov
mov
scas
ljmp
dec
test
lcall
ficoml
pop
icebp
mov
push
xchg
call
jle
lcall
push
add
mov
call
add
push
lret
pop
mov
aam
das
inc
and
mov
sbb
or
dec
aad
adc
mov
out
pop
ficomps
inc
xor
push
inc
mov
pop
xchg
push
in
es
cs
or
movntq
mov
cmp
xchg
shrb
divb
xchg
data16
out
test
call
inc
cmpsl
loop
ret
pop
mov
sub
pop
jl
in
jnp
outsb
mov
xchg
xchg
and
jae
cmp
ljmp
movsl
inc
orl
call
sub
aad
pop
xchg
xor
lret
sahf
pop
xchg
stos
daa
mov
dec
add
lahf
jle
cmp
js
int3
sub
dec
sbb
adc
sbb
mov
iret
into
jmp
aam
inc
icebp
fiaddl
cs
jne
shr
leave
xor
xchg
insb
aaa
popf
and
mov
mov
push
inc
push
xor
stos
jns
pushf
movsl
and
cmpsl
push
shll
out
push
insb
test
stc
fcoml
fidivrs
and
dec
lock
testl
jp
icebp
mov
ret
movsl
frstor
lds
fldl
add
in
daa
fdivs
movsl
jae
js
adc
dec
dec
mov
sub
dec
mov
shrb
in
out
sub
ror
jbe
in
jae
ficomps
jge
imul
in
dec
push
addr16
and
out
mov
xor
daa
addr16
mov
jnp
jp
add
xchg
jle
aas
scas
cmp
pop
jns
lea
cmp
addr16
leave
cmp
sub
outsl
jp
in
sub
ljmp
gs
push
xor
pushf
loope
pop
sub
aas
and
ret
out
adc
push
add
mov
xor
pop
cwtl
cmc
ret
push
jb
in
inc
scas
or
xchg
push
popa
xchg
push
sub
jg
adc
xlat
movsl
inc
add
movsb
outsb
cld
or
cmp
xchg
cmc
flds
lret
insl
loope
shll
lcall
or
sbb
xchg
out
ss
out
push
pop
push
lret
adc
pop
and
imul
or
lahf
cmpb
sahf
jmp
lahf
loop
daa
or
push
daa
in
call
ljmp
push
arpl
or
xor
repnz
mov
cmp
jo
jmp
xor
cmc
adc
or
xchg
cli
xor
sub
and
gs
cmp
imulb
dec
lret
xchg
mov
mov
inc
xchg
push
pop
xor
mov
jnp
or
cli
mov
out
xchg
pop
xor
ja
rclb
inc
adc
stos
cmp
pop
and
mov
icebp
inc
dec
xchg
into
test
fs
mov
fisubs
and
cmp
mov
jmp
xor
adc
cmp
stc
mov
in
rcrl
push
movl
adc
or
data16
inc
inc
pusha
xchg
fdivrp
inc
pop
cltd
pop
clc
insl
stos
adc
sub
mov
daa
aam
pusha
xchg
and
je
push
sbb
call
ror
mov
aaa
cmp
adc
in
icebp
mov
push
in
leave
scas
or
pop
xor
or
pop
pop
push
cwtl
and
je
out
mov
mov
std
sub
or
cmp
pop
or
cltd
xchg
fiaddl
fdivs
adc
xor
fwait
cmpsl
ja
mov
sbb
neg
sarl
push
fiadds
add
cwtl
cs
fcmovnu
pushf
in
mov
ss
dec
aas
xchg
fildll
repnz
cld
mov
dec
cmp
cmp
out
adc
ss
dec
sbb
aaa
push
outsl
in
insl
cmp
adc
add
fistpll
add
sub
pop
push
scas
fstpt
dec
xchg
mov
or
cmp
or
lods
repz
push
aad
nop
jae
daa
ror
sbb
sbb
je
test
fld1
pop
out
pop
cwtl
jge
les
imul
cmp
and
sarb
dec
loop
mov
xchg
lcall
cli
mov
inc
push
scas
inc
mov
xchg
jmp
leave
cmp
jb
pushf
shrb
out
enter
mov
mov
aam
adc
rcr
dec
mov
pop
and
out
add
and
xor
or
mov
jl
dec
mov
in
dec
pop
arpl
push
jbe
mov
dec
adc
mov
mov
in
cld
sub
push
add
jmp
xchg
push
popa
jecxz
lcall
mov
clc
sbb
pushf
cmp
xor
test
in
lret
xor
adc
in
mov
lea
arpl
xor
jno
lret
xor
or
and
cwtl
rclb
mov
lahf
jp
mov
xorl
int
jbe
lret
xchg
lds
xor
out
test
cwtl
imul
int
subb
xor
jns
aas
pop
xor
test
leave
fsubs
dec
push
clc
mov
ljmp
enter
inc
jb
rep
daa
cmpsb
int3
in
mov
loop
dec
jecxz
rclb
jnp
mov
mov
pop
inc
push
pop
lahf
sbb
jne
xor
lock
mov
icebp
mov
or
fisubrs
hlt
mov
mov
sub
mov
out
in
test
sbb
aas
ljmp
nop
cmp
xlat
or
cwtl
movsl
pop
mov
fwait
sbb
push
filds
stc
out
nop
leave
dec
popf
lds
out
xchg
dec
add
push
fadds
pop
aad
sbb
iret
aaa
imul
insl
leave
inc
cli
arpl
or
hlt
mov
dec
push
leave
dec
inc
pop
add
in
rorb
aam
mov
aas
test
rclb
rcr
roll
cwtl
enter
sbb
xlat
outsb
fimuls
cmp
pop
mov
and
pop
imul
mov
and
jmp
lahf
pop
aam
dec
orb
hlt
sarb
dec
xchg
mov
cmp
push
repz
cli
pop
pop
sti
xor
push
or
or
xor
inc
xor
xor
pop
ret
ror
mov
cmp
popf
into
insl
aam
xchg
scas
cmpsl
pop
popf
das
test
inc
mov
mov
faddl
shl
xchg
inc
dec
add
cmpsl
inc
out
cmp
lea
lods
fwait
loopne
jg
mov
cmp
fwait
jnp,pn
xorl
jge
jns
push
hlt
cmpsb
inc
std
addr16
dec
or
mov
cmp
fimull
sbb
out
das
ret
pop
popa
push
mov
cmp
push
aam
push
test
cmp
ret
cmp
enter
pop
or
cmp
xchg
or
das
movsl
sbb
test
sar
imul
lock
dec
std
jmp
enter
add
shl
vphaddbw
shlb
inc
push
in
dec
mov
sbbl
nop
lret
sti
lods
mov
fsubp
push
int
pop
rclb
dec
je
test
cwtl
xor
push
and
jno
mov
lea
lds
ret
xor
rcrb
xchg
sub
ljmp
shr
out
adc
add
xchg
out
data16
mov
gs
ss
xchg
sti
pop
stos
mov
cltd
pop
jo
adc
dec
out
mov
rorb
lret
cmpsl
jnp
js
mov
outsl
cmp
mov
mov
sbb
sub
ds
pop
std
mov
stc
pop
jne
std
in
dec
xor
and
dec
into
push
push
dec
imul
add
inc
pop
pop
es
add
out
dec
push
lods
imul
mov
push
cmp
dec
outsl
push
shlb
fs
in
fs
push
test
sbb
leave
pop
pop
pusha
popf
cmp
sbb
les
in
mov
jecxz
sub
lods
ljmp
loop
bound
in
cmpsl
cmpsl
adc
push
dec
iret
sbb
repz
mov
inc
mov
aas
push
push
ret
pop
int
pushl
xor
mov
pop
dec
mov
inc
mov
shll
test
sbb
push
sahf
sbb
rcr
nop
es
icebp
sub
xor
fwait
es
repnz
out
or
xchg
cs
lahf
sbb
iret
arpl
pusha
adc
in
cs
sub
cwtl
pop
or
cli
fidivrs
out
xor
fwait
out
dec
xchg
insb
xor
mov
sub
movlps
add
push
fisubrs
dec
xor
xor
and
les
loopne
add
bound
sbb
nop
xchg
movsb
xor
dec
mov
les
movsb
ret
and
addr16
fiadds
mov
push
out
test
add
cltd
loop
stos
inc
mov
lret
pop
mov
cmp
pop
adc
jmp
jbe
daa
mov
adc
xor
dec
adc
test
sub
ret
cwtl
loop
inc
inc
leave
adc
out
pop
and
pop
ret
stc
jp
sub
add
pop
pop
jle
rclb
adc
insb
ret
jne
bound
notb
or
mov
pop
xchg
xchg
push
gs
sbb
cmp
dec
fildl
adc
sub
mov
push
dec
psrad
cli
adc
into
sub
add
es
shl
mov
test
movsb
cmp
fimull
mov
lahf
rcr
rcrb
test
adc
movsb
and
pop
fbstp
xchg
lods
cmp
ret
fstl
push
sti
and
and
int3
inc
jmp
pop
inc
dec
fisubl
or
xchg
jp
outsb
inc
je
lea
jmp
cli
into
movsl
rcrl
clc
pop
fsubrp
sub
ret
and
cld
scas
mov
mov
fs
fwait
mov
xchg
mov
xor
lret
ret
test
into
je
or
cmp
or
jns
cmp
stos
lods
mov
adc
sub
rcrb
ficompl
loop
pop
sbb
xchg
mov
js
and
rclb
notl
movsb
scas
arpl
stc
rorl
adc
push
repz
es
mov
lods
cmp
cs
in
dec
pop
fistpl
dec
clc
xchg
inc
mov
sbb
fadd
mov
cmp
fsubrp
add
jmp
push
lret
inc
add
jae
mov
sub
mov
adc
dec
cld
mov
ljmp
dec
loop
mov
imul
mov
aaa
leave
cmp
std
fistpll
or
mov
dec
arpl
inc
sbb
push
add
add
mul
jmp
mov
xlat
fdivs
jo
repz
mov
push
xor
xorb
std
mov
mov
into
inc
dec
or
test
arpl
movsl
pop
movsb
jle
lods
addr16
imul
popa
and
mov
xlat
testb
arpl
pop
fmull
and
pop
outsl
adc
mov
rorl
pop
sbb
icebp
repnz
push
jg
fwait
lea
xchg
adc
adc
pop
in
xor
jo
jbe
jl
test
into
mov
jg
addr16
or
cli
dec
sbb
pop
mov
repnz
pop
sub
addl
push
cwtl
add
cmp
out
mov
pop
test
and
jb
push
cmp
dec
aaa
and
int
pusha
sbb
mov
pop
sub
sub
dec
incb
roll
shr
sahf
xchg
adc
inc
lret
hlt
lcall
jo
inc
push
push
jb
enter
inc
loop
or
rcll
mov
inc
shrl
nop
in
negb
push
or
cmp
icebp
ljmp
and
pop
cmp
xlat
in
ja
push
xchg
je
out
daa
xor
ret
lock
add
and
inc
add
cli
daa
pop
daa
loope
jle
orl
aam
stc
lret
dec
sub
add
push
mov
rol
adc
push
in
gs
std
mov
dec
pop
movl
fisubl
mov
aam
lahf
jge
lock
xchg
sub
push
and
add
cwtl
inc
je
out
adc
sub
test
test
inc
adc
mov
or
mov
or
jmp
int3
outsb
sti
adc
pusha
pop
stc
pop
sbb
jge
inc
daa
incb
jae
jne
jl
mov
in
or
xor
sbb
leave
inc
push
xor
pop
sub
in
arpl
push
lret
sbb
arpl
cltd
cli
mov
or
xor
lahf
int
inc
xchg
aad
dec
push
jmp
rcrb
bound
cmpsl
sub
jg
lods
xor
popf
in
in
adc
mov
fisubrs
aaa
cwtl
dec
repnz
lahf
sub
movsl
pusha
insb
shll
pushf
enter
dec
shll
and
xor
mov
lock
sbb
mov
int3
pop
jg
sub
bound
mov
xor
data16
push
sbb
stc
add
cmp
int
or
out
scas
mov
outsb
sti
into
dec
rcrl
int3
sub
push
es
pop
and
sub
icebp
int
ljmp
clc
jecxz
in
or
insb
sahf
pop
sub
and
mov
push
je
iret
lret
testb
adc
js
dec
shr
and
aad
mov
xchg
mov
mov
inc
nop
ja
mov
ficoml
int3
aad
pop
xchg
push
xor
jo
aad
imul
push
jo
ja
jp
and
outsl
movsl
mov
andl
ljmp
les
mov
aaa
jae
fdivrp
and
jbe
and
push
sub
mov
out
leave
xchg
mov
pushf
jne
push
in
ss
mov
iret
jb
and
mov
imulb
int
mov
into
xor
mov
xchg
inc
insb
lcall
push
mov
sbb
popf
or
push
jge
push
sbb
loope
push
or
sub
repnz
das
cmp
fdivs
jno
xor
add
push
pop
jl
sbb
mov
int
cmp
fidivl
lock
out
xor
pop
push
xchg
mov
fldln2
cmp
xchg
push
add
cs
fstpl
jae
aad
inc
jmp
call
jmp
inc
sub
andb
cwtl
bound
icebp
dec
or
pop
push
mov
lret
mov
pop
add
and
or
sbb
xchg
adc
mov
adc
scas
je
sahf
fwait
lods
mov
arpl
jl
fmul
sub
lcall
push
scas
pop
jecxz
scas
or
nop
lahf
dec
insb
popf
pushf
lahf
adc
mov
in
mov
sub
pushf
mov
je
arpl
pop
mov
jl
scas
push
loope
xor
cmp
adc
gs
xlat
test
push
pop
ds
lds
adc
sub
sbb
or
cmpsl
shlb
xchg
mov
outsb
shll
cmp
dec
mov
sbb
clc
cmc
sub
nop
icebp
xchg
lods
lret
repnz
sbb
mov
adc
cltd
orb
mov
add
fldt
mov
fs
xor
addr16
std
push
mov
sub
xchg
xchg
popa
sbb
cld
mov
mov
sub
lahf
mov
inc
cmp
push
and
std
pop
int3
movl
subb
ret
mov
sub
cmp
push
xor
or
pushf
arpl
xchg
cmp
sbb
rcrb
das
icebp
mov
pushf
jge
cltd
rcrb
xor
adc
jno
daa
mov
aaa
movsb
cwtl
daa
pushf
xor
je
cmp
insb
xor
subl
xchg
mov
div
adc
sub
pop
inc
cmp
or
js
lods
jg
test
and
dec
test
jne
add
push
cmp
clc
fstl
jge
cmp
shll
outsb
out
inc
dec
leave
mov
adc
filds
int3
pushf
jb
add
mov
pusha
and
ret
lock
inc
js
test
mov
loop
pop
mov
cmp
sbb
inc
lds
lds
repnz
sub
mov
mov
xchg
pop
shll
adc
aas
loope
inc
imul
add
push
sub
xchg
dec
ret
or
aas
lock
jecxz
jne
pop
pop
jmp
lret
mov
jge
jp
in
sub
dec
dec
out
cmc
push
mov
dec
inc
gs
mov
or
lods
jnp
mov
mov
sbb
xor
loopne
outsb
aaa
mov
jl
popf
pop
add
ds
xlat
jno
mov
lret
push
pushf
lock
in
outsl
push
in
mov
or
adc
in
xor
push
pop
mov
and
dec
inc
call
test
ss
popf
dec
popa
mov
mov
xor
push
xchg
fisubrs
adc
fildll
out
frstor
sub
hlt
pushf
push
mov
xor
pop
sub
jmp
popa
jmp
push
xchg
cwtl
mov
xchg
popf
mov
and
jle
das
inc
pop
in
inc
test
xchg
xor
cmp
mov
lock
int3
out
sbb
test
aas
push
push
vcvtsi2sd
mov
call
subb
ja
punpcklwd
daa
lods
dec
mov
imul
mov
mov
stc
data16
sbb
jo
mov
cld
xchg
inc
in
mov
fildll
cmp
jae
mov
xchg
add
test
adc
add
stos
sbb
lret
cltd
test
aas
and
dec
sbb
sub
cmp
push
jecxz
mov
rcrl
adc
cmpsb
ret
movsb
xchg
das
icebp
sub
lret
xchg
pop
rcr
mov
xchg
and
cld
scas
jmp
addr16
lahf
and
das
mov
repnz
xlat
ja
in
pop
decl
pop
adc
inc
pop
sbb
inc
stos
pop
sub
test
iret
ss
jno
fidivrl
inc
clc
repnz
push
aas
pop
add
fidivrs
dec
aaa
data16
mov
das
lcall
or
lock
lret
cmc
cmp
mov
or
push
adc
jae
aad
push
pushf
pop
insb
stos
and
cmp
rorb
pop
enter
mov
mov
les
outsb
cmp
cmp
in
movb
in
xchg
lret
sub
adc
imul
mov
loope
scas
adc
pop
cmpl
insl
mov
lock
div
shlb
pushf
or
pop
cwtl
sbb
gs
pop
pop
sbb
inc
add
mov
push
ds
pop
cmp
ja
ror
pop
repnz
loop
sti
lret
aam
dec
sub
in
neg
gs
test
xorb
push
pushf
jae
cmpsl
fisttpll
sub
out
imul
xor
int
and
jae
in
ljmp
lret
andl
push
push
and
pop
lcall
test
loopne
orb
sub
out
adc
add
inc
push
ljmp
xor
sbb
adc
loop
jae
mov
push
cltd
xor
adcb
sbb
cs
out
cmp
pop
imul
shlb
mov
xchg
hlt
test
mov
das
sbb
mov
mov
jb
add
dec
adc
sub
xor
roll
outsl
test
mov
out
ficoms
mov
push
and
loop
iret
mov
and
sub
imul
gs
or
movntps
ret
ljmp
lret
cltd
aam
in
sarb
inc
ret
testl
xor
xchg
ret
mov
in
pushf
mov
cli
ljmp
push
adc
sbb
cmp
movsb
xchg
inc
in
aaa
cs
testl
stos
jg
cmp
ret
outsb
sub
out
cltd
push
push
pop
push
dec
push
fwait
mov
xorb
pop
adc
mov
insl
inc
out
cmp
dec
add
int3
pop
lret
mov
mov
dec
cli
jae
push
ja
push
sub
testl
in
jg
add
jge
lods
dec
dec
imul
insb
and
ljmp
mov
sub
mov
sahf
outsb
add
insb
adc
daa
fldcw
shlb
inc
hlt
aas
sub
fs
mov
verw
outsl
into
es
and
outsb
testl
and
jae
shr
jb
pop
inc
ds
inc
sbb
mov
mov
out
sub
int3
sbb
outsb
imul
mov
or
ljmp
xor
push
sbb
ja
popa
inc
dec
mov
xchg
je
aas
mov
pop
fimuls
aaa
rclb
cltd
data16
in
or
aas
ds
stc
sub
xor
in
popa
add
and
push
repz
popl
lahf
ret
add
jg
sub
and
std
and
xchg
xor
push
insl
aad
addr16
negl
int
xor
call
lahf
test
jnp
inc
and
ret
jp
pusha
out
mov
mov
xor
cmp
mov
jnp
pop
and
out
jmp
outsb
into
xchg
out
outsl
fstps
or
jo
mov
dec
shrl
out
dec
sbb
loopne
adc
mov
push
xlat
fildll
dec
sahf
inc
and
movsl
repz
enter
push
shl
cmp
movsl
mov
dec
cmpb
movsb
sbb
daa
push
cmp
inc
cmp
loopne
aas
jo
pushf
pusha
cld
mov
mov
mov
mov
inc
cmc
sbb
fidivl
lods
mov
out
jmp
sub
mov
mov
xchg
leave
jno
xor
mov
ffree
adcl
fwait
mov
into
lret
loop
cmpsl
mov
dec
xchg
rol
ffreep
pop
pusha
add
sub
mov
push
enter
in
push
sahf
aaa
xor
sti
sbb
xlat
shll
or
push
into
test
xchg
js
lods
in
xlat
rcr
ret
ds
mov
int
rorb
xor
movsl
and
cwtl
and
loope
fdivl
pop
or
mov
ret
add
dec
sbb
push
nop
ret
cmp
gs
sub
or
pop
xor
mov
les
bnd
enter
mov
stos
mov
std
test
ffreep
mov
pop
addl
mov
loope
rcrl
out
xchg
sub
in
sub
push
pushf
push
leave
or
and
andl
push
push
add
hlt
cmp
xchg
sbbb
push
or
mov
in
dec
jns
ja
test
scas
pop
sbb
mov
jg
mov
dec
in
sbb
ja
rclb
loop
in
cmp
inc
pop
ror
insb
rol
into
add
inc
dec
or
dec
pop
outsb
add
dec
mov
mov
sbb
stos
xchg
lret
add
andb
je
mov
fdivrs
sbb
subl
and
sub
das
subl
lock
jae
nop
xchg
mov
sub
int3
int3
or
fildl
imul
mov
mov
dec
xchg
lea
xchg
in
repz
jns
fdivp
in
xchg
inc
and
mov
push
cs
cmp
ss
add
out
fidivs
sbbb
cmp
das
cwtl
push
in
ja
push
lret
pop
cmp
inc
and
pop
xchg
push
adc
in
mov
push
jge
sarl
jo
rcrb
es
idivb
pop
insl
in
imul
inc
mov
jge
xchg
and
xor
cmp
ds
mov
add
pop
push
sbb
dec
mov
dec
or
jge
jp
or
xchg
leave
push
xor
insl
cli
adcb
gs
xchg
outsl
fsubs
lahf
fmuls
push
mov
pop
lods
insl
out
bound
dec
popa
addb
xlat
push
pusha
dec
mov
cmp
imul
iret
and
push
pop
xor
xor
jecxz
or
inc
js
mov
or
faddl
outsb
sub
cmc
outsb
aad
xchg
inc
pop
out
iret
sahf
cmp
mov
cwtl
mov
cmpsl
testb
in
xor
pop
and
jp
les
hlt
xor
test
push
cmp
sub
stos
cmp
lods
sti
adc
dec
jbe
sub
cmp
cvtdq2ps
je
dec
test
or
in
xor
adc
lret
xchg
xchg
movsl
repnz
sbb
clc
test
insb
lods
sub
xchg
lret
nop
add
pop
lahf
out
mov
mov
icebp
adc
sbb
shl
lcall
xorb
ds
mov
out
stos
cs
inc
or
add
pop
les
sarb
mov
adc
and
lea
or
pop
push
push
push
xor
inc
pop
mov
fsub
and
mov
pop
cmpsb
mov
icebp
pop
push
jne
pop
aad
push
je
xlat
leave
adc
mov
rcll
and
in
add
mov
out
xchg
ss
repz
imul
mov
mov
gs
sbb
into
scas
sbb
imul
popf
xchg
xchg
push
xor
jb
add
or
adc
adc
push
orb
jo
les
scas
in
cmp
mov
ds
aam
nop
rcr
es
adc
xchg
lret
jae
aad
out
shlb
and
xchg
ds
mov
arpl
repnz
fs
loope
add
add
repz
jecxz
imul
loopne
test
cwtl
mov
nop
movsb
aas
fadds
add
mov
and
mov
lea
inc
lret
mov
jmp
fcomps
pop
lret
add
in
sbb
es
std
sub
lods
fnstenv
push
xor
dec
jmp
sub
and
pop
or
push
nop
push
loopne
mov
sub
pop
push
xchg
jns
sub
ud1
ljmp
mov
push
cli
pop
outsb
push
cmp
int3
cmp
push
ficoml
insb
dec
ja
pop
mov
xor
mov
sub
pop
pushl
xchg
cld
pop
daa
mov
arpl
nop
and
dec
adc
add
aaa
cmp
daa
in
jl
fistl
stos
addr16
xchg
test
jg
xor
inc
jp
roll
lahf
std
push
mov
testl
cmp
movsb
popl
pop
sub
sbb
rolb
out
sbb
xor
stos
inc
jns
sbb
aaa
fbstp
les
aad
jp
movsb
in
mov
bound
gs
xor
clc
out
jb
dec
ja
push
dec
xchg
xchg
orb
xchg
inc
sbb
in
pop
mov
sbb
sbbl
mov
mov
es
pushf
jne
jg
jb
push
xchg
mov
or
fildl
jo
jge
inc
in
pop
into
scas
inc
xor
sbb
dec
and
dec
xor
cmp
or
jecxz
addr16
nop
sbb
push
cmp
ret
inc
jb
xor
mov
outsb
cmc
jecxz
loop
movl
lahf
inc
shl
pop
inc
das
jecxz
sahf
outsl
subb
jmp
push
push
int
fwait
iret
insl
outsb
repz
push
add
sub
xchg
mov
dec
in
fstpl
cltd
rcr
ret
outsb
in
add
inc
out
xlat
loope
mov
jge
ds
roll
mov
in
jg
insl
xor
test
pop
dec
xchg
sub
jne
test
mov
dec
xrelease
or
cwtl
mov
mov
lret
xor
pop
fwait
insl
pop
mov
cmp
rcrl
jnp
cld
daa
xchg
daa
rclb
dec
enter
jle
adc
xor
adc
push
xor
push
loopne
test
xor
es
dec
popa
es
or
lods
shrl
loopne
and
xchg
mov
stos
nop
fldenv
subb
jae
push
xor
adc
ret
fidivrl
into
sbb
mov
push
push
jle
push
jae
and
test
repnz
sahf
push
lahf
dec
cmp
out
adc
jmp
bound
inc
sub
dec
dec
dec
dec
nop
jmp
jmp
adc
xlat
out
inc
addr16
cli
enter
and
sub
in
xor
and
js
loop
push
dec
or
pop
and
pop
add
jg
or
pop
push
fistl
lret
scas
incb
push
or
aas
gs
pop
xor
inc
dec
or
lahf
mov
fisubl
in
into
mov
jno
inc
xor
int3
mov
cmpsl
dec
jae
rclb
pop
insb
imul
stos
pop
push
dec
sbbl
sbb
jp
loope
test
ret
in
jle
popf
mov
lcall
xlat
ret
inc
mov
je
imul
jne
fcomip
adc
jae
inc
repz
inc
cwtl
daa
fsubs
xchg
dec
push
nop
ret
pop
mov
loope
ja
inc
ljmp
nop
push
xchg
dec
inc
shll
adc
mov
push
mov
inc
in
iret
add
fwait
nop
repz
sahf
mov
sub
sti
nop
movl
adc
fs
xor
inc
inc
or
stos
mov
xor
inc
mov
sbb
inc
pushf
insb
xor
fwait
sbb
push
fadd
dec
in
lea
jbe
add
adc
xchg
push
xor
xor
push
inc
inc
cltd
ret
adc
sbb
loop
adc
test
xor
aas
test
jmp
dec
push
mov
inc
sahf
dec
stos
dec
cli
aad
jp
sbb
cld
into
addl
sti
jnp
repnz
clc
pop
dec
lcall
bound
inc
inc
shll
mov
sub
lahf
pop
adc
jns
add
adc
mov
repnz
popf
test
jecxz
inc
es
inc
push
dec
sbbb
mov
push
mov
mov
bswap
or
push
outsb
shl
stos
in
inc
sar
rcll
sahf
sahf
push
iret
testl
lret
scas
push
mov
iret
out
in
pop
stos
insb
dec
dec
xchg
popa
inc
rorb
test
add
fwait
adc
addr16
arpl
hlt
adc
int3
adc
cmovle
sahf
push
into
inc
into
xor
sahf
mov
push
adc
inc
insl
pop
jp
repz
cmp
int3
pop
cmpsl
ljmp
test
sbb
ficoml
xchg
push
xchg
mov
xor
aaa
add
inc
xchg
push
fwait
leave
repz
nop
xchg
je
scas
sarb
fisttps
ljmp
dec
add
mov
xchg
lahf
pop
ret
mov
push
mov
int
jb
pop
stos
ja
adc
sub
les
inc
push
lock
inc
stos
cltd
sbb
fidivl
jecxz
jne
mov
shll
cmpsl
push
inc
inc
mov
xchg
mov
adcl
xchg
inc
mov
in
jns
adc
inc
push
mov
xchg
pop
das
or
pushf
mov
lahf
fsubrl
pop
inc
pusha
lret
jmp
test
jne
add
add
fwait
imul
lret
fistpl
sub
xor
bound
aas
addr16
pop
test
test
inc
mov
inc
stc
stos
adc
outsl
outsb
pop
adc
add
movsb
insb
xchg
shlb
push
fists
dec
xchg
notl
leave
cld
fistl
cmp
cmp
es
jnp
ja
mov
add
nop
scas
xchg
or
ljmp
jg
mov
dec
or
aad
stos
scas
xchg
jne
lcall
dec
mov
push
movsl
dec
pop
call
sub
jo
mov
mov
idiv
imul
dec
dec
ja
ficoml
sub
xchg
int3
dec
pop
fwait
stos
add
push
iret
lahf
cs
cmp
nop
outsl
jl
call
inc
ret
xchg
inc
nop
in
hlt
xchg
xchg
jno
imull
rorb
ret
adc
dec
fnstsw
fcmovb
roll
dec
xchg
dec
int3
sbb
dec
popf
inc
mov
add
inc
push
adc
cmp
push
scas
xchg
push
movsl
ja
pop
lods
iret
sbb
ds
stos
xor
or
repz
jno,pn
push
adc
cmp
dec
scas
inc
divl
imul
loopne
adcl
cmp
mov
or
leave
pushf
imul
test
idivl
push
ret
dec
pusha
xchg
out
inc
jg
imul
test
and
mov
pop
inc
jbe
push
inc
shrb
xchg
push
enter
test
and
push
int3
data16
sti
pop
xchg
lock
xchg
mov
adc
stos
movsl
mov
movsl
xchg
outsl
adc
xchg
xor
cmp
shrb
insl
inc
sahf
push
loope
pop
add
in
push
fimuls
add
cli
inc
adc
xchg
sahf
add
rclb
dec
adc
xor
mov
jbe
cmc
shlb
mov
in
or
jmp
leave
or
repnz
test
cmp
gs
int3
les
xchg
add
decl
iret
repz
push
jno
fs
sub
push
mov
sbb
addb
jnp
add
add
sbb
enter
mov
movsl
pop
pop
loopne
xchg
adc
dec
sarb
xchg
cli
je
subl
pop
xor
fdivrs
sbb
mov
sub
adc
in
mov
cmc
andl
negl
mov
xor
and
cwtl
mov
and
mov
mov
mov
cmp
xlat
movsb
jbe
xor
sub
adc
lods
sub
mov
stc
bsf
push
xchg
bound
outsl
loop
mov
addr16
ret
dec
mov
inc
mov
cs
popl
add
in
mov
ret
jbe
xchg
add
push
and
movb
pop
xlat
mov
pop
rorb
test
cmp
cmpsb
sbb
int
mov
ficompl
fmul
ret
fsubl
mov
xchg
mov
inc
pop
fs
pop
and
xchg
out
mov
pop
push
das
lcall
pop
in
and
xor
jae
movsl
adc
cmc
test
jo
mov
fisubrl
ss
add
insb
shrl
test
inc
incb
frstor
mov
pop
pop
xor
jno
xlat
pop
xor
pop
mov
jae
sti
lcall
and
add
jecxz
inc
mov
and
xorb
fisubrs
cli
outsb
xchg
mov
push
adc
lahf
lock
fadds
outsl
xchg
in
xor
lock
push
sbb
inc
and
dec
imul
fdivrs
push
lods
sub
mov
add
mov
dec
pop
adc
mov
shr
andb
aam
jne
mov
jno
stos
mov
jnp
dec
mov
mul
dec
sub
ds
pushf
adc
mov
pushf
pop
add
mov
and
ficoml
stc
stc
dec
es
and
mov
les
add
push
sub
notb
movsl
pop
sub
out
sub
sbb
dec
xchg
rcrl
mov
mov
add
fstp
aaa
es
imul
sti
pop
stos
pop
sub
not
ficoml
cwtl
jmp
jo
inc
test
cmpsl
inc
jg
dec
adcb
pop
xchg
add
inc
lods
adc
hlt
mov
and
push
loope
aaa
or
push
inc
lods
and
cmp
add
lea
jmp
adc
mov
cwtl
fisttpl
out
xlat
inc
loop
mov
pop
push
stos
mov
lock
xlat
mov
adc
inc
inc
push
push
pushf
in
sbb
js
adc
mov
push
out
inc
addb
add
out
js
cli
sahf
dec
cmpsb
test
adc
sbb
cltd
xlat
dec
les
mov
mov
rclb
add
cmp
ljmp
cli
ret
jb
sbb
pushf
out
mov
or
in
and
ficompl
cmp
pop
pop
pop
lret
or
push
inc
mov
inc
int3
or
jnp
mov
lret
out
or
shrl
add
call
xchg
push
fisttps
jb
pop
push
jb
adc
mov
scas
ret
mov
movl
mov
cmpsl
shlb
and
daa
roll
fbld
jbe
outsl
rolb
rcrb
or
aaa
adc
dec
mov
cmpsb
pusha
inc
push
jns
jecxz
mov
jno
cs
pop
adc
fbstp
pop
ret
sbb
sub
or
push
inc
mov
sbb
fimuls
es
xchg
lcall
mov
shll
dec
mov
inc
lcall
push
hlt
sbb
push
rolb
cmp
sbb
inc
pop
or
dec
insl
inc
in
sbb
xchg
imul
or
jl
adc
pop
aad
ds
inc
insl
sub
xchg
xchg
dec
popf
push
cmp
sbb
cmp
mov
mov
fcomps
sbb
xor
pop
ret
into
and
inc
push
mov
sub
mov
lcall
notl
inc
push
mov
sub
jp
clc
dec
jge
pop
pushf
or
sbb
push
xor
mov
cmp
loop
xchg
dec
or
xchg
je
jnp
incb
mov
or
fistpll
dec
xor
adc
daa
mov
rolb
imul
sbb
pop
aad
popl
adc
mov
int3
and
push
cmp
hlt
cld
push
mov
int3
inc
or
inc
push
outsl
mov
lods
dec
push
das
negl
jg
lods
dec
push
sub
sbb
and
and
je
cmp
and
movsb
ljmp
and
sub
jb
je
adc
jle
and
adc
mov
or
push
mov
enter
imul
rorb
addr16
je
inc
mov
pop
repz
insb
cmc
stc
loopne
pop
cmpsb
aam
fisubl
insl
leave
inc
mov
enter
jno
icebp
mov
and
je
mov
and
jp
pusha
xlat
dec
push
xchg
std
pop
rcll
loop
pop
std
pop
adc
lret
jge
and
std
daa
adc
insl
and
jl,pt
cli
lret
jp
insl
mov
mov
jp
mov
jp
pusha
int3
les
jb
jg
ret
out
shlb
idivl
jae
cmp
pushf
stc
pop
push
jbe
xchg
pop
dec
jmp
push
push
pop
outsb
cmp
jbe
and
gs
cld
sub
js
jae
lods
pop
repnz
fwait
adc
aas
es
sub
pop
lret
jb
es
cmp
cmc
push
push
inc
mov
cmp
cmc
sub
mov
mov
fstl
lods
ficoms
and
in
or
popa
lahf
push
stc
xor
lods
push
adc
cmc
rclb
jo
sub
xor
lock
js
outsl
notl
jl
lods
js
push
notl
pop
insl
jmp
push
cs
xor
pushl
pop
cmp
jb
sbb
fldcw
test
push
jg
xor
push
in
negl
pop
jne
js
mov
cmp
inc
mov
cmp
cmc
sub
jo
sub
js
fwait
notl
sub
aad
arpl
fldenv
icebp
ljmp
movsl
jno
popf
add
push
fs
sub
mov
cli
add
pushf
and
cld
sub
lods
jle
mov
sbbl
ja
jmp
call
sbb
jns
xor
cmp
adc
xchg
sbb
mov
ret
insb
ds
adc
inc
adc
push
int3
dec
cmp
and
xchg
dec
add
mov
imul
push
jp
out
nop
xlat
jle
and
sub
and
push
xchg
lds
mov
mov
inc
pop
push
xor
and
and
pop
pop
ret
aam
jbe
cmp
sahf
inc
xchg
lods
xchg
in
sahf
sahf
sbb
jmp
lahf
repnz
imul
sub
add
lock
shlb
cwtl
sahf
sub
mov
scas
adc
jnp
cmp
push
inc
stc
iret
xchg
subl
dec
push
jo
jecxz
pop
inc
sarl
out
pushl
jp
je
popa
divb
scas
gs
shld
jbe
cli
in
push
xor
cmp
inc
fstps
test
out
dec
and
adc
cltd
sbb
subl
push
aaa
cmpsb
cmp
adc
out
insb
outsl
or
add
or
lds
add
rol
fiaddl
add
daa
pop
out
fadds
push
or
aad
jp
sbb
push
ss
sub
sub
outsb
pop
test
push
xchg
imul
sbb
cmp
mov
jmp
mov
rcrl
mov
cmp
fldenv
inc
add
rol
fiadds
or
push
pop
out
filds
push
addr16
dec
mov
test
mov
aam
js
ss
sub
or
outsb
inc
test
sbb
sbb
lock
cmp
mov
pop
dec
mov
test
jge
and
push
xor
dec
cmp
adc
add
dec
scas
rolb
sub
jno
outsb
pop
test
stos
or
lahf
mov
rcrl
fidivrs
pop
arpl
xor
mov
jne
xchg
insl
push
out
aaa
sbb
mov
or
scas
ss
dec
mov
push
cs
cmp
jae
shll
adc
sub
or
scas
cmp
dec
out
and
sbb
push
pop
cmpsl
mov
imul
icebp
pop
notb
dec
xchg
or
sbb
lods
sbb
push
sarl
cmp
xchg
adc
sbb
mov
dec
jbe
arpl
sub
push
gs
adc
mov
lcall
popf
bt
pop
push
sbb
push
xchg
or
dec
xchg
ja
sarl
lock
shr
inc
or
xor
aad
fdivp
imull
jo
push
xchg
test
rcll
xor
rorb
imul
out
imul
push
insb
int
xor
cmc
jp
lds
push
iret
xchg
mov
jne
cmp
imul
mov
into
pop
cmpsb
mov
xlat
add
sub
mov
test
sub
in
pop
aas
mov
aaa
xor
out
pop
lcall
jp
stos
in
cmp
gs
cmpsb
scas
ss
or
sub
test
aaa
add
dec
daa
mov
out
dec
cs
mov
push
pop
cmp
nop
ds
jo
ss
insl
enter
popf
and
cwtl
xchg
cld
and
in
mov
rcrl
loopne
in
popf
push
in
movsl
lock
enter
xor
xor
sbb
dec
out
jnp
cmp
add
sbb
icebp
call
push
decb
sub
in
pop
call
mov
jmp
leave
jne
mov
out
inc
cld
outsb
xorb
mulb
bound
daa
push
std
add
outsb
adc
cmp
pop
adc
pop
mov
jmp
pop
mov
xchg
push
mov
xor
iret
cmp
lcall
adc
sbb
xchg
and
daa
enter
pop
aaa
cmp
insl
and
push
jge
add
jg
mov
icebp
pop
or
int3
xor
in
ret
add
dec
cmpsl
in
sahf
call
sub
cmpsb
inc
bound
jne
pop
rorb
fsub
jns
mov
mov
cmpsl
imul
sub
stos
lds
andl
pop
pushf
rcrb
and
dec
cmp
fidivrs
test
mov
dec
jg
repnz
pop
xchg
mov
lods
sub
std
pusha
mov
sbb
insb
cmp
cmp
cltd
stc
mov
call
fidivrl
into
repnz
loopne
cmp
cmpl
xlat
or
adc
nop
lods
fmull
loopne
add
dec
add
js
dec
fmull
mov
pop
mov
fldl
cmpsb
mov
or
xor
gs
frstpm(287
add
add
bound
lcall
mov
jns
into
xor
push
sub
dec
in
scas
out
popf
jno
inc
popa
sub
push
clc
addr16
sbb
mov
addr16
mov
jnp
call
loop
pop
call
jmp
jp
out
inc
pop
leave
mov
push
ss
std
jmp
cmpsl
xchg
push
jmp
lcall
or
stc
leave
fsts
xchg
push
lret
and
into
rcll
call
jno
ret
mov
mov
out
test
jp
xchg
push
mov
mulb
push
in
dec
inc
mov
je
mov
aas
imul
dec
dec
test
jge
into
pop
and
out
push
push
roll
mov
jge
mov
adc
and
arpl
mov
pop
into
mov
outsb
push
sbb
push
std
imul
jno
and
orb
xchg
movsb
lock
inc
mov
cld
push
cmc
add
push
mov
mov
adc
imul
in
ss
add
jae
inc
dec
jae
push
cbtw
fmuls
jle
mov
adc
mov
jp
insl
push
cmc
sub
mov
js
sub
inc
mov
jmp
jnp
sahf
jns
scas
je
dec
out
out
pop
lret
jnp
aaa
mov
jmp
nopl
mov
rorl
pop
add
push
pop
jne
scas
pop
cmp
mov
ljmp
aaa
jmp
mov
or
scas
ljmp
mov
imul
xor
dec
gs
mov
xor
mov
inc
dec
mov
add
jge
popa
repz
mov
mov
or
jg
pop
mov
outsl
icebp
adc
cld
jno
popa
icebp
inc
cmp
js
mov
fs
ret
shll
in
push
xchg
cmp
mov
xor
enterw
cmp
and
rcrb
xor
or
xor
pop
sbb
push
in
pop
mov
out
sbb
dec
rorl
cwtl
and
or
or
inc
push
cld
push
adc
lcall
je
sbb
xchg
xchg
pop
push
or
gs
push
aad
cmpl
adc
pop
cmp
cmp
jmp
add
sbb
or
push
inc
mov
fcomip
in
mov
test
and
push
leave
inc
lea
sub
sub
adc
dec
mov
pop
add
pop
aam
loop
stos
ret
mov
popf
pop
jae
inc
and
clc
out
ds
cmp
xchg
cmc
arpl
test
jno
clc
orl
outsb
dec
or
push
or
or
gs
push
out
add
imul
ret
mov
fistpll
fidivs
dec
mov
pop
gs
dec
pop
sub
aam
das
stc
shll
sub
mov
xchg
pop
test
jp
test
popa
xchg
sahf
js
cltd
and
mov
arpl
lea
xor
xchg
jle
jno
pop
fwait
sarb
push
aam
mov
mov
sbb
rorl
mov
popf
cmpsb
jmp
call
fcompl
movsl
ja
imul
scas
ficomps
clc
jg
xor
and
leave
idivl
sub
imul
jecxz
inc
loop
and
push
ret
movl
or
jmp
sbb
aaa
push
sub
cmp
je
push
dec
ljmp
mov
jmp
nop
pop
scas
repz
and
insb
dec
popa
inc
inc
ret
xchg
jmp
inc
xor
outsb
push
insb
and
mov
aad
fdivs
out
fidivl
js
repnz
mov
filds
mulb
or
push
in
mov
stos
jno
int3
sti
sub
cs
mov
pop
icebp
inc
dec
add
pop
pop
js
jbe
cltd
xor
adcl
test
push
jne
and
jmp
test
cli
fsubs
mov
out
push
loop
and
hlt
in
aam
sbb
pushf
adc
outsl
or
lea
fwait
aaa
mov
out
adc
mov
inc
fisttps
loop
xor
sti
inc
jb
jmp
imul
mov
enter
sbb
aas
push
jbe
arpl
fimull
rep
cmp
fstpt
pop
push
jbe
mov
xchg
xchg
xchg
fucom
fisttpl
fstl
add
jns
pop
mov
cmp
enter
cmpsb
mov
jnp
rcll
push
push
test
cmp
insl
mov
repz
cs
jg
and
cltd
js
dec
xchg
adc
dec
nop
pop
mov
push
push
push
mov
and
add
xor
dec
bound
push
jp
mov
xchg
cmp
arpl
xchg
xchg
jo
icebp
popf
lcall
hlt
fildl
mov
dec
cs
sub
stos
fwait
inc
sub
inc
fildl
add
sbb
mov
loopne
divl
add
flds
pop
jne
push
sub
aas
jg
jno
repnz
sub
lods
sahf
dec
mov
add
jne
jg
cli
push
sbb
or
enter
movsl
push
cmp
cli
xchg
xor
stos
xor
cmp
int3
add
negb
push
or
sub
subb
push
and
sahf
int3
or
repnz
loopne
or
aad
push
loopne
daa
pop
out
inc
dec
push
cli
test
subl
and
sub
out
mov
xchg
fs
test
jne
adc
pop
dec
dec
jo
fsubrs
mov
pop
and
cmp
mov
xor
movsb
add
adc
dec
or
adc
and
stc
negl
or
pop
cmpsb
cmp
xchg
push
pop
movsb
sbb
sub
dec
add
ja
mov
or
or
sub
sbb
stos
orb
orb
addr16
shll
jle
mov
xor
xchg
aaa
stos
pop
push
adc
loope
mov
dec
fdivrl
mov
outsb
pop
jnp
sub
push
loop
clc
sub
mov
add
or
or
dec
jno
je
enter
xchg
fildll
test
xchg
xchg
fwait
jle
decl
push
add
fnstcw
inc
mov
jg
mov
repz
xchg
sarl
push
inc
xchg
data16
push
push
push
pushf
cmp
in
mov
leave
mov
cmp
push
mov
xor
imul
pop
push
push
and
mov
push
push
fimull
adc
outsb
test
cmc
sbb
dec
pushf
pop
lds
add
sub
inc
ret
or
adc
cmp
nop
or
loop
cmp
push
lahf
pop
nop
dec
pushf
xchg
lret
push
aam
ret
es
xchg
cmp
jbe
adc
decb
bound
cmpsl
jns
ljmp
push
bound
dec
nop
xor
pushf
ja
and
fstl
and
cli
xor
lea
mov
dec
mov
lea
xlat
loope
push
sarl
es
popa
push
xor
cmp
cmc
pop
jl
xor
xor
push
mov
inc
cltd
jmp
test
xchg
lcall
mov
addr16
sub
dec
push
sub
mov
dec
std
adc
inc
cltd
addr16
mov
movl
cwtl
cmpsl
mov
sarl
divb
ljmpw
push
xor
sbb
sbb
jb
cmp
shll
push
and
and
pop
push
inc
lea
je
jl
js
aaa
push
out
cs
repz
call
les
aaa
das
pushf
xchg
pmuludq
inc
mov
lods
cmp
shlb
ds
sahf
imul
sbb
and
ret
mov
xor
in
fcompl
lahf
mov
sub
pop
adc
xorb
dec
inc
test
lret
mov
gs
mov
or
sbb
jb
dec
addr16
cmp
fcomps
pop
cmp
ficomps
ja
arpl
out
adc
imul
popf
adc
push
pop
cmp
lock
mov
fcmovne
gs
sbb
push
xlat
fs
adc
into
lcall
jecxz
fdivr
adc
sub
sub
insb
cmpb
mov
pop
mov
inc
xor
mov
pop
jle
adc
pop
mov
stos
fcomps
mov
mov
cmpsb
nop
or
int3
jb
repnz
pusha
ljmp
sub
data16
or
mov
jae
jbe
mov
sbb
call
push
or
in
out
inc
add
mov
loope
fldt
js
in
add
inc
sub
sbb
mov
add
mov
sub
pop
dec
bound
ficomps
popf
xchg
rolb
test
loop
shrl
sub
dec
sbb
ja
ljmp
xor
xor
mov
pusha
push
jle
popa
data16
xchg
sub
adc
pop
cmp
adc
in
in
dec
cld
push
sbb
and
xchg
inc
mov
lret
jae
data16
sub
pop
push
inc
pop
sahf
cmpsl
sub
and
sbb
pushf
push
or
pop
jno
sub
push
iret
sub
aam
pop
adc
lds
mov
and
mov
mov
fiaddl
cmp
sub
xchg
dec
stc
pop
ljmp
or
pop
mov
insb
sbb
dec
lcall
pop
iret
add
jp
or
ret
int
push
pop
inc
and
dec
cli
cmp
jne
xor
dec
fdivs
popa
sub
fsubrl
dec
adc
out
fdivl
xor
bound
and
out
mov
popf
int3
xor
mov
lret
ss
stos
xchg
imul
mov
and
push
inc
jp
insl
cmp
sub
sbb
sub
stos
nop
xchg
lahf
adc
stos
mov
and
cltd
mov
rclb
cwtl
inc
pushf
pop
or
mov
sub
sub
shl
scas
push
add
xchg
inc
xlat
mov
ss
dec
ja
and
into
jno
sub
push
and
pop
cmp
sahf
xor
insl
mov
cmp
movsl
mov
xor
imul
inc
add
push
mov
ja
int
imul
push
testb
push
dec
stc
insl
pop
push
sub
jae
push
stc
inc
sbb
xor
mov
xor
stc
xor
mov
or
xchg
sub
push
push
lock
les
sbb
scas
xor
bound
rorl
inc
pop
mov
add
cmp
data16
scas
pop
jae
or
dec
jnp
mov
push
fdivs
sbb
stos
jecxz
push
mov
pusha
jae
imul
sbb
sbb
sub
popf
mov
inc
adc
xor
repnz
mov
aas
sbb
inc
push
pop
ret
add
mov
repz
jb
jno
or
cs
or
stc
pop
sub
jns
pusha
fcomps
loopne
cmp
insb
jae
or
dec
and
in
mov
inc
mov
addr16
mov
pop
add
xor
fwait
adc
outsb
dec
sbb
xchg
inc
push
jae
mov
add
enter
pop
pop
dec
xchg
gs
pop
push
imul
shll
outsl
int
pop
fwait
aad
cmpl
hlt
sub
les
in
or
lock
lods
mov
xor
pop
xchg
sti
mov
loopne
jnp
insl
bnd
inc
add
outsb
mov
es
xchg
std
add
bound
push
mov
sub
pop
roll
nop
xchg
inc
push
cwtl
andb
xchg
jmp
adc
or
pop
popf
sbb
push
lods
push
add
rcrl
sbb
mov
pop
pop
mov
sbb
cs
dec
adc
sbb
cmc
jl
jb
inc
lcall
pusha
mov
sub
jge
mov
adc
sub
roll
and
mov
mov
inc
rol
iret
dec
inc
rclb
leave
mov
hlt
sub
in
imul
push
test
or
aas
and
jae
mov
unpcklps
icebp
adc
push
xor
mov
mov
cmp
xor
add
xchg
imul
scas
pushf
cmc
xor
mov
sti
sub
push
cmp
test
add
xchg
aad
hlt
sub
insl
pop
icebp
mov
mov
or
cmp
fcomps
push
shlb
subb
scas
cwtl
jb
dec
into
sub
subl
stos
in
decb
inc
mov
mov
or
ret
jg
inc
addb
lods
pop
add
lds
mov
test
xor
xchg
sbb
cs
dec
pop
fdivl
mov
ret
and
and
push
mov
pop
sbb
pop
std
jmp
jne
dec
call
xor
imull
movsl
xor
mov
movsl
jbe
cwtl
and
test
sbb
cmc
mov
add
cmpsl
dec
popf
pop
push
push
adc
mov
sub
dec
fisttpll
inc
sarl
push
mov
pop
es
push
xchg
xchg
sub
push
add
call
aaa
xor
jge
push
or
scas
jno
add
ja
fisubs
or
movsl
ljmp
or
cmpsb
xor
jp
xchg
scas
mov
mov
push
cs
ja
cmp
rclb
add
sub
adc
pop
rorb
push
xlat
mov
into
pushf
mov
imul
xor
add
jg
sub
enter
or
test
mov
sub
jecxz
js
dec
lss
push
mov
ja
cmp
mov
cmp
lds
rcrl
mov
pop
cmp
pop
je
in
sbb
and
stc
lods
jg
sbb
mov
mov
movsl
popa
ja
mov
inc
popf
or
jno
das
jbe
fcmovbe
es
out
not
push
aas
fcoml
icebp
mov
sub
jge
loop
test
out
jo
fists
lcall
fbstp
fstl
jno
in
bound
ffree
jb
in
prefetchw
jno
jge
out
popf
lods
jb
int
out
and
iret
mov
sbb
sbb
mov
imul
icebp
push
ret
idivl
imul
sbb
jbe
jns
xchg
mov
jo
and
mov
inc
mov
mov
jo
add
fcmovu
jge
notb
mov
test
and
jno
jno
fiadds
push
lret
pop
add
jmp
int
mov
fsubrl
pop
das
push
popa
jne
jge
lea
cmp
loope
push
sub
popf
call
adc
lahf
jae
data16
aaa
mov
test
scas
mov
and
ret
xor
cld
mov
mov
jl
xlat
inc
les
imul
sub
int3
adc
push
pop
dec
fs
nop
push
popf
inc
lcall
in
cmp
and
scas
pop
push
stc
insb
mov
xor
cs
das
mov
out
jne
lods
jno
xchg
inc
ds
mov
stc
mov
mov
aaa
adc
xchg
xor
lea
cmp
or
adc
lcall
and
or
sub
xor
shl
adc
ljmp
outsb
std
sbb
dec
cmpsb
lods
scas
cld
aam
add
push
sarb
dec
mov
add
cmpsl
stos
mov
int3
cmp
jae
and
outsb
stos
and
pop
inc
mov
movb
inc
sbbb
push
cmp
inc
mov
sbb
cmp
mov
cmpsb
pop
or
mov
mov
add
push
ljmp
or
xchg
arpl
jae
sbb
imul
outsl
mov
add
cmp
mov
xor
pop
loope
int
add
negb
sbbl
adc
mov
cmp
sub
gs
xor
mov
les
imul
shlb
lods
dec
aad
mov
lea
mov
pop
lock
imul
ss
ja
sahf
dec
rol
sbb
outsl
sub
cmp
cmp
fdivrl
sub
imul
mov
scas
imul
xchg
mov
and
cmp
xor
mov
sbb
fstl
cmpb
and
inc
in
xchg
stc
mov
inc
shrl
push
cmp
sbb
fsts
ja
or
push
cmpsl
adc
cmc
xlat
add
dec
or
mov
dec
dec
aam
mov
inc
or
inc
mov
and
xlat
jno
dec
mov
adc
jne
pushf
ljmp
imul
jle
insb
ja
adc
mov
stos
aad
jle
dec
sbb
sub
mov
push
imul
jbe
test
lock
pop
dec
mov
sub
lcall
lret
dec
sbb
dec
inc
sbb
mov
fdivl
test
sub
and
mov
xor
xlat
xor
jbe
sub
dec
push
repnz
test
sbb
jno
dec
cld
outsb
insb
cmp
mov
jne
repnz
sti
jne
fdivrl
sti
dec
insb
adc
fdivrs
jbe
and
leave
or
rcll
inc
adc
outsb
sbb
jecxz
lahf
jne
in
or
and
dec
cltd
sbb
mov
push
xorps
and
int3
int
or
mov
adc
pop
sti
popf
and
jmp
mov
adc
lods
scas
xor
mov
pop
imul
adc
mov
out
dec
xchg
in
push
pop
test
cmp
pop
mov
cmp
cld
push
xchg
mull
into
das
je
jmp
jl
pop
mov
inc
and
jae
sub
xchg
int
xor
xor
roll
arpl
push
mov
xlat
xchg
xor
mov
outsb
aaa
mov
sub
sub
stc
shll
cmpsl
aam
out
sbb
pop
jg
or
in
lcall
pop
jo
lret
pusha
lods
inc
jecxz
outsb
cmp
insl
sti
cmpsl
cld
pusha
mov
dec
imul
scas
or
push
std
mov
mov
repnz
movsb
cmp
push
xchg
jl
or
dec
cmp
add
mov
add
mov
mov
add
or
pop
js
mov
sbb
das
clc
jp
rorb
dec
cmp
push
cmp
xor
loope
roll
imul
out
push
repz
xchg
xor
inc
mov
xchg
push
push
xlat
pusha
xchg
add
sti
adc
or
jne
es
jl
into
roll
sbb
rcrb
mov
pavgw
popf
clc
jno
idivl
and
mov
das
xor
push
push
cltd
dec
shlb
push
adc
cmp
aam
out
dec
sbb
push
in
xchg
insb
jnp
adc
inc
cmp
loop
add
xchg
cmp
cmp
sbb
xor
inc
push
arpl
mov
adc
xchg
push
hlt
add
or
mov
subb
push
add
imul
xor
dec
xchg
test
push
dec
sbb
outsl
push
mov
sub
or
sub
push
mov
sbb
imul
sub
loop
pop
in
push
je
js
test
mov
inc
cmp
jl,pn
das
cmp
mov
sbb
leave
push
mov
pop
sbb
mov
inc
fnstsw
lahf
sbb
mov
imul
dec
jns
imul
jg
lret
push
mov
sbb
jg
shl
data16
popf
push
lcall
sbb
jo
shl
push
or
and
add
jge
cmp
lahf
je
sub
scas
pop
push
mov
adc
mov
sub
push
repz
movsb
adc
push
dec
ljmp
aaa
xchg
mov
ljmp
xor
bound
cmp
ja
and
filds
addl
out
adc
push
add
dec
push
popa
or
dec
push
add
jg
mov
ficoml
and
cmp
mov
scas
sub
dec
mov
rolb
ljmp
add
subb
ljmp
lods
mov
xor
retw
add
cmp
dec
adc
xchg
add
in
jl
dec
xchg
cmc
xchg
cld
aas
sub
adc
pushf
add
les
adc
push
out
sbb
xor
out
mov
out
xchg
imul
bnd
aaa
push
and
insb
push
comiss
jne
das
lea
lods
push
mov
xchg
cli
cmpb
je
pop
inc
lea
aaa
outsl
mov
jp
das
pop
je
xlat
dec
sbb
hlt
adc
sub
lods
cmp
mov
pop
je
shlb
push
adc
hlt
pop
mov
cmp
dec
mov
negb
adc
mov
mov
jae
or
mov
ss
xchg
or
push
arpl
leave
pop
ja
pop
mov
xor
fs
dec
inc
push
xlat
xchg
add
cmp
out
or
mov
push
testl
je
cltd
sbb
mov
xchg
mov
in
xchg
sbb
push
mov
loop
fsubl
or
orb
in
pop
fdivs
mov
jl
sub
sub
pop
test
rolb
mov
or
icebp
mov
add
inc
lds
imul
add
rclb
repz
int
mov
pop
ds
push
addr16
fildll
inc
aaa
mov
pop
jg
push
adc
pop
xchg
cld
xor
xchg
cli
ja
lret
sub
xchg
mov
mov
insl
cmpsb
mov
dec
xchg
and
inc
outsl
hlt
sub
add
jg
fistl
out
add
lret
push
xchg
xchg
loopne
push
fwait
mov
imul
xlat
cld
mov
adc
pop
imul
mov
jb
pop
mov
sarb
inc
rol
jmp
inc
or
mov
pop
mov
std
pop
dec
dec
xchg
adc
mov
xor
pusha
test
shll
mov
lods
sub
mov
push
hlt
mov
in
stos
outsb
mov
sfence
ds
inc
push
xor
popf
pop
les
ljmp
pop
imul
imul
lcall
xchg
push
sti
sub
mov
ret
xchg
in
jns
xor
mov
adc
jno
add
sbb
xor
popf
xchg
inc
lods
popa
add
xchg
lret
push
loop
push
dec
add
push
movsl
push
mov
dec
pop
mov
push
ret
insl
lret
lods
arpl
adc
jne
out
add
test
mov
ljmp
sarb
lret
push
push
psubd
imul
xor
mov
or
pop
shrb
mov
mov
cmpsb
jnp
lahf
aad
fcmovb
es
ficoms
lret
jmp
mov
pop
fsubrs
hlt
inc
fildl
adc
mov
jge
mov
mov
enter
das
jo
and
lahf
dec
cmp
popf
sub
xor
jne
ds
sbb
rorb
lods
xchg
adc
mov
imul
loope
cmp
sbb
cmp
mov
scas
jnp
push
lahf
clc
fwait
pop
pop
mov
sub
jnp
jmp
jae
sub
mov
push
int
lea
jns
pop
cmpsl
int3
movsb
jmp
gs
lar
pop
push
lea
add
addr16
arpl
std
outsl
pop
pop
js
adc
pop
push
mov
push
adc
rcl
test
sbb
les
xorb
test
test
push
mov
cmp
lret
push
inc
ss
push
dec
insb
imul
push
sbb
stc
sti
xor
cs
ret
sbb
jno
imul
syscall
push
push
push
loop
xchg
adcl
inc
arpl
jno
mov
or
in
sbb
outsl
fdivrs
push
jae
xor
sbb
nop
fdivrl
dec
data16
cmp
repnz
adc
jb
add
sbb
loope
dec
rcl
dec
or
xchg
mov
lret
rcrb
xor
fnclex
push
popa
mov
scas
jecxz
mov
dec
test
push
sarl
outsb
scas
in
mov
or
notl
scas
xchg
mov
mov
xor
insl
mov
ds
sti
mov
fcmovnu
jg
ret
sbb
fldcw
pop
push
mov
in
pop
imul
push
fwait
jne
inc
imul
push
ja
jl
xchg
movsb
ds
fdivp
adc
or
movsb
jo
rolb
xchg
jno
push
jb
test
jle
hlt
sub
into
ret
sti
pop
jmp
movsb
out
sbb
iret
stos
jns
ja
dec
addr16
mov
int3
outsb
cmpsl
dec
pop
test
add
or
adc
adc
dec
fnstenv
cmpsl
gs
shll
bound
insb
jno
repz
mov
xor
enter
push
sbb
or
cmovl
dec
mov
push
xor
mov
sbb
mov
mov
popf
fs
nop
cmp
icebp
inc
dec
shr
lods
insb
jns
aaa
orb
imul
pop
jle
popa
or
movsb
pop
cmp
cltd
in
cmp
sub
in
xchg
insl
test
cli
xchg
stos
movsl
es
pop
xchg
sbb
mov
xchg
jne
push
iret
xlat
inc
mov
popl
push
cmp
push
xchg
test
pop
addr16
addl
bound
pop
dec
push
decb
sbbb
inc
or
xchg
mov
mov
test
andb
xchg
sub
aaa
jp
imul
inc
inc
and
push
mov
cmp
shll
dec
xchg
cmp
or
popa
pusha
mov
or
push
or
adc
xchg
or
mov
loope
push
pushf
mov
adc
shrb
cs
sub
aad
sub
mov
addr16
inc
rclb
bound
pusha
or
or
addl
pop
jo
or
mov
leave
cltd
dec
jg
sub
push
pop
xlat
and
push
cmpsl
add
mov
lea
es
dec
jl
int
jns
nop
jp
sub
jne
adc
pop
insl
leave
mov
repnz
cmp
scas
stos
mov
popa
sbb
pop
add
xchg
in
mov
sbb
nop
jb
inc
ja
fimuls
loope
mov
outsl
test
in
mov
stos
or
addr16
sbb
dec
adc
arpl
ds
push
pop
cmc
loop
enter
loopne
cmp
mov
testl
xchg
mov
mov
push
js
das
cmpb
and
jle
shlb
push
dec
iret
pusha
cmp
addl
fisubs
stos
mov
pop
xor
fldt
fadds
adc
pushf
pop
rcrl
movsb
mov
sbb
cmp
fisubl
pusha
pop
sbb
insl
hlt
imul
pop
insl
hlt
popf
jl
xor
int3
lds
in
mov
sbb
add
xchg
sub
pushf
in
popa
out
mov
xor
aad
int3
cmp
sub
mov
leave
cmp
xor
adc
sti
mov
jns
aas
pop
ja
loopne
add
mov
dec
adc
aas
aad
es
fwait
movd
ds
stos
xlat
jle
push
fimull
jne
fsubs
pop
bound
shrb
fbld
or
inc
push
inc
and
insb
iret
out
repz
xchg
stc
mov
mulb
imul
cmpsl
mov
jne
or
jmp
jo
dec
or
pop
pusha
cmpsb
adc
adc
rorb
add
mov
outsb
movsb
movsb
xchg
mov
mov
pop
mov
out
psraw
test
mov
mov
lods
push
shl
daa
pop
jo
shrl
int3
add
mov
ret
test
cmpsl
rcl
push
adc
push
mov
push
xchg
cmpsl
xchg
cs
mov
mov
dec
mov
outsb
xorb
xor
xor
cmp
stos
in
and
int
add
and
push
cs
inc
push
insl
mov
aam
nop
mov
inc
shrl
sbb
mov
cmp
pop
int
mov
sbb
cwtl
mov
xlat
inc
add
test
cmp
adc
fistl
mov
xchg
mov
cwtl
mov
les
lea
push
loopne
dec
pushl
mov
out
leave
mov
adc
and
inc
mov
pop
aad
lret
outsl
test
add
hlt
or
gs
rol
push
xchg
push
pop
xor
imul
loope
pop
xchg
in
push
hlt
int3
shll
jge
fndisi(8087
adc
mov
aam
pushf
cmp
xor
sarb
push
ljmp
and
out
sub
movsb
push
xchg
lods
add
fisttpl
lods
lret
cmp
pop
adc
aas
cld
std
scas
push
jle
add
pop
mov
jne
dec
sbb
dec
push
jl
cmp
xor
in
aaa
mov
or
jmp
lock
jp
lock
sbb
or
ljmp
daa
loop
imul
repnz
mov
insb
mov
xchg
shll
sub
imul
in
mov
mov
push
push
cmp
scas
jne
popa
aas
scas
jp
jg
push
lea
push
jl
scas
xor
shlb
pop
jp
sub
fyl2x
push
xor
sti
jmp
xor
jmp
pop
mov
cwtl
adc
decb
adc
out
rcrl
in
sub
icebp
xor
in
mov
sti
jo
ljmp
inc
jmp
inc
xchg
in
imul
cmp
ret
jl
cmp
leave
hlt
ds
mov
bound
loopne
addl
mov
mov
pop
lret
dec
scas
jae
jecxz
add
adc
test
lahf
pop
arpl
jns
adc
push
fdivrs
lcall
push
xor
adc
xchg
rclb
fiadds
xchg
data16
pusha
pushf
loopne
shrl
lock
bndldx
ljmp
mov
jg
adc
in
call
inc
das
popa
stos
cwtl
mov
pushw
enter
gs
lahf
push
pop
inc
mov
adc
sub
xor
lcall
sbb
rolb
gs
stos
cmp
std
out
xor
push
mov
repz
ret
vfnmaddps
clc
jbe
mov
jp
cmp
mov
gs
nop
addr16
movb
push
mov
and
shrb
outsb
movsb
ds
int3
repz
dec
lods
fistps
lret
inc
jno
push
es
popa
xchg
or
mov
push
outsl
outsl
stos
ljmp
push
icebp
outsb
fildll
or
add
pop
sbb
ret
sbb
xchg
jns
add
stc
xchg
push
xor
lea
cld
jg
test
push
fnstcw
xor
jg
pop
fsubr
sbb
sbb
shrl
push
sub
divl
movsl
push
dec
jae
sbb
push
dec
push
mov
loope
loop
inc
test
cmp
jo
cmpb
je
rorl
in
or
xor
stos
jmp
jg
cli
sub
data16
or
stos
outsb
cmp
cwtl
lock
imul
inc
icebp
push
jmp
bnd
sbb
andl
roll
dec
test
inc
adc
lds
out
stos
jae
nop
jmp
inc
mov
lods
push
cmp
movd
xchg
cwtl
lods
push
das
inc
dec
xor
cli
inc
out
scas
jge
dec
push
out
stos
pop
aam
aad
mov
cmc
repnz
sub
outsl
and
pop
push
jmp
mov
ds
dec
pop
in
test
fdivr
fwait
jmp
xchg
out
cmp
les
pop
lds
add
jno
mov
les
lds
push
xlat
xchg
mov
jne
fdivrl
adc
lret
imul
jno
mov
sbb
cltd
fdivr
in
test
les
mov
in
mov
cmc
sbb
push
mov
imul
mov
push
jno
mov
les
mov
test
ret
fisubl
dec
jmp
mov
enter
les
les
inc
xchg
cmp
inc
pop
fimull
in
cwtl
sbb
or
sbb
dec
sbb
pop
mov
imul
cmp
adc
xor
xchg
xor
dec
call
cmc
mov
sbb
push
mov
imul
mov
adc
fdivrl
in
insl
jno
mov
fstp
shrl
add
ja
inc
out
fidivrl
ja
mov
imul
xchg
and
arpl
inc
jno
mov
les
fsubl
xor
icebp
test
mov
pop
lods
ss
jo
iret
sbb
mov
ds
add
mov
fdivr
adc
lock
ja
cmp
insl
mov
pop
dec
arpl
jno
mov
pop
outsl
pop
arpl
mov
jno
mov
les
outsb
lock
xchg
call
add
adc
push
sbb
xor
push
aam
in
xchg
jno
mov
jmp
mov
icebp
xor
jb
roll
ja
inc
jnp
sub
ja
mov
imul
xor
push
push
inc
xlat
fcoml
test
inc
call
cmc
mov
fiaddl
ja
mov
imul
ficompl
arpl
jne
and
cmpl
outsl
or
jmp
outsl
pop
call
frstor
ficompl
ja
mov
imul
xor
ljmp
add
call
ja
call
lock
push
pop
cmc
outsl
callw
jp
sub
adc
sbb
arpl
imul
xor
add
cmc
shr
and
adc
jp
sub
call
or
fiaddl
pop
outsl
pop
ja
mov
pop
aam
in
xchg
jno
mov
jmp
mov
stc
xor
outsb
call
sub
jnp
sub
ja
mov
imul
xor
push
pop
inc
xlat
fcoml
test
dec
call
shrl
adc
ja
mov
imul
pop
dec
arpl
jne
and
xorl
and
test
scas
out
pop
iret
int3
push
int
outsb
call
and
sbb
sbb
adc
imul
cmp
iret
fsubl
xchg
xor
pop
call
fstpl
or
sbb
arpl
imul
xor
mulb
push
daa
pop
pop
lret
mov
imul
push
pop
icebp
mov
push
pop
stos
fdivr
adc
lock
outsl
scas
call
popa
or
inc
cmp
insl
sbb
fcmovnu
xor
fdivl
ja
mov
imul
push
fnsave
xchg
sbb
jno
mov
les
fmull
psrad
inc
xor
push
pop
xlat
outsl
xchg
ja
mov
imul
push
pop
cmc
arpl
fsubrl
mov
les
sbb
jg
lock
call
pop
and
dec
decb
jo
xor
ss
icebp
mov
sbb
dec
mov
imul
xor
pop
jne
out
fsubrl
jmp
push
divl
inc
out
rcrl
mov
imul
xchg
xor
mov
pop
add
cmp
jno
mov
les
fsubrl
das
cmp
lods
cmp
mov
repz
imul
push
xor
mov
pop
shll
fcoml
adc
les
xor
sbb
lock
ficomps
outsl
out
call
dec
cli
pop
pop
mov
divl
inc
fcmove
sbb
mov
jp
sub
mov
pop
add
cmp
adc
push
jno
mov
les
fdivl
ss
arpl
ficompl
ja
mov
imul
pop
xor
mov
pop
frstor
or
jno
mov
les
cmp
jns
ficomps
outsl
out
call
ja
mov
imul
inc
pop
in
push
mov
cmc
jno
mov
les
sbb
sbb
into
call
dec
sub
inc
fists
jno
mov
pop
mov
es
jno
mov
les
jp
sub
outsl
sahf
call
adc
add
gs
scas
push
outsb
mov
fcoml
xchg
outsl
or
popf
cs
jle
and
sbb
fidivl
sbb
pop
mov
imul
and
adc
sbb
mov
ds
std
xchg
inc
mov
icebp
sbb
push
mov
imul
lret
arpl
popa
fdivl
in
jno
ss
addl
ja
inc
neg
mov
out
shll
shl
scas
imul
jbe
aad
xchg
arpl
sub
mov
les
fcoml
pop
out
inc
xor
push
insl
lods
andl
adc
shr
and
jo
stos
jp
sub
outsl
mov
cmp
inc
pminub
lds
push
shr
xchg
jno
mov
neg
mov
out
lock
xor
push
flds
ja
inc
inc
fisubl
ja
mov
imul
xor
cli
imul
xor
ds
cmc
mov
sbb
dec
mov
imul
ret
mov
pop
dec
arpl
jne
and
test
pop
mov
add
ja
inc
xchg
fcmovbe
sbb
mov
icebp
aad
xchg
add
pop
sbb
inc
fcoml
in
push
jno
mov
les
fdivl
and
pop
inc
fisubrs
fiadds
cmp
outsl
dec
call
int
ja
inc
cmpsl
fiaddl
sbb
inc
mov
imul
xor
ficomps
shr
jnp
out
sbbl
ja
inc
out
fidivrl
ja
mov
imul
mov
cmp
arpl
dec
jno
mov
les
fsubrl
das
cmp
lods
sub
cltd
adc
cs
xor
dec
call
lds
ficoml
ja
mov
imul
xor
out
inc
arpl
test
xor
cs
loope
ja
inc
mov
outsl
stc
ja
mov
imul
pop
gs
pop
fdivrl
in
jne
and
and
movsl
jno
mov
out
rcll
pop
lock
outsb
pop
call
xor
xor
cs
pop
jge
fsubrp
dec
add
nop
jb
mov
repnz
jp
mov
jmp
mov
icebp
scas
bound
add
shll
lcall
arpl
push
adc
out
inc
xor
mov
popf
cs
stc
xorl
mov
cmc
sbb
push
mov
imul
mov
adc
rcrb
cmp
insl
jno
mov
fstp
imull
add
ja
inc
jecxz
rcrl
mov
imul
xchg
and
arpl
inc
jno
mov
les
fsubl
aaa
cli
icebp
lods
das
jg
inc
iret
ficompl
ja
mov
imul
xor
mov
pop
sub
adc
jno
mov
les
inc
adc
dec
xor
jbe
data16
mov
pop
outsl
mov
xchg
scas
inc
imul
push
xor
mov
pop
lds
add
push
in
adc
mov
les
xor
sbb
lock
ficomps
outsl
out
call
mov
xor
call
icebp
arpl
fsubl
mov
les
and
ja
lock
outsl
call
pop
and
push
cmpsb
or
add
xor
arpl
in
aad
xchg
icebp
adc
lcall
add
ja
inc
cmp
insl
sbb
fistpll
mov
iret
in
cltd
jno
mov
out
rcll
push
lock
xor
jbe
aad
xchg
inc
jae
xor
ja
mov
imul
and
movsb
outsl
inc
cmp
cs
cltd
arpl
rcr
in
shll
mov
les
xchg
and
outsl
cmpsb
call
adc
pminub
aas
outsl
imul
cld
xchg
jno
mov
jmp
mov
stc
xor
push
fldl
ja
inc
jnp
sub
pop
mov
imul
xor
add
cmc
shlb
scas
imul
dec
pop
std
arpl
fsubrl
mov
les
sbb
jg
lock
outsl
fcmovbe
cmp
out
inc
sub
jge
fstpt
popf
cs
call
test
ja
inc
mov
fstps
cmpsl
mov
imul
mov
adc
paddsb
xor
and
iret
ficompl
ja
mov
imul
bound
lds
jle
inc
pop
testl
les
xor
gs
out
call
stos
cmpsb
adc
add
xor
arpl
fmull
mov
les
lcall
outsl
mov
cmp
inc
sub
jge
fildl
jno
mov
pop
mov
es
jno
mov
les
outsb
lock
mov
xor
ja
inc
adc
push
sbb
xor
nop
adc
mov
imul
dec
xor
mov
pop
int
outsb
icebp
fcompl
or
les
sub
outsl
ret
xor
loop
inc
add
add
xor
arpl
rcr
in
shll
mov
les
mov
cmp
outsl
scas
call
popa
or
inc
aas
fisubrl
das
inc
cmp
pop
iret
ja
inc
repz
ja
mov
imul
jbe
sub
sahf
and
ja
cmp
les
fcompl
cmp
lock
xor
cli
lea
sti
mov
imul
push
xor
mov
pop
fldenv
add
jno
mov
les
xor
addr16
lock
ficompl
outsl
ljmp
cmpsb
push
imul
ss
xchg
arpl
int
in
in
mov
std
les
adc
sbb
outsl
lret
add
ja
inc
and
adc
outsl
jo
add
ja
inc
out
lds
xchg
imul
xorb
mov
pop
xor
sbb
dec
jno
mov
les
fsubrl
sub
mov
sti
outsl
test
stc
scas
push
imul
pop
xor
mov
pop
shll
or
rcrl
mov
xor
arpl
cmp
mov
les
fsubl
aas
repnz
mov
outsl
movsl
ja
mov
imul
push
xor
mov
pop
shll
adc
jno
mov
les
dec
adc
loop
inc
xor
push
lea
mov
imul
inc
pop
loope
push
fstp
mov
lcall
mov
faddl
adc
lock
xor
mov
adc
ja
inc
add
gs
and
push
jne
or
inc
inc
pop
movsl
data16
lret
xchg
pop
mov
and
repz
xchg
xor
pop
call
int
ja
inc
stos
aad
cmc
inc
jbe
shrl
mov
hlt
fstpl
sub
gs
out
adc
xor
out
mov
arpl
cmp
gs
imul
xor
add
adc
push
lock
es
test
call
std
xorl
mov
outsl
stc
ja
mov
imul
scas
xor
arpl
pop
fdivrl
in
jne
das
mov
in
arpl
cmp
fisubrl
ja
mov
imul
xor
mov
pop
sub
inc
in
sbb
mov
les
cmp
outsb
stos
dec
int3
ss
jo
xor
ljmp
xlat
sbb
add
xor
inc
out
idivl
jno
mov
les
aam
mov
in
push
mov
mov
movsl
xchg
jb
add
testl
adc
lock
lret
xor
ljmp
fistl
push
mov
ja
inc
jmp
mov
ja
mov
imul
jp
sub
lcall
arpl
push
adc
loop
inc
xor
add
ja
mov
imul
push
pop
icebp
arpl
fsubrl
mov
lock
lds
ds
jg
sub
inc
mov
adc
add
xor
ljmp
and
imul
xlat
addr16
stc
ss
push
add
cmp
in
xor
call
idivl
jmp
sub
outsl
lcall
ss
jo
push
mov
cmp
cs
adc
push
xchg
mov
imul
fdivp
dec
mov
jle
jne
cs
cwtl
inc
xchg
xchg
jmp
pop
xlat
notl
jno
mov
adc
push
pop
icebp
outsl
call
sub
or
sbb
ja
cmp
gs
xor
loop
dec
arpl
imul
fistl
xchg
fisubl
ja
mov
imul
dec
xor
mov
pop
leave
arpl
fsubrl
mov
les
adc
or
mov
adc
ja
inc
add
pop
sbb
sub
xchg
push
fbstp
cltd
adc
lock
dec
cmp
inc
mov
outsl
cmc
ja
mov
imul
xchg
xor
arpl
inc
jno
mov
les
fcompl
pop
out
inc
xor
fcompl
into
mov
imul
cs
popf
arpl
in
int
mov
loope
mov
lock
fstl
pop
dec
ficompl
sbb
outsl
mov
imul
xor
cli
imul
xor
ss
in
ja
inc
mov
outsl
stc
inc
outsl
adc
mov
add
xchg
adc
jo
adc
dec
inc
enter
lea
in
jb
xor
sti
sti
add
cmp
dec
sub
fisubs
lret
cmp
cmc
das
xchg
pop
jbe
mov
sbb
pop
sbb
jge
xchg
inc
aam
ss
or
iret
imul
cwtl
mov
ljmp
jae
pop
xor
loop
idivb
jae
gs
jae
ljmp
rcrb
aad
jge
xor
sbb
mulb
pop
inc
dec
jp
das
divb
lahf
mov
das
inc
aas
and
ds
andps
mov
dec
xchg
out
jmp
notb
inc
mov
imul
lods
jno
stos
pop
pusha
xchg
mov
pusha
es
jmp
pop
mov
out
dec
push
stos
js
sti
fldl
push
push
popa
jg
mov
das
pop
pusha
xchg
adc
and
xchg
sub
adc
jno
bound
in
out
push
mov
rcll
jb
add
out
cmp
mov
xchg
adc
push
pop
aas
dec
pusha
cmp
bound
jb
in
dec
dec
ljmp
pop
push
jb
dec
in
popa
dec
dec
push
js
das
jp
pop
jmp
xchg
sub
insl
popa
mov
dec
or
negb
or
out
add
leave
jno
jmp
xor
xor
push
jno
popa
mov
mov
out
add
pushl
sub
cld
jno
ss
xchg
push
out
or
mov
and
je
in
jne
aam
lahf
ds
js
sub
imul
pop
pop
mov
out
jae
cwtl
fwait
jns
mov
mov
sub
cmp
mov
rcll
mulb
rcll
adc
dec
out
in
xchg
imull
ds
push
sarb
ss
cltd
cmp
cwtl
sub
mov
jecxz
xchg
call
xlat
jge
nop
movsb
aam
and
pop
out
sub
aad
mov
and
or
sub
leave
push
xor
pusha
cs
inc
push
dec
fs
scas
jecxz
lret
xchg
push
xor
push
mov
xor
sbb
mov
sbb
and
cmp
clc
sub
cmp
sub
repnz
add
mov
and
inc
xchg
jecxz
outsl
imulb
adc
mov
add
pop
cmp
sbb
popa
adc
repz
inc
and
je
int3
push
fs
push
jnp
mov
mov
ret
enter
lret
test
pop
sub
pop
xchg
mov
push
jbe
inc
stc
ffree
adc
bound
mov
lds
mov
ds
test
inc
push
out
cmpsl
jbe
mov
add
jecxz
outsb
jecxz
add
pop
mov
and
outsl
negb
pop
inc
cwtl
push
daa
sub
dec
ret
jno
sbb
ljmp
shrb
cmp
gs
cwtl
pop
je
or
out
mov
int
std
lock
test
xor
xchg
gs
push
bound
repz
or
or
mov
repnz
pop
cmp
dec
cmpsl
mov
mov
in
gs
pop
xor
push
popa
leave
insl
call
xchg
cmp
ss
iret
pop
push
mov
mov
insl
bound
lret
jne
push
popa
jle
lret
js
sub
cld
push
dec
jmp
xor
lret
or
mov
repnz
pop
cmp
dec
ds
push
xor
push
mov
or
pop
inc
sub
mov
dec
push
repz
pop
push
jp
xchg
mov
dec
jae
xchg
out
out
es
fiadds
stos
jno
lahf
mov
insl
arpl
dec
fcoml
in
dec
jno
cmpsl
xor
mov
jl
in
aaa
jno
fimuls
hlt
sub
repnz
fisttps
add
pop
inc
push
std
pop
pop
mov
mov
ret
aam
jmp
ss
aad
aad
jne
jno
sbb
aad
sbb
push
sub
push
inc
mov
gs
pop
jae
sub
pop
cs
imull
add
insb
jo
fdivrs
and
cs
pop
loope
call
outsb
scas
iret
int
pop
decb
mov
cli
mov
add
mov
fidivrs
pop
enter
sarb
adc
mov
mov
inc
test
pop
xchg
daa
lods
xchg
les
adc
cmpl
ja
xchg
rcrb
push
std
sti
lods
fldt
inc
xchg
out
scas
repnz
sbb
xor
xchg
repnz
xor
add
iret
inc
mov
aas
dec
mov
dec
scas
ret
sbb
and
jne
inc
cwtl
ret
movb
fbstp
and
adc
arpl
call
jnp
cmp
jno
mov
in
add
sub
inc
adc
push
bnd
outsl
dec
push
std
sub
xlat
xor
stos
mov
iret
aas
popf
dec
andb
je
dec
jo
roll
xchg
xor
cmp
popa
xor
jo
dec
push
loopne
notb
es
jne
pop
negb
and
jge
mov
adc
or
adc
push
rcrb
cmc
xchg
cltd
adc
cmpsb
outsl
xchg
daa
cwtl
and
aad
fmull
jl
pop
addr16
xor
ficoms
les
popa
inc
lea
or
fisubs
xlat
in
mov
pop
xor
lods
out
rorl
push
jns
sti
iret
or
call
call
notb
dec
negl
pop
es
pop
sub
adc
test
popa
push
inc
orl
sarl
arpl
jne
das
sahf
sub
jne
inc
sub
xor
insl
dec
out
fs
fcmovb
cmp
pushf
or
je
adc
jmp
dec
push
loope
jae
stc
outsl
cwtl
roll
dec
ss
hlt
popf
popa
sti
aaa
int
push
popf
fidivl
jecxz
das
repnz
jmp
jae,pn
cmp
xchg
adc
loop
xor
negl
lret
push
jl
inc
inc
call
popa
pop
into
dec
dec
jne
pop
fs
hlt
fstp
sbb
adc
lret
adc
mov
repnz
xchg
jg
xchg
xchg
pop
fwait
inc
pusha
mov
cmp
mov
insl
adc
mov
xchg
push
add
movb
mov
dec
dec
jg
pusha
sbb
jno
pushf
xor
sahf
mov
dec
insb
jge
test
mov
sbb
loop
xchg
mov
mov
and
leave
dec
jp
imulb
gs
shlb
jae
add
or
jno
dec
cmp
inc
xchg
dec
fmull
inc
sub
pop
pop
sbb
rol
xor
cmp
fcmovne
add
in
and
imulb
dec
jbe
add
jae
or
jp
loop
ds
xlat
xchg
push
roll
inc
adc
push
cli
aas
ljmp
sbb
icebp
cmp
xor
inc
bound
insb
pop
dec
shl
xor
xor
lahf
ljmp
sub
pusha
xchg
pop
xor
pop
pop
pop
dec
insb
fsincos
sub
sbb
mov
add
ret
xchg
movsb
jb
xor
push
or
jnp
dec
cmp
jno
inc
xlat
pop
pop
ljmp
int
cli
sbb
inc
inc
sub
adc
xor
mov
lock
lret
push
ret
popa
jnp
add
pop
dec
jb
pop
jno
jae
sub
divb
pop
inc
mov
pop
rorb
inc
dec
push
movsl
packuswb
sbb
cmp
addb
or
sub
add
adc
jae
mov
jo
push
adc
jb
movsl
int3
lock
pop
push
repnz
push
ficompl
push
imul
call
aaa
cltd
ret
and
pusha
inc
clc
pusha
sbb
outsb
xchg
dec
insl
sbb
push
add
fdivr
or
inc
shrb
sub
out
in
out
pop
xor
repnz
pop
rdmsr
hlt
out
jbe
dec
loopne
cmp
fs
cld
das
test
push
bound
shrb
sub
and
sbb
mov
jno
push
sbb
pop
std
das
daa
mov
push
lahf
fwait
sbb
and
shl
mov
das
scas
imul
push
push
movsl
add
repnz
mov
push
mov
roll
sub
aaa
adc
xor
test
lods
lret
sub
add
sub
xchg
add
ljmp
adc
subb
ljmp
ret
inc
add
dec
imul
pop
xor
stc
xchg
imul
xchg
pop
stc
outsb
lret
outsl
xor
xchg
sbb
ficoml
insl
xor
jl
push
ljmp
notb
add
mov
pop
cmp
sbb
ss
xor
push
sub
and
or
xchg
sbb
sub
das
jne
sarb
repnz
pop
inc
lret
jae
mov
gs
sbb
fwait
cmc
loope
aam
sbb
pop
cmp
insb
adc
xchg
lcall
jne
and
aaa
push
rcrl
scas
sbb
pop
js
mulps
push
fwait
outsl
lods
pop
xchg
xchg
inc
pop
jo
jo
lret
dec
sti
cmp
pop
movsl
push
jno
ljmp
aaa
cmp
dec
xor
push
divb
pop
jb
pop
push
inc
data16
sahf
sub
sbb
cmpsb
jg
sub
dec
cwtl
lea
sbb
dec
je
dec
mov
divb
adc
inc
lods
lods
out
lods
and
ror
dec
mov
xor
cvttps2pi
out
test
inc
mov
cld
ja
mov
xlat
out
add
out
imul
sbb
pop
jg
sub
fistps
mov
imull
cmovno
outsb
inc
daa
insb
ja
addr16
push
cmp
sbb
enter
aaa
xchg
arpl
outsb
negb
lgs
pop
je
and
jle
push
nop
cltd
push
test
mov
adc
inc
push
jae
loopne
daa
insb
out
cmpsl
jne
addr16
push
pop
push
push
jae
arpl
pop
jns
lods
jno
test
ret
inc
mov
repz
lahf
jae
dec
push
in
mov
dec
mov
lret
cltd
mov
fistps
sbb
ljmp
divl
fwait
rcll
mov
leave
xchg
cltd
or
jno
mov
add
xchg
push
pop
test
dec
loope
and
pusha
inc
lcall
sbb
mov
nop
fistps
daa
adcl
mov
fidivs
out
mov
jae
sti
daa
inc
fwait
push
cmp
mov
std
dec
jl
xchg
pop
repz
mov
pop
aam
xchg
aas
pop
mov
lret
pop
mov
sbb
vmovd
loopne
pop
xor
not
inc
mov
jbe
sbb
xchg
cltd
aaa
xchg
or
mov
aaa
push
pop
dec
sub
sub
das
shrb
xchg
adc
pop
pop
mov
ficoms
mov
testl
xchg
imul
into
push
iretw
mov
aaa
mov
mov
mov
push
shlb
sub
movl
out
push
sbb
push
pop
adc
dec
xor
aaa
xchg
int
xor
sbb
jmp
aaa
mov
pop
pop
jno
outsb
into
hlt
stc
pop
arpl
pop
adc
jno
dec
popf
rcll
popf
cmp
pop
xor
mov
out
stos
mov
lock
adc
pop
or
jecxz
notb
mov
xchg
fmull
repz
inc
xor
imul
jmp
fstpl
push
dec
loope
cmp
nop
pop
jecxz
dec
push
iret
mov
ficomps
and
mov
in
inc
push
insl
daa
sbb
sub
mov
jecxz
mulb
push
dec
testb
xchg
push
push
pop
xorl
push
ds
dec
push
jno
inc
mov
mov
negb
cld
aaa
adc
lea
inc
inc
jne
inc
inc
sbb
pop
int
xor
lcall
xchg
imul
cmpsb
xor
pop
jne
xor
arpl
jno
cmpsl
xor
dec
inc
adc
xchg
pop
pusha
pop
iret
xchg
and
aam
pusha
ja
insl
pop
mov
rcll
aaa
mov
dec
gs
pop
das
mov
mov
cmp
jb
xor
xor
jg
imul
cmc
add
jo
or
jae
mov
icebp
xor
popf
aaa
xchg
adc
push
push
sbb
jl
jge
mov
in
in
repnz
js
jo
and
lahf
cmp
ss
arpl
inc
out
pushf
loope
xor
mov
cmp
ss
and
sbb
dec
movsb
jno
inc
ljmp
xor
push
iret
clc
pop
jno
outsb
push
cmp
aaa
ljmp
aaa
outsb
jmp
cmc
out
fcomps
xor
push
lods
pop
jae
imul
stos
jne
das
cmp
mov
das
jp
and
lea
mov
push
btr
loop
push
cmp
xchg
aaa
add
dec
inc
pop
push
push
ret
or
jecxz
cli
xor
ffreep
ljmp
mov
rolb
aam
pop
add
fcomip
loop
push
jns
popf
jne
icebp
lret
stos
or
or
jb
pop
jne
pop
dec
sbb
sbb
jae
icebp
xchg
lock
ds
add
xor
cmp
cmp
stos
inc
aam
sub
fdivp
loop
shll
mov
push
out
lods
or
jmp
cli
xchg
add
in
ficompl
jg
popf
or
in
xchg
pusha
jns
adc
cli
inc
jecxz
and
pushf
and
mov
add
imul
es
fs
add
and
mov
ljmp
test
push
mov
loope
lea
cmp
pop
out
ror
dec
pop
jno
outsl
dec
or
or
jb
xor
push
repz
and
bound
mov
jmp
andl
push
pop
mov
pop
add
mov
pusha
loopne
fcompl
xchg
sbb
lret
aam
pop
push
out
xor
cmp
mov
xchg
imul
stc
test
sbb
or
sub
sbb
das
lods
sbb
int3
inc
sbb
insl
fdivs
notb
inc
repz
inc
dec
roll
pop
scas
xchg
sbb
sbb
lds
sbb
and
xchg
and
push
add
lret
lret
sti
push
push
jno
enter
fnstsw
sbb
xorl
pop
ljmp
ds
rorb
jne
push
inc
pop
cmp
xchg
add
popa
xor
mov
aaa
in
cwtl
shl
and
mov
jle
cmp
out
int
or
enter
sub
icebp
sub
js
out
mov
dec
mov
inc
sbb
dec
je
xchg
pop
jae
std
aaa
imul
inc
dec
div
xor
cmp
pop
pop
cli
or
das
gs
inc
arpl
jecxz
shrl
sub
bound
leave
push
xor
xchg
sub
negb
ljmp
sub
stc
dec
out
mov
lahf
icebp
fistpl
scas
mov
push
and
movsb
cmp
and
push
imul
mov
fiaddl
pop
jecxz
fisttpll
lahf
cvttps2pi
jmp
in
xchg
rcl
adc
daa
dec
fistpl
mov
push
imul
jecxz
fwait
sbb
test
xchg
add
aaa
fisttps
xchg
cmp
jno
push
lea
cwtl
aas
mov
imul
dec
out
jne
adc
pop
jb
dec
std
jb
enter
dec
jns
stos
pop
jg
out
pop
and
insl
lret
out
and
out
clc
orb
pop
jae
test
dec
popa
loop
loope
into
jge
push
xchg
outsl
xchg
add
das
pop
add
inc
mov
mov
xchg
xor
repnz
test
inc
mov
int
outsl
notb
je
xchg
inc
jg
jne
push
sbb
sbb
jmp
xor
and
mov
or
imul
lods
pop
cmp
fnstsw
or
inc
loop
add
ret
das
movsl
cli
jae
jnp
pop
leave
sub
jno
or
mov
adc
dec
jno
cwtl
addl
cmp
sbb
imul
mov
mov
dec
push
xlat
dec
mov
addr16
scas
jno
push
sub
sub
pop
jb
les
inc
leave
sbb
cmp
and
add
out
ljmp
je
and
mov
sbb
notb
aaa
pop
lods
mov
adc
dec
pop
dec
lcall
ss
push
inc
or
xor
lcall
inc
lods
sub
aaa
push
cltd
repnz
pop
dec
mov
fcoml
hlt
nop
in
ds
sub
jb
dec
xchg
rorb
and
or
das
sub
dec
mov
insb
and
adc
sbbl
mov
sbb
cmova
mov
sbb
pop
or
pop
sub
lahf
push
stos
push
jp
cmp
adc
lahf
je
jns
xchg
pop
imul
push
ret
push
aad
aaa
sub
inc
mov
arpl
out
xlat
rcl
gs
mov
jno
scas
lods
add
mov
adc
pop
cmp
sub
rolb
imul
enter
jecxz
inc
or
jne
das
sarb
rolb
xchg
cmc
inc
ret
es
mov
xchg
inc
ljmp
cld
je
das
es
das
fs
stos
arpl
pop
test
push
sbb
lods
xchg
es
movsl
test
bound
outsb
cmpsl
mov
jne
das
ss
ss
test
mov
out
push
cld
mov
outsl
adc
data16
data16
adc
roll
add
lods
insb
jne
das
jne
push
push
push
jne
das
fstl
xor
sahf
cmp
pop
insl
jne
dec
gs
mov
adc
sub
xor
sbb
pop
mov
inc
inc
out
icebp
femms
psllq
insb
xor
fcmovnb
repnz
mov
js
insl
or
xchg
or
fnstsw
jge
dec
pop
insl
out
adc
testl
movsb
popa
or
pop
xchg
ljmp
push
fwait
mov
addr16
push
lock
outsb
mov
inc
dec
push
pop
sti
cli
sbb
jns
aaa
lcall
dec
ljmp
out
call
nop
cmp
jae
push
faddp
in
dec
push
add
and
nop
adc
cltd
cmp
addr16
xchg
xchg
sbb
xchg
out
mov
xchg
sub
movsb
and
aaa
nop
dec
testl
jno
inc
pop
je
dec
push
imul
jle
mov
aad
aam
je
shl
push
sub
mov
stos
pop
jne
popa
xchg
and
push
push
and
mov
sbb
or
jecxz
mov
es
scas
inc
out
or
inc
lea
jno
pop
add
sub
sbb
cltd
in
xor
sbb
push
jo
inc
inc
mov
cwtl
adc
push
mov
inc
in
rolb
cmp
adc
out
subl
or
cltd
dec
add
fwait
popf
or
mov
sub
inc
jg
and
pop
lock
ret
sbb
stos
imul
das
lcall
aaa
ret
or
das
mov
xor
sub
popf
push
ficoml
sub
inc
repnz
push
imulb
inc
aam
loop
jno
inc
mov
lods
pop
pop
pop
jno
lods
mov
or
jmp
mov
lea
jae
or
pop
insl
pop
das
insb
xchg
rcrb
or
aas
or
xor
adc
adc
or
repz
mov
sbb
pop
sbb
gs
or
das
je
outsb
mov
divb
inc
aam
icebp
mov
push
decb
pop
jno
dec
sub
inc
pushf
xlat
inc
outsl
repnz
pop
jb
adc
dec
out
or
dec
aaa
imul
pop
test
jno
pop
xchg
pop
into
fistpl
mov
ja
lcall
dec
push
aaa
das
inc
add
pop
mov
out
adc
mov
jmp
test
fidivs
sub
aas
int
ljmp
adc
sbb
out
test
dec
shlb
js
pop
pop
out
popf
repz
push
in
push
or
lods
inc
psllq
inc
fdivrs
xor
hlt
loop
dec
mov
push
fwait
push
pop
xor
lea
jne
or
jne
push
pop
add
aad
or
gs
sub
xchg
imul
test
imul
dec
movsl
imul
jg
outsb
push
mov
loopne
ficoms
dec
notb
push
out
sbb
add
xor
push
jno
dec
pop
add
push
mov
mov
jmp
mov
push
insl
out
and
out
xor
and
cmpl
adc
fs
add
stos
mov
das
into
xor
outsl
imul
aaa
mov
lds
jne
xor
mov
sbb
xchg
rcrb
mov
aaa
stos
into
div
xor
nop
xchg
cmp
sbb
dec
sbb
sbbb
inc
ds
pusha
push
jb
dec
pop
sbb
push
add
ljmp
xchg
dec
sbb
int
mov
dec
into
xor
std
sbb
iret
das
push
imul
push
out
test
jb
push
pop
or
and
cltd
aad
dec
push
cmp
movb
inc
sbb
xchg
imul
push
lods
mov
pop
pop
jmp
hlt
out
mov
lds
mov
and
push
outsl
movsl
lods
add
das
push
imul
das
mov
jge
bound
cltd
pop
adc
shl
outsl
outsb
popa
and
jno
sub
lock
xchg
mov
adcl
ljmp
xor
cli
push
daa
in
test
out
adc
xor
sbb
test
or
jne
das
addr16
call
and
mov
add
testb
dec
xchg
xchg
sbb
inc
dec
dec
lods
insl
or
or
inc
aaa
or
imul
fwait
push
push
add
popf
sarl
sub
sbb
push
push
pushf
test
sub
movsl
push
push
lods
mov
pop
adc
in
xchg
push
mov
push
xchg
jbe
inc
fmuls
imul
mov
out
xor
int3
jb
je
loopne
cltd
icebp
fidivrl
cltd
mov
ljmp
sbb
mov
mov
add
or
shrl
jne
pop
pop
test
jno
leave
push
mov
aad
out
add
jb
popa
or
shrb
lahf
mov
test
push
rcpps
je
lock
xor
cli
inc
mov
push
test
insl
mov
pop
test
mov
idiv
addr16
or
push
sub
std
xor
pushf
pop
xor
in
jno
jmp
xchg
add
das
cmp
add
inc
inc
and
mov
ss
stos
pop
sub
or
orb
fisttpll
xor
repnz
pop
or
mov
dec
inc
imul
mov
pop
xor
imul
dec
jecxz
or
lds
aaa
mov
inc
push
mulb
getsec
fwait
cltd
mov
sub
fidivl
dec
insl
cs
xchg
xchg
inc
mov
mov
inc
ss
sbbl
sub
push
sbb
scas
mov
cmp
add
pop
sti
xchg
jge
xchg
pop
xchg
rcll
es
adc
das
je
clc
arpl
or
xor
and
dec
ljmp
mov
inc
aaa
setge
ss
pextrw
xor
popf
pop
subl
lods
lret
add
push
repz
and
xchg
and
pusha
testb
aas
dec
mov
mov
in
xor
pop
mov
movsb
sbb
add
shl
lds
sbb
das
dec
or
add
adc
xchg
pop
outsb
cmp
out
sub
add
mov
mul
sub
mov
pushf
dec
sub
jecxz
jb
jbe
inc
xchg
lahf
sub
inc
lds
fldl
mov
pop
mov
stos
arpl
lcall
push
jno
std
test
inc
jne
xor
jecxz
sub
sub
jno
push
lods
sbb
pop
inc
ljmp
out
mov
jne
das
inc
sbbb
insl
cmp
ss
inc
in
inc
cmc
pop
insl
add
xor
inc
pushf
sbb
aaa
sub
pop
popa
cmp
or
dec
sub
in
xchg
cmp
jnp
movsb
pop
ljmp
inc
sub
aas
aas
mov
xor
bnd
jg
or
mov
sub
out
mov
rolb
inc
mov
sub
dec
pop
jnp
inc
add
aad
xchg
das
jo
add
ficomps
xchg
int3
inc
xchg
adc
repnz
inc
mov
xchg
xchg
ljmp
inc
jbe
inc
outsb
scas
adc
mov
cmpsl
mov
sbb
test
cmp
mov
test
cmpb
shll
mov
stc
out
or
xlat
jno
lods
popa
daa
mov
dec
imul
push
int3
test
clc
jl
lahf
fmuls
sti
dec
popa
pop
mov
imul
repz
inc
sbb
jns
sub
mov
inc
fwait
xor
inc
fdivs
dec
stos
cmp
lods
push
es
ja
mov
push
jno
dec
nop
outsb
sbb
inc
stos
inc
push
push
mov
adc
and
mov
sbb
fcomi
inc
sbb
xchg
jg
loop
ret
sub
pop
scas
popf
adc
add
ljmp
xchg
and
pop
mov
pop
push
insl
sti
xor
negb
dec
dec
dec
dec
pop
adc
nop
adc
insl
cmp
cltd
sub
das
ffree
ds
popf
dec
xorb
das
je
dec
adcl
das
imul
cld
sub
aas
pop
popf
jnp
adc
push
jecxz
dec
fistps
jae
scas
movsb
jg
aas
jno
push
push
mov
inc
mov
js
inc
xchg
sub
ljmp
test
rcrl
lahf
cmp
ret
inc
adc
pop
inc
popa
lea
movsb
imul
dec
inc
inc
or
loopne
cs
inc
add
xor
dec
out
sub
and
jecxz
mov
sbb
adc
or
repnz
pop
push
fldt
mov
xor
nop
sub
aaa
movsl
in
dec
cmp
cmp
fbstp
jbe
dec
inc
xchg
aad
xchg
mov
daa
das
fdivrp
sub
test
aaa
sub
add
jle
lcall
xor
test
rorl
sbb
jno
aaa
push
sbb
shll
daa
adc
repz
dec
cmp
mov
pop
inc
mov
or
xor
jb
nop
add
xchg
or
pop
and
enter
push
xor
lcall
iret
dec
pusha
pop
xchg
mov
push
xchg
jb
movsb
das
pop
ret
mov
cmp
call
lods
dec
pop
sbb
aas
test
sub
imul
adc
loopne
jb
enter
cmpsl
mov
push
cmp
imul
shll
bnd
inc
or
xchg
adc
addr16
int
inc
dec
push
decl
daa
popa
and
aaa
jmp
inc
sub
lea
popa
outsb
mov
out
dec
out
pop
xorb
inc
outsb
mov
xchg
push
push
pop
in
push
ret
adc
loopne
dec
pusha
aas
aaa
add
cwtl
add
cltd
sub
push
cli
lods
jmp
cmp
sbb
das
xlat
adc
or
lods
cmp
jno
mov
bnd
mov
iret
push
out
sub
inc
adc
in
insb
mov
jge
daa
jbe
das
lret
lret
or
xlat
jle
das
pop
mov
ss
jp
cmpb
push
mov
pop
xlat
sub
je
mov
pop
pop
push
jno
lea
inc
cmp
jo
testl
and
xor
repz
xor
loopne
bnd
mov
sub
pop
push
push
insb
inc
repnz
lcall
jmp
outsb
push
movsb
pop
push
insl
lahf
das
xchg
push
mov
and
add
cmp
out
lret
add
xchg
pop
in
ja
insl
dec
cmp
rcr
test
mov
icebp
pop
into
inc
jl
jo
cmp
subl
or
mov
inc
jmp
fldl2t
cmc
mov
add
pop
pop
push
cmp
idivb
ds
dec
out
sbb
and
imul
insl
push
out
and
push
out
push
or
xlat
jb
cmp
leave
test
sub
test
imul
push
in
or
imul
add
movsb
outsb
and
lahf
inc
cwtl
inc
loope
inc
lcall
mov
hlt
icebp
push
cmpsl
inc
xor
adc
or
scas
jb
cmp
jmp
adc
sti
dec
arpl
mov
adc
rolb
das
sub
int3
inc
and
sub
xchg
mov
jae
mov
or
adc
cmp
fnsave
sub
shll
dec
add
scas
mov
xor
adc
cwtl
pop
jno
push
lods
dec
push
cmp
inc
xchg
adc
sbb
sbb
xor
inc
mov
jb
lret
mov
mov
fcmovnu
mov
sub
in
imul
push
mov
pop
movsl
lret
sbb
push
push
xchg
mov
xchg
adc
push
pop
jmp
and
aaa
fldcw
std
or
mov
and
sbb
bnd
aam
sbb
add
jnp
mov
jle
pop
mov
ja
or
xchg
roll
dec
outsl
inc
push
sbb
insb
jmp
insb
jge
sbb
std
adc
scas
add
aad
mov
imul
pop
inc
push
rcll
aas
add
or
lods
xor
xchg
jno
jbe
popa
sbb
insb
add
inc
xor
mov
sbb
fsubs
add
fdivrs
jp
data16
mov
or
subl
sarb
xorps
xlat
jnp
push
xchg
mov
lea
divb
push
dec
je
jb
push
sub
ss
push
or
aam
xchg
mov
xchg
std
push
lret
aad
sub
fwait
or
cmp
push
add
mov
pop
fs
popf
insb
les
push
adc
int3
and
gs
or
jnp
and
pop
add
push
rcrb
or
add
adc
das
stc
xchg
ljmp
mov
jl
sbb
pop
jb
xchg
jbe
xor
imul
xchg
jo
push
fstpt
repnz
into
subb
sub
dec
adc
lahf
ret
jp
sub
mov
dec
je
xor
addr16
lock
imul
inc
or
shll
mov
mov
jno
adc
jns
or
push
and
push
sub
or
mov
xor
adc
pushf
stos
cli
cmp
mov
push
pop
push
sub
dec
xchg
aaa
cmp
mov
fidivrl
lea
push
mov
fnstsw
insb
add
pop
testl
pop
add
jb
pop
ja
push
repz
sub
addb
xchg
and
lods
data16
add
sti
popa
jecxz
jne
pop
jnp
push
cmp
stos
stos
dec
adc
loop
xor
xor
xor
mov
sub
pop
sub
xchg
or
jnp
mov
in
aad
cmpsl
push
arpl
pop
daa
test
mov
roll
popf
divl
adc
int3
and
lods
lods
cmp
ljmp
les
cmpsl
inc
aad
jb
adc
movsl
mov
popf
jl
mov
dec
add
ret
loop
and
mov
and
out
sbb
aad
rorl
pop
loopne
push
test
push
popf
sub
mov
or
test
push
cmp
pop
cmp
xor
sub
push
imul
add
insb
xlat
lahf
out
ret
mov
repz
add
lret
xor
sbb
sub
and
xchg
out
rorl
sahf
ja
or
ret
lahf
aaa
sbb
stc
lods
or
out
pop
sub
sbb
subb
cmpsl
push
je
stc
in
lret
mov
lods
xor
pop
adc
or
cld
and
sub
imul
sbb
popa
gs
fcomi
jg
push
lods
adc
hlt
pop
push
pop
or
mov
add
pop
aad
push
mov
mov
dec
mov
push
lea
add
fxch
les
jl
inc
call
cltd
mov
int3
xor
inc
insl
sbbb
sbb
imul
inc
lret
inc
dec
dec
dec
cmpsb
daa
add
adcl
jl
jne
leave
popa
push
dec
scas
int
bound
stos
mov
movsl
add
imul
insb
xchg
mov
pop
xorl
mov
out
xorb
cld
sub
insl
nop
vpaddsb
outsl
loopne
and
pop
scas
pop
xor
ljmp
mov
cmp
dec
cld
in
insl
ficoml
dec
stos
adc
leave
pushf
in
jae
mov
ror
jne
add
add
adcb
jnp
dec
jmp
mov
push
imul
lcall
aam
mov
shl
fildll
stos
push
std
mov
jle
movsl
imul
fs
adc
xchg
cmpsb
adc
sbb
ss
test
aam
faddl
xchg
and
mov
jl
and
aad
mov
movsb
xchg
jnp
insb
ret
dec
mov
hlt
pop
jno
out
dec
xlat
mov
mov
int
into
scas
out
scas
cmp
push
adc
fmull
push
jne
iret
jle
sub
mov
mov
cwtl
xor
push
in
insb
nop
cmc
ret
adc
lahf
cmp
or
shrl
xchg
sbb
fstpl
jns
stos
sub
xor
mov
push
int
xlat
cs
push
cltd
push
lock
xchg
cmp
cmp
add
bound
sub
mov
dec
jno
mov
mov
in
or
lahf
sbb
xchg
mov
mov
sub
insl
mov
adc
out
jne
stos
mov
mov
pushf
jecxz
xchg
pop
repnz
push
inc
int3
sbb
outsb
inc
push
xchg
dec
mov
icebp
cwtl
lods
xor
or
or
lret
dec
cmpl
leave
cmc
les
aas
sahf
mov
xor
cli
ficompl
adc
aaa
pop
mov
adc
lds
cld
cmpsl
pop
pop
jg
pop
imul
mov
mov
mov
stos
lcall
push
aam
daa
mov
cli
xchg
xor
popf
add
scas
gs
movb
cmp
fidivrl
fbld
sbb
cmp
fdivrl
mov
push
scas
lods
es
jecxz
int
adc
aam
addb
adc
dec
mov
add
add
inc
fwait
dec
mov
dec
jns
adc
mov
stos
rep
nop
or
xor
cmpsl
mov
add
mov
fildl
push
mov
push
aaa
dec
jns
fcoms
mov
mov
ja
out
clc
or
or
jl
sbb
and
push
in
in
inc
cmp
nop
lds
inc
fldcw
cmp
sbb
fs
push
dec
mov
inc
stos
mov
dec
and
mov
sbb
add
out
test
inc
sbb
push
push
jo
adc
in
int
arpl
les
sbb
bound
aaa
jge
fs
xor
ret
ror
jle
sbb
cmpsl
je
dec
outsb
sbbl
add
mov
and
jl
sub
in
jo
les
lahf
pusha
or
scas
popa
and
orb
idivl
push
adc
dec
xchg
leave
leave
jb
add
roll
or
or
arpl
jp
pop
fucomp
int3
lahf
test
xchg
add
inc
cmp
outsb
fistl
jno
std
popf
popf
dec
iret
mov
jbe
mov
add
outsl
jnp
in
cld
or
clc
sub
jp
jb
std
cmp
push
sub
ja
mov
push
scas
sub
int3
mov
les
lods
or
xor
and
mov
test
mov
lret
sbb
sahf
push
push
mov
mov
mov
cmc
repz
insb
xchg
das
jae
sbb
fwait
xor
call
shll
pop
sub
enter
orl
xor
mov
push
scas
pop
sbb
xor
add
mov
pusha
jne
fistpl
out
jno
pop
clc
add
jae,pt
sbb
ljmp
scas
dec
sbb
shrb
add
ljmp
stc
push
or
mov
rcrb
add
ljmp
xlat
insl
jns
mov
pop
je
mov
and
cwtl
push
sub
pop
cmp
mov
imul
divb
xor
mov
jge
loope
push
aam
loope
lods
jno
inc
repnz
loop
outsb
outsb
jnp
mov
inc
lcall
and
and
mov
sub
das
out
sbb
dec
and
shll
mov
cmp
cmpsl
jno
lds
inc
and
int3
cmp
jae
pop
shll
repz
pop
insb
mov
sub
mov
inc
inc
sub
sbb
or
jo
pop
fimuls
and
imul
ret
inc
leave
ljmp
mov
test
aad
insl
daa
inc
pop
push
addr16
mov
aad
cmpsl
jno
loop
pop
inc
xchg
pop
out
xchg
fwait
int3
xor
add
push
pop
cmc
mov
icebp
jp
mov
xor
fidivs
cmp
xor
or
repz
push
add
dec
lds
or
push
popa
imull
adc
jecxz
dec
daa
jb
jne
cld
xchg
push
imul
xchg
push
popa
sti
pop
or
jbe
add
jecxz
fsub
pusha
xor
enter
lret
fdivl
fisubs
mov
mov
insb
add
mov
xchg
scas
dec
jb
cmpsb
push
shll
mov
push
add
aam
adcb
push
repz
lods
in
popa
fcmove
sarb
adcb
jl
add
es
mov
mov
mov
inc
push
dec
jae
cmp
cmc
sbb
xor
mov
sbbb
lods
out
in
shrb
rep
imul
int
test
insb
adc
cmp
adc
adc
out
movsl
adc
jns
xchg
sahf
daa
mov
xchg
dec
ss
jno
inc
das
popf
jg
push
nop
push
fwait
jno
pop
lods
dec
inc
inc
xchg
movsb
sub
mov
jno
rcll
das
divb
cmp
sub
in
pop
mov
mov
cmp
xchg
push
dec
or
sbb
pop
cld
push
jno
push
sbb
push
jmp
aad
xor
loope
das
stos
push
adc
pop
leave
add
lahf
aaa
sbb
aaa
das
mov
mov
insb
repnz
negb
push
jo
and
push
pop
aas
xor
int
arpl
adcl
into
sub
adc
jbe
xor
data16
mov
jp
adc
rclb
outsb
mov
cmp
mov
jg
shlb
xchg
dec
mov
pop
or
pop
or
xchg
enter
adc
pop
xor
cli
testl
cmp
xchg
ret
push
fildl
imul
fnstsw
addb
roll
push
push
and
or
pop
or
mov
push
sub
xchg
mov
dec
int3
cmpsl
pop
cmpsl
gs
pop
in
mov
inc
mov
and
jno
pop
test
loope
neg
and
mov
pushf
dec
xor
scas
xchg
pop
inc
dec
imul
xor
lods
rolb
xchg
cmp
pop
push
jno
in
cmpsb
push
mov
jns
dec
jno
es
nop
xor
int3
xorl
popf
xchg
xor
lods
mov
fiaddl
sti
push
inc
adc
cmpsl
push
pop
in
xchg
lds
add
pop
jmp
sub
or
push
out
sti
xor
in
hlt
lods
pop
pop
jg
sub
mov
adc
fxch
xor
inc
pop
push
mov
in
fsubs
out
jo
je
sub
mov
sbb
or
in
xchg
push
addr16
or
push
jge
add
jbe
loope
addr16
pop
mov
nop
jge
pop
mov
inc
insb
loop
inc
cmp
inc
gs
push
push
mov
jle
lret
xchg
inc
test
inc
lods
add
out
scas
inc
pop
bound
das
and
ja
mov
arpl
dec
dec
fstl
lock
add
cli
or
jmp
xchg
cmp
and
mov
pop
cmp
ret
xchg
inc
je
test
push
cld
adc
repnz
mov
pop
cmp
pop
test
lods
ja
loope
adc
push
lods
cmp
cmp
dec
jns
ljmp
jae
adc
push
jno
popa
sub
in
leave
pop
xchg
mov
cmp
xchg
xor
sbb
aas
outsl
sbb
out
jmp
or
test
push
ficompl
xchg
imul
daa
repnz
rorb
or
neg
sbb
jne
aaa
clc
cmp
push
xor
mov
push
aaa
pop
jne
mov
jp
mov
xorb
repz
movsb
mov
jge
xor
scas
push
cs
mov
dec
or
clc
pop
fs
add
decb
jae
psubsb
adc
sbb
push
test
js
lock
inc
lds
push
or
into
or
mov
xchg
jmp
sbb
or
ss
xchg
pusha
jg
fucom
pop
jge
adc
add
dec
fists
or
movb
dec
add
cmp
dec
lock
push
push
fldl
cmp
add
fildl
jecxz
push
lock
jae
imul
cmp
cmp
xor
jbe
push
rcrl
push
scas
pop
outsb
push
mov
cmpsl
inc
rcll
add
ss
lea
clc
add
sub
lret
and
js
mov
mov
imul
roll
movd
inc
daa
fmul
add
leave
mov
sub
jno
cmp
inc
push
loop
incl
xchg
lcall
mov
mov
mov
pop
push
arpl
pop
fsubl
mov
out
insl
add
shrl
or
push
and
inc
inc
lea
rcrl
lods
sbb
fiadds
mov
jno
lock
xchg
out
rclb
call
or
jne
je
imul
shlb
fisttpll
hlt
nop
inc
and
daa
cmc
mov
sbb
dec
inc
fcmovnb
cmp
ret
jge
and
shrb
sub
or
push
jge
sub
imul
pop
adc
cmpsb
push
mov
ss
xor
and
push
xor
cmp
mov
add
push
repnz
std
jecxz
xchg
cwtl
mov
mov
adc
lea
sub
fsubr
mov
dec
xor
les
ret
repnz
in
aad
gs
lods
outsl
mov
leave
ret
inc
push
lock
mov
pop
imul
dec
cmp
mov
cmp
hlt
sbb
sbb
push
bound
pop
push
adcb
cld
inc
adc
inc
sahf
fsubrs
clc
not
and
btc
jo
push
or
or
stos
dec
ljmp
inc
sub
filds
jecxz
clc
or
pop
out
add
outsb
dec
imul
xor
push
scas
repz
insl
xchg
inc
mov
mov
inc
arpl
sti
pop
cmc
mov
jne
rcrl
shrb
out
add
adc
fs
push
pusha
cmp
mov
jmp
clc
xchg
in
cmp
stc
push
xchg
cli
pop
mov
lahf
or
iret
xor
shl
pop
stos
add
repnz
aaa
outsb
sarl
xor
push
popa
imul
push
shll
negl
stos
jb
cwtl
fucomi
and
pushf
jne
imul
dec
mov
push
das
pop
push
push
push
out
outsl
in
xor
mov
rcl
cmc
xchg
pop
fwait
cli
pop
mov
push
std
test
or
lods
dec
int3
inc
adc
loopne
xchg
jmp
pop
xchg
add
cmp
cmp
push
push
out
addr16
push
and
push
or
dec
fs
dec
or
jge
loopne
arpl
std
push
pop
nop
pop
pushf
loopne
xchg
js
std
stos
rcll
jne
push
imul
adcb
xor
sbb
mov
sbb
xor
ljmp
pop
sub
pop
mov
jge
mov
sub
movb
xor
fldcw
sbb
hlt
xchg
and
cmp
mov
aad
push
add
loope
dec
pusha
lods
jo
mov
gs
inc
sub
inc
inc
mov
sarb
cwtl
arpl
out
in
cmp
rcrb
sbb
stc
inc
lds
xor
push
pop
loopne
jg
dec
push
ljmp
jne
nopl
mov
pop
adc
sub
mov
mov
lea
inc
pusha
push
sbb
or
std
dec
mov
pop
lods
inc
xor
lahf
push
add
fwait
jo
out
cmp
les
imul
test
xchg
lds
in
and
sub
cwtl
add
aas
pop
adc
jae
sub
orl
push
adc
bound
cmp
les
loop
movsb
mov
jnp
jmp
adc
jle
shrl
bound
xlat
enter
in
dec
ljmp
daa
shr
inc
insb
in
fisttpl
paddq
adc
cmpsl
inc
push
lods
inc
ret
fstp
mov
lcall
std
sbb
out
popa
imul
mov
jp
orl
pop
sub
jge
lret
faddl
adc
sub
out
test
pop
xor
sub
pop
inc
xor
push
add
mov
lea
lret
inc
lcall
in
in
sub
inc
push
sub
push
xchg
rcrb
loope
stos
out
xor
inc
mov
push
stos
in
mov
aad
xor
je
sbb
repz
mov
shlb
dec
push
out
imul
idivb
pop
in
dec
pop
mov
adc
xor
cwtl
and
jb
nop
jmp
pop
lahf
lods
out
scas
insb
rclb
lods
ret
dec
shlb
xor
sbb
loope
imul
pusha
push
aaa
inc
xlat
add
xorb
push
aam
xchg
jg
sub
lea
jb
dec
clc
inc
ljmp
icebp
lea
mov
notl
cmp
pop
fucom
inc
pop
dec
pop
adc
fnstcw
dec
xchg
add
fs
jge
mov
scas
in
es
jecxz
not
daa
out
xchg
or
mov
pop
inc
dec
fisttps
insb
int
xor
or
mov
and
dec
mov
cli
jecxz
nop
sbb
jb
dec
paddd
pop
add
pop
sub
sbb
sub
adc
testl
jno
push
push
xchg
dec
out
loope
or
cltd
mov
lea
sbbl
fists
inc
rcr
adc
cmp
sbb
std
cs
xchg
or
bound
or
xorl
adc
movsb
push
in
cmp
cmp
sbb
stos
stc
int3
insb
pop
movsl
jb
mulb
dec
push
cmp
insl
xor
push
das
imul
xor
je
popa
ds
imul
sbb
add
movsl
or
jle
into
sub
or
inc
jo
jg
sub
dec
dec
dec
imul
xor
test
jae
inc
add
add
pop
and
sbb
mov
jbe
and
dec
mov
mov
xchg
inc
push
nop
push
daa
hlt
shrl
fisubrl
test
in
ljmp
jge
mov
jl
mov
sahf
lock
push
lock
push
lds
out
inc
dec
push
pop
adc
js
out
jp
pop
xchg
mov
adc
hlt
mov
inc
cltd
idiv
mov
in
pop
xor
std
and
mov
jb
out
clc
sub
hlt
lea
mov
adc
jp
jae
adc
sub
cli
xchg
and
or
andb
pop
push
addr16
mov
xlat
sub
and
cmp
pop
push
mov
pop
mov
inc
movsb
adc
fsubrs
roll
arpl
pop
jbe
adc
stc
pop
jb
xchg
mov
xchg
enter
out
test
cwtl
sub
cmpsl
pop
insb
daa
popf
jp
pop
fdivl
rcr
push
pop
pop
push
loop
or
xchg
xchg
sbb
pop
pop
pop
sti
ljmp
mov
outsl
pop
out
std
pop
or
push
jnp
cmovns
inc
lret
jp
mov
and
mov
jnp
int
mov
add
xor
inc
inc
mov
and
js
jmp
push
sar
insl
or
inc
ljmp
loop,pt
inc
gs
inc
repz
arpl
mov
out
fsubl
out
lock
xor
lock
cmc
sub
inc
aaa
fucompp
sbb
cmp
imul
xor
mov
arpl
gs
mov
les
push
adc
sbb
popa
add
ficoml
add
pop
es
sub
jbe
stos
loop
dec
inc
aaa
mov
std
inc
arpl
js
jecxz
jnp
sarb
push
or
jo
or
and
or
push
and
pop
sbb
sahf
sti
sub
fbstp
pop
ss
cmpsb
popa
cltd
test
cmpsl
shlw
pop
or
cmpsb
add
in
xor
cmp
arpl
insb
test
xor
or
sbb
jbe
mov
xchg
js
adc
jmp
cltd
adc
sbb
xor
push
inc
std
dec
pop
and
popa
sbb
and
imul
gs
and
inc
aas
das
ljmp
ss
push
dec
out
je
lret
imul
ja
dec
pop
and
cs
dec
out
cmp
call
daa
mov
jg
mov
int
cmpsb
negb
adc
mov
les
out
fmuls
mov
fbld
xchg
jne
sub
adc
mov
jo
ret
out
jae
pop
out
jo
fisubrl
fucomip
mov
ret
mov
mov
cmp
je
sbb
in
xlat
pop
in
adc
add
mov
icebp
xor
mov
mov
add
loope
out
pop
movsl
sbb
sahf
push
inc
sub
add
xlat
out
sub
push
pop
das
outsl
cs
ja
lahf
mov
arpl
cltd
push
or
popf
lods
push
into
add
cltd
lds
pop
pop
jle
outsl
push
fcomi
pop
pusha
push
ds
cs
jp
loop
jmp
aas
adc
aad
gs
pop
xlat
cmovno
rcl
sub
or
mov
stos
jmp
xchg
inc
ret
dec
mov
dec
mov
ffree
out
test
add
sub
cs
cmp
pop
outsl
push
xchg
push
and
ja
int3
cs
sub
divl
dec
pop
sub
in
sti
xor
add
loop
bound
aaa
scas
mov
inc
mov
call
dec
out
pushf
cmp
mull
pop
xchg
cltd
jmp
push
pop
push
xlat
pusha
int3
and
sbb
push
mull
negl
out
cmpsl
out
xorb
push
cli
mov
stc
cmp
movsw
inc
sahf
in
sub
lcall
mov
loope
cltd
fxch
jle
adc
inc
cld
jb,pt
inc
push
stos
or
mov
mov
jns
mov
scas
cmp
sbb
mov
or
jp
jp
jae
imul
sbb
xchg
repnz
xor
mov
cmp
jmp
mov
cmc
ds
cmp
mov
shr
mov
pop
ret
pop
ljmp
adc
mov
loop
fidivrs
fbld
daa
pop
cmc
bound
test
jge
mov
lods
cld
cltd
rol
and
mov
pop
mov
cli
jle
push
imul
ret
jnp
sub
add
jge
daa
add
scas
divb
jl
fbld
fdivs
or
hlt
rcrb
lds
mov
div
pop
shll
bound
cmp
mov
dec
xchg
jp
and
ror
push
dec
push
ret
ljmp
jns
inc
jp
and
push
popf
lods
or
xor
jmp
imul
ret
je
or
ljmp
push
inc
inc
in
insb
bound
in
xor
mov
push
inc
fs
jne
lods
imull
enter
ret
sub
or
jmp
jnp
fdivrl
inc
cltd
add
sub
pop
popf
jmp
mull
sub
inc
test
jmp
sub
insb
cmpsb
ret
stc
scas
sbb
mov
inc
je
das
inc
pop
movsl
mov
scas
outsb
sti
jbe
or
les
sub
mov
jecxz
mov
cld
rolb
push
loop
sub
outsb
outsb
and
jp
out
mov
loopne
fwait
cmp
mov
out
push
jo
sbb
lret
mov
adc
cmpl
xchg
pop
add
out
scas
movsb
les
ret
movsb
fsubl
insb
loopne
aaa
idiv
and
inc
out
cmpsl
lret
mov
and
fisttps
cmp
cmp
inc
movl
mov
lret
cwtl
dec
mov
cwtl
mov
pop
aas
sbb
mov
cmp
pop
inc
jne
dec
push
or
cwtl
sahf
outsb
ficomps
sub
add
adc
mov
aas
roll
add
push
add
add
push
add
roll
add
add
add
add
add
add
add
add
add
roll
add
add
add
roll
add
add
add
addb
add
in
rolb
add
rolb
add
rolb
add
push
add
push
add
push
add
roll
add
push
add
roll
add
push
add
roll
add
push
add
push
add
add
jb
gs
xor
cs
insb
add
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
imul
insb
add
gs
insb
xor
cs
insb
add
xor
xor
fs
insb
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
je
jb
arpl
fs
jae
add
add
imul
jae
add
dec
outsl
popa
fs
imul
add
add
jae
popa
addr16
outsl
js
add
add
addr16
insb
outsl
jae
dec
gs
add
push
jns
inc
jb
gs
je
imul
jb
popa
je
inc
outsl
outsb
je
add
add
gs
insb
inc
js
arpl
gs
add
add
xor
aas
adc
xor
sub
cmp
add
mov
or
fisubl
out
inc
push
xchg
inc
pop
add
loopne
andl
adc
inc
shlb
xchg
dec
adc
pop
rcrl
sbb
xchg
and
add
mov
mov
and
and
dec
dec
adc
mov
xor
shrl
adc
or
jno
das
cmpsb
cmp
adc
sub
sahf
loopne
lret
mov
mov
jo
bound
push
add
push
pop
cltd
gs
add
stos
test
cmp
test
jns
inc
inc
mov
jo
inc
xchg
aaa
int3
inc
sbb
test
push
mov
mov
sub
or
push
jp
add
cwtl
mov
adc
jmp
repnz
out
cwtl
jns
mov
pop
test
jb
dec
lock
les
das
or
cmp
int3
jns
mov
or
lods
push
push
bound
push
outsb
adc
add
adc
dec
add
add
add
pop
test
imul
xorb
dec
add
in
xor
hlt
fnstsw
dec
add
test
in
cmp
pop
add
jl
sbb
or
ret
ficomps
mov
mov
aam
orb
mov
sub
lds
out
nop
cmp
repnz
sub
xor
loopne
lods
mov
and
inc
call
test
fst
fsubrp
xchg
adcl
mov
cmpsl
pop
sarb
xor
pop
syscall
movsl
mov
test
inc
std
rorb
adc
mov
aaa
xlat
sub
and
push
add
cmp
adc
ss
in
adc
inc
fdivrl
add
popa
popf
pop
cmpsl
adc
cmpb
push
fistpl
push
pusha
add
jmp
push
and
inc
and
or
and
push
lock
xor
or
or
jo
out
mov
aas
add
xor
fcomps
sbb
sub
or
nop
movsl
and
shlb
add
dec
fdiv
lcall
add
shl
push
mov
scas
xor
enter
mov
push
mov
adc
dec
cmpb
and
aam
inc
pop
hlt
mov
or
cmpsl
pusha
mov
sarl
test
scas
jns
lcall
jb
lea
pop
or
xchg
ret
sbb
jle
and
shrb
or
or
sub
adc
adc
xchg
and
and
test
inc
pop
inc
inc
pusha
inc
fs
xor
pop
jo
inc
js
fs
jl
dec
jle
cmp
add
orl
addb
out
and
test
cmp
mov
shlb
or
push
cmpsl
and
and
xor
sub
mov
push
or
mov
aad
sub
inc
adc
xchg
dec
and
icebp
loope
and
into
sar
push
sarb
xchg
adc
sub
push
in
in
adc
ljmp
jns
mov
nop
testb
pop
mov
aas
or
inc
add
and
inc
add
sbb
out
in
aaa
or
dec
mov
popa
ds
inc
adc
mov
or
sbb
sbb
xor
push
dec
sub
sahf
add
adc
pop
or
cmp
xchg
ss
int3
push
add
adc
lahf
cmp
add
sbb
out
ja,pt
dec
pextrw
cmp
fimull
test
stos
adc
xchg
and
sub
roll
xchg
pop
or
adc
pop
inc
in
mov
mov
mov
mov
add
arpl
and
ljmp
adc
adc
aaa
adc
sbb
adc
sub
cmp
insb
pop
add
bound
lds
lcall
jo
js
adc
je
cmp
ds
mov
push
inc
jle
inc
orb
inc
movsl
cmp
aaa
inc
test
mov
or
enter
cwtl
leave
enter
int3
sbb
or
enter
pop
jmp
clc
or
cli
or
test
int
jnp
or
mov
lret
mov
or
or
adc
and
adc
adc
aas
push
adc
sbb
add
push
sbb
outsb
and
outsl
and
out
and
data16
int
add
je
add
add
loopne
dec
enter
rcrb
or
sbb
add
jnp
sbb
push
jb
and
inc
mov
inc
call
jno
loopne
mov
push
or
cmp
pop
or
xor
cli
push
imul
mov
test
add
or
push
ljmp
repnz
xor
sub
add
mov
or
popf
add
lahf
add
movsb
add
test
and
mov
cmp
ja
or
cmpsb
xlat
or
aas
add
add
add
jg
pop
inc
rcrb
inc
aas
xor
in
xor
sub
mov
or
adc
ja
mov
int
repnz
into
mov
cwtl
add
pop
xor
lods
outsb
stc
jb
outsl
add
jns
push
mov
xchg
daa
or
push
cmpsb
movsl
sahf
mov
adc
popf
push
mov
adc
fstpt
add
pop
int
and
leave
add
mov
pop
add
jb
push
jae
push
je
cmp
pop
movb
sbb
mov
xchg
roll
and
pop
add
cmc
mov
pushf
cmp
in
dec
loopne
pop
xor
dec
nop
lret
or
xor
out
lods
or
add
cmp
call
orb
jbe
add
xchg
aas
testl
loope
inc
jne
inc
jp
jl
punpckhwd
add
add
lea
stc
adc
lret
in
adc
adc
sahf
inc
call
mov
mov
xor
inc
movl
jmp
ret
pop
cli
add
add
mov
mov
xchg
sahf
and
adc
adc
mov
push
inc
sbb
inc
sbb
sbb
inc
and
fildl
fadds
adc
xor
or
jbe
or
ja
sub
mov
enter
loope
or
ret
fld
sub
sbbb
adc
add
cmpl
mov
cmpsl
xor
push
pusha
push
sahf
test
ret
sbb
out
adc
je
and
inc
jge
mov
add
sub
xchg
cmpsb
adc
stc
and
dec
adc
xchg
andb
inc
lret
or
mov
adc
push
loopne
aad
dec
xchg
mov
inc
adc
repnz
and
jo
aaa
test
mov
orb
pusha
push
adc
inc
fcoml
or
in
orl
add
and
inc
sahf
dec
push
mov
das
ja
or
add
aam
fisttps
out
add
mov
mov
cmp
pop
cld
add
fidivrs
lds
mov
js
sub
aam
adc
jae
cmp
cs
add
add
xor
add
cmc
mov
sub
fmull
gs
add
xchg
sbb
jmp
ljmp
stc
or
add
repz
sbb
scas
in
mov
hlt
fs
mov
iret
add
or
cs
nop
push
xchg
iret
adc
and
cmpsb
test
add
xchg
pop
rcrb
sub
lods
cmp
xchg
sbb
fwait
pop
and
push
and
ja
adc
push
out
add
or
adc
push
xor
daa
fnstcw
add
repnz
add
aaa
jle
or
cmp
addb
add
inc
pushl
mov
pop
jns
adc
lods
addl
es
jbe
movsb
dec
daa
cmp
add
add
nop
fiadds
imull
mov
push
mov
mov
inc
out
mov
dec
mov
les
das
testl
scas
cmp
add
mov
out
pop
icebp
ficompl
jo
and
inc
xor
xchg
push
movb
jnp
scas
mov
andl
jo
push
push
push
pop
mov
push
mov
add
out
sti
lret
adc
xor
fsts
or
dec
fsubl
loopne
lret
push
rclb
psubq
mov
sbb
sbb
cwtl
mov
push
pushf
mov
mov
lahf
fildl
or
pop
test
adc
nop
and
nop
add
mov
enter
lcall
insl
mov
lcall
popf
daa
or
cmc
imul
jge
mov
push
fldenv
push
add
lea
gs
dec
xor
pop
shll
enter
xorb
sbb
dec
mov
lahf
data16
fldenv
arpl
and
test
xchg
sahf
mov
sub
or
add
movsl
sub
sbb
loopne
leave
xor
or
adc
push
lods
jmp
js
ret
imul
daa
xor
movsb
movsl
mov
lock
pop
stos
or
enter
add
cmp
add
lock
lods
cmpsl
aas
add
add
and
ds
in
test
cwtl
xchg
xor
jnp
cmpsl
push
or
stc
xor
pop
xor
xor
ror
ret
loope
or
test
icebp
mov
add
mov
mov
ret
mov
xor
cwtl
pop
xor
aas
sbb
lret
inc
loope
sbbb
insl
adc
adc
dec
enter
dec
daa
int3
or
jmp
or
int3
incb
dec
mov
push
int3
enter
inc
adc
push
jns
cmp
jbe
aam
and
inc
sti
and
mov
cmp
es
adc
or
xchg
sbb
xor
pop
repnz
int3
hlt
lea
leave
dec
sbb
jg
dec
xorl
andb
adc
adc
dec
mov
cmp
push
cmp
and
add
mov
xchg
inc
jo
gs
add
add
jne
in
mov
inc
clc
jmp
mov
or
sub
cmp
ds
xor
out
add
aad
add
pop
movsb
inc
mov
cwtl
or
lea
mov
and
loop
test
daa
lock
dec
inc
enter
jbe
fisubrl
adcb
pop
add
pop
jns
inc
xlat
sbb
lock
test
inc
mov
dec
add
cmpsl
dec
add
or
cld
dec
adcb
push
jo
fisttpl
push
dec
xchg
or
out
lea
mov
outsl
or
mov
leave
mov
sbb
inc
cmp
repnz
out
dec
scas
stos
sbb
lret
loop
test
inc
xchg
lea
push
or
mov
mov
scas
inc
cmc
cwtl
imul
cld
testb
push
or
add
stos
js
push
out
add
mov
imul
sub
cmp
ljmp
xchg
push
add
sub
xchg
les
flds
out
or
push
dec
pop
insb
add
sub
sub
movsb
fbstp
in
or
aas
sub
dec
test
jnp
and
pusha
cmp
xor
stos
add
je
aaa
repnz
lods
xor
cmp
add
sarb
mov
add
push
inc
daa
push
pop
pop
add
mov
xor
fidivl
div
sub
ljmp
stc
dec
pop
mov
xorb
std
sbb
push
push
shlb
inc
xor
stc
sub
mov
sbb
adc
or
add
mov
sub
int
and
and
cwtl
and
cltd
je
mov
add
xchg
or
jns
clc
inc
xchg
push
mov
out
inc
push
icebp
fwait
inc
or
add
loope
mov
xchg
sub
mov
push
movsl
mov
pop
adc
xchg
lds
sbb
mov
sbb
dec
jl
and
and
mov
pop
lcall
push
jecxz
mov
push
inc
xor
add
lret
mov
imulb
jle
out
gs
mov
and
inc
add
mov
and
pop
jp
dec
aaa
xor
or
aaa
ret
adc
and
mov
add
out
push
cltd
adc
inc
xchg
in
add
mov
dec
iret
cmp
add
mov
cmp
lock
adc
cli
lods
dec
idiv
int
adcl
pop
loop
mov
lea
add
incl
rolb
jo
rolb
out
les
shl
setb
or
xor
pop
pop
not
cli
or
sbb
mov
pop
dec
xor
add
in
jge
out
push
leave
or
add
mov
push
xchg
add
mov
adc
cld
pop
mov
adcb
mov
cld
mov
push
jmp
and
test
call
stc
push
mov
sbb
pop
pop
setae
xor
adc
or
daa
xchg
inc
push
inc
push
pushf
cmp
sahf
jmp
cmp
cmpsb
add
out
call
mov
bswap
dec
adcl
mov
ss
mov
imul
sub
hlt
fwait
xorb
shl
push
xor
mov
testb
jbe
in
and
addl
addl
dec
bswap
not
dec
test
lock
into
outsl
xor
push
cli
jns
repnz
adc
push
sbb
pop
xchg
fs
dec
jmp
dec
movlps
inc
jbe
push
test
adc
dec
ljmp
dec
mov
pop
or
xor
popa
lock
inc
mov
jbe
addl
pusha
adc
sub
push
or
lret
enter
fnstenv
cwtl
xchg
dec
add
mov
pop
sub
fistl
mov
movzwl
cwtl
mov
cmc
aad
xchg
mov
icebp
out
call
data16
push
pop
pop
inc
jecxz
jnp
bound
loope
stos
jno
push
rcl
adc
neg
or
xor
inc
adc
add
stos
dec
push
pop
pop
or
mov
orb
inc
or
ret
es
sbb
in
call
dec
add
push
pop
pop
pop
addl
sbb
popa
cmp
test
fidivl
push
and
push
mov
or
xchg
fadd
cs
fs
adc
xchg
push
ja
xor
add
divb
mov
fists
inc
movswl
cmc
add
push
adc
ficoms
pop
pop
rclb
addb
xor
in
dec
dec
bswap
cwtl
fldcw
push
jbe
add
sub
sarb
adc
cmp
add
stos
stc
sub
notl
test
jmp
adc
lds
inc
in
and
xor
dec
pusha
or
sub
push
add
mov
dec
jp
jb
int
adc
negb
stc
nop
xchg
sbb
faddl
jecxz
xlat
add
sub
insb
cmovl
rolb
xor
push
test
je
ret
fwait
mov
sbb
pusha
fidivrl
sub
and
or
shlb
pusha
pop
push
cmp
sub
jmp
int
mov
push
xor
adc
add
inc
pop
dec
jl
inc
bound
or
or
mov
shlb
push
enter
adc
xchg
fdivs
pop
sub
cmpb
sub
add
inc
adc
inc
pusha
iret
and
sub
fs
inc
je
add
dec
mov
or
push
pop
pop
ds
aas
xchg
pusha
xor
int3
push
ds
mov
popa
push
push
mov
jmp
cmp
pop
mov
cmp
push
rcrl
or
and
fwait
adc
cmc
xor
mov
add
xor
add
cwtl
add
mov
xor
les
cs
shrb
and
xchg
and
cmp
mov
sbb
movsb
or
jne
cmp
std
mov
and
arpl
push
add
jp
push
add
int3
push
push
loop
int
push
or
mov
sbb
sbb
adc
dec
mov
inc
bound
mov
cltd
fstps
or
les
pushf
lret
cmpxchg
fadd
ret
push
ret
out
repz
loop
mov
pop
imul
xor
xchg
aas
mov
pusha
mov
and
or
sti
cmp
cvtpi2ps
or
xchg
clc
lcall
sbbb
decl
sub
sbb
push
test
pop
cmpsb
xchg
jae
mov
ret
icebp
clc
test
pusha
mov
add
adc
and
fldl
stc
in
xchg
jns,pn
cmp
icebp
pusha
pop
int3
lgs
mov
gs
scas
push
loopne
out
out
cmpsb
dec
add
stos
xor
adc
int3
ljmp
aad
jb
add
pop
mov
mov
or
pop
mov
aaa
pop
cmp
mov
add
push
cmpsb
movl
jg
stos
mov
mov
or
pop
add
push
sub
inc
add
daa
xchg
jnp
push
adc
cmpb
pusha
ret
cmp
xchg
pop
sbbb
neg
ret
mov
inc
inc
jg
sbb
and
add
int3
mov
xor
incb
pop
pop
sub
loope
into
jae
add
or
pop
cmpb
cmpsb
enter
not
or
mov
popa
lret
jno
mov
out
adc
enter
mov
sbb
mov
or
add
dec
not
dec
ljmp
test
in
add
ret
cmpb
and
adc
sub
pop
push
sbb
ret
cwtl
cmovp
jb
shll
push
add
inc
fcoms
pop
ficomps
mull
mov
insb
iret
dec
cmp
cmpb
cwtl
stos
sub
add
int
push
pop
pop
inc
cmpsb
mov
out
adc
sub
out
cmp
xchg
arpl
push
and
pop
adc
and
repz
fcomps
leave
sbb
movsl
lahf
test
shrl
sahf
inc
mov
shr
xlat
inc
push
popa
enter
add
adc
nop
sbb
call
lea
neg
test
imul
js
loope
sti
icebp
dec
mov
add
std
jecxz
pushf
neg
stos
push
pusha
xor
jmp
sbb
loop
loope
into
cmp
ret
jns
cmpsl
addb
xchg
xor
cmp
inc
sub
mov
sbb
push
xchg
frstor
sarb
push
inc
push
xor
pop
cs
inc
mov
enter
jecxz
mov
push
das
xchg
pop
add
cmc
xchg
loop
inc
not
mov
cmp
jmp
stos
neg
or
test
ror
inc
incb
arpl
enter
popf
or
lret
popa
scas
and
gs
popa
leave
fcomps
imul
push
pop
xchg
test
add
push
fs
ficoms
pop
repnz
cs
enter
jge
cwtl
shll
add
shlb
add
xor
mov
aas
les
cmp
addr16
push
mov
add
jl
sub
push
xlat
or
int3
mov
cmp
cmp
pop
lret
popa
clc
jp
push
or
cmp
andps
dec
pop
or
ja
leave
addb
cld
jns
shlb
sub
jnp
add
sub
movsb
xor
arpl
jge
sub
mov
push
add
test
push
jmp
inc
call
notl
pop
jo
test
fisttps
pop
loop
test
dec
sbb
dec
loope
xchg
nop
ret
inc
jmp
pop
dec
sbb
jp
jecxz
cmp
xchg
push
or
inc
insb
js
hlt
add
rorb
daa
not
dec
push
cmp
jns
push
pop
pop
dec
movsl
xchg
daa
xor
sbb
test
lods
ja
sahf
pop
test
addl
aaa
aaa
xor
mov
inc
test
shr
mov
jne
aas
xchg
sub
cmpsb
and
inc
jecxz
adc
sti
dec
xor
test
sbb
xchg
sub
cwtl
sbb
mov
xor
mov
lock
pop
jge
repnz
aam
or
add
cmpl
emms
jle
clc
sbb
es
jmp
xlat
lret
mov
jae
punpckhwd
jecxz
iret
nop
cmp
or
and
pop
xor
ret
test
add
dec
stc
fstpl
jg
call
jno
not
cli
xchg
dec
mov
sub
mov
movsl
push
pop
pop
xor
orl
mov
pop
mov
jecxz
mov
jmp
cmp
scas
or
push
dec
add
ljmp
bswap
test
test
mov
add
adcb
push
cwtl
imul
sbb
cmp
pushf
push
movsb
cmp
inc
adc
add
lahf
cmpsb
inc
push
or
arpl
sub
pop
je
pusha
mov
test
cmp
inc
sub
sahf
outsl
aam
xor
shlb
and
pushf
dec
push
adc
insl
dec
add
movl
dec
lret
adc
mov
adc
jb
movsb
adc
xor
add
add
fists
and
stos
dec
inc
mov
push
shll
loop
xorl
dec
xlat
mov
les
push
data16
cmc
aaa
push
jg
rcrl
inc
arpl
std
inc
pop
orb
jns
and
lcall
icebp
dec
or
movl
inc
sbb
jmp
sub
xchg
cmp
cltd
lret
push
scas
jns
add
xchg
pop
push
rorl
aad
aaa
add
test
cmc
sbb
xchg
add
push
adc
dec
int3
scas
mov
fnstcw
inc
cmpb
or
aaa
mov
loop
loope
adc
arpl
adc
filds
cltd
xor
mov
addl
push
popl
jno
and
out
in
sarl
mov
repz
xor
xchg
or
test
xchg
cwtl
test
jo
int
jmp
repnz
lea
lods
dec
mov
jl
xor
popf
fldl
xor
mov
xor
daa
cwtl
add
sbb
cs
call
dec
jno
stos
shl
xor
xchg
push
add
cwtl
and
sub
ficompl
neg
nop
dec
dec
mov
enter
enter
movsb
jne
sub
adc
jg
push
lret
ljmp
sbbl
nop
mov
loope
int3
lcall
adc
dec
add
filds
cmp
xor
lret
ljmp
mov
ss
sub
sub
movsb
dec
add
and
in
adc
repz
ja
or
jo
xchg
xchg
mov
mov
lock
pop
nop
loop
cwtl
xor
xchg
mov
or
dec
sbb
or
ds
sub
sub
cli
push
push
inc
lods
add
push
dec
push
mov
aad
cmp
sbb
cmpb
jne
popa
push
nop
imul
fldt
movsl
or
mov
xlat
mov
mov
adc
les
aad
lcall
rcl
mov
cs
fmul
mov
inc
push
sbb
roll
clc
push
outsb
cmp
inc
or
nop
dec
jle
push
les
leave
jmp
fwait
dec
xlat
sbb
add
mov
or
lock
pop
mul
movsb
mov
lock
pop
pusha
dec
addl
push
pop
add
mov
aad
sti
mov
shll
idivb
push
dec
adc
mov
dec
add
inc
mov
cltd
xor
cmpb
dec
int3
stc
iret
idivl
cmp
xchg
or
cmp
add
jbe
stos
mov
xor
fmull
loopne
ljmp
aaa
mov
push
jnp
xchg
out
add
sbb
int
into
neg
test
mov
ja
adc
ret
cmp
das
fnsave
sbb
repnz
outsl
push
pop
pop
and
and
shl
xchg
aam
and
shll
loop
jbe
sbb
push
add
cli
adc
adc
nop
arpl
add
je
pop
adcb
neg
cwtl
push
cli
jns
xchg
xchg
mov
dec
sub
xchg
pusha
jmp
mov
mov
push
stos
mov
gs
bswap
in
and
inc
daa
not
sub
mov
jp
fldt
inc
pusha
or
fsubs
pusha
mov
xchg
xchg
adc
int
pop
xor
xchg
adc
sub
mov
push
jge
repnz
jmp
push
pop
cmpps
testb
fisubl
pop
ret
aad
movlps
adc
shrb
sub
loope
cmpsl
nop
sub
adc
cli
in
jb
sub
push
cmpsb
xchg
dec
mov
adc
aas
das
mov
ljmp
rorl
je
xchg
sbb
xchg
add
sub
and
mov
subl
scas
sbb
dec
xchg
inc
sub
lahf
call
fcoms
lret
xchg
test
push
ret
or
sbb
mov
daa
adc
int3
xchg
add
je
ret
mov
add
inc
xor
scas
test
jge
popf
xchg
not
cmpsb
cwtl
adc
bswap
xor
call
iret
and
shl
out
dec
outsb
inc
rorb
jl
xlat
ja
popl
dec
dec
in
movsb
sub
lock
mov
out
mov
cmp
test
xlat
push
aas
adc
sbb
stos
ljmp
loope
dec
lods
lret
cmp
loopne
leave
daa
icebp
cwtl
jbe
testl
mov
pop
pop
nop
loopne
dec
jo
mov
jmp
mov
int3
repz
pop
xchg
xor
cmp
adc
xor
pushf
insb
inc
imul
imul
xor
jmp
lea
sub
mov
sbb
lret
or
in
pop
push
test
rorb
adc
movl
mov
stos
xchg
repz
xchg
push
mov
test
dec
imul
fstpl
add
neg
add
jecxz
shll
cmp
test
pusha
loope
pop
bound
roll
fldl
fisubl
sarl
inc
xchg
add
scas
add
in
inc
ficomps
push
leave
mov
add
mov
mov
pusha
lea
jbe
scas
repz
cwtl
dec
and
push
cltd
push
loop
mov
ljmp
pop
sti
sbb
stos
and
dec
sub
or
test
aas
mov
sahf
ret
or
inc
hlt
and
jb
inc
pop
cmpsb
in
dec
add
cmc
jno
sub
jae
pop
aas
add
popa
bswap
xor
lock
fldenv
mov
std
lock
push
push
xchg
xor
mov
in
mov
sbb
test
adc
mov
xchg
pop
mov
dec
rolb
xor
shll
cmc
pop
mov
add
inc
sbb
pop
xlat
sbb
dec
popa
pop
jo
xor
xchg
out
dec
retw
pop
in
jle
lret
movl
mov
jo
mov
ljmp
push
aad
adc
faddp
pop
xor
adc
jne
inc
and
sub
mov
push
cmp
mov
mov
out
sub
fcoml
push
sub
and
cwtl
adc
orb
out
popa
lods
dec
mov
lods
push
bound
nop
mov
xorw
arpl
jge
push
add
adc
mov
or
inc
sub
push
aam
add
inc
push
dec
in
mov
or
xor
add
push
pop
rorl
enter
mov
into
or
and
adc
dec
scas
pusha
lods
sub
sbb
ds
out
cmp
or
and
das
loope
sbb
dec
popl
loopne
outsb
sub
imull
push
inc
test
insl
out
sub
lcall
xor
popf
sub
sbb
add
dec
loop
addr16
je
or
pop
out
push
and
mov
jnp
add
add
sqrtps
push
imul
sub
xchg
repz
psubsb
sbb
testb
and
jle
mov
add
arpl
mov
mov
icebp
shrb
sbb
and
fwait
cmpsb
cli
or
xchg
leave
mov
pusha
ret
inc
out
sbb
sbb
test
xor
rep
add
mov
mov
imul
mov
int3
adc
push
mulb
aad
pop
arpl
out
and
push
pushf
fcmovb
ret
dec
or
adc
jmp
fwait
out
push
leave
mov
andb
rcrl
imul
inc
adc
add
shl
dec
or
mov
or
add
in
lahf
lods
add
inc
pop
push
sub
or
mov
mov
and
cwtl
or
dec
add
enter
cwtl
cmc
ljmp
add
sub
and
fcoml
sub
cwtl
mov
movsl
pushf
test
or
inc
lcall
and
loope
das
lods
adc
mov
ja
add
xor
mov
repz
hlt
and
push
int
jae
push
movsl
loopne
leave
popa
adc
cmpsb
mov
push
test
das
xor
rcll
add
dec
scas
cld
lock
inc
or
fistl
inc
addl
pop
cmpsl
popf
movsb
fadd
mov
outsb
pop
add
and
dec
lret
lock
push
xchg
test
jp
andl
add
inc
cmp
push
sti
sub
sbb
pop
popa
adc
mov
pop
std
jbe
pushf
cs
dec
mov
fiadds
or
dec
flds
loopne
pop
jo
shrb
pop
add
icebp
xor
mov
mov
stos
and
pop
shll
in
or
mov
jbe
push
sti
sbb
test
pop
adc
rclb
cltd
andb
stc
daa
bound
inc
cwtl
repnz
push
add
sub
stc
xor
loopne
push
pop
inc
pop
and
clc
dec
inc
mov
arpl
push
ss
pop
adc
movsb
mov
rolb
adc
mov
adc
into
mov
add
int3
push
inc
adc
sub
and
or
sahf
push
adc
std
mov
shr
mov
cmp
sub
popa
adc
pop
inc
sub
jae
clc
popf
push
or
iret
add
push
pop
add
lea
adc
adc
decb
xchg
jo
pop
and
mov
into
sahf
ret
add
sub
dec
sbbl
call
rorl
xchg
shlb
and
aaa
add
rol
dec
dec
jns
push
js
pop
mov
xchg
nop
sub
xor
dec
aad
xlat
test
loop
sub
push
sub
fs
inc
inc
out
adc
nop
addr16
cs
sahf
in
and
mov
sbb
fbld
hlt
repnz
es
lods
lock
sub
push
jmp
adc
shll
add
pop
push
rolb
pop
lea
repnz
cmpsl
sub
mov
pop
or
jmp
mov
test
hlt
xorb
aas
andb
jno
adc
or
outsb
cmpsl
cld
or
icebp
xlat
add
mov
jmp
or
ss
xchg
add
subb
adcb
fs
mov
popa
jp
sti
inc
loope
dec
pop
push
push
push
add
outsl
or
or
pop
fwait
orl
arpl
mov
int3
inc
lods
int
popf
icebp
add
adc
loopne
sti
rsqrtps
pusha
clc
mov
xor
call
imul
push
and
or
inc
or
rclb
push
subb
sub
add
mov
sub
sub
shll
lcall
je
arpl
shll
ret
adc
or
into
adc
enter
jae
daa
inc
sub
inc
mov
sbb
inc
jno
adc
gs
popf
int3
pushf
cwtl
adc
add
call
xchg
pop
pushf
add
jge
lock
test
movsl
dec
xchg
int3
stos
dec
sub
fisttpll
push
imul
jo
loopne
rcl
jecxz
lcall
mov
push
ret
leave
add
and
or
sbb
pop
push
add
loopne
push
out
sbb
push
push
sbb
or
push
mov
out
popa
push
aas
loop
jg
cli
je
sub
jnp
cmp
fcmovne
sub
lret
andl
rolb
xsavec
jl
xor
stos
push
cmpsb
push
out
pop
scas
add
sti
mov
movsl
sbb
movsl
mov
and
testb
jle
add
jge
std
sbb
push
cmpsb
jbe
dec
std
xor
mov
incb
movsb
pcmpgtd
insl
stc
adc
push
dec
pop
mov
call
rorb
jl
cmp
cmp
adc
clc
mov
sahf
or
cwtl
xchg
pop
mov
jnp
push
iret
rcrb
pop
outsb
xor
call
lock
cwtl
test
mov
mov
mov
aaa
int
lods
jl
xor
js
mov
jo
outsl
cmpsb
cmp
rol
jo
or
xor
xchg
mov
pusha
sbb
mov
xor
xor
jl
pop
lahf
push
jmp
jbe
insb
imul
ljmp
jbe
add
push
loop
mov
enter
test
push
out
cmp
jns
sub
cmp
dec
inc
not
outsb
or
inc
add
inc
jo
mov
call
xchg
push
mov
lea
sub
aas
leave
mov
addr16
mov
cld
lea
lcall
movsb
push
fimuls
push
sbb
scas
ljmp
mov
pop
add
sub
fwait
xchg
loop
mov
xor
rcrl
test
lea
or
sahf
dec
mov
dec
sub
je
cmp
rolb
mov
addr16
imul
aad
sbb
fsubrp
cwtl
and
pop
dec
add
mov
jmp
sub
mov
mov
or
sbb
push
jbe
cmp
sub
mov
sar
adc
push
stos
adc
cmp
or
push
mov
mov
xchg
decl
sar
in
sbb
ds
mov
dec
mov
pop
dec
js
pop
pop
pop
test
xchg
in
mov
stos
insb
cmp
pop
outsb
cmpsl
pop
sbb
xor
pop
inc
or
imul
xor
imul
mov
xor
fdivl
pop
jmp
movb
mov
xor
jecxz
out
push
test
test
insb
xor
inc
adc
cwtl
cmp
movsb
out
ds
adc
cld
xchg
lahf
xchg
nop
xchg
xor
rolb
data16
lods
shll
jno
and
popf
push
push
arpl
push
xor
fcmovne
jae
stos
xchg
out
sbbl
mov
push
imul
lods
hlt
arpl
outsb
xchg
mov
jl
ds
jnp
je
pop
fsts
jge
rcrl
push
pop
cltd
dec
sbb
test
cs
stos
jbe
xor
lret
push
outsb
mov
push
xchg
aam
push
and
mov
mov
pushf
fs
hlt
inc
loope
xchg
hlt
lret
shll
pop
mov
push
jmp
iret
jbe
add
sti
dec
sub
pushf
lahf
aam
flds
test
insb
jo
jl
std
dec
out
sub
dec
adc
add
pop
repnz
push
lods
jb
test
mov
int3
inc
imul
xchg
repz
mov
or
cs
push
fisttpl
sub
testl
mov
add
push
inc
or
and
pop
das
inc
and
jnp
cwtl
adc
dec
lods
inc
iret
loop
inc
int3
add
sti
jo
call
aas
inc
inc
popf
or
fcomps
mov
mov
mov
hlt
jo
int
popf
jecxz
xor
rcl
test
fst
mov
push
pop
fadd
xor
mov
inc
stos
dec
mov
cltd
mov
outsl
xor
mov
or
shlb
lcall
cmpb
mov
mov
pop
mull
mov
loop
fnsave
pop
jnp
in
and
inc
mov
cmc
movsb
std
add
sub
push
lods
mov
jecxz
dec
aad
dec
lea
stos
push
adc
fcomp
mov
and
imul
dec
jp
aam
push
arpl
lret
daa
add
lahf
push
pop
imul
mov
inc
jecxz
ret
sub
ficoml
movsb
roll
mov
mov
sbb
sarb
cwtl
fisubrs
mov
pop
jp
stos
iret
sub
dec
jge
mov
out
xor
int3
add
sub
or
cld
jge
cli
movb
inc
dec
mov
pushf
ret
out
push
sahf
mov
adc
cmp
xor
jmp
jp
cmp
mov
pop
inc
push
ss
pop
push
mov
push
mov
jnp
shlb
cmpsb
fnsave
data16
or
lahf
mov
xor
mov
cmpsl
lea
in
sub
jne,pn
jnp
in
popf
and
pop
cwtl
pop
pop
in
dec
sbb
mov
dec
int3
cmp
iret
fs
cmpsl
mov
adc
push
jnp
jno
mov
sub
sub
stos
mov
daa
fsubrs
push
pop
fsincos
jge
sarl
test
std
outsb
mov
cmpb
lret
push
xchg
int
push
out
stos
sbb
jmp
stc
xchg
rclb
cld
sbb
dec
lea
mov
jno
movsb
cmp
out
cmpsl
je
push
lret
shl
sti
mov
insb
or
movsb
in
nop
adc
dec
push
popf
aad
cwtl
stos
sahf
sbb
xchg
sbb
push
mov
cmp
xlat
jle
dec
push
sbb
fcmovnbe
movsb
or
jge
xor
sub
test
dec
dec
jbe
mov
jo
mov
imul
nop
aam
xchg
jl
jo
mov
pop
test
jnp
inc
adc
pop
jecxz
mov
lods
push
lret
test
fimull
jns
push
stc
shlb
jp
shll
xchg
mov
mov
add
dec
movsl
sar
out
outsb
mov
xchg
sbb
dec
sub
xchg
inc
lods
lahf
mov
jl
and
pop
idivl
or
jae
test
sahf
push
fistl
iret
jl
ficomps
into
icebp
sub
adc
test
popf
adc
jbe
or
lods
dec
cmp
jns
mov
inc
xor
or
push
imul
mov
mov
push
adc
pop
rclb
lods
fstps
adc
push
sub
adc
popf
jmp
pop
add
add
dec
scas
or
dec
repnz
mov
jae
jl
xchg
pop
mov
adc
push
outsl
pop
insb
lahf
iret
cmpsb
cmp
adc
push
dec
in
adc
lds
or
jae
aam
dec
mov
dec
sbb
dec
iret
push
out
mov
sub
ja
dec
test
pop
pop
push
pop
xor
sti
mov
cmp
pop
lahf
icebp
push
jnp
jge
inc
add
cmp
push
lcall
cs
fisttpl
lods
jge
cmpsl
fimull
sub
xor
or
movsb
add
inc
sub
jae
jecxz
daa
jnp
sbb
rcr
lock
shlb
and
clc
sbb
addr16
decb
mov
pop
cmp
jo
jp
icebp
pusha
subl
je
add
insb
sub
pop
mov
imul
pop
lock
cmp
ljmp
rcrl
xchg
outsl
aas
or
lea
mov
adc
into
jne
out
ficoms
push
ds
loop
repnz
add
adc
cmp
cld
fwait
add
push
mov
rclb
jns
mov
clc
stc
mov
xlat
movsb
jbe
xchg
mov
pop
adc
je
test
sbb
ds
mov
stos
aam
sbb
imul
mov
or
inc
xchg
cmp
sub
pop
scas
mov
cmp
stc
nop
mov
daa
aaa
imul
iret
aas
lods
pop
sbb
fidivrl
scas
adc
clc
mov
fmull
jge
dec
mov
inc
adc
insl
jge
lret
and
push
insl
xchg
and
sbb
jns
dec
enter
hlt
int3
push
xor
fneni(8087
xchg
sub
or
in
add
inc
lret
jg
lret
bound
pop
out
lahf
xor
pusha
jl
cmpsb
scas
mov
in
arpl
or
cmpsl
std
or
push
inc
mov
adc
cs
subb
pop
insl
jbe
or
cmpsb
adc
stos
adc
xchg
in
pop
xchg
and
pop
jg
fs
mov
xchg
fwait
movsl
jno
add
cltd
or
push
fcoml
lcall
sbb
mov
mov
cmpsl
cld
xchg
in
rorl
inc
and
jne
adc
jle
cmp
test
inc
lret
fnstsw
mull
imul
decb
repnz
stos
cmpsl
nop
lcall
mov
inc
pop
adc
lret
fistl
cmpsl
hlt
mov
fwait
push
js
xchg
push
setle
mov
idivl
addr16
xchg
cmp
push
lahf
adc
push
mov
sub
inc
jp
lock
adc
fisubs
or
jne
jge
jmp
push
sub
mov
sbb
push
lds
xor
inc
cmp
xchg
cmp
scas
xlat
movsb
lock
mov
adc
xchg
es
andps
sbb
pop
aas
pushf
xchg
add
shll
movsl
jno
lods
mov
mov
clc
ja
mov
mov
push
mov
jae
dec
iret
xlat
enter
and
mov
enter
adcb
cmp
das
cmp
ja
cmpsb
xchg
cmp
push
sbb
and
or
fdivrs
addb
push
push
sub
lods
imul
mov
xchg
xchg
cmpsl
mov
cmp
fcoms
jbe
pop
or
cs
push
insl
dec
push
dec
out
sub
pushf
inc
mov
push
out
sub
stos
lods
dec
ret
jle
jne
das
aas
aad
push
daa
rorb
imul
dec
mov
pop
cld
es
movsl
fidivs
std
jb
fs
pop
fdivrp
pop
fiaddl
ja
push
inc
jmp
or
ljmp
es
and
scas
mov
or
push
loope
sti
dec
and
es
mov
lods
ret
and
add
repz
lcall
loop
fsubl
inc
xchg
xchg
pop
sub
data16
adc
push
movsb
pusha
dec
inc
dec
testl
sub
les
cmpsl
lea
clc
sub
stos
das
mov
mov
adc
aad
sbb
daa
jno
aas
sbb
pop
pop
in
ja
dec
xor
sbb
movhlps
icebp
mov
test
and
nop
jb
cld
fwait
mov
sub
lret
rorl
xchg
inc
push
dec
jns
pop
fidivrl
mov
mov
push
xchg
pop
pusha
daa
imul
dec
jecxz
insb
lcall
aam
imul
push
int
or
mov
mov
lret
into
inc
adc
aad
lcall
jbe
popf
jle
cmp
jecxz
stc
leave
and
sub
mov
das
stos
cmc
test
push
mov
pop
lock
stc
dec
jmp
fdivrp
inc
pop
push
addr16
mov
jae
xchg
insl
shl
loopne
outsb
mov
je
adc
sti
mov
in
mov
std
mov
push
sbb
dec
daa
popa
xlat
mov
lret
dec
in
cli
cmpsl
sub
cmp
pop
rolb
in
and
negl
dec
xchg
daa
or
dec
push
sub
lret
sbb
inc
xchg
daa
nop
and
cmpsl
jp
mov
inc
cmp
insl
xchg
scas
imul
pop
aas
or
int
add
mov
cmpsb
out
aaa
adc
jle
mov
sbb
stos
jb
jp
jo
mov
push
jnp
outsl
shll
insb
jmp
mov
imul
out
dec
push
daa
inc
pop
jmp
pushf
div
sub
pop
push
out
in
mov
fistl
cwtl
sub
hlt
inc
lcall
sub
mov
cmp
or
mov
jne
dec
in
mov
push
jle
fistps
sub
cmp
mov
fs
mov
in
mov
adc
movsb
mov
jo
xor
loopne
test
ficompl
push
pop
cmp
pop
stos
mov
push
aas
or
add
adc
enter
jne
movl
pop
inc
sub
sub
outsl
xchg
pop
lods
xchg
push
push
jo
xchg
cmp
ret
xorb
add
inc
or
idivb
daa
outsb
and
nop
pop
push
insb
dec
xchg
jecxz
call
div
jns
int
cmp
scas
outsl
sub
repnz
sbb
std
movsl
test
cltd
push
add
insb
pop
repz
dec
xchg
imul
sbb
xor
push
sbb
cmp
mov
jecxz
inc
inc
in
fstpl
jl
push
mov
adc
lods
add
push
xchg
test
fisubl
mov
js
shl
cltd
dec
or
push
addr16
pusha
mov
ds
test
or
sub
sbb
pop
in
dec
fsubs
aad
cmp
push
and
mov
sub
test
lea
mov
inc
repnz
dec
ret
push
mov
imul
and
push
xchg
and
jmp
scas
fmul
cmp
outsl
dec
dec
loop
inc
popf
enter
notl
xchg
test
out
adc
xchg
adc
xor
adc
cli
sub
push
test
xchg
jge
cmp
jecxz
in
mov
int3
dec
fwait
movsb
lods
mov
push
out
leave
ds
das
xchg
imul
out
dec
sar
mov
add
pop
push
jecxz
sub
jns
arpl
xchg
outsb
pop
daa
fisubrs
mov
lret
mov
xchg
pop
dec
aas
gs
pop
mov
int
inc
xorb
cmp
int
leave
aaa
pushl
mov
in
add
sub
rcrb
das
mov
push
mov
leave
lds
stos
dec
ja
add
dec
aam
push
xchg
add
lods
pop
addr16
stos
dec
adc
pop
mov
std
lret
lods
mov
test
xor
xor
jl
xchg
mov
add
adc
testl
inc
in
jb
cwtl
jle
push
pushf
outsl
lods
mov
pop
jne
push
dec
imul
sbb
addr16
popa
insb
out
fld
in
ds
outsl
dec
push
lds
xor
scas
hlt
or
es
pop
imul
cmc
out
sbb
and
les
push
lcall
movsb
and
xor
push
out
stc
inc
shr
xchg
mov
cmp
bsf
jle
mov
pop
mov
pop
pop
cmpb
aad
mov
call
add
cwtl
out
push
sbb
clc
dec
pop
push
outsb
test
inc
dec
xchg
jnp
inc
arpl
sbb
jp
pop
inc
and
loopne
cmp
test
pop
jnp
and
sbb
dec
xor
sbb
gs
cld
arpl
adc
inc
sbb
or
test
dec
sbb
lods
xor
cmp
popa
and
lahf
mov
xchg
pop
or
cmp
mov
xor
out
mov
mov
sbb
xor
jle
cmpsl
aas
cs
rcl
stos
xchg
imul
pop
test
ds
out
jg
xorl
mov
pop
add
popf
push
aas
add
lods
out
mov
cmpsl
gs
lret
pop
pop
jmp
mov
pop
jle
cli
scas
sbb
adcb
jle
or
sbb
adc
xchg
out
or
arpl
dec
or
and
sbb
stc
mov
mov
cmp
sarb
inc
mov
mov
push
cli
data16
fadd
xchg
scas
xchg
in
or
fmul
sub
scas
jle
insl
add
xchg
sub
pusha
mov
push
imul
lcall
sahf
adc
pop
loop
add
lret
and
mov
enter
push
mov
stos
mov
jbe
xor
sbb
inc
aaa
mov
and
je
jne
and
iret
lahf
jmp
lahf
leave
jae
or
movsb
shlw
lahf
pop
imul
test
shrb
pop
mov
mov
das
cmpsl
push
xchg
mov
addr16
pop
movsl
lcall
in
loope
test
sbb
mov
sbb
xor
mov
or
push
mov
lds
xor
imul
add
fmulp
ficoms
pop
mov
dec
dec
sahf
imul
add
mov
dec
repz
or
enter
sbb
cwtl
cmp
subl
psubq
sbb
or
aad
cld
sub
dec
lret
pop
sbb
in
push
push
dec
adc
push
andl
in
ficomps
nop
jbe
jge
or
sarl
or
dec
scas
dec
pop
add
shl
stos
cld
hlt
mov
and
or
jle
inc
fisttpll
pop
fstps
jmp
pop
mov
repz
daa
dec
mov
push
ret
fldcw
aam
jns
in
xlat
fstpl
jmp
fcomi
shll
adc
fbstp
in
shrl
bound
sbb
dec
insb
pop
imul
in
sub
lods
fbstp
test
pop
adc
xchg
int3
lods
push
sbb
out
jle
inc
movsb
xchg
push
sbbb
out
xlat
fstl
add
or
hlt
sbb
hlt
inc
xchg
test
and
out
cld
dec
mov
mov
xchg
sbb
dec
lret
rcr
add
scas
pop
rdmsr
push
fsts
outsl
mov
cmc
xor
sbb
jecxz
iret
adc
das
dec
lret
push
testb
aam
xchg
out
push
dec
pop
dec
bound
jge
outsb
arpl
test
jmp
sub
xor
jbe
imull
adc
dec
mov
pop
lock
adc
mov
cmpsb
inc
xchg
idivb
clc
inc
out
pop
decb
jae
inc
jnp
jno
out
shr
sbb
rcrb
mov
mov
mov
dec
cmp
push
dec
cltd
jae
incb
in
imul
jp
stc
or
mov
cwtl
push
pop
sbb
out
and
push
outsb
out
pusha
jo
stos
sar
add
adc
pop
js
sub
dec
iret
fsubl
or
xor
dec
mov
adc
push
repz
mov
js
jl
adc
cwtl
xorb
or
test
mov
mov
mov
shrl
xchg
mov
enter
aaa
icebp
arpl
adc
cmpsb
aam
and
push
out
in
lcall
hlt
cmp
mov
or
sub
mov
or
movl
test
cmpb
inc
jmp
imul
fidivrl
pop
dec
call
jne
in
cmp
daa
mov
adc
pop
cltd
je
push
out
imul
sbb
loopne
adc
dec
rorb
lods
in
jbe
divb
cli
adc
jle
test
jno
jmp
insb
inc
loope
cs
push
stc
mov
in
cmp
adc
jns
adc
push
dec
mov
or
addr16
push
mov
xchg
and
jb
pop
es
add
js
outsb
fimull
adc
stos
push
insl
sahf
adc
fistpl
adc
sub
fistps
mov
sub
dec
popa
push
xchg
or
sbbl
js
fwait
pop
mov
outsl
cmpsl
pop
loopne
pop
fistps
rcl
xchg
push
test
jecxz
sbbb
test
add
push
loope
push
orl
push
aam
jb
aad
add
fcmovbe
mov
push
test
jmp
push
test
jmp
push
test
jmp
ja
imul
inc
sub
shrl
sbb
cmp
sbbb
xor
mov
pusha
xacquire
add
sub
inc
fiaddl
jbe
imul
in
xchg
aaa
cmp
addl
push
loope
push
loop
mov
and
loop
push
lds
decl
js
shl
test
mov
adc
stos
lods
out
mov
cmpb
mov
je
sti
lcall
push
fcmovu
repz
imul
sub
and
int
jns
mov
or
or
fstl
push
lea
cmp
repnz
dec
push
mov
std
adc
stos
xchg
int3
lret
daa
inc
and
dec
insl
out
lret
cmp
flds
movsb
mov
or
add
lock
sbb
mov
jmp
jno
sti
inc
xchg
cmp
xor
mov
mov
or
fisttps
popa
sub
pop
int3
stos
or
jecxz
loop
into
jne
adc
adc
mov
scas
jne
push
sub
sub
imul
in
shll
pushf
fimull
dec
es
inc
xchg
lods
push
mov
jecxz
inc
xchg
rcrb
jmp
mov
pusha
sub
or
push
xchg
pop
push
or
addr16
call
mov
inc
testl
insb
sbbb
insb
sub
out
adcl
jmp
or
dec
outsl
pop
push
push
pop
mov
movb
xchg
mov
lcall
dec
jmp
fptan
out
push
mov
adc
mov
mov
xchg
dec
sbbb
jmp
dec
cs
mov
mov
out
and
sub
mov
ret
mov
pop
loop
cmp
clc
jns
std
ss
add
mov
outsb
xlat
fisttpl
bound
push
dec
sbb
cltd
fwait
mov
sahf
jae
cmpsl
fnstcw
pop
mov
mov
int3
hlt
mov
shrb
mov
pop
add
shll
outsb
adc
push
push
push
idiv
pop
test
call
cmp
xchg
xor
sbb
arpl
out
sub
cwtl
xchg
xor
or
addr16
inc
icebp
mov
mov
lock
push
inc
push
int
adc
ficoms
out
test
aad
cltd
dec
sub
jae
pop
jle
scas
mov
hlt
dec
mov
inc
sbb
ds
xor
xchg
jb
xor
outsb
lods
imul
mov
xor
les
push
ljmp
mov
and
sbb
daa
arpl
pop
bts
sti
jg
imul
cltd
imul
cmp
mov
xchg
jmp
rol
mov
push
test
out
cmp
or
xchg
lock
fsts
jp
cmc
fwait
lock
xchg
decl
ljmp
and
in
adc
mov
pop
mov
inc
in
jb
cmp
mov
pop
daa
push
lret
adc
jno
mov
enter
sbb
dec
inc
lods
mov
aad
iret
inc
out
dec
scas
hlt
scas
add
lret
fs
repnz
push
cmpsb
bound
addr16
cmp
sub
loop
shl
inc
loopne
imul
push
imul
add
out
popa
js
and
test
mov
cmpsl
xchg
dec
adc
xorl
mov
or
adc
and
stc
in
pop
orl
dec
sub
test
mov
ss
popf
shlb
push
mov
loop
cmp
xchg
imul
sub
gs
mov
test
and
loope
push
popf
leave
repz
cmp
mov
daa
xor
test
loop
sub
jns
es
mov
mov
in
lods
push
fistl
jae
sarl
pushf
jno
cmc
mov
out
fbstp
jp
xchg
int3
cmp
ret
loop
cmp
jnp
test
jecxz
inc
clc
in
or
inc
bound
and
fisubl
lods
leave
in
xor
enter
imul
adc
add
add
sub
insb
and
push
nop
jne
xchg
pop
fs
clc
fisubl
mov
push
sub
rcl
adc
popa
pusha
xchg
fs
pop
dec
shl
sub
dec
mov
clc
pushf
pop
cltd
sub
pop
ror
pop
lods
and
daa
mov
adc
jecxz
sbb
ret
xchg
popf
mov
shlb
pop
in
loopne
push
jb
sub
push
getsec
shl
jnp
std
push
pop
mov
aas
loopne
icebp
cmp
aam
andl
daa
push
sti
movsl
dec
loope
xchg
int3
mov
cmpsl
out
mov
fwait
push
xchg
adc
lds
push
movsl
mov
or
dec
push
and
push
repz
sub
inc
mov
mov
xchg
les
outsl
lods
clc
movsb
jno
adc
call
xchg
xor
pop
add
jmp
out
xchg
sahf
nop
movsb
sub
js
int
adc
adc
scas
lret
notb
pextrw
xchg
popa
out
in
jg
imul
cmp
gs
dec
outsl
jno
imul
insb
dec
lret
cltd
inc
lret
lock
adc
xchg
lds
stc
inc
sbb
jmp
das
mov
stc
pop
scas
sahf
aaa
int
andb
fsubs
loope
mov
fistps
and
pushf
jg
sbb
push
in
mov
jmp
cmp
nop
test
mov
pop
testl
push
pop
iret
cmp
push
test
andb
insl
cs
adc
cld
or
jnp
and
pop
mov
xor
stos
adcl
out
jle
pusha
hlt
popa
je
std
inc
xchg
icebp
sarb
add
out
xchg
push
adc
xor
mov
jbe
jmp
ret
push
inc
sub
pop
test
xchg
adc
xchg
std
and
mov
in
in
sbb
jmp
shrb
dec
push
mov
jns
sub
or
push
push
cmp
cmpsl
shlb
push
sub
add
mov
push
pop
lcall
movsl
ds
mov
pop
dec
insb
adc
xchg
je
add
mov
popa
cltd
in
xchg
test
orl
mov
adc
xor
push
jecxz
outsb
mov
dec
in
enter
arpl
adc
ret
iret
xchg
pop
jmp
loopne
gs
jbe
mov
mov
mov
insl
mov
pop
xor
sub
mov
xchg
xchg
std
daa
dec
inc
es
lret
mov
loope
xchg
inc
sbb
bnd
pop
repnz
mov
bnd
adc
imul
push
sub
or
xchg
xchg
jne
cs
xchg
mov
outsb
sti
and
aam
push
mov
leave
dec
scas
repz
rorb
lea
pop
in
add
push
mov
jl
arpl
pushf
aad
xor
repnz
xchg
cmp
fucomip
jmp
cmp
fdivrs
adc
jnp
mov
jecxz
sbb
aas
lahf
inc
sub
cld
mov
leave
mov
rcrl
inc
data16
or
mov
call
mov
leave
mull
arpl
leave
popa
xchg
push
rorb
inc
jecxz
mov
xchg
mov
fldl
sub
stos
xor
sbb
icebp
es
or
pop
fstpt
cs
test
pop
inc
xchg
shrb
test
dec
outsl
mov
add
pop
dec
shlb
rorb
sbb
loopne
out
push
cmpsl
sbb
mov
pop
push
jl
push
stos
xor
repz
push
push
xchg
or
and
outsl
mov
movsb
cmp
int
xor
loop
sti
push
lret
insb
ficoms
js
imulb
mov
or
inc
sbb
rorl
sbbl
or
std
add
push
push
outsb
fistpl
sahf
notl
in
out
mov
scas
insb
divb
add
mov
ficomps
xchg
adc
ds
mov
dec
out
mov
dec
test
mov
pop
jecxz
push
addr16
mov
inc
push
cld
fidivl
sar
adc
movsb
or
pop
inc
lods
push
cld
cwtl
lods
cmp
adc
cld
dec
stc
scas
out
movsl
pop
aaa
push
lcall
or
imul
adc
and
or
loope
jbe
lods
push
repnz
cmp
das
stos
push
adc
add
add
add
mov
jmp
push
ds
adc
mov
or
fisttpl
mov
xor
inc
cld
cltd
mov
call
lahf
popa
call
shrl
enter
jecxz
mov
mov
insb
adc
adc
lcall
jle
or
jg
call
cld
lret
cmp
or
hlt
mov
adc
repz
xor
outsl
jmp
inc
cmpsb
adc
jbe
and
pop
fnstcw
xchg
fmuls
aaa
jl
daa
cld
in
in
xchg
in
inc
iret
or
sub
mov
lcall
add
cli
arpl
sbb
sbb
and
push
cmp
sbb
psraw
in
es
xchg
jge
inc
fsubrl
sarb
mov
cmp
les
scas
xchg
stos
mov
mov
icebp
imull
mov
movsl
inc
inc
aam
les
mov
add
cwtl
push
pusha
test
sbb
aad
out
cld
pop
and
dec
rcr
push
iret
cmp
add
add
stc
nop
fimull
testb
xlat
adc
fildll
pop
scas
cwtl
arpl
daa
jbe
push
ds
or
shlb
loope
je
sub
into
lahf
xchg
mov
arpl
out
push
adc
xchg
jp
jb
push
cmpsb
test
fidivrs
mov
outsb
push
pop
std
xchg
daa
add
xchg
into
pushf
fs
push
inc
dec
scas
sbb
scas
lahf
pop
pop
jecxz
mov
out
mov
shll
sbb
sub
shrb
jbe
jbe
dec
mov
lods
jl
mov
sahf
or
mov
out
lods
stos
in
add
ud0
mov
out
ljmp
xchg
push
bound
inc
movl
pop
push
es
sti
fistpl
pushf
push
arpl
xchg
xchg
bound
push
in
cmpsb
pop
ljmp
sbb
ror
std
bound
push
mov
push
inc
mov
sbb
fcoms
mov
mov
js
push
outsb
adc
cmp
pop
cmp
mov
clc
push
inc
jnp
jmp
mov
imul
loop
testb
dec
mov
cmc
cli
bound
mov
and
cmpsb
fs
xchg
insl
inc
loop
cld
or
cmpsl
lods
hlt
cwtl
pusha
out
jp
data16
loop
sub
mov
out
lahf
clc
cmp
das
inc
and
pop
repz
xchg
lret
popa
xchg
ret
xchg
dec
imul
cmp
das
dec
adc
and
das
leave
imul
xchg
loope
cmpsl
mov
sub
cmc
int
popa
cs
dec
std
push
rcrb
rorl
fdivr
add
add
movsb
loopne
pushf
fbld
xchg
adc
out
dec
scas
data16
dec
sbb
jle
mov
sub
mov
test
popf
add
jbe
fs
and
sub
jae
aas
xchg
dec
mov
push
lock
push
fmuls
cmpsb
mov
dec
aaa
fimuls
mov
push
and
mov
xor
cmp
jnp
xchg
jne
cmp
in
mov
xchg
mov
jae
jmp
es
adc
jg
pop
jns
pop
daa
sbb
bswap
adc
inc
das
cwtl
aas
sbb
js
test
mov
adc
stos
gs
sti
or
ds
jbe
adc
movl
or
mov
das
sbb
adc
sti
fs
into
shr
jecxz
movsb
adc
nop
iret
inc
mov
lret
cld
adc
adc
daa
sarl
push
pushl
movsb
js
vmaxps
mov
xchg
push
lods
dec
mov
sub
fidivrl
int
mov
loope
pop
or
mov
ss
aaa
lods
jp
das
iret
outsb
mov
ret
and
jno
jb
mov
mov
nop
insb
push
mov
mov
out
cmpsl
sbb
sub
pop
xor
push
jge
cmpsb
pushf
hlt
xchg
cmp
shrl
das
insb
clc
mov
mov
shl
mov
rclb
cmpsb
dec
xchg
sbb
dec
fistl
es
add
js
stc
sarl
imul
pop
jne
ret
daa
and
add
cmp
cmpl
mov
iret
bnd
inc
daa
push
and
es
jl
adc
aaa
mov
dec
xchg
outsl
loopne
movsb
movsb
rcl
xchg
aad
sahf
pop
punpcklwd
xor
dec
lea
push
in
cltd
jnp
xlat
jecxz
xor
and
arpl
movsb
sar
cltd
and
sbb
cmc
dec
mov
adc
or
cmp
mov
sbb
or
sbb
push
pop
or
loope
popl
dec
aad
mov
push
fisttpll
hlt
cmovo
fs
movsl
inc
lret
in
jno
out
inc
rcrl
leave
out
in
inc
pop
sbb
jl
movsb
cmpsl
sbb
inc
stos
inc
mov
cld
pop
test
cmp
inc
xor
adc
inc
mov
out
pop
out
push
dec
fnstcw
lret
in
lahf
je
test
fnstsw
inc
out
pop
outsb
call
mov
lock
das
ret
mov
and
dec
mov
or
xor
test
pushf
cmp
or
jp
cmp
in
mov
dec
fidivl
aam
pop
mov
in
mov
sbb
mov
sub
fwait
dec
and
push
mov
ds
jp
jo
inc
pushf
popa
sbb
rol
mov
adc
sbb
push
jl
outsb
sub
xor
cmp
in
dec
cmp
pop
push
mov
mov
add
cmp
lock
lret
into
sti
mov
test
mov
pop
push
xchg
cmp
cmp
ret
das
dec
xchg
jp
mov
int
xor
jmp
iret
pop
and
loop
sbb
fcompl
push
ret
jle
aam
xor
sbb
lock
sub
addl
rclb
cmpsb
jecxz
outsb
xchg
out
sub
stos
mov
adcb
push
pop
jnp
enter
jecxz
mov
pop
adc
loope
sbb
adc
cwtl
push
xchg
jmp
aam
mov
xchg
pushf
call
lahf
inc
fdivs
cmp
aam
mov
xchg
add
push
dec
insb
popa
or
lods
cmpsb
lea
nop
dec
clc
xor
jp
and
mov
cmpb
es
add
test
jmp
fcompl
pop
test
jnp
push
xchg
mov
leave
ss
mov
push
dec
rcrl
inc
addr16
xchg
xor
mov
mov
lea
sbb
sub
push
xor
lods
mov
daa
push
adc
cmp
arpl
loop
jecxz
mov
cmp
adc
push
rorb
aad
cmp
dec
bound
shrb
lret
add
add
and
aad
sarb
daa
in
lods
cmp
adc
sub
inc
pop
xchg
test
ljmp
fsub
mov
push
aas
adc
imul
or
popa
dec
add
jmp
pop
lea
mov
dec
push
jmp
repnz
mov
int3
popf
mov
pop
cmp
lea
nop
jns
aaa
sub
xor
test
ret
or
mov
popa
pop
push
sub
push
outsb
es
add
jmp
shlb
xchg
dec
lods
popf
jmp
and
jnp
movsl
sub
lea
pop
clc
push
sub
xchg
test
lea
sub
std
and
aad
cmpb
mov
daa
push
mov
mov
dec
sub
sti
sarb
sar
adc
jmp
out
cmp
insb
fwait
xor
jb
adc
in
mov
cmp
jp
dec
jb
ds
incb
stos
adc
jge
div
aaa
jg
repnz
jge
sarb
fsub
sbb
scas
jp
cmp
xchg
push
cli
dec
sti
inc
push
repz
movsb
pop
insb
daa
iret
cmp
mov
and
mov
push
enter
push
push
std
cmp
push
aaa
pushf
imul
test
xchg
cmp
stos
dec
add
jl
dec
or
add
and
xchg
sbb
pusha
mov
pushaw
or
movsb
pop
stos
xor
ljmp
enter
mov
cwtl
cld
jge
aas
lret
lcall
imulb
jle
movsb
push
cltd
imull
fwait
shl
inc
daa
rorb
test
aad
push
jecxz
mov
mov
and
cmpsb
nop
xchg
fcompl
push
inc
js
push
fimuls
pusha
mul
mov
out
cmpsl
out
cmp
das
in
insb
mov
mov
push
aad
xor
jge
fidivrl
call
cmp
inc
pop
push
out
out
sti
jb
cld
mull
maskmovq
imull
cmp
cltd
jge
xchg
shr
fnsave
mov
cmp
push
jecxz
sahf
adc
inc
add
enter
insb
mov
dec
in
add
dec
mov
cmpsb
stos
call
hlt
in
sbb
mov
sbb
mov
cmp
push
push
int
jl
in
sub
push
out
cld
or
pop
xchg
xor
pushf
or
mov
adc
mov
jge
xor
enter
xor
dec
addr16
mov
test
fwait
addl
stos
cwtl
mov
pop
mov
iret
add
mov
repnz
mov
enter
dec
imul
jns
pop
mov
jge
stc
pusha
stos
les
lds
jae
les
mov
enter
push
mov
mov
push
jle
fimuls
cmp
jns
aam
insb
or
scas
popf
pop
subb
pop
dec
adc
outsl
mov
xor
xchg
and
cmpsl
lods
into
jne
mov
or
cmp
lods
lcall
sbb
repz
sahf
scas
sbb
dec
cmc
jbe
lea
mov
fcomps
ret
inc
mov
fcoml
xchg
mov
push
in
ret
push
dec
xchg
enter
movsl
mov
movsb
out
dec
sub
fdivrs
sub
addr16
clc
pop
cmpsl
fcoml
jge
dec
test
sbbl
sbb
jo
push
sub
add
adc
dec
test
sbb
js
push
pop
mov
pop
push
es
inc
in
adc
sbb
pop
pushf
fwait
jp
jecxz
stos
scas
sub
mov
cli
sti
push
jo
inc
in
and
push
out
test
add
aad
inc
ds
adc
cltd
mov
xchg
cwtl
dec
inc
mov
mov
lret
ja
arpl
xor
adc
add
mov
inc
push
jo
sbb
aam
rcr
and
int
xchg
fwait
push
pop
les
cmp
xor
std
sbb
test
jmp
jae
lcall
jnp
call
stos
xchg
xchg
xlat
adc
in
js
in
dec
clc
xchg
or
aam
push
movsl
daa
dec
out
clc
and
mov
inc
sub
dec
xchg
push
ja
lock
push
mov
enter
push
mov
mov
push
or
mov
into
rorb
in
or
aaa
lods
fld
in
inc
outsb
pop
int3
mov
xchg
mov
mov
aaa
sbb
push
nop
jo
inc
shll
push
sbb
mov
add
rcrl
sbb
and
inc
aad
jb
mov
add
cmp
cmp
xchg
cmp
iret
cwtl
hlt
mov
dec
sarb
mov
add
jbe
sbb
call
cmpsb
loop
push
ds
je
ljmp
popf
in
daa
inc
inc
lea
movsl
mov
push
aam
filds
js
shrb
xchg
inc
cs
fisttpl
sti
or
ret
mov
mov
mov
ret
push
out
or
cmpsl
adc
mov
sbb
repnz
xchg
in
sub
xor
mov
fs
bound
push
dec
jl
push
dec
cmpsl
cmp
push
mov
insl
cwtl
push
ret
gs
and
xor
clc
mov
xchg
mov
lods
mov
movsb
movsb
dec
testl
sub
mov
mov
xchg
mov
stc
arpl
cmp
hlt
aaa
dec
mov
push
mov
sub
shll
or
jg
data16
scas
lods
cwtl
das
cs
cmp
sub
mov
pushf
movsl
push
mov
lods
les
out
dec
mov
leave
stos
cltd
inc
mov
jl
mov
test
adc
icebp
fcom
aam
ljmp
std
notl
loopne
movsb
pop
jno
out
lcall
cld
jno
insl
cmpsl
pushl
in
call
sahf
pop
or
psubb
sbb
shll
adc
bound
clc
or
mov
adc
aad
add
dec
jnp
out
xor
ss
xorl
add
mov
mov
lahf
addl
andb
mov
aas
adc
jl
adc
inc
data16
lods
xor
cmp
fdivs
push
mov
addr16
js
push
mov
or
mov
ja
mov
int3
mul
mov
shrl
cld
pop
sarl
and
pop
sbb
jecxz
jg
jge
push
jae
or
movsb
mov
js
mov
scas
inc
jno
or
std
push
iret
add
dec
jmp
pop
adc
fwait
lock
xchg
call
scas
shll
mov
push
int
test
daa
jmp
push
iret
mov
fldenv
test
mov
mov
pop
push
mov
cli
inc
ljmp
push
adc
lods
fdiv
cmpsl
into
fwait
push
nop
sub
and
sub
mov
adc
out
in
test
jmp
inc
arpl
jb
push
xor
sub
pop
int
repnz
fstl
ss
jnp
mov
mov
or
mov
xorb
loopne
cmp
je
jge
cmp
sbb
stos
test
out
xchg
push
fiadds
cmp
pusha
xchg
sub
out
mov
push
jecxz
push
cmp
repnz
popa
pop
stos
mov
decl
xor
imul
mov
ljmp
fnstcw
xchg
mov
fists
pop
out
mov
add
or
arpl
cmpsl
ja
adc
sub
stos
cmp
or
jo
lret
xchg
fstl
lea
dec
mov
aad
ret
cmpb
lret
mov
push
mov
and
mov
mov
mov
add
ds
or
pop
imul
cmp
push
add
lcall
mov
shl
push
cmp
int
xor
sbb
sub
hlt
in
push
enter
add
dec
movsb
aam
dec
and
stc
push
data16
call
ss
xor
cmp
cwtl
out
cld
mov
inc
lock
push
dec
pusha
fstp
test
pop
mov
pop
mov
xchg
sbb
cmpsl
xor
sti
adc
mov
dec
add
nop
inc
and
jmp
aaa
frstor
cmp
adc
js
cmp
aam
adc
rclb
repz
and
lahf
scas
rcrb
icebp
imul
mov
xchg
clc
and
mov
sub
cmp
or
aad
andb
sbb
sbb
inc
jmp
shrl
push
fstps
pusha
out
push
test
fchs
ret
iret
scas
jecxz
gs
sbb
gs
jne
ficomps
jmp
bound
imul
inc
std
fimull
insb
mov
mov
insl
js
pop
cmp
add
mov
mov
dec
mov
mov
insl
pop
aas
ljmp
sti
mov
push
lret
mov
add
jb
dec
cmpsb
sbb
mov
mov
lea
cmp
rcrl
js
ljmp
mov
inc
add
popf
mov
stos
xchg
push
inc
pop
pop
adc
scas
push
jne
mov
loopne
jg
sbbl
fnsave
mov
dec
aas
mov
jle
mov
aam
rcrb
push
xor
pop
mov
dec
add
dec
popa
shl
insl
test
ret
xchg
jp
cltd
xor
or
movsb
scas
dec
inc
pop
push
cmpsb
loop
dec
push
push
rcll
xchg
pop
push
xor
sbbb
mov
dec
mov
or
jmp
pop
stos
sbb
pop
fcompl
mov
arpl
pop
dec
adc
repnz
ljmp
testb
outsb
enter
mov
mov
insl
lock
out
sbb
cli
pushf
ljmp
pop
fstpt
xor
mov
dec
cmp
loope
xchg
mov
shlb
stos
cld
fadds
and
lods
idivb
dec
enter
dec
or
mov
adc
xchg
xchg
imul
fsubr
mov
inc
jne
xchg
test
jle
loop
mov
js
loopne
cmp
addl
fbld
mov
xchg
pop
sbb
mov
hlt
shll
loopne
push
mov
arpl
les
ljmp
sbb
pop
push
js
fwait
xlat
mov
jle
adc
in
nop
pop
mov
push
movsl
rolb
jbe
lcall
xchg
xchg
mulb
ss
pop
les
pop
ja
and
movsb
dec
dec
pop
push
mov
jp
sbb
xor
pop
mov
mov
int
in
lret
push
cmpsb
push
xor
jmp
cmp
es
inc
mov
pop
and
shll
adc
clc
test
mov
inc
in
sub
xchg
daa
adc
sbb
sti
pushf
cmpsb
sub
push
lcall
jbe
mov
pop
sub
inc
clc
or
scas
mov
push
aad
sbb
mov
pop
fistpll
pop
out
popf
xor
out
addr16
stos
push
xlat
xchg
add
sub
test
add
or
icebp
arpl
dec
jl
mov
dec
movsb
xchg
out
inc
add
or
lock
add
pop
or
repz
aad
pop
fildl
lret
jb
push
dec
xor
mov
ss
or
push
fwait
mov
sbb
jno
sub
inc
stos
sub
bound
bswap
dec
or
das
roll
xor
mov
lret
mov
push
push
inc
lock
sbb
mov
sbb
aad
add
xchg
enter
daa
fmulp
push
dec
cmp
push
sbb
push
test
adc
mov
push
das
bound
xchg
pop
scas
shlb
sarl
mov
outsb
or
mov
pusha
in
pop
jne
mov
sub
xor
cmp
and
mulb
cmp
insl
xchg
mov
jmp
pop
sub
xor
push
scas
ret
lcall
fcoml
ss
out
cwtl
inc
inc
bsf
test
enter
push
mov
mov
xlat
sbb
push
inc
jmp
jecxz
push
push
insb
cmpsl
mov
pusha
adc
fcmove
sahf
ljmp
cmpsb
mov
icebp
add
mov
sub
xchg
push
std
cmp
inc
pop
loopne
push
cmpsb
inc
imul
clc
or
xor
sbb
test
jmp
push
sbb
mov
lret
dec
je
subb
call
cs
xor
push
stos
pusha
lock
ss
jne
arpl
je
pop
pop
dec
adc
jl
push
mov
push
movsb
lds
out
in
mov
pop
fisttps
adc
test
je
jno
hlt
loope
adc
xor
das
xchg
mov
lcall
and
push
mov
fldcw
inc
add
dec
lods
xor
pop
fdivr
and
scas
add
insl
xchg
shlb
imul
out
mov
push
fucomip
ret
xor
repnz
insb
mov
ret
ja
mov
aas
loop
scas
add
idivl
add
pop
lret
mov
sbb
movsl
in
xor
xchg
lods
in
aas
insl
mov
cmp
cmpsl
sahf
push
enter
test
loop
inc
test
jo
mov
push
or
pop
int3
les
pop
out
lcall
enter
scas
adc
aad
sbb
pop
enter
leave
cmpsl
scas
outsb
xchg
push
rclb
add
das
divl
arpl
pop
mulb
out
mov
lods
inc
mov
mov
xor
rorl
adc
in
sbbb
fwait
inc
pop
aaa
pop
sbb
pusha
and
insl
push
outsb
or
out
push
cmp
mov
test
int
lea
mov
rcll
fsubrl
mov
outsl
sub
imul
in
dec
and
mov
movsl
adc
aaa
repz
cmpsl
fisttpl
push
xor
test
inc
jecxz
mov
inc
cs
xchg
sub
mov
call
decl
inc
push
xchg
or
call
inc
out
push
in
popf
push
jmp
inc
popf
push
push
xor
out
enter
xchg
insb
out
rcrb
in
loop
xchg
jle
cmp
jmp
xchg
test
adc
cmpb
out
fdivl
sub
stos
testl
popf
mov
inc
out
mov
or
inc
gs
jb
mov
enter
int3
xchg
inc
enter
out
je
sbb
dec
fdivl
dec
mov
outsl
sbb
xor
inc
mov
jmp
dec
jmp
aaa
lcall
mov
fs
scas
into
push
dec
shrl
jno
or
xchg
xor
inc
sbb
mov
lea
mov
adc
sub
xor
or
bound
in
fdivrl
sub
adc
rcrb
out
push
jae
mov
mov
pop
xchg
xchg
fpatan
mov
pop
push
push
add
lods
je
mov
call
add
inc
xor
sub
sub
mov
bound
lds
or
pop
movsl
test
mov
in
sub
dec
cmp
mov
mov
into
pop
adc
out
sti
jbe
sub
aas
out
cmp
sbb
hlt
idivb
pop
cli
sub
push
int3
test
nop
sti
sbb
aas
adc
pop
ja
or
imul
mov
movsl
inc
ljmp
scas
ja
stos
lock
addr16
lea
inc
cmpsl
sahf
and
or
inc
ja
lds
out
inc
dec
sub
outsl
push
push
fildl
lods
sub
js
mov
stos
mulb
out
add
scas
or
call
xor
stos
inc
pop
popf
aas
inc
in
cmpsb
daa
daa
call
out
sub
xlat
jbe
adc
inc
call
fnstsw
stos
cmp
xchg
lods
cld
sbb
movsl
imull
inc
std
sbb
pop
lds
ret
fisttpll
lret
adc
fstps
or
movsl
out
xchg
flds
out
xchg
decb
sahf
xchg
pop
je
test
fisttps
mov
jle
das
lret
dec
adc
lods
loopne
mov
ja
stos
push
in
pop
jbe
jno
clc
adc
cltd
loope
repnz
and
popa
sub
fisttps
cmp
push
ja
test
ljmp
push
int3
pop
lret
mov
inc
fsubrl
xor
in
and
or
int3
icebp
insl
scas
aas
gs
jecxz
and
push
stc
adc
mov
adc
rorb
mov
ror
push
out
ljmp
stc
out
cmp
sti
stos
adc
fnsave
cwtl
cmp
xor
xchg
ja
push
dec
mov
pop
pslld
jecxz
inc
mov
sub
jge
sbb
maxps
pop
adc
loopne
imul
adc
cltd
jle
sbb
inc
sub
dec
add
push
add
and
sub
sbb
inc
push
in
mov
pusha
push
mov
xor
sbb
push
push
or
stos
and
cli
hlt
and
adc
je
xor
decb
inc
mov
stos
xchg
inc
inc
cld
loop
push
adc
fabs
iret
subb
inc
jl
push
mov
fsts
cld
cmp
or
mov
push
fs
cmp
mov
pop
mov
pushf
cpuid
mov
adc
jbe
sahf
push
idiv
push
test
iret
jg
inc
pop
imul
iret
stos
push
cmp
scas
or
push
mov
das
cld
mov
ficomps
pop
enter
cmp
xchg
fstps
add
enter
aas
mov
adc
dec
cmp
xor
dec
fmull
scas
push
stos
lea
lea
jl
xchg
mov
jecxz
leave
fisubl
hlt
mov
cmp
sbb
je
cmp
fsubrp
mov
das
push
push
jmp
sbb
bound
cltd
dec
test
mov
movsb
icebp
and
jge
inc
sub
or
out
xor
dec
inc
test
lret
adc
jge
test
pop
sub
inc
mov
inc
mov
clc
inc
jmp
popf
jl
dec
in
cmp
lods
por
fstl
mov
push
xchg
jnp
lods
jnp
es
ja
movsl
jnp
hlt
sbb
and
sub
fldcw
mov
jecxz
nop
xor
xor
xchg
mov
jne
scas
pop
cmc
repz
movsl
mov
call
cld
cwtl
mov
sbb
into
pop
imul
in
icebp
or
mov
fmull
leave
and
cwtl
push
push
sti
jb
add
imul
push
cmp
popa
addr16
push
stos
stc
adc
mov
and
cmc
mov
movsl
jae
and
cmp
sub
loop
movsl
icebp
or
rorb
ss
xchg
cmpsl
insb
leave
dec
mov
jne
je
nop
loope
cli
mov
cmp
cli
cmpsl
push
popf
movl
test
sbb
nop
push
xchg
push
fildl
pop
pop
loope
and
loop
push
dec
push
clc
ret
inc
daa
sub
movsl
lods
xchg
loop
or
data16
inc
fsubr
push
std
lock
dec
jle
and
adc
push
add
into
out
into
fsubs
fnsave
mov
jnp
xchg
mov
cmpsl
sbb
dec
cmp
inc
adc
ss
sub
fwait
mov
push
lods
cmpsl
sub
bound
rclb
arpl
mov
push
and
cmp
xchg
mov
xor
jae
mul
clc
dec
mov
jno
push
mov
sahf
inc
push
imul
and
ds
mov
dec
cmovge
aaa
and
cmc
xor
ret
cltd
adc
jg
cs
xor
popf
jl
mov
mov
mov
stos
testl
fwait
jl
lea
outsb
pop
xchg
sub
add
and
sub
decb
es
sub
add
sub
or
pop
xchg
arpl
xchg
mov
fmul
pop
xor
repnz
lods
in
sub
jmp
stos
adc
dec
test
pop
outsb
push
lods
adc
push
mov
mov
loop
cmp
inc
add
addr16
ds
test
hlt
mov
out
mov
jbe
icebp
bound
out
test
movsb
sub
push
loopne
test
cld
in
outsl
testl
outsl
or
mov
scas
and
inc
push
sub
fiadds
inc
dec
mov
sub
adc
cld
fwait
cmp
cmp
shrl
push
sub
xchg
jp
les
out
sbb
pop
jbe
xchg
ss
dec
in
rclb
or
mov
shr
mov
adc
sub
daa
or
xchg
cmpsb
inc
mov
testl
shl
jg
mov
pushf
mov
int3
mov
in
lods
cld
data16
xchg
gs
lea
adc
jnp
xor
shlb
inc
scas
adc
loopne
cmpsl
dec
int3
insb
lcall
jecxz
mov
call
outsl
int
fidivrl
xchg
movl
mov
js
mov
outsb
pop
dec
xchg
cmp
push
addr16
sbb
mov
je
aad
leave
test
and
add
mov
and
pop
inc
in
cmp
loop
ljmp
rcrl
and
mov
mov
pop
push
les
dec
call
push
add
sti
mov
mov
mov
out
push
adc
cmp
ret
pop
push
mov
xor
sbbb
sti
adc
adc
or
outsb
icebp
ret
repz
pop
jnp
fwait
mov
fwait
repnz
data16
push
mov
mov
inc
scas
imul
imul
xor
xor
push
mov
pop
nop
pop
push
or
pop
cmpsl
mov
xchg
int
call
xchg
addb
mov
pop
es
addr16
pop
repz
not
jl
scas
rorb
gs
mov
pop
loop
fdiv
popa
inc
ljmp
and
loop
mov
inc
jmp
lods
idiv
cs
xlat
adc
out
insb
ret
pop
or
xor
lcall
loopne
cmp
cmp
punpckldq
cmpsb
xchg
fcoml
mov
dec
arpl
add
push
inc
dec
sub
roll
in
inc
jo
ds
jecxz
push
dec
xchg
into
dec
add
push
insl
aaa
fildl
jle
je
arpl
aas
fwait
test
cld
std
iret
lret
sbb
or
inc
fisubrl
and
pop
bound
pop
lret
sbb
fwait
jns
lds
cmp
shlb
push
adc
fidivl
lods
add
xchg
push
dec
call
or
mov
xchg
dec
ficompl
pop
popa
sub
mov
adc
mov
fs
test
adc
sbb
stos
outsl
test
mov
test
push
lods
shr
jecxz
dec
test
adc
mov
add
fcomi
mov
cmp
mov
push
sti
cmp
inc
fstps
jle
jb
call
and
insb
std
xor
mov
pop
cmpsl
add
sub
jp
filds
jle
jp
inc
mov
or
sub
loopne
sub
cli
aam
push
das
pop
outsl
hlt
nop
inc
jmp
mul
cwtl
push
out
test
popa
xchg
sbb
sahf
pop
in
push
xchg
cwtl
int3
int3
movaps
cmp
mov
fs
push
pop
adc
cmp
jmp
lods
adc
add
mov
jecxz
add
int
andb
pop
lods
add
and
test
in
push
testb
mov
insb
bound
test
xchg
outsb
subl
test
pop
or
cli
mov
test
mov
popf
test
cmpsb
out
out
cmp
dec
out
lret
mov
lret
mov
add
mov
test
dec
loope
pop
cmp
cmpsb
movsb
dec
dec
shlb
mul
test
int3
fs
mov
int
test
les
or
push
xchg
repz
jle
mov
cmp
pop
pop
or
loop
add
and
dec
fidivrl
and
clc
mov
mov
andl
imul
int
xor
push
cmc
jno
into
rorl
xchg
or
js
js
add
sub
jmp
ret
js
push
sbb
xchg
in
jle
jnp
call
call
or
mov
sbb
aam
mov
xor
push
push
sub
jmp
aam
mov
int3
mov
rclb
mov
add
lea
lods
dec
fmull
test
in
mov
jmp
mov
and
ljmp
add
incl
xchg
clc
sbb
movsl
out
pop
xor
mov
loop
dec
andb
jmp
or
insb
mov
js
xor
xor
in
jp
jno
push
jmp
mov
stos
pop
mov
scas
adc
cmp
enter
sub
mov
pushf
inc
mov
in
or
add
loop
xchg
cld
mov
popl
fdivl
dec
xor
mov
pop
aam
mov
push
and
aas
dec
or
push
movsb
movsb
mov
test
pop
stos
xor
ja
sub
mov
sbb
mov
fimuls
sarb
in
ret
dec
jmp
lods
inc
push
push
fstpt
fsubrs
je
dec
sbb
push
xor
or
lret
sbb
seta
mov
fmul
push
jbe
mov
pushf
cmpsl
add
fstpl
insb
lret
add
je
rorb
inc
mov
enter
push
or
stos
pusha
xchg
fisttps
cmp
adc
pushf
push
dec
push
cmp
adc
out
push
sub
mov
xor
ficomps
xor
negb
fcompl
cld
and
imul
stc
cmpsl
push
jb
pop
adc
les
loop
cmp
lret
mov
cmp
push
aam
in
lret
cwtl
das
jge
jecxz,pn
mov
fnstsw
mov
insb
fsubrl
int3
cmpsb
and
lock
xorb
jmp
nop
int
std
fsub
jp
cmc
repz
daa
pop
repz
cmp
xchg
xchg
adc
xchg
data16
jo
rcrl
lods
mov
adc
fs
push
fwait
roll
andb
mov
loop
mov
xchg
push
lret
cmp
mov
or
xchg
fwait
adc
pop
fs
fwait
adc
cmp
arpl
cmp
sub
sahf
push
test
dec
inc
fwait
xchg
jge
pop
jmp
js
mov
loope
imul
aam
mov
je
push
leave
cld
movsl
call
sbb
or
je
mov
push
insb
ret
jp
dec
imul
jle
les
shrb
pop
jecxz
or
clc
testb
nop
cmp
push
xchg
mov
les
imul
fs
pop
xor
mov
push
xlat
fdivr
xchg
push
sub
pop
stos
aad
leave
cld
or
daa
imul
je
test
adc
movsb
xor
hlt
mov
adc
bound
sub
sbb
xchg
mov
movsb
gs
or
jl
or
pop
rorb
dec
xchg
pop
iret
aad
mov
std
scas
fmuls
push
jg
fdivl
inc
inc
in
mov
out
push
lcall
sbb
mov
sbb
pop
sub
pusha
cwtl
fmul
dec
cmp
xchg
das
es
fcomps
mov
movsb
mov
sub
ljmp
push
cs
dec
inc
adc
popf
xor
rorl
adc
push
outsl
hlt
cwtl
pop
sub
jl
call
mov
lock
ficoms
mov
stos
addb
lcall
push
sbb
test
call
jg
sahf
jge
pop
daa
and
mov
cmc
adc
mov
xor
mov
sbb
popf
mov
cld
cmpsb
inc
enter
rcl
mov
xchg
nop
mov
inc
int3
imul
bound
arpl
imul
loopne,pt
shrl
mov
adc
mov
cvttps2pi
push
into
push
mov
test
xor
sub
jl,pn
xchg
pop
std
jle
jp
ret
sbb
fdivs
mov
test
lret
push
or
mov
daa
lcall
into
mov
mov
lds
adc
xchg
pop
repnz
rclb
out
add
repz
enter
mov
dec
loop
je
addl
hlt
out
lock
jmp
xor
dec
outsl
repnz
push
and
jg
sbb
sarb
add
mov
mov
loopne
inc
pop
jnp
sahf
dec
leave
push
sub
incb
das
push
cs
in
or
and
mov
jp
loop
incb
cli
sub
imull
mov
imul
cmc
popa
mov
into
inc
mov
push
out
and
shlb
add
dec
dec
cmp
dec
mov
mov
mov
aam
jb
lret
mov
xchg
fs
lret
std
fisttps
mov
insl
sub
mov
jbe
cs
pop
xchg
mov
aam
cmc
mov
inc
ret
imul
repnz
jo
sti
je
shlb
push
xchg
shll
lahf
movsb
rolb
imul
addr16
enter
loopne
xor
jns
mov
shll
xor
cmp
stos
or
sarb
aas
mov
add
cmp
sbb
xchg
rcr
mov
or
mov
dec
jmp
lea
mov
push
pop
add
les
push
lock
testl
lret
xchg
push
ds
int3
test
aam
fwait
and
filds
mov
dec
and
arpl
xor
mov
in
out
and
lret
add
int
cmp
adc
js
xchg
push
mov
lcall
lock
pop
inc
pop
add
ret
xchg
cli
jb
js
xor
stos
jl
sbb
pop
lods
adc
inc
cmp
icebp
inc
mov
sti
pop
mov
int3
or
movsb
push
fiadds
add
jns
push
int3
push
cltd
psubsw
xor
push
icebp
fs
mov
testb
fidivl
lret
push
jmp
stc
aas
dec
dec
clc
push
cmpsb
dec
cmpsl
add
dec
xchg
lds
mov
dec
mov
fimuls
int3
mov
sti
pop
mov
inc
jle
leave
jg
dec
add
add
ret
mov
push
inc
xor
jg
pusha
or
int
and
push
jge,pn
cmp
dec
imul
inc
jns
cmp
dec
and
cld
in
rorl
or
pop
daa
fstps
js
pop
in
mov
stc
jns
cli
aad
sub
incb
into
stc
sarl
mov
xchg
sub
imul
mov
mov
ja
adc
push
push
mov
adc
xchg
add
adc
inc
stos
adc
mov
das
ficoml
sti
jb
xor
mov
sti
shrl
test
xchg
cmc
mov
aam
fs
sub
adc
cmp
paddd
push
js
enter
sahf
xor
cmp
mov
mov
clc
lahf
sub
and
test
lea
data16
push
mov
popa
pop
mov
in
popa
pop
inc
aas
bswap
jbe
aas
mov
push
mov
andb
in
push
ja
scas
mov
push
xchg
push
icebp
shrl
fcomps
jnp
pop
xchg
cmp
iret
movsb
std
xchg
out
rorb
mov
sbb
xor
js
xchg
push
pop
push
imul
sysenter
push
or
lock
inc
push
xchg
clc
sub
les
mov
jg
mov
jmp
ret
js
negb
hlt
mov
sbb
xor
xchg
clc
movsl
mov
or
jne
insb
mov
aas
add
jle
fisttpl
mov
mov
daa
sahf
sub
lods
inc
pop
sbb
push
add
xor
add
mov
andl
inc
lock
in
xchg
mov
xchg
dec
rolb
cli
int3
mov
xlat
addr16
std
mov
push
mov
arpl
movsl
call
pop
inc
push
push
sbb
adc
imul
mov
adc
pop
in
mov
and
decb
sub
xor
push
mov
sub
sti
pop
jbe
nop
cli
and
jns
jnp
cmp
ss
jp
dec
adc
aas
lods
les
mov
pop
fisttpl
lock
imul
pop
mov
adc
and
xor
pop
adc
in
out
push
popf
dec
call
out
mov
mov
shrl
jae
das
xor
shlb
jl
addb
sub
addr16
dec
addr16
pop
aad
cmp
pop
lret
in
adc
daa
stos
pushl
or
shll
nop
ficompl
addb
divb
test
out
fists
push
jecxz
xchg
ljmp
mov
xor
and
lea
scas
js
sbb
aaa
sbb
outsl
aas
loop
loope
lcall
cmpsb
sub
daa
insl
mov
fdivrl
stc
add
push
int3
hlt
add
movsb
cmc
mov
add
call
out
testl
push
insl
pushf
push
inc
outsl
xchg
andb
arpl
sbb
mov
sbb
pop
addr16
cmpsb
stos
mov
pop
mov
mov
push
inc
into
jge
sbb
mov
sub
adc
and
xchg
jmp
pop
mov
mov
xor
jb
outsl
add
push
fimuls
outsb
adc
push
sub
adc
cwtl
add
cvttps2pi
sub
pop
adc
dec
loopne
sbb
scas
ljmp
addr16
dec
dec
push
xor
push
imull
insl
cmpsb
mov
faddp
xchg
add
insb
fldl
daa
push
stos
and
push
out
pop
into
sahf
out
lahf
pop
daa
fldenv
cli
orb
dec
fistpl
pop
mov
test
rcl
cmp
js
filds
sbb
adc
insb
and
lods
es
dec
xor
mov
cmp
push
mov
jp
stos
pop
cld
out
inc
pop
add
pop
mov
xor
sbb
xchg
and
icebp
mov
jl
arpl
popf
mov
hlt
subl
push
in
push
inc
adc
icebp
sti
dec
jb
push
loopne
cmp
outsb
mov
jp
pushf
and
or
push
dec
adc
dec
adc
mov
xchg
dec
das
out
adc
push
sub
pop
mov
xchg
test
clc
push
adc
call
dec
push
pop
rcll
add
lock
seto
mov
inc
call
cmc
mov
fdivrs
jne
adc
fs
sub
mov
shlb
dec
sbb
mov
mov
idivl
jge
in
mov
push
dec
jmp
cli
shr
push
mov
dec
dec
in
or
ret
lcall
dec
daa
sbb
pushw
decl
aam
dec
and
out
and
xchg
fidivl
fidivrl
mov
insb
data16
and
loope
cmc
push
xchg
into
imul
push
mov
sbb
mov
addl
push
sub
push
fisttpll
dec
mov
or
jae
or
cli
inc
cmc
iret
inc
cmp
in
mov
adc
lods
in
rorl
out
test
pop
push
sahf
sarb
in
dec
enter
pop
mov
dec
fists
mov
lods
test
lret
scas
xor
cmp
movsb
js
out
ret
js
insl
or
xchg
stos
les
pop
in
gs
jmp
lods
jae
fwait
push
fs
in
ljmp
cmpl
outsl
mov
mov
sub
lahf
dec
mov
je
fldt
sub
mov
stos
pop
ret
cld
lret
cmp
hlt
or
lcall
imul
sub
in
sub
cmpsb
sbb
sbb
pop
fldt
inc
fucomi
lea
arpl
stos
aam
mov
xchg
dec
sub
and
sahf
in
or
mov
adc
cltd
adc
mov
and
or
mull
add
jb
fwait
pop
adc
dec
ficomps
pop
fcomip
cltd
pushf
iret
pop
scas
mov
pop
jbe
outsl
xor
stc
push
or
and
pop
sub
adc
adc
mov
and
fistpl
or
xlat
pop
cmpsb
sahf
rclb
inc
andb
pop
in
gs
aaa
sub
pop
adc
mov
jle
inc
pop
cmpsb
pop
xor
fcomps
sbb
cwtl
aas
dec
repz
sahf
push
dec
mov
mov
push
push
sub
sbb
push
sub
fnsave
lcall
or
ja
cwtl
xchg
sbb
dec
sti
mov
mov
arpl
or
cli
dec
add
mov
mov
push
xor
push
add
rorl
jns
cwtl
cmpsl
xor
cwtl
push
inc
lock
lea
imul
sbb
repz
and
repnz
cmc
sub
out
and
add
ficomps
orl
out
sub
vpmulhw
sbb
sbb
jae
scas
lcall
in
lar
push
mov
mov
ret
cmpsb
pushl
nop
cmp
mov
ror
repnz
pusha
cmpsl
lcall
xchg
ret
adc
scas
shlb
sbb
xchg
enter
jno
xor
mov
test
dec
ds
fstpl
lods
lods
mov
shl
and
pusha
adc
jae
cli
xchg
sbb
and
xchg
cli
mov
adc
jns
push
add
xchg
call
movsl
ficompl
jp
pop
pop
pop
adc
fwait
sbb
mov
push
test
push
sbb
fimull
repz
add
pushf
cltd
sub
fiaddl
push
sbb
imul
jns
faddl
mov
bound
pusha
imull
daa
sub
scas
ret
xchg
lods
inc
jecxz
fdivrl
mov
repz
push
sub
out
and
inc
aaa
cmc
cwtl
cmp
je
inc
imul
sbb
dec
or
outsb
jns
dec
cmpsb
dec
mov
fcmovbe
dec
mov
cmp
cwtl
addr16
jl
add
jl
cmp
data16
xor
inc
cwtl
push
pop
mov
push
sbb
xchg
mov
or
mov
sbb
pop
sbb
sbb
or
inc
lea
push
mov
repz
inc
push
rclb
add
jo
call
out
mov
scas
icebp
dec
orb
outsl
fisubrl
mov
jo
cs
pusha
aam
test
frstor
ljmp
mov
xchg
in
in
push
or
cmp
cmp
movsb
inc
dec
in
in
lds
mov
mov
mov
int
adc
ljmp
mov
push
lahf
xchg
ficompl
outsb
call
add
dec
push
std
ds
js
mov
push
loope
dec
jae
scas
jo
loope
out
cli
add
int3
sbb
pop
inc
jb
pop
pop
lock
data16
enter
jne
mov
add
fildll
pushw
cmpsl
push
sub
pop
jg
je
mov
insl
mov
sbb
mov
push
xchg
push
push
add
mov
xchg
cmp
mov
push
mov
outsb
pop
in
sbb
sub
mov
pop
mov
int
pop
cmp
sbb
cmp
xchg
faddl
and
push
lret
leave
arpl
rcrl
movsb
daa
lods
push
pop
xchg
sub
pop
test
aam
rclb
shrb
enter
jbe
sbb
fadds
fcompl
xor
push
inc
pushl
cli
fsubr
es
test
push
test
jo
mov
sbb
sub
dec
sbb
cmp
hlt
fwait
iret
pop
sbb
xchg
sub
outsb
cltd
and
sbb
sbb
sbb
pop
test
in
out
adc
push
mov
or
out
insl
testl
inc
stos
xchg
xor
add
xchg
repz
or
cmpsb
cmp
pop
adc
mov
stos
movsl
mov
cld
jmp
repz
loopne
enter
sub
sbb
and
dec
mov
or
xchg
out
sarl
xor
aaa
pop
dec
js
stos
dec
mov
mov
xor
inc
mov
arpl
test
or
pop
jo
jmp
cmp
aas
vunpcklps
dec
pop
fmul
cmp
rol
outsl
popf
out
cld
lahf
aad
movsl
push
sbb
imul
cmp
scas
sub
push
je
mov
mov
push
out
cmpsl
fcmovne
cmpsb
push
cmp
mov
fisttpl
outsb
popf
fisttpl
insl
out
sub
cmp
sub
fnstenv
xor
inc
adc
neg
push
mov
sbb
push
lods
or
jecxz
mov
or
movsb
inc
and
xor
mov
lret
push
sbbl
adc
hlt
mov
or
and
mov
add
jg
fstpl
mov
xchg
lea
or
dec
inc
sbb
sub
mov
stc
fwait
jnp
lods
xchg
das
loopne
adc
sub
cwtl
in
adc
inc
movsb
push
bound
pop
stos
stos
add
in
mov
push
dec
and
mov
jns
in
data16
dec
out
xor
test
loop
jnp
or
mov
les
jecxz
jcxz
sti
das
popa
pop
push
jmp
pop
test
bound
enter
dec
xlat
jl
call
jb
xor
push
inc
fs
sbb
and
aam
data16
rcrl
ret
push
fstps
dec
loopne
pop
mov
cmp
or
jecxz
xchg
icebp
jnp
mov
push
and
pop
stos
out
jecxz
lods
fsub
jo
inc
mov
dec
dec
test
pop
mov
mov
stos
test
lods
xchg
push
inc
mov
inc
call
inc
fcomps
shrb
lret
pop
and
jle
js
mov
cmpsb
fdivrp
inc
mov
sbb
lods
cmp
pop
fucomi
pop
cmpsl
lods
hlt
sub
xlat
icebp
aad
lahf
pop
enter
add
jg
xchg
fstpl
stc
inc
push
jnp
push
jmp
push
inc
fdivrl
inc
mov
xchg
sarb
xor
js
xor
aas
and
rcr
pop
mov
xchg
leave
loop
in
data16
or
loopne
divl
pushf
inc
stos
fstl
repz
inc
in
inc
mov
mov
push
lret
stos
test
cmpsb
push
out
xor
fwait
clc
inc
or
cmpsl
jl
aaa
mov
mov
cmp
cld
push
and
dec
out
or
push
mov
inc
sbb
or
lds
sub
push
adc
lahf
jmp
out
dec
lea
sub
loopne
insl
outsb
ficomps
cmp
pop
sub
jle
xchg
cmp
inc
and
xlat
int3
rcll
je
mov
mov
cld
das
inc
pop
imul
fs
ds
xor
adc
xchg
cmp
scas
aam
dec
xchg
pop
test
lods
mov
sbb
dec
call
lds
daa
mov
mov
test
lods
mov
jmp
cmpsl
dec
jo
lods
mov
xor
adc
mov
cli
scas
mov
mov
sbb
daa
mov
dec
xor
fcomps
push
arpl
xchg
sbb
sub
or
mov
add
xchg
xchg
pop
cmpsb
pop
xor
lcall
jecxz
out
loop
add
iret
daa
push
adc
sahf
in
pop
mov
data16
in
mov
cmp
iret
push
mov
decb
jmp
mov
mov
shl
jp
daa
lods
fmul
adc
push
imul
dec
xchg
mov
or
adc
push
stos
hlt
dec
inc
xchg
pop
or
or
in
jl
jns
push
loop
push
test
cmpsb
push
popl
jecxz
pop
rcl
fchs
fstpt
aam
neg
mov
cmp
or
cwtl
and
cs
test
loop
stos
pop
aam
and
cltd
push
and
xor
push
imul
push
xchg
inc
jg
inc
das
pop
sbb
scas
mov
pop
mov
decl
dec
hlt
call
jge
inc
outsb
jp
iret
cmc
mov
mov
sbb
xchg
inc
push
xchg
push
nop
pop
push
cmp
leave
jnp
and
stos
dec
mov
movsb
test
hlt
mov
add
nop
int3
xchg
push
movl
adc
gs
pop
inc
cmpb
mov
repz
push
lock
jp
popl
inc
sub
nop
incb
cmp
insl
cs
arpl
mov
cmp
inc
scas
push
sbbl
movsb
cmp
lds
arpl
aam
push
out
and
or
nop
addr16
xchg
addl
and
add
lret
into
dec
add
cmp
sbb
out
faddl
addb
xchg
cmp
clc
fldl
nop
fistpl
nop
loope
shrl
fistps
fistl
sub
xor
xchg
jg
adc
push
and
mov
cmp
mov
jb
sbb
mov
ss
into
mov
ss
mov
push
nop
jg
loopne
push
pop
and
mov
daa
pusha
mov
enter
fildll
cld
in
adc
sti
add
fadds
loopne
cmp
repnz
nop
stos
repz
cmp
pop
stos
cmc
addr16
sub
ljmp
add
push
add
mov
dec
arpl
test
mov
sahf
sbb
xchg
cld
nop
ljmp
in
push
je
jg
push
mov
loope
sbb
cmp
imul
es
cld
dec
xchg
aaa
aam
jg
cld
repnz
and
dec
mov
out
and
or
lcall
mov
icebp
cmp
sub
pusha
dec
dec
mov
dec
fmull
sbb
cmp
fdiv
loop
xor
xorb
jns
mov
insb
stos
icebp
xor
sub
push
push
cmp
repz
ja
jmp
dec
dec
insb
jmp
mov
xor
mov
out
dec
mov
popa
leave
popa
cmp
mov
jnp
jmp
fwait
xchg
push
xor
ja
add
jb
inc
pop
sbb
pop
and
mov
aam
jg
imull
repz
movsb
or
gs
mov
mov
or
dec
add
jbe
fiadds
arpl
test
adc
test
es
push
stos
icebp
sbb
and
fcmove
xchg
lods
xchg
fsub
fcompl
out
pop
mov
stos
js
test
mov
pop
lcall
push
nop
int3
sub
inc
loope
aam
mov
fwait
movsb
cmp
lds
arpl
mov
fcmovbe
sbb
xlat
dec
jmp
ss
aam
sbb
rorl
nop
dec
outsb
add
pop
adc
push
pop
into
cmpsb
sbb
fsubrp
pop
repz
xor
xchg
and
insb
mov
mov
push
test
mov
push
lods
lret
push
mov
stos
cltd
xlat
iret
mov
enter
fstpt
fisubrs
rcll
push
fdivrs
insb
nop
out
mov
rorb
arpl
jns
in
sarb
cltd
push
in
pop
out
sbb
ret
hlt
repz
fdivl
push
cld
les
inc
pop
nop
sub
cmpsl
in
mov
mov
jb
push
loop
fwait
dec
cld
xchg
sub
fisttpll
push
mov
aam
mov
pop
stos
jae
paddw
dec
ss
ljmp
pop
popf
outsb
ljmp
pop
dec
sub
push
xchg
out
mov
inc
call
push
mov
movsb
mov
out
fnsave
fs
xor
shll
ljmp
sub
mov
mov
or
mov
cvtpi2ps
push
leave
push
sbb
push
in
in
movups
stos
and
dec
movsb
je
shll
dec
jmp
cmp
outsb
cmpsb
movsb
pop
inc
mov
adc
les
int3
int
or
push
mov
xchg
sub
push
addr16
int
imul
or
fcoml
lahf
sbb
aad
cmc
movaps
push
fisttpl
or
enter
mov
loopne
push
cld
pop
jle
movsl
adc
faddl
push
lods
add
jmp
push
push
out
in
test
scas
push
fcmovnbe
pop
jo
loop
or
or
mov
hlt
mov
add
into
in
mov
inc
int
ror
call
in
inc
test
js
cwtl
mov
hlt
xor
add
test
insl
das
iret
mov
push
xor
lods
enter
in
add
dec
or
rorl
mov
dec
lret
or
out
fcoml
mov
call
push
cli
xor
rolb
ret
push
faddl
sub
shrb
mov
call
push
in
daa
jl
xchg
lods
push
int3
lretw
adc
cmc
shrl
sub
push
sub
mov
adc
movl
sti
lret
test
dec
inc
push
jno
pop
sti
rolb
jle
mov
lahf
inc
sub
sub
shr
cmp
mov
or
push
adc
mov
mov
pop
mov
sub
inc
fnstsw
xor
sub
lock
in
push
sub
insl
dec
ficoml
or
inc
mov
mov
or
fyl2xp1
loopne
pop
mov
or
cmp
cmpsb
dec
mov
insb
push
inc
clc
loop
addr16
adc
pop
add
lahf
bound
pop
dec
cli
cmpsl
imul
mov
mov
push
in
adc
fidivl
mov
mov
jge
sub
pop
inc
mov
rol
mov
jg
mov
and
pop
clc
sub
xchg
xorb
stc
ds
pop
addr16
dec
popa
jns
pop
add
sub
dec
xor
mov
aam
pop
push
or
sbb
das
jbe
pop
pop
pop
lcall
insb
insb
mulb
lods
dec
mov
mov
pop
fdivr
out
mov
into
pop
outsb
jle
popf
roll
imul
or
sbb
add
iret
dec
sahf
sub
dec
mov
sbb
fnstenv
inc
mov
mov
mov
add
shlb
fbstp
adc
repz
xor
and
mov
mov
mov
in
fistl
icebp
mov
dec
add
fs
inc
mov
fmull
dec
mov
jg
cld
test
inc
icebp
mov
mov
cmc
adc
jnp
test
sub
inc
xor
ficompl
insb
fwait
hlt
inc
les
scas
sub
pop
imul
push
movsb
inc
in
mov
sti
dec
push
xor
xchg
subl
aad
push
lods
fnsave
sub
movsb
mov
js
mov
test
ret
mov
sbb
push
sbb
lods
ss
stos
push
or
sbb
outsb
data16
mov
scas
push
shrl
pop
aam
pop
shl
adc
adc
inc
push
gs
je
cmp
xor
iret
mov
in
rorl
xor
mov
data16
mov
int3
push
imul
add
dec
gs
or
xlat
std
lds
inc
pusha
std
or
mov
xlat
lahf
jmp
pop
sbb
pop
jb
enter
pop
inc
rclb
push
xor
in
cmp
push
loopne
ja
out
and
aad
nop
inc
fcmovu
push
pushf
out
pop
rorb
sub
frstpm(287
sbb
push
cmpsb
clc
hlt
or
sub
loopne
cmp
cmp
adc
ljmp
inc
mov
xchg
int
sub
sbb
jbe
jmp
pop
sub
xchg
add
int3
loope
pop
or
xchg
cmp
jb
aad
push
xchg
add
or
mov
into
pop
mov
sbb
aad
outsl
sub
or
addb
leave
int3
xchg
fwait
cltd
sarb
sub
popa
out
inc
mov
or
cmp
popa
sub
cmp
imul
mov
hlt
movsb
pop
xchg
lret
sahf
mov
mov
fdivrs
shl
mov
sti
cmp
scas
imul
sub
lahf
mov
jae
xchg
mov
idivl
test
xor
pop
cli
sub
jl
push
jmp
sbb
fisttpl
pop
sub
adc
and
or
fwait
mov
sub
cmp
je
xor
mov
mov
in
insb
inc
movl
sub
cmp
pop
add
pop
add
movsl
jmp
push
mov
push
sahf
hlt
or
enter
jmp
xchg
adc
xor
cmp
inc
add
or
mov
fists
sahf
and
jae
pop
test
sub
xchg
sub
inc
sub
test
leave
jecxz
insl
hlt
adc
out
imul
out
cmp
cmpsl
ret
push
cmpb
jbe
repnz
fwait
ds
dec
sbb
xchg
shl
pop
xchg
ss
es
lcall
sbb
rorl
rolb
sahf
ljmp
jl
pop
ljmp
call
in
sbb
or
pop
insl
xor
pop
pop
loop
shll
xchg
mov
notl
adc
lods
push
int3
mov
pop
je
cmp
mov
ss
cmp
add
lea
fdivp
or
ret
mov
mov
dec
jns
daa
pop
cmc
movsb
mov
cli
mov
outsb
into
lret
cmp
xchg
xadd
mov
jns
loope
or
in
shlb
call
pop
out
mov
or
jge
fsubl
cld
imul
dec
loopne
jge
jp
xchg
cmp
outsb
std
fsubl
or
in
or
fwait
in
add
lea
mov
loopne
push
popa
xchg
adc
push
adc
popa
arpl
hlt
mov
rol
popa
sbb
in
test
arpl
clc
adc
push
mov
pop
bsr
shr
faddl
cmp
aad
dec
aas
xor
adc
dec
or
ret
pop
xor
lock
jae
cmp
or
stos
xchg
jmp
inc
je
lcall
scas
hlt
xchg
std
mov
cmp
push
xor
bound
inc
mov
shr
sbb
jmp
mov
xchg
jg
inc
sbb
into
bound
pushf
mov
xor
fldcw
aas
pushw
aam
test
mov
cld
loopne
inc
into
mov
pop
and
mov
fimull
xor
push
jl
xchg
or
testb
mov
mov
movsb
mov
sbb
in
xchg
or
mov
fcompl
icebp
imul
stc
insb
iret
in
push
pop
push
in
add
dec
dec
fcomi
and
out
mov
push
jg
nop
es
stos
xchg
mov
mov
pop
cmp
push
rcl
mov
popa
adc
cwtl
lahf
or
pop
sarb
pop
ljmp
push
andb
cltd
adc
cmp
pop
mov
out
sub
outsb
mov
and
dec
movsl
dec
test
out
movsl
jns
cmp
push
dec
jae
or
cmp
sub
pop
scas
dec
cmc
mov
pushf
ljmp
and
andb
cwtl
pushf
and
out
adc
fcmovnu
es
push
sti
pop
push
js
test
stos
pop
in
sub
hlt
jmp
jp
mov
push
lods
or
adc
test
popa
lahf
cmp
les
xchg
mov
pop
push
js
int
scas
cli
xchg
jecxz
push
sub
outsl
xlat
and
test
fsubl
dec
push
and
insb
call
adc
js
sbb
popl
xchg
and
cli
into
fbstp
lret
dec
mov
sub
mov
jns
insl
rcll
cmp
pop
lods
out
enter
mov
push
push
fisubrs
cmp
dec
xchg
cmp
mov
bound
es
aam
or
inc
mov
adc
cmpb
xchg
cs
in
pop
call
call
dec
jl
test
pop
and
mov
pop
adc
push
adc
jns
push
lret
loop
in
repz
adc
pop
les
fs
xchg
mov
cltd
cld
and
jl
ficoml
fs
lds
or
inc
popa
jae
sub
lret
leave
push
fcoms
nop
adc
leave
jl
lods
imul
jge
lods
arpl
pop
and
xchg
in
pop
loopne
into
test
shrl
cmc
pop
xchg
lahf
inc
xchg
xor
mov
push
in
jo
outsl
shll
adc
xor
lcall
jne
gs
mov
lret
in
adc
stc
lods
lock
outsl
cli
test
jp
popf
gs
pop
fisttpll
pop
ds
lret
inc
imul
mov
mov
mov
xor
lea
inc
sbb
sbb
adc
mov
ss
add
mov
movl
das
sub
in
orl
mov
sahf
das
fld
pop
mov
testl
mov
xor
inc
sbb
movsl
sub
jbe
sub
xchg
arpl
ficoml
lock
insl
stos
pop
clc
sub
jmp
mov
push
sti
mull
jg
or
mov
xor
outsb
mov
sbb
xor
mov
nop
pushf
fildl
sbb
and
js
dec
enter
repz
mov
popf
xchg
mov
cltd
xchg
push
data16
dec
mov
ljmp
inc
into
mov
test
fildl
jae
dec
cmp
push
or
fwait
cmc
push
lea
or
inc
ja
verw
andps
loopne
scas
mov
sbb
pop
hlt
cs
jae
and
xchg
out
push
adc
je
jge
fwait
sub
add
stos
mov
iret
aam
jno
iret
call
jno
mov
pop
adc
mov
es
push
outsl
data16
mov
mulb
cmp
imul
pop
sbb
fcomip
lea
shl
sub
fs
pop
adc
fists
imul
test
clc
pop
adc
aas
movsb
jmp
xor
test
adc
movsb
ljmp
daa
sahf
aas
adc
fmul
psubb
out
push
inc
or
pop
dec
cmp
or
movsl
cwtl
jo
jmp
jmp
or
insb
cmp
add
rcrl
lods
enter
xchg
xchg
and
andb
insb
pushf
sbb
or
lcall
mov
cs
fwait
rcl
das
mov
inc
daa
pusha
push
faddl
or
mov
jmp
arpl
fistl
xchg
xchg
pop
mov
jmp
ret
and
mov
pop
ss
push
scas
dec
dec
arpl
fs
push
icebp
xchg
sbb
push
rcr
sahf
jge
sbb
into
push
sub
enter
inc
pusha
push
or
leave
lods
sahf
fldenv
repnz
testl
hlt
icebp
inc
mov
cmc
int3
xchg
idivl
in
push
jmp
orb
or
adc
pop
aaa
in
and
adc
mov
jmp
movsl
aas
adc
sub
mov
and
loope
dec
idivb
int3
les
cli
les
sbb
les
dec
jmp
dec
lods
inc
or
fsubl
dec
push
cmp
jmp
test
jp
pushf
jge
push
mov
ret
sub
lcall
loope
or
pop
push
or
outsl
incl
mov
mov
pop
das
adc
mov
jbe
or
adc
jno
jecxz
push
cmovle
into
bound
data16
stc
push
push
push
or
xor
mov
xchg
xor
jmp
in
mov
cmpsl
mov
jge
cli
addr16
mov
push
cmp
mov
aas
cmpsl
ds
loope
hlt
mov
xlat
inc
inc
pop
leave
inc
push
stc
dec
rcrb
test
iret
lahf
xchg
lods
outsb
imul
out
adc
loop
adc
in
add
cmp
push
loopne,pn
pop
sub
lds
loopne
rcll
cs
data16
adc
scas
fwait
sti
jle
sub
or
aam
enter
jnp
or
rcpps
inc
hlt
enter
popf
adc
movsl
jecxz
jge
test
push
add
pop
xchg
cltd
pop
lds
jle
mov
repz
mov
dec
sbb
jae,pt
adc
fs
pop
wbinvd
xor
mov
movsb
in
adc
jne
iret
or
jg
push
stos
bound
mov
addr16
pop
call
push
data16
dec
sub
push
in
lret
aam
cmc
xor
clc
in
dec
orb
dec
cmp
pop
lcall
call
pop
lcall
jp
lds
or
or
jmp
push
inc
mov
mov
aaa
push
mov
pop
pop
outsb
ret
xchg
loop
add
dec
movl
lods
adc
in
add
shlb
and
sti
or
sti
push
inc
scas
int3
pop
movsl
push
lret
bound
push
pop
lock
push
into
xchg
aad
mov
roll
xchg
in
cmp
popf
or
sbb
inc
xchg
loop
movsb
es
or
sub
pop
lods
jle
add
shlb
in
pushf
in
fildl
pop
shll
in
xchg
std
jae
xor
clc
out
mov
ss
add
sbb
jae
pop
jle
daa
push
jle
stos
xchg
sti
mov
push
cmp
pop
shlb
sbb
mov
lret
std
jb
pusha
inc
imul
lahf
xor
sub
ret
outsb
xchg
jne
mov
andb
mov
test
or
sub
dec
mov
out
sub
mov
mov
sub
or
jae
sarl
lds
ds
sub
mov
pop
jns
std
fldl
lea
adc
popa
cmp
sbb
adc
push
xor
je
call
sub
fisubl
inc
lods
in
inc
stos
and
pop
fcoml
sub
adc
fdivrs
xchg
ret
push
push
xor
xor
and
push
push
pushf
fdivrl
sub
repz
xor
cwtl
mov
out
int
sub
fs
xchg
adc
adc
ficompl
xchg
mov
mov
enter
scas
lahf
push
lods
in
outsl
xchg
nop
push
xor
adc
inc
mov
push
in
inc
fnstsw
repz
cmpsb
xchg
hlt
xchg
sbb
test
xchg
cmpsb
fiaddl
cli
sarb
mov
add
sarl
repnz
push
cmp
mov
xchg
sub
or
xchg
push
cmpsl
jl
adc
inc
ss
jns
lcall
loope
in
mov
cwtl
lods
decb
pop
pop
out
sub
movsb
mov
mov
pushf
push
or
je
loop
bound
test
incb
mov
mov
les
adc
nop
dec
in
lahf
fsts
add
mov
test
iret
dec
dec
ja
pop
cmpsl
pop
out
aam
mov
lea
adc
std
inc
xlat
mov
cli
mov
or
xlat
mov
and
cmp
push
repnz
fbld
xor
insl
int3
enter
das
loope
arpl
push
sub
ss
pop
push
rcrb
jg
mov
dec
jb
out
adc
add
cwtl
pop
mov
aas
decl
jecxz
mov
divb
push
mov
mov
loopne
jmp
pop
mov
pop
mov
das
dec
js
jp
mov
or
pop
lahf
in
or
mov
jmp
or
mov
add
xor
iret
push
or
jns
jmp
adc
dec
in
scas
pop
incb
je
cmpsl
adc
lods
add
or
jecxz
adcl
lods
push
lcall
outsl
cmc
fisubrl
testl
push
adc
ret
dec
out
in
adc
je
mov
dec
in
cmp
or
sub
pushf
and
mov
sbb
mov
or
mov
ud2
jle
xlat
orb
fists
cli
lret
pop
xor
add
lret
mov
cld
jle
mov
lcall
bnd
jb
sub
sbb
adc
xchg
addr16
adc
das
insl
inc
and
out
ljmp
jp
pop
and
mov
pushf
cmpsb
mov
or
cmpsl
insl
aas
and
adc
jb
and
popf
iret
cmp
push
pusha
leave
xor
mov
data16
pop
inc
scas
in
scas
mov
fsub
sarl
push
leave
cmpl
adc
jle
mov
sub
and
jle
lea
or
in
daa
cmpsl
incb
push
push
insb
stc
mov
pusha
incb
lahf
pop
add
ds
ljmp
push
push
out
mov
sub
pusha
int
ljmp
jge
cs
mov
adc
dec
inc
icebp
iret
jp
repz
pop
adc
leave
mov
cmp
mov
pop
jle
mov
add
xchg
mov
cmp
jp
pop
jg
daa
cmp
push
mov
pop
rcll
jl,pn
push
and
js
xor
mull
in
fistps
out
mov
aas
lret
ja
daa
jle
mov
or
ret
and
rolb
fwait
out
or
int
or
out
mov
pop
movsb
dec
adc
mov
mov
rolb
mov
and
std
movsl
push
pop
lods
in
adc
test
xchg
icebp
es
out
cmc
jmp
les
push
mov
pop
rorb
jl
xor
in
mov
cmc
hlt
cmc
fcmovu
mov
mov
ret
mov
adc
xor
and
pusha
mov
jb
nop
stos
ret
lret
xchg
jp
pop
pop
addl
ror
cmpl
inc
ss
mov
xchg
je
scas
lahf
pop
and
sub
pop
mov
xor
cmpsl
mov
mov
push
mov
icebp
mov
ja
aaa
mov
push
fwait
or
hlt
inc
add
cmpsl
nop
test
dec
iret
dec
insl
inc
lods
sub
push
addr16
pop
inc
mov
aam
bound
sub
push
xor
rorl
push
cmc
leave
mov
push
pop
mov
inc
add
lods
sub
and
ss
push
movsl
cmp
movsl
mov
pop
push
and
mov
and
fdivrs
and
je
and
jle
or
xor
jp
xchg
cmp
incl
jb
jle
fucomi
xchg
faddl
mov
push
add
dec
test
or
ljmp
or
and
mov
sbb
pop
lahf
shlb
cmp
dec
and
add
xor
push
outsl
movsl
jnp
and
nop
mov
js
frstor
fcompl
repz
mov
jl
les
sub
add
add
addr16
fnsave
inc
ljmp
ret
mov
fucomp
call
rcr
jo
out
hlt
and
lds
xor
mov
fdivs
dec
cld
pop
add
push
push
dec
bound
in
pop
sbb
orl
xor
int3
mov
pop
mov
jecxz
inc
xor
loopne
sub
sbb
jnp
sub
inc
std
sbb
inc
add
and
ret
cmp
aam
mov
cmp
dec
adc
cmpsb
push
xlat
mov
dec
jbe
addr16
lret
add
xor
xchg
lret
call
xchg
data16
sbb
stos
pusha
and
out
mov
xchg
xchg
in
js
or
shrl
mov
out
mov
adc
jns
or
sub
pop
jecxz
test
cmpsb
insb
xor
add
jne
inc
xor
add
jne
inc
xor
add
dec
stc
adc
pop
insl
loopne
test
addr16
roll
pop
loope
call
in
sti
cltd
dec
bnd
js
or
xorb
sarl
ja
scas
adc
repnz
scas
out
sbb
loopne
stc
cmpsb
out
xchg
into
imul
rcll
xchg
adc
cmp
jl
sub
aaa
dec
mov
jns
jns
repz
mov
popa
mov
mov
jns
push
or
mov
mov
cmp
adc
in
fnstsw
mov
or
jae
orl
rcll
lret
sub
movsb
cmpb
push
js
je
gs
stc
push
outsb
les
inc
jl
sub
sti
fcompl
stos
shll
mov
push
lods
or
outsb
dec
daa
or
mov
adc
pop
lods
sbb
jg
adc
xchg
and
test
mov
addr16
lret
mov
sub
dec
hlt
cmp
push
outsl
mov
cmp
cli
pop
ljmp
movsb
mov
pop
nop
cwtl
call
mov
sbb
jl
sub
fists
pop
scas
jno
fisubrs
sub
push
add
test
pop
xchg
fisubl
stos
xor
stos
mov
mov
inc
sub
jns
mulb
dec
push
pop
out
je
add
push
mov
sbb
lods
leave
cmpl
pop
outsb
ret
adc
xchg
inc
das
popa
pop
adc
outsb
inc
pop
outsl
cli
pop
xchg
mov
outsl
pop
inc
cmp
in
sub
fstpl
mov
adcl
add
fcmovnbe
xchg
subl
in
xchg
lods
imul
add
ss
xchg
push
adc
pop
aas
test
je
adc
jmp
dec
push
imul
pop
in
or
inc
sahf
pop
mov
inc
repz
pusha
cmpsl
je
cmpsl
push
mov
push
flds
into
std
lock
adc
cli
push
loope
sub
jmp
xor
push
mov
out
shll
leave
test
mov
jbe
xchg
int
popa
or
ljmp
xor
xlat
fxch
or
push
push
cmpsl
pop
loopne
inc
cld
scas
push
pop
and
out
and
jne
jge
add
pop
fidivrs
in
shrl
arpl
sbb
lods
xchg
xchg
sbb
ficomps
das
sbb
add
js
add
or
push
xlat
adc
inc
xchg
pavgb
or
pusha
dec
out
out
cmpsl
xchg
loopne
adc
push
cmp
add
popf
sub
cltd
out
scas
hlt
fsts
mov
sbb
movsl
and
sub
mov
and
adc
mov
cld
ja
cmpsl
lahf
popa
sub
cmp
gs
or
push
mov
dec
mov
scas
dec
movsl
xchg
loopne
inc
leave
aas
mov
xchg
push
xchg
inc
dec
push
ja
mov
inc
adc
mov
cmpsl
dec
in
mov
cmp
movsb
mov
pop
lods
pop
add
fstpt
mov
cmpsb
push
jle
xchg
adc
pop
lahf
outsl
mov
pop
jecxz
lods
sub
fisubl
inc
or
xchg
ret
repnz
cs
jg
sub
xor
loop
inc
jge
data16
je
pop
out
ret
repz
sti
mov
mov
dec
pusha
and
push
pop
sbb
loopne
sbbb
jne
roll
aaa
dec
push
cmp
scas
out
aad
inc
stos
add
sahf
adc
lods
out
test
ljmp
insb
or
mov
and
dec
jno
xor
cmp
seto
mov
pusha
mov
das
shll
mov
cld
sub
mov
and
xchg
sub
lcall
imul
pop
in
jae
inc
mov
and
cld
adc
push
or
pushf
cmp
mov
jecxz
and
inc
out
scas
adc
cli
lahf
and
inc
mov
sbb
jmp
pop
jbe
addr16
fildl
lods
push
cmp
and
push
sbb
lock
das
push
scas
frstor
or
and
push
adc
mov
mov
addr16
fdivrp
push
or
jge
sbb
js
or
movsl
imul
jl
mov
ljmp
jmp
div
push
mov
adc
jbe
push
sbb
wbinvd
adc
xchg
lods
pop
cs
mov
push
or
lock
pop
mov
leave
pop
mov
xchg
lret
mov
jmp
mov
test
adc
aad
mov
out
jle,pt
xor
cli
pop
cwtl
cld
sbb
jns
mov
aam
cmp
loopne
push
sub
loop
add
jne
adc
je
sbb
and
sahf
mov
cmpsl
xlat
mov
or
stos
loop
lods
sbb
push
sti
loopne
outsl
sti
mov
cmpsb
xchg
bound
sti
cmc
out
push
push
mov
ljmp
push
jo
shl
lret
push
mov
mov
or
in
ficoms
insl
sahf
and
add
mov
pop
add
adc
mov
scas
sahf
and
inc
dec
adc
daa
out
int
lret
push
std
push
mov
mov
push
cmp
rclb
cmp
xchg
aaa
and
xor
add
icebp
or
pop
cmp
jl
or
popa
pop
aas
xchg
dec
add
push
inc
int
or
call
xor
sub
jl
push
and
les
aad
movl
adc
call
jecxz
rorb
ljmp
pushf
divl
ret
in
imul
fnstcw
inc
jns
xlat
dec
in
repz
inc
addr16
ss
mov
sahf
mov
jns
adc
rsm
mov
or
cmc
pop
sbb
imul
xor
dec
push
jmp
dec
cmc
aad
stc
fnstcw
ffree
xchg
pop
pop
xchg
lea
mov
out
cmp
ja
adc
mov
mov
push
test
jae
std
xor
out
mov
adc
enter
xchg
push
in
lods
mov
dec
inc
inc
insb
push
or
xor
push
jns
sbb
mov
push
sarl
scas
xor
push
sub
inc
icebp
push
jp
in
cmpsl
xor
data16
cmp
sbb
imul
mov
fdivrl
dec
test
mov
lret
in
nop
stc
jmp
dec
stos
stc
in
push
jmp
mov
jecxz
lea
add
out
int3
add
jno
cmp
in
cmpsl
dec
and
lods
in
push
test
les
icebp
out
lods
adc
pop
mov
fcmovnbe
pop
dec
cmpsb
loopne
aad
mov
clc
dec
pop
scas
in
ljmp
test
pop
jmp
inc
or
cmpb
push
mov
push
in
pop
or
sub
movsl
mov
jmp
add
mov
jmp
daa
adc
fadds
or
adc
adc
cmpsb
adc
fdivl
mov
add
mov
jmp
jle
add
nop
fisubrs
aad
fnstenv
push
or
cmc
add
inc
aaa
and
jge
dec
lret
add
mov
xchg
or
imul
mov
test
fwait
cmpsl
outsb
jg
adc
out
sub
pushf
pop
iret
and
push
jecxz
jmp
pusha
sub
ret
jmp
add
xchg
push
into
pop
stos
mov
mov
std
mov
ret
or
out
test
jl
shrl
bound
xchg
iret
test
jnp
pop
popa
add
fmull
mov
ja
adc
mov
xchg
jne
imul
jg
cmp
arpl
iret
loope
dec
adc
add
adc
sbb
adc
xchg
into
pop
cmpsl
int3
sub
add
in
lret
pop
je
pop
stos
sbb
ret
adc
mov
sbb
loop
lahf
pop
imul
hlt
lret
dec
in
jno
adc
xor
fld
dec
mov
insl
push
inc
lahf
lods
lods
sub
xchg
test
test
push
sbb
or
adc
xchg
xor
int
push
sub
mov
movsl
aam
or
aam
mov
dec
jae
movsb
sub
call
je
fsubr
nop
daa
sub
imul
mov
mov
push
data16
mov
ja
mov
or
jp
mov
out
imul
sub
std
outsl
lock
xchg
movsl
push
add
das
popa
fmul
imul
push
stc
and
and
lods
sub
orb
inc
mov
cmp
outsb
sub
or
pop
stos
or
pop
push
adc
mov
sub
imul
cli
pop
mov
sbb
pop
call
push
add
jecxz
pusha
xor
push
push
in
sahf
mov
aam
mov
in
adc
pop
daa
mov
push
stos
or
inc
mov
pusha
mov
test
fldl
add
loopne
or
pop
push
pand
pop
ficoml
and
xchg
sbbb
subb
mov
neg
popa
push
xchg
jo
cwtl
dec
sub
mov
sub
fs
xor
or
stos
hlt
cmova
shll
cmp
aaa
fidivs
pop
or
pop
cmp
xlat
mov
jno
scas
lock
cmp
xor
and
and
inc
ss
sbb
jne
cmpsb
dec
orb
mov
in
xor
pop
xor
icebp
mov
inc
shll
sbb
ljmp
insb
push
mov
mov
add
nop
adc
testb
push
sti
in
mov
mov
into
dec
out
pop
jle
scas
add
sti
test
xchg
jmp
jns
mov
jg
and
pop
pop
ficoms
std
sbb
shlb
mov
pushl
shll
dec
push
inc
inc
xor
and
and
mov
push
add
jl
aad
and
sub
add
cmpsl
mov
aam
in
movsl
outsl
les
mov
add
fwait
push
jg
repz
xchg
dec
lret
cltd
push
pop
mov
xchg
sbb
or
sbb
jmp
xchg
xchg
loope
sarb
or
jae
adc
inc
cld
jo
jo
adc
loop
mov
xchg
xor
xchg
jne
xchg
jo
or
fwait
or
gs
inc
xchg
aaa
or
mov
jbe
xlat
lret
push
adc
dec
pop
cmp
sbb
pushf
pop
adc
ds
cmpsb
ss
fs
xor
sarb
iret
movsb
add
sbb
dec
mov
je
mov
cmp
xlat
adc
dec
clc
fs
ds
pop
clc
nop
mov
and
mov
push
lods
pop
fs
push
ror
into
xchg
ficoms
dec
lods
jl
dec
test
lret
xor
sub
adc
movsb
dec
adc
and
ret
jg
dec
mov
adc
adc
rorl
dec
rol
add
test
xchg
test
jp
push
adc
inc
out
lahf
das
inc
ret
cmc
mov
pop
inc
lcall
mov
dec
pop
jg
sti
pop
dec
jmp
mov
or
lock
stc
sbb
pop
cmpsb
loop
cld
mov
cmpsb
inc
pop
lock
in
xchg
or
lahf
mov
push
pop
push
out
mov
inc
jecxz
push
push
adc
cmp
loop
daa
popa
pop
push
or
mov
ljmp
push
pop
outsb
pop
enter
mov
daa
int3
cs
sub
out
jmp
out
push
movsb
mov
sarb
lret
xchg
xchg
fs
push
sarl
movsb
mul
fwait
stos
or
pop
orb
fucom
call
mov
imul
test
jge
sbb
jle
cmp
cmpsb
inc
fiaddl
jl
fcomi
sbb
lahf
sbb
imul
sbb
ss
movsb
push
adc
sbb
popl
xor
lods
inc
or
cmc
and
fisttpl
leave
popf
jle
lret
push
ds
add
divb
dec
xchg
loop
jo
jae
xor
sub
std
xchg
sub
dec
inc
js
add
inc
ljmp
enter
mov
data16
inc
dec
sub
and
and
mov
mov
sbb
cli
gs
shll
sbb
sbb
xchg
stos
cmp
fnstcw
dec
fistps
fcoml
inc
mov
or
sub
adc
nop
scas
iret
sbb
inc
lea
sub
sbb
mov
mov
popf
adc
push
xchg
mov
orl
pop
cmp
pop
mov
add
clts
fsubrp
sub
es
lods
shrb
jno
push
testb
stos
mov
xchg
xchg
mov
mov
sbb
mov
mov
push
push
or
in
pop
hlt
xchg
add
push
dec
cld
lock
pop
scas
jg
lods
sahf
mov
stos
js
lds
inc
ds
sub
adc
mov
into
imul
das
or
call
clc
add
jge
push
fimuls
test
cmpsl
dec
sub
daa
mov
fdivrp
dec
xchg
adc
adc
mov
jns
mov
and
js
int
xchg
mov
aad
lds
jge
cmp
mov
test
lea
adc
ficoml
adcb
imul
mov
jp
sbb
push
shrl
mov
cwtl
mov
hlt
jo
fsts
stc
dec
mov
cmp
push
or
das
pop
fbld
sbb
add
hlt
cmp
mov
bound
and
add
andb
ret
jl
jecxz
mov
adc
xor
popa
int
and
cmc
std
push
mov
mov
inc
mov
in
bound
test
jl
add
out
xchg
cwtl
adc
cmpsl
push
and
in
movsl
pop
rcrb
mov
mov
add
mov
mov
int
sbb
loopne
clc
add
push
je
or
fcomps
sub
adc
sub
add
push
dec
lcall
dec
cmpsl
pop
jmp
vpavgw
dec
into
pop
adc
and
mov
xor
add
dec
and
inc
pop
sbb
dec
xchg
xor
aaa
pushf
mov
int
orl
daa
lret
pop
adc
mov
daa
ds
push
cmp
fmull
sub
lods
js
cmp
dec
data16
cmp
cmp
mov
and
pop
movl
pop
in
in
loope
xchg
arpl
lods
jl
add
lods
xchg
es
sbb
push
cmp
jle
inc
jle
into
test
dec
daa
or
lock
testb
pop
cmp
cmp
jp
jbe
jl
js
mov
dec
add
mov
dec
dec
aam
cmp
jle
inc
jnp
into
test
fs
and
fisttpll
lea
jp
cmp
lcall
les
push
cmp
and
adc
in
aam
subb
clc
mov
negl
js
push
cs
xchg
movsl
sti
adc
mov
mov
dec
cmpsl
push
addr16
loope
mov
movsl
in
lahf
in
enter
jbe
adc
mov
mov
cltd
outsb
enter
cmp
inc
dec
sub
xchg
mov
adc
sbb
mov
lret
sti
mov
cmc
leave
push
fidivs
hlt
fnstcw
inc
fwait
adc
pop
scas
inc
sbb
add
inc
mov
lods
cli
lret
add
ss
in
mov
repnz
push
repnz
or
xor
lods
loopne
popf
mov
cmp
sub
push
adc
data16
xchg
push
jno
fdivrp
sbb
xchg
dec
and
cmp
dec
jbe
fimuls
sbb
jne
mov
ss
aam
mov
out
adc
jg
xor
jnp
and
lret
sbb
ja
call
out
pop
jno
fildll
clc
xchg
in
or
inc
in
jae
add
fsubr
xchg
sub
cs
mov
jnp
in
pop
das
addb
aad
neg
or
orb
push
lret
mov
fimuls
jnp
popf
adcl
mov
mov
jo
xorl
cmpsb
and
mov
add
mov
js
add
or
nop
mov
mov
mov
and
lods
cmp
mov
xchg
cmp
add
cmp
js
insb
fs
dec
nop
cmp
xlat
or
mov
loop
popf
imul
or
xchg
inc
leave
inc
fsubs
lods
pop
push
cltd
xchg
xchg
dec
outsb
push
leave
jae
in
push
cmovp
or
pop
pushf
loop
fbstp
out
jg
pop
cmp
out
mov
lcall
push
rorl
push
mov
cld
sbb
pop
scas
ljmp
stos
shll
add
and
hlt
lret
adc
arpl
lcall
aam
sub
nop
cmpsb
fadd
cmp
test
dec
andb
js
cmp
nop
jb
lret
push
gs
jmp
push
imul
cmp
sub
repz
in
xor
bound
lods
dec
loop
jne
leave
mov
xor
or
push
fisttpll
scas
ret
test
dec
sub
loope
push
push
pop
sbb
mov
into
jmp
mov
sub
xchg
jae
push
adc
call
fdiv
cmp
mov
adc
fnsave
in
aas
cltd
or
push
imul
xor
jge
sub
les
fsubrs
test
push
dec
pop
test
pop
mov
into
pop
inc
test
cwtl
mov
repz
push
mov
sbb
divb
fbstp
xchg
xchg
adc
jb,pn
imul
lds
xchg
jne
bound
orb
iret
xchg
into
cmp
scas
iret
push
xchg
movsb
aad
scas
ljmp
fisubrl
cmp
push
cmpb
xchg
xchg
in
push
inc
adc
aad
dec
out
pop
mov
pop
std
mov
sbb
jge
cmp
xchg
xchg
ficomps
aaa
fisttpl
or
dec
fdivl
jg
adcb
or
iret
jg
xor
jns
cmp
mov
sbb
dec
mov
out
test
in
add
es
js
daa
cli
stc
stos
fists
jmp
int
mov
sub
xchg
shlb
mov
xor
add
jns
adc
mov
inc
repz
divl
adc
cwtl
idivl
dec
stos
adc
cs
jns
inc
xchg
inc
fbld
stos
fld1
test
stos
inc
jns
aaa
jo
cmc
xchg
ja
ljmp
push
sub
movsl
fisttpl
movsb
xchg
sar
hlt
or
adcl
pop
xchg
or
xor
ret
pop
xchg
cmp
pusha
cmp
das
jg
mov
notl
iret
pop
jb
shl
data16
mov
xor
mov
dec
adc
inc
int3
pop
and
mov
out
lock
and
shl
add
lds
push
movsb
jg
jl
lret
jbe
add
lcall
mov
and
or
push
cli
pushf
sahf
pop
sahf
repz
hlt
xor
xchg
flds
mov
sub
icebp
mov
pop
mov
pushf
push
mov
nop
orb
pusha
in
pop
or
add
jle
mov
pop
fstl
push
inc
adc
sub
xor
or
dec
dec
mov
popf
cli
mov
mov
les
pop
loopne
fidivs
int3
mov
fists
subb
jnp
mov
jge
scas
jae
pop
sub
test
adc
insb
cli
pop
pop
pop
std
dec
push
adcb
lock
sahf
cs
mov
outsl
stc
bound
adc
dec
ja
js
push
daa
popa
jle
xchg
fimuls
sbb
pop
out
xchg
fildl
fadd
movsl
push
loope
cmc
out
clc
mov
push
cmp
stc
xor
add
xlat
ja
loope
pop
inc
and
arpl
sbb
sub
js
es
sarb
ret
outsb
pop
push
dec
jo
gs
cwtl
push
addl
cwtl
sbb
imul
cmp
lret
out
xor
mov
out
mov
gs
mov
cmpsl
in
movsl
lods
mov
cmp
dec
push
sahf
inc
addl
pop
mov
repz
adc
sarb
stos
push
xlat
xor
mov
outsb
xchg
dec
and
xchg
lcall
arpl
inc
clc
sbb
cs
in
xor
nop
push
mov
mov
pop
adc
xlat
jne
dec
push
out
stos
dec
nop
aas
mov
add
lock
call
cmp
xlat
fs
out
call
push
dec
pop
movsl
push
sbb
dec
test
rol
inc
inc
fsubrl
movsb
sbbl
ret
addr16
mov
leave
or
push
lcall
fwait
ljmp
sub
xor
roll
push
shll
outsb
lods
out
les
xor
xlat
pop
das
or
cmp
or
push
cli
pop
std
push
sub
push
mov
inc
sti
jno
and
mov
pop
lods
sub
xchg
cmp
xchg
xor
push
fcomi
push
adc
pop
push
js
push
jb
push
fimull
mov
sub
in
push
les
mov
int3
mov
daa
pop
out
es
pop
in
movsb
push
xor
fs
sarb
movsb
xchg
xchg
pop
mov
addr16
sti
cld
sbb
push
or
dec
cli
cmc
jecxz
std
adc
mov
ficoms
pop
sbb
push
daa
adc
add
mov
mov
test
dec
sub
mov
push
add
hlt
pop
or
or
imul
sahf
loopne
test
movsl
mov
inc
mov
out
cmp
jo
ficoml
push
xor
jl
xchg
jp
inc
stos
test
dec
daa
pop
jne
loop
cmpsl
inc
xchg
les
and
nop
out
sbb
lret
inc
pop
aad
mov
pop
aam
aas
imul
mov
aaa
add
popa
daa
fs
jecxz
mov
jns
or
inc
or
imul
push
adc
inc
faddl
stos
push
and
push
add
xchg
or
xchg
movb
sbb
lds
mov
lret
push
or
push
in
movsl
adc
imul
jne
pop
xchg
jp
mov
mov
push
cli
ja
push
es
xchg
repz
mov
add
or
fisttpll
jae
or
push
sub
aas
std
divb
mov
dec
in
scas
push
dec
sbb
mov
jb
mov
jge
inc
outsb
rcll
push
dec
ja
push
cwtl
int3
and
mov
push
shl
insb
into
cmp
fiaddl
xchg
push
push
int
aaa
mov
icebp
pushf
push
arpl
stos
jecxz
stos
std
sbb
sub
ret
mov
mov
clc
mov
nop
jecxz
xor
into
sahf
dec
cmp
adc
arpl
mov
out
repz
jo
sbb
stc
jg
sbb
push
inc
dec
rcll
jg
aad
adc
adc
push
and
dec
mov
mov
scas
mov
xchg
sbb
outsb
inc
cmp
pop
aad
call
add
xor
xor
repz
dec
jge
scas
push
pop
cmpsb
jmp
cmp
dec
add
pop
fstpl
aam
aam
sbb
pop
mov
cli
mov
lahf
fmuls
xchg
mov
aas
mov
ss
fwait
dec
cmpsl
fstps
push
rclb
push
and
sub
outsb
std
sbb
lret
mov
data16
outsb
testb
es
xor
cmp
cmp
inc
sub
xor
rorl
pop
mov
and
mov
jo
cmp
and
cld
cmp
add
shr
push
je
in
pop
inc
fincstp
and
lret
stos
aaa
adc
inc
add
shrb
push
fisubl
or
ja
mov
cmp
mov
and
mov
push
addr16
jb,pn
sub
add
rcrl
push
xor
jmp
mov
fsubrl
lock
xor
xchg
movsb
mov
mov
mov
pop
adc
pop
lea
push
cld
fs
inc
fisttps
movsl
push
mov
sbb
push
ret
loop
pop
cltd
xor
stc
mov
sub
push
fldl
mov
pusha
movb
xor
mov
bswap
cld
xchg
test
loopne
push
pushf
fdivl
lret
int
cmp
out
hlt
imul
or
mov
shr
mov
aad
in
jne
dec
stos
addr16
ja
or
les
add
xlat
lret
sbb
das
sbb
mov
push
call
pop
cld
movsl
outsb
lahf
pop
jo
dec
dec
xchg
push
aad
test
adc
cmp
ficoms
outsb
fidivrl
or
dec
jecxz
mov
mulb
in
mov
aaa
mov
in
mov
and
sub
outsl
hlt
pop
in
lock
pop
mov
cld
push
test
into
icebp
sbb
mov
jmp
mov
je
or
dec
push
ja
xchg
scas
push
loope
lds
lret
ljmp
xchg
mov
inc
out
xchg
cs
fsubrs
test
stos
das
outsb
cltd
inc
pop
sbb
ret
stc
xchg
xchg
mov
xor
add
fbld
mov
dec
in
xchg
stos
dec
jbe
std
rcr
xlat
out
xor
jb
sub
mov
fsubl
mov
dec
push
cmp
mov
adc
xchg
popf
mov
mov
lods
repnz
int
out
loope
in
adc
stos
jae
addr16
lock
std
push
adc
out
add
cld
in
pop
loope
push
clc
sub
push
imul
rorl
adc
pop
pop
mov
dec
pusha
cmp
cmp
pop
fwait
cmp
xchg
mov
out
jns
mov
insb
xor
cmpsl
shl
sbb
scas
xor
sahf
insb
and
sub
shrl
pop
loop
lcall
xchg
in
in
pop
pcmpeqd
cmp
jecxz
inc
fimull
sub
in
sub
icebp
jnp
mov
cmp
add
cmp
push
daa
cmpsl
add
mov
mov
mov
rclb
test
xor
and
dec
cmpb
xchg
test
nop
mov
mov
outsl
mov
cmpsb
push
sub
mov
adc
and
pop
lods
sbb
cmp
loop
stos
xlat
sbb
jbe
sahf
sbb
or
pop
in
jbe
jne
cmpsb
pop
mov
mov
push
scas
and
pop
pop
pop
fldl
push
sub
cmp
sbb
insb
lcall
dec
mov
repz
scas
add
cmpsl
cs
mov
sti
aaa
pop
fldt
dec
jne
imul
cli
movsl
jmp
in
mov
pop
jecxz
sbb
mov
dec
cmp
ljmp
adc
jb
adc
xor
shlb
cmp
pop
push
sub
fldt
jno
cmp
cmp
sbb
outsb
or
inc
jecxz
movsl
fldl
pusha
sub
push
mov
das
xchg
std
inc
adc
divl
jo
out
fidivl
mov
and
pop
loopne
push
rep
lea
rorl
mov
out
pop
add
in
and
sub
push
pop
mov
pcmpgtb
je
pop
cmc
dec
pop
xlat
or
mov
sbb
or
in
add
dec
cmp
in
mov
push
lcall
dec
mov
repnz
lahf
outsl
xor
push
movsb
mov
dec
ds
std
and
insl
sbb
push
cmp
jp
int3
sbb
jnp
sahf
add
or
push
push
inc
imul
mov
push
stc
loopne
hlt
loope
xchg
mov
into
fadd
shrl
test
jge
lret
jns
or
mov
mov
mov
js
jle
outsl
shrl
or
mov
addr16
std
mov
mov
push
into
jp
jp
sub
cmp
mov
fsubrs
adcb
pop
out
xchg
fildl
inc
dec
fs
out
stos
push
ret
ss
pop
inc
das
repnz
lock
in
adc
stos
andb
mov
fs
mov
inc
sbb
mov
pop
imul
test
leave
fidivrs
outsb
jno
fsubrs
jns
xor
loop
inc
cmp
and
in
insb
add
cltd
jg
add
cwtl
int
lods
pushf
fwait
mov
push
sar
loopne
ds
add
loopne
sub
cmpsb
ficoml
in
jp
jns
sti
int
add
jl
scas
hlt
mov
mov
or
jge
jae
test
mov
cwtl
pop
xchg
std
xchg
inc
inc
addr16
pushf
aam
push
loop
push
lea
jnp
jl
fidivs
inc
shll
cmpsl
aas
mov
dec
or
sbb
xlat
adc
dec
inc
push
rol
mov
imul
lea
inc
sub
jle
mov
lea
inc
repz
mov
xchg
mov
dec
cli
aas
movsl
test
and
dec
cmpl
cs
leave
int3
scas
xchg
imul
fdivr
xchg
sbb
lret
jno
mov
mov
sbb
lcall
push
dec
in
sub
push
stc
mov
gs
scas
aaa
fsts
dec
repnz
inc
inc
mov
add
es
add
xor
enter
fsubrs
push
push
push
gs
test
dec
ss
shll
dec
imul
fsub
xchg
cld
sbb
pop
daa
pop
sti
or
jg
mov
push
adc
test
jmp
xor
inc
sbb
mov
lock
mov
imul
pop
cmpsb
xchg
jle
cmpsl
cmp
sub
addl
mov
in
mov
std
nop
sbb
sbb
pop
mov
xchg
out
adc
mov
mov
lock
xor
into
insb
negl
jno
cmpsb
lahf
adc
insl
movsb
stos
pop
add
xchg
xor
ds
mov
mov
fimull
sbb
mov
dec
lcall
push
movsb
hlt
or
push
jne
cwtl
jb
ljmp
pushf
xchg
pop
popf
jecxz
xor
cltd
fisttpll
xchg
sub
push
mov
lods
pop
mov
les
fldl
lea
in
mov
mov
mov
mov
mov
xchg
add
loopne
jg
mov
dec
adc
stos
mov
push
xchg
leave
sbb
dec
je
mov
pop
xlat
movsb
or
cmpsb
popf
mov
negl
jbe
mov
xchg
fisttpll
xchg
pop
shlb
data16
jle
in
jge
data16
cmp
out
mov
sbb
push
dec
insb
pop
loopne
test
mov
and
sbb
incb
mov
pop
xchg
cmp
int3
adc
sub
pop
or
clc
jbe
inc
xor
pop
cli
or
ds
and
and
pop
bound
add
or
aam
in
std
sub
or
adc
insb
or
lock
mov
mov
xchg
aaa
jmp
pop
mov
or
bound
inc
leave
sbb
or
pop
mov
pop
xor
pushf
adc
pop
imul
and
mov
xchg
mov
arpl
fisubs
jge
add
jmp
jb
mov
xchg
or
add
pop
rolb
cld
lods
enter
dec
or
sub
adc
add
int3
dec
sbb
cmpsl
add
bnd
dec
lahf
cld
lcall
and
aad
mov
hlt
adc
xchg
into
pop
out
lock
pop
mov
lods
fidivrl
fimull
dec
cmp
inc
xchg
dec
cli
out
cmpsb
dec
cmpsb
or
dec
push
orb
out
out
clc
insb
jae
and
pop
sbb
shrb
sbb
test
dec
pop
mov
mov
lahf
test
xor
adc
xlat
mov
mov
or
push
pop
call
push
aad
sub
mov
push
xor
and
in
popa
push
pop
les
stos
decl
loop
push
add
js
and
pop
fbstp
inc
stc
rclb
lret
xchg
sbb
into
out
push
xor
mov
push
lock
ret
push
pop
daa
testb
mov
cli
push
or
loop
and
ret
or
idiv
xor
in
cmpl
mov
push
jns
push
adcl
negl
int3
cmp
scas
dec
cwtd
push
mov
std
sbb
es
popf
daa
or
or
mov
outsb
add
or
jge
into
adc
ljmp
ret
cmc
shlb
push
pop
or
shr
adc
mov
jp
adc
sbbl
xorb
mov
jl
jns
stos
cmpsl
and
repnz
push
pop
sub
jle
pop
inc
add
xchg
adcl
stos
dec
into
in
jg
inc
lahf
cmp
ret
mov
push
lods
mov
iret
dec
shrl
insb
mov
repz
icebp
fiadds
cmpsl
sbb
cmc
stc
repnz
mov
jo
cmp
and
fistpll
push
dec
lock
aam
sbb
inc
adc
inc
jbe
pop
std
out
sbb
xchg
int3
xchg
inc
outsl
hlt
js
out
xchg
popa
ffree
jns
lea
out
inc
out
mov
add
ja
dec
test
adc
mov
imul
ljmp
lods
cmp
cmp
inc
repz
dec
sub
pushf
es
fnsave
std
mov
faddl
inc
dec
aad
lods
clc
decb
lea
cmc
fdivs
cmpsl
hlt
sbb
inc
jmp
int3
inc
jle
add
pop
mov
iret
or
dec
add
sbb
push
xchg
gs
and
rorl
and
push
fcomps
sub
push
inc
xchg
call
jmp
sti
pop
cld
inc
mov
sbb
lret
sbb
inc
jns
sbbl
stos
in
in
pop
mov
in
nop
add
shrb
pop
int3
stos
lock
clc
pop
repz
xor
lret
mov
adc
cmp
add
mov
mov
cltd
lcall
mov
pop
ljmp
push
popf
sti
push
je
mov
sbb
lods
jmp
test
hlt
fmull
stos
lock
lods
push
push
mov
das
inc
pop
mov
cmp
or
or
hlt
in
dec
into
jmp
mov
insb
enter
push
fnstsw
clc
sub
sub
and
out
test
push
mov
xchg
dec
loopne
stc
add
pop
iret
dec
je
mov
dec
lock
and
clc
iret
push
bndldx
into
xor
sub
iret
mov
dec
adc
lock
lock
ficomps
pushf
mov
jle
jle
and
std
pushf
push
stos
jns
push
mov
push
dec
xor
dec
xchg
lret
add
push
sub
dec
xlat
outsb
cmc
inc
js
pop
inc
test
lods
cmpsl
lods
jbe
outsl
adc
pop
js
outsb
call
jmp
loopne
mov
stc
and
sbb
fsub
cmp
scas
mov
scas
mov
shl
lock
push
mov
inc
sti
jns
jns
mov
jo
xor
int3
jp
outsb
decb
mov
xlat
jbe
mov
lea
call
ja
std
cmp
movsl
cwtl
xor
pushf
idivb
in
jmp
pop
mov
ficoms
cmp
pop
mov
popl
sbb
jecxz
sub
sahf
sbb
fsubs
cmp
pop
test
jl,pn
pop
insb
cmpsb
mov
mov
mov
pop
mov
xchg
dec
sub
aas
in
inc
imul
cltd
mov
cld
movsl
mov
xchg
str
lahf
mov
cmp
adc
dec
dec
inc
push
movsb
add
mov
iret
hlt
incb
cwtl
iret
push
test
popa
cmc
lods
pop
cmp
out
pop
psllw
mov
dec
pusha
mov
aad
push
jns
jns
in
mov
int3
cmp
mov
cmp
arpl
xchg
lret
xchg
into
inc
repnz
fiadds
adc
pop
push
fadds
and
fdivl
mov
popf
mov
cmp
cmp
repz
mov
cmpsb
sub
push
jle
or
pop
mov
fiadds
into
sub
cli
cmp
inc
fmuls
inc
sub
jl,pt
add
cltd
push
sti
lock
xor
pop
mov
fdivrl
je
into
adc
incl
lock
mov
popa
xchg
fisttpll
out
addb
int3
cs
subb
mov
inc
jl
cmp
xor
adc
pop
enter
cwtl
or
shrl
dec
shlb
popa
ljmp
xor
or
jns
jmp
test
insl
dec
js
cli
sarb
mov
dec
sbb
and
cli
sub
les
hlt
dec
cmp
adc
in
jo
xchg
into
imul
adc
orl
mov
repnz
mov
mov
cltd
mov
xchg
pushf
jp
test
add
pop
adc
in
out
aad
push
sbb
data16
test
mov
fwait
add
roll
inc
data16
divl
jns
jg
ffreep
add
jns
fisubs
popa
je
xchg
jg
inc
jb
dec
jns
sub
pop
cwtl
cmp
or
push
lahf
stc
inc
aas
jg
inc
xlat
mov
mov
jae
inc
adc
out
push
idivb
negl
rclb
mov
fsubrs
push
mov
pop
xorl
inc
imul
pop
xor
mov
fwait
andl
push
aam
mov
inc
push
xor
rcrl
mov
pop
xlat
movsl
add
sub
ja
dec
jle
cmp
adc
fildll
xchg
pop
mov
clc
lret
test
push
loop
jns
insl
sub
es
popa
andb
mov
loop
ss
mov
jle
les
ds
inc
sub
mov
jg
inc
mov
mov
idiv
mov
es
ss
std
mov
stos
push
jecxz
pusha
out
pushl
fwait
test
and
aas
popa
pop
lahf
mov
cmc
insl
fnsave
cmp
lods
sub
ret
sbb
iret
mov
aam
sub
mov
cmp
pop
cmp
lcall
mov
into
fwait
popa
and
clc
and
test
inc
std
cmp
aad
in
pop
mov
mov
movl
push
xor
pusha
aaa
rorb
add
roll
leave
mov
inc
xchg
mulb
aad
mov
mov
mov
mov
jne
mov
push
fwait
add
sar
push
mov
sub
jle
roll
xor
mov
fwait
add
push
fwait
int3
imulb
dec
cmp
js
cmp
je
cmpsb
je
mov
sbb
xchg
les
int
test
lcall
cwtl
das
jge
shr
movsb
leave
cmpsl
dec
int
mov
xchg
sbb
xor
mov
jmp
ss
sbb
mov
mov
dec
insl
aaa
sarb
add
fiadds
leave
lods
jbe
sbb
insb
adc
nop
sahf
add
fisubrl
pshufw
and
shr
imul
loopne
dec
sub
dec
popa
rcrl
xor
insb
sub
cmp
sub
inc
rcrl
cwtl
lea
rolb
jno
push
outsl
add
mov
push
in
ret
ret
or
push
pop
jno
pop
rcrb
js
mov
fwait
pushf
xchg
lds
and
dec
dec
adc
cmp
add
add
ret
mov
push
stc
fwait
push
insb
jb
adc
out
rol
mov
out
loope
pop
adc
mov
xor
js
js
sbb
adc
mov
aaa
and
xchg
inc
push
insb
push
es
ds
mov
inc
push
nop
add
cmp
stos
loop
hlt
insb
mov
shl
jp
rcll
cmpsl
enter
sub
or
mov
jle
and
pop
mov
push
lock
int3
dec
lret
push
xor
aas
popf
movsb
lahf
sbb
cltd
sub
adc
lea
pop
into
aam
lods
loop
aad
addr16
pop
sub
cmpsb
ss
jge
lret
in
xchg
jbe
fstpt
popa
xchg
jo
and
xchg
lds
pop
std
pop
mov
popf
sarl
sbb
bound
xor
or
or
daa
mov
adc
imulb
out
dec
popf
jmp
loopne
and
bound
nop
mov
pop
pushf
xlat
in
and
pop
scas
mov
ds
fsubs
shlb
add
add
mov
inc
pushf
dec
adc
es
pushf
xor
pop
xchg
das
inc
pop
xor
xor
sub
insb
andb
imul
aad
push
jns
bound
pushf
mov
int3
cmp
dec
lds
bound
and
xchg
sbb
fidivs
sub
andl
repnz
decl
push
lcall
sahf
je
adc
sub
mov
inc
imull
or
test
sub
outsb
lock
pop
pop
adc
sub
pop
xor
and
push
stc
imul
out
fdivs
dec
sub
xor
das
jmp
sub
je
lods
mov
bound
mov
jnp
subl
ss
dec
xor
cmp
push
outsb
test
ret
mov
jo
inc
cs
dec
cmp
jle
test
jle
mov
inc
stos
dec
inc
sub
cli
outsb
mov
mov
outsl
sbb
cli
xor
inc
repz
rcrl
aaa
lret
xor
pop
ds
into
jl
pop
movsl
daa
sbbl
mov
ljmp
lods
push
into
mov
fwait
cs
xor
push
popa
jns
pop
hlt
addr16
in
pop
jg
adc
or
pushf
test
out
daa
cmp
mov
std
repnz
gs
scas
or
sbb
orl
add
sbb
pop
push
dec
fiadds
imul
inc
jp
scas
stos
loope
pop
imul
and
data16
fcoms
xchg
inc
lods
and
fildll
jge
das
aam
shl
insl
daa
pop
lcall
or
mov
jb
into
xchg
ss
mov
inc
fwait
sub
pop
loopne
sbbl
addr16
dec
or
inc
push
mov
scas
int3
sarb
pop
xchg
and
test
mov
dec
loop
pop
jge
int3
js
cmp
jae
int3
mov
popa
jns
pusha
pop
jnp
mov
mov
lret
mov
pop
es
jne
cmc
subb
sar
dec
and
dec
pop
cs
push
rcll
xor
lock
addr16
push
stos
cmpsb
cld
stos
jno
push
xchg
sahf
dec
rcll
jl
mov
pop
daa
or
and
mov
push
into
popa
aaa
and
fwait
out
rol
int3
rcl
mov
push
sub
jp
push
js
sbb
out
sbb
stos
or
add
and
push
test
divl
xchg
stc
out
dec
cmpsb
ja
jb
stos
pop
xchg
sbb
xchg
ljmp
push
jae
scas
outsl
les
cli
xchg
xchg
hlt
int
push
push
daa
dec
incl
mov
ret
lds
sub
cmpb
enter
jmp
mov
cmc
pop
jl
add
add
jge
ja
adc
test
cld
movsl
rcll
mov
xor
add
adc
cld
daa
aam
inc
ss
clc
std
push
lahf
jp
nop
in
xor
push
pop
into
stos
fsubrl
ret
and
incb
add
movl
dec
dec
int3
adc
rorb
mov
dec
mov
sahf
cmpsl
in
loope
adc
inc
inc
xor
push
dec
cmpsl
int3
sbbb
add
mov
test
jge
sbb
push
jecxz
stos
rclb
mov
mov
scas
je
pop
xchg
or
aam
std
inc
shlb
or
pop
pushf
cld
adc
fsubs
mov
cmp
nop
es
dec
stos
ds
sbb
add
inc
inc
sbb
scas
test
dec
int
out
in
jle
push
pop
jmp
ljmp
xchg
mov
xor
and
sbb
sbb
rcrl
cmpsb
push
shrb
or
js
jl
xlat
and
scas
shll
xorl
xchg
scas
shlb
jno
push
mov
pop
jo
mov
out
call
adc
insb
pop
iret
push
scas
push
lahf
mov
stos
xchg
icebp
sti
int3
scas
movsb
inc
loop,pt
mov
rcrb
sbb
out
mov
in
mov
xchg
out
push
ja
ficomps
pop
gs
call
dec
int
dec
and
pop
adc
push
mov
stc
xchg
or
mov
sbb
xchg
js
push
push
mov
into
xchg
data16
jle
mov
dec
data16
adc
cvtdq2ps
sub
sub
mov
cmpsb
jp
pop
iret
jo
sub
pusha
orb
ljmp
jge
outsb
aas
pop
aaa
adc
inc
stos
xchg
test
lea
xor
sbb
dec
int3
mov
ds
pop
in
jmp
std
push
push
cli
sti
adc
in
or
xor
or
addr16
repnz
or
lea
mov
outsl
add
pusha
mov
jns
cmp
scas
mov
add
mov
aam
mov
les
cmpsl
hlt
push
popf
mov
test
xor
cmp
jo
sub
pusha
dec
push
cmpsl
jl
push
mov
into
xchg
data16
stos
clc
push
xchg
pop
dec
push
cmp
adc
andnps
sub
aaa
cmc
clc
adc
cmp
cld
repz
dec
out
stos
mov
inc
int
mov
xor
and
int3
jl
xchg
out
jbe
mov
leave
mov
nop
loopne
sbb
jmp
pop
cmpsl
push
in
mov
or
outsl
dec
mov
sbb
inc
mov
lock
jae
jnp
or
jne
adc
push
pop
rorb
mov
pop
fnstenv
out
cmp
test
pushw
outsl
xlat
pop
jbe
insl
or
mov
add
pop
mov
mov
mov
adc
xchg
pop
andl
lret
cwtl
pop
cmp
xor
sbb
loope
ret
sub
mov
mov
sbb
lahf
sub
insb
push
ss
dec
outsb
mov
cmp
in
pop
push
lock
test
jg
mov
adc
nop
mov
push
scas
or
adc
pop
fcoml
sahf
aas
or
iret
pop
xchg
pop
cmp
adc
mov
add
push
pop
fidivl
scas
lods
mov
in
hlt
dec
out
pop
pushf
imul
gs
inc
push
mov
lret
daa
dec
iret
int3
out
out
call
pop
pop
clc
test
popa
adc
xchg
movsb
jno
lods
xor
shrb
adc
jl
sub
shrl
push
xchg
add
and
sbb
sub
push
pop
mov
ja
mov
cltd
pop
pop
mov
pop
pop
or
push
pop
xor
cmp
inc
in
push
xchg
fldt
scas
mov
shlb
nop
jne
jno
iret
scas
jo
leave
scas
inc
mov
jne
cs
mov
fistpll
pop
icebp
jp
test
xchg
std
scas
pop
lods
cmpsb
sahf
out
punpckhdq
sbb
cmc
mov
shrl
ret
repnz
sbb
mov
mov
enter
scas
mov
sub
sbb
sti
dec
sub
mov
mov
jp
push
sub
jge
out
mov
rclb
add
jnp
mov
jl
sub
add
imul
mov
push
jae
icebp
sub
cmp
shlb
adc
jge
je
jmp
cltd
sbbb
mov
xor
mov
adc
xchg
test
adcl
clc
pop
xchg
scas
mov
mov
mov
push
cwtl
mov
pop
out
adc
jmp
jnp
inc
das
dec
cmp
fstpt
pop
mov
nop
sbb
paddq
and
sub
imulb
and
mov
out
out
inc
push
fsubrp
xor
sbb
cmp
mov
ret
mov
jp
adc
aam
out
dec
bound
aas
rol
sub
add
and
out
mov
hlt
out
add
les
das
insb
sbb
or
test
stc
mov
pop
addr16
pop
pop
out
les
push
hlt
push
mov
fmull
cs
and
inc
cwtl
and
and
jne
push
and
mov
mov
or
das
mov
sbb
loope
push
int
mov
in
or
xchg
push
ljmp
test
repnz
ficoms
xor
ret
inc
add
mov
push
js
ret
mov
mov
push
jl
lods
mov
push
pop
and
outsb
mov
outsb
cld
sub
sbb
mov
out
mov
xchg
pop
pop
pop
mov
adc
scas
stc
pop
mov
pusha
into
xchg
in
sub
imul
sbb
lahf
xor
pop
das
inc
leave
loope
std
cwtl
call
sbb
add
lahf
xor
sbb
dec
scas
orb
jge
test
xor
fs
mov
push
sub
cmp
or
adc
cwtl
ss
push
test
js
mov
pop
pop
push
xchg
fmuls
outsb
mov
out
xchg
rcrl
inc
out
lods
push
pushf
add
loop
sub
lret
sbb
cmp
cbtw
int3
adc
test
and
ret
scas
jnp
jnp
mov
push
sbb
cmp
hlt
xor
mov
jae
ss
movsl
test
inc
and
sub
jno
mov
inc
push
mov
scas
lock
aas
jb
stos
xchg
sub
gs
into
andb
ss
sbb
out
imul
mov
pop
addr16
pop
decb
popf
and
int3
mov
repz
push
fisttps
jl
daa
push
into
cltd
addr16
cwtl
sarl
bound
sbb
cwtl
scas
add
mov
gs
shl
cwtl
fcoml
xchg
push
in
ficomps
adc
and
jae
push
test
fisubl
push
cmp
jmp
fadds
out
scas
dec
mov
call
into
cmp
jge
ljmp
xor
sar
clc
mov
sub
xlat
jecxz
daa
and
adc
cmpsl
adc
gs
in
add
rcrb
stos
arpl
cwtl
pop
out
movsb
shlb
sbb
xor
dec
ret
push
xlat
ljmp
or
adc
adc
mov
push
pushf
mov
shrb
sub
mov
adc
in
addb
imul
xchg
mul
cmp
cmpsl
and
fincstp
jle
cmp
leave
jno
and
sub
out
rol
cltd
loopne
jns
add
pushf
iret
popa
jl
mov
push
mov
add
dec
popf
sub
pop
adc
pop
daa
adc
xor
scas
sub
test
loope
arpl
cmpsl
insb
mov
inc
xchg
into
xchg
mov
cld
and
js
or
sub
cmpsl
lock
push
fs
andb
jg
aaa
pop
xchg
push
inc
test
imul
xor
out
les
or
in
mov
fadds
pop
jne
jg
repnz
movl
jle
pop
dec
sub
js
or
mov
xchg
add
icebp
mov
mov
pushf
push
adc
nop
sarl
in
test
data16
push
dec
in
cmp
scas
das
pop
imul
sbb
data16
mov
inc
jle
mov
push
dec
cmp
adc
iret
mov
xchg
push
mov
leave
cs
mov
lret
mov
mov
out
sbb
out
or
fdivrl
mov
data16
adc
sbb
pop
xor
jg
xchg
and
imul
mov
mov
test
add
addb
mov
mov
mov
fcomps
inc
push
pop
jnp
sub
push
sbb
inc
mov
mov
xchg
mov
pushl
test
cs
int
pushf
push
add
adc
pop
fisubs
mov
decb
cld
int
mov
add
mov
pushw
pop
lret
or
jle
sub
xchg
stos
rolb
push
push
out
out
test
push
push
ljmp
jl
push
xchg
leave
es
or
xchg
mov
cmpl
adc
add
push
xchg
out
mov
int
ljmp
fisubrs
adc
add
jbe
nop
cmpsl
xchg
jle
mov
or
mov
or
adc
inc
adc
push
jnp
push
push
push
leave
bound
or
test
adc
lods
dec
std
dec
jecxz
ficomps
aam
adc
sub
clc
data16
mov
cmp
adc
pop
fsubl
test
decb
into
loope
incl
subl
les
sarb
dec
cld
ret
mov
repz
pop
sub
aam
cmp
sbb
loop
cs
xor
sbb
aaa
or
repz
int
mov
inc
or
jnp
xor
mov
cmp
or
mov
cmpsb
dec
sbb
xchg
jne
stc
dec
dec
add
cwtl
and
mov
cmp
dec
stc
psubusw
cmp
fcompl
or
xchg
lea
lea
cltd
mov
mov
xlat
adc
cmpsb
cmpsb
jecxz
int3
outsb
and
mov
dec
mov
push
mov
push
stos
inc
lret
movsb
mov
push
push
sub
fsts
out
dec
sti
out
and
sbb
mov
or
in
dec
jg
mov
or
inc
cmp
pop
roll
mov
bound
daa
inc
pop
cmpsl
or
jo
sahf
ret
pop
xchg
das
and
mov
insb
mov
inc
movsb
sub
shrl
in
xchg
cmp
mov
stos
sarb
jecxz
cmp
lods
aaa
lea
shlb
push
push
sbb
adc
mov
fmull
nop
push
push
ds
cmp
loope,pt
sbbl
jo
fs
push
xchg
sub
mov
aad
mov
mov
fdivrl
loope
cwtl
xchg
mov
rolb
mov
fs
inc
test
popa
jge
jmp
mov
in
mov
lods
pusha
cmpb
data16
fsubs
addl
stc
orb
add
push
mov
ficomps
mov
aam
jge
ret
or
loop
or
stos
jns
jle
or
out
sub
je
mov
pushf
dec
sbb
mov
dec
dec
or
notl
cmp
pop
gs
mov
xchg
fisubrl
test
sbb
jo
rclb
pusha
cmp
and
cmp
adcb
leave
std
push
cli
jne
push
push
add
lea
lods
adc
lcall
mov
roll
std
and
push
sub
test
movsl
push
call
mov
lahf
sbb
xlat
cmpl
and
movsl
mov
mov
mov
inc
stc
or
loop
xor
inc
out
push
push
leave
lods
pop
xchg
xchg
jo
sbb
scas
rclb
xor
ret
add
sub
dec
fs
add
cmp
push
jecxz
inc
jne
sbb
jb
xor
or
xor
or
inc
stc
cld
jge
jb
sub
fldl
push
cmp
in
mov
ret
data16
push
out
cwtl
repnz
or
fs
mov
int
xchg
push
cmp
notb
inc
jno
fwait
cmp
test
xor
add
aaa
cld
gs
orl
and
push
movsb
mov
mov
cli
xor
into
jl
std
sar
arpl
fidivs
ret
cmp
cmpsl
std
daa
cld
mov
xor
imul
ret
repz
mov
pop
stos
dec
sub
push
cld
mov
test
sbb
nop
sbb
or
lret
test
cmpsb
mov
mov
mov
mov
inc
je
mov
sub
xchg
push
mov
or
or
jecxz
mov
jl
cmpsl
cmp
cltd
mov
dec
ret
addb
push
out
xlat
mov
mov
sub
pop
push
out
lods
jecxz
stc
sbb
cmpl
gs
cmp
push
mov
int3
sub
or
outsb
cmp
les
movnti
cmpsb
cmp
les
call
ret
jp
dec
mov
push
inc
or
addr16
stc
sub
pop
es
add
repnz
dec
or
test
subb
ss
sub
jo
dec
shlb
jl
xchg
dec
sahf
aaa
xchg
jo
sub
insb
fisttps
sub
adc
fsubr
lea
loope
int3
and
mov
xchg
and
dec
jg
jne
cmp
dec
cs
inc
jmp
and
adc
hlt
cmc
scas
pop
incb
lods
mov
mov
and
sbb
fstpt
add
inc
xor
jae
xor
xor
xor
xor
xor
fidivl
xchg
jae
xor
jae
xor
jae
xor
jae
xor
jae
xor
push
dec
mov
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
adc
sub
sub
sub
outsb
and
jo
mov
mov
fstpt
xchg
dec
or
dec
or
dec
xchg
or
dec
mov
or
mov
fucomip
popa
mov
out
mov
lret
enter
xlat
jl
xor
dec
lret
add
and
dec
pop
enter
mov
fdivr
gs
inc
pop
mov
cmp
ret
jl
cmp
or
inc
dec
cmp
jae
or
dec
jg
in
fmuls
adc
and
or
and
movsb
push
iret
push
push
push
pusha
push
pop
add
les
push
fmull
add
frstor
jle
push
outsb
push
sub
pop
sub
out
mov
movsb
or
mov
xor
push
fdivrl
xor
int
test
stc
popf
mov
out
pop
popf
dec
jae
add
jae
xor
jae
sub
mov
enter
ficoml
xor
pop
imul
es
shll
test
daa
in
outsb
and
imul
jl
ds
jnp
sub
or
jge
fcompl
roll
das
enter
enter
leave
xchg
cmpsb
and
rclb
cmp
es
xchg
xchg
cmpsb
pushf
xchg
lret
mov
mov
and
jbe
inc
popa
sbb
mov
fstpl
push
popl
mov
lds
daa
push
lcall
sub
outsb
lahf
sub
outsb
xchg
sub
outsb
sub
jo
or
sub
outsb
push
sub
push
adc
jne
insl
movb
les
and
pop
adcb
test
cmp
jg
cmp
das
cmp
and
cmp
mov
pusha
test
xchg
into
xchg
andl
das
dec
jae
pop
fwait
xchg
outsb
cmp
pop
jg
cmp
sub
lret
xchg
outsb
mov
popa
int3
and
pushw
add
push
daa
jnp
cmc
lret
mov
addr16
es
add
xor
or
es
addr16
in
fisubl
xchg
es
ljmp
int
subb
push
fs
xchg
movsb
cwtl
xchg
rcl
mov
adc
inc
loopne
mov
or
jnp
sub
pushf
mov
repz
mov
and
mov
mov
cmp
jl,pt
cmp
push
jl
cmp
jle
xor
jl
xchg
sub
gs
sub
jne
or
inc
jg
cmp
insb
cmp
jg
cmp
pop
xchg
push
or
push
or
or
or
cmp
popf
or
inc
popf
cmp
jbe
sub
popfw
fcmovu
xchg
cmpsb
lret
dec
popa
add
pop
cwtl
xor
jae
xor
jae
xor
jae
xor
jge
mov
push
and
out
xchg
sub
adc
and
lds
xchg
and
pop
popa
insl
xor
sahf
xor
xor
xor
push
jle
mov
dec
cmp
inc
xchg
popa
xchg
and
mov
popa
and
outsl
popa
es
dec
popa
push
and
dec
sub
aas
sub
minps
dec
imul
dec
dec
add
js
xor
sbb
popf
sbb
push
popf
or
inc
popf
cmp
je
popa
and
jg
ss
pop
popa
push
and
aas
popa
jbe
cvtdq2ps
dec
insb
push
stos
in
imul
iret
lret
xchg
scas
cmp
mov
sub
inc
insb
push
leave
rolb
sbb
daa
jg
cmp
jg
cmp
jg
cmp
js
in
jno
fsubr
xchg
xchg
push
rcll
out
push
stos
push
mov
mov
enter
enter
lret
clc
jge
inc
lret
add
daa
int
sbb
rolb
push
movsb
rep
stos
and
mov
subb
mov
inc
testb
adc
fs
ret
dec
jg
cmp
push
cmp
push
cmp
outsb
cmp
jg
xor
outsb
stos
cmp
jg
cmp
jg
cmp
jg
cmp
cmp
jg
cmp
jg
cmp
jg
cmp
sbb
push
jg
cmp
jg
cmp
jg
cmp
jg
xor
outsl
cmpsb
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jg
cmp
cmp
pop
jg
cmp
jg
cmp
jg
cmp
jg
cmp
jge
mov
inc
dec
add
js
cmp
jo
xor
push
dec
js
xor
insb
or
or
pushf
or
dec
xchg
or
dec
orb
dec
fmuls
nop
dec
rorb
mov
or
dec
clc
or
cmp
jl
xor
je
sub
jbe
mov
mov
insb
and
fsubs
shlb
es
shlb
xchg
addr16
rol
xchg
clc
in
mov
mov
jg
xchg
xor
adc
or
and
cmp
pop
or
dec
push
or
dec
je
rorb
or
dec
test
les
or
dec
mov
hlt
dec
lods
or
mov
rcrb
push
push
push
adc
daa
jmp
cmpsb
cmp
mov
adc
inc
mov
cmp
push
mov
or
inc
xchg
add
pop
xchg
sbb
push
cmp
int3
xor
push
add
pop
xor
push
xor
dec
xor
push
xor
cmp
js
xor
jo
sub
push
paddsb
scas
push
ljmp
and
jle
cmp
push
sbb
mov
cmp
jl
mov
or
cmp
inc
jl
cmp
fdivrl
mov
cmp
sub
push
mov
scas
fcompl
fwait
pop
or
dec
push
or
dec
dec
or
dec
inc
or
dec
jns
xor
or
dec
imul
cmp
out
sbb
outsl
or
mov
inc
adc
scas
fmuls
xor
push
pop
jae
das
icebp
aad
xchg
and
adc
outsb
sbb
and
and
jno
pop
es
lahf
je
scas
popf
out
repz
pushf
or
xor
fstl
outsb
popf
xchg
fdiv
repz
popf
ss
xor
and
mov
loop
push
or
cmp
imul
test
clc
push
adcb
pop
mov
cwtl
outsb
cmp
jb
or
sub
push
cli
shll
loopne
mov
lret
add
mov
roll
or
adc
loopne
mov
or
cmp
push
mov
pushf
testb
dec
test
lea
push
sub
out
fwait
int3
mov
mov
mov
fdivr
xchg
mov
and
jle
cmp
jno
or
inc
mov
and
sbb
or
inc
and
outsl
dec
xchg
push
rcrl
clc
les
fwait
fwait
xor
imul
mov
jo
adc
aam
xchg
sub
inc
pop
shlb
pushf
push
subb
imul
push
adc
popf
xor
fcompl
loope
adc
push
jge
xor
mov
mov
mov
in
dec
fwait
outsb
repnz
outsb
mov
sub
jp
subb
outsb
add
les
mov
divb
mov
cltd
push
mov
push
call
insl
push
lods
push
jecxz
mov
push
push
push
dec
push
push
push
inc
push
push
push
pop
adc
cmp
mov
mov
popf
mov
negb
icebp
pop
cmpsl
mov
mov
pop
pop
jl
cmp
jb
xchg
not
mov
push
jo
and
fsts
and
rcl
push
dec
fmull
nop
sbb
lock
test
adc
mov
cmp
lret
cmc
xchg
and
arpl
imulb
add
mov
sub
pushf
jne
and
mov
lret
adc
aas
sub
xor
sub
dec
fs
mov
lret
dec
lret
inc
sbb
and
gs
and
push
popa
and
jae
or
cmp
sub
rorl
add
jg
sub
cltd
inc
cmc
mov
fsub
xchg
mov
sbb
jl
cmp
aas
or
mov
les
xorb
orb
addb
sbbb
jnp,pt
stos
in
lods
lahf
cwtl
iret
mov
dec
cltd
push
jae
xor
jae
xor
jae
xor
jae
xor
jae
xor
jae
sub
xlat
push
xchg
sub
jb
aam
adc
push
xchg
inc
cmp
inc
insl
jg
cmp
xor
dec
jg
cmp
adc
sub
jg
cmp
mov
dec
push
or
or
jbe
bound
pop
jae
xor
add
test
fmull
gs
popf
sub
inc
sub
push
sub
sub
push
xchg
not
stos
xchg
out
pop
xchg
push
mov
adc
cmp
mov
xchg
xor
sbb
push
aad
sub
add
jbe
inc
repz
cmp
mov
push
mov
sub
or
adc
inc
mov
cmp
cld
cmpl
daa
psubb
stos
mov
lret
aad
jge
cmp
sarb
inc
pop
inc
sub
pop
pop
mov
and
jg
fdivrl
push
pop
fcmovu
ucomiss
xchg
dec
jp
xchg
out
xchg
fistps
fdivr
ret
nop
xchg
enter
je
lret
jno
add
jo
in
call
movsb
sub
imul
push
mov
fwait
arpl
aam
xchg
jge
loope
mov
lahf
xchg
es
sub
outsb
cmp
cmp
dec
sub
hlt
push
dec
orb
enter
sar
add
dec
mov
int
add
clc
xor
js
sub
mov
and
loopne
xchg
rol
xor
adc
mov
enter
leave
dec
imul
dec
orl
or
push
and
into
add
sub
inc
scas
les
out
push
xchg
add
jge
clc
outsb
xchg
sub
jns
dec
aas
arpl
push
jl
popf
stos
jl
ss
mull
fucomi
mov
andb
adc
mov
xchg
fs
xchg
hlt
xchg
sahf
inc
pop
sti
data16
mov
dec
xor
adc
ds
popf
cmpl
mov
dec
xor
jmp
jbe
mov
pop
cmp
movsb
ss
jo
repz
popf
xchg
popf
lret
popf
fsubrl
cwtl
inc
push
pop
sbb
add
cli
cmp
cmpsb
xor
dec
aad
js
sub
mov
lods
std
mov
dec
cltd
dec
or
jns
dec
test
cld
or
ret
fmull
enter
mov
cmp
clc
jbe
jb
sub
dec
outsb
add
cli
lret
mov
lea
cmp
clc
daa
ret
mov
cltd
pushf
andb
and
shll
repnz
xchg
xor
push
adc
cs
clc
sbb
mov
mov
test
cld
jns
jne
in
inc
fwait
add
loopne
mov
loope
aas
xchg
mov
data16
jne
xchg
aam
push
pop
cmpb
mov
fisttpl
repnz
inc
xchg
into
test
fnsave
imul
movsl
push
iret
outsb
cs
xchg
dec
mov
in
xor
inc
and
xlat
jle
mov
rorb
loope
mov
jae
cmp
mov
sub
outsb
arpl
ds
sub
bound
jp
aaa
sub
hlt
fs
xchg
in
pop
lods
xlat
mov
inc
addr16
and
clc
ret
lret
fcmovnu
leave
push
scas
jge
in
lea
fdivrp
or
fdivrs
mov
scas
push
cmp
cwtl
or
mov
pop
and
aaa
jo
and
pop
push
add
pop
jmp
mov
mov
stos
outsb
out
mov
sub
sbb
pop
loope
loop
mov
add
jl
cmp
je
ficoml
mov
shr
mov
cmp
push
mov
inc
adc
insb
fcoml
popf
dec
testl
into
popa
mov
cmp
es
test
sbb
mov
cld
push
mov
push
adcl
in
std
inc
adc
js
xor
adc
pusha
mov
fwait
xor
jae
cmp
es
xor
xchg
es
push
das
push
dec
scas
mov
test
movsl
outsb
mov
jge
enter
mov
pop
lea
jge
pop
push
mov
push
inc
mov
lret
mov
mov
rcrb
inc
or
popa
and
sub
sub
shlb
mov
and
jecxz
push
xchg
or
xor
cli
insb
std
cmp
je
mov
mov
sub
jle
out
arpl
dec
add
imul
cld
cmp
xlat
lods
faddl
int
add
andb
orb
subb
sub
jl
push
js
insb
pusha
xor
mov
clc
lock
in
jge
loopne
mov
or
repz
sub
mov
lret
xchg
cmc
pop
in
xchg
mov
popa
xchg
pop
das
xchg
mov
loope
aad
push
cwtl
loope
xchg
loope
mov
imul
lods
mov
imul
jmp
into
hlt
push
mov
jo
ret
push
push
mov
popa
fdivrs
jo
cmp
pop
mov
ss
into
stos
cmp
test
lock
jl
push
enter
pop
push
xchg
imul
mov
repz
nop
xor
sub
mov
mov
pushf
lret
pop
loop
std
or
xchg
scas
jg
pop
lret
mov
bound
aad
bound
cmc
dec
out
out
push
fldt
or
arpl
clc
fdivrl
clc
pop
lds
cmp
mov
and
xchg
pop
test
xchg
pavgb
cmp
jne
ss
sub
and
sub
inc
cwtl
andb
enter
mov
mov
sub
pop
insb
fcom
mov
movsb
add
inc
adc
pusha
movsl
sub
push
nop
push
test
lret
movsl
ret
or
dec
add
pusha
mov
js
insb
fdivp
mov
jl
jp
xor
cmp
dec
aam
arpl
push
ja
faddl
popf
jge
pop
popf
adc
dec
mull
xor
sbb
ljmp
loopne
fistps
scas
iret
push
rcrl
popl
nop
ds
fnsave
cld
std
mov
inc
push
push
dec
push
sbb
push
aad
test
ds
cmp
mov
cwtl
out
adc
dec
xor
lret
clc
xchg
sbbb
adcb
cmpb
lods
andl
jecxz
clc
subl
aam
nop
arpl
inc
sbb
sub
adc
push
mov
in
bound
mov
outsb
pop
sub
outsb
mov
outsb
pop
sub
or
lret
lret
icebp
cwtl
mov
mov
and
xchg
jl
adc
cmp
pop
js
mov
sbbb
lock
xor
mov
aas
and
jg
popf
daa
pop
xchg
ss
push
clc
repnz
sbb
sub
call
enter
cmp
inc
mov
inc
test
jle
mov
xchg
xchg
dec
les
lods
cmp
int3
fsubrl
outsb
fdivrs
sbb
push
inc
xchg
scas
sahf
mov
mov
inc
insb
jecxz
fcompl
fdivl
and
mov
movsb
out
cmp
sbb
add
das
sub
imul
aad
pusha
pop
xor
into
adc
inc
push
shlb
mov
fcomps
cmp
mov
movsb
push
out
mov
lcall
cmpsb
out
or
or
sub
movsl
ret
cmpsl
pop
push
stc
inc
sbb
jle
out
mov
test
cmp
jg
cmp
cli
popf
or
mov
enter
push
xchg
outsb
enter
test
xor
lret
aaa
push
lods
pop
dec
mov
shr
jns
sbb
in
stos
sub
mov
or
pop
sbb
lret
and
pop
lret
push
mov
push
clc
lret
mov
mov
push
cmp
push
mov
popa
jl
or
pop
out
imul
lret
lret
push
aam
insb
dec
xor
xchg
cld
std
and
nop
adc
insb
out
fldenv
xor
bound
jns
xor
xchg
stos
lret
dec
or
adc
mov
push
aas
push
dec
push
sbb
sbb
and
push
adc
in
mov
fwait
pop
out
aaa
sbb
xchg
xchg
js
push
popa
push
adc
sbb
jbe
lcall
pop
pop
xchg
sbb
cmp
adc
pop
cmpl
sbb
adc
adc
in
dec
jp
lock
adc
mov
xorb
sub
push
addr16
pusha
mov
cwtl
cmp
pop
inc
test
movsl
jle
outsb
sbbb
sub
outsb
or
cmc
in
xor
and
mov
gs
iret
xor
outsb
mov
popf
lahf
push
aad
xchg
jge
cmp
mov
xorb
adcb
mov
fidivl
jb
test
mov
add
lods
or
insl
xchg
inc
mov
push
and
in
mov
xchg
xor
jno
mov
and
mov
loope
lods
sub
inc
jb
cwtl
fildll
cwtl
xchg
push
std
arpl
push
push
cltd
outsb
jmp
push
subb
adc
xchg
push
and
fs
popa
add
push
or
iret
jae
and
xchg
push
dec
or
mov
push
in
push
or
dec
fisubs
inc
cmp
dec
outsb
lds
xor
fsubrl
pop
or
push
push
pusha
cmpsl
add
add
sub
mov
push
jecxz
fsubrl
clc
cld
mov
or
aas
jbe
jl
insb
mov
fildll
dec
jae
xor
daa
loopne
js
imul
sub
test
jb
xrelease
clc
jae
sub
fldl
lret
add
je
jmp
test
in
mov
aad
xchg
sub
jo
mov
push
cmp
and
push
pop
les
andb
dec
fidivs
testb
int
lea
hlt
lods
mov
sbb
sub
jge
iret
movsl
pop
pop
pop
jge
testb
xor
insl
movsb
stc
cmpsl
mov
adc
mov
sub
add
inc
mov
ljmp
jecxz
jne
jmp
out
cli
dec
xchg
sbb
and
arpl
pop
outsl
daa
jo
loope
lds
rolb
cmpsl
in
sbb
add
test
xchg
jl
cmp
cmp
xorl
mov
pslld
clc
mov
mov
outsb
insb
out
leave
cltd
and
jge
adc
xor
mov
add
dec
ffreep
aad
movsl
adc
pop
sarb
insl
jl
cld
push
dec
mov
into
dec
xchg
pop
xchg
lock
pop
fstps
addr16
es
lahf
enter
dec
faddl
popf
push
fdivrl
fsub
mov
push
lret
movsl
insb
mov
cmp
and
pusha
mov
jo
aam
insl
lock
out
sahf
lret
add
mov
fstps
cmpsl
fcomps
cmp
fs
push
lahf
mov
xchg
inc
cmp
call
jl
mov
jge
loopne
lcall
stos
cmpsl
mov
push
jg
cmp
or
ja
xchg
les
scas
and
add
addr16
es
js
push
xchg
add
aad
and
add
jns
cli
enter
xchg
jg
cmp
sub
mov
pop
cvttps2pi
clc
and
iret
pop
push
adc
and
ret
sbb
stc
cs
xchg
or
xchg
push
xchg
outsb
iret
add
inc
jl
cmp
pop
movsb
in
cmpsl
int3
add
mov
mov
mov
fistl
mov
in
hlt
xchg
out
cs
imul
pop
pop
inc
pushf
jle
shll
insl
popf
jb
mov
push
and
jae
xor
dec
fidivs
stos
mov
daa
es
aam
lret
jne
pop
pop
std
addr16
jnp
fstpt
cli
or
mov
movsl
sbb
dec
lret
cmp
sub
lret
iret
dec
gs
repz
jge
push
ss
mov
xor
lock
xchg
cmp
cmp
js
sbb
orl
adc
outsb
and
mov
clc
rorb
lcall
int
xchg
inc
loopne
adc
or
xchg
loope
mov
lret
pusha
dec
jbe
add
mov
jl
insb
sub
xchg
push
into
sbb
adc
pop
push
add
mov
jge
sub
cmp
mul
dec
addr16
push
shll
hlt
push
mov
mov
lcall
std
and
shrb
scas
inc
arpl
xor
pop
or
add
in
jo
stc
in
adc
iret
sub
mov
pop
push
cmc
shrb
outsb
xchg
pop
rcrl
daa
fsubrl
and
mov
ja
sbb
fmull
or
mov
lret
mov
xchg
push
aad
aaa
mov
xchg
pop
frstor
xor
dec
lcall
add
fdivp
adc
push
cld
or
sbb
test
jo
sub
jo
mov
inc
test
in
ror
repz
mov
inc
iret
test
push
cwtl
cmp
xor
mov
sub
pop
push
pop
push
push
dec
loope
stos
push
out
mov
add
inc
adcb
jl
xor
je
mov
out
mov
xor
mov
add
jl
sub
mov
dec
cmc
and
fwait
loopne
inc
mov
gs
es
jg
adc
mov
inc
push
jle
aad
sub
scas
arpl
ds
insl
shrb
dec
mov
sbb
popf
sbb
popf
mov
nop
movsb
fldcw
mov
add
jl
fs
jge
sub
in
xchg
mov
shl
mov
cmp
out
xchg
add
mov
int3
out
pop
jae
sub
mov
pop
inc
gs
adc
call
jle
mov
push
or
pop
jl
push
daa
leave
push
ds
inc
inc
pop
add
sub
push
push
and
cmp
adc
sbb
cmc
push
testl
fwait
or
xchg
cmp
pop
sub
fcmovne
loop
repz
cli
add
insl
and
mov
sbb
sub
sub
lods
fwait
out
xchg
add
insb
nop
rcrl
adc
les
mov
mov
cmpsl
pop
loop
mov
pop
xlat
sbb
sbb
mov
mov
popf
mov
cmp
pop
fstpt
xor
sbb
push
xor
rol
inc
std
sbb
or
pop
mov
xlat
dec
jecxz
add
cmp
loop
mov
pop
and
test
xlat
hlt
xor
mov
ljmp
int3
rorb
push
aaa
inc
popf
add
sbb
or
sbb
loopne
adc
leave
out
xor
lahf
adc
repz
mov
bound
push
fdivrl
lea
push
and
xchg
divb
add
imul
or
push
xor
mov
imul
push
adc
jmp
lds
fmuls
leave
push
add
mov
sub
notl
jo
je
dec
sub
jb
enter
lock
or
add
and
sub
add
xor
push
test
shrl
enter
in
or
dec
pushf
aas
cmc
xor
mov
xlat
or
xor
fs
mov
jbe
mov
jae
out
mov
cmc
std
cmpsl
hlt
mov
js
or
enter
pusha
jb
sub
and
sub
out
adc
inc
push
push
orl
mov
pop
jp
je
cmp
cmp
xor
cmp
xchg
jns
xor
pop
mov
imul
leave
sbb
mov
aam
dec
adc
inc
xchg
ror
push
addr16
sub
sbb
std
or
cltd
and
xor
or
scas
in
ss
in
fsubrs
jecxz
xor
inc
push
cltd
outsl
xadd
iret
aad
out
orl
mov
jle
push
mov
sahf
sub
push
out
rorl
mov
inc
sahf
mov
aas
pop
fwait
movsbl
push
sub
dec
push
ja
adc
push
jmp
mov
add
adc
mov
add
push
or
mov
mov
xor
xor
pushf
jnp
mov
cmpsb
repnz
xor
sbb
inc
les
insb
jge
das
imul
movsl
push
xchg
pop
push
mov
icebp
mov
insb
dec
or
jle
jno
call
lret
mov
inc
sub
push
adc
ljmp
rolb
jl
pushf
mov
jnp
pop
cld
or
movsb
xor
cli
pavgb
aas
sbb
mov
inc
dec
out
mov
xor
jle
cmp
mov
push
test
stos
push
pop
push
cmp
fwait
rclb
push
pop
xor
sbb
loope
call
fmuls
mov
xor
mov
and
cmp
xchg
dec
pusha
in
jbe
or
dec
jns
ret
in
mov
mov
mov
mov
adc
and
outsb
ljmp
leave
dec
mov
in
add
mov
mov
sbbb
leave
fs
sub
lea
inc
push
cld
les
xor
mov
in
ljmp
adc
pop
cmp
pop
fcomp
mov
data16
clc
sbb
jno
dec
out
jle
push
xlat
lcall
lods
pop
mov
inc
sti
aam
sub
push
imul
fdiv
jb
fdivrs
inc
out
dec
cmpsb
push
jae
or
push
outsb
add
ffreep
in
mov
or
mov
cltd
out
cmp
or
scas
ds
sbb
dec
les
stc
adc
sbb
das
xchg
pop
fwait
mov
add
pop
mov
sub
jle
ds
dec
gs
sub
adc
repz
idivb
lret
jb
sahf
cs
mov
mov
sti
mov
sti
inc
lret
jl
push
int
push
stos
insl
loop
cmp
outsl
addr16
jb
dec
aas
std
or
adc
dec
scas
popa
fildl
std
cmp
pop
mov
lock
pop
cmp
incb
push
mov
or
sbb
jne
cmp
sti
jnp
fs
pop
dec
and
in
pop
fnsave
xor
pop
shl
loopne
loope
xchg
loop
sbbb
jge
insb
push
push
sahf
stos
jecxz
mov
mov
inc
hlt
arpl
cmp
or
pop
dec
lea
lret
pop
cmp
into
push
mov
xchg
daa
cmc
push
lds
add
add
add
pop
sub
sub
test
bsf
xor
or
mov
adc
btr
call
lcall
xor
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
shl
sub
xchg
mov
mov
add
or
cmp
test
cmp
btc
bsf
jmp
lcall
ret
or
not
sub
not
test
test
adc
bsf
bswap
bsf
adc
jmp
lcall
xor
add
add
pop
xor
xchg
push
cmp
mov
sub
xor
bts
inc
mov
call
lcall
incl
ret
neg
sub
adc
shr
bsf
or
shr
and
shr
cmp
jmp
lcall
mov
bsf
inc
bts
adc
or
xor
add
mov
mov
mov
xchg
push
push
xchg
dec
add
add
call
test
cmp
test
adc
xor
mov
or
cmp
add
mov
neg
add
add
test
sub
sub
adc
mov
shl
sub
xchg
mov
sub
neg
cmp
bsf
btc
or
shl
jmp
lcall
ret
or
bsf
or
movzbl
adc
shl
mov
adc
test
bsf
call
lcall
add
xorl
pop
xor
xchg
push
bsf
add
sub
xor
btr
mov
cmp
jmp
lcall
stc
add
xchg
ret
neg
sub
and
and
or
test
test
cmp
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
add
mov
btr
btc
add
mov
test
or
not
btc
jmp
lcall
push
add
adc
mov
in
mov
sub
mov
sub
btr
add
mov
bsf
cmp
cmp
bsf
adc
shl
and
call
lcall
add
adc
btc
cmp
shr
inc
and
and
neg
call
lcall
push
add
rolb
test
bt
or
or
not
btr
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
add
inc
bt
xor
adc
cmp
adc
or
bts
or
call
lcall
out
pop
btr
btr
cmp
sub
and
or
add
btc
jmp
lcall
jmp
add
int3
mov
shl
bts
dec
or
test
mov
cmp
shr
dec
sub
bts
neg
add
test
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
push
cmp
movswl
cmp
shl
neg
sub
xor
shr
shl
push
mov
add
bt
add
add
bt
shl
adc
add
and
mov
not
movzwl
xor
cmp
movzbl
shl
xor
add
mov
bts
shr
xor
shl
or
test
adc
jmp
lcall
and
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
call
mov
neg
test
test
xor
movsbl
cmp
cmp
btc
call
lcall
add
bswap
and
add
bswap
shr
sub
cmp
mov
add
mov
adc
mov
add
dec
shl
bsf
btc
sub
mov
and
cmp
and
xor
adc
shl
shr
call
lcall
mov
movzwl
adc
sub
mov
adc
mov
or
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
shr
add
bsf
bswap
cmp
not
cmp
inc
shr
btc
btc
shr
shl
bsf
dec
shl
or
mov
jmp
lcall
movsl
xor
mov
adc
btc
btc
sub
movswl
mov
add
bts
bt
and
adc
sub
btr
mov
call
lcall
add
mov
or
mov
btr
adc
bsf
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
add
cmp
xor
test
shr
cmp
adc
btr
test
adc
sub
mov
test
bt
and
sub
shl
cmp
xor
movswl
bsf
mov
sub
sub
shl
bts
sub
cmp
and
mov
add
bsf
btc
shr
sub
adc
inc
mov
xor
dec
lea
inc
cmp
jne
adc
shr
test
movzwl
bsf
xor
btc
add
add
and
test
test
bt
btc
xor
adc
xor
call
lcall
je
xor
mov
cmp
movzbl
mov
btc
not
mov
sub
mov
bsf
add
neg
sub
bt
cmp
and
not
call
lcall
mov
shr
bt
bts
mov
btc
add
sub
add
not
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
or
cmp
and
bts
adc
shr
movzwl
call
lcall
cmp
shl
mov
add
btr
test
sub
bts
xor
inc
add
xor
bts
bts
cmp
mov
adc
bt
movsbl
jmp
lcall
jae
add
bt
mov
shl
adc
mov
add
dec
shl
shr
adc
mov
test
shl
btr
call
lcall
add
or
sub
shl
btr
btr
not
sub
add
push
pop
inc
add
loop
xor
xor
or
adc
btc
mov
push
decl
mov
add
and
bts
movzwl
sub
sub
mov
btc
not
or
btr
call
lcall
jmp
call
ss
mov
cmp
btc
mov
bts
mov
push
shll
test
bt
mov
bswap
adc
and
or
not
push
and
dec
and
xor
or
not
mov
sub
mov
adc
neg
test
bts
bt
or
or
shr
push
push
pop
add
add
call
btr
cmp
bt
test
cmp
inc
shr
xchg
and
cmp
cmp
xor
cmp
add
add
or
mov
add
mov
bts
btr
bts
shr
not
cmp
inc
call
lcall
mov
ret
mov
loopne
loop
das
inc
sti
imul
xor
and
dec
add
btc
xor
mov
test
inc
dec
bt
xor
call
lcall
into
and
or
add
adc
not
or
cmp
bt
dec
bts
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
sub
and
adc
btc
inc
sub
bsf
shr
add
bt
mov
bsf
test
or
cmp
adc
mov
sub
dec
call
lcall
adc
shlb
sub
test
btc
and
xor
dec
mov
test
cmp
shl
test
adc
xor
bts
cmp
je
adc
and
dec
add
btc
movsbl
shr
btr
add
btr
mov
and
or
adc
xor
dec
call
lcall
xor
test
btr
cmp
cmp
shr
sub
cmp
inc
sub
cmp
cmp
cmp
test
neg
not
sub
call
lcall
je
mov
call
lcall
mov
mov
shr
loop
mov
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
and
call
lcall
jne
mov
and
call
lcall
sub
bt
cmp
inc
or
xor
bsf
cmp
push
decl
mov
add
adc
adc
xor
add
not
test
btc
cmp
adc
push
decl
mov
add
dec
adc
bts
shr
bswap
shr
btr
btr
bts
add
or
adc
add
shr
and
adc
cmp
btc
jmp
shr
xor
cmp
bt
shl
bts
sub
mov
xor
shl
add
movzbl
xor
or
or
not
mov
or
cmp
not
mov
not
bt
or
mov
add
xor
mov
add
sub
sub
mov
btr
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
cmpl
je
call
lcall
add
add
mov
jmp
lcall
cmp
jne
call
lcall
add
mov
jmp
lcall
call
lcall
jne
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
cmpl
je
add
mov
push
pop
pushl
pop
add
call
lcall
add
test
add
add
cld
mov
add
mov
or
call
lcall
in
add
or
jmp
lea
call
lcall
mov
sub
mov
jmp
lcall
mov
add
mov
btc
neg
bts
or
shl
neg
add
or
bt
dec
mov
add
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
jmp
mov
add
call
lcall
jmp
mov
sub
or
btc
mov
btr
sub
push
push
cmp
bsf
sub
btc
movswl
cmp
not
mov
adc
not
push
sub
mov
mov
mov
or
and
shl
adc
btr
mov
cmp
add
shl
bt
or
not
cmp
call
lcall
js
xlat
int
fsubs
jmp
out
mov
cmp
not
bt
test
lea
btc
xor
test
test
shl
adc
neg
mov
btc
sub
and
test
and
and
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
call
lcall
xchg
dec
mov
scas
add
and
bt
and
add
and
sub
mov
mov
xor
sub
adc
bsf
cmp
or
push
btr
adc
sub
mov
btr
test
or
test
mov
push
mov
or
and
bt
xor
adc
push
test
xor
test
adc
test
shl
and
call
lcall
mov
mov
sub
cmp
add
shl
mov
cmp
shr
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
sub
mov
adc
shl
cmp
bsf
sub
call
lcall
sub
mov
sti
cmp
adc
movzwl
and
add
add
mov
or
bts
adc
xor
add
sub
shr
call
lcall
mov
sub
btr
btr
btc
adc
bts
and
jmp
lcall
or
jne
call
mov
xor
xor
sub
dec
je
js
mov
cmp
je
cmp
je
cmp
je
inc
jmp
sub
add
sub
jmp
sub
add
sub
sub
jmp
pop
ret
pusha
mov
mov
cld
mov
mov
inc
mov
inc
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
jae
xor
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
je
push
sub
mov
pop
mov
inc
jmp
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
sub
jne
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
push
mov
sub
rep
pop
jmp
dec
shl
mov
inc
mov
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
cmp
jae
cmp
jb
inc
push
mov
sub
rep
pop
jmp
cmp
ja
add
push
mov
sub
rep
pop
jmp
mov
inc
xor
shr
je
adc
mov
push
mov
sub
rep
pop
jmp
mov
sub
mov
popa
ret
push
mov
mov
mov
mov
shr
xor
add
dec
jne
pop
ret
and
sub
and
imul
outsl
je
arpl
and
xor
sub
sub
add
sub
sub
fs
insb
outsl
jo
gs
and
popa
imul
imul
sub
sub
and
sub
and
insl
popa
imul
insl
popa
jae
data16
insl
popa
imul
sub
and
sub
and
je
and
and
je
cmp
das
ja
ja
outsb
imul
insl
jne
outsl
insl
popa
jb,pn
das
and
sub
add
sub
sub
push
dec
dec
push
and
dec
inc
push
inc
dec
and
dec
push
inc
inc
push
inc
inc
and
push
dec
and
dec
inc
dec
inc
and
dec
push
inc
inc
push
dec
push
and
sub
add
adc
add
loope
add
ud2
sbb
cmp
iret
add
ret
mov
imul
ret
mov
or
out
call
mul
aam
push
and
add
imul
adc
rolb
nop
stos
push
repnz
int3
sub
fdivrs
sub
ss
clc
or
xchg
add
sub
push
sub
cmpsl
xor
jle
xor
push
daa
jns
repz
add
stos
andl
lock
or
cmp
cmp
lock
mov
in
test
mov
push
adc
fisubl
cmpsb
aam
and
jmp
add
inc
adc
add
shl
add
fisttps
or
push
test
push
mov
sub
add
mov
lea
fsubl
sbb
sbb
xchg
mov
inc
and
add
pop
sbb
add
nop
inc
mov
subl
out
mov
aad
jg
call
add
mov
xor
push
inc
push
dec
push
loopne
inc
pop
inc
aaa
push
cmp
pop
dec
push
dec
into
inc
inc
inc
xor
xor
jnp
cmp
push
jl
dec
inc
xor
rclb
pop
hlt
push
push
dec
push
inc
push
fmulp
cmp
push
inc
inc
xor
adc
inc
aaa
cmp
xor
mov
xchg
dec
test
dec
dec
ss
push
push
aas
inc
inc
stc
sbb
dec
inc
test
add
gs
dec
dec
cmc
adc
add
test
push
aaa
xor
dec
jns
add
dec
push
cmp
push
shll
shlb
pop
repz
ds
fs
cmp
sub
sbb
xor
inc
cmp
cmp
pop
pop
mov
push
inc
in
rcrl
inc
push
lret
jns
cli
ss
jbe
nop
inc
loope
add
and
aam
sub
insb
outsl
jae
and
sbb
jne
jp
jb
popa
outsb
popf
cmp
cmp
je
out
repnz
ljmp
ja
imul
bound
mov
adc
inc
pop
cli
and
outsl
push
sti
ret
cld
adc
push
push
imul
dec
push
xchg
pop
stc
push
gs
repnz
jmp
jp
jbe
stc
shrb
stc
into
inc
es
push
jns
in
arpl
pop
jb
call
sbb
gs
into
sbb
adc
push
test
or
addr16
call
inc
adc
add
and
adc
outsl
fs
pop
data16
cwtl
add
jmp
insl
dec
sbb
decl
cmpsb
push
lock
adc
stos
mov
cmc
stos
add
repnz
push
push
inc
push
dec
push
je
or
fcoml
call
loop
sbb
lahf
add
or
push
gs
int3
sbb
jae
popa
jne
fwait
add
in
movsb
ret
jae
and
or
pop
insb
jns
imul
adc
daa
or
mov
pushf
fsubl
jle
bound
das
push
sub
sub
sarl
jmp
insb
fs
inc
pop
push
push
dec
sub
mov
jmp
rclb
add
dec
inc
push
add
inc
push
inc
pop
sarl
lret
push
or
dec
inc
jp
lods
addb
