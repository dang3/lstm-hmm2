cmp
sbbl
mov
sbb
xchg
lahf
jecxz
and
test
jge
sub
mov
mov
rolb
or
add
sahf
inc
rorb
adc
xchg
mov
dec
packsswb
in
jg
arpl
mov
add
sub
push
xlat
pusha
aaa
xchg
mov
js
mov
inc
push
push
jnp
mov
mov
sti
sbb
std
jle
sbb
pop
jns
fistps
adc
fwait
pop
lret
sbb
cmp
in
inc
mov
arpl
mov
scas
lret
sbb
jno
pop
add
lret
fnstcw
pusha
jl
xor
loopne
mov
ret
loope
aas
jae
jecxz
in
jns
add
gs
jmp
stc
negb
das
jb
roll
fisttps
lea
jl
mov
loop
mov
arpl
jp
fs
inc
insb
inc
mov
jbe
in
jbe
xchg
dec
mov
or
lods
mov
ljmp
mov
sbb
lahf
pop
fwait
cmp
lcall
cltd
aaa
mov
aad
call
adc
enter
adc
push
add
xor
xor
jecxz
stos
jp
repz
lret
repz
push
fdivs
dec
mov
inc
shr
jp
das
mov
or
movsb
or
cvtdq2ps
icebp
popa
mov
inc
add
cld
xchg
jl
xchg
js
inc
popl
popa
lahf
cs
push
je
cmp
xchg
test
dec
sub
insb
or
or
stos
sbb
clc
out
xor
sbb
push
lret
push
gs
push
jo
in
inc
fdivs
pop
xchg
pushf
hlt
fstpl
lea
in
cmpsl
mov
mov
adc
outsl
cmp
or
aad
push
roll
jne
cmc
pop
push
xchg
dec
cmp
jl
add
loop
jns
inc
cwtl
and
xor
mov
pop
lods
bound
imul
scas
scas
bound
pop
and
aam
int3
scas
inc
shr
scas
jmp
jmp
xchg
pop
push
jmp
xor
rcrl
push
daa
fisubs
push
adc
lods
popa
adc
jne
mov
scas
pop
push
iret
sub
imul
movsl
std
ss
push
sub
jmp
mov
fcmovnb
dec
push
jecxz
lret
sti
outsl
sub
mov
jmp
sub
jb
jg
mov
mull
sub
inc
inc
sub
mov
pop
mov
fisttps
popa
lcall
ljmp
daa
cmp
lret
sbb
jl
push
cmp
cmp
mov
pusha
insl
aaa
stc
push
ss
ljmp
xor
hlt
jge
fiadds
rcrb
cmpb
rol
aas
cmc
adc
mov
push
and
mov
pop
push
cmpsl
cmp
lock
loope
dec
arpl
fistpll
lret
lods
scas
mov
sti
sti
xchg
mov
sub
mov
pop
mov
push
lahf
daa
adc
pop
xchg
jb
or
out
sbb
in
xor
fwait
and
adc
push
pushf
pop
dec
pop
loop
xor
inc
push
ljmp
xchg
jne
dec
stos
out
enter
mov
jle
and
stc
xor
cmp
pop
jns
jne
adc
cmpsb
mov
enter
scas
lods
es
in
stos
xchg
pop
into
pop
mov
dec
xor
dec
daa
push
sbbb
std
inc
xlat
test
xor
in
mov
cs
movsl
pop
xor
outsb
cld
decl
add
ret
popf
adc
sbb
clc
mov
pusha
je
cmpsl
fldt
jecxz
or
sahf
pushf
jecxz
sub
mov
cmp
cwtl
mov
out
cs
rcrl
out
fdivrp
std
icebp
jnp
lods
push
jnp
xchg
xchg
add
mov
out
cmp
mov
xchg
mov
lds
mov
inc
hlt
and
movsl
adc
mov
lret
jge
xchg
nop
jbe
push
lds
inc
mov
pop
mov
fdivl
movsb
mov
add
dec
cmp
mov
outsl
or
jnp
je
mov
mov
cmp
jo
dec
xchg
xchg
xchg
cli
dec
jno
pop
add
jge
pusha
sbb
popf
sbb
dec
shll
sbb
push
jle
fldcw
push
or
push
inc
pop
jmp
push
xchg
pop
mov
adc
cwtl
jne
repnz
mov
divl
lea
imul
push
sti
mov
mov
or
iret
enter
mov
dec
call
lods
loop
adc
sub
jmp
mov
fsub
fsubl
push
jnp
xchg
mov
mov
mov
arpl
out
rcr
jl
nop
inc
shlb
nop
mov
mov
mov
jg
rorl
mov
pop
fdivrp
rolb
daa
int
enter
mov
xchg
out
cltd
sbb
sub
and
mov
xchg
xor
push
lods
or
push
fnstenv
adc
jmp
out
fisttpll
arpl
dec
lcall
push
push
inc
lahf
daa
sub
adc
sbb
adc
xchg
push
imul
ret
sub
push
call
pop
fdivl
sbb
dec
fsts
xchg
dec
fnsave
push
mov
lret
addl
add
cmc
push
sub
pop
dec
inc
cmc
stc
lea
clc
push
mov
pop
test
test
cmc
push
jne
cmp
pop
push
and
pop
push
call
out
dec
add
or
xchg
vpavgw
mov
or
jno
push
enter
add
jmp
jmp
call
jns
push
push
sub
pop
pop
test
push
push
test
pop
pop
addr16
addr16
jae
push
or
pop
or
add
mov
push
push
xchg
pop
pop
and
and
xor
cld
or
push
jno
and
pop
test
lea
clc
add
jmp
scas
lea
pop
mov
popa
sti
loop
add
or
enter
loope
sbb
ret
mov
pop
cs
inc
mov
add
shl
push
add
pop
loop
jecxz
push
fildll
out
adc
cmpsl
mov
out
dec
dec
in
cld
push
cmp
pop
cld
mov
cmc
test
cmc
nop
push
pop
push
push
add
pop
pop
cmp
push
sub
pop
clc
testl
je
jmp
outsb
mov
das
int3
cmp
out
mov
and
pop
jnp
arpl
xchg
rcr
jl
loopne
div
sub
pop
inc
repnz
in
xchg
mov
mov
push
add
pop
jmp
loope
fdivr
xchg
xchg
aam
loopne
mov
push
cmpsb
hlt
xor
add
popf
or
ret
mov
je
jp
andb
cmp
cmp
sbb
mov
jb
test
adc
add
jnp
shl
jmp
sbb
hlt
mov
xchg
out
fdivs
hlt
cmpl
adc
hlt
mov
les
cmp
adcl
iret
mov
sub
sub
cmc
pop
inc
cmpsl
outsl
mov
inc
inc
inc
inc
test
cld
test
push
push
pop
add
pop
clc
cmp
dec
jne
loop
jecxz
enter
pusha
inc
jp
push
and
pop
loop
jecxz
inc
jg
lods
lahf
inc
mov
loop
jecxz
lea
cmp
push
inc
xor
int
es
add
icebp
ljmp
xor
mov
or
cli
xlat
out
push
add
es
add
pop
xor
and
inc
or
popa
xchg
divb
inc
loop
jecxz
pushf
arpl
nop
inc
push
call
nop
dec
push
lahf
int
sub
cli
pop
mov
or
push
out
xor
pop
jb
push
add
or
push
push
jae
ror
pop
pop
loop
jecxz
pop
fadds
pusha
imul
or
xchg
repnz
popf
jno
ljmp
cmp
xchg
test
nop
stc
cld
jmp
ror
xor
push
jl
push
ror
pop
pop
and
stc
and
cld
or
rclb
mov
cmc
push
rolb
notb
jp
into
sub
push
mov
jne
dec
mov
lcall
hlt
stos
sar
lret
js
imul
xor
ffreep
mov
test
add
cmpsb
pop
xchg
xchg
popa
out
push
and
les
adc
mov
cwtl
adcb
mov
push
cmpsb
push
dec
sbb
mov
adc
sbb
fistl
push
orl
int3
cmp
sbb
pop
pop
and
rolb
sti
shrl
cwtl
and
fimull
js
sub
mov
or
jmp
xor
push
inc
mov
cmpsb
nop
cmp
stc
xchg
insl
push
lret
or
adc
add
movsb
shll
imul
pop
dec
cmpsl
insb
jge
pushf
cltd
mov
ja
xor
lock
std
mov
dec
out
xchg
dec
sbb
pop
push
jne
and
mov
mov
mov
nop
xor
in
test
insb
mov
nop
rcrb
mov
in
pop
daa
mov
or
ss
lret
in
ret
xchg
pop
incb
pop
pop
sbb
inc
aam
mov
outsb
in
xchg
dec
idivl
jmp
jbe
sub
pop
mov
scas
push
ficompl
jg
pop
push
ds
stos
hlt
xor
scas
sub
or
gs
popl
scas
loope
xchg
xsaveopt
fiadds
ret
jne
ret
icebp
or
pusha
stos
test
pop
in
cmp
add
mov
invd
into
and
cs
pshufw
xor
push
sub
pop
xor
cmp
test
sbb
lcall
mov
add
mov
and
cmp
ret
cmp
sub
lret
pop
jne
test
sbb
push
out
dec
stos
faddl
mov
or
scas
insb
pop
push
ss
cmp
mov
mov
lds
sbb
sbb
dec
sub
test
lock
lea
dec
mov
xchg
adc
add
in
push
cmp
outsl
mov
in
insl
fsubrl
fld
arpl
cld
es
xchg
insb
rclb
xor
jp
std
lods
inc
jp
imul
cmp
xor
sbb
inc
sub
xchg
in
xor
movsl
repnz
or
rcrl
paddsw
lahf
cli
dec
xchg
cmp
adc
dec
imulb
xor
pop
sbb
insb
fstpl
dec
push
pop
or
sbb
sub
xor
aas
stos
mov
cmc
aam
sti
mov
add
cli
ljmp
rcll
adc
into
push
scas
xchg
cmp
jns
cmp
mov
faddp
cmp
xor
dec
mov
dec
loope
call
pop
pop
xchg
or
nop
xchg
push
bound
clc
shlb
mov
add
call
rclb
ljmp
add
and
icebp
xor
outsb
mov
mov
out
xor
fwait
cli
mov
jg
mov
leave
or
dec
mov
adc
daa
jnp
lock
sbb
sahf
mov
test
or
cmp
shlb
pop
inc
iret
mov
sbb
mov
mov
push
pop
pop
add
out
into
fs
push
mov
fwait
mov
sbb
cmp
adc
dec
jle
push
adc
jne
cmc
inc
inc
xchg
stc
aas
dec
push
daa
test
adc
xor
test
or
repz
roll
xor
add
mov
ds
dec
cltd
pushf
lock
bound
bound
fcomps
xchg
pop
pop
mov
pop
sub
mov
jmp
into
sbb
enter
lods
jl
les
hlt
scas
sbb
sub
cli
mov
mov
sbb
cld
in
dec
bound
lea
scas
cmp
cmp
jp
pop
mov
push
add
test
cmc
xchg
pop
insb
call
mov
xor
pop
inc
dec
daa
clc
push
mov
mov
pop
pop
add
popa
cli
mov
add
lret
adc
push
scas
dec
sti
inc
xlat
outsl
or
repnz
xor
cld
cmpsb
je
pop
into
push
leave
fisttpl
cmp
sbb
push
mov
or
clc
and
mov
sub
int3
xchg
fwait
jns
aas
in
lret
cs
add
push
mov
lret
aam
push
sbb
jns
test
xor
add
adc
mov
push
fwait
push
mov
iret
adc
fs
dec
cmp
out
mov
jg
movsb
jae
inc
mov
es
jl
pop
sub
mov
cmc
shll
xor
fldl
xor
rorb
xor
sti
and
mov
adc
add
sub
adc
scas
mull
push
or
scas
enter
fldt
xchg
scas
ret
sbb
stos
std
mov
ljmp
arpl
cmp
jnp
mov
pop
jge
jo
cmp
cmc
inc
xchg
clc
stc
loopne
daa
loope
scas
in
pop
xor
popa
push
inc
fsubs
lods
mov
pop
outsb
out
sbbl
cli
in
mov
xchg
pop
and
addl
and
leave
out
mov
movsl
bound
loop
add
pop
push
adc
ja
adc
out
adc
loopne
out
sub
jle
popf
loop
pop
shll
movsb
mov
in
pop
int
adc
jmp
jge
mov
popf
xchg
sbb
or
sbb
push
xlat
mov
or
xchg
jge
mov
aas
cmp
ret
aaa
imul
xchg
outsb
stos
lods
mov
sbb
pop
push
cmp
and
push
or
add
int
pop
sbb
insb
xchg
call
mov
push
adc
aam
stc
mov
pop
dec
cltd
lods
adc
and
mov
sub
xchg
push
stos
test
sbbb
ja
fwait
dec
push
aaa
and
ret
lods
jmp
xor
out
and
pop
inc
jns
xchg
test
add
fisubrl
jle
dec
inc
sub
and
testl
jmp
pop
jo
and
inc
jp
in
aam
repz
aas
pushf
pop
mov
ret
cltd
lds
fsubs
cs
adc
ret
push
sbb
adc
addl
into
test
mov
mov
cmp
in
xor
mov
dec
popl
inc
adc
mov
loopne
cltd
inc
xchg
mov
sbb
mov
pop
push
movsl
outsb
insb
dec
push
mov
add
cmp
cmp
orb
je
adc
fcmovb
ljmp
cld
xchg
mov
repnz
pop
mov
xchg
sbb
or
xchg
push
and
add
lret
jl
lds
mov
inc
mov
pop
jge
imul
xor
pop
inc
mov
das
sub
rcrb
xorl
pop
adc
insl
pusha
jbe
nop
and
mov
jne
push
fistpl
out
scas
es
stc
les
mov
movsb
mov
mov
xchg
push
cmpsl
xchg
pushf
mov
ret
and
mov
and
mov
jl
movsb
lea
imul
xor
fcompl
mov
sbb
les
js
stos
lods
mov
call
jmp
es
mov
jns
pop
mov
sarb
dec
push
pushf
xor
cmpsl
xlat
out
adc
and
mov
cltd
jg
ficoml
loopne
outsl
mov
lods
shl
andb
jg
pop
xchg
mov
xor
mov
add
jl
jb
sub
mov
test
sbb
sbb
ja
out
shlb
jmp
lods
imul
mov
or
xchg
jne
jnp
cmpsl
xor
sbb
fistl
cmp
pusha
and
inc
sbb
stc
sub
sbb
ret
negb
adc
stc
out
sbb
jl
inc
mov
stc
push
repnz
mov
jae
inc
xchg
add
fisttpll
repz
xor
ret
pop
mov
adc
stc
mov
xchg
aaa
std
nop
sbb
cltd
push
pop
or
sbb
dec
mov
pop
aad
xchg
pop
xorl
jbe
cmp
or
cltd
xchg
inc
add
mov
xchg
fildl
fwait
rolb
sub
clc
sub
sahf
mov
mov
add
mov
int3
jge
lcall
inc
pop
push
scas
sub
adcl
in
push
rcrl
fwait
cmp
dec
std
mov
stc
bound
stos
adc
cltd
add
jo
loope
outsb
into
mov
push
adc
rclb
insl
add
pop
in
xlat
scas
xchg
push
pop
pusha
mov
cmp
daa
dec
sbb
xchg
inc
movsb
xor
mov
push
xor
mov
push
and
xchg
mov
js
in
mov
push
cld
into
repz
or
sti
cmp
xor
xchg
or
outsl
faddl
iret
jno
mov
sbb
lds
scas
not
dec
jl
or
repnz
jae
cmp
dec
lea
jne
xchg
sub
mov
cmp
add
and
clc
loop
in
js
loope
mov
cmp
nop
pushf
push
cmpsl
fs
fcompl
xchg
leave
enter
cmc
jg
stc
lods
movsl
and
je
sbb
ret
imul
cmp
xchg
lahf
nop
sub
inc
lods
cmp
js
sti
cmp
scas
xchg
push
lret
std
dec
push
leave
sahf
xchg
fdivrs
cmp
jecxz
sahf
aaa
mov
insb
sub
mov
lods
pop
daa
daa
rcr
cmp
aaa
adc
daa
ret
add
xchg
cltd
fldcw
dec
rorl
cmp
loope
fdivs
jae
pop
add
iret
inc
lcall
cld
cmp
jp
shr
pop
pop
lret
pop
xor
cld
inc
aaa
stos
pop
mov
loop
flds
ffreep
mov
pop
dec
xor
out
cmp
xor
dec
test
into
and
push
popf
in
xchg
lea
push
jl
mov
bound
les
jecxz
stos
xchg
je
test
out
lods
les
leave
adc
test
outsl
jmp
fstl
out
iret
sahf
jmp
adc
call
mov
xchg
ret
out
loop
mov
inc
mov
ret
cmpsl
xchg
sbb
jl
push
pop
cwtl
pop
adc
add
add
shl
stos
pop
lahf
mov
cmp
jno
jle
lods
xchg
push
loopne
adc
xchg
test
xor
mov
push
or
mov
in
add
in
sbb
jmp
and
pop
cmp
xchg
aad
pusha
and
cmpb
inc
jb
mov
dec
std
int3
cwtl
fbld
adc
loop
ja
cmp
add
push
fsubrl
test
in
ret
cmp
aam
lret
mov
stc
popa
ljmp
adc
adc
xchg
test
xlat
mov
adc
and
add
ficompl
sahf
loop
push
cli
fadd
mov
jae
pop
ja
cmpsl
ds
push
ja
nop
sub
push
jbe
pop
imul
add
icebp
cmp
std
int3
pop
aas
insl
or
mov
xchg
inc
xlat
xor
lds
daa
xchg
sarl
leave
mov
dec
mov
mov
mov
mov
jle
mov
hlt
or
mov
jo
test
sub
push
or
mov
lahf
imul
data16
iret
and
sbb
repnz
xor
nop
aas
cmpsb
jle
out
mov
sub
hlt
mov
inc
mov
push
pop
ds
in
out
pop
jo
rcrl
movl
pushf
push
out
mov
cmc
test
xor
cld
jb
les
xor
add
shll
mov
push
cmp
les
loopne
maskmovq
idivl
fs
js
test
inc
fcomip
xchg
xchg
fidivrl
addr16
insl
pop
std
out
fwait
jne
push
mov
lods
sbb
mov
cmp
cmp
ret
ret
or
and
les
sbb
ljmp
sub
std
lret
imul
sub
adc
ret
ficompl
xor
ficoml
mov
and
adc
loope
out
addr16
xorl
out
push
lahf
addr16
inc
adcl
xchg
out
iret
scas
mov
movl
xor
push
out
popa
fnsave
sbb
add
mov
lret
scas
std
repnz
jns
out
adc
outsb
pop
cmpsb
fs
gs
pushf
cmp
sub
adc
stos
or
or
xor
mov
inc
scas
lret
and
xor
mov
scas
sahf
mov
cmp
lret
test
pop
shrl
pop
sahf
stos
in
testl
out
or
mov
add
lea
jnp
test
rclb
repz
rcrl
or
pop
inc
mov
stc
inc
add
pop
cltd
sbb
lret
int3
inc
mov
jbe
mov
dec
pop
inc
repz
jecxz
mov
je
dec
pop
xchg
int3
cmpsb
pop
adc
subb
lods
push
out
test
xor
ret
cmpsl
push
pop
das
pop
xor
jns
js
cltd
leave
out
or
and
sub
and
pop
adc
jno
in
adc
pop
jp
sbb
lods
call
arpl
jp
fcomip
xchg
push
push
cmp
ret
xchg
inc
xchg
pop
ljmp
scas
xor
mov
adc
pusha
mov
add
add
jae
xor
imul
jl
cld
test
daa
push
inc
subl
repz
scas
sbb
mov
data16
sub
data16
aad
push
mov
inc
hlt
fimull
mov
sbb
xor
sarl
sub
lret
lea
out
fstpt
inc
test
ds
cli
outsb
dec
add
cmp
add
jne
xchg
lds
icebp
sbb
fnsave
xor
cli
popa
jg
inc
mov
xchg
add
pop
popf
pop
test
outsb
cmp
push
lret
push
mov
das
lods
mov
imul
lds
lods
xchg
jns
mov
mov
inc
or
xchg
repnz
mov
sub
movsl
js
adc
mov
lds
mov
xchg
sbb
repnz
pop
sbb
lret
test
test
arpl
data16
loopne
rep
iret
add
cmp
mov
call
sbb
cwtl
or
mov
sti
int
inc
lods
lods
ficoml
gs
push
std
jge
enter
sbb
cmpsb
cwtl
iret
fldcw
xchg
add
mov
ljmp
sti
sbb
outsb
push
mov
jle
lods
xorb
inc
inc
outsl
jmp
mov
test
outsl
cltd
cmp
or
mov
add
add
pop
lret
call
xchg
ret
dec
ret
push
and
lods
out
inc
or
mov
cmp
cmpsl
mov
add
pushf
lods
dec
xor
pop
mov
repnz
ret
ljmp
pop
xchg
cli
test
stc
mov
das
add
push
cmp
insl
sbb
inc
sahf
cld
fsub
icebp
gs
sub
add
push
in
icebp
jl
pop
fstl
test
into
sbb
mov
jo
jno
dec
mov
pop
lret
xchg
ret
cwtl
aaa
cmp
sbb
push
les
lret
jne
mull
or
adc
cmp
arpl
xor
out
inc
dec
ss
xlat
ja
xor
gs
notb
dec
popa
mov
mov
sbb
ss
dec
mov
mov
mov
pop
fdivs
outsb
jo
orb
push
popa
sub
xor
dec
sahf
bound
jbe
inc
clc
dec
mov
jb
ds
push
and
subb
out
sbb
jae
xor
jns
and
faddl
pop
sahf
lea
or
insl
outsl
mov
ret
fistps
xchg
pop
lods
icebp
and
xchg
push
les
dec
mov
and
sub
adc
dec
rclb
test
dec
and
orb
jo
jge
add
inc
pop
pop
call
add
rolb
sbb
scas
mov
insb
scas
push
sbb
out
arpl
stos
push
into
and
cmp
je
adc
or
lret
push
in
add
iret
sub
inc
movsl
jo
les
dec
pop
push
xchg
cli
loop
xor
dec
sub
aad
mov
add
jmp
out
sbb
stos
pop
int3
pop
orb
mov
ljmp
into
push
pushf
je
lcall
enter
mov
in
cmp
push
leave
pop
bnd
jge
adc
xor
das
mov
and
push
jb
xlat
and
mov
inc
ret
inc
fidivs
inc
lret
lock
pop
push
in
and
jno
xchg
xchg
nop
lcall
xorb
shll
aad
stos
sarb
loop
or
ljmp
ror
add
clc
dec
jmp
jo
fwait
jns
std
dec
mov
pop
jecxz
lds
xchg
cmp
and
adc
jecxz
push
jp
pop
pop
sub
push
pop
xchg
jae
loopnew
imul
dec
dec
xor
add
ss
sub
icebp
mov
xor
adc
mov
js
dec
testl
out
sub
mov
push
sbbb
out
jnp
test
xchg
mov
mov
outsl
jb
jns
adcl
gs
out
add
pop
sbb
mov
push
mov
xor
sub
jns
shll
mov
ds
cmp
lock
dec
fdivrl
shll
insl
imull
dec
xor
jno
mov
xchg
rolb
add
xchg
scas
jl
lea
or
or
jo
hlt
cmp
mov
jl
loopne
loopne
jg
push
push
in
jmp
xchg
inc
cmp
mov
call
nop
xchg
imul
rorl
mov
in
dec
sahf
movsb
xchg
xor
sub
mov
scas
dec
idivb
jl
test
sti
inc
outsl
adc
sbb
arpl
insl
push
test
adc
lahf
sub
mov
adc
das
int
sahf
xor
mov
xor
push
lea
bound
sbb
mov
dec
sub
dec
adc
aaa
ret
inc
dec
fistps
aad
sub
out
xchg
pop
fildll
xchg
add
jno
cwtl
es
cli
and
add
lret
sbb
jmp
test
int3
mov
pand
mov
cs
cld
jne
jo
sub
add
mov
mov
mov
mov
loope
fnstenv
popa
jmp
int3
rcr
cmp
out
mov
popa
xchg
xor
je
fcoms
push
dec
imul
sub
jo
jge
das
dec
imull
sub
cmp
pushf
cmp
mov
imulb
outsb
xchg
jmp
xor
in
std
pushaw
mov
shlb
loop
push
mov
clc
insb
or
xor
insb
fmul
les
push
stos
adc
and
cmp
lret
jl
jmp
inc
cmp
jl
jmp
mov
out
xor
adc
sbb
cmp
shlb
xchg
imul
test
pusha
test
push
js
mov
addr16
mov
ds
scas
inc
mov
xchg
movsb
sub
popa
ficoml
adc
cmovnp
adc
push
stc
mov
stc
dec
pusha
pushf
or
frstor
push
scas
icebp
fs
xchg
push
mov
aas
in
pop
lret
outsl
inc
stos
cmp
and
mov
add
outsb
cwtl
fadd
xlat
adc
inc
arpl
xchg
lcall
sbb
lret
pushl
pop
adc
sarl
fisttps
xor
pop
cmp
mov
adc
mov
push
sbb
mov
jne
pop
add
xchg
or
es
xchg
and
out
inc
outsl
pop
clc
mov
pop
mov
inc
sahf
pop
out
aas
sbbl
jg
cld
mov
jno
xor
push
icebp
push
push
cmp
out
lea
adc
sahf
pop
jb
mov
jecxz
das
cmp
mov
insl
and
adcl
cmpsl
setns
jp
add
push
lret
lds
leave
data16
arpl
fwait
push
xor
jnp
or
lret
in
dec
or
mov
stos
xor
in
push
xorl
js
mov
aaa
inc
sub
mov
clc
and
and
test
ss
cli
je
xchg
sahf
sub
mov
or
into
call
scas
jmp
mov
imul
or
mov
or
mov
pop
cld
fimull
ljmp
into
fwait
xchg
fst
sub
mov
mov
push
dec
inc
ficoml
popf
inc
arpl
fsubr
and
testb
cmp
gs
mov
ret
and
push
jns
add
mov
stos
sbb
push
sbb
or
mov
jo
or
nop
dec
pop
cltd
inc
fidivl
in
cmp
push
mov
daa
pop
fisubrs
in
adc
inc
in
orl
cwtl
repnz
shrl
mov
and
cltd
les
jg
inc
jg
inc
push
cwtl
pextrw
adcb
and
dec
xor
xchg
xchg
adc
bound
adc
in
gs
mov
sub
sbbb
sarl
cmp
push
mov
cmp
xor
ds
int
and
fcoms
sar
xchg
pop
xor
cltd
les
or
rorb
sbb
xchg
addr16
bound
ret
mov
fildl
sub
inc
sub
cltd
jno
cld
mov
outsb
loopne
pop
hlt
addr16
add
lcall
cmp
mov
dec
add
fcoml
or
jl
leave
add
in
xor
sti
cld
inc
mov
adc
push
fisubrl
jge
jo
xor
cmp
icebp
add
nop
fwait
cld
das
inc
dec
or
sbb
sbb
push
mov
jae
cmp
sahf
ss
int
and
cld
mov
dec
mov
add
fadds
fucom
add
cmp
ss
adc
adc
jns
xchg
or
popf
mov
xchg
gs
jno
xor
mov
cmpsl
or
adc
cmp
and
mov
dec
dec
ljmp
sub
repnz
add
xor
pop
sub
xor
xor
repz
inc
adc
mov
fstps
aam
pop
shll
dec
xor
aam
add
adc
imul
jecxz
lahf
fcmove
insb
add
je
ret
outsb
xlat
pop
xchg
or
rorb
sti
aaa
xor
mov
inc
pusha
icebp
mov
stos
mov
cmp
xchg
stos
jg
leave
cmp
or
dec
or
adc
jmp
xlat
daa
popa
outsl
xor
pop
xor
or
pop
arpl
test
or
add
cmp
push
jle
lods
mov
xor
adc
sub
mov
testl
push
mov
push
jne
outsb
mov
and
sub
js
push
xchg
ret
repnz
inc
stos
cmp
or
lret
or
je
into
popl
rclb
xor
popf
or
inc
test
jecxz
or
cltd
outsl
aam
stos
mov
shll
out
jecxz
mov
cwtl
insb
ss
scas
cwtl
lahf
push
pop
stos
and
push
mov
xor
inc
pusha
cs
xlat
dec
mov
pop
aad
cltd
sbb
loop
int3
cmp
jp
jecxz
mov
in
negb
dec
test
sub
dec
dec
cmpsb
fcomps
jae
adc
sbb
push
imul
mov
cs
pusha
push
data16
out
jo
imul
pop
inc
lcall
xchg
push
mov
mov
call
in
mov
xor
sub
push
push
mov
aaa
mov
pop
inc
mov
xchg
xlat
push
dec
add
std
and
movsb
aas
daa
repnz
jle
aad
xor
adc
rclb
add
mul
mov
push
imul
mov
pop
xchg
lds
loopne
jae
sbb
xorb
push
in
adc
stos
repz
xchg
sbb
pop
xor
and
and
loopne
xor
sbb
add
into
loop
sbb
mov
xchg
add
and
inc
mov
push
push
sbb
mov
push
stos
adc
andps
je
test
outsl
mov
fwait
out
cmpsb
call
stos
lock
push
lcall
jg
in
nop
mov
jl
loope
push
mov
stos
dec
icebp
push
push
cmp
or
repnz
pop
xor
jmp
lock
or
mov
mov
cli
mov
mov
mov
mov
test
inc
cmc
lea
jge
sbb
sti
sahf
stos
cmp
cmp
ret
xor
test
mov
mov
mov
push
cmp
icebp
cli
fildl
js
clc
leave
loopne
out
adc
clc
sub
aad
jnp
mov
idivb
pop
inc
xlat
push
add
pop
adc
icebp
test
lret
mov
cmpsl
push
mov
je
movsl
jb
lret
push
insb
js
jmp
inc
xor
xchg
push
jae
dec
or
and
pop
inc
dec
sub
mov
mov
sbb
ss
push
rcll
stos
inc
out
push
mov
and
lea
out
mov
pop
sbb
xor
cli
sarl
adc
imulb
fwait
mov
or
inc
push
addr16
xchg
inc
cwtl
or
rclb
sub
fldcw
daa
cmc
insl
sbb
or
sub
out
pop
xchg
dec
fabs
pushf
es
sub
xchg
push
mov
rcll
call
cmpsb
push
lcall
cmpsb
inc
add
popa
repz
jl
dec
stos
adc
add
mov
xor
movsl
or
mov
sbb
cltd
cmpsb
or
les
jnp
jno
sub
icebp
jmp
inc
or
aam
jge
jl
shlb
xor
popa
lret
outsb
imul
ljmp
dec
or
push
mov
sbb
add
xchg
fcmovbe
stc
es
test
sbb
mov
mov
push
sbb
popf
push
push
fsubl
push
out
jno
pop
lds
sub
push
dec
inc
adc
adc
aam
movsb
dec
and
movsl
pshufw
jb
dec
test
call
add
popf
adc
fisttpll
lds
sbb
jmp
int3
test
mov
pop
pop
out
sub
jae
sarl
dec
mov
repz
mov
rcrb
cmp
xor
jle
xlat
fbstp
divl
call
add
jle
pop
sti
sbb
insl
cmp
sbb
lret
cmpsl
mov
mov
or
jbe
insl
pop
mov
fcmovnbe
in
pop
stc
fimull
leave
adc
mov
ret
fstpl
mov
inc
imul
insb
movsl
mov
les
popa
mov
push
mov
jnp
lock
dec
ds
loope
andb
dec
je
cwtl
mov
pop
cltd
push
xchg
loop
arpl
mov
mov
int
cld
pop
push
out
pop
add
xchg
push
mov
or
cli
push
testl
inc
pop
scas
daa
lods
jge
les
adcb
andl
mov
or
into
out
cmpsl
addr16
mov
xchg
lds
push
loop
push
fwait
lock
mov
lock
dec
or
lcall
cwtl
mov
pop
mov
leave
aaa
aaa
mov
dec
mov
lock
imul
jnp
clc
mov
scas
inc
xor
movb
sub
repnz
sub
leave
insb
cmp
or
add
sahf
dec
xchg
leave
jbe
fs
lock
fsubrs
fwait
sub
popf
in
push
lds
cmp
mov
jnp
push
lcall
mov
mov
shll
dec
jno
notl
mov
js
jp
stc
sbb
sarl
ljmp
cmp
int
ljmp
cmp
pusha
xor
cwtl
add
pop
sbb
fimuls
test
xor
sahf
push
sub
pop
inc
push
mov
inc
imul
xchg
push
mov
add
out
or
xchg
jecxz
les
loope
loope
out
lods
sbb
addr16
jl
jbe
scas
adc
insb
sbb
sbb
leave
add
loop
fistpl
mov
clc
aad
add
ret
sub
subb
add
mov
cltd
lahf
and
xchg
movsb
inc
gs
idivb
jle
and
sub
addr16
add
mov
test
fisubl
push
fbld
fldcw
mov
lcall
in
lcall
in
mov
loope
rolb
xor
out
mov
lcall
fs
xor
mov
xchg
testb
inc
cmp
xor
in
push
jb
pop
iret
xlat
xor
xor
mov
adc
shlb
cmovs
push
mov
cmp
ret
or
popf
dec
std
pushf
jecxz
loope
or
mov
repz
fsubrl
cmp
adc
add
cmp
fwait
lock
pop
test
add
xor
push
cmpsb
push
iret
stos
lret
test
mov
mov
in
jmp
jmp
clc
xor
push
inc
adc
cmpsl
or
mov
enter
xor
mov
pop
push
insb
jecxz
fst
sti
sbb
fs
dec
add
mov
testb
add
ficoms
add
lock
insl
test
xchg
orl
out
ds
mov
aam
sub
cli
out
and
sub
je
movsb
ds
sbb
loop
jns
sti
mulb
fwait
adc
incb
stos
sub
repnz
rorl
sub
or
xor
dec
push
hlt
ja
je
push
insb
ljmp
out
cmp
aam
xchg
lods
in
or
push
pop
xor
cs
mov
fwait
dec
inc
leave
sub
lea
pushf
loope
pop
fwait
iret
and
jo
out
mov
dec
adc
mov
cltd
out
push
and
add
repz
imul
jno
scas
cld
rcrl
or
repnz
ss
mov
cmp
ja
js
pop
cwtl
dec
out
out
out
mov
add
cwtl
cli
pop
scas
in
cmpl
test
jns
push
fs
cld
loopne
mov
and
cmpsb
popf
inc
in
popa
lret
popf
out
ud1
mov
mov
rolb
out
sub
push
inc
inc
cmpsb
jp
push
mov
fwait
jno
adc
xor
adcb
ljmp
rcrl
adc
int3
pop
leave
push
repnz
aaa
and
sbb
push
gs
or
xor
sub
mov
mov
xchg
cmc
or
sub
push
hlt
and
mov
pop
push
fs
add
jae
popa
les
cmpsb
sbb
sub
inc
push
jmp
dec
imul
cwtl
lret
loope
dec
cmp
aas
stos
shll
add
xchg
adc
sub
xchg
outsb
cmp
sbb
pop
and
fistpll
xchg
ljmp
rolb
and
stos
push
mov
or
in
inc
aaa
mov
pop
fstpt
adc
scas
sbb
sahf
push
xlat
jo
aas
lock
add
dec
loop,pn
in
fidivs
mov
dec
jae
adc
push
xor
cmp
ret
je
cmp
fidivs
daa
stc
pop
sti
js
sbb
xor
loopne
clc
jne
dec
mov
dec
ja
out
and
dec
and
adc
aad
lock
std
adc
jb
fstl
mov
and
sbb
xchg
sarb
loop
fmuls
mov
add
jbe
jg
adc
sub
adc
push
mov
aas
cmp
sahf
fnstcw
add
mov
xor
js
mov
xlat
and
sbbl
mov
cwtl
and
sti
jbe
push
loopne
push
cmpsl
scas
call
sub
out
cmpsb
je
clc
xor
mov
inc
lret
cld
outsl
outsb
ja
adc
stos
out
dec
sbb
adc
jns
mov
mov
cmp
loope
fisubrs
jb
shlb
pop
pop
cmp
inc
pop
push
push
push
xor
das
int
roll
out
xor
adc
insb
pusha
mov
or
lcall
mov
xchg
scas
pop
js
ljmp
cmp
movsb
dec
sub
mov
mov
popf
cmp
out
inc
mov
lods
jne
jno
punpcklbw
inc
sbb
pop
xor
adc
bound
xchg
cmp
int3
adc
insl
sti
daa
fisubl
arpl
xorl
mov
movsb
pop
cmp
int
movsb
repnz
sbb
and
pop
dec
mov
incl
loope
je
stos
mov
daa
es
mov
arpl
subl
outsl
divb
pop
lret
add
daa
stos
xchg
scas
movsl
jmp
xor
movsb
xor
jb
shll
sahf
mov
pop
stc
je
xor
popa
call
mov
pusha
or
outsb
lods
lods
ret
aas
daa
inc
stos
sbb
popf
adc
stos
inc
lret
dec
clc
lods
cli
mov
in
out
shlb
push
iret
inc
imul
jae
jge
aad
jge
test
or
pop
cli
aaa
cmp
int3
repz
xor
inc
add
mov
add
push
out
mov
aas
adc
cs
into
xor
mov
mov
push
sbb
mov
inc
sbb
mov
mov
xor
inc
pop
ss
push
aad
jns
pop
inc
sbb
in
dec
ret
dec
sbb
and
dec
inc
movsl
cli
xchg
xchg
scas
sub
dec
push
scas
cmp
cwtl
ret
pop
sub
loope
jmp
cltd
loop
mov
xchg
jb
daa
xorl
mov
pop
adc
scas
out
mov
sub
cs
incl
or
aaa
pop
mov
in
and
cltd
insb
imul
lock
ret
lcall
dec
mov
mov
sbb
adc
mov
ljmp
mov
lahf
lods
cmpsb
lahf
mov
fisttps
xor
or
adc
add
insl
int3
inc
mov
fidivl
dec
mov
lcall
mov
inc
int3
in
and
jmp
fucomip
jp
cmp
xor
dec
hlt
paddusw
xchg
stc
inc
into
mov
fidivl
cmp
test
imul
mov
sbb
jns
dec
aaa
mov
sbb
imulb
fsubrl
xchg
jp
pushf
cmc
inc
xchg
andb
adc
loope
ficomps
test
ds
xor
leave
xor
xchg
mov
inc
push
push
and
fcompl
or
mov
xchg
xor
push
in
lret
test
mov
cltd
sti
mov
cmp
pusha
pop
movb
jno
imul
xor
stos
nop
inc
xchg
loop
addr16
insb
test
nop
insb
adc
punpckhwd
mov
adc
mov
jmp
and
mov
push
jmp
mov
orl
ljmp
test
xchg
movsb
sbb
lock
imul
imul
push
jne
add
dec
inc
std
pushf
and
xchg
and
xchg
insl
repz
andb
dec
fnstenv
jae
cmc
xchg
test
ret
mov
jo
in
stc
cld
xchg
add
hlt
xor
dec
imulb
test
stos
movsl
mov
xchg
lods
aad
pop
and
push
xchg
cwtl
dec
mov
data16
and
sbb
popa
hlt
xchg
mov
shll
adc
adc
dec
lods
cmp
mov
sub
out
inc
xor
pushf
jge
iret
loope
inc
stos
jg
popf
and
or
jne
cmpsl
push
cmpsl
adc
and
mov
int3
icebp
mov
imul
je
call
int
fisubl
xchg
inc
xchg
out
push
jecxz
dec
pop
cmp
mov
imulb
shrl
stc
cmpsl
xor
xor
dec
push
inc
imul
xchg
xchg
test
and
jbe
xchg
inc
lret
dec
test
mov
rcr
rol
lahf
jno
dec
add
scas
sub
out
pop
loopne
jns
pop
inc
and
sub
xor
stos
jo
pop
xchg
cmc
aas
sub
mov
pushf
mov
pusha
mov
sub
dec
xchg
xchg
mov
cli
imul
shlb
mov
sbb
dec
fsts
sbb
dec
stos
cmp
xor
pop
std
shll
pop
add
push
and
and
cwtl
iret
sub
push
inc
xor
rol
and
fnstcw
push
mov
sub
shll
cwtl
ror
popa
and
push
mov
jns
loopne
or
pop
mov
jp
sbb
xchg
dec
pop
mov
add
push
sub
fsts
movsb
push
fwait
mov
dec
mov
repz
popf
data16
addr16
inc
sub
adcl
mov
aas
mov
xor
adc
push
imul
dec
push
lods
inc
pop
sbb
nop
dec
and
std
add
jbe
icebp
or
sub
add
rolb
ret
mov
jp
adc
imul
cli
xchg
add
lods
cmp
stos
cmpsb
pop
imul
dec
out
fisubrl
mov
sub
test
push
mov
cwtl
out
repnz
fmul
pop
mov
lods
imul
sub
in
mov
stos
pusha
mov
mov
sbb
or
jl
inc
rolb
jb
cmp
push
sbb
int
insb
lods
call
in
ret
push
push
popa
out
inc
and
mov
xor
popf
push
and
inc
insl
pop
mov
or
jne
mov
jae
popf
and
inc
into
jmp
pop
sti
and
adc
stos
adc
or
call
add
dec
or
insb
out
in
ds
mov
nop
pop
and
inc
scas
orb
aad
pop
int
inc
xchg
mov
loope
fwait
lea
sar
cmp
lar
mov
sub
pop
into
out
mov
pop
cmc
sub
sbb
out
adc
shll
jo
pop
rep
and
lret
mov
outsb
leave
xor
lods
push
xor
call
scas
pop
cmpsl
adc
repz
mov
xchg
pop
jp
dec
push
psubusb
dec
mov
xor
inc
orl
scas
sub
or
add
lret
pop
push
out
dec
imul
ficoms
outsl
subl
mov
ja
test
push
shrl
mov
cmp
pushf
cli
push
aad
push
xlat
mov
jmp
add
lret
mov
sahf
lods
stos
lods
in
xor
lock
and
sub
dec
in
adc
pop
and
ret
jbe
inc
aad
icebp
cmp
or
pop
cld
push
jle
mov
cmp
sub
icebp
ret
cmp
shrl
push
pusha
adc
fldenv
cmp
repnz
add
or
int
mov
out
jne
roll
add
mov
andl
sbb
adc
and
lea
push
or
pop
xchg
mov
inc
jp
lock
add
loope
sub
int3
insl
stos
add
repz
jecxz
out
std
mov
sub
test
lods
mov
shll
mov
stc
xchg
jl
pop
mov
add
push
cwtl
cltd
fcmovnb
rorb
pusha
cmp
push
xchg
in
cld
bound
mov
pop
fadd
push
lods
jg
fnsetpm(287
push
jge
push
push
ja
push
sarl
fwait
jo
pushf
sbb
fwait
notb
test
stos
xchg
sbb
icebp
jmp
add
mov
sub
inc
push
in
dec
aaa
and
lret
fsts
cmp
enter
cmp
pop
ret
jg
mov
les
push
push
jno
mov
sub
paddq
jg
mov
dec
jge
icebp
loopne
inc
sub
roll
ret
shll
dec
mov
sbb
jne
cmp
dec
icebp
aam
cmpsb
mov
or
int3
and
pop
test
jb
mov
mov
inc
push
jo
sub
insl
jge
inc
and
dec
aad
mov
jmp
mov
add
ret
mov
jp
loop
pop
cmp
pusha
sub
add
jo
jmp
jecxz
jbe
mov
neg
aaa
mov
jecxz
into
orb
ret
int3
stos
add
mov
lret
jae
mov
arpl
pop
sub
loop
push
lock
sub
ss
fstps
scas
movsb
inc
xlat
mov
je
daa
lock
pop
sarl
movsl
jg
sub
daa
out
dec
and
cmc
mov
test
lcall
sbb
or
ret
xor
pop
pushf
fidivl
pusha
lret
outsb
enter
loope
addr16
stos
fisttps
in
mov
clc
imul
data16
ja
push
pop
xor
int3
lods
stc
jno
sbb
sbb
cmp
push
sbbb
cld
or
in
xchg
jg
mov
add
nop
or
fsts
fsub
into
mov
or
ret
jl
pop
fwait
pusha
nop
pop
lds
sub
cmp
stos
or
push
or
add
addb
faddp
mov
jb
test
add
add
mov
mov
je
cmp
pop
sbb
jge
push
aad
int3
std
mov
or
je
les
fwait
outsb
xchg
jne
add
push
inc
cltd
adc
repnz
mov
or
or
pushf
orl
fwait
pusha
popa
sbb
dec
cmpsl
sub
lock
adc
sbb
jno
test
and
inc
cwtl
lcall
mov
popf
sub
jge
int3
push
cmp
int3
loop
and
sbb
add
cld
jo
lds
lods
and
aam
mov
daa
or
jo
cmc
or
adc
lret
sbb
dec
test
fldcw
aaa
add
mov
pop
push
lock
add
vorps
jae
repnz
dec
rclb
in
adc
ljmp
aam
mov
xchg
arpl
inc
je
mov
pusha
mov
mov
mov
cmpsb
mov
ja
or
sar
adc
test
movsb
repz
test
pop
test
addr16
lods
negl
mov
iret
and
cmc
cld
rclb
xor
out
imul
in
or
xor
lock
mov
mov
popa
mov
and
popa
sub
ret
jmp
dec
jg
sub
dec
insl
mov
scas
mov
mov
jae
or
das
outsb
cmp
jno
insl
pop
loop
daa
jnp
shrl
pop
icebp
mov
pushf
sub
cmpsl
ror
add
lea
inc
addl
jmp
out
or
inc
or
ror
notb
sub
ficoms
mov
xchg
sub
push
outsl
or
mov
aaa
mov
adc
mov
hlt
pop
dec
ja
sbb
mov
sarb
mov
aad
ds
mov
jg
dec
and
jle
orl
jbe
fstl
cli
cmp
sub
addl
and
jge
cmp
scas
jge
lods
xor
mov
rcrb
mov
add
das
mov
cwtl
xchg
push
or
cld
xchg
dec
lods
out
mov
fmull
out
mov
sbb
mov
xchg
and
inc
inc
imulb
dec
adc
sub
and
jb
mov
ds
push
and
mov
lods
es
sub
xchg
nop
and
nop
stos
in
jge
aad
push
push
pushf
dec
iret
loop
ljmp
xor
insb
cmpsl
xchg
mov
mov
sbb
and
insb
arpl
iret
sub
bound
bound
add
mov
inc
and
inc
inc
push
adc
xor
mov
stos
iret
shr
dec
sub
sub
sbb
pop
xchg
mov
pushf
les
sbb
dec
pop
jnp
aam
dec
fisubs
sahf
push
lds
pushf
jp
xor
jecxz
mov
mov
sahf
outsb
lds
inc
fstpl
enter
xor
out
pop
jle
fisubs
add
cli
ljmp
mov
xor
jl
lret
pop
ss
in
mov
pop
and
sbb
sub
xchg
inc
jns
push
pop
jmp
inc
cld
hlt
scas
adc
mov
pop
push
dec
adc
loop,pt
push
mov
jb
cwtl
sarl
mov
mov
add
xchg
and
mov
push
cwtl
insb
fisubl
inc
cmp
lcall
cmp
dec
movsb
fwait
xchg
pop
test
jmp
xchg
in
mov
mov
mov
mov
lods
jg
mov
movsl
jp
sbb
mov
mov
repz
xor
xor
jp
sti
movsb
faddl
or
or
xor
pop
clc
mov
cs
lods
stos
inc
insl
daa
push
mov
cli
pop
lods
dec
das
push
mov
sbbb
insb
fdivs
jge
pop
sbbb
or
or
rcl
jecxz
sbb
jb
xor
ret
addl
test
and
enter
in
jle
popf
adc
adc
loop
adc
out
lea
int
xchg
inc
mov
mov
xchg
jp
and
rorb
inc
mov
sbb
das
sbb
xchg
and
movsb
js
fwait
pop
pinsrw
ficoml
stos
jp
sub
test
mov
xor
cmp
push
cmp
mov
mov
mov
cli
mov
int3
jl
sub
cmp
insb
mov
pop
in
fiadds
das
jp
addb
mov
add
lret
push
repnz
cwtl
fldt
insb
add
or
push
gs
pslld
and
jnp
je
mov
xor
cli
movsb
mov
xor
cmp
std
add
cmp
jb
cmpsb
popa
xchg
mov
push
repz
push
xor
and
cmpsb
adc
scas
sub
dec
movsb
cmp
je
adc
xchg
push
pop
fstpl
pop
fnstcw
and
cltd
test
les
nop
jecxz
mov
loopne
push
lods
jb
mov
and
cmpl
mov
ret
sti
stos
push
loope
pusha
repnz
or
dec
push
add
push
push
push
sbb
pushf
stc
push
and
sbb
mov
data16
mov
add
jp
push
xor
hlt
sub
adc
aad
test
inc
loope
popa
xor
push
mov
push
loopne
mov
ss
cmp
jge
inc
dec
fldt
mov
dec
popf
inc
adcb
cld
mov
int
push
xchg
mov
test
dec
mov
mov
fcompl
push
jbe
test
xchg
in
adc
in
pushl
stos
call
pop
push
fwait
mov
in
mov
das
mov
adcb
testb
ljmp
xchg
arpl
push
ja
push
popf
sbb
add
cmpsb
cmp
lar
addr16
int
add
pop
addr16
fwait
mov
insb
pop
ljmp
dec
xchg
xchg
pop
inc
or
push
adc
aas
mov
pop
imul
push
mov
testb
loop
jg
inc
sbb
cli
hlt
fisttpll
mov
lods
hlt
out
xor
rcrb
inc
cmp
ret
fs
mov
xor
sbb
sub
sbb
popf
hlt
stos
out
sub
mov
enter
mov
dec
xorl
mov
nop
mov
lock
pop
mov
adc
decl
pushl
and
pushf
add
fs
fsubrl
imul
ret
dec
fwait
call
insl
inc
xchg
shl
fdivs
ret
icebp
cltd
mov
lock
aas
xchg
sub
push
or
push
into
push
aaa
xor
pop
and
ja
popa
lahf
incb
insb
push
sar
sbb
xor
lock
push
mov
leave
js
scas
pushl
pop
rol
mov
sub
push
push
dec
ror
xchg
repz
leave
rorb
xlat
inc
and
out
or
loope
adc
add
inc
pop
mov
xor
mov
jecxz
xchg
adc
mov
xor
mov
mov
loope
push
mov
repnz
xchg
xchg
pop
addr16
xlat
mov
mov
gs
push
ljmp
cmp
jo
inc
push
incl
stc
dec
pop
roll
fwait
les
gs
test
movb
or
movsl
add
dec
mov
xor
into
mov
dec
cmp
mov
fs
addb
jle
push
mov
fimuls
addl
or
aam
call
bound
push
dec
mov
push
iret
rorb
repnz
lods
jp
enter
push
shlb
sahf
xchg
lcall
pop
scas
lcall
stos
mov
cmp
and
outsl
add
rcrb
mov
mov
xchg
scas
jae
jecxz
jnp
mov
fcoms
xor
mov
insb
inc
mov
subl
in
sub
sbb
fisttpll
pop
outsl
xchg
hlt
inc
xor
push
fs
cmp
pop
lcall
scas
outsb
adc
mov
jmp
inc
dec
cmp
jle
or
mov
sub
repnz
bound
mov
outsb
cmp
outsl
xchg
xchg
insb
xchg
daa
lds
or
shll
sub
or
stc
mov
sbb
call
push
push
adc
jmp
aaa
or
jp
jnp
and
cmp
in
or
mov
dec
pop
xchg
inc
loop
mov
mov
inc
and
xor
fisttpl
fstpt
das
imul
and
ljmp
in
pop
fnstenv
testb
rcrb
mov
pop
sub
js
push
shlb
jnp
inc
dec
xchg
in
mov
sahf
dec
xor
mov
sbb
mov
sti
fcmovnu
push
push
jle
pop
test
sub
fisubs
scas
insl
test
hlt
addr16
imul
xor
xlat
sbb
mov
pop
jno
sbb
nop
lea
lret
leave
fwait
mov
push
inc
movsb
dec
sub
mov
bound
call
add
cmp
aad
and
and
mov
add
mov
or
shrl
popf
stos
inc
mov
inc
mov
inc
or
cmp
cmp
sarl
test
shlb
adc
inc
jmp
jb
leave
cmp
fs
aad
insl
inc
cmpl
hlt
pop
push
inc
or
mov
jno
mov
xlat
push
iret
stos
mov
adc
shl
xor
dec
les
inc
daa
push
shrl
movsl
iret
sub
adc
mov
inc
mov
add
xor
and
gs
adc
xor
rorb
and
sarb
push
in
xor
adc
rcr
inc
mov
out
inc
add
mov
pop
lret
js
jg
mov
sub
stos
test
call
std
push
mov
les
and
pop
data16
push
int3
jmp
daa
jecxz
test
sub
dec
lds
fisubrl
ss
pop
sbbb
dec
xchg
pushf
fadds
xchg
clc
stc
sub
aad
cmp
mov
push
scas
adc
fists
sub
and
int3
stc
sbb
dec
pop
pop
out
jmp
cld
push
push
lret
and
enter
cltd
push
cs
push
jns
fcomps
movsb
insl
push
xor
xchg
in
jno
popf
pusha
fisubl
jle
inc
adc
mov
dec
sbb
mov
repnz
or
xor
sub
xchg
xchg
xor
sub
leave
aam
enter
out
jg
dec
fnstenv
dec
fmull
orb
pop
xchg
push
pop
stc
pusha
aaa
add
ds
dec
lahf
stos
shlb
inc
rcrl
sarl
sbb
sahf
rorl
idivl
cmp
icebp
je
data16
mov
dec
push
call
cmp
jnp
add
sub
push
out
add
adc
cmc
je
mov
sbb
iret
ret
stc
test
sbb
fiadds
out
pop
test
pop
test
ficoms
in
rcrl
mov
dec
int
mov
mov
mov
sbb
scas
adc
sub
adc
inc
icebp
into
mov
fcoms
pop
sbb
add
in
inc
jnp
sbb
inc
fwait
xchg
jb
push
and
xor
mov
mov
xchg
dec
push
xlat
sahf
inc
andb
push
je
arpl
mov
in
fstpt
idivl
mov
popf
jns,pt
sub
jno
mov
cmp
mov
int3
dec
inc
mov
testb
push
mov
xchg
cwtl
fcomp
lcall
sti
xchg
dec
pop
mov
mov
imul
push
shl
addr16
stos
xor
out
push
cs
xchg
lcall
xchg
sbb
add
xor
jmp
push
out
push
push
and
mov
clc
pop
sbb
jnp
sbb
subl
xchg
popf
inc
pop
push
std
dec
pop
mov
rcr
inc
stos
cltd
mov
testb
pop
scas
test
jne
mov
aas
pop
pop
cmp
fs
out
rcll
shlb
cmpsb
cs
clc
rcr
sbb
lahf
jno
adc
sbb
js
jo
test
enter
shl
xor
or
data16
out
and
adc
lock
daa
xchg
sbb
xchg
mov
stos
das
add
dec
daa
sub
loopne
pop
call
outsl
dec
mov
pop
fdivrl
jge
cld
scas
mov
pop
xchg
out
ret
xchg
movsl
push
pop
lods
xchg
mov
xor
push
mov
outsl
nop
int
sub
aam
inc
pop
push
out
call
jp
mov
pop
in
ljmp
xchg
sub
mov
xchg
jl
std
mov
int3
mov
fldt
dec
jo
or
ret
loop
fnsave
push
mov
mov
jns
sbb
xchg
repnz
stc
aam
sti
popf
mov
pushf
xchg
mov
xlat
cwtl
xchg
adcl
shll
push
cmp
fucomi
adc
xor
scas
pop
jg
xor
pushf
jns
xor
pushf
sub
push
lret
mov
fld
sbb
push
mov
adc
dec
mov
adc
fdivs
sahf
xchg
lock
jne
mov
ja
imul
decb
push
xor
xor
pop
mov
push
hlt
mov
lea
leave
imul
and
es
mov
pop
mov
pop
add
xchg
ror
unpckhps
jne
pop
test
pop
out
pop
out
push
int3
orb
cmp
dec
jp
stc
lret
ds
and
xchg
ljmp
test
aaa
cltd
mov
pop
jnp
mov
cmp
lahf
fisubrs
iret
pop
jl
test
ja
dec
pop
adc
clc
ja
test
mov
mov
fwait
sub
test
int
and
stos
push
rcrb
xor
add
cmp
repz
push
fxch
icebp
xor
arpl
hlt
into
mov
out
pushf
rcr
push
mov
shlb
xor
ffree
adc
lahf
sub
iret
lea
xchg
nop
popf
int3
loop
rclb
sarb
cmpsb
fprem1
push
mov
ljmp
cmp
ret
loope
xor
pop
cltd
insb
sbb
xchg
in
push
lahf
cmpsl
and
lret
lods
mov
repz
mov
inc
movsb
sahf
pop
xchg
ds
xor
xchg
sub
and
nop
sahf
dec
pop
xor
loop
or
ret
dec
mov
jne
ds
mov
add
jne
negb
sub
mov
loope
pop
cwtl
cmp
xchg
sub
mov
adc
and
cmpsb
xchg
xlat
dec
adc
push
jnp
mov
roll
inc
xchg
ljmp
das
ficoms
out
jb
data16
xchg
cmp
sbb
mov
push
and
pop
xchg
jmp
lcall
addr16
out
cmpsl
jae
outsl
xlat
ret
and
jbe
sbb
push
pop
jae
divb
mov
je
mov
sti
and
pop
sub
stc
sub
in
mov
imul
sbb
or
lods
pop
test
cmova
test
mov
xlat
and
daa
in
rorl
xchg
testl
sub
cmp
push
xchg
test
xlat
push
mov
jle
mov
enter
loopne
mov
sbb
int3
jl
sbb
xchg
push
mov
lods
stc
mov
push
imulb
outsl
cld
mov
addr16
frstor
mov
xchg
lods
popa
faddp
pushf
mov
sar
mov
ret
pusha
xchg
adc
outsl
dec
and
xchg
lock
mov
inc
das
push
adc
jae
or
cmp
data16
movsl
fs
pop
test
nop
xor
mov
dec
in
add
or
fists
xor
scas
pop
pop
inc
sub
fwait
clc
or
lock
and
and
inc
xchg
cmpl
in
sbb
hlt
lahf
and
jae
xchg
inc
mull
sbb
xchg
push
mov
jne
xchg
lea
rorl
jnp
lret
or
sub
ja
adc
jmp
out
jbe
sbb
dec
jl
pushf
jb
xor
pop
shll
mov
and
fwait
mov
push
pop
shl
out
fs
cmp
jne
xchg
cmp
and
xor
test
rclb
out
sbb
into
scas
lods
inc
mov
mov
int3
nop
fisubl
mov
dec
lret
push
into
ss
mov
push
jns
test
stc
icebp
xor
icebp
stos
push
and
movsl
pushf
dec
pop
dec
cwtl
mov
xchg
or
in
jmp
xchg
outsl
xor
fsub
sub
sti
dec
lcall
or
jge
sub
out
jmp
popf
into
aam
cmp
aas
sub
in
repnz
mov
mov
imull
xchg
fcmovu
mov
lret
mov
lods
in
bound
dec
stos
jle
imul
adc
xlat
addr16
dec
pop
sub
xor
cmp
push
adc
jae
mov
loope
mov
cltd
push
in
fs
shlb
jo
lret
clc
mov
mov
mov
mov
jle,pt
int3
add
cmp
ds
ret
xchg
call
shlb
inc
xchg
and
sti
dec
fidivrl
lcall
or
incl
sub
jmp
ja
out
rcll
outsb
jge
xor
arpl
inc
adc
sub
es
outsb
shrl
push
and
andb
or
jmp
ret
stos
inc
adc
sub
pop
jge
fists
push
jg
mov
nop
lds
jb
add
hlt
mov
pusha
push
xchg
adc
out
or
popf
add
fstl
jno
shl
cld
mov
stos
mov
ret
xchg
sti
fimull
xchg
shll
push
sub
test
xorb
jg
inc
mov
inc
ror
or
xor
out
into
mov
popl
pop
cmp
and
add
jge
and
test
test
shr
cmp
pop
fdivrs
mov
inc
jg
xchg
sti
lds
ljmp
repnz
dec
jno
fstpt
jo
testb
fistl
out
jno
or
adc
int
test
adc
sarb
rorb
fnstenv
add
outsb
jp
push
mov
dec
sbb
inc
fsubs
sub
xor
jbe
shl
add
jae
insl
popf
mov
and
lods
adc
sbb
jbe
sub
xor
push
mov
xchg
cmp
mov
js
lods
repnz
xchg
cwtl
js
in
xchg
rcrl
jle
scas
in
int3
cmp
xor
xbegin
mov
add
lcall
xchg
jecxz
add
lea
cltd
pop
cli
popf
sub
addr16
jg
jae
in
xchg
enter
outsl
xchg
adc
nop
and
adc
push
push
sub
lds
or
xor
sub
xlat
cmp
dec
pop
dec
inc
in
push
xchg
adc
stos
xor
stc
in
je
mov
inc
cmp
sbb
fs
imul
mov
dec
push
xor
movsl
pop
stos
in
and
js
test
vmwrite
mov
test
mov
call
and
ret
aaa
push
mov
xchg
xor
repz
lret
jg
xor
arpl
and
pop
outsb
pop
inc
adc
cs
jp
mov
mov
add
test
sbb
mov
pop
mov
and
mov
dec
aam
mov
xchg
sbb
leave
mov
popa
popf
cs
sub
xchg
ljmp
pop
jae
jecxz
imul
cli
jge
push
hlt
sbb
jg
fstl
or
fdiv
dec
daa
imul
in
nop
in
nop
sub
adc
mov
scas
divl
inc
pop
daa
testb
mov
jp
xchg
mov
insl
cltd
mov
inc
and
jne
enter
je
fcmove
sbbb
or
push
push
mov
movsb
mov
or
pop
popfw
lods
add
xchg
jmp
mov
or
mov
lahf
rcrb
out
push
xor
test
std
sub
lcall
sbb
jp
mov
lock
jnp
pop
ds
stos
adc
test
out
movsl
pop
loopne
xchg
popl
jge
inc
push
sbb
out
js
inc
push
push
and
inc
mov
add
shlb
shll
les
test
ret
xchg
out
out
int3
ret
lods
mov
pop
push
aas
sbb
mov
xchg
xor
pusha
dec
mov
push
ret
or
addr16
lods
dec
mov
inc
jle
in
in
sbb
popf
ret
fsubrp
push
cli
mov
dec
lret
xor
adc
dec
test
mov
outsb
push
mov
in
jge
cmpsl
leave
movsl
mov
adc
cmc
loope
cld
push
test
ret
test
jbe
lds
jecxz
idivl
mov
pop
sub
or
in
jmp
fcoms
popa
mov
data16
jg
add
dec
scas
push
add
adc
sbb
cltd
or
sbbl
and
push
mov
cmp
test
jnp
nop
shlb
cmc
ss
jbe
add
add
adc
pop
sbb
add
cmp
pushf
add
addr16
mov
aad
jmp
jb
fcoms
lods
pop
sbb
sti
push
inc
pop
mov
aad
jnp
push
je
push
jle
cmpsb
jge
lret
cmpsl
ss
sbb
cwtl
inc
push
mov
insb
in
or
push
jp
mov
pop
inc
cmp
xchg
inc
shlb
xor
or
cld
cwtl
cld
jns
test
cmp
call
cmp
stos
inc
sub
stc
xchg
imul
imul
lret
nop
ljmp
call
insb
jmp
push
jecxz
cmp
or
adc
das
mov
ds
add
popf
mov
ds
and
fcomi
dec
adc
push
in
lds
jno
mov
pop
les
dec
in
testl
push
xchg
ret
das
jg
push
pop
jnp
rcl
pop
sarb
push
mov
inc
xchg
push
xchg
cmp
cltd
ret
pop
cmpsl
out
lods
adcb
sub
push
push
aam
rorl
hlt
mov
fcomi
jge
or
rolb
jne
outsl
popf
mov
xor
add
jno
rclb
sub
mov
movsl
inc
mov
repz
and
in
push
jae
aad
cltd
jle
lea
rcl
inc
push
loop
dec
movsl
es
leave
addr16
lcall
movsb
aaa
ds
fbld
aaa
loopne
out
and
das
scas
dec
into
jmp
scas
add
jno
stc
into
inc
jp
das
mov
xchg
imul
je
les
jp
mov
mov
add
xchg
lods
inc
ret
fld
pop
hlt
hlt
or
sub
jbe
dec
shlb
adc
popf
mov
stc
push
inc
dec
pop
mull
idivl
jno
adc
xchg
fisubrl
or
xchg
loop
pop
mov
pop
ret
or
add
dec
xor
fidivs
call
mov
and
add
and
xor
or
out
adc
sbbl
out
mov
repnz
adc
mov
sbb
jno
inc
jg
xor
loop
fwait
adcl
aaa
repnz
jmp
xchg
iret
lds
scas
push
cmp
sbb
shrl
cmp
fnstenv
lcall
add
ja
insb
and
ds
dec
adc
add
fistpll
popf
mov
sbb
xor
outsl
les
cmpb
jecxz
sub
jl
xor
sub
bound
mov
ds
inc
cmp
fwait
xchg
mov
push
push
cs
push
cwtl
pusha
in
icebp
lahf
shrl
pop
dec
mov
int3
cmpsl
aad
data16
out
shll
movsb
xchg
xchg
fcompl
stos
arpl
push
lea
outsl
insl
inc
pop
mov
pop
xor
push
mov
fimull
or
and
sahf
cltd
leave
mov
out
scas
movsb
es
arpl
out
mov
mov
mov
mul
sub
lods
cld
fisttpll
test
rcrb
mov
xor
mov
or
mov
jl
test
imul
fadds
mov
mov
and
shll
lock
and
mov
and
jp
dec
imull
mov
stc
in
push
adc
sub
lods
xor
xchg
pop
cmpsb
rcll
xorb
dec
ss
mov
add
movsl
jl
pop
and
aas
and
or
clc
lock
js
mov
jp
push
mov
aam
das
cmp
or
jg
or
pop
jg
fidivrl
loope
xlat
push
mov
ret
cmpsl
mov
or
mov
xchg
movaps
pop
jb
or
jne
test
in
add
cmp
rcll
js
test
mov
fucomp
fsub
imul
and
mov
repnz
jb
addr16
test
push
pop
mov
fbld
popf
adc
mov
jb
jge
mov
popf
inc
jg
dec
inc
lock
mov
and
add
pop
loop
add
inc
lcall
cmp
or
clc
pop
mov
ret
sahf
insb
repnz
jl
je
sbb
adc
mov
xor
flds
adc
das
sub
aad
xor
jp
std
cmpsl
jle
das
leave
mov
test
fbld
leave
jg
out
mov
cmp
mov
fwait
pop
inc
xlat
faddp
lock
repnz
mov
popa
in
in
inc
pavgb
dec
push
lods
test
sahf
orl
mov
cmp
subl
popf
fcmovnb
pusha
fmul
insl
cmp
dec
mov
gs
pop
test
and
xchg
icebp
xchg
sahf
xchg
xchg
pusha
push
popf
push
pop
pop
adc
and
pop
mov
or
xor
mov
out
mov
imul
adc
jmp
loope
repnz
mov
fwait
jbe
pop
repz
pop
imul
and
sbb
sbb
enter
push
adc
xchg
jns
push
dec
shrl
mov
sti
gs
popa
mov
out
xchg
cmp
mov
and
out
ret
sub
out
repz
out
jne
and
or
mov
xor
mov
std
movsl
add
jl
and
outsb
inc
clc
lcall
xchg
xor
loopne
mov
jnp
lcall
ds
sub
int
xor
push
in
daa
popf
jl
cli
dec
dec
adc
call
movsl
fsubl
xor
pop
pop
inc
je
and
mov
push
pop
sub
add
jge
outsb
cmpsb
lcall
popf
leave
xor
lds
negl
sub
dec
inc
mov
imul
iret
in
loop
aad
sub
stos
dec
mov
jb
jo
sbb
adc
add
mov
data16
mov
icebp
xchg
clc
pop
lods
mov
dec
ret
stc
loop
arpl
cwtl
sub
ljmp
scas
jmp
aaa
in
adc
in
sub
ja
in
je
fnstsw
out
testl
aam
adc
jge
mov
pop
pop
sbb
stc
fcoms
nop
iret
loope
mov
mov
inc
aaa
inc
and
push
gs
adc
inc
adc
jle
mov
sti
inc
jbe
test
cmp
xchg
cmpsl
in
adc
dec
pusha
xor
dec
mov
popf
sub
cmp
addr16
jo
mov
push
mov
aam
stos
sub
clc
adc
sbb
mov
test
mov
mov
lcall
shll
cwtl
cli
sahf
add
cltd
jp
xchg
jno
push
cmp
add
hlt
mov
inc
lock
pop
xorl
jmp
xor
cmpsb
fwait
mov
xlat
in
add
inc
dec
and
push
pushf
sahf
lret
and
push
xor
ss
inc
cmc
sti
sbb
inc
imul
and
xchg
sbbl
stos
cld
ret
sub
push
orl
pushf
xchg
jmp
int3
xchg
pop
enter
icebp
mov
in
jmp
aad
mov
iret
dec
add
jle
mov
aaa
out
repz
sub
jecxz
mov
sbb
or
sarl
mov
std
and
leave
cld
push
std
sub
sbb
int3
adc
test
scas
xchg
outsb
outsb
div
cmpsb
movsb
mov
or
xchg
jle
mov
loop
push
push
sub
sarb
fldcw
lcall
pop
aam
andl
repnz
and
push
sub
stc
loope
and
iret
loop
rcr
pop
mov
aam
jne
jg
stos
int3
arpl
pop
sbb
add
or
or
fimull
mov
mov
imul
xchg
cld
mov
jp
pop
addps
jp
mov
int
sbb
push
mov
push
mov
es
dec
xchg
mov
xchg
sub
int
rorl
mov
jne
mov
or
mov
push
pop
mov
xlat
movsb
mov
adcb
xchg
insb
dec
jne
cmp
pop
xor
or
xchg
pop
lds
push
aad
xchg
gs
ja
out
ja
fisttpll
jl
incl
fstpl
mov
hlt
insl
pop
mov
std
aas
and
pop
xchg
aas
xor
loop
add
dec
out
das
ret
jmp
inc
shll
test
ja
sbb
pop
in
add
in
inc
loopne
lods
loopne
loopne
push
sub
fadds
mov
jg
aad
adc
mov
pop
adc
iret
cmpb
inc
mov
cli
xor
push
xor
repnz
push
into
loope
add
and
jns
sti
adc
mull
cld
push
fcmove
int3
and
mov
loopne
std
std
lret
in
loopne
arpl
jno
push
sub
jne
xchg
and
mov
sbb
pop
jg
arpl
lods
cmc
xchg
das
ror
les
repz
iret
movsb
mov
orps
in
pop
popa
aam
add
mov
and
or
ret
xor
mov
fdivr
sub
adc
cltd
xchg
push
scas
jmp
outsb
nop
data16
call
push
sti
sub
movsb
dec
jne
sbb
movsb
aaa
inc
sub
inc
push
lret
sahf
jle
sub
dec
and
inc
xchg
sbb
mov
inc
add
push
xchg
test
out
ds
ds
adc
xchg
jnp
popa
mov
push
cmpsb
lret
mov
adc
cmp
cld
iret
cmp
ss
jge
or
lret
xchg
imul
cmp
jno
sub
lret
sub
cmp
pop
test
inc
dec
adcl
sbb
inc
out
iret
pop
lret
scas
jne
sub
jno
ds
int
xchg
sub
or
lods
es
lods
push
out
dec
aam
in
adc
pop
adc
gs
fs
mov
dec
pop
jle
add
into
or
or
mov
enter
bnd
jo
sti
ds
jnp
cmp
push
mov
pop
push
lahf
sarb
and
sti
and
push
mov
pop
out
pop
jmp
in
in
icebp
jno
mov
mov
outsb
jle
or
das
dec
mov
test
mov
adc
mov
outsb
inc
jne
push
push
scas
inc
out
mov
pop
repz
jl
cmp
iret
daa
shrb
outsb
daa
sbb
sbb
pusha
jbe
sub
addr16
dec
addr16
adc
push
out
push
cld
insb
gs
in
jb
mov
xchg
and
xor
xchg
je
inc
mov
mov
dec
pop
xchg
mov
dec
xor
imul
jns
xlat
in
pop
add
fadds
test
rcrb
loopne
sbb
and
sti
rcl
xchg
sbb
lds
adc
cmp
inc
adc
pusha
mov
xor
sarl
pop
cmc
push
mov
je,pt
jle
and
insb
mov
push
pop
in
xchg
lods
fiadds
mov
in
lea
pop
add
addr16
ja
fwait
jp
adc
or
push
mov
shll
repnz
and
fnstsw
sarb
jbe
fldl
sbb
pop
icebp
xor
fmuls
push
ret
mov
push
and
sub
cmp
pop
inc
or
into
loopne
test
jmp
jecxz
in
mov
mov
mull
pop
mov
adc
lea
rcll
mov
push
cmp
xor
inc
repnz
les
cltd
stos
pop
addr16
inc
mov
xchg
or
xchg
xlat
xchg
pop
adc
mov
xchg
nop
xlat
mov
movb
das
mov
mov
adc
cmp
imul
sub
mov
scas
jl
cmpb
aaa
subb
stos
mov
movsl
cmp
sub
sbb
outsl
push
mov
xor
out
pop
imul
int3
xorb
cmc
and
mov
xor
jbe
lea
add
je
mov
mov
scas
dec
fdivrs
andb
push
sti
lret
arpl
hlt
mov
mov
popa
cmp
outsb
adc
aad
hlt
rorl
into
sub
or
mov
sub
repnz
cmc
imul
ss
jb
test
sti
in
or
int
icebp
xchg
mov
test
nop
pop
pop
aam
popf
cs
push
cs
sub
jle
fbld
adc
sub
stc
hlt
push
fbld
fisubrs
mov
cmp
adc
int3
xchg
mov
cli
sub
xchg
rorb
push
add
popf
gs
mov
mov
in
adc
fcmovnb
ret
sub
loopne
dec
adc
dec
das
hlt
cmp
adc
call
fisttpl
rolb
rorb
imul
mov
or
or
mov
sbb
fcmovu
leave
fstpl
ss
cmpl
scas
jo
and
jae
movsl
mov
push
or
sbb
icebp
into
adc
xchg
sub
lret
adc
fisubrl
xor
cmp
jne
push
xchg
das
xchg
int
icebp
xchg
loop
jnp
hlt
jnp
pop
xor
inc
scas
sbb
cmp
mov
gs
dec
rcpps
mov
pop
jnp
les
movsl
adc
or
pop
xchg
fwait
sbb
and
pop
pop
fs
rcrl
popa
cmp
push
loope
outsl
out
mov
xchg
or
dec
mov
jno
lret
sbb
jae
sub
icebp
js
outsb
clc
mov
cwtl
add
cli
mov
orl
push
pop
neg
movsb
dec
jmp
or
cltd
test
sub
add
lret
mul
inc
sbb
dec
outsb
or
in
adc
cmpsl
ret
mov
mov
push
rcrb
push
cltd
pop
cmc
negl
out
pop
and
inc
xchg
mov
and
jmp
sub
test
aas
js
ret
jb
sti
aad
xchg
sbb
adc
or
adc
insl
int3
push
push
pop
xchg
push
pop
sbb
hlt
das
sub
roll
stos
pop
sub
push
inc
push
out
adc
lds
adc
jl
xchg
imul
repz
mov
setle
mov
cli
and
and
adc
loop
fistps
sub
mov
sbbb
adc
sub
mov
in
fdivl
mov
lret
cs
or
inc
mov
popf
aaa
mov
sub
xchg
pop
mov
cmp
xlat
dec
lahf
rcll
es
pop
jb
in
cmpsb
mov
popf
pop
mov
int
sarl
pop
push
in
mov
cmpsb
pusha
in
and
and
pop
mov
xor
add
divb
jp
mov
xchg
mov
add
imulb
aaa
movl
out
push
ljmp
xchg
jge
pushf
sbb
ljmp
cmpb
std
cmp
mov
adc
or
sub
xchg
push
and
movsl
sub
ds
cmp
int
cmp
aas
sub
div
pop
and
in
jnp
iret
int3
pop
jno
gs
stc
in
insb
pop
in
jp
sbb
xchg
aad
cmc
std
mov
xor
insl
inc
mov
sub
lcall
mov
mov
xlat
sub
mov
ss
gs
addr16
jne
adc
jb
cld
test
jge
mov
add
or
xchg
jp
xchg
push
pop
sbb
inc
insl
daa
push
add
inc
ja
mov
cld
mov
jnp
dec
jge
pusha
in
leave
fcmovb
cmpsl
addr16
xlat
mov
jno
cmpsl
add
aad
insl
cli
dec
fmuls
xchg
add
ror
and
inc
pushf
addb
aam
stos
add
and
adc
jns
mov
pop
sbbl
test
pusha
lahf
jbe
push
bnd
or
jae
add
jg
out
scas
test
popf
in
cmc
and
rcrl
inc
adc
xchg
out
pop
dec
pop
or
pop
negl
scas
dec
fwait
mov
andl
and
pop
cwtl
add
dec
cwtl
shr
mov
ds
sub
jg
dec
loop
fiaddl
push
imul
cmc
mov
and
imul
inc
jno
push
mov
jmp
lcall
test
fbld
cmp
aas
aam
adc
std
stos
cmp
jecxz
mov
loope
xchg
lcall
dec
xlat
fsqrt
addr16
arpl
jp
aad
scas
fists
pop
pop
sbb
rol
aam
push
adc
jl
inc
sub
lcall
sub
mov
icebp
imul
aam
pop
push
les
push
rcrb
loopne
push
adc
push
or
and
adc
inc
push
aad
push
xchg
cmp
fidivl
xchg
lret
mov
sbb
or
loopne
ss
neg
lcall
jp
stos
lds
gs
inc
std
in
fwait
sub
movsl
adc
jae
shll
mov
mov
dec
mov
mov
fdivr
fstpt
pop
pop
sbbb
jo
lods
imul
jge
mov
push
imul
add
les
xchg
sub
cmp
adc
mov
pushl
inc
ret
js
aas
pusha
mov
or
or
sar
xor
fdivrl
cs
test
lret
push
lods
pushf
mov
inc
hlt
or
nop
cmp
fdivr
repz
dec
xor
in
sub
rcrl
cmp
or
std
pop
jo
test
mov
xor
or
cmp
popa
roll
lods
out
and
push
inc
fmull
lahf
mov
ficoms
xchg
addb
cltd
cmp
xchg
add
stos
mov
and
lods
insb
sub
addr16
or
mov
shlb
mov
rcrb
pop
out
mov
repnz
mov
cmp
sbb
cltd
jno
inc
fs
pop
and
in
repz
and
xchg
and
fsubrs
cs
sub
stos
xchg
icebp
push
insb
cs
in
sarb
and
fidivrl
inc
js
mov
mov
lds
lahf
int3
jno
sbb
and
inc
inc
dec
push
or
jge
dec
movsb
or
mov
pop
jg
scas
call
xor
dec
insb
xchg
cmp
shrb
xor
jmp
ja
imulb
or
cltd
dec
das
repz
sbb
in
fsub
nop
add
mov
push
rcl
jnp
xlat
jmp
cmp
mov
jl
jae
mov
lods
pop
insb
fstpt
adc
xlat
and
ret
mov
pop
notb
inc
push
mov
and
hlt
leave
jmp
fldenv
adc
out
out
jmp
jg
adc
out
push
mov
and
inc
outsl
add
push
cwtl
sub
adc
sub
pop
movsl
cs
cmp
jle
dec
je
mov
stc
dec
xlat
jae
push
neg
jmp
push
inc
and
adc
or
outsb
mov
mov
stos
out
jp
and
sub
push
sti
fwait
clc
icebp
jae
jo
arpl
scas
imul
or
jge
aam
mov
push
aaa
add
xchg
sub
xchg
mov
cwtl
test
outsb
and
pop
sub
xchg
cmp
cmp
mov
cmp
push
pop
daa
lahf
or
xor
sbb
fists
adc
jmp
or
hlt
das
push
pop
test
repnz
stos
mov
ficoml
test
insl
mov
movsl
and
ja
mov
push
mov
push
sahf
lcall
jb
fimuls
repz
stos
and
inc
sub
mov
daa
push
jmp
aas
xchg
jno
clc
insl
icebp
dec
or
out
enter
adc
jbe
mov
pop
dec
mov
repz
int3
xor
pop
leave
stc
shll
jle
andl
pop
outsl
lahf
xor
add
pusha
stc
loopne
xchg
in
adc
hlt
pop
push
cmpsl
cmc
fstpt
jecxz
and
imul
cmp
repnz
mov
xor
fiadds
das
mov
fisubrs
cmp
mov
cmp
scas
ret
add
push
or
cmc
fwait
xchg
jecxz
cs
dec
test
shll
pushf
cltd
lods
outsl
pusha
ss
cmp
and
cs
push
jmp
mov
bound
dec
jbe
lods
es
sbb
and
bound
push
sti
add
stos
in
or
adc
dec
lret
cmpsb
jmp
jle
call
jno
jg
shlb
into
repnz
sub
faddl
arpl
movsl
popa
pop
and
cmc
xchg
aaa
inc
hlt
add
aaa
jge
cmp
or
xor
cmp
sbb
hlt
ret
rclb
ljmp
mov
out
inc
sbb
jmp
mov
ret
enter
out
dec
push
jg
xor
ret
mov
pop
negl
inc
mov
add
adc
sti
leave
push
dec
jbe
or
jle
mov
shlb
mov
xchg
stc
mov
or
repz
aam
test
cmp
lds
jp
adc
jecxz
icebp
stos
adc
mov
js
and
jle
int3
add
xchg
leave
or
insb
nop
sbb
sahf
adc
mov
movsl
pop
fldl
mov
popa
lcall
cld
or
push
dec
insl
loope
or
mov
shl
ror
mov
lahf
pop
mov
mov
cmp
lods
add
shl
jae
and
mov
xor
pop
int
and
ss
lods
or
xchg
jmp
pop
ret
sub
call
hlt
and
popf
pushf
pop
xchg
test
add
jne
and
push
and
pop
gs
out
sbb
repz
and
adc
adc
rorl
cmp
inc
jbe
nop
or
hlt
cmp
aas
movsl
or
push
fwait
xor
movl
lcall
cli
xchg
test
adc
jo
popf
stos
mov
push
add
sub
mov
iret
aas
into
sbb
add
arpl
dec
in
into
pop
and
jecxz
sbb
enter
sub
ja
mov
punpcklbw
enter
ror
int3
fwait
jmp
and
or
adc
lcall
in
dec
je
mov
into
pop
sbb
sbb
sbb
dec
or
pop
jbe
mov
mov
rep
push
jge
mov
mov
cltd
mov
mov
fdivrl
push
inc
dec
xchg
lret
sti
dec
add
rorb
lods
jno
lock
loopw
outsb
jb
jp
das
sub
shll
rcrl
iret
sbb
jae
stos
jp
mov
sarb
in
aas
gs
test
cmp
stos
sub
mov
jmp
repnz
test
test
xor
jl
cltd
lods
in
pop
psubb
out
and
sbb
rclb
fmull
jl
jp
and
mov
data16
jno
push
push
lds
jnp
or
loopne
scas
cld
loop
pop
pop
xor
insb
hlt
pop
pop
loop
icebp
lock
and
jnp
aad
sbb
mov
sub
aas
js
ja
imul
and
push
dec
arpl
std
test
mov
mov
into
outsb
jmp
adc
insb
jo
xchg
imul
movsl
cli
cld
fisubl
mov
mov
xchg
pushf
test
mov
xchg
or
leave
cld
xorb
xchg
cmp
xor
stos
sahf
aaa
mov
mov
in
pop
dec
push
repz
rorl
push
sub
pop
jns
mov
push
inc
adc
lahf
adc
mov
xchg
mov
adc
mov
mov
icebp
aas
cwtl
mov
dec
cmpsb
jle
dec
cmpsb
sbbl
adc
and
lcall
jbe
cmp
inc
or
jp
cltd
neg
inc
mov
jg
out
mov
cmp
aas
mov
sub
ret
test
call
mov
fiaddl
loop
sahf
outsb
mov
adc
pop
arpl
jge
test
movsb
in
dec
cmpsl
cmp
sub
mov
xchg
mov
xlat
mov
int
leave
add
jecxz
nop
push
sbb
push
mov
sahf
xor
sub
enter
imul
inc
mov
mov
das
lods
sub
leave
insb
xor
lahf
mov
cltd
add
int3
gs
flds
sti
cwtl
pop
ret
pop
mov
sbb
adc
sub
outsl
lods
add
cmc
es
stos
sbb
sbb
hlt
daa
iret
sub
es
aam
jl
cmpl
and
insb
jecxz
fisubrs
fsubr
outsl
push
jmp
lock
mov
call
pop
mov
outsb
inc
push
mov
in
and
addr16
mov
mov
cli
dec
cmpsl
mov
mov
jl
hlt
imul
mov
fwait
not
jno
and
std
div
in
outsl
push
pushf
imul
sbb
pushf
pusha
adc
xor
dec
imul
mov
in
gs
xor
jb
mov
pop
int
jns
jmp
nop
push
insb
mov
jl
push
mov
push
cmp
jnp
out
push
sbb
pop
mov
jl
sbb
dec
je
or
cwtl
or
push
mov
test
sub
fcmovb
subl
popf
pop
push
mov
sbb
pusha
out
jbe
dec
sbb
loopne
lock
xchg
in
xchg
pop
lods
and
movsb
mov
adc
sti
jbe
aaa
mov
mov
adc
dec
les
add
insl
lret
jge
daa
mov
ja
dec
dec
dec
jge
in
sub
xor
adc
stos
es
xlat
mov
push
lret
xchg
pop
push
xchg
test
push
mov
push
adc
mov
stos
fidivrs
pushf
mov
cs
mov
xor
mov
cmp
xor
sub
add
inc
xchg
push
adc
ljmp
fidivl
mov
pop
ss
outsb
div
sub
cmp
ret
push
adc
sub
or
xchg
mov
shll
ret
ficoml
adc
jns
ror
leave
jnp
fwait
and
xchg
jp
xchg
daa
gs
xchg
mov
xor
insb
clc
mov
xor
pop
dec
fwait
iret
repnz
dec
int
int
in
rcrb
mov
xor
aas
jnp
xchg
jae
lods
inc
mov
cld
inc
std
jmp
std
scas
fidivrl
xor
mov
pop
mov
add
xchg
mov
cmpl
andl
cmp
mov
mov
mov
lock
or
sbb
mov
iret
mov
aam
xchg
jmp
mov
fidivrl
insl
jns
xor
aam
adc
mov
adc
push
pusha
mov
jl
pop
sti
mov
insb
inc
pop
sub
push
fwait
and
sub
jmp
or
xchg
das
je
out
jb
outsb
and
pop
es
push
lods
mov
into
insb
sub
pop
movsl
dec
xor
adc
mov
jne
adc
pusha
loop
mov
popa
je
sub
nop
mov
ss
push
add
jne
dec
add
stos
lds
pop
add
xchg
xchg
cld
daa
sub
fwait
pop
das
add
add
dec
mov
pushf
shlb
aam
pop
pop
lock
push
jp
movsb
js
xor
pop
pop
push
cmp
in
rorl
sbb
lcall
mov
dec
in
adc
iret
mov
adc
lods
ret
test
pop
jns
xchg
loop
aam
sub
in
int
dec
dec
shl
aas
ljmp
pop
sbb
or
lcall
push
addb
lcall
pop
inc
sbb
push
mov
ret
sub
lret
and
cmp
pusha
outsl
lds
mov
xlat
jmp
pop
lea
scas
sbb
es
cmc
cmp
stc
imul
jnp
aam
jo
cmp
test
test
or
jo
or
mov
mov
xchg
add
mov
push
lods
divl
les
dec
mov
inc
cld
movsb
pop
test
xor
adc
sub
iret
lcall
mov
pusha
sarb
jae
fisttps
outsl
or
push
xor
inc
xchg
cmpsb
sbb
sbb
inc
int
out
repz
jle
or
lock
mov
rorl
xlat
daa
pop
xchg
or
inc
sbb
fmul
jbe
and
ret
mov
adc
mov
jno
lea
cli
sbb
mov
mov
or
cmp
adc
jmp
xor
ss
mov
out
pusha
test
gs
sbb
sub
cmp
jle
hlt
fcoml
das
cmp
enter
inc
enter
adc
bound
iret
or
mov
cmp
jg
dec
pop
mov
icebp
jb
rcll
test
iret
lea
jge
adc
cli
in
in
pop
in
cld
sub
movsl
adc
xchg
mov
cmpsl
mov
mov
mov
dec
mov
dec
jl
add
fidivrs
xchg
jbe
mov
movsl
fidivl
inc
sbb
imul
mov
dec
dec
and
jnp
or
ret
gs
bswap
mov
fnstcw
outsb
xor
xor
faddl
jl
xor
mov
jle
daa
imul
lods
in
inc
loope
push
cwtl
dec
dec
xor
stc
add
mov
notl
cmp
mov
js
stos
xchg
sbb
popa
ficompl
pop
clc
add
sbb
inc
rorb
mov
adc
mov
cmp
push
repz
mov
pusha
popl
xchg
loopne
inc
dec
scas
jb
mov
in
dec
out
mov
push
cld
adc
rcll
mov
popl
test
dec
clc
sbb
mov
mov
popf
xchg
jg
fsub
sbb
mov
push
fstpt
pusha
aad
cmpsl
xor
gs
cmp
fmull
mov
or
and
or
sub
lock
xor
mov
repnz
insl
jbe
mov
xor
std
scas
insb
xchg
rcrl
jecxz
pop
out
inc
inc
sub
daa
dec
xor
ljmp
les
jp
out
data16
data16
mov
and
cmp
jae
loop
addr16
pop
inc
cmpsl
push
adc
test
popa
orb
icebp
sbb
pop
cmp
aaa
mov
out
jl
ljmp
pop
push
dec
xchg
js
pop
inc
sub
mov
and
xor
push
sub
lods
adc
ficomps
mov
and
enter
insl
out
ret
xor
out
mov
popf
mov
scas
push
push
in
ds
adc
cmc
rcll
rolb
rcl
nop
and
mov
inc
inc
cld
xchg
leave
dec
data16
add
loopne
shlb
movnti
mov
repnz
dec
cmp
pop
mov
fnstenv
or
iret
shll
stos
in
stos
rclb
push
add
ja
add
lret
xor
push
pop
pop
mov
ja
movsl
jecxz
sti
sbb
mov
cmp
adc
stos
or
pop
add
xchg
jne
mov
outsl
mov
test
pop
dec
mov
in
pop
insb
pop
lods
repz
shll
or
ds
bound
push
fsts
push
mov
arpl
sbb
sub
ret
insl
sub
gs
jmp
fwait
xchg
pop
mov
lock
sub
cmp
inc
inc
mov
ret
inc
daa
test
jecxz
aaa
jnp
adc
aam
dec
ret
cmp
rcrb
popf
xor
je
cld
sbb
push
cmp
in
lods
mov
loop
mov
test
fsubr
not
xchg
lds
cwtl
cld
adc
push
mov
mov
repz
or
jns
repnz
es
cld
insl
bnd
mov
jmp
pop
sbb
add
ljmp
jb
fisubs
xlat
inc
pop
idivl
insb
cmp
rorb
das
pop
ljmp
gs
push
jg
mov
bound
push
lcall
push
pop
xchg
mov
ja
push
loopne
add
lods
mov
mov
ret
rolb
shrb
mov
sub
pusha
lods
int3
xor
insl
js
push
cmpsl
sbb
stos
push
in
test
or
mov
cli
icebp
loope
outsb
lcall
rcll
mov
xor
pop
mov
add
xor
push
gs
iret
aas
cld
fldenv
sar
clc
pop
fidivs
fidivl
aaa
incl
lods
xlat
cmp
fwait
cmp
sarl
mov
push
addr16
icebp
mov
mov
dec
int
scas
inc
mov
push
rclb
xchg
pusha
pop
sub
cmp
mov
lock
mov
das
cmp
stc
test
and
pusha
fsubl
mov
inc
roll
int
loop
dec
pop
mov
cwtl
imul
inc
into
lods
bound
das
arpl
hlt
mov
movsb
cld
xchg
inc
incl
and
add
notl
popa
xlat
sti
testl
lods
lock
shlb
xchg
fadds
ss
pop
adc
dec
jg
push
and
adc
inc
adc
call
cmp
mov
dec
add
adc
mov
add
xor
loope
adc
imul
daa
insl
sub
push
lahf
mov
cmpsb
xchg
fstl
scas
mov
mov
sbb
addr16
dec
shrl
add
clc
mov
ss
js
sub
aas
lea
popa
lahf
out
jnp
xor
cmc
jg
lcall
dec
xor
ss
fidivs
mov
and
cwtl
inc
mov
shrl
movsb
or
jno
outsl
mov
push
xchg
push
pop
adc
mov
or
notb
fs
jmp
out
cmpsl
fidivs
push
stos
mov
js
imul
scas
jge
test
aad
cmpsl
aam
pushl
cli
mov
clc
cmp
into
push
out
sub
push
or
xor
in
mov
es
inc
xchg
jg
sub
mov
cli
ss
add
in
shlb
lods
lods
lods
or
inc
je
shlb
pop
popa
insl
ss
shrb
clc
adc
xchg
jo
icebp
filds
in
xchg
xchg
pop
daa
mov
cmp
inc
rolb
testl
and
lds
gs
pushf
fisubl
sbb
outsl
fcoml
mov
mov
mov
repz
jo
jmp
adc
inc
pop
jbe
mov
sub
mov
or
je
lret
call
and
enter
and
fwait
out
fs
out
pop
std
mov
dec
fistpl
arpl
insl
push
enter
adc
or
sub
or
jnp
int3
xor
push
test
push
xor
testb
push
cltd
addr16
pop
dec
pop
mov
ss
jnp
repz
ss
enter
aaa
push
add
sarl
sbb
xchg
push
repz
push
lcall
dec
pop
and
xor
frstor
dec
loop
icebp
mov
add
loopne
out
jmp
sbb
sti
lcall
and
repnz
lahf
sub
mov
and
repz
cmp
out
mov
ret
ds
dec
outsb
push
sar
mov
out
sti
push
xor
add
sub
sarb
loop
xchg
in
sub
sbb
stc
stos
jp
dec
std
add
cmp
aaa
mov
lahf
cmc
inc
je
in
ljmp
dec
add
out
in
cmp
ss
imul
repnz
repz
lock
add
xchg
mov
xor
mov
lock
push
test
push
sbb
data16
cli
jecxz
daa
gs
sbb
pushf
inc
adc
mov
jp
aas
jae
jmp
cli
enter
flds
das
dec
dec
jnp
sarb
imul
scas
push
aam
adc
daa
imul
mov
outsl
mov
push
push
iret
cmp
nop
jmp
les
lods
stos
mov
adc
icebp
or
sbb
push
push
adc
jb
dec
inc
stos
add
mov
aas
data16
lahf
or
popa
mov
xor
mov
icebp
out
call
dec
jle
push
xor
enter
cmp
push
push
dec
stos
or
or
and
out
leave
jno
jmp
xorl
pop
or
xor
add
mov
or
jl
push
cmpsl
push
push
bound
push
xchg
cmp
cmpsb
inc
fimuls
in
mov
test
add
mov
nop
lods
mov
popf
adc
inc
xlat
sbb
fisubrs
xor
pop
push
adc
out
mov
lret
sbb
cmp
icebp
ret
fdivrp
and
popf
pop
cmpsb
cs
scas
shlb
pop
adc
lds
lock
lret
dec
sub
mov
pop
lret
aas
or
mov
enter
mov
lret
lcall
add
adc
xchg
lock
xor
push
mov
mov
jmp
test
xchg
mov
mov
push
mov
mov
nop
adc
inc
xor
mov
mov
adc
mov
cmpsb
or
mov
mov
xchg
or
xchg
lcall
ret
lds
add
and
xchg
aaa
mov
mov
in
stc
insl
stos
movsb
sub
pop
sbb
clc
stc
and
dec
xor
pop
mov
xor
fsubrs
pop
daa
mov
scas
push
xchg
push
and
xchg
ret
mov
xchg
ss
scas
rorb
jnp
out
arpl
mov
cmp
lods
push
mov
mov
stc
in
mov
fisttpll
lods
inc
pop
pop
out
femms
and
push
rorl
xor
cmp
sarl
jmp
mov
lret
or
stos
sub
mov
scas
sahf
push
insb
jo
cmp
out
dec
movsb
loop
mov
sub
fwait
aas
push
in
xchg
pop
push
ja
xchg
jbe
lods
dec
pop
jge
push
sahf
push
jp
movsl
les
mov
imul
jl
movsl
stos
cmp
jbe
mov
mov
pop
lahf
sarl
ljmp
nop
sbb
cld
pop
into
add
xor
mov
mov
pop
pushf
mov
ret
cmp
dec
es
dec
mov
ds
or
push
pop
sbb
mov
sub
into
push
jnp
mov
cmp
sub
mov
addr16
inc
xor
mov
imul
or
push
popf
nop
out
mov
jno
push
ljmp
sbb
out
or
popl
js
push
xor
je
adc
pop
pop
add
loopne
mov
loope
in
pop
mov
je
xor
mov
mov
int3
push
icebp
and
rcrb
dec
daa
out
cmp
call
sti
movsw
xlat
fbstp
mov
scas
sbb
sbb
jnp
inc
mov
inc
mov
pop
push
test
or
pop
int
shl
mov
inc
mov
jno
js
inc
jo
cwtl
and
insb
cmp
sub
mov
cmp
aas
flds
pop
sbb
js
insl
push
cmc
movsl
aad
lods
cs
inc
leave
fildl
dec
xlat
loop
mov
imulb
cltd
or
aam
ficomps
insl
inc
xchg
movsl
les
push
push
cmpl
add
ret
mov
jmp
daa
movl
dec
into
mov
xlat
mov
xchg
ret
sbb
aaa
mov
pop
push
out
ja
in
push
outsb
pop
jecxz
leave
pop
dec
push
stc
scas
xchg
test
mov
xor
js
cmp
push
int
stc
push
add
sti
fcomps
add
ret
fmull
icebp
push
or
ret
xor
adc
inc
orb
imul
mov
pop
enter
pop
ret
leave
popa
push
stc
fcompl
lret
and
xlat
jl
jns
jle
pop
shrl
pop
aad
pop
pop
incl
fwait
or
out
jp
dec
adcl
hlt
pop
xchg
movsb
loopne
ficomps
lods
daa
scas
icebp
insb
cmpsl
xchg
sbb
out
cld
and
fsubs
sub
mov
or
mov
or
std
mov
cld
fcomps
scas
aas
or
fdivs
jp
aaa
stos
adc
lret
sub
dec
stc
dec
mov
loop
push
push
dec
add
lret
jnp
push
cmp
adc
or
gs
mov
sbb
hlt
mov
mov
push
fwait
or
fisubs
mov
into
and
mov
pop
mov
push
pop
push
pop
daa
or
push
movsl
popa
imul
prefetchnta
outsb
js
inc
dec
into
movsb
pop
or
sti
ret
insl
add
sub
cld
and
imul
pop
insb
or
mov
jno
out
mov
ja
cmp
cmp
das
gs
push
pop
add
mov
stos
fldenv
test
mov
hlt
mov
fisubrs
jg
dec
jp
and
xor
fwait
mov
aad
nop
test
sbb
push
dec
push
lock
leave
xchg
cltd
inc
inc
aad
mov
pop
iret
adcl
pop
pop
mov
movsb
les
gs
jmp
add
mov
pop
fcmovu
ss
or
mov
jecxz
dec
loopne
in
push
cmp
ss
pusha
shr
mov
jbe
arpl
pop
iret
add
add
pop
rcll
icebp
aas
xor
gs
xchg
mov
cmp
cmpsb
xor
pop
mov
icebp
lret
jp
add
call
push
lds
pop
xorl
xor
inc
dec
and
in
adc
jecxz
sbb
adc
into
cmc
xor
sub
sti
xor
andb
inc
addr16
xor
push
and
xchg
test
loopne
subb
jge
xchg
aaa
pop
xchg
popf
pop
sub
fbstp
idivb
inc
imul
imul
sub
or
jecxz
in
loop
xchg
add
aam
sub
fidivrs
lods
mov
pop
aad
shlb
pop
xor
addr16
cmpsb
pop
push
movl
dec
cmc
in
adc
imul
sahf
outsl
and
push
faddl
xchg
sub
add
cmc
test
insb
hlt
ja
rcrb
sbb
sahf
lds
repnz
push
into
adc
xor
imul
bound
shlb
pop
lock
sti
sbb
and
or
cmpsl
pushf
inc
fisttpll
jne
inc
arpl
or
jns
dec
and
ret
cmp
dec
mov
xchg
les
cmpsl
adc
and
dec
cmp
sbb
jge
int
and
gs
es
mov
and
mov
scas
pop
xchg
mov
arpl
add
cmp
mov
ss
pusha
scas
sti
outsb
loop
dec
in
xchg
xlat
adc
jecxz
cli
call
popf
cmp
adc
sub
pusha
dec
setne
dec
push
lock
inc
and
sub
cmp
inc
je
mov
mov
in
xchg
sti
mov
push
sub
scas
mov
mov
jecxz
jl
in
roll
fidivs
jb
inc
insb
mov
daa
cmpsb
std
lods
adc
call
push
xchg
rcrb
mull
out
pop
mov
jp
add
or
dec
push
push
mov
adc
mov
pop
inc
enter
roll
mov
fnstcw
dec
cwtl
xchg
mov
jge
push
sarb
loopne
inc
ret
push
push
ja
adc
fildl
cmp
fdivrl
sub
pop
sub
inc
xor
push
cmp
int3
xchg
adc
in
pushf
stos
jo
adc
mov
aaa
xchg
mov
imul
fcom
loop
lds
or
mov
fsts
push
mov
push
outsb
pop
insl
bound
mov
dec
es
mov
sbb
aam
pop
leave
mov
les
jge
push
or
addr16
add
mov
jnp
adc
adc
cli
neg
inc
stos
sbb
lret
adc
and
fcmovnb
xor
push
lods
hlt
sub
xchg
out
xlat
xchg
bound
mov
je
add
cmp
lods
xor
lahf
xor
scas
int3
mov
outsb
add
jmp
mov
lea
push
adcl
xor
pop
inc
add
push
sub
push
push
ja
inc
mov
and
outsb
sbb
dec
push
jecxz
insl
add
iret
pop
and
or
sarl
leave
lods
lahf
push
sub
frstor
rcrb
mov
out
test
inc
jb
adc
dec
cli
stos
sub
adcl
add
daa
fwait
pop
clc
sub
call
leave
test
inc
push
or
cmpsb
ret
in
daa
sbb
cli
mov
clc
or
jecxz
jo
dec
jo
xor
lret
mov
testl
mov
out
inc
movsl
and
test
xor
out
fstpl
pop
jecxz
stc
jbe
ret
mov
pop
mov
test
mov
addl
addr16
fucomp
nop
aam
and
push
xor
add
iret
pop
dec
mov
fiadds
jp
lock
xchg
out
out
ret
push
movsl
mov
mov
ja
shlb
cmpsl
mov
dec
xchg
gs
test
push
hlt
sbb
sbb
ds
pop
pop
pop
fisttpl
pop
fnstenv
mov
mov
jae
aad
pop
outsl
in
popa
dec
in
popa
in
cmpsb
xchg
call
bound
orl
push
ficomps
sbb
movsl
cwtl
in
xor
pop
test
xchg
cmp
xchg
add
inc
adc
sub
popf
xchg
clc
lahf
lcall
repz
cli
mov
imul
mov
ss
and
mov
adc
invd
mov
mov
inc
outsl
shl
imul
and
push
orl
fnstcw
mov
addr16
mov
in
pop
sub
arpl
pop
push
jp
xor
mov
lock
lret
mov
call
ficoms
add
jp
inc
into
pop
cmpsb
arpl
and
mov
mov
push
sub
aaa
push
mov
movsl
ret
orb
sub
cmp
ret
dec
mov
xchg
aas
mov
cs
push
sbb
dec
scas
aam
sahf
mov
sub
addr16
push
xchg
daa
sarb
sub
sbb
mov
mov
in
cmp
pop
mov
xor
jg
int
mov
mov
push
addb
popa
dec
fwait
mov
and
push
add
jo
fs
dec
mov
pop
lods
in
mov
movsl
xchg
push
fisttpll
jno
xchg
pusha
jb
es
imul
loopne
jno,pt
push
mov
rolb
lods
sub
add
mov
sbb
data16
iret
or
test
mov
mov
and
filds
dec
mov
jne
mov
stc
out
mov
enter
aas
ficomps
push
mov
mov
pop
js
pop
loop
ret
frstor
int
idivb
xchg
pop
mov
xor
jge
dec
push
daa
push
movsb
jns
sub
push
pusha
mov
ss
hlt
cmp
les
insl
jmp
insb
add
mov
jge
cmp
mov
mov
xchg
sbb
add
sbb
imul
mov
push
or
jmp
xchg
add
pop
pop
push
mov
pusha
xchg
push
jbe
cs
push
andb
or
fisubl
pop
lds
jno
rol
dec
push
sub
xchg
and
leave
out
dec
push
ds
adc
rorl
es
sbb
sub
jae
mov
sbb
add
inc
cld
pop
sahf
repnz
iret
bound
jns
loope
sbb
mov
mov
add
cmp
xchg
xchg
rcll
orl
scas
mov
xor
mov
mov
arpl
mov
cmpsb
pushf
jmp
inc
xor
enter
sbbl
sahf
fmul
mov
jmp
inc
mov
addb
pop
sahf
jnp
insl
lcall
add
inc
lods
adc
lret
leave
int3
rcr
popf
cld
mov
pop
ja
aaa
dec
mov
or
pushf
mov
repnz
lret
xor
push
and
cmp
xchg
aad
ret
cs
push
cli
cmpsl
jp
lods
les
jle
sbb
enter
jmp
dec
add
leave
loopne
arpl
xor
sbb
pop
bnd
xchg
cmp
pop
cmpsb
std
fxch
cltd
add
lret
test
in
adc
unpcklps
dec
adc
sahf
sub
cmp
jnp
imul
sbb
sub
call
cltd
xchg
cmp
mov
popf
ja
icebp
jge
pop
repnz
mov
into
cmp
shl
mov
mov
push
outsb
mov
cmp
push
or
inc
lret
dec
or
ret
or
cmp
fldt
or
and
push
sbb
mov
add
test
cmp
adc
or
pop
cmp
pop
cmp
pop
adc
inc
and
nop
sub
cwtl
mov
adc
fsts
fidivs
sbb
push
or
dec
sub
icebp
sbb
inc
std
xchg
pop
cltd
sbb
es
push
movsb
outsb
insl
iret
les
push
ds
les
add
aaa
fstp
sahf
in
mov
mov
mov
xor
pop
mov
push
adc
in
test
stos
and
lcall
jns
fisubl
dec
xchg
outsl
imul
loopne
loop
cli
je
jno
dec
jg
call
xor
adc
push
adc
adc
fld
sub
in
lcall
mov
cld
dec
jle
das
cmp
sub
mov
loop
sahf
push
int
les
or
popf
cmp
mov
cmpl
or
pop
add
leave
int3
pop
test
cmp
icebp
inc
xor
add
mov
xor
fdivs
enter
stos
mov
daa
js
rcll
cmp
mov
mov
mov
add
cmp
fstps
adcl
jmp
leave
rorl
leave
pusha
inc
insb
add
mov
pop
lods
jne
push
sub
outsb
cs
cmp
inc
out
xchg
xor
lods
je
add
daa
jns
jmp
and
push
pop
lahf
repz
jmp
xchg
addr16
jnp
sti
in
das
mov
cmp
jo
rcll
hlt
in
xchg
inc
mov
xchg
js
jg
mov
jg,pn
xchg
add
xchg
fmull
dec
bound
out
mov
dec
test
xor
dec
mov
mov
inc
fldenv
aaa
dec
push
mov
jge
insl
or
sti
fcompl
jp
mov
inc
bound
fbstp
mov
and
add
xchg
cli
iret
lret
pusha
adc
push
mov
mov
setl
repz
mov
daa
lea
sahf
in
and
mov
and
xor
dec
sbbb
movsb
push
aas
pop
lcall
push
push
add
lret
ja
insl
ss
adc
loop
and
insb
stc
pop
mov
fs
cmp
jmp
mov
aad
cmpb
into
aam
pop
dec
jo
setb
push
and
xor
dec
dec
aam
lea
jae
and
test
jnp
sysexit
adc
nop
iret
icebp
mov
jno
into
or
mov
mov
scas
int
mov
insb
stos
and
setne
cmp
pop
rol
test
jmp
stos
mov
ljmp
jns
adc
rorb
add
jne
mov
imul
mov
and
xor
dec
lods
mov
repnz
vshufps
out
les
add
insl
fsubrl
iret
mov
push
inc
pop
and
mov
fs
pop
jns
notb
pop
imul
jno
xorb
cld
cld
in
clc
jo
lahf
xchg
mov
ficoml
add
shll
jns
cwtl
and
push
cmp
aam
sbb
push
sub
jge
mov
sbb
icebp
loop
dec
cmp
jle
jbe
mov
jae
stos
aaa
mov
xchg
out
xchg
pop
lods
data16
xchg
sbb
cld
lods
movsb
test
mov
popf
rcrl
ja
xor
xor
mov
shlb
out
iret
jb
aaa
and
popaw
leave
jmp
loopne
insl
mov
lds
ljmp
sti
adc
scas
sahf
lret
in
jg
push
cmp
imulb
mov
test
int
les
xchg
push
cmc
jle
or
sub
test
dec
adc
scas
and
mov
inc
movsl
jmp
ss
push
ljmp
call
dec
sub
int3
sbb
xchg
orb
mov
in
xor
pop
call
in
into
test
and
sub
enter
lret
cmp
in
shrb
inc
icebp
movsl
fidivl
clc
loopne
sub
add
jnp
mov
jnp
lret
push
loopne
cmc
outsl
stos
js
mov
cmpsl
test
cs
xchg
inc
mov
in
lcall
mov
filds
xor
jg
mov
push
mov
shrb
and
xchg
xlat
pushf
mov
dec
adc
mov
inc
cli
test
cmc
ret
push
xor
adc
out
mov
sub
sbb
sarb
stos
jb
mov
adc
jmp
dec
fnstenv
or
or
mov
cmp
mov
test
out
test
addr16
push
ret
fstpl
pop
ds
push
adc
jno
pop
sbb
xchg
sub
enter
cmpsb
push
mov
pop
jb
shr
lods
sahf
mov
shll
cmc
inc
jge
out
add
mov
xor
pop
xchg
or
adcl
jmp
jnp
leave
cwtl
pusha
jnp
je
dec
fcmovnu
dec
push
xchg
scas
int
push
adc
jns
mov
cwtl
sbb
sub
add
xchg
es
add
mov
xor
dec
popa
aam
xchg
out
in
fwait
data16
jle
push
aaa
ljmp
cmc
hlt
cmc
lahf
mov
sub
jle
je
stos
push
xchg
ja
lock
pop
mov
inc
test
pop
mov
mov
fwait
xchg
pop
xor
dec
icebp
shll
sub
les
lret
and
lahf
decb
jl
imul
xchg
loopne
add
aam
mov
or
mov
cli
mov
xor
lahf
call
fstl
mov
inc
push
loope
inc
jmp
lock
ret
arpl
les
in
sbb
movsl
cwtl
outsl
or
jno
lret
jb
sub
movsb
push
repnz
imul
mov
adc
faddl
push
je
mov
sub
fcoml
popf
adc
fs
pop
xor
inc
subl
sub
dec
stos
jle
pop
xchg
pop
loopne
push
mov
mov
repnz
inc
daa
dec
rcr
add
repz
sbb
cmp
outsb
or
push
push
sbb
jmp
jnp
jb
or
icebp
mov
mov
mov
dec
enter
sbb
hlt
mov
cmp
push
dec
mov
out
push
dec
test
ljmp
sub
sbb
out
inc
fcomps
fisubrl
xor
sbb
push
movsb
aam
lods
test
ret
repz
jbe
sub
test
aam
test
mov
push
push
jno
or
call
mov
cmpsb
jno
popf
dec
fisttpll
lcall
bound
test
cs
and
cmp
adc
and
mov
pop
ss
jge
hlt
sbb
aas
orl
mov
xor
enter
daa
dec
hlt
cmpsl
sysexit
inc
jns
push
push
les
mov
cmp
mov
mov
mov
ljmp
pop
add
xor
in
mov
cltd
and
fimuls
push
mov
scas
mov
pop
or
sbb
mov
fwait
cmp
in
dec
dec
aam
sbbb
xor
mov
inc
xor
lret
in
mov
cmp
inc
jmp
jno
sarl
or
les
pop
add
xor
iret
cli
mov
pop
mov
push
shll
je
mov
arpl
call
sub
lods
add
mov
scas
ja
xchg
jl
stos
imul
sbb
jno
aad
scas
sub
repz
int3
outsb
xchg
in
sbb
scas
in
jmp
xchg
iret
jmp
ficomps
lahf
ljmp
adc
sbb
aad
cmc
lahf
inc
push
test
sti
inc
pop
sar
mov
ret
push
jbe
xchg
and
dec
insl
idivb
inc
sti
dec
sub
jl
aaa
imul
cmpsl
mov
fstps
jmp
out
fsubr
xor
mov
xchg
jp
pusha
test
imul
mov
pop
xor
jmp
sub
xor
push
jno
movsl
xchg
jecxz
lock
rcrl
sbbl
fnsave
pop
daa
ja
stc
xor
idivl
pop
xchg
or
sub
addb
fwait
icebp
cmpsl
ss
pop
pop
in
adc
mul
sbbb
push
mov
es
pop
out
in
mov
xor
xchg
out
shll
cmp
add
and
pop
scas
out
or
inc
adc
sbb
mov
or
cmp
adcb
enter
add
hlt
imul
mov
cmpsb
or
out
mov
xor
loop
mov
adc
clc
inc
adc
fs
cmp
xchg
movsb
js
jnp
push
and
or
es
fs
les
stc
sbb
pop
pushl
or
pushf
cmpsl
push
add
testl
xor
sbb
dec
ret
add
movsb
jmp
mov
aas
fs
pop
pop
sbb
les
popa
imulb
inc
data16
jo
jb
pop
jnp
and
push
divb
subb
pusha
out
mov
inc
and
fcmovu
into
push
lahf
int
rcll
ljmp
call
scas
push
or
mov
sbb
sbb
push
test
fmull
push
aad
cmp
gs
mov
xchg
js
and
loope
push
cmp
jnp
sub
aaa
push
mov
xchg
icebp
xchg
cld
inc
pop
mov
cmp
cmpsb
out
dec
mov
outsb
das
shlb
mov
lret
push
notb
inc
dec
push
fcmovnb
xor
out
ret
xchg
ss
add
cmp
push
or
int3
dec
dec
xorb
mov
fldcw
leave
sub
mov
or
cmpsl
jle
cmpb
mov
shlb
test
stos
cmp
cltd
stc
adc
clc
pop
dec
pushf
fisubs
je
aas
push
cli
mov
cwtl
sub
fistl
gs
inc
data16
scas
pushf
mov
cmpsl
dec
mov
cmp
or
aam
stos
mov
les
xor
sbb
jae
mov
das
inc
pushf
rol
xchg
mov
adc
jecxz
add
aaa
inc
add
lock
mov
and
xor
lods
aam
cmp
insb
ss
test
cld
add
inc
call
pop
stc
popf
pusha
xor
shll
pop
inc
dec
lcall
int3
mov
cmp
lahf
les
sbb
xchg
stos
xor
movsb
addb
out
int3
fwait
in
mov
dec
sub
add
sbb
mov
outsl
xor
or
xchg
test
xchg
jl
test
lock
hlt
je
adc
enter
jne
jnp
xlat
mov
mov
fldt
shrb
sti
inc
lret
movsl
pop
mov
xchg
inc
mov
fisubl
or
ja
inc
repz
cmp
jecxz
data16
and
notb
ret
jnp
outsl
jne
mov
cs
mov
addr16
jmp
mov
shlb
xlat
lods
and
daa
mov
dec
xor
push
pop
mov
jmp
pushf
mul
fdivrl
das
push
outsl
and
xchg
out
lcall
sbb
movsb
sub
out
loope
pop
adc
push
dec
cmp
mov
sub
int
fdivrp
out
add
incl
test
std
sub
mov
test
jmp
xchg
iret
and
and
fwait
mov
mov
ret
loop
or
add
mov
push
cwtl
shl
jl
xor
dec
loopne
les
sub
lds
loopne
in
or
popf
mov
jo
dec
pop
rcr
push
mov
mov
dec
xchg
mov
and
push
imul
pusha
std
add
mov
mov
push
pop
xor
in
mov
ss
sar
mov
iret
lahf
aaa
cmp
pop
mov
stc
ds
cmp
and
repnz
inc
das
xchg
call
in
push
mov
mov
xor
xor
push
push
out
lret
xor
pop
adc
ret
lea
in
push
jge
adc
or
push
insl
sbb
sbb
sub
sbb
test
sub
cmp
and
adc
daa
popf
or
shlb
push
imul
pop
mov
sub
and
xchg
inc
mov
je
sub
cmp
aam
inc
mov
jns
xchg
imul
mov
in
lods
stc
int3
repnz
dec
add
ss
mov
fstpt
push
and
adc
mov
addr16
stos
arpl
push
sub
ret
jnp
dec
mov
xchg
sbb
cmc
inc
dec
test
mov
inc
push
fcomps
add
cli
mov
stc
adc
push
and
push
mov
sbbb
out
enter
dec
sbb
aam
out
test
xchg
xchg
or
scas
jp
leave
push
stos
or
xchg
or
jnp
mov
rcr
xchg
xorl
pop
out
lcall
adc
shll
jne
and
jnp
dec
notl
fists
sbb
call
cmpsb
push
pop
dec
and
cmp
movsl
pop
sub
outsb
mov
mov
pop
dec
mov
jno
pop
pop
push
cmpsb
insb
dec
mov
pand
stos
xor
lret
lcall
push
addr16
mov
mov
xchg
push
lahf
mov
adc
sbb
fs
outsl
into
mov
lret
push
xorl
jne
sub
jl
test
cltd
aas
cmpl
xor
or
jge
in
sub
mov
iret
add
ljmp
das
inc
popf
iret
pop
lret
stos
fisttpl
cmpsl
pop
mov
sti
test
dec
dec
cmp
add
push
mov
jge
int
push
mov
and
sbbb
or
mov
aas
inc
movsl
addr16
sbbb
mov
xor
outsb
pop
call
push
fbld
in
lcall
data16
mov
lods
add
rolb
imul
cltd
jecxz
jl
jae
mov
jg
js
push
loopne
dec
cmpb
mov
stc
lods
pop
push
xchg
adc
adc
out
das
repnz
stos
movsl
mov
test
notl
jmp
std
subb
pusha
in
dec
fsubp
sbb
repnz
sub
js
call
popa
fadd
and
jno
imul
add
stos
or
orl
popf
add
das
stos
mov
cmp
idiv
jmp
daa
pop
sub
pop
sub
idivb
mov
fadds
cmp
adc
lds
pop
in
pop
popf
in
xchg
push
jle
jne
push
sub
adc
loopne
cbtw
test
mov
rolb
cwtl
out
popf
in
or
fisubs
cmpsb
push
jnp
in
pop
xor
mov
nop
sbb
cwtl
inc
aaa
leave
ret
lahf
repnz
xor
pop
pop
cmp
jne
hlt
mov
and
push
cmpsl
push
mov
pop
mov
add
orb
mov
test
fistl
fsubl
stos
repz
mov
jnp
insl
sub
xchg
das
dec
lea
sub
stc
mov
out
push
xor
push
push
rclb
hlt
aam
imul
xchg
xor
jb
mov
insl
add
and
lock
push
adc
mov
cwtl
push
lcall
pop
ja
push
pop
loopne
ror
movsl
jb
sbb
hlt
and
daa
arpl
xchg
pop
aas
fistl
xchg
icebp
dec
or
mov
lret
sbb
pop
test
push
lret
jmp
lret
inc
jno
jne
aaa
subl
lret
cltd
push
insl
cmp
mov
movsl
lock
scas
stc
ror
lods
pop
in
in
std
push
test
rcrb
clc
jl
and
sbb
sahf
fs
or
loope
test
sub
je
mov
clc
rclb
xchg
imul
rorl
lea
movsl
aaa
adc
sbb
shrb
cmc
dec
sbb
push
in
inc
xor
xchg
fsub
adc
inc
mov
testb
inc
enter
imul
add
xchg
sub
pop
mov
cmp
int
js
sub
push
push
sahf
stos
stos
or
dec
push
and
imul
shrb
pop
cmp
dec
mov
push
xchg
dec
cmp
out
push
gs
loop
inc
pop
orb
pop
jmp
out
mov
pop
and
sub
xchg
sbb
adc
imul
ret
fsubr
popa
jb
dec
cld
mov
and
add
sbb
icebp
lahf
repz
fs
nop
push
jle
inc
mov
cmp
dec
ret
jl
addr16
aas
push
cli
ss
inc
add
inc
jne
pushf
movsl
adc
cli
mov
popa
insb
pop
xor
xor
push
mov
shrb
fistpl
rolb
jbe
daa
sbb
pop
out
fisttpll
das
sub
pop
sbb
cmp
pop
push
inc
xchg
lret
pop
mov
lods
jmp
pop
xchg
repnz
jecxz
push
cmp
movl
out
scas
je
jge
nop
dec
mov
movq
pop
fmuls
fs
cmp
ss
test
mov
sub
shl
adc
and
int3
jae
push
dec
or
sub
cwtl
adc
pop
std
and
cmpsl
adc
cmpsl
repz
push
jmp
repnz
mov
lret
jp
aam
bound
fsubs
push
data16
or
cltd
ficompl
call
movsb
push
jne
xchg
pop
out
popa
or
cmp
add
mov
adc
or
jl
test
add
out
mov
add
adc
cli
iret
in
and
sub
adc
push
popa
sbb
push
add
xchg
gs
fxch
pop
outsw
cld
in
dec
repz
add
pop
iret
fwait
pop
mov
stc
daa
xchg
and
mov
pop
notl
inc
inc
lods
mov
push
hlt
add
loop
add
mov
mov
jb
rcr
outsb
aad
shlb
ret
pop
and
mov
stos
adc
xchg
mov
outsl
add
push
lods
scas
mov
inc
push
movsb
adc
sbb
scas
fsubrs
fcoms
xchg
jl
notb
imul
push
clc
repz
push
dec
lret
ficoms
in
and
rol
adc
xor
fwait
adc
outsl
icebp
stos
outsl
stc
in
fnsave
xor
or
js
and
out
add
jmp
dec
xchg
fidivrl
and
push
addr16
cmp
xchg
pop
lret
inc
lea
xchg
data16
jae
add
sbb
js
iret
loop
pop
out
test
and
pop
add
int3
jl
mov
and
xor
mov
je
andb
and
mov
mov
fs
pop
movsb
cwtl
jne
jecxz
shrb
jge
xchg
bound
mov
mov
cltd
ret
adc
xchg
popf
adc
mov
icebp
stos
js
out
pop
xor
sub
test
xchg
and
or
std
out
jle
mov
daa
test
push
fldl
repz
js
pop
push
lds
mov
adc
sub
cmp
xchg
sub
xchg
and
nop
jno
test
mov
mov
ja
dec
fmull
cltd
xor
or
ret
loope
mov
add
inc
stos
lds
cmpsb
nop
bound
leave
repz
pop
loope
nop
xlat
or
push
xor
test
daa
lahf
paddb
bnd
add
enter
fwait
xor
jnp
xor
mov
and
inc
xor
mov
cltd
insb
ss
mov
sbb
pop
fnstcw
daa
mov
icebp
dec
inc
jo
popa
mov
push
inc
pop
mov
xor
add
int
repnz
lcall
pusha
adc
and
in
or
imul
bound
movsl
mov
in
mov
sub
push
lret
shlb
aam
mov
popf
push
addr16
sbb
inc
mov
inc
fucomi
fdivs
fcomps
test
mov
fldcw
int
lock
mov
jae
mov
pushf
cmc
jmp
mov
je
adc
add
jnp
xor
dec
mov
cmc
stos
enter
or
dec
push
adc
cwtl
mov
cld
pushf
pushl
lock
stc
aad
jb
pop
and
loop
add
xchg
imul
fisubrl
jae
adc
dec
sbb
inc
lret
std
cltd
or
iret
test
loope
addl
sarb
mov
ja
stc
dec
fwait
in
cmpsb
xor
or
orb
shll
pop
iret
pop
or
jo
ja
lds
mov
mull
or
push
sbb
mov
mov
cmp
jo
lret
gs
lahf
sarl
adc
add
mov
push
je
lods
jnp
loopne
push
popf
negb
mov
xchg
pop
inc
cmc
imul
mull
pop
clc
mov
data16
es
adc
mov
movb
dec
mov
push
loop
stos
fldt
push
push
xchg
in
call
leave
lret
mov
test
cwtl
mov
pop
push
pop
repz
jno
or
cmp
shll
push
cmpsl
mov
mov
and
mov
dec
dec
lods
mov
jno
adc
inc
js
arpl
xor
scas
movsl
fldenv
andb
jge
jb
sub
fimuls
cmp
pop
test
lret
out
push
xchg
call
es
repnz
mov
andl
xor
dec
popf
xchg
jp
push
out
or
sub
cmp
mov
mov
loop
cmp
js
pushf
mov
gs
cmp
cmp
xor
dec
shrb
pop
sub
leave
mov
jae
jg
or
sarl
add
pushf
ret
iret
inc
test
divl
push
cmpsb
lret
cmp
jne
jmp
mov
push
aaa
adc
push
pop
ret
and
nop
and
aad
jbe
fcoms
ret
lea
iret
add
or
sub
and
pop
dec
lahf
nop
jb
push
aas
dec
mov
push
mov
loopne
adc
sub
arpl
mov
vpunpckhwd
fimuls
xor
stos
cmc
stos
jb
jle
icebp
es
out
pusha
enter
mov
or
mov
xchg
movb
inc
xor
lret
es
sbb
sbb
mov
inc
lods
lds
daa
push
ljmp
insb
xor
cmp
pop
jecxz
jmp
loop
cmpsl
sub
addb
pop
jne
jge
outsl
mov
in
bound
lods
jnp
xor
xor
fisttps
mov
lds
addl
mov
ds
add
stc
lret
pop
jae
push
sub
pop
sti
iret
mov
cmp
shlb
jge
xchg
andb
hlt
cmp
or
mov
je
scas
add
push
clc
lock
push
mov
shlb
jmp
mov
pusha
sbb
adc
push
stos
pop
mov
adc
xchg
and
or
pop
mov
fnstsw
sbb
dec
ds
lods
pop
or
arpl
out
push
out
push
inc
mov
push
stos
sub
mov
mov
aad
and
movsb
mov
orl
xor
xchg
mov
ficompl
jg
xchg
xchg
cmp
imul
xor
sbb
dec
cs
jg
mov
mov
arpl
aad
jnp
aad
imul
pop
dec
outsl
imul
rclb
arpl
shrl
sub
mov
addr16
and
mov
in
push
inc
enter
mov
mov
mov
daa
pop
pop
sub
rorb
sbb
in
push
pminub
adc
lock
push
mov
inc
mov
sarb
insb
mov
cwtl
adc
sti
pop
in
and
fists
jne
dec
cmp
cltd
mov
pop
inc
jge
loop
mov
mov
popf
cltd
das
lcall
dec
leave
rcrb
imul
pop
jle
lcall
lock
lret
cmp
lret
cmp
jmp
out
fwait
inc
add
xorl
jmp
rcrb
sarb
push
lods
in
push
ret
lock
mov
dec
into
xorl
ret
outsl
jl
cmp
cmp
push
lds
dec
ljmp
sbb
cli
jbe
or
das
and
or
and
mov
xor
shll
mov
les
scas
add
inc
sub
pmulhw
in
or
xor
negb
inc
and
xchg
loopne
mov
sbb
fadds
scas
inc
lret
push
mov
fs
ja
lock
push
int3
fcomip
outsb
add
add
jge
push
jl
scas
adcb
cmpsb
inc
mov
pushf
clc
sbb
xchg
movb
xor
pop
xchg
sbbb
xorb
fdivl
or
cmpb
in
push
loope
jbe
mov
cmpsb
sarl
push
jmp
sub
int
cli
push
mov
movsl
dec
or
inc
test
sbb
and
dec
adc
pushf
or
sub
shrb
mov
icebp
ja
stc
xchg
adc
xchg
mov
into
sahf
push
daa
mov
scas
mov
xchg
sub
out
sub
jp
cli
sub
add
or
xchg
pop
mov
mov
stos
cmc
mov
mov
insb
pop
push
cltd
pop
sbb
xor
movsl
push
adc
cmp
xchg
mov
add
repz
add
sub
dec
cmpsb
sub
dec
paddd
or
pushf
enter
cli
jge
aas
pop
jae
orl
sub
jecxz
push
push
push
cmc
dec
call
lret
outsb
hlt
jmp
push
cld
in
cs
pop
je
cwtl
ret
inc
or
mov
inc
in
xchg
cmp
sbb
insl
je
es
pop
ja
inc
jnp
push
sbbb
or
out
fimuls
into
loopne
and
roll
jp
int3
filds
dec
clc
inc
mov
xchg
lcall
popf
cld
std
fsubl
cmp
add
test
or
cmp
lret
loope
mov
je
scas
cmc
mov
fbld
lods
out
lds
adc
sbb
adc
add
add
pop
nop
popl
jb
dec
dec
aaa
jb
in
sti
cmpsl
cmp
pop
mov
ljmp
mov
inc
xor
dec
mov
movb
mov
sub
cmp
sbb
add
dec
mov
test
inc
int
leave
mov
dec
lds
movsl
lock
jbe
data16
cmp
fstpt
mov
xchg
push
mov
fimuls
inc
movsl
sub
movb
and
push
out
inc
scas
jmp
pushl
xchg
pop
imul
sbb
and
xor
and
int
nop
fidivrs
ja
test
lods
lret
mov
fs
rclb
mov
shll
jb
clc
jnp
fmull
jne
rorl
xchg
pop
movsb
push
in
cmp
pushf
pop
jmp
lret
lods
mov
arpl
movsb
lahf
mov
fsubp
jno
dec
jecxz
mov
das
mov
dec
cmpsl
sbb
nop
repnz
sbb
sti
das
sbb
fs
inc
out
adc
lret
out
stos
mov
sbb
mov
xor
in
pop
shrb
sub
sub
cmovno
cmpsb
addr16
cmp
test
test
lret
adc
imul
xchg
lds
notrack
fimull
push
xchg
int
stos
leave
cmpl
data16
mov
and
js
jae
adc
in
imul
add
iret
jmp
imul
ffreep
sbb
mov
rolb
push
in
sub
leave
jl
dec
add
sbb
lea
jg
ljmp
pop
inc
push
jnp
fnsave
or
mov
sti
cmp
pop
scas
push
push
mov
test
jb
mov
insb
xchg
mov
jnp
sub
jmp
daa
xor
and
imul
in
jns
pushf
jg
inc
ret
leave
cmpsl
dec
gs
and
inc
into
aas
test
aaa
inc
cmp
jmp
xor
mov
icebp
push
movb
pop
sub
push
jmp
mov
or
stos
mov
fisttpl
pop
jae
in
xchg
or
push
cs
push
cmpsb
into
shl
fwait
push
dec
mov
pop
mov
adc
dec
imul
insl
lock
js
inc
mov
nop
arpl
jg
pop
push
out
push
xchg
cld
mov
pop
mov
in
movsb
stos
mov
pop
jle
inc
fidivl
sub
xchg
jle
sbb
xor
mov
lea
xchg
aad
cmp
adc
fcompl
sbb
in
cmpsl
xor
jae
push
inc
iret
inc
or
adc
xor
jecxz
adc
insb
sbb
sti
pop
jmp
testb
add
je
mov
jne
lods
add
adc
or
inc
mov
dec
sub
dec
cld
cltd
jns
cmpsl
dec
rcll
out
jo
call
xchg
movsl
lret
and
push
fiaddl
sub
fcoms
inc
in
xchg
test
inc
sahf
xor
call
std
mov
xchg
fwait
sub
clc
xchg
xor
pushf
lret
insl
imul
jl
lods
add
xor
pop
mov
pop
test
sub
or
inc
xor
pop
andb
inc
xchg
mov
inc
add
js
inc
psrlq
cli
imul
sbb
pop
push
mov
addb
dec
dec
mov
jl
or
ret
dec
dec
negl
test
mov
mov
lret
xchg
notb
daa
test
fs
mov
cmpsb
mov
inc
sbb
imul
ss
xor
fisttps
in
add
xlat
lret
jge
jge
pop
sub
test
ja
inc
pop
int
movb
mov
mov
cmpsl
push
dec
sbb
push
rol
fmull
mov
sbb
pop
xor
and
mov
ret
xchg
jmp
test
arpl
and
mov
outsl
inc
dec
popa
fldenv
cmp
arpl
imul
mov
fildl
xchg
sub
cmc
jle
aam
mov
mov
sti
xchg
cwtl
loop
ret
mov
xchg
adc
push
out
sbb
lahf
mov
testb
in
enter
adc
push
sbb
xchg
jbe
adcl
mov
rcrb
adc
mov
out
push
mov
push
jb
xor
hlt
cmpl
xchg
movsb
mov
dec
fldenv
mov
das
fwait
and
push
lcall
das
push
les
jge
les
and
pop
cmp
xchg
fldenv
push
ret
jne
cmp
cmp
inc
adc
imul
movsl
bound
sbb
leave
leave
lock
adc
mov
cmp
add
jle
test
mov
jle
push
sbb
cmc
push
xorb
pop
aaa
add
pusha
in
shl
es
iret
pop
imul
and
adc
xchg
inc
cltd
and
jl
or
rclb
aad
cmpsl
pushf
mov
ds
cltd
inc
pop
out
ds
push
fwait
jge
out
in
ret
insb
dec
iret
decb
cwtl
mov
inc
xchg
sbb
pop
popa
mov
cs
jno
cmpsb
pop
mov
mov
pop
mov
inc
sbb
arpl
jp
cmp
jl
pop
fstps
inc
cmc
stos
movsb
pop
aad
jl
scas
lock
ret
roll
xor
mov
push
and
add
pop
subb
test
dec
xor
loop
sbb
jp
ror
lret
test
sub
in
lods
sbb
pop
jbe
sub
adc
enter
rol
fsubr
das
push
outsl
div
sbb
dec
sbb
cmp
cwtl
adc
adc
std
xor
pop
mov
mov
jl
pop
ds
sub
inc
test
leave
xor
xor
gs
mov
pushf
cmp
in
sub
xor
pop
sub
cld
jne
dec
cltd
and
cmp
add
jae
ret
and
loopne
mov
ljmp
scas
bound
jne
adc
inc
push
mov
fcomp
nop
and
test
jnp
inc
mov
andl
ss
js
cmc
outsl
cmp
or
arpl
fcoms
bound
arpl
mov
sbb
mov
xchg
or
out
aas
arpl
cli
push
lock
sti
jo
cmc
sbb
es
sti
push
jmp
sbb
in
cmp
mov
dec
dec
outsb
mov
dec
aam
mov
daa
mov
jl
imul
lcall
out
or
xchg
xlat
addb
sti
cmpsb
add
scas
out
andl
xor
sbb
add
imul
cmp
inc
rorl
in
xchg
push
or
jmp
jle
fdivrp
mov
sbb
and
jecxz
fucomp
and
xchg
sbbl
xor
arpl
and
test
cwtl
jmp
lcall
mov
in
xchg
clc
mov
les
fbld
movsl
lcall
dec
jo,pt
stos
test
dec
jl
xchg
das
adc
repnz
popf
shlb
cltd
out
sub
les
addr16
xor
lret
lods
add
pop
lcall
lea
lods
rolb
and
leave
add
lcall
clc
cmp
mov
xor
xchg
push
cmp
out
cmp
imul
xchg
cmpsl
jle
or
inc
imul
aaa
out
pop
es
and
jo
pop
cltd
aam
cltd
jo
loop
scas
lock
ds
dec
xlat
test
imul
pop
xchg
rorb
inc
push
push
cld
cmp
jecxz
xor
out
pop
cmpsb
aad
push
neg
push
mov
imul
xor
sti
xchg
mov
add
repz
aaa
jns
or
lods
mov
mov
cmc
sbb
sub
dec
fldenv
adc
fnstsw
int
rcrl
data16
imul
nop
adc
cmp
adc
notl
jp
lahf
out
movsl
imull
cmp
mov
push
or
shlb
lret
lcall
and
mov
iret
mov
add
jl
imul
push
cwtl
jmp
xor
les
gs
push
mov
subl
mov
loopne
xor
dec
daa
jae
pop
mov
push
xor
lahf
sbb
inc
fsubp
fst
push
lret
ds
lea
cltd
add
add
mov
in
pop
js
push
test
jmp
inc
and
cmp
xor
stc
sbb
xor
mov
daa
cmp
ja
jecxz
lahf
cmp
mov
testl
gs
pop
jmp
insb
test
je
sbb
xchg
mov
lcall
sub
xchg
in
fcomps
pop
sbb
cmp
fs
lret
shr
out
cmp
or
mov
in
loope
roll
sbbl
mov
mov
pop
pop
into
adc
sbb
ds
outsl
mov
xchg
repnz
fldcw
inc
pop
pusha
mov
icebp
mov
mov
cmc
jbe
call
sub
das
mov
sbb
mov
int3
sbb
sub
in
stos
aaa
divl
pushf
pop
out
scas
xor
adc
jl
cmp
sbb
sub
out
and
lcall
xchg
jb
daa
adc
mov
jg
pop
cmp
mov
or
push
out
push
out
jmp
add
or
int3
pop
sub
push
loope
and
pop
or
cmp
mov
nop
pop
xchg
mov
adc
fwait
sbb
pop
sbbl
jl
jl
mov
lds
dec
nop
and
dec
jp
cmp
inc
inc
cmp
and
jns
xlat
cltd
insb
inc
lret
sub
popa
aaa
repnz
jecxz
push
iret
addb
pop
mov
aas
jne
cmp
loopne
jnp
jnp
fistpll
in
icebp
xor
les
push
mov
xor
sub
xchg
inc
fildll
xchg
push
xchg
lods
es
cmpsb
inc
bound
orl
dec
and
outsb
aad
addr16
push
jae
pop
lds
lahf
adcl
mov
cmpxchg
addr16
cmp
fcom
mov
jg
sbb
pop
jge
xchg
push
jne
cmpsl
jo
stos
sti
hlt
mov
push
lret
cmpsl
fldenv
cwtl
arpl
notb
push
shrl
es
jmp
xchg
jae
pop
fcomps
jle
outsb
lea
sub
cli
imul
xor
addr16
push
jp
dec
lds
leave
mov
lds
xchg
and
lahf
insb
dec
int3
or
pop
pop
push
push
gs
dec
test
jmp
test
lret
pop
xor
push
ret
lock
push
inc
or
fimull
push
aas
cmc
and
pop
pop
mov
adc
and
sub
push
jp
cmp
sti
sbb
repz
pop
dec
and
push
pop
cmpsb
jmp
aad
in
sbb
pop
add
push
ds
dec
lock
in
out
sub
push
push
lods
mov
int
inc
push
mov
dec
out
jle
push
cmc
inc
cltd
mov
push
imul
push
xchg
adc
pop
mov
hlt
add
mov
dec
inc
and
pop
push
fdivrs
jg
rcr
push
out
and
bound
jle
pop
cld
arpl
ret
and
loope
inc
adc
sbb
dec
add
jnp
test
lret
fsub
test
mov
xchg
lds
leave
dec
add
cmpsb
or
dec
mov
test
sub
dec
idivb
cmp
popf
mov
loopne
push
and
push
mov
or
clc
ljmp
mov
mov
push
test
cli
sarb
sarb
inc
nop
inc
sbb
nop
mov
or
gs
mov
stc
cmp
test
in
cmpsb
dec
or
push
cmpb
xor
hlt
jo
int3
enter
dec
mov
and
in
je
sub
fwait
sub
dec
enterw
pop
inc
or
dec
repz
cltd
and
mov
mov
push
jmp
jae
pop
mov
mov
ja
mov
les
and
mov
xchg
cmp
enter
pop
push
mov
jb
adc
sub
mov
jmp
cmpsb
ss
jae
add
shll
xor
jae
cmp
push
cltd
adc
rcll
pop
in
repnz
lea
fsubl
push
push
sub
je
push
sub
or
outsb
xor
nop
mov
out
lock
int3
popa
xchg
pop
push
jmp
inc
aad
fcomps
jecxz
jmp
push
lea
repz
aaa
inc
jno
pop
add
andb
popf
sbb
dec
and
cmpsl
addr16
aaa
mov
inc
pop
mov
pushf
cmc
aaa
sbb
dec
xchg
pop
mov
push
adc
sbb
lods
xchg
cmp
jg
dec
inc
inc
stos
in
movl
jmp
loope
mov
iret
mov
clc
fists
push
repz
lods
or
cmc
mov
pop
jne
inc
jge
in
push
imul
mov
add
mov
test
pop
scas
mov
gs
fildl
aam
lret
add
popf
arpl
mov
adc
mov
repnz
pop
insl
push
sub
lods
sysret
sbb
sub
das
lcall
cmp
je
xchg
xor
sbb
mov
test
lds
sub
pop
outsb
and
inc
push
ja
xchg
xchg
loop
movsb
adc
call
lahf
in
sub
shrl
pop
sbb
push
pop
outsb
sbbb
sbb
aad
mov
cmpb
popf
lahf
dec
mov
fdivrs
xlat
dec
test
inc
jb
shl
rcrb
bswap
push
cwtl
es
push
ja
dec
movsb
or
popf
imul
icebp
fsubr
inc
aad
adc
mov
sub
icebp
or
outsb
sub
pop
pop
ret
dec
inc
dec
jbe
jbe
sub
in
mov
dec
and
sbb
stos
jnp
test
lds
or
adc
test
adc
ljmp
pop
mov
add
pop
dec
adc
jno
add
out
push
or
pavgb
sarb
rcrl
sti
sbb
or
add
inc
es
dec
fisubrs
mov
pop
sbb
iret
addr16
fsubrs
adc
aaa
lahf
out
xlat
jecxz
aaa
inc
hlt
push
inc
imul
jne
loop
cmp
insl
mov
lods
adc
fwait
xlat
dec
adc
ficomps
push
sub
mov
loope
push
sysenter
push
mov
outsl
fistpl
xor
aam
cld
jl
inc
dec
or
xor
stos
rcl
lods
in
pop
cmpl
lea
cmp
dec
inc
es
mov
cltd
push
sbb
aas
dec
fsts
mov
insl
movsb
mov
mov
shl
leave
adc
in
mov
mov
popf
call
and
outsl
pop
outsl
std
leave
push
aas
sbb
add
pop
repz
mov
mov
imul
aas
or
push
inc
mov
in
es
cmp
xor
xchg
xor
into
or
nop
mov
xchg
push
xor
cmpb
xlat
sbbl
push
cltd
call
cmp
addr16
jo
rcll
cwtl
and
sub
and
adc
lea
cmp
mov
stc
mov
xchg
js
pop
mov
clc
push
push
xor
dec
cmpsl
cwtl
xlat
or
lret
ds
call
and
mov
in
fwait
popa
and
mov
fldl
sub
or
adc
or
jge
adc
jge
popf
sub
std
das
pop
es
xchg
xchg
in
xor
into
and
fnstenv
dec
push
fs
mov
cmpsl
ja
loop
add
repnz
outsb
jne
out
and
shll
cs
adc
xchg
jo
bound
pop
mov
inc
or
pop
dec
mov
cmp
add
lods
ret
xchg
jge
gs
mov
add
jg
xor
xchg
rcrl
and
scas
cmp
and
daa
test
mov
cld
lds
and
sbb
mov
xlat
je
sbb
in
and
fwait
mov
mov
cmpsb
sub
inc
outsb
cmc
enter
rcll
in
push
sub
sub
test
inc
test
mov
mov
add
std
cmp
int3
test
sub
pushf
jnp
popa
pop
imul
sub
fcoms
lods
nop
enter
sbb
outsb
andb
cmp
inc
jle
out
in
fwait
dec
hlt
cltd
inc
add
sub
aad
test
and
daa
pop
out
sub
adc
shlb
hlt
adc
pop
xor
lahf
pop
lock
jl
mov
pusha
mov
mov
das
pop
orl
jl
ds
dec
inc
call
lds
sbb
jae
dec
inc
pop
pop
mov
test
imul
mov
in
repz
lahf
cmp
jmp
test
shll
ljmp
stos
leavew
adc
pop
xchg
push
mov
test
cmp
cmp
xchg
pop
call
ds
mov
mov
gs
xor
pop
cmpsl
fidivrl
jl
push
mov
scas
mov
mov
repz
inc
xchg
add
xor
aas
adc
mov
outsl
sbb
aam
jl
sti
lret
rcll
xor
pop
in
xchg
out
pop
roll
adc
addb
jbe
in
and
cs
mov
inc
sub
cmp
ja
loop
inc
mov
and
or
subb
test
cmp
inc
nop
pop
fbld
xchg
je
mov
gs
stc
cmpsb
or
sbb
and
pushf
pop
and
enter
daa
aam
sbb
push
popa
pop
ret
mov
add
roll
fptan
fmull
dec
cmp
jge
inc
push
out
test
pop
mov
fildll
sbb
adc
cmp
rcrl
mov
sub
mov
mov
xchg
xchg
addb
xor
outsb
xorl
cmpsl
sub
sub
and
cmp
lret
dec
rolb
aas
js
jp
ds
outsb
aam
insb
inc
add
loop
movsl
push
cmc
lcall
movsb
sub
inc
ja
fidivrs
ret
mov
test
outsb
cmpsb
sbbb
add
xchg
push
jmp
lods
lods
mov
movsl
insb
fisttps
jg
push
jmp
std
mull
xor
pop
outsb
aaa
mov
dec
int
shrl
clc
testl
mov
xchg
sub
mov
in
fdivrs
fmuls
jns
xor
pop
dec
jbe
shrl
push
pop
in
std
add
xor
sarb
fucom
fidivs
lock
jo
jl
xchg
fadd
cltd
int
xor
and
popf
inc
jns
cld
insl
dec
shlb
mov
mov
rclb
cmp
fnstcw
mov
leave
pop
ljmp
int3
ja
jae
push
leave
inc
xchg
insl
mov
xchg
shl
sbbb
add
inc
shlb
pop
pop
std
orl
and
or
lock
cmp
mov
testb
ja
cmp
cld
cmpsl
sbb
cwtl
movsb
pusha
fildll
out
scas
cli
mov
enter
mov
sti
adc
cmpsl
cmpsl
popa
mov
or
mov
daa
xchg
xchg
pop
pop
fwait
aam
jb
cmp
mov
sbb
subb
scas
out
lods
jb
ljmp
dec
xor
add
push
shr
or
sub
sub
dec
sbb
stc
push
mov
dec
fisubrl
mov
sbb
into
mov
dec
mov
xchg
lds
cld
push
sub
or
cmp
faddl
jg
mov
mov
dec
rcrb
test
sbb
bound
xchg
jecxz
icebp
dec
xor
dec
push
xchg
pop
push
loop
adc
push
and
jl
inc
outsl
or
adc
mov
data16
pop
nop
fsubrs
cmc
das
dec
sub
mov
sbb
mov
cmp
and
test
sbb
inc
xchg
test
sub
push
dec
add
ljmp
mov
sti
cmpsb
sarl
jg
push
mov
jmp
pop
sub
test
out
dec
mov
inc
std
arpl
push
xlat
and
gs
cmp
fldenv
mov
fs
mov
lret
xor
and
loopne
or
pusha
cmp
pushf
rol
ss
push
xlat
pop
repz
jg
icebp
push
fs
loope
inc
idivb
out
jnp
xchg
jne
inc
or
jo
fidivrs
sbb
ljmp
sub
dec
xor
adc
add
out
pop
pop
sbb
jle
repz
push
mov
test
adc
in
cwtl
sahf
fwait
sahf
adc
cli
sub
adc
int
xor
jbe
push
pop
push
adc
sarl
push
lahf
jp
cs
out
push
fiadds
or
xchg
cmp
sbb
mov
dec
cmp
iret
xchg
rcrb
sub
inc
sub
xchg
xchg
je
fstpt
stos
sbb
es
sahf
and
fcom
inc
dec
mov
mov
pushf
ret
xchg
fidivrs
popf
int
jmp
inc
sbb
std
cmp
mov
xchg
imul
loope
ret
dec
movsb
mov
jge
dec
dec
shll
lock
and
test
xor
pusha
xor
js
and
or
ljmp
mov
jmp
add
xor
sub
jno
add
daa
cmp
xor
jp
dec
pop
ss
jg
inc
push
sub
negb
lahf
pop
xorb
inc
mov
daa
dec
inc
inc
movsb
loop
faddl
dec
dec
pop
jmp
inc
mov
call
cmp
insl
cmc
jge
test
loop
sarl
lcall
push
cli
sbb
mov
rorb
cmpsl
adc
add
push
and
jns
rcll
and
adcb
inc
xchg
lea
mov
lods
mov
lret
xor
jbe
xchg
jne
mov
shrb
into
in
or
cwtl
loopne
xor
inc
or
push
leave
xchg
and
inc
lret
enter
jbe
jae
fidivrs
sbb
adc
out
stc
shrl
inc
push
push
testb
mov
pop
inc
lahf
into
aad
clc
inc
mov
int3
fdivl
es
dec
push
or
and
insb
les
push
and
insb
out
divps
push
lds
ret
or
xchg
lret
in
ret
mov
xchg
mov
xchg
and
push
std
xchg
jb
sbb
into
stos
xchg
jno
jmp
lds
xchg
filds
mov
shl
ret
cld
hlt
cmp
out
mov
mov
dec
lods
cmp
mov
sbb
or
mov
adc
or
fidivs
cwtl
call
push
shrl
inc
ljmp
dec
fstps
pusha
rep
je
or
out
jg
mov
aad
jnp
aas
das
lret
jb
out
push
or
pop
cmp
call
inc
cmp
nop
jno
insb
cmp
sbbb
sbb
popf
insb
iret
inc
outsb
push
xlat
lea
mov
dec
sbb
insl
jns
mov
push
pop
call
cmp
mov
jle
insb
xor
push
push
sti
xchg
xchg
roll
dec
jg
pop
loope
call
jl
add
or
xbegin
test
inc
mov
scas
pop
dec
inc
shlb
in
lods
pop
jae
xchg
sub
push
pop
and
jge
push
xchg
js
mov
cmp
adc
sub
enter
cmp
lahf
jecxz
mov
xchg
dec
je
push
mov
and
repnz
mov
push
jae
ret
decl
inc
scas
rolb
lods
cmpsl
roll
pop
scas
sbb
push
popf
out
dec
lret
sub
sub
sbb
or
lods
orl
xchg
inc
fbld
cwtl
jne
sbb
mov
clc
or
sbb
inc
scas
pop
aam
mov
outsl
jge
mov
adc
dec
mov
pushf
imul
sbb
jg
rclb
cwtl
mov
dec
push
repz
or
pop
into
arpl
jp
xor
xor
into
push
rclb
dec
icebp
fwait
xchg
add
jae
mov
mov
lods
subb
jae
hlt
add
or
dec
or
push
push
push
sbbl
inc
jg
sbb
xorl
stos
mov
adc
loope
popa
pop
push
xor
std
mov
lcall
out
ja
cmpsl
lret
pushf
mov
xor
xor
push
out
repnz
mov
fcmovu
pop
pop
mov
add
scas
sub
sbb
or
inc
push
clc
sbbl
xor
ja
and
jl
sbb
enter
imul
ds
ds
sbb
loop
dec
pop
fwait
add
scas
xchg
mov
dec
loope
jp
pop
inc
lock
adc
fists
dec
mov
out
in
xor
ds
mov
movsl
jmp
mov
shlb
dec
xchg
jge
or
ds
cmpsl
repnz
lcall
cmp
push
fcomps
sti
xor
and
push
xor
jg
aas
shrb
addb
and
mov
cmpl
xor
push
and
adc
fisubrs
stc
or
sub
inc
dec
std
inc
jle
mov
lds
es
loop
or
call
cwtl
inc
jne
pause
mov
movsb
jmp
sub
jl
mov
ds
jb
fbld
push
movsl
jg
cmpsl
jae
push
xlat
xchg
sti
fsubs
cmp
fwait
xor
xchg
pop
stos
mov
mov
cmp
cltd
mov
mov
jo
sbb
add
rolb
jl
pminub
cmp
insl
push
out
and
sub
xor
repnz
cld
jl
ja
or
mov
cli
cmp
adc
push
xor
popf
inc
cmp
push
lcall
icebp
add
out
push
sbb
adc
aad
aaa
pop
push
jb
xchg
insb
pop
cld
cmpsb
lods
xor
add
sub
push
lea
into
mov
dec
imull
cmpsl
mov
pusha
adc
jnp
xor
xchg
out
cmpsl
inc
arpl
insb
dec
sub
lahf
ret
in
dec
stos
sub
sbb
cmp
pop
shrb
scas
lock
scas
push
lds
ret
push
in
cwtl
call
or
push
mov
ja
hlt
mov
movsb
sbbb
mov
sbb
out
ss
xor
int
push
hlt
jnp
arpl
mov
pop
shrl
add
iret
xor
inc
out
mov
ret
xor
adc
addr16
xchg
inc
repz
fisubl
xor
mov
mov
call
js
movsl
stc
or
imul
jnp
mov
dec
test
cld
int3
in
push
and
scas
insb
fimuls
pushf
psubq
pop
shr
clc
sbb
inc
inc
jno
jp
jo
push
cmc
rclb
xor
mov
push
sub
add
imul
leave
jnp
push
outsb
or
inc
les
lea
xchg
out
jo
inc
int
orps
pop
je
xor
mov
movsb
lea
arpl
jnp
aas
aaa
add
lcall
rol
aaa
mov
pusha
fdivrl
out
xchg
mov
push
push
dec
ficoml
jecxz
lcall
sub
cld
shlb
int3
mov
jae
cmp
inc
fdivs
cmc
sbb
mov
sbb
xchg
and
shlb
sbb
fistpl
push
aaa
mov
icebp
add
cld
adc
pop
lds
inc
bound
mov
xchg
mov
dec
push
jne
cmp
ja
popf
movsb
leave
dec
mov
imul
fnstcw
sbb
popl
movsl
add
stc
mov
cmp
loop
add
cmp
popf
fisubrl
sti
add
pop
movsl
pop
aad
xor
negl
pop
mov
cmpsl
ja
adc
xchg
push
xchg
pop
xchg
dec
pop
fdivrl
out
lods
or
inc
pop
jle
add
aas
xacquire
jge
mov
sahf
pop
inc
sbb
loop
inc
mov
dec
and
xchg
or
mov
ret
scas
add
cmp
mov
fs
cmp
adc
out
hlt
mov
and
and
enter
dec
add
xchg
icebp
pop
sub
cwtl
inc
fstl
pop
push
aad
out
cld
insl
mov
rcll
mov
pop
xchg
loope
in
imul
rolb
lods
jne
inc
or
mov
lea
lret
test
push
cmp
insl
mov
out
jg
loopne
and
insl
cmpsb
test
dec
iret
xchg
cmp
fstpl
mov
jge
test
mov
aaa
pusha
cmpsl
add
lahf
sbb
mov
mov
xlat
mov
ret
push
out
push
js
push
xor
loop
pushf
lcall
sub
xor
in
jecxz
movsb
shlb
loopne
lock
jnp
push
cmp
cwtl
cli
icebp
pop
cmp
adc
out
fcoms
xchg
pop
shrb
sub
nop
mov
lods
xchg
pop
cmpsl
jae
in
push
mov
dec
ret
dec
stos
push
xor
sub
cmp
fwait
xor
lret
es
adc
stos
sub
adc
push
das
mov
push
push
mov
aam
add
push
pop
sub
xchg
dec
jle
scas
xchg
dec
sahf
sub
xor
ret
roll
dec
iret
pop
mov
xor
movups
push
sub
mov
xchg
pop
add
fstps
movl
scas
add
movsl
mov
dec
subb
dec
les
cmpl
mov
les
mov
or
pushl
addl
push
mov
sti
inc
inc
push
or
loop
adc
icebp
incb
les
push
test
outsl
push
test
pop
gs
jecxz
sub
mov
jg
and
sbb
or
dec
jmp
test
jle
sub
push
loope
xchg
dec
inc
lret
jno
jae
sbbb
jge
sar
inc
jecxz
xchg
ret
mov
add
in
outsl
fldenv
mov
adc
mov
jnp
cmp
inc
inc
ret
sbb
insl
xchg
sbb
cltd
sbb
add
inc
out
push
xor
xchg
xchg
push
ja
icebp
adc
xor
jbe
lret
mov
dec
fsubrp
pop
cs
jne
jmp
sub
push
ficoms
arpl
enter
fnstsw
lahf
aaa
xchg
loopne
in
push
jle
cmc
js
dec
mov
out
negb
out
popa
jno
sub
xchg
jecxz
icebp
sub
inc
jmp
lods
jae
fwait
adc
adcl
sbb
add
sarb
adc
ss
in
je
mov
push
popf
mov
cmp
push
push
adc
push
dec
clc
mov
push
jp
jno
sub
add
loope
ret
mov
test
inc
fcmovne
sub
popf
pop
push
jbe
dec
mov
icebp
in
rcl
xor
sarb
insl
jne
mov
mov
or
mov
sub
mov
inc
in
adc
jp
pop
mov
aad
lahf
sub
inc
add
dec
gs
xchg
in
imul
push
pop
jo
in
bound
add
add
dec
out
dec
mov
fidivrl
cmp
sahf
xchg
jne
sub
pop
lret
ljmp
shl
adcb
cmp
into
mov
mov
sahf
pop
fbld
int3
sub
mov
adc
xor
adc
ret
fs
mov
xchg
mov
aad
loope
fabs
xchg
cmpsb
inc
sub
jle
xlat
cli
fnstsw
add
fldcw
lea
in
stos
jge
popa
mov
sub
mov
addl
and
daa
fiaddl
nop
adcb
test
aas
cmp
xor
or
nop
add
add
fs
dec
push
push
adcl
out
test
imul
popa
test
jp
or
dec
cwtl
jge
xchg
dec
push
xor
adc
fnsave
popf
ss
les
cmc
mov
out
or
mov
mov
scas
sbb
daa
xor
shlb
int
test
mov
xor
add
cmp
fstl
xchg
pop
imulb
mov
jmp
stos
mov
test
adc
bsr
jecxz
cmpsb
inc
or
call
cwtl
dec
jns
loop
cmpsl
arpl
push
jns
scas
loopne
mov
push
mov
mov
push
xor
mov
sbb
mov
push
in
add
add
jmp
out
scas
divl
xor
pop
loopne
aas
push
data16
cmpsb
stos
call
sbb
fnstcw
push
and
cmp
fninit
dec
pop
pushf
sbb
mov
subl
sub
out
fistpl
adc
xor
jecxz
or
notl
sub
dec
std
or
and
sub
lock
push
sbbl
or
imul
xor
in
in
push
dec
shll
bound
mov
or
mov
test
loop
rcrl
movsl
xchg
loopne
sbb
sbb
pop
cwtl
repnz
mov
ret
push
dec
mov
or
out
das
xchg
lock
add
xlat
hlt
and
inc
in
les
les
push
lds
out
mov
pop
out
out
sub
out
lahf
ss
fwait
or
ficoms
mov
mov
shll
cmpsb
dec
dec
daa
jl
mov
cli
inc
jecxz
cmc
jecxz
test
jmp
mov
sbb
sub
add
and
mov
sub
loope
sbb
sti
fsubrl
mov
clc
pop
sbb
orl
push
or
xor
cwtl
cmp
mov
stos
in
mov
dec
sbb
sbb
or
mov
insl
stos
mov
insb
nop
aaa
jl
lea
aas
shrl
mov
add
adc
arpl
iret
pushf
cmp
or
mov
jmp
push
mov
imul
xchg
mov
clc
sti
ds
mov
fmul
test
test
sahf
jno
xor
or
fwait
mov
push
push
adc
adc
sbb
push
movsb
xchg
imul
mov
sti
je
xchg
lret
je
stos
sbb
adc
inc
ss
scas
data16
cmpsb
xor
movsl
mov
mov
leave
std
pop
das
pop
out
mov
and
or
insl
push
outsb
cmc
push
inc
mov
test
ja
and
fidivs
cwtl
pop
icebp
or
inc
push
repz
dec
or
push
fiadds
rol
add
xchg
push
pop
test
in
fimull
jle
sti
ss
repz
xor
dec
addr16
adc
xchg
adc
sub
stos
sub
sub
pushf
add
test
sub
mov
outsb
adc
popl
sub
push
jle
mov
inc
xchg
cmpl
fdivl
popf
jle
jns
inc
xchg
shlb
cmpsb
test
mov
bound
mov
popf
jb
lods
out
imul
jne
push
fsts
pop
out
sub
mov
int3
movsl
les
jp
insb
jno
mov
cmpl
lock
mov
xor
mov
sub
hlt
sbb
out
daa
sbb
push
popf
in
lret
add
dec
xchg
ja
ljmp
sub
aas
sbb
mov
add
shlb
push
outsb
mov
ss
adc
dec
dec
pushf
adc
mov
imul
fcoml
xor
lock
xchg
roll
ret
add
mov
icebp
jb
jns
add
cmp
imul
lret
push
outsb
negl
aad
lea
lods
sub
dec
cmpl
mov
cmpsl
adc
sub
fisubrl
sub
push
inc
jl
cmp
bound
xlat
mov
ja
dec
push
inc
notb
lods
out
scas
or
fistps
mov
add
aaa
ljmp
sub
jno,pt
xor
and
adc
ret
jg
jb
ljmp
int
es
aad
mov
fstpl
ror
mov
push
pop
rclb
imul
jns
sarl
and
or
pop
sub
mov
ds
pop
add
sbb
cmp
pop
xchg
dec
fbstp
xor
lahf
sbb
sti
test
mov
fbld
cwtl
push
xchg
mov
in
iret
hlt
mov
add
rorb
adc
add
addr16
int3
xlat
sbb
jp
jne
jo
lcall
pop
push
xor
or
lds
lock
orb
inc
je
pop
mov
cmp
xchg
xchg
add
xchg
jae
adc
pop
jns
inc
jmp
arpl
faddl
std
loop
rcl
stos
sahf
mov
fs
jnp
xchg
and
sti
frstor
xchg
jge
cmpl
lods
fcmovbe
xchg
orb
pop
xlat
sub
add
dec
sub
test
ss
les
jo
xchg
fmuls
bound
std
adc
add
loope
pop
ja
sbbb
outsl
jae
popa
mov
push
jge
jle
pop
ds
cmpsl
mov
mov
or
jmp
push
mov
mov
ret
in
mov
cmp
test
test
inc
mov
add
insl
adc
popa
and
xchg
sub
dec
push
sub
stc
out
arpl
mov
fs
xor
testl
cmp
lret
mov
push
mov
dec
mov
mov
fsubl
jbe
mov
sub
jge
out
fmull
ljmp
scas
xchg
inc
inc
jecxz
push
popf
stos
inc
inc
into
enter
xor
dec
xchg
cwtl
scas
test
fcmovnu
fsubrl
sub
xchg
imul
inc
or
xchg
or
inc
ja
mov
inc
sub
or
loop
push
mov
mov
cmp
fcoms
daa
aas
syscall
mov
pop
and
jge
inc
pop
adc
icebp
imul
add
sbbl
ja
out
jle
stc
push
inc
push
sbb
jns
int
cmp
and
xchg
jbe
je
int
arpl
add
mov
dec
stos
push
in
push
out
xchg
pop
dec
lahf
push
hlt
lret
jnp
sar
xor
outsl
inc
mov
mov
xchg
sbb
aas
pop
ljmp
nop
cmp
inc
aad
data16
out
stc
aaa
pop
jbe
in
dec
inc
jae
mov
or
arpl
jno
cltd
add
movsl
xor
xlat
mov
pop
lds
iret
cmp
das
outsb
sahf
repz
les
or
lahf
fildll
xchg
push
jno
xchg
pop
test
mov
sbb
test
sbb
jbe
dec
mov
aam
and
sbb
mov
jge
outsl
sbb
jmp
dec
xor
out
mov
cmp
sub
fwait
aam
lods
outsb
mov
adc
jge
mov
mov
mov
rcll
or
mov
sbb
jmp
outsb
jle
sbb
fdiv
push
imul
in
xchg
mov
jnp
xchg
fdivrs
in
fisttpl
mov
out
jnp
push
push
jl
jo
fmull
xchg
in
pusha
pop
adc
adc
mov
jl
out
scas
dec
aas
pop
cli
lret
dec
xor
test
aas
loope
sub
incb
fildl
cmp
and
inc
popa
out
out
addr16
or
xlat
add
jp
scas
outsl
push
or
mov
int
xchg
mov
xchg
ret
sub
mov
sarl
cmp
jno
xchg
daa
jae
jl
cmp
mov
loope
cvtps2pi
outsb
cmp
push
push
pop
mov
mov
test
xchg
dec
or
dec
push
loope
inc
stc
popa
dec
das
mov
andb
jge
lock
push
mov
clc
in
push
mov
adc
or
push
adc
mov
call
jbe
sub
adc
cltd
mov
rcrl
and
int3
mov
add
jo
dec
rcrl
popa
inc
sti
dec
add
jo
dec
inc
add
or
jae
cltd
loop
inc
xchg
inc
clc
pop
outsl
lds
xor
push
test
pop
std
fstl
int3
and
addr16
movsb
lea
daa
test
and
cmpsl
push
sbb
push
out
add
fcomip
fcoml
lret
leave
cmc
clc
mov
xchg
mov
sub
dec
or
and
out
shr
pop
repz
test
dec
sarb
mov
enter
xor
cmpl
aas
dec
out
sub
xchg
es
jno
stos
dec
xchg
add
gs
sbb
fisubrl
in
js
dec
pop
xor
adc
inc
and
lcall
inc
cld
add
mov
pop
or
jl
fwait
mov
pop
push
jg
adc
mov
push
xchg
orb
int3
pop
in
lcall
dec
popa
int3
or
sbb
add
mov
inc
shll
fcompl
jge
dec
sub
lods
mov
test
mov
call
inc
mov
xchg
insb
mov
repnz
mov
aam
mov
data16
mov
xor
ror
dec
shr
aaa
fs
mov
andl
xchg
loopne
jae
lds
cmp
int3
ror
push
loope
adc
mov
and
adc
or
pop
aaa
scas
pop
stos
lods
mov
sbb
lcall
lock
jl
dec
sbb
das
pop
mov
jo
out
call
int3
test
mov
cs
mov
nop
scas
mov
sbbl
inc
push
stc
ds
sub
in
push
cvtps2pi
out
add
adc
imul
daa
mov
insl
push
dec
out
or
dec
push
enter
stc
addr16
shll
or
sub
mov
mov
imul
fs
nop
hlt
push
xor
xor
sbb
or
dec
mov
xor
int
xchg
mov
xor
ja
adc
adc
pushf
pop
ja
dec
and
mov
out
xor
push
into
push
xor
dec
xchg
jg
push
ds
out
mov
std
pop
test
icebp
addb
xor
pop
stc
pop
shr
fldcw
jne
dec
test
mov
pop
push
imul
les
push
push
ds
jno
add
mov
add
repnz
ja
in
add
stc
adc
arpl
call
mov
dec
sub
xchg
xor
cmp
ljmp
lods
ljmp
cmp
mov
cmc
nop
inc
or
add
ret
add
xor
shl
cmp
mov
push
mov
or
imul
aad
ret
mov
and
lds
lods
xor
add
shll
add
dec
xchg
push
xor
sbb
rcl
bound
push
xchg
xchg
mov
pop
or
push
adc
sbb
ret
xchg
enter
jno
dec
adc
out
repnz
repz
add
dec
jns
outsl
cli
rorl
mov
popf
loope
sahf
call
push
arpl
cli
pop
xor
lds
bound
inc
dec
es
cmp
lret
in
test
xchg
jmp
rcll
scas
mov
xchg
pop
cltd
daa
cmpsb
xchg
movl
addr16
xor
ret
test
js
dec
adc
cmp
add
popl
mov
sub
cmp
lock
lods
sbb
ficomps
enter
rcr
iret
dec
pusha
ljmp
pop
mov
sahf
mov
cmpsb
xchg
test
jns
xchg
std
add
lock
data16
mov
lret
cltd
mov
mov
inc
jb
popf
mov
mov
push
add
scas
push
and
pop
push
mov
mov
jne
inc
je
fwait
shl
mov
cmp
mov
cmp
xor
jo
mov
fwait
mov
js
mov
addb
dec
aaa
gs
jle
sub
test
addr16
repz
mov
mov
dec
lret
repnz
scas
rcrb
hlt
xchg
mov
mov
xchg
mov
push
jnp
cli
push
sahf
rol
cmp
jg
pop
push
mov
leave
xorb
xchg
in
or
push
cmp
imul
lock
sti
movsb
fwait
js
dec
cmp
xchg
aam
add
insl
ret
sahf
cmpsb
lods
cmp
daa
fnstcw
xchg
sbb
push
in
pop
aaa
cmp
inc
cli
push
mov
mov
xor
ret
or
ja
sub
call
cld
sbb
les
cmp
push
cmp
les
sar
fcomp
loopne
insl
xchg
mov
xchg
jecxz
cwtl
fs
shll
insb
sub
add
ds
mov
adc
pop
aaa
pop
movups
out
daa
cwtl
inc
pop
mov
jns
jl
pop
pop
iret
in
add
inc
push
call
cmp
pop
mov
in
sub
add
dec
mov
bound
jle
add
and
jl
icebp
in
rclb
xor
loop
aam
inc
adc
call
aaa
dec
cmp
out
sarl
inc
rolb
jb
inc
mov
rcr
push
and
imul
ja
and
or
cmp
and
cmc
inc
movsl
xchg
iret
repz
loope
or
sbb
add
imul
movsl
into
divl
mov
pop
clc
push
shlb
faddl
jge
inc
pop
mov
lods
jp
jb
add
fwait
imul
sbb
repz
repz
rcl
leave
hlt
pop
xor
clc
xor
dec
movsb
cmp
dec
sahf
aad
aad
out
inc
sbb
inc
pop
push
mov
adc
scas
or
and
pop
inc
es
in
pop
mov
mov
ficoml
xchg
das
dec
lods
out
je
xor
cmpsb
xor
repz
inc
jmp
jl
repz
push
roll
jae
in
push
movsl
andw
mov
cmpsb
mov
or
testl
cmp
and
pop
push
jmp
sti
jp
dec
pushf
inc
dec
cli
div
adc
jge,pn
imul
sahf
daa
out
inc
std
arpl
lds
cmpsb
por
push
or
insl
jmp
push
clc
sub
rcrl
cltd
jae
or
in
ret
mov
add
popf
adc
cmp
sbb
arpl
pop
fimull
mov
sbb
insl
jl
dec
pop
jmp
stos
aad
ja
mov
mov
dec
int3
mov
push
repnz
fwait
jp
pop
mov
or
dec
insl
idivb
insb
mov
mov
pop
mov
in
push
push
mov
inc
push
adc
sbb
cmp
in
mov
shlb
adc
xor
lcall
mov
jp
and
hlt
aam
xlat
in
mov
cltd
jo
iret
mov
push
xchg
push
mov
mov
test
scas
sub
cltd
dec
push
mov
ja
mov
xchg
mov
pop
movsb
mov
insb
in
cmp
mov
lahf
das
mov
jmp
test
mov
adc
lods
xchg
loopne
mov
mov
sbbb
sub
es
hlt
loopne
lcall
rol
sbb
lea
enter
hlt
dec
test
insb
or
push
push
mov
hlt
push
mov
add
int
push
jnp
add
cmp
aas
push
inc
jl
sbb
hlt
aam
xlat
ds
imul
stos
jnp
mov
xchg
jne
loop
xor
fnstcw
mov
sbb
xchg
mov
and
fmul
aam
mov
cli
pop
icebp
or
pusha
in
outsb
mov
ret
imul
aas
xchg
test
jb
jp
cmpsl
pop
test
xor
sti
pop
cld
clc
rep
shl
popf
sub
pop
sahf
push
and
sbb
jp
inc
cwtl
inc
aad
aaa
out
dec
into
push
fucom
adc
int3
out
cmp
mov
mov
stc
sub
cld
inc
adc
imul
mov
mov
pushf
mov
inc
mov
aaa
dec
movsb
xor
push
fdivrl
sub
pop
push
cmpsl
pop
add
ljmp
cs
cmp
jne
and
lcall
sub
push
fbld
sbb
call
ds
push
add
adc
jg
fnstenv
inc
sahf
mov
out
adc
cmp
rcrl
xchg
jnp
jmp
out
arpl
inc
testl
gs
mov
xchg
shl
mov
inc
lock
push
mov
pop
aam
pushf
pop
inc
mov
lahf
pop
fnstenv
adc
xor
xchg
cmpsb
rcll
test
shl
les
xlat
sub
fldl
cmp
psllw
mov
pop
not
xorb
std
dec
mov
push
and
nop
data16
mov
cmpsb
jp
and
jo
into
adc
xor
mov
test
add
enter
dec
idivb
dec
cmpsb
mov
les
mov
negl
lock
push
aaa
mov
pop
scas
mov
cmp
fwait
xor
mov
lods
icebp
mov
rcr
ret
filds
xchg
inc
arpl
jnp
pushf
xlat
xor
sub
xchg
sbbb
xchg
outsb
ljmp
or
and
fwait
or
inc
jl
cmp
dec
or
loop
into
add
jnp
movsl
fmuls
xchg
popa
popf
in
push
sahf
jne
sub
push
dec
cli
insb
cmp
sbb
cltd
pop
test
rol
mov
sub
mov
mov
aaa
lret
xchg
cld
cmpsb
sar
jno
es
add
mov
lahf
mov
jp
orl
ja
inc
negb
jns
dec
les
shrb
and
je
cltd
stos
cmp
hlt
cmp
pop
sub
sbb
out
negb
cmp
popl
xlat
inc
dec
sarl
sub
clc
xor
int3
fsubrs
jbe
repz
ss
vandpd
adc
shrb
repnz
xor
and
push
xchg
mov
imul
fnclex
jmp
loop
cmp
jbe
ret
repz
dec
pushf
cmp
push
sub
dec
inc
data16
ret
xor
lret
and
clc
mov
jl
jae
sub
mov
jnp
sub
sub
lds
jmp
inc
pop
out
rolb
roll
faddl
imul
or
jle
dec
xchg
test
scas
jae
dec
popa
xlat
rep
add
lcall
jg
mulb
rol
jle
in
push
test
mov
movsl
xchg
sbb
stc
je
push
out
or
cltd
push
lret
xchg
push
into
shr
movsl
insb
add
push
xchg
les
mov
jo
movsb
paddusb
xchg
fwait
jg
int3
sub
and
sub
fidivl
out
jmp
sbbl
cmp
cwtl
les
icebp
addb
xor
sahf
scas
pushf
sbb
xlat
xlat
clc
jle
mov
and
sbb
fscale
inc
sbbl
mov
scas
cmp
lret
pop
mov
add
mov
loop
outsb
pop
js
int3
jecxz
rcll
lret
stos
adcb
jle
addr16
sub
sbb
jmp
sub
pop
int
xor
out
or
xrelease
in
lods
or
inc
push
and
data16
add
xor
rcrb
sbb
rorl
xchg
mov
mov
lods
pop
xchg
push
add
push
repz
ret
mov
in
dec
or
adc
int
or
xchg
xor
add
xchg
lahf
into
xor
fbstp
jbe
xchg
cld
repnz
mov
mov
mov
scas
cmpsb
cmp
cmp
mov
xorb
mov
lods
cmpsl
in
sti
lahf
lock
int
loop
bound
ret
into
pusha
push
insl
lcall
cld
inc
lcall
mov
pop
fisubrl
jmp
xchg
adc
lret
popf
sub
push
xor
push
and
icebp
cwtl
jmp
lds
bound
insl
mov
lds
mov
mov
pop
and
inc
pop
sbb
rcr
jb
or
push
inc
xor
imul
push
das
or
imul
pop
rclb
outsl
mov
ja
das
jecxz
mov
sbb
jecxz
scas
cmpsl
pop
and
ljmp
imul
daa
mov
inc
cmpsl
dec
sub
sarb
sub
stos
mov
dec
lret
xchg
fdivl
xchg
mov
or
mov
mov
push
xchg
cmc
jle
push
mov
sbb
jno
or
scas
repz
lcall
jnp
sbbl
movsb
shlb
out
mov
dec
cli
mov
dec
mov
fiaddl
enter
xchg
push
pop
push
push
test
and
jmp
push
clc
mov
hlt
fidivrl
or
xchg
outsb
lock
jmp
mov
stos
jne
jmp
data16
fst
pusha
mov
mov
sbb
js
mov
and
bnd
inc
icebp
out
test
mov
jns
jp
nop
int3
pop
aaa
lea
mov
mov
not
or
ja
or
push
adc
jg
cmc
lods
add
loope
movsl
aam
stc
insl
scas
push
pushf
bound
lcall
ja
stos
ds
int3
xorl
mov
jb
rcrb
xchg
pop
or
push
inc
pusha
in
jnp
int3
and
jmp
test
out
call
xchg
inc
out
mov
shlb
and
xchg
or
loop
cmc
fs
scas
popf
lret
scas
push
jmp
fstpt
jp
sub
push
inc
flds
dec
or
inc
fdivr
clc
sub
rcrl
pop
xlat
ret
lret
addl
loope
cld
xchg
xchg
orb
xor
lret
inc
inc
sbb
xor
fucomp
out
fwait
pop
outsl
dec
pushf
je
es
clc
mov
xor
sub
popf
sbb
push
shlb
ljmp
adc
xor
xchg
pushf
js
dec
jle
mov
pop
and
mov
jns
scas
push
mov
repz
inc
jg
add
mov
push
and
leave
add
lret
adc
ret
shrb
xchg
sub
mov
push
or
inc
lods
daa
xor
sub
xlat
mov
aaa
dec
or
outsl
or
outsb
jmp
scas
mov
std
mov
cmp
mov
or
add
das
in
jmp
mov
push
ficomps
dec
dec
cmp
and
inc
jns
loop
je
jbe
mov
dec
or
xor
jp
cmpsb
std
or
nop
add
aam
mov
xor
xchg
pushf
lahf
mov
xor
js
cmp
or
iret
loope
push
into
jae
cltd
xchg
repnz
cmp
stc
add
jp
mov
add
xlat
mov
hlt
xchg
iret
xchg
aaa
ja,pn
mov
call
inc
mov
fcmovu
dec
or
loop
out
cwtl
ja
lods
mov
mov
adc
xor
pop
into
lahf
push
add
pop
sub
insb
outsl
mov
fs
fbld
dec
jo
xchg
mov
or
adc
adc
repnz
cmpsl
push
lods
pop
and
pop
mov
mov
lods
stos
sub
fstps
xchg
fisubrl
ret
mov
mov
push
shl
xchg
xchg
test
and
xchg
imul
xchg
in
sub
cld
fs
cmp
dec
push
mov
push
cmp
inc
or
mov
hlt
add
ljmp
cltd
outsb
dec
xor
lods
pop
cmp
pop
aam
xchg
cli
dec
outsl
xor
or
mov
ret
jle
jle
in
push
and
cmp
popa
adc
and
mov
fimuls
mov
mov
daa
and
call
mov
xor
pop
xchg
daa
std
push
push
mov
cmc
xlat
test
xchg
add
xchg
in
mov
fsubp
jns
or
jge
cmp
push
clc
int3
rclb
mov
pushf
fadds
ja
incb
out
loope
subl
push
ss
lea
stos
scas
pusha
jge
mov
mov
xchg
stc
imul
dec
push
add
scas
pop
adc
sub
mov
push
test
adc
divb
sbb
jecxz
sbb
adc
pop
lock
fldz
mull
add
in
imul
jae
scas
sub
sub
adc
dec
mov
jg
jle
mov
jmp
icebp
jle
mov
test
push
in
push
imul
add
imul
mov
mov
scas
cmp
call
or
popa
roll
hlt
repnz
pusha
mov
cmp
jne
xorb
mov
mov
stc
scas
xchg
xchg
movb
dec
dec
pop
loope
mov
pop
and
pop
dec
insb
mov
mov
push
add
xchg
test
dec
sub
jno
and
mov
mov
repnz
scas
lcall
or
lret
lcall
xor
jbe
adc
clc
xchg
adc
dec
out
pop
jmp
add
les
aad
test
sub
sub
push
pop
repz
imul
mov
jnp
or
scas
inc
xor
pop
mov
scas
push
inc
cmpsl
adc
push
add
cltd
ret
and
jmp
dec
mov
dec
shll
cwtl
scas
mov
lods
outsb
int
mov
adc
sbb
inc
es
daa
bound
and
sahf
cmp
pushf
fs
insb
adc
lret
dec
std
xor
out
mov
jg
fbstp
jmp
pusha
xlat
clc
scas
cmp
incb
in
scas
pop
test
cmc
xorl
addb
sub
imul
sub
out
and
test
inc
jmp
loop
adc
mov
xor
cmp
idivl
enter
push
adc
mov
movsb
in
pop
lret
mov
rorl
mov
lea
scas
ljmp
xchg
test
hlt
loopne
mov
or
sub
mov
std
push
scas
pop
pop
insl
in
mov
lret
rol
mov
xor
mov
push
outsl
pop
stos
mov
inc
stos
ja
nop
mov
cwtl
outsb
clc
ds
push
inc
xlat
xchg
or
add
out
cmp
fcompl
mov
xchg
rcll
mov
pop
orl
loope
mov
xchg
inc
leave
subl
fldl
popf
pop
cmp
inc
push
xor
bound
mov
sarb
xchg
orl
ret
xorb
xchg
hlt
cwtl
pop
jg
lahf
hlt
test
jmp
cltd
add
daa
insb
repnz
lret
and
pop
dec
cltd
lcall
pop
xor
cmpsl
push
mov
lods
dec
push
xchg
lret
jnp
pop
sub
orb
mov
sbb
cmp
mov
jbe
xchg
push
stc
xchg
rcl
push
icebp
jle
imul
pop
cld
or
stos
jno
shll
sub
add
xor
pop
xor
sbbb
jno
rcrb
push
dec
add
adc
add
push
pushf
fwait
sub
out
loopne
lds
flds
jbe
test
mov
inc
cli
repz
adc
aas
or
aad
hlt
je
ja
jmp
pop
jge
mov
or
loope
shrl
hlt
mov
out
xor
and
cmp
push
divb
push
iret
xchg
fists
mulb
outsb
push
cmp
push
pop
cmpl
push
jl
jp
adc
push
inc
inc
fdivs
adc
clc
xchg
mov
mov
and
sub
imul
mov
or
xchg
dec
xor
jp
and
lock
pop
pop
cmpb
push
xor
push
repnz
mov
xor
push
test
idivl
leave
fsubr
cmc
repz
aam
je
adc
pop
mov
scas
in
fwait
adc
adc
inc
fstl
cmpsb
sub
jno
rorl
sub
daa
repz
enter
fistl
cld
pop
mov
mov
inc
cs
and
jno
mov
cmc
icebp
and
addr16
and
xor
mov
xchg
sbb
stos
jle
fwait
jnp
pop
int
in
add
sub
cmp
addr16
ret
clc
fidivl
mov
mov
ret
push
sti
iret
out
dec
out
xchg
cld
lea
lret
adc
mov
loope
ret
cltd
rcr
push
xchg
mov
cld
int
or
xchg
mov
adc
testl
fwait
sbb
hlt
bound
andl
pop
dec
sbb
in
adc
dec
xchg
xor
mov
inc
jno
push
lods
test
and
cli
movsb
mov
fistpll
stos
and
inc
scas
mull
fsubl
or
dec
movsb
je
add
or
dec
xchg
xchg
push
jb
jl
lods
popl
test
mov
int
jg
cwtl
jne
in
mov
aaa
jbe
xor
and
cmp
es
fsubrl
add
add
inc
mov
xchg
xlat
push
sbb
lret
js
cmp
popa
arpl
out
pushw
cs
jle
mov
stc
cmpb
dec
inc
push
iret
mov
test
loopne
pop
fwait
loopne
push
xchg
xchg
insl
out
push
sti
push
stos
fistpll
push
cltd
push
dec
sti
cmp
loope
cwtl
imul
test
cmc
push
fadds
add
pop
cmpsl
pop
mov
loope
into
stc
xor
mov
dec
mov
fsts
dec
shll
and
sub
jg
jecxz
insb
fwait
out
rclb
pop
jae
lcall
inc
sub
pop
iret
cmpl
fidivs
out
test
mov
stos
and
inc
jg
cmp
xor
cmp
xchg
dec
cs
shrl
mov
mov
jnp
jle
xchg
subl
fcmove
cmp
cmp
xchg
repnz
jge
or
mov
add
sbb
xor
fnstenv
mov
xchg
push
js
push
push
std
or
ss
lock
vmread
push
add
sub
flds
mov
jecxz
fwait
push
sahf
xchg
jge
fldl
mov
int
jmp
int
inc
sub
mov
push
jb
mov
mov
jae
stos
add
in
xchg
aam
jle
dec
imul
out
sahf
clc
mov
aas
enter
filds
loop
loope
pop
xor
sbb
mov
ss
push
stc
div
sbb
fbld
push
icebp
jg
fcoms
sub
sub
mov
and
loope
ljmp
into
pop
addb
xchg
xchg
adc
mov
ret
inc
push
lock
ficompl
nop
add
arpl
leave
test
out
cmpsl
insl
popa
push
mov
dec
sbb
jae
dec
xor
mul
xchg
pop
mov
repnz
ret
adc
mov
int
leave
and
subb
jbe
or
sahf
stos
pop
push
fnstenv
cmpsl
jnp
mov
dec
fcoms
mov
shrl
add
gs
pop
xchg
loop
leave
pop
mov
pop
ret
arpl
inc
xchg
ss
push
inc
push
sub
mov
cli
aaa
imul
inc
loope
cmp
insb
ljmp
mov
imul
mov
or
insl
add
xorb
or
pop
sahf
lods
mov
xchg
sbb
pop
xchg
popa
dec
cs
adc
push
daa
push
stc
xchg
and
call
push
and
lock
cmp
add
and
leave
mov
in
push
popf
cmpsb
sbb
je
jp
mov
adc
pop
cmp
ret
aam
jae
movsl
jns
out
lea
fldl
test
jo
popf
add
mov
repnz
negl
pop
stc
idivl
mov
pop
cmp
sbb
sbb
je
sbb
sub
xchg
les
insb
mov
mov
fstpl
ret
outsl
lret
ljmp
mov
cmpsl
xor
sub
pop
mov
sti
mov
or
or
ficomps
add
lods
ss
out
mov
test
scas
xchg
fs
pop
xchg
movsb
sbb
sahf
mov
ret
jne
jb
jle
addr16
fsubl
fstpt
sahf
bound
add
loopne
test
pop
gs
pop
jbe
test
mov
roll
mov
add
aad
sub
mov
popa
jp
or
mov
mov
xchg
hlt
rolb
ret
jbe
dec
or
call
cmc
sbb
sub
xchg
add
fnstsw
addr16
mov
sbb
in
and
aad
pop
out
xor
in
dec
jae
sbb
or
js
popa
div
in
inc
iret
mov
popa
daa
cli
cmpsl
lods
push
cmp
sub
fdivl
jns
into
mov
lods
outsl
movsb
addr16
xchg
iret
add
andl
dec
xchg
fcomps
add
fs
scas
ja
pop
fists
xchg
cwtl
mov
push
ja,pt
dec
iret
ljmp
lahf
dec
mov
mov
jo
lock
nop
mov
out
sub
or
repz
dec
cmp
ficoml
cmc
jnp
lds
mov
jmp
xlat
pop
cli
std
nop
test
xlat
mov
arpl
mov
and
or
lock
cmp
mov
mov
jae
pop
in
movsl
xchg
movsl
sbb
pop
mov
jb
jno
mov
mov
ljmp
xchg
fs
sbb
push
sub
add
inc
sub
ljmp
jg
call
mov
xchg
lret
push
mov
jmp
ret
xchg
adc
sub
and
cmpsb
inc
mov
or
jne
xlat
aas
sub
push
pop
popa
or
ficoml
xorl
mov
or
inc
push
outsl
xchg
test
in
jae
cltd
aas
loope
push
pop
mov
cmp
pop
outsb
jp
sahf
lock
cmpsl
arpl
divb
cld
mov
mov
fs
cld
cmc
insl
jb
add
adc
inc
std
dec
sti
mov
inc
pop
sub
fnstcw
mov
inc
inc
or
lret
das
repnz
enter
xor
xchg
addl
mov
aad
mov
cli
push
testl
test
cmpsl
movb
loop
loop
pushl
aas
adc
push
push
and
das
adc
fisubl
pop
rcrl
in
aas
and
ja
cmp
mov
mov
fwait
mov
and
xor
or
lock
jne
and
stc
or
cmp
cmp
or
jne
movsb
js
stc
inc
dec
jge
dec
cmc
je
jae
fld1
mov
adc
adc
lret
mov
in
fdiv
aam
ss
in
pop
jl
sub
mov
scas
nop
ljmp
fmull
pop
add
pop
xchg
jmp
mov
jae
add
repz
or
cmp
leave
sbb
divb
out
mov
cld
rcrl
xchg
pop
rclb
hlt
negl
in
sub
divl
xor
xchg
mov
push
jb
dec
lret
xchg
jns
pop
ss
lret
sub
pop
aaa
xchg
fnstenv
ljmp
or
call
mov
and
pop
cld
into
cmc
ja
xchg
sub
mov
dec
dec
push
test
add
in
mov
std
xor
jo
jno
xor
jne
sub
testb
push
daa
adc
je
nop
xor
iret
mov
jns
lahf
jno
adc
test
cwtl
pop
shrl
pop
idivl
jg
push
push
lock
lea
mov
cmp
mov
pushl
pop
test
sbb
rolb
pop
pop
mov
aam
inc
xchg
dec
cmpsb
adc
ret
stc
fwait
stc
popf
lcall
dec
jnp
push
int
pop
loop
sahf
dec
and
cmp
addl
loop
std
adc
mov
cli
je
jne
out
in
cs
cmc
dec
inc
mov
xor
add
iret
cld
dec
scas
aad
inc
or
jmp
lret
bound
les
mov
push
adcl
add
xor
call
jg
shlb
dec
pop
ja
inc
mov
js
cmc
into
icebp
sub
jo
and
or
test
adc
dec
mov
les
add
movl
iret
cwtl
iret
push
or
movsb
add
cmpsb
jnp
mov
sbb
shl
jg
or
cs
jmp
jl
jecxz
xchg
jnp
movsb
jg
or
dec
adc
xor
mov
in
inc
xchg
cmp
repz
sub
fldcw
fadds
pop
add
lret
xor
ja
insb
lcall
push
push
mov
inc
and
or
movb
and
mov
rcll
or
in
mov
push
fcmovnbe
fsubrs
lods
jge
xchg
dec
xor
and
dec
std
sbb
popa
and
pop
mov
mul
mov
xchg
mov
dec
incb
sbb
and
aad
mov
sub
dec
ficoms
test
int3
std
cs
inc
test
popf
mov
cmpsl
jl
push
pop
je
jno
sbb
in
ss
insl
mov
inc
lds
sbb
imul
jmp
shrl
mov
addr16
push
mov
sub
roll
les
mov
cli
stos
push
inc
lcall
push
sub
add
add
les
jnp
imul
push
mov
or
pop
shrb
lahf
test
stos
push
sub
fsincos
xchg
adc
loopne
fwait
sbb
adc
xchg
cs
adc
sbb
pop
aam
div
push
jb
lods
movsb
push
aaa
xor
pop
and
mov
pushf
aaa
xorl
addb
push
cltd
outsl
push
push
xchg
dec
mov
adcl
cmp
and
hlt
add
jp
decl
jp
xor
or
cmp
adc
shlb
int3
mov
repz
jne
push
lret
jge
mov
xor
in
ja
fiaddl
push
push
sti
filds
and
sub
sti
pop
mov
sbb
popa
cmp
dec
mov
rcrl
sub
fdivs
repnz
xchg
leave
mov
xor
addr16
mov
xchg
andl
lret
cmp
inc
ret
addr16
icebp
jo
pop
cmpsl
ja
outsl
frndint
out
mov
in
insb
icebp
jb
out
iret
sbb
jbe
test
lret
pop
movsl
mov
and
call
mov
mov
es
repz
adc
repz
fnsave
jge
iret
cwtl
insb
mov
jg
xchg
addl
cmpsb
xchg
pop
push
push
mov
rcl
xor
push
rcll
dec
push
pushf
repnz
jne
cmc
and
cmp
lret
add
aaa
int
fstps
or
adc
push
jno
jbe
mov
movsl
xlat
jbe
mov
push
gs
cltd
cmp
pop
imul
pop
addb
nop
inc
mov
add
fists
ss
xchg
mov
push
pop
iret
aam
sbb
sub
xchg
push
out
loopne
xchg
adc
adc
sarl
dec
in
dec
cmp
incl
into
bound
pop
shlb
and
lahf
testl
movsl
xchg
int
rolb
mov
insb
clc
mov
push
aas
xorb
mov
stc
loopne
jg
fisttpll
mov
aam
mov
cwtl
sbb
lods
jp
imul
aaa
dec
in
rclb
mov
test
shr
ja,pt
mov
mov
leave
in
fimuls
iret
incb
mov
fs
mov
aad
and
add
popf
or
fcmovu
xor
clc
repnz
and
xchg
cli
xchg
loop
ret
loope
xchg
and
fucomp
or
test
and
push
outsb
add
inc
adc
mov
mov
and
and
inc
mov
mov
out
aad
jb
in
enter
mov
decl
lods
cmpsl
mov
xor
adc
push
rclb
enter
cld
pop
cmp
cmp
adc
into
pop
pop
or
subb
roll
mov
inc
dec
notl
push
ret
pop
jg
pop
data16
mov
sbb
and
inc
fs
dec
leave
nop
sub
push
dec
mov
iret
rclb
add
cs
mov
xchg
and
push
ret
ret
mov
fsubs
loop
sub
int3
stos
xchg
call
xchg
pop
push
in
std
push
movsl
data16
sub
sub
mov
cmp
dec
push
cli
inc
and
mov
sbb
cli
fisttps
push
sbb
cmpsl
into
jle
in
and
sbb
out
xchg
adc
adc
cmp
adc
push
dec
push
int
ret
pusha
mov
adc
pop
adc
call
es
mov
repz
notl
test
cmp
adc
xchg
jp
es
cmpsb
je
fistl
pop
or
add
sub
push
xor
sub
cmp
pop
jg
out
xor
push
push
push
push
loope
push
inc
cmp
dec
stc
sub
mulb
sbb
roll
inc
sti
xchg
scas
orl
test
inc
insl
pop
mov
pop
imul
push
cmc
dec
add
cwtl
test
and
insb
pop
push
js
rol
cs
xlat
xor
addr16
jae
mov
mov
cltd
jmp
push
dec
xchg
enter
mov
sub
fs
push
sbb
cmp
mov
cmp
lock
or
add
cmpsb
fisubs
outsb
dec
insl
imul
push
aam
jle
inc
mov
mov
daa
jbe
or
mov
ljmp
mov
lret
aam
hlt
lods
or
aaa
mov
jne
adc
aas
push
mov
and
mov
cwtl
add
add
fsubrp
outsl
or
mov
dec
mov
lahf
push
inc
movsb
mov
ret
or
pop
int
inc
sub
and
jno
lods
adc
xchg
jecxz
rcrb
stos
xor
pop
dec
lods
xor
jne
outsl
insb
test
jne
divl
mov
mov
ss
lahf
sahf
xchg
mov
loope
mov
jo
pop
sbb
xor
inc
addr16
xchg
fidivl
sbb
cmc
sbb
ja
out
xor
or
pop
inc
cmp
jge
inc
movsl
push
and
mov
inc
xchg
subl
push
sahf
fisubl
jle
or
out
stc
and
aaa
lret
mov
push
inc
ficoml
cmpsb
imul
push
pop
nop
mov
xchg
mov
addr16
fimull
popa
push
in
add
dec
push
jp
sbb
pushf
aad
shll
xchg
pusha
jae
lds
jnp
mulb
ljmp
lret
fs
xor
lds
pand
fs
push
sub
mov
pop
sbb
dec
inc
xchg
ficoml
insl
lahf
int
sbb
xor
stos
inc
xor
fsubs
pop
pop
or
pop
sbb
ss
dec
push
in
xchg
pop
xchg
sub
mov
dec
mov
or
mov
out
xchg
lahf
repz
mov
xchg
add
cmp
jmp
add
sbb
sbb
repnz
push
daa
outsb
mov
mov
test
dec
jle
jnp
inc
xor
pop
cltd
cmp
sub
or
xor
mull
popf
fwait
mov
push
adc
repnz
push
push
mov
add
inc
jmp
xchg
sub
jmp
orl
sub
aam
cmp
adc
cs
cli
out
in
leave
lods
mov
loopne
xor
push
repnz
mov
mov
xchg
nop
ja
cld
repz
mov
repz
scas
addr16
mov
cmpsb
test
jno
cs
fwait
push
jns
lret
addr16
or
sbb
pop
js
out
lds
fldl
cmp
pop
jp
sahf
sbb
sub
push
ds
sub
leave
dec
scas
xor
stos
notb
stc
cmp
leave
inc
ret
lret
and
rcrl
or
loop
rorl
cmp
shlb
dec
xchg
xor
stos
adc
sub
cmpsb
out
lock
jmp
scas
leave
add
push
in
pop
jmp
pushf
lret
subb
push
mov
ret
jl
lret
mov
mov
sbb
cmpsb
ficoml
jmp
fdivrl
fidivrl
mov
push
js
dec
mov
jne
mov
scas
inc
and
mov
ja
andb
push
adc
fwait
dec
add
push
fstp
lret
rorb
cmc
push
imul
cld
leave
mov
test
sbb
pop
repz
stos
pop
pop
jl
out
mov
jbe
xchg
sub
add
mov
pop
pushf
sbb
int3
mov
push
push
lcall
push
adc
mov
loope
idivl
arpl
xchg
sbb
mov
leave
xor
daa
call
add
stos
xchg
popf
add
sbb
xchg
adc
add
std
cmp
push
cmp
push
xor
idiv
inc
scas
outsb
push
outsb
daa
mov
dec
dec
jl
inc
or
popf
jb
add
icebp
mov
in
mov
lock
jg
ret
cmp
mov
outsb
push
sti
cmpsb
test
rolb
out
fisubs
lds
and
pop
cmp
ja
mov
sbb
add
int
ja
sarb
mov
mov
sbb
dec
lret
dec
push
xor
cmp
xchg
in
dec
stc
xchg
mov
pop
inc
push
and
xor
mov
dec
in
pop
mov
push
icebp
mov
into
jae
sbb
sub
push
gs
call
sub
jle
aad
dec
dec
cmc
pop
pushf
std
or
aas
lret
aas
jns
aas
push
sbb
cmc
ret
scas
jno
and
outsb
rclb
jb
push
adc
inc
sub
in
inc
cmp
push
xor
sti
mov
std
jbe
sbb
adc
test
enter
test
iret
inc
ret
sbb
inc
rolb
lock
jo
shl
in
into
jae
or
pop
mov
pushf
int3
lock
push
int
dec
fsubrs
sbb
xchg
xlat
addr16
xchg
xchg
mov
test
sub
andl
dec
aas
jp
test
and
pop
xor
xor
daa
pop
mov
adc
lods
or
pop
negl
adcl
mov
dec
rcrl
xchg
inc
mov
mov
inc
ss
cmc
dec
ficomps
es
cli
sub
das
inc
mov
cmp
and
jne
or
ret
gs
add
jl
mov
add
fstpl
inc
icebp
stos
xor
mov
out
sbb
push
xor
cmp
loop
leave
insb
lea
test
shll
pop
stos
push
adc
das
in
inc
leave
test
out
add
movsl
sar
add
repz
jnp
cmpsl
sarb
mov
xlat
mov
sbb
mov
mov
push
xor
sbb
stos
cli
pop
stos
push
jae
or
pop
jl,pn
ficoml
push
movsl
mov
or
dec
xchg
mov
jbe
aad
popf
dec
addr16
int
js
cmp
xchg
cmpsb
mov
cmc
nop
sti
clc
frstor
sub
add
jl
inc
mov
fbld
pop
xchg
rcll
sbb
lods
addr16
mov
loop
xchg
ficoml
push
xor
adc
mov
in
lds
pextrw
pop
inc
dec
nop
lret
jle
fldcw
arpl
stos
stc
cwtl
push
jmp
xorl
ret
in
nop
jno
subl
test
outsl
and
out
aaa
xor
add
mov
mov
dec
std
rorb
cmp
push
sub
sub
loope
es
xchg
jno
cmpsb
mov
scas
cmp
mov
lods
and
in
cmc
lods
cmp
push
xor
hlt
and
add
inc
leave
xor
lcall
shl
sbb
sbb
push
mov
inc
pop
jmp
jl
jmp
mov
insl
xor
sbb
sub
leave
pop
fcompl
mov
sbb
aam
ss
cmpsb
jmp
inc
xor
cmpsl
cmp
cld
inc
addb
or
push
and
xchg
push
cmp
movsb
pop
adc
ja
xor
mov
lds
jnp
ljmp
addl
incb
sub
incb
scas
adc
mov
and
mov
push
ret
inc
gs
or
clc
gs
cmpb
pop
sub
cmp
push
adc
mov
data16
xchg
xchg
mov
sbb
das
mov
movsb
add
mov
push
ds
aam
dec
push
xchg
popa
mov
jbe
pop
push
mov
shl
inc
enter
es
rcll
mov
lret
sbb
push
sub
pop
out
xchg
sub
inc
loop
dec
test
jnp
push
mov
popf
mov
cmp
ljmp
add
shr
dec
jb
aas
enter
xchg
std
movsb
push
clc
sub
dec
mov
xchg
add
xchg
lret
mov
mov
cmpsb
sets
pop
or
arpl
cmp
or
jnp
jnp
mov
and
dec
dec
jl
rclb
cli
imul
in
arpl
and
testl
sbb
cmp
pop
jecxz
movsl
mov
lods
rcr
or
fstl
pop
in
sub
add
or
gs
mov
repnz
icebp
cmp
sahf
popa
jb
bnd
push
ljmp
push
or
xor
and
stos
gs
add
repnz
in
mov
sti
aas
jl
sub
pop
pop
sub
xor
push
fsub
mov
sarl
jns
and
imul
jmp
inc
add
and
inc
jnp
pop
scas
xor
insl
divb
into
cltd
inc
inc
mov
inc
add
mov
mov
fs
sbb
mov
pop
mov
dec
xchg
xchg
push
sub
pop
sbb
outsl
test
add
mov
call
jne
lcall
fxch
mov
fidivl
sub
fistps
insl
fisubs
mov
jnp
clc
mov
test
fisttpll
jne
jnp
adc
inc
lock
and
sbb
jae
in
ret
pop
pop
mov
push
aad
es
inc
sahf
mov
or
jge
sar
adc
das
inc
outsb
xchg
ljmp
test
out
gs
push
and
adc
mov
and
mov
pop
mov
pop
sub
fsubr
push
jb
mov
inc
inc
fnstsw
sbb
movsb
lret
imul
stos
jl
add
and
std
xchg
mov
xor
mov
gs
repz
test
pusha
movups
nop
popf
push
and
js
pop
or
dec
xchg
jmp
cltd
mov
sub
mov
cmpsb
push
jl
loop
addr16
arpl
mov
sbb
mov
sbb
adc
dec
mov
mov
pushf
outsl
cmp
jmp
mov
cmpsb
je
dec
shlb
xor
mov
mov
scas
loop
pop
cmpsl
and
in
test
sub
call
das
jae
inc
xchg
pushf
lahf
or
mov
sbb
repz
stos
lea
add
cmp
test
scas
jo
adc
lock
jle
dec
movsb
dec
outsl
frstor
pop
xor
sub
mov
das
aaa
cmpsl
or
call
sbb
inc
xchg
test
push
pop
lret
mov
sub
push
js
lcall
and
pop
lods
rorl
add
in
adc
fsubrl
xor
lret
addb
fucomp
cmc
xor
sbb
pushf
orb
lret
aaa
les
or
mov
aam
and
mov
mov
cmovge
or
mov
fdivrl
aaa
xchg
adc
fsubs
jae
mov
mov
test
sbb
mov
inc
ds
add
mov
fnstcw
add
scas
xchg
ljmp
mov
mov
jge
in
xor
pop
lods
mov
mov
sbb
dec
cltd
sub
cmp
pop
out
int3
mov
pop
imul
push
jp
daa
pop
adc
cmp
mov
sbb
or
jno
sub
xchg
mov
push
mov
loop
xor
inc
inc
mov
cmp
xor
into
fadds
testb
mov
jne
shl
leave
leave
hlt
xor
lock
cmp
sub
push
sub
pop
xchg
or
sbb
xchg
hlt
andl
mov
jnp
dec
call
daa
jge
roll
pmulhuw
aaa
inc
out
adcl
not
mov
out
scas
mov
sbb
dec
lret
dec
fldcw
cmpsl
pop
dec
loope
lret
cmp
mov
xchg
pop
jnp
scas
adc
loopne
mov
mov
push
push
jg
cli
pop
sbb
adc
jl
insb
pop
test
fsubl
and
rep
dec
push
add
icebp
or
out
test
pop
loop
stc
cmp
leave
stc
and
xchg
and
mov
outsl
ljmp
fsubrp
push
mov
pop
adc
xor
pop
jge
xchg
push
jae
outsl
fnop
adc
push
pusha
shl
nop
lds
rorb
mov
rolb
push
mov
and
xlat
shlb
mov
mov
cmp
push
shl
pop
popa
push
xchg
call
ret
shrb
sub
cmp
aad
shrb
pop
dec
notl
cmpsb
cmp
jbe
stc
and
aad
jns
cmp
xchg
push
jmp
xchg
int3
in
and
add
cld
call
inc
aad
jne
mov
fsubrs
jno
loop
movsl
jmp
sub
mov
sub
cmp
push
mov
jno
and
sub
inc
add
sub
and
cmp
mov
inc
ror
dec
out
xchg
popa
xor
mov
sub
jl
ret
mov
dec
loop
or
jmp
jno
jp
push
sti
pop
mov
xchg
and
inc
pop
pop
cli
ficoms
xchg
xchg
xorl
cs
rorb
cmpsb
fisttps
rolb
movsb
jle
push
jnp
sub
popf
out
cs
popf
std
scas
jnp
dec
negl
push
mov
adc
add
pop
xchg
or
sub
out
pop
pop
jmp
stos
sbb
addr16
inc
fimuls
fimull
adcl
cltd
dec
fcoml
sbb
push
pusha
dec
sarb
mov
mov
sarb
xchg
pop
enter
jnp
and
data16
std
loopne
xchg
sti
fbld
mov
test
mov
inc
fistl
pushf
push
pop
clc
lret
sub
ret
cltd
insl
icebp
xchg
out
jnp
leave
inc
in
loopne
test
ss
ljmp
mov
out
sbb
mov
out
pop
cmp
gs
mov
andb
inc
stos
push
xchg
pop
cmc
adc
lods
fidivl
mov
pushf
out
ficoml
into
icebp
push
adc
inc
jns
or
loope
adc
cmp
mov
enter
js
jge
das
ficomps
cmp
stos
das
push
dec
lea
cli
lahf
adc
shl
lret
enter
movl
cmc
inc
cmc
test
xor
inc
lods
inc
inc
aas
test
lock
adc
and
mov
dec
icebp
shl
sbb
ret
fbstp
fsubrp
adc
sbbl
aaa
mov
sbb
fnstenv
add
lods
cs
mov
jmp
adc
cmc
push
loopne
push
mov
movsl
leave
add
mov
stc
cld
rolb
cwtl
out
test
leave
or
nop
lods
push
jg
mov
negb
aam
mov
push
pop
fstpl
inc
imul
pop
mov
imul
adc
xor
scas
xchg
loop
shlb
fwait
and
mov
xor
add
test
cmp
jbe
out
repz
scas
xchg
mov
frstor
add
or
sbb
iret
ds
rorl
lods
and
out
cmc
shrl
xor
mov
scas
xchg
xor
outsl
jecxz
cmpsl
cltd
push
fdivrp
xchg
and
arpl
or
dec
fwait
add
mov
mov
imul
jle
frstor
pop
push
lahf
cmp
push
test
lcall
mov
dec
sub
add
add
sub
lods
pusha
push
pusha
mov
clc
dec
sbb
xchg
out
inc
xchg
inc
xchg
rolb
adc
cltd
imul
aam
sbb
xchg
pop
aaa
mov
pop
jmp
int3
lods
js
out
cmpsl
add
push
dec
movsb
sbb
cltd
aad
mov
aam
mov
mov
sub
xor
pop
cld
out
ja
emms
popf
mov
mov
push
ret
push
jl
dec
shlb
cmc
fildl
mov
push
adc
pop
add
bound
loop
lcall
scas
xchg
ds
es
add
fadds
shll
iret
dec
mov
idivb
sbb
jne
ss
mov
rcl
mov
dec
fsub
loop
js
cmp
test
push
sbb
adc
rcrb
addr16
js
pop
notl
add
xor
mov
sbb
adc
cld
nop
loop
adc
getsec
fdivl
sub
jo
mov
cli
outsb
cmp
push
pop
jno
fs
inc
ljmp
adc
xchg
imul
jo
out
xchg
maskmovq
negl
rcll
or
aad
xchg
aas
enter
andl
cltd
push
imul
jns
lahf
push
xchg
ljmp
imul
repz
push
inc
push
mov
fisubs
in
and
add
bound
pop
dec
aas
sahf
fstps
add
fbstp
pop
or
push
adc
fiaddl
nop
rcrb
xor
lods
xor
xchg
bound
xor
mov
loop
and
push
icebp
out
xchg
add
jne
lods
cltd
jns
sbb
ds
shl
push
push
mov
repz
ss
movsb
adc
loope
int
subl
jmp
push
loopne
sub
andl
and
push
jge
jl
fs
out
adc
fistpll
jp
in
inc
popf
aaa
sub
fs
adc
clc
push
cmpsl
cli
xchg
adc
or
pop
mov
sub
lahf
mov
pop
mov
insb
daa
xchg
jno
push
pop
xchg
rcrl
push
push
mov
xchg
mov
lock
sbb
jecxz
call
lods
in
add
sbb
js
cs
ss
hlt
mov
enter
sub
loop
sbb
inc
push
and
jns
jns
repnz
xor
jae
mov
test
xor
xor
dec
test
sub
jo
out
pop
mov
add
mov
jno
in
mov
gs
xchg
sbb
mov
adc
ja
fstpt
mov
mov
std
rcpps
in
arpl
cmc
iret
test
arpl
cmpsl
repz
cmc
punpckhdq
rorb
or
cmpl
aaa
sbb
push
jg
ret
mov
aaa
lods
jg
sbb
loop
sbb
mov
sub
dec
and
fcmovnu
jg
push
lock
dec
sub
jmp
sbb
hlt
lock
jp
test
lret
fsts
std
stc
mov
ja
dec
or
mov
xchg
mov
cmp
inc
or
call
dec
sti
pop
adc
pop
rorl
ja
jb
mov
mov
ss
mov
ds
cmp
mov
out
jp
in
xchg
pop
pop
or
lret
inc
rcrb
cmpsl
inc
shl
inc
inc
movsb
jae
cmpsl
fsubrs
popa
lock
cmc
push
out
ljmp
mov
add
mov
mov
dec
inc
sub
outsl
adc
test
loopne
xor
mov
rcrl
push
xor
int3
jns
cltd
adc
dec
fbld
lods
and
cld
mov
leave
pop
jmp
dec
fwait
inc
pusha
sbb
stos
mov
fadd
pop
popa
lahf
jns
xor
mov
sub
dec
lcall
aam
pop
daa
les
cltd
iret
sbb
andb
es
xor
aad
loope
sbb
mov
aas
icebp
mov
pop
notl
clc
dec
int
xlat
adc
repz
fcompl
mov
or
scas
pop
jge
inc
fbld
inc
sahf
or
shrb
lods
xor
adc
andl
mov
dec
mov
sbb
iret
lds
pop
push
xchg
rcll
pop
mov
iret
popf
bnd
pop
xchg
ds
shll
outsb
and
xchg
movsb
out
sahf
movsb
pop
loopne
sub
sbb
xchg
cwtl
insb
dec
lock
pop
rorl
lret
das
dec
jns
sub
sbb
mov
add
xlat
stc
adc
push
scas
cwtl
mov
adc
push
aad
mov
dec
js
cmp
xlat
pop
aad
or
gs
and
data16
dec
mov
test
scas
inc
sub
ja
jnp
mov
push
test
fistl
mov
push
pop
dec
mov
mov
mov
lods
arpl
aad
out
scas
adc
mov
mov
jo
inc
aaa
aaa
psrlw
lds
sub
pop
lock
fcoml
cmp
sbb
arpl
insb
aad
cmpsb
adcb
incl
shlb
push
in
in
jge
dec
in
jbe
adc
mov
ljmp
sbb
pop
inc
icebp
scas
sub
movl
push
dec
inc
adc
cs
push
fcompl
fsubrp
arpl
cmp
outsb
scas
mov
ja
xor
lret
xchg
sti
mov
jle
loopne
push
pop
test
mov
fwait
daa
push
das
dec
inc
js
push
sbbb
insb
dec
test
test
mov
sbb
aam
and
push
dec
movsl
hlt
jnp
loope
stos
sbb
lock
push
cmp
pop
mov
test
sub
outsl
out
inc
stos
xchg
push
enter
lock
push
adc
sbb
sbb
pop
xor
adc
dec
jl
cmp
jmp
addr16
iret
out
sub
jge
and
push
mov
call
adc
inc
mov
and
loope
and
xor
mov
lahf
pop
sub
adc
pushl
pop
dec
pop
jmp
inc
orl
mov
adcl
jbe
pusha
mov
lret
in
ja
lods
aaa
pop
test
and
out
dec
jae
testl
pcmpeqd
dec
test
cmp
orl
sbb
pop
jl
out
sub
mov
mov
jne
les
lods
add
adc
push
push
jle
and
outsl
rcrb
stos
xor
jl
push
aam
push
ja
mov
dec
jne
push
inc
mov
xchg
into
hlt
lret
and
pop
in
mov
jecxz
xchg
cmpsl
sub
pop
push
fwait
pop
fmuls
sbb
sbb
mov
fsin
outsl
pusha
data16
mov
mov
jno
data16
cmpb
xchg
es
and
js
dec
dec
popa
or
loopne
cmp
rcrb
test
andb
imul
mov
bound
lret
js
fistpll
sub
push
shrb
movsl
mov
icebp
mov
ret
fsubs
stos
cmp
fs
inc
loope
xor
imul
xor
mov
xor
ret
mov
pusha
movsb
arpl
int
add
hlt
mov
jns
sbb
scas
outsl
push
xlat
mul
not
mov
jl
cli
push
push
adc
push
jmp
aaa
int
insb
hlt
push
mov
out
mov
imul
jmp
xchg
add
push
outsl
fsts
mov
test
dec
dec
inc
inc
cmpsb
outsb
fmull
rolb
jne
adc
rolb
nop
adc
mov
mov
or
fisubl
sbb
js
cmpsb
sbb
xor
cmpsl
fwait
cmp
into
mov
clc
addr16
push
enter
dec
inc
insl
mov
mov
outsl
lea
into
lcall
inc
push
mov
sbb
push
cmp
sbb
repz
scas
mov
jl
roll
icebp
stos
in
lea
pop
movsb
mov
adcl
add
cmp
js
in
out
add
and
lock
jb
pusha
push
fisttps
adcb
mov
into
lcall
or
gs
pushl
mov
xchg
loope
xchg
out
mov
arpl
mov
sub
mov
imul
pop
cltd
aas
push
icebp
jmp
lcall
lods
int3
dec
rol
aad
push
enter
inc
negb
inc
lcall
dec
mov
inc
mov
xor
mov
cmp
subb
inc
aas
mov
aam
inc
jb
mov
and
or
imul
mov
push
int3
aaa
andl
sub
sbb
aaa
test
imul
sbb
in
add
rcl
dec
add
push
xchg
dec
jmp
jmp
mov
and
out
int
cmp
gs
mov
add
daa
addl
xor
negb
movsb
or
jne
stc
xchg
arpl
sti
aas
sbb
sbb
aad
lds
repz
add
stos
cmc
dec
or
aad
popa
leave
pop
mov
jne
mov
rolb
xchg
mov
sbb
xchg
cmp
in
inc
iret
or
nop
or
fsubrl
lds
dec
jp
mov
push
int
mov
pop
pusha
sub
dec
sbb
adc
cld
mov
mov
fs
adc
push
in
push
scas
in
mov
les
data16
adc
pop
xlat
andl
pop
inc
aad
addb
sbb
int3
jno
mov
inc
js
add
push
je
dec
mov
mov
or
loop
xor
cmp
mov
and
pop
test
call
test
mov
sbb
hlt
dec
mov
xchg
shlb
es
clc
lret
sbb
jno
push
push
insl
fcoms
cmp
mov
or
cmpsl
es
add
xchg
adc
into
mov
mov
pop
dec
and
pushf
jle
cmp
subb
xchg
add
repnz
loop
std
and
sub
and
in
shrb
sbb
sub
cs
push
es
popl
popa
js
bound
outsb
add
inc
inc
jge
arpl
xchg
push
mov
call
out
int
sub
jge
mov
mov
or
int3
mov
push
inc
pushf
push
int
into
test
push
stos
jno
xor
adc
xor
cmp
hlt
xchg
popa
outsl
mov
sub
leave
xor
arpl
popf
mov
add
cmpsl
aam
jp
mov
shlb
int3
add
dec
add
shll
andw
mov
adc
mov
xchg
mov
xchg
and
mov
fwait
adc
dec
push
mov
js
pop
inc
mov
adc
or
test
inc
mov
in
and
lret
push
push
test
nop
frstor
or
or
dec
or
jle
mov
stos
scas
rorl
int
daa
lock
ja
loop
inc
fisttps
pop
xor
loopne
mov
pop
or
adc
outsb
je
js
in
movsl
adc
pushf
add
mov
jo
jo
xchg
mov
or
adc
sbb
rclb
incb
movsb
push
push
xor
pop
imul
adc
mov
enter
ret
and
xchg
xor
or
or
add
fildll
insb
mov
add
dec
enter
aas
out
aaa
fisubl
sub
sub
xor
div
cwtl
daa
sbb
adc
int
push
xor
punpckldq
mov
idivb
imul
fimull
in
repnz
sahf
cmp
in
xchg
lock
aad
xchg
je
xor
xchg
or
jb
cwtl
adc
and
add
int3
cmp
addr16
sarb
mov
loopne
imull
sahf
rclb
mov
inc
es
sub
cmpsl
pop
in
movsb
pop
push
sub
in
scas
pop
push
sub
pop
push
mov
and
loopne
cli
cli
testb
inc
cmpsb
test
sti
in
popf
lock
leave
push
orl
fwait
adc
rorb
jns
add
shl
out
push
inc
imul
inc
adc
add
jb
cs
in
jp
jnp
test
cmpsl
sbb
inc
push
mov
mov
or
fdivrl
out
ss
addb
jle
repnz
mov
cmpsl
repnz
aad
mov
in
push
ss
jns
aam
cmp
loopne
es
mov
in
outsl
adc
xor
pop
lea
jae
xchg
outsl
mov
sub
pop
test
out
cmpsl
outsl
fidivl
ljmp
adc
icebp
movsb
mov
jge
inc
mov
shll
jns
jle
lds
xor
loope
std
seto
clc
enter
or
mov
mov
jge
test
and
lret
mov
outsb
dec
xchg
mov
adc
push
sub
jp
mov
jns
xor
movsl
pop
lock
notb
mov
rorl
push
fisubs
pop
fcomps
stos
lret
jnp
and
sbb
shrb
fidivrs
pop
push
xor
jg
mov
inc
loope
jbe
xchg
sub
pop
fisttpll
loopne
aad
xlat
add
cmp
jmp
push
mov
test
cmpsb
out
jns
xchg
sahf
idivl
pop
shll
ret
out
inc
inc
decl
call
push
xchg
lods
xor
scas
jo
sub
loop
or
in
icebp
in
and
test
cltd
mov
lods
add
sahf
xorl
leave
jb
mov
insb
jmp
dec
lock
loope
cmp
xor
test
xchg
lock
bswap
mov
add
rorb
hlt
mov
stc
cld
sbb
fstpl
je
das
xchg
lcall
clc
pop
xor
pop
mov
xor
das
cmp
nop
movsb
iret
orl
in
jo
test
scas
mov
ficompl
sbb
dec
pop
mov
ss
fisttpl
ret
ret
xor
sub
inc
popa
lea
stos
test
fld
bound
cli
fwait
iret
push
addb
and
pop
loopne
adc
lcall
out
out
dec
xchg
lods
aam
iret
sub
outsl
dec
stos
test
rcll
stc
enter
ljmp
lcall
inc
sarl
adc
add
and
add
xchg
jp
sahf
cld
xor
scas
mov
push
xorl
jo
loope
inc
lahf
add
push
hlt
add
inc
or
add
inc
xor
and
lods
inc
mov
movsb
push
lds
stos
sub
xchg
cmp
xor
sub
out
xchg
jle
loop
sbb
clc
push
dec
or
cld
mov
adc
and
lahf
lods
or
jb
std
repz
pop
repz
imul
sti
and
jbe
and
inc
cmp
sub
or
adc
loope
hlt
outsb
test
cmp
adc
mov
push
xor
xor
cltd
cmp
xor
nop
outsb
pop
test
push
in
test
cmc
jp
mov
add
sub
popf
rcl
movsl
lret
xchg
jns
stc
rclb
adc
jb
push
outsb
test
andl
xor
xchg
scas
mov
out
lcall
clc
inc
out
xchg
sbb
push
push
loope
arpl
pop
sahf
cmp
sbb
andl
pop
sub
in
sub
lods
dec
mov
mov
dec
and
ja
movsl
hlt
pusha
scas
repz
mov
imul
push
adc
mov
fldcw
pop
roll
gs
nop
and
lock
sub
pusha
sub
mov
test
pop
push
test
xchg
popf
push
out
out
push
cmp
xor
mov
cmp
fucomp
flds
cmp
cmp
rol
insl
lds
addr16
pop
mov
cmpsl
mov
adc
in
iret
dec
out
ficoml
mov
or
jns
xlat
cmp
out
jp
repnz
xchg
movsl
adc
rcl
sbb
push
mov
std
in
ret
dec
sahf
popa
push
hlt
push
jns
movsl
data16
sti
push
inc
lods
dec
adc
pop
jne
std
push
ret
hlt
lods
fsubl
or
scas
test
test
rorl
arpl
mov
adc
jecxz
mov
lahf
mov
jp
roll
fdivr
sti
pop
mov
scas
outsb
add
cmp
sahf
insl
ss
data16
cltd
jp
and
push
mov
cmp
jge
dec
inc
mov
test
jns
shrl
inc
push
inc
sbb
out
imul
xorl
dec
push
gs
sub
cmp
cmpsl
push
xchg
dec
in
mov
mov
jp
lret
cmpsb
pop
or
lret
mov
repnz
ret
jge
iret
loop
test
in
push
mov
push
mov
lds
movsl
mov
inc
ret
xchg
adc
leave
sub
cmp
cs
in
cltd
je
addr16
pop
ret
pop
push
std
arpl
movsb
or
sbb
loopne
dec
and
lret
cmp
pushf
add
mov
lods
ds
xchg
testb
dec
mov
dec
xor
dec
jmp
out
out
fucom
sbb
mov
mov
dec
in
push
out
iret
in
xchg
div
xlat
and
bound
loope
sbb
mov
add
jne
repz
and
fldt
mov
adc
addr16
popf
ret
xchg
lret
movl
int
js
adc
mov
shl
dec
jg
and
movsl
jle
repz
repz
out
dec
lret
pop
add
lods
or
sub
dec
dec
les
insb
daa
out
popf
test
dec
imul
mov
loope
xchg
cltd
testl
lea
mov
mov
mov
inc
je
rolb
jnp
mov
push
aad
adc
mov
mov
test
cmpsb
dec
or
pop
or
lods
lret
mov
sub
sub
es
lsl
mov
mov
mov
icebp
jecxz
test
mov
scas
cwtl
pop
ret
jmp
or
pop
int3
js
scas
enter
call
mov
imul
xor
dec
push
test
pop
pop
addl
and
push
dec
imul
sub
sbb
fidivl
mov
stos
and
movsl
xchg
daa
pop
hlt
rcr
in
popa
jp
int3
ljmp
nop
and
xchg
cwtl
call
fwait
xchg
std
lock
rolb
fisubs
jne
cld
stos
push
leave
fstps
dec
out
jae
mov
in
je
and
test
add
or
mov
xchg
stos
outsb
jo
jbe
mov
shll
scas
and
scas
mov
loopne
push
dec
ficompl
sbb
insb
imul
xor
pop
aaa
adcl
repnz
cmp
ret
cs
cmpsl
xchg
sbb
lcall
in
out
xchg
clc
inc
lods
mov
lret
xchg
repz
enter
fidivl
test
mov
jle
inc
icebp
dec
mov
das
add
mov
fldenv
add
in
addb
xchg
lea
xchg
xor
dec
or
sub
ljmp
fsubrp
pop
and
jae
jns
jge
pop
xchg
aaa
icebp
and
rolb
xchg
add
xchg
dec
jo
insl
xor
adc
mov
adcl
aad
orb
adc
lods
dec
mov
into
and
repz
adc
paddusb
fndisi(8087
js
dec
in
loope
sub
xor
add
xor
push
cmpl
test
in
push
daa
dec
sbbl
insl
mov
ljmp
xchg
sbb
movsl
orb
mov
mov
or
xor
jmp
jmp
popa
mov
bound
dec
leave
mov
mov
out
test
sahf
sbb
fisubs
sarb
nop
mov
out
lds
or
adc
stc
pop
sbb
enter
cs
cmp
pop
xor
pop
ret
add
out
xchg
pusha
imul
push
fistpl
fdivs
xchg
xchg
out
lret
sbb
sub
fdivrl
lds
stos
xor
mov
or
cmp
testl
fs
fcoml
or
add
and
dec
cmp
in
roll
cmp
cmp
xchg
or
sub
lods
stos
jp
scas
mov
mov
std
stos
push
jno
or
jbe
ja
cmc
push
push
test
adc
mov
add
cmp
lret
push
mov
rorl
dec
in
mov
scas
adc
push
test
adc
lret
xchg
aam
xor
mov
loopne
fwait
jge
pop
push
xor
cmc
cli
adc
pusha
arpl
mov
jns
js
dec
out
push
sub
js
lcall
rcl
ja
aad
xchg
inc
adc
adc
add
out
push
add
sub
and
icebp
mov
test
loopne
xchg
and
aad
or
scas
jbe
cmp
ret
inc
sets
sahf
inc
inc
mov
and
ret
lods
mov
jbe
xor
jle
or
and
imul
sub
pusha
jecxz
adc
insl
pop
arpl
or
xchg
xor
das
into
inc
fcomip
mov
mov
jns
xchg
lods
sahf
push
pop
out
sahf
add
jecxz
adc
pop
mov
xchg
mov
aas
cmp
xchg
and
xchg
mov
insl
jl
mov
inc
inc
cmpsl
fimuls
je
dec
out
lret
jnp
and
ficoms
aad
idivl
in
out
push
and
jp
mov
sti
dec
dec
xchg
jl
pusha
and
pop
hlt
sahf
push
or
inc
or
mov
add
lcall
rorl
mov
in
ret
add
jo
push
nop
mov
imul
call
sbb
out
or
inc
jge
mov
jnp
test
in
push
add
std
xlat
cmpl
pop
mov
inc
es
nop
std
roll
push
ja
fimuls
jb
mov
inc
mov
pop
stos
sub
pusha
movsb
inc
lock
mov
xchg
inc
pop
pop
clc
mov
cs
std
loopne,pt
xor
pop
arpl
xchg
jge
es
cld
push
adc
insl
call
imul
pop
aam
fwait
sub
mov
push
jo
test
cltd
ret
jnp
mov
add
adc
mov
clc
pop
xorl
inc
rol
das
mov
jmp
mov
mov
mov
in
jge,pn
movsl
xchg
pushf
push
loope
mov
lcall
cmp
fidivs
test
cmpsl
adc
jbe
jnp
push
sbb
push
jecxz
or
mov
or
jle
enter
fmuls
sbb
or
adc
loop
sahf
sbb
pop
aam
hlt
rcll
dec
xchg
jg
lcall
pushf
iret
xor
or
add
xor
xchg
sbb
jae
mov
cwtl
xchg
and
lahf
sub
es
aad
adc
cmp
adc
cmpsl
mov
cli
mov
xchg
icebp
into
insb
xchg
lods
aaa
fisubrl
mov
fstl
sub
mov
and
sub
mov
mov
in
xlat
mov
std
mov
or
enter
lret
or
inc
fnstsw
jae
scas
test
clc
or
outsb
and
bound
cmpsl
push
adc
cwtl
push
insl
sub
cltd
pop
into
decl
pop
cmp
addr16
into
xor
push
xor
out
adc
sbb
pusha
enter
adc
fstl
inc
mov
rorb
dec
lret
loope
push
mov
dec
fldenv
jne
push
push
add
cmp
ss
adc
popa
cmpb
inc
sub
fidivrl
nop
adc
xchg
into
mov
mov
sub
test
iret
inc
adc
sub
sbb
sarl
testb
gs
inc
fsubrs
ret
cmp
sub
in
mov
add
mov
cmp
ja
mov
cmc
adc
xor
sti
into
mov
push
pop
ss
cmc
inc
pusha
rcll
aam
lret
adcl
imul
hlt
popa
imul
inc
enter
mov
pop
jmp
sub
pop
in
jl
movsl
xchg
insb
lcall
js
loop
mov
mov
out
out
cli
dec
cmp
sbb
and
shll
sbb
and
aam
push
xlat
ret
testl
cltd
sbb
insl
sbb
pusha
mov
hlt
jle
jge
mov
cmp
inc
push
movl
rol
cmp
pushf
in
push
sbb
and
cmp
push
push
xlat
iret
rorb
jnp
xor
xlat
and
jae
sbb
sub
je
inc
stc
add
adc
shll
rcll
clc
add
mov
data16
ret
bound
nop
sbb
sbb
pushf
stc
mov
mov
xchg
imul
repz
cli
adc
cmpsb
mov
cmpsb
movsb
repz
mov
call
and
clc
arpl
adc
and
sbb
add
xchg
mov
pop
adc
fwait
xchg
sbb
and
mov
mov
sbbl
cli
mov
stos
mov
sbb
test
mov
dec
mulb
jmp
pop
sub
sbb
enter
jmp
cmpsl
pop
mov
stos
lahf
xor
mov
jbe
out
mov
pusha
ret
jl
lret
pop
inc
lahf
jl
push
ret
mov
stc
adc
outsl
rclb
bound
repnz
xchg
shrb
jae
cmpsb
mov
sahf
mov
sbb
mov
int3
decb
in
js
cmp
lds
fidivrs
cld
mov
sub
jl
adc
leave
loope
jl
les
cltd
cmpsb
das
fisttps
mov
into
jae
gs
ja
mov
add
pop
inc
xchg
adc
filds
xor
jmp
ret
or
mov
sub
push
in
mov
adc
dec
daa
jmp
aam
mov
lahf
jae
mov
or
in
aad
mov
mov
and
xor
push
lret
add
pop
fwait
mov
mov
push
xchg
jo
push
aad
inc
das
inc
pop
out
enter
sbb
fisubrl
adc
lock
lret
lret
insl
iret
jno
mov
outsl
sti
mov
rorl
mov
mov
xor
lret
lcall
and
and
mov
push
insb
jnp
xor
push
push
repz
leave
adc
pop
jae
mov
sub
out
int
add
mov
pop
dec
mull
and
sub
pop
mov
and
pop
imul
dec
enter
pop
xchg
xchg
pop
xchg
xchg
push
imul
enter
cmpsl
sub
popf
jbe
cs
icebp
repz
sbb
add
adc
xor
dec
inc
mov
fistpl
out
mov
lret
ss
es
sbb
fisubs
add
inc
fdivrs
popa
inc
inc
cwtl
cmp
push
mov
loope
sbb
test
cmp
push
aam
sub
testb
adc
jns
mov
popf
fnsave
cmc
push
popa
adc
xchg
js
mov
lock
rol
scas
jnp
aam
xchg
das
push
jl
ds
dec
mov
sar
sub
fiaddl
pop
scas
clc
inc
xlat
pop
fdivl
jl
arpl
xor
fldcw
xchg
in
fisubl
push
mov
cmpsl
xor
push
xor
push
cld
nop
jl
out
into
fucompp
cmp
scas
mov
andb
in
inc
fistpl
mov
stos
repnz
xor
int
cli
jge
repnz
pop
in
fcompl
xchg
xchg
jo
inc
bound
jecxz
mov
dec
sbb
iret
inc
add
test
mov
in
pop
lret
xchg
sub
cmp
test
mov
mov
jl
pop
push
push
loope
sbb
pop
ds
sub
jge
outsl
pop
outsl
por
movsb
push
push
mov
xchg
jns
or
pusha
mov
out
jmp
mov
adc
imul
push
imul
cltd
stos
or
lcall
sarl
push
adc
js
fprem
xchg
push
subb
xchg
adc
nop
int3
js
addl
lea
inc
sti
ret
push
dec
push
mov
mov
fsubs
push
out
pop
int3
scas
mov
ljmp
fistpll
push
leave
out
lea
and
loopne
inc
cmpsl
lock
push
jno
shrb
mov
push
or
hlt
pop
or
sbb
mov
jbe
push
arpl
cmp
mov
cmp
mov
js
in
iret
test
adc
ss
xchg
xchg
cli
in
bound
dec
dec
jl
or
js
stos
data16
mov
cli
lds
mov
mov
outsl
cmp
jmp
xchg
dec
dec
andl
aas
cmp
mov
jne
or
clc
js
movsb
cwtl
sub
xor
sbb
movsb
pop
xchg
lret
cmpsb
popf
arpl
fwait
imulb
xchg
lea
jl
adc
lock
sbb
push
cmp
xor
out
loopne
lret
scas
into
mov
bound
stc
mov
icebp
test
out
and
push
add
fistpl
std
loop
cld
mov
test
in
ret
leave
not
aam
movsl
sti
jmp
in
mov
out
xchg
negl
sbb
cmp
cli
or
aaa
test
pop
dec
pop
shrd
push
sub
in
push
mov
push
ret
sub
mov
sub
fisttps
testl
sbb
dec
das
repz
sub
inc
cltd
pop
fdivrp
jae
pushf
cmpsl
mov
adc
add
xchg
fdiv
shll
decl
sbb
mov
xor
push
push
adcb
sarl
and
test
pop
mov
xor
ds
xchg
out
mov
sub
mov
lahf
push
sbb
xchg
pop
data16
adc
shr
mov
sbb
ret
stos
or
jo
inc
sbb
xor
fs
outsb
js
mov
inc
js
xchg
sbb
mov
stos
and
sub
push
and
xchg
cmp
mov
insl
xor
out
xchg
xor
pusha
mov
xchg
aas
add
adc
js
fwait
add
scas
daa
jmp
je
stc
jno
sub
xchg
jae
xor
lea
inc
mov
xchg
push
add
xchg
loope
dec
sbb
icebp
scas
add
pop
sub
rolb
cli
adc
or
jle
andb
dec
repnz
push
aad
mov
cmpsl
mov
je
sbb
in
movl
stos
xor
call
stc
inc
xor
in
pop
outsb
xor
movsb
push
dec
lret
pusha
lea
gs
jne
xor
call
in
call
push
jle
shrb
rcrl
mov
jg
subl
mov
lcall
into
pop
movsb
and
outsl
cmp
lret
jnp
mov
roll
in
cmp
js
cmp
dec
inc
inc
cmp
sub
or
ja
gs
push
jnp
and
stos
and
addr16
pop
out
loopne
mov
mov
xchg
aad
mov
outsb
pushf
sub
data16
lcall
ja
inc
hlt
mov
rcrl
and
neg
mov
adc
lock
push
push
lahf
add
bound
insl
push
mov
jae
repnz
push
std
cmp
sub
in
lret
xchg
mov
sbb
push
sbb
outsb
cmpb
ret
dec
xor
mov
mov
scas
fnsave
mov
ss
rol
stos
out
outsb
icebp
in
push
fidivrs
pushf
test
add
dec
mov
sti
imulb
pop
cmp
imul
out
ss
int
loope
es
mov
sbb
adc
jo
repz
cmp
mov
dec
push
addr16
in
xchg
mov
jno
xchg
adc
aad
lock
aam
inc
sub
imul
pop
jmp
scas
lea
push
sub
cmp
sub
jae
out
dec
dec
sbb
cld
scas
and
cs
xchg
mov
mov
dec
cmp
mov
push
imul
movsl
sbb
out
pop
ss
popf
popa
insl
mov
call
rcrl
xchg
jae
cmpsl
mov
inc
cld
sub
das
std
jp
or
push
mov
push
negb
in
repnz
test
mov
sbb
push
push
jbe
mov
push
push
lcall
pop
int
cvtpi2ps
or
inc
mov
cmc
add
cmpsb
inc
add
outsl
fwait
sbb
mov
mov
andl
arpl
out
jp
lds
ds
bound
lods
mov
adc
nop
lea
inc
out
mov
dec
test
ja
dec
xor
lahf
loope
adc
add
pop
jbe
mov
insb
jmp
imul
popf
aas
je
in
xchg
cwtl
sub
mul
inc
pop
xchg
pop
int
dec
imul
sarb
lods
jmp
mov
in
mov
inc
push
pop
mov
sub
scas
js
cmp
arpl
fidivrl
cmc
xchg
mov
ficoml
inc
mov
inc
aad
in
mov
inc
sub
cmp
enter
cmp
lds
mov
sub
pop
into
push
add
mov
xor
stos
and
add
sub
out
pop
out
jno
cltd
or
adc
sub
xchg
push
test
gs
testb
ja
popf
test
sti
loopne
adc
adc
pushf
ss
fnstsw
adc
mov
add
lahf
aam
mov
lods
lock
mov
out
out
xchg
fs
mov
sub
jb
ss
stc
aaa
clc
inc
jge
mov
loope
popa
ficoms
sub
dec
imulb
repnz
and
dec
scas
aaa
ja
sub
orb
in
les
push
sbb
faddp
cmpsb
jae
lcall
jp
fs
push
xlat
ljmp
jns
cmp
pop
rcrl
jbe,pn
pop
sub
xchg
std
push
popf
dec
testl
scas
inc
out
cmc
or
mov
lods
or
lock
into
mov
sub
add
fcomp
daa
cltd
outsb
sub
roll
xor
mov
add
sbb
loop
jns
les
add
int3
push
and
push
enter
dec
int3
adc
cmpsb
movsb
pop
push
add
insb
stos
mov
xor
pop
push
jmp
loope
inc
scas
loopne
loope
xor
dec
adc
add
adc
jecxz
aad
cmp
fidivs
out
sub
pop
icebp
dec
enter
sub
iret
loopne
xchg
xchg
ja
inc
pop
mov
mov
sahf
lods
mov
mov
cs
add
push
js
in
out
stc
add
adc
loop
pop
outsl
int3
lods
push
add
jmp
scas
xchg
adc
mov
aam
js
sbbl
lods
imull
insl
rorb
mov
lcall
addl
mov
push
int
cmp
push
add
sub
and
mov
dec
adc
imul
dec
movsl
adc
xor
mov
xor
mov
int
fistps
mov
sti
adc
notb
fcos
shl
aas
cmp
pushf
fdivl
lret
adc
xchg
push
mov
pop
mov
stos
orl
movb
ret
adc
dec
or
ja
jno
sahf
mov
cmp
imul
outsb
je
adc
or
pushf
aas
sti
mov
xor
popa
dec
jo
sar
cld
cmpsb
mov
pop
push
lds
nop
jae
sub
mov
lret
lods
test
dec
movsl
test
loop,pn
xchg
sahf
push
mov
sbb
cmp
sbb
outsb
in
xor
daa
fsubrs
out
rclb
pop
rcrb
shr
jmp
imul
and
pop
fcomip
jbe
loopne
insl
cmp
fidivl
divl
xor
lea
decl
jl
mov
push
and
jmp
lds
xchg
out
and
xchg
mov
inc
aad
fstl
dec
fadd
imul
ds
cs
int
xor
xor
imul
lock
push
mov
stos
mov
jbe
mov
popf
daa
mov
add
dec
sub
inc
push
push
pop
xor
adc
pop
leave
in
jmp
cmp
push
das
aaa
cld
arpl
jp
je
mov
cmp
pusha
stos
dec
nop
loopne
pusha
gs
xor
clc
pop
lock
xchg
int3
pop
shlb
add
rcl
or
arpl
ret
dec
scas
scas
jae
push
out
aad
pusha
ret
nop
fisttps
cwtl
fldt
and
inc
push
int
and
stos
mov
add
mov
xor
or
cmp
mov
pop
inc
cmpsl
mov
push
sub
dec
sbb
fiadds
mov
arpl
push
arpl
inc
pushf
ret
imul
fstps
sub
add
or
int
insb
pop
or
mov
xchg
mov
xchg
fsubs
jge
shlb
pop
mov
leave
outsl
call
mov
scas
test
sub
je
std
lret
jge
test
rclb
jnp
and
fwait
add
cs
push
xchg
in
in
sbbb
sub
fisubs
mov
inc
sti
or
cmp
out
dec
icebp
fsubl
mov
subb
push
pop
fcmove
rep
ja
cmp
mov
sahf
lods
xchg
push
fstps
jne
mov
fdivs
cmp
cmp
jne
or
fwait
rolb
xor
loopne
mov
dec
stos
push
jecxz
xchg
dec
xchg
xchg
pop
and
popa
sbb
out
fstpt
into
loopne
xchg
rcrb
movsl
xchg
push
cmp
mov
xor
inc
mov
stos
sub
adc
add
in
nop
inc
cmc
in
aam
leave
pop
pop
jl
ret
inc
and
and
mov
add
daa
and
cmp
fwait
inc
push
jmp
loope
sbb
lea
daa
xchg
lahf
and
cmp
mov
inc
cmp
aaa
cs
or
out
adc
adc
ds
xor
push
xchg
lods
outsb
xor
cmp
pop
push
into
ljmp
push
xchg
and
stos
mov
aaa
push
sub
mov
sbb
adc
push
repnz
arpl
rorb
pop
adc
push
mov
add
arpl
fdivs
ret
mov
cltd
mov
int3
lock
and
inc
cs
psadbw
ret
sub
out
pop
push
aas
inc
ret
xor
cmp
mov
notl
dec
inc
mov
dec
and
sbb
pop
insl
cmp
icebp
mov
inc
cmpsb
pop
or
mov
pop
ds
test
inc
adc
dec
test
lock
and
ljmp
mov
add
push
and
fldenv
inc
mov
xchg
aaa
mov
jns
mov
adc
sbb
sbb
jmp
insl
sbb
cltd
shrl
pusha
and
mov
shll
int3
ss
mov
pop
lock
arpl
or
stos
mov
icebp
bound
mull
jmp
inc
cmp
mov
xchg
pop
addr16
pop
and
test
data16
pusha
sub
sbb
mov
outsb
out
mov
js
jg
rolb
dec
lds
pop
fisttps
dec
push
fistps
lahf
mov
std
pop
shll
mov
sub
mov
addb
sub
cld
and
inc
js
inc
mov
pop
and
frstor
cmp
movsl
out
cwtl
enter
sub
pop
ja
xchg
aad
mov
stos
call
cmp
cmp
push
in
cltd
inc
jmp
add
sbb
jnp
std
mov
test
in
pop
and
int3
pop
or
fcmovb
push
and
sub
loope
test
mov
jnp
jg
lods
sub
pop
dec
lods
inc
sub
xchg
in
jge
jbe
jbe
dec
insl
out
sti
lcall
loope
outsb
mov
xor
jae
imul
xchg
or
jle
mov
lods
push
xchg
test
movsl
ficompl
and
fldcw
or
mov
int3
sub
sbb
test
pop
and
mov
aam
and
lea
and
aaa
outsb
fistps
mov
mov
jbe
xchg
cmp
incb
push
jb
pop
cmc
sar
sub
mov
push
or
lret
lahf
or
xchg
mov
jo
inc
fs
lods
aad
inc
outsl
test
in
in
sub
adc
jle
jbe
or
jnp
jg
js
and
cli
pop
jle
mov
lods
sti
push
cld
cmpsb
iret
jle
in
mov
adc
pop
cmpsl
and
pop
and
imul
jns
pop
movsb
daa
imul
xor
das
int
popa
xor
push
in
or
int3
popa
xchg
cmp
push
insb
fsubrp
cmc
dec
in
cmp
cmpsb
and
jo
movsb
shrl
int
cmp
test
mov
add
adc
or
jbe
pop
inc
cmp
cmp
mov
pushf
mov
imul
mov
ljmp
sbb
int3
out
ja
fists
mov
cmp
add
inc
fnstenv
sub
push
pop
mov
xchg
pop
dec
test
ja
mov
sbb
stc
push
popf
mov
insb
cmp
dec
push
movsl
ret
dec
mov
push
jg
push
cli
cmpsb
and
outsl
movsl
lcall
push
cmp
and
ds
mov
icebp
mov
xchg
xlat
out
lret
cld
xchg
rclb
dec
xor
mov
call
pminsw
stc
stos
aam
aaa
cmp
mov
ja
fcmovb
imul
popf
adc
rclb
fwait
shl
out
jl
or
test
nop
and
adc
push
test
push
data16
arpl
nop
fidivrs
fadds
xlat
test
js
cmp
sti
push
push
sbb
aad
inc
adc
push
pop
pop
mov
sbb
xor
and
jnp
jge
push
std
idiv
lods
add
out
adc
cltd
scas
fsubrs
repz
arpl
dec
and
dec
fsub
into
jecxz
jb
lret
push
and
sbbb
xchg
scas
stc
cs
dec
in
insb
pop
xor
sub
xor
adc
pop
hlt
test
ss
icebp
cld
xor
rorl
gs
cwtl
add
cli
addr16
cli
clc
adc
aas
adc
int3
aas
lea
push
lret
mov
sub
sbb
push
mov
leave
add
les
mov
rcll
sbb
push
testl
aas
call
dec
fdivs
and
fisubrs
test
ds
rsqrtps
jo
pop
xchg
sbb
xor
std
sub
pusha
shlb
and
inc
fcmovnu
aad
add
push
aam
dec
cmp
mov
test
xorl
add
sub
mov
mov
das
adc
mov
push
sbb
xchg
fcomps
sub
xchg
out
sub
sub
sub
adc
dec
sub
and
mov
pop
sub
push
out
sub
mov
push
mov
push
push
mov
fs
int
and
xor
in
inc
dec
push
pop
loopne
stos
lds
movsb
adc
scas
add
add
leave
loop
xor
daa
adc
mov
cmpsl
outsb
jne
push
push
jo
outsb
mov
popa
push
adc
in
addr16
xchg
les
fistps
movsb
js
and
imull
dec
aam
mov
sub
add
xor
cmp
mov
pop
mov
jns
inc
ret
loope
adc
pop
mov
or
loope
test
jo
mov
jl
mov
jo
popf
outsl
mov
xor
pop
push
or
sldt
imul
mov
sbb
jnp
jg
in
push
cmp
dec
fistps
rorb
lcall
bound
int
mov
inc
inc
aaa
sub
incb
push
push
mov
mov
lods
dec
ret
xor
mov
out
arpl
fmulp
lea
and
pop
je
insl
xor
mov
inc
js
adc
cwtl
loop
iret
rcrb
in
repnz
xchg
xchg
cmp
fisubrs
sbb
ss
stos
movsl
daa
push
insl
dec
movsl
movsb
dec
xchg
inc
or
jecxz
sbbb
in
sbb
es
cwtl
les
mov
std
cld
sbb
nop
or
movsb
add
out
ficoml
insl
cs
fwait
adc
mov
xor
notl
mov
xchg
and
test
jp
mov
mov
pop
shrl
scas
insb
sti
repnz
fisubs
faddl
ret
push
pop
stc
sarb
out
jle
stc
fsubr
push
repz
mov
out
clc
cltd
hlt
scas
ficoms
mov
and
and
or
fidivl
out
fiadds
popf
test
out
outsl
push
ret
jle
pop
idivb
pop
push
inc
cmc
mov
mov
xlat
mov
leave
stos
push
pop
dec
inc
pop
cwtl
or
xchg
fsub
pop
jb
lds
push
lret
cltd
mov
in
in
and
ljmp
xlat
shl
jmp
lods
jae
jp
arpl
push
jecxz
xlat
sub
push
add
int
push
nop
das
lcall
in
fistpll
xlat
stos
sahf
cmp
pop
repnz
ret
fisttpll
fdiv
jl
shrb
or
add
test
push
sahf
outsb
push
ret
stos
loope
xor
scas
aam
mov
pop
loopne
into
imul
push
pop
leave
push
inc
add
xor
cmpsb
pop
pop
ret
jae
loopne
pop
shll
popf
mov
jns
andl
sub
adc
add
in
lods
lret
test
loop
add
mov
xchg
push
push
call
lods
jge
sub
jecxz
out
pop
add
in
das
es
lock
cwtl
xchg
dec
cld
mov
push
mov
jecxz
and
cld
cwtl
lret
push
lret
push
or
test
test
xchg
outsl
in
mov
jb
mov
insb
in
lods
call
sbb
out
cmpb
inc
stos
fiaddl
ret
outsb
addb
ds
orl
jecxz
push
dec
jmp
enter
imul
je
jbe
adc
fisubl
cmp
mov
ret
or
inc
jae
mov
jle
mov
loop
inc
mov
push
imul
jae
pop
call
mov
mov
in
push
jnp
sbb
movsl
xchg
in
mov
pop
mov
fildl
test
push
jne
ret
ss
xchg
iret
mov
gs
and
adc
stos
mov
outsb
or
scas
inc
jl
popa
pop
xchg
aad
iret
xchg
mov
scas
lds
ret
pop
data16
jmp
add
inc
ret
or
jle
and
xchg
push
xchg
fwait
movsb
push
popa
enter
jmp
ds
test
cmp
rcrb
dec
iret
sbb
jne
xor
fsubr
out
add
std
cmpsb
orb
aam
popa
xchg
mov
ret
div
pop
aad
pop
hlt
jmp
sub
inc
data16
repnz
les
push
das
cmpsb
pop
imul
popa
inc
movsl
or
cmp
testl
es
xchg
push
les
movsl
rorb
pop
sbb
mov
das
aam
adc
repz
lret
inc
test
mov
pushf
ficoml
ret
shll
out
dec
mov
out
loope
adc
popf
mov
dec
or
fsts
sbb
out
sub
cltd
pop
lahf
mov
and
mov
mov
in
dec
cs
xchg
test
inc
mov
ror
pop
out
xor
add
bound
jo
lret
test
mov
pop
mov
xor
jns
xchg
xor
inc
pop
sub
rcl
and
jg
aam
std
aam
icebp
cld
test
in
inc
lcall
jno
cvttps2pi
mov
test
sbb
jne
xchg
xchg
enter
mov
jo
xor
pop
outsl
sub
add
in
jp
and
into
mull
lock
xchg
test
sbb
out
hlt
aaa
out
xchg
inc
sub
lea
shll
inc
cmp
mov
sbb
mov
or
xor
jnp
mov
and
mov
push
or
and
mov
dec
push
jno
ffreep
jnp
mov
mov
repnz
jmp
repnz
shlb
pcmpeqb
adc
rorl
mov
out
scas
mov
ljmp
dec
nop
idivb
push
into
or
dec
xchg
movsb
clc
andl
dec
mov
dec
jg
aaa
pop
sub
dec
jbe
or
lahf
xchg
pop
and
inc
mov
mov
ret
and
cmp
mov
push
aaa
mov
inc
or
test
je
push
test
pop
js
mov
cmpsl
pop
and
xorb
push
hlt
push
jnp
mov
call
xor
aad
aam
fmull
arpl
push
cld
dec
sbb
leave
cltd
enter
xor
cs
lods
dec
dec
push
mov
adc
inc
push
aas
subb
push
cmc
xchg
inc
adc
pop
pusha
xor
cmp
imul
psubsb
shlb
push
into
sbbb
call
vmovaps
loopne
mov
mov
enter
addb
xchg
and
rorb
gs
loopne
test
mov
sub
adc
popf
fidivs
sub
xchg
mov
decl
xor
fimuls
sub
push
test
xchg
fmull
insb
arpl
or
sbb
pop
fdivl
adc
es
jge
loope
cli
cmp
shlb
in
add
scas
jbe
and
leave
dec
lret
mov
out
cmpsl
cmp
mov
inc
sbb
mov
dec
sbb
push
mov
outsl
shl
adcb
sbb
pushf
inc
adc
lock
push
cmp
mov
out
sbb
lds
jecxz
xchg
lea
mov
jns
sbb
jo
iret
movsb
mov
out
mov
or
shll
in
in
jb
dec
cmpsl
pop
and
popf
std
xor
rcrl
mov
cmpsl
sahf
lcall
mov
sbb
lcall
jb
insl
data16
in
mov
lahf
bound
in
aam
int
icebp
hlt
xchg
cmp
gs
mov
mov
or
icebp
js
popf
add
or
out
fidivrs
pusha
sti
dec
daa
cltd
dec
imul
lret
cli
jmp
movsb
adc
out
push
test
lret
out
pop
pusha
jns
add
cmp
subl
daa
insl
cmp
dec
fnstcw
pop
xchg
cmp
xchg
subb
lea
ror
inc
sarl
test
sub
fimuls
rorb
fcmovbe
and
repz
mov
cwtl
stos
enter
dec
push
adc
mov
mov
iret
in
or
incl
adc
ljmp
cwtl
mov
fisubs
inc
into
or
pop
les
es
or
mov
outsl
lock
int
pop
mov
fdivrl
or
pop
sbb
push
les
pop
imul
cld
icebp
insl
sti
mov
cmp
xlat
stos
loopne
xchg
jno
or
mov
adc
mov
rolb
sbb
test
jo
sub
pop
lcall
mov
adc
push
fs
sbb
xorl
lock
mov
inc
xchg
push
int3
cmp
fildll
cld
inc
into
mov
mull
mov
test
daa
lcall
inc
rol
les
pop
mov
jmp
mov
loop
inc
push
insb
dec
mov
adc
out
xor
mov
das
pop
int
jno
sbb
push
xchg
inc
push
xlat
add
outsb
push
stos
jbe
in
in
pop
cmp
cld
cmc
mov
outsl
sub
xchg
add
add
and
int3
dec
cld
and
jbe
adc
loop
adc
jl
pop
mov
push
shlb
cmp
ja
pop
inc
pop
sbb
adc
enter
jns
ds
mov
xchg
dec
pop
sbb
dec
adc
stos
pop
jg
cwtl
nop
xor
hlt
fsubl
ljmp
data16
xchg
sar
mov
jno
sub
int
in
fldl
int3
mov
clc
xorb
bound
test
testl
test
adc
andl
ljmp
xchg
inc
cmp
arpl
cmpsl
adc
insb
or
in
fidivrs
cs
out
enter
xor
lds
mov
pushf
out
adc
loopne
bound
stos
xchg
mov
call
rdtsc
jb
cmpl
push
clc
lcall
mov
inc
mov
mov
outsl
add
int3
sbb
rorl
jl
push
push
test
sub
shrl
push
push
imul
sub
icebp
mov
loopne
cmc
cmp
repz
mov
std
push
sbb
test
pop
scas
and
xchg
pushf
mov
cld
pop
mov
out
push
or
adc
dec
cltd
shl
jbe
pop
sahf
xor
scas
stos
jne
jbe
or
test
mov
adc
out
sub
rolb
repnz
js
outsl
sti
xchg
xchg
cwtl
lds
psrlw
iret
dec
fistpll
out
and
or
dec
or
dec
push
cmp
mov
pop
subb
cmp
sub
push
pop
mov
clc
ret
adc
push
push
add
imul
outsb
xor
int
paddq
js
fs
dec
ja
lret
dec
repnz
cmp
addl
lret
and
sub
sub
mov
lods
pop
add
hlt
outsl
push
sub
adc
cs
sub
jg
mov
xchg
sub
bound
xlat
mov
jno
xchg
imul
adc
fwait
js
out
addr16
jg
sub
addr16
jge
stc
inc
sub
int
jae
fistpll
scas
mov
daa
pop
aas
mov
push
adcl
inc
in
mov
test
pushf
mov
adc
or
cmp
dec
jl
in
adc
sbb
jecxz
adc
push
pop
cmpl
cmp
xor
lahf
imul
ljmp
stc
push
fisubrl
or
pop
loop
inc
mov
add
jnp
inc
notl
repnz
mov
jb
xchg
ret
setae
sbb
lret
leave
mov
sarb
push
sub
enter
pushf
movsl
out
mov
inc
das
sbb
fldcw
or
cmp
repz
dec
mov
push
cmpsl
ret
dec
pop
jne
and
jg
add
popa
mov
in
repz
jbe
aad
pop
repz
or
sahf
jae
out
inc
mov
sbb
mov
ret
call
ja
in
jno
sbb
cmp
cmc
add
je
repz
dec
lret
pop
cmp
lret
outsb
and
adc
es
aas
add
sbb
mov
xor
sbb
ret
and
xchg
icebp
or
ficoms
shrl
push
loopne
jae
mov
push
je
push
leave
xchg
ljmp
mull
loope
outsl
daa
adc
scas
sti
sbb
jge
xchg
jge
test
mov
inc
pop
stc
xor
inc
pop
test
incl
mov
fstpl
add
adc
in
scas
lea
dec
sub
add
stc
dec
dec
fucomip
cltd
xchg
ja
jge
mov
fs
out
mov
jae
dec
jnp
dec
lretw
dec
movsb
add
ficompl
popf
ss
jecxz
outsl
or
cmp
jns
rcrb
inc
push
cmp
shll
xchg
pop
adc
aad
outsl
repz
xchg
sbb
lret
dec
test
mov
xchg
fisubl
dec
pop
push
mov
movsb
pop
xor
stos
popa
cmc
outsb
outsl
test
jnp
shl
sbb
sub
inc
mov
adc
dec
cmpsb
lea
pop
test
loopne
jmp
outsb
dec
ret
out
jae
inc
mov
jmp
cmc
add
fs
pop
pop
add
and
fiadds
dec
sbb
or
or
mov
dec
push
clc
or
pop
add
mov
or
and
inc
push
fwait
loope
stos
mov
fidivrl
mov
hlt
and
icebp
and
daa
mov
insl
cmpsl
dec
repz
das
cmp
mulb
adc
cmp
movsb
jbe
test
push
stos
and
cltd
sbbl
movsb
cmp
test
xchg
cmpsl
sbb
shrb
test
jbe
andb
xor
out
push
ds
dec
and
sbb
add
movsl
in
test
out
sbb
mov
dec
rolb
pop
xchg
jnp
or
pop
js
adc
xor
push
orb
cmpsb
xor
mov
sbb
filds
dec
fwait
ja
cwtl
sbb
lods
sahf
adc
push
sub
mov
sub
int3
rclb
cmpsl
negb
xor
aas
stos
imul
je
jge
mov
mov
adc
mov
sub
imull
inc
das
push
outsb
outsl
outsl
scas
popa
movsb
pushf
cmp
or
fistps
stos
mov
in
arpl
mov
jbe
aad
stos
or
fs
repnz
out
int3
sbb
cmp
or
imul
push
cmp
mov
iret
sti
sbb
loopne
enter
adc
pop
dec
insb
jns
dec
imul
and
mov
outsb
mov
mov
adc
mov
pop
cmp
sub
mov
shlb
mov
pop
dec
out
mov
cmpsb
push
mov
jns
jnp
dec
lret
addl
push
cmp
popf
outsl
ds
sub
pushf
fwait
pop
and
adc
and
inc
lcall
adc
test
xlat
leave
inc
lea
iret
dec
in
sub
data16
or
sbb
dec
and
sub
and
sahf
sbb
sahf
nop
and
ljmp
xchg
mov
add
outsl
jp
xor
pushf
xor
adc
js
andl
shrl
rolb
dec
xor
cmp
jmp
ss
push
mov
insl
adcl
add
movsb
pop
push
mov
loopne
jne
push
and
cld
and
sarl
mov
dec
fcoms
cs
cmp
push
leave
adc
dec
sub
gs
hlt
addr16
jnp
sbb
pop
es
fidivrl
inc
sbb
loop
mov
dec
or
sar
push
mov
rcrl
or
lock
or
sbb
mov
mov
xor
push
mov
cmp
and
dec
jns
push
adc
lret
mov
repnz
mov
aas
fwait
cwtl
sbb
sahf
mov
cmp
jnp
out
and
mov
ljmp
pop
in
sub
daa
xchg
int3
int3
decb
add
roll
mov
pop
mov
mov
enter
add
into
mov
mov
sbb
jecxz
ret
and
jno
or
lahf
into
fildll
and
xchg
cwtl
lcall
sbb
xchg
xchg
push
repz
mov
jnp
fmul
mov
mov
insl
mov
das
mov
and
mov
in
mov
lret
imul
jbe
adc
sbb
xor
enter
adc
outsb
pop
int3
aas
cmp
jge
mov
es
pop
mov
cmp
outsb
stos
ss
int3
mov
std
stos
xchg
push
xor
mov
je
addr16
push
shll
mov
xor
pop
div
pop
imul
pushf
and
call
ja
mov
aad
insb
mov
push
loope
fsts
les
jae
out
imul
xor
ficoms
ss
xor
xchg
test
ja
xor
adc
les
add
pop
lock
out
imulb
lret
and
testb
and
cmp
fs
jae
jns
pop
clc
cmp
loope
inc
dec
loop
insb
pop
xor
imul
out
push
xchg
popf
pusha
xor
test
data16
jo
shl
sti
mov
scas
and
mov
xor
roll
outsb
lahf
lods
fbstp
push
or
xchg
pop
in
lret
sub
fcoml
pop
ss
in
outsl
push
xorb
mov
rorl
xchg
rcll
mov
jmp
push
pop
js
lods
cs
adc
adc
mov
insl
rorl
xchg
xchg
jo
lds
gs
xchg
cmp
les
xlat
pop
or
fdivr
hlt
jo
mov
sub
push
jb
inc
movsb
or
add
pop
push
insb
xchg
inc
lock
lret
and
inc
inc
push
jo
pop
push
fcmove
call
popa
or
jmp
inc
pop
out
test
ds
cmpsb
into
insb
bnd
xlat
sub
and
push
mov
add
ds
int
xchg
sbb
ja
incl
adc
aad
push
jp
mov
jne
cmp
pop
out
cwtl
mov
fisttpll
dec
fidivrl
fmul
sub
xchg
dec
sub
sub
int
push
adc
jne
fsts
xor
dec
outsl
mov
sub
push
mov
xchg
push
and
popf
lods
mov
add
xchg
mov
dec
and
xor
test
xchg
mov
das
jmp
mov
std
insb
and
jno
repz
lods
call
mov
jl
mov
xchg
xlat
inc
inc
test
cmc
mov
push
inc
in
jmp
stc
or
icebp
ficomps
sbb
repz
jg
js
ja
mov
jge
add
mov
cld
repnz
push
lock
sub
cmpsl
xchg
inc
popa
cmpb
add
add
jnp
loope
shll
lods
mov
adc
test
or
icebp
rep
adc
push
out
sub
push
dec
cld
dec
stos
mov
jmp
fsubs
ljmp
lods
sub
pushf
mov
and
xor
into
scas
push
mov
jb
in
fdivr
jb
mov
mov
in
pop
mov
pop
xchg
inc
xchg
sub
mov
lcall
dec
pop
stos
cmpsb
mov
sub
movsl
hlt
inc
fiadds
mov
cwtl
mov
mov
imulb
add
pop
aas
mov
mov
bound
hlt
cmp
xor
scas
stc
pop
add
cmc
int3
outsl
or
fwait
pop
scas
sub
cltd
sub
xchg
popa
popf
fildl
loope
loope
movsl
or
shll
and
jo
mov
jo
or
not
lea
xchg
jp
cmp
stos
inc
sbb
add
cmpsb
xchg
lahf
xchg
sub
sub
fstpt
adc
jnp
jo
mov
std
jg
fs
ds
cmp
pop
jnp
xor
dec
lret
test
shll
das
faddl
lea
xlat
xor
std
or
stos
fistpl
mov
add
jecxz
sub
jge
sbb
lods
cs
cmp
pop
lret
das
sbb
ret
loopne
cmpsb
ja
sub
fadds
inc
leave
add
clc
ds
sahf
dec
lds
mov
xchg
pop
dec
mov
add
and
sub
mov
test
cmpsb
xchg
cltd
out
sbb
pusha
cmpsl
lea
ds
cmp
mov
cmc
lock
pop
popa
jb
fstps
mov
pop
lods
stos
loop
pop
push
into
or
and
cltd
adc
stos
inc
and
cmpl
fadd
aad
addl
pop
aam
xor
jae
add
popf
sub
sbb
aas
inc
push
imul
popa
rol
inc
adc
leave
ret
mov
fs
sub
pop
sub
loop
shlb
sbb
push
fwait
scas
jecxz
mov
les
cmp
in
add
je
jbe
xor
rcl
xchg
push
mov
aaa
rclb
loopne
icebp
jae
xor
or
pop
or
ja
or
out
movsl
cmpsl
jle
pop
int3
cmc
sti
inc
mov
cmpsl
xor
mov
mov
cltd
popf
add
and
mov
push
hlt
pop
cs
ficomps
pop
in
jnp
xchg
pop
les
pop
outsb
ret
fdiv
adc
imul
lret
mov
lock
andb
jo
pop
lea
popf
adc
fldcw
ja
jno
mov
mov
daa
adc
flds
pop
push
mov
lahf
pop
cmpsl
pop
jp
sub
jne
inc
or
icebp
jns
outsb
fildl
aas
and
add
rol
jle
and
xchg
loop
inc
cmpb
sarl
inc
rorb
rolb
adc
inc
push
pop
dec
cmp
and
es
sbb
in
insl
mov
test
jbe
pushl
xor
lret
xor
out
add
ss
test
jle
loopne
fwait
popa
shlb
sbb
fdiv
pop
jbe
and
out
ljmp
stc
shll
fisttpll
mov
dec
jmp
adc
sahf
pop
fsubp
ja
and
repnz
aad
test
ds
mov
test
loop
shrb
fadd
xor
pop
bound
mov
fidivrl
or
call
ja
mov
mov
orb
jge
hlt
popf
aas
stos
inc
and
xchg
jb
mov
je
push
sub
lret
mov
jns
ljmp
mov
and
mov
push
push
rorl
adc
into
mov
or
shrb
xchg
dec
push
mov
std
mov
lods
ss
mov
std
adc
cmp
xchg
xchg
cmp
shll
mov
mov
repz
loope
push
or
repnz
and
sahf
add
xchg
into
dec
xchg
cwtl
popf
push
call
roll
pusha
push
int3
mov
call
aaa
cmp
nop
jmp
cwtl
test
fsincos
shufps
ss
sbb
loop
or
jb
inc
pop
fcompl
scas
loope
and
insl
js
addr16
mov
mov
sti
sbb
xchg
scas
ss
cmp
jecxz
pop
mov
push
popf
test
push
pop
mov
sub
mov
cmp
fisttps
jecxz
xor
pop
inc
and
fsubrs
in
mov
mov
xor
xchg
mov
faddl
repnz
data16
xor
inc
mov
xchg
sbb
aaa
cmp
gs
pushf
mov
sbb
stos
xor
ret
adcl
jl
push
jnp
int3
repz
dec
negb
add
cmp
inc
mov
pop
xor
insl
sub
add
out
loope
rcrb
pop
mov
or
xor
cmp
cwtl
sub
fistpl
push
mov
ss
xchg
inc
sbb
push
cmpb
jno
cmp
push
shll
pop
test
add
int
mov
cwtl
push
and
sahf
incl
dec
rorl
mov
repz
xchg
jne
dec
mov
push
mov
test
or
xchg
lcall
sbb
or
jecxz
push
repz
add
call
pop
in
xor
jne
add
mov
testl
adcl
or
cmp
jp
subb
movsl
insl
in
mov
mov
adc
dec
fistl
mov
xor
cmpsb
fxch
call
rclb
out
jg,pt
call
dec
test
int
push
push
dec
aaa
out
movsl
loopne
xchg
cltd
jl
add
sbb
push
arpl
outsb
cmc
lret
push
nop
cli
sbb
loope
lods
mov
nop
xchg
rorb
mov
mov
push
pop
insb
or
ja,pn
outsl
inc
shll
test
dec
dec
jne
test
add
jns
and
lods
ja
test
mov
xchg
pop
ss
xor
in
in
shrb
sbb
js
sub
xchg
mov
test
mov
shll
rcrl
into
cmp
popf
int
pop
sti
outsl
cmp
fildl
fistpll
mov
cmp
mov
imul
addl
shll
xchg
xchg
push
push
jle
aad
stos
dec
in
lock
push
pop
mov
sbb
cmp
sub
sbb
jp
jge
mov
clc
jl
pop
sbb
enter
arpl
or
mov
jl
xor
gs
int
popa
pop
push
fstpt
out
xchg
jne
xchg
inc
pop
outsl
sbb
movsb
popa
stos
sub
sbb
sub
push
sti
loope
stos
stos
inc
jo
call
out
and
pop
call
add
dec
lret
pop
cmp
add
mov
mov
sub
fidivl
sbb
xlat
push
mov
rolb
mov
dec
jge
fisubs
jb
rolb
std
cli
lea
mov
fwait
mov
fmul
inc
mov
inc
jl
lds
clc
fwait
cmp
sbb
mov
jp
mov
into
push
in
sbb
out
lret
outsb
lcall
pushf
ds
cwtl
push
movsl
imul
fbstp
add
sti
stos
cmpsb
sub
add
mov
push
mov
ret
and
out
call
xor
fnstenv
sub
xchg
icebp
enter
inc
sti
repnz
mov
lcall
orb
cmpps
addl
inc
sbb
shrb
aas
lods
dec
and
jg
pop
sub
in
fidivl
dec
jge
and
add
mov
jbe
cld
ljmp
cmpsb
sub
inc
pop
sbb
lock
in
adc
leave
mov
pop
and
test
lods
mov
popa
cmp
jecxz
nop
sbb
daa
or
cld
lods
addr16
mov
fwait
pop
iret
mov
pop
in
add
sub
out
or
jle
dec
and
aam
insb
mov
sub
test
xchg
lds
push
je
in
push
mov
shrd
jnp
shlb
repz
jbe
cwtl
xor
cwtl
int
repz
mov
and
je
dec
pop
and
xchg
or
mov
fidivrs
mov
dec
ja
sbb
inc
sub
push
cmp
aad
add
mov
out
xchg
sub
fsubr
repnz
sbb
mov
xor
add
sti
xchg
fidivrl
push
test
into
pop
les
add
enter
dec
mov
jb
push
stc
jecxz
xchg
pop
pop
cwtl
jmp
movsb
mov
or
out
inc
cmp
and
fstpl
outsl
lret
test
sbb
les
rclb
sbb
mov
mov
popf
and
xlat
mov
inc
xchg
test
ret
test
or
pop
pop
iret
ficoml
movsl
xchg
lret
lahf
ljmp
mov
mov
push
adc
cwtl
rcl
sarl
std
xchg
xor
jbe
sti
inc
aad
mov
cmp
mov
xor
mov
pusha
jo
std
mov
out
mov
mov
adcb
add
fdivs
loop
and
int3
jbe
aaa
fisubrs
jmp
and
push
add
cmp
or
jg
push
push
aam
psrld
inc
orb
xchg
outsb
xor
add
add
pop
andl
mov
jno
cmp
push
or
adc
test
ds
xchg
mul
jb
jecxz
adc
add
enter
outsb
inc
div
xchg
cmp
fimuls
movsl
scas
out
scas
sub
pop
jl
mov
loopne
arpl
pop
sub
sbb
xchg
cltd
xor
jbe
add
out
out
push
movsb
adc
xor
std
xchg
faddl
fsubp
imul
cmp
mov
mov
ss
cmp
pushf
xchg
sub
test
add
lret
or
hlt
aaa
sub
aad
xchg
jo
dec
nop
fidivrs
call
xor
fwait
es
imul
in
int
aam
insb
cmpsl
adc
mov
jle
mov
jbe
pop
push
je
ljmp
loop
push
fimull
or
cmpsb
or
xor
cmp
stos
jbe
adc
fisttpl
mov
cmpsb
rcll
sub
jb
mov
jp
out
dec
mov
and
mov
adc
ds
mov
rcrl
cwtl
dec
pop
inc
les
repz
out
lods
insb
sahf
data16
push
leave
pop
jge
xor
mov
addr16
jg
push
aam
mulss
inc
xor
sahf
pop
sub
xchg
mov
mov
and
push
xchg
imul
call
xor
or
jnp
lock
pop
xor
test
and
push
dec
push
jnp
jnp
out
jae
lods
jle
inc
adc
adc
mov
or
arpl
ljmp
inc
mov
pushf
jg
mov
daa
mov
or
movsb
fs
lcall
dec
mov
pop
inc
arpl
xchg
sahf
pushf
aam
cs
pop
stc
cld
xchg
push
mov
ljmp
stos
or
nop
sbb
loopne
inc
fstpt
lahf
push
and
test
sbb
inc
into
les
push
loopne
arpl
mov
sub
push
add
gs
adc
inc
bound
fsubr
mov
nop
dec
jp
mov
in
std
test
aad
bound
mov
or
jle
jmp
ret
int3
stos
jae
xchg
aam
outsl
inc
outsl
add
inc
enter
jo
mov
sub
arpl
movsb
sub
sub
fwait
iret
cli
push
bound
or
fcmovu
int
adc
dec
leave
mov
leave
jno
xchg
jp
testb
loope
lods
pop
insb
add
mov
into
sbb
lcall
push
jl
dec
mov
fstps
inc
jl
dec
mov
fildl
dec
mov
mov
loope
ljmp
pop
pop
and
dec
iret
push
pop
int3
fisubs
cmc
int3
mov
mov
aas
inc
clc
aaa
push
in
mov
lods
movups
int
fwait
mov
fcom
test
push
outsl
mov
cmp
hlt
adc
fwait
call
sbb
cmp
lds
pop
lret
xchg
scas
pushf
dec
cmpsw
cld
adc
dec
not
add
xor
ljmp
into
pop
pop
mov
fidivrl
cmp
popa
pop
icebp
mov
aas
or
and
sbb
clc
adc
int3
xchg
roll
and
lds
push
test
neg
and
inc
aaa
or
mov
push
hlt
cltd
aaa
scas
xchg
mov
scas
jne
inc
cli
mov
mov
leave
dec
and
or
cmp
pop
sbb
and
sbb
push
jne
mov
mov
out
or
fldenv
pushf
mov
je
inc
cli
mov
cmp
rcrb
push
mov
cld
pop
outsl
pop
mov
scas
jmp
adc
xor
fsubrl
sbb
mov
fstps
stc
in
mov
test
inc
and
in
testb
or
nop
outsl
adc
or
bnd
jle
hlt
movsb
push
and
xor
or
data16
ljmp
aaa
mov
pop
xor
mov
cs
rclb
clc
rcl
pop
stc
mov
pop
ret
xor
adc
jg
testb
in
xchg
adcl
pop
aad
cmp
jnp
and
cmp
jo
fwait
es
dec
iret
and
cmc
sarl
in
mov
dec
mov
push
hlt
aas
mov
inc
cld
stos
or
aad
ret
outsb
sbb
jo
icebp
jnp
pop
fwait
aad
pop
pop
xor
sti
xor
pop
jge
xchg
call
enter
inc
pop
jno
cmpsl
mov
pop
test
test
ret
sub
sbb
insb
loop
xchg
ss
xchg
mov
lahf
and
dec
cmpsl
bound
sbb
cmp
jle
pop
sub
stos
sub
cmp
lods
push
mov
mov
dec
inc
dec
lea
xor
mov
fsubl
sarb
lahf
push
iret
push
mov
das
xor
jae
pop
in
lret
sub
mov
test
cmpsb
movsb
adc
cmp
and
fnstsw
adc
ret
pop
jnp
cmpb
dec
jnp
dec
lds
adc
sbb
cld
and
lcall
stc
cmpsl
sbb
arpl
sbb
xor
mov
stc
jge
into
pop
xor
cmp
mov
out
sti
mov
jmp
lahf
add
pop
outsw
movsb
scas
sarb
xchg
scas
lcall
movsb
sbb
fstp
addr16
adc
ret
xchg
xchg
sub
mov
or
adc
cwtl
call
aad
shl
call
inc
dec
rcrb
enter
xchg
xor
jg
js
push
dec
and
clc
add
out
cmp
dec
mov
negb
xor
hlt
out
rorl
out
inc
repz
fwait
ds
data16
push
cltd
mov
fcomps
jno
outsb
out
addb
fisttpl
jbe
fwait
sub
or
and
sahf
and
xor
ficomps
mov
hlt
icebp
ljmp
enter
pop
jg
ljmp
mov
lods
dec
sahf
mov
fs
stc
sub
and
insl
in
divb
jb
and
jmp
ret
jns
scas
loope
sti
int
inc
jns
pop
push
dec
pop
mov
sub
mov
adc
scas
popf
cmp
mov
test
jb
js
jecxz
rcl
pop
imul
lea
cmpsl
test
xor
in
add
cwtl
imul
xlat
ss
iret
ss
or
cmp
push
jecxz
add
ljmp
cltd
mov
aas
push
lahf
push
into
adc
js
enter
push
mov
mov
data16
out
dec
and
mov
or
lahf
add
std
push
mov
push
icebp
mov
mov
mov
add
repz
clc
and
cltd
inc
pop
shlb
push
test
inc
sbb
js
mov
iret
or
dec
sti
fisttpl
pop
cmpsl
fstpl
movsb
and
adc
or
sbb
mov
dec
loopne
stos
xor
pusha
ds
pop
shrb
xor
ret
inc
adc
dec
les
dec
ret
sti
mov
cmp
sbbb
mov
fimull
add
dec
xchg
fs
imul
jae
clc
insb
push
loopne
add
push
mov
pop
xchg
pop
push
idiv
lahf
mov
sbb
jp
int3
push
lods
add
push
xchg
and
dec
mov
test
pop
dec
push
dec
int
movsb
decb
sbb
shrb
clc
dec
xchg
rol
sub
jg
cmp
inc
pop
pop
cmp
nop
pop
lods
das
sub
mov
mov
popa
ja
fimull
lahf
jb
dec
mov
jb
jns
outsb
mov
adc
std
sub
pop
enter
and
in
dec
jge
pop
mov
add
fstps
jl
enter
lahf
mov
int
xchg
xor
rorb
shrb
into
xlat
mov
xchg
sub
test
jb
mov
popa
sbb
dec
or
and
rep
add
cmc
pusha
jno
sub
ljmp
xchg
adc
push
adc
push
sub
pop
xchg
int
in
test
mov
jmp
jns
js
in
lret
xchg
cmp
jmp
in
push
stos
push
out
lods
mov
andb
ljmp
pop
dec
adc
mov
xchg
ret
mov
mov
mov
dec
xchg
pop
cmp
mov
mov
stos
cmpl
mov
mov
adc
push
icebp
jns
jge
dec
loop
test
dec
nop
aaa
insl
in
data16
or
sub
cld
cmp
inc
lock
mov
and
lods
in
xchg
nop
cld
jp
mov
std
xorl
adc
mov
xchg
xchg
test
and
shll
jecxz
movsl
jmp
sub
js
push
pushf
outsl
sti
gs
pop
jecxz,pn
int3
lods
pop
outsb
sbb
jecxz
push
xlat
testl
popa
jecxz
ret
hlt
scas
mov
sub
mov
sbb
rep
push
in
imul
clc
ja
imul
xchg
mov
mov
pop
mov
lock
add
inc
fsubrl
filds
or
cmpsb
xor
push
pushf
cs
jb
or
jmp
and
fisubs
iret
loopne
inc
xchg
sub
mov
adc
shrb
cli
loope
inc
xchg
xor
fcomip
clc
cmpsl
sbb
fs
lahf
imulb
shr
adc
inc
pop
clc
mov
stc
pop
out
jae
loop
clc
js
mov
in
gs
xchg
push
dec
mov
dec
or
test
hlt
arpl
cltd
lret
aad
jnp
xchg
xchg
and
jl
cld
adc
inc
sub
adc
call
shlb
inc
mulb
adc
inc
mov
out
sub
jb
jmp
cmp
incl
sub
dec
cmp
mov
mov
mov
test
in
push
cmpsl
sbb
in
adc
lret
jne
mov
mov
or
dec
mov
outsb
push
sub
leave
sub
inc
or
inc
inc
push
hlt
inc
jns
enter
mov
loope
lret
ss
lahf
int
xchg
push
push
and
inc
pop
sbb
mov
jae
adc
out
into
call
add
icebp
xchg
in
inc
mov
jb
jne
fdivr
push
in
cmp
xchg
into
outsb
jmp
mov
rorl
fsubl
leave
ljmp
mov
jmp
cld
rol
loopne
insl
cmp
or
mov
in
inc
es
inc
std
xor
aas
and
fdivl
and
pop
out
cmp
mov
dec
je
sub
jmp
lret
mov
sub
cltd
adc
add
jo
and
mov
leave
and
xchg
and
push
jne
mov
cltd
lods
mov
xor
outsb
leave
jns
add
jmp
popf
sub
out
scas
adc
shll
pop
jns
cmpsl
dec
inc
add
outsl
add
pop
les
scas
xchg
lret
mov
sbbb
popa
push
xchg
leave
xor
sbb
xor
inc
mov
das
cwtl
aam
cmpsl
jle
xchg
movsl
aas
lods
cltd
cmp
cmp
jge
cmp
jmp
xor
dec
rorl
aad
in
cli
mov
inc
push
aas
ds
mov
jl
sahf
xchg
popa
outsl
fidivrl
mov
pop
push
sub
in
shrd
outsb
push
mov
fs
bound
popf
pop
xor
test
jge
xor
lcall
inc
sahf
sbb
xlat
mov
jecxz
jl
in
adc
outsl
push
imul
push
aam
mov
mov
movntps
sub
loope
or
adc
xor
imul
fsubrl
or
inc
mov
sbb
mov
mov
pushf
or
mov
mul
pop
mov
iret
dec
or
xchg
int3
fsubrs
arpl
or
xor
or
sub
jns
pop
push
mov
int3
in
popf
xor
mov
outsb
and
addl
inc
inc
fadd
or
push
or
pop
lret
mov
lds
adc
pop
insl
sub
in
jle
into
push
add
adc
lods
inc
xor
cmp
mov
out
daa
pop
inc
cmpsl
sbb
push
mov
sub
cmp
dec
dec
dec
cmpl
mov
mov
sarb
xor
out
xlat
xor
adc
mov
push
push
push
shlb
repnz
movsl
xchg
fidivrs
ljmp
les
arpl
mov
jne
push
mov
fldt
mov
mov
push
int
cmp
loopne
add
or
sahf
repnz
fnstenv
xchg
dec
mov
xchg
push
jo
call
lods
push
sbb
or
add
pop
dec
jbe
int
test
int3
call
jg
jmp
inc
rcrb
lods
imul
mov
mov
fwait
mov
jb
cli
mov
xchg
pop
adc
cs
or
mov
sbb
mov
test
mov
mov
pop
ffreep
inc
push
inc
jge
repz
outsl
push
inc
adc
out
idiv
sub
icebp
pop
add
or
dec
popf
lock
sti
lods
push
mov
dec
cmp
lret
sub
sahf
vpcmpgtw
cmp
mov
mov
inc
je
push
jge
and
mov
sbb
cli
pop
push
insb
test
loope
loop
sub
ret
xchg
subl
sbbl
add
sbb
lods
das
push
pop
in
out
fnstenv
add
fmul
pop
sbb
lods
loope
lcall
outsl
jns
sahf
inc
arpl
jmp
jne
mov
mov
inc
push
add
lcall
les
scas
mov
jno
dec
cmp
mov
call
sbb
int
sub
jg
jecxz
dec
dec
push
bound
imul
sub
mov
es
not
lods
push
jo
cmp
popf
sbb
shr
clc
in
movsl
scas
xchg
enter
and
push
xchg
push
fimuls
cmpsl
mov
inc
mov
aas
out
lahf
sub
adc
sub
hlt
fisubrl
scas
addb
inc
or
cli
jecxz
hlt
lds
jle
js
ss
fsubrp
outsb
mov
mov
nop
cmpsb
rolb
shlb
sar
jle
dec
inc
jg
jmp
push
mov
cmc
pop
cmp
in
or
rclb
lock
jae
loopne
xchg
dec
cmpsl
js
adc
mov
icebp
xchg
add
jmp
aad
jno
xor
loope
sbb
sbb
clc
push
and
js
out
push
aas
mov
lods
lret
icebp
enter
loope
push
sub
jecxz
repnz
orl
fs
xor
out
jp
out
lahf
adc
mov
fcompl
cs
jp
add
jecxz
adc
mov
lret
daa
mov
std
adc
popa
mov
dec
stc
mov
jge
bound
icebp
rcll
xlat
insl
xor
leave
icebp
notb
inc
testl
into
xor
sbb
rol
or
aam
fwait
arpl
sahf
mov
add
mov
sarl
stos
mov
sbb
in
mov
int
cmpsb
and
lret
xchg
mov
jne
rclb
in
movsl
loope
mov
adc
mov
enter
jp
sahf
lahf
mov
das
mov
xchg
push
dec
sbb
jo
sbb
lret
push
lds
xor
pop
add
sarb
xchg
push
xchg
ljmp
mov
rcrl
mov
stos
cmp
sub
test
mov
notb
call
loop
jp
pusha
sub
sarl
or
cmp
add
push
popa
mov
icebp
enter
lret
cli
adc
lods
push
or
mov
cmp
test
enter
mov
outsb
xor
aas
cli
iret
hlt
jns
dec
add
ja
lahf
cmp
movsb
xchg
dec
clc
fcmovnb
mov
jbe
lea
xor
adc
mov
bound
jp
imul
adc
ret
add
mov
mov
add
push
fnstenv
xor
dec
xor
xchg
cmp
xchg
sub
jae
and
cmp
rcl
aas
in
in
es
inc
jbe
pop
push
mov
popf
xor
pop
inc
pop
loope
int
pop
push
pop
push
sub
pusha
rcrb
stos
jbe
repz
mov
add
add
xchg
insb
cmp
sub
push
movsb
xor
cmp
pop
insl
lahf
andb
add
mov
push
in
sti
imul
fstpl
sbb
fsubrl
push
aam
ret
stos
adc
in
pop
sub
loop
les
cmp
mov
push
adc
loopne
dec
cwtl
xchg
rcrb
jle
int3
jle
sbb
mov
lock
inc
out
rclb
repz
test
insb
or
add
xchg
fcmovu
ss
in
dec
imul
sahf
or
aaa
gs
inc
decb
adc
jmp
jnp
sub
and
jp
xlat
jge
push
add
mov
lods
or
mov
sti
loope
mov
loop
mov
rcll
cli
out
test
subb
roll
xchg
mov
add
fsubrs
inc
lds
push
sbb
movb
out
sub
jb
mov
sbb
adc
and
mov
lcall
arpl
dec
mov
je
and
cmp
dec
int
add
add
pop
addb
fadd
fildll
dec
sub
jg
fst
es
stc
ret
sub
jecxz
and
dec
aad
mov
cmp
lock
loope
xor
adc
movsl
jb
xor
out
cli
sub
mov
aaa
insl
jg
call
adc
std
add
mov
adc
imull
repz
mov
cmp
rcrl
in
in
xor
shl
mov
test
adc
out
inc
cwtl
jp
stos
sub
pushf
mov
pop
push
xchg
je
jecxz
pop
test
sub
fnstcw
xchg
xor
or
ljmp
fwait
leave
rorb
pop
cmp
and
outsl
pushf
mov
xor
pop
xchg
pop
mov
les
sbb
ret
mov
pushf
jge
jo
mov
dec
xor
scas
in
imul
rcr
rol
test
xor
popa
mov
dec
ljmp
ret
int3
dec
pop
dec
shlb
cmpsl
sbb
sub
jecxz
pop
lcall
xchg
xchg
push
fnstsw
xchg
aam
mov
and
sarl
xchg
lods
addr16
shr
daa
pop
mov
outsl
cmpsb
adc
jo
cmpsl
jae
mov
sub
mov
mov
mov
lea
jp
inc
aaa
adc
fistl
inc
inc
cmpsb
or
movsb
fsubrp
cmp
neg
xchg
pop
lret
jb
xchg
pop
int
lret
cltd
pop
push
push
pop
and
ret
push
inc
sbb
sahf
insl
cmc
loope
or
insb
pusha
jne
dec
mov
sub
sub
mov
fcoms
pop
lret
jp
mov
or
fisubrl
mov
inc
xchg
xchg
and
jno
loopne
and
push
jbe
push
addr16
lahf
xorl
push
fmuls
shl
xchg
rcll
cltd
mov
add
xchg
das
cmp
sbb
mov
shrb
es
mov
push
rcr
out
jmp
jmp
mov
out
push
cmc
or
cld
lods
fs
inc
inc
aas
sub
and
out
cwtl
and
mov
out
outsb
xor
addr16
inc
shll
lods
dec
fs
dec
mov
js
or
aaa
out
xor
mov
fisubrl
imul
jae
adc
lcall
adc
shlb
into
fldl
outsl
je
xchg
pop
enter
pop
push
adc
out
mov
inc
jmp
test
adc
and
cmp
test
mov
iret
ja
push
and
cmp
aad
or
cmp
stos
cld
aam
mov
xor
xor
or
lss
scas
loope
sub
jecxz
mov
mov
mov
out
daa
jg
or
inc
jo
mov
pop
les
incl
notl
shlb
mov
fs
inc
push
fstpl
mov
inc
push
adc
jb
in
xchg
dec
inc
pop
loop
jnp
popf
stc
arpl
cld
pushf
or
sbb
addr16
xlat
xchg
popa
mov
jno
out
mov
scas
sbb
xor
out
sub
mov
in
outsl
push
dec
xor
push
test
cmp
lock
mov
dec
aad
movsl
jmp
mov
popf
xor
out
outsl
ret
imul
lds
jl
scas
pop
push
fcomps
pop
pop
xchg
imul
imul
dec
sub
test
and
fwait
lds
addl
inc
cmc
or
sub
xchg
inc
fstl
or
pop
fldl
out
imul
or
aam
inc
dec
out
cmp
jns
test
aam
and
lea
test
jbe
loope
daa
xchg
scas
or
ss
jbe
std
lahf
and
xor
dec
repnz
xchg
cmpsb
mov
stos
xchg
test
xchg
popf
les
mov
cwtl
aas
cmpsl
es
inc
into
aas
or
test
iret
stos
test
pop
fcomps
jp
rorl
xchg
xchg
in
fbstp
enter
lret
sar
dec
aad
sbb
psllq
js
aam
push
std
sbb
into
mov
jb
inc
xorl
xor
dec
addb
fnstsw
jnp
nop
test
popa
out
out
dec
das
outsb
movsb
sub
mov
cli
sub
or
or
lret
inc
lret
lock
leave
repnz
xchg
push
fadd
mov
and
arpl
pusha
into
in
push
sbbl
jo
fwait
mov
outsb
and
sub
fwait
push
loope
mov
cmp
int
inc
push
push
jae
jnp
mov
imul
jecxz
pop
fdivl
int3
mov
mov
xchg
in
mov
lea
fbstp
ja
cmp
sub
fs
enter
pop
or
int3
nop
add
mov
or
jle
ret
or
fldenv
lods
lea
xor
cmp
outsb
cmp
sbb
sub
cmpsb
stos
mov
in
imul
add
mov
in
mov
test
inc
dec
lock
push
clc
jbe
cmp
lea
sub
enter
push
sub
fwait
shr
bswap
jle
jnp
rol
or
cmpsb
mov
ret
cld
rorl
cmp
outsl
repnz
popa
xor
popa
inc
mov
divl
inc
sub
mov
cli
out
dec
loop
lcall
rcll
push
inc
mov
leave
aad
test
sahf
pop
lea
test
mov
out
call
leave
push
xchg
stc
aas
idiv
cld
push
std
or
inc
xchg
nop
jno
pusha
cmp
shll
int
jo
cmp
inc
mov
test
pop
negl
jae
pop
test
and
sti
shll
pop
xchg
add
add
enter
pop
pop
aad
jns
xor
add
mov
xor
xchg
adc
dec
or
push
pop
inc
add
imul
xor
clc
inc
xchg
fidivs
inc
imul
xor
les
push
pop
aad
adc
adc
sbb
jno
mov
out
sti
mov
leave
inc
jp
jmp
lea
xchg
addr16
loop
mov
and
test
sbb
jne
das
rcrb
scas
or
ljmp
pop
mov
movsb
fisubrl
in
dec
stos
jl
mov
movsl
xchg
sbb
add
movsb
int3
adc
icebp
adc
pop
shr
xchg
ss
mov
mov
mov
iret
sbb
lret
mov
jns
lret
sbb
mov
test
insb
xchg
sub
sbb
in
adc
out
pop
add
push
mov
mov
ret
aam
in
adc
rcrl
enter
sub
adc
mov
fidivrs
dec
sbb
imul
add
cld
and
mov
or
cltd
idiv
lcall
fidivrl
jl
mov
loope
ljmp
push
shrl
fst
movsl
lea
int3
mov
cmc
sub
fstpl
test
push
icebp
in
cli
pop
inc
fwait
mov
mov
xchg
in
or
jns
dec
movb
incl
jo
fisubrs
mov
sub
mov
movsl
in
sub
fimuls
mov
adc
push
icebp
push
ljmp
jp
mov
xorl
sub
xlat
ret
test
add
lret
push
xchg
outsb
popa
mov
lret
push
add
and
push
and
loopne,pn
mov
les
sub
bound
or
bnd
cmp
cmp
xchg
popf
mov
fadds
leave
fstps
lds
clc
pusha
ret
fidivrs
inc
arpl
mov
mov
pop
in
mov
jns
xor
rorb
call
mov
addl
aaa
scas
add
fldl
sbb
rol
sub
or
ss
sti
gs
mov
inc
es
ja
inc
std
out
push
add
adc
lds
pop
pavgb
inc
aam
rorb
sbb
add
popf
data16
sbb
dec
incb
push
loop
sub
scas
cld
push
aad
setp
push
aad
mov
fistpl
jle
mov
sahf
fcmovnb
call
int
add
adc
cmp
xlat
cmp
sbb
pop
mov
cmovnp
andnps
fldenv
or
dec
inc
shl
dec
and
js
or
fistl
adc
mov
mov
inc
jecxz
sub
rol
mov
sub
ljmp
lahf
daa
adc
jne
xor
mov
outsb
mov
push
fnstsw
mov
sbb
fucomip
pop
sbbl
cld
and
int3
ret
mov
repz
pop
lahf
sbb
in
loope
push
inc
in
popa
mov
pop
lcall
mov
jbe
xchg
cmp
sub
stc
mov
adc
jnp
mov
fiaddl
mov
mov
daa
push
shr
pop
inc
aaa
pop
jmp
imull
pop
inc
mov
neg
cmp
pop
pop
int3
fistps
xlat
mov
or
adc
mov
out
pushf
mov
cmc
fnsave
adc
add
das
mov
mov
mov
pop
nop
pop
scas
add
pop
stc
and
add
test
outsl
adc
scas
mov
push
jl
jl
repz
imul
cmp
dec
jb
jmp
lods
test
imul
rcl
cmp
dec
fdivrl
add
add
xor
shll
leave
push
inc
push
and
and
mov
or
sub
int3
or
sub
dec
aam
cpuid
insl
dec
call
xchg
imul
enter
cmpsl
xor
sbb
movsb
push
add
sbb
push
mov
aad
scas
in
ja
xor
dec
in
cmp
lahf
adc
movsb
add
adc
dec
sarb
push
push
mov
dec
mov
ficoml
cwtl
fdivrs
push
and
std
lods
and
enter
aam
lods
and
bound
mov
mov
lods
jne
sbb
adc
pop
lods
jb
jo
jge
pop
pop
jp
and
add
adc
mov
pusha
or
lret
pop
or
xor
mov
lods
fmull
pop
fiaddl
and
sbbl
adc
aas
push
adc
jmp
imul
pop
pop
cmpl
mov
movsl
cmp
enter
insb
add
lds
mov
lret
je
sub
xchg
fnsave
gs
mov
je
repz
cmpsl
clc
call
out
and
lds
mov
mov
add
cltd
and
pop
fwait
icebp
mov
or
mov
sub
pop
das
fs
xchg
mov
push
fnstcw
pushf
pop
pop
add
xor
fwait
push
xchg
push
sbb
sbb
inc
dec
nop
idivb
mov
add
mov
add
pop
add
insb
icebp
das
mov
ret
dec
xchg
lea
push
and
sub
out
xor
ja
push
fldenv
cmp
pop
decl
arpl
xchg
fldl
rcll
outsl
popa
hlt
imul
aam
shr
jge
adc
sub
fs
inc
sbb
fldenv
add
in
mull
lock
pop
push
mov
fmulp
ret
fistps
xor
pop
sbb
mov
hlt
stos
cmp
xor
outsb
je
jb
enter
jecxz
jle
push
and
jae
cmp
test
aam
pop
cmp
arpl
mov
mov
push
sbb
ret
cltd
adc
cmp
add
jl
and
ret
lahf
stc
xchg
das
inc
aas
inc
ss
lret
mov
sbb
js
lods
int3
push
std
mov
adc
lds
in
add
mov
adc
add
pop
and
jmp
mov
outsb
xchg
push
dec
mov
inc
popf
sbb
mov
xor
adcl
pusha
push
andb
or
and
and
xchg
push
or
xchg
test
outsl
insl
and
subb
cmp
je
lahf
cmpsb
sub
or
mov
cmp
and
fdivp
dec
add
loop
push
and
cmp
cmpl
stos
scas
adc
xlat
adc
outsl
shlb
gs
pushf
orb
mov
mov
push
xchg
js
sbb
mov
stc
movsb
xchg
shrl
inc
enter
lcall
sub
dec
mov
cmovno
rol
iret
mov
dec
pop
es
adc
mov
int
out
mov
ret
xor
ljmp
cmp
cmpsl
cs
adc
jmp
fcos
inc
in
push
mov
inc
stos
imulb
sub
je
out
or
clc
xchg
push
adc
rorb
fisttpl
push
mov
lret
aad
pop
outsb
pop
lret
inc
xchg
jg
mov
shlb
jge
mov
mov
lods
sbb
push
sti
repnz
pushf
dec
xchg
dec
outsl
sbb
xchg
pop
cmp
jae
add
push
out
xchg
push
int3
rol
mov
mov
dec
ljmp
sub
mov
fisubrs
fwait
daa
mul
movsl
inc
stos
mov
repz
xor
add
dec
dec
cld
cmp
addr16
les
popf
pop
sub
in
mov
adc
notl
je
and
pop
outsb
mov
ds
fistpll
into
int
add
jmp
mov
mov
stc
xor
addr16
mov
and
jecxz
ror
imul
mov
lret
dec
ds
inc
inc
inc
pop
cld
mov
dec
lret
lret
insl
out
cmp
test
enter
sbb
js
iret
cltd
sahf
and
mov
fistpll
cmp
xchg
cmpsl
lret
jge
xchg
bndstx
xchg
push
stc
mov
das
cltd
test
loop
pop
pusha
mov
mov
xchg
push
pop
xor
mov
test
je
inc
jae
js
sub
dec
add
add
pusha
jmp
mov
mov
pop
fs
lret
call
movl
lods
jno
out
jle
pop
cmpb
push
sbbb
mov
js
jmp
add
mov
les
sbb
and
popl
aas
movsl
arpl
ljmp
inc
and
push
xchg
xor
and
mov
in
jnp
jl
sub
push
dec
xor
andl
mov
jp
pusha
sbb
in
pop
popa
mov
out
sub
lahf
add
clc
in
lret
outsb
repz
push
jge
pop
shll
flds
mov
rcrb
xor
js
cmp
stos
xchg
adc
cli
das
inc
iret
xor
cmpsl
add
gs
and
movsb
cmp
shll
cmpsl
sub
pusha
push
xchg
push
in
in
stos
xor
fdivs
js
and
add
or
mov
jmp
jg
pop
mov
push
adc
fs
pop
leave
dec
jns
push
lcall
cld
mov
dec
push
pop
pusha
leave
testb
ljmp
or
js
dec
mov
mov
jmp
mov
cmp
xchg
jmp
inc
jle
push
xor
cmp
hlt
shr
xchg
inc
addr16
xchg
dec
sub
data16
ja
flds
seto
into
inc
inc
fsubrl
adc
xor
or
push
dec
mov
dec
xchg
mov
adc
les
mov
stos
xor
loopne
xor
pop
or
loope
into
movsb
pop
test
xchg
movsb
lea
ds
jp
xchg
mov
int
stos
mov
lds
dec
cmp
xor
int
mov
in
fdivp
int3
xor
roll
push
pop
les
pop
dec
clc
sarl
xor
and
and
inc
xchg
fistpl
pushf
inc
fiaddl
sub
cmp
pop
inc
ljmp
int
xlat
icebp
popf
jecxz
mov
fisubrs
fnstenv
and
inc
ret
adcb
jmp
fisubl
push
push
xlat
jge
xor
popf
push
xchg
pop
and
fcmove
fs
sub
cs
sar
incb
or
xor
push
aam
loopne
data16
xor
or
addl
jnp
mov
pop
xchg
mov
loope
insl
sub
fsubp
adc
or
cmp
imul
lds
in
pop
mov
movsl
jecxz
cmpsl
stos
sub
pop
cmp
cmp
jmp
cmp
cld
sub
pop
fs
rcrb
lcall
shrb
dec
mov
or
pop
stc
jne
fisttpll
test
loop
dec
shl
movsb
test
lcall
imul
push
mov
cmpsb
sahf
jge
sub
jne
sti
inc
int
cmp
inc
test
sarl
lahf
fwait
xchg
push
rcr
sbb
push
loopw
inc
dec
call
xor
ret
sbbl
or
shrb
ficompl
xchg
loop
sbb
mov
push
lcall
add
dec
cmc
cmc
leave
pop
mov
push
in
pop
mov
and
mov
jl
pop
lds
out
mov
sbb
adc
jmp
iret
je
push
ja
movsb
inc
lea
fcompl
adc
xrelease
daa
mov
ja
into
add
scas
adc
adc
bound
mov
in
jnp
fsubrp
shlb
fldt
sti
nop
cmp
aaa
icebp
mov
iret
cmp
sbb
cmp
pushf
mov
jle
ret
outsb
addr16
stc
sbb
lea
aad
test
and
adc
call
jns
icebp
adc
xor
stos
xchg
mov
mov
sub
pop
movl
in
pop
lcall
cmp
sub
mov
fstpt
xchg
cmp
add
aam
push
mov
mov
fsubrl
loop
sub
add
mov
rcll
popf
xorl
jb
enter
sub
sub
or
or
mov
sbb
pop
mov
sbb
jno
mov
jg
ds
xor
lods
lods
mulps
mov
and
cmpsl
ja
imul
pop
ss
xlat
iret
cmp
jge
or
jecxz
lret
adc
out
xchg
in
sbbb
mov
fwait
xchg
jg
call
pop
sub
and
and
jno
or
xchg
adcl
outsb
jmp
js
sub
push
cmp
ss
cmp
jp
xchg
pop
xchg
push
mov
test
inc
fs
movsl
leave
les
das
lret
dec
gs
popa
cmp
test
lea
jns
sbb
jle
mov
inc
dec
stc
shl
mov
cmp
hlt
sbb
sbb
jg
add
daa
movsb
hlt
filds
mov
nop
xchg
jle
fld
rorb
out
cld
or
sub
icebp
leave
adc
inc
hlt
cmp
cmp
xchg
movsb
loopne
ret
std
pop
inc
vpshaq
adc
dec
sub
sub
sbb
leave
movsl
in
jle
mov
mov
orl
gs
testb
xor
mov
jge
or
jae
sub
mov
xchg
addb
mov
out
test
pop
pop
adc
pop
push
dec
scas
mov
rcrl
lods
dec
cmpsb
scas
sbb
adc
ljmp
lods
pusha
insl
and
jg
and
pop
mov
sbb
and
hlt
add
inc
mov
mov
mov
clc
cmp
mov
aaa
rcl
dec
mov
sarb
movsb
aad
loop
repz
test
add
inc
lds
lods
dec
daa
pop
test
addr16
fsubs
dec
mov
adc
push
xor
cmp
pop
adc
xor
sbb
scas
jle
not
lea
and
jle
stc
lock
sahf
cmp
je
lods
sbb
xchg
in
shrl
pop
cltd
cmp
fdivr
jp
fucom
inc
mov
xchg
andl
cmp
out
out
push
sbb
push
or
je
sub
jmp
mov
cmp
aam
arpl
cmp
mov
and
pop
insl
adc
popf
or
lahf
mov
dec
jmp
hlt
jbe
mov
adc
sbb
pop
leave
push
lret
add
mov
sbbb
pop
aas
inc
adc
cs
jae
out
decl
sub
push
pushf
leave
loop
cwtl
dec
mov
xor
and
fnop
mov
and
scas
inc
xchg
lcall
pop
sbb
xor
jmp
roll
pop
xor
sti
in
and
pop
cmp
mov
mov
jmp
jns
or
xchg
out
roll
pop
pop
aam
into
pop
sbb
sub
inc
push
scas
stos
add
mov
or
add
clc
and
push
js
leave
ja
mov
fsubl
mov
xchg
mov
clc
lcall
mov
aad
negb
movsb
sub
stc
xor
jl
mov
jns
daa
pop
jle
dec
mov
cmp
stc
clc
xlat
test
push
fmuls
adc
lret
aas
add
sbb
fldcw
inc
dec
inc
sbb
or
cli
lods
adc
dec
bound
in
out
cmp
lret
inc
dec
jmp
add
inc
mov
push
sub
lds
ds
ljmp
fstpt
xlat
mov
cmp
dec
fistpll
gs
out
mov
jle
sbb
add
sti
mov
cmp
jnp
iret
or
lods
or
out
dec
inc
loopne
popl
pop
ret
sti
sbbb
inc
pop
out
movsl
or
loop
inc
repz
push
fsubs
imul
pop
inc
xlat
sub
jne
dec
test
push
push
in
scas
stos
ljmp
xchg
sahf
je
imul
mov
ljmp
popl
dec
pop
xchg
movsl
mov
cld
fistl
pop
mov
jnp
xchg
imul
sub
inc
clc
in
repnz
push
mov
push
movl
mov
add
cmpl
cs
loop
js
andb
mov
int3
repz
dec
fsts
arpl
jae
in
dec
mov
cld
mov
xlat
xchg
jb
lret
enter
dec
dec
adc
cmp
aam
or
xchg
ret
dec
js
add
jecxz
inc
addr16
outsb
pushf
xor
fsub
mov
push
out
pop
push
shll
nop
test
mull
mov
mov
ja
test
shlb
cmc
mov
pop
add
mov
mov
jne
popa
daa
cwtl
xchg
cmpsb
xor
pop
mov
mov
sbb
mov
mov
mov
inc
push
xorl
add
or
pusha
dec
arpl
push
imul
mov
mov
xor
cmc
or
icebp
sub
pop
or
inc
nop
fsubs
sbb
addr16
sbb
add
inc
shrl
xor
adc
stc
add
aaa
movsb
push
or
push
pop
xchg
mov
sbb
mov
sbb
dec
je
jecxz
push
lods
mov
jl
pop
pusha
aaa
cmp
out
mov
pop
loope
in
repnz
add
addr16
fistl
mov
mov
bnd
mov
mov
adc
fs
std
leave
enter
mov
inc
jne
fmull
jae
fsubrs
pop
bound
cmp
xor
sub
push
jb
cmovp
orb
mov
jns
and
aad
test
ret
outsb
dec
jge
andb
je
lds
xchg
push
lock
popf
sbb
in
rclb
call
mov
addr16
add
out
mov
fdiv
push
add
and
inc
inc
jb
pushf
fbstp
popf
mov
inc
aad
sbb
adc
or
sbb
test
xor
mov
xchg
jg
sbb
loope
push
cmp
movsl
ss
mov
pop
sub
jle
xor
push
fcmovnbe
add
aam
add
call
mov
xor
mov
scas
push
fists
es
and
movsl
xchg
pop
ror
pop
outsb
out
outsb
jne
adc
clc
inc
in
and
push
fst
xor
jmp
mov
pop
sub
ss
mov
repz
pop
cmpsl
dec
iret
lret
jge
in
jl
popf
jge
fldl
repz
mov
mov
outsb
out
pusha
adc
pushf
cmpsl
adc
dec
xchg
es
pop
ret
jnp
xor
jl
xchg
xchg
loop
mov
xor
aas
repz
pop
daa
outsl
into
outsl
out
xor
jecxz
or
popa
xchg
outsb
sub
adc
clc
fmuls
out
xchg
mov
js
pop
cmc
es
int3
inc
movsl
pop
repnz
insl
and
pop
mov
dec
cmpb
int3
shlb
push
xchg
or
shll
xchg
push
icebp
xchg
fcom
jo
dec
les
mov
pop
pop
in
push
pop
pop
test
ljmp
inc
loopne
cmc
lret
and
pop
mov
jae
xor
fstps
je
stc
cmpsb
incb
sub
out
lret
rcl
arpl
mov
sahf
xchg
cmp
xchg
iret
push
nop
mov
js
cltd
mov
in
pop
sub
stc
leave
leave
xchg
jecxz
adc
adc
fbstp
in
pop
into
je
jg
enter
dec
daa
pop
out
dec
cmp
pop
pop
adc
ret
push
cmp
mov
imul
outsb
inc
jne
aas
xor
sub
outsl
pop
or
jg
push
jmp
subb
lea
jge
lds
push
push
arpl
enter
sbb
sub
cmp
enter
outsl
aas
add
mov
lock
fsubl
aaa
jecxz
leave
shrb
test
test
dec
int
mov
jecxz
mov
mov
push
scas
inc
arpl
add
pop
imul
push
cltd
das
das
xor
mov
inc
std
icebp
ja
push
mov
lods
xchg
jecxz
mov
xor
mov
sti
test
mov
ja
nop
adc
pop
jb
rclb
mov
xchg
inc
push
sub
lds
ss
dec
mov
dec
ret
mov
leave
mov
mov
mov
fdecstp
inc
aaa
cld
lcall
pop
cmp
mov
in
repz
and
or
int
or
sbb
mov
mov
cmp
mov
fdivrl
repz
or
mov
cmp
inc
lcall
cmp
jmp
out
out
js
lret
sbb
pop
out
repnz
clc
lcall
cmc
dec
outsl
push
xlat
push
mov
jbe
es
cmp
push
stos
popf
out
mov
cmp
xchg
test
cmpb
rorb
cmpsl
sbb
rcll
filds
stos
pop
inc
icebp
nop
ss
lret
inc
sbb
and
sbb
leave
mov
xor
out
ror
jnp
sub
into
mov
adc
inc
xchg
xchg
mov
fimuls
fcompl
repz
push
das
xor
sti
lods
add
std
mov
call
pop
arpl
jb
test
mov
movsl
cmp
mov
mov
pusha
jmp
pop
mov
add
xchg
xor
jg
pop
loope
in
fldenv
fcoml
cmp
loop
rcl
fisttps
cli
mov
fsubs
std
decl
or
loopne
push
push
pusha
pop
orb
pop
imul
xchg
sub
int
mov
mov
es
es
jle
outsb
dec
mov
lret
cmc
mov
stc
and
jne
dec
aam
scas
stc
cmpsl
or
test
lea
adc
jmp
idivl
divb
jbe
imul
jnp
ret
cmp
scas
push
mov
mov
das
inc
negb
addb
movsl
clc
sub
addr16
fcmovu
popf
and
dec
fs
or
sub
aam
lret
add
inc
mov
xchg
dec
mov
mov
cmc
pop
sahf
bound
cmp
push
push
stos
enter
aad
imul
cld
mov
jecxz
pop
lock
mov
pop
nop
push
dec
push
fildll
out
mov
mov
lret
mov
stos
mov
mov
test
jl
or
lcall
dec
mov
rcrb
pop
xchg
aam
ret
xchg
ja
cmc
jns
mov
or
pop
xchg
fimull
popa
xor
mov
mov
into
pop
push
and
sbb
int
cmpl
cmp
and
push
mov
sbbl
push
out
jb
fldenv
icebp
hlt
jecxz
loope
or
mov
rcrb
mov
lea
push
jae
hlt
jge
in
push
cmp
inc
xor
scas
mov
int
dec
out
js
dec
dec
sbb
dec
cmp
popa
stos
popf
mov
push
sbb
mov
fdivrl
sbb
push
ds
cmp
inc
dec
lahf
jl
imul
stos
and
dec
push
sbb
or
lock
inc
jecxz
jecxz
inc
mov
int
in
out
pop
jmp
cmp
pusha
arpl
lds
lods
lea
mov
add
mov
ret
lcall
xchg
push
or
add
popf
or
mov
ljmp
ret
leave
sbb
flds
xor
popa
or
cmp
jge
stos
and
popw
sbb
dec
mov
inc
mov
cs
out
xor
loop
inc
mul
repz
cmpsb
testb
int3
and
lods
xchg
lcall
dec
dec
popa
push
call
and
mov
jl
lds
mov
mov
inc
inc
pop
lods
mov
cmp
push
repnz
adc
movsl
jo
mov
cli
cmpsl
push
bound
test
pop
mov
in
jbe
jg
int
lcall
adc
adcb
fsubl
xor
pop
test
ljmp
or
jecxz
jg
cmp
fisttpll
adc
nop
inc
jge
repz
jge
sti
ss
subb
dec
imul
cmpsl
stos
aad
outsb
enter
icebp
pushf
push
iret
rsqrtps
dec
lds
bsf
shrl
xchg
add
enter
jae
imul
mov
les
pop
negl
sub
or
xchg
fistps
jmp
sub
pop
jle
lea
ret
and
pop
insb
jb
clc
push
xchg
cwtl
cld
add
push
int
mov
or
xor
fdivrs
pusha
or
jmp
dec
mov
xchg
or
lods
mov
jne
xchg
pop
push
dec
popf
mov
cld
imull
pextrw
bound
ss
int
add
cs
popl
rcrb
xor
divl
inc
xchg
and
scas
inc
mov
xor
arpl
jge
push
out
xor
lret
fcmovnb
enter
ja
aas
xchg
cld
mov
push
ss
fwait
add
test
xchg
pop
stos
mov
xor
stos
or
pop
sub
leave
or
or
inc
movsb
negl
dec
mov
call
or
hlt
jle
xor
and
pop
stos
fwait
push
cs
arpl
push
mov
fsubs
and
lods
mov
inc
cld
cltd
sub
and
les
mov
add
divl
bound
add
aas
pcmpgtb
or
imul
stc
sbb
enter
adc
popa
mov
or
adc
rcr
das
push
jae
and
jae
and
outsb
xchg
pop
cmovs
xlat
mov
lods
js
ss
fldl
stc
cs
dec
cmp
loopne
enter
scas
mov
adc
xchg
xor
pusha
push
push
mov
xor
loopne
scas
dec
xor
xor
pop
xor
test
xor
or
out
mov
stc
sbb
xor
xchg
lret
mov
mov
fildll
dec
mov
std
pop
lcall
insl
lret
pop
cmp
push
or
and
jb
je
push
out
lods
int3
inc
cmp
negl
xor
ffree
out
shlb
lcall
pop
inc
lods
dec
push
imul
inc
dec
sbb
sub
pop
je
inc
pop
sub
jnp
out
inc
std
inc
jnp
mov
jp
sub
mov
pop
xchg
shr
insb
dec
lea
cmp
xchg
rorb
push
jbe
fadd
repz
dec
les
mov
jge
in
cwtl
int
adc
outsl
fdivs
call
pushf
iret
lea
dec
dec
mov
sub
in
cld
fwait
aas
sti
orl
ss
jmp
xlat
insl
and
mov
data16
dec
fwait
sbb
dec
aam
ss
aas
in
push
dec
sub
out
add
int
pushf
jl
hlt
test
test
push
jle
inc
inc
insl
cwtl
sbb
xchg
jl
mov
insb
cmc
rcl
jge
pop
stos
ds
je
js
gs
imul
subl
iret
or
rol
cli
data16
sbb
cmc
pop
mov
add
adc
std
dec
inc
lcall
loopne,pt
mov
pop
pop
je
xor
in
outsb
scas
imul
repz
lahf
sbb
scas
or
inc
lock
rolb
je
lods
pop
dec
sbb
inc
ja
push
inc
jge
xor
mov
dec
inc
inc
fildl
out
into
lods
out
push
out
ja
daa
mov
in
sub
test
ret
xchg
inc
sub
cld
inc
push
jecxz
jl
xchg
sbb
xchg
jl
out
xchg
mov
imul
mov
mov
lahf
mov
aaa
push
movaps
sbb
inc
ret
lods
pop
push
loop
adc
les
dec
dec
mov
test
and
mov
in
movsl
push
xor
mov
es
lds
out
scas
adc
inc
mov
sbb
dec
sub
lahf
inc
mov
pusha
js
sbb
movsb
cmp
mov
adc
repnz
mov
sti
inc
pop
into
arpl
dec
mov
movsl
in
dec
stos
enter
movsl
dec
sbbw
mov
fbstp
ret
push
xchg
loope
je
orb
hlt
lcall
in
or
push
fwait
lret
ret
icebp
popf
outsl
mov
pop
and
sbb
hlt
and
jne
mov
rclb
push
addl
testl
mov
fs
adc
xchg
stc
pop
iret
or
addr16
push
aaa
scas
test
pop
pusha
pop
push
inc
bound
xlat
fcompl
std
in
inc
xor
sub
adc
leave
xor
cmp
mov
add
cmp
scas
adc
inc
cwtl
lcall
mov
xor
add
aad
push
inc
movsl
data16
dec
lret
call
sub
mov
sub
sub
push
call
daa
pop
les
mov
xor
stc
aam
jns
iret
sub
pop
jp
int3
mov
jle
fwait
js
cmp
add
mov
subb
xchg
popf
sbb
push
test
mov
xchg
imul
or
jecxz
imull
call
rorb
mov
and
stc
lock
mov
xchg
and
hlt
jo
pop
ds
lock
arpl
in
paddusb
jmp
add
xor
sub
push
xchg
jno
test
mov
xchg
xchg
and
pushf
rcll
xchg
push
cld
mov
jno
out
out
ja
xchg
scas
lock
es
push
ret
shrb
or
psrad
notl
jl
sub
sub
jp
push
cmp
cwtl
xchg
mov
clc
mov
adc
pusha
loopne
add
std
jecxz
cli
cld
jge
sub
jg
pop
jne
call
inc
sarb
jae
or
loope
dec
lds
jecxz
push
push
lahf
and
or
xchg
scas
sbb
mov
push
in
mov
sbb
xchg
icebp
addr16
xor
cmp
inc
push
xchg
and
and
stos
add
mov
inc
jl
sbb
lods
cltd
and
cmp
xchg
cmpsl
xlat
loopne
vpsrad
adc
stc
aas
clc
push
add
aam
cld
insb
clc
test
movsb
or
mov
inc
mov
incb
pop
mov
ja
stos
inc
dec
incl
js
dec
movsb
insl
mov
inc
xchg
inc
jmp
xchg
cltd
clc
cltd
and
mov
gs
cmp
push
imul
lcall
inc
xor
push
nop
mov
cli
faddp
sbb
pop
scas
hlt
push
fisttpll
sahf
mov
add
dec
cmp
out
cmpb
jle
sti
hlt
fmuls
hlt
adc
push
jno
push
dec
rcll
insb
test
imul
scas
fucomip
xor
xchg
lods
push
mov
out
test
sub
les
in
aad
pop
imul
xchg
cmp
jge
xor
out
int
ret
gs
xlat
mov
jle
and
ljmp
lea
sbb
rcl
push
mov
mov
loopne
sub
outsl
mov
add
mov
in
xchg
fisubl
mov
ja
stc
test
jecxz
cmp
fidivs
mov
pusha
dec
pusha
cmpsl
insb
inc
addr16
enter
fisttpll
fisubrl
cmp
int3
pushf
xorl
int
jl
pop
iret
js
sbb
push
scas
xor
movsb
dec
mov
adc
jns
and
inc
popa
sti
push
jne
jp
or
repnz
in
frstor
add
out
mov
lods
mov
notl
sbb
nop
mov
jne
and
es
into
stos
arpl
sbb
adc
stos
pusha
jnp
in
pop
mov
jl
lods
pop
xchg
or
outsb
int
aad
scas
stos
out
xor
pop
sbb
pop
mov
sub
mov
lahf
sbb
push
dec
jle
fbld
rep
mov
jb
xor
out
outsl
adc
std
ret
sub
addr16
fbld
aam
xor
push
mov
aaa
pop
push
cmp
push
jmp
inc
xor
mov
xor
loop
andb
mov
sbb
mov
add
imul
mov
fldenv
inc
mov
pop
lock
cld
mov
cmp
sub
fdiv
and
fadds
or
aad
adc
ret
out
inc
mov
rol
adc
mov
sti
sti
jg
cwtl
pop
push
out
mov
dec
jo
lock
and
pop
js
daa
pop
fadd
jne
test
xchg
mov
pop
nop
fs
clc
ja
xchg
mov
mov
mov
xor
aas
mov
xchg
dec
iret
mov
add
xor
rclb
subl
inc
jno
mov
and
aas
imul
rcl
dec
cmc
sub
rcrb
scas
sub
enter
xchg
jne
into
popf
xchg
scas
test
mov
std
pop
clc
dec
es
out
push
sbb
fld
scas
mov
cmp
insb
aam
mov
into
lods
repz
mov
inc
outsb
fs
xchg
sarl
adc
lock
fisubs
mov
mov
in
cmp
lea
sbb
stc
mov
sub
cmp
inc
pop
xor
push
insb
jecxz
push
push
and
fldt
ret
mov
aad
and
mov
push
dec
outsb
aaa
mov
or
sarl
adc
xlat
mov
sub
dec
enter
push
sub
cs
fistpl
add
cltd
in
les
div
clc
adc
dec
add
ret
jo
sbb
xchg
movsb
mov
scas
jge
or
xor
add
cmp
pop
or
mov
jmp
xchg
mull
ret
mov
popa
clc
xchg
xchg
jne
imul
popf
xor
popf
js
xorb
pop
push
mov
lds
das
inc
nop
adc
movsb
test
repnz
mov
test
mov
and
out
in
std
in
cmp
popa
jae
dec
xchg
or
jnp
pop
mov
jns
aam
mov
sbb
out
jecxz
loop
adc
sbb
in
push
icebp
aas
lahf
fwait
in
pushf
dec
jns
notb
aam
movsl
dec
and
jp
pop
pushf
pop
fs
fwait
add
mov
or
mov
push
or
inc
int
repz
rcrl
das
mov
and
pop
movsl
sbb
fmull
pop
or
int
push
add
inc
sti
jb
in
xchg
movl
sti
arpl
inc
stos
sahf
loop
sbb
scas
mov
inc
add
mov
xchg
mov
dec
or
test
rcrb
pusha
bound
mov
sahf
lock
jbe
xor
mov
test
into
sbb
inc
leave
cmp
je
inc
pop
lds
sbb
jecxz
mov
and
dec
sbb
test
mov
mov
jae
leave
mov
mov
jecxz
popf
jno
mov
sub
cmp
push
repz
cmp
xchg
adc
push
add
xor
iret
cmp
xchg
sbb
lahf
sub
scas
out
xor
jmp
or
fsubl
cmp
mov
je
push
sub
loopne
pop
insb
mov
adc
pop
jns
scas
jo
mov
scas
ja
loopne
inc
fldenv
sbbl
dec
add
sar
stc
cltd
cmp
mov
and
pushf
inc
push
hlt
out
push
js
icebp
or
lahf
data16
cmc
xor
mov
aaa
xchg
mov
stc
popf
aam
les
pop
inc
icebp
imul
push
rcrl
xchg
aaa
xchg
shrb
inc
mov
dec
subl
sbb
cld
mov
rclb
pop
fdivl
outsb
xor
scas
daa
mov
daa
in
data16
mov
mov
lret
bound
pop
adcb
adc
pop
xchg
push
fisttps
push
fidivs
push
lock
xchg
mov
pop
or
repnz
or
mov
sti
mov
push
test
fidivs
stc
scas
cmp
mov
jmp
jbe
push
aam
lods
add
push
pop
jnp
push
dec
rorb
push
insl
push
out
or
dec
divb
test
mov
jns
dec
sbb
cmp
mov
je
xlat
lcall
jecxz
adc
test
mov
lods
sti
sub
push
lods
inc
out
cltd
xlat
jo
sbb
push
shl
gs
mov
sbb
stos
dec
sbb
sub
dec
in
add
mov
scas
aam
stos
fucomp
fstpt
xor
stc
dec
inc
lcall
test
xor
pop
mov
lock
daa
cmc
das
pop
dec
mov
mulb
xor
sub
test
cmc
jecxz
jl
and
je
cld
and
xchg
jecxz
les
cmp
ss
ret
xor
inc
test
scas
cltd
sub
adc
cmc
inc
xor
rorb
inc
iret
cld
out
dec
add
jg
lret
out
mov
loopne
jne
add
inc
aam
adc
aad
sub
dec
sub
pop
dec
fistl
xor
test
dec
push
cld
icebp
jl
sarb
ljmp
xchg
sbb
sub
popf
aaa
into
mov
stos
je
arpl
push
in
lret
shlb
aad
xchg
std
and
cmpsl
test
cmp
js
add
dec
dec
int3
pop
cmpsl
mov
sbb
shll
mov
and
inc
dec
mov
mov
dec
inc
pop
adc
sub
nop
out
cld
mov
movsb
mov
sub
pop
out
mov
fistps
add
mov
out
gs
lcall
nop
daa
sbb
ljmp
pop
sbb
out
in
fcmovbe
jns
scas
loop
jmp
dec
add
adc
out
push
jbe
mov
xchg
fisttps
pop
mov
call
xor
inc
lcall
sbb
call
xchg
rcll
decb
jp
lret
sbb
lret
filds
push
inc
jmp
stc
jmp
adc
lcall
xor
lods
sub
nop
dec
mov
fisubrl
stos
xor
mov
mul
xor
fsubp
add
sbb
mov
bound
or
xchg
or
in
pop
sub
test
pop
cmp
sbb
pop
loope
mov
lods
mov
sahf
inc
std
aam
lahf
push
in
or
insl
or
adc
cmp
ss
movsb
fidivrl
mov
jns
arpl
mov
pop
out
cltd
in
arpl
sahf
inc
mov
outsl
sub
call
push
ffreep
lods
mov
shlb
sbb
sbb
loop
inc
xchg
push
inc
insl
int3
mov
mov
lcall
cmpsl
addr16
sub
mov
jae
add
xchg
call
nop
cmp
fldt
mov
xor
push
dec
popf
fwait
scas
lods
and
es
mov
xor
loope
dec
cmp
fs
cmp
popa
mov
sub
adc
pop
adc
mov
popa
imul
ljmp
insl
test
push
xchg
sub
ds
les
and
call
inc
ret
fwait
lods
jp
push
lea
shlb
fwait
push
jnp
lret
dec
into
out
pop
in
push
add
or
cwtl
addr16
jmp
sarl
std
cmpsb
cmc
mov
sbbb
xchg
xlat
inc
jge
dec
push
fnstcw
cmp
adc
pop
and
jecxz
pop
fisttps
lcall
jns
pop
dec
arpl
gs
mov
shrb
rcr
and
ds
mov
call
cwtl
out
int3
pushf
jae
xchg
in
call
push
mov
movsl
sahf
leave
sbb
ret
mov
lods
push
push
add
adc
shrl
ret
and
jo
mov
mov
pop
pop
aaa
and
pop
push
jp
inc
jge
or
lock
fst
mov
lods
mov
dec
add
sub
cmc
adc
dec
mov
jp
movsl
and
pusha
xchg
cmp
xor
adc
xor
xor
insb
push
out
loop
js
inc
sbb
mov
add
jo
div
fstpl
pop
fimull
nop
dec
sarl
dec
test
mov
int
dec
mov
fisttpll
imul
push
into
mov
mov
outsb
add
xchg
cld
outsb
daa
mov
xchg
lret
inc
cmp
mov
cmpsb
pop
dec
dec
sub
push
scas
mov
lcall
jnp
mov
aaa
test
xchg
bound
stos
mov
iret
cmp
push
mov
inc
add
out
out
pushw
jle
dec
jp
bound
adc
je
fcmovnbe
je
xchg
mov
aas
push
dec
into
jmp
mov
pusha
leave
fnstenv
adcl
jnp
mov
lds
mov
aad
xor
in
arpl
cmpsl
ss
inc
mov
rcrb
mov
pop
lea
jne
add
test
and
call
mov
cmp
rcr
scas
mov
sbb
les
xor
ds
out
or
je
ficoms
aaa
fadds
pop
cmpsb
cli
and
or
cwtl
push
cwtl
mov
imul
je
push
inc
xlat
pop
rcr
jae
xchg
jo
adc
dec
stos
dec
mov
fsts
popf
jns
push
push
ljmp
mov
xchg
push
fmul
add
pop
xor
push
push
addr16
add
sbb
mov
loop
pop
insl
gs
xor
mov
pusha
into
push
je
sbb
popa
sub
fsubrs
repnz
push
and
cmp
test
iret
xchg
lahf
dec
icebp
mov
subb
dec
inc
mov
jp
sub
mov
sub
sbb
jl
mov
mov
push
or
add
mov
xchg
jle
andl
xor
mov
clc
aaa
das
pop
mov
cwtl
push
aam
lods
mov
mov
dec
shrb
dec
mov
iret
cwtl
mov
mov
clc
mov
jb
test
mov
push
dec
sbb
fadd
or
test
int3
or
jbe
push
repz
cld
mov
icebp
cs
add
xchg
ljmp
pop
loop
sti
push
mov
adc
rcl
add
lods
xor
mov
xor
mov
sub
fcomp
inc
in
mov
jns
xor
mov
or
push
repnz
push
jae
mov
dec
dec
sbb
cli
mov
scas
jb
into
into
push
repz
mov
bound
ljmp
and
jnp
dec
jne
enter
inc
sub
pop
mov
ja
pop
lret
leave
pushf
nop
cli
dec
push
adc
gs
lahf
fidivs
inc
inc
test
inc
jo
imul
xchg
pop
lret
pop
das
xor
adc
mov
test
stos
mov
dec
inc
xor
lret
cmpsl
jge
add
test
sub
adc
out
fcoml
das
pop
rorl
xchg
outsb
add
shrl
mov
cmp
mov
pop
stos
movsb
push
inc
insl
pop
popl
and
xchg
retw
fs
insl
add
push
mov
or
xor
mov
test
shrl
int
idivb
js
das
test
xor
fbld
mov
ret
and
xchg
push
movl
rcrb
jmp
aam
fidivrs
mov
or
jge
clc
jb
adc
mov
iret
fisttpll
mov
jl
hlt
imul
and
xchg
mov
aaa
push
sbb
cmp
cmp
mov
sbb
lods
shr
arpl
sbbl
add
cmp
cltd
push
nop
push
scas
mov
or
sub
inc
pop
sub
pop
in
shl
inc
jg
push
sahf
mov
cmc
out
in
and
stc
imulb
ss
mov
cmp
pop
push
das
pop
aad
dec
dec
out
mov
and
add
dec
jo
lret
enter
pop
adc
sbb
lods
dec
cwtl
or
loope
xchg
push
pop
add
les
push
sub
or
fimull
mov
mov
jmp
xor
cli
in
hlt
sahf
jae
imul
and
pushf
cmp
jmp
mov
adc
pushf
loop
cmp
or
jmp
sbb
lcall
out
loope
pushf
push
push
nop
movb
mov
cmpsl
xlat
jae
xor
dec
xchg
lods
movsb
xchg
shlb
cmp
xchg
and
jo
xlat
sbb
std
outsl
cmp
mov
cmpsl
orb
cmp
insl
jmp
dec
pop
test
adc
pop
jmp
fsubrs
sub
mov
push
inc
inc
cltd
cmp
int
adc
in
outsw
mov
cmp
cmc
sbb
pop
mov
test
js
adc
adc
pop
xor
cli
outsl
xor
and
pop
inc
dec
mov
jle
mov
ror
or
push
mov
xlat
mov
lea
push
xor
pop
cld
dec
jp
push
std
leave
pop
cmp
mov
sub
push
repnz
aam
or
popf
lock
lock
jg
pop
mov
add
dec
push
mov
leave
aam
pushf
std
inc
mov
adc
aas
xor
push
cmp
cmp
xor
mov
repz
cmc
lods
and
lock
pop
or
jge
inc
testl
out
shlb
iret
int
iret
jnp
fwait
hlt
mov
pop
pop
pop
xlat
jns
dec
out
test
jle
pop
xchg
mov
je
in
jecxz
cmp
mov
loope
pop
xchg
and
mov
das
push
cmpsb
and
pop
icebp
sbbb
lock
and
test
into
outsb
out
adc
les
pop
sbb
ret
rcl
or
jne
xor
cmp
fstpl
sbb
inc
cld
xor
jo
inc
lock
repz
mov
gs
out
xchg
mov
push
iret
mov
aas
sbb
adc
data16
mov
icebp
push
fst
mov
insl
mov
stos
inc
fsubrl
push
and
lea
nop
inc
lds
mov
int
push
adc
ret
push
scas
stos
sub
mov
xor
addr16
inc
rcl
insb
andb
inc
or
dec
lret
jns
lret
lods
out
fwait
sbb
fstps
or
xlat
pop
hlt
test
arpl
sbb
add
ds
imul
adcl
pop
int3
push
enter
xorb
push
pop
hlt
outsl
leave
add
shr
fstps
inc
sar
lret
test
push
mov
mov
scas
in
in
dec
adc
xchg
lcall
xchg
cmp
or
mov
fistps
sahf
and
rcll
mov
pusha
cmpsb
or
xchg
adc
mov
rolb
icebp
out
push
inc
inc
xor
jno
or
and
jno
pushf
popa
lret
or
loopne
cmovle
dec
xor
les
inc
push
xor
rcrl
fiaddl
xchg
test
pop
jecxz
xor
kmovw
jns
lret
xchg
dec
mov
popf
loopne
aas
loop
mov
xchg
jae
push
das
hlt
mov
divb
mov
and
mov
mov
rcrb
inc
and
push
daa
fst
cmpsb
add
fbld
lods
pop
dec
xlat
inc
lret
or
cltd
adc
pop
sbb
cltd
or
jb
sub
int
and
fwait
cmp
ja
enter
cmp
ret
pop
pushf
repnz
mov
dec
xlat
mov
aam
mov
sahf
or
test
adc
dec
push
mov
inc
insb
jns
adcl
daa
dec
and
or
shlb
xor
push
pop
jnp
dec
and
shlb
xchg
jno
cmpsl
adc
rol
test
or
shrl
scas
icebp
dec
xlat
clc
mov
add
add
add
xlat
xchg
es
rcr
ret
pusha
mov
and
outsb
mov
mov
mov
jne
test
test
cld
fwait
xor
and
cmp
mov
mov
add
out
jb
fisubs
pop
ja
add
incl
pop
add
test
inc
test
jbe
and
and
negl
fwait
xlat
roll
gs
sar
dec
mov
lods
sub
addr16
push
ror
adc
mov
pop
sub
dec
movsl
inc
cmpsl
xor
mov
jne
out
mov
mov
or
cmc
mov
fcomps
enter
movsl
call
lahf
mov
call
ret
push
std
dec
jge
mov
xchg
out
cmp
cmp
jo
push
into
orb
jne
mov
les
dec
inc
and
mov
xchg
sbbb
leave
xchg
push
mov
dec
in
movsb
stos
dec
cs
adc
arpl
dec
imul
pop
pop
xor
aaa
jmp
in
push
and
faddl
cmp
test
mov
inc
pop
aad
cwtl
pushf
call
inc
imul
inc
sbb
push
lret
add
add
jge
jne
aaa
lret
push
pop
lahf
int
pusha
push
adc
inc
cmp
jecxz
test
stos
repnz
add
repnz
pop
mov
in
xchg
hlt
testb
push
mov
insb
rolb
aam
mov
push
and
push
stc
xchg
lret
mov
fadd
hlt
sub
cli
add
push
in
inc
push
mov
inc
fldl
jns
aam
outsl
inc
in
loope
ds
lret
xor
pop
movsl
jecxz
pop
insl
mov
idivb
adc
imulb
sbb
xlat
or
or
adc
jge
push
lcall
int
aas
dec
test
stos
dec
dec
divb
mov
inc
or
sarb
jge
add
push
add
lcall
fdivr
loope
mov
fstp
xchg
push
rcrb
je
les
out
in
mov
push
or
xchg
sbb
int
rolb
gs
ret
cmp
ja
iret
data16
add
pop
xchg
stos
sub
pop
xchg
or
dec
cltd
test
bndldx
daa
and
push
xchg
pop
jnp
add
add
and
std
cmpsl
sub
hlt
adc
mov
mov
xor
inc
rorb
sbb
mov
jg
cmp
loope
repz
fidivs
shl
inc
repnz
mov
push
adc
repz
sub
jge
cwtl
mov
inc
das
pop
inc
xor
pushl
addl
sbb
shll
adc
loope
add
repnz
lock
fcoml
or
xor
mov
rcrl
icebp
add
jbe
push
movd
loopne
sbb
fsts
jbe
mov
rcrb
cmp
out
sbbb
in
stc
adc
mov
pop
push
mov
sbb
jl
xor
xchg
gs
enter
repnz
or
pop
js
clc
movsb
sub
aaa
std
bound
pop
fisubrs
push
outsl
mov
cmc
jmp
div
pop
lea
mov
xchg
out
loope
mov
and
fmuls
add
sbb
aad
inc
or
sahf
loop
notb
mov
pop
hlt
js
sub
mov
aas
push
call
xchg
iret
in
jb
mov
mov
pop
mov
and
mov
fimuls
icebp
or
or
in
cmc
and
js
pop
jno
mov
scas
sub
mov
mov
dec
sbb
mov
scas
shll
mov
or
out
notl
mov
and
sub
cmpb
ljmp
aaa
fmuls
push
mov
rolb
or
adc
outsb
fwait
xchg
xchg
cmp
mov
out
cwtl
mov
and
inc
sub
pop
pop
sub
sarb
orb
sub
arpl
out
mull
xchg
mov
adc
adc
sbb
dec
popf
stc
fsubs
and
sti
inc
fists
out
pushf
mov
repz
mov
shll
roll
mov
bnd
push
and
pop
inc
ficoml
pop
repz
jno
shrl
fdiv
pop
jae
insl
mov
mov
lret
push
rorl
and
dec
cmpsl
push
icebp
in
sub
push
ret
pusha
fcomip
add
test
arpl
movsb
pop
not
je
xlat
mov
jnp
mov
xchg
jno
clc
push
std
sub
adc
cmpsb
mov
enter
cmpsl
test
mov
stos
xor
repz
mov
repnz
dec
outsl
dec
daa
outsb
shrb
mov
in
lahf
mov
repnz
add
movsb
add
jbe
pusha
insb
push
or
pop
push
mov
clc
sbb
xchg
sbb
das
and
hlt
mov
orb
loopne
cmp
jo
cmpsl
jnp
out
inc
dec
int
xchg
dec
jle
fldt
jp
sbb
aam
dec
mov
pop
adcb
mov
mov
mov
popf
out
jae
popf
outsb
cmp
lea
mov
stc
sub
ret
dec
orb
ret
jge
imul
mov
lock
sbb
adc
shrb
iret
jecxz
push
or
cmpsb
movl
adc
lds
inc
push
push
rolb
icebp
js
cli
xchg
cmpsl
cmp
or
icebp
outsb
lea
mov
into
imul
std
outsb
mov
xor
mov
dec
test
in
ja
sub
adc
insb
dec
pusha
mov
jbe
int3
pushf
jns
mov
lea
aam
adc
imull
or
mov
jb
sbb
cmc
mov
aas
or
push
nop
jo
es
inc
adc
test
testl
mov
jae
data16
fidivs
push
push
outsl
imul
jne
jmp
adc
sti
into
mov
mov
push
push
push
psrld
adc
icebp
stc
jnp
rorl
cmp
fdivrs
jge
push
push
shrl
inc
les
sbb
push
dec
xor
je
lcall
inc
ds
sbb
pop
mov
xor
xlat
add
out
lcall
jns
scas
stos
pop
xchg
sub
push
jmp
jb
jnp
mov
cmp
and
jae
and
adc
sarb
out
or
add
sub
jp
pusha
jmp
xor
gs
fisubs
insb
mov
sti
out
push
rcrb
aas
dec
outsb
daa
sbb
int3
iret
pop
mov
test
test
mov
add
out
xorb
movsb
gs
xchg
add
mov
xchg
shrb
mov
stos
adcb
xor
imul
dec
dec
dec
insb
mov
dec
lcall
and
jecxz
push
cmp
push
sahf
add
mov
mov
insb
mov
dec
jne
filds
dec
jp
push
adc
push
and
out
dec
mov
nop
cmp
loop
pop
mov
mov
xorb
push
and
shlb
pop
dec
jne
jg
mov
fstl
mov
sub
rcll
test
xchg
mov
int
jbe
test
shll
cli
movsl
notb
xchg
mov
sub
cmpsb
std
add
shll
and
sti
jecxz
movsl
add
loop
jle
mov
xor
xlat
cltd
or
data16
pop
mov
inc
or
xchg
jge
mov
jbe
out
mov
sub
push
adc
cmp
pop
aam
add
dec
mulb
ds
pushf
jle
rolb
lret
int
xor
call
mov
jmp
cld
or
adc
inc
fidivl
inc
fdiv
adc
jmp
inc
fidivrl
int
jno
ficomps
mov
mov
pop
setne
adc
push
in
pop
ja
test
out
int
push
sub
pop
mov
mov
sbb
xlat
inc
adc
pop
pop
in
add
adc
xchg
jp
sub
jae
xchg
and
cmp
ja
inc
push
lret
inc
lret
dec
pop
wrmsr
xor
nop
iret
sub
jp
fcmovb
mov
adc
jmp
ja
lock
mov
adc
mov
enter
aad
in
xlat
pop
ret
lret
cmc
jo
iret
adc
jle
xor
shl
lea
jp
testl
popa
mov
test
cmp
sahf
outsl
mov
mov
ljmp
mov
fadds
push
mov
cld
cmp
cmp
sti
popf
add
push
xorb
push
inc
push
jbe
or
cmp
inc
loop
add
cli
mov
jnp
jb
hlt
mov
in
stos
cmc
sub
mov
pushf
mov
xor
add
cmp
scas
clc
das
jecxz
cmp
or
cltd
sbb
scas
jno
std
jns
mov
push
into
test
les
xchg
inc
cmp
push
jbe
fmuls
mov
data16
xor
test
inc
mov
dec
fwait
jno,pt
popl
ret
out
mov
je
sub
inc
mov
fmuls
push
jns
xor
pop
ljmp
arpl
lods
jne
fdivl
add
cmp
scas
ret
adc
hlt
cmp
and
push
es
mov
lret
jns
rcll
into
xchg
arpl
adc
and
dec
mov
jecxz
or
jmp
sub
bound
jmp
lcall
add
lret
add
inc
in
inc
lock
out
or
xor
shll
inc
lds
into
or
jecxz
repz
mov
das
cmp
cmpb
pop
inc
scas
and
out
sbb
data16
jl
int3
test
cmc
subb
nop
loop
sbb
and
and
arpl
mov
adc
xor
outsb
mov
dec
aam
cmp
xor
sahf
jle
xchg
jno
out
pushf
js
cwtl
das
and
mov
mov
mov
dec
mov
mov
xor
push
fldl
std
jecxz
and
inc
cwtl
dec
lahf
and
mov
sub
insl
push
fildl
mov
in
pop
les
pop
push
push
xchg
daa
lock
mov
mov
loop
pop
popf
xor
lea
dec
movl
mov
sahf
pop
ffree
fdivs
inc
das
loope
jns
mov
stos
mov
test
xor
mov
std
and
xor
jmp
notb
mov
dec
pop
jg
shll
fxch
sahf
mov
stos
jns
jp
fsub
sub
movsl
cltd
aad
and
pop
and
sbb
mov
insb
xlat
inc
orb
sti
lahf
dec
out
adc
daa
lea
ficoms
mov
mov
aam
cmp
or
fstps
mov
or
dec
aas
sub
xor
xor
sahf
mov
int3
test
stos
rcl
shrb
adc
ja,pt
jp
in
adcl
mov
imul
scas
scas
lods
jb
and
push
push
rol
inc
mov
add
inc
loope
jmp
imul
ficomps
inc
add
push
dec
addb
xor
bound
sub
mov
insb
lock
fs
sub
stc
push
je
out
adc
pusha
je
xor
shlb
std
outsb
lcall
loopne
or
add
gs
lahf
mov
inc
test
out
mov
or
stos
sub
pop
jno
lds
in
cmp
sub
pop
ss
out
outsb
or
xlat
stos
jg
cld
rcr
pop
adc
push
xchg
jne
cmp
ret
push
mov
or
aam
adc
mov
aam
jbe
mov
mov
xchg
xchg
push
rorb
das
xlat
pushf
jl
inc
inc
lea
dec
imul
cli
int
xor
mov
test
daa
sub
xor
aad
inc
push
jg
cmpsl
je
mov
test
mov
jg
inc
mov
testl
rcr
pop
loop
les
shlb
ds
mov
scas
xorb
aas
mov
or
lock
inc
int
cld
mov
ret
mov
addr16
sub
ret
mov
push
nop
cwtl
adc
mov
inc
scas
loopne
rorl
dec
mov
xor
xor
sbb
sub
xchg
mov
aaa
fimuls
pop
inc
inc
xor
adc
test
dec
iret
in
repz
or
data16
and
lock
or
pop
mov
sbb
push
fdivrl
xchg
rorb
push
push
inc
in
movsl
jnp
fimuls
out
js
ret
hlt
mov
pop
sub
shr
lahf
jb
jno
sbb
repz
adc
lahf
xor
int
out
mov
loop
and
enter
and
lret
jp
pop
dec
aad
js
bnd
fs
out
fs
jge
sbb
cmp
pop
fisubrl
push
or
xchg
rcrl
dec
pushf
jl
out
jne
out
inc
sbb
jecxz
or
and
cmp
ss
out
mov
lods
xchg
fadds
inc
lret
pusha
scas
sbb
and
popf
scas
jbe
mul
xchg
mov
sub
pop
mov
cli
pop
imul
fdivrs
dec
int3
xor
addl
cmovno
jl
jg
cmpsb
or
je
dec
add
idivb
divb
mov
sahf
aam
xchg
out
dec
mov
clc
jne
rorl
xchg
xchg
data16
sbb
scas
ret
sub
lds
subb
out
fwait
dec
jle
loop
jmp
jle
xor
test
rcr
fcmovnbe
jmp
sbb
cmp
jo
out
adc
push
popa
push
pop
pop
pushf
cmp
test
rclb
or
sub
cmp
pop
push
testb
scas
aas
adc
clc
sarb
mov
mov
loopne
sahf
lea
lea
adc
scas
dec
out
negb
lea
cwtl
push
arpl
testb
push
adc
divb
mov
jae,pt
inc
mov
roll
rcrb
sub
lods
mov
push
out
femms
out
sub
inc
mov
ret
xor
xchg
dec
into
fisubs
push
mov
mov
mov
movsb
scas
nop
lea
out
aas
jne,pn
pop
mov
aam
xor
stc
adc
xchg
jns
xchg
clc
movsl
idivl
es
hlt
mov
lods
test
insl
loop
or
ds
xlat
xor
gs
fcoms
aaa
xor
test
mov
jno
cmpsl
vpshuflw
and
mov
jmp
sub
aaa
xor
mov
out
dec
repnz
stc
and
mov
xor
xor
mov
jle
adc
rorb
or
add
nop
loopne
ficoms
and
mov
xchg
jo
xor
add
add
aaa
push
sbb
jp
xchg
pop
pop
adc
cmpsl
adc
lods
or
pusha
mov
add
outsl
xchg
add
inc
aas
pop
jns
mov
int
rcr
xchg
push
inc
dec
lret
mov
shl
test
inc
pop
inc
sub
cmp
leave
sbb
xor
cld
cmp
jp
addr16
out
push
adc
push
mov
sbb
sub
lods
adc
sbb
fldl
xor
add
insb
and
lods
iret
adc
mov
cmp
cmp
xchg
dec
xor
fcoml
cmp
sbb
in
test
and
xor
and
xorl
jo
test
sbb
jmp
push
adc
dec
mov
out
xchg
cmp
mov
pop
cli
rcrb
mov
out
mov
subl
je
fcmovnu
xor
fists
mov
fildll
mov
adc
enter
sbbl
sbb
fldcw
dec
addr16
pop
repz
aad
mov
shrb
pop
mov
int
popa
shll
cmpxchg
jge
and
mov
enter
push
adc
bound
daa
cmp
int3
xchg
push
ljmp
and
mov
jo
adc
or
dec
lock
je
push
dec
xchg
ret
ror
push
nop
outsl
int
sbb
dec
add
pop
xlat
and
mov
stos
ljmp
rcrb
pusha
cmpsl
xor
mov
insb
in
test
cli
int
xchg
xchg
lock
cmp
shll
repnz
mov
mov
test
add
test
jg
jmp
fwait
adc
mov
cmpsl
clc
in
pop
lods
jecxz
insl
rorl
xchg
shrb
jnp
nop
dec
ret
push
pop
bound
bnd
cmpsb
repnz
mov
popf
wbinvd
iret
sbb
cmpl
pop
or
stos
pop
mov
add
fsubl
fcmove
ret
cmp
das
dec
fildll
aas
icebp
fcom
aas
test
cmc
sahf
dec
mov
icebp
icebp
out
sub
push
dec
inc
les
mov
jbe
cwtl
adc
push
xchg
rcll
or
clc
test
mov
ds
scas
test
jne
or
sub
mov
js
mov
dec
test
mov
fnsave
jmp
and
sbb
addb
or
aas
js
idivb
mov
pusha
gs
mov
sbb
movsl
xchg
into
push
sar
mov
lds
js
fiadds
scas
jno
test
push
jmp
iret
sbb
sbb
imul
add
leave
imul
loop
pop
sub
test
cli
cmpsb
mov
insb
movl
cmp
stos
mov
push
mov
ljmp
dec
fcomps
xchg
adc
bound
sahf
call
loope
outsl
xorb
fsubr
hlt
pop
inc
outsl
imul
pushf
cs
call
xor
jmp
xor
inc
test
sub
or
inc
and
add
or
dec
and
add
add
add
add
add
add
add
add
jb
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
.byte
cmpsl
