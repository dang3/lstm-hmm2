cmp
nop
xchg
jmp
push
push
hlt
stc
sub
xor
andl
sahf
mov
test
fcmovb
push
int3
mov
pop
aad
push
mov
adc
add
lret
inc
adc
or
or
lcall
mov
push
dec
sub
test
aam
mov
stc
dec
gs
jns
je
adc
mov
dec
in
mov
push
sub
mov
or
popa
cmpsb
cmc
ja
lea
push
mov
push
mov
in
or
lcall
insl
je
imul
adc
add
testb
mov
lret
scas
pop
mov
outsb
lahf
jne
imul
lahf
jne
lahf
cmp
xor
iret
pop
sbbl
push
xor
test
mov
cmp
mov
shlb
clc
lea
gs
lret
xor
xchg
enter
std
xchg
add
mov
adc
repnz
push
jne
jle,pn
mov
lods
jle
int3
mov
and
lods
jbe
inc
aaa
cmp
mov
sbb
sbb
sub
test
mov
push
inc
je
xchg
es
cmp
in
inc
scas
push
dec
xchg
mov
movb
fadds
movaps
mov
fiadds
lret
sub
insl
es
and
inc
adc
leave
rorb
loope
dec
sbb
jmp
mov
popf
in
icebp
enter
mov
adc
hlt
fistpll
mov
jp
sub
lea
pop
stos
push
jecxz
imul
pop
lods
mov
scas
mov
loope
inc
fidivl
xor
ficoml
or
or
xchg
repz
cltd
or
adc
dec
xor
add
cmovl
or
les
jae
and
add
and
pop
test
adc
pop
ljmp
and
fidivrl
shlb
outsb
pop
fildll
stc
push
dec
lods
ja
ja
mov
cmc
mov
xchg
ror
or
jbe
repz
or
cmpsl
insl
inc
xchg
mov
shl
rcrl
fsubs
push
je
pop
jne
or
mov
inc
stos
dec
test
pop
xor
push
inc
xor
jl
pushf
xor
iret
jecxz
pop
insb
sti
adc
insl
int
out
std
in
push
ja
lret
mov
ja
mov
xor
adc
inc
push
out
hlt
sbb
test
mov
dec
outsl
inc
ffreep
inc
adc
jmp
pusha
ds
mov
cmp
out
daa
push
and
adc
subl
add
sbb
or
add
add
cmp
mov
jbe
insb
mov
and
cmp
sbb
mov
xor
lea
aam
sub
xchg
std
ret
out
sbb
inc
fisubl
test
cmc
pop
int3
jo
das
mov
lret
fildll
mov
push
imulb
pop
jb
daa
das
pop
imul
xchg
cltd
into
pop
add
push
in
sbb
pop
jecxz
inc
cmpsl
shrb
call
cmpsl
in
jae
add
imul
out
nop
dec
fs
movl
fcoms
and
ret
push
in
push
in
inc
arpl
addr16
inc
jg
jge
xchg
cs
adc
dec
inc
test
jg
mov
fs
cwtl
adc
adc
in
cmp
inc
pop
imul
shlb
out
frstor
out
push
mov
call
mov
ret
loopne
pop
xlat
imul
je
out
or
jl
mov
dec
fmuls
icebp
pop
imul
cmc
cs
mov
lahf
dec
adc
or
int3
cwtl
sahf
sbbb
push
pop
pushf
xchg
fmul
fstps
push
ljmp
mov
cld
mov
mov
in
sub
pop
jg
sub
shll
repnz
push
xor
inc
xor
hlt
fnstenv
adc
pop
ljmp
pop
and
mov
clc
rcr
daa
push
sbb
push
rclb
subb
daa
movsl
cmp
mov
imul
sar
es
inc
push
aas
mov
fcoml
stc
xchg
ror
fmull
sbb
jns
test
mov
aam
test
jg
and
xchg
push
loopne
push
loopne
pop
loopne
cmp
stos
cmp
call
sub
iret
decl
sub
test
mov
jg
daa
or
xor
push
out
xlat
jp
adc
aaa
adc
loope
jns
adc
push
push
inc
xchg
cmpsb
into
cmp
shl
ss
test
xor
rolb
cltd
push
cltd
and
xchg
mov
mov
sbb
dec
cmc
test
xlat
xchg
xchg
dec
sub
sbb
xor
sbb
mov
adc
push
notb
jns
cs
pop
popl
rcrl
jnp
in
test
push
xchg
loopne
in
push
mov
adc
mov
mov
js
shl
push
inc
aad
cmp
stos
stos
stos
or
ror
int
fstps
pop
dec
pop
xchg
mov
lock
jo
stos
sbb
pop
xor
jae
mov
ja
rclb
cmp
fbld
push
dec
jecxz
cmpsb
cmp
int
ljmp
fisubs
addr16
lea
loopne
xchg
aam
rcrl
cli
jle
mov
xchg
or
negl
mov
mov
pop
cld
cmp
fs
jbe
jmp
jmp
ret
push
fdivrs
fiaddl
and
jno
arpl
lods
or
xor
pop
ror
pusha
push
jnp
push
add
pop
pop
push
push
mov
pop
pop
test
mov
cld
or
jbe
push
or
pop
xor
nop
push
pop
push
ror
pop
jno
stc
rol
push
inc
pop
jl
stc
jp
cmp
add
cld
ror
push
pop
call
jge
push
ror
pop
cmc
std
cld
clc
mov
add
loop
jecxz
xchg
xor
jno
daa
ret
inc
jle
jnp
push
pop
push
and
pop
xor
cmc
push
add
mov
pop
je
push
push
pop
pop
dec
inc
jnp
and
test
clc
push
pop
jmp
and
mov
adc
hlt
cld
sbb
inc
out
mov
mov
int
push
add
push
pop
pop
push
push
push
add
pop
pop
pop
and
cmp
cld
push
test
pop
push
mov
pop
stc
jb
cld
test
push
xor
pop
shl
xor
add
push
mov
pop
jb
push
add
pop
or
jo
cmp
sub
jnp
addr16
addr16
push
push
pop
pop
push
inc
dec
pop
test
jne
jmp
push
mov
pop
rol
cmc
and
push
add
pop
jns
jg
add
sub
push
sub
pop
or
inc
dec
clc
nop
xor
jmp
pop
xorl
xchg
fisttpl
pop
mov
sbb
mov
popf
in
mov
in
cmpsl
xor
shlb
push
pushf
or
ficompl
les
iret
push
xchg
movsl
xchg
mov
pop
jmp
je
sub
test
and
sub
xor
fbstp
xor
jns
imul
sub
lcall
stos
add
test
and
push
call
ret
int
sub
mov
push
or
sti
popf
repz
or
stos
adc
clc
mov
push
pushf
or
dec
jne
and
jp
push
jge
rol
pop
or
test
cmc
xor
je
loop
jecxz
sbb
jge
mov
add
sti
arpl
test
scas
mov
jmp
jmp
call
jnp
ret
es
call
xor
pop
inc
imul
repnz
add
clc
cmc
cwtl
sti
xchg
mov
mov
leave
fildl
mov
cld
jne
hlt
bound
add
test
add
aas
int3
cmp
push
int
jge
pop
loop
sbb
jmp
jp
mov
outsl
stos
pop
repnz
jmp
xor
sbb
repz
cmp
rcrb
clc
add
pop
test
cmc
loopne
xlat
shr
cmp
xor
out
mov
lret
clc
cwtl
dec
mov
or
dec
subb
push
scas
out
int3
push
add
add
fsub
lcall
lock
and
repnz
rolb
insb
pop
pop
push
scas
cmpw
adc
mov
mov
daa
and
mov
adc
outsb
sbb
mov
mov
ljmp
adc
adc
jg
inc
nop
push
iret
loope
or
push
je
xchg
sub
sbb
jg
call
outsl
sbb
das
mov
jp
je
jecxz
out
aam
lahf
add
sbb
das
test
orb
push
imul
cwtl
data16
rcr
pop
mov
loopne
xchg
lahf
xchg
mov
cmp
jb
decl
and
adc
jmp
push
das
add
xchg
int
jle
out
dec
int3
inc
sub
sub
mov
push
sti
test
mov
sarl
adc
insb
inc
sbb
push
mov
jmp
push
or
mov
mov
mov
inc
dec
push
mov
jl
push
pusha
push
cmc
idiv
mov
sahf
push
add
adc
xchg
mov
pop
imul
ret
inc
pop
test
cmp
in
cmpsb
jno
pushf
scas
cmp
nop
pop
jg
shll
call
mov
orl
int
cmpl
push
rolb
fidivrs
mov
enter
xchg
loope
add
movsl
mov
cwtl
pop
outsl
cltd
adc
push
std
movb
dec
mov
sbb
mov
sbb
shll
xchg
inc
jp
icebp
adc
sub
push
cmpsb
rcr
inc
repz
push
repnz
sub
or
je
mov
push
insb
mov
mov
lret
cmpsb
mov
lock
call
ja
shl
sbb
pop
add
push
mov
dec
add
xchg
push
sub
xchg
pop
fcmovnb
sarb
sbb
or
out
add
jmp
xor
fadds
sbb
push
xchg
mov
push
sub
push
imul
outsb
add
mov
dec
and
cmp
rep
jge
jb
pmuludq
fwait
xor
or
lret
jo
xchg
repz
adc
int3
sub
aaa
or
adcb
jl
in
mov
jge
jb
mov
pop
loop
sbb
in
mov
mov
jae
sbb
sub
inc
stc
lods
int
in
daa
les
int3
push
subb
movsl
push
push
add
jge
jp
int3
jge
mov
stc
dec
imul
inc
fistpll
xchg
das
mov
mov
pop
xchg
xchg
gs
nop
aas
dec
arpl
popa
lahf
loope
pop
frstpm(287
add
adc
repz
fs
lahf
icebp
aam
mov
mov
sbb
mov
cmp
pop
mov
cmp
mov
imul
sbb
leave
fists
dec
lock
mov
jno
fwait
sub
xor
xchg
test
insb
jmp
lahf
xor
in
push
repz
fstpl
cmp
cwtl
lret
mov
imul
mov
pop
hlt
inc
clc
push
jecxz
push
out
mov
mov
iret
lahf
testb
push
mov
lahf
pop
mov
pop
shrl
dec
mov
jecxz
mov
push
lcall
and
loop,pn
mov
sub
add
dec
cmp
push
mov
das
mov
mull
cli
in
outsb
cmp
pop
movsb
xor
mov
ljmp
loop
cmpb
stos
push
rolb
js
xchg
out
sub
aam
inc
stc
jmp
ss
test
loopne
push
cli
pop
lea
jg
sub
fscale
bound
add
pop
ror
loope
jae
sub
mov
sbb
lret
fcmovne
xor
mov
mov
cmp
cltd
sbb
and
test
mov
jl
add
and
pop
in
cmpsl
and
addb
insb
push
xor
mov
cmp
dec
jl
daa
stc
and
push
mov
in
push
cs
inc
jle
fsub
sbb
inc
lret
scas
cmp
outsl
pop
cwtl
push
jp
or
push
add
jecxz
xor
mov
push
ret
stos
adc
or
mov
sub
push
adc
jne
nop
push
pushl
dec
out
imul
cmp
jle
icebp
mov
mov
jo
mov
cmp
jl
adc
jle
xchg
xor
rorl
cwtl
cmpsb
mov
in
jecxz
pop
bound
out
push
pusha
dec
inc
jae
mov
jmp
in
daa
ja
or
push
sbb
jns
pop
out
int
pop
mov
pop
push
imul
adc
popa
push
sbb
imul
jb
loope
xchg
mov
mov
fldt
xor
sbb
add
push
jbe
or
sti
ficoms
xchg
xchg
sbb
aas
aas
imul
test
je
cli
sbb
pushf
rorb
ficompl
cmpb
mov
in
enter
gs
xchg
add
push
xchg
out
jmp
in
pop
xchg
jnp
insb
pop
jno
cmp
inc
xor
icebp
repnz
sbb
inc
mov
pop
pop
inc
cmp
insb
xor
insl
mov
jnp
popf
sbb
std
subps
ret
xchg
roll
and
mov
mov
lret
cmp
jae
ffree
add
add
sub
loop
fs
push
lock
mov
hlt
fidivs
inc
ljmp
or
jge
xor
std
shl
push
fidivl
mov
mov
pop
jbe,pt
mov
add
shlb
nop
adc
xchg
dec
push
iret
cmp
cmp
pop
jo
loopne
or
add
je
orl
add
dec
push
faddl
imul
in
test
xchg
xor
into
mov
xchg
mov
rcrl
or
push
clc
xlat
test
notl
movsl
cmc
lahf
stc
inc
test
and
mov
cmpsl
sub
or
sbb
jl
sbb
push
ret
out
cmp
mov
cmp
mov
fs
adc
cli
and
adc
fcomps
pop
shlb
shlb
in
stos
xchg
mov
sub
dec
push
push
dec
xchg
push
cmp
ret
testl
push
mov
repz
adc
call
cmp
sub
shll
jge
mov
enter
mov
dec
mov
and
push
ror
addr16
cmp
cmp
ljmp
stos
dec
movsb
or
mov
xorl
vfrczpd
sti
test
mov
sbb
decb
or
test
push
fmuls
inc
add
cmp
jne
ljmp
push
ror
popf
lret
popa
add
jo
dec
mov
jb
xor
fwait
daa
loopne
repz
xor
add
iret
repz
lahf
mov
add
or
std
out
dec
or
inc
add
dec
pusha
lret
push
iret
inc
push
scas
mov
xor
mov
xchg
and
outsl
xlat
xchg
push
jne
mov
mov
or
cs
addl
repz
adc
test
sub
cltd
or
adc
push
scas
stos
pop
addr16
xchg
mov
jle
sbb
adc
inc
std
bnd
or
dec
lds
pop
cmp
push
push
test
loop
adc
lods
cs
sub
jb
ljmpw
cltd
aas
add
inc
leave
lret
dec
fiadds
mov
mov
inc
inc
stos
or
add
add
into
jns
jns
mov
adc
pop
sub
push
fisttpll
jmp
fs
std
and
inc
mov
mov
pop
xchg
lret
mov
push
mov
cmp
loop
jecxz
mov
in
cmc
not
and
sub
and
je
test
lds
mov
jo
xchg
sub
dec
push
pop
add
mov
lcall
dec
daa
cld
add
push
mov
sub
cmpsb
or
cmp
mov
dec
into
mov
sub
bnd
addr16
inc
jne
adc
js
fdivs
cmp
pushf
shlb
adc
pop
leave
ret
in
push
dec
add
jb
das
xor
icebp
pop
rclb
int3
inc
lods
movsl
je
jno
sub
sub
and
and
mov
in
push
pop
int
pop
pop
mov
imul
adc
mov
popa
push
rep
sbb
push
fimull
inc
add
das
sahf
jmp
stos
mov
mov
mov
pusha
mov
scas
or
iret
lcall
jg
stc
outsb
leave
adc
loope
cltd
sub
or
cvtps2pd
ret
test
lds
movaps
lahf
inc
mov
mov
or
test
loop
jp
mov
pop
xchg
sbb
lods
adc
jbe
out
cmp
add
inc
push
add
jnp
sub
and
jne
shlb
xchg
xchg
ja
inc
and
pop
sbb
push
pop
out
rcll
dec
mov
ficompl
inc
cmc
adc
or
leave
aam
fadds
movsl
fbstp
jno
push
insb
pusha
stos
push
daa
aaa
lods
idivl
cmpl
mov
jle
insb
nop
out
jo
int
popa
ret
int
mov
js
dec
lret
mov
xor
jl
mov
or
xor
sahf
lret
lahf
add
pop
and
into
sub
repnz
dec
stc
lea
push
iret
add
gs
hlt
mov
pop
jne
cld
pop
inc
jge
pusha
cltd
testb
mov
inc
or
hlt
and
ljmp
adc
daa
sub
shll
cmp
leave
lea
jbe
pop
inc
mov
jbe
push
pushf
mov
pop
xor
push
in
mov
ret
std
pushl
adc
ljmp
add
cmc
das
lods
and
mov
les
popa
xor
arpl
shll
push
lahf
push
dec
ja
jnp
dec
movsl
pop
daa
popa
adc
leave
lods
aaa
dec
xor
mov
fadd
sub
jmp
push
sub
call
cld
or
push
dec
jecxz
stc
mov
push
imul
cmp
cmp
shr
pop
sbb
nop
les
iret
jae
in
enter
int
inc
mov
xor
cmp
mov
push
andb
inc
xchg
xchg
xor
mov
lods
mov
dec
cltd
jp
fnstsw
and
outsb
in
xor
or
xor
cmp
adc
push
pop
aad
mov
mov
into
pop
cs
mov
and
and
push
lret
dec
push
aad
mov
add
lret
xor
outsb
dec
sub
mov
mov
jo
lret
sarb
pop
jae
rorl
ret
sub
test
push
fsubrs
xchg
mov
mov
push
jns
cmp
cmp
jo
jbe
aas
hlt
mov
pop
xor
imul
push
es
jns
jg
add
mov
int
sub
repz
or
and
and
das
sub
roll
out
out
push
mov
fisubrl
mov
loope
idivb
test
inc
icebp
sub
icebp
push
movsb
in
aas
outsl
in
push
jle
adc
jbe
adc
pusha
jbe
jb
imul
pop
mov
icebp
int3
mov
mov
cmp
ss
push
and
lods
imulb
or
hlt
jge
ficoms
ljmp
ja
daa
xor
call
pop
jo
sahf
inc
sub
add
call
add
dec
nop
out
inc
leave
pusha
scas
insw
lock
or
test
xchg
int3
sbb
sbb
sarl
test
adc
pusha
inc
jbe
lea
sbb
push
sub
and
or
ror
imul
arpl
jmp
rcr
mov
adc
mov
dec
scas
cmovne
fwait
aam
ss
mov
mov
mov
lods
pop
adc
aad
xchg
outsl
out
popf
sub
std
jmp
push
lcall
xchg
scas
inc
shll
inc
jle
mov
xchg
xchg
fdiv
xor
int
dec
push
inc
and
pop
aas
sbb
lods
xchg
add
pop
fs
and
and
dec
add
jbe
sbb
imul
cmp
jnp
fisubl
lea
cli
stc
imul
daa
pop
ja
jns
cmp
nop
enter
shlb
add
test
icebp
jne
jns
add
adc
arpl
out
addl
xor
movsb
jnp
out
int3
shr
stos
push
and
lea
outsl
inc
adc
rcrb
test
pop
xchg
clc
push
popf
and
ds
cmp
addr16
mov
rdmsr
outsl
mov
sub
or
xlat
jo
and
scas
test
mov
int
sub
shll
xchg
inc
rcrl
fwait
in
cmpsb
or
sarl
cld
enter
pop
and
push
mov
push
in
ljmp
jnp
lods
in
jnp
add
loope
push
inc
cs
mov
push
jg
push
or
ficompl
sub
int3
mov
jp
ret
scas
test
nop
mov
stc
mov
in
repz
aas
xor
sti
daa
pop
pop
insl
or
mov
xchg
iret
lock
hlt
xor
jnp
jl
adc
ret
cwtl
adc
xchg
rcl
add
mov
wrmsr
mov
outsl
dec
pop
inc
jl
enter
int3
js
inc
mov
jecxz
out
jb
es
dec
lock
test
cs
vpminsw
dec
sub
ss
fidivl
ss
jmp
jp
test
dec
lahf
aam
or
movsl
fisubl
popf
inc
icebp
pop
pop
test
xor
movl
and
add
cmc
mov
jge
mov
cs
mov
xor
gs
ret
pop
mov
repz
movsl
pop
into
pop
mov
push
cmpsb
or
aad
and
xorb
xor
add
imul
sub
stc
je
push
or
aaa
repnz
sbbl
lock
out
lret
in
or
dec
or
scas
xor
clc
ret
or
aad
pop
std
xchg
shl
xchg
loop
pop
lds
test
outsl
pop
fs
jl
cltd
in
aad
lds
ret
test
lcall
lds
mov
add
insl
mov
sub
dec
add
jno
mov
and
jle
xor
pop
out
fimull
inc
adc
mov
into
sub
jmp
rcr
ljmp
in
sbb
jle
adc
int
or
lods
pop
xchg
daa
lahf
ficomps
gs
push
sub
mov
jge
add
xor
pop
mov
push
nop
cwtl
call
pop
stc
stc
fnstcw
pop
jge
sub
hlt
fistpll
pop
orb
xor
leave
adc
test
lods
xor
xorb
scas
push
stc
imul
cld
ret
sbb
pop
fnsave
sub
sbb
lret
test
push
push
scas
js
out
xor
xchg
push
jp
sub
lret
out
pop
ficomps
mov
cmp
lret
lea
cmp
std
outsb
loop
xor
mov
outsb
stos
xchg
movsl
sbb
stos
into
xchg
push
dec
adc
xchg
outsl
test
outsb
xchg
and
mov
loopne
aaa
js
pop
push
mov
cmp
fiadds
cmp
push
scas
adc
mov
mov
and
push
xchg
out
imul
ficoml
leave
pop
bnd
cs
sub
test
adc
add
xor
mov
cmp
mov
mov
pop
daa
int3
les
mov
jmp
aas
call
loopne
sqrtps
inc
sub
mov
add
xchg
fsubl
or
inc
cmp
inc
cs
add
cmp
pmullw
sbb
loopne
sub
xchg
loope
pop
test
adc
decb
push
adc
sbb
lods
add
xchg
dec
mov
cmp
sahf
das
push
pop
mov
leave
push
jne
cmp
cmpsb
mov
mov
popa
dec
and
push
nop
sub
push
adc
iret
cmc
inc
test
cmp
xor
push
sbb
movsl
in
pop
sub
mov
sub
js
sub
imul
js
cld
sti
mov
mov
sbb
cmc
pop
outsb
jne
jno
cmp
fnstcw
fists
in
in
out
jl
ret
fnstsw
ja
inc
rorb
xor
cld
inc
xorl
push
jo
push
cmp
dec
jge,pt
fcomps
lods
mov
mov
adc
add
sbb
xchg
adc
mov
fisubrl
jp
je
gs
ljmp
stc
or
sti
xchg
es
sarb
das
adc
idivl
mov
sub
shrl
dec
jbe
movsl
sbb
icebp
fisubs
jl
jl
pop
flds
sub
dec
mov
loope
int
mov
cmp
lea
push
loopne
scas
sub
cld
test
fsubl
adc
xor
popf
add
negl
sarb
xor
mov
dec
divl
fimuls
inc
and
jle
pop
gs
mov
dec
adc
ret
push
xchg
repz
iret
pop
pop
ja
gs
iret
sbb
dec
jmp
lret
cmp
or
ljmp
loope
add
filds
jg
fiadds
mov
ret
sti
sbb
mov
inc
daa
mov
inc
das
dec
testl
outsb
add
push
add
xchg
lea
jge
repnz
ret
repz
mov
sbb
fadds
ret
jmp
mov
mov
and
cmp
loop
mov
outsb
mov
ret
adc
dec
lods
cmp
aaa
fscale
out
pop
fcmovu
push
pop
mov
inc
xchg
pop
sbb
pop
call
dec
mov
in
add
jle
cmp
movsb
push
sub
mov
arpl
out
loopne
loop
and
ja
dec
adc
push
imul
cmp
pop
mov
jmp
inc
int
jp
jg
frstor
out
mov
dec
mov
add
fcomi
dec
xchg
sbb
je
popa
or
es
pop
adc
faddp
stos
xor
gs
jp
mov
sub
cmp
outsl
push
xlat
inc
fcoms
aad
dec
sub
inc
sbb
filds
xor
xor
lea
or
aas
sbb
les
stc
mov
cmp
pop
mov
or
xchg
out
mov
data16
jnp
jnp
pusha
jp
cld
xchg
jb
dec
fadds
mov
test
cmpsb
cmpb
lret
adc
mov
or
lods
sahf
jp
mov
add
jg
mov
jb
dec
ret
shlb
rcll
sbb
lahf
outsl
push
lock
lea
xchg
mov
sbb
outsb
mov
fstpl
repnz
dec
mov
adc
mov
rcll
jecxz
mov
add
mov
mov
inc
xor
clc
loop
push
xchg
ret
add
js
pop
xor
sub
fcompl
push
hlt
idivl
mov
int3
popf
sub
xchg
dec
shlb
ja
fistl
jge
sbb
das
mov
and
shl
dec
out
cld
fucom
fstpt
out
nop
mov
test
cmp
roll
add
fbstp
cmp
cmpb
add
pop
cmpsl
lret
jno
cmp
aam
cmpsl
out
into
fisttpll
lods
out
mov
mov
adc
dec
mov
push
lret
repz
rolb
cmc
nop
dec
mov
pop
out
fldenv
jo
scas
imul
test
sbb
xchg
and
iret
mov
enter
mov
fldenv
add
enter
arpl
cmp
addb
imul
or
imul
fnsave
adc
fsubrs
adc
fsubrl
mov
loop
push
mov
stos
gs
cmp
movb
mov
cmc
cmc
cltd
loop
sbb
pop
cmp
add
imul
inc
inc
sbb
popf
decl
fdivrs
lds
sub
push
mov
mul
scas
outsl
in
push
jmp
int
nop
mov
lea
jg
fucomip
fisttpl
xchg
xchg
sub
inc
mov
adc
lret
sbb
gs
mov
mov
sahf
ljmp
mov
dec
je
aam
adc
stos
sub
pusha
outsb
loopne
fldl
adc
cltd
das
sahf
pop
sbb
in
adc
add
inc
testb
in
rcll
addl
jns
push
lds
dec
cli
push
add
movsb
sub
les
sub
or
dec
pop
outsl
push
pop
enter
or
sub
or
inc
repz
jge
ljmp
bnd
ljmp
adc
lock
cmp
or
hlt
call
movsb
out
inc
mov
sub
movsl
cmpl
js
adcb
add
out
js
pop
cmp
call
push
in
and
mov
push
jl
mov
mov
ret
or
lods
inc
repnz
loop
push
sbb
or
jp
fists
xchg
clc
std
dec
outsl
pushf
jno
mov
scas
lods
cwtl
mov
repnz
pop
lcall
xor
adc
in
int
in
out
subb
sti
jno
sub
loopne
xchg
iret
pop
sbb
push
cmp
jl
pop
ficoms
jle
inc
lcall
addb
imull
lret
adc
mov
mov
leave
into
jmp
inc
repz
cltd
mov
pop
test
mov
clc
jg
jl
dec
stos
lds
ds
dec
sbbb
popf
shll
xchg
sarl
mov
imul
stc
adc
mov
loope
mov
jne
add
jno
mov
xor
test
stos
lods
dec
sbb
inc
ds
out
mov
pop
xchg
push
push
cmp
gs
mov
inc
ret
sbb
into
ret
sbb
shrl
and
cmp
xchg
ljmp
mov
outsl
cmp
sub
addr16
dec
rsqrtps
orb
or
popa
dec
inc
mulb
lock
cltd
fmull
sahf
push
mov
cmp
or
inc
xor
pop
adcb
ja
lahf
mov
cmc
xor
inc
mov
xor
hlt
ds
pop
jmp
or
inc
inc
stos
bndldx
outsl
dec
mov
imul
lods
dec
mov
pop
xchg
mov
psubusb
enter
into
sbb
mov
sbb
sbb
adc
aad
adc
sbbl
out
push
lahf
xrelease
inc
xor
lret
shlb
fs
xorl
aam
cmp
orl
hlt
cwtl
push
lds
mov
mov
dec
stos
or
inc
sbb
xchg
rcrb
jae
adc
inc
in
mov
jecxz
sahf
cmp
sub
mov
jnp
das
pop
xor
fistps
pop
ret
sub
pop
xor
outsl
in
push
rol
enter
leave
cmc
adc
sbb
ss
pusha
xchg
xor
dec
mov
pop
jmp
dec
lods
jb
xchg
test
out
sub
jbe
arpl
cmp
int
pop
or
mov
xchg
call
cmp
push
cwtl
ss
mov
out
pop
iret
jmp
pop
fbld
cmp
or
rorb
cmp
jg
jns
and
fwait
mov
and
push
outsb
and
jmp
jmp
xchg
out
jge
dec
add
movb
fwait
dec
sbb
push
push
iret
outsl
fcompl
in
pop
gs
lods
rcrl
loopne
inc
mov
push
insl
mov
push
jecxz
mov
or
dec
sub
jge
mov
pop
and
pushf
add
mov
fildl
addb
hlt
fwait
mov
out
stos
in
in
fnstenv
jle
gs
cs
js
das
pop
repz
nop
icebp
dec
pushf
mov
leave
mov
aam
ds
jle
mov
xchg
add
mov
pushf
pop
mov
fdivrl
xchg
push
std
jbe
fwait
dec
mov
stc
mov
cmpsb
inc
lds
add
std
mov
cmp
jge
pop
dec
mov
cwtl
shl
jno
je
mov
mov
and
cmpsb
mov
repnz
ret
lods
or
fxch
jns
cmp
cmp
push
out
mov
test
outsl
xor
sub
jns
push
sub
ret
push
je
rorl
or
or
daa
lock
adc
out
push
lods
push
jae
nop
into
sub
push
in
pop
inc
and
test
mov
cmp
stc
mov
mov
mov
es
cmp
xchg
pop
jo
mov
add
incb
lret
jp
push
xor
ljmp
icebp
int
test
xchg
pop
in
mov
out
leave
in
mov
iret
sub
adc
mov
inc
mov
sbb
sti
mov
jl
gs
mov
or
inc
jecxz
jecxz
bound
cmp
stos
push
ja
xchg
xchg
pushf
add
cmp
stc
inc
fidivs
jmp
mov
aam
add
inc
outsl
icebp
sub
xlat
icebp
mov
sub
sbb
aas
sub
or
mov
pop
adc
aaa
in
pop
movl
mov
mov
sbb
scas
mov
in
cmp
mov
insl
imul
xchg
lahf
cmp
cmp
sbb
pop
aaa
push
arpl
jp
mov
push
imul
lcall
add
push
imul
cli
idivl
push
pop
test
lahf
mov
add
into
fiadds
push
rorl
cmp
xchg
push
push
mov
lock
mov
js
cmp
jae
sbb
iret
or
rorb
push
cli
iret
jbe
aas
cwtl
in
adc
aaa
test
jmp
and
mov
pop
push
into
inc
inc
cmpb
push
dec
arpl
iret
lret
test
scas
mov
cmp
add
mov
daa
adc
xlat
mov
or
xchg
in
or
pop
mov
sarl
inc
inc
xchg
sbb
std
movsb
or
pop
mov
clc
sarb
mov
cld
add
mov
fidivrl
pop
leave
mov
aaa
add
mov
in
inc
cmpsb
adc
mov
fdivrs
test
hlt
xor
call
clc
data16
xchg
jo
ljmp
int3
sbb
addr16
out
in
and
out
cmp
add
mov
sub
test
add
call
subl
loopne
dec
or
fcomi
imul
xchg
imul
popf
rcrb
cmpl
ljmp
addb
hlt
mov
inc
aaa
or
inc
enter
jns
arpl
shll
das
pusha
adc
out
sbb
lods
inc
aam
adc
nop
call
loope
and
sti
cmp
mov
adc
data16
jl
mov
pop
lea
aam
cmp
jno
pop
or
add
shlb
popa
push
out
outsl
addr16
mov
xchg
out
and
mov
mov
daa
sbb
testb
popf
leave
ja
out
adc
jp
push
jl
inc
test
or
shll
mov
stos
pop
mov
stos
data16
dec
jne
mov
jne
adc
sbb
sub
mov
sbb
mov
mov
addr16
add
jno
jg
loop
mov
into
call
mov
lcall
cli
cld
stos
pop
cs
adc
adc
sbb
mov
mov
ret
fstps
cmp
ud2
dec
mov
jnp
xchg
repnz
out
mov
rcll
lahf
in
push
addr16
dec
stos
scas
pop
pop
adc
out
xor
sbb
xchg
outsb
in
push
or
dec
int3
lret
mov
and
and
jmp
movsl
mov
cld
push
and
xor
cwtl
inc
pop
lods
xchg
cmc
lret
dec
mov
negl
xchg
cltd
sub
cmp
lds
test
adc
out
sbb
in
jmp
xchg
mov
dec
aaa
sbb
sub
ret
dec
stc
push
push
int3
add
in
mov
sbb
imul
pop
xor
mov
out
sub
ret
pop
mov
pop
out
jo
inc
xchg
mov
xlat
xchg
fidivrl
rcll
test
xchg
fsubrl
fisubrl
xchg
fwait
xchg
and
mov
xor
xchg
ss
jb
iret
pop
pop
lret
inc
jg
sub
cmp
sbb
and
xchg
or
int
mov
pop
jae
nop
enter
fistl
insb
push
xor
in
rorb
jb
js
pop
in
mov
in
mov
mov
xor
sub
xchg
xchg
fxtract
sbb
mov
pop
jne
dec
ss
hlt
sbbl
lock
mov
mov
mov
stos
cmp
stos
arpl
lret
sbb
test
imul
mov
out
int3
data16
add
stos
mov
and
cmp
mov
test
lret
lea
push
mov
jb
push
and
mov
daa
cli
aad
imul
ljmp
test
fiadds
mov
lcall
dec
sbb
pop
in
insb
and
fidivrl
flds
or
and
test
lods
mov
add
dec
xchg
sub
jp
and
fldcw
or
std
ja
dec
stos
scas
xchg
rcrl
cmpsl
sarb
and
jl
inc
inc
mov
xlat
addr16
gs
sarb
testl
xchg
inc
aam
dec
xchg
fisubs
divl
aas
xor
adc
aaa
fldl
incb
push
aad
loopne
test
pop
jecxz
pop
mov
js
cld
xchg
subl
pop
mul
mov
orl
aas
push
into
and
cmp
inc
mov
scas
js
out
outsl
fsts
rclb
cmpsb
mov
jecxz
pop
push
adc
lret
lret
cmp
loop
into
mov
es
push
das
jnp
mov
adc
jno
repnz
fcomps
push
imul
pop
push
sbb
pop
scas
lret
nop
xor
xchg
cltd
push
cmpsb
jae
jb
mov
aam
mov
pop
ja
stos
mov
stc
insl
pop
pop
sub
subb
iret
adc
aam
loope
js
or
ss
pop
mov
add
push
lds
mov
jle
push
mov
sub
movsl
push
sbb
mov
imul
push
popf
cmpsl
mov
add
movsb
in
insb
jecxz
and
push
dec
outsl
pop
jns
jge
lcall
sub
out
mov
jmp
loopne
test
jo
lods
xchg
pop
addr16
xchg
es
in
pusha
jle
xlat
imul
dec
mov
mov
jbe
pop
gs
mov
mov
pusha
mov
sub
xchg
cli
inc
cmc
lods
movsl
popa
jmp
mov
sbb
jo
negb
sbb
sbb
jp
cs
jb
xlat
fstpl
out
mov
call
or
insb
or
fwait
cmp
dec
adc
test
dec
mov
adc
sbb
jp
ret
js
cs
ret
lea
scas
mov
fistpll
aad
mov
test
divl
mov
icebp
and
inc
pushf
rcll
jle
addb
lfs
pushf
adc
bound
mov
movsl
add
and
push
inc
cmp
fs
filds
das
pop
pop
int3
loope
cmp
dec
push
and
int3
push
test
or
sub
mov
xchg
xor
pop
or
pop
sub
push
add
pandn
clc
fisttpll
dec
lret
shrl
in
push
dec
es
inc
and
shlb
fsub
jp
lcall
loope
jo
ret
mov
int3
leave
arpl
cmc
ret
dec
lock
je,pt
push
std
lock
jne
lds
clc
adc
aam
dec
int3
sbb
ror
repz
mov
loopne
stos
call
sub
add
pushf
dec
xor
push
ficoml
push
mov
inc
sarl
push
adc
mov
and
mov
or
repz
pop
pop
loope
push
push
push
scas
stos
sub
das
cmp
xor
inc
inc
mov
rclb
and
xchg
add
lea
jle
leave
sbb
out
cld
dec
or
sub
sti
mov
addr16
add
sub
dec
aam
inc
sbb
mov
push
xchg
fnstenv
sub
inc
std
into
dec
std
outsl
push
xlat
mov
pop
aad
insl
stos
push
xor
insb
inc
lea
push
sarl
add
imul
dec
in
lea
mov
lahf
shlb
es
mov
add
mov
dec
sub
int3
cmp
mov
loop
gs
ficoml
dec
insl
test
sbb
fiadds
cmp
scas
fcoml
dec
imul
mov
push
mov
loop
push
and
pop
mov
mov
and
daa
mov
shll
pop
out
shl
outsb
mov
jns
cld
sub
lahf
test
fmull
out
dec
fnstsw
sbb
push
mov
pop
mov
arpl
sbb
inc
pushf
mov
mov
je
lods
mov
scas
cmp
push
aaa
out
pusha
aam
or
jge
out
sbb
sub
mov
inc
popf
outsl
xlat
dec
mov
mov
loopne
call
and
enter
mov
aad
daa
mov
sbb
fs
sbb
cld
jmp
clc
jbe
vmovdqa
aam
mov
int3
inc
push
cmp
xchg
jno
iret
popw
dec
push
jno
dec
dec
fs
out
xchg
cwtl
decb
push
sbb
add
loopne
inc
in
jge
push
xor
pop
cmpsb
or
pusha
jmp
push
xchg
cmp
mov
repz
mov
adc
dec
xchg
lcall
cmp
enter
ror
dec
add
in
inc
pop
fs
pop
mov
daa
inc
aas
stos
sub
adc
scas
outsb
repz
push
cmpsl
and
sarb
imul
lret
jnp
andl
pop
cmp
sbb
ds
mov
mov
sti
xor
adc
push
shlb
add
mov
cmp
pop
xchg
or
sub
sub
cld
popa
mov
test
jae
int
fbstp
fcom
lret
sbb
and
call
decb
jnp
in
cwtl
sub
mov
sub
pop
cmp
pop
lods
push
insl
popa
mov
pop
std
repnz
cmpsb
addr16
jae
mov
lea
mov
or
in
dec
jle
aad
and
mov
lret
jmp
mov
inc
out
jb
into
clc
pop
je
or
inc
lcall
cmpb
inc
sub
lods
pop
loop
add
frstor
mov
inc
insl
pop
ss
bound
pop
pop
roll
adc
int
cmp
jbe
faddp
mov
movsl
cmp
jbe
and
aaa
leave
popf
ret
les
cmpsb
outsl
mov
pop
inc
data16
push
xchg
lahf
xor
jmp
xchg
imul
loope
js
dec
xlat
or
inc
gs
lods
loope
lret
mov
push
mov
inc
mov
test
push
shl
or
hlt
and
call
arpl
xchg
or
lret
push
rcrb
bound
jae
loopne
cmc
fisttpll
push
pop
sbb
xor
div
and
mov
rol
fwait
popa
cmp
mov
out
cmpsl
mov
jl
fucom
test
mov
pop
sub
out
push
ljmp
push
inc
bound
in
jbe
mov
mov
fninit
rcrb
mov
mov
xlat
out
mov
sub
addr16
cld
cltd
sub
inc
outsb
jle
fs
orb
enter
mov
cmp
pop
int3
add
aad
imul
mov
lea
mov
push
dec
and
pop
repz
adc
stos
fucomi
pushf
jg
mov
daa
mov
clc
dec
mov
pop
iret
test
fwait
icebp
mov
sbb
imul
call
jecxz
xor
xchg
imul
insl
fwait
inc
pusha
or
mov
adcb
dec
sahf
pcmpeqb
or
inc
jl
push
jb
les
xlat
cld
and
aad
cmp
mov
mov
sahf
mov
sub
inc
add
in
jbe
test
out
xchg
and
add
push
sbb
enter
push
push
outsb
jl
cmp
sub
in
ds
mov
dec
inc
sbb
cmp
fsubrs
pop
stos
dec
push
fcompl
paddw
in
jp
jne
aam
push
jne
jmp
roll
adc
pop
sub
lock
sub
sti
mull
sub
xlat
cmp
dec
es
stos
and
jle
cmp
int
jbe
cwtl
iret
rol
xor
mov
stc
ret
mov
insl
js
insb
jae
pop
mov
test
or
mov
mov
out
push
inc
lods
cwtl
stos
cmp
push
cmp
sahf
movsb
jg
pop
dec
pop
aam
xor
popf
jns
mov
shl
mov
xchg
out
sbb
shrl
es
push
lahf
add
int3
rolb
aaa
dec
xchg
mov
aam
mov
jo
fwait
push
in
mov
shr
adc
stc
cmp
iret
dec
fcompl
dec
ss
cltd
ja
rcr
int
mov
je
jl
jge
cmp
jp
scas
fdivl
xchg
add
mov
inc
rorb
jmp
loopne
popf
jae
or
sbb
lock
test
xchg
imul
icebp
movsl
or
adc
rclb
hlt
es
std
xor
add
mov
sbb
mov
push
pop
mov
mov
mov
add
lods
out
xchg
aam
mov
sub
pop
and
bound
sar
lea
adc
sbb
jecxz
std
pop
cli
adc
mov
test
xchg
cmp
mov
movsl
inc
mov
pop
sbb
cmp
sti
mov
push
push
test
sar
enter
cmp
ret
in
ret
xchg
sbb
and
push
addl
lret
test
push
sbb
in
incb
int
dec
cmpsb
jl
mov
out
lahf
dec
xor
mov
clc
cmp
test
or
xor
add
jle
cmpsl
pusha
lods
jne
sbb
lret
or
mov
xlat
pop
push
xor
dec
scas
int3
cmpb
inc
test
pop
jg
int3
push
cld
or
repnz
mov
jecxz
adc
and
imul
lret
rcrl
xchg
inc
cmp
fisttps
xchg
mov
outsb
inc
cwtl
lds
pop
xchg
jl
push
adc
cmc
mov
imul
cmp
push
lods
and
fs
mov
call
addl
push
cwtl
out
imul
fldenv
stos
or
mov
std
mov
rorb
jb
xchg
insl
inc
inc
mov
inc
in
cmpsl
pop
or
mov
and
pmaddwd
mov
imull
sbb
je
jp
jle
clc
jb
add
call
into
jno
cs
fisubrs
push
jg
in
adc
adc
xchg
xchg
insb
fdivrs
inc
or
mov
add
adc
mov
ds
fnsave
jb
mov
cmp
in
movsb
out
mov
dec
mov
push
fst
fsts
ss
movsl
pop
lds
inc
jge
jp
cli
sub
repz
movsl
or
mov
in
cmp
jae
loope
gs
sbb
out
or
in
rolw
inc
and
icebp
xchg
inc
stos
mov
sub
push
ficomps
cwtl
xor
sub
xchg
lock
out
cwtl
mov
mov
xor
push
fs
push
cmc
test
jnp
sarb
add
inc
push
jae
rol
xor
and
cmp
jecxz
mov
psrld
and
push
jb
popa
pop
sbb
xorl
rcrb
loope
inc
jo
jle
sub
or
in
outsl
out
cmpsb
shrl
and
xor
mov
push
sbb
test
mov
add
shll
sbb
faddl
les
out
jp
xor
inc
aaa
adc
lods
imul
and
rclb
std
pop
mov
addr16
hlt
mov
popf
pop
out
cmp
lock
fdivrs
inc
add
sub
mov
daa
imulb
in
xlat
shlb
mov
out
inc
dec
adc
push
or
in
dec
fs
fsubrl
das
mov
sahf
mov
and
jb
mov
call
xchg
adc
inc
inc
push
jecxz
mov
stos
dec
js
mov
sub
inc
faddl
int
ljmp
fisubs
and
adc
sbb
dec
sub
pop
sbb
jae
es
sbb
add
orb
cmp
jb
outsb
sahf
adc
mov
lret
cmp
ja
mov
cmp
xchg
mov
cwtl
shlb
jb
data16
cltd
jle
les
popa
inc
xor
xchg
jle
jbe
int
push
movsb
ja
ret
inc
sbb
dec
adc
dec
mov
sub
out
sbb
and
scas
and
mov
divb
fsubrs
inc
insb
std
xor
iret
mov
push
loop
pushf
or
jp
cmp
jge
je
xchg
int
imulb
jns
dec
sbb
outsb
call
mov
dec
icebp
test
or
test
cmp
inc
inc
aaa
nop
in
mov
pop
inc
movsl
inc
fisttpll
fdivr
frndint
rep
mov
add
adc
mov
pop
xchg
clc
pushf
mov
mov
in
xor
inc
sub
cmpsl
in
jnp
adc
cmpsb
aam
push
loope
sbb
inc
pushf
sbb
xchg
movsl
inc
dec
loop
jl
sti
cmp
mov
or
arpl
fwait
test
jmp
fisubrl
sbb
add
cmc
pandn
xor
or
adc
out
mov
mov
arpl
call
insb
and
lea
pop
imul
jge
xor
inc
rcrl
jbe
outsb
jmp
xchg
fwait
icebp
cmp
fst
in
inc
jecxz
fsubl
loope
cmp
in
inc
imul
pusha
ja
mov
xchg
shll
push
mov
ljmp
and
jge
dec
loop
mov
dec
pusha
mov
stos
or
mov
stc
roll
cmp
push
sar
or
cwtl
in
sbb
add
icebp
or
test
ret
pop
jnp
inc
sub
inc
inc
bnd
mov
lods
mov
adc
fisubrs
mov
stos
in
int
mov
cmp
jmp
mov
inc
or
pop
mov
mov
and
enter
jge
dec
popf
sbb
mov
cltd
repz
out
jo
sarb
out
push
push
aad
fs
dec
insb
or
pop
xlat
push
insb
mov
mov
push
shll
mov
xchg
rcrb
xor
sbb
ret
incw
inc
adc
sub
dec
xchg
inc
mov
lods
or
jb
scas
test
lret
lods
std
jl
rcll
fldenv
pop
cmpsl
push
shll
ljmp
lea
xchg
decl
in
push
cmp
pop
scas
mov
sbb
adc
mov
shl
pop
push
dec
dec
lea
mov
sahf
adc
sarb
push
push
xchg
pop
mov
jecxz
iret
scas
jno
mov
ret
bound
fstps
and
loope
std
cs
aaa
aas
jmp
test
xchg
in
mov
pop
pushf
dec
aad
mov
int3
mov
dec
xor
xchg
iret
mov
add
jnp
fdivl
xor
push
adc
push
and
xchg
lret
cmp
sarl
fidivl
adc
ljmp
lahf
and
mov
andl
push
mov
and
inc
ret
gs
in
jbe
inc
sbb
dec
push
inc
dec
cmp
xor
sbb
test
dec
xchg
inc
aam
push
dec
repz
jnp
insl
push
mov
push
aad
lret
aad
popf
rolb
pop
mov
sbb
gs
mov
lods
sti
in
sub
push
mov
repz
xchg
cld
cmpsb
es
movsl
rol
xchg
inc
sub
les
testl
push
movsb
pop
add
les
enter
add
mov
xchg
lods
sbb
sbbb
cmp
cmp
xchg
loope
mov
out
mov
addr16
bound
cmp
fwait
loope
lea
mov
add
xor
sub
stc
fsubrs
ficoms
aas
mov
mov
lret
and
pop
test
adc
jns
mov
inc
arpl
dec
mov
lock
inc
push
push
inc
nop
fidivs
fistpll
sub
and
shrb
jo
xor
mov
repz
lods
icebp
and
cpuid
mov
pop
out
adc
rolb
fs
inc
test
fnstsw
pusha
inc
or
aam
popf
lods
lds
push
adc
lods
and
out
out
int
rcrb
dec
push
je
les
pop
insl
and
test
xor
push
test
mov
xchg
daa
sbb
cmc
sti
mov
push
addr16
lret
sub
rorb
adc
fimull
inc
std
pushf
and
movsb
pusha
in
mov
insb
ss
mov
mov
enter
decb
insl
fisttpl
neg
leave
ret
mov
xchg
sbb
mov
in
popa
ljmp
xchg
xchg
add
inc
xor
push
stos
fidivrl
cs
mov
std
add
sub
sar
into
shlb
mov
add
scas
hlt
inc
adc
push
dec
inc
aaa
mov
xchg
test
cmpsb
insl
popa
js
inc
inc
testb
add
cli
mov
mov
adc
push
shrl
in
pop
jns
push
incl
dec
dec
sbb
add
in
fbstp
ud1
popf
inc
fs
mov
inc
or
jge
dec
or
adc
movsl
out
cmpsb
jae
push
jge
aam
movsb
add
jno
movsl
or
ljmp
or
pop
js
mov
daa
int3
cltd
lock
xor
pop
xchg
mov
sub
test
pop
and
xor
mov
cli
pop
xchg
jmp
adc
or
aam
mov
dec
sbb
jno
js
xor
xor
out
shlb
jbe
cmp
push
xchg
std
add
xchg
or
sub
sbb
test
lea
and
push
and
inc
jmp
stos
dec
inc
mov
dec
pop
mov
mov
mov
pop
je
fistpl
dec
push
push
pop
ss
repnz
jno
adc
xchg
cld
popa
mov
sbb
dec
xor
dec
in
fldl
sub
sub
or
enter
test
xor
adc
loopne,pt
clc
movsb
sbb
dec
jl
jae
and
dec
les
sub
dec
dec
add
sub
mov
xor
mov
cmp
push
xor
mov
xor
loop
mov
mov
add
dec
fs
incb
ja
push
push
sbb
movsb
pusha
fbstp
inc
idivb
inc
mull
insb
mov
cmp
xchg
into
xlat
pushf
xchg
cmp
adc
fs
dec
or
sahf
scas
repnz
mov
dec
sbb
out
pusha
in
cmp
leave
pop
inc
stos
xchg
mov
movb
clc
dec
pop
out
adc
test
inc
mov
xlat
sti
ljmp
mov
push
and
add
lock
xchg
mov
aad
adcl
int
pop
add
daa
lcall
cmpsb
xor
fldl
mov
jmp
push
iret
jg
scas
das
sub
sbb
sbb
xor
push
std
lahf
push
scas
in
call
add
imul
mov
dec
imul
rolb
in
cmp
rcrb
rolb
dec
sub
das
mov
in
movsb
xchg
xchg
cmp
in
mov
dec
sti
pop
or
aad
fists
xchg
ljmp
test
or
push
sbb
jle
stos
mov
cmp
and
sub
mov
mov
mov
arpl
js
add
inc
xchg
cmp
int3
shrl
and
stos
mov
sub
push
test
xchg
pop
jge
cmp
xchg
loopne
push
mov
and
cmp
cmc
iret
cwtl
daa
mov
ret
inc
xor
stc
jnp
mov
or
ds
pushf
and
xor
popf
fdivrl
stos
push
and
xor
pushf
mov
mov
je
enter
cmp
sbb
sub
adc
inc
inc
cmp
sahf
pop
sbb
push
mov
lahf
sub
popf
adc
jo
in
dec
cltd
andb
iret
cwtl
xor
stos
and
mov
sub
outsb
lahf
mov
sub
les
push
xchg
testl
xor
mov
jb
js
pushf
sbb
es
je,pt
mov
and
mov
cltd
push
fstpl
les
sahf
aam
pop
mov
xchg
cmp
push
jno
imul
sub
pop
and
push
lock
jg
and
in
lods
mov
adc
repz
add
int
fwait
mov
jb
adc
outsl
and
push
push
adc
iret
cmovo
or
and
xor
cmp
push
cmp
mov
xor
std
sub
xor
movsb
push
sbb
test
xor
lret
xor
subb
nop
xchg
pop
test
and
jp
jp
xchg
jnp
int3
clc
mov
shll
es
pop
movsl
dec
lea
xchg
mov
addr16
xchg
lahf
imul
pop
xchg
adc
push
adc
sub
scas
je
adc
repnz
ret
bound
jnp
adc
add
push
fs
dec
or
add
call
mov
sbb
rorl
pop
es
pop
imul
jbe
xor
mov
xor
pop
sub
leave
aaa
in
fadds
iret
mov
cmp
inc
pop
imul
leave
jl
pop
dec
imul
pop
mov
into
aaa
popa
inc
out
mov
jp
in
dec
adc
pop
loop
ret
sbb
or
repnz
in
test
pop
mov
sbb
out
mov
movsb
imul
outsl
xchg
sti
pop
dec
add
sahf
push
sub
add
xchg
sub
movsb
pop
icebp
sbb
in
add
xor
cmp
mov
ljmp
push
shlb
imul
inc
dec
and
nop
adc
mov
mov
mov
sub
jmp
pop
jb
mov
lret
aaa
fcmovnbe
arpl
mulb
mov
outsb
pop
push
add
jle
add
pop
xor
mov
cwtl
test
orl
rcl
insb
mov
mov
xchg
pop
fxch
in
or
outsl
stos
push
pop
lcall
push
jge
jb
pop
mov
lods
cld
and
add
or
rcll
mov
enter
pusha
shll
mov
fs
pusha
cmc
aas
or
jecxz
stos
mov
dec
ja
decb
mov
adcb
jmp
dec
push
out
popa
xchg
adc
clc
or
jae
andl
dec
repnz
adc
movsl
dec
imul
in
or
imul
adc
insb
mov
xchg
dec
clc
xor
mov
stc
fcoms
jmp
testb
xchg
arpl
gs
lret
movsb
jnp
repnz
cmpsl
lahf
mov
and
loop
pop
xchg
push
push
dec
pop
ret
pushf
in
popf
stos
insl
loopne
sbb
and
push
pop
inc
and
stos
daa
sub
out
mov
imul
sbb
fdivl
mov
cmp
fcompl
loope
pop
inc
push
cmp
out
pop
jle
hlt
mov
lcall
inc
adc
inc
xor
jecxz
sbbb
jp
pop
mov
xchg
mov
sbb
lods
loope
mov
push
sahf
add
push
mov
call
or
add
test
pop
notb
push
push
sbb
xor
cmp
test
mov
sub
rclb
loopne
sub
adc
dec
sub
xor
inc
dec
in
movsl
jmp
xchg
pop
inc
jl
and
inc
rcr
or
movsb
xchg
aaa
clc
adc
inc
inc
xor
arpl
mov
push
lock
xor
xchg
xchg
xchg
pop
push
movsb
mov
mov
xchg
sbb
cmp
movsl
gs
jg
fcomps
sbb
insl
sbb
cmp
xor
call
jne
xchg
adc
cmpsb
xlat
fwait
sarb
call
mov
add
sarb
jecxz
or
jns
jge
jnp
cmp
push
mov
clc
push
mov
mov
xor
push
sbb
dec
lcall
test
mov
sbb
fwait
jp
repz
into
int
data16
dec
aas
sbb
ss
cmpsl
testl
and
test
test
push
in
aaa
daa
lds
pop
and
shlb
fstpt
fidivrl
push
dec
js
xchg
leave
nop
xor
sbb
sub
jecxz
testb
imul
aas
xor
jmp
pop
and
push
cmp
pop
sarb
ja
data16
insb
aad
cmc
ja
scas
push
mov
xor
sarb
aam
sahf
pop
test
mov
scas
add
mov
lret
lsl
rcll
rolb
cmpsb
pop
bound
mov
xchg
es
and
aas
aam
fidivl
lds
xchg
int3
adc
hlt
push
mov
es
inc
cmpsb
loopnew
pop
adc
fbstp
mov
cmp
int3
push
arpl
jae
push
stc
dec
push
push
imulb
cmp
and
lcall
jne
dec
sub
jg
sbbb
adc
adc
repnz
std
scas
insb
outsb
mov
adcl
jle
rorl
lret
xchg
test
outsl
jp
and
mov
inc
xor
dec
or
sub
pusha
inc
daa
imul
or
sub
jno
ss
jg
ds
es
adc
hlt
in
xor
jmp
dec
pop
scas
aaa
adcl
and
mov
xchg
enter
jmp
xor
or
jbe
push
or
fs
outsl
xchg
scas
and
gs
in
xchg
daa
mov
xor
and
popa
gs
jecxz
sbb
imul
icebp
lcall
xor
push
add
mov
pop
movsl
scas
insb
inc
sbb
add
dec
sbb
mov
push
inc
fnstenv
movsl
fildll
add
pushf
inc
push
pop
loope
mov
shl
mov
mov
outsl
mov
roll
frstor
mov
mov
movsl
repz
jle
dec
lahf
mov
stc
or
dec
add
and
mov
ficoms
xchg
pop
sbb
push
outsl
xchg
mov
xor
mov
pop
xchg
lods
push
scas
and
cli
stc
or
or
out
stc
and
mov
cmc
subl
sahf
scas
xor
or
loop
xchg
mov
cs
mov
out
addb
push
dec
nop
push
sbbl
fmuls
lock
dec
cld
cmp
ret
js
mov
xchg
mov
in
pop
call
sbb
pop
xchg
lods
xchg
push
pop
sbb
test
sarl
mov
aad
lods
mov
cmp
sub
mov
push
mov
pusha
sub
gs
loope
stos
cwtl
sub
in
pop
xchg
lahf
xchg
lret
fcmovne
sbb
rorl
push
aas
mov
cmpsl
stos
mov
xchg
sbb
and
in
mov
jns
and
jmp
or
cmp
idivb
hlt
inc
enter
test
loop
rolb
test
test
jg
cmpsl
mov
mov
cli
data16
notl
ret
leave
adc
sub
test
movsb
push
lret
push
sub
into
push
push
sub
or
inc
mov
inc
sarl
fwait
and
nop
or
mov
add
adc
jae
jbe
jecxz
jecxz
mov
xor
jne
scas
cwtl
aas
fcoms
jno
lcall
xchg
loopne
or
or
jle
mov
out
or
jno
mov
repnz
dec
popa
cltd
fdivrl
jne
push
shl
outsb
or
inc
or
shll
lods
scas
pop
inc
push
cmp
and
jl
arpl
cmp
loopne
push
loop
cmp
sbb
loope
sub
dec
clc
arpl
rolb
add
cmp
inc
dec
mov
movsb
inc
pop
clc
cli
scas
mov
xchg
sub
mov
push
ds
imulb
ror
cmp
int3
xchg
sub
mov
imul
xchg
lret
cmp
leave
cld
in
mov
ljmp
push
loopne
xchg
and
mov
dec
push
mov
mov
aaa
cmp
pop
dec
or
xor
push
pop
inc
inc
ds
or
push
push
mov
dec
roll
jo
scas
lret
jecxz
add
les
lcall
add
in
inc
pop
aaa
cmc
ret
aas
jnp
dec
mov
jb
imul
test
push
mov
or
dec
inc
inc
cmp
sahf
mov
jbe
dec
xor
push
pop
nop
pushf
notl
push
push
jge
neg
push
push
cwtl
inc
lret
or
in
add
and
xor
xchg
call
cmc
mov
insb
lret
dec
shlb
pop
jecxz
fs
lods
ljmp
das
call
xor
fistpl
aaa
xor
pop
insb
xchg
xlat
dec
dec
ja
mov
adc
mov
adc
inc
clc
gs
mov
pushf
shlb
mov
lcall
push
arpl
pop
lret
xlat
pop
push
out
or
ror
sub
xor
cli
mov
repnz
xor
popa
push
add
mov
inc
mov
xor
lods
mov
add
das
cs
outsl
cwtl
xor
mov
xchg
fldl
gs
gs
jnp
divb
imul
orl
add
loopne
pop
push
rclb
sbb
xchg
mov
notb
lds
fwait
mov
shll
or
mov
jp
jns
mov
les
daa
fmul
inc
and
imul
xor
sti
int
mov
addr16
test
inc
mov
xchg
or
in
mov
xor
add
xlat
shll
jne
push
out
imul
sahf
sarl
or
lock
mov
mov
push
in
nop
add
xor
sti
inc
xchg
sub
dec
sbb
adc
push
jmp
inc
xor
mov
into
in
pop
clc
fs
ljmp
pop
mov
mov
punpckldq
addb
insl
sbb
or
dec
sbb
push
scas
mov
out
push
add
mov
dec
in
push
push
cwtl
xchg
pop
orl
icebp
jne
js
sbb
mov
inc
push
sub
pop
aam
orl
cmp
add
mov
movsb
jb
outsl
push
pop
in
pop
fisubrs
loope
pop
xchg
jno
or
mov
leave
in
roll
gs
and
rolb
cmp
pop
jg
xchg
push
bound
add
lock
jmp
or
xchg
js
pusha
jne
fsts
add
daa
repz
adc
pop
imul
lods
daa
loopne
cld
imul
fisttps
and
jle
xchg
mul
outsl
mov
push
movsl
icebp
add
ljmp
stos
cli
xchg
add
pop
shll
stc
mov
xor
mov
lahf
cmp
std
xlat
mov
call
pop
shrb
ret
xchg
add
add
fstpt
jmp
mov
mov
imul
pop
adc
xchg
test
jecxz
sub
or
cltd
pushf
data16
popa
fistps
subb
hlt
rclb
fs
test
outsl
std
sub
pop
mov
lock
push
add
cmp
shr
pop
mov
lods
sbb
jbe
sub
pop
fcoml
stc
adc
in
nop
cmp
ret
fcompl
add
fcom
cwtl
clc
clc
inc
jecxz
adc
and
jge
ljmp
or
mov
or
inc
ret
incb
mov
mov
lock
mov
enter
js
aas
xor
cld
aas
add
jae
out
inc
jecxz
pop
into
push
lock
xor
movsl
jae
gs
lret
push
gs
adc
jl
out
insb
decb
imul
add
mov
mov
fsubrl
cmp
incl
xchg
mov
lcall
mov
cs
and
test
xor
or
std
mov
mov
fstl
and
xor
push
pop
sub
scas
lea
shlb
jbe
sbb
or
rcrl
ret
movsl
nop
mov
mov
shrb
pop
push
push
jmp
fidivl
xor
cwtl
sbb
fwait
push
in
mov
xchg
mov
jbe
rol
rcrb
insl
loopne
mov
xchg
test
sub
inc
and
xchg
xor
notl
repnz
decl
cmpsb
cmp
mov
mov
jae
xor
xor
insb
cs
push
into
pusha
mov
repnz
sahf
xchg
call
clc
ja
test
cmp
insb
cmp
rcrb
push
jnp
scas
add
xor
out
sub
sahf
mov
xor
cmp
mov
and
inc
push
dec
or
and
ljmp
jo
mov
dec
jmp
dec
fistpl
push
jno
add
insb
mov
clc
leave
push
rcrl
data16
fs
in
mov
insb
xlat
cmp
xor
leave
push
add
nop
cmp
mov
lcall
sbb
mov
pop
mov
hlt
xlat
sti
and
movaps
inc
popa
insb
lret
faddl
or
mov
sbb
xor
cmpsl
add
in
mov
jge
inc
and
xchg
addb
cmp
dec
sahf
cwtl
sub
test
xor
cmp
scas
inc
adc
adc
sbb
jle
aam
repnz
pop
fwait
in
inc
and
adc
mov
andb
outsb
cli
int
stos
ds
mov
fnsave
jp
jne
cmp
push
mov
pushf
xchg
or
lods
jge
ds
dec
nop
mov
ds
cld
push
test
int
inc
pop
inc
jnp
xchg
stos
push
inc
cmpsb
xchg
dec
ret
outsb
scas
nop
lods
pop
fs
dec
lret
pop
dec
leave
mov
adc
hlt
pop
or
sub
sti
jns
test
push
mov
xor
mov
mov
in
ret
inc
in
jnp
inc
dec
mov
fcmovne
rcll
jb
cmp
mov
pop
loope
dec
cmp
push
adc
mov
sub
dec
imul
cmp
fisttpll
dec
movsb
jmp
adc
out
push
bnd
and
xor
pop
jae
sti
jmp
push
cmp
cmpsl
pop
aas
sbb
jns
cli
dec
out
nop
xor
push
pop
mov
subl
and
pop
test
xorl
push
loope
addr16
push
hlt
mov
push
ret
push
add
xor
mov
mov
jg
mov
sbb
enter
xchg
call
inc
call
repnz
outsb
pop
ret
push
ret
push
push
mov
push
rol
ror
push
imul
mov
pushf
inc
sbb
jno
mov
daa
mov
xchg
jge
inc
xchg
jecxz
ja
loope
cmpb
popa
xchg
in
ret
insl
mov
test
aam
push
cltd
sub
inc
data16
lret
cwtl
ror
cltd
push
jns
adc
sub
sbb
int3
hlt
mov
addr16
leave
xor
repz
cmc
and
add
mov
lea
mov
pusha
pop
pop
lea
xchg
je
xchg
and
push
in
lret
add
xchg
jmp
inc
popf
mov
fucomp
mov
cmp
mov
ror
jmp
inc
push
je
jae
fstpl
mov
js
add
jg
and
imul
push
leave
inc
imul
mov
das
adc
clc
loopne
es
and
ds
xor
pop
cmp
fstpl
sbb
lock
pop
lods
lock
add
or
addr16
cmp
mov
push
lods
mov
movsl
cmp
jae
sti
cmp
mov
fsub
int
test
mov
cwtl
mov
xchg
scas
add
mov
dec
or
call
data16
push
in
dec
enter
or
push
jae
mov
or
pop
add
mov
xor
mov
mov
mov
dec
fnstenv
repz
pop
fwait
add
mov
std
fs
jno
and
push
pop
mov
aad
pop
adc
sahf
xchg
xor
bound
inc
lods
jae
lret
ds
aas
dec
xor
je
mov
popa
cmp
cld
mov
test
movsb
imul
pop
std
call
push
scas
popf
and
inc
mov
and
jbe
jp
sti
dec
shlb
and
jne
test
sbb
sub
sub
push
data16
mov
mov
insl
lds
mov
sub
sub
mov
ficoms
scas
lock
cmpsl
or
in
inc
dec
rcll
mov
lods
push
test
jge
pop
xchg
inc
adc
fbld
inc
mov
mov
cli
out
fcompl
or
or
outsb
add
out
lods
pop
call
cs
jbe
push
cmp
sub
mov
push
or
sub
cmpsl
mov
sub
mov
sub
popf
shl
adc
fcmovu
dec
mov
jno
mov
adc
xor
ret
xchg
rcll
dec
pusha
loopne
sbb
mov
mov
cltd
pop
pusha
scas
jge
jg
imul
mov
add
loop
loop
popf
rcll
ja
sub
xchg
cltd
or
int
mov
push
into
mov
cmp
aas
mov
inc
test
orl
adc
push
test
dec
add
mov
adc
and
sbb
cmpsl
sub
stc
pop
xor
gs
stos
mov
loop
imul
in
lret
or
pop
mov
lods
sbb
inc
int
jo
aad
rcrl
sub
sub
mov
out
adc
outsl
lahf
mov
adc
divl
test
mov
sbb
dec
and
cmpsl
dec
cld
aaa
insb
push
iret
mov
fistl
fucomip
dec
cli
jno
add
fnstenv
inc
imul
out
cmp
mov
mov
sub
sub
and
cmp
loope
mov
dec
adc
shlb
mov
mov
add
jge
loope
or
std
push
ljmp
cltd
mov
push
int3
mov
fldl
sbb
dec
movsl
pop
btr
jge
clc
mov
jno
int
xchg
outsl
jns
sbb
mov
icebp
loope
jg
mov
inc
daa
movsb
fistpll
push
insl
in
cwtl
cmp
cli
loop
pusha
shlb
leave
jne
sahf
loope
cmpsb
add
push
push
jge
xor
or
es
push
sub
dec
shll
loopne
pop
jno
test
ljmp
cmpsb
sahf
mov
fchs
icebp
into
rcl
rep
fwait
and
shl
loop
idivl
loop
rcrb
and
setl
pop
mov
imulb
rclb
popf
shr
adc
or
mov
xlat
shrb
insb
push
dec
mov
es
cld
cmp
insb
iret
pop
stos
add
cli
imul
jae
mov
adc
adc
adc
faddl
ljmp
sbb
mov
pop
shll
frstor
dec
pop
insb
mov
xor
jne
mov
insb
inc
pushf
mov
incl
add
cmpsb
pop
shl
xchg
or
sub
int3
xor
loope
fsubs
and
dec
ljmp
gs
movb
lea
or
jae
mov
sub
inc
outsb
pop
sbb
fwait
push
test
in
mov
les
imul
inc
sub
pusha
dec
inc
scas
int
jmp
push
add
sbb
mov
std
jl
add
sbbl
dec
sbb
std
pop
lcall
jb
mov
fsub
test
lret
ja
adc
stos
scas
aas
lret
outsl
insl
mov
inc
xchg
out
out
mov
lret
sub
test
filds
shlb
mov
hlt
enter
jmp
push
rol
pop
ret
popa
mov
add
mov
jne
lret
mov
lds
xchg
pop
out
push
cwtl
pop
sti
cmc
cwtl
sub
cmpsl
jbe
add
mov
mov
add
adc
pop
xlat
mov
xor
imul
mov
sahf
cltd
arpl
add
repz
popa
adc
xor
or
fnstenv
inc
inc
sbb
stos
push
mov
push
xlat
aam
mov
add
ret
aam
pop
mov
jns
inc
ret
cmp
js
int
lock
frstor
ss
xor
xor
ljmp
lock
jbe
cltd
idiv
lcall
sahf
push
jge
aad
pop
shrl
test
out
clc
jne
pop
adc
call
stc
cmp
pop
mov
jp
popa
inc
popf
jl
mov
xor
pop
or
xchg
imul
enter
dec
jl
data16
repnz
enter
rcr
jne
add
push
outsb
in
bound
pop
pop
xlat
lods
es
fcomi
icebp
xchg
sbb
cmp
mov
and
jecxz
test
inc
ljmp
lock
mov
pusha
shr
adc
sbb
out
enter
lock
xor
out
mov
xchg
out
mov
jo
mul
push
test
cmp
stos
jp
iret
in
repz
loope
cmpsb
push
push
xchg
pop
sub
rorl
sbb
inc
or
or
loope
popf
xchg
call
pop
fnstsw
xor
in
push
sub
xor
xchg
mov
pop
adc
fisttps
xchg
inc
jp
repz
jb,pn
mov
mov
pop
loope
mov
hlt
push
or
test
xchg
js
mov
hlt
mov
xchg
or
test
jo
std
jg
lret
fwait
mov
fstpl
mov
cmpsb
cmp
ret
test
inc
int
daa
mov
xor
shll
divl
or
in
pop
jle
idivl
jnp
into
pusha
xor
mov
xor
les
lods
cmp
pusha
xor
and
mov
or
inc
cmpl
les
adc
push
jp
popa
xor
lds
es
imul
xrelease
jno
mov
bound
ficompl
pop
dec
fsub
fisttpl
mov
fstl
pop
ss
sbb
fiadds
cwtl
pusha
enter
cmpsl
fnstsw
stos
dec
dec
push
mov
push
xchg
sbb
insl
xchg
subb
imul
inc
in
or
fisubrl
out
inc
xor
add
pop
sub
dec
sub
push
dec
pop
sub
mov
mov
adc
xchg
fisubs
insb
mov
dec
outsb
js
aaa
or
sbb
mov
fwait
roll
push
xchg
xor
jbe
fcom
cmc
inc
mov
mov
dec
int
dec
pop
push
lods
push
rcrl
in
push
cli
jge
fildll
add
mov
cmp
test
sub
or
mulb
mov
insb
lcall
pop
bound
pop
outsb
push
mov
xchg
in
push
inc
xchg
or
add
icebp
ja
adc
inc
jp
test
pop
mov
arpl
pusha
mov
add
xor
lods
sbbb
jns
mov
ja
daa
cmc
lock
inc
jp,pn
cs
cmp
jge
stos
stos
dec
sbb
or
jo
les
inc
and
fstpl
aaa
fdivrl
lods
repz
shrb
cld
insl
fildl
aas
adcl
outsl
icebp
sbb
xor
movntq
out
mov
notl
inc
loopne
add
enter
push
data16
jns
sub
push
imul
repnz
pop
sahf
inc
ret
aad
aam
dec
outsl
pop
movsl
adc
dec
aad
mov
cmp
dec
rep
mov
pop
mov
mov
dec
jne
sbb
leave
push
cmp
push
cmp
jl
iret
pop
push
loopne
cmpsl
repnz
cli
jmp
and
jne
mov
sti
stos
cltd
add
mov
loope
sub
pop
adc
std
pop
stc
or
mov
rolb
mov
pop
xorl
mov
shrl
add
pop
das
jg
add
lahf
roll
sahf
bound
mov
inc
incb
cwtl
insl
int
adc
popa
in
jle
mov
mov
dec
mov
jle
shufps
stos
pop
add
sahf
sub
out
push
cld
mov
pop
xchg
mov
mov
pop
lods
mov
cmpsl
shr
sahf
es
stc
mov
mov
dec
mov
push
add
xor
adc
dec
loopne
sbb
jo
not
adc
xor
faddp
movsl
bound
sbb
cmp
pop
push
sbb
lods
push
idivl
inc
arpl
push
frstor
mov
movsl
iret
aaa
inc
add
xor
dec
ljmp
divl
sub
mov
sbb
add
ds
or
inc
mov
lods
lret
rol
or
notb
xor
imul
scas
pop
repz
jbe
in
inc
add
jns
out
lds
lea
daa
or
mov
jo
mov
jl
scas
int3
mov
mov
mov
inc
sub
mov
stos
mov
jp
xor
das
xchg
mulb
fidivrs
xor
scas
test
pop
aad
mov
into
movsb
bsf
bound
mov
mov
cwtl
jnp
movsl
or
out
inc
mov
sti
test
aad
aad
xchg
imul
dec
cwtl
stos
mov
cwtl
xor
idivb
repnz
movsb
in
in
scas
push
wbinvd
ret
into
bound
add
push
mov
pop
sub
pop
mov
in
fcoms
ljmp
loopne
xchg
stos
loopne
or
loopne
dec
pop
stos
imul
test
clc
ljmp
dec
adc
sbbl
loopne
fsubl
mov
mov
js
sarl
add
mov
cmp
ret
jae
mov
adc
andl
test
bound
aaa
out
nop
popf
and
sub
pop
fldt
mov
xchg
loop
shll
add
jmp
dec
mov
jb
push
xor
leave
pop
pop
fidivrl
lea
out
sbb
rol
inc
popf
push
push
fwait
popa
xor
loop
lods
sbb
inc
test
cli
rcl
lret
push
dec
push
in
cli
idivb
xor
lcall
inc
mov
in
outsl
sub
mov
mov
cltd
mov
mov
fldenv
lds
adc
xorl
xchg
sbb
into
pop
cmp
cmpsl
lahf
pusha
jno
fsubr
stos
mov
in
jp
test
in
outsb
dec
pop
mov
mov
inc
in
imul
outsl
xchg
leave
or
test
xchg
mov
cmpsb
pop
mov
fsubrs
stos
les
arpl
repnz
mov
mov
cmp
push
jb
mov
xlat
fstpt
cli
jo
sbb
push
adc
out
jecxz
fsubs
mov
xchg
ljmp
jo
jg
adc
mov
stos
test
shrb
icebp
fwait
adc
cmpsb
movsl
xor
jl
repnz
jnp
sbb
nop
jno
dec
clc
test
mov
ljmp
test
mov
xchg
aam
into
sub
bswap
in
push
mov
adc
xchg
pop
popa
inc
loop
lods
cmc
mov
xchg
lahf
pop
and
jns
xor
dec
pop
cwtl
xor
sbb
stos
pusha
cmp
shll
int3
mov
or
push
jns
idivl
shl
xchg
je
xor
inc
aad
sbbb
xchg
push
xchg
popa
and
mov
insl
adc
in
stos
cmp
sbb
popf
ss
shlb
leave
xor
je
inc
jns
xor
lret
mov
clc
fnstenv
mov
lods
dec
push
cmpsl
jecxz
pop
fwait
push
push
xor
testb
lds
xor
fisubrl
sbb
ret
xor
pop
or
clc
fs
lahf
and
pop
sbb
sub
data16
add
cmc
pop
xor
mov
sub
clc
addr16
mov
mov
pop
dec
sbb
adc
jbe
pop
loopne
xchg
or
jp
push
xchg
pushf
push
sub
lcall
mov
lcall
push
pop
cmp
and
mov
jge
faddp
aad
test
xor
lds
jp
cli
mov
mov
pop
and
mov
add
or
ds
nop
andl
mov
pop
lods
and
jle
pop
fldt
pop
cmp
fldcw
mov
outsb
cmpsb
test
test
jl
lods
pop
push
mov
mov
pop
je
call
aaa
subl
mov
sub
test
jle
pusha
mov
or
loopne
mov
sub
les
push
add
pop
adc
clc
test
sub
pop
pop
sahf
push
add
fxch
xor
mov
push
mov
ss
adc
imul
xor
test
test
xchg
push
pop
mov
sub
mov
js
mov
sbb
inc
mov
les
aaa
add
pusha
xchg
ficoms
adcl
pusha
rorb
xchg
mov
lea
and
or
push
es
jb
lahf
leave
sbb
xchg
sub
outsl
jg
aam
xchg
push
aas
out
jle
adc
sbb
loopne
mov
sahf
pop
add
pop
mov
mov
je
pop
and
mov
iret
out
jmp
pop
sbb
les
out
cmp
lret
mov
adc
movsb
or
repnz
iret
adc
dec
xchg
sub
js
aaa
ror
dec
mov
mov
js
mov
xchg
pop
stc
aas
inc
adc
aad
out
push
sbbb
cmp
sbb
jecxz
push
mov
imul
adc
imul
lret
int3
xor
fmul
cmp
insl
adc
xchg
jecxz
mov
xor
inc
inc
add
jg
iret
dec
pop
sbb
repz
fstl
jp
flds
fwait
mov
mov
add
pop
sub
dec
mov
fwait
aaa
mov
mov
icebp
push
out
loop
cmp
aaa
mov
pop
iret
xor
loope
adcl
jl
hlt
enter
pop
lock
or
stos
in
lods
and
imul
lret
sti
adc
inc
pushf
rcrb
cmpsl
jecxz
scas
repnz
dec
dec
mov
jp
test
cmp
pusha
stos
jae
cmp
pop
test
jo
sahf
mov
or
add
mov
push
cmp
xor
popf
cmpsb
movsl
pusha
int
psubusw
mov
repz
push
cs
lods
out
out
scas
sbb
out
divl
xchg
dec
jbe
fsubp
sub
shll
push
inc
loope
rolb
out
cmp
andl
arpl
add
cmp
sbb
lret
stos
lcall
out
add
mov
sti
out
imull
mov
or
mov
cs
mov
jb
sahf
stos
inc
xchg
xchg
call
sbb
add
mov
xor
loopne
pop
es
cmp
xchg
loope
xchg
lock
dec
lcall
push
push
popl
jns
pop
scas
dec
dec
dec
into
in
add
movsl
mov
arpl
pop
mov
and
iret
hlt
stos
popa
and
cmpsl
add
sbb
out
icebp
cmp
sbb
outsl
jp
iret
scas
inc
pop
clc
mov
incb
xchg
pop
mov
jge
cmp
fcomps
mov
and
jl
xchg
lock
mov
in
pop
fmuls
xchg
repz
jnp
adc
ljmp
adc
mov
inc
dec
jo
xchg
popa
mov
nop
dec
ja
cmpl
xchg
lds
and
jnp
xchg
sub
stc
adc
jl
rolb
daa
or
mov
pop
outsb
and
cmp
das
stos
pop
insl
cmp
imul
lds
cmp
pop
xor
add
cltd
jns
push
outsl
jno
push
les
jecxz
sub
ret
inc
aas
les
push
in
jb
jg
mov
and
fcoms
movsl
mov
aad
inc
inc
sbb
outsl
mov
push
pop
loopne
fnstsw
out
mov
lock
out
pop
sub
call
jmp
push
cld
in
es
enter
cli
scas
sub
sub
test
jp
sbb
call
loope
xlat
mov
xor
push
add
popa
loop
pop
mov
cmc
out
fisubs
jmp
cs
hlt
push
mov
decl
lret
pushf
sahf
mov
addl
into
sub
lods
shl
movsl
inc
lods
iret
aam
cmp
jae
cmp
sysenter
add
enter
and
inc
shlb
idivl
cli
jle
dec
loope
rcll
scas
testl
mov
mov
lcall
add
or
jl
jnp
cmp
jl
enter
cmp
push
jne
push
sub
ss
cmp
xchg
dec
dec
in
add
enter
jecxz
addl
add
jo
sub
stos
fstl
and
out
xchg
xchg
sub
and
addb
mov
lods
or
rclb
or
out
cltd
jecxz
mov
inc
rcll
mov
cmp
pop
daa
cmc
pop
fcmove
push
mov
cwtl
dec
mov
std
push
dec
fstl
inc
int
or
sbb
push
push
pusha
xor
sub
mov
mov
stos
call
dec
xor
psubusb
add
jno
jecxz
js
lahf
aam
sbb
mov
lods
aas
mov
cmp
push
call
movsb
cmp
sub
sub
sbb
xchg
test
ret
pop
leave
pusha
xorl
fsts
jbe
repz
add
aad
shrb
pop
arpl
jecxz
dec
sahf
inc
mov
cmpsl
xchg
adc
bnd
push
inc
dec
sarl
mov
push
rcll
loop
bound
xlat
dec
mov
movsl
xor
popf
das
jmp
fstpt
adc
data16
mov
pusha
add
popa
js
inc
test
inc
mov
or
pusha
push
scas
xchg
pop
bound
ret
call
bound
and
inc
jg
xchg
push
mov
lret
gs
or
jp
xchg
in
push
inc
mov
cltd
sbb
lods
cs
jecxz
mov
jle
hlt
dec
xchg
cld
mov
fs
push
test
xchg
jmp
jge
insl
pushf
dec
int3
pop
fnsave
movsl
movsb
mov
push
popf
js
lcall
scas
mov
jo
xchg
pop
jae
mov
mov
push
addr16
je
aam
stos
dec
sub
xchg
jnp
imul
scas
push
push
pushf
les
imul
mov
push
cmp
mov
sub
adc
sarb
les
loopne
xchg
rcll
jle
loop
rcrb
and
dec
test
sub
fadds
leave
popf
hlt
insb
dec
mov
mov
dec
pop
inc
xchg
pop
nop
js
pusha
test
add
adc
xchg
mov
cmpxchg
popa
lods
xchg
mov
push
in
mov
cmp
add
jne,pn
inc
mov
mov
sbb
mov
cmp
aas
add
and
xchg
stos
arpl
jp
fsubrl
xchg
pop
sub
adc
js
test
addr16
pop
aas
lods
and
jp
and
or
inc
dec
and
push
inc
repnz
ret
push
call
ret
subl
idiv
cmc
cmp
call
test
ljmp
push
pusha
or
mov
mov
jns
mov
pusha
in
push
sbbb
dec
cwtl
cmp
out
jnp
lcall
jbe
dec
inc
enter
std
cmc
push
jmp
test
jbe
das
fucomp
ja
sub
lods
or
sahf
push
sub
outsb
dec
or
mov
sbb
popa
mov
dec
xor
iret
stos
fsubr
movsl
push
xor
cmp
lahf
clc
outsl
and
mov
jns
dec
mov
push
jecxz
cli
sbb
mov
stos
int3
jge
pop
inc
je
xor
inc
das
and
enter
dec
xchg
nop
dec
cwtl
testb
fcmovnu
cs
mull
inc
push
xor
pusha
mov
shlb
repnz
mov
xor
jno
or
adc
nop
rcll
cmp
aas
mov
and
aam
loopne
jae
mov
lret
inc
mov
mov
push
loop
xor
pop
push
movl
inc
fstpt
adc
pushf
repz
dec
push
bound
sbb
cs
fistl
jbe
rolb
out
cmp
stos
and
mov
ljmp
call
push
arpl
orb
push
pop
add
xor
jecxz
das
mov
and
rcl
push
out
inc
bound
dec
fldl
xchg
in
push
push
add
cld
add
lret
popl
and
cltd
and
les
add
test
or
dec
jmp
xor
aaa
sub
test
jns
test
sub
jmp
sub
xor
mov
mov
aas
xor
insb
push
and
lds
aad
insl
pop
fwait
and
pop
test
mov
insl
pop
ljmp
aaa
jge
xor
jns
and
ljmp
loopne
and
ds
adc
inc
mov
inc
in
xchg
dec
int
xor
and
mov
lcall
out
nop
inc
fnstsw
push
out
jmp
insb
cld
jns
lcall
and
je
shlb
adc
xchg
xchg
dec
out
pop
sub
jecxz
inc
je
and
sub
add
xchg
mov
xchg
push
iret
inc
inc
fptan
add
jge
cmpsb
arpl
jae
inc
mov
mov
add
inc
fisubs
mov
paddusb
pop
out
xchg
sub
pushf
pop
dec
test
jp
pop
rclb
mov
mov
pop
mov
inc
out
out
jge
jg
jg
ret
dec
lds
mov
movsl
xor
notl
xor
mov
pop
out
adc
sbb
aam
idiv
adc
in
add
inc
sysret
push
divb
mov
push
xor
dec
das
push
fs
sysenter
push
aaa
es
xchg
xor
or
mov
and
lcall
dec
out
and
pushf
xchg
leave
pop
daa
lods
dec
xor
loop
js
xor
xor
pop
add
je
das
lcall
xor
push
or
sub
pop
mov
dec
inc
pop
fldt
cmp
mov
hlt
push
jmp
pop
jne
add
clc
mov
inc
cmp
ja
cld
lret
pop
pop
xor
lock
lock
sub
add
mov
into
loopne
mov
xchg
test
imul
loope
lret
pop
cwtl
push
cwtl
or
xchg
and
cwtl
dec
mov
pop
dec
jle
add
or
das
js
jne
xchg
pop
fdivl
push
dec
or
mov
aas
mov
icebp
xor
negb
lods
ror
xor
xchg
test
mov
lcall
pop
inc
inc
enter
cwtl
inc
jne
stc
jle
rol
je
mov
data16
xchg
in
mov
cwtl
jmp
xlat
lret
mov
leave
cwtl
sub
call
xor
push
add
les
outsl
dec
fstl
xchg
mov
inc
sahf
mov
imul
mov
mov
mov
mov
sbb
fcmovb
mov
sub
jmp
or
lds
sbb
mov
subl
pop
pop
dec
mov
xchg
pop
push
inc
pop
push
por
xchg
cmp
fildl
dec
rcll
mov
repz
add
xchg
or
push
mov
inc
sahf
enter
popa
xchg
test
dec
cmc
mov
int
jl
sti
xchg
adc
sbb
arpl
andl
inc
subl
mov
or
ffree
push
arpl
or
mov
test
pop
push
lcall
mov
add
fsubl
and
scas
push
sub
push
aam
aas
add
pop
loopne
jmp
mov
dec
aas
push
in
push
sbb
inc
les
push
pop
mov
js
dec
push
xchg
xchg
add
cmp
daa
xchg
lahf
imul
jns
dec
fidivrs
jne
data16
fmuls
mov
mov
inc
cs
dec
push
inc
scas
xchg
js
arpl
jl
xor
xchg
and
aaa
aaa
das
mov
icebp
and
lret
insl
hlt
xor
into
jns
in
lret
lods
xchg
cmp
mov
daa
imul
push
xor
fwait
xchg
std
push
in
jmp
fstpl
dec
inc
arpl
mov
and
loopne
scas
fisttpl
or
dec
sti
in
addb
adc
in
pop
aad
roll
xor
mov
cltd
or
inc
test
inc
sbb
movsb
adc
xchg
mov
jne
mov
aam
shr
dec
lret
push
cmpsl
xchg
jle
cmp
sub
das
pop
push
fsubrs
sbb
inc
mov
xchg
in
jge
push
sbb
mov
jg
in
dec
ss
inc
int3
xor
mov
jae
nop
adc
sbb
loopne
lahf
xor
jmp
jae
adc
mov
adc
pop
mov
mov
pop
rcr
mov
hlt
hlt
mov
rclb
pop
mov
out
sbbb
dec
in
xlat
pop
cmp
les
mov
inc
add
and
in
sub
jb
cmpsb
push
xor
add
push
mov
lods
mov
movsl
jl
addb
inc
ljmp
imul
adc
cmp
pop
mov
mov
cmp
aas
push
imul
lock
cmc
std
into
loope
in
jae
sahf
popf
dec
push
mov
sti
mov
sbb
ljmp
fwait
xor
stos
popa
cli
sbb
iret
cmp
leave
inc
xorl
jle
or
std
adc
xchg
mov
mov
sbb
call
mov
mov
push
xor
fwait
lods
std
aas
mov
dec
jge
rcr
push
int
lock
jecxz
in
and
lods
out
and
xchg
rolb
mov
xor
inc
ja
sub
push
mov
js
pop
loop
pop
adc
push
or
dec
shrl
fimuls
mov
push
jl
inc
jecxz
enter
push
push
cli
lret
ja
xor
and
dec
lock
dec
iret
loope
pop
inc
pop
mov
pushf
push
int
test
rcl
sub
in
int3
int3
lcall
lea
mov
cmpsb
fidivrl
inc
lods
imul
popf
imul
pop
mov
add
push
fstps
mov
cmc
mov
daa
testb
inc
subb
xor
and
xchg
mov
fwait
and
sub
cs
in
int
xchg
push
push
pop
cli
or
and
sub
cmp
sbb
clc
add
sub
andl
adc
push
push
pop
in
add
pop
leave
mov
mov
repnz
sbb
jnp
inc
jns
push
xor
mov
push
mov
sbb
and
xchg
fs
pop
test
dec
mov
cwtl
or
push
out
fwait
pop
xchg
mov
idivb
pusha
jb
std
outsl
dec
clc
lods
aaa
lret
xchg
ret
lret
xchg
mov
iret
sub
leave
cmp
mov
sub
mov
add
arpl
add
dec
out
outsb
inc
push
enter
mov
or
add
insb
mov
mov
mov
xorb
mov
add
iret
or
cmp
add
cltd
mov
adc
pop
das
inc
stos
clc
mov
stos
dec
push
pop
xor
sahf
test
fnsave
mov
and
imul
inc
into
xor
xchg
push
xchg
fsubl
push
cld
shll
shll
dec
int
or
sbbb
pusha
mov
sub
or
rcrb
cmpsb
test
xlat
xor
mov
cmp
and
cmpsb
dec
jnp
cli
xor
scas
ficompl
mov
fwait
xchg
adc
or
or
in
out
mov
in
fcompl
dec
jbe
jae
lret
lods
and
push
lods
lret
mov
loope
jg
je
or
into
stc
in
push
and
or
cmp
aas
push
lods
push
inc
ds
icebp
out
jnp
hlt
mov
stos
cmp
mov
daa
jo
test
push
ret
cmp
js
inc
cmp
dec
dec
pop
pop
fsubrs
fbstp
pushf
cmp
fisttpll
mov
add
js
xchg
mov
sarl
jne
ret
adc
lods
add
sbb
mulb
xchg
adc
mov
mov
ret
mov
pushf
mulb
pop
xchg
out
or
inc
mov
aam
or
ds
xor
dec
jo
flds
mov
push
loop
outsb
mov
pop
mov
mov
je
cmp
imul
lods
inc
pop
jl
pop
lret
cs
js
xchg
lret
adc
pusha
cs
sbb
leave
pop
in
mov
sub
adc
rcr
sub
jne
adc
cs
insb
dec
hlt
xchg
fistl
movsb
outsl
in
out
mov
sub
push
sub
cwtl
test
popa
push
inc
repz
cmp
sbb
inc
cmc
push
pushl
std
and
test
sub
xor
iret
mov
in
cmc
out
inc
jecxz
jbe
sahf
out
pop
or
cld
in
cli
cmp
mov
sbb
rcr
fstl
ljmp
sbb
sub
sbb
and
nop
scas
insl
mov
mov
cli
add
adc
push
cmp
popa
jge
xchg
sub
inc
xor
pushf
xchg
ss
add
mov
je
daa
leave
pop
pushf
sahf
repz
cmp
ljmp
lret
aad
addr16
push
ljmp
jmp
cmp
pushf
enter
adc
mov
cmpsb
fs
and
pop
mov
pop
inc
sti
data16
mov
xor
dec
sbb
sub
xor
mov
push
xorb
pop
test
sub
stos
or
sbb
mov
add
repz
ljmp
mov
cmpb
es
fistl
stos
adc
test
dec
movsl
cmp
mov
sahf
shrb
out
aaa
movsb
into
pusha
jl
dec
nop
clc
xchg
dec
cwtl
stos
imul
cs
mov
stos
inc
leave
movsb
mov
sub
mov
jae
aam
push
add
sub
jge
and
mov
adc
lods
sbb
fiadds
sti
push
in
push
sbb
decb
shrb
lahf
mulb
rcrl
out
push
pop
mov
mov
fldt
adc
push
sub
hlt
sahf
dec
pop
into
xlat
ds
sbb
ror
shrl
mov
out
cmp
xorb
dec
loope
pop
dec
ja
addr16
add
cwtl
dec
sbb
adc
outsb
lods
loopne
pop
enter
or
sub
mov
clc
add
inc
mov
add
xchg
cmpsb
or
xor
dec
mov
jmp
mov
jbe
xchg
lods
mov
cmp
fldenv
pop
adc
add
sub
jne
inc
adc
pop
mov
popf
cmp
jge
jl
popa
pop
aam
loop
addl
aas
ret
lret
leave
cmc
cltd
or
lret
inc
movlps
jle
inc
cmp
cs
outsb
sbb
dec
mov
dec
inc
or
adc
push
jle
pop
push
test
popf
pop
cmp
dec
sub
lock
bound
mov
sarl
and
jmp
jb
sbb
dec
push
jns
jb
sbb
push
inc
in
sub
xor
jl
mov
dec
sub
mov
das
push
dec
sbb
mov
fwait
sti
lea
sbb
mov
movsl
aad
xchg
mov
ljmp
jg
cltd
sbb
pushf
sahf
lock
add
inc
jnp
in
mov
test
movsl
shr
mov
mov
flds
ljmp
pop
jns
jg
xchg
or
sbb
into
jnp
fists
sbb
iret
sbb
in
stos
ss
test
and
xchg
insb
fwait
xor
in
xchg
mov
sar
es
les
aas
xchg
popf
pop
mov
mov
in
mov
sbb
add
pop
add
popa
jmp
inc
add
outsb
in
or
andb
lea
out
mov
sub
js
jle
push
daa
outsl
or
lret
adcb
mov
xchg
pop
or
sahf
sub
cmp
std
cli
fwait
testl
loopne
mov
dec
inc
lahf
aas
jg
into
xchg
cwtl
xor
push
bound
mov
loop
xor
int3
sub
pusha
pop
adc
and
xchg
ds
mov
mov
cmp
movsl
push
ljmp
jecxz
lods
jb
cmpsb
in
leave
xchg
out
cvtps2pd
loop
jle
inc
jnp
or
stc
shrb
mov
jns
mov
dec
mov
adc
aad
mov
loopne
shll
push
cmpsl
jo
mov
das
jp
jnp
in
add
push
xchg
adc
sub
aas
daa
pop
cmpsb
inc
jp
test
inc
cmpl
push
fldlg2
xchg
lret
cmc
push
pop
pop
enter
cmpsb
sbb
cmovne
mov
aam
test
push
mov
sbb
scas
mov
mov
dec
int
sbb
mov
movb
inc
jbe
loopne
in
in
pop
hlt
pop
pusha
mov
imul
jns
test
sub
mov
ss
stos
fs
lret
ret
sti
dec
jbe
cmp
call
scas
jl
pushf
xchg
xchg
mov
xor
or
ljmp
dec
pop
arpl
inc
adc
cmp
and
stc
mov
jl
rorb
add
push
adcb
mov
in
push
fnstcw
repnz
inc
push
add
mov
outsb
testl
cmpsb
addr16
mov
dec
jl
lahf
sbb
push
jmp
std
adc
sbb
int
dec
push
jecxz
sbb
pushf
aad
inc
pop
xor
iret
hlt
jno
adc
divl
mov
lods
dec
cmpsl
mov
repnz
mov
jmp
adc
lds
mov
aam
xchg
out
cmp
xchg
jno
pop
mov
fs
or
inc
add
cltd
rcrb
cmovs
lcall
loop
or
jge
fnstsw
addb
jmp
inc
rcl
repnz
sar
insl
mov
xor
push
jp
rorl
cmp
add
test
cmp
mov
pop
dec
and
jae
or
mov
sahf
jae
comiss
ret
sbb
mov
je
stos
jns
mov
xchg
mov
adc
imul
dec
push
or
adc
rcrl
sti
fisubrs
gs
xchg
or
outsb
push
mov
cs
repnz
mov
ret
iret
lcall
pop
xor
inc
lock
cwtl
pop
shr
adc
sub
xlat
nop
popa
pusha
or
enter
add
ja
jecxz
or
cmpsb
mov
xlat
nopl
test
fisubrl
or
imul
xchg
adc
bnd
xchg
popa
xor
cmc
xchg
js
dec
in
test
and
cmp
mov
popa
pusha
sub
mov
out
bound
mov
or
or
out
adc
add
movsl
add
nop
xchg
loope
pop
dec
sar
jb
iret
sbb
and
jmp
test
dec
adc
shl
andb
shll
stc
or
lret
js
aas
stos
pop
sar
cmc
into
imul
movsb
movsl
loopne
xor
cmp
and
sahf
mov
mov
or
shl
testb
imul
jmp
fdivrp
int3
jno
enter
rorb
mov
scas
fildl
xlat
add
or
pop
clc
fstl
pop
add
inc
xchg
adc
push
add
int3
mov
xor
lods
dec
xchg
clc
mov
or
icebp
pop
sub
dec
and
mov
orl
dec
out
xor
mov
popf
xchg
leave
jne
cmc
pop
cmp
sub
push
mov
jp
popf
pop
out
inc
fcomps
pushf
pushf
frstor
lcall
push
jg
rcrl
out
call
sub
mov
sub
push
lcall
jbe
call
in
mov
mov
xchg
scas
fwait
ret
or
ja
sub
scas
push
rorl
xchg
lea
mov
push
and
mov
loope
push
push
cmpsb
dec
jo
dec
cmp
sub
rolb
and
arpl
test
int
rorb
inc
aaa
int3
aaa
fwait
lods
repnz
lret
fildl
xor
mov
dec
jb
int
cmp
subb
ss
sbb
lock
mov
ret
test
lods
adc
pop
popf
sub
or
mov
es
and
cmp
roll
je
mov
aaa
or
dec
sub
sahf
add
stos
lret
test
xchg
cmp
cmp
pop
xchg
dec
cmp
cmpsb
xor
inc
ds
lcall
je
jl
mov
jno
mov
sub
nop
aaa
mov
xor
pop
mov
popa
jbe
sti
pop
inc
sbb
jle
cwtl
mov
or
rcpps
test
shrb
adc
sub
mov
aas
das
push
nop
cmp
repz
aad
add
test
lret
xor
push
jp
insb
test
in
pop
ja
roll
insb
sbb
mov
in
inc
in
cmp
xchg
scas
lods
add
loope
es
roll
hlt
or
or
adc
sahf
enter
rcr
out
cmpsb
adc
jo
dec
lods
mov
aas
dec
int3
shr
sub
shrb
imul
fidivrs
xchg
adc
das
pop
and
sub
repz
js
push
adc
lods
mov
shr
xor
orl
fadd
pop
pusha
test
push
xchg
dec
test
sub
push
stos
out
sbb
inc
in
push
ja
dec
lock
roll
lret
jbe
cmp
fbstp
pop
repnz
sub
or
test
stos
sub
push
andb
addr16
mov
xor
dec
dec
loop
out
int3
push
or
push
aas
fisttpll
xchg
ret
lahf
stc
mov
lahf
pop
inc
les
sub
and
add
sti
int3
ret
js
pop
inc
mov
cmp
ss
jg
mov
mov
pop
insb
in
shl
cmp
insl
jl
insb
mov
outsb
mov
jae
lds
ret
jne
imul
mov
dec
out
fiaddl
js
or
push
das
shll
insb
ds
sub
lret
addr16
xor
xor
dec
lea
pop
mov
sarb
push
fidivl
test
mov
cltd
addr16
movsl
xor
dec
ja
push
push
ljmp
mull
inc
sub
sbb
inc
fisubrs
clc
call
pop
es
and
fwait
repz
sub
or
and
sahf
cli
and
nop
lret
gs
mov
pushf
lds
push
adc
addb
mov
lods
or
sub
rorb
xchg
pop
pop
mov
stos
lret
ficoms
add
dec
dec
xchg
cmp
or
jnp
dec
test
mov
cmp
cmp
add
mov
cmpsl
cmc
cmp
xchg
xor
fdivl
daa
loop
mov
iret
out
out
shrb
pop
nop
test
jl
push
mov
mov
jo
mov
jle,pt
jge
loopne
push
push
xchg
mov
and
in
dec
mov
push
nop
fs
adc
out
aad
out
ret
movsl
test
sahf
sarl
mov
mov
in
mov
repnz
dec
data16
sub
mov
movsl
xor
icebp
cli
sti
mov
daa
pusha
or
inc
rorl
xchg
cwtl
jno
ss
and
cld
and
hlt
ljmp
mov
mov
inc
fistpll
mov
jmp
inc
or
adcl
pop
jge
in
xchg
xor
push
jb
daa
stc
mov
adc
mov
not
jne,pn
je
inc
sbb
jno
cmp
push
arpl
push
insb
adc
or
pusha
dec
cmp
fbstp
adc
push
adc
adc
xchg
rcll
mov
out
lret
adc
pop
fistpll
or
push
push
mov
fwait
push
cmpsl
or
outsl
or
and
add
fs
lret
mov
fbstp
xchg
ret
inc
mov
pushf
test
inc
pop
bound
jp
test
and
xchg
in
or
jge
loop
or
push
lods
mov
xchg
sbb
inc
adc
sarl
in
push
outsl
mov
out
pop
lods
test
stos
sub
push
add
les
lahf
cmpsl
fisubs
ds
jae
les
ret
xchg
or
dec
std
xlat
nop
push
ret
movl
dec
je
mov
mov
jo
jbe
mov
jl
mov
in
cwtl
rclb
ret
pop
push
jmp
xor
icebp
mov
mov
fisubrl
subl
iret
xchg
inc
and
jmp
ja
into
enter
cs
mov
movsl
shlb
fstpt
jmp
add
aas
inc
sahf
push
jmp
pushf
nop
sarb
jae
or
jl
insb
dec
push
sub
and
push
decb
lret
cs
xchg
add
lret
rorb
push
aas
arpl
jp
fstpt
inc
xlat
pop
mov
enter
cmp
adc
es
jle
jle
test
sub
gs
jmp
sub
add
test
scas
or
adc
inc
out
leave
mov
dec
dec
lret
dec
cs
stos
mov
adc
push
mov
lds
outsb
cmp
xor
inc
jbe
idivl
repnz
pop
pop
xchg
push
sti
sub
lock
lret
mov
adc
lods
ds
pop
pusha
jno
sarb
sub
dec
gs
hlt
stos
in
push
stos
fs
das
insl
jne
cmpsl
mov
pop
in
mov
xor
hlt
sub
pop
test
add
fstp
xchg
mov
and
js
fldl
lods
push
cmp
sub
dec
jmp
sti
cltd
xchg
sub
mov
mov
out
cmp
inc
in
lahf
xor
mov
shll
mov
cwtl
dec
imulb
jg
bound
cmc
stos
inc
mov
imul
mov
fucom
mov
lea
pushf
into
jne
jg
leave
add
mov
gs
insl
out
iret
push
scas
popa
inc
jmp
xchg
scas
aas
cmp
fistl
push
xor
jle
inc
pop
jge
jmp
in
arpl
call
dec
jmp
std
dec
nop
xchg
and
adc
or
mov
ret
add
popa
add
mov
add
adc
adc
mov
adc
add
data16
push
insb
adc
loop
cmp
daa
jmp
mov
in
addr16
mov
mov
out
sub
inc
sbb
add
call
rolb
push
dec
lret
push
addr16
adc
ret
shl
xchg
aad
xchg
sbb
sub
push
and
pop
in
test
xor
xor
in
ds
lahf
mov
cmp
hlt
lock
in
out
mov
pop
sbb
cmpsb
pushf
int3
push
into
bound
or
scas
mov
mov
es
pop
cli
ljmp
negb
out
mov
hlt
or
loope
iret
dec
arpl
in
setle
stos
jg
xlat
rolb
cmc
dec
fwait
ja
cmp
jmp
mov
insl
sub
pop
pop
lcall
mov
cmc
in
push
dec
mov
cmpsl
fwait
xchg
mov
xchg
add
aam
pop
pusha
por
sti
xchg
mov
pop
repnz
xchg
dec
or
fistpl
jl
in
lods
inc
rol
lock
pop
ja
jmp
jne
mov
sub
sub
out
jl
insl
adc
movsl
imulb
and
add
push
leave
xor
jge
imul
adc
out
int3
push
shrb
inc
shr
lret
sahf
lock
mov
adc
jno
jge
jp
dec
out
jl
leave
sahf
cmp
int3
dec
mov
mov
mov
dec
lock
mov
lds
repnz
inc
div
adc
adc
and
push
in
sub
stos
jmp
repnz
movsl
cmc
sbb
bound
int
mov
pop
and
or
add
mov
xchg
subl
jo
or
loopne
add
mov
push
xor
xchg
dec
push
call
pop
add
cli
mov
in
mov
or
ja
push
cwtl
flds
loope
sti
xchg
jle
add
jo
shl
dec
xchg
ja
sahf
inc
cmpsl
lock
sbb
pop
dec
clc
adc
fistpll
lods
dec
and
aas
inc
movsb
pusha
out
push
sub
mov
call
jecxz
cmpsl
in
xchg
or
push
and
test
scas
ficompl
out
arpl
sti
sbb
in
outsl
lods
mov
jle
pop
into
and
rol
pop
dec
out
mov
rorb
int3
imul
or
lahf
std
sbb
les
push
sbb
std
push
adc
adc
stos
aam
decl
std
mov
rorb
and
fnstsw
mov
and
cmp
test
dec
imul
lahf
mov
daa
das
test
mov
adc
rorb
mov
outsb
dec
cmp
xor
ror
mov
scas
push
dec
out
fisubs
inc
xchg
stos
inc
sub
adc
ja
adc
mov
add
dec
or
mov
mov
or
pusha
leave
dec
xchg
or
cli
lcall
pusha
mov
not
xor
cmp
iret
in
sbb
add
aaa
sub
push
int
jnp
data16
test
push
jae
stc
xchg
lods
pop
rorb
fstl
sbb
fisubl
xchg
arpl
cwtl
xor
cmp
ret
inc
stc
scas
mov
ljmp
cmpsb
rcll
movl
xchg
jmp
test
icebp
or
and
icebp
loope
jge
xchg
pop
les
mov
xor
ret
or
cmp
daa
mov
pop
mov
lea
leave
xor
pop
pop
stc
sub
push
ljmp
and
xchg
mov
push
jmp
sub
imul
pusha
cmpsb
ds
sbb
push
pop
dec
mov
dec
in
decl
sbb
jl
or
in
pop
andb
mov
add
xchg
jno
and
mov
cld
hlt
push
push
jle
and
lcall
cld
push
sbb
xchg
adc
dec
vpor
test
sub
lret
cmp
cli
outsb
out
repnz
mov
scas
fs
lods
pop
int
xor
xor
sbb
push
cmp
aaa
ss
insl
loopne
dec
cmpsb
mov
push
mov
cmp
cmovp
xlat
pop
ret
jge
movsl
push
cmp
push
add
out
call
jnp
leave
int3
mov
inc
imul
out
mov
sbb
scas
lret
mov
push
les
cmpsb
lods
cmp
rcr
pop
xchg
testb
arpl
lds
jp
sti
es
dec
add
lahf
pushf
iret
mov
inc
xchg
lods
pop
stos
add
xor
arpl
mov
cmp
pop
outsl
test
jnp
add
sub
and
sub
pop
loope
jns
dec
sub
xchg
dec
lcall
sbb
mov
jne
cmp
shl
test
aas
add
dec
test
xor
es
lea
xor
lret
shr
rcrb
mov
mov
jns
imul
and
xor
roll
insl
inc
dec
push
mov
push
mov
inc
sbb
inc
fiadds
loopne
leave
js
sbb
pop
mov
insb
cmp
dec
xlat
sbb
ds
sahf
fildl
popa
int3
out
cwtl
dec
cmp
xchg
aam
leave
cwtl
imul
lahf
pushf
mov
in
stos
popf
je
test
jne
fildl
mov
and
jg
jnp
leave
addr16
adc
dec
pop
mov
xor
mov
std
jne
or
aas
lds
xchg
mov
bound
or
sub
pusha
gs
cwtl
pusha
mov
mov
inc
test
mov
jno
outsb
inc
dec
xchg
insb
je
push
adc
or
test
sarb
push
jle
dec
adc
xor
jp
xor
mov
int3
pushf
mov
sbb
popf
mov
repz
push
jo
bound
rcl
das
add
and
scas
movsl
hlt
and
add
xor
sub
jmp
add
ss
adc
jns
int
sti
pop
or
inc
push
mov
or
xchg
fwait
adc
mov
pop
sbb
jmp
std
aad
push
and
sti
shrl
or
lret
rolb
pop
fmull
mov
xchg
loop
enter
mov
adc
aaa
das
adc
movsb
cli
iret
fildl
in
mov
jbe
or
or
ret
pop
push
jmp
adc
mov
mov
inc
sahf
cmp
lea
pop
mov
mov
shrb
insb
add
adc
mov
in
jo
pusha
xchg
aas
inc
ds
cmpb
jae
sbb
jnp
adc
sbb
sub
int3
adc
stos
stos
test
xchg
bound
push
in
daa
pop
or
das
mov
push
jne
pop
jns
mov
adcl
inc
jns
mov
push
xchg
js
insl
xchg
add
sbb
or
cmp
push
in
cmpsb
insb
jle
cmp
push
ret
dec
es
and
scas
push
add
dec
js
into
decb
xor
fistps
mov
and
in
clc
hlt
aam
and
imul
push
and
jg
frstor
jl
and
cmpsb
leave
lods
and
aaa
cld
test
add
aaa
enter
xor
hlt
push
test
mov
mov
sub
stc
daa
and
imul
sahf
cmp
push
adc
dec
fidivs
movsb
jbe
in
pop
mov
cmp
cltd
in
cltd
icebp
aaa
xchg
into
xor
add
adc
push
sub
mov
test
cmp
or
in
xor
sbb
push
mov
sti
adc
pop
push
outsb
fldt
xchg
insl
fldt
adc
and
sub
cwtl
leave
test
push
call
dec
cmp
xchg
mov
lea
ficoms
dec
jp
ds
addr16
in
mov
push
imul
ret
popf
cld
lcall
daa
adc
pop
leave
add
jecxz
mov
cli
outsb
decl
sbb
mov
dec
sbb
adc
add
xor
sub
mov
xlat
mov
xchg
gs
loop
daa
addr16
sbb
cmp
lret
mov
aas
call
cmp
push
pop
xor
inc
es
icebp
imul
xor
rcll
xchg
rcrb
mov
mov
xor
or
ljmp
aas
mov
pop
or
cmp
cltd
iret
adc
notb
imul
dec
add
mov
pop
movsb
inc
outsb
sarl
push
stos
add
int
mov
cmp
mull
ss
xchg
or
rclb
fldt
testb
test
and
jne
int
xchg
cmpsb
dec
shll
aam
inc
and
inc
nop
adc
pop
add
sbb
cmp
or
jmp
ds
iret
mov
jnp
xor
out
orl
jge
sub
outsb
aad
push
int
sti
sub
mov
pop
xor
repz
adc
adc
lods
imul
jns
dec
pop
push
cmpsb
arpl
jno
mov
loopne
mov
pusha
xchg
dec
pusha
js
jp
add
and
fildll
out
or
xchg
push
dec
sbb
xchg
xchg
stc
pop
mov
xor
pop
lods
icebp
in
cmp
call
ret
push
cmp
pop
ljmp
cwtl
cltd
mov
shlb
ret
jmp
scas
pushf
out
mov
sub
cwtl
lret
jmp
bound
aaa
jecxz
cwtl
scas
dec
jo
decl
jns
bound
mov
sub
into
in
mov
sub
and
sbb
sbb
add
dec
div
add
jge
push
sub
lret
stos
movb
pop
int
mov
ret
mov
je
sti
ds
movsb
aaa
testb
shlb
jae
cmpl
cmp
cmp
loop
out
aad
stos
mov
push
xchg
pop
sbb
and
iret
sahf
adc
mov
shrl
adc
imul
xchg
loopne
jb
jns
xor
sub
test
cmp
mov
test
incl
test
pop
inc
push
xor
insb
or
adc
adc
mov
xor
jae
cltd
shlb
sub
jns
push
jge
pop
dec
xchg
pushf
inc
insb
mov
push
mov
test
cli
adc
xor
in
sub
jb
notl
sbb
test
sbb
inc
sub
shl
insl
fxch
pop
pop
addb
fcoms
mov
mov
mov
fdivl
push
notb
mov
in
sbbb
mov
decb
cmp
and
xchg
jge
js
fsts
ja
jo
ss
sbb
leave
imul
fidivs
nop
mov
test
mov
testb
mov
jo
adc
arpl
lds
dec
mov
sub
add
dec
lcall
iret
mov
pop
lods
and
mov
add
jecxz
imul
xchg
ss
and
mov
andl
ja
aas
jae
xor
sbb
daa
int3
les
sub
jo
push
in
stos
notl
jae
push
test
js
pop
and
fldt
jnp
jbe
push
fidivrs
dec
gs
xor
dec
clc
pop
xor
pusha
and
lcall
mov
jno
sub
out
dec
mov
cmc
leave
mov
push
xor
inc
pushf
outsl
dec
cmc
adc
insb
popf
and
ljmp
insl
pop
cmp
cmpsb
jb
mov
subb
cmpsl
adc
jns
cmp
sbb
mov
out
mov
push
jb
imul
xchg
shl
sbb
adc
push
and
mov
xchg
repz
xchg
xchg
out
jb
ss
jmp
push
fimull
je
test
in
sub
aaa
lahf
xchg
jne
lods
pop
out
mov
mov
adcb
inc
mov
or
out
lods
stc
mov
repnz
mov
or
xchg
fbld
and
rcl
mov
xorl
or
mov
test
xorl
rcrb
jns
popa
mov
nop
xchg
dec
or
add
mov
sub
xchg
mov
fnstcw
fnstsw
sbb
mov
js
stos
in
sub
movb
popf
or
dec
mov
aaa
push
in
xchg
lock
lahf
jo
adc
pop
cmpsb
dec
sbb
cltd
aaa
sub
mov
mov
mov
push
jecxz
mov
pop
mov
repz
leave
pushf
imul
xor
adc
loope
or
sbb
inc
sti
test
add
xchg
xchg
decb
mov
and
xor
cmp
out
aam
xor
push
lods
call
cmp
xchg
add
sarb
inc
and
sahf
mov
movd
int3
mov
mov
cmc
pop
mov
mov
inc
rcll
mov
mov
mov
lcall
daa
and
test
outsb
xor
fwait
call
mov
out
jmp
jne
negl
pop
push
enter
sbb
aaa
aad
enter
xorl
cs
mov
ret
xchg
in
add
sub
pushf
dec
dec
cmc
inc
sbb
xlat
test
jmp
ret
jg
fidivs
scas
ret
push
movsl
jo
mov
outsb
inc
and
push
sub
cmpsb
in
hlt
push
arpl
pop
or
int3
loop,pt
insb
xchg
movsb
out
lcall
and
popf
or
mov
rorl
movsl
aaa
xchg
andl
add
daa
dec
addr16
pop
xor
test
les
xchg
inc
pop
test
rorl
fsubrl
scas
popf
jae
sub
repnz
pop
cltd
fwait
jp
fnstcw
fidivrs
scas
aam
jbe
sbb
and
push
dec
loop
aam
out
pop
mov
and
add
outsb
xlat
push
push
cwtl
adc
imul
and
mov
cs
adc
aaa
adc
xlat
push
mov
movsb
jg
add
mov
arpl
shl
fwait
dec
mov
dec
pusha
jecxz
fisubl
stos
xchg
in
dec
push
repnz
mov
rorb
fidivrl
and
in
lods
stos
enter
jnp
fdiv
ret
jl
aas
sbb
dec
movsl
xchg
push
mov
mov
lods
jae
jns
xor
adc
test
pop
pushf
es
mov
sahf
sbb
sbb
lods
out
gs
mov
lods
mov
mov
xor
sub
push
push
push
pcmpeqb
and
push
push
movsb
sub
int
aam
cmc
mov
adc
push
clc
add
inc
testl
push
mov
pusha
sub
xchg
andl
fcoms
dec
mov
sbb
imul
jb
jae
int3
xor
fstpl
inc
dec
insl
xor
das
out
push
mulb
push
test
jb
push
push
mov
das
sbb
lret
out
in
sbb
lcall
out
mov
ja
dec
lcall
mov
movsb
jge
rcrl
push
int3
and
pusha
fwait
inc
xchg
dec
repnz
arpl
int
into
or
pop
or
sbb
ja
std
jns
lcall
xchg
stos
and
fsubs
dec
dec
push
push
xor
inc
inc
pop
cmc
push
jno
enter
popl
adc
mov
push
and
sbb
push
testl
sbb
aad
sbb
movsb
int3
cmp
xchg
mov
cmpsb
std
inc
xor
add
outsl
mov
bound
movsb
lcall
pusha
sti
cmp
in
push
pushf
mov
mov
and
dec
in
daa
sti
shll
in
sbb
cwtl
int
mov
xchg
inc
sub
mov
push
inc
fs
mov
and
sub
pop
mov
sbb
add
push
adc
js
stc
pop
lcall
shr
or
cmp
jg
pop
mov
dec
into
mov
sti
adc
outsb
mov
sub
xor
ret
in
push
test
and
mov
gs
inc
xor
or
cmpb
mov
xchg
push
xlat
pusha
jb
push
push
mov
adc
lret
xor
xor
ljmp
lock
dec
mov
mov
push
aam
pop
dec
jae
mov
loope
mov
pop
xor
inc
push
pop
lock
repnz
packsswb
cmp
arpl
dec
or
pop
xor
jmp
testl
xor
test
cld
fdivrl
imul
sbb
jo
xchg
and
int3
outsb
sub
push
pop
lret
ficoms
mov
push
stos
dec
push
cmp
xlat
xchg
sbb
test
jp
into
addr16
mov
push
adc
stc
xlat
out
sbb
jp
dec
inc
dec
sbb
nop
mov
adc
fdivrl
mov
sub
fsubrp
push
jae
or
xchg
lea
outsl
jle
sbb
cltd
sub
push
testb
stos
loopne
mov
push
loope
jl
fisubrl
sbb
push
testb
into
jne
scas
out
fnstenv
sub
xchg
jb
jo
les
mov
push
mov
xchg
lods
cmpl
call
cmp
push
out
dec
xchg
add
and
push
ss
pop
sbb
lret
lods
inc
sarl
fbstp
scas
mov
add
push
jne
cmp
add
xlat
je
push
out
mov
push
sti
push
loop
lret
xorb
sub
mov
lods
push
and
loope
pushf
sbb
ret
xchg
ss
mov
or
mov
jno
pop
xchg
xchg
into
fmuls
mov
dec
divl
add
lea
in
xchg
push
pop
inc
sbbl
add
data16
lahf
mov
cmc
ja
pop
adc
push
stos
pop
mov
cwtl
mov
out
fxch
lea
inc
or
fstpt
mov
jge
lret
call
fwait
jg
cmp
mov
and
add
call
cmpsb
mov
mov
test
add
push
mov
pmuludq
inc
and
adc
orl
cmpsb
cmpsb
pop
mov
notb
sub
mov
cmp
jo
inc
xchg
repz
or
mov
mov
xchg
repnz
xchg
sub
ror
xchg
mov
fnclex
scas
pop
pop
jg
fiadds
xchg
aas
stos
das
test
lock
fiaddl
test
mov
add
pop
out
push
dec
sbb
incb
sbb
addr16
repz
aad
xchg
mov
insl
loopne
outsb
ret
rorb
xor
cmpsb
push
das
sbb
imul
or
not
xor
ja
fdivrs
mov
pop
lock
mov
jecxz
xchg
xchg
adc
xchg
and
jecxz
lcall
pop
test
adc
rep
lea
add
cmpsb
push
cmc
mov
stc
out
xchg
and
lcall
insl
nop
inc
imul
hlt
sbb
push
jge
js
int
adc
mov
xchg
das
and
mov
in
jl
clc
repz
sub
fsubl
xor
repnz
fdivrs
xchg
ds
jns
jp
adc
sbb
ja
cld
shr
xchg
inc
mov
andb
add
dec
fwait
das
push
cmp
sub
aad
icebp
cmp
nop
pop
and
and
leave
lods
mov
sub
test
xor
and
xor
popf
jg
xor
nop
push
adc
dec
mov
pop
out
adc
call
jno
pushf
cli
lds
push
sub
add
addl
push
repnz
fcomp
idivb
push
and
adc
mov
fdivrs
sbb
and
mov
adc
push
dec
mov
out
sub
jmp
out
xchg
push
pop
push
adc
les
testl
sarl
popf
jecxz
mov
sub
in
sub
popa
in
mov
fnstsw
shufps
in
cmpsl
inc
ficoml
aaa
mov
dec
stos
loope
inc
dec
into
negl
lret
ss
sbb
mov
sub
sub
mov
pushf
in
testb
jecxz
jmp
cmpl
lods
testb
cmp
je
mov
xchg
mov
je
out
in
mov
push
jbe
and
push
inc
mov
mov
adc
mov
outsl
mov
sbb
sbb
out
call
fs
out
loopne
mov
adc
sub
dec
jae
xchg
sbb
cld
push
cmp
into
jg
adc
cmp
cmp
jb
jbe
xor
lret
fnstenv
out
fs
movsl
cltd
fsubs
adc
adc
repz
jmp
and
lea
jp
jbe
int
sbb
ret
data16
dec
pop
in
adc
pop
loope
in
les
mov
xchg
dec
cltd
adc
and
sbbl
mov
push
adc
sub
jmp
mov
dec
mov
xchg
insb
jmp
or
mov
mov
xor
jecxz
lea
dec
mov
insb
add
sub
shll
or
aaa
mov
test
lret
adcb
call
out
loope
jecxz
xor
pop
dec
pop
lds
sbb
mov
shl
mov
cltd
mov
loop
adc
dec
mov
leave
cmovb
lock
int
jecxz
inc
sbb
mov
jno
ret
outsl
xchg
cmp
clc
push
xchg
in
sbb
mov
mov
cli
xchg
inc
int3
xchg
dec
call
or
xor
inc
mov
mov
scas
daa
push
mov
and
mov
sbb
mov
hlt
or
adcb
adc
add
xchg
stc
push
xchg
mov
ljmp
outsb
pop
mov
mov
cmp
cli
test
out
scas
mov
out
das
inc
dec
fisttpl
inc
inc
popf
dec
idivl
mov
das
push
in
repz
dec
cmc
sbb
ret
shlb
outsb
lahf
xor
sub
test
dec
jae
cmp
adc
pushf
call
fstpl
out
jg
cwtl
xor
fs
push
cmp
inc
mov
popa
sub
int
pop
adc
std
loope
cmpsb
mov
adc
adcb
iret
out
and
mov
aam
sub
lret
mov
dec
fldl
sbb
and
in
xchg
add
jnp
clc
stos
sub
jl
mov
jo
push
into
and
and
pop
mov
ljmp
mov
pop
jp
jp
adc
in
jecxz
enter
adc
arpl
testl
inc
imul
sbb
pop
dec
xor
cmp
test
das
iret
pop
int3
mov
lds
scas
xchg
mov
cmp
imul
sbb
ss
push
lret
movsl
push
cmpsb
mov
shr
inc
into
lock
pop
dec
add
sbb
xchg
adc
push
ja
jbe
add
je
repnz
adc
sbb
push
lods
movaps
cwtl
mov
dec
dec
sti
int3
cmpsb
jb
nop
jae
and
scas
ret
int
sub
scas
call
cmpsb
or
scas
lret
push
mov
push
je
test
mov
out
jno
or
sti
cli
ret
jle
ret
sahf
std
fs
sub
jmp
jnp
xchg
jb
mov
pop
jb
scas
stos
ret
mov
xor
pop
mov
xchg
lcall
mov
fdivrs
push
jo
sub
push
loopne
cmpsb
adc
hlt
lcall
stos
cld
aas
inc
and
in
jmp
mov
lods
or
jmp
xchg
mov
sub
ficoml
lret
mov
sbb
mov
jo
mov
sbb
pop
pusha
cwtl
mov
xor
pushf
shl
fs
pop
push
inc
loopne
mov
xor
cmp
sbb
into
cmp
imul
test
add
decl
jo
mov
push
jo
outsl
add
adc
mov
lahf
sub
jne
adc
test
jne
jecxz
xor
inc
jns
leave
ljmp
fs
out
dec
repz
mov
ret
inc
popf
jb
push
and
rcll
test
outsb
fsubp
les
clc
mov
mov
xchg
out
outsb
jo
dec
push
xor
cmp
adc
mov
cli
mov
jge
imul
aam
subb
sbb
test
mov
jb
push
dec
jae
sbb
push
jnp
fld
movsl
or
loop
sub
fs
insl
mov
cli
or
gs
ds
xchg
jbe
popf
stos
push
out
insb
jl
movsl
jl
mov
aaa
call
clc
sarl
mov
inc
out
xchg
cmp
jge
fwait
dec
xor
push
push
mov
outsl
data16
arpl
mov
sbb
push
mov
cmpsl
data16
movsl
in
lahf
cmp
sub
test
inc
adc
push
insl
push
cmp
ds
cmp
iret
jbe
xchg
inc
sub
or
in
jb
adc
xor
loope
mov
or
sub
outsl
push
mov
or
inc
gs
pop
cld
add
push
sbb
xchg
leave
mov
inc
xchg
cld
jmp
mov
cltd
push
mov
jmp
inc
adc
ss
bound
inc
in
dec
pop
out
mov
in
adc
mov
or
fstps
add
cwtl
js
jge
push
cmp
mov
ret
or
sbb
jne
stc
ds
add
aam
popa
je
mov
add
iret
aaa
pop
add
mov
es
sub
repz
cmc
movsl
fisubrl
jb
xor
test
sbb
cmp
sub
xor
and
and
add
push
fisubrl
push
daa
hlt
or
shll
dec
pop
rol
loopne
in
sub
cwtl
lret
or
jmp
pushf
ds
iret
xor
fimull
insb
pop
sub
jle
push
jo
push
mov
mov
xlat
in
cmp
into
and
xchg
jb
testl
int3
sbb
pusha
ljmp
mov
mov
pop
mov
mov
or
lret
dec
roll
xor
sub
dec
xchg
xchg
dec
pushf
xchg
fdivr
je
das
out
das
mov
push
jbe
sub
imul
inc
jecxz
cmpb
lods
add
add
add
addb
sub
jns
push
dec
cmp
inc
scas
push
mov
xor
arpl
inc
test
sub
pop
dec
fisubs
pop
mov
cmp
inc
push
in
sub
das
in
pop
aas
jmp
push
push
cmp
sahf
adc
inc
inc
sbb
pop
adc
mov
adc
mov
leave
sbb
or
mov
cmp
cld
andl
xchg
ss
xor
outsl
ja
jnp
int3
test
jnp
in
pop
dec
push
pop
or
fisubl
mov
sub
out
out
andl
loop
movb
pop
xchg
xchg
in
adc
insl
jl
in
int
mov
xor
pushf
lahf
int3
jno
or
shlb
pop
mov
jl
push
fldl
icebp
ja
or
nop
inc
fwait
loope
push
mov
test
cmpsb
inc
mov
popf
or
scas
pop
jae
mov
out
stc
dec
bound
push
iret
jo
int
lret
jl
popa
jmp
test
adc
xorb
ret
iret
ficoml
subb
cmp
xor
fidivrl
inc
sub
xchg
inc
adc
adc
daa
xor
inc
lea
pop
rorl
scas
cwtl
jae
cmp
mov
gs
inc
decl
in
inc
mov
pop
scas
xchg
xor
adc
and
mov
xchg
inc
loopne
fwait
out
pop
xor
cli
mov
xchg
out
mov
inc
sahf
stos
cmp
add
mov
mov
push
jno
mov
scas
cmp
add
dec
sbb
mov
push
dec
or
sub
es
sbb
loop
scas
mov
add
fs
pop
sti
hlt
mov
jmp
ret
daa
and
imul
push
pop
cmp
cli
adc
mov
pop
push
dec
pop
jp
jb
jnp
jno
data16
or
aas
rcrb
jbe
cmpsb
mov
mov
xor
rcr
pop
inc
jae
outsb
pop
insb
filds
popf
pushf
shlb
inc
aas
ret
cmp
cmp
or
sub
mov
sti
arpl
push
cmp
fstps
jae
jno
adc
dec
push
rcl
lods
pop
mov
arpl
pop
out
insb
mov
scas
fwait
jle
cltd
ja
and
out
bswap
cwtl
outsl
jns
das
icebp
test
sbb
xchg
push
sub
push
jo
sbb
sub
int
iret
nop/reserved
mov
faddl
add
xor
mov
dec
imul
inc
sub
jp
sub
mov
lock
dec
jbe
pop
xor
xor
cwtl
popa
xchg
loope
mov
js
outsl
in
adc
pusha
fnsave
cltd
arpl
push
push
inc
push
notb
push
mov
in
mov
adc
pop
ret
jge
push
mov
or
inc
nop
jb
xor
sub
sbb
xchg
jg
and
jnp
ljmp
pop
outsl
jns
inc
leave
jecxz
mov
loop
int
adc
fmuls
push
pop
movl
repnz
push
cwtl
popa
sarl
stc
notb
outsb
xor
jmp
inc
sti
fimuls
hlt
adc
sub
test
pop
cmp
dec
adc
push
and
cli
lock
cmp
inc
mov
insl
mov
out
and
ficompl
mov
lea
sbb
testl
shll
mov
nop
add
jmp
loop
adc
mov
mov
dec
aas
jae
insb
ja
loopne
dec
inc
ret
ljmp
sub
sbb
lea
lea
lds
jns
mov
ret
jae
sbb
iret
in
scas
mov
outsb
mov
mov
or
test
clc
fwait
je
adcl
mov
arpl
mov
das
mov
add
sub
mov
inc
add
adc
and
dec
addr16
fcmove
into
loope
mov
into
sar
pop
enter
and
inc
jne
xlat
sbb
bound
xor
pop
xchg
mov
pusha
mov
int3
pushf
xchg
popf
adc
lods
push
in
adc
adc
cli
mov
mov
mov
mov
hlt
outsb
ds
inc
cld
push
in
and
insb
lcall
in
mov
pop
jno
lret
addb
cld
xor
testl
dec
xchg
jl
loope
shlb
xor
sbb
gs
insl
lcall
bound
sbb
xor
shr
jns
mov
mov
inc
and
jo
mov
fisubl
cmpsb
xchg
pop
adc
xchg
sbb
ret
mov
and
das
outsb
mov
or
ljmp
add
cltd
sbb
mov
psubd
xchg
or
mov
shll
stc
test
push
inc
sub
out
imulb
and
add
jae
in
std
adc
adc
jecxz
in
xor
sbb
lret
and
into
fidivrl
add
adc
jbe
mov
pop
cmp
push
mov
sarb
test
adc
cltd
jbe
sahf
dec
mov
mov
xor
dec
mov
dec
scas
xchg
lods
cs
test
xor
cmp
jno
enter
arpl
pushf
jp
movsb
mov
mov
cld
push
daa
int3
gs
lcall
movsb
nop
jb
and
xor
mov
mov
jmp
sbb
sbb
xchg
push
xorb
jle
and
clc
cmp
push
add
pop
dec
int3
cs
jo
and
sub
mov
jb
pusha
and
pop
js
push
out
dec
adcb
and
lods
call
xchg
push
movsb
adc
mov
push
ss
inc
in
lret
jne
add
roll
sahf
sbb
mov
out
jbe
adc
pop
in
pop
push
cmp
popa
mov
int
dec
push
cld
jno
mov
fcompl
and
clc
in
sbb
mov
and
push
push
add
adc
sbb
das
dec
jmp
pop
cld
pusha
out
decl
nop
in
xor
int
fists
in
sahf
pop
xchg
movsl
dec
push
jb
sbb
adc
pushf
dec
into
or
rolb
lcall
dec
fs
adc
adc
and
pop
xchg
mov
mov
adc
ficoms
xchg
fisubl
xor
inc
or
loop
stc
fmulp
stos
xor
mov
pop
mov
idivl
xchg
and
jl
dec
dec
cmp
in
dec
cmp
sbb
lret
repnz
and
pop
and
inc
adc
mov
xor
push
jno
fs
jne
add
adc
mov
adc
or
outsb
xchg
fbld
mov
and
mov
or
dec
cmp
loope
lcall
jge
or
jg
push
dec
cmpsl
cmc
mov
bound
add
xor
or
dec
out
cmp
pop
or
cmpsb
jmp
movsb
push
cld
sub
stos
push
aam
xlat
cmpsb
cmp
inc
ret
std
bound
add
add
jne
inc
inc
stos
mov
push
mov
pop
pop
sbb
adc
dec
inc
mov
mov
mov
or
cmp
adc
mov
sbb
enter
loope
mov
cmpsb
call
inc
ds
add
and
adc
mulps
shll
cmp
popa
lret
cmp
fildll
aad
aad
das
cwtl
popf
or
jb
cld
and
lret
cld
jno
aad
mov
pop
sbb
cli
and
cmc
fmuls
repz
imul
les
jle
xor
lret
cmp
adc
or
repnz
loope
repnz
mov
fmul
cmp
into
dec
mull
bound
stc
ret
lods
nop
dec
mov
fwait
push
mov
cmpl
arpl
dec
das
sub
mov
cmp
mov
mov
pop
adc
xchg
jne
and
xor
jge
lret
in
call
adcb
push
inc
int
testb
stos
loop
testb
fstpt
xlat
flds
dec
mov
mov
xchg
sbb
mov
arpl
notb
nop
dec
cmp
mov
xor
cmc
imul
xchg
das
adc
jns
scas
adc
xchg
outsl
ja
loope
mov
in
mov
xor
dec
stos
enter
pushf
pop
lcall
lahf
ljmp
std
lock
push
sbb
mov
pop
testl
cltd
enter
mov
addl
sub
mov
push
lock
mov
mov
dec
enter
mov
test
mov
mov
sbbb
xor
xchg
and
mov
mov
sarl
dec
iret
ror
mov
mov
or
mov
repz
lea
mov
xor
jge
push
js
mov
and
bound
add
popf
mov
pop
pop
inc
xchg
int3
mov
adc
test
in
mov
lds
lock
pop
inc
mov
mov
mov
inc
inc
cmp
test
test
bswap
data16
cmp
pop
push
push
push
push
mov
push
push
jae
out
and
push
jns
push
mov
in
add
cltd
out
leave
jmp
outsl
mov
add
rorb
ljmp
mov
sub
outsl
jbe
mov
adc
adc
into
cmp
sahf
lods
incb
dec
push
jbe
xchg
fldl
mov
aaa
lods
data16
adc
cmpsb
jp
jp
cli
mov
out
sbb
inc
mov
jmp
mov
sbb
mov
je
add
xor
pop
xchg
data16
xor
insl
lds
std
imul
sub
adc
adc
movsb
loope
popf
shl
and
dec
aaa
loope
outsb
popf
ret
mov
xor
repz
pop
inc
rclb
rorb
and
mov
je
popa
pandn
push
dec
lea
cli
fbstp
push
mov
mov
test
insb
xlat
in
in
xchg
jp
cmp
mov
test
lret
adc
mov
jmp
in
push
xor
div
sahf
mov
jp
sub
push
into
push
sahf
cmpb
out
pop
cld
mov
push
ljmp
or
into
xchg
aas
push
imul
or
push
cld
pop
clc
aam
aas
in
adc
push
sbb
data16
jmp
push
sub
mov
dec
mov
jge
and
loop
jg
scas
stos
inc
pop
rcrb
push
cmp
sarb
adc
vcmppd
out
imulb
or
test
sub
mov
ret
out
sbb
sbb
cwtl
jnp
mov
mov
sub
lds
jle
bound
bound
or
dec
dec
cwtl
in
ljmp
sub
pop
push
fistpll
sbb
les
daa
add
rorl
jg
dec
mov
cmc
pop
cmp
sub
out
dec
push
negl
sbb
lods
jns
fsubrs
pushf
pop
loop
mov
mov
mov
cmc
adc
arpl
pusha
cmp
lret
xchg
test
cmp
mov
sbb
or
and
mov
out
and
rol
xor
jmp
das
cltd
sub
cmc
ss
sbb
mov
data16
xchg
sbb
in
mov
insl
pop
rcrl
cmp
sbb
rorl
dec
test
xor
loopne
push
js
pop
ss
cld
inc
enter
in
xchg
ret
xor
outsl
je
sub
vmptrld
pop
mov
or
int3
shlb
stos
scas
jg
outsb
loop
jecxz
jmp
cmpsb
rcll
sub
push
cmp
int
cld
test
mov
sub
inc
dec
insl
xchg
scas
sahf
and
sbb
fcomps
mov
add
cmp
aaa
shll
outsl
adc
scas
cmc
rcrl
or
idiv
jl
sub
aam
dec
xor
sbb
add
add
mov
loop
or
es
cmp
shll
test
cmp
into
xchg
out
pop
jno
push
dec
pop
dec
in
in
pusha
mov
jo
lret
sbb
pop
stos
and
mov
insl
pop
jbe
mov
sub
mov
scas
sbb
push
cs
xlat
pop
xchg
aad
or
cltd
out
mov
cwtl
inc
aaa
sbb
xchg
push
in
cmp
test
loopne
inc
add
mov
lret
mov
mov
mov
add
pop
or
adc
lret
sbb
test
inc
or
lock
cmpb
push
push
cwtl
jb
int3
in
andb
cmp
mov
notl
iret
in
add
imul
les
dec
enter
add
jbe
dec
or
dec
sbb
mov
jns
cmp
mov
mov
xchg
dec
mov
fidivrl
movsl
aam
mov
sbb
loope
fstps
lods
dec
sub
sbb
dec
aaa
dec
fcomp
addr16
and
test
pop
or
cmp
test
or
push
out
push
subl
xchg
dec
and
push
jmp
push
cmp
cld
inc
fs
jecxz
out
ss
xchg
add
mov
mov
mov
xor
insl
mov
fcmovbe
out
sub
pop
mov
adc
xchg
jno
sbbb
mov
sub
test
push
mov
lea
push
rcrb
std
pop
cmp
add
sbb
jecxz
popf
fs
xchg
mov
mov
jmp
clc
fisubrl
add
fwait
bound
pop
xor
pusha
mov
lea
sahf
sub
insb
xor
xor
pop
push
add
outsl
dec
dec
je
fnclex
xor
out
push
lea
loope
out
pop
pop
jo
inc
sbb
sbb
add
mov
fsubs
aad
mov
xchg
aad
in
loopne
pop
jne
push
dec
movsb
popa
outsl
aam
popf
sahf
inc
pop
pop
fstpt
outsb
lea
xor
cwtl
test
nop
rcrb
ret
jae
xor
sahf
test
in
aaa
jb
lock
sub
int3
push
mov
mov
adc
add
imul
and
adc
mov
aaa
shrl
cmc
and
shll
sbb
or
mov
loop
adc
jecxz
cmpsb
fwait
jge
mov
out
lret
mov
mov
push
cli
iret
jmp
in
test
es
ja
mov
fisubrl
es
push
lret
lea
sbb
std
std
mov
jle
jns
data16
popl
mov
sub
pop
lds
pop
xchg
push
andl
pop
pop
lahf
movsl
dec
jbe
das
or
adc
xor
jg
ja
movsb
mov
xor
test
dec
or
xor
pop
lret
cmp
fistpl
stos
in
push
roll
jle
jmp
sbb
sub
adc
sbb
leave
or
cmp
jle
es
push
in
imul
ficoml
out
cmp
ret
push
fwait
jl
mov
lods
sub
jne
xchg
push
mov
adc
iret
movsb
enter
gs
adcb
aaa
or
jp
imull
out
cmp
test
arpl
cmpsb
aas
repz
out
outsl
xor
lahf
inc
lds
data16
sub
bound
and
xor
xchg
push
andl
mov
lret
mov
in
in
int
leave
outsl
adc
pop
sahf
xchg
imul
scas
fdivs
jmp
jne
jecxz
sub
add
jge
sets
loop
rorb
adc
cmp
call
jge
insb
cwtl
lea
fstpt
mov
push
push
test
push
repnz
loopne
add
and
pushl
mov
dec
xchg
sub
add
popa
scas
add
call
addb
lret
sub
out
sahf
jnp
stos
sub
lea
int3
add
jmp
sbb
inc
pmaxsw
add
pop
std
sbb
mov
outsl
cli
xchg
xchg
sbb
mov
adc
jge
mov
adc
cmp
shll
mov
adc
push
js
les
aam
push
jne
jno
out
cmp
add
mov
repz
test
ss
rorb
stos
cmp
xor
xor
mov
mov
jb
push
mov
xor
shrl
aad
cmp
or
cmp
sti
xchg
push
add
mov
cmp
lahf
push
cmpsl
xor
sub
ss
push
inc
das
or
ror
adc
dec
pushf
arpl
dec
push
push
sub
inc
cmp
jnp
mov
rcl
in
popa
pop
fdecstp
insb
cmp
rorb
aaa
in
push
aad
aad
mov
push
hlt
les
xor
in
pushf
mov
aad
jbe
xor
cmp
lahf
sbb
jbe
repnz
and
xor
jecxz
push
int
xchg
cmc
movsb
sbb
pop
jnp
sbb
orb
pop
addl
sub
mov
dec
pop
adc
shlb
inc
mov
jae
jo
push
pop
adc
fidivs
lock
push
stos
iret
std
test
mov
inc
or
xor
mov
or
push
cmc
dec
sarb
mov
or
std
jmp
repz
loop
inc
dec
xlat
ret
scas
push
test
jle
push
mov
cltd
xchg
dec
cmp
dec
add
leave
js
pushf
imul
fsubrl
sub
and
jge
or
jge
xchg
pcmpeqw
pop
es
sbb
repz
push
scas
movsl
mov
pop
sbb
and
call
cmp
mov
out
divb
cmp
rcrb
adc
and
ja
cld
inc
jmp
hlt
mov
loopne
jmp
cmp
shlb
lods
cltd
jbe
fidivrs
fistpll
xchg
rclb
scas
or
xor
icebp
stc
mov
sub
push
sbb
jmp
inc
scas
mov
cmpsb
dec
bnd
mov
outsb
or
xchg
push
fiaddl
mov
imul
sub
lds
jae
xchg
out
dec
aaa
push
cmp
adc
push
sahf
mov
or
jecxz
pop
pop
mov
or
add
dec
xchg
arpl
lods
pop
mov
psrlq
aad
out
xchg
jg
pop
dec
jl
and
pop
test
popl
add
cmp
fbld
mov
ja
pushf
shl
stos
cltd
out
xor
clc
daa
repz
add
inc
dec
shr
xor
sbb
dec
mov
addr16
adc
xchg
fnsave
and
sub
lods
push
push
scas
fcompl
shrl
imul
push
sahf
mov
add
rcll
push
lock
xchg
rcrb
lea
test
mov
faddp
push
into
push
cltd
dec
outsl
hlt
out
lcall
inc
addr16
push
in
lods
repnz
sub
jae
inc
inc
mov
fsubs
bnd
repz
pop
mov
ret
mov
jl
xor
mov
leave
and
add
rorb
xchg
push
rolb
push
pop
jo
cltd
adcl
aam
xchg
xor
std
jb
dec
bound
cmp
ljmp
cpuid
mov
jae
iret
and
push
pop
jge
dec
xor
mov
mov
dec
mov
lea
xchg
cmp
mov
stos
or
push
xchg
push
mov
pop
mov
mov
mov
lcall
cli
adc
mov
out
in
fdivr
add
out
mov
mov
dec
and
mov
xchg
sti
xchg
in
aam
jp
push
dec
jecxz
dec
push
outsl
mov
mov
xchg
std
dec
hlt
enter
hlt
inc
mov
pushf
enter
test
mov
cmp
out
or
push
rol
mov
fnstsw
test
mov
lock
xchg
repnz
mov
jl
xlat
repz
or
std
fcmovnu
daa
or
lock
jp
lahf
xor
aaa
cld
cwtl
test
fidivs
shr
int3
xor
add
cmc
pusha
xlat
ret
bound
cmp
jg
dec
fs
call
fmull
push
xchg
nop
dec
push
cwtl
loopne
push
lcall
sbb
mov
add
shrb
insb
pop
mov
loopne
pop
sub
adc
and
mov
inc
fmuls
loop
sarl
mov
cmpsb
int
push
shrb
cs
or
das
sahf
ficoml
dec
pop
es
les
int
jns
sbb
mov
stos
test
sub
pop
in
pop
cmp
mov
dec
mov
sti
bound
jmp
rcl
push
cmc
cmp
popf
xchg
fdivl
jmp
jns
pop
sbb
pop
lods
mov
adc
lea
or
pop
dec
add
jnp
in
sarb
stc
fwait
mov
movsl
fsubrl
scas
orl
ret
fbstp
aad
pop
popf
lods
jne
push
jle
aam
lret
cmp
mov
fsubl
popa
push
mov
shr
dec
xor
ja
sbbb
ss
lods
dec
jmp
xor
fldenv
ret
andb
mov
push
rcl
xor
insb
les
shl
popa
mov
movb
scas
rorb
call
cwtl
inc
sub
xor
scas
push
push
decb
mov
in
outsl
and
pop
and
fwait
push
xchg
lahf
inc
jmp
mov
fdivr
rcrb
mov
stc
and
fwait
xchg
cmp
test
and
out
or
nop
enter
and
roll
jno
inc
cmpl
loop
pop
lea
enter
dec
jnp
loope
and
enter
jne
iret
js
xchg
popf
cmp
test
inc
jo
lods
pop
gs
subl
and
cmpsb
imulb
subb
sub
lods
je
or
mov
out
or
lcall
iret
pop
adc
or
sbb
fcmovnb
mov
pop
movsb
add
xor
jb
mov
adc
jb
mov
push
sub
addr16
xchg
inc
fldenv
xchg
sahf
and
ja
fstp
pusha
insb
pop
cli
mov
stc
or
mov
jae
mov
sub
inc
mov
push
mov
testl
fnstcw
clc
adc
ret
cmp
aas
sbb
insl
movsl
das
loop
adc
cltd
xchg
or
jne
dec
fisubs
inc
outsl
jmp
and
stos
fstpl
fisubrs
stos
jp
xchg
aam
dec
push
xchg
in
outsl
jne
fsubr
xor
incl
je
sbb
jne
ret
cld
test
push
xor
fldcw
push
rcl
xor
loop
pusha
inc
scas
inc
push
mov
cmc
cmp
sub
jns
push
mov
sub
dec
sahf
and
or
fcoml
pop
jp
xlat
lds
push
xchg
mov
jmp
xor
or
aad
js
or
sub
and
std
mov
dec
pop
mov
lret
lcall
dec
push
xor
cmpsb
sti
faddl
inc
mov
lahf
mov
fmull
sbb
sbb
xchg
jge
cmp
iret
jo
jl
fs
xchg
iret
push
imul
sbb
and
sbb
fwait
hlt
fwait
adc
push
test
jnp
and
das
inc
mov
sbb
mov
popf
adc
xchg
andb
test
adc
in
adcl
pop
int
lock
push
and
hlt
sub
sub
je
fstl
dec
nop
divb
sbb
movsb
add
jne
xchg
ja
mov
loopne
pop
cmp
rcll
jns
movsb
mov
xchg
cltd
sbb
adc
aas
mov
out
lcall
ror
sub
xchg
mov
pop
xchg
shr
dec
icebp
or
mov
fisttpll
xchg
insl
sbb
xlat
sahf
mov
mov
adc
mov
add
push
cmpsl
mov
aad
aaa
sub
lods
inc
jg
push
xchg
cmp
xchg
pop
in
daa
jae
in
jae
xchg
inc
aam
and
fstpl
jg
jg
gs
xorb
pop
mov
xor
inc
adc
std
adc
movsl
and
jae
test
inc
jo
cmp
dec
ja
pop
or
ljmp
loopne
outsl
xlat
or
sbb
cmp
cmp
adc
mov
or
push
mov
adc
les
add
fs
shl
scas
pop
adc
inc
leave
stos
push
dec
pop
loopne
clc
test
xor
add
inc
push
imul
xor
test
das
xchg
adc
xchg
sbb
push
xor
pushf
adc
add
lock
daa
and
adc
out
stos
cmp
add
repz
jb
aam
jbe
xor
pop
mov
lock
jnp
into
outsb
and
pop
aaa
test
xor
pop
and
shlb
adc
mov
dec
jle
aad
sub
pop
popw
leave
movsl
int3
hlt
xchg
decl
gs
insl
fwait
xchg
fsts
data16
xchg
aad
xchg
jecxz
jle
fisubs
mov
pop
adc
jae
lods
popf
mov
clc
call
xchg
pop
inc
mov
div
stc
insb
cmp
mov
xor
insl
jge
std
test
dec
shlb
sbb
fsts
jmp
xchg
adc
outsl
test
pop
shr
lds
bound
sbb
insl
and
aas
mov
add
daa
fstpl
xor
mov
and
movsl
pop
int
cmpl
or
fs
push
xor
andl
inc
xorl
mov
dec
or
inc
fwait
lods
mov
or
adc
inc
jnp
inc
leave
push
test
mov
in
out
sbb
push
sti
pop
jae
pop
push
xchg
sarl
subl
cmp
mov
mov
mov
jmp
mov
cltd
imul
testl
lcall
mov
int3
sbb
cmpsb
lods
inc
in
adc
imul
pusha
add
lret
std
scas
jnp
push
cld
xchg
test
sbb
sub
push
add
rclb
pop
test
mov
adc
sbb
jo
pop
cs
cltd
aam
aas
xor
and
lods
fs
dec
notb
dec
sahf
push
xchg
add
dec
jne
loope
bound
sbb
popa
and
push
cmpsb
scas
dec
and
jne
xchg
pusha
jb
inc
and
sbb
xor
mov
sub
add
and
imul
mov
clc
mov
testl
lods
adc
inc
int3
dec
jecxz
jno
test
adc
xchg
pop
rcrb
insb
cmp
je
lcall
fistpl
pop
xchg
dec
push
and
clc
inc
xchg
repz
stos
int3
pushl
xchg
dec
adc
fisttpl
xchg
data16
xchg
push
push
inc
dec
push
mov
pop
and
pop
stos
pop
movl
cli
pop
inc
imul
stos
jne
sahf
dec
jno
jo
in
push
loope
xlat
sti
xor
dec
add
mov
mov
sub
xchg
mov
push
cs
ret
pop
cmpsb
xchg
and
cmp
movl
sub
mov
and
pop
sub
dec
pslld
daa
xor
push
cmp
stos
cmp
xchg
ja
cmc
pop
jbe
orl
fidivl
push
in
jmp
push
int
and
test
pop
fistps
xor
cmp
cmp
cld
pop
inc
insb
and
fwait
pop
jge
movsb
pop
adc
or
jmp
mov
or
jo
daa
jg
arpl
adc
lcall
out
aaa
sahf
add
push
dec
push
jbe
or
pop
xchg
and
jb
dec
aas
fstpl
cmp
lret
das
inc
insl
push
icebp
push
xor
or
xor
dec
arpl
pusha
or
pushl
sub
arpl
adc
lcall
sub
fwait
loop
loope
push
shr
in
pop
cmpsl
xchg
repnz
sub
xor
imul
dec
sub
fnsave
pop
and
popf
popf
mov
mov
sbb
les
add
adc
or
fists
add
inc
jl
cmpb
cmc
inc
push
push
mov
ja
sbb
cmp
pop
ffreep
dec
test
mov
jne
aam
adc
dec
cmp
or
lahf
or
andl
inc
add
aam
xchg
lods
out
fcompl
mov
push
lods
lahf
fucomp
jbe
xor
push
cmp
ja
int3
aaa
jmp
jl
rep
shrb
sub
xor
fistpll
sub
test
ds
push
pushf
cmp
mov
adc
rorl
pop
jae
iret
add
repz
mov
pop
pushf
lock
jg
sbb
es
jae
imul
inc
mov
pushf
add
adc
cld
mov
pop
jmp
mov
add
subl
stos
fistpll
add
jne
popa
andl
mov
fucomip
icebp
cmp
fldl
inc
add
out
xchg
jle
aaa
ds
jbe
dec
repz
lods
mov
out
mov
or
cmc
sbb
and
ret
test
int3
adc
or
xchg
or
jnp
mov
ret
push
jge
cmp
add
es
add
lahf
jmp
push
ja
xchg
xor
or
in
lahf
mov
fwait
xchg
or
in
inc
or
inc
int
iret
cmpsb
rolb
mov
and
push
pop
xorl
aaa
shlb
push
dec
push
cltd
fidivl
adc
push
adc
pushf
push
dec
jle
dec
mov
out
aam
in
xchg
push
sub
mov
mov
rolb
idivb
inc
mov
cli
xchg
push
mov
xchg
adc
xchg
push
cmp
or
cmc
inc
test
sbb
call
pop
push
loope
push
dec
xlat
cmpsb
mov
mov
mov
ds
dec
xchg
xlat
jns
or
ds
jl
jns
shrb
adc
inc
nop
xchg
pop
or
adc
jmp
dec
js
inc
aas
cli
roll
jle
pushf
ss
in
cmp
mov
push
mov
sbb
fisubs
fisttpl
imulb
mov
adc
mov
dec
push
pusha
bound
sub
lock
in
xor
xor
mov
mov
jo
inc
aaa
test
mov
adc
mov
jne
sysret
ljmp
push
clc
ja
pushf
movsl
cmp
scas
add
out
shrl
out
leave
sub
fistps
jecxz
mov
imull
pop
es
popf
iret
mov
sbb
jp
ficompl
mov
das
jge
popf
cmp
sub
imul
sub
push
ret
call
bound
iret
clc
lret
test
sbbb
outsl
adc
jl
mov
cs
pop
or
jnp
mov
mov
pop
xor
dec
mov
pop
lods
adc
push
mov
arpl
outsl
jne
icebp
lods
ficompl
push
mov
mov
mov
inc
or
pop
jae
mov
mov
shll
sub
xchg
sub
jne
lahf
push
adc
xor
in
mov
pop
insb
mov
add
push
sti
int
leave
push
lcall
push
cmp
dec
lahf
xchg
pusha
movsl
dec
cs
in
mov
adc
cwtl
jns
xor
dec
xor
insl
mov
rcrl
and
mov
xchg
pushf
loopne
push
aam
lret
push
lret
dec
andl
and
mov
shrl
jmp
inc
inc
pop
loop
or
loope
jmp
sbb
jnp
fnstenv
lock
out
jb
rorl
call
jmp
popa
mov
std
in
repnz
push
in
stos
lret
inc
mov
sub
cmp
into
or
sti
sub
cltd
iret
xor
jae
das
or
adc
push
xor
in
mov
xor
int3
adcl
push
mov
cmp
mov
into
icebp
push
inc
adc
mov
stos
sub
jmp
jl
in
pop
movsb
sub
pop
lcall
movsl
stos
add
je
shll
pop
ljmp
add
in
inc
stos
push
dec
aam
mov
stos
pop
iret
jge
test
jno
lock
or
dec
sbbl
inc
cmpsl
xchg
movsb
pop
lcall
notb
mov
push
xchg
mov
dec
inc
inc
xchg
jg
and
mov
cmp
and
pop
outsl
inc
popf
xchg
mov
cltd
mov
mov
push
fmull
jge
mov
adc
pop
and
push
into
mov
pusha
push
fstpt
and
pop
mov
xor
pop
mov
dec
inc
cmpsb
jmp
repnz
enter
loop
out
lahf
js
xchg
sbb
push
lahf
sbb
push
sbbl
mov
sub
lret
pushaw
xor
leave
jne
add
decb
cwtl
cli
xor
push
cwtl
xchg
fstpt
or
sbb
xor
cmpsl
out
xchg
imul
xor
data16
rcr
add
cmp
clc
jp
sub
jns
clc
and
ret
jbe
cld
push
pop
cli
lret
jb
mov
or
lcall
push
push
fldl
inc
daa
push
push
lret
mov
inc
add
addr16
dec
cltd
in
push
int3
pop
push
pop
sub
cmpsl
insb
sub
imul
pop
xchg
in
setne
mov
shll
pop
sti
and
aas
mov
shlb
adc
cli
jl
aas
repz
in
mov
in
pop
test
es
push
movsl
out
inc
cmp
int3
pushf
add
int
pop
enter
fbstp
push
into
jmp
and
ds
jmp
inc
jecxz
xor
dec
in
sub
shrl
dec
jno
cli
push
ret
jno
push
xchg
adc
fisttps
and
or
pop
sub
rolb
ss
imul
xchg
ds
inc
imul
stos
jae
aas
in
xchg
dec
jle
sbb
and
xlat
add
inc
push
cmpl
dec
jl
jne
dec
out
and
cld
ret
lret
adc
sub
pop
adc
dec
lds
dec
loop
cmpsb
mov
or
fiadds
ficoml
cmp
sub
sahf
fs
dec
insb
leave
or
test
sar
mov
inc
mov
lret
test
jp
jae
lret
mov
mov
iret
cmc
stc
sub
stos
inc
je
insb
test
cmp
dec
inc
das
xor
adc
loop
mov
push
imul
addb
xor
lahf
enter
daa
loop
pop
push
out
sbb
cmp
xchg
data16
adc
lret
mov
subb
mov
in
and
ljmp
or
jae
jno
push
mov
pop
jno
push
mov
push
sub
xchg
lods
shll
mov
fistl
cmpsb
scas
jo
pop
je
in
loop
mov
jns
sub
add
mov
in
adcl
sub
lcall
adc
adc
jp
jg
sub
bound
mov
adc
int3
aad
insb
pushf
and
add
shll
into
inc
dec
dec
std
sub
arpl
lea
and
sub
add
in
dec
movsl
pavgw
xor
nop
xor
mov
jno
xchg
dec
dec
test
and
xchg
test
push
movsb
shll
int3
mov
pushf
loope
adc
ljmp
les
loope
and
fildl
into
jecxz
enter
adc
dec
cmp
mov
scas
cltd
sub
add
roll
movsb
loop
push
add
shll
pop
lods
cmpsl
hlt
call
leave
push
sbb
adc
mov
lds
imul
rorl
mov
test
push
push
or
ret
xor
addr16
jl
mov
ds
lret
mov
pusha
sbb
xor
sbbb
mov
imul
xchg
loopne
adc
cmp
repz
scas
adc
ja
jmp
jo
ret
pusha
xlat
lds
sbb
jl
and
lds
fidivrl
lret
mov
and
or
add
mov
outsl
ja
or
adc
jle
dec
scas
orl
sbb
xchg
outsl
xchg
push
mov
sub
adc
push
jns
nop
jne
fldenv
rorb
cld
stc
outsb
mov
dec
or
out
popa
jle
ja
cltd
aaa
sbb
in
mov
and
in
cmp
push
cltd
dec
fildll
repnz
pop
shrl
addl
or
enter
out
icebp
lea
stc
arpl
inc
dec
vcomisd
fisttps
add
out
dec
sub
ret
and
jge
clc
jne
dec
pop
repz
or
mov
scas
out
push
rol
cmp
pop
push
jmp
in
or
scas
ret
jmp
inc
cmpsb
cld
subb
inc
out
xor
pop
push
or
sbb
test
sarl
scas
mov
pop
in
stos
cmp
and
mov
sti
and
inc
les
out
pop
fadds
xor
xor
push
push
mov
ljmp
pop
cltd
nop
fwait
sbb
arpl
lods
fiaddl
rol
mov
push
in
cltd
mov
dec
cwtl
sub
jg
ja
lods
mov
sub
add
or
xor
or
dec
push
or
pop
push
or
add
add
dec
push
or
pop
push
or
add
add
imul
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
