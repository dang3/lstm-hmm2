add
mov
andb
out
push
add
cmpsl
cmp
ret
or
mov
aaa
mov
xor
leave
or
ja
shlb
or
imul
push
in
in
mov
sub
mov
and
and
sub
adc
dec
enter
and
lods
xor
mov
gs
or
insl
xchg
adc
inc
sub
mov
and
cmp
in
mov
or
and
adc
sbb
insl
xor
and
cmp
mov
adc
repz
add
mov
add
lods
rcrb
std
pusha
in
xchg
dec
xchg
in
xchg
mov
out
fldt
daa
leave
or
imul
sbb
inc
mov
xchg
jbe
cmp
fnstcw
stos
pop
push
repz
cltd
jmp
lock
fs
xchg
inc
outsb
pop
adc
sub
int
mov
std
cwtl
sar
lds
xchg
adc
ja
cmpsl
cmpsl
test
stos
sti
pop
pop
sub
clc
enter
or
fwait
pop
daa
ffree
orl
xchg
lret
insb
icebp
sbb
mov
push
jae
mov
pop
outsb
xor
mov
xlat
and
or
adc
pop
into
pop
xor
mov
jg
test
sub
fildll
fdivrs
lret
jae
scas
incb
jecxz
sbb
push
scas
dec
and
pop
cmp
mov
adc
mov
lret
pop
pushf
mov
cmpsb
mov
push
fs
inc
lods
mov
or
mov
jge
inc
or
pop
pop
loope
icebp
data16
pop
daa
fistps
rcrb
mov
cltd
inc
movsb
std
mov
lcall
lcall
gs
cmp
adc
cwtl
lock
sahf
pop
adc
sbb
and
clc
jne
mov
andl
mov
mov
and
jp
arpl
mov
sbb
imulb
lds
je
push
loopne
xchg
out
inc
mov
adc
jp
js
lods
add
xlat
sahf
mov
inc
inc
imul
pop
pop
mov
push
pop
or
sbb
inc
xchg
insb
pushf
ret
xchg
xor
xor
cli
ret
mov
add
xchg
mov
jnp
jl
fisttpl
adc
loope
lret
cmp
add
js
das
dec
into
fstps
in
mov
jae
mov
aaa
sqrtps
jg
icebp
jmp
mov
adc
out
xchg
popf
mov
test
push
rclb
mov
pop
outsl
gs
push
pop
jmp
mov
cmc
jbe
push
aad
inc
xlat
enter
mov
outsb
dec
movsb
test
sbb
arpl
in
in
or
cmp
mov
jp
stos
xchg
mov
nop
hlt
xor
jmp
sub
sub
add
sub
mov
xchg
add
mulb
in
fistps
mov
xor
test
popaw
mov
je
nop
jmp
fidivrs
or
pop
push
jecxz
lea
divb
add
push
jle
or
pop
into
xchg
xchg
fxch
mov
test
xchg
mov
cmp
movsl
sbb
scas
sarb
popf
inc
rcll
xchg
add
mov
sahf
inc
adc
mov
test
mov
stos
jg
je
inc
xchg
cmp
mov
cmpsb
lock
outsl
fadd
into
add
push
ret
cmp
adc
dec
pusha
cmp
dec
jle
adc
scas
inc
push
mov
in
mov
std
out
mov
or
outsb
cmp
pop
cmpb
cmp
pop
xor
out
mov
cmp
fnstsw
pop
cmp
mov
pushf
repnz
loope
and
adc
insb
or
ljmp
call
pop
les
mov
dec
pushf
add
aad
lcall
pop
push
adcb
sbb
xchg
data16
loopne
sub
jecxz
xor
out
mov
call
or
dec
add
mov
sbb
jnp
mov
fs
outsb
in
pop
call
and
add
dec
das
adc
test
dec
jb
das
inc
imul
imul
shr
loop
arpl
ds
insl
cmp
sbb
dec
jbe
mov
push
add
pushf
mov
test
out
mov
popf
jp
xor
jns
test
jnp
call
mov
mov
xor
jnp
nop
and
mov
int3
ljmp
shl
dec
call
cmpsb
jne
jg
lds
mov
in
push
pop
addr16
add
ljmp
push
xchg
inc
repz
add
adc
mov
push
fldt
cs
cmp
leave
cmpsb
xchg
push
jne
mov
adc
hlt
jmp
xchg
xor
fwait
push
imul
push
adc
xchg
and
loope
pop
fnstcw
and
push
sub
xchg
mov
xlat
push
test
out
aam
aaa
mov
lods
sbb
in
arpl
xor
shl
sbb
mov
adc
adcl
popf
out
fdivr
rolb
aas
popf
insb
lock
call
aam
push
iret
jp
adc
pop
scas
jg
adc
fistpl
movsb
popa
dec
cmp
xchg
mov
ficoml
call
out
stos
aad
adc
push
mov
fucomp
cli
shrb
cmpsl
jmp
sbb
es
mov
shr
and
pop
mov
cmc
dec
negb
push
and
test
lods
ret
push
mov
mov
xchg
pop
xchg
sbb
std
clc
and
in
or
and
push
in
mov
loop
jo
shrb
lahf
sbb
mov
test
add
je
add
ret
cmp
ljmp
mov
outsb
ret
mov
push
nop
cmpsb
aam
push
mov
inc
test
push
push
fst
gs
cld
in
mov
scas
xorb
xchg
mov
sbb
mov
and
cmp
ljmp
sub
sub
or
ljmp
ja
xor
rcr
insb
sbb
out
jbe
pushl
jnp
push
mov
and
les
fs
arpl
repz
add
xchg
add
out
enter
outsl
push
inc
loope
inc
aas
dec
sbb
cmp
lods
mov
add
sub
pop
or
xor
xchg
jge
lods
leave
fnstcw
cltd
lock
jno
and
push
pslld
nop
mov
iret
inc
ss
push
push
aaa
mov
inc
lods
sbb
cltd
adc
popf
iret
push
fdivrl
in
pop
dec
pop
xlat
sub
push
xor
pusha
aas
in
xor
pushf
adc
movsl
daa
je
sub
inc
sbb
jno
in
xchg
mov
popf
loop
xchg
inc
jb
cmp
aad
jns
insb
adc
adc
push
jecxz
pop
les
dec
adc
int
or
or
xchg
xchg
sbb
add
add
lds
insl
fisttpll
jns
mov
push
push
fldl
or
and
jo
and
pop
es
xor
mov
movsl
cmp
stos
or
mov
xchg
adc
push
or
mov
inc
jmp
pop
loopne
jno
lods
loopne
push
lret
add
das
hlt
rclb
mov
cmc
lret
add
dec
ss
or
sub
lock
orl
sub
jge
and
call
cwtl
sub
and
rorl
push
inc
fdivl
movsb
subl
addr16
cmp
adc
sbb
cmc
push
inc
out
cmpsb
push
cmp
mov
push
fldl
popf
orb
arpl
arpl
inc
negb
pop
mov
stos
mov
loopne
sbb
push
lret
jb
or
xchg
cmp
jns
rcr
mov
enter
lea
sub
mov
jo
imul
cmp
mov
imul
inc
push
shrl
dec
cmp
cmpsb
jg
sarl
inc
and
loop
das
pop
popa
push
clc
and
fs
cwtl
push
inc
jl
clc
pop
mov
lods
aad
sub
mov
cmpsb
mov
sub
adc
in
out
inc
jecxz
push
rorb
pop
repz
cld
sbb
xchg
fsts
jno
sbb
loop
orb
subb
in
sub
ljmp
icebp
and
rolb
adc
movsb
shufps
adc
mov
jne
movsl
sbb
adc
jmp
adcl
loop
inc
loope
mov
jp
pop
pushf
sub
xchg
fldlg2
int3
xchg
je
mov
lret
popa
ljmp
push
xchg
jg
pop
cli
in
xchg
shrb
dec
adc
stc
mov
xor
push
jnp
push
sbb
pop
cmp
dec
and
mov
push
cmpsb
hlt
insl
in
mov
and
push
add
cmp
cmp
inc
fmuls
movsb
mov
xor
or
or
fsubrp
pop
movl
dec
fdivr
roll
mov
nop
ffreep
repz
test
leave
mov
xchg
ljmp
inc
cld
in
imul
repnz
sbb
xchg
jmp
push
cmpsb
js
fnsave
ficompl
cs
test
out
mov
test
outsl
pushf
test
and
loopne
movl
or
repz
gs
add
push
aam
ret
flds
popf
jne
push
inc
mov
fs
pop
pop
and
xor
pop
jnp
add
inc
and
pusha
push
pop
test
push
inc
dec
les
lods
bound
popa
inc
testl
push
ret
jo
push
inc
rcll
nop
jmp
les
mov
loopne
pop
mov
fwait
iret
popf
push
xor
loope
rep
orb
test
sbb
fldenv
nop
mov
das
incb
in
jnp
adc
rclb
rcr
xlat
shl
bound
adc
pop
pop
add
iret
sahf
mov
lods
shl
or
sub
push
insb
adc
das
cld
scas
mov
test
pusha
data16
pop
push
sub
sub
jge
cmp
push
and
cmp
mov
jmp
mov
subps
sbbl
and
fsubr
jmp
sbb
in
jno
dec
xchg
ret
fwait
jo
in
movsb
push
test
lcall
fsts
and
add
push
pop
out
mov
imul
loopne
cmp
xor
cmpsb
mul
out
mov
add
pop
and
cs
outsl
fnstcw
int3
sub
push
outsb
imul
add
outsl
int3
push
fldenv
insl
xor
and
ljmp
inc
dec
xor
fimuls
sbb
imul
cmp
mov
jb
mov
ret
sahf
addr16
gs
sbb
int3
mov
mov
in
and
stos
sbb
loopne
and
xor
push
cs
adc
dec
in
adc
pop
outsl
stos
xchg
faddp
jecxz
jle
divb
xorl
sbb
xor
ret
hlt
ds
add
sub
jne
add
rol
jae
xlat
sar
jge
imul
inc
aaa
enter
xchg
std
mov
sbb
jo
daa
and
or
and
add
push
sub
add
push
cltd
or
inc
and
imul
pop
sbb
xchg
adc
fwait
push
fisttpl
mov
and
jo
mov
pop
jbe
pop
inc
mov
push
in
cmpb
jb
xchg
repz
jmp
jns
jle
stc
pop
sub
in
pop
repz
cwtl
lahf
dec
daa
fldl
jb
loope
lea
loopne
mov
pushf
shlb
xor
mov
sub
pop
sbb
test
js
stc
pop
jnp
xchg
pop
in
bound
std
clc
rorl
rcll
or
js
stos
call
icebp
xor
dec
inc
xchg
cmp
outsb
out
pop
xor
out
xchg
inc
roll
xchg
adc
jge
xchg
mov
cmpb
and
cmp
cltd
xchg
push
out
out
xchg
or
ss
sti
jp
xlat
push
push
mov
leave
loope
pop
std
sub
cmp
test
push
imul
das
sbb
cmp
jp
add
cld
xor
adc
mov
jge
jo
iret
fiaddl
dec
xchg
ret
mov
daa
ds
out
mov
insb
dec
cmp
shrb
int
adc
out
jbe
fld
pushw
xchg
pushf
into
or
jmp
subb
jb
std
mov
insl
and
movsl
xchg
sub
pusha
das
iret
jne
ret
pop
jle
int3
setae
loop
aad
mov
mov
adc
aad
mov
inc
fisttps
loope
mov
pop
repz
call
or
fisubl
xlat
test
dec
pop
inc
ds
das
out
lds
add
pop
push
mov
cmpsl
or
jne
add
cmp
ljmp
mov
push
adcl
jmp
cmp
rol
inc
jbe
ds
jecxz
jns
mov
lock
sub
or
jbe
xchg
mov
in
sbb
das
cmc
mov
push
loop
sub
jl
popf
movsb
pop
mov
add
lods
fsubrp
movsl
add
insl
jae
and
jp
fidivs
sahf
sbb
push
push
outsl
fldl
int3
jne
cltd
sub
jmp
jne
dec
rcrl
insl
xchg
dec
and
add
daa
adcl
push
push
cpuid
dec
pop
mov
add
fcmovb
leave
jnp
cmpb
push
sbb
mov
lea
movsb
sti
cmp
hlt
dec
jmp
cli
je
sti
push
int
pop
insb
mov
sub
pop
or
mov
jo
jb
pop
fsts
dec
mov
lods
stos
and
addr16
or
inc
cmp
mov
rcrl
sbb
xchg
and
dec
xor
les
add
mov
jns
pop
jne
out
cmp
cmpl
pop
pop
dec
lahf
fiaddl
mov
xchg
pop
mov
cmp
jns
xor
jg
mov
sbb
int3
jp
xlat
or
mov
sti
cwtl
in
cmp
loopne
out
jne
sub
repnz
pop
push
xlat
rclb
negb
and
outsl
rorl
or
shl
or
xor
nop
cmpsb
jl
add
and
push
push
mov
add
adc
cmp
cmpsl
push
dec
je
cs
fsubrs
lods
adc
add
fistpl
cltd
das
fsubr
xor
imul
mov
js
nop
cmpsl
xor
mov
xlat
rorl
mov
dec
push
adc
stos
fdivrl
fisubrl
ja
imul
test
lods
jmp
or
je
shll
outsl
pop
dec
mov
mov
adc
cmc
xor
push
xor
push
jmp
jne
mov
sub
mov
test
aaa
jg
mov
repz
mov
clc
jg
in
mov
and
fs
xchg
sbb
jbe
adc
outsl
jbe
fbstp
lods
sbb
jnp
cs
or
jl
test
testl
pushf
add
push
lea
out
pop
mov
mov
mov
in
jns
rorl
lock
lods
and
repnz
iret
mov
pop
mov
inc
pop
repz
and
nop
mov
std
test
iret
nop
lods
xchg
les
jl
aas
mov
andb
xchg
adc
fwait
sub
inc
xadd
loope
jmp
push
ret
mov
pop
scas
outsl
pop
scas
pop
xchg
xor
add
mov
pop
push
mov
mov
ret
jno
lcall
mov
es
ficompl
inc
enter
push
mov
cmc
pop
cs
mov
cmp
mov
testb
xchg
mov
mov
in
mov
or
hlt
inc
pop
xchg
jge
ret
jo
decb
lds
xchg
enter
cmp
mov
clc
or
call
movsb
inc
cmp
loopne
repz
popa
xchg
xchg
scas
push
stc
adc
lods
dec
add
lea
imul
pop
sbbb
stos
or
mov
cld
pop
pusha
pushf
jo
outsb
xor
shll
inc
adc
xor
inc
outsb
sub
movb
pop
mov
les
ret
lcall
mov
push
call
xchg
pushf
leave
insl
adc
lods
and
sbb
dec
xor
ja
ffreep
fs
pusha
ja
lock
clc
pushf
mov
push
shll
fisubrs
cwtl
dec
lcall
aad
test
sbb
inc
sbb
dec
loope
pop
sbb
jle
popa
loop
ja
inc
mov
cmp
fildll
push
stos
out
jl
lods
lods
das
push
aad
aas
testb
jbe
jmp
pop
in
lret
dec
sbb
push
mov
mov
inc
shl
shll
xchg
cltd
pop
movsb
stos
shlb
cmpsl
mov
xchg
mov
adc
xor
mov
push
pop
mov
or
into
push
mov
mov
xchg
sahf
scas
add
sbb
mov
add
mov
shll
pop
inc
les
jp
pop
mov
cli
add
ret
std
dec
pop
inc
jecxz
sarb
fxch
and
enter
xchg
mov
mov
mov
cmp
and
push
xchg
adc
push
fisubl
lcall
lock
fmul
sub
mov
cmp
je
push
lea
lahf
add
mov
ja
jno
sahf
aam
jp
stos
shlb
or
add
dec
movsl
inc
adc
es
nop
push
stc
arpl
icebp
push
xor
sub
scas
mov
xchg
pop
dec
mov
or
mov
je
icebp
je
pusha
xchg
and
jne
mov
pop
pop
pop
inc
fdivrl
mov
rclb
imul
pop
push
or
jecxz
aam
pop
int3
pusha
in
in
repz
push
inc
inc
in
psrlq
pusha
dec
mull
gs
js
stos
or
call
sbb
test
push
push
add
xchg
adc
xchg
addr16
gs
cmpsl
cltd
das
lock
jmp
nop
cltd
and
push
mov
jae
mov
scas
lcall
pop
xchg
sahf
adc
mov
add
sahf
jnp
stos
jmp
push
pop
push
push
sub
add
bswap
insb
mov
das
xchg
push
imul
push
arpl
xchg
cmp
cmp
push
test
sbb
sub
push
mov
add
adc
ficoml
and
mov
xchg
insb
dec
cmp
outsb
mov
fcomps
inc
adc
mov
cmp
fcompl
or
pop
je
js
and
cli
andl
rcl
in
call
out
push
pop
sbb
clc
sub
icebp
mov
ljmp
adc
and
lock
dec
and
mov
pusha
sbb
inc
adc
add
test
jo
rorb
pop
cwtl
arpl
cmp
mov
xchg
lods
dec
data16
in
or
push
xor
jns
pop
push
iret
loope
add
es
adc
jl
pop
xor
push
jb
call
sbb
outsl
xor
sbb
in
xlat
push
pop
int
mov
push
xchg
jl
ss
mov
ud2
mov
pop
repnz
stos
push
add
stc
dec
pop
or
call
inc
cli
push
movsb
je
scas
jmp
rclb
push
push
push
mov
ja
xchg
cmp
mov
and
dec
cwtl
scas
dec
dec
repnz
mov
testb
and
push
xchg
and
incb
and
imul
mov
mov
mov
xor
jne
movsl
das
push
aaa
pop
enter
jnp
xorl
and
jbe
int3
repz
sbbb
lods
cld
jb
xchg
movsb
pusha
and
mov
scas
cmp
lahf
jl
or
mov
xorb
shrl
xchg
cwtl
fdivl
xlat
adcl
lret
fsubs
repz
shlb
jmp
push
push
pop
adc
rolb
ret
pop
jno
imul
push
push
imul
xor
jg
fsubs
or
inc
repz
push
out
xchg
daa
cli
cld
in
ret
pop
mov
sbb
xor
scas
sub
or
inc
push
jge
fidivl
adc
mov
mov
adc
dec
cs
jle
or
mov
adc
in
mov
sbb
push
inc
push
push
ds
and
cmpsl
clc
sbb
outsb
lret
daa
jb
mov
test
in
stos
cmp
mov
adc
mov
js
adc
fbstp
addr16
cmp
mov
xor
mov
mov
dec
mov
out
loop
test
cmp
inc
enter
fsubr
enter
arpl
sbb
sub
test
popa
xchg
sbb
push
psrad
iret
cmpb
scas
adc
push
lahf
rcl
dec
scas
cmp
dec
mov
sti
jmp
enter
shlb
aam
sti
lock
icebp
je
xchg
and
nop
arpl
std
addl
shr
movsb
add
jge
aaa
mov
shrb
popa
movl
mov
inc
adcl
int
jne
jns
gs
cmp
sbb
test
and
lcall
loopne
pop
or
fcoms
adc
lea
add
repnz
into
dec
mov
sub
adc
push
push
or
jns
sti
push
iret
and
or
cmp
pop
cmpsb
and
push
mov
inc
movsb
loopne
in
xorl
fs
mov
ljmp
mov
and
adc
cld
jl
mov
mov
sub
sub
mov
roll
jecxz
sbb
mov
adc
adc
testl
pop
call
icebp
sbb
pusha
popf
xchg
icebp
push
cmpsl
xor
jae
aaa
fcomip
add
mov
cmp
rcll
popa
fnstsw
rcll
fmuls
loope
pop
mov
mov
aas
sbb
cmp
xor
lcall
stos
mov
xchg
out
xchg
les
scas
int3
call
data16
aaa
rcl
lods
mov
mov
jle
push
jle
push
les
stc
loope
nop
xchg
fldenv
cmp
lret
cmp
mov
cmp
loope
mov
ljmp
fdivl
sbb
std
and
arpl
movsb
mov
mov
xchg
mov
mov
adc
jae
xor
ror
pop
shl
bound
mov
xor
int3
mov
bound
test
jae
pop
cld
fstps
dec
mov
movsb
in
pop
add
inc
mov
inc
sub
insb
xor
adc
sbb
sbb
or
outsb
mov
in
jp
daa
inc
xchg
iret
push
outsl
cmpsl
or
outsb
mov
mov
cltd
adc
xor
in
add
ss
int3
jp
pop
fisubs
fwait
lds
scas
sbb
cmova
or
rorl
in
add
pop
fldt
rcrl
add
push
in
xlat
dec
jnp
fcomps
bound
int3
sub
arpl
cmp
je
fs
shll
sti
inc
shrl
fxtract
data16
xchg
sub
pop
cltd
or
ficoms
int
out
movsb
enter
sub
or
inc
pop
jp
sbb
fldlg2
mov
xchg
push
push
push
sahf
adc
jne
and
in
nop
repz
mov
stc
inc
add
jae
in
mov
mov
rep
test
mov
stc
fld
imul
push
adc
push
stos
and
shr
ret
inc
mov
xchg
cmp
xchg
daa
aad
fiadds
and
jb
addl
test
pop
mov
jmp
cwtl
jl
mov
test
pop
insl
out
lods
mov
pop
call
fwait
es
shlb
loope
push
imul
stos
push
fwait
aas
pop
sbb
mov
mov
mov
inc
mov
cmp
ret
push
ret
pop
mov
xchg
add
add
push
addb
das
xor
stos
stos
push
lahf
popa
stos
push
pop
lods
cmp
jmp
clc
loope
or
and
scas
lea
push
xchg
add
inc
sbb
fdivrl
loope
loop
mov
mov
fs
lret
mov
insl
outsl
pusha
fwait
push
push
sbb
in
cmp
cmp
arpl
xchg
lds
loope
jnp
dec
out
out
push
cmpsb
lods
std
mov
nop
mov
lahf
fcmovne
pop
ss
sti
in
add
imul
loope
push
xor
stos
outsl
adc
ja
or
mov
dec
push
xor
mov
or
inc
add
mov
and
push
mov
andl
arpl
or
fistpll
push
mov
mov
or
pop
les
fwait
test
jne
jne
lds
pop
clc
imul
pusha
stos
mov
push
dec
insb
add
mov
mov
add
sub
jl
mov
sbb
out
lds
mov
jae
shlb
or
dec
in
popa
dec
add
mov
pop
cmp
or
dec
pandn
pop
in
pop
sub
jge
mov
jmp
popa
ja
ret
xchg
mov
addr16
shll
imul
fs
xchg
sbb
sub
lock
bnd
xor
pop
hlt
add
dec
and
in
out
pushw
jp
dec
cmc
push
add
push
mov
inc
push
cmp
pop
pop
mov
inc
aam
lahf
mov
pusha
push
dec
xor
cs
mov
jge
scas
push
jg
aaa
cmp
lods
dec
adc
clc
or
pop
add
stos
pop
sub
add
inc
stos
push
mov
mov
in
enter
cld
leave
inc
cmp
dec
iret
lret
imul
push
test
or
sbb
int3
cmp
shl
mov
cvttps2pi
arpl
imull
mov
hlt
xlat
enter
subps
test
dec
ret
into
inc
cmp
mov
push
cmc
or
adc
aaa
cmp
rcr
andl
inc
insb
push
add
das
or
jl
jae
inc
inc
int
xchg
pop
jmp
mov
xchg
jno
mov
out
sbb
add
mov
cmp
jg
jo
fs
mov
xchg
mov
jbe
fnstsw
sahf
xchg
push
sbb
xor
xor
mov
testb
xor
inc
lcall
xor
leave
xor
in
xchg
dec
adc
jnp
xor
adc
cmp
push
aaa
iret
test
adc
xor
daa
inc
pop
sub
out
xor
dec
xor
mov
andl
scas
stos
pop
addr16
inc
pop
clc
xor
nop
scas
mov
ja
and
dec
mov
je
aas
xor
fstl
sbb
ss
dec
mov
lock
dec
fs
adc
pop
mov
sub
xor
icebp
pop
lods
mov
shrb
or
ret
mov
mov
mov
xchg
movsb
mov
push
mov
inc
in
cmp
sub
cmp
add
popf
and
mov
cmpsl
aas
mov
xor
pop
fisubl
out
orb
xchg
lds
stos
or
pop
pushl
jo
scas
cs
gs
cmpsb
enter
mov
out
jg
pushw
daa
movsl
mov
xor
out
sub
or
cmpsl
push
mov
push
out
mov
rolb
imul
mov
negl
pop
in
adc
fnstcw
or
mov
ret
jbe
pop
pop
push
cmp
mov
pop
jb
outsl
and
insb
in
mov
xorl
inc
or
pop
sti
daa
xor
lock
sbb
sub
mov
aam
mov
inc
mov
mov
push
loopne
cmp
sbb
xchg
jle
or
sar
out
mov
add
fiadds
dec
pop
mov
mov
push
dec
sbb
pop
in
into
loopne
push
adc
clc
pushf
xor
sbb
das
or
pop
jno
cwtl
ret
mov
popf
cmc
cld
loope
lahf
iret
pushf
push
rcrb
dec
jb
stos
std
sahf
pop
fxch
xchg
push
xchg
jae
cmp
data16
mov
jl
seta
or
mov
mov
int
mov
cmp
cmp
push
dec
hlt
cld
in
mov
js
push
xlat
push
push
or
mov
adc
test
out
fists
call
jnp
rclb
bound
push
in
pop
loop
push
ja
flds
mov
cmp
jmp
out
es
loope
jne
adc
fst
xchg
inc
cli
pop
push
adc
daa
or
pop
mov
mov
sub
xor
adc
pop
lods
mov
les
jecxz
push
xlat
and
arpl
mov
mov
movsl
xchg
mov
fnstsw
ds
mov
push
mov
dec
inc
xchg
enter
inc
cmp
test
rolb
push
xchg
adc
addl
shlb
lret
jnp
loopne
out
or
scas
push
mov
jae
lret
xlat
dec
ret
or
mov
fsubs
addr16
jne
out
lret
pop
addl
pop
lods
leave
adc
shl
push
jmp
or
nop
mov
mov
mov
add
inc
push
mov
mov
mov
ljmp
push
sub
pop
xchg
loope
lcall
mov
adcl
aad
aaa
mov
arpl
mov
mov
insl
jno
mov
pop
mov
pop
into
scas
xchg
in
mov
stc
std
rclb
xchg
xchg
cmc
mov
cmp
ret
fwait
inc
out
xor
inc
mov
mov
aam
out
push
mov
ret
and
sub
push
sahf
jge
arpl
dec
push
push
daa
mov
dec
sub
xlat
inc
mov
dec
inc
jne
inc
sub
shr
mov
lretw
cwtl
popa
jbe
in
outsb
dec
sbb
out
xor
cltd
pop
mov
cltd
int
daa
push
jecxz
add
setnp
mov
pop
popf
xchg
inc
pop
aam
imul
mov
fucom
lcall
ds
mov
les
loope
out
popa
dec
out
xchg
orl
test
xchg
movsb
xor
ds
push
lds
xchg
xor
sahf
pop
mov
pop
call
test
in
mov
xchg
xor
fs
sub
stc
dec
inc
mov
rcrb
int3
jge
lahf
push
or
mov
ss
roll
push
mov
push
cmp
sub
dec
lret
cmp
stos
jge
jecxz
lock
int3
mov
jae
mov
jns
push
jg
xchg
dec
loopne
in
ja
enter
sub
cmpb
das
or
rolb
in
jecxz
jbe
push
sub
cmp
out
add
hlt
jns
xchg
xor
test
lea
xchg
and
jo
and
inc
into
or
subb
hlt
testb
dec
dec
xchg
fisubrs
or
mov
cmpsl
movsl
cmp
shrb
and
jbe
lods
mov
lds
pop
inc
pop
dec
jl
add
test
mov
sar
jg
jnp
cmc
dec
push
cmp
or
popa
adc
jl
insl
push
scas
or
outsb
lret
cmp
add
mov
iret
adc
jb
jne
sbb
pop
in
sub
mov
je
sti
mov
xchg
enter
out
enter
sub
aaa
jo
jecxz
pop
jle
subl
push
mov
cmp
xorb
insb
movsl
xor
movl
je
xor
push
mulps
mov
ljmp
insb
adc
popa
mov
sbb
icebp
ficompl
and
push
int
cmp
test
cli
pop
leave
adc
inc
je
jnp
pop
cmc
jno
sbbb
test
push
lea
aaa
jbe
dec
out
mov
clc
cmc
jo
div
mov
or
mov
mov
pop
or
jmp
xor
mov
mov
mov
sub
mov
jge
mov
movsl
ud0
sub
mov
cmp
int3
jno
push
jecxz
mov
mov
xor
std
scas
stos
mov
pushf
ljmp
pop
lea
ss
popl
es
push
test
mov
pop
lods
or
sbb
mov
dec
pop
jg
add
xor
in
rcll
arpl
push
push
mov
mov
ss
add
mulb
pushf
ja
or
stc
cmc
pop
mov
adc
mov
test
inc
push
dec
jne
fisttpl
inc
out
in
fstps
inc
repz
jns
mov
aas
pusha
scas
das
dec
mov
ficomps
pop
stos
inc
arpl
aas
mov
push
push
xor
add
clc
and
pop
in
ds
clc
sbb
mov
arpl
subl
sbb
inc
cmp
xchg
into
dec
ja
aas
inc
jbe
outsb
and
stc
sub
int3
and
cmpsb
cltd
push
arpl
sbb
add
cmp
popf
imul
pusha
xchg
in
push
pop
pop
repnz
leave
lods
les
xor
lock
int3
outsb
mov
xorb
lahf
cwtl
inc
pop
sbb
jae
mov
fmuls
shrl
daa
int3
push
rorl
inc
es
mov
and
repnz
pop
xor
mov
and
pop
push
sti
xor
pusha
clc
dec
stos
cmpb
xor
out
fsubr
pop
jns
shrl
and
std
jne
pop
sbb
mov
push
inc
mov
sub
or
or
js
jmp
xchg
fstl
fbstp
cwtl
pop
imul
cs
jbe
mov
inc
cmp
jb
std
ds
xor
adc
mov
jl
iret
subb
jle
inc
pusha
xchg
shlb
add
mov
mov
idivb
add
sahf
push
pop
adc
adc
roll
add
xchg
jbe
test
pop
psubd
lcall
xchg
mov
cmp
mov
clc
aad
in
cmpb
shll
aad
mov
sarl
jno
push
xchg
in
std
out
add
push
stc
add
stos
sub
jae
idivb
cmpsb
repnz
xor
xchg
stos
jno
inc
cmpsb
hlt
sub
outsl
jl
aam
xor
dec
jno
inc
push
and
in
insb
stos
mov
dec
leave
cmpsl
out
pop
out
leave
sbb
mov
scas
pop
ljmp
ljmp
mov
jle
outsb
and
jbe
aaa
fwait
and
jge
daa
in
scas
push
movsb
mov
sahf
jge
cmpsl
aas
lahf
and
xor
cli
mov
and
dec
mov
adc
gs
sub
bound
jl
cmp
xlat
fsubl
push
iret
dec
sbb
dec
xchg
mov
gs
pop
mov
push
pop
int3
les
add
inc
subl
or
dec
sahf
arpl
pop
mov
add
ret
pop
adc
dec
xor
push
sbb
inc
iret
xchg
mov
outsb
loope
ja
outsl
ds
pop
jae
jl
decl
ds
leave
sbb
sbb
xor
and
lods
stc
fsubrs
push
add
fsubrl
pop
int3
dec
ja
mov
scas
or
arpl
sbb
ljmp
imul
mov
aad
jo
push
push
jae
sbb
testb
sub
xchg
jne
out
lea
mov
sbb
xor
mov
cmp
jns
call
pop
outsl
inc
arpl
cvtps2pi
cltd
inc
das
cmpsl
add
add
jnp
xchg
cmpsl
notb
mov
xchg
insb
test
neg
mov
fidivrs
pushf
ret
ja
inc
add
icebp
mov
or
lcall
inc
out
jecxz
mov
cmp
inc
pop
xlat
faddl
add
xor
push
pop
mov
xor
jmp
test
hlt
push
or
fwait
sub
add
je
inc
lahf
scas
scas
ja
jg
cmpsb
adc
dec
lea
scas
adc
adc
cmp
gs
or
lret
and
je
sub
nop
packssdw
addr16
lods
in
jl
je
jg
inc
ljmp
cmpsb
push
sahf
ret
cmpsl
test
xchg
in
adc
and
jp
insl
in
mov
xchg
inc
add
xor
ss
and
inc
aam
push
popa
xorl
cmp
sahf
xchg
push
and
xchg
pop
sub
stos
imul
test
push
xchg
test
dec
insb
dec
stc
push
cs
adc
jp
cmp
call
sahf
mull
and
push
xor
subb
mov
inc
inc
imul
inc
lcall
rol
jl
std
int3
fdivs
mov
sbb
sub
mov
imul
mov
lahf
mov
jb
pop
ja
sahf
shrl
bnd
pop
iret
sahf
mov
arpl
inc
dec
outsl
sub
out
loope
loope
rorl
daa
rol
and
pop
sub
es
repnz
mov
push
jge
ss
xorl
xor
insb
lods
hlt
clc
xor
and
mov
jo
push
xchg
push
outsl
xchg
pop
add
mov
xor
out
out
xchg
push
adc
sub
or
adc
pop
mov
sbb
cmpb
dec
sbb
sub
pop
cltd
pop
sahf
xchg
sbb
mov
pop
movsl
fidivrs
dec
and
insl
inc
push
rorl
push
pop
sbbb
sub
insb
dec
repz
icebp
jmp
cmpsl
dec
and
shrl
fnsave
loopne
push
cmp
push
sarl
fisttpll
cmp
mov
in
es
imul
popa
fildl
push
jl
sbb
hlt
scas
jle
sub
fwait
xchg
cli
sarl
cmp
jnp
aad
je
in
lea
movsb
out
xor
fnstenv
enter
lock
add
je
pusha
add
mov
dec
mov
lods
add
shll
das
adc
push
mov
jb
jnp
pop
or
pop
push
inc
imul
push
imul
scas
push
cld
inc
cmp
gs
ljmp
call
loope
aad
mov
xor
je
or
shl
addr16
push
test
nop
inc
jae
pop
ror
inc
mov
pusha
mov
outsl
inc
mov
cmc
sti
mov
and
mov
jp
add
ret
mov
cmc
push
cmp
je
pusha
jl
rorb
scas
aaa
mov
sti
sbb
inc
push
jmp
jecxz
adc
inc
testb
sti
sbb
inc
fucomi
pop
mov
mov
rorb
sbb
cmp
lock
sub
iret
mov
les
subb
scas
fcompp
add
xor
xlat
mov
push
cltd
jg
push
dec
jns
insb
xor
xor
movsb
lock
push
pop
aaa
jmp
icebp
mov
imul
loopne
int3
test
or
lret
cmpsl
push
xorb
xchg
pop
xchg
jae
mov
mov
scas
pop
inc
sub
and
arpl
loope
inc
mov
sub
add
ds
adc
js
pushf
imul
rcll
cmc
call
mov
lcall
repz
sub
out
insb
outsl
xor
sub
sub
adcb
es
cmp
xchg
out
gs
and
pop
pop
add
xchg
rolb
sti
stos
movsb
xor
cmp
xor
cmp
fwait
push
and
hlt
lret
imul
cmc
sarl
or
int
rcr
xchg
int
xor
loopne
lods
sub
stos
adc
jns
and
mov
iret
sar
jle
sub
dec
sub
pop
adc
inc
mov
xlat
repz
cli
jp
sub
adc
dec
fstpl
xor
adc
mov
loopne
xor
outsb
int
and
insb
ficoml
cmp
ljmp
fcmovb
repnz
insb
hlt
dec
jns
je
in
scas
negl
push
fs
int
pop
pushf
push
popf
mov
test
inc
cmp
scas
jl
pop
icebp
mov
and
mov
mov
stc
push
dec
shlb
sub
mov
and
lcall
cmpsl
cmp
negl
adc
pop
push
insl
cs
scas
sbb
insl
cltd
xchg
andb
adc
add
mov
ret
xlat
xchg
ds
shll
pop
mov
lahf
jns
leave
test
pop
xor
sub
sub
psllw
dec
mov
lods
fstl
lret
lods
mov
negb
jbe
cwtl
mov
sbb
pop
lret
sub
and
xor
push
scas
jns
inc
cli
data16
pop
add
sub
inc
clc
rol
icebp
and
imul
cmp
fwait
stos
add
adc
pop
ljmp
sbb
insb
or
jns
mov
cmp
imul
sub
mov
dec
cmp
jno
cli
jmp
jge
add
fildl
pop
dec
inc
xchg
mov
push
test
cmp
cmp
add
jp
scas
stos
push
cmp
mov
mov
aaa
xchg
andb
pop
ja
xor
pop
push
cwtl
xor
notl
add
cmp
mov
das
loopne
add
subb
std
pop
adc
sbb
nop
lea
jb
xlat
rolb
mov
ficoml
xchg
xchg
insl
fadd
mov
push
mov
jbe
adc
mov
sbb
hlt
xchg
xor
fnstenv
cmp
lcall
jge
jl
xlat
pop
and
pop
repnz
mov
add
mov
mov
pandn
lret
out
pop
or
jmp
add
dec
mov
pop
push
pushf
push
push
xor
push
dec
inc
cli
cli
push
fcmovnb
push
or
test
ss
mov
fdivl
lret
test
jnp
dec
aaa
insl
loop
push
or
in
xchg
cmp
xchg
cltd
inc
dec
shrb
push
div
xor
add
aaa
xchg
pop
or
ds
fdivs
mov
jp
adc
jg
and
stc
test
inc
loope
in
sbb
mov
push
adc
mov
fmulp
lods
insl
and
fldcw
xchg
imulb
mov
scas
jl
inc
ror
lds
popa
shrl
pop
push
rclb
xor
cld
pop
pusha
rorb
jnp
sbb
popf
jns
sub
outsl
jno
ss
adc
mov
imul
adc
aaa
mov
jp
ljmp
jno
flds
pop
fdivl
fsubs
hlt
mov
push
js
inc
push
dec
push
les
outsb
lret
adc
xchg
cmc
scas
xchg
push
lret
mov
popa
ja
ljmp
xchg
or
jl
cltd
jmp
mov
ljmp
fisubs
cmc
lods
xor
cld
dec
aas
mov
nop
ja
push
movsb
int3
adc
and
xchg
pop
shr
inc
lret
scas
mov
add
clc
fisttpll
push
ficompl
pop
sub
daa
ljmp
add
lahf
jmp
xchg
adc
mov
int3
mov
fcmove
ljmp
xchg
mov
loop
dec
xchg
jmp
insl
mov
mov
push
out
jae
jge
jecxz
movb
xor
shl
in
iret
cs
fcom
pop
aam
fsubrl
std
push
ss
aad
dec
xor
enter
sbb
outsl
xchg
test
outsl
jbe
or
pop
cs
adc
push
aaa
jg
jle
rclb
xchg
add
push
sub
stc
ficomps
insl
or
mov
das
xlat
jl
mov
aaa
aam
ret
jp
fldl
cmp
jne
xchg
adc
in
aas
dec
stos
add
xor
jle
mov
addr16
push
repz
xchg
rol
jnp
fldenv
hlt
dec
mov
push
mov
imul
inc
jmp
cmc
in
cltd
int
daa
xor
jo
in
dec
jmp
inc
enter
inc
xchg
jno
in
xchg
jp
sarl
add
rclb
divb
pop
add
pop
add
dec
ficompl
mov
incl
xchg
cmpsl
pop
push
das
jne
repnz
ret
test
push
and
lret
inc
addr16
sbb
pop
movsl
pop
xchg
sub
jg
ds
and
lret
sub
test
add
in
jne
fadds
dec
stos
push
and
xchg
pop
fs
push
push
jne
add
mov
out
nop
div
xor
jmp
mov
cltd
dec
dec
jbe
icebp
jmp
jno
enter
fwait
mov
xorl
pushf
out
cmp
pop
mov
sub
jae
ffree
dec
push
or
or
pop
and
loopne
adc
cmp
shll
clc
cmp
divl
aad
or
je
nop
push
cmpsl
mov
jecxz
out
icebp
lods
andl
sbb
xchg
push
cmc
mov
or
pop
jne
sbb
dec
lahf
into
in
push
pop
dec
testb
jmp
push
aam
mov
lods
mov
cmp
pop
mov
pop
cltd
or
cmpsb
inc
out
ret
sub
rorl
mov
loop
xchg
mov
dec
xor
xchg
stos
movsb
mov
xchg
cmpb
dec
lahf
push
cmpsl
sbb
fcomi
scas
scas
test
add
ja
dec
mov
sti
adc
enter
sahf
or
testb
andb
cltd
mov
dec
xchg
cmp
xchg
adc
xor
inc
int3
or
cmp
icebp
repz
push
push
mov
shl
in
jno
mov
pop
scas
lahf
xor
cmp
mov
mov
add
rcrl
outsl
dec
jbe
add
push
std
pop
dec
mov
push
jo
or
bound
out
jo
cld
mov
mov
adc
mov
shlb
mov
sbb
popa
cmp
or
sbb
fdivr
lods
aaa
jne
jg
mov
xorl
mov
lahf
fcmovnu
scas
jge
jne
jno
push
xor
out
xchg
sub
mov
jg
add
call
mov
cmp
mov
js
jbe
push
je
cs
pop
ljmp
out
xchg
sub
add
icebp
stc
and
jno
push
movsb
mov
pusha
jge
daa
ret
lahf
adc
pop
in
mov
loope
mov
ret
xchg
cmp
dec
jno
cmp
mov
and
mov
mov
jbe
call
and
inc
movsl
push
cmp
inc
movsl
ss
jge
ds
adc
or
dec
cld
xchg
sbb
cli
push
push
fstps
cmp
addb
or
adc
xchg
sub
mov
cmpsl
xor
cmp
mov
dec
insl
jne
addr16
inc
or
fidivrs
dec
or
jle
fmull
out
mov
mov
xchg
cmp
push
cmp
rcl
dec
inc
fisttpl
and
add
test
jbe
loope
lea
lcall
imul
movsb
inc
jecxz
push
dec
out
xchg
lock
lret
leave
out
mov
push
or
mov
repz
lahf
stos
push
cltd
rclb
pop
jle
jbe
out
iret
ret
stos
or
mov
fmuls
adc
gs
ljmp
or
xor
add
add
fcom
aaa
dec
pop
jno
inc
out
or
movsb
xor
sbb
sub
addr16
sub
in
call
daa
jnp
test
ds
inc
sub
mov
rolb
jge
pop
fdecstp
stos
mov
inc
ss
in
add
adc
loop
pop
addb
or
pop
in
add
insb
pop
aad
mov
mov
in
mov
inc
fldcw
popf
fsubrs
cmp
cld
inc
es
lods
fadd
pop
mov
out
mov
mov
cmpsb
sub
pop
nop
inc
mov
mov
cmp
inc
lahf
adc
lret
mov
and
ljmp
xor
push
jo
mov
rcrb
cmp
sti
das
sub
xchg
je
outsl
lahf
fdivrs
mulb
outsb
sti
rcr
sbb
ffree
ret
mov
js
pop
sub
out
pop
cmp
movsl
adc
ja
vaddsd
adc
xchg
pop
and
cmp
pushf
out
dec
push
fisubs
pop
or
xchg
mov
add
push
mov
xor
fidivl
jl
cmp
mov
ljmp
xor
mov
push
repz
or
lea
sarl
xchg
pushf
or
fdivp
sub
fs
mov
adc
adc
cmp
divl
lret
aam
mov
xchg
add
clc
pop
popf
arpl
adc
iret
sub
int
xchg
movsb
mov
mov
adc
sub
shl
dec
push
lret
fptan
sar
int3
je
lret
aam
lock
stc
add
repz
xor
and
inc
stc
mov
mov
sahf
dec
adc
out
repz
ss
insb
pop
xor
data16
ljmp
int
xchg
push
cmp
jge
push
push
xchg
decb
je
flds
mov
mov
sub
jne
mov
sub
mov
fstl
xlat
call
je
mov
jo
in
cwtl
stos
dec
push
mov
or
int3
je
div
stos
add
lret
loop
and
ja
sbb
adc
insl
sbb
lods
mov
nop
popf
xlat
sahf
dec
int
add
hlt
fwait
mov
outsl
xlat
cmp
loop
fisttpll
gs
xchg
je
dec
stos
or
fisttps
shl
and
aad
pop
inc
sbb
or
or
or
imul
int
dec
sub
jecxz
in
add
mov
inc
mov
lret
xor
cwtl
aas
popa
out
jno
xchg
fst
adc
dec
js
sub
mov
in
pop
mov
adc
mov
dec
daa
mov
pop
jp
sti
cmp
outsl
inc
mov
pop
subl
xchg
mov
out
mov
sar
hlt
inc
dec
adc
test
xor
arpl
outsl
daa
daa
out
inc
repz
je
or
stc
popf
pop
ret
test
jmp
mov
cmc
cmp
enter
lahf
bound
or
js
popf
cmc
jnp
mov
mov
add
sub
inc
pusha
hlt
jecxz
icebp
loope
adc
enter
imul
sbb
sub
jmp
and
outsw
jnp
and
cwtl
xchg
push
test
dec
cld
and
jbe
orb
mov
sbb
test
mov
sbb
mov
xchg
push
xchg
xchg
mov
push
stc
xchg
cld
mov
shrb
dec
pop
pop
jge
pop
and
mov
out
fcmove
and
dec
nop
iret
inc
bound
or
mov
mov
or
xlat
shlb
gs
and
push
jbe
nop
cli
cltd
daa
out
pop
hlt
mov
movsl
adc
cmpl
sarl
pop
stc
push
or
dec
add
xchg
out
bound
inc
andl
lods
stos
push
jmp
repz
jb
outsb
xchg
or
cli
pop
mov
xchg
xor
jnp
jg
inc
sbb
rclb
add
inc
pusha
dec
xchg
cltd
mov
lds
popa
push
dec
mov
xchg
inc
dec
frstor
pop
jmp
pop
stos
imul
dec
add
pop
xchg
ret
cmp
imul
mov
sbb
hlt
loop
je
mov
xor
sbb
cli
and
movsb
fs
xchg
push
cmc
cmc
mov
mov
mov
add
outsl
xor
stc
pushf
push
sbb
push
inc
cmc
push
hlt
or
es
mov
fwait
sub
cwtl
xchg
jg
push
in
jecxz
xchg
jae
fcoms
mov
push
mov
fidivrl
xchg
popl
fwait
lods
add
aam
sbb
mov
lods
je
jecxz
das
xchg
lea
xor
push
mov
dec
push
in
call
in
jo
shlb
add
push
outsl
jno
jl
xchg
aaa
mov
movl
je
negl
aam
fisttps
pop
sub
test
xchg
jne
xchg
out
xor
pop
xchg
xor
mov
xchg
or
lcall
scas
pop
adc
call
mov
cwtl
mov
ss
popf
or
stos
xor
movsb
inc
lcall
mov
mov
ret
add
xchg
sbb
pop
lea
inc
in
mov
rcr
xchg
ss
iret
insl
pop
loopne
mov
std
test
xchg
jmp
sub
sti
insb
sub
dec
push
fsubrs
bswap
mov
cmpsb
shlb
cmpl
cmp
lret
mov
jbe
out
lcall
mov
cmp
and
jns
loop
mov
cli
popf
dec
add
shrl
sar
insl
xor
xchg
xor
aaa
mov
aas
push
icebp
ror
fistpl
jbe
insl
cmpl
sbb
push
jecxz
js
xlat
loope
addl
imul
lcall
add
add
jo
addb
ficompl
aas
mov
nop
and
xchg
fildll
cmp
sbb
push
jle
push
pushf
aas
mov
icebp
data16
jnp
test
hlt
push
xchg
inc
or
js
adc
sbb
push
pop
cmp
mov
cmp
iret
cmpsb
xor
scas
ret
adc
int
mov
xchg
out
jg
loopne
hlt
imul
mov
fs
push
rolb
jecxz
push
mov
jb
stc
mov
jns
mov
cltd
test
fs
cmp
xlat
loopne
shrl
pop
sbb
subb
pavgw
movsl
repz
std
out
jg
shll
and
dec
addl
xor
inc
cld
addr16
xchg
sub
xor
aam
sbb
inc
cmp
aaa
ficoml
mov
adc
mov
sbbb
xchg
inc
push
sahf
xor
inc
stos
cmc
jp
daa
daa
and
lahf
lcall
les
jae
icebp
sarb
pusha
mov
call
mov
cld
and
das
ds
fisubrl
jl
lds
jo
xchg
out
or
mov
cmp
hlt
sbb
in
je
and
cmp
sti
sahf
gs
ror
pop
sbb
repnz
dec
jbe
inc
jns
pushf
adc
lods
shlb
mov
dec
sbb
xor
push
lds
push
or
mov
call
xchg
mov
push
inc
aad
adc
sub
clc
stc
hlt
test
sbb
dec
sbb
mov
jne
cld
cli
xor
lea
ud2
inc
xor
movsb
jg
cmp
je
xor
sbb
inc
dec
jne
mov
fstl
test
bnd
jmp
lea
pop
mov
jecxz
fcomps
cmp
sub
rorb
jl
pop
mov
out
dec
mov
test
push
add
pop
xchg
xor
fsubl
int3
push
dec
std
or
loope
cld
pop
insl
outsb
xor
les
adc
adc
dec
inc
sbb
fnstcw
cli
out
or
mov
loop
sub
addr16
push
into
xor
ljmp
call
lcall
add
cmp
test
test
cmp
fwait
xchg
inc
and
push
into
cmp
fsts
xor
jne
andl
mov
fimuls
push
push
push
mov
insb
outsb
and
enter
or
sub
and
sbb
xor
movsl
dec
nop
ret
cmp
push
dec
sub
inc
add
popa
cld
cmc
mov
enter
scas
iret
aad
xchg
jl
sbb
xor
lret
dec
push
add
xchg
dec
cmp
add
push
stos
out
pand
pop
pop
gs
clc
mov
dec
mov
pop
sub
mov
sbb
sbbb
ljmp
mov
cli
fnstsw
aaa
pop
mov
sbb
mov
xchg
or
aaa
sbbl
insb
add
or
stos
pop
xor
icebp
dec
dec
mov
lcall
lods
lret
cmp
and
push
push
movsl
push
dec
ss
repz
in
int
and
pop
cmpsb
lcall
dec
inc
or
inc
dec
xor
inc
jns
adc
lea
cli
daa
xor
xchg
sbb
sbb
lret
inc
icebp
in
das
shl
ficoms
stc
repnz
in
inc
daa
push
jb
movsb
insl
mov
pusha
push
mov
pop
les
mov
mov
push
add
stos
aas
lods
sub
lea
test
cld
test
dec
xchg
frstor
mov
addl
cmp
mov
out
call
cld
movsb
lock
out
lods
jae
and
jmp
rcrb
sahf
jns
stc
push
pop
andb
mov
mov
or
push
imul
pop
mov
mov
xlat
ds
ret
hlt
push
sbb
push
filds
popf
insl
jmp
pusha
xchg
and
popf
add
sub
movsb
mov
xchg
sub
mov
lahf
lahf
addr16
push
pop
pop
leave
mov
fmuls
mov
mov
mov
xorb
add
dec
clc
fistpll
bound
xor
pop
daa
cmc
shl
cli
or
jne
sub
daa
in
insl
pop
cmp
mov
mov
or
mov
sbb
push
lcall
inc
es
mov
dec
push
test
ds
cltd
gs
jmp
jns
inc
in
add
or
sahf
pop
sub
xchg
jne
repz
std
lss
jae
sub
sbb
fnstsw
push
or
sbb
mov
in
out
cmp
lcall
or
cmpsb
cmp
dec
dec
lock
lahf
aas
mov
out
xchg
or
arpl
inc
es
cmp
lcall
lea
sbb
push
pop
jmp
pushf
pushf
pextrw
mov
add
bound
mov
arpl
out
jno
aam
shrb
sub
jl
insl
popf
repnz
or
xor
pop
in
and
jmp
cmp
mov
out
cmp
mov
sbb
ffree
addr16
push
mov
je
movsl
jp
cmp
ja
jb
or
xchg
sbb
xchg
push
into
test
adc
lea
push
ds
sti
xor
mov
orb
xchg
or
pop
call
mov
out
inc
xchg
mov
mov
movsl
dec
cltd
jbe
mov
mov
mov
fs
scas
in
mov
dec
leave
mov
int
sarb
jnp
inc
in
mov
mov
sub
mov
jnp
cmp
daa
pusha
popf
mov
jp
inc
aaa
movsl
hlt
out
adc
pop
mov
cmpsl
adc
das
dec
outsl
sbb
mov
lods
js
push
cmp
lret
js
xchg
mov
ficomps
js
in
dec
shrb
mov
mov
mov
nop
mov
mov
std
mov
lods
xor
cmp
or
cmp
lods
pop
sub
sub
outsb
mov
pushf
adc
mov
ljmp
mov
out
push
rcr
idivb
sub
aad
jo
mov
inc
and
cmp
push
movsb
outsb
pop
xor
repz
loop
inc
inc
inc
xlat
in
inc
outsb
or
aad
push
sub
into
cmpsb
mov
rorb
jbe
xchg
jmp
push
mov
mov
mov
sbbl
push
xchg
sbb
cmp
addb
push
mov
xor
stos
sub
sub
sub
inc
subb
out
insl
mov
testb
adc
and
into
mov
je
ret
push
pop
pop
adc
stos
jno
cmpsl
jge
mov
push
rcll
jbe
xor
jae
ret
cld
push
sub
imul
xchg
jo
cld
movsl
xchg
popf
cmp
cld
or
mov
dec
push
mov
push
xchg
stc
ljmp
test
ds
mov
mov
movsl
fcompl
or
push
xor
lods
fwait
sub
imul
xor
add
adc
outsl
mov
data16
loope
sub
push
and
mov
sub
mov
adc
movsl
pop
lods
mov
xchg
pop
test
cmp
xorl
out
icebp
mov
pop
mov
add
mov
lcall
add
mov
scas
xchg
push
mov
and
out
pop
push
push
fists
push
xor
inc
out
and
jle
jle
lock
mov
test
push
sub
movsl
xchg
inc
mov
into
mov
adc
test
jno
push
xchg
jecxz
xor
cmpb
movsb
sub
iret
mov
fmuls
int
mov
popf
lods
test
cwtl
inc
xchg
sub
mov
push
shll
push
sbb
roll
jle
daa
pop
fwait
call
push
push
mov
loop
imul
mov
out
lahf
jle
lret
data16
adc
add
or
mov
inc
jo
or
mov
int
outsb
mov
int
push
dec
inc
stos
xor
cli
cmp
add
mov
or
iret
outsb
call
insb
add
cmp
xchg
jl
shll
aas
aas
and
daa
push
mov
aad
mov
cmp
mov
and
lock
lds
data16
mov
cmpsl
dec
cmp
fsubrl
out
pop
mov
inc
push
mov
inc
lds
push
loope
loop
fnstsw
dec
sbb
or
or
repz
or
mov
js
ficomps
out
pop
outsl
movsl
cwtl
mov
popa
in
pusha
enter
jp
mov
dec
loop
aad
pusha
ret
xchg
and
fwait
add
cwtl
lcall
aaa
jns
in
push
sub
mov
mov
out
or
lret
adc
push
cmc
jo
lahf
loope
adc
adc
mov
lahf
mov
sub
rorl
adc
pop
pop
adc
cmp
mov
insl
add
in
daa
aam
popa
in
sub
mov
rcrl
dec
xchg
dec
daa
mov
fnsave
gs
repz
and
sbb
xchg
mov
in
inc
ljmp
sub
mov
mov
sub
push
push
or
mov
pop
in
dec
lahf
mov
mov
mov
pushf
imul
fadds
or
mov
cmpsl
pop
sub
cmp
rcrl
xor
ss
dec
pop
movsb
jg
adc
sahf
sbb
inc
add
ljmp
call
rcrl
dec
mov
jae
jbe
dec
icebp
je
xor
mov
pusha
dec
lret
cmp
adc
xor
xchg
inc
pop
jae
cld
mov
xor
or
inc
loop
adc
mov
gs
jmp
test
lods
push
adc
sub
jmp
mov
dec
or
jno
lds
or
mov
fs
insl
popf
mov
jo
ja
pop
sbb
addr16
adc
jno
xor
pop
sbb
sub
daa
jmp
add
divb
dec
mov
jp
sub
clc
rol
insb
add
neg
cmpsl
mov
stos
in
jge
sahf
adc
lcall
xchg
mov
loope
mov
clc
or
pop
scas
dec
pop
add
jns
and
mov
sub
cli
fisttpl
cld
mov
push
jno
push
dec
adc
and
jecxz
lods
negb
cmpsb
lods
pushf
cmp
dec
arpl
mov
jae
dec
cmpsl
js
bound
mov
out
mov
sahf
add
pushl
test
pop
mov
sub
into
pop
orb
fists
out
test
mov
and
inc
je
lcall
fnsave
mov
scas
int3
mov
orb
push
mov
and
scas
jmp
xchg
and
xlat
cmpsb
fldl2e
dec
sbb
fwait
out
pop
movsb
scas
push
popf
adc
aas
fldt
xor
and
orb
divl
jecxz
mov
roll
mov
and
repnz
je
movsb
cwtl
xchg
insb
lds
mov
push
addps
or
mov
leave
hlt
fists
mov
adc
add
sub
pop
dec
adc
xor
leave
xor
sbb
dec
jl
rclb
fiadds
mov
imull
dec
dec
pop
push
and
add
out
dec
fidivs
fwait
sub
ret
inc
js
incb
scas
loopne
adc
xchg
popa
push
in
mov
cmp
hlt
lock
mov
lret
cmp
push
xor
imul
dec
pop
mov
sub
bound
repz
sub
js
int3
add
and
push
pusha
cmp
cmp
cmp
mov
sub
pop
andl
decl
adc
out
je
adc
ljmp
lods
lods
mov
in
lahf
scas
cwtl
cmp
loopne
pusha
subl
jge
jge
arpl
jg
mov
in
shr
jge
scas
xchg
push
sbb
lods
adc
arpl
jp
ljmp
lret
aas
inc
loopne
sbb
sbb
mov
push
adc
stos
lods
je
pcmpgtd
push
sti
adc
push
mov
pop
adc
incl
into
lret
aaa
jg
mov
mov
lahf
jecxz
fs
pcmpeqd
insl
cmc
xchg
lock
jo
inc
adc
cmpsl
jb
xchg
dec
loop
mov
enter
xor
xchg
and
xor
xor
cs
data16
pop
stos
dec
push
loopne
lretw
flds
xor
mov
scas
jl
inc
cmp
inc
mov
jge
mov
sub
lods
jl
push
enter
sbb
adc
ret
jecxz
sbb
outsb
xor
jae
popa
add
inc
rolb
xor
daa
notb
aaa
mov
and
dec
incl
test
inc
sahf
mov
inc
imul
and
mov
lret
mov
cmp
dec
cmc
lret
sub
jle
pmulhw
cmp
fnsave
cmpsb
inc
and
das
or
lods
clc
add
idivb
aam
push
arpl
test
fsubrl
loop
pop
mov
mov
or
sbb
push
pop
dec
or
lods
push
mov
sbb
push
jns
in
pop
mov
add
pop
arpl
arpl
xor
pop
add
jl
mov
push
push
mov
dec
sub
push
mov
jbe
enter
adc
js
xchg
mov
adc
push
pop
ss
adc
lcall
in
sbb
je
push
mov
pusha
pop
jle
pop
dec
inc
mov
or
xor
mov
jb
adc
sub
call
cmp
int3
test
xor
int
cmpsb
js
mov
cmp
push
xor
fs
lcall
out
push
sbb
lods
sbb
mov
inc
inc
lahf
call
pusha
jecxz
pop
dec
lcall
cs
pop
push
outsb
cmp
out
shr
inc
sub
or
inc
lods
pop
pop
cmp
out
fadd
sub
shlb
sbb
ja
repz
into
aaa
in
mov
sahf
lods
stos
aad
mov
cmc
xor
xchg
jbe
cmp
xlat
pop
mov
mov
rolb
xchg
fld
jne
lods
out
mov
fistps
mov
shlb
xor
and
jae
mov
fidivrl
loopne
jno
xchg
add
sbb
imul
pop
sbbl
jge
mov
arpl
mov
cmpsb
repz
aaa
push
lods
push
cmp
shr
stos
in
mov
flds
ror
decl
out
and
mov
pop
mov
test
lock
stos
jecxz,pt
mov
fnstsw
and
mov
nop
stos
adc
xor
add
scas
jp
xchg
xchg
or
xchg
or
xor
push
lret
sbb
in
fs
mov
popf
subl
or
rclb
fs
cltd
pushf
dec
push
outsl
xor
inc
inc
js
cmp
pop
cs
lret
or
ljmp
ja
mov
dec
xor
cwtl
dec
pop
add
stos
ljmp
mov
cmc
sub
mov
mov
jo
out
ret
xor
sti
mov
out
mov
cmp
or
cld
fdivrl
out
dec
jl
fldln2
mov
stc
mov
roll
sub
xchg
rcr
rolb
mov
mov
push
fimull
bound
or
pop
loopne
xchg
sub
jo
jbe
mov
in
je
test
sbb
mov
lahf
xchg
cltd
repz
ds
jl
dec
test
cmpsb
movb
imul
stos
jb
mov
jg
repnz
or
sub
pusha
imul
mov
iret
lcall
in
stc
dec
stos
mov
mov
repnz
shl
int
repz
mov
fisubrl
in
sub
aas
pusha
lods
icebp
cld
pusha
in
outsl
jnp
pop
dec
stos
mov
sub
pop
mov
mov
out
jecxz
outsl
inc
cwtl
cmpsl
movsb
pop
or
jp
adc
addr16
xor
test
mov
or
jno
frstor
adc
call
add
ljmp
fildll
push
and
add
or
mov
xchg
jmp
fcomps
repnz
sub
cmp
cmp
xchg
dec
rorb
add
wbinvd
dec
push
mov
idivb
dec
ds
xchg
sbb
addr16
inc
pop
leave
dec
inc
mov
insl
push
sbb
int3
sbb
pop
fisubs
or
mov
nop
mov
xor
jecxz
and
das
or
pop
dec
shr
xchg
call
outsb
or
loope
movsb
pop
faddl
leave
movsl
dec
stos
mov
out
jo
push
xchg
lret
es
flds
sub
inc
xchg
lock
fsts
out
inc
outsb
out
loope
dec
xchg
adc
jno
test
dec
pop
cs
dec
sub
jae
cmp
and
pop
fidivs
scas
out
cmp
in
sbb
icebp
outsl
xor
and
sub
ret
jmp
popf
mov
mov
xchg
scas
sub
cli
xchg
aam
dec
sub
adc
ret
lea
mov
xchg
test
test
or
pop
jecxz
xlat
add
cmc
push
jo
sub
hlt
scas
adc
xchg
fistpl
push
in
or
jo
jne
mov
aas
daa
lea
jno
dec
dec
fimuls
sbb
xchg
mov
xchg
data16
scas
in
movsb
mov
das
dec
hlt
out
lods
xchg
cwtl
loope
sub
cli
add
gs
sahf
cli
leave
shlb
mov
jne
jecxz
inc
pusha
sub
mov
out
jns,pn
lods
push
jo
mov
adc
push
mov
mov
into
or
mov
stc
clc
jnp,pt
jno
cwtl
and
cmp
adc
sbb
into
movsl
mov
lods
jge
or
rol
inc
jae
or
in
add
fdiv
stc
or
adc
imul
mov
outsl
adc
decb
lock
jp
and
aas
lcall
mov
xor
xchg
stos
add
xchg
inc
mov
and
jns
das
pop
mov
and
dec
lahf
sbb
sahf
fcomps
push
dec
into
xchg
lahf
ret
fbstp
fsubs
mov
dec
mov
sub
outsl
bound
scas
lock
cmp
jle
mov
rorl
inc
or
shlb
jge
ret
xlat
das
call
vmovlps
adc
pop
inc
mov
sbb
ss
shlb
mov
iret
test
cmp
sub
pcmpgtd
sub
in
out
lock
jmp
inc
adc
loop
xor
fstps
mov
jecxz
pop
xchg
aad
jecxz
dec
pop
adc
loop
stos
inc
sub
icebp
xor
stos
mov
loop
in
push
and
pop
cmp
or
mov
jmp
inc
dec
mov
ss
pop
mov
pop
or
test
push
xchg
cwtl
xor
adc
adc
cli
pop
mov
sbbl
daa
mov
rolb
xor
cmpsb
jae
daa
pop
addr16
push
stc
outsl
fistpll
insb
mov
std
mov
or
jle
sub
aam
int
into
std
pop
cltd
mov
in
fldenv
pop
xchg
sub
lahf
divl
jp
ror
jg
ss
fstpl
inc
bound
xor
sbb
mov
imul
jne
imul
jnp
repnz
aaa
inc
fsubrl
fistpll
inc
inc
jae
scas
cmp
inc
adc
test
xchg
pop
jmp
cmp
mov
jp
test
mov
push
xorb
in
imul
xchg
sti
imul
jo
or
mov
push
xor
xchg
in
xchg
lret
push
loope
fbstp
or
adc
ds
pop
test
notl
fld
mov
cmp
fdivs
add
pop
jl
jle
pop
lods
mov
mov
loope
pop
push
pusha
push
or
aaa
push
std
push
sbb
into
push
inc
xchg
adc
mov
pop
lret
xor
adc
jmp
rcrl
adc
mov
je
inc
lods
inc
insb
dec
xchg
out
xor
xor
mov
mov
out
pop
icebp
xchg
mov
pop
jb
add
cmp
sub
push
jbe
dec
and
sarb
das
mov
or
push
mov
dec
pusha
lahf
cmp
cli
and
daa
shlb
dec
jae
push
fldl
std
add
sar
push
xchg
lods
sahf
push
push
cmp
loope
and
lcall
jne,pn
adcl
xor
andl
popa
fstp
roll
pop
and
jge
lods
stos
and
fadds
inc
xchg
fidivl
sub
mov
inc
sbb
imul
pop
xlat
stc
not
or
ja
and
sub
adcl
incb
mov
mov
test
jp
in
cmp
sub
mov
jbe
pop
and
jb
outsl
ret
push
aaa
fists
lea
mov
adc
mov
dec
mov
lds
testb
movsl
mov
jmp
sub
add
mov
or
es
imul
xor
pop
cmp
pop
scas
push
jmp
fildl
xor
fdivs
pop
imul
test
es
xor
jmp
adc
xchg
xchg
mov
les
mov
sub
pop
mov
hlt
mov
pop
lcall
or
les
pushf
dec
sub
mov
pinsrw
repz
jno
test
andb
push
sbb
mov
xor
jge
cmpsb
or
stc
dec
ljmp
add
loop
cli
stos
push
inc
pop
cmp
movb
mov
add
test
sbbb
push
cmpsl
xchg
fiaddl
lock
mov
xchg
idivl
iret
lcall
jge
mov
push
stos
xor
or
shll
fistpll
mov
and
mov
mov
push
inc
call
lock
push
add
xlat
mov
xor
mov
into
scas
out
add
movsb
out
pop
shlb
dec
xchg
jns
inc
inc
sbb
adc
fwait
jbe
shrl
mov
fcomps
fdivl
mov
jmp
add
fidivl
mov
jl
xchg
jg
mov
mov
jmp
jbe
inc
loop
jne
mov
jg
adc
popa
adc
jbe
push
dec
or
mov
xor
lret
loop
leave
outsl
pop
sarl
sarb
repz
fiadds
cmp
outsb
test
and
mov
jae
sub
inc
pop
xor
push
aam
push
cli
jnp
jl
jbe
hlt
cwtl
add
jne
sbb
or
divb
fs
scas
pop
pop
mov
jecxz
stc
cmpsb
dec
push
test
out
into
xchg
inc
add
inc
inc
imul
pushf
mov
lods
dec
int3
mov
popf
je
mov
inc
ffreep
pop
aaa
decl
call
mov
mov
or
dec
push
sar
loopne
jo
aam
in
mov
dec
mov
pop
nop
into
scas
adc
adc
sub
sbb
mov
lret
xchg
fs
sahf
inc
xor
push
sub
adc
xchg
xchg
adc
inc
pop
mov
push
dec
movsb
jg
lock
cmp
cwtl
cmp
xor
pop
mov
sti
inc
out
fnstsw
and
dec
je
ret
dec
stc
test
lret
mov
sub
inc
mov
or
jp
dec
pop
mov
shlb
daa
xor
repz
push
cmp
mov
mov
in
dec
iret
xchg
push
ds
and
stos
jge
stos
xlat
mov
dec
cmc
jns
adc
jl
xor
push
xchg
jmp
lea
xchg
jo
sub
andl
cld
cmc
insb
mov
push
dec
dec
pusha
cmc
sub
cmp
cltd
in
aam
jl
cli
or
xchg
imul
sti
shll
rclb
arpl
roll
jns
xchg
add
test
rcr
push
inc
xchg
push
shlb
clc
mov
cmp
mov
fsubl
movl
xchg
dec
sbb
jne
fsts
negb
dec
jnp
sarb
push
pop
lret
es
xchg
stc
mov
ficomps
mov
mov
outsl
fcomps
xchg
lock
inc
inc
adc
enter
or
fiaddl
xor
pop
scas
mov
push
mov
mov
test
xchg
movsb
icebp
filds
cwtl
stc
not
cli
fxch
lods
jp
mov
sub
sbb
cmp
cmp
sar
pop
and
ds
inc
and
jmp
adc
sub
lcall
testl
cmpsb
fcompl
sbb
jmp
push
add
or
cmpsb
cwtl
aas
pop
imul
daa
xchg
push
pop
mov
and
cmp
lea
cmp
imul
mov
fidivs
xor
jl
out
pop
inc
lcall
lock
mov
mov
mov
loopne
lds
jnp
jp
loope
add
aaa
fnsave
jns
sbb
lds
in
mov
int
call
fidivl
add
popf
mov
hlt
mov
sbb
lds
add
lret
adc
mov
shll
fnstenv
or
daa
bound
xor
add
js
adc
fistpl
shr
dec
mov
push
je
addr16
cmp
sub
test
push
mov
sbb
call
add
dec
aaa
mov
rcr
sbb
sbb
iret
cmp
adc
inc
inc
xor
xor
and
push
dec
jne
mov
xchg
lea
jl
mov
adc
push
cwtl
jmp
push
adc
jb
inc
add
mov
xor
jns
mov
arpl
mov
lods
xchg
inc
lods
icebp
mov
or
pop
ret
sbb
call
bound
icebp
jp
jbe
scas
adc
fisubs
hlt
mov
fwait
pop
cmp
shrl
mov
inc
int
dec
mov
xchg
xchg
insl
ds
push
aam
sub
xor
lods
shlb
adc
jbe
jno
sub
mov
data16
mov
inc
jg,pt
int3
dec
mov
adc
xor
cwtl
fbstp
or
pop
call
cmpsb
pop
ret
inc
jne
popa
add
sub
cmpsb
sbb
lret
rcll
jmp
pop
decl
mov
lods
cld
outsl
pusha
mov
and
shll
inc
es
cld
jl
pop
sbb
sub
andl
pop
out
pop
sbb
cmp
xlat
and
stos
mov
xor
jmp
repz
les
cmpsl
les
sbb
cltd
xchg
and
sub
add
xor
fdivrl
ret
repnz
mov
push
repnz
cmp
mov
mov
dec
pop
jl
fmulp
pop
fs
scas
dec
mov
adc
lret
mov
outsb
xor
adc
and
mov
xchg
inc
outsb
push
insl
jmp
adc
jns
cwtl
std
jmp
sar
fsubs
adcb
push
sbb
jnp
fwait
shlb
enter
enter
add
mov
pushl
sbb
leave
lcall
stc
int
sbb
cwtl
sub
in
es
outsl
xchg
jne
aaa
jns
mov
lods
adc
pop
jl
cmp
jnp
leave
lret
jae
or
hlt
cmp
ljmp
in
imul
and
xor
insl
xor
test
sbb
lods
les
pmulhuw
mov
xor
mul
pop
xorl
push
insb
push
pop
xchg
fstpt
jge
bound
jp
cwtl
pusha
pop
insl
inc
jae
or
pop
stos
adc
aad
adc
dec
arpl
jge
les
ss
fnstcw
inc
push
aaa
in
push
sbb
in
xor
lds
mov
lcall
sbb
xchg
sbb
dec
sub
sub
aad
hlt
xchg
sbb
mov
cwtl
or
pop
outsl
icebp
shlb
leave
mov
and
out
jle
xchg
sbb
xchg
inc
std
insb
fidivrs
mov
jl
jmp
ret
lds
sub
jne
cs
int3
aam
test
mov
daa
xchg
adc
push
icebp
int3
or
js
stc
xorl
adc
daa
cmp
clc
iret
sbb
hlt
call
jo
dec
les
popf
movsb
dec
push
enter
push
dec
lods
and
les
jns
int
adc
xchg
jne
addr16
add
cmc
or
imul
je
imul
sbb
jecxz
repz
test
inc
test
push
xor
add
dec
ja
jne
lret
in
shl
rorl
lahf
in
imul
mov
xlat
pop
dec
shll
dec
xchg
dec
lock
and
add
xlat
aam
ds
cmc
mov
inc
nop
push
insl
in
cs
cld
scas
inc
sbb
frstor
pop
pop
fs
outsl
data16
sub
jl
pop
shll
jns
in
cli
test
out
hlt
and
and
loope
inc
repnz
aad
stc
sub
push
pop
insb
lea
icebp
movsl
fs
xor
lea
in
mov
jne
arpl
sub
lcall
dec
mov
mov
mov
jge
std
and
and
into
add
mov
std
daa
lods
loope
roll
push
lcall
sbb
fadds
xlat
or
in
push
inc
in
adc
mov
aaa
ljmp
xlat
xchg
imul
loopne
out
mov
sbb
push
push
fld
xchg
aas
cmpsl
int3
mov
stos
sbb
inc
test
rorb
icebp
pop
cli
fstl
mov
cmp
inc
pop
inc
add
cmpsb
loopne
push
adc
ss
mov
aam
push
aad
insl
call
ret
pusha
mov
ret
adc
loopne
inc
and
shll
dec
aad
adc
jb
leave
mov
dec
mov
pop
or
js
in
sub
outsb
popa
in
fisubl
jmp
aam
cld
je
fildl
sub
pop
mov
adc
mov
jle
shlb
outsb
lret
lea
jns,pn
adc
sub
idivl
test
pop
cmpsl
mov
ror
jns
pop
mov
stos
call
aam
mov
sbb
out
pushf
cltd
fadd
nop
add
mov
data16
inc
sti
adc
dec
rolb
or
cltd
pop
outsl
out
test
je
outsl
orb
leave
cmp
xor
push
xor
mov
je
mov
dec
push
mov
hlt
sbb
sub
dec
mov
lret
inc
push
and
scas
xlat
mov
call
arpl
mov
or
xchg
xchg
leave
pusha
cwtl
lcall
and
push
sbb
and
mov
sub
sbb
movsl
hlt
jmp
pusha
pop
mov
adc
enter
xchg
leave
stos
js
in
stc
xor
mov
cmp
sbb
xor
xlat
sbb
in
faddp
sahf
cmp
sbb
icebp
or
lahf
push
test
in
add
sarb
shrb
bound
imul
insb
push
jo
cwtl
nop
xor
pop
sbb
mov
xor
mov
push
push
dec
lret
mov
jnp
mov
jecxz
cmc
int
ds
ret
push
das
dec
inc
clc
sti
std
rcrb
jmp
test
add
cli
cmpsb
pop
cli
fwait
xchg
clc
sbb
push
mov
dec
pop
mov
insl
inc
lcall
in
leave
scas
es
push
inc
dec
into
jo
mov
xor
adcl
es
outsb
daa
aam
leave
dec
adc
push
pop
gs
addr16
dec
cs
mov
adc
mov
mov
inc
insl
sub
and
push
sub
mov
repz
xchg
dec
imul
cltd
rcrb
jle
imul
lock
cmpb
jns
mov
mov
popf
cmc
test
jbe
lahf
vpcomb
test
int3
pop
xor
out
imul
sub
loop
cld
in
jmp
idivb
and
movsl
mov
mov
inc
push
xchg
lcall
adc
xor
cld
inc
popa
pop
xchg
push
sub
cmp
jne
les
pop
push
or
pop
pushf
lea
jbe
es
int
mov
mov
rorl
inc
imul
push
daa
clc
fdivl
ljmp
mov
mov
aad
sub
mov
mov
es
rcll
lods
cld
popf
lcall
mov
inc
sti
xor
in
roll
les
adc
fwait
and
jmp
lds
stos
in
jo
xchg
xorb
inc
xchg
xchg
iret
xor
xchg
fcoml
or
push
sub
cmp
call
inc
lods
into
inc
pop
cmp
mov
fisubrs
push
dec
pop
shlb
aad
mov
ljmp
scas
dec
mov
cmpsb
sbb
insb
movsb
dec
jnp
jae
or
out
daa
pop
sbbb
sahf
call
lret
mov
mov
scas
aaa
jecxz
jge
lock
in
xchg
dec
out
dec
pop
pop
lock
dec
jns
inc
test
dec
push
idivb
jecxz
adcl
pop
xor
lret
in
subl
loope
push
cmp
aam
js
lret
inc
mov
xchg
lods
fdivrs
jge
push
fxch
mov
lods
or
pop
negl
mov
mov
pop
out
dec
pop
add
sarb
mov
sub
mov
inc
xor
pop
jge
and
cmpb
roll
ja
je
mov
jae
sub
jno
cmp
fwait
popa
push
sub
mov
cmc
sub
stos
push
push
ljmp
mov
pop
test
bound
jle
sub
aam
xchg
add
or
les
call
into
insb
lods
outsl
push
jae
xchg
xchg
bound
aaa
cmc
call
sub
hlt
fstpt
sub
pusha
subl
into
mov
jno
sbbb
outsb
sub
stos
loop
or
mov
mov
sub
fnstenv
inc
push
into
dec
mov
and
outsb
pop
insl
mov
dec
movsb
bound
hlt
fidivs
into
push
mov
pop
push
mov
scas
jg
lods
out
or
cltd
imul
dec
fmuls
and
cmp
popa
sub
dec
dec
and
and
in
orb
mov
lods
clc
in
dec
push
xor
and
push
add
cmp
test
into
add
push
xor
aaa
or
fidivrs
adc
daa
nop
hlt
mov
subl
lods
les
je
lret
push
mov
movsl
fnstcw
in
add
sbb
xchg
pop
andl
jnp
adc
and
jns
sub
ret
lret
out
gs
fcoms
lcall
imul
mov
lea
out
stos
sub
sbb
add
push
scas
cmp
lods
xor
push
enter
xlat
out
pop
imul
ja
daa
dec
mov
sahf
in
mov
sbb
arpl
call
sbb
mov
sub
and
jns
xor
mov
in
out
jbe
call
mov
outsl
push
test
sub
jbe
xchg
sbb
imul
ret
add
out
cld
mov
adc
aaa
sti
sub
mov
std
dec
cmpsb
leave
aas
es
mov
scas
sbb
xor
add
mov
cli
stos
lret
loop
iret
add
dec
ret
inc
loopne
inc
outsl
arpl
add
icebp
data16
in
jns
cmp
xorb
pop
xchg
fcoms
xor
je
xchg
scas
jmp
outsb
fiaddl
pop
add
inc
in
cmp
sub
addl
jns
inc
xchg
movl
and
fadd
fisubs
add
jns
mov
dec
movsl
cmp
xchg
imul
jmp
outsb
mov
pushw
js
adc
sbbb
cmp
fs
daa
mov
cmp
cmc
stos
xor
xchg
ret
mov
popf
mov
fsubr
push
int
mov
push
movsl
pop
sti
inc
out
fdivs
aaa
shl
jb
popa
add
xchg
mov
push
addl
push
xchg
mov
or
jae
inc
cmpsb
decl
jmp
sub
imul
or
jle
dec
in
dec
orb
xor
ss
idiv
fnstenv
icebp
mov
cmp
inc
dec
sbb
out
cmpb
mov
out
pop
mov
insl
adc
xchg
mov
fs
and
divb
xchg
sbb
jnp
stc
push
rcrb
hlt
sbb
pusha
inc
fidivl
jg
movb
movsl
stos
xchg
lcall
ret
adc
sbb
out
jne
sahf
adc
mov
popa
xor
scas
sub
mov
adc
fwait
loope
or
ret
and
pop
pop
xchg
enter
mov
leave
xchg
fimull
mov
xor
mov
xchg
je
ret
int
cmp
dec
push
js
push
movsl
pop
mov
push
sub
roll
out
inc
in
std
addb
out
hlt
test
sbb
push
popa
sbb
ret
inc
lret
test
lahf
cmpsl
sti
jg
aaa
fsubs
leave
rcrb
dec
dec
push
cli
rcll
inc
pop
mov
dec
add
xchg
imul
cmp
mov
aas
push
repz
or
inc
popf
cld
outsb
xlat
enter
je
mov
loope
push
out
push
mov
fsubs
ffree
sbb
stos
imul
and
jae
daa
mov
jbe
mov
cwtl
aas
xor
mov
insl
sbb
mov
arpl
int3
testb
stc
int3
and
decl
or
cmp
jno
dec
inc
xchg
and
jl
xchg
xchg
aam
enter
mov
sti
push
xchg
add
testl
les
inc
es
mov
mov
shl
pop
fimuls
repz
pop
sarb
mov
push
lahf
hlt
out
sahf
scas
lret
cltd
push
xchg
xor
outsl
lock
imul
fcomps
dec
mov
cli
ljmp
dec
lahf
ret
mov
jmp
xchg
pop
add
call
fnsave
cmp
xor
pop
inc
add
sub
and
pop
mov
jb
or
dec
iret
movq
xor
and
xor
adc
mov
pop
sub
aad
call
xor
call
stc
dec
add
mov
adc
lea
add
mov
sbb
mov
rorb
xor
imul
fstps
mov
cmpsl
call
into
sbb
pop
loopne
xor
in
xor
xchg
fiadds
loop
mov
jne
push
inc
mov
push
push
sub
test
xlat
jle
aad
xchg
ret
adc
inc
mov
sub
in
pop
push
dec
cld
jno
xor
jno
in
test
cld
cmp
mov
pop
inc
adc
sti
and
test
aam
imul
and
sarb
fisttps
sub
rcrb
repz
push
in
imul
cmc
dec
gs
pushf
maxps
add
out
arpl
mov
aam
jmp
arpl
fwait
nop
stos
and
jb
add
sbb
daa
cltd
into
xor
mov
scas
push
push
pop
cbtw
scas
mov
outsb
ja
dec
mov
imul
sbb
mov
insb
jno
mov
push
sbb
popl
les
stos
pop
adc
dec
jmp
fnsave
jmp
jge
scas
jge
jg
push
inc
popf
into
sub
lock
fs
add
inc
xchg
mov
mov
push
outsl
cli
fwait
push
insb
in
outsb
jecxz
fbld
inc
es
ja
iret
sti
pop
push
adc
cwtl
cmp
jb
outsl
jns
gs
decl
ret
ljmp
adc
sbb
sarb
rclb
sbb
push
cwtl
scas
sbb
popf
inc
xor
bound
inc
popa
test
enter
pop
in
xor
aam
adc
leave
mov
ss
push
push
in
xlat
sbb
jne
mov
outsb
xchg
scas
mov
dec
pop
pop
je
lds
or
mov
or
and
sbb
and
add
xchg
iret
ja
and
xor
sbbl
adc
and
jno
xor
aas
int
mov
lds
mov
outsl
or
mov
sbb
and
adc
xchg
dec
in
sbb
xor
les
mov
movb
mov
push
movb
xchg
sbb
push
or
dec
sub
enter
inc
in
popa
push
or
sub
dec
sahf
mov
sbbl
jno
jg
pop
out
call
leave
daa
xchg
cmp
cmpsl
outsb
fwait
jmp
lods
out
gs
fprem1
fisubs
mov
jecxz
inc
outsl
imul
enter
pop
inc
lret
faddp
add
insb
or
pop
orl
test
adcb
sti
fnstsw
add
out
stos
mov
mov
push
pop
fs
jmp
jnp
sbb
jmp
pop
movsl
mov
and
enter
iret
pop
mov
dec
shlb
xor
rolb
dec
mov
jo
negb
push
out
je
testl
or
cmovb
jp
inc
cmp
or
or
jb
push
cmp
mov
xor
lret
cmp
or
xlat
lret
mov
inc
inc
xor
jecxz
adc
and
jnp
ja
icebp
int3
lea
xchg
adc
repz
mov
inc
inc
lock
xlat
jae
ljmp
div
mov
fcmovbe
add
lods
cmp
push
dec
cwtl
jle
jbe
jl
mov
lahf
mov
cmp
push
xor
cmp
jge
je
adc
lcall
jo
jae
xor
in
jns
push
cli
add
adc
sub
mov
popa
call
hlt
jl
pop
jno
inc
insb
dec
out
adc
jmp
xlat
daa
add
daa
test
loopne
push
mov
shl
push
stos
push
pop
mov
and
mov
push
inc
inc
cmpb
push
pop
addr16
adc
inc
jg
mov
inc
jns
mov
inc
lcall
cmc
imul
pushw
xor
add
inc
lahf
in
leave
out
xchg
xchg
fnsave
insl
scas
cmp
test
jo
insb
mov
mov
cmp
jl
fldcw
mov
scas
xchg
imul
and
xor
into
push
adc
int
or
inc
push
mov
sub
xor
cmpsl
mov
xchg
gs
xor
adc
jge
dec
les
fs
mov
loope
add
cmpsl
fucomp
jg
push
xor
add
loope
decl
les
mov
xor
mov
pushf
cmpsb
out
jmp
xlat
ds
sbb
aaa
and
cmp
mov
xchg
pop
rcrb
inc
jb
mov
imul
push
add
jge
jmp
scas
cmp
iret
pop
push
add
inc
jecxz
imul
lock
cmp
inc
add
cmp
icebp
bound
fdivl
xchg
call
and
nop
xor
in
fstl
or
inc
mov
into
int
push
mov
push
mov
addb
iret
xchg
cmp
mov
sbb
mov
xor
xchg
sbb
xor
mov
ljmp
test
inc
push
inc
jae
xlat
scas
fnstcw
mov
sbb
shlb
test
loope
orb
cld
adc
adc
call
lds
hlt
or
sahf
daa
loopne
mov
in
and
mov
test
fistpl
cmp
add
mov
push
je
insl
icebp
jb
mov
dec
inc
mov
push
dec
daa
mov
adc
popf
repnz
je
shlb
repnz
sti
iret
jmp
or
and
and
inc
fimull
testl
inc
nop
dec
ds
cltd
cld
pop
lods
sti
mov
and
lds
jmp
xlat
rclb
fwait
sub
pop
cmpsl
arpl
xlat
dec
mov
and
subb
mov
ret
adc
mov
mov
fiadds
addr16
cltd
jmp
push
mov
in
in
lods
jno
pop
cld
mov
jae
mov
fistps
xlat
xchg
aaa
lcall
addr16
mov
add
cwtl
jb
cli
jg
repnz
or
push
cmpsb
scas
xor
inc
stos
cs
jp
mov
push
pop
shl
or
or
dec
loopne
inc
scas
call
sbb
pop
setne
xor
cmp
inc
shlb
add
outsb
add
decb
push
sahf
lock
ret
adc
and
cmpsl
int
loop
mov
lret
ret
pop
sub
in
pop
or
divl
inc
pop
testb
mov
aad
imul
add
inc
jbe
mov
and
add
mov
int
mov
push
dec
pop
es
ljmp
mov
jmp
pop
lods
sbb
cmp
incl
aad
std
arpl
stc
or
pop
and
pop
jle
sub
idivb
jne
fs
jp
mov
xor
repnz
or
jl
push
sbb
and
add
inc
dec
dec
jmp
cmp
jl
push
mov
cwtl
or
push
xlat
sbb
cmpsl
repz
dec
insb
hlt
mov
xchg
pusha
popf
push
xchg
test
lds
or
icebp
out
or
mov
adc
jmp
test
mov
mov
adc
les
and
and
jle
cmpsb
pop
sub
and
movsb
fistpl
bound
push
and
out
xor
fdivrs
sahf
notb
push
or
sub
insb
push
xchg
push
aas
pop
lea
dec
jae
mov
cmpsl
adc
imul
push
movsl
fidivl
aaa
jle
push
fistpll
jns
lds
xchg
cld
push
jl
test
dec
in
sbb
andl
sahf
xchg
mov
jmp
repz
add
pop
add
mov
xor
ret
outsb
jp
adc
xor
push
pop
adc
shll
xor
pop
insl
mov
mov
mov
xor
das
pop
mov
and
test
xor
lods
add
xor
cmp
mov
sub
mov
iret
into
jb
jbe
fisubrs
mov
ja
dec
cmp
jp
jge
bound
jl
icebp
push
sahf
xchg
sbb
dec
cmp
js
in
shrb
lock
loope
inc
in
lods
and
push
lret
gs
call
icebp
sbb
cmp
cltd
out
std
sub
shl
inc
jecxz
mov
dec
out
dec
xor
xchg
std
sbb
ds
sbbl
fdivrs
addl
sti
dec
mov
stc
lahf
int
dec
xor
fmuls
and
clc
insl
outsb
out
fs
mov
imul
xor
adc
pop
pop
mov
jbe
sub
mov
xchg
push
jae
pop
outsl
xchg
add
adc
adc
push
shlb
jmp
movq
leave
add
imul
and
cmp
gs
ficomps
pop
xchg
push
xor
fidivrl
jae
aas
add
pop
sub
sahf
push
pop
xchg
lret
aam
sarb
xchg
cmp
jge
daa
mov
sub
dec
je
lds
loope
cli
js
or
addb
lcall
xchg
mov
or
add
jle
int
inc
int
cmpsl
cs
or
push
test
jecxz
decl
add
xor
xor
shrb
scas
adc
mov
xor
mov
add
mov
and
dec
mov
and
pop
test
dec
and
jmp
sub
cld
cmp
pop
pop
ss
push
xor
sub
or
fistps
mov
mov
add
fs
pop
fs
mov
pop
xlat
inc
add
or
in
adc
mov
jl
jge
push
and
notl
rcrl
shll
mov
int3
dec
rcrl
cli
shlb
lock
jl
sbb
jb
inc
mov
mov
adc
dec
mov
push
add
leave
ljmp
sbb
stos
mov
fs
mov
inc
sbb
icebp
mov
lcall
sub
out
xchg
sbb
and
push
rcr
or
inc
sub
add
xor
insb
and
jbe
test
xchg
lahf
push
cwtl
adc
fwait
in
pushf
pop
push
sub
leave
movsl
lods
adc
dec
daa
not
push
lret
sbb
xchg
lret
dec
int3
mov
mov
sub
mov
mov
rol
arpl
outsl
inc
sbb
jmp
loopne
mov
cmp
push
stos
jmp
inc
subb
add
sbb
lock
adc
pop
mov
adc
ret
pop
imul
push
adcl
push
out
adc
xlat
iret
push
ja
shlb
pop
or
sbb
cmpsl
cmp
pusha
loopne
int
push
mov
push
cld
add
inc
mov
push
mov
adc
jmp
or
pop
shrb
jo
and
ss
and
xchg
mov
pop
or
mov
pop
add
dec
adc
sbb
sub
outsl
fildl
aas
xchg
xchg
clc
xor
push
rcll
and
ja
pop
ljmp
lock
dec
pop
add
movsl
adc
xor
add
out
or
adc
pop
es
sub
push
jb
jnp
loop
popa
inc
mov
push
mov
flds
dec
add
adc
pop
out
ljmp
dec
mov
add
xchg
lea
hlt
inc
cli
pusha
int3
and
adc
cmpl
add
sahf
enter
cmp
movsb
mov
cltd
sbb
ss
icebp
push
mov
add
pushf
iret
sub
sbb
dec
decb
push
rcll
fucomi
sbb
jb
cmpsb
ret
jge
xchg
out
lock
jns
inc
stos
mov
stos
repnz
pop
fidivrs
in
xchg
fiadds
aas
dec
push
ljmp
lcall
or
dec
cmc
adc
or
ss
cmp
insl
mov
ljmp
orl
neg
jo
xchg
add
cmp
pop
icebp
sti
sti
cmpl
sbb
jo
lods
push
xchg
js
cmp
lahf
shll
xchg
in
insb
ret
cmpsb
out
push
push
jne
daa
daa
sahf
pop
xor
xchg
ljmp
addr16
xchg
scas
fmuls
cmp
xor
cmpl
xchg
mov
xchg
xabort
out
adc
add
loop
pop
mov
sarb
mov
add
pusha
loop
call
adc
into
sbb
repz
gs
jne
push
aam
inc
mov
jp
xchg
test
lea
pop
pop
mov
mov
outsl
push
push
testb
fstps
jp
and
scas
fisubrs
rcr
push
and
test
lock
ja
adc
lea
mov
movsb
popa
js
add
sahf
mov
mov
out
sub
push
lods
outsb
xchg
adc
sub
pushf
xchg
mov
rorb
mov
mov
test
push
jae
sub
mov
enter
repnz
xor
addr16
loop
scas
xchg
mov
mov
sti
and
add
dec
popa
xor
xchg
jecxz
sub
xchg
adc
ret
cmpsb
scas
js
inc
xchg
or
sbb
test
xchg
rcrb
xchg
orb
jne
push
sbb
mov
aas
mov
outsl
out
add
xor
and
push
stc
mov
es
ljmp
mov
inc
call
stos
ljmp
loopne,pt
cmp
push
push
xchg
mov
lcall
std
push
pop
jo
aaa
imul
pop
scas
ret
inc
xchg
sbb
lds
cmp
shl
mov
add
sbb
repnz
mov
inc
cltd
jb
or
in
dec
inc
lds
imul
mov
xor
pop
xchg
and
imul
xchg
test
test
movsb
cmp
in
popa
inc
popf
push
aas
ss
inc
cmp
push
mov
int
popf
push
ret
stos
mov
push
aam
pop
je
fsts
fwait
jne
dec
jnp
pop
das
mov
lret
dec
mov
mov
and
mov
or
dec
push
dec
mov
shlb
inc
xchg
xor
cmpsb
mov
jp
push
gs
cmpsb
sbb
push
cmp
sub
push
push
xorb
and
rol
outsl
imul
or
add
lods
loopne
inc
pop
mov
pop
adc
push
xchg
stc
movsl
stc
out
sub
mov
popf
enter
aad
cwtl
xchg
jmp
fyl2x
inc
movsb
jo
xchg
in
cltd
xor
ret
das
ja
popa
and
xchg
jbe
sbb
xchg
add
loop
and
mov
pop
in
test
sahf
and
dec
out
fst
dec
out
xor
in
xor
cmp
xor
sbb
out
mov
in
mov
das
adc
push
in
pop
shr
insb
test
cwtl
mov
lock
mov
jbe
xchg
fcmove
jecxz
pusha
mov
add
clc
repz
and
rclb
lods
jp
mov
push
faddl
out
and
lods
jnp
shll
inc
and
xchg
push
pushl
fdivrl
enter
mov
aas
xchg
jne
insl
push
imul
mov
cmp
xchg
ret
js
add
cld
cmp
cmp
mov
rorb
stos
cli
sub
aam
xchg
sbb
imul
insb
repz
leave
and
loope
jne
mov
mov
js
leave
nop
mov
bound
imul
or
add
je
xchg
enter
add
in
in
inc
shrb
mov
sbb
and
add
pop
mov
fldl
cmpsl
sbb
add
movsl
fisubs
cmp
mov
addr16
cmc
jae
xor
js
mov
insl
dec
fidivrl
lods
std
jns
mov
dec
jg
imul
dec
mov
pusha
out
in
mov
insl
and
add
jmp
mov
ljmp
and
push
cmpsb
roll
push
pushf
xchg
cli
stos
fidivl
sub
inc
iret
ds
xor
sub
or
sarb
popf
xorb
sbb
mov
stc
mov
or
out
ret
repz
xor
jg
pop
jl
inc
push
lock
std
lahf
adc
cli
cmp
test
and
pop
xor
fidivrs
xchg
mov
adc
pop
jno
gs
popf
nop
add
int3
rorb
inc
ret
xor
les
out
pop
jo
lea
mov
sti
dec
out
rol
mov
lea
xchg
outsb
scas
push
mov
mov
mov
and
push
cltd
dec
mov
sbb
pop
or
pop
rclb
je
inc
mov
stc
inc
sub
inc
pop
xor
sub
fcmove
push
dec
xor
cs
aas
rol
and
mov
movsb
sub
jns
push
or
mov
outsb
push
loopne
add
push
push
inc
arpl
filds
mov
jo
mov
inc
mov
aad
fsubrs
or
add
call
and
call
out
push
mov
and
sub
hlt
push
stos
flds
dec
push
sub
jb
add
pop
sarl
out
fistl
outsb
mul
in
sbb
mov
outsl
jno
call
mov
jb
outsb
ret
test
scas
shlb
outsb
subl
outsb
dec
mull
shl
jle
jns
bound
out
mov
addl
fwait
mov
mov
push
adc
leave
ficompl
mov
xor
mov
call
xor
inc
cmp
in
lret
mov
dec
test
jle
int
push
pop
xchg
push
jnp
fstp
leave
mov
adc
clc
nop
jne
cmpsb
loop
movl
fimuls
pushf
cmpsl
fldcw
dec
xorl
arpl
mov
mov
ret
xor
fpatan
mov
sub
pop
pop
sbb
add
push
mov
mov
xchg
inc
ret
arpl
mov
sub
adc
test
fimull
push
int3
cld
addps
dec
mov
inc
outsl
jmp
movsb
push
arpl
frstor
jp
nop
outsl
cmp
pop
lret
sti
ds
test
inc
and
pop
mov
mov
cs
sbbl
push
sub
int3
mov
aaa
shl
fdivs
inc
int3
jno
inc
mov
lahf
lahf
stos
daa
mov
mov
repnz
ret
fists
sub
sbb
sahf
hlt
mov
jbe
insb
mov
mov
repz
js
jle
stos
mov
cld
and
push
aas
xlat
xchg
into
pushf
jae
sahf
lock
inc
cmp
or
mov
sbb
xor
push
into
inc
xor
dec
imul
movsb
mov
mov
cld
or
lock
lcall
pcmpeqw
push
push
push
mov
xor
xchg
push
shrb
jmp
mov
clc
mov
jle
add
mov
mov
xlat
pop
out
dec
lret
dec
pop
addr16
sbb
sbb
ljmp
enter
out
jp
mov
ljmp
lock
mov
lods
push
sbb
pop
xchg
sbb
fcoms
sub
xchg
jo
cld
pop
mov
mov
inc
adc
lods
test
xor
sarb
add
dec
xchg
call
lcall
iret
jne
jecxz
icebp
es
stos
test
add
sahf
or
xor
fldl
test
jne
and
inc
clc
jns
clc
stc
jbe
inc
lods
mov
mov
cmpsb
or
in
out
call
push
aas
sti
pop
push
push
or
mov
lds
mov
dec
insl
loopne
inc
lods
add
cmp
dec
lret
in
mov
jne
sbb
jns
out
scas
jo
or
fisubrs
mov
stos
xchg
xor
cmp
in
pop
xorb
sahf
mov
es
std
shll
test
loope
pop
mov
mov
add
pop
mov
repnz
pop
or
add
lret
fwait
and
stos
nop
stc
push
mov
mov
stos
daa
jp
jp
outsl
xchg
pop
rclb
dec
mov
inc
inc
aas
cmpsl
in
sahf
xchg
sarb
mov
inc
push
lret
xor
jge
mov
dec
xchg
dec
cmpsl
das
clc
fwait
cmp
les
sti
pusha
arpl
pop
rcll
lret
stos
ret
xor
js
les
je
pop
test
negl
lret
sub
pop
cmp
imul
test
sbb
and
insb
mov
or
mov
sbb
arpl
stos
jecxz
sbb
cmpb
mov
mov
mov
mov
push
scas
mov
xor
stc
adc
js
sarb
push
lods
push
push
add
add
aam
dec
add
sbb
cmp
imul
sub
outsl
movsl
lods
imul
mov
inc
jp
rorb
and
mov
pop
jmp
mov
push
insl
popa
pop
in
and
pop
xor
pop
mov
xchg
cmp
inc
loop
cltd
inc
xor
inc
lahf
sbb
data16
jns
int3
mov
jns
or
push
mov
mov
adc
cmpsb
arpl
sbb
scas
mov
inc
movsb
mov
dec
adcl
pop
pextrw
pop
and
adc
jne
jo
ret
jae
aas
cwtl
mov
out
and
and
sbb
xchg
jl
pop
and
mov
frstor
in
std
nop
sbb
and
or
aas
push
std
or
lods
xor
mov
sbb
push
jp
testb
push
sbb
mul
xchg
aas
push
jge
test
sbb
addr16
inc
jg
xorb
xchg
sahf
faddl
aam
aaa
addb
iret
adc
add
xchg
sti
cltd
paddusw
aad
jo
cltd
insl
stos
fs
ljmp
repnz
inc
mov
adcl
adc
out
xchg
stos
in
jb
inc
cltd
cmp
sahf
lods
in
mov
xor
ror
xchg
and
mov
push
out
mov
shlb
push
nop
push
push
jae
enter
mov
mov
cltd
in
jecxz
daa
aas
sarl
jne
testb
add
xchg
daa
test
inc
cmc
add
dec
cli
orl
ret
fwait
clc
loopne
std
in
mov
call
mov
push
leave
bound
gs
mov
adc
and
jle
mov
adc
jbe
pop
sub
out
stc
xor
and
out
mov
xor
mov
in
mov
popf
jp
or
mov
sbb
sbb
mov
mov
mov
fmuls
push
fcmovnb
sub
fs
mov
sub
mov
xor
insb
mov
das
and
popl
pusha
dec
add
ljmp
mov
fsubrl
shrl
shl
gs
cmp
test
in
or
xchg
std
inc
jge
icebp
mov
icebp
jbe
mov
call
popf
jecxz,pt
pop
push
mov
jno
sbb
rorl
cs
push
out
das
int3
repz
mov
mov
mov
pushf
push
lods
cwtl
cmpsb
mov
pop
jmp
mov
shr
push
adc
aam
cmp
jb
cltd
pop
jl
mov
adc
cmpsb
sub
movsb
int
out
iret
fsubr
rorl
lods
or
cmc
cs
jbe
jp
xchg
push
mov
aaa
and
bound
in
xchg
and
sbb
stc
dec
push
sub
sbb
das
pop
addr16
add
pusha
mov
addr16
lahf
pop
movb
xor
lods
imul
shll
cmp
cmpb
popf
cmpsl
jnp
push
push
sbb
cld
ret
stos
push
aas
xor
jo
cs
data16
loope
xor
sbb
jp
mov
push
add
mov
andl
pop
mov
and
mov
int
xchg
lret
adc
sub
lret
dec
push
jb
inc
popf
xor
fcoms
push
daa
pushf
add
lds
pop
lahf
iret
out
aaa
add
push
mov
jne
cmp
cmpb
jmp
imul
inc
jae
test
jnp
sahf
dec
lret
or
shlb
mov
xor
and
daa
push
and
shrb
inc
adcl
add
movsb
adc
clc
mov
sbb
adc
test
adc
xchg
das
mov
add
mov
sub
mov
cmp
xchg
movsb
fistps
es
dec
mov
fcoml
mov
sub
popf
mov
mov
insl
add
sub
inc
adcb
dec
mov
das
xlat
jmp
jge
jne
je
scas
adc
sti
push
mov
out
xor
fmull
add
stc
mov
lods
fs
and
stos
popf
adc
dec
push
jo
push
push
cmp
lds
dec
add
jecxz
fisubl
sbb
mov
dec
dec
mov
lcall
sub
scas
lods
mov
fmuls
jb
je
jo
add
sarl
cs
add
mov
xchg
mov
in
cld
ss
mov
mov
leave
mov
sub
outsl
enter
dec
rcrl
fdivl
shlb
gs
pop
loopne
mov
jge
or
pop
mov
cltd
aas
cli
dec
lds
insb
jmp
in
mov
imul
cmpsb
push
loop
lods
notl
jns
push
xchg
ss
adc
mov
inc
insl
xchg
push
enter
mov
rclb
rcl
jmp
popa
cli
ds
test
call
or
mov
inc
and
mov
int3
pop
jle
nop
cmpsb
cmp
mov
fdivp
loopne
xchg
fdivrl
sbb
ret
xor
inc
clc
push
add
imul
aad
stc
dec
aad
addl
insb
dec
ds
adc
sub
or
push
xor
fistpl
mov
leave
icebp
sub
mov
mov
fsts
add
mov
or
cmc
ret
shr
jge,pn
xchg
insb
pushf
or
xchg
and
cmp
adcb
out
cmp
stos
xchg
mov
shll
mov
test
shlb
imul
add
add
cmp
popf
in
inc
sbb
dec
test
mov
pop
shrl
mov
xchg
pop
stos
rorl
jmp
add
in
lcall
fcompl
ds
xor
mov
int3
sbb
sti
push
push
fscale
jmp
xchg
js
cli
mov
iret
or
in
out
adc
sbb
int
out
jo
das
adc
popf
mov
ret
jns
dec
cmp
shr
movsl
inc
test
adc
mov
sub
dec
mov
mov
js
cmc
loope
xadd
mov
call
mov
pop
in
and
aad
mov
jb
jecxz
jecxz
inc
jnp
in
loope
pop
orl
fistps
loop
push
out
inc
loope
push
test
lods
mov
loopne
adc
popf
or
pop
push
add
inc
stos
cmpsb
adc
jns
cmc
outsl
mov
sbb
repnz
mov
ret
sub
pop
ret
sub
sub
jge
lods
stc
lret
insb
lds
jo
ljmp
outsb
sub
in
sbb
rorb
adc
repz
push
push
inc
inc
icebp
pushf
mov
push
fwait
sbb
cmp
inc
mov
adc
mov
adc
sbb
xchg
or
lds
dec
rcrl
test
fisubrs
cltd
and
imul
cmpsl
int
sti
fs
mov
dec
sub
faddl
mov
sahf
mov
pop
pop
pusha
push
adc
scas
jo
test
pop
test
xor
mov
into
insb
out
leave
stos
mov
ljmp
cwtl
xchg
mov
leave
loop
daa
push
mov
xor
inc
fdivrs
popf
nop
cli
mov
xchg
xor
sahf
xor
das
push
clc
in
push
faddl
sub
jle
sub
in
or
cwtl
orl
add
push
jns
mov
imulb
cltd
jb
push
les
std
jne
lods
jmp
and
cltd
inc
pop
xlat
inc
jl
mov
stc
mov
dec
lds
xor
or
and
enter
mov
add
aam
jne
push
outsb
js
lahf
shlb
mov
cld
mov
loop
xor
les
daa
aad
hlt
loop
or
xchg
sbb
inc
pop
fldcw
bound
jns
stos
xor
in
in
jmp
push
aad
cld
sub
pushf
inc
cmpsl
mov
gs
cmp
mov
scas
insl
outsl
push
orb
xor
mov
cmpsl
fwait
inc
lds
inc
in
in
xchg
lods
mov
nop
pop
js
push
rcl
pop
or
jnp
xchg
fmull
lock
call
ja
adc
in
shl
jo
iret
push
inc
std
cmp
add
add
add
xor
daa
iret
add
stos
or
mov
dec
xor
cmp
add
stos
and
xchg
jle
dec
mov
dec
test
shrb
and
mov
fistpll
aas
mov
jbe
jecxz
inc
repz
inc
mov
jns
push
les
mov
inc
fistps
jo
or
push
push
ret
je
pop
loope
pop
or
mov
test
xchg
add
pop
enter
sub
out
adc
adc
shrl
mov
movsb
dec
push
loope
push
inc
xor
jge
sbb
xor
jle
dec
xchg
inc
repz
mov
out
adc
push
es
lahf
test
mov
ljmp
loopne
and
ret
icebp
ds
add
mov
add
cs
fildll
sub
in
sub
push
and
lcall
ljmp
and
outsl
lahf
imul
push
dec
push
mov
call
cmp
adc
mov
inc
mov
add
push
cltd
out
ss
subb
sub
bound
mov
add
add
std
xchg
jg
hlt
cmpsl
cmp
lds
sub
cs
in
cmp
ds
cli
adc
insl
pop
cmp
inc
xchg
in
or
in
inc
in
pop
xchg
add
sti
pop
int
and
add
notb
pop
lret
cmpsl
js,pn
sub
sbb
rclb
aas
dec
cmpl
jns
out
push
lret
jmp
and
dec
lea
push
xorl
test
mov
lret
cmpsb
sub
push
dec
enter
mov
jle
adc
loope
mov
mov
and
repz
and
inc
cmc
loopne
leave
in
data16
mov
mov
lock
inc
icebp
fildll
nop
nop
ret
lds
das
jb
and
xor
insb
push
mov
mov
xor
pop
cmpsl
jmp
fwait
in
clc
or
ja
adc
add
add
add
in
loopne
movsb
adc
bound
ja
jae
and
leave
scas
insl
shrb
push
xor
lret
push
push
xchg
jbe
scas
sbb
push
cmp
scas
test
test
iret
inc
cmc
sub
pop
adc
jae
sbb
xchg
aas
push
xchg
into
ja
ss
or
arpl
dec
push
xchg
cltd
jne
adc
int
aad
repz
dec
xor
and
pop
push
jno
lea
inc
jb
or
int
sub
pop
lods
inc
roll
movsl
inc
bound
mov
sbb
sahf
into
jmp
mov
inc
pushf
adc
cmp
inc
sbb
into
push
dec
fsubs
inc
mov
and
lods
fimull
sbb
inc
or
xor
dec
cmp
dec
mov
pop
mov
xor
push
or
or
xor
sub
cli
or
nop
lcall
mov
xchg
out
stc
mov
fcomip
scas
cs
and
or
popl
xchg
push
xor
add
mov
and
movsb
les
in
jno
sbb
pop
push
dec
shl
inc
dec
inc
or
mov
mov
adcb
sahf
push
and
cmpsb
sbb
fcoms
arpl
push
xchg
xchg
bnd
and
cwtl
repnz
in
sbb
dec
inc
lahf
ud0
enter
dec
push
in
pop
cmpsl
sbb
icebp
das
mov
mov
out
push
cmp
mov
push
pop
inc
add
test
cmp
scas
jle
movsl
pop
pop
insl
jge
test
pop
or
imul
iret
sti
jnp
push
xchg
push
xchg
sbb
cwtl
and
lea
or
mov
xchg
cwtl
outsb
inc
pop
js
js
cmp
mov
int
dec
adc
mov
stos
xor
imul
ljmp
js
mov
bound
jge
jbe
fisttpll
icebp
push
dec
incl
jbe
std
cmc
adc
flds
mov
cmc
testl
bound
movsl
inc
sub
adc
das
mov
xor
and
pop
sbb
daa
pop
fs
pop
inc
sbb
mov
pop
loop
std
jne
je
xor
push
hlt
jb
scas
clc
in
jl
jle
cmp
adc
push
test
gs
pop
stc
enter
stos
add
in
lea
pop
es
mov
leave
jae
inc
test
jmp
xchg
les
dec
aas
jne
pop
push
push
stos
cmc
mov
movsb
jecxz
push
adc
je
sub
push
pop
inc
jp
adc
test
mov
sub
lock
shl
jmp
fxch
cltd
push
repnz
out
aas
mov
data16
jno
xchg
and
dec
inc
icebp
outsb
pop
shlb
dec
mov
imul
cmp
retw
mov
data16
sbb
lock
pop
lea
pop
push
push
stos
push
fmul
fwait
push
sbb
addr16
dec
inc
loope
pop
jnp
lahf
pusha
jl
arpl
jae
mov
xchg
addb
cmp
mov
call
mov
lahf
push
xlat
pop
fdivrs
xchg
xor
insl
idivb
pop
mov
cmp
sbb
movsl
sub
fnstcw
std
cmc
test
ljmp
movsl
rol
sbb
stos
lods
flds
outsb
js
mov
pop
mov
xchg
and
xchg
aaa
outsl
leave
mov
jae
rcrb
inc
rclb
in
cmp
pop
mov
sub
loopne
rcr
and
mov
fnstsw
mov
dec
gs
add
jb
mov
das
cmpsl
in
jne
xlat
mov
jle
mov
dec
lret
lea
fdivr
aas
lods
add
mov
mov
jp
xor
add
and
mov
sbb
xchg
cmovge
add
sub
xchg
aaa
xchg
add
push
fsubl
shrl
rcrl
in
push
sub
mov
pop
sub
in
push
cmp
xchg
add
xchg
add
sahf
imul
pop
sbb
data16
nop
adc
mov
pop
or
adc
pop
mov
sub
jne
push
mov
lds
jecxz
outsl
test
cmp
daa
adc
std
insb
sbb
push
cwtl
pop
push
sahf
movsl
sbb
pop
xchg
cmp
cmp
inc
or
adcb
call
lds
dec
cmpsb
xchg
inc
outsb
cmc
ret
outsl
imul
jnp
lock
mov
dec
cmp
xchg
ss
rclb
xchg
arpl
cmp
pop
mov
jae
ja
pop
mov
dec
mov
dec
mov
insl
sti
add
lods
mov
inc
sub
mov
add
dec
clc
add
jecxz
das
mov
sbb
mov
inc
sub
je
push
fistpll
jo
ds
imul
dec
lods
xchg
outsb
mov
sbb
insl
dec
xchg
addr16
pushf
and
xchg
fldcw
scas
xchg
stos
scas
pop
mov
jo
pop
and
cmp
call
fidivs
jmp
pushf
jae
xchg
or
insl
shlb
mov
pop
dec
std
dec
movl
ret
mov
sub
addr16
fsubs
in
mov
pop
das
fwait
jae
stos
sub
shl
fninit
addr16
inc
xchg
cli
add
xchg
jae
lods
sub
ss
jmp
or
movb
jp
jbe
xchg
jno
pop
iret
jp
fstl
push
ret
pop
xor
test
sbb
lds
rorb
call
sbb
mov
stc
sub
sub
mov
dec
and
andb
xchg
popa
mov
xchg
xchg
test
push
filds
lea
fiaddl
inc
cmpsb
out
aam
fisubrl
mov
xlat
cld
fisubs
out
aas
dec
xor
xchg
lret
xchg
sbb
sbbb
xchg
aad
shl
icebp
test
rcll
push
jmp
jbe
jae
fstl
mov
add
push
mov
mov
in
insl
test
daa
and
mov
lds
gs
int
mov
int3
pop
test
jle
add
pop
mov
and
or
xchg
cmp
jl
leave
lcall
jae
out
add
les
fidivs
sti
jno
cli
inc
test
cmp
add
test
adc
fdivrs
xchg
and
mov
lahf
sub
test
daa
popf
jnp
mov
fimull
leave
addr16
pop
dec
cwtl
xchg
js
testl
cltd
cltd
jno
test
jp
scas
in
push
mov
test
jo
mov
add
faddl
test
jecxz
test
stos
lods
inc
or
popa
mov
add
dec
es
ljmp
movl
mov
mov
mov
mov
cmp
sub
inc
rol
mov
cmpsb
pusha
mov
ds
add
movsb
add
addl
mov
roll
popf
outsl
rorb
adc
mov
jnp
mov
dec
mov
pop
frstor
fildll
xchg
push
inc
xlat
adc
mov
push
fcomps
mov
cmp
sbb
pop
xor
clc
xor
sub
jo
and
movsl
or
pop
sub
sbb
movsb
addr16
pop
mov
pop
int
pop
sub
mov
jb
pushw
dec
outsl
cwtl
les
and
int3
mov
sbb
subb
inc
imul
mov
das
pop
pop
jae
sub
ret
mov
add
xchg
filds
test
int3
sbb
rcrl
mov
or
xlat
xor
int3
pop
mov
iret
repz
test
sahf
add
inc
dec
add
outsb
mov
mov
sub
xor
xchg
adc
lock
test
cmp
and
add
xchg
add
pop
adc
push
push
fimuls
fidivrs
pop
es
lock
out
vpcmpeqb
dec
aas
xor
outsb
imul
xchg
xchg
ja
int3
jge
cmc
orb
dec
jo
ucomiss
lcall
or
cld
pmullw
test
jne
sub
stc
mov
insl
and
mov
push
fstpt
bound
scas
jbe
test
jg
pop
mov
push
sub
mov
or
sub
sar
add
fisttpl
leave
pop
lock
sbb
aas
pop
cltd
gs
ja
or
adc
xor
cmp
cmp
push
or
pop
mov
adc
test
decb
sub
push
mov
xchg
sub
iret
cli
push
and
cmp
pop
xorl
out
add
mov
inc
shll
ss
push
push
test
jl
clc
push
sub
jno
push
cmp
pop
negb
xchg
push
cmp
addr16
jecxz
mov
jle
inc
and
outsb
loop
lock
cli
out
notl
xchg
or
and
fisubl
sbb
lods
xor
xchg
mov
jmp
or
mov
adc
dec
or
nop
fadds
pop
and
bound
pop
icebp
jo
in
fstps
push
inc
cmp
mov
les
inc
push
dec
pop
sub
pop
fidivrl
ret
adc
jb
in
loope
stc
add
mov
outsb
bound
fadds
icebp
inc
test
dec
popa
js
xchg
ds
imul
cltd
pop
xchg
stos
sbb
enter
xor
stc
fcomps
loope
cmc
cmpsl
xor
xchg
push
jmp
lret
stos
push
fwait
gs
mov
mov
stos
mov
sbb
xor
imul
shlb
arpl
test
mov
dec
xchg
stc
jle
jae
mov
and
frstor
cmp
mov
scas
cmp
fsubl
pop
pushf
adc
dec
pop
push
xchg
jae
add
fists
icebp
cmpsb
pop
gs
pop
jnp
jnp
add
xlat
jo
jbe
mov
divl
and
jb
push
movsl
xchg
sbb
shlb
pop
mov
mov
jo
xor
xlat
rorb
pop
xor
lods
cwtl
lods
sub
das
dec
aam
dec
add
xchg
jle
mov
insb
int
jl
rclw
mov
push
out
sbb
sbb
push
cwtl
fs
mov
negb
je
push
sub
xchg
push
adc
daa
gs
rorl
cld
adc
push
les
or
dec
test
mov
cltd
data16
mov
mov
ret
adc
pop
das
xchg
lock
pop
cld
sub
add
imull
adc
cmp
orl
fnstcw
fisttpl
pxor
inc
mov
xchg
cltd
outsl
aam
cmp
mov
fsubr
add
mov
es
les
pop
sub
shrl
mov
dec
out
pop
inc
and
pop
roll
pop
dec
loope
mov
loop
loope
add
pop
call
lds
and
inc
rorl
pop
sbb
adc
sub
pop
les
int3
jo
sbb
xchg
and
cmp
hlt
jp
mov
add
add
inc
jp
daa
xor
int
test
sahf
mov
mov
dec
jae
int
cmp
cmp
bound
pop
lods
outsl
jecxz
shll
fldt
jns
add
enter
or
lea
test
jnp
mov
in
mov
cs
orb
adcl
repz
cmpsb
jg
pop
jno
js
push
test
mov
xorl
inc
xchg
imul
fisubrs
sbb
cs
push
pop
push
jbe
xchg
sub
dec
into
mov
adc
inc
cli
sub
stos
xor
push
pop
sarl
inc
pushf
xor
int3
jmp
shr
inc
add
lds
push
jg
data16
sub
hlt
call
mov
and
out
fldenv
ss
sarb
and
pop
loope
aam
sub
pop
inc
loopne
rol
and
bound
push
movl
mov
fcomps
das
jno
inc
stos
xor
jl
mull
pusha
orl
icebp
xchg
push
mov
in
xchg
divb
lret
add
adc
nop
imul
stos
inc
int3
mov
jecxz
cmp
sti
ja
ss
mov
pop
xlat
dec
mov
cmp
es
aaa
shrl
iret
jbe
add
dec
sbbb
stc
cmp
xchg
cwtl
or
adc
lret
jp
xor
mov
loope
ds
addr16
cwtl
loopne
lret
cwtl
sub
lock
insl
mov
fisubs
mov
cmp
push
test
push
push
enter
inc
orb
test
xlat
add
pop
loope
ljmp
cltd
push
fcomps
mov
lea
xor
sbb
add
pop
call
in
aaa
inc
ljmp
call
pop
out
hlt
jb
mov
inc
scas
out
sbb
repz
cmp
sub
dec
pop
into
iret
testl
imul
out
xor
xor
push
sub
mov
lahf
mov
jbe
jmp
addl
pushf
sub
test
mov
and
out
loopne
mov
push
sar
xchg
mov
or
mov
imul
fs
adc
aam
loop
stc
in
or
stc
or
jg
ficompl
jge
aas
fidivs
scas
pop
dec
mov
inc
adc
das
xor
fmuls
cmpsl
addr16
js
pushf
push
hlt
sbb
stos
jg
cmp
dec
adc
adc
add
adc
jmp
lods
loop
and
pop
adc
cmp
ljmp
dec
shrl
adc
or
ljmp
xorb
mov
xor
int
inc
mov
shll
inc
dec
sbb
rcrb
jb
or
lret
add
adc
test
mov
cltd
cmpsb
add
nop
bound
lret
mulb
in
ljmp
shrb
cmc
clc
and
mov
int
sbb
leave
adc
cmpsb
es
add
or
jecxz
mov
push
mov
mov
adc
addl
xchg
push
imul
inc
push
xchg
test
es
xor
push
xchg
mov
insl
lds
push
push
sbb
jp
dec
inc
sub
outsb
mov
pop
lods
dec
lret
xchg
decl
push
and
cs
add
xor
lret
jbe
pop
ja,pn
xor
dec
pop
push
jne
and
push
inc
es
outsb
mov
lds
sbb
setne
mov
cmp
aam
sahf
or
loope
add
adc
in
mov
xlat
jp
je
outsl
and
jp
sub
or
mov
add
jmp
arpl
aad
inc
jmp
test
mov
stc
dec
adc
cmp
push
xchg
movsl
lea
pop
pop
lcall
jnp
bound
jge
hlt
and
jb,pn
shrl
jge
and
ficoms
push
popa
inc
jnp
jmp
test
mov
xlat
mov
mov
sbb
mov
mov
aas
xor
mov
leave
mov
dec
outsl
sbb
ret
fs
mov
xor
fiadds
sbb
adc
lahf
out
imul
pop
cli
xor
ret
rol
add
fadds
inc
and
loopne
xchg
xchg
nop
test
jg
mov
lock
lea
inc
pusha
pop
jge
ret
fcmovne
out
arpl
das
xchg
mov
imul
scas
mov
push
repnz
and
movsb
dec
movsb
mov
daa
adc
aam
mov
addb
in
out
cmp
repz
into
and
sbb
std
scas
and
in
aad
dec
subl
testl
inc
mov
dec
aam
mov
sub
test
int3
mov
mov
add
lahf
push
subb
or
pop
adcb
jg
adcl
sub
fimuls
add
xchg
push
scas
pop
shll
inc
jnp
xchg
out
mov
and
add
fdivs
pop
xor
test
sahf
sbb
mov
ja
ret
ljmp
sub
out
sahf
stos
adc
into
fisubrs
test
or
mov
cmpsb
xchg
fmull
cmp
xchg
call
push
insb
push
adcl
adc
sbbl
mov
xorl
orl
jl
fstpt
ret
xor
xchg
dec
das
lods
xchg
scas
inc
popa
push
dec
pop
lcall
xchg
cmc
lret
sbb
xchg
ret
ds
je
ss
ss
loopne
xor
push
mov
arpl
lods
sub
lods
and
xor
jb
and
fstpl
pop
ss
es
jne
data16
in
ret
and
aad
loop
sub
mov
arpl
cmpsb
sub
out
sub
mov
mov
pop
pop
xchg
xor
mov
repz
push
sti
pusha
xchg
jp
mov
xchg
adc
cmpsb
mov
lods
int3
pop
inc
nop
push
push
jns
dec
daa
mov
mov
ds
mov
or
das
xlat
adc
jb
fdivrs
sbbb
sahf
enter
lret
sti
int
mov
mov
mov
mov
push
decb
xchg
sub
xchg
push
or
outsb
jbe
outsl
incb
adc
into
add
sbb
sbb
outsl
pop
xor
fstl
or
icebp
cs
test
mov
pop
mov
jne
xchg
adcl
sbb
orl
xchg
cwtl
repnz
mov
inc
outsl
pop
xchg
xchg
addb
into
mov
push
insb
gs
mov
cmc
mov
loopne
outsl
pop
and
jp
daa
push
pop
cwtl
add
xor
out
test
cwtl
cld
sub
dec
jb
cli
aad
stos
add
sahf
push
add
in
in
mov
or
inc
pop
jae
repz
jb
aaa
mov
testl
inc
fwait
pusha
addr16
mov
cld
aad
pop
dec
push
inc
hlt
push
loop
pushf
sbb
insb
inc
mov
jae
inc
out
sub
mov
in
fidivrl
add
lret
sub
sbb
test
cmp
out
mov
inc
sub
cld
pop
mov
outsb
fistpl
loop
stos
or
addr16
pop
push
mov
jbe
jmp
dec
lea
xchg
jnp
mov
insb
insl
mov
xor
test
call
xchg
and
or
pop
movsl
jp
cmp
xor
fcoms
int3
sbb
pop
jecxz
pop
dec
and
mov
in
pmuludq
jg
inc
call
sbb
int3
mov
ds
sti
dec
mov
out
xchg
popf
roll
mov
std
in
in
add
inc
in
stos
sahf
test
inc
xchg
pop
push
clc
aas
test
inc
adc
sbb
pop
jae
addl
scas
xchg
sbb
xchg
mov
xor
mov
sub
js
xchg
xchg
sbbl
mov
sub
outsl
stos
es
and
orb
subl
xor
cmp
or
push
jge
call
pop
mov
in
sbb
mov
icebp
push
sub
imul
leave
mov
imul
not
and
xchg
pop
jno
mov
rcrb
inc
leave
add
cmp
add
cmpsb
adc
jge
or
xchg
add
cwtl
loop
push
in
out
rcr
mov
mov
or
xor
shlb
push
data16
jmp
les
sarl
in
or
cmp
ljmp
cli
mov
test
stos
xor
imul
sbb
push
sub
push
jbe
fdivrs
hlt
add
mov
mov
cmp
subl
es
jge
fnsave
rcrl
stos
je
xorb
jge
push
insb
jne
xchg
jle
jb
ret
movsb
frstor
add
xchg
xorl
movsb
imul
inc
loopne
inc
sarb
inc
push
dec
xchg
sub
adc
rol
adc
loope
or
pushf
xor
test
out
cmp
push
inc
pop
sahf
jo
pop
mov
push
add
stos
push
insb
adc
les
ss
mov
adc
imul
imul
inc
sub
cli
in
mov
mov
xor
or
cmp
xor
insl
sbb
xor
es
call
clc
pop
xor
rcrl
mov
rorl
test
jbe
aas
dec
test
mov
or
scas
scas
mov
push
aaa
pop
fisubrs
lods
or
dec
lock
sub
jb
roll
movsb
fsubrp
in
mov
and
cmp
sahf
sbb
mov
outsl
adc
jnp
jle
push
in
rcr
mov
cmp
xor
inc
xchg
loopne
xchg
insb
dec
jp
cmp
stc
jecxz
lret
mov
xchg
movl
mov
test
outsb
pop
mov
cwtl
push
stos
sub
jmp
add
mov
imul
fdivl
mov
sub
daa
push
xor
cmc
js
xchg
mov
inc
lret
xor
jb
outsl
fnsave
fsubs
xor
sbb
xor
fnstcw
push
xlat
repz
mov
sbb
jne
add
push
adcb
jae
xchg
sbb
push
dec
repz
stos
int3
int
mov
mov
mov
in
jecxz
hlt
adc
mov
mov
fs
arpl
in
ja
out
loope
lds
rcll
das
sahf
and
dec
je
loop
rclb
hlt
mov
mov
inc
shrl
iret
stc
shll
ret
adcl
mov
push
rorb
dec
sbb
sub
push
shr
rcrb
in
es
loope
mov
std
les
xchg
cmpsl
loopne
fldcw
jo
stos
aaa
sbbb
xor
aaa
inc
sbb
and
decl
or
lahf
mov
push
cmpsb
mov
push
add
mov
sbb
mov
sarl
xorl
and
fwait
loopne
aaa
js
out
adc
vpaddb
call
in
jmp
and
test
push
inc
in
decb
cwtl
mov
fadds
xchg
fwait
outsl
adc
xchg
jmp
mov
in
mov
push
sub
xchg
sahf
or
adc
xor
ret
imul
dec
adc
les
popf
ret
dec
mov
sbb
sub
and
sub
jmp
dec
fidivs
mov
lock
add
or
imulb
outsb
push
ljmp
sbb
cmp
push
xchg
cmp
or
cli
inc
fstpl
stc
add
and
dec
scas
test
scas
and
mov
and
cmpsb
loopne
pop
or
int3
lret
clc
mov
sbb
lahf
mov
loop
loope
sub
mov
inc
adc
out
add
mov
repz
pushf
nop
xchg
mov
sarb
mov
cmc
das
dec
mov
call
out
ret
xchg
cmpsl
cmpsl
sbb
test
js
int
aas
loopne
or
pop
pop
sbb
scas
sub
vorps
mov
mov
push
leave
push
popl
push
adc
sub
push
loope
decl
repnz
sti
xor
push
lahf
sahf
mov
add
enter
jge
cmovo
aaa
mov
aas
cmp
push
xchg
inc
mov
repz
in
or
inc
pop
cli
add
imul
loopne
mov
movsl
shrb
btcl
hlt
mov
enter
jns
fdivrs
add
pusha
sub
fsts
mov
add
bnd
push
mov
push
xchg
push
jbe
and
das
push
xchg
xchg
fs
push
jg
ret
pop
inc
pop
gs
sub
movsl
jge
dec
push
mov
lods
cs
push
stos
pop
mov
aas
cmpsl
sub
cs
adc
mov
push
mov
das
push
imul
or
popa
inc
xchg
jle
push
pop
pop
insb
pop
or
and
adc
lret
sub
pusha
sbb
sub
aaa
aaa
insl
ja
jbe
jmp
iret
push
in
jp
arpl
pop
mov
mov
sub
pop
fiaddl
fs
dec
jae
ja
aas
pop
imul
sbb
mov
adc
sub
mov
movsl
jmp
mul
cld
mov
sbb
fs
mov
xor
shll
push
cwtl
dec
stos
out
mov
addr16
sbb
and
aaa
movsb
add
push
dec
pop
lock
adc
lods
aam
mov
das
fs
lahf
inc
mov
inc
mov
dec
movsl
inc
cmp
or
push
xchg
xchg
shr
push
mov
out
ds
adc
jl
cmpsb
push
jp
dec
jae
js
mov
dec
call
inc
xor
repnz
cmpsb
aaa
ret
into
pop
out
iret
dec
cltd
cmp
mov
je
movlps
in
mov
fldenv
inc
pop
sbb
daa
jmp
repnz
cmp
aas
shrb
add
adc
and
sahf
or
xchg
adc
in
inc
cwtl
cmp
sub
push
inc
xor
fs
loope
sub
int3
mov
scas
popf
pusha
dec
fs
push
outsb
push
orb
leave
push
pop
std
mov
pop
cmp
mov
leave
pop
out
inc
add
scas
in
int
orl
stos
stos
sbbl
ljmp
mov
je
jbe
sub
push
lock
mov
and
iret
xlat
sbb
xchg
jno
or
jno
std
lret
mov
jb
arpl
cwtl
xchg
les
lods
movsb
and
jb
xchg
inc
add
and
push
push
adc
pushf
aas
je
mov
lds
mov
mov
pop
outsb
stc
push
mov
mov
jl
inc
lods
xlat
stos
repnz
insb
pushf
dec
into
dec
push
sbb
ja
mov
pop
lret
loopne
push
stos
dec
add
adc
xor
adc
add
and
repz
js
xchg
iret
loop
dec
cmp
imul
enter
pop
adc
pop
je
int
or
data16
fidivl
icebp
mov
cmp
inc
cs
adc
cmpb
push
jne
lcall
adc
xchg
pop
pop
mov
movsl
add
add
testb
gs
test
xchg
enter
les
xlat
fnstenv
lock
inc
sbb
repz
cmp
call
outsb
xchg
xorl
insb
cs
mov
push
or
clc
pop
repnz
sbbl
dec
fsin
xchg
mov
cmc
jo
imul
cwtl
leave
ret
mov
pop
fisttpl
pop
daa
je
mov
xor
test
movb
dec
jmp
pop
and
fisubl
insb
leave
dec
aam
xor
mov
inc
test
or
jl
xor
mov
imul
ja
xchg
aaa
inc
jecxz
push
cmp
dec
in
aaa
jl
nop
cmp
and
pop
out
sbbb
sub
sti
cld
mov
ja
xor
lret
push
cltd
ds
and
pop
cwtl
arpl
pop
out
jle
pop
dec
pop
stos
movsb
hlt
and
sub
cld
xchg
push
mov
jae
out
idiv
lea
inc
subb
mov
nop
or
mov
out
xchg
jle
test
or
mov
mov
push
mov
sbb
pop
cmp
xchg
inc
pop
mov
icebp
xchg
push
xchg
popf
xchg
popa
and
fnsave
adc
cltd
mov
clc
jp
jecxz
aas
adc
adc
jp
out
fs
aad
cmp
pusha
and
dec
mov
jae
jbe
and
xchg
stc
orb
cmp
mov
mov
lock
cmpsb
call
xchg
xchg
inc
pop
adc
out
test
scas
rcl
jmp
add
add
dec
push
mov
frstor
daa
xchg
movsb
ret
xor
jno
jns
mov
add
or
or
shrl
xor
outsl
or
outsb
lret
cltd
insb
shlb
inc
push
dec
bound
shll
dec
lods
and
fstl
rolb
mov
sarl
lea
stos
ret
jmp
jl
leave
sbb
xchg
pop
lret
popa
mov
rcrb
je
rol
scas
sub
scas
std
cltd
bound
sub
lock
adc
enter
shll
or
jne
jbe
pop
mov
xchg
shrb
adc
jno
and
push
or
in
add
jmp
pop
push
bound
int3
mov
setp
sbb
xor
int
sti
add
icebp
add
in
or
or
cmp
inc
sahf
push
adc
fstl
mov
jmp
and
xor
mov
sbbb
outsl
mov
dec
rcr
out
lahf
sbb
mov
and
adc
sbb
cmp
mov
data16
xor
cltd
dec
in
sub
pop
fldt
in
mov
adc
testl
add
mov
inc
mov
inc
sahf
test
outsb
push
rcrl
cmp
mov
outsl
jmp
add
push
jp
push
ret
jp
pop
into
pop
out
pop
xchg
ret
sti
mov
loope
or
imulb
sbb
out
xor
inc
fildl
cmc
jmp
inc
mov
sub
jle
sub
out
fs
insb
testl
mov
jae
out
inc
cmp
adc
and
or
js
mov
in
insb
pop
out
in
inc
mov
jb
mov
mov
xchg
stc
or
lea
enter
ja
movsb
fs
lock
lds
sub
pop
je
and
push
clc
inc
rolb
hlt
cmc
jbe
movsl
idivl
or
je
outsb
inc
mov
loope
xchg
cld
shl
pop
jbe
je
mov
jg
mov
push
out
push
mov
cmp
stos
adc
sub
arpl
mov
adc
mov
jno
pop
loope
aad
data16
sbb
cli
loope
lahf
lahf
pop
hlt
mov
loop
cs
sti
mov
push
jl
push
sbb
mov
cmp
push
ljmp
jo
ljmp
icebp
ds
xchg
ds
push
loope
inc
mov
stos
pop
lods
mov
pop
sti
jecxz
ret
dec
dec
adc
push
cmc
aam
outsl
jno
loop
test
mov
imul
xchg
enter
mov
and
std
xchg
add
aam
pop
stc
mov
adc
add
test
jmp
aam
jae
fnstenv
ret
imul
test
sub
popl
loop
dec
fdivl
mov
inc
je
mov
push
outsl
push
cmp
xlat
and
fidivrl
pushf
ds
jp
jg
in
mov
xor
sbb
aad
leave
aaa
mov
or
mov
inc
pop
mov
fisubrs
leave
mov
pop
popf
sub
xor
push
xchg
xchg
cs
sub
mov
xor
inc
cmp
inc
pop
jns
and
addl
mov
ret
add
push
fucomp
fucom
push
addr16
insb
mov
or
ret
fwait
sbb
addr16
es
cs
inc
bound
dec
iret
int3
ret
dec
mov
sbb
inc
jb
clc
push
rclb
mov
or
adc
mov
inc
dec
or
cli
or
shll
xor
pushl
cmp
and
in
cmp
out
push
or
xor
mov
sahf
dec
iret
popf
cmp
cmp
adc
cmpsl
int
clc
ljmp
cs
je
jp
cmpsb
aam
test
and
repz
adc
and
lods
lea
inc
jg
stc
repnz
jnp
mov
movsb
fadd
pop
jnp
push
fs
insb
inc
bound
jns
sub
pusha
adc
mov
mov
imul
sti
les
mov
mov
dec
dec
jp
push
out
jp
ret
add
mov
das
hlt
lods
scas
inc
mov
push
popf
xchg
jle
mov
fistl
pop
clc
push
ljmp
es
adc
in
adc
cwtl
push
int
mov
not
fucomp
jl
cwtl
in
pop
or
lcall
nop
xchg
cmp
sbb
mov
inc
das
std
fmuls
sbb
jb
fnstcw
adc
xor
into
ja
xchg
adc
loope
flds
enter
or
sub
mov
outsb
adc
outsb
add
mov
ficoms
rol
xor
jno
imul
test
addr16
ds
iret
lcall
pop
pop
dec
popa
inc
js
fsubs
mov
or
cmp
pop
pop
pop
or
lea
sbb
push
stc
push
repnz
xor
fnstcw
fcomi
loop
inc
je
adc
int3
loope
pusha
inc
sub
or
adc
xchg
xchg
nop
add
or
test
sub
aad
mov
pop
inc
in
mov
xchg
xor
xchg
dec
dec
shll
xor
nop
out
inc
xor
inc
ljmp
jno
xchg
dec
pop
ret
out
sub
test
pusha
bound
roll
mov
pushf
outsb
xchg
pop
ss
push
jle
mov
fmulp
lret
adc
loope
jp
adc
pop
xchg
pop
jns
test
xlat
lds
sbb
ret
push
push
sub
stos
shrb
int
sub
cmp
xor
inc
xchg
add
imul
jmp
fidivrl
mov
or
pusha
dec
sub
mov
in
mov
adc
sarb
inc
sub
in
mov
das
xor
mov
mov
mov
outsb
loop
inc
mov
pusha
cmp
jecxz
aam
jmp
xor
xor
pop
mov
inc
push
cmp
into
sbb
sub
mov
adc
jge
mov
daa
mov
xor
cmp
addr16
and
subb
fisubrs
fnop
mov
cmp
js
jg
jp
add
mov
cmp
and
pop
arpl
mov
or
jp
push
mov
mov
test
xor
arpl
test
cmp
mov
scas
cmp
lahf
xchg
pushf
or
out
lock
adc
or
add
andl
sub
scas
fidivrs
push
sub
aas
lock
mov
lret
sbb
ret
sar
pusha
pop
scas
dec
add
dec
xor
xor
mov
mov
pop
sub
arpl
mov
std
fisttpll
rol
push
mov
mov
mov
dec
movsl
mov
push
pslld
imul
cmc
out
adc
inc
xchg
cmp
mov
mov
dec
mov
test
lgs
push
xor
adc
cwtl
sub
push
popa
adc
fsubl
add
lcall
xchg
jle
and
inc
adc
mov
sbb
sub
mov
mov
jmp
or
fwait
gs
adc
out
scas
pop
faddl
xchg
dec
cmp
mov
mov
daa
jnp
outsl
sbb
repz
aad
adc
sub
adc
rcl
lock
cmp
pusha
dec
fiaddl
shlb
lea
sub
xchg
or
mov
fwait
pop
sbb
xchg
lret
jmp
cmp
and
std
push
idivb
pushf
push
jp
mov
lock
inc
fbstp
stos
sub
push
mov
into
cmp
cltd
mov
jmp
fldl
or
fwait
add
lea
cmp
pop
ret
fdivrl
jbe
fs
cmpb
push
in
sub
stos
cmp
mov
std
sar
push
bound
xchg
jns
pop
test
push
jbe
lea
scas
call
xchg
push
aad
int
imul
fiaddl
jnp
repz
sarb
cmpsl
xchg
xchg
fcmovnbe
cltd
cmp
pop
lret
mov
mov
sub
push
pop
out
mov
ss
dec
xlat
sub
pushf
scas
mov
pop
loop
ret
xor
adc
movsl
push
mov
or
cmp
das
leave
xor
pop
in
inc
xor
push
pop
fdivrs
out
jbe
xor
incl
push
aas
or
ss
sub
or
clc
lret
sub
xor
push
outsl
lea
data16
into
sub
int
dec
lock
popf
mov
ss
and
cmpsl
push
mov
jmp
clc
test
pop
pop
es
push
dec
cmc
fistpll
fcmovbe
push
fists
pop
outsb
scas
rcrb
push
stos
addr16
push
sbb
test
divl
cld
pop
imul
push
jp
mov
sbb
jmp
mov
repz
js
mov
dec
jl
lea
add
xor
lods
jnp
ret
outsl
xchg
jb
jno
test
test
jp
and
sbb
sbb
add
andl
add
dec
add
push
mov
inc
out
pop
pop
cmp
mov
sbb
ss
and
es
jge
mov
sbb
nop
xchg
les
and
cmpsb
das
lods
rcrl
mov
inc
mov
addr16
push
push
jp
lods
lds
push
sub
push
dec
adc
mov
mov
jbe
lods
mov
sub
popf
ret
push
loop
inc
das
mov
add
cmp
sbb
js
xchg
mov
or
jmp
popa
es
enter
scas
xchg
mov
movsl
in
rclb
inc
ja
and
add
cmp
cmp
and
and
ja
or
mov
fwait
sbb
dec
cmpsl
jge
push
xor
sub
jge
xor
fisttpl
shl
xchg
mov
in
push
outsl
push
into
and
insl
iret
dec
fwait
push
pop
divb
lret
mov
divl
push
pop
insl
loopne
cmp
or
daa
scas
cmpsl
xor
js
pop
in
add
push
fdivrl
push
jbe
jnp
call
sub
push
xchg
sub
ds
xor
dec
pusha
mov
push
outsl
cltd
enter
loop
mov
adc
push
mov
clc
mov
add
sub
dec
push
das
imul
mov
mov
mov
fmul
inc
pop
adc
add
nop
add
cmpsl
icebp
push
cmp
inc
clc
pushf
test
aaa
and
cld
insl
mov
movsl
push
testb
xchg
mov
xchg
stos
int
and
mov
bound
lret
inc
push
arpl
outsb
xor
adc
addr16
lods
mov
xchg
sbb
and
fs
mov
sbb
sub
in
pop
popa
rclb
push
jp
enter
xlat
mov
shl
rclb
or
lcall
inc
popf
je
inc
cwtl
loope
xor
aas
mov
call
mov
push
into
clc
loop
or
lods
fildll
mov
ret
scas
dec
pop
test
inc
jns
sub
repnz
mov
es
sbb
call
mov
fildll
dec
push
inc
inc
test
lock
lret
fists
xor
push
clc
idiv
add
or
ss
dec
das
in
loope
arpl
cli
cmpsl
fidivrl
mov
xor
sub
ret
cmp
pusha
xor
shlb
and
jmp
dec
lahf
cmp
mov
ret
ss
pop
sbb
scas
aaa
add
lods
jns
mov
dec
daa
mov
loopne
cld
mov
mov
mov
hlt
pushl
xor
mov
jb
mov
inc
push
shrl
je
mov
pop
ret
add
cltd
xchg
clc
or
insl
das
mov
sarb
leave
mov
loopne
lahf
jecxz
pop
pop
push
inc
sbb
dec
int3
je
addr16
adc
pop
repnz
dec
adc
jg
add
imul
or
hlt
test
jnp
and
jns
sub
out
lret
cmp
pop
mov
and
sub
jae
pushf
push
into
roll
mov
outsb
sbbl
scas
aas
leave
out
jno
sbb
dec
xlat
rol
sbb
bound
push
inc
adc
pop
mov
and
cmp
cmp
mov
fs
insl
xchg
or
cs
inc
stc
test
jns
xlat
sbb
mov
jns
fdivrs
jae
mov
adc
cs
int3
hlt
add
cmp
mov
dec
fisubrl
and
call
push
fisubs
insl
mov
jl
lahf
jb
adc
fstpt
mull
adc
hlt
xchg
add
daa
cmpb
adc
xchg
mov
jbe
add
dec
popf
add
repnz
cmp
adc
add
lods
mov
cmc
dec
dec
roll
mov
xlat
mov
in
jns
adc
dec
mov
xchg
pop
add
cmp
add
adc
hlt
cmp
adc
in
adc
andl
pop
repnz
jg
adc
and
mov
sbb
push
popa
paddb
andl
mov
jnp
out
add
jmp
leave
push
lea
sti
pop
aas
inc
xchg
cmp
std
fidivl
xchg
mov
leave
jbe
ljmp
dec
mul
pusha
pop
les
ret
cmpsl
xchg
mov
mov
mov
in
pop
mov
movsb
aad
orl
lock
adc
sbb
sbb
popa
aad
cmp
jnp
test
fisttpll
lcall
std
lods
aad
movsl
out
cmp
testl
ret
jge
pop
mov
dec
xchg
je
lods
pop
push
stos
or
into
in
clc
adc
pop
cwtl
mov
jl
xor
lods
fisttps
test
xor
aad
or
cwtl
push
repz
rcrb
jge
xor
lods
push
ds
cld
movsb
pop
aaa
aaa
dec
int3
out
daa
and
mov
out
mov
test
lods
sbb
and
push
mov
push
mov
cmpsl
inc
inc
cmp
jl
jmp
in
inc
mov
shr
jge
adc
mov
shrl
popf
and
out
cmp
sub
jb
xor
adc
aad
in
dec
cmc
decl
push
push
fidivrl
addb
push
and
xchg
cmp
sub
in
pop
stc
or
addr16
fists
loope
add
lahf
cltd
aas
xorl
sarl
fidivs
out
clc
fwait
cli
mov
and
adc
dec
add
xorb
sbbb
sbb
mov
fsubs
adc
push
mov
shlb
jo
pushf
popa
out
mov
shlb
adc
jns
cld
mov
out
add
arpl
rorl
pop
clc
call
cli
mov
sti
nopl
xor
push
mov
outsl
xchg
mov
out
push
sub
pop
add
stc
popa
gs
jae
inc
or
cli
daa
push
xchg
mov
mov
jnp
push
fimull
pop
pop
lds
out
dec
test
jae
out
push
rcll
lds
es
fst
shrl
sbb
jo
test
stos
adc
or
nop
mov
enter
adc
std
pop
sbb
lods
dec
insb
movb
jg
ror
test
jbe
cli
fstps
xchg
ljmp
loop
stc
pop
push
loopne
out
and
mov
stc
dec
jbe
cmp
mov
lock
xchg
and
gs
mov
pushf
shlb
mov
data16
je
inc
adc
jge
mov
dec
mov
sub
loope
loop
mov
jo
hlt
fs
xor
mov
shll
insb
xlat
subb
enter
pop
imul
cmpsb
mov
mov
add
jge
add
andb
sbb
jno
adc
jae
pop
dec
imull
lcall
push
cwtl
pop
mov
enter
mov
out
cmp
mov
gs
sub
or
ds
fsubrl
add
adc
outsl
sarl
std
or
xchg
std
pmuludq
fstps
xor
bound
jl
std
mov
lea
negb
sub
mov
mov
dec
mov
or
lahf
and
out
adc
aad
mov
fnsave
jmp
jp
pop
mov
jecxz
cli
pop
lcall
cwtl
sbbb
loop
dec
cmc
mov
sbb
mov
mov
mov
jno
roll
jecxz
test
jecxz
mov
sti
dec
sbb
sti
cld
push
sub
and
cmc
jmp
mov
inc
and
lret
sbb
lods
dec
inc
sti
jmp
add
sub
add
int3
push
pop
cwtl
xchg
lods
je
scas
push
std
cmp
mov
imul
or
and
dec
subl
stc
imul
es
sahf
repz
fbstp
fwait
in
loope
popf
aas
daa
jnp
std
loop
rorl
pop
sbb
mov
imulb
sub
int3
xchg
les
mov
sub
add
pop
sbb
or
clc
or
jae
xchg
dec
icebp
jb
test
jp
ja
mov
lea
jnp
push
jae
cld
fisttpl
jno
test
fcompl
repz
sub
mov
inc
sbb
inc
je
cmc
or
pop
fistl
movsl
jno
add
cmpsl
int
gs
push
iret
sub
cmp
scas
arpl
cli
out
out
pop
xor
test
jl
push
cld
je
and
daa
jecxz
lds
sbb
imul
adc
mov
pop
xchg
fcos
mov
repnz
mov
cmp
xchg
push
hlt
leave
outsl
push
fisubs
pushf
cwtl
decl
mov
repnz
lds
cmp
dec
sbb
bound
mov
dec
out
and
outsb
aaa
in
jns
adc
push
push
adc
hlt
or
movsb
ficomps
cli
ss
imulb
xchg
stc
adc
cltd
adc
inc
or
adc
fdivrl
out
leave
cmp
rcll
push
dec
xor
fwait
imul
test
pop
mov
mov
gs
enter
sub
loope
mov
subl
outsl
sbb
adc
aas
or
dec
loopne
pop
xor
lret
and
add
xchg
aam
push
es
dec
data16
sub
jo
cld
lret
adc
xlat
lock
push
fnstenv
inc
xchg
adc
push
ja
jno
dec
es
repz
das
lret
jecxz
mov
cmp
movsl
les
lods
or
aaa
in
aaa
enter
jle
sub
xchg
mov
push
stos
and
sub
pop
andb
je
jle
inc
sub
in
movsb
icebp
iret
adc
nop
aad
sbb
clc
mov
jno
add
fcomps
or
push
fisubrl
or
enter
dec
and
gs
std
xchg
imulb
sub
push
or
out
xchg
ror
pushf
pop
insb
jne
or
dec
loopne
mov
inc
iret
iret
loopew
test
test
xor
inc
sub
jle
pop
or
shld
xchg
cmpsl
or
inc
pop
mov
mov
xor
jmp
dec
pop
mov
jmp
cmc
bound
mov
out
test
cmp
push
inc
in
and
or
lds
lret
pop
xor
lea
push
jecxz
test
mov
and
lret
cmpsb
mov
xchg
cmp
push
shrb
lcall
xchg
jb
scas
imul
test
mov
shl
out
push
and
lds
repz
jo
mov
push
inc
shll
sub
sub
mov
xchg
add
mov
jne
cmp
xchg
add
cmp
das
imul
adc
xor
push
pop
add
pop
mov
mov
call
sbb
insb
rorb
sbb
daa
jl
push
inc
adcl
mov
js
xchg
inc
cwtl
mov
cmc
mov
xchg
jg
dec
sub
sbb
xchg
sahf
and
stc
dec
js
dec
inc
sub
cmp
ret
fstl
dec
arpl
mov
sub
or
sbb
jmp
push
nop
je
mov
xchg
sub
pop
or
data16
ret
test
pusha
xor
sub
in
jb
adc
push
xchg
push
adc
push
cmp
or
mov
inc
movsl
sahf
mov
adc
pop
nop
push
or
sahf
out
push
xlat
sub
rorl
push
notl
adc
lcall
push
xchg
pop
iret
clc
sub
xchg
mov
popa
mov
outsl
leave
pop
scas
call
pushf
or
jl
sub
lahf
sub
in
pop
pop
loop
data16
shlb
push
and
sub
fs
mov
lcall
inc
movsl
fbld
or
clc
jno
fimull
mov
xor
push
adc
arpl
dec
in
mov
mov
mov
in
popf
andb
push
pop
or
and
cmpb
inc
inc
cmp
lock
lock
mov
and
dec
push
sarb
mov
sbb
mov
int3
push
jecxz
xchg
inc
cmp
loope
adc
add
adc
outsl
roll
nop
dec
cmp
mov
pop
pop
jo
test
inc
adc
dec
push
stos
mov
mov
hlt
testb
sub
mov
cmova
cltd
jnp
mov
pop
out
stos
les
out
mov
out
adc
test
adc
ljmp
xor
xchg
mov
movsb
push
movsb
test
popa
nop
push
cmp
sbb
and
inc
adc
pop
xchg
cmp
push
lea
adc
cld
fs
mov
aaa
mov
pop
and
aad
out
nop
mov
cmp
bound
mov
sbb
call
not
cmp
cld
cmp
pushf
push
dec
add
fildll
jae
dec
popf
daa
add
cwtl
pop
or
stc
mov
mov
cmp
lock
dec
ja
and
aad
push
stos
dec
cmp
jl
push
call
les
fadds
add
lds
mov
lret
into
pop
stos
test
mov
aam
mov
sahf
sbb
add
leave
or
adc
fadds
aas
es
add
mov
iret
insb
mov
push
popa
stos
dec
fdivr
mov
int
imul
xchg
jmp
pop
ret
mov
lret
std
push
gs
push
mov
testb
bswap
adc
faddl
mov
and
sub
aam
int3
mov
loopne
push
mov
cmp
aaa
hlt
jns
jecxz
adc
jae
add
fscale
into
outsl
ret
adc
pop
ss
mov
or
dec
aas
pop
jmp
xor
xlat
or
test
subl
stos
loopne
fidivrl
xchg
es
fldcw
movsb
cmpsb
inc
jns
xchg
shll
xlat
and
dec
mov
call
push
push
fdivr
pop
call
bound
faddl
std
negl
sub
repz
add
pushf
pop
ljmp
aaa
push
mov
shrl
sbb
jb
lock
ds
or
dec
repnz
pop
xchg
rorl
push
loop
scas
sbbb
mov
push
jecxz
aam
jb
sub
and
outsl
jns
mov
xchg
js
jge
inc
push
cld
or
and
daa
dec
loope
lret
ja
notb
aas
dec
incl
arpl
addr16
out
rorl
in
testb
sbb
fwait
in
ds
and
stos
fdivl
xchg
pop
dec
cwtl
pop
add
daa
in
or
jno
stos
mov
mov
fmuls
lods
xor
mov
ja
aaa
dec
and
lock
add
es
in
enter
jmp
mov
xor
inc
test
mov
rorl
sbb
cmc
pop
lock
mov
jo
add
loopne
pop
testl
lret
std
ljmp
out
sbb
push
or
mov
aad
in
xor
adc
mov
jo
shr
loopne
es
ja
ja
mov
add
loopne
fldt
ss
addr16
stos
in
add
inc
mov
imul
popa
aas
test
mov
sub
out
leave
daa
clc
lods
push
lods
ret
push
xor
js
lcall
enter
cwtl
sub
inc
ljmp
cmp
jno
xchg
mov
cld
mov
out
insb
jb
outsl
dec
adc
push
dec
push
mov
mov
stos
leave
mov
jns
fnstcw
inc
mov
lret
adc
test
outsl
xor
xor
lcall
aas
mov
loop
outsb
mov
inc
lret
pop
or
jp
repz
loope
std
mov
sbb
out
jb
adc
pop
xor
repnz
loopne
pop
fdivrl
cmp
mov
mov
rcrb
pushf
stos
or
mov
ss
xchg
add
inc
push
push
popf
clc
out
out
cwtl
inc
sbb
push
ja
lret
fbld
fidivs
dec
cmpl
inc
push
push
cmp
leave
add
test
shl
push
aaa
andb
ficoms
push
cs
fs
into
xor
or
lods
leave
jae
jp
mov
inc
mov
stc
rcrl
mov
es
hlt
adc
in
jle
inc
add
dec
mov
sbb
mov
push
push
sbb
call
es
mov
aaa
xor
icebp
iret
adc
jne
jno
rcll
cmp
pop
test
pop
dec
jo
xchg
lret
mov
rcl
push
dec
les
cwtl
insl
dec
and
test
inc
out
dec
test
xlat
lds
pop
mov
insb
aam
sub
and
jle
dec
es
adc
cwtl
cmp
cwtl
fadd
fmull
nopl
out
jp
stos
addr16
ljmp
movsl
gs
sbbb
sti
inc
fdivrs
cmp
push
outsl
pusha
negl
scas
incb
gs
pop
xor
ss
shl
push
pushl
sub
mov
fistps
dec
jbe
jmp
adc
nop
call
jae
xor
dec
pop
or
mov
jg
jns
xchg
mov
add
cs
fsubrs
popf
int3
jno
dec
dec
int3
mov
cmpsb
popf
sub
cmc
mov
xchg
mov
dec
xchg
mov
xlat
js
jmp
mov
mov
insb
xor
xor
stos
mov
imul
addr16
hlt
pop
stos
stos
mov
and
xor
and
clc
es
push
movsb
enter
and
add
in
iret
outsb
rolb
lret
addr16
pop
imul
or
adc
and
jo
push
jo
ror
fdivs
dec
clc
mov
repnz
pop
or
jb
and
cld
insl
fistps
idivl
pop
aad
jge
xchg
jb
aad
dec
sbb
add
or
or
jno
xchg
jmp
jnp
sub
imul
out
cltd
sbbb
mov
out
movsl
mov
adc
pop
pop
bound
sbb
sbb
ss
fistpl
xchg
sub
or
int
xlat
mov
movsl
xchg
aaa
mov
dec
imul
imull
imull
lea
ja
jne
mov
mov
cmp
xchg
push
popa
mov
aam
jmp
mov
inc
cmpsl
xchg
aas
ret
sub
and
inc
jmp
repnz
movsb
iret
loop
jae
iret
sbb
sub
add
mov
xlat
mov
or
es
add
insb
adc
fcoml
jl
subb
lret
bound
push
pop
outsl
jne
cmp
roll
xor
lds
sbb
inc
cmp
gs
addb
call
pop
in
lcall
inc
mov
mov
arpl
loop
dec
aad
push
push
fildl
cmp
cmp
testb
add
sahf
sti
inc
sbb
mov
sub
je
pop
cmp
gs
out
jmp
add
clc
pop
sarb
push
sbb
xchg
xchg
inc
scas
mov
cli
pop
lret
xor
test
push
jne
xor
jno
xchg
fsubs
mov
sub
rcrb
inc
dec
arpl
sbb
inc
lds
dec
inc
push
push
sbb
bound
inc
inc
push
pop
cmp
fstp
dec
mov
sarb
lahf
inc
mov
ljmp
cmpb
fistps
out
idivb
mov
jno
sbb
cmc
push
clc
or
push
lahf
and
stos
inc
adc
dec
sti
shrb
gs
je,pn
andb
xor
sbb
lcall
add
push
pop
jmp
cmp
jp
iret
sahf
sub
ljmp
iret
movsb
cltd
xchg
cs
fs
cmpsb
jns
push
test
sti
sub
jne
mov
imulb
loope
sbb
mov
ret
out
repnz
pop
pop
daa
loopne
mov
enter
out
addb
inc
aas
jecxz
in
jmp
mov
aas
dec
adcl
jecxz
iret
or
lods
out
jecxz
cmp
push
loopne
ljmp
arpl
mov
jge
fsubrs
scas
add
dec
jecxz
in
dec
push
popf
push
loop
scas
popa
jo
mov
cmc
arpl
das
jbe
shlb
cmp
pop
out
jecxz
stos
cmp
or
cwtl
repz
into
aam
pop
mov
jbe
ret
mov
or
jg
outsl
or
adc
divl
imul
sub
enter
or
repnz
xchg
push
adc
jb
push
inc
fdivl
and
lcall
lods
std
testl
into
dec
gs
repz
loop,pt
lcall
das
stc
lods
pop
or
pop
loopne
jp
out
and
stos
jbe
sbb
xchg
les
add
adc
scas
mov
xchg
pushf
pop
dec
stos
jbe
jecxz
lods
lret
out
pop
fucom
stos
dec
mov
imul
into
sub
out
stos
add
iret
mov
sub
xor
push
sbb
fildll
dec
fstpl
lds
mov
xchg
loopne
and
dec
add
inc
sbb
cmp
pop
mov
shll
ret
mov
xor
jae
xchg
and
fyl2xp1
enter
pop
and
or
dec
in
movsl
mov
loope
aad
or
cmp
imul
sbb
mov
test
sbb
lea
iret
push
pop
cmc
sbb
inc
lret
sub
push
rolb
jl
and
jb
mov
clc
jno
fldenv
pop
xor
js
or
dec
mov
dec
sub
jne
pop
nopl
pop
inc
sbb
pop
jnp
push
int3
mov
jp
daa
mov
jecxz
or
pxor
out
jecxz
cs
pop
pop
inc
or
pushf
dec
xchg
daa
fwait
sub
imul
sbb
das
push
add
xchg
and
mov
enter
push
in
xchg
cli
into
pop
dec
scas
adc
bound
es
mov
sbb
xor
fistps
rclb
pop
mov
movsl
idivl
pop
js
adc
out
push
adc
cmpsb
or
lods
push
es
pusha
xor
in
mov
mov
mov
jmp
cmp
and
push
push
mov
repz
sbbb
jl
in
push
lret
pop
and
dec
dec
xchg
dec
hlt
add
fsubl
fsts
add
fisubs
cmpsl
inc
sub
movb
mov
pop
call
dec
add
pop
das
push
imul
push
dec
ljmp
movl
jb
jle
push
fstpt
xor
jnp
cmpsb
out
fidivrs
inc
xchg
idivb
loop
sub
dec
sub
aas
enter
jno
in
add
xchg
xchg
inc
xchg
xor
neg
jp
mov
scas
lret
sub
inc
dec
pop
in
add
dec
push
and
pop
jae
pop
adc
sub
mov
pusha
decb
shrl
mov
int
push
dec
leave
aam
mov
cmp
pop
shl
cltd
ja
fistpl
fcompl
jno
cmp
aaa
xchg
fdivs
in
shll
clc
jns
pop
lret
rdtsc
cltd
mov
sti
test
fs
pop
adc
in
lock
popa
xor
or
cmp
mov
repnz
or
mov
lcall
in
rorb
or
pusha
jle
inc
icebp
sti
cmpsb
xor
cs
pop
jmp
sbb
and
sti
adc
pop
mov
and
icebp
imul
shrl
adc
jnp
sbb
repnz
roll
cmp
or
jns
cmpsl
xor
pop
loope
cmp
cmp
cmp
mov
hlt
pop
fistl
pop
stos
and
nop
into
les
mov
xorl
mov
and
lods
push
std
sbb
ja
mov
jle
rcl
inc
mov
pop
fs
xchg
adc
xorl
fnsave
xchg
std
mov
sub
movsl
pop
cli
lea
stos
dec
in
and
mov
sub
pop
xor
jb
test
test
test
sahf
or
xchg
mov
out
test
mov
fnstenv
cli
sti
sub
out
sbb
cmp
push
subb
inc
es
xchg
cmp
scas
add
or
sbb
sahf
negl
add
cmpsl
cli
jbe
fucomi
incl
out
add
cs
rcll
push
std
repz
push
cmp
sbb
dec
sahf
cmp
mov
ljmp
scas
icebp
or
adc
ss
imul
lret
in
push
imul
ja
fcmovb
or
pop
scas
cltd
pop
ret
lahf
push
cmp
jp
cmp
lods
inc
or
inc
pxor
test
adc
fimull
xchg
mov
movsb
jl
imul
lea
in
xchg
mov
mov
push
adc
stc
mov
jge
cmp
out
adc
or
jp
repz
cmp
imul
je
xor
mov
int
stos
push
add
pop
mov
stos
fdivl
add
out
imul
adc
inc
bound
cmp
mov
mov
add
xchg
mov
movsl
pop
jbe
pusha
mov
ss
sti
mov
movsb
inc
dec
cmp
pop
add
push
jmp
adc
adc
hlt
repz
in
aaa
inc
add
cli
lds
push
or
pop
dec
scas
xchg
lods
inc
pop
push
les
call
adc
popa
pusha
lea
cwtl
push
lods
movsb
or
jge
dec
pusha
fwait
popa
loopne
rolb
sub
cmp
lret
jmp
sbb
scas
or
mov
add
orl
imul
lea
lock
cltd
inc
fmuls
and
lahf
pop
inc
sbb
push
ficoml
cmp
fiaddl
or
daa
aam
xor
cmp
lods
test
ret
fadds
add
repz
repnz
aad
and
adcl
jbe
lret
or
mov
rorb
cwtl
insb
std
cmp
loope
pusha
cmp
or
inc
inc
fisubrs
out
daa
mul
push
mov
test
mov
andl
and
fstpl
adc
incb
test
xchg
pop
push
pushf
xchg
scas
std
pop
cmc
arpl
cli
xchg
inc
in
test
mov
dec
push
pop
gs
pop
cmpsl
ds
fnsave
dec
jmp
sub
mov
mov
or
negb
sbb
jne
pop
sahf
add
xchg
jl
xlat
icebp
lahf
xchg
bound
jo
call
fdivrs
mov
adc
mov
inc
jae
outsb
sub
jmp
in
mov
adc
fsubrl
cmp
push
and
xor
push
mov
rclb
adc
movsb
je
ret
lock
and
add
adc
adcb
pushf
cmc
outsb
cmp
pop
inc
cmp
xchg
je
add
rcr
push
test
and
dec
sub
xor
push
pusha
and
xchg
and
mov
cmc
push
mov
cmc
in
sbb
jb
adc
dec
xor
aas
negl
xlat
and
enter
cwtl
movsl
enter
jns
ret
scas
jns
dec
mov
scas
or
jmp
sbb
mov
jl
addb
les
test
mov
xchg
shl
mov
mov
adc
push
add
sahf
pop
scas
rcr
aam
fcmovnbe
call
jnp
lret
sahf
outsb
push
push
and
arpl
fcomps
mov
lock
popf
ja
adc
mov
mov
pop
and
arpl
mov
data16
sub
stc
scas
in
aad
cmpsb
xor
aad
push
int
xchg
mov
mov
xchg
jbe
bnd
and
into
out
cmpsb
or
sbb
xor
jg
xor
push
inc
cmp
mov
leave
aad
dec
pop
mov
pop
fwait
sbb
mov
shll
rolb
mov
incb
mov
test
mov
call
mov
mov
xlat
add
push
jne
in
inc
js
jecxz
call
imul
enter
xchg
ficoml
mov
aam
pop
mov
outsl
dec
pop
sbb
xor
sbb
cs
and
sbb
addl
sub
inc
add
dec
cmp
in
cmp
jnp
mov
call
jb
lcall
xchg
cvtps2pd
cltd
jns
outsb
repnz
or
pusha
jb
xchg
cld
mov
pusha
mov
mov
imul
sub
movsb
xchg
cld
pop
stc
push
daa
cmp
fdivrl
mov
ss
lods
fwait
in
pop
ja
test
mov
push
dec
push
jmp
out
mov
in
mov
mov
sub
movsl
xchg
sub
inc
push
test
adc
insl
push
jge
ss
sub
or
fs
inc
dec
out
lods
inc
ljmp
or
push
push
or
sub
not
int
clc
sbb
mov
fwait
inc
call
cmp
pop
mov
add
int3
push
mov
mov
std
gs
push
push
dec
scas
and
dec
dec
test
clc
daa
push
jbe
xchg
icebp
sahf
lret
push
mov
mov
in
es
ds
fs
aad
xchg
cmp
jl
mov
pop
xlat
mov
ss
call
and
adc
addr16
sbb
int3
xchg
mov
and
loopne
xchg
outsb
mov
out
mov
clc
push
outsl
repnz
mov
fidivrl
jp
xchg
sbb
jns
xor
ret
xchg
imul
sub
std
push
sbb
std
in
ret
inc
shl
cmp
mov
cmpsl
arpl
cmpsb
aaa
push
inc
push
adc
jmp
data16
pusha
aas
add
xor
xchg
ja
dec
pop
out
jle
pop
push
pop
fmuls
jne
int3
mov
fstps
rcl
mov
inc
pop
xchg
scas
inc
jmp
jg,pt
cmp
adc
sbb
cmp
orl
sbb
nop
shr
fsubl
test
outsb
ret
stos
xor
cli
ret
es
ficoms
xlat
mov
sbb
and
xchg
scas
imul
dec
stos
or
loopne
mov
mov
cmp
fisubrl
dec
repnz
shll
push
push
add
sahf
jo
push
mov
lock
dec
mov
div
xor
add
test
call
bound
xchg
or
into
shrb
movl
inc
cmp
and
lahf
mov
sbb
or
dec
popf
aaa
clc
dec
mov
xchg
adc
out
mov
addl
nop
or
adc
data16
sbb
shl
lret
pand
dec
xchg
loop
subl
fisubs
sar
imul
push
or
into
add
fmul
insl
fwait
or
mov
dec
push
call
rorb
test
and
xlat
sbb
mov
into
out
mov
ficoml
insb
lahf
push
xor
add
mov
ficoms
sahf
gs
lret
adc
inc
fdiv
cmp
inc
jb
mov
xor
loop
push
les
nop
mov
adc
out
inc
sub
pop
loopne
mov
pusha
ljmp
adc
ret
ret
je
or
out
int
lock
repnz
mov
ror
xchg
jnp
dec
jnp
or
jp
inc
pop
loope
cmp
cmpsl
int3
das
imull
fstpl
jp
and
imul
or
ljmp
push
and
cwtl
cmpsb
lods
pop
dec
xchg
pop
jge
xor
in
jo
xchg
cmp
jp
inc
in
ss
and
xor
sbb
inc
test
lods
loopne
xchg
int
mov
sub
ret
cwtl
adc
loop
gs
push
mov
out
cmp
in
or
cmp
xchg
push
adc
mov
mov
and
xchg
imul
pop
pushf
jnp
mov
test
jb
jmp
lret
or
stos
test
sbb
mov
inc
mov
pop
sub
gs
shll
fs
push
pusha
cli
lcall
adc
inc
push
fadd
sub
jnp
insl
lcall
cli
or
sbb
jmp
jne
movsb
insb
cs
stos
cltd
mov
test
lds
cltd
adc
push
pop
loop
stc
lock
cmp
push
inc
pop
xor
iret
inc
jnp
aam
cmc
andb
sub
cmpsb
adc
push
rolb
mov
dec
inc
sbb
add
mov
adc
aas
or
mov
jns
push
lcall
and
adc
jne
aad
test
xor
xchg
in
int
loopne
cmp
add
and
adc
clc
cmp
pop
rolb
rclb
addr16
sbb
jne
push
mov
call
adc
scas
pop
xchg
sbb
jl
shrb
fimull
std
call
mov
jge
cmp
enter
add
jmp
add
cmpsb
dec
shlb
push
out
test
addr16
aaa
adc
dec
sub
cmp
repz
mov
in
std
stc
mov
inc
ja
test
add
cli
mov
or
inc
pop
stos
cmp
jmp
hlt
mov
clc
sub
pop
mov
add
and
shll
sub
call
pop
int3
jbe
or
add
mov
les
and
xor
xchg
stc
cmp
movsb
out
dec
ljmp
mov
int
mov
jns
sbb
test
incb
lock
test
jne
cs
cmpsb
sub
in
pop
sahf
push
sub
cmpsl
mov
int3
mov
rcr
dec
hlt
ss
or
inc
jecxz
dec
imul
sbb
jne
add
cwtl
add
mov
push
ds
popf
stc
rolb
push
jp
daa
xchg
jecxz
popa
xchg
insb
loop
lret
sbb
mov
adc
jmp
mov
aas
xor
and
sbb
push
add
sbb
std
push
sub
dec
aaa
stos
jp
pop
and
adcb
data16
xchg
mov
mov
insb
push
or
cmpsl
add
aaa
repnz
xchg
mov
dec
or
sbb
movsb
mov
lods
mov
repnz
mov
ja
outsl
jae
outsl
cmpsb
mov
fs
iret
dec
xor
mov
jne
and
dec
cmp
sbb
and
out
sahf
lret
aas
into
iret
push
sbb
jle
les
inc
xchg
cmp
sub
inc
into
or
push
ficoms
mov
jne
mov
pop
mul
rorb
inc
out
or
add
xchg
ret
inc
scas
or
mov
push
mov
cmp
xchg
or
daa
xchg
sub
aam
adc
mov
icebp
adc
cmp
xchg
lods
mov
inc
xchg
inc
lods
loop
in
outsl
dec
jne
stc
int3
jns
mov
and
loope
inc
fs
mov
ret
cmp
inc
outsb
jo
sbb
mov
fstps
jno
popa
jb
test
test
fwait
mov
xchg
mov
push
sub
jae
or
sbbl
mov
adc
dec
mov
pop
xor
ror
je
or
or
outsl
loope
lock
adc
add
pop
into
out
mov
fisttps
cld
fiadds
aad
fdivr
or
rcr
dec
fsubl
add
inc
mov
jns
js
aas
fs
movsb
daa
and
add
daa
pop
push
xorl
jae
xchg
lods
and
mov
shlb
mov
add
add
repnz
sbbl
mov
pop
icebp
fldcw
jo
push
fdivp
aaa
icebp
call
pop
outsb
mov
aad
push
shlb
or
pop
and
jae
or
mov
xchg
fmulp
out
add
inc
cltd
cs
cs
cmp
imul
mov
cmp
push
dec
sbbl
sarb
xchg
in
sarl
mov
push
jno
in
ja
outsl
mov
scas
addl
sbb
adc
lret
lea
es
mov
or
mov
jo
in
xor
sbb
push
dec
rorb
add
sbb
sbb
out
mov
or
mov
daa
in
insl
es
cli
sbb
dec
in
pushf
cmc
mov
jg
repnz
push
mov
jl
mov
fsubrs
mov
fcomps
imul
cs
daa
push
popa
cli
mov
xor
out
inc
sub
and
pop
pop
jge
sub
ss
out
cwtl
xlat
jo
xor
roll
das
push
adc
data16
xchg
aam
sbb
js
and
sub
mov
mov
cmpsb
jl
jbe
jl
test
xchg
nop
sub
incb
rcr
mov
cmpl
cmp
xchg
sub
inc
inc
pop
std
add
gs
mov
mov
std
push
xchg
lock
dec
cmp
add
mov
ja
push
push
dec
mov
cli
clc
cwtl
dec
push
sbb
data16
lods
aam
ja
pop
sub
out
stos
rorb
push
pop
xlat
lret
je
imul
mov
jno
xor
pop
out
call
popa
ljmp
jae,pn
push
lahf
scas
imul
aam
test
jae
mov
fcompl
int
mov
das
stos
outsb
negb
icebp
adc
xchg
fcoms
and
pop
push
call
sbb
loop
jge
mov
stc
repnz
cmp
fldl
mov
and
fs
outsl
mov
push
adc
push
jge
mov
xchg
jnp
mov
add
rol
cmpsl
movsb
sarl
repz
repz
out
decl
pop
cmp
dec
addr16
push
dec
sub
jmp
repz
dec
lds
cli
pop
ds
rorb
pop
push
fldenv
imul
push
fldenv
psubusb
cmp
test
sahf
adc
cmc
outsl
fidivrs
fnstenv
fidivs
add
mov
mov
push
ja
pop
xchg
mov
cmp
lcall
mov
xor
fisubrs
scas
sbb
repnz
mov
arpl
add
sub
shll
fsubr
outsb
mov
aaa
mov
cmp
out
lods
cmp
enter
jmp
aaa
lods
repz
iret
inc
cmp
out
movsl
je
jle
mov
or
push
dec
lret
cltd
clc
bound
push
mov
pop
push
daa
or
fs
push
jbe
xchg
pop
push
jne
mov
mov
push
xchg
xchg
mov
jo
dec
xor
sti
cmc
cld
xor
lret
adc
mov
add
addr16
mov
push
in
cwtl
cmp
push
push
push
sarb
xchg
pop
int
in
hlt
stos
jg
ret
push
int
insl
ret
xor
in
cmp
push
push
sub
out
ror
aaa
iret
or
mov
sub
sbb
or
popf
xchg
aam
dec
mov
jp
imull
adc
dec
mov
push
jmp
push
push
cmp
or
cmpsl
in
int3
scas
push
sarb
push
scas
push
lock
fstpt
ficompl
and
outsb
sbb
ds
ret
movsb
je
mov
and
addr16
xchg
mov
cmp
sahf
add
inc
sahf
cmp
adc
repnz
push
mov
test
leave
pushl
popf
inc
lret
mov
jp
ja
or
std
into
push
dec
xchg
fisttpll
xor
adc
sub
ret
fistpl
xor
jno
stos
mov
pop
imul
lea
into
push
mov
cmpsl
jns
mov
push
mov
stc
cmp
ds
aad
nop
sbb
in
fs
adc
sbb
mov
clc
xor
leave
sbb
lcall
test
int3
cs
sbb
clc
mov
jns
sbb
aas
push
arpl
pop
sbb
lods
int
in
xchg
mov
and
jle
lea
pop
push
add
clc
mov
hlt
gs
jo
in
adc
pop
fwait
lret
jp
imul
mov
aad
pushf
push
cmpsl
mov
out
push
icebp
or
clc
xchg
add
push
mov
push
out
mov
cmp
mov
test
rcrb
jle
stos
mov
bound
iret
dec
push
dec
in
fcoml
dec
js
sub
pop
sub
and
insl
cmp
and
getsec
icebp
ret
movsl
pop
addr16
mov
lret
lret
mov
aad
test
enter
xchg
ja
push
repnz
incb
lods
cmp
ja
aam
pushf
or
inc
std
lds
jae
adc
test
adc
xchg
rclb
mov
rclb
add
add
add
adc
push
rclb
xor
adc
mov
add
add
add
rclb
inc
rclb
je
add
rol
adc
inc
rclb
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
je
jb
arpl
fs
jae
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
imul
jb
add
jb
jne
insb
push
jb
je
arpl
push
inc
push
xor
cs
insb
add
jo
imul
push
xor
xor
fs
insb
add
add
add
add
add
add
add
add
adc
out
cld
xchg
add
mov
lock
add
add
adc
loopne
adc
add
add
aam
add
add
sar
rclb
pusha
call
pop
lea
add
mov
lea
push
pop
add
lods
dec
jne
mov
movb
mov
mov
push
push
pushl
push
call
mov
add
mov
jmp
add
pusha
push
push
push
call
mov
popa
pusha
sub
mov
mov
lea
xor
push
pop
jmp
mov
and
cmp
je
mov
and
cmp
jne
inc
mov
sub
xor
mov
mov
inc
shr
jne
push
inc
mov
sub
sub
mov
cmp
ja
mov
shl
mov
shl
xor
lea
mov
inc
shr
je
add
mov
shr
setae
dec
mov
pop
inc
cmp
jl
popa
push
shr
rep
pop
add
mov
test
jne
push
push
push
call
mov
jmp
add
push
call
mov
add
jmp
btr
jb
add
inc
inc
push
push
push
call
stos
pop
mov
test
jne
add
lods
test
jne
popa
jmp
push
mov
sub
xor
inc
mov
mov
mov
mov
mov
mov
xor
mov
rep
mov
push
mov
mov
mov
mov
mov
or
pop
mov
mov
movzbl
shl
or
incl
dec
mov
jne
mov
mov
mov
and
shl
add
cmp
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
sub
shr
add
movzbl
imul
xor
mov
mov
inc
cmpl
lea
mov
mov
jl
mov
sub
mov
movzbl
mov
shll
mov
mov
and
cmp
lea
lea
mov
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
test
mov
jne
jmp
sub
sub
mov
shr
sub
test
mov
mov
lea
je
cmp
jl
jmp
cmp
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
sub
mov
shr
sub
mov
lea
cmp
jl
mov
mov
incl
cmpl
mov
mov
jge
andl
jmp
cmpl
jge
subl
jmp
subl
jmp
sub
mov
shr
sub
mov
sub
cmp
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
cmpl
mov
mov
mov
mov
mov
mov
mov
jge
andl
jmp
movl
mov
add
jmp
sub
sub
mov
shr
sub
cmp
mov
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
sub
shr
add
mov
add
shl
mov
mov
add
cmp
mov
lea
jae
mov
shl
mov
mov
movzbl
shl
or
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
mov
sub
shr
add
xor
cmpl
mov
mov
setge
lea
mov
mov
sub
incl
mov
mov
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setge
dec
and
add
mov
mov
add
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
shl
andl
mov
lea
jmp
sub
sub
mov
shr
sub
cmp
mov
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
shl
mov
lea
movl
movl
jmp
sub
mov
shr
sub
sub
mov
add
movl
movl
mov
xor
mov
inc
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
sub
mov
shr
sub
mov
lea
decl
jne
mov
xor
inc
mov
shl
mov
sub
add
cmpl
mov
jge
addl
cmp
jge
mov
jmp
push
pop
mov
shl
lea
movl
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
sub
mov
shr
sub
mov
lea
decl
jne
sub
cmp
mov
jl
mov
sar
and
dec
or
cmp
mov
jge
shl
mov
sub
mov
lea
jmp
sub
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
shr
add
cmp
jb
sub
or
dec
jne
mov
add
shl
movl
xor
inc
mov
mov
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
mov
sub
mov
shr
sub
or
mov
lea
shll
decl
jne
inc
mov
je
mov
mov
inc
sub
inc
add
mov
mov
mov
dec
incl
inc
test
mov
mov
jne
jmp
mov
jmp
mov
leave
ret
