call
in
sub
add
mov
imul
add
loop
cmp
out
in
push
imul
add
add
jne
push
mov
fsts
inc
fcmovne
sahf
repnz
pop
and
mov
lods
test
cmp
test
add
pop
add
pop
xchg
inc
add
add
insl
imul
pop
imul
push
or
inc
xchg
inc
insl
es
testb
sarb
xchg
add
out
mov
pushl
and
mov
add
add
stc
dec
inc
add
call
adc
test
out
sbb
mov
mov
stc
add
test
insb
sarl
cmp
xor
jnp
add
addr16
ss
ror
or
ljmp
add
movsb
fucomp
push
mov
fcomp
jmp
or
cmpsl
jge
jg
shr
imul
sbb
sbb
fildl
je
sahf
cltd
push
add
sbb
in
movsb
popa
ljmp
push
imul
and
push
imul
add
sbb
rorl
sbb
push
adc
add
fldenv
pop
ss
sarb
sbb
decb
or
and
rdpmc
jle
movsb
aad
inc
mov
xchg
std
mov
jno
inc
sbb
push
push
in
or
pusha
add
lret
cmp
mov
pop
mov
in
xor
push
add
notl
fsubr
or
jns
xchg
push
sbb
mov
mov
or
pop
sub
or
add
mov
sub
adc
out
sbb
cltd
pop
movsb
sbb
mov
mov
out
push
mov
sbb
mov
sbb
les
add
sbb
mov
and
in
inc
dec
or
xchg
inc
cmp
adc
sub
pop
out
lret
shrl
mov
pop
fmull
push
and
rcr
fldl
sbb
popf
jle
xchg
fnsave
inc
push
mov
sbb
cmc
cs
adc
push
dec
mov
pop
lcall
in
adc
iret
add
jbe
add
std
fstpt
imul
sbb
ja
xor
in
jb
icebp
push
int3
and
push
std
stc
cmc
dec
mov
repz
jge
fs
xchg
sbb
je
sbb
mov
jnp
jae
stc
stc
std
std
mov
jbe
sbb
and
adc
or
aaa
xor
add
and
cli
dec
iret
push
pop
imul
mov
jle
xor
cli
sub
cmp
jo
cmpl
inc
in
into
jmp
ds
or
arpl
addr16
dec
jbe
int3
or
cmp
push
lret
adc
aam
rcr
testl
mov
mov
stc
jl
cmp
adc
cmpl
add
ja
jnp
mov
mov
enter
add
add
mov
test
mov
pop
push
xor
test
insl
stos
mov
icebp
dec
jne
cli
push
hlt
std
xchg
mov
add
push
add
jle
add
mov
lds
mov
push
pop
aad
or
loope
mov
jno
inc
and
pop
mov
mov
lods
xor
loope
jle
add
or
inc
sbb
sbb
mov
jb
sbb
inc
inc
push
add
jns
jmp
xchg
or
jbe
jbe
adc
in
mov
xchg
fs
and
iret
sbb
scas
dec
fldln2
jbe
mov
push
inc
adc
sahf
sub
push
fucomi
out
dec
mov
or
stc
cwtl
adc
pop
idiv
movsl
lea
addr16
addr16
lods
mov
popf
adc
sahf
mov
ret
mov
lods
cmp
mov
sahf
add
lds
adc
inc
in
imul
rorb
testl
add
mov
cwtl
mov
pop
pop
sub
sub
icebp
ss
stc
pop
add
xchg
ret
mov
xchg
mov
lock
test
push
and
adc
bound
cs
pop
or
push
xor
inc
jbe
push
and
fmul
inc
outsl
lock
mov
mov
aad
cld
mov
popa
lcall
mov
pop
aad
pop
and
mov
push
movsl
sti
test
pop
or
andb
cmc
ljmp
mov
shrb
push
jno
fldcw
jg
pusha
or
lcall
testb
xchg
pop
fists
orl
push
pop
dec
cmp
adc
push
jle
enter
or
jmp
xor
adc
cmp
subb
inc
or
dec
leave
mov
xchg
mov
adc
sub
xchg
mov
mov
fadds
jge
cltd
jno
aaa
push
and
in
sub
xchg
push
xchg
je
aas
push
in
ja
pop
fsubrs
or
ret
inc
jg
data16
add
cmpl
push
pop
cmp
push
lods
pop
push
test
incb
cmp
jge
sub
in
inc
adcb
pop
loop
jne
js
mov
sbb
fistpl
mov
imul
mov
mov
orb
mov
sbb
mov
inc
sbb
dec
and
xor
xor
sub
mov
push
push
imul
fidivrl
es
mov
add
dec
pusha
adc
jge
out
pop
test
aas
or
dec
sub
add
mov
mov
cmpb
popf
add
and
sub
cmp
xchg
out
cmp
mov
or
icebp
and
repz
add
inc
push
xor
rcrl
call
imul
add
adc
out
sbb
push
inc
ds
and
in
fistpll
push
add
push
or
pop
push
cmp
scas
les
push
sti
pop
xchg
or
fsubs
pusha
and
pop
push
mov
adc
push
shll
rclb
mov
mov
cmc
and
mov
push
inc
pop
mov
loope
xor
pusha
cmp
cmc
cmp
icebp
enter
push
std
mov
push
imull
adc
in
adc
add
add
cmpl
loopne
jmp
cmp
cwtl
jne
mov
or
repz
popa
or
insb
jnp
imul
sbb
mov
or
mov
jg
push
popf
add
push
and
lock
pop
sbb
add
add
std
fldenv
divl
push
xor
cmp
xchg
cmpsb
jae
add
in
push
out
lods
adcb
imul
test
push
push
imul
and
add
add
inc
or
jne
adc
xchg
adc
cmp
jl
in
sarl
inc
sub
test
xchg
add
pushf
mov
push
push
sub
ss
sub
add
cwtl
lcall
pop
incb
cmp
stc
cmp
mov
cmp
add
jns
mov
sub
or
push
test
or
js
imul
mov
cmp
add
push
mov
imul
xor
stc
push
sbb
cld
add
xchg
mov
jmp
jge
and
fnstsw
push
pop
enter
sbb
jns
mov
mov
jbe
add
xchg
cltd
mov
lock
lods
mov
push
or
int
std
sub
and
pop
jnp
rcll
cmp
lods
pop
inc
cmc
add
lcall
dec
xchg
sbb
mov
repz
jne
jge
push
cmp
sbb
jle
mov
adc
mov
lock
loope
call
add
inc
mov
aaa
test
aaa
imul
or
out
xor
scas
mov
lcall
adc
shlb
lods
insb
jp
fnstcw
test
mov
fidivs
mov
lds
test
js
fmull
mov
push
or
imul
insl
fs
or
fs
cltd
daa
sbbb
mov
aaa
das
testb
add
or
mov
shll
in
adc
out
pop
pop
adc
in
adc
or
mov
data16
imul
jno,pn
jecxz
push
adc
cltd
lods
inc
cld
or
jbe
mov
cmc
shl
mov
jl
imul
or
xor
push
fucomip
sbb
sti
add
sub
pop
loope
fadds
sbb
xor
cli
std
inc
out
mov
mov
mov
lds
popf
ss
stc
jne
pop
je
hlt
mov
sub
outsl
fstl
xchg
call
sbb
adcl
push
mov
mov
mov
add
inc
movups
lcall
adc
and
shlb
sub
sub
cs
shll
push
loope
pop
sbb
jnp
ds
cmp
sahf
cmp
or
sbb
ss
sbb
rorl
sbb
cmp
pop
xchg
divl
repnz
std
lret
inc
pop
push
cmpsb
jno
testl
lock
nop
sub
pop
sub
fimuls
icebp
test
adc
inc
mov
add
pop
pop
jmp
push
shrl
fnstenv
rcr
popf
popa
imul
xlat
pop
inc
pop
int
clc
or
sbb
popf
imul
mulb
mov
pop
adc
fimull
push
xor
sub
bound
mov
aam
fs
cmc
add
loopne
pop
sahf
push
in
js
outsl
notl
cwtl
adc
daa
mov
mov
stc
daa
cs
std
push
mov
dec
cmp
sbb
icebp
movsb
frstor
adc
sub
lahf
pop
inc
xor
xor
pop
sub
in
mov
dec
js
icebp
daa
pop
jp
fwait
and
and
fcmove
push
xchg
imul
stos
pop
cmp
push
loop
sub
fadds
push
pop
lds
cwtl
in
aam
xor
out
repnz
in
xor
jmp
sub
adc
inc
sbb
lock
std
pop
loope
in
sbb
push
lods
adc
imul
lret
repz
add
push
pusha
mov
sub
pop
pop
ja
sbb
pop
cmc
mov
xchg
andl
or
sub
cmp
jg
mov
pop
and
and
xor
ret
add
add
inc
push
jbe
jo
ljmp
rol
dec
add
jecxz
inc
dec
out
or
pusha
adc
xor
jmp
sub
dec
or
push
sub
sub
notl
sbb
ljmp
xlat
sbb
dec
dec
fadd
aaa
je
push
mov
negl
cmp
dec
jge
in
jb
xsha256
cmpsb
aam
add
jne
imul
cltd
popf
test
int
test
aad
add
test
or
pop
sahf
push
es
mov
jbe
xlat
or
ss
or
xchg
mov
mov
mov
push
loopne
or
inc
xorl
movsl
mov
xchg
push
push
xchg
outsb
hlt
push
push
sub
in
mov
lods
imul
pop
test
mov
jp
out
or
sub
sub
jle
xor
xor
jl
insl
incl
out
icebp
imul
push
loope
stc
pop
jno
cmp
and
xlat
aad
aad
mov
or
adc
xor
insl
pop
push
stos
les
and
sbb
daa
popf
shr
add
jae
adc
and
xorl
cmp
mov
fisttpll
or
add
xor
mov
cwtl
push
push
push
cltd
sbb
rolb
cld
aad
jle
movsl
imul
andl
rcll
jne
cmp
repnz
sbbb
rcl
xchg
out
or
jnp
addb
lods
mov
addr16
cmp
adc
ret
mov
fnstsw
or
and
imul
data16
jbe
mov
cli
pop
inc
pop
dec
xor
add
ja
mov
pushf
sbbl
add
js
dec
int3
arpl
adcl
stc
jbe
xlat
xor
sbb
dec
jbe
adc
xor
xchg
sub
pusha
xlat
mov
lahf
adc
je
std
dec
cs
mov
and
push
bound
test
leave
leave
cmp
pop
push
push
add
adc
lahf
add
inc
sbbb
das
push
and
rcll
pop
test
loopne
outsb
lock
xchg
ljmp
adc
and
cwtl
cmc
scas
rolb
test
icebp
bound
sarb
jle
sbb
or
hlt
std
neg
xor
clc
flds
test
push
and
dec
or
dec
add
or
daa
mov
les
dec
push
lcall
and
and
push
cmc
jg
lea
scas
std
adc
xchg
mov
imul
sbb
pop
outsl
test
add
cwtl
or
mov
sub
jbe
pop
adc
xchg
xor
jno
inc
out
add
and
fadds
inc
test
push
mov
push
movsl
push
xchg
add
push
push
repnz
lds
or
fcompl
leave
cmp
fiadds
ja
mov
inc
mov
push
leave
adc
cltd
ret
mov
outsl
sti
jbe
imul
xor
les
pop
std
dec
and
mov
push
dec
call
test
aas
dec
push
or
das
cmp
and
pop
mov
pop
mov
dec
rcrl
fwait
popa
idiv
jne
jne
jp
pop
rol
aas
mov
test
jle
sahf
lret
jecxz
stos
xchg
imul
push
imul
ret
in
cltd
cli
mov
stc
mov
jmp
inc
fwait
or
pop
and
lds
add
cld
clc
fucomp
stc
lcall
sbb
lds
in
sbb
enter
mov
add
clc
in
pop
sbbb
loopne
and
xor
ja
insb
mov
cltd
push
add
in
pop
scas
mov
cmc
mov
mov
in
pop
mov
cmpsb
xor
adc
hlt
lods
lods
jbe
incl
xchg
push
pop
xor
incl
mov
daa
imul
xor
pop
dec
xor
mov
hlt
pop
aad
inc
testb
adc
add
add
sbb
ss
add
pop
or
and
push
mov
push
sbb
or
cmp
ret
mov
and
nop
loopne
sbb
test
adc
mov
orb
lods
int3
inc
push
loopne
ds
sub
js
add
outsl
jno
xor
int
mov
cmp
cmp
movsl
incb
mov
mov
mov
push
xor
jno
fs
cmp
sub
cmpl
dec
xor
sub
inc
jle
mov
add
pop
clc
cli
test
or
insb
cwtl
mov
popf
or
pop
sti
test
sub
in
mov
mov
mov
adc
add
daa
in
or
imul
subl
xchg
cmp
add
ret
test
xorl
sub
pop
adc
insl
xor
mov
std
outsb
imul
xchg
mov
cmp
mov
mov
aaa
xor
lcall
or
xchg
pop
jl
xor
mov
push
or
or
jb
in
mov
mov
sbb
cmp
stc
ljmp
sbb
and
lret
mov
imul
lock
inc
adcb
jle
cmp
les
adc
cmpb
ds
dec
xor
mov
pop
mov
imul
and
leave
lock
movsl
push
xor
xor
sub
or
cmp
shr
outsl
pop
std
jbe
mov
cli
leave
or
mov
push
xor
mov
outsl
loopne
aaa
pop
fisttps
jg
and
pop
and
shlb
jbe
jae
bound
add
int
adc
test
out
push
imul
push
xchg
push
push
mov
incb
cmpl
xor
les
pop
insl
sub
fcompl
lock
dec
mov
fdivrp
sub
sbb
loopne
mov
mov
mov
ljmp
push
push
test
cmp
insb
sbb
dec
xor
add
fstl
mov
cmp
xchg
aas
test
popf
and
mov
outsb
mov
jnp
jg
nop
fstpl
in
loop
push
pop
in
jns
jle
ret
clc
sub
pop
push
jae
popf
lock
dec
jne
loope
test
pop
shl
in
xor
movsl
imul
popa
xchg
sub
adc
sbb
mov
daa
out
sbb
pushf
arpl
int
lods
and
loope
and
sub
pop
outsl
push
mov
or
jno
mov
sahf
daa
xchg
cmp
mov
sbb
cwtl
jno
cmpsl
pop
test
sbbl
or
fcompl
hlt
push
lea
push
or
jge
or
xor
xor
push
data16
cs
sbb
cltd
jmp
cltd
sbb
xchg
inc
vdivps
enter
xor
icebp
fdivrp
and
cmp
xor
cmp
sbb
pop
cmp
ret
dec
mov
push
hlt
xor
in
out
addr16
sbb
cltd
inc
mov
xchg
cmp
je
inc
imul
nop
flds
mov
imulb
fxch
mov
adc
cld
je
adc
mov
push
sub
cmp
ja
mov
fsubr
add
mov
jle
lods
lds
cmp
loopne
js
test
add
js
lahf
cmp
jge
push
imul
jne
cmp
xor
mov
sub
xchg
inc
aaa
adc
fwait
xor
xchg
pushl
test
aaa
sbb
movsb
push
pop
mov
xor
adc
es
aam
repnz
mov
inc
mov
icebp
mov
mov
aaa
fstp
push
leave
pop
jne
in
sbb
pop
adc
adc
push
ret
scas
mov
in
jle
fistps
inc
add
jmp
pop
cmp
outsb
stc
push
push
mov
fisttpll
test
xchg
fsincos
ficomps
xor
or
cli
add
std
mov
dec
dec
lds
insl
push
add
movsb
orb
push
jmp
pop
jp
and
pop
adcl
leave
andl
mov
and
enter
jmp
add
mov
sahf
pusha
adc
jnp
leave
xlat
add
outsl
sbb
scas
or
pop
sti
fldcw
pushf
scas
jp
adc
push
inc
pop
in
lahf
fisubrs
loope
or
or
dec
pop
and
aad
mov
inc
mov
add
pop
inc
hlt
or
mov
cmp
jge
scas
iret
cmp
bound
dec
or
clc
aaa
pusha
dec
out
xchg
ret
jl
mov
es
test
dec
sub
sbb
add
in
add
jge
jmp
add
sbb
and
xchg
or
mov
jne
fsubrs
mov
pop
lcall
pop
sub
loopne
dec
leave
cmp
jae
or
decl
mov
mov
inc
dec
in
repnz
jg
cmpb
jmp
jne
dec
dec
jne
out
scas
fwait
cmpsb
add
adc
mov
test
xchg
mov
dec
sub
inc
sbb
ret
jb
mov
lea
adc
icebp
push
cld
adc
cmpsl
push
stc
jmp
add
inc
pop
xchg
inc
lret
cmc
and
jp
xor
enter
adc
or
pop
jle
hlt
pop
xor
test
mov
dec
jae
lcall
adc
add
inc
test
jbe
jmp
push
mov
sbb
mov
shrb
int
sub
sbb
jg
aas
add
sub
push
dec
jmp
movsb
sub
lcall
in
xor
ret
cmp
xchg
nopl
loop
pusha
ret
imul
pop
mov
jbe
sbb
in
cmpsb
xor
pusha
and
sub
fsts
add
popa
jo
and
sub
loopne
mov
xor
jbe
push
push
jmp
pop
xor
ds
xchg
cmpsb
inc
add
in
xor
cmp
cmp
or
xchg
sub
leave
mov
dec
mov
jbe
lcall
adc
cmp
or
adc
lds
ret
mov
push
adc
daa
cmp
mov
jne
imul
push
xchg
add
and
cmp
cmp
cmpsb
ret
shll
in
pop
or
and
xor
adc
ss
jmp
movsl
lods
inc
adc
js
push
add
jle
pop
inc
lods
pop
push
sbb
loopne
mov
enter
dec
push
les
pushf
sbb
test
mov
shrl
mov
xchg
pop
inc
pop
add
mov
xor
jg
dec
jle
call
xorl
add
rep
pop
sarb
inc
push
test
addr16
pop
movsl
ret
aas
out
gs
testl
adc
cmp
mov
xor
imul
sbb
mov
dec
repz
shl
sti
mov
xchg
gs
cltd
xor
inc
mov
dec
xor
loopne
mov
dec
and
test
mov
js
push
ljmp
popf
testl
imul
imul
or
mov
mov
adc
cmpl
and
loopne
rcrb
lret
xor
mov
push
ret
add
imul
pop
clc
test
sbb
fbld
and
rcrl
adc
gs
push
add
shl
sti
imul
xor
mov
cmpsb
sub
shll
push
or
cld
mov
mov
xor
sub
adc
or
add
xchg
mov
std
das
inc
or
cmp
jge
xor
or
add
stc
dec
adc
or
push
ffreep
cli
sub
dec
lods
imul
adc
inc
sarb
add
roll
outsl
jmp
jnp
rcl
add
daa
push
aad
popa
push
test
push
inc
fisubrs
sarl
imul
cmp
adc
add
cs
mov
cmp
icebp
cltd
push
jno
ficompl
addl
jbe
jl
cmc
inc
xorl
outsl
jb
jne
imul
pop
lock
or
adc
dec
jmp
xor
jle
test
adc
ret
xchg
mov
aaa
or
xor
mov
inc
xchg
sbb
sub
in
adc
dec
jp
mov
add
adc
push
pop
dec
stc
push
test
scas
fs
testb
pop
inc
xlat
jo
mov
add
nop
popf
js
nop
adc
push
mov
cmp
add
subb
xchg
and
sbb
inc
out
in
xor
stos
fdivrl
dec
pop
sahf
leave
imul
ror
add
sbb
mov
cli
inc
daa
test
test
inc
or
fists
dec
pop
les
inc
inc
out
call
movsb
push
aam
adc
lret
orb
mov
in
incl
jne
inc
test
add
push
jbe
test
inc
je
mov
orb
push
push
adc
fwait
ret
xchg
adc
inc
push
rcrb
or
ss
xor
xor
inc
push
mov
sbbb
negl
pop
js
pop
xor
shr
loopne
js
sub
push
mov
adc
fistl
cmp
jae
dec
cmp
lock
xor
rorb
xor
jl
xchg
call
xlat
mov
mov
xor
enter
and
clc
fnsave
or
adc
out
jno
mov
push
pop
ja
mov
inc
popa
in
enter
push
pop
pop
or
sbb
or
fstpl
pop
imul
rcrl
aad
jns
jb
xorl
push
inc
lahf
jo
pop
movups
add
enter
or
pop
shl
in
xor
add
dec
fmuls
nop
push
into
pusha
adc
jnp
sub
sbb
pop
addb
dec
arpl
pop
je
mov
pop
mov
mov
push
mov
les
addr16
or
in
cmp
pop
test
ljmp
gs
xchg
sarb
jnp
inc
sbb
inc
sahf
mov
adc
push
cmp
mov
sti
xchg
bound
mov
sti
adc
cmp
aas
cmpsl
movsl
jne
fnstenv
mov
cld
fldt
mov
sbb
test
lret
lods
cli
pop
cld
ret
xor
xchg
mov
imul
lods
push
imul
fmull
cltd
pop
mov
and
mov
in
xchg
enter
test
es
lea
in
popf
sti
test
push
loope
jbe
and
pop
enter
ljmp
in
and
jne
jns
insb
sbb
fwait
sub
pop
pop
inc
dec
xor
push
mov
lahf
jbe
ss
gs
xor
in
push
loope
mov
std
pop
sub
sbb
adc
dec
add
gs
add
lds
js
shl
icebp
and
aaa
jae
xlat
adc
stc
movsb
jg
std
movsl
or
add
stc
inc
dec
cmc
incl
sbb
popf
insl
add
sub
insb
push
mov
and
je
cmpl
iret
divb
jbe
divl
jbe
inc
movl
test
outsl
shlb
pop
inc
mov
add
sbb
inc
mov
xchg
cmp
in
dec
test
adc
or
and
out
pusha
daa
nop
pop
inc
mov
xchg
into
adc
hlt
std
push
pushf
mov
pop
xor
lock
gs
mov
add
jmp
and
jne
mov
inc
push
mov
adc
mov
rorl
sub
xor
xor
je
test
lahf
add
or
pop
lahf
ljmp
pop
imul
push
xchg
inc
jnp
xor
pushf
inc
popf
loopne
inc
lea
inc
inc
imul
sbb
pop
push
imul
jo
sub
aad
movb
jle
ja
mov
jmp
pop
hlt
mov
pop
xchg
stc
pop
in
mov
sarl
imul
mov
pop
test
sbb
xchg
pop
and
adc
les
push
mov
xchg
pop
std
leave
mov
mov
pop
adc
fwait
lea
adc
pop
mov
aad
adc
inc
ljmp
les
test
adc
mov
add
or
mov
push
jne
dec
mov
sub
imul
lcall
movl
cld
inc
xchg
sbb
sbb
mov
xor
jne
add
les
stos
mov
sbb
or
xorl
dec
add
jbe
inc
push
sub
mov
sbb
inc
adc
sbb
mov
out
sbb
jbe
or
dec
rolb
sahf
cmp
mov
nop
dec
fisubrl
shlb
sbb
cmp
sbb
fildll
jecxz
mov
or
outsl
push
adc
add
mov
repz
test
inc
mov
jmp
and
fistps
imul
adc
jp
xchg
mov
inc
sub
jno
enter
pop
cmp
push
or
cwtl
pop
inc
pop
jle
test
ljmp
xchg
sbb
cmp
cmpsl
sbb
imul
subb
or
inc
sbb
es
sub
and
push
ret
aad
imul
fs
out
inc
and
pop
or
and
cltd
xchg
clc
push
pop
jbe
jae
lds
ret
cmpl
xchg
and
cmp
jo
mov
shll
mov
daa
mov
sbb
inc
xor
movsl
shlb
fsub
sbb
or
movsl
pop
adcl
sub
popa
popa
mov
rcl
pop
rcrb
std
adc
mov
and
xor
or
sub
dec
dec
imul
add
xor
inc
bound
rcll
pop
adcl
cmp
fldz
les
je
adcl
adc
imul
xchg
cmpl
movsb
out
sub
fnstenv
inc
inc
loope
inc
lahf
pop
and
push
adc
mov
add
pusha
xchg
mov
pop
sub
inc
cmp
mov
fdivr
mov
or
cmp
adc
aas
xor
jnp
in
mov
mov
adcl
inc
xchg
rcrl
cmpsb
in
dec
sbb
shll
jne
ljmp
push
add
add
ret
pop
adc
imul
xchg
xor
mov
cmp
push
jne
scas
fwait
cmp
clc
add
jns
push
lods
mov
in
sbb
mov
adc
adc
pusha
data16
lods
les
mov
push
or
stc
sbb
out
jmp
inc
adc
xchg
push
adc
pop
inc
xchg
das
in
push
xchg
imul
fildll
jo
or
or
jmp
cmp
repz
and
cmp
and
leave
shr
inc
leave
fists
xchg
insb
das
push
push
aas
mov
inc
loopne
out
imul
jae
jmp
pop
cmp
adc
cltd
inc
aad
inc
fidivl
jg
ja
ret
adc
mov
shrb
mov
push
fmuls
xor
and
lods
mov
adc
or
rorb
xor
push
xchg
popl
out
loopne
fstps
mov
dec
test
je
loopne
repnz
ja
shlb
xchg
push
push
lret
adc
mov
pop
jnp
or
sub
sbb
sub
push
dec
aaa
fs
xor
sub
sahf
andb
mov
outsl
and
dec
cmp
push
mov
dec
mov
divl
js
add
adc
sub
sahf
xchg
xor
subl
mov
scas
push
cmp
movsl
dec
cmpsl
rol
add
imul
fnstsw
xlat
and
mov
test
pop
jle
inc
es
fs
ret
lods
movsb
and
sub
rcr
dec
aam
mov
repz
push
mov
xor
jne
or
and
loope
cld
stos
push
gs
add
rcll
fcomps
push
jle
orl
ss
add
sub
push
test
jmp
decb
cmp
adc
icebp
std
dec
lds
mov
pop
out
and
jl
adc
cmp
and
jg
test
inc
jg
leave
loope
push
or
enter
xchg
pusha
push
pop
test
push
add
ret
out
push
push
cmp
add
xchg
dec
in
pop
add
iret
push
xchg
gs
and
mov
cmpl
and
ljmp
lds
ja
or
adc
in
inc
xchg
push
adc
xchg
inc
pop
inc
test
sub
mov
jne
aaa
aaa
mov
or
add
sub
or
rorl
out
fistps
sub
push
adc
js
les
mov
ret
mov
cs
mov
sbbl
mov
insl
mov
xor
adc
sbb
jno
sbb
imul
sbbb
sbb
dec
xor
gs
dec
dec
in
sbb
pop
dec
outsl
jbe
std
jl
leave
movsb
lds
add
lret
sub
jge
cmp
stc
into
dec
ror
jl
jne
clc
push
cmp
fwait
xor
and
lds
sub
out
filds
sub
lret
push
leave
xchg
pop
sub
dec
fcomip
push
add
in
push
push
movsb
xor
lock
test
jno
dec
sub
movsl
pusha
imul
pop
sbb
cmc
inc
cmp
dec
sbb
sbb
repnz
or
rorl
sbb
fisttps
sbb
mov
dec
dec
rorl
cmp
xor
dec
movsb
and
push
jnp
lds
stc
inc
shl
and
ret
scas
shlb
icebp
adc
loope
mov
cmp
mov
test
dec
push
fnsave
stc
out
test
or
jb
mov
push
roll
jb
xor
enter
pop
inc
inc
cmp
inc
sub
cmp
xchg
sarl
dec
in
aam
add
push
push
inc
cs
sbb
sbb
test
jb
jge
or
dec
es
inc
inc
mov
in
dec
mov
push
adc
push
insl
push
mov
dec
shll
cmp
pop
cs
adc
mov
jge
mov
xor
leave
lea
shll
inc
sbb
cmp
push
lcall
cltd
xchg
xchg
aas
mov
mov
mov
outsl
in
loopne
adc
inc
mov
and
gs
mov
addl
sbb
mov
adc
lds
sarl
in
mov
inc
xchg
sub
sbb
add
int3
and
cmpsb
add
or
lret
out
std
push
sbb
dec
in
insl
inc
loope
pop
inc
cs
roll
dec
lds
mov
mov
xor
ss
inc
mov
stc
shll
jb
stc
sbb
enter
roll
lea
dec
mov
jmp
xor
movsb
xor
inc
das
adc
iret
and
cmp
enter
sub
xchg
xchg
xchg
add
dec
aaa
adc
xor
in
mov
movsb
icebp
fnsave
or
in
mov
int
mov
adc
pusha
pop
push
insl
inc
jg
lods
lods
cli
add
dec
out
jmp
mov
inc
mov
in
pop
mov
mov
lret
ja
stc
cmpsb
pop
lods
lcall
pop
adcb
xlat
jne
push
mov
xor
cmpsb
rolb
aad
subl
mov
jns
dec
cmp
inc
jns
dec
sahf
pushf
icebp
or
cmp
dec
lds
test
xchg
or
in
repnz
push
and
sub
inc
sbb
popa
add
cmp
push
jae
fisttps
pusha
movsb
mov
and
dec
movsl
jmp
sub
stc
or
imul
imul
test
repnz
mov
dec
xor
push
cmp
leave
push
lret
pcmpeqw
imul
loope
and
sbb
cs
xchg
dec
push
jb
mov
jge
mov
jno
popa
sbb
gs
dec
mov
lret
lret
sub
dec
sbb
pop
inc
xor
mov
lds
dec
adcb
mov
mov
inc
std
mov
xchg
aaa
mov
sbb
jb
imul
xchg
out
push
cltd
and
jb
pop
gs
xchg
jno
loopne
orb
gs
cmpsb
in
xor
movsb
add
and
pop
jne
push
imul
adc
add
popa
add
sbb
fimull
or
and
jmp
dec
sub
leave
loope
and
int
jno
xor
jbe
push
aad
in
repnz
or
gs
inc
imul
inc
push
cmc
sbb
mov
test
lea
stos
pushf
cmp
cmp
xchg
imul
dec
in
movsl
pop
pop
in
or
cmp
ds
sbb
mov
jne
add
bound
std
pop
inc
and
xchg
sahf
cmp
xor
addr16
sub
leave
sub
mov
cltd
in
dec
push
cltd
sub
jge
cltd
in
pop
popa
sub
dec
sub
xor
cltd
in
jne
adc
jge
std
pop
xchg
dec
jb
test
xor
jb
xchg
cltd
lods
mov
push
jbe
lret
add
pop
adc
pop
add
test
add
cmp
jbe
push
pop
mov
addr16
ljmp
dec
add
sub
add
mov
mov
adc
jmp
in
add
add
pop
pop
push
pop
cmp
jne
mov
push
imul
jne
inc
xor
subl
or
inc
dec
fs
popa
adc
cmp
popf
pop
push
or
push
sbb
popa
xchg
and
and
xchg
int
mov
int
loope,pn
adc
add
add
stos
sub
mov
cmc
add
push
imull
push
jne
mov
movsl
jne
aaa
enter
sub
xlat
dec
fadd
add
jge
in
jo
jp
js
mov
add
pop
push
jo
adc
dec
aaa
mov
subb
cmpsb
xor
outsl
add
jg
fmull
cmp
cmc
jae
cli
pusha
jne
lea
imul
pop
sub
inc
outsb
adc
hlt
add
ss
xchg
lret
mov
addr16
shl
mov
push
add
ret
or
arpl
arpl
mov
popa
arpl
mov
jl
push
jno
xchg
add
lock
mov
pop
aaa
inc
out
lods
xchg
pop
xchg
cmp
sti
and
imul
test
pop
and
in
pop
inc
push
cmp
pop
mov
mov
repz
rorb
gs
loope
ljmp
ljmp
imul
mov
mov
lds
add
ljmp
jge
ss
aaa
sbb
add
pusha
xchg
xor
dec
jl
rorb
std
cmpsl
jge
out
adc
ja
inc
imul
sbb
mov
inc
or
sbb
loope
inc
insb
dec
lods
xor
test
cmp
dec
roll
jp
shrb
pop
inc
mov
ss
stc
jae
nop
adc
test
mov
shrb
mov
push
inc
mov
imul
inc
mov
fsubl
in
mov
imull
xor
lock
or
or
lahf
and
inc
push
mov
out
in
sbb
pop
jmp
lea
and
inc
adc
mov
ja
sbb
xor
sahf
push
aam
or
aaa
adc
push
in
add
sbb
in
icebp
mov
ja
repnz
mov
les
fucomp
sbb
mov
cltd
imul
mov
mov
fstl
mov
iret
mov
push
bound
pop
xchg
test
call
stc
imul
inc
sbb
inc
es
inc
xchg
dec
stos
in
or
dec
mov
xchg
sbb
lods
dec
arpl
push
pop
sbb
mov
iret
dec
fcmovb
jno
push
mov
leave
pop
jge
nop
xchg
or
add
pop
sub
push
push
movsl
std
pushf
pop
iret
mov
popf
fstl
mov
in
and
push
sub
bound
pop
pop
jae
cld
aad
xchg
cmp
stc
mov
and
in
xor
inc
sbb
adc
or
jmp
or
pop
sbb
add
mov
inc
loop
in
dec
idivl
ffreep
or
push
or
xchg
cltd
nop
lret
mov
dec
mov
mov
test
test
subb
jbe
sub
or
test
loope
shrb
rorb
fdivrs
cs
pop
in
and
push
push
pop
push
shll
es
add
andl
pop
or
xchg
xchg
mov
add
les
cltd
cmp
dec
stos
jne
decl
rcrl
adc
lock
nop
jle
cmp
jne
cmp
and
adc
cmpl
stos
xchg
popa
sub
scas
inc
xchg
pop
jne
ds
int
in
mov
icebp
xchg
and
enter
xor
add
mov
mov
ja
xor
push
loope
test
cmpsl
incb
std
enter
clc
push
stos
mov
pop
pushf
add
mov
rorl
out
je
lret
and
stc
cmp
xchg
add
xor
lock
cmp
push
fstl
push
push
jg
pushl
xor
or
jbe
mov
jge
xor
inc
jg
test
dec
loop
sbb
add
sbb
addb
loop
jmp
jle
mov
cmp
jge
sbb
sbb
push
inc
div
out
cli
dec
and
push
sbb
cmp
cmp
mov
shll
adc
imul
data16
das
push
in
je
sub
jmp
xor
sbb
aaa
or
or
repnz
mov
cmp
mul
out
ret
cmp
jne
and
push
xchg
loopne
movsb
inc
jmp
or
pop
jle
push
filds
push
cld
cmpsb
fcmove
mov
push
sahf
mov
sbb
adc
dec
mov
rcrb
dec
jnp
loop
push
movsb
push
rol
pop
xor
lods
push
mov
push
enter
add
push
imul
loope
in
push
fsts
pop
filds
leave
jo
popf
ss
mov
lret
test
jb
repnz
adc
lea
pop
jb
call
lea
ljmp
js
push
and
add
add
jne
js
js
jle
inc
cmc
mov
pop
hlt
sbb
mov
daa
aam
jge
add
sub
pop
imul
xchg
loopne
mov
pop
pusha
pop
ror
and
xor
cli
int3
rolb
cmp
sub
lea
pop
aas
jmp
adc
or
pop
push
adc
roll
rol
mov
and
cmp
shrb
or
pusha
fs
fwait
stc
call
xchg
popf
js
sbb
xor
sbb
xor
pop
in
push
pusha
pop
mov
push
jle
mov
movsl
lods
and
push
lret
cmp
dec
aad
ret
fmul
sarl
insl
inc
cmp
mov
roll
jno
in
fwait
adc
popf
std
aaa
insl
mov
lock
and
inc
or
ficomps
cmpb
fstl
mov
hlt
lods
mov
xchg
jge
cli
cli
add
jbe
pop
pop
xchg
pop
mov
inc
mov
jg
mov
push
or
xor
cmc
adc
sub
sbb
sbb
loop
mov
in
jne
jns
call
sbb
or
push
std
add
cltd
and
add
cmc
mov
popf
push
lret
sub
jb
add
pop
mov
std
jle
xchg
mov
popf
adc
test
sbb
push
jbe
push
dec
rolb
sbbb
sbb
test
jne
xor
inc
rol
out
cmp
icebp
imull
lret
adc
cli
imul
mov
sub
out
mov
insl
pop
cmp
mov
incb
add
jbe
xchg
ds
sbb
mov
push
pop
jne
sub
or
jbe
pop
inc
in
xor
cwtl
add
cmp
imul
outsb
stc
add
or
pop
xorb
add
lock
out
in
xchg
mov
sahf
sbb
xlat
loopne
jecxz
popl
shr
and
pop
or
or
push
mov
dec
inc
popa
adc
in
fistl
pop
jne
leave
test
call
xor
jne
fisubrs
push
jne
or
imul
adc
inc
pop
test
mov
dec
in
xchg
cmpsb
scas
sub
scas
insl
in
fwait
cli
lods
sbb
adc
popf
inc
jle
je
jns
adc
jle
in
imul
sub
imul
outsb
jne
mov
mov
pop
cli
adc
adc
add
popf
loopne
adc
jle
or
imul
imul
lret
addr16
jge
imul
test
imul
pop
adc
les
sahf
out
fisubs
jnp
dec
pop
insl
std
lahf
out
je
pushf
add
add
add
or
add
pop
or
or
jae
xchg
sbb
inc
xchg
dec
hlt
cwtl
cmp
inc
cmc
rcrb
and
mov
decl
stos
rorb
xor
adc
jmp
xchg
dec
std
adc
and
dec
jne
add
xor
push
shll
sbb
mov
jl
arpl
xchg
xchg
xchg
xchg
imul
aad
leave
imul
test
pop
add
pusha
mov
std
and
jne
mov
inc
and
or
imul
pusha
je
adc
push
push
or
rorb
imul
bound
inc
jbe
pop
imul
add
lahf
xchg
dec
test
jbe
imul
mov
sub
pop
mov
imul
test
pop
mov
in
insb
mov
sbb
in
push
dec
cltd
outsl
out
in
jp
imulb
insl
insb
jp
aad
and
adc
out
mov
dec
insb
lret
cld
add
test
push
dec
dec
or
sbb
je
push
pop
cli
mov
mov
test
icebp
dec
repz
push
cmc
add
lock
push
in
es
xor
in
lock
insl
or
rorb
push
insl
and
out
jmp
push
dec
andb
push
push
lcall
inc
inc
add
add
pop
push
xor
insl
rcrb
dec
mov
pop
rolb
push
shlb
lock
adc
cmp
es
and
jl
adc
inc
xor
or
dec
mov
shrl
xchg
sbb
enter
cmpsl
hlt
into
or
xchg
mov
jg
ds
and
test
ss
pop
lock
and
test
shr
cmpsb
jae
sub
mov
ja
inc
inc
inc
mov
leave
jl
lds
jg
add
inc
mov
sub
add
insb
mov
lods
rcrb
std
cmp
push
add
out
xor
out
adc
or
loopne
xchg
jecxz
cmc
inc
sub
jne
lcall
mov
jae
loopne
out
add
and
jb
mov
cmp
addw
or
cmp
mov
and
in
int
push
jns
dec
in
inc
pop
mov
dec
das
mov
dec
dec
in
pop
je
jae
mov
sub
mov
pop
jne
fstpt
push
outsl
enter
sub
mov
cmp
in
add
icebp
pop
or
adc
push
outsb
mov
push
pop
push
add
mov
and
xor
add
dec
pcmpgtw
int
add
sti
push
push
mov
push
call
je
arpl
push
cli
pusha
xchg
xchg
loopne
sbb
push
or
popf
inc
inc
xchg
push
lcall
mov
shll
jno
popa
sbb
lods
imul
jl
cmp
outsb
mov
mov
inc
pop
loopne
call
jge
aaa
cld
mov
fwait
or
in
outsb
adc
test
mov
daa
xchg
sbb
jb
xchg
sub
leave
xor
cmp
sub
xor
pop
leave
add
sahf
dec
and
insl
insl
sub
cltd
inc
leave
inc
push
das
push
push
enter
pop
in
sub
push
push
xchg
add
push
inc
pop
lock
dec
rcrb
pop
cmp
mov
add
shr
into
xchg
and
push
in
sahf
mov
loopne
jne
adc
xchg
xchg
inc
push
mov
mov
pop
cmc
jne
jno,pt
push
dec
jle
jg
imul
jmp
mov
dec
jmp
fmul
test
fdivs
mov
popf
add
xchg
adc
enter
xchg
mov
inc
cmp
adc
stc
loopne
xacquire
mov
and
xchg
adc
jle
mov
xor
out
cmp
scas
adc
nop
lahf
scas
js
xor
xor
js
rorl
push
mov
or
stc
jl
pop
jne
adc
or
add
stc
ss
pop
repz
jb
adc
test
lret
xchg
dec
movsl
rorb
loopne
out
mov
fs
or
sbb
xlat
jne
jns
aaa
nop
dec
mov
fstpl
jns
js
inc
jno
sub
xor
cs
adc
push
sbb
add
imull
or
jbe
ret
dec
imul
not
pop
mov
cs
pop
sub
test
in
jp
mov
mov
bound
in
xchg
cmp
fs
mov
jo
outsl
lds
dec
jns
out
mov
mov
jne
add
movsl
fsubrl
adc
xchg
dec
inc
stc
test
imul
movsb
xchg
popw
in
mov
mov
outsb
cmp
or
jp
mov
pop
jecxz
jne
adc
lods
jb
negb
sub
mov
or
inc
lret
cld
xchg
mov
movsb
jb
inc
mov
adcl
sbb
mov
cld
into
fmul
aaa
add
push
jns
xchg
jne
add
adc
scas
or
pop
mov
add
call
mov
leave
sub
push
mov
jae
ljmp
mov
or
outsl
jne
sarb
dec
jae
add
imul
add
add
mov
push
ret
enter
lods
xorb
inc
and
xchg
sbb
dec
and
add
rorb
cmpsl
ret
daa
and
int
aas
ja
mov
push
sub
dec
test
sbb
outsb
shll
push
imul
mov
sub
mov
pop
sti
std
lahf
mov
adc
pop
push
adc
push
or
icebp
fsubl
adc
fwait
sub
data16
test
inc
cmp
or
cmp
xchg
dec
adc
aad
test
add
add
mov
rolb
adc
add
fldcw
or
inc
push
push
dec
sub
ss
mov
lret
mov
std
lods
std
ficoml
fiaddl
push
pop
jno
test
xchg
mov
lcall
add
fst
pop
stos
dec
jbe
mov
loop
jb
mov
lea
mov
aas
fwait
inc
mov
inc
sbb
cmp
mov
jo
add
nop
push
jns
xchg
cli
push
insb
sub
jge
ljmp
mov
inc
rcr
sub
and
inc
test
cmp
mov
pop
pop
imul
ljmp
or
pop
xchg
test
mov
cmp
outsb
sbb
and
shlb
mov
enter
dec
and
add
and
pop
jmp
pushf
lods
sti
and
xor
mov
dec
adc
fidivl
pop
arpl
fisubl
mov
add
and
pop
push
shlb
xchg
dec
push
pop
jbe
sub
or
roll
sub
sub
insb
jno
in
cmp
pcmpgtw
insb
or
repnz
loopne
test
cmp
inc
cmp
sbb
clc
movsb
rcr
leave
push
jae
pop
xor
mov
mov
aaa
in
add
pop
pop
mov
or
inc
sbb
adc
shlb
push
xor
adc
movsb
add
sub
lock
pop
aad
push
mov
and
add
mov
sub
icebp
out
insb
movsl
dec
jbe
cmpl
push
imul
imul
nop
push
xor
cmp
mov
cmp
daa
mov
rolb
push
loope
movsb
aaa
test
sbb
add
xor
dec
pop
mov
push
es
mulb
ret
addr16
out
gs
cmp
push
mov
dec
jb
jg
call
mov
mov
loopne
cmpsl
in
add
imul
cmp
xchg
dec
aas
xor
call
test
jne
jg
mov
or
jne
nop
cmp
inc
push
mov
shlb
jge
les
mov
sub
daa
std
cwtl
push
adc
addb
inc
mov
mov
popa
sbbb
lea
add
pop
mul
jmp
add
repnz
fimull
ss
add
sub
imul
jmp
jg
lcall
push
mov
adc
adc
sbb
dec
cmp
cmc
add
icebp
and
aad
adc
cld
lock
arpl
jge
fnstenv
and
imul
cmp
mov
movsb
cmp
jp
test
or
insb
or
add
xchg
sbb
and
xor
jbe
mov
add
push
test
cmp
pusha
xchg
and
add
addr16
or
dec
pop
aaa
cmpsb
testl
in
pop
inc
adcl
fdivs
shlb
add
jns
scas
ljmp
and
mov
or
shll
xor
ret
pusha
mov
cmp
adc
movsl
sbb
insl
icebp
cmp
jbe
ljmp
lods
add
mov
jo
push
sub
add
hlt
adc
je
push
mov
pxor
and
imul
inc
mov
in
mov
fstl
mov
push
test
push
sub
aas
pop
mov
push
dec
and
out
mov
sub
cld
test
sub
and
xor
pop
sbb
incl
ljmp
pop
mov
test
jmp
and
cmp
jbe
cmp
jbe
adc
ss
add
loope
decb
mov
movsb
push
add
roll
xor
cmp
jle
adc
sar
cmp
jle
cmpl
or
push
add
rcll
sbb
push
gs
xor
push
imul
dec
scas
mov
inc
lods
bound
in
lahf
pop
dec
pop
or
jne
sbb
mov
xor
aad
sahf
enter
dec
mov
int3
je
shll
out
sub
imul
push
mov
sbbl
sub
test
sub
mov
je
jns
xchg
outsb
dec
cltd
push
dec
shrl
repz
adc
es
push
imul
pushf
insl
cmpsb
cmp
mov
cmp
paddd
add
jbe
movsl
lods
xchg
mov
jne
out
xchg
jne
mov
mov
aas
sbb
and
and
xorl
enter
rorb
adc
dec
cmp
mov
cmp
sub
xlat
jns
pop
cwtl
or
sbb
or
mov
sbb
cmp
pop
in
sub
xor
add
cmp
or
dec
repz
add
mov
movsb
mov
jne
gs
xchg
and
sbb
mov
dec
pop
jle
nop
or
insl
xor
cmp
jne
sbb
or
js
in
inc
jge
in
int3
cmp
fwait
mov
fs
popa
sar
ret
xor
imul
push
call
dec
sbb
ljmp
imul
adc
xlat
add
mov
cwtl
jbe
pusha
insl
andb
and
clc
jge
mov
imul
sbb
mov
rolb
imul
push
cmp
idivb
mov
jecxz
mov
mov
sbb
xor
call
and
or
jno
and
jle
and
inc
pop
jb
rorb
xor
fldenv
mov
or
jge
pop
imul
sub
pop
add
push
fs
mov
cli
std
in
and
repz
pop
cmp
mov
stc
fidivrl
sub
stos
gs
sub
mov
push
pusha
or
jne
das
xchg
jmp
inc
pop
adc
adcb
stc
iret
dec
fldt
mov
xor
sbb
inc
cmc
cmp
fcoml
ret
add
sbb
jne
jle
insl
adc
mov
ss
mov
aaa
push
xchg
mov
push
lods
shlb
pop
inc
jmp
mov
cmp
inc
sbbb
psubsb
pop
mov
lock
push
ss
jne
shlb
or
das
orb
pop
gs
lcall
pop
push
push
fistl
mov
add
fcomps
mov
pop
push
pop
imul
mov
cmp
call
in
cmp
jne
push
push
dec
dec
mov
sbb
add
sarb
pop
jmp
cmpl
mov
pop
mov
sahf
stc
data16
test
sbb
gs
adc
or
cmp
nop
add
repz
mov
aad
popa
enter
imul
in
push
in
or
adc
push
mov
and
dec
outsb
sub
add
push
inc
test
sub
push
cmp
pop
add
mov
mov
cmp
mov
or
push
sarl
inc
dec
ror
jle
imul
test
push
je
imul
cli
loope
dec
fwait
jbe
cmp
jl
pop
jge
push
xor
push
orb
shll
xchg
sbb
push
subb
fisubrs
sarl
jge
ljmp
sub
push
in
fsubr
outsb
sbbl
push
addr16
popa
mov
sbb
adc
nop
icebp
push
xchg
faddl
cli
movsl
xor
hlt
out
xor
jmp
sub
mov
adc
aad
in
std
ja
cmp
push
pop
push
add
or
or
add
loopne
xchg
shl
cmp
insl
fcompl
sub
add
sub
adc
pop
sub
rolb
loop
cmp
nop
jo
inc
imul
adc
adc
pop
cmp
mov
shll
pusha
adc
stos
cmpb
stos
mov
iret
stc
in
sbb
jne
xor
mov
jle
imul
jns
cmp
fsubrs
sbb
enter
add
imul
rclb
fimull
cld
xor
imul
popf
popf
imul
popf
xor
fnstsw
adc
add
or
fwait
jno
jg
sbb
lret
adc
andl
push
sub
fadd
mov
dec
subl
roll
xor
sub
xor
stc
mov
pop
mov
mov
push
cltd
in
pop
mov
daa
fmull
xor
pop
mov
pop
addr16
fistps
adc
cmp
jge
test
or
dec
jmp
add
ret
or
les
nop
add
sub
std
jmp
stc
cmp
xchg
or
icebp
gs
inc
adc
push
in
dec
enter
pop
fstps
aad
inc
and
shrl
in
leave
mov
enter
test
addb
and
xchg
iret
jne
mov
mov
scas
in
sbb
jno
xchg
push
push
inc
imul
movsl
repnz
push
dec
aam
jb
push
mov
scas
adc
or
add
ds
in
bound
xchg
scas
in
punpckhwd
leave
cmp
repnz
pop
mov
insl
mov
add
test
sub
jno
and
dec
in
loopne
aas
pop
imul
jbe
cmp
sub
movsl
push
sbb
jo
push
push
sub
cltd
fcos
in
ja
xchg
jne
adc
enter
nop
lcall
jmp
dec
in
repz
fucomp
cmp
repz
and
xor
jmp
movsb
cmp
jmp
repnz
add
jmp
jno
push
imul
lcall
jmp
lret
cmp
dec
repz
lods
jmp
mov
jmp
jmp
imul
xchg
out
xchg
jmp
sbb
jmp
sub
repz
add
jge
rcrl
sbb
pop
jns
cmp
mov
imul
lcall
jmp
xchg
inc
cmp
push
jns
jae
or
pop
jmp
mov
jmp
jmp
imul
imul
jmp
stc
sub
stc
xor
xchg
add
pop
sub
and
int
inc
lcall
aas
nop
out
and
jmp
repz
or
jg
movsb
stc
add
pop
imul
cmpsb
ljmp
xchg
call
cmp
fmuls
dec
ja
pop
std
mov
sbb
out
jbe
xchg
mov
es
adc
xor
jle
inc
shr
push
push
xchg
fsubrl
out
sahf
rorb
jmp
sub
mov
es
pusha
mov
xchg
sbb
ja
call
call
mov
dec
jae
call
xchg
call
rclb
mov
subb
pop
push
mov
pop
xchg
inc
lcall
imul
test
movsb
stc
jb
mov
rorl
imul
lret
pop
inc
call
xor
xchg
xchg
cmp
fucompp
cwtl
adc
das
sub
jae
and
cmp
movsb
stc
jb
sbb
push
ret
fdivr
add
push
adc
jp
push
pop
pop
sub
pushf
sbb
mov
addr16
pop
lods
cmp
pop
push
cld
push
out
sbb
out
in
and
icebp
pop
es
lcall
test
inc
clc
mov
sub
xchg
bound
loope
push
jb
nop
outsl
es
adc
xor
xchg
adc
sarl
sub
in
fsubrs
lods
jb
fsubs
movsl
push
xchg
mov
sbbb
xchg
sub
in
sub
inc
adc
dec
or
jns
cltd
nop
lret
jno
insl
gs
adc
sbb
mov
popa
shrl
pop
sbb
nop
lret
test
push
xchg
or
rolb
cmp
shll
cmp
lret
dec
inc
sub
cltd
nop
sub
inc
sbb
push
xchg
ja
imul
add
push
jg
lods
pop
pop
sub
xchg
jg
adc
pop
mov
mov
push
cltd
pop
push
and
adc
push
jns
adc
xchg
pop
scas
xor
push
adc
adc
jp
or
popa
or
js
inc
call
sbb
lds
cmp
shlb
nop
lret
cmp
lds
sbb
in
adc
adc
cmovg
inc
popa
push
mov
push
fisubs
pop
addl
aaa
iret
jp
mov
insl
and
or
stos
cmpsl
leave
mov
jp
insb
int3
sbb
mov
imul
push
les
or
cmpsl
xchg
ds
stc
xchg
sbb
mov
push
pop
fwait
inc
enter
popa
in
imul
bt
inc
cmp
push
sub
push
sub
jne
push
loopne
add
cmp
or
jge
lods
add
sar
mov
addps
inc
push
rcrb
inc
or
imul
mov
imul
mov
outsb
mov
roll
dec
loope
insl
jmp
push
ja
lods
sbb
add
pop
out
in
mov
rcr
in
lret
add
mov
push
ljmp
leave
pop
ljmp
jae
ljmp
push
popa
mov
or
pop
mov
orb
push
add
call
aad
mov
ds
imul
sub
aaa
push
adc
and
jl
xchg
add
adc
mov
push
mov
and
fsubrp
add
xlat
and
cmp
jmp
mov
adc
inc
sbb
cmp
mov
jns
lcall
lret
pop
adc
test
pop
sbb
add
lret
stc
jecxz
sbb
aam
lret
test
and
test
loope
in
pop
pop
js
jne
sub
push
testl
push
ljmp
jb
pop
push
cmpsb
cmp
jns
mov
ds
rcrl
pop
mov
add
inc
mov
adc
sbb
pushf
fimull
decb
clc
xchg
sbb
xchg
add
loop
sbb
test
shll
xchg
or
mov
in
dec
lods
mov
sbb
xchg
or
pop
inc
sub
in
xlat
pop
xchg
mov
mov
test
and
push
inc
adc
js
mov
insl
sub
nop
lret
adc
adc
lcall
test
adc
enter
inc
or
in
incb
push
jnp
push
notl
adc
dec
dec
cmp
sub
jl
sub
cs
dec
call
imul
pop
mov
inc
cmp
fbstp
movsb
mov
pop
push
cmp
bound
inc
add
or
in
push
std
loope
icebp
lret
test
or
cwtl
or
or
push
cmp
xchg
jp
mov
int
inc
adc
dec
or
movsb
mov
mov
cmpsb
cmp
loope
inc
lods
add
bound
loope
xlat
xor
jno
cmp
cli
clc
adc
addr16
add
xor
adc
enter
push
in
imul
xor
push
pop
inc
movsl
inc
inc
orb
sub
jl
insl
clc
jge
loop
fcom
in
shr
insl
mov
xor
push
mov
add
dec
adc
addr16
sbb
adc
sbb
xor
loope
dec
inc
and
mov
psrld
ja
rolb
dec
jmp
pop
sarb
sbb
mov
dec
pop
insl
pop
movsl
adcb
sub
xor
loope
clc
push
dec
push
inc
dec
mov
ljmp
mov
loope
mov
sub
jo
sahf
inc
mov
mov
test
fwait
sti
pop
pop
mov
push
imul
subl
pop
lahf
or
fs
clc
add
push
adc
in
popa
jb
repnz
loopne
icebp
inc
adc
push
jecxz
xchg
adc
inc
or
or
dec
pop
inc
enter
sub
ja
adc
bound
push
mov
or
popf
pusha
sub
in
leave
mov
xchg
inc
or
dec
pushf
es
insl
or
enter
in
or
pop
sti
dec
push
loopne
push
fisubs
arpl
add
pop
xchg
mov
mov
and
hlt
lahf
loope
fistpl
arpl
test
gs
pushf
or
push
cs
iret
xor
je
push
and
in
mov
jnp
dec
or
sbb
rorl
fnsave
cwtl
std
je
imul
adc
pop
ds
or
jl
xor
mov
adc
test
ret
sbb
scas
mov
adc
or
enter
add
add
in
sbb
lret
mov
cltd
push
loopne
dec
mov
aad
sbb
loopne
repz
pop
inc
je
mov
addl
push
inc
push
pop
nop
mov
xchg
insb
popa
loope
std
mov
sub
std
inc
negb
push
pop
adc
stc
insl
outsl
idivl
mov
mov
push
daa
nop
into
xor
out
daa
lds
pop
cmpsb
es
out
add
and
mov
inc
xor
mov
test
sar
xor
scas
sub
inc
inc
movsb
dec
cmp
aaa
sub
dec
pop
movl
jp
push
cmp
inc
pop
test
jge
enter
je
outsl
ljmp
aad
sub
in
and
cmp
adc
insl
aad
inc
mov
loopne
shll
adc
xor
dec
loope
sbb
sub
add
or
or
mov
and
lods
jle
leave
mov
pop
cmp
mov
or
jl
bound
mov
loope
fstpl
mov
fbld
int
test
sub
out
sti
imul
leave
xor
fbld
adc
mov
ret
popf
inc
or
in
loope
dec
xor
popf
cmp
sbb
cmp
insl
adc
mov
pop
dec
dec
mov
pop
add
add
sbb
movsb
pusha
test
mov
sub
adc
jo
xor
insb
and
dec
in
and
adc
test
sbb
add
rclb
xor
mov
pop
or
adc
cmpl
jle
imul
add
test
cmp
daa
adc
dec
pop
cld
pop
cld
jb
push
sbb
adc
push
add
inc
sti
push
imul
aad
in
sti
cmc
faddp
add
sbb
xlat
sub
lds
imul
sbb
mov
dec
sbb
imul
ficoms
mov
add
lret
sub
movsl
jge
arpl
lds
int
sub
mov
lea
xor
aad
shll
push
lods
mov
std
sub
fwait
ss
add
cmpsl
std
out
fdivl
or
dec
clc
or
lock
std
jge
and
repnz
out
pop
xor
loopne
icebp
push
js
popf
and
push
sub
or
and
add
and
fs
out
mov
cmpb
xor
adc
or
fildll
sub
add
or
mov
mov
sahf
test
fiadds
daa
into
sahf
inc
sbb
imul
add
cmc
cmp
cli
por
push
test
cmp
out
mov
cmp
and
jae
inc
mov
push
ds
xchg
shll
enter
push
adc
pusha
movsl
hlt
pop
and
fbstp
enter
movsl
hlt
aas
loope
scas
xor
pop
jecxz
stos
xor
push
ljmp
arpl
mov
lcallw
ljmp
pop
mov
sbb
add
cmp
adc
cld
enter
testl
sbb
sbb
out
jb
jne
jge
mul
rolb
push
sub
call
mov
pop
in
push
std
and
push
ljmp
imul
pushf
mov
inc
mov
pop
hlt
data16
ja
fucomp
loop
xchg
in
add
cmp
loope
popf
lcall
sub
stos
lds
inc
pop
in
lahf
or
mov
jo
in
psubsw
sahf
test
sahf
jns
fsubrs
sub
xchg
sbb
mov
nop
and
and
out
sub
ret
inc
jb
fsubr
mov
mov
xchg
out
jae
adc
xchg
loope
push
and
pushf
dec
push
and
and
jno
dec
sbb
les
cld
push
jo
sarb
popa
cmp
cmp
jle
xchg
rcll
shrb
sub
rolb
add
sbb
cmp
andb
mov
imul
test
sub
jb
sub
or
mov
or
aam
movsl
xchg
mov
add
add
adc
pop
orb
test
les
test
push
jb
and
sbb
pop
xchg
popl
test
pop
pop
xor
enter
sbb
dec
sbb
bound
mov
out
lods
xor
icebp
loop
out
sbbl
cmp
sarb
xor
imul
in
imul
mov
lods
mov
dec
test
mov
arpl
pop
add
sbb
sbb
xchg
jns
inc
ljmp
and
adc
daa
mov
xor
mov
add
pop
jne
pop
push
push
jb
jecxz
pmullw
lds
or
insb
popf
test
ljmp
and
inc
ljmp
sbb
fists
adc
loop
sub
cld
outsb
lea
loop
imul
aad
xor
sbb
add
adc
or
or
in
adc
cmovno
fneni(8087
shlb
ljmp
mov
push
and
and
data16
clc
lock
out
pop
pop
out
clc
push
pop
fs
cmp
jb
cmpsl
lods
lock
add
xchg
sub
mov
jb
fistl
add
dec
push
mul
sbb
xchg
and
aad
add
jno
shlb
pop
fwait
loop
int
add
out
dec
icebp
test
mov
push
lods
sti
or
lea
ficompl
push
rorl
sbb
cmp
adc
pop
xchg
xor
dec
jmp
in
dec
pop
stc
push
xor
push
je
add
cwtl
and
mov
add
xor
fucomi
lret
sub
push
or
push
dec
mov
pop
sbb
inc
icebp
sbb
jne
push
jno
shl
xlat
dec
push
fpatan
pop
lods
xchg
dec
jge
add
fnsave
push
fisubl
cmp
or
addr16
loopne
stos
cmp
pushf
out
adcl
loope
dec
inc
jne
ret
push
mov
jmp
adc
aaa
or
fstp
inc
call
mov
jb
scas
jmp
xor
xchg
fsubr
or
add
pop
shll
push
popf
and
sub
aaa
xor
pop
jns
jne
loope
pop
movb
pop
repnz
mov
dec
sbb
ss
fnstsw
jne
or
inc
cmpl
addb
arpl
test
outsb
adc
jb
test
sub
dec
cmc
fcomps
inc
repnz
fsubs
ljmp
ja
mov
and
insb
dec
jne
xchg
mov
pop
clc
rcll
addl
pop
adc
pop
mov
in
push
sti
xchg
nop
fidivl
jmp
inc
mul
out
sar
ljmp
lock
pavgb
ljmp
mov
les
in
sub
bound
aad
jno
mov
pop
cmp
inc
inc
xlat
inc
ss
pop
cmp
mov
jle
push
cmp
adc
sub
lods
xlat
outsl
stc
cltd
and
leave
jns
push
mov
push
mov
push
cmp
push
test
iret
imul
mov
outsl
dec
test
adc
fstl
pop
mov
and
popf
cwtl
sbbb
add
nop
xchg
or
rcll
adc
arpl
and
in
in
adc
mov
jne
lcall
jl
cmp
lods
inc
or
inc
imul
mov
and
push
add
ss
loopne
shll
xor
push
jp
testb
test
out
jmp
hlt
sub
leave
fsubrs
insl
ret
xor
or
jmp
adc
push
test
inc
mov
dec
ja
inc
fnsave
fwait
ljmp
test
jmp
xchg
das
cmp
adc
popa
ljmp
cmp
inc
or
int
add
popa
loop
or
clc
adc
je
lods
sub
cmpsl
xor
adc
or
call
sbb
ret
icebp
inc
adc
repz
iret
pop
psubd
mov
ret
inc
and
mov
sbb
sbb
aad
cmp
mov
sub
andb
pop
cltd
inc
sarb
adc
in
dec
mov
mov
mov
adc
dec
xchg
pop
ret
gs
pusha
subb
mov
iret
inc
sub
mov
rol
lods
mov
stos
rcl
lahf
test
adc
in
add
scas
xor
pop
mov
cltd
xor
cmc
add
push
popa
add
mov
mov
cmp
push
cwtl
push
in
jecxz
add
or
sub
mov
repz
push
mov
push
imul
pop
and
gs
aam
or
mov
das
dec
ret
and
ljmp
enter
in
lods
sbb
outsb
mov
popf
sarb
xor
ret
out
mov
aam
sarb
mov
cmp
inc
pop
aam
outsb
aad
dec
mov
cmp
loopne
xor
aas
jne
push
in
and
and
pusha
cs
xchg
pop
lock
enter
xchg
ss
jg
gs
bound
addr16
sahf
popa
or
mov
xchg
dec
mov
in
jmp
adc
mov
cmp
xor
aam
cmp
dec
cs
inc
lods
pop
repnz
sbb
fwait
cmp
out
out
xor
lods
push
jg
sbb
ret
or
in
pop
push
add
enter
cli
andb
sub
adc
xor
sub
testb
add
das
sub
or
aad
test
pusha
movsb
rep
repz
mov
and
test
sbb
lods
add
insl
lcall
in
mov
clc
aam
and
leave
out
in
icebp
mov
push
mov
loope
test
call
lahf
mov
out
ja
and
add
mov
inc
cld
enter
mov
push
movl
sti
pusha
add
xor
cmp
xor
ret
sub
xor
xchg
or
pop
add
leave
inc
or
stc
cld
enter
xor
ds
cld
jb
fwait
inc
in
sarb
imul
or
jbe
jne
enter
xchg
mov
or
inc
mov
fchs
movsl
pop
xchg
jo
jae
leave
ljmp
mov
add
mov
or
shrb
imul
xor
push
push
inc
inc
lds
jl
xchg
push
call
ljmp
push
imul
or
pushf
mov
dec
push
flds
jl
roll
sarl
xor
push
pop
cs
ja
das
or
xchg
pop
rcrb
pop
mov
add
ret
bnd
testl
push
ds
jg
mov
enter
mov
js
push
lods
jg
push
imull
pushf
push
lret
shll
mov
ljmp
jbe
and
fsts
xorl
push
and
add
shr
or
push
or
or
loope
mov
xlat
xchg
movsb
xor
decb
enter
mov
imul
or
dec
xor
xchg
lds
push
adc
mov
sub
mov
mov
scas
xchg
sub
leave
jmp
pushaw
adc
push
lea
add
ss
push
mov
ret
sbb
stos
dec
dec
shrb
in
push
mov
das
jno
mov
fisttpll
or
cmp
aas
mov
cmp
sub
and
pop
cmc
sub
push
loope
jge
sub
insb
add
sti
add
jecxz
mov
or
flds
jae
or
inc
lcall
sbb
sbb
push
push
fs
ror
pop
sti
jns
and
dec
imul
sub
inc
inc
inc
push
sar
jno
cmp
fnsave
pop
inc
nop
int
inc
repnz
rcrb
nop
out
call
std
cmp
inc
add
cmp
add
inc
aas
fscale
arpl
out
xchg
push
adc
or
iret
stos
mov
xchg
das
lods
xor
dec
outsb
jne
and
clc
push
out
mov
cmp
sub
dec
mov
mov
filds
lcall
iret
mov
push
imul
ljmp
and
ljmp
add
test
sub
das
mov
pop
xor
xor
adc
sbb
sub
and
sub
mov
ret
mov
lods
ret
jne
fidivs
inc
fucom
adc
inc
xchg
pushw
jmp
mov
ror
inc
push
and
dec
std
mov
pop
mov
xchg
ret
cmp
lahf
pop
adc
cmp
inc
push
mov
mov
add
mov
dec
mov
mov
jne
das
push
lods
add
movsl
cmpl
addb
xor
jnp
adc
ror
sub
popa
or
popf
into
xor
xchg
faddl
mov
add
repz
loop
sub
push
cli
scas
jo
cmp
aad
push
outsl
add
add
or
push
insl
mov
ret
mov
dec
sbb
jecxz
stos
mov
pop
mov
ljmp
xacquire
or
cltd
jnp
sbbl
dec
loopne
int
mov
shll
dec
and
aaa
push
jns
por
sbb
xchg
rcll
dec
sbb
popa
addl
adc
xor
jb
pop
mov
int3
mov
mov
xchg
mov
notl
mov
imul
aam
inc
sbb
int
add
imul
imul
int
loop
push
lea
pop
push
push
int
jle,pt
popf
xor
ret
pop
movd
push
sahf
addl
outsb
fucomi
cmp
jae
sarl
in
sahf
mov
adc
inc
jno
pop
push
sub
ljmp
jg
ret
adc
pusha
mov
jns
insl
stc
int3
cmc
fnsave
stos
mov
repnz
int3
pop
mov
jge
mov
imul
jmp
or
arpl
sub
outsb
pop
cmc
pop
add
inc
mov
add
add
mov
or
in
cmpl
repnz
and
mov
insl
xor
dec
repz
jbe
imul
imul
add
or
and
xchg
mov
cmpsb
leave
add
ds
push
xor
push
add
roll
and
adc
push
inc
sbb
adc
addr16
xchg
popw
imul
aaa
adc
lock
cld
cmpsl
scas
mov
mov
scas
das
lods
dec
adcl
and
rcr
xor
insl
repz
clc
and
das
outsb
jae
push
add
fdivrs
dec
dec
inc
pop
cli
adc
sbb
adc
or
daa
mov
push
or
mov
int
in
and
aaa
sbb
and
add
and
add
xchg
pop
pop
xchg
dec
dec
mov
fwait
xor
pop
add
in
jb
daa
loop
xor
imul
in
sub
and
mov
sbb
pushf
enter
mov
xchg
subb
push
clc
or
push
add
xor
mov
dec
mov
cmp
push
sbb
sahf
std
out
or
data16
ljmp
jae
lods
push
js
jae
sbb
sbb
enter
mov
lods
out
movsb
loopne
loop
mov
jg
mov
enter
icebp
imul
lahf
mov
aas
cmp
jne
add
add
imul
out
jecxz
add
or
push
arpl
sub
sub
pop
out
mov
je
and
aam
lds
imul
adc
cmpsb
dec
ja
or
mov
push
je
xor
xlat
push
pop
mov
mov
dec
pop
and
pop
jl
in
pop
mov
fcoms
inc
leave
stos
gs
cmp
mov
jbe
and
sbb
fildl
out
add
imul
cmp
xchg
add
push
or
sub
movsb
push
ret
fstpt
mov
imul
movsb
lds
jp
bound
push
leave
sbb
jne
xchg
imul
mov
aam
sbb
mov
in
xchg
jne
add
mov
push
xor
jle
pop
jge
dec
andl
sbb
adc
pushl
outsl
fnstcw
cmpb
arpl
add
pusha
adc
add
gs
push
xlat
adc
in
xchg
aad
cwtl
inc
sbb
jnp
dec
addr16
cltd
insl
outsl
adc
cmpsb
pusha
enter
add
push
pop
adc
daa
add
adc
movsl
aam
jbe
pop
or
insl
sbb
add
imul
adc
movsb
lock
xchg
mov
add
add
mov
xchg
mov
jge
add
popa
clc
test
inc
xchg
dec
sub
lcall
inc
je
or
fldl
insl
pop
mov
dec
dec
lcall
and
incb
mov
push
popa
xor
xor
fsubrl
push
aas
lds
adc
faddl
lods
out
insb
in
popf
sub
inc
pop
sarb
pop
mov
nop
rcrl
push
add
dec
shrl
mov
sub
push
or
pop
inc
xor
add
push
jmp
jbe
addr16
icebp
insl
lods
jmp
inc
add
push
jo
mov
fstl
popa
test
sub
pop
sbb
imul
sbb
in
shufps
fcmove
rolb
or
xor
mov
pushf
jo
fidivl
std
inc
mov
push
mov
push
mov
in
rcll
push
in
and
and
sarl
mov
mov
add
je
mov
fwait
pop
sbb
pop
pop
rol
adcb
pop
push
cmp
or
jecxz
xor
repnz
fcom
inc
in
xchg
jg
cmp
and
xchg
sub
push
inc
xchg
mov
and
nop
pop
and
std
popa
pop
loop
xchg
movsb
leave
nop
lret
push
adc
adc
stos
add
lahf
sbb
dec
jl
aaa
repz
push
addr16
cmp
jge
pusha
fwait
addb
out
mov
jno
mov
add
test
sbb
rol
mov
sbb
pop
push
push
outsl
ss
ret
or
push
ret
or
add
data16
fbstp
add
pop
movsl
jecxz
rcrb
rcl
test
adc
adc
and
mov
adc
mov
or
addb
insb
mov
xchg
or
movb
add
shr
cmpb
sub
xor
and
cmp
sahf
sub
cmpb
cmp
addr16
cmpb
mov
loopne
scas
lcall
cld
bound
test
cmp
jae
fadd
jae
outsb
stc
cmc
xor
xchg
das
sti
cmp
shrl
cs
loopne
cmp
and
mov
test
inc
add
jb
mov
lds
push
mov
insl
and
popa
push
subl
push
pop
jns
push
and
lahf
cwtl
cld
adc
or
sbb
je
or
in
ds
orb
sbb
add
in
fcompl
xchg
inc
cmp
filds
jne
fadds
jge
aad
add
ret
inc
sbb
sub
pusha
jecxz
push
xor
lea
inc
add
fiaddl
add
jbe
mov
les
mov
sub
decl
add
add
fdivrs
cmp
clc
pushf
icebp
out
data16
fldenv
pmullw
cmp
or
pop
sbb
in
add
jecxz
push
inc
add
imul
push
sbb
add
ret
jns
call
push
dec
cmpsb
lock
adc
mov
ficomps
xlat
sub
fsubr
das
aad
lret
icebp
jns
roll
pop
add
xor
push
pop
sarb
add
jb
sahf
adc
adc
mov
es
and
xor
jbe
aam
and
pop
cmp
into
lds
pop
sbb
fiaddl
in
sbb
sahf
in
pop
push
pusha
pusha
jl
fwait
std
std
adc
xchg
adc
daa
shrl
test
es
xchg
arpl
rclb
xor
jmp
mov
jne
fnstcw
in
pop
mov
xor
daa
lea
bound
push
int3
push
xorl
cmp
lds
jl
mov
mov
push
js
rcrl
sbb
lea
rclb
inc
or
xor
mov
clc
ds
xor
push
lea
dec
lds
imul
pop
sbb
lea
movsb
jbe
push
mov
and
dec
adc
or
lods
pop
cmp
dec
jne
sub
and
aad
pop
push
adc
mov
dec
cmp
jmp
test
ds
leave
js
xor
movsl
push
jns
inc
lea
mov
sbb
pop
sti
into
mov
insb
xchg
mov
pop
incb
imul
sub
lds
jne
push
jne
pushf
cmp
xor
loope
pop
pop
inc
push
addr16
push
in
and
jns
cmp
mov
lret
imul
xchg
popf
inc
or
shrl
icebp
or
pop
int
pop
push
or
int
and
ds
pop
sarl
mov
cmp
movb
push
mov
mov
in
cld
sbb
and
dec
addl
movsb
push
mov
mov
subl
lret
inc
test
xchg
jl
jno
leave
adc
add
jg
pusha
xchg
icebp
adcb
or
rcr
cltd
dec
icebp
in
test
xchg
push
or
aad
pop
xor
movsl
loopne
pushf
rorb
and
mov
nop
add
inc
add
test
sbb
imul
pop
and
imul
ret
dec
pop
adc
jge
inc
cmp
jge
xlat
push
in
mov
movsb
shrb
adc
out
mov
inc
add
push
orb
shrb
dec
cmp
jge
xchg
jo
lock
and
or
xchg
push
mov
ret
sarl
adc
inc
add
neg
and
test
pop
jge
imul
add
test
or
test
ret
out
fwait
dec
push
jl
or
or
decb
xor
sub
ret
mov
test
loopne
loopne
jnp
nopl
out
cmp
out
andl
add
jne
dec
jae
cmp
jge
idiv
fsts
add
mov
xchg
pop
jmp
mov
jbe
mov
mov
mov
push
push
and
mov
push
adc
mov
ret
push
cmpsl
dec
repz
push
push
rcrl
pop
daa
push
imul
subb
into
jno
es
mov
imul
mov
in
and
dec
iret
in
dec
test
pop
ja
js
adc
loopne
cli
mov
sbb
cmp
inc
jp
insl
xchg
js
pop
jbe
xor
cmc
dec
adc
clc
xchg
mov
in
dec
or
adc
adc
cmp
fs
adc
sti
rolb
xchg
hlt
jle
fwait
ds
roll
add
negb
les
mov
dec
sub
dec
add
or
mov
outsl
inc
movsl
int
repz
imul
ret
sub
inc
cmc
jne
rcl
adcb
aad
mov
mov
inc
insb
setg
dec
int
int
jge
pop
clc
sbb
or
dec
add
pop
mov
add
add
adc
pusha
js
adc
xchg
inc
fs
lret
lahf
mov
pop
jb
invd
lea
enter
and
clc
aad
loope
fwait
mov
ret
and
jb
pop
lods
pop
add
xor
inc
sbb
std
or
jge
cmp
jle,pt
mov
pop
imul
add
pop
mov
push
das
add
or
arpl
sbbb
ljmp
mov
sub
stos
jne
js
ret
fisttpll
sbb
sub
add
and
and
inc
outsl
sub
jbe
xchg
push
pop
adc
in
repnz
and
jbe
cmp
and
imul
xor
pop
divl
jb
iret
xchg
stc
mov
out
sbb
add
xor
scas
movsl
cs
sbb
clc
push
pop
imul
pusha
fisubrs
push
imul
rcrl
addr16
jbe
aam
jbe
push
sti
adc
add
loop
inc
pop
pop
popa
pop
aam
push
inc
stos
jle
mov
mov
or
orl
js
lock
sub
push
mov
mov
imul
push
loopne
add
out
xchg
fisubrl
int
mov
jbe
inc
icebp
push
pop
cmp
add
es
sub
or
aaa
dec
repnz
xor
jns
jne
mov
lds
cs
sub
xor
and
pop
sbb
addr16
ja
push
mov
jbe
in
sub
negl
ja
xlat
cs
jbe
jb
jecxz
es
repnz
popa
xor
mov
outsb
cmp
aaa
in
loope
test
insb
xchg
fldenv
mov
in
jne
jb
shl
add
dec
pop
or
adc
rol
test
packssdw
lods
jnp
pop
enter
loopne
lods
mov
pop
cmp
enter
iret
fcomi
in
mov
inc
or
push
xor
test
jmp
pop
jno
or
fdivrl
push
push
imul
movsl
inc
jo
movups
push
inc
inc
mov
cmp
mov
mov
xor
jb
repz
rol
jo
push
or
rolb
push
xchg
testl
imul
xchg
pusha
pop
push
push
out
cli
xlat
clc
push
in
hlt
adc
mov
and
mov
mov
lret
insb
subb
pop
cmp
lret
lret
in
lods
cmpsb
inc
xor
mov
add
jne
inc
and
sub
cmp
xchg
or
jne
or
mov
inc
sub
adcb
sub
lcall
pop
shl
sti
ljmp
pop
sub
pop
mov
loop
ljmp
pop
add
mov
scas
inc
adc
or
subl
xor
mov
mov
scas
mov
mov
mov
std
lods
inc
adc
sar
mov
cmp
cmp
hlt
and
icebp
and
sbb
xor
bound
add
fs
inc
loopne
fcomps
popf
pop
in
sub
inc
shrb
pop
inc
push
inc
cmp
test
adc
mov
test
sbb
sub
and
ss
xchg
dec
arpl
pop
jecxz
ss
mov
jle
mov
fcomp
mov
mov
das
jb
jbe
or
fiaddl
or
pop
mov
fdivs
fsubs
pop
bound
xchg
adc
fildl
in
arpl
or
cmp
pop
adc
pop
or
mov
icebp
mov
xor
push
aas
adcl
or
movsb
add
dec
pop
cs
sub
jne
dec
rclb
push
jns
int
lret
mov
mov
or
in
sbb
in
add
nop
pop
adc
fistpll
mov
shlb
aaa
adc
pop
adc
jo
bound
in
adc
add
jle
mov
dec
inc
push
and
cmp
int3
in
xchg
mov
stc
aam
out
jmp
test
jb
add
add
inc
push
rcll
xor
lds
mov
mov
stos
fcomps
out
mov
or
imul
fmuls
jbe
push
stc
fs
mov
mov
or
ficoms
jecxz
mov
out
pop
push
mov
icebp
out
add
mov
push
xchg
std
pop
rorl
js
push
pop
or
add
mov
push
sti
jecxz
lods
add
mov
movb
addr16
push
mov
sbb
add
in
pop
inc
pop
in
in
or
xor
mov
push
push
stos
push
mov
add
rclb
mov
clc
mov
in
pop
jnp
daa
sub
mov
std
bound
addr16
jb
add
or
mov
pop
adc
mov
arpl
rcll
ja,pt
mov
test
push
clc
or
test
push
mov
adc
out
lods
clc
inc
inc
mov
cmp
jae
xchg
and
mov
jb
ret
add
add
mov
outsb
jne
or
loope
pusha
enter
fstpl
bound
or
pop
inc
pusha
icebp
add
or
adc
inc
js
jg
fistl
inc
mov
ja
dec
icebp
in
fisttps
adc
jmp
jno
mov
out
cmp
cmp
add
or
sbb
jl
insl
cmp
movl
sti
cld
std
push
decb
imul
aaa
sbb
lods
inc
mov
jnp
in
push
mov
jbe
and
bound
sub
cmp
sti
add
cmp
ja
dec
xchg
and
lock
sub
add
sub
add
dec
sub
adc
or
mov
xchg
or
xor
out
loope
xlat
cmc
jbe
das
or
hlt
loopne
push
icebp
or
in
mov
cmp
lds
push
pop
cld
adc
std
ss
and
in
add
cmp
je
and
mov
adc
insl
adc
pop
imul
imul
add
jne
push
pusha
loopne
sbb
jne
loope
loopne
aaa
insb
add
adc
pusha
or
inc
lds
adc
ficomps
mov
hlt
imul
rol
in
out
pop
cmp
push
xor
mov
pop
jae
fistl
push
adc
push
loop
js,pn
ds
mov
movsb
pop
inc
push
xor
add
add
push
test
cmp
inc
pop
and
or
mov
inc
dec
mov
pusha
pop
push
decl
dec
and
add
lret
cmp
or
cld
dec
inc
add
addl
aas
mov
or
lahf
sub
mov
sbb
outsl
sbb
jmp
or
dec
movsb
shl
jmp
subb
adc
xor
movsl
mov
lea
cwtl
cmc
jg
nop
lahf
dec
adc
xchg
inc
jb
ljmp
dec
hlt
xchg
ja
mov
cwtl
or
outsl
outsl
fisubl
les
cmp
jae
cmp
mov
pop
sbb
js
imul
push
lods
mov
push
bound
cs
mov
mov
in
and
imul
inc
push
sbb
mov
and
pusha
in
insb
push
or
or
or
and
adc
repnz
jo
fld
adc
cmp
cmp
or
faddl
leave
jno
xor
mov
xor
outsl
xchg
pop
adc
push
pop
repnz
and
adc
add
mov
inc
jbe
fxch
adc
jbe
sub
xchg
jbe
int3
leave
nop
outsl
and
cltd
arpl
xorb
in
or
aad
int3
push
inc
mov
push
sub
sub
jb
jecxz
add
push
xchg
inc
aad
bound
or
push
mull
add
pop
push
int
sbb
xor
add
sub
jmp
push
cmp
sub
sub
arpl
push
andl
or
dec
pop
addb
stc
push
stc
sub
sub
out
adc
mov
push
js
and
insl
pusha
cmp
mov
ljmp
jbe
xor
loope
pop
mov
add
pop
cmp
ja
mov
mov
sub
into
popf
je
pop
iret
cmp
lods
movl
push
imul
mov
ja
lock
sbbl
mov
and
inc
dec
sbb
push
xchg
add
in
or
push
fnsave
aaa
inc
scas
cmp
sub
das
pop
adc
sub
adc
cmp
inc
push
imul
push
xchg
pop
or
pop
sub
mov
bound
sub
or
and
data16
xchg
sbb
adc
and
cmp
jne
popa
loope
rorl
jae
or
add
inc
xor
sti
lds
xor
pop
and
dec
stos
add
pop
and
or
pusha
mov
std
sti
jne
jnp
outsl
or
cltd
jbe
xchg
mov
push
or
movb
shr
push
pop
jmp
add
sbb
popl
push
lock
mov
mov
clc
testl
sbb
or
push
inc
hlt
inc
mov
xor
cwtl
dec
xchg
lahf
mov
rolb
and
imul
sti
xchg
les
rorb
cmpb
push
shll
add
adc
push
std
jae
cmp
js
cmp
pop
xchg
aas
sti
pop
mov
adc
icebp
xchg
pop
js
jae
mov
das
outsb
push
je
imul
js
pop
dec
inc
sbb
and
xor
lret
daa
and
sbb
pop
push
inc
or
je
push
sub
sbb
jo
rolb
adc
ds
push
pop
xor
lret
stos
xor
repnz
pop
dec
cmc
add
sbb
testl
adc
sahf
xor
ficomps
mov
mov
dec
in
pop
push
pop
jbe
pop
push
mov
push
jbe
push
push
sub
repnz
and
add
lds
test
dec
jbe
cmp
add
sbbl
inc
inc
mov
insb
daa
call
fiaddl
movsl
rclb
mov
xchg
mov
adc
add
add
sub
or
lea
cmp
xor
es
pop
movsl
iret
sahf
sbb
cld
aam
jecxz
fstps
cltd
pop
push
cs
rep
ss
movsl
and
push
imul
mov
or
push
out
sbb
arpl
std
mov
xor
sbb
mov
jl
repnz
adc
cltd
cli
or
cmp
ja
cmc
or
movsl
js
or
stos
lahf
or
lods
mov
add
cmp
cmp
add
inc
pop
fdivrp
push
pop
inc
shlb
ficomps
rcll
lret
cli
lock
or
mov
xor
mov
rcrl
push
lds
je
inc
add
rcrl
mov
aaa
inc
cmp
adc
cmp
iret
adc
mov
adc
imull
adc
sub
adc
in
in
mov
lret
lods
fcmovnbe
sbb
stc
out
sub
subb
mov
adc
test
mov
in
pusha
lds
mov
stos
pop
repz
jge
add
xchg
or
jb
or
andl
das
icebp
jbe
imul
push
stc
xchg
add
and
cmp
dec
iret
cmp
aas
test
rcrb
mov
inc
mov
adcl
mov
imul
mov
je
test
mov
sbb
push
pop
sarl
add
or
or
les
add
stc
jbe
filds
dec
inc
in
shll
inc
add
pop
loopne
push
xor
xchg
add
add
daa
scas
inc
js
scas
test
pop
int
inc
and
loopne
lcall
int
dec
out
out
add
pop
mov
add
mov
push
sbb
std
orb
add
sahf
or
sub
je
xor
xchg
inc
cmpb
xor
mov
pop
adc
bswap
jge
cmp
cs
cld
push
sub
pop
add
sbb
testl
sub
in
jl
push
sub
daa
es
je
mov
and
pop
inc
popa
cmp
test
popa
adc
push
dec
xor
mov
mov
jbe
ret
mov
test
sub
cmp
dec
aad
cli
jb
xchg
cld
push
pusha
lds
imul
mov
lds
jnp
adc
lods
inc
aaa
icebp
jo
test
mov
insb
lea
mov
icebp
imul
add
arpl
mov
mov
jbe
inc
xor
in
mov
test
ud0
pop
mov
mov
add
nop
push
lret
or
sub
push
adc
mov
inc
imul
popf
cmc
xlat
dec
add
jne
xchg
ds
adc
ljmp
repz
ret
sub
flds
push
mov
pop
cmp
mov
mov
fsts
fbstp
push
adc
cmp
mov
add
in
cmc
xchg
test
js,pt
jg
push
jge
in
dec
push
mov
popf
adc
lret
cmp
arpl
sbb
cmpsb
jp
add
and
mov
sti
sbb
jns
movl
stos
sbb
sub
repnz
inc
add
inc
cmp
orl
mov
push
mov
push
adc
and
pushf
or
incl
xchg
xor
or
mov
icebp
mov
xor
cmp
jg
xor
jle
stos
push
inc
mov
inc
cmp
dec
and
mov
sub
mov
ret
or
or
pop
inc
jge
mov
dec
popa
fnstcw
mov
aaa
inc
cmp
xorb
mov
or
xor
iret
or
mov
test
add
les
jo
stc
jnp
sbb
mov
or
jno
mov
aas
adc
je
jbe
push
xchg
push
xchg
inc
jne
rcrb
mov
out
mov
inc
add
cmp
dec
jge
les
js
push
inc
pop
xor
push
cld
mov
jne
inc
inc
inc
pop
les
mov
in
and
cmp
jnp
sub
sbb
lahf
pusha
dec
xor
sbb
add
jno
mov
sub
and
jbe
mov
lea
pop
out
mov
mov
in
out
jge
mov
mov
push
loope
jge
ffree
jbe
sbb
pop
arpl
pop
call
xchg
sahf
fwait
test
sbb
xor
mov
adc
movsl
std
aas
xor
inc
nop
in
push
pusha
pushf
inc
push
mov
add
or
sub
sbb
or
es
movsl
cli
imul
stos
and
in
mov
aam
sbb
fwait
jge
lret
test
inc
or
sub
mov
or
pop
das
cld
pop
cltd
sbb
lea
push
push
inc
rclb
das
inc
pop
cs
xlat
jne
ret
fnstcw
aad
jns
dec
loope
loope
fldl
jbe
sub
jmp
in
dec
cmp
mov
push
jmp
add
pop
push
pop
adc
aam
sarl
and
cmp
sarl
sarl
shrl
cltd
or
rcrl
out
mov
pop
and
getsec
nop
pop
sub
sub
or
sti
xor
test
push
movsl
movsl
sti
mov
mov
bound
leave
adc
clc
pop
mov
test
filds
jne
fisubs
push
or
jne
cmp
xchg
imul
ret
test
and
subl
mov
mov
std
mov
cs
daa
aad
inc
inc
in
mov
mov
mov
icebp
adc
xor
fidivl
cli
jbe
pop
pop
add
adc
repnz
mov
and
pop
cmpl
ret
pop
mov
sub
jmp
cld
pop
jbe
cmp
jbe
sbb
jbe
mov
mov
add
incl
mov
cmp
jle
cmp
pop
mov
mov
sbb
fidivrl
cmp
adcb
pusha
in
and
jecxz
and
cmp
shlb
jl
pusha
add
movsb
add
je
shl
and
add
cmp
ret
add
std
stos
je
push
ret
sbb
mov
cmp
cwtl
es
jl
cmp
insb
jbe
mov
mov
aas
in
loope
pop
inc
aaa
pop
adc
sub
sbb
testb
cs
jne
push
push
in
sbb
cmp
or
inc
add
push
adc
or
push
sbb
pusha
cmp
movlps
in
ljmp
aam
push
mov
jmp
jne
pop
pop
shr
dec
jnp
mov
lds
jbe
testb
aaa
pusha
movsl
jae
int
xchg
adcb
or
frstor
aas
jge
clc
enter
clc
mov
mov
or
sub
in
jbe
mov
jg
sar
xor
jle
push
insb
cmp
jne
test
pop
orb
jne
stos
pushl
sbb
lcall
in
and
mov
or
in
or
add
clc
aas
out
adc
mov
ret
jbe
in
and
call
fstpt
add
inc
out
mov
test
add
adc
fidivrs
dec
pop
or
out
mov
pop
pop
imul
sbbl
cs
adc
adc
lret
pop
add
loopne
pop
fmull
test
jne
clc
ret
xor
push
adc
mov
jle
fldenv
out
sbb
cli
dec
inc
cmc
sbb
sub
lcall
xchg
shr
loop
xchg
stc
pop
negb
testl
inc
addr16
es
xchg
out
or
roll
add
fidivl
mov
sbb
cmp
jo
addr16
imul
std
pusha
jg
leave
dec
cmp
push
push
ret
cmpsb
push
push
xchg
mov
hlt
xchg
outsb
call
pop
jge
sub
xor
bound
jo
inc
cmp
inc
push
fdivs
mov
aas
pop
icebp
mov
jmp
jne
insb
divl
and
daa
cmp
pop
js
lret
repz
add
shrl
push
scas
ds
outsl
or
fcmove
mov
add
jg
mov
cld
dec
adc
mov
mov
add
cmp
ja
cmp
adc
xchg
test
and
pop
cli
or
push
and
je
lahf
les
or
insl
add
xchg
or
std
xchg
push
sbbl
or
pushf
mov
sbb
and
or
lods
adc
enter
dec
push
dec
movsl
imul
jbe
inc
test
xchg
mov
or
push
leave
push
sarl
test
in
inc
nop
in
iret
mov
ss
in
in
push
icebp
out
sahf
out
cmc
cmc
stc
stc
loope
aam
std
std
mov
add
repz
xchg
add
add
andl
inc
push
fildl
inc
cmp
sbb
mov
rorl
into
jge
std
pop
and
xor
pop
std
out
mov
adc
cmp
and
xchg
daa
cli
sub
sub
sub
roll
mov
pop
les
addr16
data16
mov
mov
pusha
dec
mov
inc
push
in
xchg
lret
push
add
sub
addr16
add
mov
or
lcall
cmp
push
pop
idivl
aaa
sbb
cs
sbb
ss
jns
adc
fimuls
jns
inc
cltd
or
push
mov
sub
push
add
lds
add
jg
ja
movsb
lock
lret
rolb
push
incb
jp
clc
push
les
addr16
add
jb
clc
outsb
sahf
push
and
bound
and
jle
adc
adc
ret
mov
incb
dec
clc
ret
xor
or
movsl
and
add
daa
ret
shll
jg
shlb
into
mov
lret
sub
les
std
or
std
or
push
and
push
cs
es
adc
xor
lahf
or
adc
or
mov
mov
adc
jp
cltd
mov
hlt
lods
jl
dec
jmp
xchg
jle
sub
psubb
fcmovnu
and
pushf
xchg
mov
push
les
loop
subb
or
mov
and
loop
testb
lahf
add
adcb
mulb
clc
dec
repz
ss
mov
int3
inc
std
push
subb
cmp
js
push
or
shl
es
add
aad
add
fisttpl
mov
cmp
or
bound
or
push
ret
inc
pop
out
sbb
adc
adc
es
lret
jbe
into
mov
out
xor
pop
sbb
shl
js
les
jmp
mov
out
scas
mov
or
loopne
push
mov
mov
iret
mov
jl
xor
or
xor
ds
add
sbb
jo
stos
xchg
ds
mov
in
add
mov
xchg
fadds
mov
mov
repnz
inc
or
xorps
cs
sar
sub
add
mov
or
cmp
add
or
add
in
fidivrs
cs
jbe
ljmp
add
aaa
outsl
ret
aam
adc
add
pop
orl
adc
std
adc
shll
dec
push
outsl
sbb
lahf
sub
pop
pop
pusha
xor
icebp
jbe
mov
mov
mov
sbb
and
mov
std
sbb
and
in
lods
cmp
rcrb
cs
sbbb
enter
push
lret
int3
lods
clc
mov
dec
jae
cmpl
js
xor
mov
and
xchg
jle
inc
sbb
in
or
dec
xchg
nop
hlt
add
aaa
mov
jne
mov
add
testl
add
cmp
pop
xchg
add
or
pop
mov
cmp
shlb
xchg
clc
sub
and
cmp
jae
lods
psubsw
loop
mov
add
or
or
adc
adc
jp
jne
cmp
jae
jl
rcll
pop
sbb
push
jecxz
sub
je
icebp
add
pop
jp
roll
push
inc
adc
push
aas
jo
movsb
pusha
clc
sbb
icebp
cmpb
push
test
in
in
push
jbe
les
pop
push
loop
pop
mov
xchg
add
loop
stos
ljmp
push
fidivl
pop
jge
adc
ss
sub
jle
js
push
negb
and
jbe
clc
loop
sbb
add
adc
adc
js
xor
out
fisttps
add
push
jae
cmp
imulb
lcall
inc
out
into
sbbl
mov
pop
pusha
test
add
mov
test
or
scas
pop
xor
mov
inc
jle
rcl
lret
push
imul
sbb
and
addr16
cmc
test
push
es
popa
cmp
mov
sub
add
clc
imul
lods
sbb
add
lret
data16
mov
shl
adc
xchg
incb
fisttpll
sbb
push
pop
mov
push
in
push
lcall
negb
pusha
inc
aam
scas
xchg
mov
out
add
fldl
fucomi
sbb
push
mov
inc
aam
ret
adc
mov
in
add
std
add
ret
sbb
and
pop
or
les
mov
pusha
jno
add
mov
les
mov
repnz
fdivrp
addb
push
push
mov
cmp
jne
xchg
mov
mov
mov
mov
adc
mov
rclb
mov
repnz
adc
mov
loop
jbe
es
dec
inc
add
out
clc
das
adc
jbe
inc
mov
cmp
jne
dec
sti
stos
aas
ljmp
call
and
fnstsw
cmp
xchg
pop
addr16
ljmp
loope
mov
jle
subb
stos
xor
xorb
mov
or
sbb
inc
mov
sub
ret
jg
mov
dec
decb
push
ljmp
pop
les
lods
ss
imul
cld
lds
cmp
sbb
sbb
stos
adc
popa
pop
aas
fsubrl
xor
inc
sbb
pop
int3
and
push
push
sbb
push
call
rorb
inc
int
int3
lods
push
jbe
addr16
or
mov
dec
sub
pushw
jmp
sub
std
addr16
and
leave
mov
lret
add
jne
popf
sub
jg
add
es
mov
int3
stc
in
dec
cmp
jae
mov
and
enter
shll
popf
arpl
fmuls
sbb
flds
or
lcall
pusha
mov
inc
add
adc
add
adc
es
xor
mov
sub
mov
in
in
push
and
pop
sbb
mov
out
movsb
nop
push
clc
push
sbbb
mov
sub
sub
insl
mov
add
loope
mov
call
addl
mov
adc
test
ja
dec
adc
je
pop
xor
pop
xor
adc
add
inc
std
dec
xor
push
sub
xchg
jl
sub
sbb
add
xchg
jne
push
xchg
cmpsl
or
jbe
jg
andl
sub
inc
and
jl
in
cmp
in
and
jg
pop
jnp
adc
xor
jbe
nop
pusha
pop
pop
fmuls
cmpsb
in
outsl
pop
pushf
int3
mov
ds
les
shll
push
mov
push
push
jge
or
in
or
in
add
or
push
mov
jo
outsl
sbb
fwait
shr
dec
jp
jne
dec
sbb
sub
sub
enter
notb
jge
adc
xchg
fldt
jnp
add
nop
dec
lahf
push
mov
mov
or
adc
jne
xchg
cmp
mov
cltd
into
xor
cmp
or
decl
sub
add
in
inc
cmp
inc
jl
ss
pop
xor
cld
cmpsl
test
sti
jge
cli
int
out
and
fnstcw
jae
mov
sub
mov
push
add
dec
mov
pop
fwait
je
push
push
push
data16
mov
test
push
shll
add
sar
fcompl
add
lea
or
inc
addr16
add
pop
bound
loope
jl
or
mov
popa
jge
clc
loop
push
or
mov
jo
add
loop
aam
xor
inc
sbb
roll
in
mov
inc
adc
int
and
sarl
sub
out
repnz
imul
sbb
and
push
fsub
jns
sbb
lret
push
pop
jno
shrb
insb
push
testl
sbb
and
fmull
loope
lcall
pop
cmova
xchg
mov
push
aam
inc
pop
pop
xor
xchg
into
daa
shr
rcr
shr
rcr
or
cmc
clc
hlt
mov
fucomip
aam
ficompl
inc
inc
test
add
jae
cmp
js
push
pinsrw
or
ja
dec
cs
pop
jnp
mov
frstor
ret
pop
bnd
push
fldl
push
sub
leave
mov
xchg
or
xlat
or
repz
adc
enter
clc
flds
xor
fmulp
loopne
pop
jle
dec
stos
dec
push
test
add
es
sbb
xor
jl
out
in
fnstenv
push
mov
in
rcr
in
jns
dec
fdiv
sbb
cmp
adc
cmp
loopne
pop
frstor
jo
cmp
jg
mov
cmp
jbe
mov
mov
mov
bound
mov
cmp
jbe
mov
mov
adc
push
xor
popf
pop
jmp
xor
push
scas
aas
fs
sub
test
xchg
aaa
shrl
sbb
std
dec
adc
divb
adc
jmp
pop
sarb
sbb
pusha
add
aas
mov
push
mov
cmp
jbe
jne
cmp
in
out
jbe
mov
loop
and
cmp
jecxz
jo
sub
pusha
mov
mov
mov
fwait
and
mov
aaa
or
push
push
jb
std
aad
enter
or
cmp
jle
loope
sub
sar
dec
mov
mov
push
and
fbld
jb
cld
adcb
cwtl
clc
push
adc
and
inc
cmp
je
pop
xlat
xor
mov
mov
jg
add
or
inc
and
mov
pop
and
xchg
mov
mov
pop
ret
ja
fwait
dec
dec
add
mov
inc
inc
incl
pop
in
or
mov
dec
or
add
add
imul
mov
add
mov
dec
insb
pop
push
mov
xchg
test
or
out
fldcw
cld
data16
or
in
adc
inc
jge
or
inc
and
ficoms
add
adc
les
jge
pop
cmp
cmp
adc
sbb
outsl
or
aad
sub
xchg
je
fidivrl
sbb
xor
cmpl
jae
inc
inc
cmp
jae
ljmp
push
push
cmp
adc
jnp
xlat
or
pop
out
xchg
push
xlat
cmp
sub
mov
enter
movsb
and
xor
dec
inc
lret
aas
push
inc
test
dec
sarb
add
push
push
ret
xor
lock
subb
fisubrl
pop
lret
ret
rorb
pop
adc
gs
and
xchg
lock
adc
fcoms
jmp
pop
sub
cmp
mov
popa
in
jno
jecxz
sahf
mov
lods
jbe
pop
mov
sub
icebp
push
insb
or
jg
or
push
mov
loopne
adc
sti
inc
hlt
or
mov
dec
in
shl
push
dec
sub
adc
mov
jbe
sub
dec
lea
adc
adc
mov
jbe
imul
push
xor
pop
sarb
in
enter
das
mov
cmp
pop
imull
stc
and
adc
add
adc
jbe
aas
js
add
ror
clc
or
shlb
sub
inc
clc
mov
test
test
xor
stos
add
jne
jp
jge
or
das
and
add
jg
fisttpll
lret
je
push
cmp
jae
lods
cmp
ja
popl
std
adc
test
mov
lahf
push
xlat
clc
lea
ret
adc
js
pop
in
dec
es
notb
pop
adc
jbe
mov
sahf
sbb
inc
mov
js
jae
data16
cmp
mov
std
inc
adc
add
sbb
fildl
inc
cwtl
ss
xchg
jg
mov
pop
mov
data16
data16
sub
cmpsb
pushf
pop
xor
add
dec
xchg
dec
shlb
xchg
imul
cmp
push
rcrb
push
imul
movsl
cmp
imul
push
insl
pop
xchg
rcrl
xchg
into
mov
fnsave
or
or
mov
aas
into
rorb
mov
add
sti
fcmovb
jp
jae
and
imul
mov
mov
or
popf
mov
mov
xchg
insb
repnz
inc
jbe
ljmp
cs
push
inc
push
mov
mov
gs
fcos
sti
fldcw
mov
in
ret
insl
sbb
pop
out
fisubrs
sub
movsb
sbb
and
mov
sub
cmp
adc
insl
lcall
push
cwtl
das
test
jbe
movsb
imul
or
ss
lds
shlb
add
mov
inc
js
add
inc
and
cld
push
std
test
dec
int
dec
imul
or
xor
lock
jbe
xchg
or
xchg
xchg
fbld
pop
outsb
test
pop
jp
dec
or
inc
cmp
in
adc
jne
test
push
cmp
mov
or
cmpsb
xor
lock
push
jg
dec
mov
rorb
pusha
and
or
aam
leave
js
jnp
jmp
shl
jns
mov
lock
testb
xchg
jecxz
jg
jo
and
sub
sub
push
mov
dec
je
sub
out
mov
xorps
mov
cmp
ja
and
hlt
test
test
and
out
or
enter
ret
movsb
xor
aaa
xchg
cmp
ds
xor
cmp
lock
jbe
mov
add
cmpb
lods
sub
mov
jecxz
ds
and
push
clc
mov
sbb
sub
imul
stc
mov
test
push
jecxz
push
mov
adc
xor
xchg
loopne
mov
mov
imul
aad
stos
jle
aaa
ljmp
imul
fs
mov
sub
movsb
mov
nop
dec
jl
or
jp
push
out
pop
or
mov
push
mov
stos
and
rorb
push
sub
inc
mov
sub
cmc
push
addr16
loope
inc
mov
insb
idiv
or
test
dec
add
fadds
pop
hlt
dec
aad
bound
jbe
loopne
inc
testl
in
cs
and
push
movsl
fwait
push
mov
test
mov
jle
add
ret
sub
cmp
test
lods
sub
orl
hlt
or
icebp
cmp
add
aad
jecxz
dec
hlt
decl
push
addr16
add
or
inc
aas
in
adc
or
subl
mov
pop
pop
add
lods
call
mov
jmp
lss
sub
dec
mov
mov
call
cs
jl
xor
lcall
lods
xchg
icebp
and
stc
fmuls
add
and
adc
jg
roll
dec
or
dec
or
or
outsl
adcl
into
pusha
rcrb
xchg
ja
dec
es
in
or
pushf
push
add
outsl
add
div
inc
or
add
jns
xor
cmc
or
adc
pop
lods
cmpsb
stos
rcll
outsl
push
pop
les
add
dec
andb
or
mov
ss
aas
add
xchg
cs
fidivl
dec
lods
push
dec
mov
jne
xorb
fbld
pop
in
sbb
imul
xchg
insb
out
pop
clc
mov
pusha
lods
xchg
lods
call
in
ljmp
fwait
mov
mov
push
mov
loop
fstl
adc
adc
add
pop
mov
mov
adc
and
icebp
inc
sub
cwtl
les
fs
cmp
sbb
or
push
stos
loopne
mov
sub
aaa
push
out
bound
dec
add
add
test
dec
lds
icebp
idivb
scas
cmp
stos
ret
jmp
dec
jne
and
xchg
fnstenv
lds
ljmp
in
fwait
out
ljmp
ljmp
sub
xchg
add
dec
add
out
mov
ljmp
sub
inc
inc
roll
jl
rolw
jae
jbe
push
sub
add
push
mov
add
rol
xor
or
dec
int
jne
insl
jne
js
sbb
add
adc
ljmp
sbb
jbe
addl
jbe
or
ljmp
subb
lret
xchg
cmpsb
jae
punpckhdq
movsl
test
pop
in
adc
insb
lcall
movsl
insb
fnstsw
inc
sbb
shll
les
inc
lret
lret
xor
push
push
imul
sub
pop
push
mull
aaa
mov
pop
fists
and
xlat
and
xchg
enter
test
mov
and
xchg
add
jbe
push
and
outsb
ret
adc
mov
imul
adc
in
stos
mov
mov
and
sbb
stos
xor
push
ficompl
and
inc
shll
xor
mov
push
mov
roll
add
fildll
cwtl
shl
je
xor
jp
jbe
pusha
jle
ret
call
test
scas
ret
scas
ja
cmp
cmp
mov
mov
out
inc
popa
xor
jns
add
mov
cmp
fsubrp
dec
xor
cmpsl
fdiv
push
cmp
in
mov
movsb
add
or
rorb
lds
adc
mov
loope
ljmp
mov
aas
push
pop
shrb
push
cmp
ficompl
jg
push
shlb
cwtl
push
rolb
pop
popl
in
add
cmc
cmp
jmp
mov
test
or
dec
test
aaa
test
xor
mov
pop
push
push
shll
push
xor
jle
adc
sbb
ret
loopne
adc
mov
and
aas
sbb
add
icebp
add
push
cmpsl
ljmp
cmp
movl
dec
fistps
xchg
pop
and
icebp
idivl
addl
push
sbb
aam
sub
hlt
add
aam
test
loop
sub
ds
sbb
addl
mov
fldl
ljmp
enter
mov
call
test
add
mov
jp
lods
add
cs
fcoml
idiv
mov
es
adc
adc
clc
jne
addr16
fnstsw
in
jbe
in
push
push
or
ljmp
pop
les
adc
sbb
outsb
sti
inc
sub
or
clc
and
inc
in
out
aaa
push
xchg
adcb
push
je
les
lock
clc
fistpl
sti
jbe
xor
fdivs
sbb
add
or
push
xor
loopne
mov
or
and
lods
enter
sub
insl
push
or
pop
xor
push
mov
js
daa
fisttpll
inc
mov
jl
dec
mov
mov
pushf
les
push
sub
inc
dec
add
negb
pusha
cwtl
jne
mov
cmpl
or
int
mov
xor
and
dec
clc
popa
test
jp
scas
cs
adc
fdivrl
in
or
jne
and
movsb
lods
jge
xchg
sub
lods
add
xor
incl
pop
sub
xor
push
imul
mov
shrl
dec
mov
divb
rcrb
pop
jne
add
xor
pop
push
push
push
dec
or
addb
sbb
sbb
leave
nop
sbb
inc
pop
inc
clc
cs
jnp
fwait
mov
roll
jnp
enter
mov
out
call
dec
icebp
mov
push
sbb
loope
je
mov
adc
adc
xchg
sar
out
iret
add
lret
dec
inc
add
jns
out
dec
inc
dec
mov
xchg
fidivrl
add
icebp
leave
or
cmp
loopne
daa
lock
out
or
or
mov
les
fsubrl
icebp
scas
incb
in
clc
inc
aas
fbld
push
pop
insl
mov
jge,pn
dec
or
aaa
icebp
addb
mov
add
adc
xchg
mov
inc
mov
xchg
rol
jmp
or
push
sbb
arpl
and
dec
cmp
lods
xchg
mov
in
cmp
es
or
movsl
popf
out
inc
sbb
dec
movsb
sub
jne
pusha
or
jae
fs
je
ret
inc
insb
cmp
pop
adc
and
scas
les
push
addl
test
cld
dec
adc
stos
mov
sub
or
mov
push
mov
jmp
ljmp
cmp
push
add
xor
outsb
sub
loopne
cmpsb
push
cmp
in
dec
xor
or
xor
mov
gs
or
dec
jo
inc
jns
inc
pop
jbe
in
cmp
icebp
cmp
in
xor
gs
jbe
jne
sub
sbb
sbb
in
or
mov
imul
jae
sbb
and
and
movsl
push
out
lock
mov
bsr
sbb
ret
mov
cmp
fimuls
adc
mov
inc
xchg
add
inc
or
jl
mov
add
sub
push
mov
rol
sbb
jo
mov
repz
mov
rclb
mov
shr
push
incb
cs
sti
sbb
sbb
and
call
push
mov
nop
lods
rorl
or
pusha
fsub
test
push
fs
and
into
iret
cs
mov
mov
push
and
sbb
lret
in
movsl
popa
fstps
dec
jp
add
push
cwtl
rol
jg
pop
aas
dec
je
pop
push
pop
pop
cmp
push
negb
dec
or
das
mov
dec
mov
inc
repz
lods
cmp
push
out
bound
mov
pop
mov
add
and
sub
dec
shrl
add
int3
popl
xchg
mov
xchg
movl
xor
ja,pn
int3
jle
int3
and
in
push
push
ja
nop
sub
movsl
sbb
movsb
add
or
flds
or
lahf
scas
inc
xchg
cmp
or
jo
movsb
mov
dec
dec
nop
add
mov
adc
jno
shl
es
sbb
gs
xchg
inc
mov
fisttpll
scas
and
jo
sub
adc
mov
fnstcw
cmp
pop
loopne
cli
pop
xchg
jmp
mov
cmp
je
add
push
cs
cmc
pop
mov
cmp
mov
lock
mov
dec
mov
stos
xor
pop
bnd
roll
and
push
push
mov
pop
and
and
add
jns
mov
jo
pop
rorb
push
push
sub
loop
mov
cmp
incb
push
iret
push
xchg
xchg
sub
shrl
decl
xchg
dec
lds
push
pop
jbe
mov
dec
movl
in
jo
cmp
mov
in
incl
cmp
inc
dec
cmp
je
mov
in
push
ret
mov
cmp
js
es
sub
cmp
mov
jmp
iret
test
or
adc
mov
loope
xor
out
shr
and
or
mov
dec
test
fmull
mov
loopne
scas
ficoms
add
test
sbb
jl
hlt
outsl
add
add
jne
in
int
mov
sbb
and
inc
sub
and
mov
mov
outsl
or
test
or
push
jg
jbe
sbb
test
in
xchg
push
leave
mov
and
fdivr
add
inc
sti
test
inc
pop
or
xor
xchg
out
cmp
scas
xchg
push
pop
das
push
and
push
rcl
imul
cmp
rcrl
inc
dec
adc
inc
subl
mov
jnp
dec
stos
addb
pop
mov
inc
inc
ljmp
sub
sti
pop
sub
push
enter
in
pop
mov
pusha
stos
adc
xor
arpl
xchg
pusha
cmp
pop
jne
xor
es
mov
test
pop
imul
inc
fwait
mov
push
xchg
pop
ljmp
psubq
xchg
scas
add
in
movsb
xchg
or
sbb
ljmp
aad
push
cmp
sbb
push
add
mov
test
push
dec
sti
push
cmp
jns
movl
adc
jmp
in
push
or
jno
cs
flds
iret
sub
mov
jno
jl
pop
pop
stos
mov
mov
cmp
mov
addr16
fidivl
and
mov
ja
mov
lret
in
xorl
mov
adc
int
xchg
xor
add
xor
add
jbe
mov
mov
add
adc
xchg
xchg
sub
push
and
dec
and
sbb
and
das
clc
fldenv
and
clc
fisubl
es
or
sbb
push
push
pop
adc
cmpsb
mov
add
dec
out
adc
loope
adc
cmpsb
xchg
xchg
jge
xor
shll
add
add
clc
sahf
add
ljmp
je
inc
push
in
add
leave
pop
jnp
das
cmp
testb
push
push
pop
inc
add
add
je
jle
movb
mov
xchg
stos
ret
sub
xchg
push
cmpl
fdivrl
add
and
add
push
bndldx
aas
repz
adcl
mov
pop
mov
push
repz
mov
fs
jo
inc
repz
sub
test
addl
mov
jbe
push
cmp
jbe
dec
mov
ljmp
pop
les
leave
ja
addr16
xor
filds
lods
inc
in
aas
rcr
stos
inc
push
inc
or
pop
lods
pusha
push
jecxz
hlt
test
faddl
xchg
lcall
push
lods
adc
or
sti
xor
and
xlat
xchg
ret
xor
jne
inc
cmpsb
dec
out
outsb
add
xor
sub
movsl
and
mov
fidivs
lret
push
sub
popa
jne
inc
mov
jbe
adc
or
or
sub
cmp
hlt
lods
stos
adc
sbb
add
xchg
fs
xchg
cmp
sbb
add
sbb
inc
es
mov
inc
sub
cmp
add
hlt
push
dec
mov
dec
shrb
jle
mov
test
nop
jmp
aaa
push
add
lock
pop
bound
fistl
shrb
pushf
push
sub
inc
std
mov
add
and
sbb
stos
jo
push
dec
sub
shlb
inc
imul
call
add
outsl
insl
push
push
aaa
jae
pop
repz
sub
cmp
xor
or
inc
outsl
jle
aam
jp
dec
xor
or
push
jno
pop
nop
int3
test
xchg
ret
pop
orl
dec
mov
sbb
push
cltd
xor
movl
mov
inc
jae
or
adc
aas
leave
add
xor
adc
in
outsl
fucomi
js
cmp
and
loope
mov
mov
inc
push
icebp
sbb
psraw
pop
mov
jns
and
out
adc
push
por
mov
xor
std
jbe
mov
lock
lret
inc
shl
or
movsl
shl
ja
aaa
mov
push
arpl
mov
cmpsl
or
mov
add
dec
adc
adc
cmp
lods
push
xchg
fwait
sar
das
cmp
add
jle
ret
mov
mov
lock
test
sbb
fmuls
rclb
cmp
and
mov
pop
in
mov
xchg
clc
add
hlt
in
sub
lret
jo
mov
insb
in
xchg
rcll
xchg
xchg
inc
es
inc
inc
mov
adc
aam
in
jo
push
fisubrs
fscale
inc
ret
dec
inc
mov
call
cmpsb
push
cmpsb
add
movb
ss
inc
inc
cmpl
mov
inc
ds
jae
mov
mov
and
shrl
ja
mov
push
pop
fcomip
je
push
rclb
pusha
je
jne
push
jno
lcall
mov
lret
mull
test
ret
incb
fdivl
push
xor
add
roll
jl
sub
inc
jecxz
lea
adc
mov
div
dec
cld
addl
dec
fdivl
sub
cmp
mov
shll
mov
repnz
rclb
mov
sub
inc
jne
and
add
add
pop
lods
call
add
or
clc
cmpl
lcall
xor
int3
call
scas
cmp
js
cmp
movsb
cli
jne
aad
ficoml
xor
adc
les
adc
aam
int3
cmp
pop
aaa
xor
mov
test
lds
or
cld
ret
dec
leave
movsb
aad
mov
shrl
adc
mov
mov
jns
push
or
or
stos
adc
rcrb
in
adc
hlt
push
mov
ljmp
or
lock
mov
cmc
mov
mov
mov
or
add
test
xor
jg
mov
or
mov
test
jne
sti
add
ja
imul
push
cld
pop
mov
dec
insb
inc
push
and
decl
dec
add
mov
and
and
mov
mov
xor
pop
push
jo
lods
pop
add
adc
mov
cld
add
cmc
mov
push
or
ds
shrb
mov
in
xchg
push
sbb
shrl
stc
and
enter
cld
add
cmp
ja
fstpl
and
andb
cmp
jne
lret
aaa
add
data16
test
and
sbb
and
dec
add
jbe
sub
sbb
dec
loope
mov
stos
loopne
repnz
dec
xor
int
xchg
dec
pop
add
add
push
pop
cmp
in
cld
testb
mov
pop
cmpsb
sarb
adc
cmp
sub
mov
jle
loope
loopne
outsb
xchg
cmpsl
push
jl
lahf
push
or
pop
mov
insb
in
lock
dec
and
clc
repnz
mov
or
xchg
ret
addb
icebp
or
xor
or
mov
cmpsl
in
mov
fstpl
inc
pusha
das
subb
inc
inc
adc
or
jle
push
push
add
aas
gs
push
or
mov
test
xlat
fld
sub
dec
inc
adc
mov
add
jp
rcrl
or
mov
leave
mov
vpand
add
push
sub
repnz
filds
dec
adc
jmp
push
pop
cmp
inc
ja
outsb
or
cmp
cmp
gs
add
adc
ret
movsb
mov
call
outsl
pop
adc
adc
pusha
xchg
sub
adcl
loopne
push
push
xor
lea
cli
movsb
inc
mov
jle
lock
adc
add
ficomps
in
roll
test
lret
xchg
inc
movsl
xor
in
stos
adc
loope
jle
mov
rcrl
jg
inc
stc
pop
mov
add
pop
dec
test
adc
xor
mov
inc
stc
dec
adc
or
adc
test
or
and
inc
daa
std
decl
sahf
rol
ljmp
dec
stc
add
jno
scas
xchg
inc
pusha
adc
sub
out
mov
icebp
sbb
jmp
sbb
iret
dec
jbe
pop
cmpl
push
stc
hlt
push
or
pop
mov
push
icebp
cmpsb
loopne
sub
gs
inc
add
mov
inc
mov
add
jl
mov
cmp
xlat
in
sbb
ss
shll
fidivs
test
in
or
sub
mov
ret
add
imul
xorl
cmp
mov
and
test
ss
js
test
inc
or
add
cmp
ret
dec
test
test
jl
mov
pop
push
mov
inc
cmpsl
xchg
fwait
pusha
inc
test
sbb
stc
mov
xchg
daa
sub
lcall
xchg
fimuls
push
or
adc
cs
sbb
sub
add
xchg
jns
ljmp
add
add
mov
std
jmp
cmc
pop
xchg
sbb
mov
dec
rcl
int3
adc
jle
cwtl
pop
dec
pop
cmp
shll
pop
or
inc
sub
or
add
data16
and
ljmp
imul
adc
inc
insb
xor
sbb
out
out
std
repnz
aaa
fildl
inc
and
stc
ljmp
ljmp
lds
inc
dec
insb
pop
xor
push
ret
loopne
pusha
add
scas
xor
push
pop
mov
add
movq
cmp
xor
cmp
popa
fmuls
scas
dec
jne
fistps
sub
orl
cmp
js
js
sbb
in
adc
mov
jbe
mov
loope
mov
mov
pushf
pop
mov
in
cmp
pop
adc
pop
adc
xchg
lret
shl
iret
adc
jo
jo
cmp
dec
sbb
andl
or
push
clc
mov
icebp
push
inc
rorb
pop
cmp
mov
push
lcall
insl
cwtl
add
or
call
hlt
nop
xor
aam
mov
fisttpl
jnp
call
mov
and
inc
aam
aam
rcrb
les
jmp
or
jbe
mov
inc
push
cli
pop
in
flds
test
xor
xchg
test
jns
mov
pop
adc
das
inc
lods
lea
ret
add
jno
mov
ret
imul
or
nop
std
push
cmp
jbe
mov
pop
jnp
ret
fdivs
dec
imul
pop
dec
test
and
jbe
lret
ret
push
pop
jmp
pusha
in
pop
test
cmpl
add
or
orb
shlb
sub
or
cmp
mov
sbb
jne
int3
push
pop
pop
dec
bndldx
ljmp
mov
loop
xchg
or
cli
push
rorb
push
repnz
push
sub
or
add
dec
jb
sbb
add
jg
fldt
fsubr
and
mov
push
mov
adc
in
sub
or
sub
test
lea
icebp
dec
jo
mov
lods
dec
push
and
jne
inc
adc
stc
into
pop
jnp
movsb
xor
jp
jnp
imul
mov
mov
js
or
pop
popa
or
mov
or
and
lock
std
or
subl
outsl
or
push
add
outsl
mov
cmp
mov
adc
into
ljmp
and
clc
negb
jp
aas
jbe
cmp
sub
mov
xchg
cmp
je
sbb
sahf
mov
adc
push
mull
lea
lahf
or
popa
call
lods
rolb
fwait
jmp
pop
mov
test
and
out
or
xor
cmp
mov
add
mov
sub
mov
add
bound
mov
mov
popa
mov
out
mov
pop
mov
push
pushf
add
push
mov
nop
and
inc
or
xor
jne
mov
addb
aas
andb
jo
or
inc
or
dec
push
or
add
pop
adc
and
push
cmp
or
adc
sub
inc
movsb
add
sub
jae
mov
jp
loope
pushf
jge
mov
int3
cli
data16
xor
mov
and
or
mov
js
fwait
andl
inc
call
mov
xchg
pop
test
pop
out
test
sarl
dec
mov
inc
repz
dec
or
xor
pop
push
test
in
sbb
mov
sbb
scas
sysexit
jbe
or
inc
cmp
stos
loopne
cltd
jge
jno
jne
call
sahf
dec
lret
mov
mov
shrb
sub
push
or
sbb
mov
add
lods
jmp
add
cmpsb
mov
mov
ret
pop
xchg
shr
call
vcmpps
ljmp
mov
inc
test
jp
mov
dec
jne
jo
test
js
mov
ret
xorl
fisubrl
cli
call
cwtl
xor
mov
rorb
sub
rolb
mov
jbe
jg
jbe
dec
andb
jp
or
sar
call
clc
outsb
pop
es
lret
or
pop
movsb
gs
or
in
fdivp
mov
inc
add
jne
cmp
lods
nop
cmp
add
or
or
xchg
adc
xor
aam
fistpl
cmp
xorb
add
aad
push
jmp
mov
mov
adc
ljmp
jbe
daa
adc
test
pop
mov
sbb
jp
jbe
sbb
cmp
or
iret
in
fs
cltd
leave
jbe
or
in
cmp
dec
push
popa
cld
aaa
mov
imull
xlat
inc
mov
mov
inc
dec
lock
xchg
sbb
adc
inc
inc
shlb
and
cmc
out
aaa
int3
mov
divl
addl
push
movsl
push
cmp
jle
adc
cwtl
dec
sub
sahf
push
mov
dec
jp
jle
sar
push
or
jno
mov
mov
cmc
and
lods
or
add
mov
inc
add
hlt
fidivrs
dec
cld
outsb
inc
sbb
cli
cld
jg
mov
sti
adc
pop
shll
inc
es
xor
pop
loope
inc
inc
mov
cmp
call
push
faddl
mov
inc
add
dec
jae
aad
dec
adc
or
loop
or
xor
sub
inc
lret
sbb
pop
sbbb
add
lods
add
add
or
enter
cli
add
mov
push
sbbb
pop
subl
fcmove
mov
negb
dec
jne
mov
cli
and
or
and
adc
mov
add
adc
cwtl
cmp
sbb
xor
sub
xor
clc
adc
imul
or
push
popf
mov
pop
outsb
jg
xor
mov
push
sub
sub
mov
inc
xor
sub
popa
mov
xchg
mov
fs
in
int
sub
add
and
pusha
and
jle
dec
cmc
add
mov
adcb
mov
add
sahf
add
mov
ljmp
je
out
mov
and
pop
test
add
pop
js
dec
jb
mov
sub
xchg
xchg
or
js
inc
push
and
mov
or
pop
mov
movl
in
sub
jbe
das
mov
mov
sbb
mov
xor
pop
or
add
orl
xchg
pop
dec
adc
add
in
lsl
mov
cmp
ss
sbb
rorb
mov
dec
sub
and
mov
ret
test
mov
or
outsb
add
dec
mov
rol
jl
test
test
lret
pop
pop
push
mov
dec
jecxz
jl
and
mov
inc
xchg
mov
adc
xchg
lds
xchg
xchg
je
fnstsw
dec
je
mov
add
adc
adc
adc
insb
push
inc
dec
repnz
pop
mov
mov
or
in
cwtl
jge
adc
jno
js
sub
mov
push
es
popf
xchg
shlb
mov
push
or
and
idivl
xchg
aaa
subl
push
mov
mov
mov
call
pop
insl
cmp
jne
cmp
jbe
movsb
shr
lret
cmpsb
sub
adc
test
dec
jo
mov
mov
dec
add
pop
bt
adc
or
inc
rclb
cmp
jnp
adc
sbb
sub
inc
addb
xchg
cltd
xlat
mov
add
arpl
push
repz
movsb
negb
subb
add
sub
jbe
mov
mov
adc
ficompl
cmova
sbb
xor
inc
test
loopne
je
in
push
cmp
aam
mov
xor
or
in
ds
fcomps
cli
data16
lock
dec
negb
lods
or
dec
mov
inc
inc
sub
push
xchg
fiadds
fstpl
xor
fmuls
test
add
cmp
push
jne
andl
adc
mov
shlb
imul
les
icebp
jne
scas
inc
push
push
add
push
fmull
and
adc
cmpl
cmp
mov
aam
shll
mov
cmp
js
xchg
ret
mov
add
ret
jmp
adc
pop
popa
fdiv
dec
mov
mov
sbbl
dec
jo
bound
or
in
xor
xorl
push
std
mov
cmpsb
pusha
cs
cmp
adc
or
dec
cmp
xchg
adc
push
adc
fsubrp
mov
cmp
mov
int3
push
push
outsl
dec
pop
mov
xchg
jmp
test
inc
subl
mov
jp
clc
fldenv
cs
stc
gs
lcall
out
xchg
lret
push
or
add
imulb
push
jmp
push
in
mov
and
loopne
mov
repz
push
mov
cmp
xor
je
sub
sub
icebp
cld
add
roll
and
push
xlat
in
sbb
shlb
mov
into
pop
rcl
xor
add
add
lret
insb
inc
add
in
add
sbb
sub
dec
in
add
and
sub
cmp
sbb
or
push
and
push
or
add
dec
add
aaa
pop
cld
push
and
dec
mov
lea
sahf
push
mov
movsb
xlat
add
cs
ss
pop
imul
test
dec
cmp
push
movsb
or
popf
ret
ficoms
jge
cmp
jle
stos
or
dec
adc
insb
lock
push
dec
add
imul
sbb
adc
add
sub
stc
xor
xor
or
sub
addr16
outsb
mov
lods
xor
in
adc
mov
mov
mov
add
ficompl
iret
pop
fiadds
push
pushf
ficomps
adc
fiadds
lods
std
icebp
fnsave
fisttpll
outsb
push
pop
jmp
push
inc
out
add
loope
jbe
dec
shrb
jl
mov
pop
icebp
push
das
lods
aaa
add
ljmp
add
cmp
into
fnstcw
cmpsb
stos
dec
inc
adc
mov
adc
push
mov
sahf
cmpsb
sbb
inc
frstor
jle
sbb
ds
or
xorb
jle
or
popl
icebp
or
xchg
add
lock
fcmovu
xchg
adcl
sbb
js
fnstsw
lock
mov
ljmp
pop
hlt
pop
lock
sbb
test
and
adc
mov
add
cmp
mov
or
pop
push
popaw
inc
jo
test
ret
in
xor
cmpsb
xchg
dec
int3
out
sbb
fxch
inc
in
in
cs
inc
cmp
je
cmp
xor
cmp
pushf
out
mov
mov
icebp
jo
in
jae
or
push
decb
or
test
imul
adc
push
push
in
push
imul
pop
push
mov
inc
or
jns
and
cmpsb
adc
lods
jbe
mov
inc
dec
mov
pop
push
div
leave
add
sahf
adc
cmpsl
add
movsb
out
push
aad
xchg
add
push
andb
mov
push
add
out
and
out
add
add
sub
dec
mov
and
sbb
push
sub
mov
mov
scas
test
out
lods
mov
mov
jle
sub
lret
add
ja
imulb
ret
sbb
pop
xor
scas
adcb
jmp
in
imul
cmpsl
sub
xor
test
cmp
inc
decl
in
inc
cmp
in
inc
push
add
or
cmp
adc
idivb
ljmp
add
loope
push
in
add
mov
jbe
inc
loopne
fwait
loope
lcall
out
rcrl
dec
push
add
add
push
push
mov
shl
cmp
jne
movsb
rcrb
test
sbb
in
mov
push
loope
in
mov
cs
or
cmpl
xchg
mov
sarl
and
xor
out
mov
sub
addl
cmp
push
flds
aad
out
add
xor
xchg
xchg
ret
ret
loope
pop
jle
insb
sub
inc
imul
popf
mov
add
addr16
mov
mov
dec
mov
imul
sbbb
es
add
add
imul
daa
sub
sbb
pushl
sub
adc
sbb
cmp
dec
xor
mov
imul
addr16
jne
imul
mov
je
jns
int
leave
cmpb
in
nop
mov
insl
push
subl
mov
movsl
sti
clc
std
inc
sti
call
push
lock
dec
adc
push
adc
mov
adc
inc
xor
pop
inc
push
cli
cmp
xor
jmp
rcrl
sub
inc
add
mov
cmp
pop
mov
inc
je
pop
mov
adc
sbb
mov
cwtl
nop
pop
pop
push
push
mov
push
jge
lret
sahf
or
pop
pop
scas
stc
fidivrs
xor
dec
ja
leave
dec
push
xchg
or
out
cltd
scas
or
orb
lahf
mov
cmpl
cli
sbb
andb
or
inc
out
imul
pop
test
cmp
sub
or
insl
fists
mov
push
push
sbb
ret
add
pop
or
jne
push
mov
or
jp
or
xchg
sbb
push
jbe
dec
push
xchg
add
inc
add
jp
or
inc
adc
inc
int3
pop
or
fdivr
dec
jp
fiaddl
jg
aas
mov
sub
orb
adc
pop
inc
pop
mov
push
cmc
xor
inc
push
scas
jo
jne
sahf
pop
xor
addr16
daa
add
lea
shll
mov
inc
inc
push
or
or
sbb
add
movsb
push
cmp
js
hlt
cltd
clc
cltd
mov
add
or
aam
mov
shl
inc
push
add
cmc
repnz
sbb
and
dec
inc
loopne
paddq
push
adc
sarb
add
and
or
aad
stos
push
imul
lea
fsubl
loope
loopne
movsb
dec
out
outsb
jecxz
pop
push
mov
xor
sbb
sarl
mov
test
and
sbb
push
cli
sub
cmp
xchg
ret
aad
lcall
cltd
pop
outsl
mov
push
addb
fs
aad
mov
shlb
fcompl
lahf
movsb
outsb
loope
shrb
dec
test
xchg
add
and
out
repz
mov
and
call
sub
or
ror
cmpsb
insl
subl
rclb
sahf
xor
test
sbb
cmp
jae
adc
pop
dec
les
xchg
jge
imul
les
scas
cltd
dec
mov
test
or
add
insl
andl
jle
je
test
movsb
or
xchg
je
ret
cs
sbb
xchg
dec
dec
sbb
fwait
cmp
icebp
imul
adc
icebp
pop
cmp
and
and
sub
pop
sbb
imul
pop
mov
decb
nop
cmpsl
mov
add
add
cmc
aam
inc
cmpsb
cmp
jl
shr
pop
or
rorl
das
jge
mov
ret
or
sub
add
in
lahf
orl
test
push
jl
mov
ret
adc
in
clc
aaa
adc
cmp
je
cmpl
inc
cmp
inc
cmp
jae
lods
andl
inc
sub
test
jns
cltd
adc
adcb
les
shlb
ficoml
xchg
jo
or
ret
fs
and
pop
loop
movsb
inc
sub
subb
push
and
inc
cmp
cld
loopne
das
and
add
in
or
inc
cmp
stos
mov
int
push
and
xor
or
mov
push
daa
iret
in
mov
sbb
int
pusha
pop
ja
xchg
inc
test
jne
push
ljmp
andb
outsb
test
movb
mov
cmp
and
push
outsl
mov
xchg
test
loopne
push
mov
ret
sbb
add
popf
cmpsl
andb
pop
std
jmp
test
jmp
xchg
pop
dec
dec
push
mov
negl
adc
imul
or
inc
jle
mov
push
push
popa
outsl
dec
out
cmp
aaa
adc
cmp
loope
stc
imul
adc
mov
fnsave
sbb
test
fdivrl
pop
lea
mov
or
popf
pop
or
xchg
jns
adc
mov
ret
sub
mov
xchg
sub
pusha
pop
dec
jo
mov
imul
and
mov
pop
ret
sbb
sbb
lcall
loopne
adc
popa
in
aaa
sbb
jne
repnz
and
push
jle
scas
sti
jbe
mov
imul
sub
out
shl
inc
mov
adc
mov
mov
pop
movsl
ja
cmp
jae
jl
xchg
sar
sbb
je
inc
ljmp
and
xchg
imul
jbe
test
or
rcrl
mov
leave
or
cs
movsb
adc
adc
stc
repnz
jmp
cld
push
in
mov
push
cld
negb
add
jns
lcall
out
dec
lds
ss
xor
cmp
or
ja
xchg
daa
mov
arpl
push
dec
xchg
xchg
and
andl
mov
xchg
xchg
or
aad
rcl
pop
mov
hlt
notl
xor
iret
aam
pop
int
or
icebp
sub
in
mov
and
inc
test
les
and
jno
xchg
and
and
sub
xchg
pusha
das
xchg
cmp
add
fadds
cli
sbb
popf
pop
adc
sub
in
aam
or
jge
ds
les
test
jae
lret
xchg
aam
outsb
xchg
hlt
jbe
in
xor
mov
dec
sub
je
les
mov
adc
iret
imul
mov
test
test
lahf
cmp
mov
ds
sti
sbb
sbb
dec
aaa
sbb
push
lret
pop
add
cs
add
cmp
testb
mov
adc
jnp
adc
aad
loop
dec
inc
je
dec
dec
adc
pop
and
push
push
cmp
push
rorl
mov
hlt
enter
add
rorb
adc
psrlq
mov
mov
in
add
bound
sarb
in
adc
fiaddl
test
notb
mov
dec
push
cmp
jl
jne
movsb
mov
test
icebp
sbb
cmp
arpl
insb
xchg
mov
xlat
mov
ja
test
cwtl
dec
in
loop
mov
repnz
shr
mov
inc
inc
inc
pop
jne
cmp
sbb
aam
or
cmp
lock
dec
std
insb
push
aam
sub
shr
push
fs
or
pop
jp
add
hlt
and
dec
inc
or
ret
hlt
jmp
rcrb
mov
imul
fs
mov
adc
xor
cltd
cmp
add
mov
add
and
add
cmp
dec
push
shll
jo
jge
shl
add
movl
inc
mov
mov
mov
loope
fmuls
and
fnstenv
loopne
xchg
mov
mov
xor
xor
sbb
stos
add
mov
popa
out
outsb
mov
stos
es
mov
imul
inc
clc
push
in
xchg
cmp
fsin
push
push
mov
jno
inc
in
imul
jbe
sub
push
out
pop
push
sbb
pop
add
test
cs
or
lret
or
cmp
inc
fstp
push
adc
jbe
or
add
add
sub
push
sar
cmp
inc
cmp
xor
pop
jmp
aad
sub
fs
pop
sbb
dec
inc
push
arpl
inc
pop
fldenv
mov
push
sub
push
cmp
fists
jmp
pusha
inc
sub
dec
loop
adc
add
inc
mov
cld
or
lock
movsl
mov
sbb
mov
pop
sbb
pusha
or
dec
ret
scas
inc
mov
sub
adc
popa
test
mov
and
jge
and
dec
push
fcompl
out
push
or
and
ret
jecxz
push
outsb
jl
mov
and
aas
add
mov
mov
mov
or
icebp
mov
mov
jle
shlb
push
addb
or
adc
out
xchg
xor
adc
clc
sbb
push
inc
mov
aaa
mov
xchg
test
rorb
loop
pop
dec
jns
cwtl
enter
inc
mov
mov
or
dec
add
or
jge
pop
andb
aam
fnstcw
jbe
mov
sbb
cmpl
and
divb
aas
mov
into
scas
push
or
nop
pop
orl
test
and
adc
in
add
and
clc
cld
add
popf
add
jne
dec
or
les
shl
aaa
xor
loop
test
and
out
or
std
insl
and
in
adc
add
and
mov
adc
xor
jae
xchg
or
or
enter
push
inc
inc
pop
mov
add
xchg
sahf
and
inc
push
push
dec
dec
adc
or
mov
xor
push
mov
xchg
xor
push
xchg
lret
jb
movsl
nop
jae
pushf
mov
jg
mov
or
dec
cmpsb
mov
mov
cs
mov
dec
scas
sbb
inc
inc
xor
in
push
lods
add
inc
sub
jmp
mov
mov
iret
pop
les
pushf
inc
loope
dec
push
jne
clc
adc
ja
push
xor
test
xlat
aam
scas
test
mov
outsb
add
inc
mov
es
or
maskmovq
negl
mov
aam
or
xchg
jecxz
cltd
xchg
les
and
dec
mov
push
xor
in
packssdw
movsb
xchg
insl
addr16
cmpsl
je
mov
jbe
push
imul
dec
push
adc
jbe
push
sbb
push
push
pop
mov
add
xor
mov
andb
add
inc
ret
pop
push
loop
shrl
je
push
cli
jle
jge
or
imul
pop
or
movsl
pop
ret
aad
divl
jne
jbe
push
jae
cmp
xchg
shlb
sbb
mov
adc
mov
lret
imul
loope
loope
stos
fstpl
imul
cmp
add
cltd
daa
ja
and
cltd
mov
jmp
xchg
cmp
add
xchg
mov
xchg
out
sbb
inc
push
out
and
mov
jp
sub
adc
in
inc
push
push
jecxz
push
jbe
js
aad
rolb
pop
lods
push
andl
rolb
mov
or
mov
lods
loope
cmp
add
out
js
sbb
pop
push
sti
jecxz
pop
pop
jmp
add
incl
jo
push
xchg
fists
push
in
outsl
mov
cmp
es
add
shll
rolb
push
stc
repnz
fstl
stos
movsl
mov
sub
fsubrs
sub
jne
mov
push
outsb
ss
leave
mov
push
add
repnz
dec
loopne
fnsave
add
sub
dec
dec
inc
xchg
fstl
xchg
or
push
mov
mov
mov
leave
mov
scas
roll
add
bound
fistpll
push
dec
xchg
subl
jge
lock
lea
mov
fistpll
mov
xchg
mov
or
out
fidivs
push
pop
add
fistps
mov
mov
bound
filds
pop
cmp
faddp
add
sub
test
movsl
ret
mov
mov
jae
xchg
aad
rclb
cmp
pop
ret
jne
add
push
adc
inc
test
and
mov
jge
in
aas
pop
dec
xor
or
ret
mov
inc
ja
mov
out
mov
xchg
jl,pn
xlat
das
aam
inc
lcall
aaa
cmp
mov
pop
aad
mov
jne
dec
jbe
push
imul
or
imul
add
pop
inc
mov
mov
fiaddl
push
mov
mov
cmp
sub
xor
and
jne
dec
repnz
push
mov
test
pop
add
adc
je
adc
and
jecxz
add
or
mov
pop
lods
jbe
test
shlb
add
dec
sub
or
cwtl
or
les
addr16
inc
repz
inc
mov
mov
sub
cli
jmp
mov
push
lea
jno
andb
pop
out
add
pop
xor
and
xor
imul
out
cld
add
push
fucom
ret
mov
and
jne
test
inc
xor
xorb
orb
std
adc
mov
sahf
adc
stc
cli
andb
mov
sbb
and
push
lret
adc
insw
into
lds
mov
and
mov
fdivl
and
pop
popf
je
ja
imul
dec
add
push
push
mov
test
std
push
pop
jg
mov
imul
push
adc
int3
cli
pusha
imul
cmp
outsb
xchg
sbb
in
jo
lret
decl
pop
mov
add
in
or
mov
add
mov
jbe
test
jns
jne
inc
mov
data16
sub
fs
dec
add
enter
mov
inc
in
or
add
adc
or
jne
jecxz
lods
mov
push
cmpb
and
push
adc
in
push
mov
push
xor
add
loopne
add
mov
mov
ds
pop
call
xor
xchg
and
insb
sbb
les
or
mov
mov
dec
adc
xor
cmp
sub
or
sbb
xchg
test
xor
or
push
nop
pop
loopne
ss
mov
push
and
dec
adc
and
adc
sbb
repz
inc
add
and
stc
add
scas
int3
jne
or
or
cmp
mov
and
pop
jbe
subl
lret
cmpsb
jbe
aam
cmp
adc
lea
loop
jne
mov
shl
ds
push
xor
js
pop
jbe
mov
jno
mov
in
dec
add
or
les
testl
and
mov
dec
mov
dec
cmp
add
sub
or
fs
push
pop
es
mov
push
js
icebp
jbe
cmpb
nop
pop
push
adc
push
or
pop
or
or
aaa
xor
or
ljmp
js
jo
lcall
lods
icebp
push
daa
or
out
popf
sub
adc
mov
cmpsb
sbb
pop
ljmp
or
mov
lock
data16
xchg
dec
adc
sub
outsb
add
inc
mov
out
push
cltd
sbb
inc
in
fcoms
inc
pop
or
sbb
test
add
lock
imul
shl
push
imul
sub
sub
jecxz
pop
leave
fidivrs
cmpsb
xchg
test
cmp
mov
jge
pop
xor
ficoml
add
clc
popa
or
sbb
sbb
les
in
cmp
sub
or
push
vmovntdq
sarl
dec
push
stos
cmp
sahf
inc
sbb
repz
mov
sbb
imul
iret
inc
adc
add
add
cmp
loopne
sub
mov
int
sbb
pop
inc
cmp
jle
cltd
sub
push
and
dec
lret
lods
cmc
fisttps
jge
inc
pop
sub
push
mov
mov
xchg
dec
jbe
xchg
xor
inc
pop
push
fisttps
icebp
mov
mov
push
icebp
pop
lcall
repnz
jmp
mov
call
shrl
or
sbb
sysexit
test
fidivrl
out
mov
pop
mov
lods
push
jge
and
loopne
or
add
jge
mov
adc
cmp
dec
inc
jl
pop
jmp
aas
jae
aas
adc
mov
cs
loop
mov
dec
pop
int
add
rclb
adc
sbb
xchg
add
fiaddl
add
xchg
sbb
cli
sti
cmc
xchg
pop
mov
aas
aad
rclb
cmc
add
xor
adc
mov
add
lock
mov
cltd
popl
or
cmp
inc
xchg
push
jno
pop
add
stc
cmpb
dec
push
mov
sti
sbb
pop
adc
add
fildl
sbb
inc
fsubr
xchg
push
popa
mov
inc
or
clc
addl
pop
adc
pop
pop
push
cmp
clc
xorb
loopne
pop
xor
dec
xchg
or
in
clc
ficompl
sub
hlt
mov
or
cmc
test
inc
jbe
call
push
stc
dec
mov
pushf
add
imul
aas
push
add
inc
add
pop
dec
xor
sbb
mov
fstpl
sahf
inc
test
jnp
mov
cmp
pop
ret
cmp
and
jmp
inc
xor
push
mov
test
dec
or
or
call
pop
xor
scas
adc
roll
inc
pusha
insb
xor
add
lods
fldt
ljmp
adc
bound
mov
dec
or
adc
inc
add
adc
inc
rcrb
mov
cmc
push
push
mov
inc
pop
out
add
jbe
inc
inc
add
add
xchg
andb
mov
fisubl
add
es
xlat
mov
loopne
lcall
orb
or
cmp
shrb
mov
pushf
mov
in
dec
dec
add
cmc
inc
orb
or
pop
jecxz
xchg
mov
push
adc
push
lcall
jecxz
in
and
add
enter
mov
scas
xchg
mov
sbb
jae
roll
mov
sbb
or
push
fsts
inc
pop
pushf
mov
ret
add
ret
in
movsb
or
push
push
jmp
movsb
add
loope
fucomi
movsb
pop
les
jle
push
adc
pop
sub
adc
cmp
add
push
imul
adc
add
test
or
add
push
imul
inc
inc
ret
es
add
aam
lret
mov
or
mov
dec
and
xor
movsb
or
in
or
in
jbe
cmp
mov
or
xchg
nop
sbb
cmp
enter
js
repnz
movsb
pusha
add
das
add
adc
or
xor
and
les
inc
mov
push
mov
and
push
mov
jl
dec
pop
fcmove
jbe
push
push
in
call
insb
mov
data16
add
or
pop
jbe
or
or
dec
cmpb
cmp
jne
adc
mov
fisubrl
mov
push
push
push
clc
add
and
pop
aas
pop
sub
or
dec
xchg
out
fisubrl
jg
adcb
lret
adc
lds
sub
shrb
lcall
sbb
lock
shrb
or
mov
aam
and
mov
nop
movsb
int
mov
rol
adc
adc
cs
es
or
jno
push
adc
fcom
add
mov
pop
lahf
and
movsl
dec
lds
sbb
jmp
leave
inc
and
leave
inc
loop
pop
lods
leave
inc
sbbb
inc
lea
inc
bound
inc
leave
fs
mov
xor
nop
clc
pop
mov
mov
ss
push
sbb
les
xchg
dec
pushf
xor
sub
bound
push
icebp
mov
jp
add
mov
push
cltd
inc
or
dec
or
in
adc
cmc
xor
lods
fldl
ja
int
pop
mov
pop
add
dec
fimull
inc
lock
rcr
sub
xor
dec
outsb
js
push
xchg
test
cli
in
dec
sub
push
sahf
push
jne
mov
jl
mov
inc
pop
mov
dec
xchg
or
jno
mov
and
adc
and
movsb
push
stos
mov
cltd
inc
cmpb
adc
mov
mov
add
imul
xor
xor
mov
cmp
pop
das
cmp
jne
int
and
mov
mov
jge,pn
xchg
idiv
notb
icebp
pop
mov
add
in
les
push
xchg
sbb
gs
add
lods
mov
push
add
push
or
aaa
adc
test
ret
add
pop
orb
mov
inc
shrb
pop
js
and
loopne
aam
fcmove
jge
pop
mov
sbb
mov
pop
xchg
add
pop
fidivl
loopne
cld
jae
cmp
add
mov
xchg
dec
mov
fists
sbb
mov
xor
and
lret
adc
jns
xchg
jle
xchg
xorl
loope
push
inc
stc
cmp
adc
and
push
sbb
or
in
cld
sub
jno
xchg
test
adc
cmp
adc
shll
inc
cmp
jge
imul
push
xor
mov
jno
test
push
loopne
push
cmp
es
test
add
cmpb
cmp
and
ss
or
inc
sub
ljmp
addr16
xchg
push
or
or
xchg
arpl
jae
sub
adc
mov
pop
testl
xorl
aaa
js
xchg
cltd
xchg
add
jno
lret
lock
inc
sbb
dec
test
adc
lock
pop
sbb
add
imul
inc
jnp
sbb
dec
xchg
jge
dec
xchg
lods
mov
xor
aam
jg
dec
jnp
outsl
adc
inc
mov
stos
insb
xor
jb
xchg
or
push
sub
jle
insb
cmp
mov
push
mov
sub
jp
loopne
fs
inc
movsb
inc
in
add
push
into
sub
dec
push
mov
inc
cmp
inc
pusha
sahf
iret
sti
pop
aam
push
mov
jne
adc
shrb
test
js
mov
movl
xor
adc
movb
sub
or
jbe
xchg
push
jmp
fs
fwait
icebp
or
inc
inc
add
cmp
inc
xor
inc
test
push
or
push
not
mov
mov
adc
xor
mov
sbb
js
adc
mov
and
or
mov
std
adcb
fsubrp
add
dec
dec
popf
push
enter
daa
and
gs
fwait
inc
xor
xchg
fwait
insl
imul
pop
mov
std
push
mov
loope
movsb
imul
dec
jns
insl
lcall
pop
sbb
imul
cli
cmp
pop
inc
push
jne
or
add
gs
mov
ljmp
test
or
sub
jg
add
mov
rcrb
insl
and
push
and
cld
andb
mov
rorb
test
jbe
insb
mov
dec
mov
inc
jp
xor
add
shlb
or
and
loopne
cmp
test
std
rolb
inc
leave
add
lock
outsb
adc
or
xchg
es
add
mov
adc
push
inc
setns
inc
jge
or
push
lret
or
in
cld
cmpsl
push
sbb
or
stc
jle
and
push
mov
mov
mov
rorb
push
insb
lret
or
sbb
dec
loopne
jmp
jle
scas
and
mov
sbb
into
outsl
pop
sub
out
es
sbb
mov
subl
icebp
popa
mov
mov
or
mov
add
das
jmp
pop
pop
movsb
je
adc
pusha
cmp
add
and
pushf
jg
sbb
bound
daa
add
inc
or
mov
or
xor
add
call
add
xor
cltd
icebp
lcall
jmp
shl
or
pusha
mov
mov
pop
mov
add
or
and
ljmp
xlat
in
decl
jo
rcl
jmp
inc
mov
inc
js
jmp
in
push
cmp
jbe
inc
or
outsl
pop
pop
adc
push
mov
or
loop
mov
hlt
mov
cmpsb
cmpsb
push
xchg
lahf
add
insb
xchg
pop
cmpsb
pop
jecxz
mov
jbe
and
stos
push
jbe
add
and
jbe
mov
imul
sub
add
rcll
cmpsb
out
adc
loop
ret
cs
je
jne
add
mov
push
adc
jbe
shrb
pop
xchg
out
or
stos
lret
mov
pop
movsl
cmp
adc
push
inc
adc
mov
mov
add
addb
leave
lock
mov
jle
and
jns
jp
clc
mov
dec
in
call
and
or
mov
push
adc
adc
lock
idiv
xor
or
orb
add
or
cmp
adc
fwait
sbb
ljmp
mulb
adc
dec
cmpsb
adc
notl
mov
mov
fsubrl
pop
in
sahf
sahf
cmp
xchg
jge
jg
xchg
call
outsb
outsb
outsb
outsb
or
jne
xor
inc
jg
inc
jg
pushf
xchg
outsb
outsb
fs
data16
mov
imul
xor
adc
fucomp
ja
adcb
push
push
loop
push
jo
mov
setae
inc
jle
push
xor
pop
inc
in
or
cltd
inc
jle
sbb
scas
push
sub
sbb
pop
lock
mov
stos
and
rcr
pop
add
lcall
push
add
out
xor
jge
fstpl
mov
loop
mov
adc
ucomiss
push
ljmp
cs
jl
in
pop
int3
rolb
jge
mov
shr
test
jge
scas
imul
mov
adc
movsb
movsl
rolb
std
push
lea
ret
nop
sub
in
or
imul
enter
push
addl
push
push
and
mov
in
adc
and
int
dec
mov
xchg
out
scas
cmp
cltd
push
xchg
aam
daa
or
sbb
into
inc
rcrb
pusha
aad
pop
add
cwtl
rolb
shll
call
fisubrl
sarl
xor
push
mov
test
mov
dec
movb
cmpb
ja
ret
push
cmpl
inc
call
dec
nop
push
out
es
adc
xchg
add
pop
test
int
mov
pop
push
lods
push
dec
push
jle
add
cmpsb
cltd
lcall
test
cli
rcrl
out
aas
jmp
notl
xchg
ss
mov
jo
sub
xor
adc
mov
lret
sub
mov
adc
add
mov
pusha
mov
cld
mov
or
jmp
imul
mov
out
xor
cld
push
inc
mov
lret
dec
repz
outsl
mov
flds
or
or
leave
mov
filds
mov
lcall
int
out
push
call
ljmp
in
in
out
out
cld
xchg
or
lock
in
push
movl
nop
shrl
lock
cwtl
int3
adc
cmp
dec
fnstsw
mov
jbe
mov
enter
test
imul
inc
in
fsubrs
lcall
lret
cmp
mov
imul
and
mov
in
push
addr16
adcl
or
cmp
in
loop
mov
rcll
push
out
mov
dec
hlt
mov
sbb
out
inc
cld
out
rorb
lret
mov
or
or
fmull
call
adc
out
dec
sub
test
push
sti
mov
xchg
xorb
mov
cld
inc
jae
cmp
inc
mov
rcrl
pop
fisubrs
xor
adc
aad
rcr
testb
pop
mov
pusha
or
sti
sub
inc
or
and
push
or
js
sub
lahf
pop
mov
filds
push
and
xor
hlt
test
dec
and
push
les
jne
lods
sub
adc
mov
cmpsb
cmpsb
dec
cmpsb
test
inc
fstps
data16
mov
ret
and
sub
nop
insl
mov
test
and
mov
sbb
jge
pop
ss
mov
mov
lret
rcrb
gs
sti
cmp
je
push
add
incl
sub
sub
and
enter
iret
inc
or
or
das
dec
add
mov
gs
xor
adc
add
push
adc
push
xchg
into
loopne
ret
je
mov
and
mov
adc
jne
inc
mov
add
dec
testb
add
in
ret
adc
xor
jbe
push
addr16
mov
push
outsb
add
adcl
or
jmp
or
or
add
pop
mov
es
pop
jmp
mov
mov
and
sub
sarb
and
aad
cmp
test
and
jg
adc
sti
inc
adc
inc
adc
mov
or
inc
or
push
or
cmp
mov
jo
mov
leave
jbe
cmp
push
cmp
cmp
xor
adc
add
stos
mov
ljmp
cmp
out
and
lock
insb
repnz
push
sub
fldl
fisubrl
or
loope
fabs
mov
call
ret
lcall
xor
and
push
adc
fimuls
jb
test
add
jbe
lahf
push
fmulp
and
scas
test
cmc
sti
bound
andb
shll
repnz
aam
orl
pop
and
cmpb
jle
dec
fisttpl
mov
add
jp
add
mov
jb
mov
jmp
in
ljmp
cmpl
mov
add
sbb
fwait
cmpsb
insl
ljmp
negl
testl
pop
push
or
mov
xchg
sub
mov
sti
inc
testl
lcall
cmc
mov
stc
ljmp
and
sbb
int3
ficoms
sbb
mov
adc
mov
inc
jle
arpl
mov
sbb
in
popa
cmp
jne
jle
clc
dec
or
mov
mov
sbb
fisttps
or
inc
xchg
lock
or
mov
xchg
and
jae
mov
or
add
addr16
movsl
sarb
add
or
add
add
xchg
mov
jmp
add
std
pop
jne
xchg
or
testb
add
jg
inc
enter
ja
jmp
out
mov
les
hlt
push
xor
xchg
fs
xor
fdivrl
jmp
rclb
mov
sub
mov
sbb
dec
pushl
repz
test
ficompl
jmp
mov
hlt
movl
imul
stc
std
in
leave
mov
add
insb
push
arpl
psubd
or
outsb
cmp
imul
pusha
aad
jno
mov
inc
aam
dec
std
test
movsl
cli
test
xor
mov
leave
mov
lods
jecxz
fdivs
jne
filds
or
shrl
fldenv
cmp
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
mov
incl
sub
mov
and
or
adc
stos
sbb
data16
inc
fdivl
jno
add
aad
mov
mov
movsl
in
lahf
xor
mov
mov
scas
jle
cwtl
push
loope
or
cmp
fs
add
hlt
push
imul
insb
sbb
xor
dec
add
decl
movsl
add
shl
adcb
cmc
fnstenv
jmp
mov
cld
fistps
ficoml
gs
aam
pop
popa
mov
into
decl
mov
aam
movsl
fisttps
xchg
fadd
shll
call
shrl
imul
mov
sarb
add
in
add
pop
dec
or
decl
push
stos
inc
add
adc
or
and
test
or
mov
jmp
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
add
inc
aad
scas
ja
popf
adc
push
fdivl
or
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
add
mov
incl
jge
xchg
shlb
add
inc
push
imul
xorb
sbb
push
ljmp
jbe
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
aad
pushl
jle
shll
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
pushl
fmuls
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
ljmp
mov
mov
outsl
and
xchg
ja
int3
add
mov
das
es
incl
lds
or
sub
mov
cmpsl
call
ret
shlb
sbb
ficomps
ret
es
pushf
mov
insl
add
ss
jmp
addr16
jb
filds
add
adc
mov
jnp
sbb
xchg
decl
out
fdivrl
fisttpl
aam
roll
clc
mov
push
int
mov
lcall
mov
outsl
ja
mov
out
cli
jo
ud0
cmp
pop
or
ljmp
cli
call
lcall
clc
sar
imul
push
js
or
push
addl
incl
ret
cmp
cmpsl
notl
pusha
rorb
and
pushl
ds
push
scas
fcompl
fldenv
filds
cmp
aaa
push
scas
mov
fidivrs
mov
jmp
pushl
mov
xor
mov
add
push
xlat
int
push
ficoms
jmp
and
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
add
aas
loop
add
jae
inc
jb
outsl
jb
and
cmp
in
imul
in
fs
push
inc
cmp
jo
xor
adc
pop
lock
push
gs
push
outsb
push
jb
jbe
insb
gs
ja
jmp
jae
arpl
and
arpl
mov
push
or
popa
je
fs
outsb
mov
insb
and
dec
xor
adc
data16
and
je
dec
jae
mov
adc
shlb
bound
sahf
imul
adc
in
push
mov
ja
jo
jae
bound
imul
adc
loop
arpl
pusha
outsl
insb
add
sar
fildll
imul
push
insl
outsb
pop
adc
push
jno
ret
arpl
and
subb
bound
jb
ss
xor
jg
sarb
daa
push
mov
mov
fidivs
xor
push
popa
cmp
gs
ja
sti
fidivrs
aaa
pop
bound
in
dec
pop
push
popa
arpl
mov
mov
pop
aaa
loopne
loopne
pushw
lahf
clc
ret
int3
jp
mov
aas
bound
push
dec
icebp
addr16
push
data16
imul
push
pop
aaa
shrb
jo
je
lods
mov
sbbl
insl
popa
jb
imul
dec
pusha
das
jg
sub
sub
test
outsl
push
fdiv
ret
es
gs
bound
xor
jae
adc
inc
imul
push
cmp
imul
insl
mul
sbb
inc
bound
add
int
adc
xchg
push
cs
popa
inc
loope
mov
xor
add
fmul
fldenv
pop
imul
cmp
mov
insl
push
sbb
sbb
xor
push
add
lahf
pop
mov
pop
ucomiss
dec
fs
mov
pop
gs
add
dec
ja
push
gs
xchg
ret
jl
aaa
insb
pop
mov
je
outsb
jne
sbb
mov
icebp
add
in
add
iret
insb
mov
jne
push
mov
outsl
cmp
sbb
jae
loopne
jb
jb
xor
xor
mov
aaa
cmp
xor
das
pop
das
aas
xor
push
push
push
stos
dec
jo
out
loop
in
in
dec
cmovg
sbb
pop
notl
ja
fs
xor
xor
shlb
daa
xlat
popaw
inc
inc
ja
mov
addr16
sahf
fs
out
pushw
jne
adc
imul
inc
jg
lds
or
outsl
aaa
mov
out
gs
cli
fistpll
jae
add
pop
fdivr
je
jb
out
xorl
and
jbe
xor
dec
pop
jp
mov
dec
xor
sub
inc
jb
pop
xor
adc
sub
mov
clc
or
dec
mov
or
inc
push
int3
xor
scas
cmpb
and
faddl
repz
dec
inc
dec
dec
pop
cmp
inc
push
arpl
or
cs
inc
dec
and
push
arpl
jp
fnsave
inc
mov
imul
push
sbb
scas
cmp
jo
pusha
cs
push
out
and
imul
xor
pusha
mov
je
and
fisubl
sub
nop
and
dec
dec
dec
push
lret
mov
inc
inc
addr16
out
fisubl
lahf
xlat
lahf
cmp
jb
je
add
pop
push
gs
push
push
popf
divl
xchg
pop
push
nop
xchg
adc
xchg
imul
xor
push
icebp
xor
dec
outsb
jbe
imul
insl
bound
xorl
outsl
nop
push
movsl
pop
pop
dec
fsubrl
fidivs
inc
sbb
add
or
gs
push
gs
pusha
sub
pop
js
and
das
push
outsb
outsl
lods
in
mov
adc
dec
inc
dec
push
xor
movsl
pop
add
cmp
icebp
dec
jmp
mov
inc
pushf
inc
push
dec
sbb
insb
ja
add
push
push
js
ret
or
es
mov
push
sbb
inc
rcrb
xlat
push
push
dec
ds
int3
scas
sub
popa
pop
sahf
pop
mov
sub
lahf
loopne
add
ja
insb
ljmp
enter
jge
jo
insl
lds
sahf
in
push
daa
xor
sub
dec
ret
xor
lods
xchg
xchg
gs
add
outsl
dec
dec
lret
xor
inc
mov
mov
cmp
dec
dec
inc
iret
lods
aad
jbe
addr16
inc
fdivl
scas
sahf
dec
gs
imul
lock
rorb
push
sub
sti
insl
outsl
jbe
add
ja
sub
inc
adc
outsl
jmp
jmp
outsw
aas
adc
jge
and
je
push
mov
mov
inc
inc
dec
inc
pop
push
aam
and
js
add
clc
fisubrl
imul
jnp
adc
and
outsb
pop
je
outsb
daa
insb
outsl
jo
jb
push
jnp
push
inc
jg
das
add
faddl
testl
push
loopne
bound
xor
insl
xorb
pop
sub
push
dec
inc
dec
jne
sub
daa
data16
jne
out
push
movsb
fstps
dec
add
dec
das
dec
pusha
les
fmull
push
popa
jo
cs
sub
aaa
pusha
fisttps
fists
sub
outsl
in
xlat
inc
fbld
push
mov
push
dec
sub
inc
mov
lds
ja
push
push
push
fildl
das
push
stos
insl
outsl
fistl
mov
in
jns
pop
ficoms
push
add
and
icebp
rcr
rcl
sahf
sbb
jno
sub
or
xorl
inc
shll
in
adc
jb
pop
dec
outsl
bound
imul
inc
push
insb
cmp
and
aas
sbb
add
loopne
popa
ja
add
imul
dec
test
dec
dec
imul
popa
lock
in
popa
xchg
movsb
lods
mov
jbe
lret
jnp
sub
mov
sub
adc
push
dec
sub
mov
imul
mov
test
nop
inc
dec
dec
mov
mov
sti
xor
cmpsl
sti
inc
or
imul
mov
pop
outsb
dec
imul
inc
dec
inc
add
mov
jne
or
push
imul
ret
and
arpl
pop
insb
ret
push
fadds
xchg
mov
lea
sbb
cltd
dec
inc
inc
inc
adc
push
cmp
pusha
lea
jl
mov
jg
stos
dec
icebp
push
dec
push
bound
pop
or
ja
jo
cmp
push
fldcw
mov
das
xchg
loop
sbb
and
outsb
outsl
leave
mov
lods
inc
mov
xchg
daa
xor
ja
decl
cmp
or
add
sbbb
jnp
mov
aas
adc
jo
push
icebp
inc
push
push
stc
and
ret
add
inc
add
push
insb
sbb
push
and
outsl
pop
lods
jge
jo
sbb
push
ja
fsub
mov
jne
jb
cwtl
dec
bound
push
ds
ja
dec
jae
jbe
mov
clc
push
test
nop
sub
inc
aas
xor
lds
pop
push
cltd
fadd
faddl
out
pop
inc
sahf
jnp
ret
or
dec
pop
push
and
xor
fidivl
xor
push
pusha
push
pop
inc
and
fsubs
int
arpl
cs
mov
addr16
push
xchg
mov
gs
imul
gs
xchg
pop
jbe
inc
insb
outsb
mov
and
push
push
sbb
jecxz
push
mov
xor
sti
pop
mov
addr16
aaa
sbb
mov
xchg
stos
xor
mov
push
push
push
rcrb
fs
dec
outsl
lret
sbb
sti
iret
inc
inc
dec
dec
dec
dec
call
shrb
inc
das
jns
cmp
insl
dec
ja
and
add
dec
pop
dec
add
hlt
push
and
push
sbb
aaa
push
sbb
dec
lods
outsl
cli
fdiv
mov
outsb
add
lods
ja
daa
js
cmp
aad
xor
push
push
inc
inc
push
inc
cmp
push
push
bound
or
popa
fisubl
add
xchg
dec
or
mov
push
scas
insl
outsl
push
mov
inc
dec
mov
jo
incb
stos
or
pusha
mov
aas
pop
inc
pop
inc
inc
inc
das
cmp
and
test
fisttps
pop
and
scas
imul
and
iret
test
push
pop
sub
stos
lock
or
and
push
adc
les
ds
pop
push
and
sarl
pop
inc
dec
push
dec
pop
inc
or
inc
jae
das
or
mov
mov
daa
pop
insb
inc
dec
push
inc
adc
fs
xor
mov
jg
inc
push
addr16
mov
xchg
mov
add
daa
push
push
lds
arpl
jge
test
xchg
imul
jne
xor
inc
sub
cmp
jae
andb
pop
sub
mov
pop
lock
dec
dec
sbb
mov
cmpsl
mov
loopne
outsl
test
push
nop
loopne
mov
hlt
or
clc
jp
xor
inc
inc
fcoml
jne
sbb
dec
mov
repnz
inc
add
lock
daa
sub
jecxz
sub
lods
jno
andl
imul
jmp
and
aaa
fcoms
sub
jbe
xor
sbb
in
adc
js
xchg
inc
push
scas
popf
addb
jo
add
ret
sub
add
in
js
ljmp
jns
stos
popa
bound
rclb
movsbl
cmp
stos
scas
jno
mov
pop
cwtl
cmpb
iret
je
adc
mov
decb
popa
addr16
ja
push
and
add
mov
mov
or
out
jp
mov
or
sbb
or
loopne
inc
fucom
in
or
orb
sbb
test
pusha
js
jbe
sti
out
leave
mov
pop
mov
pxor
cmp
push
popa
aas
or
add
mov
outsl
add
outsl
push
ret
add
div
push
insl
jbe
into
fwait
pop
frstor
out
add
fldl
dec
mov
sub
call
negb
pop
pop
pop
movsb
pop
push
cmp
cmp
mov
insl
pop
jo
jb
popa
ja
xorl
pop
sub
jns
cmp
jmp
outsb
or
inc
xor
push
pop
cs
sahf
fisubs
jp
mov
negl
push
xchg
add
lret
imul
outsl
and
cmpsb
orb
add
add
mov
inc
push
xor
sub
popl
pusha
add
adc
inc
aas
dec
and
movsl
ja
push
inc
out
popa
shll
movsl
inc
mov
dec
inc
push
dec
or
mov
push
mov
fldln2
push
dec
push
scas
adc
dec
push
sbb
lahf
mov
out
aaa
aam
jmp
mov
gs
adc
mov
divl
add
xor
popa
movsb
xor
sub
lods
mov
jecxz
faddp
aaa
lods
int
add
xchg
imul
dec
popa
fs
xor
sub
pop
js
add
in
inc
fcompl
dec
leave
adc
outsl
dec
gs
ds
cmp
sti
aaa
test
in
and
sarl
add
xchg
lea
sub
xchg
mov
mov
jbe
mov
inc
dec
inc
aaa
dec
dec
rcrb
mov
outsl
jns
insb
fadd
inc
pop
rcrl
add
xor
xor
imul
lahf
imul
xchg
sub
pop
fs
jb
and
fdivl
nopl
xchg
jae
addr16
out
and
inc
je
pop
cmp
pop
imul
in
jo
pop
outsb
mov
cmp
jae
push
xchg
add
inc
xchg
jb
dec
das
pop
push
shlb
scas
pop
or
or
jno
jne
push
cmpsl
lods
push
jo
mov
mov
sti
out
add
adc
pop
cli
add
out
test
pusha
jo
daa
rcrb
xor
psubq
in
or
pop
daa
jb
insb
fistl
mov
push
push
adc
jle
add
xor
cmp
mov
inc
jo
pop
xchg
orl
dec
jo
xor
or
pop
sub
rcrb
ja
jnp
add
jg
clc
xor
fs
outsl
ret
mov
notl
inc
push
push
pop
mov
and
andl
push
push
xlat
frstor
jo
mov
xchg
mov
in
dec
insl
out
sahf
out
jne
xchg
lahf
subl
pop
cmp
jno
enter
mov
mov
adc
mov
add
jo
push
xchg
iret
cmp
pushf
mov
push
jno
jbe
jb
dec
loopne
push
add
insl
fwait
sbb
add
scas
stos
add
pop
addr16
adc
xchg
ud2
filds
mov
in
mov
nop
xchg
xchg
mov
daa
daa
data16
mov
sub
push
fisubs
into
dec
dec
inc
xchg
and
pop
insb
jle
jns
mov
push
inc
push
testl
shll
jb
jns
jae
outsb
inc
inc
outsl
imul
fs
jae
cmp
fcoml
out
cmp
sbb
push
push
push
repnz
iret
add
sub
cmpsb
jmp
cwtl
pop
or
pop
push
push
test
lret
outsb
insb
imul
push
pop
ja
pop
sbb
or
movntps
loop
pop
jbe
sbb
sub
pop
in
pop
pop
cmpsb
jl
add
fwait
int
movsl
xor
inc
sub
or
test
aaa
xchg
jnp
cmp
movsb
psubb
sbb
ss
and
fwait
pusha
out
push
iret
cmp
pop
adc
pushf
inc
outsl
jb
dec
cmp
jnp
pop
cmp
bound
aad
jp
cmovno
popa
insl
les
fisubrl
inc
dec
inc
push
inc
xor
ret
out
sbb
dec
xorl
cmpsb
dec
pop
pop
add
out
lea
mov
push
std
push
inc
push
push
mov
loopne
add
and
pop
or
add
jl
mov
mov
imulb
add
xor
xor
and
sub
push
dec
push
dec
push
inc
xchg
or
mov
int
sub
loopne
xor
loope
cmpsl
nop
push
hlt
out
fadds
outsl
dec
scas
xchg
fildl
xor
mov
inc
ja
xor
xor
jmp
dec
in
loop
pop
sbb
sbb
inc
cmp
into
addr16
pusha
js
mov
in
test
insl
int3
imul
inc
sub
test
and
inc
inc
push
das
inc
push
and
dec
xor
stos
fdivs
rorb
jno
xchg
es
cmp
jle
xlat
subl
mov
les
scas
lods
inc
xchg
adc
sub
inc
js
jge
add
sbb
xchg
out
jns
add
ljmp
inc
inc
add
add
fdivrl
adc
add
add
add
add
xor
cmp
pop
or
aaa
jbe
in
pop
loop
push
pop
push
and
add
pusha
push
out
imul
add
pop
sub
add
sbb
adc
jne
insb
loopne
sbb
int
pslld
pop
pusha
outsl
cwtl
jns
xlat
fs
add
xor
sarb
aad
lock
or
jle
dec
andb
sub
loopne
aad
inc
adc
dec
cwtl
sub
dec
fmul
outsb
in
je
inc
dec
fadds
iret
scas
jle
in
enter
pop
lods
jl
jl
jge
jle
stos
stos
popf
jge
and
and
adc
adc
inc
cmp
xchg
dec
addb
andb
and
dec
sbb
add
add
mov
enter
jmp
add
cmp
ficompl
aaa
add
adc
insl
pop
shr
or
add
mov
inc
add
sub
rolb
movsb
sub
decb
cmpsl
fs
dec
dec
push
push
and
inc
sbb
sti
imul
xor
cmp
sub
popa
mov
jo
clc
mov
inc
mov
nop
dec
sbb
mov
data16
shl
sub
aad
pushf
jae
pop
jl,pn
push
xchg
push
call
into
jae
es
jnp
outsb
push
shll
or
mov
sbb
xor
les
adc
inc
adc
inc
or
cmp
pop
lock
push
push
mov
stos
test
dec
aaa
xlat
aam
xor
addr16
not
mov
mov
cltd
ss
lock
jbe
ficoms
push
xchg
jne
dec
arpl
in
or
mov
cmpb
mov
push
sub
cmp
lds
addr16
mov
adc
mov
push
cmp
jl
xor
inc
aaa
mov
jecxz
insl
shrb
push
dec
aad
pop
das
mov
mov
imul
jb
mov
sar
xor
sbb
ret
cmp
ds
stos
lret
xorl
ja
insb
popa
and
push
adc
popf
or
pop
push
cmp
addr16
jae
xor
faddl
push
or
imul
xchg
sub
fwait
sar
xor
dec
imul
cmp
and
mov
jae
mov
ds
cmp
add
cmp
and
mov
insl
add
mov
xchg
scas
push
outsl
inc
lods
sbb
loope
bound
jb
clc
fsubs
xchg
leave
jp
xchg
push
clc
add
fidivl
mov
fcmovnbe
or
push
push
and
pop
pop
cmp
inc
ret
insb
jns
aas
pop
and
pop
int
or
push
jno
cmc
fs
adc
and
mov
mov
jns
adc
add
aam
inc
push
or
cltd
add
and
push
add
aas
or
lea
inc
mov
pop
mov
aaa
mov
push
inc
gs
out
push
xchg
push
loopnew
pop
dec
orl
xorl
loopne
inc
lret
sahf
rcl
push
dec
ljmp
xor
test
js
popf
adc
and
jns
push
dec
inc
dec
cmovns
add
push
add
adc
addb
jbe
pop
out
cltd
inc
bound
or
push
pop
test
adc
add
jo
xor
mov
inc
add
mov
xor
lods
in
mov
ss
dec
mov
adc
add
insl
je
je
adc
xchg
jae
sbbl
jne
insl
cmp
pop
ja
stc
es
je
es
sub
mov
dec
pop
inc
jns
insl
jo
jne
push
pop
jne
je
fs
aaa
push
bound
fwait
aas
mov
bound
data16
outsl
inc
jbe
jae
outsl
dec
push
jbe
idivl
push
push
push
inc
xor
push
callw
and
bound
je
jae
jae
and
jae
jae
cmp
mov
aas
and
sahf
jge
mov
outsl
test
push
mov
jb
and
push
inc
int
fistpl
pop
int
outsb
jge
aaa
mov
inc
xchg
sbb
push
data16
data16
sub
das
add
outsl
imul
jne
je
jno
sbb
aaa
mov
out
push
cld
test
xchg
and
cs
adcl
das
addr16
xchg
imul
or
adc
pusha
adc
or
lods
xor
adc
je
shlb
mov
lods
das
fists
js
insb
mov
mov
addr16
push
adc
push
mov
mov
jnp
and
subb
out
cli
inc
jo
data16
or
cs
js
ficompl
bound
dec
mov
cs
es
xor
pop
addr16
or
pop
arpl
xor
pop
mov
ficoml
mov
add
and
mov
jne
das
inc
pushw
sti
adc
popa
jmp
std
jle
vmwrite
pop
repz
fcom
mov
sub
sub
xor
daa
sub
sub
pushl
xor
sbb
cmp
xor
or
ja
cmc
out
sbb
push
dec
inc
pop
add
jo
add
mov
daa
mov
jns
cs
insl
pop
cmp
in
add
es
dec
mov
shll
leave
es
or
repz
jne
es
ss
iret
mov
das
add
and
pop
insb
jbe
xchg
and
in
test
or
rcrl
mov
in
dec
jns,pn
sbb
and
cmp
inc
dec
es
and
in
or
cmp
mov
and
inc
xor
divb
pop
pop
pop
cmp
das
icebp
push
int
cmp
pop
dec
mov
or
adc
jge
pop
jb
inc
sub
push
es
sbb
rcrl
pop
cmp
xchg
pop
jb
std
sbb
sbb
movsb
stc
dec
sbb
xchg
jnp
in
lea
sub
iret
add
mov
fdivp
push
popf
lea
test
dec
cs
and
add
data16
ds
dec
inc
js
call
jo
out
dec
push
imul
orl
addr16
and
inc
enter
push
bound
sub
push
push
mov
es
push
push
push
xor
fcomps
mov
mov
sbb
pushf
add
js
jo
bound
pop
jnp
push
and
and
dec
pop
dec
pop
imul
js
outsb
stos
outsb
addr16
jno
fbstp
arpl
push
outsb
jno
je
xor
mov
orb
push
cs
test
test
loop
decl
and
and
jbe
insl
push
dec
insw
push
jle
outsl
je
rorl
ss
push
add
inc
pusha
or
push
push
and
jbe
in
out
outsl
and
xor
push
add
and
das
pop
scas
dec
shlb
and
jp
pop
outsl
rorl
push
data16
pushw
es
mov
aaa
or
outsb
arpl
xchg
push
imul
mov
gs
push
mov
pop
aas
pop
scas
popf
mov
lcall
outsb
pop
and
push
outsl
cli
push
push
jnp
inc
adc
inc
mov
push
inc
xchg
cmp
push
ja
push
mov
push
jbe
xlat
jae
pushf
pop
push
push
bound
call
push
hlt
sbb
push
cmp
adc
push
outsl
adc
scas
xchg
call
and
jne
outsb
pop
faddl
cs
push
inc
ds
inc
dec
inc
or
cmp
outsb
fs
test
scas
std
clc
xor
xor
inc
insl
fidivrs
jb
mov
jno
stos
insl
push
jae
insl
pop
push
or
mov
add
pop
jnp
adc
jg
xor
fdivr
inc
dec
inc
inc
mov
pop
jnp
jg
xor
adc
push
div
int
and
or
jmp
scas
dec
inc
dec
inc
push
pop
push
pop
movsl
mov
mov
shrb
outsl
and
cmp
push
insb
aad
jnp
das
nop
sub
mov
jae
push
mov
aad
push
dec
xlat
cmp
fadd
xchg
dec
and
mov
outsl
sub
push
imul
push
sbb
bound
out
push
add
cld
xlat
fwait
cltd
push
cmp
xchg
leave
idivl
jae
clc
cs
or
add
pop
out
sti
cmp
dec
push
jno
mov
je
imul
dec
mov
pusha
dec
jo
insl
mov
movsl
insb
mov
outsb
lods
inc
jo
stos
cmp
add
shlb
out
fcoms
jnp
mov
je
loope
and
pop
pushf
js
fiaddl
push
es
fwait
cltd
test
inc
insl
bound
lds
call
mov
mov
inc
jne
addr16
fisubrl
jne
loop
imul
mov
xor
xor
mov
imul
inc
dec
shl
pop
dec
dec
daa
fwait
stos
inc
sub
cltd
notl
sub
sub
add
and
mov
fcomip
cmp
push
sbb
sub
rorb
inc
fs
xchg
xchg
inc
cmp
pusha
push
js
push
jbe
jno
pushf
js
loopne
dec
dec
cld
cmp
cmpsl
ficoml
movsb
cmpsl
inc
add
cs
outsl
es
js
adc
mov
and
pop
inc
fsub
les
or
push
in
mov
sbb
je
push
arpl
and
out
leave
les
lock
xchg
int3
pop
sub
push
inc
jbe
adc
fwait
and
dec
jg
leave
mov
pop
pop
jge
xor
lahf
or
mov
pushf
push
addr16
push
push
aas
push
and
insb
pusha
stos
and
outsl
es
xchg
lret
inc
dec
pushw
clc
daa
scas
inc
and
rorl
push
lock
or
jbe
not
sub
xor
mov
sbbl
push
mov
adc
pop
jno
ja
xchg
in
jl
dec
jo
jo
inc
imul
mov
cs
push
xor
loopne
push
sub
xor
popa
dec
jbe
fimull
or
inc
in
mov
dec
sbb
dec
insl
dec
or
into
or
push
pop
push
outsl
jbe
mov
rolb
pop
and
mov
cmp
shll
add
push
rcr
pop
xchg
out
pusha
add
and
xchg
cmpsb
push
sub
ljmp
adc
add
imulb
pop
nop
ret
push
inc
add
jo
or
adc
xor
mov
or
jmp
cld
lcall
push
out
lcall
xchg
adc
jg
adc
cmpsb
fwait
imul
loop
call
fmuls
leave
adc
mov
imul
rol
pop
sahf
fnstsw
enter
loopne
fwait
pop
dec
jns
pop
stos
push
outsl
data16
in
add
xchg
sbb
cmpsb
adc
adc
lcall
pusha
cwtl
adc
fwait
shll
lcall
data16
shl
sahf
outsl
in
out
imul
hlt
pushf
sub
pop
lahf
pushf
lcall
stos
pop
adc
sahf
hlt
mov
lret
outsb
xor
lret
sti
outsl
jmp
jbe
adc
inc
xor
adc
loopne
add
mov
lock
loopne
cltd
xchg
adc
lret
add
fbld
mov
jnp
cmpsb
jae
lret
stos
ss
fstl
add
dec
vhaddps
cmp
mov
jmp
std
out
lret
sti
fsin
in
std
jmp
lcall
sbb
out
std
fstps
xor
icebp
cld
in
stc
in
loope
out
outsb
push
cld
jmp
stos
lods
lcall
and
icebp
clc
idivl
icebp
jmp
clc
lcall
jg
dec
dec
addb
notb
dec
add
pop
dec
dec
leave
ljmp
xor
je
pusha
xor
das
gs
insl
inc
aad
cmp
mov
add
mov
das
addb
sub
pop
push
aaa
stc
aas
cmpb
jb
cmp
gs
jno
roll
iret
xor
add
push
fsubl
xchg
add
xor
loopne
mov
js
gs
add
pop
jbe
daa
hlt
js
jbe
in
call
seto
nop
jae
aad
pop
inc
inc
sbb
inc
or
jne
mov
add
dec
xchg
or
and
pop
lock
push
je
sbb
xchg
mov
and
mov
addr16
add
or
test
jnp
or
incb
and
inc
movq
sub
xchg
ds
out
fcmovnu
in
jl
push
jo
jne
add
inc
dec
inc
cmpsb
in
outsb
insb
movsb
add
add
and
lret
push
mov
das
xchg
mov
in
push
inc
rcrl
fists
adc
jecxz
add
xlat
mov
aas
addr16
or
or
js
stc
fcompl
es
sub
push
jbe
dec
cli
cmpsl
pusha
negb
imulb
or
adc
adc
add
add
jg
inc
aaa
add
sbb
or
sub
dec
popa
add
add
add
add
incl
mov
xor
gs
mov
out
fdivr
jno
scas
jne
xchg
shll
push
aaa
jno
xchg
jge
aam
fistpll
repnz
adc
outsl
jae
ret
fimuls
inc
addr16
icebp
scas
mov
sti
test
fiadds
dec
inc
push
pop
add
add
cmp
xor
in
insl
call
adc
ret
leave
add
jae
xchg
xchg
fldenv
or
cs
lds
into
add
into
pop
out
cs
pop
lods
pop
cmpsb
cmpsl
inc
cs
movsl
scas
sahf
xlat
sub
push
pop
xchg
xchg
mov
jns
and
xor
call
push
mov
jg
push
rolb
mov
sysret
add
or
adc
jno
sub
addr16
jno
in
fstps
adc
scas
xor
xor
iret
out
sbb
popa
pop
sbbb
sarl
mov
sbb
pminsw
lcall
add
cs
mov
or
or
cmp
inc
sarl
call
das
add
outsb
ret
cmpsb
pop
and
ja
minps
add
inc
add
jg
xor
xor
push
add
gs
ucomiss
add
fs
and
mov
push
hlt
jle
or
or
fimuls
cmpsl
dec
add
pop
pop
bound
loope
addb
xchg
add
pop
xor
cmovg
push
sub
pop
outsl
xchg
jne
or
or
data16
pop
and
pop
jno
jno
jno
bound
sub
add
roll
cmpsb
clc
pushl
jns
imul
add
and
in
loope
pop
mov
mov
sbbl
imul
add
adc
ljmp
add
push
jg
jge
mov
js
mov
push
inc
add
std
js
inc
or
push
inc
pop
inc
push
je
mov
sub
push
stc
call
dec
push
jno
pop
and
jge
popl
jns
adc
push
call
imul
inc
mov
data16
ret
xor
inc
addb
inc
fcompl
cmp
push
pop
fsubrs
je
and
and
sbb
push
and
subb
inc
je
rorb
sbb
adc
es
adc
test
movsb
cmpl
ljmp
mov
mov
lds
jno
addr16
jbe
gs
mov
fbld
dec
jle
add
movsl
cs
imul
xchg
adc
dec
xchg
push
inc
dec
add
jns
clc
orl
dec
add
loope
xchg
jae
fstl
jne
sub
push
add
adc
jp
es
in
and
outsl
insl
faddp
sub
ja,pn
fs
jg
adc
jp
inc
cmp
inc
and
inc
push
dec
inc
pop
lret
arpl
inc
add
icebp
jno
mov
lds
fwait
movsl
loopne
divl
shrl
daa
pop
sub
inc
data16
push
cs
push
and
mov
lret
cmc
cwtl
ljmp
push
sbb
ljmp
push
cwtl
lret
pop
rcll
test
push
adcl
mov
push
cmp
movb
fs
sub
push
sbb
rorl
aaa
mov
pop
jne
jae
into
aas
call
outsl
dec
inc
push
and
add
jge
xor
xor
dec
cmp
fcompl
or
pop
outsb
jp
fcomps
lock
pop
stos
add
and
adc
loopne
outsb
bound
bound
ds
movsl
cltd
insl
push
jno
adc
jp
rcrl
pop
or
cs
jp
xlat
and
jne
es
fs
and
mov
push
cwtl
bound
pop
sub
fucomi
ss
dec
dec
push
and
loop
dec
jo
push
dec
mov
jl
inc
adcb
daa
shrl
xor
repz
push
push
push
pusha
add
add
xor
and
mov
cmp
cmp
add
push
or
daa
add
add
jo
xor
mov
aaa
sbb
xor
outsb
insl
cmpsl
sub
xchg
orl
and
leave
aad
cmp
loope
add
pop
pusha
cld
sbb
xor
out
push
addr16
or
sti
incl
xchg
push
dec
push
push
inc
dec
and
aas
cmp
sub
and
xor
push
inc
inc
ljmp
pop
mov
dec
aas
push
push
dec
push
dec
push
dec
nop
imul
movsl
cmp
adc
je
outsb
notb
bound
cs
es
or
push
repz
addl
and
es
in
incb
je
dec
and
dec
dec
cmp
jae
gs
mov
movsl
add
fdivr
das
das
xor
je
lods
cmp
leave
inc
adc
xlat
je
cs
daa
aaa
fsubrl
cs
jg
xor
pop
je
jae
xor
les
fsubs
dec
inc
and
inc
inc
sbb
sub
pushl
xchg
lea
into
xor
xor
sti
or
and
cmp
push
das
add
bndldx
or
jmp
push
mov
sbb
adc
lea
lret
filds
xchg
ss
pop
dec
subb
inc
push
add
or
adc
js
pop
ret
pop
lret
pop
fnstsw
push
ds
and
lods
cli
mov
push
lcall
jbe
push
inc
inc
cmc
dec
push
dec
jge
and
test
lret
fcomip
addb
cmpsl
xchg
sbb
cmp
xor
push
push
cmp
dec
jo
or
or
dec
mov
inc
dec
push
fnstenv
test
and
dec
pop
lods
shll
insl
push
mov
dec
es
mov
scas
pop
pop
pop
loopne
cli
inc
inc
dec
xchg
out
out
data16
or
repnz
nop
data16
pop
inc
push
inc
pop
movsl
in
or
xlat
aas
xor
lret
enter
jb
xor
xchg
xchg
xchg
xor
je
xor
jne
ss
mov
xor
sbb
js
cmp
in
jns
cmp
dec
mov
pop
xor
daa
jnp
js
xchg
lret
xor
daa
pop
in
inc
roll
add
outsl
sbb
insl
pop
and
pop
es
push
jns
and
es
fidivs
enter
and
or
pop
es
cmp
daa
cmp
sub
in
cmpl
sub
pop
and
and
sub
iret
and
ret
or
ljmp
fcoms
adc
mov
adc
daa
mov
sbb
adc
sub
ja
addr16
fcomi
add
adc
fidivs
push
push
jo
add
insl
rcll
adc
fildl
sbb
es
enter
bound
in
mov
cmpsl
adc
insb
sbb
jno
adc
xor
adc
testb
daa
dec
imul
ficoms
add
adc
mov
cmp
sub
pop
pop
adc
add
adc
cmpsl
inc
adc
movsb
jmp
adc
cmp
inc
dec
fisubrl
add
jecxz
adc
xor
sub
repnz
aas
shlb
inc
sbb
fstpl
adc
push
dec
pop
inc
push
push
dec
pop
fistps
sbb
mov
aad
xchg
dec
sub
or
xchg
ja
dec
pop
push
outsb
fimull
pop
or
loope
push
dec
inc
pop
or
fstpt
push
push
pop
or
jo
ss
or
inc
ficompl
or
scas
in
iret
mov
sbbl
pop
fdivrl
mov
pop
mov
pop
inc
push
dec
dec
jnp
scas
in
or
mov
xchg
dec
dec
or
divb
inc
sub
pop
pop
add
outsb
mov
or
sub
jb
leave
movsl
xor
bound
xchg
xor
leave
and
gs
jb
addr16
push
cmp
sbb
fistpll
dec
cmp
std
mov
or
jnp
or
gs
and
pop
shrl
sub
out
arpl
push
das
or
add
inc
jbe
addr16
insb
sti
je
insl
insl
xor
inc
imul
adc
adc
xchg
push
mulb
dec
xchg
dec
jae
data16
add
ret
popf
aaa
inc
gs
pop
or
inc
adc
data16
int3
ret
bound
pop
push
push
dec
inc
xchg
or
loope
xor
ljmp
insl
push
and
inc
xor
aas
lcall
and
mov
lahf
and
loopne
sub
je
jecxz
dec
loope
adc
mov
addl
jno
insl
into
add
dec
mov
xor
pop
inc
pop
fs
xor
xchg
add
cli
das
inc
inc
gs
loope
push
sbb
push
outsb
jno
mov
data16
inc
inc
mov
sbb
inc
mov
imul
xchg
outsl
je
add
je
das
popf
mov
aas
jnp
inc
lea
mov
test
in
mov
jmp
cwtl
pop
imul
test
fmuls
pop
mov
or
lods
pop
enter
stos
push
push
inc
xchg
scas
fidivs
mov
daa
push
or
dec
jo
mov
mov
insl
daa
adc
pop
and
outsl
push
shlb
dec
fs
inc
mov
jo
inc
push
inc
pop
popf
jbe
icebp
js
push
test
xchg
jo
es
bound
xor
movsl
mov
hlt
lret
insl
mov
adc
xchg
daa
jecxz
out
push
dec
fwait
dec
jae
mov
adc
insl
inc
daa
cmpsb
inc
pusha
mov
dec
pop
mov
xchg
insb
int
pop
xchg
daa
addr16
ja
ret
xor
jge
in
xchg
bound
aaa
push
into
or
std
addr16
add
test
push
data16
popf
ret
pop
nop
into
mov
or
arpl
jle
iret
test
adcl
pop
stos
xchg
je
mov
push
mov
jno
arpl
push
ja
imul
in
add
jne
movswl
sarb
je
outsl
insl
pop
cmpl
pop
push
xchg
xor
add
push
lock
inc
xor
jno
jne
jp
inc
sahf
push
pop
dec
jae
sbb
gs
pusha
sbb
dec
je
imul
fdiv
inc
je
fs
push
mov
inc
pop
mulb
out
push
arpl
sbb
popa
pop
inc
xchg
inc
push
inc
ds
jns
lahf
inc
js
inc
mov
add
insb
xchg
daa
addl
inc
mov
out
jbe
lret
pop
mov
fidivs
outsl
daa
inc
arpl
xor
popa
push
dec
jne
push
loopne
aas
push
jo
sti
stos
push
imul
das
aad
pop
push
dec
mov
mov
cmpsl
jp
jge
outsb
pop
outsb
push
pop
bound
fcmovnb
cs
es
sub
faddl
into
sbb
add
push
pop
movsl
es
mov
je
xchg
cmpsl
inc
fnstcw
fnstsw
inc
cs
dec
lahf
sbb
push
xor
pop
sub
mov
fadd
push
mov
mov
inc
inc
je
fs
mov
stos
mov
jne
sub
pop
push
loopne
andl
pop
xor
sbb
and
cmp
dec
jae
lock
sbb
cwtl
add
je
loope
xorl
xor
xor
push
imul
add
push
inc
cmp
push
push
push
cld
sbb
scas
inc
pop
and
jg
cmp
int
and
int
sbb
xor
ret
insb
stos
data16
sbbb
rolb
pop
testl
cmp
push
je
push
fisubs
jno
cld
jae
jg
call
bound
movhps
push
je
jp
ret
pop
mov
or
in
aaa
push
xor
pop
lock
jbe
fwait
xlat
pusha
sbb
mov
lods
shrb
sti
imul
push
or
scas
aaa
xchg
pop
sbb
mov
pop
int3
sbbl
dec
jo
mov
sub
or
dec
add
es
adc
mov
movsb
or
je
sub
mov
push
inc
inc
ret
arpl
enter
ss
push
outsl
imul
pop
xor
mov
dec
dec
and
mov
push
stc
das
in
int3
adc
cmp
adc
jae
mov
pop
imul
add
adc
push
das
pop
outsl
fiaddl
mov
xor
push
cmpb
jmp
jns
jmp
adc
mull
imul
push
or
jp
sbb
dec
push
mov
je
sub
outsb
in
cmp
push
sub
or
push
sbb
into
inc
inc
push
push
inc
mov
jnp
jg
push
inc
and
jno
addb
imul
insl
cmp
loopne
sti
inc
xor
insb
das
pop
dec
es
mov
jnp
sub
cmp
xor
insb
mov
pusha
add
sti
dec
arpl
into
addr16
adc
arpl
jbe
push
into
repnz
rorb
add
std
mov
repnz
cltd
repnz
lcall
leave
lret
sub
sbb
repnz
adc
stos
sbb
adc
int
hlt
lea
gs
fidivrs
movsl
adc
mov
repz
lret
into
lret
hlt
cltd
push
lock
outsl
scas
stc
insl
rcrb
xchg
lcall
frstor
fwait
dec
int3
adc
mov
rcr
xor
xchg
sub
pop
push
lcall
fidivl
mov
adc
mov
xchg
rcll
xchg
decl
int
push
xor
rcrl
add
fcomps
nop
xor
inc
popf
pop
ja
jp
push
andb
popa
xor
jg
pusha
loope
addr16
cmpsb
add
dec
or
mov
out
mov
pop
repnz
lahf
popf
shll
sahf
dec
inc
push
test
mov
pop
sahf
shlb
pusha
add
inc
mov
dec
add
rclb
mov
jp
in
data16
add
add
lahf
mov
jp
inc
sti
div
jmp
jg
mov
lcall
jae
lahf
dec
daa
in
leave
add
mov
lock
xchg
dec
and
push
dec
fimuls
xchg
insb
and
cs
inc
dec
dec
pop
ss
iret
add
dec
pop
fistl
mov
sbb
das
fistl
fidivs
bound
inc
xor
mov
das
xor
aam
xor
scas
in
mov
adc
imul
inc
or
arpl
es
cmpsb
int3
mov
pop
and
xchg
out
lea
mov
loope
imul
ja
bound
call
dec
fstl
xor
or
fistl
dec
sub
or
fistpl
ret
mov
mov
testl
sbb
aas
push
mov
decl
pop
sbbb
jnp
in
sbb
jne
push
jo
pop
mov
fistl
add
jp
mov
ret
push
aaa
add
das
out
out
outsb
loop
fildl
repz
mov
push
arpl
add
jb
sub
mov
jnp
cmp
fistl
add
pop
insl
mov
lret
sbb
popf
add
nop
es
mov
mov
aaa
push
es
mov
pop
push
mov
push
xchg
inc
lret
repnz
jg
adc
cmp
test
cld
rcll
testb
or
inc
popa
mov
pop
leave
inc
mov
add
mov
pop
jbe,pt
setbe
inc
push
jbe
jns
adc
lods
pop
cmpsl
ljmp
push
and
decl
inc
bound
cmp
cmp
or
sahf
leave
adc
add
inc
or
rcrb
sbb
jno
nop
push
mov
adc
lret
out
xchg
sub
jo
insl
adc
push
ret
arpl
test
sbb
daa
add
sbb
jg
push
and
outsl
std
dec
xchg
ds
add
cs
xor
mov
sbb
mov
inc
les
xor
xor
jae
daa
xchg
mov
ja
adc
jbe
loop
movsl
aad
fsubs
pop
push
push
xor
push
ja
inc
mov
mov
or
repz
push
dec
in
lock
jecxz
in
pop
add
push
fs
inc
inc
or
add
add
push
pop
inc
cmp
mov
push
rcll
iret
leave
jae
test
insl
gs
cmp
add
xchg
dec
iret
cmp
add
add
xor
jg
test
jne
jno
jbe
cmp
sysret
arpl
cmc
je,pn
mov
gs
lea
cmpsl
movzbl
imul
std
push
and
dec
into
lock
or
js
cmp
sub
sbb
mov
and
push
jb
or
shlb
mov
insl
cmpsb
dec
cmp
push
push
push
ret
xchg
shrl
inc
je
pop
das
aas
cmp
add
push
mov
cmc
jno
fldt
inc
jae
mov
testb
push
gs
arpl
jne
mov
sub
mov
subb
fisttpl
pop
inc
das
push
cmp
sub
xchg
fdivs
movsl
int
mov
out
add
pop
inc
mov
cmp
ja
mov
inc
pushf
test
fcomp
sub
lret
orl
popf
rorb
inc
dec
pop
gs
in
push
sub
jno
inc
bound
mov
mov
jae
sbb
jg
or
addr16
xchg
mov
ret
fwait
cmpsb
jg
pusha
add
mov
push
push
leave
scas
inc
adc
popa
xchg
add
loopne
ret
js
and
call
mov
or
addr16
lret
add
daa
je
cmp
aam
in
daa
jno
shll
cmp
pop
addr16
mov
xor
lret
fs
xchg
inc
push
add
push
adc
push
arpl
xchg
jmp
pop
inc
addl
adc
mov
das
pop
sbb
xor
xor
ret
jmp
movl
add
dec
jp
bound
lods
or
jl
xchg
mov
ljmp
int
mov
sbb
iret
loopw
xorl
test
fdivrl
insb
dec
xor
and
add
icebp
push
or
shlb
adc
dec
cmpl
das
sub
push
or
pop
sbb
and
es
or
dec
xor
pop
imul
pop
ss
inc
addl
mov
xor
aaa
pop
add
addr16
les
xor
dec
test
aaa
jbe
xor
add
icebp
loopne
pusha
or
jecxz
inc
lret
cmp
sub
insb
add
add
je
add
mov
and
sbb
mov
pop
push
xchg
push
xor
push
pusha
andl
test
cmp
imul
lods
xchg
bound
int3
add
pop
xchg
lods
out
sub
push
jbe
hlt
inc
insl
sub
test
or
or
repnz
and
adc
sbb
mov
xor
jne
outsl
xchg
jo
cmp
imul
adc
add
dec
movsb
loopne
daa
inc
addr16
adc
adc
sbb
roll
ret
inc
mov
mov
rolb
dec
dec
dec
jmp
jnp
add
gs
out
xchg
sarl
ja
mov
shll
dec
jbe
insl
or
push
and
lret
jp
sbb
outsl
jmp
shrl
int3
aas
sub
ret
lods
test
push
and
iret
pop
push
sbb
aaa
ror
sbb
rclb
pop
cmp
pusha
adcb
xor
iret
pop
popf
insb
sub
insl
outsl
add
cmp
sbb
add
inc
lods
dec
out
gs
mov
sahf
jo
les
sub
popa
shrb
mov
or
outsl
or
push
or
imul
outsl
mov
pop
inc
inc
jo
loopne
fwait
popf
cmc
cmp
faddl
or
fdivrl
or
popa
mov
mov
xchg
loopne
sbb
xor
ret
ret
adc
xchg
xchg
fsts
mov
clc
or
sbb
js
xor
rorb
jae
dec
movb
sbb
add
xor
pop
adc
aaa
add
dec
or
data16
or
scas
push
mov
sbb
ja
loopne
mov
push
push
movsb
pusha
repz
cmp
loope
sbb
mov
jmp
push
arpl
shl
sahf
cmp
inc
jg
call
or
xor
rorl
or
leave
push
cmp
sbb
fs
inc
push
push
and
das
push
sub
icebp
xchg
jno
jp
imul
stc
pop
repz
adc
arpl
jbe
sbb
add
out
sahf
out
je
in
leave
sahf
out
sahf
mov
imul
inc
xor
out
adc
xchg
dec
fldcw
xor
xor
or
cmp
sbb
gs
xchg
insb
arpl
pop
jae
sbb
gs
adc
xor
xchg
pop
pop
dec
jo
xor
arpl
and
js
pop
jne
cld
test
push
inc
dec
inc
push
push
inc
outsb
je
ja
mov
rol
int3
pusha
add
xchg
push
or
fs
outsb
lock
jnp
cmp
outsb
lods
adc
dec
jl
js
dec
popa
mov
sbb
and
test
mov
mulb
je
mov
mov
mov
adc
ret
test
ret
pusha
push
pop
dec
or
pusha
les
ja
and
aas
jp
sbb
cmp
fdivr
mov
xchg
push
add
jge
xchg
dec
mov
sbb
cs
pop
and
add
sbbl
sub
pop
enter
ds
sbbl
add
inc
cmpsb
push
mov
add
sub
and
inc
cs
and
in
daa
sub
mov
cs
or
xor
in
mov
cs
or
icebp
add
inc
cs
test
in
mov
cs
es
daa
nop
or
add
add
cs
or
pop
ds
in
mov
cs
or
cmpsb
ss
das
and
das
add
pop
jecxz
in
das
je
fdivrl
das
das
xor
pop
das
and
es
pop
jns
push
enter
je
outsl
enter
das
and
adc
loope
xchg
push
pop
jno
push
and
push
dec
inc
dec
pop
das
push
push
inc
push
add
sbbb
movsb
ja
mov
push
inc
and
jnp
push
push
testb
aaa
add
push
inc
push
push
jno
jp
push
xor
add
das
add
test
das
jb
das
shlb
dec
scas
mov
insb
push
cmp
add
or
sbb
mov
leave
lahf
lea
mov
sbb
or
add
add
pop
jae
xor
push
cmc
push
pusha
jbe
fdivs
xor
out
mov
jnp
and
jae,pn
inc
je
cmp
inc
fsubrl
je
fs
jns
push
and
pop
cmp
xlat
xor
daa
test
and
cs
je
pusha
pushw
mov
or
push
or
lock
adc
lret
rorl
xor
pop
les
xchg
pop
or
and
imul
push
dec
inc
cs
push
push
inc
dec
ja
xor
aaa
or
adc
andl
mov
iret
lea
cmp
repz
push
inc
cmp
repz
mov
inc
adc
out
sahf
cmpsl
cmc
jmp
out
sahf
aad
int
mov
jns
mov
jns
out
jno
popa
pop
jl
idivl
inc
cmp
adc
push
sbb
sahf
out
push
add
jmp
fst
es
mov
repz
popf
xchg
lea
jge
insl
imul
pop
pop
push
push
dec
cmp
repz
cmp
sub
jns
iret
repz
add
std
enter
loope
repz
fxch
cmpsl
rorl
leave
push
shll
mov
repz
repz
insl
gs
jns
mov
push
inc
enter
xor
and
adc
cmc
in
out
iret
jnp
jmp
lds
sarl
repz
repz
xchg
mov
iret
jno
gs
daa
jb
in
fmuls
sub
inc
inc
dec
push
inc
push
inc
fs
dec
cli
test
imul
inc
pop
push
push
push
addr16
push
mov
cltd
decl
je
sub
pop
or
add
shrb
cltd
popa
pop
push
push
or
xchg
mov
push
and
add
sbb
inc
add
pop
push
add
dec
push
cmc
pop
push
or
and
movsl
xchg
test
inc
ret
xor
jbe
xchg
lods
cmp
add
dec
lock
and
push
adcl
sub
in
lahf
test
popf
push
vmwrite
or
sub
lcall
shr
mov
jo
adc
cmp
imul
imul
pop
fisubl
imul
xor
rol
iret
mov
pop
mov
sbb
xor
or
add
fldcw
inc
ret
sub
jo
xchg
arpl
arpl
sbb
xor
push
jmp
outsb
jbe
or
jbe
lret
stc
cmp
daa
adc
add
and
scas
xchg
frstor
jg
add
jnp
jo
mov
dec
pusha
loopne
ret
mov
sahf
cmpsl
stc
std
ret
in
out
sahf
out
int
mov
sahf
test
jne
sahf
out
insl
gs
push
dec
out
sahf
out
xor
cmpsl
jnp
adc
push
in
jns
out
rol
mov
sahf
test
jge
sahf
out
jne
gs
push
out
sahf
out
cmp
repz
sbb
add
cmp
repz
rol
mov
rep
popf
xchg
test
repz
insl
gs
push
dec
inc
cmp
repz
xor
lcall
jmp
out
int
mov
sahf
out
sahf
cltd
lea
sahf
out
push
dec
inc
inc
cmp
jns
out
and
iret
repz
in
in
int
iret
repz
mov
cmp
repz
xchg
mov
iret
repz
imul
out
repz
sub
mov
repz
repz
fnstcw
repz
leave
mov
iret
rep
popf
xchg
lea
jns
imul
push
mov
mov
cmp
mov
repz
push
in
in
aad
cmp
repz
mov
mov
xrelease
imul
dec
inc
xor
repz
adc
add
mov
push
jmp
sahf
out
sahf
mov
lea
out
cmpl
sahf
out
inc
xor
jns
sbb
add
cmp
repz
leave
shl
iret
repz
repz
iret
xchg
mov
imul
pop
push
inc
cmp
cmp
and
adc
jns
out
add
in
jns
out
ror
sarl
test
jns
out
jge
imul
inc
cmp
sarl
add
fnstsw
repz
int
mov
repz
iret
repz
jne
popa
pop
push
dec
cmp
repz
cmp
sub
imul
add
jns
out
in
ror
sahf
out
sahf
sarl
sahf
out
mov
imul
push
dec
inc
cmp
and
cmp
sarl
icebp
jmp
iret
repz
sarl
iret
popf
xchg
lea
repz
pop
push
dec
inc
repz
repz
out
lcall
loope
out
sahf
leave
mov
out
xchg
lea
sahf
out
pop
push
dec
cmp
xor
add
sarl
icebp
in
aad
cmp
repz
mov
cmp
mov
jne
iret
repz
gs
push
dec
repz
repz
out
ds
adc
sahf
out
sahf
aad
lds
out
test
out
sahf
out
jno
pop
push
sahf
out
sahf
inc
cmp
out
out
or
push
in
out
sahf
leave
shll
mov
out
sahf
out
imul
sahf
inc
cmp
and
out
or
stc
mov
jmp
fst
int
mov
mov
movsl
popf
xchg
lea
repz
jge
jno
repz
repz
push
inc
cmp
iret
and
fidivs
push
jmp
iret
repz
mov
xchg
cmp
repz
xorl
repz
push
dec
inc
cmp
repz
xor
sahf
out
lcall
jns
out
leave
mov
jns
out
lea
jns
gs
pop
push
dec
inc
jns
out
cmp
sub
sbb
jl
out
or
stc
scas
icebp
iret
repz
jmp
mov
iret
repz
mov
cmp
repz
gs
push
iret
repz
dec
inc
cmp
repz
scas
lods
push
iret
repz
jmp
sarl
cmp
lods
test
iret
repz
test
imul
pop
push
dec
lods
out
lods
lods
cmp
repz
lods
lods
lods
lods
iret
repz
rep
lods
push
jmp
repz
leave
sarl
test
iret
repz
jns
gs
push
dec
ds
repz
xor
out
cmp
repz
lods
lods
stos
push
jmp
loope
int
shl
iret
repz
popf
xchg
test
repz
jns
imul
cmp
cmp
iret
repz
in
out
sahf
out
fxch
sarl
mov
jns
out
jno
pop
push
push
out
sahf
out
cmp
out
lahf
adc
test
sahf
out
int
mov
sahf
lods
movsl
cltd
lea
jns
gs
push
dec
out
sahf
out
cmp
jns
adc
push
loope
jns
out
rol
mov
sahf
test
jns
sahf
out
insl
gs
push
dec
out
sahf
out
xor
repz
adc
icebp
in
iret
repz
aad
lds
mov
movsl
popf
xchg
iret
repz
xchg
lea
iret
repz
dec
inc
cmp
repz
and
or
add
loope
repz
repz
mov
cmp
mov
insl
cmp
repz
pop
dec
inc
xor
sub
cmp
repz
int
repz
repz
iret
repz
mov
cmp
repz
dec
inc
cmp
and
out
sahf
out
movsb
cmc
in
jmp
sahf
ror
sarl
jns
cltd
xchg
mov
jns
gs
dec
sahf
out
sahf
inc
cmp
sub
sbb
popf
idivl
or
out
sahf
in
aad
mov
jns
popf
xchg
lea
jge
imul
push
dec
cmp
sahf
out
sbb
out
out
out
mov
int
sahf
out
lds
jns
out
lea
jns
insl
gs
dec
inc
cmp
out
xor
sbb
dec
repz
mov
iret
repz
leave
mov
cmp
repz
mov
iret
rep
gs
push
dec
iret
repz
inc
cmp
out
cmp
add
mov
out
aad
lds
rep
mov
iret
repz
jge
imul
cmp
inc
cmp
sub
ds
repz
ficomps
push
in
aad
shl
iret
repz
iret
repz
lea
cmp
repz
inc
cmp
iret
repz
or
sahf
icebp
out
sahf
out
aad
shll
popf
xchg
lea
jns
insl
popa
push
dec
out
sahf
out
inc
xor
jns
sbb
in
cmp
repz
fst
leave
shl
iret
repz
iret
repz
test
imul
push
dec
inc
xor
repz
adc
add
jns
out
pushf
icebp
jmp
jns
int
mov
sahf
out
cltd
lea
sahf
out
popa
pop
push
dec
fsubp
jns
cmp
pushf
ficomps
fwait
push
jmp
sahf
aad
sarl
jns
mov
imul
push
dec
cmp
sahf
and
stc
lcall
fst
int
cmp
repz
repz
xchg
lea
iret
repz
pop
push
inc
cmp
cmp
repz
and
adc
imul
cltd
icebp
loope
out
sahf
leave
sarl
test
out
sahf
out
jge
insl
gs
out
sahf
pop
push
dec
inc
cmp
sbbl
push
divb
pop
js
push
jmp
xchg
push
loopne
fistps
jo
bound
xchg
aas
data16
push
push
scas
or
push
push
mov
fs
jp
rclb
fimuls
jbe
cs
inc
pop
jnp
pop
push
jo
jne
into
adcb
ja
je
jo
jl
ja
add
arpl
jae
bound
je
fsts
movsb
test
outsl
insb
mov
pop
jle
outsb
bound
jo
push
jo
pop
rorb
jae
jbe
pop
gs
push
ficomps
and
fucom
pop
push
outsl
dec
or
pop
insl
mov
jg
push
push
shll
xor
mov
mov
adc
push
push
scas
loope
xor
outsl
inc
rolb
pop
or
jne
and
gs
outsb
push
pushf
jb
adc
push
data16
mov
mov
bound
punpckldq
in
sti
outsb
xor
pop
jl
popw
out
jns
insl
jne
outsl
bound
push
data16
int
or
xchg
xor
push
outsl
outsl
addr16
mov
jne
loopne
xchg
inc
test
jnp
orl
daa
dec
cmp
pop
divb
arpl
jae
outsl
leave
das
nop
jnp
imull
outsl
pop
push
push
fwait
push
je
aaa
enter
jp
xchg
jo
fsubl
pop
arpl
or
or
ret
jnp
lret
aas
jbe
hlt
mov
insl
dec
push
jne
and
divb
cmp
clc
ret
popf
call
jnp
xlat
push
je
push
lahf
aaa
mov
jae
cs
jae
movsl
push
ss
pop
arpl
jno
jne
pop
in
cmp
push
sbb
mov
jae
out
rcll
lret
cmp
inc
adc
data16
add
push
insb
lahf
push
gs
mov
cmp
je
inc
jo
pop
xor
lods
mov
je
scas
jne
je
sarl
fdivs
mov
pop
loop
cmp
push
fbld
daa
popw
mov
punpckldq
jne
repnz
jnp
insb
extrq
data16
je
data16
addr16
jno,pt
insl
jo
jo
push
cmp
outsb
addr16
gs
jo
xchg
add
bsf
pop
addr16
inc
and
xchg
insb
aad
out
test
or
lods
cltd
dec
jae
push
imul
arpl
jl
stos
jb
testl
out
inc
in
outsl
aas
xchg
popf
sti
pop
dec
cli
mov
cmp
in
cltd
fisubrs
pusha
das
bound
lretw
jle
ficoml
data16
punpckldq
lods
test
mov
cmp
jne
jae
loopne
or
insb
inc
iret
mov
bound
push
jo
pushf
xor
push
push
push
pusha
push
xor
or
push
cmp
pop
cld
pop
adc
jo
outsb
cmpsl
push
cmp
leave
mov
sub
cmp
pop
ret
pop
fnsave
push
cmp
bnd
test
pop
mov
call
outsl
add
mov
shll
mov
popa
pop
aas
mov
jno
push
ss
push
ja
nop
jge
outsl
pop
dec
add
clc
push
pop
aam
das
push
push
adc
frstor
push
pusha
mov
inc
or
add
push
pop
pushf
or
insl
jbe
jl
outsb
add
ja
jp
adc
inc
or
jae
gs
pop
mov
js
mov
aaa
jo
scas
fs
rcr
arpl
cmp
inc
pop
push
jo
xchg
loope
gs
jae
ud1
jo
xchg
faddl
lret
jbe
push
cmovg
sti
mov
push
pop
fisttpll
pop
stos
outsb
ja
pop
push
fcompl
js
adc
jno
push
or
pop
xorb
popf
ljmp
push
or
cltd
out
xlat
push
cmc
push
insb
xchg
insb
mov
jp
sub
in
jg
rolb
ret
fsubrs
push
andb
adc
sub
scas
xchg
rclb
bound
stc
push
bound
jne
xchg
jmp
xchg
packsswb
minps
ds
loop
fldcw
scas
push
call
fs
enter
imul
cmp
imul
push
outsl
mov
pop
or
mov
insb
pop
in
cld
sub
push
push
imul
or
push
jns
pop
shlb
pop
ja
push
push
popa
daa
xor
js
xchg
mov
mov
data16
jle
out
icebp
enter
gs
push
jo
add
ljmp
cs
mov
jp
into
loope
nop
pop
sbb
mov
sub
pushf
mov
jb
jbe
pushf
inc
femms
xchg
push
xor
mov
outsb
imul
lock
add
daa
outsl
es
or
negl
ja
jp
stos
popf
or
js
add
sub
sub
aad
mov
punpckhdq
outsl
jae
in
adc
pushf
comiss
loopne
adcl
mov
loop
dec
jnp
outsb
inc
push
insl
out
xor
packuswb
pcmpgtw
rclb
push
jp
push
jbe
pop
into
or
jae
popw
fstl
movhps
pop
stc
jo
bound
js
outsw
out
jo
out
mov
rorb
das
ja
pop
mov
push
push
syscall
into
sbb
push
les
and
adc
adc
sbb
ds
jo
cld
pop
cmpb
call
movsb
jbe
imulb
sbb
and
cmpsb
aas
xchg
mov
pop
xor
or
hlt
and
push
in
mov
bound
packssdw
pushf
movsb
push
cmpsb
out
in
gs
arpl
or
mov
inc
lods
fisubs
push
into
push
jp
push
lods
push
adc
pop
rorl
in
xor
cs
adc
push
jmp
jo,pt
jmp
xchg
cmp
jb
mov
test
push
lea
add
sbb
pop
mov
fsub
mov
das
mov
push
outsl
jne
mov
push
js
add
push
and
lret
adc
outsb
push
add
out
pusha
pusha
cltd
popw
cmpsw
int3
pop
js
rorl
push
loopnew
loope
mov
arpl
je
jnp
push
negl
or
xor
push
push
pop
ja
inc
xchg
push
lahf
push
jno
mov
jo
jo
outsl
xor
lret
outsl
jp
pop
add
xchg
or
pop
dec
xchg
add
fisubs
out
mov
push
ja
xor
push
or
mov
jae
push
cmpsl
ja
cwtl
fisubs
sbb
ja
inc
rcl
adc
push
adc
movd
imull
cmp
cs
loopne
mov
popa
insb
in
push
jnp
outsl
inc
mov
dec
mov
fsubrl
mov
hlt
lock
pop
push
xor
mov
jbe
inc
jo
and
push
inc
pushw
mov
ja
add
jp
aad
push
movsb
leave
push
bound
fmuls
sub
push
push
push
cmp
shlb
push
mov
lret
push
aam
insl
stos
out
lock
sahf
negl
or
popf
addb
mov
sbb
push
data16
dec
je
orb
jno
sub
sub
dec
pop
push
outsb
mov
dec
push
fs
pop
and
loop
mov
fisttpll
push
push
push
or
addr16
outsb
sub
jbe
jl
push
push
xor
dec
les
jo
out
dec
push
xor
push
push
ror
fdivrp
maxps
jnp
js
pop
mov
lods
fidivl
out
push
xor
adc
out
insl
outsb
fs
xor
push
sub
icebp
mov
push
iret
push
gs
add
xor
mov
mov
call
sbb
mov
imul
loop
dec
punpckhdq
push
cmp
push
cltd
push
and
loope
add
pop
mov
into
and
mov
lods
or
popf
push
imul
js
fs
push
setns
loop
push
mov
or
dec
xchg
jnp
jnp
sbb
mov
jl
mov
mov
data16
mov
xchg
add
fs
fists
jae
mov
sbb
cmp
xor
test
mov
mov
imul
xchg
daa
fisubrl
push
jno
test
fcoms
cs
outsb
pop
push
call
jbe
dec
jae
fs
push
mov
jp
inc
jg
bswap
push
insb
and
sbb
dec
fs
ja
inc
mov
cmc
pop
int3
jp
add
inc
or
xchg
popf
gs
push
mov
inc
mov
mov
cli
jb
jp
arpl
or
or
bound
mov
mov
push
xchg
or
dec
movsb
rcrb
push
lret
js
pop
cmpsl
cld
bound
pop
insb
inc
jge
lds
jae
cwtl
pop
sahf
mov
jnp
cmovg
jg
testb
sub
add
jg
jne
imul
punpckhwd
pop
aaa
dec
aas
fiaddl
pushf
iret
adc
mul
scas
mov
pop
int
addr16
or
addr16
aam
and
dec
pop
out
dec
jo
sbb
dec
jp
jne
jb
xorb
rorb
out
cmp
mov
bswap
and
sub
push
cmpl
inc
xchg
pop
or
packsswb
mov
sub
das
fs
shll
pop
push
fmul
adc
dec
mov
inc
push
daa
orl
add
push
enter
insb
mov
out
push
or
mov
dec
add
jo
bound
js
je
or
sbb
je
into
imul
jnp
repnz
add
push
ja
insl
je
sub
bndldx
jne
fisttps
push
insb
divps
jno
scas
imul
or
cmp
das
in
addr16
punpckldq
out
je
push
cmp
jo
pop
cmp
je
fisttpll
bound
dec
add
lahf
insl
sub
outsl
fs
daa
cmpsb
gs
sbb
test
push
rcr
ds
inc
femms
test
cmp
pushf
push
xlat
jne
pop
popf
push
mov
ds
out
pop
outsl
out
jbe
pcmpgtw
ja
mov
push
jae
test
arpl
push
jb
cmp
jbe
sahf
lret
sub
push
mov
mov
cli
dec
inc
je
push
jo
cmp
inc
push
je
sub
popf
push
sbbb
jp
mov
xchg
push
jae
jno
test
arpl
push
jl
mov
test
mov
insl
mov
outsb
test
pop
mov
outsl
int
arpl
push
outsl
jbe
insl
mov
mov
arpl
push
nop
mov
nop
popf
cmpl
es
dec
push
push
shlb
dec
and
sti
push
inc
push
push
loopne
jp
gs
inc
ss
insb
outsb
jl
sub
imul
add
jge
outsl
imul
sub
into
push
push
mov
sbb
inc
pmaxsw
arpl
push
into
and
adc
sub
outsl
pop
push
es
cmp
push
daa
push
pop
mov
fsubl
or
push
stos
push
cmp
sbb
jp
insl
out
adc
pop
aaa
sub
pop
arpl
enter
loope
xor
inc
lea
mov
jbe
repnz
xchg
out
push
xlat
dec
insb
dec
add
add
cmp
enter
xchg
fidivl
pop
cmp
or
dec
data16
push
outsb
add
mov
aas
or
push
jo
fdivs
cmpsl
cmp
sub
sbb
cmp
imul
mov
loopne
pop
setae
xchg
push
test
data16
fiaddl
lods
aaa
stc
dec
je
push
arpl
push
into
out
push
or
bound
lock
punpckldq
dec
loop
and
inc
dec
insb
push
pop
bound
aas
pop
dec
jp
xsaveopt
icebp
or
cmp
int3
call
inc
or
jecxz
cmp
pusha
popf
jns
dec
cmp
dec
push
sub
push
data16
push
aas
sub
and
jo
clc
int3
aaa
xchg
int3
jae,pn
jp
jl
dec
jno
dec
fiaddl
sbb
push
cmpb
jnp
sbb
fmuls
out
xor
xor
clc
push
sub
imul
and
data16
subb
jbe
push
push
cmp
jmp
gs
push
dec
push
outsb
fs
dec
mov
push
cmp
add
insl
jno
push
daa
stc
mov
mov
cwtl
das
int
mov
popa
cmp
cmp
pop
xchg
iret
mov
or
mov
push
ret
mov
mov
sahf
push
jne
daa
dec
fisttpl
fstp
outsl
pop
dec
daa
pop
mov
pop
iret
push
add
mov
push
outsl
lods
jae
push
outsl
ljmp
bound
or
adc
sbb
fs
push
push
imul
pop
test
push
mov
rcll
mov
fs
cmp
aam
pop
jo
cltd
and
dec
jbe
or
ja
push
push
loope
or
sysenter
js
fmulp
punpcklwd
mov
jae
pop
clc
pop
je
cmp
lock
mov
pusha
push
mov
ficompl
pushf
adc
cltd
xchg
insl
inc
or
pop
paddq
pushf
js
insb
lahf
lret
mov
jo
jo
js
pop
bound
mov
add
or
daa
push
scas
jge
imul
arpl
push
pop
jb
outsw
je
push
dec
pop
fimull
push
push
out
push
jmp
sub
dec
push
jo
push
adc
out
xor
in
outsb
mov
xor
les
xchg
push
xchg
sahf
loope
and
push
jo
test
jbe
inc
jbe
mov
xchg
push
iret
push
mov
popf
enter
daa
mov
loop
or
shrb
add
push
dec
add
fmulp
jg
seto
gs
rorb
shrb
mov
xchg
push
adc
outsb
aam
cmp
pop
fs
daa
push
fisubrs
es
data16
xchg
stos
mov
cmovno
push
pop
into
cmp
cmp
scas
insl
sub
push
push
adc
cmp
mov
mov
and
outsl
bound
outsb
xchg
add
aaa
push
pushf
insl
divl
dec
rcrl
lret
gs
cmpsl
sbb
dec
loop
fcomps
je
jp
test
aaa
fisubs
imul
jbe
xor
push
repnz
out
add
daa
xchg
punpckhbw
sbb
into
push
iret
push
push
sub
xchg
data16
cs
cmpb
xlat
aam
fimuls
pop
scas
arpl
push
inc
in
and
lret
xor
push
jbe
add
xor
pop
inc
adc
cmp
shrd
gs
jl
jp
roll
sbb
sbb
cmp
loop
insl
xchg
push
sub
push
cmp
adc
ja
jecxz
ds
je
jne
testb
lret
sbb
int
inc
inc
insl
pminub
dec
cmp
js
inc
jbe
mul
push
jnp
addr16
cld
sub
or
shlb
mov
test
mov
sub
fnstenv
pcmpeqw
push
addr16
adc
jb
sbb
mov
jbe
pop
je
cmc
xchg
mov
sbb
push
sbb
aaa
push
push
insl
insl
push
cmpb
mov
dec
push
and
roll
popl
shll
scas
jne
or
pop
arpl
out
pop
pop
pop
lods
push
rcr
sarl
push
cmc
push
outsb
fidivrs
mov
and
cmc
outsb
iret
inc
sub
jb
bound
popa
das
add
push
jnp
addl
dec
add
push
push
or
push
clc
daa
add
push
mov
jecxz
cmpl
bound
or
push
lcall
imul
pop
inc
aas
xchg
les
ljmp
mov
push
out
je
loopne
inc
lcall
fildl
inc
or
loope
mov
xor
cmp
xchg
adc
adc
inc
inc
mov
sbb
inc
test
mov
cmp
inc
xor
pushf
ficoms
jo
scas
push
or
xchg
push
sbb
jbe
into
and
faddl
jae
jge
pop
nop
sahf
sahf
xlat
ret
push
test
xchg
daa
sub
dec
mov
push
sub
outsl
in
popa
iret
mov
sbb
addr16
push
arpl
mov
aas
push
pop
pop
cs
sub
inc
dec
jle
push
insl
lahf
mov
movsb
dec
push
jp
push
outsl
fs
and
mov
cmpl
aaa
mov
and
bound
dec
push
and
pop
in
or
jmp
pop
sarb
data16
lods
pop
shrb
cmp
dec
bswap
stos
bound
mov
into
je
add
sarl
mov
or
cvtpi2ps
push
pop
ja
je
jno
mov
mov
outsl
mov
popf
psubusb
addb
negb
xor
pcmpgtd
mov
es
arpl
push
xchg
jo
push
push
subb
out
or
or
loopne
push
mov
inc
mov
pop
int
push
push
jl
xchg
inc
jbe
scas
fldl
inc
push
adc
xchg
lret
cmp
or
fisubs
pop
adc
sarl
push
outsb
inc
pop
sub
cmpsb
insl
dec
in
bound
inc
jp
push
test
or
push
es
jae
pop
push
mov
fmull
gs
outsw
mov
pushf
comisd
gs
sbb
das
insb
stc
dec
lea
xchg
push
pop
jle
bound
jno
mov
aaa
test
nop
mov
cmpsl
enter
xor
les
les
nop
and
stc
xor
add
outsb
add
std
out
sub
push
ficompl
bound
nop
sarb
push
jns
push
js
pop
or
aaa
mov
vmread
mov
push
imul
push
xor
push
fmull
dec
or
subps
push
lock
pop
adc
dec
pop
shll
jnp
aaa
pop
fidivl
sub
mov
push
pop
ja
daa
mov
push
aaa
bound
xchg
push
faddl
mov
pop
inc
cwtl
mov
ja
popf
adc
jo
pop
lods
lods
imul
xchg
mov
xor
fisttps
adc
ja
testb
outsb
mov
nop
in
adc
addr16
fists
pusha
add
add
push
jp
jae
mov
push
js
sub
xchg
cmp
and
push
ljmp
push
jnp
cmp
pop
mov
jnp
or
pop
mov
aam
das
scas
cs
pop
push
scas
push
push
out
cs
enter
dec
je
fiaddl
aaa
and
pop
enter
ja
add
cmp
jge
jne
daa
push
bound
cmp
imul
push
pop
push
jbe
sub
scas
shl
rorb
insl
fs
add
push
dec
push
jbe
fsubl
lds
lret
add
pop
mov
rclb
outsb
sub
ss
lss
cmp
js
sbb
push
sbb
lds
dec
jo
insl
mov
pop
das
add
fs
sahf
pusha
pushw
imul
push
je
sub
shlb
push
insl
jne
pop
outsl
sub
mov
dec
cltd
jge
adc
insb
scas
jp
mov
adc
jl
add
jp
insb
jbe
lret
mov
jnp
in
js
jae
jp
push
xor
fisttpll
mov
jne
push
jbe
repnz
push
push
jae
jno
popa
inc
jl
jae
rorb
outsl
mov
xchg
cmc
push
cmp
bound
gs
mov
push
lcall
inc
movsl
cltd
lahf
lods
les
push
jae
lock
gs
push
fsubr
setb
aam
insw
in
jmp
pop
mov
push
xchg
cmp
cwtl
pop
jp
xor
les
pop
fwait
out
add
adc
in
push
scas
pop
pushw
nop
clc
push
add
subl
loope
fnsave
cmp
fs
imul
pcmpgtw
push
rorb
mov
gs
bound
out
aam
xchg
scas
inc
arpl
ds
cmp
jge
adc
pop
inc
pop
jge
add
pop
add
testb
xor
push
push
loopne
insb
inc
push
push
cmp
dec
push
ss
imul
push
push
dec
pop
add
stos
dec
sbb
aaa
test
mov
jge
jg
dec
es
pop
sub
pop
das
aas
aad
nop
outsb
fstps
jg
inc
and
std
xor
iret
sub
stc
push
cmc
icebp
inc
cmp
jbe
jns
ss
inc
inc
inc
dec
dec
dec
lods
adcl
mov
pop
pop
dec
imul
imul
and
inc
add
push
sub
or
sub
andl
bound
out
ja
add
mov
std
pop
dec
dec
push
inc
pop
inc
add
cmp
add
pusha
push
jge
pop
xchg
stos
mov
mov
mov
mov
push
bnd
push
in
rcll
push
push
mov
push
imul
imull
out
cld
sbb
jmp
lret
and
adc
cmp
addl
inc
outsb
sbb
lcall
or
and
pop
pop
je
mov
inc
pusha
mov
push
movsb
xchg
adc
mov
mov
adc
adc
movl
fimuls
cmp
popl
lds
sub
jo
push
sub
es
pop
js
rorb
push
shlb
loopne
fildll
gs
jo
popf
adc
xor
push
push
arpl
dec
or
sub
pop
aas
cltd
push
jle
es
in
jg
and
sbb
ja
outsl
mov
mov
ljmp
or
xor
mov
bound
cwtl
sub
adc
cmp
jae
push
pop
jg
mov
ja
lea
vpcmpgtd
push
pop
cmp
addb
sbb
push
jno
aaa
adc
push
push
iret
loopne
test
jo
shl
dec
mov
mov
loop
jg
addr16
mov
flds
jne
adcb
adc
ja
pusha
xor
mov
mull
xor
xor
cmp
nop
push
subl
or
test
add
int
loopne
rcrb
or
mov
cmp
sldt
das
mov
or
add
inc
xor
stc
fildll
xor
scas
or
in
or
xor
inc
cmp
dec
std
dec
add
jns
inc
and
negl
sarl
jp
xor
js
lods
xchg
xor
add
sub
imul
jne
inc
loopne
and
add
pop
jmp
lret
sub
mov
dec
dec
dec
jns
ds
sbb
jmp
or
out
dec
les
pop
push
test
jg
test
dec
inc
mov
hlt
stos
mov
lods
pop
push
push
push
test
pusha
adc
or
jecxz
jge
enter
rol
push
inc
dec
push
xor
xor
pop
lods
sub
arpl
rorb
imul
inc
mov
pop
push
test
nop
jb
scas
jno
adc
add
fucompp
arpl
sub
push
sbb
push
test
cmp
pop
cmp
popw
mov
outsb
mov
mov
nop
pop
inc
push
push
or
dec
aaa
xor
das
loope
loope
and
dec
push
lret
ret
sbb
out
sub
into
cmp
sub
mov
dec
or
sti
das
roll
xor
sub
loope
addl
sbbl
or
pop
pop
je
arpl
xchg
mov
push
in
or
add
push
push
adcb
sbb
out
xchg
push
or
or
fldenv
imul
mov
add
inc
or
inc
ds
add
and
into
pop
pop
fldcw
js
ret
out
mov
dec
xor
inc
dec
out
inc
loop
sbb
jbe
mov
es
jo
add
jbe
add
lret
inc
cmpsl
mov
std
pop
sub
inc
mov
add
dec
inc
mov
mov
sub
rcrl
loope
imul
dec
test
mov
addr16
push
dec
push
pop
pop
addr16
mov
fisubrl
push
stos
inc
pusha
push
cmc
adc
das
cmpsl
sub
mov
xor
stos
add
popf
pop
bound
dec
adc
aas
dec
mov
sub
sub
or
add
add
push
cmp
inc
jns
insl
inc
pop
ds
cwtl
ret
and
push
cmp
dec
shll
dec
out
leave
mov
nop
push
cmp
jb
adc
pop
adc
and
adc
jp
mov
fwait
and
outsb
jnp
shll
pop
xor
je
mov
insb
stc
dec
cmp
push
je
cmp
cmc
cmp
jge
push
pop
cmpsb
inc
inc
aas
add
call
mov
movsl
incb
and
dec
cmpsl
loopne
mov
std
add
out
jb
jg
test
movsb
dec
data16
mov
mov
popf
pop
rcrb
mov
sbb
out
ja
stc
out
jmp
adc
push
fucomi
cmpsl
in
pop
fstpt
xor
loope
jb
ret
xchg
jg
bts
fmull
push
pop
scas
out
popf
mov
syscall
sbb
push
pop
or
or
or
or
or
fldt
adc
dec
aaa
jns
adc
and
pop
outsb
mov
xchg
inc
inc
push
addr16
das
push
loopne
mov
pop
imull
outsb
cmp
out
and
jae
pop
jb
pop
jo
orb
aas
test
repz
jo
pop
xchg
sub
mov
aas
sbb
in
iret
aas
fcoms
sbb
add
f2xm1
mov
out
hlt
das
daa
rcrl
lar
adc
add
xchg
lahf
imul
cmpsl
mov
inc
addr16
cmp
repz
popa
adc
repz
mov
jns
out
jge
push
sbb
sarl
sbb
negl
repz
jns
jp
negb
jnp
std
pop
push
add
in
sub
push
inc
rorl
add
xchg
mov
xchg
dec
cs
cs
es
adc
dec
lea
sbbl
call
scas
inc
aaa
pop
cmpl
orb
xchg
jns
add
inc
pop
leave
push
pop
repnz
sti
or
or
pslld
and
cltd
pop
jg
jl
mov
lret
xor
sbb
aam
decl
and
lahf
mov
sub
scas
sahf
push
rcrl
es
push
sbb
test
xchg
fcoms
incl
mov
mov
inc
cli
shlb
addb
cmpsl
rolb
dec
and
inc
pushl
loope
ljmp
inc
mov
cmp
inc
mov
sahf
cld
in
jg
push
inc
mov
repz
test
sbb
mov
inc
in
test
hlt
clc
in
loop
jnp
rolb
int
xchg
xcrypt-ofb
cmpsl
scas
mov
push
data16
ja
dec
dec
lcall
in
xchg
cmp
mov
test
pop
ds
pop
cmp
lahf
xchg
pop
add
icebp
mov
jmp
decb
mov
fsubrl
xchg
stc
hlt
sub
mov
outsl
dec
lret
int3
mov
and
es
int
add
mov
ds
movsb
jno
stc
inc
pop
gs
push
mov
inc
aam
data16
lcall
jecxz
sbb
adc
test
inc
inc
cmpsl
mov
insl
mov
mov
pushl
mov
xchg
rcl
inc
ret
dec
bound
in
xor
loop
lds
call
lds
inc
into
adc
fildll
xchg
cmp
pop
mov
xchg
inc
and
mov
mov
bound
ret
push
jge
mov
xor
push
cld
inc
filds
cmpsb
ljmp
sub
lods
mov
inc
rcr
push
aas
fs
int
push
js
add
cmp
jnp
es
xor
lods
cmp
orl
add
fdivrs
lcall
sbb
jmp
cmp
test
or
das
cmp
sbb
out
dec
xchg
lcall
cmpsl
mov
andl
mov
test
mov
sub
aaa
xor
push
push
scas
iret
insb
es
pop
add
jle
jmp
mov
xchg
cmp
sbb
data16
test
adc
mov
fisubs
test
adc
stos
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
fsts
push
push
push
std
idiv
iret
push
call
in
xchg
cmp
sub
ljmp
out
adc
xchg
and
sub
fildl
movb
sbb
or
mov
mov
lea
xchg
fcmovnu
std
add
fmuls
cmp
xchg
jl
mov
subb
inc
loop
add
dec
jne
mov
ret
pop
pop
pop
jg
lock
pop
jmp
add
add
test
add
mov
add
xor
sub
sbb
rcl
adc
jb
arpl
dec
pop
iret
bound
add
inc
rorb
inc
ljmp
in
aas
rcrl
inc
js
push
inc
jb
inc
dec
sar
cmp
and
outsb
fs
imul
cmp
cmp
dec
push
xor
sbb
inc
mov
es
mov
adc
xchg
push
adc
es
dec
js
es
fs
insl
jo
xchg
push
dec
inc
dec
xor
or
jp
mov
incl
lea
mov
imul
sbb
mov
inc
outsb
fs
into
in
cwtl
nop
mov
dec
iret
xchg
pop
add
mov
loopne
sti
outsl
jae
dec
popa
jo
sbb
jae
addl
pusha
sub
mov
outsl
imul
cltd
sbb
sbb
jmp
dec
cld
loope
or
outsl
push
imul
popa
insb
push
dec
popa
mov
out
pusha
inc
inc
fs
imul
push
push
push
outsb
inc
inc
xor
pusha
popf
ss
daa
mov
fnsave
fcmovnb
mov
test
xor
outsl
mov
push
jb
pop
cmp
xchg
mov
jbe
mov
mov
dec
lods
jo
xor
inc
insb
movsb
or
xchg
jb
ret
jae
sub
or
mov
inc
dec
stos
outsb
push
aaa
dec
inc
push
mov
sbb
pop
and
sbb
dec
je
movsl
pop
mov
inc
xchg
cmp
and
inc
in
pusha
inc
orl
sbb
mov
dec
pop
es
jo
imul
push
xchg
fmuls
mov
icebp
fs
mov
sbb
jo
inc
subb
data16
jno
imul
push
or
ret
inc
sbb
jns
adc
filds
pop
pop
xor
or
push
dec
pop
mov
mov
lahf
jo
adc
addl
push
popa
test
push
mov
or
xor
sub
addl
js
hlt
jbe
jmp
ds
xchg
jmp
cmp
fwait
xchg
out
fildl
cmpsb
imul
std
gs
in
xchg
inc
jmp
std
mov
dec
dec
push
mov
lea
call
jo
imul
adc
outsb
lcall
inc
jbe
cmp
hlt
add
fldenv
jb,pn
jo
movsl
and
std
cmp
inc
push
cmovg
adc
xchg
push
outsl
jns
push
lret
nop
sbb
push
push
insl
pop
mov
mov
je
pop
pop
pusha
jae
scas
inc
inc
cmp
inc
sbb
pop
fs
fsubrl
and
inc
and
mov
cwtl
clc
jnp
jno
dec
in
lods
subl
enter
or
scas
lret
sub
and
jmp
push
sbb
adc
adc
ja
addr16
sub
jne
clc
cmp
sbb
je
ja
sbb
js
clc
sub
push
daa
in
mov
adcl
daa
incl
push
inc
add
dec
add
or
fiaddl
loopne
psadbw
sbb
pop
or
add
sub
sbb
pop
rolb
rcr
add
mov
adc
adc
dec
cld
add
sub
cmp
add
out
push
cmp
mov
jbe
jae
inc
and
jb
jge
dec
repz
jl
imulb
dec
add
add
cs
popa
adcl
or
aaa
fcmovb
add
sbb
cmp
mov
add
add
inc
incl
add
add
add
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
mov
mov
xchg
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
popa
jmp
