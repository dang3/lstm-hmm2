jmp
mov
jmp
mov
lock
add
cmp
mov
test
dec
mov
jo
xor
mov
gs
inc
mov
pop
adc
lods
int3
jno
cmpsl
mov
lock
push
add
mov
dec
bound
int3
dec
mov
xchg
xchg
mov
das
or
mov
jg
out
jg
cmp
stc
addb
jo
mov
adcl
std
jnp
add
lret
mov
pop
bound
inc
jbe
push
jne
jne
fsts
push
and
or
outsb
push
pop
and
dec
test
sarb
mov
test
sbb
test
sbb
jg
xchg
push
mov
inc
jae
aas
cmpsl
sbb
stos
imul
push
ds
mov
adc
mov
or
loopne
shll
mov
xor
scas
cld
subl
xor
call
mov
cltd
xchg
and
cmp
dec
adc
xchg
repz
pop
jnp
jno
aad
repz
mov
into
xchg
and
das
adc
push
push
sub
bound
je
cmpsb
push
mov
out
lcall
add
outsl
das
xchg
mov
push
cmp
in
lods
xchg
aad
lock
sbb
push
adc
jmp
rcll
mov
pop
loop
push
subl
inc
pop
add
scas
sbb
movsl
cmp
cld
jle
mov
or
jp
out
inc
push
pushf
mov
mov
xchg
xchg
sub
xchg
mov
arpl
mov
sub
jmp
out
sbb
cli
aad
popf
pop
mov
xchg
push
dec
ss
arpl
push
dec
andb
push
cmp
inc
lret
sbb
push
mov
jae
mov
pop
and
imul
mov
xchg
ds
cmc
sbb
test
pop
push
sbb
mov
insl
je
add
test
inc
dec
stc
sub
xchg
mov
pop
push
pop
lods
stos
sub
xor
fisubrs
test
in
xchg
push
ret
pop
and
clc
jl
push
pop
push
sbb
xlat
push
sub
imul
jnp
insb
cmpsl
fistps
mov
jb
and
and
clc
mov
mov
mov
out
cmc
ret
mov
mov
or
movsb
mov
out
xor
or
or
xchg
mov
sbb
pop
outsb
jmp
insb
cmc
sub
adcl
cmpsl
push
or
or
fisubrs
xchg
pop
adc
popl
add
cmp
ret
and
push
shr
add
add
lds
push
mov
pop
cmp
stc
sub
push
je
push
jge
test
pop
pop
stc
jbe
test
jp
cmp
rol
and
push
pop
xor
jmp
jne
adc
jb
stc
xor
jp
js
xor
pop
repnz
in
sub
pop
aaa
mov
data16
sbb
icebp
data16
inc
push
xchg
pop
and
mov
add
ror
jmp
add
jg
filds
xor
movsl
jg
and
or
and
lret
sbb
push
xor
or
push
mov
call
popl
mov
pusha
add
vmovhps
clc
dec
cmp
test
dec
xchg
icebp
sbb
mov
mov
jmp
mov
inc
movb
in
stos
sbb
pop
pop
add
push
push
pop
call
stos
cmp
add
js
push
xchg
sbb
loope
jmp
pop
cmp
les
nop
hlt
mov
pusha
je
add
pop
xor
add
push
push
push
pop
call
mov
jnp
in
iret
int
adc
ja
mov
jno
sbbb
mov
cmovs
dec
pop
lods
aad
fbld
or
sub
sti
imul
add
push
mov
push
push
push
pop
pop
pop
add
and
push
push
pop
pop
dec
inc
call
stc
mov
push
call
jge
movl
cmc
push
stos
xlat
repnz
into
cmp
cmp
xlat
pop
lea
negb
mov
rcll
out
mov
fcomps
push
mov
push
add
pop
mov
add
push
test
pop
loop
jecxz
inc
push
push
pop
jmp
sub
mov
pop
lret
sahf
dec
adc
dec
jge
pop
xor
stc
lods
adc
outsb
pop
mov
push
jmp
mov
int3
lcall
out
mov
out
pushf
int
jle
call
mov
push
jmp
cmpsb
pusha
add
cmp
mov
mov
add
js
pop
add
sub
aam
push
mov
push
push
jl
push
push
or
pop
pop
pop
push
mov
pop
push
jp
ror
pop
push
push
push
push
pop
pop
pop
pop
test
nop
call
jmp
jns
ljmp
cmpb
mov
out
outsl
nop
in
jns
mov
bound
out
sbb
and
call
lea
jmp
push
ret
loopne
adc
pop
add
mov
fsubr
fs
std
test
jae
in
jae
lcall
and
hlt
sbb
sbb
jnp
push
push
jge
test
pop
pop
and
push
test
pop
stc
push
push
pop
call
mov
xchg
sub
add
add
inc
insl
divb
xlat
dec
add
pop
push
mov
push
add
pop
push
call
push
jl
mov
les
hlt
mov
stos
adc
add
inc
fisttps
xchg
mov
xchg
outsb
mov
negl
outsl
insb
xchg
jle
add
pop
lea
mov
jmp
mov
clc
mov
jecxz
cmpsb
shrl
cli
ja
mov
jnp
pop
add
xchg
cmp
movsb
enter
adc
mov
mov
mov
push
jnp
sub
pop
loop
jecxz
mov
hlt
insl
push
mov
scas
mov
inc
jp
test
shr
test
push
push
pop
call
aam
add
jle
or
pop
arpl
ret
push
mov
adc
dec
mov
pop
pop
xor
xor
lea
push
push
pop
call
push
arpl
xlat
dec
xchg
cmc
lods
lea
stc
aad
push
frstor
mov
inc
cltd
enter
mov
jns
jae
pop
push
mov
dec
addr16
mov
dec
ror
les
push
call
add
and
loop
dec
jne
add
cmp
imul
cmp
loopne
or
dec
xchg
adc
movsl
movsl
pop
nop
jle
jle
clc
jo
imul
nop
mov
loop
les
push
pop
and
cmp
jne
jmp
sar
lea
add
push
and
pop
push
mov
call
xchg
dec
or
test
jo
xchg
xchg
jl
orl
orl
movsb
xchg
int
sub
fs
rorb
lahf
pop
pop
push
shr
pop
shl
or
push
mov
call
cmp
nop
dec
adc
insb
xor
std
xchg
inc
push
lods
inc
add
xor
xlat
scas
arpl
adc
jle
aad
insb
push
sahf
and
lods
or
mov
mov
aam
loopne
push
or
out
add
pop
add
push
push
mov
pop
pop
push
inc
pop
clc
jle
jno
test
jg
push
jae
push
inc
pop
pop
cmp
rol
loop
jecxz
mov
sub
push
enter
push
adcb
in
dec
sahf
xor
cmp
int3
imul
scas
test
sets
and
mov
jl
or
cs
adc
pop
mulb
and
clc
push
add
pop
jb
push
and
pop
push
jle
push
or
pop
pop
push
pop
push
inc
dec
pop
jl
push
dec
pop
mov
xor
jge
jle
jle
shr
push
push
push
add
pop
pop
pop
push
call
pop
add
xor
int
arpl
push
adc
jb
sub
push
clc
shrb
popw
push
std
shlb
jnp
insb
popf
push
scas
scas
sti
dec
sahf
sub
cmpsl
callw
add
stos
scas
out
add
pushf
addr16
pusha
push
jp
pop
pop
xchg
pop
push
pop
xchg
push
movzbl
cmp
jg
push
jbe
ror
pop
and
test
ja
js
push
add
loop
pop
test
loop
jecxz
mov
lock
subl
adc
daa
aas
mov
movl
or
add
xor
push
push
mov
pop
pop
push
mov
jmp
push
mov
out
mov
ds
sbb
adc
fcomps
push
add
xchg
mov
jne
jmp
loopne
cli
mov
cmp
mov
xor
inc
pop
adcl
mov
hlt
jg
fdivl
call
mov
jo
gs
and
jnp
lcall
push
sub
gs
repnz
les
dec
sbb
jo
pop
push
enter
scas
arpl
fldenv
cmp
pop
jne
add
jg
push
neg
neg
pop
xchg
je
push
jbe
sub
pop
rol
nop
cmc
clc
push
pop
sub
jmp
loop
jecxz
mov
and
icebp
lahf
aam
test
mov
sbb
jb
jno
push
pop
adcb
cmpsb
dec
mov
jo
dec
dec
adc
mov
loope
test
xor
andl
mov
iret
clc
icebp
push
adc
pop
xlat
inc
add
adc
repz
adc
push
inc
jns
sub
jmp
loop
inc
cmc
nop
subb
insl
mov
nop
dec
push
shll
in
pop
iret
xchg
inc
fwait
jb
mull
pop
fdivs
mov
clc
push
repz
addr16
add
jo
jp
add
test
push
mov
pop
lea
stos
jmp
das
mov
je
jmp
and
mov
push
and
repnz
add
inc
out
cmc
ja
popa
cmp
rcrl
xchg
jb
lods
pop
fs
shr
mov
and
jmp
push
push
imul
sbb
mov
fwait
cmp
pop
push
push
push
imul
mov
dec
adc
sbb
fwait
insb
pop
mov
xor
xchg
out
or
xchg
imul
ret
out
lahf
jl
insl
in
repz
push
pop
mov
jae
in
imul
pop
outsb
sbb
mov
inc
dec
cltd
mov
mov
inc
cmp
push
pop
cmp
test
jge
and
push
push
add
pop
xor
push
popl
push
mov
pop
push
mov
jmp
int3
xor
inc
in
call
sub
mov
jbe
add
test
jmp
out
sub
cmc
jecxz
and
in
push
dec
pusha
add
repz
sub
mov
push
push
pop
call
xchg
jp
inc
sti
add
call
pushf
mov
xor
add
pop
pushf
fildll
mov
dec
cmp
mov
mov
out
push
add
pop
push
popl
push
push
pop
call
leave
pop
jecxz
mov
insb
jg
in
pop
mov
testb
xchg
push
out
add
mov
mov
ss
flds
sbb
repnz
in
imul
lcall
bound
adc
add
in
inc
mov
outsl
jmp
pop
fs
rorl
xsetbv
xchg
out
mov
mov
fs
push
clc
or
jl
and
push
ja
sbbb
pop
pusha
rorb
adc
xor
gs
pop
mov
jne
ret
dec
cmpsb
add
mov
jp
inc
ficompl
cs
mov
cltd
mov
jo
lcall
ds
mov
xchg
push
inc
or
pop
push
jns
insb
add
dec
fdivs
lret
imul
sub
clc
int3
rclb
mov
inc
insb
xor
sbb
pop
jmp
add
mov
test
sbb
pop
dec
fcomi
das
pop
sti
mov
sbb
jmp
jbe
xor
lods
ds
mov
xor
pushf
jno
cmp
test
dec
pop
stos
icebp
cmp
pop
ror
inc
pushf
pop
ja
lods
hlt
mov
push
gs
scas
icebp
inc
dec
mov
stos
mov
fs
sahf
arpl
and
sub
clc
push
push
mov
mov
sub
jbe
comiss
adc
jns
arpl
inc
push
push
std
mov
test
sbb
and
inc
frndint
sbb
sar
mov
cmp
loop
sbb
leave
xor
xchg
inc
int3
or
mov
xor
cmp
push
xchg
mov
jge
loopne
aam
mov
inc
xchg
xchg
push
mov
das
push
xchg
push
mov
add
into
push
test
test
cmp
bound
jb
shl
inc
pop
test
js
fnstcw
mov
mov
cltd
or
push
fmull
pop
insl
cmp
repz
push
dec
imul
ds
out
jns
mov
push
jmp
mov
jmp
inc
or
test
or
mov
lret
lcall
adc
xchg
jge
push
xchg
mov
dec
sbb
mov
cmp
leave
rcrb
pusha
pushf
xchg
jae
fwait
notb
pop
pop
jmp
push
call
ret
fisubrl
jb
loopne
and
cmp
sarb
fists
xchg
add
pop
stos
xchg
mov
in
jmp
sbb
sub
inc
nop
push
adc
push
lock
dec
jmp
mov
sbb
ret
lods
add
xchg
push
inc
pop
ss
xchg
outsl
aaa
pop
lret
cmp
ret
mov
lock
dec
jl
cmc
mov
jecxz
sbb
out
sub
add
add
add
inc
mov
add
dec
mov
add
add
add
dec
mov
add
add
add
imul
gs
xor
cs
insb
add
add
inc
gs
jb
arpl
fs
jae
add
add
dec
outsl
popa
fs
imul
