sub
orb
push
scas
out
mov
mov
aam
leave
popf
lret
fisubs
xchg
lret
lea
mov
inc
add
cld
lea
mov
sub
sbb
or
sub
jb
or
fistpl
dec
ss
jns
loop
inc
mov
out
push
cmpl
adc
cmpsl
push
adc
gs
aaa
popa
jb
cmpsl
xor
cmpb
mov
push
scas
xor
test
inc
pop
add
mov
mov
jbe
add
mov
dec
and
sbb
repnz
int
push
ffreep
test
jge
imul
xlat
dec
fildll
in
lds
jae
mov
add
idivl
dec
ljmp
pop
inc
mov
pmaddwd
push
mov
mov
hlt
cmc
int3
xchg
and
addr16
sbb
or
shll
ret
popa
mov
dec
add
outsb
add
enter
jecxz
inc
pushf
jae
jb
sub
fldenv
jbe
and
stos
bound
and
arpl
push
fwait
and
enter
lret
int3
xchg
subb
add
in
inc
sti
mov
gs
cmpsl
and
testb
ret
dec
adc
xchg
je
aad
xchg
mov
push
aaa
and
and
movsl
iret
jecxz
lea
cmpsl
lock
in
jecxz
and
lea
mov
ficomps
and
push
rcll
push
lods
in
cmp
add
repz
xor
inc
ds
mov
inc
inc
xor
adc
rcll
and
das
mov
mov
outsl
dec
dec
pop
mov
cmp
repnz
mov
ret
lods
shl
xorb
adc
sahf
in
fwait
loopne
movsb
ljmp
push
and
push
rorb
shlb
lahf
push
pop
cmp
cmp
mov
popf
and
movsb
add
or
loopne
push
dec
stc
and
jb
pop
or
fwait
cltd
lods
xchg
leave
fsubrl
xor
cli
rorb
push
orl
xor
pop
loope
or
fists
pop
loope
movsl
daa
mov
xchg
mov
mov
int
movsl
xor
adc
xchg
shrb
jb,pt
sub
inc
pop
cmpsl
scas
mov
addr16
test
ficomps
xchg
fsubs
xor
xor
mov
cmpsl
xor
mov
mov
gs
sub
inc
imul
pushf
daa
and
scas
out
jnp
insl
fidivs
enter
xor
pop
rcll
dec
je
mov
int
stos
mov
xor
mov
lds
arpl
test
jne
mov
test
inc
test
pop
dec
shr
mov
push
cltd
jmp
and
mov
push
leave
add
sbb
sti
push
dec
das
jb
mov
pushf
add
addr16
jae
cld
mov
push
and
jbe
or
xchg
insl
mov
push
dec
dec
sbb
adcl
inc
fnstsw
ja
and
jp
es
into
movsb
xchg
xchg
inc
add
xor
or
and
inc
fcomps
adc
jmp
push
inc
pop
sbb
jo
js
push
pop
loopne
and
les
jecxz
dec
in
in
pop
or
xor
loop
inc
mov
out
jae
nopl
pop
or
bound
mov
inc
xor
fldenv
pop
sub
jae
mov
adcl
inc
cmp
cmp
aam
mov
inc
aaa
int3
jl
push
mov
cmpsb
out
repz
inc
pop
sub
dec
push
movsb
push
out
jecxz
scas
and
cs
les
jbe
dec
in
in
inc
xchg
cs
xor
test
loope
mov
fwait
or
and
outsl
or
sbb
pushf
lcall
pop
out
dec
adc
mov
jl
outsb
movsl
jo
nop
mov
pusha
stos
or
cmpsl
and
push
jge
test
cwtl
jae
aad
mov
mov
or
jmp
clc
pop
mov
jns
and
lret
mov
add
popf
inc
sahf
stc
mov
test
xchg
test
push
in
xchg
dec
inc
pusha
test
icebp
mov
mov
pop
xchg
inc
xchg
sti
xchg
aas
sahf
xchg
in
push
pop
xchg
int
or
mov
shrb
ret
sub
leave
xchg
les
sbb
ljmp
push
fidivs
sbb
jnp
js
add
xchg
jg
adc
sub
push
or
adc
mov
lock
test
cli
mov
mov
jle
push
test
adc
popa
jmp
cs
mov
jg
cld
negl
cmpb
add
dec
and
jae
sbb
enter
out
test
pop
scas
rcrb
stos
sbb
pop
dec
icebp
and
sbb
in
jb
leave
adc
idivl
adc
pushf
xor
in
adc
loope
pop
fistpll
call
aad
popf
sbb
or
mov
cld
sbb
push
test
sbb
pop
les
xchg
scas
mov
outsb
inc
or
lcall
xchg
push
leave
ror
push
clc
fnstcw
dec
repz
insl
lock
inc
push
mov
sahf
test
and
cmpsb
jmp
das
push
push
data16
in
insb
jae
cmpsb
sbb
aas
les
leave
cs
mov
cld
mov
add
leave
movb
dec
adc
push
test
sbbl
repz
cltd
shr
rolb
xor
or
ja
outsb
xor
sub
int3
rcrl
jecxz
nop
push
es
fsubl
out
mov
and
imul
enter
inc
mov
loop
les
leavew
sbb
dec
and
loope
add
xchg
sbb
jecxz
decb
mov
jg
pop
leave
mov
inc
dec
xor
mov
in
cmp
js
add
cmp
and
adc
and
fmuls
xchg
xchg
repnz
pop
adc
cli
stc
jo
xlat
dec
mov
jo
xchg
movsl
sub
sti
jge
jno
mov
cmpb
or
sbb
dec
rorl
and
push
xchg
test
and
push
sub
dec
stos
xchg
cs
jmp
add
push
dec
icebp
sub
mov
gs
jg
xchg
ljmp
cmp
aaa
lds
dec
xchg
aam
into
jno
movsb
cmp
and
test
cmp
dec
pop
fmuls
mov
loop
xor
pop
sahf
or
add
test
push
lret
xchg
cli
outsb
sub
outsl
cmp
int3
dec
in
jge
cmpsl
rcrl
lock
dec
pop
mov
lods
add
jne
aam
out
dec
xchg
pop
lahf
push
mov
or
push
inc
lcall
add
sbb
mov
adc
xor
and
shlb
jbe
fdivrs
mov
inc
add
pop
lea
lret
mov
cs
and
sub
inc
or
cmp
and
pusha
jecxz
imul
adc
enter
and
fmulp
les
add
repnz
out
sub
jge
sub
xor
adc
mov
into
sbb
push
fcoml
xchg
inc
inc
cmp
addl
sbbl
call
out
iret
push
daa
cmp
xchg
and
adc
jns
xchg
and
pop
jge
cs
insb
in
pop
into
stos
push
scas
adc
cwtl
jb
add
in
cmp
jge
add
mov
and
icebp
and
cmpxchg
xlat
push
ret
enter
or
imul
enter
mov
lahf
sub
cld
push
fchs
das
sub
sahf
imul
pusha
dec
fs
adc
pop
inc
mov
dec
cmc
test
inc
pop
cmc
bound
inc
mov
xor
inc
inc
les
inc
sbb
dec
lret
test
push
xchg
cltd
pushf
es
pop
fdivp
cltd
fwait
sub
xchg
out
insl
das
sub
outsb
addb
cmp
pop
or
out
push
inc
inc
jle
cmp
pop
shll
mov
sbbl
xchg
sbbl
xor
sbb
xor
shll
cmp
mov
ret
fs
orb
aad
cs
adc
push
loop
call
aas
mov
popf
movsl
ror
ret
fidivl
repnz
and
pusha
in
xor
inc
movsb
xor
push
add
add
decb
mov
cmpsl
push
das
cmp
jl
jae
lret
call
cmp
mov
pop
mov
adcb
cmp
mov
inc
das
jb
push
bound
test
test
xor
push
or
jge
jnp
inc
arpl
mov
jbe
xchg
xor
mov
cmp
mov
outsb
test
mov
jns
xchg
jg
repnz
jns
in
test
jecxz
mov
ja
ja
push
mov
push
or
icebp
push
xchg
pop
mov
and
pop
jp
iret
repnz
fstps
mov
sbb
push
movsl
das
in
mov
mov
aad
shll
push
push
pop
enter
sub
fisubrl
jp
pop
test
cli
je
cmp
notb
or
cli
pop
xlat
or
add
faddl
jl
mov
leave
sub
or
test
ret
pop
mov
call
les
test
lret
jecxz
pop
pop
cmc
fidivs
loope
inc
cmp
mov
gs
xor
pop
mov
mov
movsb
xchg
daa
scas
leave
bound
mov
pusha
stos
jle
int
ja
cmp
push
popa
loop
lret
push
mov
sbb
push
imul
mov
mov
fisubrs
add
jmp
mov
lahf
xor
lret
push
pop
push
cs
lea
add
cld
cltd
push
lods
sti
adc
mov
insb
or
or
das
pop
and
xor
sti
lret
leave
popa
inc
xor
int3
mov
call
inc
sar
add
enter
testl
daa
addl
cwtl
and
pop
xchg
mov
push
scas
sub
test
stos
addb
and
adc
sub
jnp
dec
movsl
fisttpl
in
int
rcr
cmp
pop
push
sbb
adc
fisubrs
cltd
push
imull
mov
xor
ret
pop
dec
pop
inc
int
xchg
sbbb
xor
addr16
mov
xor
or
faddl
fstpt
mov
fidivrl
jb
xor
adc
out
clc
shrl
lret
repnz
jnp
mov
test
xchg
xor
and
mov
repnz
xchg
push
ljmp
push
or
in
in
and
push
cmpb
outsb
faddl
cwtl
pop
push
fists
mov
pop
adc
ret
inc
xchg
cmpsb
repz
or
jecxz
insl
enter
adc
aaa
sub
and
hlt
mov
mov
cmp
mov
cs
dec
or
or
hlt
lcall
mov
push
jne
pop
addr16
mov
xchg
stos
testl
xchg
in
lcall
sahf
inc
pop
inc
fmul
stc
roll
inc
pusha
decl
sti
push
pop
xchg
xlat
pop
xchg
enter
cmp
sbb
popa
lods
pop
pop
movb
lea
jle
jb
mov
sbb
stos
or
xor
cmp
push
test
lods
icebp
push
pop
inc
addr16
mov
jo
mov
mov
popa
mov
cltd
or
adc
arpl
fnstenv
packssdw
xor
leave
and
push
sbb
outsb
mov
fstps
stos
mov
imul
imul
test
mov
fidivrs
inc
aam
and
jae
and
into
mov
rdmsr
sub
push
push
subb
or
jle
faddl
insb
loope
pop
mov
xchg
mov
pop
cmpl
dec
push
xchg
push
add
jl
mov
push
imul
jo
ljmp
sub
mov
arpl
aas
pop
arpl
mov
pushw
inc
push
or
repz
inc
push
test
imul
inc
push
movsb
cmp
adc
add
std
scas
jg
add
push
xchg
xlat
loope
es
pop
inc
dec
add
sub
mov
fstps
jno
pop
stc
sub
das
push
roll
xor
pop
scas
icebp
pop
rcl
xlat
xchg
inc
repnz
aaa
and
arpl
sarb
jb
jg
mov
jb
fsub
jb
pop
scas
popa
mov
lret
fisttps
ljmp
clc
into
dec
push
lods
xchg
pop
mov
mov
mov
cmpsb
ljmp
stos
in
cmpsl
xchg
std
data16
inc
in
lahf
pop
call
pop
cmc
loope
lret
repnz
sub
pop
mov
sbb
xchg
js
add
mov
xor
xchg
cmp
xchg
test
fstpl
fildll
mov
jg
ss
insb
lods
mov
outsl
repnz
xchg
inc
lea
mov
pop
add
scas
jmp
mov
sbb
sbb
inc
out
insl
enter
pop
test
es
jle
and
loopne
dec
adc
stc
xchg
les
test
andb
mov
test
or
xor
mov
popa
dec
jl
stc
out
test
cwtl
jmp
jns
push
xorl
dec
and
mov
jg
jb
xlat
push
and
fmull
mov
pop
xchg
push
and
sub
loopne
test
dec
scas
dec
pop
sbb
jmp
lahf
inc
ja
pop
adc
lods
cmp
jb
call
jecxz
aaa
ja
pop
xchg
xchg
shlb
push
or
int3
dec
dec
cli
sbb
icebp
xchg
mov
pop
call
mov
out
test
jmp
adc
cld
sbb
lock
pop
jmp
dec
push
sbb
frstor
sete
jae
push
pop
ss
outsb
popf
push
fwait
idivb
lods
inc
cltd
pop
add
sub
pop
lret
xor
stos
and
xor
dec
rcrb
lods
nop
aas
loopne
push
out
push
jns
xor
leave
loop
mov
mov
popa
andb
leave
pop
sbb
lret
fs
gs
int3
jle
dec
push
addr16
in
push
js
mov
sub
fimuls
xor
sub
adc
lret
push
mov
test
pop
outsl
cld
cmc
or
scas
inc
jo
and
and
jcxz
fimuls
mov
sti
cwtl
mov
imul
ds
clc
popf
lea
je,pt
xor
call
or
lcall
xabort
rorb
lcall
sbb
xlat
mov
pusha
jmp
div
lock
mov
roll
sub
dec
dec
adc
cmp
mov
nop
jle
pcmpeqw
in
ret
and
lods
pop
test
inc
bt
inc
movsl
xchg
repz
jle
jle
aam
das
xchg
les
adc
mov
and
sub
stos
rcrl
cmp
lods
push
pop
arpl
jg
pop
sbb
mov
idivl
xorb
hlt
mov
out
mov
sahf
push
cld
pop
mov
sarb
shr
sbb
out
fisubs
out
or
push
xor
xchg
andl
adc
les
jecxz
stc
fs
inc
and
mov
jb
pushf
cmpb
cmp
lods
jbe
xchg
jbe
popa
arpl
inc
movsl
stc
add
out
adc
and
scas
out
jecxz
rclb
leave
in
mov
fcomps
dec
cmp
xlat
mov
mov
lods
nop
add
jl
pop
adc
adc
adc
xor
mov
push
mull
notl
shlb
dec
jp
jne
scas
mov
inc
popa
sahf
xchg
xchg
pop
sti
xchg
loopne
dec
jb
xlat
mov
xor
scas
adcl
jae
adc
seta
mov
pop
jne
jge
cltd
stos
push
icebp
inc
cmp
xchg
pop
dec
hlt
pop
scas
xchg
sbb
pop
movsb
lahf
test
pop
mov
in
pusha
imul
rcll
orb
fnsave
cmpsl
ss
subl
cs
mov
les
pop
mov
xchg
pop
out
test
nop
sbb
lret
lock
push
mov
in
push
test
in
outsb
xchg
sbb
dec
pop
push
andl
dec
nop
cmp
inc
inc
mov
ja
mov
pop
pop
call
ljmp
mov
test
out
dec
adc
cwtl
call
dec
push
sub
cli
lret
je
push
call
mov
sbb
xor
jmp
mov
dec
pop
mov
mov
fcmovu
mov
popa
sbb
adc
mov
ret
js
sahf
out
js
lret
shrb
ljmp
pop
jno
pop
adc
std
aaa
add
and
sbb
je
loope
sti
pop
inc
sub
imul
pushf
xchg
dec
sub
into
fimuls
nop
push
pop
mov
roll
xchg
lea
push
fs
mov
rol
sub
push
adc
cmp
das
ret
xor
xchg
mov
lahf
fs
incl
leave
jmp
dec
push
jns
xlat
or
mov
inc
sub
cmp
add
add
repnz
pop
xchg
fsubs
pushf
add
xchg
lds
jb
jle
in
push
ss
xorl
arpl
or
stc
jl
mov
stos
ss
adc
adc
jb
xchg
arpl
xchg
xchg
cmp
popf
sbb
cld
add
dec
sub
ror
fidivs
mov
inc
iret
es
xor
pop
xchg
ret
faddl
push
insl
int3
rorl
cld
movsb
sbb
jg
into
leave
jo
inc
mov
jecxz
jae
pop
cwtl
mov
cmp
fwait
mov
lds
dec
dec
push
mov
clc
gs
fimull
icebp
aas
pushf
and
mov
adc
dec
xchg
mov
xchg
or
sub
sahf
sbb
dec
push
dec
loopne
fisttpll
int3
mov
sbb
loopne
jmp
jp
mov
iret
mov
fisubrl
dec
jecxz
sti
or
jp
cmp
leave
push
movb
or
clc
or
sti
in
pop
ljmp
jle
add
fisubl
inc
in
shrd
mov
mov
pop
lds
fdivrl
sbb
add
pop
pop
cs
test
add
xchg
mov
push
dec
jmp
pop
push
dec
push
inc
js
push
lret
mov
fwait
mov
imul
pop
dec
mov
aas
inc
xor
loopne
mov
fcoml
loopne
pop
xchg
push
clc
test
loopne
shl
mov
lea
stos
sarl
and
popa
cmpsl
push
aam
xchg
je
rcrb
shrb
call
dec
xchg
inc
decb
or
inc
movsb
xchg
into
adc
mov
mov
mov
cmp
fisttps
call
lret
in
sbb
mov
push
mov
xor
out
dec
lods
and
jb
cmp
inc
movsl
imul
add
daa
and
dec
stos
notl
jne
cli
inc
pop
push
rcrl
inc
test
shrb
mov
pushf
fistl
sub
stos
inc
lret
mov
lock
cmp
fildll
dec
lret
inc
sub
xchg
pop
pushf
stc
mov
xchg
jge
jbe
in
pop
bound
insl
bound
cltd
push
insl
push
or
inc
inc
in
dec
rclb
push
mov
fwait
mov
push
pop
in
sub
sub
or
mov
scas
idivl
imul
pop
jecxz
and
mov
inc
jp
shll
icebp
add
mov
arpl
lea
pop
pop
push
out
sub
jl
testb
or
outsb
push
sahf
test
decb
mov
sub
ret
in
cmp
ja
and
dec
xchg
int3
jns
inc
adc
xor
outsl
add
mov
sbb
mov
hlt
cmp
add
insl
sub
mov
out
jnp
iret
push
rcr
inc
and
mov
xchg
cmp
es
popa
scas
jmp
mov
loope
push
mov
cmp
test
mov
jae
push
push
inc
ljmp
fidivs
and
pop
vpxor
or
ja
lahf
fstl
pavgw
ret
jl
inc
pop
push
daa
lods
mov
inc
cs
scas
in
mov
icebp
addr16
sbb
popf
aam
xchg
adc
dec
mov
pop
adc
les
cmp
mov
push
js
bnd
cmc
fisubl
sub
js
push
stos
jb
popf
in
dec
bound
inc
lods
enter
inc
xchg
ljmp
push
push
push
sbb
in
and
xchg
lcall
gs
int3
jl
adc
lock
add
std
test
inc
cmc
sbb
pusha
enter
nop
xchg
decb
mov
push
and
insl
imul
xchg
add
ss
lods
lods
mov
sub
xor
xlat
ds
gs
ds
or
call
mov
lcall
xchg
jg
shrb
in
adc
push
sar
jb
mov
les
lea
popf
push
pop
roll
jbe
mov
sbb
sti
xlat
mov
jae
sub
mov
gs
adc
xchg
sbb
xor
ret
repz
sbb
push
push
movsb
bound
pop
cmp
cli
xchg
mov
pushf
pop
cmc
scas
mull
jns
popa
pop
and
mov
sbb
push
test
pop
jg
jnp
imul
enter
inc
dec
mov
push
shll
int
mov
lea
int
mov
jne
loopne
push
arpl
fmull
cs
clc
xchg
arpl
pop
fstl
mov
pop
pop
cmp
sbb
xorl
add
jo
popa
fstpt
jg
xchg
leave
clts
dec
stc
out
adc
xchg
xchg
pop
add
dec
ds
pop
aam
pushl
xchg
mov
test
ja
mov
pop
sbb
or
rcrl
mov
push
sub
lret
push
andl
testb
movsl
rcl
fsubr
pop
imul
xchg
fldl
jg
dec
cmc
fldcw
cmp
inc
roll
aad
push
or
jae
add
dec
div
jne
or
or
lret
scas
fidivrl
jno
jns
sbb
arpl
jg
outsb
cld
insl
cwtl
pusha
mov
inc
dec
sub
and
mov
mov
or
sub
cmp
sti
xor
faddp
sub
fstps
mov
adc
jmp
jne
xor
cli
lahf
add
leave
ret
pop
movsb
add
xchg
stos
enter
ljmp
or
sub
in
sbb
std
push
das
shl
movsl
lahf
iret
int
sbb
lcall
imul
dec
andl
sub
mov
add
push
out
dec
bound
jno
call
out
push
int3
das
adc
xor
sub
dec
das
dec
aad
cmp
jmp
sbb
adc
xor
sbb
fildl
in
test
scas
shrb
mov
inc
in
outsb
fs
jmp
in
in
mov
xor
jbe
fstl
xchg
mov
inc
je
lret
dec
mov
adc
test
or
sbb
mov
movsl
fldcw
mov
lods
xchg
push
mov
push
xchg
data16
int3
cs
ss
inc
ffreep
mov
cmp
cs
mov
clc
repnz
es
arpl
sub
or
sbb
xchg
dec
ror
sub
out
nop
repnz
mov
aas
out
imul
or
shlb
cwtl
mov
mov
mov
mov
movsb
mov
fsubl
xchg
dec
sarb
in
add
pop
push
pop
aas
jge
gs
add
xor
insl
mov
jbe
xlat
inc
sub
mov
dec
pop
xchg
stc
mov
rolb
ret
in
lock
loope
push
popa
jp
pop
pop
cld
lcall
stos
popa
insl
xchg
xchg
lret
iret
lds
xchg
or
pop
or
push
sub
mov
jae
push
inc
add
movsb
in
xor
cmp
pushf
jg
pop
pushf
jae
mov
xchg
mov
sub
xor
test
movsl
shrl
inc
ret
mov
aam
shrl
mov
jle
andl
xchg
sbbl
jmp
loope
fwait
add
xchg
pop
and
push
insl
shrl
inc
push
cmpsl
test
jg
cmp
enter
mov
fadd
xlat
xchg
or
push
test
xchg
loope
adc
xchg
dec
les
xchg
adc
fidivrl
jle
bound
xor
push
aas
or
or
fsts
into
inc
enter
push
mov
xchg
dec
imul
mov
dec
mov
mov
mov
or
pop
pushf
add
popa
adc
ret
mov
mov
cmpsb
cmpsb
pop
pop
inc
arpl
pop
movsl
inc
inc
xchg
inc
pop
mov
jne
aad
xchg
sub
xor
das
js
push
frstpm(287
pop
sbb
push
shll
mov
add
das
clc
and
fcompl
in
in
ret
in
js
cmpsb
xchg
cmovge
add
sub
jne
add
call
movsb
sti
pop
lret
pop
cmc
daa
adc
dec
xchg
pop
sbb
push
gs
inc
leave
mov
outsl
add
jmp
mov
rorb
je
sub
ja
and
push
push
ret
jmp
pop
inc
in
nop
addr16
jecxz
jp
lret
adc
xlat
test
inc
dec
cmp
mov
adc
add
repnz
and
adcl
cs
fwait
daa
clc
sahf
stc
cwtl
repz
xchg
repnz
es
sahf
or
mov
ds
push
arpl
xchg
sub
dec
cmp
and
mov
test
icebp
mov
push
std
stos
pop
lods
test
in
mov
shlb
pop
call
in
cmp
movsl
add
cltd
divb
push
subl
lods
stos
data16
sub
mov
cmc
push
repz
loopne
sbb
push
xor
jl
add
test
xchg
in
repz
aam
cmpsl
xchg
mov
jle
xor
or
mov
sbb
lret
adcl
inc
std
ljmp
jle,pt
cmpb
fiadds
mov
xchg
cmp
jmp
push
cmp
ja
push
sub
dec
std
stc
sub
cmp
cmp
ds
pop
stc
jge
adc
ds
cmp
mov
mov
orl
dec
cmc
loopne
daa
xchg
pop
inc
das
flds
push
incl
mov
mov
mov
mov
pop
mov
pop
adc
sub
vmread
mov
je
sub
rcrl
test
std
subb
in
mov
loop
mov
test
sbb
jp
lret
cmp
in
out
call
cmp
push
cmp
xchg
pop
mov
pop
inc
sbb
cmpsl
push
aaa
mov
out
cmpsl
push
jno
cwtl
push
out
test
aad
into
adc
jl
mov
andl
sbb
dec
dec
imul
notl
jmp
cmp
gs
sub
dec
pop
rclb
je
or
push
push
fsts
inc
inc
lock
sbb
jle
mov
fidivs
or
mov
adc
lcall
roll
adc
add
mov
stos
sbb
lods
mov
sub
adc
push
pop
and
test
jge
adc
out
fld
mov
daa
clc
clc
daa
adc
push
mov
mov
je
cmpsb
out
cwtl
xor
adc
add
cmpb
push
daa
popa
sbb
nop
rclb
sub
in
aas
mov
cmp
inc
bound
inc
fcmovu
adc
xchg
cmp
in
insb
inc
das
sarb
and
pushf
leave
push
shrb
inc
inc
mov
call
mov
or
cmpl
out
loope
push
jb
lods
pushf
inc
dec
xchg
in
fildl
lods
pop
mov
clc
dec
xor
sbb
mov
idiv
pop
ljmp
sar
fs
mov
inc
cmc
fistps
add
xor
sbb
test
mov
std
jecxz
push
xor
daa
add
add
xor
xor
stos
xor
push
xlat
pop
icebp
inc
mov
cmp
mov
push
push
cmp
push
pop
das
mov
shrb
fwait
or
fxch
and
cmp
test
cld
mov
sahf
sbb
mov
cwtl
stc
int3
jecxz
movsb
in
add
sarb
inc
add
mov
movsb
xchg
rcr
dec
inc
mov
int
mov
or
pop
aaa
popf
popf
or
sar
mov
std
push
js
xor
xor
lock
jmp
pop
jecxz
xchg
std
movsl
jle
add
jbe
outsl
aas
iret
ss
push
enter
lret
pop
bound
out
sbb
xor
pop
aaa
xlat
hlt
in
push
ret
fstpt
cmpsb
imull
jb
je
cld
test
bound
addr16
sub
loop
push
lods
in
push
out
jnp
xchg
add
orl
pop
mov
stos
pop
dec
sahf
cmp
jp
pop
and
out
push
mov
test
and
dec
push
mov
mov
sbb
aaa
add
lds
scas
push
jae
insb
or
das
outsl
add
mov
sbbl
std
cmpsb
add
mov
xor
xor
jecxz
out
mov
push
or
xor
or
push
push
push
in
xchg
sub
adc
imul
and
bound
jne
pusha
sbb
and
push
test
xchg
mov
das
xor
cmp
xor
fisttpll
rcrl
loopne
xor
pop
mov
add
pop
jb
ja
neg
shrb
mov
lahf
push
mov
imul
adc
stos
push
dec
leave
rcrb
sbb
mov
jno
test
sub
push
xchg
int3
cmp
fstpt
popa
jns
shlb
popf
and
add
movsl
mov
inc
sbb
das
mov
ret
or
sbb
lods
fdivrs
jge
shll
lahf
testl
add
in
inc
std
push
out
dec
test
jae
test
jbe
loopne
shlb
nop
imul
inc
fsubrl
gs
add
xor
fsubl
jecxz
cli
and
loop
cmpsl
sbb
adc
jge
jo
lea
cmp
scas
push
and
dec
pop
pop
mov
hlt
test
fcmovnbe
inc
cs
dec
inc
lods
adc
outsb
add
inc
xchg
mov
jnp
pop
and
insl
mov
fnsave
pop
stc
push
ret
jmp
bound
dec
inc
jo
nop
xchg
lahf
jbe
lods
push
inc
add
jp
pop
aad
sbb
call
int
sbb
push
in
jge
dec
inc
sbb
mov
jp
xlat
mov
shl
cmp
pop
roll
and
sub
popf
notl
inc
mov
ret
pop
ds
lret
mov
adc
out
xchg
les
sub
hlt
les
or
xor
mov
push
dec
je
cmp
sub
dec
xchg
inc
push
xchg
add
xor
cmpsl
mov
lret
out
fistpl
xchg
inc
stos
pushf
incb
add
scas
xchg
sub
insl
adc
repz
xchg
sbb
mov
outsl
shrb
stc
dec
lret
or
cld
ja
popa
mov
lret
sbb
xor
jg
repz
jl
mov
mov
mov
pusha
xchg
shrb
or
int
test
cld
out
cmp
les
xchg
cli
dec
jecxz
xor
pop
jns
add
sub
popf
repz
cmp
push
mov
push
out
dec
mov
les
mov
or
xchg
daa
or
mov
xchg
test
push
dec
sarb
and
inc
ret
push
daa
gs
sbb
and
or
mov
orb
and
stos
sbb
xlat
inc
lret
xchg
jmp
and
pop
or
mov
sbb
fdivl
loope
xor
nop
fmuls
jae
shlb
sbb
pop
mov
add
pop
cld
xchg
pop
fs
insl
mov
lahf
xchg
imul
ucomiss
test
push
repz
gs
fildl
int
jns
ret
or
ds
mov
adc
mov
pop
adc
or
and
pop
add
adc
sub
sbb
mov
or
loope
push
das
icebp
inc
mov
pushaw
adc
jge
insl
fstpt
scas
sbb
cmp
movsb
or
mov
les
adc
mov
or
push
sahf
ficomps
out
adc
cmp
sub
xor
xor
leave
push
mov
scas
mov
inc
jp
inc
mov
mov
je
outsb
decl
mov
gs
adc
or
fsubs
subl
sbb
pop
out
jae
jecxz
mov
push
test
push
cld
jp
inc
push
lods
and
jbe
sub
xor
add
dec
mov
ffree
fcmovnu
int
jne
arpl
inc
nop
pop
dec
jle
adc
out
inc
pusha
jg
push
pop
sbb
push
fadd
insl
sub
mov
repnz
call
pop
add
jp
pop
jo
hlt
les
dec
inc
xor
std
and
bnd
jo
lock
mov
inc
mov
and
imulb
cmpsl
xor
test
mov
sbb
lea
push
and
inc
mov
jbe
xor
call
les
push
xor
imul
cmpsl
leave
imul
pushf
push
stos
mov
adc
xchg
dec
icebp
mov
sbb
push
sarb
hlt
jg
or
sub
mov
sti
pop
jne
ja
mov
mov
mov
je
negb
jne
lahf
fsts
and
and
mov
sub
fcmovbe
inc
shr
leave
sub
sti
or
dec
and
push
sub
dec
shr
test
sahf
bound
imul
inc
pop
ret
push
mov
loop
cmc
inc
mov
das
insb
pop
loopne
lds
test
xor
or
test
and
fcmovne
mov
outsl
cmp
cmp
dec
add
ret
adc
in
decb
or
subb
cmc
dec
fidivs
test
cli
out
dec
lahf
push
popa
mov
push
shrb
and
adc
repz
outsl
xor
jecxz
pop
in
push
das
cmp
jo
mov
cmpsb
sub
fidivl
fldt
scas
lcall
outsb
es
sbb
add
lahf
inc
mov
addr16
jb
cmp
jns
xchg
sub
xor
push
xor
mov
stos
jle
insb
jle
mov
sbb
lcall
aad
jne
inc
push
dec
and
jne
lcall
push
stos
cwtl
dec
xchg
je
dec
mov
xchg
imul
mov
shll
out
int3
cs
les
add
jl
hlt
inc
mov
fwait
push
jmp
call
inc
adc
pushf
decb
inc
and
mov
scas
cs
cmpsl
or
sbb
cld
inc
pop
cmc
hlt
pop
lret
jo
loope
or
lcall
sub
js
mov
or
es
flds
or
jnp
imul
dec
in
insl
jl
dec
loopne
faddl
enter
pushf
stos
and
inc
add
in
xchg
pop
aas
dec
and
jecxz
xchg
out
dec
test
loop
xchg
xchg
push
add
mov
out
mov
stos
aad
mov
ds
push
aam
add
cltd
aaa
out
jae
xchg
adc
mov
iret
jns
ds
push
add
les
xchg
cmp
cmp
mov
pop
scas
push
jp
decl
sbb
jg
test
push
push
in
sahf
lock
sbb
pop
lods
pop
pop
xchg
es
les
daa
inc
in
fcoml
mov
xchg
push
jns
cltd
xchg
movsl
lock
jbe
sub
add
push
movsb
dec
and
cmpsb
lahf
cwtl
mov
sahf
mov
mov
xor
cmp
daa
push
mov
repz
adc
sbb
or
mov
out
shll
mov
lods
dec
push
sarl
int3
adc
jno
dec
fmuls
cmp
push
sub
adc
faddp
dec
sti
dec
mov
xchg
cmc
adcb
and
dec
jno
pop
leave
and
in
xchg
push
adc
adc
cmpsb
add
lret
loope
daa
lock
data16
insb
les
aad
jg
sbb
je
cmp
into
adc
xor
add
movsl
sub
mov
addl
dec
mov
cmpb
xchg
jae
fwait
xchg
mov
xchg
stc
shll
dec
mul
jno
mov
mov
push
cmp
lahf
sbb
xor
mov
in
cmpsb
add
mov
aaa
pop
and
nop
or
clc
repz
sbb
jp
stc
adc
clc
xchg
push
fbstp
loope
test
loop
push
xchg
scas
in
aad
lret
xchg
sbb
mov
aad
add
push
adc
out
adc
xor
pushf
push
mov
jnp
jo
jle
xchg
sbb
inc
clc
arpl
jno
xchg
pop
jp
mov
filds
and
insl
mov
ja
pop
dec
hlt
lods
subl
pop
or
cs
pop
mov
inc
inc
stc
push
mov
cmp
xchg
lret
out
push
cmp
cmp
mov
notb
adc
outsb
xor
push
icebp
daa
nop
cmp
cmc
or
imul
imul
bound
movsb
pop
xor
jmp
leave
fildll
enter
mov
repnz
in
cli
add
adc
sub
loopne
xor
mull
cmp
into
orl
inc
in
stc
inc
dec
hlt
movsb
or
pushf
push
cmp
outsl
fs
sbb
incl
cmp
xlat
sarl
repz
xchg
adcb
loope
jb
out
pop
inc
push
mov
xchg
jg
dec
fucomip
les
adc
mov
mov
xor
pop
outsl
stc
adc
xchg
sbb
call
test
adc
cwtl
pop
or
insl
xor
insb
jno
cmp
add
cmc
jne
aam
call
test
adc
pushf
int
and
out
mov
fistl
rorl
sbb
cmpsb
mov
sbb
fstpl
cmovge
xchg
jp
addr16
in
lahf
roll
push
fimull
aam
pop
xchg
xor
das
out
decb
std
repnz
mov
cltd
adc
in
mov
iret
cmp
mov
scas
jmp
mov
xchg
les
mov
js
xchg
jle
adcl
arpl
bound
mov
xchg
sbb
lret
movsb
jl
leave
fcoml
xor
pop
repz
pop
and
nop
jp
rorl
lcall
das
jp
and
sub
cmp
addr16
test
push
jno
stos
lds
and
push
data16
jmp
fcomps
jne
adc
into
add
inc
lods
jmp
and
sub
dec
rcll
adc
push
sub
clc
sahf
repnz
pop
sub
or
mov
sbb
arpl
inc
imul
cltd
icebp
push
subl
lret
inc
daa
and
fwait
mov
add
adc
aas
ror
lock
std
mov
mov
popa
sti
or
aam
mov
dec
ret
sub
xchg
aam
ja
push
push
inc
inc
and
sub
inc
and
insl
adc
enter
lock
lea
inc
loope
push
sub
cmp
push
dec
sbb
test
sub
test
dec
rolb
mov
je
mov
inc
or
test
mov
xchg
mov
xchg
xor
cmc
lods
push
call
mov
subl
orl
shrd
out
addb
pop
jl
xchg
dec
adc
js
push
shl
lock
add
xchg
int
aaa
ficompl
into
movsb
inc
jecxz
imull
mov
test
nop
jecxz
call
sbb
fdiv
mov
popa
int
or
sub
fmull
ret
pop
jns
icebp
ljmp
stos
mov
cld
mov
insb
lods
cmp
adc
gs
in
pop
adc
shll
dec
cmp
cmp
movsb
dec
dec
dec
sbb
lods
dec
mov
in
adc
sub
bound
mov
mov
and
jae
jmp
fimuls
xchg
push
fisttpll
aas
in
jne
mov
xchg
fwait
movsb
loopne
ja
cmc
lcall
cmp
mov
lock
fmuls
jns
insb
cmp
addr16
xor
mov
in
lock
fldenv
mov
pop
rcl
pop
xchg
daa
leave
stos
imul
pushl
dec
mov
sbb
int
jp
insb
jns
mov
pop
sub
jg
push
sbb
mov
push
mov
std
dec
scas
gs
xchg
add
mov
pop
cmpsl
dec
sbb
lods
mov
pop
ficoml
jnp
dec
adc
jns
mov
fbstp
rolb
mov
pusha
cmp
dec
pop
push
stos
jge
icebp
dec
sub
pop
or
adc
dec
sbb
es
mov
leave
lahf
xchg
neg
xchg
mov
aad
cltd
es
sbbb
sbb
inc
lahf
xor
cmp
mov
insb
xchg
jmp
xchg
cltd
mov
std
std
jo
jne
fs
lock
andb
cmc
lock
xchg
clc
adc
cmp
idivb
out
outsl
das
jmp
or
pop
inc
add
lahf
xor
scas
adc
clc
frstor
aaa
pop
add
lods
add
in
add
loopne
add
sbb
jmp
pop
insl
jbe
daa
js
adc
in
movsl
pop
or
and
sub
gs
xor
push
lcall
mov
cmp
nop
mov
int3
lds
add
dec
push
pop
or
dec
cmc
stos
nop
mov
in
push
aas
loop
lea
pop
mov
lcall
stos
cmpsb
inc
cwtl
ljmp
cmpsl
sahf
cmp
call
cli
mov
stos
jns
repnz
mov
pop
xchg
pop
xchg
les
addr16
and
cmp
jnp
mov
sub
jg
xchg
sub
xchg
adc
mov
dec
sbb
outsb
test
daa
icebp
mov
xchg
cli
in
xor
clc
fwait
push
xchg
stos
and
in
or
xor
xchg
iret
or
movsl
and
cmp
adc
lock
push
cmp
sbb
pusha
sbb
dec
inc
les
xor
push
jns
adc
scas
jg
enter
imul
adc
je
inc
lods
inc
pushfw
or
push
in
movsl
insl
addl
lds
shlb
cmp
fnstcw
push
mov
sub
ja
hlt
inc
cld
outsl
mov
sbb
inc
inc
mov
xchg
dec
ret
sti
inc
enter
ret
ja
stos
add
dec
inc
test
xor
dec
mov
mov
add
adc
popa
mov
lret
int
fcom
pop
push
adc
iret
les
aas
mov
stc
push
mov
and
rorl
decb
stc
aaa
lcall
das
in
aad
pop
cmc
xor
cmp
cltd
jp
push
iret
mov
sub
in
pop
push
cs
lock
push
and
ja
and
insl
xor
shll
ret
mov
icebp
push
xor
add
sub
push
mov
sub
push
cs
mov
mov
push
bndstx
mov
or
mov
cld
lea
jo
inc
sub
sbb
fwait
mov
test
push
cmpsl
jo
lea
hlt
out
int3
sub
hlt
sbb
and
jl
mov
sti
pop
push
fs
jbe
out
sub
sub
jb
imul
test
mov
sub
sbb
incl
inc
movsl
in
mov
xlat
mov
cmp
xor
adc
loop
jnp
mov
lahf
xchg
lahf
ficoms
dec
mov
pop
sbb
xor
inc
jp
vpmaddubsw
int3
sbb
sub
xchg
jle
pop
idivl
sbb
dec
test
std
movsb
xor
lahf
lea
dec
mov
xchg
pop
sub
cmp
mov
sahf
xchg
arpl
inc
rcrl
push
shr
pusha
push
push
push
ret
ret
ljmp
roll
mov
fisubrs
mov
pop
aaa
pop
jl
dec
lea
sti
movsl
ds
nop
imul
adc
jecxz
xlat
leave
aas
iret
iret
pushf
out
jae
xchg
pop
pushf
aas
push
adc
nop
add
add
addr16
dec
sub
or
lods
test
cltd
fwait
jmp
pusha
je
mov
inc
je
stos
push
push
jbe
movsb
je
or
scas
fiaddl
mov
repnz
outsb
jnp
pop
xchg
cmp
xchg
cmc
adc
aas
lret
fldl
cmc
dec
sub
cmp
imul
lea
cwtl
push
cmc
lahf
xchg
mov
stos
xchg
call
sbb
fucomi
sub
sbb
push
jg
cmc
mov
adc
test
jle
sbb
jne
xlat
subb
cltd
cs
clc
jo
into
enter
mov
push
jns
mov
mov
mov
insl
mov
out
mov
xchg
push
xor
fsubs
call
inc
rclb
sbb
js
pop
push
sub
je
adc
roll
mov
add
mov
jl
mov
push
int
std
mov
lea
pop
push
test
fwait
nop
xlat
sub
adc
pop
push
jcxz
lods
jp
shlb
mov
jae
sbb
pop
dec
stos
and
adcb
cmp
pop
iret
std
mov
out
lock
mov
push
dec
sub
cs
data16
dec
inc
mov
inc
add
aam
cwtl
cld
dec
fucom
sbb
test
dec
stos
mov
imul
push
push
aaa
pop
add
or
aas
and
pop
icebp
push
cmc
and
mov
int
sub
pop
aas
add
push
js
sahf
fisttpl
dec
sbb
inc
cld
xchg
sub
filds
or
mov
mov
arpl
pop
rcrb
cmp
mov
dec
inc
stc
and
jmp
cmc
in
lock
inc
stos
jecxz
jmp
cld
outsb
jecxz
push
loopne
pop
fstpt
mov
or
pusha
or
xchg
rcr
lods
fldt
push
adc
outsb
adc
adc
sbb
sub
push
lds
popa
xlat
nop
mov
repz
mov
mov
pop
lea
icebp
jo
out
clc
js
inc
lock
out
jl
mov
nop
mov
mov
es
sub
out
push
pop
inc
leave
out
xchg
jne
adc
xlat
cli
mov
jno
mov
loope
stc
adc
jge
mov
jge
jle
addr16
lahf
int3
outsb
push
pop
test
outsb
cld
fadds
push
inc
pop
or
loop
test
mov
adc
int
add
xchg
jge
test
mov
iret
imul
mov
movsl
int
aas
xchg
popf
dec
mov
test
mov
das
mov
inc
cmp
mov
ja
dec
mov
cltd
push
stos
int
outsl
nop
cmp
mov
cli
in
sbb
scas
push
fdivs
lret
pop
in
mov
ds
mov
mov
mov
dec
add
inc
add
mov
adc
jle
loope
xlat
sbb
sbb
sub
lods
clc
andl
aam
cmp
out
test
int
dec
mov
add
push
int
cmp
stos
mov
lds
aaa
sbb
or
push
adc
pop
jmp
xchg
or
dec
call
adc
jmp
aad
imul
xor
pop
nop
popl
add
jno
xor
push
shlb
in
and
pop
push
fwait
pop
je
lcall
inc
cmp
pop
adc
jne
lods
xchg
jns
cwtl
xchg
pop
aas
and
and
ucomiss
or
adc
mov
addr16
incb
add
or
push
cld
aaa
gs
jae
js
push
pop
mov
cmp
add
call
xor
ljmp
inc
jae
push
sub
dec
mov
push
jae
xchg
movb
cmp
js
push
je
pushf
icebp
roll
inc
add
adc
rcl
xchg
icebp
nop
mov
or
fistps
xor
pop
div
fiadds
repnz
out
inc
dec
nop
cmp
das
xor
xchg
xor
pop
mov
dec
scas
mov
sarl
ja
sub
repz
pop
pop
mov
xchg
jp
popf
mov
jmp
adc
and
out
out
adc
push
push
pop
pop
shl
pop
popf
enter
adc
jge
sub
pop
xchg
in
aam
pop
mov
les
ljmp
jle
int3
scas
lret
ja
add
mov
inc
jle
lret
xchg
mov
pop
cmpsl
es
movl
or
pop
cmpb
sbb
jno
aaa
aaa
insb
dec
insb
daa
shl
sbb
cmpsl
and
jp
dec
inc
add
or
lock
ret
mov
popa
rcll
xchg
pop
sbb
and
add
xchg
mov
out
mov
sub
xor
adc
mov
jmp
rclb
es
addr16
pop
mov
test
push
clc
aas
fucomi
fsubl
scas
loope
fistpl
clc
ds
nop
aaa
push
aaa
dec
pop
ja
jl
adc
pop
fwait
inc
mov
add
add
sbb
add
adc
add
mov
xor
std
ljmp
mov
ror
sahf
pusha
popa
cli
cmpsl
cmc
insb
js
pushf
add
dec
in
xor
icebp
into
call
pusha
lods
xor
sub
sub
pop
sub
xchg
outsl
popa
in
cmp
pop
ljmp
cmp
jecxz
rorb
stos
push
lcall
push
jbe
add
testb
push
daa
stc
adc
fidivl
sbb
inc
ja,pn
add
push
dec
push
dec
inc
shr
dec
in
inc
sbb
xor
xor
mulb
inc
pop
shll
add
push
insb
loope
pop
jecxz
jae
lea
je
sbb
cmc
pop
xor
mov
sbb
dec
mov
outsb
or
mov
adc
sub
mov
mov
cmc
aad
sub
xchg
loop
adc
xchg
xchg
cmp
mov
cmpsl
dec
mov
jg
xchg
fstp
in
jne
push
push
add
ficoms
mov
iret
adc
jmp
adc
in
push
nop
clc
imull
lds
arpl
mov
add
mov
aad
aas
and
jmp
mov
mov
in
ret
or
pop
lret
cmpsb
xor
push
scas
sub
cmpsb
cmpsb
les
xor
cmp
imul
or
pop
repnz
xchg
push
inc
bound
add
push
pusha
stos
fs
imul
mov
mov
rcl
xchg
sub
ja
sub
scas
push
and
cmp
aas
ds
lret
mov
lahf
inc
cmc
mov
notl
xor
cmp
stos
mov
inc
fstl
xor
loope
lretw
fs
mov
pop
xchg
xor
adc
sti
adc
sub
fidivs
fildl
mov
cltd
push
fcomi
or
dec
jmp
fsubrl
idiv
xor
aas
or
push
call
push
push
repz
sbb
jmp
mov
out
shll
pushf
mov
mov
loope
xor
adc
je
mov
xor
mov
dec
mov
add
or
popf
lds
jo
sahf
icebp
test
out
cltd
cmpsl
adcb
daa
mov
mov
cmp
push
mov
push
stos
aas
sbb
outsb
cld
iret
pop
cmp
dec
nop
mov
sbb
push
pop
arpl
in
lcall
push
or
outsl
icebp
jo
sbb
dec
cld
dec
lods
jo
pop
jnp
int
jae,pt
cld
dec
mov
iret
jno
and
inc
add
std
dec
outsb
mov
loope
ficoms
popf
cmpsl
sbb
add
insl
jmp
push
mov
stc
sub
add
popa
ljmp
ficompl
jg
mov
lock
out
stos
push
jo
in
cmp
xorb
scas
cmp
xor
pop
mov
mov
sbb
add
cmpsb
mov
inc
shll
pop
repnz
sbb
lods
div
xor
mov
ret
scas
add
mov
mov
dec
ljmp
sti
sub
add
push
movsb
jb
in
inc
and
test
iret
mov
jbe
jmp
xchg
mov
jo
push
inc
std
popa
mov
and
popa
lret
jae
pop
push
flds
sarl
scas
jbe
fiaddl
movsl
cltd
dec
xor
dec
cmpsl
mov
scas
jbe
jbe
mov
pop
stc
shrl
in
xorl
cmp
lret
or
jp
mov
or
js
pop
dec
mov
js
push
rorl
lret
mov
pop
jo
mov
pop
push
xor
inc
pause
pop
pop
mov
xchg
cmpl
and
mov
imul
dec
loop
fmull
leave
fdiv
sbb
dec
xchg
jbe
out
jae
pop
and
cli
xorl
mov
in
dec
mov
cmpsl
cmp
dec
lock
xor
lods
and
jns
push
imul
loopne
pop
pop
xchg
and
mov
inc
mov
les
cmp
data16
adc
dec
xor
fs
and
xchg
mov
mov
aam
ficoms
repnz
pop
and
inc
xchg
gs
fildl
repnz
cli
push
ud2
xchg
dec
pusha
adc
out
test
fdivr
scas
inc
inc
ja
jb
test
push
add
dec
clc
hlt
add
dec
dec
inc
push
ja
fists
and
pop
orl
daa
icebp
stos
dec
mov
push
sub
enter
push
push
push
jae
jb
mov
out
dec
sub
adc
xlat
push
dec
icebp
daa
mov
clc
mov
xor
shlb
inc
mov
mov
jae
sbb
fsubrp
sarb
jl
mov
dec
xor
cs
enter
inc
out
mov
push
mov
push
testl
in
mov
mov
jmp
imul
xchg
pop
mov
push
sbb
pop
ficompl
lahf
stos
int
inc
xor
shrl
imulb
sbb
lahf
in
dec
pop
xor
sbb
je
inc
xorb
ret
jns
fbstp
sbbl
and
leave
ja
cmp
test
test
or
adc
mov
lods
push
or
aam
add
jnp
pop
jg
and
filds
mov
lock
mov
and
les
jns
cmovnp
aas
jne
mov
mov
cmpb
jo
test
pop
jge
out
push
rcrl
and
sub
adc
xchg
call
sub
adc
and
or
rcr
jb
enter
iret
orl
sub
nop
lods
sub
or
cmp
adc
mov
jecxz
mov
push
sub
inc
dec
mov
adc
clc
mov
lods
add
fldcw
sub
enter
pushf
jl
pop
mov
nop
call
lahf
loope
lcall
mov
test
sbb
stc
idivb
aaa
push
rol
sarl
mov
xlat
popa
pop
sbb
aam
in
int
cmp
pop
mov
push
out
sub
loopne
dec
mov
mov
mov
test
popf
push
scas
mov
cmpsb
jnp
negl
xor
mov
xchg
mov
lds
loop
jb
lods
ret
in
jnp
mov
or
xor
test
add
lahf
mov
xchg
sbb
sarb
xor
ficompl
cmpsl
pop
sbb
das
and
aaa
pop
rcr
push
mov
xor
jbe
movsl
sub
lret
jbe
mov
mov
fildl
cwtl
sub
imul
in
fs
arpl
lret
jle
xlat
ds
mov
push
or
jnp
xchg
in
mulb
inc
imul
xchg
out
imul
rorb
jne
out
or
callw
pop
dec
cmpsl
test
add
sbb
loopne
mov
iret
and
rolb
mov
sbb
push
lea
adc
dec
fs
ret
imul
sub
dec
sub
jmp
dec
mov
imul
mul
xchg
repz
or
out
cmp
inc
or
mov
adc
ret
bound
or
addr16
out
adc
insb
cmc
xor
jnp
xchg
les
pop
jecxz
fiaddl
sbb
xor
jecxz
scas
add
fnstenv
out
mov
mov
jno
out
jno
jns
pop
mov
adc
testb
pop
or
jge
les
rol
xchg
aaa
jbe
sbb
imul
push
sbb
adc
jmp
ss
rcl
mov
jne
and
fsubp
xor
fcompl
mov
outsl
or
mov
jmp
dec
adc
inc
mov
fldl
mov
int
lcallw
jnp
sbb
xor
mov
sbb
pop
xor
aas
or
inc
ficomps
jns
movsb
test
icebp
xchg
ret
push
ret
adc
sbb
lahf
adc
js
je
jp
jge
xlat
jle
pusha
and
dec
xchg
stos
ss
in
and
xor
add
jae
nop
pop
mov
popf
std
cs
jecxz
xchg
lods
rorb
sbb
shrb
mov
imul
cmp
shr
cmp
pop
lahf
pop
leave
jmp
cli
add
sbb
imul
mov
cmpsl
imul
pusha
aad
idivb
adc
xor
mov
lock
jmp
clc
movsb
mov
push
scas
imull
and
loopne
cmp
add
sub
ret
add
popa
push
jp
mov
mov
inc
hlt
movsl
pop
or
in
out
scas
or
xchg
sub
fists
mov
xchg
mov
out
leave
in
mov
pop
add
xchg
mulb
gs
adc
mov
nop
daa
inc
imul
adc
sbb
mov
adc
movsl
js
xor
in
sbb
sub
mov
cld
fdivl
addl
add
inc
lret
xchg
loope
iret
jg
les
adc
std
pushf
call
and
test
sub
je
lret
mov
mov
mov
jnp,pn
lea
ja
test
test
push
push
sub
add
inc
ficoms
jbe
sub
mov
sub
lea
xchg
cmc
scas
mov
sbb
pop
pushf
into
mov
add
stos
stos
inc
and
das
sbb
les
sub
mov
in
and
lea
pusha
in
or
push
mov
dec
sub
test
faddl
xor
add
pop
ds
mov
int
rclb
mov
stos
xor
push
ja
mov
aad
scas
insl
jns
inc
subl
xchg
sbb
adc
push
aad
jg
pop
dec
cwtl
insb
fwait
pop
pop
fistpll
inc
jmp
stos
xor
es
mov
movups
xchg
mov
xchg
sbb
fwait
push
xchg
sti
and
dec
or
jae
hlt
or
fstl
out
jmp
add
bound
pop
clc
fldl
push
mov
aas
test
lock
icebp
outsb
cmp
sbb
push
cli
xor
sub
xor
inc
fdivrp
adc
lods
arpl
js
cmovae
sbb
or
fld
or
push
popf
sti
jno
cmpsl
leave
bound
pop
scas
mov
call
stos
js
sub
xchg
ret
adc
push
cmp
add
arpl
inc
pop
sub
xor
or
iret
cmpsl
or
sti
aam
sbb
dec
pop
in
imul
fwait
repnz
movsl
sbb
std
mov
aas
push
nop
dec
or
jl
std
ret
xor
mov
pop
jbe
stos
js
sbb
scas
insl
insb
inc
imul
aad
xchg
rorl
hlt
scas
push
xor
jecxz
mov
repz
adc
int
adc
lods
dec
cmp
cmp
mov
sahf
addr16
adc
push
sahf
jg
rcrb
mov
insl
mov
sub
in
int3
popa
xlat
and
sub
aam
rorl
cmpsl
inc
jbe
dec
in
dec
jne
test
lret
insl
mov
mov
fmuls
stos
in
mov
fstps
adc
xor
jns
xor
shlb
jo
jp
sbb
lods
ret
mov
dec
xor
out
inc
jge
sbb
mov
lea
loopne
notl
stos
jmp
aad
xlat
adc
scas
addr16
sub
sahf
cmp
cmp
mov
inc
inc
pop
cmp
mov
out
inc
cmp
int
and
mov
xchg
test
pop
inc
out
test
mov
push
cmpsb
outsb
into
aam
pop
popf
les
push
and
push
sub
insl
out
aas
cmp
mov
int
sbb
inc
pop
push
mov
ret
test
ror
dec
dec
daa
xlat
test
push
and
mov
movsl
mov
cmpb
fcmovne
lahf
inc
dec
mov
dec
fstl
and
hlt
xchg
mov
jnp
iret
cs
jnp
scas
pop
jo,pn
sar
bound
call
sub
mov
pop
js
das
pop
sub
outsb
sbb
mov
imul
insb
inc
arpl
das
lea
ret
cs
data16
pop
inc
shl
pop
pop
xchg
test
inc
test
fcoms
dec
mov
sahf
popf
daa
jg
sub
mov
scas
repz
mov
mov
decl
test
shrd
push
fnstcw
sub
cwtl
mov
fmull
mov
mov
cmpsb
jbe
out
clc
push
imul
lcall
mov
je
xor
mov
and
xor
inc
adc
or
push
adc
sbb
cwtl
pop
xor
xchg
xchg
leave
xor
xor
cmp
pop
icebp
js
fadds
pop
mov
pop
aas
cmc
jno
xchg
or
ljmp
push
sub
pushf
dec
push
js
loope
dec
aas
clc
cld
adc
lods
imul
or
pop
scas
inc
roll
mov
jae
aam
add
jg
neg
mov
int
mov
mov
mov
scas
or
sbb
mov
jmp
adc
rorb
dec
mov
out
sbb
add
cmpsb
aad
fildll
sahf
out
ja
daa
cmp
sbb
jmp
movsb
movsl
cmp
das
imul
mov
xor
lods
mov
hlt
cmpsb
ret
inc
or
out
roll
std
jae
aam
ss
lods
inc
mov
mov
mov
stos
and
rorl
sub
sahf
jge
fwait
or
jns
test
or
nop
into
pop
iret
insb
inc
jbe
adc
test
cld
or
sbb
mov
ret
sbb
xchg
mov
enter
fisubl
rcl
jnp
jo
lods
sub
inc
jnp
adc
imull
xchg
std
jne
mov
xchg
and
rcrb
adc
or
out
push
mov
xor
inc
xchg
pop
in
addr16
jg
xchg
mov
cmpsl
icebp
mov
js
fistpll
pop
das
faddl
inc
leave
out
jmp
or
es
test
jnp
push
lods
ret
shrl
inc
dec
mov
sbb
shrb
xchg
cmp
and
aam
and
outsl
shrl
lds
cmp
int3
or
push
xchg
mov
stc
jbe
xor
xchg
jno
icebp
pop
mov
in
loope
sub
pushf
lcall
push
xor
xor
es
adc
xor
dec
or
stos
xor
outsb
mov
imul
jl
jmp
jecxz
call
push
fs
filds
ffree
and
fcompl
pop
mov
out
mov
js
shlb
and
scas
mov
int
scas
test
lahf
hlt
lods
repz
pop
sbb
test
pop
test
jno
add
sub
gs
in
scas
lahf
sub
add
ret
inc
into
pop
sahf
jae
sti
testb
mov
sbb
and
sti
fucomi
stc
pop
stos
leave
lods
xchg
or
xchg
fcmovnb
shlb
sub
mov
pop
cs
gs
inc
mov
and
dec
jg
jnp
add
dec
aad
cld
shl
mov
mov
push
nop
test
cld
sahf
imul
and
pop
mov
shrb
lahf
inc
loopne
clc
lahf
fisttpl
and
imul
pushf
bound
cltd
dec
icebp
jo
or
xor
stos
pop
and
xlat
xor
rcl
in
and
fdivrs
in
cmp
jnp
out
pop
jmp
sub
into
mov
out
push
sar
hlt
add
enter
cwtl
mov
add
cmp
sub
sub
mov
movsb
cmp
out
push
je
push
xlat
sub
stos
shrl
mov
xor
add
push
push
inc
dec
or
sahf
jge
fiaddl
test
lcall
xor
or
push
das
insb
loopne
cmp
std
pop
sub
bound
add
je
fildll
pop
jnp
push
cltd
sahf
jecxz
scas
in
mov
adc
sub
dec
insl
pop
std
and
xor
lea
sar
xchg
mov
loope
cmpb
pop
pop
iret
dec
fwait
add
jp
mov
sbb
pop
arpl
ficomps
push
sbb
fiadds
imul
stos
cmp
pop
or
sbb
or
jp
sub
sti
aad
in
fnstsw
xor
adc
and
lock
ljmp
and
push
xor
add
inc
jmp
cli
mov
jbe
push
push
cmp
icebp
ljmp
ror
mov
pop
lcall
repnz
movsb
mov
dec
dec
xlat
sahf
xor
fs
test
mov
and
xchg
and
push
je
jmp
mov
scas
sub
sub
pop
or
xor
dec
dec
adc
repz
jbe
ljmp
in
adc
mov
sub
les
mov
jae
cmovb
mov
fsubrs
cltd
jbe
sbb
sub
add
jmp
inc
sub
mov
out
pop
dec
and
test
addb
fiadds
push
out
testl
cmp
xchg
xchg
push
xchg
inc
pop
jae
cmp
push
cmc
and
inc
in
lahf
aas
sbb
push
cs
add
jo
cli
cs
imull
cmpsl
rorl
push
idiv
push
psllw
sbb
outsl
jecxz
mov
popf
ret
scas
cwtl
shrl
aad
or
jmp
loope
xor
or
sbbb
mov
push
cld
fisubs
xchg
stos
shrl
pop
test
pop
inc
jb
stos
push
in
mov
sub
pop
push
jg
mov
mov
jno
sub
push
pop
cmp
dec
hlt
and
repz
sbbb
out
js
pop
ds
jbe
aad
nop
push
sub
xor
xchg
inc
xor
dec
push
mov
dec
pop
and
es
or
in
mov
aam
mov
lea
insb
imul
daa
out
dec
adc
and
xor
pop
push
add
rclb
inc
jno
mov
pop
mov
into
mov
test
outsb
in
xorb
out
addr16
xchg
mov
mov
xchg
fisubrs
cmpsb
jo
pop
pop
push
in
mov
mov
push
sahf
leave
aam
lock
scas
ficompl
dec
rcrb
jne
xchg
or
loopne
aam
jle
jmp
sbb
dec
jmp
mov
mov
jl
mov
addr16
fstps
sub
mov
fidivrs
repz
cmc
out
xchg
js
sahf
pop
fimull
push
jne
lods
stc
cmp
adc
or
dec
lods
mov
movsl
loope
and
test
pusha
jns
fnstenv
je
fildll
dec
push
add
movsb
pop
cmpsb
pop
add
and
push
mov
les
mov
dec
dec
mov
icebp
bound
movsb
call
lds
les
push
sbb
fwait
je
std
pop
std
sub
repnz
push
sbb
dec
cmc
insl
add
xor
jne
mov
sub
decb
jle
les
sbb
fwait
loop
int
lods
sbb
out
jg
cwtl
sbb
arpl
push
add
push
jae
andl
sub
jl
adc
mov
call
or
push
jne
pop
adc
adc
xor
add
cmp
repz
jbe
sbb
and
mov
cmpsl
and
cmp
mov
scas
mov
cmpb
ds
cmpsl
xor
add
push
or
sub
fstps
rcll
js
stos
xor
inc
mov
dec
pop
shll
mov
or
push
mov
cmp
and
or
add
push
or
mov
sbb
pop
dec
mov
loopne
aaa
dec
orb
pop
mov
dec
push
sahf
xlat
fucomip
rclb
add
adc
popf
dec
daa
sub
jno
mov
cld
sbbb
cmpsl
sub
mov
pop
lods
lea
fdivl
sbb
jmp
xchg
inc
stos
xor
inc
pop
mov
out
dec
out
rorl
addr16
rcrl
aam
push
divb
mov
addr16
fsubr
mov
cmp
aas
mov
out
and
pop
jns
cmp
fmuls
idivb
xor
dec
xor
jp
dec
in
cmp
add
popa
cmpsl
ljmp
mov
mov
dec
inc
mov
stc
add
xchg
xchg
out
sbb
xor
aad
insb
xchg
inc
pop
repz
sbb
jbe
lock
pop
mov
xchg
les
cmp
cmp
clc
sbbb
data16
bound
mov
mov
push
leave
inc
mov
iret
pushf
out
sub
add
and
xchg
xor
push
aas
mov
mov
es
xor
rcl
mov
xchg
js
mov
add
push
in
dec
inc
mov
insb
outsb
inc
push
xchg
mov
xchg
or
fdivrl
dec
sbb
dec
and
mov
fnstsw
xchg
mov
aad
imul
push
fs
cmpsb
daa
stc
dec
xchg
subb
repz
imul
or
std
fnstcw
xor
bound
subb
sub
xchg
in
cmp
add
jbe
pusha
mov
in
imul
imul
mov
xorl
mov
pop
aad
icebp
mov
and
addr16
sbb
cmpsb
inc
gs
jo
push
adc
inc
lea
push
dec
push
shlb
cltd
rolb
shl
inc
mov
inc
and
sarb
lock
xchg
sbb
push
movsb
lea
xchg
fwait
sub
xchg
dec
icebp
sbb
out
push
das
pop
fldenv
push
ret
iret
sbb
daa
adc
add
xchg
xorb
gs
xchg
xchg
xchg
scas
aam
pop
jp
fs
and
loop
mov
sub
push
dec
pop
sub
inc
leave
cmp
hlt
mov
xorl
mov
sbb
mov
and
mov
xlat
fcmovnu
xor
pop
dec
mov
test
rclb
imul
lods
in
out
insl
sbb
pop
and
push
ljmp
test
lret
and
outsb
stos
lret
mov
test
xchg
xor
cmp
sbb
xor
filds
mov
icebp
push
test
mov
push
sbb
je
push
ss
sub
imul
pop
adc
add
js
mov
jne
mov
jmp
fcoml
mov
notl
adcl
cmp
add
dec
jb
xchg
push
in
int3
imul
cmp
dec
jmp
inc
sbb
adc
movsb
or
fisttps
int
shlb
xor
add
xor
inc
sar
and
fidivrs
and
sub
cmp
jb
cmp
push
imul
sub
fwait
test
out
rclb
sub
pop
xorl
or
repnz
out
mov
pop
or
xchg
lcall
rorb
sarl
insl
repnz
int3
pop
daa
out
mov
mov
sbb
pop
rcrb
push
addl
add
inc
push
cwtl
iret
push
cmpsl
push
dec
js
or
fs
mov
inc
mov
fldenv
xor
xchg
outsb
and
sub
movsl
xorl
nop
imul
fnstsw
add
subl
iret
mov
xchg
sbb
inc
je
dec
push
mov
sbb
ss
mov
lret
rorl
test
xchg
imul
or
out
jge
jmp
jae
insb
dec
jle
repnz
adc
adc
cld
dec
or
push
cli
add
arpl
pushf
jb
jp
divl
repz
cld
leave
loop
adc
pop
mov
lea
inc
aaa
push
xor
sub
test
fwait
idivl
bound
nop
cmc
cmp
ja
xchg
sahf
sbbl
shrl
movsb
iret
shll
flds
in
sbb
sarl
mov
xchg
sub
aaa
loop
pop
cmp
and
and
addr16
or
dec
aas
cmp
jno
cmp
mov
inc
in
jle
mov
push
xchg
cmp
dec
xchg
int
inc
dec
insl
clc
pushf
jp
sbb
sbb
clc
cmpsb
enter
adc
mov
lea
insb
mov
sub
and
loopne
std
or
or
out
into
add
adc
fxch
pusha
jge
fsub
xor
stos
mov
mov
dec
lods
fildl
mov
push
insb
fidivl
sbb
jle
daa
insl
inc
push
dec
mull
repnz
sub
jne
fisubrl
xor
call
cmpsl
ja
sbb
mov
dec
cmpsl
aaa
out
xor
sub
ljmp
dec
aad
int3
jmp
push
std
dec
jecxz
jp
test
push
sahf
movsl
xchg
fmul
adc
fs
adc
adc
out
lret
movsb
pop
xchg
jp
sub
int
and
sbbl
stos
test
into
dec
jge
test
rcr
push
xor
rclb
push
xchg
sub
push
mov
adc
push
imul
ja
cmpsl
jl
out
lcall
aam
xchg
sar
out
adc
dec
insl
enter
fcomps
cli
jmp
and
sbb
add
or
dec
cmp
push
stos
pop
lock
sub
std
pop
addr16
or
jae
push
inc
gs
stos
sbb
mov
ss
je
push
imul
jae
movsl
add
jecxz
or
xchg
cli
test
push
insl
or
xor
in
pop
fmuls
in
dec
pop
xlat
pop
imul
pop
mov
push
movsl
sbb
test
dec
mov
add
mov
inc
cmpsl
inc
arpl
xor
out
sub
sahf
pop
arpl
fiaddl
and
xchg
xchg
jae
stc
push
adc
and
dec
test
pop
scas
sub
cmp
lock
xor
dec
push
jmp
ret
add
mov
dec
push
push
hlt
mov
divl
push
popf
sbb
cmp
mov
cs
cli
xchg
cmp
loope
addr16
les
xor
xchg
xchg
ss
jmp
scas
and
lods
xchg
cmp
ja
aas
sbb
mov
gs
dec
aaa
fwait
push
int
and
ljmp
mov
jle
add
xchg
in
mov
bnd
xor
pop
sub
movb
aas
jno
mov
xor
loope
pusha
scas
shlb
lahf
sahf
push
or
inc
xor
ljmp
enter
sbb
sbbl
movsb
mov
mov
and
pop
pop
in
sarb
jns
repz
cld
pop
shrl
pop
and
cmp
jnp
cmpsl
dec
out
mov
inc
sbb
xor
ds
pop
push
out
hlt
arpl
push
fcoms
das
sbb
or
mov
sub
loop
fmuls
fdivp
mov
mov
sub
cld
jbe
and
sbb
cmp
cmpsb
aad
jle
mov
pusha
rcrb
icebp
fidivl
mov
nop
push
add
dec
sar
xor
mov
push
pushf
icebp
and
test
das
jmp
sub
dec
test
and
push
add
out
enter
sub
pushf
subb
mov
mov
aad
in
push
xchg
sub
cld
sbb
enter
rolb
or
shll
mov
jne
inc
inc
xchg
movsb
add
xlat
cmp
and
push
ret
or
les
mov
fwait
js
movsl
dec
mov
shll
aas
std
cmp
sub
lahf
mov
add
push
mov
mov
xchg
out
sub
cmp
aam
cmp
add
loope
stos
ss
jge
loopne
ja
orb
sub
repnz
and
fsts
xchg
pop
pop
std
add
mov
mov
enter
adc
sbb
outsb
outsl
add
sbb
clc
push
mov
sti
pop
imul
push
repz
pop
mov
pop
inc
sub
add
pop
sbb
rclb
je
xor
in
repnz
popa
popa
je
xlat
mov
mov
mov
subb
imul
fldln2
mov
das
fnstsw
mov
imul
cmpps
inc
jo
pop
push
and
mov
cmp
in
dec
mov
faddl
outsb
inc
sub
incl
sahf
insl
xor
fwait
in
loope
cmc
push
xor
xchg
fcomps
inc
pop
shrl
sbb
scas
or
mov
jl
repz
fstps
xchg
mov
into
aam
xor
jle
rorb
pop
sub
push
faddl
push
int3
mov
lahf
cs
xchg
scas
pop
cmp
mov
rclb
decb
cmp
or
cmp
inc
shl
adc
cltd
test
ret
jb
int3
mov
clc
jns
sub
sti
jae
sbb
cltd
lcall
cmpsb
xchg
add
gs
mov
push
push
in
mov
popa
inc
pop
hlt
or
and
faddl
ret
aad
jne
pop
adc
jo
jg
push
std
xchg
sahf
mov
sbb
jl
cmp
xchg
sbb
jo
dec
leave
adc
fcom
jo
or
adc
inc
cmpsb
jnp
cwtl
xchg
add
xor
dec
mov
and
sti
xchg
mov
jmp
imul
sub
jo
mov
mov
ss
cmp
mov
cs
jb
lret
push
cmp
push
scas
xchg
pop
sti
xchg
movsl
fisttps
addr16
and
mov
cmc
lcall
jp
dec
bnd
sub
ret
js
int3
xor
or
inc
fdivrl
movsl
jns
inc
push
mov
pop
mov
cs
jle
mov
xorb
or
int3
jg
lcall
push
sbb
add
jp
ss
fistpll
rcr
lods
jno
jo
orb
dec
xchg
inc
sub
sbb
loopne
mov
cwtl
mov
scas
cwtl
jns
xor
dec
lock
jle
mov
inc
push
idivb
inc
jmp
ja
or
in
dec
mov
clc
dec
push
dec
pop
mov
roll
mov
adc
mov
rcrl
inc
enter
xor
mov
push
lods
shrb
dec
push
js
mov
push
inc
lcall
xchg
stos
adc
inc
pop
aam
out
mov
jne
push
adc
add
mov
and
loope
cmc
in
adc
bound
hlt
xchg
inc
ror
jns
shll
xor
cwtl
adc
aas
and
lock
mov
jno
shlb
out
xchg
jnp
sbb
subb
inc
xchg
adc
mov
pop
ljmp
sbb
sbb
cwtl
add
loop
sub
push
mov
jae
pop
into
jnp
testb
xrelease
cmc
push
jns
aaa
aaa
sub
fcoml
sub
inc
sbb
lods
fisttps
add
push
mov
cs
jbe
xor
mov
in
sbb
mov
adc
incl
xchg
iret
push
inc
data16
dec
fwait
dec
daa
pop
enter
xchg
jmp
int3
xchg
xor
lods
inc
fnstenv
stc
mov
fldln2
cmp
sub
ss
mov
call
test
repnz
adc
sub
ljmp
cld
pop
clc
cld
clc
pop
das
sub
mov
sbb
sbb
mov
sub
mov
inc
insb
mov
aam
int3
and
testb
jb
inc
jl
jns
push
push
addl
xchg
fldenv
pop
insb
sbb
add
inc
aas
lds
loopne
mov
dec
shl
sub
inc
sbb
cwtl
es
mov
movb
jmp
es
push
sub
pop
cmp
pop
setle
ret
pusha
pop
icebp
pcmpgtd
fsubr
leave
and
adc
pop
mov
add
les
pop
and
cmp
pop
dec
or
push
jno
xor
fidivs
in
cwtl
pop
andl
outsl
mov
xchg
mov
jmp
or
jg
mov
mov
and
ja
loope
mov
call
sub
adc
xchg
push
bound
mov
hlt
loop
stos
inc
push
data16
addr16
adc
mov
cli
pop
cmpsb
and
lcall
mov
pop
inc
pop
lods
cmp
sub
cmpsl
jne
js
jns
cmp
scas
inc
inc
ficoms
xchg
xor
scas
fcomip
rolb
imul
mov
mov
mov
inc
lock
mov
inc
lcall
loope
int3
pop
xchg
cwtl
pop
adc
loop
sti
mov
dec
dec
dec
fwait
add
cmp
mov
sub
bnd
incl
sbb
mov
mov
xchg
cmp
ret
imul
pop
fs
enter
loopne
or
pop
xor
out
sbb
cmpsb
dec
pop
jg
jle
aaa
call
es
sti
cmp
push
xchg
aam
std
mov
inc
addr16
push
ss
arpl
lahf
add
dec
ss
test
dec
push
or
xchg
cmpsb
push
fs
xor
xor
xor
fwait
xchg
loop
add
cmp
insb
addb
dec
adc
adc
fistpll
xchg
jg
inc
rolb
popf
insl
mov
push
mov
in
imul
mov
out
fisubs
mov
or
sbb
mov
push
pop
xchg
ds
fbld
jge
ret
xor
js
loop
mov
call
subb
mov
push
jo
push
pusha
fstl
jecxz
add
dec
call
pop
mov
inc
test
lret
ljmp
cli
mov
call
pop
or
dec
mov
cmp
repnz
and
adc
pop
test
ljmp
enter
push
das
mov
or
push
add
add
xchg
fldl
punpckhwd
sarb
jl
lret
mov
push
loop
les
fwait
mov
fcomp
or
sbb
in
pop
flds
and
mov
hlt
and
push
cltd
push
arpl
inc
pop
cmp
mov
push
mov
inc
jb
pop
pushf
hlt
in
xlat
stos
push
scas
inc
loop
add
lea
call
enter
into
shl
xchg
jo
inc
add
fcompl
test
es
xchg
lret
xor
xor
and
pusha
xchg
fisubl
pusha
js
stos
repnz
mov
or
jne
or
fdivr
je
imul
sbb
mov
imul
lea
test
in
cmp
add
call
ret
sub
xchg
lods
int3
and
testl
xor
popf
sbb
addr16
cmp
xchg
test
icebp
das
outsb
fbstp
cld
sbb
arpl
iret
insl
push
cmp
es
jb
or
fsts
outsl
mov
sbb
lods
add
pop
vpmacsswd
pushf
inc
outsl
xor
push
aaa
mov
loope
mov
ret
add
fbld
jns
arpl
push
iret
cmp
out
leave
inc
fidivs
jecxz
movsl
mov
repz
cmp
push
in
or
mov
xchg
or
sub
je
outsb
scas
mov
jns
adc
mov
movsl
or
sbb
sub
sub
sub
add
fmul
loopne
dec
imul
xchg
mov
cmp
mov
sarl
push
push
fs
les
or
jmp
pop
sbb
fdivrl
lret
cmp
es
push
lea
or
or
test
pop
dec
lods
out
jne
mov
shrb
mov
out
xchg
pushf
mov
lock
in
aad
int
inc
xor
cld
push
push
sub
nop
andb
faddl
xchg
mov
cmp
inc
into
push
jns
lahf
sbb
cmpsl
arpl
fcomps
in
pop
scas
mov
cmp
cltd
mov
push
xchg
push
or
movsb
push
negl
leave
mov
fimuls
add
xchg
fs
aas
shufps
ret
cmp
mov
test
push
xchg
int3
sub
and
lds
xchg
cmp
bts
inc
inc
test
jne
pop
iret
roll
xorl
mov
jo
in
mov
out
add
mov
out
or
pop
popa
xor
cmp
insl
inc
xchg
fnstsw
fistps
jno
insb
push
fimuls
je
in
int3
xchg
add
jno
popf
ja
sub
mov
lahf
lret
scas
or
inc
insl
jg
or
mov
cmp
or
inc
pop
clc
and
mov
arpl
and
jb
stos
repz
pop
test
mov
loopne
sub
test
sub
scas
loop
js
sar
xlat
sbb
ret
xchg
sbb
insl
leave
das
xchg
icebp
clc
shlb
sub
pop
rorb
daa
cmp
and
movsb
push
pop
pop
aas
ficomps
pop
and
aas
mov
lds
mov
nop
mov
ret
cs
push
fidivs
pop
pop
xor
and
push
aaa
sbb
xchg
cmc
xchg
int3
sub
inc
mov
adc
mov
jo
rolb
dec
dec
fldt
mov
aaa
fstpl
pop
in
insb
push
inc
add
jg
xlat
ljmp
and
xchg
or
test
inc
dec
scas
test
xchg
aad
sub
lea
es
and
xor
mov
sub
fistpll
dec
out
addr16
movsb
pop
xor
cld
shlb
lcall
mov
lea
jno
mov
imul
lcall
ljmp
insl
aas
mov
sti
repz
and
xchg
push
push
fistpll
and
popf
inc
cmp
sysenter
mov
push
popf
aad
inc
or
movq
pop
mov
imul
imul
sub
push
inc
aaa
xor
sub
lea
adc
or
jg
ss
cmp
outsl
sub
aad
insb
je
mov
loope
clc
xchg
lret
xchg
mov
out
pop
into
add
in
mov
inc
bound
cmp
lret
inc
push
jle
repnz
add
mov
out
test
les
imul
insl
shll
mov
lods
sub
push
subb
insb
out
insb
mov
inc
pusha
and
rep
nop
mov
repnz
sub
mov
jnp
sub
enter
lahf
sbb
es
mov
pop
push
add
popa
in
xchg
fisubrs
aad
or
cltd
aas
xchg
iret
mov
add
test
sbb
arpl
mov
jl
pop
push
out
shrb
or
rcrb
push
cs
test
xor
xchg
jmp
inc
into
adcl
sti
or
sub
push
inc
pop
icebp
adc
sub
pop
lods
cs
mull
idivb
mov
cmp
pop
dec
fisubs
outsl
mov
jp
inc
outsl
and
inc
push
std
pop
jp
pop
les
xchg
je
sub
and
not
popf
sahf
loope
ret
sbb
and
mov
mov
adc
rorl
sti
mov
xor
hlt
pop
add
outsl
loop
mov
leave
test
gs
jne
imul
xchg
outsb
pop
adc
hlt
inc
mov
pop
scas
mov
xchg
hlt
pop
sti
mov
sbb
mov
mov
inc
sub
mov
enter
xor
jb
mov
or
in
mov
sbb
xchg
loope
lock
sub
shrl
rorl
into
add
dec
mov
push
adc
sarb
lcall
ds
pop
dec
aad
aad
dec
mov
jo
cwtl
mov
adc
int
mov
clc
pop
mov
cmpsl
push
cmpsl
les
popf
outsl
mov
cmp
jae
xor
push
adc
imul
gs
test
jmp
jp
out
mov
call
push
fwait
push
xor
scas
dec
in
mov
lds
mov
call
cs
int
inc
push
jp
pop
clc
in
out
movsl
cwtl
dec
decl
pusha
ljmp
pop
jmp
xchg
jae
xchg
pusha
clc
fdivl
call
cmpb
movsb
sub
pop
or
xlat
inc
inc
jns
in
in
or
inc
mov
adc
std
mov
nop
sub
jmp
xchg
xchg
idiv
add
mov
cmp
into
insb
adc
fdiv
fstps
or
xchg
or
jg
pop
push
xor
inc
ret
fucomip
xchg
clc
dec
stc
or
xor
test
roll
inc
push
mov
mov
cwtl
mov
jmp
pop
add
fs
jle
jns
mov
push
jp
int3
or
les
repnz
std
test
stos
push
jo
and
cmp
push
fcmove
sub
sub
xor
mov
fimull
inc
cli
inc
in
xor
in
ficompl
xchg
cltd
inc
imul
jp
jne
or
negb
xlat
aam
push
test
lods
loop
lret
mov
inc
jns
jmp
add
sbb
lea
mov
insl
mov
inc
jne
mov
and
mov
loop
cmp
xor
or
out
mov
pop
mov
pop
push
movsb
js
shrl
jmp
or
xor
lods
nop
stc
stos
pop
clc
mov
push
mov
clc
test
adc
xchg
std
jb
cltd
push
arpl
push
shlb
ss
ret
xchg
mov
cmp
or
jae
xor
dec
inc
divb
ret
ret
push
inc
xchg
out
cli
lea
dec
pop
call
push
mov
es
xchg
je
pop
pop
cmpsl
and
inc
ljmp
pop
adc
jg
cmc
out
lea
sti
xor
fildll
data16
int
hlt
fimull
hlt
push
mov
add
mov
daa
cltd
scas
enter
jo
fsubr
sbb
jo
cmpl
mov
jne
inc
ret
push
xchg
xor
stc
or
test
ljmp
jbe
mov
mov
push
pop
mov
and
in
arpl
add
je
mov
fmuls
adc
je
mov
xchg
jmp
and
mov
data16
into
dec
mov
cmpsb
arpl
mov
push
movsb
movsb
rcrb
add
scas
push
mov
rcll
jecxz
add
cmc
out
mov
xchg
ljmp
cwtl
negb
sub
shrl
ret
cld
adc
cwtl
xchg
dec
movsb
inc
fucomp
popf
add
and
shll
cmp
add
lcall
cs
and
push
mov
cmpsb
mov
incl
gs
push
aaa
or
es
inc
cmp
in
sub
insl
jne
lds
jge
cmp
or
mov
dec
sub
cmp
into
inc
ret
cmpsb
adc
xchg
and
fs
mov
es
push
test
cmp
sub
jle
movsb
mov
add
scas
dec
or
negb
stos
ja
mov
dec
pop
add
cmpb
repz
sub
scas
cmpsb
nop
push
cmp
jge
popa
imul
mov
aam
test
sub
mov
push
jns
das
dec
loope
insl
orb
mov
inc
lods
stc
sub
mov
sbb
sub
test
jecxz
mov
fwait
test
cmp
enter
insb
add
jae
fadd
and
push
mov
insl
push
loopne
push
mov
popf
xor
test
mov
dec
bound
std
mov
mov
mov
jle
jge
loop
imul
push
lods
fsts
sub
sarl
sarl
leave
jmp
dec
gs
imul
dec
movsl
pmaxub
cwtl
dec
aaa
sbb
xor
xor
test
xlat
out
cmp
or
ret
movsb
scas
mov
sub
mov
inc
mov
bound
les
jns
mov
movsl
test
mov
push
ret
add
or
test
mov
inc
fsts
out
or
into
test
cld
stos
test
xor
pop
fidivrl
movsl
adc
inc
jnp
mov
inc
jnp
mov
inc
jle
cmc
outsl
xor
jl
fmuls
cli
imul
pop
ss
cmp
bound
sub
inc
mov
xchg
jb
outsl
jae
push
pop
push
push
xor
lea
pop
sar
dec
sbb
clc
cs
mov
or
inc
mov
cs
or
push
sbb
mov
mov
sub
nop
daa
call
test
sbb
enter
das
repnz
dec
fdiv
mov
xcrypt-cfb
fcompl
es
insb
adc
bound
jecxz
test
loop
pop
insl
dec
outsl
aaa
sbb
jno
int
sub
or
pop
mov
sbb
push
fdivrs
ds
sub
push
std
rorl
imul
out
jle
stc
lods
pop
xchg
stc
pop
pop
push
pop
jno
inc
adc
push
aaa
imul
nop
adc
sub
jae
or
pop
xor
or
lahf
mov
lcall
inc
xchg
push
push
cmp
popf
xchg
test
push
clc
mov
add
push
outsb
xchg
pop
pop
fnsave
inc
nop
lea
sbbb
rorb
sbb
enter
shr
mov
cmp
sbb
sbb
push
jne
scas
dec
stc
inc
shl
mov
or
sbbl
pusha
inc
stc
pop
int3
xor
mov
orb
addl
cli
cmp
int3
scas
mov
inc
sarl
scas
push
pop
xlat
ficompl
and
aam
insl
jl
daa
push
mov
sub
pop
pop
dec
xchg
shrl
adc
and
cmc
jbe
cli
stc
lret
sbb
and
or
cmpsl
cmpsb
jno
daa
or
xchg
int3
jl
iret
xor
mov
cmp
mov
push
mov
clc
or
push
sbb
cmp
lods
callw
pop
sub
lahf
stos
dec
hlt
jg
sub
int3
outsb
or
xorb
jb
clc
sbb
sets
lea
sub
repnz
mov
dec
out
iret
rorl
xor
sub
into
push
scas
jnp
cwtl
test
xchg
mov
lret
lock
cmp
xor
inc
ss
mov
aas
int3
pop
popl
jb
dec
or
fadd
cmp
cmpsb
mov
movsb
mov
mov
js
push
jae
ds
inc
pop
pop
dec
add
pop
or
popf
push
mov
sub
sbb
push
mov
mov
mov
dec
push
xchg
aam
pushf
test
shrb
jae
icebp
mov
cmp
jbe
sbb
inc
outsl
mov
loop
mov
xchg
cmp
sahf
stc
mov
and
out
popa
sub
mov
jae
out
mov
jge
sub
imul
push
jne
or
mov
sub
inc
sub
push
dec
test
out
enter
stos
mov
add
jg
adc
xchg
stos
jno
jb
sbb
add
inc
pop
out
pop
ljmp
cmp
fwait
pop
cmpsl
movsb
pop
stos
mov
ja
add
inc
pop
cwtl
imul
dec
fdivrs
aaa
jmp
xor
imul
adc
popa
pop
xor
mov
rorb
sbb
mov
mov
movsl
stos
xor
aad
icebp
dec
shr
push
and
add
mov
mov
push
pop
inc
mov
cmc
or
pop
add
jle
in
ss
and
decb
popf
addb
sub
cmp
imul
cli
outsl
and
daa
add
shlb
add
mov
lret
into
add
cmp
cmpsb
adc
call
pop
mov
or
jns
mov
sub
sbb
hlt
pusha
mov
jbe
add
fbld
movsl
cmp
jbe
push
push
dec
pop
insb
rclb
mov
lret
into
xchg
and
lahf
mov
cmp
repnz
jae
lock
jo
cltd
jo
xchg
cmp
je
dec
jle
das
sub
lret
in
mov
icebp
jns
inc
push
cld
cmpsb
and
cmp
sub
lea
int
adcb
and
daa
cmp
cmp
push
push
nop
lods
int
js
mov
jns
push
mov
data16
pop
pop
flds
in
fs
push
mov
cmp
and
arpl
xorl
gs
xchg
bound
adc
enter
push
int
pushf
pop
inc
mov
movsl
push
lock
push
cli
lock
loop
xchg
xchg
rcrb
ret
add
cmp
sub
sub
mov
sets
push
repz
subb
sub
pop
dec
lds
jne
add
loopne
cld
inc
neg
xchg
mov
mov
in
stos
aam
jne
test
add
dec
mov
add
scas
in
lcall
push
mov
shl
andl
jle
ret
xchg
dec
xchg
dec
outsl
fadds
fmuls
addr16
and
aaa
jo
adc
add
mov
dec
mov
in
jge
fcmovnb
fs
dec
inc
cli
dec
aad
cs
jne
add
scas
aam
bound
cwtl
adc
xchg
jle
insb
loop
sub
aad
shlb
inc
mov
call
and
shrb
inc
sbb
arpl
mov
add
push
mov
cmp
shrb
lret
lds
stos
fcoml
repz
out
je
stos
repnz
fs
loop
lods
xor
cmp
sti
fists
in
jne
into
notl
sub
idivb
cli
add
data16
jae
xorl
jno
lds
ret
dec
cli
sbb
xchg
mov
mul
shl
popa
adc
cwtl
pop
jp
fistpll
fistpll
and
mov
sahf
clc
jae
and
pminub
jo
jno
push
or
in
out
xchg
xchg
nop
aam
in
in
shlb
sbb
cmc
out
xchg
xor
arpl
jecxz
adcb
mov
cs
mov
jbe
shll
out
sbb
mov
jg
loop
jne
mov
jecxz
sti
es
jns
scas
push
pop
and
fnstsw
dec
inc
xor
lock
out
mov
pop
lods
mov
xor
insb
shlb
xchg
sub
cmp
push
dec
faddp
ss
jae
mov
dec
repnz
stos
push
in
jne
call
in
push
push
dec
mov
mov
xchg
sub
xchg
call
jl
jne
addr16
push
push
ficoms
call
data16
bnd
mov
inc
mov
ss
test
ret
push
mov
inc
cmp
xchg
dec
aas
xchg
test
mov
pop
and
add
mov
mov
sub
leave
jle
dec
adc
out
cmpsl
insb
aad
mov
loopne
adc
orl
mov
jecxz
movsb
ror
fdivs
xchg
jecxz
sbb
lret
push
push
out
dec
mov
mov
inc
jbe
add
call
out
and
mov
add
jg
push
inc
lcall
mov
xchg
sub
loop
sbb
mov
arpl
loope
pop
out
shlb
push
and
push
add
je,pt
in
daa
cmp
andb
negl
test
fstpl
or
xor
sbb
outsb
jge
push
mov
cmc
leave
idiv
sub
fs
lcall
cmpsb
mov
pop
mov
ret
loop
sbb
jae
cs
mov
loop
nop
jecxz
test
in
xor
xchg
mov
addl
loop
mov
ror
mov
pop
lds
call
xor
xchg
adcb
xor
xchg
shl
lea
dec
jg
pop
test
jbe
adc
es
xor
nop
inc
xchg
sbb
and
sbb
mov
jns
fldenv
sbb
push
insb
mov
and
subb
jno
mov
or
cmpsb
add
or
push
and
add
mov
insb
decb
cmp
dec
stc
arpl
add
test
add
icebp
inc
into
dec
cmp
ret
jnp
push
in
divl
insl
cmp
popf
repz
test
in
mov
xor
pop
xor
arpl
sbb
jge
rclb
mov
dec
test
and
and
adc
sub
movsb
xor
or
or
inc
cmp
int3
sub
fadd
add
je
in
popa
lds
push
int3
pop
sbb
add
xorl
decb
xor
adc
movsl
sub
imul
jl
repnz
scas
fdivrs
hlt
inc
popl
fcmove
pop
push
inc
les
or
fidivl
jo
mov
arpl
pop
mov
aad
dec
xchg
mov
jl
and
mov
lahf
or
pop
push
ffree
mov
lcall
imull
inc
xchg
mov
sub
jp
mov
mov
and
jg
inc
add
movsb
out
adc
cmp
rolb
fwait
sbb
mov
pusha
stos
and
fisttps
mov
push
out
sub
fcomps
ret
daa
mov
imul
add
aam
push
rcr
loope
es
push
cld
enter
pop
repnz
pop
mov
xchg
adc
adc
pop
daa
stc
lods
rcll
inc
bound
hlt
pop
or
adc
subb
int
lds
or
hlt
popf
cmp
push
enter
mov
into
mov
xor
sbb
cmp
lcall
push
sbbl
rorl
lea
and
or
inc
sbb
jmp
mov
shlb
loope
in
aas
les
inc
push
lahf
mov
lods
mov
xchg
dec
fisttpl
add
fnstcw
cmp
mov
xchg
cmp
lods
out
loopne
jb
sbb
movsb
lret
icebp
cmp
mov
orb
xchg
in
xchg
rorl
cmp
adc
push
fldl
shlb
js
inc
fiadds
sahf
cmp
mov
mov
cmpsb
cltd
aam
pop
xchg
imul
inc
push
push
ret
cmc
mov
mov
sub
push
mov
ret
loop
jns
mov
cmc
dec
mov
and
adcb
repz
or
in
xor
mov
int
mov
js
ljmp
jge
push
sbb
cmpsb
push
mov
push
and
jo
movsb
pop
mov
loop
sub
pop
iret
pop
xchg
andb
out
pop
add
pusha
mulb
out
hlt
mov
lods
lds
add
pop
fmuls
mov
iret
and
pop
sbb
jp
sub
test
ss
mov
cmpb
frstor
popf
jle
bound
push
fcmovnu
sub
out
clc
mov
jno
mov
sbb
movsb
incl
mov
xchg
and
jae
dec
add
mov
lret
in
xor
lods
push
mov
pop
add
ret
inc
mov
jmp
push
hlt
adc
mov
sahf
pop
jno
ret
xchg
dec
stc
sbb
subb
sub
aam
int
mov
data16
pop
adc
sub
pop
and
lods
sbb
call
lret
out
sbb
jae
cmp
aaa
jb
mov
cmc
mov
cwtl
jp
addr16
jns
cmp
popf
loopne
cmpsl
push
loopne
or
jmp
pop
or
mov
out
aaa
sti
lods
les
jnp,pn
push
testb
pop
cmp
ret
or
jmp
es
jle
aas
cltd
repz
fbld
lahf
pop
mull
pop
fistpll
out
mov
sahf
lret
adc
adc
stos
mov
add
cmp
add
in
ss
shlb
aad
lea
mov
hlt
xor
xchg
fwait
push
in
ret
and
adc
and
out
cmp
pop
and
mov
mov
ds
push
mov
mov
and
cld
sahf
dec
and
lcall
xchg
imul
idivb
or
aaa
js
sub
mov
mov
mov
test
pop
dec
jp
mov
rdmsr
or
or
push
xchg
sbbl
adc
out
lcall
in
mov
loop
mov
mov
pop
sbb
and
stos
sbb
pop
add
pushf
xor
out
inc
sub
pop
fs
mov
dec
pop
outsb
jmp
or
rcrb
sub
lea
sbb
jle
setae
ud2
gs
push
mov
gs
cmp
add
pop
xchg
mov
out
shrb
in
xor
stc
mov
lods
cltd
fmull
add
jne
lahf
mov
mov
out
aam
outsb
push
mov
sbb
push
push
jbe
adc
pusha
mov
cltd
incl
and
adc
sbb
movsl
data16
push
pusha
xor
cmpsl
mov
xchg
xchg
inc
out
stos
xchg
xor
mov
xor
addr16
push
and
int3
jmp
scas
and
jl
fistpll
mov
push
adc
aad
test
xchg
test
aaa
jp
mov
fisubrl
fnstenv
aad
xchg
je
jno
inc
jno
or
shll
lcall
xor
cmp
adc
enter
mov
ja
repnz
test
rolb
sarl
sub
ret
lret
testl
and
mov
lret
loopne
ljmp
scas
xacquire
lcall
aad
xlat
adcl
imul
jp
and
mov
cmp
std
lahf
inc
sub
inc
out
arpl
outsb
push
jmp
jno
sub
cmc
mov
imul
jne
negb
jo
add
cs
sub
cmp
jae
ficoml
aam
out
movsb
aad
icebp
in
hlt
inc
xor
sub
insb
dec
pop
imul
testl
mov
scas
mov
xorb
adcl
cmpsl
xor
repnz
out
fidivrs
and
mov
es
push
sti
leave
or
push
push
pushf
mov
ja
mov
lods
mov
adc
dec
fsubrl
hlt
rcrl
test
xchg
push
cld
xlat
lods
dec
stos
lock
and
hlt
movsl
adc
fdivs
adc
mov
pop
pop
add
gs
add
negb
int
dec
mov
iret
test
add
and
pop
push
stos
jge
xchg
jnp
sbb
test
push
sub
test
mov
sahf
stos
push
inc
sbbl
cld
clc
mov
cli
imul
xchg
nop
dec
jp
cmp
jge
and
test
rolb
xor
in
ljmp
lds
shl
jae
mov
in
jnp
lahf
add
out
xor
fmuls
pop
in
inc
mov
insb
fs
inc
test
clc
mov
aam
xor
push
fisubs
mov
negb
cmpsb
mov
lea
push
dec
jg
and
mov
ret
push
bound
fistl
xor
xchg
pop
jbe
push
loopne
mov
push
push
mov
mov
lcall
mov
fnstenv
jp
push
fists
add
outsb
jp
pop
cmc
in
mov
cmpsl
and
std
and
faddl
dec
ret
xor
mov
pop
push
bound
xchg
pop
cld
add
aas
incb
gs
xor
cmpsb
addr16
pop
in
add
sub
push
jno
cmp
jmp
cmp
test
fbld
add
enter
or
jno
adc
fwait
mov
test
sbb
xchg
jg
and
jmp
cmpsl
add
lcall
push
pop
jmp
mov
daa
out
dec
cmp
push
hlt
cmc
jns
cmp
pop
sahf
rcrb
or
sbb
icebp
sarb
out
adc
pushf
in
jne
pop
leave
or
sbb
and
pushl
insl
mov
int
mov
or
mov
out
cli
pop
xor
mov
and
jbe
mov
xchg
xlat
mov
mov
scas
inc
push
fmul
add
mov
stc
pushf
pop
mov
cli
and
mov
test
cs
nop
leave
xchg
inc
decl
mov
push
and
stos
pop
pop
test
sub
inc
rclb
adc
add
incb
loop
test
or
iret
imul
fldpi
lds
xor
mov
jecxz
sahf
dec
jmp
test
fcmovbe
mov
fdivrl
mov
in
dec
ljmp
mov
sub
cld
insl
add
pop
out
mov
pop
mov
sub
fistpll
daa
pop
mov
in
xor
lahf
jns
fnsave
notl
fstpl
add
xchg
jp
lahf
inc
mov
enter
scas
in
int3
repnz
inc
in
std
arpl
mov
arpl
idivl
jbe
aaa
clc
iret
adc
jle
out
jp
setno
negl
or
into
imul
push
das
enter
adc
inc
add
pop
dec
add
ror
xchg
and
arpl
mov
je
movsl
stc
in
mov
push
lods
sub
sbb
imul
lahf
or
sti
dec
xchg
rcr
push
add
mov
fadd
add
out
fiadds
outsb
iret
fwait
sarb
imul
icebp
pop
ljmp
ja
lret
push
sahf
xchg
or
cmp
pop
jno
mov
pop
mov
lods
mov
jle
loop
outsb
out
gs
pop
lods
jo
xlat
jmp
sti
pop
cli
cmp
insl
stc
popf
out
outsl
inc
roll
outsb
sub
and
inc
gs
xchg
cmpsb
add
dec
out
in
adc
lret
mov
in
arpl
adc
imul
lahf
mov
outsb
ret
mov
mov
in
push
or
add
in
cmp
dec
fsub
inc
and
incb
xor
jmp
inc
cmpsb
rclb
dec
pop
push
or
int3
subl
sti
mov
sti
xor
loopne
cmp
loopne
popa
and
popa
xchg
int
lods
pushf
pop
fmuls
sub
dec
ss
mov
shlb
lds
dec
push
inc
mov
pop
js
es
push
sub
leave
jle
call
outsl
xlat
lret
jb
fisubl
mov
xor
mov
int3
pop
fsubl
daa
jg
shll
inc
push
inc
jle
or
pushf
sbb
int3
fisubs
mov
jmp
adc
sbb
push
mov
enter
fidivs
lret
fcmovnb
add
ret
inc
push
jae
ret
mov
mov
mov
mov
out
push
jns
rcl
popa
adc
cmp
loop
adc
add
dec
les
pushf
mov
insl
or
add
jmp
sbbb
mov
enter
mov
add
dec
out
jae
test
arpl
lret
stos
sub
adc
jbe
sub
xchg
xlat
xor
popa
xchg
cwtl
mov
out
aaa
lea
add
lcall
or
out
mov
test
popl
fs
mov
push
xchg
or
add
adc
rclb
mov
hlt
mov
cli
mov
mov
or
sti
lret
shr
addb
add
addl
aaa
out
adcl
pop
and
inc
jb
push
push
cmp
jb
sahf
push
lods
mov
fistl
xchg
ja
pusha
cmpsb
push
bound
mov
adc
js
fnstsw
ret
loopne
ja
mov
pop
test
iret
scas
sub
les
xor
inc
pop
xor
xor
jb
or
and
icebp
dec
fmuls
lods
adc
cwtl
push
test
sbb
out
or
loope
xor
sub
ljmp
stos
lock
mov
adc
dec
push
fdivrl
imul
jae
int
push
insl
sbb
and
sbb
dec
pop
das
add
mov
xor
lahf
test
adc
in
fwait
stc
push
mov
push
fsubrl
add
lods
jnp
push
add
or
fcompl
mov
jb
push
arpl
inc
jle
xchg
loope
inc
jne
sub
in
scas
xor
jbe
inc
mov
stos
pop
repnz
shlb
jl
test
fidivl
andl
mull
mov
out
mov
cmp
leave
call
idivl
mov
push
push
dec
mov
mov
inc
jecxz
dec
cld
pop
out
das
mov
jg
xchg
test
cmp
inc
addr16
outsl
mov
mov
add
mov
pusha
fiadds
loopne
mov
roll
lods
pop
sub
or
enter
je
outsl
jp
andb
shll
jnp
jo
icebp
jb
fsubr
adc
movsl
adc
inc
popf
cmp
jge
shlb
xor
aaa
imul
div
push
sti
out
pusha
lcall
je
test
sahf
sbb
push
repz
push
mov
je
clc
fnstcw
adc
inc
data16
cld
rcr
sub
negb
xchg
push
mov
inc
mov
pushf
or
out
xor
xchg
leave
mov
lret
add
sbb
hlt
outsb
aaa
dec
pop
fsub
xchg
das
and
inc
cmp
push
mov
jns
inc
test
fs
push
mov
dec
push
in
jmp
out
fwait
cmp
scas
jg
jg
xor
add
or
mov
scas
jge
dec
clc
cmpsl
ret
scas
dec
xchg
out
clc
dec
dec
into
lods
test
mov
add
pop
outsb
nop
xor
das
lret
cmpsl
mov
inc
lock
out
std
sbb
mov
or
and
or
outsl
int3
mov
mov
ss
mov
push
cmc
scas
pop
pop
xchg
fbld
and
mov
in
pop
inc
jbe
inc
into
popa
sahf
arpl
test
xor
add
xchg
jl
sub
ret
popa
jbe
nop
jo
shlb
and
xchg
leave
int3
fisubrl
and
in
lea
cmp
fsubrs
cmp
add
imul
pop
scas
out
cmp
dec
mov
pop
sbbb
cmp
shlb
mov
jo
mov
leave
jp
addr16
pop
lea
or
pop
inc
xchg
dec
scas
adc
cmp
xor
insl
sub
loope
jne
jg
inc
lock
fsubl
jle
stc
mov
add
mov
testl
ljmp
test
loope
mov
cmp
xchg
push
scas
or
lea
xchg
mov
cmp
int3
inc
out
test
and
sbb
iret
xor
jnp
mov
xchg
popf
sub
call
jle
push
clc
int3
mov
and
in
mov
dec
mov
xor
pushf
das
dec
mov
ljmp
repnz
repnz
shll
imul
ret
sbb
inc
xchg
sbb
cmpsl
lds
jno
mov
out
fisttpll
imul
mov
sub
dec
or
inc
lods
push
or
sbb
mov
sub
in
push
repz
mov
cmp
push
mov
mov
dec
popa
jmp
scas
xchg
xor
xor
jnp
push
mov
mov
vmovntps
call
aaa
xchg
or
mov
scas
or
add
in
cmp
xchg
sbb
je
out
add
jmp
push
ljmp
mov
pop
sbb
adc
adc
cmp
addr16
jle
nop
sub
jp
mov
nop
jnp
xor
imul
icebp
ficomps
repnz
push
pop
cltd
sbb
sub
adc
xor
adc
fsubrs
sub
xchg
inc
js
ds
push
pop
out
pop
push
xor
ret
mov
insl
inc
xchg
jge
mov
pop
stc
lods
xchg
ss
test
mov
popf
or
inc
and
pop
xor
pop
loope
sbb
push
jl
aas
xor
fmul
js
xchg
lahf
pop
stos
dec
push
and
cmp
mov
jb
xchg
inc
sti
mov
cmp
sbb
cmp
add
testb
sbb
scas
int3
mov
dec
neg
dec
sarl
hlt
inc
fsubl
or
xor
push
cli
stc
test
cmpsl
jnp
addb
sub
movsl
lods
cmovb
push
aad
lods
xor
xchg
cmp
xor
lea
mov
bound
in
enter
cmpsb
and
leave
dec
jge
test
gs
or
mov
lret
bnd
cwtl
pop
mov
out
ret
leave
add
cwtl
mov
cmp
lret
or
inc
arpl
lods
in
test
cli
pop
push
inc
sbbl
dec
cmc
aam
js
sbb
pop
dec
ret
bts
xchg
and
fisubrs
inc
mov
inc
lea
sbb
sub
rol
xchg
fsubl
iret
xor
pop
icebp
dec
sbb
sub
xchg
call
push
xchg
lahf
inc
sbb
mov
insb
mov
jb
mov
jmp
jns
adc
inc
mov
cmpsl
fwait
cmp
mov
scas
shr
push
fidivl
stc
inc
and
icebp
rclb
mov
pushf
icebp
mov
mov
roll
pushf
cmp
sub
mov
test
dec
push
pop
or
test
adc
pop
rcll
iret
out
ret
xchg
fstpl
ss
add
inc
test
scas
mov
addb
loop
lods
daa
and
aad
xchg
xor
inc
pop
aas
add
iret
add
popa
push
xchg
mov
dec
cmpl
fisttpl
push
jmp
mov
pusha
mov
jp
stos
push
stc
ret
das
or
xchg
lds
mov
cmc
mov
jle
push
popa
leave
fnsave
cmpsl
dec
shl
cmp
aas
mov
cmp
je
push
mov
xor
and
lods
add
scas
mov
push
data16
sbb
xchg
out
jbe
pushf
test
cmp
xchg
mov
out
fidivrs
js
out
and
dec
enter
sbb
or
movsb
das
cld
mov
cmpsb
mov
cmp
iret
or
xor
lods
inc
loop
fbstp
repz
sbb
xchg
push
in
jb
mov
cs
pop
sub
xchg
xchg
icebp
mov
jl
xchg
jno
lahf
mov
pusha
fsub
sub
push
add
mov
je
sub
popa
cmpsl
pop
adc
test
clc
ja
aam
push
in
aas
ret
jno
test
pop
adc
in
push
jp
sbb
push
inc
pop
xchg
push
sarb
sbb
xor
sub
and
xor
fildl
mov
int3
xchg
js
imul
pop
jns
dec
pushf
push
mov
aas
xor
xchg
add
pop
jo
dec
dec
mov
loope
add
add
dec
lds
cmp
lcall
data16
inc
jle
and
daa
test
adc
inc
loopne
cmpsb
dec
cmpsb
dec
sbb
gs
imul
xor
test
dec
fistl
cmp
or
jmp
bound
inc
in
in
icebp
xor
repz
mov
add
sbb
je
mov
inc
adcb
roll
jg
cmpsl
pop
int
arpl
mov
push
push
jo
sbb
jae
xor
mov
scas
ficompl
mov
pop
sub
pop
jbe
loope
or
aam
xchg
pushf
lahf
imul
fildll
pop
dec
xchg
sbb
inc
sbb
out
sub
jmp
sbb
dec
shr
or
mov
lret
jge
dec
jp
adc
cmp
push
pop
or
xchg
jl
sti
xchg
mov
addr16
or
dec
repz
fwait
push
or
adc
seta
dec
aaa
add
aaa
sub
fdivs
rcl
sbb
inc
cli
call
enter
in
leave
adcb
fistps
xchg
sahf
aaa
and
or
jb
and
shl
push
mov
jecxz
adc
test
rcrb
xchg
mov
or
mov
jno
inc
scas
sub
sub
ret
int
out
jmp
les
mov
lcall
test
loopne
inc
add
lret
mov
add
xor
enter
cli
lret
cmc
or
push
data16
lcall
push
popf
jge
loop
jecxz
mov
jecxz
shl
test
int3
xor
or
rolb
sti
xchg
dec
cmpsl
test
add
ljmp
mov
mov
push
rcrl
mov
cwtl
cmp
mov
lcall
xorb
outsl
imul
out
sbb
xchg
jne
out
pop
mov
das
xchg
adc
xchg
mov
cld
mov
pop
aam
inc
lods
adc
and
or
pushf
mov
jo
mov
push
and
lcall
push
pop
sub
dec
outsb
inc
mov
cmpb
mov
or
cmp
mov
stos
push
mov
push
lcall
loopne
and
std
pusha
xor
repnz
xchg
mov
sbb
imul
add
std
in
cmp
jb
in
sub
and
fildll
adc
mov
stos
lret
inc
sub
test
scas
inc
push
std
jg
imul
or
inc
xchg
adc
cwtl
scas
inc
jo
ljmp
rorb
movsb
gs
dec
fistpl
adc
pop
xor
popa
or
pop
notl
leave
setle
pop
mov
xchg
imul
stos
rcrb
shll
mov
jecxz
sub
loopne
ficompl
repnz
or
sub
nop
popf
xor
lcall
and
xor
cmp
scas
inc
test
push
mov
in
lds
das
push
pushf
imul
icebp
jnp
sbb
inc
xchg
ret
adc
xchg
cmp
fisubl
in
jo
sub
add
add
inc
xchg
dec
into
leave
in
fyl2x
std
test
dec
mov
cs
dec
inc
sahf
call
call
in
sub
push
orb
sub
mov
loopne
inc
daa
fmulp
adc
mov
sub
xor
xor
fsts
push
cmpsb
cmp
stos
je
loope
in
cld
sbb
and
or
xor
pop
jg
les
xchg
rcrl
ftst
leave
movsb
push
jne
mov
xor
add
pop
mov
mov
add
add
inc
ja
xchg
xorb
stos
push
inc
ds
push
mov
pop
ljmp
in
mov
decl
popa
int3
jae
test
sub
push
or
call
and
repz
mov
cmp
into
aad
push
add
mov
push
push
test
sbb
mov
addl
sub
out
shll
sar
inc
jl
cli
mov
pop
repnz
ja
dec
in
fsubl
shl
xchg
and
les
cmp
paddusb
pop
sub
sbb
testb
adc
mov
mov
cwtl
test
push
inc
mov
jnp
cs
adc
sbb
lea
roll
gs
je
inc
lods
ds
lods
iret
jnp
jecxz
mov
sbb
ret
lret
pop
push
push
lock
lods
pop
jo
cmp
fdivs
jge
adc
stc
dec
mov
sub
dec
rclb
sbb
lods
pop
xchg
cmp
sar
pop
cmp
cld
pushf
dec
dec
or
sub
loop
int
pop
enter
test
xchg
pop
cmp
jp
inc
pop
sub
int
lret
rcr
dec
mov
adc
cltd
xchg
arpl
js
in
sub
cwtl
or
jae
out
loopne
cmp
inc
ljmp
cmpsb
loop
cmp
mov
test
jle
mov
rol
addr16
jno
divb
idivb
stos
cmp
and
cli
pusha
cmp
shll
mov
test
inc
sub
cmp
call
mov
cmp
pop
icebp
mov
out
shrb
lds
jae
loopne
movsl
mov
aam
ja
out
or
mov
sub
shl
stc
mov
int3
into
enter
pop
mov
insb
xor
inc
call
push
jmp
leave
add
loope
out
push
lds
mov
add
or
arpl
fcomip
pop
lcall
out
cltd
mov
ret
sub
int
in
js
xor
push
push
and
mov
pop
sub
mov
fs
jo
scas
ss
add
idiv
or
cli
cmp
sub
fs
xchg
push
cltd
pop
push
pop
xchg
sbb
xor
and
ret
xchg
arpl
nop
daa
inc
insl
vcvtps2dq
roll
push
ss
and
scas
daa
psllq
das
xchg
lea
xor
xor
lcall
or
aam
mov
cmp
pop
or
sub
jg
push
sub
in
es
inc
push
and
enter
mov
add
outsl
in
movsb
movsl
ds
jae
jae
rcl
sub
mov
out
daa
mov
xor
in
sbb
push
and
sub
push
inc
adcl
jl
push
push
mov
ljmp
push
cmp
rcrl
adc
inc
insb
push
lock
inc
mov
cwtl
sub
xchg
cmp
push
jl
xchg
test
stc
pusha
mov
adc
mov
mov
jmp
or
sub
adc
jle
mov
sarb
fcmovnb
addl
mov
int
arpl
and
insl
pop
scas
arpl
gs
inc
or
call
ret
cmp
add
or
je
and
jecxz
out
lds
dec
daa
dec
in
scas
pop
fmul
jl
add
cmp
sti
push
das
icebp
pop
push
sti
xchg
sbb
test
imul
imul
ss
test
inc
xchg
aam
std
ds
leave
dec
dec
xchg
stos
jge
mov
inc
add
mov
daa
and
cmp
rorl
lock
lds
hlt
xchg
aam
lcall
xchg
inc
jnp
lret
lcall
pop
mov
out
cmp
mov
outsb
out
dec
pop
jo
adc
inc
aaa
xchg
push
in
cwtl
add
scas
stos
bound
mov
sbb
xlat
leave
push
lds
push
and
shl
sbb
and
aas
mov
iret
shll
or
cmp
inc
mov
xchg
rol
dec
sub
jg
jae
js
push
lods
dec
loope
push
jp
push
rclb
in
adc
test
stos
cmp
xchg
in
into
imul
arpl
mov
sub
or
enter
test
test
adc
lahf
and
add
dec
repz
sub
cwtl
loopne
adc
adc
test
adc
push
and
subl
add
adc
dec
jmp
sub
jmp
sbb
divb
repz
in
push
std
fbld
inc
jecxz
stc
mov
jge
pop
mulb
jns
pop
dec
sub
pop
cmpsl
inc
ja
rep
lds
mov
xor
inc
cmp
test
xchg
ret
out
ret
aad
mov
inc
mov
jg
xor
sub
pusha
xor
hlt
add
nop
aaa
es
cmovno
dec
and
adc
cmpsb
jns
jl
jae
inc
data16
mov
lret
or
push
jge
lds
fisttps
cmc
pop
sub
sti
aaa
or
sub
nop
xor
aam
inc
jge
xorl
pop
cwtl
inc
pop
and
jbe
adc
adcl
or
lcall
and
mov
and
mov
roll
lahf
out
notl
mov
inc
cli
xor
mov
cs
inc
fiadds
xor
xchg
jne
cli
mov
xchg
jns
cmc
test
lock
pop
jb
and
jp
add
lods
push
pop
mov
mov
inc
and
fsubrl
cmp
cld
xchg
ror
leave
data16
mov
dec
jmp
or
inc
mov
jmp
push
inc
jns
mov
out
add
fwait
mov
jecxz
dec
cmpb
push
aam
sbb
push
cmp
sub
out
aad
push
movsb
or
xor
in
movl
xchg
pop
jo
jns
xchg
pushf
pop
fld1
mov
ds
imul
icebp
jbe
test
mov
add
rolb
xor
cmc
xor
and
scas
aam
in
jb
mov
in
shrb
nop
test
xor
into
cmpsw
loopne
subl
jb
push
into
mov
arpl
fadds
pop
jp
jb
lea
mov
rcr
xchg
out
mov
and
mov
dec
sti
mov
nopl
notl
test
push
mov
jmp
scas
jmp
inc
mov
pop
call
mov
cmp
leave
pop
insl
test
push
mov
jmp
inc
sub
fstpl
push
ret
jecxz
es
push
or
faddp
sbb
es
pusha
xor
dec
and
fcmovnbe
pop
cmp
daa
adc
lds
insl
push
jnp
cmp
and
les
mov
loop
pop
push
add
fists
popa
pop
shl
out
dec
rorl
repnz
sbb
lret
cmp
dec
cmp
inc
outsl
pop
lds
dec
xchg
gs
jp
push
sbb
add
sbb
and
push
mov
stos
test
dec
mov
mov
outsb
dec
int3
xor
mov
jl
addb
pop
imul
jp
scas
sub
push
mov
inc
sarl
xor
fdivl
adc
bound
jno
cwtl
lea
rorb
adc
fstps
push
ljmp
cwtl
push
test
test
and
aad
sbb
jne
lock
ds
add
xor
cmp
jo
dec
lds
fidivl
pmulhuw
dec
jne
or
sbbl
ds
sub
push
addr16
cmc
out
push
mov
fcoms
lea
aam
imul
ret
movsl
inc
push
and
loopne
mov
push
mov
jbe
mov
mov
sarb
and
addr16
mov
mov
jno
test
test
es
repz
or
dec
mov
jecxz
andl
test
jb
dec
ret
rolb
xchg
jnp
mov
pusha
lds
int
sti
sub
push
fistpll
mov
cmp
mov
mov
call
xchg
int
mov
jnp
shl
fwait
inc
cld
andb
mov
sysexit
mov
aad
dec
pop
sarb
push
pop
movsl
mov
jmp
pop
add
mov
xchg
cmp
jns
popa
fidivrl
xchg
mov
mov
or
sub
imul
fs
loopne
mov
testb
out
sub
cmp
push
in
cmp
out
js
dec
mov
out
or
push
cmpsb
push
pop
sbb
inc
popf
pop
pop
jge
subl
adc
jle
cld
or
adc
push
clc
out
xchg
pusha
inc
add
stc
xchg
mov
mov
out
pop
and
shll
lods
or
push
mov
aam
pop
fwait
leave
in
push
xor
fisubs
xchg
outsl
aaa
push
mov
cmc
and
jae
xchg
jle
and
daa
bound
mov
push
xor
aam
xor
shrb
mov
cwtl
out
mov
inc
sub
mulb
repnz
loop
mov
and
adc
faddl
ljmp
jnp
xchg
or
in
inc
and
adc
or
sbb
outsl
pop
mov
xor
mov
sbb
lret
dec
mov
push
icebp
ss
lcall
add
mov
xchg
mov
mov
ret
sbb
mov
xor
pop
in
pop
cvtps2pd
push
mov
or
mov
test
jno
add
push
popa
arpl
pop
push
cli
and
mov
and
jo
push
push
cmc
popf
fdivr
push
sub
and
or
stos
in
inc
jle
ret
icebp
fwait
test
aaa
inc
push
pop
push
sbb
sbb
xchg
xchg
push
stos
sub
fisttpl
adc
sub
insb
shll
cmpsl
jmp
outsb
push
mov
or
int3
xchg
xor
pusha
rclb
hlt
fdivrs
mov
into
movsb
popa
imul
stc
iret
xor
xchg
mov
sbb
mov
jbe
adc
and
sti
xchg
mov
lahf
jp
push
jmp
mov
adc
add
or
hlt
push
mov
fadd
jge
xchg
cmpsl
push
inc
pop
lods
outsb
shl
or
ljmp
rorl
out
mov
jno
sbb
nop
test
mov
dec
sub
mov
mov
outsb
gs
sbb
xchg
xchg
ds
cmp
sub
iret
pop
adc
inc
push
iret
inc
imul
push
gs
gs
mov
dec
mull
mov
cltd
bound
les
lock
mov
xor
add
movsb
jnp
lock
cmpsb
test
mov
mov
iret
push
std
subl
fsubrl
lea
loope
pop
adc
sub
sub
lcall
jae
fiadds
data16
add
inc
cs
aas
repnz
addr16
jle
iret
mov
jle
push
les
jns
pop
adc
dec
ja
adc
clc
dec
ss
jo
clc
aam
addb
aad
pop
cld
and
push
fcmovnu
or
cmpsb
mov
dec
sub
gs
mov
jecxz
mov
fisubrs
lea
inc
lgdtl
pop
ss
enter
stc
pop
gs
sub
jle
fimull
nop
push
lret
add
rcr
loopne
adc
cmp
and
pusha
or
push
mov
jge
stos
mov
sub
mov
xchg
scas
pop
je
push
or
ds
xor
ss
popa
push
push
orb
inc
sbb
ret
popf
or
aam
xor
mov
jns
cli
cmp
pop
inc
aad
or
adc
mov
xchg
test
shlb
bound
ficoml
shrb
mov
movsl
mov
cmc
fimuls
mov
and
std
popa
lret
clc
lods
sti
add
loop
sahf
js
loopne
fisttps
test
sub
cmpsl
sbb
icebp
push
xchg
sub
test
test
in
cmp
xchg
ljmp
pusha
jmp
aam
pushf
sahf
and
cmpsb
add
stos
rcrl
and
paddb
cwtl
ss
push
repz
adc
cmpsl
mov
lds
ss
movsl
dec
inc
jge
mov
mov
int3
pop
test
cmp
test
xchg
cmp
and
jge
cld
pop
clc
loop
cmp
movl
test
lock
lock
sbb
xchg
xor
stc
sub
mov
in
sub
adc
movsl
js
cmp
and
test
xchg
or
inc
loope
insb
mov
popa
xor
test
in
xor
cmp
or
fwait
jno
push
nop
pop
cmp
adc
inc
nop
mov
mov
pop
loopne
icebp
mov
lret
xchg
add
je
lea
stos
into
or
loopne
and
push
and
jae
adc
or
jecxz
jns
fisubs
pop
xchg
jnp
mov
jb
out
ret
xor
popa
cld
push
adc
cmpsb
jl
push
testb
les
and
divl
mov
testl
mov
add
cli
fnstenv
lret
jo
loopne
xchg
iret
in
jno
add
bound
loopne
jmp
stos
pop
ljmp
or
mov
adc
or
push
xchg
ja
push
xchg
int3
cmp
aad
xor
xchg
lahf
mov
sub
loop
inc
push
dec
xchg
sbb
mov
ud2
insl
out
scas
fld
mov
dec
fldt
adc
sub
mov
jne
aam
shll
imul
mov
push
out
inc
insl
push
ljmp
pop
std
mov
insl
xor
push
pushf
push
mov
and
jns
adc
jno
outsl
pop
mov
ljmp
lock
ficompl
je
sub
rcrb
outsl
outsb
out
xchg
push
lds
fnstcw
enter
mov
xchg
or
fidivs
mov
les
daa
jne
inc
out
fadd
cmp
fdivs
sub
out
loopne
lret
push
stos
pop
sbb
scas
dec
cmp
pop
daa
cmp
outsl
mov
insb
xchg
imul
jg
call
xor
lds
sub
js
add
imul
jp
jle
xchg
pop
cmp
pop
std
push
fwait
jns
repnz
push
mov
mov
and
inc
jmp
dec
cmp
arpl
sub
cmp
bound
push
std
test
mov
push
scas
xor
pop
pop
dec
int
scas
insb
lock
or
push
adc
dec
jmp
in
dec
push
bswap
dec
hlt
lock
cld
pop
or
mov
repnz
and
negl
jne
cmpsb
sti
fwait
add
pop
fdivrp
push
je
jns
jp
dec
jb
mov
cmp
jmp
push
inc
sbb
cld
xor
sarl
xchg
inc
dec
xor
mov
adc
popa
mov
iret
adc
dec
push
mov
mov
icebp
xchg
xchg
mov
or
or
dec
es
jo
pop
xor
xor
mov
rcr
stos
lods
mov
cld
subl
cmpsb
xor
ror
pusha
jo
dec
sbb
pop
fistl
fisttpll
mov
jo
scas
fwait
mov
mov
scas
inc
mov
inc
das
stos
mov
bound
xchg
mov
xchg
adc
push
fndisi(8087
insl
movsb
mov
adc
mov
mov
sbb
cmp
shr
enter
int3
inc
ja
data16
mov
lret
push
xchg
popf
out
mov
pop
leave
xlat
dec
jns
fwait
xchg
iret
adc
std
sbb
loope
icebp
lods
or
and
scas
or
fucom
cli
add
mov
adc
fcomp
dec
xchg
push
bound
and
out
mov
cmc
sti
xchg
hlt
js
fs
fnstenv
je
add
push
and
mov
mov
sbb
sti
xchg
je
pop
and
dec
loope
mov
outsb
mov
mov
insb
cltd
mov
and
stos
outsb
lahf
int
scas
lods
mov
mov
bound
stc
add
mov
test
in
lret
repz
jb
mov
add
iret
rol
xor
add
xor
icebp
lret
test
mov
movsb
in
push
int3
adc
add
aaa
insb
lret
cmp
inc
xchg
in
nop
mov
sti
faddl
lea
dec
cmp
cmp
cwtl
mov
xchg
dec
xchg
popa
popf
pop
xchg
andl
iret
dec
shlb
sar
mov
mov
scas
sti
jne
clc
cltd
mov
xor
mov
movsb
mov
lods
icebp
mov
push
popa
lahf
add
fadd
sbb
lds
dec
data16
inc
mov
adc
cmc
adc
ja
lret
fisubl
and
push
repnz
sbb
jle
and
scas
insb
gs
in
push
lods
xchg
mov
cmpsb
and
mov
xchg
test
mov
inc
push
outsb
add
mov
mov
idivb
xchg
mov
pop
jle
and
imul
pop
cwtl
adc
sub
sar
ret
aam
sbb
push
fbld
inc
je
pushf
mov
ss
sub
std
push
in
push
dec
testl
mov
push
jo
inc
int3
sub
mov
cmp
call
adc
fisttpll
outsl
andb
jg
jae
aam
add
dec
add
leave
inc
add
dec
dec
lret
mov
add
fimuls
dec
mov
xor
mov
int3
pusha
out
into
pusha
stos
inc
push
test
sub
outsb
mov
arpl
jno
shlb
cmp
sbb
into
push
sbb
sti
ljmp
mov
xor
xor
inc
ret
pop
xor
or
cwtl
fdivs
xor
add
cvtps2pd
sub
add
jmp
adc
aaa
add
mov
cwtl
mov
gs
inc
aas
jno
and
jne
inc
out
sub
fs
fmull
gs
add
imul
addb
test
into
inc
ret
adc
pop
popa
lods
push
ret
out
sub
inc
pushf
and
push
outsl
jbe
testb
and
stc
fdivrs
add
scas
hlt
je
int3
shll
cmp
insb
test
shr
sbb
mov
sub
lods
adc
test
xchg
add
mov
mov
lods
ja
leave
xchg
lock
and
mov
mov
iret
dec
and
mov
jge
sub
data16
testl
mov
lods
inc
ret
sub
mov
lret
mov
and
clc
xor
dec
and
das
fisubrl
cli
fwait
mov
lret
scas
dec
mov
adc
sub
repz
fst
xor
pop
and
scas
mov
scas
mov
rclb
in
cmp
pop
enter
and
jne
dec
dec
movsb
or
or
inc
ja
xor
push
jle
inc
test
cli
rolb
in
stos
test
fwait
adc
jmp
push
dec
push
shl
fcompl
scas
mov
outsb
add
jmp
lds
xor
cltd
fwait
fwait
outsl
int3
call
pop
stos
out
stc
jo
push
fistl
jb
pop
aas
fcmovbe
ret
addl
fimuls
movl
mov
sub
fimull
add
jae
cmp
pop
pop
xchg
movsl
pop
cmp
ret
loopne
ret
cmp
push
sub
in
or
cmpsb
jno
sub
push
ljmp
popf
out
mov
adc
sub
movsl
sbb
add
aaa
sub
and
adc
pop
jnp
aad
mov
dec
sti
lret
mov
stos
icebp
clc
sarb
xchg
sub
ss
iret
jns
ss
daa
imul
add
mov
and
bound
jge
jo
stc
and
sbbl
pop
scas
lea
std
popf
je
jo
lret
ja
mov
mov
ret
dec
fcmovu
adc
cmp
fcomp
cmp
dec
pop
mov
scas
add
sub
loopne
gs
add
in
sbbl
and
subb
mov
cmp
jno
ret
outsl
mov
hlt
add
add
jnp
int
and
pop
cmp
ret
fstp
push
fisubs
and
mov
and
xchg
test
jnp
xchg
ljmp
jg
sti
fsts
jecxz
pop
mov
jns
inc
fistps
out
xchg
jg
aad
test
jecxz
in
pop
cs
adc
mov
enter
fisttpll
cvttps2pi
xchg
inc
int
dec
sar
out
mov
inc
loop
cltd
mov
int
loope
js
fwait
icebp
fsub
mov
icebp
inc
mov
push
cli
dec
lods
and
incb
sbb
pop
fs
int3
and
test
push
jbe
push
fwait
test
pushf
cmp
dec
aad
mov
sub
aad
out
cmp
cmp
inc
sub
fsubp
rclb
xchg
cmp
sbb
sub
outsb
das
cs
mov
mov
fidivrs
add
dec
lahf
cmp
outsb
rclb
pop
xchg
push
icebp
xor
dec
jnp
push
mov
inc
mov
fldl
ret
pop
mull
int
and
pop
push
mov
imul
lret
inc
xchg
jns
stc
jbe
inc
repz
and
arpl
cld
out
and
imul
add
and
dec
sub
xchg
jle
sub
sub
push
mov
das
fisttpll
cld
push
mov
scas
push
adc
jl
dec
lods
insl
loope
xchg
mov
sub
add
jns
cmp
popa
enter
dec
xor
push
jnp
add
pop
adc
push
lea
daa
jmp
iret
jg
push
mov
push
sub
xor
mov
push
into
cmp
mov
lock
dec
sahf
ret
adc
push
inc
gs
leave
adc
or
dec
add
mov
pusha
pop
dec
ds
jp
iret
jo
pop
sbb
xchg
out
pop
scas
hlt
lods
imul
ror
fwait
mov
in
out
dec
and
mov
stc
cmc
int3
shll
and
inc
mov
inc
leave
sub
push
and
mov
loop
shl
mov
outsb
fsubs
in
test
add
subb
jo
dec
cmp
into
outsb
dec
leave
inc
mov
fucomip
sti
int3
sub
dec
outsb
iret
lods
out
jg
imul
aas
aam
xor
dec
inc
fidivs
rol
inc
mov
mov
sub
push
lods
inc
cmpsb
sbb
cli
bound
mov
dec
mov
mov
mov
shlb
mov
dec
add
xchg
and
dec
mov
cli
es
mov
in
cmp
dec
aas
jg
test
add
push
ds
cli
adc
lahf
pop
cmpsb
xor
js
push
shlb
mov
pop
mov
cmp
int
fucomi
fsub
jmp
push
aam
idivb
pop
sbb
pusha
sub
push
sub
outsl
shll
add
sar
or
test
or
mov
out
pop
popa
xchg
mov
or
daa
pop
push
aas
lcall
in
adcl
lret
loope
push
push
out
shl
roll
popf
add
push
mov
lret
sbb
fxch
lret
push
lea
movsb
adc
xchg
mov
jp
push
fcoml
mov
insb
and
pushf
inc
mov
push
out
mov
and
shll
out
mov
outsl
dec
sub
mov
bound
or
mov
movsb
inc
insl
jle
sub
aam
sbb
xchg
mov
imul
push
mov
aaa
js
icebp
adc
adc
sahf
clc
ljmp
sbb
mov
mov
push
or
push
rcll
cmpsb
fcomps
sub
cltd
jo
push
cmp
popa
jnp
inc
jnp
fucomi
icebp
dec
and
stos
fldl
xchg
jmp
int3
addr16
outsb
jb
mov
dec
addr16
icebp
inc
icebp
jmp
dec
arpl
idivl
mov
adc
xchg
cmpsl
mov
mov
cmp
ret
add
sbbb
xor
cmpb
jle
lds
int
imul
data16
mov
mov
fsubrp
push
outsb
push
repnz
xchg
cmp
dec
lds
mov
and
scas
mov
inc
clc
bound
jae
into
test
sub
xchg
pop
sbb
shlb
dec
loope
iret
push
int3
pop
sub
push
jp
xlat
sbb
rcll
mov
mov
leave
fldenv
cwtl
mov
jmp
pop
jne
shrl
pop
js
aaa
sbb
add
stc
subl
cmp
xchg
cld
push
hlt
mov
dec
cmpsl
popa
cmp
stos
mov
or
add
lcall
inc
mov
call
repnz
inc
subl
int
call
cwtl
pushf
shrl
pop
in
and
push
xchg
mov
cltd
jmp
imul
xchg
call
push
dec
hlt
xchg
mov
aam
dec
xchg
in
inc
test
les
jecxz
cltd
jmp
xor
in
cmp
and
fs
subl
out
sar
rcrl
pop
movsb
sbb
push
cltd
inc
cli
fidivl
je
fldcw
outsl
push
mov
cld
pop
daa
fs
icebp
outsl
js
int3
lret
mov
jno
xor
shlb
dec
pop
xchg
lret
fisubl
mov
rclb
vpmacswd
xchg
mov
adc
xor
push
repnz
xor
subb
js
sub
cvtps2pi
sbb
cmc
shl
push
ret
and
mov
ret
xor
pop
sbb
xlat
mov
sbb
loope
mov
mov
push
or
inc
push
cmp
psubw
mul
imul
leave
mov
lock
sbb
push
mov
mov
mov
jl
sbb
sub
xchg
ret
mov
and
and
dec
xchg
jns
call
daa
ljmp
cld
xor
pop
sub
pop
dec
imul
mov
pop
aam
sbb
je
inc
neg
push
xchg
mov
xor
inc
mov
cmpsb
nop
out
jno
add
and
mov
mov
or
fidivl
mov
daa
and
out
das
mov
hlt
cs
punpckhdq
xchg
into
into
fistpll
mov
cmp
aad
inc
xchg
xor
cmc
cwtl
jns
jp
std
cmc
add
xor
adc
dec
das
ror
xor
mov
add
sub
out
fiadds
js
jo
dec
sub
inc
push
and
mov
pop
pop
pop
dec
xchg
icebp
fmul
jns
test
mov
pop
flds
dec
inc
pop
sub
adc
lcall
jnp
sahf
inc
push
dec
stos
rcr
jbe
in
inc
xor
movsb
in
aam
ret
xor
lret
mov
in
in
fisttps
cmpsl
pop
mov
pusha
fwait
sbb
xor
mov
pop
adc
in
dec
lcall
mov
test
out
fidivrl
pop
xor
mov
cs
lds
leave
scas
cmc
lahf
imul
das
jmp
aad
xor
fsubr
fsub
inc
mov
adc
and
ss
adc
aam
ss
inc
lods
mov
fisubrl
aad
mov
xchg
sub
xchg
inc
mov
dec
jns
lds
cmc
out
dec
add
push
and
jg
clc
mov
arpl
lahf
outsl
lock
hlt
icebp
out
xchg
inc
mov
cmp
mov
cmp
pop
stos
outsb
mov
jmp
call
insb
aad
gs
or
mov
jb
insl
out
push
dec
xchg
roll
push
push
leave
add
inc
sub
in
mov
mov
pop
pop
jae
loop
dec
mov
push
mov
fcomps
fsubl
ret
enter
xchg
cmp
push
call
sub
mov
in
arpl
inc
int3
mov
sub
stc
mov
cmp
mov
in
outsl
movsl
insb
jo
fnclex
ja
lret
mov
test
int
or
mov
bound
push
xor
sbb
fimull
jmp
sub
jns
add
xor
xorb
push
xchg
dec
ret
sbb
enter
pop
and
adc
jno
sub
xor
imul
jg
mov
jmp
fdiv
orl
aas
imul
cmp
xchg
xlat
fxch
push
add
lahf
inc
dec
fisubrs
pop
and
fdivl
rcl
mov
adc
mov
or
or
jne
es
xadd
adc
xchg
push
in
sahf
cmp
mov
pop
nop
xchg
mov
mov
dec
repz
aaa
and
into
push
les
sbb
shlb
popa
push
mov
cmp
lds
orb
test
push
adc
pop
and
rorl
out
sub
popa
in
pop
rclb
xchg
rcr
jb
subb
lds
fsqrt
scas
mov
inc
aas
out
jecxz
sub
movsb
jns
idivb
shlb
and
shll
push
adc
push
jl
movsb
fs
iret
cld
pop
xchg
addr16
mov
cld
in
lock
sub
mov
jecxz
xchg
loopne
loopne
out
mov
lahf
adc
pushf
or
push
add
inc
outsb
mov
movsl
inc
mov
cmp
out
pop
orl
mov
and
jle
dec
cld
sub
das
push
inc
aam
pop
push
pop
dec
aas
mov
or
pop
sub
xor
mov
mov
cmp
fistl
sti
fidivs
push
mov
popf
cmp
das
inc
pop
inc
inc
das
adc
in
inc
popa
mov
inc
imul
jns
stos
mov
and
xor
xchg
aad
nop
push
cmp
add
sbb
pop
jne
jo
lods
mov
mov
mov
jmp
mov
add
jmp
add
scas
dec
pop
fcoms
outsb
mov
decl
pop
mov
cmp
jnp
dec
xor
or
hlt
xchg
lea
mov
jae
js
test
ja
add
push
sbb
add
ret
push
adc
mov
movsb
sub
jmp
pusha
push
lea
rcrb
or
inc
test
dec
sub
stc
push
pop
or
cmp
push
pop
orl
ret
shlb
aam
mov
clc
mov
xor
or
lock
lods
jnp
pop
cli
call
push
les
shrl
outsb
or
inc
lahf
xor
mov
xlat
repnz
cmp
mov
jge
roll
mov
pop
aad
icebp
pop
stos
add
pushf
or
jp
add
xchg
cmp
insb
jmp
and
sub
mov
movsb
or
roll
incb
push
outsb
rcll
sti
mov
in
sbb
lcall
and
cmp
cmp
shlb
notl
jne
leave
dec
out
xor
xchg
jl
aas
dec
arpl
out
jg
pop
movsl
push
cmp
cs
in
pushf
pop
inc
out
xchg
add
cmpsb
xlat
dec
lret
ror
inc
add
pop
lret
xchg
push
inc
jmp
decb
imul
cmp
addr16
outsl
dec
xor
mov
xor
clc
dec
loop
sbb
fiaddl
or
push
sbb
notl
cwtl
into
xor
fwait
loopne
push
xor
jl
lock
jne
shrb
jp
dec
shlb
rcll
xchg
adc
cmp
in
sbb
xor
add
nopl
cmp
testl
and
mov
cmp
push
mov
mov
daa
loopne
jae
push
sar
adc
sbb
xor
cmpsb
and
lock
and
mov
cmc
xor
jg
xchg
iret
int3
aam
jl
push
stos
sub
jle
add
or
fisubrs
mov
daa
adc
into
lock
fimuls
inc
ss
cmp
addb
call
push
fdivrl
mov
popa
mov
push
mov
lock
push
push
xchg
sarb
mov
out
insb
loop
xchg
lock
aad
or
jbe
jl
cmc
cmp
fildl
sbb
or
jl
icebp
mov
push
rolb
pop
hlt
stos
push
loopew
cmp
icebp
add
dec
inc
inc
or
xor
inc
fimuls
cmpsb
jle
push
int
sub
jae
in
mov
mov
testl
jno
pop
inc
in
sbb
in
sti
stos
xor
cmp
inc
lock
ljmp
xchg
in
push
loope
orb
cld
subb
xchg
rolb
xor
adc
jmp
push
ds
out
xchg
or
and
rorl
insb
mov
xchg
imul
mov
mov
or
scas
mov
adc
out
cmpsl
cmp
in
sub
pop
aas
or
inc
jns
das
mov
cltd
jl
cmp
das
mov
stos
clc
out
xchg
mov
fwait
aas
sbb
and
pop
ds
jbe
mov
mov
xchg
sahf
fidivl
loop
or
pop
outsl
fwait
mov
mov
dec
lcall
inc
aad
dec
shlb
popf
and
imul
dec
repnz
int
imul
pop
incb
dec
push
mov
adc
pop
or
fcoms
xchg
stos
inc
mov
or
pushf
jg
out
cmp
cmp
pop
movsb
cmpsl
sbbl
xchg
shlb
out
xchg
jnp
fistl
adc
adc
loope
sub
adc
jecxz
or
stc
xchg
jbe
cmc
jecxz
jae
lea
lods
test
movsb
loop
dec
lods
sub
push
sub
dec
push
jecxz
bound
push
push
out
ret
xlat
or
mov
lcall
cmp
movsl
push
push
add
call
or
pop
cmp
xchg
stos
fldcw
shrl
xchg
ret
add
loopne
scas
xor
sarb
inc
cmp
loop
inc
xchg
mov
lret
stc
shll
ss
mov
push
cld
sbb
frstor
sbb
fwait
mov
repnz
jecxz
mov
loop
sbb
xchg
jo
mov
ret
jns
test
enter
jae
sub
jbe
out
aaa
mov
mov
es
mov
adc
inc
mov
pop
inc
pop
mov
loop
cmp
in
std
adc
fcomp
scas
push
mov
and
loope
arpl
sbb
es
mov
cmp
pop
lret
and
inc
xlat
repz
pop
xor
pop
sbb
jg
shll
enter
imul
out
or
mov
xor
mov
lock
adc
jp
repz
test
add
adc
adc
jmp
test
xor
cmpsl
cs
sub
mov
ret
dec
dec
aam
mov
shll
mov
xor
and
icebp
push
pop
inc
hlt
out
cmp
push
inc
sbb
movsb
cmp
push
push
pop
int
mov
add
incb
lods
fnstcw
push
out
dec
int
jne
scas
mov
and
int3
add
mov
inc
pop
sti
stc
daa
xchg
add
xor
xchg
daa
cltd
push
push
sbb
js
xor
sti
and
loope
iret
cltd
mov
adc
arpl
mov
sub
jmp
or
das
xlat
pusha
lret
insl
cmp
mov
dec
shrb
popf
lock
mov
jmp
sbb
shr
in
cmpsb
movsl
jne
dec
xchg
xor
sbb
frstor
scas
dec
mov
fiaddl
gs
pushf
xchg
pop
mov
test
movsb
cmp
mov
adc
mov
daa
insb
mov
les
and
cli
cli
movsb
adc
pop
sub
inc
cltd
and
rcl
repnz
sbbb
sub
dec
lcall
in
and
shrl
sub
pop
mov
subl
sbbb
adc
dec
dec
hlt
pop
xchg
cmpsl
inc
mov
cltd
mov
jmp
xchg
les
das
add
dec
xor
adc
divb
or
xchg
sti
in
test
dec
adc
andb
icebp
int3
push
call
mov
enter
xlat
fdivl
cmp
xchg
jne
pop
jmp
cmp
sbb
shr
test
add
pusha
loopne
jg,pn
enter
fsqrt
lahf
push
loop
sahf
xchg
push
inc
jbe
inc
jbe
mov
pop
sbb
pop
sub
mov
into
cmpsb
imul
or
inc
mov
mov
xchg
jae
test
inc
adc
lret
or
push
cmp
in
ror
sbb
mov
hlt
call
lret
mov
mov
les
jge
jl
fisttpl
movsb
inc
mov
or
lock
mov
pop
leave
ret
or
cmpsb
js
cmpsl
ret
dec
mov
andb
push
mov
movsl
push
adc
pop
cs
add
bound
inc
iret
fimuls
mov
pop
sub
insb
lret
sbb
pop
cmp
sarb
mov
cmp
ljmp
pop
mov
je
in
cli
xor
cmp
pop
into
icebp
mov
fmull
pop
push
add
rcrl
nop
xor
push
xchg
stc
pushf
pop
jl
adc
rcrl
loop
pop
in
lret
fwait
sbb
pop
fwait
add
or
add
stos
dec
xchg
mov
gs
pop
fwait
mov
movsb
mov
xor
adc
sbb
gs
mov
cmpsl
in
pop
ret
ljmp
stc
xchg
sar
jp
sub
jnp
xchg
int
mov
inc
adc
adc
or
test
imul
mov
jnp
dec
popa
cmp
sbb
mov
xor
mov
pop
aad
outsb
cmp
dec
sub
jl
mov
bound
mov
lods
sub
xlat
push
js
fsubl
push
lahf
push
jl
fsubr
adc
mov
xchg
jp
setb
ja
cmp
xor
xor
sub
lcall
popf
mov
and
push
sub
inc
inc
sub
xor
cmp
icebp
loop
insl
inc
dec
jno
sar
pop
clc
dec
mov
pop
rolb
loopne
inc
in
push
scas
iret
mov
das
push
xchg
out
mov
jle
inc
dec
movl
test
in
push
pop
jo
das
mov
out
int3
mov
sbb
fs
data16
dec
sub
sub
stc
aaa
adc
mov
add
push
insb
mov
movsb
pusha
xlat
jnp
fsubrl
xor
cmpsl
mov
imul
inc
push
arpl
and
gs
std
ret
push
cmp
mov
cmpl
or
repnz
test
xlat
insb
rorl
rclb
imul
in
xor
sub
shll
or
dec
cmp
mov
mov
mov
cld
cmc
inc
mov
je
xor
out
sbb
xchg
test
call
lds
dec
das
mov
adc
mov
push
jo
jle
cmp
and
ds
jno
subl
mov
fsubrs
pop
jge
inc
mov
mov
sbb
out
xchg
dec
lds
arpl
xlat
shrl
sub
push
mov
push
xorl
inc
fidivs
jl
in
addb
mov
dec
aam
dec
cwtl
push
call
adc
lcall
xor
mov
cmp
dec
cmc
jb
ficoml
in
lcall
add
pop
inc
cmpsl
adc
lahf
jmp
dec
add
xor
into
xor
mov
dec
leave
imul
ljmp
xchg
imul
int3
adc
or
pop
add
in
cld
dec
xchg
shll
nop
mov
sub
mov
mov
adc
mov
mov
pop
scas
mov
imul
xchg
into
mov
inc
mov
aam
nop
xchg
rclb
call
xchg
mov
mov
movsl
lcall
out
adc
jmp
test
lock
orl
pop
les
jnp
aas
stos
test
dec
add
mov
push
jne
out
das
inc
stos
lods
andb
stos
and
fnstsw
idivb
test
mov
sbb
inc
cmpsb
xor
push
mov
inc
repnz
mov
cmp
stos
cmp
jno
mov
add
cmp
bound
pop
sub
xchg
xor
data16
mov
ret
test
fildl
popa
inc
cmp
pop
mov
addl
mov
cmp
cmpsb
ret
into
add
insl
add
cmpsl
or
test
ret
repz
adc
mov
fists
adc
jae
lock
hlt
mov
rcrl
mov
mov
sub
mov
rep
mov
mov
rol
push
xchg
sti
into
xchg
addr16
add
sub
xorb
rorl
pop
push
inc
xor
inc
mov
scas
inc
outsl
divb
test
leave
pop
scas
sarl
rol
test
jecxz
test
mov
xchg
loope
roll
test
or
mov
aaa
fcmovu
xchg
test
xchg
loope
inc
icebp
in
or
ss
insl
cwtl
adc
cmpsb
xchg
jmp
mov
inc
xchg
pushf
std
xor
inc
stos
push
popf
sti
cmpsb
fsubl
repz
fiadds
mov
jle
mov
mov
sbb
scas
mov
dec
push
repnz
jae
xchg
stos
repz
jl
pop
lea
repz
in
jne
popf
jno
mov
in
mov
add
jae
fsubl
adc
xchg
out
je
jg
add
jg
fstpl
add
xchg
jge
jnp
add
rcrb
push
stos
sbb
adc
in
or
cli
inc
jo
ds
mov
dec
and
push
outsl
mov
jns
ret
sahf
push
adc
mov
dec
jbe
stos
icebp
push
ja
stos
andl
scas
lods
sub
cmc
cltd
fsub
mov
pop
jae
mov
test
in
dec
ja
addb
pop
imul
mov
sbb
je
cmc
push
std
mov
outsb
test
add
or
push
mov
add
cmp
inc
inc
dec
fiaddl
imull
dec
pop
aaa
xor
pop
xchg
xchg
and
inc
dec
cli
aas
lcall
rolb
mov
pop
mov
jnp
stos
mov
fadds
push
pop
int
fimull
popa
popa
test
fstl
cmp
add
loopne
adc
pop
roll
mov
jge
push
jecxz
or
sbb
inc
stos
inc
cli
and
popf
dec
fmulp
popf
outsb
out
test
fwait
adc
adc
mov
pop
test
pusha
aam
popf
xchg
mov
addr16
mov
lods
out
mov
jle
sbb
in
loope
call
mov
gs
xlat
lock
lock
dec
push
hlt
adc
dec
jne
insb
jbe
cltd
loopne
sub
mov
pop
adc
mov
mov
fdivr
jp
jl
dec
xor
add
fmuls
sub
cmpsl
aam
outsl
dec
shrb
cmpsb
jg
dec
lea
xor
nop
addl
xchg
je
das
sar
scas
arpl
mov
out
out
mov
lea
mov
mov
lea
cmpsl
loop
xor
jmp
sub
dec
lahf
adc
cmp
lret
call
pop
mov
mov
into
repz
fnstcw
or
test
dec
xchg
fdivl
jb
pop
int
scas
shl
cmp
pop
xor
imul
push
inc
dec
aas
shrb
xor
push
in
jnp
and
es
xchg
push
push
push
and
and
add
scas
push
and
mov
xor
and
cs
pop
xorb
pop
pushf
dec
jl
pop
xchg
xchg
nop
cmp
inc
pushf
out
pop
jge
xchg
aas
cmc
pop
inc
je
jecxz
cmp
lret
cmp
fmuls
cvtpi2ps
jge
popa
and
jg
insb
mov
inc
xchg
xor
fmuls
hlt
rolb
rcrb
test
sbb
sub
fsubrl
aad
jmp
es
lods
xlat
daa
inc
in
jo
mov
jno
loop
jp
ljmp
jo
xor
xchg
fistl
pusha
mov
mov
les
enter
lahf
pushl
fwait
sub
mov
sbb
das
sub
sbb
add
mov
data16
jg
jmp
les
cmp
iret
mov
mov
fwait
or
ret
xchg
cwtl
imul
pop
cs
sbb
jl
sbb
mov
pusha
jge
ja
mov
sti
add
mov
mov
mov
push
movsl
mov
sbb
out
push
jle
stos
jecxz
and
ja
mov
jge
push
in
or
dec
xchg
hlt
fnstcw
aaa
cmp
inc
xchg
cmp
outsb
inc
adc
jge
xor
call
pop
in
jg
cltd
pop
xor
adc
insb
insb
imul
pop
lods
push
inc
clc
pop
int3
push
and
cmp
mov
sub
js
stc
xchg
enter
ja
sub
jecxz
fmuls
mov
inc
mov
sbb
stc
jge
sbb
jb
push
xchg
push
sub
jno
in
mov
mov
mov
jo
sahf
mov
adc
xchg
cmp
sub
icebp
and
dec
cmp
out
jmp
int3
scas
in
clc
scas
mov
icebp
test
aaa
pusha
insl
stos
or
lods
mov
sti
ljmp
fs
pop
fdivrl
or
in
int3
pop
adc
rcll
jge
cli
aaa
lods
and
and
add
push
mov
adc
cld
jmp
add
push
push
aaa
jl
sbb
je
inc
mov
adc
hlt
lds
and
nop
cmp
psubsb
pop
popa
je
add
mov
push
push
cmp
imul
nop
gs
mov
dec
jnp
jecxz
adc
bnd
and
rorl
xchg
cmpsl
push
xor
shll
dec
negl
or
mov
dec
cmp
pop
xchg
sbb
outsl
test
lea
add
mov
or
push
sarl
int3
aam
inc
test
leave
adc
fucom
orl
in
mov
pop
sub
xchg
loope
dec
pop
and
ss
cmp
mov
push
cmpl
sti
cmp
mov
push
pop
adc
data16
ss
insl
test
ljmp
or
or
ja
into
dec
sbb
icebp
mov
into
push
xchg
sub
dec
repnz
cs
xchg
add
repnz
inc
test
add
pop
cmpsl
in
sbb
cmc
jae
ljmp
mov
push
loop
loope
int
xor
incl
int3
jb
out
lods
jg
xor
aam
mov
jbe
mulb
add
test
and
dec
ds
jecxz
add
sbbl
bound
rolb
fnstcw
aaa
into
mov
pushf
sbb
scas
mov
or
popf
mov
out
iret
ret
sti
add
sti
add
push
shll
aaa
sbb
call
xchg
cmpsl
out
inc
cmp
adc
mov
push
mov
sarb
in
int
xchg
jmp
xchg
dec
cwtl
fstl
fadds
dec
fiaddl
insb
mov
daa
test
mov
popf
je
daa
sahf
cltd
mov
fs
and
shll
mov
mov
ret
ror
iret
add
fwait
xlat
and
nop
scas
cwtl
and
sbb
movsl
sti
icebp
mov
and
or
fdivr
or
jbe
or
repz
icebp
jle
xor
nop
add
jns
das
outsb
outsl
sarl
jns
aaa
jmp
push
or
movsb
cltd
and
adc
int
in
mov
cmpsb
out
xor
repnz
rcrl
jmp
stos
cltd
fs
push
addr16
out
xchg
fs
pop
push
mov
sub
jae
inc
xchg
fisttpll
cmp
test
jle
fnsave
ljmp
or
or
outsb
pop
out
dec
mov
sti
add
cmp
movsl
xor
pop
or
mov
mov
lds
push
ljmp
xchg
out
jecxz
mov
rolb
cmp
movsb
adc
mov
jns
js
push
add
dec
aas
xor
mov
repnz
insl
sbb
cwtl
jb
adc
dec
inc
pop
jb
or
stos
inc
cmpsb
sbb
scas
cmpsb
sbb
cltd
push
add
cmp
xor
out
mov
sub
pusha
data16
inc
jno
out
mov
aad
xchg
or
dec
jns
shlb
stos
jne
test
add
loopne
scas
movsl
sti
fadd
test
push
xchg
xchg
dec
xchg
lds
arpl
aaa
movsl
stc
sbbb
es
pop
cmp
inc
sbb
lret
mov
inc
jge
push
mov
jno
add
pop
cmp
adc
xlat
inc
mov
jmp
jo
sub
cltd
mov
ds
and
xchg
cmp
adc
int3
aam
movsb
adc
lods
in
push
dec
adc
mov
cwtl
mov
nop
int3
das
enter
aam
mov
iret
sbb
push
pop
jmp
cmp
cld
sti
imul
push
shl
lods
adc
dec
stc
cmpsb
xchg
push
in
jne
dec
pop
dec
or
jnp
outsb
cmp
lret
fwait
and
je
sub
out
imul
aaa
inc
out
mov
sbb
loop
cmp
xchg
pop
and
and
cmpl
lock
mov
daa
movsl
enter
aad
lods
or
push
in
jne
jnp
fwait
cmp
xor
lds
repz
jge
or
in
into
xor
cmp
xchg
inc
test
and
jmp
in
sbb
ljmp
out
loopne
add
mov
fisttps
jl
movsl
dec
subb
mov
push
inc
mov
ljmp
cli
cmp
fnsave
ss
sbb
push
xor
xchg
mov
adc
and
popa
inc
lahf
xor
sbb
mov
xor
mov
mov
jo
mov
lcall
fwait
jae
aas
adc
cmp
rcrl
pop
inc
mov
pusha
add
add
jmp
cld
jp
pop
cmp
pop
movb
xchg
dec
ja
mov
cmpsb
icebp
inc
adc
pusha
scas
jne
gs
jb
dec
adc
loop
test
and
call
jle
sub
scas
sbb
pop
faddl
lret
lret
jmp
pop
sbb
mov
lock
xchg
jecxz
and
xchg
inc
mov
dec
adc
out
cwtl
loop
ljmp
sbb
pop
out
mov
adc
cmpsb
adc
loop
jle
and
mov
enter
rclb
sarl
nop
arpl
loop
mov
mov
adc
int3
cmp
push
sub
add
push
and
jmp
adc
out
and
andl
dec
mov
add
call
jnp
push
push
shl
sbb
jnp
int
ret
adc
sub
jb
mov
or
cmp
jno
and
push
ficoml
cmp
mov
test
mov
push
cmp
arpl
adc
xchg
and
popa
dec
andl
fwait
arpl
mov
pop
lods
xorl
je
mov
cmp
dec
and
mov
jle
stos
andb
inc
js
inc
adc
mov
cld
lret
jne,pn
pop
insl
cmpsb
loop
dec
adcb
ds
cli
push
mov
dec
out
test
jbe
loopne
push
add
push
data16
lds
int
push
mov
notb
jecxz
loopne
pop
scas
rclb
leave
jge
imul
fcmove
dec
je
and
shll
or
mov
push
in
les
bound
icebp
mov
xchg
pop
mov
sti
add
xor
xor
ret
xor
xor
sarl
mov
bound
or
mov
sbb
and
add
xchg
sbb
push
fcmovne
cli
mov
repz
fwait
in
pusha
and
add
fildll
mov
xor
jle
cmp
out
push
xorb
mov
xor
push
adc
push
repnz
sub
mov
jne
jg
leave
mov
ret
mov
push
inc
lcall
jae
mov
pop
push
fidivl
clc
ds
adc
es
pusha
or
fs
rol
enter
leave
push
pop
movsl
xchg
mov
popa
sub
xchg
sbb
ret
insb
mov
imul
pop
pushf
leave
mov
loopne
out
adc
out
pop
jecxz
rcr
adc
dec
push
mov
in
nop
jb
scas
jge
or
scas
sbb
pop
in
cmpb
push
cwtl
sub
add
fsubs
sbb
ret
xor
mov
outsl
mov
jge
push
ret
fwait
pop
inc
loope
inc
and
mov
mov
and
pop
add
ds
and
jbe,pt
adc
inc
mov
enter
pop
sbb
fildll
ret
mov
mov
push
jmp
loopne
pushf
test
mov
pop
rorl
push
xor
mov
push
push
xchg
stos
dec
mov
or
mov
cmp
into
or
mov
adc
xchg
imul
mov
ror
stos
js
xor
movsl
or
mov
xchg
loopne
or
rcll
mull
jno
in
mov
mov
lea
pushf
arpl
mov
add
mov
pop
iret
dec
repz
xchg
cli
test
cmpb
sbb
pop
sbb
rcl
push
ljmp
andl
in
sahf
int
rcrl
stos
pop
bound
adc
popf
mov
out
push
mov
mov
test
outsb
popa
aaa
cmp
push
cmp
mov
sbb
dec
push
int
addr16
pushf
xchg
ja
std
in
adc
pop
dec
add
repz
xchg
fldl2e
push
pushf
ds
jo
sbb
inc
lret
imul
pop
adc
xchg
dec
pusha
mov
and
clc
pop
jmp
ret
or
fisttps
jns
jae
outsl
fs
mov
xorl
xor
cli
push
incl
lds
add
popf
adc
xchg
mov
out
shlb
sub
lret
ja
and
out
stc
jmp
and
mov
cmp
sbb
push
jb
gs
test
ss
loope
popa
shrl
jle
adc
int3
or
jbe
mov
int3
pop
or
mov
mov
pop
pop
and
push
lahf
adc
cmp
xor
aas
aaa
jb
mov
or
sbbl
dec
enter
frstor
xchg
dec
dec
cmpsl
outsl
out
xchg
ds
jo
jne
push
adc
out
xchg
mov
adc
inc
adcl
and
jb
push
in
jne
jl
adc
test
xchg
mov
sbb
jl
repnz
mov
dec
mov
or
mov
rcrl
cmp
insl
add
aaa
and
or
fdivrl
jmp
and
mov
push
cmc
jno
push
addr16
neg
inc
fs
or
into
jbe
in
pusha
out
push
dec
push
sbb
dec
not
pop
inc
repnz
jmp
cmp
imul
std
jge
popa
loope
cmp
faddl
aas
push
jbe
and
xchg
inc
jg
mov
imul
sbb
movsl
mov
jg
cltd
mov
pop
hlt
pusha
rcl
jns
fimull
mov
inc
pop
mov
in
ja
xor
sub
mov
in
and
out
test
xor
ja
sbb
test
mull
xchg
pop
repnz
in
mov
pop
jg
jno
cmpsb
popa
sarl
jns
lods
xor
add
add
xorl
arpl
out
out
mov
pop
cmp
dec
test
push
dec
sahf
inc
mov
lcall
cld
dec
sub
aad
addb
mov
aad
test
gs
outsb
push
cmpl
dec
jecxz
sub
fisubrs
mull
clc
push
mov
repz
mov
jecxz
xor
pop
pop
cli
jbe
add
dec
push
push
addl
incb
fbld
mov
popa
or
loop
enter
mov
dec
inc
clc
push
repz
jmp
jae
outsl
inc
sub
sub
adc
ds
mov
out
and
addb
mov
dec
lret
cltd
test
fwait
cmp
int
fucomip
xchg
rolb
rol
jbe
mov
es
rcll
xchg
out
jge
jae
int
dec
pop
fcoml
inc
mov
lret
fldt
lods
sub
xchg
pop
rolb
xor
js
loop
cmpsb
inc
test
mov
push
sub
ljmp
in
mov
and
mov
cmp
int
incl
lahf
cli
cld
add
in
inc
jecxz
ljmp
adc
cwtl
pop
mov
dec
jb
cltd
jo
and
xor
test
aam
enter
sbb
aas
xchg
jle
int
fcmovbe
mov
je
movsl
push
pop
pop
ds
mov
jp
mov
push
mov
mov
xchg
movl
mov
js,pn
sbb
jg
sub
jmp
lahf
in
cmp
nop
adc
mov
out
imull
out
imul
push
or
std
orb
cmp
mov
ss
mov
std
pop
aam
mov
pop
xchg
xor
cmp
jg
test
test
push
jnp
cmp
xchg
loopne
jno
pop
in
nop
xchg
je
aam
cli
jae
pop
add
mov
insb
test
lods
adcb
scas
popa
ja
clc
jbe
stos
mov
xor
sbb
rol
adc
hlt
in
daa
aad
cmp
out
sub
lods
mov
out
or
push
in
xchg
cmp
adc
pop
mov
dec
mov
lds
pop
outsb
stos
aam
in
push
dec
mov
sbb
mulb
inc
fwait
jge
in
mov
pop
std
repz
addr16
push
cmp
repnz
idivl
cmpsb
pop
jge
inc
mov
mov
sbb
push
int3
jns
jmp
mov
ljmp
pop
mov
add
dec
xor
xchg
fs
nop
pop
mov
test
pop
sbb
xchg
mov
insl
cmpsl
xlat
inc
xchg
shll
test
push
ret
hlt
xchg
outsb
dec
adc
push
pop
dec
cmpsl
adc
push
cwtl
fisubrs
loopne
test
mov
and
andl
popa
stos
in
mov
inc
jno
inc
add
lret
mov
ret
pushf
addr16
adc
xchg
leave
push
je
movsl
jle
or
outsl
sbb
addr16
mov
sbb
pop
cmp
push
gs
les
arpl
repz
cli
inc
ds
xchg
xor
jmp
rclb
cmc
pop
test
leave
movsb
and
push
mov
xchg
imul
notl
cmp
ret
mov
xchg
mov
insb
lds
pushf
inc
test
leave
sub
test
lods
adc
jmp
xchg
push
lods
mov
call
cmp
or
push
and
inc
push
adc
movsb
or
mov
cmp
dec
aaa
or
push
push
mov
push
daa
sub
sbb
out
xchg
imul
inc
and
mov
xchg
xchg
ss
mov
rolb
xlat
mov
jae
sti
lea
sub
hlt
cmp
lods
pop
push
mov
or
or
add
dec
pop
push
ret
mov
loopne
jle
jmp
adc
and
and
repnz
in
lock
dec
push
xchg
mov
ja
shrb
or
js
pop
aad
fstpl
cmp
sbb
test
dec
xchg
cli
daa
das
xchg
cltd
hlt
sub
mov
pop
rorl
gs
stos
fnsave
mov
xor
repz
sbb
adc
enterw
add
inc
and
add
mov
adc
sahf
loop
iret
mov
popf
scas
xor
add
mov
jo
movsb
mov
xchg
lret
lret
jnp
lods
pop
mov
scas
sbb
aas
jbe
adc
dec
pop
movsl
out
punpckldq
mov
add
repz
push
cmp
mov
push
push
add
test
leave
lods
jp
xchg
mov
cltd
and
push
xor
jmp
int3
mov
adc
adc
aam
sub
dec
and
pusha
inc
mov
mov
cwtl
test
sub
xor
pop
mov
mov
jo
mov
push
mov
mov
daa
or
push
subl
lret
push
pop
hlt
pop
jge
sub
fcompl
sbb
mov
sbb
jns
fldenv
imul
xchg
jmp
jmp
movsl
jo
sub
mov
sti
pop
jecxz
push
sub
rorl
pop
sbb
push
cmp
stos
fldt
push
popa
add
mov
in
sub
sub
xor
pusha
lret
lret
fwait
jle
jmp
dec
pop
and
les
jns
xchg
fdivrs
or
lret
std
mov
cmp
inc
ljmp
mov
dec
leave
out
mov
ror
jp
pusha
loop
into
push
test
mov
mov
mov
lods
lret
pusha
cwtl
lock
push
inc
aad
cmpb
push
push
pop
lock
jge
fsubrl
fdivrl
daa
mov
fistl
mov
push
das
sbb
push
dec
cmp
andb
or
adc
cs
lock
out
xorb
mov
sbb
mov
mov
xlat
aad
dec
dec
cs
fdiv
sbb
test
cmp
in
mov
cwtl
mov
cs
push
aaa
or
into
nop
pop
cmc
ja
test
xor
fstl
or
xor
test
xor
cltd
dec
inc
add
push
in
dec
jp
push
arpl
pop
arpl
or
cmp
daa
sub
inc
adc
push
xchg
mov
fucomip
xor
dec
or
push
cmpsb
mov
sti
inc
decb
inc
decb
xchg
and
mov
movsb
xchg
mov
ret
das
mov
std
pop
test
loopne
lcall
xchg
fcomp
scas
fcompl
aad
aaa
mov
lcall
lret
cmp
repnz
inc
xor
ds
xor
sbb
pushf
inc
push
push
int
out
ficoms
outsl
sub
out
push
adc
push
sub
sahf
pusha
sbb
dec
cmpsl
in
mov
aad
popf
divl
popa
lret
xchg
fcomps
adc
aam
xchg
dec
mov
or
lds
fsubp
repz
nop
dec
adc
movsl
lock
into
mov
ret
rol
scas
adc
mov
mov
insb
dec
out
negl
lret
leave
sub
movsb
jp
inc
xor
or
jno
rcrl
aam
lea
sti
mov
stos
and
xor
sub
stos
popa
pushf
xor
xchg
push
inc
xor
divb
int
fs
cmp
sub
das
jge
push
dec
xchg
ffreep
in
test
iret
mov
fs
leave
add
cmp
jmp
into
and
lret
jbe
loop
dec
adc
mov
nop
cld
mov
and
sbb
dec
sarb
cli
scas
jp
jbe
int
lahf
subl
sbbl
dec
jl
decl
out
pushf
mov
cmp
mov
xchg
sub
and
fbstp
xchg
stos
dec
dec
pop
mov
bnd
mov
mov
test
mov
and
xchg
scas
imul
gs
pop
cmp
dec
std
sub
cmc
xchg
mov
dec
adc
xorl
ljmp
pop
lahf
or
lock
sbb
sbbb
clc
jns
push
sbb
push
mov
sbb
lds
fcmovnu
test
mov
insb
frstor
and
xor
lahf
int
lock
sbbl
cli
aas
add
or
mov
xchg
in
inc
bound
jl
dec
sbb
call
stos
das
fcomps
push
mov
xor
jae
jecxz
loopne
aam
inc
rol
mov
cmc
cmp
or
test
cli
mov
add
movsl
nop
popa
scas
cmpl
adc
mov
mov
xor
mov
pop
mov
inc
xor
lods
lea
lods
outsl
xchg
cwtl
push
js
subl
dec
xchg
add
sbb
test
imul
aaa
push
jo
mov
and
sub
jmp
xor
inc
aad
jb
pop
jg
inc
mov
dec
movsl
shll
sub
mov
fs
sbb
and
decl
push
dec
lcall
mov
xor
rolb
mov
in
sbb
mov
pop
xor
imul
pop
lock
jecxz
pop
daa
mov
mov
mov
mov
into
pushf
inc
mov
push
mov
xchg
inc
test
arpl
mov
or
lods
pop
call
out
mov
or
push
out
inc
cmp
in
shll
scas
jmp
sbb
xlat
sarl
cmp
pop
jp
jns
inc
rorb
cmp
mov
push
lods
mov
inc
xchg
pop
loop
jbe
xchg
adc
jecxz
ss
push
nop
push
addr16
push
or
xor
sbb
aaa
xor
nop
gs
mov
andb
jbe
sub
pop
sbb
inc
and
pop
jmp
mov
and
jns
mov
mov
push
mov
sub
sbb
ret
repz
mov
aam
ret
or
push
sub
sbbb
jle
pop
paddb
adcb
and
shrl
sahf
movsb
shrb
sub
jmp
sub
ss
es
xchg
and
cmp
data16
mov
repnz
addr16
ljmp
je
mov
sub
lods
push
pusha
inc
xchg
fcoms
test
jmp
push
and
mov
or
adc
mov
inc
push
sarb
leave
stc
adc
xchg
insb
xchg
sbb
movsb
mov
jmp
std
pop
mov
add
add
push
iret
jmp
push
mov
cs
test
inc
and
lcall
in
push
sbb
cli
movsl
in
sahf
or
bound
cltd
jge
mov
push
or
rolb
cmc
aam
in
es
fcoms
je
pop
test
dec
jbe
mov
scas
add
enter
pop
jecxz
dec
repnz
add
ja
in
sbb
cmpsl
dec
or
jmp
and
mov
hlt
movsl
cmp
dec
sahf
ja
inc
xlat
bound
inc
shll
and
divb
loopne
rcll
pop
inc
enter
mov
inc
adc
es
mov
xchg
enter
into
daa
push
push
ljmp
in
mov
lcall
sar
xor
xchg
and
or
loop
jp
mov
pushf
aad
mov
pop
lods
nop
ja
mov
adcl
incw
leave
or
xchg
inc
xor
and
lods
cwtl
adc
into
popf
into
mov
ja
mov
popf
aaa
push
add
cmc
sbb
pop
bound
xchg
xchg
cmpsl
pop
addb
cmpsl
scas
ja
cmpsl
jle
fcmovne
xchg
mov
push
and
mov
pop
test
das
dec
push
std
dec
pop
cld
outsb
jnp
inc
pop
push
in
jmp
push
mov
shll
pop
mov
scas
and
inc
jns
or
addb
cwtl
inc
stos
inc
test
xor
dec
loope
jo
stc
dec
or
pop
loope
dec
or
xchg
xchg
stos
adc
faddp
xchg
xchg
aaa
in
rcrl
xchg
or
dec
push
rolb
js
mov
sarl
sti
rclb
mov
rcrl
bound
ss
lods
icebp
stc
rcr
cmpsl
mov
adc
push
out
pop
enter
fsts
mov
xor
lcall
or
push
inc
pop
mov
les
sub
rcrl
enter
push
xor
ja
shl
jb
xor
mov
incb
nop
or
ja
and
or
push
sti
inc
inc
push
jo
jecxz
cmp
add
nop
add
shlb
test
ud1
adc
xchg
ds
mov
adcb
dec
mov
xchg
sbb
adc
inc
test
setge
dec
orl
push
mov
jbe
dec
xchg
test
std
decl
pop
ds
xor
cmpsb
or
repnz
clc
jp
or
xor
pop
add
add
dec
addb
fcoms
icebp
bound
jb
mov
in
out
fcomps
mov
fdivl
hlt
push
jl
aam
mov
push
inc
xchg
jmp
loop
xlat
inc
int3
cmp
fisubrs
sbb
nop
mov
test
rorl
sahf
ret
in
pop
dec
shl
or
lods
xchg
imul
pop
ja
fstl
ljmp
pop
mov
mov
pop
cmpsl
xor
js
jmp
stc
dec
dec
mov
and
ret
adcl
dec
xchg
jmp
sub
mov
repz
jle
inc
test
hlt
push
mov
dec
cmpsb
mov
jle
lds
or
pop
bnd
xchg
scas
xchg
mov
test
sub
lret
fdiv
xor
sbb
pop
aaa
xor
movsl
aaa
daa
push
pop
mov
mov
arpl
shl
clc
int3
arpl
cmp
into
mov
sub
inc
inc
xor
or
test
xchg
jae
add
repnz
push
jns
enter
or
shrb
xchg
lret
push
cmpsl
dec
popf
cmpsb
jnp
lods
push
pusha
inc
xchg
pushl
xchg
inc
outsl
add
pop
mov
lahf
insl
fnstenv
aad
je
sti
cmp
cmpsl
into
dec
jno
rcrb
repnz
cmpsl
hlt
rcl
sub
ds
out
aam
mov
aam
fiadds
xor
adc
xor
lock
mov
loopne
ds
cmpsl
lret
or
cmpb
int
ja
jne
or
and
adc
outsl
sub
pop
adc
bound
xchg
orb
mov
xchg
sbb
adc
add
add
push
add
loopne
pop
lret
fidivrl
hlt
jp
shl
negl
ficoml
push
xchg
addr16
lods
push
dec
notb
out
mov
sbb
and
scas
insl
sub
sarl
ljmp
xchg
movsl
jnp
adc
imul
inc
nop
out
imul
pop
movsl
rorl
push
xor
push
test
test
idiv
call
imul
int
mov
jmp
jns
mov
push
and
push
xchg
mov
push
xchg
addr16
and
mov
mov
xor
fwait
movsb
sub
popl
jnp
pop
push
test
mov
movsl
add
cmc
lock
dec
cwtl
loopne
mov
js
aam
xorl
mov
stos
push
div
mov
cmpsl
push
or
jge
or
int3
xchg
mov
xor
gs
mov
pop
dec
add
jl
cmpsl
dec
push
mov
nop
insb
push
outsb
cli
in
dec
push
and
push
jge
es
push
test
adc
ret
ret
lcall
into
xchg
rcrb
fst
xchg
mov
pop
addl
push
adc
jae
dec
jge
sbb
or
movsl
loopne
sub
xor
rcll
pop
and
push
je
jecxz
adc
jl
mov
push
mov
jmp
inc
aaa
pusha
adc
into
insl
movsb
lods
xchg
pusha
add
jl
adc
fimuls
stos
lds
pop
fsubl
data16
sbb
xchg
mov
sub
cltd
xchg
xlat
lock
mov
xchg
jecxz
sbb
xchg
sub
aad
out
inc
repnz
scas
and
sbbb
imul
push
notl
xor
or
bound
test
pop
fs
and
add
fs
mov
push
pop
inc
push
mov
fsub
addr16
mov
mov
sub
in
cmc
add
aaa
in
rcl
inc
xor
inc
rcrl
mov
pop
insl
rorb
lods
mov
xor
or
jo
or
inc
ljmp
sbb
inc
lret
fwait
add
ss
sub
xor
je
popf
insb
xor
or
cmp
adc
arpl
nop
imul
sub
mov
das
cmpsb
xlat
cmpsl
mov
fwait
jmp
and
and
sbb
adc
sbb
in
jmp
movsb
sbb
subb
ret
push
in
xchg
or
jns
dec
jb
xor
xchg
sbbb
in
sbb
mov
add
ffreep
lds
pop
xchg
loop
mov
cli
xchg
or
mov
xor
scas
test
test
in
sub
int3
push
stc
add
jle
aad
adc
or
das
xchg
pop
mov
sbb
popf
and
sahf
les
arpl
mov
cmp
loopne
mov
jg
inc
lahf
aaa
clc
xchg
push
and
push
pop
jl
pop
je
add
xchg
in
das
add
sbb
js
adc
scas
outsl
pop
mov
call
pop
cs
lods
mov
adcb
dec
mov
sti
andb
push
or
mov
inc
rcr
push
add
outsb
sub
xchg
enter
mov
call
jmp
sub
or
repz
loope
jnp
pushf
sbb
jg
outsb
xor
mov
cmp
mov
in
xchg
mov
mov
mov
enter
adc
mov
imulb
in
adc
stc
outsl
xchg
sbb
mov
pop
or
sub
mov
mov
push
sbb
stc
jno
and
int3
call
sub
aaa
cmpsb
pop
push
int3
mov
inc
popa
push
repnz
jnp
xchg
mov
les
pop
add
sarb
xchg
inc
movsb
cmp
jge
xor
cmp
cmp
sub
orl
add
pop
push
adc
cs
push
aas
jbe
enter
bound
inc
idivb
jl
adc
mov
cmp
repz
push
cmpl
lods
mov
inc
mov
cmp
xor
fimull
mov
lret
xchg
fmulp
int3
ja
xchg
or
sti
sub
add
rcll
pop
into
xchg
aas
and
mov
cmp
pop
leave
imul
je
sahf
mov
out
enter
push
sub
mov
out
mov
pop
mov
ret
imul
fcompl
or
push
cmpl
movsb
inc
adcl
and
mov
sub
fmuls
jbe
leave
jl
xor
fdivrs
sub
aas
jnp
pusha
mov
sub
daa
or
clc
push
lret
test
popa
test
ja
daa
orl
xchg
mov
and
mull
dec
movsb
jae
jge
flds
mov
jbe
fbld
sub
aad
jg
jp
cmp
lock
sbb
pop
daa
mov
pop
call
outsb
jge
cmp
push
in
sub
mov
out
dec
adc
gs
movsb
jg
sbb
fbld
push
int
popa
and
mov
shlb
in
mov
addr16
mov
fsubl
nop
mov
clc
aaa
dec
or
inc
jg
jno
leave
mov
hlt
push
stos
bound
negl
add
iret
in
and
outsb
inc
pop
add
fcompl
aam
fdivl
xchg
icebp
xchg
jp
inc
dec
xor
int3
nop
clc
sbb
fs
cld
lahf
imul
mov
outsb
adc
icebp
mov
out
or
push
cli
push
fs
lret
repz
repz
mov
mov
dec
mov
fisttpll
pushl
dec
cmp
lods
mov
xchg
mov
pop
fsubl
xor
orl
and
xchg
mov
cmp
inc
push
lret
out
pop
push
fmull
or
cmp
bound
sti
lea
lds
inc
jno
fdivrs
mov
inc
pop
call
cli
aad
bound
pop
pop
pop
stos
inc
or
sub
mov
fs
xchg
mov
movsl
mov
fimull
mov
jb
cmp
pushf
and
cmp
in
sbb
xchg
jnp
or
fsubr
or
insb
push
pop
aaa
out
aas
incl
inc
xor
cli
push
fldt
mov
mov
fdivs
dec
xor
add
out
and
sbb
aam
sarl
sbb
xchg
sub
sbb
sbb
xor
movsb
scas
dec
pop
hlt
ds
or
jb
popl
xchg
les
ja
dec
xor
xchg
in
mov
and
into
mov
jnp
cmc
adc
pop
or
and
jmp
out
addr16
int
leave
sub
cmpl
outsb
pushf
popa
mov
fimull
mov
test
arpl
aad
sub
adc
push
aas
cmpsl
jge
call
mov
mov
data16
inc
out
out
adc
enter
adc
mov
jmp
out
movsl
lret
mov
add
arpl
pusha
xor
shlb
imul
mov
mov
insl
xlat
mov
and
sbb
dec
inc
mov
cmp
mov
lods
push
stos
dec
pop
pusha
filds
mov
cmc
lret
jecxz
les
scas
mov
push
enter
insl
dec
cwtl
in
sbb
test
icebp
cli
data16
leave
mov
jo
sbb
ja
leave
clc
cmpl
adc
mov
loopne
ror
xor
ja
lods
test
pop
mov
call
rorl
fucomi
xor
sub
les
and
dec
pop
hlt
sarl
xorl
xchg
subb
push
and
stos
push
add
aas
fiadds
mov
imul
dec
test
test
and
dec
nop
push
add
data16
leave
mov
inc
mov
cld
mov
jns
mov
push
sbbl
bts
pop
and
mov
inc
push
fwait
pusha
adc
ja
sub
mov
jl
mov
roll
out
push
sub
mov
jl
rolb
cwtl
mov
in
aad
sub
insb
aas
mov
cmp
add
push
iret
sar
fs
and
ljmp
add
into
notb
int
lahf
sub
pop
sbb
cmp
insl
repnz
out
mov
aam
push
nop
adc
mov
retw
adc
pop
cmc
cs
mov
mov
cltd
jno
or
jmp
imul
dec
das
je
sbb
xor
push
pop
movsb
and
stos
cmp
out
push
sbb
imul
sub
and
pop
insl
call
xor
sub
mov
in
sub
mov
xor
sbb
and
loop
mov
repz
xor
in
ljmp
pop
out
mov
mov
push
xchg
push
das
sahf
push
test
into
inc
popf
std
or
inc
mov
push
cmp
hlt
or
sub
sahf
fwait
js
adc
es
idivl
outsb
sbb
push
lock
push
dec
pop
sarl
cmpsl
in
ds
sub
bound
lret
loop
pop
mov
mov
out
mov
outsl
mov
ja
and
xor
xchg
test
fsubs
mov
push
mov
lock
or
stos
mov
jo,pt
call
or
out
fmull
loopne
sbb
xchg
cmp
mov
cmpsl
dec
add
lcall
dec
dec
cmpb
or
cmp
enter
mov
adc
inc
mov
inc
loop
rcll
icebp
fsubl
mov
jb
mov
cmp
jae
loop
and
lret
inc
bound
lcall
stos
inc
push
mov
or
cli
cltd
inc
adcb
mov
cmp
and
pop
lds
push
jo
mov
add
mov
jmp
out
mov
or
jno
pop
jbe
mov
lock
xchg
pop
pop
push
fsubp
mov
push
cli
or
mov
add
scas
ja
in
addl
jecxz
pop
jne
jne
cmp
xchg
inc
gs
or
popa
xchg
push
cltd
daa
test
ret
pop
pop
add
mov
and
jo
push
aam
or
push
test
movsl
arpl
mov
pop
ds
inc
xchg
inc
adc
ret
cmp
sbb
mov
dec
in
int3
pop
mov
hlt
das
repnz
out
mov
aas
pop
mov
ror
sub
jge
adc
cmpsb
push
inc
js
rcr
push
mov
sti
ror
andl
ret
and
push
push
jns
into
pop
pop
fwait
adc
incl
dec
int3
stos
push
cmpsl
lcall
dec
and
xor
xor
cli
inc
dec
add
mov
inc
xchg
xchg
ss
add
cmpsl
xor
scas
je
aas
in
mov
das
jno
dec
fcoms
xor
and
insl
test
pop
mov
jp
pushf
lods
pop
sbb
mov
mov
loop
addb
divb
das
xchg
insl
pop
movsl
pusha
lods
mov
lock
cmpsl
outsl
sbb
cltd
push
aam
dec
push
cs
add
mov
cmp
inc
mov
mov
jg
out
sbb
fidivs
and
mov
ret
in
dec
sbb
adc
dec
mov
insl
jns
cmp
cmc
jl
ljmp
sub
or
pusha
addr16
daa
insb
jle
ljmp
xchg
notb
bound
nop
pop
and
lods
mov
cmp
or
pop
movsb
sub
push
out
and
adc
xchg
jp
stos
pop
aad
push
adc
mov
imul
js
out
inc
popa
movsb
mov
jp
lods
cmp
lock
pop
cmp
cmpb
mov
incl
mov
mov
ja
data16
out
test
xlat
bound
loopne
sbb
mov
mov
sbb
sbb
cmc
dec
lock
jae
enter
or
pop
or
into
lahf
ljmp
pop
push
in
loopne
iret
cmp
xor
adc
outsl
xchg
cmp
loopne
das
sub
dec
sub
or
icebp
ljmp
or
outsl
dec
ss
pop
je
dec
fsub
cmp
add
aaa
xor
pop
int
aad
stos
jmp
testl
insb
pop
and
repnz
pop
sbb
cmp
cmp
jg
jb
push
add
movsl
and
mov
scas
ja
dec
lret
fisubl
dec
mov
mov
xchg
or
ljmp
jge
and
xchg
fwait
sbb
and
pusha
test
xchg
xor
lahf
es
add
sub
sbb
add
sub
and
cmp
rcl
pushf
scas
jp
pop
cmp
cmp
or
cmpsl
movsb
mov
js
popa
sub
cmp
xor
jg
jns
jl
push
mov
push
iret
sub
pop
loopne
ret
xor
inc
leave
arpl
ljmp
enter
xchg
push
int3
mov
sub
mov
call
fsub
lock
add
aaa
test
lret
inc
sub
enter
jae
arpl
and
pushf
push
repnz
popf
imul
jecxz
js
jecxz
ljmp
dec
inc
ret
bnd
aam
addr16
jg
ja
inc
pop
push
xchg
cmp
out
pop
xchg
lds
sub
stc
inc
xor
jmp
inc
and
xchg
dec
or
xchg
test
pop
sbb
cltd
xchg
das
jo
sub
cmpsb
or
mov
cwtl
jge
mov
cs
out
addr16
mov
lret
jnp
lahf
and
arpl
jb
dec
mov
mov
xor
push
fidivrs
dec
sub
aaa
in
test
fisttps
mov
push
inc
int3
lahf
cltd
mov
arpl
shl
aaa
lret
push
fidivrl
dec
mov
add
jge
jle
je
std
rol
fmuls
out
jnp
insb
jns
das
outsb
jl
jno
and
imul
jg
shlb
ja
out
shr
mov
inc
adc
pop
imul
es
ljmp
in
pusha
stos
ffreep
fdivrs
inc
test
jle
or
aad
fldl
adc
dec
push
add
mov
adc
aaa
stc
push
dec
loop
lret
stos
jno
adc
jae
and
movsb
pop
in
inc
rol
push
push
dec
mov
mov
int
pop
lock
in
mov
sub
je
fmull
fldenv
addw
mov
sub
cmp
movsb
xchg
xchg
icebp
add
pop
call
outsb
dec
in
movsl
mov
add
bnd
sub
mov
dec
mov
push
scas
aaa
fildll
cmp
in
sub
sub
fldl
inc
dec
fists
sbb
inc
adc
pop
cmpsl
incb
clc
in
mov
push
sbb
cld
mov
dec
jge
and
fwait
aam
bound
aaa
jg
ljmp
and
jp
pop
adc
dec
jp
add
xchg
inc
ja
mov
pop
pop
imul
push
xchg
sar
pushf
dec
adc
rclb
lds
fisttps
inc
je
cmpsl
mov
icebp
lcall
pop
ret
orb
or
jge
fldcw
xlat
mov
or
xlat
mov
insb
or
icebp
out
test
pop
dec
int
ret
pop
mov
fsts
mov
rclb
jns
pop
mov
adc
test
sub
ret
stc
mov
sarb
dec
and
imull
xchg
pop
pop
cmp
xchg
jg
sti
subb
cmpb
fmull
dec
xchg
pop
mov
roll
dec
testb
inc
imul
jge
mov
les
mov
mov
xor
pop
das
cmp
fdivs
mov
push
cli
inc
jno
dec
test
push
fxch
mov
int
add
out
mov
dec
popf
jmp
bound
mov
bound
sbb
ljmp
dec
icebp
jge
or
cwtl
hlt
lret
dec
arpl
popf
inc
out
call
std
repnz
enter
mov
cli
mov
push
sahf
ret
loopne
mov
repz
pop
cmp
rcrl
or
add
leave
adc
mov
push
in
xor
gs
aam
jg
daa
in
popa
aas
xchg
gs
mov
imulb
pop
xchg
imul
in
and
push
adc
loop
mov
jae
or
or
xchg
shrb
jae
aam
sub
cmpsb
xor
sahf
decb
or
scas
add
or
ret
ret
cs
out
mov
pop
cmc
ss
xor
loop
jno
adc
inc
mov
xchg
dec
scas
negl
mov
imull
cmp
loop
sbb
jb
dec
out
out
loope
add
sbbl
daa
das
cltd
repz
gs
movsl
insl
iret
add
dec
pushf
mov
andl
xchg
aam
mov
lcall
jg
mov
arpl
stos
inc
in
dec
dec
jb
jl
jmp
adc
stos
repz
mov
sub
push
out
movb
stos
sbb
setns
iret
movsl
cmp
mov
int3
push
sbb
into
imul
scas
rorl
insl
lcall
lahf
add
sub
ret
jno
xor
push
push
push
cmp
je
or
ret
cmp
add
test
xchg
xlat
inc
jg
nop
das
hlt
xor
or
push
jmp
iret
jbe
push
test
addr16
lret
xor
js
insl
xor
add
out
jne
mov
push
inc
xlat
mov
in
mov
aas
lret
jp
inc
fdiv
mov
mov
jmp
mov
pop
push
sub
xchg
sub
xchg
xchg
popf
fcmovbe
inc
jg
mov
adc
out
xchg
push
mov
mov
std
sti
lds
fildl
cmc
xorl
lahf
jno
insb
mov
shll
mov
dec
jae
insb
adc
fwait
pop
pop
and
mov
adc
inc
daa
stc
aad
lcall
mov
inc
test
xchg
out
xchg
cmpsl
jne
dec
in
pop
jb
enter
rcl
aas
sahf
int3
test
adc
jb
pop
mov
sub
lret
sbb
xlat
push
or
adc
sub
cld
fs
lock
hlt
cmpsb
popa
pop
jns
cmp
fisubrs
lcall
adc
movsb
mov
or
loop
xchg
imul
nop
es
add
std
lock
push
ljmp
int
ret
cmp
shll
fsts
mov
add
hlt
add
jbe
inc
push
or
and
cmp
jns
sub
lods
xchg
adc
mov
push
lret
fmuls
mov
loopne
iret
jo
sub
mov
loop
xchg
xchg
dec
mov
push
jge
cmp
or
cs
jne
xlat
mov
and
insb
cmc
xchg
jo
xchg
arpl
dec
scas
xchg
push
ljmp
mov
aas
cltd
fdivr
adc
sbb
jnp
xchg
pop
imul
jns
and
rcrb
inc
mov
mov
mov
roll
lret
add
loopne
fwait
xor
dec
push
xorb
subb
rcrb
mov
hlt
adc
es
xor
cmp
arpl
out
pop
mov
int3
push
aaa
hlt
jb
int3
js
fs
dec
das
movsb
imul
aad
int
jbe
stos
mov
fdivl
sarb
xchg
jecxz
sbb
cltd
jnp
in
sbb
das
jae
xchg
popf
xor
popa
dec
mov
push
loopne
mov
mov
scas
in
sub
push
push
cwtl
dec
mov
mov
movl
mov
aaa
sbb
mov
push
or
mov
xor
fisttps
cmpb
fistpl
test
xlat
lcall
ret
dec
aam
add
dec
mov
inc
faddl
xor
adc
add
shr
add
and
lock
pop
test
and
or
cmc
add
sub
ret
sbbb
pop
cwtl
inc
or
inc
cmp
imul
dec
pop
mov
test
push
and
jns
fld
sbb
imul
push
div
mov
xchg
push
push
enter
xor
fbld
andb
xorl
stos
loop
cmpb
aas
in
mov
cmp
sbb
in
mov
pop
ret
mov
add
push
ficomps
and
sub
imul
mov
arpl
or
orl
int
dec
and
cmpsl
movsl
lds
hlt
fldenv
pop
adc
scas
push
mov
loopne
dec
xchg
xor
and
push
inc
ret
inc
enter
loopne
mov
xor
lds
in
cmp
xor
sbb
lods
pop
lret
loope
lods
int
sub
push
int
pop
jge
sbb
jb
pusha
cld
loope
inc
jbe
aaa
das
jmp
mov
adc
out
inc
xchg
cmova
enter
dec
push
or
and
in
sbb
sti
fnstsw
lods
call
push
push
jmp
jmp
imul
sbb
insb
jno
add
andl
sbb
in
xorl
mov
imul
mov
outsl
test
popa
adc
mov
aam
mov
fimull
push
loop
xor
fstps
add
dec
push
push
nop
push
jnp
repnz
jno
insb
fs
and
xlat
in
incl
jg
sub
inc
or
lcall
andl
push
into
outsl
stos
shrl
inc
push
xchg
sti
ret
addr16
sar
jmp
mov
ss
mov
aaa
mov
mov
aaa
mov
outsl
cmp
mov
bound
sub
loop
ret
or
loopne
loope
xor
mov
xor
adc
cmc
add
mov
cli
imul
fsubrl
mov
dec
leave
xchg
inc
xchg
push
mov
pop
mov
mov
add
cmp
dec
lds
pop
pop
out
sti
xor
mov
mov
cmp
lods
or
imul
mov
pushf
sbb
ja
shl
cwtl
pop
dec
test
sbb
sarb
jae
dec
jbe
cmp
dec
divb
add
in
add
lds
hlt
lods
ret
shlb
lret
xor
adc
outsl
cli
pusha
jnp
inc
xor
ret
mov
mov
mov
repnz
add
sbb
mov
data16
cmpsl
mov
lret
neg
ja
fists
insl
gs
test
pop
lret
jl
or
daa
xor
arpl
and
out
ficompl
loop
mov
mov
mov
adc
mov
shrb
movsl
jns
outsb
adc
sub
in
xchg
in
cmp
les
loop
scas
out
push
dec
jae
test
mov
fadds
je
mov
adc
pop
lods
sub
imul
xchg
adc
add
fwait
cmp
and
xchg
or
fwait
divl
jg
out
mov
arpl
pushf
lret
adc
jae
xchg
int
mov
cmp
in
mov
insb
pusha
lcall
jle
cli
lcall
sbb
jp
cli
stos
lods
jnp
loopne
pop
pop
int3
ja
adc
add
cmpsl
movsl
mov
mov
loope
ljmp
pop
aas
cmc
pcmpgtb
loope
xchg
out
pop
daa
lods
lea
das
xchg
aaa
pop
xchg
xor
imul
fs
rclb
pop
jg
sti
popa
adc
adc
mov
daa
fisubl
lods
xchg
xchg
mov
jge
cmp
fnstcw
push
jae
aaa
mov
xor
cmp
loopne
in
adc
xchg
xor
ds
jne
aas
out
sub
push
divl
dec
movsb
fisubrl
fisubrl
sbb
mov
stos
into
nop
jbe
imul
ret
push
pop
sbb
cmp
cwtl
xchg
test
fidivrl
mov
mov
ficoms
addr16
out
test
stos
shlb
out
push
mov
or
in
daa
imul
xchg
jae
aad
flds
inc
mov
lcall
rorl
sarl
inc
lahf
jne
add
arpl
js
jmp
jne
fcom
and
dec
inc
add
jg
lods
push
mov
pop
sbb
add
xlat
jne
in
repz
sub
outsl
jno
jl
mov
pop
xchg
sbb
pop
and
jns
pusha
xor
jae
sub
dec
stos
jbe
imull
sbb
fldcw
jge
adcl
cld
mov
pop
sbb
in
inc
adc
push
daa
push
daa
mov
jp
or
fnsave
mov
dec
cmpsl
adc
lods
arpl
mov
jne
cmc
std
scas
mov
xchg
cmp
cld
add
cmp
test
mov
cmp
sub
mov
iret
adc
sbb
push
aaa
movsb
fisttpl
cmp
inc
pusha
sbb
mov
push
sub
out
movsb
sbb
shlb
add
cmp
fsubrl
sbb
not
call
inc
in
push
and
ret
test
scas
dec
fsub
sbb
pop
scas
test
cmp
jb
repz
subl
lea
dec
xchg
mov
pop
mov
add
or
adc
lret
dec
and
cmc
cltd
xor
dec
xchg
push
dec
ret
adc
pop
movsl
pop
sbb
xchg
pusha
xchg
fmulp
loope
pop
pop
xchg
mov
ret
cmpsb
sub
xor
and
or
ljmp
call
cwtl
mov
lock
mov
sbb
icebp
pop
iret
cmp
lods
loope
push
dec
xchg
mov
jecxz
into
pusha
push
jo
push
test
and
fsub
outsl
pushf
into
xchg
mov
pop
push
leave
iret
inc
jmp
push
sbb
adc
pop
sahf
out
fldenv
ljmp
mov
out
dec
mov
xor
jp
dec
mov
pusha
inc
jbe
mov
mov
sub
adcb
lock
hlt
insl
and
arpl
out
repnz
or
xchg
stos
das
mov
xchg
jae
fwait
add
jl
scas
repz
mov
sarb
in
cmp
cmp
push
dec
aam
and
push
xor
adc
outsl
jno
pop
inc
jae
inc
testl
mov
ljmp
mov
push
lods
shll
jnp
and
in
add
mov
mov
mov
mov
mov
ljmp
aad
pop
imulb
jl
mov
push
or
call
dec
mov
jno
sub
shrl
adc
dec
aas
cmp
scas
jae
cmpsl
fists
sbb
int
add
lret
add
outsl
mov
fcoms
xchg
mov
adc
std
pop
out
out
mov
in
push
push
xchg
out
push
aam
pop
stc
call
xor
push
inc
jo
sbb
aas
repz
les
xchg
adc
inc
xlat
mov
push
int
mov
jge
leave
pop
cmpsb
loopne
dec
mov
fsts
cld
xchg
xor
dec
clc
fistl
js
sbb
ja
ficoml
push
mov
push
popa
xor
push
scas
testl
dec
in
push
cmpsb
sbb
xor
xor
or
mov
scas
out
js
movsb
out
jg
inc
mov
cmpsb
xor
and
cmpsb
fidivl
dec
rcr
test
push
mov
or
add
push
jge
lea
out
push
insb
jnp
daa
insl
jecxz
loopne
mov
mov
repnz
xchg
sub
mov
inc
mov
ss
mov
fsubl
mov
aas
cmp
lahf
xor
mov
loope
rol
inc
andl
mov
mov
mov
fdivrl
jmp
cmpsl
jae
mov
xor
dec
inc
lahf
loopne
into
mov
sbb
arpl
mov
adc
test
push
and
pop
dec
sahf
jl
inc
popf
adc
call
cmp
movsb
mov
shlb
shlb
inc
push
aas
cmp
inc
mov
xchg
mov
sub
inc
push
cld
xor
mov
or
push
shr
sub
arpl
out
in
inc
inc
push
cmpsl
shll
mov
sub
shll
lds
mov
cwtl
gs
int3
jg
pushf
mov
out
or
jg
inc
adc
pop
in
cmp
and
fisttps
lock
fcmove
data16
dec
or
push
test
dec
push
jne,pn
out
jne
cmpsl
jb
stos
pop
in
jle
and
ret
movsl
push
or
or
xor
outsl
lea
call
and
push
popf
fidivrs
xchg
jae
mov
or
les
dec
dec
jb
xchg
outsl
insl
mov
xor
in
add
mov
insb
arpl
dec
lea
addr16
insb
inc
dec
fstp
cltd
outsb
sbb
pop
out
or
test
jge
push
mov
dec
dec
or
add
je
push
out
and
sbb
fsubr
xchg
xor
fmul
mov
arpl
mov
dec
pushf
adc
jmp
aad
fldl2t
mov
insb
inc
cltd
movsb
add
roll
xchg
jns
cmp
pop
cs
sahf
clc
mov
sti
add
cmp
adc
ffreep
lret
subb
out
aas
stos
lds
idiv
loopne
jp
inc
imulb
ss
rorl
mov
and
xor
leave
xorl
dec
sahf
jmp
push
aam
in
cmp
movsl
sub
sbb
movsl
pop
cmp
repz
filds
jp
and
add
js
addb
out
cltd
ja
aam
in
sbb
lsl
out
cmp
mov
cwtl
push
jne
cmp
js
subb
cmp
sub
add
add
inc
hlt
adc
mov
jl
sti
imul
xchg
shl
and
sti
jge
fstps
or
imul
int
or
movsb
adc
xchg
movsb
aam
inc
popa
cmp
add
inc
loop,pn
icebp
ds
ljmp
and
test
cmp
cmp
pop
sbb
adc
xor
xchg
imul
xlat
rcll
xor
push
aaa
in
sbb
fildl
add
mov
inc
not
test
cmc
mov
int
dec
call
push
sti
das
mov
ret
stos
in
cwtl
xchg
out
mov
mov
inc
daa
inc
xor
mov
lock
jmp
sti
cmp
orb
out
jl
iret
jns
sbb
adc
ja
daa
xchg
xor
adc
scas
sub
and
loopne
and
and
fnstenv
jbe
jecxz
stc
xchg
pop
mov
pop
lock
sti
or
pushw
popf
inc
emms
or
lods
fcmove
mov
adcl
xor
cmp
fsubs
xchg
fstps
test
pushf
dec
push
out
sbb
outsb
add
xor
push
dec
aam
sbbl
in
popf
test
mov
mov
pusha
dec
cmp
fsubrl
pop
mov
sub
cltd
hlt
pop
mov
sub
ljmp
int3
test
push
and
inc
and
sub
jle
inc
jae
jo
cmc
psrlq
mulb
inc
faddp
pop
mov
and
es
enter
fwait
shl
icebp
andb
notl
imul
mov
push
or
inc
scas
mov
mov
scas
aas
sarb
pop
jle
das
insb
mov
fcomps
and
test
sub
or
adc
movsl
inc
xlat
xor
mov
push
inc
into
lods
jno
mov
or
add
push
adc
fsts
pusha
out
ds
inc
fs
loope
scas
lret
fmuls
mov
out
push
and
loop
mov
sbb
aas
pop
jmp
test
fucomi
sbbl
push
pop
push
inc
xor
stos
xor
dec
fistpll
mov
sub
dec
testl
jbe
dec
push
inc
pop
dec
out
or
pop
xchg
push
sub
add
std
lret
push
cwtl
sub
repz
dec
dec
dec
ljmp
adc
popf
test
dec
das
loopne
lds
xchg
mov
pop
in
lret
gs
aam
aad
ds
mov
adc
fs
push
and
inc
cmp
mov
and
ret
ss
outsl
jp
jbe
xor
push
repnz
xchg
add
test
or
pushf
iret
push
mov
lcall
jle
push
mov
pop
cmp
shll
push
test
js
mov
mov
cmp
popa
cmpb
jno
dec
fstpl
xchg
xor
mov
rorb
bnd
pop
xchg
ret
mov
popf
orl
xchg
notl
bound
mov
pop
stos
mov
sub
imul
cmp
adc
push
je
test
repnz
cmp
pop
jmp
push
stos
scas
pop
inc
scas
xor
pop
xor
test
icebp
bound
repnz
mov
add
adc
stos
or
xchg
push
jns
dec
inc
stos
sbb
sub
mov
insb
jp
cmc
sub
popa
arpl
add
repz
jne
stc
pop
std
jnp,pn
pop
cmp
cli
jnp
jo
lfs
rorl
jb
fcmove
ds
mov
sarl
mov
mov
xchg
stos
and
sarb
pop
xchg
idiv
psubb
mulb
adcl
imull
pusha
push
pushf
loopne
imul
mov
out
mov
test
jnp
fcmovnb
out
push
mov
push
mov
adc
dec
idivb
sarb
push
cmp
idivb
jo
fcompl
mov
jmp
or
into
mov
les
and
xchg
cmpsl
mov
outsb
in
pop
scas
xchg
lcall
adc
lods
or
loopne
les
mov
cltd
cli
mov
pop
scas
xchg
mov
mov
sub
outsl
hlt
inc
jecxz
xor
out
sbb
and
cmpsb
cmp
mov
imul
or
addr16
faddl
scas
inc
xchg
test
pop
loopne
cmpsl
pop
xchg
in
jb
or
gs
cltd
mov
out
jnp
push
pushf
push
lock
cmp
push
push
imul
pop
pop
stos
sub
jo
test
xor
xor
sbb
cmp
imulb
ss
add
pusha
xchg
jnp
faddl
xorl
jne
pop
or
rcr
jb
pop
fs
push
loopne
jg
push
daa
push
cmp
pushf
iret
xchg
addr16
cli
sbb
sub
inc
shrl
test
movsl
add
sbb
adc
inc
cmp
ficoml
sub
stos
jge
push
and
aaa
fcoml
outsl
pop
insb
mov
stc
pop
xor
pusha
jp
ds
mov
add
lods
les
stc
data16
aad
lcall
cmp
push
mov
xchg
mov
jnp
pop
daa
add
mov
add
push
xchg
cld
jmp
and
nop
add
das
jne
scas
xchg
push
cli
sbb
lods
add
sub
sub
or
dec
lea
pop
xchg
sub
jno
push
dec
popa
stc
icebp
int3
xlat
fcomi
sbb
cmp
sub
jo
stc
and
mov
mov
sub
pop
xor
mov
les
sub
adcb
sub
nop
loope
cli
sub
out
sub
cmp
andl
cmpsl
push
or
inc
inc
cmpsb
divb
cmp
sub
push
js
mov
pop
add
mov
in
imul
cli
int3
ja
mov
push
cmpsb
add
xchg
add
call
adc
mov
in
inc
sahf
and
jmp
mov
repnz
lock
mov
push
jmp
push
in
mov
add
sub
or
push
adc
inc
push
xchg
and
imul
adc
xchg
sub
je
out
inc
xor
push
dec
repz
cmp
andb
cmpsb
push
push
adc
xchg
vmwrite
in
insb
pop
roll
inc
adc
nop
dec
movl
enter
jmp
idivb
xorb
jecxz
loop
int
jecxz
push
or
std
xchg
lret
adc
pop
jb
lods
adcb
jnp
addb
in
inc
mov
cmp
xchg
fidivl
sahf
in
sbb
sub
inc
or
call
negb
cmp
outsl
iret
pop
fwait
mov
sbb
adc
sub
idivb
lods
ss
in
ja
add
push
mov
aam
ljmp
pop
cmp
sbb
aam
cli
cmc
and
sub
jmp
sub
in
xchg
es
sub
pop
adc
xor
mov
push
jmp
mov
push
inc
sahf
fisubl
lret
adc
inc
or
cld
imul
int
shlb
mov
and
loopne
cld
adc
aad
pop
lret
shl
jo
mov
adc
and
lods
inc
lret
stos
pop
lods
ret
fwait
xor
sahf
addr16
arpl
push
test
jno
and
jp
sub
adc
test
lea
das
imul
stos
shr
gs
cs
cwtl
notb
aaa
movsl
addl
jns,pn
jbe
fldenv
fisttpll
fdivrl
xor
inc
adc
xor
jp
push
push
mov
test
ret
aam
ja
dec
popf
jo,pt
mov
leave
xor
add
xchg
imul
cmpsb
cmp
lock
add
mov
test
std
testl
aaa
pop
rcrb
inc
popf
add
mov
add
push
daa
and
insb
scas
cwtl
sub
ja
nop
outsl
dec
add
mov
out
out
and
push
fcoms
dec
adcb
mov
testl
cmpsl
sub
stos
out
test
cmpsl
add
lahf
imul
stos
je
nop
outsb
orl
test
cmc
xchg
in
jne
sbb
jbe
mov
pop
incl
movsb
fs
sub
and
shlb
in
lret
and
ret
cmp
fstpl
movsl
add
cmp
inc
jmp
sub
cmp
jmp
lds
subb
call
sbb
mov
or
lods
repnz
jo
jne
adc
sub
mov
out
andl
mov
push
add
dec
inc
sbb
popf
insb
push
aas
scas
pop
mov
scas
xchg
inc
jp
cwtl
mov
jle
cmp
je
xor
jnp
inc
push
les
movb
icebp
loopne
test
andb
and
and
jo
hlt
cld
je
aam
inc
mov
pop
push
flds
push
and
iret
ljmp
loopne
fidivrl
inc
aaa
lock
cmpb
xchg
xchg
sarb
cmpsb
data16
cmp
adc
push
sahf
cmpsb
mov
into
arpl
mov
fimull
xchg
push
xchg
mov
outsb
mov
iret
adc
enter
cmc
pop
mov
adc
sub
into
pop
xlat
nop
test
mov
mov
mov
std
bnd
aad
fcoml
xchg
lds
out
test
jge
pop
pop
add
rcr
fwait
movsl
mov
sbb
in
lret
mov
out
in
add
daa
mov
aaa
xorb
add
lcall
adc
dec
jne
fisubs
xor
mov
inc
sub
pop
stc
and
mov
es
push
jle
testb
test
xlat
int3
cltd
mov
aad
and
nop
icebp
mov
sbb
inc
out
jl
fcoml
add
push
xchg
sub
lret
ja
jnp
adc
shrl
jo
xchg
fsubrs
cmpsb
cmp
addb
shlb
sbbb
lahf
inc
cmpsb
fidivl
and
test
jae
lods
fbld
movsb
fsubrs
imul
dec
popa
xchg
push
ficomps
aaa
jle
push
push
in
xchg
jb
push
int
mov
lcall
push
mov
mov
imul
add
popa
iret
sbb
cld
inc
bound
mov
ret
imul
jnp
test
shlb
enter
and
adc
jns
mov
loop
push
in
mov
and
mov
es
xchg
mov
aam
mov
mov
add
cmp
fadd
push
leave
sub
mov
ss
dec
mov
addr16
xlat
pop
cld
mov
inc
inc
adc
fildl
call
add
add
jae
int
mov
dec
inc
sbb
xor
pop
inc
stc
je
mov
inc
pop
cs
xchg
pop
rcr
lea
adc
sbb
or
push
jns
mov
push
aad
test
mul
pusha
cmp
sahf
movsb
sbb
stc
mov
ret
push
scas
adc
pusha
lods
into
and
push
mov
enter
inc
ret
loopne
and
movsl
mov
cwtl
popa
flds
pop
jecxz
fmuls
mov
loopne
jno
pop
aam
mov
stos
mov
xchg
cmp
insl
insl
psrad
mov
pop
adcb
out
out
ds
loope
push
testl
add
sbbl
pop
mov
mov
add
arpl
xchg
js
sub
mov
shll
mov
fwait
sub
and
int3
fsts
or
fcomps
stc
xchg
mov
push
adc
push
pop
cmp
mov
cmp
gs
sbb
add
fists
mov
xchg
dec
in
movsb
sub
shrl
sarl
hlt
faddl
into
inc
lcall
push
mov
es
addr16
dec
cmp
xchg
shl
inc
aaa
push
test
in
fiaddl
mov
aas
insl
xchg
gs
push
dec
mov
loope
cmp
jl
xchg
push
mov
loope
mov
insb
jle
fucomi
cmp
sbb
lret
outsl
sub
xchg
imul
mov
add
ret
cmp
aaa
lahf
xchg
add
rclb
ficoms
test
xchg
cmp
or
push
jns
xor
jl
pop
rcrl
jnp
ja
out
shrl
and
inc
jno
mov
and
stos
pusha
negb
mov
cli
cmc
lods
dec
mov
pushf
fbstp
xor
lock
call
cmp
push
outsb
daa
sbb
xor
call
mov
xchg
lret
and
cmp
xchg
icebp
xsha1
cmpsb
dec
pop
pop
inc
lret
cmp
and
mov
ret
mov
mov
pop
in
jb
loope
push
adc
pop
in
xchg
mov
sub
movsb
xchg
cwtl
fstl
outsb
push
inc
jecxz
lret
inc
test
rorl
push
xorl
cld
adc
imul
fcoms
lods
loop
sbb
jle
mov
mov
xor
gs
aad
sbb
lock
cld
stos
xchg
jmp
push
shrl
mov
fimull
xor
pop
cmpsl
sbb
xor
xor
dec
int3
or
bound
bound
in
repnz
into
dec
jl
or
or
das
sbb
and
leave
loope
loope
add
mov
sub
flds
into
cmp
fwait
xor
mov
rep
xchg
in
mov
cmpsl
xlat
mov
aad
dec
int3
fs
and
shlb
pop
cltd
mul
shlb
divb
movsl
jbe
sub
sarb
cmpsl
pop
lods
push
or
dec
jecxz
ja
icebp
aad
pop
xchg
pop
loopne
iret
scas
dec
lock
jnp
sbb
into
test
test
cmp
xorl
lcall
imul
int3
pop
adc
push
movhps
outsl
jo
scas
fxch
sbb
mov
into
push
or
xor
loop
dec
icebp
aam
rclb
pop
push
push
mov
test
mov
dec
cmpsb
cs
mov
xor
xor
xchg
inc
push
inc
xchg
inc
in
adc
stc
test
push
inc
jmp
xor
pop
in
repz
in
test
imul
mov
adc
mov
mov
inc
out
lods
sub
lret
inc
push
dec
push
or
jo
inc
icebp
mov
dec
ficoms
popa
mov
iret
xchg
push
cwtl
push
mov
inc
outsl
mov
xchg
cmp
mov
out
das
sbb
shll
out
int3
add
inc
xor
lods
call
cmp
popa
xchg
hlt
mov
fadd
pop
cmp
repz
or
jle
sub
cmp
das
out
dec
pop
xchg
testl
mov
popf
pop
and
popf
data16
rcl
xorb
jb
fnstcw
cltd
test
mov
or
sbb
cltd
dec
push
adc
iret
test
in
sbb
ss
mov
out
dec
jge
jmp
lods
cmp
jmp
cld
pop
sub
xchg
mov
in
mov
movsl
aam
push
les
dec
pop
shlb
jo
add
cwtl
jg
dec
sbbl
rcrl
lret
into
sbb
jle
cmp
xor
les
mov
es
dec
stos
push
xor
adc
inc
push
add
inc
sub
test
popf
pop
enter
ficompl
sti
mov
popa
negb
sbb
xor
inc
pop
sub
inc
cmp
shrl
mov
and
enter
sysexit
pusha
push
les
int
dec
rolb
pop
jmp
or
mov
cli
add
enter
into
and
mov
nop
xor
mov
lret
movb
pop
je
cli
adc
neg
inc
aad
xor
sub
outsl
cmp
jp
sub
sbb
inc
mov
jmp
insl
das
mov
jmp
sub
inc
lds
adc
lret
push
test
mov
dec
movsb
mov
rol
pop
outsl
stc
inc
jle
out
les
cld
add
or
lcall
dec
fstp
movsl
cmc
insl
xchg
xchg
add
nop
imul
push
pop
pop
mov
add
lea
dec
lock
mov
mov
push
fnstsw
sub
lret
cmc
cli
pop
cmpsl
aas
rorb
fnstcw
out
sub
xchg
xchg
in
xchg
daa
pop
icebp
push
enter
into
push
je
dec
push
les
jmp
inc
psadbw
jo
mov
push
sbbl
lock
hlt
jmp
clc
int3
lods
shrl
dec
xor
mov
mov
push
mov
rol
pop
imul
and
add
sti
scas
and
pop
mov
dec
sub
int3
mov
repz
lock
ror
lret
stos
std
and
subl
sbb
loopne
mov
filds
aam
cltd
lret
imul
and
push
pop
mov
lds
outsl
out
pop
inc
mov
addr16
xor
imul
movsb
mov
loop
adc
push
and
mov
div
inc
stc
jmp
sbb
notl
push
fs
ja
or
neg
jno
mov
sahf
push
and
or
icebp
push
fnstcw
imul
fwait
and
mov
cmp
mov
outsl
addr16
pushl
test
mov
xchg
shrb
call
lods
sub
or
jae
or
and
data16
fldcw
ja
fs
push
push
mov
pop
mov
out
out
ret
in
jne
xchg
lea
mov
pop
pushf
bound
imul
mov
pop
ljmp
jp
shll
fdivrs
ja
sub
push
cmpsb
sub
dec
mov
lahf
mov
jnp
pop
jne
mov
add
outsb
mov
jg
testb
push
mov
add
sbbl
push
int
in
xchg
fs
cmp
pop
sub
mov
push
lret
mov
dec
subl
scas
mov
xor
popa
jbe
sbb
cmpsb
inc
sbb
adc
cmpsl
jbe
jbe
dec
mov
dec
adcl
cmpsb
aaa
xchg
stc
cmpsl
popf
shr
jmp
mov
gs
inc
imul
push
or
fsubrl
xlat
scas
and
dec
imul
xchg
jne
pop
push
int
mov
ret
lea
push
in
mov
and
push
ljmp
add
push
clc
lea
mov
ss
int
aaa
imul
sti
xchg
cltd
inc
and
call
xor
data16
cmp
lods
pop
lods
insl
rcr
ret
pop
dec
pop
jmp
xadd
hlt
sbb
or
popf
mov
sub
mov
jp
cmpsb
mov
jae
aas
push
sahf
jbe
lret
out
clc
movsl
mov
pop
sbb
xchg
into
cmp
aaa
push
cmp
aas
mov
inc
or
xchg
push
inc
push
and
add
insl
xchg
adc
inc
cmp
out
and
ds
xchg
rorl
sub
int3
call
mov
fnstsw
stos
push
pop
adcb
imul
dec
test
std
int3
sbb
cli
daa
push
mov
repz
rep
adc
mov
cmpsl
inc
cld
pop
bound
sub
pop
scas
lahf
dec
add
add
cmp
sbb
dec
jne
jle
mull
arpl
sub
dec
stos
imul
jns
lret
xor
pop
inc
cmp
pop
scas
inc
rcrl
out
pop
adc
pop
jns
inc
pop
negl
shrb
sbb
les
aad
xchg
mov
pop
fldcw
movsb
jns
sbb
mov
out
mov
add
lahf
into
into
in
pusha
xchg
cwtl
and
cltd
shrb
daa
pop
addl
popf
add
add
lcall
jle
or
das
mov
mov
pusha
cmp
jb
lret
in
or
dec
rclb
push
std
add
insb
ss
mov
nop
xor
jl
sbb
mov
cmc
in
inc
je
pop
jns
mov
outsb
stc
jmp
xor
xor
ds
mov
sbbb
xor
jbe
xorb
jl
les
add
and
mov
test
mov
pusha
popa
xchg
or
push
inc
in
pop
and
mov
xor
jbe
xor
or
mov
out
loopne
pop
push
mov
and
fcompp
pop
test
lods
lahf
mov
jns
sahf
sub
add
pop
and
arpl
pop
out
cmp
push
cs
ror
repz
fsub
std
push
sub
xor
push
fwait
pop
dec
adc
adc
and
pushf
pop
add
mov
and
cmp
pop
or
shrb
test
xor
push
pop
ret
mov
fsubrs
cmp
test
fildl
dec
mov
jp
mov
dec
mov
and
xchg
push
sbb
roll
rorl
dec
sbb
jmp
mov
mov
lods
cmp
stc
sahf
addr16
push
jecxz
and
add
loop
ret
mov
mov
lea
jp
sbb
popf
in
push
inc
sahf
lret
lcall
xor
lret
inc
cmp
scas
xor
add
or
loop
call
or
and
repnz
int3
repnz
insl
lock
je
call
cmpsb
aas
sahf
subl
dec
xor
inc
and
call
mov
mov
pop
fs
int3
push
push
xchg
lods
std
inc
out
dec
push
xor
mov
ljmp
les
jp
test
jle
nop
test
inc
push
arpl
fistpll
dec
flds
adc
mov
mov
out
add
sub
dec
test
push
scas
sbb
pop
mov
rcll
mov
mov
mov
add
mov
pop
test
xchg
loope
jno
mov
hlt
in
lret
rol
addb
mov
fwait
sub
inc
pop
mov
insl
stos
cmp
or
aad
push
adc
loop
jecxz
xchg
and
cmpsl
arpl
repz
leave
xor
pop
popa
xchg
cld
repnz
ud0
mov
mov
adc
mov
aaa
sbb
test
in
sbb
dec
mov
cmp
fs
pop
or
fidivrl
rdtsc
lret
mov
mov
xchg
aam
xchg
push
jge
add
scas
xchg
psrad
out
or
sbb
jbe
popa
mov
dec
or
sub
pop
stos
ja
xchg
mov
pop
mov
push
pushf
cmp
stos
mov
sub
dec
jp
or
adc
je
int3
outsl
and
shll
mov
mov
cmp
sar
push
imul
lret
pop
dec
mov
aaa
xchg
pushf
xchg
mov
jae
movsb
insb
sub
add
xchg
sti
mov
sbb
pop
mov
mov
and
sarl
mov
pop
mov
or
jnp
cmp
jp
cmp
repz
xchg
mov
mov
mov
sbb
mov
aaa
adc
lret
ficoms
xchg
mov
xchg
insb
int
pop
fiaddl
pop
dec
lock
repz
les
xchg
jmp
cmp
das
inc
aad
jns
lods
xor
and
ret
pop
jb
push
jnp
adc
ret
jae
outsb
cpuid
xchg
xchg
cmpsl
enter
outsb
lock
cltd
jae
lret
adc
jl
adc
lea
ret
sbb
cwtl
cli
sub
jno
xchg
pop
inc
jo
pushf
ljmp
mov
icebp
dec
mov
xchg
cmpsl
cmc
xchg
add
ret
jmp
pusha
mov
mov
das
push
notl
in
ljmp
jno
mov
xchg
loope
push
dec
sti
cmp
or
cltd
std
and
cld
dec
pop
pusha
push
movb
leave
cmp
fsubrl
je
insl
les
shll
inc
sahf
cmc
ret
lret
push
mov
inc
inc
repz
fs
daa
mov
in
pop
jo
fsubp
and
scas
mov
sbb
adc
jmp
mov
jns
test
ret
mov
push
cmpl
xchg
pop
cmp
ds
adc
push
sti
shlb
in
mov
idivl
fisubrl
jmp
loope
jno
push
mov
iret
sbb
pusha
or
add
mov
shr
lret
push
cmpsb
push
jo
jmp
push
jg
mov
daa
out
xor
sbb
int
aas
insb
lret
pop
jl
push
mov
add
fcoms
push
and
jo
sub
adc
mov
jb
pop
jmp
or
fimull
notb
imul
push
xchg
add
sbb
hlt
push
dec
in
test
insb
pop
aad
ret
ljmp
popa
jp
adc
jle
mov
shl
push
movsl
mov
jl
clc
stc
aaa
dec
inc
xor
push
or
jle
sbb
jae
or
mov
loopne
shll
cmp
imul
hlt
push
xor
mov
bound
cmpsl
and
sti
add
mov
sbb
and
sbbl
pop
xor
inc
cmc
adc
pusha
sarl
pushf
filds
outsl
xor
ss
xor
xor
stc
xchg
xchg
arpl
sub
aad
mov
insl
fs
rolb
and
and
dec
xor
arpl
xchg
cmp
sbb
mov
cmpl
pop
stc
lret
jmp
dec
shrb
jb
pop
push
cli
into
daa
jne
outsl
fs
push
mov
stos
negl
insl
add
xor
mov
sti
and
mov
cmp
cmpsl
sbb
les
and
mov
daa
xchg
cmpb
push
jge
sbb
dec
mov
imulb
or
mov
mov
push
inc
out
pop
mov
outsl
adc
and
cmpsl
push
lret
xor
mov
add
mov
push
dec
test
xor
cmc
xchg
xchg
jo
xchg
adc
popa
jmp
test
jo,pn
gs
adc
push
js
cmp
neg
cmp
mov
dec
inc
xlat
mov
int3
mov
xchg
dec
jno
lret
cmp
xchg
in
dec
nop
mov
mov
xchg
pop
ljmp
pop
data16
dec
cmp
or
int
pop
dec
mov
inc
testl
fs
xor
mov
jge
out
sub
cmp
add
jmp
push
fldt
dec
mov
jae
or
and
sub
and
pop
cltd
imul
pop
notb
jp
mov
cmpsl
les
pop
xor
fcomps
std
mov
and
jge
dec
pop
repz
mov
mov
iret
scas
int
jb
mov
cwtl
ret
pop
xchg
dec
xchg
gs
lods
js
sbb
in
fwait
lret
dec
out
dec
pop
pop
std
rcrl
sbb
mov
icebp
xchg
ljmp
jge
ss
not
mov
pop
insb
stos
and
jl
out
mov
in
sbb
push
cmp
pushf
adc
cmpsb
shll
xchg
sbb
push
xor
notl
push
dec
enter
push
repz
aaa
enter
dec
cmp
xor
popa
lret
les
xlat
fs
std
leave
jmp
in
sahf
mov
je
imul
xor
fists
sub
xchg
adcl
push
pop
mov
pop
jae
pop
enter
pop
fsubp
cli
sub
insb
jle
scas
add
data16
dec
pushf
push
filds
push
stos
mov
rclb
cmp
sbb
push
cmpsl
mov
std
sub
mov
gs
add
rorl
add
js
stos
xchg
leave
cmp
mov
call
push
xor
mov
jo
xchg
mov
or
cs
les
or
push
push
pushf
js
loope
sti
add
lods
clc
sbb
shr
in
adc
push
aam
adcb
scas
xor
in
addr16
pop
pop
adc
inc
std
mov
cltd
out
mov
je
icebp
jle
mov
inc
dec
sub
cmp
shlb
test
xchg
mov
and
es
movsb
cmp
lret
dec
cli
arpl
mov
or
xorl
lret
dec
dec
rorl
in
test
adc
mov
jb
mov
pusha
cmpl
xor
addr16
outsl
xor
jae
xor
mov
cmpsb
test
fistl
addb
stc
in
aaa
imul
scas
sbb
cmp
loope
lcall
pop
mov
or
add
dec
cmpsl
daa
or
jns
or
pop
movups
xchg
lds
dec
dec
or
dec
xor
shll
inc
popa
jmp
jnp
and
repz
inc
and
roll
xor
lret
mov
outsb
imul
fldt
or
das
and
mov
mov
stos
icebp
fmul
dec
or
cli
mov
mov
sub
les
ljmp
hlt
icebp
out
mov
mov
or
into
mov
loopne
in
aaa
push
testb
xchg
xor
add
cltd
int3
andb
loope
ljmp
jns
mov
mov
push
sahf
inc
pop
arpl
adc
sbb
dec
and
sbbl
jnp
or
les
out
and
gs
loopne
mov
add
mov
leave
insl
sbb
inc
jl
mov
mov
xor
mov
sbbb
and
iret
mov
adc
jne
jge
sti
push
sahf
dec
adc
mov
movsl
fnstenv
push
dec
mov
aaa
adc
inc
or
xor
aaa
loopne
sbb
arpl
outsb
or
add
lock
dec
inc
incb
cmpsb
test
pop
scas
lods
insl
dec
cli
cmc
loop
pop
pusha
jb
or
lahf
xor
notb
add
xor
cmp
jge
pusha
pop
mov
sub
adc
mov
scas
xchg
sbb
push
and
jl
call
test
mov
xor
mov
aam
ret
out
loop
fildll
xchg
jmp
in
inc
mov
pop
sub
pusha
push
cmp
xor
and
and
into
xor
sbb
adc
inc
mov
fwait
pop
mov
sbbb
add
in
and
inc
or
popf
test
push
mov
mov
orb
iret
jmp
loop
decb
sahf
sub
xor
arpl
scas
idiv
xor
shrl
ret
mov
xor
out
shlb
jnp
ljmp
aam
in
and
mov
sti
out
lret
mov
lds
jo
xchg
sbb
pushf
hlt
add
orb
dec
aaa
jl
test
push
outsl
pop
pop
sbb
rorb
sub
sbb
ja
movl
cld
nop
cmp
dec
jno
xchg
adc
push
clc
vmovdqa
sti
mov
push
lcall
fdivs
insl
jo
add
add
sub
testb
pusha
pop
and
inc
dec
mov
jecxz
xchg
inc
jl
mov
xor
in
cmp
jbe
dec
push
or
push
test
xorb
repz
inc
add
inc
aaa
pop
xchg
es
pop
mov
jo
aam
xchg
out
xor
xlat
sbb
inc
stos
mov
jo
or
mov
ret
sbb
pop
idivl
lods
aas
stos
dec
mov
push
enter
pop
mov
int3
mov
vpsadbw
lds
lret
xchg
in
imul
sbb
mov
xchg
sub
push
scas
arpl
mov
cwtl
cltd
push
fwait
cli
andb
leave
scas
mov
cmp
inc
dec
adc
pop
scas
ss
outsl
call
mov
push
out
test
adc
cmp
stos
fwait
jecxz
mov
cmp
pop
aas
lahf
adc
cli
popf
or
mov
fldl
inc
pop
jg
movsb
sub
xchg
addr16
cltd
jo
mov
cmpsb
mov
push
or
jno
jo
das
ja
into
in
mov
je
adcl
jg
inc
mov
add
in
jb
ret
inc
adc
into
rolb
inc
js
lcall
pop
mov
push
inc
jnp
ja
mov
cmc
push
in
jns
ret
ja
lcall
fadds
jmp
push
xchg
rcll
inc
notl
push
xchg
popa
fwait
mov
fcoms
jle
push
inc
or
loopne
and
leave
push
pop
xchg
aam
xor
jnp
add
mov
push
sub
movsb
aaa
mov
pop
inc
dec
mov
cmpsb
ja
out
int
fdivl
mov
nop
sub
mov
mov
into
pop
notl
push
test
inc
jnp
mov
or
mov
pushl
jnp
or
je
cwtl
pushf
pop
adc
mov
lock
cli
xchg
es
shr
mov
mov
ret
cmpsl
lcall
arpl
xchg
pop
in
adc
sahf
xchg
std
mov
testb
mov
adc
aad
loope
adc
and
mov
cwtl
sti
adc
lock
lcall
dec
sub
adc
mov
icebp
inc
call
xor
leave
nop
mov
add
fcoms
mov
push
out
sbb
insb
call
inc
adc
mov
aad
dec
adc
fsub
mov
cwtl
mov
mov
cmp
lcall
xchg
shl
subl
std
or
js
andl
or
outsb
popf
dec
cmp
bound
sub
push
cmp
push
ja
test
mov
icebp
scas
xor
cmpsb
dec
mov
pop
clc
daa
pusha
lods
push
dec
movsl
in
adc
jecxz
fsubl
push
sbb
pop
sbb
es
call
add
jecxz
jnp
loope
fwait
arpl
or
xchg
jecxz
cmp
jl
fld
les
shll
popf
jp
fdivrp
lahf
in
mov
loope
sbb
shlb
mov
pop
ret
jle
cltd
test
add
insl
mov
jnp
repnz
jmp
dec
imul
and
das
ljmp
je
out
mov
je
pushf
xor
and
aad
ret
loopne
or
aaa
dec
dec
shrb
adc
testb
fistpll
and
lcall
inc
outsb
in
addr16
stos
ficoml
fistpl
inc
sbb
ljmp
xor
mov
dec
mov
adc
jae
jnp
sub
dec
in
jns
mov
movsl
or
dec
out
shlb
pop
adc
out
xor
adc
ficomps
lret
pop
ret
repz
jl
mov
inc
xchg
enter
xorl
stos
ss
popa
jno
sar
mov
add
sbb
jge
sub
std
jg
adcb
or
add
cmc
ret
adc
hlt
js
jae
sub
push
stc
in
imul
cmc
enter
cmp
sbb
cmp
pop
lahf
je
int
stos
data16
jne
mov
lret
lahf
dec
fdecstp
adc
pop
test
fimuls
pop
jne
nop
repnz
dec
data16
dec
jbe
xchg
lock
push
into
inc
jg
test
vrsqrtps
jbe
repnz
daa
dec
mov
jns
jb
or
mov
out
fcmovbe
popf
popl
lahf
bound
mov
int
push
das
mov
pop
mov
dec
xor
or
mov
push
out
push
inc
xor
inc
mov
je
loopne
pop
popf
mov
fisubrs
outsl
inc
insb
test
or
pop
fsts
arpl
adc
leave
ret
adc
xchg
imul
cmp
shlb
push
xlat
or
cwtl
call
xchg
jmp
shr
sbb
pop
std
mov
adc
inc
into
outsl
cltd
fdivs
sub
cmp
cwtl
outsb
sbb
add
lds
cmc
pushf
test
cwtl
inc
leave
sub
insl
movsl
fwait
in
gs
out
mov
push
popa
ss
xor
sub
mov
dec
insb
sbb
jle
std
stos
aam
jl
cltd
ret
add
hlt
jp
aad
jne
xorl
shlb
xchg
and
add
or
push
lahf
cmpsl
pop
divb
dec
add
mov
cmpb
xor
aam
push
lock
pop
cmp
pop
jmp
pop
mov
in
push
cwtl
mov
sub
lock
fmuls
insl
cmp
xchg
cmpsb
push
test
dec
sub
clc
and
add
aaa
enter
fsubrs
xchg
or
adc
sbb
out
popa
inc
pop
mov
mov
sub
scas
and
push
stos
mov
test
adc
mov
jo
inc
sti
cmc
xor
cmpsb
je
mov
dec
lcall
scas
xlat
in
adc
cld
into
xor
scas
mov
ljmp
out
mov
sub
cmc
mov
pushf
mov
popa
xchg
fidivrs
dec
sub
dec
cmpb
ljmp
cmc
sbb
nop
ss
lods
cmp
filds
movsl
lcall
jns
sub
xchg
cs
sar
cs
sti
inc
das
call
mov
sbb
test
adc
push
test
subb
out
adc
int
adc
add
xchg
push
pop
sub
push
sub
and
shrb
add
mov
addl
jmp
or
cmp
add
ds
jecxz
xchg
adc
repz
cmpsb
outsl
and
xchg
cmp
lcall
sub
repz
hlt
mov
push
jns
shlb
hlt
sub
mov
fsubp
cmp
cmp
movl
ret
enter
add
orl
inc
cs
adc
outsb
call
mov
shll
push
sub
nop
in
mov
xchg
xlat
sub
sub
pop
bound
das
in
std
rcrl
pusha
inc
daa
mov
addr16
cltd
mov
sub
pop
dec
dec
jmp
lods
sar
lea
mov
psubusw
inc
push
and
xor
add
adc
jne
in
sbb
add
push
rcrb
mov
shrl
iret
popa
adc
inc
sbb
fwait
lds
jae
mov
sbb
add
jbe
xchg
inc
roll
pusha
cs
and
jge
mov
ret
gs
shl
imul
lods
dec
bnd
or
sbb
or
loope
pop
push
jle
mov
icebp
insb
subb
sub
dec
loop
pop
lods
das
out
jmp
ljmp
or
dec
push
push
out
cld
nop
sahf
mov
loope
or
in
xor
pop
mov
lods
dec
cmpsb
push
into
inc
add
and
sbb
jb
adc
nop
sub
icebp
dec
lret
ss
enter
jb
mov
fadd
push
aad
adc
test
aam
xor
sti
fdiv
shr
sarb
jo
xchg
add
dec
addr16
inc
fisttps
jmp
iret
xor
xchg
lds
imul
lcall
add
push
sbb
retw
cmp
les
arpl
push
dec
xor
lea
adcl
jo
aas
pushf
pusha
setl
sub
or
push
movsb
arpl
lcall
pushf
daa
add
jns
mov
mov
xor
out
dec
mov
ret
inc
jge
ss
lret
jne
jp
mov
and
movsb
and
adc
adc
lcall
insl
or
cs
mov
add
mov
orl
test
lea
push
dec
movsb
cmp
fcom
pushf
setbe
xor
in
stc
mov
cmpsb
adc
mov
mov
rolb
pop
rclb
jns
rcll
or
sbb
xor
shlb
lahf
and
dec
mov
dec
movsl
cmc
adc
popa
stc
pop
gs
loop
fildll
sub
sub
and
mov
int
ss
insl
xchg
and
mov
pop
outsl
adc
sub
popf
push
sti
fcomi
mov
sub
cmp
sub
ficomps
sbb
mov
ret
sti
ja
scas
movl
out
mov
inc
jbe
jne
cmp
mov
dec
insl
mov
pop
xchg
test
sub
xchg
pop
push
pop
sub
mov
sub
leave
pop
jmp
das
popa
scas
cmp
dec
dec
ja,pn
mov
ja
gs
xchg
scas
push
lock
sbb
scas
push
aas
mov
and
shl
or
iret
js
jmp
push
xchg
mov
push
dec
adc
sar
mov
or
jecxz
push
inc
dec
and
mov
ja
inc
adc
lds
stos
lock
mov
xlat
mov
xchg
or
push
leave
addr16
or
insb
and
lea
scas
pop
adc
cli
push
faddl
rorb
pop
lods
pop
push
sbb
jae
aaa
in
jmp
xor
jb
sub
xchg
gs
mov
sbb
add
adc
sub
jmp
jo
pop
xchg
lods
cld
rcl
fwait
push
aaa
sbb
insb
pop
outsl
fs
inc
imul
sub
insl
lock
xchg
sub
fldcw
lret
jecxz
test
lret
push
push
add
adc
pop
or
adc
jge
std
mov
aam
or
mov
fmul
sbb
mov
dec
aaa
inc
call
int3
inc
cwtl
add
dec
mov
stos
ja
sbb
inc
ret
push
xor
daa
or
sahf
rcll
mov
pushf
and
pushf
sbb
sub
mov
lret
pop
insb
insl
pop
or
lock
push
cmp
leave
js
and
cmpsb
movsb
push
icebp
cli
inc
cld
and
jns
rcl
add
inc
add
cli
inc
cmp
imul
bswap
test
and
mov
xchg
cmp
dec
xchg
add
mov
nop
sti
aam
divb
cli
pusha
xor
sbb
lcall
cmp
jp
mov
xor
xor
add
fbstp
xor
cwtl
outsl
cmp
adc
ljmp
xor
pop
cld
imul
pop
das
jns
dec
std
aad
mov
jge
fidivs
or
jbe
insl
sub
sbb
pop
fs
stc
push
or
cs
mov
adc
xor
test
mov
and
nop
sti
clc
movzbl
sub
btsl
inc
out
mov
das
mov
fcomip
sub
cmp
lds
or
push
pusha
jmp
mov
pop
insb
inc
sub
adc
fiadds
loop
nop
test
ja
xor
mov
sub
sti
lea
or
ss
or
fs
mov
mov
add
sahf
iret
nop
dec
rcrl
pushf
dec
lea
pushf
testl
and
lods
lods
inc
fwait
mov
xchg
into
xchg
adcb
imul
mull
mov
fldt
in
jge
popf
int3
jns
fnsave
inc
adc
mov
cli
push
xchg
stos
repnz
loopne
mov
and
cmpl
push
add
gs
fists
sbb
mov
nop
xor
jecxz
sub
mov
pop
gs
mov
fdivr
xchg
in
cmpsl
pop
aas
rcrl
jle
out
nop
ss
cld
outsb
cwtl
mov
ret
movsb
dec
inc
pop
shll
in
sub
sub
mov
pop
xchg
dec
inc
pop
push
test
jge
into
fs
adc
loope
loope
jno
mov
inc
dec
dec
dec
pop
cltd
or
sub
fsubrl
sbb
fcompl
jmp
mov
jle
jecxz
mov
stc
int
sahf
sub
rorl
incl
jno
or
xchg
xor
outsb
addl
loop
adc
call
in
pop
xchg
rclb
xor
call
mov
das
outsl
rolb
cld
aam
mov
loop
int
outsl
dec
iret
mov
rorb
ja
icebp
push
cmp
fldl
ret
lcall
gs
sbb
mov
in
and
xchg
mov
pop
jmp
test
mov
stos
outsb
fistl
mov
stos
loope
movsl
mov
mov
mov
insl
cmp
rcr
jnp
fwait
pop
daa
push
cmpsb
push
xchg
jecxz
cmpsl
and
xor
push
nop
push
xchg
sbb
mov
or
or
andb
ja
mov
scas
dec
adc
test
jmp
dec
test
push
arpl
mov
lret
dec
cmp
xor
cli
inc
je
js
fldenv
push
mov
jnp
hlt
adc
les
icebp
inc
jle
shll
adc
pop
movb
xor
xchg
fldl
jg
mov
cmp
inc
enter
jl
inc
int
sub
jmp
add
adc
in
inc
inc
or
push
sub
or
mov
push
jne,pt
mov
pop
mov
out
sarl
jmp
jae
subl
outsb
scas
sub
aad
iret
decl
inc
faddl
push
scas
cli
test
repnz
cld
repnz
rcrb
sti
iret
rorl
jg
mov
mov
ss
jg
jb
add
out
sbb
fadd
fisttpll
inc
mov
jp
adc
cmp
fists
and
pop
dec
mov
mov
cld
test
jmp
mov
adc
lcall
pop
push
or
mov
rorl
cli
jo
mov
rolb
test
popa
lock
xor
std
pusha
pop
pop
lcall
push
sbb
mov
mov
lock
out
stc
mov
xchg
enter
jmp
cmp
push
fstps
lds
iret
and
adc
sbb
in
imul
jo
fisubrl
je
mov
outsl
repnz
mov
cld
xchg
ret
xor
in
ret
mov
loopne
fisubl
or
imul
inc
test
dec
push
mov
or
mov
push
push
adc
les
cmp
scas
pop
jge
mov
test
and
mov
lahf
inc
pop
pop
test
leave
add
mov
jle
jp
add
sti
fidivs
mov
push
jno
inc
push
sbbl
pop
call
or
pop
gs
xchg
jge
popa
dec
jg
inc
mov
xchg
pusha
inc
es
xchg
or
stos
xor
lcall
mov
mov
push
adc
push
sub
dec
jg
jmp
fwait
aad
dec
pop
mov
jl
push
inc
sub
movsl
scas
xor
xchg
sub
inc
and
insl
push
loopne
test
mov
lret
sbb
fisttpl
int
cmpsb
pop
shlb
dec
sub
mov
ror
jp
push
pop
nop
scas
and
mov
out
movsb
mov
stc
dec
push
cmp
test
leave
dec
or
aaa
cmp
aam
add
popa
mov
jg
stc
aas
pusha
xlat
es
out
xor
jae
jns
fxch
jnp
adc
jl
push
mov
dec
jns
dec
dec
gs
pop
scas
loope
lds
in
push
and
dec
leave
pop
xchg
mov
pusha
lods
sbb
jb
add
pop
insb
and
popf
notl
xor
dec
outsl
inc
push
add
ret
xchg
pusha
or
jg
mov
cmp
add
inc
sti
aam
fldenv
pop
aam
pop
push
fnstsw
ja
mov
fldcw
xchg
roll
and
pop
push
das
cmp
and
xchg
je
jge
shrl
xlat
scas
in
and
push
bound
xlat
out
scas
out
ljmp
inc
push
test
test
fsts
jo
mov
idivl
sbb
int
or
scas
call
push
clc
add
inc
push
xchg
ljmp
push
imul
sti
std
cltd
test
or
rol
scas
clc
push
pop
jo
push
push
subl
and
clc
cld
sbb
rcl
lock
ja
sub
adc
or
clc
arpl
jp
pusha
jge
cmc
dec
sbb
mov
je
ja
in
test
push
mov
mov
jle
les
xchg
retw
gs
sbb
ret
icebp
mov
popf
pop
aad
fstps
cli
mov
enter
pusha
inc
mov
es
imul
rorl
sbb
pusha
in
lahf
test
arpl
movsb
push
push
gs
pop
cmc
mov
insl
push
fldl
ret
jl
add
pop
fldl
mov
add
jnp
mov
in
cltd
add
loop
or
pushf
std
hlt
xor
mov
mov
push
enter
mov
sahf
dec
sbb
push
push
mov
pop
mov
lahf
cmp
mov
ret
stos
pushf
jmp
mov
aad
lret
in
push
cmp
jl
sub
pushf
arpl
ja
inc
sahf
jmp
lds
leave
xor
lods
pop
int
push
dec
jne
adc
mov
lock
pop
xor
xorb
cmp
mov
arpl
sbbl
cmc
pop
nop
mov
ret
jmp
pusha
cld
popf
push
inc
mov
and
jo
xchg
sub
inc
mov
cltd
mov
jb
and
out
enter
rol
lea
imul
insl
out
call
js
xor
mov
mov
xorl
sub
aas
mov
shr
adc
lret
cmc
xor
xor
stc
xchg
inc
mov
cltd
loop
mov
or
iret
push
and
or
push
adc
call
arpl
fmuls
lahf
pushf
pushf
pop
mov
sbbl
sbb
sub
iret
sarl
sbb
mov
cmp
inc
repz
cli
sub
push
or
jns
mov
mov
or
sahf
ficoms
dec
pop
add
xlat
pop
mov
cld
sub
push
mov
faddl
adc
ret
aaa
push
ficompl
mov
fdiv
pop
loop
icebp
add
repnz
sub
lea
push
gs
test
push
mov
sbb
dec
xchg
roll
cmp
mov
or
cmp
mov
shlb
mov
add
rclb
sarb
xchg
pop
xor
mov
aas
mov
push
lea
je
test
ss
ret
adc
repnz
fisttpl
ret
fmul
cmc
inc
inc
pop
int
pop
movsl
pop
inc
icebp
addl
jne
scas
fwait
cmp
xlat
repnz
lods
das
push
dec
sbb
arpl
je
fsts
notl
iret
sti
por
dec
lds
or
xchg
repnz
repnz
out
add
xchg
xor
in
cmp
add
stc
mov
xchg
push
out
test
xor
pushf
sbb
adc
stos
jo
mov
out
inc
ss
test
ljmp
leave
into
lahf
xchg
or
test
push
iret
cld
jo
cmc
divb
sub
adc
out
cwtl
adc
or
addr16
pop
aad
hlt
leave
dec
incl
mov
adcl
pop
mov
test
cmp
dec
and
sbbl
ljmp
out
out
fisttpll
and
mov
enter
popa
outsb
shlb
cmp
pop
adc
pop
mov
in
jns
cmp
fwait
adc
mov
gs
mov
dec
insl
test
add
jle
ficomps
sbb
adc
enter
cmp
test
cmp
push
loope
scas
or
outsl
mov
push
inc
js
call
fstps
mov
and
cmp
icebp
adc
push
push
lahf
mov
dec
adc
jno
jecxz
and
aam
sbb
in
ret
dec
fdiv
xor
sub
inc
out
clc
add
push
out
xchg
divb
leave
sti
jnp
lea
adc
xchg
pop
ljmp
pop
inc
bound
inc
cmp
cmp
jns
xchg
int3
mov
cmc
loop
jb
mov
das
stc
xor
out
jle
scas
pop
ds
fisttpl
insb
aaa
faddl
rcrb
cs
push
dec
dec
add
pop
adc
sub
push
imul
lds
add
cmpsb
adc
iret
lock
and
xchg
push
and
sarb
hlt
sti
sub
gs
and
jmp
push
fbstp
push
ret
rcrl
ljmp
add
in
pop
cmp
xchg
jmp
sarl
and
cwtl
movsb
popa
notl
imull
jnp
pop
fstpt
js
lods
mov
or
fsub
std
jmp
xchg
cmp
filds
lods
mov
enter
or
lahf
icebp
in
sub
and
mov
movsb
push
icebp
push
sub
jns
sahf
sbb
test
mov
movsb
jle
pop
fcomps
rcr
adc
test
mov
mov
lret
push
mov
add
cmp
sub
pcmpgtd
xor
popf
orb
popa
lods
xor
in
scas
aad
mov
sbb
out
mov
sarl
mov
xchg
and
add
addr16
or
cs
lock
inc
mov
leave
xchg
jecxz
int3
mov
repnz
lods
add
add
fcomp
sub
push
cs
xor
ljmp
or
pop
and
mov
ret
mov
sarb
push
add
and
pop
adc
push
pop
pop
mov
add
dec
xlat
mov
pop
xor
pusha
add
or
push
sbb
push
xchg
inc
mov
push
lock
stc
mov
movsl
rclb
icebp
nop
loopne
scas
js
ret
dec
mov
sbb
mov
scas
mov
outsb
lcall
aas
mov
fsts
incl
adc
fdivrs
mov
pop
aad
cmp
mov
sarb
push
cmp
adcb
mov
push
lods
out
aad
inc
les
mov
mov
mov
enter
add
mov
test
cli
xchg
xor
mov
comiss
jmp
pop
aaa
dec
jmp
shl
int3
es
add
pop
pop
push
dec
cmp
arpl
jae
ss
pop
pop
mov
mov
fldt
mov
or
dec
stc
mov
fwait
test
inc
mov
add
cmp
wbinvd
mov
push
inc
adc
lahf
inc
fldcw
adc
mov
cmc
add
add
dec
push
nop
cmp
cmp
fcoml
dec
push
pop
cmp
les
outsb
roll
push
mov
scas
hlt
add
out
sbb
sub
add
lahf
jecxz
push
mov
sub
and
testl
and
out
jecxz
out
and
push
loope
or
adc
push
cmp
jle
out
dec
xorl
inc
fwait
add
or
lea
mov
in
dec
xor
fisubrl
mov
in
adc
xlat
mov
cmpsb
shll
sub
pop
lods
cmc
adc
int3
call
cmp
stc
cmp
gs
mov
insl
xor
stc
cmp
and
or
cmpsl
scas
jg
adc
mov
out
push
push
and
pop
push
mov
add
test
fsubs
dec
mov
mov
xchg
mov
dec
push
mov
jge
subl
jg
mov
cmp
ja
hlt
loope
ret
xor
lods
insl
pop
icebp
add
test
xor
mov
jo
mov
jbe
dec
scas
add
mov
cmp
adc
imul
sbb
mov
data16
rol
xor
sub
out
gs
xorb
pop
iret
jb
mov
sbbl
int
pop
pop
in
fwait
imul
push
mov
or
mov
fdivr
mov
cmpsl
xor
fldl
or
fisubrl
mov
shl
push
lock
addr16
mov
out
mov
pusha
dec
aas
scas
adc
rolb
sub
and
xor
cmp
stos
jp
sarb
jo
cmpsb
shl
xchg
pop
enter
lret
push
xchg
cli
ss
or
fs
push
add
xlat
movsb
lods
adc
stos
or
xchg
cmp
xchg
dec
adc
jbe
pop
out
shlb
cmpsb
or
sti
lods
xchg
sbb
sbb
mov
sbb
scas
push
pushf
movsb
and
or
adc
or
xchg
sti
jb
xor
cld
fwait
es
test
mov
lahf
clc
jl
dec
outsb
cmp
and
lret
dec
xchg
sub
enter
in
hlt
jl
xor
movsl
sub
sub
push
mov
jae
sbb
push
addb
sub
mov
sub
xorb
mov
pop
inc
lock
jmp
lods
push
push
pushf
add
or
pop
cmpsl
pushf
adc
test
popf
cmpsl
mov
out
aam
xchg
stos
and
push
test
in
sar
add
or
jo
pop
cwtd
mov
mov
js
fwait
packuswb
add
aas
jnp
gs
jge
jmp
inc
inc
mov
in
ss
lods
fcom
inc
sub
mov
pop
pop
rclb
mov
push
push
push
jno
pop
xchg
cld
stos
icebp
jbe
shrb
push
or
dec
shrb
mov
mov
sbb
adc
pop
adc
jg
pop
lods
mov
cmp
push
sub
in
fs
xchg
pop
sub
std
std
xchg
and
mov
imul
clc
in
and
add
adc
dec
sbb
stos
lcall
xchg
lret
stos
mulb
pop
or
push
std
mov
popa
push
fwait
into
dec
ret
jne
ljmp
scas
mov
inc
pushf
and
lret
lcall
jle
mov
xor
inc
mov
pop
inc
pop
and
out
cmpl
push
xchg
sbb
pop
repnz
sub
fsubs
int3
xor
cli
cmc
sbb
fld
jmp
xor
fists
dec
icebp
push
or
shr
sbb
std
cmpsb
repnz
rorl
jae
push
leave
js
or
imul
repz
cmpsb
ret
paddsb
sbb
divl
dec
scas
iret
loopne
out
add
test
pop
mov
dec
lock
xor
mov
push
cld
jae
scas
or
mov
fisubrl
xor
scas
data16
or
pushf
int3
adc
cmpsb
sbb
pop
jle
in
mov
bound
jbe
pushl
lahf
in
xchg
cs
lock
cmpsb
cmpsl
mov
jbe
jecxz
sti
jge
push
inc
jb
pop
add
stos
fwait
fs
and
loopne
mov
dec
rcr
jo
xlat
add
and
mov
fidivl
jbe
pop
pop
test
adc
je
mov
push
jl
push
outsb
mov
push
std
ja
stc
loope
cmp
sbb
push
push
dec
pop
loop
fsub
call
xorl
fcmovnb
and
adc
or
fcom
xchg
dec
imull
xchg
ss
cwtl
aas
gs
mov
sarb
push
adc
xchg
and
pop
push
adc
insl
scas
out
je
cmc
xchg
dec
pop
rcrb
sbb
and
sahf
js
inc
pop
dec
mov
adc
rcl
mov
xchg
mov
stos
mov
mov
ret
push
pushf
push
ljmp
adc
cmp
outsl
outsb
ja
stc
cs
pop
jae
fists
js
ret
cmpsl
and
repz
lsl
cmp
inc
and
lcall
adcb
cmp
dec
xchg
insl
or
xchg
mov
js
lock
adc
jnp
or
imul
add
mov
call
inc
out
jecxz
inc
fldl2t
repz
adc
lea
xchg
jne
push
lods
in
push
cli
sbb
dec
mov
mov
scas
lock
jae
scas
push
and
dec
dec
mov
sbb
inc
cmpb
mov
jns
sbb
jnp
mov
mov
lock
dec
jnp
adc
cs
add
imul
cld
inc
aam
jl
and
xchg
and
sahf
jae
cltd
mov
bound
adc
outsb
leave
mov
loope,pn
xchg
lea
mov
xchg
int3
ja
sti
rcl
xchg
aad
rcll
mov
fldenv
aam
pushf
lahf
jae
cmp
inc
cmp
subl
sbb
lods
cmp
pushf
cmpsb
lds
into
xchg
test
mov
int3
das
cs
and
adcl
mov
inc
sti
rcll
push
aas
mov
xchg
mov
hlt
push
out
xchg
jnp
mov
jmp
loop
mov
mov
inc
loope
xrelease
fsubl
xchg
test
adc
or
orb
loopne
cmc
fildl
addb
push
in
dec
lahf
jg
pop
xsha1
cmpsb
dec
and
xor
lods
loop
xor
push
push
iret
cli
mov
repz
xor
push
add
and
dec
sub
mov
jnp
dec
divb
cs
cwtl
jge
lods
js
and
xchg
xor
jo
fiadds
mov
inc
mov
xchg
and
in
pop
out
sbb
push
bnd
jnp
inc
mov
mov
inc
cli
das
call
mov
add
incb
sub
xchg
pushf
jg
hlt
push
inc
push
mov
roll
xchg
mov
sbb
imul
xchg
shll
cmp
negb
push
or
enter
iret
xor
pop
mov
jle
inc
pop
test
cmp
fdivs
cmp
in
fdiv
and
add
pusha
test
ret
inc
sti
stos
andl
out
notl
jnp
jae
add
subl
inc
push
lea
scas
outsb
inc
aaa
inc
aad
lea
sti
or
push
or
mov
ret
xor
dec
cmpsl
sub
out
dec
inc
mov
sti
push
jecxz
mov
xor
xchg
out
adc
mov
insb
adc
or
out
push
mov
cmp
and
pop
fidivs
lcall
test
subb
int3
pop
xchg
aam
je
pop
pop
sbb
lret
xchg
test
and
sbb
sti
stc
aam
xor
push
or
incb
out
cltd
ss
sahf
mov
xor
ljmp
outsl
dec
das
cmp
fildll
out
and
test
fucomi
lea
cmp
mov
in
mov
pop
push
popf
sub
test
sub
outsb
movups
rorl
mov
adc
pop
mov
pop
cwtl
dec
orl
lret
pop
xchg
mov
gs
imull
add
outsl
cwtl
out
mov
dec
lods
sbb
adc
xchg
pushf
js
in
push
cmp
sahf
fiaddl
aas
sub
cmpsb
adc
jnp
std
jmp
push
call
xor
pop
std
fisubrs
fsubp
xchg
push
sub
cs
nop
mov
out
hlt
pop
sahf
or
dec
fdivrp
sbb
push
sbb
jmp
daa
xor
stos
or
adc
mov
add
out
cmp
sbb
fdivs
outsl
sbb
lahf
int
xchg
out
xor
enter
push
shrl
add
jns
jae
lret
pop
sti
lods
addr16
mov
push
mov
and
pop
fcompl
outsb
xchg
addl
mov
mov
addb
shlb
cmpsb
lret
push
cmp
mov
movsl
or
sbb
leave
popa
jmp
add
lcall
lods
ret
ljmp
adc
dec
dec
xchg
and
mov
jbe
mov
xchg
add
fisttpll
push
ljmp
sbb
sub
push
sarl
xor
addb
stos
and
adc
jae
int
out
push
or
out
cmp
les
adc
and
sbb
inc
add
mov
jbe
jge
iret
out
pop
mov
or
shll
cmpsl
mov
paddsw
add
addr16
repz
push
movsb
and
xchg
jmp
push
xchg
push
or
push
push
scas
mov
fisubrl
ret
repnz
lret
fiadds
lcall
push
cmp
pop
jns
std
xor
pushf
and
adc
add
and
dec
mov
jg
add
push
push
lcall
les
dec
cwtl
js
sarl
aas
fwait
and
icebp
into
lock
xor
repnz
sar
and
fs
push
movsl
mov
push
jb
or
xchg
shlb
xor
mov
xlat
mov
dec
daa
ja
ret
xchg
aam
inc
adcb
cmpsl
dec
jg
xchg
jb
push
inc
mov
ja
or
stc
lea
and
pop
aad
ds
and
fdiv
or
xchg
es
xor
inc
mov
mov
shlb
arpl
push
pop
fidivs
ja
pushf
dec
testb
pop
or
jb
test
clc
in
sub
or
add
cmp
test
in
mov
popf
sbb
lcall
xchg
hlt
mov
aaa
es
and
je
in
jae
xchg
ror
push
xchg
or
sub
call
imul
jbe
clc
push
jge
jp
mov
rorl
mov
mov
imul
mov
push
adc
aad
sub
sbb
sti
ret
cwtl
pop
test
andl
lret
inc
jmp
mov
aas
jno
adc
out
and
sbb
jns
insl
movsb
cs
subl
cli
js
mov
fnstcw
rorb
fisubs
pushf
jo
adc
lods
notb
aas
xlat
inc
xor
movsl
sti
cmp
push
fsubr
movsl
jp
xlat
inc
rcrb
jl
out
aad
or
add
mov
jp
xchg
int3
xchg
aaa
gs
lret
jmp
fldl
mov
push
cmp
in
cltd
mov
inc
shlb
out
jnp
xor
dec
sahf
rcr
icebp
ds
mov
push
lock
mov
mov
add
loope
repz
pop
scas
jmp
icebp
addl
lds
jmp
cmc
mov
jecxz
cmc
fcoml
ljmp
mov
lods
int3
fcompl
insl
cltd
fneni(8087
pop
cmp
fdiv
scas
sub
imul
and
ret
lea
and
jns
adc
and
fdivs
dec
push
gs
lret
outsb
jns
mov
call
int3
rcr
lods
adc
pop
adc
popa
push
cwtl
rorl
mov
scas
cmc
push
mov
cwtl
dec
rorb
jle
mov
jg
icebp
sbb
pop
stc
fcoml
push
aam
test
aaa
lods
test
leave
jmp
cmp
lods
pushl
addb
and
ret
sbb
ljmp
imul
pusha
adc
adc
push
mov
and
jno
mov
lret
rcrb
sub
stc
mov
int
mov
shll
push
aam
push
dec
jp
xchg
xor
add
xchg
fucom
in
and
mov
and
dec
cltd
test
dec
pop
jmp
push
mov
cld
fcmovnu
dec
fisubrs
aaa
loope
rorl
mov
cs
push
push
into
sbb
push
xchg
dec
xor
es
testb
movsb
add
sub
sbb
jg
cmp
out
mov
repz
call
stos
loop
sbb
fmuls
xor
xor
sar
xor
arpl
xchg
pop
mov
push
fmuls
push
jns
ss
xor
xchg
and
xchg
mov
or
inc
testl
push
or
adc
loop
push
repnz
push
je
sbb
adc
mov
js
movsb
mov
imul
sub
cs
mov
lahf
hlt
dec
pop
cmp
in
aam
lcall
out
enter
call
mov
int3
subb
lret
mov
sub
adc
or
push
inc
les
daa
mov
int
push
jno
sar
fstpl
jecxz
std
out
mov
and
loope
out
dec
call
cmp
push
xor
sbb
movsb
jo
call
sbb
jno
repz
lock
add
in
cmp
xor
xchg
sub
fmull
je
push
jg
aas
push
mov
cld
in
jo
mov
inc
scas
inc
std
push
mov
mov
mov
pushf
in
lods
sahf
xlat
stos
sbb
rolb
or
mov
sub
gs
iret
scas
sti
xor
les
pop
add
arpl
nop
cmpsb
mov
mov
adc
mov
loop
imul
push
or
or
popf
rorb
mov
jns
std
enter
lock
cmp
loope
adc
sbb
les
dec
das
fstps
dec
je
out
shll
and
cmp
jmp
ss
daa
mov
hlt
jmp
pop
jge
das
mov
lods
mov
adc
out
dec
and
jnp
enter
push
mov
cmpsl
mov
add
mov
orl
mov
dec
dec
mov
cwtl
dec
mov
sub
jo
sub
inc
add
mov
lret
sbb
movsl
mov
imul
sbb
in
inc
shll
jmp
das
sub
add
fsubs
ret
arpl
mov
or
inc
add
push
in
shlb
jp
data16
or
or
xor
xchg
ss
pop
sbb
mov
movsb
fs
inc
jmp
movb
enter
jg
xchg
cmc
into
int3
cwtl
scas
add
adc
fdivrl
int
jne
sbb
xor
xchg
mov
jp
repnz
push
mov
sbb
jle
stos
xchg
pusha
jg
adc
pop
pop
shl
idiv
jno
loop
and
jne
popf
bound
dec
push
inc
or
mov
out
mov
sbb
cld
lods
fsubs
adc
inc
adc
ss
xchg
and
xchg
addl
inc
scas
sub
pop
mov
sbb
mov
mov
clc
adc
jecxz
out
and
mov
rcr
cli
fs
es
mov
inc
inc
arpl
push
enter
sbb
js
fmuls
mov
mov
scas
imul
sbb
cmp
jp
xor
push
loope
add
inc
jne
xor
pop
loopne
dec
mov
adc
leave
insl
stc
or
dec
int3
out
cmp
sbbb
xlat
dec
jns
stc
cmpsl
inc
gs
aad
mov
adc
adc
hlt
jne
mov
faddl
add
xchg
int
pop
pusha
daa
push
sbb
and
das
std
sarl
daa
jnp
mov
push
mov
sub
outsb
push
gs
clc
inc
movsb
jge
fildll
sahf
popf
pop
ds
xor
je
mov
lods
std
sub
pop
rorb
fwait
cmp
sub
and
add
call
test
mov
daa
div
lret
ds
insb
dec
mov
sbb
cmp
int3
pop
sub
rorb
ljmp
push
lret
aad
sub
sarl
add
jecxz
cld
pusha
popf
mov
shl
cmp
std
jmp
stc
adc
mov
stos
shll
or
push
add
cmp
subl
add
inc
jmp
mov
mov
hlt
xchg
jge
mov
pop
loop
iret
cmpsl
mov
mov
imul
push
and
mov
repnz
sbb
or
loope
stos
mov
fimuls
xor
dec
ret
into
xor
stc
mov
test
stos
jns
jbe
mov
pop
mov
xchg
xor
outsb
add
inc
gs
inc
adc
push
vpminsw
fisubs
in
das
adc
sbb
xchg
xor
push
or
fsubs
or
in
push
cltd
mov
adc
jp
jl
sbb
pushl
or
icebp
popf
pop
jb
js
mov
je
int3
dec
insb
push
and
test
push
daa
mov
jl
push
mov
sbb
test
mov
ret
pushf
cmpsb
scas
daa
or
fsubrs
jnp
int
inc
decb
jns
push
mov
push
cli
cmp
adc
xor
push
cli
cmpsl
ret
insb
jmp
lret
sbb
loopne
or
lret
push
jb
loopne
jbe
add
out
test
mov
ficoms
imul
rclb
mov
and
sahf
pushf
xor
cmp
repz
movsb
lret
pop
adc
cld
pop
push
pop
dec
arpl
into
popf
fidivrs
into
cli
mov
cmpl
jl
jmp
decl
xchg
push
adc
outsl
push
ds
jne
push
rcrl
sbb
std
lods
cmpsl
sti
lods
pushf
dec
out
inc
ljmp
repnz
sahf
iret
pop
clc
in
xchg
cs
mov
xor
cmp
subl
and
lods
aad
or
cmp
idivb
push
icebp
loope
rcll
lea
and
jl
pop
push
clts
repz
ds
cmp
out
add
pusha
jnp
orb
sbb
fbld
cld
aaa
dec
stos
aaa
mov
test
fnstcw
in
push
jle
or
subl
push
fcomps
mov
xchg
aam
mov
adc
push
fcom
sub
mov
mov
je
fs
aas
lea
cmp
sti
push
sbb
xchg
mov
cmp
fisubl
cmp
pop
dec
call
jg
xchg
sbb
push
dec
inc
and
xor
repz
dec
dec
xchg
or
cmp
mov
xchg
cmp
int
xchg
aam
push
xchg
xor
mov
dec
xchg
adc
std
insl
mov
fistps
xchg
stos
ja
cmp
fidivrs
outsb
jecxz
ret
in
mov
sbb
aaa
dec
shrl
dec
andl
jb
dec
jne
dec
push
sub
lds
ljmp
pushf
lock
pusha
jmp
rcll
ret
lret
or
ret
sti
lcall
stos
out
pop
sbb
sbb
js
inc
out
bound
jo
andl
and
fisttpll
pushf
ret
mov
push
outsl
ljmp
out
or
loope
sbb
out
jecxz
cmp
xor
or
cmp
jg
cmp
les
push
cmp
xchg
sub
pop
xchg
in
xor
fstl
jmp
scas
push
popf
jecxz
in
lcall
ja
or
lods
inc
bound
fwait
push
shrb
mov
push
push
test
push
mov
lea
sub
push
mov
dec
jg
dec
lods
pop
mov
test
lahf
rcrb
lods
dec
add
fmuls
push
jg
push
sub
dec
hlt
sbb
mov
fldt
out
adc
in
inc
loopne
rcr
pop
mov
mov
sub
fs
push
add
fdivs
or
jns
clc
mov
push
adc
sub
das
insb
mov
adc
mov
xrelease
and
mov
loope
mov
es
mov
jge
mov
jp
sbb
hlt
nop
push
aas
fwait
cwtl
xor
cmpb
and
test
loopne
lea
jns
in
repnz
in
or
iret
or
pop
adc
fisubrs
sti
cmp
sahf
rcll
test
fwait
mov
sbb
push
sahf
xor
test
cmp
shll
lods
je
movsl
sub
mov
push
in
leave
xor
sub
jno
int
pop
cwtl
cli
pop
sbb
push
mov
jecxz
add
ljmp
jg
stos
and
cmp
shr
mov
mov
lret
cld
mov
and
ret
xor
rol
inc
xchg
pusha
out
cli
adc
mov
inc
jnp
test
jge
xchg
xor
mov
outsb
rolb
or
xchg
sbb
xchg
cmp
add
and
hlt
loope
add
inc
cmp
aad
xchg
sub
jecxz
push
inc
in
fdivs
xchg
into
cmpsl
or
mov
fcoms
movsb
inc
sti
jmp
sub
mov
pop
dec
dec
push
and
cmp
mov
jge
cmp
cltd
push
pop
cwtl
dec
je
pop
inc
testl
xchg
icebp
adc
ds
push
movsb
mov
sub
adc
cltd
fsubrs
popf
lret
test
pusha
ljmp
dec
cmp
mov
xor
scas
in
sbb
stos
jb
sub
cmp
out
loop
imul
stos
mov
divl
inc
mov
lahf
adc
mov
mov
ret
mov
cmp
js
gs
or
ret
aaa
mov
sti
loop
inc
push
xor
xchg
pop
fcmove
mov
div
mov
push
mov
lea
out
mov
sbb
hlt
pushf
in
in
in
imul
adc
jns
jbe
mov
call
xchg
js
xor
xlat
mov
mov
lret
jg
repnz
and
pop
inc
add
into
test
push
divl
inc
xchg
jge
sti
inc
scas
push
es
and
ss
mov
push
push
sub
sbb
jp
mov
std
xlat
mov
shrb
mov
test
movsl
wbinvd
mov
cwtl
jecxz
outsl
scas
push
xor
or
xor
lret
cmp
shrl
mov
cmp
mov
shlb
jl
mov
sbb
fs
and
push
add
add
or
rclb
push
out
repnz
pop
sub
hlt
lods
lods
rorb
mov
ss
and
lret
cltd
adc
int
mov
movb
inc
cmpsb
out
or
xchg
mov
and
xchg
int
sbb
stos
xchg
lret
ja
inc
sub
ljmp
dec
and
fisubrs
fildll
sub
aam
gs
in
or
jne
out
dec
xchg
push
iret
add
out
mov
add
lret
dec
hlt
cmp
add
dec
imul
pop
mov
repnz
or
cmp
into
gs
xor
cmc
pushf
xor
loop
cwtl
xor
arpl
sub
or
int
sbb
repz
inc
xor
rorb
cmp
or
cli
shrl
add
repnz
cmp
mov
mov
sub
stos
lods
vmread
dec
rcll
mov
movsb
sub
cmp
jp
mov
pop
adc
bound
in
pushf
sti
xchg
jbe
in
cmp
rcr
js
inc
and
or
dec
loop
push
push
sub
stc
in
les
std
sbb
sub
add
pop
and
inc
lcall
xchg
mov
mov
xchg
out
fistpl
das
das
shll
fnstcw
repnz
pop
sub
movsb
cwtl
jp
cltd
popa
cltd
xchg
movsb
idiv
jp
dec
sti
jmp
out
test
cmp
jae
stc
mov
pop
or
add
daa
insb
add
std
add
out
scas
stos
add
fucomp
dec
or
cld
pop
pushf
dec
push
mov
sub
arpl
and
or
dec
out
ds
testb
in
repz
sti
lods
cmp
cmpsl
jecxz
mov
jae
lret
pop
jl
js
cmp
int3
xchg
xlat
cmpsb
scas
mov
and
pop
lret
cwtl
out
aam
add
imul
call
stos
pop
lret
mov
pop
pushf
mov
sti
pushf
ret
jne
and
stos
mov
mov
push
adc
mov
mov
fcmovne
mov
mov
sbb
jnp
mov
dec
sahf
nop
and
pop
dec
cmpsl
mov
add
push
add
jecxz
in
daa
test
xchg
aas
mov
fsubrp
xchg
or
jg
loopne
stc
jl
rclb
sbb
pop
dec
push
ljmp
pop
stc
data16
xchg
xor
into
pop
xor
rcrb
mov
inc
mov
add
cld
sti
into
imul
dec
jge
aad
xchg
xchg
icebp
fldenv
push
or
in
or
inc
data16
jns
enter
jmp
add
sbb
xor
mov
push
mov
mov
nop
or
mov
sbb
lock
add
mov
imul
cs
jo
ja
gs
fidivs
popw
jge
mov
testl
pop
mov
sub
lock
mov
hlt
popf
inc
mov
inc
repz
pop
mov
sub
dec
popa
gs
cmp
dec
movsb
rcll
leave
mov
je
aad
xor
mov
fidivs
xor
fidivrs
cmp
in
in
push
stos
pop
and
mov
insb
addr16
das
dec
movsl
imul
xor
push
les
cmp
movsb
stc
lock
xor
mov
push
mov
sahf
fs
and
popa
add
test
cli
push
and
mov
shlb
mov
pop
mov
push
orb
jle
or
jle
shrl
in
and
push
mov
sbb
add
or
push
lock
int3
and
mov
ds
and
xlat
jns
mov
fbld
roll
or
pop
aam
mov
jmp
mov
ds
dec
movsb
dec
inc
std
outsb
xchg
cli
mov
daa
cli
je
add
push
loopne
xchg
push
push
test
cmpsl
pushf
dec
mov
or
jno
inc
test
dec
ror
pusha
pop
ds
and
dec
and
cmpsl
xor
daa
aas
add
call
and
mov
add
popa
pusha
mov
aad
or
jae
or
mov
adc
add
mov
fildl
mov
nop
aaa
sbb
cmpsl
mov
imul
mov
inc
mov
xor
es
and
adc
dec
fwait
xchg
pop
jns
int3
mov
xchg
arpl
fimull
xor
jno
xlat
jle
push
adc
bound
push
push
ljmp
insb
xor
inc
cvttps2pi
mov
movsb
rcrl
inc
repnz
iret
cld
mov
pusha
or
nop
or
lahf
outsb
cmp
inc
je
cmp
test
dec
insb
inc
movl
push
dec
hlt
add
jecxz
imul
dec
pop
stc
jnp
xorb
xchg
lcall
cld
test
js
add
pop
shlb
inc
in
insb
stos
xor
mov
pop
dec
shrb
dec
int
movsb
adc
dec
fs
clc
sti
jl
test
lahf
ret
aam
push
or
inc
jmp
stos
jmp
ja
sub
ljmp
icebp
and
dec
and
data16
jle
sbb
aam
xor
dec
and
in
std
pop
adc
test
pop
mov
mov
pop
mov
mov
fucomi
out
mov
push
adc
movsb
stc
pop
cmc
jp
hlt
xchg
or
lods
push
mov
or
nop
flds
pushf
shrl
inc
jl
jne
lret
pop
push
pop
jo
jb
nop
lods
daa
or
fimull
cmpsb
jge
xchg
dec
cmpsb
dec
enter
jnp
ds
pop
mov
out
pop
mov
dec
addl
lcall
jns
andl
sub
addr16
or
push
pop
popf
fs
mov
outsl
mov
inc
repz
sub
iret
insb
lcall
pop
stc
fstpt
pop
and
imul
aad
popa
mov
jns
inc
popf
mov
movsb
mov
jge
jl
jmp
mov
jmp
nop
pusha
lahf
fwait
sub
inc
cli
lea
add
sub
je
or
sbb
rcrl
ds
and
cmp
fmull
repnz
pop
xchg
inc
mov
sahf
push
adc
sub
test
push
sbb
insb
xor
push
out
mov
push
test
push
int
add
shl
out
pop
enter
push
stos
jge
lahf
aaa
and
adc
mov
repnz
pop
dec
out
and
dec
adc
pop
stc
je
xchg
inc
mov
lods
aad
push
pop
cmpsb
push
cwtl
arpl
gs
push
add
push
mov
and
xchg
cld
xor
jne
dec
sbb
fstpt
in
add
dec
and
inc
mov
mov
push
inc
mov
mov
popf
xchg
cmp
mov
pop
lds
int3
inc
sub
mov
mov
sub
aam
dec
or
pop
xchg
jb
push
pushf
xor
mov
inc
repnz
cmp
imul
xchg
jg
jae
mov
xor
js
dec
inc
repnz
lret
jno
cld
mov
xchg
push
in
sub
ds
out
mov
sub
aam
pop
xor
leave
rorb
inc
push
aad
movb
orl
inc
fld
fidivrl
js
pop
js
mov
fdivl
add
fsubl
mov
daa
inc
or
lret
pusha
aad
mov
push
icebp
mov
hlt
lods
add
mov
mov
mov
or
pop
push
mov
dec
adc
or
cmp
dec
push
imul
stos
inc
fsubr
sbb
jae
inc
jae
jne
push
das
add
insb
sbb
mov
push
leave
mov
shrl
xchg
bound
daa
test
pop
dec
and
mov
xchg
icebp
call
add
push
popa
in
add
stc
shrb
cmp
adc
adc
push
adc
add
test
cld
fldt
mov
into
xchg
lret
fsts
pop
cmp
add
add
sbb
rolb
arpl
lret
jge
mov
jle
loope
out
xor
push
jbe
aam
or
pushf
sbb
inc
stc
into
xor
movsl
mov
imul
mov
dec
pusha
adc
or
aas
cmc
sarb
rcrb
or
ljmp
xor
nop
dec
ljmp
orl
das
jle
xor
mov
pushf
test
mov
mov
pop
inc
inc
les
jle
loopne
xchg
cmpsb
out
in
test
cmc
das
cmp
jmp
mov
xchg
fbld
jo
push
outsl
int
sbb
mov
inc
sbb
lret
loop
sub
push
xchg
loope
jp
mov
leave
cmp
sub
push
sub
mov
cmpsb
push
pop
fabs
xchg
xor
enter
cld
mov
scas
test
shl
stos
push
xchg
mov
mov
or
mov
jns
jnp
repz
mov
add
push
shll
push
cmp
pop
inc
insb
inc
mov
xchg
xor
or
loop
iret
xor
inc
cli
lds
mov
fiadds
or
xchg
xchg
daa
mov
in
aam
call
xchg
test
sub
popl
loopne
repnz
xor
push
push
je
mov
call
orl
iret
pop
xor
pop
xor
xchg
or
fldl
loope
mov
xchg
mov
fndisi(8087
dec
stc
push
push
xchg
add
cmp
xor
aaa
in
movb
cmc
sahf
in
jbe
jecxz
push
pop
fisubrl
xchg
arpl
repz
es
test
sbb
repnz
lock
fisubrs
pop
ja
sbb
out
test
inc
outsb
mulb
insb
clc
jb
das
mov
sub
ret
test
add
in
shrb
das
rcr
sbb
sub
stc
push
fisubrs
add
dec
lock
inc
scas
add
in
fcomip
data16
into
add
inc
sbb
adc
mov
inc
cwtl
adc
sub
negl
xchg
mov
test
aaa
push
mov
and
xlat
addr16
push
cmc
ljmp
aam
fs
ja
scas
inc
frstor
jns
push
cmp
fucom
push
push
and
push
outsb
loop
jmp
nop
sub
nop
out
fldcw
test
xchg
mov
jecxz
cmp
sahf
leave
cld
int
dec
movsl
cmp
test
es
fstps
leave
fwait
mov
xchg
push
xor
sbb
insb
pop
in
mov
test
lds
xchg
push
inc
fs
push
jl
or
rolb
stos
mov
mov
mov
mov
rorl
in
cmpsb
cmpsl
dec
mov
jb
inc
loope
icebp
mov
cmc
lcall
jg
xor
dec
xor
push
cwtl
loop
insl
mov
mov
repz
xchg
outsb
and
and
sub
iret
sar
test
pushf
mov
sub
orl
cli
or
sbb
out
imul
pusha
jae
lea
shll
roll
gs
sbb
or
or
cmp
repnz
fstl
push
xor
sub
dec
mov
rolb
inc
ret
cwtl
out
mov
sub
pop
mov
and
add
sbb
jnp
lods
adc
and
mov
jno,pn
xchg
sub
sub
xchg
fnsave
mov
adc
xor
add
xor
and
mov
ret
xchg
stc
loope
idivl
lcall
fstl
jnp
ficoml
mov
test
ss
sti
cld
mov
aaa
push
mov
and
mov
push
dec
ret
mov
iret
mov
call
out
or
enter
and
or
cmpsl
push
repz
sub
and
jecxz
mov
sub
xor
sbb
add
dec
sbb
mov
arpl
xchg
fsubr
xchg
hlt
lds
outsb
push
repz
fisubrs
pop
mov
cmp
mov
mov
data16
cmp
ret
xor
mov
xor
add
fs
test
scas
push
mov
pop
add
or
or
add
and
std
pop
in
outsl
int
xor
mov
fidivrs
jns
pop
push
scas
testb
fstp
pop
mov
roll
push
mov
add
daa
cwtl
test
and
or
scas
aad
lods
mov
lods
xchg
xor
es
adc
movsb
dec
vmread
pop
xor
mov
lret
ret
mov
and
repz
fimull
sbb
cwtl
aaa
scas
sbb
popa
or
add
xor
jns
adc
cmc
mov
jno
loopw
cmpsl
sbbl
stos
sbb
ljmp
repz
pop
add
mov
dec
push
pop
jge
xchg
and
stc
xor
enter
stos
scas
stc
push
and
addr16
scas
or
pop
rol
imul
rcl
sbb
outsl
cs
and
cmpsb
mov
fimuls
pop
insl
or
jb
repnz
mov
data16
les
xor
xchg
aaa
dec
add
and
pop
roll
push
xchg
xor
xchg
fnstenv
dec
or
and
call
outsl
pop
pop
cmp
inc
arpl
jle
dec
cwtl
add
or
or
sarl
jecxz
adc
and
sarl
hlt
out
das
fnstcw
mov
cltd
cwtl
or
in
lods
into
mov
or
ss
fcomps
mov
push
jns
push
mov
mov
enter
or
notl
popa
jns
aaa
pop
scas
enter
mov
adc
into
inc
xchg
sub
push
mov
rcrb
pop
and
xchg
sti
or
ljmp
dec
leave
sub
popa
cmp
xrelease
add
fwait
cli
pop
fcoml
daa
sti
out
ja
in
int3
ja
fnsave
cmp
sub
and
sub
out
pop
push
add
lds
add
out
inc
add
mov
mov
push
mov
icebp
mov
cld
mov
nopl
dec
mov
fmuls
out
sti
mov
jmp
outsb
lahf
xchg
scas
mov
push
sub
loopne
imul
cwtl
and
mov
shrl
jns
sahf
out
push
and
in
into
lcall
stc
lret
sub
dec
std
mov
mov
or
sub
pusha
clc
ja
jnp
adc
es
sub
cmp
lret
jns
xor
dec
cmpsb
ret
mov
out
or
lcall
daa
jb
iret
cmc
cmp
cmpsl
and
gs
arpl
notb
fiaddl
dec
jp
fbld
jns
mov
push
fcomp
adc
out
pusha
lds
jnp
sahf
lods
xchg
and
cmp
daa
mov
mov
and
hlt
mov
xlat
test
and
orl
xor
mov
icebp
lods
cmp
xchg
aam
mov
fldenv
jp
lcall
cmp
pop
fistpll
flds
shlb
es
mov
bound
cmpsb
icebp
cmp
ret
sbb
adc
test
cld
ja
outsl
lcall
mov
inc
ljmp
xor
adc
lds
lods
fs
shl
std
push
add
stos
sub
pusha
mov
push
inc
sub
faddp
mov
mov
aas
aaa
dec
xchg
add
mov
jge
loopne
or
fwait
loop
rolb
xchg
loopne
xchg
movsb
sbb
cmp
xchg
invd
cmpsl
push
push
cwtl
leave
dec
mov
les
xor
sub
jno
adc
inc
movsb
dec
inc
sub
pop
lods
sbb
push
je
cmp
inc
loop
sbb
push
pop
or
mov
shlb
mov
xchg
ret
leave
mov
ret
sbb
xchg
es
sbb
shll
enter
dec
mov
cmpb
scas
rcll
or
push
ss
push
out
adc
mov
jg
shrb
test
pop
cmp
pop
mov
fs
je
sbb
stos
xorl
repz
inc
bound
and
subb
sbb
int3
lock
aad
mov
mov
pop
aas
or
xor
int3
repz
push
iret
jnp
pop
out
sarb
fwait
mov
jp
dec
mov
jne
pop
mov
test
aas
jbe
or
jge
lea
loope
pushf
stos
loopne
lahf
cltd
out
fcomps
lock
lret
pop
ja
pop
sub
call
lock
cmp
push
jns
mov
in
dec
mov
add
sbb
mov
push
test
jp
fisubl
push
xor
mov
cmp
lcall
pop
add
jae
xor
stos
test
dec
and
fnstenv
lcall
dec
sahf
and
adc
imul
inc
insl
stc
adc
inc
add
push
push
inc
lcall
test
lcall
subl
pop
fnstenv
addb
out
jae
and
cld
pop
add
adc
sub
sub
fldenv
negb
aaa
inc
sbb
or
and
sub
mov
mov
dec
pop
push
std
cli
fnstenv
sub
or
test
popa
fnstenv
cld
and
xchg
test
jl
movsb
mov
and
filds
stos
mov
sahf
sub
popa
arpl
aad
lods
add
xchg
stc
and
lds
lret
aad
and
dec
in
pop
cli
movhps
sub
stos
pop
insl
jl
xchg
sahf
movsl
xchg
push
popa
imul
xchg
mov
aam
mov
jl
adc
add
loope
js
sti
or
fcmovnu
xlat
xchg
mov
push
cwtl
cmp
aam
popf
roll
into
cmpsl
pop
mov
add
lods
call
mov
mov
addr16
dec
jl
aam
arpl
cwtl
aam
cmc
sub
push
pop
insl
mov
jg
jecxz
mov
pop
divl
cmpsl
cmp
add
pop
xchg
repnz
push
out
sbb
loopne
pop
int3
pop
loop
dec
std
scas
cld
divb
int
push
jle
sub
fimuls
enter
int
mov
or
mov
ds
pop
fxtract
aam
rorl
das
sub
fadds
fcmovnbe
das
mov
push
arpl
and
mov
xor
scas
jbe
sub
cld
out
int
push
pop
ret
push
adc
push
xor
gs
sub
popf
inc
xchg
stos
sahf
adc
mov
jge
push
lret
jge
jne
cmp
sub
sbb
cld
xchg
test
xchg
jle
push
shl
in
frstor
fidivl
data16
pop
xor
dec
cmp
movsb
sub
scas
mov
pop
lods
sahf
shll
add
add
sbb
mov
mov
rcll
out
jns
out
jecxz
divl
and
and
and
imul
out
enter
pop
or
pop
ljmp
lods
jle
cltd
rolb
and
mov
cltd
bound
push
pop
ret
sbb
jg
and
out
call
mov
inc
aas
cmp
dec
lret
inc
xor
test
cmpsl
adc
sub
jne
fisubl
mov
fwait
test
scas
xor
mov
inc
cltd
push
lea
cmc
lods
vpaddd
cmc
out
xchg
adc
sub
jb
xor
fsts
loop
cmc
pop
pop
and
fs
lods
pop
test
adcl
in
xlat
xchg
mov
sbb
xor
mov
js
in
sub
pop
sbb
aaa
loopne
cmp
scas
sub
shlb
repz
add
std
add
roll
mov
push
movsb
jle
mov
sbb
push
add
xchg
fmuls
test
std
cmp
out
nop
and
xlat
loop
fadd
popf
xor
insb
sbb
les
cltd
mov
cltd
stos
arpl
lahf
mov
iret
sti
cmp
sahf
imul
js
dec
repnz
push
fistpl
stos
int
incb
mov
cmp
les
inc
mov
and
and
jg
fisubrs
jns
add
sub
lods
loopne
mov
loope
sub
cld
roll
cld
and
mov
xor
dec
les
fbstp
jnp
lea
cmpl
and
stos
sarb
into
daa
xchg
movsl
add
divl
pop
cmp
es
sub
sub
cmpsb
test
mov
je
mov
in
push
cmp
lahf
add
inc
mov
and
dec
mov
scas
sbb
add
cld
fsubrl
sti
sub
xchg
adc
inc
lahf
popf
adcl
and
mov
hlt
leave
adc
xchg
jno
mov
cs
mov
pop
and
sbb
cli
xchg
movsl
aaa
pop
test
dec
xchg
push
scas
add
rorl
mov
out
ja
push
or
push
lds
xlat
cmp
int3
or
push
sub
popf
js
adc
mov
push
das
gs
inc
pop
ret
mov
mov
es
sub
push
and
add
je
pmuludq
add
scas
jnp
inc
dec
ss
cmp
sub
enter
dec
addr16
sub
xor
nop
xchg
cmpsl
aam
rcl
sbb
lcall
adc
ds
push
popa
in
xchg
insl
in
cmp
fists
mov
daa
pop
xchg
js
jo
sub
inc
lcall
xchg
filds
jle
and
cwtl
jp
aam
test
shlb
clc
xor
mov
xor
lahf
cmc
dec
cmpsb
mov
data16
std
xor
arpl
xor
xchg
hlt
add
in
xchg
notb
call
dec
xor
pop
mov
movsb
int3
in
inc
xchg
or
iret
aad
ja
sti
std
push
add
xlat
int
push
xchg
push
rcll
mov
fldt
or
ljmp
out
xchg
or
bnd
loop
das
xchg
dec
xor
cltd
test
out
sbb
fxch
scas
nop
sbb
inc
setp
sti
into
push
mov
cmp
and
xorb
xchg
xchg
cli
xchg
adc
lret
sarb
mov
xor
bound
das
mov
out
mov
mov
mov
mov
pop
cmpl
dec
push
cld
fldenv
inc
outsb
leave
div
aam
ret
mov
aam
or
cmpsl
pop
jg
leave
add
imul
fwait
movsb
test
rcr
lea
mov
cmp
iret
repnz
cmp
inc
xchg
sub
and
ret
add
add
imul
dec
scas
mov
ret
jbe
fcmove
add
jns
in
lcall
repz
cltd
iret
enter
addr16
gs
cmp
ljmp
push
xchg
aaa
xor
mov
mov
test
xchg
cmpl
scas
out
aad
fwait
cmp
mul
xchg
scas
or
adc
pop
pushf
dec
jmp
xor
mov
fwait
and
push
mov
and
mov
jo
xchg
xor
scas
mov
test
mov
push
in
test
sbb
cmp
cmpsb
stos
mov
add
imul
in
or
or
inc
cmp
add
decl
pop
andb
mov
icebp
push
jno
sarl
push
add
cmp
in
lods
test
repnz
jg
repz
sarb
sbb
add
pop
add
or
cmp
mov
cs
shl
lods
xchg
rcll
inc
mov
inc
xor
iret
aam
xchg
js
popf
push
loopne
push
jno
push
mov
data16
cwtl
cmp
mov
in
flds
dec
cmpsb
xchg
mov
test
ret
bound
in
packssdw
dec
dec
adc
dec
cs
inc
loopne
push
daa
fwait
xor
jbe
incl
daa
sbb
test
xor
dec
pop
sub
int
mov
sub
sub
push
push
or
cmp
inc
add
pop
mov
cmp
dec
out
mov
fisubrs
sbb
xchg
out
push
adc
daa
out
jle
xchg
inc
or
xchg
lods
in
cmp
push
jnp
jle
jg
pop
imul
inc
shrb
sbb
loope
cli
xchg
mov
testb
dec
mov
sbb
push
imul
sbb
add
bound
pop
mov
jle
in
fdiv
ret
mov
add
test
jno
int
lret
adc
jae
mov
les
aam
jmp
xchg
sbb
ds
or
in
test
dec
cmpsl
pop
xlat
and
dec
push
push
into
cmp
cmp
addr16
inc
inc
lret
add
fucom
movsl
rorl
xchg
mov
mov
mov
mov
xchg
sub
mov
pop
cmpsl
jecxz
pop
push
nop
cmpsl
xchg
in
cmp
add
push
popf
cs
pop
sub
je
arpl
lcall
lret
pop
or
rcll
nop
pop
jnp
mov
fstpt
pop
pop
rcrb
mov
lea
jns
nop
push
inc
nop
or
enter
sub
push
sbb
cmpsb
jp
mov
subb
dec
loopne
popf
clc
jg
add
in
inc
xchg
mov
loope
mov
and
push
repz
sahf
xchg
dec
push
xor
fdivrs
pop
out
mov
inc
push
popf
mov
push
jle
daa
or
mov
dec
not
mov
push
adc
xor
mov
fnstenv
sbb
fsubrs
sbb
pop
or
and
fsts
cmp
mov
jo
das
loope
in
adc
aad
add
mov
scas
cwtl
mov
cltd
cmp
shlb
scas
add
push
mov
insb
xchg
jo
inc
pop
and
jo
mov
inc
push
mov
pushf
push
adc
dec
sahf
int3
cmp
adc
bound
add
iret
inc
mov
clts
ds
add
xor
call
dec
adc
push
loopne
jl
xchg
inc
add
push
pop
daa
int
bswap
enter
fwait
xchg
test
pop
notl
mov
rcr
add
lret
push
cmp
pop
push
sahf
and
mov
mov
sub
outsl
bound
into
push
push
insl
mov
sbb
fs
xor
xchg
sub
add
jnp
pop
dec
das
inc
pop
xchg
mov
lock
scas
mov
rep
push
int3
sti
andl
lods
cmp
sahf
dec
lds
test
push
fwait
xchg
add
pop
xlat
fistps
test
sub
cwtl
jp
pusha
test
fsubrs
mov
fidivrs
or
ficoml
popf
loopne
xchg
lret
mov
std
inc
mov
call
cltd
push
dec
imul
jae
or
dec
adc
xchg
lds
int
test
cmpb
push
sbb
arpl
ljmp
icebp
mov
into
or
cmpsb
pop
add
mov
lock
adc
into
push
aad
bound
mov
das
pop
xchg
jbe
stos
lahf
push
test
lock
pusha
cmp
stos
sub
xchg
adcb
adc
stos
jge
hlt
push
jns
and
fadd
or
mov
mov
sbbb
sub
sahf
sti
lcall
sbb
xchg
mov
push
sbb
mov
push
hlt
inc
adc
shlb
imul
and
sbb
sahf
pop
inc
pop
pusha
into
jae
jl
pop
and
sbb
xchg
pop
fimuls
add
mov
dec
hlt
imul
ret
sbb
enter
test
ret
xchg
push
push
adc
adc
or
daa
xor
pop
enter
movsl
sbb
bound
shrl
je
or
push
inc
imul
repz
loop
dec
sbb
cmp
dec
pop
push
jecxz
jno
outsb
mov
ds
mov
inc
js
cmp
and
jle
cli
cmp
nop
mov
fsubrs
push
or
push
iret
mov
mov
jl
test
dec
imul
xchg
sti
arpl
adc
jae
imul
cmp
and
jnp
jecxz
mov
mov
mov
insl
mov
dec
push
jbe
movsb
into
jbe
lcall
or
in
push
in
adc
jmp
out
hlt
rcrb
sub
xchg
mov
stos
scas
add
cwtl
jle
repnz
cli
ljmp
mov
loope
sahf
pusha
cs
dec
and
inc
pop
aaa
dec
push
mov
daa
notl
dec
sahf
xor
popa
imul
sub
mov
test
in
pop
shl
prefetch
jl
aaa
push
fimuls
pop
inc
mov
xor
or
pop
lcall
mov
dec
mov
in
sbb
pop
movsl
fsubrl
sub
mov
add
cmpsl
fdivrs
push
cmp
sbb
xor
fwait
push
cmp
xor
ljmp
jb
dec
and
xor
push
repnz
lahf
mov
iret
and
adc
jno
xor
adc
or
inc
or
gs
jge
jns
pop
imul
mov
sbb
mov
fisttps
insl
ret
fstpl
sti
sbbl
decl
pop
pop
into
in
mov
test
lea
push
iret
push
inc
jle
adc
mov
mov
cmp
in
mov
push
popa
pop
aaa
fsts
aas
icebp
arpl
shrl
or
cmp
push
jbe
add
imul
mov
scas
into
and
mov
dec
mov
mov
ljmp
or
add
stos
pop
mov
repnz
fistps
in
out
scas
xchg
negl
xor
xor
fwait
leave
xchg
push
push
je
stos
xchg
add
clc
xor
and
rolb
imul
mov
mov
in
inc
cwtl
xchg
jo
mov
xor
loopne
addr16
orl
mov
xchg
inc
jmp
inc
mov
inc
jne
mov
mov
pop
ljmp
int
pushf
js
mov
and
icebp
in
push
mov
push
in
push
jnp
mov
movsb
outsb
js
sbb
lods
cwtl
pop
repz
in
add
ja
cltd
inc
sbb
pop
fildll
push
push
lcall
loopne
sbb
loopne
scas
sti
out
shrl
push
xchg
xchg
push
cmp
movsl
sti
add
push
xchg
jae
int3
xchg
aaa
enter
pop
mov
pop
mov
fwait
push
dec
lods
inc
sarl
xchg
sub
lret
stc
shll
rorl
cmp
add
jns
adc
fsubrs
test
jmp
pushf
in
sub
arpl
add
fnstsw
movsb
bound
aad
ljmp
fdiv
and
inc
hlt
popa
sub
add
sbb
adc
xor
xchg
fisubl
fucomi
xor
ror
xor
or
push
aad
add
popa
dec
sbb
lds
dec
dec
xchg
mov
daa
out
mov
push
lods
aaa
pusha
mov
jno
cmp
adcb
sub
into
addr16
or
dec
jnp
int3
fucom
xor
movsb
mov
or
insb
sbb
rcll
int
les
jl
xchg
add
insl
dec
aam
add
lods
push
adc
or
push
jno
xchg
lahf
xor
and
jl
in
jecxz
cltd
mul
lcall
push
aad
mov
subb
mov
xchg
mov
xchg
dec
neg
push
andb
cmp
mov
sbb
insl
mov
lret
or
movsl
cwtl
or
loopne
inc
xchg
rcrl
testl
push
fwait
lock
imul
adc
fidivs
jmp
loopne
lcall
movsl
js
data16
or
jbe
lahf
rcrb
out
fstpl
lods
leave
add
cmpsl
dec
xor
xchg
or
mov
cmp
xor
cmp
pop
mov
pop
mov
mov
pushf
mov
adc
mov
and
nop
fcmovne
aaa
jle
pop
xchg
cmp
pop
push
enter
push
jo
stc
mov
test
rcl
pop
mov
push
or
jecxz
je
and
cld
imul
loop
std
aas
inc
in
mov
pop
xchg
fcomi
adc
stc
sarb
stos
fdivl
or
mov
mov
in
js
xor
iret
mov
pusha
adc
enter
sbb
lods
push
ror
adc
icebp
jb
mov
mov
int3
les
mov
add
frstor
sbb
mov
imul
add
cwtl
imul
cltd
hlt
or
xor
adc
jge
mov
mov
pop
jne
lea
and
out
gs
adc
in
push
mov
jnp
xchg
jecxz
add
out
cmc
cld
mov
push
call
daa
iret
sub
ljmp
jge
das
orl
and
aad
cmp
adc
push
pop
push
xor
lcall
sbb
mov
push
cmpsb
cmp
dec
xchg
pop
mov
daa
cmp
pop
cmp
sub
mov
andl
xor
call
sbb
rclb
or
mov
lock
ficompl
movsl
pushf
cmpsb
in
enter
add
push
jno
xor
dec
mov
xor
in
out
push
std
and
and
sbb
js
mov
mov
subl
cltd
sbb
addb
push
add
pop
dec
insb
pop
leave
add
pop
pushf
fmul
les
jnp
aas
adc
mov
ficoms
jl
cmpsb
xor
push
vpcmpeqb
dec
imul
movsb
adc
add
adc
mov
cltd
sub
xor
cmp
repz
shrl
inc
mov
ss
je
mov
sub
movsb
xchg
movsl
call
ret
cmp
inc
dec
lea
jmp
push
sarb
int
adc
sbb
fistl
xchg
or
in
in
imul
dec
and
nopl
xchg
pop
imul
cmpsl
inc
leave
dec
xlat
dec
dec
cmp
rclb
cld
pop
popa
sbb
stos
and
xor
mov
cmp
js
andb
pop
mov
sub
lea
gs
jnp
add
sbb
mov
mov
cmp
loopne
adc
fstps
ds
cli
fmull
mov
pushl
pop
lahf
clc
icebp
in
jl
adc
lock
sub
xor
call
hlt
cmp
push
test
jb
stos
or
mov
xchg
xchg
inc
pop
hlt
pop
or
mov
inc
cmp
or
mov
out
inc
cmp
xlat
call
jae
test
jns
xor
and
xchg
mov
adc
and
cmp
ja
xchg
or
sbb
or
push
fcmovnu
hlt
push
cwtl
shll
popf
or
jl
das
add
pop
dec
into
loope
sub
xchg
dec
out
incl
dec
pop
push
lret
jae
jmp
lock
jle
rcr
shr
or
xchg
mov
xchg
jecxz
in
sbb
mov
xor
inc
add
in
bound
sti
push
psadbw
shrl
nop
mov
push
mov
xor
mov
ret
pop
icebp
into
int
xchg
loop
fldcw
mov
jl
sub
and
insl
in
add
scas
cmp
ljmp
sub
jae
xor
push
cmpsb
loopne
movsl
lret
jne
cmpsl
stos
pop
icebp
xchg
adc
or
imul
jmp
dec
pop
jmp
jge
enter
jl
or
jno
inc
sub
sarl
cltd
scas
pusha
jo
jns
sub
mov
mov
pop
push
push
test
sub
jmp
inc
mov
dec
push
sub
aaa
adc
xchg
push
mov
mov
push
scas
test
mov
mov
jge
sahf
push
cmpsb
cmp
and
adc
lds
dec
xlat
sti
jmp
cld
dec
pop
loopne
cli
fisttpll
xchg
xor
and
iret
pop
clc
adc
sub
dec
xor
cwtl
adc
into
or
in
sarl
das
shrl
push
mov
xchg
iret
into
push
jle
inc
cmp
push
in
jo
mov
sahf
pop
sbb
jg
pop
xchg
push
idiv
cmc
push
outsb
pop
xchg
push
inc
ret
push
pop
xor
mov
hlt
or
out
loop
das
ds
dec
nop
data16
sbb
loopne
mov
add
sub
cmp
clc
cmp
stos
imull
or
xlat
jl
sub
inc
adc
jmp
aaa
fstps
sbb
jns
xchg
mov
fists
push
pop
clc
out
dec
pop
ja
jmp
mov
arpl
push
jle
push
dec
insl
push
inc
push
mov
mov
cmc
es
or
add
lahf
aad
jle
xchg
dec
or
jge
rcrl
pop
test
and
push
xor
fdivrl
paddq
and
in
daa
rclb
loope
xor
pop
and
dec
das
xchg
lret
jmp
test
pop
nop
pop
xor
fdivrs
incl
sub
or
in
xchg
and
out
mov
mov
mov
sbb
and
cmc
cmpl
inc
jp
sub
xchg
lock
cmp
jae
mov
lea
cmp
adc
cmp
addl
sbb
adc
rcrb
es
pusha
push
fwait
lahf
in
and
adc
mov
out
xor
xchg
je
mov
mov
inc
lock
movsl
scas
aaa
sub
out
out
mov
in
repnz
les
dec
xchg
dec
dec
jns
cmp
sub
xor
outsl
lret
push
or
mov
outsb
push
jbe
jmp
sarl
hlt
sbb
pop
loop
fistpl
lods
ja
mov
outsb
clc
sbb
stos
mov
push
xor
mov
iret
and
cmp
in
pop
dec
fs
lds
dec
movsl
outsb
cmpsl
dec
mov
mov
cmp
pop
jg
sub
out
push
or
jl
mov
int
sub
shrl
roll
sub
jb
repz
cmp
add
cltd
jno
insl
xchg
add
in
mov
mov
push
xor
jecxz
in
mov
loop
jmp
xchg
ret
cmp
mov
inc
call
push
roll
lea
sbb
lret
xchg
imul
and
fsts
or
mov
mov
pop
inc
sub
popf
aad
push
xor
jge
loope
cmpsl
pop
xchg
cmpsb
dec
add
xchg
outsl
jns
mov
shll
adc
pop
sub
iret
add
insb
dec
or
dec
fistps
sbb
jl
leave
xor
sahf
imul
sbbb
pop
jae
je
inc
in
je
jp
fwait
in
mov
pusha
jmp
dec
ds
test
cmp
bound
mov
call
mov
xchg
ds
in
shlb
fisubrs
cmpsl
mov
mov
xchg
sub
rolb
jg
mov
sbb
aas
arpl
data16
mov
test
fsubrp
xor
in
insb
mov
adc
lcall
lea
and
mov
mov
arpl
and
push
inc
mov
testl
pop
addr16
clc
and
fld
int3
push
arpl
loope
popf
dec
xchg
adc
jp
jns
jg
mov
pop
inc
in
mov
insl
mov
rcrb
into
loop
jo
in
repnz
or
cs
cld
xchg
rcr
mov
sbb
aas
push
push
pop
dec
popa
push
mov
inc
sar
sbb
inc
cmpsb
orl
mov
and
inc
iret
adc
ja
push
rorl
stos
mov
cmp
dec
hlt
testb
mov
scas
mov
mov
pop
mov
push
fildl
int
addr16
push
dec
aaa
pop
arpl
sub
jmp
bound
clc
in
test
into
mov
lahf
lods
xor
dec
adc
icebp
pop
aaa
mov
addr16
pop
pop
mov
fucomp
das
sub
push
mov
or
es
push
stos
xchg
pop
push
fbstp
inc
pop
mov
mov
mov
sahf
in
repz
push
push
and
xchg
cli
lret
add
inc
jno
loop
sbb
enter
mov
cmpsb
int
inc
lret
push
test
cmp
pop
mov
int3
ja,pt
push
fsubl
dec
pop
cmp
push
adc
jl
mov
add
cmp
fisubs
pop
sub
clc
jl
jo
ss
mov
inc
pop
push
inc
outsb
xor
cmp
jmp
mov
lahf
ljmp
sbbb
sub
int3
mov
lock
test
add
je
sub
or
loopne
mov
subl
or
dec
test
lods
or
fs
movsl
int
flds
shll
sbb
shll
or
pop
cmp
pop
adc
jle
xorps
adc
pop
add
sub
int
jb
aam
xlat
mov
sbb
push
out
ljmp
fdivr
lea
fdiv
sbbb
and
mov
mov
jl
ds
repnz
std
popa
mov
pop
dec
jl
xchg
stc
es
or
int
fdivl
jecxz
and
xor
mov
pop
hlt
repnz
xor
add
mov
rolb
sub
pop
dec
mov
jg
xchg
push
cmp
mov
mov
sub
insl
push
icebp
dec
xchg
mov
xchg
cmc
lret
xchg
sub
gs
stc
push
xchg
mov
fsubl
bound
lds
jle
mov
in
hlt
pop
and
icebp
lods
sahf
adc
cmpsl
fsubs
in
inc
mov
pop
dec
jo
and
das
repnz
lods
les
cltd
inc
pop
push
mov
jp
mov
sbb
adc
call
pop
roll
cmp
inc
into
aam
push
loopne
sbb
leave
cs
xor
out
es
stos
lock
loopne
dec
test
or
fcomps
in
cmc
imul
xchg
pop
iret
cmp
pusha
jne
xchg
inc
dec
push
mov
in
repnz
stos
fst
lret
sbb
addb
out
xchg
cld
xor
in
mov
clc
mov
popa
into
and
adc
ror
xlat
push
mov
mov
dec
dec
in
cltd
push
dec
mov
ss
adcb
out
or
mov
inc
xchg
mov
jge
push
mov
jge
rcr
dec
call
inc
pop
add
mov
push
movsb
imul
xchg
cs
jp
jmp
jae
cmc
test
fidivl
mov
push
or
pop
outsl
or
shl
adc
popa
lea
es
mov
and
pop
hlt
ljmp
fs
iret
insl
lods
gs
dec
testl
push
movsb
mov
push
push
add
xor
clc
clc
sub
mov
shrb
add
xor
pop
inc
jp
test
sub
ret
cmc
inc
je
jne
out
int
insb
xor
ret
mov
fs
daa
push
xor
push
push
in
pop
mov
gs
test
mov
push
repz
inc
add
mov
into
mov
hlt
lret
out
mov
int
enter
adc
sbb
or
cwtl
loop
lahf
mov
movsb
pop
lock
mov
in
push
sub
clc
add
jne
push
lcall
fistps
lds
loopne
or
cmp
rcrl
and
add
in
cmp
mov
mov
inc
pop
adc
stos
adc
mov
inc
jecxz
jge
pop
ljmp
sub
or
cmp
xor
pop
icebp
repz
push
jg
std
dec
cld
jnp
int
sub
sbb
inc
cmp
add
movsl
sbb
sbb
cmpsb
sbb
inc
cmp
add
fdivr
imul
filds
and
push
cli
jnp
fadd
test
lods
push
or
repz
jg
mov
add
gs
adcb
push
push
inc
cltd
adcl
xor
dec
pop
lods
test
xchg
cmp
cli
xchg
aas
dec
xchg
push
mov
out
xor
mov
in
mov
dec
lods
scas
into
sbb
je
push
push
ds
into
ss
mov
and
and
sar
out
mov
neg
stos
dec
mov
mov
test
rorl
movsl
std
dec
mov
xor
movsb
xchg
xorl
mov
cmp
xlat
cmpl
or
xor
sahf
dec
inc
rcll
jns
int
subb
idivb
clc
sub
cmp
and
insb
mov
add
jge
aaa
lea
in
or
mov
outsb
add
adc
sbb
add
pop
dec
lcall
xchg
test
cmp
push
stc
dec
and
iret
pop
int3
push
cmpsb
mov
xchg
in
cmc
pop
lods
into
aam
and
xor
inc
add
insb
enter
stos
add
js
pop
pop
loop
aas
imul
sbb
aaa
jno
inc
and
inc
xchg
cltd
xchg
divl
and
out
or
jbe
rolb
push
fndisi(8087
xchg
sbb
dec
dec
icebp
dec
xor
ficoml
lds
mov
in
and
xchg
in
xchg
ffree
xor
xor
or
sbb
adc
inc
fcmove
cmpsl
xchg
mov
mov
arpl
emms
fcoms
les
fstp
pop
mov
inc
lahf
mov
dec
dec
xorb
cwtl
xchg
aad
rorb
pushf
aad
inc
and
and
mov
cltd
subl
jae
mov
inc
adc
out
lcall
push
js
outsb
mov
jbe
pop
xlat
ffreep
fistpll
xchg
xchg
inc
xchg
fs
xchg
add
cmp
fsubs
push
ss
mov
aad
rcl
jnp
fdivl
pop
cmp
cli
mov
jmp
mov
paddusb
neg
cmp
fmuls
pop
out
into
add
jbe
xchg
sbb
movsl
stc
add
test
pushf
fisubrs
out
add
lods
jecxz
negb
add
xchg
jne
jmp
sub
inc
pop
or
jo
cmp
add
mov
sbb
pop
mov
outsl
sub
sub
pushl
and
xor
pop
dec
in
repnz
leave
and
xor
xchg
dec
int3
aam
addr16
inc
pop
add
sbb
jge
insl
std
popa
jge
jno
mov
jle
loop
iret
ret
lods
ror
mov
cld
fcomps
je
sbb
or
repnz
mov
mov
jg
nop
mov
out
ret
or
mov
movsl
xlat
imul
fnstsw
add
pushf
jno
mov
lea
mov
sub
sbb
xor
pop
in
adc
int
test
adc
jae
addl
dec
les
mov
jbe
push
andb
mov
cmp
pusha
mov
push
pop
adc
pop
xchg
add
into
and
inc
xchg
lock
imul
scas
pushf
dec
mov
xchg
pop
loopne
sbb
pop
mov
cltd
gs
enter
inc
sub
stos
cltd
inc
mov
std
adc
int
daa
add
mov
cmp
xchg
imul
shlb
mov
gs
std
cmp
out
movsb
je
addr16
cltd
lods
fnstcw
jecxz
and
sti
ds
sbb
pop
ret
pop
lods
or
jmp
push
mov
jg
or
xor
shlb
and
pop
test
dec
fisttps
add
sbb
test
jmp
aas
ret
leave
sbb
push
std
leave
push
xchg
or
inc
cmc
mov
push
mov
xchg
or
ffree
ret
out
aaa
xor
inc
mov
mov
or
call
daa
mov
cmc
xor
or
cltd
sbb
dec
push
pop
ja
in
or
sub
mov
inc
scas
incl
sar
test
dec
enter
dec
ds
nop
sub
lds
subl
lea
sbb
aaa
push
add
cmp
and
jb
and
lret
loope
cmpl
arpl
mov
cltd
push
iret
stos
mov
clc
std
dec
fwait
sti
or
sbb
push
enter
test
mov
mov
xchg
push
mov
add
roll
nop
xchg
sbbb
loopne
mov
mov
push
in
mov
jecxz
rolb
fiaddl
xor
testl
pushf
cmp
lcall
std
loop
fmull
lods
scas
add
ja
outsl
arpl
in
cmpsl
sbb
sarl
push
ss
mov
or
pop
sbb
dec
pop
nop
jne
sbb
repz
jp
jge
mov
cli
in
jne
fstl
call
test
imul
inc
fsubr
in
add
fucomp
jle
pop
mov
shll
jp
jmp
arpl
out
ret
dec
lock
imulb
xchg
mov
sbb
ret
out
jo
cli
bound
das
and
cmp
xor
ds
pop
insl
pop
iret
and
aaa
mov
add
mov
cmp
fsubl
push
aam
cld
pushf
push
sarl
dec
jns
xor
shll
lock
pop
cwtl
cmp
aad
jno
ds
add
pop
push
out
adc
sbb
aam
mov
rcll
cltd
add
adcl
xchg
pop
mov
stc
dec
test
in
scas
mov
xchg
cmpsb
pop
stc
out
loopne
push
hlt
adc
lods
jmp
out
out
out
jecxz
adc
jle
sub
in
into
or
loop
shll
ds
dec
cmp
js
push
cmp
bound
test
stos
adc
out
xchg
data16
lret
mov
jno
pop
push
dec
jecxz
pop
cmp
xor
xchg
jnp
inc
sbb
bound
pop
outsl
xor
aaa
push
imul
out
and
xor
xor
inc
cmp
shlb
mov
fistpll
inc
dec
adc
lods
mov
or
icebp
add
jle
outsl
nop
mov
xlat
sub
ljmp
dec
scas
rclb
mov
and
inc
or
pop
ret
jl
mov
sub
lahf
mov
xchg
pop
cwtl
enter
inc
sub
movsl
movsl
adc
xor
aas
outsb
mov
jmp
push
mov
dec
lahf
xchg
xchg
loop
test
or
inc
sub
mov
cltd
sarl
mov
fisubrs
mov
adc
push
mov
jg
loope
adc
pop
ljmp
mov
xchg
int
push
mov
fnstcw
pcmpeqw
test
xchg
les
data16
es
jmp
sti
xchg
mov
jo
scas
xor
xchg
sbb
rorb
pop
in
add
xor
es
call
jmp
pop
inc
shlb
std
std
or
call
out
psrlw
xlat
stc
mov
dec
repz
je
mov
insb
dec
lods
shrb
and
adcl
jns
shrb
in
jmp
es
call
xchg
sub
in
sbb
fiadds
scas
xchg
inc
movsl
or
and
sub
pop
outsl
xchg
adc
push
or
adc
sahf
sti
clc
shl
pop
into
inc
or
out
orb
jp
lds
cmpsl
inc
repz
sti
je
sbb
mov
js
push
and
mov
adcb
pop
cmp
rol
xchg
mov
push
xor
mov
call
inc
shrb
push
mov
adc
pop
shlb
lds
jae
ljmp
inc
ret
adc
out
aaa
inc
cli
sub
pop
scas
pop
pop
xchg
pushf
mov
add
ljmp
mov
adc
push
in
adc
loope,pn
sarb
adc
mov
push
sbb
dec
push
mov
xor
lea
xor
and
lea
sbb
pop
repnz
sbb
shl
or
mov
xor
es
in
mov
mov
cltd
movsl
sbb
mov
mov
sahf
pop
and
call
xchg
jl
mov
and
clc
or
sub
sub
js
lock
mov
lods
fs
xchg
fimuls
jge
rcll
fwait
add
test
out
andb
mov
jp
cs
cmpsl
add
popa
xor
in
out
and
lods
mov
popa
push
pop
ss
pusha
sub
add
mov
mov
clc
cli
cwtl
dec
loopne
jo
sahf
in
test
gs
jmp
jecxz
or
clc
adc
mov
pop
or
shll
loope
mov
subb
mov
cmp
jmp
and
pop
mov
aad
mov
js
jle
jae
sub
lods
faddl
lcall
dec
jg
push
xor
push
test
addr16
jbe
sbb
cs
xlat
xchg
cmp
gs
fmull
push
jne
mov
loope
mov
aad
and
jmp
and
dec
mov
pop
mov
and
lret
int
movsb
outsl
jge
mov
xlat
jecxz
jl
es
mov
aad
add
out
or
out
and
xorb
je
dec
pop
in
sbb
stos
mov
ljmp
nop
add
mov
call
mov
push
fidivrs
xor
jnp
shll
fwait
pop
outsb
sub
das
mov
test
xor
lock
out
jmp
and
xchg
inc
sbb
or
add
cli
push
push
fstpl
movsl
dec
dec
xor
sub
pop
fs
into
dec
cmp
iret
add
mov
dec
test
and
push
push
adc
js
mov
cmp
ficoml
call
lahf
outsb
jp
add
popf
jnp
xchg
inc
mov
and
adc
jl
push
inc
fadds
rcl
ss
mov
mov
es
sbb
cmpsb
pop
fisttpl
inc
mov
dec
mov
dec
imul
mov
jne
shrl
std
mov
jo
jo
fisttps
in
xchg
push
addr16
shl
pop
cli
adc
popa
mov
rdpmc
out
mov
fsubs
insb
sbb
popf
jae
sub
imul
nop
cwtl
push
ss
mov
mov
and
mov
insb
sub
movsb
sbb
jb
xchg
jmp
push
stos
push
and
imul
mov
inc
mov
rcrb
push
test
daa
inc
js
xor
and
ret
rorl
dec
aas
or
mov
add
push
out
jae
fs
sub
push
iret
gs
std
push
mov
lods
mov
mov
repnz
outsb
imulb
inc
push
data16
test
bound
add
hlt
adc
or
les
cwtl
aaa
sbb
shlb
stos
add
add
test
leave
rcl
lcall
push
push
jmp
daa
cld
inc
pop
fiaddl
insb
xchg
in
xor
ss
jge
sbb
mov
sbb
push
stos
sub
push
mov
dec
ss
jecxz
shl
rsqrtps
push
out
add
fldt
ffree
dec
lret
push
hlt
adc
test
pop
cmp
aas
int3
jmp
aaa
dec
pop
lods
lock
xor
outsl
push
mov
ljmp
or
clc
and
repnz
in
ja
mov
lods
mov
lret
je
aas
idivb
ss
or
dec
and
jl
pop
cmpsl
call
dec
pushf
sbb
mov
mov
pop
repnz
dec
pop
mov
mov
jo
cli
mov
stos
repnz
cmp
xchg
add
and
popa
addr16
insl
pop
mov
repnz
enter
mov
in
out
arpl
xchg
push
movsb
imul
cmp
mov
arpl
movsb
mov
sbb
arpl
ljmp
jge
add
dec
mov
jle
sbbb
adc
into
insb
add
loop
xchg
pop
jae
xchg
xlat
adc
mov
insb
pop
ret
adc
aam
inc
pop
jne
inc
dec
xor
sub
mov
jg
add
add
adc
inc
push
jno
les
add
outsl
icebp
dec
xchg
aas
sub
add
lret
xchg
push
cmp
push
lret
aaa
fistpl
xchg
xlat
cmp
or
and
int
icebp
jecxz
loopne
or
pop
push
mov
mov
cmpsb
and
cltd
inc
xor
pop
lahf
rcll
inc
sub
push
nop
or
dec
mov
jne
gs
and
cmpl
ret
rcll
insl
pop
dec
pop
inc
sbb
jne
outsl
and
std
pop
fs
push
and
sbb
xor
leave
sbb
into
js
or
cltd
mov
scas
mov
cmc
lahf
testb
divb
mov
gs
xchg
scas
mov
fcomps
cs
sub
in
out
mov
inc
pop
jmp
test
mov
psllq
lea
mov
push
test
lret
jge
sbb
mov
push
sar
dec
mov
adc
js
btr
inc
dec
jmp
fistps
dec
mov
jae
mov
call
inc
mov
jnp
dec
push
outsb
push
std
lret
sub
lods
mov
sbb
sub
pop
inc
fcompl
mov
sbb
sti
or
xchg
repz
andl
ret
arpl
stos
testb
mov
cmp
jbe
ss
lods
sbb
test
adc
xchg
out
aaa
xor
fbld
and
mov
mov
cwtl
pop
orl
scas
xchg
rcl
push
repnz
sti
into
xor
ljmp
sbb
shlb
fldcw
and
std
pusha
dec
and
pop
pop
jno
jo
or
in
xchg
lods
adc
xor
xor
xor
jmp
cmp
sub
scas
dec
adc
cmp
rcl
xchg
pop
mov
sub
clc
subb
or
mov
and
mov
inc
push
inc
mov
add
inc
cmp
fnstcw
ret
fmull
testl
dec
dec
repz
outsb
ljmp
sbb
cmc
add
aaa
testl
cmp
std
pop
push
mov
stos
mov
cmp
and
pusha
cmp
push
out
pop
mov
mov
and
dec
push
pop
and
adc
xlat
nop
pop
nop
loopne
lock
pop
xchg
popa
jns
sub
add
inc
cmp
fs
pusha
jecxz
cwtl
push
aad
and
cs
out
hlt
inc
flds
test
and
stc
adc
ret
adc
in
inc
fstl
arpl
gs
xor
cwtl
push
divb
out
dec
pop
xor
ja
jbe
sub
loop
sbb
nop
sub
and
fisubrl
and
jecxz
mov
and
out
or
inc
test
pusha
xchg
mov
call
iret
fwait
cwtl
nop
sbb
add
ret
mov
jo
and
jo
xchg
mov
inc
pop
stc
or
pop
push
lcall
repz
adc
pusha
scas
dec
scas
jae
push
and
test
and
xchg
sub
mov
clc
jo
dec
cwtl
xor
popf
enter
lret
sub
lods
fbld
push
pop
sbb
mov
cmpsb
jp
ret
and
and
scas
dec
nop
test
cwtl
add
rcll
ja
push
add
in
or
mov
or
leave
out
add
mov
pushf
cmp
cs
icebp
insb
jecxz
inc
out
inc
arpl
pop
rolb
enter
data16
sub
add
sti
mov
sbb
pop
enter
shlb
mov
pop
inc
ja
inc
call
stc
inc
or
cmp
push
out
and
xchg
ror
imul
jge
mov
mov
cld
lods
mov
stc
arpl
loopne
lcall
loopne
mov
out
adc
rorl
xchg
cmpsl
push
repnz
test
cli
je
mov
mov
sbb
mov
xor
sbb
lods
cmp
jmp
adc
stc
mov
lea
mov
sti
sbb
push
sbb
jg
inc
and
pop
fisubs
je
lret
xchg
jnp,pn
or
pop
sahf
push
ljmp
cld
ljmp
mov
jnp
mov
ficoms
mov
or
mov
cmp
add
ret
inc
inc
jp
in
pop
jb
sahf
jmp
sahf
int
lcall
es
cli
inc
inc
cmpl
jp
pop
jge
push
scas
or
cli
cltd
test
or
lret
xchg
int3
add
xchg
cwtl
sub
aaa
sbb
cmp
push
addl
fstpt
ljmp
repnz
xchg
in
xchg
sbb
xor
into
stc
pop
lea
adc
shlb
pushf
add
sbb
add
out
and
sbb
jno
stos
mov
push
insl
and
out
insl
adc
inc
ljmp
jge
shll
sbb
lods
aas
dec
jo
mov
pop
dec
xchg
push
roll
jbe
xchg
movsb
jmp
mov
sub
xchg
repnz
fstp
loope
push
add
ja
mov
add
flds
pop
gs
xchg
pop
loope
outsl
arpl
test
and
ret
xor
mov
stc
pop
data16
jg
pop
push
inc
popf
mov
out
mov
lock
pop
adc
enter
xchg
or
ja
inc
test
pusha
sub
pop
call
or
jp
mull
and
mull
in
popf
pop
adc
mov
int
cld
jo
les
xor
out
in
scas
cmpsb
jl
ret
xlat
fimull
loope
and
cs
and
fstl
adc
mov
or
jle
cmp
lods
repnz
scas
xor
out
jg
cltd
cmc
movsb
jl
add
mov
and
gs
pop
lods
jo
xorb
imul
xor
arpl
popf
inc
clc
leave
jae
lea
dec
shrb
repnz
aam
int
call
fsubl
les
les
nop
adc
sub
fidivl
xlat
xor
fs
xchg
jecxz
hlt
dec
sub
stos
inc
test
insl
push
jp
or
stos
xchg
xor
mov
mov
xor
in
or
push
testb
insb
push
rol
outsb
mov
rorb
icebp
xor
mov
push
jns
or
int3
ss
or
mov
push
fbld
ds
sti
scas
add
and
mov
adc
adc
mov
pop
cmp
xchg
sub
cltd
xchg
cli
dec
push
int
loope
xor
xchg
enter
xchg
in
aad
repnz
jmp
imul
cmpsl
and
into
out
adc
jg
cmp
repz
mov
mov
decl
push
inc
pop
ja
test
jle
fisubl
pop
pop
ja
jb
inc
jmp
jns
mov
mov
popa
jae
mov
jbe
xor
xor
cmp
repz
mov
lods
sub
cmpl
ffree
leave
dec
push
adc
iret
mov
fldenv
mov
cli
push
xor
cmp
xor
jno
fbld
sbb
stos
stc
dec
pop
pop
cli
lret
scas
rcl
xchg
mov
cltd
paddd
lea
push
fdivrl
rcll
fisttpll
or
dec
mov
ret
sbb
add
mov
sbb
or
movb
mov
mov
int3
pop
sahf
dec
pop
cmp
mov
sbb
jle
pusha
adc
adc
xchg
mov
insl
icebp
and
pop
popf
cmp
sbb
mul
fwait
cmc
and
pop
inc
orb
fcoml
pop
notb
fsubrl
movsb
movsl
testl
mov
or
dec
loopne
or
lahf
stos
xchg
sub
adc
sub
insl
add
mov
gs
mov
mov
js
xchg
pop
sbb
inc
xor
jne
lea
rcl
xchg
jmp
or
lods
lret
aas
xchg
sub
xor
add
fisubs
nop
cli
out
cmp
sub
clc
lds
or
mov
out
mov
dec
orl
push
cli
or
inc
insb
jg
mov
pop
cmp
jge
pop
lret
lahf
sbb
aaa
xchg
mov
in
sbb
xor
jnp
xor
add
mov
jb
xchg
cmp
mov
xchg
jmp
or
dec
xor
call
in
ds
mov
nop
cmpl
out
aaa
adc
cmp
sub
cld
imul
mov
sub
xchg
or
xlat
idivl
repnz
sbb
stos
es
test
repnz
pop
adc
sub
jb
fisttpl
and
xlat
ret
sbb
pop
mov
mov
imul
out
jge
fnsave
lods
lcall
and
out
rcr
inc
jae
out
lahf
cs
mov
jp
test
inc
mov
xor
repz
jnp
fwait
popf
test
or
cmpsb
clc
cltd
inc
mov
xchg
or
out
sbbl
add
pop
cmp
int3
mov
mov
mov
ds
mov
sbb
into
ds
xchg
or
mov
stc
ret
xorps
sbb
test
mov
xor
dec
pop
cmp
cmp
in
ds
cmp
fisttpll
push
dec
fstps
ret
push
mov
movsl
xchg
xchg
pop
cwtl
test
mov
je
push
imul
cli
incl
rcrb
sub
mov
pop
xor
xchg
add
mov
daa
pusha
or
aam
inc
mov
jae
std
call
xchg
add
jbe
jmp
inc
popf
push
and
xor
sahf
jl
lods
cld
dec
popf
inc
insl
mov
pop
mov
cmpsl
shrb
das
pop
jl
lds
and
into
fdivrl
xchg
sbb
insb
shr
movsb
das
pop
cmp
cmp
sbb
outsl
and
push
mov
dec
xchg
xchg
mov
jb
push
mov
imul
test
fs
cmc
inc
sahf
cwtl
scas
test
xor
xor
sarl
pop
inc
das
or
cmp
inc
out
lods
push
lret
sub
add
xchg
mov
cmp
pop
repz
jmp
cltd
xor
mulb
flds
loope
jne
ja
test
mov
fiaddl
je
loopne
xor
test
scas
mov
imul
cmpsl
dec
aaa
roll
shl
arpl
lds
adc
out
adcb
sbb
adc
adcl
sahf
cmp
xlat
xor
movsl
mov
jecxz
jb
fsts
cmp
push
icebp
xor
xchg
sub
hlt
sti
icebp
mov
roll
push
mov
add
out
xor
and
adcl
cli
push
xor
fdiv
sub
movsl
shrb
pop
sub
lods
out
mov
pusha
scas
sbb
mov
mov
push
and
xchg
sbb
xchg
and
mov
lock
mov
cmc
fwait
loopne
insb
in
lock
jmp
lret
xchg
fxch
mov
sbb
js
popl
cmpsb
cmp
mov
loopne
dec
sbb
or
faddp
mov
dec
orl
mov
cmp
je
sub
out
mov
push
inc
fdivp
data16
xchg
outsb
mov
lea
add
enter
ljmp
cmp
cmp
jne
mov
inc
push
inc
mov
and
pop
xchg
pop
out
jns
inc
jns
mov
sub
mov
daa
loopne
stc
fimuls
test
mov
sbb
dec
sub
aaa
aam
dec
cmc
repnz
divb
sahf
je
push
and
jp
mul
pop
or
inc
out
mov
jb
cs
dec
leave
cmp
mov
pop
cmp
insl
push
out
push
outsb
popa
scas
loopne
cwtl
push
jle
adc
out
clc
inc
mov
jo
jge
and
adc
hlt
movsl
inc
subl
mull
lds
dec
out
push
mov
add
mov
jmp
xchg
adc
xlat
jo
mov
test
std
enter
fistpl
inc
stc
rcrb
aam
mov
jb
lcall
dec
add
adc
stc
pop
sub
lret
inc
cmp
mov
aas
fisttpl
negb
cmpsb
adc
mov
fstps
xor
pop
inc
bound
ljmp
mov
adc
js
mov
inc
xlat
push
and
xor
lods
and
adc
fidivrs
dec
divb
addr16
in
aas
or
fwait
cmpl
mov
data16
cmpsb
ret
mov
or
pop
push
scas
mov
add
clc
mov
adc
inc
imul
mov
int
lods
popf
in
into
nop
subb
sbb
mov
and
repz
stos
dec
sub
hlt
insb
test
out
jecxz
lock
pop
loop
sbb
dec
cmpsb
lds
les
leave
pop
jmp
dec
add
enter
loopne
fistps
pop
cs
jno
in
and
sub
xor
cwtl
inc
adc
xchg
adc
xor
mov
or
je
jns
adc
cmp
or
pop
enter
addr16
jns
pand
pop
sbb
bnd
mov
hlt
repnz
es
cld
movsl
sub
insb
data16
insl
fisttpll
sbb
mov
xlat
cmp
out
jo
stc
sti
xor
cmp
das
outsl
lds
popf
daa
cmp
stos
or
ljmp
je
outsb
and
mov
jne
xor
aaa
mov
popa
stos
mov
mov
mov
icebp
dec
inc
inc
jae
xor
jecxz
and
pop
ss
fsubr
cwtl
repnz
aaa
and
mov
dec
mov
popf
pop
jl
gs
rcrl
dec
mov
pop
pop
push
cmpsl
cmp
shrl
fadds
lret
test
imul
shlb
lods
mov
jbe
pop
push
test
cmpsl
inc
imul
fcompl
cmp
jecxz
xor
mov
add
jnp
scas
dec
in
push
data16
jle
ja
ss
push
xchg
push
in
sub
hlt
mov
adc
ret
add
sub
jnp
bound
sub
mov
jg
aaa
sahf
xchg
movsb
into
cwtl
addr16
data16
adc
test
cmp
cmp
mov
or
icebp
xchg
push
sti
and
popa
sbb
inc
sub
cli
push
imulb
fcomps
aaa
inc
mov
into
jl
jmp
loopne
xchg
pop
jae
push
ja
adc
das
pop
jp
mov
test
bound
jno
aad
add
ret
pop
in
repnz
dec
aaa
out
andb
call
push
mov
outsl
nop
jnp
out
or
negb
jns
adc
push
jns
xor
add
sub
test
int3
xor
jle
xlat
or
dec
scas
addb
mov
jl
fsubrs
jbe
xchg
gs
pop
fisubl
pop
enter
jne
stos
lds
and
pop
or
sbb
cmp
xor
andl
adc
test
repnz
inc
fcomi
mov
int3
jge
adc
sti
sub
xchg
and
adc
clc
rolb
lock
cmpsb
int
lea
pop
jmp
dec
out
cmp
or
divb
jbe
fwait
mov
xor
and
cmpsl
in
adc
fcoms
orb
mov
xchg
fbstp
xchg
daa
or
cmp
lret
jb
por
hlt
push
jne
fwait
mov
jno
fnstsw
add
mov
int3
ffreep
sub
popa
sub
das
flds
notl
lods
mov
xor
inc
sub
lcall
stc
ficomps
pushf
or
in
fsub
dec
xchg
add
jnp
hlt
fs
pop
jl
faddl
push
or
xor
out
inc
push
add
fsts
inc
xchg
pop
inc
sub
adc
sti
in
loop
test
inc
lcall
cmpsl
push
sbb
add
pop
pop
icebp
pop
cmp
pop
xchg
mov
ss
out
xorl
push
shlb
aam
ret
mov
xchg
cmc
jge
dec
stc
imul
pushf
cmp
jb
addr16
in
nop
push
sbb
push
call
loopne
fst
dec
and
fs
and
sub
pushf
cmpsb
clc
loop
cltd
xchg
inc
mov
or
and
push
pop
fwait
jns
jae
enter
loope
js
test
adc
lea
int
mov
call
adc
sbb
jns
fistpl
test
ja
mov
imul
jnp
dec
pop
daa
mov
addr16
inc
cwtl
lahf
pop
mov
shll
pop
add
xor
cltd
scas
dec
mov
outsl
mov
and
pop
negb
mov
pusha
sub
push
in
jns
les
test
push
inc
inc
mov
es
mov
sub
cmpl
clc
fcomip
imul
push
mov
jl
shrb
leave
inc
mov
and
sub
and
jmp
adc
adc
pop
jge
out
loopne
mov
jb
ret
ret
rep
aas
fyl2x
mov
mov
testb
ss
rol
xor
pop
pop
mov
insl
ror
lods
cmp
fs
ja
or
push
out
push
jg
mov
mov
push
cmc
call
sub
mov
shl
int3
sub
lds
jg
pop
imul
ja
popf
fistpl
and
in
add
fsub
lahf
addl
leave
lock
mull
pop
pop
jl
bound
sbbl
sub
je
jmp
lods
sti
jg
es
xchg
cwtl
xchg
adc
out
jp
push
push
scas
xchg
jp
or
fnstsw
cwtl
fcmovnb
jg
lock
mov
push
dec
pushf
pushf
rolb
popa
iret
idiv
mov
mov
xchg
pop
pop
pop
sub
bound
std
nop
sbb
bound
enter
cltd
push
push
add
loopne
outsb
sbbl
leave
push
inc
pop
clc
leave
cmpl
pushf
jmp
jno
sub
std
out
mov
test
mov
les
insl
lcall
sbb
jne
jle
mov
std
iret
mov
adc
std
add
out
loope
addr16
or
iret
loope
icebp
or
adc
and
test
xchg
push
sub
sub
lret
mov
push
inc
loopne
or
xor
adc
and
stc
cmp
sbb
pop
dec
sub
loopne
enter
popl
test
enter
addr16
push
mov
cmp
pop
cld
pop
addr16
mov
sbb
into
sbb
pop
mov
mov
subl
add
adc
xchg
loop
push
sub
ja
pusha
mov
popa
pushf
cmc
add
push
int3
ds
adc
and
or
test
xor
insl
mov
dec
add
lock
lret
or
movsl
sbb
xchg
sbb
jnp
sub
int3
mov
leave
daa
pushf
or
mov
aas
or
and
mov
iret
jge
xor
testb
xchg
sub
and
inc
sub
dec
shll
nop
adc
xchg
hlt
xchg
lock
sbb
lcall
push
ret
add
dec
or
pop
sbb
push
mov
icebp
dec
repz
ja
xlat
fistpl
popf
add
xor
shr
sub
sub
loop
or
jp
imul
mov
leave
ja
cwtl
or
mov
into
jecxz
add
push
out
cmc
out
or
jo
lea
adc
sbb
mov
fcmovnu
mov
andb
push
adc
rcl
mov
std
lcall
push
subl
daa
ljmp
sub
pop
rolb
jae
out
hlt
inc
lret
jle
sbb
inc
mov
movsl
jl
push
xchg
xchg
fsub
mov
mov
mov
xorb
pop
cmp
cltd
add
lret
das
lea
insl
push
inc
out
mov
cmp
inc
fistpll
cmpsl
pop
push
les
stos
repnz
jl
cwtl
sub
jae
outsl
push
pop
or
inc
fs
mov
loope
mov
sbb
pusha
mov
js
insl
shlb
or
lret
dec
sub
sbb
push
inc
inc
test
mov
push
jo
dec
xchg
cmc
mov
mov
lods
inc
mov
jnp
mov
je
mov
ret
jns
sub
inc
xchg
mov
fldenv
push
adc
les
and
push
dec
mov
jae
cmpsb
pop
test
out
andl
jg
scas
push
imul
shll
fistl
div
mov
aaa
pop
cltd
pop
mov
adcl
mov
hlt
out
jg
mov
cmp
pusha
cmp
test
fldenv
mov
fcmovu
scas
sub
insb
add
aaa
sub
xor
movsl
dec
mov
enter
mov
xchg
out
xlat
mov
xchg
xchg
cmp
jnp
sti
jg
push
xchg
jb
outsb
xor
lods
or
scas
and
ret
xchg
inc
shrb
sub
push
lret
repz
aas
out
leave
js
stos
xchg
std
gs
add
rcll
sub
sbb
mov
gs
mov
jle
xchg
cmpsl
xchg
push
fdivr
push
sub
jl
pop
lds
mov
call
sahf
jno
pop
sbb
hlt
fucomp
sahf
negl
add
jo
sub
cmp
out
loopne
sar
xchg
push
mov
lret
mov
jle
test
lea
push
and
inc
sbb
lret
loopne
inc
mov
mov
lods
mov
lret
mov
push
xchg
sub
xchg
sbb
imulb
sbb
jle
pop
or
adc
test
xor
push
dec
sub
jnp
out
push
pop
pop
cmp
mov
addr16
ret
addb
adc
pop
xchg
rcll
inc
sub
adc
mov
dec
mov
popl
aas
xchg
dec
pop
or
dec
icebp
lea
inc
sub
aad
mov
jle
push
lds
jbe
cmp
push
mov
scas
imul
push
in
pop
mov
int3
test
aam
mov
mov
push
popf
repz
scas
jle
jmp
adc
test
adc
mov
push
cltd
jo
sub
aad
and
pop
push
xor
popf
movsl
pushf
mov
mov
stos
out
jl
lret
xor
out
gs
mov
lds
and
test
push
cwtl
and
in
fdivrl
inc
gs
jnp
add
insb
xchg
dec
repz
push
pop
push
shl
or
lret
xor
nop
or
movsb
out
insl
es
sbb
out
mov
in
xchg
mov
push
outsb
incb
data16
push
xor
mov
movsb
shlb
cmpsl
fbld
aas
xor
fidivrl
xchg
xchg
lret
das
cwtl
mov
sub
push
or
mov
sub
xchg
mov
aam
loop
enter
sub
adc
movsb
xchg
mov
ds
pop
jp
add
enter
std
fidivl
out
jb
repnz
sub
fidivrl
lea
dec
adc
fdivrl
push
into
cmp
and
incl
rcrb
sbb
jl
ljmp
or
adc
xchg
and
icebp
incb
xchg
subl
jno
mov
lock
aad
loop
mov
iret
mov
ret
fwait
jmp
inc
in
mov
xchg
subl
mov
test
sbb
arpl
mov
sbb
iret
xor
mov
fsubrs
mov
sbb
in
sbb
bound
or
sbb
jbe
xor
cli
nop
fstl
inc
dec
scas
in
test
sbb
mov
pop
sbb
outsb
pusha
mov
dec
jg
fidivs
aaa
or
dec
mov
mov
sbb
mov
jp
cmpsb
scas
fists
stos
cld
aad
inc
jo
mov
lcall
jns
cmc
sbbb
sub
sub
js
xor
mov
adc
mov
lahf
adc
sbb
ret
bound
mov
test
call
adc
pop
inc
push
and
enter
test
jae
fldl
xor
xchg
es
pop
push
sbb
push
xchg
and
inc
fisttps
mov
mov
test
mov
mov
sub
lret
xchg
jg
inc
mov
das
mov
lret
and
lcall
cltd
dec
aam
inc
pop
dec
sbb
sbb
movsl
sbb
xchg
hlt
cltd
jns
outsl
test
jle
xchg
lods
ret
outsb
enter
mov
or
cli
rcl
mov
xor
mov
xchg
push
adc
xor
cmp
and
push
push
sub
adc
std
and
inc
xor
mov
mov
scas
lds
pop
test
cmp
mov
lahf
ret
in
clc
mov
popa
pop
in
lock
and
incb
xor
hlt
imul
sub
popf
sbb
cmp
mov
and
cltd
ret
rorb
nop
and
enter
dec
sub
push
sub
xor
mov
dec
ljmp
daa
add
sub
cmp
xchg
test
push
pusha
and
sub
xor
cld
aaa
jne
inc
ljmp
jmp
dec
aam
mov
fcomp
cmpsl
lods
or
dec
insb
shlb
mov
pop
call
xchg
pop
mov
xor
mov
pop
int3
mov
push
dec
xchg
loope
push
or
aam
mov
and
push
in
aas
cld
dec
lods
out
pop
xchg
imul
adc
jle
loope
or
sahf
cmc
inc
cmpsb
les
jns
adc
jne
ljmp
xor
dec
xchg
pmulhuw
lret
insb
arpl
pop
ljmp
mov
nop
jae
jp
or
xrelease
pop
jle
xor
sbbl
out
push
xchg
stc
outsl
sarl
xchg
add
out
popf
lods
mov
cmp
pop
in
jl
inc
les
sub
mov
pop
jnp
rclb
test
jle
push
test
cmovle
rorl
jecxz
sbb
pop
mov
gs
icebp
jmp
xor
sub
xlat
cmp
pop
cli
jle
mov
xchg
icebp
pop
sarb
addr16
fwait
and
in
add
or
loopne
pop
stc
fsubl
loope
into
mov
inc
sahf
mov
lea
lret
lea
adc
test
push
cmp
sub
xor
iret
mov
pop
je
add
repz
mov
or
push
mov
int
sub
insb
sbb
enter
push
fdivrp
cld
sub
fistl
inc
bound
out
jne
mov
scas
test
data16
int3
pop
call
mov
daa
loope
dec
xchg
adc
ss
xor
xchg
pop
in
cli
or
mov
scas
les
cmp
in
dec
dec
and
xlat
mov
jl
iret
sahf
add
inc
dec
or
push
cmp
xchg
push
push
jbe
push
mov
imul
adc
xchg
mov
xor
lahf
orl
xchg
mov
cli
cmpsl
pop
pop
lret
cmpsb
push
aaa
add
xor
jns
sub
jmp
push
pop
sub
mov
xchg
cwtl
dec
jno
mov
cltd
or
xor
ja
pop
cmpsb
ds
add
cmp
or
dec
inc
stc
xchg
jmp
inc
fstl
xchg
fstps
xchg
loop
addr16
add
outsl
mov
or
and
xlat
mov
dec
jo
aam
inc
add
pop
decb
testl
mov
mov
stc
dec
push
mov
data16
xor
jno
fstpt
pop
xchg
outsl
mov
leave
add
ud2
test
int
repz
lods
cmp
ja
sahf
data16
outsb
addr16
xor
insl
fisttpl
sti
xchg
stc
out
sbb
es
push
xor
push
lods
pop
icebp
cmpsb
push
xor
mov
pop
add
cmp
in
push
pop
pop
rorl
in
sub
ljmp
shrl
sub
cmp
dec
dec
scas
adc
sti
outsb
cltd
mov
andb
insb
into
mov
rcrl
jns
cwtl
in
sub
jb
or
mov
dec
mov
mov
mov
adc
popa
cwtl
mov
ljmp
fs
fsubs
icebp
orl
push
mov
fiadds
in
adc
into
sbb
or
loopne
pop
insb
lahf
dec
sbb
add
popa
add
imul
out
decb
leave
mov
je
jae
faddl
ss
dec
aam
pop
dec
jnp
rclb
frstor
in
fmulp
jno
jb
fildll
and
aaa
mov
jns
push
jns
imul
cmp
fildll
imul
or
mov
xor
fistpl
in
inc
dec
sbb
daa
mov
shrl
popa
jns
lahf
sarl
add
lds
es
out
out
mov
push
inc
fwait
xor
mov
dec
iret
jle
jle
sahf
addl
adc
adc
stos
mov
orb
mov
mov
pop
inc
gs
shlb
shr
fdivl
gs
mov
inc
outsl
mov
popaw
add
xchg
imul
insl
stc
mov
and
pop
das
ljmp
dec
das
mov
int
xchg
lahf
fbld
dec
xchg
sbb
lcall
rep
dec
cwtl
and
push
imul
xchg
jmp
imul
data16
add
fdivs
or
aas
aaa
fldenv
jp
movsb
mov
daa
mov
test
adc
and
mov
into
loopne
and
sbb
ss
mov
loopne
push
jns
sbbb
roll
adc
adcb
enter
jo
lcall
adc
xchg
bound
xchg
mov
pushl
mov
jnp
leave
add
sbb
push
and
jo
dec
clc
sub
lahf
add
sbb
dec
sub
pop
ret
mov
loope
stos
mov
mov
cld
push
imul
test
sar
push
xchg
sub
notb
add
push
jo
pop
cmpb
sti
or
mov
es
out
int
outsl
push
add
data16
cmp
rcll
dec
push
bound
incb
xor
xchg
cmp
ljmp
mov
pop
sbb
leave
inc
stos
shrb
jne
ret
cmpsb
ja
gs
shll
fcoms
idivb
cmp
imul
stos
mov
incb
mov
pushf
sbb
orl
incl
mov
sub
jecxz
mov
and
test
jg
pusha
stos
repz
cmpb
repz
fwait
dec
imul
mov
or
xor
xchg
inc
mov
fucomp
arpl
mov
cmp
and
pop
ret
testl
dec
cmovb
sub
inc
std
cmp
mov
sub
or
pop
mov
sti
push
jb
jo
xchg
in
or
mov
cmpsb
cmp
mov
fdivrp
and
in
mov
jecxz
lahf
add
jecxz
loope
or
test
in
aad
mov
push
pop
mov
js
mov
fs
in
mov
arpl
sarl
bound
nop
mov
hlt
mov
cltd
jnp
mov
mov
mov
test
mov
and
fildl
test
push
sub
mov
push
dec
sbb
loop
insb
mov
and
mov
and
jno
shlb
dec
divl
pop
rcrl
xchg
mov
test
mov
int
shr
adc
mov
inc
inc
scas
repnz
rol
sbb
bound
jmp
and
dec
mov
mov
and
cmp
push
adc
push
ret
insl
cmp
pop
test
and
dec
cmp
daa
dec
xchg
cmpsl
test
gs
mov
add
pop
jp
and
movsb
xlat
imul
cld
jl
push
das
xchg
mov
stc
jb
xchg
mov
dec
dec
mov
xor
cld
lret
push
or
les
and
xchg
insl
lret
mov
inc
or
mov
fs
jb
rclb
gs
and
jp
nop
int
jl
int3
pushf
jmp
addl
out
stos
sub
adc
add
sub
xchg
mov
lahf
mov
ret
jge
push
pop
inc
in
test
test
repnz
push
xchg
sbb
ds
xchg
outsl
adc
in
in
push
xor
inc
dec
lods
dec
icebp
shl
testl
inc
mov
dec
fchs
mov
enter
out
mov
xchg
hlt
out
jns
mov
ret
mov
dec
popa
xchg
jecxz
and
inc
xchg
xor
std
fdivrp
std
js
push
adc
sub
aam
sbb
aam
mov
jnp
imul
cld
mov
sub
repnz
clc
pop
test
or
sahf
mov
icebp
or
cwtl
repz
xchg
stc
test
and
jne
or
cmp
js
popf
xor
jmp
push
rorb
addr16
test
out
cmp
scas
sbb
mov
mov
or
jns
outsb
jns
jno
addr16
sti
cmpsl
ror
pop
add
lcall
insl
dec
and
scas
xchg
movsl
cmp
daa
js
and
sub
sbbb
jl
lods
leave
daa
cmp
ret
dec
mov
mov
jne
lea
push
loopne
add
mov
sub
pop
repz
pop
or
sarl
insb
shlb
popa
ja
fs
or
inc
or
fwait
sub
insl
sub
sbb
out
push
hlt
shll
jg
pop
test
in
jnp
cmp
dec
push
push
sub
notb
jb
js
cmp
jmp
cmpsl
rcll
fcmovb
push
pusha
push
sar
cmp
dec
xchg
in
inc
les
fidivrl
fs
jnp
inc
icebp
mov
jge
fildll
add
shl
lahf
push
cwtl
mov
xlat
in
out
stos
sub
aad
lahf
test
call
and
pop
cltd
push
mov
pop
mov
loope
push
mov
sbb
dec
adc
xchg
cmp
adc
repnz
jne
cmp
dec
push
mov
inc
insb
sub
les
sbb
xchg
sahf
jg
scas
adcl
jnp
addr16
push
rcrl
adc
stos
cs
fiadds
xchg
stc
test
push
rcrl
imul
dec
nop
rcrl
mov
jg
sbb
adc
xchg
dec
sub
mov
adc
test
pop
and
cmpsl
inc
pop
aam
fwait
xor
dec
inc
pop
inc
pop
iret
mov
mov
jmp
push
and
lret
int
loope
mov
jmp
hlt
jp
mov
popa
push
stc
fcmovnbe
inc
loope
add
jnp
rol
cli
pop
in
cmc
mov
cmp
bound
cwtl
lahf
mov
jl
pop
out
in
incl
pop
xor
mov
sub
mov
cli
dec
push
jno
rolb
xchg
push
addr16
dec
xchg
imul
mov
ss
jge
or
ret
leave
subb
mov
imul
adc
push
pushf
push
ja
negb
xchg
push
push
ja
inc
shlb
roll
icebp
clc
mov
mov
lcall
hlt
adc
and
jecxz
aad
repz
mov
push
aaa
sahf
and
icebp
adc
cmp
out
xlat
dec
inc
and
inc
dec
rcrb
mov
imul
in
mov
add
dec
jge
cmp
inc
mov
xor
mov
dec
fsubr
sbb
in
jnp
movsl
dec
push
jo
mov
outsb
adc
outsl
add
xor
popa
jnp
sbb
jbe
mov
pop
pop
pop
addb
lahf
repz
into
cmpsb
jo
add
sub
inc
testb
and
mov
add
push
in
cmpsl
iret
aaa
xchg
in
std
pop
mov
cs
mov
sub
mov
jle
in
outsb
repz
arpl
mov
popa
xor
out
shlb
dec
in
push
mov
pop
pop
in
div
es
cwtl
mov
push
lods
stos
mov
sub
fidivs
subl
cltd
icebp
loope
jns
mov
psubq
pop
lret
jecxz
push
add
popf
sub
fisubs
lods
lret
je
push
pop
in
sub
sbb
and
jbe
add
stc
out
sub
outsb
xor
faddp
pop
dec
mov
repnz
filds
pop
out
adc
aas
test
or
mov
add
outsb
jns
loope
xor
fmuls
sub
fcomi
push
mov
nop
or
mov
cmp
out
sub
sbbb
nop
add
fucomi
ret
mov
mov
or
and
push
mov
mov
aad
fadds
lods
adcl
mov
mov
test
fstpt
lcall
sti
jb
int3
pusha
in
fucomp
in
rcrb
mov
in
out
dec
cmpsl
out
add
sahf
add
xor
inc
xchg
fucom
das
call
out
sub
add
fs
lret
sarb
mov
add
cmp
sahf
fucomip
fcompl
pop
ja
frstor
adc
mov
std
sub
call
pop
cltd
xchg
inc
mov
mov
pop
cmpsl
push
fwait
and
ljmp
xchg
mov
or
loop
in
jge
fs
xchg
cmp
mov
xchg
push
pushf
sbb
leave
cmp
adc
movsl
int
cmp
testb
std
mov
adc
mov
sbb
scas
push
cmpsb
adcb
repz
test
arpl
push
cmp
jle
shrl
jnp
sarb
cmp
mov
xor
pop
fildll
cltd
int
push
add
sbb
stc
pusha
pop
lods
xor
imulb
lret
mov
mov
repnz
aam
sbb
fs
rol
movsl
cmp
mov
sub
jae
fdivl
loop
stos
sbb
cmc
xchg
ss
aad
dec
sti
mov
jae
mov
scas
mov
xchg
subl
push
add
push
daa
mov
test
jl
sub
les
xorb
rol
cmpsb
mov
es
push
mov
das
xchg
fcoms
idivb
repz
pop
cwtl
inc
int3
mov
je
and
in
xchg
fidivrs
mov
sbb
sub
and
cs
xor
fisubl
lods
test
xor
out
pushf
adc
ljmp
adc
int
movsl
mov
loope
in
push
xor
push
lods
jno
mov
add
movsl
mov
stos
gs
xchg
jbe
into
jb
in
arpl
push
cs
push
lea
mov
pop
das
dec
lahf
adcb
sbb
push
lock
aaa
popf
xchg
out
mov
fdivrl
les
cmp
mov
and
mov
mov
xchg
fisubrs
daa
cli
out
or
dec
jne
xchg
sub
inc
inc
fdivp
jae
lret
push
push
inc
jg
popa
inc
stc
mov
mov
cmpsl
test
jnp
push
xchg
stc
jmp
sub
icebp
push
cmp
push
imul
lcall
in
fisubrl
popa
sub
push
orl
xchg
ljmp
sub
movsb
mov
or
adc
push
mov
cwtl
cmp
gs
mov
xchg
inc
test
mov
loopne
cwtl
push
js
add
imul
stc
sbb
lods
lea
jp
sub
out
cmp
addr16
xchg
fstpt
cmpsb
mov
jnp
dec
mov
lea
outsb
cmp
lods
cmp
inc
mov
out
xor
add
adc
insb
push
aam
js
mov
scas
mov
pusha
aaa
subb
jo
jge
popl
in
mov
das
xor
push
fistl
adc
mov
iret
lea
push
hlt
imul
pusha
shll
pop
leave
pop
mov
mov
cmpsb
out
add
mov
jge
and
add
lret
push
popf
sbb
test
sti
xchg
ficoml
sub
nop
int3
xor
sbb
out
mov
movsb
dec
scas
andl
dec
rolb
jnp
mov
push
aad
mov
dec
sbb
xchg
xor
add
push
sub
pop
inc
insl
add
mov
mov
and
inc
add
mov
leave
mov
mov
test
test
cmc
lock
sbb
cmpsb
into
in
loop
loopne,pt
sbbb
lahf
inc
ljmp
add
fldl
pop
in
cltd
and
fistl
bound
mov
xor
je
xchg
xchg
repz
daa
in
into
sub
mov
lcall
or
cmp
out
scas
pop
shrl
adc
push
jle
push
xlat
fadd
inc
pop
addr16
outsl
gs
jne
mov
sub
sbb
arpl
fidivs
dec
jmp
shl
and
push
mov
mov
scas
out
sbbb
or
push
sub
mov
xchg
arpl
jb
push
lods
ret
test
test
xor
xchg
mov
adc
dec
je
push
inc
jb
jmp
xchg
add
xor
or
cli
movsb
cs
lret
cli
mov
fbstp
int
lret
and
jecxz,pn
in
dec
or
out
and
fsubrl
dec
xor
xchg
cmp
push
scas
ss
into
repz
shll
xchg
loopne
repnz
mov
dec
rdmsr
cmpsb
xchg
lods
xor
scas
jae
xchg
push
xor
xor
adc
shlb
ss
inc
ljmp
aaa
cmp
dec
jle
adc
pop
and
fcoml
fcoms
aam
loopne
jb
pop
gs
std
push
test
lret
dec
sub
fxch
sbb
xlat
or
adc
sbb
sbb
xchg
mov
gs
cwtl
outsb
aam
loop
mov
mov
fsubrl
cli
xchg
add
les
gs
add
push
and
scas
movsl
xchg
mov
lock
add
mov
js
out
incl
lahf
and
or
push
je
lcall
rcr
jb
popf
mov
daa
movsb
pop
rcrl
stos
aam
lahf
xor
pop
lret
inc
xchg
mov
addl
out
inc
lock
in
mov
aaa
rorb
xchg
and
scas
sbb
ss
mov
mov
aam
pop
dec
cmpsl
sbb
ret
jge
push
cs
sahf
xlat
mov
xchg
xorl
loope
push
push
xchg
push
enter
xchg
mov
test
shr
mov
jnp
shrl
repz
mov
lock
and
mov
ss
cmpsl
insb
sti
shll
xchg
decl
lahf
xor
or
inc
jne
sarb
leave
mov
ret
dec
fbstp
fs
adc
pop
les
xchg
sbb
pop
inc
xchg
xor
ret
xlat
in
cmc
xchg
cltd
cmc
xchg
loope
lret
cmp
and
shll
movsl
add
mov
clc
lods
pxor
int3
cmc
xchg
shl
xchg
sub
xor
addl
push
sarb
call
inc
mov
int
gs
lahf
sahf
data16
jge
cmp
cld
cltd
inc
jecxz
xchg
cltd
mov
dec
cmp
jo
fs
sub
pop
mov
je
push
adcb
das
cltd
adc
jp
lret
jecxz
fldt
sbb
orl
jnp
inc
imulb
sbb
cltd
xchg
cmp
sarb
js
push
inc
bound
lods
dec
fmul
jae
sahf
jne
and
sbb
out
sarl
in
arpl
and
xchg
inc
aad
call
pop
test
out
faddl
jb
push
push
xor
mov
pop
dec
mov
push
and
insl
mov
sbb
sbb
fists
cmp
mov
out
test
cwtl
cmp
test
notl
ljmp
call
cld
es
inc
ljmp
add
xchg
cmp
rcl
and
out
sbb
pusha
cltd
or
sub
lea
pop
shlb
shlb
inc
mov
aam
bound
add
ret
daa
ja
add
hlt
dec
insl
sub
jo
aam
lds
aad
xchg
fs
roll
pusha
es
scas
xchg
mov
and
and
jne
dec
pop
push
insb
ljmpw
push
in
sbb
scas
cmp
vmovntps
xorl
insl
sbb
mov
mov
jg
fldenv
jbe
xchg
push
popa
in
jb
push
sbb
out
mov
cmp
mov
in
pop
lret
test
sub
jge
lock
inc
jb
xchg
stos
rsm
inc
aas
and
adc
and
and
rclb
stos
mov
mov
and
or
adc
mov
stos
add
in
mov
add
mov
das
lods
scas
stos
xor
jmp
mov
jge
or
cmp
clc
and
and
and
sub
adc
cwtl
mov
lea
mov
jecxz
ret
mov
adc
pop
mov
cltd
je
mov
xor
movsl
ja
sbb
dec
and
jmp
divl
lods
cld
in
push
aas
outsl
push
or
mov
pushf
xor
xchg
xchg
pop
std
aam
jno
push
in
or
push
jmp
adc
bound
mov
jbe
push
xchg
push
ret
stos
ja
out
push
dec
sbb
add
lcall
sub
jno
dec
arpl
xor
fadds
jne
xchg
sbb
adc
inc
scas
xchg
out
stos
adc
cmp
sbb
inc
scas
notb
sarb
int
popa
jb
je
cli
stos
mov
inc
in
subl
adc
xor
xchg
lds
or
pop
cmp
stos
mov
nop
jnp
and
je,pn
popf
mov
lahf
inc
nop
ljmp
lret
daa
lcall
mov
dec
cmp
push
dec
test
test
aad
inc
sub
and
out
icebp
shlb
sbb
subl
sbb
lahf
jb
push
ret
push
popa
xchg
adc
mov
or
pop
inc
fisubl
adc
sbb
stos
les
mov
lock
mov
imull
xchg
js
insl
pusha
cmpsl
adc
out
push
sub
iret
or
rcll
fucomp
dec
xchg
mov
add
cmp
idiv
cld
push
and
inc
shll
sti
mov
or
out
stc
xchg
ret
loope
ret
push
or
aad
push
or
add
cmp
xor
mov
jae
fwait
xor
sbb
int3
or
sahf
les
push
sub
mov
stc
int
xchg
push
movsb
inc
sub
or
dec
push
jo
lods
cwtl
mov
outsb
xor
mov
jnp
dec
pop
jmp
and
movsb
icebp
nop
cmc
pusha
xchg
jnp
sub
xchg
cmc
js
adc
or
inc
jmp
push
lret
lahf
repnz
sub
popf
cmpb
adcl
xchg
rol
or
movsb
jo
mov
push
out
jno
mov
xchg
adc
int
inc
jle
fnstenv
mov
lods
dec
cmp
sbb
jo
sub
sub
jp
ret
push
jmp
imul
add
dec
lahf
int
mov
cmp
out
mov
jns
cltd
call
aaa
sti
ja
mov
bound
jl
jne
cmp
mov
pop
and
fstpl
mov
andl
aaa
les
pop
test
stc
pop
sarl
xor
push
cwtl
les
xchg
mov
jo
and
push
nop
mov
and
ss
loopne
push
mov
dec
xchg
jne
mov
lock
neg
and
aaa
dec
stos
je
and
repz
mov
pop
fnsave
rclb
stos
jo
xor
clc
je
dec
push
stos
imul
push
xchg
movsb
mov
jnp
sbb
aad
addr16
jp
test
in
sbb
jne
mov
adc
loopne
stos
ficomps
leave
jle
f2xm1
add
dec
mov
inc
push
outsb
sbb
pop
cmp
int3
test
inc
pop
stos
xchg
dec
jp
xchg
les
xor
outsl
jecxz
dec
xor
xor
out
add
popa
xchg
test
dec
push
inc
or
dec
movl
pop
pop
fwait
pusha
int3
popa
insl
pop
dec
pop
stc
je
shrl
sbb
pop
in
lcall
jg
int
jbe
sbb
lret
jge
push
out
and
outsb
inc
lea
sahf
xlat
mov
push
sub
mov
shrl
outsb
fimuls
repz
cwtl
pushf
cli
add
or
cwtl
call
push
aad
lret
inc
stos
mov
xor
mov
mov
aad
aad
xchg
jl
dec
jl
pop
push
loop
jl
mov
xlat
outsb
add
fdivs
mov
sub
mov
ret
xchg
imul
aam
xchg
leave
mov
lds
add
mov
pop
lods
xor
test
sub
and
loope
xchg
and
adc
icebp
rcrb
cmpsb
mov
xor
or
jmp
pop
adc
cmp
fadds
orl
cmp
sbb
jo
sub
xchg
les
sbb
ss
enter
xchg
lret
dec
xor
jge
pop
xor
add
ljmp
out
in
dec
call
movsb
fstpt
and
pop
shlb
jo
xchg
shll
add
mov
cltd
mov
mov
push
inc
daa
mov
es
loop
cmp
lahf
mov
dec
and
xor
sahf
sbb
xor
test
cmp
jecxz
es
bound
push
les
jmp
dec
mov
mov
shl
mov
adc
xchg
pop
cmp
lret
sbb
les
fsts
or
jmp
insb
jl
shlb
xlat
xor
cmp
pop
das
iret
das
pop
jbe
out
sbb
mov
sub
inc
mov
sbb
ret
vpmacsww
ja
jg
pop
pop
push
or
popf
cmp
mov
adc
imul
dec
add
int3
mov
jge
xor
adc
mov
pushf
out
push
xor
shlb
popf
push
nop
gs
in
xor
aad
dec
sub
pop
clc
sbb
repnz
iret
addr16
push
jnp
xor
dec
sub
scas
test
xchg
fdivrl
jno
cmc
stos
dec
jge
rol
cmp
mov
adcb
xchg
int3
jecxz
jle
jne
pop
xchg
shlb
dec
fs
mov
add
mov
jns
mov
dec
and
jno
or
xor
notb
jmp
sar
pop
jp
gs
sub
ja
mov
and
dec
mov
mov
cwtl
aam
fildl
sub
ljmp
imul
pushf
adc
pushl
insb
movsb
cmp
pusha
je
xor
inc
in
inc
dec
lcall
in
stc
jl
insl
cmp
jns
daa
into
mov
jns
inc
xor
lret
negl
mov
push
push
xor
jg
inc
jle
mov
mov
popf
popa
xchg
out
sbb
mov
and
mov
lds
imull
les
add
xchg
popa
pop
jecxz
lret
sub
and
outsb
xor
jnp
test
dec
jno
pop
adc
and
test
int3
pushf
fmull
in
clc
aam
pop
dec
shll
std
stos
test
jnp
dec
mov
add
ja
and
jnp
push
cs
lret
mov
dec
push
imulb
mul
or
mov
lret
adc
mov
notl
xor
pusha
pop
frstor
push
clc
bound
cvtpi2ps
jae
std
js
in
shrl
inc
in
pop
test
push
out
dec
and
pop
or
addr16
cmc
imul
stc
in
adc
std
mov
stos
loopne
mov
in
xchg
dec
adcb
jnp
pop
xchg
popf
sarb
je
stos
xor
jb
xchg
lods
xchg
clc
sub
mov
add
sub
mov
adc
add
pop
dec
mov
call
xchg
jecxz
mov
push
stc
push
push
mov
fdivs
jg
fmull
dec
stc
jo
jmp
sub
pop
push
cs
mov
sbb
mull
pop
cmc
and
das
adc
icebp
cmpsl
call
adc
fwait
jp
mov
push
das
sahf
imull
lods
mov
push
icebp
dec
out
mov
cmpsb
cmc
jb
dec
scas
mov
mov
jae
add
sbb
cli
repnz
mov
jle
jp
xor
jle
aam
pop
or
mov
pop
divb
pop
pop
loopne
dec
jns
jle
cmpsb
sub
call
mov
push
xchg
mov
je
data16
cmp
pop
sub
push
jl
sbb
adc
insb
mov
pop
ljmp
mov
add
xchg
pushf
dec
enter
jno
mov
fildl
mov
push
and
movsl
jns
out
lahf
jbe
out
xchg
xor
sti
xchg
movsb
orb
lea
and
stos
xchg
cltd
push
xchg
cwtl
mov
mov
movsb
xchg
enter
pop
jb
dec
fwait
cwtl
aad
mov
aad
push
es
jbe
popf
cmp
icebp
sbb
outsl
push
push
cmpb
inc
fsin
or
ret
xchg
jg
dec
mov
in
lea
mov
shll
fucomip
xor
xchg
rclb
lods
cmp
test
insl
mov
int3
incb
mov
jecxz
mov
mov
cmp
sbb
scas
sti
jb
nop
add
dec
das
in
push
inc
push
fs
cmp
add
push
arpl
cmc
sub
pop
add
jecxz
es
xchg
lret
xor
and
push
sbb
pop
aas
pop
inc
sub
and
and
mov
mov
xor
cwtl
push
lret
subl
and
popa
insb
mov
sub
dec
sahf
pop
jnp
mov
jge
fs
popa
cmp
popf
ret
jp
dec
xchg
fistl
pop
adc
add
mov
mov
stc
test
mov
aam
add
cmp
popf
xor
mov
sbb
repz
movsl
sub
sbb
cltd
push
jecxz
push
push
cmp
imul
mov
js
cmp
rorb
mov
icebp
push
insl
sub
dec
pop
add
add
adc
mov
cli
mov
aaa
mov
dec
inc
add
call
push
fsubr
pushf
in
or
mov
pop
or
xor
cmp
jbe
loope
jecxz
shlb
inc
mov
dec
push
push
fisttpl
into
and
fimull
stc
mov
aad
fimull
ficoms
test
stos
add
in
xchg
inc
ja
cmc
test
pop
adc
jp
sbb
mov
jl
cmp
or
push
pop
es
sbb
sbb
adcb
fildll
and
jnp
adc
aad
adc
xchg
adc
add
andl
inc
mov
lods
test
repnz
in
sub
je
aam
fsubr
xchg
mov
insl
popa
sbb
push
inc
jb
arpl
inc
cmp
out
lods
add
bound
adc
ret
mov
jnp
add
ffree
mov
aad
mov
sahf
adc
mov
jbe
stos
loope
out
xchg
sbb
out
xchg
int
jecxz
cmp
in
ret
out
xor
lock
dec
cmp
inc
inc
inc
pop
pop
out
cmp
cwtl
xor
adc
sub
or
insb
int
repz
into
or
aas
cmp
xchg
xor
gs
fdivrl
in
pop
aas
and
adc
shl
jmp
jb
xor
xlat
ljmp
push
js
xor
sub
mov
lods
mov
mov
xor
dec
fimuls
adc
loope
insb
lods
and
ljmp
rcll
call
hlt
fmull
out
mov
xorps
cmp
movsl
pushf
jb
mov
sub
sbb
dec
jo
repz
les
lds
mov
mov
testl
adcl
nop
mov
adc
mov
jge
sti
adc
push
rcrl
or
shr
mov
in
mov
jns
mov
push
mov
jl
hlt
adc
sbb
xchg
jnp
inc
cmpsl
mov
das
std
pop
lret
inc
push
es
test
xchg
push
xor
idivb
in
push
push
sub
scas
cmp
idivb
roll
push
fisttpll
repnz
mov
and
int3
das
mov
push
jge
iret
movsb
push
mov
or
jge
sahf
inc
out
and
or
mov
inc
push
out
inc
fisubs
inc
xor
ja
mov
push
in
sarl
ja
lods
faddp
jp
xchg
movsb
inc
sub
mov
push
ret
lahf
lret
repnz
mov
clc
adc
je
jge
lods
and
mov
dec
sbb
jmp
sub
jp
fmuls
in
loopne
lods
insb
push
jg
aaa
out
adc
adc
inc
fdivs
pop
es
ss
divl
sbb
imul
jb
jmp
les
and
scas
sahf
cs
fmuls
sub
mov
xchg
cmp
xchg
or
push
enter
mov
outsl
movsb
outsl
fs
jp
cmc
rcr
roll
int3
leave
inc
cmp
mov
fisubrl
cld
mov
dec
cmc
jno
mov
test
cld
rorb
or
cmp
inc
lea
jne
cli
repz
stc
or
sbb
xchg
repnz
push
jne
or
sbb
pop
cltd
aad
inc
adc
jge
sahf
scas
sub
cwtl
clc
ds
test
xchg
inc
and
aam
les
lcall
dec
add
mov
cmc
fdiv
mov
movsb
mov
sub
fdiv
repz
fdivr
add
adc
sub
outsb
mov
xchg
bt
gs
push
xchg
dec
test
loopne
xchg
mov
icebp
out
mov
aam
dec
xlat
jge
scas
lds
pop
inc
sbb
add
fldcw
mov
test
hlt
xor
xor
sub
pushf
cmp
pop
sahf
addr16
int3
push
cmc
in
inc
ret
push
cmpsb
divl
and
movsl
mov
jnp
push
call
sbb
push
sub
dec
jp
jecxz
nop
push
lock
mov
mov
add
or
scas
ficoms
movsb
std
adc
inc
and
mov
mov
popa
pop
mov
sbb
mov
popa
call
clc
into
push
jge
push
cmp
lcall
shll
orl
jle
mov
add
jbe
dec
xor
or
mov
sub
jno
push
xchg
jl
ja
xchg
jge
setnp
mov
stos
dec
ror
shr
mov
jmp
cmp
mov
lds
iret
dec
pop
popa
dec
adc
mov
sub
xchg
mov
arpl
sbb
out
pop
push
js
sub
jns
stos
jmp
push
and
mov
and
fst
jl
jo
mov
leave
sub
mov
push
sub
lahf
aam
inc
xchg
mov
sub
fbstp
rorb
std
outsb
mov
add
sahf
cmp
jecxz
add
dec
loop
subl
or
xchg
aad
mov
push
push
aad
jle
mov
leave
mov
adc
test
pop
loope
ss
sbb
xchg
sbb
xor
fstp
leave
ljmp
hlt
mov
mov
and
add
pslld
les
movsl
sbbb
pop
xor
iret
xlat
or
and
pusha
ljmp
stos
pop
pop
jae
pop
mov
sub
inc
stc
inc
js
sbb
jns
loopne
lea
addr16
push
insl
rclb
mov
into
jmp
push
xor
and
mov
xor
scas
and
jmp
jge
jle
add
mov
cmp
push
mov
aam
aam
sub
push
lods
adc
cwtl
push
fwait
pop
mov
enter
xchg
dec
mov
cmp
cmpl
fs
cs
popa
or
push
and
inc
insb
push
mov
in
sbbb
and
inc
cli
jne
jb
lds
jne
in
inc
jp
or
lret
pop
push
cmp
shll
insb
out
push
mov
push
or
sub
mov
repnz
mov
mov
sarl
adc
jl
cmp
addr16
inc
lods
clc
push
stos
pop
out
inc
cmp
mov
lret
pop
enter
and
add
jbe
adc
xchg
jnp
and
shrl
jb
or
pop
push
lahf
out
inc
sbb
mov
add
fstpl
popa
fwait
mov
push
sbb
push
popf
jo
jae
aad
repz
dec
cmc
lret
test
cmp
jp
pusha
push
addr16
dec
push
jecxz
andl
gs
notb
lods
mov
lahf
iret
or
mov
push
add
nop
sub
mov
sub
mov
add
jge
pop
inc
push
pop
aad
inc
divb
mov
xor
aam
dec
repz
sbb
dec
xor
shrb
mov
jb
push
dec
andl
jle
cmp
out
test
das
cld
jns
mov
xor
cli
and
cmp
lea
add
mov
jmp
push
xchg
mov
and
clc
mov
push
push
jnp
push
pusha
rorl
push
xor
jge
loop
jp
pop
js
ret
shl
cmpsb
lock
or
mov
dec
fadds
in
pop
ds
xor
out
inc
xor
cmc
jne
jecxz
fwait
sub
dec
in
push
dec
fwait
pop
cmpsl
push
mov
mov
sti
xchg
mov
mov
mov
sbbl
imul
sahf
outsl
adc
movsl
mov
push
xlat
mov
cmp
pop
sbb
push
push
add
aaa
test
inc
stc
mov
daa
and
test
mov
mov
pop
stos
pop
fimuls
mov
cmc
xchg
bound
xchg
jg
imul
xor
test
outsl
dec
enter
inc
sbb
xchg
jo
leave
inc
mov
stos
cwtl
sub
jmp
fsubl
xchg
stos
mov
xchg
sbb
loop
add
xor
add
lods
add
arpl
jl
xor
inc
fadds
int3
xchg
mov
adc
ljmp
jno
int3
mulb
leave
fnstsw
push
sub
push
xchg
and
jl
mov
popa
imul
mov
cli
ret
fbld
mov
rep
pushf
mov
mov
lods
arpl
jns
push
pop
or
xchg
mov
sbb
adc
iret
fistpl
outsb
js
std
in
push
inc
inc
hlt
jecxz
or
adc
cwtl
das
adc
fsubrs
mov
xor
lahf
sub
in
adc
iret
pop
sub
xchg
dec
xchg
mov
es
dec
pop
clc
call
mov
in
mov
orl
inc
mov
js
fimull
dec
jg
loopne
in
jo
subb
mov
cltd
test
dec
rclb
mov
mov
mov
or
sub
push
setle
cs
cmp
jecxz
add
xor
ds
push
mov
fldt
cmp
jg
pop
sub
cmp
icebp
cmp
hlt
or
adc
mov
xchg
rclb
test
lret
fists
pop
data16
sti
push
lahf
jg
out
sbb
mov
sahf
fcoms
out
movl
jl
push
sbb
or
push
cwtl
mov
mov
pop
cwtl
sub
stos
jbe
mov
pop
sahf
jp
jge
or
mov
adc
gs
mov
icebp
nop
jo
stos
mov
testb
cmp
push
fisttpll
pop
jge
lock
xchg
push
aam
pop
inc
add
add
mov
adc
adc
xor
xchg
add
in
addl
fs
sahf
test
out
ss
and
lds
cwtl
in
push
jae
ret
sub
jle
push
dec
js
stc
insb
mov
push
jmp
pop
mov
int3
sub
in
cs
push
adc
int
dec
jecxz
mov
das
imul
sub
dec
push
mov
dec
mov
sbb
and
rcll
stc
pop
adcl
cltd
pusha
mov
push
dec
adc
pop
sbb
insl
push
aam
lds
sbb
add
xor
fs
mov
xchg
filds
ret
fwait
loop
sahf
insb
xchg
pop
cmp
ss
xchg
sbb
mov
jl
mov
insl
fwait
mov
lods
xor
pop
or
pop
ja
test
dec
push
cmp
cli
pop
xor
je
inc
add
pop
jb
jmp
test
sbbb
mov
rcl
mov
repz
insb
mov
stos
mov
xor
sbb
outsb
mov
add
imul
mov
mov
push
jl
mov
adc
scas
xor
addr16
shl
jp
cmp
mov
pop
mov
pop
jnp
aaa
mov
mov
push
iret
cmp
mov
cs
je
and
jmp
xlat
hlt
adc
jmp
dec
or
into
test
cmp
add
popa
xchg
ret
loopne
in
mull
mov
push
inc
aaa
fucomi
pop
pushf
lret
jo
loopne
push
arpl
fidivrs
push
pop
clc
push
add
mov
jle
call
rorb
mov
mov
mov
add
in
loopne
out
stos
in
stos
shl
cltd
push
shrb
jb
cmp
pop
push
cli
shr
fisubs
and
cwtl
jle
imul
mov
dec
pop
cld
out
sbb
sub
out
inc
pop
sbb
sbb
mov
in
sub
dec
insb
cmpsl
sub
lods
mov
and
push
xchg
xor
add
arpl
sub
jns
push
call
imul
dec
cmp
cmp
cli
inc
mov
or
push
in
push
dec
jmp
clc
test
jle
adc
push
jb
push
mov
inc
scas
xchg
iret
add
rcll
xchg
add
or
mov
popa
cmp
testl
xor
ja
or
lret
mov
std
lea
cwtl
ret
and
stos
stos
inc
hlt
inc
push
cltd
ret
inc
or
jge
jno
andl
or
jnp
loopne
sbb
jbe,pn
insb
mov
pop
cmp
push
insl
les
cmc
data16
cmp
into
dec
ror
dec
xchg
sbb
jno
sub
inc
out
and
pop
cmpsl
pop
icebp
push
mov
jo
outsl
or
push
in
pop
inc
xchg
jg
movsl
or
ret
fldt
mov
hlt
js
icebp
mov
out
call
lds
sub
push
adcl
cmp
dec
lahf
push
pop
push
sub
pop
jnp
je
fs
adc
mov
fwait
jae
loopne
outsl
or
push
movsb
fs
rclb
icebp
add
es
jo
add
push
push
and
cmp
addr16
sub
xchg
pop
or
inc
test
push
lret
lds
dec
adc
in
mov
in
and
es
stos
cld
fsubr
aas
xchg
add
lret
mov
or
mov
jnp
add
jne
out
loope
push
andl
pop
cmp
pop
jbe
mov
mov
pop
push
lcall
imul
fs
mov
loop
imul
or
and
cmp
loope
repz
ret
fdivr
sahf
jns
in
sbb
stc
xchg
lods
popf
jecxz
push
dec
lods
pop
movsl
sbb
or
fldl
pushf
mov
and
xor
iret
adc
or
lea
das
imul
and
and
movl
ja
ret
push
stos
pop
push
sub
dec
push
xlat
dec
aas
lea
cli
jbe
aaa
mov
mov
sub
xlat
mov
dec
jnp
xor
jbe
dec
adc
xor
dec
in
mov
aam
dec
mov
incl
out
in
or
pop
lods
repz
gs
or
push
and
insb
jl
jg
add
sub
pop
popf
mov
mov
lret
pop
sbb
sub
imul
pop
test
cltd
mov
into
inc
push
xchg
in
lcall
sbb
pop
pop
adc
iret
or
out
ss
dec
inc
scas
ret
jmp
daa
call
cs
sbb
sbb
sbb
enter
fcmovne
cmp
cmp
xchg
leave
test
inc
rcrl
das
jecxz
fwait
mov
ljmp
ret
out
fmull
jnp
push
adc
movb
jb
bound
mov
scas
xchg
dec
jne
in
mov
inc
inc
jecxz
test
adc
pushf
pop
orb
xor
sub
push
hlt
sub
pop
and
cmp
aas
mov
mov
subb
sub
hlt
xor
arpl
scas
mov
mov
rolb
lods
mov
jle
imul
cltd
xor
rcll
mov
fisubl
xlat
scas
sbb
pop
jp
rcrb
fcoms
push
imul
inc
jl
sbb
ret
in
arpl
arpl
dec
sbb
lcall
sar
xor
mov
mov
decb
adc
mov
sub
fstl
sub
jnp
pop
jg
push
cld
ljmp
iret
and
push
adc
pushf
and
dec
adc
int3
push
or
sub
popa
mov
jl
jge
mov
sub
aad
mov
mov
pop
cli
pushf
pop
int3
inc
and
test
out
aaa
andl
jae
jb
adc
xchg
xchg
xchg
add
scas
xchg
scas
int3
jge
or
inc
push
pop
sbbl
push
lock
leave
lret
out
fistpll
mov
pushl
xchg
jp
mov
cmp
jbe
mov
into
iret
pop
pop
in
leave
repz
int3
pop
sti
push
push
stos
sub
scas
jecxz
das
xchg
stos
sti
xchg
mov
out
mov
test
jl
push
in
arpl
je
add
sbb
leave
pop
cltd
push
negb
dec
jp
loope
inc
pop
shl
mov
mov
fs
cld
cmc
xbegin
and
imul
inc
fs
shr
jge
mov
xchg
push
repnz
rclb
dec
xchg
mov
xor
add
push
pop
inc
dec
in
jns
adc
sbb
and
sbb
repnz
scas
and
xchg
pop
rcl
jne
inc
ja
pop
setno
pusha
loopne
nop
add
rcrb
mov
je
or
lods
mov
mov
mov
out
jmp
lahf
bnd
pop
push
stc
cmp
adc
lahf
cmp
pop
out
jno
pop
sub
mov
mov
push
mov
cld
arpl
inc
push
fildl
aam
inc
orb
movb
adc
lods
cmp
add
cmp
mov
push
les
arpl
lock
dec
dec
iret
xchg
ss
mov
dec
into
cwtl
test
clc
pusha
mov
dec
bound
sub
pop
imul
pop
push
inc
inc
out
out
adc
adc
adc
mov
rcrl
in
lds
enter
dec
hlt
dec
mov
push
je
mov
mov
sub
in
insl
test
cmp
out
test
inc
xchg
ds
cmp
movsl
and
insb
sahf
in
mov
fiadds
mov
jge
jo
test
pop
sbb
adc
sbb
mov
pushf
xor
call
stos
test
in
cmpsb
arpl
loope
add
dec
iret
test
cltd
xor
fwait
into
mov
push
mov
mov
inc
movsl
sub
add
xchg
loopne
scas
loopne
in
call
mov
cwtl
xchg
mov
jae
push
ficomps
shll
fisttpll
repnz
pop
fisubs
sbb
mov
xor
loope
push
int
sub
mov
cmpsb
arpl
call
adc
inc
xchg
fcomps
sub
out
inc
call
rcrl
mov
inc
inc
loopne
sbb
xor
and
pop
in
sub
mov
test
mov
inc
xchg
andb
inc
mov
xchg
sarb
aad
inc
pop
in
pop
lock
mov
jecxz
daa
mov
in
mov
pop
jns
sbb
dec
lahf
dec
jo
dec
pop
imul
daa
sbb
sub
and
push
jmp
in
jnp
aas
sub
xchg
add
jb
push
insb
sbb
iret
lcall
vcvtsd2si
push
adc
mov
ljmp
sbb
pop
mov
sub
mov
and
in
ficoms
jno
cmp
push
popf
xlat
clc
push
push
pop
in
shrl
mov
push
out
je
data16
inc
sbb
jne
daa
cmp
cmp
test
fdivrs
aas
sbb
push
fdiv
sub
adc
pop
push
or
lcall
mov
xlat
and
lds
ss
jmp
jle
sbb
and
dec
int
inc
sbb
lods
push
in
pop
sbb
cmp
into
insl
or
xor
jecxz
data16
daa
inc
dec
mov
int3
add
push
decb
dec
adc
sbb
sub
xchg
mov
shrb
mov
jmp
jb
icebp
ret
addr16
stos
sti
mov
sahf
loope
mov
pop
es
sub
mov
stos
mov
cwtl
cmp
hlt
mov
xor
sub
mov
roll
jb
nop
shl
outsl
mov
xor
or
pop
call
mov
jge
shrl
xchg
cmp
das
xor
cmp
xchg
push
push
add
adcl
ret
mov
sbb
xor
testl
adc
mov
sarb
pushf
and
pop
subl
dec
or
or
and
push
push
rcl
jo
cmp
pop
xchg
std
jl
mov
iret
gs
cltd
fnstenv
gs
cmpsb
or
add
lret
mov
jl
fwait
xchg
cs
test
lret
sbb
roll
inc
cmp
sbb
push
pusha
testb
push
aam
clc
repz
xchg
pop
fistl
and
jge
imul
cmc
push
loope
xchg
sub
sahf
jno
add
add
cmp
xlat
movsl
pop
pop
shlb
inc
or
sbb
gs
sub
loopne
leave
xchg
or
pop
xchg
pop
ss
fisttpl
bound
xor
lahf
cmpsb
sub
xchg
ror
and
jle
pop
jbe
fistps
ja
out
imul
andb
xor
mov
mov
shlb
lds
mov
imul
add
clc
push
cmpsl
std
mov
mov
mov
loop
jbe
jo
pop
mov
outsb
cs
xchg
push
or
orb
stc
cmp
fdivl
adc
insb
xor
jg
mov
sub
inc
pop
jns
ja
push
pop
mov
mov
call
xchg
pusha
push
pop
mov
movsb
xor
pop
dec
lods
jecxz
xchg
nop
inc
mov
insl
pop
or
push
sub
jbe
stos
inc
cmc
loope
mov
outsb
iret
xchg
xlat
or
leave
enter
cmc
gs
clc
in
cs
sub
pusha
sbb
loope
mov
mov
jmp
add
mov
jne
lret
jecxz
push
outsb
dec
xor
fdivrl
or
mov
and
je
outsb
push
fcoms
sti
xor
add
loop
push
rorl
clc
push
movsl
xchg
popa
pop
and
dec
push
push
cld
orb
mov
jge
imul
enter
pop
into
data16
sbb
sub
ret
and
outsl
lea
jecxz
xchg
jmp
dec
shl
mov
shll
ja
lret
pop
outsl
push
jmp
leave
inc
cmpsl
dec
iret
test
xchg
adc
jl
outsl
dec
fdivrl
dec
pop
sbb
daa
pop
loope
je
push
pop
xchg
ret
aas
inc
std
cs
pop
or
lret
rclb
sbb
lods
ficompl
xchg
test
sub
ss
les
or
clc
cltd
or
sahf
lods
data16
adc
cli
jp
inc
push
pusha
lock
mov
daa
add
xchg
outsl
sub
and
xor
in
fldenv
lahf
cmpsl
icebp
adc
xchg
rcr
das
mov
test
pop
mov
and
out
jmp
push
aam
addr16
and
mov
lds
ret
xor
sbb
dec
and
test
pushf
add
jecxz
jns
movsb
leave
shr
sahf
push
dec
jne
int3
leave
cli
sub
mov
movsb
cwtl
xchg
loope
mov
jb
xchg
cmpsl
cmp
push
shrb
test
xor
mov
subb
xchg
leave
fdivr
dec
fdiv
pop
jp
into
into
jo
aas
mov
lock
mov
shrl
add
push
int3
fadd
mov
push
and
int
fldenv
mov
adc
mov
inc
sub
pop
mov
fwait
add
jbe
pmaxub
lret
out
add
ret
pop
imul
adc
fdivrp
into
aas
and
dec
push
mov
in
xor
mov
test
jmp
xchg
fcoms
sub
jno
sahf
sbb
enter
pop
shrl
rcrl
cmpsl
and
sbb
mov
loop
shlb
into
mov
out
out
sub
mov
xchg
cmpsb
cld
sub
mov
xor
sbb
inc
mov
add
das
mov
clc
mov
repnz
mov
mov
jmp
push
push
out
push
jecxz
popa
cmp
stos
imul
loopne
sbb
ljmp
xchg
jl
sbb
pop
pop
mov
out
inc
repz
inc
out
inc
mov
sbb
mov
outsb
jmp
cltd
aas
scas
inc
fidivs
scas
xlat
data16
jnp
ret
pop
xor
test
scas
sbb
out
jo
daa
loopne
fsts
add
sbbb
push
mov
mov
fmull
stos
xor
fcomps
dec
mov
fiaddl
pop
add
jns
xchg
loopne
xor
adc
adc
in
sti
jbe
shlb
fmull
cmp
jne
es
dec
pop
test
inc
ds
inc
jns
nop
sub
ja
popa
sub
data16
js
jae
arpl
push
mov
or
sub
mov
inc
outsl
mov
mov
xlat
inc
add
jnp
dec
ljmp
jp
xor
xchg
pop
pop
dec
in
jb
loop
pop
pop
pop
adc
call
test
push
fldl
jmp
je
stos
scas
jbe
sub
mov
data16
or
pop
shll
in
dec
pushf
ret
jmp
cmp
repnz
orl
loope
mov
pop
lea
mov
out
insb
ss
mov
jg
adc
xor
fistpll
in
loope
push
adc
gs
inc
das
mov
push
scas
pop
jge
mov
into
dec
outsl
jge
aas
xchg
adc
repnz
sarl
imul
divb
push
pushf
sub
sub
icebp
dec
sahf
pop
iret
loope
inc
popa
mov
push
pop
adc
dec
nop
xorps
call
mov
scas
test
xchg
and
adc
movl
pop
adc
lahf
sbbb
loope
stos
repnz
push
push
mov
mov
dec
test
shlb
rcl
pop
mov
sbb
cltd
pop
mov
inc
cmc
imul
cmp
stos
cmp
repnz
addr16
sub
pop
jmp
and
gs
repnz
lock
jns
out
dec
jp
addl
pop
xchg
push
dec
sarl
add
xchg
repnz
xor
or
xchg
aaa
or
pop
add
das
inc
pop
and
das
mov
mov
sahf
pusha
fsubrl
div
bound
addl
sub
inc
outsl
pop
iret
fs
xchg
and
jge
outsl
das
and
data16
mov
es
mov
jle
outsl
loop
imul
out
push
jge
lods
push
notl
mov
nop
insb
cmp
push
adc
cs
lods
das
movsl
fisubs
push
dec
mov
jg
mov
inc
pop
or
call
sarl
sbbb
incb
inc
in
sub
cmp
jnp
rcl
pop
inc
xchg
aaa
jmp
dec
daa
sti
adc
jle
xor
aas
push
les
and
mov
ret
insl
loopne
fisttpll
stc
out
inc
rolb
stos
ja
mov
sarb
sub
mov
pop
dec
fs
pop
nop
cmp
mov
xor
mov
inc
inc
loop
insb
in
xchg
dec
std
movl
xor
mov
push
sub
mov
out
sbb
xor
mov
mov
cmp
dec
pushf
inc
inc
std
and
imul
jnp
push
inc
ret
cmpb
mov
sbb
pop
sub
or
nop
popf
loope
cmp
call
pop
and
jne
fnstcw
xchg
xor
divl
popf
sbbl
sub
lock
mov
rorl
mov
pop
jb
adc
sbb
add
sub
in
cmp
xor
fcomps
ljmp
push
xor
cli
cmpl
arpl
push
mov
icebp
mov
loope
dec
cltd
adc
mov
pop
adcl
js
lods
leave
gs
adc
sbb
loopne
inc
push
pop
imul
or
iret
and
cmp
testb
cmp
mov
fstpt
push
rcrl
push
pop
decl
cltd
jno
inc
push
xchg
sahf
mov
sbb
push
and
jl
adc
sub
shrb
rorb
rorb
scas
ficoms
mov
arpl
scas
popa
xor
stos
sub
aaa
lcall
pop
ds
pop
shll
xor
mov
push
lods
ficoms
fadd
xchg
jne
pop
hlt
push
frstor
out
or
add
icebp
mov
mov
jg
notl
jmp
js
sbb
push
xchg
fbstp
dec
ljmp
sahf
movsl
test
add
mov
sub
test
pop
xchg
lds
jmp
mov
sub
loope
and
and
addr16
sbb
imul
out
mov
out
sub
inc
xor
pusha
es
cltd
sub
pop
inc
sbb
and
bound
or
jg
mov
popf
in
sub
push
xchg
dec
or
adc
hlt
dec
jne
sbb
cs
int3
mov
adc
pop
jbe
int
mov
je
cwtl
jbe
stos
mov
rcl
xchg
push
push
mov
push
and
xchg
mov
pop
pop
xchg
push
adc
test
jb
pop
xchg
out
mov
bound
mov
or
insl
ret
jo
push
test
sub
pop
ljmp
test
mov
xchg
les
into
add
jle
ss
andb
pop
mov
xchg
mov
jns
dec
push
xor
inc
and
adc
dec
inc
fsubrs
imul
mov
jno
xchg
fidivl
pop
cmp
jp
sar
sar
jp
push
mov
mov
lret
in
cmp
dec
add
into
notb
inc
cmpsl
fnsave
push
xchg
aaa
out
mov
repz
xchg
xchg
add
add
jmp
pop
lea
mov
mov
mov
xor
lea
movzbl
movzbl
lea
movzbl
movzbl
mov
mov
add
movzbl
movzbl
xor
inc
cmp
jg
jmp
call
insb
or
add
add
add
add
outsl
cmpsl
es
push
nop
xor
inc
cmp
jmp
sbb
pop
add
xchg
fs
jne
and
daa
rol
js
lret
ljmp
je
divl
xor
lods
push
cmc
xchg
inc
jb
xchg
shrb
adc
out
sarb
or
and
and
std
dec
decl
addr16
mov
dec
in
lock
mov
sub
mov
mov
dec
clc
mov
adc
mov
dec
aam
jae
sbbb
sahf
adc
sub
adc
xor
int3
ret
xchg
hlt
mov
mov
cwtl
out
into
rcll
push
xchg
dec
push
pop
sbb
pop
jp
push
fldl
out
fldt
push
mov
aas
jl
in
xlat
cmp
les
add
call
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
lea
push
cmp
jne
sub
jmp
