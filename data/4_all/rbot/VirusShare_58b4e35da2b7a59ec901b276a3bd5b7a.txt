in
push
push
push
lea
sub
and
add
ret
fcmovu
lcall
cld
rep
call
pop
lea
mov
dec
cld
mov
aas
add
add
rolb
lcall
pop
ret
mov
andl
andl
ret
push
mov
int
icebp
pop
out
mov
xor
clc
pop
test
je
push
push
push
push
push
fcoml
and
adc
jg
in
lcall
add
ds
add
add
in
mov
jno
mov
lret
xchg
fildl
xor
je
push
push
insl
stc
fisubs
pushl
add
adc
add
lret
ret
mov
cmpsl
and
jnp
pop
mov
mov
ret
jnp
ds
out
cld
insl
jo
andl
add
xor
inc
add
incl
jge
xor
cmp
setge
lea
ret
push
ja
cwtl
std
pusha
int
shr
push
sub
lret
or
sti
add
mov
mov
lea
jmp
movb
inc
sar
cld
neg
or
sub
pushl
das
pop
pop
adc
or
add
in
out
in
addl
push
push
lea
pop
cmp
push
into
add
ja
cmp
cld
inc
pop
cmp
sbb
stc
aad
cld
push
or
fisttpll
mov
mov
push
nop
inc
jecxz
sub
inc
xchg
xchg
and
leave
cwtl
imul
imul
clc
mov
jp
pushf
loop
outsb
arpl
pop
jns
cmp
push
dec
sbb
add
or
int3
mov
and
test
xorl
rol
mov
mov
mov
ret
rorl
push
jl
mov
ficompl
mov
pop
or
not
outsb
mov
add
cmp
jg
sbb
or
ja
rorb
loopne
enter
call
or
fsubrs
push
movd
test
add
sbb
testb
pop
mov
lea
outsl
jecxz
push
push
push
dec
call
jo
adc
pop
mov
sbb
sub
push
jno
mov
push
fdivl
push
push
ret
fldenv
insb
and
test
adc
loope
mov
pop
aad
jo
sbb
mov
fcomp
xchg
fcom
call
out
pop
shr
cmp
sbb
mov
push
sbb
leave
loope
fisttpll
push
call
in
enter
xchg
or
sbb
adc
data16
push
ss
in
loopne
sbb
sbb
jb
enter
push
loopne
push
shrb
xor
push
pop
push
fsubrs
push
nop
inc
sahf
or
fcoms
lock
mov
fsubl
fdivrs
enter
ja
pop
push
in
in
hlt
inc
push
clc
lock
push
sbb
int3
lock
stos
clc
adc
rcrb
enter
fwait
cmc
idiv
je
fisttpl
mov
mov
aad
jmp
pop
mov
lea
push
es
andl
adc
out
mov
stc
push
xor
inc
add
mov
sub
hlt
repnz
std
pop
outsl
or
add
pop
sbb
jno
pop
mov
sbb
add
mov
fnstsw
iret
inc
and
and
pop
xlat
lock
lea
add
daa
or
mov
or
push
xor
inc
sbb
fcomps
rolb
pop
pop
jle
adc
mov
inc
push
mov
mov
jl
dec
jne
sub
cltd
sub
inc
pop
push
push
std
sti
rcll
push
mov
daa
rcr
sti
lds
fcomps
cmp
push
add
push
mov
sbb
pusha
xchg
cld
or
repz
xchg
dec
test
xor
jmp
mov
adc
aad
cld
mov
or
es
pop
sbb
mov
mov
rorb
adc
dec
lock
and
dec
push
add
xor
jne
aaa
fcom
pusha
aad
jg
pushl
jge
orb
jno
fildl
test
or
add
clc
fildll
fmull
or
sub
fisttpl
dec
fstl
cmp
sbb
cmp
dec
fadd
pop
pop
fadd
xor
imul
dec
cmpsb
mov
push
mov
mov
push
mov
inc
xchg
push
lods
add
fildl
add
or
cmp
or
inc
aam
jae
rorb
es
call
pop
jge
add
inc
sti
add
pop
jmp
adc
movsl
imul
repz
jne
mov
pop
fdivl
fdivs
cmp
inc
sub
jmp
fbstp
jbe
cltd
or
lret
mov
lea
pushl
shr
rep
mov
and
rep
aaa
mov
push
lock
repnz
add
add
sbb
or
loop
jl
repnz
lret
sub
movaps
mov
divb
add
out
pop
cld
sbb
jbe
add
mov
jecxz
in
xchg
mov
cmpsb
or
inc
cmp
std
loopne
ret
jb
imul
jb
out
loopne
mov
jns
or
xchg
loop
pop
cmp
adc
or
outsl
cmp
push
test
dec
jne
movsb
xchg
loopne
fwait
enter
push
pop
roll
xchg
push
sbb
mov
scas
loop
pop
sbb
js
test
hlt
scas
mov
lds
insl
adc
xchg
xchg
and
sub
ret
fistps
in
sti
adc
push
jnp
pop
in
rep
adc
sti
inc
cmp
cltd
hlt
out
incl
add
je
sbb
push
dec
push
mov
pop
pop
movb
dec
mov
je
add
daa
cmp
in
orl
adc
in
dec
ds
mov
lods
and
pop
mov
icebp
andb
pushl
xchg
lea
fstpt
sbb
stos
stos
stos
mov
mov
loopne
add
mov
ja
stc
push
mov
out
cld
xor
nop
mov
and
push
addl
mov
je
icebp
xchg
sub
jl
dec
cld
xchg
or
mov
mov
movb
pop
lock
mov
addl
out
loope
cmpsb
loopne
mov
cmp
data16
fldl
add
pop
out
insb
mov
shrb
push
loope
call
push
jg
push
cmp
adc
addl
pop
faddl
hlt
mov
add
mov
mov
clc
push
les
imul
xor
jno
jne
cmp
mov
imul
add
inc
movzbl
loopne
sub
and
ja
push
mov
hlt
inc
hlt
movsl
hlt
add
mov
jo
jo
ss
sub
mov
stc
jmp
popa
js
icebp
ja
xor
not
mov
sarb
pop
dec
mov
pop
mov
adc
push
sub
cmp
mov
add
add
or
jbe
mov
sbbb
add
hlt
test
std
push
push
sub
push
mov
testb
mov
enter
or
or
lret
xor
add
js
adc
lods
scas
jle
or
stc
cmp
jae
mov
fucomp
imul
xlat
jae
or
push
push
aaa
xchg
sbb
icebp
orl
in
pop
jmp
jbe
lock
scas
dec
dec
js
add
add
mov
sub
xor
repnz
dec
or
or
inc
jmp
push
mov
push
popa
cmpb
inc
popa
in
pop
pop
sbb
shrl
add
inc
addl
ja
pop
outsb
adc
addb
jbe
pop
incl
cmp
sbb
lret
sbbb
adc
cli
push
jne
and
jge
lcall
pop
cmp
je
cmp
out
mov
mov
mov
jmp
sub
pop
push
cld
fscale
sti
cmp
jae
inc
jae
add
mov
jo
add
pop
mov
out
je
cli
mov
dec
mov
test
je
jns
test
testb
jmp
push
lods
pop
or
sbb
rcr
inc
jle
push
mov
sbb
and
or
loop
jecxz
ja
inc
jp
mov
cmp
sub
cmp
jae
incl
in
test
jbe
mov
sub
add
push
lea
push
push
mov
jbe
movsb
sub
xchg
push
jmp
adc
mov
mov
or
iret
pop
sarl
loopne
mov
jbe
and
lea
xlat
pop
scas
pop
out
add
dec
mov
mov
add
inc
out
sub
pop
inc
add
mov
call
clc
cmp
add
push
fs
inc
sub
mov
out
ss
cmp
inc
out
andb
or
mov
cmp
sub
imul
stos
cmp
add
and
cmp
add
btr
mov
ret
testb
jne
orb
or
and
adc
addr16
cmp
xor
cmp
sub
sbb
dec
push
and
out
cmp
movl
mov
icebp
add
test
add
dec
loopne
push
xor
cmp
cmp
add
dec
adcl
pop
mov
test
mov
add
fdivs
outsb
cmp
adc
pop
loopne
mov
cs
add
out
lock
leave
push
xor
xchg
dec
jmp
shlb
sub
mov
enter
push
call
mov
dec
cmp
in
nop
out
sbb
outsl
cmp
pop
jl
shlb
dec
jns
push
popf
sub
add
movsb
pop
add
add
outsl
inc
push
push
mov
sub
sbb
popa
push
pusha
mov
cmp
fbstp
mov
stos
mov
push
adc
test
sbb
push
lods
add
rcl
sbb
lock
mov
cmp
or
loope
mov
and
inc
test
ds
arpl
xchg
cmc
mov
icebp
jb
add
enter
loopne
enter
jne
mov
lods
push
or
or
mov
mov
mov
faddl
int3
jnp
push
adcb
les
shl
sub
movsl
push
pop
enter
out
dec
jo
enter
int3
sub
xchg
imul
rcrb
mov
sbb
clc
ds
out
mov
pop
sbb
jle
push
lea
lds
mov
cs
sbb
std
jecxz
or
push
fs
addr16
push
call
nop
icebp
int
pop
pop
push
jg
cmp
jne
into
mov
cmp
cmp
lea
fdivrs
jg
jg
mov
jbe
cmp
cmp
outsl
mov
fbstp
pop
jne
cmp
jae
mov
lcall
pop
pop
jle
cld
push
push
push
push
xchg
push
dec
cmp
mov
aaa
jg
mov
jbe
cmp
sbb
cmp
jmp
mov
cmpsb
fistpl
inc
dec
ss
pop
mov
mov
adc
mov
pop
fcoml
fs
cli
out
das
and
or
and
jae
fcmovnbe
rorl
jge
and
aaa
leave
and
pop
inc
adc
or
in
xor
or
test
jl
adc
rclb
xor
push
push
push
rolb
aam
movsb
adc
and
enter
mov
pop
xor
jnp
inc
and
cmpsl
jecxz
cmp
pop
fsubl
adc
mov
roll
jns
sub
cmp
sub
mov
je
sti
rcrb
jmp
sbbl
test
imul
lock
in
pop
hlt
cmc
dec
mov
imul
sar
sbb
xor
inc
lcall
cmp
push
insl
inc
sub
xchg
push
adc
xchg
repz
mov
enter
mov
mov
or
mov
cltd
sbb
inc
arpl
sahf
insl
packuswb
sbb
adc
nop
pop
push
je
sub
pop
mov
xorl
and
pop
stos
sarb
mov
enter
mov
mov
cmp
and
jmp
imul
jne
or
push
inc
add
jno
cmp
jle
sarb
shlb
imul
mov
test
jmp
pop
andl
cwtl
int
les
or
hlt
lea
fcoms
dec
jae
jne
and
or
cwtl
dec
lahf
add
fldt
dec
dec
shlb
decl
stos
push
pop
je
testb
jne
cmp
ds
mov
cli
or
xor
pop
ficomps
dec
adcl
sub
xorl
pop
mov
jbe
lods
add
mov
mov
or
mov
loopne
cs
das
neg
inc
push
mov
adc
mov
std
incl
xchg
dec
fimuls
iret
sub
je
clc
flds
shlb
cmpsb
pop
sbb
push
sbb
stc
in
and
or
add
ret
popf
fmuls
jge
mov
aad
sbb
pop
adc
iret
cmc
or
push
push
sub
mov
mov
shrb
clc
jne
lea
movl
enter
aam
test
pusha
fdivr
push
lret
lret
lret
jne
cmp
jae
inc
mov
and
inc
push
outsb
jbe
fisttpll
adc
mov
popa
roll
xlat
add
out
pmaxub
push
test
aaa
sbb
jg,pt
and
adc
rolb
mov
pop
inc
cmp
sarl
mov
sub
lea
shl
and
dec
loope
mov
pop
call
in
movsl
xchg
test
test
push
pop
mov
fistpl
sbbl
and
shrl
hlt
jbe
mov
pop
filds
negb
cld
jmp
lock
xor
loope
popa
or
into
jge
push
inc
adc
cmp
incl
or
mov
cmp
add
mov
and
imul
dec
jmp
aad
sbb
mov
cmp
mov
les
sbb
insl
lods
data16
mov
fwait
mov
sbb
ja
or
pop
add
mov
pop
mov
clc
inc
adc
dec
mov
inc
pop
adc
cmp
mov
push
cmp
mov
cli
and
cmpb
dec
rcrl
push
mov
sub
push
push
pop
aas
xor
mov
movl
cld
loope
sub
cmp
lods
stc
scas
pop
inc
mov
insb
mov
mov
jl
pop
push
lds
mov
clc
aad
inc
cwtl
pop
mov
out
notb
push
daa
push
ds
adc
push
cmpl
xchg
aam
pop
movlps
sbb
iret
jne
push
jmp
fmuls
je
mov
cs
push
ja
orb
xchg
hlt
adcl
mov
insb
inc
jo
sbb
mov
and
or
test
xchg
les
adc
push
lock
cmp
pop
inc
adc
outsl
ss
cmp
push
mov
or
add
adc
fmuls
cmp
filds
pop
push
add
sarl
fwait
div
pop
cmp
mov
adc
xor
loopne
lcall
movb
sti
fldcw
sbb
pop
cmp
jne
push
pop
jmp
movsbl
mov
cmpsb
out
insl
mov
decl
inc
push
cmp
adc
jb
mov
divb
xchg
jmp
pxor
xlat
and
es
sub
xor
or
or
push
fiaddl
jg
xor
jne
rolb
jle
cmp
fsubrs
push
call
adc
push
mov
nop
movsb
push
rcl
mov
fs
les
sbb
shlb
add
inc
and
call
scas
andb
push
push
or
aaa
inc
outsl
xor
mov
fs
mov
mov
cmp
push
and
jnp
std
fcomps
dec
jnp
inc
cmp
cmp
fpatan
int3
dec
push
ljmp
pop
pop
sub
leave
cmp
mov
test
fcmovbe
cltd
pop
jo
inc
mov
xor
fbstp
pop
sbb
add
jmp
sbb
xchg
add
jnp
negb
clc
arpl
sbb
mov
adc
pop
adc
and
cmp
inc
mov
xor
insl
or
je
and
mov
arpl
push
insl
scas
push
fcmovnu
arpl
jmp
popa
aam
push
jecxz
jl
dec
scas
adc
push
push
pop
or
add
sub
push
cwtl
std
xchg
push
repnz
leave
sbb
push
dec
lea
daa
mov
xor
je
test
mov
sbb
add
or
mov
lahf
cmp
je
dec
jne
inc
push
sub
rol
sahf
sbb
int3
mov
js
lea
mov
out
jl
icebp
add
decl
pop
loope
out
cmp
cmpsl
outsl
movsb
cld
cmpsl
clc
cld
xchg
dec
pop
inc
xor
rcrb
lahf
pop
mov
in
inc
ja
loopne
loopne
je
mov
push
cld
in
lock
or
ja
sbb
mov
push
sahf
data16
clc
pop
dec
repnz
pusha
or
ljmp
cld
and
popf
adc
test
xor
cmpsb
pop
dec
cmpsl
loop
and
shlb
xor
enter
sub
pop
test
mov
cld
jns
pop
je
fsubs
leave
push
adc
and
push
mov
jge
cld
fstp
adcb
push
and
add
adc
cmpb
les
push
push
pop
fwait
jbe
add
cld
sbb
and
das
push
xor
sti
and
xorl
push
repnz
and
pop
lahf
lock
cwtl
cld
scas
jae
sub
mov
js
cmp
enter
xor
leave
add
add
add
inc
dec
mov
jo
mov
shl
test
shr
push
mov
loope
mov
jmp
inc
xor
push
loope
push
cs
inc
or
pop
stos
xor
addr16
cltd
popf
test
xor
pop
cltd
push
push
aaa
mov
xor
sub
vucomiss
hlt
mov
addr16
sub
sbb
inc
push
jns
inc
dec
and
loope
mov
push
push
xchg
push
push
push
js
and
cmp
push
test
test
sbb
adc
rcrb
je
add
sti
fnstsw
std
xor
or
add
fsubrs
add
xor
add
pop
pop
push
sub
test
pop
out
test
cmp
lock
push
sub
pusha
push
push
add
inc
outsb
cmp
cmpb
jne
movb
push
inc
adcl
sub
test
pusha
lret
or
mov
pop
rclb
xor
call
das
aam
jne
mov
sbb
ljmp
pop
sti
push
sbb
cmp
je
jmp
mov
js
xor
mov
data16
and
and
xor
xor
pop
sbb
mov
int3
or
test
pop
pop
int3
cwtl
cmp
inc
mov
lock
jg
jne
push
daa
mov
pop
lods
pop
pop
test
pop
icebp
addr16
push
or
in
xor
push
add
lea
fsts
incl
adcl
mov
xor
lock
push
cmpb
xchg
clc
sar
incl
fstps
pushf
incb
mov
jmp
stc
test
sti
adcl
push
and
fstps
push
arpl
popf
pusha
mov
rcll
pusha
or
rcrb
orl
cwtl
or
out
clc
pop
cmp
or
jne
fisttps
xchg
sbb
fistps
ret
sub
xor
or
loop
cmp
jne
add
pop
jmp
mov
adc
mov
sub
in
rcl
add
adc
ret
outsl
aas
dec
test
sub
push
loopne
ds
pop
test
mov
pop
cli
or
orl
movsl
adc
scas
lock
into
stos
mov
aam
push
test
es
push
dec
push
xor
test
cmp
sbb
sbb
cmpb
sti
jno
call
add
scas
cltd
or
jmp
sbb
or
sbb
mov
popa
in
jno
fsubr
inc
pop
push
add
adc
pop
jnp,pt
cmp
mov
test
push
and
aad
mov
dec
aam
add
cmp
addb
push
push
xor
mov
push
inc
mov
xor
pop
int3
dec
fidivrs
sbb
jecxz
std
mov
sbb
and
movsb
mov
add
mov
mov
stc
add
int
xlat
sbb
and
rorl
popl
rolb
rorl
inc
push
or
push
cltd
jle
fcoml
add
cmp
inc
add
xchg
xor
mov
sub
leave
add
out
testb
clc
loopne
daa
dec
hlt
loopne
popl
inc
mov
call
mov
mov
cmp
imul
movsl
daa
movsl
and
jbe
sub
inc
jbe
push
or
inc
mov
sbb
pusha
inc
pop
loope
and
and
push
mov
fdivrs
mov
xor
ficoml
cld
or
and
cli
mov
or
cmp
jle
adc
cmp
pop
pushl
pop
sub
and
cmp
clc
add
sbb
mov
cmp
push
mov
jne
push
pop
push
std
xlat
in
sbb
dec
adc
xor
mov
mov
inc
xchg
popa
or
in
or
mov
sbb
stos
test
push
test
outsl
jg
cmp
push
and
xor
cmp
sub
inc
xor
shr
adc
push
cmp
mov
ret
push
push
mov
dec
or
outsb
fimuls
repnz
add
cmpl
sbb
push
or
fwait
push
mov
jl
ja
dec
jg
shlb
sbb
mov
adc
movl
cmp
test
rcrb
loope
push
xor
adc
ja
jecxz
inc
inc
xchg
pop
jg
cli
push
push
inc
mov
aaa
or
lea
fistps
fbstp
movsb
movsl
mov
iret
xor
add
in
xchg
shlb
dec
and
iret
sub
sbbl
shrb
add
sbb
lock
dec
push
ret
xor
inc
test
sub
leave
xchg
insb
push
movsb
sar
add
pushf
rcll
mov
inc
jne
aas
adc
lods
adc
cmp
js
xor
sub
xor
add
add
rolb
icebp
test
into
ret
in
xchg
cmp
push
push
rol
mov
add
ret
push
xor
in
outsb
ss
xchg
stc
mov
inc
test
fnstsw
nop
xlat
dec
mov
adc
fwait
cld
repnz
test
js
mov
lret
leave
sub
fwait
cmp
xor
popf
sbbl
sbb
pop
add
inc
stc
xchg
pop
mov
mov
popa
testl
sahf
inc
insb
cmp
inc
push
dec
popa
mov
cmp
fmuls
pop
or
adc
cmp
add
adc
pop
jbe
push
sar
push
clc
hlt
pop
or
cmp
mov
dec
mov
sbb
repnz
clc
cld
cld
out
testb
jne
sbb
sbb
in
popf
sbb
loopne
add
mov
cld
mov
lret
roll
push
or
outsb
in
les
pushl
xor
outsl
adc
or
add
jge
fs
ret
push
jno
mov
inc
cmc
scas
hlt
add
xor
inc
push
xor
push
jge
push
pop
push
push
ds
rorb
lahf
pop
stc
sub
loope
mov
push
add
scas
mov
sbb
xchg
pop
repnz
movl
pop
push
xchg
loopne
mov
pop
imul
push
fidivs
jmp
jge
das
je
popa
fisttps
rcrl
push
jns
imulb
or
js
push
xchg
jl
add
rorb
sti
das
add
inc
and
add
xor
mov
jge
jnp
and
add
pop
out
scas
mov
jge
xorl
mov
inc
push
mov
call
add
push
insl
sbb
in
ror
std
fiaddl
mov
loopne
movsb
call
cltd
lea
lret
call
fstpt
fbstp
sbb
adc
adc
in
test
xchg
add
fsub
dec
rclb
jno
mov
out
sub
call
sub
sub
mov
lds
dec
xchg
nop
adc
mov
leave
cmp
int3
add
jno
leave
push
jl
incb
jns
push
arpl
sub
inc
scas
pop
stos
jo
in
sbb
xor
loope
imul
mov
jge
xor
fs
add
pop
xor
int3
mov
pop
dec
les
rorb
jecxz
jl
arpl
fwait
fs
xchg
andb
dec
add
js
scas
subb
cmp
pop
out
cmpsl
in
shlb
dec
inc
adc
inc
popa
dec
fcomps
data16
dec
mov
inc
add
sbb
jo,pt
jg
loopne
xchg
cmc
shlb
push
clc
push
shr
pusha
ljmp
jo
mov
jmp
mov
int3
sbbl
pushf
mov
cmp
push
push
out
or
scas
andb
scas
xchg
subl
repnz
or
arpl
pushf
aam
pop
cs
imul
adc
andb
push
sub
pop
rclb
testb
imul
push
mov
cmp
call
out
mov
cs
addb
add
adc
stos
js
nop
mov
push
and
cwtl
xor
inc
sub
addb
fisttpl
add
xchg
jne
push
xor
lahf
and
decl
cmp
cmp
cmpsb
nop
mov
add
fsts
loopne
xlat
inc
push
xchg
jno
into
adc
sub
jae
inc
cs
aad
dec
push
push
and
fs
enter
and
adc
xchg
sarb
mov
in
and
shrb
cmp
add
xorl
fistl
aam
sub
jmp
mov
jne
or
mov
mov
pop
jne
cltd
lods
pop
bound
jle
add
cmp
cli
fdivr
mov
push
xor
pushl
cltd
or
dec
inc
or
sti
leave
mov
ret
dec
jmp
dec
cmpb
push
ljmp
pop
mov
mov
adc
cmp
sub
pop
add
icebp
cmp
dec
outsl
sub
xor
sahf
pop
shl
sub
sub
es
add
xor
int3
call
insb
dec
das
fs
imul
mov
mov
call
mov
push
repnz
in
pop
xchg
xor
test
cltd
frstor
pop
or
jbe
adcb
lds
fistpll
and
lods
or
testl
push
add
push
loop
pop
mov
pop
sub
xchg
test
inc
mov
pop
jne
mov
sub
pop
or
cli
pop
outsb
push
xor
cltd
and
push
je
push
addr16
add
popf
test
adc
fistpl
sub
subb
sub
push
add
cltd
jbe
xchg
mov
push
jl
mov
xchg
and
push
outsl
js
push
repz
adc
cs
xor
pop
imulb
test
fisttpl
lods
or
add
jae
push
sbb
cmp
push
jl
fmuls
sbb
xor
sbb
mov
fxch
in
fdivl
int3
pop
iret
mov
cmp
cwtl
cmp
in
fstps
je
clc
jo
sahf
in
iret
push
cs
push
xor
repz
int3
adc
and
or
cmp
aas
les
or
add
and
lock
out
mov
mov
add
jmp
cltd
sbb
dec
pop
sbb
or
lea
sub
or
sbb
fs
js
xor
jbe
xor
aam
cmp
sbb
in
pop
pushf
rcl
stos
daa
dec
pop
lock
rorl
sbb
jb
xchg
aam
pop
rol
rorl
inc
xor
in
leave
cmp
pop
mov
cmp
and
imul
or
sbb
sbb
push
imul
sub
mov
add
mov
shr
fcomps
jo
jbe
dec
divl
xchg
sbbl
rcr
and
push
sbb
aam
mov
xchg
xchg
shll
aam
or
sub
xor
xor
xor
mov
inc
shrb
orl
sub
pusha
rcrb
fs
mov
loopne
pop
rcl
pop
sub
sbb
mov
and
add
hlt
or
sahf
cmp
mov
or
xor
cmp
sbb
xor
je
pushf
shlb
cmp
sbb
inc
xor
xor
pop
ror
repnz
sbb
dec
les
inc
mov
sub
xor
xchg
inc
and
andb
roll
rcrb
or
movsl
add
daa
adc
dec
in
sbb
aam
dec
and
mov
sbb
lea
add
sahf
inc
or
xor
cmp
inc
dec
loopne
xchg
aam
xchg
xchg
fldenv
mov
xchg
lods
mov
data16
and
test
mov
int3
dec
cwtl
dec
mov
adc
cmp
daa
mov
or
sbb
xchg
pop
dec
inc
inc
mov
aam
dec
inc
pushf
mov
and
and
or
jo
enter
int3
pop
jns
push
rcll
and
pop
add
mov
stc
add
shr
xchg
out
fs
das
int3
rcl
and
xchg
xchg
in
leave
or
mov
and
inc
inc
inc
inc
cltd
insb
lea
ds
inc
adc
shl
pop
sahf
movsl
jno
imul
js
and
pop
mov
dec
push
jb
in
roll
setns
dec
arpl
or
loopne
dec
les
jb
fwait
mov
sbb
jb
sbb
xor
mov
js
sbb
cmp
fs
jb
cmp
jl
sbb
sti
inc
xor
add
sarl
inc
cmp
cmp
xor
iret
repnz
sub
cmp
xchg
pushf
mov
push
pop
das
push
xor
pop
in
mov
sbb
sbb
xchg
push
pop
mov
js
dec
je
push
or
clc
shl
pushf
jl
rorb
and
clc
nop
enter
shrl
pop
jnp
jns
pop
rorb
mov
mov
inc
xchg
xchg
flds
adc
mov
xchg
in
pusha
cld
rcll
fxch
movsb
dec
sbb
dec
fadds
adc
cmp
insb
jl
xchg
aaa
loopne
inc
sarb
leave
enter
rclb
enter
mov
shll
js
pusha
or
shrl
or
or
xchg
push
insl
push
xor
xchg
insb
push
fs
mov
call
sahf
call
mov
push
push
xchg
insb
adc
ficoml
xchg
enter
inc
mov
pushf
sbb
aam
jl
add
js
or
in
sbb
loopne
loopne
and
addb
pop
mov
test
pushf
int3
es
shlb
inc
mov
jb
sbb
cld
shl
hlt
leave
add
iret
mov
mov
sbb
pop
iret
mov
les
cld
sbbl
pop
pop
inc
pop
mov
xor
cmp
scas
les
xor
sbb
nop
adc
nop
sahf
jns
sub
xor
mov
mov
inc
in
mov
dec
inc
sbb
leave
and
push
push
adc
enter
clc
adc
sbb
fs
inc
mov
nop
mov
sbb
sub
cmp
nop
addb
nop
mov
nop
fsubs
mov
xor
inc
jne
xchg
cmp
stos
pop
or
jmp
movsb
pop
push
cld
dec
cmp
je
vmovupd
jle
jbe
push
jno
cmp
insb
push
add
pop
and
jns
jmp
call
mov
sub
push
push
push
testl
ret
sbb
andb
cmp
lea
sbb
std
adc
scas
mov
mov
add
ret
pop
and
pop
ret
nop
rolb
xchg
or
mov
clc
lea
sbb
imul
xchg
inc
cmp
jge
xor
ret
mov
adc
cmp
je
or
aas
xchg
sbb
inc
cmp
jl
sbb
jle
cmp
ja
icebp
dec
mov
xor
cmp
addl
cli
fisttps
sarb
gs
in
arpl
inc
jl
imul
scas
incl
js
test
jl
loope
cmp
mov
incl
pop
inc
mov
mov
dec
cmp
jle
pop
aas
js
lods
jns
and
xchg
push
arpl
mov
jl
cmp
jg
daa
inc
pusha
xor
dec
or
and
sahf
test
dec
out
loop
fisubs
jne
into
adc
jb
pop
fcompl
imul
es
pop
or
jl
std
leave
pop
mov
mov
fldt
aas
dec
jle
mov
add
stc
jge
xchg
lea
or
or
push
xlat
xchg
jle
lods
outsl
pop
dec
clc
addr16
dec
movq
int3
add
push
imull
adc
sti
call
sbb
sub
dec
loopne
or
mov
mov
or
stc
or
mov
andb
dec
lea
je,pn
mov
jmp
and
inc
mov
add
push
or
add
xor
sub
les
xor
and
test
movsl
sarl
sbb
mov
jo
sbb
rorb
cli
idivb
inc
mov
out
je
jns
adc
mov
or
xchg
lock
jmp
xchg
je
bound
lock
or
iret
mov
enter
cwtl
data16
mov
les
adc
mov
in
sub
mov
jae
cmp
daa
pusha
add
dec
ret
xchg
icebp
cwtl
mov
dec
fdivl
enter
sbb
jl
ret
or
inc
add
test
jb
push
insl
mov
imul
in
stc
inc
lock
push
mov
push
push
inc
mov
jns
sbb
pop
mov
dec
mov
je
inc
jne
cwtl
cmpsl
in
add
lcall
repz
leave
fsubl
loop
mov
shll
fnstcw
inc
jbe
dec
dec
and
js
outsl
xor
sbb
xchg
rclb
mov
cmc
inc
mov
clc
adc
mov
mov
loop
lret
inc
mov
or
test
data16
mov
xor
lea
adc
pop
add
fcmovu
inc
aam
in
adc
popa
jmp
loope
mov
adc
ss
rorb
aam
js
adc
inc
cltd
xchg
es
pop
fmull
pop
int3
pop
loope
dec
inc
es
and
sbb
add
andl
or
aas
push
leave
je
jmp
fisttpll
jecxz
inc
push
push
xor
ss
xorl
enter
pop
sub
je
je
or
pop
std
inc
lcall
pop
push
mov
jmp
cmc
pop
xor
aad
jle
push
mov
adc
divl
lret
push
call
std
mov
jbe,pt
lea
ljmpw
add
cmp
jb
jmp
push
cs
in
xor
lock
daa
fimuls
push
push
cli
adc
adc
pop
popf
nop
dec
cmp
shlb
call
into
mov
inc
repz
adc
push
or
enter
lock
out
jecxz
mov
jnp
lods
dec
or
iret
add
fs
test
sbb
sub
xchg
dec
into
push
lods
add
push
divl
enter
or
inc
xlat
data16
mov
in
inc
lds
popa
test
movsl
or
call
sub
or
aaa
roll
pop
cmp
lods
or
add
pop
or
and
lods
mov
dec
inc
sbb
sbb
enter
jno
xor
in
fwait
add
mov
test
je
andl
imul
pop
xor
jmp
std
bound
cmpb
or
shll
cld
lods
lret
stc
hlt
and
das
fidivs
shrl
das
in
cmp
jo
mov
adc
inc
add
scas
push
add
test
push
add
xor
inc
stos
mov
inc
test
js
shl
xor
push
loopne
fcoms
adc
in
jno
lds
pusha
and
inc
xchg
or
pop
in
das
shl
es
call
dec
xlat
cmp
xor
lock
int
xchg
not
cld
or
dec
push
push
call
pusha
sbb
ret
lock
sub
adc
mov
int3
jbe
lret
cmp
mov
mov
xchg
sub
add
mov
andl
pop
mov
add
xlat
popf
je
bound
mov
inc
das
cli
jo
cmp
cmp
jmp
push
push
cld
testl
cmp
imul
fsubrl
test
mov
sahf
test
pop
and
xchg
ud1
daa
mov
mov
inc
push
dec
mov
cmp
sti
xor
mov
dec
div
adc
push
push
pop
sub
and
sub
div
loope
les
push
push
push
xor
adc
jg
cld
mov
negl
mov
imul
shrl
sbb
push
push
and
mov
lcall
jb
cmp
ja
mov
idivl
fnsave
cmp
lret
repz
pop
ja
mov
add
push
and
ja
push
inc
daa
int
rolb
aaa
xor
int
sarb
and
push
sbb
lret
aas
daa
or
jae
xor
sub
pop
sbb
add
adc
scas
into
mov
or
xor
jbe
leave
cmp
cmp
xchg
rclb
fildl
mov
popf
cmp
and
mov
adc
xor
test
adc
jo
pop
lcall
and
push
pop
jne
or
cmpb
add
popf
cmp
into
sub
and
add
rcll
cmp
dec
je
lahf
mov
jb
pop
sbb
lock
xchg
jecxz
sub
sbb
mov
or
push
push
bnd
cmpsb
adc
mov
outsb
pop
add
push
sbb
mov
mov
adc
dec
push
call
sbb
mov
aaa
add
or
and
loope
outsl
bound
xor
ret
adc
sbb
or
imul
aam
and
cmpsl
sahf
add
mov
pop
ja
sahf
movsb
push
movsb
push
xchg
ss
ds
xchg
movsb
cwtl
push
push
push
movsl
sarb
inc
xchg
jo
sbbb
rolb
lahf
pushf
clc
mov
and
adc
loope
je
push
pusha
sbb
ret
js
sti
sbb
stc
push
pusha
test
rcrb
push
int
push
pusha
fidivrs
sbb
rep
out
pop
dec
pop
roll
or
xor
scas
clc
clc
cli
adc
add
sbb
or
mov
pop
lock
roll
mov
loopne
adc
pop
push
aad
pushf
rorl
cmpsl
je
pushl
xchg
je
dec
daa
aaa
lret
and
cmp
xchg
sub
insb
adc
movl
sub
es
imul
mov
xor
aas
and
adc
unpcklps
adc
sbb
sbbb
popf
inc
and
loopne
or
mov
jns
mov
xchg
cwtl
inc
cmp
push
mov
dec
jo
fnsave
sbb
pop
sub
incl
or
push
ffreep
jge
imul
mov
into
mov
loopne
cmp
js
mov
jecxz
int3
jbe
jns
movsb
inc
sbb
inc
enter
cmpl
cmp
xor
mov
loopne
loopne
outsl
lock
fsubr
call
jno
and
pop
mov
mov
roll
adc
inc
push
cmp
je
lock
fstpl
sub
data16
adcb
in
inc
mov
movsb
call
pop
dec
add
sub
dec
shlb
inc
rorb
push
push
movsl
jl
inc
lret
fwait
iret
xchg
cmp
cli
xor
enter
test
movsb
movsb
cli
cltd
mov
push
nop
aad
adc
das
loope
insb
jno
and
mov
cmp
xchg
push
pop
jle
fisttpll
testl
jmp
jno
imul
pop
push
sahf
je
adc
out
pushf
mov
jo
push
pop
push
jg
sub
and
add
adc
std
or
or
out
sub
sub
loope
sub
lea
push
mov
pop
arpl
out
lods
dec
inc
fmulp
mov
cmp
and
jge
out
sbb
and
fnstsw
cld
mov
mov
jecxz
repnz
adc
lea
fbld
fsts
jecxz
cld
shr
sahf
xlat
mov
or
lock
xchg
loopne
pop
inc
pushf
add
pop
mov
mov
or
test
repnz
imul
add
and
push
mov
xor
mov
add
repnz
aaa
jo
dec
mov
mov
push
push
rclb
push
mov
push
xchg
or
add
sbb
rorb
scas
inc
cmp
mov
mov
ss
in
jne
sbb
sbb
mov
push
add
push
jb
lock
pop
fcomi
lea
jae
cmp
mov
hlt
arpl
cmpl
ja
jbe
mov
jmp
bound
mov
ficoml
call
xor
add
enter
push
negb
jne
les
mov
cmp
push
dec
cmpsb
out
call
cltd
sti
idivb
xchg
push
pop
shrl
jne
jbe
iret
mov
loop
mov
shrb
hlt
mov
add
outsl
push
xlat
nop
mov
or
mov
es
or
push
adc
notb
lods
dec
add
ds
call
arpl
out
rclb
dec
and
loop
call
add
fnstenv
ret
shr
mov
inc
dec
pusha
daa
jle
jne
pop
dec
not
dec
xor
jmp
jno
add
inc
pop
add
movsb
mov
dec
xor
push
push
repnz
mov
push
dec
adc
mull
dec
add
push
mov
js
cmp
and
mov
push
or
add
imul
aaa
inc
loope
xchg
mov
fldenv
and
add
inc
sbb
and
bound
or
jmp
dec
inc
arpl
or
lret
insl
dec
push
pop
pop
add
loope
mov
pusha
push
out
data16
xor
push
cs
insb
jle
dec
out
xor
jge
movsl
mov
pop
sbb
arpl
jne
cltd
pop
push
fisttps
mov
jae
sbb
xchg
mov
lcall
mov
ret
insl
inc
sub
add
jcxz
fadds
pop
adc
test
loope
rcl
arpl
add
push
xor
cmp
jne
outsl
aam
movsb
inc
add
add
inc
lret
add
mov
add
testb
or
insb
pop
cwtl
jle
mov
pop
sbb
cld
clc
add
call
sbb
push
out
rclb
jb
in
rclb
repnz
push
jbe
cmp
add
pop
stos
xchg
cmp
dec
out
xchg
jl
pusha
xchg
shrb
std
inc
cmc
mov
mov
mov
push
repnz
cld
stc
pop
inc
add
out
inc
pop
dec
cmp
inc
push
jae
jbe
push
inc
cmc
xor
pop
aam
dec
push
push
bound
test
dec
adcb
pop
cmp
xchg
xor
cld
sbbl
add
add
repz
js
pop
incl
loop
sub
aaa
add
or
arpl
cwtl
lret
enter
cwtl
mov
repz
sti
mov
jecxz
sti
jg
and
add
enter
imul
mov
in
in
mov
out
mov
push
lods
orl
jo
xlat
cmp
je
arpl
jl
test
filds
cld
mov
xchg
dec
cmc
add
fcoms
ljmp
mov
pop
cs
daa
mov
mov
test
cltd
add
cmp
sbb
popa
movups
push
jl
fidivl
mov
mov
jge
pop
bound
inc
mov
sbb
leave
add
fmull
pop
in
pop
jne
mov
mov
mov
ret
movl
dec
enter
inc
test
mov
data16
movsb
mov
adc
testl
inc
dec
rolb
mov
pop
popa
int
jbe
and
in
pop
cld
sub
int3
inc
sub
cmp
je
and
jnp
add
loope
pop
jne
push
push
mov
sbb
es
cld
dec
push
loopne
dec
mov
xchg
or
sbb
dec
enter
fdivrs
jmp
insl
inc
sub
pop
adc
sbb
add
inc
push
jne
lahf
or
pop
add
push
imul
sub
xor
jmp
cli
push
in
mov
call
lds
aaa
in
pop
add
lahf
pop
in
mov
pop
push
jecxz
or
cmc
sbb
pop
sbb
lret
sbb
pop
in
add
or
pop
cmpsl
pop
clc
add
shll
or
rorb
sub
jne
jl
out
adc
stos
xor
mov
push
jle
stos
mov
aam
dec
imull
sub
dec
inc
cmc
mov
lock
jo
push
inc
aas
inc
shrl
pop
xor
shrb
sbb
and
push
hlt
gs
xor
adc
push
mov
push
mov
les
in
mov
push
insb
ja
push
add
scas
jnp
lock
test
int3
je
pop
fnstenv
leave
sbb
mov
jae
push
add
and
aam
or
hlt
mov
add
add
lahf
lods
les
jge
ja
push
das
ljmp
mov
aas
add
add
adc
addl
jbe
push
add
je
inc
imul
push
adc
aaa
or
jne
imul
sub
push
orb
movl
dec
or
enter
rolb
sub
test
std
and
dec
andl
and
and
and
call
push
and
xor
fisubrs
fildll
jge
fmull
fstpl
and
push
sbb
in
mov
rolb
pop
dec
cmpsb
fiadds
aad
les
inc
xchg
movsb
aas
xchg
lods
sbb
leave
inc
add
mov
mov
inc
cmp
scas
inc
pop
push
inc
imul
mov
cmp
inc
sbb
ret
sub
push
sbb
mov
mov
jne
xor
in
fcoml
sub
sarl
cmp
or
std
adc
mov
pop
jle
movsl
xor
xchg
lock
hlt
add
leave
sub
jle
mov
mov
inc
cmp
jl
ret
mov
outsb
cmc
add
xchg
rorl
jae
call
imul
jp
test
sbb
addb
pushl
popa
sbb
mov
inc
and
or
and
add
sar
stos
sarl
movb
inc
jmp
mov
mov
mov
inc
dec
mov
das
or
fsubl
and
insl
pop
int3
fdivrp
xchg
shr
adc
sub
and
pop
clts
mov
add
enter
or
sbb
call
into
fmuls
inc
or
mov
clc
inc
mov
adc
sti
lock
pop
clc
call
push
cli
rcrb
push
jmp
cmpsl
mov
rep
add
loopne
sahf
nop
adc
sub
jbe
jge
push
icebp
ret
and
cmpsb
cld
lock
gs
hlt
xchg
clc
cld
mov
mov
cmp
lods
and
mov
mov
mov
gs
jmp
xor
pop
dec
cmp
cld
aas
nop
inc
mov
push
mov
add
lret
cli
xchg
sbb
xchg
add
imul
andb
xchg
adc
pusha
add
jnp
repnz
add
cmpb
jo
xchg
push
xor
push
cltd
jae
pop
add
dec
sbb
cltd
das
fcoml
xor
orb
cs
imul
adc
add
mov
sti
mov
and
cmc
xchg
push
and
lea
pop
aaa
inc
push
imul
add
jne
test
sbb
cmp
pop
mov
je
push
orl
push
xchg
cmp
lahf
add
push
jne
xorl
pop
pop
and
adc
pushl
imul
or
dec
roll
or
pop
push
push
jne
mov
test
or
outsb
cmp
call
inc
or
lods
stc
cmp
cmpsl
sahf
sub
int3
adc
sbb
cs
call
dec
cltd
adc
xorb
pop
js
add
mov
call
xchg
push
and
push
std
and
loope
adc
add
mov
jne
adc
mov
mov
xchg
enter
cli
add
lock
adc
mov
ret
or
fisubrs
psubw
mov
or
add
push
xlat
cli
sti
jno
inc
jg
out
push
dec
cmp
insl
xchg
mov
add
adc
push
sub
mov
mov
sbb
and
cmp
jecxz
sub
mulb
add
das
pushl
fiadds
sub
sbb
dec
mov
enter
push
jne
push
ja
mov
fsubr
jne
fldl
cmp
mov
rclb
fisttps
add
add
aaa
or
aam
xor
clc
mov
jmp
sbb
mov
jo
rcl
and
aaa
pop
jmp
push
or
mov
and
rorl
cmpsb
inc
jl
add
sar
ja
out
idiv
std
sbb
sub
cmp
add
adc
and
rorb
jecxz
test
cs
jp
push
imul
mov
scas
orl
out
inc
and
dec
movsl
pushf
fsubl
xchg
cld
push
pop
adc
jge
or
push
pop
nop
decb
outsb
push
insl
je
lea
das
jl
adc
movzbl
and
add
cld
out
push
cmp
or
push
mov
and
sbb
adc
sbb
cmpsb
xor
add
adc
pop
mov
inc
out
daa
in
std
pop
push
adc
ret
scas
mov
mov
lret
xor
shll
lcall
shll
add
or
add
add
mov
sub
mov
cmp
inc
dec
push
add
test
sbb
xchg
xor
jmp
push
xor
push
fs
push
imull
adc
jp
test
mov
cmpl
je
add
xor
push
adc
aaa
js
in
sbb
js
jmp
in
or
xchg
and
icebp
and
and
leave
insb
in
cmp
xor
and
je
adc
adcl
and
call
dec
loop
fs
sub
and
sbb
mov
clc
hlt
insl
xchg
inc
or
push
mov
jbe
or
fstpl
rcrl
cmovs
push
mov
out
push
add
dec
lret
pop
add
xorb
daa
pusha
loopne
xchg
sbb
pop
mov
jp
out
ret
sub
xchg
in
and
es
imul
dec
cltd
jge
cli
sbb
add
jne
arpl
pop
cltd
ljmp
mov
mov
ret
push
push
dec
or
or
or
push
or
dec
sub
jne
fistpll
xchg
and
mov
testb
popa
loopne
sti
call
adc
ja
mov
push
pushl
adc
ja
sbb
pop
pop
or
push
sbb
jle
std
clc
adc
and
pusha
daa
inc
sbb
enter
cs
jg
xor
or
cmpl
add
call
js
xchg
sahf
cld
sahf
fsubrs
push
shll
pop
and
test
das
inc
push
add
aam
dec
pusha
xor
call
loopne
jo
aaa
clc
lea
jae
add
add
ja
loope
shlb
mov
mov
adc
adc
dec
fadds
adc
test
movsb
pop
fdivs
push
mov
dec
mov
and
test
jb
jp
mov
popa
push
pop
pop
push
lahf
push
loopne
cmp
in
mov
std
xor
dec
dec
inc
mov
ja
jmp
mov
pop
pushl
les
add
xchg
or
xor
pop
add
mov
lods
jmp
in
push
push
imul
lods
shrl
stc
add
cld
push
clc
shll
fisubs
push
add
mov
cmp
xor
cwtl
xchg
xchg
add
cmp
push
test
mov
pushf
and
mov
jmp
dec
test
dec
pop
add
mov
mov
xor
and
movsl
dec
inc
enter
mov
inc
xor
inc
dec
dec
nop
and
and
jge
push
fcoml
pop
lock
lea
mov
mov
inc
mov
push
or
lods
adc
push
push
ror
and
add
movb
cli
push
push
lret
or
cmp
pusha
in
mov
push
scas
cld
push
add
pushf
sub
nop
and
xchg
mov
ss
or
gs
jb
jo
popa
sub
rclb
repnz
and
push
jl
or
mov
jle
or
add
mov
and
inc
mov
or
sbb
leave
mov
sbb
or
nop
test
sbb
enter
and
int3
push
xor
push
xor
movsb
sub
enter
xor
push
xor
push
cmp
enter
cmp
xor
push
xor
sub
inc
push
sbb
ret
incb
pop
pop
jmp
push
push
cld
and
fcomp
and
cwtl
je
popa
xchg
imul
pop
pop
or
test
or
push
aas
nop
and
outsl
std
es
or
loopne
jne
add
adc
pop
pop
hlt
je
cmp
insl
leave
out
in
xor
das
or
xlat
aam
jno
cld
mov
call
jbe
adc
hlt
pushl
push
call
and
add
inc
cmp
jb
inc
jb
shr
and
in
sbb
movd
dec
xor
add
push
cmpl
or
push
inc
mov
rcll
jl
jne
adc
cmp
mov
pop
je
or
fistps
or
je
xor
sar
jl
jne
cmp
dec
xor
and
js
sub
add
sub
imul
dec
jne
push
jle
pop
fwait
add
jle
daa
or
push
sahf
mov
or
xor
lods
adc
push
add
testl
cmp
mov
es
sub
pop
je
or
addr16
test
in
stc
jo
dec
es
enter
lea
mov
push
sbb
xchg
clc
or
daa
cmc
mov
lcall
xchg
movsb
popf
clc
pop
cld
ja
shr
adc
and
cli
fcompl
adc
rclb
inc
xchg
inc
int
sub
sub
ficoml
cld
mov
cltd
inc
jecxz
arpl
mov
insl
ss
adc
mov
add
jns
sub
add
clc
add
add
cltd
test
std
push
push
mov
cmp
ficoml
inc
pusha
mov
sub
lret
push
lea
cli
popf
aam
stos
cmp
and
jns
sub
or
mov
sbb
rcrb
movsl
cmc
and
ficoms
mov
sahf
mov
int3
or
sbb
out
shrb
dec
ss
sub
xor
or
mov
fsubrl
daa
adc
inc
adc
pop
mov
mov
pushl
pop
or
nopl
sbb
sarb
cmp
jno
aaa
sbb
arpl
and
adc
lock
cmp
cmpsb
andl
popf
mov
pop
mov
pop
push
push
stc
shrb
mov
outsl
and
jb
cli
mov
sub
es
jmp
in
orb
or
xor
dec
test
mov
and
push
pop
mov
pop
sbb
outsb
pusha
dec
push
adc
adc
ss
roll
popf
inc
push
fcomps
nop
add
xchg
add
test
int3
ja
pop
inc
xchg
out
pushw
push
stc
das
pop
pop
inc
cmp
inc
cmp
aad
popa
sti
insb
push
in
mov
mov
cmpsb
mov
in
mov
test
jo
cmp
adcb
jmp
or
jne
call
or
loop
jo
push
pushl
xchg
mov
jecxz
scas
push
mov
push
add
fs
or
sub
fimull
fmull
stos
pop
lahf
sub
adc
dec
sahf
sbb
sub
fsubr
add
add
dec
inc
sbb
mov
fdiv
push
sti
mov
inc
pusha
xor
stos
or
test
jp
lods
leave
add
or
cli
add
push
cmc
les
imul
mov
sbb
mov
pop
add
pushf
xor
pop
cltd
dec
shrb
cmpsb
xchg
dec
and
cltd
push
jb
push
sbb
dec
xchg
xor
call
sbb
int3
cmpsl
jmp
adc
sbb
push
or
ret
xchg
in
xor
sbb
xchg
jne
jl
add
stos
adc
inc
mov
sub
adc
push
jno
mov
ret
and
insl
leave
clc
push
xchg
mulb
jbe
sbb
sbb
push
lea
mov
sub
mov
aad
push
jmp
xchg
inc
btc
add
arpl
mov
mov
inc
decl
push
out
ret
jmp
xor
add
loope
pop
stos
mov
out
shlb
cld
sbb
sbb
cmp
push
push
push
mov
or
add
js
jl
inc
mov
out
jp
test
repz
repnz
sbbl
push
push
sbb
sub
mov
jae
imul
push
out
mov
adc
repz
es
nop
mov
mov
dec
mov
cmp
jns
add
push
fiaddl
or
push
add
es
or
xchg
or
xor
jo
xor
lods
inc
push
mov
movsl
push
pop
mov
les
loopne
mov
pop
jnp
mov
ror
cs
xchg
and
outsb
mov
push
sbb
and
roll
mov
mov
inc
pop
push
popl
test
orb
cmc
dec
push
ret
sbb
adc
or
repz
mov
inc
mov
sub
out
cmpsl
in
sti
shl
loopne
mov
cmp
or
sbb
pushf
or
pop
xlat
addb
les
pop
xor
into
movl
adc
aas
test
jle
sbb
or
fldenv
mov
pushf
sub
jl
push
push
mov
pop
jne
jp
fdivrl
sti
int
mov
add
idivb
scas
sbb
incl
pop
inc
cmp
jl
andb
mov
xchg
lahf
fiadds
mov
addb
xchg
cmpsb
push
jne
dec
lods
inc
pop
adc
xchg
or
in
cwtl
cmp
test
or
push
popa
adc
ds
mov
add
daa
cmpl
pop
jne
adc
call
add
rcrb
add
mov
jne
repz
out
pop
mov
jne
mov
cmp
cs
push
or
pop
add
adc
mov
pusha
clc
loopne
movsb
repnz
add
stc
push
xchg
pop
clc
jmp
div
push
test
jle
push
fs
test
jnp
jbe
icebp
and
xor
imul
loope
arpl
pop
jbe
dec
and
add
jle
push
dec
fsubrs
push
adc
and
dec
neg
je,pt
lea
cmp
mov
sbb
pop
inc
jmp
mov
aas
scas
dec
or
loope
add
inc
in
pop
loopne
xor
cmp
call
sbb
idivl
roll
xchg
cwtl
pop
pop
ret
sbb
xchg
aam
or
pop
mov
xchg
push
add
mov
mov
xchg
nop
inc
xchg
and
rclb
mov
pop
pop
roll
es
add
jne
mov
hlt
je
rcrl
ret
cmpb
jo
js
int
add
push
hlt
jne
lods
jge
fiadds
sbb
sbb
push
jae
mov
cld
xchg
aam
push
adc
add
or
fwait
mov
shll
adc
mov
mov
ret
or
addl
test
test
adc
add
dec
dec
xor
je
mov
cmpsl
mov
cmp
jb
ja
and
cmp
adc
and
cmpsl
adc
add
sbb
and
pop
cmp
and
cmp
sbb
mov
cmp
out
bound
jnp
xchg
fisubrl
inc
leave
leave
outsb
push
js
sbb
idivb
jno
insl
lcall
mov
pushf
mov
add
cld
sub
mov
out
ljmp
lea
lea
and
je
xor
sbb
cmp
push
xchg
dec
sbb
sub
xor
enter
xchg
out
clc
orb
cli
push
lret
cmpl
mov
mov
or
ss
into
push
sub
aas
cmp
aaa
insb
dec
ret
sub
push
fnsave
cltd
and
push
adc
sub
or
cmp
in
test
adc
mov
pop
enter
xchg
or
in
or
or
mov
add
xor
xor
call
dec
lock
mov
sbb
insb
andl
in
lods
pop
mov
in
inc
xor
rorl
push
mov
mov
add
jg
call
mov
clc
add
mov
mov
push
adcb
sub
inc
jnp
and
sub
out
or
mov
jge
int3
push
pop
fucomp
sub
or
js
rolb
xchg
add
mov
cwtl
sub
cld
dec
add
pop
pop
pop
clc
jmp
jl
mov
mov
pop
add
je
outsl
adc
sti
dec
sub
and
mov
mov
sbb
cmp
dec
ret
xchg
mov
sahf
inc
je
mov
mov
add
pop
lods
or
stc
lea
fxch
add
pusha
jp,pn
add
add
cmp
lods
je
add
lea
aam
lahf
jns
fisttpl
sbb
xor
pop
xchg
sbb
xchg
inc
add
int3
push
add
loop
push
imul
dec
adc
pushf
call
mov
sti
sbbl
in
push
movsb
test
xor
loop
pop
xorb
add
rcr
add
adc
adcl
sub
repz
ret
or
pop
leave
jno
mov
mov
xchg
push
nop
sbb
push
popa
jno
jo
push
mov
clc
push
adc
ss
adcb
js
ret
loope
add
pusha
shlb
in
mov
add
sub
add
sbb
in
inc
or
stos
out
out
sbb
mov
jo
and
push
mov
mov
gs
cmp
add
cmp
jle
jle
mov
ud2
jmp
inc
pop
and
sar
pop
pop
pop
or
popf
xchg
dec
jle
inc
mov
jle
insl
jmp
cmp
je
or
je
subb
ljmp
xor
rcr
jl
mov
test
push
ret
pop
sbb
and
iret
addr16
std
test
pusha
mov
mov
mov
jo
jns
push
pop
sub
sbb
and
test
ret
scas
xor
lods
mov
fsubs
jns
nop
dec
sbb
jo
dec
push
push
or
movsl
or
inc
push
push
out
xchg
adc
mov
fdivrs
mov
aas
iretw
push
mov
pop
insb
push
push
idivl
mov
push
adc
popf
sbb
pop
sbb
fistpll
subl
lea
mov
dec
cmp
cmpb
sub
pop
add
movsbl
std
in
std
add
pusha
add
add
lea
das
mov
popf
dec
divl
cmp
add
dec
aad
or
leave
addl
jae
cmc
out
adc
stos
inc
dec
mov
imul
and
in
sbb
cmp
cmp
mov
jns
push
sbb
lods
in
sbb
mov
sub
adc
mov
pop
push
repnz
int3
pop
add
or
out
dec
les
adc
rcrb
js
pop
dec
aas
lods
or
inc
inc
jns
inc
sub
mov
and
or
push
xchg
dec
add
push
sub
mov
pavgb
push
mov
pusha
test
int3
sub
mov
fidivl
nop
and
lret
jmp
cmp
je
fists
cmp
sub
jnp
insl
fcomps
cmc
mov
and
inc
xchg
mov
adc
jmp
cmpsb
or
or
add
and
push
inc
je
das
mov
in
xchg
loopne
add
or
in
or
mov
pop
xor
push
scas
dec
pop
sbb
xchg
lods
aas
push
and
dec
call
cmc
add
and
xchg
sbb
std
and
xor
sti
push
icebp
push
push
push
cs
add
movsb
sti
ret
sub
dec
adc
je
inc
add
sub
add
into
pop
mov
jmp
add
gs
es
ja
cs
xor
loope
pop
inc
add
mov
add
fldl
dec
or
enter
push
enter
add
jmp
push
std
adc
sbb
cmp
pusha
sub
push
xorl
jbe
mov
mov
xor
scas
cltd
mov
outsb
push
popa
pop
pusha
fidivrs
insb
inc
es
xchg
xchg
icebp
movl
ds
xor
test
js
pusha
xchg
mov
dec
fldt
sbb
mov
loop
addr16
fildl
fs
jno
movsl
and
loopne
cmpsb
dec
pop
mov
int
dec
xchg
sub
mov
dec
call
test
add
dec
pushf
dec
sub
lea
pop
pop
jne
icebp
adc
lea
xor
enter
sbb
cltd
cmc
mov
dec
mov
or
in
in
sub
dec
mov
pop
shlb
cmp
enter
and
pop
ljmp
lods
stc
aaa
inc
nop
call
int3
mov
je
rorl
and
ficoms
adc
insl
insb
xlat
add
xchg
mov
add
les
out
xchg
jnp
cmp
shl
adc
cltd
xor
or
and
dec
sbb
enter
mov
insl
pop
rorb
stos
stc
cmpsl
xor
gs
fimull
ss
test
or
add
loopne
add
bound
push
call
faddp
add
pop
jmp
clc
shl
mov
dec
cld
sti
stos
fadds
or
cld
cmpb
cmc
xchg
fdivr
int
lods
jnp
hlt
fwait
out
sub
or
push
push
fwait
pop
bnd
into
std
mov
pusha
mov
test
mov
sbb
mov
pushf
jge
mov
sbbb
out
aam
movsl
repnz
cmp
push
jnp
test
and
xlat
push
test
push
cmp
add
inc
adc
aad
fbstp
add
int
xchg
sbb
dec
mov
add
pushf
jbe
cwtl
outsb
add
add
xchg
push
in
and
fadds
test
lea
mov
aad
ffree
cmp
idiv
cmpsb
lret
jl
push
push
pop
inc
push
repnz
test
test
jne
jl
add
pop
xor
adc
cmc
dec
scas
sbb
pop
jo
dec
sbb
sub
ljmp
adc
les
jl
push
test
or
push
mov
jb
jmp
dec
add
push
xor
subl
push
clc
inc
mov
aad
adc
aaa
int3
clts
test
lea
or
inc
mov
xchg
movsl
das
loope
repnz
fcoml
add
inc
hlt
dec
and
fcomi
and
sbb
shll
fisubs
outsl
jne
das
or
push
rcl
adc
add
out
add
mov
lea
adc
bound
and
mov
sahf
in
xchg
adc
push
sbb
sbb
cmpsl
aad
pop
mov
sub
and
cmp
push
mov
pop
and
test
adcl
pop
js
in
adc
push
adc
push
add
and
mov
cs
sbb
pusha
mov
test
mov
or
in
outsl
adc
jle
push
dec
pusha
cmp
popl
jle
inc
loopne
andl
mov
jmp
dec
jo
jge
pusha
and
in
and
or
shl
push
push
sbb
dec
push
icebp
sbb
pop
or
inc
and
mov
test
or
cwtl
in
rclb
mov
fcompl
dec
adc
pop
xchg
push
and
push
adcb
test
icebp
jl
int
or
lret
mov
sub
jl
add
sbb
mov
push
mov
cld
aas
push
lds
mov
and
repnz
cmp
xor
mov
and
sub
cmp
sbbb
pop
or
pop
enter
or
add
adc
and
insl
xor
or
push
fsubl
xchg
pushf
pop
push
rol
and
mov
xchg
cmp
sbb
test
nop
and
xorb
cmp
or
push
dec
and
inc
cmp
and
and
adc
dec
ds
push
push
and
sub
fadds
pop
das
cmp
sub
and
or
lock
mov
pop
push
jbe
pushf
nop
push
sbb
out
in
jl
or
xchg
mov
xchg
pusha
push
pop
xor
xor
dec
sub
inc
sahf
cmp
xor
inc
inc
cs
sub
inc
inc
cs
and
fs
sbb
aaa
adc
enter
adc
enter
dec
add
push
push
sbb
and
stc
inc
call
or
push
mov
out
mov
rclb
sbb
int
negb
sub
fs
inc
mov
lods
repz
inc
cs
test
xor
mov
jnp
mov
dec
xchg
xor
test
xor
sbb
sbb
sbb
xor
iret
loope
fs
pop
jb
and
xor
inc
sahf
pop
xor
dec
inc
cs
cmp
cmp
fs
xchg
xor
sub
and
fldl
push
add
punpckhbw
gs
jne
rcll
adc
int
stos
xchg
xor
out
lds
in
adcb
inc
inc
stos
xor
sub
dec
sub
nop
andb
mov
cs
and
movsb
shll
cwtl
jl
in
inc
test
inc
inc
cs
mov
mov
push
out
repz
iret
or
dec
xchg
sub
pop
xor
cmp
xlat
xor
adcb
cmp
or
sub
leave
mov
stos
mov
xchg
cmc
sbb
and
int3
pop
sub
and
stos
test
and
in
adc
enter
sub
add
add
test
xor
jg
or
enter
lock
movsl
and
nop
push
in
pop
repnz
leave
and
loopne
fsubrs
in
and
and
fmul
enter
push
js
enter
arpl
enter
sbb
jae
and
pop
enter
lods
jne
iret
or
movsb
and
xor
cwtl
xchg
xchg
pop
xor
orl
in
inc
cs
xchg
test
fs
push
je
pop
enter
inc
push
das
pusha
and
pop
or
repnz
dec
pop
xor
xor
pop
in
and
cmp
xor
pop
inc
cs
jg
int3
sti
and
adc
pusha
push
clc
cmp
in
cld
jle
aas
aad
cmp
cmp
orl
mov
hlt
jle
xchg
sbb
add
ret
data16
xchg
xlat
mov
nop
pop
inc
ucomiss
insb
hlt
movsb
pusha
push
aam
test
adc
aaa
and
mov
rolb
xchg
xor
or
pushf
push
jb
sub
cmpb
adc
and
mov
std
cmpsb
mov
jmp
orb
aad
jl
filds
push
loope
jo
leave
subb
pop
sub
mov
cwtl
pop
test
inc
fiaddl
sub
dec
cwtl
or
dec
push
adc
xor
mov
jmp
sub
xor
xchg
test
xchg
xor
cmp
mov
imul
cs
daa
scas
enter
dec
out
sbb
fnstenv
mov
call
jns
loopne
addr16
enter
pop
mov
jge
pop
je
mov
sbb
mov
int3
sub
iret
or
lds
shlb
xor
mov
jb
adc
xchg
fs
sahf
adc
inc
inc
cs
pop
test
fs
pushf
adc
jns
enter
in
adc
jl
nop
xchg
or
js
jo
or
mov
fs
xor
jo
pop
in
and
pop
push
adc
inc
cmp
test
jb
xor
xchg
sub
jge
inc
sahf
adc
or
cs
sub
orl
in
aam
jns
sbb
sub
inc
inc
cs
mov
test
sbb
nop
out
or
jle
jl
nop
out
and
or
loopne
pop
fcoml
pop
jl
sub
not
mov
sub
jns
inc
cs
enter
xor
cmovb
push
mov
and
and
and
ljmp
movsl
push
repnz
test
das
nop
jmp
xchg
clc
add
add
rol
test
mov
adc
lock
and
int
ret
in
push
inc
adc
sbb
xor
pop
pusha
bound
js
inc
dec
or
and
icebp
adcb
xor
jns
data16
cmp
push
xor
add
fldcw
shl
imul
mov
mov
stc
mov
mov
daa
push
mov
repnz
mov
mov
rcrb
sbb
imul
jnp
push
inc
or
out
jae
inc
push
push
and
cwtl
mov
or
pop
arpl
jo
das
cltd
mov
in
pop
xchg
lds
xchg
out
adc
rcrb
adc
aam
push
push
out
dec
loopne
pop
add
les
xor
in
jnp
add
test
push
mov
jnp
or
sbb
movsb
pop
in
mov
sub
push
nop
xor
push
stos
jnp
mov
adc
or
mov
test
and
fistl
popa
push
sub
int3
push
inc
or
lea
mov
lahf
rclb
clc
jmp
sub
pop
scas
and
cmp
cmp
push
cmp
aaa
xchg
gs
xchg
shlb
test
in
cld
sbb
inc
fwait
mull
add
shll
sub
or
leave
ret
add
shll
lea
jle
xor
xor
adc
xor
loope
cmp
les
imul
or
imul
pop
lock
sbb
imul
mov
ja
dec
cmp
mov
stos
mov
mov
jns
jg
xor
push
lods
adc
xchg
mov
int3
lret
fs
dec
scas
lods
push
out
sbb
popf
cmp
mov
cmp
dec
idivl
or
mov
test
mov
clc
fidivrl
cmpsb
and
insl
fsubrl
mov
lea
sub
xor
mov
outsl
mov
shl
xor
xchg
rolb
dec
loopne
mov
push
sti
pop
mov
jle
clc
jbe
arpl
ss
cmp
inc
das
and
aas
cmpl
jl
cltd
out
add
push
cmp
adc
iret
and
insb
daa
sub
mov
mov
adc
ss
adc
movsb
shrl
sbb
insl
cld
inc
inc
or
add
fistpll
inc
sbbb
js
test
add
or
pop
fmull
mov
push
or
push
xor
inc
pop
js
or
cmp
cvttps2pi
sti
adc
cmpsl
nop
add
inc
jp
xchg
mov
leave
dec
pop
cld
lret
jne
cmp
ror
je
push
adc
mov
push
adc
lsl
or
loopne
cs
popf
jbe
mov
or
fldcw
lret
test
pop
pusha
mov
ljmp
jmp
jg
addl
push
jae
jle
loopne
adc
sub
jno
jb
inc
enter
and
popa
adc
adc
and
repz
and
stos
or
loopne
push
sbb
lea
or
std
push
or
jg
xor
xchg
imul
add
dec
movsb
sar
mov
std
and
nop
pop
adc
push
enter
loopne
and
enter
std
test
mov
dec
dec
and
dec
or
into
and
sub
fcomip
in
mov
push
and
in
and
cmp
xchg
popf
sub
ljmp
stos
mov
or
xchg
jns
xlat
adc
adc
aas
xor
mov
pop
mov
push
xchg
cld
add
movzbl
dec
or
cmp
movsb
lock
or
mov
fsubs
xor
inc
repz
jp
push
adc
sub
mov
adc
jl
sbb
mov
popf
and
push
lock
jp
jmp
xchg
or
xchg
mov
mov
and
adc
mov
or
movl
sbb
xchg
push
push
pop
in
inc
push
and
repz
stos
inc
pop
and
and
sbb
or
xor
cmc
sub
fwait
int
xchg
pop
xor
and
std
add
js
in
or
fcoms
pop
push
xor
enter
adc
dec
adc
data16
insb
leave
add
add
cli
loop
sub
cld
or
push
sbb
add
lea
cltd
or
and
and
sub
addl
pop
push
subl
inc
rorb
push
enter
push
popa
mov
xlat
in
push
orb
adc
adc
lea
int3
fsubs
lds
cmc
lcall
push
pop
loope
adc
adc
gs
inc
or
xor
dec
xor
roll
repz
jecxz
cmc
fisttpl
push
sar
mov
pop
xor
clc
cmc
mov
dec
pop
inc
rolb
xor
test
nop
sbb
enter
and
sbbb
test
and
xchg
dec
xor
pop
pop
scas
fiaddl
scas
push
xor
jge
sub
aam
sub
jne
andl
daa
clc
ja
or
lock
or
dec
sahf
jle
jnp
jb
imul
call
add
mov
pop
add
jb
ficomps
dec
and
je
push
lahf
sub
je
imul
dec
aam
call
cmp
push
dec
and
adc
movsb
and
lds
push
and
mov
jl
fists
in
and
outsb
rclb
or
mov
and
bound
mov
xchg
sbb
dec
mov
push
push
rcll
adc
mov
mov
push
mov
jle
loop
add
adc
xor
mov
leave
sbb
sbb
push
sub
xchg
xchg
cmp
rolb
cltd
pop
inc
mov
sub
mov
push
inc
push
xor
inc
xor
sbb
xor
and
cmp
jno
movsb
inc
push
rclb
push
pusha
push
mov
mov
sub
or
push
sbb
cmp
into
test
lcall
adc
in
or
cmp
push
data16
xor
cmp
inc
enter
sbb
mov
leave
and
iret
fwait
xchg
dec
add
arpl
sub
in
inc
push
add
int3
push
enter
jbe
sarb
popa
sbb
push
shlb
push
mov
push
or
cmp
sbb
jl
xor
xchg
movsl
add
push
push
fsubl
mov
pop
in
add
cmp
mov
test
mov
nop
sbbl
push
imul
repnz
test
jo
test
pop
and
enter
mov
in
vpmacssdd
fadds
icebp
pop
fisubrl
adc
fcoms
int
push
add
mov
shlb
in
insl
out
lahf
aad
mov
add
arpl
jne
mov
pop
mov
into
loop
in
clc
jbe
and
stc
loope
pop
and
xchg
iret
je
or
clc
aas
mov
jae
cld
inc
je
orb
adc
nop
mov
enter
xor
cmp
push
and
pusha
fwait
arpl
xchg
mov
pop
and
sbb
lahf
cmp
xchg
leave
imul
jge
leave
pop
dec
gs
xchg
mov
xchg
and
add
or
mov
int3
xchg
push
xchg
outsl
dec
leave
sarb
mov
or
jp
or
test
xor
xchg
mov
inc
and
movb
je
shll
rcrb
push
cmpsb
mov
sbb
cld
push
xor
mov
mov
cltd
sub
cmpsb
dec
adc
add
pop
add
or
xor
pop
cmpl
adc
scas
rcrb
into
push
dec
mov
and
pop
and
jae
adc
sbb
push
xchg
sbb
je
movsb
jae
sub
imul
faddl
mov
fcom
mov
popf
adc
push
cmp
mov
sub
and
ficompl
and
mov
pusha
arpl
jno
hlt
or
and
stos
aaa
ds
arpl
in
push
mov
push
pop
mov
daa
mov
dec
jae
or
imul
xchg
mov
adc
int
insb
arpl
xor
mov
in
sub
imul
pop
adc
jb
or
or
and
pop
enter
xor
adc
adc
xchg
movsb
clc
out
js
inc
mov
xor
cmp
fnsave
or
idivl
flds
mov
scas
add
cmp
mov
and
push
dec
ror
dec
rorl
sbb
xor
enter
cld
das
jmp
inc
enter
idivl
pop
sub
xor
mov
jg
pop
pop
jo
jg
imul
pop
sbbb
sarb
inc
pop
incb
dec
adc
lea
push
lcall
or
sub
dec
sbb
push
mov
lret
jne
push
inc
and
push
mov
xchg
ss
mov
add
add
and
nop
or
xchg
xchg
mov
or
cs
pop
lods
addb
cltd
lea
sub
loopne
add
push
jnp
add
mov
dec
daa
cs
push
inc
dec
adcl
inc
or
cmp
sub
loopne
and
jmp
push
push
xor
cmpsb
pop
jle
sbb
fistpl
push
fadds
jp
xor
and
jge
xor
arpl
clc
add
adc
je
mov
mov
cs
fdiv
lock
push
mov
daa
push
enter
stc
mov
fdiv
mov
in
cmpb
in
js
push
sbb
je
xchg
xor
cmp
pop
ret
jo
clc
daa
mov
cmpsb
int3
ror
pop
cmp
int3
lods
jae
dec
icebp
je
aas
push
xor
test
in
sub
popa
xchg
adc
subb
scas
mov
cmp
mov
adc
jne
pop
mov
mov
mov
out
pop
jmp
mov
sbb
cmp
lock
inc
sarb
pop
sub
xor
push
enter
leave
sub
xrelease
jo
jb
stc
pop
inc
negb
push
push
adc
lret
sbb
shlb
ret
adc
inc
pushf
fstl
jne
stc
movb
sub
jns
lods
xchg
mov
loope
nop
add
dec
rep
add
sbb
fildll
push
xchg
mov
dec
pop
pusha
add
test
or
iret
inc
push
fs
cmc
dec
repz
or
nop
sahf
cmc
cmp
jb
and
pushl
ret
or
push
ret
mov
or
pop
dec
pop
pop
dec
xor
test
ret
call
aad
sbb
outsl
out
mov
hlt
outsl
or
push
cmpsb
adc
adc
push
xchg
addl
jb
mov
dec
jo
push
gs
jecxz
ds
out
outsl
in
push
mov
push
andl
mov
lock
int
adc
dec
fisubrl
and
inc
lea
dec
andl
xor
sub
leave
push
aam
push
or
or
inc
popa
lods
mov
orl
test
andl
outsb
jno
xor
pop
sub
or
dec
cltd
lock
roll
add
cmp
test
or
adc
mov
sti
dec
loopne
or
mov
add
sbb
mov
das
mov
xchg
xchg
sti
mov
jb
push
adc
test
sti
jl
in
push
enter
sti
sub
test
repnz
sti
sub
push
outsb
adc
xchg
mov
push
pop
push
push
out
sbb
xor
mov
push
fstpt
test
sub
push
cwtl
and
inc
scas
arpl
ret
nop
pop
push
shrl
xor
sub
mov
push
fisttps
fwait
xchg
lods
cmc
or
imul
cmp
test
mov
adc
mov
add
sbb
inc
push
jb
imulb
hlt
or
neg
insl
adc
imulb
xor
pop
push
dec
and
xchg
cld
inc
sbb
inc
and
sub
sbb
mov
inc
insb
cmp
sbb
sbb
and
pop
cmp
sbbb
xchg
cld
inc
push
inc
repnz
and
std
insb
insl
leave
adc
inc
cmp
sub
rcrb
mov
bound
pop
insl
add
add
mov
cmp
in
mov
daa
cld
je
xor
jb
and
std
sbb
jmp
data16
adc
or
rclb
insb
xchg
or
cmpb
fsubrl
call
inc
and
movsb
xor
cmp
push
arpl
lods
or
adc
sbb
xchg
mov
mov
ficoml
or
leave
nop
popa
xchg
shlb
scas
and
and
xor
ja
xor
int
fsubl
push
inc
je
push
xor
xchg
sbb
gs
lods
sbb
or
arpl
in
cmp
sbb
adc
cmp
push
xchg
nop
sbb
dec
adc
leave
sub
pop
insb
and
dec
das
or
push
je
add
or
mov
push
mov
push
pop
dec
aam
mov
push
in
jns
popa
push
insb
inc
or
sub
xor
sub
sbb
dec
mov
imul
sub
dec
pop
imul
sbb
jge
mov
dec
std
call
mov
shl
lea
cmp
je
dec
add
cmpsl
bound
mov
jmp
jecxz
imul
outsb
lods
cmp
add
dec
test
loop
inc
and
test
rcpps
add
lea
or
sub
fidivl
loope
push
mov
push
mov
test
or
imul
inc
movsb
jp
adc
or
adc
jno
gs
lret
xor
lock
mov
sbb
in
adc
xchg
sub
inc
dec
pop
mov
out
popl
daa
pop
push
push
mov
cmp
das
js
pop
sub
push
pushl
sub
out
testl
pop
jb
data16
loop
loopne
xchg
xchg
out
push
lods
inc
lock
mov
xor
lods
cwtl
add
pop
and
dec
sbb
or
les
add
xor
cwtl
push
lods
cmpb
mov
mov
mov
xchg
add
iret
and
dec
scas
sahf
sub
add
leave
cmp
inc
int3
xchg
xchg
jnp
push
push
addl
je
insb
daa
sub
push
mov
mov
mov
nop
je
mov
movswl
push
cld
pop
push
jmp
dec
jmp
ds
fmuls
adc
enter
and
push
je
add
imul
push
add
movl
aam
daa
jns
sbb
repz
adc
stos
fsubl
cmp
jl
fists
call
test
cld
je
jmp
ret
jge
je
mov
pushl
ljmp
add
xor
cmc
mov
pop
push
jp
filds
sbb
loopne
pop
mulb
sbb
bndldx
xchg
fwait
je
mov
sbb
sub
in
out
xchg
mov
cmp
inc
jae
sub
mov
pop
dec
rcrl
add
fcoml
mov
gs
cli
neg
imul
adc
xchg
xor
rcrb
and
mov
mov
dec
dec
jmp
push
dec
add
jno
dec
sbb
movsb
cld
in
mov
lds
push
inc
mov
xor
and
push
jo
aas
cld
mov
mov
add
push
popa
push
add
shll
push
imul
add
enter
push
mov
mov
jp
rolb
jae
mov
jo
and
push
inc
sbb
pop
sub
lea
dec
and
dec
pop
rolb
imul
sbb
xorb
cld
addb
fs
jl
and
jne
adc
cmp
mov
and
push
sbbb
fadds
mov
nop
int
scas
jle
cld
jbe
scas
clc
lea
add
dec
push
xchg
stos
add
test
inc
movb
roll
orb
sahf
mov
push
dec
adc
scas
or
push
adc
leave
loopne
mov
mov
orl
loopne
xor
or
and
shll
mov
mov
add
add
fs
inc
sbb
cmp
mov
add
dec
rcll
in
inc
fwait
icebp
loopne
std
fmuls
jmp
sub
adc
js
xchg
xchg
stos
leave
mov
out
loopne
cmp
mov
or
mov
lcall
inc
fsubrs
loopne
or
and
enter
jecxz
xchg
adc
aas
clc
add
sbb
inc
or
inc
rcrl
pop
roll
ret
shrl
test
xchg
add
or
leave
pop
pop
xor
push
shrl
or
and
loopne
mov
rol
adc
mov
sbb
push
popf
mov
push
add
divl
and
and
mov
xchg
cmp
inc
pop
fs
xchg
lea
inc
hlt
add
jecxz
jne
iret
inc
adc
les
sbb
dec
enter
inc
sbb
mov
jl
and
pop
insl
push
pushl
ret
and
push
repnz
pop
hlt
unpcklps
in
or
jge
jno
cmp
dec
inc
daa
cmp
sub
je
dec
je
add
jmp
insl
jbe
das
jnp
lods
xlat
or
jmp
xorl
aad
adc
xor
fidivrs
adc
addb
rolb
pop
pop
stc
adc
add
xchg
iret
shll
xor
cmp
pop
sbb
lock
sbb
pop
adc
push
mov
push
aad
jge
dec
xor
ret
sti
mov
push
popf
in
and
inc
add
dec
inc
adc
pushf
in
loope
jmp
cmp
add
push
adc
clc
mov
sti
call
xlat
sub
cmpl
aas
push
add
das
cmp
adc
and
in
adc
fists
mov
mov
push
mov
mov
rclb
or
test
mov
inc
mov
out
dec
or
jnp
and
imul
sti
lret
imul
js
lods
add
mov
sarb
push
mov
fisubl
aam
add
rdtsc
adc
test
push
push
xorb
and
dec
in
and
hlt
mov
loop
scas
jne
mov
cmp
jae
jmp
jnp
mov
arpl
ret
and
test
xchg
loopne
dec
std
xor
shll
jmp
cmp
and
je
movb
jmp
inc
mov
cmp
jb
adc
add
lahf
push
ja
jle
xor
mov
push
jo
insb
cmp
lock
mov
je
or
mov
fs
and
and
mov
int
and
pcmpgtb
or
sbb
mov
movsbl
cmp
cmp
cmpsl
dec
jg
push
cmp
je
cmp
mov
push
pop
dec
jmp
cmp
jne
mov
ss
sbb
pop
cli
sti
cld
or
std
or
jmp
dec
test
mov
inc
cmp
mov
and
jg
fisubl
inc
add
cmp
jbe
dec
xchg
push
dec
leave
xor
jae
daa
cwtl
or
sub
leave
ret
jne
bound
daa
pop
pop
ja
jne
xor
jmp
popa
cli
lods
sbb
jne
sub
mov
lock
sahf
or
mov
inc
jg
pop
inc
adc
add
add
test
js
push
sub
mov
ret
sti
js
or
cmc
cmpsl
ja
adc
es
xor
adc
jns
pop
iret
incb
aaa
adc
add
inc
in
mov
aaa
pop
push
sub
jge
push
mov
cli
aaa
pop
push
lea
in
lods
sbb
push
push
and
dec
in
ret
cmp
mul
inc
inc
les
lahf
data16
adc
dec
cmp
repz
in
xchg
and
out
stos
xorb
movl
add
adc
cld
cmp
ja
mov
adc
mov
popf
fidivl
push
les
je
sub
aam
adc
stc
cld
inc
in
mov
dec
loop
loope
pop
pop
mov
stc
add
leave
jne
inc
mov
cmp
lcall
adc
push
adc
sti
ss
je
shlb
inc
mov
push
mov
mov
shr
cmp
or
inc
jae
fldl
sbb
dec
push
cmpb
jecxz
aad
mov
adc
dec
sarb
out
repnz
jbe
mov
xor
xchg
fwait
or
dec
call
cmp
and
and
in
add
das
rorl
xchg
cmc
test
cmp
and
testb
adc
pop
mov
adc
popa
push
mov
das
mov
xor
mov
mov
jb
mov
pop
xor
loop
in
into
syscall
fiadds
cmp
lods
cmp
dec
movsb
mov
push
xchg
not
inc
mov
push
jmp
in
sbb
cmpsb
loop
jbe
out
or
cs
andb
out
pop
pop
ret
and
xor
mov
inc
movsb
pop
mov
mov
ja
lea
sub
or
push
xchg
ret
jecxz
mov
andl
cmp
mov
inc
es
cmp
mov
xchg
jp
imul
mov
add
xchg
cltd
fnstsw
pop
sub
mov
xchg
or
mov
int3
mov
or
mov
cli
mov
push
or
mov
pop
pop
pop
cmp
iret
or
jo
in
aam
lock
loopne
add
xor
or
rolb
mov
jecxz
rorl
jne
test
jle
cmp
pop
fbstp
push
outsb
arpl
rcll
popa
loop
pop
add
iret
xorb
push
dec
fnstcw
fcmovnu
out
cmpsl
leave
inc
add
dec
jmp
jbe
cmc
and
cmp
je
inc
inc
inc
mov
or
xchg
push
inc
xchg
pop
addr16
jmp
cmp
jno
adc
xchg
jle
sbbl
mov
repnz
sbb
cmp
arpl
pop
movups
mov
movsl
and
mov
enter
mov
rcrb
mov
movsb
shl
mov
jle
ss
jmp
sub
decl
adc
repnz
mov
stc
sub
aas
je
pop
ret
clc
dec
cmp
pop
mov
mov
inc
clc
lret
insb
cmp
mov
mov
sub
shlb
add
in
inc
mov
notl
imull
pushf
movsb
jmp
mov
repnz
push
popf
adcb
xchg
jne
adc
jmp
mov
cmc
pop
or
fcompl
mov
push
adc
or
jge
inc
cmpb
pushw
inc
cld
fbld
sub
jne
cmp
sti
xchg
aam
cmp
sub
add
dec
decl
sbb
pop
je
adc
clc
decl
sbb
fnstcw
fdivrs
mov
pop
js
jge
cli
add
sbb
fcos
add
cli
stos
cltd
clc
dec
les
mov
cmp
mov
adc
leave
or
or
jle
call
push
mov
cmp
or
sub
and
push
into
adc
jnp
mov
inc
mov
leave
jecxz
and
sub
shll
bound
or
subb
out
pop
push
push
mov
cmp
pop
iret
jmp
pusha
je
addl
jne
jp
adc
mov
dec
pop
pop
out
push
cmp
add
outsl
sbb
repnz
fldl
add
ss
inc
in
mov
inc
mov
jle
icebp
add
jle
rolb
roll
neg
test
call
xor
rcrb
add
int
inc
ljmp
faddp
ret
adc
std
cld
add
push
call
subb
jecxz
rorl
add
cmp
jbe
fisttpll
cmpb
sbb
jg
imul
stc
or
pop
pop
test
in
xchg
call
sub
iret
jl
add
or
loopne
add
das
test
or
rcr
rorl
jl
or
pusha
and
addr16
xchg
sbb
add
adc
leave
insb
jns
mov
int3
lea
cmp
xor
add
add
nop
inc
inc
inc
inc
jle
dec
rcrl
fisttps
push
les
mov
shll
pushf
mov
mov
call
call
cmpsb
imul
jle
cld
lea
clc
adc
xchg
pusha
lcall
and
insb
push
in
dec
nop
cmp
bound
test
loope
xor
push
lea
jl
cld
fcmovnb
dec
xchg
and
std
cld
out
adcb
cwtl
stc
ds
adc
jge
iret
leave
stc
sub
mov
mov
jne
add
fstl
mov
aas
add
push
inc
out
add
jns
mov
push
pop
add
add
add
imul
inc
dec
push
xor
insb
lcall
sbb
xor
rcrl
sbb
adc
xor
adc
or
add
xchg
or
push
test
push
das
lsl
sub
mov
bound
clc
shll
test
je
jno
pop
sbb
and
stc
cmp
and
add
sub
inc
dec
jne
mov
sub
lret
je
repz
push
push
inc
dec
jl
add
shrl
pushl
icebp
mov
jl
add
sub
add
mov
sahf
ret
mov
bound
sub
fisubrs
mov
or
adc
ja
ret
jg
sti
pop
es
lahf
clc
add
loop
or
testl
scas
inc
mov
sar
mov
shr
jne
or
or
xorb
orps
push
lods
mov
adc
and
pop
push
cli
cmp
sbb
cs
xchg
inc
js
jg
mulb
cmp
leave
xorb
cwtl
pusha
das
loope
aam
and
cmp
cs
add
idiv
mov
or
loopne
and
sub
dec
adc
frstor
mov
decb
pop
push
and
or
in
jne
cmp
add
lock
xor
test
fisubl
pop
push
lea
push
aaa
in
and
out
jmp
dec
bound
sti
xor
out
add
sbb
push
jmp
test
sti
idiv
sahf
fstpl
sub
fcompl
fnstsw
sahf
jne
jg
add
fbld
test
jne
push
jge
outsl
jae
pop
repz
adc
or
insb
fiaddl
pushl
adc
mov
pop
jg
add
pop
mov
jns
out
scas
or
jl
sub
inc
scas
test
cmpsb
jecxz
inc
pushl
fwait
test
ficomps
je
fldcw
fistpll
or
and
mov
sub
or
or
or
or
pop
ret
aam
sub
sbb
setg
mov
mov
jmp
pop
jbe
xor
or
pop
pop
xchg
sbb
jge
mov
sbb
in
pop
xchg
das
insl
add
xor
inc
popa
std
mov
inc
add
mov
adc
add
jno
xchg
outsl
add
jno
dec
ds
pshufw
shl
jne
or
jge
sarb
test
inc
mov
sbb
sbb
xchg
mov
rcll
cmp
out
notl
ret
shll
testl
loopne
xchg
xor
icebp
fcomps
les
loopne
pop
sbb
mov
or
inc
pop
add
bound
insb
dec
fwait
cltd
hlt
push
clc
cld
pop
lock
loopne
mov
fcomp
or
loop
inc
int3
std
mov
repnz
aam
push
pop
or
insl
mov
rcll
int3
add
pop
ja
adc
lods
fmuls
je
cmpsl
mov
scas
out
fldl
pop
adc
add
movl
dec
or
jo
or
call
cld
ret
bound
jne
add
or
test
sbb
imul
arpl
pushf
test
pop
sarl
icebp
fisubs
mov
pop
cltd
xchg
and
cmp
movsl
neg
or
dec
lea
cmp
pop
add
add
orl
inc
push
push
div
sub
xor
jecxz
insb
jnp
jmp
jbe
xchg
andb
out
subb
sbb
loope
adc
push
push
cmp
sahf
sub
add
adcl
or
inc
push
les
add
cmp
and
push
push
push
mov
testl
push
push
xor
cs
sbb
mov
mov
lods
xchg
nop
fimuls
jl
jne
jecxz
out
lea
mov
push
and
push
adc
ret
fs
or
push
sbb
jns
jo
pop
mov
loop
pop
or
jg
push
or
push
or
adc
mov
mov
or
ret
inc
add
imul
adc
sub
push
xor
mov
fisubs
dec
mov
push
push
mov
jae
ss
or
add
inc
jmp
adcl
addr16
dec
mov
lock
sub
lock
or
das
push
push
xor
pop
xchg
enter
sub
or
xchg
and
and
or
pop
aas
or
test
imul
int3
js
cmpsb
int3
les
push
pop
aas
fiaddl
loopne
push
sub
andb
and
mov
xchg
test
pop
sub
in
nop
mov
and
sub
adc
mov
imul
push
fs
cwtl
mov
lcall
mov
inc
or
mov
mov
int3
fcomp
and
push
int
or
jno
sbb
inc
pop
inc
outsl
lahf
out
push
mov
or
icebp
sub
imul
out
jae
push
cmp
jne
push
pop
and
arpl
fistpll
or
stc
add
pop
mov
adc
das
loop
adc
or
mov
xchg
add
jne
push
and
lahf
mov
cmp
ja
xchg
sbb
movsl
adc
inc
test
and
adc
inc
push
pop
lea
sub
fnstsw
push
mov
fcoms
andb
mov
fsubrl
mov
xlat
movb
cmp
jne
adc
in
ficomps
sbb
adc
int
jne
mov
or
jp
add
xor
aam
jnp
or
xor
cmp
and
ds
mov
add
jge
jne
aas
add
pop
add
sbb
outsl
arpl
rorl
jne
mov
pop
jo
ds
repz
adc
mov
jbe
jo
ja
dec
sbb
lret
xchg
loope
inc
jnp
xlat
or
mov
and
loop
dec
movsl
dec
xchg
pop
mov
sub
or
aaa
cmp
jae
pop
sarl
jne
jb
jne
pop
cmp
jbe
out
testl
imul
add
mov
mov
loopne
mov
jmp
loope
test
test
mov
sbb
jbe
add
add
fucomip
dec
sub
jne
adc
jne
or
loope
or
decl
es
test
jne
ja
daa
testb
movl
mov
in
jmp
mov
pop
neg
sbb
cmp
enter
in
mov
pop
fcomps
cmp
mov
add
mov
xor
mov
lea
add
ret
sub
pop
adc
sbb
cmp
pop
sbb
xchg
lock
shrb
aaa
ffreep
or
out
mov
xor
lar
add
rcl
testl
test
jne
dec
push
loopne
pop
dec
cmpsl
adc
mov
fiadds
test
clc
cmp
add
ljmp
or
and
shr
mov
add
sub
add
shr
sti
imul
fistpll
nop
dec
lods
ja
xor
loopne
ret
pop
xchg
out
add
jge
fisttpl
daa
add
imul
rcll
mov
les
ret
adc
adc
add
ds
xor
inc
mov
mov
mov
sub
sti
pop
repz
sub
clc
adc
inc
and
test
mov
imul
add
imul
mov
sahf
cmpsb
jns
loop
adc
lods
mov
mov
dec
and
and
xchg
lock
mov
jge
cmc
or
fsubl
dec
inc
mov
jmp
pusha
mov
mov
mov
mov
mov
xchg
or
enter
call
pop
insl
jl
push
addb
and
sti
dec
jmp
lds
xor
jecxz
je
sub
stc
insl
push
idivl
pop
sti
insb
mov
icebp
xchg
iret
adc
dec
or
movsl
or
hlt
sub
inc
out
ret
aas
mov
iret
test
dec
pusha
jmp
add
stos
aaa
lcall
or
mov
mov
adc
push
ret
mov
rolb
enter
sti
push
pushl
and
lahf
shl
sub
sub
add
cld
cmc
or
fildll
dec
mov
jb
divl
shl
adc
repnz
inc
loope
ret
fwait
outsl
addr16
icebp
xor
mov
lret
add
jmp
add
mov
mov
inc
mov
loop
sbb
add
adc
ret
or
mov
jge
jne
jmp
jb
iret
mov
add
sbb
test
test
sbb
mov
or
push
movsb
and
rolb
or
enter
xlat
dec
inc
xchg
mov
sbb
sub
mov
or
jmp
std
jmp
mov
or
sbb
pop
mov
mov
inc
pop
fsubs
or
jge
jbe
adc
loope
xor
divb
rcll
jmp
aaa
adc
aad
jno
data16
push
outsl
adc
inc
push
sbb
mov
andb
aaa
push
fs
clc
fbld
pop
mov
loopne
stos
push
pop
mov
mov
scas
pop
pop
ror
dec
and
inc
add
jecxz
inc
add
imul
pop
in
adc
jge
test
scas
sbb
cmp
into
pop
push
shl
shr
mov
test
je
out
push
movsb
add
loopne
fiaddl
push
inc
push
and
push
sti
dec
pop
shl
dec
shll
and
inc
pop
pop
xchg
pop
push
mov
and
out
push
adcl
js,pn
mov
fimuls
divl
adc
inc
cmp
sub
in
shlb
or
cld
aas
add
daa
pop
insb
and
jne
lea
mov
in
jg
push
push
sub
jecxz
loopne
les
fstp
leave
rorb
jmp
pop
imull
mov
mov
clc
daa
and
xchg
or
inc
ret
mov
jb
cmpl
push
sub
jae
sub
les
mov
andl
jae
push
gs
push
or
test
cmpb
cmpsl
shl
sub
xchg
jp
fstl
cld
adc
xor
je
or
sub
dec
pop
cmp
lods
rcr
mul
add
cmp
dec
jne
clc
pop
pop
shrb
sbb
jb
je
fcmovu
xorl
in
jno
xor
push
mov
nop
ud1
scas
jne
push
add
inc
lcall
scas
sub
jne
jae
loop
popa
sub
xor
push
add
jnp
insb
mov
push
stos
or
mov
mov
push
popa
jne
inc
sbb
addb
loope
sbb
loopne
jbe
pop
and
sti
ljmp
mov
sub
out
mov
pop
test
outsl
and
jmp
test
push
jl
adc
add
inc
xor
mov
mov
out
imul
mov
into
int3
dec
icebp
inc
rcrl
push
sbb
es
hlt
pop
push
jl
divl
scas
xchg
lret
mov
loope
pop
pop
out
cmpsb
dec
lea
inc
add
orl
popf
dec
not
xchg
pop
test
jne
lahf
scas
sbb
mov
push
jmp
sbb
pop
fistl
dec
repz
xor
inc
pop
push
scas
cld
cmc
enter
dec
adc
in
sbb
pop
movsl
or
jmp
or
inc
rclb
and
mov
bound
inc
cmp
add
add
fsubl
sub
mov
mov
mov
xchg
sbb
movsb
insl
pop
xor
mov
adc
or
iret
inc
pop
add
inc
or
adc
pop
outsb
fisttps
pop
cmpl
fdivs
out
jle
and
mov
adc
jg
pop
sub
cld
cltd
inc
dec
add
fistps
and
jne
or
ss
pop
and
mov
cltd
jmp
cmp
std
jecxz
push
loope
enter
add
adc
std
testl
or
sbb
daa
and
or
push
add
arpl
push
xor
jne
xor
adc
scas
sbb
imul
or
fadds
aaa
lock
shll
xor
or
jo
add
icebp
and
ret
push
aad
xor
jg
shr
rcr
shr
rcr
or
jne
div
aaa
mull
or
add
jb
cmp
or
push
jbe
sub
sbb
scas
dec
jnp
adc
or
neg
sbb
pop
add
call
sbb
and
and
fcoms
inc
sbb
push
shr
inc
add
push
cmp
add
jae
mov
out
fnsave
inc
pop
adc
cmp
add
push
sbb
ftst
xchg
and
jecxz
sbb
shl
out
and
sbb
mov
ret
push
scas
pop
push
andb
inc
pop
inc
and
popf
xor
popl
ret
div
rclb
mov
pop
shl
and
cmp
push
scas
xor
cmp
jno
pop
je
adc
or
push
mov
loope
adc
iret
fcoml
insb
jo
sub
iret
sub
cmp
sbb
outsl
xchg
xchg
push
inc
adc
imul
cmpsl
add
test
and
cmp
sti
jb
jge
jns
push
sbb
pop
sbb
arpl
inc
ret
and
addb
push
shll
aaa
out
and
inc
adc
sub
inc
adc
and
int3
mov
call
add
loopne,pn
mov
inc
mov
cmp
inc
test
sub
sahf
xchg
push
and
or
or
pop
inc
dec
cmc
push
loopne
xchg
jecxz
jecxz
in
cs
dec
pop
sub
pop
mov
loope
dec
sub
xor
sub
mov
jb
push
fldenvs
and
test
adc
adc
mov
mov
repnz
insb
xor
lea
jb
push
cmp
cmc
filds
xor
or
retw
add
sahf
lea
sub
and
cmp
fucomi
adc
in
cmpsl
rcrb
xchg
mov
aad
cld
push
xor
lret
cmp
push
pushf
cld
jno
shlb
pop
mov
out
add
adcb
nop
sbb
inc
lods
and
sub
test
push
imul
jl
add
test
jne
push
xor
jo
jbe
dec
inc
sub
lock
je
cmp
xor
ficoms
ret
sbb
add
movsl
xchg
sbb
shll
jne
sbb
stc
shl
xor
sti
mov
stc
and
push
pop
mov
and
mov
and
fmuls
xchg
or
repz
add
inc
push
xchg
mov
inc
fimull
pop
push
sbb
aad
in
and
adcl
test
pop
or
jnp
adc
add
sub
cmp
jb
mov
dec
roll
and
loope
incl
dec
sbb
dec
dec
mov
dec
inc
push
mov
adc
rolb
call
mov
dec
gs
dec
scas
mov
jb
icebp
add
sbb
push
test
or
call
pop
push
jb
hlt
mov
lcall
neg
sbb
mov
mov
sbb
out
inc
sbb
jno
xchg
jle
adc
incl
mov
jmp
jns
in
fcomi
sbb
adc
sub
dec
adc
inc
fmuls
fs
mov
cli
inc
cmc
repnz
jg
fwait
xor
xlat
adc
jg
pushl
jne
inc
inc
dec
call
orb
pushl
mov
mov
adc
pusha
pop
loop
insl
call
loopnew
pop
or
sub
cmpsl
je
cmp
mov
dec
sub
cmp
ret
sub
sbb
mov
xchg
sbb
cmc
ljmp
cmp
mov
mov
cmp
jne
sbb
out
jne
or
fiadds
and
dec
orl
push
std
lea
pop
ret
sbb
push
jae
push
cmp
xchg
je
mov
inc
cmp
je
das
cld
inc
jge
push
aad
or
push
lcall
adc
mov
mov
pop
mov
lahf
stc
xor
or
xor
mov
testb
sbb
or
rol
cmp
pop
and
pop
sub
lods
aam
inc
mov
je
test
out
cmp
xlat
fwait
out
shll
push
aam
xchg
pop
jae
in
add
or
cld
aas
sbb
movsb
xchg
cmpw
inc
arpl
mov
das
hlt
adc
data16
imulb
rcl
dec
xor
repnz
dec
call
or
inc
cmp
sarl
jne
push
xchg
repz
mov
add
data16
mov
andb
je
inc
inc
pop
in
sub
rorl
popf
and
push
push
ss
hlt
in
insl
orb
dec
dec
les
mov
clc
jp
pcmpeqw
inc
lods
jo
jmp
lea
ret
rcll
and
ror
pop
imul
inc
sbb
imul
popf
add
and
pop
or
mov
pop
jmp
cmp
mov
push
jle
jae
dec
dec
mov
or
jb
shrb
lock
rclb
sub
push
and
jo
inc
jg
repnz
add
pop
cmp
push
mov
sub
popf
sbb
adc
stos
push
jno
inc
cmp
in
push
cmp
pusha
adcb
stos
jg
pop
lock
lea
cmp
jb
mov
das
sub
cmp
jae
pop
push
dec
fisubs
dec
out
jmp
hlt
pop
jo
jb
inc
cmp
scas
push
push
jno
movb
adc
cs
xor
sti
jg
ss
push
inc
outsl
dec
int
dec
add
or
mov
jmp
push
xor
movsl
aaa
add
fimuls
mov
jne
andb
das
mov
or
imul
mov
mov
adc
mov
sub
adc
sub
push
adc
push
js
lock
mov
jbe
out
jle
popa
lcall
ficoms
test
xchg
outsb
pusha
aaa
icebp
jmp
and
xor
push
rorb
adc
jns
jle
loope
or
or
lret
clc
popf
in
shll
into
sub
and
push
mov
pop
mov
test
push
fldt
or
cmp
cmpb
push
decl
sarb
fisubl
mov
negb
ljmp
cltd
or
adc
daa
and
js
rorb
addl
jmp
pop
popf
or
add
add
mov
sub
lods
add
or
inc
mov
bound
test
pop
dec
mov
or
pop
dec
sbb
xor
inc
shrb
inc
mov
add
push
add
push
inc
adc
loope
mov
push
dec
cmp
or
decl
sbb
mov
pop
test
mov
sub
aam
adc
xchg
and
mov
sbb
adc
scas
fldl
imul
int
pop
nop
adc
xchg
mov
loopne
lea
popf
or
add
jl
xchg
sbb
sbb
and
push
in
subl
jl
ficoms
aaa
fwait
or
xor
dec
pcmpgtb
pop
mov
out
out
lahf
and
or
sub
cltd
ret
ds
xchg
je
std
jg
popl
mov
cmpb
jne
mov
jmp
loope
cwtl
ja
leave
or
es
je
ficoml
loop
je
inc
repz
loope
add
add
jecxz
xchg
xchg
ficomps
or
fcmovnu
mov
xor
ret
cmp
sub
add
shlb
in
pop
mov
xchg
and
push
mov
imul
mov
mov
add
andl
daa
sti
into
clc
mov
sub
mov
test
jge
out
mov
mov
shll
ds
add
push
or
cli
add
pop
fwait
adc
call
inc
imul
mov
frndint
sub
shr
mov
jmp
leave
cmp
jmp
sbb
mov
and
out
adc
push
or
xor
push
cld
or
mov
dec
lcall
test
pop
lret
jle
cli
add
cmp
jbe
aas
es
jge
pop
mov
cmp
dec
pop
and
mov
decl
dec
add
shll
pop
mov
sub
and
lcall
loopne
cmp
inc
push
ljmp
cld
cmp
push
push
sti
sbb
add
pop
sub
pop
adc
adc
mov
sar
pop
fildl
roll
pop
hlt
sub
and
sti
xchg
test
mov
dec
pop
cmp
mov
fimuls
cmp
and
cmp
je
pop
push
sub
jno
jno
cmp
lock
pop
sbb
lret
shr
not
and
add
pop
xor
imul
cmp
fdivrl
xchg
xor
mov
add
jno
sbb
and
pop
imul
mov
jno
pop
roll
daa
pop
bound
sub
in
push
pop
outsl
or
sbb
jo
mov
mov
out
push
and
mov
ljmp
sbb
sub
fcompl
dec
adc
dec
stos
push
push
dec
lock
mov
or
ret
dec
scas
js
mov
decl
jae
scas
push
int
mov
or
jno
xchg
jl
loope
add
dec
jne
js
sbbb
fld
mov
push
call
aas
gs
push
or
xor
movsb
mov
dec
cmpsl
icebp
mov
push
decb
adc
inc
ss
jo
pusha
add
and
ffree
xchg
loope
and
dec
xchg
or
adc
out
add
lods
push
mov
pushl
enter
push
lea
push
pxor
mov
push
mov
add
or
movsl
call
inc
ja
cmp
push
dec
fldcw
popa
lret
mov
mov
inc
sar
dec
cmp
jecxz
jecxz
jge
cmc
adc
cmp
jmp
pop
and
dec
not
call
movlps
fisttps
cmc
jae
inc
mov
and
decb
iret
mov
hlt
inc
adc
jb
int
mov
mov
cmp
dec
adc
fistpll
dec
jae
cmpl
outsb
jmp
mov
or
fwait
outsl
inc
push
or
testl
xor
mov
mov
cmp
int
scas
or
sbb
cli
pop
cmpb
mov
xchg
ja
add
aaa
mov
pop
rcrb
dec
dec
inc
or
pop
jne
mov
cld
daa
lock
std
scas
mov
je
arpl
fcmovnb
xchg
dec
scas
into
jne
int
and
pop
test
jl
shl
inc
jmp
stos
imul
mov
stc
xchg
sub
pop
mov
incb
cmp
jle
pop
orb
dec
inc
dec
popa
pop
sbb
hlt
jno
sub
iret
sar
adc
jmp
mov
jl
fiadds
decb
jne
adc
in
and
jmp
mov
sub
cmp
or
push
insb
xor
xchg
push
or
add
fisttpll
mov
ljmp
jb,pt
xchg
hlt
mov
mov
scas
xchg
fisttpll
cmp
jge
mov
sub
dec
sti
or
into
shr
or
adc
push
or
das
push
or
pop
addb
mov
sbb
or
das
inc
xchg
add
stos
mov
mov
cld
lods
clc
fmulp
inc
lock
inc
add
cld
mov
stos
cmp
jns
jne,pt
cmp
cmp
jbe
xchg
inc
or
lea
or
cmpsb
dec
adc
cmc
add
shll
mov
shlb
xlat
adc
popa
icebp
cmp
je
xor
mov
adc
les
adc
fisttps
lea
addr16
cmpsl
mov
mov
mov
test
addb
js
popf
xor
in
xorl
incl
and
sbb
mov
inc
or
fildl
aas
lcall
pop
sub
nop
call
inc
pop
push
xor
dec
repz
cmp
or
out
out
add
addb
pop
xor
lea
out
aas
cmpsl
cli
ja
lea
dec
in
mov
jns
call
movl
fnstenv
sbb
movl
sahf
pop
lock
testb
jle
or
mov
divl
fisttps
adc
inc
fs
inc
test
sahf
mov
mov
pop
test
hlt
mov
jg
incb
add
js
mov
and
dec
jo
cmpsb
xlat
or
or
xchg
sbb
movsl
mov
lea
sub
lods
xchg
shlb
shr
or
dec
cld
dec
cmp
adc
js
cmp
ret
outsl
add
mov
flds
popl
xor
inc
fcmovnb
jbe
popf
pop
push
mov
pop
dec
test
pop
or
lea
rorb
nop
sub
inc
mov
nop
dec
or
jo
scas
movsb
mov
leave
jg
xor
adc
sub
add
mov
std
or
movsb
mov
stos
sar
dec
cld
ljmp
hlt
pop
dec
hlt
lea
ljmp
jg
or
xchg
in
dec
pop
dec
pop
pop
outsl
sahf
jo
pop
pop
add
xchg
adc
add
and
cmp
cmpb
lret
enter
jno
and
and
rcll
test
in
jp
les
xor
inc
xor
add
pop
mov
icebp
pop
in
js
clc
jl
adc
cmp
jge
es
or
mov
dec
insl
pop
sbb
push
stos
xor
and
push
add
jbe
push
adc
fstl
mov
movb
inc
movsl
dec
popa
arpl
je
repz
and
mov
xlat
dec
push
in
fs
add
bnd
jmp
or
mov
and
sub
test
jo
jnp
aam
add
dec
add
ret
adc
ret
out
cmp
bswap
xchg
dec
repnz
ret
addr16
xor
add
pop
popf
pop
xchg
cmp
das
dec
test
jmp
and
mov
scas
imul
je
filds
cmpsb
xor
push
aad
aad
les
add
popf
fwait
push
fstl
out
scas
leave
push
jecxz
lds
in
xor
mov
push
mov
mov
mov
lea
ljmp
dec
cli
movsl
je
xchg
adc
xor
mov
or
adc
popf
ret
rorl
mov
dec
pop
pop
enter
std
inc
jl
push
decl
mov
mov
add
cmp
jae
orb
pop
ljmp
lock
imul
inc
and
inc
pop
cltd
dec
andb
bound
cmp
sbb
mov
mov
or
gs
scas
inc
leave
andb
or
mov
loopne
push
push
mov
enter
pop
xor
sahf
or
jle
pop
pusha
pop
out
and
adc
iret
lock
lods
aas
jb
sbb
cmp
pushf
pop
gs
or
xlat
or
int3
sbb
mov
in
leave
ja
call
pop
lock
incb
jge
inc
lahf
mov
je
cmpl
jp
daa
es
xchg
xchg
cli
out
cmovle
sub
pop
cmp
or
and
push
outsl
std
xor
out
xor
jbe
push
mov
adc
lret
jmp
test
jne
lods
jbe
xor
and
test
bnd
xchg
mov
or
divl
lock
sbb
xchg
sar
inc
or
mov
mov
mov
scas
stc
or
push
cmpsb
adc
enter
lahf
xchg
adc
cmp
inc
add
mov
pop
incl
sti
enter
adc
pop
mov
mov
rcrw
mov
leave
push
sbb
adc
inc
lock
cmp
fbstp
xchg
addr16
pop
dec
iret
lret
jl
cmp
jbe
push
dec
ds
cmpsb
sarb
sbb
jne
sub
adc
andl
enter
int
inc
daa
dec
jle
and
push
xor
jecxz
xchg
adc
inc
popf
adc
ja
es
xorl
mov
cmp
adc
adc
sub
jge
pusha
loop
push
ds
rorb
sahf
pop
push
or
push
aas
mov
pop
or
mov
repz
testl
ja
cmp
push
lds
aam
in
je
inc
mov
xchg
sub
jle
add
lods
push
jo
jne
lods
fiadds
rcrl
repz
jo
mov
jle
rorl
outsb
sbb
push
sbb
aad
push
cld
mov
inc
cmp
add
or
mov
cmp
popa
shrl
jae
cmp
add
or
jle
sbb
and
inc
or
ret
add
inc
push
pop
or
add
mov
lods
movl
xor
icebp
fldenv
fldpi
sub
cmpsl
add
mov
push
sbb
movsl
or
call
cmp
ja
xor
scas
and
add
adc
add
sub
push
inc
sub
cmp
inc
loop
das
add
jbe
adc
push
lea
jae
mov
adc
sbb
add
jne
inc
inc
pop
push
movsb
fucomip
mull
add
ret
or
push
imul
add
out
mov
mov
divl
cmc
push
fdivrl
jbe
push
adc
pop
add
mov
inc
lea
arpl
sub
in
cmp
test
jno
mov
mov
jmp
ret
sub
jb
fucomip
scas
inc
jae
inc
rolb
jmp
outsl
push
ret
xor
mov
mov
outsl
or
psllq
or
icebp
inc
inc
lret
xchg
test
push
mov
mov
jle
add
or
mov
jl
sbb
adc
enter
pusha
mov
pusha
jae
movsl
add
xor
adc
or
sbb
sbb
fldl
inc
mov
mov
cmp
ja
std
or
lock
mov
cmp
pop
dec
xchg
inc
cmpb
lea
arpl
mov
jmp
xchg
lret
mov
lock
jmp
jge
push
or
out
or
decl
add
aaa
pop
ret
xchg
test
and
mull
sub
inc
sbb
dec
ss
cmp
inc
xchg
and
cwtl
xchg
clc
pavgb
push
loope
das
adcb
mov
loop
js
popa
inc
jno
pop
jne
inc
push
int3
dec
pushf
lcall
adc
ficoms
inc
popf
adc
es
mov
orl
mov
adc
adc
pop
or
jnp
cld
adc
rcll
or
rorb
add
inc
jle
repnz
orl
test
pushf
sbb
xchg
xchg
dec
add
mov
bound
adc
pushl
das
push
or
shll
lret
and
mov
cld
out
shl
or
adc
sub
sub
out
jge
shl
xor
jmp
repnz
and
std
icebp
pop
out
dec
add
inc
hlt
test
je
nop
jge
mov
or
test
adc
mov
cmc
add
adc
or
dec
jge
mov
adc
pop
push
mov
jmp
xchg
je
cmp
or
cs
daa
sub
or
pop
dec
jo
out
push
jmp
cld
dec
cmpps
lret
mov
insb
nop
aaa
repnz
jnp
and
ret
mov
mul
jmp
arpl
or
or
jmp
xor
das
or
cli
daa
rorl
push
gs
and
shll
cmp
dec
and
jecxz
aam
sub
sbb
mov
cmp
inc
aaa
cmc
icebp
mov
inc
and
sbb
adc
cmpsl
std
loope
inc
or
add
sti
add
in
cmpsl
jns
add
test
fisttps
outsb
sub
mov
jmp
rcr
push
add
orb
jmp
pusha
jns
jg
and
or
or
testl
add
push
imul
imul
notl
popa
pop
push
sub
mov
lret
jmp
adc
pop
fldl
fstpl
scas
add
clc
vmovups
out
arpl
je
test
or
mov
call
jmp
testb
out
fisttps
adc
xor
stc
fs
mov
cltd
dec
cmp
enter
mov
inc
xlat
and
xchg
push
or
cmp
sbb
loopne
nop
rcr
add
sbb
rorb
inc
adc
jecxz
add
loopne
pop
hlt
mov
jmp
aas
xor
ss
jbe
dec
xor
pop
dec
nop
inc
scas
fs
inc
xor
adc
push
fbstp
fstpl
ja
sbb
mov
test
into
adc
xchg
push
xchg
lret
dec
fcmovne
repz
loope
pop
es
and
jns
cmp
test
rcll
popa
xchg
pop
mov
out
into
sti
or
lret
mov
jmp
test
pop
clc
cmp
ror
rorb
ud0
mov
enter
roll
add
insl
hlt
sbb
je
orb
sbbl
adc
jmp
pop
pop
je
push
std
fwait
adc
sbb
notb
and
clc
pop
lcall
daa
out
dec
loop
push
js
dec
push
fs
sub
inc
inc
mov
int3
lock
ds
push
xchg
and
jo
adc
cmp
pushf
add
mov
rolb
push
xchg
sub
fwait
ja
pop
subl
xor
cwtl
push
sbb
adc
rol
xlat
mov
pop
scas
mov
push
xchg
lock
int
cmp
shll
jbe
int
cmp
mov
push
push
add
push
test
add
push
test
add
dec
ljmp
xchg
inc
cli
or
mov
imul
sub
addr16
ds
lds
or
dec
push
jnp
jge
imul
or
push
or
aam
and
jmp
sub
add
loop
data16
xlat
pop
mov
mov
adc
cmp
pop
sbb
mov
pop
pop
sbb
sub
and
cmp
inc
jmp
or
gs
jecxz
insl
push
gs
pop
pop
nop
xchg
negb
fst
gs
div
lock
addb
dec
jmp
or
addr16
gs
out
xor
enter
inc
mov
pusha
mov
sub
paddd
call
movswl
sub
les
mov
jno
fnstsw
aaa
mov
insl
xchg
sbb
loop
orl
mov
and
ss
and
or
mov
push
inc
cld
pop
mov
pop
pusha
adc
or
sub
or
addr16
fwait
sbb
fs
es
and
icebp
fstp
and
cmp
jmp
add
imul
add
in
jmp
jo
inc
adc
scas
in
decl
fmull
insl
lock
add
mov
pop
xchg
pop
pop
test
push
scas
sbb
pop
movsb
dec
fnop
ret
jmp
pushf
inc
movsbl
cmpsl
mov
sub
mov
push
popa
sub
mov
fwait
mov
mov
inc
mov
add
inc
push
mov
sbb
or
mov
dec
add
hlt
and
mov
sub
or
or
cld
jge
cmpb
je
cmp
ficoms
inc
dec
mov
enter
jb
lods
pop
and
mov
lret
je
leave
clc
lret
pop
or
jns
test
xor
adc
cltd
cmpb
ja
daa
mov
add
stos
fisttpl
lahf
rcll
sub
sbb
add
push
or
cmp
into
leave
mov
stc
push
inc
add
mov
pusha
shlb
rolb
lret
mov
jo
and
loope
push
icebp
add
sbb
js
test
sarl
add
mov
lock
addl
pop
scas
hlt
movb
arpl
cmp
pop
add
jns
neg
mov
sub
adc
fs
pop
mull
in
jnp
jnp
cltd
or
or
nop
and
cwtl
cli
add
rorb
mov
call
sbb
or
pop
pop
inc
push
lods
sbb
mov
les
adc
xorl
xchg
sbb
adc
or
pop
inc
adc
das
jg
add
jne
movb
add
or
jg
mov
sbb
clc
cmc
pop
xor
and
clc
cmp
mov
xor
mov
cmc
inc
out
pop
and
jge
pop
sub
fsubrp
push
pop
cmp
jl
push
pop
push
push
sub
inc
lahf
adc
ret
bound
fs
mov
scas
mov
dec
xchg
or
push
push
aad
icebp
push
arpl
sub
sbb
rorl
jle
inc
add
pop
cld
mov
jge
das
xor
mov
and
fimuls
lahf
dec
movsl
dec
aam
add
stos
or
dec
movb
jne
mov
xlat
std
and
cmpsb
sbb
add
es
mov
inc
je
xchg
in
frstor
adc
icebp
pop
dec
or
mov
jne
sub
jmp
and
mov
push
test
sbb
cmp
cltd
mov
inc
push
push
add
adc
cmp
in
push
mov
jge
mov
jmp
xchg
sbb
daa
enter
jle
dec
outsl
add
jne
int3
pop
mov
cmp
adc
push
cmp
pop
push
cmpl
sub
jbe
addl
je
xchg
mov
and
push
sbb
adc
ljmp
cs
xor
sub
dec
add
sbb
inc
or
cmp
xor
jl
dec
mov
adc
and
aad
cmp
inc
dec
jle
pusha
sahf
or
mov
bound
and
iret
or
aam
jnp
pop
nop
xor
mov
and
das
enter
cmp
adc
mov
adc
adc
les
icebp
push
lret
fdivs
lock
call
cmp
cmp
jg
mov
sahf
inc
popf
or
or
jle
adc
jmp
jle
jbe
and
dec
aaa
mov
sub
sbb
dec
clc
out
xor
or
adc
mov
jmp
or
in
jmp
imul
mov
jg
movsl
add
inc
adc
dec
test
adc
jmp
cmp
scas
outsl
mov
xchg
js
dec
orb
pop
mov
mov
and
in
imul
cmpsb
sbb
add
inc
sbb
lock
jg
jae
cmp
jl
cmp
jg
dec
pop
and
cmpsl
xor
lock
or
je
shl
mov
add
inc
fnsave
pop
aas
dec
ror
adc
test
lret
adc
js
or
jl
lea
pop
scas
xchg
mov
nop
shll
dec
aaa
adcl
sbb
testb
loop
test
jge
mov
or
test
or
or
shll
lock
lods
enter
xlat
or
mov
addr16
push
or
dec
shlb
mov
pop
dec
or
mov
mov
sub
movsb
fldl
mov
ret
outsb
fwait
popf
nop
test
insb
xor
mov
cmpsb
mov
rolb
addr16
imul
adc
jg
mov
push
pushf
andl
icebp
insb
cmpsl
push
ljmp
mov
add
cvttps2pi
xor
mov
push
push
add
repz
mov
pushl
cmp
mov
push
mov
repnz
outsl
push
push
jle
pop
pop
mov
sbb
aam
push
push
mov
fsubl
dec
repnz
dec
dec
jmp
in
std
ror
loopne
mov
out
sub
jne
cmp
sbb
mov
cmp
jp
aam
jmp
sbb
push
shlb
rorl
or
adc
in
iret
jle
sbb
inc
loopne
mov
cmpl
jbe
cmpl
sub
cmp
je
sub
xor
xchg
div
fnstsw
mov
sbb
or
push
dec
enter
adc
inc
jle
outsl
fs
shll
adc
add
jno
or
iret
jl
enter
push
testb
mov
xchg
jbe
or
ja
push
hlt
push
and
push
jo
dec
xchg
pop
aaa
unpcklps
lahf
mov
push
and
je
cmp
xchg
jae
dec
and
add
fists
pop
mov
dec
push
pop
sbb
shrl
push
mov
cmpsb
cmpl
sbb
stos
jne
scas
mov
sbb
cmpsb
data16
bound
mov
push
imul
dec
repz
sbb
mov
add
sub
lea
bound
mov
jmp
je
push
xchg
jl
jmp
call
mov
sbb
sub
ret
sarb
dec
ljmp
mov
mov
mov
add
test
jl
mov
popf
and
add
add
dec
fisttpll
pop
mov
inc
aad
lods
repnz
jbe
insl
cld
mov
xor
je
leave
rol
mov
pop
es
mov
js
jmp
add
insb
pop
inc
pop
pop
and
mov
addl
nop
mov
xchg
xchg
push
dec
shr
pop
inc
pop
jo
cs
push
fsts
stc
sub
fcoms
icebp
push
das
or
mov
pop
adc
inc
add
push
add
push
pop
push
into
repz
mov
std
sbb
xor
and
or
test
add
or
cmp
and
jecxz
bswap
jne
push
sahf
into
pop
popf
ja
push
adc
pop
inc
or
je
mov
ds
sub
and
sar
mov
dec
lahf
dec
add
adc
or
insb
xchg
je
xor
push
mov
sar
subb
mov
mov
sub
cmp
dec
call
mov
mov
mov
jmp
jl
arpl
dec
imul
mov
and
mov
sti
jle
mov
testb
or
test
mov
hlt
push
sbb
cmp
jge
adc
push
in
jl
outsl
cs
jl
or
push
dec
mov
adc
jmp
pop
test
sbb
and
add
in
adc
aas
ja
outsb
dec
mov
pop
loop
fwait
int3
add
sub
in
fmull
push
nop
sub
xor
leave
cmp
add
pop
mov
jnp
pop
adc
dec
pop
sbb
sub
adc
and
xchg
inc
xchg
addb
jnp
cmp
sub
lea
lea
pop
mov
add
loopne
mov
pop
adc
push
ds
cmp
lock
roll
add
stc
cmp
imul
and
jb
pusha
insb
jno
sti
ja
add
daa
xchg
aas
ss
cmpb
sti
sbb
inc
inc
dec
sub
xchg
and
cmp
xchg
jno
in
test
sbb
mov
or
xchg
mov
cli
xor
movsl
clc
addr16
sub
jo
jge
xor
inc
repz
lods
and
jo
insb
and
test
add
cld
xor
sub
cmp
jge
mov
out
xor
sub
mov
add
loopne
out
or
and
xor
cmc
outsb
fisubs
inc
aam
cmpl
lret
inc
jmp
inc
aaa
jl
xchg
add
es
lea
push
cmp
insb
iret
addb
xchg
pop
leave
sbb
arpl
adc
test
xchg
lods
or
xchg
inc
hlt
mov
vcvtps2pd
popf
jge
shr
or
stc
call
je
pop
mov
lods
adc
je
inc
pop
js
cmp
inc
add
mov
mov
add
ror
movsl
push
jecxz
mov
fdiv
cmp
mov
pusha
sbb
sbb
add
addr16
mov
lock
xchg
pop
out
adc
mov
cmc
mov
nop
adc
rcl
push
adc
mov
lahf
and
or
imul
jl
mov
sbb
sub
cmpsl
shll
mov
icebp
nop
and
imul
popf
in
sahf
or
faddp
ds
data16
inc
mov
repz
jo
leave
cmpb
enter
sti
cwtl
scas
stc
test
add
dec
or
or
jnp
jge
lods
aad
ja
je
mov
jl
daa
movb
add
and
add
inc
xchg
mov
sahf
or
test
jmp
das
ss
mov
and
aaa
push
pushf
pop
add
dec
pop
cmp
sarl
mov
jne
pop
jmp
jp
and
inc
sub
pop
testb
jmp
pop
mov
jmp
xchg
imul
shlb
je
add
pop
jl
jae
std
loope
lock
rorb
das
fstl
or
jne
and
fs
sti
aam
adc
aaa
dec
testl
shlb
jo
jp
ret
push
xor
movsb
daa
inc
addr16
hlt
jne
rclb
add
mov
xor
shrb
mov
mov
add
pop
aam
pop
sbb
jmp
mov
mov
jge
cmpb
fnsave
dec
inc
push
movb
xor
jmp
cmp
fsubrs
lock
loopne
test
es
adc
xchg
outsl
ja
jmp
pop
adc
je
and
inc
mov
inc
add
add
or
aaa
jle
xor
lahf
and
je
cmp
push
sub
pop
sbb
and
jl
add
sbb
mov
mov
ror
pop
xchg
mov
add
enter
shrw
jmp
cs
mov
sub
dec
mov
mov
fisubl
mov
and
mov
mov
div
out
adc
fwait
negl
push
pop
push
pusha
push
lock
push
decl
js
mov
mov
add
fldenv
xor
nop
out
mov
pop
push
xor
sbb
and
arpl
or
movsb
sbb
jae
shr
sbb
inc
jg
mov
dec
add
mov
dec
jno
testb
test
push
inc
push
int
ficompl
insl
aas
ret
dec
loop
scas
aaa
data16
add
movsb
aas
push
or
mov
add
imul
cmp
or
jo
or
and
sbb
andb
jae
cmp
daa
push
sub
mov
fisttps
xlat
xor
adc
add
mov
mov
mov
popf
popa
jl
nop
jmp
cmpsb
stos
and
jge
push
cmp
repz
je
xchg
add
add
fwait
imul
shlb
xchg
jnp
adcb
inc
xchg
orl
mov
rclb
jne
sub
popa
adc
jae
jl
jne
aaa
ja
cmp
xchg
add
enter
sub
sbb
stc
sbb
push
pop
sbb
xchg
cld
push
add
or
push
sbb
test
ds
jno
adc
das
mov
or
pop
dec
addr16
or
xor
loop
or
or
jnp
push
or
cmp
cmp
adc
add
push
jo
sbb
jmp
or
js
fisttpll
pop
icebp
or
xor
mov
sbbb
xor
jb
fildl
enter
sbb
cld
push
cmp
mov
montmul
cmpsb
inc
inc
add
xchg
xor
orl
and
int
or
xor
push
call
inc
add
iret
or
xchg
xlat
fdivrs
loopne
fcomip
dec
push
jns
adc
pop
aas
xlat
xor
and
loopne
inc
inc
xchg
fucomip
push
jmp
cmp
jg
je
or
inc
je
dec
je
ljmp
xchg
or
jmp
cmpb
jne
or
and
out
call
and
jbe
outsl
mov
mov
bnd
insl
push
xchg
pop
insb
ja
or
jmp
jbe
sti
mov
push
decb
sti
cmpb
loopne
gs
adc
fs
ds
ret
aam
jge
lods
out
leave
pop
lahf
stos
push
cltd
cmp
mov
ja
jmp
fsincos
add
into
and
outsb
add
jnp
flds
adc
imul
mov
bound
pusha
loopne
or
cs
mov
outsl
pop
add
jl
push
sbb
sub
fs
mov
clc
add
mov
addr16
or
sbb
sbb
add
loopne
stos
int3
add
xchg
push
pop
das
in
int
xor
jmp
inc
jle
jmp
dec
mov
sub
jne
mov
mov
sub
test
sub
add
push
dec
sbb
arpl
arpl
in
jge
add
hlt
pop
push
xchg
sbb
adc
add
mov
cmpsl
add
in
scas
adc
scas
in
push
inc
mov
pusha
rcll
add
push
pop
inc
and
mov
push
inc
fistpl
insb
ss
in
mov
sti
mov
dec
inc
dec
jno
movb
sbb
stos
add
inc
dec
push
push
add
adc
cmpxchg8b
xor
add
or
and
aad
ds
daa
inc
pop
cmp
add
mov
dec
adc
int3
andb
decb
mov
testl
js
out
mov
inc
loopne
lock
ljmp
dec
call
mov
loop
ja
xchg
add
test
and
jp
test
or
or
aas
push
jmp
xor
xor
loope
cmp
cmpb
nop
popf
and
jecxz
dec
lock
fdivrs
pop
cmp
add
sbb
in
sti
xor
add
mov
cmp
pop
sub
ret
shrl
mov
ret
loope
jne
in
push
sar
xorl
mov
loope
jmp
pop
rorb
xchg
fs
push
sti
pop
cmpsl
pop
jge
jnp
mov
or
add
call
push
lret
mov
xchg
sbb
cmp
jnp
pop
ss
cmp
jae
mov
jmp
ret
cmp
ja
test
movsl
jne
or
sub
inc
mov
mov
call
pop
scas
inc
mov
fistps
call
xor
jmp
jmp
rorb
xor
shr
xor
add
arpl
add
mov
lock
shlb
adc
sbb
push
test
movsl
sub
jns
enter
pop
push
pop
out
negl
shl
sbb
stc
add
lret
test
je
pushf
jne
dec
dec
mov
jns
inc
enter
fcmove
mov
or
jge
dec
sbb
jbe
ret
pop
cmp
cs
jo
pusha
cmp
xor
aam
addr16
or
punpckhbw
push
sbb
add
add
les
mov
push
or
xor
jbe
add
scas
pcmpeqb
pushf
xchg
jne
jmp
add
leave
cmp
rolb
out
add
rorb
dec
sub
aas
or
jo
test
xor
test
pop
push
mov
pop
lcall
xor
jne
outsl
cmp
lahf
add
jno
fbstp
fdivs
mov
cltd
add
inc
jns
adc
add
rcrl
arpl
mov
jmp
fdivrl
fildl
lods
neg
mov
mov
outsb
sbb
jo
cmp
jbe
insb
shl
jmp
lea
shl
jmp
jnp
xchg
fwait
je
push
imul
pop
or
mov
jl
sarb
imul
mov
add
mov
adc
push
sub
xor
jmp
idivl
jp
ret
repz
cmp
or
inc
jmp
add
inc
jns
rcrl
call
push
xchg
fdivl
dec
daa
sbb
or
rorb
enter
in
jl
orl
dec
fadd
pop
rcrb
outsb
jne
mov
insb
mov
or
rcll
mov
lea
rorb
int
insl
dec
xchg
dec
das
inc
test
mov
adc
or
sub
xorb
xchg
cmc
jmp
jle
mov
mov
push
add
jmp
out
out
pop
mov
push
mov
dec
add
or
push
mov
mov
popf
cmc
adc
notl
insl
js
push
inc
push
xor
shlb
out
mov
push
adc
push
adc
insb
cs
or
cmp
in
xchg
movsl
xor
hlt
mov
xor
jne
or
mov
leave
out
jle
inc
pushf
jmp
shrb
or
pop
sbb
add
add
js
les
inc
adc
adc
mov
add
or
sub
addr16
movsl
in
mov
pop
decl
push
jl
je
sub
lock
inc
adc
dec
pop
inc
cs
addr16
ja
add
add
sarl
cmp
xchg
scas
add
jp
divl
shl
loope
push
sti
add
xor
je
push
fwait
into
jge
adc
push
cmp
adc
pop
cmp
popf
outsl
loope
sbb
pop
xor
loopne
or
ja
mov
cmp
fs
in
je
push
popl
adc
mov
test
inc
add
or
and
sbb
sbb
cmpsl
adc
data16
sti
jne
push
test
xchg
pop
push
movsb
in
mov
lret
or
and
jg
add
jns
pop
testb
jnp
movsb
adc
pop
pushf
or
fdivrl
fcoms
loop
test
adc
dec
subb
cmp
test
xor
lea
or
andl
push
pop
inc
inc
repz
pop
test
rolb
lret
jmp
xor
dec
sbb
or
push
cmp
or
pushf
mov
ss
mov
add
xor
adc
ds
movmskps
insl
sbbl
xor
cmc
jne
or
cmp
adc
outsl
push
out
pop
lret
js
or
mov
call
in
add
js
or
fwait
or
add
iret
ret
mov
mov
ret
fisttps
jne
and
stc
and
stc
sar
repz
das
cmp
mov
and
pop
push
fwait
pop
push
or
jno
jle
loopne
sbb
sub
sub
lds
dec
sbb
sub
mov
adc
dec
dec
sub
fldl
sbb
testl
nop
jl
das
add
xchg
push
add
mov
add
pop
inc
or
mov
push
cltd
mov
ljmp
xchg
das
iret
bound
push
sbb
aam
add
loope
or
test
adc
adc
call
clc
push
pushl
lds
push
pop
inc
adc
jnp
or
test
dec
movups
pop
xchg
shlb
jae
cltd
aaa
add
cmp
pop
mov
orl
test
mov
or
or
outsl
and
mov
sbb
mov
or
lock
add
sub
cmp
scas
mov
or
dec
lret
add
jae
inc
negb
xchg
push
cld
pop
movb
inc
mov
xchg
push
test
mov
adc
in
inc
fsubs
aas
adc
lcall
mov
jmp
pop
cli
mov
cmpb
add
arpl
add
and
por
sarl
add
jle
jb
push
and
mov
add
out
add
sub
sbb
cwtl
push
mov
and
lock
leave
pop
loop
mov
cmp
lods
cmp
and
mov
into
aas
add
mov
pop
mov
test
les
inc
movsb
inc
cmp
ja
lret
mov
xchg
fistpll
pusha
sub
je
or
je
push
fwait
or
fimuls
lods
jl
std
aad
add
or
jmp
inc
lsl
cltd
xor
push
popf
jge
inc
jmp
dec
jne
ja
ja
mov
or
mov
enter
enter
or
cs
fs
fstpl
jmp
or
cmp
int3
cs
jo
jno
pop
into
pop
sub
je
leave
rolb
in
pop
addl
and
sub
aad
cld
int
jge
sbb
adc
push
add
sti
pop
add
sbb
mov
or
lret
je
add
aam
in
mov
push
jle
mov
sti
mov
cmp
je
testb
inc
fdivr
ljmp
in
jmp
mov
jmp
mov
push
jp
dec
cmp
daa
or
or
cmp
test
std
dec
lock
cmc
fidivs
mov
add
jnp
or
xor
out
push
cmp
jae
enter
jnp
cmp
mov
inc
xor
jne
arpl
add
cmpsb
jne
sbb
mov
mov
adc
test
pop
and
sbb
test
add
lods
jmp
ja
inc
dec
add
cltd
daa
lret
rorb
das
jmp
jmp
fmul
jl
mov
test
sbb
sub
iret
pop
and
mov
fldl
jbe
bswap
pop
cld
mov
sar
jecxz
mov
aad
incl
cmp
jae
cmpb
xor
out
inc
jmp
popa
xorb
add
sub
mov
test
dec
and
les
dec
xor
push
sub
roll
fiaddl
adc
push
loopne
adcb
adc
orl
inc
push
mov
jae
mov
inc
jo
cmp
xor
cld
arpl
sahf
insb
cmp
aaa
dec
mov
mov
roll
int
test
sahf
lret
sub
iret
xchg
add
add
push
dec
and
xor
add
cmp
pop
pop
into
mov
inc
popa
pusha
lret
into
subb
xchg
sbb
js
movsb
fidivrs
and
aaa
mov
sbb
test
mov
in
outsb
daa
xchg
adc
cmp
sbb
xchg
jnp
mov
mov
mov
lods
dec
sub
mov
out
jns
out
dec
sbb
cmp
pop
ret
rol
bound
aam
stos
adc
pushf
xor
sbb
sub
xchg
cld
notb
push
mov
rol
sbb
adc
adc
mov
out
mov
push
jp
inc
scas
fsubrs
xor
pop
loop
fdivrs
add
ret
daa
inc
or
jmp
mov
jg
mov
orb
mov
addr16
enter
adcl
fmull
add
and
adc
shrl
mov
enter
pushf
push
mov
jne
pop
jmp
sbb
add
mov
jg
mov
movsl
jo
adc
fmuls
and
mov
js
xor
ljmp
aaa
jle
cmp
adc
mov
je
and
lea
pop
xor
enter
test
int3
imul
mov
icebp
daa
mov
loopne
call
cli
test
iret
mov
in
stos
xchg
aas
loope
psubusb
in
mov
mov
mov
rclb
incl
adc
xchg
mov
movsl
xchg
lea
add
cld
roll
add
lea
ljmp
push
add
mov
ja
mov
or
mov
cmc
inc
inc
cmp
cmp
rorb
shll
add
sarl
faddl
roll
lea
loopne
mov
pop
mov
cmpb
lds
aam
push
cmp
fdivl
push
jae
pop
lods
insl
pop
test
cmc
int
test
fimuls
inc
je
mov
lcall
out
inc
or
stos
xor
cmp
in
and
sub
mov
add
insb
xchg
sub
flds
call
je
dec
cmp
lods
das
dec
mov
lock
pop
or
push
fstps
rcrb
das
mov
mov
mov
dec
pop
pop
add
push
push
push
cmc
mov
jge
xchg
mov
movb
lea
insb
call
in
fldenv
cmc
sub
inc
mov
filds
mov
stos
rep
inc
inc
mov
xor
rcrb
sahf
in
mov
lcall
add
push
mov
ja
inc
std
cmp
push
imul
cld
aad
out
add
in
pop
test
in
mov
jmp
push
cmc
adc
xchg
add
jmp
xor
cmp
divl
jmp
andb
or
dec
sub
jb
or
sti
movl
and
loopnew
gs
pop
ja
popf
dec
fcmovnu
fistpll
jmp
xchg
mov
mov
adc
sbb
pop
std
push
ja
pop
lds
or
stc
adc
mov
adc
add
loope
arpl
jle
add
testb
mov
je
inc
inc
xor
sub
adc
cwtl
lea
jmp
andb
lahf
fimuls
or
inc
dec
adc
por
pop
xchg
dec
add
adc
loop
shrl
mov
data16
dec
loope
bound
or
add
aam
icebp
test
add
push
adc
fidivs
in
insl
mov
rolb
dec
push
push
movb
addr16
jne
mov
fs
aam
int3
xchg
out
out
inc
pusha
lock
add
scas
sub
or
pop
adc
movb
test
add
adc
add
and
mov
sbb
pop
loopne
or
inc
xchg
jnp
mov
jl
leave
inc
ja
ret
adc
xor
mov
push
dec
push
jo
lea
daa
add
les
xor
movsl
jge
xchg
xor
add
lea
mov
cwtl
imul
daa
xorb
popa
outsb
fmull
jmp
rcrb
ret
int
xor
sbb
cmp
lods
mov
stos
rorb
xor
xlat
mov
cmpsb
mov
xchg
cmp
mov
adc
or
sbb
js
adc
and
mov
je
es
bswap
add
or
or
xchg
mov
es
cmp
cltd
int
or
arpl
mov
or
cmpl
jae
adc
pusha
mov
mov
jmp
inc
adc
out
pop
jmp
sbb
jmp
mov
mov
jle
inc
jp
ds
orw
mov
jmp
ljmp
cmp
popf
adc
pop
incl
andl
sbb
pop
mov
pop
push
and
sarl
fmull
jg
inc
stos
mov
mov
shlb
add
lods
mov
mov
mov
jae
cmp
lret
push
sub
loop
repz
test
or
jg
rcll
lret
lea
sub
or
or
dec
int
dec
jne
mov
mov
ljmp
xor
cmp
repnz
dec
cmp
and
repz
aas
and
popl
push
lods
leave
or
adc
rorl
adc
sbb
jmp
hlt
push
and
mov
add
repnz
int
pop
aas
pop
pop
pop
scas
fnstenv
fistl
je
xor
call
add
adc
lea
pop
pop
lock
cmp
sub
jne
sbb
add
cld
inc
mov
sbb
and
mov
xchg
outsb
sbb
loopne
jecxz
push
loopne
sbb
inc
aaa
ds
out
inc
or
jbe
inc
sbb
ja
imul
inc
jmp
sbb
mov
mov
mov
xor
ret
je
cmp
je
jbe
rolb
xchg
adc
clc
xchg
call
mov
jo
adc
mov
jno
push
cmpb
xchg
push
cmp
mov
pop
inc
cmpb
adc
push
push
pop
sbb
adc
fisttps
push
mov
outsl
jne
fcompl
rcrl
fs
sbb
and
testl
pop
mov
jae
cmp
sbb
add
orl
dec
and
enter
test
cmp
mov
outsb
dec
dec
xchg
imul
cwtl
push
orb
cmp
adc
lds
push
push
and
rcrl
or
jbe
aaa
std
clc
das
mov
inc
mov
inc
cmp
rclb
add
add
xor
adc
aad
into
sbb
neg
adc
inc
cmp
pop
or
xorl
stc
xor
and
adc
jne
lea
jp
add
xchg
inc
mov
popf
imul
inc
faddl
mov
xor
jns
outsb
xor
or
pop
unpcklps
inc
adc
sub
inc
or
rol
mov
jmp
mov
sbb
sbb
xchg
ret
shr
mov
dec
xor
shrl
push
inc
adc
push
pop
inc
arpl
add
int3
rorl
stc
adc
push
jnp
cs
sbb
mov
and
push
aas
aaa
bndstx
xor
cmpb
pop
sbb
mov
cmpl
add
add
addb
pop
pop
lret
mov
inc
xor
inc
dec
sub
xchg
jne
popa
ficoms
jecxz
ljmp
js
test
sbb
fstpt
ret
push
out
mov
mov
inc
inc
adc
jne
or
sbb
sbb
scas
sub
xor
call
jmp
sub
addr16
ret
inc
pushf
push
inc
outsl
pop
dec
cmp
pop
lods
add
sub
jmp
or
cmp
jne,pn
aad
add
mov
div
sub
inc
aad
popf
inc
imul
adc
loope
jg
or
test
inc
lock
in
inc
add
or
jns
test
adc
and
jecxz
mov
sbb
testl
movb
mov
sbb
ret
scas
add
popaw
lcall
inc
es
jge
adc
push
xor
jl
jle
lea
out
lock
jge
mov
mov
ds
pop
lea
andb
cs
or
punpckhdq
stc
addr16
xchg
jl
mov
adc
sub
movsb
pop
add
mov
fsubrl
inc
inc
lea
loop
mov
adc
iret
std
fildl
mov
pop
mov
inc
inc
add
pop
cmp
or
cmp
aam
fdivr
lea
jne
test
add
sub
mov
mov
pop
popf
ret
dec
add
mov
xor
cmp
cmpsb
insl
or
push
int
loopne
ds
inc
pop
mov
lock
mov
adc
inc
or
jl
ljmp
sub
dec
jno
cmp
incl
test
xor
xor
add
sarl
and
and
sbb
add
xchg
add
inc
jae
or
pop
jnp
shlb
or
pop
sti
decb
push
push
lea
call
pop
xorb
xor
dec
cmp
cltd
mov
cmp
mov
insb
nopl
mov
cmp
jnp
or
or
mov
jmp
mov
lods
mov
ljmp
and
pop
sub
arpl
mov
mov
push
pop
sbb
dec
jge
nop
adc
dec
pop
cmp
and
scas
add
pop
jecxz
push
insb
in
push
add
pop
jecxz
sub
and
ret
movsb
in
mov
mov
push
mov
negl
inc
or
popa
cmp
cmovge
fnstenv
mov
xchg
pop
jecxz
cmp
pop
sbb
pusha
adc
test
les
and
xchg
sbb
mov
std
dec
fstpt
sub
push
adc
push
xor
add
push
or
sbb
rolb
and
outsb
or
cmp
mov
cmpsb
sub
push
sbb
pop
mov
jmp
lea
je,pn
or
pop
adc
or
fsubs
dec
aaa
dec
pop
push
test
or
xor
shlb
lods
notl
or
push
sub
xor
or
test
sub
icebp
notl
cmp
rcrl
aas
lock
xchg
push
mov
mov
sub
or
or
add
rcrb
aad
add
mov
gs
jno
mov
ds
sub
mov
faddp
ss
sbb
jg
or
cltd
or
jmp
or
jmp
or
aas
inc
cmp
cmp
jne
mov
fldl
cwtl
insl
pop
pop
test
pop
mov
xor
add
push
hlt
jp
ss
adc
add
add
or
and
ret
sbb
lret
mov
in
mov
cmp
je
out
icebp
mov
test
or
or
or
sub
push
or
inc
add
rclb
cmc
or
pop
cmp
dec
adc
xchg
xchg
out
cmp
adc
or
shl
not
add
clc
test
jne
test
filds
sub
sbb
add
jl
fucomp
ficoms
jbe
nop
es
fwait
cltd
sbb
adc
cmp
add
mov
push
mov
stc
xorl
js
ss
add
stos
lods
sub
mov
out
lds
sub
faddp
out
pop
ss
add
xchg
es
addr16
test
mov
lods
cmp
pop
loop
adc
lea
mov
cmp
cmp
sbb
loop
jo
lret
and
test
pop
xchg
or
lock
lret
cmp
mov
jnp
mov
cmc
iret
add
push
sbb
mov
xor
or
lds
jns
pushf
jl
dec
popa
loopne
dec
or
repnz
movsl
dec
add
lock
push
jge
pop
sub
push
leave
add
loop
scas
cmpb
sub
not
icebp
insl
subb
and
or
pop
cmp
lret
aad
enter
popf
fidivl
xchg
das
inc
aas
rolb
imull
pop
jnp
pop
pop
lock
jl
orb
add
loope
outsb
bound
xchg
lock
xor
mov
xchg
mov
xchg
testl
dec
push
or
add
sub
jecxz
cmpb
aas
cmp
sti
add
and
mov
mov
nop
adc
and
mov
lea
sub
pushl
dec
loopne
or
fdivrs
xor
mov
or
jmp
cmp
jg
sub
sbb
adc
dec
sti
push
xor
cmpsb
mov
lcall
cmp
jl
movsl
cmp
mov
mov
sub
aaa
inc
push
lcall
andb
inc
add
inc
loopne
icebp
or
jg
daa
cmp
mov
mov
add
or
or
incl
ret
xchg
aad
sub
frstor
mov
fistps
adc
scas
push
out
xor
sub
adc
dec
cwtl
push
cmp
or
mov
adc
lahf
jle
xchg
xor
lahf
push
pop
or
dec
or
jle
add
xor
pop
rdpmc
fldt
pop
or
jecxz
rolb
pop
mov
inc
xorl
loopne
cli
fists
jl
cmpb
jl
mov
enter
mov
mov
xor
incl
jmp
push
mov
push
mov
push
and
cmp
sub
add
pop
adc
adc
cld
movsl
movsl
cmp
incb
cwtl
sub
loop
mov
or
nop
or
mov
mov
and
mov
lahf
inc
jg
mov
mov
sub
shl
iret
inc
sbb
rol
sub
push
and
rcrb
setl
loope
cld
inc
je
pop
dec
mov
not
and
jg
and
add
hlt
cli
adc
rcrl
inc
cmpb
inc
jmp
dec
add
jmp
lods
adc
inc
and
or
popl
adc
leave
mov
shr
or
scas
xchg
aam
lea
mov
sub
fbld
mov
cltd
dec
or
add
inc
and
int
push
push
adc
add
pop
mov
and
push
push
dec
adc
mov
pop
dec
aam
subl
movsb
jo
out
ret
or
fwait
shrb
add
sbb
push
nop
pop
push
jle
test
or
adc
addr16
or
push
add
xchg
and
sahf
xor
aam
adcl
cmc
lret
imul
inc
popa
xchg
mov
inc
adc
flds
lea
xor
add
lods
test
dec
mov
push
rclb
push
pop
or
mov
and
add
mov
mov
add
adcb
pop
adc
push
cmp
jge
mov
adc
stos
pop
pop
mov
pop
mov
xor
mov
rolb
aam
mov
xor
out
fcomps
mov
cmp
ret
push
out
push
and
or
add
jns
loope
mov
out
aam
cld
inc
das
mov
in
mov
push
pop
mov
arpl
cmpsl
add
inc
fldl
xor
loop
cmp
lods
arpl
xchg
dec
aad
jb
cmpsl
cmpsl
daa
inc
xor
jo
lcall
dec
and
add
push
inc
dec
loopne
test
sub
in
ret
mov
xchg
sbb
add
push
shlb
mov
sbb
addr16
test
push
xor
jecxz
nop
mov
mov
jne
and
xchg
add
adc
test
sbb
dec
xchg
pop
sbb
add
sbb
in
ror
adc
mov
arpl
lea
test
jno
aaa
fdivl
mov
loope
jmp
cwtl
xor
aaa
and
mov
loopne
mov
sbb
add
scas
test
out
sbb
int3
mov
mov
lcall
sbb
rcrl
insl
pop
mov
cmp
cmp
jmp
lods
jg
xchg
aaa
adc
fst
add
lret
pusha
ret
loop
rorb
adc
nop
push
scas
or
add
mov
jl
jbe
dec
in
pop
jne
push
dec
int3
add
jb
cmp
jne
std
test
jnp
sarl
pop
js
fstpt
lret
sbb
lea
push
and
rcll
test
aas
cmp
push
stc
inc
jae
or
jae
shld
shl
pop
rcr
and
shl
inc
bound
dec
xchg
push
in
icebp
xor
test
outsl
adc
pop
jo,pn
cli
aad
decl
or
cmpsl
test
push
inc
sahf
jne
movsb
jecxz
das
mov
leave
and
ret
and
add
out
cmpsb
nop
jle
inc
mov
push
loope
jbe
lahf
pop
push
sbb
inc
out
rol
push
mov
in
or
in
push
lock
jge
mov
sbb
sahf
jo
test
stos
data16
pop
mov
or
inc
or
jns
and
psubq
xor
sub
scas
add
adc
mov
cmp
daa
inc
push
pop
je
mov
fisttps
lds
rorl
mov
cli
jmp
sub
mov
xor
outsb
push
mov
push
push
xor
and
cmp
sbb
cmp
mov
dec
adc
mov
nop
mov
je
jp
xor
lods
add
push
xchg
sub
inc
insb
call
inc
test
xchg
xor
aaa
dec
adc
pop
mov
sbb
pop
mov
cmp
addb
dec
lock
xchg
les
add
xor
xor
lret
shl
xchg
mov
pop
repz
pop
cmp
jg
inc
cmp
out
popa
cmp
inc
pop
xchg
scas
lea
push
repz
ret
dec
out
lock
dec
lock
xchg
je
jno
es
and
xlat
add
dec
shll
mov
mov
sub
cmp
psubusb
jno
fstpl
pop
int3
int
push
pop
push
sbb
in
xor
push
pop
pop
jne
adc
repnz
xchg
xor
push
push
push
jmp
mov
sub
and
popf
cmpsl
cltd
or
add
xor
insl
imul
and
mov
nop
ja
jne
adc
js
add
or
or
mov
fwait
pushf
mov
inc
cmp
push
jmp
out
or
popf
icebp
mov
mulb
push
sti
and
push
xchg
fdivs
mov
add
cmp
jge
cmp
jl
mov
insb
ljmp
jge
pop
adc
jnp
out
jl
and
pop
push
xchg
out
ret
sub
xchg
push
ds
es
lret
rdpmc
leave
testl
sarl
sahf
rcrb
add
lods
incb
test
andl
sti
int3
mov
mov
hlt
sarl
inc
shrl
rolb
jg
sub
inc
call
clc
das
stc
push
add
lea
pop
das
iret
cltd
notl
push
sbb
push
pop
sub
add
sti
pop
rolb
stc
jmp
sbb
leave
add
fdivrp
or
mov
rolb
clc
cmp
jle
push
jmp
and
mov
or
sub
ds
adc
add
sub
fisubrs
jnp
sub
outsl
shrl
adc
mov
cmc
xchg
int3
push
mov
jmp
hlt
dec
lret
add
daa
loop
jmp
mov
pandn
mov
orb
mov
xchg
mov
adc
add
lea
xor
test
jns
icebp
or
sub
push
mov
push
push
pop
rcrb
outsl
and
orb
inc
inc
lea
xor
or
test
add
adc
dec
adc
jmp
shl
mov
mov
push
cltd
mov
push
push
jae
mov
sahf
mov
pop
xchg
jne
stos
mov
dec
std
dec
jne
gs
lods
js
pop
jle
cmc
jmp
testb
pop
mov
cmp
inc
and
in
dec
or
push
add
pusha
xchg
mov
xor
stos
sub
repz
xchg
cmp
mov
push
push
push
sbbl
push
jecxz
xor
repz
les
lods
jmp
stc
testb
add
roll
jge
imul
shl
pop
jge
fs
rcrl
pop
adc
push
movsl
adc
push
cmp
lods
xchg
pop
inc
imul
mov
call
icebp
jg
movb
jmp
andb
in
mov
cli
out
test
mov
ret
push
push
incl
jne
pop
and
add
mov
push
jmp
sahf
dec
xchg
outsl
mov
dec
adc
inc
jmp
aaa
add
addb
pop
or
je
xor
mov
outsl
jmp
popl
xchg
or
fistpl
xchg
add
pop
sbb
jge
lahf
test
mov
je
inc
sub
iret
dec
movsl
pop
mov
lea
clc
aaa
imul
cs
jmp
push
add
sbb
push
int3
push
int
rcll
pop
pushf
mov
mov
test
je
mov
or
sub
adc
or
jbe
testb
decl
js
cs
pop
or
mov
add
push
rcrl
fwait
mov
es
sbb
ds
les
cmp
and
jecxz
hlt
xchg
push
pushf
dec
test
mov
xor
lahf
and
lahf
push
orb
jae
dec
incl
or
sbb
fstpl
dec
repz
or
pop
sub
in
mov
repz
js
das
mov
add
js
je
or
add
call
dec
push
xchg
jo
loop
dec
jmp
insl
adc
or
cli
dec
adc
adc
mov
adc
dec
imul
jecxz
adc
lahf
cltd
inc
xor
cli
sbb
adc
xchg
int3
repz
dec
xor
cwtl
dec
xchg
and
add
shl
repz
sub
mov
or
xchg
sahf
push
test
xchg
push
hlt
add
jnp
imul
punpcklwd
jne
insb
lds
add
jo
inc
sbb
je
xchg
fcompl
scas
adc
mov
mov
jo
pop
and
lock
inc
je
inc
js
mov
sub
shr
icebp
mov
mov
repz
mov
lcall
adc
pop
mov
or
and
into
jae
jmp
adc
or
xchg
push
repz
pop
jbe
pop
add
xor
add
stos
sbb
inc
or
das
test
dec
lcall
pusha
add
add
or
pop
adc
aas
shr
or
mov
add
fwait
xlat
mov
ljmp
cltd
inc
pop
push
fwait
pop
repnz
out
jmp
or
out
roll
or
push
aas
mov
push
popa
mov
test
inc
adc
inc
inc
xchg
notl
mov
add
push
repz
movsl
movsl
push
dec
mov
out
pusha
sub
pop
arpl
mov
inc
dec
je
inc
mov
bswap
dec
push
mov
pop
cmp
faddp
invd
mov
rolb
out
ja
xor
movb
pushl
outsl
add
std
add
sarl
lret
out
dec
call
jmp
inc
cld
pop
data16
add
add
pop
push
inc
movsb
and
aam
cli
cmp
pop
loopne
imul
push
cmpsb
scas
movsb
inc
add
and
adc
and
or
rcl
dec
stc
inc
jmp
jg
adc
dec
ljmp
add
inc
cmc
dec
aam
aad
jl
cmp
push
iret
dec
and
movsb
pop
cmp
dec
jge
outsb
sub
cmp
xor
pop
aaa
adc
dec
fnstcw
xchg
xchg
pop
adc
jnp
jl
mov
xchg
xchg
fbstp
sub
push
inc
setno
jle
arpl
gs
dec
push
btc
cltd
orl
pop
add
pop
push
lcall
retw
fdivrp
cmp
or
mov
movsl
std
jmp
xchg
loopne
adc
and
arpl
sbb
test
out
adc
pusha
push
jmp
adc
xor
mov
mov
in
or
in
ss
adc
inc
or
pop
repz
push
cmpsl
or
add
mov
mov
sub
int
lea
push
rorb
je
dec
adc
test
gs
cwtl
add
pop
mov
test
iret
repnz
push
or
pop
dec
adc
insb
mov
inc
jmp
loopne
sub
je
mov
pop
pop
pop
pop
dec
pop
sub
dec
jmp
test
rolb
ljmp
adc
je
rolb
jg
mov
mov
lret
mov
rorb
pop
jo
dec
shrb
mov
ljmp
mov
jbe
cmpb
jl
incb
rcrb
push
test
dec
inc
dec
adc
xchg
sub
repnz
insb
lock
lods
shrb
pop
js
jge
add
loopne
xchg
in
sub
sbb
sub
cmp
jmp
xor
subb
push
adc
aam
rolb
pusha
xor
mov
and
xor
dec
cmp
out
insl
daa
or
ljmp
jmp
mov
lret
jno
mov
rolb
nop
sbbl
cvtps2pi
scas
jne,pt
sti
or
pop
mov
mov
add
xlat
inc
or
adc
and
mov
mov
pop
mov
lcall
push
pop
mov
pop
shrl
jnp
push
xor
add
sub
mov
add
outsl
imul
inc
int3
pop
in
out
imul
cs
in
out
sti
out
aas
popf
cmp
xor
movsl
inc
add
and
iret
adc
push
sti
lahf
les
adc
xor
ja
mov
xor
test
data16
push
data16
sub
nop
pop
in
maskmovq
repnz
daa
ds
cmp
inc
push
and
sub
neg
dec
sbbb
cs
xchg
jo
mov
and
jno
jnp
insl
into
add
and
orl
iret
pop
lret
inc
jmp
dec
mov
test
dec
adc
push
cli
imul
mov
lea
rorl
repnz
jae
loopne
dec
xchg
lock
cmpl
lods
jle
in
xor
scas
outsl
sbb
xor
adc
mov
cmp
and
jp
loope
call
mov
adc
sbb
clc
cli
xlat
sbb
test
lea
sub
sbb
jne
mov
mov
fidivs
jle
cmp
call
repz
cmp
mov
repz
loope
sbb
ja
movsl
movsl
dec
out
shlb
stos
xchg
adc
mov
mov
mov
jg
mov
sbb
xor
out
mov
jne
popf
xorb
stc
xor
lea
jl
pop
ucomiss
cmp
dec
jmp
or
call
cli
scas
sbb
sub
sub
mov
andb
and
xor
inc
repz
lods
pop
hlt
flds
add
clc
push
icebp
xor
mov
sbb
sbb
inc
pop
mov
gs
xchg
cmp
sub
xor
adc
adc
xor
outsl
mov
addb
cmp
sbb
sbb
dec
sbb
das
aaa
jl
fcoml
sbb
lock
or
cmpsl
or
roll
or
test
cmp
pop
and
and
and
mov
xor
or
sbb
pop
mov
sub
insb
or
adc
std
cmp
cs
push
add
idivl
mov
mov
xchg
push
imul
sbb
mov
pop
out
jnp
fnsave
or
mov
and
mov
movsb
mov
addr16
push
add
dec
loop
hlt
imul
push
or
inc
les
mov
push
mov
mov
ja
pop
les
or
ja
push
push
cs
hlt
cs
shll
lds
scas
lret
cmp
leave
adc
push
rorb
and
hlt
inc
xchg
sbb
mov
xchg
adc
or
mov
cmc
mov
daa
pop
aad
clc
mov
inc
jae
out
mov
addr16
mov
aaa
adc
pop
inc
mov
xor
lock
and
outsb
or
popf
nop
jns
adc
mov
jnp
or
int
sbb
lods
adc
push
cmp
adc
dec
mov
cmc
fisttps
or
pop
and
sets
cmpsl
cmpsb
xor
or
push
dec
rcl
lea
repnz
or
add
rorb
sbb
rolb
dec
testb
inc
das
and
jne
adc
mov
jmp
and
or
sub
rolb
outsl
mov
xor
in
lock
shl
shlb
add
mov
pop
pop
sbb
loope
or
sbb
xlat
cmp
jne
sbb
fmuls
add
inc
jge
and
push
lcall
pop
out
add
mov
push
and
fwait
and
jp
lahf
test
jmp
xchg
test
mov
mov
add
in
inc
or
clc
and
and
and
out
cmp
fstpt
push
jg
lods
cli
test
ds
std
mov
aas
ja
cmp
inc
cmp
push
mov
jecxz
in
push
jno
cmp
jne
mov
push
xchg
scas
and
cmpsl
out
in
push
push
cmp
push
cmp
adc
jns
fidivrs
push
dec
inc
jle
imul
cs
or
stos
and
shr
dec
or
int3
adc
inc
stc
pop
fcoml
jnp
pop
adc
xor
inc
jecxz
sbb
iret
test
mov
or
mov
insl
hlt
add
dec
call
adc
jle
or
jg
andl
sbb
repnz
and
mov
or
loop
das
loop
in
cmp
gs
movswl
or
rcr
add
fdivrs
add
in
adcl
dec
push
aaa
sbb
or
lahf
mov
inc
cmp
sbb
inc
fidivs
ficomps
xlat
andl
adc
sbb
sbb
pusha
lods
add
or
push
xchg
por
loop
pusha
loope
xor
jae
xchg
fimuls
mov
pxor
xchg
divl
add
in
sbb
pop
adc
jmp
lods
xchg
sbb
jecxz
add
xor
push
mov
push
sarl
je
jge
or
pop
xor
nop
mov
popf
call
mov
inc
inc
jg
and
ret
push
ja
and
loope
addb
daa
filds
sti
jg
lea
jb
lea
movsl
add
notb
or
sarb
jne
not
popa
pop
xor
mov
push
inc
imul
jg
mov
imul
popa
or
out
loopnew
pop
or
fadd
jp
sbb
or
ficoml
dec
cmp
sub
adc
sbb
das
cmp
fsts
repnz
rcr
mov
nop
xor
push
jne
insl
adcb
mov
dec
pop
lea
roll
ds
aas
aam
jne
inc
cmp
add
test
mov
clc
push
and
or
and
add
sbb
pop
or
push
add
xor
pop
jne
or
ret
lcall
pop
rcrb
xchg
mov
cmp
cmp
inc
push
lahf
test
sub
cmpsl
jle
push
les
add
jmp
sub
mov
sbb
xchg
mov
sbb
rolb
test
mov
popf
add
test
or
xor
movsb
xor
sub
pop
arpl
movsb
mov
jg
cmpsb
xchg
and
roll
jb
cmp
lret
lret
and
adc
loope
adc
jb
cmp
jbe
inc
push
out
int3
push
sahf
xor
movsl
popf
mov
sbb
jbe
imulb
cld
mov
fst
pop
add
push
loope
pop
jp
mov
cld
xor
push
and
cmp
add
ja
movsl
xchg
xchg
push
mov
mov
or
or
jecxz
dec
pop
movzwl
repnz
mov
sbb
and
cld
mov
jmp
shl
ss
mov
add
push
sub
and
and
fnstsw
adc
mov
dec
add
add
or
clc
sbb
dec
or
sbb
sub
ret
dec
ret
mov
add
push
push
jecxz
nop
push
shlb
loope
xor
push
push
add
hlt
xchg
test
fcomps
pop
aam
push
or
rcll
cld
jne
ret
sbb
cmp
orb
aad
add
mov
or
stos
rcr
sbb
fisttps
xor
fadd
sub
dec
xchg
cmp
out
psllw
jl
cmpl
jno,pt
pushl
lea
scas
mov
dec
inc
das
push
pop
and
sub
enter
or
cmp
xor
mov
jnp
jp
insl
mov
inc
dec
mov
adc
sbb
lock
mov
fs
add
or
adc
outsb
mov
inc
out
or
aam
push
push
in
pop
sub
pop
xchg
or
inc
inc
neg
sbb
not
and
xlat
jno
xor
jae
frstor
inc
mov
add
mov
dec
movsb
adc
jbe
add
add
mov
scas
sub
xlat
int
add
pusha
push
and
pop
cmc
subl
sbb
mov
lea
xchg
les
or
adc
invd
adc
mov
dec
mov
add
push
or
pop
sbb
aam
push
aas
in
jmp
sbb
pop
and
addb
xlat
cs
data16
fs
sbb
rorb
ret
jnp
jmp
rcr
push
sarb
push
adc
jmp
mov
test
es
sub
test
mov
pop
test
inc
or
dec
xor
push
pop
adc
dec
mov
add
xor
jle
xor
mov
pop
or
jle
push
cmp
cs
je
cli
test
cwtl
fucomip
filds
dec
adc
mov
mov
xor
imul
dec
lock
mov
repnz
adc
add
xor
pushf
mov
sbb
xor
push
jl
xchg
roll
inc
adc
leave
push
sub
mov
in
dec
rorl
or
sbb
sahf
ror
frstor
movsl
pop
dec
or
pop
test
fiaddl
bound
shll
pop
loopne
jno
add
lods
mov
or
dec
scas
lret
mov
add
ds
mov
rorb
mov
mov
out
pop
mov
pusha
cmpb
cmp
cmp
shll
call
add
xchg
stos
in
add
inc
cmpb
and
outsl
and
clc
pusha
add
jmp
add
or
and
sti
mov
pushl
insl
mov
jb
sub
idivb
inc
dec
jns
aaa
out
inc
in
pop
sti
je
xor
pusha
dec
and
xor
jmp
adc
sbb
cwtl
and
add
shll
ret
mov
inc
loopne
cmp
push
or
add
add
push
adc
mov
aad
loopne
aam
push
ret
les
call
jle
xor
lods
inc
sbb
xor
add
sbb
or
push
xchg
ficomps
or
enter
jle
adc
in
movsl
jge
mov
fists
aas
loopne
mov
test
mov
shlb
enter
lock
inc
add
add
rorb
add
nop
clc
add
out
aas
inc
inc
push
and
and
push
push
das
xor
xor
je
and
lret
jne
push
popa
je
outsl
outsb
cmp
dec
outsl
sbb
jbe
push
pop
add
jno
mov
push
add
pusha
cmp
cmc
aas
pop
xchg
xor
ja
popa
decl
out
mov
les
hlt
push
xor
xchg
fs
xor
fdivrl
jmp
aad
mov
rclb
mov
sub
mov
sbb
dec
jno
mov
test
ficompl
jmp
mov
hlt
movl
imul
jmp
in
leave
mov
add
insb
push
arpl
psubd
or
outsb
cmp
imul
pusha
aad
jno
mov
inc
aam
dec
std
test
movsl
cli
test
xor
leave
mov
lods
jecxz
fdivs
jne
filds
or
shrl
cmp
ficoms
push
call
enter
mov
and
mov
cltd
xchg
mov
mov
or
decl
and
or
adc
stos
sbb
data16
inc
fdivl
jno
add
rcrb
mov
mov
movsl
in
lahf
xor
mov
js
stc
add
mov
or
mov
cmp
fs
add
hlt
push
imul
insb
sbb
xor
jmp
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
mov
mov
cld
fistps
ficoml
gs
aam
pop
popa
mov
into
jg
cmp
mov
inc
movsl
fisttps
xchg
fadd
shll
jmp
fldcw
inc
mov
sarb
add
in
add
pop
dec
or
cmp
add
incl
daa
adc
or
and
test
or
mov
popa
into
push
stc
ficomps
dec
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
cmc
mov
lcall
mov
cmp
ljmp
incl
push
fdivl
or
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
add
decl
mov
pop
jge
xchg
shlb
add
inc
push
imul
xorb
decl
push
imul
aam
loopne
pop
jp
adc
dec
jmp
stc
stc
out
mov
pop
aad
mov
call
xchg
shll
inc
fdivrs
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
idiv
decl
ss
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
andl
call
outsl
and
xchg
ja
int3
add
mov
das
es
lds
or
lcall
sub
mov
cmpsl
call
ret
shlb
sbb
ret
es
pushf
jmp
insl
add
ss
jmp
addr16
jb
push
add
adc
mov
ljmp
mov
cmp
mov
fwait
mov
xchg
or
out
fdivrl
fisttpl
aam
roll
clc
pushl
ficompl
int
mov
mul
ja
outsl
ja
mov
out
sti
incb
cmp
pop
or
sar
iret
lahf
sahf
gs
clc
sar
imul
push
js
or
call
or
dec
ret
cmp
cmpsl
notl
pusha
rorb
imul
push
scas
faddl
lcall
fldenv
filds
cmp
aaa
push
scas
mov
fidivrs
mov
jmp
mov
mov
lret
mov
cmpsb
mov
sarb
ljmp
push
ficoms
fldenv
jp,pn
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
filds
sub
dec
mov
or
out
aam
push
pop
pop
inc
dec
dec
inc
inc
dec
pop
dec
inc
inc
push
pop
push
inc
dec
inc
inc
push
push
repnz
dec
push
dec
push
push
inc
push
push
hlt
aaa
in
mov
jns
push
xor
add
gs
push
js
mov
insl
outsl
fs
push
fcmovne
fimuls
arpl
jae
lea
cmp
ds
fdivrp
frstor
push
insb
outsl
outsl
jb
imul
ja
outsl
xor
jno
subb
xor
frstor
nopl
dec
addr16
mov
jbe
insb
outsl
xor
clc
mov
add
add
jle
push
inc
pop
jmp
adc
inc
dec
jae
jb
or
or
inc
shll
pop
sbb
repz
pop
add
push
dec
jmp
sub
xor
lret
xchg
pusha
cli
pusha
test
push
jbe
imul
push
dec
cmpsb
fs
fs
inc
mov
adc
pop
popf
pushf
in
leave
cs
inc
xor
lcall
push
add
insb
add
aam
decl
push
add
add
add
test
cmp
pop
or
aaa
dec
push
push
pop
push
and
add
pusha
push
add
pop
lock
xor
sbb
sub
in
addr16
lock
jne
add
out
outsb
jne
insb
adc
pop
dec
xchg
dec
push
push
incl
or
xchg
je
insl
and
jb
out
sti
adc
sbb
push
dec
dec
inc
sbb
add
inc
and
xor
adc
add
out
sub
insb
je
jnp
icebp
ds
insb
imul
jg
js
dec
aaa
outsb
stos
jnp
jne
push
jae
adc
out
shll
jno
xlat
dec
or
icebp
or
dec
jae
fs
fstl
jbe
adc
addr16
arpl
mov
call
push
mov
adc
push
icebp
mov
add
mov
out
mov
fsts
outsl
jo
mov
add
ja
out
push
cmp
inc
xchg
xor
inc
aaa
insl
jge
jmp
jb
sbb
fists
insb
outsl
arpl
jo
sbb
add
inc
inc
jb
add
addr16
insl
inc
xchg
bound
xchg
insl
insl
pop
xor
lahf
int3
hlt
or
and
mov
adc
push
cmp
addr16
insb
scas
xor
xor
outsb
addr16
in
sbb
jne
dec
fs
cld
push
out
jo
pop
shll
push
imul
inc
sub
and
dec
imul
in
dec
or
inc
sbb
and
in
cs
add
cmpl
imul
sub
adc
dec
cmp
pop
test
or
inc
jb
push
inc
mov
dec
xchg
jecxz
clc
shll
or
dec
add
gs
mov
dec
outsl
jbe
aas
inc
pop
pop
inc
gs
push
rorl
inc
lods
jbe
add
jne
daa
pop
push
shll
les
inc
dec
sub
addr16
outsl
js
and
cmp
push
dec
inc
dec
add
dec
dec
inc
add
adc
repnz
mov
ret
sub
outsl
xor
push
ds
pop
sbb
push
iret
in
cwtl
in
outsl
mov
fmul
notb
add
push
mov
es
leave
inc
push
popa
jbe
jp
fcomps
sub
add
int
loop
lret
cs
lods
js
jo
inc
cmp
cmp
mov
mov
add
pop
add
dec
sti
cwtl
xor
lock
int
mov
or
or
xor
push
add
or
fisttps
xchg
dec
lcall
adc
popf
data16
add
mov
jnp
push
add
das
or
daa
push
das
mov
mov
pop
push
jbe
leave
fiadds
lret
pop
adc
ss
push
inc
test
inc
lock
push
aaa
ret
pop
inc
aas
cmp
xlat
mov
fdivr
clc
lds
sub
sub
into
aas
aas
sbb
sbbb
sub
aas
push
fbld
imul
in
push
aaa
mov
aaa
add
aaa
mov
push
push
data16
jb
dec
mov
cmp
mov
pusha
dec
sbb
movsb
mov
mov
jl
shll
nop
loopne
aaa
mov
pop
add
nop
pop
lock
sbb
loopne
adc
rolb
jno
jno
xchg
andb
pop
clc
mov
fisubrl
popf
mov
inc
add
mov
jl
lock
jg
call
inc
jb
push
enter
and
adc
add
and
push
push
dec
push
dec
and
push
dec
inc
push
inc
dec
and
dec
inc
dec
dec
add
add
jae
push
pop
rcl
imul
jne
sbb
dec
dec
inc
xor
ja
push
outsl
xor
dec
dec
and
nop
xchg
and
pop
add
loopne
or
stc
femms
jns
addb
inc
inc
inc
lods
jge
insl
inc
or
inc
inc
inc
add
add
mov
aas
clc
testb
mov
dec
dec
dec
dec
dec
dec
push
push
push
push
push
incl
addps
popa
bound
gs
imul
jo
jb
je
std
pop
cld
jbe
js
jp
xchg
xor
sub
cmp
insb
push
adc
shr
int3
ss
call
mov
call
push
call
jl
enter
xchg
pop
call
push
cwtl
fistl
decb
jbe
mov
mov
xor
fucomi
mov
push
cmp
dec
cmp
les
addl
and
addl
add
inc
cmp
addl
call
add
push
jnp
xor
pushl
icebp
lcall
out
mov
lds
add
add
repz
icebp
aas
and
popl
pop
popa
ret
pusha
mov
inc
std
adc
aas
jg
add
pop
mov
or
clc
mov
cmp
imul
and
push
add
testb
js
add
or
inc
sbb
pop
insl
push
inc
pushf
add
hlt
cltd
fisttps
inc
lods
andl
ljmp
sbb
jecxz
dec
mov
add
xor
sub
lods
jg
decl
or
and
inc
jns
fidivs
inc
and
mov
adc
push
call
push
cld
sbb
push
stos
mov
call
mov
jg
addr16
cs
lods
test
lret
and
and
jns
mov
sbb
inc
or
pop
fs
push
das
daa
js
pop
jo
lods
mov
jmp
jg
inc
xor
jl
push
pusha
push
jmp
push
xor
dec
call
out
out
sub
std
lds
pusha
testb
push
add
pop
or
xor
fildll
inc
outsb
jmp
nop
or
and
pop
lahf
stc
jmp
je
je
and
and
iret
in
fidivl
adc
insb
sub
push
adc
imulb
sahf
incl
pop
cmp
hlt
jg
scas
inc
shr
pop
decl
in
mov
mov
push
jecxz
js
je
inc
shl
push
push
push
mov
xor
rorl
mov
dec
aad
xchg
xchg
subl
stos
inc
mov
pop
mov
pop
sub
sub
add
and
jo
outsl
imul
push
xchg
cs
xor
xor
cmp
in
mov
mov
xor
add
fs
out
cmc
scas
cmpl
and
jle
cld
ljmp
push
xor
xor
je
arpl
or
inc
pop
mov
data16
gs
push
inc
std
xor
incb
scas
jb
jae
gs
pushf
xorl
fidivl
and
adc
add
xor
addb
inc
push
pop
and
inc
cmp
jmp
pop
jae
push
xor
addr16
dec
push
push
mov
jo
lock
arpl
dec
cmp
add
lfs
sub
and
sub
or
loope
and
add
dec
dec
push
andl
popa
out
or
add
xlat
rol
pop
mov
adc
mov
inc
arpl
sbb
loopne
jns
xor
inc
pop
dec
in
sbb
inc
inc
outsb
push
pop
push
inc
or
and
das
and
test
jne
jb
iret
lock
outsl
cmp
jns
push
pop
xor
lock
inc
add
mov
cmpsb
cltd
jmp
push
xor
push
je
jns
fidivs
pop
pop
das
xor
cmp
or
out
addr16
outsl
sbb
mov
xor
xor
push
cld
in
mov
call
psubq
sub
xor
sub
push
nop
jb
dec
faddl
sbb
push
adc
sub
data16
fisttpl
stos
je
jb
xor
or
orb
push
dec
fbstp
and
dec
inc
push
mov
call
arpl
sub
in
lods
clc
lds
sub
jae
les
js
mov
pop
out
jb
sbb
inc
mov
movsb
sub
lret
js
addr16
inc
imul
gs
jae
mov
dec
scas
dec
jl
sbb
dec
subl
sbb
mov
mov
lock
aaa
fcomp
jne
or
dec
cmp
xchg
cmp
fs
and
add
jns
and
imul
das
outsl
jge
movsb
cld
push
ret
insl
shll
insl
insb
add
xor
inc
xchg
insb
fwait
test
mov
xchg
mov
outsl
mov
dec
imul
and
mov
push
or
jne
sbb
js
xor
out
inc
aad
or
inc
das
imul
sbb
jmp
push
mov
and
cmp
sub
addr16
jns
sub
inc
adc
jg
repz
dec
push
dec
dec
das
push
dec
push
dec
push
inc
sbb
pinsrw
adc
jae
pop
insl
add
sub
xor
and
cmp
xorb
push
dec
sub
jmp
and
adc
inc
dec
dec
inc
mov
push
dec
mov
addr16
gs
mov
inc
hlt
add
push
aam
adc
and
sub
aad
cmp
mov
cmp
add
fsubrl
and
pop
in
and
xor
cmp
xchg
das
das
dec
and
xor
sbb
idivb
sub
or
fs
adc
or
inc
mov
push
cs
pop
push
rorl
popa
lods
and
pop
fadds
sbb
xor
fidivl
lods
bound
push
cmp
test
and
or
dec
inc
and
bound
mov
push
sbb
xlat
imul
dec
outsb
cmp
dec
rcll
jecxz
mov
push
addr16
fwait
xor
jmp
xchg
cmc
jbe
testl
dec
adc
pop
xor
scas
lret
dec
sbb
and
or
inc
cmp
std
stos
sub
js
push
and
mov
sbbl
add
fsubrs
das
mov
iret
aad
or
xorl
sbb
jmp
in
sub
les
and
test
xchg
out
das
adc
je
scas
push
mov
inc
and
jbe
add
add
jae
bound
mov
enter
and
cmp
mov
inc
mov
out
add
add
shrl
imul
test
in
aad
lea
add
pop
pop
rcll
adc
adc
decl
mov
or
pop
cmp
jmp
jo
cwtl
cltd
cltd
ret
and
cltd
adc
test
jg
call
fsts
movsl
lcall
mov
lea
adc
push
imul
leave
in
xchg
rol
pop
popf
fdivrl
lret
sti
jg
adc
mov
lcall
sbb
fnstsw
sbb
adc
pop
xchg
adc
lcall
idivl
iret
data16
gs
shl
popf
and
fistpll
cwtl
repz
sub
pop
sahf
fwait
cltd
sahf
and
pop
adc
popf
repz
lret
mov
or
leave
sbb
adc
inc
xor
adc
cld
repnz
fbld
fbstp
mov
fcmovu
out
leave
iret
lret
lret
movsl
cli
hlt
std
and
jb
leave
pop
stc
outsl
lock
xor
enter
ret
shlb
ja
jg
jno
addr16
in
leave
jmp
cli
fdivr
std
jmp
ljmp
in
cld
mov
cltd
fsub
lock
std
aad
sti
jmp
jmp
mov
out
ljmp
fmul
cmp
xchg
out
out
idiv
lock
cmc
lock
jmp
push
sbb
insb
mov
cmp
or
sub
push
bound
dec
test
pop
add
arpl
jmp
outsl
bound
adc
aad
mov
call
xor
jo
push
pop
and
mov
into
fs
push
ret
sub
test
addr16
jnp
test
xor
xlat
adc
inc
push
sbb
mov
mov
pop
fcoms
std
add
ja
push
jp
jae
inc
pusha
dec
adc
dec
push
fcoml
popf
and
sub
mov
pop
outsb
xchg
push
push
fnsave
data16
sbb
jne
sub
data16
pop
fadds
sbb
add
testb
mov
insl
arpl
pop
test
adc
sub
es
inc
dec
push
xor
repz
rclb
mov
arpl
andl
icebp
dec
mov
and
insl
mov
lea
jg
xchg
inc
lea
addr16
jg
cwtl
lock
ja
rolb
shrb
cs
insl
pop
sbb
les
imul
and
mov
out
mov
das
scas
inc
popf
dec
xchg
aam
inc
pushf
ss
or
cltd
mov
jae
adc
cmc
xor
popa
jbe
xor
cs
ds
push
dec
cli
outsb
and
inc
pop
gs
sbb
in
push
leave
std
pop
inc
push
andl
push
gs
sub
decl
inc
outsb
jbe
je
jb
in
pop
mov
sub
add
jge
xchg
jle
dec
inc
push
jns
mov
sub
jnp
sbb
dec
mov
arpl
cs
mov
xor
das
inc
pop
sub
fs
daa
push
fmull
jb
decb
dec
enterw
je
mov
arpl
movsl
push
xor
imul
sbb
movsl
rorl
insb
int3
sarb
rclb
pop
inc
aas
cs
xchg
mov
add
mov
inc
cmpl
inc
add
outsw
pop
mov
inc
lcall
aaa
in
cmp
dec
inc
xchg
scas
shlb
jmp
jne
push
fstpt
dec
outsl
bound
inc
mov
pop
rclb
outsb
lahf
shl
xchg
popa
pop
dec
arpl
xchg
fiadds
outsl
pop
inc
out
rorb
fidivrl
test
cltd
imul
popa
das
xor
adc
ror
sub
push
jb
xchg
daa
popa
bound
dec
jb
add
mov
push
jb
inc
daa
mov
subl
inc
adc
inc
dec
gs
fcmovu
movsl
in
sbb
data16
ja
ret
inc
jge
pop
push
push
aaa
outsb
ja
ja
xchg
shlb
in
pop
mov
push
push
mov
shll
bound
fs
mov
pop
mov
pop
jae
xor
popa
cmpsb
mov
ja
cmp
repnz
push
jbe
faddp
cwtl
push
pop
cmpsb
out
out
insl
add
nopl
shr
into
rolb
outsb
push
push
lods
insl
or
nop
pop
inc
pop
push
popa
push
adc
insb
mov
or
xchg
jge
ja
jo
xor
inc
push
dec
xchg
sbb
dec
jae
push
inc
jae
fsubs
shll
push
push
movsl
inc
pop
aad
adc
cmpsb
ja
xor
xchg
adc
xchg
jge
bound
pop
inc
xorb
je
insb
sub
fdivrs
inc
insl
xor
fmul
daa
push
outsl
pop
mov
pusha
out
mov
scas
mov
je
movsl
outsb
fidivs
fs
inc
push
mov
xchg
jae
out
or
jb
test
stos
pop
pushw
dec
cli
jae
cmpsb
jnp
xchg
mov
dec
sub
rclb
add
and
insb
je
sbb
sahf
sbb
jnp
dec
fwait
add
iret
push
js
jo
jecxz
imul
cltd
shrb
testb
jo
push
pop
inc
jo
lahf
mov
imul
add
push
inc
arpl
push
mov
sbb
test
fisubl
into
out
push
mov
test
add
jbe
mov
push
or
jb
add
adc
mov
jns
inc
jle
push
cmpsl
sbb
and
popa
jae
das
insb
test
add
int
bound
jb
jg
inc
popa
ret
ja
push
jae
in
mov
pop
jns
mov
sub
or
out
into
jmp
lcall
adc
jb
inc
mov
mov
push
pop
sbb
mov
or
lahf
sub
jo
ret
adc
aaa
inc
push
test
ja
cmpsl
aaa
push
pop
push
test
cli
call
lea
in
jae
cmp
fmuls
imul
loop
pop
pusha
punpcklwd
inc
xchg
inc
sub
dec
mov
inc
ret
and
or
cmpl
push
es
xor
imul
pop
add
add
adc
movsl
sbb
xor
pop
daa
pop
in
jl
js
dec
xor
pusha
rcrl
scas
jo
xor
test
dec
iret
xor
cmpsb
xor
sbbb
mov
jbe
push
daa
xor
add
leave
testb
outsl
jbe
call
add
sbb
mov
adc
insl
dec
push
xchg
jge
icebp
mov
adc
lret
jne
stos
js
adc
shlb
or
push
hlt
mov
inc
sub
cmp
cmpxchg
or
lea
adc
add
mov
xor
adc
aaa
rol
or
and
mov
jae
ds
bound
inc
jmp
es
push
push
dec
inc
dec
push
outsb
dec
fwait
dec
push
fsubl
bound
cmpsb
insl
cmp
push
add
xor
lods
xlat
inc
push
push
and
cs
sub
aas
xchg
jo
jns
pop
and
in
and
mov
mov
xchg
mov
push
insb
fs
and
daa
shll
test
out
test
test
lea
and
fs
inc
scas
push
fstpl
stc
dec
dec
mov
fildl
shll
or
sbb
out
cs
sub
adc
add
pop
xor
inc
xchg
dec
jbe
push
push
jmp
dec
ss
dec
dec
jp
and
jne
sub
and
inc
add
data16
mov
int3
lock
cmp
xor
fisttps
sbbb
jne
pop
or
push
fists
add
imul
loop
imul
push
hlt
pop
push
imul
iret
sbb
cmp
arpl
inc
push
or
cmp
inc
out
flds
shlb
fcoml
add
xor
mov
xor
dec
inc
cmp
dec
push
or
mov
push
inc
into
js
add
dec
fwait
push
and
ret
es
das
shlb
je
jg
inc
xor
and
arpl
inc
mov
dec
push
pop
lahf
pop
and
sbb
adcl
push
sbb
inc
jns
push
dec
xlat
xor
mov
sub
xlat
test
out
ds
jae
push
pop
cmovp
sahf
sub
sub
and
xor
push
dec
dec
pop
sub
cs
ficompl
adc
or
inc
dec
dec
inc
xchg
insl
lds
or
daa
and
fidivrl
jo
int
inc
rorb
pop
adc
adc
lahf
dec
ror
cmovo
js
inc
inc
cwtl
out
mov
inc
push
push
pop
lcall
pop
pop
or
mov
pop
push
mov
sub
xchg
aas
outsb
push
popw
addr16
push
les
add
popl
insb
add
cmp
or
outsl
add
dec
inc
cmpsb
add
pop
or
pop
mov
pop
ret
dec
push
push
fldl
and
test
filds
jecxz
lods
data16
pusha
test
decl
xor
xlat
xor
inc
ja
cmp
bound
dec
xchg
mov
dec
pop
imul
imull
push
dec
xlat
inc
inc
pusha
orl
sub
es
stc
dec
xchg
or
pop
iret
fmuls
mov
sub
push
mov
push
push
clc
hlt
cmpsb
xor
adc
in
pop
ret
sbb
cwtl
jo
inc
bound
fsubrs
mov
mov
jl
cmpsl
inc
push
inc
mov
orl
int
shl
divl
cmp
aaa
fdivs
inc
or
and
sbb
bound
jno
addr16
adc
dec
das
add
inc
js
sub
adc
jmp
in
jno
mov
ss
ret
or
adc
jge
fldcw
icebp
adc
jp
cs
mov
je
jno
mov
push
fisttps
insl
or
adc
arpl
push
rclb
push
jle
loop
or
jge
adc
mov
mov
mov
sbb
lahf
call
inc
adcb
sbb
lret
adc
jg
leave
or
push
sbb
stos
jns
imul
and
inc
popl
inc
xchg
mov
pop
hlt
sbb
in
lcall
mov
add
movsb
cmpsb
xchg
add
test
popa
lret
test
fs
fstp
lds
jmp
scas
fnstsw
pusha
ja
push
push
mov
aad
fwait
cs
fs
or
push
jne
sub
adc
pop
mov
cmp
jle
inc
outsl
insb
sub
mov
daa
rcl
dec
js
daa
sbb
mov
outsb
mov
jge
loop
fdivr
add
insb
push
sbb
xor
in
sub
xchg
cmp
jecxz
out
bound
push
popa
lret
push
stc
dec
dec
mov
arpl
push
popf
pusha
inc
es
imul
insl
sub
arpl
adc
inc
jnp
push
jo
pop
ljmp
imul
loop
add
fs
and
pop
or
iret
dec
and
push
push
inc
mov
int3
mov
inc
rclb
cmp
jae
inc
push
and
push
or
shll
inc
jg
movsl
cmp
ss
mov
mov
sbb
xchg
shll
mov
pop
push
mov
inc
xlat
xchg
jmp
pop
adc
jno
xor
nop
imul
jne
sub
arpl
mov
aaa
cmp
jle
jecxz
jne
xor
add
xchg
scas
jo
xchg
push
add
ja
dec
sahf
bound
mov
in
or
int3
xor
insb
imul
add
mov
ss
xchg
lock
mov
arpl
push
mov
es
shrl
or
pop
pop
loop
mov
aam
test
gs
adc
add
pop
jp
imulb
push
cs
push
sub
mov
out
cli
adcl
gs
pop
orl
dec
push
cmpsl
adc
popa
orb
sub
xor
insb
add
das
ret
push
pop
pop
sbb
lods
inc
es
ja
xchg
dec
cmp
mov
push
add
push
loopne
push
sbb
or
adc
cmp
push
mov
push
out
scas
or
flds
pop
and
push
xor
inc
sbbl
dec
xchg
mov
adc
in
dec
mov
jae
mov
mov
and
adc
or
adc
ficompl
aas
aaa
inc
mov
cwtl
add
xchg
scas
outsl
push
cmp
adc
add
imul
pop
sub
js
call
or
xchg
daa
cmc
imul
sub
sahf
add
fs
int3
add
jae
push
imul
mull
xlat
out
adc
jb
data16
outsb
cmpb
outsl
xchg
dec
jne
bound
cmp
dec
fidivrl
mov
xor
inc
xor
push
mov
dec
outsl
sbb
pusha
sbbl
mov
ret
xchg
out
xor
add
pop
jae
cmc
ret
add
mov
shlb
mov
add
jne
cli
push
mov
out
and
cmp
inc
outsl
jae
jo
adc
sbb
sub
adc
stos
push
and
or
xchg
add
cwtl
jno
stos
add
ja
adc
push
jecxz
sbb
in
pop
lcall
loop
aaa
outsb
jne,pt
mov
les
adc
cmp
mov
mov
adc
outsb
or
imul
mov
jo
or
jge
jns
cmp
sub
sbb
push
push
shrb
dec
add
lret
pop
inc
jmp
add
add
popl
jns
adc
in
jns
or
adc
insb
movl
pop
insl
outsb
pushf
jbe
push
in
into
sbb
loop
dec
shlb
ret
mov
shrl
leave
jecxz
call
sbb
dec
lea
mov
test
adc
rorb
jb
mov
jne
dec
add
dec
sbb
jb
jne
dec
subl
or
adc
ss
dec
jnp
sub
shl
outsl
repz
cmp
sbb
sub
cmp
sub
push
stc
dec
or
xor
lods
sbb
push
push
add
push
in
imul
imul
cmpsb
imul
data16
add
push
sahf
pop
loopne
lcall
cwtl
imul
imul
data16
scas
clc
push
push
in
enter
cmpsb
mov
inc
lcall
sbb
or
cmpsb
lcall
rol
mov
imul
inc
xor
and
insb
lcall
fdivs
mov
or
mov
dec
shll
cmp
adc
lcall
aam
cmpsb
imul
imul
push
inc
shll
cld
dec
lcall
int3
shlb
xchg
test
cmpsb
imul
insb
lcall
int3
xor
shll
movsb
cwtl
mov
dec
shll
push
dec
cmp
shll
lock
lcall
mov
cmpsb
imul
dec
inc
xor
sbb
mov
lcall
shlb
movsb
xchg
test
xor
sarl
pusha
push
dec
dec
shll
or
sbb
int3
mov
mov
xchg
test
cmpsb
imul
cmpsb
imul
lock
shlb
xorb
dec
shll
adc
in
inc
fsubrl
cmpsb
imul
cmpsb
imul
imul
mov
inc
lock
les
xor
mov
cwtl
mov
dec
shll
dec
cmp
dec
sub
adc
sahf
inc
inc
shll
enter
shll
jo
xor
shll
dec
cmp
and
dec
rcll
add
inc
call
cmpsb
int3
shlb
lcall
xor
cmpsb
imul
shll
mov
dec
shll
pusha
push
xor
shll
sub
adc
lcall
mov
cmpsb
nop
jl
pop
push
fwait
cmpsb
imul
dec
shrl
loopne
enter
int
lods
mov
dec
shll
pop
dec
cmp
data16
and
clc
aas
in
lcall
mov
cmpsb
imul
sub
or
ds
shll
mov
xor
xchg
test
shll
sub
xor
insb
dec
or
mov
cmp
xor
sarl
shll
xor
lcall
cmp
fsubrl
cmpsb
imul
cmpsb
imul
imul
mov
cld
cmp
loopne
shll
cwtl
mov
xor
xorb
dec
xor
shll
xor
add
data16
cmp
int3
les
test
nop
mov
imul
cmpsb
imul
shll
enter
xor
lods
mov
mov
shll
push
inc
and
mov
dec
rorl
cmp
les
mov
dec
roll
shll
sbb
lcall
in
les
cmpsb
imul
js
pusha
push
inc
imul
xor
mov
ss
loopne
mov
shll
jo
xor
shll
inc
cmp
imul
cmpsb
imul
imul
cmpsb
imul
xor
xor
mov
fmul
mov
dec
pushf
nop
test
xor
shll
xor
adc
imul
cmpsb
imul
imul
mov
sbb
xor
dec
lcall
cs
pop
inc
add
movsl
adc
mov
mov
inc
push
dec
dec
inc
push
sbb
inc
inc
dec
inc
dec
mov
add
inc
inc
dec
push
or
mov
push
dec
cmp
inc
inc
das
xor
mov
pop
pop
dec
dec
inc
inc
dec
inc
push
dec
push
sbb
xorb
aas
inc
push
push
push
dec
push
sbb
or
push
inc
sbb
sbb
xor
push
pop
push
aaa
dec
imul
push
push
inc
dec
inc
lock
push
inc
push
cltd
dec
xor
fwait
cmp
dec
addr16
inc
inc
push
dec
xchg
fcomi
push
inc
push
push
gs
inc
inc
dec
dec
mov
pop
es
daa
outsl
dec
push
inc
dec
dec
inc
loopne
mov
adc
adc
lret
pop
push
ja
push
jne
insl
mov
pop
aas
pop
pop
repnz
push
insl
xchg
push
sub
fwait
adc
mov
push
mov
inc
fildl
mov
push
pop
pop
add
imul
dec
mov
insl
pop
icebp
dec
cltd
pop
mov
iret
push
dec
push
xlat
adc
lds
inc
push
inc
adc
pop
bswap
packuswb
push
dec
dec
dec
push
inc
push
ret
filds
mov
dec
inc
inc
inc
inc
cmp
push
mov
aaa
pop
shrb
pop
aaa
cmp
outsl
cmpsb
pop
inc
aaa
psubw
xor
cmp
push
push
lds
push
negl
insb
mov
mov
sbb
pusha
test
push
dec
sbb
pop
dec
aam
fstl
dec
inc
addr16
cmp
insb
xor
mov
dec
inc
fistl
mov
call
xchg
inc
mov
dec
pop
xor
arpl
pop
push
mov
mov
push
dec
fildll
xchg
ss
xor
fldenv
push
dec
inc
dec
xor
cwtl
dec
adcl
dec
inc
cli
loop
mov
sub
popa
sub
adc
push
jbe
inc
push
push
testl
sbb
sbb
popa
aaa
add
mov
mov
addr16
mov
dec
push
lods
stc
arpl
cwtl
inc
add
push
xchg
sub
sbbl
sbb
out
movsl
push
push
push
dec
gs
adc
cmp
add
dec
dec
inc
cs
or
mov
push
xlat
add
int
jg
test
push
sbb
lea
aaa
inc
fldt
std
fadds
inc
inc
dec
xor
fwait
cld
inc
inc
dec
dec
inc
push
rdmsr
sub
push
repnz
sub
outsb
inc
ficoml
push
inc
xor
dec
shll
inc
push
pop
jle
add
ret
das
arpl
pushf
pop
dec
fistl
and
dec
inc
das
push
ficompl
testl
pop
sub
mov
adc
movl
lcall
loope
push
push
insl
dec
outsb
imul
sub
or
cmp
aaa
inc
test
adc
jns
stc
pop
add
int
push
inc
pop
xor
xor
mov
and
xor
xor
pop
adc
push
pop
pop
pop
pop
dec
push
mov
mov
mov
inc
mov
cmp
js
mov
dec
push
inc
aas
fucomi
fmuls
cmp
dec
inc
adc
push
inc
push
dec
and
mov
dec
daa
mov
inc
scas
inc
subb
mov
fisttpll
add
daa
inc
inc
test
jmp
mov
inc
jno
sbb
dec
mov
fisttpl
pop
daa
pop
in
push
inc
dec
cmp
fldl
iret
inc
inc
xorb
push
and
scas
mov
aas
mov
lock
inc
push
jnp
push
or
cs
test
xchg
mov
xor
pop
xlat
mov
inc
mov
fldt
push
imul
sub
add
icebp
dec
inc
inc
stc
pop
inc
inc
or
sbb
aas
fildl
outsl
pop
dec
xor
sbb
jge
addr16
push
sbb
dec
inc
and
mov
push
ret
jb
sub
dec
push
inc
pop
repnz
push
dec
inc
incl
inc
push
inc
pop
cmp
inc
inc
inc
push
inc
inc
fdivl
push
push
subl
pusha
cmp
dec
iret
inc
push
pop
dec
inc
inc
ja
test
xchg
push
push
cmp
push
xlat
es
aas
aaa
das
shll
out
push
add
push
int3
mov
push
mov
lahf
js
inc
stc
push
push
dec
in
push
mov
nop
add
push
push
inc
inc
or
in
mov
push
jecxz
pop
sbb
pop
test
mov
es
adc
pop
add
out
outsl
loopne
push
adc
jo
inc
push
mov
inc
dec
fstl
push
and
sub
inc
cmpsl
lock
insb
push
push
inc
pop
jnp
ret
adc
movsl
add
mov
and
add
sbb
lea
mov
and
pop
xor
push
jbe
sbb
imul
inc
int
inc
lret
inc
lods
icebp
ret
pop
or
push
aad
push
rcll
sub
push
dec
lahf
loope
roll
inc
xor
mov
jmp
dec
push
xor
xor
aaa
pop
xor
mov
lds
pop
jno
test
mov
sbb
pop
aaa
sbb
popa
inc
dec
pop
pop
dec
dec
sbb
incl
ss
xor
add
ret
lods
mov
pop
out
fimull
pop
inc
jecxz
fistpl
mov
mov
jo
out
xchg
negl
pop
ret
lods
inc
push
mov
movsl
add
das
arpl
fwait
push
jecxz
and
jge
pop
lcall
aam
mov
aad
mov
dec
cltd
pop
inc
inc
or
jmp
orl
stos
loop
jnp
push
cld
xor
in
push
jmp
aad
xor
inc
loope
xor
mov
stos
leave
xchg
imul
addr16
push
add
outsl
dec
or
mov
pop
jg
sbb
mov
add
insb
add
pop
add
andb
aaa
neg
sub
dec
aaa
test
cmpsb
clc
rcll
cmp
daa
xor
pop
push
push
pop
outsb
in
cmp
mov
pop
pop
aas
pop
xor
jp
pop
adc
pop
jecxz
add
pop
pusha
pop
adc
mov
xor
jge
aaa
inc
push
ja
push
imul
mov
testb
dec
dec
push
lcall
in
cltd
inc
push
aaa
or
popa
mov
cmc
imulb
insl
xchg
movsb
jmp
mov
popf
jg
mov
mov
es
dec
push
in
shlb
pop
popl
adc
xor
lahf
sbb
mov
push
push
inc
push
dec
push
dec
rcrl
loop
or
fbstp
insl
xorb
mov
sub
sti
pop
sub
and
mov
cmp
or
jmp
xchg
dec
push
mov
push
imul
inc
sbb
pop
dec
dec
jo
divb
add
and
outsb
mov
pop
mov
rcll
mov
sub
inc
shrl
dec
xchg
push
xor
scas
add
inc
pop
dec
gs
mov
inc
mov
pop
je
dec
sub
inc
icebp
aaa
push
lods
ret
ja
mov
dec
push
pop
sbb
push
and
pop
push
movsb
popa
fisttps
out
loopne
adc
dec
sbb
icebp
rcrb
jg
inc
mov
cs
test
loop
sbbb
inc
push
sub
pop
in
inc
push
xor
es
push
xchg
mov
sub
sbb
cwtl
mov
mov
outsb
int3
andb
sub
dec
dec
dec
inc
dec
push
pop
adc
or
push
adc
sub
mov
push
push
pop
jge
and
push
mov
pop
jmp
xor
aas
movsl
and
test
ficompl
js
or
dec
dec
dec
ja
aam
dec
gs
sbb
daa
pop
test
ja
dec
push
je
rcrb
inc
dec
pop
fidivl
fstpl
push
push
fistpl
bound
jno
or
pop
pop
mov
das
movsb
leave
fisttps
sbb
push
dec
repz
nop
mov
aaa
dec
in
cwtl
sbb
lds
outsb
mov
test
mov
inc
pop
pop
inc
pop
and
pop
xor
bound
mov
jns
dec
push
inc
dec
xor
hlt
jbe
and
pop
or
cmpsl
dec
subl
mov
dec
pop
adc
xchg
or
cli
sarb
arpl
dec
jae
inc
movsb
and
mov
jecxz
dec
dec
and
imul
dec
loope
arpl
shll
xor
pop
pop
movsl
jmp
daa
stc
leave
fldt
cmp
sbb
ret
loopne
outsb
push
push
inc
dec
xor
mov
sub
cmpsl
movsl
push
xlat
lock
dec
inc
mov
push
push
dec
pop
dec
push
inc
push
mov
fildl
push
push
inc
push
lods
jmp
xor
fldt
dec
xor
dec
pop
xor
cs
inc
push
jecxz
fsubp
push
dec
mov
fnstsw
push
mov
sti
push
and
jo
pop
inc
inc
cltd
add
sbb
push
loope
sub
dec
ret
fistpl
ficoml
inc
adc
dec
and
xor
push
push
inc
pop
and
push
dec
sbb
pusha
jg
inc
pop
push
sbb
inc
xchg
push
mov
arpl
daa
sub
cmp
insb
jo
jg
int
xchg
cs
jmp
pop
inc
pusha
push
jo
movl
jns
outsl
xor
mov
arpl
iret
pop
sbb
push
pusha
test
dec
aaa
or
mov
sbb
mov
dec
fisttpl
jmp
lock
sbb
sub
cmpsl
dec
sti
mov
push
mov
shrb
and
jno
arpl
dec
dec
push
out
pop
sbb
sbb
jo
adc
lret
add
mov
push
test
cmp
push
cltd
inc
and
push
stos
inc
ja
arpl
push
pop
mov
sbb
add
fldt
sbb
push
fstps
scas
adc
fsts
popf
sbb
sbb
cmpsl
cmp
pop
inc
push
push
push
andl
push
push
sbb
rol
dec
push
mov
popa
in
add
push
xchg
xchg
xchg
push
xchg
inc
lds
shlb
popa
ja
inc
inc
inc
push
push
pop
inc
xor
xor
push
or
mov
lahf
popa
xor
ss
cmp
popa
mov
adc
addb
sub
dec
fstpt
sbb
or
imul
adc
negl
inc
jns
xor
mov
dec
in
sbb
pop
inc
mov
imul
push
mov
jg
aaa
dec
sti
test
addr16
pop
inc
inc
dec
sub
fcompl
sbb
aaa
add
push
arpl
push
dec
pop
xlat
add
leave
psubw
clc
jno
imul
pop
outsb
cmp
push
pop
repnz
push
dec
inc
push
xor
mov
mov
dec
das
fisttps
sbb
mov
dec
roll
pusha
insl
xor
cli
pop
dec
mov
pop
dec
mov
inc
mov
push
fisubrl
or
push
subl
add
andl
lods
adc
push
ljmp
dec
addr16
aad
inc
pushf
andb
in
jae
mov
inc
mov
aas
sbb
xor
inc
push
push
pop
pop
repnz
cmp
ret
and
pop
jl
sbb
adc
popf
pop
cmp
push
push
test
xchg
xlat
xor
or
inc
push
lods
sbb
fwait
jg
add
adcl
je
sbb
push
insb
cmp
aaa
add
pop
sbb
mov
aas
jbe
lods
addr16
pop
lahf
dec
rcr
pop
aaa
adc
jo
xchg
sub
push
iret
inc
imul
xchg
pop
loopne
inc
lahf
push
push
lcall
out
pop
push
fstps
pop
ret
pop
sbb
lods
add
dec
adc
arpl
ljmp
outsl
push
pop
daa
lea
scas
pop
pop
sbbb
adc
push
dec
sub
pop
stos
cmpsl
popa
pop
bound
jb
sbb
mov
add
sbb
pop
cs
add
xor
and
shlb
push
inc
pop
test
push
aad
mov
xor
and
jmp
sub
aas
mov
jne
mov
data16
mov
xchg
shl
xlat
sub
push
dec
xchg
add
frstor
inc
aas
mov
inc
pop
loopne
inc
daa
mov
adc
adc
lods
pop
lods
int
jae
add
iret
dec
pop
push
das
lea
popa
test
cmp
sub
adc
xor
sahf
jns
shrb
add
dec
ret
sbb
je
and
add
adc
lret
push
shlb
sub
mov
inc
adc
shll
mov
outsl
shll
mov
rclb
add
popf
jecxz
add
scas
jae
pop
popa
mov
insb
pop
mov
inc
sbb
filds
or
xchg
hlt
cmp
mov
and
push
daa
add
pop
test
insb
imul
or
mov
add
add
shrb
out
jl
sbb
out
push
fs
int
mov
push
or
pop
push
add
fistpl
add
xorl
push
add
jecxz
out
and
aad
add
and
add
cmp
call
imul
pop
xor
add
bound
daa
and
rcrl
xchg
rclb
cmc
gs
je
push
pop
out
sub
ja
push
das
cmp
fs
sub
pop
adc
push
movsb
pusha
fstenvs
call
xchg
dec
shrl
insb
adc
gs
xor
cmpsb
imul
xor
rcll
insl
xchg
dec
adc
arpl
enter
shll
fs
inc
mov
xchg
dec
add
bound
loopne
inc
ss
imul
sub
pop
or
xor
sahf
push
lods
push
movsl
and
shrl
pop
cmp
add
pop
mov
ret
pop
jns
or
pop
outsl
dec
dec
fstpl
ja
cmp
cs
jae
pushf
push
mov
xor
roll
jl
push
xor
push
inc
cmp
sub
ss
shll
adc
clc
pop
cmp
and
imul
cmpsl
lock
in
fmuls
rol
xor
shll
mov
xor
shrl
dec
shll
push
dec
imul
xor
shll
adc
or
mov
cmpsl
clc
pop
pop
lock
loopne
fsubs
int3
shlb
cwtl
xchg
mov
js
push
lcall
imul
imul
xchg
lret
cld
pop
hlt
pop
in
push
call
imul
imul
cwtl
mov
js
push
cmpsb
imul
lods
pop
mov
pop
outsl
sbb
adc
or
pop
jbe
cmpsb
pop
lock
pop
xchg
rorb
xor
shll
clc
movsb
cmpsb
imul
cmpsb
imul
scas
imul
xchg
cmc
int3
pop
add
into
hlt
lret
xor
mov
lods
push
sbb
scas
cs
jbe
mov
bound
call
popl
fsubp
jo
outsl
imul
lods
jae
daa
cmp
mov
gs
ficompl
bound
rcl
fidivs
insb
mov
mov
daa
pop
mov
inc
or
imull
dec
es
inc
imul
bound
outsl
pop
lret
insl
pop
push
sti
aas
pop
cmpl
push
mov
push
mov
aas
aam
sbb
bound
push
data16
imul
les
into
aaa
popa
or
je
outsb
cld
insl
arpl
sub
push
pushf
push
rcr
imul
movq
out
out
mov
es
or
ret
addr16
jb
push
jne
setl
mov
imul
and
push
push
jbe
xchg
rolb
lret
jg
ds
outsl
bound
jno
jp
in
add
loop
push
xor
bnd
push
lock
js
xor
sbb
jns
cmp
gs
in
or
push
fmuls
add
push
sbb
sahf
das
pop
test
call
ja
inc
xchg
xchg
pop
gs
add
xor
gs
out
add
insb
pop
jb
mov
imull
movntps
mov
mov
inc
idivl
les
mov
and
rdmsr
xor
push
into
xor
pop
pop
pusha
addl
das
aas
push
je
loope
push
push
stos
aaa
scas
fists
push
dec
dec
cli
lods
lods
dec
dec
pop
pop
jbe
fs
je
js
mov
popa
lods
ret
or
pop
popaw
xor
pop
scas
mov
or
xchg
jne
mov
sub
ja
insl
sub
jb
outsl
movsb
jmp
jbe
xchg
fstpt
jae
arpl
jb
push
addr16
dec
push
xchg
lods
and
jecxz
dec
push
cmp
js
and
cs
sbb
jg
inc
addr16
hlt
pop
add
xor
xor
jg
xor
cmp
and
pop
add
gs
xchg
in
and
maskmovq
testl
push
cltd
ja
hlt
lock
xor
cmp
mov
and
inc
sub
stos
adc
push
jne
mov
add
insb
mov
push
and
and
sbbb
mov
inc
xor
or
popa
dec
lret
aas
mov
cmc
xor
xor
dec
gs
in
rcr
inc
push
popa
outsb
or
adcl
fidivs
dec
dec
dec
mov
and
and
test
sbb
das
das
repnz
dec
imul
data16
pop
and
add
inc
pop
sbb
adc
nop
xchg
pop
in
imul
sarb
mov
inc
cmp
sub
sbb
bound
add
pop
adc
xchg
sub
cmpb
xor
push
outsl
insb
add
sbb
adc
mov
mov
cmp
sub
out
or
scas
add
mov
mov
js
aaa
xor
and
sub
popa
sub
incb
inc
rol
or
lock
inc
sub
outsl
sub
jl
xor
dec
and
in
cmp
xor
xor
xchg
and
vmread
jb
or
xor
ljmp
sbb
arpl
xchg
ds
and
lret
inc
outsl
popa
je
insl
jnp
push
push
push
xor
push
bound
jns
fmull
dec
xor
or
cmc
popa
call
sub
pop
jae
inc
adc
shrb
inc
inc
pop
push
dec
dec
inc
mov
jg
call
popa
mov
xor
xor
dec
stos
sub
xor
dec
xor
jo
hlt
jecxz
sub
cli
arpl
add
loope
jle
jecxz
sbb
popa
add
lea
inc
inc
dec
out
jmp
fs
insl
shl
fstpt
xchg
dec
jne
int3
ja
xor
ja
aaa
js
popa
das
sbb
push
or
xchg
inc
dec
ret
enter
sub
sub
sahf
cmp
and
es
cmp
jae
bound
xor
mov
or
mov
dec
and
into
jecxz
sub
inc
das
pop
dec
xor
cmpsb
or
xor
sub
pushf
xor
das
xor
cs
pop
xor
pop
imul
mov
add
mov
xor
aaa
adc
pop
mov
outsb
sub
insl
inc
dec
ss
imul
aaa
int
sub
sub
jge
xor
sbb
mov
push
ja
test
lods
sub
out
outsb
mov
add
xor
inc
les
xor
mov
dec
cmp
pop
int
push
jl
dec
push
inc
gs
xor
cmp
imul
dec
jnp
add
in
pop
dec
push
sub
and
out
inc
in
loopne
imul
pop
cs
sub
mov
pop
pop
and
jg
insl
out
daa
cmp
sub
pop
imull
sbbb
inc
push
dec
inc
xor
mov
test
decl
jns
loopne
inc
or
pop
sub
mov
addl
jo
shlb
insb
fs
cmpsb
mov
outsl
mov
loope
ret
jge
pop
inc
lret
xorl
xchg
ja
imul
bound
aam
cmp
imul
jb
lret
pop
sub
lock
xor
imul
ljmp
addl
pop
lahf
scas
pop
adc
xor
sub
jo
and
dec
popa
add
jp
andb
pop
imul
test
sti
test
in
inc
cmp
cmc
jne
gs
and
scas
aaa
ret
xor
pop
add
add
das
andl
sub
pop
or
in
mov
ret
loope
pop
movsl
dec
add
cmp
and
bound
clc
inc
push
inc
and
out
mov
inc
mov
xchg
das
xor
idivb
sub
cmpsb
push
sbb
jmp
adc
xor
fildl
icebp
lock
inc
pop
filds
inc
in
hlt
rolb
das
xchg
sub
xchg
dec
push
pushw
in
push
aam
pop
insb
aas
sub
pop
imul
mov
jae,pn
adc
or
je
scas
push
imul
push
inc
sub
in
xor
cmp
outsl
push
dec
insl
or
cmp
cmp
sbb
mov
mov
pop
subl
nop
fcmovb
pop
push
mov
inc
push
das
inc
push
and
test
xchg
mov
leave
ja
dec
test
imul
xor
rcrb
fcoml
pop
add
add
mov
pop
dec
jge
or
cmp
ret
iret
shlb
or
sbb
negl
inc
cmp
outsb
pop
nop
xor
pop
pop
mov
add
aaa
dec
lea
fisubl
bound
inc
mov
icebp
add
push
push
ficoms
dec
inc
inc
pusha
insb
xor
mov
mov
add
push
push
movsb
lcall
sbb
popf
testl
rsqrtps
stc
and
addr16
rcr
and
aas
testl
push
mov
sbbl
xor
push
push
je
gs
dec
mov
and
jge
dec
cmp
inc
push
push
adc
pop
adc
cmp
dec
roll
mov
repnz
add
daa
add
mov
mov
adc
sub
aam
and
mov
popa
pop
xor
insl
mov
das
adc
or
ljmp
fs
and
mulb
cld
jg
inc
sub
dec
roll
xchg
in
pusha
and
inc
pop
mov
xlat
adc
xchg
std
or
or
pop
daa
jo
std
and
mov
adc
pop
add
aas
inc
mov
das
js
mov
mov
mov
add
outsl
roll
or
or
adcb
xor
push
xor
mov
mov
push
pusha
inc
jb
inc
jg
inc
add
testl
pop
xor
jle
out
pop
sub
dec
cmp
addl
add
dec
xchg
popl
and
mov
fildll
add
fildll
test
inc
shrl
add
mov
sub
fistl
arpl
lds
scas
mulb
aam
cli
pop
movsl
test
xchg
mov
dec
or
loope
mov
and
ja
push
dec
pop
ljmp
popa
or
and
lcall
repnz
movsl
rol
jg
imul
iret
add
or
xchg
xorl
jns
inc
xchg
xor
out
arpl
dec
aas
dec
or
inc
pusha
push
dec
jnp
insb
cmp
fsubs
push
add
negl
ljmp
xchg
into
fs
xor
pop
jecxz
pop
or
cltd
inc
xor
jp
sub
add
and
imul
outsl
push
addb
dec
pop
js
arpl
popl
pop
data16
inc
aas
inc
and
cli
push
rcrl
xchg
sbbb
test
push
dec
inc
xchg
and
xorb
push
dec
mov
test
bound
pop
push
xchg
or
aas
sbb
sbb
pusha
out
dec
inc
xlat
dec
add
sbb
xorb
mov
shrl
fisttps
dec
orl
out
stos
adc
sahf
fisttpl
fbld
pop
mov
outsl
push
xchg
loopne
mov
out
push
lods
lea
push
gs
test
mov
or
jecxz
js
and
scas
aas
push
mov
dec
shlb
or
fadd
lea
pop
xchg
inc
rorl
movzwl
xlat
cwtl
ficompl
fsubrl
addr16
inc
cmp
lods
movsl
adc
fmuls
rsqrtps
ret
inc
pusha
je
push
and
xor
add
adc
lea
das
das
js
sbb
aas
dec
adc
aas
add
xchg
subb
cmp
loopne
xor
mov
test
aaa
pop
cltd
adc
daa
popaw
aad
or
sbb
iret
arpl
mov
jp
pop
pop
jb
adc
mov
jbe
int
ss
mov
pop
ja
push
sub
test
and
pop
inc
dec
mov
test
jne
sub
mov
mov
stc
das
rorb
arpl
mov
mov
add
daa
mov
popa
adc
jne
or
mov
inc
inc
inc
adc
mov
and
xchg
mov
add
push
or
or
pop
cs
inc
jb
cmp
test
add
sub
lods
test
fisttpl
shr
pop
sub
lea
inc
add
mov
orl
sbb
pop
roll
pop
add
mov
adc
or
mov
bound
mov
pop
sbb
sbb
data16
push
xor
pop
sub
jae
stos
mov
sbb
dec
test
popa
bound
movb
fldl
add
sub
js
lods
scas
aad
pavgb
inc
cmp
test
and
popl
push
shl
or
jo
sbb
and
ds
or
jae
in
or
add
sub
test
loopne
inc
arpl
lret
sar
add
popa
push
pop
cmp
notb
jo
packsswb
pop
add
inc
mov
push
fstpl
ss
push
fcmovb
jbe
in
or
mov
ja
add
push
gs
pushf
insl
dec
push
jb
not
ja
cmp
push
or
pop
out
or
insl
push
jno
jbe
mov
ja
push
sub
add
adc
push
stos
sbbb
xor
dec
js
popa
push
cs
aas
sahf
dec
add
test
fsubrs
das
dec
and
add
and
ja
mov
push
add
inc
jno
rclb
jno
cs
arpl
lret
out
imull
lods
and
ret
aaa
pop
dec
mov
ret
addl
xchg
add
add
cs
or
mov
rorl
xlat
push
mov
popf
aas
gs
imul
push
cmp
fs
push
fsubl
xor
repz
je
push
in
je
add
fcoml
jo
and
es
outsb
push
popf
push
cmp
lret
push
sahf
pop
mov
fisubrs
xchg
pop
jno
jne
push
fs
mov
xchg
notl
mov
cs
je
popa
and
shlb
sahf
xchg
pop
fcompl
pop
jno
sahf
bound
shll
arpl
enter
jbe
lret
pop
pop
fistl
xlat
daa
jb
movntps
pushf
sbbb
push
cmpsl
jmp
data16
dec
cmp
jae
pop
push
jo
push
rorb
xchg
push
loop
mov
fnsave
dec
xchg
cmp
fistl
push
inc
ds
push
jno
bound
push
ja
adc
gs
outsl
push
mov
jae
xor
cmp
xchg
sbb
decb
jg
push
cmc
xor
jno
xor
or
pop
jae
pop
out
xorl
ss
pop
js
out
arpl
popa
popa
pop
out
push
out
push
pop
adc
ret
or
sub
inc
sub
rorl
call
das
dec
lea
mov
nop
cmp
pop
lret
add
dec
jae
pop
jno
sarb
out
cmp
ja
addr16
adc
push
jbe
pop
daa
push
and
xor
push
lahf
push
outsb
inc
sbb
cmovb
mov
push
cmp
scas
adc
in
data16
sub
sahf
dec
push
shrb
push
les
jle
fistps
imul
clc
push
inc
insb
fsubrl
mov
cmp
lahf
cmp
outsl
gs
jns
jae
outsb
inc
inc
outsl
insl
jg
push
push
cmp
jae
mov
pop
inc
arpl
addl
stc
push
push
or
outsb
int3
cmpsl
out
pop
add
push
into
int3
ficompl
fists
iret
pop
cmpsb
pop
push
add
xlat
xor
pop
test
xlat
sti
push
and
xor
nop
mov
lock
sbb
sbb
jbe
push
je
mov
int
add
add
inc
and
fnsave
mov
and
push
into
fcmovnu
push
cmc
and
aaa
popa
outsb
repz
cs
and
pop
and
shrl
mov
mov
es
pop
push
jne
test
sub
in
mov
pop
dec
dec
jno
outsl
adc
mov
jo
in
inc
arpl
sub
out
sbb
pop
or
xorl
scas
adc
das
add
adc
inc
sbb
cmpsb
sbbb
xor
inc
pop
adc
cmp
and
les
ja
inc
cmp
rorb
lea
sub
inc
cli
movsb
xor
adcb
or
or
dec
sarl
mov
pop
xor
mov
inc
xchg
int3
mov
xor
dec
dec
xchg
sbb
rclb
push
in
adc
and
sub
xchg
push
xchg
jbe
xor
dec
outsb
loop
sarb
das
imul
jo
insb
push
inc
cmp
push
inc
sbb
popf
sbb
or
mov
fwait
ret
push
cwtl
add
mov
bound
mov
fdivrs
xchg
cltd
sbbb
cmp
and
push
shll
mov
int
mov
cld
inc
ficompl
inc
or
jo
push
addb
or
outsl
inc
or
mov
dec
addr16
or
mov
pop
cmp
aaa
arpl
mov
sub
out
lods
inc
scas
es
add
or
addr16
pop
andb
dec
pop
andb
xchg
xchg
pop
and
xchg
fildll
jb
lahf
inc
mov
or
ja
add
sbb
fs
call
add
push
and
es
xor
xor
cltd
movsb
mov
add
lcall
add
mov
add
xchg
mov
shll
lcall
rclb
mov
mov
inc
lret
jns
mov
sub
or
xor
push
adc
sahf
subl
xchg
add
pop
dec
adc
pop
pop
xor
xorb
inc
xchg
dec
fsub
stc
das
mov
or
cmp
cld
add
js
xchg
jmp
sti
inc
or
or
xor
inc
jl
inc
cmp
rolb
lret
js
inc
and
fiaddl
pop
sbb
push
push
and
adc
mov
cmp
xor
push
adc
adc
clc
ret
xchg
nop
or
fistl
mov
mov
cli
push
call
adc
addb
pop
pop
add
call
fcomps
pop
cld
in
dec
and
pop
pop
pop
in
push
ljmp
inc
mov
rep
mov
stos
push
push
jecxz
push
ret
and
push
push
adc
jg
pop
les
ret
pop
adc
xor
jbe
cmpsb
das
sbb
sub
xchg
rolb
popf
mov
sub
repnz
pop
jne
jae
sbb
cmp
sbb
mov
sgdtl
pop
insb
push
adc
pop
and
sub
jbe
dec
jb
fdivr
add
xor
inc
imul
mov
lea
loopne
mov
xchg
sbb
xor
imul
dec
pop
push
inc
adc
xor
sarl
xor
sub
shll
adc
dec
shll
fnstenv
or
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
mov
jg
clc
out
cmp
sbb
add
lret
fldt
cmpsl
xor
mov
daa
ret
lahf
mov
gs
pop
fdivrs
loop
stos
scas
inc
bound
push
add
add
add
fs
addl
adc
or
add
jbe
add
add
or
add
push
mov
cmpb
jle
bnd
fisttps
mov
cld
inc
jle
sbb
inc
test
shll
inc
mov
outsb
cmovo
mov
iret
mov
in
call
scas
jle
adc
push
ficompl
mov
xor
fcomp
loopne
jae
jle
xor
push
push
add
dec
shll
or
orl
or
or
ja
nop
popa
aaa
or
fdivs
adc
adc
and
sbb
addr16
das
push
fdivs
mov
imul
ss
push
push
pop
andb
add
or
cmpb
test
enter
xchg
sub
movsb
fbld
xor
xlat
pop
sbb
push
imul
add
nop
inc
lea
mov
fs
push
nop
xchg
inc
push
fs
xchg
xchg
xlat
xchg
das
or
mov
loop
sbb
fildl
in
dec
sarl
xchg
adc
xor
shrl
cmp
adc
imul
cmpsb
imul
mov
lock
jns
mov
dec
sarl
cld
mov
mov
xchg
lock
pop
xor
lret
xor
add
mov
cmp
jg
dec
push
add
push
roll
adc
add
pop
add
mov
adc
jo
lock
cmp
xchg
push
xchg
push
inc
jg
mov
push
sbb
pop
push
les
and
mov
pop
js
mov
lcall
xor
mov
dec
insl
add
out
cmpsb
dec
mov
xchg
hlt
shll
das
push
dec
insb
loope
and
inc
pop
enter
sahf
in
sahf
inc
pushf
or
ret
mov
adc
xchg
cwtl
push
and
cld
add
leave
sbb
into
sbb
rorl
and
sahf
mov
sub
inc
call
pop
std
and
sbb
addl
xlat
xchg
inc
push
add
inc
stc
mov
adc
addl
dec
pop
js
inc
outsl
loopne
jmp
xchg
test
mov
imul
divl
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
jmp
call
repz
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
gs
call
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
call
lock
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
mov
outsb
dec
leave
fwait
xchg
and
and
add
out
jg
aas
jno
or
mov
pop
fs
dec
lea
aas
ret
shrl
jmp
loop
pop
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
xchg
xchg
out
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
and
jmp
mov
mov
popa
push
pop
sarl
jl
mov
das
lea
mov
inc
jg
aas
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
decl
call
cmp
test
pop
mov
jne
fldt
cmp
jno
shlb
out
dec
call
mov
andb
mov
cmpsl
push
lahf
inc
pop
mov
sub
dec
in
ss
pushl
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
andl
dec
inc
out
decl
std
orl
pop
ficomps
frstor
cmp
mov
cs
inc
push
dec
in
xor
addr16
inc
das
xchg
mov
insb
arpl
inc
gs
int3
pop
xor
outsl
insb
pusha
mov
add
pop
xchg
pop
outsl
pop
jb
aas
xchg
pop
test
shlb
shlb
ret
lahf
mov
or
sub
mov
dec
mov
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
mov
add
add
push
dec
addl
or
dec
add
movsb
mov
inc
inc
adcl
push
push
dec
sbbl
pop
fidivs
ret
or
push
inc
push
lahf
push
lret
popa
jb
fldenv
mov
insl
ljmp
pusha
jge
jno
dec
data16
cmp
add
adc
lret
es
jae
push
fs
divb
inc
imul
jae
push
imul
xchg
push
sub
sub
xchg
push
outsb
push
pop
or
mov
in
mov
fidivl
stos
out
adc
push
cmp
ja
bound
jae
das
jl
aad
movsl
dec
cmp
int3
fwait
lcall
dec
bound
cmpsb
or
inc
or
rorl
je
pop
inc
popa
je
roll
pop
out
rorb
imul
aad
mov
cwtl
pop
sub
push
test
cltd
or
push
push
pushf
fstpl
push
ss
outsl
cmpsb
push
jbe
mov
fistpl
cmpsb
cs
imul
cmpsl
in
xchg
test
push
in
mov
pop
xchg
xor
ret
push
rcrb
push
ret
sbb
cmp
sub
repz
push
push
fdivrs
inc
notl
mov
sbb
ret
jg
es
fistps
dec
cmp
push
andl
inc
insl
mov
cmc
sub
pop
mov
cmp
xchg
test
jbe
ljmp
daa
push
jo
imul
mov
sub
xor
fadds
mov
pop
push
rcrl
hlt
dec
jo
mov
push
mov
mov
fdivs
gs
outsb
xchg
loopne
dec
mov
push
aaa
imul
imul
cltd
shr
add
gs
stos
sub
inc
dec
and
push
sub
jb
mov
inc
jno
stos
adc
add
and
or
jb
jb
jns
push
mov
inc
adc
mov
mov
ret
daa
fwait
insb
add
arpl
cmp
imul
mov
lea
or
or
lea
in
adc
dec
lret
adc
and
or
mov
dec
dec
js
dec
rcrb
mov
or
jge
mov
add
push
outsb
vpmacssdd
inc
popa
enter
rcr
sbbb
inc
jmp
shrl
xlat
lahf
pop
jno
xchg
mov
mov
lret
ss
out
and
dec
add
sub
test
pusha
pop
mov
cmpsb
fwait
mov
xchg
xor
push
sub
nop
rcrb
cmc
or
and
mov
pop
and
insb
mov
rol
jnp
push
pop
push
loopne
inc
pop
cmovg
adc
xor
push
negl
mov
xor
sub
iret
scas
mov
add
decl
add
mov
lret
adc
add
mov
adc
pop
adc
test
shrl
sub
add
mov
mov
add
add
add
adc
in
push
test
cmp
rolb
outsl
insl
jnp
inc
pop
mov
cmp
jns
mov
mov
add
adc
lret
jnp
fldl
or
and
lahf
cmp
shl
push
inc
mov
add
mov
je
repnz
mov
mov
sbb
in
bound
mov
add
lcall
movl
outsl
dec
rcrb
fcmovbe
out
sahf
stos
add
jg
movsl
xlat
aaa
push
jecxz
dec
xlat
push
add
dec
xchg
and
add
add
inc
add
call
in
dec
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
push
pop
jmp
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
push
pop
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
push
pop
loop
lea
mov
test
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
push
pop
jns
movzwl
inc
push
inc
mov
push
call
test
je
mov
add
jmp
call
popa
jmp
