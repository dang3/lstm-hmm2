in
movsb
cmp
outsb
xchg
cmpsb
mov
sbb
xchg
imul
push
out
pushf
push
iret
push
adc
mov
imul
cli
cmp
mov
fidivs
or
mov
and
ds
dec
xchg
movsl
out
arpl
negb
cmpsl
mov
sbb
jnp
daa
push
aam
dec
outsb
adc
fsincos
scas
cs
shlb
xor
xchg
dec
pop
inc
test
into
enter
icebp
jg
rcrl
sub
inc
or
mov
popa
mov
cmp
mov
or
jbe
or
adcb
ds
pop
fs
sbb
mov
addr16
fs
rcr
lcall
in
insb
dec
push
hlt
lods
and
stos
sbb
gs
addb
cmc
js
cmp
enter
sbb
add
daa
imul
mov
stos
pop
mov
clc
adc
xchg
nop
sub
lods
lds
pop
dec
mov
xorl
and
inc
cltd
xchg
std
push
inc
adc
jmp
jge
pop
and
fstps
or
das
xchg
xor
rorb
shlb
adc
aad
xor
adc
and
cmp
add
lock
push
and
pop
lods
mov
sbb
leave
mov
dec
pop
inc
and
pop
mov
out
int3
std
sar
inc
shll
pop
test
pop
ud2
mov
shll
sub
test
push
test
jg
mov
data16
xchg
xlat
fwait
jge
xchg
cmp
repz
lret
pop
sub
inc
aas
adc
les
sub
imul
cltd
leave
inc
mov
mov
pop
xor
out
mov
mov
div
movsb
and
xchg
popa
cli
lfs
imul
push
and
dec
ss
mov
lds
test
xor
mov
iret
fistpll
movsl
sub
data16
mov
mov
insb
push
mov
pop
int3
cmpsl
mov
icebp
pop
xor
jns
hlt
mov
imul
or
xor
pushf
jp
cwtl
aaa
xorl
push
sbb
ret
add
cmc
test
loopne
mov
lret
shll
mov
stos
es
push
jge
push
push
push
fs
and
mov
or
xor
fsubrl
push
sbb
pop
lcall
cltd
stc
rcrl
cli
mov
push
fcompl
stos
into
es
jmp
shll
pop
push
pause
or
insl
daa
push
push
sub
incb
push
out
inc
shll
shrb
dec
sub
mov
cmpl
mov
or
adc
pop
in
mov
ljmp
mov
incl
dec
jle
repz
cmc
sub
mov
push
xchg
popf
cmp
mov
cmp
or
mov
aad
xor
rcr
cmp
in
pop
out
sbb
mov
sub
and
xchg
mov
out
pushf
repz
inc
cmpsl
rorb
out
push
mov
invd
aaa
mov
shrl
cmp
jnp
jns
test
clc
mov
sbb
mov
pop
mov
test
popa
inc
repnz
dec
jno
daa
aas
movsl
mov
mov
pop
mov
push
sub
sbb
and
lret
test
dec
movsl
jp
sub
jge
pusha
out
mov
mov
push
ret
jne
and
xchg
dec
das
sbb
sbb
pop
jnp
les
mov
cs
mov
fisubrs
insb
mov
nop
imul
jl
cmovo
cmp
adc
dec
pop
pop
push
mov
cmp
fmull
pop
ds
and
sarb
and
pop
cwtl
rcrl
mov
push
and
add
cmp
aam
cmp
jbe
out
cld
mov
loope
int3
push
or
popf
sub
js
das
pop
mov
cmp
bound
pop
sahf
jle
xlat
jno
popa
mov
or
mov
sbb
bound
jnp
mov
lock
cmp
rolb
and
push
movsl
push
sub
pop
lret
testb
jno
pop
inc
and
dec
and
and
aam
das
pop
cli
sahf
hlt
into
push
push
rcrl
sbb
jo
sahf
xorb
inc
loopne
mov
dec
out
icebp
jg
enter
adc
dec
inc
fidivrs
pop
aam
sbb
shlb
cli
inc
sti
mov
ror
test
jns
adcl
dec
idivb
pop
clc
push
adcl
faddl
and
or
out
into
imul
addl
out
push
mov
aas
repz
xchg
mov
shlb
adc
lret
adc
jg
and
xor
push
fsubrl
nop
lahf
lret
lret
imull
loopne
scas
jbe
imul
into
push
and
xchg
into
pop
mov
jo
xor
mov
add
adc
push
outsb
xchg
pop
push
dec
pop
or
pushf
shlb
js
xlat
mov
and
mov
inc
fistpl
and
and
push
sbb
loopne
in
scas
in
lds
xchg
cmp
sahf
js
insl
sub
cmc
xchg
lahf
in
icebp
lea
data16
imul
into
add
test
pop
jp
out
fimuls
sub
hlt
int
lock
jnp
notb
out
enter
add
fsubs
mov
inc
hlt
sub
fstps
fdivl
fmuls
cwtl
bound
xor
and
punpckhwd
inc
and
inc
test
push
lock
mov
pop
and
cld
cld
stc
pusha
or
push
mov
pop
push
pop
shr
push
xor
pop
jb
shl
and
clc
cld
lea
nop
push
jo
test
pop
rol
xchg
push
test
pop
jmp
jmp
call
jge
push
call
mov
out
mov
shrd
adc
push
dec
int3
and
sbb
mov
pop
push
sub
pop
mov
js
and
cld
add
or
and
nop
mov
xchg
jmp
cwtl
inc
inc
ss
mov
adc
adc
xchg
push
mov
es
lds
mulb
push
mov
add
sub
jns
push
push
and
pop
pop
push
mov
pop
shl
xor
add
xor
add
or
jnp
rol
cmp
push
and
pop
nop
cld
testl
je
xchg
cmc
push
mov
add
pop
push
sub
pop
jg
jg
push
push
pop
pop
push
jg
push
mov
pop
pop
test
or
cmc
cmc
push
mov
xor
pop
push
sub
pop
push
shl
pop
xor
sub
push
push
push
push
pop
pop
stos
push
push
pop
pop
pop
pop
jmp
xor
push
clc
repnz
in
cld
sbb
in
mov
mov
sbb
inc
and
scas
loopne
movsl
push
push
pop
add
pop
push
xor
pop
push
push
jne
sub
pop
pop
lea
push
call
dec
or
inc
jmp
aaa
or
jae
lahf
in
stos
cmpsb
insb
xlat
or
jle
ja
test
jnp
or
sbb
xchg
mov
lahf
cmc
inc
cltd
movsl
xor
mov
pop
pop
dec
jne
add
jne
push
mov
pop
mov
push
push
push
test
pop
pop
pop
loop
jecxz
in
js
rcll
arpl
lret
jo
jecxz
testl
lahf
in
push
cwtl
fists
clc
dec
sahf
dec
ds
shr
jg
ret
jno
movsb
dec
popf
movsl
pop
clc
sub
and
and
and
push
dec
and
mov
negb
jge
mov
insb
sarb
je
inc
push
call
mov
dec
mov
xchg
inc
mov
mov
push
imul
jno
xchg
and
push
mov
jmp
imul
imul
and
xor
xor
push
dec
data16
icebp
out
iret
aaa
lret
fwait
aas
jb
dec
xlat
fwait
add
imul
test
mov
add
inc
cli
inc
xlat
dec
repnz
mov
inc
into
jecxz
or
xchg
lea
xor
je
jle
push
mov
pop
or
jl
dec
inc
cld
cmc
jne
sbb
lahf
xchg
loop
rcrl
insl
cmp
test
jle
insl
jp
mov
pop
test
xchg
or
push
push
movsb
sub
pop
fsubl
test
or
dec
mov
in
ss
cmp
and
adc
sub
xorl
cmpsb
cmp
push
adc
cwtl
sbbb
mov
repnz
jmp
lds
out
mov
arpl
jnp
scas
pusha
lret
dec
jp
or
nop
aad
ror
pop
inc
mov
imul
outsl
jecxz
mov
xor
cwtl
mov
pusha
imul
insb
aad
cmp
xor
shlb
imul
mov
jmp
mov
mov
loopne
dec
inc
pop
push
lret
rcr
mov
adc
out
idiv
mov
sar
push
out
test
xchg
fwait
or
add
jl
mov
sahf
jg
stos
aad
aam
xchg
out
mov
mov
dec
scas
in
enter
int3
idivl
mov
adc
sub
popa
push
ficoml
daa
shrb
loopne
pop
into
dec
pop
sub
fwait
mov
stc
mov
jecxz
dec
outsl
fcomps
push
jmp
or
mov
ss
mov
gs
mov
adc
into
push
push
mov
jmp
fcoml
lods
push
orl
add
or
pop
mov
fiadds
repnz
sbb
cltd
pop
mov
xlat
enter
inc
dec
sbb
incb
stc
adc
mov
hlt
push
loope
mov
push
pop
pop
mov
std
or
fcmovne
lcall
xlat
test
inc
mov
fwait
mov
inc
push
aas
inc
sbb
add
mov
pop
sahf
push
mov
xor
dec
push
xchg
fsubrs
bound
and
dec
ljmp
in
ljmp
lret
stc
sub
inc
jbe
ljmp
jae
repnz
push
cli
mov
xchg
out
test
fs
sahf
fldenv
mov
sub
stc
add
movsl
in
mov
iret
mov
sbb
dec
das
in
dec
fldcw
pop
mov
jns
imul
aam
adc
push
mov
jmp
ret
cmp
in
mov
int
lcall
xchg
push
push
mov
inc
adc
pop
scas
sbbb
inc
add
mov
or
mov
stos
sub
sub
sahf
in
lcall
data16
pop
imul
inc
addr16
leave
adc
fistpl
pop
mov
fdivr
icebp
pop
pop
repnz
lret
imul
stos
ds
mov
test
mov
lea
fldcw
sbb
and
into
inc
pushf
cmc
cmpsl
insb
scas
cmc
sub
iret
stos
shlb
sub
mov
mov
sbb
ret
addr16
gs
mov
int3
inc
dec
xchg
cmp
push
pop
pop
mov
fcmovb
pusha
inc
data16
call
jne
iret
in
js
mov
dec
mov
in
jge
cli
sti
mov
mov
jecxz
pop
xorb
fisttpll
cltd
ret
dec
jg
and
daa
sub
mov
pop
sub
test
cltd
mov
rcl
imul
jnp
icebp
popf
aad
pop
push
mov
les
into
mov
and
mov
jb
lock
imul
cmp
mov
jp
scas
lock
pusha
sbb
lret
sar
aam
fdivrs
add
pop
dec
push
repnz
sub
adc
inc
daa
adc
aad
xor
rorl
call
aam
mov
xor
push
mov
and
dec
mov
pmulhuw
fisttps
ret
int3
gs
clc
mov
in
inc
jmp
jo
loop
add
stos
icebp
add
cmp
rcrl
call
xchg
enter
ret
ljmp
jmp
rclb
stos
jmp
sub
jecxz
fcomps
mov
cs
rol
ja
imul
mov
pop
or
andl
inc
push
add
mov
imul
inc
lret
push
or
repnz
adc
and
cmpb
lods
sbb
xlat
jg
popf
je
leave
pop
dec
add
loopne
mov
dec
sub
in
jae
mov
cwtl
jp
jp
mov
fldl2e
lahf
sub
jb
shrb
or
shrb
ret
pop
mov
fbld
idivb
stc
ds
push
cltd
jb
mov
add
sub
dec
jns
fistpl
aad
mov
jge
daa
sub
or
dec
fmul
xor
jno
mov
into
xor
ss
lret
sub
inc
lahf
sbb
lahf
clc
dec
sbb
inc
test
sarl
cs
jbe
idivb
add
fildll
repz
into
in
xorb
lcall
xchg
sbb
hlt
mov
dec
test
cmp
sub
repz
jmp
loopne
dec
roll
pushl
jo
dec
fstpt
sub
xchg
lahf
fistpl
mov
and
jp
push
mov
test
xchg
pop
inc
movsb
nop
cmp
sbb
aam
loopne
sub
cmp
ret
test
insb
popa
clc
mov
xor
cmp
dec
mov
xor
aas
mov
mov
cli
sub
and
and
or
lret
dec
std
cltd
pushf
or
fistpll
sub
stc
gs
inc
bound
add
clc
lcall
mov
mov
leave
outsl
and
mov
cmc
mov
out
int3
inc
mov
rcrl
stos
test
xlat
inc
mov
movsl
pop
cmpsb
inc
dec
ds
jle
adc
jmp
icebp
mov
pop
mov
insb
sahf
xor
sti
je
cmpsb
mov
mov
mov
xchg
test
pop
fcmovne
fnsave
mov
adc
inc
adc
movsb
pushf
xchg
ret
rcl
cwtl
ljmp
xor
dec
or
sub
cwtl
fcoms
stc
lods
imul
aad
or
jl
and
dec
cmp
pop
dec
fwait
sbbl
aaa
lahf
mov
jbe
inc
call
adc
or
sar
dec
sbb
jo
je
sbb
vpinsrw
fs
pop
in
mov
iret
add
jmp
in
sbbb
rcll
dec
rorl
dec
mov
adc
lret
rclb
fs
jns
and
inc
add
pusha
mov
testb
fsts
cmpl
orb
pop
loop
jne
jmp
xchg
insb
lds
gs
pushf
pop
xor
imul
adc
push
ljmp
aam
xchg
fwait
mov
inc
or
lahf
xlat
push
dec
jno
mov
cmp
loop
mov
int
test
and
mov
pop
sbb
sub
les
xor
aas
insl
add
jno
push
sub
fwait
sub
jmp
mov
xchg
loope
shrl
mov
pop
ret
test
fdivs
pop
jge
out
das
hlt
repz
arpl
js
mov
mov
iret
stos
mov
and
mov
imul
sbb
and
sarl
adc
xor
sbb
repnz
clc
dec
ds
int3
mov
out
test
ror
xor
je
icebp
add
shll
mov
jb
xchg
jmp
jne
mov
in
lcall
movsb
cs
pop
sbb
mov
inc
jns
jg
lcall
and
push
adc
sub
cmp
xor
mov
add
and
mov
and
jle
adc
jge
jne
int
cmp
ja
enter
test
iret
adc
mov
iret
dec
mov
cwtl
ret
xor
cmpb
sarl
out
mov
dec
mov
sbb
out
xchg
add
out
scas
ret
add
mov
inc
fs
inc
test
xchg
xor
xor
cmpb
stc
enter
mov
imul
out
pop
iret
ret
jae
mov
jne
lret
leave
dec
mov
adc
dec
cld
cmpsb
xlat
and
insb
add
mov
sub
xchg
push
xlat
mov
cmc
mov
dec
aas
sbb
scas
jo
add
inc
dec
aaa
xlat
lret
xchg
add
jno
xor
xchg
divl
mov
out
inc
fstpt
dec
lret
mov
outsb
out
inc
jne
mov
nop
sub
cld
adc
je
out
pop
mov
fdivrl
das
pop
pop
xchg
adc
mov
mov
push
xchg
insb
bound
cmp
out
mov
or
stos
inc
lahf
leave
inc
ret
movsl
pop
loopne
daa
mov
fwait
int
xchg
fcomps
imul
xchg
aam
add
sub
pop
rolb
mov
push
inc
addl
nop
adc
mov
jmp
dec
iret
movb
dec
fcoml
sbbl
add
push
push
sub
mov
mov
add
gs
mov
lahf
push
lods
sub
imul
xchg
aaa
inc
cmpb
and
ret
sbb
lods
jmp
mov
ret
lea
or
sbb
pushf
adc
data16
fucomp
out
push
pop
jnp
leave
rol
mov
mov
out
add
add
je
lods
inc
insb
call
adcb
movsb
incl
xacquire
fs
cmp
jle
mov
lock
pop
push
std
into
aas
rcrb
cld
adc
cs
pop
fisttpll
inc
negl
jl
in
insl
leave
fwait
fwait
mov
test
push
mov
jge
mov
fwait
sbb
bound
adc
push
outsl
sbb
mov
jge
rclb
lds
lods
andb
jns
pop
sbb
xor
ds
aaa
psubsb
lret
mov
pop
jns
insb
vunpckhps
xchg
incl
nop
push
push
les
mov
cmp
jle
in
lods
into
xchg
mov
aam
dec
loope
lods
inc
ljmp
mov
inc
mov
pop
shlb
loop
cltd
xchg
jecxz
jg
aam
cmp
std
stc
jns
ja
or
popa
push
push
dec
mov
mov
mov
sub
fdivrl
das
mov
ljmp
outsl
and
movsb
js
testb
insb
xchg
mov
jg
loopne
sub
js
adc
clc
adc
dec
mov
dec
and
cmc
cmp
lahf
cmpsl
pop
lea
fnstsw
lods
wbinvd
loope
cmpsl
and
xchg
mov
movsl
data16
out
and
fidivl
rclb
add
fdivs
loop
insl
inc
hlt
inc
in
cmp
mov
push
imul
jb
xchg
loope
stc
imul
add
mov
rcll
xchg
addr16
jne
lods
adc
and
push
es
sbb
je
push
xchg
cmp
ds
sbb
pop
xchg
mov
pop
cmp
imul
mov
or
fisubl
xor
aas
mov
jl
pop
mov
push
jp
pop
movl
andb
lahf
mov
jle
jecxz
mov
in
xchg
int
jg
cmp
imul
or
jg
mov
mov
adc
fiadds
ljmp
int3
lea
or
pop
in
mov
pop
mov
mov
fs
mov
repnz
loop
mov
xrelease
jp
test
push
fstp
inc
jnp
or
xor
dec
addr16
in
mov
in
push
sub
int
std
sbb
mov
daa
or
xor
add
jmp
mov
push
mov
and
pushf
loopne
xor
adc
dec
into
mov
adc
push
pusha
lret
and
pop
xor
test
cmp
fisubs
lds
sub
sub
lahf
lock
push
jns
dec
into
sub
outsb
push
in
dec
push
aad
push
inc
jnp
xchg
jmp
inc
repz
bound
push
cmpb
pusha
orb
dec
add
push
xlat
or
inc
ret
cld
aaa
mov
xor
mov
aad
sub
das
sub
aad
sub
sbb
andl
mov
pop
les
insb
mul
test
icebp
jmp
mov
jbe
inc
cmpsl
mov
or
mov
hlt
pop
inc
pop
lock
movsl
mov
loope
test
outsb
pop
or
pop
mov
rcll
or
mov
or
pusha
or
mov
jb
psllq
adc
inc
mov
adc
inc
adc
jmp
sbb
jmp
cmp
and
pop
cmc
jle
fstp
mov
pop
sub
add
mov
or
jge
fwait
xchg
dec
and
xchg
inc
inc
es
dec
push
loope
lret
sbb
je
sahf
rclb
shl
cmp
stc
mov
mov
adc
mov
xchg
push
lret
arpl
enter
mov
jne
std
mov
movsl
mov
pop
pop
mov
lret
cwtl
jle
popf
lods
mov
mov
mov
sbb
xchg
add
je
leave
xorl
sbb
pop
fists
fcmovbe
inc
mov
test
jl
pusha
iret
popf
cli
gs
xor
push
icebp
jl
mov
pushf
pushf
scas
xor
pop
adc
mov
xchg
push
mov
in
sbb
ret
dec
call
ret
adc
int3
pusha
mov
cmp
and
lret
xchg
cltd
jb
dec
adc
int
xchg
adc
adc
mov
fnstcw
lds
push
xor
sub
fldt
pop
jecxz
add
fisttpl
bound
ja,pn
mov
daa
iret
movsl
pusha
adc
test
adc
cli
and
pop
ljmp
gs
lret
rcr
mov
sub
rcrl
add
rcll
jns
mov
loope
hlt
push
insb
aas
sti
adc
pop
subl
lret
xchg
in
push
jo
jp
mov
jg
js
loope
xor
lods
sbb
ljmp
scas
dec
xchg
popa
sub
jle
mov
and
fcoml
xchg
sbb
and
mov
loope
shll
shlb
scas
push
les
mov
push
jmp
mov
fidivl
inc
repnz
xchg
xchg
test
mov
movsl
push
and
rcl
adc
fimuls
loopne
roll
loope
mov
jno
scas
out
popf
daa
inc
bound
out
and
cs
add
push
adc
jg
leave
andnps
xor
sbb
pop
fistpll
dec
mov
scas
in
pop
xor
loop
xor
cmpsb
stos
sub
dec
cmp
push
les
jne
cld
fldl
mov
dec
xchg
iret
out
push
sbb
lods
aas
inc
movsb
jp
scas
or
pop
es
mov
mov
mov
das
imul
stos
aaa
into
scas
and
xorb
fxsave
pop
xchg
xchg
repnz
add
in
std
cmp
mov
stos
jae
loop
outsb
imul
stc
pushf
pop
jo
dec
push
loope
inc
xor
adc
ss
repnz
xchg
cmp
pusha
nop
xor
fidivrs
cmpsl
push
into
lds
pop
loope
in
mov
fstpt
mov
push
fimuls
mov
movsb
mov
scas
inc
sahf
aas
les
out
mov
dec
jp
jge
cs
or
mov
loop
mov
jge
mov
js
xchg
arpl
mov
xorb
pop
imul
int
cmp
ss
lds
sahf
aaa
leave
pop
lret
mov
or
ss
test
xor
and
icebp
sbb
repnz
out
and
sub
adc
pusha
sti
shrl
mov
cmpsl
pop
rcl
cmp
outsl
mov
mov
cli
into
jbe
icebp
imul
into
pop
call
pop
fs
shrl
add
inc
loop
xor
mov
mov
frstor
jp
mov
mov
mov
pushf
dec
into
call
fadds
pop
xchg
and
and
enter
vprotq
clc
outsb
adcl
rcr
data16
add
mov
cwtl
push
ffree
inc
and
sub
dec
mov
pop
popf
arpl
push
jecxz
jle
xorl
les
inc
faddl
dec
xchg
inc
fcomps
icebp
movsb
jle
pop
mov
pushf
push
xchg
leave
lahf
mov
arpl
xchg
dec
or
fwait
push
adc
inc
les
adc
fisubs
and
cld
cwtl
les
pop
mov
mov
cli
fwait
add
pop
int3
ds
dec
fidivrl
mov
mov
xor
into
inc
stc
mov
mov
adc
push
xor
sub
mov
pop
insb
mov
push
lods
shr
movb
jbe
fsub
out
out
imul
dec
adc
jecxz
arpl
mov
lret
clc
inc
cltd
pop
xchg
push
pop
in
add
insb
or
leave
test
add
imul
mov
xchg
push
or
dec
add
fsubr
cwtl
mov
out
int
cmp
mov
pop
enter
rclb
or
in
xchg
mov
cmpsb
sbb
mov
call
push
fcmove
jne
and
push
xchg
adc
arpl
js
pop
es
sub
mov
sti
add
sbb
rolb
scas
incb
ret
mov
inc
fildll
imul
or
mov
ljmp
cmp
pop
push
jmp
adc
in
sub
add
in
into
mov
and
out
push
mov
daa
leave
in
test
mov
mov
and
out
mov
adc
orl
dec
jns
nop
cli
out
mov
and
mov
inc
push
addl
icebp
cmp
cwtl
dec
sarb
pop
jo
push
sbb
pop
xor
mov
hlt
pop
dec
pop
cmp
out
dec
outsl
int3
stos
mov
idivl
ljmp
dec
pop
sti
shrl
lret
add
dec
ret
int
fnstcw
shrl
arpl
sahf
insl
inc
sbb
mov
push
ds
mov
ret
add
lcall
sbb
dec
dec
and
pop
cmpsb
mov
inc
loopne
xchg
imul
call
cmp
jno
test
iret
push
cmp
loope
int
fsubs
dec
add
xchg
sub
mov
jg
int3
adc
fcomps
inc
sar
pop
cmp
incl
roll
out
sub
cmp
sub
push
fs
pop
pop
int3
mov
lret
outsl
aaa
stos
stos
mov
mov
cmp
add
adc
mov
mov
jmp
push
or
rclb
lea
and
jge
xchg
jne
xor
aam
xor
pushf
mov
addr16
mov
or
pop
imul
out
cli
mov
or
dec
lret
test
int
inc
cmpsl
cwtl
sub
ljmp
push
jp
sbb
ja
xor
push
pop
insb
cld
jne
mov
into
jae
add
xor
pop
jb
add
or
dec
into
test
invd
pusha
xor
jnp
inc
add
jg
lea
xchg
fwait
test
aad
in
or
into
adc
div
pop
outsb
movsl
loopne
adcb
push
push
rcrb
xchg
das
loop
sbb
xchg
mov
adc
adc
outsl
mov
mov
lahf
cwtl
aad
add
ds
pusha
xchg
adc
clc
inc
push
subb
xlat
cmp
dec
sub
xchg
pop
sbb
shr
xor
in
add
and
das
mov
sub
xchg
int3
ret
xchg
in
and
fbstp
and
daa
jns
mov
xlat
fimull
push
pop
sbb
jb
sahf
xchg
sti
iret
scas
aam
test
push
into
and
inc
push
call
popf
mov
jae
aas
fistl
adc
dec
scas
mov
and
jne
lods
pop
adc
out
rolb
inc
loop
xchg
adc
pop
push
scas
cmp
mov
nop
and
outsb
lahf
pop
pop
mov
pop
jle
lea
jg
lock
dec
and
pop
out
and
aad
mov
fs
adc
pop
cmpsb
adc
cltd
jbe
das
dec
xchg
hlt
idivl
or
cwtl
sbb
into
dec
lcall
inc
jge
lahf
dec
jg
push
mov
repz
int
inc
mov
xor
cmp
ret
ret
int
mov
xlat
dec
mov
lret
pop
sbb
mov
push
pop
fisttpll
jnp
add
dec
mov
aad
sbb
xchg
cmp
rolb
and
aas
mov
rolb
dec
mov
jne
lock
mov
pop
push
aam
outsl
add
sbb
jg
mov
adc
cmp
out
jae
rclb
pop
jbe
das
push
inc
mov
addb
fisubs
test
out
hlt
inc
inc
and
pop
mov
cmc
cmp
lahf
in
mov
ret
repz
mov
push
mov
pop
jle
adc
xchg
lret
cld
lods
push
adc
jg
lods
mov
cmp
xchg
popa
into
xchg
stc
mov
mov
and
cmp
sahf
dec
inc
and
movsb
dec
fcompl
pop
inc
cmpl
std
pop
mov
jp
inc
push
div
idivl
push
addr16
inc
or
jno
cmp
fwait
mov
dec
jns
stc
bound
jp,pn
call
xchg
stos
rclb
jnp
or
test
aad
mov
pop
cmp
mov
cli
cmc
jb
imul
push
in
bnd
xchg
minps
mov
stc
xor
fisubl
fistpl
loop
insl
int3
rclb
xchg
loop
outsb
mov
dec
fiaddl
jmp
mov
clc
add
out
in
lock
aaa
add
fwait
js,pn
and
fs
add
sub
sbb
mov
fisubrs
cltd
ret
jmp
mov
insb
out
dec
imul
cwtl
cs
inc
push
out
xlat
xor
lret
push
adc
sbb
lds
dec
mov
sbb
out
cli
jns
stos
sbb
xor
and
fcmovnb
xchg
xor
lods
je
xchg
add
dec
jns
pop
loope
das
xchg
dec
jp
jle
cs
mov
adc
mov
mov
mov
jbe
gs
stc
or
test
cmp
mov
testb
mull
clc
arpl
movsl
adc
xor
icebp
xor
sbb
lret
sbb
fdivrs
pop
lret
push
out
adc
cmpsl
iret
xor
stos
loop
inc
fsubs
and
daa
inc
add
cmp
movsl
inc
cli
mov
mov
sub
outsb
push
lds
imul
sahf
das
arpl
ret
aam
xor
jo
scas
xor
mov
test
pop
or
add
jmp
push
imul
adc
inc
sahf
addb
dec
jp
lret
int3
es
insb
fwait
hlt
sbb
aad
out
mov
mov
inc
and
xchg
jae
and
enter
stos
mov
fs
out
insl
xchg
mov
pop
rorb
pop
or
pop
mov
mov
mov
mov
fsubrs
sahf
repz
ljmp
clc
push
mov
scas
sub
jnp
cmc
jae
cmp
stos
inc
jae
sbb
fisubl
in
pushf
cwtl
or
or
xor
push
dec
cmp
xchg
cmp
xrstors
popa
add
les
repnz
insb
lcall
jne
mov
inc
fcmovbe
mov
loop
mov
outsl
repnz
cltd
outsb
xor
adc
adc
outsl
insl
add
loope
inc
fwait
jecxz
adcb
cmp
xchg
add
cmp
in
cli
int3
dec
out
hlt
add
push
sub
mov
and
out
inc
into
enter
add
adc
mov
push
xchg
fwait
add
test
rcrb
or
inc
and
sti
sub
in
pop
imul
sti
inc
subl
jno
mov
jae
pop
sti
fwait
rorb
push
pop
jle
xchg
jae
fwait
cmp
int
mov
adc
ja
mov
out
cmpsb
push
xchg
in
lods
push
leave
pop
in
lock
mov
jo
xchg
add
lret
xor
shlb
jg
dec
test
sbb
shlb
cmpsl
jmp
pusha
adc
and
mov
imul
mov
sarb
cmp
cmpsb
xchg
sub
movsb
out
pop
mov
fildl
and
ds
lret
mov
jno
pop
out
subl
ss
inc
or
ror
data16
xchg
nop
rol
sar
jge
jb
int3
ret
test
jbe
xor
sub
data16
cli
mov
and
popa
in
push
pop
jp
jg
out
jmp
fwait
repnz
add
xor
lds
xchg
cmpsb
mov
xor
push
popa
movsl
xchg
cmp
dec
mov
or
xor
iret
int3
fdivrl
inc
rcll
mov
in
pop
outsl
push
hlt
cld
inc
push
mov
mov
gs
divb
pop
cmc
sti
or
xchg
outsb
aad
cmpsl
iret
mov
adc
adc
mov
sub
jmp
pop
mov
mov
and
icebp
mov
mov
xor
pop
int3
insb
add
mov
inc
jmp
aas
jle
loope
jle
inc
jle
cli
out
push
cmp
lahf
std
add
add
xor
sub
jecxz
cld
das
aam
jge
mov
jbe
cmc
addr16
push
mov
lret
hlt
stc
out
int
pop
scas
cmp
int
mov
addr16
testl
xlat
add
pop
push
int3
dec
cmc
daa
mov
insl
push
shrb
arpl
inc
jno
pop
cmp
xor
dec
scas
cmpsl
nop
pushf
push
js
shl
pop
mov
pop
in
mov
sbb
and
sarl
cmp
sub
jo
fsub
push
pop
cmp
scas
call
iret
sbb
fsts
add
pop
add
fdiv
mov
test
movsl
mov
je
test
imul
cltd
xlat
lahf
dec
out
mov
iret
gs
fsubs
fidivrs
sub
popa
cvttps2pi
mov
sub
arpl
xchg
sub
jno
in
imul
into
xor
jns
pop
mov
xor
add
jb
sub
outsb
push
call
and
outsb
and
sub
dec
or
xor
mov
cmpsb
jno
scas
out
mov
aad
rolb
hlt
lcall
repnz
jle
movsb
outsl
sbb
push
sub
xchg
xchg
dec
or
and
dec
mov
test
mov
fidivrl
mov
mov
pop
test
push
jecxz
add
push
jns
cmp
jl
scas
jno
gs
sahf
cld
push
push
aas
ret
imul
push
rcrb
imul
xor
and
cmp
dec
incl
push
test
and
add
sbb
add
cld
jge
dec
imul
xor
xor
ds
fs
jecxz
jge
lahf
lods
and
inc
call
jns
adc
fistpll
jnp
cwtl
cmpl
jno
mov
les
add
incl
sub
mov
call
inc
jmp
jno
adc
test
push
lcall
addr16
mov
pusha
lods
out
insl
cmp
xor
inc
pop
pop
dec
aas
dec
aaa
mov
jae
xchg
mov
dec
or
add
mov
mov
jnp
fcom
lret
stc
imul
xchg
mov
insb
xchg
dec
pop
mov
test
and
push
in
xchg
lcall
and
imul
sub
xchg
std
xchg
out
pop
and
scas
fcmovnb
push
insb
ficoml
ljmp
xorl
mov
loopne
xchg
mov
out
cwtl
scas
xor
or
addr16
jl
dec
imul
dec
ret
lock
lcall
es
mov
push
scas
mov
lds
sahf
fnstenv
jnp
leave
or
ss
movsl
ja
inc
or
dec
pop
sub
mov
mov
pop
nop
lds
xchg
mov
mov
push
xchg
loopne
mov
clc
sub
or
sbb
fisubl
mov
data16
xchg
mov
mov
xchg
icebp
mov
pop
adc
xchg
cwtl
rorb
jbe
cmp
pop
xchg
sarb
lret
push
stos
clc
jle
mulb
inc
movsb
dec
pop
jle
mov
push
into
xchg
cld
push
aam
pop
jle
lods
jge
test
dec
scas
les
inc
add
movsl
cmp
cmp
mov
mov
sahf
enter
mov
popf
dec
cs
cmpsb
lret
adc
std
test
idivl
or
inc
add
pop
inc
ja
mull
inc
inc
add
scas
cmpsl
cli
pop
sahf
sbb
xor
insb
push
sbb
push
mov
pop
cmpsl
loopne
popa
jecxz
mov
scas
ret
aad
push
out
mov
das
bound
stc
sub
leave
and
ljmp
lahf
out
sbb
sub
cltd
in
popa
jmp
fldl
arpl
sbb
push
dec
mov
jo
cli
dec
cmpb
push
data16
pop
add
movsb
test
xor
and
mov
enter
adc
popf
xchg
pop
cmp
je
dec
je
test
imul
xchg
mov
xchg
imul
dec
lods
lcall
icebp
pop
gs
iret
sti
ja
pusha
mov
jl
pop
push
jg
int3
jne
mov
cltd
mov
adc
xor
mov
and
inc
push
push
mov
mov
ds
je
aaa
inc
or
repnz
inc
pop
test
scas
dec
jecxz
xchg
rcrl
jno
dec
fcomps
sahf
out
or
les
cli
cmpsb
mov
and
push
dec
or
inc
mov
test
in
jnp
mov
sbb
arpl
sub
adcl
fucomp
icebp
or
sbb
jo
dec
scas
and
aad
lcall
inc
adc
ljmp
push
and
cwtl
cmpb
scas
mov
or
aad
mov
add
mov
mov
sub
pusha
xor
dec
repz
push
pop
sbb
int3
stc
in
iret
mov
lea
push
shlb
mov
imul
xor
inc
or
faddl
test
and
out
cmpsb
ret
inc
test
sbb
mov
aas
out
fsts
sbbl
pop
or
xchg
orb
inc
jp
mov
dec
aas
sbb
add
mov
outsl
sbb
ret
and
repz
cld
fstpl
scas
mov
inc
imul
cmp
mov
outsl
and
and
push
gs
into
shll
mov
jnp
cmp
orl
and
mov
push
cmp
scas
pop
mov
popa
or
stos
lret
push
adc
mov
sbb
ret
testl
push
rorb
sbb
out
xorb
inc
sbb
lds
add
xor
inc
faddl
dec
dec
ret
or
push
mov
aaa
and
mov
fcomps
int3
aaa
xor
xchg
ljmp
loop
data16
mov
mov
push
sbb
mov
cs
xor
in
xorb
push
lock
adc
push
inc
sbb
lods
inc
movsl
test
pusha
jo
das
in
cmpsl
cmc
mov
and
and
and
in
inc
dec
lahf
fsts
in
inc
pop
lret
cmpsb
sub
push
lods
movsb
cmp
fwait
or
cmpsb
inc
loope
or
popf
int
loop
insb
pslld
pushf
stos
ljmp
aam
mov
mov
sub
mov
cmc
mov
out
cmpl
loop
repz
aad
mov
dec
sti
stc
stos
popa
fisttpll
pop
leave
shl
jecxz
push
mov
clc
fbstp
jae
lea
mov
adc
add
scas
jns
push
push
fdiv
loop
xor
js
leave
adc
clc
shrl
add
ss
pop
ret
cltd
andl
push
insl
cmp
dec
or
aas
pop
add
and
pop
mul
jbe
std
leave
divb
repnz
add
push
mov
fnstsw
aaa
int
adc
addr16
stc
call
loope
inc
pop
iret
xchg
ret
clc
push
dec
push
fwait
cmc
hlt
fisttpll
stc
mov
cmp
cwtl
pop
icebp
jnp
ficomps
pushw
add
test
leave
mov
hlt
cmp
cmp
push
aas
sbb
jge
or
cmc
sub
pop
or
pop
xchg
mov
mov
push
push
scas
xor
push
or
es
lret
ret
sub
xchg
fcoms
arpl
cmpsl
inc
mov
lds
jp
adc
iret
imul
or
sbb
rolb
imul
add
cmpsb
mov
int3
push
sub
fstpt
inc
bound
push
sbb
sahf
xchg
sbb
out
test
outsb
sbb
scas
push
dec
aaa
jle
inc
inc
push
fldcw
lods
fiaddl
or
jb
push
inc
jecxz
fidivrs
cwtl
dec
pusha
pop
cmp
ljmp
std
sar
pop
xchg
and
shll
sbb
mov
loop
out
pop
pop
clc
popf
sbb
test
sub
je
sub
jl
lret
je
dec
cmpsb
jmp
inc
jmp
test
mov
xor
rorb
sub
adc
dec
jo
cmpsl
fisubl
int
jne
test
xchg
or
fildl
cmpsb
adc
mov
ss
add
or
mov
in
jp
push
idivl
fsubr
sbb
in
xlat
mov
inc
insl
dec
lods
rclb
jl
aam
test
rorb
mov
dec
adc
mov
lcall
pop
mov
sahf
dec
dec
add
adc
add
cmpsb
sub
xchg
inc
mov
imul
add
lahf
jb
xchg
sub
xchg
pop
mov
sbb
jno
mov
pop
pop
sbb
fmuls
cmp
push
inc
jmp
ds
xchg
pop
push
mov
adc
ljmp
adc
or
pop
xor
lret
subb
push
xchg
fisubrs
pushf
push
ficoms
adc
adc
fwait
inc
pop
xchg
adc
adc
pop
into
pop
mov
cs
cs
test
les
mov
rclb
lock
test
mov
add
cmp
mulb
or
pusha
scas
or
sub
push
add
dec
sub
pushf
push
jo
xorl
push
adc
lret
dec
ja
dec
dec
mov
inc
popf
loopne
jl
sbb
insb
xor
out
and
stos
jbe
mov
pop
or
jl
out
jmp
adc
mov
std
pop
or
cli
loop
outsb
rorb
and
push
xchg
adc
pop
ret
filds
xor
int3
sub
fisubrl
fidivs
mulb
jne
nop
pop
cmc
pop
cmp
sub
pop
mov
cmpsb
jno
push
mov
insb
adc
jnp
cmp
xor
arpl
enter
jb
enter
out
stos
mov
xor
faddl
adc
xchg
push
rcll
test
add
filds
or
ss
push
adc
jp
dec
xor
test
push
inc
lea
in
cli
enter
orl
mov
sti
test
iret
pop
addr16
das
repnz
hlt
sub
pop
xor
mov
cmp
leave
mov
out
xlat
xchg
mov
jae
lock
push
in
stos
or
add
jns
std
fiaddl
in
pop
add
sbb
sbb
sub
imul
mov
mov
scas
xchg
js
mov
pop
add
pop
adc
sub
int
xor
mov
addr16
mov
filds
ljmp
xor
push
mov
cmp
shlb
shr
push
lods
in
dec
out
popa
jns
nop
rol
scas
adc
jmp
sub
and
inc
out
mov
inc
aad
call
push
pop
xchg
and
scas
stc
lret
fidivrl
mov
inc
nop
or
inc
dec
cmc
addl
outsl
aaa
cmp
xor
mov
adc
lds
icebp
jb
push
jge
pushf
and
mov
pop
leave
mov
cbtw
push
mov
mov
adc
lret
pop
loopne
movsb
jg
pop
sub
or
mov
int
lea
dec
sbb
cmpsl
pop
scas
ljmp
sub
sbb
ss
leave
rcrl
cs
nop
mov
push
ja
mov
mov
call
imul
mov
cmp
aas
insb
popa
xor
jo
pop
repz
jp
inc
rclb
pop
sbb
aad
fildll
jnp
push
filds
adc
loop
mov
push
sbb
xchg
jg
or
xchg
jnp
xchg
or
push
sbb
test
push
push
mov
clc
mov
hlt
xchg
add
shrb
das
clc
mov
jmp
ret
cmp
call
mov
insl
jnp
xor
mov
ret
idiv
xor
cmpsl
push
adc
or
inc
lods
jno
repnz
ret
in
jle
sub
cmp
jge
faddl
rolb
mov
clc
sahf
enter
loope
mov
bound
add
mov
mov
ljmp
sbb
ss
inc
jo
incl
mov
inc
inc
cld
xor
xchg
xlat
xor
sub
dec
repnz
cmp
ljmp
or
pop
dec
data16
cs
dec
pop
aaa
push
faddl
test
jg
xchg
add
jmp
or
sub
jle
add
in
stos
push
ljmp
pusha
test
fbld
pop
hlt
mov
xor
cmp
jmp
cmpsl
aaa
hlt
push
push
gs
ds
pop
push
pop
les
lea
xchg
cmp
popa
lret
insb
cmp
stos
inc
out
fisubrl
inc
inc
cmc
decl
mov
je
mov
lods
pop
jno
sbb
xchg
sub
sbb
push
pop
add
add
dec
mov
xor
loope
fistps
test
sarl
cmp
adc
sub
mov
aam
stos
mov
cmp
mov
mov
nop
cs
ss
lcall
jb
mov
and
nopl
dec
push
stos
sub
cmp
mov
mov
js
adc
cwtl
imul
jmp
stc
enter
stos
and
dec
xor
sub
mov
cmc
jbe
cmpb
or
notl
push
push
outsb
and
incl
sbb
sbb
aad
outsl
inc
inc
pop
popa
mov
aad
fld
lods
cld
ret
out
js
mov
cmc
loopne
cmp
inc
jmp
pop
fdivrs
test
std
enter
movsb
mov
popa
jp
adc
nop
mov
pop
in
lret
leave
inc
fnstcw
cmpb
add
in
and
mov
imul
xchg
popf
sti
dec
test
dec
fnsave
sbb
bound
push
push
add
adcl
sub
inc
sub
sbb
negb
and
jle
push
cmovne
xor
jmp
inc
mov
sbb
ret
inc
mov
jbe
sub
pop
mov
into
pop
test
xchg
inc
inc
fisubs
pop
dec
xchg
test
pop
test
xlat
xchg
add
setbe
dec
and
cmp
push
cmpsl
loopne
sbb
hlt
add
pop
jns
jo
xchg
push
mov
loopne
pop
and
ja
jmp
out
loopne
mov
rorb
add
xlat
iret
sbb
outsb
cmp
inc
push
cmp
adc
cmp
mov
sbb
aam
outsb
mov
shl
sub
mov
mov
pop
lcall
lods
out
mov
dec
imul
fwait
out
dec
daa
lods
in
test
mov
pop
sub
cmp
xor
jb
addl
add
or
fwait
movsl
mov
test
andl
ret
push
mov
push
and
fidivrs
ret
xor
sbb
push
out
cwtl
mov
jp
and
leave
dec
sub
xor
sbb
jecxz
xor
cld
shl
js
or
add
mov
ds
mov
cmp
cmpsb
das
out
jnp
inc
pop
sub
test
jecxz
jge
sub
int3
jle
jge
or
push
and
pop
sub
or
call
sbb
mov
ret
cwtl
fdivrl
push
insl
cmp
inc
and
inc
je
lock
scas
xor
lret
daa
ret
mov
adc
leave
add
insb
lcall
adc
int
mov
jecxz
and
andb
mov
cmpsl
xor
mov
push
jg
lds
or
ja
pop
jecxz
pop
bnd
add
or
mov
std
lret
mov
nop
idiv
dec
pop
mov
inc
setae
cmp
push
dec
cmp
xchg
mov
nop
xchg
dec
jmp
insb
sub
repnz
incb
cmc
mov
addb
or
jmp
sbb
sti
enter
or
bound
mov
mov
xor
outsb
out
call
ja
lret
enter
cmp
push
mov
add
idivl
mov
cmp
les
sbb
sub
shlb
inc
cltd
in
jae
add
adc
out
mov
jge
mov
add
sbb
dec
mov
jae
or
enter
pop
fsubs
cmp
sbb
addb
mov
jl
add
testb
jp
in
sub
test
aaa
in
xchg
mov
jg
lret
push
out
dec
jecxz
pop
sbb
pushw
clc
movsb
in
mov
es
pcmpeqb
xor
add
mov
push
into
lods
into
xchg
popf
xor
iret
push
inc
imul
fists
scas
lods
jo
rorb
jo
scas
rclb
or
xchg
ds
arpl
pop
and
jmp
adcl
insl
cli
lock
stc
adc
jge
push
mov
mov
xor
mov
ffreep
gs
jno
shlb
popa
mov
mov
outsb
mov
arpl
mov
sub
cmp
in
xlat
orb
jno
loop
cmp
push
ficoms
orb
fadd
mov
inc
jp
adc
mov
mov
lahf
fildl
mov
adc
jnp
xor
pushf
insb
clc
repnz
sahf
or
sarl
mov
jecxz
push
cmp
dec
jne
xchg
arpl
mov
mov
loopne
pop
scas
cltd
cli
movsl
or
sub
pop
addr16
dec
xor
adcb
mov
mov
mov
stos
cld
dec
callw
fsubl
rorb
test
loopne
or
in
shl
cmp
add
cmp
adc
inc
mov
sbb
hlt
lea
inc
mov
js
push
cmp
js
fidivrs
cmpsb
push
pop
sub
orl
loopne
mov
addr16
into
push
pop
jge
cmp
xchg
mov
sbb
inc
push
jbe
push
sub
jecxz
imull
out
loopne
lahf
and
push
push
cli
mov
xor
or
test
negl
mov
pop
adc
rorl
loopne
fisttps
pop
mov
push
mov
mov
sar
lret
adc
xchg
xchg
rclb
enter
jbe
jecxz
pop
jg
fiaddl
scas
inc
mov
das
mov
lods
ss
gs
add
insl
cwtl
fidivl
push
sbb
pop
sti
shrl
add
jmp
push
adc
inc
cld
inc
aaa
sbb
lds
cmc
mov
cmp
rcll
add
movsb
sbb
jbe
hlt
or
cmp
arpl
bound
dec
inc
mov
cmpsl
mov
xor
stc
dec
sarl
jno
arpl
cmc
fldl
mov
mov
pop
sub
ja
cmp
dec
out
push
xlat
jbe
pop
mov
arpl
scas
js
mov
adc
test
adc
sub
push
fwait
jle
lahf
push
cltd
stos
cld
push
sub
inc
ret
push
mov
xor
mov
popf
jo
in
mov
push
cmp
xlat
fwait
cmp
imull
out
mov
ret
adc
test
cld
push
mov
adc
inc
mov
lods
addr16
test
xchg
scas
fstl
sub
sub
and
mull
adc
sbb
push
inc
mov
or
xorl
pop
push
add
rorl
addr16
mov
jge
push
jb
fistpl
out
sbb
mov
inc
push
mov
xchg
mov
pop
cwtl
mov
jb
inc
push
repnz
push
push
jg
xchg
mov
mov
loopne
dec
xchg
pop
les
mov
sub
shlb
les
push
enter
out
es
sbb
xchg
pop
pop
test
stos
jecxz
scas
iret
aaa
push
js
xor
mov
faddl
inc
xchg
adc
ficoml
jo
push
stc
mov
cmp
stos
mov
jnp
dec
add
xor
push
insb
add
and
popa
pop
fdivp
movsb
je
inc
cld
mov
test
mov
les
insb
in
lahf
xchg
stc
fstpt
test
adc
xor
inc
add
cmpsl
and
mov
in
jns
inc
add
pop
mov
sub
lea
call
sbb
stc
incl
and
mov
mov
and
pop
js
pusha
insl
xchg
pop
sub
cmp
jmp
xchg
or
sbbl
mov
xchg
cmc
gs
jg
jne
in
mov
cmp
shlb
movsb
sbb
cmp
lods
mov
dec
pop
ljmp
in
mov
mov
adc
shll
cmp
popf
cmp
pop
inc
scas
aaa
adcb
add
lock
test
xchg
push
sbb
xchg
cmp
add
mov
pop
rcrb
test
sahf
test
add
jns
mov
loop
call
fs
dec
cmp
push
shrl
sbb
add
cwtl
pop
pusha
sahf
push
lods
pop
sbb
dec
subl
loope
lret
into
pop
cmp
fldcw
int3
int3
insl
fdivl
out
ret
aaa
jecxz
jne
lea
cld
inc
out
sub
call
dec
inc
ljmp
mov
mov
pusha
cltd
je
sahf
xchg
lret
push
bnd
fs
das
jl
cli
andl
xor
push
hlt
mov
mov
add
push
and
leave
std
fsubrl
sbb
xor
push
dec
mov
outsb
fs
out
pop
mov
in
jns
sahf
cli
or
jle
cs
mov
sahf
insb
jle
fisttpll
mov
xlat
cpuid
and
mov
movsb
aam
dec
fidivs
sbb
ja
or
sbb
push
pop
jbe
scas
xchg
cmp
dec
imul
in
push
out
jl
pop
in
lea
sub
mov
jl
rorb
aas
leave
jae
jg
mov
loopne
fisubrl
sbb
cs
addl
push
jl
add
adc
mov
mov
mov
lds
xor
add
cwtl
sahf
push
xchg
lcall
push
jnp
cs
cmp
adc
in
push
xor
dec
dec
in
shll
or
adc
mov
lea
xchg
popa
and
arpl
aad
mov
out
push
fistps
xchg
lds
xchg
sub
inc
sbb
insb
mov
rol
es
out
rorl
sbbb
sub
xchg
lock
stos
xchg
adc
rcr
push
shll
mov
xchg
ret
pop
pop
or
xor
cmpsl
ret
add
hlt
and
push
sub
push
fwait
push
pop
cltd
leave
jno
xchg
jae
out
lcall
sahf
popf
std
cltd
and
mov
xor
repz
mov
sub
sbb
ja
cmp
pusha
stos
jnp
xorb
mov
jle
in
mov
or
jmp
movl
mov
inc
or
push
arpl
insl
adc
and
je
int
jno
incb
pop
cmpl
sub
dec
adc
xor
iret
sub
adc
push
mov
xchg
out
add
sbb
jo
jg
cmpsl
cmp
int3
arpl
sbb
outsl
mov
leave
scas
rclb
ss
push
pop
xchg
mov
movsl
lcall
in
pop
inc
mov
aad
xor
cmp
mov
scas
or
xor
mov
push
mov
jle
inc
popf
sbb
jp
jns
cmpsl
leave
divl
pusha
ja
aam
mov
divps
sarl
or
jmp
pusha
push
add
rorl
xor
and
sbb
andl
gs
push
pop
sti
hlt
xchg
js
or
cltd
and
repz
or
sbb
rcr
andl
int
mov
repnz
mov
cmp
shll
test
fldenv
lahf
test
cli
dec
in
dec
ljmp
scas
jo
cmp
jecxz
cld
pushf
mov
test
into
fmulp
mov
cli
fcomi
ljmp
imul
dec
les
stos
mov
sbb
test
pop
adc
lcall
pusha
aam
or
mov
movsl
mov
aas
repz
bound
lea
stos
adc
jns
inc
pop
jg
add
daa
push
es
ss
add
nop
pop
out
mov
push
shrl
out
xor
cmpl
ret
call
int
testl
and
scas
adc
adc
xchg
fnstcw
sub
orl
jge
jge
fwait
pop
mov
ds
rcl
int3
adc
mov
mov
loop
dec
push
lods
into
jbe
movsb
cs
jnp
inc
popa
jmp
inc
into
mov
or
jge
cmpsb
aad
shlb
jg
testb
outsb
xchg
sub
icebp
push
mov
add
ds
cltd
lahf
mov
imul
fistl
jno
mov
test
cmp
out
loop
nop
adc
pop
stos
push
xchg
adc
mov
jb
and
out
fcompl
jno
mov
or
sub
mov
pop
mov
call
sbb
rorl
movsb
ja
das
fwait
cli
fidivl
jmp
popa
ds
push
in
imul
pop
shll
cld
xchg
dec
cwtl
sub
in
dec
xchg
stos
jl
ja
mov
and
shrb
out
stos
push
inc
pop
in
into
shr
cltd
xor
hlt
xchg
ret
xchg
mov
push
pop
inc
icebp
stos
xor
mov
in
or
mov
pop
sbb
add
and
push
xor
cmpsb
es
jb
dec
push
fcoml
jmp
pop
aad
daa
cmpsl
fimull
and
fstps
adc
lret
lods
aad
mov
inc
cmp
outsb
aad
or
mov
pop
aam
sbb
sahf
aas
pop
repnz
rolb
ja
lahf
lahf
test
jecxz
mov
sub
in
fwait
pop
add
pop
mov
dec
outsb
out
push
mul
mov
test
push
dec
ljmp
xchg
cli
sub
out
fisubs
xchg
pop
test
cli
pop
adc
lahf
shl
and
int3
cmp
cmpsl
mov
out
inc
add
inc
add
mov
js
cmpsb
lock
inc
shll
cmp
cmpsb
lret
and
sbb
sub
push
push
sub
xor
xor
adc
push
mov
cmp
mov
mov
xchg
xchg
orb
cmp
mov
jo
in
cmp
cmp
outsl
dec
pop
fsubrl
out
in
mov
jmp
adc
xchg
xor
das
mov
lock
push
in
std
rclb
mov
shlb
jns
jp
xchg
jns
mov
lret
mov
ljmp
pop
ficompl
std
xchg
jge
mov
andb
sub
sub
sbb
loope
push
out
mov
adc
jb
movsb
shll
push
fdivrs
jl
add
imul
adc
jno
and
mov
cmp
cmp
popa
mov
adc
sbb
pop
or
out
fdiv
mov
jmp
mov
xchg
test
add
icebp
push
lcall
jle
push
sbb
decl
test
fnstsw
mov
mov
jns
pop
pop
xor
mov
jle
add
push
sub
fidivs
in
xor
pop
jae
int3
in
icebp
repnz
sub
lods
loopne
inc
inc
pop
mov
aam
fmul
fwait
lret
dec
pop
cs
das
dec
inc
fucomp
lret
adc
cmp
or
sub
lcall
je
pop
scas
pop
aaa
mov
add
and
push
repnz
punpcklbw
sub
pop
push
imul
cmp
mov
mov
lea
xchg
das
insb
int
test
in
xchg
mov
lahf
push
sub
movsb
or
xchg
in
mov
add
mov
daa
add
adc
push
and
lock
cmp
or
addr16
pop
pop
cwtl
inc
adcl
das
test
lods
and
jge
outsb
mov
adc
fcomps
jns
insl
sbb
or
aas
decl
mov
pop
xor
mov
jnp
ret
inc
nop
les
or
push
mov
xor
ja
and
out
mov
sbb
mov
xchg
dec
adc
ja
xor
jns
ljmp
cmpl
push
ja
dec
push
push
add
or
mov
call
decl
int
pop
sbb
fprem
idiv
or
mov
inc
enter
jno
push
pause
sbb
sbb
mov
popa
call
stos
cmp
addr16
and
mov
test
sti
jecxz
fdivrs
pop
arpl
nop
xor
fidivl
inc
stc
hlt
std
call
je
fnstsw
dec
fs
sti
mov
fsubrs
inc
arpl
les
inc
jo
xlat
pushf
lds
mov
push
rorb
mov
mov
sbb
push
and
or
in
aas
pop
xor
movsb
xor
pop
jbe
cmp
push
sub
adc
push
fcmovu
fistps
mov
pop
pop
icebp
push
mov
cltd
pop
pop
mov
ljmp
popf
gs
mov
mov
add
adc
or
adc
loope
jecxz
repz
jecxz
cmc
adc
push
fnstcw
dec
arpl
mov
leave
in
adc
dec
and
das
add
sbb
bound
fldl
xchg
out
adc
rcrb
push
jb
ficoms
in
test
movsl
add
out
jo
aam
insl
dec
cmp
mov
in
movsb
jbe
call
dec
lret
inc
xor
cmp
lahf
test
sub
cli
mov
jecxz
jl
les
xchg
ss
fs
mov
lods
fdiv
fs
and
xchg
int
fsts
test
rcrl
add
xchg
gs
out
sub
mov
push
xchg
shll
popa
mov
mov
dec
call
add
int3
repnz
push
mov
ror
lcall
out
test
jl
fbld
pop
negl
ss
imulb
jnp
mov
cmpsb
dec
incb
hlt
push
pop
xchg
mov
pop
arpl
mov
and
sub
xchg
jg
add
xor
repnz
lret
cmp
cli
jl
aam
mov
or
cwtl
data16
into
repz
adcl
outsb
test
xor
repnz
pop
dec
outsl
in
call
ss
out
xchg
ret
sbb
fmul
cmp
xor
cltd
test
pusha
sbb
mov
xchg
add
xchg
mov
and
ds
pop
mov
arpl
js
out
in
sbb
mov
out
clc
sbb
push
ret
shll
or
fiaddl
dec
or
dec
out
pop
bound
sbb
add
cmc
shlb
add
and
jp
mov
pop
jp
inc
xchg
inc
in
lret
orl
push
adc
mov
xchg
and
arpl
daa
mov
fidivrl
xchg
add
inc
lea
je
icebp
or
test
loop
outsl
nop
inc
mov
pop
ret
cs
mov
fsubrs
movsl
fistl
daa
lcall
pop
popf
rclb
scas
and
mov
mov
sbb
enter
jmp
mov
add
lea
jb
and
insl
lods
inc
imul
pandn
outsl
pop
mov
sti
pop
lods
mov
movsl
jns
call
pop
mov
or
cltd
call
push
in
cmp
adc
pop
dec
mov
xchg
and
inc
sti
gs
fucomip
dec
hlt
in
push
dec
mov
and
enter
mov
or
cmp
mov
add
ljmp
lret
out
popa
lods
test
jp
popa
lods
int
push
adc
out
sbb
adc
xchg
stc
add
push
stos
xchg
xlat
mov
data16
pop
test
dec
and
push
xchg
popa
stos
xchg
mov
push
sbb
sbb
pop
mov
fmuls
stc
ficoml
cmp
imul
cwtl
dec
icebp
aam
imul
push
cld
sub
push
jl
xorb
jno
movsb
bound
clc
xchg
pmullw
sub
cmpsb
cmpl
mov
or
jg
lds
out
mov
mov
cwtl
dec
mov
fisttpll
loope
pop
cmp
aaa
movsl
dec
aas
and
call
add
inc
or
inc
popa
sarl
mov
in
sbb
or
out
fbstp
ds
in
call
mov
xor
leave
mov
cvttps2pi
sub
test
sub
inc
in
pop
lret
aam
cmpsl
xchg
xor
mov
and
mov
pop
cmpsb
mov
mov
aad
dec
cmp
mov
loop
pushf
push
fnstenv
hlt
ficomps
lock
icebp
fs
add
sub
sbb
shll
jecxz
repnz
pop
jge
loopne
cmpsb
push
insb
jne
inc
repnz
mov
xor
cmc
push
push
pop
push
push
sbb
sbb
fldcw
sbb
jmp
xchg
sbb
cltd
je
jns
or
mov
cli
popf
adc
andb
aam
inc
inc
and
inc
orl
test
das
mov
xor
or
mov
popa
out
cmp
inc
push
xchg
xor
cld
je
mov
stos
int
cld
into
cmpsb
dec
fsubrl
fldln2
cltd
pusha
adc
sbb
imul
call
aas
sub
sub
dec
jns
cmp
and
push
outsl
mov
jb
jns
sub
pop
leave
jns
pop
and
hlt
or
cmp
cmpsb
push
xchg
sbb
repz
rclb
xor
int3
mov
movsl
push
ror
cmp
lret
mov
scas
icebp
cmp
jge
aad
xor
dec
fsubs
push
sub
mov
iret
xchg
cmp
mov
cmpsb
negl
sub
test
pop
jmp
cmp
jnp
mov
push
mov
mov
jno
enter
out
stc
push
ss
movups
in
and
push
cmpsl
mov
cmp
int
inc
push
lea
sbb
jo
gs
aaa
ret
mov
fadd
mov
sbb
cmpsb
cld
dec
lods
pop
shl
push
adc
cmp
fwait
or
add
flds
pop
aaa
mov
jne
add
xorl
inc
adc
jbe
mov
out
addr16
xor
movsb
lds
adcl
mov
js
je
or
jmp
push
jmp
add
push
inc
mov
dec
sbb
repnz
insb
cmp
sbb
dec
add
mov
out
rorb
jg
mov
scas
insl
jb
sub
addl
push
js
mov
xor
subb
mov
cmpl
push
pusha
add
inc
or
sbbb
bound
push
int3
fadds
xor
test
add
add
popf
jl
mov
add
lods
sbb
xorl
lods
sub
ljmp
mov
gs
xchg
mov
add
fidivs
jmp
in
stos
mov
shll
inc
shrl
aad
pop
cmc
xchg
jmp
inc
and
xor
dec
mov
add
lcall
fnstcw
cmp
mov
fucomip
mov
outsl
xor
jge
cmp
and
add
jl
rcrl
jl
testb
movsb
pop
dec
mov
loope
leave
shl
adc
mov
dec
test
dec
insb
popa
aam
xchg
add
cmp
jbe
popa
popa
mov
jb
push
dec
adc
fsub
leave
lret
mov
cmc
jb
mov
inc
inc
jp
jnp
add
out
dec
es
jb
push
mov
push
popf
adc
out
addr16
mov
arpl
fcomps
ret
icebp
pop
pop
loopne
jns
fwait
or
inc
push
and
xor
sbb
or
shll
mov
xchg
dec
add
xor
push
add
sub
aad
jl
dec
hlt
push
aaa
fisttps
jo
cli
outsb
addr16
arpl
add
sahf
shrb
xor
inc
dec
cmp
les
clc
bound
outsb
stos
xorl
lock
dec
or
fcompl
outsb
lock
leave
cld
decl
mov
incb
mov
rol
imul
aad
in
imul
sub
dec
cmp
mov
lcall
fmull
in
fs
sbb
xchg
sbb
jge
xchg
es
pop
out
ret
imul
sahf
dec
in
xor
clc
mov
ret
or
negl
jg
cmp
pop
leave
xor
fldt
and
pushf
ficompl
hlt
iret
jns
jbe
or
testl
aaa
mov
mov
xchg
inc
dec
pusha
js
pusha
pop
push
int3
sbb
int
fcoms
rcll
ficoml
test
lret
mov
jmp
jle
cmp
xor
cmp
loope
call
or
dec
or
js
loopw
popf
sbb
andl
pop
mov
dec
fwait
stos
mov
pop
mov
and
outsl
arpl
mov
pop
push
scas
faddl
mov
rcl
aam
jne
push
and
mov
fsts
cmp
andl
hlt
jg
or
lds
rorl
xchg
push
je
mov
stos
mov
pop
push
dec
or
lahf
popf
addr16
sbb
enter
ja
in
cmp
or
jp
xchg
add
inc
gs
pushf
movsb
lock
xchg
jns
dec
sarl
loopne
jl
pop
stos
int
test
movsb
lds
int
test
cmp
xchg
pop
or
pop
gs
or
insl
mov
aam
repnz
nop
push
fcomip
daa
sahf
in
sbb
sti
sbb
xor
add
adc
or
pop
lret
mov
jne
fidivrl
sub
das
cmp
and
sub
rol
jne
jge
fisttps
jecxz
mov
cld
cmp
pusha
loop
push
jmp
push
jne
push
jmp
lds
adc
les
ds
and
sbbb
les
and
adc
ljmp
insb
andl
mov
xlat
dec
mov
xchg
jbe
and
dec
xor
jmp
pop
sahf
xlat
xchg
scas
xor
loope
push
out
das
adc
add
loope
mov
ds
stc
inc
mov
lret
lret
cmp
arpl
jno
jmp
ret
and
es
jbe
jb
std
pop
mov
jl
pop
dec
shrb
add
aaa
cltd
cltd
push
add
inc
lods
out
gs
push
mov
add
notl
add
xor
sub
arpl
xchg
cmpsl
add
pop
stos
inc
mov
xor
xchg
mov
je
icebp
mov
out
cmpl
clc
push
jp
fs
fstps
fs
push
fnstcw
cmp
adc
gs
out
adc
lods
mov
in
mov
sbb
loopne
push
dec
aam
xor
fdivl
adc
mov
es
and
sbb
arpl
in
sub
cmpsl
push
mov
out
aas
xchg
pop
movsl
add
jecxz
repnz
loopne
lods
out
jle
stos
inc
aam
mov
in
cli
cld
or
pop
fists
and
fs
fiadds
sbb
insb
add
and
add
shrb
clc
fwait
or
inc
ja
ja
adc
enter
in
mov
orb
jg
mov
loopne
mov
xchg
adc
adc
loop
sub
jge
scas
jmp
out
jno
dec
testb
cmp
mov
lea
inc
loope
jo
push
in
cmp
in
mov
fistpll
xor
sbb
in
sub
inc
pusha
popa
test
std
xor
push
aas
jecxz
sub
das
xchg
push
mov
adc
insl
jecxz
mov
rorl
mov
mov
mov
push
je
adc
test
cmp
sub
cmc
sbb
sub
add
push
rorl
pop
mov
or
lret
and
cmp
shl
add
daa
sbb
and
pop
mov
push
add
xor
out
mov
mov
scas
icebp
xor
mov
int3
mov
xor
add
mov
fadds
mov
lahf
add
clc
call
movsb
imul
scas
inc
ds
js
test
cli
neg
dec
nop
cmp
sbb
movsl
or
lods
push
jmp
mov
pop
mov
lock
mov
cmp
lods
cmpsl
vmwrite
orb
jmp
jnp
ret
adc
icebp
mov
dec
xor
mov
mov
mov
mov
pusha
lds
sbb
add
pop
sbb
imul
sbb
ja
std
mov
jne
iret
dec
cwtl
dec
dec
stc
test
rcrl
jg
lods
aaa
out
mov
mov
out
mov
aaa
mov
pop
adc
mov
xchg
pop
xlat
xchg
xchg
jmp
addr16
stos
pop
xor
sahf
pop
mov
js
mov
add
leave
por
fildll
pop
dec
es
jno
cld
je
rcrb
imul
mov
adc
mov
es
call
mov
push
pop
clc
out
xor
xor
shll
aam
push
in
jp
fiaddl
sahf
addr16
popa
sub
in
out
outsb
cmp
inc
sub
aaa
push
stos
xchg
mov
in
mov
mov
sbb
dec
pop
mov
lret
and
out
lret
fyl2x
xor
cmp
jb
addb
dec
inc
movsb
out
mov
aas
lock
out
jae
jb
dec
lock
cwtl
scas
mov
push
lcall
cmpxchg
shr
push
sarl
das
repz
mov
bound
mov
sahf
cmp
fimuls
pop
out
rcll
mov
pusha
mov
cld
std
fadds
mov
dec
add
or
scas
aaa
fsts
out
jb
insl
push
xchg
ja
or
xor
mov
es
fimuls
dec
xor
jl
dec
add
mov
inc
call
or
pop
fstpt
and
fiadds
xchg
imul
or
addr16
scas
push
aas
sbb
dec
outsl
sarl
push
loopne
outsb
out
ljmp
sub
mov
xchg
lahf
dec
lods
xchg
hlt
cmc
or
sbb
adc
scas
sbb
push
testl
push
xchg
loopne
insl
addr16
mov
sbb
fmull
nop
cmp
arpl
dec
fs
inc
aas
jnp
cld
pop
lret
cltd
jne
arpl
cmp
cmpsb
jge
sub
add
fdivs
mov
int3
gs
jmp
cld
std
fadds
iret
pop
inc
inc
or
fiadds
movb
mov
pushf
jne
ss
rcll
lret
jmp
outsb
adc
xchg
sti
inc
cs
push
fnsave
sub
mov
adc
loope
aaa
adc
imul
sbb
cltd
jae
sub
xor
imul
xchg
pop
cld
icebp
sub
cmpsl
sub
mov
dec
xor
inc
sti
dec
inc
or
gs
fsubrp
dec
lods
sub
mov
mov
leave
add
das
insl
scas
insl
push
test
and
xchg
lcall
xor
mov
outsl
aad
test
sbb
inc
movsb
lret
add
adc
mov
cltd
aaa
xchg
test
stos
into
mov
mov
andl
or
mov
and
mov
push
jae
push
subb
sub
mov
lahf
mov
add
int
xchg
imul
notb
sbb
mov
imul
movsl
rorb
pop
test
imul
les
pop
cmpsl
xor
cltd
add
stc
dec
push
sbb
inc
lahf
sub
clc
or
test
mov
repnz
pop
push
out
loopne
mov
loope
mov
inc
sub
inc
cmp
push
mov
sub
fldenv
jb
addr16
icebp
nop
sti
loop
popf
mov
mov
addr16
jb
arpl
sahf
in
pop
shlb
insl
or
notb
xchg
outsl
jle
ja
stos
subl
cli
jno
imul
cmp
fistpll
xchg
and
and
out
push
inc
hlt
mov
and
sbb
push
hlt
adc
add
in
or
gs
dec
out
ret
call
inc
mov
jne,pt
mov
sub
and
imul
mov
mov
ja
and
int
inc
repz
mov
pusha
fwait
ds
stc
outsb
call
insb
pop
fs
mov
xor
push
add
ljmp
icebp
add
in
dec
cmp
repnz
mov
adcb
fisubs
cli
pop
je
loopne
adc
lahf
loop
les
inc
xchg
adc
call
cmp
mov
push
xchg
mov
mov
into
jnp
jne
sahf
aas
movsl
call
mov
ror
cwtl
mov
dec
inc
int
loopne
mov
out
arpl
cli
xchg
ret
daa
mov
or
jle
lret
or
fildl
repnz
push
stc
adc
mov
mov
sub
jns
push
or
popf
mov
sub
outsb
mov
xor
xchg
loop
mov
loopne
xor
ds
out
fbstp
iret
jae
xchg
faddl
jge
xor
dec
pop
pop
shl
in
mov
test
js
les
pop
mov
imul
test
loopne
aas
pop
jmp
adc
call
fdivrl
pop
imul
jge
clc
std
in
movsl
fisttpll
movsb
lahf
test
sbb
rorb
sub
xor
push
or
gs
mov
xchg
inc
jecxz
lods
dec
test
int3
les
mov
test
dec
cld
jne
cmpsl
stos
sub
imul
jnp
popa
gs
in
sbb
inc
jmp
or
ficoms
dec
xchg
and
adc
cvtdq2ps
pushf
sub
push
ds
dec
cmp
and
scas
add
sbb
insl
mov
push
jp
into
adc
push
lcall
jle
insb
sbb
loopne
clc
movb
or
repnz
repnz
aas
outsb
inc
mov
loope
outsl
pop
cmpsb
sub
lcall
inc
pop
pop
loope
ret
mov
inc
lods
xlat
push
inc
pop
loop
push
mov
movsb
mov
js
test
mov
das
xor
push
cs
push
xchg
rcrb
jne
mov
dec
aaa
mov
or
mov
inc
imul
cmc
or
stos
push
xor
pusha
notb
fsubr
sbb
push
jmp
fildl
test
push
xchg
mov
repz
ljmp
rorb
pop
int
test
lret
jl
sti
mov
xchg
je
aaa
aam
arpl
mov
mov
stc
shlb
nop
repz
movsb
adc
icebp
mov
outsb
insb
lret
cld
scas
lds
sbbl
mov
shr
in
jnp
xlat
movsb
mov
cmp
sub
xchg
sub
xchg
in
sub
lret
jle
stos
xchg
loopne
test
outsb
or
shll
mov
fnstsw
cmp
mov
or
pop
add
add
adc
jae
lea
das
push
mov
mov
ja
insl
cmc
and
and
popf
mov
inc
loopne
jle
jmp
jns
mov
lock
stos
or
out
cltd
mov
mov
ret
lret
jp
push
clc
ljmp
xchg
jae
xchg
lods
rorl
and
rclb
add
cmpsb
pop
mov
stos
pop
fisubl
lret
cmpsb
movsl
shlb
jbe
mov
pop
mov
aad
cs
test
pop
xor
popa
into
cmpsb
addl
nop
sbb
out
cmp
xchg
adcl
pop
mov
stos
or
mov
and
sub
dec
sub
jbe
fstpt
or
adc
push
mov
test
add
sti
out
iret
loopne
ds
pop
dec
cmp
push
mov
adc
movups
add
pop
lods
sub
test
or
cld
outsb
inc
xor
mov
push
xor
inc
scas
pop
pop
lcall
dec
mov
xor
movb
les
out
pop
mov
fsubl
mov
int
rolb
xorb
inc
cmp
jp
cmp
or
movsl
mov
adc
or
push
mov
mov
sbb
sbb
xchg
dec
dec
insb
js
icebp
adc
pop
rcl
ret
sbb
pop
negb
lahf
adc
pop
inc
mov
mov
pop
mov
cmpsb
fcompl
adc
pop
fxtract
decl
into
push
inc
cmp
outsb
fsub
cld
rcr
es
shll
pop
scas
jge
add
add
hlt
adc
call
gs
lods
lods
pusha
and
push
pusha
adc
jbe
ja
loopne
fnstcw
pop
pop
jg
jecxz
call
test
dec
mov
jg
inc
in
push
inc
lea
sub
mov
mov
push
mov
mov
shrb
lahf
jno
inc
imul
sub
jbe
mov
push
or
data16
inc
and
cld
aam
sarl
dec
pop
mov
mov
jbe
scas
fstp
cmp
xor
subb
or
gs
lods
gs
addr16
add
jp
sbb
insl
les
and
or
mov
es
sub
mov
or
cld
dec
xorl
js
inc
cmp
inc
ja
lods
cmp
mov
jnp
and
or
and
mov
jno
in
repz
push
ja
sbb
test
push
add
xchg
dec
pop
xor
xchg
push
add
icebp
push
xlat
sbb
sbb
fwait
pop
inc
lcall
xor
cmp
jb
xor
cmp
jl
fcomps
sub
ss
addr16
jp
and
leave
adc
dec
test
and
jp
in
sarl
xchg
add
cmp
cmpsb
add
popa
inc
dec
cmp
push
pop
mov
faddl
scas
fwait
icebp
inc
in
ret
dec
les
cmpsl
popa
jno
dec
or
jno
and
adc
xor
push
dec
inc
je
xchg
daa
add
imul
dec
mov
xor
mov
outsl
and
push
rcrb
jno
xlat
push
icebp
and
fwait
inc
jge
push
inc
aam
xor
lods
sub
ds
pop
out
sbb
testl
test
cmp
jmp
mov
out
mov
arpl
iret
cltd
mov
pop
lahf
adc
jae
push
rcll
mov
and
into
sub
das
ret
iret
mov
loopne
pop
inc
aas
lods
mov
imul
sbb
jl
adc
adc
sbb
hlt
xor
jmp
sub
xchg
fwait
fwait
cmp
cmp
mov
mov
xchg
jno
or
sub
jne
test
cmp
mov
inc
push
popf
and
or
push
cld
cmp
movsl
int3
xor
mov
push
dec
daa
pop
js
shl
mov
mov
push
mov
xchg
mov
cmp
mov
test
mov
int
sti
adc
xor
ds
sub
cwtl
scas
and
mov
mov
pop
add
or
movsl
data16
lret
pop
int3
or
cmp
insl
inc
sahf
mov
out
push
dec
test
es
loopw
lcall
ljmp
mov
xchg
and
mov
iret
xor
aaa
sahf
xchg
addl
cs
sbb
mov
pop
dec
mov
push
fistl
icebp
xlat
outsl
enter
lcall
test
nop
mov
lods
xor
jmp
push
hlt
sub
mov
aas
movsb
fsubrl
mov
mov
js
jno
sarl
fistpll
sbb
ja
outsl
add
addl
rcll
sub
push
add
adc
push
sar
xchg
lret
cld
push
mov
bound
gs
or
mov
dec
sbb
imul
icebp
xchg
pop
gs
xchg
pop
inc
lcall
pop
push
out
data16
out
and
int
int3
les
jno
sub
and
xchg
iret
and
push
xor
out
ljmp
lock
xor
lret
addr16
mov
adcb
ficoml
push
hlt
subl
ja
lcall
mov
lcall
add
mov
int
pushf
sbb
cltd
jge
and
cmp
orb
fiaddl
int3
push
daa
aaa
lds
incb
mov
ret
jl
fildl
out
loop
pop
and
jge
aam
lods
or
out
jno
call
ja
adc
movsl
fiadds
adc
imul
inc
pop
outsb
push
jg
xchg
pop
andb
fsubl
test
mov
notb
mov
add
or
scas
cwtl
add
cmp
adc
scas
sbb
out
and
neg
arpl
pop
xchg
stos
jne
push
adc
push
push
push
insb
push
popf
das
imul
negl
or
lahf
cmp
xor
add
jmp
jmp
outsl
push
aas
push
pop
shl
insl
xchg
ja
adc
mov
decl
enter
xchg
adc
daa
iret
pop
sbb
loopne
sub
mov
push
push
inc
lcall
das
rcll
xchg
stos
sbb
add
mov
es
gs
jae
movsb
jle
rep
mov
and
faddl
mov
push
aam
mov
pop
push
mov
jge
add
xchg
push
sbb
lock
popa
mov
xchg
das
fsts
loop
iret
call
mov
adc
cmpl
or
push
adc
push
sbb
fwait
ret
lcall
test
mov
int
repz
lods
fnstsw
push
inc
push
mov
sub
fiadds
push
cmp
pop
xchg
jecxz
scas
cwtl
sub
push
xor
je
shll
mov
push
test
stos
out
aam
lock
insl
and
or
test
fildll
enter
sub
ljmp
dec
in
dec
sbb
mov
dec
or
lcall
add
inc
fidivrs
mov
or
das
add
cwtl
enter
lcall
sarb
mov
adc
mov
jb
xchg
lahf
ret
nop
pop
xor
ljmp
mov
xchg
xchg
mov
loop
dec
int3
and
jg
push
out
cmp
popf
xchg
stc
fwait
push
jae
js
jp
xor
rorb
dec
push
dec
addl
das
xor
stos
jne
jle
loopne
mov
data16
cmp
cli
fstpl
inc
popa
dec
je
inc
jb
mov
jno
ja
push
lcall
pop
test
jle
bound
inc
xorl
xchg
sti
jge
inc
inc
mov
jne
lods
shrb
xchg
xchg
dec
sbb
pop
cmp
stos
movsb
cmpsb
cmp
mov
insb
xchg
xchg
xchg
push
push
jge
addl
mov
ss
and
stos
fdivl
fwait
and
ds
sub
push
pop
sub
fs
cli
mov
fmull
movsl
dec
or
mov
lahf
lcall
mov
sub
ret
push
insb
adc
shlb
iret
xchg
pop
pop
lds
pop
push
or
pop
mov
ret
mov
mov
lea
push
int
les
jbe
cltd
loopne
and
add
rorl
out
xor
aad
push
mull
dec
mov
shl
addr16
ljmp
adcb
xor
add
mov
dec
testb
adc
bound
pushl
mov
inc
sub
add
push
dec
inc
and
inc
xchg
ret
mov
dec
push
inc
std
lret
xchg
aaa
cmp
ret
js
lods
adcb
push
mov
shlb
fdivrp
in
push
add
call
fcoms
xlat
sbb
cmp
dec
push
adc
xlat
or
sti
int3
stos
mull
inc
jmp
cmp
push
clc
sbb
hlt
dec
lods
sahf
movsb
mov
jmp
loop
jnp
les
inc
cwtl
arpl
fldcw
pop
ret
mov
aam
mov
aas
or
adc
push
test
testb
lcall
pushf
sbb
lcall
aaa
arpl
mov
jle
movsb
shl
jns
cmp
jne
scas
popf
nop
mov
nop
mov
rcrl
clc
pop
cmpsl
in
and
fimull
iret
inc
cmpsb
ficoml
jae,pt
sbb
inc
ljmp
lahf
orl
dec
cmp
dec
jmp
neg
in
mov
data16
push
sti
xor
ret
jp
div
loop
out
out
adc
add
cmp
mov
and
push
and
aam
nop/reserved
lret
xchg
addr16
jp
ret
imul
push
mov
andl
fs
dec
lret
jmp
lea
fidivrl
rcrl
adc
xor
sahf
out
pop
lahf
dec
outsl
movsb
outsb
cmp
inc
clc
xchg
cmp
cmpsl
in
jl
mov
jbe
lods
popf
aam
cli
bound
mov
fldcw
out
faddl
test
fs
inc
inc
push
iret
je
data16
in
out
aad
es
fsts
cmp
mov
sbb
add
outsb
jge
inc
out
pop
mov
add
add
xor
fistl
push
fnstenv
mov
aad
or
movsl
adc
or
add
xchg
cmpsb
jbe
cmp
push
fiaddl
sahf
imul
and
pop
daa
jg
inc
pusha
mov
add
add
hlt
icebp
sbb
push
xchg
les
bound
lods
test
inc
push
lret
pop
outsb
xor
ret
sbbb
leave
sub
xor
les
je
dec
xlat
dec
adc
cs
jb
int3
movsl
add
cmp
jo
fs
popf
push
iret
sbbl
dec
scas
jno
push
aam
filds
jle
lret
icebp
aaa
pushf
sbb
test
fisubrs
loope
mov
int3
pop
jl
inc
in
popf
jbe
adc
or
mov
out
pop
iret
int
rclb
fcmovb
out
test
xchg
cmpsb
dec
pop
das
xchg
stc
mov
cltd
push
jp
loop
sub
push
movsl
lahf
sub
cmp
test
mov
cmpsb
scas
pop
jo
int
sti
iret
scas
sbb
add
and
loopne
sti
xor
jp
lods
cs
mov
stos
pop
dec
rol
gs
mov
push
jnp
js
cmp
in
mov
pop
ret
and
pop
add
rep
mov
daa
jl
pusha
lret
icebp
loop
and
sarl
jecxz
in
sbbl
mov
ds
or
icebp
loope
hlt
add
shlb
xlat
loop
clc
xchg
cmp
mov
lods
xorb
mov
out
jno
fwait
cmc
mov
adc
pop
adc
xchg
shll
sbb
cmp
or
xchg
popa
jg
adc
sti
or
int
stos
mov
repnz
jbe
ret
sbbl
fldl
jle
cwtl
mov
add
addr16
ret
lods
xchg
sub
dec
mov
sbbl
push
fnsave
xchg
or
mov
adc
stos
jo
test
dec
xchg
xor
cld
pop
inc
cmp
jmp
mov
jge
es
push
sub
cltd
add
xchg
jmp
insl
cmpsb
push
stos
in
jecxz
pop
out
mov
out
out
push
test
stos
jnp
xor
xor
or
xlat
mov
or
xchg
and
xchg
sbb
mov
push
test
cltd
mov
fnstsw
pop
adc
cli
cmp
inc
inc
mov
xchg
fldcw
andb
jne
mov
leave
in
fdiv
sub
test
cltd
push
and
movsb
push
pop
fdivrs
iret
add
mov
and
je
aam
mov
ret
ss
pop
mov
std
cli
cmp
sub
mov
add
outsl
adc
xchg
cmp
inc
mov
or
mov
fcmove
lret
sub
mov
add
sbb
or
daa
out
inc
xor
push
sub
push
jns
sti
cmp
lods
iret
or
imul
add
fs
and
pop
notb
lcall
add
and
stos
mov
lret
cmp
call
cmpsl
icebp
lret
xor
xchg
fstl
movsl
jecxz
or
push
pop
pop
incl
outsl
mov
mov
vmovupd
aam
xchg
inc
cmp
push
push
cwtl
lahf
push
adc
pop
pop
dec
cmp
jl
ja
adc
jmp
int3
rclb
mov
shrl
into
and
mov
dec
gs
popf
dec
and
cs
cwtl
add
pop
mov
pop
daa
repnz
movsb
cmc
or
fwait
inc
jb
adc
in
addr16
xchg
xchg
adc
and
mov
and
jo
cwtl
es
clc
test
ss
mov
rcrb
loope
mov
popf
inc
stc
mov
outsb
scas
test
or
pop
mov
xchg
adc
andl
fdivs
or
ret
push
sub
lock
int
cmp
xchg
aaa
sub
jbe
test
xchg
das
movsl
sub
ret
nop
popa
inc
daa
fistpll
aaa
setbe
sbb
inc
xchg
les
pop
hlt
into
sti
xchg
out
dec
xor
arpl
inc
jl
jbe
sub
jnp
mov
mov
xor
fisubrs
mov
out
xchg
pop
jmp
inc
es
les
pop
cltd
xchg
pop
sbb
aaa
insb
xchg
and
pop
pop
repz
in
and
int
pop
fildl
jae
lods
popa
jecxz
imulb
mov
rcr
iret
sbb
or
xchg
jmp
adc
cs
adc
arpl
and
std
into
stos
xchg
fistps
ds
dec
fsubr
pushw
pop
dec
arpl
das
push
ds
cs
ret
and
ds
cld
shlb
pop
pushf
into
int3
dec
popf
inc
cmp
repz
fs
sub
push
sbb
add
filds
fadd
es
ret
pop
mov
ds
pop
dec
dec
mov
mov
in
sbb
loope
xlat
mov
aad
push
mov
xchg
imul
shr
mov
rol
call
rcll
mov
clc
jbe
cmp
fsubs
and
ljmp
lea
xor
aad
add
call
dec
add
mov
mov
inc
adc
stos
mov
mov
and
shlb
lret
mov
bound
pop
mov
sbbl
loope
push
lods
mov
pop
testb
mov
data16
stos
jns
jo
dec
test
or
inc
in
mov
repnz
push
ss
std
mov
in
divl
or
addb
scas
inc
pop
sbb
push
jbe
mov
xchg
lret
push
sahf
inc
add
adc
bound
xchg
inc
in
into
mov
sti
ficompl
cltd
and
loope
xchg
sbb
int3
pop
mov
inc
in
mov
scas
in
jmp
test
inc
pop
and
cmp
sub
push
mov
adc
jne
daa
flds
shll
add
sub
arpl
jecxz
inc
clc
je
arpl
insb
adc
mov
into
mov
popf
imul
lods
cli
test
add
sbb
cli
mov
stos
and
std
fcmovnbe
sbb
inc
iret
stos
add
adc
lds
or
or
and
iret
ja
in
lods
mov
sbb
mov
insb
pop
or
das
out
fimuls
flds
or
mov
pop
lods
repz
and
push
icebp
popa
sub
scas
mov
je
pop
imul
shll
xchg
dec
ficoms
icebp
xor
push
or
pop
sbb
in
rclb
sub
lods
xor
movsb
jmp
scas
inc
dec
out
in
dec
insb
out
scas
jg
lcall
mov
sbb
aad
movhps
insl
add
outsb
call
shl
outsl
pop
add
add
sahf
sbb
rep
clc
sub
xchg
mov
pusha
ds
dec
icebp
inc
mov
fwait
popf
dec
fdivrs
lahf
les
rclb
fistl
push
pop
xorl
xor
iret
mov
push
sbb
test
popf
into
pop
pop
mov
jmp
cmp
pop
ds
test
add
scas
test
mov
sub
stos
sti
ficoms
arpl
leave
outsb
repz
out
jb
out
mov
enter
mov
dec
cltd
lea
pop
mov
and
outsb
leave
fnstcw
cmpl
push
imul
push
addr16
leave
dec
xchg
xchg
pop
call
jo
xchg
pop
jmp
xorl
fwait
push
ret
pop
fwait
xchg
mov
fadds
pop
je
ret
mov
ret
aaa
stos
inc
xchg
mov
push
push
xchg
jge
inc
cmp
jmp
xor
lods
xchg
enter
loop
pushf
mov
rol
and
sub
insl
ss
std
dec
stc
das
lcall
mov
lock
sub
add
fs
jo
test
fnsave
fistl
test
inc
js
leave
stos
mov
sbb
daa
movsl
push
arpl
push
int3
int3
mov
daa
sbb
les
cwtl
mov
cmp
push
jp
int
lcall
sbb
in
sub
lret
in
mov
inc
cmp
sahf
test
sbb
test
cmc
lcall
push
cmp
test
adc
mov
mov
or
sbb
adc
pop
js
mov
jmp
adc
out
test
xor
and
mov
xchg
push
lea
ja
lea
xor
fcoms
push
pop
popa
pop
jle
sub
and
mov
mov
into
mov
jmp
in
int
or
cmp
pop
dec
pop
test
out
jg
je
xor
cmp
cld
or
pusha
daa
mov
int
lahf
pop
cli
jecxz
pop
push
enter
mov
lret
add
lock
or
setg
sub
mov
mov
inc
push
outsl
inc
jnp
lcall
imull
jg
push
xchg
dec
icebp
sarl
iretw
imul
rsm
loopne
into
cmp
mul
mov
pop
add
mov
repz
das
jecxz
sub
aam
add
fisubs
cmp
adc
sbb
out
inc
mov
pushf
repnz
dec
jbe
jle
add
cmp
sub
inc
in
inc
cmpsb
leave
mov
jno
add
cmp
dec
icebp
adc
lea
mov
inc
in
inc
iret
cmp
inc
add
stos
fcompl
cmc
shll
std
addr16
cmpb
adc
push
xchg
movsl
jns
push
pop
jne
or
stos
jno
xchg
xchg
arpl
and
adc
ficoml
xchg
insl
sbb
push
ficoml
ret
adc
and
in
fwait
jp
or
lds
sub
sbb
push
test
scas
mov
mov
or
cmc
div
lods
js
and
lret
xor
sbb
xor
sbb
mov
loopne
and
cmp
pop
fiadds
pop
outsb
repz
sbb
stos
jmp
int
sub
xor
mov
xor
call
cmp
or
in
orl
lcall
out
roll
pcmpeqw
mov
imul
ret
sbb
xor
sub
loope
xchg
or
test
es
out
into
hlt
push
test
dec
in
add
jg
pop
pushf
add
rcll
orb
jge
cmp
push
shll
ret
mov
mov
icebp
out
int3
cmp
sub
or
popf
scas
adc
repz
insl
test
xchg
adc
mov
cmc
adc
push
dec
fcmovnu
sub
xchg
je
ja
xor
mov
test
and
mov
jecxz
jns
xchg
lds
xor
testl
xchg
arpl
das
push
xchg
fdivl
jp
adcb
jl
push
in
in
dec
out
sub
jle
push
jae
cmp
imul
stc
andl
jae
cli
add
push
insb
cmp
ljmp
add
in
lea
adc
mov
or
orl
pusha
xchg
mov
rcrl
pop
sbb
cmp
sahf
jmp
in
adc
mov
icebp
mov
aad
movsl
sbb
aad
dec
mov
lcall
inc
pop
jnp,pn
ffreep
int3
push
xchg
mov
sub
incb
push
cld
adc
imul
pushf
dec
or
push
mov
xchg
push
insb
push
ja
pop
int
ljmp
xchg
sub
dec
xor
push
pop
cmc
or
xchg
or
lcall
mov
lods
out
mov
mov
mov
std
in
inc
cmpsb
addr16
inc
aad
xchg
cld
dec
int
xor
cli
enter
je
sbb
xchg
add
inc
lods
ljmp
mov
test
push
mov
mov
push
dec
jmp
fdivs
sub
in
rcl
test
push
fs
sbb
xor
pusha
scas
sti
sub
add
insb
inc
repz
jge
xchg
nop
dec
pop
sbb
pop
xor
or
out
xlat
jecxz
cmc
inc
sti
pop
mov
sbb
icebp
mov
push
dec
loopne
jo
jg
inc
inc
mov
notb
adcl
popf
cltd
push
aam
lea
shl
mov
jmp
mov
xchg
mov
push
out
adc
mov
or
pop
cmp
cmp
bound
adc
adc
ds
stos
and
pusha
adc
cmp
iret
roll
cmp
mov
dec
jno
out
fidivrl
xor
stc
call
push
lret
cli
sub
mov
mov
cmp
pop
clc
dec
cmpsb
subb
cmp
inc
lret
ja
sub
imulb
add
dec
lret
mov
loopne
jbe
loopne
stc
ja
lcall
fadds
sbb
sub
out
xor
cs
or
jle
test
lods
jne
fdivrs
xor
push
sub
jno
push
jae
jg
push
scas
inc
repz
loop
adcb
sbb
scas
out
jbe
xchg
pop
lcall
and
enter
pusha
das
aad
pushf
xchg
pop
xchg
in
imul
lahf
pop
dec
daa
loop
int3
push
or
mov
scas
movsl
sub
pop
fs
xor
mov
cmp
shl
enter
lods
mov
dec
test
jne
mov
sbb
out
cld
xor
mov
outsb
cltd
out
dec
or
jg
lea
shr
mov
cmp
hlt
hlt
ss
leave
or
mov
add
sbb
jbe
cwtl
mov
cmpsb
pop
adc
xor
inc
scas
cmp
jg
cmp
dec
and
push
dec
shlb
xchg
dec
cmpl
jecxz
cmp
lret
xchg
xor
cmc
and
cmp
scas
cmp
mov
xlat
fadd
xor
dec
cmpsb
xor
hlt
cmp
icebp
imul
inc
add
xor
out
push
jle
lods
add
testb
cmp
insb
hlt
push
leave
daa
lret
ja
outsl
in
test
push
fst
fisttpll
pop
js
loope,pn
pop
jno
push
pop
je
dec
aaa
popf
outsb
loop
lcall
popa
loopne
aad
jle
and
sbb
repnz
ljmp
into
popa
popf
insb
rep
and
xchg
cmp
push
jnp
cs
pop
call
pop
ss
adc
loopne
or
frstor
pop
inc
into
in
lods
jle
movsl
fucomi
inc
xor
call
aas
out
xchg
pop
pop
pop
or
jne
xor
dec
push
ss
stc
xchg
loopne
ret
sbb
adc
es
outsl
cmp
sub
out
mov
dec
and
cmp
add
pop
cs
test
xchg
repnz
hlt
dec
push
sbb
cld
dec
fisubs
add
sbb
mov
cmp
mov
jle
mov
jp
push
or
jo
push
fistpll
jnp
jg
daa
xor
sbb
lahf
cwtl
sbb
pmaxsw
aas
ss
cmp
test
lret
pop
pushf
out
outsl
ret
fucom
pop
inc
imul
mov
push
das
or
xorl
add
adc
xlat
outsb
mov
mov
mov
lock
xor
lea
sbb
lds
adc
mov
and
xchg
ja
mov
and
fs
adc
mov
popf
pop
loope
bound
aas
push
push
repnz
push
in
mov
ret
mov
out
adc
roll
sub
jle
imul
xchg
mov
xchg
loope
arpl
pop
mov
jb
lret
out
cmp
enter
dec
stos
inc
jno
cwtl
in
loop
and
mov
mov
ret
outsl
sbb
xor
push
test
cmp
outsl
cmc
call
dec
filds
or
adc
adc
and
jmp
imulb
and
in
cmp
add
stos
ss
ljmp
cmc
mov
clc
std
shlb
lods
push
jb
icebp
mov
fsubs
lds
shll
pop
fisttpll
dec
jnp
into
ss
ljmp
pop
dec
jb
orb
lret
xchg
pop
pop
cmp
sbb
sbb
xchg
mov
sub
mov
scas
mov
scas
out
pop
loop
ds
mov
inc
das
int
sbb
xchg
sbb
leave
test
out
mov
jbe
insb
mov
clc
nop
loop
pushf
xor
cwtl
sbb
cmpsb
fsubp
movsl
jno
cmp
out
aad
xor
cmc
inc
fadds
lock
inc
nop
lret
jbe
dec
xor
adcl
enter
jo
mov
sub
in
sub
loop
sarl
insb
mov
inc
adc
jnp
iret
mov
and
lods
lahf
add
icebp
pop
jge
push
je
sti
mov
stos
repz
mov
mov
jb
dec
and
neg
inc
pusha
adc
push
decl
movsl
test
mov
inc
jo
xor
imul
dec
daa
pop
test
popa
jne
jmp
inc
arpl
add
ja
jl
lods
es
das
in
nop
in
insb
push
stc
adc
loop
lcall
or
cmp
shr
mov
and
mov
outsb
mov
ss
idiv
mov
arpl
lods
xchg
xor
add
cs
shr
inc
ret
pop
lods
mov
fwait
or
bound
iret
lahf
les
loopne
and
adc
add
rolb
aam
call
xchg
mov
mov
cmpsl
push
pop
sub
jmp
popf
xchg
jnp
inc
adc
daa
das
mov
adcl
mov
test
jnp
enter
in
sub
sbb
les
leave
stos
push
in
outsl
sub
aas
shlb
push
loope
pop
dec
ret
fstps
or
orb
adc
ja
mov
lods
push
jns
mov
jmp
jle
popa
and
int3
aas
leave
sarl
xor
cltd
jge
scas
gs
pop
adc
adc
into
in
and
sub
in
cmp
push
jmp
int
ret
iret
add
mov
jl
stos
mov
mov
inc
add
adc
lds
jb
das
sbb
call
lahf
xchg
ret
pop
fs
lcall
push
mov
push
std
in
rcrb
push
adc
les
xor
xor
lock
push
mov
loopne
inc
cmpsl
xor
out
aas
ss
and
or
sub
jnp
lods
push
push
testl
push
push
cmp
push
pop
sbb
rcrb
push
ja
ret
movsb
push
xor
pop
ret
outsb
sub
test
pop
push
mov
rorl
loopne
pop
jg
pop
and
into
aaa
push
jb
xchg
or
movsl
mov
xor
cmp
fistpl
pop
jecxz
lock
cld
adc
lock
inc
jnp
xor
cld
xor
cmp
out
loop
add
mov
pop
data16
scas
movsb
inc
sub
mov
xchg
add
mov
xor
lds
test
pop
leave
cs
and
mov
and
test
das
jns
into
jp
pop
testb
in
and
inc
xor
mov
test
mov
shll
movsl
mov
lea
pop
arpl
sahf
or
leave
adc
pop
daa
adc
inc
lret
int3
dec
mov
jae
scas
adc
and
sahf
mov
daa
xchg
jge
xchg
jmp
push
xchg
mov
fbld
rcrl
push
add
cmpsb
aas
and
addr16
jbe
xlat
sbb
js
or
push
fucompp
push
repz
xor
cli
ds
ret
cli
shlb
inc
sub
xchg
lds
sbb
mov
add
ja
in
pusha
xchg
pop
xor
push
adc
sub
push
nop
js
hlt
clc
addr16
mov
repnz
mov
jl
jnp
sahf
jo
jb
push
sub
adc
sub
mov
mov
out
sub
jno
enter
push
in
jno
dec
push
insl
jg
inc
mov
mov
sbb
jmp
mov
std
push
pop
push
pop
cmp
jno
adc
mov
sbb
dec
int
push
addb
sub
sbb
add
jmp
push
stos
inc
pop
shl
sbb
xor
dec
lret
sti
jmp
jg
push
fists
xchg
loop
icebp
cwtl
fldln2
movsb
or
scas
inc
xchg
in
xor
cwtl
pop
mov
push
xchg
jbe
sbb
jns
mov
sub
mov
cli
sbb
out
adc
outsb
mov
scas
ja
das
mov
ljmp
cmp
lcall
and
cmp
imul
loop
addb
push
aam
or
pop
push
sbb
scas
iret
daa
pop
jg
pop
pop
add
push
sahf
shrb
mov
or
xchg
jns
aas
pop
outsb
cmpsl
adc
pop
loopne
shl
loop
or
cmp
cmpl
jbe
lds
jbe
incb
popf
jb
lret
enter
int3
test
jno
out
pop
hlt
lods
add
call
jle
sbb
cmp
ja
xchg
clc
daa
mov
xchg
icebp
lret
push
dec
xchg
aad
push
in
add
loope
movsl
call
subb
divl
movsb
movsl
pop
pop
xchg
lcall
hlt
lret
inc
jo
test
dec
je
int3
fcoms
ljmp
xchg
je
stos
pop
push
pop
sbb
in
sti
sub
lea
mov
sub
mov
push
push
xchg
mov
sbb
push
dec
stos
pop
add
inc
xorl
ljmp
lcall
cmp
test
adc
imul
fcmove
and
loope
fsubrp
jae
cwtl
inc
pop
repnz
adc
jnp
push
test
push
jmp
inc
jmp
movsl
movsb
mov
add
repz
xchg
xchg
out
lods
icebp
push
lahf
mov
dec
rcrb
pop
repz
and
aam
cmp
sub
inc
sbb
dec
imul
add
test
or
das
lods
dec
xchg
movsb
int3
imul
lods
stos
cmp
repnz
clc
pop
mov
mov
jnp
lock
cmp
push
xchg
aam
cld
hlt
repnz
lahf
sti
push
cld
loop
mov
sti
pop
xchg
jbe
ljmp
rcll
int
cli
mov
lds
cmp
pop
data16
jo
and
and
xor
ret
shll
inc
mov
mov
inc
xchg
ds
cmp
test
cld
fadds
cmp
test
sbb
gs
cmp
into
imul
out
hlt
inc
fdivrl
hlt
jle
xchg
jae
repnz
idivl
mov
cltd
lahf
test
inc
call
sub
imul
xor
sbb
pusha
jg
sti
and
xor
fildll
jge
inc
inc
xor
or
dec
and
test
or
out
inc
shl
and
loopne
stos
je
mov
add
out
fadd
out
push
jae
cmpsb
dec
xchg
stos
stc
push
mov
shlb
xchg
mov
mov
push
xor
out
scas
insb
and
test
les
popa
mov
sub
aaa
inc
push
out
adc
imul
movl
rcl
ror
mov
inc
dec
xchg
aas
out
in
xor
sbb
push
fsubl
cli
std
mov
adc
adc
repz
stc
or
loop
test
dec
adc
outsl
mov
enter
into
popa
ret
jnp
test
ficoms
push
jmp
add
dec
sub
mov
inc
pop
mov
adc
pushf
or
std
call
dec
lods
aas
xchg
insb
jg
fmuls
dec
dec
dec
movsl
stc
repz
je
xchg
dec
test
imul
sub
mov
xchg
lock
fistps
rcrb
xor
sbb
or
push
cmpl
rorl
cvtdq2ps
push
xchg
pop
aad
lods
jmp
jg
xor
int
arpl
and
xchg
jns
movsl
loop
stos
lret
pop
mov
adc
gs
xor
inc
jo
push
imul
int3
nop
inc
rorb
into
push
inc
sub
je
adcl
sub
pop
jnp
xchg
pop
adc
ljmp
lcall
cmp
insl
xor
mov
sahf
shll
movsl
mov
les
and
mov
pop
in
mov
into
data16
shl
ret
ret
repnz
xor
inc
jecxz
jp
fmuls
cmp
imul
lret
insl
adc
aad
repz
dec
jae
push
shll
mov
or
addr16
jo
ljmp
ret
jl
dec
sub
shr
test
mov
aaa
cmp
mov
add
les
lods
jo
fsubrs
mov
inc
out
push
mov
inc
ret
and
insl
adcl
pop
sahf
repnz
fbstp
pop
arpl
xor
jne
pop
xchg
sti
negl
sub
negl
fisubl
sub
test
pop
arpl
jnp
mov
jne
push
loope
test
int3
push
lock
mov
xchg
push
les
push
jmp
jne
ss
idivb
stos
pusha
jb
movsl
int
mov
adc
mov
mov
push
cmc
mov
into
in
xchg
mov
xchg
xchg
sahf
test
pop
and
sub
into
mov
jno
jmp
call
ud0
adcl
sti
lret
sub
test
repnz
sbb
fbstp
or
cmp
lcall
xlat
push
lds
das
inc
orb
mov
sti
mov
push
jp
add
iret
mov
in
jle
je
gs
mov
ret
cmp
jno
and
mov
xchg
adc
enter
repnz
sub
xor
loope
scas
test
push
adc
dec
lret
les
out
inc
loopne
jecxz
mov
out
jle
ds
sbb
in
lds
lods
loopnew
aad
xchg
shll
adc
sbb
ljmp
dec
in
ljmp
xchg
loope
inc
mov
rcrb
push
outsl
mov
mov
fidivrs
xchg
ljmp
add
mov
pop
roll
adc
add
stos
jecxz
xor
jecxz
push
mov
hlt
cmpsl
rep
adc
add
inc
push
xor
jbe
mov
add
call
clc
aas
add
and
dec
cmp
push
xchg
pop
repz
sbb
cmovg
and
cs
mov
iret
negl
dec
push
pop
stos
mov
sbb
xor
in
cmp
pop
mov
inc
into
cli
dec
dec
xor
mov
mov
inc
push
adcb
rcrl
adc
adc
daa
adc
sbb
cwtl
scas
inc
mov
adc
pop
adc
in
out
popl
push
xchg
lds
cwtl
xchg
fs
dec
push
pop
inc
hlt
push
add
out
scas
loop
xchg
sub
jmp
mov
outsb
sbb
insl
add
iret
shrb
scas
out
push
jne
ficomps
jb
cli
bound
add
ljmp
into
sti
mov
test
shrb
dec
test
add
les
push
push
jmp
jno
je
or
push
out
inc
sub
fidivrl
cmpsl
dec
or
dec
popa
dec
stos
push
mov
inc
les
push
xor
pop
rorb
xchg
out
mov
mov
repz
pop
loopne
scas
jle
lret
rcr
out
xchg
pop
mov
clc
jl
jne
inc
mov
or
and
xorl
jg
dec
into
pop
jnp
mov
test
mov
out
sub
cmpsl
sbb
ja
jns
mov
pop
xor
and
push
mov
ja
sbb
xor
ss
je
xlat
pop
mov
sub
shll
xchg
cltd
in
lods
sbb
sbb
mov
jl
or
inc
or
mov
adc
push
lret
cmp
mov
mov
mov
enter
cmc
xchg
scas
adc
jb
dec
repz
or
arpl
mov
push
jae
mov
fldcw
add
pop
jb
inc
and
js
or
ret
into
fcomi
outsb
fwait
pusha
jecxz
enter
cmpsl
mov
push
inc
adc
addr16
incb
dec
mov
js
sub
mov
dec
inc
pop
rolb
outsb
jecxz
stos
clc
aaa
in
test
out
lcall
sub
cmp
dec
and
xchg
ret
lea
jae
inc
and
xchg
sbb
adc
mov
mov
mov
inc
lret
cmp
loope
orb
repnz
mov
lea
xchg
sti
adc
out
inc
xor
cli
dec
popf
cmpsl
xor
pop
repz
test
nop
seta
stos
inc
pop
dec
mov
inc
cmc
jb
pop
stos
insl
sub
aaa
pop
daa
cmc
push
test
add
divl
pop
mov
insb
pushf
pop
test
in
pop
mov
xor
pusha
cmp
and
jns
fcoml
test
xchg
aaa
inc
sbb
test
fs
dec
sbb
add
inc
jb
push
push
outsl
xor
aas
push
into
push
inc
adc
es
and
sbb
pop
bound
pop
cltd
ds
lods
sub
xlat
sbbl
mov
pop
fcmovne
add
cmp
mov
out
stc
xchg
dec
jns
in
add
pop
cmp
cmpsl
xorb
sbb
pop
mov
ret
jmp
lods
mov
int
out
insl
add
jne
cmp
mov
aam
mov
mov
xor
push
leave
andl
lret
mov
cmc
xor
shl
mov
stc
or
or
or
js
inc
std
sbb
imul
cmp
sar
add
shlb
adc
push
jmp
inc
xchg
or
fsubl
adc
paddw
and
enter
pop
pop
popf
mov
out
ret
leave
aam
popa
jle
and
or
sub
pop
mov
xchg
jle
xchg
sub
clc
xor
xchg
rorb
movsb
sbb
test
mov
mov
fiadds
std
inc
imul
cmp
mov
adc
push
jmp
loop
inc
sub
in
pusha
jle
xor
push
ljmp
or
dec
mov
cmpsl
aad
push
mov
les
ss
push
iret
arpl
xchg
and
xor
mov
clc
jge
test
imull
xchg
sub
xchg
or
adc
sbb
and
or
sbb
sub
std
fcoms
xchg
dec
sbb
push
dec
pop
pop
adc
sub
pop
scas
add
mov
adc
sti
fisubrs
icebp
mov
addps
dec
sti
mov
lea
in
hlt
inc
mov
add
add
xor
arpl
mov
and
out
insb
adc
jmp
in
mov
sub
jmp
ljmp
mov
dec
pop
sti
jno
dec
lods
sub
sub
pusha
mov
cmp
mov
icebp
gs
push
cmp
xchg
cmpsb
or
mov
sub
fbld
mov
push
sahf
inc
in
sbb
pop
add
sbb
imul
and
outsl
mov
fcom
adc
mov
loope
in
mov
push
pop
cld
pushf
jne
testb
push
ljmp
inc
clc
cmovl
cwtl
push
repz
insb
pop
mov
imul
scas
fistl
xor
pop
fs
sbb
xor
pop
or
xor
or
push
add
imul
mov
cld
push
cmpsl
pop
dec
lahf
xchg
adc
and
jb
stos
mov
pop
push
ret
adc
aam
imul
inc
mov
sar
xor
mov
xchg
mov
xchg
sbb
ljmp
inc
pop
mov
test
jge
lods
inc
test
or
jp
cmp
leave
imul
jge
subb
mov
cmp
jle
add
insb
xlat
push
add
mov
popa
fbld
lcall
push
test
cmp
leave
rorb
jns
test
or
mov
das
xchg
mov
mov
dec
insb
ret
lahf
imul
test
mov
sub
sbb
testb
lcall
mov
push
pop
aaa
or
mov
arpl
pusha
jle
sti
leave
sarb
inc
ficompl
mov
and
jo
xchg
adc
jo
clc
loopne
ret
inc
notl
and
pop
add
out
cmp
mov
adc
mov
and
loope
das
movsl
jmp
fld
dec
test
pop
adc
nop
inc
or
jo
ret
je
mull
fwait
push
cmp
subl
mov
into
sbb
out
lret
sbb
xor
cs
outsb
pop
outsl
cmp
nop
std
ljmp
sub
mov
inc
cltd
iret
clc
arpl
xchg
inc
adc
fiadds
popa
in
imul
inc
popf
lds
jns
add
out
loopne
insb
pushf
fidivrs
cmp
mov
sbb
mov
xchg
sbb
add
ljmp
cmpsl
adc
adc
shll
rclb
fnstcw
lds
sbb
aaa
cmp
stos
lahf
sti
test
pop
cmpsl
int
jnp
sbb
push
lock
icebp
sub
xor
sbb
mov
add
push
mov
jb
add
jecxz
and
pusha
scas
pop
scas
lods
mov
xchg
mov
mov
mov
add
test
insb
jnp
xor
inc
adc
add
push
ffreep
mov
and
mov
pop
xchg
xor
inc
movsb
xchg
xchg
lea
dec
movsb
jns
div
leave
outsb
cli
scas
dec
and
sbb
imul
mov
dec
xor
or
mov
add
jne
sub
fisttps
or
je
sbb
inc
faddl
adc
int
xchg
aad
xchg
pop
inc
bound
sub
je
jecxz
lods
xchg
jp
stos
push
mov
inc
dec
and
adc
ret
add
roll
out
push
dec
cmp
js
push
sbb
loope
add
pusha
adc
jl
inc
mov
lea
lret
mov
mov
jae
js
mov
lock
aaa
mov
or
jl
hlt
mov
ror
sbb
pop
sbb
iret
xor
insb
scas
cmp
scas
in
pop
dec
push
jl
inc
xchg
pop
sarb
fs
cli
xchg
mov
inc
mov
cmpsb
mov
in
jns
pop
mov
cmpsl
pop
decl
mov
or
stos
imul
xchg
outsl
aad
addl
sbb
push
push
push
cwtl
mov
inc
scas
xor
idivb
sbbl
cmp
xor
dec
pop
imul
scas
fstl
cmpsl
in
sbb
mov
and
push
fldenv
xchg
fcompl
outsl
arpl
pop
adc
cmpsl
push
es
adc
sub
cli
fisubs
aam
insb
imul
cmp
add
jecxz
or
mov
iret
inc
add
adc
insb
pop
repnz
jno
cmp
outsl
jae
jne
fcompl
and
lods
xor
dec
mov
popl
xor
pop
in
cs
bound
movl
sub
jo
fistpll
mov
xchg
mov
jle
sahf
test
adc
add
xchg
mov
lcall
and
xchg
lcall
call
getsec
xor
sub
jge
mov
lds
pop
or
mov
push
enter
cmp
bound
xlat
stc
mov
outsl
fistpl
pop
push
call
pop
notb
pop
lock
test
xchg
fsub
fcoms
std
and
pop
and
sbb
bound
mov
enter
jae
hlt
xlat
jo
pop
push
aas
pop
test
loope
std
or
inc
shr
lcall
mov
cmp
sbb
xlat
aas
push
mov
pop
and
dec
gs
mov
add
xor
sub
push
cwtl
sub
gs
sbb
bnd
adc
loope
jp
ret
push
popa
mov
dec
xor
outsl
in
fbld
add
cmp
popa
dec
pusha
js
mov
and
dec
enter
fs
fdivrl
rcrb
pop
and
dec
mov
ljmp
mov
inc
mov
incb
sub
cmp
subb
shll
test
adc
iret
push
cmp
fiadds
lret
lcall
mov
loop
mov
jbe
add
jmp
and
adc
cwtl
sbb
pusha
cmp
sbb
out
jp
testb
pushl
iret
push
xchg
lcall
test
cmc
lret
push
xchg
mov
stos
scas
call
push
mov
and
fs
add
push
std
adc
mov
mov
repz
adc
pop
xor
inc
cmpsl
sbb
lods
mov
cmp
or
mov
ljmp
push
push
pushf
outsl
cmc
shrl
fwait
out
dec
aas
fwait
dec
imul
clc
shl
das
sbb
das
jge,pt
push
arpl
pop
jg
scas
inc
fwait
lea
jae
jecxz
stos
outsl
push
enter
subb
sub
inc
shrl
dec
cmp
adc
jae
jp
ss
insl
cltd
lea
in
fstpl
das
std
adc
jge
xchg
leave
push
pop
jnp
pop
andl
xor
mov
dec
fisttps
add
test
mov
test
fninit
js
jno
in
jns
push
mov
mov
ret
push
or
sbb
lock
outsl
lea
loopne
ret
and
movsl
jle
fsubp
arpl
lahf
jl
mov
push
cmpsb
aam
and
cmc
fidivl
dec
mov
mov
dec
pop
pop
cmp
test
pop
pushf
mov
xor
pop
xor
sub
adc
sahf
jecxz
dec
push
lret
sbb
ffree
adc
xlat
cmp
or
fs
lods
mov
lahf
test
push
jp
es
cmp
push
mov
pop
rorb
clc
imul
adc
or
mov
jmp
add
clc
sub
out
pop
push
std
addb
ret
jl
dec
cs
gs
cli
ret
adc
push
xchg
add
das
scas
push
shr
mov
fisubl
cmp
pop
cmp
push
and
jmp
xchg
or
outsl
cmp
out
outsl
cmp
pop
hlt
adc
xor
arpl
add
dec
jge
arpl
call
mov
jbe
int
decb
adc
loope
add
push
inc
popf
andl
pop
mull
nop
inc
cmp
sbb
lods
es
jge
movl
mov
inc
scas
stos
push
enter
int3
cmp
mov
dec
mov
pushf
add
cmpsb
xor
stos
mov
push
adc
loopne
inc
cmp
jge
pop
inc
fsubrl
movsl
xchg
jmp
xor
mulb
cmp
cmp
push
lods
js
jo
je
jae
sbb
push
out
dec
fwait
clc
xor
push
sub
and
in
pop
mov
adc
jle
sub
jle
xor
and
mov
pusha
repnz
cmpsb
jo
cmp
jb
jo
add
adc
fimull
dec
and
pop
jge
andl
outsb
lods
or
xor
cmp
mov
jns
xchg
jmp
divl
or
rcll
pushf
ljmp
xchg
test
inc
inc
and
sub
add
rol
push
popf
dec
mov
mov
fisttpll
dec
lea
outsl
scas
adc
fcoms
ds
decl
jp
push
push
mov
xor
rcrb
mov
pop
shll
or
mov
outsl
mov
fimull
movsl
mov
adc
lret
mov
dec
rcll
scas
test
pcmpeqd
push
out
xchg
mov
sbb
loope
xor
incb
rcrb
lods
add
idivb
and
in
fxch
inc
and
inc
arpl
or
cmc
or
jb
sbb
decl
pop
stos
xchg
cs
adc
pop
xchg
pop
push
or
cmpsl
mov
cmp
jle
cmpsl
shrb
xor
inc
movsb
adc
sub
sub
dec
faddl
pusha
mov
mov
cmp
or
adc
xchg
push
aas
inc
pop
xor
clc
adcb
and
lea
cmp
insb
leave
pop
movsb
xor
lea
push
pop
loopne
repnz
or
jl
fldenv
in
dec
push
push
jl
data16
mov
lret
fwait
in
pop
incl
mov
test
mov
ljmp
sahf
xchg
dec
sbb
cmp
adc
cmp
add
je
push
and
movsl
imul
rorl
push
int
nop
mov
test
repnz
aaa
jmp
pop
in
out
push
cmc
pop
js
push
xchg
lock
jg
roll
cli
popa
dec
cs
in
pop
xor
jns
cmp
lock
dec
cmp
in
xor
jno
mov
xor
push
push
sub
xchg
shll
fcoms
sub
lock
enter
nop
fdiv
repnz
loope
outsl
das
out
notb
cltd
testl
jmp
xchg
jbe
shr
test
mov
sbb
outsl
push
and
push
xlat
xchg
aas
pop
jmp
inc
mov
loopew
jge
outsb
sbb
pop
ss
and
mov
sbb
fisubs
iret
loop
icebp
fistl
xchg
xor
out
mov
fsubrs
push
test
xchg
int3
dec
out
and
pop
sbb
sbb
arpl
push
aas
out
push
imul
pop
pop
out
ffree
pushf
negb
addr16
adc
jle,pn
dec
cmpsb
lret
stos
popa
ljmp
push
mulb
cmp
rcll
scas
movsl
xchg
cmp
test
cld
ffreep
pop
fistps
cld
inc
out
xor
int3
sbb
jno
cmp
aaa
cld
dec
jle
cmp
push
enter
test
fnstcw
roll
test
xor
xchg
cmp
mov
loope
xchg
lock
jecxz
pushf
outsb
mov
loope
mov
pop
push
xchg
test
mov
mov
adc
push
insl
pop
adc
ficomps
cli
in
test
jp
cmp
rcrb
xchg
fisubrs
cltd
cmp
or
scas
push
call
pop
sbb
add
jne
sub
adc
push
out
shrb
mov
xor
mov
cli
orl
pop
and
lret
dec
imul
or
addr16
mov
sub
pop
xchg
es
inc
cmc
sub
pop
pop
js
xor
mov
cli
out
lahf
pop
stc
nop
and
sarb
cmp
sub
cmpsb
or
lods
add
or
inc
mulb
int
js
push
push
test
or
mov
out
cmp
fsubrl
in
les
shlb
or
les
xor
cs
adc
aas
sbb
or
and
rclb
add
stos
jns
xchg
stos
scas
inc
mov
jl
out
cwtl
pop
mov
test
inc
cmp
and
out
push
movsl
loopne
xchg
ss
repz
push
iret
xor
or
aaa
rorl
xchg
fimull
push
pop
pop
mov
fs
cmc
ds
xchg
test
add
and
insb
aad
mov
sub
movsl
mov
scas
inc
aas
or
mov
xchg
mov
gs
jno
lods
xchg
pop
xor
or
xor
fldcw
fwait
loopne
test
push
imul
cwtl
in
pop
enter
cltd
ss
add
dec
dec
iret
adc
xchg
out
out
sti
loopne
mov
insl
lods
andb
adc
and
popa
inc
in
pushf
and
xchg
xchg
roll
and
sti
xchg
ret
pop
imul
fisubs
mov
jo
je
adc
pop
pop
das
inc
bt
adc
add
lahf
inc
xchg
mov
jl
clc
add
mov
add
mov
adc
adc
daa
call
popa
cmc
cmp
dec
lock
ljmp
push
in
je
and
jbe
add
ljmp
jb
push
add
stos
mov
sub
flds
scas
xor
fwait
pop
sbb
out
jno
sbb
sub
inc
xor
sti
test
inc
or
mov
mov
cmpsb
or
in
dec
pusha
pop
scas
icebp
scas
mov
jg
out
iret
jnp
xchg
cmc
pop
and
mov
into
sub
mov
and
sbb
popf
mov
add
ja
jmp
pusha
lahf
sarb
sarl
adc
lret
test
rorb
fcmovnbe
or
fidivrs
out
imul
mov
sbb
xchg
lcall
adc
mov
arpl
mov
fcmovbe
stc
cld
xor
out
scas
lret
in
std
xchg
bnd
imul
mov
mov
loopne
jbe
jo
adc
inc
xchg
icebp
and
pop
mov
nop
xor
and
add
add
mov
repnz
mul
dec
cmp
jl,pn
and
jnp
mov
mov
mov
add
popf
stos
incl
xor
lds
test
hlt
flds
fcoml
pushl
mov
test
push
movsb
bound
xchg
push
ljmp
pop
in
mov
jae
pop
outsb
fstps
popf
inc
xchg
in
or
sahf
dec
push
ret
add
je
call
add
sahf
imul
pop
mov
push
jne
sbb
dec
hlt
xor
jns
leave
in
insl
shlb
jg
pop
jo
adcb
popa
push
pop
mov
das
sbb
subl
inc
jae
or
dec
lahf
add
out
pop
adc
mov
ds
push
and
test
dec
fildl
mov
sarb
add
and
sbb
and
cmp
in
mov
sbbl
and
loope
and
into
push
dec
ror
add
adc
fs
jno
in
inc
push
and
out
and
mov
xor
in
add
or
daa
jae
shlb
pop
ja
imull
insl
ljmp
cmc
sbb
add
jnp
pop
mov
jmp
mov
clc
and
jb
arpl
aaa
mov
mov
mov
xchg
sub
out
push
in
add
icebp
pop
pop
push
adc
inc
lea
pop
test
or
mulb
jle
mov
adc
mov
pusha
ss
shll
pop
or
mov
pop
popa
fucomi
push
jge
fisubrs
or
dec
jae
push
and
shlb
data16
addl
ja
mov
in
or
push
das
lret
sub
cmp
lds
das
imul
sub
push
mov
xor
jle
aaa
pop
insb
pop
icebp
out
adc
testl
maskmovq
imull
pop
xchg
ret
sti
or
insl
test
outsb
stc
xor
repnz
mov
adcb
in
mov
mov
and
icebp
jecxz
pop
daa
and
dec
js
fistpl
pop
cmp
adc
fdivr
mov
mov
lahf
cltd
mov
add
xor
sbbb
insb
es
xchg
cli
faddl
imul
das
add
or
fucom
dec
add
std
mov
cmpsb
fs
hlt
loope
fidivl
xchg
ja
test
push
xor
or
inc
insl
sbb
add
push
hlt
fwait
sar
loope
push
push
adc
ret
pop
jecxz
hlt
ficompl
fisttps
xchg
push
sub
loope
idivb
fldcw
mov
jae
out
jge
sub
shll
push
in
lea
movsb
jbe
cmpsl
add
xchg
sbb
js
orb
lret
clc
or
inc
fwait
sahf
pop
sbb
xchg
add
int3
lock
aad
inc
mov
aas
mov
clc
sbb
and
inc
ffreep
xchg
out
in
out
roll
or
xchg
idiv
mov
in
adc
popa
outsl
outsb
fidivrl
xchg
je
lahf
test
sub
xor
test
movsl
sbb
mov
push
xor
sbb
rcr
xchg
out
xor
and
fadds
jns
pusha
les
test
loop
xlat
ja
xor
jo
pop
xor
andps
lds
mov
bnd
sub
nop
rcr
mov
inc
lahf
jg
cwtl
mov
loope
mov
push
push
xchg
add
rorl
loop,pt
pop
rcll
sub
stos
subl
cmpsl
mov
int3
jno
push
pop
add
add
xchg
sbb
xor
and
add
into
pop
inc
xor
jnp
pop
xchg
sub
xchg
and
jno
gs
decl
mov
mov
cmp
popf
xlat
int3
or
int3
stos
dec
lds
shlb
ljmp
outsl
sbb
add
mov
ss
xchg
pop
repz
in
dec
dec
sub
fmull
mov
or
outsl
sarb
xor
out
lods
adc
cltd
fidivrs
add
fcmovnu
push
je
call
sbb
push
scas
jp
mov
aam
pop
push
imul
pusha
daa
mov
out
push
pop
jne
sbb
js
inc
rcll
cmpsl
inc
mov
loop
decl
cmc
addr16
fdecstp
inc
outsb
xor
es
ja
sbb
ja
mov
mulps
mov
nop
push
sbb
mov
mov
aas
and
push
xchg
out
xchg
cmp
test
movsb
popa
dec
jo
dec
lods
nop
push
push
push
mov
fnsave
or
add
dec
idivb
cmp
push
mov
rcl
xchg
orl
pop
jae
mov
sbb
out
bound
ja
js
lret
jge
pop
mov
xor
aad
xchg
in
jo
inc
cmc
dec
out
dec
popf
test
mov
mov
lods
rcl
leave
je
pop
xlat
dec
adc
das
dec
dec
std
dec
or
jmp
add
jg
mov
pop
sahf
sbb
fsts
mov
jnp
push
mov
dec
sbb
push
inc
aam
jns
mov
xchg
inc
mov
vmovntps
xor
mull
out
mov
sahf
gs
leave
int3
lcall
int
fcmovne
push
lret
jns
xchg
inc
in
in
pop
mov
popa
mov
inc
xacquire
hlt
mov
dec
jnp
roll
inc
mov
leave
push
dec
sub
sub
xor
mov
adc
jb
pushf
addr16
in
mov
sbb
adc
mov
sbb
dec
push
pusha
pushf
sub
fsts
decb
mov
dec
mov
cld
lock
inc
ficompl
cmpsl
inc
out
jnp
bound
push
cmpsb
xlat
pop
loope
stos
dec
sti
xchg
jae
mov
fadd
out
nop
cmp
cmpsl
lods
dec
cmp
mov
jnp
jl
cs
xchg
ret
repz
mov
sbb
push
cmpsl
lcall
mov
jno
dec
dec
push
pop
je
lods
ret
iret
pusha
das
test
and
fucomip
test
mov
add
test
movaps
jge
adc
in
lahf
cmc
sub
repnz
jns
ljmp
lret
and
out
pop
pop
and
clc
cmp
xchg
pushf
int
repz
push
int3
aad
jbe
jbe
add
jmp
pop
push
jns
pop
inc
mov
xchg
stos
imul
add
jbe
clc
xchg
imul
fildl
aaa
bound
repnz
lret
bound
loop
rcll
shr
repz
adc
pop
or
dec
andb
incl
push
sbb
push
out
int
push
enter
xor
cmpsl
in
mov
or
jns
jp
xor
push
insl
add
int
rcr
xor
das
sub
shr
jae
push
lods
mov
loopne
mov
jmp
mov
push
inc
xor
or
rorb
sbb
add
fstl
and
aam
in
mov
inc
fwait
pop
loop
xor
mov
mov
jge
cmp
cmp
leave
aam
pop
arpl
sbb
pop
std
ret
xchg
sub
add
mov
rolb
enter
filds
mov
ds
lea
in
inc
movsb
cmpb
jb
sub
mov
das
cwtl
adc
insb
dec
mov
push
fstl
mov
and
outsl
mov
lret
cmp
push
adc
push
xchg
xchg
inc
movsb
popf
sbb
push
daa
inc
pop
push
scas
fcoms
hlt
aam
clc
out
js
jne
sarl
std
xor
lea
inc
push
push
sbb
bswap
cmpsb
jnp
int3
jmp
mov
push
sub
mov
in
sbb
dec
sarb
in
lods
shl
out
pop
cmp
inc
rcll
and
rcll
loop
sbb
pop
lds
push
push
mov
clc
out
ljmp
mov
lds
mov
int
mov
int3
jp
jae
push
call
out
sbb
cmp
mov
push
fldl
push
mov
push
rorb
arpl
jo
jne
xchg
or
cli
dec
jns
sbb
sub
idivb
in
xor
pop
jl
cmp
out
cs
mov
xchg
pushl
cmpsl
andb
mov
add
std
mov
mov
into
push
xchg
jno
int3
movsb
push
outsb
test
xor
mov
cmp
fsubrs
pop
icebp
sub
xor
push
and
scas
or
add
fnstenv
dec
xchg
jo
sub
daa
subb
sbb
mov
imul
jge
jnp
int3
jns
negb
xorb
xor
js
sbb
outsl
mov
mov
pop
xor
jecxz
and
xor
mov
push
mov
leave
addb
xlat
hlt
and
jp
push
into
loop
xor
loop
inc
mov
sbb
pop
adc
and
pop
fucomi
in
xlat
fimuls
mov
mov
or
inc
xchg
notb
mov
mov
repnz
jmp
std
inc
in
insb
add
movsl
cwtl
aam
aad
jle
decb
in
mov
sub
insb
xchg
scas
xor
ds
sub
xlat
push
mov
cmpsl
subb
mov
or
inc
call
sbb
sbb
shlb
sarb
nop
loopne
adc
inc
les
sub
fisubl
outsb
push
xchg
mov
mov
sub
std
mov
in
pop
scas
pop
sub
mov
dec
lret
xor
xchg
data16
xor
std
dec
fwait
inc
in
push
pop
and
popa
add
aas
push
xlat
in
dec
shl
hlt
stos
sub
xlat
ret
jmp
je
and
jl
idiv
push
sub
iret
push
mov
jae
insl
and
or
and
pushf
sub
in
rclb
aad
jle
aam
lock
xchg
add
add
cltd
cmp
and
and
stos
or
mov
mov
xchg
scas
ljmp
mov
movsb
mov
cmp
lock
pop
mov
add
ds
notb
xor
push
rclb
fcmove
jecxz
outsb
dec
pop
lret
ror
mov
into
sahf
mov
rorb
mov
sub
fcompl
mov
ds
lret
mov
scas
ja
mov
mov
inc
shr
xor
mov
dec
mov
ds
gs
mov
add
jae
push
sahf
out
dec
cmpsb
pop
sbb
std
xchg
xadd
loop
in
mov
loop
insl
stos
inc
stc
mov
mov
and
dec
std
call
push
jae
out
jecxz
popa
mov
adcb
cmp
lods
into
pop
int3
mov
xor
gs
clc
push
hlt
enter
dec
inc
mov
in
xchg
sub
jns
sbb
movsb
jns
sub
xor
and
xchg
mov
outsl
cltd
lahf
insl
push
popf
test
mov
mov
xor
enterw
cld
loopne
or
adc
pop
popa
shlb
pop
faddl
push
sti
lret
imull
dec
add
pushf
lret
out
inc
xor
std
add
jge
inc
test
sahf
lock
mov
adc
xchg
cmc
lcall
add
dec
or
push
mov
std
sub
pop
add
jle
in
jmp
orb
in
sbb
ficomps
sub
push
mov
add
mulb
jmp
mov
push
and
test
jae
xchg
mov
lcall
mov
mov
push
sbbl
and
cmp
ret
inc
mov
xor
hlt
xor
dec
mov
lahf
dec
pop
push
js
jl
imul
mov
sbb
nop
scas
imul
cmp
jns
ficoms
adc
or
push
popa
arpl
rcrl
pop
add
mov
int
pop
les
out
movsb
lea
add
aam
push
jns
movsl
pop
pop
cltd
dec
js
mov
les
aam
std
shr
lea
cmp
icebp
cld
cmc
lea
jmp
shrb
push
jecxz
xlat
sbb
lret
ja
inc
cmpsb
push
sub
push
jle
mov
xchg
jle
xchg
clc
lret
inc
ja
out
sub
test
bound
fmuls
dec
cld
xchg
mov
sub
pusha
jo
aas
mov
cmp
adc
movsb
test
int3
lahf
pop
inc
cmp
pushf
hlt
dec
cmp
outsb
and
mov
push
rclb
add
rcll
jbe
fwait
mov
xchg
pop
xor
cs
mov
clc
aad
xchg
sub
dec
mov
test
lock
orb
sub
xchg
sub
adc
out
mov
push
pop
xchg
dec
fdivp
sub
jne
fbld
mov
es
jmp
mov
popa
leave
push
xor
icebp
mov
jnp
cmc
inc
xchg
xor
cmc
mov
mov
les
js
push
imul
mov
lcall
jno
in
push
cmpsb
adc
out
imul
inc
jbe
das
popf
int
pop
add
xchg
jns
iret
stos
and
jg
fiadds
adc
dec
ss
jns
repz
jne
inc
mov
cmp
icebp
out
call
sub
fnstsw
fdivp
mov
cmp
jmp
pop
nop
andl
add
insb
sbb
pop
fsts
in
and
ss
mov
xor
sub
jnp
loopne
in
aas
fxch
insb
or
and
out
xchg
pop
iret
out
mov
dec
insb
push
std
mov
adc
shlb
pushf
pop
xor
push
dec
pop
cs
cmp
cltd
sub
pop
pop
pop
xadd
outsb
and
lea
sub
lret
add
shrl
rolb
in
mov
out
cmp
loope
cli
pusha
or
popa
scas
mov
cmp
and
in
insl
ja
dec
mov
sarl
ljmp
cmpsb
in
pop
add
mov
enter
cmp
jnp
sarb
imul
and
outsl
cmpsl
xchg
int3
push
dec
fyl2xp1
adc
xchg
adc
roll
mov
leave
dec
or
jbe
out
cmp
sbb
clc
dec
mov
sub
sbb
sub
pushf
outsb
movsl
shr
psrad
xor
fldcw
mov
cmpsl
xor
das
xor
jge
inc
lds
fcmovbe
and
mov
out
inc
pop
mov
sub
subb
test
adc
xor
adc
pop
inc
xor
dec
dec
shlb
xchg
cmpsl
sbb
sbb
xor
rol
mov
mov
dec
loop
inc
pop
jnp
enter
mov
and
cli
daa
ja
fcomip
ret
jno
jmp
jo
mov
fisubrl
jmp
inc
inc
in
aas
lea
inc
incb
stos
ljmp
xchg
out
jae
xchg
icebp
movsl
sub
insl
pop
or
pop
mov
loopne
push
jns
or
mov
nop
stc
aam
jno
adc
inc
sub
and
mov
imul
test
mov
sbb
fwait
std
or
arpl
ds
test
sbbl
and
dec
inc
aas
cld
cmp
cmpsb
mov
imul
jae
jmp
in
jnp
aaa
add
dec
loope
outsb
lret
add
jl
inc
and
fwait
mov
cwtl
jbe
xor
xchg
lahf
xor
ds
aam
and
lock
cwtl
sarl
add
push
dec
sub
sub
dec
add
movsb
out
lods
rol
push
mov
push
sub
jb
jae
idiv
cmpsl
mov
subb
mov
or
sub
fcmovb
jnp
es
push
mov
mov
clc
jge
sub
bnd
dec
pop
lret
out
test
daa
adc
adc
scas
loope
or
in
mov
sar
dec
nop
sahf
movsl
inc
xchg
add
test
in
mov
inc
jp
and
jbe
daa
lock
xchg
push
jns
iret
inc
dec
shlb
fs
mov
leave
mov
into
dec
xlat
insb
mov
inc
leave
xor
mov
mov
adc
pop
xchg
mov
mov
lcall
jae
cwtl
push
sti
push
aas
add
aam
mov
ret
xor
test
dec
popf
mov
mov
fcompl
aad
cld
lods
ficompl
sahf
ja
pop
sbb
fwait
pop
push
in
xor
cs
sbb
lods
inc
ret
push
sub
push
pop
je
push
bound
sbb
enter
pop
dec
roll
sbb
cmp
sti
loop
fimull
in
std
dec
leave
gs
mov
jb
xor
xchg
dec
sbb
xchg
repz
cmp
jne
xchg
cwtl
ret
cld
int
shrb
jnp
dec
lds
aam
push
xor
xor
je
jp
iret
into
cmp
gs
inc
ret
xchg
cmp
jno
adc
push
mov
test
mov
add
ljmp
pusha
xor
pop
test
adc
mov
popa
mov
add
fwait
int
mov
pop
xchg
out
dec
bound
sti
rclb
dec
lea
mov
dec
or
outsb
ret
pop
inc
sbb
pop
adc
jmp
imul
test
sbb
or
lods
jb
fdivrs
test
outsl
xor
push
rcr
mov
pushl
pop
in
bound
insb
sarb
adc
jl
sbb
pushl
inc
sbb
push
push
ljmp
or
sahf
jecxz
mov
mov
inc
mov
mov
fstl
cmpsb
inc
and
sbb
mov
gs
mov
jle
ret
xor
mov
pop
dec
rcrl
ret
std
xchg
cwtl
lods
mov
mov
mov
and
push
push
cltd
sarl
xor
pop
inc
inc
ret
cmp
xchg
inc
outsl
ds
cli
xor
rclb
and
xor
push
mov
xchg
jno
iret
out
cmp
mov
std
je
lods
popa
dec
icebp
outsb
cltd
lods
imul
jb
pop
adc
jl
jle
das
test
mov
xchg
xor
fstl
dec
outsb
sbb
ficompl
pop
mov
xchg
arpl
inc
loope
std
mov
push
repnz
repnz
inc
mov
inc
jb
dec
inc
imul
add
or
cmpsl
mov
mov
sahf
iret
aas
inc
push
inc
mov
or
mov
xor
sbb
daa
inc
mov
fidivrl
and
mov
xor
dec
jo
movsl
fdivl
push
mov
aaa
mov
aas
jge
sub
mov
pop
ret
ja
stos
jnp
xlat
loope
pop
js
cmpsb
into
push
and
push
lcall
jb
stos
and
mov
add
lods
push
and
xchg
movsl
in
out
add
jmp
inc
mov
call
out
outsl
cmp
adc
cld
jo
mov
xor
sti
mov
psllw
adc
pop
aam
stos
addr16
cmp
cmp
push
push
ss
scas
add
mov
rep
add
mov
fnsave
sti
stc
popa
fistpll
rorb
jns
mov
xchg
cs
inc
adc
add
scas
int
jo
adc
pop
push
cmp
fistps
inc
stc
cmp
jno
mov
pop
popa
adc
mov
push
out
in
or
xchg
pop
fs
adc
jo
mov
cltd
dec
push
in
pop
pop
push
dec
xor
lods
aad
shll
and
fidivs
xor
fnsave
xchg
aam
movsb
lea
sub
pop
sub
sbb
rcr
js
clc
dec
adc
jle
jo
jb
cmpsb
out
mov
xchg
jo
lods
dec
icebp
je
push
sbb
push
mov
sarb
pop
and
mov
les
mov
mov
push
adc
inc
fs
lahf
or
out
or
std
sbb
pop
icebp
jp
js
stc
adc
pop
push
rcll
adc
movsl
pop
sbb
loope
inc
cwtl
cmpsb
aaa
fdivrs
aam
cmp
aas
enter
push
addr16
es
xlat
mov
leave
insb
adc
mov
mov
lcall
pop
xor
lods
push
out
int
adc
push
mov
mov
mov
jne
mov
loopne
push
mov
mov
out
scas
out
sub
shll
inc
and
test
int
scas
sbb
mov
inc
jle
addr16
adc
je
push
decb
lahf
loop
cmp
xor
popf
bnd
lock
fcoml
push
lret
call
xor
or
push
mov
mov
fsubrl
aaa
add
add
fdivs
mov
adc
mov
js
pop
mov
arpl
aas
gs
mov
outsb
xchg
mov
push
or
xor
fcmovnu
cmc
cmpsl
lods
sub
call
cmp
dec
lret
adc
xor
test
and
jecxz
mov
xor
cmpsl
push
in
xchg
nop
ja
pop
ja
xchg
shrb
scas
xchg
inc
push
cld
aad
jno
fidivrs
int3
bound
es
sub
adc
jle
dec
push
test
aam
adc
shrb
stos
fcomps
sbb
adc
gs
loopne
inc
add
and
in
mov
and
enter
adcb
sbb
sub
test
and
dec
push
aad
or
into
dec
cmpsl
xor
add
es
enter
repz
loop
inc
ljmp
mov
movsb
mov
adcl
push
inc
mov
push
mov
cmpsl
cmp
cli
pop
out
lret
cmp
test
rclb
in
pop
pop
orb
clc
cmp
dec
fimuls
pop
repz
mov
sub
adc
add
mov
jp
jne
mov
fwait
or
js
cmc
dec
test
dec
in
mov
aam
iret
pop
pushf
lea
outsl
inc
shlb
lret
cmp
or
pop
inc
movsb
mov
add
add
inc
gs
sub
adc
xrelease
adc
cltd
shrb
jne
orl
inc
pop
mov
mov
mov
mov
cmp
push
add
fmul
xchg
rol
inc
mov
loopne
in
pop
in
ret
sahf
popf
cmp
xlat
mov
adc
dec
mov
daa
dec
dec
jb
cld
jmp
fld1
xorl
int3
and
add
push
dec
pop
mov
push
inc
pop
imul
mov
lahf
pop
in
jbe
lret
inc
gs
jns
stc
fwait
enter
addl
stos
lret
in
insb
jle
mov
es
jl
add
into
cmpsl
frstor
push
call
int3
mov
mov
push
inc
loopne
out
push
push
insb
mov
push
xlat
and
movsb
fcmove
sub
std
mov
es
push
push
sbb
inc
out
sbb
repz
in
xchg
adc
out
inc
dec
mov
mov
daa
nop
inc
stos
sbb
xchg
jp
sbb
pop
mov
ret
xor
cs
rorb
test
call
sbb
in
subl
inc
mov
cmp
dec
mov
xchg
es
sub
scas
inc
sbb
cltd
int3
fdivrs
out
sbb
xchg
and
stos
pop
jle
aaa
cwtl
jns
mov
sbb
leave
cltd
stos
in
sbbl
mov
or
mov
test
into
sahf
leave
and
cmp
lods
inc
shlb
mov
mov
jae
fst
lahf
les
mov
repnz
adc
sub
pop
and
pop
rol
sbb
and
lock
jnp
push
or
dec
fisttpl
dec
mov
icebp
decl
sub
jnp
dec
pop
mov
add
shlb
stos
mov
lret
idivb
mov
push
pop
sub
xchg
push
or
pop
sub
fwait
or
sbb
sub
scas
jno
and
add
popa
adc
cmc
xchg
gs
movsb
mov
inc
xchg
inc
sbb
mov
xor
inc
nop
sahf
dec
stos
inc
negb
das
leave
movb
aaa
sti
cmp
mov
or
jns
scas
icebp
das
mov
std
sti
sub
cmpsl
sarl
mov
mov
xchg
mov
or
mov
mov
pop
lret
cmp
xchg
dec
cwtl
in
mov
pop
xchg
loope
ljmp
rorb
enter
sbb
mov
cltd
sbb
xor
test
arpl
xor
imul
icebp
push
jecxz
pop
rclb
adc
jns
jecxz
scas
lds
mov
int3
and
and
or
sbb
xchg
sbb
addb
lcall
xor
jg
inc
jno
imul
cmp
rep
sarb
in
cmc
cmp
hlt
mov
ret
mov
insb
jge
sbb
sub
sarl
in
inc
movsl
adcb
xor
or
aam
cld
pop
movsl
push
jg
cmpsl
test
aas
inc
decl
mov
enter
popf
loope
cmpps
test
xchg
dec
mov
jae
cwtl
mov
cmp
imul
pop
scas
and
leave
es
ss
out
sbb
fwait
loop
pop
jge
stos
sbb
imul
sub
daa
mov
call
mov
mov
daa
adc
leave
adc
xor
ss
aad
test
mov
insl
adc
mov
push
pushf
pop
stc
inc
sbbl
xchg
mov
cmp
jl
jg
xchg
cmp
jbe
adc
push
and
jnp
aad
sub
cmc
shll
push
jb
xor
push
testl
or
xor
mov
lds
jg
mov
loopne
xlat
sbb
mov
icebp
lea
mov
cmp
and
xchg
sbb
jae
dec
cmp
cli
icebp
jbe
daa
xchg
xlat
xchg
lret
xor
das
pop
sub
push
sbb
inc
or
repnz
jnp
push
jg
dec
pop
test
aad
idivl
dec
push
call
pop
sbb
data16
sbbb
xchg
lods
cltd
jno
fmull
mov
mov
mov
and
mov
cwtl
jmp
test
adc
dec
lock
scas
int
out
loop
jecxz
or
ret
sahf
pop
in
call
repnz
leave
mov
mov
int3
ja
shld
gs
das
leave
and
lret
sarb
fimuls
in
dec
sbb
push
aam
mov
push
lea
jp
hlt
fildl
xchg
negb
xor
ret
push
adc
xor
sbb
sarb
insl
daa
loopne
mov
icebp
adc
hlt
mov
jmp
shrb
cmp
cmp
add
cld
jge
or
pop
or
cmp
movsb
mov
loop
cmp
jl
cmpsb
mov
xor
inc
jnp
repz
or
sahf
out
sbb
aad
sbb
and
cltd
lret
lods
xor
stos
test
mov
test
fwait
dec
mov
scas
inc
jecxz
adc
andb
sahf
push
dec
rorl
mov
das
in
js
lret
mov
adc
adc
loopne
rolb
or
xor
xor
lods
fistps
push
lock
sahf
push
push
mov
das
mov
mov
or
mov
repnz
dec
iret
jns
out
jo
sub
nop
lds
sbb
xor
pop
test
xlat
mov
repz
mov
jmp
test
dec
sahf
cmp
call
test
xor
dec
cli
xor
stos
jmp
pop
sub
dec
inc
sbb
mov
sahf
mov
outsb
cmpsl
mov
jne
sub
and
aad
xchg
fmull
into
addr16
insl
mov
rolb
lahf
and
push
jg
cmp
shr
pop
add
out
cmp
sub
jne
addr16
jb
xchg
in
jmp
or
aas
faddp
jmp
push
movsb
fistpl
sub
adc
xor
dec
js
pop
mov
idivl
and
pop
hlt
and
adc
xchg
jl
clc
pop
loope
pop
inc
sub
fucom
add
fiadds
xchg
loop
xor
sub
jne
xor
in
repnz
sub
add
or
or
test
push
mov
sbb
roll
lock
push
aad
jge
mov
rcpps
pushw
hlt
out
enter
or
test
in
loop
cmpsb
ja
or
sbb
into
and
out
fcomps
inc
mov
test
sbb
dec
test
into
xchg
cli
lahf
adc
xchg
adcb
das
or
add
inc
sub
and
inc
sub
out
pop
inc
inc
jnp
arpl
jle
or
aas
sbb
push
pop
insl
test
push
cli
mov
fidivrl
dec
lea
cltd
test
ja
push
sti
test
in
add
out
mov
mov
mov
pop
mov
mov
jo
rorb
inc
inc
mov
sbb
outsb
incb
test
xor
pop
mov
cmc
cmpsl
aaa
rclb
xchg
imul
cmp
xchg
lds
arpl
xchg
jae
push
pop
outsb
lret
loope
shll
and
std
add
jmp
insl
nopl
or
test
repz
xchg
fldl
sub
ror
cmp
mov
loope
dec
jne
cwtl
mov
mov
popf
mov
lcall
fdiv
push
lds
pop
sarl
inc
daa
aaa
mov
xchg
idivl
mov
adc
test
mov
mov
fmull
mov
lods
fimuls
mov
fdivrl
pop
mov
ja
dec
dec
xorl
pushl
daa
inc
xchg
lods
popa
int3
mov
mov
mov
cmp
out
fldenv
pop
insb
hlt
adc
mov
pushf
xchg
push
dec
popa
mov
sahf
xchg
dec
jmp
loope
dec
gs
rclb
dec
icebp
stos
out
sbb
test
js
cmp
adc
push
aad
fsubl
test
rcrb
out
aad
sub
test
dec
adc
cltd
test
mov
jae
push
and
mov
ss
shll
or
int
inc
in
push
js
cmp
cwtl
aaa
xchg
mov
xor
rcrl
pop
mov
fwait
ret
adc
and
out
inc
push
sbb
mov
inc
mov
dec
push
push
or
test
repnz
out
js
jns
mov
adc
jle
cmc
mov
inc
lods
std
es
sub
or
xor
add
add
sti
pop
add
or
enter
es
stos
push
add
in
cmpsl
dec
js
or
std
std
mov
sub
sub
outsl
cmpsb
mov
rol
roll
lahf
xor
ficompl
jg
repz
lcall
cmp
dec
or
fmuls
repz
adc
xor
xchg
into
jo
xor
addl
scas
mov
shrl
cli
lds
nop
ja
fwait
sti
mov
subb
ficomps
ret
mov
push
aad
out
ret
mov
mov
sub
mov
addr16
mull
mov
add
pusha
push
sbb
pusha
mov
nop
pop
xchg
mov
cmc
sub
ljmp
je
addr16
adc
bound
test
push
jg
lds
adc
push
pop
pop
stos
fldcw
and
shl
test
mov
out
faddl
mov
pop
jne
lods
lahf
std
or
jns
cmc
out
icebp
xchg
xor
push
call
pushf
sbb
dec
movb
insl
loopne
nop
mov
les
mov
add
sub
add
int
xchg
or
xor
sbbb
add
aad
imul
mov
pop
add
shl
push
ret
repz
sbb
stos
pop
iret
add
lcall
or
sub
add
sbb
adc
add
ja
dec
and
mov
push
inc
or
push
ficomps
cmpsb
adc
cli
mov
out
push
and
aam
xor
pusha
jp
fcoms
dec
movsb
lds
movsl
and
test
push
add
jns
roll
icebp
lcall
scas
jmp
jle
ja
rcl
mov
adc
or
pushf
cmp
cvttps2pi
fcoms
inc
xchg
cmp
cs
jno
xchg
ds
jns
and
mov
add
sbb
sti
mov
cmp
jecxz
idivb
enter
or
sarl
xchg
pop
shll
daa
mov
sbb
hlt
fstl
cwtl
outsl
mov
xor
cli
xchg
gs
adc
in
cmp
sbb
in
rorb
pop
jbe
adc
jbe
jo
push
jo
int3
rcl
in
rclb
sub
cmp
jo
in
mov
push
mov
jo
mov
xor
xor
cli
and
les
cwtl
mov
jo
loopne
repnz
cmp
jl
sarb
xchg
lock
sti
add
push
cwtl
movsb
xchg
or
dec
push
xchg
inc
sub
mov
inc
or
and
mov
pop
dec
cmpb
sbb
sub
mov
dec
jecxz
ljmp
push
mov
popf
mov
mov
mov
push
out
lcall
mov
adc
imul
jae
jne
hlt
aad
ljmp
enter
scas
pop
push
mov
mov
mov
shrl
std
cwtl
push
icebp
pcmpeqd
add
xor
lahf
push
js
lods
js
lahf
mov
jae
pop
lret
mov
orb
add
ss
ret
add
cmp
cmp
leave
cmc
negb
adc
mov
je
test
mov
nop
pusha
xchg
cmp
dec
mov
and
das
push
je
add
adc
js
inc
push
fs
pop
jo
loop
shrl
bound
movl
or
dec
mov
lock
rcll
dec
inc
jmp
nop
fwait
ds
adc
pushf
inc
data16
into
and
sahf
ljmp
jno
or
sbb
aaa
ficompl
cltd
aam
bound
cltd
popf
imul
pushf
jl
sub
xchg
iret
shll
jns
loop
add
cmc
test
push
mov
addr16
lods
movl
xlat
xchg
inc
vpand
mov
gs
xchg
add
dec
les
repz
aas
xchg
or
add
inc
add
mov
dec
fs
imul
adc
ljmp
mov
bound
mov
dec
add
mov
into
mov
add
out
imul
outsl
push
xchg
fsubrs
fsubrl
and
or
pusha
pushf
shr
lds
test
aad
lods
mov
inc
dec
in
sbb
pop
cld
pop
pusha
scas
bound
cmp
gs
icebp
xchg
int
rcr
scas
call
cmc
pop
test
mov
jp
adc
cli
lods
aam
cmp
lcall
lock
adc
sar
push
xor
imul
fbstp
fs
cmp
sub
push
dec
push
mov
jge
insb
call
es
xor
mov
addr16
pop
lods
mov
arpl
jecxz
push
data16
loopne
adc
jl
sbb
add
jmp
jg
jecxz
mov
enter
lret
fimull
js
sub
sbb
dec
xchg
fimull
push
dec
out
add
ret
mov
mov
add
pop
or
fbld
icebp
ljmp
shll
test
jle
loopne
xor
addl
ds
imul
aad
sarl
ss
dec
xor
jne
or
ds
mov
xor
rcr
jns
aas
popl
mull
sti
cwtl
dec
cmpsb
mov
lds
mov
mov
pop
sbb
pop
mov
popa
cmp
leave
adc
add
jns
adc
aas
outsb
push
movsl
rorl
pop
negb
aas
cmp
aad
in
mov
out
rorb
xchg
xor
loope
xor
pop
cmp
jns
loope
pop
imul
mov
inc
xchg
dec
les
int3
push
sub
gs
jge
xor
ret
and
pop
mov
enter
data16
cmp
iret
scas
cmc
aad
testl
lret
enter
inc
mov
adc
xchg
adc
inc
mov
add
push
out
cmpsl
shlb
int
jmp
pop
jp
cmp
add
ljmp
call
mov
lcall
es
in
ret
mov
add
cmp
or
aad
jae
mov
push
shrl
jae
xor
cwtl
fistpl
leave
bnd
inc
cmp
dec
fdivrl
cli
insb
xchg
and
dec
xchg
dec
or
cmp
call
xor
scas
xchg
in
jne
xchg
and
inc
and
shrb
jmp
pop
push
int
cmc
jl
mov
gs
sahf
subb
call
xchg
sbb
sarl
sbb
ljmp
shrb
fimull
dec
xor
rcr
adc
pop
insl
push
push
sub
sub
dec
pop
adc
jecxz
xchg
xor
dec
pop
in
mov
push
movsb
mov
xor
mov
sahf
lods
add
cld
mov
rcr
sub
mov
push
jle
test
or
aaa
dec
vmread
mov
test
sti
mov
mov
mov
lret
mov
mov
jb
dec
aaa
pop
divl
shrl
sbb
or
adc
test
cmp
dec
jne
mov
testb
cmpsb
ret
add
mov
cmp
add
cwtl
inc
mov
cld
mov
adc
rcrb
xchg
and
and
pop
imul
sbb
iret
movsl
clc
iret
push
push
test
cltd
sub
fs
mov
sbb
xchg
cmp
negb
scas
xlat
sub
movsb
in
nop
aas
jg
std
pop
jno
adc
popa
inc
mov
push
mov
cmp
or
add
insb
inc
sbb
mov
cmp
pop
push
lds
xchg
push
jo
and
test
xchg
pop
mov
mov
sbb
aad
mov
add
fnsave
mov
das
xchg
nop
jo
mov
imul
and
pop
int3
and
add
adcb
push
outsl
push
jl
pop
cmp
push
daa
inc
call
fildll
fs
aaa
jg
mov
fdivl
add
cmp
ja
cmpsl
and
jmp
jbe
sub
icebp
sbb
pop
xchg
movl
xchg
bound
mov
scas
subb
scas
pop
jbe
and
or
inc
iret
popa
clc
clc
bound
das
insb
fdivs
mov
xor
jb
pop
cli
xor
stc
shrl
xchg
arpl
cmp
inc
add
jo
or
in
jecxz
push
std
dec
mov
addr16
stc
mov
div
push
decl
or
lods
dec
shll
pop
and
cmc
or
sti
mov
pop
loopne
sub
popa
rclb
sti
sbb
cltd
scas
or
add
je
fisttpl
sti
mov
scas
mov
lea
shrb
sbb
rorb
insb
data16
sarl
sahf
jae
pop
int3
pusha
sub
test
test
mov
jno
cmc
test
aam
fmul
jbe
dec
and
mov
loop
or
or
stos
aam
fisubrs
push
mov
jmp
xor
xor
cmpsl
fisubl
sar
andl
mov
int
mov
scas
jge
in
aad
and
inc
cs
sbb
ret
sbb
gs
cmp
stos
add
xchg
add
xchg
mov
divb
xor
adc
scas
jg
mov
enter
jge
jmp
and
nop
xor
cmp
inc
jge
repnz
mov
sub
or
out
xchg
movsb
out
sti
cmp
mov
pop
cwtl
xlat
xor
lahf
addps
and
pop
sbb
sti
sbb
cwtl
mov
push
pop
leave
por
ss
or
aas
sbb
push
outsb
mov
cmp
cmp
or
pop
notl
ss
mov
in
pop
test
mov
push
xchg
mov
sti
fildl
and
incl
clc
les
xor
aas
dec
mov
mov
mov
inc
fbstp
out
jb
std
fnstsw
jo
mov
in
lcall
das
sti
fcompl
adcb
jle
mov
test
in
xchg
call
fcoml
inc
sub
mov
leave
mov
xor
inc
rorb
mov
movsb
inc
sub
push
hlt
xor
aaa
push
sub
lock
jge
adc
cld
add
inc
jno
cmp
add
xchg
push
flds
repnz
sti
leave
xlat
dec
insb
fimuls
ss
test
and
and
push
hlt
add
leave
cmpsl
add
push
aas
mov
dec
fidivrl
fwait
test
lea
daa
inc
and
cmp
call
data16
aas
fldenv
sub
add
iret
sar
in
aam
inc
stos
xchg
insb
imul
ret
leave
add
mov
pop
bound
jmp
sub
in
push
fldenv
and
daa
xchg
sahf
jl
adc
js
cmp
jmp
cmp
push
xchg
sahf
in
cmp
outsb
pop
add
sub
mov
jno
inc
popf
add
cmc
ret
movsb
das
mov
xchg
lcall
sbb
popa
lea
jg
and
fcompl
leave
lret
push
aam
subl
dec
mov
int3
dec
mov
insl
mov
sub
sahf
fwait
addr16
sbb
push
push
dec
popa
and
scas
push
mov
es
nop
negl
cmp
add
ret
push
xchg
xchg
xchg
retw
sbb
mov
pop
stc
stos
push
mov
xor
xor
mov
fstps
mov
jae
fistps
vmovdqu
sar
test
loope
and
ja
sub
cmp
push
in
adc
or
push
fnstcw
daa
cltd
popf
dec
jecxz
in
push
xchg
rolb
pop
jp
inc
std
and
jecxz
int
outsl
roll
inc
and
fst
fstps
push
add
ljmp
inc
out
pop
xchg
push
sbb
lods
gs
pusha
inc
fcoms
add
adc
sub
push
push
insl
pop
fwait
or
or
or
stc
xchg
dec
out
cwtl
sarl
cmp
inc
faddl
push
inc
push
pop
and
ljmp
cmpsb
shll
xchg
dec
adc
add
and
hlt
jmp
dec
mov
jg
push
push
adc
cmp
or
out
or
cmpsb
and
add
mov
hlt
ror
mov
cld
cmp
mov
ficomps
loopne
call
clc
fadd
mov
mov
mov
out
jle
jg
js
sbb
xor
mov
adc
xor
dec
mov
add
push
cwtl
mov
rclb
inc
and
ret
repnz
fistpll
ss
sbb
cmpsb
outsl
adc
dec
insl
xlat
fwait
inc
rcrl
mov
in
mov
out
cmp
inc
scas
push
jne
push
stc
pushf
jb
pop
jmp
lods
inc
mov
jae
sub
aad
loope
pop
push
daa
les
lret
dec
jmp
mov
fistl
out
push
fbstp
in
pushf
movsl
xor
adc
lcall
xor
int
ja
add
sbb
je
jl
pop
xor
sti
out
xchg
into
xchg
nop
bound
add
stos
cwtl
popa
adc
inc
add
mov
mov
sbb
ret
sti
pop
dec
xor
sahf
xor
repnz
fiaddl
sar
fists
sub
mov
inc
sbb
xor
mov
cmp
xchg
xchg
dec
inc
pushf
fcmovbe
mov
adc
xchg
ret
mov
and
addb
ret
test
xor
push
loope
movsb
inc
adc
inc
je
call
add
mov
sbb
cmovp
dec
xchg
into
mov
push
enter
adc
cwtl
test
sbb
out
sub
mov
int3
and
push
mov
dec
scas
dec
xchg
xor
sbb
ds
lods
fimuls
cmp
iret
ficompl
inc
and
mov
adc
inc
or
xchg
hlt
cmp
data16
jg
enter
sti
pop
dec
sbb
in
push
adc
jo
hlt
pop
loop
rolb
mov
jbe
lds
adc
mov
push
sub
fwait
daa
lock
shlb
std
mov
ficoml
pop
cs
inc
pushf
push
int
pop
jl
fldln2
add
xchg
lret
es
jmp
add
mov
xchg
jnp
cmp
push
pop
push
pop
and
insb
inc
pushf
xchg
mov
pop
dec
push
add
test
pop
add
sbb
popf
aad
ss
aam
in
lahf
cmp
insb
clc
mov
dec
cli
insb
shrb
lods
xchg
pushf
adcl
or
mov
imul
js
test
lock
jp
mov
outsb
lcall
sub
dec
and
push
call
push
sbb
inc
mov
icebp
mov
sub
adc
dec
fldenv
mov
jg
fnstcw
lock
xchg
push
mov
pop
push
jmp
cltd
lahf
cmp
ret
orb
xor
jp
insb
push
insb
sbb
inc
xchg
or
or
and
fstl
pop
pop
pop
mov
imul
xchg
pop
lahf
jb
cmpsb
hlt
inc
cs
loope
popf
push
aad
xchg
push
dec
movsb
imul
add
dec
cld
pop
repz
mov
mov
std
addr16
jo
test
jmp
jno
ficomps
or
mov
cmp
bsf
cmp
mov
push
xor
pop
dec
xchg
lds
sub
call
inc
ljmp
mov
jle
lcall
into
pop
ja
in
pop
stos
notl
fnstsw
mov
fs
dec
std
adc
lds
mov
jbe
rolb
gs
cmp
sub
idivb
lret
out
popa
addl
mov
ret
das
push
fists
mov
cld
mov
ja
test
popf
push
or
xchg
sub
stos
xchg
in
in
pop
and
popf
mov
mov
shll
push
xor
pop
add
das
adc
nop
sbb
movsb
sbb
das
shlb
test
sahf
mov
adc
jmp
and
sub
sti
sbb
dec
sbb
mov
out
push
xadd
add
pop
lock
cmc
int
lcall
push
inc
test
inc
xchg
sub
jns
adc
mov
fld
push
inc
jno
xor
jecxz
xlat
test
mov
in
cwtl
mov
xor
jge
addb
inc
push
or
jg
movsl
cmp
subl
pusha
mov
test
adc
pusha
cmc
orb
das
shr
popa
mov
dec
mov
aas
das
mov
sar
fsubrs
cltd
bound
sub
div
sahf
mov
sbb
data16
loope
repz
clc
push
cld
adc
push
aam
rcrl
jo
pop
pop
mov
mov
dec
out
sbb
nop
lret
incl
andb
int
pop
shrl
jns
sub
adc
or
bound
cmp
mov
cmpsl
insb
lcall
push
dec
mov
outsl
mov
movsl
lock
and
out
push
push
out
ret
pop
mov
shlb
inc
ljmp
shrb
cmp
or
xor
adc
fdivl
inc
dec
lcall
aas
dec
sar
add
mov
adc
mull
cmp
scas
rclb
add
mov
mov
sub
scas
scas
lods
push
out
mov
sub
leave
or
loop
inc
mov
arpl
hlt
mov
jmp
inc
xchg
repz
mov
mov
pop
xchg
into
cwtl
aas
loopne
out
scas
pop
imul
mov
cmpsb
data16
push
mov
push
insl
mov
mov
cmp
movsl
cli
adc
ljmp
into
nop
sbb
push
fstpt
int3
xchg
mov
imul
pop
lock
lcall
push
imul
sbbl
inc
jecxz
push
xor
jmp
sbb
sti
pop
sub
bound
arpl
data16
cmc
push
sbb
in
xorb
jbe
jmp
sbb
test
fld1
jno
lods
mov
in
mov
jno
jo
int3
mov
cmp
clc
ja
mov
jmp
and
mov
enter
lods
dec
testb
pop
cmp
push
inc
jecxz
jp
push
scas
shrb
shll
adc
mov
jp
popa
ljmp
and
movsb
fwait
ljmp
sbb
adc
adc
bound
movsb
inc
data16
mov
push
clc
jno
cmpsb
insb
fwait
jge
fxch
or
xor
lret
sub
push
mov
xchg
jle
jmp
fwait
add
stos
xor
test
or
fdivrp
mov
out
or
fistl
inc
mov
icebp
sbb
jmp
mov
das
outsl
inc
cmp
or
adc
ret
mov
push
dec
xchg
and
pushf
cmp
xchg
or
mov
xchg
pushl
and
shlb
dec
hlt
out
push
nop
jecxz
pop
mov
mov
push
xor
and
lahf
and
lods
lock
jmp
jbe
add
js
push
pop
push
push
notl
popf
xchg
cmpsb
mov
push
jno
test
fsub
add
push
pop
into
icebp
xchg
xor
dec
dec
dec
mov
add
das
sub
movsl
jl
mov
cwtl
inc
mov
dec
arpl
addb
pop
arpl
jecxz
pop
cmpl
push
or
add
insl
into
imul
shl
mov
cmovl
dec
stos
rcr
and
xor
ret
fldt
adc
gs
jmp
push
pop
inc
pop
cmp
jl
push
or
negb
cmp
lret
ljmp
andl
xchg
sub
ss
xchg
into
mov
inc
lret
mov
into
cmp
popa
pop
imul
insl
xlat
arpl
cmp
push
into
xchg
jp
sub
xchg
inc
fstpt
mov
jb
pop
shrb
imul
inc
nop
pop
pop
cmp
mov
mov
dec
and
xor
mov
dec
imul
xor
mov
scas
ja
test
and
test
push
jecxz
incb
jp
pop
mov
movsb
xchg
cmpsb
xor
fistps
mov
addr16
adc
fwait
daa
test
dec
jle
cli
sbb
mov
ss
mov
repnz
mov
dec
stos
mov
and
nop
jge
xor
or
adc
mov
pop
outsb
out
aad
je
fcomps
shrb
dec
pop
gs
sbb
inc
sub
jp
push
xchg
cmp
sbb
mov
outsl
jbe
dec
andl
int3
rcrl
outsl
xor
push
and
lcall
push
or
mov
mov
xchg
and
pushl
into
stos
addr16
in
iret
int
inc
out
sub
mov
aad
jge
xchg
add
into
rorl
cmpsb
pop
adc
into
sub
ja
sbb
dec
imul
push
xchg
ret
shrl
std
mov
lods
clc
inc
mov
push
loop
fdivrs
push
add
mov
aaa
xor
lods
js
sub
mov
icebp
xchg
push
mov
mov
inc
clc
inc
inc
xor
xor
mov
in
out
push
dec
xor
push
loop
sub
xchg
pop
cmc
push
popf
repz
xchg
mov
les
daa
in
dec
das
xor
xchg
popf
rcll
rcll
jb
pop
shlb
fisttps
pop
nop
fsubrs
sbb
cwtl
cmp
mov
insb
inc
and
subl
push
add
jecxz
push
adc
push
cmp
pop
xor
mov
les
pop
pop
or
cltd
cmpsl
xchg
xchg
sbb
push
fwait
addr16
jp
iret
cmp
push
fcmovnb
adc
lea
mov
push
inc
add
fwait
mov
pop
push
fwait
pop
mov
loopne
sub
xchg
mov
out
mov
clc
cmp
mov
loope
push
or
xor
cmp
inc
test
imul
or
jmp
into
cli
jae
sar
sub
lahf
xor
je
inc
pushl
cltd
fisttpll
push
inc
daa
push
jo
mov
test
test
pop
adc
mov
push
mov
cs
scas
arpl
push
cmpsl
lods
imul
mov
sbb
jae
fprem1
sbb
push
incl
mov
mov
and
sbb
adc
stc
xor
fistpl
pop
dec
xchg
ljmp
rdpmc
and
pop
call
test
pusha
cli
arpl
test
push
push
add
jne
cmp
pop
das
cmpl
xlat
pop
xchg
ret
cld
lock
add
mov
or
ljmp
popa
dec
lcall
dec
test
les
jmp
push
adcl
fwait
inc
or
enter
lret
fsubp
dec
sub
mov
inc
adc
push
adc
jne
out
loopne
aaa
pusha
xchg
clc
mov
sbb
push
cmpsb
mov
cltd
pop
sbb
orb
aaa
cltd
push
ljmp
jl
test
aam
ljmp
xor
popa
dec
pusha
jle
lret
sti
sub
cmp
pop
in
push
jns
outsb
and
das
lds
pop
sti
sbb
stos
push
ficompl
push
dec
sub
fistpl
je
outsl
push
and
xchg
dec
inc
and
lock
or
frstor
dec
push
repz
ljmp
out
inc
sti
push
push
repz
add
icebp
jno
jge
aad
mov
mov
sbb
mov
cmp
cmpsb
pop
push
sbb
or
mov
dec
push
cmpsb
push
pop
shrl
xorb
sarb
shrb
pusha
mov
or
jbe
ljmp
mov
sbb
jg
leave
push
add
pushf
sbb
dec
inc
fstl
sub
das
mov
jo
mov
jne
sbb
xchg
cmp
xor
mov
cmp
adc
adc
adc
dec
lahf
sti
mov
adc
mov
or
aam
jmp
out
std
cmp
jae
pop
ficompl
sub
lods
jns,pt
cmc
sbb
loope
gs
fnsave
loopne
push
pushl
stos
push
aam
popa
xchg
push
jg
sbb
mov
xor
mov
stos
pusha
jg
mov
sahf
cmc
fwait
mov
jb
or
pop
pop
sub
inc
ret
fadd
jp
mov
insl
aaa
js
out
pop
xchg
xor
sbb
sub
dec
push
add
xor
test
cmp
adc
rorb
xchg
stc
mov
sub
dec
sub
and
adc
jbe
or
pop
in
dec
inc
jl
mov
out
leave
clc
mov
mov
pop
sbb
fcoms
sub
pop
xor
or
clc
mov
jb
add
pop
jl
or
ljmp
call
mov
out
cmp
into
lret
aam
popa
test
movsl
in
and
test
dec
nop
je
lock
rcll
sbb
inc
jae
andb
inc
xor
test
mov
dec
icebp
std
pop
push
sub
or
jl
cmpl
movsb
jg
mov
popa
outsb
js
addr16
aam
or
jo
jno
seto
test
inc
daa
cmpsb
pop
insb
repz
sahf
or
dec
cmp
fisttps
mov
das
leave
int
repz
insl
test
mov
mulb
or
or
insl
xchg
outsb
popf
xchg
arpl
or
test
cli
mov
adc
cld
orl
cmp
es
cltd
and
int
mov
mov
push
into
sahf
cmp
push
movsb
and
bound
inc
shll
pop
psadbw
lods
scas
fdivl
add
adc
mov
ret
adc
popa
stos
cwtl
push
outsb
ja
fistl
outsl
pop
sahf
int
aaa
mov
add
mov
mov
xchg
arpl
add
test
ja
fcomps
mov
pop
jl
inc
rcrb
push
test
or
xor
dec
les
imul
clc
or
icebp
mov
or
stos
les
or
ja
addr16
sbb
imul
mov
dec
add
xor
outsb
jge
popa
adc
addr16
call
and
and
jno
pusha
ror
ss
dec
pop
fwait
jge
or
je
or
pop
fimull
and
xchg
jecxz
das
ja
adc
fstl
mov
cltd
xchg
jp
fsubrs
sub
movsl
lods
repz
mov
out
cs
or
pop
fwait
push
or
or
sub
mov
adc
sahf
sti
and
mov
shl
clc
andl
xor
mov
call
outsl
inc
pop
fisttpl
xor
aas
scas
sub
mov
in
jnp
and
insb
mov
add
cmp
aam
int3
xor
jo
call
and
sub
push
cld
inc
fidivrs
sub
pop
push
imul
rcr
add
enter
test
xchg
imul
mov
add
lods
mov
or
filds
fnstcw
cwtl
add
dec
fdivs
cwtl
pop
pushf
inc
xor
test
xlat
loopne
mov
lret
pushf
ljmp
pusha
lock
push
sub
lock
add
sbb
pop
sbb
mov
dec
xor
sub
lahf
or
cmp
mov
cs
push
stos
in
adc
pop
es
push
outsb
push
addr16
test
aas
and
test
push
cmp
mov
test
mov
sbb
lods
sub
xor
test
pop
imul
sbb
call
addb
or
dec
pop
cwtl
cmp
into
aad
cmpsl
dec
movsl
dec
xchg
insb
enter
mov
inc
xchg
or
aam
jg
gs
jmp
and
jnp
inc
shll
imul
mov
stos
mov
xor
int3
clc
mov
stc
jl
lods
gs
pop
dec
mov
add
call
sti
rcr
outsb
fistpll
jno
pop
push
and
jne
jb
pushf
or
jmp
sbb
lahf
xchg
daa
push
inc
shl
sbb
fwait
xchg
xchg
jmp
add
mov
data16
fwait
aaa
dec
xor
loope
push
lods
es
mov
dec
int
jmp
xor
neg
hlt
enter
inc
outsl
xor
and
stos
rcl
mov
ds
in
repnz
imul
xor
or
ret
dec
push
mov
dec
cmp
ss
in
xor
hlt
cmc
into
and
or
movsl
xor
add
xchg
mov
rclb
cmp
mov
insb
out
rolb
or
sbb
mov
push
inc
mov
push
loope
cmpsl
mov
jmp
scas
and
add
bound
das
push
out
call
adc
xor
and
mov
mov
test
in
sub
cmpsl
mov
imul
pop
or
mov
roll
jge
add
sub
js
xchg
lahf
add
pop
shr
fdivs
gs
add
cmc
ss
pop
movl
push
mov
lds
pop
dec
mov
cs
xchg
xchg
pop
inc
lret
jnp
stos
mov
sahf
jne
jo
inc
fs
mov
inc
sbb
fistps
sub
ret
jnp
frstor
cmp
jne
mov
xchg
mov
enter
xlat
cmpsl
icebp
mov
and
repnz
inc
and
cs
cs
push
ja
outsb
and
sldt
mov
jae
dec
jne
mov
xor
xchg
incl
or
sti
sub
jbe
lds
jg
insb
mov
sub
jbe
in
xchg
add
hlt
jo
cmp
jbe
and
jmp
sti
roll
in
lcall
dec
mov
or
rorb
pop
adc
mov
cmp
loop
inc
mov
jbe
pusha
je
inc
inc
ret
cltd
mov
cmp
pop
xchg
xchg
sub
clc
dec
test
mov
inc
sbb
jp
lods
imul
jnp
pop
rol
pop
icebp
ss
testb
sbb
shrb
mov
xchg
sub
mov
jmp
jnp
or
cmove
cmp
ret
lea
fs
push
cmc
int
in
lods
add
xchg
and
rcrb
cmpl
adc
push
mov
sub
pop
adc
cmp
out
push
test
pop
int
jae
stos
lods
xor
jae
add
jno
cmpl
repnz
mov
adc
ljmp
mov
subl
and
fs
push
shll
imulb
push
mov
sti
je
lcall
jl
add
and
xchg
mov
lock
push
pop
pop
dec
mov
in
loope
in
jecxz
mov
jo
push
cmpsb
out
jecxz
xchg
push
movsb
fdivs
jge
test
in
push
insl
sub
adc
outsb
popa
iret
adc
ficompl
inc
aam
and
ss
inc
inc
iret
sub
jl
dec
cs
fisttpll
js
and
sbb
sub
call
xchg
mov
jne
pop
insb
inc
add
push
outsb
pop
outsb
ret
jbe
popa
out
or
test
nop
loopne
or
cmp
add
pop
dec
test
mov
jg
pop
cmpsb
mov
shll
mov
jge
mov
and
pop
xor
stc
shl
inc
fwait
and
ds
push
inc
cltd
mov
push
mov
adc
leave
adc
sub
test
sbb
arpl
ss
pop
jg
push
outsb
pop
jno
sarl
loope
jnp
jg
inc
stos
mulb
push
or
movsl
xor
mov
mov
mull
or
or
push
inc
cmp
push
fists
push
jmp
mov
call
cs
insb
or
mov
decl
insb
xchg
inc
rorl
jb
or
and
and
addr16
cmc
ret
js
cmp
add
push
inc
ds
repz
mov
lret
push
inc
cli
stos
mov
js
outsb
nop
ret
pop
push
das
xor
inc
movsb
fwait
pusha
xor
gs
scas
sbb
xchg
jnp
adc
or
je
mov
popa
scas
jp
out
leave
fwait
push
out
dec
fcoml
pusha
jae
or
adc
mov
orb
cs
or
xor
lret
mov
mov
fnstsw
fdivs
xchg
pop
int
push
outsl
cmp
jmp
xchg
in
dec
int3
mov
popa
mov
push
scas
mov
and
lret
add
mov
xchg
call
add
xchg
call
push
push
pop
sbb
movsl
cltd
sbb
pushf
sbb
and
repnz
sbb
jo
jb
add
dec
shlb
popf
pop
mov
mov
outsb
nop
insb
stos
jb
in
nop
and
mov
inc
jecxz
mov
rolb
mov
cmp
mov
std
or
insb
push
adc
jae
mov
push
pop
xchg
cmp
jmp
inc
jle
inc
inc
jb
cmpsl
clc
xlat
mov
jbe
cmp
xchg
mov
inc
stc
xchg
test
ds
xor
inc
xchg
pusha
hlt
pop
rcl
enter
mov
mov
jp
xchg
pushf
stos
sbb
sbb
or
cs
xchg
fwait
inc
push
sti
or
or
rclb
ss
gs
mov
shl
and
push
shll
sub
out
enter
lcall
fisttpll
ss
or
sbb
lret
js
rcrl
gs
mov
arpl
mov
cwtl
xchg
fadds
xchg
push
cmp
xchg
dec
cs
aam
push
inc
scas
pop
call
mov
rcrl
jmp
scas
and
in
xor
push
test
sar
pop
clc
pop
aas
push
xchg
aad
mov
jg
das
hlt
sbb
cmp
cmp
fisubrs
pop
jbe
jnp
into
add
or
cli
mov
add
xchg
hlt
mov
hlt
in
sub
jecxz
adc
mov
dec
sbb
dec
inc
cli
xchg
cli
ret
cmp
adc
in
pop
mov
xchg
fstps
jmp
js
push
sub
mov
aas
add
lahf
xchg
imulb
insb
jo
inc
mov
jb
mov
jns
push
cli
testb
or
mov
and
iret
imul
push
xchg
int
adc
jg
push
popa
pop
sub
inc
push
mov
or
stc
mov
cmpsl
repnz
xor
mov
xchg
jo
iret
pop
outsl
adc
mov
inc
shll
sti
or
call
stos
pop
jns
scas
cwtl
mov
shll
out
pop
sbb
cs
inc
pop
fwait
or
lods
rol
inc
jb
xchg
sub
mov
dec
or
push
roll
xor
xlat
leave
jbe
push
push
lahf
and
fcompl
loopne
test
dec
and
cs
std
pop
fidivrl
fidivl
cltd
pop
out
push
mov
enter
pop
push
scas
lods
inc
arpl
or
adc
cltd
popf
and
push
xchg
xchg
jnp
cwtl
sbb
sub
add
scas
call
mov
xlat
sub
loop
and
and
int
lcall
js
fmuls
dec
sbb
xor
or
cld
pop
inc
jnp
add
movsb
cli
xchg
mov
and
mov
mov
out
lods
xchg
xchg
sub
ja
push
or
cs
hlt
adc
inc
test
out
loope
jb
insl
push
mov
mov
push
sub
cmpb
into
fistps
mov
in
lret
xchg
xlat
icebp
sub
pop
sbb
mov
sub
out
xlat
jecxz
xchg
adc
fisubs
xor
sbb
loope
push
jmp
test
mov
push
lcall
mov
or
fs
mov
repz
repnz
data16
jno
in
in
je
outsl
rcrb
push
sahf
adc
adc
int
xchg
popf
mov
cmp
insb
or
leave
inc
xchg
aas
out
stos
xchg
push
add
iret
gs
les
test
mov
sbb
cmpsb
int
and
inc
idiv
mov
call
imul
cmp
aaa
sti
clc
sti
jg
cwtl
mov
sub
inc
clc
dec
cs
push
cmp
xchg
int3
shrl
and
add
loope
jb
inc
roll
inc
mov
fsts
push
arpl
add
cwtl
push
and
fcmove
xchg
cmpsb
inc
pusha
bound
in
sbb
push
inc
pop
ficomps
stos
mov
and
pop
fidivs
je
push
mov
xor
dec
or
mov
nop
cmp
mov
std
mov
and
insl
xchg
mov
push
cltd
out
xor
ret
stos
nop
adc
popa
outsb
cld
jmp
ficoms
pop
dec
cmp
cld
fmull
popf
int
inc
push
sbb
sbb
xchg
or
in
pop
pusha
pop
jecxz
pop
lcall
shlb
leave
popf
inc
push
repnz
mov
lods
push
fnstcw
cwtl
je
lods
sti
sbb
pop
jno
jbe
addr16
mov
adc
fxch
bound
out
adc
hlt
or
fisubrl
popa
scas
cmp
cld
mov
and
adc
ljmp
jnp
jge
push
push
add
popf
cltd
pop
fdivrs
mov
decl
mov
or
push
and
jp
xchg
sub
lret
or
aad
mov
icebp
insl
cmp
shlb
jecxz
pop
pop
dec
ds
cmp
xchg
idivl
xor
sbb
xor
and
lea
out
ds
out
lea
loopne
pop
or
shrl
push
sbb
mov
in
cmpsb
frstor
inc
int
inc
pop
and
into
jbe
nop
fs
xchg
movl
rol
push
pop
push
xor
add
into
inc
xchg
movsl
dec
iret
adc
add
mov
adc
call
or
inc
daa
cmp
mov
inc
nop
out
xchg
mov
xor
ret
fs
adc
dec
ret
push
shl
insb
stc
cs
testb
sahf
jns
pop
int3
cld
jl
or
mov
dec
mov
cmc
cmpsb
loop
or
jno
dec
xchg
mov
lret
sbb
lahf
mov
gs
test
sbb
jb
mov
subl
cli
mov
nop
mov
jae
inc
in
cwtl
sbb
cmpsb
mov
mov
xchg
push
xchg
dec
aaa
jae
push
stos
jmp
dec
rorb
dec
lcall
sub
xor
scas
add
icebp
mov
adc
int
neg
mov
hlt
stc
pushw
bound
loop
mov
loop
into
es
les
ret
andl
repnz
loope
or
aam
lret
sahf
xchg
adc
jp
jmp
dec
mov
mov
adc
bound
out
lahf
add
sbb
adc
lds
jnp
add
sub
mov
adc
scas
inc
dec
fistl
out
adc
xchg
out
loopne
ljmp
xlat
or
aaa
fwait
into
or
insb
dec
dec
cmp
jns
pop
in
dec
je
pop
push
xchg
push
jae
mov
dec
pushf
sbbb
xor
push
mov
dec
lods
fistpl
shlb
xor
cmpb
nop
out
jno
ret
jp
enter
xlat
xchg
push
mov
leave
cld
push
idivl
in
out
push
mov
xchg
call
xchg
popf
pusha
mov
std
mov
sub
xchg
add
cmp
inc
in
orl
inc
inc
pop
adc
in
js
push
inc
je
aas
fidivrs
cltd
in
std
lods
push
xor
test
in
out
insb
pop
lret
add
fidivrs
rorb
hlt
imul
cmpsl
cmp
cld
test
pop
inc
or
lods
xor
jg
roll
cmpsl
mov
lcall
and
or
dec
pop
sub
cs
in
es
arpl
inc
ja
adc
cs
iret
mov
ja
push
cli
dec
filds
fisubl
jne
jnp
cmc
or
push
mov
sbb
lock
popa
cli
jno
aas
daa
fidivs
push
test
inc
inc
mov
or
sti
dec
push
mov
aam
pop
xor
adc
fwait
push
scas
sub
sbb
add
pop
lods
mov
push
mov
scas
pusha
setbe
jl
and
repz
gs
ljmp
jbe
into
dec
add
xchg
mov
sub
mov
ficomps
cmp
mov
loope
in
fwait
mov
mov
xor
inc
xchg
pop
and
out
or
push
test
xchg
sbb
xor
pop
rclb
jb
and
pop
jns
pusha
gs
loop
sti
icebp
mov
mov
and
int3
stos
fdivrl
jb
jle
fs
jae
mov
sbb
les
cmc
cld
jne
and
cs
shrb
stc
inc
mulb
xor
inc
xlat
adc
pop
je
incl
sarl
mov
inc
aad
pop
xchg
and
sti
mov
cltd
mov
pushf
std
xchg
lods
pop
out
sti
mov
loopne
jecxz
and
lds
scas
xor
iret
add
adc
sbb
iret
xchg
add
outsl
movsl
or
andb
mov
lds
and
push
lret
ds
and
xchg
lods
jmp
add
pop
cmc
popa
or
adc
mov
add
xchg
pop
add
out
icebp
movsl
push
inc
aad
push
or
jae
jg
popf
or
subb
ss
or
into
push
mov
xor
aad
xchg
and
fbld
imul
lahf
push
xchg
test
jno
sbb
adc
fnstsw
sub
mov
sub
and
into
in
pushf
ret
jbe
out
shrl
push
push
in
insb
push
jl
dec
mov
add
add
jmp
xchg
leave
mov
and
jl
scas
test
xchg
test
jl
mov
addb
loop
insl
popf
or
xor
push
xor
incb
xchg
imul
sbbb
lock
ja
sub
xor
test
mov
loope
jae
xchg
xchg
loope
sub
fwait
sbb
arpl
jb
push
or
mov
dec
mov
cld
insb
pop
mov
lea
mov
lods
sbb
jl
xchg
adc
ficoms
dec
mov
in
cli
cli
xlat
aas
test
and
pop
jg
jle
push
jo
or
fabs
dec
data16
mov
xchg
es
jbe
int3
and
mov
xor
enter
add
ljmp
push
inc
cmp
popf
add
test
adc
inc
mov
adc
lods
rcrb
cmc
fisubrs
ss
and
bound
scas
test
dec
shll
jb
pop
dec
xchg
enter
pop
outsl
add
adc
dec
dec
int3
adc
testb
test
inc
push
cmp
push
mov
jno
add
shrb
cmp
negb
das
mov
fnsave
pop
test
jl
xchg
mov
pop
mov
lret
mov
ret
fcmovnbe
jb
je
stos
shrl
or
std
adc
inc
out
rorb
int
inc
lret
sbb
cmpsw
lret
dec
into
daa
cmp
int3
fldl
cltd
or
cltd
mov
xor
fimuls
cld
xchg
xor
aas
xchg
in
xchg
mov
mov
je
cld
repz
dec
enter
cwtl
sbb
popa
mov
mov
leave
mov
push
xchg
sbb
jo
jl
inc
into
adc
pop
and
lods
xchg
jae
push
lret
std
sbb
loopne
inc
or
iret
sub
in
mov
mov
mov
lods
or
xor
into
mov
stos
clc
xchg
repz
dec
decl
nop
xor
ljmp
js
por
jns
scas
xor
adc
rclb
mov
repz
and
fidivl
add
xchg
push
xchg
inc
data16
testl
xchg
icebp
push
xchg
or
call
pop
jno
push
sub
mov
rcrb
repnz
imul
in
repnz
ljmp
push
push
ljmp
in
jmp
es
bound
lahf
mov
or
in
fwait
movsl
and
les
fmuls
std
jmp
fcoms
divl
xlat
mov
push
and
sbb
jp
repnz
mov
lock
push
sbb
cmpsb
inc
mov
pop
adc
adc
lret
jp
movsl
inc
push
iret
fwait
in
test
or
mov
popf
sahf
xor
cmpsb
aam
mov
mov
stc
adc
mov
sahf
push
gs
push
addr16
call
mov
jp
jl
mov
test
mov
insb
add
enter
aad
data16
adc
sbb
xor
push
mov
jp
aad
aam
push
imul
das
adc
sub
xor
orb
sub
enter
add
insl
fsts
pop
dec
leave
lock
xor
test
ja
xor
std
mov
icebp
dec
push
add
test
sbb
mov
mov
aaa
mov
or
xlat
xchg
jo
mov
lcall
repnz
fdivl
mov
incl
fs
dec
daa
popf
jne
jge
out
adc
mov
mov
popa
cmp
test
cmp
loop
and
xor
mov
mov
lea
clc
xor
test
dec
and
cld
xchg
cwtl
ret
cmpsb
cltd
xor
jnp
js
add
adc
pusha
repnz
sbb
mov
push
jb
mov
push
xchg
mov
sbb
pusha
aas
push
pushf
mov
in
pop
jge
arpl
pop
xchg
insl
push
rorb
push
pusha
sbb
mov
cmp
xchg
add
shrl
pop
jl
ret
fcmove
xchg
sub
add
sar
sbb
dec
push
inc
icebp
or
mov
mov
in
mov
ja
or
mov
in
adc
loope
xlat
rcl
in
pop
pusha
fiaddl
add
xchg
inc
int
dec
cmp
icebp
push
inc
cld
xchg
lea
jmp
mov
pop
mov
cmpsb
sub
add
xchg
ret
add
xor
es
cmp
mov
ja
xchg
adc
jae
sub
std
mov
cwtl
xor
es
cmp
push
in
pop
and
stos
outsb
aam
es
add
rcrl
dec
daa
inc
negb
in
push
aas
std
xlat
jae
push
cwtl
push
sbb
mov
lcall
mov
test
xchg
mov
icebp
int3
jne
negb
sub
cmp
in
pop
pop
sub
pop
lods
xor
ss
push
je
sar
addr16
or
xchg
jg
in
xchg
inc
popf
jne
dec
cld
leave
push
sbb
mov
outsl
rep
fisubrs
or
sbb
insb
test
dec
das
pusha
dec
aas
mov
or
pop
scas
pop
fnstsw
jo
mov
dec
testl
jb
sub
pop
pop
push
xchg
mov
push
fists
pop
lds
sbb
popf
or
outsb
jo
repz
add
dec
adc
mov
jp
mov
mov
and
mov
pop
addb
mov
enter
int3
outsb
jl
jg
adc
sbb
div
mov
in
mov
int
nop
fs
mov
in
push
push
dec
in
insb
loop
repz
pop
jmp
stos
xlat
stc
inc
jp
loope
pushl
jnp
pmaxsw
push
push
or
xor
inc
aaa
jne
and
sub
dec
shrl
jle
push
and
jo
test
es
int
xchg
xor
inc
dec
xor
mov
or
pop
mov
dec
call
jb
rclb
mov
mov
jae
add
lahf
fwait
or
push
cmp
jmp
and
push
in
leave
out
add
nop
and
nop
shll
jns
dec
jp
mov
sbb
mov
andb
sub
jae
or
push
sti
sub
sub
shlb
loope
dec
jbe
scas
xchg
sub
test
push
scas
fildll
cmpsl
dec
pusha
psllq
pop
into
inc
in
imul
ret
jg
stc
in
nop
test
inc
incb
arpl
sbb
push
pop
test
and
inc
jge
iret
jl
das
stos
insl
pop
pop
shl
jp
sarb
inc
push
mov
mov
lods
andnps
arpl
adc
cmp
gs
sub
shlb
test
sbb
leave
mov
popa
cwtl
push
stos
cmpb
mov
xchg
daa
fstl
out
les
jnp
cmp
mov
or
pop
mov
ret
push
daa
pop
and
and
mov
add
dec
popf
inc
les
jbe
fisubrs
mov
mov
sbb
pop
bound
cmc
cmc
jb
jle
int3
imul
dec
cmp
xchg
or
loop
mov
in
xchg
out
test
pop
sbb
dec
add
and
jnp
mov
mov
cmp
fwait
push
stos
jmp
rcrl
pop
cwtl
cmpsb
stos
int
mov
mov
jnp
lock
pop
xchg
dec
js
lret
jg
sbb
sub
fstl
and
pop
out
aad
rcrl
push
lret
mov
and
and
add
and
lock
dec
and
ss
mov
push
lea
jmp
js
or
cltd
shll
test
roll
loope
xchg
inc
sub
or
je
cmpsb
mov
pop
ss
out
jle
xchg
movsb
jmp
jg
aam
rclb
das
mov
lock
push
xchg
cmc
sbb
jl
gs
test
test
dec
hlt
pop
push
rclb
push
sub
cmpsl
or
adcb
push
pop
jno
fwait
mov
popa
daa
mov
outsl
mov
mov
roll
cmp
inc
ss
or
test
mov
in
push
data16
cld
daa
cld
push
or
sub
mov
in
or
mov
in
imul
dec
dec
test
adc
push
daa
stos
mov
nop
xchg
insb
add
cltd
pusha
mov
pop
scas
xor
inc
std
xlat
inc
xchg
or
repnz
adcb
xchg
add
sti
xor
fs
popf
mov
sub
xchg
sub
adc
inc
sbb
fcomi
jo
out
leave
jmp
nop
push
jbe
inc
iret
pop
ljmp
test
into
xchg
iret
sbb
lahf
pop
dec
pop
call
jmp
xlat
xor
push
scas
adc
stos
mov
or
pop
pop
ret
push
jle
icebp
inc
daa
mov
bound
mov
lods
orl
push
push
mov
lods
jbe
mov
sbb
jnp
test
jg
pop
bound
out
insl
ss
mov
mov
lahf
xor
inc
jne
orl
pop
adc
cmp
leave
sub
sbb
popf
cmp
pop
cmp
movswl
sbb
jmp
lea
inc
push
int3
bound
mov
add
icebp
fwait
add
jnp
sbb
cmp
ds
jge
mov
push
jge
rcrl
mov
outsb
ja
fistpl
sub
jecxz
cmp
in
xorb
mov
pop
or
fimuls
xor
mulb
push
mov
notl
cmp
adc
pusha
push
fdivrl
clc
jp
or
icebp
sti
xchg
fsubs
pop
inc
daa
test
jle
stos
rcrb
cmp
cmp
add
stos
and
cs
pop
sub
ret
pop
arpl
ret
mov
or
dec
pop
stos
mov
mov
std
cmp
dec
lds
pop
mov
daa
sbb
gs
xchg
jg
mov
std
xor
adc
cmc
jg
sahf
pop
pop
mul
mov
mov
sbb
dec
mov
mov
sub
jg
push
cmp
pusha
mov
or
mov
cwtl
repnz
pop
cmpsl
stos
mov
add
rcl
call
or
jp
notl
pop
push
icebp
pop
sbb
pusha
add
inc
rorl
sbb
or
shll
out
add
xchg
adc
mov
jo
cmp
dec
jp
pop
xchg
outsb
mov
stos
xor
into
int3
cmpsb
cli
fdivrs
xor
scas
mov
das
or
ficompl
dec
pop
out
xor
dec
ficoml
cmp
cmovae
pushf
out
push
call
test
pop
js
sub
fdivl
xlat
pop
mov
aam
mov
or
push
jne
das
sahf
jmp
outsb
adc
mov
sub
mov
push
sbb
push
push
xor
fcompl
jns
push
mov
xchg
bound
mov
sti
jecxz
mov
add
dec
incb
mov
xchg
fistpl
inc
shll
sti
in
clc
dec
int3
ret
hlt
das
pop
push
and
add
mov
xor
or
rcrb
addb
lds
jns
xorb
dec
sub
sbb
movsl
repz
repz
ret
pusha
push
xor
sbb
mov
dec
stos
lahf
or
fisubs
mov
xlat
xchg
fnstsw
sub
xor
fisubrs
push
sti
popa
mov
pop
or
push
lock
frstor
roll
int3
cs
mov
mov
stc
scas
rorb
insb
jle
xor
or
xor
imul
pop
aaa
sti
je
push
push
xchg
sub
fcmovne
xchg
add
cli
xchg
push
lahf
mov
add
xchg
adc
push
dec
fimull
lds
int3
push
xchg
in
jmp
sub
outsb
test
pop
xchg
xor
lcall
pop
ret
mov
orl
mov
cs
mov
repz
ret
aaa
xchg
rep
inc
mov
cli
cli
out
dec
inc
fisubrs
iret
clc
jecxz
lods
fwait
xor
pop
dec
divb
xchg
jne
xchg
pop
insl
jo
push
jns
xchg
mov
lods
pop
scas
jns
mov
enter
push
in
adc
lret
adc
data16
sbb
fdivs
pop
mov
cli
and
mov
jp
add
inc
cltd
xadd
push
aaa
js
sub
int
dec
in
cmc
in
cmc
add
sbb
jmp
movsb
in
mov
xor
lret
mov
movsb
mov
jle
push
jnp
jbe
pop
and
in
stc
mov
xor
inc
leave
sti
adc
sbb
into
jb
jp
rclb
ja
movsl
sti
out
cmp
add
and
int
and
add
mov
neg
arpl
in
and
cwtl
adc
mov
lods
mov
sar
and
lahf
std
dec
mov
cmp
std
cli
shrl
pop
push
xor
xlat
dec
imull
stos
jle
push
aad
jnp
push
mov
inc
jmp
inc
mov
cmp
mov
cmp
mov
loopne
daa
pop
inc
mov
mov
loope
jp
mov
cs
scas
push
mov
xchg
push
cwtl
mov
inc
mov
lcall
mov
addr16
fcomp
in
fnsave
out
cmpl
mov
icebp
and
and
push
add
mov
in
or
negl
cmp
in
jmp
jge
psubq
sub
sub
push
push
fcomp
xchg
inc
or
pop
xor
mov
pushf
call
stos
xchg
or
mov
and
xor
andl
inc
add
adc
sub
cs
lods
inc
mov
sti
mov
xor
mov
movsl
ds
test
jp,pn
jge
imul
std
jg
xchg
ss
stos
aam
ja
insb
test
das
push
cmp
aam
dec
dec
clc
push
out
test
cmp
ljmp
cmp
or
call
mov
xchg
jns
lds
jae
js
sahf
cmp
jb
add
mov
xchg
jae
or
push
orb
stos
rcll
aas
or
lds
jmp
rcr
mov
daa
lock
shrl
cmp
roll
inc
sbb
repnz
pushf
data16
call
adc
pop
dec
push
test
pop
pop
aam
mov
mov
add
or
out
shlb
fistpl
popf
push
jg
nop
mov
rorl
pop
add
mov
xchg
ljmp
stc
je
mov
js
inc
push
add
mov
cwtl
out
mov
dec
sbb
test
mov
add
push
in
xor
jl
notl
adc
inc
push
pshufw
dec
loope
xchg
cmpsl
icebp
into
mov
cmc
add
jae
mov
movsl
fld1
addr16
sub
add
rcrb
jnp
jmp
xchg
mov
xlat
sbb
or
aad
out
push
cs
in
inc
lea
mov
sub
sub
aas
sub
sub
cmp
mov
mov
jge
jmp
push
out
add
bound
test
mov
out
add
xchg
inc
push
fldcw
int
cmp
ret
or
loope
xor
jp
js
adc
mov
into
and
mov
das
shrl
pop
push
mov
jne
and
and
mov
aas
xchg
rcrl
add
fdivp
add
xchg
push
mov
sti
xchg
rolb
decb
mov
or
xorb
jbe
or
mov
mov
mov
xchg
xchg
jle
xchg
pop
data16
dec
xchg
jp
in
filds
cmp
pop
lcall
daa
jo
mov
rcr
test
icebp
hlt
dec
cmpsl
in
mov
pop
call
pop
test
ljmp
mov
xor
test
or
data16
add
stos
in
xchg
fldl
mov
mov
mov
dec
lcall
adc
sub
enter
or
loopne
sti
mov
rcll
mov
dec
test
es
xor
lods
adc
and
xor
cmp
add
lcall
mov
xchg
pop
xchg
push
jp
dec
scas
add
subl
push
mov
push
xchg
inc
out
pop
das
fs
jge
clc
mov
and
or
ja
into
sub
pop
test
push
repnz
xor
inc
sbb
pusha
xchg
icebp
pop
xchg
xchg
jbe
jmp
inc
movl
adc
outsb
in
cwtl
mov
sbb
out
xchg
adc
push
js
test
pop
sub
sti
push
loop
lock
xlat
aaa
rclb
fcomps
loope
xlat
and
adc
out
iret
push
outsb
adc
sahf
jo
dec
dec
js
xor
and
bound
out
fcomi
jl
xor
sbb
insb
jg
cmp
xchg
pusha
call
int
pop
or
mov
int
je
movsl
xor
add
push
add
jecxz
lret
and
ljmp
dec
and
dec
mov
push
pop
lret
or
jle
and
sub
jp
add
adc
nop
cmc
repnz
sbb
cmp
loope
inc
cmpl
outsl
xchg
sub
push
inc
xlat
ja
jo
lods
push
push
movsb
lock
lea
movsb
jecxz
das
xchg
imul
orb
push
sbb
mov
in
movsb
inc
pop
jp
push
jp
mov
push
jmp
or
xchg
add
jp
mov
pushf
adc
test
pop
and
lods
xor
and
lds
fnsave
xchg
sbbl
fwait
int
sub
mov
lock
xchg
inc
add
sub
xor
cmp
movsb
jecxz
xor
sub
test
iret
into
and
mov
movsb
push
mov
sub
insl
adc
cmp
arpl
gs
into
jecxz
or
ret
mov
icebp
and
inc
clc
orb
mov
stos
mov
sbb
pop
sbb
cmp
outsb
data16
push
push
push
int
fistl
pushf
xchg
testb
std
cmpsl
mov
sti
call
mov
or
mov
pop
pop
leave
outsb
push
addr16
and
fisttpl
ret
xlat
int3
sub
mov
lock
dec
xchg
loop
fs
cmc
or
sbb
or
frstor
pushf
or
in
sti
jnp
fldlg2
xor
scas
leave
sbb
jp
sub
xor
jmp
aaa
dec
sarb
cs
insl
enter
xlat
data16
pop
dec
pop
ja
popa
add
pop
into
dec
out
xchg
add
arpl
leave
xlat
test
mov
cmpsl
cmp
adc
mov
sub
inc
loope
jmp
aaa
out
cwtl
mov
xchg
fsts
cmp
pusha
aaa
inc
add
scas
fbld
sub
mov
inc
add
les
dec
xchg
ja
les
jnp
aaa
aam
sahf
test
das
or
pushf
cltd
sbb
lret
cmp
pop
jo
xchg
arpl
rclb
sahf
push
popf
lret
shll
leave
outsl
adc
imul
jle
mov
idivb
inc
add
push
add
xchg
adc
push
ret
scas
int3
dec
fstp
and
fnstenv
hlt
pop
mov
cmpsb
and
sti
mov
into
in
bswap
fsubs
or
insb
movsb
lock
aad
jle
cltd
mov
call
sub
dec
int
sub
xchg
sbb
and
call
mov
adc
jno
cmp
xor
pop
sub
popf
mov
jmp
xchg
xchg
mov
mov
mov
lock
dec
repnz
fwait
int
xor
popf
dec
addr16
xor
mov
negl
shrb
push
xchg
adcb
xchg
fldl
sbb
add
inc
mov
and
pop
pop
test
fldt
jae
call
mov
pop
push
or
sub
lcall
add
adc
xchg
mov
jge
pop
sub
push
dec
cwtl
dec
sahf
and
push
xor
rolb
clc
adc
scas
inc
ret
in
pop
sbb
sbb
or
pop
arpl
xor
addr16
outsb
mov
mov
aaa
mov
and
cmc
dec
xor
sub
mov
repz
xor
inc
popf
mov
fs
mov
data16
imul
cld
lcall
xor
jno
sbb
aas
xor
push
dec
sbb
and
sarl
xchg
test
lea
lcall
add
ftst
fimull
jno
jmp
jp
pop
push
cmp
or
xchg
push
int
out
lret
pop
sbb
pop
hlt
xor
jo
and
xchg
lcall
add
push
jmp
lahf
push
lds
or
mov
jp
idivl
adc
adc
push
inc
sbb
shl
leave
or
sub
adc
and
sbb
dec
xor
jl
dec
loope
test
lods
int3
mov
ss
add
inc
enter
bnd
inc
jecxz
andb
mov
mov
dec
mov
sub
xchg
leave
pusha
mov
mov
pop
bound
icebp
xchg
xor
jmp
out
sub
hlt
enter
daa
inc
and
push
mov
xor
adc
stc
into
push
pop
stos
cs
ljmp
ficoms
lea
xor
repz
cmpsb
cltd
push
pop
mov
adc
adc
dec
fsubs
jp
or
iret
loope
add
andl
stos
stc
cmp
jo
sbb
mov
jecxz
bound
es
cltd
cmp
fisubrl
aad
push
adc
jg
gs
sub
pushf
xchg
mov
inc
jns
mov
inc
icebp
lods
shlb
call
inc
imul
sub
xchg
inc
push
popa
xchg
push
push
fisttpll
ret
xchg
fcompl
jp
shrb
insl
cmc
popa
inc
pop
inc
ret
mov
jmp
adc
pop
xlat
cmp
jnp
out
sbb
pop
mov
iret
fdivrs
mov
push
shl
mov
int
cmp
and
lods
cmp
adc
push
xchg
stos
dec
out
das
pop
or
pushf
sub
and
xchg
stc
cmp
repz
cwtl
and
mov
pop
pop
dec
jmp
xor
xor
inc
int3
fstpl
ret
stc
andb
push
cpuid
out
inc
cs
int3
adc
rcr
jne
mov
inc
cmp
ss
inc
add
xorl
jge
push
inc
movsb
and
sub
mov
jle
cmp
inc
jb
insb
cmpsl
add
frstor
adc
and
inc
mov
ljmp
sti
mov
jno
lret
call
sarb
mov
rcrb
adc
lret
fsubl
add
flds
xchg
rcr
xchg
cwtl
lret
push
hlt
cli
lahf
mov
mov
adc
mov
mov
push
cmp
mov
add
cmp
sub
inc
push
add
jmp
mov
mov
aad
xchg
hlt
fiaddl
shrb
add
lahf
loopne
and
xor
or
mov
inc
dec
xor
cmpsl
fwait
loop
inc
pop
ficompl
cmp
scas
dec
mov
adc
or
sub
ds
mov
jae
imul
jge
divl
shll
in
adc
ficomps
adc
test
mov
cmpsl
scas
rcr
leave
inc
ljmp
inc
mov
movsb
push
das
push
jmp
es
lret
scas
lahf
xchg
or
outsl
scas
arpl
dec
xor
xor
test
mov
cmpsb
sub
stos
and
sbb
pop
inc
insb
cmc
dec
orl
push
adc
jae
pop
andb
push
mov
xchg
movsb
pop
in
stos
and
jge
mov
xchg
test
test
add
pop
and
lock
outsl
cmp
loope
adc
loop
xchg
int3
jnp
stos
xlat
adc
shll
xchg
test
sbb
outsb
icebp
sbbb
mov
aaa
push
mov
add
and
jmp
pop
add
scas
jl
push
ret
leave
shll
hlt
imul
outsb
mov
jno
lods
sti
cmpsl
cmp
rcrl
imul
lods
xchg
aad
mov
jp
push
iret
in
xchg
fsubl
sbb
mov
mov
shrl
shrl
fimull
mov
addr16
fstpl
fwait
mov
fmul
sbb
pop
out
add
std
outsl
push
xchg
lock
xor
lock
mov
ds
hlt
aaa
stos
pop
jo
into
pusha
int3
arpl
mov
xor
jno
jecxz
aaa
lods
add
icebp
or
mov
push
push
sub
repz
jnp
xchg
outsb
test
mov
outsb
lods
enter
rolb
dec
leave
xchg
add
arpl
add
push
dec
scas
inc
add
sub
imull
jg
pop
xchg
shll
dec
add
xchg
in
in
mov
push
push
or
inc
mov
pusha
lar
mov
ret
pop
mov
jo
in
push
fisttpll
in
fcomp
add
xchg
clc
inc
cmp
push
sub
xor
in
hlt
lea
jnp
cmp
in
mov
jle
loop
xchg
xlat
adc
sbb
xlat
jg
push
push
test
jg
jmp
mov
dec
or
sbb
nop
popl
xor
das
shlb
dec
negb
in
sub
cmp
and
mov
cmpsl
lods
push
fcmovne
cmc
dec
cltd
fs
pop
push
xchg
add
fimull
ss
xor
dec
imul
in
clc
js
nop
mov
mov
jnp
mov
mov
dec
jge
mov
sbb
adc
xchg
inc
std
dec
xchg
arpl
dec
cmp
dec
jecxz
xchg
dec
fldl
adc
repz
jo
mov
xchg
cmp
dec
icebp
dec
sbb
and
lret
mov
and
mov
movsb
sbb
push
mov
or
push
add
dec
mov
movsb
mov
arpl
xor
mov
inc
mov
into
in
mov
dec
test
cmpsl
aas
int3
mov
sahf
push
adc
divb
dec
enter
pop
push
sbb
pop
repz
leave
and
nop
test
pop
cmp
aas
stos
pop
scas
sub
cltd
dec
scas
adc
pop
xchg
xor
nop
xchg
xchg
call
xchg
mull
shlb
imul
inc
xchg
cmp
scas
scas
dec
test
sbb
pop
scas
cmp
sbb
mov
movsl
push
dec
mov
mov
imul
ss
dec
mov
movsl
mov
xor
les
push
andb
xchg
sub
icebp
stos
adc
and
iret
sbb
jecxz
dec
std
mov
pop
xchg
or
jnp
test
add
mov
push
pop
mov
scas
test
or
iret
sbb
inc
mov
inc
lods
jnp
cmpsl
mov
es
sub
movsb
xchg
mov
aad
cmpsl
lock
sti
jg
movsl
dec
sbb
out
and
jae
jo
ja
jns
insl
cmpb
cmpb
pop
repz
add
mov
push
call
iret
in
mov
stos
scas
call
test
xchg
jo
das
test
shlb
mov
pop
or
popf
and
cltd
fs
lahf
mov
mov
in
sub
xchg
add
je
dec
pushf
in
mov
and
pop
sub
cmp
mov
dec
popa
adc
xchg
push
pop
xchg
rorb
div
push
fwait
or
dec
arpl
bound
push
mov
in
push
or
add
es
stc
adc
push
out
jge
daa
arpl
dec
arpl
or
jno
repz
jno
mov
xchg
mov
xchg
xor
add
xchg
inc
or
lret
xlat
rolb
jle
sbbb
sbb
push
bound
dec
xchg
jnp
mull
push
mov
js
jmp
lods
insb
jae
cmp
mov
cmp
push
int
cld
xor
pop
push
aam
adc
pop
dec
xchg
dec
dec
test
pop
and
lds
popa
and
and
out
xor
leave
lret
in
pop
sahf
imull
aam
mov
push
imul
sbb
inc
out
and
mov
mov
cmpsl
icebp
dec
cwtl
xchg
out
rcll
jnp
bound
lahf
dec
pop
shll
das
mov
lret
mov
lods
inc
lret
lds
sbb
aaa
jg
xchg
jmp
ltr
jb
loop
mov
sbb
pop
sti
in
test
in
je
push
nop
sub
test
cmp
jle
push
fs
sub
xor
cmp
jae
lods
movsl
stc
lods
fldcw
inc
popf
pop
jecxz,pt
es
xor
sti
aam
dec
movsl
lahf
int
lock
inc
dec
push
sub
rcl
loop
push
and
out
dec
repnz
dec
or
out
cmp
movl
insl
xchg
stos
std
sub
in
stos
mov
and
cmp
fs
inc
enter
aad
pop
daa
popa
or
mov
nop
jno
js
out
fucom
repz
arpl
es
std
dec
and
addl
jnp
or
loope
inc
lds
aaa
sti
sub
mov
inc
psubsb
inc
std
push
push
dec
xor
pop
mov
and
or
fs
sub
ret
test
jecxz
mov
adc
adc
arpl
inc
and
leave
mov
loopne
mov
fildl
sbb
pop
mov
in
push
movsb
mov
data16
cld
xchg
xlat
mov
repnz
aad
out
inc
ss
push
pop
jmp
adc
sub
xor
and
mov
xor
in
or
dec
add
in
popa
add
mov
int3
aas
insl
loopne,pn
scas
mov
jge
lea
stos
cwtl
mov
inc
dec
jmp
xchg
out
jb
and
jne
aaa
mov
sbb
test
xor
lods
xor
mov
mov
fildl
sub
ret
dec
pop
adc
test
imul
jne
aad
adc
aas
sarb
lods
mov
lahf
and
insl
shl
loope
xlat
mov
xchg
push
cmc
mov
lret
xchg
lods
lret
mov
cmpsl
cs
sub
dec
popf
sub
mov
js
or
clc
cltd
inc
pop
dec
adc
rcrl
xor
pop
pushf
cmp
pop
and
insb
jnp
add
cld
dec
adc
xchg
ret
sub
dec
into
mov
fs
cmp
sub
pmulhuw
rorl
dec
mov
sub
rorl
mov
call
imul
fnstcw
mov
xlat
push
adc
push
inc
and
and
cmpsb
inc
jmp
cmp
hlt
xchg
push
sti
daa
push
js
mov
or
add
lods
jge
jns
movsb
je
push
mov
fsubrl
push
hlt
and
inc
sub
scas
and
sbb
xor
lret
and
push
cmpsb
jg
and
jo
push
pop
ljmp
push
in
sbb
inc
pusha
mov
xchg
push
adc
push
pop
push
mov
data16
pop
pop
mov
fwait
in
dec
rcrl
jecxz
pop
cmp
fiaddl
jno
jbe
mov
aad
xchg
mov
pop
sbb
add
enter
inc
int
push
mov
and
icebp
mov
adc
cmp
mov
cmp
push
sub
cmp
loopne
pop
or
and
fisubrl
jbe
out
pop
or
je
loope
test
and
in
jle
xchg
cmp
imul
lret
or
inc
popf
mov
into
push
mov
and
xor
push
push
ret
push
ja
jae
in
je
cs
push
or
mov
inc
fildll
adc
out
fisubrl
mov
andl
xor
pop
jp
sbb
adcb
js
sahf
rolb
sbb
aam
pop
fdivp
jo
cmp
pushf
jnp
popa
arpl
mull
fdivrs
xchg
sahf
jg
adc
out
int
dec
inc
addb
fmuls
push
mov
xlat
rclb
push
bound
jle
and
rcll
push
nop
ljmp
arpl
xchg
bound
xor
lock
mov
pop
or
cmpsl
dec
add
pop
bound
test
and
and
int3
add
dec
or
dec
fs
shll
adc
fists
jmp
aam
jns
xchg
mov
ret
bound
mov
adc
loope
test
mov
pop
xor
outsb
and
sbb
sbbb
in
icebp
fstp
imul
ret
testl
clc
push
jo
inc
aas
mov
push
cwtl
popa
mov
pop
mov
ret
stc
in
push
xchg
xor
inc
inc
push
sbb
xchg
dec
mov
and
aad
out
repz
jl
mov
xchg
testl
das
or
pop
sub
cmp
inc
mov
sbb
leave
nop
jecxz
repz
jl
cmp
pushf
sbb
dec
sahf
ja
xchg
push
mov
jnp
dec
push
out
into
adc
hlt
mov
jbe
mov
loope
pop
dec
ja
sub
pusha
add
and
inc
mov
cmpsl
adcb
mov
loope
xchg
pop
stos
add
cltd
into
mov
mov
jecxz
clc
cs
dec
loopne
mov
inc
mov
dec
cli
or
xor
hlt
jle
push
pop
test
fcmovnu
jmp
push
pop
xchg
data16
fidivrs
out
mov
test
adcl
aaa
aaa
jecxz
lds
pop
stc
lret
sub
xchg
hlt
cmc
dec
push
ds
xor
divl
xchg
sub
jg
xlat
in
sbb
in
pop
push
mov
push
sbb
loop
push
add
das
sarb
in
xor
mov
in
dec
push
in
ret
or
xchg
int
imul
cli
pop
test
stc
sbb
sub
adcb
sbb
ficomps
and
out
aaa
adcb
xchg
movsb
cli
sbb
or
xor
in
cli
fidivl
xor
jg
cmc
cmp
loop
mov
xor
mov
mov
scas
inc
sub
or
inc
pop
sbb
or
lds
adc
jl
icebp
sbb
arpl
xor
or
or
ret
and
or
mov
lahf
mov
cltd
imul
jp
das
pop
adc
jbe
xchg
pop
and
xor
xlat
xor
sbb
imul
icebp
int
cmp
cld
sub
imul
pop
mov
roll
or
jmp
or
addr16
aas
jb
cmc
ret
xchg
cmp
or
or
push
mov
jae
jae
push
sub
ret
push
popf
sub
xchg
test
imul
jb
gs
mov
mov
ret
mov
jecxz
scas
sahf
sub
mov
test
pop
cltd
push
repnz
pop
add
push
call
jg
mov
stos
ret
addb
adc
scas
test
movsl
loope
popfw
movsl
mov
dec
adc
lahf
aas
pop
push
scas
lds
fisttpll
xor
fidivrl
hlt
ret
out
dec
rol
add
cmc
cld
inc
mov
pop
lods
test
sub
xor
add
js
sbb
clc
cli
mov
inc
js
jnp
adc
sub
cmp
outsb
lods
ss
sarl
push
and
lods
ja
cmpsb
push
sub
test
and
xchg
pop
xchg
icebp
sbb
push
inc
jo
test
jle
pop
xchg
clc
cmp
mov
loop
xor
into
mov
mov
xchg
icebp
cmp
cmp
test
xchg
loope
pop
push
pop
xor
lock
push
loopne
push
or
stos
scas
addr16
mov
inc
xor
and
out
add
ss
std
xor
inc
adc
cld
fisubrl
jnp
sbb
jb
add
xor
adc
xchg
push
cmc
mov
push
dec
imul
outsl
xor
loopne
and
into
adc
enter
inc
popa
sub
in
out
push
rolb
pop
cmc
into
xchg
add
sahf
dec
push
sub
pop
mov
cltd
sbb
pop
xchg
pop
add
fucomip
mov
ds
or
push
or
pop
sub
xchg
and
push
ret
jne
cli
lsl
fsts
nop
test
push
out
fisttpll
ror
dec
jecxz
scas
mov
mov
mov
or
bound
fs
or
mov
xlat
test
fbld
sbb
in
mov
sarl
loopne
mov
imul
fistl
ficomps
push
aad
mov
mov
pop
push
mov
div
in
int
fsubrs
ret
popf
xchg
push
inc
cmp
test
movsl
lods
arpl
add
punpckhwd
push
mov
movsw
cmp
push
or
cmp
lret
inc
test
outsl
mov
adc
sub
out
lds
subb
dec
pop
mov
popf
into
pop
pop
xchg
add
mov
add
in
gs
cmp
and
mov
std
data16
ja
ficomps
int3
int
jge
xor
mov
add
sbb
adc
mov
pop
push
andb
jg
sbb
in
int3
adc
push
push
sbb
outsb
or
jo
dec
adc
xchg
cli
pop
andl
scas
push
pop
test
ret
pop
pop
and
add
leave
sbb
push
mov
dec
mov
dec
ret
mov
sub
sub
sbb
adc
xchg
xchg
xor
lret
jns
lcall
mov
movsb
mov
xor
jo
fmuls
test
aaa
mov
cli
mov
cmc
push
jmp
cmp
adc
fistl
sbb
inc
shlb
stos
sub
pop
lcall
loope
xor
loopne
dec
xor
sbb
pop
stc
in
push
mov
fnstenv
icebp
inc
inc
out
add
dec
lds
lods
mov
add
shrl
fs
sub
shl
inc
xor
push
jmp
int
sti
cmpsb
leave
dec
fsub
insl
fisubrs
dec
xlat
mov
ja
xor
xor
sbb
sbb
mov
xchg
jae
cmp
dec
mov
jae
loope
xchg
push
jne
fnstsw
push
pop
cmp
cmp
jmp
push
scas
leave
pop
xor
out
js
fwait
dec
test
enter
les
fdivrl
sahf
pop
pop
repnz
adc
cmp
add
cld
dec
test
jecxz
es
push
cmp
jbe
mov
dec
sbb
pusha
in
and
call
rol
ss
in
repz
mov
cmp
outsb
pop
lcall
hlt
mov
mov
cwtl
xor
imul
push
mov
int
inc
xchg
mov
scas
les
add
push
enter
sbb
pop
test
mov
and
out
push
test
cmpsb
pop
loop
adc
adc
aam
push
adc
out
je
mov
fs
aam
xlat
jnp
add
insl
inc
pop
jo
out
ljmp
lock
loop
cmp
mov
inc
fists
filds
add
push
out
ret
xor
nop
mov
bound
out
sbb
fwait
push
cmp
sbb
xchg
sahf
sti
and
stos
jge
movsb
pop
mov
stos
jmp
mov
sub
addb
mov
addb
fistpll
xchg
lret
popa
and
les
inc
cmpb
lea
cmpsl
sub
inc
je
mov
xor
mov
cltd
dec
inc
adc
mov
clc
sbb
pop
addr16
and
jne
mov
adcb
scas
pop
adc
xchg
js
aaa
jns
pop
jecxz
lret
notb
out
and
lods
dec
lock
add
cwtl
rclb
cltd
sahf
mov
jae
cs
push
add
adc
push
push
and
jmp
cmp
fwait
jbe
mov
xchg
inc
lcall
cwtl
inc
add
int
pop
inc
xor
addr16
mov
cmc
pushf
mov
cmp
add
clc
pop
push
inc
aam
adc
lods
adc
aam
add
inc
mov
inc
arpl
sub
es
imul
pop
sahf
cmpsl
pop
ficoml
push
add
or
pop
jnp
inc
test
leave
in
clc
in
scas
jnp
jns
sbb
xor
cltd
sub
mov
jno
addl
pop
or
pop
out
mov
dec
xchg
jp
out
mov
push
xchg
ja
sub
push
xor
jle
xor
insb
out
pop
jae
pop
ror
push
cld
mov
jne
mov
gs
cmpsb
sbb
xor
in
push
in
lret
pusha
enter
sbb
bound
jo
jbe
sub
xchg
jo
dec
push
out
fldcw
jns,pt
adc
cmc
jo
sbb
adc
and
push
xchg
jge
mov
leave
mov
data16
sbb
repz
push
leave
je
sub
insb
lret
aaa
cmpsb
in
xchg
leave
adc
mov
sti
mov
repz
cmc
and
jmp
imul
xor
push
and
test
pop
andb
pop
popa
negb
jp
adc
xor
jae
push
iret
fwait
mov
inc
add
mov
xlat
test
hlt
pop
xor
dec
aas
lods
jp
out
mov
stos
in
xchg
inc
imul
je
mov
cmp
mov
sbb
loopne
sbb
mov
ret
mov
cmpsl
dec
sub
pusha
sahf
xchg
cmp
adc
hlt
sub
inc
test
in
or
pushf
repnz
mov
cmp
jae
movsl
mov
xor
or
mov
in
sbb
jae
lock
push
mov
push
mov
fdivr
xor
dec
jle
call
mov
or
and
dec
stos
int3
mov
mov
fildll
loope
cmp
push
lcall
pusha
push
jo
mov
jo
xor
dec
repz
scas
cmp
imul
dec
pop
xor
leave
in
paddd
pop
nop
enter
aam
adc
ficoml
inc
push
popf
dec
jns
ret
cmpsl
sahf
nop
rcrl
iret
jl
adc
out
cwtl
insl
dec
pop
stos
lods
mov
dec
loop
les
jp
std
mov
and
push
shlb
mov
int
loopne
mov
bound
jmp
jno
fbld
push
and
jns
cwtl
lahf
cmpsl
xorl
or
cwtl
add
aas
rorb
lret
fildl
fs
cmp
aam
sub
cmp
pop
cld
repz
cltd
cli
movsb
mull
or
adc
adc
ljmp
into
xor
adc
in
leave
hlt
sbb
in
popl
pushf
fs
aam
repnz
add
subb
mov
mov
call
xor
aaa
jne
xchg
pushf
inc
adc
mov
lods
daa
cld
cmp
mov
pusha
inc
adc
xor
mov
pop
pop
fidivl
push
int
cmp
test
enter
xlat
mov
cmp
sbb
imul
mov
fdivrl
mov
movl
pop
fildl
and
shlb
jp
jns
cmc
push
out
sub
lock
add
add
stc
loopne
in
out
fs
push
push
ja
mov
mov
mov
leave
mov
into
add
push
sbb
iret
insb
decl
les
aad
sti
jo
push
xchg
pop
pop
and
filds
pop
push
lods
adc
jp
pushf
pushf
dec
sbb
fdivrs
xor
mov
cmp
add
rcll
inc
or
adc
or
pop
sahf
push
push
dec
adc
fs
pop
inc
nop
pusha
lea
adc
gs
loop
xchg
push
cmpsb
inc
popa
inc
pop
add
test
aad
fucomi
sub
push
int
in
pop
jno
jnp
inc
cmp
stc
pop
and
xchg
loope
adc
jge
inc
adc
fildll
in
lods
pusha
inc
je
cwtl
jge
jno
pop
dec
or
fmuls
inc
decl
test
call
rcrl
aaa
or
inc
and
dec
inc
inc
cmc
insl
jns
ljmp
lock
or
or
and
mov
dec
dec
xchg
push
aaa
dec
inc
cli
or
pop
jae
mov
pop
loop
push
mov
inc
sbb
mulb
mov
stc
aaa
cmp
aaa
cmpb
mov
cwtl
ret
cmp
jnp
inc
xchg
cmovnp
adc
jne
cmpsb
add
leave
mov
jnp
ljmp
xchg
cmpsl
out
lcall
jecxz
jo
mov
int
sti
in
repz
jl
xchg
enter
push
sbb
mov
jmp
dec
mov
rcrb
enter
jb
je
lods
dec
arpl
mov
out
mov
sub
mov
fstpl
in
mov
test
cmp
pop
ja
sbb
adc
add
mov
pop
or
add
fs
mov
dec
push
pop
inc
jp
jnp
xor
xor
xor
sub
cmp
push
outsl
fisubs
dec
pop
adc
daa
add
lret
fsubrp
out
xchg
ss
lods
rorb
ficoml
test
lcall
hlt
sub
adc
xor
fmuls
lods
xchg
scas
pop
je
jg
mov
ljmp
std
cmc
test
dec
push
cmpsl
dec
dec
outsb
imul
fists
enter
fsubrs
into
clc
sbb
mov
pusha
pop
mov
jecxz
xor
inc
lahf
push
in
xor
or
xor
inc
loop
repz
add
ja
or
inc
jbe
mov
and
mov
mov
das
sub
je
rcrb
cltd
mov
pop
xchg
and
dec
and
cld
mov
daa
test
dec
jmp
es
mov
push
jecxz
jecxz
add
movsl
cmpsb
add
push
cmp
sbb
fucom
in
loopne
lcall
lahf
dec
pop
xor
dec
adc
xor
lret
xor
mov
leave
xor
fsts
pop
outsb
loop
jb
mov
outsb
in
push
scas
push
mov
mov
or
in
movsl
ret
out
mov
xor
je
mov
fwait
cltd
test
pop
push
aaa
add
mov
sbb
test
or
lcall
pop
std
and
adc
pop
adc
inc
stc
enter
scas
dec
push
arpl
addr16
dec
int
in
sbb
fnstcw
cmp
sub
xchg
adcl
adc
lret
push
aaa
sub
call
ds
add
fsubs
nop
add
in
cmp
sahf
or
lahf
jae
mov
pop
hlt
xor
ljmp
pop
outsb
xchg
ret
sub
xor
fwait
gs
jle
inc
adc
push
push
xchg
stos
pop
sbbl
mov
xor
insb
imul
rol
adc
dec
ror
stos
call
jmp
add
fcompl
je
lods
cltd
test
sbb
test
dec
test
jl
fisttps
mov
push
mov
ret
ret
inc
stos
jg
xlat
jns
jne
jp
mov
cmp
and
mov
mov
enter
fstpl
adc
imul
push
in
or
dec
pop
push
mov
dec
xchg
out
sbb
inc
repz
cmp
mov
imul
mov
iret
flds
in
and
adc
pop
mov
js
xchg
and
ja
xchg
cmpsl
jno
mov
aad
hlt
outsb
das
mov
incl
lcall
jl
sub
inc
jmp
int
dec
xchg
xor
movsl
hlt
pop
inc
mov
inc
sub
sub
rcll
lahf
mov
or
mov
add
in
jae
les
inc
dec
xchg
clc
or
jg
pop
sub
mov
push
scas
cmp
aaa
negb
arpl
jle
imul
in
mov
push
jle
repz
aas
and
xchg
xor
inc
jae
orps
xlat
dec
sub
setno
idivb
mov
xchg
mov
jo
push
in
repnz
and
and
mov
adc
mov
pcmpgtw
pop
stos
jns
pusha
iret
add
lea
lods
jmp
lret
js
cmp
mov
mov
rolb
mov
mov
insb
repnz
rolb
push
fisubrl
xchg
dec
fldt
lret
ljmp
cwtl
mov
push
jge
int3
mov
les
daa
lret
push
adc
and
addr16
and
pop
dec
xchg
fdivl
push
jecxz
ret
mov
jno,pn
jb
cmp
xor
call
cltd
mov
push
or
pushf
into
sbb
mov
ja
or
fstl
pop
pop
rcl
adc
xchg
xchg
inc
fucomi
push
lock
and
jecxz
popf
pusha
adc
jo
jae
jbe
xchg
cltd
sub
push
sbb
adc
or
xchg
fstpt
push
clc
test
sub
mov
pop
push
aam
pop
cs
cwtl
gs
pushf
dec
push
dec
into
add
xor
pop
sub
xor
out
xchg
mov
jl
std
ficoms
push
inc
lods
jge
and
stos
out
fwait
movsl
jne
leave
mov
jle
or
sbb
aas
or
pusha
lods
mov
sti
mov
rcl
int3
jp
ds
sbb
sub
mov
stos
test
adc
pop
xchg
cli
addl
mov
ss
out
sub
push
or
sub
ret
es
cmp
in
ret
outsb
cmp
loop
dec
adc
ficoml
jbe
and
rcll
fs
add
adc
xor
or
jnp
xor
lock
cmp
aad
and
and
inc
sbbb
repnz
push
sti
imul
push
rolb
roll
and
dec
inc
mov
pop
pushf
push
fwait
sahf
jge
pop
mov
sbb
mov
lahf
xlat
adc
mov
cmp
mov
icebp
mov
lahf
add
cwtl
repz
or
inc
inc
dec
cwtl
xchg
inc
lret
sub
inc
es
cwtl
mov
in
adc
lret
mov
sub
sub
push
and
daa
add
mul
test
leave
mov
lret
xchg
inc
cmpsl
push
dec
lret
push
push
js
fisubrs
jg
rcrl
push
aas
xor
and
cmp
jle
fisubrs
add
inc
adc
pop
insb
int
ret
decl
imul
cmpsl
jne
das
sub
push
pop
pop
aas
mov
dec
push
jns
popa
xor
out
in
push
nop
xchg
js
pushf
dec
fstpl
pop
mov
mov
add
les
mov
mov
sub
pop
sub
movsb
shrb
push
repz
mov
sarb
mov
aas
xor
aaa
and
outsb
xchg
mov
jno
das
push
adc
cmp
mov
inc
fidivrs
iret
mov
imul
daa
mov
ja
push
xor
call
xchg
iret
ror
mov
xor
jae
pop
push
push
cmp
ss
insb
push
in
sbb
push
pop
mov
adc
cmp
adc
jl
movsb
lods
frndint
dec
and
inc
dec
sbb
sub
sub
sbb
aas
push
mov
dec
hlt
xchg
inc
sub
jl
mov
jge
movsb
jmp
add
in
aaa
test
sbb
mov
sub
pop
mov
mov
test
mov
inc
int
cwtl
mov
mov
push
or
fcomps
jnp
call
xchg
or
data16
pop
bound
leave
fdiv
xchg
jne
es
cld
ljmp
sbb
rorl
or
push
dec
stos
mov
cmpsb
jb
fldt
out
jo
push
stos
out
pop
sahf
adc
aam
sbb
and
bound
push
lods
fcmovnb
ljmp
es
cs
ret
movups
ja
data16
xchg
cmp
call
inc
add
pop
cmp
rcrb
jp
inc
cmp
mov
insb
jecxz
sbb
mov
jp
fwait
imul
pop
jmp
bound
mov
pop
lds
xchg
or
lock
sub
xorl
in
arpl
jg
js
pop
push
mov
inc
roll
mul
push
sbb
leave
and
mov
xlat
pop
jbe
or
inc
jb
in
adc
jno
pop
ret
sbb
dec
mov
ljmp
mov
flds
push
xor
outsb
scas
add
mov
adc
hlt
ds
addr16
mov
push
cmp
outsb
popf
adc
das
arpl
enter
push
enter
cmp
cmp
xor
dec
cmp
jne
filds
popa
js
sbb
scas
mov
jnp
xchg
jmp
jbe
push
push
inc
in
lcall
xchg
sahf
in
fidivrl
cmp
scas
or
mov
and
mov
mov
jb
dec
jmp
jae
cmpsl
addl
mov
lock
rol
dec
rorb
adc
subl
fistps
jno
jae
or
mov
push
aas
stos
imul
icebp
iret
sbb
xor
cmp
daa
inc
mov
dec
xchg
clc
pop
addr16
adc
mov
mov
pop
adc
fsubrl
adcb
sti
sub
out
pop
push
pushf
test
push
out
add
lods
frstor
nop
cmp
push
sti
loopne
mov
lods
and
adc
pop
bound
jae
pop
push
mov
fdivrs
sub
sarl
pop
xor
adcb
test
xlat
jg
ss
insb
cmp
xchg
popa
or
out
sti
hlt
jne
addr16
xchg
addb
clc
inc
jb
adc
std
or
gs
push
ja
jge
xor
and
mov
pop
sbbb
jb
adc
leave
mov
dec
pop
loop
fcompl
xchg
pop
rorl
lock
mov
shlb
and
push
test
inc
outsl
ret
gs
fs
cli
test
aad
inc
lods
outsl
jnp
repz
dec
fxam
xchg
jne
cltd
add
and
mov
mov
pop
int3
dec
cs
push
add
pushf
push
xchg
fwait
in
jb
fstl
cmp
pop
dec
push
fcmovne
call
andb
fwait
sub
xor
lret
lods
push
fwait
daa
test
stos
xchg
insb
xchg
add
cmc
jmp
loop
xchg
mov
adc
imul
cmp
cmc
jo
stos
sub
add
xchg
fdivp
or
xor
pop
cmpsb
dec
test
sub
mov
inc
push
or
push
ret
add
fcomp
xchg
inc
sub
inc
test
out
imul
xchg
js
icebp
adc
or
out
jne
arpl
out
std
inc
adc
mov
cmp
jle
inc
jecxz
cmpsb
stc
or
xchg
ret
sbb
inc
lretw
push
xchg
sub
insb
int3
inc
inc
push
lcall
and
pop
inc
dec
cmp
dec
xor
dec
and
repnz
xor
dec
push
xchg
adc
dec
loopne
loop
shl
rol
sub
and
rorl
ja
mov
dec
mov
loope
jne
lret
push
les
and
test
push
imul
xchg
repz
push
push
loope
pop
aas
mov
push
mov
jnp
jb
adc
movsb
xchg
ficoml
int3
adc
imul
adc
sarl
mov
mov
ret
icebp
mov
rcr
xchg
sub
ficoms
mov
cmp
lret
xlat
jl
pop
jle
mov
icebp
clc
int
mov
mov
out
scas
cli
or
popa
xchg
pop
adc
fimuls
and
add
or
pop
fcmove
push
loop
mov
ds
call
lcall
pop
in
or
pop
jno
std
lahf
xlat
imul
decl
nop
cltd
mov
xchg
mov
adc
icebp
xchg
dec
int
adc
shll
popf
cmp
popa
lods
pop
loope
xchg
pop
or
fadds
fdivrp
jecxz
pop
mov
dec
ja
jp
dec
dec
xchg
mov
pop
popf
iret
jecxz
mov
dec
fldl2t
dec
std
in
and
stos
inc
or
cs
mov
loope
jns
ljmp
mov
pop
mov
jnp
xor
and
in
add
rcrb
pop
jl
mov
ja
adc
xchg
and
fsubl
jecxz
lahf
push
test
aaa
fwait
add
scas
mov
adc
aad
cli
fldcw
sbb
adc
imul
dec
ret
jnp
push
lea
mov
popf
popl
cmpsl
fwait
mov
pop
mov
out
outsl
subl
jne
inc
dec
arpl
vfmaddpd
pop
lods
jl
cmp
xchg
jp
mov
and
fistpl
push
hlt
add
xlat
lock
add
dec
or
iret
mov
loop
shrd
lods
xor
loopne
sarl
or
lret
mov
repz
add
xor
ja
mov
push
popf
mov
gs
add
pop
pop
mov
mov
lods
mov
xor
stos
mov
std
cmp
loopne
fiaddl
jmp
ret
jno
jae
nop
and
loope
sbbl
inc
add
test
pop
xor
ret
push
int
fistl
mov
mov
ret
shlb
shrb
mulb
adcb
sti
xor
jmp
lods
mov
rcl
out
jge
adcb
sbb
add
sub
xor
cmp
push
pop
xor
ret
ret
int3
pop
dec
sub
mul
add
mov
inc
cmp
cmp
jb
shl
lods
mov
loope
push
mov
pop
pop
dec
xor
pop
in
pop
lahf
cmp
pop
sbb
push
lea
test
test
aam
loopne
xchg
mov
imul
aad
insl
and
les
xor
je
dec
sub
in
or
or
sbb
imul
inc
mov
xchg
jg
inc
fnstsw
nop
pop
hlt
sub
push
cmpb
xlat
test
adc
mov
scas
add
sub
sbb
dec
dec
fimull
jp
ficoms
inc
sbb
cltd
mov
adc
insb
dec
xor
push
fst
xorl
test
cmp
imul
xchg
repz
in
xchg
iret
or
add
fsubrs
xor
pop
outsl
add
aad
ficoml
mov
pop
or
pop
insl
pusha
mov
stc
ds
addr16
xchg
jne
scas
push
sbb
push
outsb
sbb
pop
lahf
mov
outsl
mov
mov
lcall
pop
movsb
xchg
lods
cmp
mov
or
fstpt
pop
ss
push
and
or
push
hlt
pop
ja
fldenv
es
push
jecxz
iret
xor
mov
test
sub
lret
roll
lods
and
enter
iret
adc
in
shl
inc
cmp
popf
iret
sti
mov
inc
fucompp
fisubrs
test
pop
test
arpl
cmp
pop
and
sub
inc
std
xor
roll
fs
inc
sbb
daa
movsl
inc
mov
sbb
in
sub
int
dec
adc
mov
or
xor
inc
xor
cltd
jno
fisubs
pop
fucomp
pop
jo
bound
adc
push
sti
jne
mov
dec
lret
dec
cmpsb
mov
mov
pop
sarl
pop
pushf
add
pop
and
aas
pusha
push
xchg
sub
xchg
and
loop
inc
sub
pop
iret
mov
push
cmp
jne
xchg
jo
cmp
xor
int
pop
loope
out
add
xchg
dec
cmp
cld
fidivrs
sub
sarb
cwtl
iret
dec
aas
cwtl
adc
pusha
sub
dec
jg
inc
push
mull
xlat
jp
adc
dec
pop
cmpsb
xchg
mov
xor
adc
adc
or
or
jecxz
mov
jmp
xchg
and
aad
add
mov
pop
fnsave
ds
aaa
cmp
pop
popf
ret
bound
cmpsb
in
cmc
xor
add
jns
push
push
bound
loop
test
add
lock
scas
es
lcall
data16
lods
fcomip
lds
mov
sbb
shll
and
mov
or
movsl
jmp
nop
inc
xor
insl
nop
fs
ss
cmp
jb
test
and
add
fstpl
pop
outsb
inc
leave
in
cmp
inc
fnstcw
stos
ja
xchg
xchg
adc
repz
jns
gs
leave
mov
xor
pop
hlt
imul
xchg
imul
dec
and
inc
xchg
divb
test
loope
fisubl
cmpsb
pop
push
mov
mov
pushf
and
maxps
lea
dec
in
sti
dec
add
lret
pop
xchg
xchg
incl
ja
imul
rorb
mov
movsb
pop
rorb
jnp
mov
pop
insl
pop
jmp
jo
fsts
insl
sub
jle
dec
aam
cmpsl
and
cltd
xor
mov
mov
jmp
fdivrl
mov
adc
sub
cmp
mov
popf
push
jo
adc
mov
dec
fldl
out
mov
fldl
jnp,pn
push
ja
cmpsl
push
shlb
int
sbb
mov
pop
outsl
pop
push
push
xor
xchg
cmp
push
sbb
fwait
jnp
jae
loope
jecxz
adc
mov
pop
adc
shl
in
xor
leave
dec
faddl
mov
push
ljmp
xor
repz
movsb
sub
pop
pop
sub
adc
xlat
inc
loop
sti
cmp
shlb
xchg
subb
mov
inc
cmc
jb
jle
faddp
mov
pop
pop
and
fiaddl
stos
movsb
and
test
fldt
bound
loopne
mov
int
cmp
cltd
lahf
dec
adc
pop
sar
xchg
je
sub
mov
jp
fidivrl
mov
cmc
icebp
mov
pusha
jmp
test
cmp
lret
and
inc
adc
fdivr
popf
das
pop
xchg
xchg
cmp
shll
ss
jge
jo
add
inc
movsl
sbb
popf
int3
stos
and
sub
pop
lret
ficoms
out
mov
mov
lret
cmovle
xor
lahf
lret
sub
and
fs
mov
sti
test
std
into
cwtl
sub
sbb
fidivrs
xor
dec
push
fstps
fmull
aaa
and
aaa
add
mov
sub
aam
popf
pop
mov
fildl
seto
mov
and
jns
sub
jmp
stos
stc
add
and
dec
std
jp
cmpsb
jbe
fidivl
aas
andl
fstpl
inc
idivl
mov
adc
in
sbb
inc
push
iret
sbb
inc
cwtl
or
je
call
mov
pushf
sbb
icebp
test
out
imul
pop
push
shl
sahf
sarl
cmp
mov
scas
iret
sub
mov
ret
mov
jl
mov
dec
inc
cmp
xchg
sbb
outsb
nop
or
sbb
xchg
add
mov
fcoms
mov
jnp
out
sti
xor
mov
jb
mov
aam
xor
into
push
jns
fmull
push
cwtl
pop
mov
sub
jp
sub
sbb
in
inc
aaa
jno
je
outsb
lock
std
rcl
pop
lock
push
pop
iret
jbe
jmp
mov
call
push
leave
adc
jecxz
lea
mov
mov
jl
pop
mov
push
in
outsb
mov
mov
loopne
xchg
jns
jno
jg
or
adc
inc
test
dec
nop
add
or
inc
cmp
jae
cltd
xor
mov
push
xchg
or
adc
mov
push
adc
mov
mov
push
clc
cmp
orb
sub
sahf
gs
or
inc
aas
lret
fwait
outsl
ret
add
pop
jp
or
ret
or
es
inc
popf
cmp
jae
dec
adc
fnstsw
cwtl
sbb
dec
dec
xor
cli
nop
mov
xor
dec
subb
sub
cmpsl
adc
pushf
repz
inc
sahf
add
push
jecxz
in
fs
pop
dec
loop
mov
pop
or
popa
add
cmp
adc
mov
cld
sar
stos
ljmp
inc
mov
sbb
adc
shlb
mov
jle
add
sub
ss
inc
imul
sbb
mov
mov
dec
mov
pop
sbb
std
cmp
popf
sbb
fwait
jb
orb
xchg
sub
cmp
ret
movsb
inc
adc
shl
loope
and
cmp
cmpsl
cs
sbbb
mov
jmp
pop
bound
xchg
push
test
scas
pop
add
pop
stc
test
mov
mov
in
wbinvd
aaa
push
sub
or
jmp
pop
ret
xor
test
sub
shrb
mov
gs
mov
mov
fdivrl
ss
mov
and
call
xor
or
aaa
mov
sti
dec
jecxz
and
mov
jl
xchg
mov
and
sub
std
push
inc
add
dec
and
mov
pusha
mov
sti
and
mov
popa
arpl
jmp
ja
sbb
push
imulb
insl
test
fnstsw
xchg
test
clc
clc
insl
pop
or
test
push
fcmovb
adc
sbb
fisttps
sbb
in
sbb
jle
and
dec
fldcw
pushf
pop
xchg
mov
jae
jnp
scas
lock
test
jno
daa
mov
inc
mov
test
dec
add
repnz
sahf
lcall
sbb
mov
ljmp
sbb
sub
sub
test
dec
loope
add
cltd
ljmp
loopne
jp
repnz
mov
shlb
and
mov
mov
sub
mov
les
ret
aam
cli
dec
scas
fmulp
xlat
or
movsl
lcall
repnz
inc
xor
inc
movsb
fisubrl
cmp
jae
mov
jns
mov
in
mov
cmp
add
and
mov
dec
mov
test
pop
stc
aad
aas
pusha
insl
sub
mov
mov
ret
fimull
call
cwtl
pop
jbe
rorl
push
xchg
lret
push
fistpll
sahf
lds
push
scas
add
imul
ljmp
mov
adc
pop
insl
jae
mov
adc
cmp
push
sub
clc
mov
movsl
adc
jp
and
popf
iret
push
mov
in
mov
sub
sub
or
push
out
or
iret
movsl
imul
adc
push
fnstsw
icebp
ja
sti
mov
ja
jmp
cs
pop
imul
inc
pop
test
sub
lds
cmpsl
aam
fimull
ret
out
jle
lcall
sbb
cmpsl
adc
pop
pop
test
cmpl
popa
sub
popa
je
daa
arpl
mov
sbb
scas
or
mov
xchg
push
scas
jmp
or
push
mov
adc
xchg
adc
arpl
leave
inc
imulb
push
cwtl
data16
cwtl
addl
iret
bound
rcrb
das
enter
aad
jg
stos
adc
fdivrp
xchg
cmp
push
int3
xor
jo
gs
lret
dec
sbb
xorb
push
dec
sub
cmp
sbb
in
sti
xchg
sub
cmp
adc
adc
pop
jle
movsl
addl
cs
cltd
sub
pop
ja
cwtl
pop
and
addr16
out
lcall
add
adc
xor
ds
and
jl
dec
out
push
arpl
cmp
rorb
cmp
movsl
call
repnz
je
jns
popf
adc
push
xchg
mov
dec
push
sahf
adc
mov
mov
movsl
mov
orb
lock
and
enter
test
fsubrp
jnp
push
cmp
push
jno
xor
pop
jo
fs
std
neg
gs
fisttpl
dec
pop
dec
cmpsb
nop
outsl
lcall
cmp
mov
sbb
jmp
arpl
xchg
nop
push
pop
mov
mov
dec
in
or
cmpsl
inc
aam
fcoms
xchg
xor
aas
test
xor
fldl
mov
or
mov
adc
mulb
pusha
shrb
data16
sbb
mov
jl
mov
sti
mov
es
and
add
inc
lahf
lods
lcall
data16
ss
push
mov
in
repnz
pusha
int3
push
dec
sbbb
fnstenv
add
fwait
adc
dec
fldcw
inc
orb
gs
inc
ret
in
jnp,pt
inc
mov
sbbb
pop
mov
into
push
push
xorb
in
xchg
mov
adc
cmp
fisubl
pop
inc
mov
mov
fisttpll
daa
fwait
sub
and
ja
rclb
xlat
js
jne
les
movl
cmp
dec
test
shll
add
cmc
scas
into
fcoms
nop
cmp
cmpl
add
dec
addr16
std
mov
xchg
iret
jmp
mov
int3
push
lcall
jl
into
push
mov
scas
pop
gs
xor
mov
ret
jns
dec
outsb
flds
clc
roll
in
xchg
mov
mov
icebp
nop
ljmp
fwait
lret
aaa
imul
imul
mov
out
mov
mov
xchg
test
push
inc
jecxz
jg
ret
sti
jle
mov
fs
push
mov
sub
cmp
js
xchg
out
inc
add
xchg
push
add
iret
stc
sub
adc
inc
repz
jbe
add
enter
cs
xlat
ja
adc
ret
xchg
imul
ja
popa
int3
xor
mov
outsb
cmp
inc
cwtl
dec
or
fisttpl
lods
in
mov
outsb
call
xchg
or
cwtl
insb
sub
mov
mov
jb
mov
lea
sbb
add
or
test
push
cwtl
add
imul
sub
cmp
mov
in
adc
cmp
inc
icebp
sub
jb
and
add
dec
sarb
inc
sub
out
pop
in
add
decl
fs
push
pushf
cmpsb
and
loop
sub
sbb
adc
xor
jb
push
mov
push
mov
inc
push
aam
fcomps
aaa
iret
mov
push
adc
mov
push
push
inc
mov
jbe
xchg
jbe
inc
and
sbb
dec
push
xor
sbb
outsl
dec
xchg
or
cltd
je
fcoml
push
sub
dec
psubd
daa
mov
das
pop
sub
fcomp
ds
stos
outsb
or
pop
mov
in
out
jmp
ret
cld
bswap
repz
add
and
fiadds
andl
stos
inc
cld
and
rcrl
scas
cs
mov
inc
mov
enter
fbstp
mov
pop
test
push
test
pop
dec
or
jae
dec
and
mov
jecxz
into
dec
mov
mov
mov
pop
outsl
push
mov
clc
movl
or
add
cmpsl
adc
mov
sub
test
pop
lret
mov
aad
icebp
test
ljmp
pop
testl
inc
add
scas
ret
mov
scas
fs
jae
inc
dec
cmpsb
outsb
cmc
sbb
push
ja
add
push
push
mov
mov
repz
push
test
add
test
push
mov
push
xchg
mov
push
iret
in
loop
and
mov
loopne
push
mov
jge
mov
lcall
jo
nop
in
pushf
clc
xchg
push
mov
pop
add
lods
or
lock
mov
daa
dec
repz
inc
les
jns
sub
or
cwtl
inc
je
js
adc
sub
and
out
popf
mov
sub
into
iret
push
push
aad
jle
cs
fidivrs
out
lods
xor
fwait
and
xchg
xchg
jae
mov
fcmovu
mov
stos
sbb
mov
pusha
aad
jecxz
cltd
pop
sbb
iret
andb
pushf
jno
push
push
mov
in
cmp
xlat
jnp
mov
loopne
dec
xchg
stc
xchg
inc
stc
cmp
jecxz
jmp
dec
mov
pop
popl
jg
push
stos
or
mov
rclb
pusha
mov
not
mov
cmpsb
xchg
orb
ret
outsb
sarb
cli
push
iret
movsl
jecxz
fnstcw
imul
dec
sbb
nop
cmp
sbb
and
imul
cmp
sub
lods
jp
pop
push
cmp
lods
insb
lock
sub
cmp
stos
std
outsb
mov
sbb
ja
jae
pusha
stos
insl
dec
jle
adc
insl
sub
rcll
mov
mov
push
cmc
jae
roll
mov
and
add
mov
mov
scas
aam
movsl
movsl
cltd
fwait
int
cwtl
sub
mov
test
movsl
adc
test
mov
outsb
bound
add
pop
movsb
pop
popf
test
mov
cmp
dec
jmp
call
jecxz
pop
rcrb
xchg
outsb
dec
jnp
jl
cmpsl
adc
movl
lea
push
or
mov
xor
mov
adc
cmpb
pop
push
cld
fdivrs
xor
mov
xor
punpckhdq
dec
je
mov
jbe
xor
xor
pop
push
icebp
nop
pushf
xor
mov
sti
ja
mov
or
ficoms
dec
push
enter
xchg
dec
dec
xchg
dec
scas
movsb
repz
test
ja,pt
sbb
lret
les
lock
sti
ret
mov
ljmp
pop
call
pop
or
sub
out
bound
data16
lahf
pushf
inc
icebp
out
push
inc
outsl
push
test
lods
pop
xor
and
push
lods
fwait
shll
in
into
test
mov
scas
adc
inc
scas
xchg
or
lock
mov
ror
and
inc
sub
sub
sbbb
adc
add
mov
cwtl
sbb
xorps
pop
stos
sbb
cmovbe
mov
insb
xor
leave
subb
dec
imul
sub
lea
ds
loop
sbb
or
sub
pop
cmove
or
mov
cmp
or
jmp
push
adc
xchg
out
add
leave
out
pusha
ret
mov
xor
ffree
ss
adc
leave
imul
das
fiadds
ror
leave
add
pop
stos
decl
cmpsb
or
sbb
mov
jmp
dec
bnd
xchg
loopne
pop
cmpxchg
lods
cmp
push
fwait
mov
inc
xchg
inc
mov
xchg
jg
xor
out
test
andl
sub
lret
mov
movb
jl
xchg
jecxz
or
xchg
test
or
arpl
mov
mov
inc
cs
out
add
pop
mov
push
xor
xchg
cmp
mov
imul
mov
pop
xlat
sbb
dec
mov
loop
sbb
push
popa
jbe
outsl
mov
lcall
je
xchg
sub
add
push
cmp
jecxz
test
rorl
loopne
mov
and
int
mov
mov
jnp
dec
or
xchg
jbe
push
add
sbb
mov
icebp
iret
xchg
cmpsb
inc
and
in
stos
and
js,pt
popa
int3
call
add
mov
jle
das
cmp
sub
xchg
je
xchg
out
sub
pop
mov
cmp
and
pop
pop
pop
rorl
and
push
mov
icebp
push
xor
xchg
ljmp
addl
mov
imul
loopne
pop
std
xor
fsts
popf
push
adc
mov
push
dec
mov
call
add
push
test
or
pop
scas
test
aaa
cs
push
imul
rorl
aad
mov
xchg
xchg
push
popf
jae
test
je
stos
mov
xchg
cld
mov
and
mov
mov
hlt
dec
flds
hlt
pop
jle
hlt
lods
dec
or
jae
inc
or
jmp
addb
adc
push
sbbb
and
mov
ret
mov
sarl
adc
mov
sbbb
incl
xlat
cs
call
jg
dec
cmp
dec
mov
or
std
dec
and
pop
jne
sub
push
out
xchg
xchg
clc
popa
pop
jnp
leave
xchg
xchg
adc
das
cltd
into
jle
divb
xchg
std
mov
lds
mov
mov
mov
stos
fdivrp
mov
pop
pop
xchg
int3
and
add
es
sahf
movsb
cmpb
fists
lret
xchg
inc
or
sub
xlat
ret
add
xchg
aas
orb
jl
daa
addb
call
or
dec
push
xchg
subb
and
dec
add
sti
inc
jp
jle
add
xchg
int3
leave
pushf
test
mov
addb
fdivs
pop
mov
mov
cmc
cmpsb
popa
push
into
lock
sub
or
add
add
add
or
add
add
add
add
add
add
add
add
add
jb
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
