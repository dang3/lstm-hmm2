insl
inc
or
jmp
fwait
inc
enter
aad
mov
fsubs
nop
cmp
js
push
xchg
pop
loopne
repz
xlat
js
jge
ficoml
jecxz
aam
daa
cs
sub
lea
or
jecxz
add
mov
pusha
sub
adc
cmpsl
xor
movsl
xor
test
or
cld
loope
or
mov
and
sub
sub
movsb
enter
pop
es
fildl
test
sbb
mov
mov
test
xor
inc
dec
mov
sub
inc
pop
pusha
into
jae
mov
pop
dec
orl
add
sub
out
sar
mov
cld
xor
mov
ss
sbb
lss
add
adc
xor
jecxz
lods
mov
and
push
aad
mov
and
xchg
xchg
cmp
sub
cmpsb
dec
push
cmpsl
xor
mov
fcoms
jae
dec
testb
ss
mov
pop
aam
shl
lcall
aad
fstps
inc
inc
scas
adc
cmp
jns
xor
out
xchg
imul
stos
ljmp
ficompl
in
dec
inc
push
stos
lcall
jmp
xchg
int3
mov
les
mov
xor
add
orps
jle
dec
nop
adc
aas
in
mov
out
ret
mov
cmp
lret
mov
shl
in
stc
cmp
fsubl
or
mov
sarl
clc
lock
ss
jno
in
imull
mov
rcll
pop
cs
cmp
orb
jae
cs
stc
or
mov
xchg
int
xchg
sub
js
sub
push
dec
and
or
xchg
cmc
cltd
lret
mov
xchg
or
gs
fnstsw
int
movsb
loope
ret
mov
sbb
addl
or
cmp
cmp
xor
out
mov
les
jb
ds
xlat
push
xchg
rclb
sbbl
mov
dec
push
mov
dec
iret
mov
fdivs
jmp
push
push
jecxz
ss
fsub
test
mov
xor
sbb
and
xor
and
adc
xchg
out
fucomi
inc
cmpsb
jne
mov
fisubrl
cmpsl
add
int3
cmp
sbb
shrl
mov
das
pop
stos
test
movsb
lock
mov
sbb
xchg
mov
inc
jne
xor
cld
add
pop
push
mov
fwait
leave
xlat
jp
in
push
cmp
mov
xchg
adc
repnz
out
mov
xchg
push
add
mov
insb
xor
cmc
sbb
dec
into
imul
popa
jl
inc
mov
inc
ss
or
iret
mov
mov
jecxz
add
xlat
mov
fdivp
xchg
cmc
fldcw
enter
sbb
dec
push
les
mov
xor
jns
loop
scas
test
push
int
subl
xlat
sub
sbb
insb
dec
das
jle
push
sub
add
adc
adc
add
mov
sub
adc
jo
cmp
fstpl
mov
loopne
ret
mov
jno
arpl
scas
jl
jno
and
gs
push
or
pop
je
push
adcb
xchg
xor
inc
js
andl
dec
stc
dec
mov
or
popf
xor
imulb
cmp
inc
repnz
jmp
push
sub
lahf
std
lahf
xchg
movsl
or
xchg
mov
lods
lcall
cmp
rorl
xchg
icebp
movsl
rclb
push
xor
xchg
or
mov
addb
jb
fisubrl
or
and
push
inc
ja
lahf
fidivs
jmp
mul
sbb
fcompl
mov
jns
mov
adc
cwtl
cmp
push
jnp
adc
cmp
pop
je
mov
cmp
cwtl
dec
push
dec
add
repz
arpl
rorl
xchg
test
insl
std
cmp
clc
jo
lret
sbb
mov
insb
mov
scas
adc
xchg
and
mov
mov
sub
mov
fwait
push
xchg
adc
cmc
dec
fwait
push
or
or
cmp
push
xchg
or
fiaddl
es
cmp
xor
test
xorl
cld
add
push
mov
fldcw
iret
mov
out
jno
aam
lock
insl
std
gs
loopne
sbb
sbb
inc
repz
mov
xchg
fistpl
das
inc
xchg
shll
sarb
fs
shl
cmp
nop
sub
sbb
push
or
imul
or
das
sarl
mov
std
mov
mov
ss
cmp
jle
not
add
and
xor
insb
fs
inc
xchg
add
xchg
push
dec
mov
cs
push
pop
dec
stc
pop
sub
sbb
out
test
jae
and
fimull
xchg
pop
ret
daa
addr16
mov
xchg
dec
mov
mov
imul
cli
jle
xchg
lds
or
es
nopl
mov
adc
xchg
mov
jle
lcall
cmp
adcl
adc
jae
jcxz
push
ljmp
mov
cmp
inc
std
mov
inc
pop
or
xor
ror
xchg
loop
or
iret
push
xchg
cmc
jns
pop
popf
push
lahf
call
out
shll
mov
fildl
jp
repz
jl
fdivp
nop
xor
gs
arpl
sbb
pop
loope
arpl
jnp
sub
add
xchg
dec
str
das
shll
mov
cltd
sarb
or
in
ljmp
jne
lret
fwait
loop
outsl
pop
into
out
daa
or
icebp
adc
pop
dec
call
sbb
stos
fwait
pushl
imul
fcmovbe
js
jg
mov
daa
bound
or
push
fstpt
xchg
aas
dec
std
or
mov
cli
cmpsl
add
xor
int3
pop
push
inc
jb
adc
addr16
jns
inc
into
ljmp
xchg
mov
std
cmpsl
jo
add
jae
mov
mov
sbb
mov
pushf
leave
jl
es
mov
mov
adc
loopne
push
mov
mov
movsb
cltd
aas
les
mov
gs
cmp
mov
push
mov
lret
hlt
jb
cmpsl
mov
jmp
fsubrs
loopne
inc
lcall
scas
or
subl
push
rorl
sarb
mov
mov
loopne
push
movsl
sbb
sub
out
sub
mov
ret
fdivrl
adc
popf
in
fwait
mov
inc
loope
stc
ds
cli
dec
jl
sbb
pop
enter
or
mov
xor
in
cmpsl
test
aas
or
cmpl
mov
push
nop
outsb
in
pusha
insb
popf
fisttpl
mov
stos
je
in
push
xchg
adc
jns
aam
pop
clc
scas
xor
jb
sbb
mov
ja
xor
stos
inc
xlat
and
xchg
test
and
mov
sahf
lods
or
aam
lcall
out
inc
jge
and
aaa
or
mov
xchg
es
sub
sbb
sbb
inc
jecxz
push
fidivrs
push
ljmp
inc
loopne
adc
das
cld
push
push
mov
sbb
fs
leave
addr16
cmp
shll
jecxz
xor
sbbb
dec
jns
ret
inc
les
and
mov
pushf
sbb
lea
xchg
arpl
lret
rorb
stos
sbbb
mov
lahf
pop
sbb
xor
inc
bound
pop
in
out
mov
pop
xor
push
mov
notl
dec
inc
dec
mov
das
sub
mov
gs
pusha
jbe
dec
in
and
sbb
push
add
jecxz
adc
btr
popa
mov
cmp
daa
das
xchg
je
push
popf
and
loopne
add
pop
shll
ds
shl
xchg
out
shrb
or
insl
sbb
push
iret
stos
clc
push
bound
push
movsb
jno
ss
adcb
insb
imul
and
int
xor
icebp
in
imul
jnp
ss
stos
cmp
xchg
xchg
lock
mov
jae
icebp
push
aaa
clc
add
lds
shl
and
and
or
xlat
sbbl
xor
add
aam
out
jle
test
ds
stos
rorl
inc
xor
or
shlb
aas
push
mov
ret
sub
push
dec
and
fbstp
xor
sbb
not
enter
push
dec
addr16
mov
mov
in
jmp
push
scas
adc
in
jg
les
push
and
stos
mov
call
insb
push
and
rorl
pusha
adcl
jne
pusha
data16
mov
or
or
dec
std
repnz
sub
add
ficoml
cmpsl
pop
ret
inc
ds
xor
popa
mov
dec
mov
cwtl
xchg
and
add
je
int
mov
push
jne
loop
push
jmp
mov
xlat
aaa
sbb
xchg
pop
mov
push
loopne
shlb
inc
xor
jle
and
repnz
in
or
scas
mov
les
mov
adc
rcrl
mov
dec
xor
push
adc
mov
bound
insl
jno
testb
pop
test
into
inc
or
cmpb
add
jno
rcrl
loopne
pop
idivb
adc
sbb
and
mov
or
cmc
push
in
in
mov
and
int
sub
and
lahf
loope
mov
sub
les
sub
into
inc
cld
divb
lds
scas
push
ret
jns
pop
dec
dec
xor
sbb
jle
xorb
lds
leave
fwait
data16
jecxz
jbe
or
cs
push
sbb
cmp
mov
add
adc
dec
sbb
pop
mov
fcoml
cmp
inc
enter
sahf
mov
dec
lret
dec
jb
pop
adc
mov
test
movb
filds
insl
add
mov
icebp
or
sbb
cli
mov
nop
pusha
ret
jge
or
xchg
addb
dec
shl
add
adc
jecxz
lea
sbb
xor
test
sub
push
fs
lahf
cs
jno
gs
jg
pop
jbe
dec
in
andl
je
stos
cmp
add
outsb
jp
push
cmc
aaa
cs
mov
pop
xchg
popa
int
mov
mov
jne
mov
inc
cmc
mov
loop
rcrb
inc
scas
add
pushl
int3
lret
xor
pop
notl
sub
shl
sarl
pop
push
dec
insl
out
mov
out
out
xor
movsb
decl
add
mov
adc
lcall
mov
xor
jne
lret
jnp
add
movsb
push
jecxz
jne
mov
repnz
mov
push
test
jp
xchg
test
sbb
sar
adc
in
je
jno
sbb
in
jno
inc
stc
adc
addr16
mov
mov
mov
jmp
arpl
sub
iret
popa
les
add
lret
jae
mov
xchg
pop
shlb
dec
in
mov
lret
orb
ss
insl
loopne
jbe
push
cmovbe
inc
pop
and
xor
in
mov
ss
push
sar
je
orl
mov
subl
inc
mov
pop
arpl
dec
cmp
push
add
mov
push
cld
pop
test
idivb
inc
xchg
pop
das
mov
cmc
lret
insl
or
xor
ficomps
in
call
push
jge
loop
outsl
sbb
sbb
mov
jno
mov
fs
dec
cmp
das
adc
mov
mov
dec
xchg
xor
mov
push
inc
sahf
lea
add
in
scas
push
fisttpll
es
aad
inc
dec
push
mov
ja
imul
mov
dec
add
cmp
mov
pop
sub
icebp
jmp
clc
icebp
mov
mov
or
in
ds
cmp
sbb
out
ljmp
mov
adc
neg
or
pusha
sbb
jne
add
inc
inc
stos
arpl
jns
test
popa
add
xchg
adc
push
rclb
sub
cmp
cmp
test
or
add
mov
sahf
imul
pusha
mov
out
mov
xlat
dec
sub
pop
and
mov
mov
cmp
and
loop
cmp
fidivrl
xchg
cmpsb
adc
inc
aam
xchg
mov
mov
sbb
mov
add
fld1
pop
repnz
in
fstpl
xchg
and
xlat
mulb
pop
aas
insl
add
dec
aad
adc
jle
add
fs
flds
pop
mov
xor
int
je
inc
adc
sti
sarl
imul
dec
sbb
das
mov
jle
lahf
pop
mov
xchg
sbb
lea
adc
dec
jbe
pop
or
aas
arpl
xor
inc
stc
mov
lcall
xor
sbb
fsubrl
or
dec
cmp
pop
nop
xchg
jl
mov
orb
clc
lea
mov
lahf
cmp
or
inc
add
add
movsl
mov
stos
scas
xchg
mov
fwait
sub
inc
rorl
mov
mov
pop
or
aas
cmp
jns
jmp
in
stc
jnp
ljmp
sti
jp
xchg
mov
rol
outsb
test
xor
in
rcr
stc
lock
cmp
testl
inc
inc
pop
push
or
add
push
dec
fidivrs
sbb
in
push
adc
mov
into
cmpsb
sbb
push
ret
xchg
ljmp
jbe
cmc
jg
testl
jmp
data16
or
pusha
jo
adc
sbb
outsl
mov
orl
in
test
pop
adc
sti
jae
jne
sub
push
repnz
lock
push
push
stos
jnp
fadds
scas
cmp
jle
jle
andb
dec
das
enter
je
xor
fwait
inc
or
imul
inc
xchg
add
pop
cmp
push
cltd
adc
inc
push
cmp
andl
stc
fistl
mov
pushf
adc
mov
fsubr
push
shr
add
ds
scas
pushf
leave
enter
mov
loopne
pop
pop
mov
sti
jmp
xchg
ret
ret
push
mov
es
mov
mov
ret
ss
shlb
int
lret
adc
dec
clc
sti
push
jecxz
std
rcr
and
ret
mov
and
in
and
push
xor
or
adc
inc
das
dec
push
movsb
and
or
push
push
jle
es
mov
addr16
or
jns
inc
mov
pop
cmc
cmpsl
xchg
ret
jg
inc
int3
push
or
pop
shlb
lods
insl
lret
dec
shl
movsb
sub
aaa
cmp
nop
mov
std
mov
into
pop
pop
into
in
and
out
or
imul
inc
out
fcompl
adc
ror
pop
xchg
and
cmovp
lods
cmp
mov
or
mov
and
mov
jecxz
rcll
leave
cmp
aad
movsl
pop
inc
pop
aas
roll
cmp
jmp
mov
enter
mov
lret
ret
sbb
push
or
imul
xchg
gs
shrl
test
sub
xchg
pop
fimull
addl
ret
leave
mov
push
mov
ret
hlt
cld
stos
or
cmp
mov
xchg
and
jo
rorb
cs
mov
cmp
mov
mov
je
adc
cmp
sub
jmp
das
fstps
mov
mov
inc
test
mov
out
pusha
add
nop
aaa
mov
std
loopne
and
dec
cmc
mov
je
dec
jo
push
push
rcrb
shll
xor
mov
xor
mov
xchg
cmc
dec
cmp
mov
mov
jb
pop
push
mov
sti
insl
stos
lods
and
sub
cmp
cmp
stc
repnz
test
rclb
lahf
and
push
idiv
and
xor
imul
sbb
ret
fwait
sub
sbb
cltd
mov
dec
inc
xchg
mov
mov
add
call
adc
cwtl
add
fsubs
dec
test
push
dec
jbe
jne
add
negl
mov
cmp
push
stc
call
mov
pop
mov
orb
loop
inc
je
stos
into
mov
in
sbb
test
mov
jge
pop
dec
lret
and
rorl
bound
mov
iret
xor
pop
inc
into
ret
orl
aaa
leave
dec
jmp
jmp
les
pslld
clts
dec
enter
rorb
outsl
or
aas
pop
and
out
sub
and
ljmp
and
pop
dec
iret
popa
sbb
mov
xchg
fwait
jae
adc
pop
jne
xor
daa
decb
inc
je
add
xor
dec
test
dec
cltd
je
xchg
jge
lods
inc
rorb
add
sbb
imul
jp
lret
sub
loope
sbb
mov
hlt
jmp
lret
popa
xchg
out
rol
insb
lahf
stos
mov
push
mov
fidivrl
je
or
dec
repnz
mov
out
stos
adc
cmp
lods
imull
pop
cmpsl
subl
shll
lock
adc
xchg
pop
inc
mov
add
jnp
mov
dec
rcll
add
or
into
mov
pop
mov
fistpl
out
mov
sahf
jmp
inc
cld
or
add
addr16
jb
outsl
roll
cmc
popa
jp
and
mov
fimull
js
mov
gs
cmpsl
and
cmp
mov
jns
dec
xchg
mov
gs
int
push
dec
leave
outsb
movl
and
jb
pop
ljmp
in
push
sbb
jge
scas
push
jno
dec
ja
push
pop
or
pop
cmp
push
inc
xchg
int
push
movsb
xor
popa
mov
mov
sbb
lret
push
cmp
push
ss
pop
in
inc
shl
push
xchg
lock
xor
mov
inc
arpl
dec
ljmp
or
lcall
jp
sbb
mov
push
out
adc
test
mov
xchg
sub
cltd
jle
faddl
push
out
fsubp
xchg
iret
push
jns
inc
in
loopne
jbe
aad
jne
adc
test
lret
sbb
stc
mov
dec
add
inc
mov
inc
ja
or
fbstp
nop
jecxz
mov
push
pop
pop
dec
sbb
pop
insb
sbb
das
popf
cs
mov
mov
pusha
or
shlb
repnz
mov
cs
adc
or
or
xchg
lret
pop
mov
xchg
repz
pushl
inc
popa
fdivrs
fs
push
inc
cmp
aam
pop
xlat
mov
mov
movsb
push
or
ds
cwtl
test
pushf
cmp
inc
ljmp
std
std
sbb
ja
mov
imul
sub
mov
sbb
sbb
clc
add
and
mov
or
and
xchg
mov
mov
dec
xchg
inc
dec
or
out
aam
test
jns
arpl
int3
cmc
fsub
mov
fiadds
jp
lcall
sub
dec
inc
push
mov
push
jo
xor
popf
pop
movsb
sub
in
sbb
and
repz
and
cmp
popa
test
dec
fistl
xchg
imul
lcall
mov
shlb
ficomps
sbb
mov
enter
icebp
sub
les
sarl
std
or
stos
inc
mov
das
dec
aaa
ja
and
lea
xchg
fwait
leave
lret
dec
pusha
xchg
ret
mov
xor
xchg
int3
xor
cwtl
in
push
jae
in
xchg
dec
push
mov
movsb
sub
xchg
ss
gs
out
jmp
cmp
mov
sbb
jp
cs
sbb
xchg
pusha
movsl
lret
push
add
add
pop
xor
pop
or
add
add
mov
pop
jbe,pt
iret
push
std
mov
push
mov
sub
mov
xchg
dec
inc
jg
sbb
xlat
push
sub
mov
and
add
inc
xor
lcallw
outsb
push
push
fldt
pop
adc
jae
pop
stc
xchg
loop
cmp
sbb
shrb
lock
jmp
loope
sbb
add
sub
hlt
add
les
cs
push
pop
imul
cmp
push
hlt
push
dec
jmp
out
add
push
fsubs
xlat
adc
xchg
mov
cmp
pop
ret
jp
sarl
cs
scas
lock
adcb
pop
jae
xchg
jnp
jmp
insl
xchg
ds
int
jo
and
add
jecxz
or
insb
mov
and
mov
xchg
daa
xor
les
pop
imul
jno
pop
or
jmp
mov
ss
call
pop
sbb
add
repnz
ljmp
leave
addb
in
pop
daa
in
jmp
test
out
enter
and
ret
jmp
je
or
inc
dec
ss
pop
dec
out
inc
pop
enter
js
cli
insl
movsb
pop
pop
cld
push
push
std
in
lahf
mov
test
push
shll
mov
adc
daa
pop
push
pop
inc
test
dec
stos
outsl
sub
or
in
inc
arpl
ss
addr16
pop
movsb
out
jo
xor
pop
jecxz
jecxz
add
add
test
dec
xchg
pop
pop
ret
xor
inc
mov
fisubrs
add
push
and
fildll
das
test
add
sar
aaa
stc
stos
movsb
inc
insb
std
jo
cld
aad
mov
jo
fisttps
cli
xor
xchg
into
adc
or
sbb
inc
mov
inc
in
movsl
divb
aad
jbe
jae
mov
push
pop
push
sarb
repnz
cmp
push
dec
xor
jmp
dec
jge
xchg
adc
out
in
mov
iret
rcl
aam
cmp
inc
jge
inc
jecxz
cld
cmp
sbb
push
or
idiv
dec
jns
clc
xchg
cld
dec
lods
jecxz
mov
subl
ss
xor
cs
out
pop
and
push
sub
and
call
xor
and
lret
pop
adc
les
mov
ljmp
lock
lods
sub
dec
fidivs
out
in
jmp
lea
scas
in
jmp
sub
sbb
pusha
leave
mov
pushf
dec
mov
imulb
icebp
inc
sbb
xchg
ret
fisttpll
stos
js
ret
inc
out
aas
jnp
sbb
push
rorl
repnz
mov
in
add
adc
cmp
cmp
loop
mov
xchg
lea
stos
xor
icebp
int3
push
jno
push
jno
mov
addl
pushf
test
cli
dec
and
or
jne
pop
inc
xchg
scas
stos
shlb
fwait
orl
pusha
lret
shlb
fidivrl
mov
sbb
mov
scas
xor
xchg
dec
push
stc
mov
xlat
mov
push
mov
insl
push
leave
out
jecxz
mov
mov
push
fildl
mov
xchg
xor
pop
jl
outsl
lret
or
jno
fdivs
xor
fsubrp
inc
and
adc
lret
ret
mov
loope
dec
shll
adc
sub
and
xchg
cmp
mov
jg
push
test
aad
mov
addr16
outsb
aaa
xchg
cltd
add
popf
aad
xchg
add
jne
addr16
call
jbe
mov
mov
mov
sbb
loope
ror
mov
jbe
mov
push
pop
or
scas
inc
sub
push
rolb
sti
out
cmc
jae
push
sub
lret
inc
fadd
dec
cmp
orb
shll
fisttpl
mov
fmul
pusha
jbe
xchg
push
push
pop
pop
pop
sahf
negb
mov
test
xor
jne
push
in
shll
scas
mov
je
sbb
subl
aam
test
push
lock
jae
std
mov
pop
push
filds
cwtl
and
mov
add
mov
xchg
lods
jmp
push
pop
pop
clc
sbb
test
scas
add
arpl
int3
cmc
mov
mov
loop
cmp
cmc
ret
int
inc
fwait
adc
pop
fadds
xchg
xor
adc
adc
rcll
arpl
fwait
inc
loop
jle
nop
inc
sahf
jg
and
loopne
in
mov
pop
lahf
repz
mov
shlb
xor
xchg
jmp
ret
movsb
mov
in
inc
inc
jns
loopne
inc
pusha
fcomps
xchg
jmp
outsb
xchg
iret
jg
cs
imul
inc
inc
popa
mov
rcr
pusha
xchg
adc
jp
mov
ja
mov
insl
insb
enter
jbe
sub
sbb
lds
scas
xlat
pop
gs
and
jnp
lea
mov
lcall
inc
xor
pop
int3
scas
jne
arpl
daa
nop
out
loopne
push
or
ret
cli
loopne
int3
aam
sbb
cmp
add
outsb
add
mov
das
mov
add
mov
push
jg
inc
repz
movsb
push
mov
add
mov
mov
repz
and
jae,pn
ret
adc
shll
mov
outsl
cmpsb
rclb
adc
inc
mov
int
pandn
sarl
mov
inc
aam
jl
jo
mov
and
fwait
inc
cmpsl
mov
push
pop
pop
push
dec
lods
imul
pop
mov
mov
aas
inc
adc
xchg
cltd
cmp
out
cs
xor
xchg
repz
imull
lds
inc
into
daa
popf
jmp
sub
fldenv
mov
inc
and
test
cs
stc
xlat
xor
push
les
xchg
outsb
xchg
mov
pusha
lea
cmc
cmp
mov
or
mov
rcrl
ja
mov
lock
mov
xchg
add
ljmp
push
inc
jmp
add
sub
adc
and
loop
cld
test
jb
sahf
vmovups
lret
imul
in
add
lahf
gs
data16
and
and
or
hlt
cmpsl
and
or
lea
pop
insl
nop
xor
jecxz
addb
stos
and
xchg
das
pop
mov
dec
mov
aas
xchg
sub
adc
jno
loopne
xchg
sti
adc
mull
add
sbb
inc
into
add
adc
sbb
or
add
sub
int
sbb
js
cmpxchg
in
sbb
enter
xchg
inc
in
dec
dec
mov
mov
pop
ret
mov
pop
adcl
enter
cmpl
test
push
push
stos
xor
inc
sbb
sbb
jb
push
insb
movsb
jle
xor
dec
lahf
push
das
clc
les
sti
repz
xchg
mov
xor
xor
xor
nop
pop
push
lret
push
add
rolb
jge
adc
cmc
loopne
xchg
xchg
and
mov
ljmp
cmp
js
xor
mov
inc
cli
loope
mov
nop
test
xchg
or
cmp
cmp
idivb
pushf
xchg
mov
xlat
mov
inc
sub
test
imul
loopne,pt
outsb
and
shr
push
imul
data16
aaa
jae
sub
jge
clc
test
add
fnstcw
dec
adc
mov
adc
movsb
test
dec
loope
lret
lock
fwait
mov
sbb
push
rcr
xchg
ja
cmp
mov
out
repz
cltd
imul
ds
and
in
and
pop
daa
mov
adcl
fisttpll
mul
inc
mov
sub
jecxz
xor
mov
mov
inc
cmp
pop
jecxz
lret
fildll
jne
cmp
das
arpl
mov
push
push
jb
mov
pop
sbb
mov
out
dec
lods
mov
dec
dec
cld
out
xorl
pusha
in
testb
pop
mov
orb
fldcw
lock
and
mov
in
mov
xchg
ja
xchg
dec
mov
push
jo
scas
mov
test
and
outsl
push
out
jge
ret
add
aaa
dec
pop
lahf
sbb
add
leave
stos
fwait
cltd
xor
mov
pop
mov
imul
repnz
mov
dec
xchg
cmc
ficoml
data16
add
cmp
inc
and
das
sbb
pop
paddq
fnstcw
jl
fistpll
and
dec
dec
mov
int
fmul
sbb
mov
mov
test
and
movsl
iret
lahf
dec
mov
adc
lods
int
xorl
fists
adc
cmpsb
loopne
pop
mov
adc
jno
inc
scas
movzbl
iret
rolb
rorl
test
push
dec
or
adc
out
fadd
sbb
mov
xchg
fwait
out
inc
adc
pop
aad
xchg
jb
les
mov
arpl
ljmp
inc
loop
leave
xchg
jbe
add
jp
rcll
xor
push
mov
mov
cwtl
orl
clc
fsubs
lea
inc
lock
ficoms
push
sti
fcmovbe
pusha
and
xchg
das
lret
mov
mov
adc
popa
ret
mov
pop
lods
xchg
and
pop
inc
push
xchg
xor
pop
fsub
sbb
push
shrb
pop
mov
xchg
jg
cmpsb
shrl
xorl
aad
aam
mov
movsl
fucomp
leave
xor
shlb
mov
aam
pop
jo
pop
loopne
sub
aaa
loope
outsb
mov
repz
sub
nop
mov
and
ret
fnsave
xchg
cmp
movsb
ret
pop
test
sbb
dec
jno
pop
inc
push
jp
pop
dec
insl
mov
sbb
xchg
nop
insb
and
jl
mov
add
cmp
psubsb
jg
add
mov
push
pop
push
jmp
pusha
andl
clc
adc
or
mov
test
int3
mov
mov
mov
mov
pop
popf
add
and
mov
stos
nop
push
pop
or
ss
jae
into
xor
cmp
jg
rcll
dec
xchg
adc
daa
jo
iret
out
adc
and
aad
mov
ret
dec
xchg
adc
fdivs
mov
out
mov
and
lcall
in
mov
cs
pushf
lret
std
sub
push
cmp
addr16
call
bound
xor
push
lods
loope
push
add
mov
repz
js
sub
dec
inc
ret
loopne
jo
xor
push
xor
in
mov
push
mov
aaa
pop
mov
inc
popa
call
and
cmc
mov
repz
aaa
mov
loope
and
mov
lods
pop
xor
adc
xchg
cmp
mov
mov
inc
jne
and
adc
mov
dec
inc
addr16
add
or
sbb
jp
or
mov
in
cmp
jb
push
push
pop
hlt
out
lcall
xor
xchg
push
out
rcrb
in
cltd
inc
inc
xchg
in
cmp
inc
out
fs
pop
mov
and
insb
push
arpl
jmp
loope
sbb
leave
aam
aad
jns
mov
pop
xchg
or
sbb
pop
inc
push
mov
mov
call
leave
fucomi
test
sbb
addb
das
stc
gs
and
bound
mov
cmpb
pop
xor
lret
dec
xchg
sbb
fstpt
rorb
lods
jne
jle
jge
sbb
mov
divb
jns
flds
mov
push
xchg
bound
push
cmp
scas
sub
lret
stos
stos
icebp
in
sub
push
mov
rcll
or
or
and
mov
rcll
ja,pt
fidivrs
cli
sbb
loopne
out
les
add
push
or
xor
insb
mov
sub
repz
sahf
popa
push
mov
dec
arpl
inc
cmp
and
cmp
into
pop
jae
adc
adc
rcrb
jb
imul
inc
lret
in
mov
stos
jo
push
mov
std
mov
les
test
movsb
mov
inc
sub
xor
pop
xor
xor
sub
push
adc
adc
push
pop
cmp
add
mov
and
clc
push
inc
sbb
test
add
or
inc
popf
imul
lds
cmp
lahf
push
aas
js
fs
mov
dec
mov
ret
stos
and
shlb
mov
add
shll
jmp
hlt
or
fdivrs
push
stc
push
sub
mov
push
sarb
sbb
call
nop
pop
add
dec
fsubr
in
xor
xchg
adc
adc
fwait
add
adc
test
outsb
sbb
push
dec
sbb
js
into
dec
addb
movsl
xor
cmp
out
es
jg
shrl
mov
arpl
push
rolb
inc
nop
inc
int
pop
ds
xchg
daa
insb
scas
push
jmp
das
sbb
das
inc
sub
das
or
inc
lcall
lods
dec
sahf
icebp
inc
movsl
sub
cmp
insl
int
jmp
pop
arpl
shll
dec
jg
mov
push
lahf
or
mov
scas
xor
pop
dec
lds
inc
in
sub
aas
add
mov
dec
xor
inc
cmp
jno
sub
or
xor
inc
xchg
mov
mov
mov
jg
lock
and
dec
cwtl
inc
adc
mov
jmp
sub
inc
cld
cwtl
push
jne
push
repnz
call
in
and
xor
dec
shrl
push
mov
jp
inc
sub
or
sbb
enter
push
int3
pop
pop
xor
adc
imul
or
xchg
repz
enter
adcb
jecxz
loopne
xchg
cmpsb
pand
cmc
mov
jbe,pn
or
inc
pop
mov
out
incl
dec
shrb
outsl
sub
mov
sbbb
js
addr16
aad
int
imul
inc
inc
and
loop
mov
inc
xor
sub
and
inc
or
add
js
pop
aas
dec
xor
fdivrl
mov
sbb
in
pop
mov
push
dec
xchg
inc
push
stos
inc
adc
add
sub
xchg
dec
and
inc
les
mov
mov
push
mov
push
xchg
pop
sbb
xor
or
mov
dec
arpl
inc
outsl
mov
jg
push
sbb
dec
inc
xchg
loope
mov
cli
arpl
lcall
movsb
mov
pop
aas
dec
popa
cmp
add
xchg
push
out
fwait
mov
lods
mov
andb
mov
mov
sbb
int
js
add
mov
sbb
xorl
pushf
pop
sbb
in
aad
sbb
mov
jl
lock
push
mov
je
scas
adc
dec
loopne
mov
push
cmp
sbb
push
mov
outsb
push
push
cmp
sub
out
sbb
clc
adc
xchg
sbb
stos
cmpsl
nop
push
add
enter
inc
ljmp
cmp
shl
jmp
sbb
int
inc
loope
bnd
jge
test
mov
mov
mov
and
popf
leave
pop
iret
mov
dec
and
adc
or
gs
or
ret
sbb
add
std
sbb
push
xchg
lea
dec
lret
outsl
into
les
leave
jb
cmp
jbe
mulb
in
mov
fptan
add
mov
aam
adc
mov
stos
mov
sar
jp
pushf
xor
mov
mov
sub
xor
xor
int
mov
sub
jle
dec
push
mov
test
mov
adc
popa
pop
scas
daa
sub
add
or
ret
xor
and
dec
ljmp
shrl
in
sub
jge
neg
inc
scas
sub
jno
pop
outsl
or
bound
in
dec
stc
aam
enter
pop
stos
add
jne
and
mov
subl
loope,pn
cmp
adc
fildll
pop
push
stos
xor
inc
in
push
int
xor
dec
cltd
mov
sbb
cltd
jle
push
ljmp
stos
popf
add
shlb
jmp
xchg
loope
sub
rclb
push
add
stos
stos
stos
jo
cmp
cli
ss
mov
sub
mov
insl
fldenv
dec
testl
sub
push
pop
dec
pop
xor
popf
out
push
mov
mov
adc
leave
pushf
adc
outsl
aad
das
add
xchg
in
iret
sub
pop
jae
lret
xor
jb
push
add
dec
nop
insb
icebp
dec
sub
dec
dec
xor
mov
jecxz
aam
dec
sbb
cld
adc
mov
movsb
in
and
jg,pn
pop
mov
add
sbb
imul
pop
adc
out
inc
fdivp
in
aad
dec
pop
xchg
mov
push
scas
xlat
mov
enter
pop
adc
push
mov
xchg
jmp
dec
leave
lahf
lret
rcr
je
js
push
mov
inc
cmp
sbb
cmp
xor
arpl
mov
cltd
jnp
cli
or
or
stc
adc
dec
mov
clc
mov
jmp
fcmovbe
pop
cmc
jno
xchg
ret
mov
and
inc
cmp
mov
xchg
xchg
and
xlat
xchg
push
aam
sbbl
fdivs
push
loope
sbb
add
stos
add
or
clc
cmc
adc
pop
adc
lcall
or
imul
adc
sbb
pop
mov
repnz
jno
jl
imul
lahf
outsb
pop
cmp
aad
ret
addr16
lahf
ret
xchg
sub
mov
sarl
int
test
es
addr16
sbbb
cmp
in
or
iret
negl
mov
orl
xchg
lods
popf
xlat
add
lret
ds
push
mov
xchg
gs
fmul
sbb
dec
icebp
mov
divl
add
xchg
inc
aam
xchg
lods
into
xchg
adc
divb
aaa
ds
cmpsb
sahf
adc
sbb
jl
inc
lock
ja
sbb
pop
mov
jg
inc
add
push
dec
leave
xchg
mov
sub
es
mov
pcmpgtb
rcll
push
mov
jle
or
arpl
xchg
pushl
addr16
jecxz
ret
fadds
aaa
push
jb
dec
mov
mov
shrl
mov
push
call
xchg
sbb
out
lea
pop
shrl
cmp
mov
mov
or
mov
jnp
aad
lret
iret
lcall
movsl
jnp
adc
mov
jl
or
push
js
data16
xor
pop
xor
xchg
cmp
lahf
pop
setae
stos
adc
push
jno
mov
sub
add
jo
ljmp
sub
movsb
pop
mov
mov
repnz
fcoms
cwtl
cmpsb
repnz
in
pop
jecxz
scas
mov
xchg
shll
jg
mov
jbe
or
jno
and
jmp
xchg
jnp
sarb
dec
xchg
mov
movsl
insb
sbb
loop
ret
add
xor
shrl
mov
mov
mov
inc
mov
hlt
popa
inc
xchg
inc
pop
mov
sbb
dec
incl
sub
pop
shlb
adc
dec
sbb
std
push
fidivs
mov
cli
jo
dec
adc
ret
sahf
or
in
or
inc
out
xchg
push
ss
and
into
hlt
mov
out
mov
adc
imul
imul
inc
xchg
adc
adc
sbb
adc
loop
mov
xchg
pop
test
insb
inc
shr
mov
dec
sbb
imul
mov
in
mov
lret
sbb
sub
and
jo
jne
sbb
bound
mov
pushf
ret
scas
out
subb
int3
cld
lahf
out
push
cmp
insb
and
out
clc
mov
xor
pop
or
test
push
xor
insl
fcmovnu
dec
sbb
or
cld
repz
and
add
aad
add
and
test
or
or
add
sahf
adc
mov
cmc
cmpsl
insb
jecxz
out
mov
scas
leave
pop
jne
les
daa
or
dec
out
mov
mov
mov
inc
and
sub
movsl
jle
add
dec
popf
in
mov
in
mov
pop
sbb
stos
lahf
jle
xchg
stos
pop
loopne
dec
xchg
and
ljmp
shrl
mov
pop
out
adc
push
dec
sbb
aaa
mov
inc
sub
test
test
dec
lret
in
pop
adc
mov
mov
dec
and
movsb
mov
outsb
stos
jg
add
inc
out
popa
dec
cld
lods
sub
outsb
andl
xlat
repnz
mov
sub
cmpsb
xchg
pop
cmp
or
ror
gs
mov
mul
das
clc
aaa
aam
fimull
add
repz
lea
jg
and
mov
sbb
pop
aas
push
and
dec
mov
push
scas
ret
test
sub
mov
icebp
jle
jge
scas
add
imul
int
aas
std
push
xchg
or
sbb
pop
pop
push
jnp
in
xchg
and
in
cmp
cld
out
pop
lods
aam
fldcw
sbb
xchg
adc
pusha
jl
sbb
mov
pop
xchg
ret
push
jp
lret
lcall
cmp
push
add
xchg
mov
outsb
mov
dec
sbb
mov
test
mov
popf
sbbl
sub
sub
insl
xchg
push
ficomps
dec
loopne
arpl
mov
mov
fs
push
cmpsb
or
xchg
sub
jo
mov
jl
jnp
test
ss
ds
dec
rcll
sub
pop
leave
arpl
mov
cmp
fnstcw
jp
jmp
xchg
es
inc
cltd
outsl
adc
adc
sub
cmp
mov
cld
cwtl
or
mov
dec
mov
jb
jnp
stos
fisubl
push
xchg
or
inc
scas
inc
adc
mov
sbb
mov
ljmp
test
stc
adc
mov
sbb
sub
mov
shrl
ret
or
mov
jecxz
outsb
into
add
push
fdivrl
pop
mov
stos
cmp
mov
mov
rcl
push
dec
jbe
fwait
inc
adc
ljmp
ljmp
jns
out
std
xchg
mov
mov
cmp
stos
mov
movsb
nop
cmp
mov
cwtl
xor
std
lea
jp
inc
test
add
outsb
mov
out
sbb
jmp
mov
add
push
sbb
inc
mov
insb
mov
scas
or
outsb
adc
xor
mov
out
adc
shl
inc
fisubl
lock
repz
sbb
fcmovu
test
pop
adc
sbb
test
dec
outsl
mov
ret
mov
test
add
shll
mov
adc
inc
sbb
or
mov
jmp
mov
cmp
call
mov
mov
xlat
aas
sub
out
add
sub
mov
add
adc
lock
fmull
add
sub
or
mov
push
pop
lock
push
shlb
sub
aaa
cmp
mov
xchg
sarb
popa
insb
mov
mov
lret
pop
xchg
fbstp
je
dec
add
movhps
push
popf
cmp
jle
pop
cmp
pop
mov
fldcw
fstpt
std
or
add
leave
pop
mov
push
cld
jl
ret
xchg
push
mov
jne
jl
in
int3
insb
ss
bound
rcl
sti
push
fwait
rclb
cs
in
sbb
pop
add
arpl
or
test
in
mov
or
push
adc
mov
int
mov
lock
dec
inc
dec
fisubs
push
in
mov
shrb
aam
dec
adc
cmpsl
jecxz
xchg
push
pop
ror
icebp
mov
mov
sbb
in
jg
arpl
test
and
test
xchg
and
xor
push
xchg
cld
sub
xor
pop
addb
xor
mov
sbb
xchg
stos
movsl
lea
or
outsl
in
jp
cmpsl
ret
test
mov
pop
add
mov
mov
ret
daa
movsb
mov
sub
fwait
addr16
test
push
popa
or
xchg
mov
adc
cli
add
cwtl
in
arpl
bound
dec
dec
push
cmp
loope
lret
adc
mov
jb
lds
gs
fmull
into
subl
cltd
enter
xor
rcr
insl
push
add
mov
or
fldenv
and
cmp
jg
daa
mov
out
xchg
sti
push
add
call
mov
xchg
popa
test
pop
jmp
iret
dec
adc
dec
mov
dec
andl
xlat
into
sub
mov
fwait
sbb
iret
dec
fdivrs
cltd
add
jno
dec
push
jmp
out
sti
inc
icebp
pop
aaa
jns
lock
faddl
iret
ds
mov
dec
mov
push
in
mov
ds
lahf
fcoml
mov
lret
inc
testb
sbb
aas
cmc
loopne
push
sub
pusha
std
loop
inc
add
cmc
dec
int
mov
xor
dec
xor
mov
adc
fdivrs
gs
int3
sub
xor
and
mov
dec
fldt
mov
add
adc
adc
mov
addl
or
pop
leave
cmpsl
mov
mov
jmp
rcrl
aad
push
shll
ret
push
popa
pop
pushf
je
mov
add
jnp
and
add
push
mov
outsb
rolb
fs
and
fwait
arpl
push
push
mov
inc
rcl
sub
mov
lds
xchg
lret
andb
dec
cltd
mov
push
pop
xchg
fnstenv
inc
arpl
mov
and
push
fisubs
in
mov
mov
xchg
jmp
xchg
mov
sbb
inc
push
cmpsl
scas
push
sbb
aam
sub
xchg
out
les
sahf
or
dec
sub
mulb
lret
arpl
sbb
ja
jg
icebp
imulb
rcrl
xchg
orl
add
and
dec
pop
push
fsubrs
xchg
inc
loope
pop
pcmpgtd
scas
rclb
imul
mov
outsl
fimuls
mov
fimull
bound
sub
inc
int
movsl
jp
stos
imul
in
pusha
movb
pop
xor
dec
ljmp
fwait
call
mov
shll
test
dec
cmp
cmc
mov
or
cmpsb
pop
pop
cwtl
mov
nop
push
idivl
stos
shrb
mov
jo
pop
sti
cmp
call
cmpsl
xor
adc
sbbl
aaa
jp
movsl
jp
bound
and
stos
cltd
fcoml
call
insb
jg
jno
push
repnz
jmp
add
js
fcoml
mov
add
push
dec
mov
shl
divl
test
imul
cld
mov
insb
ds
jg
jno
dec
sub
fcomps
add
xchg
nop
outsb
dec
mov
mov
dec
aad
negb
shrb
test
or
dec
dec
ret
jp
push
xor
ja
jno
pop
fdivrs
rcl
mov
out
mov
in
adc
in
daa
subl
cli
xchg
out
and
jbe
and
jecxz
shrb
or
testb
flds
inc
jge
shlb
imul
stos
scas
daa
inc
push
ss
push
insb
je
lods
mov
fwait
iret
lock
sub
cmpsb
ret
nop
xor
js
cmp
jne
cs
js
or
fisubl
pop
inc
pop
icebp
push
push
stos
xchg
iret
inc
aas
adc
xchg
mov
adc
pop
f2xm1
add
outsl
in
push
pop
inc
sbb
scas
add
int
aaa
dec
inc
fwait
out
dec
pop
jns
test
or
fnstcw
lea
cmp
xchg
xor
sbb
shl
enter
xor
pusha
mov
shlb
icebp
add
test
clc
clc
loope
inc
jmp
xor
push
std
leave
pop
cmp
and
xor
add
pop
stos
je
scas
or
sbb
sub
repz
lods
rcr
xchg
and
out
mov
xor
jge
adc
xor
mov
jne
xor
into
sarl
jecxz
lock
stos
xchg
fs
test
outsb
fistl
in
dec
je
into
std
xor
sbb
outsl
shrb
cmp
push
adc
adcb
test
daa
scas
cmp
sarl
add
jmp
popa
xor
mov
xorl
cmp
pop
push
das
add
stos
jb
pop
adc
xchg
adc
aad
and
adc
or
cld
dec
mov
and
pop
ljmp
sti
xchg
pop
aaa
ljmp
mov
rcrb
push
mov
stos
cli
clc
xor
adc
jge
push
xchg
ficompl
jmp
xchg
pop
cmc
xchg
jbe
in
fidivl
xchg
dec
xchg
adc
aam
nop
inc
mov
in
je
jecxz
call
xor
fisubrs
pop
inc
enter
mov
xchg
aaa
cmp
inc
popf
dec
xor
imul
arpl
or
dec
jbe
push
loope
inc
movsl
std
shr
fs
push
cmpsb
es
inc
jo
add
xchg
aam
pushf
add
jg
sahf
adc
or
push
fldt
loopne
cmp
mov
int3
xchg
pushf
fwait
ja
lods
int
pop
data16
adc
pop
xchg
push
out
inc
insb
mov
or
testb
pop
repz
dec
outsb
popf
cld
js
shll
jmp
sub
xor
out
jle
cmp
cmp
xchg
insb
cmp
dec
or
dec
push
push
sub
popf
fwait
push
daa
sbb
sbb
enter
adc
insb
mov
sbb
adc
fwait
mov
mov
add
mov
sbb
pop
inc
add
push
sarb
pop
std
lahf
test
mov
jae
xor
mov
lret
mov
jge
xor
pop
add
out
es
lock
rcl
mov
push
mov
dec
cmc
lret
and
xchg
xchg
lret
dec
scas
negb
cli
cli
inc
mov
repz
ret
and
add
out
xchg
imul
xlat
xor
mov
or
mov
test
push
loopne
test
imul
dec
leave
mov
push
sahf
cld
add
aaa
aaa
aam
call
mov
loop
in
mov
mov
test
lods
neg
int3
jge
jb
mov
arpl
mov
sub
jne
sbb
pop
pop
pushf
in
push
jae
movsb
cmp
add
loop
jge
lea
insl
jb
xchg
pop
scas
and
and
mov
xchg
lcall
ficompl
push
repnz
out
and
arpl
mov
mov
push
mov
std
out
sub
mulb
js
nop
repnz
jg
add
cmpsl
push
jne
lret
loope
sbb
dec
fadds
xchg
xchg
pop
loop
leave
mov
sub
jno
fs
dec
sahf
iret
mov
mov
or
iret
mov
xchg
pop
push
test
xchg
jo
push
in
jp
jb
mov
lret
ds
in
test
pop
inc
dec
sbb
icebp
mov
adc
iret
push
push
jl
lods
cmp
mov
shl
mov
xchg
adc
addl
lea
repz
mov
andb
mov
popa
add
je
shll
or
jmp
and
push
xor
aad
cltd
inc
rolb
mov
icebp
mov
and
cwtl
pop
dec
into
pop
xor
mov
lock
fisttps
es
in
stos
xchg
cmpsb
nop
fwait
push
out
cltd
push
push
aad
xor
aaa
adc
mov
loop
xor
xor
adc
jae
test
adc
cwtl
and
insl
xor
jo
insb
pmulhw
ja
mov
cmp
fucomp
ds
test
xor
rcr
push
out
mov
mov
cmp
ljmp
enter
dec
jae
in
push
insl
add
lret
or
dec
or
sbb
lods
inc
stos
sub
lods
hlt
xor
cs
xor
nop
or
pop
orb
cmc
inc
pop
leave
add
dec
lods
in
xor
andb
pop
clc
xor
and
mov
movb
inc
jbe
jb
and
inc
dec
mov
cmp
cli
scas
in
mov
inc
int
sub
xor
adc
pop
imul
xlat
jmp
adc
in
fcomps
xchg
add
int
push
iret
mov
jecxz
js
lock
ret
jmp
mov
popf
scas
lods
int3
cmc
call
cmc
adc
dec
loopne
cmp
sbb
xor
clc
call
lahf
mov
sub
push
mov
adc
mov
mov
cmp
call
push
int3
xchg
cmpsb
pop
dec
inc
sbb
imul
or
cmp
aas
das
jl
pop
mov
sub
xchg
filds
leave
sarl
sahf
std
popa
add
push
xor
push
ss
sahf
mov
ret
or
call
sbb
es
cmp
lret
les
rcr
out
sbb
and
subb
mov
mov
adc
jne
pop
arpl
enter
incb
cli
stos
jbe
pop
push
jbe
sbb
xchg
loope
inc
pop
mov
pusha
dec
push
or
mov
pop
pop
repz
add
lock
pop
movsb
lea
fnstsw
xor
sub
mov
aaa
xor
jo
sub
fucom
movlps
sub
mov
mov
mov
mov
int
dec
push
inc
insl
out
dec
mov
out
xor
out
or
enter
jne
sti
mov
push
scas
inc
and
repz
incb
int3
xchg
push
cmpsb
jnp
jae
daa
mov
dec
inc
test
cltd
mov
popa
xchg
jo
xchg
or
mov
jb
loopne
cmp
mov
pop
push
lock
dec
lcall
inc
js
push
sbb
xchg
push
push
mov
iret
jecxz
inc
fs
ss
hlt
add
xchg
pop
aad
mov
lahf
xor
mov
add
and
sahf
out
mov
jl
sbb
sub
sbb
push
cvtpi2ps
or
add
ja
inc
dec
jns
or
jl
lcall
mov
xor
and
mov
leave
pop
inc
or
pusha
mov
jecxz
push
fcmovnbe
push
jnp
mov
in
mov
in
gs
sbb
ret
lretw
jb
sub
cld
in
sbb
sbb
sub
add
lcall
sahf
push
fs
cs
add
mov
nop
iret
outsb
fistps
push
push
push
cld
pop
aaa
xor
push
adc
ds
cltd
test
jle
rolb
mov
or
into
pop
push
xchg
xor
popa
mov
cmc
jmp
jnp
lahf
sbb
bound
xor
inc
imul
dec
xchg
orl
push
dec
arpl
add
lods
sub
sub
stc
int3
inc
pusha
nop
add
mov
mov
mov
les
pop
movsl
enter
jae
mov
jbe
iret
lret
jmp
dec
push
adc
fsubr
mov
sub
push
push
loop
ss
adc
or
lcall
xchg
sti
in
mov
cli
mov
mov
mov
repz
es
adc
hlt
fbstp
shr
mov
xlat
add
ficompl
push
push
into
mov
addl
test
stos
adc
call
daa
add
out
popf
aad
test
mov
mov
dec
push
jge
dec
ficoms
add
cmp
pop
adc
mov
insb
mov
cmpsl
cmp
sub
add
cwtl
xchg
push
push
popa
mov
mov
pop
data16
add
test
mov
scas
out
add
sarb
mov
lods
lea
jp
fildl
dec
ja
cltd
mov
cmpl
les
inc
nop
sbb
jnp
push
nop
mov
divb
dec
jae
sub
jge
ss
inc
enter
inc
rcrl
out
cs
cmp
mov
mov
mov
cmc
sub
in
js
ror
mov
test
jle
push
push
xchg
push
cmpl
mov
cmp
stos
adcl
jbe
pop
fnstsw
cmp
add
push
out
lahf
mov
cs
sub
dec
movsl
dec
es
in
test
adc
rcr
add
lea
ds
pop
sub
in
outsl
or
push
pop
xchg
aad
ds
test
push
fucomp
mov
arpl
insb
and
outsb
out
bnd
push
fistpll
aad
arpl
xor
mov
decb
std
dec
repnz
gs
mov
cli
in
jno
in
adc
adc
loop
push
mov
repnz
inc
inc
movsl
xlat
xor
scas
lea
les
sbb
and
xor
push
push
xor
imul
sahf
sbbb
add
or
xlat
cli
sbb
cmp
lock
in
gs
adc
cs
cmc
ljmp
pop
jp
ret
mov
jo
push
dec
push
inc
call
fisubl
inc
inc
in
cmp
test
or
mov
insl
movsl
outsb
pop
faddp
jmp
mul
mov
push
jle
cld
inc
test
xchg
mov
pusha
sbb
pop
jns
adc
int3
sub
pop
jb
or
dec
pop
push
cltd
mov
jg
add
lahf
sub
fstl
xor
xchg
repnz
fstpt
test
repz
jmp
subl
movsl
sahf
add
pop
and
sub
into
test
aam
jbe
inc
jge
adc
ja
dec
ret
sbb
out
cmp
lods
fisubl
and
or
lock
sub
sub
test
jle
sub
adc
roll
fsubl
dec
pop
dec
out
cwtl
loopne
mov
hlt
inc
test
int
in
xor
fisubrs
fwait
sbb
pop
push
dec
ss
addr16
scas
outsb
or
repz
and
cmpsl
scas
jbe
inc
int3
test
xor
jmp
nop
push
ljmp
shlb
push
mov
xchg
sbb
nop
mov
not
inc
popf
idivl
mov
mov
and
mov
cmpsb
mov
mov
pusha
sbb
testb
xchg
sub
jae
sub
lds
popf
sub
jle
mov
dec
adc
lods
fcmove
add
and
mov
inc
dec
stc
xor
cmpsl
pop
fcomi
cmp
lahf
mov
and
and
sbb
jb
xor
repnz
rorl
push
adc
ljmp
xchg
jp
ja
jecxz
sub
mov
push
pop
lcall
out
loope
dec
inc
and
sahf
mov
mov
scas
sbb
gs
loop
sbb
or
push
mov
sarl
push
add
mov
xchg
xlat
xchg
add
inc
cs
in
in
ss
jo
dec
jo
xor
pusha
lret
and
xor
pop
jno
sbb
pushf
jmp
sub
lret
enter
leave
inc
cmp
mov
mov
lds
test
daa
mov
jecxz
mov
push
cmovg
and
dec
sub
add
mov
add
lahf
inc
xchg
push
pop
jno
out
sbb
pop
xor
cmp
mov
arpl
adc
mov
jmp
jmp
xor
cltd
xor
jle
js
or
sub
cmpsl
mov
push
lahf
stos
popf
fimull
loope
mov
xorb
xlat
mov
sbb
add
nop
dec
pop
lret
add
inc
nop
mov
aad
aad
bound
cltd
jne
mov
outsl
dec
outsb
mov
push
ret
pop
mov
fldcw
sub
push
xchg
js
imul
lea
stc
mov
loope
lahf
mov
inc
mov
ret
xor
sub
popa
sahf
mov
stos
roll
sahf
arpl
stos
fdivrs
insl
sub
addr16
in
mov
stos
adc
mov
lock
xchg
cmp
imul
or
out
bound
adc
dec
pop
push
stos
mov
add
dec
xchg
adc
or
add
mov
add
mov
scas
lds
test
jge
pop
cli
sarl
rcll
pushl
icebp
scas
inc
lret
sti
inc
data16
mov
fs
lea
push
test
mov
lcall
jb
pop
inc
divb
push
xchg
test
imul
stos
addr16
push
andl
xchg
mov
mov
jle
pop
and
pop
fidivl
test
fstps
insb
add
lock
dec
insb
and
insl
pop
or
xchg
arpl
sbb
xchg
jbe
leave
sti
xchg
cmc
pushf
loopne
cmp
inc
or
in
das
rcrb
imul
adc
ret
es
addr16
jbe
pop
fnstcw
les
test
or
mov
sbb
lret
mov
fwait
sbb
dec
lds
xor
jbe
adc
jecxz
cmp
mov
ret
sbb
cmc
sub
cmp
cmp
jns
mov
inc
mov
and
repz
jo
push
or
push
lods
xchg
test
jl
cmp
xor
into
sub
xor
sub
jno
fnsetpm(287
xchg
aas
std
inc
dec
dec
sub
shr
shr
sbb
jmp
xchg
arpl
bound
adc
pushf
inc
aad
cmpsb
xchg
sbb
xchg
dec
clc
fcompl
jne
and
test
mov
sub
pop
sahf
mov
shlb
and
xor
xor
mov
add
xchg
sbb
fcmovne
insl
inc
mov
stos
test
std
sbb
rcl
fadds
lods
pop
adc
mov
lcall
in
out
add
fwait
popa
push
add
mov
loop
pushf
jo
dec
mov
inc
ljmp
out
mov
in
mov
jecxz
inc
in
pop
sub
test
sbb
xchg
mov
jo
pop
fs
mov
nop
out
out
push
or
cwtl
ljmp
bound
shrl
cli
loop
ljmp
lret
add
fnsave
mov
mov
jl
and
push
imul
lahf
add
aad
ljmp
sub
mov
jge
adc
movsl
cmp
rcrb
pushl
out
rol
jne
pop
popf
lds
xchg
and
mov
rcpps
sub
add
test
js
mov
ss
dec
div
xor
mov
leave
and
xchg
cmpsb
sbb
fs
dec
jecxz
out
pop
pop
out
dec
leave
jb
test
mov
push
arpl
xchg
pop
mov
sti
jns
sbb
in
pop
in
mov
inc
hlt
test
mov
sub
xchg
and
nop
pop
sub
hlt
jp
imul
and
xor
popl
mov
fcompl
stos
push
mov
cwtl
pop
cltd
xchg
scas
and
xchg
cmpsb
sub
out
in
pop
pusha
mov
hlt
push
icebp
arpl
pop
ljmp
imul
cmp
lcall
out
nop
shr
lods
inc
mov
shll
in
push
es
and
les
cmp
mov
dec
les
lds
stc
inc
dec
dec
add
out
lcall
adc
mov
lcall
mov
add
fs
push
mov
xchg
mov
sbb
test
sub
cmp
pop
int
adc
out
mov
mov
mov
fistpl
and
fadd
mov
add
sti
sub
insb
cli
fsubrl
faddp
xchg
sarb
fxch
stos
iret
jae
call
clc
mov
subl
xor
int
cmp
jae
inc
xor
pop
aas
fsubs
mov
outsb
push
lret
shrl
and
rcr
sub
mov
push
mov
mov
fwait
shrb
je
divb
jge
push
or
xchg
scas
fdivrl
enter
xchg
mov
xchg
les
shll
outsl
push
mov
cld
nop
pop
push
mov
cmpsl
push
xor
sbb
fcoml
mov
or
mov
inc
popa
or
cmp
dec
gs
mov
jl
xchg
insb
inc
cmp
arpl
pop
mulb
test
out
pop
mov
push
les
cmp
mov
imulb
call
lods
inc
xor
add
mov
imul
sti
lret
dec
pop
mov
cmp
enter
ds
loope
pop
lds
mov
push
add
hlt
bnd
andb
or
movsb
outsl
fs
xor
in
pop
ss
add
ljmp
jmp
movsl
hlt
out
jno
or
dec
pop
cli
xchg
sub
xor
xchg
mov
dec
jbe
jne
out
imul
loopne
andl
lods
mov
mov
lods
mov
stos
or
sbb
fildll
lret
and
sbb
cmpl
sub
push
fmuls
int
aam
push
inc
ds
repnz
addr16
popw
pop
cmp
add
xorl
push
int
test
dec
aad
shrb
xor
push
jge
xchg
cmp
jle
xchg
and
dec
jne
scas
add
nop
jo
bound
scas
mov
rolb
shl
xchg
add
xchg
cmp
push
jae
andb
sub
dec
mov
cmp
aad
ficompl
pop
aad
mov
loopne
aas
mov
ds
in
lds
sub
imul
push
push
clc
aas
dec
push
cmp
push
jmp
xor
or
es
pop
lcall
loope
mov
outsl
xchg
leave
mull
fstpl
xchg
pop
mov
ret
mov
pushf
adc
pusha
std
jg
or
push
mov
inc
xchg
rol
fldcw
ljmp
xlat
mov
mov
adc
xchg
mov
gs
xchg
mov
cltd
cli
mov
cwtl
cmp
loopne
mov
es
mov
push
cmc
inc
ja
in
sub
xchg
shrl
inc
int3
aaa
aas
push
mov
xchg
bound
jbe
jnp
mov
popa
push
sub
out
hlt
ljmp
pusha
ss
inc
scas
lea
cld
jbe
sbb
movsb
sti
jnp
pop
or
mov
add
test
sbb
xchg
ja
adc
daa
jno
lods
sbb
bound
mov
xchg
dec
aad
mov
adcl
dec
push
push
les
xor
stos
xchg
jne
je
in
es
pop
popf
xor
adc
cmp
jg
push
push
movsl
popl
adc
lret
out
sub
icebp
dec
aas
pop
fistps
xchg
jb
or
pop
xor
insb
dec
outsl
cli
rcrb
inc
stos
mov
in
call
sahf
pop
jl
loopne
mov
sub
mov
mov
add
out
data16
push
test
int3
cmp
test
inc
and
cli
mov
mov
orb
out
push
dec
add
fdivrl
xchg
sub
clc
xchg
cmp
jbe
shl
repz
jbe
cmc
mov
repnz
xchg
jecxz
mov
push
push
and
out
mov
ljmp
addb
adc
mov
mov
pop
pop
fs
fimuls
jmp
sbb
mov
ret
xlat
stc
loope
dec
inc
call
leave
or
sti
repnz
pop
cmp
test
inc
adc
inc
pop
loop
loope
xor
jno
dec
arpl
mov
loop
shrb
mov
arpl
out
sub
jge
xor
xor
pop
sub
fdivp
jbe
push
sti
sub
dec
push
xchg
jle
rcrl
add
xchg
aas
shlb
repnz
stos
mov
dec
and
dec
pop
xor
push
push
mov
xor
aas
sbb
test
out
push
sbb
ret
flds
pop
cmp
stos
xchg
stc
mov
add
push
notb
bound
outsb
adc
mov
in
fstpl
inc
add
aam
push
pop
pusha
test
jnp
pusha
rcrl
jno
lret
loop
mov
inc
and
mov
or
ss
les
mov
adc
or
mov
inc
loop
adc
push
sti
sub
push
adc
push
mov
jp
nop
jp
jmp
jno
push
out
mov
std
jl
push
jo
dec
mov
repz
inc
cmpsl
add
sub
sub
pop
dec
jle
cld
mov
out
mov
sbb
dec
subl
mov
test
cmc
repnz
pop
sar
loope
cltd
xor
and
sarb
ficoml
out
pop
cmpsl
xor
leave
push
loopne
imul
pop
test
in
add
or
xor
push
pop
imul
push
cmpsl
push
aaa
fiadds
cld
xchg
outsb
stos
fidivl
mov
stos
lahf
or
cli
gs
int
sbb
stos
fnstcw
psrad
gs
outsl
jmp
insb
dec
sub
sub
pop
inc
aaa
outsb
jp
repz
add
or
push
inc
pusha
dec
test
pop
stos
jp
mov
pop
or
and
or
icebp
and
insb
xlat
scas
cltd
jge
dec
cmpsl
jmp
loop
adc
or
jb
in
inc
push
rclb
dec
lcall
xchg
fcmovnu
and
sub
ds
jecxz
mov
or
ja
dec
pusha
fiaddl
cld
lcall
cli
mov
mov
daa
mov
mov
sarl
mov
jno
in
add
loop
in
hlt
mov
mov
lods
pop
scas
call
push
std
adc
lods
jmp
push
enter
leave
rorl
pop
adc
divl
and
iret
lahf
mov
dec
push
and
in
out
sub
dec
cmpsb
mov
stos
pop
dec
lahf
fistpl
lods
rcr
rolb
or
jl
push
adc
test
sbb
call
xchg
xchg
mov
push
pop
mov
sbb
das
mov
ss
repz
stos
das
movb
insb
xor
jg
popa
adc
mov
lea
rorl
sub
xor
mov
or
in
popl
rclb
int
popa
xchg
pop
sbb
fimuls
ret
lods
mov
jnp
jnp
andb
mov
jo
push
js
pop
and
aaa
insb
inc
icebp
pop
rolb
idivb
push
mov
les
mov
sub
push
sub
jecxz
mov
cmp
push
jno
js
and
sub
push
or
mov
xchg
lea
pop
xchg
in
icebp
mov
int
ret
mov
add
les
lods
outsb
sbb
fdiv
sti
insl
xor
sbb
mov
inc
ds
mov
jns
jl
lods
dec
mov
or
das
sbb
push
out
xor
add
mov
data16
mov
mov
and
ja
cmp
fbstp
xchg
das
mov
sub
sbb
inc
or
repnz
pop
pop
mov
sbb
xlat
mov
pop
sub
jne
call
mov
cltd
jo
jmp
jnp
sub
test
jp
ja
sub
xchg
xchg
mov
mov
lock
ss
loop
inc
dec
cmp
cwtl
out
jno
aas
push
adc
loop
push
pop
inc
aam
mov
mov
adc
in
or
dec
loopne
sbb
sub
inc
icebp
mov
loop
mov
jecxz
divl
adc
inc
mov
inc
sbb
lds
ret
mov
cs
and
mov
outsb
jecxz
inc
fdivs
inc
mov
push
or
js
and
inc
xchg
mov
ss
pop
imul
mov
ret
inc
or
mov
clc
mov
mov
inc
and
in
test
cs
fs
pop
jnp
cmp
push
or
shrb
test
xchg
or
jle
sub
pop
mov
cmpsl
sbb
xor
inc
mov
xorl
push
dec
push
lock
lcall
je
adc
mov
or
or
mov
incl
lods
jmp
lea
xchg
dec
idivl
imul
jae
jmp
push
xor
pop
mov
es
insb
in
rorl
or
dec
add
es
movsb
cs
mov
add
xchg
out
fsts
pusha
sbb
xchg
stc
inc
sahf
shlb
mov
icebp
popa
mov
and
lcall
dec
ljmp
mov
xor
out
pop
ret
pop
inc
loopne
push
sbb
cmpsl
daa
loop
xchg
jae
clc
enter
jns
push
push
test
jmp
jnp
push
sbb
and
movsl
jne
mov
cmc
xor
test
sbb
mov
and
xor
inc
push
xchg
sub
fstp
xchg
inc
lods
shll
mov
cmc
cmp
add
lret
ljmp
jl
push
adc
ljmp
mov
fisttpll
gs
lret
pop
enter
movsb
dec
lret
adc
xchg
mov
sbbb
test
pop
pop
lcall
push
push
shrl
fs
mov
jae
loopne
fstpl
or
cmp
push
jb
loop
mov
inc
sbb
pause
mov
inc
icebp
inc
inc
mov
imul
leave
mov
lds
je
adc
mov
ds
dec
daa
mov
cmc
cmp
cmp
call
sbb
sub
icebp
cmp
fbstp
ss
cmp
enter
enter
je
aad
xchg
cs
sub
xor
push
and
mov
dec
cld
cmpsb
mov
mov
lcall
inc
in
sub
xchg
test
mov
mov
and
or
mov
fwait
mov
mov
stos
and
stos
inc
das
mov
aad
hlt
ljmp
std
lret
in
movsl
fdivrp
cmp
mov
mov
mov
xorl
cmp
adcb
sub
sbb
dec
xchg
lods
mov
add
mov
jp
inc
mov
repz
xor
fdivrp
xor
jle
mov
xchg
jno
loope
fwait
xor
fistps
mov
jecxz
push
hlt
rclb
test
test
add
mov
dec
ret
mov
xchg
dec
xor
pop
hlt
adc
ja
xor
sti
add
inc
push
cmp
fsubl
in
stos
mov
push
inc
lret
fcompl
xor
mov
mov
xchg
mov
mov
test
cmpsl
dec
mov
jo
mov
jne
or
mov
fwait
scas
mov
fs
adc
adcb
cmp
mov
lcall
add
stos
adcb
loop
ret
xchg
fcmovnb
fsubp
enter
mov
jle
dec
dec
sub
lahf
shrl
lret
push
mov
push
xor
push
movsb
adc
cmpsb
inc
mov
pop
dec
push
call
or
mov
repnz
cmp
mov
fs
cli
out
lret
fxch
cmp
sub
stos
mov
jno
sub
into
cwtl
mov
add
into
or
xchg
sahf
mov
push
icebp
jle
mov
sbb
push
and
dec
dec
imul
jb
cwtl
pop
pop
add
pop
stos
jno
sub
test
adc
push
nop
in
into
inc
mov
push
test
fisttps
mov
xchg
and
push
inc
in
pushl
push
bound
xor
das
shl
mov
cmp
icebp
xor
fcoml
dec
test
jb
adc
jb
in
push
push
pop
inc
jb
inc
out
cmp
jle
in
push
icebp
insb
sub
add
hlt
gs
lea
mov
adc
enter
addr16
jae
push
je
jecxz
insb
mov
imul
hlt
cld
cmp
pop
aas
dec
cmpsw
sbb
sbb
leave
jbe
jl
out
test
clc
mov
dec
rorl
std
mov
xor
fdivrl
jmp
and
push
hlt
les
cmpsl
sub
rcr
sbb
fisubs
sub
xchg
dec
sub
xchg
jmp
shll
push
inc
add
adc
outsl
dec
adc
shl
in
lea
int3
xchg
stos
lods
sub
clc
adc
add
pop
xor
mov
add
or
inc
lods
inc
push
fiaddl
fidivl
xchg
adc
jle
add
jns
fsts
cwtl
pop
push
ss
sub
stos
test
shlb
mov
push
js
adc
push
mov
movsl
mov
nop
out
and
mov
or
sub
incl
mov
mov
push
gs
popf
movsl
cmp
mov
shrb
jb
pop
push
mov
xchg
es
dec
pop
ror
repnz
xor
jecxz
xchg
mov
xor
inc
sbb
or
dec
and
push
clc
fildll
mov
sbb
mov
xlat
in
push
jo
or
std
pop
jg
sbb
jg
js
rep
and
outsl
xchg
push
mov
cli
jmp
cmpsl
gs
cmp
and
cmp
icebp
loope
mov
mov
loopne
out
pop
xor
adc
in
flds
mov
mov
jno
push
push
adc
ret
outsl
and
cltd
mov
fcoml
out
jbe
push
push
js
or
jecxz
ja
pop
ret
loop
xchg
add
adc
pop
or
xchg
jns
into
mov
pop
sbb
jne
jecxz
hlt
lret
loop
imul
jmp
inc
add
fisttps
push
mov
sub
cmpsl
lcall
xchg
cltd
scas
sbb
popf
xor
rcr
lahf
loop
icebp
sub
incl
mov
jg
sbb
mov
add
inc
dec
inc
jnp
xchg
sahf
xor
bound
xchg
mov
xor
mov
inc
shrb
mov
push
pop
add
jae
in
sub
xchg
pop
gs
cld
rorb
and
pop
ret
xchg
outsl
ret
mov
icebp
data16
jmp
inc
fistps
mov
pop
push
xchg
sub
cmp
sub
iret
xlat
mov
scas
xchg
adc
lock
pop
inc
dec
fsubs
negl
xor
cmp
das
fnsave
xchg
jnp
cwtl
sub
neg
pop
fdivr
les
cwtl
cli
aam
push
adcl
loope
xchg
push
inc
jmp
jo
in
loope
stos
enter
cli
enter
stos
aas
in
jne
mov
push
jns
pop
push
inc
sti
xor
xor
and
dec
daa
cld
jmp
mov
insb
inc
imul
jg
xchg
pop
dec
push
mov
inc
test
cltd
fs
in
jl
cmp
adc
mov
outsb
sar
fdivl
xchg
push
and
das
push
xor
fs
testb
jnp
bound
or
leave
jmp
rol
outsb
sahf
daa
dec
pushf
es
sbbb
mov
jnp
rcr
mov
jle
into
sub
daa
add
hlt
int3
leave
mov
fsubrl
or
jne
cmp
lea
sahf
sub
stc
outsl
aam
mov
stc
xchg
in
pop
adc
dec
xchg
cmc
cmpsb
inc
lds
add
bound
mov
or
jl
add
je
pop
xlat
ror
mov
or
dec
test
xor
cmc
orb
fisttps
mov
lods
ret
inc
mov
push
aas
mov
in
or
pop
mov
and
pop
shll
cmp
lock
scas
movsl
test
lret
mov
lds
fiaddl
fdivl
push
out
dec
insb
mov
xchg
lods
sbb
push
iret
push
cmc
push
xchg
dec
mov
mov
push
cltd
gs
cmp
xchg
pop
call
push
cmc
fmuls
fptan
cmp
roll
push
jmp
int
not
mov
stos
push
push
aaa
mov
leave
add
mov
rcrb
notl
repz
negb
and
ss
mov
cwtl
adc
cmpsl
mov
cmp
push
arpl
vfrczss
inc
cmp
jbe
loopne
inc
in
pop
mov
add
and
mov
imul
das
mov
jecxz
mov
xchg
push
and
add
rcr
enter
lea
mov
xchg
fwait
or
adc
add
repnz
xor
mov
int3
push
mov
mov
xchg
lahf
jp
arpl
sub
mov
mov
dec
mov
les
cltd
loop
add
inc
pop
mov
in
push
xchg
and
xchg
sub
subb
scas
inc
bound
stos
push
test
cltd
sarb
jns
movsl
int
insl
das
mov
adc
add
nop
jmp
stc
cli
inc
mov
cmp
ljmp
and
lret
sub
mov
test
xor
adc
int3
adc
pop
dec
cltd
inc
mov
das
mov
push
mov
jb,pn
jo
mov
mov
es
out
mov
mov
lock
pop
xchg
cltd
xor
push
in
test
sbb
add
pusha
das
jne
test
mov
pop
dec
jg
mov
adc
add
sub
push
xor
imul
sbb
mov
lret
or
or
sbb
in
dec
xor
outsl
lds
in
movl
imul
popa
or
sahf
pop
fistpll
cmp
lea
lods
loope
sbb
mov
test
imul
pop
test
dec
rcrl
dec
stos
mov
sbb
dec
sub
rolb
and
mov
loop
xor
and
das
outsb
xchg
int
int
xorb
loopne
sbb
xor
or
mov
add
jp
aad
sub
jo
jl
loopne
sbb
fs
mov
mov
ja
pop
shlb
ret
mov
comiss
movsl
push
fcompp
imul
stos
test
push
imul
push
add
jg
sub
mov
mov
test
lahf
pusha
sbb
dec
mov
add
mov
mov
push
clc
adc
sqrtps
mov
nop
shrl
mov
jnp
shrb
hlt
frstor
pop
inc
rcrb
iret
ret
or
dec
aas
test
popf
gs
or
stos
pop
sbb
lea
iret
dec
or
idivb
inc
fs
xchg
dec
aam
cmc
lea
jb
xchg
xchg
dec
inc
js
inc
je
cmp
pop
jb
out
inc
addr16
mov
mov
cmp
xor
xchg
xchg
adcl
mov
out
xchg
inc
jge
mov
lock
sub
outsl
test
cmp
dec
aaa
sub
out
ret
lret
ds
push
and
repnz
aas
out
adc
loop
into
push
mov
nop
outsl
outsl
sub
mov
xchg
dec
or
shlb
sub
ret
dec
aam
cmp
or
stos
ja
sub
ret
jecxz
mov
dec
rorl
or
xor
lahf
sbb
outsl
inc
jmp
cli
or
jg
mov
arpl
dec
jno
stc
leave
inc
movsl
and
xchg
pop
aaa
icebp
mov
ja
gs
aaa
mov
xor
popf
push
stc
test
xlat
mov
fwait
cmp
ret
xor
jbe
or
movl
fwait
int
iret
push
push
or
or
sub
ret
sub
or
mov
das
fldl
mov
dec
dec
sbb
mov
mov
out
adc
push
sarl
dec
or
out
aad
pop
xchg
xchg
push
xlat
mov
adc
cmp
mov
mov
fidivrl
out
add
repnz
rorb
stc
mov
inc
xor
iret
dec
shl
add
lock
sbb
push
stc
dec
inc
aaa
test
jbe
xor
mov
xchg
popf
les
dec
pop
fcoml
jp
jne
lcall
mov
popl
sarl
cmp
stos
mov
je
push
mov
cmp
add
xchg
mov
xor
sete
aam
mov
stos
mov
lods
push
rcr
dec
jno
dec
jge
sbb
add
je
repz
nop
sub
cmp
enter
xchg
mov
jecxz
mov
faddl
mov
jg
scas
mov
scas
jo
ljmp
sbb
nop
rcrb
test
popa
andb
rclb
fildll
inc
xchg
jno
je
push
fstl
cmpb
sarl
popa
pop
dec
mov
push
xor
jae
and
mov
std
jne
add
mov
jmp
aaa
rcrb
test
xchg
add
jo
mov
lret
inc
ret
clc
nop
idivl
pusha
mov
sbbb
jmp
xor
pop
mov
inc
sbb
push
or
adc
pop
mov
xchg
jbe
stos
shlb
or
xchg
icebp
sbb
nop
insb
jns
and
jl
sub
std
push
loopne
ds
lock
mov
sub
sub
call
and
das
and
mov
sub
cltd
daa
inc
data16
imul
pop
mov
dec
les
jl
fcoms
arpl
stos
xchg
fistps
mov
mov
dec
sub
fisttpll
xlat
mov
push
enter
test
nop
xor
fbstp
dec
divps
enter
cmp
dec
xchg
xchg
enter
cmpsb
test
loop
loope
and
iret
push
sub
inc
out
pop
inc
daa
mov
xchg
or
and
mov
jnp
mov
imul
cmp
inc
jbe
inc
sti
push
das
lods
inc
or
or
sbb
mov
clc
mov
imul
push
mov
aaa
lea
cmp
fadds
in
pusha
and
mov
ss
jmp
jbe
adc
idiv
jb
lods
cmc
jp
lock
lds
je
and
mov
jo
cwtl
aad
arpl
popf
rcll
ds
mov
dec
outsl
outsl
dec
int
jle
lret
maskmovq
negl
test
dec
adc
dec
inc
sub
jp
mov
out
mul
pop
lds
mov
push
fbstp
or
xchg
inc
mov
mov
mov
cmp
pop
negb
fsts
sbb
lret
dec
push
xor
adc
dec
xchg
sbb
roll
fnstsw
cmp
sbb
fistpll
pop
leave
push
ret
jle
fadds
jae
arpl
in
mov
push
stc
into
mov
mov
adc
movsb
jg
xor
adc
enter
xchg
js
aaa
or
dec
fbld
cld
lds
jp
ja
fwait
adc
lds
outsb
jge
outsb
in
xor
pop
jg
xchg
fcom
mov
insb
ljmp
int3
push
mov
lods
xchg
mov
push
out
lahf
mov
and
std
cmp
fcomps
cmp
imul
cs
vpavgb
mov
out
insb
add
cmp
sti
push
call
add
jne
xor
jecxz
hlt
ret
jno
and
rorb
jecxz
pop
add
jmp
fdivl
dec
mov
mov
mov
stos
jno
rcll
jmp
mov
shr
stos
rolb
jno
mov
sahf
and
clc
scas
push
test
lods
es
nop
hlt
mov
mov
jae
loop
and
out
jbe
mov
insl
iret
pop
shll
jno
jno
inc
xchg
push
sbb
test
and
pop
and
push
gs
cmp
inc
add
xchg
jnp
fsubrl
dec
loop
jg
and
dec
inc
or
in
ss
jns
fbstp
mov
cmc
lret
jp
call
in
mov
sub
xor
out
pushf
xchg
into
mov
aam
pushf
add
shr
adc
or
xorb
out
loope
out
sub
jl
cld
fdiv
inc
das
inc
mov
pop
mov
xor
mov
in
ja
adc
adc
cmp
mov
mov
mov
mov
push
fisttps
mov
movsl
lahf
dec
fsubp
jmp
sub
mov
cmpsl
outsb
sar
dec
insl
clc
adc
push
cmp
cld
stc
ss
sbb
out
int
std
mov
add
mov
das
add
xor
aaa
pushf
fs
jmp
add
outsl
mov
pop
pushf
stos
jbe
xchg
stos
in
cltd
mov
dec
adc
adc
add
fmul
adc
adcb
addb
fimull
cs
dec
fdivl
pop
insl
cmp
shlb
jae
dec
loopne
cmp
cwtl
sti
mov
mov
loope
lret
js
stc
leave
lods
rcrl
mov
insb
loop
hlt
mov
imul
out
repz
cli
pop
out
jecxz
std
fisubs
popa
cmp
outsb
sub
mov
cmp
cmc
mov
xlat
mov
fwait
pop
movsb
jge
mov
mov
call
mov
mov
insb
js
andl
push
or
jbe
mov
pop
mov
adc
addr16
or
outsl
sbb
cli
aam
jle
call
push
mov
aad
call
mov
dec
cmp
xchg
sar
xchg
adc
mov
adc
mov
mov
loop
mov
das
fs
cld
mov
test
mov
xchg
or
mov
fsubl
lds
xor
es
mov
mov
out
out
insb
mull
xchg
and
cmp
pop
das
dec
lods
sarb
call
adc
sub
ljmp
lds
filds
pushf
cmpsb
insb
dec
add
insb
rcrb
cmpsb
gs
push
cli
xor
mul
pop
and
stos
mov
imul
sub
fstl
int3
or
movsb
xchg
mov
in
sahf
xor
js
ret
jg
addl
and
std
dec
lock
nop
cmp
fstpl
test
test
test
xor
or
ljmp
fimuls
loopne
loop
pop
jo
mov
xchg
fs
ljmp
iret
mov
mov
int3
sub
test
dec
lret
dec
adc
fdivrs
or
shlb
cs
sbb
pop
popl
sarb
push
bound
lds
dec
push
mov
ja
mull
divl
mov
in
cmpsl
frstor
mov
jno
mov
dec
mov
pushf
shrb
pop
dec
in
xor
imul
add
popa
cmp
stos
int
xchg
sbb
test
dec
xchg
repnz
scas
lahf
mov
or
xor
mov
jge
mov
por
gs
aaa
dec
sub
dec
aas
das
dec
push
lds
xchg
pop
fcoml
dec
insl
rcrl
rorb
sbb
jmp
xor
fwait
inc
xchg
or
aas
andb
pop
mov
stos
inc
jecxz
enter
dec
dec
push
adc
xchg
adc
aas
fwait
push
xchg
or
mov
cmp
jae
add
xor
das
aam
jb
jmp
loop
hlt
repz
jecxz
sti
fstps
inc
adc
xchg
mov
jnp
cs
jmp
stos
and
cmp
shrl
xchg
xchg
push
mov
sub
mov
sub
sub
in
inc
pop
dec
sub
cmp
repz
lahf
cld
jnp
rorl
fsub
stos
leave
add
pop
sub
mov
popa
js
sbb
repz
mov
inc
or
mov
lcall
out
cwtl
jecxz
sub
push
inc
movsl
lcall
gs
mov
sbb
dec
andl
sarb
popa
add
cmpsl
ficomps
cmp
ss
test
bound
pop
push
sub
jns
pop
xlat
dec
test
ret
sub
dec
out
mov
xchg
adc
adc
mov
cli
inc
pop
cli
pushf
fcomps
cld
lcall
imul
and
xlat
or
sub
mov
push
in
push
sbb
inc
fsts
aaa
loope
and
push
sbb
xor
xchg
mov
sbb
jb
sub
call
xor
mov
jno
negl
pop
sbb
sub
and
fisttpl
adc
and
sti
push
notl
jno
mov
jbe
xor
cmp
cmc
or
jns
push
sbb
adc
pusha
xchg
enter
insb
loopne
pop
inc
rcr
xlat
into
push
orl
add
sub
adc
loop
in
cmp
cmp
and
out
push
xchg
in
mov
dec
xchg
fstl
rcll
movsl
mov
push
xchg
pop
xlat
iret
cmp
cmp
and
loop
ja
xor
add
pop
out
fsubp
xor
lods
lahf
adc
sbb
ja
adc
jne
xor
jno
mov
xor
jecxz
pusha
xchg
aaa
jo
stos
push
emms
imul
xlat
outsl
xor
icebp
pushf
or
lret
or
cmp
mov
shll
lret
leave
sahf
or
loop
push
arpl
fcomps
xchg
lcall
mov
cmp
mov
add
les
push
ss
mov
jge
mov
or
or
xchg
sbb
aad
shll
mov
xchg
cmp
sub
xchg
xchg
mov
inc
push
data16
cmp
mov
out
mov
pop
icebp
add
pop
pushl
scas
or
xor
cwtl
sub
sub
mov
test
fsubs
test
fcmovnbe
xchg
pop
je
pop
nop
add
xor
cltd
fwait
cmpsl
js
lret
jmp
cmc
call
inc
inc
add
mov
mov
roll
out
repz
fcmovu
dec
hlt
enter
mov
lea
push
outsb
incl
mov
inc
jecxz
mov
jl
pop
or
sub
sbb
fbstp
cmp
xchg
div
cmp
or
mov
jle
pop
loopne
imul
out
out
rcll
notb
mov
add
loope
push
popa
xchg
fldenv
adc
mov
dec
jb
pop
notb
aad
daa
loope
and
lcall
mov
imul
in
xchg
cmc
jne
ficomps
iret
push
mov
fistpll
cwtd
mov
jns
jge
push
xor
xor
stc
test
mov
mov
adc
andb
and
jmp
int
inc
shlb
xor
sahf
and
fsub
pop
loopne
jno
cmc
inc
cltd
pop
sahf
sbb
data16
xchg
cmc
or
adc
out
mov
or
push
outsb
daa
push
les
out
lret
and
jb
scas
add
fsincos
xor
cmpsl
inc
inc
icebp
inc
sbb
or
mov
scas
xor
aaa
addb
prefetcht0
js
sub
int3
pop
int3
pop
push
push
jge
enter
and
sahf
jmp
adc
cvtdq2ps
adc
xlat
imul
adc
dec
mov
pop
ret
cmp
pop
scas
push
fcmovu
pop
js
xchg
out
dec
in
dec
xchg
cs
idiv
push
movb
push
lock
inc
loopne
sub
jg
or
xchg
pop
outsl
popa
and
addr16
addl
push
push
xor
lret
sub
pushf
lahf
arpl
scas
sbb
dec
jge
cmp
orb
jle
pop
out
sub
add
daa
mov
add
sbb
mov
dec
sbb
dec
cld
or
pop
fmuls
inc
lock
mov
mov
push
js
scas
inc
sbb
xchg
jmp
sbb
test
inc
lahf
xchg
lds
pop
scas
push
and
add
pop
xor
push
sbb
add
jb
sub
fndisi(8087
and
push
pushf
in
mov
movsl
lds
and
xchg
test
and
in
mov
dec
es
enter
pop
push
or
xor
push
add
lret
int3
cs
fcmovbe
inc
loope
or
test
adc
fsub
jns
push
xchg
in
test
lcall
lock
cmpsl
sbb
cltd
mov
pop
inc
nop
js
mov
adc
mov
lods
es
xlat
test
mov
push
and
test
mov
ljmp
xchg
push
add
sbb
cmp
rcl
pop
inc
and
outsb
and
sbb
cli
gs
jb
je
or
push
lret
ffree
insb
sub
add
into
je
dec
push
mov
aas
xchg
mov
sub
aam
pop
mov
shlb
adcl
sub
call
movsb
stos
dec
leave
sarl
jp
scas
xor
mov
in
jno
inc
push
mov
in
add
imul
sbbl
rorb
push
outsl
cmp
imulb
out
lds
fsubs
mov
outsl
add
cmp
xor
sub
movsb
cmpsl
push
mov
rorb
sub
bound
fidivrs
xchg
sbb
data16
andb
xor
js
popf
dec
mov
mov
pop
loope
inc
push
inc
test
in
adc
inc
adc
fisubrl
pop
adc
cmp
pop
push
orl
jnp
add
xchg
or
or
out
sub
push
inc
sbb
push
mov
test
movsb
mov
push
stc
xchg
mov
jne
sbb
popa
negb
jbe
mov
outsb
sbbl
cmp
hlt
repnz
hlt
and
movlps
cltd
cltd
push
xchg
aas
ret
sub
push
pop
aaa
sbb
ret
lret
clc
call
jle
jo
stc
jne
jge
jno
mov
int
clc
ficoml
pop
aad
lret
dec
pop
les
mov
cmp
sbb
mov
cmc
cmp
aam
or
adc
cmc
outsb
int3
pop
call
jp
pushf
outsl
fnstsw
or
xchg
pop
xchg
jbe
fidivrs
aas
stos
or
jb
out
sub
dec
movsb
push
scas
ret
mov
shll
jns
ja
or
fistl
jne
cmpsl
mov
jmp
rcll
lds
or
cmp
jle
stc
jo
add
inc
and
mov
or
js
cltd
inc
out
mov
dec
sbb
add
sub
cmp
adc
pushf
pop
loop
or
inc
jp
adc
sbb
add
push
pop
iret
add
andb
adc
jl
test
in
xor
ret
xor
cli
sub
mov
and
jno
xchg
push
mov
shll
lahf
dec
dec
xor
jnp
and
out
pusha
pop
imul
adc
xor
ss
lods
mov
iret
push
cld
jmp
mov
cmc
jbe
push
mov
outsl
sub
fsubs
loopne
push
scas
pop
push
jecxz
jnp
add
xchg
cmpsb
and
pusha
lcall
inc
lds
loope
push
ja
sbb
sub
fst
mov
subl
aam
xor
cmp
inc
mov
adc
js
xchg
call
inc
mov
sbb
loopne
xchg
mov
scas
cmp
mov
insl
pop
sub
mov
xor
jbe
loop
sbb
cmpxchg
lods
dec
stc
aaa
int
das
ret
mov
pop
scas
inc
lahf
test
test
clc
mov
xor
data16
mov
jno
inc
shl
cmp
jge
xchg
dec
cmpsb
jl
popa
int
fsts
pusha
popf
sbb
aaa
shl
rorl
cmp
outsb
sub
loopne
or
xlat
inc
mov
jp
les
sahf
negl
dec
inc
lahf
mov
insb
jne
and
cmp
mov
sbb
test
xor
fcoms
sub
adc
pop
inc
test
scas
pop
push
cmpsl
aad
inc
add
lcallw
cld
rcrb
adc
andb
or
jo
xchg
cmpsb
xor
dec
push
cmpsb
sarb
rcrl
inc
pop
shlb
lret
stc
nop
adc
fisttpll
cwtl
es
cwtl
repnz
fsubrs
pop
jge
or
cmp
bound
in
cmove
and
popf
shl
adc
mov
adc
movsl
cli
pop
push
sbb
jmp
addl
mov
jl
fwait
push
out
cli
stos
repz
jmp
push
mov
notb
mov
in
adc
jnp
or
repnz
loop
pop
leave
ds
pop
xchg
fs
xchg
or
add
mov
pop
jnp
int3
jnp
sub
cmp
int3
push
cmp
shrl
push
push
dec
mov
lcall
imul
cltd
cmp
push
jg
sbbb
stos
mov
cwtl
mov
mov
mov
out
notl
inc
inc
jp
cmp
and
sbb
sbb
fisttps
cmp
push
fcompl
scas
in
push
popf
outsl
sub
fwait
aad
jnp
std
bnd
ss
cmpsl
inc
sbb
mov
pop
or
inc
lods
cmp
inc
popa
dec
jne
xlat
push
test
xor
int
in
nop
or
dec
dec
cmc
add
aas
push
rorb
adc
test
xor
scas
or
xchg
ja
dec
aam
outsl
adc
test
inc
mov
popa
xchg
jo
xchg
jno
cmp
shrl
jne
test
cltd
xor
xchg
add
cld
xor
clflush
mov
jecxz
out
std
mov
lods
cmp
dec
xor
and
stc
int3
mov
lea
ret
cmpsl
adc
or
mov
push
cmp
cwtl
sti
cwtl
cmp
xor
lods
push
dec
or
out
lods
nop
xchg
lods
sbb
cmp
xchg
lret
int3
pop
test
packuswb
cmpsl
mov
das
bound
xchg
mov
cs
out
push
repz
shl
lret
ja,pn
xchg
sbb
push
inc
rclb
enter
or
and
cmpsb
xchg
jmp
push
jae
dec
jnp
lret
sub
sub
movsb
mov
bound
and
sub
sub
pop
jge
test
cmpl
into
imul
mov
mov
sahf
add
cmp
dec
scas
jns
lahf
xor
shl
test
mov
add
sbbb
sub
cs
push
les
jno
pop
mov
cmpsb
pop
add
jne,pn
dec
fisubs
iret
jge
call
aam
xorb
cmp
dec
cmp
pavgw
push
mov
adc
in
fwait
ret
std
xchg
aaa
dec
clc
mov
cs
xchg
fcomps
xchg
pushf
cmp
dec
or
adc
push
ret
loope
xchg
adc
lahf
les
xchg
lcall
dec
mov
and
mov
jp
sbb
mov
sar
pop
je
sahf
mov
fdivrl
test
scas
test
push
push
mov
adc
das
sub
jbe
loop
int
jl
or
pop
fsubp
xchg
sarl
stos
lahf
in
enter
and
ret
adc
xchg
jbe
cmp
addr16
push
mov
mov
inc
shrb
pop
jnp
andl
or
add
and
sbb
jmp
push
sbb
clc
xchg
xor
adc
xor
lret
repz
sti
sar
cld
sub
cs
lods
out
lea
mov
int3
push
xor
mov
sbb
mov
xchg
push
in
mov
jp
mov
sub
xchg
inc
pop
outsl
imul
fisttpl
out
dec
shlb
jg
xorl
std
mov
lcall
or
lods
pop
add
adc
imul
fimull
lods
mov
flds
push
xchg
ja
xchg
mov
jecxz
adc
orl
insl
pushf
insl
sub
call
dec
outsb
xor
dec
or
imul
adc
dec
adc
adc
mov
inc
insl
cmp
lods
fstpt
lods
fiadds
test
in
arpl
jnp
dec
out
loope
stos
push
push
adc
cmp
dec
out
icebp
aad
icebp
scas
into
jno
aam
pop
jge
leave
pop
sub
aad
outsb
stc
inc
mov
mulb
stos
shl
add
sarb
loop
lcall
mov
fnstsw
pop
sti
movsl
flds
dec
popa
aam
and
and
insl
outsl
cmpsl
jae
jp
insl
add
pop
mov
dec
xchg
js
lods
add
mov
stc
into
jp
subl
cmp
ljmp
or
shll
lret
into
std
sarl
lret
popf
leave
inc
sbb
mov
push
add
scas
sbb
out
test
pop
adc
sub
daa
add
add
add
mov
sbb
aaa
push
rcll
pop
leave
ss
mov
sti
sbb
xor
cmpsl
adc
ret
into
xor
icebp
mov
cmp
push
lretw
fs
xor
push
rcll
inc
push
inc
push
lret
pushaw
mov
cltd
ja
add
and
pop
out
cmp
fs
fstp
cltd
insb
ja
push
sub
stc
push
ljmp
nop
inc
aaa
jle
test
dec
dec
ficompl
dec
inc
or
fstpl
dec
jg
lods
dec
dec
sub
lret
inc
out
cld
dec
jge
in
cmp
or
sbb
jl
gs
adcb
mov
jmp
out
cwtl
pusha
call
rcl
jb
inc
xor
les
popf
jecxz
je
bound
lret
xchg
pushf
pop
push
add
sub
in
mov
lods
mov
lods
ret
in
jb
sbb
in
mov
or
mov
mov
dec
push
shll
xchg
mov
push
daa
add
and
lds
movsl
outsb
mov
sub
mov
movsl
aaa
and
mov
ds
cmp
in
jne
arpl
stc
lret
push
and
xchg
jge
push
outsb
in
xchg
push
aas
mov
mov
inc
call
or
xor
fistps
movsl
ret
xchg
jge
cmc
pop
sub
stc
sbb
daa
int
sbb
imul
les
mov
jb
add
push
and
and
out
test
mov
pop
dec
mov
adc
add
in
pop
push
mov
fsubrs
in
nop
add
imul
popf
in
and
dec
sub
icebp
mov
mov
out
pop
cs
add
mov
iret
xchg
gs
ds
cmp
in
mov
mov
inc
lcall
xchg
and
cli
lea
pop
cmp
xchg
pop
lea
ss
out
xchg
popf
mov
sbb
inc
nop
js
dec
adc
movsb
pushf
inc
ja
fdivr
int3
mov
or
pop
cmc
fisttpll
cli
lock
daa
jne
out
adc
jbe
lret
ret
inc
cmc
pop
pop
jg
rorl
sti
ret
adc
or
aam
cmp
popf
sbb
lods
push
aaa
loope
dec
dec
jmp
jecxz
mov
das
sub
es
repnz
cltd
ds
repz
stos
pushf
mov
mov
push
mov
ds
shll
cmp
add
adc
pop
adc
rep
dec
pushf
fldt
add
xchg
pop
fcomps
cmp
test
xorb
mov
adc
mov
enter
pop
mov
sub
sbb
and
sbb
ja
push
add
lds
insl
mov
iret
jbe
jmp
mov
pop
dec
jmp
mov
mov
out
mov
aad
push
sbb
xchg
in
sub
and
jp
es
mov
rorb
and
repz
clc
adc
adc
pop
pop
add
loopne
mov
xchg
dec
push
xchg
mov
jne
mov
in
mov
sub
add
in
hlt
push
lods
cmpsl
int
ds
xchg
test
mov
mov
test
shrb
enter
nop
add
push
int
bound
jle
repz
sti
es
mov
mov
fisubrs
xchg
xor
dec
lret
sub
insb
test
jnp
and
fistpl
aad
lret
xchg
cmp
leave
dec
mov
aam
push
push
lcall
ficompl
out
loope
bound
gs
xchg
ret
jb
jbe
lods
dec
insb
adc
cmovp
mov
pop
or
ja
jbe
dec
bound
insb
lds
fstpl
ss
aaa
fnsave
push
adc
das
cmp
pop
sub
loope
nop
cmc
xchg
movsb
insl
and
sbb
cs
inc
inc
rol
push
add
pop
sub
lock
cli
xchg
push
xor
mov
sbb
repnz
bswap
add
lds
xchg
test
cmp
jmp
xrelease
iret
mov
and
je
dec
inc
ficoml
leave
and
cwtl
jg
or
jb
cmp
inc
inc
ret
stos
inc
inc
and
cli
mov
cmp
lea
add
cmp
scas
xchg
and
daa
mov
jno
sub
adc
into
dec
xor
je
mov
push
test
mov
xor
icebp
inc
xor
xor
lods
sub
mov
lods
test
gs
out
pop
mov
leave
test
pusha
in
dec
cltd
or
push
stos
repnz
dec
mov
sbb
mov
out
push
jge
insb
fwait
jecxz
sbb
dec
pusha
lods
icebp
push
ljmp
in
sbb
inc
mov
out
insb
jb
mov
fists
add
xchg
push
into
arpl
add
inc
js
call
cmp
and
push
jle
adc
out
mov
aas
es
adcb
sub
fs
mov
int
xchg
push
sbb
and
cmp
pushf
push
loopne
aas
cwtl
imul
call
vdivss
ja
add
or
leave
jns
push
pop
mov
mulb
or
sbb
adc
push
clc
mov
movl
adc
aad
mov
cmpsb
add
shlb
in
repz
mov
xor
mov
or
or
mov
les
cwtl
ja
xchg
push
fldl
sub
cmp
pop
ds
cmp
xor
and
jl
mov
ret
pop
mov
cli
mov
int3
sub
aas
ja
dec
pop
es
lods
in
pop
xchg
movsl
cmp
outsl
movsl
dec
pop
xchg
jg
test
jno
sub
inc
jb
xor
fadd
sub
aad
lahf
repz
ficomps
dec
inc
xchg
outsb
fistl
ficoml
xor
in
push
sbb
fmull
and
cmp
in
sbb
inc
sub
fdivrl
in
jge
aaa
loop
ffreep
push
call
jmp
jnp
push
sub
add
popf
imul
cmp
shrl
ljmp
lds
and
les
jmp
inc
dec
or
pop
fnstsw
push
xchg
xchg
cli
inc
pop
fnstsw
push
je
out
loopne
dec
xor
cld
insb
adc
js
pop
pop
add
mov
inc
in
push
shl
fsubrs
pusha
mov
leave
icebp
sub
inc
testb
test
sbb
lods
mov
pop
jbe
mov
pop
xchg
std
inc
repnz
sbb
xchg
pusha
sub
repz
and
cmc
repz
or
and
add
ss
bnd
lret
and
js
fucomi
ja
dec
mov
out
xchg
or
in
aaa
or
jnp
xor
and
adc
test
cmpl
mov
js
cmp
jo
dec
aaa
inc
pop
jo
ja
cld
icebp
jg,pn
sbb
arpl
in
gs
mov
mov
outsb
popa
repnz
call
jp
stos
and
je
xor
shlb
push
hlt
dec
pxor
lret
push
loopne
add
or
pushf
pop
xchg
mov
push
sbb
add
pop
stos
js
cmp
lret
mov
int
lahf
fcmove
push
fsubl
xor
jno
das
test
push
and
jle
je
push
lea
mov
mov
and
test
jmp
cmp
cmc
divl
sub
pop
xchg
iret
xchg
cs
lcall
sbb
outsl
cmpsl
scas
mov
xchg
adc
push
dec
adc
gs
dec
test
jg
and
push
push
pop
jno
hlt
pop
sbb
xchg
dec
lret
loope
fwait
adc
fwait
sub
inc
jle
lock
mov
xorl
push
es
test
inc
das
icebp
pop
std
and
ret
and
xor
aas
pushl
xor
dec
cltd
cmpsl
add
xchg
push
dec
stos
push
push
push
out
dec
add
push
rcrb
sub
lret
mov
adc
jne
mov
mov
cmp
xor
loopne
and
mov
fsubrp
fiaddl
mov
pop
xlat
sub
and
xchg
dec
mov
lds
push
xchg
or
mov
in
jle
sti
dec
popf
je
out
pop
sti
sbb
mov
dec
cmp
stos
mov
imul
mov
aam
test
fdivl
pop
dec
sub
pop
out
mov
fdivr
jmp
lcall
fnsave
lock
push
xor
xor
xchg
push
dec
jmp
into
sub
push
dec
hlt
cltd
cmc
push
jl
pushf
or
or
fdivrs
sub
nop
push
dec
shrl
mov
xor
push
scas
scas
sbb
je
pop
add
shll
cwtl
das
mov
sbb
test
mov
push
repz
adc
push
inc
rcrl
and
or
mov
lods
shrb
sahf
mov
fwait
xor
add
cmp
cwtl
insl
sahf
jle
inc
and
aam
pop
in
jb
inc
xor
inc
mov
add
push
add
test
and
mov
out
sub
mov
pop
imul
jbe
sub
fcompl
les
push
mov
fisttps
setge
mov
sti
popa
out
sti
pop
hlt
out
daa
xchg
or
mov
fcmovnb
lea
rcll
add
ja
mov
lahf
mov
xchg
pop
mov
adc
loopne
test
addr16
ds
addr16
mov
fimull
jnp
mov
clc
mov
fwait
push
mov
aas
mov
test
insb
xor
mov
jp
bound
jbe
ret
cmpsb
jo
stc
sub
rolb
ljmp
aaa
sti
pop
push
fneni(8087
xor
xchg
sti
int
xchg
or
in
flds
cmpsl
shr
sahf
fadds
mov
mov
sub
out
push
mov
mov
mov
movsl
out
mov
lret
mov
mov
cmp
mov
sbb
xchg
int3
sarb
mov
js
scas
dec
push
stos
cmp
xor
vphaddubq
adc
or
fildl
ds
adc
mov
aaa
jecxz
mov
jmp
out
icebp
les
pop
lods
push
stc
aad
js
and
in
push
lcall
cmpsl
out
or
and
xchg
lcall
gs
sbb
xlat
jg
cwtl
or
icebp
push
adc
jle
jns
cmp
sub
adc
test
mov
stc
stos
cwtl
sbb
into
sahf
lret
lret
dec
inc
ret
orb
ss
in
jecxz
mov
pop
add
sub
ljmp
sarl
arpl
fisttps
or
add
ds
pushf
rep
jb
inc
sub
and
dec
push
push
add
sub
outsl
mov
jbe
cmp
sub
pop
dec
inc
rclb
push
pop
add
ret
jne
inc
lods
mov
jno
shl
mov
ds
inc
xchg
jne
lods
lods
outsl
roll
lods
popa
and
dec
sub
cltd
lcall
push
in
fnstsw
loopne
mov
add
rcrl
push
loope
and
mov
sbb
jg
add
jno
or
dec
xor
addr16
mov
ret
int3
test
fbld
es
or
int
xchg
mov
jl
xorb
pop
xchg
enter
dec
rcll
in
push
lea
mov
mov
ds
pop
add
js
ds
popf
enter
sbb
adc
repz
mov
fstpt
inc
push
repz
cmp
push
push
mov
ficoml
lods
push
and
push
out
hlt
fdivrp
aad
pop
enter
cli
mov
stos
insl
jecxz
add
jbe
inc
iret
and
cmp
aam
jnp
jecxz
xchg
hlt
ret
loopne
jl
mov
xchg
jmp
shl
mov
ffreep
add
xchg
sbb
out
test
push
insl
sub
add
lcall
fcompl
lret
mov
cld
loop
xor
adc
mov
adc
mov
mov
pop
push
pop
inc
sbb
mov
push
dec
push
call
jnp
cmp
aaa
mov
xchg
lcall
sub
lcall
cmp
movsl
je
pop
stos
daa
bound
test
movsl
jmp
stos
inc
clc
push
mov
pushf
scas
mov
cmc
mov
sarl
and
pop
movsb
cmp
aad
in
in
xchg
mov
aad
mov
mov
in
fstl
add
jmp
add
adc
add
and
imul
mov
adc
fistps
push
pop
xor
lods
mov
ret
mov
call
push
andl
jecxz
sbb
dec
or
sub
shll
add
sub
arpl
pop
cltd
nop
push
or
xchg
xor
xlat
insl
in
jp
lahf
xor
loop
push
jl
cmc
or
and
xor
mov
pop
inc
xor
mov
test
dec
xor
mov
or
xor
dec
adc
repz
mov
std
imul
or
fsubl
movsl
xor
lahf
sub
ja
test
in
adc
int
cs
int
dec
imul
icebp
fs
and
sub
out
push
add
cld
incb
dec
mov
mov
les
je
lret
pop
cmpsl
fldt
clc
cmp
xchg
jmp
dec
cmp
ror
outsl
mov
rcl
repz
adc
cmc
rorl
sub
stos
jge
int
sbb
pusha
jmp
ljmp
inc
dec
mov
lea
cwtl
inc
xchg
ja
inc
add
add
mov
or
or
out
shrl
mov
add
jb
pop
or
inc
xchg
std
pop
shrl
add
pop
adc
dec
popf
imul
jne
lret
sbb
dec
je
adc
xor
adc
insb
jmp
lock
xchg
and
int3
mov
rolb
add
inc
or
sub
push
je
adc
cmp
repz
cmp
imul
daa
mov
or
call
jmp
mov
push
jmp
jnp
test
sbb
push
mov
cli
movsb
shrl
std
cwtl
icebp
aad
mov
fistl
dec
outsb
jmp
sbb
xchg
jmp
mov
push
cmp
hlt
aam
jmp
sub
inc
cmpsl
mov
and
insl
cltd
ljmp
pop
fwait
into
mov
jb
call
xchg
leave
int
xchg
mov
mov
stos
dec
mov
xchg
xchg
and
movsl
hlt
xor
call
mov
pop
pushf
outsb
clc
xlat
push
jl
mov
mov
lea
ss
in
xor
jle
lcall
out
dec
notl
int
mov
add
push
xor
pop
clc
scas
adc
adc
mov
push
repz
jo
adc
add
dec
xchg
ficoml
pop
hlt
rcrb
or
in
xchg
inc
cmc
push
ficoml
mov
arpl
jp
push
xor
mov
fstps
or
lea
jge
jecxz
icebp
fbld
adc
stos
pusha
xor
lret
mov
lea
jmp
arpl
adc
mov
ds
jae
mov
and
and
push
push
outsl
sahf
jmp
clc
movsl
sub
aaa
insl
add
pop
jl
or
mov
repz
mov
shll
xor
rorl
sti
dec
or
add
mov
adc
out
push
xchg
fnstenv
mov
push
mov
adc
rorb
cwtl
lret
clc
push
hlt
xor
sbb
or
mov
xor
enter
subl
es
or
loopne
cs
popa
push
pop
jp
dec
rclb
stos
mov
cltd
mov
mov
mov
fimuls
or
mov
ja
int3
fwait
xchg
aaa
lock
out
xor
push
add
mov
dec
ret
cmp
or
rcrl
cs
add
lods
scas
push
xchg
loopne
in
or
jnp
push
jo
fdivs
mov
mov
ljmp
insl
testl
mov
ret
or
ds
and
sub
sub
xchg
or
data16
pop
push
int
test
inc
pop
jg
dec
jge
push
jecxz
xor
push
mov
xor
movsb
dec
loop
movsb
int3
xchg
ljmp
sub
addr16
scas
arpl
pop
xchg
lea
xchg
popf
push
mov
ja
cmp
orb
mov
ds
inc
sub
jnp
data16
and
popf
nop
sbb
gs
bound
jb
aaa
popa
mov
mull
mov
sbbl
xchg
pop
inc
out
mov
add
add
ret
push
mov
cld
push
pop
and
add
sahf
inc
cld
in
icebp
pop
pop
or
jbe
xchg
pop
jae
mov
push
and
subl
fmul
lret
rcll
pop
cmp
jle
rcrl
pop
mov
mov
mov
aam
mov
xlat
out
and
negl
push
imull
clc
jle
xchg
jg
cmpsl
out
jno
xchg
sbb
loopne
imul
cmpsb
fldcw
cmpsb
or
test
dec
sub
cltd
mov
mov
stc
sbb
jmp
loop
nop
jmp
fwait
mov
aas
movsb
adc
aas
cmp
jno
pop
popa
adc
insl
xchg
out
ljmp
ret
inc
or
and
cmc
test
test
frndint
inc
pop
mov
push
cmp
and
or
shll
movsb
pop
data16
sub
shrl
jne
xchg
call
lcall
dec
push
adc
movsl
cmp
scas
lahf
js
jg
mov
fwait
rclb
cmp
adc
push
cmc
into
sbb
dec
jp
cmp
idivl
jo
roll
or
js
mov
in
sbb
and
int
shll
divb
pop
sub
add
inc
mov
test
mov
std
repz
adc
sbb
imul
push
sub
inc
sub
or
int
mov
jne
ljmp
insb
mov
pop
iret
imul
repz
xor
and
add
repz
xor
pop
pop
psubusw
subl
or
loope
push
xor
push
scas
pop
sbb
xchg
mov
xor
scas
jbe
add
dec
xchg
mov
dec
ffree
inc
into
pop
dec
pushf
push
jle
cmpsb
sbb
stos
pop
push
cmpsl
inc
rclb
fsts
jmp
inc
aaa
out
stos
push
push
sub
and
sbbb
or
divb
jecxz
les
out
sub
jb,pn
add
dec
insl
sbb
push
and
fdivl
push
add
lea
jno
jno
cmp
ss
and
jp
pusha
je
aad
int3
adc
sbb
and
mov
dec
and
xor
fs
ret
and
xchg
pop
les
dec
inc
pop
aas
adc
jnp
xor
jge
aaa
mov
xor
mov
mov
mov
dec
dec
mov
filds
mov
arpl
pop
sbb
mov
mov
ret
mov
pop
xor
test
orb
test
push
fadds
stos
andl
add
lcall
orl
pusha
mov
sub
inc
dec
jmp
sbb
mov
pop
out
std
adc
sbb
cmp
and
sbb
fcmovbe
pop
pusha
cmp
mov
insb
jp
cmp
andb
fistpll
and
call
or
aam
mov
lods
sahf
inc
out
fwait
mov
push
into
sahf
mov
subb
or
adc
cwtl
or
cli
sarb
pop
aaa
lret
jl
lcall
lods
mov
ljmp
push
cltd
pop
mov
mov
pop
or
negb
repz
mov
sbb
inc
int
jle
ss
das
xchg
jle
pop
scas
push
les
cli
mov
test
jns
or
sbb
add
xchg
fildll
cmp
addr16
stc
sbb
cmpsb
icebp
sbb
inc
lret
sahf
cmp
sub
inc
xlat
int
xor
sbb
push
bound
scas
out
popf
mull
dec
stos
add
sbb
outsl
out
shlb
mov
xor
xor
loope
addr16
cmpsl
mov
adcl
cmp
xlat
xchg
int
hlt
pop
fisubs
mov
or
and
sar
sbb
nop
cli
cmp
mov
push
in
pop
dec
iret
adcl
test
mov
inc
dec
cmpsl
or
arpl
repz
or
inc
adc
pop
push
in
mov
mov
popa
mov
aad
lret
jne
cld
roll
xor
sbb
add
jmp
test
xor
mov
or
js
xchg
xor
jno
scas
sub
pop
cmp
sti
test
adc
inc
mov
js
adc
and
sub
in
and
out
andl
cmp
lods
jl
pop
push
jbe
mov
mov
jge
fistpl
lcall
or
jbe
mov
or
loop
adc
push
jbe
mov
loope
push
sub
mov
test
jno
jle
in
push
mov
lock
cmp
stc
mov
xchg
adc
pop
cli
fwait
movsb
and
xlat
jbe
loopne
adc
xchg
xchg
jmp
enter
jo
repnz
ret
in
push
cmp
stos
or
outsb
push
call
leave
aaa
lea
jmp
js
mov
sbb
adc
popa
xorb
aas
dec
mov
mov
pop
push
cs
pop
rorb
xor
cmp
adc
push
mov
adc
mov
xor
inc
mov
imul
and
into
add
lock
std
xchg
push
jmp
scas
or
enter
pop
pushf
pop
mov
mov
out
inc
sbb
inc
repnz
add
aam
and
stos
adc
xchg
in
push
jg
mov
ret
repnz
xorl
pop
jg
pop
stc
test
mov
mov
pop
jl
push
dec
jo
push
movsb
popa
push
in
or
sub
sub
mov
in
aas
mov
inc
int3
xor
pusha
jmp
inc
mov
in
lds
mov
ds
in
and
mov
adc
scas
imul
dec
xor
pop
daa
add
ljmp
mov
mov
lret
mov
add
dec
fdivl
iret
dec
ud2
xor
cmp
dec
fsubrp
add
mov
ljmp
in
test
adc
in
mov
cmp
pop
jge
pop
dec
dec
and
adc
outsl
sub
jae
outsl
cwtl
fnstcw
sti
pop
fs
fwait
test
mov
and
pop
enter
fnstenv
leave
shr
mov
add
mov
mov
fcmovnu
jb
sbb
sub
jno
popa
mov
hlt
pop
lcall
push
int3
mov
dec
jecxz
in
inc
inc
fwait
test
notl
out
ds
and
shrl
xor
lea
add
insl
sarl
jge
cwtl
sarb
das
scas
mov
push
push
arpl
mov
setl
insb
add
cld
fisttpl
pop
test
roll
call
push
loop
jb
mov
push
sbb
sbb
jne
mov
and
sub
and
jp
aam
sbb
jmp
adc
rep
sub
add
dec
pop
and
out
sbb
xchg
je
pushf
or
scas
in
in
push
mov
mov
and
xchg
and
inc
mov
xor
ja
pop
stos
add
or
xor
sbbb
outsl
fdiv
xor
insl
dec
ret
push
insl
mov
stos
xchg
inc
in
ds
add
sub
push
adc
jl
adc
stc
loop
adc
ss
std
les
sub
push
inc
jae
add
and
jmp
cltd
add
ret
movsl
jl
push
jl
xor
ds
push
cs
add
in
mov
ficoms
test
dec
pop
pop
and
push
movsb
xchg
cli
mov
inc
mov
xor
pop
arpl
xchg
adc
js
pop
xor
adcb
dec
dec
out
into
lret
jp
mov
cmpsl
and
pop
fdiv
imul
ret
ja
mov
jp
fildll
out
xlat
mov
xchg
jge
stos
push
jo
mov
fsubrl
ljmp
pop
testb
and
inc
lods
idivb
test
imul
lock
and
inc
mov
jb
pop
pop
int
lret
movsl
mov
add
nop
scas
lret
sti
into
xchg
mov
fadd
add
push
push
jmp
mov
inc
rcll
das
mov
xchg
test
mov
popf
in
mov
test
pop
jno
jne
pop
aam
fldenv
cli
dec
int3
dec
fcomip
dec
dec
xor
sar
mov
dec
insl
mov
mov
pop
sbb
mov
pusha
jae
pop
mov
stos
inc
subb
movsl
cmp
add
out
jno
fsubr
sub
mov
jae
outsl
push
insl
xor
icebp
pop
data16
lea
pop
insl
sub
fldt
mov
mov
sbb
mov
push
loop
in
stc
in
mov
and
insb
push
dec
sti
jbe
sarl
push
xchg
mov
xchg
mov
jno
mov
decb
bound
inc
mov
dec
mov
stc
sbb
mov
push
jmp
pop
xchg
jbe
mov
sbb
xchg
test
push
outsl
push
jle
xchg
gs
and
call
mov
hlt
dec
inc
mov
push
mov
stos
aam
leave
cli
fdivrs
into
cmpsb
pop
xchg
ljmp
pop
mov
push
mov
outsb
adc
cmp
sub
nop
pop
pop
mov
les
xor
nop
into
add
lcall
nop
mov
hlt
daa
xor
cmpsb
push
or
int3
xchg
std
ljmp
xorb
hlt
ret
add
sub
pop
jl
xor
fdivrs
and
movsl
and
andb
aas
and
clc
imul
xor
pop
dec
stos
fsubr
mov
hlt
out
pop
pop
cmpsl
jp
aaa
push
insb
rcl
je
dec
sub
stos
pop
add
pushf
sbb
inc
cmp
rcl
in
sbb
lahf
cmpsb
mov
repnz
lea
sar
inc
fs
mov
ss
sti
inc
arpl
mov
pop
add
outsb
stc
push
xorl
mov
fwait
xor
jp
jecxz
mov
int3
jno
jae
sbb
pop
pop
cmc
enter
scas
pop
mov
loopne
pop
dec
xchg
sub
mov
sahf
ljmp
pop
push
push
cmp
adc
dec
or
jl
pop
mov
test
mov
test
jbe
icebp
sub
mov
stos
sbb
sbb
dec
sbb
sarb
and
orb
in
xor
in
fwait
out
loop
inc
inc
mov
cs
mov
ret
jb
inc
add
lret
push
cwtl
mov
xor
rep
jns
sbb
inc
jno
pop
stos
fisubrl
sbb
xchg
and
fbld
lcall
dec
lea
fdiv
pop
pop
imul
push
jp
lds
sub
sbb
test
and
and
xor
xchg
iret
arpl
mov
or
adc
or
int3
push
scas
lahf
lahf
sbb
aas
push
aas
xor
push
fildl
pop
and
push
jae
rcr
jmp
cltd
inc
mov
adc
mov
mov
dec
sub
aas
lods
ficompl
mov
xchg
popa
lods
in
test
jmp
mov
int3
ficoms
fists
ret
push
mov
faddl
rolb
popf
and
std
aaa
int
or
fmuls
loopne
pop
push
add
fwait
ja
stos
test
pop
imul
mov
push
and
jns
ja
sti
loop
lret
outsl
xchg
add
lods
xchg
cmp
mov
dec
mov
push
jnp
cli
pop
iret
push
gs
out
imul
stos
imul
push
icebp
fmulp
daa
stos
pop
int3
or
aaa
mul
lea
add
negb
scas
sbb
cmp
jb
loop
shll
jmp
insb
out
jle
in
pop
push
add
xchg
push
stc
inc
and
mov
call
and
out
xchg
les
pop
pushf
push
das
mov
mov
mov
fsubrs
outsl
or
std
cmp
fdivr
push
data16
dec
arpl
inc
ljmp
dec
loope
repnz
add
mov
xor
push
pop
xchg
aas
popa
and
and
aad
movsl
out
ret
sub
imul
mov
lahf
sbb
in
or
and
cmp
mov
sbbl
cmp
std
icebp
push
scas
imul
lea
mov
aam
enter
push
rdmsr
sbb
mov
cmp
mov
push
cmp
mov
xchg
aaa
sub
stos
daa
je
mov
cmpsl
add
mov
std
pop
popa
gs
std
dec
rorb
push
jae
inc
xchg
xchg
pop
movsb
jns
loope
dec
dec
sbb
sub
jo
pop
and
sbb
mov
dec
mov
arpl
data16
fnsave
inc
dec
or
mov
jo
xadd
add
rcll
les
or
into
xor
imul
inc
lcall
add
jecxz
dec
int3
and
push
lods
movsb
or
pop
pop
inc
and
mov
adc
sbb
shll
cmpsl
jb
lods
outsb
or
dec
movsl
test
mov
shll
rorb
xchg
out
insl
cmp
add
push
or
sbb
aad
xchg
cmp
fwait
stos
adc
or
or
pop
cmp
mov
test
jns
or
ja
inc
cmp
pop
sarl
mov
stc
icebp
sahf
cli
fldt
push
clc
repnz
sub
out
inc
jno
scas
mov
insb
dec
pusha
mov
push
or
mov
aas
mov
mov
xchg
out
cmpsl
jge
jae
xor
mov
sbb
fidivrl
pop
mov
sbb
outsl
jne
out
add
div
or
int
cmp
js
mov
into
and
xor
out
jecxz
xorb
stos
add
inc
sub
repz
xchg
sbb
adc
pop
imul
sub
insl
xor
dec
xchg
mov
push
sub
cmp
mov
into
ss
push
inc
les
xchg
mov
dec
icebp
sub
adcl
dec
mov
or
mov
leave
out
lds
jno
lods
add
lods
mov
lds
push
add
imul
jg
mov
lea
movsb
rcrl
mov
pop
das
arpl
mov
or
in
sbb
cmp
dec
push
ret
and
jmp
test
sbb
push
leave
popf
pop
rcrb
out
push
inc
scas
and
loope
fcmovnb
ljmp
pusha
icebp
into
cmpl
push
insl
loop
sbb
lock
xchg
loopne
push
push
adc
sbb
xlat
hlt
and
inc
shlb
mov
popf
xor
in
and
leave
sub
ljmp
nop
fnstcw
pop
clc
mov
sbb
gs
dec
adc
jnp
cs
push
sub
imul
mov
sub
jge
sbb
xchg
icebp
jns
jno
push
xchg
idiv
int
ret
add
pop
out
fnstsw
fs
jbe
fwait
cld
test
leave
out
cmp
cmpsl
popf
mov
inc
daa
cmc
sbb
sbb
into
ret
test
mov
sub
sbb
int3
mov
pop
or
sub
jbe
rcrb
mov
mov
xor
jecxz
in
jae
xchg
daa
add
popf
fs
data16
nop
aas
xorb
push
or
cs
xor
fldl
aam
in
js
cli
stc
ljmp
loop
lret
and
push
fdivrl
insb
int
mov
jecxz
jae
jne
sar
popa
mov
out
or
fsubrl
hlt
xor
lcall
jle
jbe
mov
test
lock
mov
mov
pop
imul
sub
test
insb
fnstenv
std
mov
gs
and
sub
mov
daa
cmp
cmp
add
mov
jp
cmp
push
jo
and
mov
xor
jl
and
sbb
jl
push
xor
lret
mov
mov
sar
ret
mov
sub
dec
xor
push
jl
aas
outsl
sub
je
or
mov
xchg
fmul
lock
cltd
add
push
dec
jge
cmp
stos
add
xchg
aad
incl
inc
jge
jbe
xor
adc
outsl
jbe
adc
stos
clc
fistpll
xchg
sahf
stc
arpl
jmp
loopne
test
loope
cwtl
mov
jle
int
or
rcll
adc
pushf
clc
mov
add
mov
popa
sub
scas
lods
pop
push
lcall
mov
mov
clc
dec
ja
jno,pt
mov
adc
mov
mov
out
mov
pop
lret
mov
nop
adc
enter
pop
inc
jbe
idiv
add
lret
dec
std
ret
outsb
out
pop
mov
sbb
je
push
std
aas
or
xchg
loopne
test
push
pop
ja
in
or
stos
test
xchg
call
loope
push
cmp
and
es
fucomp
and
dec
sub
pusha
xor
inc
pop
xchg
je
das
cli
xchg
ret
enter
push
out
hlt
into
jmp
sbb
and
or
jge
int
insl
jns
sbb
pop
xchg
ficompl
dec
test
jno
jle
into
pusha
jmp
jno
cli
cld
push
lea
and
mov
das
adc
bound
push
aas
es
call
loopne
shlb
mov
cs
cmpsl
jae
mov
es
scas
mov
call
mov
sbb
pop
div
and
adc
out
jns
out
and
xchg
pop
clc
mov
jp
fcmovne
xor
push
mov
stos
int3
popf
in
ss
mov
sbb
dec
js
lahf
or
or
call
inc
std
lea
adc
push
mov
add
adc
and
insb
jle
push
xorb
ds
mov
pop
push
or
dec
aas
jb
popf
jmp
movsb
xor
inc
and
sbb
shlb
jae
ljmp
push
test
sub
sbb
mov
push
push
pop
test
leave
outsb
xchg
pusha
inc
aad
mov
lds
or
insl
push
orl
mov
sub
mov
and
pop
sahf
insl
xchg
push
push
jle
test
push
pop
in
adc
and
jl
push
sub
adc
adc
loope
notl
mov
js
in
mov
mov
and
lods
cmp
popf
stc
popf
test
sub
loopne
add
hlt
adc
ljmp
dec
sub
mov
imul
cld
add
clc
lea
aam
xchg
ss
test
inc
ljmp
pop
jno
xor
xchg
and
negb
in
clc
inc
push
fnsave
shll
rcrb
fcompl
and
cmp
scas
jb
push
mov
not
roll
cwtl
insb
clts
lcall
in
mov
sub
xlat
cld
js
jle
in
pop
push
call
mov
iret
repz
mov
inc
adc
scas
orl
push
pusha
lahf
test
inc
dec
jae,pn
insl
test
repz
inc
fmull
stos
cmpsb
inc
and
sub
je
jbe
xchg
jmp
jns
ret
je
mov
enter
lods
jbe
pop
mov
cmc
lods
xor
jl
leave
cmpsl
xchg
in
add
adc
js
and
fsubrl
jno
lock
std
adc
mov
or
loopne
dec
sub
and
cmp
xor
in
or
adcl
adc
insb
lret
jmp
pop
out
movsl
fstpt
xchg
push
mov
pushf
test
and
cmp
lods
inc
or
loope
cmpsb
pushf
add
add
cmp
mov
push
or
lea
fs
cmp
not
sbb
es
std
gs
cltd
flds
and
mov
sti
adc
xchg
div
test
fistpl
or
aas
jmp
xchg
sub
xchg
xchg
pushf
sbb
pop
aad
out
or
insl
sub
jnp
outsb
movaps
popf
mov
adc
lret
rclb
cmp
and
rorl
das
les
rorl
dec
xor
dec
inc
jae
lods
int3
test
mov
mov
jle
sbb
rolb
fldcw
loope
ret
aaa
cltd
mov
pop
cmp
or
or
fcomps
xchg
sti
xor
push
cltd
cmpb
adc
sub
sbb
cmp
mov
adc
jmp
frstor
dec
stc
shlb
loope
lds
insl
mov
aas
adc
mov
in
mov
shlb
jbe
pop
imull
popf
mov
add
cmp
rcll
cmpsl
xor
push
xchg
out
mov
fadds
mov
stos
outsl
aad
mov
sub
je
pusha
clc
sahf
aaa
inc
loopne
pop
inc
push
repnz
test
xchg
test
shlb
mov
mov
mov
push
and
and
in
sub
mov
xor
loop
insb
inc
cmpsl
pop
lcall
jo
pop
ja
lret
inc
sub
cmp
mov
cmp
cli
add
and
hlt
or
gs
sbb
lock
paddd
adc
test
inc
inc
push
mov
loope
ret
dec
adc
and
and
lds
bound
hlt
cmpsl
in
subl
scas
push
or
xchg
mov
xor
jno
inc
xor
mulb
nop
xchg
pop
add
mov
pusha
cli
out
xor
mov
and
mov
xchg
or
out
outsb
aad
cli
in
sahf
add
inc
daa
pop
jnp
adc
out
pusha
or
cmc
jmp
inc
sub
or
xlat
rol
pop
inc
adc
rcrl
scas
or
repz
xchg
in
sub
call
pop
in
jecxz
outsb
fmuls
cltd
mov
fwait
adc
stos
mov
fdivs
in
cmpsb
push
dec
sbbb
cli
sbb
jnp
sbb
sub
and
pusha
in
xor
mov
divl
adc
sahf
pop
mov
lea
mov
aas
xor
das
ss
arpl
pop
mov
cmc
pop
cltd
mov
xor
loopne
insl
sahf
mov
xchg
scas
xchg
pop
insb
cli
cmp
clc
aas
pop
xor
jne
mov
pop
mov
cmp
shlb
and
add
negl
mov
sti
jmp
mov
xor
int3
cmp
dec
xorl
jb
sub
or
mov
add
stc
and
lcall
adc
in
andl
mov
je
gs
xor
out
dec
or
test
mov
ret
cmpsl
xchg
pop
out
in
jb
jl
decb
outsl
in
pop
pop
jnp
insl
lret
in
mov
jne
and
outsb
inc
divb
arpl
xlat
js
cmp
aam
loop
popa
lea
jbe
jno
pop
hlt
jae
test
pop
sbb
xchg
inc
jmp
call
adc
mov
pop
xchg
ficomps
scas
xor
out
rcrl
mov
adc
lods
popl
push
stos
aad
or
inc
test
outsb
in
lahf
movsb
bound
mov
adc
push
test
lock
xchg
sbb
lea
add
pop
mov
or
fsub
jnp
repnz
iret
xchg
ret
jmp
and
sbb
scas
jmp
xchg
test
and
rorl
mov
pop
sub
xlat
xchg
subl
push
pop
xor
push
mov
out
xchg
outsl
outsl
insb
mov
sbb
fs
sbb
popf
loop
fldl
push
xchg
sarl
es
sub
outsb
sub
xchg
test
lret
mov
out
std
mov
add
mov
movups
out
inc
add
lcall
pop
pop
xlat
mov
jecxz
adc
neg
aam
pusha
mov
mov
scas
out
cmp
xor
and
ljmp
adc
hlt
jnp
xlat
insb
xor
mov
mov
push
fsubrs
push
dec
in
out
in
dec
popf
push
push
jne
sub
subl
mov
push
fildll
repz
inc
add
push
cs
mov
add
push
jle
cmpsb
sub
call
pop
inc
daa
aas
roll
xchg
hlt
mov
and
mov
out
test
jle
push
adc
xchg
sub
mov
fldcw
adc
stc
cmpsb
sbb
or
sub
ret
ret
sarb
add
sub
out
or
mov
mov
movsb
pop
rol
maskmovq
pop
jnp
and
push
xchg
or
faddl
int3
push
jno
mov
ret
mov
fldt
loopne
or
rolb
scas
jbe
cmp
jae
cmpsl
aad
addr16
mov
iret
fwait
and
std
ss
ljmp
mov
addr16
sahf
rcll
add
ret
ljmp
mov
mov
notb
fiaddl
adc
mov
mov
lret
int
pop
and
dec
add
fwait
outsl
jb
adc
cli
sub
stc
or
lds
jge
in
dec
or
mov
popa
sbb
roll
addl
in
in
or
or
sub
sarb
cmp
ror
cmp
cltd
cmpsl
or
mov
dec
cmc
cmc
gs
daa
jbe
mov
jg
pop
icebp
xor
xchg
mov
int
pop
cmp
mov
sub
ss
cmp
mov
testl
scas
mov
mov
sub
xor
pop
lds
cmp
loopne
adc
imul
cmpb
icebp
ja
ds
lahf
xchg
jbe
inc
inc
pop
mov
add
xchg
push
repz
push
data16
pop
jle
fincstp
pop
popf
mov
or
loop
adc
pop
mov
call
inc
xchg
leave
jno
loopne
inc
lahf
aaa
or
mov
sub
pop
and
or
subb
lret
xchg
sti
inc
lahf
adc
cmpb
incb
lds
add
lea
int
ja
imul
cmpsb
fcoms
ds
or
flds
sbb
shl
lods
mov
xor
iret
xor
mov
push
outsl
or
push
adc
cs
bound
xchg
push
pop
sub
in
pusha
pop
dec
hlt
je
cld
sbb
pop
pop
arpl
push
sub
sbb
cmpsl
rcrl
mov
dec
jle
bound
xlat
lcall
jns
repz
ret
adc
push
push
add
js
cmp
mov
gs
dec
dec
int3
outsb
lret
xor
mov
mov
mov
sbb
sarb
jg
stos
push
or
sub
inc
sub
stc
pusha
lret
mov
xchg
iret
sub
enter
movsl
in
aaa
dec
pop
mov
pop
inc
cmpsl
insl
movsl
daa
pushf
jle
push
ds
lcall
mov
dec
mov
sub
push
ret
push
mov
mov
pop
stos
sahf
lret
adc
fmuls
repz
ljmp
xchg
mov
or
add
cli
xchg
mov
les
mov
push
icebp
xlat
mov
or
add
adc
and
and
int3
dec
inc
xor
xor
insb
push
adc
iret
call
je
xor
cmc
and
cwtl
aas
add
int
sbb
lea
pop
loopne,pn
shrl
arpl
mov
cmc
dec
mov
cmp
xchg
push
in
cmp
lea
frstor
daa
js
dec
add
jb
mov
std
pusha
xor
dec
fmull
fnstenv
lgdtl
sub
mov
in
cltd
mov
out
je
xchg
cwtl
xor
rcll
mov
ja
vpmacssdd
add
ljmp
and
shlb
or
out
or
das
mov
mov
inc
push
mov
loope
roll
jne
das
xor
cld
xor
or
xor
or
xchg
dec
dec
shlb
push
add
mov
into
sub
and
popa
jp
mov
fdivs
mov
mov
fsts
rcl
int3
std
xchg
pop
mov
jmp
dec
push
mov
mov
push
and
inc
push
js
push
fcmovu
outsb
ss
pop
repz
clc
push
mov
jo
xor
not
jo
repz
call
mov
mov
cmpl
jo,pn
inc
push
push
cli
enter
fistps
inc
add
icebp
in
inc
pop
push
adc
aad
movsb
xor
push
jle
mov
lahf
int3
add
incb
cmp
push
sbb
pusha
fmuls
loope,pn
aaa
mov
sub
test
sub
push
cs
lea
xchg
lock
in
aam
pop
mov
or
mov
stc
cmp
je
popf
add
lods
mov
mov
in
pop
jp
mov
ret
rorb
xchg
cltd
lret
pop
inc
jp
shlb
jg
in
pop
rorb
add
iret
xchg
test
ja
pop
cs
leave
mov
pop
orl
sbb
jl
jae
dec
mov
sub
mov
jns
jmp
cs
or
push
pop
shlb
dec
out
pop
dec
insb
dec
xchg
dec
testb
outsl
notl
or
filds
pop
out
int
loopne
adc
jl
js
test
jo
enter
and
push
mov
jl
cmp
xchg
xor
cltd
test
addr16
in
push
sbb
push
repnz
stc
lods
xor
push
cmp
cwtl
and
mov
cld
clc
pop
sub
xor
nop
ret
inc
outsb
clc
add
outsl
ds
arpl
outsb
enter
hlt
or
or
sub
sbb
mov
or
outsl
shlb
ret
sbb
cmpsl
test
sbb
dec
pop
psllw
jo
xchg
dec
test
es
mov
test
fucomp
fmull
jne
addr16
daa
cmp
mov
push
push
or
or
pop
mov
adc
cmp
cltd
pusha
cwtl
sub
mov
sbb
sbb
sahf
cli
ret
adc
mov
les
and
iret
in
pop
loopne
imul
int3
push
lods
cmp
push
mov
sub
movsl
stc
andb
mov
and
cltd
bound
popl
pop
jle
out
fbld
ljmp
jne
or
out
xchg
cli
inc
out
iret
jnp
xor
rorl
pusha
loopne
jge
mov
mov
aad
iret
and
xchg
cld
loopne
pop
or
push
das
pop
aas
jmp
push
rcll
rolb
sbb
outsl
dec
dec
mov
ret
mov
inc
subb
adc
push
fs
sub
push
push
js
cmp
call
sbb
loop
imul
cld
push
ja
inc
xchg
arpl
and
mov
lea
hlt
imul
push
xchg
and
mov
pushf
arpl
stos
cs
sbb
push
cmpsl
cmp
and
ja
add
test
xor
mov
dec
inc
hlt
cmp
repz
push
sbb
je
add
push
in
ss
mov
divl
xchg
and
andl
es
fidivrl
or
aas
sti
inc
int3
out
out
andb
mov
je
cltd
mov
in
aaa
cld
and
mov
mov
add
mov
push
push
cmc
xor
data16
cmp
add
mov
xchg
lret
repz
cmp
and
push
sub
icebp
test
mov
push
fildl
negb
outsb
int
add
mov
add
mov
jg
adc
sbb
ficompl
mov
adc
out
jae
xor
mov
adc
stc
popf
adc
cmp
push
aam
mov
inc
inc
inc
idivb
or
arpl
out
es
inc
out
adc
addr16
fsubl
shr
mov
and
push
lcall
pop
mov
push
adc
push
and
loopne
xchg
cmp
mov
ds
test
jb
jb
xchg
cwtl
loop
loopne
mov
cmpsl
imul
stos
fwait
addl
repz
aaa
xchg
jbe
test
aad
repnz
outsb
dec
cld
sbb
lods
and
jp
pop
inc
mov
call
shll
aaa
out
or
repz
jg
sbb
repz
pop
in
xchg
cs
in
into
sbb
popa
insl
mov
adc
outsl
mov
push
lods
xor
pop
sub
cmc
es
mov
testl
jns
addl
int
scas
mov
aas
or
cmp
lcall
xchg
loopne
roll
pop
in
bnd
dec
aas
mov
daa
js
aam
pop
scas
push
push
jmp
stos
add
sub
scas
sbb
mov
popa
pop
sbb
lods
mov
lea
test
out
push
and
loopne
xor
insb
mov
inc
data16
add
sbb
push
adc
push
pop
pop
ror
sbb
aas
inc
push
test
mov
xor
out
jl
push
test
jecxz
popw
push
inc
mov
pop
xlat
xchg
dec
fisubl
mov
pop
or
jb
and
add
cmp
in
stos
aad
jmp
and
jg
loope
add
fs
xchg
lods
jg
xor
cmpsl
xor
push
xchg
pop
icebp
out
pop
push
cmc
cmp
add
pop
xchg
dec
aas
std
xchg
cmpsl
icebp
stos
sub
mov
enter
scas
mov
adc
mov
pop
test
mov
cmp
jmp
xlat
jo
ss
mov
jle
jg
mov
loope
jae
pop
ljmp
or
cltd
or
jle
pop
pusha
xorl
cmp
test
sub
call
aam
pop
dec
inc
mov
mov
loopne
jg
or
sbb
insb
fidivl
xor
mov
push
push
test
mov
popa
je
mov
cmpsb
adc
jbe
sub
ficompl
in
aad
mov
add
cmp
cs
test
mov
xor
sbb
jno
dec
shrb
mov
xchg
stc
sti
movsl
cld
hlt
xor
leave
mov
pusha
pop
sbb
test
call
lods
mov
or
clc
outsb
movsb
in
sarl
mov
mov
cmpsl
sahf
idivb
addl
stos
das
cmp
ja
sarb
addr16
iret
adc
outsb
out
outsb
jp
mov
jl
mov
fcmovb
jle
mov
pop
icebp
int
xor
xchg
idivb
fcoms
xor
add
xor
xor
inc
sbb
mov
jbe
cmp
into
pop
adc
xor
xchg
xchg
sbb
lock
sub
cltd
inc
das
cmc
push
xchg
mov
ret
aas
outsb
mov
test
aaa
aad
push
out
pop
popa
cmp
sbb
imul
dec
xchg
movsb
repnz
shlb
add
xchg
scas
and
imulb
dec
cwtl
notb
and
subb
test
addr16
jns
fidivs
jb
es
xor
xor
arpl
jecxz
das
in
cltd
movsb
mov
xor
push
jo
cmp
out
call
repz
and
in
daa
pop
sbb
stos
sub
pop
adc
xchg
dec
in
das
insb
inc
addr16
mov
push
add
aad
jnp
scas
inc
int
out
out
sub
test
cmp
test
or
mov
pop
mov
mov
push
lahf
ja
pusha
push
jl
stos
xor
leave
ret
fnsave
fwait
inc
add
loopne,pt
inc
ret
dec
dec
sbb
pop
ja
mov
and
gs
fsts
mov
mov
mov
mov
dec
add
pop
cmpsl
cld
jmp
xor
push
enter
je
pop
pop
or
xchg
mov
cli
mov
jbe
xchg
in
lcall
test
mov
push
xchg
adc
dec
in
int
and
aas
scas
inc
ljmp
and
iret
mov
push
jo
pop
inc
popf
sbb
mov
sub
in
push
push
test
xchg
test
ss
push
int
out
push
jl
lret
cmp
mov
scas
mov
push
xor
and
add
dec
inc
fistl
mov
sub
fnstsw
mov
push
dec
pop
into
call
cmpsb
cmp
and
push
mov
hlt
sbb
sti
mov
dec
shrl
cmp
adc
shld
in
out
xorb
xchg
rclb
pop
push
mov
lret
or
or
inc
repz
sub
sub
mov
sahf
inc
mov
repnz
inc
inc
jae
nop
mov
sbb
add
pop
ret
inc
pusha
sub
shlb
mov
xor
cmc
sub
aaa
adc
rcrl
orl
push
push
sbb
in
pop
jne
sub
clc
lahf
out
loop
jecxz
daa
rcrl
pop
sahf
adc
stos
jp
pop
sbb
stc
ljmp
js
jecxz
push
jno
dec
mov
push
insl
or
adc
push
adcl
sub
add
jne
xchg
lods
cmpsl
in
or
mov
into
dec
lahf
jg
aam
cmp
push
adc
xchg
movsb
faddl
xchg
xchg
leave
inc
dec
icebp
int
cld
test
in
popf
mov
imul
xchg
into
or
test
popf
arpl
sahf
push
mov
js
mov
sub
mov
pusha
jno
xor
adc
ljmp
adc
adc
test
xor
lods
mov
jne
dec
cmp
xchg
mov
pop
cmp
pop
aam
xchg
imul
cmp
push
and
xlat
cmp
aaa
mov
pop
scas
pushf
xchg
jnp
cmc
cmpsl
jne
sti
es
sahf
push
fnsave
xchg
sub
pop
mov
mov
push
adcb
pop
cmp
sub
mov
daa
lods
inc
add
sub
mov
push
lods
inc
jecxz
cmp
add
adc
mov
push
xchg
fmull
mov
cwtl
xchg
jae
xchg
inc
outsb
cmpl
or
out
and
into
jae
lds
scas
popf
add
int3
ljmp
xchg
ljmp
dec
movsb
xor
add
or
mov
inc
cmpb
cli
jle
pop
hlt
add
push
jns
ss
cmp
cmp
push
push
push
arpl
shll
push
fistps
pushf
frstor
cmp
outsb
sbb
cmp
and
sub
and
lret
add
cltd
fs
sbbl
add
mov
jo
mov
and
cmp
push
test
outsl
mov
ja
push
jmp
sbb
lock
mov
add
lock
push
mov
xchg
mov
fbstp
xchg
ret
in
mov
cld
or
sbb
mov
push
inc
push
gs
dec
mov
cmp
dec
outsl
daa
add
add
rcrl
pop
addr16
mov
testb
mov
shlb
daa
and
pop
ljmp
cmp
dec
lock
neg
int
mov
out
push
dec
jmp
clc
mov
dec
arpl
jl
jle
jb
dec
or
or
cmpl
sbb
inc
inc
mov
cmc
mov
mov
xor
xor
cmpsl
hlt
bound
or
repz
mov
add
nop
cmpsb
add
sub
iret
jle
or
cmp
fstps
and
loop
inc
iret
clc
or
insb
xlat
mov
xchg
xchg
push
clc
nop
xchg
inc
push
mov
movswl
push
and
popf
ficoms
adcb
mov
ds
and
inc
push
cmp
enter
test
repz
ror
mov
mov
add
xchg
cmp
push
out
pop
sti
adc
or
xor
dec
inc
add
mov
cwtl
mov
xchg
adc
mov
pop
cmc
jae
xchg
xorl
xchg
imul
or
push
shrb
cli
add
mov
iret
ficompl
idiv
xor
fstpl
je
imul
jg
fbstp
add
addb
or
lods
push
and
imul
out
mov
in
int3
in
js
adc
push
pop
jge
movsl
or
sub
bnd
outsb
xor
xchg
mulps
rol
lds
std
ljmp
or
stc
rorl
arpl
mov
jb
mov
js
add
out
jae
push
jnp
fsubs
imul
rolb
pop
push
movsl
push
lods
inc
outsb
out
sub
cmp
jbe
xchg
dec
push
inc
jae
mov
bound
add
push
int
jb
mov
push
pop
scas
jae
insb
and
cmpsb
pushf
sbb
idiv
pop
xchg
push
imul
mov
aas
mov
push
cli
shl
mov
mov
stos
push
fxch
jle
mov
mov
int
inc
xchg
iret
mov
test
dec
iret
mov
adc
pop
push
dec
xchg
and
call
jb
mov
add
jmp
lret
cmp
pop
aad
cmp
aad
arpl
test
jmp
push
jmp
cld
adc
mov
jae
loop
cmpsl
mov
cmp
mov
mov
xlat
cmc
es
lock
das
adc
or
out
fmuls
and
out
pop
jno
or
fsubs
dec
int
clc
xlat
sbb
sarb
xchg
movsb
pop
test
mov
out
insb
lods
imul
add
lods
std
inc
popf
pop
loop
pop
push
or
push
inc
mov
ljmp
inc
inc
imul
xor
jns
stos
outsl
dec
sar
cltd
aad
cli
es
popf
out
mov
pop
mov
xlat
push
cmp
add
ds
sbb
mov
mov
jp
inc
dec
sub
jge
mov
pop
inc
repnz
push
nop
pop
loop
insl
js
test
in
or
loope
subl
test
clc
add
pop
lcall
mov
mov
cmp
lret
xor
jle
xor
loope
and
pusha
mov
xlat
in
xchg
jge
xchg
push
jns
push
subb
xor
sbb
cmp
and
push
mov
jle
jne
cltd
mov
loopne
addl
loopne
sub
add
inc
pop
sbb
add
test
inc
rclb
roll
lret
fwait
pop
fdivrl
repz
lret
pusha
out
inc
cs
fisttpll
mov
push
jnp
out
mov
adc
or
test
outsl
lods
dec
loopne
sbb
leave
xor
inc
jo
stc
xchg
aas
push
cmp
popf
mov
scas
int
pop
jle
sbb
mov
shl
mov
xchg
dec
add
in
adc
out
dec
add
insl
and
popf
imul
cmp
imul
shrl
jno
sub
mov
addr16
sbb
xchg
dec
rolb
lds
xlat
stc
cmpsb
lods
push
sahf
mov
and
push
add
mov
pop
push
jge
fwait
inc
or
xor
cmp
lret
rorl
addl
push
add
cmp
call
jp
cmc
int
out
subb
icebp
mov
pop
xor
stos
sbb
add
inc
lcall
mov
mov
out
push
push
hlt
mov
jo
movsl
mulb
sarb
rcrb
mov
xor
mov
mov
inc
sub
adcb
pop
repz
addr16
test
adc
ss
and
mov
push
inc
jmp
pusha
adc
mov
data16
out
inc
fldt
xchg
in
lock
lods
cwtl
and
or
lretw
dec
repnz
fsubl
fdivs
pop
xchg
jmp
mov
or
inc
testb
mov
nop
mov
inc
lret
repnz
and
test
jg
out
mov
jmp
pop
clc
imul
movsl
adc
xchg
push
add
mov
lret
add
pop
jns
movsb
inc
cltd
mov
pushf
add
cmpsb
xlat
inc
int
ljmp
and
xchg
lret
call
mov
sbb
aad
outsb
adc
repz
testb
ffree
pushf
mov
xor
cmp
adc
inc
pop
or
xor
jns
loopw
imul
dec
movsl
ret
push
fidivl
cmp
add
mov
je
cmp
xlat
call
jp
jge
mov
out
or
leave
test
push
enter
mov
cmp
fstl
cs
mov
push
lret
daa
mov
inc
je
es
pandn
jo
xor
jne
bound
mov
or
jno
iret
mov
aas
jb
mov
mov
push
pusha
mov
jno
mov
pop
jo
mov
dec
je
jle
xchg
xlat
dec
int3
mov
cmp
int
or
jnp
loop
pop
pop
jecxz
into
in
aaa
call
aas
jge
sbb
add
in
in
dec
test
xchg
or
out
inc
push
ret
lahf
les
pop
ja
lret
pop
ja
cmp
adc
dec
call
jecxz
adc
scas
imul
xchg
pop
iret
sbb
mov
lret
pop
push
hlt
add
push
das
je
and
or
lods
mov
or
fisubl
sbb
mov
mov
or
bound
xor
pusha
cmp
adc
sarb
addr16
mov
popa
daa
dec
and
add
inc
fsubl
push
cmpsl
push
jmp
jno
out
or
test
cs
add
add
dec
sbb
mov
stos
push
push
mov
adc
movsb
mov
push
mov
ja
ss
aas
pop
test
clc
idiv
popf
fs
scas
and
insb
xchg
inc
lcall
or
jae
imul
lret
sub
pop
inc
loope
and
add
out
xchg
pop
push
sub
jb,pn
iret
test
lds
imul
xor
xchg
sbb
pop
xchg
mov
and
popa
or
cli
sub
lock
pop
inc
xchg
in
stos
int3
inc
inc
pop
sbb
popa
cmp
das
sahf
lret
sbbl
push
sub
dec
push
mov
je
js
xchg
shrl
pop
aad
dec
mov
lret
xor
xchg
mov
xchg
imul
fsubs
mov
mov
push
mov
xor
dec
test
int
test
xor
imul
aas
repz
sahf
mov
xchg
inc
push
aas
sub
lods
loopne
ja
mov
dec
lret
or
inc
adc
gs
stos
push
cld
rorl
insl
jns
sub
inc
mov
mov
or
add
jb
push
cmpsl
add
dec
js
sti
scas
xchg
out
popa
xor
fdivrp
shrb
jmp
xor
mov
inc
rcrb
dec
aam
fidivrl
cld
les
sbbb
mov
cwtl
hlt
dec
sbb
mov
movsb
jne
or
xchg
enter
pop
dec
mov
lea
mov
lret
dec
fwait
push
and
std
ljmp
jle
insb
push
pop
add
call
or
add
ret
dec
addr16
in
stos
lcall
scas
push
dec
sub
inc
add
jp
add
bnd
jg
repnz
jle
add
jle
imul
into
rorl
cwtl
dec
outsl
popl
jne
lahf
imul
add
sar
movsl
jno
fisubl
dec
pop
adc
pop
dec
popf
mov
daa
push
in
mov
les
sub
fstpl
jl
dec
std
adc
pavgb
ret
fstpl
cmpsl
jns
mov
aad
mov
rclb
clc
lods
addr16
adc
cwtl
aam
pop
xchg
sbb
repnz
sbb
dec
int3
jnp
loop
scas
pcmpgtd
or
in
stc
jge
lahf
xor
xor
mov
aad
mov
dec
adc
jge
ss
out
push
add
stc
adc
es
enter
popa
out
mov
push
xor
dec
sti
pop
cmp
test
cmp
cmc
popa
mov
std
scas
scas
hlt
dec
pop
adc
pushf
bndstx
popf
lret
mov
inc
sub
movsl
pusha
push
rorl
ja
jo
sub
mov
js
sti
aam
cs
add
add
dec
movsb
push
add
or
adc
ss
jb
call
jmp
pop
pushf
enter
sbb
adc
dec
pop
out
xlat
shl
pop
inc
jae
xchg
call
or
es
ljmp
pop
dec
pop
sahf
sub
adc
inc
iret
add
das
push
js
mov
cmc
sbb
clc
sti
and
clc
xchg
sbb
xor
rorl
push
jb
mov
outsl
add
repz
cmp
push
test
or
sbb
sub
mov
fistl
add
mov
push
cwtl
int3
rolb
faddl
dec
aaa
fcmove
and
push
test
out
push
and
adc
push
repnz
dec
and
loop
xchg
pop
imul
test
shrl
loop
mov
repz
addr16
das
xor
aaa
add
adc
xor
jg
xchg
and
pop
push
mov
xor
add
cli
pop
add
cmp
pop
xor
jmp
push
jns
imul
out
xchg
add
js
mov
and
pop
xchg
adcl
cmp
into
mov
mov
fucom
pop
fldl
pop
cmpsl
sahf
shl
add
sbb
repz
jbe
dec
loope
cli
ljmp
xor
in
jecxz
sbb
xchg
jg
fsubrl
jle
lods
loopne
mov
loop
xchg
repz
adc
sbbl
add
pop
jb
add
arpl
pop
push
insb
out
or
cwtl
or
xchg
pop
cmpsb
sbbb
clc
mov
sbb
cmp
ds
and
mov
and
mov
mov
add
push
mov
cmpsl
dec
shll
and
test
dec
test
adc
xchg
fadd
inc
shlb
jb
lcall
movsl
test
clc
fstl
mov
mov
sarb
icebp
pop
test
loop
sub
sub
insl
adc
jg
pop
mov
int3
in
add
inc
in
and
dec
stos
mov
sahf
inc
sub
mov
mov
repz
popf
addb
or
in
dec
loope
and
adc
or
jmp
mov
es
test
ret
mov
adc
fdivl
dec
push
inc
test
ret
or
mov
adc
lods
popf
or
lahf
inc
jb
ret
jo
inc
lds
mov
sbb
cltd
cmp
movlps
sub
pushf
pop
cli
inc
adc
loopne
xor
xor
sbb
xchg
or
push
and
mov
sti
cmp
sbb
push
mov
pop
mov
push
adc
mov
sub
and
les
lcall
mov
cmp
xor
sahf
and
hlt
je
cmc
xchg
push
mul
push
lods
test
dec
inc
or
mov
stc
dec
lea
mov
bound
push
adc
iret
mov
mov
push
lahf
xor
inc
xchg
add
testl
xchg
or
jno
xchg
xchg
mov
push
inc
or
test
js
dec
cmp
pop
adc
jno
and
push
out
or
das
xor
mov
pop
jg
popw
lea
lahf
shrl
fmull
mov
cmp
inc
fsub
mov
or
lods
jle
or
inc
or
cltd
gs
enter
aas
dec
cltd
adc
xchg
cmp
xor
fisttpl
cmpsl
mov
xor
cmc
jo
jl
stos
mov
rol
push
pop
mov
add
mov
test
imul
loope
mov
fadd
jo
jp
aam
js
loop
adc
push
xor
jge
in
jnp
fs
sbb
inc
pusha
fidivs
xor
lcall
jno
adc
lea
jae
xchg
outsb
push
jns
add
cwtl
adc
imul
and
outsl
scas
sub
test
dec
lahf
jae
jecxz
xchg
mov
jecxz
mov
das
iret
icebp
shrl
cs
lret
sbb
dec
lret
sbb
add
xchg
push
ja
shlb
dec
lods
loope
dec
in
mov
fs
mov
and
js
inc
mov
lcall
adc
aas
cli
adcw
bound
lcall
cmpl
jle
js
xor
sahf
lret
xchg
push
pop
orb
sub
jns
add
clc
mov
sahf
or
movsl
in
ficomps
jns
jo
mov
xor
inc
outsb
xchg
adc
mov
sub
xor
test
sub
nop
push
in
sub
xchg
mulb
loope
inc
xchg
push
jmp
test
mov
push
addr16
adc
sbb
cli
fmuls
xchg
mulb
ds
stos
adc
sbb
scas
mov
cmp
out
in
push
ljmp
or
mulb
and
rorb
scas
sti
div
inc
mov
dec
idivl
hlt
cli
push
mov
xchg
sbb
push
fstps
pop
fisubrl
repnz
mov
imul
adc
inc
mov
insl
mov
sarl
jle
add
jo
les
jo
xchg
push
cmp
cs
mov
test
jnp
mov
stc
stc
ja
out
cmc
cld
jp
jns
sub
xchg
sarb
imul
xchg
jge
loopne
ja
int
das
cmp
add
dec
test
xor
enter
outsb
repnz
inc
in
adc
sbb
dec
mov
int3
fs
aas
and
neg
shrl
inc
aas
ds
or
sbb
xchg
es
dec
es
and
lret
push
pusha
test
jo
sbb
push
and
mov
aad
fstpt
dec
pop
inc
outsl
mov
add
enter
pop
dec
lock
icebp
mov
mov
add
les
ljmp
mov
subb
add
xchg
scas
fistpll
xlat
andl
daa
cmp
cmp
xchg
inc
addr16
loope
push
pop
sbbl
mov
pop
std
imul
stos
cmp
stc
or
xor
mov
repnz
jo
add
leave
cmp
mov
ss
loope
push
dec
mov
std
loop
xor
add
inc
xor
jg
stos
mov
pop
push
push
test
andb
cmp
inc
jle
ret
test
orl
clc
pop
sub
and
or
xor
xchg
sub
pop
inc
inc
and
arpl
lea
aas
stos
xchg
out
fcmove
add
outsb
sub
arpl
push
push
cltd
mov
sbb
test
jb
pop
adc
pop
addr16
daa
mov
sbb
das
jns
push
js
out
inc
push
roll
mov
stos
or
fidivl
sbb
xlat
sti
fs
mov
jns
adc
loop
or
cmp
cmp
mov
pop
dec
mov
pop
imul
sub
pusha
jno
jno
inc
mov
jge
jo
aas
pop
xor
push
jmp
fcmovnb
lret
enter
les
mov
inc
push
fiadds
bound
in
cmp
adc
pop
and
in
cmp
mov
pop
and
jecxz
jnp
rcll
sub
pop
cmpb
pop
mov
stos
test
shll
cmp
add
and
jl
or
out
xchg
popa
mov
das
and
cld
and
repnz
repz
lods
negl
insb
gs
mov
sub
or
cmp
jbe
roll
dec
movsb
inc
dec
pop
rcl
mov
lock
adc
inc
psubd
mov
xor
jge
xchg
lea
std
stc
enter
sti
mov
xchg
sub
js
or
xchg
add
test
aam
inc
jno
xchg
icebp
inc
xor
or
pop
pop
faddl
mov
pop
mov
adc
sarb
stc
clc
ffreep
inc
int
or
ss
setne
fs
pop
and
xlat
arpl
or
cli
or
into
icebp
push
popa
loop
mov
or
sbb
sub
mov
pop
movsl
inc
push
xlat
sbb
scas
stc
dec
aam
cli
dec
imull
mov
addr16
jae
je
and
stc
loop
inc
cmc
out
mov
mov
and
xor
das
push
lea
lock
push
cld
dec
popf
insb
cmp
aad
sub
inc
xor
mov
xor
cld
inc
mov
mov
out
and
jbe
add
mov
outsl
in
cwtl
dec
mov
and
mov
cli
shl
sbb
sbb
push
mov
and
loop
arpl
xchg
mov
fstpt
dec
jb
mov
push
aaa
imul
shlb
pop
subb
insl
cmpsb
in
popf
sbb
ja
inc
cmp
jnp
mov
xchg
xor
mov
pop
push
jp
and
dec
xlat
out
push
push
sub
cltd
bnd
jne
mov
mov
jne
push
push
fimuls
pusha
jp
sub
lcall
fisttpll
lock
pop
inc
ret
cmp
mov
add
pop
fisttpll
neg
pop
imul
outsb
cmp
stc
ss
in
iret
mov
dec
je
inc
push
cltd
adc
push
imul
sbb
aad
jp
hlt
stos
les
mov
xchg
aam
popa
movsl
inc
loop
in
scas
and
mov
xor
jns
mov
call
lcall
inc
jg
das
pop
test
setle
pminub
mov
inc
and
aad
adc
jecxz
aas
fisttps
in
fdivrs
sbb
ret
inc
jle
enter
loopne
push
jl
xchg
add
inc
fistpl
shl
mov
xchg
pop
pusha
aas
mov
pop
cmp
outsb
and
mov
push
inc
xchg
dec
push
jns
push
ds
bound
pop
or
mov
add
lahf
loope
mov
mov
ret
xchg
shl
test
aaa
nop
mov
subl
xor
ret
cmp
dec
aaa
pop
cmpsl
pop
mov
mov
rcl
mov
andl
sbb
jecxz
mov
inc
cwtl
out
pop
rolb
pop
add
ljmp
or
fcompl
out
rorb
push
outsb
fldcw
in
nop
lcall
das
xorl
jge
frstor
lods
shll
adc
push
std
loope
push
imul
movsl
movsl
mov
jno
test
mov
mov
adcb
adc
test
repnz
xchg
mov
inc
or
lock
cs
ja
mov
sbb
daa
fistpll
xchg
adc
bound
imul
lahf
and
nop
mov
fucom
mov
xor
std
add
ja
test
xchg
js
adc
mov
add
push
fcoms
sub
pop
pop
hlt
xor
mov
sub
jmp
mov
insl
test
mov
push
aaa
sub
xlat
stc
pop
inc
inc
fildl
jne
es
jle
adc
mov
shrb
enter
mov
int
cmpl
out
push
insb
lods
movsl
pop
shlb
call
pop
iret
mov
in
leave
add
fnstsw
mov
ds
and
pop
xor
movsl
sbbb
xchg
sarb
and
adc
popa
in
sbbb
jge
daa
push
rolb
sahf
sub
arpl
stc
adc
nop
out
dec
ds
or
cmp
mov
ficompl
js,pn
mov
xor
xchg
push
jge
ret
leave
sbb
inc
push
pop
mov
into
pushf
inc
call
shll
call
cmpsl
xchg
sub
idiv
aad
or
inc
fmull
lret
test
ret
xlat
test
in
xchg
mov
loop
add
iret
cmp
out
jecxz
inc
pop
and
ret
mov
sub
enter
aam
or
lret
jecxz
push
call
xor
mull
inc
pop
jae
orl
sbb
mov
pop
jg
sub
mov
xchg
push
std
fdivrl
dec
test
leave
mov
cmp
push
das
mov
jbe
test
cli
lcall
or
movsl
and
add
and
popa
adc
iret
mov
jns
xor
shlb
mov
in
repz
mov
jge
mov
imul
insb
in
jg
pop
push
mov
mov
add
adc
pop
stos
fdivrp
jg
jnp
adc
nop
add
sti
mov
rol
jnp
icebp
push
scas
push
mov
test
push
scas
xlat
dec
cmp
shll
push
fiaddl
pop
mov
and
jmp
xchg
push
mov
or
and
xchg
insl
push
cmp
lock
inc
gs
or
pop
cmp
or
lock
cld
mov
shrl
and
jnp
jg
xor
ja
fsubp
jg
inc
sbb
and
divb
divb
mov
add
into
pop
or
mov
xchg
push
dec
xor
xor
clc
repnz
mov
xchg
or
xor
adc
push
jne
cmc
push
xchg
xor
mov
xor
xchg
mov
mov
mov
pop
icebp
or
into
sub
mov
mov
sbb
and
test
into
or
pop
xchg
lahf
adc
mov
sub
test
outsb
sarl
xor
sub
and
xchg
into
and
gs
xorl
mov
ds
sub
dec
cmpsb
lahf
mov
pop
fisttps
daa
pop
pop
pop
mov
int
fsubs
mov
push
xchg
test
push
daa
cmp
fcoml
stos
sub
sub
mov
push
imul
lret
cld
jle
mov
push
xchg
mov
add
je
pusha
into
mov
mov
pusha
pop
nop
cmpsl
aad
add
cmp
rclb
mov
push
and
and
ss
fisttps
add
add
popa
xor
lret
fimuls
sbb
insb
aas
out
clc
cs
add
sbb
push
mov
xor
in
or
xor
mov
imul
or
jne
xchg
stos
push
push
fstpt
and
repz
dec
mov
jnp
mov
es
lock
or
xlat
cltd
push
or
stos
imul
inc
mov
in
mov
add
das
popa
mov
xor
aam
mov
shll
or
cmpsb
mov
mov
aam
sbb
add
loope
lahf
orb
jg
cltd
sbb
in
fs
mov
shlb
clc
in
jge
or
jg
fnstcw
cmp
jle
pop
cli
cld
or
movsb
outsb
dec
mov
mov
rcrb
popf
mov
iret
mov
into
fsubrs
shll
fists
xor
aad
xor
inc
lds
pmullw
leave
or
xlat
jmp
fwait
mov
sarl
sar
lods
cmpl
add
and
mov
xchg
loopne
or
fiaddl
aam
dec
shrb
imul
test
test
push
data16
repnz
mov
test
aam
inc
mov
mov
cld
xor
add
mov
repnz
mov
cmp
out
fistpl
fucomp
cmpsl
imul
insb
jmp
outsl
outsb
call
pop
xchg
inc
stos
test
pop
fcmovnu
mov
popa
pop
xchg
lahf
jecxz
in
mov
or
add
sub
sbb
lret
fsubl
pop
jo
es
lahf
adc
in
nop
das
pop
and
jge
adc
adc
inc
jle
fwait
in
pop
mov
sbb
xchg
inc
adc
in
jecxz
jnp
pop
dec
leavew
cmpsl
jmp
cld
lcall
inc
loopne
fstpt
imul
insb
pop
lret
mov
mov
rcrb
mov
adcl
add
cs
movsl
mov
lods
cmp
pop
push
je
jnp
sub
jg
cmp
ds
sahf
mov
aam
push
sub
inc
outsb
mov
inc
jp
pushf
push
stc
inc
sarl
enter
and
out
dec
push
out
push
test
stc
pop
sub
ret
pop
xor
std
popf
and
in
mov
cmpb
lea
fucom
mov
dec
sbb
ret
mov
jbe
scas
lea
sub
xchg
dec
push
sbb
lea
mov
jnp
or
dec
push
aad
jmp
ror
jmp
mov
add
icebp
lcall
enter
mov
repz
push
lds
sbb
rorb
cmpsb
adc
icebp
movsb
push
inc
mov
repz
and
int3
mulb
pushf
and
add
xchg
ficoms
xchg
je
and
outsl
loopne
aad
jl
or
shrl
push
js
les
adcl
cmp
fnstenv
shl
sub
jbe
jb
test
sub
insl
xchg
iret
fs
xchg
push
push
mov
push
outsb
lret
xchg
enter
ljmp
int
lret
bound
jo
addr16
inc
xor
pushf
into
lods
xchg
inc
in
dec
sbb
add
add
loopne
lea
out
cmpsb
sub
add
dec
rcrb
out
mov
inc
int
iret
icebp
gs
add
push
or
mov
jmp
dec
movsl
loop
fcmovnu
std
in
mov
dec
pop
outsl
push
movsb
xorb
cmpsl
adc
mov
js
push
shl
leave
cli
lods
int
fs
stc
push
les
mov
add
data16
bound
mov
mov
dec
inc
sbb
and
sub
add
test
enter
pop
xchg
in
lods
nopl
fisubs
mov
int3
out
loope
out
ss
jmp
js
fisubrl
or
fiadds
repnz
out
pop
stos
add
pusha
xor
testb
cmc
outsl
or
pusha
push
xor
mov
rol
jmp
sbbb
mov
mov
iret
jp
leave
xchg
icebp
push
jo
xchg
lcall
xchg
or
mov
add
int
js
cmp
scas
lock
inc
repnz
fists
adc
lahf
sarl
lods
popf
xchg
jo
pushf
cmp
xchg
pop
push
es
pop
push
sbb
in
xchg
lea
sbb
stos
cmp
ss
mov
scas
dec
mov
jo
sti
into
push
adc
inc
dec
or
stc
test
jb
add
sbb
pop
enter
ds
push
les
int3
jmp
add
mov
pop
xchg
push
jmp
mov
icebp
std
es
imul
jmp
hlt
sar
cwtl
rcrl
aas
pop
mov
in
adc
xor
cmp
push
sub
adc
sbb
sub
fcompl
sub
dec
sbb
cmp
jno
rep
sbb
sbb
arpl
mov
shl
stc
xlat
adc
cmpsl
pop
shll
paddq
stos
push
je
push
nop
stc
popa
and
pushf
push
mov
cld
loop
xchg
jbe
loop
dec
addr16
or
pusha
pop
jl
cmp
mov
inc
cmp
loopne
adc
jae
int3
xchg
add
xchg
fdivrl
xor
aam
push
mov
inc
jge
test
daa
push
test
pop
add
and
in
push
pop
data16
sbb
adc
adc
cmc
jb
mov
dec
stos
data16
and
or
dec
sub
adc
mov
or
and
mov
aam
pop
and
test
nop
sti
fwait
adc
outsb
mov
jle
je
push
ds
sbb
lds
inc
shll
mov
cmp
sarb
pop
bound
jo
and
push
pop
bound
adc
mov
xchg
sub
test
mov
jae
mov
jg
call
pop
jbe
jge
mov
adc
sti
pusha
sbb
mov
mov
sub
into
clc
xchg
arpl
insb
mov
sub
aad
xchg
and
cld
lods
pop
adc
sbbl
inc
cmpb
mov
lods
push
xor
xor
ret
xor
inc
shr
jp
jmp
in
cmp
lahf
push
push
cs
sub
jns
int3
orb
popa
add
cmpsl
ss
xchg
or
inc
das
iret
push
adc
jb
jns
aam
shl
lret
out
stos
cmp
adc
out
fmull
fs
in
cmc
push
adc
pop
xchg
out
cmp
mov
lret
dec
push
mov
xor
mov
fstpt
inc
add
cmp
js
cmpsb
mov
push
mov
jge
aaa
loopne
jns
inc
faddl
jg
hlt
fsubs
fs
js
push
add
xchg
cmpsl
ror
popw
pop
fiadds
mov
push
aas
push
clc
fincstp
cmp
addr16
gs
popf
pushf
sarl
lods
and
lea
fdivs
mov
adc
mov
jno
jmp
bound
push
loope
mov
addr16
roll
pop
addr16
lods
ja
xor
movsb
cltd
sbb
dec
xchg
inc
repz
lods
cmp
fdivrl
es
sbb
cmpxchg
cmpsl
or
jg
sbb
fistpll
aas
push
or
push
dec
test
in
jg
mov
imul
loope
ljmp
mov
lret
jae
scas
xor
aas
mov
cmpl
repnz
scas
insl
mov
daa
pop
out
fadd
cmpsb
jle
and
out
inc
fcomps
mull
sub
jae
rol
mov
data16
dec
xlat
cmp
int3
dec
mov
das
std
or
adc
pop
mov
mov
sbbb
cmp
mov
pop
jmp
inc
out
mov
xorl
int
fisubrl
ret
sub
les
mov
in
push
daa
xchg
das
adc
mov
inc
add
lds
mov
aam
lea
cwtl
push
jb
lods
in
mov
jne
les
nop
mov
push
or
data16
push
xchg
pop
add
fisubl
dec
arpl
shl
arpl
add
jns
fists
sub
cmp
xchg
movsl
aad
das
mov
pop
or
cltd
push
movsb
dec
sub
jecxz
ljmp
jge
sub
push
aad
xor
stos
dec
lcall
mov
mov
or
cmp
ljmp
stos
mov
out
in
add
dec
xchg
xchg
cmp
add
jb
inc
lds
mov
mov
fsts
sahf
ret
mov
mov
popf
push
xchg
movsl
data16
push
jge
rcl
fsubs
xchg
popf
and
int
mov
push
push
test
test
lods
mov
stc
test
push
push
mov
inc
add
sti
stc
xor
aad
movsl
fidivs
jmp
lods
sbb
pop
fdivrs
mov
frstpm(287
sub
popf
lock
adc
cltd
mov
test
out
cli
mov
loopne
stos
lret
xor
insl
clc
imul
test
movsb
pop
sub
loope
imul
cmp
and
push
inc
inc
adc
inc
inc
sahf
aaa
dec
adc
fisttps
sub
cmpsb
push
mov
movsl
adc
pop
leave
int
add
push
mov
xchg
cld
arpl
sub
cmpsb
lods
or
in
sbbl
mov
push
inc
xor
lret
add
test
shll
xorl
mov
pop
sbb
int3
test
stc
fisubl
popa
test
adc
arpl
out
fldt
adc
les
pop
dec
jae
xchg
loop
pop
lock
je
repz
sub
and
aam
pop
sbb
je
mov
inc
aam
sub
add
inc
mov
dec
fisttps
fistl
xlat
pop
push
xchg
jnp
out
cmp
loopne
cltd
xor
hlt
divb
loop
push
pop
arpl
lds
pop
fwait
addr16
cmpsl
xor
mov
hlt
pop
lahf
cmpsl
xor
addr16
cmpsl
mov
xor
xor
ret
lods
lock
sbb
dec
repz
mov
pusha
jmp
xchg
fldcw
mov
mov
test
loope
push
imul
ret
pop
cmp
sarb
jnp
cli
xor
push
inc
adc
mov
cmp
js
push
inc
adc
jecxz
jl
sbb
push
push
outsb
sar
dec
test
lahf
adcl
sbb
mov
lods
xor
sub
xchg
add
sets
or
ljmp
push
adc
std
pop
sub
ljmp
push
pop
ret
call
sub
cmp
rorl
jb
inc
jae
aad
mov
fadds
in
shll
fcoml
jbe
test
stos
mov
shlb
xchg
hlt
jge
loop
outsl
jp
rcrl
jle
inc
adc
les
enter
sbb
sbb
jecxz
aas
push
fstl
push
insl
push
stc
insb
repz
cmp
stos
in
and
outsb
int3
ret
jle
stc
pusha
aam
mov
aad
mov
mov
xor
fwait
xor
mov
stos
addl
les
or
pop
sub
sbb
ss
or
ret
mov
and
pop
cmp
pop
push
rcr
iret
pushf
test
fisttps
sbb
mov
xor
sbb
shr
test
xor
or
outsb
or
icebp
pop
arpl
js
jne
imul
xchg
adc
xabort
cmpsb
daa
nop
ret
jb
dec
imul
mov
bnd
push
jbe
outsl
cmp
jle
dec
xlat
add
fstpl
mov
cmpl
mov
stos
test
ljmp
or
mov
add
adc
js
loope
jmp
or
mov
ja
jmp
sub
lret
mov
pushf
es
pop
jne
test
stos
push
mov
ret
in
lret
mov
cli
in
jae
leave
popa
ret
push
jl
dec
nop
mov
push
dec
lods
jp
cmp
dec
mov
dec
das
lds
xchg
mov
jo
stos
jmp
xchg
ficompl
cmp
int
rep
out
outsl
cmp
push
mov
call
pushl
pop
cld
push
gs
and
mov
inc
subl
test
add
jle
sbb
pop
mov
outsl
mov
and
mov
add
sbb
pop
lret
gs
cmp
les
mov
sarb
pusha
in
in
popf
cmpsb
inc
enter
xorb
rorl
pop
lahf
jo
xchg
arpl
mov
push
shrl
test
mov
test
add
shll
adc
mov
cltd
sub
xor
pop
sbbb
push
iret
and
push
push
test
inc
sub
xchg
outsb
cmp
xchg
ljmp
outsl
adc
adc
out
mov
or
mov
not
stos
in
dec
inc
mov
arpl
push
sbb
add
aad
pop
orb
push
hlt
testl
dec
mov
xchg
mov
loope
das
shll
lret
or
mov
lcall
sub
pop
popf
and
imul
aam
fwait
jl
cmp
aaa
jbe
shrl
insl
fldl
xor
ljmp
push
cmp
add
inc
jns
int
popa
mov
push
dec
mov
cmc
movl
pop
in
xchg
movsl
lods
mov
push
lds
out
push
repnz
cltd
in
enter
pop
movsb
mov
xchg
pop
push
pop
bound
aas
push
std
faddl
mov
mov
mov
adc
push
sbb
xchg
mov
push
push
mov
xor
into
enter
mov
scas
jge
lret
ret
xor
sub
test
mov
sub
and
sub
movsl
inc
nop
push
add
loope
and
pop
inc
repnz
inc
movsl
cmpsl
mov
push
push
fadds
mov
push
inc
ss
in
inc
fnsave
cmc
add
lods
cmp
push
or
imul
out
std
dec
sbb
xor
push
int3
pop
dec
inc
sub
loope
push
pop
cld
push
enter
jecxz
mov
sbb
xlat
push
jb
add
cmpsl
mov
mov
loope
aaa
aad
or
outsb
and
stos
int3
mov
ror
xchg
push
sub
mov
inc
std
sub
add
inc
and
loopne
out
insl
jne
dec
or
cltd
rcrl
inc
lods
add
imul
xchg
out
movsl
xchg
sahf
push
pop
movl
push
insl
lcall
outsl
loop
or
out
jg
rolb
push
dec
flds
fs
fdivs
jge
or
mull
outsl
xor
lcall
bound
sub
mov
and
xchg
mov
loop
movsb
lret
or
mov
nop
outsl
inc
xchg
sub
mov
mov
or
mov
out
leave
sahf
or
fcmovnbe
stos
mov
ja
mov
cmp
mov
lods
mov
inc
mov
sub
jnp
pop
stos
inc
pop
and
cmp
sub
push
pop
int3
jge
test
bound
cmpsl
adc
jmp
xor
sub
inc
test
dec
mov
push
fwait
insl
movsl
aas
jecxz
push
lods
xor
insl
adc
jmp
jae
xchg
pop
daa
push
into
ljmp
sbb
jnp
adc
mov
movb
xchg
mov
and
mov
es
xor
jbe
push
and
lcall
add
jmp
jnp
push
les
jne
lock
xchg
and
inc
outsb
insb
or
sahf
xlat
pop
xor
mov
icebp
aaa
mov
addr16
imul
dec
pop
aas
in
mov
mov
inc
xchg
scas
sub
movsl
das
shlb
inc
inc
pmulhuw
aam
mov
xchg
or
mov
iret
and
pop
shrl
add
ficoms
loopne
in
mov
dec
add
dec
xor
push
fimuls
mov
sub
test
pop
call
lods
inc
cld
cmpsl
mov
mov
and
rcl
bnd
stos
fs
aas
fidivrs
jb
sar
movsl
ljmp
hlt
pop
inc
add
or
pop
faddp
ds
mov
mov
dec
sarl
das
jbe
fnstsw
xchg
dec
aam
cmp
sahf
or
inc
dec
in
fs
mov
movsl
pop
or
or
bound
sti
out
mov
out
cmp
scas
jno
xchg
and
push
shr
loopne
lea
fmulp
push
icebp
jle
pop
xor
clc
add
jae
inc
push
pop
mov
rcll
repnz
pop
xchg
sbb
pop
add
inc
dec
jb
mov
andl
push
xchg
pop
adc
sub
pop
and
ret
add
sub
aaa
int
fbstp
mov
xchg
or
or
adc
aad
adcl
stos
jno
adc
sub
repnz
push
adc
das
mov
jle
pop
jg
insl
and
xor
cmpb
shlb
pop
jns
stos
shlb
push
rcl
out
dec
or
cwtl
xor
pop
pop
les
dec
icebp
mov
insb
daa
adc
mov
repz
popf
divb
lcall
lods
outsb
mov
xor
fs
pushf
pop
shrb
xchg
mov
add
cmp
in
dec
clc
ljmp
inc
pop
mov
nop
and
sbb
xchg
mov
mov
pop
enter
push
cltd
dec
push
push
pop
mov
push
cmc
pop
sbb
inc
pop
xchg
gs
data16
xchg
mov
xor
addl
cld
xorl
aam
and
loop
cmpl
jno
cwtl
pop
out
ds
mov
push
arpl
adc
repnz
jo
cmp
int
jns
fmull
fcoml
jecxz
dec
sbb
and
and
popl
push
dec
sub
out
mov
subb
lods
out
xchg
inc
icebp
outsl
jns
mov
sahf
dec
inc
out
stc
cmp
push
mov
gs
jbe
arpl
mov
repz
jb
lret
dec
sub
push
ret
push
push
or
mov
shl
xchg
inc
pop
sbb
and
arpl
scas
inc
pop
iret
std
sbb
in
divl
test
lea
add
jns
fwait
sub
sub
cmp
mov
or
inc
aas
clc
jno
add
add
int
add
lds
jge
inc
mov
xchg
loope
int
adc
push
and
stos
add
fwait
imul
pop
sub
ficompl
xor
jl
pop
lret
add
in
dec
xor
xorb
jo
arpl
stos
lea
int3
pop
sbb
mov
fwait
arpl
out
fimuls
fsubrs
out
adc
lret
sbb
lods
xchg
add
cld
aam
xor
xor
add
lock
pop
ret
movsl
pushf
les
test
jecxz
push
sbb
sub
hlt
out
add
or
arpl
jecxz
mov
adc
popf
arpl
pop
negl
out
lahf
inc
test
push
push
mov
add
aad
sar
pop
adc
inc
mov
popf
and
xchg
push
or
xlat
popa
mov
xlat
fdivs
push
int3
mov
mov
mov
pop
push
pop
outsb
faddl
or
pop
xor
scas
scas
enter
mov
mov
adc
scas
dec
adc
mov
add
push
add
xchg
sarl
xor
mov
mov
cld
shrd
and
out
inc
fwait
inc
mov
cli
ljmp
rclb
jge
cltd
or
pushf
lods
cmp
lds
scas
or
jne
pop
arpl
rcr
sahf
push
jmp
push
inc
shlb
pushf
mov
and
ljmp
stos
mov
mov
lret
push
scas
es
fldl
in
sub
sbb
mov
or
daa
ret
int3
pop
pop
imul
mov
mov
xchg
mov
addr16
loop
out
inc
mov
cld
fldl2e
daa
mov
push
call
xlat
and
push
lcall
cmp
dec
incb
inc
jmp
and
lcall
pop
inc
fwait
mov
js
cli
imul
xorl
pop
test
ret
mov
movsl
sbb
pop
dec
filds
xor
sbb
push
imul
in
lret
add
mov
ljmp
add
jmp
pop
test
push
sti
adc
xchg
fmull
dec
das
and
ljmp
cmp
clc
test
repnz
rcrl
shrb
test
movsb
mov
pop
cmp
cmp
jmp
subb
push
call
sahf
lret
or
pop
insl
cmc
out
es
into
xor
inc
and
neg
mov
mov
pop
pop
divb
daa
insl
or
cmpsb
dec
iret
push
ret
or
xchg
in
jge
outsl
outsl
in
cmp
es
aad
adc
add
fnstenv
pusha
mov
xchg
sbb
cmp
add
mov
pop
stos
cmp
call
imul
pop
icebp
es
jo
mov
shrl
jbe
sbb
sbb
jge
repz
jle
lea
sbbl
pop
cld
dec
mov
cmp
mov
add
pop
loope
and
mov
cmp
sub
xchg
inc
xchg
call
cwtl
mov
imul
fscale
lods
es
jbe
or
dec
rorl
pop
aad
ds
in
cltd
xchg
or
das
xor
push
jmp
xchg
mov
sti
and
arpl
mov
mov
das
hlt
adc
mov
lods
dec
jb
icebp
dec
mov
roll
pop
push
shl
movsb
in
xchg
int
pop
and
pop
insl
push
pop
int3
mov
ss
dec
gs
loopne
cmpb
scas
push
xchg
scas
mov
xchg
sbb
ljmp
cld
lret
cs
xor
repnz
in
cli
loopne
jg
int3
sahf
stos
stos
and
sbb
mov
xchg
sbb
adc
out
jecxz
sbb
aaa
mov
inc
jne
sub
add
test
imul
push
rorb
mov
pop
in
imul
xchg
repnz
push
inc
adc
int3
sub
fs
lock
addl
sbb
xor
mov
fs
dec
ljmp
xchg
mov
loopne
mov
aam
jmp
push
insl
inc
jle
mov
movsb
test
pop
push
xor
adc
jb
pop
sub
loope
aas
pop
shlb
cwtl
movsl
or
xor
or
adcb
cmp
mov
xor
idivl
pop
jecxz
ret
pop
repz
dec
daa
insl
mov
ret
gs
adc
pop
push
scas
test
mov
lea
mov
loope
adc
cmp
rcl
adc
pop
sti
test
cwtl
add
push
rcll
jmp
or
popf
cmpsl
mov
mov
addr16
and
sbb
xchg
push
xchg
pcmpgtw
jns
ret
xchg
popf
mov
pop
xchg
leave
dec
iret
mov
and
pop
xor
mov
jl
jecxz
jbe
int
daa
inc
sbb
xchg
std
mov
inc
mov
hlt
fldcw
push
ljmp
int3
call
jmp
or
add
repnz
loopne
mov
in
sbb
pop
push
fwait
adcl
aaa
mov
lcall
out
push
sub
push
das
repnz
jle
rcrb
push
push
push
xlat
ret
out
je
or
inc
imul
adc
mov
inc
ret
push
jp
adc
fisttps
movsb
xchg
xchg
push
imul
and
cltd
push
inc
or
mov
jge
cli
mov
out
xor
cmpsb
les
and
add
into
xlat
or
xor
mov
sbb
adc
fnstcw
mov
movsb
cmpsb
lret
dec
rcl
add
iret
shl
jp
loopne
mov
xor
xchg
out
stos
push
dec
mov
push
push
mov
sbb
test
sub
fwait
and
mov
inc
aaa
and
or
inc
sub
sbb
repz
pop
jp
add
xchg
shlb
divb
call
rcrb
bound
mov
cld
xchg
das
inc
shrl
and
mov
push
fldl
adc
push
add
cmp
push
and
xchg
jl
cli
push
and
ss
sti
dec
dec
xlat
xchg
adc
mov
std
jl
adc
lahf
popf
aas
mov
mov
lret
jb
movhps
and
or
add
rep
adc
rorb
shrl
xchg
fsubrl
popf
or
pop
jle
daa
enter
sub
mov
dec
jnp
outsl
push
rclb
ljmp
or
in
in
cs
mov
mov
data16
jg
roll
dec
mov
outsb
xor
mov
ljmp
shll
gs
js
je
pop
jne
jmp
inc
adc
pusha
or
fldl
sub
dec
leave
add
mov
cmpsl
idivl
xchg
xor
pop
sbb
and
add
leave
xchg
outsl
fnstenv
rcll
sbbl
xchg
push
dec
scas
and
jbe
xlat
xor
ret
fs
sub
pop
dec
jo
add
lahf
add
loopne
xchg
push
mov
ret
stc
pop
add
mov
shlb
in
sbb
add
flds
ss
sti
push
ja
and
sub
cli
cs
popf
pusha
mov
fcmovb
movntps
mov
jne
lahf
or
mov
push
or
rol
jne
and
outsl
fistl
xchg
cmp
inc
movsl
jo
ficoml
dec
sub
repz
mov
mov
xchg
scas
sbb
pop
iret
jbe
ljmp
pop
dec
test
cs
mov
test
daa
cmp
leave
ss
dec
data16
xchg
xor
repnz
out
clc
adc
sub
adc
jge
fdivrp
scas
lcall
pusha
jne
enter
fmull
adc
mov
fwait
jbe
add
into
xor
jmp
sub
and
cmp
fstps
pusha
sbb
fsts
vshufps
dec
jo
dec
gs
xchg
sbb
je
xchg
pop
fistpl
ljmp
mov
push
sti
and
jae
xor
movb
cs
push
jno
sbb
or
mov
mov
fwait
aam
xor
nop
xchg
dec
popf
in
xor
add
pop
dec
pop
xchg
lods
int3
or
or
mov
or
pop
ret
pop
int3
cmp
and
mov
dec
jmp
out
pop
sbb
int
mov
push
test
das
pop
mov
cmc
push
mov
inc
dec
stos
push
lods
mov
push
out
enter
cmpsb
mov
call
imul
xchg
mov
dec
cmp
inc
push
pop
sbb
or
xchg
mov
rcll
rcrb
rcrl
add
iret
sub
mov
ss
sub
mov
sub
in
cmp
dec
jb
fcmovne
jbe
stc
stos
jle
sahf
cmp
and
add
repnz
cli
popa
push
pushf
cmp
jle
and
fs
ror
popf
fldenv
mov
rcll
xor
sarb
add
inc
sub
data16
push
cltd
icebp
mov
andl
enter
xor
fdivr
cmpb
mov
ret
movsb
movsb
aad
out
jecxz
mov
adc
bound
jle
xchg
outsl
and
sbb
je
push
xlat
lahf
in
push
ret
and
sub
sbb
stos
mov
hlt
cmp
stos
enter
mov
fisubl
pop
pop
or
sbb
jb
cmp
push
pop
out
ss
sub
pop
sub
das
dec
jg
mov
je
lods
mov
js
inc
leave
sbb
enter
hlt
sbb
or
jle
shl
iret
mov
pushf
cmpsb
jmp
sub
je
mov
mov
add
jb
iret
lcall
jne
jmp
mov
inc
sub
lcall
movsl
xor
fldl
lods
cmp
xchg
out
out
pop
xor
and
sub
mov
popf
iret
inc
sarb
jb,pt
mov
repz
js
mov
movsb
outsl
xor
xchg
cltd
cmc
mov
mov
js
xchg
inc
jg
dec
int
pushf
cs
fnsave
adc
dec
jge
fisubrl
js
adc
jmp
and
adc
jnp
and
sub
xchg
xor
mov
push
pop
cld
scas
sti
test
movsb
xchg
repz
into
in
aaa
fmull
into
fdivs
popa
or
or
insl
nop
sahf
sub
inc
xchg
xor
aam
cmp
mov
inc
or
adc
sahf
cmp
dec
int
setge
pusha
data16
scas
aad
and
jp
imul
ret
cmpl
mov
sub
xchg
jo
cmp
in
cmp
out
jbe
shrl
pop
rdtsc
xor
out
mov
fildl
cli
or
flds
or
mov
sarb
jnp
stos
mov
loopne
sbb
or
movsb
imul
xrelease
cli
loop
fs
rorl
xchg
xor
mov
xor
jae
fidivrs
daa
scas
or
shll
inc
or
sub
loopne
test
mov
sti
flds
ss
xchg
pop
sbb
or
dec
xor
jbe
psubsb
andl
inc
push
imul
xchg
mov
data16
sarl
or
fists
xchg
pushf
sbb
sbb
and
iret
jno
and
insb
pop
mov
mov
jg
sbb
ja
pop
lock
ds
aaa
adc
mov
pop
jnp
in
adc
adc
xor
jle
sub
xor
movsl
cmp
pop
roll
test
pop
pusha
mov
jge
mov
fimuls
inc
mov
cmp
sub
lret
leave
cmp
pop
clc
je
push
sahf
bound
adc
adc
sahf
sti
mov
mulb
fucomip
sub
clc
aaa
push
push
sahf
inc
adc
xchg
cltd
pop
mov
jle
inc
addb
push
dec
mov
sahf
jnp
lahf
dec
int
add
sub
add
ja
cmp
or
xchg
nop
inc
pop
add
bound
loopne
sbb
lea
shrb
movsb
mov
jns
into
ja
outsb
jle
push
push
sbb
pop
mov
add
stc
into
aam
push
pop
fs
pop
cwtl
out
adc
or
repz
inc
stos
test
and
pop
std
test
jp
mov
sub
fs
cmc
mov
inc
sub
mov
testl
pop
jl
push
and
xlat
pop
out
into
mov
out
cmp
or
ret
jns
dec
mov
mov
inc
sub
mov
stos
add
sbb
stc
loopne
inc
in
dec
das
nop
sub
ds
test
sbb
rolb
popf
sbb
lcall
out
mov
movsb
loope
mov
mov
cli
lahf
mov
adc
movsb
pop
in
adc
out
sbb
mov
add
jo
movb
pushf
call
bswap
cmp
jmp
xchg
bound
loope
jl
out
mov
xor
loop
mov
xchg
mov
lods
add
adc
cmp
and
xchg
mov
jne
test
data16
nop
jmp
jg
jae
jno
push
hlt
rorb
inc
rorb
out
scas
mov
xchg
inc
pushf
pop
adc
xchg
dec
inc
imul
fsubrl
mov
loope
cmp
mov
jnp
scas
ljmp
rcr
into
ss
push
js
mov
cmp
mov
fdivrl
xchg
mov
xor
bound
jp
pop
outsb
add
jle
icebp
rorl
and
lock
sti
decl
in
insl
add
test
out
insb
and
iret
cmp
test
pop
bound
lods
pushf
clc
iret
and
fstl
into
jmp
lahf
mov
cli
decb
mov
push
inc
and
xchg
les
test
jno
sti
xchg
sti
jle
and
mov
sbb
xchg
xchg
xor
add
jge
xor
pop
xlat
sub
gs
dec
int
sbb
in
xor
or
outsl
inc
mov
adc
mov
adc
sbb
in
adc
insb
leave
int3
xchg
cltd
out
std
lods
mov
popf
fdivr
bound
add
mov
mov
push
hlt
sbb
adc
inc
test
or
fsubs
cmp
mov
lcall
xor
fidivl
or
ja
imul
outsl
scas
out
xchg
in
ja
adc
insb
pop
je
scas
pop
dec
push
imul
cmp
mov
jecxz
adc
stc
and
adc
cmp
jb
sub
sbb
xor
inc
inc
push
cmpsb
movsb
mov
cmp
pusha
shlb
cmp
push
outsl
mov
sbb
cltd
out
addr16
test
mov
and
hlt
imul
adc
in
lods
push
push
popf
mov
pusha
sti
mov
xchg
dec
xor
pusha
cmp
repnz
shl
hlt
adc
jno
sbb
xor
and
je
lea
cs
ljmp
inc
popf
or
xor
xchg
call
pop
das
in
dec
jp
dec
sbb
pop
dec
cwtl
sbb
xchg
cwtl
add
out
sub
inc
sbbl
adc
pop
xchg
xor
mov
mov
mov
xchg
dec
adc
add
jno
xor
fwait
in
lds
imul
mov
push
in
sub
iret
mov
sbb
movsl
xchg
gs
imull
cmpsl
cli
cmp
push
push
aam
daa
popf
cmpsl
out
out
xorb
xchg
push
mov
lds
xlat
mov
xorb
rolb
mov
rcr
sbbb
lock
lods
icebp
in
cwtl
ljmp
test
loop
sbb
addl
mov
push
popa
cmp
out
xchg
jbe
jecxz
push
sbb
ljmp
mov
dec
mov
and
jmp
fstpl
jmp
sbb
push
add
xor
add
and
mov
xor
cmp
dec
xor
sbb
fwait
mov
mov
dec
sub
int
adc
add
push
xchg
insl
inc
adc
add
mov
xchg
inc
adcb
clc
sub
mov
inc
pop
sbb
dec
leave
and
adc
pop
and
lods
mov
out
push
or
outsb
lret
jb
xlat
dec
adc
lds
or
fisubs
mov
popf
xor
jbe
pop
popa
push
mov
mov
xchg
mov
lods
arpl
sbb
cmp
sbbl
aad
pop
pop
sub
rcrb
dec
adc
and
nop
daa
and
fmuls
out
pop
test
rclb
push
arpl
lret
cmp
inc
pop
sahf
adcl
sti
loop
fstpl
lret
jmp
imul
add
xor
sub
dec
sub
and
stos
je
push
out
add
stos
mov
jnp
push
gs
add
fs
mov
into
push
lahf
movsl
int3
cmpsl
xor
es
stc
popf
inc
and
in
cwtl
popa
cs
jnp
cs
mov
insb
adc
insl
push
pop
push
out
movsl
jnp
adc
cmp
int
cld
mov
rol
dec
mov
jo
mov
dec
aad
xlat
mov
push
mov
das
inc
fists
add
push
push
fwait
arpl
das
push
pop
test
pop
adc
in
add
shlb
push
fs
icebp
int
shl
icebp
xor
push
push
add
shll
lea
mov
and
adc
dec
test
mov
inc
mov
push
lahf
mov
test
popf
push
fcompl
fsubs
les
push
repz
out
jb
or
or
mov
std
mov
popf
mov
scas
mov
mov
insl
daa
jmp
sbb
inc
and
mov
shrl
out
and
pop
std
pop
xchg
mov
mov
mov
dec
subl
and
xchg
mov
sahf
icebp
loopne
mov
mov
dec
leave
icebp
xchg
cld
lock
jno
lds
or
cs
inc
and
fsubrp
xor
or
mov
mov
lret
ret
sub
jmp
scas
orb
mov
xchg
dec
inc
or
add
scas
fsubl
rolb
push
ljmp
pushf
stos
fimull
leave
outsl
int
jb
fdivrl
or
mov
cmp
jbe
jmp
stc
notb
roll
mov
mov
std
cli
and
insl
lcall
push
lcall
int
jb
movsl
inc
xor
sub
test
cltd
cmp
pop
rcll
push
cmp
iret
cmc
fwait
ja
popf
test
inc
ss
and
jns
mov
insb
dec
push
sub
cmp
adc
movsl
or
push
and
inc
dec
and
fwait
inc
mov
mov
nop
sahf
jecxz
jge
sub
sub
push
cld
adc
dec
ljmp
sbb
lret
cmp
pop
test
xlat
push
addr16
fisttps
mov
repz
cmp
jns
and
jg
adc
cmp
arpl
or
pop
movsl
into
ret
scas
xlat
ret
inc
insl
push
cmp
jl
cmp
jcxz
pop
sahf
negl
and
data16
addl
out
sbb
add
loop
xchg
lock
mov
dec
test
push
std
push
insb
iret
cmp
ds
sub
mov
cmpl
pop
dec
sub
insb
test
in
push
mov
stos
push
ret
lret
repz
sub
xchg
dec
xor
stc
push
and
push
xor
push
lcall
sbb
mov
push
sarb
push
mov
movsl
mov
xchg
fimull
jge
cli
pusha
or
std
push
jl
push
out
or
cld
negl
test
push
push
add
jne
hlt
out
ljmp
pop
push
and
and
sti
outsb
xor
imul
in
pop
push
enter
inc
xor
jl
repnz
cld
popf
daa
out
in
out
sbb
pop
cmpsl
adc
js
push
cli
mulb
sti
mov
mov
push
leave
movsl
mov
pop
inc
fs
mul
pop
mov
push
and
das
movsb
iret
jp
pop
jle
jb
sub
sbb
flds
xor
mov
pop
scas
inc
add
mov
fdivrs
outsb
or
jne
xor
mov
dec
dec
mov
clc
dec
adc
or
inc
sbb
xor
fldcw
xchg
cltd
xor
jmp
fisubs
push
in
pop
fimuls
mov
and
or
aam
and
inc
fmull
popf
lcall
jb
test
ljmp
adc
inc
hlt
push
nop
mov
int
mov
push
mov
fcomi
mov
cmpsl
outsb
pop
sarl
movl
inc
jecxz
sbb
test
mov
sub
sub
fimull
dec
es
lahf
sbb
les
fistps
jbe
or
mov
xchg
aaa
out
insl
xchg
movsl
jo
lock
jns
and
xchg
push
push
sub
sti
scas
iret
add
test
repnz
jl
add
inc
sub
mov
andl
lock
and
sbb
xor
xlat
mov
adc
sbb
push
lcall
outsb
push
dec
or
xchg
js
jnp
movsl
dec
dec
stos
insb
mov
dec
xor
jp
and
in
mov
mov
jo
cwtl
push
loopne
jg
and
cld
push
sti
mov
xor
xchg
push
dec
nop
movsb
enter
add
push
or
into
movsb
fidivrs
adc
fdivrs
xlat
int
dec
jmp
lret
scas
mov
gs
out
into
jmp
clc
iret
imul
or
xchg
push
out
mov
leave
test
inc
or
mov
push
jnp
pop
stos
jp
or
in
mov
cmpsl
lahf
mov
cmp
push
testb
lds
aas
enter
jge
push
cmp
sbb
mov
or
popf
repnz
outsb
xor
cmp
push
jae
daa
mov
iret
repnz
push
mov
cmc
sbb
shrl
subl
sub
push
sarl
jmp
jne
dec
mov
xor
insb
scas
or
fcmovnbe
push
xchg
mov
icebp
scas
inc
cltd
out
mov
jge
jo
and
cmpsl
mov
jecxz
out
scas
sbb
lods
les
sub
pop
dec
and
sub
scas
pop
addr16
jae
cltd
pop
xchg
lahf
mov
sar
iret
dec
sbb
subl
sbb
adc
loop
rcll
xchg
push
add
push
nop
xlat
mov
enter
insb
rorl
dec
fsub
das
mov
ds
mov
nop
fistpl
fadd
data16
xor
and
inc
adc
in
fmull
shrb
addr16
add
sti
pop
xor
jbe
pusha
jp
push
dec
add
out
cmp
mov
pop
shlb
pop
data16
in
and
xchg
cmp
rcrl
dec
xorb
sbb
jb
pop
outsl
inc
jo
cli
jae
push
cs
and
loop
das
jnp
test
jmp
inc
xchg
adcb
pop
inc
xchg
sar
loope
test
popf
xor
aam
mov
test
pop
inc
mov
dec
push
push
out
or
leave
fsubrl
sarl
inc
movsl
sbb
inc
jmp
mov
outsb
sub
test
mov
dec
adcl
adcb
or
iret
xchg
mov
xchg
es
stos
and
fwait
in
pop
lret
sarb
je
call
out
insb
outsb
mov
insl
cmp
xchg
pop
push
push
mov
shr
xchg
std
in
stc
xchg
or
pop
daa
and
sbb
jo
loop
mov
sbb
pop
mov
or
movsb
cmp
mov
dec
les
jo
mov
out
dec
jae
ljmp
xchg
mov
sbbl
mov
mov
fs
in
xchg
push
mov
bound
sub
testl
mov
test
adc
adcl
mov
aas
sub
shrl
js
js
mov
mov
out
into
cld
repz
xchg
jle
xor
dec
jp
cmc
fstps
or
popf
mov
jne
sub
loope
xor
fldcw
jmp
xchg
iret
rclb
les
or
mov
ljmp
dec
or
iret
mov
pop
add
push
call
and
repnz
mov
jp
add
test
nop
cs
mov
adc
rcll
cwtl
push
add
sarl
filds
sbb
movsl
jb
cmpsl
push
xlat
mov
sub
mov
pusha
and
out
or
and
dec
sbb
div
cmp
insb
ss
mov
mov
and
ljmp
test
jns
out
out
inc
int
or
andl
xor
pop
testb
push
lea
out
sbb
dec
popa
inc
loope
mov
or
lahf
outsl
xchg
loope
js
pop
filds
orl
cmp
les
mov
sub
and
add
pop
inc
push
add
xchg
data16
leave
pop
sbb
repz
hlt
mov
fistl
loope
lret
pop
pop
aam
leave
xor
pushf
mov
mov
sbb
cmpl
outsb
add
movsl
cmc
sub
xchg
sub
sti
pop
xchg
insl
fldl
idiv
out
adc
sbb
mov
xorb
push
mov
dec
cmp
mov
test
sub
cltd
dec
aad
jmp
clc
push
std
mov
mov
popf
testl
add
mov
test
adc
xchg
pop
stos
inc
cmp
inc
mov
aas
sbb
and
mov
in
hlt
pop
and
inc
movsb
scas
int3
into
push
pop
mov
ret
in
push
pop
cmp
test
rep
and
rclb
jmp
test
sub
mov
lcall
xlat
mov
push
jmp
and
jge
pop
pop
mov
mov
std
sub
jb
ja
adc
and
inc
insb
imul
pop
mov
mov
push
outsl
shll
mov
add
loop
xor
adc
add
pop
inc
or
pop
xor
mov
movsl
sbb
arpl
out
push
sbb
ljmp
les
int
mov
push
jb
xor
into
mov
xor
mov
inc
inc
rclb
outsl
fdivr
nop
movsl
push
les
sub
mov
and
push
jg
sub
loop
pop
sbb
mov
mov
sub
sbb
mov
or
mov
mov
pop
xor
pop
les
popf
push
popf
mov
sub
jnp
inc
lock
popf
adc
inc
jbe
push
loop
out
imul
cs
test
push
repz
jb
mov
push
movsb
sbb
mov
push
popa
push
lret
shl
sub
out
mov
mov
mov
rcl
das
or
sbb
push
mov
mov
shll
fs
sub
rcll
jge
add
es
mov
hlt
sub
inc
mov
ficompl
inc
inc
inc
sub
stos
test
xchg
ret
into
push
test
jns
or
dec
rcrb
adc
sub
aad
pop
push
aaa
mov
pop
leave
adc
or
ds
and
or
dec
push
mov
clc
testl
adc
mov
outsb
jmp
loopne
xor
stos
xchg
lcall
gs
xchg
test
cmpsb
add
aad
push
push
pop
or
mov
mov
jbe
xchg
cmp
loopne
xchg
inc
pop
xor
cmp
inc
jnp,pn
inc
fldl
lods
in
fidivs
pop
outsl
jb
aaa
pop
es
push
or
lock
pop
frstpm(287
xchg
iret
or
in
lea
popf
movsb
dec
loopne
push
mov
push
pinsrw
xchg
and
sti
jp
inc
push
dec
xchg
ljmp
es
stos
shll
inc
sarb
das
cli
popa
lods
mov
lods
test
dec
sti
sbb
insl
cmp
insl
lods
es
mov
pop
rolb
dec
sub
popa
push
sbb
scas
mov
push
aaa
std
pop
pop
mov
popa
pop
pop
add
in
push
dec
or
aad
test
fldt
rolb
mov
dec
xchg
sub
push
cmp
mov
test
push
mov
add
jns
and
sbb
mov
hlt
rcll
jle
sbb
inc
xchg
push
xchg
jnp
aaa
fsubrp
jecxz,pt
movsb
pushf
and
adc
sarl
cmp
mov
scas
xchg
addr16
fmulp
mov
sbb
pop
mov
insl
rcrb
movsl
in
mov
pcmpeqb
mov
fs
or
xor
das
sbb
sbb
dec
jl
push
mov
ljmp
das
ss
aad
in
adc
cli
aad
fs
mov
xchg
cli
jo
icebp
cltd
inc
sahf
test
imul
mov
pop
adc
mov
sub
clc
xlat
lret
loop
lea
xor
jp
cmp
xchg
dec
cld
repnz
mov
cmp
add
xchg
cmc
add
push
push
jb
push
outsb
leave
xchg
sbbl
stc
dec
lahf
and
xchg
popf
fimull
repnz
into
push
sarl
test
mov
xor
mov
cmp
xor
icebp
xor
fst
mov
hlt
mov
mov
add
push
lret
dec
scas
ss
mov
xchg
cmpsl
adc
cmc
lret
add
mov
mov
inc
or
xchg
push
pop
mov
mov
movsl
cmp
sub
ret
sub
push
fdivl
mov
xchg
fbld
and
cmpb
arpl
or
daa
cmp
inc
in
in
into
mov
das
andl
jno
mov
ds
push
lods
push
xchg
sub
pop
adcb
mov
mov
ljmp
gs
or
xor
rolb
mov
test
idivb
and
xor
dec
pusha
push
dec
cli
and
inc
test
std
stos
cmpsb
xchg
add
adc
mov
dec
jl
mov
setg
and
scas
dec
int
mov
movsl
fildl
mov
mov
adc
pop
jns
enter
pop
ret
inc
lcall
loopne
mulb
test
add
sub
xor
or
and
inc
xor
aam
mov
adc
rcl
scas
out
push
sbb
push
shl
push
loopne
loope
loop
cmp
jo
in
sbb
push
push
stos
imul
imul
adc
int3
push
xor
cmp
aad
arpl
stos
lock
clc
cmc
and
dec
or
xchg
dec
and
add
mov
xor
mov
rcr
cmp
xchg
push
pop
xlat
popf
jnp
dec
push
push
or
fmull
add
add
outsb
in
dec
inc
dec
rcrl
and
fisubl
inc
adc
push
jecxz
lahf
xchg
sbb
aad
xor
mov
stc
cli
repnz
mov
push
inc
sub
mov
pusha
arpl
pop
xor
push
out
mov
xchg
xchg
jmp
mov
pop
insl
cmp
nop
pop
or
mov
lods
cmpsb
jae
es
pushf
outsl
mov
cs
mov
dec
jne
mov
xor
cmp
add
inc
push
sahf
in
int
mov
jl
je
movsb
ja
rorb
mov
adc
push
bound
mov
mov
xor
ret
mov
xchg
scas
mov
jecxz
inc
in
cmp
imulb
inc
adc
xlat
popa
test
test
or
and
and
pop
enter
cld
decl
lret
pop
dec
fadd
mov
lahf
sbb
sbb
jmp
in
enter
stos
daa
popa
outsl
cli
imul
add
push
cmpsl
outsb
cmp
lahf
test
sbb
fnstcw
push
or
dec
mov
mov
jae
sbb
jno
mov
jle
fstpt
and
xchg
or
jo
adc
test
pop
cmp
xor
cmp
mov
int3
mulb
push
mov
pop
jecxz
and
xlat
dec
add
in
pop
mov
orl
cmp
mov
jp
movsb
repnz
sub
out
pop
hlt
mov
ja
or
pop
add
ret
mov
shll
lods
push
out
mov
and
sti
sub
mov
scas
lods
test
xor
pop
push
lock
lret
mov
mov
lret
adc
dec
and
ja
mov
int3
mov
lods
lret
imul
scas
xchg
gs
inc
enter
ss
outsl
or
mov
mov
jge
cmc
pusha
dec
loopne
pop
push
and
sbb
fwait
pop
ds
sbb
sbb
pop
lods
jb
cli
in
fisubl
dec
pop
andl
outsb
inc
inc
paddusb
repz
dec
xchg
out
addr16
jecxz
icebp
and
loopne
out
sbb
mov
mov
pop
sahf
pop
jne
adc
ljmp
jle
out
jge
or
dec
je
inc
dec
in
or
je
push
mov
mov
push
push
stc
cwtl
out
enter
inc
loopne
mov
test
xor
hlt
ljmp
lods
pop
sbb
mov
imul
and
add
pop
pop
sub
dec
xor
clc
test
das
adc
into
leave
dec
insl
repz
push
jecxz
cmp
andl
enter
test
rolb
cld
lcall
std
and
xlat
push
xchg
mov
mov
syscall
popf
fnstsw
icebp
add
mov
mov
jbe
or
push
push
mov
ret
call
sbbl
out
dec
lea
jecxz
in
sbbl
pop
sub
je
pop
mov
xchg
adc
lret
sti
dec
mov
add
add
repz
stc
insl
mov
pop
lods
iret
cmp
xchg
push
cli
pop
sar
popa
lret
or
xor
push
push
mov
lcall
cmp
add
jnp
inc
sbb
cld
dec
and
inc
into
mov
pop
push
pop
cmp
repnz
push
xchg
pop
pusha
pop
fnstenv
xchg
mov
cmp
lods
xchg
mov
xor
aam
into
push
bound
xor
mov
cld
mov
fldt
shlb
push
sub
loopne
shlb
cmc
xor
icebp
dec
dec
jo
adc
push
cmp
xor
popa
add
dec
mov
sub
push
pop
cmp
jns
incb
xor
fnsave
jae
and
daa
movsb
or
lock
push
cmpl
int3
pop
or
popf
cmc
and
repz
mov
jne
les
jns
insl
lds
mov
lea
ljmp
sub
dec
dec
dec
jg
cmp
dec
push
test
xchg
rclb
insb
sbb
xor
lock
ret
mov
nop
mov
sti
pop
jns
dec
xchg
ljmp
fcompl
imul
jb
fisttpll
or
les
repnz
sbb
pop
imul
xchg
roll
cltd
add
push
pop
rclb
adc
mov
dec
xor
sbbb
jnp
cmp
or
adc
pop
outsl
sbb
cmp
and
repz
enter
fwait
out
pop
pop
jge
xchg
stc
push
dec
xor
mov
dec
loopne
sub
and
movsb
cmc
jb
push
andl
fistpll
xlat
rorl
arpl
out
or
imul
push
sbb
mov
sahf
jl
xor
insb
inc
fistps
popa
in
es
jo
jecxz
filds
mov
mov
test
mov
fstps
inc
into
jl
fucomip
jp
jae
cmc
or
cmp
mov
adc
ja
push
fs
ja
mov
xchg
jl
xor
adc
push
shl
data16
inc
ss
cmp
mov
gs
les
jne
mov
imul
jb
sarb
popa
jnp
push
arpl
sbb
push
mov
sub
imul
and
rcrl
xor
imul
xor
mov
xchg
pop
and
scas
and
out
jecxz
mov
cmp
jp
sbb
in
cmp
lods
rcr
sub
dec
cmp
dec
mov
int3
push
mov
outsl
sarl
movl
push
pop
mulb
and
iret
add
shrb
fcmovne
xchg
inc
push
jmp
sbb
xchg
xor
outsb
bound
in
add
push
dec
dec
movb
mov
fwait
push
and
scas
add
jno
cmp
cmp
shrb
mov
aad
ret
pop
cmp
mov
sbb
dec
adc
fadds
mov
dec
int3
push
cwtl
addb
xor
es
lret
fisubl
out
pop
fstpt
pusha
xorb
stc
daa
scas
rolb
cmc
xchg
or
das
jecxz
push
call
jae
push
cltd
adc
jge
movsl
addr16
sub
lea
mov
push
outsb
pop
cmp
mov
in
fwait
daa
outsl
add
lods
mov
gs
cmpsl
cli
cmp
jecxz
test
pop
push
jae
jecxz
cmp
xlat
mov
pop
pop
mov
test
scas
je
int
in
clc
xor
push
andl
mov
sub
jbe
or
addb
movsb
xchg
dec
sbb
xor
sub
arpl
xchg
lret
ret
lret
cs
enter
imul
andnps
pop
inc
mov
leave
insl
push
cmp
cmp
hlt
repz
adc
int
xchg
vmwrite
jb
test
push
shrl
and
jl
and
cmp
sbb
arpl
out
add
cmc
cmc
mov
mov
pushf
fcomps
test
or
mov
add
sbb
jle
addr16
pusha
mov
add
gs
aas
xlat
push
shl
ljmp
test
das
jb
push
scas
mov
adc
pop
push
es
xor
and
call
test
lret
cmp
jnp
sbb
mull
or
xor
scas
mov
idivl
adc
fistps
xor
xchg
jo
push
stc
addr16
cmp
jecxz
rolb
xchg
mov
and
loop
push
mov
xor
insl
out
cli
out
cwtl
jle
mov
in
scas
xchg
cmp
pop
inc
test
sbb
imull
fisubl
lock
test
movsb
lds
cs
loope
push
jmp
addb
in
xchg
leave
stos
adc
outsl
push
outsl
push
mov
push
cld
sub
pop
sub
stos
cmc
hlt
repnz
movb
in
popa
cmp
rorb
movsb
out
pop
inc
fs
idivb
push
icebp
sub
jno
xchg
mov
sarb
mov
outsl
xchg
fildl
xchg
sbb
mov
sub
dec
jo
repnz
sub
movsl
push
mov
std
jno
and
add
subl
scas
lods
cmp
add
sahf
xor
lret
xchg
bnd
movsb
out
scas
addr16
lahf
movsb
inc
out
sbb
adc
inc
or
cmc
insb
dec
add
or
push
mov
imul
ret
out
ljmp
mov
ss
inc
stos
adc
add
mov
adcb
test
cmp
lods
xor
scas
mov
cli
repz
popa
loop
xchg
jp
adc
int3
mov
jo
pop
imul
mov
inc
ss
jg
rcl
imul
pop
bound
add
sub
dec
dec
insl
sarb
push
jge
xchg
adc
and
cmc
mov
clc
inc
jnp
loopne
xchg
cmp
movsb
or
pop
jg
inc
sahf
mov
lcall
adc
aad
mov
addb
fs
push
aam
sub
outsb
and
icebp
aad
shl
inc
movsb
stos
xchg
imul
clc
adc
shl
xchg
je
cmp
and
clc
rorl
mov
cmc
sbb
in
mov
daa
cli
popa
ss
stos
xchg
stos
jg
sbb
inc
mov
mov
jne
mov
sub
and
cmp
test
lretw
es
inc
sbb
and
les
outsl
loopne
and
xchg
loop
push
test
jb
cmpsb
mov
popf
mov
in
ror
loop
inc
adc
jg
repnz
jmp
xlat
js
inc
push
popa
cltd
jg
popa
adc
lods
jo
adc
sbb
sub
sbb
dec
aad
pushf
xor
lcall
lds
and
mov
test
mov
sbb
push
jne
jl
fsubrs
mov
lods
sub
je
movsl
sbb
add
jno
mov
in
push
mov
xor
sbb
mov
mov
inc
repz
mov
js
cmpsb
or
cmp
jne
cmpsb
or
punpckhdq
outsl
mov
xchg
sbb
into
pop
pop
cwtl
lock
cmp
test
pop
rcll
mov
xchg
inc
loop
andb
pop
mov
adc
jo
out
clc
xchg
mov
lds
jmp
mov
data16
negb
fimuls
push
fists
jmp
mov
mov
sub
outsl
loop
test
movb
cmp
ss
gs
lea
adc
mov
jne
or
push
lret
xchg
mov
sub
or
pushl
mov
mov
dec
dec
adc
mov
lods
testl
xchg
push
adc
scas
roll
add
mov
push
push
std
mov
cltd
push
fs
gs
cmp
and
mov
and
or
pop
xchg
sub
xor
in
fs
push
mov
sub
cli
jbe
test
mov
loope
adc
pop
out
lock
lcall
movsb
aam
push
ljmp
cld
pop
rclb
or
call
gs
jecxz
gs
aaa
adc
sub
xchg
lods
sbb
sbb
mov
cmp
js
aam
mov
shrb
pushf
movsl
je
mov
data16
dec
inc
xor
mov
dec
inc
mov
xor
test
xor
out
xchg
sub
lret
js
mulps
sbb
hlt
cmp
daa
xor
sbb
fcompl
inc
push
cmpsl
mov
jmp
in
push
clc
loopne
jmp
push
lods
inc
cmp
and
sub
jmp
imulb
insl
cmp
jl
mov
sti
ret
cs
hlt
fdivrs
or
lods
je
xorl
mov
mov
sub
roll
push
pop
xchg
jbe
shll
adc
dec
insb
and
mov
sbb
jae
or
je
cmc
cmpb
sub
push
push
cmp
sahf
cmp
xlat
lods
imulb
push
xchg
clc
rorl
xchg
or
jae
cmpsb
push
insb
and
nop
push
cmp
push
mov
dec
lret
loopne
mov
cmp
inc
sahf
out
or
dec
add
repz
fldenv
push
inc
mov
cld
int
or
and
push
sbb
aas
fiaddl
push
mov
popf
lods
iret
in
mov
dec
mov
ret
cwtl
cmp
dec
mov
lock
mov
aad
jo
jmp
out
pop
shl
shrb
movsb
fsubl
stc
dec
leave
cmpsb
js
popa
add
jns
enter
scas
fisubs
add
mov
loop
not
ja
dec
in
adc
stos
xchg
out
testl
lock
call
cmp
fistl
push
loope
mov
scas
mov
push
mov
mov
mov
xlat
das
in
push
jno
xchg
pop
mov
jmp
fistpll
dec
mov
jae
rcl
movsb
out
leave
call
dec
jp
sbb
xchg
popa
sbb
ret
in
pop
imul
jmp
cmp
cmpsb
sbbl
dec
pop
dec
lods
cmp
out
cltd
pop
jg
push
jp
in
mov
jae
outsb
lahf
mov
in
dec
mov
pop
add
lahf
mov
and
push
mov
mov
aas
sbb
out
mov
and
mov
js
sub
push
mov
stc
mulb
fldenv
add
ja
mov
adc
pop
inc
aad
push
fistpl
xor
outsl
insl
inc
jno
cmpsl
mov
mov
inc
jbe
push
xchg
cli
lock
orb
outsb
push
outsb
or
lret
cmpsl
stos
aam
sub
clc
push
daa
out
jge
jnp
nop
je
mov
xor
jp
jo
sub
xchg
xchg
stc
jnp
mov
inc
roll
fldcw
js
jae
pop
sbb
cli
mov
pop
sti
mov
stos
sub
mov
das
loope
mov
add
pushf
lahf
or
push
pop
ss
arpl
hlt
mov
mov
push
and
repnz
es
sbbl
inc
xchg
mov
fsubrp
arpl
adc
jae
ljmp
cmpsb
jae
fnstcw
push
movsl
bound
adc
jl
rcll
xchg
bound
ds
incl
push
in
mov
push
aam
cwtl
jmp
je
shlb
cli
push
loopne
ret
or
pop
fmulp
fiaddl
mov
cmc
push
loopne
mov
xchg
adc
cwtl
inc
shrl
dec
inc
jo
sub
cli
lahf
shll
test
ds
adc
push
inc
imul
repnz
dec
jl
lods
fdiv
lods
ja
out
or
jp
ljmp
dec
fmuls
int
mov
pop
sbb
and
jg
push
into
xchg
ds
scas
or
test
sbb
lret
ret
fldt
imul
bound
dec
lahf
dec
sbb
mov
sub
lock
subl
rcrl
push
cmpsb
jp
repz
inc
push
into
sbb
push
push
or
sarl
inc
test
sub
add
in
push
lds
push
movsb
push
popa
sahf
lea
and
mov
fwait
pushf
add
adc
aam
test
pop
jge
jbe
movsb
je
mov
out
sbb
pop
xchg
cmp
pop
fnstenv
jecxz
aaa
pusha
push
divb
mov
addl
ja
test
addr16
pop
fisubs
push
shrl
js
rcr
mov
mov
mov
andb
cs
and
xchg
mov
xchg
push
or
pop
mov
in
gs
cltd
xchg
mov
lods
lahf
adc
xor
inc
mov
cmp
loop
sbbb
xchg
lcall
addr16
inc
sbb
dec
fs
pop
xchg
and
sbb
adc
sbbl
dec
mov
fdiv
mov
movsb
outsl
lahf
inc
jmp
jne
mov
cmp
int3
shlb
sub
pop
iret
fsubrs
xor
jmp
push
cli
lock
mov
in
sub
icebp
mov
ffree
in
inc
or
pop
or
jmp
jecxz
or
lret
es
inc
xchg
adc
dec
xchg
or
inc
xchg
mov
cmp
pop
pusha
fs
xchg
xchg
loope
mov
rcrb
dec
shlb
xchg
push
pop
out
add
cmp
jnp
mov
cwtl
ljmp
push
cli
add
xor
jle
in
inc
adc
mov
cwtl
mov
ja
les
cmp
and
out
jae
daa
test
insb
lret
arpl
adc
sub
push
add
push
sub
mov
dec
sbb
add
pusha
adc
std
pop
push
jno
adc
sbb
push
ret
rorb
push
test
js
jns
mov
inc
std
mov
cmp
pop
mov
or
pop
push
movsb
mov
and
shrb
mov
lea
push
mov
dec
mov
es
sub
mov
cmpsl
cmc
imul
mov
sub
std
push
test
xor
xor
mov
mov
fs
or
dec
ljmp
mov
shlb
mov
decl
das
mov
pusha
cmp
outsb
xchg
or
dec
push
fstl
lods
pop
add
in
adc
mov
xor
mov
cmp
pop
iret
jle
push
ja
pop
xchg
push
jle
xor
sub
idiv
lcall
xchg
aam
mov
fxch
lahf
jecxz
cli
repnz
int
int3
dec
test
je
sbb
cwtl
insl
sub
daa
dec
xchg
rcll
test
push
sbb
stc
mov
enter
xchg
lret
ds
add
jbe
cs
jmp
push
mov
push
imul
push
xlat
mov
test
and
loopne
outsb
lods
and
add
inc
xor
or
sub
es
push
cmp
dec
xlat
imul
mov
dec
jae,pn
push
or
int3
xchg
xor
mov
dec
inc
jl
out
mov
dec
dec
out
test
jns
insb
imul
fwait
out
jmp
repnz
mov
mov
cltd
jl
lods
mov
cmpl
pop
mov
mov
pusha
add
dec
fucom
pop
enter
rcrl
jp
imul
xchg
xchg
xlat
stos
out
mov
adc
in
cs
cmpl
mov
sbb
insb
adc
pop
push
fisubl
rcrl
sbbb
cs
cmpsb
cwtl
shl
cld
imul
pop
pop
repz
cvtdq2ps
adc
cmp
incl
cmp
pop
dec
mov
add
jg
xlat
cmp
shl
cmp
sub
addl
rcrl
push
cmp
cld
test
scas
dec
pushf
enter
ja
les
daa
push
outsl
pop
pusha
aas
icebp
out
cwtl
sbb
mov
mov
xor
jmp
xchg
int3
jmp
jae
dec
jnp
int3
mov
loopne
sub
ljmp
and
inc
jns
sbb
addb
cltd
loopne
ja
and
cmp
and
imul
push
mov
push
into
imul
ror
aas
jb
aas
rol
sub
outsl
or
push
jne
lock
jno
jmp
push
pop
mov
aam
mov
or
cs
inc
mov
lret
sbb
repnz
mov
push
and
imul
mov
pop
push
or
push
pushf
jns
xor
in
add
int
insb
inc
cmpb
mov
jge
adc
xchg
dec
inc
xchg
stos
xor
aam
add
in
je
xor
out
cs
jne
mov
out
lea
adc
mov
push
mov
cmpsl
cmp
ret
xor
and
xchg
cmc
or
xchg
or
leave
push
movsb
or
xchg
divb
sbb
inc
cmp
lock
imul
not
aaa
jno
xor
lret
lds
ljmp
iret
loopne
jno
inc
pop
xchg
jle
adc
out
call
sub
test
leave
pop
in
and
or
fimull
and
in
jl
jae
pop
lock
sub
xchg
movsb
arpl
arpl
mov
inc
xor
mov
sub
jae
mov
aad
dec
loopne
test
and
mov
testl
mov
fists
sar
sbb
lds
enter
pop
aaa
das
rorl
cmpsl
mov
negl
mov
xchg
mov
arpl
xchg
xor
adc
or
pop
test
dec
inc
rcrb
and
and
xchg
dec
icebp
sub
mov
mov
push
sbbb
pop
in
pop
hlt
mov
fisttps
add
jns
aad
js
movsl
jnp
mov
mov
aas
push
push
test
or
in
xor
rcrb
nop
dec
add
aas
xor
rcr
and
pop
popa
hlt
mov
hlt
jmp
sbb
int3
sbb
jne
inc
xchg
addb
and
imull
mov
popa
dec
mov
cmpsl
pop
pushf
pushf
dec
addr16
mov
xor
bound
dec
dec
pop
pop
sar
sbb
pop
pop
sbb
aas
push
call
loope
stos
sub
rolb
jmp
popf
mov
add
nop
lret
cmp
neg
repz
dec
xlat
mov
shll
and
jmp
mov
or
push
dec
mov
xor
mov
popf
shrl
ja
add
cmp
lret
xorb
and
mov
mov
test
and
frstor
cmc
mov
testb
js
std
popa
and
push
in
mov
insl
add
or
add
addr16
lahf
int3
enter
test
cmp
add
cmp
ja
cs
pop
sbbb
mov
es
xchg
insl
imul
js
daa
incl
or
add
push
pop
xchg
adc
movsl
mov
pop
jle
fucomp
lods
push
movsb
push
inc
jecxz
fcoml
imul
fldl
cmp
stos
mov
movsl
push
mov
mov
mov
or
iret
aam
addr16
shl
movntps
pop
xorl
push
mov
mov
test
test
enter
aad
jmp
mov
cli
rcr
movsb
divl
xor
fstpl
xor
mov
cmpsb
dec
mov
push
pop
cld
jno
scas
rorl
push
jbe
and
mov
clc
xor
shr
inc
mov
in
fstps
dec
push
mov
insl
adc
sti
jnp
ja
fiaddl
mov
adc
cltd
ds
add
js
ds
ret
stc
inc
js
jnp,pn
callw
cmc
xlat
cmp
cli
and
stos
cwtl
shll
in
add
cmp
sbb
xchg
jmp
invd
mov
out
push
or
mov
ss
mov
push
add
cmpsb
mov
subl
pop
call
mov
push
xchg
push
fidivrs
push
in
cltd
iret
movsb
outsb
jge
popf
add
mov
dec
test
push
cmpsb
push
jp
pop
lahf
inc
pop
pusha
and
push
out
addr16
mov
lahf
scas
jnp
test
xor
fst
rclb
mov
mov
icebp
mov
push
test
cld
add
in
in
pop
push
and
push
mov
lock
add
push
jb
arpl
mov
sub
dec
pop
pandn
leave
xchg
loop
mov
mov
arpl
popa
xor
add
sub
cwtl
movsl
loope
pushf
jae
pop
pop
mov
iret
out
nop
outsb
out
aaa
sub
mov
mov
add
push
dec
mov
sub
lods
cmc
dec
push
stos
aam
mov
add
test
xor
daa
mov
mov
xor
adc
aaa
inc
daa
rclb
inc
pop
sbb
fldt
roll
add
loope
lcall
aas
lret
jnp
or
insb
xchg
dec
jbe
lahf
xor
imulw
xor
adc
icebp
mov
xchg
test
leave
xchg
push
xor
push
or
mov
cmp
pop
push
xor
arpl
sarl
movsb
xchg
pop
sub
dec
lcall
jmp
xchg
cs
sti
in
insl
jb
ss
cmp
jnp
jge
movsw
dec
push
jne
mov
insl
pop
mov
sahf
pop
mov
pop
inc
inc
mov
test
rcrl
sbb
mov
rorl
lea
insb
fs
cmpsl
jl
insb
lcall
mov
fmull
xor
mov
cmc
int3
fisubs
nop
es
sbb
fdivrs
loope
out
jl
rcrb
and
xor
scas
sti
pop
clc
adc
imul
pop
jecxz
mov
lods
sbb
xor
fbstp
push
and
dec
or
add
or
stc
das
xor
mov
ss
sarl
and
jge
dec
pusha
fmull
vucomiss
lret
ror
ds
scas
loope
push
sbbb
inc
adc
inc
les
dec
dec
mov
stc
lds
outsl
cltd
pushf
flds
cld
mov
mov
iret
push
leave
adc
rcrb
scas
pop
aam
sub
cmp
mov
ss
in
jo
mov
mov
icebp
sub
outsl
or
and
mov
mov
mov
ds
and
push
loop
cmpsb
popf
sbb
sahf
pusha
popa
mov
push
loop
jp
mov
mov
mov
and
repnz
stos
adc
in
mov
fidivrl
out
sbb
outsb
or
push
mov
inc
pop
pop
sbb
loop
xor
arpl
or
pop
bound
rolb
lods
mov
outsb
movl
pop
push
outsl
xchg
fscale
shl
rcll
fmul
xorl
popa
mov
repnz
js
rclb
jl
gs
jns
cmp
scas
jge
call
mov
mov
rolb
cli
orb
test
sbb
jae
jmp
loopne
popa
mov
repz
pop
add
jo
push
sub
pop
ja
adcl
push
xor
jnp
call
inc
movb
data16
or
mov
or
fisubs
inc
stos
pop
das
sub
jb
mov
fwait
iret
aad
sbb
jne
or
jmp
sbb
jnp
sub
mov
sbb
cld
stc
iret
in
and
mov
sbb
or
inc
sahf
imul
pop
push
testb
and
adc
stos
push
idivb
dec
inc
invd
pop
sub
lds
aam
cs
sbb
push
scas
out
xor
cmp
jne
jg
mov
adc
addr16
nop
sbb
lret
or
stos
mov
pop
mov
cmp
mov
ss
nop
repnz
insb
xchg
pop
aaa
nop
add
lahf
sub
cmpsl
fwait
lods
mov
add
pop
jmp
dec
push
repz
data16
mov
cltd
stc
pop
push
in
inc
inc
repz
xor
and
sahf
cmpl
push
xchg
cltd
out
mov
sbb
clc
xchg
jp
xor
stos
inc
mov
repnz
add
jne
sbb
lock
adc
imul
mov
pop
add
shrl
mov
xchg
imul
lret
enter
xor
sarl
jb
push
xchg
sbb
out
lret
adc
addr16
jbe
cs
subb
and
in
adc
cmpl
filds
adc
lret
hlt
insl
frstor
push
pop
or
adc
push
popa
mov
jmp
mov
cmc
frstor
lock
mov
jnp
xor
jbe
cmp
sbb
push
mov
xchg
les
sub
pop
ds
enter
jl
stc
out
xor
scas
and
inc
mov
push
icebp
dec
jge
imul
adc
call
in
and
movsb
jo
pop
insl
mov
loop
ficompl
std
pushf
lods
xchg
and
sbb
imul
sbb
cmc
outsb
mov
jge
adc
imul
sbb
push
cmpsl
iret
mov
das
scas
ret
je
adc
pop
cltd
test
out
adc
icebp
fisubrl
scas
ja
cmp
xchg
out
outsl
or
sahf
cmc
lock
mov
pop
add
jmp
push
dec
mov
cli
add
mov
mov
sbb
out
enter
ja
lock
cmpsl
shrb
mov
xchg
rorb
or
dec
mov
sbb
jne
jg
cmpsl
addl
aas
out
mov
jecxz
roll
cltd
mov
xchg
mov
sbbb
lods
mov
push
jmp
pop
xor
pop
mov
out
in
mov
or
lods
leave
push
xor
mov
loope
xlat
fsubrl
push
dec
je
daa
stc
test
cmp
xor
xchg
xor
push
adc
testl
gs
popf
push
js
jp
iret
es
lahf
test
cmpsl
pop
pop
mov
call
xchg
and
mov
lods
fadds
loopw
clc
ja
test
imul
sbb
fidivrs
dec
lods
insl
pop
and
xchg
and
or
or
xor
xchg
cmp
xor
aaa
sbb
pop
out
sbb
and
and
mov
push
mov
add
mov
mov
daa
mov
das
jno
sub
enter
cmpsb
lcall
testb
in
stos
add
test
add
jo
mov
cs
repnz
pop
mov
sub
enter
push
ss
and
cwtl
dec
iret
push
test
and
popf
push
ret
cmp
loope
stos
and
push
dec
fsubr
jp
xchg
outsb
mov
pop
xchg
movsb
pop
jbe
add
mov
and
cmp
dec
push
mov
xorl
in
xchg
jns
sahf
dec
scas
sub
xor
dec
xchg
jnp
add
push
adcl
jno
insl
add
repz
xor
int
in
cli
mov
cmp
pop
dec
in
mov
mov
loopne
sbb
cmp
repz
push
stos
jbe
adc
adc
inc
lods
xorl
andl
jb
push
pop
sbb
push
adc
test
jae
push
sub
fistpll
insb
outsl
sub
test
mov
mov
and
aam
shl
movsb
out
pop
loopne
cmp
mov
fldcw
mov
es
mov
lcall
pop
push
aad
sub
lcall
hlt
rcr
stc
lcall
jo
stos
inc
mov
test
push
push
cmpb
das
out
fiaddl
jno
push
ficoms
mov
movsl
sub
inc
stos
jno
pop
inc
dec
or
pop
cs
addl
repnz
pop
test
insb
scas
sub
add
adc
or
cmp
or
iret
sti
mov
xchg
mov
bound
shl
cld
fisttpll
pusha
aaa
jb
or
xor
dec
call
mov
stos
push
sbb
iret
ds
xchg
rcll
mov
add
inc
jge
nop
pop
pop
push
xchg
xor
or
xor
mov
das
jno
dec
xor
dec
xor
or
sub
scas
inc
cmp
sub
mov
into
pop
mov
cmc
cltd
sub
xchg
iret
stos
cmpsb
fnsetpm(287
into
icebp
outsl
insb
push
fwait
push
ljmp
aad
popf
push
add
iret
lea
jo
cltd
xchg
xor
add
aaa
outsl
adc
inc
daa
or
loopne
ds
divb
push
in
in
lcall
nop
push
inc
mov
out
pop
cltd
pop
sub
adc
scas
sub
fs
insl
shl
les
xlat
jmp
pop
cmpsl
cs
test
and
cmc
dec
adc
pop
fiaddl
scas
mov
push
call
std
es
mov
cmp
inc
dec
ljmp
or
fdivrs
cmpsl
scas
lcall
sbb
lock
sbb
in
fucomip
ret
pop
jno
call
xchg
push
fcoml
mov
mov
pop
lahf
movsl
inc
fildl
adc
addr16
inc
add
push
dec
inc
imul
mov
fwait
push
xchg
jno
pop
push
adc
xor
insl
sub
popf
js
rorl
pop
test
push
fscale
cmpsb
or
cmpsl
in
and
leave
mov
je
xchg
cmpsl
jmp
das
rorl
add
or
imul
dec
out
pop
movsb
mov
mov
sbbl
cmpsl
push
xchg
sub
jecxz
push
ret
arpl
aad
int
or
push
movsb
out
faddl
jae
loope
fs
stos
adc
adc
pushf
push
aam
add
push
jae
dec
imull
in
cmp
jg
sub
in
test
add
adc
rorl
xchg
push
out
sbb
push
jnp
cli
movsb
mov
cmp
push
or
add
gs
sahf
shl
dec
sub
xchg
pop
popa
aas
adc
aaa
cmp
push
dec
dec
cld
test
loopne
das
inc
mov
scas
fidivrl
or
mov
jmp
ljmp
mov
pop
arpl
aaa
adc
xor
mov
int
mov
shll
mov
mov
aaa
sub
push
dec
bound
ja
aaa
lahf
das
lods
mov
sub
inc
outsl
mov
fmuls
jmp
sub
dec
mov
aad
xor
xor
mov
mov
mov
xchg
lea
jmp
test
out
ss
xchg
das
ffreep
jo
jo
sbb
sbb
push
enter
adc
jbe
jmp
xor
fisttpll
sahf
out
int
jnp
in
xchg
ret
cmpsb
pop
movsl
cli
lea
add
sub
leave
test
into
or
adc
jmp
cmpsb
xchg
call
movsb
mov
cli
inc
aad
test
jg
fiaddl
enter
mov
dec
xchg
mov
dec
out
mov
in
xchg
mov
clc
push
gs
mov
scas
shlb
jecxz
hlt
andl
insl
cmp
and
jmp
popa
xchg
jle
and
push
faddp
data16
inc
pop
enter
mov
test
lea
jmp
sub
int3
mov
call
inc
out
mov
enter
or
incl
cmp
dec
fists
addr16
sahf
adc
movsb
shlb
jb
jecxz
gs
mov
pop
xchg
sub
and
je
add
movsb
dec
rcrl
push
mov
inc
mov
ret
mov
leave
sbb
jnp
call
es
lahf
sub
ljmp
pop
cmpsb
push
jae
pop
dec
jne
out
mov
dec
dec
in
or
scas
repnz
fcmovb
sub
mov
cmpsb
push
or
mov
mov
mov
repnz
cmpsl
inc
test
icebp
xchg
test
cmc
xchg
xor
lahf
jp
aad
add
push
mull
or
inc
popa
dec
cmp
les
xor
arpl
xchg
push
sarb
cmpsl
int
jno
in
sub
add
push
shll
pop
movsl
xchg
xchg
cmp
rorl
je
pusha
testl
out
clc
ja
mov
in
ljmp
dec
or
in
mov
in
fmull
add
aam
push
imul
outsl
jle
lock
xor
in
es
les
test
push
push
jecxz
push
daa
lds
scas
adc
int3
cmp
or
or
loope
adc
jecxz
mov
or
jge
stos
lahf
mov
frstpm(287
pop
cmpsb
loopne
inc
addr16
ds
mov
sub
push
sbb
dec
pop
daa
aaa
or
in
jecxz
filds
add
ja
stos
in
lret
mov
sub
add
push
dec
sub
or
or
repz
inc
push
pop
sub
jle
sub
pop
cmpsl
pushf
ja
add
mov
std
mov
out
mov
popa
push
mov
sti
jne
mov
daa
out
in
push
mov
inc
data16
das
sub
sbb
lea
mov
jo
mov
cmpsl
into
test
ret
inc
clc
je
pop
push
xor
and
shrb
cwtl
repz
mov
loopne
es
testb
sub
andb
push
push
push
cli
outsl
mov
shll
jg
or
pop
pop
or
cmp
ds
jb
lret
push
mov
ds
and
popf
bound
cmpsb
dec
or
bound
scas
push
movsl
xchg
sub
imul
data16
xchg
divl
cltd
loopne
pop
les
or
ror
mov
add
cmp
mov
push
push
adc
repz
mov
or
fnstcw
ficoml
cwtl
jp
mov
and
sub
or
cmp
mov
rorb
js
push
sub
iret
xchg
pusha
roll
and
ret
adcb
stc
testl
loope
out
lea
daa
dec
aas
cmpl
dec
sarl
xchg
pop
shll
adc
jbe
mov
xchg
sub
jns
adc
mov
icebp
jle
sbb
out
inc
leave
out
das
add
pusha
dec
dec
jae
out
repnz
inc
pop
cmpsb
popa
pop
scas
lock
push
add
push
repnz
push
out
sbb
dec
aam
aas
fidivrl
inc
lods
push
xor
mov
fbld
xor
movsl
mov
in
andb
add
mov
test
xchg
dec
les
mov
pop
aaa
incl
fdivrs
lods
mov
and
into
orb
jmp
pop
push
or
ds
inc
xor
sub
xchg
in
push
sub
mov
bound
imul
ljmp
push
sub
leave
cli
bound
aas
js
push
fildl
popa
push
aas
ljmp
out
and
leave
fsts
adc
sbb
or
jnp
repz
mov
sub
ja
imul
sub
inc
cltd
xchg
fstpt
loop
cmc
mov
rcrl
andb
ja
arpl
xchg
xchg
rcll
aaa
lret
into
inc
push
mov
xor
fs
lcall
xchg
call
lret
inc
add
call
ret
iret
je
xchg
cmpsb
mov
stos
pop
and
fs
bound
xor
xchg
hlt
out
xchg
xchg
and
pop
gs
iret
dec
aas
leave
cld
mov
xor
jns
shr
lahf
lods
loopne
jne
mov
cmp
cltd
xlat
repz
xchg
andl
test
cmpsl
ret
xlat
daa
jle
into
jg
xor
xchg
test
sub
repz
mov
inc
jmp
test
sahf
cmpsl
mov
pop
xor
jb
push
and
ss
cmc
inc
push
cmp
subb
cmc
add
xor
lods
les
inc
sub
movsb
test
cltd
ljmp
stc
fucomip
aas
rolb
idiv
orl
push
mov
xchg
sbb
push
xchg
mov
cmpsl
pop
jmp
add
xchg
dec
jmp
aaa
pop
pop
pushf
lahf
jecxz
js,pn
add
add
fdivrs
enter
push
mov
std
nop
insb
xchg
imul
pop
addr16
sbb
jge
imull
hlt
mov
dec
mov
inc
test
add
push
and
cli
cmp
cmpsl
repnz
adc
aas
repnz
vpsubusb
sbb
push
insl
jnp
lcall
addb
cmc
dec
or
mov
std
inc
sbb
les
lahf
lahf
pop
push
ror
add
lcall
sub
and
scas
dec
in
in
pop
pusha
icebp
or
xor
ja
cmp
mov
into
adc
adc
addb
shl
ds
jns
dec
jg
pop
lea
ret
xlat
mov
call
bnd
cltd
aas
in
push
dec
sub
fsubl
mov
xor
jo
subb
sub
into
jbe
sbb
mov
and
lret
jo
dec
xchg
jmp
lds
and
subb
fcomps
sub
fadd
inc
sbb
dec
sti
mul
mov
lds
push
and
je
xchg
adc
cmp
sahf
mov
xchg
pop
pop
push
sub
jns
jae
mov
mov
test
mov
cli
mov
bnd
pop
add
insb
mov
xchg
sbb
data16
xchg
mov
xchg
add
std
call
pop
xorl
mov
imul
add
outsl
inc
sbb
lods
into
hlt
xchg
imul
sahf
enter
pop
cltd
jo
and
int3
shll
inc
cmp
xorl
not
out
adc
fsts
jb
jae
dec
push
fnstsw
ljmpw
clc
test
cli
jb
cli
sbb
mov
dec
call
cmc
mov
mov
js
jne
sub
add
paddq
fbstp
or
inc
sbb
stos
test
push
shll
pop
pop
and
add
loopne
add
xchg
in
jbe
xchg
push
xor
mov
nop
inc
imul
mov
or
inc
cmp
cmp
je
xorb
xor
xlat
pushf
and
dec
dec
dec
cmpsl
sbb
pop
insb
jne
dec
pop
jmp
cli
cltd
sub
sub
add
push
jns
nop
xlat
add
iret
arpl
aaa
xchg
fistpll
push
mov
xchg
lcall
movsl
adc
jge
lods
fcoml
shl
adc
out
pop
enter
test
sbb
dec
outsb
push
or
add
jnp
in
outsl
sbb
inc
inc
int3
mov
fdivs
mov
daa
out
lods
paddusw
xor
sub
fisttpl
cmp
jae
cmpsl
cmpsl
xchg
dec
cwtl
pop
into
dec
dec
outsl
push
dec
test
jecxz
jmp
sarl
popf
xchg
mov
stc
test
lcall
push
push
fwait
sbb
int3
pop
ret
mov
stc
jae
push
or
and
mov
mov
arpl
sbb
mov
test
xor
fsubrs
frstor
test
cmp
nop
cwtl
addr16
jbe
ss
jp
arpl
clc
jmp
mov
dec
xor
inc
daa
xchg
mov
cmpsb
push
movsb
xor
lods
push
icebp
mov
sub
xchg
fldt
mov
gs
cmp
out
hlt
sbbl
mov
cmpsl
pusha
rorl
push
aaa
testl
lret
insl
sub
outsl
fadds
int3
outsb
and
xorl
jnp
out
shrb
mov
push
lcall
mov
push
mov
repz
data16
enter
dec
lock
sbb
int3
jle
data16
or
mov
leave
aad
mov
sti
test
jg
push
cmp
push
cwtl
mov
cmpsl
xchg
mov
push
and
jmp
adc
imul
cmpsb
test
je
jp
es
sbb
mov
mov
daa
inc
imul
movsb
jo
or
pop
imul
mov
test
mov
cmp
jo
pop
sahf
pop
cmp
repnz
xor
pop
xor
mov
inc
shll
or
lock
inc
mov
popaw
into
je
sbb
loopne
arpl
stos
cld
fwait
or
cwtl
fcom
fnsave
cmpsl
fdivl
sbb
push
loope
adc
int
pop
mov
push
imul
xchg
cmp
stc
imul
mov
orl
add
lahf
loop
mov
mov
cmpsl
xchg
cmpsb
adc
inc
xor
ret
ret
notb
sub
push
xchg
push
mov
fcoms
repz
pop
add
jno
cs
in
dec
cmp
stos
inc
mov
push
add
xor
lock
scas
and
push
fs
test
xlat
pop
mov
int
inc
mov
imul
fimull
sahf
adc
jne
cmp
inc
out
jle
mov
insb
loope
pop
aas
outsl
mov
and
neg
mov
popa
stc
daa
je
dec
sarl
inc
pushl
xorb
in
fiaddl
sub
fnsave
fists
stos
inc
fistl
sub
out
lock
dec
inc
imul
dec
pop
pop
ljmp
es
shl
cs
xchg
cmp
xchg
loopne
scas
and
enter
dec
cmp
and
pop
cmp
add
pusha
rcrl
fucomi
sbb
and
sbb
cmc
mov
sub
cwtl
rclb
adcl
sahf
push
inc
into
das
ljmp
xchg
aas
dec
out
arpl
sub
sbb
pop
fnstsw
adc
test
in
popa
rcll
lock
cmc
pop
bound
jns
lret
pop
lds
pop
out
test
inc
push
mov
adc
enter
cs
xchg
test
pushf
je
in
fsubl
mov
xor
aas
in
and
mov
jno
imul
and
inc
adc
cmc
ljmp
icebp
lret
je
pop
sbb
je
dec
pop
shlb
and
mov
or
cmp
mov
jecxz
jns
daa
and
repnz
jno
cld
adc
popf
pop
cmp
cs
int3
dec
rorb
das
inc
jl
xchg
test
dec
inc
mov
add
mov
mov
mov
and
aas
cmp
push
movsb
scas
stos
incl
or
imul
enter
addr16
mov
push
dec
inc
xor
sbb
movsb
cltd
dec
rol
mov
jns
xchg
mov
imul
js
jmp
and
pop
outsb
lds
or
mov
les
sbb
mov
pop
movsl
in
dec
mov
mov
in
daa
cmp
mov
mov
xor
dec
xchg
outsb
inc
pop
daa
fs
iret
movsb
pop
rcrb
pop
in
inc
xlat
sbb
and
xchg
lret
mov
adc
lock
mov
pop
lods
push
xchg
popa
pop
push
lret
xor
push
sbb
out
lods
cld
hlt
outsb
pushf
addr16
test
gs
sbb
mov
lcall
and
rcrb
fucomi
pop
push
jae
add
dec
ffree
ret
movsl
sbb
shlb
lods
in
xor
xchg
cltd
sub
insl
pop
or
jns
pop
imul
push
test
mov
mov
lret
addr16
or
adc
clc
dec
xor
popa
nop
les
ja
scas
push
xor
addr16
sub
push
imul
sbb
push
pop
je
sbb
sbb
insb
movsl
daa
nop
loop
mov
fs
jne
dec
xchg
dec
test
sub
rclb
repz
fs
xlat
push
js
inc
ret
jns
push
xchg
xor
daa
stos
push
mov
ret
imul
outsl
iret
push
mov
and
rcll
lcall
in
arpl
in
xchg
mov
ss
test
pop
loop
jae
movsb
and
int3
add
adc
xor
shll
adc
pop
adc
lret
popa
jmp
fdivrl
pop
stos
test
and
pop
cmp
pop
push
mov
cmpsb
inc
stos
mov
lds
ss
movsb
out
aas
cltd
sbb
mov
data16
cmp
mov
push
jno
cmp
mov
cmp
cmp
sbb
ret
add
lret
adc
cli
aaa
orb
imull
xchg
add
jp
ds
xchg
push
cs
mov
dec
out
sbb
mov
repnz
addr16
jb
rol
lock
fs
mov
jl
mov
daa
mov
stc
pop
sbb
xchg
push
xor
mov
hlt
jl
loopne
hlt
xor
pop
lods
push
enter
cwtl
push
mov
xor
adc
and
mov
mov
mov
dec
jmp
pop
sbb
popa
imul
jnp
pusha
lods
mov
insb
ficompl
adc
push
cmp
daa
xor
les
sbb
mov
std
mov
out
mov
inc
in
cli
popa
notl
bound
sbb
pop
in
xor
sub
rcrb
adc
mulb
push
popl
jecxz
pop
jecxz
in
jo
and
add
inc
xorl
inc
dec
jns
xchg
mov
and
stc
dec
out
cld
imul
jecxz
inc
mov
mov
out
leave
cmpsb
or
sub
sbb
mov
push
mov
loope
cmp
icebp
inc
mov
xor
icebp
stos
mov
int
pushf
testl
js
pop
lock
mov
xor
mov
repz
pop
cmp
and
in
scas
push
sbb
cld
pop
cld
xor
inc
mov
push
mov
pop
add
and
repz
jo
test
mov
jns
xlat
jno
subb
mov
lcall
rcr
inc
or
dec
mov
pop
and
pop
or
inc
sub
outsb
sti
stos
xlat
jge
insb
xor
mov
adc
imul
imul
dec
bswap
leave
into
loop
insl
leave
jle
test
mov
xchg
mov
mov
mov
ds
ja
clc
xor
xchg
xchg
xor
and
aad
fwait
mov
inc
in
push
add
into
popa
sbb
testb
test
xor
pop
sub
mov
push
sbb
sub
fs
and
enter
fldenv
sub
mov
ret
dec
adc
push
orl
or
lret
int3
test
pop
aam
inc
cmc
jp
popa
pop
add
sahf
insl
scas
icebp
int3
sub
and
clc
mov
aaa
mov
enter
mov
sahf
stc
ret
push
shl
lret
push
mov
ret
gs
hlt
repnz
cmp
xchg
dec
push
jo
movsb
loope
cmp
std
cmc
fisttpl
in
push
cmpsl
shrl
sub
sti
lret
test
mov
testb
nop
dec
shll
icebp
dec
aam
out
adc
outsb
dec
add
daa
or
hlt
jb
test
fiadds
jbe
sbb
add
cmp
pop
xchg
leave
pushf
cmp
pusha
arpl
mov
jecxz
insb
inc
nop
popa
adc
xchg
lea
movsl
int3
mov
stc
xor
mov
inc
inc
jno
mov
in
rcrb
inc
out
xchg
fbstp
les
push
push
iret
movsb
cs
in
inc
cmp
mov
clc
dec
ds
cs
pop
mov
dec
pusha
addr16
jo
adc
movb
cmc
push
test
xor
fwait
mov
mov
sahf
push
dec
adc
mov
pop
fsts
mov
or
ds
fwait
pop
mov
jecxz
cmp
sub
xchg
or
das
jge
cs
push
addr16
dec
cmc
push
push
repnz
cmp
dec
jecxz
stos
insb
jne
cmp
icebp
in
fisttpl
push
add
fstpt
xlat
xor
or
mov
in
mov
sbb
ljmp
repnz
or
icebp
repz
pusha
xor
cmp
xor
roll
jns
ds
std
stos
xchg
jmp
push
push
mov
out
jnp
pop
mov
dec
insl
pop
pop
mov
in
std
and
inc
shl
pop
xchg
inc
xor
popf
out
idivl
shl
mov
push
addb
jle
sahf
pop
xor
lods
jp
out
xor
ss
mov
xchg
call
cmp
xor
inc
or
bound
cmp
call
jns
repnz
mov
xchg
cmp
in
xchg
and
jmp
sbb
push
jae
test
stos
jb
dec
sbb
mov
cmpsb
ret
bound
je
dec
fcomps
or
arpl
inc
mov
sbb
xchg
out
jo
stc
push
xchg
inc
rcrb
mov
or
pop
push
push
sub
lcall
scas
and
sub
aas
sarl
jg
inc
leave
sub
into
add
push
and
mov
push
imul
sub
adc
test
inc
rcl
push
cmp
stc
jo
mov
xor
inc
jns
xor
xlat
mov
mov
and
cmp
cmc
or
inc
lcall
in
lds
test
scas
es
jb
repnz
jl
push
sbb
out
pop
fs
cld
lret
sub
mov
rcll
sbbb
mulb
xchg
push
xchg
das
jnp
stos
icebp
xchg
xchg
sub
cmp
stos
leave
xor
gs
xchg
mov
lret
cmpsb
jp
add
jp
ja
add
pop
sbb
jmp
lret
inc
pop
or
mov
xlat
cmp
inc
xor
pop
adc
or
movsl
jl
mov
mov
xor
push
adc
pop
adc
js
sub
in
mov
inc
xchg
mov
movsb
test
stos
xlat
push
or
add
mov
xor
fsubs
fsubl
mov
ljmp
les
dec
add
push
inc
ret
xor
or
mov
ja
push
jae
cmp
adc
cmpsl
add
adc
out
andb
lea
dec
or
insl
test
jae
stos
cltd
mov
xchg
aaa
test
mov
push
or
jp
insl
lcall
fs
iret
out
int
test
push
add
xorl
scas
adc
sarl
in
xchg
imul
dec
icebp
xchg
push
fsts
out
outsb
pop
xchg
add
xor
aaa
leave
mov
cmpsl
pop
dec
fs
fstps
scas
xchg
lods
jbe
dec
lret
outsl
lahf
adc
dec
out
or
cmp
imul
in
xor
and
jne
aad
movsb
add
aaa
or
jl
sub
xor
push
push
cmpl
test
mov
mov
jno
adc
sar
fucomp
mov
push
sarl
paddsb
push
enter
popa
and
inc
push
dec
push
lret
les
test
push
inc
pop
push
std
cld
ret
arpl
jbe
pop
dec
cmp
std
orl
mov
ret
or
push
aaa
pusha
jp
sub
fdivrl
cmpsl
das
push
xchg
clc
xor
inc
mov
out
xchg
mov
cld
icebp
cmpsl
sub
xor
mov
and
orb
enter
roll
into
sub
nop
mov
and
mov
cld
mov
popf
xor
pop
bound
xchg
cli
sbb
scas
push
or
pop
dec
loop
pushf
or
aad
lods
xor
dec
int3
cwtl
push
push
mov
lods
xchg
jl
push
cli
fwait
xchg
popa
int
fdivrs
mov
adc
jp
popf
dec
pop
push
xchg
lret
je
repz
dec
negb
push
push
jo
test
push
out
call
rcll
insl
jle
adc
sub
xor
hlt
dec
adc
mov
jns
push
popf
dec
pusha
sub
je
inc
add
jge
fs
mov
push
add
jo
vxorps
sub
rcrl
stos
lcall
popf
rclb
cmp
fists
ficomps
sarl
jae
lock
cmp
mov
pop
sbb
inc
jnp
jbe
mov
iret
ja
lock
cld
lret
mov
xchg
lock
addr16
sbb
mov
add
mov
ds
nop
or
das
mov
push
add
iret
xor
xchg
xchg
pushf
xchg
mov
mov
push
fwait
xchg
sti
push
fistpll
out
pop
int3
sbb
sub
lcall
addr16
stos
mov
das
subb
xchg
insl
test
jb
jne
out
xor
sbb
push
fsubl
je
mov
push
sahf
or
cltd
push
push
movl
movl
xor
inc
lret
or
pop
movsl
push
ret
sbb
jp
idivl
mov
stos
jge
fst
outsl
cmpsb
movsb
jmp
mov
push
sub
sub
test
ds
or
pop
lahf
xlat
sbb
xor
clc
cmp
fists
mov
mov
pop
lcall
stc
fnstcw
mov
mov
mov
push
scas
xor
in
push
pop
rorl
jle
jnp
fcoms
sub
fmull
rolb
cmp
push
inc
pop
rolb
in
lahf
mov
stos
fnstcw
jbe
mov
cmc
mov
adc
ret
sbb
sti
adc
outsb
ja
dec
push
and
sahf
fwait
sub
inc
in
das
add
sbb
and
inc
pop
fsubl
xorb
repz
jns
sti
mov
int
imul
or
lret
xlat
lahf
aas
test
pusha
xchg
mov
hlt
and
out
mov
jge
lea
pop
lret
inc
sub
adcb
js
out
push
std
decb
lds
popa
test
cmp
clc
int
repz
lods
jl
test
insb
repnz
and
fcompl
xchg
faddl
push
popa
repz
and
lahf
jne
inc
std
push
xchg
xchg
cmp
std
addl
dec
xchg
nop
insb
mov
rclb
adcb
jecxz
addr16
inc
loop
mov
add
cld
pop
jo
in
jecxz
cmpsb
outsb
fdivs
movsl
pop
popa
lret
or
dec
adcb
stc
mov
ja
mov
adc
test
mov
cmp
adc
cld
ljmp
movsb
nop
lret
cmp
insb
and
dec
nop
subl
lods
dec
popl
ret
sub
rol
testl
jbe
loope
test
test
jne
pop
call
out
enter
add
mov
jecxz
fmul
pop
dec
pop
xchg
sub
lcall
stos
nop
ljmp
lret
mov
popf
push
pop
cmp
iret
js
outsb
subl
out
cli
in
fldt
jg
jecxz
testl
je
fcmovne
nop
inc
mov
xchg
scas
sub
in
add
cmpb
and
out
jae
push
and
jno
repz
in
add
push
xchg
ljmp
ds
adc
xor
or
xchg
mov
repnz
das
hlt
fcmovb
test
loop
or
or
ja
pop
push
fldt
sub
icebp
and
cmp
adc
and
jb
cmp
daa
rcrl
sub
es
push
pop
pop
xchg
test
dec
and
dec
cmpb
pop
mov
sub
insb
dec
sbbl
jae
outsl
xchg
inc
lock
sub
mov
mov
sbb
or
hlt
pop
lods
add
adc
inc
and
add
clc
lahf
and
sahf
cmp
fistpl
jmp
push
sbb
dec
dec
mov
aad
add
or
mov
mov
pop
xor
inc
aaa
jmp
add
inc
pop
iret
das
ds
sub
pop
movsb
mov
call
icebp
dec
gs
fstp
push
popf
inc
jmp
jns
ret
push
cmpsl
stc
ds
inc
pop
jo
mov
jmp
mov
mov
fsts
dec
das
mov
or
seta
loope
xor
and
push
repnz
addr16
pop
mov
or
push
clc
es
cltd
cmpsb
imul
in
int
daa
fistl
fcomps
mov
xlat
clc
mov
mov
mov
sbbl
pop
lret
imul
cmpsl
adc
xchg
mov
xchg
leave
adc
mov
lahf
cmp
push
jnp
pop
jge
or
bnd
dec
insl
arpl
xchg
inc
pop
arpl
in
jnp
int3
js
inc
xor
cmp
inc
jmp
dec
xorl
std
test
pushf
rclb
scas
fldenv
push
push
or
shll
adcl
lods
cwtl
xor
sti
xchg
push
mov
xlat
nop
ret
add
inc
and
ret
fwait
sbb
dec
dec
es
test
and
dec
and
mov
adc
inc
xor
repnz
aas
sub
cli
xor
cli
call
fcompl
or
cmp
dec
dec
adc
mov
testl
ret
xchg
push
xlat
push
or
or
adc
push
pop
iret
push
das
fdivs
sarb
into
daa
mov
push
pop
repz
out
sarb
mov
in
lahf
cmpl
or
jmp
jae
ret
loop
add
movsb
jp
pushf
mov
aaa
out
add
aam
stos
std
int
adc
push
push
lret
mov
aas
mov
ret
lods
out
push
push
adc
jnp
pop
xor
mov
lock
mov
sub
movsl
stc
outsb
sub
test
xlat
nop
add
push
shr
clc
loope
cld
test
mov
repnz
push
sysexit
test
fldcw
test
xor
ss
push
fs
cmpsl
fadds
pop
push
stc
mov
push
inc
xchg
in
push
pop
jecxz
dec
out
adc
inc
int3
mov
shll
cmc
jns
stos
imul
and
repnz
sbb
cmp
push
in
sahf
pop
dec
lahf
xchg
clc
push
in
out
fmul
daa
lret
sbb
or
ss
lods
out
ret
sbb
mov
lods
inc
xor
in
mov
test
in
adcl
div
int
push
imul
sbb
scas
xchg
adc
mov
cmpsb
int
stos
imul
aam
and
into
leave
cli
mov
das
insb
rolb
dec
dec
push
push
add
cmp
sub
jno
mov
bound
es
sub
sub
or
cs
enter
jg
test
pop
les
push
mov
test
push
jne
repnz
fcoml
adc
jmp
inc
in
jnp
test
pop
or
daa
dec
mov
jg
out
push
push
and
int3
mov
shrl
out
aaa
ds
repz
mov
jb
std
dec
sub
das
mov
stc
icebp
adc
clc
enter
mov
add
mov
jmp
dec
inc
ljmp
xor
mov
out
pop
dec
and
mov
mov
push
cmovb
or
or
mov
push
lahf
aas
jns
loopne
notl
js
push
pop
jmp
clc
xchg
fs
dec
xchg
jecxz
test
filds
xor
jg
adc
pop
push
mov
mov
mov
scas
rclb
cmp
mov
ja
les
in
dec
roll
adc
xchg
lcall
pop
pop
and
sub
lock
mov
adc
aaa
or
dec
fbstp
rcrb
pop
push
sub
adc
pop
std
dec
xchg
xlat
xchg
or
gs
outsb
sbb
clc
in
add
xchg
mov
loope
pop
inc
andl
xor
out
push
test
mov
jecxz
adc
sahf
les
jb
add
mov
addr16
mov
lea
aas
or
stos
icebp
cmp
outsb
loop
test
pop
nop
pop
outsl
ljmp
out
addr16
xchg
je
xor
rolb
pop
not
mov
add
adcb
js
fiadds
std
flds
adc
push
in
cmp
in
adc
mov
push
push
mov
or
test
sub
pop
fwait
push
mov
adc
hlt
pop
into
xchg
int3
push
lret
jle
ss
aam
pop
mov
xchg
lods
add
xor
dec
addl
cmp
fdivrs
mov
les
mov
push
xchg
out
cli
ficompl
imul
out
cld
push
or
sbb
addb
lods
nop
mov
pop
cmp
insl
aad
mov
push
mov
or
xchg
sbb
bound
fs
loop
faddl
test
leave
jmp
inc
divl
jl
lret
and
in
and
fwait
jecxz
decb
sub
jb
pop
jl
sbb
mov
xor
xor
daa
icebp
bound
sbb
test
popa
mov
mov
jbe
push
sbb
in
push
clc
sbb
pop
sbb
adc
and
push
test
lret
leave
les
dec
roll
sbbl
lods
push
ret
cmp
shrb
mov
xchg
shrl
idivb
jmp
ljmp
lds
js
dec
push
out
and
sbb
xlat
lods
and
in
cmp
aad
mov
pushf
jbe
or
and
cmpsb
inc
cmp
lock
sbb
imul
or
movsl
or
cmp
lds
fsts
lea
sbb
xor
push
gs
cmp
mov
dec
std
cmp
stc
loope
inc
cmp
loop
ss
loopne
dec
adc
adc
inc
mov
test
cltd
hlt
sub
mov
out
sbb
popa
jg
push
movsb
mull
sub
fstpl
jecxz
imul
cmp
push
fwait
jnp
cmpsb
xchg
pop
aas
pusha
adc
rcll
iret
hlt
mov
repz
mov
xchg
jne
pop
mov
or
xor
aaa
dec
or
dec
mov
sub
into
jno
jnp
int
fsubs
sub
sbb
sbb
pop
mov
inc
push
pop
inc
outsl
add
push
mov
loope
add
push
mov
data16
add
lods
sbb
adc
jbe
fldl
out
out
shlb
dec
pop
xor
cs
fdivrs
jno
and
sti
test
dec
test
fiaddl
lock
dec
in
jne
adc
lcall
mov
and
push
scas
je
xchg
icebp
les
pop
mov
lret
imul
jle
outsb
sub
jle
fwait
xchg
pop
mov
je
xor
fnsave
sub
dec
dec
out
xchg
lret
bound
test
push
dec
hlt
test
leave
and
mov
mov
xchg
push
mov
insl
inc
mov
and
or
and
imul
xchg
cmc
es
adc
xchg
dec
adc
ja
mov
add
pusha
jmp
push
mov
test
int3
rclb
and
cli
cmp
in
adc
std
scas
ror
test
push
lcall
push
jns
jp
mov
push
mov
mov
jmp
fldenv
scas
dec
lds
adc
jl
popl
int3
mov
lock
add
cmpsb
mov
add
pop
aam
mov
out
ja
add
aaa
popf
xor
clc
push
popa
fdivr
lea
pop
sub
xchg
sub
jmp
aam
xlat
movl
or
and
mov
jp
sbb
xchg
inc
dec
lods
jns
and
data16
out
ljmp
jecxz
adc
pushf
lock
sbb
bswap
mov
fidivl
mov
add
inc
out
pop
adc
inc
inc
jle
fldenv
subb
cmp
mov
popa
and
pop
fists
shrl
mov
das
out
ficoms
mov
dec
sahf
or
jo
dec
rol
and
push
dec
xlat
push
ss
adc
data16
pushf
inc
cld
pop
ret
scas
push
sub
jns
xor
mov
cmpsb
inc
ljmp
lcall
dec
hlt
and
push
dec
sub
out
mov
or
outsl
mov
movsb
push
stos
pop
mov
or
adc
scas
imul
sbb
mov
push
pushf
jecxz
push
jnp
push
or
test
ficompl
mov
insb
repnz
rcr
stos
cmc
fists
add
sahf
jbe
dec
pop
mov
pop
iret
shll
es
out
pop
sar
cmp
jbe
xchg
mov
mov
lds
sahf
sub
lret
les
fiaddl
push
push
sbbl
pusha
jo
mov
jno
data16
testl
fnstcw
and
inc
in
adc
adc
xchg
jo
hlt
mov
mov
in
pop
inc
lcall
mov
imul
inc
fsubr
xchg
cmp
fnstenv
jnp
pop
push
outsl
imul
jecxz
inc
daa
out
and
mov
xchg
imul
out
jmp
movsb
mov
fistps
xor
mov
inc
mov
sbb
sub
mov
sbb
loopne
xchg
fdivl
pop
stos
pop
rorb
ret
jle
dec
out
lret
shr
int
loop
push
inc
movsb
rcrb
or
aad
mov
or
test
cld
push
lret
std
jo
daa
enter
add
cmpsb
pop
xor
mov
gs
mov
ss
cmp
fnsave
mov
cmp
mov
jecxz
imul
mov
enter
aas
sub
fcoml
insb
xchg
std
int
fwait
mov
xor
pop
pop
sbb
fwait
sub
mov
inc
test
pop
dec
dec
push
add
pop
das
rorb
xchg
or
fwait
arpl
repnz
and
pusha
leave
outsl
orb
outsl
aad
movsb
xor
imul
test
dec
inc
sub
movsl
imul
arpl
arpl
mov
js
push
out
cmpsl
sahf
lods
ret
mov
ret
cld
inc
ljmp
push
jle
jle
mov
push
push
int
scas
stos
cltd
es
aam
outsl
or
roll
adc
push
bound
xchg
xchg
or
inc
test
aas
jge
fidivl
and
addr16
add
in
cmp
cmp
mov
lods
imul
xchg
sub
fcmovnu
arpl
in
or
pop
sbb
outsl
sub
xchg
incl
adc
mov
aas
icebp
lcall
mov
lods
push
dec
push
adc
mov
pop
sub
push
nop
jae
icebp
dec
jmp
and
int3
repz
cmp
push
cmc
stos
mov
std
gs
xchg
cmpsb
sarl
mov
sbbb
fnstenv
jle
inc
dec
xorb
int3
rcll
out
ret
xchg
jae
nop
mov
ss
xchg
mov
in
add
jnp
and
dec
push
push
adc
mov
xlat
bound
add
ss
pop
add
test
enter
pusha
pop
jns
mov
add
fld
mov
aad
jp
add
les
mov
add
jns
push
ret
cwtl
int
sub
pop
sti
push
dec
mov
mov
push
int3
pop
and
out
inc
out
cmp
lds
insb
bound
mov
pop
or
jnp
sub
mov
int
or
mov
cmc
iret
mov
cmpsb
sub
xchg
cld
xchg
repnz
cmp
jne
xchg
xor
adc
xor
add
in
sub
outsb
inc
mov
aad
and
cmc
inc
shlb
out
xchg
lret
aas
mov
push
pop
cmpsl
xor
pop
cmp
rorb
push
adc
pop
shrl
cmp
scas
adc
and
adc
daa
scas
pop
adc
sbb
lea
sbb
imul
xchg
mov
push
mov
mov
mov
add
jo
inc
dec
in
pop
fbstp
jl
xchg
sub
lret
js
cltd
jle
push
mov
lods
inc
xchg
mov
lret
out
in
addr16
xor
cs
ds
clc
cmpl
jb
sbb
insl
jp
mov
pop
arpl
mov
cs
mov
and
nop
mov
es
les
push
jbe
dec
lock
aam
scas
dec
mov
pop
ljmp
sub
xlat
xchg
shl
and
jne
insb
xor
cmp
adc
fs
pop
mull
sub
fwait
imul
xchg
faddl
lahf
mov
mov
mov
popa
out
sti
addr16
mov
push
dec
xor
sub
xchg
add
mov
fwait
or
pop
aad
fmulp
es
ja
xorb
adc
cmpsb
mov
ret
push
stos
xchg
inc
dec
loope
cmc
inc
mov
jne
push
push
cmp
insb
add
fisubrl
pop
loop
jns
gs
jmp
mov
sahf
push
ret
mov
push
inc
popf
inc
push
xor
stos
cmp
scas
stos
iret
into
mov
lds
stos
shrb
mov
mov
je
dec
push
push
push
cmpsb
bsr
mov
push
push
cmpsb
or
lret
xchg
sub
mov
adc
test
mov
leave
or
add
mov
add
cli
add
xor
xchg
movsb
or
jle
dec
imul
mov
rorl
faddl
fisttpll
xor
fadds
test
jo
push
mov
xchg
xchg
jnp
jle
cld
mov
xchg
pop
xor
mov
mov
scas
aam
rolb
or
cli
mov
mov
nop
xchg
jge
push
adc
call
fld
les
jp
dec
ret
push
shlb
xchg
xlat
fwait
mov
dec
fdivr
xchg
inc
xchg
lods
ret
aas
dec
sub
jno
js
insl
fcompl
lock
sbb
jbe
xorb
stos
rcrb
push
neg
loopne
data16
fsubrl
inc
add
addr16
icebp
push
inc
enter
or
pop
mov
data16
daa
xchg
popf
and
fwait
or
sub
cli
lds
xor
xchg
mov
mov
push
shlb
xchg
imul
xchg
jp
std
arpl
xor
rorl
push
sbb
shrb
ljmp
and
dec
fimuls
lods
mov
xor
mov
cmp
jb
jae
and
jle
pand
add
jp
pop
push
outsl
dec
cmc
ss
dec
test
cmp
sub
fldlg2
dec
cmpsb
jle
cmp
pop
xorb
xor
xor
dec
or
repz
dec
mov
lds
mov
ret
mov
sbb
ffree
popa
lcall
lret
xlat
inc
jp
icebp
mov
hlt
jmp
xchg
int3
mov
shrl
add
lahf
jns
lret
das
into
and
dec
popf
cmpsl
ds
push
cmp
in
icebp
adc
idivl
adc
sbb
lods
xor
sbb
pop
pop
ficoml
cld
dec
push
bound
push
mov
cmp
push
push
xor
testb
adc
pop
inc
pushf
jle
and
mov
xor
jbe
pop
or
sbb
imul
mov
sub
sbb
scas
mov
adc
inc
sar
loope
bound
out
sub
subl
stos
cs
aaa
mov
cwtl
xchg
jp
arpl
push
shll
je
test
and
fwait
daa
inc
js
scas
leave
inc
jecxz
mov
into
or
cs
dec
add
imul
or
out
fbld
lahf
aaa
or
sahf
movsb
imul
ret
cmp
or
or
xor
stos
fs
mov
and
push
jnp
outsl
jne
fisubrl
out
testl
cmp
leave
jg
sub
fcmove
je
test
leave
shll
es
xchg
rorl
fists
stos
add
jb
jno
std
fldenv
sub
imul
les
repz
sbb
arpl
cmp
push
nop
push
loope
adc
pop
dec
enter
push
popa
jo
call
lahf
push
pop
mov
mov
sti
jp
out
scas
cltd
addr16
mov
loope
sbb
pusha
cmp
scas
dec
add
orl
mov
sarl
jge
adc
repz
or
fucomi
and
inc
push
sbb
lret
and
mov
lds
cmc
cmp
sub
sub
jg
adc
dec
gs
inc
fwait
or
aaa
test
sub
pop
mov
or
frstor
adc
pop
mov
mov
fstpt
pop
into
xor
into
outsl
in
dec
leave
dec
fs
leave
inc
out
in
int
in
stos
insl
pop
pop
mov
fst
ja
outsl
jg
je
pop
jnp
mov
in
xor
ss
jecxz
mov
flds
insl
jmp
or
fdivp
xchg
out
pusha
arpl
adc
or
cmpsl
cltd
push
inc
in
sub
pop
or
xchg
ja
lods
mov
popa
xor
push
pop
movsb
jge
adc
xchg
mov
mov
pop
js
mov
ljmp
cmp
outsl
scas
or
xchg
cli
adc
gs
xchg
cmp
sub
dec
dec
out
inc
sbb
pusha
ja
pop
pop
pop
jge
sub
jp
rcll
movsl
mov
orl
add
and
jo
addr16
and
cmp
fwait
push
and
cmpsb
fimull
sbb
pop
adc
lods
mov
dec
and
pop
addr16
add
cmpsb
mov
push
push
sbb
imul
or
xor
out
fdivs
rolb
cmp
sub
enter
sub
mov
push
mov
cs
xchg
push
insl
or
jae
testl
ljmp
fistpl
xor
in
jmp
pop
sub
cmp
shlb
xor
jle
arpl
mov
sbb
xchg
inc
fistl
fcmovbe
mov
push
in
pop
ljmp
mov
fdivp
test
mov
xchg
pop
test
daa
cmpsl
cmc
or
movsb
push
or
arpl
push
jmp
pop
push
outsb
icebp
data16
shlb
or
adc
out
adc
and
add
and
xor
cmp
mov
inc
call
sar
ret
icebp
or
cld
icebp
jno
add
dec
cmp
repz
mov
aad
clc
push
nop
dec
pop
dec
push
out
jno,pt
lcall
out
or
or
loopne
sub
pop
sbb
pushf
daa
push
enter
test
rcrb
dec
mov
rcrb
imul
sub
and
jbe
pusha
cmc
mov
sbb
test
push
mov
and
aad
jns
cltd
mov
fcmovb
sbb
sbb
or
scas
aad
repz
cmp
push
rcrl
pop
bound
outsb
into
jbe
mov
call
lahf
pop
xchg
rol
fimuls
xor
mov
cmp
jnp
or
outsb
shll
xor
cmp
lcall
mov
mov
sbbb
or
in
or
test
jne
aas
fstps
mov
xor
mull
out
push
into
mov
xor
dec
addb
aad
imul
repnz
fstl
xor
mov
xor
jnp
fnstcw
pop
cwtl
mov
hlt
loope
adc
test
add
add
push
insl
jl
dec
dec
push
jbe
mov
sti
cmpsb
insb
clc
cmp
mov
cmpsb
mov
pop
test
adcl
and
mov
jno
sbb
mov
xchg
add
gs
pop
add
leave
jge
aad
pop
mov
out
jg
jecxz
subl
es
mov
jge
cs
fdivr
and
sahf
fmul
out
jmp
and
cli
inc
popf
scas
jle
pop
push
jo
or
jmp
or
fcoml
push
sbb
xor
stos
xchg
rol
xchg
sti
scas
jle
lret
jmp
loopne
pop
mov
cwtl
xor
aad
jns
jg
fmull
lock
adc
mov
fadds
sub
add
add
xlat
sbb
sbb
push
push
and
cmc
xchg
xchg
bound
mov
rcrl
jns
lret
mov
xchg
add
xor
mov
in
mov
pop
mov
in
aaa
and
ds
js
push
stc
test
sahf
add
push
enter
inc
popa
inc
and
hlt
lock
adc
lock
adc
xbegin
lahf
jnp
popa
data16
mov
adc
inc
stos
je
push
dec
ret
call
les
pop
or
adc
icebp
jmp
movsl
adc
pop
and
cmp
xchg
int
cwtl
insb
mov
nop
pop
and
sub
outsb
or
out
jg
mov
fidivs
jns
mov
jno
mov
imul
add
pop
mov
ja
sbb
xor
or
in
xchg
sub
push
outsl
imul
pushf
or
ss
popa
lods
push
and
xor
ljmp
sub
loope
js
cmp
pop
xor
daa
pop
pushf
push
xor
xor
inc
subl
jns
sub
sub
test
inc
rcll
je
sahf
arpl
lods
sbb
inc
or
je
shlb
ja
rcll
pop
add
stc
cli
adc
out
push
fwait
ljmp
aas
repz
cmp
call
shl
mull
loop
xchg
aaa
cmp
push
insb
sbb
push
and
mov
outsl
pop
in
jo
aad
fidivrl
mov
repz
adc
orb
push
mov
and
shlb
and
fildll
jge
xchg
xor
and
mov
jbe
lret
addr16
dec
add
add
push
in
sbb
mov
mov
sub
mov
push
in
mov
movsl
pop
mov
aaa
fidivrs
inc
loop
arpl
pop
movsb
inc
mov
fwait
sahf
mov
divl
shlb
jmp
std
push
sbb
xor
dec
add
sbb
lds
jbe
or
stos
or
outsl
jg
push
sbb
int
int
mov
lahf
fs
pop
shll
lret
pop
jp
lds
mov
lds
pusha
cltd
jle
cs
cmpsb
out
lahf
mov
push
lret
cltd
mov
mov
out
adc
popa
xor
push
inc
out
shrb
sti
popa
lods
fldl
cwtl
scas
inc
bound
dec
cmpsl
xor
cli
fdivs
push
fs
stc
xchg
je
fisubrl
push
popa
and
sub
data16
xchg
ror
xchg
fidivrl
ret
or
ds
test
add
mov
lret
cs
dec
pop
xlat
fcoml
xor
aaa
push
cs
xor
pop
shlb
xor
and
sbb
popf
jbe
ja
movb
les
or
dec
hlt
scas
and
mov
aam
andl
fsts
lret
int
adc
dec
pop
gs
mov
push
imul
pop
cmp
das
push
xlat
nop
pop
inc
cmc
xchg
sbb
mov
das
mov
jle
sahf
adc
dec
jnp
pop
add
jbe
je
xor
lret
and
mov
fsubs
cmp
xchg
andb
mov
jg
loop
pop
sub
or
or
adc
push
add
pop
daa
loopne
in
cmc
xor
push
mov
fildl
pushf
not
rcrb
cmp
cmp
xchg
decl
mov
push
jae
cmc
std
stc
sbbb
fwait
xchg
out
cwtl
cwtl
pushf
insb
lock
mov
jne
pushf
push
in
add
mov
clc
mov
add
sub
jnp
ja
shl
outsl
fcmovb
sbb
fs
inc
hlt
sub
jbe
sbb
adc
mov
push
lahf
leave
mov
inc
adc
sti
repz
in
push
cmp
cmp
mov
rcll
rep
and
sub
push
mov
mov
outsl
mov
inc
pop
sbb
xor
std
insl
mov
movsl
dec
aaa
mov
xchg
loope
popa
nop
cmp
inc
aaa
sub
jmp
enter
mov
mov
repz
test
mov
jmp
shll
in
sahf
jbe
rcrl
loopne
push
or
pop
pop
cmp
inc
push
push
js
push
mov
mov
sbb
dec
sbb
sahf
in
sbbb
icebp
cmp
dec
fstpl
cld
fmull
xchg
aam
pop
orb
addb
mov
test
incb
loop
mov
and
or
mov
cld
pop
adc
and
int3
rclb
sbb
cmp
lock
repnz
and
adc
xor
adc
lahf
pop
out
sbbl
adc
push
inc
jno
test
andl
cmpsl
dec
push
lret
ror
push
push
mov
sbb
cmp
ja
adc
divb
das
cltd
add
xchg
push
mov
adc
loopne
in
dec
xlat
and
pop
cmp
divl
pop
mov
dec
fs
and
int3
mov
je
xchg
mov
out
mov
inc
cmp
mov
push
inc
loop
data16
out
sbb
outsl
dec
xchg
loop
pop
xchg
sbb
dec
outsl
jecxz
push
and
mov
xchg
ss
mov
xor
mov
out
outsl
repz
xchg
push
xchg
mov
test
xchg
mov
mov
enter
dec
nop
lahf
in
jae
inc
ds
push
in
cmpl
out
sbb
mov
js
shll
and
outsl
lods
frstor
orl
pop
mov
rcl
test
xor
nopl
jbe
dec
mov
mov
loop
mov
mov
shrb
addr16
mov
pop
mov
bound
adcl
xchg
or
xlat
mov
in
addb
shrb
mov
fucomp
cwtl
inc
adc
jb
fs
insl
mov
hlt
in
subb
push
into
xorb
mov
or
cli
loopne
shll
push
push
out
xor
mov
xorl
mov
or
movsl
xor
js
sbb
lods
roll
sbb
mov
inc
adc
arpl
sub
rorl
orb
int3
and
or
lock
loop
push
iret
pop
or
in
adc
sbbl
push
inc
and
inc
cmp
inc
jnp
test
xchg
push
push
and
mov
pop
pop
into
and
dec
imul
add
dec
ss
rcll
jne
pop
jno
inc
jno
int3
out
sbb
repz
inc
movsb
fstps
gs
outsb
aaa
rorb
aad
iret
out
iret
sbb
scas
xlat
mov
dec
mov
aam
sub
sbb
jo
imul
out
cmp
and
out
add
sub
iret
and
adc
mov
jno
or
sbb
cmp
push
arpl
iret
shlb
mov
mov
adc
in
sub
and
ds
lock
out
popf
sbb
shrl
jmp
inc
jge
cmove
fdivr
adc
cmp
xor
lock
fnstsw
sub
inc
and
adc
leave
xchg
outsl
sbb
sbb
popa
mov
ljmp
dec
loopne
insl
xchg
adc
push
jecxz
push
subb
pop
cmpsb
inc
into
inc
and
push
cwtl
adc
fimuls
cwtl
inc
lret
xchg
roll
push
mov
cmp
in
rorl
sbbb
push
mov
pushf
repnz
dec
popf
mov
lret
xchg
push
sbb
lret
push
loope
mov
adc
loopne
das
das
repnz
jmp
imul
call
jg
lock
loop
fwait
outsb
js
rolb
or
pop
xor
xchg
aas
xchg
hlt
or
xor
jne
js
and
cwtl
and
cmpsb
lods
adc
sub
xchg
pop
loope
push
dec
mov
fsubr
dec
pop
insb
daa
xlat
pop
lret
xor
or
pop
sti
aas
mov
in
mov
cwtl
test
ds
lock
hlt
mov
popa
mov
negl
mov
lods
xor
inc
mov
hlt
mov
test
push
fadd
sbb
xor
jl
mov
adc
clc
add
inc
shll
and
lods
push
sbbl
ds
filds
adc
dec
lahf
scas
adc
lcall
jl
push
or
mov
push
ja
sahf
mov
push
sarb
cmpsl
dec
mov
ja
mov
icebp
inc
push
mov
pop
ja
call
cmpsl
mov
ja
cmp
jo
cmpsl
pop
push
lret
dec
xchg
fildll
les
mov
xchg
jo
subb
pop
xlat
and
rcll
sbb
xchg
andb
mov
xchg
mov
push
std
test
aas
lcall
test
lea
adc
idivb
mov
aas
adc
ss
sbb
test
sub
into
or
lods
movsl
sub
rcl
arpl
sahf
xchg
jp
or
pop
into
aaa
pop
cmpsb
popf
cs
adc
and
sti
cmc
leave
inc
test
mov
ret
enter
ret
scas
lahf
pop
mov
push
xchg
xchg
inc
mov
bound
je
jo
jo
xchg
rorb
xchg
out
incb
les
outsl
push
push
ljmp
das
push
add
es
repnz
cmpsb
cmp
bound
repz
dec
cltd
jp
pusha
sub
push
lock
out
sbb
ss
fdivr
xchg
lock
pop
mov
cltd
jns
and
xor
int3
cli
mov
jg
adc
and
pop
mov
jnp
push
cmc
mov
or
adc
mov
ret
xchg
enter
movb
xchg
inc
fistps
inc
mov
adc
xchg
dec
and
outsb
or
leave
mov
sub
mov
testb
add
and
rcrb
outsl
sbb
or
or
cwtl
mov
mov
out
sbb
fsubrs
cmp
jge
scas
fndisi(8087
sahf
std
and
repz
push
add
iret
jno
or
iret
xchg
fsubl
ja
lock
inc
lahf
in
sub
aam
cmpsb
movsb
mov
cmpsl
cmp
nop
mov
jae
mov
dec
fcmovbe
xor
mov
cwtl
daa
ja
cmp
in
mov
sbb
xchg
loopne
leave
cmp
lcall
dec
mov
or
in
lods
lcall
mov
dec
pop
out
mov
jp
stos
fcmovne
int3
pop
aad
stc
out
push
ficompl
jo
push
xchg
stos
and
leave
notl
fcomi
test
sbb
mov
aam
xor
or
dec
movsb
mov
nop
lods
or
shrl
inc
scas
scas
and
dec
lret
in
xchg
inc
jle
cltd
popf
and
adc
out
rcr
loope
insl
cmp
mov
push
arpl
ret
out
or
dec
xor
shll
xchg
and
popa
xor
imul
inc
adc
xchg
pop
jl
cmpsb
std
sbb
push
jmp
lods
andb
test
popf
cwtl
cmp
mov
xchg
inc
dec
jo
ja
out
pop
mov
ret
and
orl
sub
sahf
ret
cmp
test
cwtl
and
clc
cmpsb
jae
ljmp
push
stc
cmp
ja
mov
clc
je
cmp
add
bound
gs
push
or
out
imul
add
mov
mov
mov
fcompl
push
bound
filds
out
fimull
xchg
cmpsb
push
mov
sarb
orb
or
mov
cmp
sbb
int
inc
stos
test
jnp
dec
jl
mov
je
stos
xchg
into
mov
adc
inc
jge
fs
aas
jmp
adc
xchg
ret
mov
lds
xchg
push
sti
leave
mov
dec
adc
outsl
fincstp
push
jp
cmp
test
mov
cmp
add
sub
insb
out
repnz
push
push
in
adc
and
add
pushf
jmp
sbb
int
lahf
inc
dec
inc
inc
mov
nop
out
jmp
xchg
out
push
xchg
and
mov
xchg
fs
aas
sub
loop
jbe
jae
pop
jecxz
lcall
pop
xor
cwtl
out
cwtl
js
leave
imul
sbb
mov
aaa
jmp
jmp
hlt
push
or
fs
or
dec
fs
scas
jmp
jmp
xchg
mov
push
in
cmp
add
aam
mov
push
sti
sub
dec
in
pop
sub
mov
nop
mov
jmp
hlt
add
push
fstp
sbb
xor
rcll
cmp
or
mov
add
sbb
pop
push
mov
aaa
jl
les
mov
add
ret
jo
stos
test
out
mov
les
adc
popf
jl
pop
test
cs
xchg
xlat
push
sbb
daa
mov
insb
mov
imul
fcomip
popa
ja
fistps
add
repnz
sub
cmp
mov
dec
xchg
mov
jno
or
sub
sbb
and
pop
or
add
mov
pusha
push
pop
xchg
es
push
and
in
test
adc
xchg
add
test
fs
or
and
xchg
push
push
jnp
rolb
pushf
rcll
adc
repnz
cmp
fiadds
and
out
ds
lret
fstps
cmpsb
xor
xchg
lea
xlat
ret
or
leave
cmp
shll
xor
cs
jo
repz
pop
in
sti
das
aam
push
dec
fdivl
add
js
jg
aaa
xchg
cmp
rcrl
test
ret
xor
inc
fstpt
test
addl
push
ljmp
mov
loopne
lahf
aaa
scas
jge
fisubl
pop
scas
mov
lods
lods
sbb
xor
pop
iret
ljmp
fnstcw
shrl
enter
shll
cmpsb
mov
mov
popf
pop
stc
push
inc
stc
xchg
test
inc
sub
adc
lret
mov
fmuls
push
xchg
push
jg
clc
lcall
sub
arpl
sub
xchg
jae
shlb
loopne
xchg
mov
cwtl
and
and
pusha
cmp
push
ss
push
shr
pushf
outsb
loopne
loopne
sbb
out
xor
add
les
mov
xchg
enter
pop
and
dec
sub
fimuls
subl
cmc
mov
add
scas
pop
mov
inc
enter
test
mov
or
jmp
push
cs
std
mov
add
mov
cmp
adc
sbb
inc
inc
push
pop
jecxz
push
inc
sarl
fucom
rol
in
inc
dec
repz
inc
cmpsb
mov
push
faddl
decb
aad
push
testl
sar
or
sahf
insb
add
xchg
or
or
lock
flds
call
imul
in
outsb
ds
repnz
iret
pop
xchg
push
mov
fwait
cmp
jp
inc
call
mul
das
bound
pop
xchg
jmp
test
ret
mov
adc
popa
xchg
xchg
out
test
ss
mov
cmp
popa
in
dec
outsb
jp
mov
and
mov
rorb
xchg
jg
mov
xchg
bound
adc
scas
mov
inc
fistpll
cld
fdivrs
sbb
inc
shrb
mov
rcll
dec
subb
out
cmpsb
cmp
repnz
inc
sub
nop
mov
cmpsb
lret
enter
add
dec
add
xchg
imul
movl
std
mov
ja
push
jne
cmc
repnz
int
fidivl
aas
xor
dec
shll
popa
jns
inc
and
fs
xor
cs
scas
dec
pop
mov
or
bound
in
xchg
shrl
out
jno
hlt
push
sti
imul
ss
not
pop
fsub
inc
sub
hlt
aad
dec
sub
call
aaa
and
xchg
repnz
jp
in
arpl
mov
xlat
jge
fnstcw
sahf
jle
push
inc
mov
cmpsl
dec
jmp
in
or
push
aaa
xor
sub
xchg
pusha
mov
sbb
fdivr
xchg
jle
imul
push
pop
pusha
int
push
insl
push
jbe
roll
notl
jecxz
arpl
loop
fsubrs
sti
mov
es
fwait
test
lahf
adc
pop
cmp
lahf
push
jmp
or
mov
push
repz
mov
popf
and
jl
shl
mov
add
lret
push
pop
lret
jns
jle
mov
int3
lods
xchg
test
push
push
imul
xchg
xor
scas
inc
insb
xor
lcall
test
mov
xchg
xchg
lock
push
inc
scas
push
gs
cmp
mov
adc
lock
jecxz
out
inc
mov
sar
inc
and
ss
or
test
cld
pop
dec
pop
dec
aad
add
rcr
stos
mov
pop
xchg
cs
insl
clc
mov
je
hlt
xchg
inc
dec
and
stos
arpl
pop
push
loope
cmp
xchg
mov
mov
test
sbb
cmp
cwtl
jne
mov
push
xor
lods
push
inc
sbb
add
les
and
shrl
add
dec
push
iret
fidivs
rorb
mov
and
addr16
and
adcl
dec
cmp
insb
xchg
nop
pop
mov
jo
arpl
add
jecxz
call
and
sahf
ds
cmp
jne
pop
jp
les
xchg
test
gs
jne
pop
xchg
adc
mov
xchg
ss
inc
fistpl
mov
dec
call
test
cltd
and
mov
jmp
lds
push
stc
add
or
in
inc
xchg
xchg
les
cmpsb
sahf
xor
add
add
pop
adc
in
adc
outsl
daa
mov
movsb
add
mov
stos
push
andb
pusha
push
xchg
cmp
idiv
pop
xor
cmp
pop
pop
lret
cwtl
jmp
xlat
cmp
fistpl
sbb
orb
scas
addr16
xor
mov
add
roll
jle
push
xor
ljmp
add
dec
adc
pop
fadds
xor
negl
shl
adc
sbb
jmp
fists
addr16
jge
xchg
xchg
clc
data16
sbb
inc
ss
push
bound
mov
xlat
sub
and
in
pop
jno
xor
pop
mov
popa
and
test
mov
cmpsb
pop
cmp
fcomp
enter
insb
sbbl
xlat
cmpsl
jmp
pop
mov
inc
hlt
mov
js
pop
cli
loope
inc
adc
sub
lcall
repz
adcl
imulb
movsb
test
xor
or
cmp
xchg
inc
xor
call
lret
add
inc
pop
aas
dec
push
in
pop
jl
xchg
jnp
adc
fstpl
subb
rorl
and
mull
xorb
sub
inc
das
scas
mov
mov
or
jge
stos
xor
shrl
fimull
xchg
test
dec
arpl
je
sub
pop
inc
enter
mov
cld
pop
in
clc
insb
xlat
or
mov
mov
gs
fidivs
mov
shrl
cmp
icebp
inc
test
call
nop
xor
cmp
jl
cwtl
sbb
jg
pop
addr16
mov
or
mov
jecxz
pop
sub
cmp
pop
sub
sbb
fprem
pop
push
ss
mov
lret
add
push
fcom
pop
mov
ss
test
into
pop
mov
jl
or
push
shll
sub
rcrl
sub
adc
cmpsb
xchg
push
int3
xchg
stc
xchg
loop
xchg
pop
pop
jl
fisttpll
cmc
ret
stos
xor
push
rolb
test
xor
cwtl
add
adc
pop
je
pusha
mov
cmp
fnstsw
mov
or
pop
ret
adcl
mov
lret
and
loope
inc
mov
mov
ljmp
push
jbe
out
cwtl
xchg
in
js
lret
and
inc
aad
mov
sub
xor
scas
fidivrs
pop
jnp
test
mov
pop
cwtl
scas
xchg
pop
insb
xor
inc
test
enter
packssdw
loop
test
push
or
xchg
mov
adc
dec
lret
dec
xchg
lahf
lahf
dec
lcall
pop
jo
sub
mov
add
in
movsb
xor
loop
dec
call
cmp
adc
mov
push
add
push
dec
loope
sbb
cld
call
icebp
scas
pushf
clc
stc
sbb
call
pop
jl
loope
fmull
jp
insb
inc
or
push
add
mov
jmp
jge
bound
mov
mov
loope
mov
sub
xor
inc
mov
fbld
xchg
out
in
call
dec
aam
std
jmp
addl
rorb
loope
mov
into
cmp
ljmp
sbb
jecxz
sbb
aaa
pop
clc
rolb
inc
dec
rorl
pushf
lds
aaa
fstps
xchg
daa
stc
out
loope
lcall
xchg
mov
sbb
ss
xchg
sub
xchg
mov
mov
adc
push
ss
mov
into
lahf
outsb
mov
cmp
das
xchg
push
jae
fnstcw
add
xor
testl
add
into
or
and
iret
pop
enter
or
or
and
imul
in
sahf
jle
mov
mov
jnp
adc
scas
push
add
and
jg
and
out
mov
cmp
sub
cli
sbb
and
repz
jb
lds
loope
push
hlt
and
out
popa
outsb
mov
adc
insl
pop
dec
or
inc
outsl
fnstcw
ret
lahf
addr16
lea
inc
das
pop
adc
xor
xor
push
aam
rcrb
mov
pop
fstpl
outsb
int
mov
outsb
pop
popa
add
mov
xchg
jle
repz
jmp
imul
push
in
push
cmovl
mov
pop
adc
clc
test
sub
cmp
std
xor
mov
mov
mov
mov
xchg
into
inc
mov
or
sbb
mov
ljmp
jmp
leave
fisubs
orb
or
or
push
test
subl
lcall
loopne
jae
aaa
push
and
lds
orb
imulb
pop
arpl
push
lahf
into
xor
addr16
aad
leave
cli
aas
jbe
mov
std
rorl
cmp
jge
add
icebp
addr16
cmp
push
and
sub
test
xor
repz
push
push
sub
lret
rolb
cmpl
pushf
pop
add
pop
icebp
fmulp
xchg
pop
js
xchg
xchg
mov
pop
rorl
mov
fld
dec
fists
sub
cmpsb
gs
add
sub
cltd
mov
jnp
push
frstor
push
xlat
xorb
add
fisttpll
lods
pushf
lahf
and
and
jle
test
cwtl
or
jns
dec
fbstp
loope
jno
push
lcall
xchg
les
inc
mov
jmp
dec
adc
xchg
xor
adc
mov
mov
addr16
pop
int
xchg
sub
outsl
gs
imul
mov
je
mov
movb
jge
inc
orb
pusha
pop
les
arpl
cmp
enter
jge
shll
xchg
aaa
mov
cmp
jne
xor
jge
cmp
jbe
stos
popl
das
jne
int3
idivb
int3
push
adc
test
sub
sub
lods
ja
outsl
std
int
adc
mov
outsl
call
mov
outsb
sbbb
lcall
cmp
mov
hlt
faddl
add
pop
les
add
sti
or
pusha
or
in
and
inc
mov
testb
shrl
mov
jno
xor
daa
out
cmpsb
jb
sbb
cli
mov
inc
adc
insl
ja
sti
adc
sub
sub
mov
mov
mov
nop
pushw
mov
adc
ja
hlt
push
xor
cmp
add
lock
xor
addr16
lods
and
pop
push
mov
jg
push
push
xchg
mov
fs
dec
inc
pop
xlat
test
sub
decl
mov
push
enter
popa
push
pop
iret
mov
mov
sbb
pop
jns
test
lret
mov
loop
cmp
and
lahf
mov
lds
lea
mov
es
arpl
je
and
in
jbe
jmp
daa
lds
push
xor
outsl
pop
aaa
mov
mov
ret
mov
inc
mull
jo
sbb
hlt
ja
cmc
cmpsb
lahf
into
sbb
in
jmp
aas
sbb
test
push
or
cli
push
mov
pop
mov
lcall
sub
addb
adc
add
cmpsb
jmp
pop
jns
sub
ret
into
cmc
lea
scas
sbb
inc
arpl
mov
lock
jp
xor
push
push
xor
jbe
je
pop
cmp
sbb
xchg
loopne
push
jbe
xor
iret
out
aam
and
sbb
jge
out
and
lret
fcmovnbe
push
pop
cmp
cmp
lret
mov
or
cmp
sbbl
out
testl
orb
pop
cli
xchg
jmp
gs
ljmp
sbb
mov
insl
and
imul
cltd
lods
test
icebp
fs
mov
sub
jno
lret
scas
push
or
and
mov
add
add
insl
loope
push
stos
mov
dec
xchg
ja
xor
or
movsb
push
dec
cmp
lret
xor
sbb
xor
or
nop
jae
inc
in
lret
push
lea
jmp
ljmp
sti
int
and
jg
mov
aad
or
es
push
lods
movsb
in
shrb
sbb
sub
push
repnz
jmp
adc
sub
cmc
inc
or
xchg
test
xchg
movsb
sub
pop
rclb
xor
call
dec
and
mov
cmp
stos
and
jg
test
fldenv
mov
pusha
or
cli
xor
addr16
and
pop
mov
sub
hlt
jle
stc
mov
jge
sbb
adc
outsb
mov
add
cmp
lds
into
pusha
inc
sahf
fistl
xorb
rolb
ret
inc
out
movsb
adc
aad
icebp
cmc
movsb
dec
shlb
push
cld
jb
repz
out
dec
sbb
sahf
add
push
push
das
adc
cmp
scas
and
je
sub
dec
adc
rcl
sub
jge
xor
mov
imul
out
mov
xlat
sbb
mov
push
repnz
pop
mov
jno
pop
pop
aad
aaa
push
or
push
lods
outsl
outsl
push
mov
xor
jnp
es
mov
imulb
add
adc
fs
xchg
shlb
data16
scas
fcomps
pop
daa
lret
in
gs
mov
in
sbb
mov
imul
inc
insl
sahf
out
ret
stos
sbb
xchg
sub
adc
pop
dec
outsl
popf
ljmp
mov
mov
xchg
xor
stos
pop
mov
add
aaa
xchg
xchg
xchg
xchg
testl
xorl
popl
pop
jno
xorl
shlb
leave
sub
pop
dec
mov
mov
insb
imul
sbb
inc
sbb
jecxz
cmc
jns
and
sub
dec
mov
fisttpll
frstor
hlt
add
out
test
adc
dec
mov
or
inc
inc
loop
mov
lret
stc
or
movsl
call
insb
outsb
mov
xlat
sub
cwtl
push
mov
push
pop
fbld
jb
je
rolb
lahf
adc
das
inc
popa
mov
pop
add
jae
xchg
ss
jno
cmp
cmp
repz
xor
fldt
push
mov
daa
das
pop
les
pop
insl
cmp
inc
push
jge
andb
fmulp
pop
cmp
fdivl
movsl
sbb
ja
movsb
dec
pop
jl
lahf
mov
mov
mov
jecxz
push
cmp
pop
pop
adc
and
out
imul
cltd
fs
lea
inc
cs
mov
out
push
push
jp
jae
mov
xor
mov
aam
aad
or
hlt
or
je
jg
jae
cmpsl
jno
xchg
sbb
imul
sbb
aaa
jae
mov
in
add
inc
cltd
sub
aaa
jg
out
mov
xor
ds
lcall
stc
mov
ja
push
mov
adc
add
add
mov
pushf
push
sbb
jmp
sub
cli
mov
xchg
jns
pusha
push
aas
xchg
sub
inc
mov
mov
push
dec
in
dec
mov
jbe
cld
ljmp
ret
cs
mov
jo
cltd
cmp
mov
aad
mov
dec
lods
or
cmp
fs
pop
jbe
test
jbe
pop
inc
stos
das
in
mov
sub
cmc
jb
lea
movsb
sbb
xchg
sbb
jb
jne
clc
cmp
xor
sbb
and
sub
adc
repnz
push
xchg
jge
jns
movaps
ret
dec
hlt
fs
dec
xchg
mov
or
mov
add
in
mov
in
daa
scas
cmp
ret
test
jns
ljmp
test
mov
repz
and
jmp
cmp
add
loope
addr16
pop
sbb
jnp
lret
sbb
ss
push
cli
jb
shr
shll
stc
dec
inc
push
push
js
sbb
jb
jmp
pushf
fcomip
fcmovnu
xchg
int3
jae
adc
cmp
jns
sbb
xor
and
mov
xchg
negl
and
mov
sub
jp
loope
and
push
mov
lods
ss
ljmp
jbe
stos
jmp
add
adcl
mov
pop
test
sbb
dec
rorl
jno
jmp
xchg
lcall
xchg
cmp
dec
sbb
ja
adc
xchg
jl
sub
out
push
nop
sahf
mov
lea
jecxz
push
jb
mov
lods
mov
push
xchg
loopne
xchg
in
andb
sub
fldt
testb
push
sub
dec
jle
es
cmp
adc
sub
enter
dec
sti
lret
fsubl
push
idivb
add
bound
adc
adc
cmpsb
add
push
jb
notb
pop
push
lcall
dec
shrb
mov
jmp
adc
lds
sahf
ret
aad
pop
or
pop
insl
subl
jl
push
es
sub
inc
jl
jne
lret
aam
lods
xor
aad
out
mov
out
mov
adc
or
and
cmpsl
sahf
mov
dec
jae
repnz
mov
dec
in
idivl
rorl
mov
scas
outsl
xor
rorl
mov
mov
jp
cmp
push
inc
dec
or
in
cmp
test
xchg
sub
mov
insb
loop
imul
sbb
rorb
cmp
movsb
and
add
sbb
mov
mov
fists
setne
lock
nopl
pop
mov
push
test
rol
jnp
cli
xchg
mov
outsb
mov
xchg
gs
fsubrl
mov
push
stos
lret
outsl
std
fcompl
rol
sub
aam
push
inc
ret
outsl
in
fisubrl
mov
inc
sub
mov
int
imul
mov
rcl
aad
push
pxor
pop
or
mov
inc
movsl
xor
or
push
add
sub
or
cmp
jbe
push
fstl
adcl
jb
not
jg
jns
jns
scas
or
add
ja
jg
out
pushf
jg
push
je
gs
call
sbb
xor
xor
daa
xchg
movsb
add
lret
lret
arpl
in
push
sti
stos
cld
icebp
and
test
dec
lahf
in
fucomp
scas
dec
mov
xchg
cmp
jno
inc
hlt
jle
scas
repnz
cmp
cmp
add
pop
jp
aad
and
aam
xchg
mov
pop
cld
ret
push
xorb
or
iret
lcall
imul
mov
in
dec
faddl
enter
sub
lret
pop
aas
imul
sar
bound
pop
or
sbb
cmp
ds
cmp
xchg
mov
scas
and
pop
sqrtps
xchg
lcall
jae
mov
cmp
push
push
loopne
hlt
xor
sub
mov
or
cmp
lock
js
cmpsl
dec
pop
pop
mov
add
sti
cmp
push
cmpsl
cmpb
bnd
test
push
rcr
pop
sahf
xor
dec
lock
push
js
inc
cmp
cmp
aas
cs
mov
je
incb
std
es
fmull
dec
sub
aas
aam
imul
or
imul
fiaddl
xchg
mov
test
xor
add
int3
pusha
in
cld
scas
jecxz
and
cmp
loop
sbb
and
dec
mov
cmp
pop
addr16
dec
loop
dec
push
push
lcall
aaa
outsb
aas
pop
je
outsb
xchg
jno
daa
mov
sahf
pop
cmpsl
inc
pop
out
sti
lcall
adc
push
cli
xor
ljmp
das
xchg
dec
inc
inc
sbb
add
jne
std
xchg
imul
insb
test
xchg
pop
fistl
repz
repz
xchg
filds
daa
int3
jns
pop
mov
pop
cmpb
popf
aad
inc
insb
fscale
adc
pop
mov
rclb
sub
dec
addr16
jl
mov
imull
sub
xchg
add
sub
fsts
fsubl
lret
cmp
jg
sbb
dec
scas
mov
inc
mov
dec
jle
pop
repnz
imul
out
jl
cmp
ljmp
jo
movsl
jecxz
int
enter
jb
lods
outsb
pop
push
cmp
mov
fwait
xchg
mov
and
into
sbb
xlat
aad
arpl
bound
add
aas
xchg
adc
popa
add
adc
adc
rcrl
dec
sbb
jnp
jmp
fisubrs
ret
xchg
push
xchg
mov
out
xchg
push
mov
cmp
sub
mov
movsb
aam
shl
fwait
das
insl
jnp
mov
jo
add
cmp
mov
lock
insl
pop
fldl
dec
clc
clc
sbb
add
repnz
test
jne
shrl
push
mov
stos
mov
fimull
pop
dec
lods
xlat
sbb
sub
imul
jae
xchg
loop
fdivl
arpl
lock
push
and
sahf
adc
roll
andb
cmp
outsl
jne
xchg
mov
shrl
sub
or
pop
xchg
xchg
mov
jecxz
lret
shll
jno
sbbb
test
punpckhwd
sbb
mov
sub
and
mov
scas
mov
mov
call
cmpsb
jecxz
mov
dec
mov
mov
push
xor
mov
push
loopne
es
mov
and
pop
push
jmp
test
int3
pop
mov
scas
xchg
push
call
nop
popa
call
dec
and
sub
adc
fdivs
sbb
xor
push
push
cmc
push
and
or
lcall
adc
out
popa
pop
cmpsl
add
inc
pop
in
and
mov
inc
xlat
cltd
jp
scas
filds
mov
sbb
outsl
repnz
xor
test
stos
cs
mov
mov
cmp
sub
cmp
shl
inc
in
xor
shrl
andb
cmp
xchg
flds
mov
es
pop
or
xor
sub
es
cltd
or
js
dec
add
out
fstpt
mov
fs
inc
sub
ljmp
jg
sub
pslld
cmp
loope
cwtl
mov
insl
cmp
mov
cwtl
addr16
mov
jecxz
cmp
addr16
lahf
popf
bound
pushf
mov
pushf
push
dec
inc
pop
xchg
push
sti
and
scas
and
jns,pn
jns
lods
shll
and
inc
faddl
es
jg
pop
movsb
xor
dec
push
sub
shrb
pop
je
mov
push
dec
fistpl
je
popa
inc
dec
scas
test
dec
pop
insl
cld
pop
aam
xchg
aad
pop
icebp
fidivrl
mov
fidivl
xor
sub
movsl
mov
ficoml
mov
ljmp
jo
adc
jg
cwtl
fisubs
pop
sub
popa
cwtl
xchg
and
and
mov
mov
int
jmp
clc
sbb
cmp
stos
dec
fdiv
jo
jno
xor
in
data16
dec
call
adc
repz
inc
jecxz
aaa
lahf
imul
xlat
mov
fsub
sbb
pop
and
jmp
inc
mov
xor
sbb
dec
gs
out
pop
xor
call
or
mov
pop
cld
out
or
add
push
inc
add
xchg
xchg
push
sub
mov
pop
cmpsb
icebp
int
sbb
mov
lahf
popa
pop
out
jge
sub
sub
cmp
pop
ja
add
sbb
movsb
dec
add
mov
mov
or
stos
push
out
mov
pusha
add
push
std
dec
out
mov
mov
sub
test
stos
repz
lahf
mov
les
cld
in
fmul
dec
mov
and
idiv
pop
lcall
roll
jns
ja
nop
xchg
mov
or
inc
es
mov
bound
xor
sarl
inc
fidivs
js
sbb
jo
xchg
or
sti
lahf
sbb
xchg
or
cmp
cld
test
gs
mov
shr
hlt
ds
scas
jb
jl
sbb
push
cmpsl
and
push
push
inc
fistl
out
mov
and
shl
loopne
or
xchg
pop
and
bound
inc
loope
repz
or
mov
lds
int
push
jb
lcall
outsb
mov
dec
iret
sub
or
and
rcrl
ret
add
push
sbb
mov
int
daa
imulb
fwait
pop
push
popa
pop
jmp
out
mov
mov
insb
xlat
aad
arpl
add
dec
xchg
dec
subb
cmp
nop
jmp
xchg
insb
imul
fs
inc
or
mov
jge
out
sbb
cmp
and
lods
add
pop
jecxz
and
xchg
adc
push
insl
fisttps
test
popa
dec
adc
cmc
sbb
lahf
sub
xchg
push
pusha
int
loopne
je
push
mov
cmpsl
mov
ljmp
inc
mov
aad
mov
inc
mov
addr16
js
mov
jecxz
mov
add
push
or
imul
push
jo
xchg
fimull
jecxz
loope
push
jmp
cmp
xor
inc
sbb
mov
sarb
mov
loop
xor
xchg
fisttpl
jns
test
jl
cmp
push
xor
add
int3
sub
dec
inc
add
adc
add
int
fucomi
mov
loope
jo
jmp
mov
cmc
pop
sbb
lods
rolb
mov
xchg
stc
fcmove
shl
movsl
jecxz
jnp
push
or
movsb
mov
mov
sarb
cmp
ret
pop
lock
xchg
mov
in
or
mov
push
jp
dec
lea
rcrb
xchg
inc
cmc
daa
test
pop
mov
pop
imul
xor
out
adc
fistps
cltd
inc
cmp
jo
dec
popa
dec
icebp
imul
mov
rclb
imul
adc
mov
scas
add
xor
test
mov
sbbl
pop
fwait
add
fmull
lea
out
popa
pop
sahf
cli
sub
pop
adc
cltd
roll
je
fwait
pop
fs
mov
pop
in
nop
je
xor
nop
stos
cli
stos
icebp
push
or
pop
pop
ds
out
jmp
xor
in
push
mov
lcall
lea
sub
nop
pop
cmp
xchg
mov
mov
ljmp
jg
dec
adcl
push
cmp
mov
and
mov
xor
out
xchg
inc
dec
aaa
pop
ret
push
push
jmp
cli
rorb
push
data16
add
adc
icebp
inc
push
enter
call
sub
inc
nop
cld
fidivrs
adc
add
or
add
into
mov
push
mov
cmp
mov
lret
jno
sub
mov
pop
ljmp
cmp
jecxz
and
lods
push
inc
mov
mov
out
add
hlt
loop
les
xchg
xorl
imul
jb
cmp
scas
xor
pop
mov
xor
aad
mov
ret
sub
add
loopne
inc
fs
pop
mov
mov
incb
xor
mov
mov
mov
jecxz
arpl
in
xor
pop
ret
nop
mov
enter
or
mov
fildll
repnz
cmp
mov
clc
cmp
sub
addr16
stos
mov
xchg
inc
cwtl
xchg
lods
pop
add
or
push
adc
adc
inc
xchg
inc
lret
inc
dec
in
fcmovnb
or
cwtl
loopne
jae
outsl
leave
jge
mov
cltd
or
notb
rcl
into
pop
push
push
adc
ljmp
dec
cltd
mov
cmpsl
nop
and
test
ret
decl
cmp
mov
pushf
icebp
gs
pop
daa
mov
adc
lock
add
cmp
jl
cmpsl
sti
ds
fdivrs
mov
and
imul
sar
mov
and
mov
sarb
fwait
pop
or
js
imul
mov
xor
popf
sahf
or
arpl
dec
jl
js
inc
repnz
and
sub
adc
mov
mov
cmc
and
xchg
test
add
or
leave
mov
pop
pop
sub
sbb
test
inc
push
mov
loopne
and
ljmp
clc
cli
xor
nop
mov
out
outsl
sbb
add
cmp
popf
jnp
ss
aam
rol
ds
mov
jbe
hlt
fsubr
insl
xor
fldcw
fxch
dec
add
ds
ss
xchg
inc
fimull
inc
xchg
sub
pop
pop
aas
std
or
rcll
andl
pop
mov
mov
dec
cmp
mov
shl
jo
out
push
mov
leave
mov
pop
mov
jl
aaa
fucomi
cmp
mov
int3
nop
idivb
imul
out
aam
mov
inc
aam
dec
stos
scas
mov
mov
adc
pop
jae
enter
in
out
jbe
nop
imul
and
add
orl
clc
sub
or
mov
sbb
fs
daa
add
adc
aam
jnp
pop
ja
lods
fstpl
sahf
pop
hlt
mov
jg
mov
inc
mov
imul
mov
out
stos
out
mov
jecxz
jecxz
inc
dec
ret
adc
pop
xor
jl
scas
mov
bound
mov
xchg
dec
cmpsb
loopne
repnz
outsl
inc
mov
sbb
into
xor
jg
out
bound
adc
mov
aam
adc
sub
push
cmc
shl
scas
mov
loopne
les
dec
push
and
pop
mov
imulw
mov
movsb
jle
addb
xchg
dec
rcrl
addr16
bound
jo
sub
inc
add
mov
xor
test
fdivl
incb
mov
movsl
testl
sahf
cmp
pop
jle
test
out
jns
dec
sbb
sarl
cmp
inc
xchg
in
and
in
adc
xor
test
pop
sub
cmpsb
push
push
pslld
push
loope
cltd
xor
rcll
ss
aas
jmp
mov
fildll
mov
mov
sbb
dec
sub
arpl
cmpsb
lcall
sbb
mov
out
xorb
push
push
ja,pt
mov
add
insl
jbe
arpl
mov
adc
adc
sub
jl
out
int3
dec
cmp
pop
pop
cltd
mov
xchg
push
testl
lret
out
cmp
mov
ss
movsl
inc
sub
movsb
sub
ljmp
or
out
aam
and
adc
add
loopne
subb
shll
rcr
ljmp
sbb
sahf
movsb
dec
negl
or
mov
pop
loop
lcall
inc
fcmove
out
outsl
cwtl
push
sbb
jo
push
in
push
int3
test
fidivs
pusha
int
xchg
sahf
add
inc
pop
das
cmp
lret
mov
dec
out
xchg
subb
pusha
sbb
fistl
flds
dec
sub
cmc
sbb
dec
sbb
push
mov
popf
gs
and
lods
add
and
repnz
ljmp
inc
and
push
pop
out
test
push
cmc
push
mov
sub
ret
push
nop
mov
sahf
lcall
mov
inc
push
test
int3
cltd
mov
je
les
test
push
dec
out
ljmp
xchg
sub
int
mov
movsb
jg
mov
sub
dec
daa
ljmp
out
shr
test
sub
xchg
jmp
outsb
test
ds
imul
pop
roll
ss
jp
cmc
out
aad
shr
mov
inc
je
push
lods
stos
mov
sub
pop
dec
mov
cmp
cmp
popf
out
mov
aad
inc
and
imul
cs
inc
xchg
jne
xchg
repnz
leave
movsb
mov
inc
scas
mov
or
jecxz
inc
popa
push
lods
aad
iret
xor
sbb
and
sub
mov
inc
in
xor
out
or
shlb
or
and
fidivrs
inc
cmc
inc
out
lret
ljmp
push
into
loop
das
shll
cmpsb
pop
adc
pop
xchg
pop
or
push
aam
push
in
xchg
or
test
mov
icebp
in
adc
push
lods
testb
mov
and
xor
jo
and
inc
pushl
xchg
add
imul
fstl
sub
add
cmpsb
ret
mov
xchg
mov
ss
xor
pop
jno
xchg
andb
out
cwtl
mov
aad
xor
dec
pop
push
aaa
and
daa
scas
lret
mov
aas
dec
jmp
xor
push
mov
aam
in
aam
xor
or
inc
popa
xor
fadd
and
mov
in
xchg
push
out
in
add
or
inc
lcall
aaa
sahf
pop
dec
sbb
xor
jb
dec
dec
daa
push
int
std
popf
or
flds
aaa
movsl
mov
in
insb
sahf
push
dec
into
aaa
pminsw
mov
fisttpl
js
lret
gs
mov
ffree
ds
jns
sub
out
jne
xor
sarl
mov
inc
ret
pushf
pop
xchg
mov
jno
inc
out
cmpsb
repnz
dec
stc
out
ljmp
stos
pop
or
bound
lods
pop
es
jmp
adc
mov
mov
add
adc
outsb
add
xor
in
int3
xchg
sub
sub
and
jns
pop
stos
test
mov
aaa
mov
aaa
dec
or
pop
fs
leave
or
shll
dec
jbe
mov
xchg
inc
lret
jb
xchg
cmpsl
or
ds
ja
roll
pusha
out
push
fcoms
je
popf
fistl
ret
mov
leave
xor
sarb
gs
aas
leave
and
jmp
sub
sub
fadd
adc
dec
cmp
jl
stos
jg
cmp
inc
xchg
cmc
rcl
sub
call
xor
inc
sbb
xchg
xor
mov
push
fnsave
adc
out
cld
je
testl
mov
js
mov
or
push
mov
push
cs
enter
xor
jnp
mov
dec
sbbb
mov
aas
addb
mov
and
je
lods
push
scas
je
test
mov
sti
add
mov
push
mov
popa
mov
sbb
inc
push
push
xchg
mov
in
mov
push
mov
jp
inc
in
cvtdq2ps
scas
dec
clc
xor
dec
mov
pop
cld
sub
jb
or
rclb
lea
addr16
and
xor
stc
push
xor
cmovb
les
daa
aas
or
mov
xchg
cmp
mov
fldcw
imul
dec
inc
fs
hlt
mov
lcall
cs
xor
add
mov
repnz
jle
sub
pop
mov
test
sarb
outsb
inc
mov
in
mov
xor
mov
pop
cmpsl
aad
mov
not
dec
test
test
outsb
js
sbb
push
in
xor
imull
and
loop
xchg
sub
sub
push
es
cmp
xor
lret
sbb
pop
mov
int3
rorb
stc
call
inc
scas
dec
pop
jle
xchg
inc
xchg
scas
pop
sbb
int
jb
adc
roll
leave
sbb
les
les
cwtl
push
sub
es
xchg
imul
test
push
dec
and
dec
test
inc
jne
pop
mov
insb
jb
int
out
xchg
lahf
or
jno
ljmp
jns
ljmp
movsb
jnp
jb
gs
xor
in
mov
push
mov
sbb
je
pop
lret
cli
dec
pusha
scas
xchg
jmp
daa
lods
icebp
mov
inc
scas
jnp
lret
dec
or
ljmp
imul
sbb
dec
outsl
lods
pushf
xchg
xchg
add
out
inc
pop
sub
mov
and
out
sub
ja
adc
xchg
mov
sbb
inc
dec
testb
je
dec
cmpb
loope
dec
sub
dec
mov
imul
movsl
psrlw
mov
shrl
popa
ret
inc
data16
dec
inc
mov
xor
pop
jecxz
inc
pop
jecxz
xor
out
loopne
sbb
jo
mov
test
xchg
add
push
in
fldcw
lods
mov
dec
ror
hlt
mov
mov
cli
les
dec
mov
pop
mov
test
jle
shrb
es
dec
xchg
cmp
lret
filds
lea
mov
sbb
dec
fisttpl
sub
sahf
pop
sbb
mov
add
aas
mov
pop
test
in
inc
xchg
mov
sub
test
cmpsb
mov
mov
xchg
fwait
mov
sbb
mov
sbb
jae
fs
xchg
enter
push
and
nop
aaa
adc
mov
insb
mull
or
inc
popa
sbb
jns
sahf
cld
std
shll
outsl
test
sbb
mov
int3
inc
imul
mov
push
push
popf
in
sbb
mov
ret
ljmp
imul
or
or
adc
test
jmp
xchg
adc
div
lds
inc
pop
and
movsl
mov
test
and
jns
xchg
in
lock
push
mov
dec
jg
jne
cmp
lcall
lods
push
push
pop
mov
je
mov
push
insb
mov
lea
cmp
inc
push
and
int3
movsl
add
jne
jns
and
repnz
mov
sbb
fs
sub
inc
mov
rcrb
fstps
pop
cmpl
lcall
movsl
mov
push
add
adc
mov
push
xchg
jle
jmp
push
jbe
sub
in
mov
sub
andl
xchg
sbb
xchg
aas
add
enter
and
mov
inc
push
push
cmp
out
xor
stos
sbb
cmp
jne
out
enter
add
icebp
xlat
or
sbb
jne
cmp
jns
les
aaa
inc
loopne
test
scas
xchg
lret
push
jb
cwtl
sub
loopne
cmpsb
enter
shll
lods
mov
test
mov
loop
repz
fst
gs
ficoms
mov
data16
fwait
mov
xor
jnp
pop
xor
adc
push
loop
adc
cmpsb
dec
add
hlt
pop
xchg
push
adc
mov
xor
xor
test
mov
popf
fisttpl
push
sahf
jmp
push
adc
lods
cmp
outsb
cmp
push
in
sbb
rorl
inc
cli
xchg
cmp
pop
jnp
popf
lea
cld
mov
push
repnz
adc
cs
jno
lds
jg
int
mov
addl
mov
das
and
insl
xchg
adc
leave
sub
lahf
es
fidivrl
adc
pop
aam
jg
push
insb
xor
push
push
xor
mov
mov
cli
out
jo
sub
inc
ds
push
in
nop
es
mov
icebp
es
cld
xor
ljmp
repnz
sbb
mov
ds
cmp
push
mov
mov
lock
push
jne
push
vshufpd
pop
sub
dec
push
stos
repnz
sub
psubusb
lea
xchg
push
xor
or
lods
and
sub
pop
pop
stos
xchg
mov
imulb
pop
sti
cli
outsl
adc
fcoms
xor
lock
iret
mov
adc
movsb
inc
mov
mov
lods
push
mov
sbb
xchg
mov
test
out
xchg
repz
mov
call
jo
in
push
mov
mov
pop
pushf
mov
out
xchg
jne
lahf
jl
jno
dec
and
enter
adc
sub
aas
mov
call
xorb
call
inc
fisubl
jb
jmp
cmpsb
push
stos
dec
shll
xchg
pop
bound
lods
insl
mov
out
and
icebp
dec
add
cltd
fsubr
jno
add
sub
mov
pusha
mov
stos
loope
pop
adc
and
inc
repnz
mov
outsl
fidivrs
adc
ds
push
ljmp
push
push
pop
sbb
push
fidivl
cmpsb
rclb
push
movsb
in
add
call
cltd
lods
cmpsb
mov
mov
inc
popf
add
fs
dec
cmp
repnz
pop
scas
cmpsb
jo
rclb
stos
xor
mov
xchg
dec
sbb
or
pop
lods
and
dec
iret
cmpsl
les
pop
test
xor
and
adc
jmp
cmpsl
and
scas
jp
jne
jae
sbb
aas
sub
out
push
xchg
ss
jge
pop
sub
pushf
push
xor
mov
inc
jno
xor
adc
scas
mov
rclb
in
cmp
scas
adc
lods
xchg
sbb
or
xchg
and
and
sti
xchg
cmpsb
int3
popa
xchg
lret
pop
call
inc
push
pop
adc
std
enter
cmp
push
add
mov
in
inc
outsl
inc
add
mov
rclb
add
adc
and
ret
ljmp
in
xor
aad
int3
les
int3
jecxz
adc
nop
outsl
mov
and
lret
sbb
mov
mov
shlb
lods
andb
adc
xchg
loope
mov
loope
lock
in
inc
shrl
icebp
add
or
and
pop
cmc
cmp
out
push
jne
andl
pop
lcall
xchg
icebp
aaa
pop
js
adc
cmp
pop
pop
xor
stos
ret
or
or
push
and
pop
int3
mov
xor
imul
nop
pop
dec
inc
mov
xchg
test
push
js
gs
pop
adc
xlat
shlb
pop
call
fisttpll
lods
std
test
jg
add
dec
pop
fcoml
lahf
movsl
jno
daa
fs
clc
jmp
xor
push
jne
jmp
and
push
mov
test
cmc
or
fs
and
xchg
mov
mov
shrb
and
enter
popf
mov
fidivs
adc
int
sbb
testb
xchg
scas
in
add
loopne
pop
imul
jno
cmpsl
addr16
stos
nop
dec
add
movsb
jns
jne
pop
pop
testl
sbb
loop
push
lock
inc
out
sub
cli
sahf
xchg
and
or
lds
data16
inc
roll
hlt
adc
add
lahf
jnp
test
sbb
loope
pop
cli
out
ds
sub
mov
cld
stos
test
jg
pusha
or
inc
or
sub
xchg
jecxz
mov
cli
add
xchg
lea
mov
xchg
ss
cmpsl
cmpsl
jg
pop
sbb
jl
fbld
or
cmp
xor
mov
aam
xor
gs
daa
scas
or
hlt
xor
or
add
cmp
incb
jbe
cmp
inc
or
das
adc
sub
mov
and
lahf
jno
fistpll
filds
mov
lock
pusha
jp
dec
jne
movl
mov
movsb
or
hlt
xor
ja
popf
xchg
xchg
add
xor
outsl
and
popf
inc
daa
and
dec
dec
jb
std
and
std
rol
addr16
cs
inc
clc
enter
adc
test
mov
or
out
gs
xchg
addr16
xchg
mov
fs
fcmovb
in
sub
jnp
or
clc
ret
cmp
inc
jbe
pop
hlt
loop
out
enter
dec
clc
mov
jmp
addr16
aas
sub
in
cmp
mov
imul
test
xchg
lods
mov
inc
sti
adc
or
insb
mov
xchg
pop
push
sbb
pop
cmp
dec
xchg
push
xor
sbb
fnstcw
or
add
addr16
int3
xchg
insl
push
or
dec
push
push
mov
scas
push
mov
enter
test
dec
and
addr16
sbb
dec
incb
pusha
addr16
jecxz
mov
push
adc
imul
mov
sub
xchg
std
inc
jbe
xor
adc
mov
scas
dec
inc
iret
add
test
sbb
fwait
addr16
ljmp
cmp
cmpsb
sub
jp
lods
jge
xchg
add
push
notl
lds
aaa
fs
dec
sbb
inc
xor
mov
repnz
inc
gs
rol
push
dec
jp
out
arpl
sub
fwait
mov
pusha
push
sub
mov
outsb
mov
imul
sbb
xor
mov
arpl
into
jmp
pop
stos
or
push
lea
or
and
inc
std
inc
pop
dec
pop
xchg
adc
cmp
repz
stos
sbb
push
mov
mov
fmull
and
repz
mov
cwtl
cmp
or
xchg
push
xor
mov
je
je
cmp
divl
inc
ret
adc
adc
adc
test
insl
add
fucomp
push
mov
or
clc
adc
mov
je
aam
ja
xor
xchg
inc
inc
in
sub
and
filds
addl
adc
pop
daa
ret
testb
stos
mov
inc
mov
pop
outsb
jo
aas
cmp
aam
and
fsubrs
daa
test
mov
fsubr
adc
mov
dec
xlat
mov
stos
lea
jmp
cmc
shll
mov
icebp
fldt
cmpsl
dec
xchg
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
.byte
jp
mov
mov
xchg
popl
push
and
insb
movaps
mov
push
sbb
pop
jns
loope
in
xchg
in
fcompl
xchg
push
or
inc
add
fucomi
jo
adc
imul
jo
rcrb
xchg
mov
and
bound
leave
xchg
xchg
repz
fcmovnu
mov
addr16
aam
mov
and
jb
imul
dec
imul
push
pop
sahf
into
repz
fucomi
cmpsb
loop
call
push
addr16
pop
subl
cmp
fcoms
cld
mov
add
mov
jb
movsb
fldl
in
mov
push
mov
pop
sbb
mov
loopne
sub
popf
jb
cmpsl
imull
mov
cmp
jle
mov
cmp
call
lea
dec
sar
mov
scas
pop
arpl
jne
popa
adc
fimuls
stc
insl
movsb
mov
jg
or
dec
rorl
sbb
cmpsb
jb
xor
mov
in
mov
cmp
fs
mov
dec
insl
punpckhbw
xor
cli
fisttpll
daa
into
xor
imul
ja
rcrl
and
xor
pop
sub
scas
jle
fdivs
pushw
mov
jae
aaa
adc
cmp
jle
or
inc
movsb
jno
xchg
in
roll
push
inc
and
cltd
mov
bound
ror
loop
rcl
jo
jp
add
jl
push
ret
out
inc
test
insb
or
fcomps
push
add
push
pop
mov
pop
inc
cmpsl
inc
inc
dec
mov
sbb
aam
inc
fs
push
mov
movsb
jo
cld
xchg
cmc
clc
orl
or
push
cmp
jg
fists
xchg
pop
mov
pusha
cli
jbe
das
pusha
xchg
add
add
sbb
mov
sbb
add
push
dec
adc
aaa
push
push
xchg
cmp
xchg
adc
pop
dec
mov
mov
dec
jns
jecxz
xor
jno
pop
or
shrl
loop
xor
inc
scas
and
cmp
vpavgb
sti
xchg
adc
mulb
stc
pop
out
mov
and
add
mov
in
push
and
lahf
icebp
notb
pop
xor
scas
cmp
pop
add
rol
stos
iret
pop
jnp
cmpsb
mov
lock
push
ljmp
ret
rorl
pusha
fs
sbb
jns
cmp
aad
jns
inc
fbstp
outsb
inc
shrl
mov
daa
pop
sbb
xchg
dec
cmc
hlt
pop
adc
into
cmp
and
lahf
mov
bnd
jae
xchg
hlt
inc
test
jl
pop
sub
gs
imul
and
sub
pop
push
xchg
or
add
daa
or
xor
inc
mov
in
pusha
push
and
imull
sbb
inc
adc
stos
push
imulb
lds
jne
out
lods
ds
subb
mulb
sti
xor
jbe
push
arpl
mov
dec
dec
icebp
mov
sub
xor
sbbb
pop
js
jecxz
mov
stc
push
addr16
testb
sbb
stos
xchg
lds
add
xchg
mov
fs
xor
aaa
outsl
sahf
sahf
xor
lret
mov
enter
pop
xchg
in
insb
mov
inc
addr16
rcrb
sbb
rcll
rcl
sbbl
dec
icebp
enter
cld
nop
jne
add
bound
lret
mov
rcrb
and
jnp
mov
cmpsb
incb
jle
lods
add
pop
add
sub
push
icebp
jae
mov
cmp
std
xchg
inc
daa
fistpl
jle
popa
mov
test
mov
dec
jne
xchg
jno
add
int
cmc
push
out
mov
repz
add
add
sub
xor
bound
shrb
mov
aad
fcom
test
push
and
aad
dec
pop
xor
sbb
mov
and
fsubs
clc
and
fmull
jbe
mov
jp
ljmp
andb
adc
jbe
call
outsb
cmp
push
lods
xchg
pop
and
cmpsb
push
xchg
mov
scas
lret
insb
addr16
mov
adc
and
and
sbb
xor
mov
or
xorb
push
mov
fsubrl
cltd
push
cltd
icebp
test
adcb
sbb
push
pcmpgtd
popf
bound
mov
cwtl
stos
xchg
lret
dec
sub
add
stc
or
jmp
push
fsubs
int
or
movsl
xchg
lods
cmp
arpl
jae
add
enter
lahf
call
adc
out
movsb
cli
mov
add
dec
jg
ja
sti
mov
cmp
xchg
ds
push
daa
popf
mov
pop
cmp
lcall
cmp
xor
mov
or
jle
shll
movsb
cmpsb
icebp
jns
sahf
push
decb
pushf
and
inc
xchg
in
roll
cli
cmc
aas
mov
cld
mov
fldenv
pusha
jmp
mov
mov
daa
out
or
mov
sub
testl
xor
movsb
push
mov
repz
sub
lret
outsb
and
ja
insb
add
or
and
scas
popf
cmp
in
dec
add
loopne
mov
pop
adc
mov
in
mov
push
jecxz
sbb
stos
repz
aad
dec
cwtl
pop
aaa
xchg
xchg
imul
and
lea
jb
and
mov
jp
xchg
pop
cmp
test
popa
cli
mov
xchg
pop
cmp
sarl
inc
out
mov
push
out
push
jg
nop
loope
mov
movsb
mov
in
mov
fisubl
stos
pop
xor
sub
lods
test
cld
pop
insl
jns
mov
sbb
pusha
push
cmp
mulb
test
gs
mov
cmpsl
mov
cmp
ret
test
and
push
cmpsl
sbb
loopne,pt
mov
add
call
pop
insl
movsl
lret
loop
test
mov
mov
jecxz
fildll
decl
cltd
sarb
mov
testb
popa
repz
ss
cli
inc
cmp
in
push
pop
ja
scas
push
fidivs
popa
inc
sub
mov
mov
cld
xchg
pop
xor
add
dec
int3
mov
test
testb
xchg
icebp
lret
inc
sub
mov
mov
lahf
xor
push
xor
cld
int
inc
jmp
mov
insb
jb
mov
push
add
nop
add
ja
mov
lods
aaa
mov
push
push
inc
out
xor
bound
dec
fsubs
gs
mov
out
adc
adc
dec
inc
ss
jecxz
pushf
daa
addr16
loop
ss
sub
sbb
mov
cwtl
cmpsb
stc
xor
push
sbb
adc
push
push
push
mov
jns
xor
xchg
add
test
jo
pop
andl
mov
adc
push
mov
lods
imul
push
testl
out
dec
mov
les
mov
mov
mov
fimuls
xor
pop
push
jne
pop
pop
xchg
out
jle
addr16
push
das
cmp
rcrb
in
lea
inc
inc
hlt
shr
xchg
jne
rorl
dec
in
xchg
push
aas
stc
daa
into
out
int3
pop
xchg
and
js
cmp
out
push
int
outsl
out
sbb
popf
dec
jmp
into
repnz
in
jge
leave
std
inc
orb
sbb
mov
xchg
mov
mov
xchg
push
cli
icebp
aam
addr16
cmp
int
mov
rorl
stos
xor
ja
icebp
lods
sbbb
jge
mov
divb
pop
push
scas
jae
cld
adc
iret
fldt
in
fildll
lcall
std
outsb
ss
inc
mov
pushl
scas
mov
pop
xor
ss
mov
ja
fbld
test
jb
jl
cmpb
pop
push
dec
notl
fidivrs
aam
shrb
sbb
mov
in
push
mov
inc
sti
push
fldt
outsb
dec
sahf
or
inc
push
mov
add
sub
fbstp
pop
idiv
xchg
in
aaa
pusha
stos
dec
xchg
imul
sahf
in
mov
movsb
sbb
xor
fxch
jg
xor
cmp
mov
stc
xchg
lds
push
xchg
inc
rorl
push
faddl
or
mov
in
rcrl
fnsave
test
aaa
mov
jp
mov
fisttps
and
aad
inc
clc
mov
stos
scas
inc
dec
xorb
sub
cmp
shlb
aam
cmp
xor
sub
cmp
adc
sti
lock
add
in
cmp
nop
stc
test
out
aas
int3
arpl
dec
jno
inc
push
dec
sbb
fwait
cmp
cld
stc
adc
fwait
mulb
out
add
mov
sub
and
stc
stos
rcrl
mov
rol
mov
pop
test
sarl
pop
lcall
mov
testb
xchg
in
inc
js
xor
je
scas
sbb
jg
popa
inc
cmp
arpl
xor
or
adc
sub
lret
and
movups
pop
and
jb
dec
rcrb
pop
or
in
mov
inc
jnp
jbe
xorl
pusha
sub
push
lahf
sub
push
shll
jae
mov
inc
cltd
inc
mov
add
lret
mov
add
clc
adc
lcall
mov
cmp
ret
imul
mov
in
testl
es
mov
ds
pushf
jecxz
jmp
or
push
or
fwait
or
and
dec
lods
iret
mov
mov
push
jae
push
in
push
jo
mov
dec
js
fbld
pop
cmpl
or
stc
adc
daa
sub
addl
mov
test
sbb
cmpsb
add
jo
and
and
in
and
mov
addl
xchg
test
inc
dec
andb
pop
mov
lea
ja
inc
push
cltd
adc
das
cmp
jmp
jmp
mov
icebp
shll
ficoml
enter
sub
inc
sahf
aam
fistpll
sahf
pop
adc
or
std
pushf
das
pusha
fs
and
pop
imul
out
ja
fistpl
roll
push
cmc
jo
cmp
cmp
popf
jl
jp
rolb
inc
jnp
jp
scas
fnsave
pop
mov
inc
xchg
sbb
cmp
fbstp
jle
pop
mov
mov
sbb
adc
cmovo
cmp
mov
lods
mov
lret
and
dec
sub
add
cmp
jb
ret
push
rorb
out
lret
pop
rclb
adc
ds
out
fwait
cmp
cmp
loope
lods
dec
mov
mov
inc
iret
push
cltd
pop
fistl
dec
xchg
test
cmp
push
sbb
cmp
or
sub
movsb
push
movsl
jmp
sbb
and
rcrl
mov
addr16
rorb
call
lea
xlat
mov
aas
iret
data16
cmc
rcll
jae
dec
adc
ss
or
adc
cltd
pop
rorb
push
aas
jb
sub
mov
mov
cmp
xlat
lea
push
pop
addb
cmpsl
pop
jnp
push
ret
dec
sub
push
js
mov
ja
xorl
scas
dec
pop
add
shll
mov
and
pop
scas
adc
rol
cltd
or
jo
int
aad
jg
mov
xchg
popf
test
lds
icebp
cmp
loop
ret
in
sarb
ret
cmp
pop
cmp
and
mov
lods
lds
imul
jp
mov
mov
lods
iret
cli
jmp
daa
cmp
inc
push
fucomip
mov
ret
sub
test
shlb
insl
add
mov
jae
insl
pop
xchg
inc
push
icebp
xor
lea
sbb
jl
sti
mov
lcall
lds
ss
and
stos
ljmp
xchg
sub
aad
hlt
sub
movsl
out
sub
aas
sub
mov
insb
sarb
idivl
imul
mov
mov
andl
mov
lock
push
sbb
mov
dec
xor
inc
clc
out
lods
xchg
cmpl
cmpsb
push
mov
pop
cmpsb
pop
leave
pushf
iret
fadd
mov
fucomp
je
outsb
hlt
loope
lret
push
outsl
in
jp
cmp
js
lds
scas
jp
sub
or
jns
sub
mov
popf
in
push
jns
push
xor
pop
xchg
dec
fwait
xlat
andps
push
ret
movmskps
pop
xchg
xor
movsl
mov
dec
mov
xchg
or
sub
ret
xor
mov
jbe
cmp
adc
adc
xchg
cmp
ret
jne
and
xor
sbb
cmpl
push
and
or
int3
mov
jecxz
clc
das
sub
aad
cmpsl
les
xchg
popf
arpl
lret
test
push
aam
jg
mov
in
out
aaa
clc
adc
sbbl
adc
out
mov
push
xor
mov
jbe
sbb
sarl
or
mov
not
jle
sbb
int
jmp
in
or
call
add
jmp
dec
out
test
mov
pop
iret
stos
push
ret
filds
shll
aam
and
sub
mov
mov
dec
push
iret
inc
cld
xchg
movsl
sbb
inc
cli
add
adc
loop
xor
rcrb
mov
ret
inc
cmp
or
jnp
jns
adc
and
mov
dec
orl
push
sbb
push
pushf
inc
inc
xchg
hlt
or
pop
xchg
enter
mov
stos
cli
jg
lods
pop
js
pushf
mov
pop
stc
lret
jns
sti
mov
jo
movsb
aad
stos
mov
out
bound
repnz
movsb
ss
push
fcompl
imul
fcoml
fcmove
jb
test
jle
fxam
sbb
cli
addb
push
out
or
movsb
cmpsb
in
push
dec
push
push
mov
les
pop
xchg
daa
scas
xor
fistpll
out
hlt
adc
xchg
lahf
and
lds
or
out
sbb
call
pop
dec
xor
mov
test
movsl
mov
and
dec
mov
inc
jno
bound
adc
push
std
mov
push
lcall
out
sbb
rcrl
push
nop
xor
ljmp
lea
ds
cmp
sarb
movl
dec
mov
cmp
push
mov
and
and
aas
or
cmp
ret
adc
adc
pop
dec
lcall
adc
xor
mov
push
pop
imul
int3
or
add
loop
sahf
push
pushf
leave
jb
xor
mov
cld
ret
add
dec
lcall
jbe
inc
xchg
cli
aaa
int3
scas
roll
and
xchg
sbb
mov
std
andl
aas
ljmp
sti
dec
rcrb
push
mov
iret
add
inc
into
dec
repnz
frstor
inc
out
xchg
movsl
arpl
inc
icebp
cmp
stos
jg
mov
adcl
push
loop
mov
adc
call
lea
or
test
fisubrs
add
loopne
xchg
les
cmpsl
test
mov
cmp
add
out
jmp
mov
jns
and
ljmp
bound
push
incb
or
cltd
sbb
sub
lret
call
lods
pop
lods
mov
mov
daa
cmp
es
mov
repz
jp
sbb
mov
bound
push
jecxz
and
jmp
idiv
pop
inc
sbb
sti
aam
push
add
adc
orps
es
push
lea
lret
popa
cltd
aas
xor
dec
mov
and
lea
push
pop
mov
movsb
sub
pop
out
mov
nop
enter
sub
lcallw
mov
push
rorl
or
loop
fisttpl
xor
sti
xor
icebp
ret
mov
or
or
jl
fcom
aam
inc
cmp
pop
or
movsb
sub
mov
negb
mov
int
cmpsl
and
dec
sbb
js
negl
outsl
lcall
int3
mov
paddsw
arpl
mov
cld
cmpsb
stos
mov
scas
cmp
cmc
cli
dec
fldenv
call
cmp
lock
dec
enter
fcompl
in
cli
js
cmp
sub
bound
sbb
dec
jle
mov
inc
ret
pop
out
cld
xchg
mov
mov
mov
xchg
push
xchg
scas
mov
outsb
rcll
addr16
movsb
mov
shll
out
inc
fstp
inc
dec
lret
sbb
jae
add
cli
negl
fdivrs
mov
orb
cmp
ds
or
lahf
nop
sbbb
in
stos
clc
stos
lret
pop
ljmp
sub
popa
lret
test
push
lea
test
push
cli
sbb
repnz
push
sbb
jnp
inc
sahf
jb
and
shrb
popf
lret
imul
pop
mul
cmp
sub
push
loop
mov
lock
pop
fwait
in
in
inc
dec
cmp
cmp
pop
rorb
insl
xchg
add
mov
lahf
test
or
cwtl
jbe
mov
cwtl
adc
xchg
dec
xchg
pop
fucom
dec
xor
xor
jmp
xchg
test
pop
shr
les
pop
mov
or
shll
aas
iret
test
decb
inc
xchg
pusha
in
fnstenv
lahf
push
adc
lea
cmp
inc
repnz
mov
mov
xchg
push
cmp
fdivp
dec
jp
xchg
mov
popf
sbb
xor
jbe
loope
mov
aas
push
sbb
push
lods
cmp
in
in
cmp
mov
nop
in
push
cmp
negb
test
mov
das
loop
add
imul
int
lock
cltd
sbb
repnz
fisubs
push
lods
sub
jge
dec
push
sahf
outsb
inc
pop
in
inc
dec
xchg
and
jmp
mov
loop
call
shll
insl
movsb
out
test
mov
push
pop
xchg
xchg
add
iret
popf
aam
xchg
sbb
add
xchg
sahf
and
call
mov
cmp
push
movsl
xchg
imul
mov
movsb
xchg
aam
add
dec
fwait
xchg
mov
cli
mov
xlat
sbb
pop
sub
imul
stc
lods
pop
mov
loop
dec
sti
and
inc
outsl
cld
inc
sahf
ficoms
cwtl
loopne
sub
mov
or
cld
scas
mov
cmp
mov
pop
sbb
cvttps2pi
fsubrl
jae
lea
sub
add
in
adc
dec
xor
add
mov
fnstenv
cmp
pop
ss
mov
mov
inc
sbb
cmpsb
pop
mov
dec
add
and
lcall
lahf
xlat
sbb
sub
pushf
fstpt
mov
stos
in
aam
jno
pop
mov
cli
mov
in
in
mov
pop
cwtl
xor
ds
out
inc
test
or
test
adc
mov
bound
gs
out
dec
xchg
dec
fdivs
mov
mov
or
outsl
shl
pop
jmp
xchg
cmp
orl
jecxz
inc
cmc
push
xor
nop
cli
xchg
dec
push
cmpsb
sbbl
imul
aaa
negl
clc
cmp
xchg
pop
add
das
fcomps
fstpl
or
jp
inc
dec
xchg
repz
jnp
lret
nop
pop
pushf
cs
jno
stos
xor
inc
mov
inc
adc
lods
lret
xchg
lds
inc
fs
push
in
imul
insb
adc
mov
jmp
and
add
and
or
pop
andl
push
loop
jg
add
cmp
daa
pop
dec
in
loopne
push
mov
dec
push
push
xor
add
ret
lds
add
arpl
ljmp
lret
in
outsb
inc
and
push
loope
push
dec
mov
iret
inc
int
repz
andb
hlt
enter
dec
stc
in
outsl
outsb
ficomps
xor
pop
fisubrl
stos
std
jno
nop
sub
adc
cmp
insb
jo
xchg
aad
mov
jecxz
loopne
scas
dec
fistpl
lret
xchg
stos
or
adcl
and
mov
pop
mov
fsubrl
je
hlt
fnstenv
hlt
or
addr16
adc
mov
mov
mov
insl
cmpsb
lea
or
add
sti
mov
dec
lea
lea
and
loopne
lret
popw
orb
mov
or
insb
push
add
cmc
leave
jle
sahf
sub
icebp
iret
insl
hlt
mov
dec
out
gs
nop
jecxz
sahf
or
std
sbb
xchg
enter
nop
fistpll
push
inc
imul
sbb
pusha
std
subb
repnz
mov
jbe
addr16
mov
mov
inc
jo
es
mov
ror
jno
in
popa
lret
lds
or
in
xchg
adc
test
jl
and
pop
leave
xor
pop
imul
push
lret
mov
fidivrl
dec
lret
rcr
scas
push
daa
mov
stc
hlt
cmp
pusha
int
icebp
test
stos
pushf
mov
jle
into
jg
movsl
adc
out
arpl
lods
mov
mov
scas
lcall
adc
out
rclb
imul
mov
adc
or
and
gs
test
cltd
hlt
or
pushf
or
popa
ds
insl
cwtl
inc
les
push
mov
ljmp
rorl
cltd
push
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
.byte
jl
cltd
fwait
xlat
loope
or
dec
adc
jle
test
in
bound
ret
mov
mov
scas
outsb
in
out
mov
jge
sahf
ret
sbb
addl
sub
aam
mov
test
and
das
jno
mov
jmp
in
in
cmp
and
test
xor
or
cmpsb
lock
out
mov
mov
add
pop
aas
repz
add
jnp
cltd
sub
fldcw
addr16
lock
nop
jnp
jp
and
push
xchg
add
loopne
in
jmp
out
out
xor
mov
adc
out
in
clc
cmp
jge
push
shrb
jl
cld
jle
ljmp
daa
lret
xchg
pop
sahf
xor
out
sub
aaa
push
lods
or
mov
cmpsl
lret
xor
bound
dec
stc
push
push
add
aaa
adc
dec
sub
push
mov
test
rorb
push
lret
dec
jne
movsl
push
jns
test
dec
sti
inc
fprem1
jns
fisttps
pop
ss
jnp
mov
xchg
add
push
jnp
arpl
sbb
pop
ja
pop
add
push
jg
jns
ret
xchg
or
shll
push
push
and
sub
cmpsl
iret
sub
stos
int
roll
mov
test
mov
push
mov
fbstp
enter
lock
leave
mov
mov
cmp
push
xor
icebp
ljmp
mov
dec
xor
mov
cmp
mov
sbb
xlat
int
push
call
xor
sub
mov
into
sub
out
test
inc
xchg
sub
pop
mov
and
mov
div
repz
inc
out
xor
inc
mov
dec
mov
es
pop
les
fstps
scas
pop
cmp
out
lods
jecxz
push
xchg
ret
add
pop
jecxz
inc
es
add
xor
out
lahf
lods
inc
fstl
and
out
test
popf
cmp
push
pop
lcall
sbb
mov
and
jle
push
mov
nop
xchg
mov
pop
xor
aaa
jecxz
dec
mov
inc
test
dec
xor
push
add
add
fists
rcl
subb
es
iret
repnz
mov
pop
push
aas
sbb
insb
in
xchg
int3
push
cmp
ja
sbb
mov
adc
cmp
xor
or
jno
jecxz
clc
es
lret
cmc
inc
inc
jmp
out
xchg
pop
sub
mov
lock
fsubrl
adc
add
inc
mov
mov
mov
lock
push
cltd
inc
lret
xchg
push
or
mov
sbbb
dec
mov
call
push
mov
inc
sbb
mov
scas
sub
adc
jb
insb
xchg
sbb
ds
adc
push
inc
and
pop
pop
xchg
xor
mov
aas
mov
aam
call
cld
xchg
xchg
cltd
xchg
mov
jmp
std
int3
jbe
jg
pop
popf
fnsave
add
pusha
and
cld
shl
arpl
lock
mov
push
pop
orb
xor
mov
push
fstl
push
test
lds
fldenv
in
repz
fsubp
inc
sbb
loop
mov
push
mov
ss
mov
push
xlat
push
fwait
mov
xchg
call
mov
sbb
xchg
roll
daa
push
add
pop
cmp
inc
cmp
lcall
or
je
in
ret
inc
mov
cmp
icebp
xchg
or
jbe
test
scas
js
xor
outsb
rolb
add
add
jmp
or
pop
inc
dec
mov
dec
or
jle
gs
shll
icebp
push
sbb
dec
xchg
outsl
jb
nop
es
cli
cmp
xchg
sub
inc
cmp
cld
xchg
rclb
ficomps
push
sbbl
rcl
insb
or
jo
ja
push
sar
push
xchg
add
test
sub
xchg
out
popf
mov
repz
out
fucomi
mov
push
or
jb
push
push
add
aas
rol
sub
lods
into
mov
adc
jg
in
mov
fincstp
sti
mov
xchg
jl
pop
and
adc
push
xor
aad
idivl
loopne
xlat
jo
fists
adc
cmp
push
fdivrl
sbb
icebp
add
ja
aad
ret
nop
xchg
mov
cmp
inc
add
scas
xlat
push
gs
loop
or
ljmp
sub
mov
das
cmp
sarb
mov
mulps
hlt
ret
ds
cmp
push
cld
sbb
shlb
inc
jle
lods
fwait
call
outsl
jns
add
mov
repz
pop
lcall
ss
lods
mov
gs
lods
lcall
push
popf
sub
aaa
fsubs
xchg
das
ds
add
sbb
fstpl
shl
push
popa
or
add
out
test
ror
test
in
jg
mov
icebp
fistpl
scas
mov
rcr
mov
and
insl
dec
dec
addr16
rcrl
mov
out
xchg
mov
cmp
xor
sub
mov
push
nop
outsl
add
xor
cmp
ficomps
jae
aas
loop
mov
into
outsl
fsubp
sbb
popa
test
push
xchg
mov
push
mov
adc
mov
sub
inc
mov
mov
cwtl
xlat
cmc
dec
ds
arpl
dec
mov
ss
push
pop
push
cmpsb
add
sbb
bound
enter
xor
call
mov
in
jo
ljmp
das
lods
xchg
lcall
pop
arpl
mov
mov
push
mov
shll
xchg
pop
or
jmp
or
roll
out
and
push
test
fcmovu
cwtl
pop
sbb
aam
mov
pop
sub
lds
xchg
enter
sbb
pop
pcmpgtw
dec
jo
call
push
nop
cmp
scas
sub
jb
lret
mov
cmp
test
pop
mov
imull
cld
mov
mov
cmp
das
js
inc
mov
loopne
and
stos
add
pop
sbb
or
pop
mov
dec
ja
inc
scas
in
or
pop
fldt
aad
jo
notb
mov
std
mov
jmp
les
into
scas
cmp
cmp
test
adc
repnz
pop
inc
jl
data16
fcmovu
or
pop
loope
or
out
pop
mov
fiadds
jmp
sbb
xor
mov
or
imul
negb
sarb
push
into
mov
mov
repnz
mov
add
pop
add
sub
mov
rorb
fdivrs
mov
mov
push
adc
int3
out
inc
movsb
incb
inc
xlat
adc
into
bound
and
or
adc
popa
stc
fldl
push
lcall
pusha
data16
fdivp
inc
lock
add
sbb
out
mov
cmpb
xchg
stc
adc
inc
pop
xchg
dec
mov
int
push
jae
cwtl
jg
or
dec
cmp
jbe
fists
les
outsl
dec
pop
cmpsb
or
mov
mov
into
add
hlt
int
pop
jmp
int
sbb
fcomp
adc
hlt
popf
notb
std
pop
sqrtps
call
jns
lcall
xchg
aad
repz
inc
mov
mov
cmp
inc
dec
mov
sbb
pop
or
movsb
fs
or
sbb
xor
iret
add
pusha
or
ljmp
mov
ljmp
mov
aam
mov
sbb
cltd
push
mov
addl
test
dec
lea
adc
cwtl
sbb
sub
and
ja
ret
fnsave
in
pop
mov
push
rolb
aam
repz
adc
dec
push
xchg
movsb
js
add
pushf
jmp
inc
xchg
int3
dec
shl
or
push
cli
dec
jle
adc
inc
push
xor
mov
rorl
pop
test
mov
fisubs
mov
sub
inc
ret
lods
movd
or
clc
cmp
lea
sarl
mov
jecxz
jmp
mov
arpl
mov
cs
int
or
cmpsb
dec
inc
js
xlat
cltd
stc
cmp
cltd
test
jne
and
lods
sbb
sub
jnp
dec
mov
sbb
inc
push
jb
cmpsl
inc
xor
aaa
push
cmp
iret
loopne
imul
sbb
ret
inc
xlat
cmp
mov
pop
rorl
or
jl
add
not
jbe
xchg
sbb
jg
mov
cmpsb
shlb
mov
popa
mov
xchg
inc
pop
add
jo
loop
inc
cmp
fmul
int
imul
pop
pop
add
into
pop
shlb
mul
xchg
fwait
lahf
jmp
add
les
dec
push
pop
rcl
and
daa
negb
mov
jmp
or
jecxz
mov
or
push
sti
enter
mov
sar
sub
leave
jmp
or
cld
andb
iret
std
rorb
repnz
adc
inc
and
jns
enter
jo
dec
mov
and
test
les
mov
cmp
xor
jg
jnp
mov
in
stos
push
jg
into
dec
push
add
in
sbb
mov
cmpsl
dec
dec
sbb
jno
xchg
xchg
mov
pop
jb
mov
movsb
stc
pushf
sbb
test
sti
cmpsl
xor
int
and
into
cltd
xchg
imul
cmpl
repnz
aad
inc
jo
adc
dec
push
lock
xchg
sub
in
and
jge
imul
xchg
fcmovnu
ret
cwtl
insl
jo
test
lret
xchg
flds
in
dec
sbb
pop
stos
inc
mov
fs
dec
add
mov
enter
sbb
insb
pop
iret
or
sti
std
mov
sti
pop
adc
dec
xor
sub
pop
lcall
add
arpl
call
nop
xor
dec
push
aaa
icebp
and
push
cmp
lret
lods
icebp
les
sub
mov
jp
cmp
and
or
xchg
hlt
andl
stc
imulb
push
xor
lods
push
inc
je
into
bound
lds
sbbb
inc
xor
sbb
popf
inc
mov
int3
pop
sub
leave
xchg
pushf
jl
sbb
pusha
jl
daa
idivl
mov
xchg
dec
mov
test
jae
jp
ds
call
xchg
or
pop
mov
hlt
pop
or
ds
add
test
subb
and
push
test
and
pop
sbb
mov
cmp
push
loopne
xchg
pop
aad
in
cmc
je
dec
xchg
repnz
enter
daa
lods
push
out
lods
scas
scas
pop
push
sub
arpl
pop
push
mov
mov
insl
mul
dec
cmp
jno
jne
cmp
pop
test
add
addr16
jnp
dec
test
std
xchg
hlt
and
aaa
mov
mov
sub
test
add
pusha
lahf
roll
dec
fimuls
jb
mov
adc
xor
push
sub
data16
xchg
mov
data16
jne
inc
or
jp
test
dec
ficomps
out
push
push
fnstcw
and
iret
dec
xchg
or
cmc
mov
jae
shlb
scas
iret
sahf
push
xchg
mov
inc
mov
xchg
aas
add
lahf
xchg
mov
cmp
mulb
stos
stc
daa
stos
gs
and
enter
mov
mov
push
enter
imul
add
dec
lds
in
leave
or
dec
lods
shlb
sub
dec
nop
pop
leave
repnz
inc
imul
push
xchg
or
mov
les
jl
sub
dec
ret
xor
xchg
add
mov
ret
or
xor
mov
mov
fnstcw
mov
mov
je
out
shufps
scas
mov
rcl
push
cmpsb
push
js
xor
jnp
aam
jnp
mov
stos
lahf
std
mov
pop
mov
arpl
pop
mov
add
mov
insl
mov
wbinvd
sbb
and
mov
out
fs
out
fildll
push
jg
lods
dec
cmp
push
add
daa
out
movsb
jno
cmp
imul
lock
fnsave
inc
lods
in
lret
int
lock
cmp
aad
pop
dec
push
add
lock
and
xor
and
rcl
pushf
test
stc
sbb
adc
sbbl
mov
lea
xchg
addr16
dec
inc
cwtl
fwait
xchg
or
mov
sub
inc
mov
sbb
pushl
and
add
shll
mov
inc
sbb
lahf
lcall
xchg
xchg
aaa
sub
dec
fwait
es
scas
and
sub
xchg
sbb
cmc
mov
jbe
push
jno
loope
mov
add
mov
and
dec
in
inc
lcall
xchg
dec
or
fisttps
mov
cltd
cmp
stos
mov
mov
inc
lea
jecxz
lret
punpcklwd
ljmp
xchg
data16
adc
or
pop
sub
movsl
outsl
push
mov
leave
es
rcr
mov
pop
jo
cltd
jle
or
xchg
nop
in
or
fdivl
pop
dec
push
fs
popa
cltd
sbb
jns
js
mov
sbb
ret
and
mov
ds
jmp
shlb
outsb
add
push
fidivs
test
fstps
dec
mov
push
and
idivl
mov
in
xchg
dec
bound
rorl
in
lods
repz
pop
das
mov
or
lea
pusha
cmc
add
jbe
imull
cmpsb
or
in
mov
pop
adc
mov
push
mov
stos
sbb
insb
outsl
dec
fldl
in
test
arpl
sub
in
in
sbb
lret
push
dec
decl
filds
mull
jb
sbb
fnstsw
pushl
or
bound
inc
mov
and
pop
andb
push
in
pop
test
rcrb
lea
movsb
xor
lcall
and
push
mov
xchg
dec
dec
add
mov
adc
mov
fidivrs
xor
mov
pop
add
mov
sbb
push
std
cmp
pop
lcall
insl
dec
xchg
mov
mov
lods
imul
pop
jle
jo
cmp
mov
outsl
enter
sub
stos
or
lret
xor
dec
data16
mov
mov
pop
inc
je
pop
out
sti
cmpsb
mov
mov
daa
inc
rcrl
popa
sub
mov
rolb
mov
jl
out
in
scas
mov
stos
ja
adc
pop
in
in
inc
cld
rcl
inc
sub
xor
bound
pushf
dec
pop
xorb
jne
mov
push
rorb
and
xor
scas
xor
sbbb
mov
stos
movsb
push
or
outsb
mov
inc
inc
in
mov
jmp
mov
movsl
cmp
mov
sbb
dec
call
push
inc
pop
lahf
mov
ror
mov
cmp
sbb
sub
mov
or
outsb
cmp
enter
addr16
test
orl
mov
shll
sub
imull
adc
mov
loope
xor
pop
in
and
push
mov
out
sub
xor
xchg
mov
jae
or
mov
pop
pusha
movsl
jbe
leave
lock
mov
lea
inc
adc
mov
sti
push
jl
js
pop
mov
mov
stos
inc
dec
mov
inc
xchg
mov
cmp
adc
notb
xchg
xchg
push
mov
ljmp
fistpll
inc
imul
icebp
clc
push
rcr
sahf
push
adc
in
and
test
cld
fwait
cmc
push
outsb
cmp
pushf
jle
push
xor
jb
into
xchg
aas
leave
cmp
sahf
aaa
mov
pavgw
mov
test
lock
pop
stos
cmc
dec
xor
repz
mov
cmpsb
insl
lahf
das
mov
addl
leave
xchg
mov
out
add
push
stos
mov
add
movsl
mov
pop
sbb
daa
shlb
xchg
mov
enter
popa
cmc
out
in
rclb
decl
jp
add
push
jb
xchg
cmp
pushf
sub
mov
adc
je
inc
cltd
rcrb
int
mov
hlt
add
in
call
jmp
push
hlt
fdiv
cld
sahf
inc
sub
cmpsb
adc
repnz
gs
sbb
lahf
lcall
cwtl
inc
es
cli
ret
pushf
fisubs
jp
mov
cmc
adc
xchg
bound
cli
mov
pop
and
sbb
lock
push
daa
cmp
ja
enter
shll
mov
or
cmp
pop
aad
nop
movsl
lret
aas
leave
and
inc
sub
and
push
jg
inc
imul
push
jno
aad
push
and
push
or
je
jno
test
pop
into
nop
inc
std
lods
adc
push
push
icebp
adcb
jns
pusha
lods
int
loope
pop
les
xchg
jecxz
movsl
js
inc
inc
dec
and
dec
lahf
cmc
ljmp
sti
mov
pop
jno
pop
jp
insb
mov
sub
mov
fcmovbe
out
mov
inc
dec
mov
dec
imul
outsl
mov
sbb
arpl
push
fldt
je
mov
dec
push
adc
in
push
jle
lcall
bound
int
adc
inc
mov
mov
pop
inc
fadd
add
jne
mov
xchg
mov
dec
and
sub
xchg
fs
pop
clc
cmp
mov
push
inc
dec
mov
cmp
mov
xor
jg
mov
jnp
in
sub
mov
xchg
mov
fsts
jl
adc
filds
les
pop
stos
sbb
out
fs
sahf
xchg
rcrb
cmp
imul
or
outsl
lds
stc
sbb
scas
xchg
inc
imul
cmp
mov
jle,pn
in
inc
in
mov
sub
xchg
adc
xor
outsl
xor
pop
jge
cmp
int3
mov
sarl
pop
sbb
or
push
nop
int3
and
repnz
cmc
cmpsl
push
pop
and
push
lahf
jmp
testl
dec
cmp
dec
pop
dec
jmp
inc
mov
je
cli
xchg
popa
lret
jecxz
adc
lret
xlat
mov
pushf
xchg
xlat
stos
nop
and
scas
pop
add
js
xorl
gs
into
inc
lcall
mov
nop
jo
adc
outsl
in
das
negb
sub
fcompl
cmpsb
xor
std
xor
arpl
inc
lock
push
dec
mov
push
outsb
test
and
int
jl
cmp
out
jo
dec
andb
repnz
push
pop
cmp
movsl
dec
dec
fscale
subb
sub
ret
sub
jecxz
cmp
icebp
push
sarb
in
sub
pop
jno
fists
pusha
aaa
mov
sbb
cmp
sbbb
cltd
or
and
cmp
loop
push
mov
cmc
leave
jae
inc
ss
shrl
push
lcall
push
mov
fstl
lahf
inc
push
jbe
sarb
xor
sbb
jb
push
dec
mov
lock
pop
sub
leave
pop
shlb
aas
rolb
clc
cmp
inc
add
inc
jns
pop
mov
inc
js
xchg
test
addb
cmpsb
push
icebp
xrelease
loopne
stos
stc
scas
and
fstps
in
sub
mov
xor
mov
and
mov
movsl
rcl
sub
and
loop
xor
scas
in
sbb
push
mov
fwait
icebp
test
push
testb
add
lods
sub
sarl
loopne
popf
xor
cltd
orl
or
repnz
adc
jp
ficompl
movsb
ja
lret
inc
sti
leave
mov
jge
stos
aas
jl
jp
xchg
sbb
sbb
push
cs
lods
outsl
mov
xchg
add
out
xor
das
adc
mov
adc
add
insl
aaa
fs
fiaddl
mov
inc
xchg
push
xchg
adc
adc
mov
jb
out
dec
push
jns
inc
mov
pop
lock
xchg
lret
fucomp
mov
sahf
fwait
pop
enter
jbe
aaa
sub
jecxz
test
repnz
lcall
inc
pop
push
fmulp
cli
inc
xor
pop
insl
test
push
gs
cmc
cmp
test
add
js
mov
sub
mov
cmp
je
scas
dec
mov
adc
fldt
lods
hlt
and
lahf
fdivs
sub
xlat
adc
lret
xchg
adc
outsl
int3
add
fnstsw
adc
pop
jecxz
ret
sbb
dec
aas
xchg
add
xchg
xchg
lods
jo
mov
idivl
sahf
fyl2xp1
push
push
loopne
je
add
push
cmp
push
pop
mov
mov
xchg
push
mov
jge
mov
in
push
xlat
stc
mov
sahf
fwait
fwait
ret
pcmpgtd
gs
insb
mov
sahf
out
dec
movb
movl
gs
mov
fnstcw
sbb
dec
cmp
cmc
mov
fidivrl
fcmovnbe
or
orb
icebp
add
mov
inc
cmp
xchg
sbb
or
or
in
mov
xor
jne
loope
or
mov
mov
and
jb
pop
mov
lea
les
inc
scas
insb
pop
and
inc
insb
xchg
inc
adc
xor
scas
jb
fcomip
fistpl
fidivrs
loopne
sbb
jmp
cmp
aas
sub
mov
aaa
repnz
xor
mov
in
into
stc
jb
jge
cmp
in
insl
andl
int3
shll
cmpsb
fmul
std
xchg
pop
leave
sub
sti
stos
fisubrl
sahf
dec
xchg
add
mov
jns
movsl
pop
mov
and
stos
sbb
pop
xor
mov
test
push
test
lods
pop
pop
fisubs
dec
orb
xor
add
clc
pop
add
clc
sarb
jnp
mov
pop
mov
or
adc
adc
jo
inc
pop
jno
clc
mov
mov
cli
push
push
dec
test
jnp
add
fildl
nop
or
and
int3
jbe
int3
or
inc
mov
fidivrl
mov
xchg
sub
stos
xchg
lock
mov
push
add
lahf
inc
in
ret
insl
cs
add
xor
ds
scas
dec
or
or
pop
jbe
in
mov
stos
jnp
or
cmp
mov
xchg
aam
loop
stc
pop
jno
aas
sar
jl
sbb
imul
mov
pop
in
and
jne
daa
xor
ror
dec
enter
sub
call
push
xor
xchg
fimull
dec
pop
test
xchg
fidivs
int3
push
lds
add
xor
jb
cmpsl
mov
stc
jp
and
dec
pop
stos
sub
movsb
divl
mov
inc
push
xchg
shlb
in
or
and
cmc
add
xchg
cmpsb
push
ss
add
push
mov
inc
mov
lds
inc
insl
mov
out
lcall
repnz
push
xor
daa
pop
xchg
hlt
in
lahf
pop
ret
sub
mov
and
and
sub
inc
pusha
sbb
loope
dec
stos
mov
call
data16
push
adc
repz
sahf
repnz
test
adc
push
decl
add
mov
xor
mov
sbb
cmpsl
mov
clc
jne
push
into
das
sub
bound
add
inc
mov
scas
roll
rcll
sbb
mov
in
into
repz
dec
xchg
popf
mov
ret
xchg
dec
lcall
mov
imul
jbe
test
pushf
jmp
xor
cmpb
jmp
fisubrl
hlt
xor
test
sub
inc
daa
mov
xchg
pusha
pop
cmp
es
dec
and
call
mov
dec
inc
or
fs
or
out
mull
jl
rclb
jecxz
stos
dec
call
ja
sti
sub
lods
jecxz
out
stc
push
mov
leave
mov
popa
in
pop
dec
and
mov
mov
punpcklbw
mov
xor
fwait
jmp
test
mov
xchg
xchg
push
or
pop
jb
test
insl
jns
into
inc
sub
adc
arpl
xor
push
fisubrl
ret
cmp
add
jl
push
xchg
outsl
xchg
dec
inc
or
leave
or
andb
sti
or
test
hlt
imul
pop
pop
xchg
add
bound
lcall
fsubl
xchg
mov
jo
adc
cld
mov
loop
lea
jmp
mul
cmp
or
icebp
pop
and
mov
lcall
rcrl
cmp
into
call
fs
or
movsb
rolb
or
call
mov
mov
add
xchg
or
mov
mov
scas
pop
lret
add
jns
push
xchg
arpl
add
push
push
sbb
cmpsb
lahf
mov
out
repnz
sbb
jle
sub
add
mov
xor
dec
call
fdivrl
add
out
adc
pop
pop
mov
aaa
adc
sar
gs
das
xor
push
adc
bound
mov
xor
cwtl
mov
fistpl
int
mov
xchg
rorl
push
mov
nop
and
popa
and
cmp
ds
in
dec
adc
xor
sbb
push
and
call
push
inc
enter
sub
pop
inc
xchg
xchg
in
jge
adc
jl
jnp
and
dec
jge
xor
xor
lret
push
clc
lds
or
mov
pop
push
or
adc
lock
cmp
pop
aad
push
jl
jae
or
iret
pop
jbe
adc
lret
xor
out
or
dec
addr16
repnz
push
adc
mov
dec
cltd
push
dec
lock
rcrb
aad
stc
jbe
lock
daa
icebp
or
mov
out
rol
or
jnp
add
addr16
loop
dec
inc
or
adc
cmc
cmp
mov
cmovne
dec
cltd
cmpxchg
je
mov
test
fistps
fs
mov
xor
mov
aad
out
cmpb
inc
add
ljmp
adc
sub
pushf
xchg
xorl
notb
or
mov
jecxz
cld
sub
int3
stos
jl
adc
popf
push
mov
cmp
push
pusha
mov
pop
decl
push
mov
mov
dec
ds
mov
gs
fwait
and
xor
mov
inc
jnp
sbb
in
inc
inc
inc
shr
lock
jl
mov
pop
pop
dec
inc
popa
js
or
pop
lods
sbb
icebp
mov
lcall
adc
int3
xchg
fistl
add
cmp
ret
rclb
dec
imul
fnstsw
push
cmp
jo
aaa
ljmp
push
push
xchg
int3
dec
hlt
or
xchg
fsubrl
xor
mov
aam
xchg
pop
mov
cli
or
xlat
cmp
xor
pushf
gs
push
rcll
aas
scas
xchg
das
loop
ljmp
cwtl
push
inc
ret
push
sahf
sbb
add
jnp
jae
nop
subb
or
dec
jmp
xchg
sbbb
jg
mov
push
shl
dec
repnz
lods
cmp
mov
pop
sbb
mov
scas
jae
sub
jmp
shrl
int
lret
add
mov
sbb
dec
ja
dec
sbb
enter
mov
lcall
push
dec
mov
bound
push
aad
lahf
out
jg
fucomp
sahf
scas
orb
into
jmp
cmp
jl
and
mov
dec
xchg
in
lods
es
jnp
push
fistpl
outsl
sbb
add
inc
arpl
cmp
aas
add
je
inc
add
sbb
xchg
rorl
adc
loopne
cmpsl
call
jb
adc
mov
dec
inc
xchg
sahf
mov
idivb
in
mov
in
jge
cld
add
aad
jne
das
or
call
aas
icebp
lea
aad
in
ret
xor
and
cmpsl
stos
ja
cltd
cmc
mov
or
add
xchg
inc
lock
rol
mov
int
push
loope,pn
cmpsl
iret
pop
push
jp
cli
pop
notb
ret
sbb
dec
fstpl
jecxz
adc
das
cmp
movb
dec
stos
xchg
ficoms
xor
sbb
pop
ss
jecxz
mov
rorb
out
jno
mov
and
int
push
pushf
adc
shrb
aaa
dec
inc
sahf
push
jp
cmpsl
shl
mov
ljmp
inc
adc
and
fs
loopne
mov
cmp
sub
test
cmp
or
inc
incl
dec
push
push
pop
xor
out
cwtl
sub
adcb
xor
xchg
outsb
shll
popa
fnstsw
sahf
lods
mov
sub
pop
jo
mov
imul
cmp
mov
insl
adc
movsb
mov
xchg
mov
push
or
test
nop
dec
lods
addr16
pop
cs
lock
pop
xor
lods
or
jae
es
roll
test
add
popf
sbb
imul
jge
push
mov
push
stos
out
nop
or
adc
andb
jbe
pop
rorb
dec
lcall
jle
xchg
int
fmuls
push
sub
push
jb,pn
and
js
pop
pop
dec
adc
and
dec
mov
aas
repz
orb
in
mov
push
popa
movsl
mov
nop
cmpsl
xor
les
call
outsl
test
lret
adc
or
mov
rorb
pop
or
roll
aam
in
cs
out
jge
cmp
sbb
lods
fdivs
xor
xchg
shrd
pop
mov
fcoml
lods
inc
mov
int
pop
mov
mov
and
dec
rorb
les
insl
insl
popf
xchg
aas
mov
or
test
xor
lea
pusha
add
arpl
out
mov
sub
pop
inc
mov
or
cmpsl
xchg
movsl
repz
jg
arpl
lret
fistpll
xor
sub
fbld
xchg
push
cld
test
mov
inc
mov
push
or
pop
icebp
dec
inc
notb
push
push
aas
test
cld
out
mov
lcall
sub
jge
pop
xchg
popa
test
enter
adc
mov
insl
inc
jmp
sub
leave
mov
pop
add
rcrb
xchg
aaa
xor
cli
ret
mov
pop
jle
push
imul
dec
inc
mov
int
dec
xchg
sbb
or
jge
mov
clc
push
sub
dec
add
cmc
pushf
mov
lahf
xchg
ljmp
cmc
mov
int
pushf
adc
pushf
scas
mov
mov
js
shlb
xor
adc
dec
lea
loope
xlat
bound
mov
pusha
sbb
mov
scas
mov
add
ds
pop
add
pop
dec
bound
in
popa
lea
push
sbb
push
notl
push
daa
pop
into
pop
aaa
das
mov
stc
test
scas
mov
lcall
jmp
mov
pop
je
insl
dec
sti
or
int3
stos
add
mov
sub
dec
dec
push
jae
cmpsl
imul
rcl
dec
mov
in
pop
andl
dec
stc
clc
pusha
mov
xchg
push
divl
cmp
jbe
enter
pusha
scas
cli
repz
pop
xchg
popa
mov
ja
xor
gs
sbb
hlt
ja
pop
int3
rcll
adc
pop
jecxz
outsl
loopne
fiadds
cmpsl
popf
dec
xchg
xor
mov
xor
pop
jne
xchg
cmp
sub
dec
push
push
les
gs
test
loope
mov
mov
add
lahf
jecxz
mov
cmp
push
cmp
jbe
das
mov
loope
dec
and
insb
lret
adc
mov
stc
adc
fidivl
mov
pop
mov
push
les
mov
cwtl
push
fidivrl
out
inc
mov
loop
or
int3
mov
dec
jmp
and
xchg
sbb
movsl
lahf
mov
out
or
dec
mov
ret
xchg
xor
xlat
jo
jge
mov
cltd
icebp
ljmp
pusha
mov
rcrb
rcrb
cmp
fists
popa
negl
mov
ret
push
push
jp
ds
or
ds
loopne
xchg
inc
shll
xor
sbb
shll
inc
mov
jl
iret
inc
dec
shrb
scas
data16
jmp
sub
rorl
insl
inc
aas
add
aam
stc
or
stos
jecxz
insb
scas
sbbb
loop
adc
sub
idiv
ljmp
and
subl
push
ljmp
loopne
popf
fwait
mov
ds
out
stc
xor
aad
cli
outsl
aaa
lret
cli
cltd
xchg
xchg
cltd
fcoms
sbb
cmp
sarb
aad
stos
pop
adc
mov
out
xor
inc
fsubrl
push
xchg
jg
mov
cli
sbb
insl
sbb
mov
push
xor
dec
xchg
and
sbb
ljmp
popf
sahf
jnp
out
aas
cmp
test
inc
xchg
cmp
test
fsts
jae
push
fbld
cli
imul
icebp
in
or
test
movsb
dec
adc
push
push
sub
and
fidivrl
mov
sahf
mov
sahf
mov
cs
lds
out
adc
shll
mov
sub
xlat
cli
imul
les
pop
push
push
mov
stc
dec
cld
and
mov
rol
or
nop
push
push
mov
mov
dec
and
xchg
fwait
icebp
out
xorl
mov
outsl
int
insb
inc
je
stos
mov
mov
sub
jge
in
ljmp
cmp
clc
pop
push
dec
ds
or
xor
add
pop
subb
icebp
and
push
jl
push
inc
push
pop
sbb
jno
dec
xchg
xchg
push
in
mov
xor
jg
dec
adcb
or
push
cld
pop
addl
test
jb
inc
sub
shr
imul
inc
js
add
shrl
xchg
jno
fwait
orb
test
jnp
add
shlb
jmp
mov
pusha
jno
nop
jne
jmp
ret
dec
enter
cmpsb
mov
mov
mov
mov
bound
out
push
xchg
bound
insb
jg
insb
les
test
inc
push
out
xor
test
add
adc
ljmp
xchg
pop
and
fidivs
and
sbbl
mov
cmpsl
cwtl
repnz
fisubrl
and
cld
aam
mov
das
stos
mov
rcrb
jbe
dec
inc
and
mov
jae
test
retw
lcall
out
pop
jle
lcall
fstpl
xor
int3
pop
mov
xlat
popa
aad
mov
or
je
mov
xchg
ficomps
mov
pop
push
jg
ja
arpl
lea
push
or
pushf
push
add
sub
andb
scas
ret
in
cltd
clc
fnstsw
mov
jg
jmp
xor
xor
mov
mov
das
mov
leave
in
sahf
sub
jge
pop
and
sbb
mov
cmc
jns
and
sub
inc
popf
inc
inc
mov
fmull
das
enter
xor
mov
mov
mov
pop
lds
mov
jp
stc
cli
pusha
jo
call
dec
jecxz
mov
jecxz
cs
divb
std
mov
fwait
daa
inc
loope
lret
push
sub
loopne
sub
mov
les
out
xchg
mov
cltd
pushf
lret
test
inc
push
movsb
sub
and
mov
scas
adc
popf
ret
es
push
aas
xchg
scas
mov
jbe
jbe
pushf
xchg
jge
outsl
imul
lcall
mov
movsb
sub
loopne
sub
arpl
mov
bound
dec
leave
shr
arpl
into
int
insl
adc
ljmp
inc
adc
out
xchg
cs
or
clc
xor
adc
mov
rclb
xor
mov
add
xor
inc
inc
jle
sub
sahf
dec
add
fcomps
and
roll
fstl
scas
es
or
sbb
cltd
pop
mov
sub
fdivrs
sub
mov
pop
cmc
xchg
leave
xchg
xor
push
shlb
arpl
push
inc
push
and
jg
dec
hlt
xor
mov
rcrb
mov
add
fwait
adc
movd
xchg
push
mov
cmp
int3
fistps
xor
dec
ret
out
mov
and
mov
pop
xor
dec
xor
ds
rcl
xor
or
arpl
mov
mov
dec
in
jg
push
mov
push
fwait
ds
mov
or
dec
add
jne
push
sub
push
dec
cmp
dec
arpl
push
sub
xor
sub
sub
and
pop
add
jg
push
adc
test
sbb
cmp
dec
or
xor
sub
fwait
xor
xabort
xchg
addl
xor
lock
int
hlt
mov
call
push
and
fdecstp
pop
xor
pusha
cwtl
adc
daa
mov
cmp
sbb
pop
push
lahf
js
dec
movsl
dec
jle
scas
pop
aad
dec
sbb
mov
hlt
popa
dec
jae
pop
rorb
lods
mov
mov
jno
mov
adc
ss
arpl
push
mull
stos
ds
jecxz
int3
cmp
dec
inc
mov
std
imul
xchg
xchg
outsb
mov
or
sti
lods
ja
std
mov
jmp
sub
insl
push
sti
in
dec
out
pop
hlt
cld
repz
jnp
aaa
sbb
icebp
lret
push
sti
adc
inc
rcll
addr16
mov
test
shll
andl
les
mov
jp
aas
pop
out
ret
pop
and
stos
xor
scas
mov
inc
pop
adc
add
fstps
or
outsl
dec
int3
xor
in
or
jns
mov
fstps
loopne
push
inc
repz
jne
imull
pop
adcl
dec
sub
lock
pop
std
jge
sbb
mov
mov
mov
nop
jae
rolb
and
dec
repz
in
roll
or
imul
jb
adc
and
imul
andl
xchg
or
in
cmp
outsb
xor
aas
jl
xlat
and
cwtl
aaa
or
push
rorb
pop
add
xchg
inc
in
popa
ss
cli
fld
or
mov
inc
sub
adc
xor
xlat
aam
mov
jae
hlt
cmp
mov
push
add
xchg
insl
mov
frstor
fldl
mov
ds
or
aas
xor
lods
icebp
cmpsb
lea
xchg
sub
mov
push
and
divl
pop
pop
pop
lods
and
outsl
jne
call
clc
xor
pop
nop
mov
stos
jae
pop
push
movsb
clc
mov
dec
lret
xor
rorb
shll
pusha
inc
pop
pop
mov
fs
insb
mov
roll
dec
in
loope
mov
or
inc
fmuls
push
mov
pusha
xchg
sar
sti
and
scas
mov
out
mov
and
jecxz
jo
xchg
and
inc
rcl
cli
arpl
pusha
push
and
sub
mov
mov
pop
into
mov
and
sarl
mov
mov
inc
lods
xor
adc
add
or
mov
jmp
xlat
cmpsb
inc
xor
mulb
push
fnstsw
movsl
mov
xchg
icebp
movsl
xchg
jmp
flds
sbb
test
inc
arpl
shlb
movsl
imul
mov
inc
xor
ja
das
filds
cmp
xchg
xchg
cmp
lea
or
pop
bound
push
mov
mov
dec
add
in
daa
adc
dec
cltd
and
cmp
pushf
push
lahf
pop
or
aas
pusha
sub
and
mov
xchg
fimuls
jge
xor
push
leave
in
scas
and
push
sbb
lods
cmpsb
das
mov
sub
jns
hlt
add
dec
sbb
add
repz
rcl
pop
outsl
lock
inc
and
movsl
xor
jge
ret
das
sub
mov
cmp
cltd
fsubr
dec
inc
and
test
sub
or
icebp
wrmsr
inc
jecxz
pusha
fdivs
das
lds
ljmp
xor
cmp
orl
jno
mov
mov
aam
or
mov
sbb
pusha
cmp
fidivs
dec
daa
mov
mov
xchg
pushf
mov
das
js
jns
mov
sti
mov
mov
dec
ja
xchg
testb
add
out
lods
push
inc
pop
fdivp
insb
mov
push
rcr
push
data16
ds
call
inc
outsl
test
sub
mov
jle
push
mov
jb
or
repz
int
or
jmp
pop
jae
mov
push
or
push
outsl
clc
mov
test
push
cmp
subl
dec
rcll
mov
add
jle
jmp
imul
xchg
dec
push
jecxz
aas
test
xchg
test
imul
shll
lcall
mov
mov
xlat
add
jg
popa
in
jl
insb
out
aaa
push
outsb
sahf
and
rorl
aad
cmp
aaa
inc
xorb
mov
jnp
pop
and
add
mov
push
jmp
inc
in
shl
jmp
cmp
outsl
mov
fnstsw
or
mov
scas
xchg
aas
push
imul
das
les
test
xlat
out
push
addb
ds
cltd
rcrl
iret
inc
xor
pop
hlt
out
ret
jns
fisubl
flds
mov
jae
pop
jge
mov
mov
pop
cmc
push
lahf
inc
xor
std
sbb
cmp
fsubl
fsubrs
sub
push
out
or
xor
and
ljmp
inc
fs
cwtl
shlb
sbbl
fdivs
ficompl
jg
adc
jmp
or
sbb
dec
fisubl
cltd
jp
pop
mov
in
cmp
mov
push
movsl
mov
xor
loope
sbb
lea
xor
xor
cli
inc
xchg
aaa
push
inc
inc
lods
cmp
jns
cmp
push
pushf
sbb
js
jmp
fs
rcrb
ds
or
cmc
je
add
andl
adc
adc
xchg
pushf
in
sbb
movsl
lods
sbb
mov
xchg
es
xchg
es
arpl
in
add
sbb
std
arpl
inc
pusha
pop
add
xor
cmpsb
and
xchg
out
sub
scas
aas
mov
sbb
jge
pop
nop
xchg
movsb
and
pop
icebp
mov
movsl
sub
cmp
jmp
aad
and
mov
mov
cld
out
lds
push
repnz
scas
and
mov
pop
pop
push
cli
mov
out
fisubs
fs
int
sbb
in
das
call
sarb
scas
ja
sbb
push
lods
xchg
xorb
push
pop
or
das
inc
lea
aas
jae
in
jns
fwait
ds
ljmp
aad
inc
pop
fcomps
mov
push
sbb
ffree
lds
xchg
cmpsb
inc
inc
enter
and
outsb
cmp
bound
jbe
adc
jno
pop
orb
mov
pushf
shlb
sub
scas
sub
jns
xchg
mov
cmp
decb
outsb
jae
inc
cmpsb
enter
xor
loop
sbb
out
mov
sub
sub
adc
orb
arpl
scas
push
mov
shlb
lret
imul
mov
push
mulb
and
inc
insb
ljmp
push
movsb
pop
push
mov
test
cs
dec
inc
xor
push
out
jmp
pop
add
in
adc
fs
push
mov
mov
dec
add
inc
jb
in
sub
jo
pop
xor
jns
push
add
ret
xchg
add
cwtl
in
sbb
mov
sbb
dec
rclb
inc
push
sbb
aaa
jno,pt
cli
nop
les
dec
aad
fdivrl
iret
mov
jp
and
sahf
out
mov
add
ficompl
testl
push
add
xor
mov
mov
dec
lahf
out
cmp
mov
xchg
ret
cmp
stos
ss
idiv
mov
jns
jnp
addb
inc
jns
pop
in
sti
sub
icebp
sub
fstps
lock
xor
mov
jmp
mov
sub
flds
xchg
and
inc
aas
data16
rep
in
add
push
mov
into
js
pusha
mov
mov
jmp
push
pop
xlat
mov
xor
leave
cltd
in
sbb
lret
pop
out
pop
push
mov
mov
sarb
dec
mov
stos
xchg
flds
pop
mov
dec
nop
mov
addb
daa
cmp
pop
fimull
pop
mov
repnz
test
stos
push
dec
insl
mov
or
data16
pop
adc
pop
add
mov
xlat
and
add
rclb
pop
es
lret
leave
mov
push
sub
sbb
data16
or
pop
cld
or
imul
fidivrs
jle
sahf
cwtl
lret
inc
mov
inc
out
out
in
push
jb
and
mov
dec
mov
int3
inc
insl
cld
aad
mov
xor
mov
pop
mov
lcall
sarl
cmp
xlat
xchg
scas
mov
aam
inc
inc
xlat
out
icebp
mov
cmp
or
aaa
sbb
push
leave
mov
mov
jo
popf
addr16
movsb
fs
or
jp
xchg
xor
mov
imul
add
push
and
inc
mov
std
scas
mov
std
xor
or
mov
add
and
lea
add
dec
jmp
sbb
out
cmp
nop
jnp
insl
xchg
push
cmp
test
mov
cmp
inc
rorb
arpl
or
jmp
cmp
imul
cmp
into
cmp
cli
jl
push
test
pusha
dec
test
inc
cli
push
inc
push
je
out
movsl
jmp
sub
jle
sub
adc
mov
inc
cltd
imul
pop
lret
mov
out
insl
adc
add
lods
push
pop
js
mov
inc
test
add
xlat
cmp
lcall
sub
xor
dec
sbb
lds
and
mov
cmpsb
movsl
lret
nop
mov
int
movsb
sub
add
cwtl
out
das
or
sub
and
or
inc
jecxz
xor
imul
das
and
push
xorb
into
mov
mov
cli
popa
into
sti
mov
and
xor
aas
test
mull
sbb
mov
sub
les
into
int
jp
add
mov
jae
std
cmpsl
ja
cmp
insl
lods
dec
dec
pop
add
push
xor
nop
pop
cmpl
mov
pop
inc
fwait
add
rorb
or
pop
into
lds
jb
neg
xlat
insl
or
mov
sbb
lea
pushf
fiadds
mov
adc
loopne
mov
out
mov
sbb
loop
inc
aad
call
aaa
dec
enter
jl
fildl
xchg
xchg
cs
in
jp
out
sbb
xor
js
pop
cmp
out
inc
daa
je
cmp
rcrl
adc
ret
pop
lea
pushf
xchg
sbb
jb
bnd
outsl
stos
les
lahf
sbbb
fsubrl
jl
dec
push
dec
leave
xor
das
jo
mov
adc
inc
cmp
xchg
into
insb
imul
jns
pop
stos
out
aad
gs
arpl
les
filds
movsl
sub
stos
stos
stc
sbb
add
cmp
loope
jne
or
stos
popf
shll
push
arpl
stc
stos
pop
fstpl
and
xchg
adc
jae
nop
mov
push
cld
sub
and
push
cmp
lcall
outsb
fwait
test
push
sub
stos
ret
or
sbb
sub
push
inc
out
ljmp
sbb
mov
xor
fidivrs
ds
sub
sub
movsl
out
adc
mov
mov
rol
cmp
iret
iret
mov
push
fwait
sub
mov
stos
jl
pushf
aad
or
inc
mov
pop
ret
push
daa
test
cmp
push
mov
xor
lret
pop
xor
xor
jo
push
push
inc
aad
jae
mov
jbe
sbb
inc
sbb
sbb
dec
addr16
sbb
mov
adc
mov
xor
and
daa
adc
mov
dec
ret
out
mov
push
out
jl
push
cmpb
push
xchg
xor
cmp
popa
inc
sbbb
mov
inc
inc
addr16
int3
push
call
imul
mov
mov
adc
outsb
pop
loope
ljmp
sbb
cld
ret
cwtl
inc
lea
or
xor
imul
mov
sub
fwait
inc
sub
adc
mov
test
sub
and
dec
loopne
sbb
pop
ret
sahf
jmp
popa
cwtl
testl
pop
inc
pop
insb
xchg
xchg
inc
fcompl
fnstcw
push
mov
mov
sub
xchg
in
xchg
lcall
inc
mov
push
sti
lea
mov
das
jno
outsb
sbb
inc
lds
mov
imul
jmp
and
mov
mov
push
mov
int3
sbb
sbb
jnp,pn
jmp
dec
dec
xchg
lret
sbb
paddusw
imul
mov
arpl
pop
mov
push
call
xor
mov
mov
mov
sahf
push
xlat
ret
lods
sbb
arpl
inc
in
addps
pusha
inc
shlb
shll
mov
adc
or
scas
cmp
jbe
decb
xchg
inc
inc
daa
rclb
mov
xchg
nopl
push
mov
pop
pop
mov
push
adc
inc
rolb
cmp
orb
popa
mov
sub
jo
cli
inc
mov
or
ljmp
andb
sub
xchg
adcl
pop
int
stos
pop
xor
cmpsl
add
lcall
sbb
ret
mov
subl
jo
decl
in
imul
cmp
outsl
lods
mov
aam
inc
mov
enter
and
scas
insl
inc
sub
jnp
and
into
es
repz
push
les
dec
inc
test
dec
sar
dec
jp
dec
jno
sbb
je
jo
pop
jl
add
and
jmp
repnz
ret
push
aas
repnz
scas
jnp
leave
loope
insb
fbstp
mov
out
fists
fstpl
lods
push
xchg
pop
mov
insl
fisttps
cmp
sub
insl
inc
fsubs
rorb
lret
adc
pop
fisubl
mov
out
aaa
rcrl
insl
or
not
xchg
mov
or
aaa
je
ds
fiaddl
aam
jbe
bound
xchg
ret
mov
or
sub
int
and
pop
mov
jo
stos
imul
sbb
loope
mov
in
popf
mov
ficompl
dec
push
rorl
pop
mov
xor
fmull
jle
test
jge
add
jbe
cmp
cmpsb
popf
jbe
ret
lret
adc
inc
xor
lea
out
jl
mov
mov
jns
and
dec
sbb
and
sub
inc
sahf
fdivl
cmp
push
or
dec
ret
mov
xor
push
sti
add
inc
xchg
out
and
lea
add
mov
jmp
cmpsb
sbb
jbe
pop
rcll
test
and
jle
loope
insl
cmp
aaa
fmuls
out
stos
ret
test
out
out
push
lock
inc
adc
test
jbe
mov
push
jb
ret
xchg
das
fwait
mov
add
mov
add
and
jp
xor
ror
push
or
int3
or
cmpb
fstpt
imul
xchg
mov
subb
jne
addl
pop
jp
add
loopne
pop
pop
xor
mov
movl
pop
fiaddl
idivb
lock
jp
adc
daa
je
ret
add
out
hlt
push
nop
rclb
jle
sbb
jns
xchg
test
pop
outsb
pop
in
and
or
sbb
enter
xchg
or
ficomps
jne
jge
lods
dec
mov
test
scas
sbb
push
dec
mov
jg
lds
pop
mov
sbb
aad
push
test
jge
mov
aad
xchg
in
in
jg
jmp
or
aaa
jl
dec
fwait
pop
push
popf
movsb
test
cmc
cmp
xorb
out
clc
mov
cmp
rorb
mov
nop
xchg
rcrl
aad
adc
shrb
std
pop
daa
stos
cmp
sbbb
out
fwait
icebp
arpl
mov
sahf
shr
out
mov
sub
je
pop
mov
xchg
movsl
gs
push
leave
aad
inc
fstps
and
pop
das
pop
dec
inc
int
sbb
loop
and
push
sarb
pusha
mov
adc
inc
addr16
aas
push
leave
pop
in
xchg
add
mov
mov
pushf
push
and
mov
hlt
lea
out
sub
inc
mov
mov
shr
shl
cli
rol
pop
loopne
mov
push
clc
aad
test
stos
lcall
mov
cld
fldenv
stc
mov
jecxz
xor
andb
and
pop
inc
mov
sub
push
cmc
jno
sbb
inc
bound
cwtl
jae
enter
jnp
pop
and
mov
das
ja
sub
outsb
lods
scas
pop
ljmp
clc
sub
cmp
out
ljmp
sub
push
push
mov
lods
aam
jg
icebp
add
fcompl
fwait
push
cmp
test
lock
es
daa
bnd
push
sahf
mov
into
in
sahf
aad
out
xchg
in
inc
lcall
or
data16
inc
out
pop
inc
pop
mov
aad
int
xor
push
xchg
pushf
insl
nop
mov
stos
aad
jae
fwait
sub
push
cmp
in
and
fnstcw
das
xor
mov
sub
inc
pop
iret
lds
adc
xchg
pop
mov
adc
and
ljmp
fs
lods
pop
ficompl
cmc
jp
lock
xor
adc
ljmp
pop
out
stos
jnp
and
clc
jmp
movsbl
jle
std
icebp
jg
push
lds
sbb
mov
shll
xchg
jge
mov
pusha
jle
loop
rcll
xor
push
fstpl
sbb
sbb
mov
mov
leave
add
sub
ret
call
add
inc
inc
sbb
pop
jge
leave
inc
pop
dec
jg
mov
lods
push
mov
fsubrl
je
mov
je
das
sbb
adc
lea
add
mov
lahf
mov
roll
mov
inc
mov
out
jle
xchg
sub
cmp
stc
pop
xorb
adc
roll
adc
jp
mov
cmp
ret
lods
mov
mov
inc
call
fnstenv
rcrl
cwtl
adc
call
stos
mov
out
cld
sti
arpl
sub
subb
sarl
xchg
xor
roll
pop
mov
xor
cmp
adc
imul
push
outsl
xchg
cmpsl
jo
in
lret
arpl
sub
push
gs
sub
outsl
in
repz
pop
cs
pop
subb
xchg
xor
and
push
out
and
enter
pop
fistl
sub
cmp
hlt
lea
xor
dec
jg
mov
arpl
pop
aam
sbb
xchg
cmp
cmc
mov
pop
jo
push
push
fmulp
ljmp
pop
ss
inc
lock
jnp
xlat
js
andb
add
cmp
fisttpl
out
dec
xor
jle
mov
cmc
test
mov
pusha
xor
push
cmp
lods
jno
push
jne
loopne
push
pop
mov
mov
xor
pop
mov
push
fildl
outsb
xor
xchg
inc
and
pop
out
std
pop
movsl
dec
scas
xchg
cmp
fsubs
lret
lods
mov
mov
dec
push
das
dec
mov
pusha
idiv
adc
jmp
cltd
mov
jecxz
mov
pop
dec
add
ret
ret
and
dec
roll
ret
inc
cmp
mov
aad
cmc
inc
mov
jmp
dec
mov
lods
sbb
and
sbb
cmpsl
cmpsl
rcrl
pushf
dec
ljmp
ret
sbb
ret
inc
fs
xchg
clc
xor
lea
or
pop
pop
movsb
xchg
sti
loope
adc
xor
in
in
jns
rolb
jno
pop
fmulp
sar
into
test
pop
xchg
shr
xchg
add
fs
mov
push
push
pop
ret
pushf
aam
fs
lds
xor
pop
subl
scas
xchg
jae
inc
fs
ror
je
jmp
xchg
or
or
mov
adc
and
cmp
jno
imul
sbb
mov
xchg
pop
push
xor
jl
or
xor
and
cmpsl
cmp
dec
mov
add
add
inc
repz
dec
or
flds
rorb
push
iret
sti
shrl
cmpl
add
mov
jno
cwtl
mov
pop
jb
jnp
mov
mov
cmp
push
mov
ds
mov
int3
mov
repz
add
nop
es
mov
pop
aas
mov
ljmp
je
dec
dec
aaa
das
inc
adc
scas
or
dec
dec
cmp
jge
mov
push
push
call
jnp
jmp
call
pop
inc
push
hlt
dec
cmp
addl
aaa
scas
les
sahf
pop
stc
jmp
mov
xor
jle
sahf
stos
clc
xchg
sub
pop
nop
ret
push
xchg
iret
inc
xchg
pusha
adc
jecxz
sahf
mov
int
or
mov
dec
or
and
or
stos
iret
pop
and
sub
adc
lods
sbb
loope
out
add
sbb
cmp
xchg
xchg
mov
and
mov
jp
fdivrp
mov
out
movsb
xchg
bound
mov
popf
dec
mov
xor
frstor
popl
mov
jmp
arpl
imul
data16
or
sub
xchg
or
ficomps
js
or
jb
cmc
add
in
or
and
ja
mov
call
xor
out
adc
pop
jle
jg
out
xchg
popl
lods
icebp
lods
mov
xchg
jl
jns
xchg
rol
psubw
push
sbb
es
out
xor
pop
idivb
rcrb
jecxz
ljmp
imul
aam
add
mov
and
cmc
insb
and
xorl
ds
lahf
sub
mov
mov
pop
inc
iret
xchg
adc
ficoms
filds
mov
test
mov
inc
mov
test
add
xchg
repz
pop
mov
ret
push
int
mov
loopne
lods
jp
in
cmc
mov
jl
bound
sub
inc
adc
lcall
bound
mov
cmp
loope
cmp
sub
adc
push
add
cli
inc
sub
jg
jecxz
dec
mov
pusha
mov
sub
in
jecxz
int
inc
xlat
mov
dec
repnz
aad
xchg
sub
ja
lods
sahf
jnp
leave
aas
repnz
or
icebp
mov
adcl
push
test
mov
pmullw
test
sbb
nop
sub
fistl
es
adc
stos
mul
les
pop
sub
repz
jmp
xchg
jmp
fists
addl
sbb
sbb
sub
xchg
leave
or
xor
in
mov
in
mov
das
push
jno
inc
xchg
imul
xchg
dec
inc
xlat
sub
and
mov
test
adc
fwait
ret
mov
ljmp
ja
call
add
int
out
jne
pushf
call
pushf
cwtl
mov
ja
dec
lahf
adc
lods
xchg
xchg
pop
jnp
test
leave
xchg
mov
repnz
pop
movsb
mov
or
jp
repnz
push
xlat
and
cltd
pop
xor
cld
dec
adc
out
ret
dec
jl
mulps
sar
ret
xor
xchg
adc
in
add
push
lock
mov
and
adc
push
rcrl
mov
insl
bnd
dec
or
es
adc
pop
shrl
sub
pop
and
mov
push
imul
lock
lahf
and
cli
into
or
dec
mov
pushf
mov
xchg
inc
mov
and
aad
hlt
js
or
lret
mov
arpl
dec
inc
or
jl
push
mov
fldcw
bound
and
cmpsb
xchg
xor
and
dec
dec
aaa
jb
loopne
fstpl
sar
scas
and
lret
rdtsc
lea
inc
shl
adc
lea
out
mov
ret
jecxz
xor
dec
out
push
or
clc
int
incl
leave
xor
cmp
fisubrl
imul
fcompl
leave
mov
sti
sbb
adc
xor
cld
mov
jnp
mov
gs
fdivrl
daa
mov
insl
fldt
add
xor
inc
sub
pop
sbb
movsl
je
add
inc
cmp
cmp
inc
lock
xchg
insl
icebp
into
inc
mov
and
insb
jge
mov
rol
es
xor
xlat
loopne
pop
push
out
mov
push
cmp
or
pushf
jmp
pop
xlat
pushf
mov
pop
sub
dec
cmp
sbb
or
cltd
xor
je
jle
adc
call
jnp
or
aas
mov
sbb
inc
ret
or
dec
inc
bound
mov
sbb
push
sbb
and
dec
shlb
inc
adc
mov
xchg
mov
mov
push
pushf
add
jmp
test
jg
jno
repnz
pop
lret
arpl
fistps
jo
mov
add
stos
jle
pushf
jb
nop
xor
mov
fsubs
pop
push
pop
cld
bound
testl
lcall
ret
lcall
jnp
rclb
in
sub
xchg
add
mov
push
rorl
mov
mov
dec
cmp
shrb
add
hlt
pop
sahf
dec
insl
fsubl
pop
in
mov
mul
in
imul
inc
decl
shlb
xchg
leave
negl
incl
add
pop
adc
pop
sbb
call
xchg
scas
and
enter
pmulhw
mov
or
sahf
xchg
inc
dec
aaa
ljmp
mov
pop
ds
xor
pop
fistpll
push
or
xchg
mov
aam
popf
add
xchg
xor
jg
mov
mov
push
push
sub
fldl
mov
mov
sbb
fidivs
cmpsb
mov
jno
test
popa
mov
mov
mov
xchg
int
pusha
xchg
repnz
mov
cmpsb
jmp
pop
jl
inc
jg
in
loope
push
lods
adc
jle
movsl
push
pop
jbe
cmp
cmp
lock
mov
mov
fildll
insl
pusha
imul
mov
ja
pop
movzbl
dec
mov
aaa
aas
addr16
xlat
inc
mov
std
mov
lcall
adc
or
inc
mov
push
scas
add
idiv
gs
dec
xlat
mov
mov
jge
aam
negb
push
ds
insl
sarl
mulb
or
mov
pushf
xor
fcmovnb
daa
fnstcw
sub
pop
mov
imul
stos
xorb
mov
mov
jnp
ljmp
notl
sbb
enter
dec
cmp
add
leave
jle
loope
inc
xchg
jecxz
sub
lahf
adc
dec
repz
xchg
sbb
mov
bound
cmp
hlt
xor
das
sahf
mov
jno
pop
lahf
mov
pop
mulb
and
mov
aas
popf
mov
adc
xlat
push
mov
cmp
dec
sub
cld
in
mov
or
hlt
mov
or
cltd
fmuls
dec
cmpsb
aam
clc
dec
jmp
push
add
imul
jns
int3
inc
fisubl
shr
mov
sbb
pushf
push
sbb
out
loop
cli
lcall
clc
adc
popf
sbb
shlb
push
jg
xlat
jmp
mov
lret
or
push
mov
call
incl
push
popa
inc
xchg
stc
cmp
and
lock
repz
xchg
xchg
lds
inc
dec
cmpb
sbb
push
cmp
cld
ss
repnz
dec
jnp
jmp
xlat
or
dec
or
sbb
push
cmp
aad
icebp
cmc
mov
leave
jg
imul
push
cmpsl
lods
mov
and
push
mov
inc
negb
push
jp
jg
xchg
mov
mov
add
arpl
nop
adc
add
xchg
ror
cli
jg
add
push
leave
and
test
shll
arpl
mov
cld
ja
and
xchg
pop
or
rol
out
cmpb
inc
sub
xor
or
ret
or
imul
clc
jno
in
out
les
xor
mov
in
negl
push
pusha
sbb
push
out
and
outsb
daa
push
int3
iret
or
rclb
push
test
adc
dec
adc
testb
sbbb
popf
pop
ror
in
sbb
or
mov
adc
or
add
cltd
jmp
clc
xlat
inc
mov
cmpsl
sahf
mov
gs
subps
nop
sub
out
fidivrl
sbb
adc
jne
or
in
mov
shll
push
in
adc
dec
or
loop
push
and
pop
lret
inc
push
in
stos
pop
jns
pop
adc
pop
dec
dec
adc
xchg
enter
dec
test
xchg
testl
push
cltd
lds
cmp
icebp
and
add
dec
jo
xor
bound
add
sbbl
xchg
scas
sub
loop
gs
xor
xchg
xor
addr16
mov
into
lahf
clc
sbb
lods
mov
adc
add
cmp
cmp
popf
out
mov
pop
rorb
push
add
or
inc
lahf
jnp
cli
xchg
sarb
repz
lahf
loop
and
pushf
xchg
loopne
fildl
jb
or
pop
pop
dec
aaa
and
stos
loop
xchg
pop
dec
jno
mov
das
mov
fsubrs
call
stos
cmp
fistpll
sub
jge
xorb
dec
xchg
sub
push
inc
fwait
sub
das
pushf
push
mov
pop
mov
mov
sub
lret
loop
mov
loopne
into
ljmp
mov
insl
jge
mov
movsb
dec
dec
sbb
fbld
sbb
pop
subb
add
lahf
xchg
inc
xor
sahf
ror
pop
sbb
jne
iret
jmp
sub
shll
xor
arpl
stos
dec
push
jmp
lods
data16
jmp
push
roll
adc
mov
cmp
das
add
xchg
mov
cmp
adc
fucomip
sahf
insl
jge
cmpsb
mov
pop
sbb
pop
shl
push
sti
inc
jge
mov
push
mulb
or
mov
xor
int
sbb
stc
lock
adc
or
or
ja
aam
repz
loopne
leave
stc
cmp
and
fidivs
mov
mov
jne
aas
fs
push
cmova
mov
mov
cld
xchg
lds
adc
fsubrp
dec
movntq
sbb
push
mov
cltd
push
xchg
fildl
inc
dec
ja
mov
std
imull
lcall
lcall
mov
and
jae
sub
cwtl
push
decl
pop
cmc
inc
cltd
fbld
cmp
shll
mov
pop
int
shrl
adc
jg
cmpsl
andl
jp
in
inc
lahf
sub
add
gs
dec
mov
lret
mov
sub
pop
cmp
xor
fsubl
sbb
xor
pop
neg
out
js
gs
xchg
pop
jg
sub
repz
mov
stos
xor
xchg
pop
lahf
mov
xor
out
or
popa
xchg
lahf
sub
sub
das
cmp
testb
add
push
daa
and
mov
pop
sub
call
add
subb
mov
push
and
lea
out
fildll
mov
jecxz
stc
inc
sbb
repnz
sub
aad
mov
jle
stc
clc
repz
lods
sbb
icebp
xor
fldl
xchg
xor
adc
out
mov
popf
pop
and
xor
pop
and
ret
adc
lahf
gs
bnd
adc
outsl
xor
scas
gs
xor
jmp
or
scas
repnz
pushf
ret
lods
inc
in
cmpsl
test
sub
inc
add
mov
mov
xchg
fmulp
int3
pop
mulb
in
xor
or
xor
sub
fdivs
andb
xchg
stc
stos
into
cmpsb
or
inc
imul
and
sub
mov
fwait
inc
xor
or
lcall
mov
and
xor
mov
jmp
cli
jp
cli
push
cld
dec
scas
data16
jo
jmp
mov
xlat
stos
add
inc
daa
pop
dec
xchg
rcrl
xchg
aas
ljmp
dec
xor
push
cmp
xchg
lock
fscale
sbb
mov
cmp
subl
add
push
rcrb
cmp
sbb
mov
xor
adc
dec
call
add
mov
in
xchg
loop
imul
rorl
or
mov
call
aad
dec
aad
mov
and
or
dec
ljmp
lahf
mov
je
test
js
cs
addr16
int3
push
pop
dec
or
rorl
loop
jmp
jle
daa
repnz
mov
jp
dec
xchg
int3
and
mov
std
sti
stos
xchg
lods
in
rorl
push
popf
ds
fdivs
xlat
xlat
test
pop
xchg
cmc
dec
or
sbb
out
mov
pop
scas
pop
xlat
cmp
scas
inc
sti
out
lret
dec
gs
mov
mov
mov
jg
fmuls
in
lret
sbb
test
dec
es
and
aaa
roll
push
mov
dec
add
xchg
sbb
roll
xor
cmp
pop
push
push
cli
je
pop
daa
dec
mov
dec
sub
test
in
pop
add
or
cld
and
ss
data16
vcmpps
loope
cmp
and
inc
jb
loope
mov
or
mov
stos
and
pop
sub
pop
negb
std
call
mov
cmpsb
adc
leave
and
xchg
and
test
and
lods
enter
cmp
xchg
enter
repz
not
fwait
in
pusha
add
jno
addr16
aam
sub
mov
cmpl
stos
add
cli
adc
push
lea
jb
adc
je
movsl
out
and
cmp
into
mov
enter
lcall
cmc
imull
push
fs
jmp
xor
mov
mov
std
lahf
adc
mov
cmp
cmpsb
pop
cmp
mov
or
add
or
test
fwait
out
sbb
cltd
rorb
int3
xchg
hlt
mov
xor
xor
push
sub
sbb
jg
jo
mov
jl
push
push
sarl
and
adc
jae
pop
loopne
imul
mov
nop
sahf
add
push
push
iret
icebp
mov
fldl
push
cmp
xchg
inc
ret
dec
xor
hlt
push
mov
xchg
ret
adc
and
xor
lea
sub
xchg
push
mov
fcomps
loop
std
aas
lahf
dec
mov
int3
sbb
fwait
push
xor
popf
mov
mov
dec
adc
jle
mov
lea
out
jb
aas
dec
push
mov
pop
mov
lock
inc
lcall
inc
rclb
add
push
das
cmp
push
negl
mov
daa
mov
push
or
loopne
imul
addr16
pop
les
cs
das
dec
movsl
jp
in
push
push
insl
in
lcall
nop
outsl
push
and
sub
mov
test
adc
notl
and
or
adc
mov
adc
adc
test
mov
cmc
popa
cmpb
mov
mov
shrb
xor
xchg
mov
cs
push
int3
out
and
xchg
repnz
cwtl
out
iret
out
hlt
insl
movsb
mov
sahf
loope
push
adc
lock
arpl
outsl
popf
lcall
lods
xor
xchg
int
neg
add
add
lahf
rcrl
cltd
aad
out
sub
or
fildll
sbb
ret
out
mov
sub
sub
jnp
mov
test
jg
pop
daa
sbb
or
jle
lahf
aaa
push
mov
aaa
sub
out
lods
and
or
pop
lret
int3
test
xchg
jno
lret
adc
iret
mov
push
movsb
jmp
xchg
mov
mov
and
test
arpl
mov
imul
ljmp
sbb
fstl
fcmovnb
jmp
push
mov
test
out
xchg
jno
mov
test
sub
jo
iret
sbb
in
ret
stos
add
enter
std
inc
or
cmp
cli
insb
cwtl
push
or
mov
sub
cmp
imul
shl
imul
pop
repnz
adc
je
andb
fidivs
js
xchg
out
aad
out
inc
xor
push
mov
inc
fwait
mov
scas
jle
mov
int3
push
mov
and
mov
mov
ljmp
mov
jp
add
clc
test
xlat
sbbl
loop
or
mov
fists
jecxz
mov
andb
popf
xor
jmp
sub
pop
or
and
pop
cltd
xchg
adc
dec
push
dec
popf
cmc
sbb
cmp
fsubrs
mov
hlt
in
jecxz
or
out
adc
push
outsb
and
data16
ljmp
fildl
xor
jns
int3
jmp
cli
adc
loop
icebp
push
es
ljmp
fwait
leave
adc
mov
dec
stos
enter
mov
or
imul
aaa
pusha
inc
xchg
add
shl
pop
fwait
sahf
inc
shll
in
cmp
sti
popa
or
int3
mov
fdivl
mov
xor
rclb
lret
int3
push
pop
ds
xchg
test
adc
xchg
loopne
fldl
cmc
sub
mov
ret
sub
fdivrl
insb
lods
cmp
mov
lret
mov
data16
mov
adc
xchg
fnsave
notb
mov
xlat
mov
jle
aam
nop
xor
jae
mov
jp
mov
cmp
push
int
ljmp
jo
jge
test
mov
xor
bound
xchg
lahf
test
rcl
inc
cmp
icebp
or
and
push
scas
insb
cmp
pop
out
test
imul
test
mov
and
cmp
je
stos
push
cmpsb
inc
xchg
outsb
mov
jne
repnz
inc
lods
and
lret
stc
xor
pop
push
add
push
adc
pop
fistps
mov
dec
aas
and
mov
fildl
sub
in
dec
aam
lods
add
dec
mov
fisubl
xchg
and
xor
jo
xor
xorb
imul
stc
mov
mov
cmp
add
push
cmp
test
lahf
lret
mov
add
jle
and
fiaddl
mov
jl
inc
sbb
in
push
push
sahf
xchg
cmp
les
or
in
aad
js
mov
adc
xor
test
pop
add
xor
push
movsb
stc
repnz
es
and
fdivl
lahf
pop
push
mov
sbbl
add
outsb
popl
movsb
sub
test
inc
mov
and
push
dec
adc
cld
cmp
lock
in
mov
inc
mov
repnz
insl
int3
xchg
xor
xor
addb
sub
mov
dec
gs
loopne
out
inc
sbb
icebp
js
nop
sub
es
andb
in
or
dec
out
add
les
sarb
and
xchg
adc
and
or
add
enter
mov
mov
pop
jge
imul
addb
and
ret
lods
sbb
xchg
rorl
adc
mov
js
fmull
out
lds
ss
flds
movb
mov
sub
push
lret
lds
dec
pop
add
test
andb
push
cld
leave
push
test
push
lods
dec
daa
repnz
xor
sarb
jl
inc
add
ja
repnz
and
daa
or
mov
stos
out
or
pop
fs
push
std
push
popa
scas
orl
adc
cmp
xchg
xor
jnp
jle
xchg
mov
cmp
sbb
add
and
scas
jp
jmp
inc
pop
lret
insl
aaa
jecxz
jne
pop
add
ljmp
mov
lahf
cli
xchg
push
hlt
inc
repnz
fbld
stc
movsl
lock
gs
insb
data16
lcall
push
jns
add
push
test
jge
les
ret
inc
dec
xchg
daa
fsubs
mov
inc
pop
fbld
dec
or
ds
xor
mov
fiaddl
int
cmc
loop
xchg
enter
out
or
pop
jle
lcall
int
adcl
sar
insb
inc
xor
sar
mov
jg
and
jnp
incb
pushf
outsb
scas
in
sbb
ret
push
decb
les
mov
ds
push
ja
fwait
dec
mov
mov
xlat
fwait
mov
and
pusha
xchg
negb
xor
pusha
lret
mov
lret
xchg
insl
adc
lret
insb
ja
insl
add
out
dec
aam
and
leave
stc
mov
gs
xor
xor
add
outsl
mov
cmp
add
iret
cs
adc
xchg
shl
arpl
dec
push
xchg
push
outsl
xchg
out
mov
mov
mov
movb
mov
mov
inc
push
hlt
in
lods
aaa
sub
test
fdiv
adc
or
mov
loop
test
stc
pop
mov
negl
jp
mov
jmp
and
and
lods
pop
out
dec
aad
or
fwait
lret
mov
rcr
or
shlb
adc
js
sub
or
shl
lea
push
inc
xchg
stc
popa
inc
jno
xchg
fs
add
fsubs
sub
fs
mov
rorl
xchg
int3
adc
dec
xor
mov
lods
xchg
xchg
iret
scas
mov
out
jmp
outsl
sub
xor
mov
les
int
adc
xor
cmp
and
xlat
addr16
rcr
jmp
cmp
sbb
sbb
std
and
sar
jmp
sbb
icebp
mov
push
inc
sti
dec
adc
sahf
dec
mov
stos
xorb
xlat
xor
mov
ret
pusha
pop
mov
cmpsl
cmp
movsl
mov
jge
push
cmp
pop
out
adc
adc
xor
stos
lea
mov
pushf
lds
outsl
mov
lock
mov
jg
pop
sahf
jecxz
dec
jae
bound
jo
cmp
cli
stc
orl
and
pop
neg
mov
imul
lods
mov
fidivl
xor
or
insl
into
sbb
add
test
and
mov
imul
xchg
and
rcrl
into
aas
js
icebp
nop
aad
push
add
mov
or
in
and
cwtl
jo
aas
ja
dec
test
mov
aam
std
cwtl
ljmp
mov
mov
mov
sub
pushf
in
sub
jecxz
ret
mov
mov
inc
fdivl
sarb
xor
add
cmp
mov
mov
mov
lret
lea
std
inc
sbb
pop
inc
adc
into
aam
xchg
and
test
aam
pop
mov
mov
sbb
jo
inc
xchg
or
js
sbb
popa
mov
cmp
dec
lret
push
sub
mov
fisttpl
jbe
cwtl
clc
gs
or
and
gs
int3
xor
xlat
pop
and
int
es
shr
std
xor
or
inc
xor
adc
mov
shrb
dec
bound
inc
adc
jbe
movsl
and
addl
add
or
incl
fisttpl
inc
fdivrs
push
cmp
xor
int3
mov
lds
orl
push
adcl
jl
inc
pusha
push
dec
fcmovne
outsl
enter
sub
ja
jecxz
xorb
inc
std
ret
std
daa
xor
dec
cmc
jecxz
lcall
xor
sbb
outsl
iret
insl
repnz
xlat
ljmp
shlb
xchg
xor
or
pop
popl
dec
out
xchg
cmp
xchg
into
popa
push
pusha
pop
push
fs
xchg
or
push
ds
push
rol
xor
cmp
xor
mov
mov
fnsave
cmp
cltd
jnp
inc
xchg
cwtl
outsl
lret
add
adc
mov
adcb
mov
push
jl
mov
mov
test
cmp
mov
popa
pop
or
push
pop
add
sub
in
lret
jbe
in
sbb
push
insb
mov
fisubrl
fsubrl
mov
xor
dec
roll
lods
pop
test
xor
lahf
mov
scas
mov
xchg
mov
inc
xchg
pop
cs
loop
push
mov
or
ret
adc
aas
lcall
int
inc
scas
clc
jg
push
cld
add
pop
lret
mov
pushw
push
test
jl
add
jg
push
js
fwait
xchg
inc
xchg
aaa
insl
xchg
mov
int3
stos
shl
in
mov
xchg
or
icebp
rcl
cli
sub
and
xchg
or
pop
jbe
mov
fwait
inc
push
enter
popf
gs
pop
out
mov
xchg
sti
jae,pt
pop
dec
mov
jo
faddl
or
adcl
f2xm1
cmc
sub
mov
and
jge
bound
sarb
adc
imul
loopne
iret
inc
mov
xor
mov
loopne
sub
inc
or
vphaddbd
ds
xchg
mov
das
test
jge
xchg
pop
sub
mov
arpl
int3
push
aaa
loopne
and
sub
xchg
inc
inc
and
dec
into
cli
in
arpl
out
mov
inc
ja
sti
roll
lock
jns
out
faddl
sub
push
inc
xor
insl
xor
mov
mov
or
addr16
jge
dec
pusha
stc
int
in
stos
int3
pusha
cmpsl
jmp
pop
pop
int3
pop
and
bound
sarb
sub
cwtl
and
addr16
out
mov
dec
in
sub
ds
cmp
add
arpl
mov
das
mov
insb
rcrl
les
gs
test
pop
jns
ret
jge
inc
add
insl
ret
pop
jno
push
and
jl
outsb
jno
jnp
add
push
mov
jge
icebp
sub
ret
int
ja
pop
sarl
repz
cmp
jo
rorl
imul
ret
xchg
pop
inc
pop
jl
inc
dec
jb
popf
xchg
in
std
sbb
pop
rclb
mov
popf
lea
loopne
pop
sub
xorl
stos
add
xchg
push
mov
or
sahf
scas
jae
jns
dec
cmc
int
inc
out
sub
mov
xchg
xchg
mov
add
pop
or
xchg
adc
push
cld
xchg
and
and
loope
mov
push
or
std
dec
popa
mov
or
pop
enter
in
inc
in
idivb
daa
dec
fsubp
hlt
loope
sub
add
push
lock
xor
inc
out
mov
sub
push
mov
lahf
enter
mov
mov
mov
push
leave
movsb
stos
scas
adc
cmp
jge
test
incl
xchg
xchg
loop
ljmp
jl
outsb
sub
mov
rorb
out
cmp
mov
sbb
call
mov
mov
jbe
lods
cmp
xchg
out
movsl
pop
xor
es
jmp
fwait
shlb
out
shll
xor
lcall
mov
inc
push
mov
pop
test
adc
les
jns
push
jge
aam
push
bound
mov
and
add
mov
fwait
mov
mov
push
cmpsb
inc
mov
adc
shrl
ret
xchg
sub
jecxz
ss
adc
jmp
xor
sti
push
int
mov
inc
fs
push
xchg
leave
mov
daa
pop
mov
mov
or
fidivrl
and
xchg
addr16
mov
or
mov
pop
pop
sbb
daa
rcl
insb
fdiv
mov
adc
sbb
test
insl
mov
insl
adc
rorb
cmc
xor
push
mov
movhlps
std
stos
push
xor
loope
test
push
mov
pop
jbe
jns
mov
push
lods
mov
jnp
test
pop
adc
pop
push
pop
movzwl
aas
inc
pop
inc
es
cmpsb
xor
bnd
hlt
lret
and
push
stos
pusha
movsb
xor
and
adc
mov
push
addr16
push
or
ja
cmc
pop
jg
cltd
or
xrelease
push
adc
ljmp
outsl
sub
out
pop
stos
adc
pop
lods
xor
movb
in
push
inc
psrld
ja
orl
cs
push
xchg
cmp
cmp
add
daa
adc
jecxz
pop
sub
test
cld
cmp
cmp
mov
dec
sub
movsb
push
in
dec
xor
inc
pop
cmp
fwait
push
dec
imul
adc
and
sti
xchg
jbe
pop
or
aad
mov
ljmp
icebp
icebp
sbb
testl
jl
mov
shl
ret
inc
sti
jno
mov
jge
cmp
stc
enter
inc
dec
xchg
push
and
jmp
push
pop
cmp
rcrl
add
out
dec
cmpsl
pop
aad
stc
mov
icebp
outsb
or
xchg
out
lock
clc
jno
jle
push
shr
sarb
mov
or
movsl
mov
roll
pop
xor
mov
mov
leave
aas
mov
lock
jecxz
mov
stos
lret
mov
in
push
mov
sahf
fcmovbe
inc
test
mov
pop
sub
mov
fistps
stos
clc
dec
int3
scas
xor
icebp
or
jb
jno
icebp
jecxz
fimuls
iret
xchg
sub
loopne
mulps
stos
lcall
in
movsb
idivl
packssdw
sub
xor
sub
xor
mov
inc
ret
jmp
test
jl
test
fldl
sbb
jbe
dec
push
movsb
stos
push
push
ja
fimull
jg
scas
or
sbb
fdivrp
nop
aaa
sbb
cs
icebp
cmp
sbb
rclb
inc
mov
js
mov
cmp
fldln2
fsubl
aad
jae
mov
pop
push
push
dec
mov
jo
insb
popf
jecxz
push
fnstenv
insl
and
cld
push
je
or
test
packuswb
test
mov
scas
and
jp
out
jge
sarb
dec
repnz
cs
adc
insl
or
jl
bound
lods
mov
sub
outsb
enter
adc
movsb
mov
insb
aaa
inc
pop
and
test
push
orl
repnz
cli
sub
stos
clc
dec
fdivr
add
out
rclb
jbe
bswap
mov
push
mov
icebp
adc
fiadds
jle
xchg
mov
aad
mov
xchg
mov
mov
clc
pop
xor
add
jne
mov
ss
es
mov
sub
mov
mov
mov
ret
mov
stc
int
in
adc
fildl
cmpsb
push
notl
jge
hlt
das
fstl
push
mov
push
push
in
loopne
cmp
dec
jmp
hlt
into
sti
sbb
inc
lods
inc
insb
mov
and
inc
add
cmpsb
call
clc
fdivrl
push
and
sbb
push
pop
jge
call
lods
adc
dec
jecxz
adc
aas
or
add
mov
or
adc
adc
outsb
push
lret
subb
in
popa
stos
jae
scas
sub
push
sbbb
in
ljmp
rorl
lock
in
push
movsb
or
mov
sbb
adc
test
inc
jp
xor
out
and
adc
bnd
sub
iret
xor
or
mov
stc
fidivs
sbb
xor
fidivrl
and
add
or
mov
lock
outsb
addb
notb
xchg
push
loop
pop
outsb
or
mov
xor
jno
jp
and
and
faddp
shll
in
cmc
test
xchg
push
and
push
aam
mov
aad
inc
imul
scas
mov
cmp
sahf
out
sub
mov
mov
mov
jns
icebp
and
bound
mov
lahf
loopne
rolb
mov
adc
mov
dec
movsl
shll
ret
sub
mov
insb
xorl
mov
int3
mov
sbb
push
sti
das
mov
repnz
mov
xchg
cmp
sub
pusha
push
test
ficomps
lods
rclb
sub
out
mov
lahf
std
imul
add
cwtl
and
fsubrl
mov
loopne
mov
pop
push
stos
shr
and
pop
sahf
adc
lret
cwtl
pop
ja
js
push
pop
std
in
xchg
mov
rorl
push
cli
jmp
fidivrl
movsl
xlat
stc
jnp
mov
scas
fs
mov
pop
dec
xchg
sub
jne
inc
pop
dec
sub
mov
cwtl
xchg
cmp
mov
lods
push
or
mov
loopne
outsb
addr16
lods
lret
je
and
xchg
mov
xchg
sub
inc
mov
dec
icebp
shrb
sahf
cs
iret
dec
sbb
xchg
pop
mov
xchg
pop
adc
inc
into
movsl
jg
mov
jae
dec
adc
popf
add
or
stos
mov
cmp
scas
cmp
call
sti
dec
stos
sub
lods
push
mov
cmpsl
lret
std
jmp
sub
ret
mov
inc
inc
clc
imul
ror
xchg
inc
cmp
outsl
js
sub
push
jne
pop
or
mov
inc
fnsave
cmp
mov
test
in
adc
pop
mov
sub
rorl
pop
int
xor
popf
push
jnp
xchg
outsb
rcrb
lods
sbb
jge
push
clc
shl
mov
inc
mov
add
mov
stos
mov
sbb
jl
and
es
jo
sbb
xchg
int
pop
cmpl
or
frndint
jno
inc
mov
sbb
out
xchg
loop
aam
inc
nop
lcall
arpl
mov
push
rolb
xchg
or
stos
mov
test
sarb
pusha
sbb
cmpsb
sub
add
push
or
fcmovu
inc
pushf
outsb
mov
das
mov
add
jae
jecxz
push
push
sbb
hlt
sbbl
ds
scas
jb
add
xor
fwait
mov
clc
cmp
inc
sar
std
xor
inc
fadd
xchg
jp
imul
scas
and
out
dec
adc
cmpsl
jnp
adc
cmp
daa
iret
shrb
cmp
inc
pop
imul
push
dec
ss
cmp
xchg
sub
pop
push
jecxz
xlat
int3
mov
xchg
lea
sub
adc
inc
jg
imul
mov
or
push
or
lods
add
rcrl
imul
mov
cmc
aaa
sbb
xchg
pop
jmp
fdivl
lods
rcl
mov
hlt
inc
pop
xchg
lea
push
sub
xlat
fisttpl
jne
fst
or
dec
in
lret
xchg
inc
rorb
adc
fisubs
sti
nop
enter
icebp
xchg
cmp
cmpsl
xor
jp
sbb
sbb
xchg
sbb
bound
cmpl
add
es
movsl
fildll
mov
xlat
pushf
and
pop
enter
rclb
xchg
mov
das
cmp
pop
mov
ljmp
and
outsl
or
or
adc
xor
cmp
shrl
setge
mov
cmp
push
xlat
test
fldenv
push
inc
mov
inc
and
lcall
lds
sub
mov
mov
outsl
ret
pop
in
movl
pop
sbb
mov
addb
cmp
jmp
pop
gs
cmpsb
icebp
push
mov
cmp
and
movsb
jb
xor
dec
xchg
or
das
faddl
pop
sub
jmp
lods
rolb
cmpsl
jg
pop
popa
jns
mov
jnp
loop
inc
popa
sbb
fcompl
icebp
aad
ljmp
divl
jge
insl
jge
pusha
push
mov
jle
divb
cmp
xor
or
dec
push
aam
add
and
push
mov
xor
mov
mov
cs
loope
sub
sub
xor
xor
mov
xchg
or
mov
jns
mov
nop
mov
int
and
push
add
jmp
mov
nop
adc
push
lods
mov
gs
cmp
loope
xor
cld
lea
add
mov
push
arpl
insb
int
mov
shll
stos
out
mov
cmpsb
push
xor
pop
pop
sub
stos
testl
push
loopne
mov
push
or
out
and
jne
jge
and
pop
sub
loop
mov
fwait
jbe
sub
cmp
dec
cmp
jmp
mov
jo
push
add
popf
sbb
add
xlat
xchg
pop
mov
xchg
iret
lods
add
push
sbb
incb
jno
push
iret
push
mov
mov
loopne
add
inc
inc
shll
sbb
sbb
jle
add
inc
xor
pop
sbb
and
xor
xchg
mov
mov
lea
fistps
subl
pushf
popa
jae
test
subl
iret
mov
pop
jo
xor
lods
mov
dec
testb
and
cmpsl
and
adc
xlat
aam
or
or
lret
cwtl
mov
xchg
outsb
sub
stos
lcall
scas
ljmp
scas
notl
xlat
pusha
inc
fsubs
ds
addr16
popf
or
fidivrl
daa
aaa
mov
cltd
adc
loopne
jmp
rcl
and
mov
cwtl
daa
add
pop
pop
out
stos
jecxz
test
imul
dec
xor
cmpsl
sub
repnz
dec
fsubl
movsl
shll
outsb
inc
rolb
bound
outsl
test
mov
stc
out
pop
data16
clc
adc
fldl
adc
add
mov
stc
pop
and
mov
int3
std
fsubs
sbb
imul
xchg
and
jbe
inc
test
repz
jb
jbe
lcall
xlat
and
cmp
repz
mov
or
xlat
gs
mov
pushf
enter
cmpb
rcpps
push
jge
fists
jge
dec
push
mov
sub
jg
xchg
test
ss
mov
mov
lcall
call
popa
imul
or
test
add
push
imul
nop
and
jmp
stos
lock
or
stc
dec
sbbb
sbb
scas
test
loope
sub
icebp
mov
xlat
sub
pop
cmpsb
int
mov
test
addr16
aam
pop
push
add
es
or
std
pop
sbb
mulb
cmc
gs
jae
cmp
or
jecxz
cmc
mov
dec
cmp
gs
xchg
ret
pop
cmp
xor
in
adc
nop
sub
mov
jb
push
inc
adc
or
imul
out
test
cmc
ds
and
inc
fimuls
jae
pop
xor
iret
stos
inc
dec
mov
push
pop
jno
in
fiadds
jae
mov
fs
lea
scas
scas
jle
dec
mov
lods
mov
test
sbb
ret
les
test
int
sarb
mov
inc
xor
pop
and
or
inc
notb
cld
faddl
pop
cmp
and
mov
dec
out
mov
int
xchg
xchg
mov
shl
fsts
fsubrl
fldl
nop
cmc
and
fcompl
out
pop
or
xchg
sbb
mov
sbb
xor
push
in
push
call
inc
aas
xor
jmp
aam
jp
stos
dec
cmc
mov
add
dec
into
jp
sbb
cmpsl
push
aas
xchg
xchg
mov
inc
dec
push
and
test
pop
cmc
lods
cmp
or
jb
push
divl
mov
or
jecxz
loopne
xor
inc
dec
xchg
xchg
in
inc
hlt
stos
inc
add
orb
imul
sbb
lock
mov
in
adc
push
outsb
out
lods
frstor
sti
fdivs
cltd
inc
nop
lahf
mov
dec
push
jmp
jb
loope
push
sbbb
add
pop
loopne
in
xchg
loope
push
mov
mov
int
lcall
adc
push
mov
push
sbb
test
in
incb
punpcklbw
xchg
push
jns
out
pop
lods
sub
pop
mov
mov
inc
dec
xor
or
shl
jmp
loopne
mov
test
mov
jg
data16
stos
into
jecxz
loop
lods
cld
adc
cltd
push
jne
test
ja
and
or
and
pusha
mov
sbb
jmp
fptan
ficomps
iret
push
sub
sbb
sub
xor
and
fistps
cmp
cmp
mov
in
cmp
jns
call
lods
xchg
hlt
mov
js
or
xchg
adc
push
rcr
and
push
sub
hlt
fsubp
cs
pop
clc
push
add
fsub
out
std
rclb
cmpl
mov
stos
cwtl
and
jae
mov
adc
rcrb
dec
mov
inc
inc
in
jmp
jmp
out
dec
jmp
pop
pop
shll
jnp
pop
fimuls
maskmovq
imull
or
pop
test
jmp
and
shrl
push
inc
mov
rcl
insl
sub
test
out
into
sbb
outsb
inc
jge
jmpw
cltd
push
js
cs
sbb
pop
ja
fsts
mov
adc
xor
cmp
xor
jb
xchg
fists
das
and
outsl
sub
jl
or
lcall
cmpsb
mov
insb
sti
orl
mov
iret
int
imul
adc
and
mov
stc
or
out
dec
stos
fmul
cs
test
xchg
cli
sbb
das
xor
les
add
push
imul
outsl
into
xchg
orb
jl
mov
ret
stc
cmp
cmpsl
xchg
cmp
scas
es
adc
cs
mov
popf
dec
pop
sbb
stos
stc
into
inc
popa
lods
inc
pop
orl
xchg
mov
jmp
mov
xor
roll
push
andb
daa
popf
lret
insl
add
inc
nop
les
sub
adc
addr16
cltd
push
cwtl
rcrb
mov
xor
jb,pn
cs
mov
int3
insl
mov
ljmp
inc
cltd
xor
cmp
sbb
loop
lea
jp
push
and
and
inc
mov
mov
sbb
xchg
pop
dec
xor
cli
popf
dec
pop
scas
fs
or
fmuls
xorl
cltd
ljmp
xchg
mov
pop
mov
inc
fwait
add
mov
dec
mov
cmp
je
push
scas
roll
divb
dec
les
dec
jecxz
lods
jnp
or
testl
dec
sub
add
adc
repz
repnz
popa
adcb
out
cmc
pop
and
mov
in
xor
push
in
aam
fucomi
push
jl
andb
mov
inc
movsb
add
mov
test
xchg
push
xchg
lahf
cmc
mov
add
add
sar
pushf
sub
push
lods
orb
cmp
push
sub
stos
cs
mov
clc
in
dec
dec
lahf
dec
mov
pop
xchg
shrb
sbb
ds
lret
pop
lea
or
ret
or
push
jmp
jmp
stc
cmpsb
pop
and
mov
mov
push
sbb
lcall
pop
aas
sub
mov
int3
in
add
aad
xor
rcll
adc
test
jae
or
bound
pop
add
shll
mov
adc
adc
pusha
popa
adc
xchg
roll
jl
imul
repnz
test
data16
xor
fbld
addb
mov
inc
cwtl
std
js
cld
loop
call
outsl
inc
sti
sahf
mov
xor
das
lahf
inc
sbb
popa
lods
out
dec
fildl
cld
clc
push
mov
call
jle
jecxz
push
dec
mov
test
dec
push
cld
inc
ss
add
ds
fimull
cmpsb
xlat
movsb
sbb
mov
mov
push
cmp
or
cli
mov
int
cmp
ret
jmp
sahf
test
and
sbb
or
pop
or
fucomp
cmpsb
xchg
push
int3
roll
pop
pop
or
and
test
xchg
sub
sbb
ljmp
xchg
adc
stos
lcall
jb
imul
sbb
popa
and
pop
scas
daa
pop
loopne
push
push
pop
cwtl
aaa
xchg
push
adc
ljmp
fcmove
push
inc
xchg
mov
hlt
push
ja
dec
jb
cmp
mov
cltd
rorl
fwait
pop
cli
jp
gs
sbb
cmpsl
mov
repnz
or
xchg
jae
inc
dec
cmpsb
lret
or
pop
pop
jns
inc
inc
pop
mov
xor
inc
pop
xchg
sub
popa
push
test
std
clc
pop
xchg
insb
adc
cltd
andl
outsl
les
push
or
lds
mov
lahf
fbld
lea
scas
popa
scas
and
mov
sub
push
cmpsb
dec
es
dec
mov
mov
call
movl
and
mov
je
pop
pop
insl
loope
push
das
clc
mov
pop
adc
mov
jmp
nop
int3
in
and
and
cmp
jmp
xchg
out
stos
mov
into
add
jl
int3
inc
fcoms
in
adc
sub
jae
ror
call
jae
lods
add
push
std
mov
ljmp
cmp
cmp
ds
lock
out
aas
mov
sbb
dec
repz
mov
aas
outsl
adc
lret
out
pusha
testl
arpl
subb
das
inc
push
jp
add
push
test
out
loope
rolb
jp
int
es
subl
decb
add
cmpsl
mov
lea
adc
cli
stos
fcoml
fbld
push
inc
and
stos
out
daa
sahf
scas
imul
out
pop
lea
out
pop
xchg
ljmp
sbb
cmc
mov
rorl
stos
andb
add
test
mov
sub
iret
xchg
dec
popf
movsb
mov
scas
mov
jmp
push
jae
sub
mov
mov
jecxz
mov
mov
push
addr16
and
sahf
daa
jmp
cmp
sub
stos
sbb
je
std
ror
lahf
cltd
shrl
mov
add
rorb
stc
jns
int3
xchg
ja
xchg
adc
pop
test
fcomps
movb
mov
repnz
ret
ss
rolb
das
cmp
jbe
push
mov
sub
mov
std
outsb
xor
pop
lods
mov
mov
and
cld
jg
loope
push
jle
ja
sbb
pop
cltd
jmp
mov
jp
rol
mov
jo
int3
pop
mov
xlat
frstor
out
push
mov
sub
in
sbb
addr16
jp
scas
in
adc
xlat
mov
ss
scas
fiadds
jge
dec
les
dec
pushf
fistpl
insl
adc
cmp
stos
pop
test
mov
xchg
add
or
sar
mov
mov
sub
mov
ljmp
out
inc
ja
mov
nop
push
dec
add
ficoms
dec
mov
xor
pop
fsubl
les
add
loopne
jnp
inc
test
stos
mov
or
xchg
jno
sbb
divb
dec
test
mov
rcrb
mov
sti
rol
lcall
cmp
or
daa
cld
mov
sub
cmc
jne
mov
xchg
in
setle
add
das
xchg
xor
dec
xchg
out
out
push
flds
jmp
imul
or
jae
xchg
pop
push
pop
sti
sbb
cmp
jbe
mov
mov
push
in
pop
cld
cld
dec
aam
ljmp
sub
mov
sbbb
jle
filds
mulb
int
jl
test
pop
out
int3
jl
xchg
push
lock
xchg
cmp
xor
inc
dec
cmpl
sti
icebp
cwtl
xlat
fbld
xor
pushf
pop
jnp
mov
movsb
mov
sbb
and
mov
adc
inc
popf
xor
add
xor
mov
std
in
xchg
dec
or
inc
push
xor
jle
jge
in
aas
and
sbb
roll
or
sbb
mov
addr16
and
cmp
jmp
xor
test
mov
mov
sub
cli
jno
cmpsl
out
dec
mov
subb
lock
or
rdpmc
xor
and
and
das
stos
push
pop
popfw
insl
and
ret
sub
inc
push
cmc
mov
sub
call
xchg
incl
subl
xchg
lods
sbb
mov
movsl
in
sbb
test
clc
imul
adc
int
imul
cmp
add
mov
lods
rcrb
inc
insl
fsts
in
loope
xchg
or
inc
in
ljmp
ret
sub
pushf
sbb
out
imul
leave
in
jno
sub
adc
xchg
jge
dec
fstpl
sub
aad
jge
xchg
movsl
sub
sub
cli
ljmp
xchg
popa
inc
pop
cmp
pop
aas
xchg
in
mov
cmc
mov
js
cltd
push
test
std
cld
test
or
pop
push
or
push
xor
add
add
cmp
jg
inc
in
repnz
dec
mov
stos
pushl
xchg
and
xlat
dec
fbld
and
pusha
mov
sbb
inc
scas
dec
xchg
ss
xchg
cmp
fmul
xchg
arpl
push
pop
dec
pop
xlat
mov
out
outsl
inc
add
push
cwtl
call
xor
mov
push
cmc
stc
jbe
jo
xchg
std
cli
aad
adc
sbb
loopne
and
cltd
test
cs
test
out
jb
leave
jo
mov
jne
push
lahf
outsb
lret
loopne
mov
js
gs
enter
addb
lea
pop
outsl
scas
shl
in
sbb
fldl
mov
push
or
mov
cmp
imul
fists
es
iret
jne
cmp
push
sti
and
frstor
cmpsb
xchg
enter
fstl
inc
shll
add
ja
mov
roll
jns
mov
push
push
xchg
int
in
stos
or
pop
inc
das
xchg
inc
xor
pop
or
mov
cmpsl
addl
adc
mov
roll
pop
adc
mov
fnstenv
lods
in
cwtl
cld
jno
adc
push
mov
addr16
cltd
push
push
add
mov
inc
push
and
jle
mov
lret
cwtl
fwait
sbb
mov
sub
sbb
mov
push
addr16
jle
je
icebp
mov
xchg
push
in
push
cmp
add
mov
out
bound
push
cmp
mov
fstl
xor
inc
rcrl
movsl
loopne
ret
cmpsb
in
xchg
push
xor
xchg
push
cmpsl
push
in
fcomip
mov
icebp
inc
mov
add
ret
clc
mov
xor
into
enter
cmpsl
testl
pop
cmpsl
fisubrs
imul
sub
aam
subl
cmp
cs
cltd
mov
push
daa
orb
rcll
xchg
cmc
xchg
adc
adc
xchg
inc
jb
cmp
ds
mov
arpl
sub
fcompl
call
adc
mov
iret
aas
lea
scas
sbb
xor
pop
pop
sbbb
movsb
dec
loop
add
cltd
push
sarb
fbld
sbb
bound
push
dec
scas
adc
adc
cs
insb
mov
push
movsb
xchg
push
jne
lods
gs
iret
lret
xor
lcall
mov
mov
adc
lret
roll
pop
lods
push
adc
pop
dec
mov
xlat
sub
or
test
sbb
mulb
mov
dec
rcr
push
out
pop
sbb
push
sbbl
imul
lret
aaa
test
pop
popf
cmp
mov
and
cmpsl
pop
mov
fcoms
mov
jbe
mov
push
jae
jg
fwait
cmp
stc
push
sub
xor
push
in
cmp
adc
imul
add
or
orb
leave
mov
add
in
dec
xor
ds
push
mov
fistps
les
cmc
or
lods
xchg
inc
cs
insb
push
mov
les
jmp
mov
jle
test
xor
adc
adc
jl
or
and
push
js
or
test
xor
inc
fxch
call
push
sbb
mov
ret
xchg
or
xchg
mov
cmc
add
cmp
shrl
test
sbb
nop
bound
shl
dec
push
xchg
inc
imull
call
jl
fstl
mov
xor
daa
jl
fimuls
add
cld
clc
mov
aas
lea
jbe
push
push
scas
sbb
ljmp
insb
loopne
out
arpl
sarb
sub
xchg
in
adc
add
imul
iret
out
fistl
inc
mov
roll
into
add
mov
jg
pushl
cld
cmpb
mov
movsb
sbb
cmp
sub
adc
stos
xchg
ret
sti
or
mov
or
stos
sbb
rolb
notb
aaa
fdivrp
dec
into
ds
xchg
mov
mov
loopne
rorb
scas
push
add
mov
sub
xor
in
push
in
sub
ss
ror
aam
pop
sub
js,pt
sbb
sub
gs
push
push
or
lds
fisubl
lods
adc
xor
adc
cs
cmc
in
icebp
mov
sub
mov
call
out
fdiv
xlat
inc
scas
add
gs
das
mov
dec
cmpsl
mov
outsb
pop
fsubs
xor
stc
fs
in
lcall
popa
inc
sbb
push
jnp
jg
inc
repnz
mov
adc
ss
cmpl
cmpsb
imul
cmp
shl
ljmp
jl
push
repnz
repz
fildl
and
xchg
movsb
jb
jo
es
mov
jge
or
outsb
and
jle
push
inc
jmp
xlat
jecxz
test
in
xor
nop
cltd
sbb
inc
or
mov
and
scas
ds
pop
sbb
mov
sahf
inc
add
fildl
cmp
jl
sbb
mov
sbb
jmp
pop
xor
xchg
mov
cmc
xchg
stos
pop
mov
mov
add
jo
xadd
sub
pop
mov
push
fiadds
xchg
jne
lret
movsb
mov
mov
mov
jmp
ja
mov
std
out
mov
or
push
rclb
pop
movsl
cwtl
pop
aaa
fstpt
cmc
movsl
adc
and
jno
add
pop
into
aas
xorb
lahf
rcrl
push
mov
mov
push
lret
cmp
mov
test
mov
pop
add
dec
cmc
gs
test
add
ja
cltd
roll
cmp
mov
adc
aas
mov
and
int
fucomp
inc
adc
das
or
jl
icebp
pop
mov
cld
leave
pop
add
imul
cli
xchg
pop
stos
cmp
iret
pop
insl
adc
jmp
test
aaa
push
add
cmp
mov
pop
pop
xor
addr16
pop
add
sub
dec
gs
in
lods
sbb
ror
lret
inc
or
inc
jno
jp
fstps
daa
mov
hlt
aam
stc
pop
ljmp
cmp
stos
dec
mov
lret
mov
stos
jp
sti
jg
sub
dec
sub
aaa
out
pop
xor
pusha
lds
fsubrl
xchg
into
icebp
dec
int3
cli
add
loop
std
rorl
enter
in
xchg
cmp
ds
adc
mov
sub
scas
sub
orb
pop
dec
adc
shll
push
rcll
fsubrs
push
mov
xor
ja
xchg
fldl
sbb
out
sbb
aaa
xchg
cmpl
sbb
adc
daa
ret
pop
sbb
sbb
minps
mov
arpl
pop
fldl
fdivrs
jle
add
cmp
int3
xor
and
into
xor
test
cmp
inc
shrb
mov
cmpsb
pushf
loop
nop
ds
sbbb
xor
pop
arpl
jmp
sub
ret
es
jbe
jg
test
mov
fabs
cmp
jp
push
sahf
push
adc
shlb
lea
mov
mov
or
push
jns
hlt
and
push
int
mov
mov
imul
sub
mov
push
jns
or
push
ljmp
gs
leave
pop
jne
clc
mov
pop
xor
and
sbb
outsl
lea
sbb
in
xchg
lock
adc
adc
ja
imul
aad
ret
push
mov
inc
jg
mov
fnsave
adc
cmp
cmp
mov
add
sahf
dec
shll
repnz
jge
inc
cmp
and
xor
adc
inc
out
out
mov
out
hlt
addr16
dec
cld
cli
pop
mov
xchg
mov
mov
mov
sbb
mov
adc
test
xor
dec
xor
lods
lret
sub
cmp
pop
mov
jbe
cld
test
add
leave
aam
enter
idivb
lea
clc
sbb
lahf
add
sbb
pop
add
pop
out
aaa
dec
and
out
mov
cmp
sub
mov
and
subb
jae
lcall
and
mov
jg
ficomps
xor
cmp
adc
aam
xor
xchg
rorl
cmpsl
mov
arpl
pushf
icebp
adc
inc
aad
push
stos
test
in
add
or
aam
sbb
movsl
push
dec
ja
xor
mov
sub
pop
lock
cwtl
jle
jo
pop
test
movsb
cmp
and
dec
fisubs
xor
cmp
mov
aaa
movb
adc
xchg
or
ja
cmp
pop
dec
test
mov
mov
outsl
and
loope
nop
jae
notl
aas
inc
iret
insl
stc
sti
jne
cmpsb
push
jmp
add
outsb
xlat
jnp
inc
shll
xchg
fimuls
jb
imul
into
mov
test
push
sub
cmp
sbb
push
std
lock
push
fistpl
push
xchg
mov
cmc
das
jmp
popf
or
pop
ret
and
jns
pop
addr16
fcmovu
dec
out
je
sbb
gs
mov
addr16
faddl
dec
in
xchg
xor
test
nop
subl
cwtl
jge
iret
sbb
add
ret
or
lret
xchg
sbb
hlt
add
or
jmp
add
xchg
clc
insl
jno
fisubl
xor
sbb
pop
notl
stc
jae
aas
inc
scas
sbb
js
add
dec
add
adcl
pop
sahf
sub
ds
or
push
fwait
xchg
xchg
movsb
fs
sub
lock
push
push
push
sbb
lods
inc
mov
sub
or
stos
and
popa
lret
mov
insl
mov
or
pop
pop
mov
jns
inc
mov
ror
sbb
cmp
cmp
push
scas
xlat
ret
jb
ret
hlt
xchg
fwait
pusha
pop
sahf
push
pop
popa
sbb
in
pushf
lcall
cmp
mov
inc
bound
rcrb
mov
lret
cs
or
cmp
sub
xchg
repz
cld
mov
in
add
or
dec
in
icebp
xchg
test
pushf
ja
in
mov
aas
and
inc
in
push
rorl
mov
daa
repnz
mov
pop
lahf
scas
flds
push
jo
addl
shll
jb
mov
popf
mov
adc
push
cmp
rcrl
adc
mov
mov
push
cmp
mov
mov
lods
cmp
mov
notl
inc
adc
pop
xchg
push
lret
add
shlb
out
sbb
adc
adcl
je
push
mov
rcrl
sub
stc
mov
movsl
hlt
jg
mov
lods
xchg
fsubl
test
sbb
outsl
hlt
dec
cmp
test
insb
sbb
call
sbb
stos
dec
sbb
jge
ljmp
pushf
gs
mov
popf
pop
outsl
dec
mov
xor
pop
cmp
test
jp
addb
mov
inc
dec
adc
adc
pop
xor
fsubl
cmc
dec
ret
mov
fisubl
jmp
idivl
imul
mov
and
lods
ret
popl
mov
negw
mov
repnz
or
das
rcrl
push
fstl
mov
dec
sub
cmp
data16
dec
mov
mov
outsb
dec
out
mov
mov
cltd
jns
xchg
adc
ret
inc
pop
jae
daa
xchg
sbb
pop
mov
hlt
insl
add
dec
aam
rcrb
jb
add
dec
jo
inc
or
shl
movsb
and
out
mov
cld
inc
mov
movsb
xchg
imul
jo
jnp
loopne
or
loop
mov
lds
lds
popa
int3
sbb
inc
sbb
lret
pop
negb
push
scas
lret
pop
sbb
mov
mov
imul
cmpsl
in
pop
mov
or
mov
sub
test
fisubs
cs
xor
adc
push
or
es
xchg
imul
mov
inc
sbb
add
or
inc
lea
shll
xchg
xchg
bound
add
cmpb
mov
and
arpl
pop
sbb
mov
jg
or
into
sarb
sbb
popf
sti
cmp
inc
ljmp
out
push
test
in
xchg
popf
leave
dec
in
popf
loop
add
push
cmp
sahf
adc
ret
insl
mov
mov
sahf
mov
rclb
cmpl
adc
sub
popf
lods
mov
pop
mov
test
arpl
adc
dec
push
movsb
repz
mov
test
fwait
sbb
data16
stc
repz
daa
fs
nop
jecxz
cmpl
popa
mov
or
mov
pop
inc
into
adcb
push
push
xchg
pusha
jo
outsl
mov
lea
js
cmp
arpl
or
xchg
ret
pop
xor
xchg
decl
pop
mov
dec
adc
jecxz
jle
notl
or
fimuls
mov
mov
jbe
and
out
rcrl
ds
int
dec
popf
outsl
pop
inc
sub
cmp
add
scas
iret
pop
pop
pushf
jp
cmp
pop
ja
cmp
outsl
call
xchg
mov
sub
dec
dec
inc
iret
inc
xchg
xchg
dec
inc
popa
cld
mov
rcrl
mov
sbb
insb
insl
iret
js
in
daa
int
in
neg
xor
mov
add
mov
lea
jg
xchg
mov
lret
mov
stos
mov
and
xchg
pop
mov
lods
pop
xor
push
repnz
xchg
int
mov
aad
xchg
jle
aam
push
jge
in
andb
lock
outsl
mov
cmp
je
std
sbb
cmpsb
or
push
lret
je
inc
in
fisttps
flds
popa
stos
test
pop
add
dec
mov
sbb
jne
xlat
out
inc
testb
repnz
outsl
xor
mov
and
dec
pop
repnz
push
jns
cli
dec
cmc
cli
adc
out
lret
repz
pop
mov
fdivr
int
jge
push
sub
call
fs
jne
insl
nop
test
sahf
fsubs
movsb
push
bound
add
mov
loopne
inc
jne
lret
hlt
adc
stos
or
imul
scas
jae
in
cmp
or
dec
xchg
push
adc
inc
pop
pushf
fistpll
cli
adc
and
mov
iret
in
dec
jecxz
jne
sub
add
lods
jbe
ss
adc
lret
sbb
mov
pop
sahf
mov
insl
popa
jg
mov
sub
aam
mov
sahf
sahf
jns
stos
xchg
inc
into
jl
dec
inc
sbb
popa
clc
div
push
cmc
xchg
push
mov
bound
call
mov
es
outsb
lods
lahf
cli
roll
sub
aaa
push
jl
and
fsub
add
jae
ljmp
ljmp
enter
dec
movsl
iret
mov
aam
push
lea
push
imul
and
in
xor
xlat
jae
mov
inc
stc
lret
push
mov
sub
out
mov
sub
lods
mov
fistl
cmp
pop
subl
lahf
loop
and
stos
mov
rolb
cltd
sbb
sub
in
xor
pusha
xchg
int3
iret
push
ljmp
std
pop
testl
mov
gs
jl
jbe
loopne
cmp
push
inc
int
push
rorb
cwtl
scas
mov
pop
mov
iret
mov
cmp
pop
lcall
aam
or
push
dec
stos
add
add
repz
cmpsl
mov
xor
mov
mov
fsubrl
aad
mov
add
incb
xorb
fadd
or
out
fbstp
arpl
sub
fwait
test
mov
or
negb
cmp
fsubrs
xlat
sub
mov
addr16
fcoms
hlt
mov
jo
cld
or
pop
ret
insb
xchg
pop
shr
into
stos
icebp
cmpsb
sbb
add
les
sbb
sbb
push
push
movsl
sub
dec
adc
xor
das
aas
cmc
cmpb
aad
fistps
es
or
jbe
adc
ret
adc
xor
and
jo
jmp
std
testl
cwtl
add
or
cmp
push
jle
mov
in
inc
push
add
movsl
subb
sbb
jnp
test
push
test
iret
in
xchg
pop
outsl
jge
push
hlt
pop
push
add
das
into
pop
jmp
mov
mov
ret
mov
cmc
imul
fs
push
sbb
aam
add
push
jno
dec
cmp
addr16
out
icebp
fcmovnbe
gs
addl
jns
adc
push
shlb
push
pop
out
mov
pop
das
stos
sbb
xchg
add
daa
push
fcoms
dec
mov
sti
add
sbb
iret
sub
fisttpl
fsubs
pop
mov
sti
cmpsb
cmp
mov
pop
das
push
mov
lret
or
push
pop
mov
popa
adc
add
pop
enter
out
lea
xchg
add
jne
adc
repnz
cmp
in
or
sbb
xchg
ret
jge
xchg
xchg
into
inc
jnp
ret
loope
push
mov
cmp
iret
xor
jbe
and
stos
daa
mov
dec
aaa
xchg
sbb
jge
repnz
sub
push
fcomi
cmc
push
fadds
dec
stc
pop
and
mov
sub
push
out
mov
cmc
repz
push
sti
bound
inc
scas
jae
xor
mov
cli
dec
sahf
testb
push
xor
and
xor
dec
sbb
pop
sub
jbe
jo
add
cli
jle
hlt
out
adc
test
roll
test
in
cmp
ud0
xor
imul
lahf
cmp
inc
add
into
insl
stos
mov
movsb
and
dec
inc
mov
mov
or
sbb
xlat
xchg
adc
in
push
in
cmp
les
cmp
out
movsb
push
ret
cmpsb
lret
jns
jg
pusha
inc
cld
pop
lock
pop
mov
lcall
sub
inc
inc
jmp
push
cmp
jl
fwait
inc
stos
out
sbb
or
xchg
push
inc
or
cmpsb
cmp
loopne
leave
mov
and
ljmp
ret
rclb
mov
add
repnz
xlat
das
adc
or
jb
or
aad
sub
add
pop
push
adc
ss
in
or
out
xor
dec
pop
jg
outsb
inc
aaa
adc
adc
inc
or
movsb
dec
ljmp
outsb
xor
ret
stc
cli
rclb
mov
mov
xchg
pop
gs
xor
push
rcrb
jecxz,pn
jno
ja
cmp
dec
and
cwtl
mov
pop
adc
divb
sub
inc
notb
push
mov
and
adc
out
mov
rol
cmpsl
mov
jecxz
ret
cmp
sbb
cltd
xchg
jne
int
test
mov
mov
cwtl
mov
add
sub
xchg
mov
sbb
pushf
xchg
fistl
lds
test
mov
cmpsb
jl
ret
cmp
mov
mov
xchg
adc
ds
and
xor
insl
dec
lods
push
add
pusha
mov
repnz
mov
in
dec
lods
cmc
insl
mov
jns
das
nop
push
xchg
push
sbb
jp
mov
orl
clc
ret
lock
lahf
push
mov
push
imul
ret
and
or
js
dec
call
fldcw
adc
ja
and
subl
mov
cmc
out
cmp
add
pusha
xor
jae
lods
arpl
mov
cmpsb
dec
mov
or
addr16
jl
mov
in
xchg
popa
inc
jns
jle
inc
or
lret
jmp
xor
and
aaa
xchg
rol
lcall
mov
cmp
jle
mov
cmp
aaa
sbb
fincstp
insb
sbb
adc
arpl
loope
test
pop
int3
pop
inc
stos
das
fucomip
out
aam
inc
cmpsb
cmc
sub
or
call
in
sub
nop
out
xchg
out
imul
rclb
testl
or
addb
cmc
mov
and
leave
jae
cld
adc
or
aaa
sub
xor
adc
scas
aam
xchg
bound
mov
push
sbb
ret
mov
push
cmp
push
mov
scas
aas
nop
in
test
mov
xchg
into
fnsave
dec
or
or
cmp
loope
fsub
inc
movsb
pop
jle
loop
lret
inc
fs
xlat
stc
push
aad
xchg
xor
test
pop
cmp
xor
fmulp
cltd
mov
jl
nop
pop
fnstcw
jge
lods
pop
mov
sarl
sbbb
dec
inc
insb
cmp
ret
das
leave
shlb
xor
pop
mov
sub
mov
sbb
and
jo
mov
gs
lock
xor
jmp
les
mov
std
inc
mov
cmp
jnp
jmp
rol
aaa
cmp
pusha
cmp
das
mov
pushf
or
push
out
mov
insl
out
mov
pop
aam
cmc
and
dec
add
mov
mov
jo
and
pop
push
pop
cmp
xor
and
pop
leave
xchg
jl
sbb
enter
add
shld
aaa
lret
es
add
pushf
add
fcmovnu
jmp
pop
rolb
pushf
xor
push
push
inc
xlat
cld
mov
int3
mov
sub
clc
mov
mov
push
or
lds
sbb
or
mov
or
mov
xor
out
and
xor
adc
pop
outsl
pop
mov
or
xchg
push
sub
rclb
test
xchg
std
popf
clc
xor
jecxz
dec
inc
rcll
xlat
leave
xchg
int3
stos
dec
scas
out
in
push
cmp
repnz
add
je
jl
bound
push
outsl
sub
lds
idivl
bound
shll
dec
iret
sub
dec
mov
jnp
movsb
pusha
movsl
sbb
pushf
insb
and
insb
and
mov
idivb
inc
mov
jo
adc
add
mov
adc
inc
jge
sahf
sbb
lret
xorb
dec
scas
mov
call
mov
lret
jge
sbb
out
mov
xchg
pop
in
imul
mov
push
movsl
enter
add
add
push
jmp
add
icebp
mulb
adc
test
jo
inc
scas
xchg
arpl
mov
add
mov
fs
mov
pop
aas
stc
rcll
pop
inc
aad
in
xor
ret
fldl
mov
out
xor
and
push
mov
lock
lds
hlt
add
cmc
and
push
adc
das
stos
mov
xchg
lahf
cmpsb
hlt
arpl
je
stos
dec
dec
roll
test
adc
xor
inc
and
bound
bound
and
in
movswl
leave
cmp
xchg
mov
sub
sub
pop
or
jle
sub
lods
in
xchg
enter
out
imul
mov
mov
iret
sub
pop
rclb
movsb
stc
hlt
mov
loopne
jge,pn
or
test
or
ret
sbb
stos
sbb
ret
push
xchg
xor
add
out
es
loope
dec
jno
out
ret
or
and
repnz
dec
jne
jl
sub
sub
out
mov
repz
mov
push
fiaddl
push
mov
cmpl
jne
iret
aas
cld
stc
inc
clc
adc
test
mov
jle
enter
jne
cmc
xchg
out
insb
addr16
sbb
push
or
das
adc
jg
mov
divb
xor
lods
jbe
fwait
repnz
pop
mov
xor
scas
bound
scas
xchg
loop
out
jge
pop
jle
mov
lcall
out
pushf
cmp
adc
ss
jl
lock
out
sub
mov
aad
or
orb
and
add
stc
pop
fsubrs
mov
lcall
in
xchg
jle
mov
mov
mov
add
rclb
int
dec
fsubr
dec
pop
ret
mov
mov
cmp
xchg
inc
fidivrs
pop
add
daa
add
pop
mov
xchg
mov
and
rolb
iret
mov
sahf
mov
aas
clc
rcrl
dec
lcall
push
and
add
jnp
pop
fcoms
ds
or
repnz
push
test
pop
jg
fisttps
add
xchg
pop
and
je
cmp
adc
outsl
adcl
push
orb
dec
iret
fdivrl
push
in
pop
lret
push
repnz
xchg
lahf
jno
mov
dec
jge
adc
adc
sub
add
mov
push
repnz
loop
sbb
fistl
jne
inc
loop
xchg
dec
notl
lret
cmc
lcall
jg
push
mov
movb
push
xchg
lock
mov
sbb
push
loope
insl
jnp
daa
sub
nop
hlt
sarl
mov
mov
pop
push
cmp
mov
std
mov
jno
jg
mov
imul
out
jo
mov
push
and
inc
jecxz
jp
push
xor
aam
xchg
jbe
stc
xor
inc
ljmp
adc
mov
shrl
pop
es
cltd
dec
mov
jmp
sub
cmp
sbb
test
repz
add
das
repnz
sub
imul
out
xorl
clc
shlb
xlat
stos
push
mov
movsb
pop
cli
dec
cmp
stos
sahf
jge
inc
cmp
leave
mov
loope
push
jae
xchg
xchg
or
xor
pop
scas
in
shlb
cmp
xchg
imul
mov
pop
sti
insb
or
mov
pop
xor
insl
xchg
das
aad
sbb
ja
test
outsl
ja
or
jnp
test
fdivrs
fcoml
mov
int
mov
jle
push
adc
jno
scas
inc
inc
adc
push
pop
movl
jns
or
mov
sbb
sbb
fwait
jbe
jno
mov
jmp
sub
cli
fists
xor
mov
push
mov
mov
cmp
lcall
add
lret
pop
mov
rcr
js
out
push
push
leave
cmp
imul
sbb
sbb
sarb
dec
mov
insb
dec
es
inc
jae
pop
inc
out
jle
std
mov
popa
insb
dec
aam
push
int3
push
push
mov
adc
fisubrs
push
loop
fwait
loop
jmp
sub
dec
push
jne
xchg
ret
fadds
pop
addr16
shll
fidivrs
loopne
dec
loope
pop
test
aad
push
jb
iret
lahf
aad
sbb
jb
mov
or
into
sub
xchg
cmpsb
adc
mov
fiaddl
lret
mov
aad
rorb
ja
lcall
hlt
add
movsb
lret
imul
fmuls
xchg
or
pop
dec
cmpsb
fbstp
cmp
imul
imul
pushl
fidivrs
jb
loop
xchg
cmpsl
cmp
mov
mov
dec
lret
adc
dec
leave
jo
subb
xchg
enter
aaa
inc
cmpsb
pop
cmpsl
cmp
das
pop
cmp
mov
loope
outsb
cwtl
xor
mov
mov
adc
out
push
dec
xchg
sub
xchg
mov
fldenv
ss
push
test
pop
mov
dec
aad
ja
mov
sub
xchg
dec
mov
in
stos
hlt
jg
dec
movsb
scas
popf
mov
mov
xor
lcall
das
sub
xchg
call
repnz
and
popf
sub
test
aam
lret
frstor
jecxz
push
icebp
mov
jns
dec
push
and
cmp
cmp
mov
push
addr16
in
test
mov
xchg
and
shl
sbb
bound
div
iret
cmc
xlat
xlat
push
loope
repz
addr16
sub
and
faddp
push
jg
adcl
jne
inc
dec
jo
jae
push
jmp
mov
arpl
paddsb
xor
in
aaa
jb
xchg
xor
jne
add
enter
imul
pop
jbe
arpl
push
push
mov
insl
xor
divps
cmp
mov
sub
push
test
lds
lret
out
daa
cmp
bound
in
sbb
icebp
mov
testb
lock
mov
xchg
popa
inc
mov
cltd
sbb
in
dec
insb
test
imul
pop
cmp
or
das
jmp
xchg
inc
cmc
adc
fistpll
in
add
inc
xchg
bound
lcall
jnp
imul
lods
push
addr16
sarb
cltd
subl
divb
xchg
fcmovu
call
dec
xor
and
addr16
and
mov
sbb
push
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
or
mov
outsb
.byte
fs
xchg
mov
ja
cmp
mov
es
push
mov
add
add
add
add
and
add
inc
add
addb
add
add
add
pop
add
addb
add
jo
add
add
add
rolb
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
rolb
add
add
dec
pop
add
add
add
add
add
fiadds
add
add
add
add
push
add
dec
add
dec
add
sub
add
adc
add
and
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
pusha
pop
add
inc
add
add
add
add
add
addb
add
roll
addl
add
loopne
add
clc
push
add
inc
add
sub
add
and
add
inc
add
add
add
add
rol
lock
js
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
clc
ud0
rolb
filds
add
filds
add
add
aas
in
add
pop
call
add
add
add
push
add
add
add
add
add
psubb
rorb
add
pop
cld
add
pop
incb
add
incl
add
addb
inc
add
clc
pxor
push
out
cld
pop
incl
add
add
add
adc
add
add
add
add
add
and
incl
add
or
test
add
add
add
add
dec
ret
popa
push
xlat
data16
cltd
add
ficoml
or
cmp
mov
mov
sti
rol
or
loopne
xchg
add
dec
jle
adc
xor
hlt
pop
jmp
loopw
jmp
dec
test
ret
mov
jmp
shrb
adcl
pop
push
test
sub
xchg
repnz
adc
pop
mov
lcall
stc
push
iret
xchg
xchg
mov
popf
xchg
or
icebp
jl
cmp
imul
mov
and
jbe
aaa
lret
pusha
or
xchg
hlt
xor
or
and
cmc
xchg
inc
rclb
outsb
pop
mov
inc
imul
inc
clc
xchg
popa
ljmp
pop
inc
sar
insb
sar
jae
pop
xchg
shrl
scas
pop
loopne
aaa
or
and
hlt
aas
mov
sbb
popf
fldenv
insl
inc
stos
lea
popf
jb
mov
pop
pop
in
adc
jle
adc
mov
mov
cmp
inc
dec
pminsw
stos
jmp
mov
pop
xchg
in
xor
cwtl
insl
lcall
bound
ljmp
jge
insl
es
add
inc
stc
iret
cmp
mov
fistpl
mov
mov
dec
inc
js
mov
sbb
jmp
test
pop
mov
cmp
mov
adc
jecxz
mov
jno
xchg
push
push
dec
lods
sbb
jp
pop
arpl
outsl
mov
pop
les
mov
xchg
fwait
dec
lea
sub
jg
cltd
cmp
je
loopne
std
into
leave
dec
xor
insb
mov
iret
mov
daa
in
pop
mov
dec
cmpsb
sbb
jo
cmc
scas
or
cmp
xlat
sub
lea
mov
mov
addr16
es
jne
cmp
mov
ret
push
mov
inc
shl
lret
inc
hlt
cli
lret
loopne
inc
mov
push
insl
inc
lret
add
test
lcall
dec
test
xchg
aad
shrl
les
push
xchg
clc
or
mov
fdivl
mov
cld
pop
pop
cltd
jns
in
or
popa
outsb
sub
xor
rorl
push
call
add
arpl
cmp
lret
sbb
mov
ja
pop
push
cmpsb
pushf
jg
scas
jnp
and
insl
sub
xchg
jbe
andb
xor
cmp
das
ss
call
je,pt
xchg
and
arpl
add
jb
cmp
call
mov
add
push
add
inc
xchg
mov
cwtl
xchg
push
hlt
inc
shll
xor
jp
repnz
mov
cmp
mov
ja
in
mov
or
pop
pop
add
pop
adc
pushw
test
out
shrl
fisttps
adc
scas
xor
int3
push
pop
scas
iret
xlat
sub
lods
std
jnp
or
stos
add
xchg
pushf
sub
imul
push
pop
lea
mov
cmp
into
ret
shlb
mov
test
lods
test
loop
xchg
jae
jle
ret
mov
data16
dec
xchg
popf
mov
clc
mov
fdivl
jbe
lcall
xchg
pop
test
add
xchg
lods
inc
fwait
outsb
cmpsb
imul
cld
jnp
jmp
mov
push
push
or
test
js
imul
mov
out
insb
sbb
mov
mov
or
sar
push
loopne
and
xor
dec
and
addb
mov
scas
lods
or
es
jge
es
ret
push
jae
ss
ss
xchg
push
jmpw
fimull
cmp
lcall
repnz
out
push
orb
and
sub
adc
ret
xor
cli
mov
adc
out
enter
mov
pop
or
push
stos
add
jns
mov
xchg
and
negl
jl
xor
aaa
push
jns
aas
sub
mov
sub
out
xchg
push
fcom
stos
and
mov
or
jno
lret
scas
fs
inc
cwtl
rcrl
xor
xchg
push
jne
inc
test
inc
jge
push
push
int
and
nop
ja
aas
out
dec
add
pushf
arpl
and
push
fwait
xlat
sub
push
insb
scas
mov
jno
nop
jb
scas
pop
cmc
mov
cltd
clc
jns
xor
scas
push
xorb
xor
pop
repnz
mov
add
into
jl
test
inc
scas
and
mov
inc
das
loop
xchg
das
xchg
push
cmc
leave
jo
mov
mov
fistpll
inc
cmp
out
push
popf
dec
adc
out
lahf
popf
lea
sbb
and
shlb
jg
dec
addr16
add
xor
adc
cld
in
add
ret
fidivrs
xor
lret
addb
gs
mov
cmp
loopne
mov
cmp
hlt
sbb
aad
push
pop
dec
jae
sub
mov
sbb
mov
jno
arpl
in
cli
jmp
cmp
jmp
xchg
popaw
popl
xor
fcoml
lret
data16
mov
push
adc
aad
movsl
push
dec
orb
in
lcall
and
or
loopne
je
jl
orb
out
lods
xchg
jg
mov
mov
in
cmp
dec
imul
or
xor
es
and
push
sub
hlt
insb
mov
fmuls
outsb
loopne
add
adc
push
sbb
adc
fs
mov
mov
lods
mov
inc
outsb
sbb
sbb
pop
mov
jns
sti
mov
jp
movsl
mov
sbb
aas
and
jno
adc
cmp
out
xchg
nop
adc
shll
aam
jbe
dec
popa
mov
jns
inc
mov
push
in
push
ds
xchg
inc
add
mov
pop
int3
movsl
out
sti
clc
das
arpl
aaa
adc
mov
adc
xlat
movl
int3
cmc
clc
stos
hlt
cmpsl
fwait
cmp
js
in
lods
sti
cmpsl
cmp
mov
scas
icebp
movsb
mov
repnz
lret
add
mov
mov
cld
scas
inc
int
or
pop
mov
icebp
xor
add
subl
popf
dec
lea
mul
movb
rcrb
icebp
test
adc
ja
lods
dec
push
xorl
or
das
imul
xor
add
adc
arpl
sahf
add
cmpsb
add
pop
mov
dec
mov
sbb
jg
xchg
add
push
lret
ficoml
sbb
xchg
adc
addb
fst
push
cwtl
jl
mov
cmpsb
fwait
and
test
nop
push
ja
sbb
push
stc
sbb
push
add
and
mov
sbb
sub
push
cmp
lcall
outsb
ja
mov
push
ficoml
cltd
push
divl
mov
push
adc
scas
adc
ljmp
rol
clc
xor
addr16
sub
scas
adc
pop
pop
lods
mov
push
adc
xchg
push
mov
jp
push
lret
dec
jmp
jl
sbb
mov
mov
dec
adc
xor
cmp
aaa
mov
out
push
xchg
and
add
mull
stc
in
sbb
test
xor
fdivs
iret
jns
adc
and
and
dec
adcb
stos
mov
loopne
mov
lret
and
add
jmp
sbb
cli
in
scas
inc
adc
xor
mov
sbb
xchg
imul
or
dec
adc
xchg
roll
mov
ret
js
mov
mov
mov
or
std
xchg
push
data16
dec
adc
scas
inc
mov
pop
test
sub
xchg
test
mov
insl
iret
xor
cs
jnp
int3
cmp
jne
pop
sub
les
btr
daa
call
imul
inc
or
cmpsl
xor
inc
in
jmp
repz
dec
xor
fisubrl
loope
shl
push
dec
nop
lret
and
xchg
cltd
push
push
gs
and
std
stc
int
cmp
mov
jbe
stos
or
mov
pusha
and
jo
fwait
and
xor
icebp
cltd
enter
outsb
sbb
mov
loop
dec
fcoml
aaa
pusha
cmpsb
push
aas
aas
inc
into
jge
lcall
outsb
pop
mov
jp
testb
jl
push
push
mov
imul
or
scas
sub
idivb
fistps
fistpll
mov
cld
pop
adc
scas
cmp
cltd
cmc
push
aam
test
pop
cmp
jne
cltd
cld
clc
add
adc
lret
mov
mov
and
jb
shrb
push
mov
gs
fldcw
repz
mov
mov
mov
add
and
xchg
xchg
jecxz
push
inc
test
jmp
push
and
xchg
int3
xchg
leave
jo
je
push
and
jl
dec
or
push
nop
or
sub
mov
sahf
cli
cmpsl
mov
xchg
xchg
adc
movsb
inc
cltd
jmp
inc
mov
daa
lcall
inc
mov
add
adc
out
lock
pusha
icebp
idiv
mov
cmpsb
xlat
xchg
jg
in
popf
pop
push
insb
lock
cmc
fcomps
pop
adc
pop
adc
xor
or
pop
mov
mov
mov
cmp
ljmp
pop
fidivrl
mov
std
cmp
pop
or
inc
jne
push
adc
sahf
sub
ret
jb
ret
pop
mov
movsb
arpl
popa
and
or
adc
inc
mov
subb
jo
shrl
cmc
test
pop
sbb
jae
popf
push
and
shlb
jg
sbb
pop
cld
rcr
dec
iret
dec
addr16
push
or
loopne
popf
repz
or
pop
dec
mov
bound
loop
pop
and
ret
dec
mov
mov
push
xor
negl
and
adc
mov
and
scas
pop
aad
inc
add
popf
xchg
jnp
lahf
sarb
clc
sbb
cmc
inc
xchg
lar
xlat
add
movsb
int3
test
mov
mov
cltd
hlt
imul
xor
pop
cmp
xchg
cltd
mov
shl
push
out
and
sub
into
inc
xor
dec
loopne
mov
pop
push
mov
call
out
push
mov
mov
xchg
push
sbb
cmp
push
mov
iret
push
out
pop
mov
scas
mov
push
insb
jae
rcl
cmpsl
jbe
lcall
or
fsts
adc
mulb
fistps
test
imul
push
imul
mov
jle
sahf
aas
jmp
mov
inc
mov
jmp
in
jmp
fnstcw
sub
inc
ret
testl
xor
repnz
cmpsb
scas
pop
fidivs
xchg
inc
inc
mov
adc
aam
ret
cmp
and
pushf
sub
mov
cmp
loope
js
in
adc
push
add
inc
mov
enter
push
dec
cmpsl
adc
dec
push
sti
sahf
inc
add
dec
mov
scas
ret
mov
cld
and
inc
jge
xlat
jnp
nop
dec
mov
es
rorb
aam
shlb
aam
mov
mov
aas
repz
stc
xchg
or
and
fstps
mov
dec
or
mov
cli
mov
enter
cmp
xor
pop
dec
in
push
sbb
dec
sbbb
orb
xor
out
xchg
faddl
adc
inc
dec
rcrb
cmp
dec
sti
loope
xor
sarl
and
stc
lahf
pop
lods
jp
bound
lea
or
leave
cld
jno
xchg
stos
mov
adc
and
je
sub
push
sub
dec
call
and
mov
push
push
cld
dec
pop
stos
pop
xor
sti
aas
adc
xor
xchg
jns
push
xor
xchg
xor
lods
inc
inc
bound
push
xchg
sub
out
int3
jecxz
pop
mov
mov
pop
dec
mov
test
pop
cmpsl
fwait
cmp
sbb
push
sub
das
xor
mov
mov
loopne
push
cmc
xchg
and
pop
inc
scas
lcall
and
sub
lret
and
movsb
pop
mov
loope
mov
xchg
push
sbb
add
imul
and
or
xor
mov
or
jle
xor
xchg
int
or
fmul
int
cwtl
test
fiaddl
dec
add
popa
lods
mov
jno
sahf
sub
popf
test
in
repz
xlat
fnstenv
cmc
jns
xchg
push
pop
insb
in
sub
out
in
imul
xor
and
test
test
in
aam
pop
or
das
mulb
lods
sahf
popa
pop
es
outsb
dec
not
mov
xchg
pop
test
mov
add
xchg
push
dec
and
das
sbb
sbb
inc
inc
cli
imul
dec
push
cmpsb
jbe
pop
iretw
jno
test
inc
mov
loopne
add
into
stc
sbb
cmp
es
jmp
or
popa
enter
imul
hlt
in
sti
out
push
imul
sbb
pusha
cmp
mov
call
adc
jg
xchg
sbb
and
jge
test
fistpl
test
stos
andb
xlat
popf
lcall
cmp
mov
mov
push
jl
lcall
mov
repz
sbb
pop
cmpsb
sahf
cmp
or
shrl
jo
sub
shll
push
or
inc
cmp
mov
repz
cs
arpl
pusha
xchg
push
pop
xchg
jmp
iret
xor
push
inc
pushf
push
loopne
jl
mov
mov
mov
sti
sub
mov
data16
mov
test
xchg
adc
dec
pop
dec
mov
jmp
cld
push
and
pop
sbb
pop
ret
inc
sbb
sti
rolb
jge
pop
push
dec
mov
xor
out
scas
jge
bound
sarb
sbb
jge
out
lds
loope
cltd
clc
cmp
int
cmpsl
mov
mov
aaa
cmp
insb
addl
test
lea
movsb
mov
xchg
stos
mov
pop
stos
iret
pop
in
ljmp
ljmp
add
test
imul
rcrl
mov
pop
rcl
and
inc
dec
inc
push
inc
in
jle
das
mov
fsub
rcr
imul
mov
sub
jl
lea
ror
xorb
std
js
call
sub
fmull
ret
jbe
nop
adc
push
mov
sbb
and
loopne
leave
out
cmp
xchg
xchg
stc
mov
mov
mov
pop
out
fdivl
adc
mov
sub
in
mov
loop
xchg
push
fnsave
pop
lock
iret
mov
pop
call
mov
fists
outsl
pushf
int3
xchg
jo
pop
mov
xchg
out
jl
mov
jae
test
loopne
leave
mov
jl
cmpsl
inc
sub
out
or
repnz
popa
dec
dec
shlb
lock
into
in
cld
cmpb
ficoms
test
inc
xor
mov
mov
pushl
aas
in
ret
int3
sub
adc
gs
mov
inc
push
add
nop
add
outsb
fs
push
out
mov
insl
fmuls
xchg
jp
fsubl
hlt
xor
in
lea
cwtl
pop
sbb
cltd
mov
sub
xchg
scas
adc
fwait
inc
clc
sarb
icebp
sahf
jnp
loopne
or
mov
sbb
jmp
imul
jecxz
shrl
shll
fldt
ret
or
rcr
jg
jge
arpl
loop
xchg
push
push
cmpl
dec
sub
fisttpl
cld
inc
test
les
lods
andb
int
dec
cmpsb
mov
cmp
push
sbbb
pushf
cmp
mov
out
jno
cmpsl
or
xor
and
dec
out
cmp
mov
sub
add
shrb
scas
sbb
and
add
inc
lock
cwtl
test
cmp
xchg
and
push
out
nop
and
insb
test
sub
lods
lods
fistl
adc
les
xor
xchg
scas
scas
adc
mov
inc
pop
push
push
pusha
idivb
cmp
mov
repz
iret
call
push
dec
popf
rcrl
aad
mov
pop
inc
out
aam
mov
dec
aas
inc
data16
rcr
jmp
into
fwait
es
cmp
mov
dec
out
and
sbb
out
lea
mov
and
sti
sbb
sub
imul
lret
and
mov
lock
popf
mov
out
jmp
xchg
lock
nop
adc
add
mul
call
dec
add
or
dec
push
mov
jp
cs
cmp
inc
jne
shlb
test
push
pop
cmp
neg
daa
xchg
add
cs
lea
mov
lret
cli
jnp
testb
or
shl
xchg
adc
in
mov
mov
call
and
sbb
cmp
xor
push
hlt
divb
ret
cmpl
xchg
fcom
and
push
pop
push
out
fs
fs
or
dec
rcll
jne
ja
xor
and
mov
enter
inc
mov
lret
xor
nop
and
pop
jg
push
aam
fcomps
aas
fdivrl
jl
push
fdivs
mov
scas
syscall
cmp
out
mov
or
xchg
push
mov
shlb
fwait
nop
fisubl
shlb
int
incl
jne
int3
fstpt
orl
data16
imul
in
ljmp
add
xor
push
cmp
subl
xchg
mov
das
xlat
or
hlt
ret
mov
mov
or
jge
test
movsl
mov
loopne
xchg
jb
and
pushf
sub
pushf
push
or
xchg
ficompl
push
adc
mov
lock
popf
sub
aad
aam
notl
jl
and
iret
cmp
lods
push
add
sbbb
push
xor
and
out
cmc
dec
adc
movsl
outsb
push
jg
jno
sbb
mov
aas
adc
mov
addr16
push
fidivs
lods
mov
pushf
enter
mov
out
pop
jno
decl
ja
xchg
pop
jnp
sbb
add
loopne
adcb
lret
mov
mov
int
lods
das
pop
add
scas
loope
push
fcom
aad
lea
stos
inc
int
xchg
mov
cmp
or
mov
pop
dec
in
inc
xor
pop
inc
cmp
push
dec
jns
ss
or
jmp
xor
jb
jg
mov
ja
cmp
fists
xor
adc
sbb
xchg
push
xchg
xor
sbb
inc
add
sbb
push
in
push
sub
and
pop
out
leave
int
sbb
push
mov
sub
insb
jae
sti
subb
lret
and
mov
cmc
jle
sub
cltd
xchg
pop
and
leave
push
sub
dec
enter
cmpsb
adc
adc
lds
xor
mov
test
in
or
jns
and
mov
adc
das
popa
mov
flds
pop
out
jnp
les
notb
imul
jl
outsb
pop
jno
xchg
jg
les
pop
ficoms
mov
out
inc
je
dec
sbb
dec
rcrl
cltd
mov
cmp
dec
pop
outsb
pop
subb
cmp
mov
cltd
shl
cmpsl
xor
sub
pop
call
add
jne
mov
jbe
aaa
xlat
jns
or
daa
es
cmp
icebp
adc
cmp
xchg
int
movsb
or
into
aad
adc
faddl
cs
das
xor
movsl
mov
xor
aaa
xchg
add
pop
out
xchg
mov
pusha
xchg
jae
cmp
jbe
push
pop
ficomps
repnz
dec
stos
stc
pop
cld
fstpt
std
ud1
mov
out
fcompl
lea
sbb
aam
fisttpl
jle
add
loope
mov
push
adc
sbb
mov
pop
and
mov
push
jmp
mov
pop
ss
outsb
pusha
push
roll
lahf
movsb
sbb
outsb
jp
jge
inc
push
sbb
loop
mov
dec
or
add
loopne
xchg
pushf
or
ror
movsb
insl
popf
add
int3
ljmp
mov
ds
or
mov
clc
movq
int
fwait
inc
sbb
mov
imul
inc
sub
pop
cmp
cs
ja
adc
insb
inc
cmp
repnz
roll
or
mov
addr16
mov
pop
ljmp
aaa
jl
fsubrl
cmp
add
or
push
jno
push
das
insl
popa
xchg
mov
shr
adc
mov
icebp
out
jo
loopne
or
sub
lret
test
adc
mov
cli
jle
mov
xchg
add
mov
or
jbe
lret
inc
repnz
xor
or
inc
sbb
iret
and
mov
xor
lods
cwtl
xchg
dec
sub
shrl
push
xchg
add
sbb
int
sbb
push
loop
mov
mov
adc
add
sarl
xchg
sti
adc
xor
hlt
lcall
mov
xor
ds
sub
fistl
subb
mov
push
cmp
dec
call
loope
add
std
stos
xchg
mov
sbb
ror
loope
push
and
dec
jne
lahf
xlat
roll
mov
cld
pop
inc
cs
jge
pop
fnsave
dec
and
pop
shlb
mov
pop
sub
cmp
addr16
lcall
push
push
mov
xchg
out
sbb
dec
push
ret
pop
sbb
in
ret
in
xor
jns
mov
inc
stos
pop
pop
incb
out
aaa
or
mov
faddl
lods
push
cltd
add
pmaddwd
or
popa
into
push
jg
cmpsl
mov
lret
jbe
daa
lret
in
ret
jno
pop
xchg
mov
cmpb
lahf
cs
cli
xor
aad
into
test
sar
scas
sub
ret
or
shl
push
insb
aaa
divl
sti
shrb
ret
and
lock
jo
cmp
push
mov
sbb
ljmp
mov
bound
fdivrl
or
les
sarb
clc
loopne
fistpl
mov
or
mov
lret
sbb
test
int3
pop
lret
jge
ficompl
mov
lods
inc
decl
mov
dec
loop
jg
cmpl
ds
sbb
xor
dec
add
add
jg
lahf
lahf
jnp
icebp
js
mov
pop
mov
jl
dec
adc
or
int3
pop
pop
mov
testb
leave
in
pop
cmp
imul
inc
mov
jns
or
rcrl
push
mov
dec
and
insl
in
mov
insb
les
add
push
jg
mov
sub
push
out
imul
jl
push
in
adc
enter
ljmp
jns
ret
xor
jns
jne
sti
mov
push
ds
mov
jecxz
addr16
sub
mov
aas
inc
jp
cwtl
into
adc
mov
jbe
cli
or
mulb
mov
test
cltd
fnclex
das
mov
lods
mov
mov
inc
fwait
aam
jo
xlat
mov
mov
dec
aad
jb
int3
jne
mov
inc
rcl
loope
mov
andb
pushf
mov
sbb
fsts
and
sub
push
cld
mov
cli
cmpsb
jo
adc
in
or
aas
add
fidivl
es
jmp
sbb
fwait
bound
bnd
mov
add
add
js
movsl
les
ret
negb
sub
ss
outsb
imul
pushl
hlt
leave
loope
int3
sub
sbb
sub
cld
test
into
andl
cmp
clc
push
mov
jmp
mov
pop
or
xchg
push
insb
stos
shrb
aas
push
mov
inc
pop
jo
sub
ficoml
or
and
cmpl
xor
mov
insl
clc
or
inc
movsb
dec
xchg
xor
mov
pop
sub
repz
cld
cmpsl
fnstsw
jecxz
jp
inc
add
test
ret
insl
sbb
ret
xchg
outsb
out
and
pop
sbb
andl
in
iret
and
xchg
jle
dec
aaa
jge
enter
ja
xchg
imul
lahf
adc
gs
pop
mov
lods
mov
je
lcall
fmul
sub
inc
sbb
pop
add
adc
cwtl
mov
mov
mov
jg
inc
call
nop
outsl
push
lret
mov
out
cs
in
lret
sbb
mov
fsts
mov
imul
test
inc
fisubrs
in
cmpsl
and
mov
xchg
sub
and
add
loop
stos
rcll
fdivrl
cmp
xchg
dec
ljmp
sbb
scas
push
stos
aas
xor
outsl
sub
dec
pop
outsl
mov
out
and
or
push
lret
out
dec
add
push
scas
and
fdivs
sbb
gs
adc
push
int3
cmp
and
inc
add
jae
xlat
inc
leave
lret
mov
cmpsb
adc
adcl
mov
in
and
scas
mov
sbb
mov
push
std
mov
jecxz
or
cmp
push
adc
push
adcl
and
dec
sub
sbb
movsb
mov
pop
ficoms
call
sub
adc
add
mov
mov
dec
inc
cmp
sub
mov
jle
rolb
or
pushf
dec
in
repz
push
std
cmp
fs
ret
jae
loop
gs
xor
inc
or
subl
sahf
sbb
lret
mov
mov
sbb
pop
bound
out
dec
push
sbb
dec
rcrl
cld
imul
mov
jae
sarl
in
mov
xor
pusha
pop
pop
punpcklbw
push
dec
or
repz
ss
cltd
mov
fs
roll
push
scas
xor
sub
sub
mov
pop
enter
rorl
movsb
cmp
dec
pop
mov
cmp
dec
pop
lods
mov
roll
addb
sbb
mov
push
ret
mov
mov
es
mov
inc
movsb
xchg
mov
jbe
sbb
xchg
andb
xchg
or
sbb
pop
jp
dec
jl
add
in
jns
loope
ret
movb
mov
dec
dec
sub
lret
test
jns
cmpsl
aad
mov
arpl
insl
dec
dec
or
in
or
sub
clc
jae
xlat
mov
cmpsb
mov
jp
cmpsb
pop
dec
lcall
insb
test
shll
cmp
mov
fadds
rclb
mov
loope
mov
lock
es
je
mov
pop
js
popa
ds
pop
pop
mov
inc
xchg
movsl
add
orb
push
sbb
idivb
xchg
loopne
movsl
cmp
cmp
or
mov
jno
loopne
dec
push
ja
push
out
pop
mov
outsb
dec
ljmp
fmuls
ficomps
orb
adc
inc
xor
out
scas
fistps
test
dec
add
bound
cmp
pop
inc
sbb
pop
cs
leave
jns
mov
mov
loop
cmp
mov
sub
push
push
inc
test
jo
jp
repnz
and
in
stos
or
jge
ds
xchg
adc
fdivs
or
loop
in
pop
push
fs
cltd
mov
mov
mov
sub
jecxz
stc
push
push
inc
icebp
pop
sub
and
adc
cmp
pop
dec
cmp
sub
pusha
ret
mov
mov
push
xor
jge
inc
mov
shll
jns
sub
in
mov
push
out
imul
rcr
lods
cmp
adc
mov
inc
test
add
fistpl
sbb
fcmovb
scas
in
out
mov
and
push
comiss
add
mulb
rcrl
cmp
insl
mov
fnsave
movsl
xorl
mov
out
daa
fsub
test
or
xor
xor
inc
cwtl
idivl
aad
cwtl
fstl
shll
mov
loop
std
xchg
fdivrs
dec
mov
mov
nop
insb
jecxz
je
push
bound
pop
xchg
aad
mov
jl
sub
inc
mov
mov
lahf
sub
or
bswap
sahf
mov
ss
add
fisubs
lcall
and
enter
mov
xor
lret
fcmove
sub
cmp
insb
enter
loopne
xchg
outsb
push
xchg
cld
mov
mov
enter
push
add
nop
aas
outsl
push
jns
aad
call
add
fcmovb
scas
jo
adc
loopne
stc
mov
pop
repz
jmp
aas
push
cli
icebp
xchg
cli
add
xchg
mov
fdivs
xchg
iret
in
or
es
xchg
lods
fsts
lds
mov
cmp
cmpsb
dec
mov
repz
fnstsw
lahf
andb
jge
mov
pushw
inc
mov
fsubrl
xchg
sub
jne
or
hlt
dec
add
mov
lret
inc
sub
jle
mov
mov
mov
lahf
xchg
lods
cmp
lret
movsl
mov
fmul
fdiv
cltd
pop
add
or
jmp
sbb
sbb
mov
adc
jns
push
arpl
and
bound
sub
inc
inc
add
push
mov
clc
call
adc
push
mov
and
das
xor
adc
add
iret
mov
rolb
push
sbb
jne
loopne
sbb
lret
jg
stos
dec
faddp
pop
ljmp
pushf
stos
sbb
dec
and
sti
cmp
push
lds
jg
add
popf
sarb
jmp
aam
loopne
repnz
lret
mov
lahf
push
orl
lock
cli
pop
faddl
mov
rclb
fdiv
int
push
inc
ss
andl
mov
mov
jmp
mov
cmp
push
lock
push
xchg
call
aaa
jg
insl
sbb
xchg
xchg
insl
lret
scas
adc
cmc
cmpsl
push
pop
mov
pop
mov
jle
repnz
cwtl
adc
or
ds
push
fisubl
andl
jo
es
push
aas
stos
mov
add
rorl
mov
movsb
jnp
cmp
in
test
mov
sbb
inc
pop
pop
pop
sbb
mov
fwait
cmp
jnp
clc
pusha
push
mov
xchg
lahf
adcl
adc
popf
and
cs
cmp
mov
mov
das
jl
popa
sbb
xchg
adc
pop
out
cmc
mov
lcall
mov
mov
cmpl
ja
lret
gs
mov
addr16
pusha
push
dec
mov
or
jne
dec
xor
mov
sarl
mov
jbe
mov
adc
mov
cmp
xor
in
ret
push
pop
sahf
rorl
out
pop
pop
int
int
add
xor
movsl
rcrl
jmp
cltd
insl
ljmp
xor
dec
loopne
shl
scas
sahf
jbe
ja
lret
in
lcall
repz
je
jne
outsb
icebp
inc
into
fwait
std
xchg
xor
sub
out
xor
icebp
es
add
mov
pop
dec
call
cmp
mov
je
pushf
data16
test
mov
pusha
lods
add
xor
push
add
or
and
adc
sahf
adc
aas
mov
int
cmpsb
sub
push
testb
or
mov
or
sub
fs
jnp
mov
jo
or
fidivl
sbb
mov
cmp
cltd
lcall
ficompl
add
aaa
test
mov
in
mov
or
cmp
cs
clc
test
xchg
out
mov
mov
ljmp
call
cli
ljmp
pop
sub
dec
test
xchg
test
test
xor
sub
pop
sub
test
cmp
ds
push
imul
push
pop
pop
mov
mov
and
popf
insb
int3
scas
sbb
sahf
mov
fisttps
push
sub
mov
rcrl
sarb
add
adc
popa
fstl
pop
pop
mov
jg
mov
jnp
leave
jmp
dec
jns
inc
inc
pop
scas
cmp
stc
out
and
daa
push
fstpl
test
xor
ljmp
jle
xchg
repz
cltd
ror
sub
cmp
inc
xchg
adc
sarb
jo
mov
xorb
xlat
outsl
sub
push
adc
fucom
dec
xchg
mov
push
pop
lahf
cmp
in
add
std
movsb
icebp
fmull
sarl
dec
movsb
mov
cli
fcoms
fabs
jmp
ret
sarl
dec
lahf
test
push
pop
imul
push
test
pushl
loopne
enter
test
clc
inc
inc
or
repz
mov
adc
das
xor
mov
movsb
es
imul
dec
xchg
shll
cli
xor
mov
testl
fstpt
insl
test
push
inc
jno
inc
and
xchg
pop
adc
and
xor
mov
lret
loopne
pop
lcall
push
cmp
dec
xor
repnz
lea
cmpsl
adc
mov
in
jb
add
pop
dec
into
xchg
mov
xchg
aam
das
shlb
push
movsl
mov
mov
ljmp
or
aas
fnstcw
loopne
mov
sbb
idivb
dec
mov
sub
mov
mov
sbb
sub
bound
push
pop
sub
sbb
outsl
jns
jae
push
dec
in
mov
lods
add
scas
movsb
cltd
cmpsb
test
idiv
sbb
sbb
rcrb
aaa
xor
xlat
mov
sbb
in
sub
push
fwait
mov
std
lahf
aad
fildll
jl
std
cmpsb
mov
bound
xchg
cmp
jg
dec
cmp
test
aad
sbb
cmpl
int3
andb
cmp
pop
mov
js
inc
shlb
add
add
push
aad
add
xchg
jo
pop
inc
jnp
jg
cmpsb
jg
inc
push
lret
outsb
repnz
push
adc
mov
xlat
fisubs
lret
imul
xchg
icebp
pop
xchg
mov
rcl
faddl
cmpsb
mov
cmp
popa
push
pusha
adc
push
or
cmp
stc
fldcw
lock
loop
ficoml
jp
push
popf
jmp
mov
popf
inc
xchg
xchg
loopne
inc
pop
cmp
jmp
mov
add
pop
bound
mov
xor
pop
bound
and
gs
sti
decb
sahf
cld
mov
std
test
out
jnp
dec
out
pop
inc
je
ficoms
pop
imul
or
xchg
dec
or
shll
jo
sub
js
mov
or
pushf
inc
mov
dec
loopne
flds
je
movsl
sub
mov
into
fwait
negb
in
push
in
pop
rorl
mov
int3
gs
sbb
fisubl
inc
and
nop
outsb
xchg
cmc
stos
insb
add
lock
add
dec
sub
sbb
out
add
xor
pop
push
mov
inc
lret
mov
dec
je
push
ficomps
outsl
pop
pop
cmp
push
int
pop
sahf
mov
cld
push
ds
jne
xchg
das
cmpsl
pop
sahf
nop
loop
jno
fcmovbe
xchg
add
xor
push
lret
mov
leave
or
lret
jae
inc
loopne
xor
test
fidivl
mov
xor
pop
and
and
js
aas
mov
jl
mov
lcall
xorl
and
fsts
in
jnp
dec
fisubl
inc
and
sub
outsl
mov
jbe
inc
inc
cmp
ss
inc
push
mov
jl
lret
sahf
jecxz
dec
das
pop
add
lret
mov
mov
pop
jnp
xchg
mov
mov
adc
ds
pop
mov
test
pop
cld
icebp
jbe
dec
imul
cld
addr16
mov
test
push
push
push
stos
xor
mov
loop
aad
fadds
jl
call
jle
jns
insb
or
popa
or
adc
and
sub
or
lcall
push
push
std
cmp
sbb
out
dec
sub
or
mov
jle
mov
cmp
jo
pop
testb
stos
pop
or
je
inc
cwtl
sub
xchg
inc
movsb
fldl
pop
adc
lret
out
ljmp
lods
add
lret
sar
mov
shll
mov
loopew
or
fisttpl
jno
std
movsl
cmc
mov
pop
leave
pop
push
sub
or
sarb
sbb
out
lods
push
outsb
mov
inc
cmpsl
int
loopne
mov
cwtl
cmp
or
jmp
pop
std
mov
jl
and
int3
mov
shll
pop
xchg
clc
sub
push
sub
fwait
sahf
push
fdivrl
mov
mov
movsl
inc
inc
cli
mov
jp
out
mov
stc
mov
mov
jl
and
mov
insl
sbb
mov
push
sbb
in
jge
mov
jbe
movsl
fs
lods
mov
mov
lock
xchg
add
mov
fucomi
aam
shll
sub
lret
addr16
and
jl
ret
je
inc
dec
int
scas
clc
pop
xor
out
push
inc
push
jmp
sti
jbe
into
es
jne
cwtl
sub
fdivrs
lods
pop
pop
jge
xchg
movsb
pop
add
and
xchg
rcrb
push
roll
gs
add
loop
loop
fs
ret
movsl
mov
jl
xorb
cmp
cwtl
out
icebp
ds
pop
pop
xchg
les
mov
data16
stos
add
jo
leave
or
data16
lahf
sub
cmp
pusha
mov
or
jb
mov
fs
outsl
xlat
gs
xchg
jecxz
mov
fsubs
mov
add
dec
jns
adc
ror
rcrb
orb
negl
mov
cltd
andb
lock
pop
lock
pop
test
call
popa
mov
rolb
popf
mov
jbe
mov
push
sub
push
dec
jle
pop
cmc
decb
ja
cmp
in
mov
push
test
jg
js
jmp
mov
jg
lock
fldenv
mov
mov
xor
mov
pop
xchg
popa
scas
mov
in
clc
rep
mov
rol
pop
subl
std
mov
xor
mov
movsb
lock
jbe
push
std
xlat
std
cmpsl
outsl
pop
cli
outsl
out
cs
fbstp
in
std
fsubs
push
pusha
mov
mov
dec
nop
pavgw
dec
push
fidivs
jp
xchg
or
sub
call
cmpsb
and
movl
arpl
mov
xchg
arpl
mov
or
popa
sbb
mov
jnp
dec
out
in
in
push
cmp
xor
fbstp
jmp
pop
ficomps
xor
jge
incl
add
gs
addr16
repz
test
addr16
mov
pop
rcl
cmpsb
aad
pop
cwtl
mov
dec
aad
ret
arpl
jne
mov
and
push
push
sbb
adc
imul
mov
cmpsb
shrl
andb
or
dec
insl
mov
and
jnp
shl
add
je
add
jo
inc
repz
jb
dec
sub
xchg
dec
mov
dec
mov
jmp
mov
cmp
sub
mov
add
adc
dec
sub
es
pop
cltd
jmp
test
jnp
mov
movsl
jle
ds
rcl
jecxz
and
jns
mov
mov
push
xchg
repnz
sahf
sub
dec
xchg
mov
jp
sbb
cmp
mov
repz
in
and
dec
adc
cmp
sub
jo
or
test
sbb
dec
and
gs
or
pop
cmpsl
dec
pop
inc
lahf
aad
notl
add
pop
call
push
cmp
mov
inc
stos
push
pop
sti
es
inc
add
jmp
in
cld
inc
inc
test
clc
jnp
mov
add
push
pop
sub
nop
imulb
mov
cmp
scas
call
add
lret
push
jecxz
lods
cmc
jl
fisubrs
xchg
pop
inc
inc
in
lcall
dec
imul
nop
int3
movsb
test
mov
add
cwtl
std
mov
loop
hlt
sbb
ss
cld
adc
inc
pop
aad
ret
enter
mov
inc
daa
add
mov
adc
jl
sti
pop
pop
daa
jo
je
ss
xchg
sbb
xchg
test
mov
pop
cli
xchg
mov
arpl
rclb
xchg
sbb
adc
inc
shl
jecxz
inc
cmpsl
incb
xlat
into
sbb
pop
sub
loopne
sub
loope
mov
push
aas
hlt
mov
addr16
add
hlt
test
fidivl
subl
ret
dec
jns
fisubs
cmp
loopne
sbb
cs
push
sub
xchg
mov
push
adc
dec
push
sbb
push
mov
jns
repz
ficoms
subl
dec
shll
pop
or
fcoml
add
jnp
pushf
ret
mov
repnz
push
outsl
out
jle
aaa
sbb
adc
sbb
fcoml
stos
push
data16
xchg
mov
inc
cmp
imul
mov
mov
mov
jmp
stc
sub
pop
fisubrl
hlt
out
fsts
mull
ja
fnstenv
andb
aam
jno
mov
jg
mov
popa
push
cwtl
mov
push
dec
xchg
sbb
push
mov
add
push
imul
jge
gs
sub
jb
outsb
jne
jmp
mov
inc
and
dec
dec
sbb
popa
js
ffreep
int3
aad
pusha
inc
test
sbb
mov
in
push
aam
popa
sub
fstl
sbb
mov
mov
push
inc
sub
xchg
movsb
mov
dec
xor
daa
adc
push
in
pop
stos
scas
iret
pop
pop
mov
sbb
jl,pt
cmp
push
jecxz
add
push
lods
cwtl
cmp
xor
add
loope
in
in
mov
test
stc
jno
roll
gs
mov
arpl
mov
push
mov
inc
and
jo
sahf
gs
lds
repnz
inc
sub
cmpsl
jecxz
xorl
xor
pop
repz
cli
sbb
fsts
cmpb
xchg
add
mov
or
inc
incl
and
xlat
neg
sub
mov
out
data16
imul
repnz
sar
popf
in
es
pushf
je
cmp
mov
cmc
lss
in
and
dec
test
or
and
xchg
cmp
pop
fidivs
mov
repz
add
sbb
mov
mov
int
lret
sbb
pop
pop
cltd
les
xchg
addr16
inc
sub
xor
add
sub
stos
xor
out
xchg
subb
sti
addl
mov
push
pop
mov
sbb
dec
jne
loopne
xchg
jl
in
fcomps
cmpsb
rcll
xlat
cmp
gs
int
stc
in
sahf
pop
xor
xor
dec
cmpsl
xchg
jnp
and
outsl
inc
xchg
aaa
jbe
mov
pop
into
and
sub
mov
cmp
mov
in
shlb
js
or
sarl
and
mov
add
sub
push
jp
cmc
shrl
aad
sbb
mov
mov
lea
mulb
jmp
mov
mov
mov
xchg
xchg
and
push
mov
dec
loop
cmp
hlt
out
lahf
jecxz
das
mov
dec
in
push
cmp
stos
push
call
nop
pushf
sub
jle
dec
pop
mov
mov
aad
adc
mov
mov
sbb
mov
or
in
mov
xchg
jle
loop
xlat
sub
out
add
sbb
lcall
lds
sub
cmovl
xor
jae
pop
mov
xchg
pop
pushf
jecxz
pop
fld
mov
cmpsl
movsl
ja
enter
push
out
scas
push
sub
test
scas
mov
and
repnz
xchg
lods
adc
jge
or
xor
jle
sbb
mov
test
scas
adc
cld
push
xor
inc
push
clc
cld
sub
mov
ljmp
sub
std
pop
mov
jne
cmp
inc
fxch
jg
into
iret
int3
inc
push
stos
mov
cmp
pop
es
hlt
push
arpl
sub
in
and
cld
ret
mov
pop
mov
sbb
cmp
dec
dec
arpl
jmp
sbb
jo
push
adcl
mov
xor
pop
and
cmpsb
or
imul
pop
rolb
fs
jbe
sub
rorb
mov
pop
orb
out
xchg
mov
lock
mov
xchg
aas
and
inc
mov
ja
cmp
in
bound
std
push
fdivs
add
daa
add
rcr
in
dec
decb
repz
mov
mov
push
xor
lods
lahf
or
cmp
aas
loop
pop
mov
mov
call
repz
xchg
and
sbb
cwtl
and
adc
sub
into
mov
inc
into
daa
xor
in
cld
into
je
adcl
or
fsubrl
int3
jae
adcb
out
push
insl
ret
dec
out
arpl
rcrb
mov
cmp
jnp
add
loopne
bound
add
adc
and
rcrl
cmp
push
loope
lea
shrl
mov
fnstcw
adc
sub
lock
mov
fistpl
out
cmp
mov
les
add
in
inc
dec
outsb
or
push
leave
cmpsl
cmp
out
int3
insb
rorl
sub
inc
ss
aad
lcall
jbe
sbb
jmp
push
movsl
push
pop
or
push
or
sbb
jbe
xchg
inc
lcall
mov
mov
pop
inc
iret
dec
in
xchg
push
sbb
adc
cmp
fmul
faddl
jae
xchg
iret
js
mov
insb
jno
and
sahf
cmp
je
test
mov
jae
pop
cmp
inc
or
mov
out
mov
adcl
pop
push
scas
and
std
xchg
mov
insb
ljmp
sarl
shld
and
mov
mov
cltd
xor
or
mov
jmp
scas
enter
push
jno
popf
dec
sub
mov
xor
dec
or
fcmovne
xchg
add
bswap
cmp
addr16
add
and
and
lahf
mov
imul
mov
inc
xor
dec
addr16
sbb
mov
jae
sarb
pop
add
inc
lods
or
pop
pusha
clc
cmp
push
ljmp
add
push
fnstenv
aas
push
inc
xchg
fs
and
mov
mov
movb
aaa
xchg
sarl
or
popf
into
inc
lods
mov
int3
mov
xchg
mov
jmp
outsb
ja
xchg
pop
test
data16
movsl
pushf
ja
or
fists
cmpsl
movsl
cmpsl
lock
les
xchg
scas
into
or
cwtl
pop
cmp
mov
nop
push
cmpsb
daa
inc
sbb
fcoms
cld
iret
in
mov
repnz
lahf
mov
fistpl
sbb
outsl
stos
lea
mov
jo
xor
inc
or
sbb
inc
push
loopne
sub
or
das
sub
jp
push
xchg
lods
mov
mov
xor
fists
xchg
mov
jns
add
not
pop
jns
cmp
test
jb
je
pop
adc
sbb
jo
jl
pop
test
mov
and
pusha
lods
mov
cmpsl
or
xchg
jns
mov
xlat
adc
dec
xor
pop
outsb
sub
lock
bound
dec
jae
jge
cmp
pop
mov
fisubrl
mov
outsb
pop
cmpsb
and
fidivrl
push
push
cmp
xchg
aas
ljmp
add
inc
lret
sub
mov
push
loopne
pushf
push
adc
andb
sub
push
dec
in
cld
xchg
filds
sbb
sbb
test
xchg
sub
lods
inc
cmp
data16
cmp
rorb
and
ucomiss
pop
and
add
cmp
mov
mov
xor
outsb
fiadds
add
adc
int3
push
js
xor
std
or
nop
leave
test
ss
adc
mov
nop
jb
xchg
push
adc
enter
cmpsb
add
cli
add
mov
push
enter
aam
ds
out
pop
dec
dec
es
shrl
mov
push
jbe
in
add
lds
aam
test
lcall
lods
pushf
sbb
dec
sub
outsb
mov
fbstp
push
shrb
mov
or
mov
jae
and
cmp
imul
pop
mov
out
movsb
add
adc
shld
pop
fidivs
std
icebp
mull
std
test
add
popf
or
push
dec
or
aas
stos
mov
inc
push
rorb
out
pop
xchg
pushf
sub
push
mov
repnz
mov
sbb
popf
pop
and
xor
lahf
jg
sub
ss
data16
sti
inc
adc
xchg
fidivl
adc
cmpsl
lods
hlt
inc
xchg
pop
rorl
test
dec
jecxz
sbb
push
das
leave
fimuls
in
inc
sarb
push
mov
xchg
xchg
test
sbb
movsl
pop
ljmp
push
pop
lret
jg
and
and
jg
mov
cmc
and
xor
hlt
xchg
rcll
aas
aas
test
jg
aaa
into
inc
popa
push
mov
clc
call
je
mov
clc
leave
jp
push
adc
fldenv
test
out
mov
mov
pop
idiv
adc
aas
add
inc
or
gs
mov
dec
es
ret
xor
or
sbbl
popa
jecxz
mov
xchg
les
pop
adc
adc
sub
or
or
inc
lock
fwait
in
pop
out
clc
dec
push
outsb
addr16
loopne
xchg
cmp
or
cltd
call
test
add
xor
neg
inc
clc
sub
push
and
and
aas
mov
repz
adc
inc
in
pop
and
pop
aaa
inc
pusha
in
out
push
jne
or
test
movsl
mov
out
or
imul
cltd
mov
inc
mov
ljmp
mov
push
lcall
push
jmp
xor
xchg
sahf
mov
mov
aad
ret
mov
mov
xchg
int
icebp
mov
xor
loop
and
js
mov
and
cmp
sti
and
fisubs
push
adc
test
subb
pop
pop
test
in
leave
or
int3
in
jne
movsb
jae
cmp
mov
ret
stc
sbb
and
popf
add
stc
rcll
lcall
lret
repz
mov
or
jg
divl
push
xchg
daa
lods
inc
xlat
rcr
mov
adc
js
iret
inc
in
mov
roll
jb
adc
push
cmpsb
into
loopne
mull
mov
xchg
mov
leave
xor
xor
and
inc
sbb
sbb
lahf
or
pop
push
xlat
pop
mov
test
jb
in
lret
int
mov
incb
xlat
mov
cltd
push
popa
inc
stos
mov
rcll
jl
arpl
add
push
mov
cmp
push
and
loope
test
xchg
daa
jae
sbb
inc
call
fsubrs
repnz
ret
lods
jno
ss
mov
pop
xor
sarl
lret
dec
out
push
mov
pop
mov
inc
insl
adc
push
or
dec
cmp
cmp
mov
sbb
inc
mov
movsb
jle
rcll
xor
scas
cmp
pop
lods
div
mov
fidivs
iret
mov
iret
divl
jo
xor
jnp
pop
mov
adc
cmp
inc
mov
les
mov
ficoml
cltd
frstor
loop
push
adc
fiaddl
xchg
jmp
js
lret
or
mov
xchg
push
inc
out
jae
mov
ret
add
stos
mov
sub
mov
movsl
mov
cmovg
popf
and
mov
xor
stos
xor
arpl
mov
setp
outsl
dec
pop
cltd
mov
cmp
fwait
sub
imul
xor
fdivs
sub
pop
push
js
popa
mov
xchg
mov
mov
sbb
stc
cmp
sub
leave
inc
mov
aaa
push
and
out
mov
lahf
dec
inc
push
jmp
inc
test
leave
dec
add
dec
jnp
outsb
pop
and
fsubrs
push
mov
subb
pushf
jge
leave
pop
out
mov
pop
in
mov
push
push
mov
jae
jae
imul
dec
push
adc
cld
mov
mov
sub
enter
int3
push
xor
adc
jle
stos
mov
and
adc
inc
andl
dec
xor
adc
cmp
mov
mov
das
data16
mov
cmpsb
ljmp
add
lods
cmp
push
std
sub
sbb
push
cmpsl
mov
movsl
movsl
or
jge
adc
js
and
test
lods
push
or
xchg
cmp
xchg
pushw
ss
or
ss
push
mov
enter
fcmovnbe
adc
jmp
pusha
pop
dec
cli
push
enter
clc
fnstcw
movsb
mov
adc
mov
mov
sub
add
cmpsl
push
adc
mov
and
in
push
les
lods
lahf
ljmp
add
pop
clc
fnstcw
movsb
mov
adc
mov
mov
sub
add
cmpsl
push
adc
mov
and
in
push
les
lods
lahf
ljmp
add
pop
clc
fnstcw
movsb
mov
adc
mov
mov
sub
add
cmpsl
push
adc
mov
and
in
push
les
lods
lahf
ljmp
add
pop
clc
fnstcw
movsb
mov
adc
mov
mov
sub
add
cmpsl
push
adc
mov
and
in
push
les
lods
lahf
ljmp
add
pop
clc
fnstcw
movsb
mov
adc
mov
mov
sub
add
cmpsl
push
adc
mov
and
in
push
and
mov
lea
stc
outsb
jo
cmp
mov
add
pop
clc
fnstcw
movsb
mov
adc
mov
mov
sub
add
cmpsl
push
adc
mov
and
in
push
les
lods
lahf
ljmp
add
pop
clc
fnstcw
movsb
mov
adc
mov
mov
sub
add
cmpsl
push
adc
mov
and
in
push
les
lods
lahf
ljmp
add
pop
clc
fnstcw
movsb
mov
adc
mov
mov
sub
add
cmpsl
push
adc
mov
and
in
push
les
lods
lahf
ljmp
add
pop
clc
fnstcw
movsb
mov
adc
mov
mov
sub
add
cmpsl
push
adc
mov
and
in
push
les
lods
lahf
ljmp
add
pop
clc
fnstcw
movsb
mov
adc
mov
mov
sub
dec
mov
repnz
mov
repz
imull
adc
imul
and
inc
sarb
inc
mov
sbb
xchg
ja
mov
xor
and
outsb
movsb
or
xlat
adc
sub
lcall
bnd
jle
clc
push
andl
jno
pusha
pusha
sbb
dec
adc
adc
push
adc
cld
aaa
lcall
fistpll
fildll
leave
imul
sahf
jge
pop
subl
movsl
pop
inc
adc
add
arpl
popf
nop
lret
mov
cmp
jae
mov
adc
xchg
mov
int
fdivl
sbb
pop
incl
insb
xchg
cmp
dec
into
ret
in
inc
xor
mov
leave
es
stos
sbb
fisttps
jg
adc
sahf
jl
cmp
gs
insl
lea
push
push
jmp
iret
inc
decb
jae
cmp
xchg
mov
push
jno
mov
xor
cmpsb
xlat
scas
ljmp
mov
lock
add
mov
fs
out
fidivrs
arpl
ja
daa
fcomps
int
out
scas
mov
sbb
sahf
jnp
loop
sub
xlat
outsl
ljmp
pusha
push
addr16
push
or
iret
mov
sti
aam
xor
and
bound
popa
ds
mov
sub
jmp
push
bound
mov
stos
mov
mov
stc
iret
shrb
cwtl
sbb
sub
mov
into
loopne
mov
xchg
sbb
es
add
jmp
fsubrl
push
shrl
dec
mov
cltd
push
push
mov
push
ret
mov
mov
andb
sbb
cmpl
gs
loop
pop
cld
add
js
push
sbb
roll
out
dec
aas
mov
mov
loope
cs
adc
and
ja
and
divl
pop
push
lock
ss
push
test
jae
push
push
shlb
rcrl
cmc
and
jecxz
or
rolb
or
push
pop
add
cmp
imul
in
adc
mov
mov
daa
in
sbb
sarb
dec
aad
add
inc
mov
in
jmp
cmp
rcrb
dec
mov
xchg
push
mov
js
inc
loopne
addr16
enter
popa
loope
movb
fstpt
shlb
ljmp
pop
push
cmp
mov
dec
jns
jge
mov
jb
and
xor
fisubrs
inc
lret
add
outsl
daa
fimuls
daa
in
push
sahf
adc
out
in
data16
mov
push
adc
dec
pop
xchg
fstl
jno
lea
sub
shlb
adc
jae
pop
insl
scas
cltd
cld
push
popf
mov
dec
and
es
inc
pop
mov
sbb
sahf
jmp
sub
xor
call
push
dec
adc
stos
xchg
cmpsl
stc
imul
in
jl
xchg
xchg
xlat
ret
xchg
cli
ret
test
pop
les
sub
lock
push
insl
and
and
mov
hlt
movsl
pop
loope
lock
mov
sbb
mov
sbb
inc
and
xchg
jbe
rcr
stc
fisttpll
jns
mov
xchg
imul
jbe
xor
sub
pop
xor
fucomip
das
xchg
sbb
push
aaa
enter
jnp
mov
inc
faddl
stc
jne
sub
inc
xor
ret
addr16
sbb
sbbl
cmpsl
fdivrs
repz
push
int
ja
push
fstl
insb
std
pushf
test
pushl
movb
pop
mov
loopne
pop
sbb
adc
push
dec
stc
mov
mov
rcrl
xchg
lret
xor
sahf
inc
sub
inc
aas
ljmp
rorb
sahf
into
push
dec
roll
mov
xlat
push
pop
std
or
paddusw
pusha
push
idivb
xchg
inc
add
idivl
mov
add
push
cli
jp
xchg
dec
ss
shll
cmp
dec
mov
movsb
aam
std
mov
rcr
jge
inc
mov
and
ljmp
stos
mov
xchg
mov
push
push
jg
adc
jne
jg
sub
sbb
xor
add
rclb
nop
rolb
pop
ret
sub
scas
jne
xchg
mov
mov
out
inc
jne
ja
xchg
jmp
test
rcrl
lret
xor
or
fcmovnb
mov
lcall
mov
sbbl
jno
mov
adc
pop
xchg
cli
and
stos
in
movsl
and
or
xor
pop
stos
push
cltd
cmp
mov
lods
rcll
mov
or
mov
jbe
sahf
adc
imul
push
stc
jp
test
or
inc
inc
inc
inc
out
paddq
sti
loop
or
and
inc
nop
mov
cmp
cmp
xor
mov
pop
fidivl
lcall
xchg
in
add
in
jns
pop
incb
je
jb
aas
cli
lea
int3
inc
jne
xchg
push
rcrb
jge
push
mov
push
testb
or
sbb
mov
leave
out
ret
mov
mov
dec
add
popa
mov
mov
push
pop
xchg
sub
xchg
mov
lcall
xor
xchg
hlt
lds
sbb
push
pop
or
ficoml
fs
pop
xor
xchg
inc
cld
pop
adcl
pusha
adcb
rcrb
in
adc
lods
fs
clc
sub
movsb
dec
dec
and
adc
push
dec
adc
inc
loop
daa
lcall
jmp
lret
pop
dec
xchg
fld
scas
jo
outsb
xor
aas
call
sub
jle
pop
ss
movsb
pop
loopne
fs
mov
scas
mov
xor
dec
insb
add
xor
shll
and
mov
frstor
jg
outsl
ret
pop
xor
mov
in
rolb
push
xchg
jae
xchg
lods
xor
pop
or
add
sbb
rcrl
std
aaa
add
clc
iret
inc
lret
cmpsl
add
cmp
sbb
mov
lcall
dec
inc
inc
cmp
adc
dec
or
int
sbb
cmp
add
push
fcmovnb
and
ss
mov
pop
mov
add
mov
loopne
rcr
ja
add
scas
push
xor
subb
and
add
stos
xor
sti
outsl
int3
lock
insb
mov
test
mov
pushf
jne
outsb
mov
fisubrs
or
movsl
rep
mov
cltd
push
jbe
in
push
add
inc
add
jns
cmp
sub
xor
push
ljmp
icebp
and
test
xchg
inc
call
enter
sbb
cld
xchg
std
xor
lock
int3
mov
aad
sub
dec
mov
aad
inc
xchg
lcall
filds
or
or
pop
add
popa
orb
ja
jns
in
loopne
notl
sahf
jecxz
leave
xchg
aaa
out
xchg
jno
ja
lret
pop
add
dec
inc
xor
mov
mov
int3
sub
dec
and
push
mov
xor
xor
popl
ror
mov
add
inc
outsb
fimuls
push
rorl
mov
in
xchg
or
aam
test
xchg
add
mov
jg
outsb
jb
xor
adc
xor
out
cmp
call
or
scas
mov
add
xor
lret
in
add
aam
xchg
daa
jmp
daa
dec
icebp
sbb
clc
scas
cmp
xorl
xchg
fwait
add
xchg
fcoms
push
add
mulb
jmp
push
mov
sub
push
push
mov
testl
bound
loopne
fstps
in
sub
mov
loopne
cmc
ret
mov
mov
mov
dec
sbb
xor
andl
mov
cli
or
jns
addr16
add
movsb
gs
insl
cmc
adc
mov
dec
out
adc
mov
push
stos
fistpl
xchg
xor
fistl
mov
jle
cltd
xor
fwait
test
push
dec
neg
jmp
adc
sbb
pop
inc
push
sub
add
mov
pop
cmpsl
daa
sbb
jle
movsl
jl
sub
dec
xor
dec
inc
push
xor
jb
jmp
jecxz
or
sub
pop
xchg
aaa
inc
mov
add
add
inc
inc
inc
cs
bound
adc
mov
sub
pop
mov
and
jmp
cmp
xchg
pop
cmp
inc
inc
rolb
jg
mov
inc
mov
ret
mov
push
inc
outsl
lock
inc
pop
push
imul
test
cmp
movsl
lahf
lcall
imul
lcall
sahf
or
pop
sarl
adc
cwtl
outsl
push
lds
jg
in
lods
mov
iret
push
cld
imul
insl
push
mov
dec
mov
adcl
outsl
or
call
shlb
sub
push
push
mov
push
jb
push
push
or
pop
xchg
lods
pushf
mov
push
mov
mov
int3
dec
or
mov
aad
mov
jnp
pop
push
push
mov
call
mov
fnstcw
or
push
das
xor
push
sbb
xchg
mov
std
sub
push
xor
push
pop
add
or
repnz
test
push
leave
js
cmp
in
aam
lods
int
movups
xor
pop
adc
fnsave
dec
les
pop
sbb
jecxz
mov
dec
daa
xor
inc
loop
in
fists
jmp
pop
push
add
jbe
xchg
es
sub
ljmp
lds
dec
xchg
enter
push
sbb
mov
jp
adc
cltd
aas
insb
aaa
dec
movsb
les
mulb
out
jle
inc
subl
cltd
fidivl
add
or
cltd
mov
xor
jecxz
mov
jl
dec
das
mov
mov
je
adc
xor
push
sub
outsb
dec
test
dec
and
mov
mov
lret
hlt
xchg
into
ljmp
inc
mov
pop
daa
dec
add
cmp
pop
pusha
repnz
xlat
cli
mov
jle
add
fwait
dec
dec
jecxz
rorb
in
pop
cmpsl
mov
lret
jbe
out
test
xor
xor
push
or
jns
aas
mov
lods
lods
scas
scas
cmp
mov
repz
loope
mov
sub
or
sub
popf
sub
cmpsl
pop
mov
adc
fildll
push
std
push
mov
dec
xchg
or
mov
outsb
or
mov
outsb
.byte
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
push
mov
push
mov
xor
or
repnz
inc
neg
dec
mov
std
repnz
inc
cmp
je
xor
jmp
mov
cld
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
dec
dec
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
xor
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
dec
jne
neg
neg
sbb
pop
pop
pop
ret
push
push
push
push
mov
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
movzbl
mov
mov
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
lea
lea
movzbl
inc
jmp
cmp
mov
jne
neg
pop
pop
pop
pop
ret
pushl
call
pop
ret
push
mov
push
mov
lea
cmp
ja
mov
movzwl
jmp
mov
push
mov
sar
movzbl
testb
pop
je
andb
mov
mov
push
jmp
andb
mov
push
pop
lea
push
push
push
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
jmp
push
mov
mov
push
push
mov
mov
and
shr
test
jne
push
pop
jmp
cmpl
jbe
push
mov
cmp
jae
mov
sub
cmp
jl
mov
shr
mov
neg
shl
add
movzbl
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
add
add
dec
jne
test
je
movzbl
add
inc
add
dec
jne
mov
mov
xor
mov
div
mov
mov
xor
div
cmpl
mov
ja
pop
mov
shl
or
pop
pop
pop
ret
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
movl
jmp
mov
add
mov
cmpl
jge
mov
add
movb
jmp
movl
movl
mov
shr
mov
mov
and
test
jne
mov
call
mov
cmpl
jne
jmp
mov
or
mov
mov
and
test
je
mov
call
mov
cmpl
jne
jmp
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
mov
call
mov
cmpl
jne
jmp
mov
call
mov
cmpl
jne
jmp
mov
and
shl
mov
or
mov
mov
and
add
mov
movl
jmp
mov
add
mov
mov
cmp
jg
mov
add
and
mov
xor
mov
mov
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
jmp
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
mov
cmp
jb
or
jmp
mov
mov
mov
mov
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
push
mov
sub
mov
mov
mov
mov
mov
cmp
jb
jmp
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
call
mov
push
push
call
mov
mov
mov
add
mov
mov
cmpl
je
push
push
push
push
call
movl
movl
movl
movl
mov
xor
mov
mov
lea
mov
xor
mov
imul
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
ja
mov
cmp
jae
mov
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
call
push
call
mov
cmpl
jne
push
push
push
push
call
push
mov
push
call
mov
push
mov
push
call
mov
cmpl
jne
push
push
push
push
call
movl
movl
movl
mov
xor
mov
mov
lea
mov
xor
mov
imul
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
jae
mov
cmp
jae
mov
mov
mov
mov
mov
add
and
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
mov
push
mov
push
call
mov
push
call
mov
push
call
call
push
call
add
mov
cmpl
je
mov
call
mov
jmp
movl
mov
mov
mov
call
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
call
pop
call
pop
mov
popa
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
arpl
daa
je
outsl
jo
outsb
and
imul
fs
and
or
jo
je
je
mov
cmpsl
pop
or
adc
inc
dec
pop
xor
dec
add
add
xor
mov
push
imul
daa
cmpl
insl
xchg
xchg
push
push
cmpsl
mov
adc
xor
push
notb
pop
test
and
jmp
jmp
jmp
call
stos
into
add
pop
jl
add
xor
push
mov
or
out
lea
nop
ret
lds
sbbb
aaa
adc
push
icebp
popf
cli
insb
add
push
rorl
mov
loopne
xchg
fsubrs
mov
scas
popf
jg
mov
jo
lcall
lahf
jbe
push
jns
test
push
imul
or
stos
cmp
into
js
xor
dec
inc
shll
push
out
inc
dec
pop
sbb
push
out
mov
push
outsl
push
cli
in
add
cmp
ja
and
and
gs
bound
and
repnz
pop
sub
mov
dec
imul
lods
pop
testb
mov
jbe
cld
mov
std
jmp
xchg
jg
push
inc
lock
sub
sbb
cmp
loope
and
pop
pop
ret
loop
dec
lret
jl
fwait
pop
xor
and
and
xchg
ljmp
insb
jb
cmp
push
cmp
jl
and
inc
and
add
push
dec
in
loopne
pop
push
repz
pop
pushl
cmp
dec
adc
out
es
sub
lods
jp
and
clc
popw
cmc
pusha
pop
pop
jg
inc
faddp
push
js
mov
lds
jnp
inc
push
add
mov
les
or
or
inc
sub
adcb
mov
or
mov
lret
lock
adc
popa
sti
add
push
into
mov
pop
nop
aas
mov
pop
jbe
aam
xchg
bound
xchg
xor
out
jg
aaa
cmc
mov
pushf
mul
pop
test
ljmp
xorb
and
fiadds
cmp
cmpsb
pushl
loopne
pushf
fisttpll
loopne
xchg
in
rorl
jo
rcr
cmp
dec
jp
push
sub
xchg
cmc
out
cmp
mov
fistpll
in
lcall
clc
xchg
xchg
sbb
lods
push
dec
adc
pop
push
daa
nop
mov
and
push
gs
pop
ljmp
dec
inc
push
jge
inc
mov
roll
data16
clc
cmc
xchg
mov
scas
fists
scas
add
das
dec
add
cmpsl
or
dec
xor
repz
mov
push
mov
xlat
xchg
and
mov
test
adc
inc
loope
arpl
lock
scas
jbe
sbb
and
push
xchg
push
inc
insl
outsb
add
add
mov
pop
jmp
lcall
lahf
daa
int
mov
sbbb
inc
lcall
fidivl
fcomps
test
jnp
repnz
fistps
cmp
push
sbb
stc
xchg
xchg
fs
clc
lds
pop
dec
dec
inc
in
mov
add
add
cltd
pop
xor
bound
adc
pop
shrb
xchg
push
mov
dec
aaa
repnz
mov
filds
in
jle
jns
add
fwait
xchg
mov
push
jne
pop
aam
xor
fldcw
sub
mov
xchg
mov
mov
mov
sbb
sub
popf
nop
jp
xor
fwait
pop
and
out
loop
mov
mov
push
xchg
jmp
pop
sub
or
mov
fwait
je
ja
lret
stos
mov
xchg
push
in
and
and
out
pop
pusha
xchg
loopne
pop
mov
out
into
pop
arpl
lcall
mov
leave
das
adc
inc
jne
xchg
mov
mov
mov
adc
clc
test
sarl
jmp
jno
xlat
dec
addl
pop
xor
in
inc
mov
dec
rcrb
xchg
rclb
dec
into
insl
or
jmp
add
enter
imul
lods
int3
xchg
mov
imul
add
sub
cltd
inc
jg
inc
mov
addr16
lret
test
push
cmpsl
jnp
mov
pop
inc
subl
mov
inc
js
add
cltd
pmaddwd
adc
adc
ss
decl
mov
sbb
adc
adc
dec
frstor
xor
sti
xor
jg
insb
pop
or
xchg
icebp
and
es
mov
cli
fnstenv
fs
mov
mov
xor
adc
into
mov
gs
mov
xor
repz
sub
in
push
push
popa
mov
gs
lret
jo
mov
dec
pop
lret
dec
fdivrs
mov
push
adc
sahf
ret
rcrl
xor
cld
pop
sar
sub
fwait
cmp
and
and
dec
mov
jmp
jbe
test
adc
cmpl
xchg
jno
mov
fidivrs
addb
mov
ds
and
add
dec
mov
mov
pop
int
xchg
mov
lret
fdiv
lahf
popa
or
cmp
xchg
mov
je
pop
ljmp
jne
in
sbb
adc
mov
je
cld
sub
xchg
movsb
outsb
arpl
or
cmp
inc
jp
xchg
inc
jge
lret
ret
imull
leave
add
xchg
fldenv
mov
lahf
enter
fcompl
movsb
scas
shld
mov
jle
lods
stc
test
push
inc
xlat
xchg
lock
mov
and
and
lods
mov
mov
movsb
inc
xchg
xor
scas
cmc
popa
int
aas
int
in
stos
sbb
xchg
cmp
mov
cli
cltd
dec
mov
xlat
lret
or
xchg
mov
mov
std
mov
ret
and
in
sub
fldenv
dec
out
pop
xchg
leave
sti
dec
stos
or
sbb
dec
adc
pop
int3
pop
cmpsb
cmp
push
pop
sahf
mov
fcmovb
inc
adc
dec
jnp
das
fbld
mov
mov
jne
addl
add
sub
cmpsb
inc
in
lods
fsubl
imul
mov
stc
loope
xchg
xor
xor
jmp
scas
mov
mov
sub
jbe
shll
mov
mov
inc
adc
cmp
insl
repz
xor
sub
mov
test
cwtl
adc
add
pop
nop
lods
cmp
jle
repnz
push
jge
xchg
jbe
popf
push
stos
roll
or
insl
dec
cmp
cmp
pop
scas
add
or
scas
out
xor
push
mov
fbstp
sahf
test
pop
jg
xchg
mov
add
xor
sti
inc
punpcklbw
negl
and
outsl
cmp
dec
out
imul
pop
hlt
or
cmpsl
jge
add
push
ds
add
rcrb
test
loop
ljmp
adcb
xor
lahf
push
push
add
dec
dec
movsl
rorl
and
add
int3
cmp
sti
dec
iret
mov
aaa
push
adc
mov
lods
idivb
cmp
adc
adc
test
roll
pusha
jno
fistpll
xchg
sbb
adc
les
inc
cmpsl
dec
iret
int3
rclb
cmpsl
ss
cmc
xor
cli
xchg
jge
movsb
mov
adc
dec
pop
sbb
sub
testl
mov
cwtl
cmp
cmp
cmpsb
aas
add
push
icebp
sahf
neg
cli
sahf
ficompl
es
mov
jo
mov
and
pop
add
pop
ret
mov
dec
pop
out
jne
fsubp
mov
fldcw
jbe
mov
lea
push
rorb
nop
pusha
add
popf
cmc
ja
push
fcomi
push
ss
ret
adc
add
iret
pop
adc
test
push
shlb
loopne
mov
ficoms
loope
mov
int
add
sarb
mov
push
int3
and
xchg
lret
mov
mov
push
frstor
xor
jbe
push
mov
xchg
sti
stos
push
roll
mov
push
clc
mov
mov
cmp
scas
pusha
idiv
leave
stc
sahf
cmp
and
mov
xchg
or
out
inc
inc
xchg
fisubs
xor
in
mov
sub
pop
pusha
fwait
cmp
mov
push
jns
mov
mov
mov
adc
pop
xor
adc
jae
aam
daa
jl
pop
sub
sub
lea
addb
jno
lods
cmp
mov
stos
sub
loope
fwait
out
rorb
out
out
sub
mov
outsl
mov
popf
pop
imul
pop
jmp
dec
out
shl
jbe
sarl
add
imul
push
data16
mov
mov
add
stos
int3
mov
dec
jns
sbb
insl
bound
int3
nop
and
adc
in
inc
repz
mov
pop
push
test
or
js
iret
lahf
aam
mov
pop
repz
lahf
sbb
pop
fld1
push
fs
mov
sbb
xchg
leave
mov
sbb
adc
dec
pop
rcrl
xchg
lahf
xor
sti
ss
aas
inc
ret
lret
or
mov
sarb
fmull
push
test
pop
out
pop
push
pop
fldenv
je
cmpsl
in
test
pusha
shrb
addr16
lds
flds
mov
iret
fldln2
test
addl
cmp
mov
xchg
push
jecxz
push
adc
loope
or
xchg
xchg
repnz
stos
idiv
dec
or
scas
xor
lods
adc
sbb
mov
lret
xlat
sub
xor
call
push
jns
jno
pop
push
mov
movsb
pop
sahf
into
imul
and
jb
push
push
test
adc
push
mov
ret
cmpsl
push
icebp
orb
jno
imul
pusha
fwait
ds
insl
cs
sti
mov
add
lock
subl
mov
mov
mov
adc
mov
push
xor
lret
nop
addr16
pop
outsb
push
out
test
imul
inc
mov
stc
push
xor
addr16
ficoms
dec
lea
push
dec
popa
xchg
shl
cmp
std
out
jecxz
mov
adcl
sbb
rorb
cmp
jl
pop
in
out
cmc
out
in
xchg
push
and
pop
cs
push
cmc
ljmp
lods
jl
in
mov
aam
mov
sub
ret
das
adc
jmp
jp
mov
adc
cli
adc
lock
inc
pop
shrb
push
outsl
dec
xchg
pop
rol
cmp
mov
pop
pop
andl
or
mov
ljmp
mov
aad
pop
imul
es
dec
inc
cmpsb
outsb
jecxz
sub
dec
insb
push
mov
nop
out
sahf
pop
pushl
test
dec
mov
aaa
out
cld
sahf
xor
add
push
and
mov
push
mov
add
cmpsl
fcompl
mov
fs
pop
shrl
les
lock
popa
std
push
ss
jge
pop
cmp
mov
mov
in
jnp
loopne
adc
loope
daa
sti
xor
in
adc
xor
ret
jle
cmp
jae
cld
xor
dec
rorl
mov
test
stos
aaa
mov
push
enter
or
sahf
sbb
fstps
int3
lret
loop
cmp
cmp
loope
cli
mov
mov
clc
shl
pop
inc
fldcw
out
xor
ret
or
push
ljmp
mov
popl
cmc
mov
cbtw
and
int
push
repz
icebp
pop
pop
ljmp
scas
inc
push
into
bound
jmp
loop
jb
notb
call
cmpb
lods
popa
ud2
xchg
mov
lret
loop
push
adc
jbe
daa
pop
inc
int3
xlat
xchg
pushf
shlb
subb
adcb
jns
call
ret
adcl
sub
xor
shll
fisttpll
push
gs
ret
fs
shl
out
enter
mov
and
push
mov
lods
fdivrl
shlb
mov
push
pop
aad
mov
data16
jl
adc
aaa
mov
xchg
in
sub
scas
sbb
push
out
xor
cmp
scas
xor
insl
xchg
iret
andl
hlt
add
inc
negb
lods
adc
sub
dec
lcall
call
adc
jo
jmp
sahf
xchg
push
dec
out
fld
pop
add
je
push
xchg
cltd
add
dec
les
jb
andl
xor
out
loopne
mov
sarb
pop
ret
mov
inc
inc
push
aad
inc
into
xor
mov
mov
adc
ret
test
add
pop
jg
lcall
cmp
xor
mov
in
cs
cmp
sahf
inc
lock
cmp
stos
dec
sub
enter
lcall
and
inc
dec
insb
ss
inc
add
icebp
stos
rdpmc
pop
daa
or
iret
clc
test
ja
jp
mov
lret
ss
outsb
call
mov
cmp
lds
pop
or
pop
pushf
pop
out
or
fcom
insb
mov
leave
btc
mov
and
loopne
shlb
int
js
mov
inc
xchg
mov
test
cltd
test
cmp
and
dec
pop
ret
sbb
popa
mov
ljmp
fildl
xchg
mov
repz
fs
cs
jmp
sub
rolb
sbb
xor
dec
je
insb
lock
xchg
sbb
rolb
add
cwtl
nop
sbb
hlt
jl
sub
mov
or
or
and
scas
pcmpeqw
test
setbe
and
jae
ret
push
cmpsb
fbstp
cwtl
dec
jl
jne
pop
push
in
in
mov
mov
xchg
jl
cmp
loop,pt
pop
in
lret
mov
add
lds
lock
jmp
pop
jmp
imul
sbb
lds
xchg
and
aam
jmp
ret
insb
sbb
test
xorb
popf
je
pushf
lds
clc
out
dec
cmp
pop
push
ret
in
jae
loopne
outsl
lret
arpl
stos
xorb
andb
mov
sbb
shl
dec
repz
clc
jge
ds
or
xorl
test
and
xchg
mov
push
aas
mov
ss
lret
jno
test
inc
clc
enter
xchg
mov
lock
scas
xchg
lahf
or
aas
in
inc
cmp
aaa
in
pop
fst
enter
xlat
xlat
std
jle
push
out
out
mov
adc
dec
pop
adc
jl
add
out
roll
imul
fwait
enter
mov
into
std
pop
sbb
js
jns
mov
addr16
scas
mov
hlt
loope
fistps
jno
push
fwait
dec
scas
loope
hlt
add
test
jnp
sbb
push
lods
ret
dec
sbb
adc
adc
mov
test
and
sbb
sub
push
pop
sub
negl
mov
and
sub
add
adc
push
or
test
mov
repnz
dec
or
xor
cmp
jno
test
add
xor
xor
pusha
jmp
pop
pop
and
jae
mov
or
pop
ss
out
sbb
pop
cmp
xchg
and
pop
push
data16
sbb
jl
mov
sbb
adcb
mov
jo
pop
sbb
scas
orb
aaa
mov
cmp
out
arpl
adc
mov
frstor
xor
rcr
divb
out
icebp
cmp
sub
ss
call
imull
xchg
mov
scas
imul
cltd
add
sahf
scas
mov
pop
mov
mov
xor
dec
cmp
aas
pop
mov
mov
insl
or
lret
out
inc
lret
mov
dec
dec
pop
addl
outsb
sub
rcrl
in
adc
sub
mov
sahf
inc
sbb
aam
aaa
ds
cs
mov
mov
mov
sub
xchg
adc
fldt
in
ljmp
xchg
dec
jbe
jb
fwait
ret
sbb
repnz
in
aam
stc
sbb
mov
mov
mov
aas
sub
inc
xor
nop
and
insb
mov
jo
pop
ret
jle
pushf
cmp
clc
xchg
mov
lahf
dec
js
sbb
push
xor
idivl
pop
test
hlt
lock
inc
cmp
cmc
sub
lock
inc
adc
sub
movsb
call
addr16
in
sbb
mov
jmp
push
cmc
jne
cmp
test
test
loop
stos
jl
jecxz
jnp
insl
stos
cmp
mov
fldt
sub
push
cwtl
cli
pop
xor
sub
dec
lret
xchg
push
mov
icebp
push
sub
sbb
in
js
lcall
pusha
fsubrl
into
gs
xchg
sbbl
shr
ljmp
pop
jmp
aaa
shlb
cmp
repz
inc
loopne
insb
cmpsb
mov
clc
dec
xchg
stc
test
inc
jg
out
or
mov
es
repz
jecxz
hlt
in
leave
mov
pop
sbb
cmp
add
lahf
mov
or
jecxz
mov
aad
pop
and
out
aam
mov
rorb
mov
ret
pop
stos
ja
push
rcl
iret
and
fcmovnb
lods
enter
sub
ja
out
jge
insl
pop
icebp
sbb
adc
pop
ljmp
movsb
mov
cltd
jns
cmpsb
add
mov
negl
inc
pop
in
jno
jecxz
ficoms
jns
leave
and
sbb
sbbb
in
or
fsubl
ret
inc
insl
ret
sub
push
pop
leave
xchg
lods
lock
push
imul
js
scas
icebp
sub
inc
outsb
ljmp
sbb
sbb
xchg
sub
daa
subb
ret
mov
dec
pop
popf
jmp
add
and
xor
ror
popa
xor
aam
or
push
out
xchg
scas
mov
shlb
shll
fcom
addr16
dec
daa
sbb
sub
aas
push
shlb
xor
push
jb
pop
js
test
xor
test
sbb
inc
jbe
dec
xchg
mov
dec
jmp
aaa
add
fidivrs
aas
shll
jl
pop
mov
imul
inc
mov
in
dec
jp
jmp
pop
sbb
and
dec
mov
idiv
inc
in
rcrl
dec
ret
push
imul
sub
in
cltd
jmp
in
add
roll
int3
fcoml
push
inc
sbb
daa
jle
sub
sub
push
jmp
lock
lea
or
testb
ss
mov
or
adc
or
push
fwait
and
sub
mov
xchg
cmp
gs
cmp
pop
stos
and
cmpsl
pop
bound
jbe
fadds
dec
mov
mov
and
sub
outsl
pushf
mov
cmpb
daa
mov
cmp
scas
mov
std
push
stos
or
jne
out
inc
faddp
jg
jae
inc
jle
cwtl
test
inc
mov
push
push
cmp
jb
xchg
adc
cmp
ret
scas
jecxz
lret
push
repnz
push
leave
mov
add
or
xchg
and
add
sub
jp
mov
lret
mov
dec
rcrl
jns
mov
mov
rolb
popl
sbb
mov
xchg
fcmovnb
popf
outsl
daa
fs
jno
and
shlb
xorb
cmpsl
repz
fidivl
in
cltd
jae
xor
sub
pop
shll
mov
push
or
mov
inc
lret
push
ss
jg
or
outsl
jge
fiadds
aam
push
popa
sub
mov
fnstenv
mov
inc
enter
jp
xor
xchg
push
test
mov
sub
pop
cmc
dec
mov
movsb
leave
sub
out
and
stos
ret
pop
fidivrs
sarl
mov
pop
pop
into
ror
jmp
adc
xchg
adc
arpl
pusha
jg
or
sbb
fnstsw
loopne
sub
dec
cmpb
stos
lea
sub
xchg
ja
adc
push
mov
push
fiaddl
scas
or
je
rcr
jmp
fld
mov
jp
dec
stos
out
fistpl
ss
stos
mov
adc
push
outsb
lahf
mov
adc
cmp
cmp
into
jmp
lods
add
negb
push
ljmp
lods
inc
adc
rcl
mov
dec
pop
push
pushf
movsb
lcall
sub
sbb
and
outsb
sub
push
ficompl
add
in
popa
neg
push
decb
leave
add
int3
mov
scas
js
push
lret
repnz
emms
call
sub
jnp
or
mov
aam
stc
icebp
frstor
stos
stos
inc
iret
xor
ret
push
jne
mov
das
fcoml
pushf
je
cmp
fs
sbb
rclb
fidivs
xchg
rolb
enter
cmp
lds
add
inc
pop
and
aaa
adc
add
or
outsb
or
mov
xor
adc
fwait
hlt
sbb
sub
dec
xchg
aam
fstp
sbb
sbb
or
mov
int
lds
sbb
xchg
push
sub
add
mov
lahf
nop
test
repz
xchg
divl
cmp
jae
pop
mov
repz
test
adc
loopne
ficompl
inc
fcoms
xchg
dec
fs
das
fdivrl
xor
push
mov
pop
jl
pop
push
mov
loopne
loopne
repnz
push
std
daa
and
or
sub
jnp
movsl
mov
xor
out
push
aas
fldl
add
fwait
xor
clc
mov
xor
aam
and
ficomps
push
insb
jns
int3
mov
xchg
xor
inc
push
mov
mov
pop
scas
cmc
shrl
mov
mov
jp
ljmp
mov
xor
lret
or
mov
xchg
jmp
and
pop
lods
or
xor
dec
mov
jb
pop
xorl
mov
pop
xor
fs
mov
inc
out
pop
aad
jbe
insl
adc
repz
fidivl
cwtl
test
xlat
imul
push
shrl
or
popf
add
jae
lret
and
in
out
adc
jle
xchg
sbb
push
bound
mov
insb
mov
aas
jmp
lock
outsl
push
mov
test
gs
insl
scas
inc
mov
dec
sti
call
sub
imul
mov
in
outsb
paddsb
xchg
call
xor
notb
sbb
mov
push
cwtl
orb
lds
inc
fistpll
in
lret
lea
and
mov
sub
enter
fsubr
pusha
jmp
fwait
xchg
push
aam
fadds
out
inc
mov
or
and
pop
enter
enter
add
add
push
fldl
inc
push
insb
mov
sub
or
ss
sbb
cmp
movsb
xor
mov
lock
mov
mov
je
mov
push
into
add
lret
mov
fidivrl
loope
dec
imul
fcmovb
gs
ss
dec
push
aaa
sbb
rorb
std
into
mov
inc
stos
out
testb
add
pop
pop
mov
rclb
pushf
ss
and
cmp
dec
add
insb
stos
movsb
aaa
stc
sbb
loop
stos
inc
test
push
push
cmc
cli
pop
stc
arpl
in
jecxz
mov
xor
inc
data16
inc
mov
into
cmp
mov
outsb
lret
hlt
or
rcr
sub
and
xchg
cmp
xor
subb
dec
and
shrb
push
dec
push
push
cmp
jge
jo
push
in
fs
and
jb
mov
jo
aad
push
ret
sbb
das
sarl
cmpsb
push
ret
jb
scas
mov
repz
lods
jo
mov
daa
in
sti
stos
mov
cmp
fisubrl
mov
icebp
movups
adc
dec
ficomps
insl
in
or
xor
ja
roll
out
mov
or
mov
cwtl
dec
mov
test
pop
mov
rorb
sar
xor
push
pop
scas
adc
mov
out
test
mov
stos
jp
xchg
jle
jb
push
inc
mov
sahf
jbe
rolb
out
dec
or
mov
das
or
out
mov
fs
js
out
dec
lcall
repnz
sbb
xchg
dec
loope
cltd
xchg
or
fistps
xor
inc
xor
mov
mov
and
or
mov
dec
adc
and
loop
lods
and
dec
out
mov
cmp
sbb
repnz
and
test
call
pop
push
jg
and
pushf
shl
fldenv
push
pop
addb
adc
xor
stos
fimull
fildl
pop
cmp
stos
mov
or
inc
lcall
sub
loop,pn
cmpsb
push
mov
cwtl
enter
mov
mov
out
scas
pop
aas
mov
jle
push
mov
adc
test
inc
aam
mov
fiadds
sub
jle
das
sub
jno
xchg
dec
mov
leave
in
mov
add
push
inc
nop
xchg
inc
push
xchg
dec
leave
nop
outsb
cli
sub
into
pop
out
mov
fldl
add
sub
or
in
sub
mov
iret
xchg
sub
test
hlt
xor
add
jnp
shll
mov
add
fdivp
fs
pop
clc
mov
jmp
aam
cs
mov
mov
push
mov
lcall
jl
lcall
sbb
mov
mul
bound
enter
pop
jnp
jle
mov
xchg
repnz
mov
addr16
fldl
mov
sbb
mov
icebp
xchg
pop
sarb
and
jl
enter
mov
cmp
lods
inc
enter
and
loopne
mov
push
mov
xlat
int
jmp
jo
xchg
sbb
jnp
jbe
mov
aam
mov
fcompp
pop
mov
dec
arpl
pop
mov
notb
insb
ljmp
test
mov
mov
jg
add
cmp
inc
into
dec
scas
sahf
mov
sub
fcmove
mov
sahf
clc
cmp
icebp
mov
sub
pop
nop
jg
daa
aas
in
jl
xor
xchg
ds
lods
fildll
stc
adc
jne
aad
lock
sub
lahf
push
sub
in
push
pop
je
rcll
cld
or
or
pop
pushf
cmp
or
cmc
push
ret
mov
cwtl
jae
push
das
aaa
call
sbb
jl
push
cmp
cmp
pop
jge
adc
test
fistpl
pop
icebp
in
jae
movsl
push
fs
popa
sbb
ss
push
dec
mov
lea
js
fs
popl
addb
sub
xchg
inc
insl
lahf
ja
aaa
mov
add
dec
sub
pop
into
or
dec
xchg
jle
and
subb
outsb
sub
test
mov
or
lret
or
sub
mov
mov
out
xor
test
cmp
xchg
aaa
stos
jge
mov
rclb
inc
pop
push
sub
dec
lcall
mov
or
pop
jge
jne
pop
leave
enter
jmp
sub
test
push
hlt
lret
js
icebp
nop
xchg
inc
xchg
cmp
adc
push
jne
ja
jecxz
loope
leave
out
mov
add
add
in
xor
outsb
je
jae
xlat
adc
fisubs
jnp
sbb
xchg
adc
mov
ja
mov
aaa
mov
jge,pn
orl
js
int3
in
mov
stc
stos
jmp
mov
sbb
in
pop
push
mov
adc
aaa
push
movsl
jmp
jle
imulb
sbb
xchg
jae
popa
inc
movsl
mov
fwait
jnp
sbb
cmc
jno
jmp
lret
cwtl
std
xor
sub
clc
loope
mov
sbbl
int3
pushf
xchg
sti
mov
dec
movsb
sub
outsb
popa
pusha
call
stos
lea
xchg
jne
mov
inc
insb
mov
mov
stos
movsb
je
bound
or
pusha
jp
in
fdivp
sub
fwait
in
pop
add
push
mov
pop
xorps
nop
and
aaa
add
in
idivl
sbb
sbb
loope
mov
push
pop
and
and
mov
rorl
sbbb
pop
xor
movsb
jnp
orl
inc
xlat
test
arpl
mov
inc
jle
sbb
ss
jae
cltd
cld
dec
mov
inc
bound
or
jmp
mov
out
dec
add
push
cltd
adc
test
hlt
cmpsl
je
es
mov
jnp
dec
outsb
ret
test
jb
cld
and
pop
sbb
ret
inc
mov
int3
cmp
jb
cmp
mov
xchg
or
fnstcw
cmovl
jb
dec
adc
movsb
xorb
pop
sub
pop
adc
jle
cmp
jmp
mov
xor
push
daa
vpunpcklwd
mov
or
pop
mov
mov
test
adc
aas
lea
lahf
aaa
out
adc
mov
xlat
push
mov
loope
cmp
in
cmpsl
add
add
test
mov
jno
xchg
in
xchg
xchg
aam
add
test
add
add
pop
mov
sub
and
call
xlat
adc
hlt
rcrb
jmp
pusha
jb
repz
mov
lret
leave
loope
je
aam
fldenv
rcrb
pop
lock
lret
xchg
inc
adc
ds
pop
out
in
ret
dec
mov
pusha
jecxz
dec
fwait
mov
cltd
vfrczss
movsl
sbb
fldln2
inc
sub
pop
push
adc
pop
xchg
fwait
push
push
xchg
inc
mov
adc
insl
leave
xchg
call
dec
jb
outsb
or
in
dec
jge
pop
push
cmpsb
jne
add
push
inc
xchg
pushf
adcl
adc
cmpsl
gs
scas
sub
push
ja
inc
pop
or
push
mov
push
lahf
sub
inc
mov
sub
mov
mov
sub
inc
fstpt
cmp
dec
outsl
out
bound
mov
add
sbb
ret
or
aad
leave
subb
ficoml
mov
jecxz
sub
loope
mov
ja
repz
sub
mov
and
inc
sub
aam
mov
dec
lcall
divb
pushf
mov
int3
adc
stc
fsubr
jmp
mov
and
leave
out
fdivr
test
mov
push
loope
and
shll
cmc
jne
or
push
imul
lea
push
sub
jge
or
js
add
push
arpl
sbb
shlb
std
or
sarl
nop
mov
movsb
jns
xor
pop
test
pop
pusha
xchg
xchg
jb
and
rorl
stos
neg
aas
je
mov
add
dec
stos
imul
pop
push
push
repz
adc
jecxz
inc
dec
out
fimuls
mov
roll
dec
xor
into
cwtl
pop
call
pushf
dec
mov
sub
mov
mov
cmp
mov
aas
xor
xor
jmp
cmp
stos
stos
ja
mov
loope
mov
mov
lret
add
add
mov
jbe
xchg
dec
idivl
sbb
fdivs
jnp
xor
and
enter
lcall
mov
push
loop
jo
outsb
sarl
xchg
xor
jp
cmp
adc
clc
pop
jmp
rcrb
pop
fistps
pop
xchg
jno
out
sarb
xchg
push
pop
push
xchg
add
cwtl
mov
xchg
jecxz
es
jmp
push
outsl
daa
xchg
rcr
scas
pop
andb
xor
inc
or
addr16
div
rol
out
jmp
jae
call
cli
cmp
mov
stos
sbb
orb
sahf
push
lods
fiaddl
xor
ds
sub
and
outsb
mov
aaa
xor
lds
scas
mov
ficompl
pop
adc
test
scas
mov
jp
lock
pushf
gs
sti
mov
xor
mov
jecxz
sahf
mov
cmp
cmpsl
or
std
imul
mov
sub
bound
xchg
roll
push
test
and
hlt
or
sbb
pop
mov
repz
outsb
arpl
insl
xchg
movsl
push
push
ja
es
insl
adc
inc
jp
sub
adc
sahf
movsl
add
nop
push
daa
push
rclb
mov
pusha
pop
cmp
loope
push
mov
fs
idivl
loopne
jge
mov
lahf
repz
xor
in
jecxz
push
ljmp
sub
insb
fst
push
outsl
pop
inc
adc
out
sub
psllw
ss
jg
inc
in
jns
in
mov
icebp
lret
pop
loop
shll
stc
shrb
xor
sub
mov
dec
mov
and
or
push
popf
cmc
fidivl
xor
iret
sub
rolb
push
pop
mov
mov
clc
jge
jle
flds
repnz
mov
leave
pop
xchg
push
mov
or
aaa
test
adc
mov
lcall
adc
shrb
mov
push
jns
dec
adc
mov
mov
mov
in
pop
jg
dec
sub
loop
sbb
shll
jne
mov
xchg
sbb
ret
inc
xchg
ljmp
dec
int3
inc
out
loopne
adc
out
inc
sbb
jp
inc
pop
mov
lret
pushf
sahf
test
jno
dec
rcll
pop
repnz
insl
arpl
xchg
fstpt
cmp
mov
stos
stos
mov
or
popa
inc
xor
imul
add
dec
dec
jge
cmc
xor
lret
sti
sbb
pushf
mov
dec
cld
ftst
cmp
int
xor
mov
outsb
and
and
std
fdivrs
push
xor
mov
mov
cltd
xor
pop
dec
icebp
nop
shll
mov
jmp
xchg
push
xchg
and
push
inc
outsl
mov
mov
std
mov
add
in
or
or
cvttps2pi
imul
mov
inc
movsl
aas
out
ja
mov
scas
cwtl
mov
data16
mov
xlat
hlt
xchg
xor
ret
push
mov
sbb
sub
ret
in
test
push
dec
test
inc
pop
jg
adc
ret
adc
mov
mov
sbb
cmovns
dec
adc
insb
mov
cmp
push
std
in
testb
faddl
lds
jae
pop
mov
add
es
add
in
out
dec
int
shl
jl
xor
mov
dec
daa
mov
inc
int
xchg
dec
pop
outsl
cmp
in
cmpsl
mov
and
push
aad
and
dec
add
lea
out
pmuludq
addr16
cmp
xor
push
fdivr
mov
xor
mov
pop
mov
cmp
pop
inc
sbb
out
jmp
pop
mov
loopne
add
outsb
aad
xchg
jmp
dec
push
gs
jne
ret
and
out
imull
lods
out
lcall
in
scas
mov
jle
xor
or
out
loope
outsb
loopne
int
cmc
ret
xor
pop
push
lock
cmp
lcall
jl
popf
pop
push
xor
push
jo
fdiv
sub
mov
jbe,pn
repnz
decl
xchg
clc
and
test
insb
leave
dec
ds
cmp
outsb
add
sbb
pop
mov
mov
cli
add
mov
and
pushl
test
jecxz
fcmovne
jl
loope
in
inc
sbb
lds
and
aas
or
sub
push
test
jne
sbb
aaa
stos
dec
or
xchg
pop
dec
push
push
sub
js
add
or
pop
or
in
pusha
adc
inc
sar
insb
fstpt
adcl
xor
mov
pop
shlb
das
pop
sti
mov
data16
fstps
fldcw
repz
int
cmpsl
push
pop
mov
dec
add
cmp
int3
cwtl
pushf
gs
push
into
push
mov
pop
mov
cmpsb
stos
xchg
and
in
mov
push
jge
cmp
and
mov
shlb
pop
lret
dec
xchg
or
adc
out
pop
push
out
cld
inc
faddl
inc
ret
nop
dec
ljmp
xchg
cmpl
outsl
inc
jbe
jnp
mov
out
mov
mov
dec
xor
in
mov
xchg
add
push
inc
sbb
mov
push
js
int3
call
inc
inc
pop
inc
int
popa
jl
out
pop
test
lahf
mov
jo
xchg
or
fiaddl
cld
sub
sbb
loop
xchg
push
jno
leave
popa
lock
dec
js
xchg
push
adc
xchg
dec
jns
imul
orb
jl
push
xchg
dec
fcompl
jno
and
jne
xchg
outsb
or
fstpt
and
jb
in
dec
sub
jl
inc
scas
pop
inc
clc
les
dec
inc
mov
add
push
sbb
dec
push
and
lret
push
dec
jmp
cltd
mov
out
sub
dec
xor
ret
mov
addl
out
pop
ret
push
cmp
rorl
sarl
dec
in
fistpl
inc
pop
ja
les
lods
mov
push
jmp
rolb
jmp
fadds
daa
mov
faddl
rol
mov
cmp
ret
shr
lock
cmp
clc
arpl
rorl
imulb
mov
xchg
adcl
ret
scas
aam
orl
xchg
mov
xor
les
xchg
push
push
sbb
leave
mov
push
mov
repnz
sub
rclb
sbb
sbb
mov
jge
clc
icebp
sbb
jnp
jg
cltd
aam
xchg
mov
enter
jl
fidivrs
xchg
jnp
dec
icebp
mov
fs
fld
xchg
push
mov
mov
ds
imul
inc
push
or
cwtl
loopne
cmp
int
in
sub
lods
dec
adc
rcll
gs
cmc
ret
rol
cmpsl
movsl
cmc
add
dec
sbb
rolb
test
movsl
mov
or
push
jno
das
rcrb
xor
inc
scas
ret
cmpsl
push
cmp
hlt
shll
aas
cmp
push
push
ja
or
cmovbe
testb
cwtl
add
in
addl
ret
jle
push
ret
call
popf
sub
and
pop
push
and
pop
xlat
jns
aaa
cmpsb
pop
inc
aas
adc
je
popf
lods
ds
mov
dec
in
jmp
add
cwtl
aaa
push
xchg
ret
mulb
jb
adc
inc
mov
aam
in
imul
lea
push
xor
or
add
leave
int3
dec
inc
sbb
mov
and
jmp
or
aam
adc
adc
cli
lahf
das
adc
mov
and
add
sbb
pop
dec
mov
sub
cmc
add
and
mov
dec
xor
inc
jae
pop
cltd
adc
mov
xor
mov
pop
dec
sub
sbb
jge
cmovbe
cmc
mov
in
stos
addr16
lret
xchg
leave
cmpsl
jno
add
mov
stc
mov
insb
stos
daa
pusha
je
sbbb
stc
mov
push
or
data16
push
xchg
outsl
and
hlt
jmp
in
ljmp
dec
push
sti
add
jmp
add
or
ljmp
dec
movsl
in
xor
into
xchg
lcall
or
out
xchg
xchg
js
shrb
push
and
cmp
je
rcll
dec
and
stc
enter
pop
mov
add
gs
loope
je
dec
dec
insl
fyl2x
adc
adc
push
decb
xor
test
stos
lock
sbbl
push
jge
cmp
push
test
mov
and
sbb
repz
addr16
pop
or
push
sub
cwtl
fcmovbe
mov
add
test
aaa
call
jne
inc
mov
xor
mov
mov
es
dec
loopew
mov
in
es
out
nop
adc
push
cmp
mov
ljmp
aas
lock
jmp
aad
loop
inc
or
jge
mov
mov
sub
aam
mov
jae
jo
loope
push
imul
add
xor
shll
sub
add
clc
push
mov
and
or
mov
iret
aad
insb
dec
in
and
sahf
outsl
or
jp
mov
jg
adc
cmc
mov
add
or
mov
loop
std
leave
inc
jbe
sbb
enter
pop
jnp
or
and
ret
fcoms
shrl
xchg
in
xchg
sti
xor
sbbl
in
mov
and
aad
push
dec
jo
mov
out
sbb
orb
fsts
xchg
out
mov
or
imul
sbb
pop
call
mov
or
scas
pop
adc
addr16
push
jnp
lock
push
cli
clc
rcl
ficomps
mov
andb
or
xchg
inc
inc
shlb
pop
test
xlat
jb
lcall
mov
lret
stos
mov
pause
jge
aam
xor
cltd
mov
fstps
adc
dec
sbb
mov
nop
mov
sbb
sbb
push
mov
cmpsb
or
daa
cmp
ss
pop
pop
xchg
test
je
pop
jo
dec
fwait
push
es
push
push
xor
push
add
cwtl
add
mov
cmc
cmc
ja
cmp
je
test
mov
out
std
jg
pusha
sub
sbbb
xchg
mov
jnp
mov
xor
scas
push
push
sbb
pusha
jno
xorl
stc
lret
cs
nop
sub
daa
xchg
push
push
sti
mov
insb
fs
jmp
or
xchg
and
or
roll
aad
inc
out
scas
stos
rorb
rcr
xchg
sarb
push
xchg
rol
jns
push
and
sub
pusha
sub
push
sbb
test
inc
xor
testb
jbe
jp
nop
cltd
dec
enter
sub
xor
das
mov
mov
cmp
aam
in
fistpll
movsb
cwtl
push
addr16
and
call
or
and
js
inc
cmp
dec
pop
popf
jmp
dec
cld
loope
mov
adc
dec
int
fucomip
scas
sahf
pop
lods
xor
xchg
mov
sbb
pop
icebp
fcmovne
fdivs
sub
inc
mov
fcomip
je
aaa
bound
lea
pop
test
into
icebp
call
cmc
dec
cwtl
ret
jecxz
fisubrs
sub
sbb
mov
cli
and
out
jbe
testb
add
push
int3
jno
pop
pop
pop
popa
and
push
aaa
jno
cmpb
jl
inc
inc
jmp
pop
pop
bound
adc
or
xor
dec
sti
popf
enter
xchg
dec
fs
jae
adc
std
loope
ja
lfs
xchg
nop
cmpb
aaa
repnz
dec
add
dec
sbb
adc
dec
sub
pop
dec
sbb
scas
or
sbb
sub
mov
dec
sti
lock
in
mov
adc
xchg
mov
sub
xchg
out
push
pushf
sub
and
mov
mov
call
jae
pop
es
inc
movsb
pusha
and
aam
lcall
lss
sbb
fmuls
jle
int
xor
add
hlt
outsb
data16
sub
xchg
mov
stos
test
shll
loopne
pushf
imul
imul
lods
jecxz
cmp
pop
jmp
inc
movsb
imul
mov
jl
pop
pop
mov
sarl
jle
sbb
xchg
dec
mov
mov
inc
sti
es
sarb
and
sahf
xchg
bound
mov
data16
xor
pusha
sbb
cli
fsubl
mov
imulb
fs
divb
sbb
or
mov
add
jg
dec
outsb
push
xchg
lret
iret
lret
call
xchg
dec
stc
mov
jle
test
loope
and
out
hlt
xor
data16
ffreep
lcall
mov
and
mov
out
js
jge
jnp
cs
mov
ja
sub
adcl
sbb
lahf
jbe
or
pop
lcall
rclb
insl
daa
push
jecxz
jne
idivl
shrl
std
mov
inc
popf
xchg
jnp
js
jecxz
lods
mov
repz
or
rorl
add
and
xor
enter
hlt
add
inc
add
outsb
pop
movsl
push
sbb
out
jno
fs
in
aam
xchg
sbb
fwait
pop
flds
lcall
or
jl
add
push
loope
pushf
clc
outsb
sub
mov
orb
das
push
scas
lods
jbe
test
jo
xchg
mov
mov
notl
lock
shlb
repnz
add
push
mov
inc
xchg
fwait
stos
and
pop
or
inc
inc
dec
sarb
lock
mov
std
cmp
das
lahf
jp
adc
xchg
lahf
pop
movsl
iret
fistps
cmp
es
pusha
leave
and
imulb
mov
lock
jno
inc
jg
inc
xor
add
roll
add
push
sti
aas
sub
addb
sahf
lods
arpl
jbe
repnz
out
std
loopne
loope
xlat
fcmovb
pop
xor
jae
cmpsl
add
add
movsl
pop
clc
sub
mov
inc
and
or
mov
mov
idiv
pop
xchg
and
mov
or
push
insl
push
hlt
mov
nop
mov
push
add
cmp
xor
dec
out
mov
sbb
sub
inc
dec
lret
jae
daa
movsb
les
mov
icebp
push
scas
dec
inc
in
jae
adc
daa
sbb
ficoml
lret
adc
frstor
xor
cld
inc
inc
sub
lods
std
fadd
testl
inc
mov
and
and
ret
mov
cs
push
dec
scas
inc
mov
mov
jne
iret
cld
cs
scas
dec
scas
clc
andb
jecxz
mov
lods
sbb
fsubr
and
adc
xor
dec
sbb
lods
repnz
shll
adc
adc
add
jnp
sbb
or
sahf
aaa
aaa
bound
push
repnz
jmp
fwait
mov
sub
aaa
pop
data16
loopne
fnstsw
vpcmpgtb
dec
jbe
xor
fwait
dec
stos
sbb
loop
repnz
ret
pop
scas
dec
and
sub
cmpsl
jae
push
in
roll
fdivs
lret
jae
mov
movsb
adc
mov
mov
sub
jmp
push
pop
sub
cmpl
cmpsb
and
push
and
dec
pop
cmp
inc
in
sub
adc
push
jne
mov
andl
in
sub
push
repnz
xor
adc
lods
test
jge
daa
and
sbb
push
push
xchg
mov
sub
cmp
mov
push
mov
das
jbe
das
push
mov
imul
fmull
repz
adc
cmpsl
stos
mov
jge
lods
addb
jge
inc
sbb
movsb
dec
or
in
movsl
int
dec
jae
stos
shl
and
push
loopne
jnp
pusha
pop
out
xchg
movsb
loopne
sub
fwait
lods
or
ljmp
or
mov
adcl
jo
push
test
mov
adc
test
jge
shrl
mov
arpl
lock
adc
jge
jmp
jns
or
xor
repnz
inc
xor
out
xor
mov
js
and
cmpsl
clc
stos
dec
in
fistl
ficoms
jnp
sbb
xor
sub
ret
jns
pop
pop
jne
fistps
out
dec
xlat
les
in
and
in
out
sbbl
and
push
mov
dec
cmpsl
push
xchg
xor
xchg
and
lret
add
fcomps
jae
cmp
push
fistpl
pop
dec
lea
inc
cmp
sub
stos
movsb
push
ljmp
sbb
stos
add
mov
xor
inc
mov
test
dec
jl
movsb
pop
les
or
lods
out
out
cmc
fisttpl
mov
dec
orps
pop
orb
and
mov
pop
xor
in
outsb
inc
loope
mov
ljmp
push
jecxz
jns
int
std
cmp
out
cmpsl
xlat
repnz
sub
pop
ret
scas
mov
sub
icebp
movsb
outsb
inc
push
fidivl
add
mov
mov
aas
cmc
es
jge
sarl
out
ja
push
cmp
scas
aam
xor
mov
xor
lea
push
push
or
pop
add
bound
cmpsb
orl
insl
add
sub
cmc
fsubrl
cmc
shll
mov
adc
add
std
loopne
hlt
xor
inc
sub
repnz
mov
dec
enter
mov
push
push
idiv
das
mov
fwait
outsb
mov
lahf
imul
or
mov
dec
xchg
pop
loop
or
xchg
xor
lods
imul
jb
scas
pop
lock
in
ret
sbb
mov
lock
mov
lods
cmpsb
clc
jns
daa
mov
xor
nop
jge
pop
cmp
mov
and
xchg
call
jl
lcall
xchg
fidivs
fmul
psadbw
insl
rol
ja
jb
fbstp
mov
mov
lret
mov
stos
inc
adc
mov
xchg
clc
mov
inc
scas
aas
and
jb
into
insb
mov
jns
pop
mov
sbb
jmp
lahf
shrb
in
iret
dec
out
bound
sub
addr16
imul
out
daa
imul
cmpsb
mov
push
dec
fldcw
xchg
negl
mov
shll
add
or
cmp
stos
lcall
fs
mov
mov
mov
ret
dec
dec
out
cmpsb
ds
sbb
adc
xor
or
inc
mov
mov
out
loope
in
dec
mov
mov
das
mov
gs
rcr
out
jno
es
pop
push
dec
add
popf
shrl
xor
or
sqrtps
or
jle
cmp
mov
lock
divb
xchg
movsl
inc
xor
xorb
jno
mov
mov
adc
push
or
jecxz
fnstcw
mov
pop
shrb
in
mov
repnz
insb
or
cmpsb
repz
or
lds
stos
imul
mov
cmp
loope
push
dec
es
sahf
out
or
inc
arpl
popf
lock
jp
pusha
insb
loope
and
repz
leave
sbb
hlt
push
loopne
scas
push
mov
cmp
shr
das
cmp
scas
fwait
mov
mov
and
outsb
pop
mov
mov
in
sub
out
cmpsl
mov
jecxz
js
jbe
repnz
push
xor
inc
js
add
jecxz
movsb
popf
push
xchg
xor
jle
testb
les
sub
sub
xchg
lea
jmp
idivb
sbb
jl
xor
inc
cmp
aas
fst
jecxz
idivb
lahf
shll
cmp
sbb
rcl
mov
and
sbb
mov
cmp
in
xor
sub
clc
cmpsl
mov
cmp
jle
js
imul
ja
adc
xor
sub
push
inc
shr
out
mov
mov
pop
loop
in
in
sbb
fdivrl
pop
gs
shll
mov
imul
adc
pop
js
test
insb
adcl
jge
mov
dec
and
mov
leave
mov
pop
inc
adc
jge
test
ret
adc
fdivl
jae
push
jne
daa
jge
dec
xor
add
push
hlt
cld
mov
ret
cltd
lcall
outsl
lock
cmp
ss
movsl
jns
or
add
sub
int
add
fcomi
rdmsr
js
dec
fcomip
movb
test
xchg
push
out
fcompl
jo
cmp
sbb
nop
pop
jge
sub
xor
cli
out
icebp
out
or
adcl
int3
jne
mov
data16
aam
mov
dec
cld
mov
vorps
cmpsb
adc
sub
pop
xchg
mov
cmpsb
add
rcr
or
loop
add
in
nop
xchg
stc
lods
and
jp
and
push
mov
mov
movsb
ret
pop
hlt
nop
cmp
pop
cmpsb
cwtl
cmp
lea
cmp
scas
mov
decl
fcom
fists
and
addr16
push
xchg
into
add
dec
fwait
out
mov
imul
pop
cmp
mov
into
pop
jno
inc
out
test
add
das
mov
out
cs
mov
adcl
jle
and
pop
imul
inc
cli
jle
sbb
test
out
mov
daa
mov
and
test
out
xor
push
adc
and
pop
cmp
add
inc
sub
jmp
movsb
sbb
and
jb
fwait
jmp
lds
xchg
pop
pushf
sub
inc
mov
ljmp
sbb
lods
adc
sub
mov
loope
push
or
iret
repz
sub
pusha
lock
imul
add
jb
call
fidivrs
mov
cltd
mov
cltd
cld
mov
test
dec
dec
out
xorb
in
popa
je
dec
iret
sub
repz
mov
out
xor
and
and
sbb
pop
stos
jg
test
in
testb
xchg
lcall
sbbb
dec
ds
and
inc
xor
lcall
pop
es
insb
sbb
ja
scas
jmp
fwait
sti
sub
push
jno
adc
jae
add
jle
jle
loopne,pn
jno
dec
pop
outsb
sub
out
pop
fwait
movl
mov
mov
out
fwait
movsl
pop
mov
jmp
pop
push
mov
lahf
cltd
insb
dec
push
fsubrs
inc
sub
das
sbb
sub
outsb
mov
lock
pusha
lahf
mov
repz
out
inc
sub
jnp
xchg
xchg
addr16
addr16
sahf
icebp
xor
in
pop
cmpsb
fdivrs
in
adc
pop
pop
sbb
iret
loop
pop
jno
push
lds
mov
repz
push
shll
mov
stos
fs
mov
cmp
or
sub
cmp
lret
mov
js
sbb
inc
ja
mov
sub
push
add
mov
jmp
jnp
bound
setne
inc
scas
mov
pop
jae
out
mov
repnz
ds
sub
pop
mov
ds
ja
jecxz
dec
mov
popa
pop
into
adc
pop
call
mov
jge
pop
fnstsw
pushl
add
imul
sarb
subl
lock
arpl
jno
jmp
sub
adc
cmpb
sbb
rclb
icebp
dec
out
inc
call
call
jno
fidivrs
cmpsb
dec
sbb
dec
and
clc
mov
mov
push
xchg
xor
lods
adc
dec
add
addr16
dec
adc
enter
and
and
aam
add
pop
cmp
sbb
sub
or
popa
dec
lea
or
lcall
daa
lahf
add
push
cmp
push
sub
adc
adc
fnsave
lcall
outsb
fidivrs
jmp
lods
push
jg
out
pop
lea
jmp
mov
stos
iret
mov
dec
fwait
pop
test
and
xor
pop
pop
jns
cmp
cmpb
out
and
jg
out
aas
xor
cmc
inc
and
xchg
xchg
mov
daa
xchg
lds
das
mov
or
hlt
sub
adc
and
shlb
inc
test
jb
popa
popa
bound
xchg
orb
cmp
ljmp
mov
pop
mov
loope
vmwrite
mov
in
mov
mov
xor
xorl
or
and
xor
gs
out
ja
fiaddl
in
daa
cld
lods
xchg
lcall
xchg
shll
mov
add
and
xchg
lds
push
add
loope
push
shr
or
push
iret
dec
cmp
add
rcrl
add
pop
dec
mov
xchg
popa
scas
mov
jg
inc
nop
fistps
mov
and
adc
adc
testl
sbb
test
push
xorl
pop
push
lods
jg
adc
into
data16
mov
in
cmpsl
mov
jb
aaa
pop
pop
jns
add
adc
jl
je
adc
push
mov
adc
dec
gs
iret
test
inc
jbe
repz
pusha
jns
xor
mov
outsl
mov
jmp
popa
jle
bound
rclb
js
ds
xor
push
stc
cmpl
xor
sbb
dec
jmp
arpl
add
out
dec
dec
pop
mov
add
mov
cmpsb
popa
pop
scas
movsl
hlt
lods
dec
pop
mov
xlat
fucomp
xchg
sbb
fstps
fcomps
in
insb
pop
arpl
mov
xchg
push
jae
pusha
stos
movsl
xchg
test
ljmp
fmul
dec
add
lea
movsb
jge
jecxz
jae
subb
pop
pop
dec
mov
popf
jo
mov
mov
std
aas
push
ret
fisubrs
inc
pop
je,pn
fmull
lret
xchg
cwtl
and
mov
cld
and
xchg
sbb
cmp
jp
jne
test
jg
sarb
or
loopne
xor
mov
ja
rclb
les
mov
int
pop
xchg
lcall
push
push
enter
mov
inc
push
add
push
lret
dec
jge
cmp
test
lcall
pop
cmpsb
sub
or
fsubrp
and
fstp
xor
inc
dec
cmp
mov
pushf
push
xchg
outsb
rcrb
pushf
cwtl
out
lods
outsb
jns
mov
push
sbb
xchg
mov
mov
out
lock
dec
and
loop
mov
fnstsw
and
or
ja
jl
xor
xchg
xor
add
mov
xchg
fcomps
arpl
push
aad
into
cmpsb
inc
dec
mov
jnp
xor
pop
pop
inc
push
sbb
fcmovnu
into
dec
and
sub
fnstcw
mov
inc
or
and
mov
movsl
dec
cmp
mov
arpl
add
jl
sub
sbb
out
mov
or
addr16
xlat
clc
jbe
add
mov
repz
mov
insb
mov
insb
push
add
pop
lret
push
lahf
mov
aas
inc
nop
push
mov
es
add
mov
cli
fnstenv
pop
in
in
lcall
dec
negl
es
and
cwtl
dec
jbe
push
ljmp
jmp
or
in
rolb
xor
dec
iret
sbb
outsb
xchg
and
inc
pop
shl
das
fadds
leave
leave
xchg
sbb
mov
dec
sub
add
dec
pushf
test
cmpsl
imull
dec
pusha
js
insb
push
loopne
sub
pop
fucomp
ret
loop
xlat
mov
jno
cs
adc
movsl
xor
aad
jmp
mov
lahf
xor
test
add
dec
repnz
dec
push
fdivrs
pop
or
aam
test
pop
loopne
jg
or
xchg
mov
fs
pop
imul
add
inc
xor
addl
jbe
lret
por
xchg
cli
add
push
and
xor
popa
mov
ss
shlb
jo
and
sti
loopne
pop
xchg
and
ljmp
int3
mov
push
int
rcrw
pop
unpcklps
adc
xor
jne
insb
mov
lods
pushf
pop
lcall
jb
sub
imul
loop
dec
cwtl
cwtl
jg
adc
add
scas
aaa
bound
mov
xorl
in
lcall
stc
repnz
aaa
loopne
arpl
lds
mov
les
adc
xor
xchg
xchg
pop
cmp
mov
add
xor
shrl
add
mov
repz
dec
push
in
gs
inc
dec
cs
add
sbbb
mov
cmpsb
aad
iret
test
repz
clc
mov
iret
enter
push
mov
ret
fs
mov
inc
jae
mov
xchg
push
enter
mov
stos
sbb
sub
push
int
pop
sbb
push
loope
aam
dec
scas
outsb
fbstp
out
movsl
aaa
jl
push
mov
jo
repnz
or
ljmp
mov
jns
cwtl
std
inc
mov
inc
jl
in
jmp
mov
loop
shlb
mov
push
jge
xor
cmpl
ret
push
mov
std
mov
xor
call
push
movq
mov
sub
dec
mov
sar
test
leave
cmpsb
je
mov
fwait
leave
xor
hlt
lods
out
lcall
adc
push
sub
lea
mov
cmc
daa
and
sub
xchg
rcrl
cmp
insb
sbb
popf
cmpl
aam
test
sahf
xor
push
sbb
into
mov
mov
rol
outsl
mov
xchg
out
mov
push
lock
loop
inc
call
fmull
xor
ret
xchg
adc
repnz
arpl
shrl
outsb
fidivl
jp
roll
pop
xchg
inc
mov
push
xor
add
xor
push
mov
jmp
xor
lcall
cmp
mov
ljmp
int
and
test
xchg
push
mov
pusha
inc
mov
movb
stos
lea
mov
shll
mov
sahf
inc
ljmp
inc
mov
sbb
mov
mulb
popa
dec
adc
adcb
dec
roll
add
mov
push
aaa
push
mov
inc
xor
xchg
push
mov
adc
mov
or
or
cmp
xchg
add
push
pop
or
daa
call
inc
cmp
popf
rol
sti
pusha
sub
pop
inc
push
sub
add
sbb
out
sbb
sti
add
adcb
jge
inc
cmc
int3
in
adc
adc
inc
shlb
mov
popf
mov
mov
pop
adc
mov
inc
or
mov
jg
loop
pushl
dec
mov
fimuls
cmpsl
sti
cmc
pop
data16
jo
push
lea
sbb
pusha
dec
dec
pop
mov
movsl
lcall
add
push
xchg
sub
inc
mov
xor
shll
jns
in
test
dec
and
stos
rorb
in
mov
es
mov
idivb
dec
xchg
push
fs
pop
ds
dec
cmpl
add
fimuls
in
and
sub
sbb
dec
mov
adc
pop
jp
jg
ficoms
mov
dec
push
inc
inc
adc
xor
xchg
daa
push
and
lock
mov
xchg
out
sbb
push
rcll
and
flds
jbe
popf
addr16
push
in
mov
mov
sti
mov
mov
test
xor
mov
inc
lds
pop
cli
orl
lods
loopne
rdtsc
dec
push
imul
insl
xor
enter
sub
and
add
outsl
push
insb
sarb
std
ret
sbb
sbb
leave
dec
psubd
mov
pop
or
push
cmc
les
rclb
jne
mov
mov
mulb
or
pop
mov
sbb
inc
jmp
mov
lcall
ret
repz
pop
add
push
inc
scas
jl
icebp
imul
cmp
mov
loopne
adc
pop
test
mov
aaa
cmpsl
mov
addr16
mov
les
mov
xchg
pusha
testb
mov
mov
sbb
sbb
push
sbb
test
push
cmp
vpmaxub
sub
sti
or
into
js
testb
xor
in
lock
add
cwtl
jecxz
nop
mov
and
ss
sub
in
leave
gs
jle
push
repz
add
scas
add
dec
mov
sbbl
nop
stc
lods
inc
sbb
ss
cmpsb
into
mov
inc
adc
ret
mov
push
inc
jg
jle
mov
push
cmpsl
mov
jb
loopne
inc
adc
iret
lea
mull
pusha
sbb
inc
mull
js
push
out
jne
mov
lock
ret
mov
inc
cmp
and
das
or
sbb
cmp
xchg
gs
fisttps
ficoms
test
shll
rcrl
stos
sahf
lcall
mov
es
push
inc
xchg
rcrl
pop
mov
test
enter
je
dec
out
pushf
scas
enter
dec
jbe
subl
gs
lret
jl
rorb
dec
push
lret
cltd
arpl
cmp
cmpsl
mov
cli
ficomps
mov
add
fisttps
dec
pop
dec
jl
inc
add
aas
jmp
inc
nop
xchg
ds
mov
inc
mov
push
test
int
icebp
pop
test
lahf
push
dec
cmpsl
jp
or
mov
rorl
cs
das
push
imul
jl
push
mov
inc
push
pop
repnz
push
pop
test
mov
cltd
pusha
pavgw
stc
rorl
clc
imul
iret
jb
dec
aam
fucomip
pop
pop
jmp
sbb
inc
or
lret
hlt
xor
stos
icebp
idivl
and
sbb
jmp
mov
inc
movsb
mov
les
and
nop
inc
mov
shl
push
outsl
sbb
shlb
lods
push
xor
cmc
mov
sbb
sbb
adc
and
lret
cltd
xor
mov
mov
aad
adc
xor
test
sahf
inc
pop
xor
cltd
adc
pop
scas
sbb
dec
data16
aas
xor
push
out
sub
jmp
out
fdivrs
popf
sti
dec
mov
arpl
ja
test
pop
lret
scas
ret
loopne
cld
sar
dec
jae
push
cmc
jb
jb
out
pop
mov
push
xchg
add
fsubr
pop
xchg
and
adc
aas
add
adc
push
mov
or
adc
movsb
jp
mov
mull
bound
in
data16
ja
and
mov
sub
mov
aam
in
inc
jno
push
and
insl
popa
xor
pop
or
or
lods
or
daa
dec
stos
xchg
movsb
mov
mov
mov
xchg
jns
lret
test
mov
dec
adc
je
add
dec
xor
adc
push
mov
fwait
das
xor
push
das
movl
pop
lds
dec
mov
adc
push
sub
pop
dec
xchg
sbb
inc
aam
pop
test
xor
mov
adc
gs
pop
lret
mov
pop
sbb
adc
fstl
aas
mov
jecxz
fs
cmpsl
mov
jo
pop
lea
mov
ret
sysexit
movsb
fprem1
mov
repz
cmpsl
stos
fcompl
or
mov
xor
jo
or
ret
mov
movsl
mov
sarl
add
int3
mov
mov
sbb
push
dec
jb
cltd
hlt
out
aas
cmpsb
adc
sub
in
jae
mov
jae
bound
adc
idivb
pop
adc
push
insl
cltd
fdivrs
movsb
stos
xorl
xchg
sbb
or
cs
insl
arpl
inc
push
ror
dec
adc
jp
hlt
sub
into
and
imull
dec
popf
sub
mov
or
mov
cmpsb
pop
ljmp
pop
xor
and
hlt
cld
pop
xchg
push
mov
dec
ret
pop
cmp
and
sti
dec
inc
int
pop
sbb
pop
ret
and
imul
lret
add
sub
in
jmp
push
loope
mov
je
outsl
mov
lea
inc
dec
mov
loope
pop
ja
pushf
or
mov
lret
inc
outsb
aas
cmp
addl
out
dec
addr16
xchg
sub
mov
ds
arpl
mov
addr16
lret
sbb
enter
in
dec
shl
daa
loop
lods
dec
call
mov
test
imul
mov
xor
or
jae
push
fidivrl
js,pt
jnp
xor
xor
aas
repz
xchg
push
outsl
push
addr16
push
push
aaa
pop
push
lahf
add
mov
or
lods
push
xor
movsl
add
dec
fadds
ret
mov
sbb
cmp
hlt
inc
jb
jmp
and
stc
jmp
mov
dec
mov
fbld
mov
sbb
pop
jb
data16
add
jo
xor
xor
sbbb
xlat
fwait
gs
hlt
loope
mov
cwtl
mull
jecxz
mov
sbb
jl
cld
ret
jl
jnp
into
pop
mull
mov
enter
stc
or
mov
xchg
jns
gs
xor
es
add
ds
sub
push
fsubrl
fsubrs
and
inc
fidivrl
sbb
shrb
jnp
xor
pusha
inc
sub
xor
or
inc
inc
sbb
and
nop
and
rcll
jnp
leave
dec
lods
and
xchg
cld
or
jl
cltd
test
movsl
dec
insl
mov
scas
mov
mov
mov
or
and
mov
add
es
mov
dec
int3
mov
bound
push
adc
int
movb
jmp
aam
sbb
jnp
jp
int3
jns
cmpsb
dec
frndint
pop
sub
dec
lahf
rcrl
pop
shlb
jl
mov
sbb
lret
adc
lock
ljmp
inc
daa
sbb
mov
cmp
outsl
xchg
inc
cmp
and
pop
js
cmp
lahf
mov
lret
pop
xchg
sbb
mov
pusha
or
mov
cmpl
mov
or
rolb
insb
daa
pop
dec
mov
pop
pop
xchg
push
mov
pop
sbb
sub
or
fucom
movsl
ds
cmp
cmp
pop
fisubl
add
mov
je
pop
xor
ror
pop
lock
fs
dec
scas
fcmovu
add
jmp
loope
icebp
enter
adc
repnz
jmp
movsb
cmp
das
call
cmp
loope,pt
negb
loop
jno
pop
aam
or
mov
jae
sub
mov
repnz
insl
xchg
arpl
addr16
inc
add
mov
dec
sbb
js
cwtl
jne
scas
testl
inc
aas
cmp
sbb
and
pop
add
pushf
jmp
call
sub
test
nop
xor
addb
dec
adc
cmc
cwtl
lret
outsl
pushf
mov
les
ja
jg
sti
aas
sub
jb
pop
stos
dec
pushf
push
fs
jecxz
inc
xchg
xchg
inc
imul
add
in
mov
cld
push
fnstenv
mov
fidivrs
imul
and
jns
cmp
pop
inc
xor
mov
inc
adc
into
fsubs
jne
imul
repnz
jne
scas
dec
inc
imul
jnp
scas
inc
faddl
push
jmp
rorl
jo
and
icebp
adcb
xchg
in
sub
clc
and
cmp
out
hlt
add
sub
inc
jg
fcmovnu
mov
mov
push
mov
pop
jae
and
mov
adc
push
insl
pop
aad
adc
mov
fisubs
nop
adc
test
jbe
or
pop
orl
jns
cmp
inc
dec
push
das
pop
dec
xor
incl
fisubs
lods
jecxz
pop
adc
clc
cmp
jecxz
lea
and
push
iret
xchg
cld
dec
adc
jnp
cmp
aad
lods
test
aam
adc
popa
jg
mov
repz
insl
cmp
or
inc
stos
sub
jbe
adc
xlat
popa
push
pop
and
shr
bound
mov
mov
inc
fdivl
jo
adc
mov
popf
cmpb
sahf
push
aas
xchg
mov
stc
hlt
ds
add
push
lods
sbb
jb
lret
rcll
dec
sti
sub
mov
pop
inc
outsb
stc
mov
neg
push
inc
or
jnp
mov
js
rorl
fistpll
mov
or
dec
sub
outsb
popf
sub
pop
aas
mov
std
xor
addr16
outsl
dec
dec
lcall
jne
stc
les
sbb
sbb
jg
mov
mov
gs
xor
push
mov
call
loopne
cmp
xor
call
cmp
jg
sub
adc
out
movsb
mov
outsl
jo
mov
xor
es
mov
sbb
sbb
adc
jge
or
out
xbegin
adc
lret
popa
push
int
mov
std
sbb
mov
rep
setle
stos
in
inc
addr16
cltd
popa
outsb
cli
jne
icebp
mov
jl
push
xor
inc
mov
jb
sbb
hlt
pop
ror
xor
sahf
scas
sub
cli
mov
mov
cld
daa
repz
jge
dec
in
jo
add
iret
imul
fs
and
lods
repz
lcall
push
out
xorb
adc
dec
lods
addl
popa
push
mov
arpl
insl
les
push
lcall
add
adc
popa
jl
lods
loop
in
ljmp
ret
xchg
movsb
cltd
inc
or
xchg
gs
mov
mov
jmp
lret
push
and
scas
rcrl
cmp
jne
xor
fidivl
mov
pushl
inc
and
pop
inc
and
icebp
mov
mov
pushf
push
shlb
xchg
pop
jns
sub
lret
cwtl
jnp
pop
fsubl
push
mov
ret
sarb
jecxz
adc
pop
adc
lea
int
sbb
adc
mov
ljmp
jno
jmp
push
out
mov
push
inc
mov
mov
sub
fwait
stos
ret
lret
pop
push
loopne
sahf
push
sbb
add
into
test
add
jl
xlat
pop
mov
lock
jge
cltd
fisttpll
dec
jg
insb
out
lahf
sub
pop
pop
xor
mov
call
and
add
mov
insl
enter
jecxz
mov
and
xor
nop
movl
jo
xor
shlb
push
push
insb
rolb
adc
lods
jbe
repnz
and
lcall
ret
pop
dec
add
pop
aas
data16
inc
pop
mov
dec
popa
sbb
xchg
out
jo
push
lods
mov
xchg
jo
or
pushl
imul
cmp
or
adc
mov
pop
sub
xchg
sahf
inc
notl
das
loope
cmp
popa
insl
sbb
andb
fildl
push
shll
or
pop
fildl
out
and
int3
or
xor
adcl
loop
out
outsl
mov
add
jne
mov
scas
sbb
cmc
add
out
add
out
jecxz
ja
mov
dec
mov
cli
movsl
push
clc
jl
inc
push
lahf
mov
inc
sub
bound
nopl
push
daa
sub
adc
jp
ja
jg
daa
lock
dec
xchg
mov
add
add
xchg
lret
sti
fldl
scas
cmp
xchg
ss
popa
cmp
or
mov
fwait
leave
shrl
loop
and
fcomps
lcall
ja
xchg
popf
in
fcomp
jo
mov
outsb
int3
mov
ret
jb
mov
and
inc
or
pop
sbb
ss
notl
push
pushf
push
and
jo
into
cli
cltd
data16
mov
dec
or
out
xchg
sub
mov
mov
push
in
or
cltd
mov
inc
push
into
movsl
sbb
in
dec
xchg
jl
dec
cmpsl
scas
and
mov
leave
test
insl
xchg
jle
fidivrs
ljmp
fimull
pop
hlt
lods
fiaddl
test
and
sub
or
test
pop
adc
mov
sub
jne
clc
sbb
jmp
test
lea
mov
add
mov
pop
lret
add
lret
lcall
push
xchg
lods
sar
sbb
mov
inc
rolb
jle
divb
sbb
decl
or
arpl
dec
xchg
jmp
out
sbb
jle
jge
pop
jp
inc
fwait
jbe
pop
iret
outsb
cmp
cmp
das
loopne
test
mov
jns
iret
in
into
xor
sub
sub
jecxz
and
int
rcrb
rorb
mov
jle
or
mov
push
cmp
xchg
popa
cmpsl
ss
cmp
ret
push
orl
push
ljmp
popf
and
inc
push
xchg
push
aam
or
inc
es
imul
outsb
into
rol
int
push
cli
xchg
xlat
inc
and
cld
or
pop
and
dec
xchg
call
fwait
insb
ret
jp
pop
or
movsl
dec
mov
insl
shlb
test
fiaddl
inc
js
mov
lea
jo,pn
test
cwtl
iret
add
pop
js
jno
pop
jns
cmc
vunpckhps
xchg
ja
into
jbe
lods
adc
adc
xchg
stos
cmpsl
lret
pop
inc
xchg
add
xchg
mov
adc
popf
int
std
pop
mov
hlt
adc
add
ret
icebp
mov
xchg
fbstp
dec
sahf
clc
lcall
test
push
pop
jmp
or
adc
add
dec
pop
clc
shll
ljmp
mov
and
fnstsw
add
loopne
insl
daa
aad
adc
xor
jno
out
aas
dec
jno
adc
xchg
test
and
dec
xchg
fstpl
aaa
out
inc
cmp
xchg
sbb
and
pop
popf
movsb
mov
jae
in
mov
out
lds
adc
scas
mov
mov
pushf
jo
ljmp
je
cli
cmc
pop
inc
ret
sbb
inc
adc
shr
mov
popf
add
data16
pusha
cmpsl
add
mov
adc
cs
mov
test
loope
dec
cmp
mov
and
adc
cmp
test
shrl
sarl
mov
xchg
xchg
sahf
fists
ja
push
das
je,pn
pop
leave
push
enter
cmp
arpl
push
icebp
pusha
push
nop
push
ret
ja
add
inc
mov
jbe
xchg
fs
lods
sub
mov
pop
inc
xchg
or
sbb
pop
hlt
icebp
jmp
jl
das
adc
orl
xor
cs
push
inc
stos
push
dec
rorb
or
mov
adc
cmp
test
movb
dec
mov
orb
jb
jno
roll
aas
or
mov
push
orb
sub
cli
int
xor
outsb
push
mov
scas
and
or
imul
roll
in
arpl
sbb
dec
cld
clc
jb
out
movsl
mov
sub
dec
mov
jns
shlb
cmp
test
es
js
lds
sti
iret
sub
fstps
mov
mov
imul
sbb
dec
jg
adc
mov
lret
adc
add
stc
imul
xchg
addr16
and
mov
mov
sub
dec
xchg
adc
mov
cmp
mov
orb
push
iret
cli
inc
scas
ljmp
imul
mov
inc
push
jle
jle
into
adc
cmp
and
jb
sbb
rolb
aaa
insl
pop
push
push
rclb
or
jbe
xchg
shl
fwait
loopne
mov
loope
or
cltd
iret
push
adc
sub
pop
inc
and
xchg
push
dec
lods
jecxz
mov
mov
mov
dec
arpl
gs
mov
push
enter
sti
dec
pop
pop
cli
add
fs
dec
mov
sbb
pop
es
mov
call
xchg
dec
cmp
ds
jno
in
add
in
in
cmp
push
jg
push
outsb
xchg
loop
and
push
scas
test
xlat
fldenv
hlt
subb
fists
adc
or
jecxz
xchg
mov
fs
gs
call
in
and
mov
shr
and
dec
or
sbb
jno
scas
push
test
call
loop
sub
xchg
aas
mov
jle
ja
cmp
adc
jae
mov
imul
stos
cmp
cmp
and
shlb
inc
push
xor
mov
lds
and
cmp
jl
addr16
int
test
cltd
fcoms
ja
or
sbb
cmpsb
and
cmc
mov
push
jbe
hlt
jno
ret
out
enter
mov
imul
fs
insl
pop
mov
dec
jp
mov
add
pop
dec
test
in
lret
loope
adc
dec
in
and
and
shrb
test
out
je
int3
cmp
xchg
scas
jbe
nop
cmp
sbb
mov
into
subb
rep
sbb
push
jmp
cmc
mov
mov
repz
cmpsb
jb
add
pop
mov
cmp
pop
push
fistpl
sbb
cmp
lahf
ds
cmp
cmp
std
adc
xor
push
xor
sbb
cwtl
adcb
or
inc
stos
data16
push
mov
inc
cmpsb
mov
hlt
aam
mov
cmp
xor
xor
cltd
testl
mov
cmpsl
test
pop
dec
in
inc
stos
loope
and
sbb
mov
jbe
xor
cmp
mov
js
xor
inc
in
push
clc
fbstp
and
dec
jno
aaa
ljmp
sub
pop
cmc
les
push
and
sub
mov
xlat
sub
es
sub
pop
dec
lret
int3
dec
sbb
sar
fstps
cmp
xor
or
mov
cli
xorl
ja
inc
inc
data16
repz
xchg
dec
mov
mov
ss
les
dec
aaa
xchg
xor
dec
push
mov
daa
outsb
sub
cmp
mov
adc
jg
decb
mov
mov
xchg
adc
or
into
fdivrs
dec
add
add
iret
mov
mov
daa
test
and
hlt
push
stos
dec
int
fucom
pop
push
jp
jp
mov
in
fnstcw
syscall
sbb
cmpsl
imul
adc
sbb
test
fdivr
outsl
or
lret
jne
push
mov
call
sti
jle
in
sub
pushf
pop
imul
lret
jno
sbb
or
jl
sti
lcall
mov
std
mov
inc
aam
xchg
ja
enter
jo
sub
add
lods
aad
jl
outsl
das
mov
fisubrs
movsb
bsf
ss
popa
and
mov
in
xchg
xchg
out
loope
mov
dec
jns
daa
dec
ret
imul
and
adc
lcall
cli
dec
movsb
sbb
xchg
push
inc
push
lret
pop
jae
fwait
adc
jne
mov
data16
gs
add
xchg
mov
lock
daa
pop
fldcw
xlat
rorl
mov
mov
sahf
loope
push
cmp
mov
sbb
mov
push
hlt
call
sbb
and
enter
std
pop
shrb
pop
sub
in
pop
cmp
aad
dec
jae
inc
push
sbb
lea
mov
sub
popf
rorb
pop
mov
jp
and
into
inc
ja
shlb
add
cmp
jb
in
aad
sub
add
xlat
ror
mov
mov
jl
and
in
xchg
sbb
out
adcb
test
aas
sbb
clc
sub
jl,pn
mov
mov
or
in
mov
lods
push
pop
sbb
in
sub
aam
mov
dec
jno
std
jl
mov
sbb
cs
aas
xor
out
mov
stc
cli
in
cmp
daa
jb
mov
in
pop
sub
mov
rcrb
test
push
fsubrs
cmpb
scas
lcall
lret
mov
pop
fsubr
or
addl
sub
bound
xchg
mov
cmovo
xchg
pop
std
adc
insl
shrl
push
mov
cli
insl
push
divb
das
push
cs
cwtl
add
out
icebp
pop
sbb
ss
fiaddl
test
out
loop
push
aas
in
push
and
pop
iret
pop
pushf
cmpsb
outsb
sbb
ja
ret
sbb
pop
lods
add
mov
stc
leave
and
jle
sahf
pop
nop
jnp
mov
and
mov
into
or
inc
out
sub
xchg
out
mov
inc
jne
xor
clc
mov
into
jg
rcr
jecxz
add
cmpsb
sub
lret
stos
ljmp
mov
mov
ficompl
mov
mov
scas
push
daa
lods
std
sub
out
ss
xor
pop
dec
iret
pop
bound
adc
push
nop
and
push
adc
sbb
out
pushf
xchg
sub
insl
pop
pop
push
iret
notl
add
test
xor
jmp
popf
and
notl
xchg
mov
rcl
mov
xor
cwtl
and
cmpsl
das
lods
pop
je
mov
push
sub
mov
cmp
stc
sbb
mov
fwait
ret
arpl
movsl
je
sbb
inc
sbb
es
fidivs
push
stos
lahf
mov
inc
repnz
pop
lock
insb
ljmp
xlat
sub
xor
add
aad
aad
loop
or
or
cmp
or
in
dec
insl
clc
dec
pop
push
imul
test
push
pop
jbe
sub
add
fmuls
lcall
jb
or
add
fstps
call
inc
lret
loope
mov
in
in
adc
pop
and
mov
movsb
cmp
jne
sbb
xchg
scas
fdivrl
pop
sbb
sbb
stos
mov
jno
xor
sahf
aaa
ret
cli
jns
fwait
ljmp
std
push
sbb
arpl
adc
cli
inc
mov
jb
sbb
in
lock
sbb
pop
out
ret
adc
xchg
rolb
popa
popf
sahf
test
insb
dec
jns
js
gs
mov
cmpsb
mov
cs
xchg
and
lret
add
mov
in
or
fidivs
sub
xchg
pushf
or
imull
loopne
scas
mov
fidivrs
cmp
and
bound
xor
adc
fiaddl
inc
or
sub
je
stos
fmull
sahf
fstl
mov
xor
or
dec
sbb
pop
cmp
aad
loop
insl
lods
mov
cmp
push
cltd
jl
aam
and
insb
mov
mov
pop
xchg
sbb
mov
and
dec
outsb
aad
xor
jbe
push
push
daa
fildl
jo
jns
adc
iret
adc
pusha
and
sti
cmc
push
xchg
mov
mov
cmpsb
movsl
daa
mov
fcomps
jg
mov
cmp
xor
pop
cmp
inc
cli
outsb
pusha
push
clc
pushf
fcoms
xchg
mov
pop
ja
insl
fmul
rclb
sti
mov
ja
xchg
sbb
pusha
mov
or
cmc
aad
adc
xlat
pop
jno
ja
push
push
push
dec
cltd
sar
pop
push
test
rol
pavgw
jns
gs
call
int
add
mov
push
mov
push
sbb
fs
sti
fnstsw
sub
or
fwait
or
test
xchg
adc
ss
inc
sbb
xchg
rclb
cmp
push
mov
xor
stos
insl
in
and
pusha
outsb
and
xchg
insb
push
mov
stos
mov
dec
xchg
inc
mov
xlat
jbe
mov
sub
call
jno
leave
mov
pop
jno
mov
jo
outsl
pop
and
enter
mov
lea
push
inc
cmp
jae
lock
xlat
pop
mov
leave
test
mov
push
std
fadd
xchg
or
out
fs
mov
lcall
addr16
dec
or
call
subb
lea
fcmovnbe
mov
add
pop
in
clc
push
int
outsl
mov
lcall
sub
sti
mov
cmp
aad
mov
xor
leave
and
adc
xchg
loope
icebp
lea
jge
and
jb
inc
cmp
cmp
cmpsb
fsubl
xchg
out
lock
std
and
or
int
out
dec
sahf
inc
out
fs
cs
sub
jo
or
test
sbb
mov
iret
repnz
das
xor
lds
xlat
jge
adc
xor
inc
insb
xchg
adc
lcall
sbb
cmp
pop
push
mov
popa
test
pusha
or
lahf
aas
xchg
clc
iret
dec
mov
inc
in
repnz
push
mov
mov
lret
xor
inc
int3
xchg
jb
leave
cmc
stos
xor
scas
outsb
mov
jbe
xor
scas
fstl
imul
or
call
jo
sbb
stos
mov
movsb
iret
adc
xchg
das
sub
sbb
adc
sbb
jae
sbb
loopne
dec
or
mov
mov
je
add
mov
icebp
mov
test
mov
inc
loopne
mov
pop
pop
loope
cmp
cli
xor
insb
enter
movsb
icebp
xlat
pop
rcr
cmpsb
aad
cmp
repnz
inc
in
imul
adc
mov
xlat
ds
aaa
loopne
jl
push
clc
add
outsb
pop
test
movsl
dec
cmpsl
jge
dec
repnz
stc
lcall
scas
xchg
stos
pop
aad
push
std
pop
mov
pop
lret
lahf
dec
push
movsl
jno
loope
fcmovne
insl
mov
pusha
pop
mov
out
in
dec
mov
jl
adc
ja
lds
pop
testb
pop
cli
inc
sti
jo
push
mov
outsl
sub
xor
xor
adc
stc
sbb
das
jl
mov
and
pop
fsubrl
cmpsb
inc
pop
ljmp
or
jmp
and
xor
cmp
ljmp
mov
jns
and
notb
mov
xor
aad
inc
mov
ja
jb
insl
and
and
js
cmp
loope
dec
adcl
xchg
pop
push
xchg
jecxz
cmp
inc
popf
sub
sti
xchg
sbb
jle
shlb
and
pop
mov
lret
sub
push
inc
mov
pop
mov
add
shlb
or
rcl
push
xchg
xchg
pushf
mov
lret
ss
cwtl
ficompl
cmp
lds
hlt
jb
pusha
pop
lcall
sahf
sbbb
add
cmpsl
jg
jg
nop
xor
mov
mov
sbb
and
mov
xorl
xchg
xchg
sbb
adc
into
pop
or
dec
cmpsb
sbb
pop
inc
mov
push
scas
pop
inc
dec
movsb
ficomps
in
cmp
mov
imull
mov
fwait
sub
sbb
jle
sub
add
clc
add
outsb
bnd
frstor
dec
test
pop
mov
mov
sahf
add
imul
xchg
movsl
mov
and
loope
mov
inc
cmpsl
xchg
sub
pop
add
sahf
sub
aaa
stc
andb
lock
mov
lcall
adc
xor
out
xchg
push
out
int3
call
pop
shlb
jle
lret
ja
xor
lds
xor
push
sbb
mov
sub
adc
or
adc
cs
sbb
outsb
outsl
inc
pop
sarl
sbb
xchg
mov
lds
roll
addb
fnstsw
fldt
std
cmp
xor
clc
cmp
pop
jge
les
out
lahf
movsb
mov
loope
sbb
sub
xlat
loop
mov
pop
jb
or
js
movsb
dec
arpl
jge
mov
in
xor
sbb
aaa
mov
bswap
jo
xchg
add
ljmpw
mov
jno
das
xchg
sti
mov
lcall
xchg
add
push
mov
push
adc
adc
cltd
pop
xchg
pop
pop
push
adc
std
pop
jp
dec
sub
push
lahf
out
outsb
scas
cmp
and
jle
fisttpl
xor
fwait
lret
les
clc
sub
xchg
aad
or
xchg
add
sbb
ret
enter
mov
mov
pop
pushf
imul
inc
jp
test
lret
cs
pop
fadd
dec
sbb
and
xchg
popf
push
mov
lcall
not
icebp
sub
in
rep
push
cld
mov
stc
add
xchg
sub
cmp
push
mov
arpl
movq
loopne
pop
jle
leave
mov
into
out
and
jecxz
mov
dec
test
sbb
inc
popa
cmp
rorb
mov
dec
push
jmp
outsl
or
sub
jecxz
jne
inc
jp
add
and
push
jg
pop
xchg
ds
or
enter
inc
jnp
sbb
lods
push
jmp
fnstcw
scas
push
rcrl
insb
imul
testb
out
addl
stc
push
ret
aaa
gs
mov
pushw
aas
mov
jno
in
cli
mov
and
cmp
mov
sub
pop
sub
insb
add
add
add
mov
add
xlat
arpl
or
mov
mov
fists
fmull
cmp
pop
lds
mov
ljmp
aas
leave
jg
lret
cmpl
mov
mov
cwtl
cs
rcrb
faddp
sti
push
xlat
shl
lock
int
rclb
int
test
aad
mov
dec
add
lcall
jb
mul
das
pusha
cld
push
ja
icebp
or
outsl
push
into
cmp
push
add
fcom
xor
jp
stos
xchg
push
add
aam
aas
push
mov
out
and
xchg
cmp
jae
push
mov
fsubrs
fisttpl
jns
or
in
ds
push
mov
xchg
pusha
jo
stos
dec
loopne
movsb
xchg
jno
in
pop
push
push
push
push
jl
jne
roll
adc
inc
shlb
fmuls
sbb
insl
enter
in
lret
dec
inc
outsl
adc
leave
mov
or
jl
movb
imul
sub
sbb
subl
or
gs
sbb
pop
shlb
and
xchg
lahf
fdivrs
push
into
or
mov
mov
inc
push
shr
test
das
sub
fsub
outsl
push
out
sbb
cmp
jmp
sbb
lret
adc
shlb
ss
mov
adc
sub
cmp
adc
test
aad
int
push
xchg
ds
addr16
adc
aas
inc
sub
pop
jg
lcall
test
in
fists
das
mov
test
xchg
xchg
nop
xor
shl
xchg
mov
pop
jno
cli
shrb
adc
add
xchg
daa
mov
cmp
pop
cmp
pop
pextrw
mov
cli
inc
test
cmp
or
mov
add
add
cli
mov
loope
dec
pop
outsl
sub
scas
mov
pop
stos
lods
pop
mov
fistl
es
jbe
or
dec
dec
cmp
xor
test
popa
xor
sbb
xor
sahf
sub
repnz
rcrl
test
push
ds
and
xchg
sbb
jno
orb
cmp
fwait
xchg
add
fdivr
aaa
sub
repnz
int
das
adc
shrl
sbb
jg
xchg
sub
fisttps
nop
mov
hlt
cmp
sbb
clc
push
add
das
pop
js
push
dec
mov
in
mov
dec
repz
shl
xor
and
cwtl
jle
pop
daa
inc
cmp
xor
ja
inc
jb
sbb
mov
scas
inc
cmp
mov
cs
pushf
mov
insl
add
sbb
ljmp
push
adc
add
aas
jo
aas
xchg
sbb
stc
es
lea
and
mov
jecxz
aas
xchg
rol
adc
adc
adc
lods
enter
dec
shrb
xor
ret
icebp
or
out
icebp
ror
dec
loop
aam
pusha
and
sbb
das
dec
mov
icebp
jg
adc
incl
and
pop
fwait
shll
pop
inc
xor
addl
std
insb
scas
fisubs
repz
outsl
insl
xchg
hlt
stos
cmp
xchg
cli
cmp
adc
sti
jnp
jge
les
sub
mov
stos
lds
push
lcall
push
fwait
insl
lods
jnp
add
ljmp
insl
push
outsl
repz
xchg
sub
and
js
sub
jae
jmp
inc
dec
fmuls
lahf
out
nop
fcmovnb
or
and
pop
scas
sub
movsl
and
pusha
push
mov
cmp
dec
adc
xchg
cmp
jecxz
clc
push
add
push
xor
jne
out
sbb
push
sbb
cld
sub
jns
int
jno
and
pop
test
nop
cwtl
std
and
cld
jnp
mull
cmp
dec
fstps
push
pop
sbb
adc
sub
fwait
sub
jns
mov
cs
push
push
js
jnp,pt
push
movsb
int3
mov
and
out
xchg
hlt
mov
add
xor
jl
lods
mov
in
ss
mov
inc
xchg
jl
lcall
test
cmc
push
or
pusha
cmp
pop
cmpsl
inc
pop
out
xchg
stos
pop
add
rorl
js
ds
xchg
loope
aam
pop
or
inc
mov
gs
jb
fsubrs
pop
nop
jae
and
cmpsl
cld
sbb
cwtl
sbb
movsb
inc
hlt
xchg
out
adc
in
inc
andb
lea
add
icebp
pop
pop
sarl
push
in
dec
je
cmp
movsb
push
mov
mov
das
jmp
mov
jl
outsl
dec
bound
subl
cmp
xor
scas
decl
and
lods
cltd
jle
notl
pop
sbb
push
scas
insb
xchg
adc
dec
add
mov
pushf
or
and
rorb
mov
jno
dec
in
movsl
mov
cmp
cmc
xor
jl
jecxz
ja
mov
fisubl
pushf
outsb
adc
and
iret
adc
xor
in
inc
jb
pop
adc
cmp
push
xchg
cmp
adc
popf
add
mov
inc
test
add
loope
and
dec
loope
sarb
push
push
in
add
xor
pusha
fldl
mov
adc
fidivl
mov
leave
push
lret
js
mov
sbbb
inc
fsubs
outsl
into
dec
xor
fstpl
insb
xchg
sub
adc
jmp
dec
xchg
call
outsl
popa
and
cld
ficoms
lods
imul
jmp
add
lcall
pop
jp
pop
aaa
enter
dec
test
aaa
xchg
and
mov
jbe
test
add
bound
sub
xchg
adcl
in
push
dec
fists
cmp
icebp
dec
and
pop
ret
adc
ret
cmp
repz
inc
adc
sub
pop
dec
sti
xor
in
mov
and
mov
ret
nop
cs
addr16
in
xor
sub
in
mov
lahf
test
cmovp
pop
loopne
je
add
cmp
loope
fistl
sbb
filds
add
sbbb
add
int
aas
mov
inc
jmp
leave
adc
push
jb
jle
push
mov
mov
je
xchg
push
sahf
out
dec
cmpsl
dec
in
test
test
out
xlat
movsl
imul
fstl
in
lock
sbb
jp
xchg
mov
mov
bound
mov
and
sbb
lret
movb
mov
mov
popa
dec
and
jnp
jp
and
mov
cmp
cmc
idivb
std
mov
mov
sbb
out
sbb
inc
mov
xchg
insb
add
enter
push
add
repz
test
jecxz
push
enter
mov
xor
xchg
in
cmpsl
imul
and
shll
cmp
jecxz
scas
ja
rorb
pop
loopne
repz
mov
xlat
or
in
or
lea
cmp
int
testl
stos
mov
popa
psubq
loopne
jge
push
push
in
cltd
popa
xchg
sti
out
test
jns
adc
inc
mov
mov
sub
mov
test
fdivrl
mov
psubw
xlat
mov
arpl
xorl
push
imul
insb
lret
mov
or
icebp
enter
pusha
test
cmp
adc
stc
mov
js
xor
jno
or
cltd
imul
mov
xchg
icebp
ret
push
sbbl
test
mov
imul
in
fnstcw
dec
inc
and
lds
jmp
je
in
jecxz
pushf
jecxz
shrb
or
push
sar
cmp
inc
stos
outsl
xor
imul
push
mov
loop
cmpb
int
outsl
loop
add
sbbl
int
cs
sarl
push
addb
or
cltd
jno
cli
fdivr
dec
imul
fdiv
push
movsl
push
rorb
pop
sub
pop
jb
fs
insl
cmp
addr16
sbb
sbb
adc
je
mov
in
adcl
push
out
fstpl
or
ljmp
jmp
in
mov
push
stos
adc
out
movsb
jnp
add
mov
jp
loop
call
and
call
js
add
cmp
ja
gs
adc
jb
xchg
sbb
push
imull
fistl
add
setle
sbb
jne
xor
fwait
cmp
sarb
jne
sub
enter
fwait
mov
fwait
xor
mov
inc
in
test
jmp
jmp
cmp
adc
lret
and
sbb
xchg
cmp
call
xor
and
inc
jbe
mov
jns
dec
dec
filds
hlt
mov
insl
fdivs
push
ja
pop
rclb
pop
fucomi
and
shrl
arpl
jle
test
dec
insb
pop
mov
cs
lods
push
lods
jmp
mov
fnstsw
inc
xor
push
inc
add
out
adc
adc
mov
inc
cmp
push
imul
jb
cmp
test
in
sti
stos
pop
mov
outsb
sbb
pop
insb
adc
dec
in
inc
mov
lret
jno
xchg
icebp
incb
iret
sti
add
dec
gs
aad
inc
fistl
mov
rorb
sub
sarb
cmp
fs
mov
lret
sbb
mov
mov
push
popf
xor
shrb
hlt
das
sub
add
std
dec
js
mov
aad
das
shl
aas
mov
in
mov
inc
fnsave
jb
ljmp
popf
call
adc
cltd
pop
test
dec
push
mov
lods
ficompl
xchg
sub
roll
or
sbb
mov
stos
ja
jp
pop
adc
sbb
mov
inc
testl
or
ds
inc
cmp
lret
and
mov
push
dec
push
xchg
sub
adc
lods
mov
jg
pop
cmpsl
es
and
push
push
rcrb
outsl
shlb
in
xchg
jg
stos
lds
pop
lret
lret
stos
fsub
repnz
mov
and
cmp
or
shrb
das
push
orl
int3
jge
pop
hlt
mov
adc
sub
jg
das
out
in
push
xor
xchg
jnp
aad
popf
mov
push
dec
push
cs
adc
jmp
inc
jmp
jbe
mov
jnp
cli
pop
ds
push
fwait
cmpsl
in
lds
jae
aas
inc
push
and
adc
rcrb
ljmp
int
ds
jne
mov
std
inc
lcall
mov
notl
fstpl
inc
in
pop
test
pop
sti
addb
in
sub
add
push
dec
and
mov
pop
test
aad
jl
vphsubbw
push
push
push
adc
dec
shlb
push
sbb
xor
jns
jge
popf
add
add
repz
pop
mov
xchg
fimuls
dec
and
out
ss
cmp
loop
scas
popf
fnsave
repnz
ret
add
cmp
jg
jne
sub
and
sbb
mov
nop
push
push
add
jns
int
enter
lahf
jl
dec
roll
mov
mov
xchg
rcrb
mov
push
cmp
stc
outsl
cltd
sti
insl
sub
rcrb
or
sbb
pop
or
add
insb
sub
das
sbb
in
mov
xchg
add
sbb
mov
mov
cmpsb
aas
cmp
popa
dec
ja
int3
or
jle
sub
insl
decl
jl
shr
lock
lret
in
repnz
adc
jns
mov
sub
mov
ret
or
in
dec
stos
xor
fidivrs
repz
xchg
sub
pop
mulb
mov
inc
xor
cld
dec
adc
shlb
mov
daa
rolb
aas
xlat
jp
push
mov
cli
sbb
test
jns
jnp
sub
clc
xor
inc
in
dec
faddl
mov
mov
fstp
leave
xchg
inc
inc
push
jne
mov
or
push
inc
and
pop
shr
pusha
adc
int3
pop
sub
rolb
aam
add
push
mov
push
push
lret
cmp
xchg
dec
dec
jl
sub
jmp
and
add
and
lret
jbe
push
add
sub
.byte
mov
mov
add
mov
add
mov
add
mov
add
or
sub
or
push
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
jae
add
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
sbb
add
and
add
xor
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
incl
add
add
add
add
dec
add
dec
add
incl
add
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
rorb
add
add
incl
add
add
rorl
add
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
fimull
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
in
dec
add
add
add
incl
add
add
dec
add
add
add
cld
dec
add
incl
add
add
add
add
incl
add
add
pop
dec
add
add
add
incl
add
add
or
add
add
incl
add
add
add
add
decl
add
dec
add
add
add
adc
dec
adc
incl
add
add
add
add
incl
add
add
dec
add
add
add
lcall
sbb
and
dec
add
lcall
dec
add
dec
add
incl
add
add
and
add
add
add
and
sbb
dec
add
incl
add
add
add
incl
daa
dec
add
stos
dec
add
jmp
dec
add
xor
add
add
add
incl
add
add
xor
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
cmp
add
add
incl
add
add
cmp
add
add
incl
add
add
add
add
incl
add
add
cmp
add
add
sti
ds
add
ds
add
add
add
incl
dec
add
dec
add
inc
inc
dec
add
inc
dec
add
movsl
dec
add
add
mov
add
je
outsb
push
gs
js
gs
imul
gs
inc
jb
popa
je
inc
imul
popa
je
inc
imul
fs
imul
insb
outsl
jae
dec
popa
outsb
fs
add
je
imul
gs
add
je
imul
inc
js
je
jb
arpl
jae
inc
jb
popa
je
inc
imul
outsb
addr16
add
inc
jb
popa
je
inc
imul
outsb
addr16
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
inc
jb
gs
imul
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
insl
popa
addr16
add
dec
popa
jo
imul
insb
add
add
insl
popa
jo
imul
insb
add
je
imul
bound
gs
add
inc
gs
imul
bound
gs
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
push
gs
jb
push
push
add
popa
jb
push
inc
add
fs
outsl
outsb
je
gs
jne
arpl
add
add
push
gs
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
outsb
fs
imul
gs
add
inc
imul
add
add
outsb
fs
gs
inc
imul
insb
outsl
jo
outsb
add
dec
jo
outsb
inc
imul
insb
jb
popa
add
pop
insb
insb
jae
imul
insb
arpl
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
add
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
js
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
inc
gs
jb
jbe
je
push
jb
imul
imul
add
je
jb
jbe
je
push
jb
imul
inc
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
dec
popa
insl
gs
add
inc
gs
imul
insl
popa
je
outsl
outsb
inc
jns
popa
outsb
fs
add
dec
outsl
arpl
imul
outsb
insb
outsl
arpl
imul
incl
add
add
dec
add
add
add
incl
add
add
inc
dec
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
dec
dec
add
add
add
incl
add
add
dec
dec
add
add
add
incl
add
add
dec
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
dec
dec
add
add
add
incl
add
add
dec
add
add
add
jmp
dec
dec
add
dec
dec
add
jmp
dec
dec
add
in
dec
dec
add
dec
dec
add
incl
push
dec
add
dec
add
jmp
push
dec
add
pushl
push
dec
add
lcall
dec
add
dec
add
ljmp
dec
add
dec
add
incl
add
add
dec
add
add
add
incl
add
add
push
dec
add
add
add
incl
add
add
pop
dec
add
ljmp
cmpsb
dec
add
add
add
add
push
mov
add
orb
mov
mov
add
mov
add
mov
add
mov
add
or
sub
or
push
mov
add
add
add
add
je
jb
arpl
fs
jae
add
int3
add
popa
insb
inc
jb
add
add
imul
jo
imul
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
das
add
insb
push
outsb
ja
outsb
fs
add
insb
je
inc
jns
gs
outsl
push
imul
push
add
je
je
imul
inc
add
push
add
je
je
imul
push
jne
cwtl
add
mov
dec
pusha
lods
fldcw
mov
sub
mov
and
fisttpll
add
push
xchg
iret
inc
xchg
push
jp
sub
dec
adc
stos
sub
call
xchg
idivl
push
push
fadds
std
or
lret
sbb
lret
ffree
pop
inc
pop
and
add
out
das
push
cmp
push
stc
push
leave
repnz
sahf
adc
or
inc
sbb
sbb
or
out
jmp
sub
rcrb
andb
insl
push
mov
jbe
cmp
xlat
jnp
loopne
mov
daa
test
mov
sub
bnd
sti
sub
sub
test
lods
sbb
out
or
lret
loopne
imul
sbb
ja
out
xchg
aas
es
subl
movsb
jl
aad
push
or
xchg
jo
clc
mov
add
cmp
push
pop
rorl
rcll
xchg
xor
adc
xor
jo
lds
stos
rcrb
inc
iret
adc
jle
shrl
lea
and
xchg
push
fwait
mov
mov
int3
roll
inc
dec
adc
fistpll
mov
test
daa
enter
fwait
inc
mov
int3
loopne
or
or
lret
mov
in
xor
dec
in
pop
cld
xor
or
and
push
lods
pop
add
adc
sub
lret
push
shrb
or
das
or
stos
dec
mov
jl
add
adc
mov
scas
fstps
cmp
enter
and
addr16
mov
arpl
repnz
mov
xchg
push
jbe
test
in
lret
test
jmp
jb
jmp
insb
cwtl
loope
in
loopne
cmp
imul
cmp
popa
sub
iret
adc
xchg
cmp
and
lds
enter
jge
dec
mov
mov
outsb
pushf
incl
sbb
mov
in
ret
cmpsb
es
push
xorb
or
or
sbbb
and
jbe
mov
pop
cmp
enter
fidivrs
outsb
xchg
xchg
idiv
push
cmc
sub
shrl
scas
pop
mov
add
mov
push
adc
and
push
ret
cmp
rcl
aas
cwtl
out
divl
out
popa
pop
xchg
mov
adc
adc
stos
cmpsb
or
mov
jo
dec
in
divl
out
jg
por
jns
push
sub
jnp
mov
xchg
lahf
xor
ret
cmp
xchg
inc
pop
sbbl
loope
lds
out
fs
add
xor
add
lcall
ds
lcall
inc
loopne
into
in
ret
popa
dec
xchg
pop
iret
xor
cld
mov
sahf
es
xchg
out
sbb
dec
pop
daa
jecxz
cmp
xchg
xchg
lahf
ret
insb
pop
mov
jmp
push
dec
cmp
out
ja
nop
mov
adc
in
add
jnp
cmp
inc
test
jns
lcall
stos
xor
sbb
mov
lods
fdiv
call
inc
cmp
dec
sbb
sbb
and
cld
pushf
or
or
fisubl
daa
sar
push
in
jecxz
dec
or
cmpsb
mov
loope
mov
shll
and
movsl
sub
mov
test
aam
and
test
movsb
pop
mov
testl
mov
xor
mov
pop
cwtl
in
arpl
inc
daa
inc
lret
and
xor
jl
jle
sub
pop
je
fwait
cltd
inc
pushl
sbb
mov
lock
imul
and
lods
ja
mov
pop
jae
lds
sbb
mov
jl
push
pop
cmp
outsl
repnz
and
push
sub
or
and
test
in
push
sbbb
sbb
mov
popa
sub
lods
xor
insl
inc
subl
cli
sub
aaa
dec
adc
inc
imul
movsb
jbe
test
push
icebp
and
icebp
iret
fsub
shl
jae
outsl
sti
pop
mov
jge
or
rclb
in
dec
nop
sub
das
aas
sub
xchg
dec
ljmp
jno
movsl
into
push
out
repz
sub
outsb
scas
je
sbb
mov
sub
inc
pop
lock
add
sbb
pop
sbb
pop
mul
fmul
push
out
cld
mov
dec
iret
iret
lea
xchg
andb
or
xchg
and
pushf
shlb
xor
add
or
out
inc
test
jnp
sub
das
lret
inc
inc
add
mov
fwait
cmp
mov
mov
lahf
pop
pop
mov
mov
mov
pusha
push
jo
stos
dec
cwtl
or
mov
cwtl
pop
adc
inc
add
mov
mov
mov
hlt
xchg
mov
or
ret
scas
popa
mov
int3
test
inc
in
ljmp
sbb
stos
mov
mov
cmp
mov
push
push
shr
lret
fnstcw
movsb
les
in
mov
stos
scas
xchg
mov
pop
mov
push
xor
xchg
jne
dec
enter
add
sahf
into
outsl
out
mov
and
mov
push
mov
pop
sbb
push
add
nop
jbe
int3
sahf
jl
ds
es
sub
pop
xchg
test
cwtl
xor
das
rcrl
out
cs
xlat
jle
sti
jl
nop
or
dec
jno
add
jb
outsl
jp
hlt
add
cltd
push
mov
fstl
push
inc
nop
dec
push
out
cmp
daa
ret
mov
jne
cli
sub
sahf
nop
xor
adc
add
mov
xchg
jbe
adc
pushf
adc
cmp
dec
fsubr
fs
cs
and
sahf
xor
icebp
in
nop
or
frstor
rorb
mov
pop
pop
rolb
adc
stos
sti
fadd
pop
mov
cmp
xchg
stc
fisubrl
inc
cld
roll
add
ficompl
mov
mov
adc
fbld
mov
lret
andl
fwait
rcr
or
ss
mov
std
jae
and
out
xlat
or
inc
jae
je
lds
divl
int
ret
sub
adc
inc
xchg
mov
mov
push
inc
push
or
jns
push
loopne
mov
aad
pop
cmp
mov
ret
xor
test
imul
in
mov
xchg
aad
cmc
or
fsub
mov
mov
push
in
addr16
pop
pop
fadds
xor
xchg
xor
adc
add
je
cmp
xor
scas
and
lret
fcmovb
test
dec
decb
sbb
test
sub
popa
ljmp
add
pop
jo
mov
andl
psubq
mov
pop
fbstp
add
and
sbb
cmp
ja
ss
jmp
mov
inc
mov
adc
nop
adc
addr16
xor
push
adc
cmc
pop
xor
pop
andps
mov
je
and
test
sub
xchg
mov
in
xchg
mov
iret
loopne
leave
rcll
jo
pop
inc
movb
pop
adc
jecxz
pusha
inc
xor
lea
arpl
push
jg
fucomip
stos
nop
mov
sub
push
mov
movsb
push
lock
movsl
mov
shll
xchg
js
pop
xchg
sub
adc
adc
mov
jmp
push
xchg
inc
leave
lret
loope
and
nop
lcall
and
ss
cmp
sbb
lahf
js
mov
cmp
std
lahf
add
cmc
add
inc
js
pop
pop
pushf
test
and
cld
pop
imull
cmc
cs
push
add
mov
xlat
sbb
push
test
mov
js
and
in
fdivs
movsl
push
fsubr
jne
adc
das
fcompl
jbe
cmp
je
shrl
scas
bswap
scas
insb
sbb
or
add
add
pop
lock
mov
cmp
stc
xor
fnstsw
xor
sub
dec
xor
addr16
push
sbb
xor
add
sbb
xchg
sti
or
xchg
movl
fmulp
push
and
lret
mov
call
dec
xlat
mov
mov
cmpsb
add
out
stc
ljmp
pop
push
dec
dec
dec
xlat
ja
pop
test
and
and
dec
or
dec
fstps
sub
pop
ret
fwait
sub
cmp
sub
fdivrl
push
cmpsl
adc
lahf
mov
in
nop
and
data16
xchg
es
mov
pop
orb
loope
and
shll
push
xchg
loope
adc
test
pop
xor
pop
jo
test
ja
cli
jmp
mov
dec
sub
dec
frstor
subb
and
lahf
fdivl
outsb
jae
fmull
mov
push
dec
dec
aas
leave
sahf
ljmp
push
lahf
mov
add
mov
xchg
jae
inc
insb
xorb
mov
inc
ffree
out
mov
jge
push
jecxz
or
bound
sbb
or
xchg
push
aam
mov
shll
push
rorb
lret
mov
push
and
adc
hlt
outsl
dec
stos
adc
sarb
pop
nop
jmp
mov
push
push
inc
or
fists
fs
jge
scas
cmp
pushf
int3
sbb
cmp
mov
lods
jle
inc
clc
nop
pop
dec
rorl
sbb
ljmp
roll
sbb
push
lret
popf
iret
push
jbe
lods
inc
mov
xchg
fs
adc
orl
mov
repz
inc
frstor
push
daa
adc
cmp
ss
pusha
cmp
into
lahf
sub
stos
mov
jnp
stos
cs
dec
jno
icebp
adc
xchg
dec
gs
cmp
adc
popf
mov
sub
adc
mov
inc
divb
cmc
dec
jp
movsl
js
mov
ds
jmp
inc
sub
int
mov
push
ret
mulb
push
fistpl
sbb
and
and
aaa
insl
aad
mov
ret
imul
inc
cltd
mov
icebp
inc
mov
in
and
loope
dec
mov
iret
cli
mov
push
in
popf
scas
lods
ds
or
push
adc
mov
rolb
jbe
dec
mov
cmp
aas
scas
cwtl
hlt
inc
adc
or
inc
inc
xchg
sub
push
mov
notb
inc
test
pop
jl
outsl
push
mov
jg
dec
imul
cmp
and
sti
xchg
pop
mov
gs
and
js
ja
lea
nop
mov
and
sbb
fisubrl
rol
fldl
add
mov
hlt
fndisi(8087
ja
mov
fmull
in
ja
xor
das
imulb
mov
xor
mov
sub
mov
bound
lcall
mov
jbe
xchg
lods
xchg
cmpl
mov
stos
es
add
fsub
push
repz
add
xchg
xchg
scas
cmp
mov
xchg
or
into
sub
les
xor
iret
lret
arpl
jbe
das
cmp
ds
hlt
mov
add
sti
inc
mov
add
shrb
push
pop
cmp
pop
jg
rcrb
outsl
pop
lahf
fstl
or
inc
movsb
cltd
pop
imul
jg
pop
scas
imul
xchg
xchg
mov
dec
decl
ljmp
icebp
pusha
std
loop
xor
in
dec
bound
fnstcw
add
aam
lret
mov
dec
xchg
dec
lea
cld
loope
sub
push
iret
mov
mov
loop
and
and
ss
mov
sub
push
pop
ja
push
mov
xchg
pop
test
je
add
aam
and
clc
lcall
xor
add
lcall
adc
sub
xor
jg
test
jne
out
jl
dec
aad
sbb
sahf
data16
lock
sbb
mull
pusha
jbe
push
mov
xlat
xchg
adc
adcl
mov
mov
lahf
fwait
push
in
subb
test
out
xchg
dec
leave
test
scas
sub
fstl
dec
push
mov
push
pop
xchg
and
in
jae
push
adc
stos
add
xchg
dec
mov
rorl
add
sub
dec
adc
dec
mov
push
fnstsw
mov
dec
mov
add
setae
inc
fisttps
outsb
and
adc
pop
xor
roll
jl
jb
call
inc
iret
outsl
sub
xor
dec
fidivrs
rorl
out
inc
lret
cmc
xchg
adc
jnp
rcr
adc
xlat
in
mov
movsb
in
push
ficoms
mov
jp
insl
ret
add
and
add
insl
out
push
push
imulb
and
sbb
shrb
je
mov
dec
push
fdivl
out
mov
adc
ja
xchg
mov
neg
add
lea
add
pop
cwtl
rol
mov
sbb
int3
and
inc
ds
xchg
stc
idiv
sarl
stos
cmp
sub
cmp
sbb
mov
gs
call
loopne
ds
mov
scas
loope
fnstsw
adc
jo
dec
lret
add
adc
out
lds
cmpl
and
add
jl
rol
mov
jl
daa
pop
jge
and
pusha
into
imul
in
movsb
add
iret
sub
aas
andl
out
mov
xchg
mov
adc
stc
xor
cmpsb
cmp
xlat
xchg
pop
xorl
out
std
pop
dec
sqrtps
insl
xchg
sub
rcrl
mov
fadds
mov
jns
push
repnz
pop
enter
jg
adc
lret
jle
fstps
xchg
ret
inc
jns
les
dec
adc
mov
faddp
mov
cmpsl
mov
mov
add
dec
rcll
mov
add
scas
andl
loope
cmp
xchg
addr16
out
insl
pop
cmp
fwait
inc
mov
decl
push
loopne
sbb
or
mov
js
sub
pop
loope
mov
add
and
lret
cmp
lcall
loopne
rol
adc
popa
stc
or
lahf
mov
int
inc
andb
rolb
push
xchg
push
shrl
sub
push
push
jo
adc
int3
lret
push
mov
leave
inc
insl
mov
jne
fmuls
jnp
push
jmp
xor
add
jle
mul
mov
cli
adc
mov
and
fwait
xor
cmpsb
mov
xchg
shll
pop
dec
ja
fwait
push
outsb
in
movsb
dec
push
scas
test
in
add
sub
nop
and
jmp
subps
mov
ret
insb
sahf
fwait
shll
imul
movsl
sbb
repnz
push
rcll
dec
aad
add
loope
adcl
sahf
dec
gs
pop
lods
fcoml
push
dec
dec
cmp
push
cmpsl
leave
sbb
out
jb
fisttpl
push
pop
aad
fstpl
mov
adc
cmp
sbb
out
push
dec
insl
adc
inc
loopne
cltd
test
fs
xchg
mov
arpl
mov
decb
fbld
ja
fildll
ss
push
ljmp
rol
sub
jge
push
ljmp
ss
shlb
dec
inc
pop
dec
jecxz
xor
shrb
std
xor
fwait
sub
js
jle
iret
aas
dec
pop
cli
sbb
push
dec
lods
lods
lret
xor
icebp
jmp
punpcklbw
lods
int3
push
mov
stos
add
imul
inc
xor
jno
ja
cmp
dec
pop
mov
push
lret
aam
xor
icebp
jl
sarb
inc
jecxz,pt
add
pusha
jmp
cmpsl
cmp
add
dec
jno
ljmp
in
dec
jb
mov
and
rcrl
sbb
pop
adc
dec
dec
xor
dec
push
repz
call
xchg
jnp
adc
push
js
and
jb
or
popa
sarb
or
insl
dec
push
xor
cmp
fwait
xchg
and
cmp
mov
in
je
or
aas
mov
sub
insl
mov
and
inc
push
push
xor
sbb
addb
push
mov
out
sub
xadd
pop
jne
clc
mov
fwait
test
mov
shlb
loop
dec
sub
adc
loop
ficoml
jns
ljmp
shlb
or
inc
push
mov
mov
jne
out
int3
in
jb
pop
int
mov
adc
jg
adc
call
adc
fucomip
cmp
in
mov
sub
dec
mov
imul
imul
mov
gs
dec
sub
fsubrl
inc
push
inc
inc
push
das
testb
out
jl
ret
fcmovne
sbb
std
or
xor
sarl
fmull
inc
cmp
je,pn
ss
mov
stc
jne
arpl
mov
jb
in
fs
jge
arpl
xor
pop
xchg
in
mov
adc
cld
jecxz
adc
cmp
inc
push
sub
or
lods
fs
or
jno
mov
insl
push
out
cmpsb
jne
push
push
fsubr
mov
fnsave
mov
sub
loopne
bound
sub
addl
rcr
ret
pop
push
jns
fmull
pop
fnsave
jmp
pop
push
cmp
sbb
out
sbb
divl
jo
push
mov
lea
shll
inc
aaa
shrl
jle
movsb
jl
ret
mov
xchg
xchg
aas
sarl
jmp
pushf
xor
jge
movsb
mov
or
mov
mov
les
dec
adc
add
cmp
imul
inc
repz
pushf
andb
cli
in
sub
or
in
rol
xchg
ret
test
mov
push
push
cmp
push
inc
mov
enter
gs
adc
nop
add
sub
sbb
push
fs
jmp
sbb
cld
lret
xchg
loope
xor
jl
cmp
cmp
sbb
mov
xor
mov
mov
in
dec
push
cmp
adc
adc
pop
jb
out
pushf
mov
push
pushf
dec
cmp
pop
dec
push
mov
popw
and
lods
cmpsl
ja
adc
adc
jp
sbb
inc
pop
fwait
sti
adc
push
add
test
jle
js
divl
add
loop
lds
aas
push
or
mov
es
lea
rolb
fdivrp
mov
adc
sbb
jnp
cmpsb
imul
lret
in
sub
cmp
add
xchg
pop
xchg
lods
inc
mov
test
lods
ror
sahf
mov
adc
mov
xor
bound
xchg
leave
sahf
aas
xchg
lods
or
sbb
rcrb
adc
lret
sbb
xorb
hlt
dec
pop
loope
pop
lahf
sub
push
or
repnz
mov
insl
mov
push
xchg
mov
test
call
das
psubsw
mov
inc
call
pop
sbb
punpckhdq
pop
repz
repnz
loopne
adc
negl
lret
and
jnp
push
roll
mov
aaa
dec
loop
mov
out
dec
dec
cltd
and
mov
pop
push
mov
js
sarl
adc
out
sub
loop
std
xchg
adc
add
sbb
push
cmp
mov
or
mov
addr16
in
inc
dec
shlb
loop
cmp
push
arpl
mov
cmpsl
enter
jno
add
sub
call
int3
pop
mov
loop
js
repz
or
dec
add
and
rorl
les
sbb
aaa
push
cmpl
out
inc
pop
mov
sub
sahf
cmp
pop
add
and
mov
and
dec
push
sti
xchg
push
xchg
pop
inc
mov
dec
adc
sub
test
or
mov
jno
mov
pop
sbb
cmp
pop
or
leave
data16
fs
and
test
mov
jbe
add
je
in
jp
jl
fs
dec
inc
jnp
cmp
js
and
nop
sahf
cmp
cmp
mov
sub
pop
push
cmc
adc
cmp
push
fistl
andb
cmp
ljmp
mov
pop
mov
icebp
mov
ret
and
lods
add
jmp
stc
or
into
data16
mov
adc
mov
fcmovb
dec
push
fbld
clc
decb
clc
mov
xchg
or
mov
gs
mov
xor
adc
or
and
aas
xor
loop
ficoml
or
xchg
dec
out
and
mov
lcall
js
add
scas
jns
push
jp
lret
jg
sbb
xchg
in
outsb
lds
daa
cld
enter
xchg
ds
nop
push
sbb
xchg
push
cmp
xor
jbe
js,pn
lock
push
xchg
or
push
lret
push
test
imul
sub
clc
cmp
loop
push
sarb
stos
lods
xor
lds
mov
inc
push
mov
sub
fcompl
and
lcall
loopne
xchg
mov
xchg
jb
divb
push
mov
dec
popa
push
scas
and
aad
pop
dec
mov
pop
es
jae
jo
mov
gs
leave
inc
aam
imul
jne
xchg
cmp
out
test
lods
xor
mov
call
push
add
cmc
jle
shl
push
mov
pusha
mov
imul
xor
outsl
loope
xor
sahf
and
inc
lods
and
add
adc
cmp
or
jns
cmp
cmp
out
adcl
arpl
fwait
push
mov
loope
or
push
xchg
mov
xor
add
and
cwtl
loopne
dec
test
out
lock
inc
push
repnz
add
dec
cmp
nop
.byte
addr16
