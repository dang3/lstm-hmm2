test
ja
pop
mov
int
stos
stc
cwtl
popa
sti
xchg
hlt
lods
in
lds
lret
js
js
aas
sti
lods
pusha
jg
mov
pop
xchg
sub
cwtl
cmc
mov
je
jge
nop
jns
push
xlat
mov
loopne
les
aam
sub
add
popf
repnz
push
mov
sub
mov
lret
lock
roll
imul
cmp
add
mov
stc
push
cmpl
add
bound
sbb
nop
adc
repz
test
shll
xor
pop
pop
cmp
sar
sbbl
jbe
cmp
icebp
mull
aaa
scas
cmp
lds
sbb
test
leave
les
fnstenv
push
faddp
mov
pop
cmp
leave
nop
mov
jns
stos
cmc
pusha
shr
in
inc
test
mov
sahf
sbb
jns
jl
arpl
aad
push
mov
test
test
mov
or
mov
and
ljmp
int
bound
repnz
adc
mov
or
loop
push
dec
loopne
xchg
jle
mov
jne
rcr
out
lds
jo
mov
scas
repnz
sbb
cmc
fnstenv
dec
fwait
xchg
frstor
out
and
add
jmp
jge
call
mov
out
iret
jae
push
xlat
and
mov
pop
scas
mov
mov
pop
imul
shrl
jnp
pop
dec
adc
and
loopne
enter
add
fs
or
subb
sarl
mov
push
icebp
sub
mov
arpl
js
push
leave
or
testb
cmp
fstps
iret
jae
rclb
out
sbb
mov
push
sbb
mov
mov
jle
out
cmp
lea
call
xchg
jne
ror
cmpsl
ret
and
call
fidivrl
test
jns
xchg
mov
jecxz
jecxz
pusha
push
push
stos
in
xor
cwtl
cwtl
pop
sub
pop
ds
sti
inc
leave
jae
fs
pushf
adc
pop
xchg
sbb
xor
mov
xor
js
rcrb
bound
add
sub
ror
jno
dec
fcmovnbe
jmp
scas
inc
hlt
xchg
pop
orl
scas
inc
mov
ljmp
add
adc
xchg
out
loope
scas
shrb
dec
test
mul
sub
jle
lret
pop
fwait
mov
movsl
pop
pusha
mov
xor
mov
arpl
bound
mov
sub
out
bound
shrb
inc
insl
add
fstpt
push
loope
sbb
push
je
fwait
test
dec
insl
in
loop
jl
shll
or
jno
jg
pop
inc
jo
leave
sbb
or
dec
dec
repz
call
adc
push
push
fidivrs
inc
out
fdivrp
mov
and
inc
cmp
cmp
incb
jge
jne
lods
cmp
out
pop
mov
imul
mov
pop
popa
or
add
in
out
subl
cmp
lock
incl
ja
sbb
test
inc
push
xor
xor
mov
sbb
push
add
iret
scas
xor
or
pop
fidivrl
cmpsl
fucom
jmp
cmp
enter
inc
lds
fdivr
and
cmp
adc
and
xorb
xor
xchg
cmp
sbb
xchg
sub
pop
icebp
and
leave
movsb
xchg
outsl
or
mov
jg
jne
fstpl
clc
adc
test
mov
adcl
orl
pop
pop
imul
leave
inc
sub
push
jbe
ret
sbb
icebp
setge
rolb
sarb
pop
jo
shl
and
rcrb
in
push
mov
sub
jmp
int3
mov
iret
test
lods
pop
inc
stc
movsl
xchg
test
xchg
push
into
dec
jmp
mov
ret
inc
pushf
jo
mov
in
es
xor
test
inc
hlt
inc
filds
sbb
fidivs
and
je
adc
push
cmp
cli
cs
lret
in
testl
add
movsl
xchg
in
add
lods
dec
sar
hlt
mov
push
into
scas
add
pop
test
icebp
xchg
push
pusha
inc
cli
out
gs
js
pop
sbb
cmp
dec
mov
push
dec
cli
test
cmpsb
push
pop
inc
sarb
testb
cltd
mov
sti
adc
test
fnsave
inc
push
push
sbb
iret
xor
pop
pop
cmp
ficoms
cmp
cmp
out
sbb
hlt
sub
pop
aad
in
mov
mov
jl
cltd
popa
fiadds
dec
mov
int
in
push
or
adc
inc
add
dec
mov
pushf
pop
stos
les
mov
in
inc
xor
xor
xor
cli
adc
or
icebp
repz
jns
fstp
outsb
fildll
push
aaa
jecxz
sub
jae
out
mov
outsb
fstpl
pop
cmp
mov
dec
dec
push
stos
js
fcmovnb
fisttpll
repz
repnz
xor
arpl
pop
mov
out
add
addr16
sub
adc
and
out
pop
mov
cmpsl
xchg
xchg
adc
mov
mov
rcr
mov
movsl
adc
cwtl
inc
pop
lock
jg
sti
xorb
and
and
adc
lret
cs
je
cmp
pop
xor
dec
lock
xchg
add
rcll
out
pop
push
mov
insl
jecxz
jno
aad
sub
inc
and
popa
jle
jg
sub
jbe
push
jnp
adc
pusha
push
mov
or
bound
mov
dec
repz
popa
cwtl
add
stc
lea
and
push
lahf
xchg
addl
rcr
pop
mov
jns
std
and
and
mov
adc
jg
subb
lods
popa
bound
dec
push
xor
xor
push
xchg
insl
mov
adc
ret
mov
push
add
cld
lods
pop
jl
xchg
pop
push
vrsqrtps
les
in
mov
or
lcall
js
movsb
dec
mov
pop
pop
scas
sti
shll
xor
jg
add
ja
lret
adc
ret
push
mov
or
cmp
les
cmc
insl
in
lahf
mov
mov
mov
mov
stos
pop
mov
sub
and
pusha
fcompl
test
sbb
jns
repnz
les
add
dec
shrl
dec
dec
jbe
outsb
fdivr
dec
xor
or
pop
cmpsb
ret
push
xor
adcl
push
push
int3
sub
shl
pop
jae
fsubrl
scas
out
mov
lods
shll
lret
enter
sub
jnp
sub
loope
dec
mov
loope
sub
add
sub
xor
or
mov
jno
and
test
mov
xchg
mov
scas
and
sbb
lcall
lods
jecxz
pop
and
jb
sbb
xchg
mov
sarb
in
jge
fbstp
pop
cmp
dec
sbb
leave
jns
leave
mov
pop
in
inc
ja
xor
fcmove
mov
fiadds
push
scas
mov
sbb
sub
lods
lahf
mov
push
cmp
adc
repnz
stos
stc
xor
xchg
int
xor
or
sbb
fildll
cmp
push
stos
ret
imul
clts
dec
lret
and
cmc
push
jb
cmp
lds
jmp
sub
mov
fildl
adc
and
cmc
fistl
adc
cmp
or
jg
push
jae
dec
enter
pop
mov
mov
pop
xor
repz
xchg
addl
xchg
repnz
daa
call
out
mov
loop
insl
xor
add
sub
data16
ss
lahf
push
loopne
or
jg
aad
add
adc
push
cmpsl
mov
cld
add
xchg
xchg
out
loop
push
das
bswap
inc
ds
fimull
mov
cs
pop
je
add
sbb
enter
lds
jae
shr
jnp
dec
stc
add
es
add
add
jo
add
movsl
movsb
cmp
mov
push
popa
out
push
xchg
stc
in
mov
mov
les
ffree
inc
ret
cmpsb
adc
xchg
push
lods
loope
and
fldenv
jno
outsb
enter
cmp
pop
imul
subb
outsb
les
mov
enter
inc
lcall
mov
add
aad
sarl
sti
cli
das
jg
add
repz
dec
ret
sub
lods
push
out
aas
out
cmc
add
jo
mov
les
lods
xchg
mov
xlat
lahf
pop
mov
arpl
pop
cmc
cld
cmp
add
xor
mov
fcoml
leave
leave
aam
ret
lea
jno
movsb
jns
cwtl
leave
mov
jmp
test
pop
enter
pop
xchg
mov
mov
xchg
push
into
andb
xchg
push
fsts
xor
fdivrs
and
push
add
cmc
les
cmp
inc
inc
mov
scas
pop
insb
out
clc
dec
jnp
std
add
data16
jg
enter
pop
fcmovnbe
pop
loope
jg
in
push
adc
cltd
and
scas
xchg
stc
in
cmc
or
inc
loope
mov
dec
subl
movsb
arpl
or
jp
xchg
or
fldcw
mov
adc
mov
movb
leave
fdivrp
out
xchg
jmp
ja
pop
jp
jecxz
jb
andl
jmp
jg
out
ret
mov
loop
repz
enter
dec
add
xor
sti
jae
shlb
mov
mov
cmc
xor
faddl
pop
cmc
sbb
fcoml
dec
cmpsb
lcall
fisubrs
fdivl
rep
or
out
dec
mov
inc
jmp
dec
les
call
fisubs
pop
fstl
imul
scas
insb
scas
push
or
push
loope
loopne
push
pop
lahf
inc
sahf
in
arpl
cmp
ret
adc
jae
lds
lret
adc
jmp
lods
jecxz
jle
idiv
sarl
xchg
shrl
xchg
adc
push
jne
sti
sbb
dec
enter
or
cs
inc
pushf
inc
lahf
xor
and
and
add
inc
int
jno
mov
mov
aam
add
push
mov
mov
andl
out
and
lods
aas
dec
xchg
mov
leave
dec
jnp
mov
fwait
add
cmp
faddl
rcl
data16
jo
push
jb
mov
andb
and
int
cmp
mov
lahf
mov
cmp
adc
mov
into
push
mov
cmpsb
scas
dec
into
mov
loop
pop
rcrl
push
cmp
mov
xchg
dec
and
mov
out
adc
lods
adc
ds
mov
movsl
jae
xorb
dec
xchg
cmc
xorl
inc
inc
std
cmp
into
push
xchg
shll
into
inc
in
adc
js
outsb
sbb
adc
loopne
adc
mov
dec
cli
imul
jecxz
into
pushl
or
in
lock
lds
ds
push
fucomp
fcom
mov
lret
xor
testb
repz
fists
xchg
push
icebp
jg
lds
lods
ficompl
lret
mov
arpl
into
enter
xor
in
xchg
ja
adc
push
inc
mov
jns
lods
jb
inc
mov
mov
out
dec
jle
les
xchg
and
or
pop
shl
dec
test
or
and
in
cmc
test
mov
mov
mov
dec
js
add
popf
cmp
pop
xlat
jle
cli
lods
orb
mov
xchg
adc
push
loop
jb
sbb
clc
mov
adc
mov
add
outsl
or
stos
ret
xchg
lock
inc
stc
rcll
cmpb
int3
lea
jbe
mov
in
hlt
stc
cmp
mov
gs
pop
cltd
repz
dec
in
mov
add
pop
push
enter
add
scas
negl
lahf
scas
sbb
loope
call
outsl
adc
dec
xchg
jnp
test
sbb
scas
push
lcall
cmc
sahf
push
stc
sbb
fdiv
pop
pop
sbb
xchg
push
xchg
mov
lret
or
mov
in
adc
js
cmp
push
fstpt
mov
mov
push
push
jmp
shrb
shll
test
inc
adc
jg
dec
repnz
cltd
std
icebp
je
sarb
rcrb
jno
add
adc
or
push
in
daa
and
repnz
jge
insl
fdivrl
mov
push
popf
xor
dec
int3
mov
mov
push
cmpsb
xchg
mov
push
xor
pop
add
aas
stos
scas
gs
xchg
test
lods
fxtract
xor
loop
in
ja
mov
vmread
loope
mov
push
xchg
int
rcrl
and
push
pop
inc
rol
repz
pause
mov
inc
out
stc
adc
push
fisttpl
fs
xchg
orb
fwait
mov
fnsave
or
int
xchg
and
adc
sbb
or
jecxz
out
data16
inc
mov
push
aam
das
xchg
jp
shl
and
add
xchg
pop
mov
adc
mov
shll
sub
xchg
stc
push
cld
ds
insb
jnp
test
push
dec
call
pop
test
mov
dec
pushf
out
sbb
xchg
insw
out
mov
leave
cmc
std
mov
jb
mov
pop
adcl
xor
mov
clc
hlt
sbb
add
cld
int3
xchg
jno
pop
popa
xchg
pop
in
xchg
in
aam
arpl
fadd
push
or
fnstsw
test
dec
test
add
fsub
faddl
push
mov
push
sbb
push
ret
cmp
imul
mov
aaa
int
xchg
sub
pushf
ret
adc
or
das
jnp
cmp
fstps
mov
shll
in
pushf
ret
call
push
push
imul
jne
icebp
scas
sbb
fcmovnu
iret
fstp
popa
or
std
adcb
adc
int
lret
js
cmc
sub
test
mov
jle
add
and
imul
push
in
dec
xchg
iret
sbb
cli
test
xor
je
call
inc
ret
fstl
mov
jge
cmp
sbb
rcr
ds
out
mov
pusha
cmc
mov
inc
icebp
jnp
mov
xor
in
jnp
addl
scas
testb
inc
inc
cmpsb
lods
xor
sbb
in
jb
arpl
push
mov
gs
out
cmp
mov
dec
pop
sbb
dec
cld
inc
sub
jnp
sbb
daa
jnp
push
es
pop
mov
outsb
push
adc
pop
push
mov
repz
cmp
mov
in
repnz
mov
sahf
lret
jnp
test
sub
dec
cmp
and
ficompl
pop
sbb
sbb
inc
jl
iret
add
divl
hlt
test
sahf
xor
inc
jecxz
leave
mov
fucom
iret
mov
and
inc
es
es
mov
sbb
jle
and
push
sub
fisttpl
jle
mov
dec
xchg
daa
rcrl
ret
add
repz
icebp
cmpl
jg
aam
push
adc
imul
dec
addps
push
push
dec
pop
ret
leave
shlb
loopne
push
sub
mov
in
mov
cwtl
iret
sbb
xchg
jp
loop
xchg
enter
insl
fmull
cs
insl
push
push
jecxz
les
lods
ds
ret
mov
inc
rcrl
sbb
clc
and
pop
mov
jne
aad
mov
int3
notb
in
mov
sbb
sti
scas
add
ja
icebp
and
ds
lds
lret
icebp
dec
push
cmp
aaa
mov
in
ret
pextrw
pop
cmp
imul
hlt
stos
sahf
cltd
dec
sub
out
fidivrs
in
shll
sbb
dec
and
push
fldl
mov
scas
hlt
jo
in
mov
fcmove
add
dec
and
mov
addr16
shl
xorb
jno
into
daa
out
shll
lds
sbb
dec
ljmp
test
popa
mov
mov
cmc
push
and
stc
add
jg
adc
mov
test
sbb
cs
or
mov
out
and
movsl
loop
imul
pop
cli
adc
mov
push
and
pop
mov
int3
leave
dec
xor
js
xchg
sbb
sub
fbstp
or
movsb
dec
sbbb
add
inc
leave
std
pop
add
std
arpl
pop
sub
stc
sar
inc
inc
bound
cwtl
adc
pop
popa
inc
xlat
fsubrp
xchg
mov
mov
push
adc
cmp
push
or
idivb
outsb
or
inc
and
and
out
shlb
dec
rcr
cmc
jg
adc
jno
pop
adc
lret
loope
addr16
in
sub
adc
in
out
out
dec
mov
les
out
dec
mov
xchg
fcmovne
pop
sub
sub
inc
sub
fistpl
movsl
adc
repnz
push
mov
inc
mov
pop
lea
sub
mov
cli
sahf
inc
ret
ret
movsb
adcb
jne
cmp
mov
inc
inc
js
mov
shrl
rol
adc
mov
inc
inc
fidivs
xchg
or
cmp
cmp
xchg
xor
add
pusha
cmp
push
fbstp
jecxz
or
fcompp
loope
int
outsb
leave
sub
adc
clc
aas
mov
sti
mov
mov
leave
add
mov
enter
push
pushaw
xchg
push
inc
addr16
xor
mov
and
xchg
jg
xchg
cmp
iret
addr16
dec
and
insb
mov
push
or
ficomps
enter
xor
jae
push
push
aad
jl
insl
test
xchg
push
and
test
fsubrl
cmp
inc
aad
in
xchg
push
call
add
jmp
mov
xchg
loop
jb
lea
inc
test
dec
ffree
ss
cltd
sbb
clc
pop
jmp
sti
add
repz
retw
jg
stc
mov
addl
je
pop
or
popa
jb
mov
jecxz
aam
dec
add
adc
bound
mov
xchg
out
cmp
sub
adc
mov
add
add
sbbb
cwtl
out
cmp
push
bound
imul
rolb
test
or
mov
ja
cli
cmp
shll
call
adc
cmp
enter
ljmp
mov
daa
inc
lahf
push
sbb
sub
rcll
sbb
repz
mov
lahf
ljmp
out
jae
rclb
cli
xchg
popa
out
lods
inc
push
ljmp
jae
test
sbb
ds
inc
repz
in
sbb
push
sub
cmpsl
add
mov
mov
and
outsb
mov
popf
mov
insb
sub
cmpsb
jmp
cltd
jge
lds
xor
iret
mov
out
sbb
hlt
adc
scas
adc
cwtl
inc
fdivl
out
pusha
mov
bound
pusha
leave
imul
scas
sbb
sbb
popa
mov
pop
or
imul
pop
mov
pop
xchg
das
mov
repnz
ja
xorb
outsl
inc
sbb
inc
sbb
mov
dec
mov
jne
xchg
xor
push
clc
adc
xchg
xchg
out
xchg
pop
lea
mov
rorl
andl
sub
push
or
cmp
pop
and
mov
loop
mov
xor
mov
scas
mov
pop
cmpsl
fmul
stos
jge
sub
shr
push
sub
in
hlt
fadds
adc
cmp
pop
cltd
mov
fs
push
jne
mov
cli
inc
adc
mov
dec
push
lret
xchg
dec
sub
clc
xchg
mov
push
sub
ljmp
cli
lods
mov
push
fstl
mov
add
inc
sarb
hlt
fs
mov
ja
sahf
sub
imulb
dec
lock
sub
rolb
popl
hlt
cmp
and
fwait
xchg
out
and
adc
pop
push
mov
scas
add
pop
inc
icebp
sub
adc
mov
sbb
ss
mov
enter
loop
sub
cmc
clc
ret
dec
cmp
test
xchg
cld
out
aaa
mov
in
push
mov
popa
jbe
xor
mov
pop
mov
xchg
mov
push
sarb
adc
and
push
mov
fnstsw
mov
sbb
adc
cli
lods
sbb
int3
pop
xchg
push
mov
jmp
adcl
mov
jmp
in
clc
jecxz
rcll
cvtps2pd
loopne
leave
arpl
popf
or
adc
jne
outsl
adc
aas
call
jns
fisubrs
cmpsl
mov
mov
push
cmp
jmp
fbstp
popf
ret
pop
lahf
add
adcb
jmp
pushf
pop
xchg
outsl
scas
repnz
arpl
cmp
and
lahf
xchg
mov
mov
subl
fstpl
js
push
aas
xchg
mov
mov
push
push
dec
out
sub
mov
xor
jmp
mov
call
mov
or
sbb
mov
inc
test
add
mov
outsb
leave
jbe
mov
pop
mov
imul
das
imul
xor
insl
mov
sti
fwait
cli
fs
and
mov
pop
mov
pop
ret
cltd
loop
out
push
lret
xchg
addr16
in
mov
dec
mov
fistpl
xor
pop
sub
call
loop
bound
pop
ja
xchg
push
adc
dec
push
inc
jno
jb
jnp
outsb
xlat
lock
sub
fimull
lods
mov
jns
sti
pop
pop
movsl
idivb
ror
pop
mov
jno
fdivl
push
mov
pop
cld
cmp
das
ret
add
in
xchg
out
rclb
aad
sbb
addr16
loop
cmpl
and
loop
lret
leave
repnz
inc
repz
shrl
lret
call
mov
fcoms
xor
cmp
nop
and
push
xchg
daa
ret
fwait
cmp
adc
in
lret
std
jns
insb
pop
xor
xchg
mov
sub
mov
stc
pop
enter
inc
popa
push
stos
scas
es
out
unpcklps
sahf
sub
cli
push
lret
jp
mov
shrl
out
inc
test
lods
push
pop
fdiv
ret
jge
decb
mov
fcompl
icebp
lods
xchg
xchg
lret
fdivrl
xchg
jbe
cltd
adc
mov
enter
ret
rol
mov
cmpsb
and
mov
xchg
pusha
lods
lods
loopne
shll
xor
in
jmp
jbe
sarb
es
and
sub
ja
enter
lods
movsl
xor
and
or
and
test
in
jae
mov
jbe
hlt
je
roll
and
lahf
out
les
test
cmp
pop
jl
mov
sbb
cmp
xor
cmc
or
mov
sbb
cmpsb
movsl
pop
mov
xchg
cli
sbb
int
cs
les
mov
adc
xchg
lds
lret
xor
or
cmp
test
sub
or
or
mov
nop
push
outsl
fdivrl
bound
scas
add
jno
mov
enter
es
sbb
outsb
call
add
sbb
fbld
loop
sub
dec
or
dec
push
into
sub
add
cmp
jg
dec
pop
or
push
loopne
pop
or
mov
push
arpl
mov
cmp
popf
in
sub
add
sub
add
mov
and
cmc
cmp
aad
and
popa
cmpsb
mov
lahf
mov
mov
inc
arpl
mov
movsl
or
add
push
test
push
repnz
cmc
cmp
movsl
xor
sub
pop
enter
rclb
push
sbb
in
arpl
clc
out
jl
js
xor
cli
cs
pop
aad
jge
mov
push
adc
cld
pop
out
shr
ror
je
pushf
cmpsl
mov
xchg
jl
enter
mov
hlt
hlt
loopne
fists
xchg
or
cmp
pop
rcll
in
pop
out
inc
push
cmp
out
enter
jno
mov
lock
sbb
jge
push
sbb
push
and
push
stc
fcmovbe
and
in
jns
xlat
fst
adc
fldl
stc
int
pop
adc
mov
test
les
in
cli
stc
lds
popf
add
icebp
dec
mul
push
jmp
xchg
push
leave
sub
or
xor
pop
mov
jne
cld
fwait
sub
lock
enter
pushf
faddl
lods
xchg
ds
xchg
and
faddl
jl
sbb
xor
mov
ret
imull
jge
sbb
stc
pop
inc
fcoml
movsl
mov
fdiv
fwait
jbe
sub
mov
lahf
out
mov
icebp
jae
pusha
xor
pop
xchg
pop
adc
jge
cmp
je
add
loopne
sti
jbe
pop
out
jns
loopne
sub
jp
sbb
adc
fidivs
xchg
and
imul
add
test
mov
lods
mov
push
lcall
pop
loop
pushf
dec
mov
jp
cmp
fcompl
sub
jne
add
call
jne
daa
aas
pop
into
xchg
inc
xchg
jne
pop
cmp
loope
incl
jp
ljmp
enter
ret
mov
loop
rol
icebp
pop
xchg
and
int
test
add
dec
dec
ret
movsb
inc
and
cwtl
loop
icebp
pop
les
decb
gs
inc
cmp
scas
gs
loopne
clc
xchg
into
or
sub
pop
dec
hlt
dec
sbb
push
dec
mov
push
pop
add
mov
adc
push
xor
repz
and
mov
pop
dec
or
xchg
and
mov
fmuls
jl
pop
scas
repz
cmpb
push
mov
sbb
popa
mov
xchg
out
dec
imul
ds
mov
fs
mov
int
rcrb
in
adc
mov
iret
push
mov
leave
inc
neg
xor
ret
test
repnz
inc
mov
pop
in
mov
popf
lret
ret
psrlq
xchg
adc
nop
out
or
and
xor
mov
aad
xchg
jne
testb
push
pop
outsl
inc
xchg
xlat
aas
call
add
mov
dec
mov
xor
sbb
insb
xor
lret
test
ret
push
cmp
fsubs
sbb
sbb
inc
js
inc
aad
sbb
xor
call
or
cmpsb
loope
cmpsl
push
sbb
enter
push
fstpt
cwtl
fs
xor
jle
fistpll
std
pop
repnz
adc
daa
scas
xor
and
jae
jl
adc
pushw
push
fdivrl
adc
adc
dec
rcrl
and
into
repnz
loope
and
jno
out
loope
jmp
push
mov
adc
scas
cmp
cmp
test
sbb
imul
mov
mov
cltd
shlb
repz
jae
fdivrl
loop
movsl
test
lea
mov
inc
or
cmp
es
fldcw
insl
insb
imul
ret
mov
rcll
xor
sub
popf
in
in
cmp
xlat
repnz
es
cs
es
jns
in
out
mov
and
subb
adc
in
fwait
jmp
aaa
stos
subb
xchg
jae
inc
rclb
repnz
in
lods
dec
outsb
cmp
dec
adc
shll
clc
mov
cltd
inc
test
add
jnp
inc
lock
cld
dec
bswap
push
out
sar
js
xlat
mov
xlat
pushf
pop
pop
insb
push
or
xchg
jb
xor
push
shr
and
cli
sbb
mov
sbb
mov
jge
mov
ret
aaa
cmp
in
shlb
aad
pop
stos
dec
dec
mov
sarl
mov
pop
pop
or
aas
xchg
mov
lods
mov
adc
sub
mov
fiadds
idivb
out
idivl
stc
jb
inc
in
jns
rcrb
repnz
xchg
idivb
clc
jp
mov
xorl
scas
imul
fsubs
jno
cmp
lods
or
jno
adc
xlat
je
arpl
data16
shll
scas
mov
sbb
add
xchg
push
arpl
push
pop
mov
outsb
pop
mov
push
lahf
ja
imul
pushf
pop
out
inc
mov
das
xchg
mov
xor
mov
addl
test
push
fsubl
dec
jo
inc
ss
jle
jbe
pop
loope
or
jb
stc
mov
jb
push
nop
lods
mov
dec
stos
or
xor
fstl
xorl
push
cli
fadd
jnp,pn
pinsrw
in
sbb
inc
adc
xchg
cmp
xor
adc
mov
jno
pushf
daa
dec
into
insb
xchg
decb
cmp
int3
jns
enter
pop
sti
jle
pop
xchg
or
cmpsl
fistpll
ret
xchg
jno
sbb
ljmp
push
inc
sarb
ret
movsb
xchg
fsubr
mov
out
xor
mov
int
out
inc
lret
adc
pop
pop
adc
add
fcomps
and
aad
cmpsl
lock
dec
dec
lea
inc
out
pop
and
mov
jb
mov
or
mov
xor
cmpsl
movb
jae
stc
and
shl
test
dec
sbb
mov
test
dec
dec
jp
test
sbb
in
pop
ja
nop
cmp
pop
xor
lods
in
jge
in
bound
inc
xchg
movsl
loope
push
repz
js
repz
pop
clc
scas
jne
xchg
jl
inc
roll
dec
fcmovnb
int
jnp
adc
sti
xchg
in
ficompl
cmp
js
pop
mov
sub
je
fwait
cmpsl
mov
mov
add
jnp
jbe
jle
daa
shrl
push
arpl
movsb
sbb
dec
inc
xchg
or
int
inc
fimull
jns
in
mov
leave
lods
xor
push
pop
repz
or
cmp
ds
jae
fcoml
fiaddl
cmp
sbb
loope
dec
mov
cmp
lods
push
dec
out
lret
lahf
loopne
and
test
mov
test
dec
adc
lea
xchg
mov
lret
mov
jp
push
addr16
shll
dec
or
sbb
loope
push
hlt
pop
jns
imul
pop
test
xchg
sbb
add
outsl
andl
pop
pop
pop
inc
pop
loop
js
inc
inc
rorb
ficomps
xor
rsm
add
dec
xchg
out
jno
dec
mov
gs
pop
or
jp
lret
and
sbb
mov
dec
mov
shlb
stc
and
mov
fs
pop
aam
and
fdivrl
inc
mov
in
data16
std
push
fnsave
shlb
pop
push
sub
fdivrl
or
cmp
lcall
push
push
lds
mov
adc
adc
add
rcll
mov
rorb
and
out
xchg
ret
cmc
addb
jae
fstps
dec
jne
mov
cmp
or
mov
inc
sub
jo
add
incb
pushf
icebp
in
sub
xchg
mov
popa
push
dec
or
adcb
xor
ret
push
or
mov
aas
movsb
pop
icebp
cli
xchg
dec
adc
push
lock
dec
add
call
rclb
loope
ret
icebp
or
es
das
aad
hlt
jb
arpl
sub
dec
pop
inc
jl
pop
sbb
stos
sbb
adc
mov
aaa
mov
repnz
rclb
pop
jp
jmp
cmc
iret
add
pop
inc
cmc
cmp
cmp
gs
mov
jg
pop
cmp
js
test
add
push
jge
and
dec
xchg
push
je
xor
inc
mov
icebp
insb
ret
nop
out
inc
std
sbb
movb
lret
jl
fs
pop
mov
imul
mov
loop
dec
repz
les
xor
jae
int3
pop
mov
sbb
xor
andb
add
or
cmp
push
adcb
add
les
sbb
hlt
jbe
imul
sbb
sbb
neg
cwtl
jmp
adc
jns
mov
lock
pop
sub
xchg
mov
mov
aas
in
mov
loopne
repz
adc
mov
loopne
cmpsl
insb
mov
gs
push
in
mov
and
inc
fwait
sahf
mov
push
jle
inc
jae
cpuid
mov
lds
mov
mov
icebp
out
xchg
jbe
mov
loope
inc
dec
lock
divb
pop
or
outsl
pop
outsl
pop
mov
imul
sbb
pop
aad
dec
mov
and
testl
repnz
inc
mov
enter
sub
mov
jge
dec
mov
repz
lret
mov
popa
push
push
or
mov
sbb
roll
xchg
xor
push
fidivl
pop
loopne
xchg
mov
ret
and
xchg
mov
fwait
add
jno
daa
ljmp
inc
or
jno
and
aad
jnp
call
je
loop
ss
adc
sub
rcrl
xchg
sbb
xchg
push
xor
add
pop
fnstsw
mov
bndldx
cmp
add
dec
mov
pop
test
lods
add
adc
cs
push
mov
setl
out
and
jb
mov
xchg
imul
mov
xor
sbb
mov
enter
lea
or
sbbb
xor
cmc
dec
jge
inc
in
xchg
mov
ret
sub
cwtl
fwait
or
mov
in
add
pop
lods
daa
and
jmp
out
clc
and
clc
mov
push
fst
adc
shl
push
loop
fnstenv
jl
dec
jb
hlt
sbb
in
sahf
mov
mov
push
dec
out
fistl
int3
loope
inc
inc
mov
push
and
and
fndisi(8087
pop
pop
je
inc
jbe
loop
lahf
cmp
shlb
pop
in
mov
cli
xchg
loopne
jb
jmp
jae
les
mov
gs
mov
sub
push
mov
shll
je
mov
inc
arpl
push
outsl
jle
push
and
mov
pop
adc
fidivrl
outsb
inc
inc
sbb
or
shl
sbb
dec
lods
cmp
pop
iret
mov
fldl
jl
mov
adc
js
loop
cli
je
mov
loope
dec
lds
sbb
jno
loopne
jno
faddl
xor
test
in
call
daa
jno
fidivrl
mov
rcr
lcall
xor
mov
inc
in
and
pop
pop
jg
lcall
lcall
sub
clc
mov
pop
mov
mov
js
mov
jle
sbb
rclb
sahf
call
pop
xor
jae
fwait
shlb
pop
mov
pop
aam
sub
cmpsb
movsl
fistpll
sub
xchg
inc
ret
movsb
or
insl
js
add
mov
pushf
mov
mov
adc
cmpsl
out
stos
aam
jmp
popa
dec
sbb
jnp
test
and
mov
popa
test
add
aam
pop
inc
jo
and
inc
pop
pop
sahf
stos
lahf
sbb
xchg
ret
mov
mov
clc
int
or
ss
mov
jp
cltd
sbb
nop
sub
ror
in
and
aam
hlt
out
hlt
rcl
mov
mov
fisubrs
pop
mov
sbb
js
jmp
jge
lods
fstp
push
adc
dec
leave
jno
and
xchg
stc
inc
xchg
es
gs
mov
or
addr16
sub
mov
lods
lods
lcall
in
data16
out
push
repz
icebp
add
cltd
dec
mov
imul
adc
imul
ror
pushaw
sarb
adc
fsubrp
inc
cmp
notb
cwtl
mov
pop
in
out
test
divb
sub
dec
cmp
inc
fwait
outsb
xchg
sbb
pusha
adc
pop
aam
jp
arpl
in
lods
jmp
mov
repnz
cld
mov
int
sbb
pop
push
mov
data16
adc
ret
ja
test
adc
mov
stos
add
lret
xor
bnd
inc
lock
sti
movsl
loope
pop
xchg
lret
lahf
shlb
shrb
lock
or
jbe
mov
sbb
jl
adc
in
lods
jmp
out
divb
pop
pop
mov
adc
push
fists
mov
mov
jnp
and
add
sbb
fsubrl
gs
iret
mov
pop
adcb
fistpl
add
pop
enter
xor
dec
push
xchg
rcll
push
fcomp
xchg
sub
xor
jns
cmpl
adc
inc
clc
fildll
push
xchg
jb
movsl
call
dec
pushl
mov
or
pop
jge
out
loopne
push
xor
sbb
js
cmp
dec
xchg
mov
ja
lds
mov
in
adc
mov
fs
pop
adcl
ds
pmuludq
jns
jl
test
jae
and
leave
push
pop
dec
aam
mov
xchg
fwait
or
frstor
xor
movsb
mov
sub
sahf
call
lret
sbb
je
xchg
test
pop
and
pop
dec
pop
outsl
pop
out
das
in
xchg
mov
loop
push
mov
push
inc
fldt
popa
movsl
loop
lods
mov
aas
or
imul
je
mov
push
cmp
mov
in
sub
xor
inc
xchg
outsb
push
add
sbb
sahf
mov
mov
and
add
sub
fsubr
jl
mov
fidivl
jl
pop
leave
xchg
mov
adc
addl
in
mov
movsb
cmpsb
daa
push
push
sbb
cmp
xlat
stos
xchg
jnp
push
filds
and
or
add
mov
bound
in
adc
push
and
mov
cmp
xor
cld
lods
mov
mov
call
inc
pop
frstor
cli
das
push
and
mov
cld
fiadds
push
mov
jp
fcomip
lods
xor
and
pop
and
loopne
add
aaa
iret
sub
or
and
es
pushf
adc
addb
and
mov
cmpl
mov
movsb
je
les
test
loopne
jb
shlb
pop
jbe
adc
popf
dec
out
cmpsb
xlat
dec
rcrb
es
mov
sbb
test
push
adc
stos
xchg
push
push
mov
and
popf
jg
or
dec
mov
adc
adc
dec
mov
test
test
add
nop
cmp
dec
rolb
cld
out
loope
daa
pop
rcrl
cmc
xchg
je
inc
mov
ret
cmp
xchg
pop
push
rol
movsl
jg
jg
push
adc
dec
call
xor
mov
bound
daa
add
xchg
outsl
adc
add
mov
add
out
repz
xchg
in
sub
js
sahf
xchg
inc
dec
dec
stos
add
leave
cmp
cmp
mov
xor
icebp
inc
and
data16
movsb
shrb
jno
iret
je
or
dec
imul
dec
and
xchg
mov
push
xchg
out
sub
adc
in
jnp
jle
arpl
imul
test
or
push
mov
outsb
mov
fcomi
imul
and
xor
cmovns
push
stos
add
repnz
ret
xchg
pop
gs
mov
ret
pushf
fstl
mov
test
aaa
mov
mov
aam
dec
add
push
pushf
out
stc
lret
xchg
add
es
adc
test
pop
mov
adc
sbb
xchg
test
loope
clc
pop
repnz
mov
cmpsl
negb
jno
xchg
nop
pop
iret
cmpl
mov
mov
push
ficomps
dec
rorb
cld
in
mov
xlat
xchg
adc
jne
or
jnp
call
out
lds
dec
pop
and
push
stc
pop
xor
dec
pop
pusha
out
or
xchg
adc
push
add
cli
jmp
mov
icebp
icebp
and
pop
pop
mov
fldz
or
xor
loop
pop
push
xchg
cli
test
sub
xchg
lods
cmp
add
jle
jne
add
xor
lret
push
fidivs
arpl
les
repz
in
or
inc
scas
push
push
pop
push
negl
jnp
mov
and
cmp
scas
out
add
ror
mov
mov
or
mov
cs
push
cmp
push
mov
daa
push
sub
mov
push
int
fmull
or
fs
push
add
sub
inc
push
xchg
sub
push
mov
cs
cmp
test
sti
pop
popa
cmp
ret
inc
pop
lahf
ja
jae
jns
sub
stos
inc
push
jb
fcoms
popf
pop
jno
dec
in
in
imulb
xchg
sub
stc
inc
adc
sti
aaa
test
sbb
add
arpl
jg
xchg
rclb
sub
jns
popa
iret
push
aad
je
lods
scas
out
inc
xchg
or
inc
shrl
ds
pop
xor
push
data16
and
cmc
dec
sbb
pop
in
cmp
es
jne
pop
sub
leave
mov
adcl
into
push
sub
data16
pop
enter
decb
mov
adc
jne
xchg
jle
ret
bound
adc
xor
test
add
inc
mov
add
pop
shll
push
cmpsl
cwtl
mov
fwait
dec
xchg
cmpsb
das
std
jg
lds
or
adc
or
jno
sti
xchg
mov
outsb
stos
in
xchg
xchg
pop
inc
mov
addl
jp
hlt
push
lods
fdivr
test
sub
les
fscale
std
sarb
push
out
dec
aaa
mov
xchg
jo
bound
dec
dec
movsl
lahf
dec
push
jns
push
inc
jnp
jg
adcb
jae
push
inc
cmp
mov
cmp
popfw
xchg
mov
cmp
aas
int3
insl
out
ss
aad
in
pop
inc
aaa
mov
cmp
push
ret
and
dec
inc
mov
xchg
stc
jle
and
js
adc
mov
mov
iret
adc
cmpsb
jg
xlat
jl
pop
cmc
popa
cmp
sbb
pop
jo
push
flds
adc
movsl
jae
aad
fldl
dec
adc
cmp
shrb
jae
or
ljmp
movsb
lret
mov
sub
out
inc
push
ficompl
and
pop
bnd
stc
iret
xor
mov
jb
sbb
cmp
jbe
xchg
push
pop
aas
jmp
cmpsb
loope
inc
jl
pop
adc
jmp
fwait
mov
aaa
xlat
das
jae
sub
pop
xor
cmp
jp
sbb
dec
mov
pop
lock
test
xchg
xchg
cmp
and
test
repz
icebp
mov
jecxz
jl
add
jns
shrb
dec
out
sub
out
loopne
mov
lahf
mov
dec
xor
in
adc
mov
out
sub
fiaddl
xadd
mov
shlb
int
pop
adc
pop
js
pop
std
jae
mov
and
cmp
inc
enter
adc
in
loopne
sbb
loop
mov
adc
mov
cld
mov
popf
lock
adc
mov
mov
jns
sbb
popa
mov
xchg
insb
or
sti
add
sbb
pop
jno
mov
cld
pop
pop
add
out
xchg
jle
test
jb
dec
hlt
cmp
gs
push
inc
xor
and
push
leave
xchg
inc
pusha
insl
push
xchg
and
push
mov
xor
push
inc
or
mov
push
sbb
sarl
xchg
dec
jg
push
pop
or
xor
dec
or
mov
cmp
shl
sbb
adc
mov
sar
adc
push
rorl
jmp
movl
repnz
faddp
movsl
push
adc
js
repnz
sub
repnz
push
call
out
jl
sub
push
pop
jecxz
pop
addl
xor
add
xchg
scas
test
jns
pop
gs
lock
test
bound
ret
bnd
sbb
push
shrl
pop
mov
push
adc
pusha
aad
and
mov
pop
test
addl
mov
jbe
jl
orl
push
daa
mov
and
shlb
shll
jge
aaa
xor
ds
bound
or
mov
jno
xor
js
shrb
in
xor
cmp
inc
add
enter
stc
add
mov
test
inc
call
mov
out
into
cmpb
push
add
cmc
ja
lret
rcrb
push
out
jbe
cwtl
fidivrl
fdivl
cmp
bnd
mov
mov
mov
hlt
sbb
pop
xchg
sbb
sub
test
popl
mov
faddl
mov
cmp
mov
out
cmp
cmp
leave
add
fmull
mov
fisttpl
mov
xor
mov
dec
in
xchg
clc
jno
and
lret
dec
push
add
jg
pop
add
sub
add
adc
lods
leave
ja
mov
cmc
cltd
inc
dec
jle
js
mov
mov
mov
jp
in
sbb
faddl
subl
das
shlb
je
outsl
rcrb
mov
mov
into
xchg
hlt
inc
push
pop
test
outsl
lods
xor
jb
sbb
fcmovbe
or
adc
mov
mov
cld
lret
in
ret
ds
or
push
nop
xor
pusha
mov
inc
dec
inc
push
push
inc
xor
dec
add
inc
xorl
rol
jne
sbb
xchg
xchg
arpl
xchg
mov
out
jmp
adc
push
sub
sbb
sbb
and
xchg
mov
fcom
mov
xchg
and
fcmovbe
push
fldenv
add
jmp
call
mov
xor
push
add
mov
ret
enter
xchg
enter
int
mov
decb
js
mov
jo
in
push
push
sar
push
mov
push
arpl
pusha
das
xor
fwait
and
push
cmp
jecxz
pushf
shlb
jecxz
mov
pop
ja
ljmp
xchg
sub
pushf
shll
adc
jp
mov
aad
adc
lods
inc
pop
popa
pop
xchg
mov
imul
stc
das
std
imul
push
sbb
xchg
aad
test
mov
test
pop
pop
xchg
mov
push
add
and
jo
mov
sbb
adc
push
and
repz
and
xor
push
dec
or
scas
fdivr
xchg
mov
xor
movsb
add
movsb
push
cmpb
cwtl
flds
fstpl
jle
aaa
or
mov
stos
add
fimull
pop
std
lock
cmp
adc
rcr
insb
adc
sbbl
sbb
lret
rolb
xchg
pop
insl
mov
or
cli
stos
mov
pop
pop
adc
dec
shlb
sahf
lods
adc
inc
faddl
out
mov
push
jge
pop
xchg
movsb
mov
sarb
or
mov
sti
mov
bswap
jp
adc
mov
add
jmp
faddl
mov
add
jbe
adc
sub
jb
push
inc
out
add
ss
jns
sbb
cmp
ds
and
fistps
adc
aaa
adc
xchg
inc
js
pop
dec
in
adc
dec
sub
test
fs
mov
arpl
xchg
mov
pop
into
in
mov
cs
dec
gs
call
add
push
stos
dec
insl
fsubr
add
dec
fisttpl
xchg
xor
aas
inc
pop
nop
push
pop
outsl
lcall
cmpsb
dec
mov
mov
enter
or
and
js
sub
add
cmp
cmpsl
xchg
nop
sub
sbb
adcb
xor
lods
mov
fidivrl
cmpsl
jno
movsb
cmp
xchg
aad
rcrb
xchg
sub
outsl
and
xor
roll
fwait
arpl
push
jle
xchg
ja
xor
adc
xor
lods
push
jne
sahf
loop
aas
jns
rorl
mov
arpl
add
pop
lea
rclb
adc
and
adcl
jle
adc
loopne
sub
xor
or
jl
sub
xchg
lods
ds
xchg
jl
test
bswap
sbb
cmp
in
out
test
add
pop
add
jge
mov
daa
es
test
xchg
jns
js
pop
push
in
lods
xchg
loope
adc
sbb
sbb
test
add
pop
xchg
lods
std
or
mov
inc
jne
sub
ret
aas
aaa
icebp
push
inc
shll
iret
je
jnp
sbb
add
cmp
imul
je
lret
dec
mov
inc
std
out
gs
cmp
mov
scas
and
gs
leave
call
movsl
jge
fsts
aam
lock
loop
mov
mov
push
cmpsl
insl
loopne
enter
imul
inc
or
pop
pop
stos
outsb
dec
jge
inc
repnz
add
mov
hlt
dec
cmp
bound
leave
sub
pop
inc
xor
mov
pop
insl
hlt
push
in
jl
enter
xchg
lret
jmp
stos
stos
dec
or
push
pop
mov
and
in
popa
inc
fisubrl
popf
sub
arpl
sub
cli
mov
push
mov
ret
cltd
arpl
sbb
push
xor
shrl
test
mov
mov
nop
push
incb
xchg
jo
or
xor
int3
fsubl
push
dec
test
test
in
mov
sarl
les
mov
mov
lret
lds
add
xor
inc
push
loopne
inc
xchg
outsl
push
and
or
mov
and
loope
std
xchg
inc
lret
mov
cltd
insb
jnp
sahf
push
sbb
out
addb
bound
and
dec
mov
sub
jg
fs
inc
jp
cmp
divb
mov
jmp
mov
aaa
les
icebp
js
lods
clc
js
jg
popa
xchg
mov
mov
mov
sub
cmpsb
daa
push
adc
cmp
dec
push
mov
ret
roll
mov
aaa
xor
mov
fldcw
hlt
push
popf
ffreep
and
psadbw
roll
add
call
xor
xchg
rol
mov
jo
inc
dec
pop
mov
jle
sub
movsl
and
and
or
pop
fs
pop
out
pop
out
mov
das
push
xorb
aam
loope
in
jp
movsb
in
dec
decb
pop
mov
sbb
rclb
movsl
ror
xchg
notl
scas
cwtl
incb
ffree
xchg
pop
and
mov
outsl
in
shlb
call
xchg
call
cmp
lock
mov
mov
shrb
in
cmpsb
push
inc
repz
cwtl
sbb
repnz
sbb
out
mov
ret
ljmp
mov
dec
mov
loopne
inc
mov
faddp
or
stc
mov
lret
cmpsb
add
xchg
bnd
add
mov
outsl
dec
or
mov
ja
js
enter
adc
mov
sbb
sti
xchg
stos
mov
fmull
jae
mov
inc
stos
adc
or
mov
add
cmp
stos
cmpsl
jmp
loopne
cmp
lds
adc
pop
add
add
shlb
pop
bnd
mov
push
pop
push
adc
mov
sbb
push
andl
cmc
cli
mov
mov
rcl
ja
adc
cli
es
or
dec
fcompl
aad
jae
mov
jns
xchg
pop
out
lret
inc
cwtl
test
insb
dec
les
cmp
lret
roll
daa
jns
fidivs
int3
mov
mov
scas
adc
fwait
lock
mov
adcl
imul
jo
pop
dec
sbb
mov
push
fs
inc
mulb
xor
adc
mov
into
push
mov
lahf
loopne
or
orl
cltd
add
sub
mov
je
fstpt
into
cmp
cld
xor
lcall
bound
add
dec
push
dec
insb
repz
or
dec
push
push
xor
insb
mov
pop
xchg
pushf
mov
addl
push
sti
xchg
les
mov
adc
mov
push
or
fmuls
adc
push
mov
mov
mov
add
adc
iret
xor
inc
inc
push
mov
dec
push
jl
adc
xor
test
cmp
sahf
sbb
popa
daa
or
data16
mov
push
fxch
mov
rclb
imul
imul
jne
cmp
jno
fisubrl
mov
sub
cmp
jmp
lret
ds
xchg
dec
jecxz
out
je
sti
xor
jo
xor
inc
scas
jge
insb
aam
jno
sub
mov
out
xor
adc
jb
subb
inc
mov
inc
nop
xchg
in
loopne
lods
xchg
xchg
jle
mov
dec
mov
inc
test
js
mov
ret
test
aam
jo
stos
in
js
xor
dec
jecxz
in
mov
insl
jno
xor
fnstsw
push
jnp
xchg
daa
cmp
pop
mov
lahf
shlb
mov
inc
mov
inc
aad
jnp
and
xchg
scas
pop
jl
fisttps
in
aas
mov
sbb
aad
ja
pop
rcll
inc
jecxz
and
push
sti
xchg
mov
or
cltd
cmp
rcl
inc
adc
or
ljmp
jbe
lret
mov
movsl
js
pushf
daa
push
mov
xor
jb
loope
lds
jl
fildl
push
in
sub
mov
shl
add
jb
jne
fstpl
or
lret
cmp
pushf
jo
inc
dec
jae
mov
ss
pop
shll
jmp
into
les
cmp
lods
jnp
call
xchg
fisttps
fisubrs
aaa
xor
mov
jnp
adc
in
test
jne
mov
sbb
mov
jmp
inc
xchg
push
push
mov
loop
call
adc
or
pcmpgtb
adc
adc
fcompl
push
int3
mov
cld
or
push
sub
jns
pop
jae
dec
adc
subl
push
mov
call
aam
mov
adc
jnp
mov
pop
push
cmp
test
mov
pop
cmp
sub
push
push
lahf
pusha
mov
je
js
mov
sbb
cmpsb
ret
push
add
and
adc
cmc
xchg
fcompl
outsl
sub
in
fwait
cwtl
inc
aaa
inc
adc
testb
adc
ds
dec
inc
lods
sub
leave
and
add
mov
mov
pop
cmp
sub
and
pop
dec
push
push
sbb
pop
leave
xchg
sub
jle
iret
fs
movsl
inc
inc
arpl
jbe
mov
test
insb
stc
xchg
xor
jge
fsubl
out
repnz
rorb
xchg
mov
out
das
or
cmp
popa
ljmp
outsl
pop
arpl
in
jne
out
data16
aaa
cli
lea
scas
loope
clc
pop
pop
push
stc
mov
dec
xchg
mov
insb
xchg
rorl
sbb
and
xchg
lahf
lret
loope
mov
dec
sbb
sahf
and
fcomps
add
clc
ficomps
ret
mov
and
cmp
add
sub
dec
sub
loope
mov
icebp
add
xor
adc
andb
es
dec
das
cmp
leave
and
adc
add
inc
icebp
popf
stos
int
insl
sbb
pop
cmpsb
lcall
cmp
cmpsl
pop
xlat
leave
mov
xor
dec
mulb
sbb
loop
sub
cmp
pop
test
clc
xchg
loop
or
mov
call
inc
push
xchg
bound
call
mov
mov
jg
es
cld
sub
xor
mov
ret
hlt
or
push
pusha
aad
push
outsl
daa
in
sub
inc
fwait
push
push
push
sub
test
mov
jl
out
fiaddl
je
xlat
rclb
mov
repz
pop
or
inc
mov
push
mov
fwait
rorl
push
ss
ljmp
jmp
js
push
ja
or
pop
pop
xchg
fwait
jbe
adc
xchg
enter
mov
jns
mov
sti
inc
mov
test
das
loop
fdivrp
xchg
fnstsw
pop
daa
lock
pop
push
lret
add
adc
dec
pop
shrb
dec
jmp
sbb
adc
cld
and
sub
cli
cmpsb
inc
rclb
xchg
lahf
jno
shl
add
data16
sbb
mov
adc
mov
lock
enter
pushf
sub
scas
loopne
je
int3
repnz
ret
je
fcoms
xchg
rol
leave
test
ret
or
gs
ret
popa
movsb
pop
adc
test
xor
mulb
loop
push
sbb
lret
repnz
xor
adc
lcall
or
lret
mov
xor
xchg
pop
xchg
ja
sub
and
dec
subl
clc
divb
jl
scas
jne
js
mov
push
mov
and
jmp
mov
add
das
pushf
jl
and
jae
or
andb
out
sub
cmp
pushf
mov
movsl
pop
jp
ret
cli
idivl
push
repz
mov
divb
cltd
test
in
andl
mov
xchg
xchg
stos
push
and
and
sbb
in
or
push
mov
jae
cmpsl
mov
fiaddl
lods
xchg
idivb
mov
leave
cmc
cmp
mov
stos
lock
mov
jo
fucomip
inc
lock
sbb
inc
push
jbe
sbbl
mov
test
xchg
push
test
cmp
xor
and
push
push
lahf
test
cmc
push
xor
jl
je
into
std
cs
sti
pop
out
mov
push
fadd
hlt
cwtl
push
int3
js
into
movsl
mov
mov
mov
lods
or
inc
inc
into
cmp
xor
mov
xor
mov
xchg
inc
jne
clc
xchg
int3
das
outsb
and
fidivrs
or
cld
leave
mov
inc
xchg
imul
aaa
aas
fdivl
cmp
add
ljmp
cmp
jne
insl
leave
repz
inc
clc
icebp
mov
dec
inc
xor
sar
push
add
sbb
lahf
jle
sbb
dec
mov
cmpsl
mov
popa
fnstsw
call
dec
push
out
outsb
push
aad
ret
cmp
orl
mov
or
daa
xchg
fiadds
adc
fsubrs
or
cmp
xchg
add
fldl
scas
popa
xor
push
mov
dec
fisubrl
add
mov
push
mov
mov
fldl
outsl
adc
lahf
and
in
or
idiv
sub
lods
cmpl
mov
insl
lds
lds
push
jno
xor
sbbb
mov
aaa
ffree
dec
xor
loop
jl
mov
add
and
sahf
lods
mov
std
jecxz
inc
push
jge
aam
pop
testl
insb
mov
mov
mov
sub
iret
movsl
jmp
jnp
imul
jo
not
insb
or
out
push
movsl
dec
je
lret
mov
mov
leave
icebp
pop
mov
and
jo
and
or
xor
aaa
push
dec
dec
out
sahf
dec
jbe
add
stc
adc
add
rcll
out
and
dec
add
clc
dec
rorb
push
cwtl
dec
clc
sub
test
xor
xor
inc
jle
or
adc
cmpsl
sub
push
in
mov
mov
cmpl
push
jecxz
data16
mov
repz
mov
test
push
adc
inc
scas
and
xchg
sti
push
pop
subl
sub
sub
add
pop
xor
test
adc
sub
aam
add
lds
icebp
mov
daa
xchg
movsl
test
in
lds
push
adc
mov
cmpb
sub
mov
xor
pop
loopne
nop
mov
stos
insb
je
or
cld
inc
and
add
in
push
mov
mov
sbb
stos
or
mov
lret
dec
mov
add
dec
adc
aaa
and
in
inc
xchg
or
addb
inc
popf
dec
pop
test
jl
xor
insl
push
test
enter
sub
in
sbb
jae
bound
lret
stc
jb
popf
outsb
test
pusha
pop
inc
aas
test
and
pop
xor
pop
mov
popl
or
in
out
outsl
adc
xchg
cmp
cmp
je
adc
cld
adc
inc
jge
sar
adc
scas
mov
hlt
pop
sbb
stos
pop
jle
stc
icebp
aas
aas
orb
sar
xchg
popa
shlb
jge
stos
js
in
jp
jmp
xchg
stc
jb
popf
cs
es
xchg
xchg
add
sbb
jge
jb
stc
lods
js
stos
ds
mov
clc
arpl
in
shr
sbb
loope
cmp
in
pop
stos
adc
or
sbb
popl
mov
pop
adc
dec
cmpb
adc
pusha
orl
jno
adc
incl
jne
out
mov
loope
pop
popl
int3
andb
lea
lds
inc
xchg
fs
mov
inc
xchg
mov
mov
push
or
cmc
mov
in
adc
lahf
sub
cmp
ja
out
cmp
jnp
adc
ficomps
cmp
mov
out
xchg
jg
in
jecxz
jle
xlat
xor
cmpsb
test
mov
das
mov
out
mov
adc
je
sub
sub
push
dec
cmpsb
push
insl
jg
iret
xchg
adc
push
sub
and
add
lods
dec
inc
pop
dec
mov
jp
and
mov
inc
and
sbb
or
sbb
push
lods
stc
int
mov
repnz
aam
push
cmp
enter
jns
clc
jns
adc
sarb
jne
ficoms
repz
std
pop
pop
or
inc
mov
adc
sbb
insl
inc
enter
add
dec
imul
mov
push
insl
mov
and
mov
fldt
mov
dec
lret
add
test
test
jg
loop
orb
mov
ja
or
xor
or
aam
xchg
popf
add
cmpsl
stos
data16
fdivrl
adc
mov
sarb
mov
stos
daa
addl
fwait
mov
xchg
loopne
fcom
loopne
scas
jns
adc
mov
xlat
pop
xor
addr16
add
aam
repnz
inc
cmp
or
xor
lahf
imul
sbb
test
xchg
call
jnp
jo
out
cmp
pop
inc
pop
jae
aam
dec
add
lock
add
or
dec
or
xchg
jo
ret
jae
and
lds
sbb
mov
jo
lock
cmpsl
cmp
mov
or
pop
jb
mov
nop
hlt
out
arpl
test
enter
mov
leave
clc
testl
insb
xchg
inc
pop
dec
or
mov
xchg
pop
and
stos
mov
stos
push
decb
push
sub
and
or
dec
xchg
pop
inc
cltd
jp
mov
or
movlps
repnz
or
mov
jae
in
mov
and
sbb
movsb
out
bound
jbe
ret
scas
stos
xchg
insb
pop
cmp
movl
mov
mov
xchg
inc
mov
mov
rclb
rcll
or
mov
lahf
or
jp
push
xor
adc
xor
add
sahf
test
mov
fsubrl
test
movsb
mov
mov
mov
js
mov
and
fistl
les
lds
or
dec
fsubl
mov
xchg
scas
jg
add
jo
sti
mov
sarb
push
push
hlt
inc
movsl
jbe
insl
lahf
inc
pop
pushf
scas
roll
imull
insl
pop
push
pop
push
sbb
fs
push
stc
fcoml
addr16
fstpl
mov
clc
mov
jl
cmp
pop
nop
push
pushf
or
push
jge
pushf
pop
lret
call
dec
movsl
xchg
or
mov
imul
cld
add
shr
adc
inc
insl
xchg
addl
or
aaa
xchg
lcall
pop
mov
fwait
cmp
in
mov
lods
inc
lret
mov
or
inc
nop
push
rcl
xchg
mov
pusha
adc
xchg
mov
xor
test
xchg
add
in
test
rcl
push
xchg
adc
movsb
nop
pop
test
fadd
scas
leave
pop
les
test
xchg
sahf
or
dec
imul
in
xchg
enter
int
test
mov
test
sbb
pop
mov
mov
ja
mov
xchg
xor
in
cmpsl
lahf
icebp
sti
aaa
mov
in
mov
sbb
dec
jae
sub
aam
jg
stos
jno
shlb
adc
sub
adc
ret
pusha
add
mov
sub
jne
shl
lahf
xor
mov
inc
dec
cld
ja
sbb
mov
and
inc
les
inc
push
mov
std
mov
popf
dec
ret
std
jge
push
sti
jmp
cmp
mov
scas
xchg
mov
popa
ret
loopne
lock
push
push
pop
mov
xor
cli
bound
shl
in
push
ljmp
lahf
jne
fldt
lods
and
inc
cwtl
out
mov
adcl
cwtl
push
and
js
adc
cmpb
xor
mov
cwtl
call
in
jp
rorb
add
lea
jg
mov
shlb
add
fwait
scas
mov
out
fistl
xchg
sti
jbe
sti
insb
dec
call
inc
fistps
ror
sub
mov
mov
inc
adc
daa
gs
div
lea
sbb
fstpt
ja
push
jge
jno
pop
jg
push
iret
push
shll
and
adc
inc
mov
pop
mov
and
jl
stc
pop
inc
dec
sarl
xor
scas
mov
cld
or
fwait
cmp
iret
pop
push
cmp
push
repz
pop
add
in
loopne
add
pusha
test
aad
cmc
roll
pop
out
mov
pop
arpl
inc
pop
aam
nop
out
and
xor
or
sarl
stc
mov
xchg
xor
lock
jb
and
cmc
mov
pop
add
sub
aam
pop
mov
pop
notl
shll
das
push
and
std
lock
loopne
xchg
sbb
or
pop
pusha
clc
mov
jl
aam
ss
fcomip
sub
and
arpl
incb
pop
adc
add
and
inc
shrl
nop
mov
sbb
mov
inc
or
xchg
fidivs
mov
adc
mov
sub
movsl
imul
mov
std
popa
mov
xor
pop
sbb
fwait
cmp
fdivs
mov
jmp
scas
jns
js
mov
push
pop
imul
sbb
jmp
xor
mov
jns
rolb
rclb
lods
idivb
dec
sub
in
push
in
addr16
pop
lret
adc
add
pop
data16
loope
enter
pop
out
add
and
ss
or
cwtl
push
dec
sti
push
in
js
movsl
push
dec
shll
mov
stc
lock
cmp
mov
pop
sbbl
mov
jmp
imul
fwait
js
add
cwtl
jp
popa
stc
shll
test
loopne
out
inc
cmc
je
push
aaa
lods
fdivrs
lcall
mov
or
jo
sub
jns
or
push
mov
sub
imul
inc
sbb
mov
push
lods
movsb
sbb
xchg
inc
out
pop
adc
xor
or
jecxz
adc
insb
inc
xchg
xchg
xchg
pushf
arpl
adc
insb
add
testl
outsl
mov
jp
cmp
notb
std
mov
cmpsb
add
in
pushf
std
sbb
subl
mov
pusha
pop
pop
loop
in
mul
cmp
jle
sbb
int3
adc
out
dec
in
aaa
xchg
aad
jbe
xchg
fwait
sub
scas
xchg
setl
or
sub
dec
pop
lods
pushf
pop
mov
adc
divb
mov
les
and
add
xchg
xchg
rcll
sbb
adc
xchg
outsl
inc
mov
or
stos
stos
or
sub
or
sub
and
jo
jmp
dec
jmp
add
shr
mov
adc
test
dec
ja
cltd
push
je
mov
rcr
sub
je
popl
repz
push
in
and
inc
xchg
push
rorl
fistpl
fdivl
dec
in
xchg
mov
fisttpll
shrl
inc
sbb
mov
idivb
sbb
pop
fisttpl
xchg
adc
cwtl
mov
cmp
leave
or
dec
mov
fsubrl
mov
cld
ret
push
insb
lahf
cmp
pop
shlb
dec
stos
jecxz
xchg
das
add
out
les
in
sub
adc
sbb
and
xchg
test
fcoms
inc
jl
sbb
outsb
sbb
bound
sbb
sbb
cmc
cltd
ljmp
xor
ret
fbstp
loopne
into
lods
xor
push
jne
jg
sub
js
repz
fnstsw
cmc
icebp
pop
int
dec
mov
sub
jge
mov
jbe
int3
jae
push
daa
repz
pop
cmp
insl
in
or
pop
jae
dec
xorb
std
int
movsb
mov
popa
cli
cmp
xorl
stc
jecxz
mov
xchg
lock
jno
es
jns
loopne
shrb
sbb
repz
iret
pop
inc
leave
leave
pop
lret
or
xchg
sarl
mov
and
jle
push
insl
shr
cld
pop
cmp
leave
repnz
pop
cmp
mov
xchg
xor
mov
es
out
sub
adc
addr16
mov
push
and
hlt
out
popa
add
outsb
je
xchg
sub
mov
add
mov
push
push
sbbl
pop
mov
ror
enter
incl
jno
fsubrl
loope
lret
sub
scas
ljmp
fwait
or
shll
or
push
add
mov
enter
daa
jae
mov
mov
aaa
pop
mov
jns
andb
daa
das
fidivrs
lcall
shrl
push
push
je
mov
pop
inc
subb
outsl
mov
xor
or
mov
xor
clc
enter
leave
push
jno
mov
hlt
inc
filds
testl
in
mov
pop
bound
daa
bound
xchg
lahf
or
scas
push
repz
bound
adc
int3
cmp
inc
or
pop
cmp
push
push
adc
dec
sbb
jnp
cmpsb
sahf
jo
notl
jnp
mov
daa
mov
mov
mov
or
ret
clc
or
jns
stos
std
aad
pop
shlb
lea
sbb
ds
and
xor
mov
mov
outsl
push
out
ret
pop
jp
fstpl
cmp
add
push
adc
jge
dec
aam
adc
cmp
fistpll
rorl
addr16
xor
int
scas
loope
add
stos
jle
and
mov
jnp
jge
fidivl
nop
and
or
mov
lahf
or
mov
mov
aaa
push
push
push
or
int
xchg
xor
mov
dec
out
jb
add
in
and
fcmovnu
fstl
xchg
in
inc
cs
mov
push
js
testb
aad
cli
jecxz
cmp
test
lds
je
sti
mov
pop
and
incb
fxch
cwtl
iret
ljmp
sahf
loop
sarb
enter
out
adcl
jbe
inc
sar
int3
rcrl
cld
out
cltd
mov
xor
mov
xor
xlat
dec
push
pop
aam
push
movsl
fcmovnbe
lock
flds
jnp
jbe
xchg
clc
mov
add
push
lret
daa
stc
xor
or
dec
jp
xrelease
inc
sub
adc
dec
fadd
test
inc
hlt
cmp
sbb
cltd
and
enter
mov
adc
icebp
mov
ja
mov
nop
lods
clc
mull
xorl
inc
fistl
jnp
xchg
test
insb
pop
add
or
add
push
sbb
push
xor
add
xor
and
fnstsw
repz
data16
cmp
pop
mov
adc
aas
daa
addb
push
ljmp
enter
adc
mov
fsts
scas
push
xor
mov
and
dec
inc
push
cmp
cmp
xchg
repnz
andl
mov
or
pop
test
fadds
sbb
adc
in
push
jbe
pop
insl
inc
movsb
and
xor
test
mov
pop
gs
test
push
in
xor
lds
aas
ds
add
shll
jbe
fnstcw
ret
insb
iret
cld
cld
daa
inc
and
rol
jge
sbb
or
or
in
dec
icebp
jnp
adc
xor
sbb
test
xor
filds
fdiv
dec
loop
push
dec
and
fs
mov
or
dec
sbb
lods
pushf
shlb
out
in
xchg
fisttps
test
or
sti
sbbl
hlt
dec
test
jae
inc
mov
and
sub
out
adc
dec
aas
add
outsl
out
push
sbb
sbb
and
adc
dec
xor
pop
pop
xor
in
or
mov
daa
xor
rcr
out
call
out
xor
lret
popa
mov
mov
pop
loopne
ja
jno
push
xchg
xchg
add
jge
sub
xchg
insb
pop
add
ret
add
out
sahf
div
scas
mov
xchg
jno
mov
add
faddp
lods
add
mov
sbb
sarl
dec
push
imul
mov
lock
sbb
ret
xchg
in
loop,pt
fdivs
and
xorl
mov
mov
rorb
std
sbb
jns
xchg
dec
jbe
or
mov
insl
call
lds
pusha
aas
xor
and
test
fcompl
jl
sub
scas
insl
jmp
jae
adc
lods
mov
test
cld
mov
and
xor
pop
pop
adc
gs
mov
xor
loopne
jge
and
scas
roll
push
bnd
adc
jbe
mov
hlt
loope
orl
sub
and
jne
push
or
rolb
inc
aaa
push
add
arpl
inc
and
aaa
or
daa
leave
mov
mov
mov
and
dec
dec
or
and
int
std
das
cmp
sahf
aad
or
mov
fcoml
fdivl
pop
pop
xchg
out
inc
sbb
adc
xchg
lds
cmpsb
and
test
lods
dec
ljmp
mov
mov
imul
int3
mov
adc
in
rolb
and
xchg
jns
xor
xor
adcb
jnp
repz
sbb
lea
sub
jecxz
add
or
mov
adc
addr16
jno
les
sbb
lcall
imul
js
mov
popfw
ret
dec
mov
pop
jno
ss
dec
clc
mov
adc
lret
mov
push
cmpsb
sbb
add
adc
mov
and
data16
pop
outsl
popa
sbb
add
ret
loopne
mov
mov
hlt
cmp
sub
test
add
pop
xor
sbb
pop
fistpll
add
mov
scas
add
scas
mov
jge
loop
shl
mov
cmp
pushf
mov
les
in
mov
fdivl
lret
cwtl
cld
mov
xor
icebp
das
hlt
in
mov
pop
lret
sub
mov
push
fnsave
sbb
out
std
mov
js
loope
mov
or
dec
test
or
inc
sahf
cmp
cmp
ds
or
push
add
sbb
add
jecxz
jbe
lcall
inc
icebp
les
int3
scas
pop
xchg
cmpsb
int3
outsl
pop
xor
xchg
push
mov
js
sbb
or
adc
cmp
mov
dec
pop
adc
mov
jne
mov
scas
enter
mov
addr16
cli
shrl
lret
movsl
cmpsb
pop
sbb
fucomi
cwtl
mov
clc
lock
jecxz
pushf
pop
popa
mov
push
mov
fsubrl
scas
xchg
sbb
shlb
adc
sti
xchg
subl
popa
dec
in
mov
mov
push
add
mov
push
pusha
dec
minps
scas
push
test
cmp
mov
dec
jno
mov
call
shlb
cltd
data16
adc
adc
mov
mov
sbb
loope
mov
out
mov
xchg
lahf
jb
sub
push
repnz
aas
aas
scas
fwait
adc
dec
xchg
insl
cmpl
mov
xchg
std
add
test
or
pusha
cltd
jg
pushf
cwtl
dec
sub
cmpsb
into
sbb
lock
xor
or
push
adc
jne
hlt
fmuls
mov
xor
push
push
mov
lret
hlt
fiadds
ficomps
mov
fcomps
pop
cmp
les
xor
out
add
mov
jo
andb
lea
and
iret
pop
lea
cmp
fisttpl
frstor
aaa
or
xchg
add
xor
xchg
mov
in
pop
mov
les
or
and
mov
pusha
enter
ret
rclb
repz
xchg
mov
cmp
xor
mov
jbe
aaa
pusha
sub
imul
enter
roll
movb
jle
or
sbb
sbb
lcall
xchg
add
in
pop
xor
jb
mov
push
fdivl
jmp
movsb
sub
add
and
pop
fs
cli
push
add
pop
shrl
jne
lods
mov
ds
xchg
jg
outsb
lock
xor
ret
fdivp
testb
lods
or
leave
ljmp
les
sub
arpl
icebp
inc
cli
scas
pop
mov
or
adc
outsb
dec
inc
aam
mov
pushf
lcall
fs
cltd
xchg
pop
sbb
mulb
jecxz
insl
enter
ret
jbe
add
rol
mov
xor
adc
sub
scas
mov
pop
jnp
push
fildll
sub
scas
xor
lcall
sbb
std
loopne
imull
dec
cmovae
mov
in
cmc
dec
mov
push
fildl
ja
scas
sbb
and
fwait
cmp
add
ja
adc
inc
pop
mov
sarb
data16
insl
adc
sti
repz
mov
add
cmp
push
jl
aad
jmp
adc
inc
push
test
insl
popa
xor
pop
sbb
xchg
add
jle
shlb
pusha
xchg
add
or
sahf
or
cmp
insl
test
fistpll
aam
lcall
and
inc
test
jae
pop
xchg
hlt
out
pushf
stos
enter
std
jnp
jp
out
ret
mov
rcll
xor
xchg
loop
js
mov
cwtl
std
or
addr16
in
cld
arpl
xchg
incl
mov
fidivrl
push
mov
cs
insb
jne
test
js
shll
gs
sahf
lods
rep
jmp
ljmp
cld
fsubrl
adc
bound
jl
xchg
xor
cmp
into
cmpl
repnz
inc
subl
mov
sbb
lret
hlt
aad
cmpb
pop
sarb
dec
fistpll
stos
jne
or
out
icebp
scas
dec
ss
pop
leave
int3
sbb
push
pushf
pop
pop
mov
jg
add
mov
add
scas
cmp
xor
stc
into
pop
clc
ret
popa
add
ja
or
xchg
enter
or
mov
popa
sbb
hlt
aaa
xchg
aam
loope
out
fs
jl
lods
cmpsl
jbe
subl
mov
rcrl
hlt
shl
or
insl
clc
inc
mov
movsb
lret
xchg
mov
sbb
jne
xchg
sti
mov
mov
xchg
in
imulb
add
add
popa
xor
add
test
gs
mov
cmp
mov
enter
pop
push
jnp
imul
push
orl
jmp
xlat
xchg
pop
sub
cli
or
arpl
sti
shll
jle
enter
mov
repz
adc
clc
pop
mov
enter
xchg
outsl
jbe
add
arpl
cmp
mov
imul
jnp
hlt
mov
cwtl
push
sub
cli
mull
xchg
arpl
ret
sbb
xchg
inc
mov
add
int
cld
xor
in
xor
cmp
std
call
in
into
pop
mov
or
pop
ret
testl
mov
jb
repnz
addr16
jae
push
pop
stc
mov
test
push
dec
rcl
lock
or
out
cmp
pop
sbb
enter
push
insl
add
add
cmp
sbb
mov
repnz
or
xchg
pop
sub
mov
xchg
shlb
addr16
lcall
jae
sbbl
test
fmulp
xlat
xor
pop
lods
or
mov
add
outsb
xchg
pop
lahf
mov
xchg
fdivrl
fsubs
je
sbb
dec
shr
jnp
xor
mov
fcompl
fsubrs
jle
stos
cmp
xchg
cmpsl
add
lcall
ljmp
int
lods
sbb
lea
aad
jg
cwtl
ljmp
add
mov
sub
xor
or
sub
adc
test
sti
pop
pop
ss
jge
inc
xor
aam
mov
arpl
lds
cli
and
addl
mov
sbb
mov
into
faddl
mov
repz
and
mov
fbld
lods
or
dec
dec
stc
sub
pop
mov
pusha
inc
into
jno
inc
mov
mov
data16
call
pop
call
ds
sbb
call
sbb
cmp
push
cwtl
in
add
test
cmp
bound
rcr
sbb
hlt
movsb
jp
mov
or
and
ret
sbbl
call
push
cmp
pushf
inc
test
jb
xchg
inc
xchg
popa
loop
push
mov
hlt
push
sbb
out
test
lea
jle
dec
ficomps
repnz
jae
sub
enter
pop
xor
fmuls
addr16
mov
add
stos
shll
cmpsb
hlt
sar
test
js
jno
iret
cmp
sarb
mov
mov
push
sub
addb
cmp
cwtl
xor
fcmovu
je
cltd
dec
insb
test
sub
adc
int3
mov
test
test
jo
pop
and
dec
fdivrs
imul
fiadds
sbb
mov
mov
mov
loopne
and
inc
mov
xchg
cmovle
iret
dec
pop
rcl
imul
cli
mov
inc
jbe
ss
mov
les
hlt
in
testl
es
pop
fstp
mov
emms
aaa
mov
pop
sub
cwtl
mov
fidivrs
pop
daa
mov
out
shr
mov
aam
sbb
std
jb
push
call
ds
xchg
aad
mov
imul
ljmp
mov
push
ret
stos
fs
add
or
jp
xchg
ljmp
or
call
cs
jmp
add
mov
arpl
nop
pop
ret
fucom
clc
std
sahf
in
mov
arpl
int
adc
lods
movsl
mov
jno
mov
test
dec
mov
movsb
ret
push
sti
xchg
loopne
mov
jne
cmp
add
sbb
orl
sbbb
fdivp
add
daa
inc
test
int3
pop
aad
xchg
add
sahf
iret
mov
scas
xor
mov
out
adc
mov
lock
addr16
movsb
sbb
xorb
xchg
pop
lods
sub
pop
std
mov
push
cmp
lods
jnp
loope
fsubl
and
push
mov
pop
fisubrs
sbb
test
fucomi
cli
inc
notl
inc
add
push
xor
jg
scas
loop
fidivrl
int3
push
mov
cmp
lods
ret
insb
repz
or
adc
repz
sahf
movsb
mov
mov
adc
mov
lret
ret
imul
mov
loop
jns
arpl
pop
cmp
lret
pop
stos
inc
jb
and
fstps
das
mov
pop
andb
jg
adc
xchg
ret
inc
xor
jne
sbb
add
add
mov
rcrl
lea
lods
or
mov
xlat
xor
jmp
cwtl
iret
rcr
ret
cmp
aas
xchg
pop
sbb
shll
shll
mov
mov
xor
adc
xor
mov
sub
jb
fildl
enter
repz
and
rclb
cli
es
out
shll
not
mov
sbb
cli
es
jns
pushf
jp
xchg
sub
xchg
out
in
int3
jb
sahf
aad
dec
add
sbb
lcall
or
lds
jle
pop
dec
dec
iret
add
xor
mov
pusha
xchg
sbb
push
int3
in
aam
fildll
bound
and
imull
add
xlat
jg
push
je
scas
pop
ret
push
jae
pop
movsl
lea
add
ss
push
cmp
pop
xchg
adc
jl
cmp
jns
lds
xor
pop
cmp
push
jb
mov
dec
popa
push
push
push
ds
test
jns
or
scas
insb
vmovddup
aad
xchg
je
or
insl
inc
repz
pushf
cmc
idivb
fwait
mov
or
into
and
lret
clc
or
xlat
rolb
faddp
sar
and
push
xor
inc
std
fdivrl
andb
decw
mov
xor
daa
hlt
imull
inc
add
sbb
jp
int
adc
ljmp
push
aaa
in
mov
jne
mov
popa
sbb
fstpl
adc
repnz
and
add
daa
sbb
jno
scas
bound
int3
xchg
jns
call
bound
out
or
cmpsl
lcall
je
inc
jge
push
add
les
dec
and
sbb
xor
adc
movsl
jbe
jmp
fisubrl
fdivs
idivl
sti
adc
push
shl
icebp
fldl
loop
xlat
mov
aaa
or
movsl
mov
adc
xchg
mov
push
data16
jne
imul
movsl
jle
push
enter
int3
mov
imul
lret
mov
fdivrs
and
xor
mov
mov
jne
sbb
enter
mull
das
cli
iret
js
mov
popa
sbb
shr
ret
inc
hlt
adc
hlt
or
dec
andb
ret
int3
jo
xlat
xchg
dec
mov
in
scas
fstp
mov
in
mov
dec
jae
cmc
mov
ret
js
repnz
shlb
or
or
or
xchg
mov
stos
sbb
push
mov
push
mov
jp
pop
inc
jmp
push
inc
lock
sub
pop
dec
inc
cmp
jge
push
cmp
inc
jp
imul
sub
dec
bound
fstps
scas
add
adc
jmp
jns
in
mov
mov
push
dec
repz
push
cmp
sbbb
or
ss
clc
pop
adc
cmp
js
pop
aad
push
imul
je
mov
rcrb
inc
push
loope
lret
arpl
add
pop
sub
fistl
lret
mov
int
popa
fdivr
in
sbb
mov
push
test
push
xchg
aad
mov
fstpl
push
mov
je
mov
test
mov
cmc
pusha
xor
clc
in
fwait
lods
stc
je
scas
jns
push
mov
mov
test
xlat
andl
add
daa
ret
mov
fs
fstpt
fnsave
mov
lock
arpl
mov
jno
adc
or
xchg
push
mov
js
add
jle
mov
mov
int
xchg
xor
jp
decb
or
mov
es
jle
push
jae
scas
filds
ja
mov
inc
pop
lret
cmpsl
xchg
out
mov
icebp
jnp
and
mov
outsb
call
pop
test
or
movsl
pop
mov
xor
jg
sti
icebp
xchg
cli
sbb
aam
mov
push
imul
push
out
add
pop
test
ds
sbb
inc
jbe
stc
fdivl
rcrl
pop
pop
ss
cmpsl
and
inc
aad
dec
das
push
test
xchg
mov
push
mov
and
inc
and
ja
mov
xor
pop
pop
pop
test
ljmp
xchg
xorl
stos
push
inc
add
sub
push
arpl
dec
jne
cmp
into
dec
or
outsl
jnp
xor
inc
or
jbe
cwtl
popa
mov
xchg
ret
pushf
jnp
mov
pop
sbb
mov
inc
xchg
xor
das
loopne
daa
jns
outsb
sbbl
mov
clc
mov
xchg
std
xor
lods
outsb
loopne
cmp
xchg
and
sbb
out
jno
xor
int3
fcoms
or
cmpsl
mov
daa
or
fwait
xchg
out
shlb
lret
int
mov
fs
shlb
cld
push
inc
pop
clc
imul
inc
mov
adc
sbb
xchg
xor
jle
fisubrs
cmp
in
and
push
bound
dec
jg
add
cmp
dec
aaa
testl
rcrl
movsl
add
xor
ss
int
cmc
shr
int
add
lds
or
sub
xchg
jmp
jb
xchg
mov
out
dec
xchg
pusha
in
push
mov
adc
adcb
repz
or
aam
loop
inc
pop
movsb
into
mov
push
outsl
jo
sbb
mov
stc
adc
push
xchg
jo
in
aaa
mov
dec
rorl
jo
psubw
int
inc
inc
fcomp
and
pop
adc
iret
push
dec
xor
cmc
pushw
jns
jmp
aas
iret
add
outsb
add
xor
fcmovb
orl
shl
mov
cmp
cmp
mov
lea
pop
sbb
addr16
ret
daa
jle
aam
xchg
js
inc
mov
xor
je
shrb
add
int3
in
jns
and
xor
cld
xlat
push
inc
sbb
pop
inc
adc
push
pop
addb
repnz
sbb
pop
inc
mov
ret
fstps
cmc
inc
loope
adcb
and
mov
xor
mov
mov
cmc
pop
dec
xchg
stc
and
push
or
add
mov
sahf
scas
mov
popf
leave
push
adc
sbb
je
inc
cli
cmp
dec
sti
es
ret
loop
cmp
pop
loope
outsb
loopne
mov
pop
daa
scas
xchg
aas
mov
pop
sbb
in
inc
push
sarl
mov
jl
lds
mov
insb
add
dec
loopne
jnp
and
notb
push
iret
jge
jb
xor
es
jns
int
jge
les
pushf
repnz
mov
adc
fistps
xchg
push
cmp
jle
jnp
mov
call
push
in
andl
cs
xor
add
mov
ficoms
inc
js
int3
and
in
or
jae
int3
push
fcmovnb
dec
ds
cs
shlb
js
cmp
enter
adc
jno
jg
pop
clc
aad
adc
repz
call
adc
inc
daa
jge
inc
or
mov
inc
sub
or
std
push
push
fisubrs
lods
jl
sub
stos
mov
jp
lods
jbe
lcall
jecxz
sti
scas
jmp
xor
inc
sub
pop
jo
test
xchg
jp
add
fstp
jb
inc
xchg
mov
adc
push
push
icebp
shrb
xor
ds
pop
rcrb
fnsave
ret
jp
push
je
xor
out
fldl
adc
fistl
push
enter
sbb
in
adc
pop
xor
xchg
add
icebp
idivl
fldt
fdivp
lods
das
sub
mov
fistl
push
popf
in
push
shll
xchg
add
shlb
bound
pusha
sbb
negb
mov
jne
in
push
repnz
ds
xlat
ljmp
lea
clc
sbb
sub
popa
bound
pop
sub
add
je
sahf
rcrb
and
adc
mov
mov
inc
data16
test
adc
push
roll
xor
ja
mov
shlb
hlt
shll
mov
mov
cmp
inc
push
cmpsl
loopne
sbb
push
sbb
daa
mov
jge
cmp
fisubl
test
mov
ret
fidivl
lock
and
stos
stc
incl
test
cld
fsts
enter
dec
fsubrs
add
jo
sub
stos
enter
sbb
cmpsl
add
pushf
jae
pusha
in
clc
mov
jle
test
test
fdivrs
les
mov
cli
cmp
sbb
xor
fdivrl
fisttps
cmp
sub
ja
es
into
jmp
in
clc
scas
rorl
cmp
add
mov
in
cwtl
in
xor
add
xchg
xchg
cmpsl
in
mov
pushf
dec
sti
xlat
or
cmpsb
cmp
addr16
mov
pop
clc
enter
sbb
add
mov
mov
pop
pop
pop
push
mov
lock
sbb
nop
xchg
repnz
and
dec
out
loope
repnz
dec
mov
xchg
mov
cmc
sti
mov
mov
pop
movsb
sbb
call
fnstenv
shl
leave
cmpsl
pop
cmp
xchg
lods
xor
stc
push
leave
pop
xchg
ja
mov
adc
in
jp
jnp
jp
addr16
shll
in
sarl
ss
insb
call
scas
cmp
sub
sbb
notl
loopne
and
decb
scas
and
out
push
or
mov
mov
add
and
fstl
loop
cmpsl
pop
mov
mov
outsl
fcomi
and
pop
les
in
dec
sub
repz
dec
inc
movsl
mov
sbb
loop
jmp
shrb
outsb
stos
push
in
pop
xchg
in
jg
test
add
stos
out
pop
outsl
cli
pusha
adc
add
insb
mov
cmp
nop
ss
fiadds
fisubrs
inc
cmpsl
pushl
outsb
push
sarb
pop
and
xchg
dec
movsl
inc
repnz
pop
mov
sub
or
jns
fisubl
dec
into
push
or
mov
int3
cmp
js
loope
cmp
pop
cmpsb
adc
pop
push
adc
jg
loopne
inc
xor
or
roll
pop
mov
mov
fnstsw
cwtl
mov
and
add
clc
xchg
wbinvd
push
fimull
lret
out
sbb
repnz
adc
pop
cltd
xchg
dec
push
xor
xchg
sbb
ret
mull
sub
lahf
rcl
fsubs
nop
adc
repz
ret
cmpsb
inc
fldl
add
mov
xchg
shll
pushf
loopne
inc
pmuludq
iret
fsubrs
adc
stos
mov
scas
inc
pusha
jns
add
scas
xor
adc
outsl
mov
and
stc
jno
and
aam
dec
adc
push
jae
dec
fsubr
fadds
adc
outsl
repnz
int
and
jp
mov
gs
mov
jl
pop
insl
into
cmp
shlb
or
enter
les
int
cltd
inc
test
test
push
es
addr16
mov
stos
jmp
dec
hlt
xor
sub
sahf
popa
imul
xor
clc
bound
mov
movsl
cltd
js
pop
adc
mov
js
stos
inc
dec
sub
sub
sub
or
xchg
xlat
in
xchg
cli
xchg
add
enter
in
mov
jo
dec
push
or
loope
js
repz
lea
jge
fimuls
inc
cmc
out
add
inc
pop
xor
push
pushf
iret
ds
pop
enter
lcall
cmpsb
xchg
jmp
sbb
and
cmpsb
mov
sarb
jp
mov
cmp
shl
cs
aad
cli
ret
cli
xor
cld
je
push
scas
push
adc
gs
mov
int3
std
js
or
fdivrp
xchg
sub
add
inc
test
dec
push
enter
mov
subl
and
std
mov
mov
xchg
pop
lods
sub
adc
aam
adc
xchg
pop
jle
in
jmp
push
sarl
mov
insl
sbb
lods
push
push
add
xor
mov
ja
push
je
push
cmp
outsl
pop
xor
xchg
or
jp
push
pop
push
out
mov
cwtd
pop
fbld
ror
or
faddl
int
dec
arpl
push
dec
iret
add
or
decb
push
xchg
es
fimuls
test
fisubs
call
dec
jmp
inc
aad
and
pushf
call
fmuls
lret
dec
testl
sub
dec
pop
xor
add
mov
push
imul
xor
adc
sbb
lcall
lods
outsb
dec
jo
adc
je
dec
aam
add
out
adc
add
mov
sbb
add
mov
stos
jns,pn
push
lret
aas
sub
sub
pop
pop
jns
out
aad
mov
push
stc
iret
int
lock
mov
mov
out
mov
dec
pushf
lods
hlt
loop
in
cmp
pop
in
lret
sub
daa
movsl
icebp
cmp
jno
dec
add
clc
daa
cld
xchg
adc
pushl
jo
cmp
push
pop
mov
fadds
push
and
push
push
sbb
jne
inc
jge
das
pop
push
and
dec
mov
ret
xchg
sbb
or
out
js
in
arpl
push
mov
cli
dec
lcall
pop
cmp
xlat
movsb
and
iret
push
dec
lcall
fldl
or
sub
mov
mov
loopne
mov
mov
xor
xor
jp
push
insb
xorl
movsl
dec
mov
pusha
jb
push
int
inc
test
mov
cltd
pop
cmp
mov
fisttpll
mov
lods
fldcw
xchg
stc
int3
or
mov
mov
mov
lcall
xor
jae
inc
mov
jnp
mov
jmp
imul
es
push
inc
fidivl
jo
sbb
push
insb
xadd
pop
daa
jmp
or
mov
push
sub
leave
lahf
jbe
mov
xchg
loopne
fcoms
sbb
mov
int
fdiv
jge
mov
or
flds
ffree
cwtl
xchg
rcl
pop
fcmovu
cmp
out
ja
and
push
adc
idivb
div
fdivl
faddp
and
xchg
repnz
pushf
out
rcr
scas
repz
imul
or
and
shl
or
clc
and
add
mov
outsl
fdivl
fcompl
push
stc
push
mov
push
pop
out
sub
dec
jecxz
test
repnz
repz
movsl
mov
gs
push
push
scas
ret
push
addr16
dec
mov
stos
pop
stc
je
cltd
sub
jno
aad
adc
das
fdivrs
adc
or
fnsave
mov
add
push
repz
xor
pusha
xchg
mov
jb
movsb
pusha
cld
sti
in
xchg
lods
and
ret
pop
mov
enter
mov
fistps
add
lock
stos
inc
mov
lahf
mov
adc
and
sti
and
pop
fmull
stos
or
fstpt
mov
outsl
pop
adc
dec
stos
js
mov
mov
and
adc
loope
cmpsl
out
loopne
rcrl
shl
inc
jmp
mov
or
mov
fmul
jmp
adc
pop
mov
sbb
sarl
mov
fbstp
and
jecxz
inc
dec
mov
gs
dec
pop
js
sbb
inc
xchg
repnz
loope
fwait
cmp
cmp
xchg
insb
ret
xchg
insb
cmp
adc
and
and
pop
lret
cmp
push
pusha
push
push
andb
mov
ret
insl
jo
cmpsl
fisttpl
jge
std
sbb
ljmp
sbb
dec
in
cwtl
test
insb
pop
jecxz
dec
ljmp
dec
int
sbb
mov
xchg
jge
fcomps
call
or
and
not
xor
lock
push
call
je
stos
inc
mov
addb
pop
stos
mov
and
and
jnp
mov
mov
ja
xor
in
sbb
or
mov
enter
lcall
test
and
xchg
cmp
xchg
addl
leave
xchg
jp
movsl
fnstenv
insl
and
cltd
and
testl
stos
jecxz
scas
inc
pop
lock
mov
mov
cmp
jo
mov
inc
mov
fs
stc
jg
shll
fs
push
xchg
rclb
data16
les
cli
enter
popf
stc
aad
mov
dec
and
xor
inc
fdivrs
add
sub
out
repnz
mov
add
sbb
sbb
fidivrs
jmp
mov
xor
pop
mov
hlt
mov
xchg
jne
faddl
lahf
push
cwtl
mov
out
cmpsb
push
sub
mov
out
iret
cmp
add
test
add
inc
or
jo
xchg
adc
add
in
leave
popa
jle
adc
sbb
mov
jecxz
int3
and
jns
push
jle
add
sbb
xchg
loop
stos
pop
push
addr16
dec
xor
fisttpl
adc
icebp
push
sub
out
int3
mov
ret
mov
loopne
cmc
clc
fsubp
lds
xor
icebp
or
sti
outsl
data16
pop
xor
dec
push
cld
pop
xchg
xchg
pmulhw
addl
adc
in
mov
push
jo
mov
jne
loopne
mov
data16
fadds
inc
inc
lret
out
fidivs
dec
pop
xchg
mov
lcall
xchg
in
sub
xor
shr
adc
or
jns
cmp
movsb
dec
dec
add
out
ss
push
add
out
push
aam
rolb
lods
jmp
das
icebp
lds
out
loop
xor
ret
rol
xor
inc
fsub
xchg
sti
ss
in
movl
in
popf
ret
jp
mov
xchg
sbb
push
aaa
dec
push
push
aad
jnp
gs
in
rcr
jl
xchg
fsubs
sub
test
ljmp
sahf
out
mov
sub
sub
jmp
push
stos
cwtl
xchg
push
stos
fwait
add
cltd
fcmovnb
rcll
nop
mov
insb
and
fwait
xchg
xchg
inc
shl
inc
pop
out
add
adc
sahf
dec
cld
jecxz
insb
insb
fs
xor
cmp
xor
sti
and
test
mov
icebp
les
lds
mov
je
in
inc
add
cmp
jns
dec
call
fstpl
inc
int
add
or
fdivrl
mov
jmp
hlt
stos
mov
lods
mov
stos
ljmp
push
mov
psrlw
jns
hlt
cwtl
icebp
mov
fdivr
inc
push
and
sbb
insl
mov
rolb
je
stc
stos
inc
scas
jno
sub
test
repnz
ret
es
daa
or
daa
icebp
xor
xchg
faddl
add
out
inc
shrl
push
test
xor
sbb
roll
pop
pop
cs
aam
rclb
dec
mov
mov
and
push
rcll
out
stos
sub
and
imul
mov
jg
push
je
lods
scas
push
lea
cmp
push
iret
xor
jl
add
mov
insb
int3
inc
add
cmp
mov
inc
test
add
data16
repnz
fimull
mov
call
pop
repz
idiv
jae
cmp
xchg
in
stos
loope
jo
lods
add
jp
xor
and
add
pusha
xor
movb
sbb
js
mov
mov
icebp
sbb
gs
mov
lock
loopne
sti
jg
lods
sbb
lods
xchg
shr
xor
int3
movsl
xchg
push
inc
push
and
adc
add
dec
pop
xor
cmc
mov
push
ljmp
in
repz
cmovnp
mov
pop
jnp
pop
rorl
adc
sub
xor
inc
and
inc
push
fbld
sbb
inc
orb
enter
test
jno
mov
push
lret
aad
jne
popa
xchg
push
loope
es
lcall
cmp
test
pop
pop
fs
pop
ret
data16
outsl
inc
lahf
nop
lahf
daa
icebp
adc
mov
or
sub
cmp
jb
cmc
das
shrb
stc
dec
sub
les
cmp
or
adc
inc
pop
sbb
or
dec
jp
test
jno
es
push
xchg
scas
lret
cmc
imul
push
push
jae
fs
mov
mov
int3
push
aam
cmp
push
dec
fdivl
enter
hlt
xor
cmp
pop
imul
in
dec
les
mov
pop
inc
dec
dec
push
iret
xor
addr16
dec
ret
dec
repz
clc
jle
inc
sbb
sbb
sbb
push
dec
aam
inc
and
les
fs
inc
xchg
data16
sti
in
loop
jl
mov
cmpsl
add
dec
cmp
cmp
dec
push
insb
aaa
adc
add
insb
fisubl
adc
mov
jnp
mov
sbb
xor
jb
jl
ljmp
pop
cmpsl
mov
outsb
ja
imul
xchg
adc
daa
popf
adc
das
inc
mov
addr16
addr16
popa
fdivrl
ret
cmc
lea
insb
ret
fstp
out
ds
lret
or
popf
mov
cmpsl
decb
cmpsl
out
push
cmp
xchg
test
adc
dec
enter
or
cltd
daa
ljmp
les
loopne
mov
negl
inc
or
pop
adc
dec
cltd
testb
ljmp
sub
outsb
mov
aam
mov
into
push
xor
mov
pop
hlt
push
cmp
add
imul
mov
and
lret
cmp
pop
into
sbb
scas
mov
add
pop
or
xor
pop
movsl
rol
ret
push
aas
sub
out
jmp
sub
pop
fistps
cltd
adc
stos
out
bound
sbb
push
shr
cwtl
jge
cmpsl
and
xchg
push
orb
dec
mov
daa
mov
adc
js
pop
xlat
test
adc
jnp
fidivrs
inc
xor
cmpsb
dec
pop
dec
sbb
or
push
andb
jmp
test
int
mov
mov
out
into
shrb
cmpl
sbb
je
iret
fucomip
mov
js
ljmp
jmp
sbb
adc
and
cmpsb
test
cmp
and
cmpl
rclb
rol
dec
subb
in
inc
insl
into
inc
or
pushf
mov
and
xchg
jmp
es
xchg
jbe
lea
lahf
es
ror
loope
pop
shll
cmpsl
aaa
xchg
inc
xor
pushf
es
xor
je
sbb
inc
xlat
mov
and
sub
sbb
enter
xchg
add
xor
gs
sub
in
aaa
ljmp
fcmovne
fistl
stos
push
sbb
mov
dec
lret
sbb
mov
mov
or
pusha
shlb
movsb
or
inc
mov
adc
scas
es
jecxz
mov
js
dec
js
jg
pushf
xchg
aad
dec
ret
jecxz
in
xchg
pop
call
lahf
cltd
repnz
out
dec
call
leave
inc
jno
adc
pop
jg
inc
push
sub
aaa
add
les
pop
push
mov
xchg
mov
mov
pop
mov
test
dec
xchg
sub
popf
push
mov
add
and
ret
adc
lea
inc
xchg
data16
adc
lds
and
push
ds
adc
jne
mov
cltd
add
fdivl
rclb
clc
xchg
int3
cmpb
pop
sbb
inc
gs
leave
mov
enter
inc
and
mov
push
imul
pop
xchg
add
sahf
or
in
and
cwtl
and
jecxz
push
aas
gs
das
lock
ja
je
jbe
push
xchg
xor
not
shlb
loopne
or
icebp
mov
fsubs
inc
ss
jmp
stos
and
inc
xor
dec
mov
push
add
sub
je
dec
mov
add
mov
pusha
shr
movsl
ds
cmp
js
or
scas
lods
sti
incb
xlat
mov
fisubrl
into
rclb
xchg
lock
dec
enter
push
sbb
iret
aas
into
repz
lods
xor
inc
inc
dec
sahf
lock
imul
adc
or
dec
xchg
shll
jo
mov
fldenv
cli
jmp
rorl
sbb
push
lods
roll
cmp
nopl
jle
pop
pop
xor
unpcklps
sahf
jge
pop
xchg
inc
cltd
add
push
dec
popl
mov
sub
xchg
js
xor
cmp
out
rclb
outsb
popa
jl
jae
cmpsb
mov
or
inc
test
adc
xchg
and
pop
pop
inc
mov
pusha
sar
imul
xchg
push
push
fcomps
cmp
and
inc
fwait
push
jl
leave
jl
fldl
jge
jge
out
int3
pop
xchg
lock
add
cwtl
or
cmp
scas
cli
mov
and
jb
sub
mov
insl
pop
lahf
jnp
test
and
rorl
in
cmp
sbb
or
jbe
mov
std
aam
jge
lds
nop
rolb
xchg
sti
lods
mov
cmp
or
cmpsb
cltd
cltd
arpl
scas
repnz
adc
jne
das
movsb
incl
mov
mov
inc
das
orl
push
lret
sahf
jmp
fmuls
mov
xchg
push
aas
push
movsl
ljmp
hlt
mov
xor
adcb
lahf
xchg
mov
andb
sbb
mov
inc
xor
dec
iret
clc
xor
or
lods
sbb
loopne
repnz
dec
push
lea
repz
fsubl
and
testb
jmp
pushf
movl
jmp
mov
mov
and
adc
sbb
cmc
xor
jns
nop
or
in
pusha
outsl
cmc
andl
cmp
xchg
dec
sbb
inc
into
pop
cld
mov
jo
mov
call
pop
pop
mov
sub
jp
enter
push
add
movsb
xchg
pop
xchg
adc
add
mov
daa
gs
fs
inc
sub
lahf
push
les
js
pop
fdivrl
pop
adc
lds
mov
adcl
cwtl
cmp
out
lods
sbb
test
out
rcll
and
shlb
pop
sub
mov
sti
jne
lea
cmp
cld
pop
xor
jmp
lock
aas
mov
and
cld
pop
std
and
aad
hlt
pusha
pop
cmp
sbb
dec
mov
mov
mov
xchg
lahf
inc
repz
sub
xor
cmpsb
lods
mov
sarl
xor
adc
or
ja
add
add
pop
stos
pop
push
mov
or
rcl
stos
imul
and
adc
dec
inc
fidivl
jne
jmp
nop
mov
test
and
pop
cmp
inc
cs
adc
clc
fldenv
adc
iret
mov
faddl
incb
fldl
add
jnp
cmp
adc
jo
lahf
cmp
lahf
add
mov
dec
pop
ret
mov
cmp
sbb
loopne
aaa
jo
lock
test
scas
je
pushf
sub
inc
or
loopne
je
jno
or
push
sbb
mov
adc
lock
je
lahf
add
cwtl
in
bound
movsb
or
xchg
mov
dec
mov
mov
push
popf
jb
ss
xchg
or
cwtl
fdiv
mov
mov
xchg
lahf
ds
xchg
mov
or
inc
insl
lret
fstl
inc
popf
ljmp
add
inc
or
stc
or
lea
insb
movsl
lds
in
jge
push
mov
xchg
test
mov
mov
hlt
sbb
inc
cmp
fistl
cmc
scas
mov
cmp
cli
fsubl
and
adc
loop
dec
or
lods
mov
cmp
std
sti
rorb
push
js
loopne
stc
sub
jb
lahf
mov
les
dec
call
pop
lea
mov
adc
jmp
inc
pop
mov
js
pop
mov
cltd
jne
sbb
into
sbbb
pusha
dec
movsb
and
sarl
sbb
and
add
or
test
dec
xor
cmc
push
imul
imul
jg
imul
fdivr
mov
ret
lea
ficomps
movsb
repnz
inc
imul
pop
xchg
lea
jmp
and
loopne
mov
push
jg
push
xor
aaa
call
rorl
insl
jmp
stos
cmp
inc
jl
push
mov
dec
popa
push
leave
jno
sarb
mov
xchg
push
mov
sbb
int3
lods
into
or
xor
mov
in
inc
aam
pop
xor
and
testl
adc
xor
pop
or
mov
jb
xchg
push
and
push
adc
mov
les
sub
dec
fsts
xor
in
inc
sub
inc
ret
push
jp
repnz
jle
les
cmp
mov
pop
xchg
in
sub
pushf
and
ret
cmpsl
inc
mov
and
add
sub
stos
es
jle
adc
stos
jae
mov
xchg
shl
shl
pushl
pop
or
negb
jle
sbb
sbb
xchg
jle
scas
in
adcb
sbb
sbb
loopne
stc
xor
and
std
outsb
pop
arpl
and
hlt
mov
cmp
data16
push
xlat
ret
in
pop
test
iret
push
mov
mov
movsl
out
rsm
or
add
push
es
jle
jo
cmpb
icebp
cmc
adc
clc
aaa
cltd
jmp
addl
jne
das
lahf
clc
test
lea
xchg
mov
jp
pop
push
jno
sub
mov
shlb
dec
add
mov
push
xchg
push
mov
adc
int
cld
and
mov
mov
movsl
and
cmp
and
inc
cmc
in
mov
loope
push
leave
cmp
jbe
loope
inc
leave
mov
xchg
or
insb
inc
test
mov
movl
mov
push
iret
inc
mov
mov
xlat
xchg
inc
lods
cmpsl
xor
add
popa
mov
cmp
add
and
fs
cmp
add
iret
jb
das
arpl
rorb
jl
enter
push
into
pop
xor
mov
sbb
mov
mov
fiadds
mov
popa
repnz
ja
add
mov
jp
dec
das
sub
popf
daa
dec
adc
daa
pop
xchg
mov
mov
mov
lret
jns
fwait
lds
xor
and
or
xor
jge
add
add
out
ja
jmp
cltd
sbb
inc
add
inc
xchg
xchg
xchg
fstpt
js
cmpsb
lds
sbb
adc
in
inc
sub
xor
lock
dec
add
pushl
cs
adc
dec
popf
push
ficomps
pop
sbb
mov
addr16
ficompl
xor
mov
leave
xor
daa
aas
push
scas
cmp
sti
sbb
fistpl
xor
lods
xchg
cmp
icebp
mov
push
pop
mov
jle
jl
es
or
jno
mov
daa
dec
add
fildl
jp
gs
xchg
sbb
or
jae
pop
adc
pop
movl
add
mov
inc
or
subb
pop
push
lea
lsl
lea
pop
lods
mov
ss
mov
jle
rorl
lcall
pop
lock
xchg
in
aad
xchg
scas
sbb
dec
xchg
add
jb
jmp
push
push
enter
imul
mov
xchg
mov
add
mov
inc
sbb
xorl
fdivp
dec
xchg
out
push
jp
inc
js
ret
outsl
sarb
sbb
add
mov
adc
insb
enter
push
inc
inc
bound
inc
cmpsl
add
hlt
mov
in
gs
dec
jg
push
xchg
push
add
xchg
ss
call
ss
mov
mov
dec
aam
in
in
mov
adc
fucomp
xchg
adc
loope
add
lock
enter
xchg
sub
les
fsubrs
jmp
cmc
pop
movl
inc
lods
adc
adc
in
and
orl
gs
out
inc
mov
sub
sbbb
je
lret
ss
mov
out
cwtl
mov
push
mov
loope
mov
lret
fisubl
xchg
add
fimull
dec
xchg
fmuls
mov
ljmp
pop
mov
inc
imull
loopne
jl
sahf
in
and
std
mov
lahf
and
mov
dec
mov
cmp
mov
mov
pop
add
add
dec
mov
inc
add
lods
pop
push
stc
mov
add
mov
rol
ss
cmpsb
nop
lea
inc
mov
mov
inc
sub
jo
mov
popa
andl
scas
out
inc
mov
lcall
push
insl
jae
cmpb
adc
mov
lds
cmpsl
add
leave
scas
aas
outsb
gs
inc
xchg
cmp
mov
mov
and
mov
fstl
scas
pop
hlt
xchg
test
push
test
jecxz
loopne
cmp
fdivl
js
pop
sahf
adc
arpl
dec
mov
sub
inc
outsl
mov
mov
push
push
es
add
pop
mov
mov
into
hlt
cld
fcmovbe
scas
and
pop
dec
cmpb
dec
dec
insb
ret
popa
inc
xchg
jp
mov
dec
xchg
xor
test
out
loope
inc
and
stos
mov
pop
pop
loope
js
xchg
clc
aam
xchg
int3
in
data16
mov
mov
add
xchg
xor
outsb
cmp
inc
stos
sti
mov
iret
xor
xchg
dec
add
xchg
mov
dec
add
mov
sbb
mov
imulb
or
xchg
cmc
movsb
dec
push
mov
and
cmp
adc
xor
arpl
ds
aam
and
add
out
data16
mov
pop
aad
cmp
gs
lahf
inc
jnp
inc
push
pusha
mov
jne
xchg
or
xchg
mov
out
mov
sub
sbb
push
xchg
fld
push
ret
cmp
mov
xor
insb
bound
lods
jne
inc
cmp
mov
mov
jbe
pushf
repnz
adc
fisttpll
and
fadds
pop
fildl
add
aam
sbb
inc
xor
in
jmp
lret
mov
dec
add
mov
enter
xchg
pop
mov
push
push
jg
lcall
pop
inc
int3
lds
mov
or
push
sbb
ss
add
loope
js
adc
je
jecxz
incl
adc
push
mov
adc
cmpsb
ds
stc
fmull
inc
cmp
dec
insl
pop
in
fldt
jle
mov
inc
je
pushf
add
xor
aas
or
ja
lods
jae
jo
cwtl
xchg
repz
xchg
or
jbe
pop
dec
mov
and
mov
repnz
xor
xor
adc
sub
mov
xchg
dec
sbb
ljmp
mov
jno
hlt
data16
pusha
or
mov
mov
and
cmp
popf
idivl
push
mov
xor
lea
cmp
clc
scas
push
cmp
scas
xor
dec
fwait
and
repz
xchg
jp
imul
clc
mov
sub
push
insl
jl
pop
in
xchg
sbb
pop
cmp
xor
xchg
jae
fiadds
cltd
adc
add
mov
sbb
pop
jg
das
roll
sub
mov
jbe
clc
stos
jb
imul
jge
lds
or
sub
sbb
icebp
xchg
inc
das
test
dec
mov
sahf
data16
mov
loope
test
sahf
jp
fwait
loop
test
jae
mov
sahf
mov
cs
out
js
out
leave
xchg
or
stc
xor
jl
xchg
fs
ja
int
add
inc
out
mov
stc
xor
imul
pop
test
lds
adc
pop
push
ja
loop
lds
fcomps
mov
int3
xor
and
lock
or
fadd
int3
loop
lcall
fstp
out
std
repz
lret
ret
xchg
cld
adc
add
mov
pop
stos
or
jnp
lahf
jo
loope
and
push
inc
sti
ficomps
cli
js
fnsave
shll
push
mov
mov
jbe
in
movb
jge
mov
xchg
test
or
das
push
in
inc
xchg
jbe
lret
fnstcw
cli
fistps
mov
stos
sbb
adc
push
popl
into
ret
sub
stos
jecxz
push
cmp
xchg
pop
subb
cmp
mov
sbb
or
pusha
adc
inc
lcall
mov
in
lock
call
mov
dec
in
test
imul
mov
subl
aas
aam
pop
adc
mov
loope
mov
sub
sti
std
cmp
sub
lret
dec
push
fstpl
and
ret
adc
add
std
stos
movsl
mov
int
mov
xor
sub
mov
mov
push
mov
mov
aaa
jno
jb
gs
bound
mov
mov
fidivs
or
loopne
shl
data16
sbb
mov
bound
mov
mov
sub
add
adc
xchg
sarb
mov
pop
arpl
fdivrs
fiaddl
mov
loope
rcll
sti
test
fldcw
or
add
inc
insb
mov
test
push
or
xchg
inc
fwait
insb
dec
ss
arpl
imul
add
out
and
int
sbb
pop
icebp
lods
sub
mov
incl
sbb
add
aam
adc
mov
mov
shll
hlt
xchg
adc
push
xchg
lret
cmp
sbb
sarb
das
out
sbb
mov
adc
and
ret
mov
xchg
aam
stos
jb
push
adc
mov
loope
rolb
xchg
sbb
xor
popa
mov
inc
cmp
jecxz
popa
push
or
fsubl
js
push
xchg
xor
lret
inc
pushf
inc
faddl
mov
push
enter
std
outsb
cmc
xorb
shl
aaa
fsubl
aas
aaa
push
pop
mov
push
jno
adc
fidivl
push
mov
mov
pop
push
enter
jl
repnz
push
push
push
shrl
xorl
inc
or
enter
into
sub
xchg
pop
or
sbb
push
call
inc
or
mov
sub
sub
dec
js
leave
test
ret
rcr
mov
xor
aas
out
mov
jl
in
cs
rcll
lea
pop
cmpsl
pop
fcompl
push
mov
sbb
jp
rcll
fisttps
loop
mov
adc
ljmp
add
loope
jns
jge
pop
cmp
sbb
gs
mov
pushf
or
test
test
adc
xor
dec
pusha
nop
mov
hlt
je
pusha
cmp
adc
mov
fistps
mov
inc
into
pop
mov
test
sbb
imul
js
loopne
fstpt
pop
popf
orl
push
mov
iret
popa
cmp
and
divb
mov
in
and
mov
fiaddl
mov
in
mov
aas
movsl
lods
std
loop
in
ret
mov
mov
in
roll
test
add
das
mov
add
pop
jnp
xor
sub
xchg
push
cld
or
dec
pop
loope
push
pop
lods
pop
inc
cmpsb
pop
scas
xlat
jns
repz
push
js,pt
sti
xchg
hlt
imul
stc
mov
inc
into
sbb
out
mov
lods
inc
or
enter
pusha
mov
enter
sbbl
rcr
sbb
imul
mov
dec
push
repnz
test
push
andl
je
test
xchg
ds
jg
arpl
fsubl
int3
aas
idivb
jb
ds
hlt
or
mov
leave
fnsave
and
push
cmp
pop
mov
pop
xchg
fimuls
or
pop
pop
pop
dec
loopne
push
je
fnstsw
cmc
xor
or
addr16
inc
push
imul
lods
ljmp
fbld
fs
bound
loope
add
mov
sbb
mov
fsts
mov
xlat
insl
cld
cmp
add
lods
adc
inc
pop
mov
inc
pop
sti
push
push
daa
jbe
adc
push
test
out
mov
negl
hlt
shlb
rorb
sbb
fwait
pop
mov
inc
icebp
push
shl
gs
popa
xchg
lret
ret
dec
cmp
adc
sti
jge
enter
and
inc
mov
mov
sub
xor
push
xchg
inc
js
in
jl
mov
icebp
das
sub
cmp
clc
ljmp
cmpl
rcrl
push
frstor
adc
lahf
daa
cmp
cmc
cld
mov
cmp
clc
mov
repz
or
cmc
adc
xor
ds
test
insb
add
dec
mov
pop
adc
push
inc
jg
popf
mov
popa
or
in
mov
repnz
shl
cld
mov
push
push
xor
clc
sahf
cwtl
fwait
pop
mov
fwait
scas
mov
lret
mov
lds
xchg
dec
popa
loop
outsb
push
jno
fwait
sub
or
filds
push
fidivs
push
pop
addr16
popf
inc
xchg
mov
and
cwtl
stos
xor
mov
scas
out
dec
mov
mov
or
sub
jp
and
hlt
jnp
lods
push
sub
xor
movsl
cmp
sub
int3
cltd
xchg
repnz
xchg
pop
outsl
icebp
cmc
pop
adc
inc
sbb
scas
jb
int3
mov
sub
fstl
adcb
pop
sub
in
sub
clc
cmpl
inc
sbb
in
pop
gs
scas
adc
lods
jbe
jle
in
jl,pn
imul
push
out
and
popa
cmp
popa
mov
xchg
mov
dec
jno
dec
add
subb
xor
mov
jnp
lock
mov
orb
fildl
xchg
push
enter
test
stos
xor
repz
mov
repnz
mov
loopne
mov
pop
ret
add
cmpsl
dec
ss
pop
jmp
push
cs
jle
in
xor
lret
jecxz
xor
scas
adc
inc
push
int
shlb
loop
sbb
loopne
mov
mov
std
mov
loopne
imul
aad
push
test
mov
adc
ret
cmp
notb
inc
in
mov
insl
ja
fsubr
ret
pop
movsb
xchg
sbb
mov
shlb
mov
test
sarb
push
xchg
mov
leave
leave
pop
push
or
jno
cmp
lock
incl
adc
xchg
push
enter
pusha
mov
mov
push
mov
loop
pusha
add
neg
mov
pop
dec
jbe
cmp
and
faddl
fildl
xorl
or
and
cmp
sub
fdivl
cmp
ljmp
inc
dec
shl
aam
mov
mov
clc
out
mov
jb
in
pop
xchg
pop
stc
jle
mov
addl
mov
iret
or
jmp
mov
cmpsl
push
mov
and
shlb
es
ljmp
push
cmpsb
lea
dec
mov
mov
pop
inc
mov
std
jb
jne
loope
pop
ja
cld
aad
and
fneni(8087
pop
push
aad
xchg
ret
pop
loope
outsb
and
push
jmp
cli
push
push
mov
std
or
mov
insb
cmp
dec
popa
jne
pop
std
push
mov
dec
in
xchg
or
dec
or
adc
or
enter
cltd
xorl
lahf
jns
and
fcmovnu
sti
test
fcomps
xor
push
and
test
inc
je
jnp
stc
add
mov
fcom
sbb
outsl
push
sub
xlat
mov
push
icebp
movl
pop
pop
push
loop
imul
pop
sbbb
data16
adc
scas
shlb
sbb
and
sub
dec
dec
ljmp
cmp
loope
leave
in
cmp
in
xchg
adc
inc
or
push
mov
push
mov
fsubrl
push
in
lcall
fdivrl
or
sahf
scas
mov
clc
add
addb
cmp
inc
jecxz
jno
inc
adc
or
ds
push
cmp
adc
and
xchg
cmp
loope
stos
bnd
shrb
xchg
or
or
or
icebp
enter
test
roll
adc
push
sbb
fnstsw
dec
jecxz
enter
xor
loop
stos
rorb
enter
xchg
rcr
pusha
or
adc
jno
adc
xchg
jnp
pop
pop
jmp
inc
lea
xchg
xchg
dec
pop
pop
xchg
push
fsubrl
jb
pop
pop
fisubrl
pop
adcb
inc
insl
mov
imul
mov
mov
popf
xchg
jmp
aaa
push
cmp
pop
shll
cmpsl
out
int3
cmp
fdiv
fsubp
xchg
test
xchg
icebp
adc
dec
btc
aam
lods
je
pop
mov
daa
inc
push
push
out
mov
ficoml
into
add
and
push
mov
sbb
dec
mov
loop
jl
aas
pop
mov
adc
call
sub
in
or
sub
subb
pop
aaa
pushf
jle
mov
xchg
mov
mov
flds
jb
mov
into
add
js
shll
sarb
mov
jl
inc
mov
hlt
mov
sbb
cltd
je
clc
out
jae
in
inc
js
adc
jl
push
movl
pop
cld
or
sbb
xor
mov
lahf
xchg
xchg
loope
inc
jns
call
xchg
lret
daa
xor
dec
mov
inc
and
popa
dec
jb
adc
sti
stos
imul
push
lea
scas
leave
inc
jl
movsb
jmp
adc
lds
mov
mov
sbb
push
nop
stc
adc
mov
xchg
cmc
push
inc
push
test
jge
ja
mov
movsl
inc
mov
dec
adc
push
sbb
pop
xchg
dec
adc
cld
adc
ja
mov
call
subl
clc
or
mov
rorl
in
popf
adc
or
bound
fcom
sahf
mov
unpcklps
test
lods
push
stos
sbb
add
add
loopne
dec
inc
mov
aam
dec
into
xor
in
repz
mov
sbb
and
addr16
dec
adc
mov
int3
pop
inc
push
cli
fisubs
inc
and
jns
mov
pop
pop
bnd
ljmp
les
arpl
xchg
lods
int
mov
test
dec
loop
hlt
ds
movsl
xor
shlb
sub
mov
push
mov
xor
mov
test
jnp
fcomps
cmp
mov
sub
daa
cltd
nop
inc
je
pop
pop
iret
pop
testb
xchg
adc
mov
iret
push
jns
adc
cmp
mov
sti
sbb
pop
inc
jno
inc
inc
mov
movsl
xor
xor
jae
jne
lcall
lea
mov
aad
lock
or
push
mov
andl
mov
sub
jbe
int3
add
push
ss
mov
leave
jae
mov
cmp
xchg
iret
add
push
inc
mov
lcall
inc
push
push
popfw
cmp
jno
andl
xor
jnp
jae
pop
out
xorb
add
push
jae
pop
mov
adcb
xchg
sub
out
add
jg
scas
cmc
rcrb
mov
mov
or
cwtl
cs
adc
dec
inc
lcall
test
rcr
jmp
fwait
iret
jge
push
or
mov
and
inc
fwait
and
sbb
bnd
dec
or
xchg
pop
inc
xor
jg
pusha
xchg
in
jns
ds
es
or
mov
jns
mov
add
pushf
jb
lds
or
mov
inc
xor
das
stc
sbb
les
xor
dec
pop
ret
std
mov
cmp
in
sbb
xchg
or
push
xchg
std
jne
adc
inc
push
dec
js
loop
jl
fisubrs
mov
xor
and
pmulhuw
cmp
xchg
aam
sub
in
xchg
ljmp
inc
xor
cmp
imulb
and
xchg
cmpsb
dec
dec
push
call
in
ror
scas
test
in
outsl
push
xor
outsl
into
jl
outsl
cmovno
inc
and
xor
movsb
sahf
add
movb
icebp
inc
xchg
jae
popf
hlt
pop
ds
loop
negl
imul
mov
repnz
out
daa
push
dec
jns
call
mov
sub
inc
mov
mov
in
outsl
adc
sti
popa
cmpsl
mov
scas
int
or
sahf
or
inc
sbb
pop
push
lahf
jo
dec
cli
adcl
rcrl
in
jmp
repnz
js
lahf
leave
and
inc
push
mov
ret
sbb
cld
imul
mov
add
push
inc
aad
cmovb
sbb
dec
shlb
movsl
xor
xor
ficoms
xor
sbb
je
xchg
sbb
out
xor
bt
fisttps
jbe
mov
mov
leave
adc
xor
cmp
mov
dec
inc
xor
movsb
repz
cmp
out
scas
xchg
inc
sub
iret
dec
rcrl
clc
popf
pop
in
add
pop
cmpsb
push
dec
in
or
cmp
rcl
int3
adc
js
imul
push
push
dec
ja
sub
inc
mov
xor
in
lahf
scas
sbb
and
out
jge
pop
outsl
sbb
jecxz
jno
pop
jle
scas
push
sub
insl
push
icebp
jle
jne
and
xchg
js
or
roll
dec
adc
sbbl
pop
inc
push
dec
add
jle
dec
xor
inc
and
gs
in
mov
mov
adc
mov
fndisi(8087
enter
int3
push
pusha
pop
xchg
inc
ss
and
jb
shll
inc
pop
sub
mov
mov
or
jg
test
or
lea
lret
dec
pop
pop
adc
mov
jb
and
adc
jnp
imul
push
orb
imul
testl
push
or
dec
jnp
and
lock
add
mov
mov
movsb
dec
cmp
mov
pop
test
mov
loope
in
in
nop
test
jbe
cli
arpl
push
mov
jbe
add
test
bound
out
cwtl
xor
lahf
mov
mov
adc
test
out
xchg
cmpsl
xor
gs
lret
sub
insl
int3
cmpsl
fnstsw
call
daa
xlat
test
and
push
fbld
pop
sar
out
sti
cmp
fisttpl
lahf
adc
sub
pop
mov
lahf
sub
and
pusha
pop
testb
mov
lret
mov
and
cld
cld
out
push
mov
cmpsb
movsl
xor
aas
inc
xchg
pop
or
into
ret
mov
lock
leave
nop
push
shll
arpl
leave
fucomip
sbbl
out
push
mov
pop
xchg
imul
popa
mov
jno
cmc
push
cmp
xor
adc
inc
sub
test
popf
cld
filds
decb
push
xchg
push
jnp
aad
scas
dec
loope
jae
jns
js
dec
mov
hlt
in
fnstenv
adc
nop
mov
ss
xchg
xchg
gs
lcall
mov
inc
jno
movb
pop
jnp
cmpsb
jge
test
push
int3
mov
xchg
push
test
xchg
bound
mov
out
cld
xorb
shrl
sbb
es
sbb
sub
movsl
popf
pop
loop
dec
nop
jne
mov
ret
loope
filds
mov
mov
mov
jbe
xlat
fisubrl
fistl
xlat
fmuls
jge
pop
ds
sti
repz
daa
inc
jae
inc
jo
xchg
iret
lahf
adc
dec
and
dec
or
fs
mov
aas
out
mov
std
cmp
lock
inc
popf
int
iret
jp
push
push
lret
punpckhbw
js
xchg
lcall
cmp
and
jb
sbb
jp
xchg
adc
ret
les
sub
and
push
xor
loopne
out
mov
sbb
jae
movl
pop
les
sbb
add
add
mov
xor
fisubrs
imul
nop
cmp
test
in
scas
or
xor
add
dec
pop
les
cmp
xor
fstl
outsb
mov
lea
cmove
push
hlt
cmpsl
es
xchg
iret
xor
jo
jnp
push
gs
sbb
enter
mov
imul
rolb
sbb
inc
dec
dec
dec
aaa
adc
fsubs
data16
lret
mov
push
mov
lret
leave
push
jno
inc
xchg
push
lret
cs
lds
push
xchg
insl
dec
addb
xchg
xor
in
movsb
cmp
icebp
push
cmp
sti
gs
rcl
dec
sub
jae
mov
jae
divl
imul
sub
popf
and
inc
out
push
test
mov
sub
pusha
sub
mov
xor
mov
or
adc
lea
sub
cs
pop
repz
pop
hlt
js
or
aad
mov
popf
enter
cmp
mov
adc
pusha
subl
pop
mov
sub
xchg
std
dec
loop
scas
and
fimuls
mov
xchg
in
jne
loop
inc
inc
iret
cltd
ret
push
lds
mov
scas
adc
scas
jmp
inc
mov
enter
test
cmpsb
gs
or
pop
cltd
jmp
je
addw
roll
mov
adc
push
sub
push
adc
push
xor
into
mov
call
xchg
mov
imul
daa
nop
jp
imul
and
pushf
repz
scas
sbb
pop
add
stos
rcrb
and
xchg
scas
pop
pop
jne
or
and
icebp
out
add
jg
and
loopne
nop
jb
push
sti
push
es
jbe
scas
fwait
loope
rcl
jp
xor
mov
test
rcll
and
cmp
push
mov
jg
jb
mov
sahf
xor
mov
clc
sub
sub
daa
xchg
sbb
adc
mov
js
xchg
lods
push
push
fstps
xor
cs
and
data16
pop
loope
cwtl
dec
xchg
pop
fcmovnu
adc
ret
or
popf
push
lret
faddl
std
movl
push
addr16
movsl
rcpps
mov
test
fidivrl
add
cmp
fs
les
xchg
xchg
es
sbb
adc
enter
xchg
faddl
addl
push
fidivs
fmuls
mov
mov
push
sbb
mov
mov
xor
scas
push
xor
pop
test
aam
jbe
aas
xchg
mov
cmp
sbb
cmp
lret
fucomi
pushf
jbe
fidivl
mov
cmp
sub
mov
int3
jno
sbb
lcall
outsl
mov
cmc
cmp
pop
mov
test
in
add
mov
fcoms
jb
pop
push
sti
xchg
iret
cmp
popa
divl
je
fsubrs
jb
cmp
mov
cltd
iret
hlt
or
mov
test
adc
ja
push
fcoml
inc
jnp
xchg
jb
cmp
out
movsl
push
cmc
sbb
inc
fwait
xor
in
ljmp
fldt
push
and
in
aam
stos
sbbb
arpl
mov
push
test
nop
mov
pop
inc
pop
out
loope
sbb
pop
sbb
pop
out
jnp
push
shlb
mov
dec
jb
scas
push
sub
das
mov
pop
es
ja
jns
stos
imul
push
ljmp
sub
loope
pushf
mov
cmpb
enter
iret
inc
std
sbb
dec
adc
fdivl
push
jb
adc
push
lahf
push
sbb
das
mov
ret
sbb
and
mov
xor
inc
pop
push
push
xor
jns
cli
pushf
leave
ja
pop
loope
mov
mov
js
repz
sti
lcall
pop
and
aas
add
out
stos
fcoms
mov
dec
divb
out
cwtl
mov
pop
adc
mov
add
stos
mov
ret
outsl
fisttpl
jecxz
int
push
mov
xchg
cmp
mov
icebp
in
and
and
lret
xor
pop
les
stc
aas
and
pop
repz
out
roll
aad
xor
mov
cmpsb
gs
adc
lea
ja
lret
gs
sbb
stos
sahf
or
jge
adc
add
mov
push
imul
push
int
pop
mov
loope
mov
push
mov
mov
jo
arpl
or
dec
jge
cltd
push
call
scas
jle
fwait
scas
jge
jmp
insb
nop
jns
and
xchg
and
leave
popf
ffreep
xor
mov
mov
jp
pusha
enter
int3
out
enter
mov
bound
aas
xor
push
test
es
subb
mov
sub
sub
mov
fdivr
fs
or
aad
lret
testl
mov
es
stos
loop
ficoml
and
data16
cmp
sbb
lret
fldt
dec
add
mov
aad
lea
push
lock
lock
add
pop
push
in
jae
idivl
faddl
cmc
jmp
aad
add
push
loopne
dec
lea
pop
push
ljmp
ljmp
pop
mov
fstpl
xlat
sub
je
jl
mov
xchg
fisttpll
xor
jmp
or
nop
aas
enter
dec
out
inc
jnp
fcoml
je
pop
ret
out
dec
outsb
stos
mov
mov
sahf
cmpsl
aaa
lea
and
pop
repz
daa
ja
out
insl
or
jmp
in
das
and
call
les
cli
cmp
jl
add
out
add
je
pop
outsl
or
pop
jns
out
inc
ficomps
test
sub
lcall
xchg
cmc
iret
jmp
xchg
mov
mov
push
jb
in
pop
sbb
add
jb
cmpb
adc
mov
cmp
js
jnp
push
xor
jl
ss
test
jns
es
inc
push
sbb
sahf
les
pop
movsl
jmp
fdivrp
dec
out
leave
out
movsb
fildl
fisttps
test
xchg
shll
bound
iret
jbe
popl
inc
out
inc
adc
or
cli
jg
int
cmpsl
mov
add
mov
push
aaa
retw
loope
adc
iret
dec
pop
rcll
xchg
lods
outsl
loopne
aad
mov
pop
xor
mov
in
push
aad
clc
fistl
add
jp
inc
out
cmp
out
imul
jecxz
popa
aas
test
adc
push
mov
mov
ret
rcrl
loope
sbb
mov
test
in
scas
inc
subb
mulb
fs
or
or
mov
inc
ret
dec
mov
fsubl
or
cltd
mov
nop
xchg
xor
push
call
fists
gs
nop
and
xchg
mov
ficoms
sahf
sti
sub
mov
jl
std
sub
addb
push
lock
cmp
mov
sarb
test
aaa
inc
xor
enter
insb
inc
test
xor
xor
jns
leave
lods
out
out
push
xor
cmc
jae
inc
mov
dec
mov
mov
xchg
jl
repz
lret
cmp
mov
mov
dec
dec
and
or
adc
ss
jmp
shl
mov
lret
xor
adcb
fnsave
mov
addr16
jp
inc
enter
call
mov
mov
aas
xor
pop
cwtl
jb
fwait
inc
cmp
ds
or
lea
lret
xor
repz
sbb
stos
jne
test
mov
cmp
sub
push
and
insb
mov
icebp
push
sbb
test
xlat
loop
outsb
sub
stos
add
xchg
cmp
xor
adc
sub
fildl
cmp
cmp
jne
mov
push
sub
sub
xchg
mov
es
adc
cltd
dec
mov
stos
cltd
popa
sti
xchg
lock
jmp
xor
inc
push
sub
lret
out
ret
jecxz
push
dec
sub
scas
test
js
rolb
popf
ds
mov
je
std
sbb
cli
push
cmp
repz
dec
xor
xchg
adc
and
pop
sbb
out
cmp
push
rclb
sbb
jp
fucom
ljmp
ror
out
cmp
div
clc
pop
cmpsl
jp
scas
pop
scas
out
aad
sbb
adc
out
xor
xchg
sub
ret
adc
test
mov
test
lods
and
int3
fidivrl
inc
cmp
js
cmp
mov
in
jo
dec
imul
add
jbe
int
cmp
jo
jnp
xor
in
sub
inc
leave
inc
or
lcall
mov
inc
loope
aas
scas
fdivrl
inc
sbb
adc
hlt
stos
jbe
sbb
hlt
dec
push
jl
ror
sahf
or
stc
jl
bound
cmp
mov
mov
sub
mov
add
test
sub
in
xor
adc
add
shlb
scas
mov
pcmpeqw
ret
mov
pop
jne
inc
sbb
shrl
dec
adc
mov
mov
aaa
mov
popf
pop
std
popf
das
pushf
retw
jle
in
push
add
mov
inc
pop
mov
jne
outsl
or
dec
loope
ds
xchg
es
aas
add
shlb
gs
roll
adc
je
data16
call
push
jle
repz
dec
call
mov
fwait
test
xchg
jecxz
std
shll
mov
mov
pop
mov
loop
and
scas
rcll
lcall
popf
add
inc
aaa
mov
rcll
pusha
pop
je
pop
pop
sbb
int3
movsb
aas
cwtl
rclb
jl
pop
orb
and
xlat
sbb
cld
std
mov
push
jle
pop
xchg
cwtl
sbb
mov
pop
pop
clc
xor
mulb
lock
stos
pop
and
fdivl
add
enter
push
mov
xchg
xor
int3
out
xchg
xchg
xchg
xchg
push
mov
rorl
mov
sahf
mov
sbb
in
cmp
mov
push
mov
sbb
mov
push
aad
push
mov
imul
stos
push
incb
sti
xor
andl
lret
mov
out
mov
fidivl
leave
ds
loope
addb
jbe
int
add
negl
shlb
or
add
pusha
mov
jle
mov
or
push
jno
cmp
jg
pusha
inc
std
mov
inc
orb
mov
pop
jmp
push
and
js
hlt
outsb
mov
xor
test
aas
faddl
xor
mov
ja
movsb
hlt
bound
mov
dec
mov
stos
arpl
cmp
cmp
jno
rolb
sub
addb
mov
popa
rclb
aaa
sbb
incl
fldt
adc
xchg
push
idiv
mov
add
xchg
and
scas
scas
scas
xor
inc
popa
cmp
rcr
shrb
jg
push
inc
jecxz
push
arpl
sbb
lahf
ss
cmp
arpl
pop
fcom
add
adc
insl
xor
and
fnstsw
fldl
les
in
popf
mov
mov
xor
repnz
or
add
cmp
insl
pushf
lods
mov
cmp
lret
std
xchg
inc
gs
lods
pop
jns
test
push
sbb
frstor
adc
sub
cmp
orb
mov
push
xor
std
test
xor
lods
ficoml
sbb
lock
outsb
cld
scas
addr16
jno
inc
lcall
lock
push
adc
inc
or
repnz
shrb
pop
mov
std
leave
inc
leave
or
enter
mov
std
xchg
mov
xadd
jbe
mov
lahf
sbb
inc
xchg
mov
mov
mov
push
popa
add
push
mov
inc
inc
imul
add
adc
sub
mov
sarl
mov
cmp
push
mov
or
xor
in
inc
loope
aam
loope
sub
fisubs
js
sti
add
sti
xorb
in
xchg
pushf
ljmp
out
mov
sub
not
stc
fisubrl
lds
mov
aad
insl
idivb
cwtl
test
inc
dec
icebp
sub
lea
jo
dec
push
test
push
mov
insl
xchg
push
xor
xchg
dec
mov
or
push
add
jnp
mov
int
sarb
mov
jnp
cmp
in
ficoml
push
adc
aam
test
insl
mov
dec
shrb
leave
pop
mov
jbe
mov
daa
ljmp
jns
lds
loop
adc
loope
movl
std
xchg
mov
movsb
shll
jns
fdivr
and
xchg
mov
fisubs
adc
ds
lock
dec
dec
push
icebp
pop
push
mov
push
ficoml
sub
scas
xchg
adc
pushl
pop
dec
ret
jmp
stos
xor
mov
xchg
cmp
fists
pop
mov
insb
xchg
inc
call
sbb
roll
outsb
jnp
roll
push
xor
xchg
cmp
and
push
xchg
ret
mov
int3
xchg
inc
dec
inc
sbb
sbb
cs
fists
aam
jnp
push
rcll
aas
scas
ljmp
and
fists
dec
adc
lcall
dec
push
or
pcmpgtb
cltd
pushf
dec
adcl
jmp
insl
xor
jne
out
mov
int
repnz
xchg
loop
inc
sbbb
mov
add
and
push
inc
out
xchg
aaa
popa
dec
jnp
aad
aaa
imul
ret
fmull
sbb
fistpl
jne
cltd
push
dec
add
call
test
sbb
lods
add
xor
push
cmpsl
int
test
ljmp
lds
jnp
dec
subb
divb
rolb
movsl
pop
pop
adc
jno
add
insl
in
mov
cltd
mov
mov
neg
push
mov
or
mov
push
jb
daa
jb
mov
sbb
and
rcl
rorb
sbb
xchg
arpl
je
sahf
adc
xor
xor
stos
xchg
inc
fs
pop
into
inc
cmp
cli
je
sbb
xor
fiadds
jge
jno
cltd
push
shll
add
pop
push
in
mov
inc
cmp
jle
cli
orl
nop
or
js
pop
iret
daa
stos
imul
inc
inc
subl
add
xlat
lret
and
mov
push
sbb
popa
pop
stc
push
loopne
cli
adc
lahf
mov
int
jbe
cmp
sub
push
inc
clc
adc
mov
adc
or
push
mov
sarl
jnp
int
push
cli
mov
jbe
cs
out
cs
nop
sub
mov
fnstsw
call
cmp
es
lret
rclb
les
lret
mov
add
insl
mov
clc
jecxz
adc
psubsb
leave
xchg
pop
aad
mov
lret
pop
cmpsl
mov
mov
iret
imul
push
shll
pushf
scas
in
sub
outsl
or
lcall
inc
cli
lea
add
mov
cmp
es
xlat
out
jne
into
fistpl
mov
mov
leave
stos
ja,pt
js
add
lret
aam
pop
adc
lcall
hlt
or
xchg
sub
add
outsl
stos
and
inc
inc
ja
dec
adc
aaa
add
lds
add
add
xchg
and
fcompl
push
mov
lea
bound
movsl
rorl
push
add
in
jbe
and
fisubs
lret
ret
sub
repnz
pop
stos
js
jp
pop
or
sbb
js
lcall
enter
dec
sbb
loopne
sti
shrl
push
mov
and
xchg
testb
sbb
adc
xor
mov
repz
cmpsl
pop
rol
cmpl
cmc
adc
push
outsb
push
sahf
icebp
shlb
mov
imul
ret
push
add
cld
fs
xchg
inc
push
mov
mov
push
sbb
or
ret
xchg
imul
lods
push
pusha
or
push
imul
scas
mov
cltd
inc
pop
incl
int
pusha
cld
push
ret
jg
das
sbb
bound
repz
ss
mov
add
jle
xor
rcrl
mull
test
jl
push
sub
add
mov
xlat
rcrl
aas
inc
mov
cmpsl
lret
xor
add
mov
pusha
mov
lret
testl
cli
mov
clc
fadds
fldt
jae
cld
leave
push
loop
icebp
mov
test
cmp
lods
cmpsl
das
out
test
mov
lret
xor
nop
in
gs
mov
into
call
insb
addl
pop
and
add
clc
insb
jmp
sti
inc
shll
into
inc
lds
mov
bound
dec
mov
mov
or
loopne
je
call
mov
in
subb
enter
pop
push
inc
adc
and
jp
frstor
leave
cli
sbb
imul
mov
test
pop
sbb
mov
stos
divb
push
call
ror
cmp
shl
mov
jg
add
arpl
js
mov
cs
sub
push
popa
and
stos
inc
cs
add
mov
push
in
mov
sub
out
xchg
fisubl
rolb
inc
mov
inc
orb
mov
mov
xorb
push
lahf
out
sbb
pop
outsb
and
lds
sbb
pop
notb
pop
jnp
xchg
int3
push
lret
addr16
sbb
std
orl
imul
fnsave
dec
ja
jp
cmc
insl
imul
cmpb
scas
pusha
jle
adc
jb
jecxz
ror
mov
in
shrd
jge
or
cmp
mov
lods
repnz
aam
sbb
mov
mov
divl
repz
jb
stos
and
cld
push
lret
lock
sbb
adc
lahf
inc
mov
add
push
push
and
negl
jnp
cltd
pop
negl
sub
xor
or
lcall
or
xlat
into
xor
les
pop
test
mov
push
or
jge
addr16
cld
imul
jl
repnz
jp
sub
in
push
loope
mov
cmpsl
dec
cli
push
int
mov
ljmp
out
adc
inc
movsl
sbb
into
jno
push
roll
or
sbb
clc
fsubr
mov
jnp
jnp
data16
movsl
or
pop
jo
dec
and
cld
add
in
int3
pop
stos
mov
cmpsb
inc
out
stos
in
xchg
mov
dec
jb
lods
push
fildl
mov
cmc
or
cmp
xlat
mov
inc
jae
add
les
roll
sti
jge
inc
mov
sbb
inc
rorl
les
rcll
lea
iret
lret
inc
stos
push
jbe
repz
rolb
dec
fistl
or
or
test
pop
enter
or
add
aam
or
sub
dec
pop
mov
mov
push
jnp
addr16
fdivrl
int
es
rcll
mov
mov
std
insl
stos
jb
mov
pop
xor
test
and
aaa
jb
or
push
sar
insl
mov
test
gs
and
and
mov
ss
mov
bound
inc
loop
neg
arpl
scas
jle
xchg
mov
push
push
sub
js
push
jl
fldt
jl
xchg
push
test
pop
add
mov
jne
adc
lods
popl
or
adc
push
fbstp
fiadds
mov
mov
fdivr
cmp
mov
int3
mov
dec
add
mov
mov
in
add
lcall
cmpl
jle
ficomps
cmp
push
xchg
push
out
ja
push
mov
bound
xchg
ljmp
call
and
or
ret
popa
cs
fstpl
adc
mov
clc
cmc
lds
and
call
out
add
add
xchg
xchg
aam
mov
into
add
stc
or
add
push
leave
test
cmp
jb
dec
xchg
dec
fdivl
ret
mov
call
ljmp
enter
sti
xchg
push
dec
and
pandn
sbb
cmpsb
pop
in
mov
and
xchg
sbb
fsubr
dec
dec
mov
mov
add
mov
push
popf
ret
add
sbb
enter
mov
das
adc
mov
shll
ror
sahf
dec
cmpsl
jecxz
lds
sub
enter
mov
lahf
mov
loopne
outsb
pop
mov
mov
int3
mov
ret
mov
sbb
jno,pn
insl
pop
dec
dec
push
repnz
cmp
sahf
loop
nop
and
mov
mov
adc
and
pop
dec
stc
xor
sbb
mov
lcall
or
pop
sbb
test
les
adc
cs
cli
fbstp
mov
dec
or
je
std
cmovns
xchg
rclb
sarl
xchg
add
sub
lods
pop
data16
cmpsl
sarb
cli
mov
xchg
into
test
mov
aaa
adc
adc
popf
sbb
call
xchg
insb
push
out
ficompl
xor
mov
inc
hlt
out
out
imul
fldpi
xchg
fisttpll
mov
call
xchg
mov
into
pop
aaa
fucom
ljmp
cmp
mov
icebp
or
fdivr
fstl
push
mov
and
push
addb
repnz
xchg
mov
subl
test
pop
fscale
repnz
xchg
xor
dec
xor
cmp
mov
gs
add
lea
test
jo
in
popa
xor
lods
xor
jg
orl
pop
imul
pop
pop
mov
add
pop
pop
loopne
or
or
cmpsb
lret
cs
or
movsl
scas
dec
aad
push
clc
fisttpll
inc
mov
clc
test
pop
aas
repz
jp
movl
stos
cmp
xor
sti
cmpsb
les
repz
pop
sub
icebp
inc
mov
push
xor
clc
js
ficompl
cmpsb
jp
ja
sbb
push
xchg
daa
jnp
xchg
lahf
or
inc
mov
xlat
movsl
add
push
mov
mov
push
fdivl
ss
pusha
jle
jns
ret
jbe
mov
or
mov
pop
stos
jg
data16
push
cmp
aad
pushf
inc
mov
das
stos
cmp
push
notl
stc
mov
jno
adc
mov
call
pushf
fiaddl
rclb
outsl
in
repz
mov
mov
inc
jns
mov
fcompp
cmp
aas
xchg
cmp
jns
ret
jecxz
loop
fucomi
daa
inc
adc
out
mov
mov
loop
mov
cmp
nop
movsb
out
xor
fstp
jle
iret
pop
jge
jae
ret
jno
and
cmp
adc
dec
ds
cmp
jecxz
jae
call
lcall
ja
rcrb
es
stos
and
or
pop
mov
rol
and
push
push
sbb
roll
jge
push
sbb
sub
xchg
lret
or
dec
xchg
mov
push
and
pop
mov
push
mov
and
push
push
adc
mov
mov
inc
jns
pop
ljmp
mov
sbb
adc
popa
mov
xor
pushf
aad
nop
adc
push
je
jge
imul
push
mov
dec
jne
repnz
xchg
fistl
adc
leavew
sbb
mov
lret
adcl
add
sbb
pop
clc
push
cmp
scas
stc
adc
icebp
out
cmpsb
xor
inc
mov
hlt
in
xor
lret
jl
clc
xchg
mov
jp
inc
in
sbb
cmpsl
and
dec
out
inc
sar
inc
mov
pop
filds
aam
test
gs
push
data16
scas
cmpsb
pop
add
push
pop
sbb
sub
jle
inc
ds
cmc
add
add
adc
lret
mulb
out
outsl
xchg
or
icebp
scas
push
or
jo
incl
mov
gs
rolb
or
lods
repz
inc
shl
mov
push
insb
jp
pop
mov
mov
lock
gs
and
mov
stc
or
aam
xchg
hlt
mov
or
push
mov
scas
lds
fidivrs
push
mov
ss
nop
mov
popa
add
mov
rol
repz
xor
jns
push
xchg
add
inc
or
adc
dec
adc
mov
push
lret
ds
add
push
dec
add
pusha
dec
stc
std
pop
mov
ret
in
int3
xchg
mov
sbb
dec
sbb
loopne
in
pop
les
xchg
fcomp
xor
push
shlb
add
jmp
mov
out
mov
lcall
jb
aad
adc
mov
inc
dec
or
cmp
pop
pop
jp
fidivrl
xchg
push
test
jl
mov
fwait
loop
fists
jecxz
stos
jnp
mov
mov
scas
inc
stos
mov
mov
jecxz
sub
ret
cs
mov
cmp
in
inc
sbb
xchg
mov
jbe,pt
fisttps
ja
test
aad
filds
mov
sbb
stos
stc
mov
xchg
into
dec
add
pop
mov
jae
popa
add
or
shl
jle
scas
ljmp
xor
sbb
fldcw
into
aam
mov
aaa
jp
push
jno
and
orl
gs
addl
lods
inc
ret
or
lea
call
sbb
and
dec
stc
gs
aam
popa
clc
push
filds
mov
mov
int
roll
xchg
das
add
dec
and
jge
lahf
pusha
pop
push
jb
mov
out
xchg
lods
mov
push
imulb
pop
fdivl
push
dec
pop
add
xor
or
adc
pushf
inc
mov
or
cmpl
mov
mov
fsts
pop
aad
jo
sub
das
iret
int
xor
mov
ja
dec
lock
jo
sbb
repz
out
sbb
scas
xchg
fnsave
adc
call
push
out
js
ds
mov
add
xchg
sbb
xchg
dec
sbb
push
xchg
mov
xor
in
mov
adc
in
adc
popf
inc
aaa
sbb
lea
push
loope
aaa
imul
jmp
dec
mov
dec
xor
idivl
test
pop
rcll
cmp
sti
int
sub
dec
jne
mov
test
lods
xor
xchg
dec
and
sbb
xchg
cwtl
mov
cmp
push
scas
push
cmpsb
fsts
ret
leave
mov
cmp
add
test
nopl
test
xchg
out
imul
inc
adc
cwtl
sub
mulb
and
fcmovnb
xchg
dec
popf
fcomip
subb
jecxz
mov
imul
mov
in
xchg
push
enter
lods
sbb
dec
mov
lret
cmp
adc
out
aam
idivb
sbb
and
ret
paddb
xchg
push
dec
ljmp
test
in
hlt
push
loope
inc
in
bound
sbb
pop
pop
cmc
mov
cld
or
rcr
xor
loope
jbe
fildl
mov
bnd
out
out
cmc
push
and
dec
mov
adc
cltd
movsl
sub
test
cmc
inc
out
sbb
movsb
ret
mov
jl
mov
xor
inc
xchg
pop
xchg
jg
push
hlt
repnz
add
iret
push
ljmp
sbb
adc
or
loope
push
jb
aas
jne
or
ret
mov
push
sbb
jg
pushf
mov
jns
cli
test
movsl
pop
fdiv
push
cwtl
lret
push
loopne
push
mov
jg
mov
leave
stos
push
cld
dec
pop
arpl
ds
in
sub
sbb
scas
loop
inc
sbb
cld
std
ja
lds
fcompl
or
inc
scas
loop
iret
cmpsl
lds
test
add
and
add
lret
sbb
flds
add
stos
clc
dec
ret
sub
pop
cmp
sbb
addl
add
push
insb
cs
xchg
iret
popa
pop
repz
adc
jae
movsb
add
aas
sbb
mov
ljmp
pop
mov
out
jne
add
ret
lock
mov
inc
sahf
adc
pop
int
cmp
mov
jmp
call
mov
cmp
push
and
mov
daa
jo
and
fcmove
lods
int3
add
and
fisubs
and
pop
jmp
fcomps
fsubs
mov
jmp
push
int
popa
xor
add
cmp
pop
sbb
popa
outsl
clc
ret
jnp
cmp
and
sahf
sub
loope
repz
out
in
push
je
jmp
dec
lds
push
ret
add
mov
in
mov
scas
fmuls
mov
pop
mov
cld
xlat
jns
out
add
inc
lret
cmp
sbbl
das
fists
push
push
cmp
dec
js
icebp
mov
aaa
ret
movsl
stc
and
add
nop
or
pop
or
jp
and
sbb
imul
sub
enter
stos
mov
les
adc
or
mov
cwtl
and
cmp
jnp
iret
mov
das
jne
aad
in
insb
test
jno
inc
rep
in
push
fstpt
lea
fisubrs
pop
pushf
imul
leave
add
add
mov
push
mov
add
mov
add
jne
sub
add
aad
push
mov
push
cmp
pop
cmp
push
inc
das
inc
xlat
dec
cmp
and
lahf
mov
pop
push
jmp
sub
push
mov
rcrb
rcll
mov
inc
push
mov
cmp
jne
loopne
fcomps
test
xchg
push
mov
js
cmc
inc
cli
jnp
aad
repz
lods
xor
pop
adc
orb
push
cld
dec
hlt
mov
pop
cs
fiadds
hlt
pop
ds
jecxz
xchg
fldl
popa
scas
add
test
notb
push
jg
cwtl
lock
xor
and
stos
push
mov
or
xchg
enter
gs
bound
lock
and
mov
insb
inc
fsubrp
xor
and
lea
xor
mov
enter
test
sub
rol
pop
bound
add
jg
jbe
js
inc
adc
mov
rcl
loopne
scas
add
push
push
bound
fsubs
mov
cmp
loop
adc
cs
sub
mov
faddp
inc
or
push
rorl
cmpsl
fdivrl
xor
add
dec
add
insl
sub
mov
roll
mov
outsl
std
lahf
cltd
sbb
cmc
jle
in
dec
loope
inc
dec
cmp
in
xor
pop
cwtl
cwtl
sbb
and
int3
jle
push
leave
pop
sub
pop
out
jl
mov
ret
push
stos
mov
stc
flds
ss
repnz
cld
mov
cmp
gs
cmpsl
test
test
mov
sbbl
fcompl
push
jno
ffreep
iret
mov
cmp
push
outsl
adc
xor
mov
mov
rcr
adc
jmp
pop
add
lods
fmull
sbb
pop
inc
inc
stos
enter
cmp
testl
sub
and
stc
testb
or
lock
cmp
dec
cmpsl
ss
add
into
jne
xor
or
xchg
fwait
js
add
inc
or
sub
mov
fisttps
frstor
mov
fdivrl
mov
dec
nop
jne
pusha
rorl
and
ret
lahf
je
call
nop
in
lock
or
adc
icebp
scas
dec
sbb
leave
push
shll
je
cmp
mov
xchg
roll
xchg
cmc
cmp
scas
movsl
jecxz
stos
mov
test
pop
jae
sub
cwtl
push
xchg
mov
pusha
les
add
jecxz
cmp
ret
pop
andb
push
and
cmp
pusha
cmpsl
mov
pop
jnp
sub
pop
jbe
mov
out
mov
add
and
pop
fdivl
pop
push
sub
push
adc
adc
adc
in
mov
mov
sahf
mov
fcos
pop
push
dec
push
les
jbe
mov
cwtl
jge
popf
fcoms
lods
movsl
hlt
out
cwtl
shl
notl
scas
sbb
movl
and
fisttpll
pusha
lcall
add
jnp
push
jle
mov
je
jmp
xchg
pop
pop
cmp
inc
divb
fcomp
sbb
mov
inc
sbb
pop
lock
xchg
dec
movb
push
cs
dec
sub
mov
lock
lahf
std
xor
out
pop
inc
dec
xlat
pop
mov
mov
adc
cmc
shrb
pop
insb
or
testl
adc
frstor
sbb
stc
popf
cld
mov
and
push
cmpsl
jns
fildl
mov
lahf
mov
mov
and
sub
jne
adc
pop
adc
add
cld
and
into
call
fs
adc
jne
jp
mov
push
aad
dec
pop
or
sub
int
cmp
roll
sbb
mov
dec
scas
lcall
sbb
outsb
aam
mov
jbe
add
cmpsl
and
fnsave
dec
add
mov
repnz
call
mov
loop
cli
lahf
lods
sbb
xor
cmpsb
and
loopne
jecxz
and
jo
mov
xchg
add
mov
daa
fidivl
into
lcall
dec
lods
cmpsb
fsubl
pop
je
loop
out
mov
mov
test
es
push
rorb
add
cmpsb
mov
cmc
stc
addr16
mov
xor
and
out
lret
xchg
cmpsl
push
adc
je
cmp
mov
ds
jne
loope
or
push
in
sti
ret
or
sar
push
lods
sbb
pop
and
ja
xorl
jg
pusha
cli
adc
push
mov
fwait
das
insl
cmp
fwait
mov
dec
rcr
and
pop
xchg
jmp
lds
jg
mov
inc
cld
jae
jle
xchg
decb
xchg
xchg
adc
lds
test
and
mov
arpl
mov
inc
adc
jns
and
test
js
push
inc
int3
mov
jns
jp
test
jp
add
js
sub
or
fwait
mov
mov
jnp
mov
std
sbbb
sub
mov
daa
dec
adc
or
ret
push
xchg
add
inc
aad
or
mov
jp
aas
rolb
mov
test
push
pusha
loop
push
dec
out
mov
or
cmp
test
mov
pop
ds
mov
xchg
dec
xchg
cmp
daa
mov
xor
cmp
and
mov
repnz
cmp
sub
mov
popa
jecxz
adc
jne
loopne
xchg
jbe
jle
jle
pop
sbb
loopne
ds
sbb
xchg
loope
push
push
xor
ja
cmp
je
andl
push
mov
dec
dec
lods
pop
dec
in
js
mov
cmc
cltd
je
ret
mov
nop
xchg
or
add
jnp
or
stos
mov
jmp
add
cmc
xchg
imul
and
rcll
jne
iret
ss
dec
lcall
cmp
rep
or
icebp
jg
scas
mov
test
in
decb
fildl
sbb
fstl
and
mov
rol
cmp
sbb
dec
rcr
or
sbb
sbb
add
out
or
mov
dec
mov
mov
hlt
mov
gs
pushf
cltd
xchg
inc
jae
je
mov
clc
cmp
inc
xchg
in
test
mov
and
scas
aad
sbb
dec
fldl
mov
push
xor
sbb
jmp
inc
test
stc
imul
push
cltd
sub
pop
cld
xor
cltd
pop
ja
faddl
test
repz
call
mov
stc
add
mov
loop
mov
movaps
fdivrs
lea
xor
push
idivl
and
fsts
push
mov
push
cwtl
cmpsl
sbb
aas
push
cs
out
mov
mov
adc
sar
sbb
dec
jo
xchg
jae
lods
scas
popf
je
cmc
les
mov
lock
add
jg
repz
or
add
add
xchg
inc
jo
mov
xor
push
loopne
mov
mov
in
fstpl
cmpb
jg
sub
or
and
or
mov
pusha
add
inc
insb
pop
jne
rolb
scas
pop
das
mov
xchg
or
inc
push
cmc
sbb
and
pop
sub
jmp
cwtl
sbb
mov
pop
add
mov
sarl
cmp
mov
or
sbb
sbb
add
in
mov
sbb
mov
test
dec
je
or
dec
outsl
das
ss
sahf
mov
cmp
lea
sbbl
ret
xor
dec
hlt
fildl
mov
cltd
sbb
mov
lcall
cmp
cmc
lods
xchg
mov
lods
jne
rcrl
xor
inc
mov
popa
or
mov
add
pop
js
adcb
call
add
int3
dec
pop
bound
cmp
xor
lods
add
push
scas
repnz
pop
imul
ljmp
lret
stc
lock
lret
int
shlb
dec
add
mov
mov
leave
pusha
loop
mov
inc
fwait
enter
cmp
loopne
jle
mov
sarb
cmp
pop
jo
loopne
cmp
adc
xchg
ret
jl
enter
push
lds
push
add
adc
imul
arpl
fildll
outsl
sbb
adc
add
mov
imul
mov
jne
mov
test
jmp
jge
xlat
out
mov
mov
cltd
lock
fs
jp
and
fiadds
das
lret
clc
test
iret
jbe
call
aad
out
xor
cmp
ret
adc
test
jb
or
push
jno
mov
push
jle
sub
je
add
mov
icebp
enter
inc
xchg
jecxz
lahf
xor
jmp
sti
ss
call
pop
mov
add
inc
in
sub
cmc
stos
negl
fildll
int
pop
xor
fs
sbb
imul
mov
fistpll
add
jge
adc
jae
xor
sub
xchg
mov
push
push
pop
push
dec
mov
repnz
int3
test
pop
cmp
jae
xor
imul
fdivrl
sti
and
pop
sbb
out
push
imul
movsl
xor
inc
mov
sbb
cltd
rol
adc
ss
ja
pop
test
sub
xchg
adc
popa
and
clc
test
cli
movsb
lret
aam
push
and
sarl
or
jnp
lock
dec
shr
inc
out
or
mov
xchg
xchg
daa
cmp
cmp
bound
xchg
cmp
stos
adc
jle
xor
jb
xchg
js
add
or
xchg
movsb
outsl
lcall
or
sub
fprem1
ljmp
or
adcl
jg
outsb
aas
les
and
fldcw
push
mov
testl
rclb
cltd
push
sbb
mov
test
add
pop
and
fidivrl
imul
fisttpl
sar
incl
mov
mov
lods
imul
ret
rcr
adc
repnz
or
imul
push
or
mov
dec
pop
icebp
push
inc
mov
mov
push
fdiv
or
outsl
pushl
outsl
cmp
scas
je
or
sbb
push
inc
lds
fisttpll
mov
mov
scas
inc
add
icebp
sub
xchg
push
test
icebp
add
blcic
cmpsl
jle
gs
sbb
and
and
out
cld
es
and
xchg
mov
push
repnz
rorb
ljmp
mov
fs
dec
jae
add
leave
jne
call
pop
lods
push
mov
imulb
xchg
ret
call
jnp
mov
sahf
hlt
aas
cmpsb
or
pop
pop
into
clc
movsb
in
test
add
cmp
lods
sub
frstor
ljmp
cmp
lcall
jae
push
adc
add
ficoms
jae
repz
arpl
loope
imul
loopne
fwait
jo
loopne
addr16
mov
fwait
xor
add
in
mov
mov
outsl
repnz
push
xor
lea
cmpsl
enter
xor
cmp
fcomi
sti
push
hlt
adc
jns
mov
xor
out
ja
lcall
pusha
or
or
leave
add
mov
and
or
arpl
outsl
mov
push
lock
je
out
adc
mov
cmp
inc
jbe
pusha
jae
sti
test
jb
fidivl
lahf
cmp
aad
pop
dec
cltd
dec
loope
mov
xor
lock
shlb
insb
cld
sar
les
repnz
cmp
inc
add
js
out
lahf
add
push
add
sub
leave
xor
push
sahf
popa
or
sbb
add
mov
cld
lea
push
stos
jno
xlat
ficoml
jbe
in
iret
lret
fs
mov
popa
aam
pop
mov
cmp
scas
pushf
pop
pop
and
pop
jnp
jecxz
cltd
xor
or
rcrb
repnz
or
popf
inc
in
sbbb
emms
mov
loopne
inc
fcomps
jnp
sbb
pop
sbb
xchg
cmp
hlt
inc
loope,pt
xor
sbb
jmp
bound
bound
adc
out
movsl
xor
jno
daa
dec
test
repnz
fldt
stos
xchg
jge
mov
xchg
and
scas
push
jle
push
fsubrs
cmp
mov
pop
mov
icebp
icebp
sbb
push
cmc
subl
clc
xchg
je
scas
pop
insl
cld
xchg
fimull
sbb
adc
lods
adc
or
ja
jle
jmp
jg
imul
aam
xlat
mov
cmp
sbb
sbb
js
cli
fbstp
insb
fstps
add
aaa
pop
rcl
je
and
cmc
push
push
pop
add
push
lods
push
sub
mov
jo
stc
push
into
inc
int3
loope
adc
mov
fdivrs
lahf
sbb
push
iret
je
ljmp
rcrb
arpl
mov
aaa
aam
pop
shl
mov
dec
push
std
fnsave
lods
and
loopne
std
ret
fidivrs
push
jmp
fsubs
loop
mov
mov
mov
lock
loopne
push
lods
rolb
das
lock
int3
repz
rclb
sub
lock
je
xchg
lahf
call
in
aad
mov
and
out
fadds
inc
mov
jne
adc
sub
jo
pop
pop
jle
push
mov
cs
and
pop
outsl
shl
push
mov
mov
out
and
mov
and
aam
add
rcll
pop
mov
loop
push
jge
add
push
ret
subb
mov
or
sub
fidivrs
fistpl
and
loop
mov
ret
in
and
loopne
adc
mov
call
fucomi
add
mov
cmc
xor
ret
jne
push
pop
xor
mov
aam
ret
leave
mov
popf
jo
adc
icebp
bnd
lock
add
adc
mov
add
test
adc
aas
jge
sahf
in
dec
fisttpll
push
mov
push
jg
cmp
popf
mov
push
add
dec
xlat
jno
mull
jbe
insl
dec
sub
cld
jne
dec
and
sbb
add
and
mov
std
push
mov
add
sbb
je
shll
cmc
rcr
cmp
xchg
ljmp
lcall
insb
jae
addl
sarl
push
outsl
adc
icebp
adc
in
inc
cmpsl
aad
jecxz
movsl
push
les
ret
pop
aaa
mov
js
xor
pop
add
shlb
inc
xchg
aad
in
pop
mov
inc
xchg
mov
inc
dec
lcall
insb
cli
cli
icebp
iret
jp
xchg
fwait
adc
inc
adc
lock
jecxz
sbb
ret
add
jmp
push
xchg
mov
mov
dec
push
dec
mov
mov
pop
mov
cmp
lods
fdivrp
cmpsl
hlt
fld
pop
test
icebp
and
cli
outsl
jecxz
mov
insb
xchg
psrad
xchg
ret
sbb
jg
mov
je
cmpsb
in
or
rcrb
adc
ficoms
repnz
popl
ja
inc
out
fstps
addr16
mov
lahf
fwait
sub
testb
cld
mov
jae
shlb
sub
std
and
or
mov
mov
mov
add
imulb
jbe,pn
pop
mov
loopne
or
cli
mov
mov
mov
int3
push
sub
sbb
push
insl
mov
stc
xchg
jl
in
jecxz
les
sbb
cmp
js
lcall
movsb
adc
fwait
nop
mov
mov
mov
push
sbb
jo
ljmp
fisttps
loope
addr16
mov
inc
repnz
add
mov
nop
add
addl
or
mov
push
xor
dec
sti
or
pop
push
sti
inc
dec
fistpll
mov
xchg
adc
push
mov
je
data16
add
mov
rcr
out
scas
es
test
aam
inc
bound
clc
mov
or
mov
mov
and
ret
mov
push
fwait
or
js
mov
sahf
adc
add
xchg
mov
mov
push
push
inc
pop
xchg
das
inc
lds
ret
addr16
mov
imul
xor
sbb
adc
jb
xlat
stos
imul
es
xchg
adc
xor
mov
inc
adc
fidivrl
cmp
outsb
mov
sar
add
add
lods
sbb
pushf
lcall
pop
mov
cmp
clc
add
mov
add
xchg
mov
push
dec
add
fs
pop
enter
sub
pop
fsubrl
mov
jp
add
lock
jne
push
lods
xor
adc
sbb
in
popa
popl
stc
mov
jne
aaa
int3
fyl2x
add
test
push
in
dec
cmp
jl
mov
cmp
jae
cld
add
loope
sbb
jbe
sbbb
push
adc
lret
push
test
fwait
adc
jb
xor
faddl
and
fldcw
pop
movsb
adc
and
mov
inc
into
and
sub
scas
test
jge
jno
nop
push
cltd
mov
xlat
cmp
mov
rclb
fdivl
or
std
cmc
roll
xchg
test
fbld
idivb
popf
bnd
test
std
or
lods
adc
push
int3
bound
ss
dec
sub
sbb
add
sbb
mov
popf
xchg
dec
mov
rorl
and
jmp
lea
jo
sub
cmp
movb
in
in
and
in
push
mov
popa
jne
cmc
jno
ja
pop
fs
lods
cmp
shl
aam
pop
negb
pop
iret
jne
pusha
fstps
fcomp
cld
repnz
and
rcrl
hlt
jnp
mov
fisttpl
mov
or
inc
lds
mov
pop
icebp
lods
and
stos
ljmp
mov
sub
mov
hlt
mov
jnp
arpl
add
inc
jle
pop
fnstenv
inc
push
jecxz
jno
mov
mov
out
jecxz
test
rcl
call
fidivrl
mov
add
insl
jg
or
cmp
inc
mov
jne
and
or
mov
gs
clc
out
mov
adc
adc
xorl
pop
push
out
test
aam
pop
in
add
push
ljmp
clc
pop
fadds
push
mov
adc
cmpl
ret
fmuls
scas
pop
imul
pop
pusha
in
mov
sarl
add
test
bound
arpl
pushf
jmp
mov
pusha
ret
and
icebp
sub
push
xor
inc
push
repnz
push
cltd
inc
repz
lcall
mov
pop
mov
dec
lods
clc
fiaddl
adc
insl
xchg
cmc
loop
stos
sub
or
pusha
pop
xor
adc
xchg
mov
leave
cmp
add
inc
and
and
ficompl
int
push
mov
add
out
fcomp
in
push
shr
xchg
rorb
test
add
add
rcr
adc
add
addb
lods
inc
clc
lock
mov
mov
int
bound
mov
sub
inc
pop
sub
sbb
repnz
push
xorl
arpl
stos
movsl
in
or
mov
jae
xor
fldl
scas
repnz
add
push
pop
test
clc
push
mov
jp
mov
stos
imul
xor
dec
js
sbb
in
mov
leave
xor
cmp
and
mov
in
mov
mov
ljmp
lea
mov
jae
mov
mov
sbb
sti
js
in
loopne
out
push
jp
cmp
popa
xchg
inc
push
dec
popf
xchg
pop
lods
xor
scas
inc
mov
dec
inc
xchg
lea
cmc
repnz
dec
frstor
pop
popl
prefetcht1
stc
push
pop
mov
lods
insb
jl
mov
in
dec
mov
popf
inc
jnp
mov
xor
dec
mov
and
call
mov
sub
pop
inc
sbb
lods
adcl
je
lahf
daa
jmp
shrl
adc
jl
xchg
jbe
mov
fstpl
idiv
aaa
mov
xor
xlat
das
push
std
pop
cmpsb
xchg
dec
inc
stos
or
push
cwtl
xor
orb
roll
pop
xchg
pop
jns
fcoms
iret
roll
clc
sbb
pop
rcll
pextrw
cmp
movsl
inc
or
das
fmul
cmp
or
inc
mulb
jae
inc
or
mov
hlt
pop
sbb
xchg
adc
or
es
push
je
fs
sahf
push
je
fwait
test
inc
cld
fidivrl
notb
mov
call
outsb
shlb
lds
mov
fstpt
jl
int3
jae
adc
cmpsl
cmp
mov
jae
arpl
fldl
les
out
in
sbb
xor
mov
outsb
sti
cmpsb
mov
rcl
mov
or
jo
sub
fiaddl
sub
arpl
and
rol
mov
iret
sbb
cltd
loopne
pop
or
push
and
dec
xor
push
cwtl
mov
inc
mov
mov
sbb
jae
mov
movsb
or
and
pop
orl
add
push
cmpsb
pop
rclb
fmul
adc
out
je
movl
and
pusha
adc
pop
cmc
add
mov
xchg
cmp
push
xchg
mov
adc
imul
jnp
push
cli
pop
test
and
iret
out
sbb
jbe
call
lret
leave
pop
jl
outsb
cmp
mov
jecxz
lahf
sub
test
jo
mov
jne
mov
in
mov
xlat
int3
mov
dec
notb
cmp
ret
sub
movsb
push
ret
sbb
mov
mov
leave
repnz
addr16
mov
in
mov
cmp
loopne
mov
dec
mov
xor
std
fcoml
sti
mov
movsb
mov
loope
jge
mov
jb
or
gs
and
jge
cld
cmp
test
adc
in
shlb
add
int3
jg
lret
mov
int
in
in
sbb
mov
lret
inc
xchg
xchg
push
ret
pop
sub
movsb
push
or
or
xchg
lds
and
test
mov
inc
push
pop
mov
mov
mov
iret
cmp
and
and
sub
shll
or
pop
jmp
or
roll
or
icebp
sub
xlat
jecxz,pn
mov
dec
orb
sbb
stos
jmp
movsb
or
pushf
int3
bnd
stos
lods
fldcw
pop
add
sub
pop
mov
out
jo
add
inc
sub
mov
push
xchg
xchg
mov
push
cmc
lds
lret
adcb
inc
movb
mov
jg
adc
popf
lock
iret
arpl
stc
mov
xchg
frndint
shl
test
inc
imul
shrb
sub
out
adc
mov
sub
fisubs
js
clc
fisttps
dec
push
popa
cmc
pop
shll
xchg
sbb
sbb
out
shlb
leave
or
mov
sub
cld
or
mov
lock
xchg
mov
ds
mov
inc
call
dec
fwait
pusha
mov
mov
lret
jl
xchg
stc
incl
stos
and
pop
add
xchg
fwait
stc
push
gs
in
movsb
test
in
imul
cld
add
imul
add
orps
inc
ljmp
rclb
adc
jle
je
cmp
jnp
repz
mov
sub
push
jmp
sbb
jmp
movsl
dec
add
adc
lret
or
std
mov
loope
lcall
pop
and
mov
shll
mov
fwait
sti
jmp
xchg
les
xchg
nop
imul
rorl
fimull
imull
add
xchg
xchg
sub
push
dec
xchg
stc
push
push
arpl
inc
ficoml
cmp
je
push
inc
idiv
roll
xor
imul
xor
inc
insb
dec
sbb
push
repnz
jae
add
sarb
scas
pushf
outsb
inc
sbb
imul
and
aas
and
fs
push
repz
inc
mov
jle
fucom
hlt
push
mov
leave
add
add
es
adc
cmp
jns
inc
fiadds
adc
addr16
shll
clc
in
xchg
and
jg
mov
mov
pop
pusha
loope
dec
hlt
jmp
stc
fmuls
bound
sbb
jp
or
movsb
pop
out
xchg
sarl
cmpl
repz
cmp
add
mov
iret
lods
mov
sbb
inc
scas
xor
inc
mov
jge
shll
lock
pop
cmp
xchg
subb
les
in
jbe
jmp
imul
scas
push
pop
repz
sti
loopne
sub
mov
ffree
cmpsb
and
mov
cmp
cmp
stc
arpl
or
sbb
out
lods
adc
xor
dec
lds
cli
push
or
aam
leave
inc
cli
sub
jo
sub
cs
xchg
mov
les
xor
repz
sbb
fs
push
push
jno
sbbl
lret
cwtl
or
mov
bnd
bnd
cli
fdivs
fildll
cmp
cmpsl
push
dec
xchg
xlat
loope
add
adc
sub
pop
ret
adc
push
ljmp
adc
jg
cmp
rol
inc
loopne
dec
ret
push
lods
std
aam
dec
sti
loope
mov
jae
and
jle
ret
insl
std
add
repnz
push
and
push
push
fdivrl
jno
jns
sub
enter
fldt
nop
sbb
mov
test
cs
les
push
in
fistl
add
cmp
call
fdivrs
lret
pop
in
and
pop
stos
cmc
pop
movsl
add
bound
adc
idiv
or
sarb
call
jbe
aas
jecxz
push
test
outsl
popa
out
fcoml
std
adc
push
mov
ss
push
adc
xorb
mov
fs
shrb
or
sti
xchg
sub
adc
cld
adc
js
and
data16
adc
fwait
sahf
inc
cs
jo
inc
cwtl
mov
mov
fcmovb
leave
hlt
repnz
sbb
xlat
inc
pop
hlt
and
mov
push
push
loop
dec
lret
pop
cmpsb
imul
pusha
dec
aam
inc
loope
xor
int
mov
mov
mov
clc
mov
xor
mov
das
ljmp
adc
mov
mov
add
push
push
loope
mov
and
inc
add
iret
xor
xorl
dec
imul
dec
cmp
ds
test
adc
insb
lods
cmp
lahf
dec
jge
lods
mov
fldenv
addb
shll
mov
aas
test
jbe
fdiv
popa
popf
sub
ds
movsl
and
into
aad
cmp
mov
rcrl
pop
in
mov
add
fnstsw
shll
and
sub
inc
xchg
pushf
xchg
mov
shl
sbb
cmp
jge
mov
jb
loopne
nop
icebp
mov
outsb
mov
pushf
cmp
dec
mov
fscale
mov
ret
ret
xor
cmp
sub
cmc
mov
mov
push
pop
sbb
adc
fwait
mov
mov
cs
mov
xorb
in
ret
xchg
sbb
adc
sahf
lock
adc
das
fs
jecxz
or
mov
std
mov
sbb
test
cwtl
daa
jmp
sarl
xor
adc
daa
je
rclb
sbb
sub
shrb
insb
aad
fstl
in
hlt
outsl
xorl
and
adc
mov
dec
jne
pop
out
and
lods
and
fdivs
push
adc
imul
repz
xchg
les
or
push
mov
lret
push
leave
enter
mov
jle
push
xor
push
pop
push
ja
mov
nop
fstpt
sub
xor
out
fstp
or
xor
cld
jns
mov
sub
fmull
and
push
shlb
fnstsw
and
scas
lds
in
ja
dec
sbb
ret
sub
or
rcr
rclb
lret
in
dec
ret
mov
lcall
scas
lods
lods
inc
jg
mov
adc
cmp
sub
jg
out
test
add
or
sub
mov
push
mov
nop
out
test
fiadds
scas
pop
push
push
icebp
rolb
je
fistl
jp
out
dec
cmp
cmp
imul
push
js
cmp
imul
mov
test
int3
scas
inc
loope,pt
fidivrl
xor
sbb
jl
call
fneni(8087
repz
insb
ficoml
in
icebp
repnz
dec
into
xlat
xor
call
jg
clc
xchg
mov
stos
test
push
mov
adc
mov
mov
jp
fildl
adc
es
push
and
cmp
pusha
por
push
push
add
inc
loop
pop
push
mov
lds
test
mov
mov
xchg
fsubrs
fstpt
ja
xchg
mov
push
int
sbb
loope
push
repnz
xchg
decl
push
les
add
inc
movsb
mov
mov
fistl
mov
clc
jecxz
loope
jne
ret
mov
xchg
sti
adc
fnstcw
not
mov
add
loop
add
aaa
xor
push
outsl
mov
fcmovbe
push
stos
clc
stc
push
xchg
sub
inc
mov
mov
sbb
stos
sub
sbb
ja
mov
pushf
mov
push
push
pop
lahf
nop
repnz
pop
push
mov
popa
pop
pop
xchg
aaa
cwtl
es
inc
hlt
fisubrl
adc
lock
xor
lods
hlt
lods
push
jae
or
mov
mov
je
imull
cmc
dec
les
push
add
stc
add
int
add
subl
movsl
aaa
cmp
xor
rcl
imul
pop
stos
je
pop
icebp
adc
xchg
cmpsb
std
dec
test
mov
push
and
xor
pop
push
lahf
push
push
dec
or
int
or
push
repz
pop
and
adc
adc
into
sarl
pop
jns
imulb
movsl
or
xchg
xor
ss
aam
sarl
insl
and
add
icebp
movsb
dec
cmp
leave
mov
fsubrl
sti
adc
movsl
adc
fs
mov
mov
testb
adc
int3
insl
or
loope
and
mov
nop
jge
stos
lahf
cld
stc
daa
aad
and
sbb
cli
roll
and
jmp
stc
push
dec
lcall
mov
sbb
test
cltd
sub
rorb
pop
stos
jae
add
add
shrl
lcall
cwtl
out
inc
cmc
stc
mov
fimuls
mov
push
xor
add
insb
mov
aaa
pop
push
xchg
mov
lea
stc
inc
cmp
sbb
adc
jo
in
or
xchg
incl
pop
jns
mov
lcall
sub
pushf
cld
push
mov
ret
int3
xor
scas
int
clc
push
ret
insl
or
inc
pop
enter
sub
pop
mov
shlb
test
push
mov
xchg
xchg
push
arpl
imul
repz
lahf
or
stc
xchg
inc
popa
inc
or
insl
jno
push
js
stos
cmp
xor
scas
sbb
lret
adc
lcall
mov
mov
fisttpll
dec
adc
adcb
pop
out
push
jg
sarl
repnz
xchg
ss
push
and
aas
addr16
dec
and
pop
aad
sub
mov
sar
jne
cmpsl
test
pop
rcr
fidivl
ret
jecxz
lods
scas
xor
fwait
addr16
pop
or
je
jle
jnp
jbe
xchg
mov
lret
cli
or
push
lods
ret
ret
and
incl
test
sbb
xor
cs
sbb
pusha
add
imul
mov
shlb
or
push
js
loope
sub
or
sti
in
outsl
push
repnz
cmp
mov
jp
and
push
xchg
les
pop
push
dec
mov
add
cli
and
or
xchg
pop
inc
mov
outsl
movsb
mov
in
jae
and
push
addr16
inc
mov
mov
scas
mov
test
test
mov
ffree
adc
pop
pop
push
ret
mov
cs
repz
lock
add
pop
mov
shrl
and
add
inc
dec
push
cmpl
lods
dec
or
xchg
lock
int
mov
mov
adc
into
stos
push
ret
mov
fwait
push
add
xor
or
cltd
lods
or
fdivs
ja
cwtl
fbld
sbb
out
add
xlat
cwtl
loope
int3
stos
pusha
inc
repnz
mov
sti
or
int3
pop
push
mov
mov
daa
idivl
add
inc
adc
or
jbe
xchg
lock
push
frstor
mov
movsl
je
jns
in
fbld
push
mov
nop
adc
push
test
adc
in
stos
inc
mov
fnsave
and
in
insb
ret
adcl
lock
into
testl
push
pop
js
mov
and
adcl
cmp
pop
or
cli
iret
addb
in
xchg
or
cmc
jp
movsb
mov
xchg
jns
outsb
lods
jo
sarl
fdivl
and
push
sbb
mov
test
sbbl
decl
adc
mov
leave
sub
mov
and
fcoml
movsb
xlat
cs
loope
test
mov
stos
ret
pop
xor
jg
je
scas
inc
push
aad
jne
sahf
out
outsl
mov
add
ja
mov
movsl
dec
in
ret
dec
loope
pop
push
test
or
rdtsc
repnz
loopne
inc
movsb
pop
mov
or
xlat
adc
popa
cmp
or
inc
sbb
xchg
sti
bound
sti
js
fbstp
lods
or
movsb
leave
mov
clc
cli
testl
inc
lahf
in
or
imull
or
call
mov
lcall
jae
stos
aaa
mov
adc
add
push
daa
pop
in
repz
push
mov
xchg
add
daa
mov
loopne
cmp
ret
cmp
pushl
xor
sbb
sbb
or
lret
jge
sbb
mov
je
xchg
fsubl
scas
addb
adcl
bnd
hlt
mov
cmp
mov
sbb
pop
imul
xchg
cmp
fstl
sbb
push
cli
mov
inc
pop
jmp
pop
lahf
aas
sub
ficompl
cmc
jb
cmp
xlat
insb
pop
aam
aam
stos
push
js
enter
jno
stos
les
xchg
movsl
cs
shl
jae
xlat
pushf
adc
mov
and
sub
push
sbb
mov
shlb
int
insl
pop
mov
and
sbb
jl
gs
scas
fcomp
sub
pop
shr
add
cs
push
test
pop
bound
xchg
adc
mov
jle
cltd
inc
lods
out
sbb
es
jle
aam
cli
in
fwait
jge
jne
sahf
cld
or
cli
movsb
movsb
popa
and
sub
std
scas
push
outsl
fidivl
and
out
fdiv
test
rcrl
push
push
gs
subb
test
loope
add
outsl
xor
test
inc
lods
or
pop
test
xlat
dec
scas
mov
je
add
lret
xor
push
or
arpl
pop
dec
loopne
xor
in
adc
lahf
cmp
insb
roll
ljmp
sbb
add
and
lock
pop
aad
in
lcall
aas
outsb
sbb
jp
xlat
push
jp
stc
shrl
shrl
sbb
cli
stc
sar
and
push
fwait
outsl
add
jno
mov
idiv
ja
mov
ret
sbb
add
stc
and
jl
int
call
jb
push
jbe
inc
das
std
or
mov
imul
out
loop
pop
int
scas
insl
ret
add
dec
push
jmp
lret
lcall
push
jg
cwtl
pop
hlt
lcall
pop
xor
mov
leave
sti
sbb
mov
pop
dec
mov
repz
cmp
test
inc
pop
mov
rcrb
push
cwtl
and
push
pop
jge
leave
push
fildl
ja
adc
cmpsl
mov
sub
jo
pop
mov
cld
das
push
fadd
je
pop
pop
jnp
repnz
or
xchg
and
jae
cmpl
loope
popa
repnz
stos
sbb
cltd
repz
hlt
sti
cwtl
xor
out
popa
insb
frstor
xchg
sbb
in
out
into
mov
repz
gs
cld
cmp
fnsave
inc
imul
mov
dec
popf
stos
cli
test
movsl
es
inc
push
ds
outsb
lret
ss
inc
mov
mov
ljmp
add
jo
movsb
ret
icebp
mov
jb
push
cmp
stc
sti
clc
mov
dec
test
or
push
cmp
jge
fidivs
enter
imul
fstpt
cmp
es
sti
sbb
push
stos
sub
pop
aad
out
pop
inc
sti
clc
cmp
lods
call
jl
inc
sub
adc
mov
insl
cld
xchg
add
add
sbb
cmpsb
xchg
popa
or
xchg
lock
jecxz
jns
shrl
mov
sahf
xchg
pop
pop
int3
add
sub
xor
fwait
mov
into
mov
decb
icebp
adc
clc
push
bound
xchg
cltd
iret
push
std
inc
movsb
insl
popf
jmp
cltd
mov
lock
push
enter
sbb
call
movsl
imul
pop
aas
mov
mov
xchg
mov
sub
cmpsb
or
pop
jg
jecxz
negl
ret
mov
clc
popl
js
stos
mov
sub
jo
inc
andl
mov
icebp
fisttps
in
sbb
aaa
and
shll
push
in
leave
mov
int
or
xor
inc
lock
adc
imull
xchg
leave
dec
loopne
adc
and
inc
inc
mov
add
addr16
cmc
movl
adc
adc
rcll
inc
sti
arpl
mov
dec
jecxz
fdivl
mov
daa
in
xor
aam
mov
xor
pop
pop
rorb
xor
insl
in
cmp
pusha
je
push
fmulp
or
pop
imul
nop
lock
add
test
outsl
mov
sub
adcl
daa
sbb
clc
std
adc
ljmp
xorb
fstpt
or
and
mov
cltd
cld
or
mov
sar
rcrl
or
pop
inc
popa
dec
shll
aad
inc
xchg
mov
test
dec
in
sub
mov
adc
outsb
inc
gs
aad
stos
xor
mov
dec
sbb
cmpb
bound
aas
push
addl
dec
hlt
add
mov
ljmp
ficoml
push
push
cmp
push
loopne
cmc
push
or
sti
inc
insl
pop
xchg
cmp
jno
test
mov
sbb
add
adc
js,pt
mov
mov
sti
stc
rcll
xchg
cli
pop
test
rorl
mov
add
jbe
cmpsb
shl
dec
jecxz
xlat
cmp
clc
inc
mov
mov
mov
push
into
and
lock
and
aas
fcos
cld
data16
cmp
adc
rolb
sbbb
cmc
cld
add
repz
mov
clc
adc
por
je
lahf
nop
mov
push
int3
xchg
jbe
aas
test
repz
adc
fbstp
or
addr16
mov
mov
jno
sub
mov
inc
jo
mov
sbb
jg
loopne
mov
sbb
std
add
aas
testl
mov
cs
pop
lea
push
xchg
xor
add
leave
xor
add
sbb
sub
rorb
adc
xchg
cld
xchg
push
dec
sbb
push
outsl
cmc
rcr
mov
outsb
lcall
inc
test
fcomi
cmpl
dec
mov
mov
push
imul
dec
push
jg
push
pop
into
xchg
aaa
aam
mov
bnd
jns
loope
icebp
out
negw
adcl
xchg
and
xor
das
push
jnp
adc
fisttpll
or
jge
in
shlb
push
and
or
or
xchg
inc
aad
mov
or
out
mov
cmp
sub
push
and
adc
fsubs
jg
ja
push
pop
mov
push
adc
xchg
lahf
cmp
shl
scas
sbb
ficompl
or
leave
mov
mov
pop
mov
divb
sbb
adc
pusha
mov
pushf
xchg
rcl
jnp
scas
outsl
aas
lds
arpl
mov
fxtract
test
int
subb
in
add
mov
test
sti
xchg
fmul
inc
aad
idivb
int3
mov
jl
cmp
mov
ss
adc
ret
mov
dec
fadds
test
jae
scas
cs
rcrl
popf
push
mov
cmp
mov
sbb
lahf
icebp
and
pop
cld
jge
dec
xlat
enter
out
or
int
push
mov
jge
ret
mov
jae
in
cmp
ss
xor
popa
pop
mov
mov
lock
lcall
jns
nop
ja
ds
shll
cmpsl
or
leavew
jne
lds
ret
jecxz
jge
add
arpl
mov
cld
fdivr
repz
pop
ret
enter
xchg
fistl
movb
mov
jne
pop
and
jle
push
mov
in
imulb
push
lds
mov
cmp
repz
mov
mov
addr16
mov
fsts
subb
call
adc
xor
or
stc
scas
mov
push
or
dec
sbbb
les
dec
xlat
cmc
mov
fidivrl
push
les
jo
andl
fsubl
mov
mov
add
mov
scas
lret
add
adc
dec
pop
sbb
ja
out
pop
pop
iret
mov
adc
lea
inc
fsubs
cmp
ds
lods
and
sub
xorl
movsb
das
add
cmp
fcmovnb
cmp
mov
jmp
add
lret
pop
cmp
mov
in
insb
pop
push
mov
fdivrs
clc
fmuls
mov
es
jns
or
roll
enter
popa
aam
mov
xchg
ret
pushf
cld
insl
ret
mov
add
xchg
jno
push
addr16
cld
add
aaa
js
add
sbb
pop
and
test
sbb
in
sub
adc
sub
inc
cmp
cli
jp
mov
mov
dec
dec
cltd
ljmp
out
lret
inc
movsl
out
pusha
in
les
xor
mov
leave
pop
fnsave
incl
push
or
push
hlt
lcall
or
xorl
mov
popf
ljmp
cmp
adc
idivl
mov
pop
jge
adc
lret
fs
loopne
notb
jle
mov
pop
mov
inc
in
sub
jmp
fsubrl
xlat
and
fcmove
sbb
and
fmull
pop
jle
lds
dec
sbb
lods
mov
sub
leave
mov
sub
in
mov
cmc
fnstsw
lret
jl
shrb
xor
cmc
or
mov
fmulp
mov
mov
lods
inc
aad
push
mov
mov
insl
sti
data16
lods
shl
fadd
cmpsl
fcoml
in
shlb
adc
inc
xchg
std
push
cmc
imulb
ds
adc
js
popa
cmp
push
popf
dec
loope
xchg
lock
scas
popa
loop
push
shlb
inc
xchg
pop
jmp
call
inc
pop
scas
push
clc
je
aad
outsl
repz
mov
mov
mov
cmp
xchg
pop
or
pop
mov
int3
push
fidivrl
sbb
int3
push
jo
cmp
or
loop
and
jae
shll
xchg
repz
fcomi
sub
insb
jbe
pop
ds
fisttps
sbb
nop
jge
repz
test
shrl
push
mov
push
outsl
cs
xor
add
adc
mov
jne
fstp
ret
aas
xor
pop
stos
mov
mov
add
inc
into
in
pop
jae
aam
in
push
cmp
pushf
and
jg
je
out
dec
jg
aas
xchg
mov
sarl
out
fdivrl
imul
inc
sti
inc
push
fsts
jae
sbb
adc
mov
faddp
cmc
mov
fldl
les
xor
jg
jbe
xlat
push
loopne
adc
lds
mov
jp
and
or
pusha
fmull
lods
add
pop
pop
or
or
loopne
cli
lods
stc
or
rolb
or
push
std
cmp
aad
jle
xchg
outsb
pop
rorl
lcall
int3
jns
loope
mov
add
sbb
pop
inc
popf
repnz
cmc
fsubr
icebp
xor
mov
or
cmp
hlt
js
loop
icebp
sbb
bound
test
loope
scas
arpl
jmp
addr16
mull
loope
imul
inc
loop
or
push
cmp
mov
mov
pop
mov
jge
jne
jo
sub
ror
push
cmp
mov
gs
push
pop
ss
stos
or
loop
iret
fstl
lods
mov
sub
int3
push
loope
mov
jbe
loopne
nop
lods
pop
add
dec
mov
pop
fwait
jge
mov
adcb
xorl
and
mov
or
decl
xor
xchg
icebp
sub
loop
cmp
add
add
pop
add
push
or
jno
mov
mov
pop
mov
add
push
stos
insl
mov
cld
pop
rcrb
add
iret
mov
cmp
addl
push
xchg
cli
int3
mov
sahf
out
jecxz
mov
clc
pop
add
inc
lods
roll
clc
cmpsl
jnp
sti
rcrl
push
leave
jae
dec
or
test
mov
inc
stc
cmp
add
jle
aad
push
mov
outsb
sub
int
testl
leave
insl
and
imul
and
jp
mov
enter
mov
aaa
dec
fcomps
push
jle
stc
rorl
dec
cmp
pop
loope
shlb
sbb
pop
or
and
test
inc
sbb
add
jmp
leave
jnp
push
inc
mov
dec
xchg
into
jae
in
test
icebp
mov
push
push
add
fisubrl
cmp
and
adc
cmp
push
movsl
xor
sbb
fsubp
lcall
jno
mov
push
sarb
lods
call
mov
push
sahf
lret
sbb
enter
or
and
jle
and
mov
movsb
std
and
or
loope
ret
jbe
inc
push
loope
sub
out
imul
bound
jno
mov
mov
scas
inc
mov
mov
popf
sbb
or
jnp
ror
cwtl
mov
insl
cmp
sbb
mov
or
cmp
adc
cmp
mov
cmp
and
dec
jb
sub
clc
or
sti
sub
data16
add
popf
movsl
out
andb
mov
push
aaa
shlb
jg
dec
aam
sbb
cmp
cld
xor
pop
cmp
xor
sbb
inc
and
cmp
cld
adc
cmp
add
jge
repz
sub
inc
andl
jnp
xchg
mov
rol
popa
lret
pusha
cltd
es
js
push
cwtl
sbb
mov
inc
xlat
cmp
or
and
jg
xchg
adc
cli
dec
cmpsl
push
fisubrs
imul
or
mov
xlat
and
dec
test
arpl
xor
out
fnstsw
inc
lret
fnstsw
push
push
jo
push
mov
cmc
or
mov
and
sbb
mov
inc
ljmp
jp
lods
loopne
fcom
cmp
call
lds
outsb
mov
xor
mov
lret
leave
rclb
sub
push
gs
das
out
aaa
ljmp
push
je
sti
cmp
add
inc
cmpsb
mov
dec
mov
or
mov
jl
aad
mov
inc
add
mov
push
xor
movl
int3
or
and
iret
mov
or
pop
xchg
call
rcr
das
push
stos
call
sub
aas
es
jb
aad
stc
gs
jle
jae
cmp
inc
imul
icebp
sti
mov
in
jno
xor
adc
scas
push
jge
mov
ficompl
push
pop
fcompp
cltd
cld
mov
dec
mov
incb
mov
pop
mov
jmp
inc
repz
stos
clc
jns
fwait
je
subb
repz
fisubrs
push
push
insl
sahf
mov
push
ret
mov
lods
add
adc
out
notl
icebp
mov
adc
stc
movsb
mov
push
mov
mov
clc
clc
mov
lret
sub
pop
cmp
mov
icebp
ds
stos
cmp
push
jl
add
push
mov
dec
xchg
jl
add
sub
mov
inc
sti
sbb
fucomp
push
leave
fsubrs
fxch
jno
into
sbb
call
adc
inc
cmp
std
push
mov
mov
pop
jb
hlt
sub
mov
repz
mov
out
test
ret
aas
inc
jo
scas
xchg
mov
push
cmp
jno
mov
mov
movsb
or
inc
cld
and
test
sbb
jb
push
sub
popa
or
repnz
xlat
enter
push
leave
sbb
std
pop
test
int3
jnp
jnp
cmp
aad
xor
push
add
out
cltd
mov
in
mov
sar
imul
push
mov
jmp
jp
pop
popf
push
movsb
or
push
cltd
cmpl
sarb
jmp
rcll
movsb
mov
dec
xchg
and
adc
sbbb
jo
ja
add
sbb
sarb
mov
push
incb
cli
jno
mov
xchg
ljmp
popf
out
adc
adc
fstp
mov
jae
push
and
hlt
and
sbb
adc
loopne
mov
jle
pop
enter
fistps
shl
movsb
add
adc
pop
das
ret
popa
insl
repz
mov
push
faddl
clc
pop
ucomiss
dec
pop
cmp
dec
mov
jmp
les
pop
test
jecxz
xor
xor
lods
call
iret
push
mov
lds
mov
in
andb
xor
cmp
jns
sub
cmp
in
stc
jbe
jl
movl
jb
adcb
inc
jmp
orb
add
push
sub
repnz
or
mov
imul
mov
sti
ffree
jge
das
repnz
inc
or
jnp
push
pop
jge
data16
lock
cmp
jge
gs
loope
lods
or
sub
jg
lods
add
ret
fidivrs
aas
je
lea
dec
pop
testl
ficoml
pop
ljmp
push
lods
imul
repnz
pop
jae
mov
jne
xchg
pop
fldenv
cmp
ret
fistl
sub
movsb
std
cmp
cmp
es
push
sub
lcall
cli
mov
ret
pushf
fcomp
pop
pop
add
adc
loopne
adc
cwtl
ja
mov
shll
and
je
mov
mov
jo
cmp
repz
outsl
dec
insb
add
mov
in
mov
fstl
jnp
insl
out
arpl
jne
xchg
fidivl
push
jecxz
fiadds
and
push
add
jns
aas
sbb
clc
mov
mulb
inc
sbb
hlt
popa
cmc
and
cmp
pop
lods
or
pop
divb
ret
adc
out
push
out
cmc
xor
lret
popf
repnz
stos
mov
adc
inc
outsl
push
mov
jns
mov
into
sti
mov
sbb
sbb
mov
push
mov
pushf
movsl
jp
push
clc
push
push
push
mov
aad
iret
rolb
scas
push
fidivrs
dec
or
stc
int
pop
jecxz
fwait
adc
sahf
leave
dec
sbb
sub
packuswb
in
pushf
xor
sti
add
iret
add
sbb
jg
repnz
in
mov
mov
adc
jnp
xor
cmp
sub
outsb
shlb
ljmp
and
mov
xchg
enter
add
pushf
xorl
bound
loop
push
mov
add
pop
xchg
fidivl
cmp
cs
out
mov
leave
jl
push
mov
xor
test
daa
xor
movsl
iret
cmp
stc
aas
push
jne
mov
mov
enter
adc
call
in
stos
push
lock
or
cmpsl
xchg
and
rcr
clc
pop
push
hlt
sub
add
mov
loopne
sbb
je
jae
jnp
lds
xor
movsl
add
and
push
test
lret
pop
push
sbb
repnz
inc
add
ss
loopne
push
cwtl
ja
xlat
inc
movsl
pop
cltd
dec
fisttps
mov
mov
loopne
cmp
push
mov
push
push
outsl
sub
rolb
movsl
jo
add
push
popf
aam
or
mov
test
sub
mov
jle
cmp
js
enter
push
lahf
mov
and
in
pop
jo
outsb
das
adc
jne
inc
jp
cmp
mov
pop
inc
jl
mov
test
aam
lahf
mov
cmp
jns
cmpsb
push
hlt
pop
clc
js
jno
into
jl
into
jmp
iret
enter
mov
jg
mov
inc
fistpl
ja
add
push
xchg
aad
lock
add
leave
sub
push
xchg
jp
mov
jle
lods
adc
movsl
jp
jmp
push
or
xlat
and
nop
dec
or
in
fs
cmc
aad
xor
shll
push
push
or
sub
xchg
mov
and
dec
std
xchg
loopne
jp
rcrb
int3
and
xor
add
add
pop
lea
dec
out
fucom
mov
ret
test
adc
fwait
xor
imul
xor
repz
and
jle
jmp
xchg
mov
or
or
xlat
cmc
cmp
mov
shrl
fsubrs
push
sahf
aad
fstpt
popa
cwtl
cs
les
insb
test
or
cmp
rcr
pop
jle
movsl
insb
jmp
xchg
jp
pop
push
jns
subb
add
sbb
out
shlb
int3
enter
dec
das
sub
cmp
lahf
aad
repz
xchg
mov
insl
inc
pop
xor
in
fisttps
sbbl
testb
adc
mov
ja
pop
jmp
sub
repnz
and
and
inc
pop
jl
pop
and
inc
sti
sub
adc
int3
shl
sti
in
test
and
jl,pt
jno
cmpsl
mov
lahf
pop
sahf
lds
scas
cmpsb
push
fsts
or
adc
inc
out
jnp
roll
push
adc
mov
fildll
cmc
mov
test
pushf
sbb
inc
mov
jmp
sbb
sub
addr16
sub
xor
xchg
ss
icebp
or
cmp
das
pushf
sub
scas
sbb
lods
jl
das
lds
dec
pop
dec
xchg
xchg
xor
mov
jbe
jmp
mov
dec
jge
repnz
jl
push
xor
xor
jmp
sbb
xor
loop
ja
in
iret
in
adc
int3
fnstcw
fwait
jmp
rolb
mov
pop
testl
leave
push
xor
and
push
sub
aam
hlt
inc
iret
sbb
mov
xchg
sbb
sarl
js
movsl
in
mov
add
and
cs
sub
mov
aam
call
adc
xchg
xor
fs
insb
das
aas
repz
push
push
in
jns
push
aad
cmp
add
das
jae
cmpsb
lahf
add
or
mov
jne
je
ret
addb
and
enter
lahf
insl
or
inc
out
mov
sahf
mul
rolb
push
rol
mov
or
add
push
cmp
fdivrl
jbe
and
pop
test
fcmovb
inc
mov
pop
pop
lock
pop
add
cmc
jns
add
pop
stc
mov
mov
sbb
shll
xor
and
fcmovu
rorl
mov
mov
aas
sti
push
sbb
or
mov
ja
jnp
jp
mov
xchg
ds
jl
add
inc
mull
xlat
and
sub
in
arpl
jno
shll
andb
add
fnstsw
mov
outsb
xlat
cmp
sahf
add
add
ja
jae
repnz
ja
sub
or
dec
mov
ficompl
std
jae
sub
ljmp
push
push
in
subl
lea
pop
popf
test
dec
mov
cs
in
ds
sbb
fcoml
leave
jle
and
adc
jnp
je
or
rcrb
imul
xorl
dec
mov
rcll
and
sub
popa
loop
rolb
fisttpl
jae
ja
push
leave
filds
or
cmp
iret
loopne,pn
testb
test
adc
inc
pop
shlb
in
cmc
xlat
add
xlat
mov
add
test
popa
jae
subb
xchg
xor
sahf
mov
enter
aad
pushf
into
cltd
lret
cli
jp
xor
movsb
jle
stc
fldl
mov
sti
ja
mov
test
mov
or
mov
push
movb
push
insb
xchg
cmp
and
or
fldenv
cmc
inc
data16
pop
cmp
xchg
sbb
enter
and
fiadds
int
jns
jae
pop
add
adc
cwtl
aad
xorl
arpl
dec
and
or
mov
fisttpl
in
cmp
outsb
xor
push
or
and
test
clc
fst
scas
or
fists
std
pop
in
adcl
push
test
cmp
or
xor
ljmp
xlat
ja
push
inc
daa
xchg
push
sbb
or
insl
and
sub
cmp
sbbl
stos
dec
mov
fs
out
clc
push
arpl
mov
adc
or
xchg
je
stc
js
sbb
and
xchg
sub
lock
and
test
jl
je
jb
cld
jl
mov
dec
fs
sbb
lret
mov
dec
cli
jp
sbb
popa
addr16
mov
push
lret
insl
testb
xchg
xchg
fcmovnu
shrb
xchg
lahf
cmp
cmp
call
cli
mov
mov
cmp
adc
hlt
syscall
adc
inc
xor
mov
sub
jmp
faddl
movsb
outsl
dec
push
xor
inc
and
inc
xchg
push
cmpsb
push
movsl
xchg
or
shrl
std
inc
mov
fwait
sti
lea
rcrl
inc
pop
call
jo
pushf
out
mov
ret
mov
std
mov
adc
jnp
push
jl
pop
repnz
pop
inc
xchg
insb
and
lock
or
std
lods
inc
xor
jbe
daa
repz
je
cli
dec
imul
out
lds
loopne
mov
ret
es
out
xor
add
mov
cmp
push
mov
or
xchg
jae
sarl
dec
push
es
movsl
in
inc
stc
fldl
push
aad
bound
repz
insb
loope
mov
enter
test
les
inc
push
nop
rcr
icebp
pop
int3
nop
gs
push
test
jmp
pop
xchg
jb
push
ret
mov
fidivrl
push
fnsave
cmp
sti
les
lret
mov
jge
sbb
adc
out
push
ljmp
inc
mov
icebp
shll
ret
addr16
sahf
add
fnstenv
and
mov
mov
fwait
jne
enter
mov
ret
push
in
stc
xor
adc
xchg
mov
rolb
dec
sub
movsl
jnp
aam
jle
sarb
scas
scas
dec
jo
mov
cs
inc
leave
aam
mov
add
fmul
ds
dec
pop
and
push
addr16
sarl
outsl
lock
dec
xchg
out
jle
push
lcall
fwait
cmp
adc
or
stos
mov
lcall
push
push
xor
pop
in
adcl
cmpsl
ljmp
loopne
jmp
sub
cwtl
int3
dec
xor
fnstsw
or
les
mov
push
dec
mov
mov
and
in
cli
aas
mov
and
mov
adc
dec
or
fisttpl
mov
xchg
lods
outsb
dec
and
jmp
jecxz
and
jle
or
es
repnz
add
push
enter
cmp
push
nopl
nop
aaa
adc
cmp
jp
cld
push
jmp
pop
jp
inc
decl
mov
and
mov
sbb
cld
mov
ret
imul
negb
bound
cmp
bnd
add
int
sbb
shl
ss
mov
adc
repnz
add
jbe
imul
or
mov
add
jbe
add
pushf
nop
push
shll
mov
shl
scas
das
stc
jno
xchg
mov
push
mov
fwait
push
mov
cmp
xor
dec
dec
mov
mov
std
push
into
mov
js
jg
cmpsb
sti
cwtl
lcall
aad
jo
pop
push
add
adcb
mov
es
inc
adc
bnd
repnz
fdiv
add
mov
xchg
fadd
push
enterw
or
fistpl
andb
fcoms
fdivr
adc
and
xchg
fwait
mov
or
fucomp
or
cmpsl
xlat
mov
jl
fdivr
inc
and
and
out
add
movsb
lock
out
clc
jne
cli
jne
inc
sub
movsl
dec
ja
decb
fldenv
pushf
sarb
scas
rol
jl
dec
jle
pop
push
imul
cmovge
das
add
iret
add
mov
insl
xchg
rorl
jl
push
int
loopne
mov
sub
js
int
sbb
lahf
inc
xchg
jge
push
movsl
rol
std
incb
jg
xor
xor
sbb
mov
fs
pop
aad
jnp
cltd
sub
push
vmulpd
insb
hlt
inc
loope
shr
stc
jmp
in
cs
xor
mov
inc
dec
fsubrp
pop
scas
pop
and
lds
fisttpl
mov
dec
lcall
sbb
push
fs
add
scas
push
iret
shlb
es
push
add
in
cld
xor
add
lds
push
out
js
jno
shrl
ret
aas
pop
sahf
cmp
jb
pop
int3
js
imul
cmpsl
jecxz
cmp
mov
arpl
or
repz
mov
loopne
jae
inc
shll
sbbb
pop
test
add
xchg
xchg
js
mov
rol
sahf
lds
push
mov
movsl
mov
testl
aas
js
scas
jbe
push
out
add
mov
xchg
sub
sub
icebp
out
into
cmc
mov
out
sbb
andb
push
jbe
add
movsl
fstpt
cli
mov
inc
into
stos
cmp
push
inc
mov
push
pop
sub
pop
pop
jae
out
cltd
aad
add
jnp
in
out
push
aad
cmp
dec
js
fisttps
mov
or
ja
mov
imull
aaa
add
xchg
aam
add
dec
push
or
inc
jmp
mov
pushl
xor
pop
cs
jbe
test
lds
push
push
add
xlat
adc
push
sbb
adc
xor
mov
fisttpll
sbb
out
sub
scas
mov
jl
ds
jmp
inc
and
in
pop
sub
and
mov
shr
cmp
aaa
push
fs
cmp
ret
jno
push
xlat
push
xchg
lcall
sub
stos
js
ret
cs
add
and
pop
push
push
bound
sub
notl
sbb
repz
mov
push
imul
dec
pop
add
xor
cmp
fistpll
adc
jns
pusha
mov
fsub
inc
push
sbb
idiv
mov
lret
mov
jb
or
lods
xor
cmpsl
call
mov
mov
push
or
sbb
cmc
mov
sbb
xlat
jl
jne
fs
add
cmp
shl
add
adc
add
pop
cmp
call
mov
inc
add
lods
cmp
mov
ljmp
pop
mov
jge
jecxz
and
jno
mov
and
test
mov
hlt
es
sub
mov
or
jb
push
int
dec
push
jno
call
sbb
out
cmp
jb
jo
loopne
xor
pop
and
aaa
push
mov
in
scas
or
mov
push
dec
imul
sahf
int3
cli
fistps
mov
int
stos
movsl
enter
push
test
jl
push
faddp
je
cmc
arpl
movsl
jns
je
xchg
lock
je
cmp
sub
ja
xor
sbb
sbb
mov
stos
inc
fs
out
or
sbb
lcall
mov
push
xor
dec
test
js
subl
ds
mov
dec
data16
scas
mov
pop
cmpsl
aad
push
dec
push
jecxz
xchg
lods
adc
adc
rorb
xchg
bound
cmp
jecxz
cmp
jecxz
leave
push
pop
cltd
scas
ret
sbb
cmp
aam
cmp
cmp
add
mov
cmp
mov
ljmp
test
cs
mov
in
aas
xchg
push
xorl
mov
imul
fwait
popa
or
enter
sub
add
mov
adc
jae
inc
mov
add
dec
aad
sarb
ret
insb
xor
push
xor
or
inc
aad
roll
jg
enter
outsl
pop
idiv
cs
pusha
stc
inc
das
aaa
fsts
divb
inc
pop
in
loopne
mov
adc
dec
ret
imul
mov
jp
xchg
filds
nop
loopne
fimull
sbb
or
cmp
ljmp
jne
mov
std
clc
out
out
adc
fs
sub
and
or
sahf
dec
repz
mov
mov
or
pop
jno
mov
mov
add
jne
mov
outsl
in
cs
xchg
rcrl
fucom
negb
push
mov
dec
ds
jae
jne
out
inc
cmp
adc
nop
mov
in
or
push
inc
dec
push
outsl
xor
inc
fildl
mov
mov
dec
sti
sbb
dec
movsb
fstpt
jbe
repz
mov
and
cmp
xchg
je
cmp
adc
nop
iret
push
push
jo
pop
pop
cmp
push
inc
sbb
adc
stos
lock
lret
sub
icebp
stos
mov
sub
stos
repnz
dec
mov
lcall
mov
cmp
jle
aam
mov
in
push
inc
cli
inc
ds
push
dec
xchg
fisttpll
jle
add
push
push
cmp
aaa
hlt
and
push
iret
mov
adc
iret
pop
movsb
movsl
add
test
in
loop
mov
mov
out
add
add
pop
mov
gs
aam
out
xchg
push
and
negb
mov
add
sti
jle
mov
dec
xor
fsubrs
push
stos
mov
daa
aas
aam
movsbl
sti
mov
fldenv
shlb
or
sarl
mov
mov
mov
icebp
loop
outsb
mov
in
gs
lods
aas
loopne
mov
or
clc
mov
in
add
stos
shll
bound
sbb
ret
adcl
xchg
mov
cmp
mov
jle
or
movsl
xor
inc
sbb
pushl
imul
pop
jmp
jb
js
pop
or
or
jle
ret
and
sbb
rorb
xor
idivl
or
ja
lcall
inc
pop
add
test
add
lret
dec
pop
mov
rcrb
addr16
cli
aaa
jns
out
dec
xor
ret
jl
clc
cmc
rcrb
mov
or
add
mov
jno
repz
cld
pop
jl
adc
retw
stos
insl
inc
lock
jae
outsl
fidivrl
lods
ljmp
shrb
mov
adc
inc
cmpl
mov
popa
pusha
divb
ret
ficompl
popa
add
fsubp
xlat
mov
and
add
inc
ss
lret
cld
loope
sbb
rorl
cmpsb
leave
mov
shll
dec
xor
dec
aad
arpl
repz
jb
ret
mov
pop
jle
mov
sbb
dec
bound
scas
rclb
cmp
loope
dec
pusha
and
mov
inc
fmuls
decl
push
jp
dec
jp
cmp
sub
jle
int3
fcmovu
test
pop
imul
aas
stos
mov
inc
mov
ljmp
sub
divps
in
mov
cmp
in
shl
test
dec
inc
les
out
mov
pop
and
mov
pop
out
dec
sbb
inc
dec
xor
pop
adc
dec
fwait
sbb
xor
stc
jmp
cwtl
sbb
cmp
rol
cwtl
fcmovnb
push
mov
repnz
movsl
xor
xchg
je
mov
shll
ffreep
loope
cmc
cmp
sbb
loop
xchg
mov
sub
cmp
adc
mov
lea
addr16
jle
test
push
mov
and
test
xchg
adc
daa
insb
jmp
pusha
pushf
inc
mov
jae
push
push
orb
loope
pop
and
push
pushf
jno
adc
lock
in
xchg
fcoms
lods
iret
jo
or
adc
xchg
iret
pushf
mov
shrl
xchg
jl
lret
mov
jno
xchg
xchg
cli
ljmp
jae
int
push
xor
pop
xor
test
dec
cs
mov
jle
mov
inc
scas
xor
push
jge
daa
push
lret
mov
add
repz
sub
ljmp
adc
insb
pop
mov
mov
mov
mov
xor
xor
decl
push
adc
aas
in
scas
in
test
pop
std
stc
inc
dec
stos
inc
xchg
clc
pop
dec
aad
dec
adc
sbb
jmp
pop
add
and
adc
test
xor
add
push
push
xor
je
mov
and
sarl
xor
jo
jmp
inc
ljmp
and
jmp
nop
js
movsb
xchg
cmc
adc
inc
sbb
bound
imul
fdivrp
or
inc
addr16
movsb
mov
and
fstpt
int3
das
and
js
loop
cmp
js
sbb
stos
xor
out
jp
add
jae
stc
mov
inc
loope
out
pop
cld
ret
negl
or
fisubs
hlt
mov
rolb
push
xchg
lds
dec
or
pop
jne
jbe
dec
jecxz
pusha
jb
jno
dec
pop
rcll
push
ja
inc
mov
into
push
filds
fdivrs
in
movsb
iret
sbb
enter
sbb
fcmovnbe
mov
daa
shrl
ret
lret
dec
inc
mov
sbb
adc
sub
add
xor
les
mov
push
or
mov
or
dec
inc
add
mov
xchg
cmp
pusha
repz
pop
lcall
adc
shl
adc
repz
js
and
inc
jb
mov
ljmp
xor
xchg
test
dec
in
pop
inc
push
imul
ss
sub
ret
mov
iret
hlt
into
lahf
push
push
daa
jmp
pop
jl
push
and
xor
xchg
rolb
push
test
lock
ret
mov
or
clc
lahf
pop
mov
pop
movsl
xchg
cmp
stos
inc
call
repz
test
xor
mov
cmova
outsl
and
jecxz
test
push
and
sub
in
addr16
addr16
rcl
popa
daa
divl
mov
sub
sti
aam
mov
sub
sbb
adc
add
ss
sbb
or
addl
and
addb
das
adc
cwtl
xchg
aam
mov
sbb
test
faddl
mov
mov
cmp
adc
stos
cmp
xchg
pop
stc
dec
cmp
lahf
lds
adc
mov
shll
out
mov
mov
push
inc
test
pop
test
mov
test
mov
das
or
ret
sbb
lret
scas
cmp
xor
jmp
cld
or
sbb
in
inc
int
cmc
ret
mov
test
loopne
js
repz
add
or
add
sbb
xchg
loop
std
sbb
mov
mov
imul
jno
adc
dec
fcomp
sub
pop
cs
xchg
out
cwtl
sub
in
fsub
outsb
jbe
xor
cmp
xchg
or
mov
movsl
xor
cmp
adc
hlt
mov
leave
mov
pop
pop
xchg
xor
inc
ljmp
ss
jo
das
jle
mov
in
test
bnd
xlat
ss
shlb
arpl
stos
inc
int3
xchg
test
xor
adc
push
mov
jmp
out
arpl
push
mov
nop
sub
adc
daa
push
es
mov
rorb
adc
imul
mov
push
adcb
cmp
jb
aad
fidivrs
ss
jne
ffree
cmp
xor
into
rol
sub
repz
nop
out
test
mov
and
add
addr16
int
lea
enter
add
adc
inc
fisubs
xchg
fxch
nop
pop
add
and
pushf
das
xlat
or
sti
lds
mov
xchg
mov
repz
cmpl
cltd
std
neg
adc
mov
enter
out
mov
addr16
pushf
imul
jmp
mov
roll
or
ljmp
jnp
leave
movsb
push
lret
iret
in
cmpsl
cmpsl
push
jle
shrb
jle
push
ds
pusha
out
movl
push
jmp
cmp
mov
iret
push
insl
jnp
xchg
sti
test
adc
ret
push
xchg
or
mov
cmp
cmp
and
xlat
inc
jl
and
dec
repz
fstl
stos
sub
jmp
iret
sar
lret
add
xchg
lock
in
or
out
xlat
lods
jge
enter
cmpsb
pop
adc
mov
push
movsl
inc
sti
test
jnp
scas
pop
in
mov
aad
lds
daa
or
sub
xchg
sub
adc
test
add
mov
push
fidivs
mov
mov
dec
je
mov
and
arpl
and
or
pop
fcmovnu
rol
scas
ret
clc
loope
xor
in
and
mov
rcr
and
lock
pop
mov
pusha
cli
pop
test
pop
adc
test
jl
or
js
ret
xor
aas
stos
mov
cmc
and
popl
cmp
cmpsb
push
sbb
sahf
xchg
clc
xchg
bound
out
mov
in
xchg
nop
push
enter
push
dec
ret
jno
sbb
inc
js
jne
jb
mov
push
mov
or
xor
vxorps
fwait
jge
xor
pop
int3
in
add
sub
jmp
push
les
repnz
xchg
les
mov
mov
adc
mov
jp
data16
std
pusha
ret
xor
mov
mov
addr16
out
pop
sti
clc
bound
or
and
es
out
push
pusha
jmp
stos
xchg
xchg
mov
fildll
and
adc
out
roll
adc
mov
mov
jl
mov
ds
aaa
mov
jge
adc
pop
pusha
and
nop
xchg
pop
aas
xor
xchg
fdivrl
sub
std
ret
loopne
shlb
icebp
xchg
leave
fsubl
inc
rcrb
movsb
sti
mov
sub
push
xchg
rolb
jo
mov
aam
shlb
aas
sub
sub
xor
in
repnz
scas
lret
or
scas
sub
mov
jmp
clc
jge
or
jp
mov
leave
xchg
mov
sbb
jne
leave
clc
add
sbb
inc
test
xchg
inc
push
aaa
pushf
bound
data16
stos
lret
mov
pop
mov
fcmovnbe
pop
mov
je
adc
sti
mov
xchg
sbb
jl
mov
ret
imul
and
stos
lcall
clc
jecxz
insb
pop
ret
dec
sti
les
lret
lret
call
hlt
ret
pop
aad
js
push
or
jbe
and
dec
js
mov
lcall
hlt
cmpsb
or
inc
mov
in
cmp
clc
int3
or
xorb
pop
mov
sub
aas
js
jae
sbb
outsb
cli
mov
lret
out
dec
push
lea
push
add
and
dec
pop
lds
mov
aam
or
dec
push
cmp
adc
orb
push
faddl
xchg
mov
es
mov
jp
shlb
outsl
je
mov
jnp
popf
jp
fcompl
cmpsl
push
cmc
add
or
fldl
sbb
adc
mov
shll
out
push
jp
and
in
ja
hlt
aas
enter
xchg
popa
loopne
les
stc
ret
stos
xchg
push
incb
dec
mov
mov
ret
iret
cmp
clc
adc
stc
jnp
jne
mov
je
cld
xchg
shrb
xchg
dec
pop
mov
cmp
sub
sub
inc
stos
push
jno
xlat
fstl
adc
pop
jno
hlt
dec
inc
xor
xchg
stos
pop
and
inc
xchg
push
in
push
das
ljmp
inc
xchg
jnp
mov
clc
inc
add
sub
ja
ss
js
movsl
dec
jecxz
jo
lods
arpl
sbb
sub
imul
mov
lock
jae
and
sbb
add
ljmp
xchg
pop
mov
push
adc
xchg
mov
jno
xchg
bnd
mov
cmpsb
dec
lahf
sti
xchg
cmc
repz
lock
or
psllw
rcl
inc
cmp
shrl
cmc
cmpsl
push
mov
or
aad
sub
rorl
in
xchg
leave
shlb
push
pop
scas
jbe
mov
or
sbb
test
push
adc
in
pop
cli
fildl
mov
ret
and
arpl
popa
jge
out
sarl
add
push
in
sub
push
jns
adc
fiadds
inc
xchg
ret
in
sbb
js
pop
std
xor
cltd
imul
out
js
adc
icebp
nop
divl
imul
sub
addr16
popf
push
jp
cld
push
lods
dec
aad
faddl
mov
addb
scas
and
cwtl
add
imull
stos
dec
mov
push
and
and
js
out
sub
jb
cld
ljmp
cmp
nop
jge
out
bound
icebp
jmp
jle
lahf
cmc
sub
jg
test
adc
icebp
dec
in
ret
lret
push
int3
mov
push
ja
loope
je
sub
clc
sti
jle
mov
inc
jmp
aad
push
in
adc
mov
or
add
in
dec
sbb
mov
or
cmpl
push
repnz
jnp
cmp
fdiv
sti
daa
push
clc
jmp
mov
mov
push
stc
mov
pusha
push
dec
jb
or
jne
jecxz
pop
mov
ss
inc
pop
push
pop
pushf
jo
inc
adc
or
pop
and
jmp
mov
mov
out
xchg
enter
mov
jns
jle
jne
repz
inc
cmc
std
je
dec
or
inc
adc
hlt
sub
jp
jg
rcrb
add
js
jmp
idiv
dec
ja
jno
mov
jp
or
aam
test
pop
dec
fldt
xchg
push
nop
das
pop
enter
popa
xchg
gs
jecxz
xor
jae
xor
ljmp
or
cmp
daa
rol
xor
cmp
scas
mov
cmc
rcrb
or
jmp
or
pop
push
cld
add
mov
stc
mov
jl
xchg
jne
aam
jnp
push
in
jle
lock
inc
mov
add
push
sbb
pop
mov
add
add
mov
mov
fidivrs
mov
sbb
stc
shll
cld
pusha
inc
or
push
fwait
lea
out
lahf
or
ret
lret
pop
es
fcoms
cli
cld
ret
popa
or
std
mov
insl
fs
push
hlt
mov
jl
jge
ds
shr
rorb
cmp
sbb
in
gs
add
push
scas
lods
cmpl
int3
dec
notb
fsubl
mov
into
or
les
out
push
imul
jge
std
fildl
out
xor
and
push
loop
mov
mov
sti
loope
arpl
push
add
mov
mov
aad
fstl
pop
pop
inc
xor
rclb
ret
shll
mov
xlat
lret
sub
xor
loop
lret
addr16
mov
xchg
leave
jne
iret
push
jo
pop
mov
and
std
mov
outsl
and
shlb
mov
fistpll
jo
inc
sub
out
jbe
mov
dec
jo
call
and
cmpsl
jae
jmp
add
sbb
fisttpll
shlb
int3
adcl
adc
mov
mulb
ret
pop
cli
ret
mov
jns
imul
mov
into
dec
int3
inc
fnsave
dec
ds
pop
jns
shll
lcall
cltd
xchg
adc
lods
dec
loop
push
adc
lds
outsl
je
xorl
mov
scas
lret
pusha
pop
mov
stc
cmp
and
sub
imul
jbe
push
ss
lock
dec
lods
inc
pushf
xchg
push
and
mov
sbb
cwtl
cmpsb
aas
push
xor
jle
cmp
loope
cwtl
and
js
pop
cmp
xchg
movsb
scas
iret
push
repz
imul
popa
push
fxch
jp
dec
stc
loope
mov
shr
popa
push
les
pop
mov
testl
sub
shl
xlat
inc
repz
rorb
dec
pushf
pop
shl
mov
mov
hlt
lods
jae
bnd
shlb
sub
xchg
testl
movsb
jns
add
andl
inc
cmp
inc
dec
lahf
add
dec
lret
mov
ss
inc
mov
fmull
mov
clc
aas
loop
mov
pop
push
mov
push
aam
filds
sbb
aam
adc
lret
pop
mov
add
fcmovnb
aam
lock
xchg
data16
fsub
ja
in
ljmp
mov
aas
cli
pop
fistpl
push
push
mov
and
dec
mov
mov
mov
push
incl
jbe
and
pop
cli
in
inc
cltd
sti
jl
push
mov
and
mov
pop
stc
out
adcl
mov
xlat
aad
movsl
push
int3
mov
xor
jns
pop
mov
inc
sar
call
aam
loopne
test
mov
push
adc
js
popf
out
xchg
shll
lret
out
in
mov
inc
enter
pushl
jecxz
fwait
lods
pop
fnstenv
int
jae
cmp
push
stos
dec
push
fsubrl
mov
xor
push
push
test
mov
out
mov
out
bound
mov
add
adc
fnsave
mov
jl
sbb
in
add
dec
or
sbb
dec
leave
je
stos
in
jp
out
faddl
in
aad
mov
xchg
xchg
xor
ds
daa
and
ss
xchg
pop
pop
dec
xchg
jno
divb
jne
sbb
inc
aas
aaa
cmp
mov
inc
lret
push
in
hlt
mov
lret
mov
idivl
adc
jbe
dec
clc
aam
shrl
inc
pop
mov
pop
xchg
cmp
xchg
add
add
rcl
xor
std
ds
and
out
idivb
ficoml
adc
cmp
scas
out
rorb
mov
scas
aad
nopl
cli
mov
push
imul
sti
clc
adc
sar
inc
sub
in
mov
mov
mov
shll
inc
add
cld
or
ja
xchg
pop
mov
fwait
dec
mov
dec
orl
jle
andl
testl
out
loope
jo
mov
fadd
inc
mov
ret
shll
lock
mov
bound
dec
jmp
mul
ds
std
xchg
xor
cmpb
cld
mov
fildl
shll
fnsave
dec
mov
sahf
pusha
or
ja
cli
rcrb
mov
add
stc
fcoml
adc
stc
dec
jmp
fwait
mov
push
imul
adc
or
dec
stc
mov
cmc
mov
flds
or
icebp
sbb
and
jp
inc
test
addl
fcompl
mov
ja
out
push
insl
push
mov
inc
fadds
jne
test
cmp
xchg
scas
clc
cmp
and
mov
icebp
xchg
stos
in
and
add
push
push
dec
mov
push
imul
pushf
clc
adc
inc
jae
mov
int3
mov
sti
lds
pusha
cwtl
pop
fisttps
movsb
fsubl
out
fcmovu
call
ja
leave
inc
dec
inc
xor
ret
xchg
mov
dec
sbb
mov
in
das
or
int3
or
imul
add
idivl
xchg
sub
sarb
or
fmuls
push
movsl
pop
popa
test
pusha
cld
push
stos
movsl
hlt
mov
xchg
cmpsl
arpl
mov
clc
mov
clc
int3
xchg
call
sbb
into
testb
jno
aas
inc
pop
scas
dec
push
mov
aad
adc
test
sub
jecxz
test
mov
cmp
ljmp
sbb
test
lods
sbb
test
imul
mov
test
inc
lods
xchg
fcmove
orl
je
mov
mov
repnz
ret
ret
sti
pop
mov
movsb
sbb
pop
test
xchg
cmp
sarl
lock
push
cmpsb
mov
out
push
cmp
sub
scas
mov
dec
dec
pop
testb
std
adc
xchg
adc
fildl
pushf
push
out
not
xchg
je
mov
jne
inc
clc
mov
xchg
pop
lahf
mov
insb
mov
push
adc
inc
out
push
sbb
scas
leave
sub
out
pop
and
sbb
push
sbb
adc
jae
sbb
ffreep
jge
shr
sti
fisubrl
fwait
push
scas
mov
fyl2xp1
mov
sahf
fistpl
pop
aad
mov
fiaddl
jnp
das
jnp
and
jg
add
xchg
adc
jo
fiadds
fistpl
imul
pop
ja
add
pop
out
cmp
into
sbb
sbb
cmp
jb
pusha
sub
enter
pushf
rcr
mov
arpl
hlt
ja
or
push
fnstsw
and
sbb
inc
add
movb
add
into
gs
in
mov
lea
fcmovb
add
jle
test
sbb
clc
cmp
in
rolb
cmp
and
xor
push
ret
adc
jae
cmpsb
add
les
mov
jns
repz
and
or
out
clc
sbb
sti
mov
in
adc
lock
inc
cld
es
lea
xor
stos
dec
add
or
mov
je
cli
int
ret
cmc
fsubp
add
adc
inc
out
sbb
xchg
pusha
addl
fistl
cmp
fmuls
cli
int3
mov
aad
push
push
or
js
aam
rcll
fstpt
call
testb
clc
push
xchg
fstpt
sbb
scas
and
add
jge
sar
inc
cli
test
sub
loope
jge
fildl
stos
pop
pop
pop
add
fistl
shll
cwtl
cmc
add
fcom
imul
lods
scas
push
ljmp
inc
cwtl
mov
jne
test
jns
in
shrb
ss
xor
jle
inc
pusha
cmp
sarb
and
pop
pop
sahf
mov
aam
shlb
loop
sub
ja
jbe
adc
rcrl
stc
push
lcall
mov
jb
push
andb
mov
mov
hlt
or
cmp
mov
stc
push
ret
jp
out
mov
fnstsw
jp
jge
cmp
mov
lock
lret
inc
dec
fs
fdivr
pop
popa
mov
mov
aaa
push
out
loope
xchg
pop
push
stc
add
and
cmp
cmp
jmp
jns
scas
setnp
sti
cmp
aad
jmp
mov
pushf
cld
testb
je
and
shl
rorl
pop
mov
push
in
das
into
cmp
aam
or
inc
cs
es
clc
pusha
mov
test
inc
xchg
cltd
fwait
cmp
push
mov
and
cmc
ds
pop
lcall
mov
out
jmp
dec
fstl
call
mov
inc
pop
shrb
icebp
sub
test
mov
clc
sbb
fisubrs
or
test
aas
xchg
jle
sub
cmp
test
add
mov
push
shr
xchg
mov
lahf
xchg
push
les
hlt
pop
fisubrs
add
mov
pop
fimuls
jb
mov
and
imul
ss
daa
shr
mov
loope
cmp
cli
mov
repz
dec
xorb
inc
mov
popa
pushf
cmp
loopne
icebp
pop
imul
inc
add
push
scas
jmp
dec
fcoms
adc
in
jp
mov
sub
or
jns
aad
and
ja
int3
xor
out
js
mov
xchg
push
and
not
cmc
jae
and
add
push
loope
or
ffreep
sub
or
dec
and
jge
cmpsl
negl
pop
sub
dec
inc
je
cld
jae
fs
mov
xchg
pushf
or
iret
into
out
and
adc
mov
pop
loope
daa
pop
mov
mov
lret
fisubrs
mov
push
mov
outsb
adc
je
cmc
out
in
cmp
mov
dec
bound
stos
add
aas
jns
cltd
xchg
and
adc
jp
and
stc
inc
fsubs
mov
jne
xor
jno
aad
lcall
push
shl
ret
aad
icebp
testb
cmc
repnz
rcrb
aas
sbb
jge
repnz
inc
push
ret
push
jmp
jmp
arpl
cli
ficompl
add
cwtl
rorb
sti
rorl
incl
cmpb
sbb
test
jne
loope
mov
xchg
fistps
out
sub
aam
sbb
clc
lds
push
mov
enter
inc
dec
jnp
jno
fcomps
icebp
aas
repz
sbb
pop
cmp
sbb
mov
shlb
inc
xchg
mov
pop
and
pop
jmp
popa
mov
shr
addb
pop
push
repnz
mov
int3
out
popf
xchg
mov
xchg
rorl
ja
into
or
loope
lods
test
pop
pop
dec
scas
mov
ss
xrelease
jmp
int3
out
push
call
lahf
lock
dec
mov
or
mov
ret
push
xor
pop
and
call
jnp
in
lds
mov
mov
cmp
cmc
adc
iret
pop
jg
js
jl
jecxz
ljmp
adc
insb
add
pop
xchg
std
push
push
pop
pop
test
je
inc
mov
out
aas
and
xchg
imul
push
fistl
xchg
and
mov
enter
dec
inc
bound
adc
test
clc
mov
lds
jmp
push
pushf
mov
cld
rcll
or
sbb
or
mov
int
mov
dec
test
scas
test
sarl
shlb
mov
cltd
sahf
sar
std
notl
jl
inc
hlt
inc
test
pop
mov
mov
add
xor
push
adc
daa
jo
pop
ret
push
mov
fdivr
jbe
imull
sub
insl
je
jns
adc
pusha
jg
jmp
insl
test
dec
jecxz
cmp
pop
enter
aaa
sbb
mov
sbb
push
fidivrs
sarb
mov
aam
rcrl
mov
scas
adc
bnd
int3
rolb
mul
sar
mov
adc
cmp
scas
aam
rcll
iret
je
push
push
shrb
push
and
addr16
adc
lea
mov
pop
lock
jmp
push
lret
stos
xor
xor
ljmp
xchg
fisttpll
xor
out
shl
mov
mov
add
imul
enter
cmp
movsl
cld
aam
xor
loopne
out
bound
in
addr16
and
in
lret
loope
jbe
fnstsw
movsb
icebp
mov
fildl
mov
rcr
and
or
push
mov
mov
cmp
cltd
jb
aad
push
push
xor
pusha
jg
xchg
jle
out
mov
repz
jg
out
or
mov
fwait
adc
lods
xchg
dec
push
outsl
fisubs
pop
stc
pop
inc
in
enter
fbld
mov
ds
sub
sub
fistps
cmp
or
push
flds
and
cmp
xchg
or
outsl
mov
push
jae
sarl
push
lret
pop
jl
imul
inc
lret
xor
aas
sti
push
aad
ss
cld
xor
xchg
mov
fistpl
pop
and
mov
adc
dec
adc
xchg
cltd
pop
mov
mov
cs
jg
pop
hlt
push
push
xor
xchg
mov
stos
mov
xchg
push
pop
dec
adc
or
aad
test
test
inc
sbb
fistps
jmp
fstpt
fcoml
shlb
dec
xchg
aam
sbb
dec
mov
mov
and
mov
fwait
int
daa
int
fdivrl
aad
fidivrs
and
xchg
xchg
mov
imulb
inc
add
mov
lods
sbb
std
sub
sahf
ret
jp
ret
mov
ret
jnp
lods
fdivl
ja
insb
scas
sbb
jl
test
inc
in
jecxz
inc
out
inc
stos
and
clc
stos
adc
fcmovnb
cmpb
aam
shrl
and
int
rclb
ret
je
xchg
or
mov
xor
stos
out
or
fdiv
xchg
ret
cwtl
xor
aad
sbb
mov
xchg
lea
sbb
pop
cmp
std
push
addr16
mov
xor
mov
and
and
sbb
cmp
mov
push
push
loopne
rorb
movsl
insb
or
cmp
frstor
js
scas
ds
lret
push
add
xchg
add
arpl
mov
mov
repnz
adc
ret
lahf
cmp
and
fisttps
inc
fs
fs
addr16
clc
rorl
sbb
cvtps2pi
push
scas
enter
ret
fbstp
mov
lcall
pop
xlat
inc
cmp
sbb
outsb
inc
inc
aas
lds
or
leave
mov
push
pop
repnz
push
mov
inc
in
les
jns
push
xlat
ret
insl
pop
cmp
test
int
cmpl
scas
inc
xchg
mov
cld
jbe
sub
push
pop
lock
repz
mov
mov
shlb
cmpsl
in
adc
stos
cs
push
xor
inc
filds
mov
dec
cmpb
xchg
fistpll
int
ficompl
push
jle
out
inc
dec
and
mov
nop
push
pop
popf
inc
pusha
aaa
mov
cmc
into
inc
imul
jle
in
xlat
jge
rcrl
sahf
xchg
imul
xor
xchg
movsb
adc
fisttpl
xor
addr16
insb
pop
insb
jns
pop
add
outsl
sbb
idivl
jb
inc
mov
lods
daa
cmp
imul
ds
dec
andb
nop
test
gs
decb
sub
inc
cmp
pop
pop
mov
cli
fisubrs
jnp
and
jp
jmp
pop
outsl
pop
addl
es
shll
cwtl
dec
cmp
jns
cmpb
xchg
and
sahf
js
xor
xchg
out
rcl
cwtl
pushf
sub
sbb
or
xchg
fadd
sbb
daa
pop
repz
mov
es
gs
push
mov
addr16
jle,pt
loop
adc
cmp
xor
xchg
mov
cmp
gs
push
or
lds
adc
aam
insl
mov
fiaddl
jmp
sbb
outsl
hlt
mov
pop
and
and
aad
in
adc
xor
pop
inc
mov
jge
mov
inc
mov
cmpb
subb
lods
lds
mov
sbb
out
fnstenv
fidivrs
inc
xchg
repz
ja
imul
cmp
fbstp
popa
fdiv
mov
lods
mov
imul
iret
xchg
pushf
push
adcl
mov
cmp
sub
enter
add
clc
dec
jmp
push
shl
int
in
mov
and
mov
pop
scas
sub
add
daa
push
gs
mov
nop
je
popf
push
test
fcmovne
out
mov
adc
dec
outsl
sbb
fdivr
repz
xchg
push
pop
xchg
cmc
jg
shrl
movzbl
es
pushf
es
mul
push
cmp
fistl
mov
sub
fdivs
repnz
mov
adc
lods
std
mov
std
cs
cmp
add
andl
mov
int
mov
inc
mov
jo
push
stos
cmc
hlt
dec
mov
inc
adc
jecxz
sub
mov
je
push
jnp
mov
js
repnz
xor
ret
dec
or
test
sarb
jne
mov
lahf
fwait
pop
inc
mov
test
mov
or
ficompl
out
dec
rorl
pusha
iret
jne
outsb
ror
jge
faddl
hlt
inc
jb
ja
cmc
sti
ja
mov
push
mov
daa
lcall
sbb
xchg
jge
aam
pop
iret
lahf
mov
dec
out
fwait
cmc
out
shlb
pop
ljmp
jo
dec
shll
stc
sar
shrl
fcoml
in
rolb
pop
adcb
ret
add
dec
jb
adc
fldenv
mov
sub
movsl
jl
inc
sbb
inc
push
push
fs
xor
les
dec
push
mov
mov
mov
gs
push
aas
mov
pop
jne
jecxz
lret
mov
inc
add
inc
iret
and
mov
sub
push
enter
leave
ss
mov
sbb
adc
and
fidivs
testl
loopne
int
test
push
stos
mov
adc
in
stc
std
mov
cmp
iret
and
dec
es
pop
jge
add
cmpsl
stos
lods
push
or
cmp
jb
cmp
mov
inc
push
popa
push
popa
leave
repnz
cmc
lods
daa
dec
ja
sub
lret
cs
fstps
mov
lahf
push
idiv
sbb
fsubrl
push
xchg
leave
scas
adc
movsb
xchg
push
sub
inc
shll
ret
lret
fistpl
jno
inc
dec
movsl
cmc
cmp
jno
ss
pop
lahf
dec
mov
add
mov
dec
cld
mov
int
enter
shrl
cmp
fstps
loop
push
sub
sbb
or
jmp
dec
mov
pop
das
cwtl
ss
sub
stos
adc
int
into
and
and
push
pop
sub
sarb
shll
lds
push
mov
add
mov
inc
jg
xchg
inc
cwtl
and
jnp
movsb
and
fnstsw
jp
fldenv
mov
int3
hlt
pushf
insb
sbb
imul
lea
test
into
add
jne
push
mov
stc
mov
rolb
sti
push
jl
add
mov
inc
sarl
rorb
cmp
sti
cmp
push
icebp
call
xor
lods
adc
cltd
push
push
dec
test
mov
push
add
loope
stos
add
cmp
adc
in
lods
inc
cmp
cmc
loopne
xor
shrb
push
jae
js
cli
add
adc
push
fldcw
add
xchg
and
push
sub
stos
loope
js
pop
adc
xchg
call
mov
cwtl
fsts
jl
mov
adc
and
mov
mov
into
fidivl
fsts
push
arpl
not
popf
add
and
fimuls
jle
mov
jmp
loop
jl
movsl
daa
std
or
cmp
lods
cld
fucomi
mov
and
lds
movsb
mov
dec
sub
bnd
or
push
push
inc
push
outsl
adc
pop
nop
mov
test
std
add
mov
mov
mov
add
fstps
pop
cwtl
dec
sub
sbb
daa
jo
jb
negb
lods
cmc
movsl
dec
or
cmp
ror
fwait
popa
mov
add
cmpsb
mov
push
xchg
or
add
push
lock
cmp
cmp
mov
or
ljmp
lret
ret
mov
lock
or
mov
rclb
cwtl
mov
xchg
mov
cmp
call
test
fsts
scas
push
pusha
inc
xor
notb
hlt
inc
insl
add
ljmp
sub
inc
inc
or
cmp
sbb
into
aad
dec
in
hlt
sub
in
popa
insl
jge
loopne
mov
push
jo
mov
aam
push
pop
sub
pop
mov
add
sahf
xchg
cs
jno
leave
and
stos
dec
aam
mov
push
out
dec
icebp
rcll
fldenv
imull
fdivl
std
push
adc
imul
add
sub
xchg
or
xchg
inc
fxch
jecxz
iret
mov
in
jg
inc
fidivrl
cmp
cmpsb
push
fldenv
mov
cmpsl
mov
xor
cli
addr16
or
pop
pushf
out
adc
jmp
cmpsl
ret
icebp
jns
inc
jle
xchg
pushf
sub
popf
or
sahf
pop
mov
cs
sub
or
pop
divb
in
jbe
jbe
into
in
lcall
fldenv
shrl
pop
mov
jle
orl
nop
cli
xchg
jne
leave
jle
push
stc
jns
sbb
adc
rorb
dec
cwtl
fwait
push
aas
lret
jmp
sbb
mov
adc
and
mov
jo
rcrl
push
dec
ss
enter
ficoms
dec
mov
dec
fisubs
mov
xor
and
scas
subl
push
outsb
and
divl
wrmsr
lock
fisttps
ret
fs
push
icebp
daa
or
subl
jae
inc
daa
jno
inc
cmp
jne
lret
scas
out
jmp
pop
push
popa
pop
and
add
jb
nop
mov
xchg
cld
jmp
ds
fwait
sbb
xchg
dec
or
jno
jno
push
inc
mov
or
cmp
sahf
cmp
or
or
adc
lods
xchg
fnstsw
push
jne
cmpsl
adc
loopne
test
and
xor
outsb
cmp
mov
gs
lods
inc
fisttpl
and
cmc
xchg
adc
adc
dec
mov
into
or
pop
es
shll
xchg
ljmp
xchg
sbb
lea
push
xor
mov
in
int
inc
xchg
and
cld
sarb
push
insl
jns
pop
sar
push
repz
inc
add
and
lea
sub
sub
outsl
imul
bound
mov
addl
andl
push
xor
mov
xor
xor
loope
mov
inc
test
lods
fdivr
mov
mov
xchg
cmp
hlt
add
hlt
outsl
and
push
pop
add
scas
dec
xor
pop
test
mov
adc
or
adcl
mov
pop
mov
divb
cs
les
sub
jl
inc
addr16
sub
nop
bound
das
cld
pop
inc
icebp
adc
push
or
pushf
ret
call
and
gs
orl
out
ds
mov
dec
jns
js
inc
push
pop
jo
xor
sub
dec
cmc
xor
das
sbb
jge
lret
mov
stos
lds
mov
les
mov
push
jle
sbb
nop
cmp
fs
and
mov
ss
cli
movsl
xor
mov
cmc
xchg
xor
orb
int3
push
sub
mov
or
push
pop
or
pop
xlat
and
mov
sbb
int3
xlat
xchg
imul
dec
and
sbb
pop
inc
mov
push
mov
mov
testb
dec
xor
ljmp
inc
push
jns
sub
packuswb
insl
fisubrs
inc
movsl
pop
push
int3
ljmp
imul
subb
dec
add
popf
arpl
xchg
mov
lahf
orl
enter
nop
cmovae
test
loop
stc
pop
mov
sbb
xor
mov
push
dec
loope
das
xor
in
loope
dec
push
popf
mov
cmpsb
cwtl
pop
stos
pop
cmp
lds
test
jae
stos
inc
mov
mov
mov
ret
lods
add
inc
mov
adc
leave
test
push
sbb
inc
jp
icebp
and
es
inc
fsubs
push
inc
mov
sti
pop
mov
loopne
mov
lahf
add
outsb
imul
lods
fimuls
cmc
std
xlat
cmp
fwait
jle
push
in
jecxz
sbb
cmp
neg
jns
push
lods
aad
out
xchg
roll
testb
sbb
test
xor
in
inc
jmp
mov
sti
mov
jne
xchg
hlt
or
lods
fistps
sub
ret
cmpsl
add
scas
jmp
adc
mov
std
es
inc
mov
and
xchg
daa
cli
push
xor
aam
test
mov
daa
push
movsb
add
or
mov
into
jo
pop
and
mov
ljmp
arpl
push
and
xor
pop
mov
push
fcoms
jne
ret
mov
js
rcrl
call
faddl
ss
and
pop
movsb
gs
pop
outsl
dec
mov
fisubl
mov
pop
fcomip
adc
mov
push
jns
dec
lea
jo
mov
sti
push
xor
sbb
or
test
xchg
pop
push
mov
cmpsl
dec
cltd
pop
xchg
sub
jno
clc
mov
add
push
ljmp
mov
mov
cmpsl
or
add
leave
lret
out
loopne
bound
scas
push
movsl
dec
les
mov
lret
fcmove
loope
mov
fdivr
mov
lret
in
xchg
inc
mov
sub
mov
adc
gs
shll
hlt
add
icebp
xor
cli
cli
shll
shll
sbb
mov
popf
repnz
fidivrs
lret
cmp
pop
add
int3
fadds
xor
or
xor
cli
jl
push
add
cwtl
fdivrl
sub
subb
mov
sub
sahf
sbb
ret
inc
and
les
fimuls
andb
xchg
rclb
adcb
push
rclb
mov
ret
aaa
jb
sbb
lret
lds
aam
aad
sbb
les
sahf
sbb
aad
lds
inc
and
mov
inc
jp
hlt
mov
addr16
xchg
inc
sti
mov
std
add
inc
sarb
scas
scas
sar
iret
inc
inc
mov
nop
sub
ficoml
std
repz
icebp
mov
loopne
testb
lea
add
inc
xchg
clc
clc
pop
lds
imull
imull
lds
sahf
mov
inc
inc
je
sti
iret
or
fiaddl
cltd
xor
jge
or
lcall
pop
pop
mov
loopne
aam
ret
daa
loopne
testb
lea
add
stos
xor
or
add
and
push
fnsave
fcmovb
std
sbb
repz
push
mov
xchg
cmc
test
movsb
fmuls
divl
std
xchg
mov
pushf
std
nop
daa
fiaddl
std
mov
sub
inc
pop
adc
xchg
inc
inc
mov
and
adc
sub
pop
xchg
add
lods
cli
mov
imul
repnz
clc
cld
mov
fistpl
sbb
test
leave
roll
mov
adc
addr16
leave
xchg
shll
mov
xchg
cmp
ss
cmp
cli
adc
xchg
cwtl
mov
push
xor
jecxz
mull
mov
hlt
push
sbb
mov
dec
test
sbb
fiadds
ret
iret
or
daa
jno
xchg
lods
fiadds
test
or
inc
xchg
or
inc
lea
jmp
nop
mov
out
cmp
pushf
pushl
or
mov
repz
out
fistl
cltd
stos
cmpsb
sti
fsubrl
out
push
inc
enter
pop
pop
or
test
pushf
lcall
jmp
push
imul
jl
scas
loope
lcall
push
popf
dec
sbb
and
mov
pusha
out
arpl
mov
in
shl
mov
arpl
xchg
movsb
int
popa
sub
jnp
inc
mov
xor
adc
lahf
add
in
dec
add
sub
cmp
enter
lock
fwait
and
or
sub
add
and
loope
jb
addr16
pop
mov
ljmp
std
xchg
scas
and
xchg
cld
fimuls
pop
sub
xabort
imul
outsl
jns
mov
cmp
pop
mov
jmp
std
sbb
stos
xchg
outsb
sti
les
push
xchg
sub
rolb
cs
test
inc
addb
mov
pusha
xor
cli
xchg
mov
es
movl
mov
outsb
cld
fwait
pop
mov
lods
jb
push
add
imul
mov
aas
sbb
sub
fwait
aam
adc
into
xchg
aas
mov
sub
cmp
leavew
adc
mov
inc
fstpt
sub
and
arpl
adc
std
fidivl
jle
clc
pop
call
insb
in
jmp
nop
lds
adc
mov
pop
jl
jecxz
out
negb
cwtl
jecxz
popf
daa
aam
jo
hlt
pop
popl
add
sub
popf
add
aas
inc
xchg
add
lods
push
int
xor
in
sbb
pop
dec
pop
adc
insl
ja
loop
stos
mov
das
add
mov
loope
xor
sub
mov
mov
aad
push
rclb
or
jg
outsl
rol
jno
mov
and
in
jmp
lcall
and
push
pop
jge
int3
dec
lea
xchg
and
clc
mov
iret
add
push
and
cmp
addr16
shlb
jae
enter
and
addr16
bound
xor
les
js
fwait
sarl
add
jno
fxch
sbb
das
jmp
popf
xor
shlb
bswap
shlb
add
cs
mov
cmpb
mov
cmp
div
jno
repz
divl
jl
sub
movsb
cli
fisttps
sbb
jecxz
stc
xor
push
roll
mov
aad
jle
roll
shlb
xlat
jns
mov
sar
sbb
clc
ljmp
lcall
mov
mov
xchg
or
js
insb
add
and
pop
in
mov
jmp
inc
dec
es
inc
repz
jbe
sbb
xor
xor
cmpsl
in
scas
pop
loope
in
hlt
pop
pop
sub
inc
aam
cli
leave
es
addl
inc
pop
dec
idivb
sbb
lret
or
repz
sbb
xchg
inc
or
mov
inc
js
adc
add
xchg
int
xchg
pop
push
dec
out
mov
jne
push
out
les
xor
outsl
fisttpll
adc
pop
jl
adc
push
jmp
not
jnp
inc
std
mov
lods
loopne
mov
mov
mov
mov
in
lock
jno
mov
andb
sub
mov
mov
or
or
repz
ret
mov
pop
add
fisubs
mov
iret
ret
or
xor
push
push
clc
jmp
jnp
mov
sub
leave
cmp
es
lods
stc
push
adc
push
imull
adc
retw
loope
lcall
xchg
cs
arpl
jge
in
fistl
cmpsb
pop
test
repnz
add
fnstcw
pop
adc
test
add
imul
inc
inc
imul
in
call
neg
rorb
push
sbb
mov
sub
testl
test
scas
sbb
fiaddl
aas
or
ljmp
inc
sbb
pop
jbe
insl
push
sahf
leave
ret
xor
cmpsl
cmp
xor
xchg
sub
and
jne
and
cmpsb
sbb
in
cld
cmp
push
dec
mov
ja
sarb
lods
mov
les
ss
call
sti
dec
shll
fidivs
adc
adc
xor
xchg
or
dec
jp
cmp
xchg
shlb
pop
add
mov
lahf
fisubrl
dec
mov
fldcw
adc
notb
shl
xchg
mov
add
adc
jno
cmp
fmuls
or
std
and
xchg
in
push
xchg
push
xchg
push
ljmp
je
push
jbe
cmpsb
inc
xchg
in
aam
gs
cld
and
sub
xor
mov
push
adc
xchg
loopne
fwait
mov
into
adc
shl
cmp
xchg
fucomip
cmc
out
sbb
mov
adc
out
lock
adc
paddd
mov
cltd
mov
pushf
into
mov
std
sub
cltd
adc
negl
stos
xlat
aad
mov
push
les
test
add
xor
cli
xor
iret
mov
arpl
push
mov
pop
pop
push
les
xor
add
dec
iret
hlt
imul
dec
jno
lods
fidivrl
aas
xchg
adc
mov
push
repnz
mov
mov
in
cmpsb
ds
std
lea
cmp
pop
xchg
std
mov
and
rcr
and
adc
imulb
sti
cs
mov
push
les
pop
add
lea
or
popa
mov
xor
adc
xor
sub
dec
std
sub
std
outsl
out
adc
jmp
dec
xchg
push
xchg
pop
in
push
cmp
pop
sub
mov
push
mov
test
pop
mov
cmp
nop
or
cmp
mov
add
imul
daa
inc
scas
movsb
xor
and
pop
int
inc
std
jmp
inc
lds
imulb
pop
subl
sahf
cmc
mov
adc
pop
in
shlb
mov
stc
adc
pusha
xchg
mov
pushf
xor
sub
mov
aaa
repz
pop
inc
cmp
sbb
push
loope
sub
mulb
push
and
dec
inc
aad
das
fs
incb
sbb
dec
faddp
cmp
mov
les
cmp
mov
int3
scas
jb
and
scas
adc
imul
xchg
popa
repnz
repnz
into
mov
dec
pop
xchg
fucom
pop
int3
idivb
pop
mov
xchg
inc
test
and
loope
enter
fdivs
and
mov
std
mov
mov
stos
xor
lods
push
sub
sub
mov
les
ret
xor
cmp
mov
lret
or
mov
mov
xchg
sbb
scas
std
pop
dec
cmp
or
loop
lret
mov
jle
outsb
fbstp
pop
insb
mov
mov
test
and
cld
or
rcr
push
fdivrs
stos
dec
mov
std
cwtl
cmp
call
daa
ljmp
xchg
xor
or
sbb
add
sbb
int
testb
mov
lock
add
lods
ja
aam
sub
xor
pop
ret
cli
rdpmc
lods
cld
and
or
or
ds
sbb
sub
bound
add
stos
inc
ret
cmp
pop
out
ds
xchg
xor
lods
lahf
sbb
lret
bnd
loopne
mov
mov
sub
add
outsb
mov
add
push
call
stos
test
push
inc
and
mov
mov
mov
sub
ror
mov
mov
push
incl
in
shrl
lods
dec
push
inc
inc
roll
push
inc
jle
loopne
jae
xlat
lods
mov
pop
xchg
scas
pop
xchg
int3
aad
sub
pop
adc
xor
ret
mov
add
cmp
cwtl
js
in
into
or
dec
fldcw
outsb
dec
push
lods
stos
aad
mov
ss
or
mov
dec
hlt
subb
sarl
jmp
aad
mov
push
adc
push
jbe
int3
adc
into
data16
mov
cmpb
xor
mov
cmpsb
popa
add
dec
dec
inc
mov
lock
fadd
sahf
mov
adc
out
jle
idivb
push
dec
dec
and
dec
cmp
adc
push
xor
lcall
roll
repz
arpl
sub
insb
adcb
lret
sub
lea
xor
rol
jmp
orl
in
addr16
cltd
inc
jae
sahf
int
ret
sub
fldl
insb
out
jle
adcl
jae
pop
push
mov
popa
call
jb
popa
sub
movsl
lds
push
jmp
aas
out
test
pop
mov
sti
es
fldenv
hlt
stos
inc
cmp
ret
rorl
or
adc
jnp
pop
jbe
inc
and
out
ret
in
in
cmpsl
das
mov
iret
lret
flds
cmpsb
clc
scas
icebp
mov
mov
mov
out
out
sti
fldcw
dec
aam
cmp
faddl
aaa
subb
fadds
jno
inc
sbb
sbb
push
push
jbe
jg
clc
xor
sbb
cltd
xor
xchg
push
rolb
lods
or
lds
imul
dec
movsl
imul
push
jmp
pop
adc
add
xchg
lret
adc
negb
out
fistps
push
and
adc
xchg
push
and
stos
add
lret
popa
mov
mov
xor
mov
mov
leave
mov
aaa
repnz
dec
cmp
jne
dec
fisubrs
divb
jge
push
jecxz
dec
pop
cld
mov
sub
clc
pushl
xor
dec
neg
sub
push
xchg
hlt
jnp
aaa
add
mov
xor
sbb
mov
ficompl
jnp
add
inc
lcall
iret
cmp
mov
loopne
hlt
cmpsb
inc
pop
daa
cs
pop
mov
daa
push
jmp
xor
fimuls
test
bnd
mov
cmp
insb
adc
add
fldlg2
and
frstor
and
and
mov
or
or
pop
scas
push
jb
xor
lret
mov
mov
adc
hlt
stos
outsl
xchg
or
dec
sahf
add
mov
lods
inc
bound
push
sub
out
arpl
mov
xor
and
lahf
mov
es
jmp
leave
xchg
push
dec
fs
lret
and
xchg
pop
jge
xchg
dec
sbb
xchg
iret
mov
les
inc
and
cmp
or
jp
fistl
dec
jae
mov
daa
mov
les
testb
sbb
lret
iret
push
mov
insb
popa
idivb
add
pop
xor
add
cld
xchg
mov
mov
pop
les
pop
fbld
iret
jo
and
jl
hlt
fwait
into
out
int
icebp
aam
lods
nop
and
push
jo
mov
or
pop
hlt
shlb
rolb
push
sbb
jl
pop
in
lret
push
cwtl
imul
call
lds
ss
call
jle
imul
les
movsl
loop
ja
pop
or
jb
push
pop
and
gs
negl
out
ret
jbe
push
in
xchg
sbb
std
xor
aad
mov
inc
in
mov
bnd
push
mov
mov
repz
push
jmp
std
scas
mov
push
fcomps
lds
mov
arpl
jg
pop
cmc
imul
rcll
clc
pop
mov
push
pop
test
jmp
xor
jno
jecxz
mov
outsb
loope
xor
int
insb
int3
fsubrs
sbb
nop
imul
aad
jns
sbb
mov
jne
pop
cltd
iret
dec
mov
mov
cltd
inc
mov
adc
mov
out
arpl
sub
ds
cmc
fmuls
into
sbb
enter
loopne
dec
inc
std
ljmp
xor
xchg
mov
ret
movsl
lret
cmp
ja
push
cmp
in
iret
inc
ds
sbb
iret
iret
xchg
int3
lods
xchg
ret
cltd
mov
mov
mov
ljmp
and
iret
ret
shll
outsb
popf
shll
aas
lret
push
dec
mov
pop
lods
cld
inc
ds
nop
jecxz
fiadds
and
fstpl
mov
inc
adc
add
mov
and
add
clc
and
xorb
test
jecxz
test
aam
jae
mov
xlat
mov
or
cmp
roll
ds
xchg
xor
in
test
fidivrs
leave
xor
popa
movsl
rcrl
add
pop
adc
mov
lea
shl
add
push
sbb
xor
scas
push
jbe
sbb
xor
pavgw
add
je
mov
mov
nop
jne
pop
push
lods
cmp
xor
jnp
xchg
inc
cmpl
rcll
out
jnp
rcl
push
leave
inc
aaa
mov
push
mov
mov
jae
pop
inc
lds
ljmp
cmc
mov
lds
movb
ret
ficoml
push
xor
xchg
js
sbb
jmp
subb
cmp
hlt
jae
fisubrs
dec
adc
stc
mov
mov
dec
icebp
add
push
cmp
sbbb
push
push
jno
jnp
jp
in
inc
js
sbb
test
ret
mul
add
mov
xchg
scas
jno
ret
int3
outsb
popa
pop
int
enter
sub
testl
hlt
popa
aaa
lret
pop
jno
jbe
xchg
adc
dec
enter
test
xor
in
cmpsb
xchg
aad
emms
add
ret
xor
outsl
xorl
sbb
jb
aad
adc
push
mov
push
shrl
loop
jge
sbb
shrb
adc
dec
xchg
fmull
or
repz
push
jg
cli
mov
test
jecxz
pop
fcoml
shl
and
sbb
int3
add
movsl
sbb
hlt
mov
lsl
mov
rorb
jnp
mov
adc
imul
nop
inc
push
scas
in
out
int
shl
out
arpl
push
mov
and
or
imul
fiaddl
cld
xchg
cmp
sub
ret
stos
sub
jno
sub
les
dec
sub
leave
popa
jb
xchg
push
loop
test
in
fidivl
pop
pop
xchg
adc
cmp
push
loope
jo
ljmp
mov
mov
int
mov
lea
ror
lahf
dec
sbb
and
outsb
test
xlat
push
js
mov
xchg
insl
jp
imul
or
sub
or
dec
and
or
stos
adc
imul
xchg
and
fs
aas
outsb
test
cmp
insl
into
lods
and
out
mov
in
xchg
jno
je
lods
das
jnp
fs
fstl
mov
xrelease
inc
or
popl
sahf
lods
adc
lahf
xor
paddusb
jecxz
pop
and
and
mov
outsb
test
inc
mov
shrl
and
jmp
jo
idivl
add
mov
push
ror
and
xchg
inc
dec
cmpsb
popf
cmp
mov
shrl
into
call
inc
or
push
sti
imul
push
xchg
addr16
jmp
mov
lcall
adc
shll
fcoms
cmpsb
das
lds
push
xor
push
popa
push
cmp
pop
xor
daa
sub
sti
repz
jbe
mov
cmc
sarb
rcl
bound
sarb
adc
into
arpl
in
cmp
push
in
test
std
xchg
iret
xor
cmc
sbb
je
adc
movsb
cld
mov
fs
dec
pop
rclb
fs
sub
and
shr
fnstenv
xor
aam
rcr
outsl
pushf
into
bound
popa
add
loopne
xchg
push
push
std
mov
scas
inc
add
xor
mull
hlt
dec
imul
repnz
movsl
cmp
ds
mov
and
sub
in
stos
cmp
mov
lock
dec
in
aaa
sbb
mov
lea
cmc
jge
mov
loopne
addl
out
aad
xchg
inc
and
ja
int
popf
fbstp
adc
xor
cli
test
push
mov
adc
negl
dec
mov
stc
sub
mov
rcrb
idivb
lahf
sbb
mov
inc
sbb
jge
arpl
and
repz
inc
test
inc
sub
daa
orb
bound
subb
movaps
mov
subl
push
or
lods
mov
xor
pop
fwait
inc
jmp
xor
cs
mov
xor
sub
lods
mov
mov
fwait
push
fcomp
cmp
movsl
into
inc
das
mov
and
sarb
scas
or
pop
nop
push
push
cli
mov
xchg
mov
dec
mov
fcompl
arpl
fdivs
adc
mov
or
xchg
shl
add
daa
je
xchg
cli
dec
pop
cmp
ret
js
mov
sbbb
popf
pop
xchg
sub
repnz
xchg
test
dec
sarb
mov
test
sub
and
xor
into
out
inc
repnz
add
ficoms
push
inc
mov
xchg
push
adc
lods
in
hlt
mov
scas
shrb
push
lea
dec
xchg
sbbl
subl
dec
gs
iret
stos
xor
shll
rclb
or
xchg
or
xor
es
pop
cwtl
pop
daa
mov
cwtd
dec
and
adc
test
cmp
add
sbb
sub
cs
mov
and
repz
aas
sub
or
or
lea
enter
lock
xchg
scas
iret
daa
dec
shlb
ret
xlat
cmp
sti
lods
sub
rcrb
mov
cltd
popf
mov
popf
nop
mov
clc
cmc
inc
mov
dec
xchg
add
and
and
push
out
sub
std
shrl
mov
mov
jnp
mov
fsubp
dec
inc
aas
mov
push
jecxz
clc
adc
mov
pop
iret
xchg
ds
dec
mov
and
mov
sbb
in
jbe
pop
jne
in
inc
out
cld
pop
lods
sbb
bnd
es
jp
mov
push
cwtd
inc
movsl
adc
aas
cltd
test
pop
add
cmp
into
or
adc
js
mov
test
sub
push
mov
mov
sti
add
jb
push
dec
dec
out
xchg
je
pushf
xor
push
inc
clc
mov
movsl
sbbb
inc
fimull
fs
pop
xchg
inc
add
dec
jle
data16
imul
or
outsb
aam
inc
jecxz
sbb
ret
scas
aas
mov
sub
scas
addb
jns
pusha
div
pop
sbb
sbb
cmp
pop
rolb
dec
cld
inc
xor
flds
add
ljmp
lods
arpl
xchg
adc
int3
mov
popa
repz
push
mov
in
inc
les
scas
xor
xor
sub
inc
inc
ja
punpckldq
fimull
push
lock
mov
dec
sbb
bound
sbb
jno
imul
push
mov
mov
xor
fwait
add
inc
sbb
in
or
negl
inc
int
aas
inc
scas
mov
daa
and
xchg
inc
cltd
cmp
daa
push
push
push
pop
sbb
cwtl
imul
iret
mov
daa
std
mov
pmaddwd
cltd
lahf
out
cwtl
xor
dec
daa
imul
dec
insl
mov
in
push
push
xchg
arpl
adc
mov
aam
xchg
sub
loop
cld
inc
lds
in
ficompl
push
pusha
daa
mov
imul
pushf
push
xor
add
xor
aad
test
sbb
mov
xor
adc
cld
test
mov
clc
jmp
ret
fistl
hlt
jnp
xor
aaa
cmp
mov
lahf
in
or
lods
push
fcmovnb
xchg
cmpsl
ja
idiv
lcall
mov
inc
or
dec
jbe
in
cmp
push
repz
fcmovnbe
ror
rcrl
inc
enter
and
or
mov
mov
cld
dec
gs
fs
or
leave
rol
adc
mov
fdivl
inc
push
sbb
fsubs
sarl
sbb
rdpmc
jbe
inc
sti
popa
xor
rcrb
aaa
sbb
mov
push
pusha
insb
sub
mov
mov
icebp
sub
cmp
dec
xchg
lcall
push
or
cmpsb
ret
lahf
daa
or
cmp
sub
out
sarb
lods
add
popa
sub
jbe
push
sbb
or
nop
add
xor
push
xchg
xchg
outsl
stc
pushf
out
lahf
stc
cwtl
lods
and
lock
pushf
mov
inc
into
imul
hlt
sub
jl
add
cmp
rcrl
lock
imul
or
pushf
or
inc
jne
incl
rorl
mov
lods
out
mov
pop
and
cmp
in
test
repnz
stos
adc
icebp
jno
shll
lods
xchg
and
ljmp
fwait
pop
popa
push
fistps
loop
dec
jne
or
pop
fimuls
mov
mov
bound
mov
mov
test
adc
popa
jbe
es
inc
mov
fldenv
xchg
ffreep
xorb
add
or
fisubl
add
or
sti
lcall
jp
lods
lods
jle
inc
mov
pop
or
or
fdivs
bound
mov
push
cld
xchg
xchg
cmpsl
cmp
test
insl
pop
push
mov
mov
int3
dec
sub
xchg
jmp
sub
test
add
mov
inc
jg
std
hlt
mov
ret
nop
push
ja
dec
aad
or
cmp
cmp
xorl
pop
sub
js
popa
popf
cld
jl
popw
cltd
test
daa
mov
lcall
push
mov
xor
nop
mov
and
pop
cltd
test
lret
sahf
push
lahf
push
in
push
xchg
addr16
dec
xorl
pop
pop
mov
gs
sahf
rorb
in
outsl
xchg
inc
fsubrs
push
pushf
test
xchg
test
cmc
je
outsb
decl
outsb
fidivrs
outsb
mov
and
mov
dec
inc
movsl
fldt
out
mov
test
add
sbb
or
lahf
shlb
loope
aad
inc
inc
ljmp
cmp
ja
testl
xor
insl
dec
and
movsl
int
out
call
test
inc
jmp
xor
adc
dec
xchg
gs
add
add
mov
test
or
insb
test
jno
push
jbe
mov
popf
sub
xor
mov
cmp
xor
pusha
fwait
jl
cmp
ja
cmp
lret
js
daa
adc
sahf
xchg
aas
imul
mov
adc
or
sbb
adc
aas
xlat
pop
inc
jle
pop
push
cmpsb
jnp
xor
pushf
inc
dec
push
inc
fdivrl
outsb
push
or
adc
fs
adc
rcll
jl
xor
in
ja
popa
test
push
arpl
push
es
jb
adc
inc
rorl
adc
in
pop
int3
jle
sub
in
and
or
fs
adc
loope
divb
mov
or
subb
inc
inc
sahf
mov
arpl
or
clc
mov
push
in
xor
movsb
hlt
inc
jne
mov
stos
enter
cmp
xor
in
adcb
jl
mov
cltd
or
cmp
cmc
cld
std
xor
into
or
add
xorb
aam
xor
dec
test
sahf
push
inc
jae
xchg
push
sub
push
xor
adc
sub
or
inc
sbb
daa
gs
stos
daa
insl
jns
xor
cmpsw
daa
xchg
imul
popf
addr16
hlt
xor
es
movb
jmp
adc
cwtl
jns
jno
das
dec
call
js
pusha
cwtl
or
push
pop
push
mov
cmp
lea
dec
dec
mov
jle
ljmp
inc
ljmp
push
popl
mov
pop
cs
dec
movd
xchg
and
xor
ljmp
stos
jne
or
bound
lahf
aam
push
or
cmp
add
add
out
ja
adc
rol
cltd
insl
xchg
xor
or
add
push
push
ds
jg
jle
out
and
out
mov
sahf
adc
xor
cmp
adc
mov
jbe
cmc
lea
adc
stc
inc
xchg
push
in
inc
adc
arpl
out
bound
pop
aad
sbb
mov
jns
stos
sbb
mov
sub
in
or
sub
dec
cmp
nopl
in
and
adc
add
inc
ret
scas
xor
leave
jmp
mov
hlt
loope
ss
out
test
mov
jle
daa
out
fnstsw
cmc
or
jae
or
mov
imul
mov
shlb
popf
push
dec
sub
test
pop
aas
mov
ja
ret
outsb
pop
mov
mov
xchg
add
movsl
lea
lret
fwait
inc
daa
jecxz
mov
cmp
mov
push
dec
xor
mov
cwtl
cmpb
lds
arpl
les
mov
sbb
clc
insb
mov
xchg
movsl
sbb
aas
mov
xchg
sahf
loop
fiaddl
xor
pusha
dec
sbb
cli
xor
shufps
mov
mulb
pop
rol
xor
addr16
pop
lods
and
xchg
push
push
sbb
pushf
nop
scas
cwtl
push
daa
ffreep
pop
pop
jmp
lea
andl
inc
lahf
mov
pop
inc
pop
cld
mov
adc
xlat
mov
pop
mov
pop
movsl
mov
push
push
cmp
xor
cmp
mov
mov
mov
repnz
faddl
or
mov
sub
jge
outsb
sub
neg
cmp
pop
xchg
cli
rolb
cmpsb
and
shlb
pop
out
mov
cmpb
cli
fwait
sbb
in
pop
jge
stos
data16
cltd
out
test
mov
push
clc
or
loop
cli
dec
xor
mov
pushf
dec
cmp
fsubr
mov
pop
in
or
mov
pop
mov
pushf
ret
pop
inc
xchg
out
iret
push
scas
xchg
sahf
xor
call
and
cmpsb
repnz
mov
gs
mov
mov
mov
push
mov
mov
iret
imul
insb
scas
into
cmc
nop
pop
xor
add
rorb
jo
test
and
mov
andb
data16
push
pop
adc
mov
insl
bound
icebp
or
or
mov
popf
outsb
mov
mov
fisubrs
mov
addr16
sbb
ret
aad
dec
mov
mov
aas
arpl
add
dec
jbe
sbb
es
xor
add
arpl
adc
mov
and
mov
int
add
mov
and
inc
sub
iret
bound
orb
inc
cli
xor
mov
mov
outsl
repz
xor
push
sbb
test
xchg
mov
loop
mov
cli
inc
cmp
and
push
and
out
call
addr16
popf
pop
mov
adc
sti
cli
enter
leave
sahf
movsl
lods
lea
pusha
movsb
inc
scas
fists
pushf
mov
popa
popa
xchg
into
aam
sub
shll
and
adc
xchg
jb
mov
pop
aas
push
xor
bound
iret
xor
pop
popf
adc
in
lahf
cmp
jno
jmp
in
push
dec
out
mov
xchg
or
sti
mov
das
mov
divb
pop
xor
pop
mov
aad
sbb
flds
fwait
push
in
pop
insl
mov
lcall
dec
call
xchg
xlat
aaa
jb
popa
icebp
dec
ja
mov
inc
sbb
gs
aam
aas
js
pop
sbb
or
cwtl
lret
sbb
rol
out
cmc
jge
xor
cwtl
and
jge
ficomps
sbb
mov
xor
mov
icebp
pop
call
adc
aas
cmp
add
or
lods
or
aam
add
cmp
pop
lahf
jbe
jae
pop
xchg
call
pop
adc
adc
pop
out
popa
xor
leave
nop
or
lods
jnp
shl
int
mov
mov
in
gs
aad
cltd
je
pushf
les
imul
call
in
addr16
add
jae
pop
cmp
ja
add
dec
pop
enter
push
sub
fistps
sbb
cmp
fidivrs
xor
addl
call
mov
inc
jge
dec
xor
pop
sbb
jp
xchg
shlb
out
repnz
sub
inc
mov
bound
mov
imul
lds
mov
lret
sub
movsb
shll
lods
js
mov
sahf
xchg
shl
and
push
jne
sahf
xchg
xchg
stos
scas
inc
sti
pop
pop
pop
dec
xor
push
push
inc
cmp
xchg
aas
push
stos
mov
daa
scas
and
xor
pop
jl
mov
in
enter
inc
sbb
and
ds
lahf
lods
jl
call
pop
and
lds
mov
inc
loopne
jno
in
repnz
data16
fwait
inc
push
sub
xor
and
les
gs
cmpsl
sub
pusha
es
push
mov
push
popf
dec
cld
into
into
inc
repz
pop
repz
jg
jo
repz
outsb
nop
xchg
fstpl
mov
out
or
mov
sub
inc
pop
dec
xor
addr16
das
add
xor
add
lret
aad
sarl
pop
xchg
std
mov
loope
push
or
mov
sti
js
pop
stos
lahf
pop
loop
mov
xchg
dec
andl
push
or
std
xor
cld
or
xor
xchg
push
sub
pop
fidivrs
test
cmp
pop
fwait
lods
ret
dec
jne
cmc
out
xchg
mov
ja
pop
lock
lock
aas
push
psllq
lea
int
mov
sub
lcall
addb
jg
fdivr
fwait
adc
push
test
addb
and
xor
push
pop
clc
mov
pop
repz
in
addr16
add
test
stos
xor
sub
dec
loope
test
pop
add
xor
push
jns
mov
pop
xor
xchg
mov
divl
loope
cmp
aaa
xchg
arpl
pop
outsb
gs
cmp
xorb
sub
or
xchg
push
push
add
mov
jno
mov
add
push
std
mov
fnstenv
js
scas
lea
cli
mov
pop
and
adc
andl
or
inc
fldenv
sub
mov
dec
loope
inc
out
popf
inc
push
aas
lock
daa
push
mov
repz
push
dec
and
xchg
popa
ret
popf
dec
inc
mov
xor
outsl
push
jb
insl
lds
ret
pop
or
not
jbe
xchg
inc
pop
cltd
sub
or
loopne
jp
dec
into
lea
js
bnd
xor
mov
push
sub
mov
lcall
fcomps
pusha
fdivrp
es
fldenv
add
xchg
mov
jnp
pop
popf
and
movsl
rclb
dec
fsts
rcrl
xor
xchg
adc
ret
repnz
mov
mov
iret
movsb
icebp
int3
bound
mov
sbb
mov
inc
inc
in
test
in
pop
shlb
mov
xchg
adc
std
jb
push
leave
mov
ss
insl
test
cltd
fidivrl
fadds
xchg
and
aam
rcrl
pop
mov
push
pop
adcl
jmp
lea
cs
dec
aas
mov
cmpsb
aas
add
push
lds
push
popa
clc
addb
fbstp
jns
hlt
mov
test
out
mov
adcl
aas
pushf
cmp
andb
lahf
fldl
xor
xchg
fstl
dec
cmp
sub
pusha
cltd
imul
inc
push
push
mov
pop
aaa
in
and
test
jns
cmp
or
daa
cwtl
mov
cmp
fistpl
xor
sub
sub
and
cmp
jb
xor
xor
subb
addr16
stc
dec
push
jns
xor
das
insb
addr16
or
pop
pop
add
std
jb
fstl
cmp
inc
or
sbb
mov
lds
and
pop
mov
inc
inc
mov
push
sub
and
loopne
popf
mov
push
inc
xor
pop
mov
dec
fmull
jl
pop
sbb
dec
cltd
test
je
divb
out
adc
mov
fnstcw
push
dec
push
ljmp
push
sti
pop
in
adc
icebp
mov
fwait
add
pop
sub
mov
add
push
adc
mov
xchg
fisubs
push
icebp
cli
xchg
mov
push
xchg
cmp
mov
scas
push
cmp
inc
pop
paddsb
adc
sahf
call
mov
mov
cmpb
mov
pop
fwait
adcb
add
push
ss
sahf
xchg
mov
and
cmp
push
dec
repz
in
push
lcall
in
push
addb
repz
out
sbb
inc
in
inc
push
add
lods
adc
loope
test
and
push
xchg
iret
push
insb
mov
push
shrl
ljmp
popf
arpl
jbe
and
or
xchg
mov
adc
cmpsb
fucomi
nop
push
pusha
pop
jne
mov
sub
mov
jg
inc
outsb
je
cs
jb
bound
xchg
das
jae
scas
test
cmp
inc
iret
mov
mov
fimuls
fadds
repnz
fstl
lea
fisubl
mov
sbb
mov
push
in
fimull
pop
lods
and
fbld
dec
mov
and
adc
ja
insl
ja
cld
xor
pop
mov
jns
pop
fwait
push
out
jne
lods
fld
ljmp
inc
lock
add
aas
stos
mov
aas
jne
push
sub
mov
mov
xchg
push
xor
inc
inc
mov
andb
aam
mov
lock
pop
jmp
loopne
out
shrb
shll
mov
pop
jmp
or
and
xchg
adc
mov
add
sub
je
mov
popa
in
rclb
enter
mov
arpl
pop
pop
in
lret
mov
and
xchg
push
iret
sbb
fistpl
inc
nop
mov
aaa
mov
cmp
and
add
orb
adc
xor
aam
subb
dec
mov
sti
adc
ficoml
ja
lcall
jmp
fwait
into
mov
push
push
in
andb
out
inc
fwait
jns
jno
fadds
shlb
push
lahf
cmovg
or
fcomps
jno
sub
sbb
inc
loope
sub
mov
pushf
outsl
push
outsb
frstor
sub
xor
into
dec
xlat
mov
jnp
push
pop
sub
into
mov
testl
sbb
xchg
and
aad
xor
getsec
shll
popa
js
loopne
out
mov
inc
sbb
adcl
xchg
or
add
fld
add
pop
xchg
add
or
addr16
int3
push
es
lock
push
gs
push
jmp
jle
mov
in
mov
mov
xchg
std
mov
xor
pushf
in
in
mov
insb
lret
inc
mov
jg
pop
cmp
jns
jp
xchg
inc
das
rclb
inc
stc
add
xor
inc
into
xchg
pop
pop
adc
cmpsl
fxch
loope
sub
pop
push
loop
jno
xlat
pusha
lds
and
mov
xor
add
dec
jecxz
inc
push
lret
daa
imul
pop
jge
iret
lds
mov
insb
mul
shl
pop
jge
shlb
mov
repz
sub
js
aas
mov
inc
jl
mov
stos
push
or
adc
adc
sub
lock
jmp
negb
test
repz
jle
into
inc
sub
fs
mov
pop
lahf
popa
std
inc
adc
aas
adc
xchg
fwait
icebp
adc
xor
and
or
jge
sbb
push
shlb
pop
ja
setge
sub
outsb
out
pop
sbb
sub
xor
lret
das
mov
fstpt
push
pop
out
pop
push
aam
gs
mov
xchg
loope
dec
push
mov
xor
mov
jne
jo
jp
loopne
jno
lret
int3
mov
cmp
arpl
cld
jmp
pop
mov
xchg
sbb
xor
loop
add
int
dec
xchg
cmp
cwtl
stc
cmp
aam
xchg
adc
add
nop
imul
repnz
sbb
inc
aam
mov
jbe
scas
pop
fs
adc
movsl
cld
push
in
leave
push
repz
push
das
call
pop
movsb
sbb
lret
mov
pop
data16
aaa
and
push
je
jg
xor
add
dec
lds
not
fcoml
mov
and
loopne
mov
adc
popa
mov
push
scas
ss
add
mov
mov
cmp
lods
sub
sub
xor
push
leave
stos
lret
cmpsb
popf
test
add
outsl
pusha
repz
push
imul
ss
fldt
jno
jne
mov
or
xchg
mov
bound
mov
iret
sti
adc
jno
inc
es
and
icebp
int3
add
mov
loope
dec
shl
sbb
fbstp
adc
in
jnp
mov
xor
lcall
push
outsl
fcoml
out
in
add
jbe
sbb
cmpsl
xor
data16
push
cmp
mov
jno
mov
imul
js
dec
sbbl
nop
shll
shrl
push
pop
xor
inc
scas
insl
push
pop
jb
out
lahf
add
push
mov
jnp
xor
adc
leave
pop
addr16
jne
cmp
inc
inc
test
je
lret
cli
mov
sub
fdivp
xor
xorb
test
push
mov
jecxz
int3
test
inc
xchg
fsubs
orl
les
cmp
movsb
sysexit
pop
mov
jmp
cltd
dec
push
dec
pop
rolb
hlt
inc
in
add
pop
inc
movl
test
rcrb
sbb
mov
add
jp
mov
cmp
mov
arpl
push
xchg
mov
xchg
mov
gs
lret
in
mov
aaa
addr16
ds
imull
xchg
lods
in
xor
sbb
out
mov
dec
mov
stc
dec
mov
dec
pop
adc
je
ret
inc
lods
cli
dec
dec
ror
adc
mov
and
shl
mov
xor
mov
lea
dec
add
cmp
fs
imul
rcrl
mov
add
mov
lods
add
push
push
inc
hlt
not
mov
push
cmp
js
inc
loopne
add
subb
shll
bound
notl
xor
es
push
sbb
mov
call
or
fdivs
aam
push
cli
inc
aad
roll
ret
fs
hlt
mov
pushf
adc
lock
inc
inc
inc
aaa
out
fwait
jns
sub
mov
add
inc
daa
test
ja
rcrb
cmp
mov
addr16
xor
fiadds
ja
adc
pop
scas
int
ror
adc
and
popa
imul
or
xchg
mov
mov
into
addb
mov
fsts
gs
repnz
pop
cmp
nop
mov
pop
decb
push
sub
aas
shlb
leave
sbb
hlt
pop
jp
jno
cmp
mov
mov
inc
adc
cs
mov
jl
inc
lahf
cld
js
flds
mov
inc
pop
xor
jp
push
out
insb
testl
jbe
lods
jnp
and
jl
lds
jnp
pop
mov
jecxz
mov
rcll
dec
idivl
aam
pop
cmpsl
mov
mov
clc
sub
icebp
jl
orl
fisubrs
aas
mov
push
cwtl
jp
or
pop
scas
int
push
adc
and
out
incb
jbe
mov
test
mov
and
pusha
std
adc
mov
call
ret
mov
in
aad
cmc
fnsave
jecxz
leave
mov
shr
aad
aam
add
jle
cltd
or
insl
data16
adc
repnz
xlat
xchg
sub
fiadds
adc
fnsave
jmp
loop
inc
add
lods
jbe
ret
mov
pop
or
mov
adc
aas
push
idiv
jns
call
out
xlat
xchg
jne
add
adc
ljmp
sub
repnz
mov
lcall
cltd
inc
ffreep
and
sub
or
in
jne
sbb
xchg
dec
and
pop
movb
leave
sub
push
jo
adc
repnz
or
push
std
icebp
push
push
and
pop
xchg
ds
dec
add
shl
cwtl
sarl
cmp
sti
adcl
mov
cld
push
lret
in
std
ret
clc
inc
and
pop
xchg
jmp
mov
xchg
xchg
nop
sti
sahf
mov
lock
add
xchg
mov
scas
out
sbb
dec
xchg
cltd
ljmp
jo
out
add
mov
popf
jp
pop
jbe
and
pushf
loopne
ret
sar
call
ds
repz
scas
cmp
shlb
adc
pop
bound
repnz
icebp
jne
mov
test
fsubrl
sbb
or
std
pusha
js
loop
sbb
xor
pop
rcrb
sub
pop
ljmp
ljmp
jae
jl
and
xlat
lret
add
cmp
fldt
xor
cmp
scas
fs
mov
repz
int3
aad
xor
mov
jb
sbb
mov
in
rorb
repz
mov
jne
jge
in
pop
daa
inc
scas
gs
pop
ret
lcall
and
es
loopne
jnp
jno
pop
inc
cld
addr16
adc
xor
push
cmpl
out
push
dec
cmpsl
rolb
cltd
lods
or
mov
and
hlt
pushl
scas
jle
mov
mov
shlb
push
pop
subb
push
std
push
outsb
in
in
ret
jecxz
dec
xchg
pusha
inc
fwait
xor
pop
and
jbe
out
mov
repz
add
sub
jno
scas
and
mov
or
sub
adc
subl
out
dec
xchg
jo
cmp
inc
loopne
mov
cs
aad
mov
fs
psrad
sbb
cmp
or
mov
sbb
pop
mov
cmpsl
out
addb
outsb
in
daa
pusha
repz
cmp
dec
add
nop
in
push
add
and
test
leave
push
dec
rolb
push
dec
rcll
push
inc
ficoms
inc
xor
pop
fsub
sbb
es
or
fstps
pop
hlt
hlt
loope
rcrb
sub
mov
xchg
or
and
pop
add
and
mov
mov
inc
mov
adcb
andb
xor
pusha
hlt
in
dec
jne
mov
test
dec
int3
popa
repz
scas
sti
xor
xor
jo
pop
inc
lahf
ljmp
hlt
insb
enter
or
cmp
mov
mov
enter
sahf
pop
test
jmp
and
xchg
mov
unpcklps
push
pusha
jle
xchg
and
sbb
rcrl
ret
lahf
jae
mov
outsb
xchg
mov
pop
je
mov
pop
insb
imul
stos
loop
out
mov
sahf
jno
in
push
mov
inc
movsb
cmp
push
mov
mov
push
xor
popa
pop
inc
add
mov
arpl
sub
sbb
ljmp
mov
test
mov
jecxz
jnp
sbb
mov
xchg
push
leave
imul
jno
push
push
mov
popa
adc
aaa
sti
das
and
jp
or
mov
push
xchg
mov
push
xchg
fcoms
call
out
mov
mov
pop
lds
std
sub
dec
js
jns
in
jo
mov
mov
sub
cltd
lret
arpl
push
lods
insl
xchg
and
mov
adc
mov
sub
stos
add
stc
mov
mov
imul
std
das
shrl
push
popf
mov
into
insl
cmp
loop
add
mov
sub
sahf
push
push
lahf
jnp
fadds
std
push
popf
pop
repnz
lret
push
xor
jle
add
ss
test
mov
mov
cmp
dec
movsb
xchg
push
adc
inc
ja
leave
jg
or
mov
pop
mov
test
push
dec
outsl
inc
scas
jne
jge
es
inc
dec
iret
lods
sbb
inc
xor
push
pushf
push
cmp
mov
xorb
ljmp
or
scas
pushf
repnz
dec
xor
aad
dec
stc
insb
into
cmp
dec
cltd
jl
push
push
or
mov
es
fs
jmp
sti
jo,pn
ret
addr16
pop
out
fwait
or
shll
imul
xchg
jle
ja
out
inc
ljmp
lods
push
push
in
out
lods
jmp
addb
aaa
ss
outsb
mov
imul
and
into
fildll
mov
shrb
testb
mov
shrb
in
adc
pop
cld
adc
sbb
out
fildl
sbbl
add
shrb
repz
outsl
sbb
in
lahf
inc
mov
xor
popf
repz
ds
mov
fwait
jge
mov
mov
in
divb
cmpsb
aad
and
hlt
popf
jmp
ljmp
in
mov
push
fwait
roll
addb
subl
arpl
dec
rcrb
test
add
bound
push
inc
loopne
pop
pop
jp
add
imul
mov
xor
stos
es
lods
aaa
or
dec
sbb
and
and
mov
ds
push
popa
sbb
add
idivl
sbb
int
mov
out
adc
adc
xchg
enter
int
sbb
cmc
mov
popa
mov
sub
push
cmpsl
push
rorb
lahf
or
jns
fs
or
out
arpl
movsb
pop
dec
test
repnz
sub
iret
sub
punpckldq
sub
jmp
aaa
loop
pusha
lea
stos
xor
lahf
dec
mov
adc
jp
push
pushf
mov
scas
cmpsl
imul
subl
jns
sbb
push
mov
cli
and
add
jns
add
push
lea
lcall
stos
cltd
or
scas
not
test
lods
sub
stos
cltd
push
cld
sub
pop
hlt
lahf
pushf
jne
or
in
daa
mov
in
mov
loopne
push
add
dec
xor
mov
xchg
xchg
repz
aad
and
mov
lods
outsb
sarb
jmp
out
fwait
push
movsl
orb
scas
mov
pop
jb
lds
and
xchg
push
push
adcl
lock
and
mov
pop
push
clc
adc
add
mov
and
cmp
mov
pop
cmp
adc
xor
sbb
lods
aad
lret
ret
push
gs
repz
pop
mov
aaa
adc
lock
rcl
xchg
xor
out
mov
xor
inc
xchg
jle
mov
in
fcomp
inc
cmp
and
add
push
sub
pop
cltd
jb
shlb
mov
mov
add
cmpsb
rclb
push
imul
addl
dec
xor
mov
hlt
popf
mov
bound
arpl
sbb
icebp
or
push
in
fidivrs
xchg
push
sahf
and
sbb
mov
dec
roll
imul
xchg
pushf
dec
xchg
gs
mov
cmpl
and
cld
outsb
dec
add
outsb
popa
aad
in
push
mov
jno
loopne
leave
xor
mov
fsubrl
jae
push
push
mov
mov
fs
orl
shrl
add
std
jae
push
push
push
ret
pop
fbld
dec
insb
add
mov
mov
adc
push
lds
cld
dec
xchg
js
ret
shr
out
lods
mov
add
testb
insb
cwtl
jae
mov
mov
adc
orl
pusha
dec
in
push
fwait
lea
enter
xchg
sub
ret
sbb
and
lock
lods
add
jne
mov
dec
fidivs
mov
push
and
cmp
js
push
sbb
nop
xor
jmp
stos
and
cmp
or
and
mov
add
mov
mov
cld
fimuls
fisubrs
int3
sub
and
and
ds
xor
cmc
lea
jo
dec
mov
push
mov
mov
adc
pusha
es
es
mov
xchg
lock
adc
loopne
fadd
aam
jbe
les
jae
mov
mov
adc
inc
xorl
xor
jne
mov
push
xchg
sub
inc
jns
in
and
dec
mov
and
sbb
xor
mov
rcr
mov
sti
jae
pop
adc
and
xor
dec
pop
shlb
aas
adcl
jbe
xchg
in
test
or
mov
xchg
jne
mov
ss
test
pop
add
and
adc
sbb
sbb
and
clc
sbb
mov
std
fidivs
mov
dec
ret
xchg
mov
cmp
cmc
cmp
jl
pop
bound
push
fcomip
mov
jge
mov
adc
push
int
out
and
xor
lret
daa
sti
adc
xor
xorl
adc
lcall
dec
jle
dec
xchg
insb
xchg
inc
inc
add
and
adc
add
jne
ret
or
mov
mov
inc
aad
xor
jae
mov
mov
adc
stc
subb
xor
outsb
in
pop
jne
mov
push
xchg
xor
inc
imul
jmp
fstl
add
mov
adc
or
xor
pusha
xchg
in
ss
mov
push
xchg
fs
inc
cmp
and
adc
add
jne
ret
add
mov
fucomip
cs
aam
js
mov
insb
mov
dec
jnp
mov
adc
xchg
xor
dec
sbb
and
paddb
in
fidivs
mov
mov
adc
sbbb
xor
pusha
push
push
jne
mov
repnz
cmp
aas
adcl
je
ret
enter
es
mov
mov
ss
test
pop
add
and
adc
mov
add
lods
pop
ja
fdivs
ret
enter
mov
mov
mov
adc
push
orl
outsl
insl
mov
popf
cmp
aas
jno
fadds
jne
jne
ret
clc
ffreep
xchg
call
sbb
or
mov
xchg
jne
mov
ds
jo
inc
sub
and
ds
aas
mov
and
and
or
mov
fadds
and
out
xchg
mov
mov
pop
add
and
ds
aas
inc
adc
add
mull
insl
std
iret
mov
adc
push
roll
out
pop
jecxz
mov
lods
mov
adcb
pusha
and
outsl
xor
xor
fs
dec
fcomip
mov
and
es
out
mov
adc
add
adc
ficoml
add
and
cmp
fs
xchg
je
push
mov
push
mov
mov
adc
push
imul
ljmp
and
mov
xchg
xchg
loop
pop
jnp
mov
adc
popf
xor
or
out
sbb
mov
ret
add
int3
fdivrs
mov
mov
mov
adc
pop
orl
pusha
dec
in
cli
jne
mov
and
add
sub
std
pop
cmp
sbb
adc
xchg
je
ret
test
inc
mov
pop
mov
mov
adc
push
insl
test
and
xor
mov
ljmp
adc
add
jne
ret
mov
xchg
mov
xchg
mov
mov
adc
lea
mov
pusha
xor
or
mov
mov
clc
incl
jmp
fucom
fsubr
push
shlb
movsb
pop
cmp
pop
jg,pt
sub
push
je
ret
inc
mov
and
es
out
mov
adc
add
fcmovu
loop
enter
add
and
cmp
push
inc
ret
push
insb
lock
mov
mov
adc
push
int
out
and
xor
lret
daa
out
adc
adc
xor
pusha
mov
xchg
jne
mov
ds
jl
inc
xor
and
mov
add
jne
ret
adc
mov
add
enter
xlat
pop
fsubrp
outsb
jne
mov
dec
mov
mov
add
jnp,pt
pop
adc
add
pop
je
ret
inc
filds
mov
sbb
stos
lds
mov
jne
mov
dec
into
fidivrs
mov
push
and
ds
push
push
push
ret
pop
fucomip
mov
cmp
push
jno
shll
test
and
aad
movsb
mov
sub
add
xor
sahf
in
jne,pn
mov
dec
xchg
insb
xchg
inc
inc
add
and
adc
add
jne
ret
adc
mov
add
enter
aam
jmp
out
aam
jb
mov
mov
mov
adc
addl
pusha
push
in
divb
mov
adc
add
and
ds
rol
inc
jecxz
sub
ds
xor
std
xchg
je
ret
sbb
mov
fs
mov
adc
push
insl
test
and
xor
stos
pusha
add
mov
mov
xor
je
mov
mov
mov
popa
add
and
ds
aas
inc
adc
add
sub
push
mov
or
mov
pop
loop
fidivl
mov
dec
fiadds
std
add
dec
outsl
xor
xor
push
mov
xor
push
imul
push
fldl
or
mov
sbb
mov
mov
cmp
add
and
adc
add
jne
ret
adc
mov
add
enter
fistps
out
outsb
jne
mov
dec
mov
push
cmp
push
jae,pt
push
adc
add
pop
je
ret
dec
mov
and
es
repz
adc
aad
mov
dec
fidivs
les
jmp
adc
jle
push
ret
insb
fistps
pop
insb
lock
mov
mov
adc
push
int
out
and
xor
lret
cltd
cmp
or
adc
add
movsl
je
ret
mov
xor
insb
mov
mov
adc
and
xor
stos
pusha
push
out
addr16
adc
rcl
js
fadds
jae
mov
mov
adc
and
xor
jne
mov
stos
xchg
add
inc
adc
add
xchg
shl
outsb
mov
mov
push
mov
adc
inc
xorl
xor
out
jne
mov
or
add
and
cmp
inc
lods
fucomi
shlb
mov
mov
adc
adcb
xor
pusha
jb
dec
jne
mov
repnz
cmp
and
fistpll
int
lock
lock
rcl
es
cmp
loopne
fdivrs
mov
mov
mov
mov
adc
orl
pusha
inc
in
push
jne
mov
es
adc
inc
leave
add
lods
fisttpll
outsb
xchg
int3
sub
and
and
cmp
insb
add
jle
push
ret
pusha
fistps
push
insb
clc
jae
mov
mov
adc
push
int
out
and
xor
lret
daa
fstl
movl
pushf
mov
mov
stos
mov
inc
sub
and
ds
aas
mov
mov
sbb
adc
mov
add
enter
ljmp
mov
dec
mov
push
cmp
dec
jnp,pt
pop
adc
add
pop
je
ret
dec
mov
sbb
and
jge
mov
es
lods
mov
sbb
outsb
adc
mov
adc
in
push
es
xor
pusha
jp
inc
jne
mov
bound
add
and
sarl
adcl
je
enter
movsl
adc
or
xor
pusha
mov
mov
inc
xchg
push
movsb
and
adc
add
jne
ret
adc
mov
clc
insb
lret
dec
hlt
lret
insl
je
mov
dec
mov
adc
xorl
xor
jne
mov
push
xchg
sub
inc
addl
repz
loope
jnp
mov
adc
adc
inc
cwtl
pusha
cmpsb
in
cmpsb
jne
mov
dec
xchg
pusha
xchg
inc
xor
cmp
aas
xchg
adc
add
jne
ret
add
mov
mov
push
hlt
jb
mov
mov
mov
adc
popa
addl
pusha
dec
in
jne
mov
sbb
add
and
or
jo
adc
push
shlb
add
mov
pusha
add
xchg
je
push
mov
inc
mov
mov
adc
push
roll
in
mov
adc
push
sbb
mov
test
sahf
mov
mov
mov
adc
test
mov
push
jp
xlat
push
xchg
or
inc
loope
cld
inc
movsl
xlat
in
fidivl
mov
mov
adc
andl
xor
pusha
outsb
in
pop
jne
mov
xchg
cmp
inc
jno
fsubs
jne
jmp
fstl
add
lods
sbb
and
xor
in
je
ret
mov
xor
insb
mov
mov
adc
jno
aam
pusha
push
out
mov
clc
cmpsl
and
loopne
frstor
rcr
xchg
mov
cmp
dec
outsl
xor
sub
push
fucomip
mov
xor
push
imul
push
loope
mov
cmp
add
stos
je
ret
pushf
fildll
mov
jo
dec
and
adc
cltd
xor
sbb
out
mov
add
icebp
xor
or
insl
pop
pop
shlb
xor
add
filds
push
mov
mov
adc
push
jno
shll
ljmp
adc
add
ret
ret
mov
mov
nop
mov
mov
adc
lea
mov
pusha
ss
adc
mov
mov
mov
clc
fisubs
jnp
mov
adc
in
pop
es
xor
jbe
push
jne
mov
ljmp
fsubs
jns
out
aas
loope
or
xchg
movsb
mov
sub
xor
jmp
mov
mov
push
lahf
mov
adc
and
xor
push
pusha
adc
scas
jne
mov
int
sti
pop
adc
xor
jne
mov
ds
jo
inc
cmp
cmp
aas
popf
adc
ret
adc
stos
mov
fisttpl
sbb
lock
lahf
loopne
int
sti
pop
xor
adc
fists
jae
mov
mov
adc
xchg
xor
sbb
out
mov
add
ret
sub
sbb
push
out
xorb
xchg
dec
sahf
fnsave
xchg
js
cmp
cmp
jns
mov
sub
xchg
testb
frstor
push
repz
aas
or
in
mov
mov
addb
push
nop
shlb
outsl
fistl
mov
icebp
jl
arpl
or
pusha
jmp
cltd
movsl
dec
lds
cmp
mov
or
jne
movsb
push
pop
stc
inc
cli
rorl
sti
mov
mov
das
xchg
cli
jge
test
outsl
jp
fstl
shlb
xor
pop
xchg
icebp
gs
test
pop
mov
jne,pt
pop
enter
inc
daa
lcall
rol
mov
push
pop
mov
jb
pop
xchg
lods
push
or
imul
fcomps
push
or
dec
sahf
mov
imul
cmp
pushf
add
mov
jne
jmp
mov
cmp
mov
push
ja
xor
cltd
pop
cwtl
std
xor
loope
mov
ja
pop
test
sub
out
es
sub
insl
pop
sbb
das
out
push
lcall
inc
sub
sub
or
dec
push
out
and
aaa
lahf
lret
pop
push
and
je
stc
or
stos
mov
outsl
hlt
jns
fwait
fs
jb
sbb
sbb
aas
in
in
fwait
shrl
bound
loopne
cmp
es
hlt
pop
fwait
test
pop
mov
add
mov
push
int
daa
xor
mov
adcb
ret
cli
jmp
cmp
out
lret
sub
cmp
cmc
scas
cmp
inc
push
jg
xor
es
ja
fistl
xchg
cmpl
stos
inc
jge
mov
jno
or
push
mov
hlt
rcll
test
cmp
mov
popa
push
loope
je
aad
iret
push
imul
jns
fistl
sti
addr16
cs
mov
lods
pop
mov
sub
int3
sti
xchg
xor
add
and
add
jo
enter
stos
pop
or
fs
xchg
or
cmp
adc
jno
call
inc
lods
mov
dec
inc
shll
push
xchg
movb
jl
imul
inc
cmp
inc
mov
sbb
add
push
sub
dec
data16
xchg
inc
es
push
or
das
hlt
push
popf
shll
lea
in
or
out
insl
mov
or
inc
pop
mov
adc
lock
pop
cmp
pop
cli
and
gs
adc
fwait
cld
lcall
gs
fs
lcall
mov
push
sti
aas
pop
lea
clc
addr16
and
xchg
xor
mov
addr16
push
sar
test
jge
mov
fnstsw
sti
inc
inc
arpl
cld
int
insl
movsl
pop
incb
leave
cmpsb
sub
jo
xlat
mov
cmp
mov
lock
and
mov
and
push
loopne
popf
pop
in
pop
add
fldt
mov
cmp
inc
iret
adc
nop
lds
push
push
cld
and
jecxz
dec
xor
and
push
mov
mov
iret
stos
jnp
sti
inc
leave
les
out
mov
cmp
push
repnz
adc
pop
rol
push
call
jge
sub
mov
movsb
push
int
dec
or
xchg
ret
pusha
js
sub
cld
lea
es
push
inc
popa
idivl
add
push
fildl
mov
pop
jo
je
arpl
data16
testl
add
inc
lret
push
jno
mov
sti
jp
pushf
iret
mov
mov
cld
mov
aad
cld
in
outsb
add
lcall
cmp
xchg
loopne
clc
jp
cmc
cmc
cmp
push
mov
add
and
test
in
enter
mov
dec
test
mov
jae
cmc
dec
imul
divl
push
movsb
repz
push
ret
mov
push
pop
divl
jg
loopne
add
rcl
push
xchg
and
das
sub
out
dec
mov
adc
rol
leave
push
cmpb
jbe
fwait
jg
sub
in
cmp
sbb
and
mov
push
in
mov
lock
leave
bound
outsb
inc
cmp
adc
xchg
pusha
inc
mov
cmp
add
xor
xchg
scas
xor
jb
cli
stc
fadd
out
or
cld
sahf
push
loope
xchg
arpl
stos
ds
mov
xor
pop
dec
add
lea
dec
lock
clc
jo
loope
sti
inc
mulb
insb
pop
cli
fcmovb
ds
pop
cmp
js
jb
pushf
cmp
xor
pop
adc
push
leave
pop
fistps
shll
mov
bound
mov
mov
adc
arpl
cmpsb
mov
xchg
mull
fists
xchg
pop
decl
and
repz
dec
inc
mov
cmp
cld
pop
push
inc
mov
rcrb
mov
mov
sub
inc
xchg
stos
fistps
cmp
es
sub
das
xor
xchg
cmp
movsl
mov
rcll
and
dec
loopne
xor
popf
push
jmp
xor
fs
push
sahf
sbb
xchg
mov
inc
push
xor
mov
insl
lods
jne
jge
jnp
xchg
popf
repz
jae
add
repz
jle
mov
in
dec
or
adc
mov
mov
jge
mov
jb
pushf
lea
clc
es
mov
mov
lcall
mov
gs
xchg
fistpl
sbb
mov
xchg
test
adc
imul
push
adc
add
add
and
jne
cmc
scas
loope
pop
pop
mov
xchg
mov
mov
jmp
push
push
xchg
jle
dec
imul
xchg
push
popa
xchg
pop
add
jnp
push
adc
scas
loope
sahf
push
mov
cwtl
or
xchg
lret
sbb
bound
data16
lock
gs
stos
pop
out
pop
into
and
out
inc
fnstsw
add
add
popf
push
pop
test
sbb
insl
aas
adc
push
and
inc
sti
and
add
fimull
xchg
enter
rcrl
repz
jecxz
fiaddl
lea
dec
imul
js
enter
xchg
mov
push
movsl
iret
and
iret
out
add
arpl
cltd
push
and
fcomi
inc
loop
xor
jl
loope
stos
push
push
pop
or
fdivr
call
adc
xchg
push
inc
aam
pop
cltd
add
sbb
push
fadds
imul
sahf
xor
adc
sarl
loopne
mov
or
adc
enter
mov
inc
xchg
xlat
adc
les
cmp
inc
cmp
pop
sub
adcb
movsb
mov
and
push
loope
lcall
cmp
mov
cmc
adc
imul
adc
outsb
outsb
subb
sahf
lcall
sub
adc
pop
adc
add
cld
cmpsl
mov
test
mov
lret
andb
sbb
xlat
in
lret
dec
add
ds
flds
data16
fs
in
mov
mov
adc
xchg
loope
addr16
rcll
push
popa
out
pop
pop
gs
pop
sbb
inc
jecxz
adc
add
insb
imul
pop
repz
mov
cltd
push
add
lret
inc
lahf
es
loope
xchg
popa
ja
out
std
lods
test
stc
leave
data16
cmp
adc
fstpl
dec
pop
in
mov
xchg
je
add
push
and
shll
pop
xchg
dec
add
xorb
pop
gs
lret
mov
addr16
xor
lods
inc
xchg
loope
xor
inc
push
mov
inc
mov
push
sbb
push
push
dec
fdivrs
lret
xor
mov
and
outsb
outsl
rclb
cmp
xchg
jl
inc
je
sub
xor
dec
fisttpll
xchg
adc
addr16
jns
pop
fldt
xchg
sbb
imul
add
sti
jno
mov
push
lret
push
dec
push
icebp
out
cld
sti
gs
jg
mov
test
push
lahf
insl
mov
cltd
cld
lcall
imul
dec
dec
cli
mov
mov
dec
pop
enter
adc
xor
fstl
mov
pop
sbb
and
dec
push
stc
mov
fistpll
std
sti
jae
fisttps
pop
pop
notb
jbe
sbb
addr16
movsl
mov
or
sub
iret
ss
fucomip
std
test
aas
shl
adc
daa
loope
es
dec
sbb
jge
sahf
mov
sbb
repz
mov
xor
in
scas
test
pop
daa
daa
dec
ja
or
cld
pop
pop
xor
and
push
jb,pn
dec
cmp
cmc
add
or
loope
dec
push
lock
sub
shrb
jae
enter
out
add
and
jo
movsb
jle
xchg
call
cmp
rcll
mov
push
es
or
rcl
idivb
decb
xor
repz
lea
pusha
or
std
adc
jp
mov
push
adc
enter
push
push
push
or
icebp
xor
mov
std
adc
test
aas
lods
sahf
aaa
mov
mov
js
sbb
je
fadd
leave
cld
mov
inc
pop
aam
cld
or
popa
xchg
fcoml
mov
orl
jns
in
inc
cmp
dec
add
lock
sahf
jmp
ja
jl
and
test
push
ret
hlt
xor
cmp
xor
mov
fwait
scas
inc
and
sbb
xchg
cmp
sub
sbb
in
xchg
loope
mov
cld
fdivr
popa
xor
xchg
addr16
mov
fistl
and
cmpsb
mov
pop
in
lods
popf
fidivrs
gs
mov
and
cs
scas
out
sbb
sub
jmp
adc
cmc
mov
jno
sub
loope
pop
jecxz
pop
jmp
mov
mov
cmp
in
cmpsb
sbb
dec
jae
jle
out
mov
pop
bound
and
int3
push
daa
imul
mov
pop
cmp
loop
xchg
int3
cmp
adcb
dec
nop
xor
pop
or
mov
xor
mov
data16
mov
icebp
sarl
mov
adc
and
pop
pop
subl
push
test
pop
call
cld
js
add
sti
das
leave
adc
dec
cmp
push
and
xor
int
pop
enter
or
mov
adc
adc
add
and
adc
out
das
imul
lcall
dec
push
or
test
aad
cld
jp
push
pop
sub
andb
sub
jmp
xchg
mov
cmp
or
enter
jp
mov
sbb
stc
dec
in
andl
push
dec
sbb
add
inc
sub
sbb
das
hlt
mov
cmp
pop
mov
push
movsb
jns
popa
pop
enter
int
cld
pop
and
dec
xor
push
mov
int3
xchg
adc
leave
pop
jno
xor
cli
push
ret
je
push
mov
xchg
cld
sti
pop
xor
xchg
arpl
cld
mov
xchg
add
push
out
in
adc
call
jnp
or
xor
push
dec
pop
xchg
jne
cmp
mov
loopne
xchg
enter
sub
enter
in
add
stc
jae
dec
inc
jg
cmc
mov
fnstsw
mov
and
add
fdiv
add
adc
mov
mov
cld
xor
data16
aad
mov
das
in
cld
pop
popa
sti
cmp
outsl
pop
lods
lds
fdiv
stc
xchg
pop
jns
insl
shlb
lahf
in
inc
in
xchg
lret
loope
hlt
cmp
hlt
popa
push
xchg
inc
push
in
lcall
cmp
loope
xchg
mov
and
pop
mov
inc
and
movsb
add
popa
jae
cmp
pop
xor
orb
xchg
cld
popf
push
sub
jns
xor
shl
das
daa
dec
addr16
fdivr
cmp
sbb
push
add
xchg
sti
add
push
mov
sub
mov
clc
aam
test
dec
and
cmp
push
fwait
adc
aaa
loope
in
sbb
leave
xchg
stos
xor
int3
inc
enter
add
sbb
cwtl
scas
and
fdiv
xor
bound
xor
out
addr16
add
jmp
loop
mov
adc
push
cli
jae
add
call
pushf
mov
jns
lret
pop
cmp
jnp
push
sub
arpl
jle
divb
lcall
add
test
add
jns
adc
std
dec
shll
jns
push
pushw
xor
shlb
mov
fstl
sbb
and
ret
mov
loop
push
xchg
js
cltd
or
jl
in
cwtl
inc
mov
cltd
push
or
in
aaa
add
popa
leave
push
adc
mov
in
mov
pop
jb
inc
loope
xor
fdivp
scas
loope
xchg
imul
add
test
mov
jp
mov
bound
insl
es
jo
and
testl
mov
pop
pop
cwtl
cmp
loope
movsb
cmp
loop
mov
loope
repz
jne
ret
cmc
or
or
fwait
mov
inc
shrl
and
arpl
or
lret
adc
mov
sub
pusha
sti
pop
pop
xor
fwait
aas
divb
shlb
pop
or
test
imul
lods
mov
jns
xchg
cmp
test
repz
fcmovnb
cltd
mov
push
xor
push
mov
xchg
push
inc
shrl
arpl
fadd
push
push
mov
repnz
sub
mov
or
or
pusha
imul
cltd
outsl
fdivr
fwait
movsl
leave
je
ret
hlt
or
inc
mov
lret
pop
test
sub
and
test
mov
xchg
mov
js
xchg
pop
and
sbb
sbb
push
push
test
cmp
outsl
xor
insb
arpl
add
jp
xchg
stc
lods
out
loope
fwait
xor
std
xchg
mov
add
test
or
push
xor
pop
pusha
or
outsb
sbb
cmp
fsubrs
mov
push
in
xor
popf
fstl
int
das
fsubs
insb
arpl
mov
xchg
add
out
iret
cmp
mov
pop
mov
push
or
and
fcmovnb
and
cmp
push
test
mull
daa
xor
cmp
in
pop
xlat
dec
lds
clc
scas
push
rorl
lea
xor
in
adc
cltd
scas
sbb
fldl
cld
jmp
bnd
sbb
or
push
and
push
sub
cmp
outsl
xor
pop
in
mov
pop
enter
cmpsb
sub
or
pop
loope
mov
sbb
std
into
mov
std
cmp
or
push
loope
or
pusha
fdivr
jmp
mov
insb
xor
dec
movsl
and
dec
data16
xlat
loopne
leave
xor
sbb
cld
arpl
xchg
sti
mov
in
mov
add
cld
jle
sbb
in
sahf
dec
cs
mov
pop
push
outsb
enter
je
pop
or
cmp
popa
adc
rcrl
adc
cmp
push
es
ret
iret
in
cmp
mov
cmp
and
add
loope
leave
negl
sub
push
and
stos
cmpsl
bound
xchg
sti
push
in
push
mov
loopne
push
loope
and
mov
add
pusha
clc
std
fdivrl
test
add
lods
mov
rorb
xor
stc
dec
test
das
adc
mov
pop
sti
add
push
in
out
and
out
xor
call
dec
out
or
insb
lcall
popl
lods
fldt
in
sahf
pop
inc
pushf
or
fwait
push
ljmp
movsl
std
jno
xor
sub
das
loope
sarl
les
addr16
leave
sbb
mov
idivl
push
mov
inc
push
inc
push
cmp
sub
add
xchg
and
mov
push
pushf
pop
lret
mov
push
cwtl
ljmp
mov
shrb
adc
or
stc
movsb
cs
lahf
mov
sti
mov
push
sbb
lds
enter
arpl
push
add
inc
imull
imul
sub
loope
inc
out
pushf
icebp
mov
cmp
in
imul
orl
aaa
mov
dec
push
jl
in
xchg
mov
mov
js
pop
or
xorb
lods
repz
shll
cmc
mov
cmc
xor
mov
lret
int3
cld
pop
enter
cmp
sti
in
add
sbb
xchg
ljmp
stc
push
and
enter
push
pop
fwait
dec
aad
sbb
add
inc
mov
lods
sub
lods
xchg
add
imul
and
or
sahf
mov
push
push
pushf
xchg
test
fs
jl
pop
lret
mov
in
pop
test
inc
hlt
out
sti
out
xchg
mov
sti
dec
jno
test
xchg
rorb
in
or
rcrl
mov
dec
pop
push
stos
push
fcomps
imul
push
dec
push
xor
sahf
stc
jmp
mov
inc
cmp
pop
shl
dec
rcll
dec
sbb
xchg
add
or
loope
cmc
add
fwait
mov
add
enterw
pop
lds
cmp
out
es
xor
cmp
pop
aaa
push
cld
push
xor
push
fildll
je
gs
xlat
cmp
push
nop
cld
dec
loop
mov
inc
loope
test
sub
mov
sahf
insb
inc
insl
insb
or
leave
pop
fists
add
pop
push
inc
adc
aaa
ja
js
sbb
mov
std
dec
mov
cmp
shrb
mov
inc
push
mov
push
pusha
decb
sub
ja
jno
mov
cmp
in
loope
sahf
ja
add
cmpsl
and
lock
mov
push
and
and
sti
pop
mov
aad
adc
pushf
push
bound
fwait
sar
test
lahf
push
jge
ret
out
pop
repz
mov
and
shrl
in
sarb
hlt
lds
in
mov
push
shrl
shlb
shrb
arpl
and
inc
and
adc
test
scas
or
mov
adc
mov
mov
data16
cld
push
aam
pop
fbstp
xchg
data16
rcrl
inc
inc
xchg
sub
mov
lcall
add
add
push
pop
and
jge,pt
ret
sbb
jae
push
push
jns
pop
dec
push
pop
adc
mov
push
cmpsl
sarb
in
rcrl
cmp
xchg
bound
mov
dec
mov
fsubrs
clc
cwtl
out
sti
pop
loope
popf
pop
popf
inc
cs
cmpsl
cmp
dec
scas
jno
and
xlat
pop
test
push
incb
xor
test
ficoms
in
cmpsb
cmp
lock
imul
jo
daa
sub
aas
and
test
leave
mov
add
cld
nop
insb
loope
lock
loope
pop
nop
add
jne
das
push
out
popa
in
imul
push
lock
idivl
pop
add
ret
mov
and
lcall
jmp
cmp
pop
pop
testb
leave
mov
aam
cltd
xchg
cmpsl
and
movsl
adc
or
movsl
sub
jmp
insb
dec
pop
dec
cwtl
push
pop
mov
aas
inc
inc
out
insl
cmp
xchg
jg
in
sub
cmp
dec
xor
cld
and
hlt
add
mov
scas
or
scas
inc
dec
out
xchg
test
xor
cwtl
mov
nop
dec
sbb
and
out
outsl
fstl
dec
or
mov
lods
aad
lods
mov
cld
cmp
push
testl
lock
pop
mov
dec
cmp
inc
icebp
outsb
xchg
push
gs
in
cmpsl
out
mov
xchg
mov
inc
and
mov
adc
fwait
mov
cmc
call
mov
inc
pop
repz
sbb
mov
enter
fucom
sub
xor
mov
gs
cld
lahf
fs
int3
gs
push
sub
jae
push
int
add
pushf
add
xor
lcall
insl
cmp
enter
lahf
stos
xlat
mov
arpl
xchg
fbld
addr16
lds
cmp
js
sbb
shrl
adc
bound
dec
cmp
fldl
and
adcb
pop
or
addr16
sahf
inc
jp
jg
pushf
loope
xor
loope
xchg
mov
popf
xchg
mov
loope
lock
sarb
sbb
in
data16
in
jns
push
mov
cmp
xchg
arpl
xlat
roll
xchg
mov
cltd
add
adc
mov
xor
mov
xor
sti
jno
dec
iret
ret
xor
xchg
cld
nop
scas
cmp
in
jle
sbb
add
sub
loop
adc
cmp
enter
leave
pop
push
mov
popfw
loope
adc
sbbl
add
sub
loope
popf
adc
pop
insl
enter
xchg
stc
aam
adc
jge
and
lcall
dec
in
idivb
cmp
fisubrs
int
adc
sti
std
js
xor
out
cwtl
jae
leave
xchg
pop
sub
mov
fwait
aad
andl
sti
mov
loope
cltd
fldenv
and
add
aad
into
mov
leave
sbb
shr
and
roll
scas
add
scas
push
loope
jne
cmp
push
mov
shrb
fimuls
test
sub
shrl
sti
inc
inc
jmp
repz
sbb
lods
sub
clc
mov
in
shr
rorl
inc
cli
dec
sti
jo
add
lcall
adc
cmpsl
hlt
push
mov
shrb
addr16
jnp
iret
mov
data16
dec
or
outsl
mov
mov
clc
push
pop
je
bound
das
shll
or
bound
push
cld
mov
in
in
push
stos
inc
mov
sub
jecxz
mov
in
and
not
in
sarb
mov
or
cld
pusha
and
mov
xor
xlat
test
or
adc
movb
xchg
imul
fdivrl
out
mov
lret
hlt
loope
dec
jmp
push
mov
mov
out
leave
dec
incb
fisubrl
cmp
and
cmp
imul
adc
in
and
xor
pop
sti
fwait
mov
or
leave
mov
loopne
add
mov
cmp
out
mov
scas
mov
lds
sti
push
dec
dec
fcomp
jnp
mov
add
les
fnstsw
imul
out
push
insl
sti
std
das
xchg
mov
decb
mov
xchg
adc
sbb
outsl
xchg
push
shrl
and
xchg
cs
adc
jno
rclb
jecxz
lea
xchg
ds
xchg
mov
roll
bound
sti
push
ds
jmp
sub
test
bound
movsb
or
xchg
adc
std
lahf
pop
xor
mov
stos
arpl
mov
cmp
and
iret
sub
pop
ret
add
mov
add
enter
cmp
call
lods
ficompl
push
push
mov
push
loope
ljmp
stos
inc
shlb
es
inc
stos
dec
ljmp
mov
hlt
sti
ja
cltd
movsb
sub
sahf
cmp
cmp
and
std
xor
jl
dec
idivb
lcall
adc
data16
mov
iret
arpl
mov
pop
lahf
ljmp
jb
loope
rorb
stc
sti
std
jg
cmc
mov
sbb
mov
xor
pop
pop
shll
lret
aas
and
ljmp
lahf
gs
jmp
div
mov
xchg
xchg
sub
push
out
hlt
dec
test
inc
inc
add
pop
add
jecxz
subb
fnsave
subb
mov
xor
sti
push
lret
imul
hlt
nop
mov
ret
leave
divb
xor
jae
in
cmp
xor
fldenv
inc
inc
int3
sbb
adc
dec
call
cmp
rclb
mov
ja
jp
cs
push
dec
mov
stos
paddsb
push
bound
ds
leave
ljmp
mov
scas
ficompl
inc
scas
push
xchg
sub
lds
popa
mov
es
jmp
push
das
fdivrl
aas
movl
cmp
repz
cmpl
or
adc
and
jl
js
stc
dec
movsl
daa
mov
push
jno
push
test
sti
dec
notl
xchg
adc
inc
pusha
bound
push
divb
mov
popf
fcoms
sbb
xchg
mov
aaa
jne
and
xchg
xchg
lods
xor
dec
xor
movsl
stos
and
sarb
in
cltd
jne
cmp
push
mov
test
inc
mov
shrl
and
and
ret
outsl
ja
in
sbb
dec
push
sbb
inc
adc
cld
ret
sti
mov
loopne
movsb
cmp
in
imul
jo
mov
andb
xor
cmp
and
push
cmc
daa
sub
in
sub
fsubl
insl
add
cltd
je
shrb
notb
and
pop
jae
cmc
fwait
outsl
inc
add
sbb
sub
loopne
jbe
mov
lret
out
orl
cmp
jecxz
lds
clc
pop
jno
shll
insb
std
lods
gs
fbld
jl
lods
aas
enter
pop
and
and
and
sahf
push
cmpsl
sbb
mov
mov
mov
xlat
je
int3
push
mov
in
fdivr
or
imul
leave
loope
mov
test
ljmp
std
mov
fs
push
cs
cmp
xchg
sbb
sub
and
aaa
xchg
in
clc
cmp
push
lock
popf
push
test
inc
sar
push
daa
negl
inc
mov
mov
xchg
insl
push
or
pop
mov
cmpb
fwait
lahf
xlat
mov
jne
imul
stos
or
sbb
and
mulb
pop
push
int3
pop
add
roll
sbb
mov
inc
rorl
sub
push
addr16
sub
aam
jns
sbb
arpl
jbe
in
out
mov
xor
test
aam
xor
mov
out
cmp
sub
insl
lods
inc
add
xchg
adc
test
rolb
arpl
xchg
inc
xchg
jns
mov
push
pop
aad
xchg
jno
inc
mov
mov
aam
adc
inc
shrl
pushf
mov
mov
cwtl
mov
pop
test
dec
nop
inc
repz
xchg
lock
andl
jae
xchg
mov
fwait
dec
mov
jl
rorb
inc
outsl
out
pop
pushf
pop
out
add
sub
lahf
cmpsb
sti
test
pop
lcall
mov
dec
imul
popf
clc
in
sarl
jnp
and
xchg
push
mov
pushf
adc
scas
and
loope
cmp
scas
mov
gs
add
lahf
adc
push
lahf
push
jnp
sbb
jle
inc
xor
test
push
pop
insl
push
push
dec
in
aaa
sbb
loope
and
sbb
pop
loop
fcmovb
pop
sahf
mov
mov
mov
out
pop
cmp
adc
icebp
std
jge
hlt
mov
lret
std
stos
jne
pop
shlb
ss
cmp
sbb
outsl
sbb
orps
les
xchg
pop
dec
adc
mov
or
xchg
lock
cmp
adc
hlt
xor
clc
sub
xchg
lods
mov
repnz
xor
add
dec
pop
popf
sub
mov
je
xchg
pusha
cmp
mov
adc
and
add
sub
jmp
or
jne
xchg
stos
sub
and
xchg
xor
jae
inc
daa
mov
mov
or
jge
test
mov
adc
jnp
mov
pop
xchg
cmp
and
nop
int3
jecxz
dec
dec
add
pusha
cmpsl
fwait
fwait
pop
in
sub
stos
lods
loop
jns
cld
xor
addl
hlt
mov
into
sti
mov
pop
and
cltd
mov
jns
lea
sti
call
repnz
mov
push
ljmp
pop
aad
jg
mov
xchg
xchg
out
jle
int
mov
xchg
or
and
mov
and
sti
xchg
mov
mov
xor
adcl
outsb
and
mov
pop
xchg
cmc
adc
pop
movsl
and
pushw
xor
int
lock
inc
sub
pop
sbb
mov
inc
filds
xchg
mov
imul
int3
pop
cmp
or
push
xor
sbb
addr16
cmc
xor
sub
mov
cmpsb
push
daa
iret
sbb
mov
pushf
xor
xlat
mov
push
push
dec
shlb
je,pn
jecxz
cmp
inc
xchg
sbb
push
andb
outsl
xchg
mov
add
pusha
mov
out
dec
cltd
leave
jmp
lcall
jmp
popf
cmp
into
cs
fwait
arpl
xor
xor
dec
es
shlb
xor
loop
dec
push
push
loop
xor
sbb
pop
jb
xor
test
and
xor
in
xchg
cwtl
dec
call
and
mov
stos
or
add
and
mov
xchg
xchg
and
adcb
xchg
scas
gs
add
xor
sub
cld
jmp
dec
sarl
pop
fstl
cmp
or
xchg
mov
movsl
pop
or
mov
hlt
inc
dec
cmpsl
dec
insl
adc
jg
lods
push
sbb
dec
out
pop
push
cmp
adc
xchg
push
cmpsl
xchg
sbb
pop
and
es
jo
cmp
sub
scas
xor
adc
push
mov
lcall
cmp
gs
adc
addr16
sarb
push
in
push
subb
xchg
jbe
mov
cli
mov
pusha
filds
or
mulb
sbb
jbe
movsb
jp
xlat
or
jns
lds
aaa
test
scas
inc
in
lea
mov
jp
cli
dec
and
mov
hlt
inc
in
dec
xor
test
add
mov
xchg
loop
scas
dec
dec
jmp
loopne
mov
push
sub
popa
xchg
lock
mov
mov
mov
dec
and
mov
push
jo
sbb
pop
mov
pop
iret
cmp
cmpsb
shrb
insl
sbb
lods
pop
aad
or
mov
inc
popa
dec
mov
loop
cmp
xor
cli
pop
xlat
fsts
lcall
js
sbb
mov
mov
inc
repz
mov
in
or
je
lret
leave
push
pop
mov
ja
ja
and
std
add
adc
inc
jbe
jne
int
xchg
jae
pop
pop
xor
data16
jle
xor
xchg
movsl
stos
push
ss
mov
in
mov
jl
ss
adc
movsb
pusha
adc
outsl
stos
popa
movsb
lahf
cmp
call
mov
nop
push
dec
ja
jmp
nop
gs
mov
popf
lret
sub
and
mov
dec
int3
int3
in
inc
ja
testb
lret
sbb
pop
arpl
pop
pop
jp
mov
pusha
cltd
push
loopne
push
sub
scas
or
lcall
js
or
jecxz
cmp
cli
out
sub
cmpsb
lahf
outsl
aaa
int3
ret
push
push
dec
xchg
push
popa
cwtl
cmc
jl
imul
xor
dec
xchg
cwtl
xorb
and
and
dec
imul
outsb
sub
icebp
jae
xchg
push
lods
sub
mov
mov
dec
rorb
adc
sub
jbe
movsb
sbb
jno
mov
cmp
rorb
clc
stos
cld
or
mov
andl
dec
dec
hlt
cmc
pop
or
add
sarb
xchg
inc
testb
int3
insb
sub
and
mov
push
iret
out
scas
test
mov
dec
mov
pop
call
mov
push
bound
int3
jns
push
mov
daa
sbb
xor
icebp
or
aam
loope
movsl
push
gs
mov
and
push
dec
pushf
cmp
push
adc
mulb
xor
fchs
push
mov
stos
and
out
dec
mov
stc
jne
imul
rolb
and
orl
xchg
xor
scas
pop
pop
jbe
lods
ljmp
test
add
sbb
fisubrs
cwtl
fs
dec
dec
jnp
cs
popf
cmc
push
jns
push
fs
cmp
cld
inc
fsubr
xlat
enter
mov
ds
roll
push
and
mov
mov
cmp
push
dec
and
inc
es
mov
xor
and
sbb
lcall
mov
in
stos
or
scas
incb
and
xchg
addr16
mov
pushf
push
stos
mov
mov
xor
cmpsl
mov
sti
xor
out
sub
pop
sahf
jg
lods
push
mov
out
sbb
dec
mov
push
xor
jo
push
and
jp
insb
and
lret
dec
std
mov
xchg
inc
out
out
xchg
lcall
int3
mov
hlt
je
cmpsb
mov
sub
mov
mov
mov
aam
cmc
cwtl
sti
or
mov
hlt
jg
mov
fisubrl
mov
repnz
scas
jnp
cmp
pop
inc
sbb
adc
mov
sti
jp
and
inc
adc
pushf
dec
mov
xor
sub
xchg
inc
mov
mov
cwtl
and
push
pop
loop
movsb
stos
push
lcall
popf
aas
int3
and
xor
and
mov
out
ljmp
inc
pop
mov
lret
xchg
cli
mov
xchg
or
lret
sbb
push
and
dec
mov
lahf
add
mov
bound
and
sbbb
fs
std
mov
cmp
cmp
dec
mov
push
sub
lock
cmp
std
int
popa
ljmp
shll
outsl
mov
jnp
les
addl
fiadds
adc
repnz
movsb
sahf
pop
lods
pushw
in
add
mov
je
pushf
jecxz
js
pop
mov
xchg
pop
dec
outsl
inc
cmp
clc
lahf
jg
flds
sub
sti
rcll
pop
dec
and
lahf
adc
jnp
mov
subl
push
and
test
xchg
mov
scas
mov
scas
push
ja
push
cmpsb
xchg
les
inc
mov
je
lea
lret
inc
dec
sarl
mov
insb
and
lods
ret
dec
cmc
addl
dec
in
inc
mov
testb
and
lret
push
cmp
push
adc
addb
ja
dec
xchg
xchg
ljmpw
data16
test
dec
sbb
in
lds
les
pop
dec
pop
clc
orl
test
xorl
lods
or
in
mov
xor
and
jp
xlat
mov
jno
pop
and
into
mov
push
sar
sub
nop
pop
int
and
sbb
and
outsl
mov
jmp
adc
push
js
scas
add
in
fisubl
outsb
push
xchg
cmp
xchg
cmp
mov
inc
sbb
cwtl
or
push
arpl
pusha
adc
pop
pop
les
and
in
push
fs
mov
and
test
xlat
mov
insl
ror
mov
popa
loope
mov
add
mov
hlt
jmp
xchg
xor
aad
push
push
test
xor
jmp
repnz
jmp
pop
dec
sbb
adc
dec
dec
mov
jp
ret
loop
adc
lods
inc
clc
cli
cmp
xor
repz
subl
shl
test
bound
jne
mov
aas
add
scas
mov
addr16
out
out
les
fsubrl
push
pop
or
aas
or
imul
xchg
push
nop
mov
jnp
into
lea
push
testb
faddp
fmull
push
mov
mov
nop
arpl
inc
arpl
loopne
cmpsb
xor
inc
insb
and
jnp
imul
xorps
xchg
and
inc
outsb
int
bound
lods
pop
ret
hlt
ret
test
loope
shrb
sub
mov
loope
lods
add
dec
adc
sub
loope
add
mov
lret
push
pop
les
adc
sbb
leave
bound
lahf
mov
rorb
dec
adc
xor
pushf
mov
mov
insl
xor
bound
push
sbb
push
loope
or
leave
insl
rcrl
imul
and
inc
mov
rclb
sahf
outsl
add
shlb
bnd
push
loope
sarl
cmpsb
sub
sbb
push
rorb
ret
nop
jp
inc
push
out
imul
mov
push
insl
ret
popa
xor
sub
insb
xlat
sub
cmpsb
outsb
ret
cmp
pop
pop
movsl
clc
inc
add
popa
or
out
push
push
lahf
sub
sub
cmp
dec
fstl
mov
jbe
mov
inc
addr16
jmp
ds
or
cmp
icebp
int3
cmp
adc
xor
add
jl
insl
xor
popa
and
mov
inc
scas
fiadds
jmp
or
add
mov
lahf
iret
jle
xchg
adc
xchg
in
dec
fst
jle
pusha
sbb
add
addr16
gs
jge
sbb
out
mov
sahf
xlat
cltd
adc
lahf
ja
or
les
jne
and
sbb
call
inc
cwtl
in
inc
dec
adc
iret
fs
es
mov
mov
insl
leave
pop
addr16
mov
out
dec
sub
jns
jmp
adc
out
addr16
push
inc
jbe
add
scas
lock
ret
add
js
inc
orb
js
cli
lods
mov
orb
mov
push
out
leave
pop
inc
push
outsl
cli
dec
cli
jae
movsl
insb
lods
call
xchg
mov
insb
xchg
mov
leave
sbb
std
xchg
or
cltd
pusha
and
in
mov
push
pusha
popa
sub
xchg
and
ret
fcmovne
jnp
jecxz
xor
push
or
jbe
cmpsl
cmp
sbb
add
sbb
sbb
aad
adcb
push
xorl
rolb
cmp
cld
sub
test
sbb
hlt
inc
lds
hlt
out
inc
adc
sti
adc
dec
push
call
andl
mov
mov
inc
lret
pop
xlat
lock
push
inc
or
mov
lock
sbb
sub
lcall
pop
lahf
insb
sub
out
loopne
or
push
inc
decb
test
lea
xchg
test
imul
cmpsb
add
inc
mov
mov
mov
push
mov
sbb
sub
sahf
mov
push
jecxz,pt
cs
fcompl
adc
cmpsb
aad
inc
movsl
xchg
cmpb
pop
or
rcrb
ret
push
cs
push
mov
mov
sarl
xor
xor
push
push
fcmovne
ja
ficoms
pop
pop
iret
mov
inc
or
add
or
dec
xchg
xchg
jl
mov
dec
fiadds
dec
mov
rcrl
stos
call
or
adc
pop
adc
mov
xchg
int
adc
push
jo
leave
ljmp
push
mov
pusha
xor
test
mov
cmc
xchg
mov
sbb
ret
jge
repnz
lods
gs
inc
out
mov
adc
xchg
or
sahf
mov
mov
loopne
mov
and
fdivr
xchg
mov
outsb
js
cmc
xor
lods
push
dec
add
xchg
cltd
cpuid
adc
pop
adc
in
push
enter
mov
dec
out
test
ffreep
jl
inc
rcl
xchg
jno
push
push
and
fdivrs
pop
cmpb
push
push
popa
cwtl
pop
mov
xor
or
mov
mov
enter
inc
dec
dec
dec
das
iret
xor
leave
jmp
cmpb
adc
jecxz
les
jo
pushl
add
jg
movsl
loop,pn
push
nop
popa
lods
xorl
in
scas
mov
aam
in
leave
mov
fnstenv
dec
aas
push
cmpl
add
xor
and
sti
out
repz
fs
rolb
cld
ljmp
cltd
dec
std
sbb
sub
mov
lods
pop
sbb
mov
repnz
ljmp
lock
das
test
sbb
inc
inc
add
cltd
inc
bound
sub
xchg
aam
sbbl
dec
xchg
sbb
pop
sbb
movsl
adcl
sti
es
and
mov
inc
enter
outsb
fs
movsb
mov
les
sbb
scas
leave
jl,pn
mov
mov
jbe
mov
xchg
jl
lds
add
push
cmpb
cmpsb
add
rcl
das
clc
jecxz
xchg
adc
stc
push
mov
sub
push
fsubs
popf
sarb
pop
fisubs
or
fsts
inc
mov
or
das
adc
jbe
repz
insb
hlt
lods
xor
cmc
mov
lahf
push
int
inc
pop
outsl
sub
mov
insl
lcall
mov
mov
mov
adc
mov
ja
pop
aam
jge
or
or
fdivr
adc
mov
pop
dec
push
inc
imul
cmp
std
and
mov
mov
sub
inc
or
out
xchg
pop
pop
cli
arpl
inc
and
xor
add
mov
cli
sub
mov
jecxz
pushf
xchg
lods
mov
xchg
jle
and
xor
ds
jae
test
mov
shl
popa
lods
int
mov
in
out
sbb
sub
push
xchg
add
mov
test
pusha
outsl
cld
lods
mov
mov
jle
xchg
dec
rolb
insl
and
rcr
stc
fwait
sarl
dec
out
cld
push
mov
mov
mov
stos
loopne
lds
mov
pop
fsubrp
push
mov
frstor
xor
and
adc
add
call
sbb
lods
insb
test
mov
mov
adc
push
pusha
sbb
stos
jne
mov
xor
or
fildll
and
dec
mov
dec
mov
and
jge
stos
mov
test
ret
test
sahf
mov
je
push
inc
jnp
mov
adc
push
jge
jecxz
shll
clc
test
test
mov
adc
add
movsl
je
ret
sbb
and
mov
xor
push
jne
jmp
frstor
in
mov
xchg
mov
pusha
and
jae,pt
push
adc
add
mov
enter
insl
test
and
xor
ret
mov
add
and
ds
xor
dec
jp
dec
ret
fbld
inc
insb
or
rclb
jge
mov
adc
xor
mov
mov
mov
adc
pusha
sbb
scas
jne
mov
mov
and
fbstp
mov
pop
mov
mov
adc
push
roll
mov
add
and
ds
xor
inc
jb
int3
mov
inc
add
jns
repz
adc
push
xchg
fsubl
std
add
jg,pt
and
cmp
and
mov
lock
and
sbb
ret
jne
mov
ds
push
mov
insl
cmp
aas
aad
adc
enter
jp
mov
adc
push
orl
jne
mov
mov
repz
sub
add
lds
ret
mov
insb
dec
and
pop
jae
mov
mov
adc
push
leave
test
lods
mov
pop
movsb
nop
std
das
mov
adc
andl
xor
out
jne
mov
sbb
xor
jae
mov
mov
adc
and
xor
sbb
out
ret
xchg
ret
and
in
movsl
je
ret
sbb
mov
dec
mov
mov
adc
ljmp
and
dec
adcl
xor
push
mov
lock
cmp
sbb
out
xchg
lea
dec
jb
push
xchg
push
stos
inc
popf
add
and
jecxz
scas
rcrl
or
mov
adc
xorl
xor
jne
mov
inc
adc
add
shll
lods
fistps
jae
mov
mov
adc
push
jge
out
fstl
push
add
cmp
test
cmp
fsubrl
jae
shrb
pop
std
fidivl
mov
dec
mov
xchg
xchg
cwtl
arpl
xor
xchg
aas
lea
mov
ret
sub
mov
call
daa
add
mov
xchg
ret
pushf
fildll
mov
push
stos
mov
adc
push
jno
xlat
and
xor
ret
cltd
dec
add
cmp
insb
add
jbe
pop
ret
pop
fucomip
mov
xor
adc
es
mov
xchg
enter
add
and
cmp
addb
pop
je
ret
cmp
push
mov
jle
arpl
fldl
jae
mov
mov
adc
and
xor
push
jne
mov
lret
adc
mov
mov
insb
inc
jae
mov
ljmp
faddl
int
negl
loop
dec
roll
and
ds
xor
push
outsb
je
ret
push
fcomip
mov
sbb
stos
fnstsw
pop
out
loop
int3
mov
dec
scas
frstor
pop
add
and
adc
add
call
and
adc
dec
jp
push
ret
pusha
fbld
inc
inc
add
jge
mov
adc
add
lret
xchg
mov
fs
xchg
cmp
xor
and
adc
mov
cld
jnp
mov
cmp
pusha
cmpsb
in
mov
dec
push
pop
xchg
push
stos
inc
mov
aas
xchg
pop
leave
enter
test
sahf
stc
out
bound
jo
ficompl
lods
repz
mov
push
lods
inc
add
cmc
inc
sbb
popa
mov
mov
gs
jo
and
mov
cmp
and
cmp
lahf
pop
sahf
push
mov
sub
push
testb
xor
or
or
dec
pusha
mov
add
mov
push
jne
mov
loopne
fisttpll
mov
enter
aas
fsubp
mov
sbbl
pop
sbb
cwtl
jnp
int
push
add
mov
pop
sbb
pop
imul
ljmp
and
out
movsb
out
nop
mov
add
cmp
lods
mov
jp
fwait
mov
mov
gs
mov
dec
xorl
push
bound
js
cmpsl
inc
pop
enter
test
pop
mov
into
or
mov
jge
test
or
push
jp
dec
jns
aam
repz
stos
addr16
pop
sub
inc
repz
mov
stc
push
sub
mov
lock
sbb
ljmp
sbb
mov
add
inc
mov
int3
push
aad
jmp
pop
fdivr
jp
repz
test
je
add
int3
sti
inc
mov
add
and
sbb
xor
pop
mov
outsl
xchg
adc
mov
jns
or
movb
lds
mov
popf
rcll
stos
bound
push
rcrb
mov
hlt
and
xlat
sti
dec
xchg
mov
and
cmp
mov
adc
xchg
lahf
cmp
adc
test
add
inc
iret
rcrb
xlat
movsl
jne
and
and
imul
mov
std
leave
cmp
jecxz
lods
add
cmp
or
adc
call
popf
cmp
dec
mov
mov
jne
mov
in
xor
mov
adc
pop
and
neg
adc
cmc
incb
cli
pop
add
mov
into
cli
mov
push
dec
xacquire
sub
sti
add
jmp
fidivrl
ss
add
dec
jge
inc
mov
aam
mov
out
stc
adc
add
into
jbe
cld
mov
push
or
daa
cmp
mov
mov
test
int3
test
cmp
arpl
jo
fnsave
lds
lcall
pusha
enter
mov
roll
sti
xchg
loopne
jl
lret
adc
push
xor
xchg
dec
inc
inc
into
mov
insl
lods
mov
mov
sti
shrl
imul
rcl
idivl
xchg
push
lret
xchg
xchg
lods
lods
das
dec
xchg
lret
or
pusha
std
neg
pop
dec
out
mov
icebp
subl
jno
push
test
hlt
fs
scas
jae
insb
inc
jns
sbb
push
int3
in
mov
and
push
imul
iret
shrb
inc
mov
sbb
mov
mov
mov
popf
xchg
mov
sub
lahf
pop
jmp
fbld
clc
cmp
adc
aad
adc
pop
cltd
mov
mov
mov
mov
stc
sbb
movsl
out
adc
cmp
mov
hlt
xchg
mov
mov
aas
push
xor
sbb
in
cs
push
push
cld
test
xchg
lods
sbb
inc
int
test
mov
sbb
jae
dec
cmp
mov
mov
call
lret
dec
pop
jmp
dec
iret
jle
and
mov
bound
ljmp
mov
add
into
hlt
mov
mov
add
or
inc
test
xchg
test
test
jae
lret
or
lods
xorl
stos
testb
sub
sbb
or
add
or
push
mov
stos
xchg
xor
cmpsl
pop
xchg
repz
sub
mov
jg
push
jmp
or
pop
mov
flds
mov
pop
or
mov
lret
sub
fdivs
int
test
xor
andl
out
ss
fldenv
or
mov
mov
mov
psrlw
in
test
add
mov
push
sub
repz
dec
or
sbb
out
and
lret
xchg
popf
xor
inc
sub
out
in
insl
cltd
lock
cld
hlt
scas
cmc
and
add
xor
sbb
lods
test
repz
add
and
fs
adc
jecxz
push
stos
iret
dec
push
push
aas
inc
scas
test
out
sbb
mov
sar
into
xchg
fcoms
push
jno
adcb
ds
lret
sbbl
leave
push
sub
pop
repz
mov
mov
mov
fiaddl
push
mov
test
mov
ds
mov
push
push
push
sbb
fldt
cmp
mov
sbbl
inc
cmp
pop
and
icebp
outsb
sbb
cmp
fidivrs
mov
js
mov
insl
bound
hlt
leave
dec
pop
and
mov
xor
pop
lcall
dec
je
movsl
popa
jmp
les
mov
fldl
ret
lret
int
mov
mov
mov
xchg
mov
stc
leave
push
jne
sbb
mov
add
lock
push
inc
iret
sbb
scas
jmp
dec
arpl
mov
xchg
ret
xor
stos
xor
dec
lcall
push
cmp
jg
dec
outsb
mov
mov
mov
bnd
orb
bound
jno
dec
push
mov
dec
push
lock
movsb
sti
add
clc
out
lds
mov
jmp
xchg
loope
jp
push
adcb
xor
mov
dec
xor
rclb
xchg
outsb
mov
xor
cmpsl
dec
mov
test
daa
xor
push
into
les
xchg
cmp
les
push
mov
addl
dec
push
fwait
enter
ljmp
dec
cmc
aad
aam
mov
outsb
fcoml
and
adc
sbb
mov
lds
adc
add
and
sahf
mov
inc
mov
or
scas
pop
leave
fs
xchg
adc
xchg
jg
mov
insb
rolb
adc
mov
sbb
int3
sbb
pop
ficoms
ret
inc
sbb
add
rcll
loop
test
ss
sbb
lods
add
fistl
add
mov
xlat
push
xchg
pushf
jb
xchg
jae
mov
xlat
mov
pop
cmpsb
mov
xor
sub
mov
imul
rcr
or
jl
mov
clc
mov
mov
sbb
mov
imul
or
aad
data16
pop
enter
or
push
push
out
pusha
dec
xchg
flds
imulb
out
mov
fs
mov
testb
xchg
lods
jb
xchg
cmp
sbbb
pushl
sbb
movsl
cld
cmp
cmp
mov
or
add
ds
fiadds
mov
add
mov
add
stos
pop
loopne
mov
out
inc
inc
mov
shlb
jecxz
ret
cld
rcrl
in
sub
xor
and
ss
sti
add
adc
jo
filds
lret
adc
add
sahf
inc
sub
sbb
jl
pop
mov
orl
not
pop
mov
mov
mov
sub
icebp
jae
or
std
jp
fwait
mov
adc
sub
or
into
push
push
cmp
fistps
in
adc
lret
in
xchg
mov
mov
in
add
int3
jp
gs
rcll
jmp
fdivl
int3
clc
xlat
repz
adc
fstps
pusha
dec
mov
shll
mov
mov
shll
push
jg
add
aaa
imul
hlt
xorb
mov
xchg
cwtl
ror
inc
or
cli
and
mov
shll
or
leave
mov
xchg
out
ljmp
jnp
out
jnp
push
adc
or
xlat
addr16
pop
jge
repz
mov
ret
or
addb
loop
aam
lods
call
mov
in
add
dec
sbb
mov
inc
mov
roll
cmp
imul
sarb
push
leave
sarb
call
dec
lds
mov
inc
addr16
and
mov
push
addr16
ret
stos
test
mov
jne
sub
scas
sti
jnp
sahf
shlb
jmp
lcall
mov
mov
mov
nop
jp
add
outsb
js
cltd
jmp
hlt
dec
or
push
sub
mov
imul
data16
inc
lods
mov
cli
jg
sbbl
or
mov
ljmp
loop
xor
and
sarl
dec
ss
jb
inc
push
inc
push
or
mov
in
ljmp
daa
mov
ja
cmp
es
fists
xchg
shl
test
xor
mov
cmp
xor
ficoml
fisubrl
stc
xor
repnz
lea
lret
push
lahf
loopne
dec
jbe
rolb
loope
je
cli
sahf
pop
push
test
cmp
cmp
enter
js
inc
repz
xor
nop
pop
clc
xchg
jge
clc
arpl
cld
lahf
mov
xchg
and
cmc
xor
jecxz
insb
dec
fldcw
push
aad
clc
and
test
sub
iret
aad
stos
jns
mov
out
push
in
cmpb
std
cmpb
mov
mov
sbb
call
sub
mov
pmulhuw
outsb
sar
xor
sbb
les
xlat
loop
mov
jb
mov
mov
dec
mov
cmp
lret
pop
jmp
inc
mov
inc
mov
cmc
xor
iret
push
cltd
adc
daa
int
shl
and
sbb
imul
xchg
mov
int
inc
sar
adc
cmpsb
sbb
inc
popf
mov
jecxz
lods
dec
inc
inc
and
int3
test
cmpsl
notb
dec
mov
orb
push
dec
lods
outsl
jne
mov
inc
out
and
add
or
sbb
shll
cmpb
sub
ss
push
mov
pop
insl
jmp
add
sbb
rorb
xor
xchg
add
xchg
sub
pop
cld
test
xlat
jb
dec
mov
xlat
jp
lds
repnz
and
xchg
std
mov
rolb
and
fmuls
repz
inc
push
add
xchg
clc
pop
sahf
and
test
jns
imul
ja
cltd
aam
sbb
insb
mov
sbb
enter
ret
cld
pop
or
ret
mov
mov
clc
pop
lods
dec
push
mov
orl
shl
rcrl
mov
pop
adc
inc
je
rclb
xor
jg
or
cmp
push
push
or
xchg
inc
mov
arpl
out
jne
setp
cmpsl
pop
mov
add
sub
xchg
and
rcrb
jmp
cmp
pusha
inc
stos
ss
or
aas
push
in
movsl
pushl
sbb
mov
test
and
pop
xchg
lock
test
movsb
repnz
push
jmp
xorl
pop
mov
inc
mov
jmp
sahf
lods
xlat
std
sub
sbb
mulb
test
f2xm1
test
lret
dec
shlb
sub
gs
and
imul
mov
push
icebp
icebp
push
fldl
cmp
loopne
ljmp
sbbl
xchg
out
or
pop
std
loopne
clc
addl
in
int
fistl
mov
push
jae
mov
aam
sub
jae
shlb
jge
mov
adc
add
fidivs
mov
push
and
cmp
je
push
push
push
ret
pop
fbld
dec
insb
add
mov
adc
push
jns
out
and
aad
lock
cmp
cmp
cwtl
fildll
mov
jo
dec
and
adc
and
xor
scas
pusha
add
mov
icebp
adc
add
shll
test
xchg
mov
mov
mov
adc
and
jmp
mov
mov
out
fnsave
ret
fmuls
jae
mov
mov
adc
cmp
mov
pop
loop
or
fisubs
xchg
or
inc
fldl
add
mov
int3
mov
mov
adc
push
xorl
xor
jne
mov
inc
jno
aam
cmpl
add
call
pop
mov
adc
or
orl
xor
mov
jne,pt
mov
pop
xchg
pop
mov
and
adc
add
jne
ret
or
mov
in
adc
mov
sub
pusha
mov
xchg
jne
mov
ds
jo
inc
and
ds
aas
mov
sbb
and
and
clc
mov
jne
push
hlt
push
les
jae
mov
mov
adc
and
xor
jne
mov
scas
xchg
or
inc
loope
cld
cmp
outsb
sahf
int3
fidivrs
mov
cmp
stc
cmp
addb
data16
ret
push
fcomip
mov
jnp
mov
adc
push
jns
jmp
leave
xor
test
dec
les
adc
add
mov
cwtl
ret
cwtl
fildll
mov
jo
push
cmp
adc
jge
loopne
pusha
add
addr16
adc
mov
jne
ret
mov
xchg
ss
cmpsb
stc
jp
mov
adc
orl
pusha
inc
in
cli
data16
xchg
and
inc
jns
in
and
cmp
xchg
xchg
in
xchg
mov
adc
aaa
xor
jmp
mov
mov
pusha
mov
mov
adc
xorl
out
addr16
sbb
mov
insb
test
xchg
mov
mov
adc
test
mov
push
dec
push
fisubrs
lods
cmpsb
jl
ret
rcr
push
les
jae
mov
mov
adc
push
addl
pusha
inc
in
push
jne
mov
and
paddb
cltd
in
fidivs
mov
mov
adc
in
aas
movsb
pusha
mov
cmp
mov
xchg
push
scas
inc
mov
cmp
aas
int
lock
mov
lret
sbb
adc
rcr
mov
pushf
mov
mov
adc
and
xor
adc
mov
mov
sti
ret
loopne
mov
dec
mov
push
cmp
dec
jnp,pt
pop
adc
add
inc
filds
mov
sbb
and
jge
mov
adc
add
fcmovu
loop
enter
add
and
ds
xor
inc
jp
push
ret
pusha
fistps
push
insb
hlt
jae
mov
mov
adc
push
leave
test
pop
popa
out
push
inc
test
cmp
inc
add
movsl
je
ret
nop
fildll
mov
je
push
inc
jnp
mov
adc
adc
out
scas
jne
mov
adc
fnstenv
ret
enter
mov
mov
mov
adc
addl
pusha
push
in
divb
mov
push
xchg
and
inc
roll
hlt
and
xor
loope
insl
in
int3
mov
mov
adc
cmc
andb
xor
in
pop
jne
mov
push
xchg
xor
inc
imul
jmp
leave
adc
sbb
cli
sbb
cmp
inc
add
movsl
je
ret
xchg
fbstp
mov
push
mov
push
mov
xor
and
out
mov
add
icebp
xor
cmc
loop
loop
into
out
jle
mov
fstpl
pop
jg,pt
sub
push
je
ret
inc
filds
mov
and
es
out
mov
adc
add
fidivs
mov
push
and
arpl
sub
push
fucomip
mov
jge
mov
adc
push
leave
test
mov
xchg
fsubl
cmp
sbb
dec
xor
stc
lea
jo
push
mov
dec
mov
push
imul
in
lret
mov
cmp
cmp
sbb
fildll
mov
push
lahf
mov
adc
and
xor
scas
pusha
add
mov
stc
std
adc
or
fbld
pop
jnp
mov
adc
and
xor
adc
mov
mov
clc
incl
xchg
jl
ret
fcomp
loop
aam
insb
jae
mov
mov
adc
inc
xorl
xor
jne
mov
push
xchg
sub
inc
addl
notl
test
adc
adc
xor
xchg
inc
jne
mov
notb
add
and
out
leave
adc
outsl
enter
sbb
and
xor
icebp
movsl
je
ret
mov
xor
pusha
mov
mov
adc
push
pusha
sbb
scas
jne
mov
inc
mov
jl
ret
outsb
mov
mov
pop
mov
adc
addl
pusha
push
in
divb
mov
inc
jge
loopne
lds
inc
lods
mov
shlb
mov
mov
adc
adcb
xor
jp
inc
jne
mov
xchg
push
cmpsl
inc
test
mov
aas
imul
jne
ret
lock
dec
bound
adc
std
mov
mov
adc
inc
cmpl
xor
jne
mov
es
adc
inc
fldl
add
mov
int3
mov
mov
adc
add
je
pusha
push
push
jne
mov
xchg
cmp
inc
imul
out
aas
fstl
add
mov
adc
or
orl
xor
ljmp
xchg
insb
xchg
inc
xor
cmp
aas
insl
adc
add
jne
ret
add
lea
lret
rorb
mov
loopne
fdivs
mov
cwtl
jae
mov
mov
adc
and
xor
jne
mov
ret
push
mov
std
aaa
cmp
jmp
adc
add
jb
pop
ret
fbld
push
insb
clc
jae
mov
mov
adc
push
roll
in
inc
lods
adc
dec
sti
das
es
cmpsb
in
cmpsb
jne
mov
inc
xchg
insb
xchg
inc
inc
add
and
adc
add
jne
ret
or
mov
cld
dec
add
xor
out
push
les
xchg
movsb
pop
cmp
pop
jg,pt
xor
add
je
ret
cmp
push
mov
adc
stos
leave
jge
mov
jne
mov
dec
mov
push
cmp
pop
cmpl
adc
add
dec
je
ret
cmp
or
adc
stos
lds
mov
enter
xchg
enter
add
and
cmp
fs
jle
push
ret
insb
fistps
pop
insb
lock
mov
mov
adc
push
jns
jmp
leave
xor
test
insl
fs
or
xor
nop
pusha
stos
in
xchg
jne
mov
ds
jl
inc
xor
and
dec
cmp
dec
shl
and
sbbl
sbb
sub
xchg
outsl
mov
xor
pop
and
insl
push
add
cwtl
fcompl
call
rcrl
fcoms
xchg
and
in
pop
jl
add
jmp
xchg
inc
push
loopne
outsb
sti
pop
and
xchg
pusha
outsl
pusha
ljmp
push
sahf
push
mov
mov
cli
das
movsl
mov
enter
popf
add
sarl
mov
insl
jae
test
bound
pop
sbb
fcmovbe
push
mov
pop
enter
pop
nop
shll
cmp
pop
lcall
jnp
add
stos
in
cwtl
cld
daa
xor
push
mov
fmuls
or
es
jb
xor
dec
cs
add
push
dec
lcall
pusha
push
mov
push
mov
imulb
int3
jmp
add
mov
dec
xor
push
jno
leave
xlat
add
shrb
xlat
xor
push
aas
push
xchg
imul
bound
fwait
gs
imul
pop
push
rcrb
out
addr16
ss
ficoml
cld
repnz
lds
enter
add
or
frstor
arpl
or
xor
orb
inc
xchg
rclb
sti
xchg
push
lods
jae
or
ljmp
cmpsb
push
or
jnp
dec
fnsave
jnp
cmc
outsl
repz
sbb
repz
repz
push
test
int3
inc
ds
int3
sub
and
adc
jle
inc
fisttps
xchg
ret
and
ja
mov
imul
scas
xor
movl
xor
adc
icebp
repnz
push
and
push
popa
inc
and
add
dec
sti
sbb
push
add
mov
or
shll
arpl
mov
mov
cmc
and
push
cmpsb
lods
repnz
and
mov
movb
shl
xchg
add
movb
xlat
dec
xchg
addr16
xor
jg
pop
inc
fs
and
dec
cmpsb
aas
sbb
pop
mov
sub
sbbl
dec
loop
xchg
leave
outsb
pop
rcrb
movb
imull
loop
and
daa
test
sarb
js
sbb
inc
fwait
iret
sbb
les
and
dec
mov
data16
dec
pop
lods
dec
xor
test
mov
lret
fwait
mov
bound
pop
insl
pop
imul
idivl
xchg
cmpsb
fs
daa
leave
pop
popf
imul
cmc
pop
daa
push
cld
out
cs
ret
insl
out
sbb
leave
inc
jne
xorb
sub
mov
lock
enter
sti
fs
hlt
rorl
xor
adcb
enter
sub
sbb
fldl
cmc
fisttpll
dec
xchg
mov
push
imul
mov
xchg
data16
xor
ds
xchg
jo
xor
aaa
push
jmp
push
inc
push
pop
pop
sub
int3
or
sbb
xor
and
sbb
jne
mov
imul
mov
sbb
add
and
pop
insl
add
mov
push
dec
inc
test
insb
enter
cmp
out
loope
cmpsl
movsb
push
jb
pop
cmp
dec
loopne
pop
test
stc
sub
mov
lds
into
and
add
mov
mov
mov
data16
loopne
add
int
cmpsl
adcl
push
mov
ja
adc
cld
xchg
je
add
sbb
cld
lea
std
mov
fstpl
jle
mov
das
mov
pushl
daa
mov
xor
fs
fstps
xchg
or
loope
insl
sbb
lret
mov
add
xchg
movsb
xchg
cmp
sbbb
addr16
outsl
lods
repz
dec
jmp
inc
dec
bndldx
ljmp
popf
adc
mov
cld
popa
mov
in
dec
sub
sub
out
dec
inc
add
fs
les
mov
or
sbbb
fstl
jg
dec
daa
jo
inc
cli
fildll
ja
enter
pusha
cmp
sub
dec
dec
or
pop
out
loope
lods
js
push
aas
popa
mov
xor
sub
in
xchg
sbb
mov
imul
push
and
mov
mov
bound
in
xchg
and
push
inc
add
mov
out
pop
pop
cli
stc
cmp
jne
mov
xchg
cmpsl
cltd
sarb
jge
adc
mov
jmp
jg
leave
jl
cld
in
inc
aad
pop
in
cmp
out
mov
clc
jne
lds
inc
sub
sub
jae
jb
mov
inc
add
leave
leave
clc
pop
xor
std
iret
cwtl
cmp
inc
lcall
mov
data16
clc
ror
or
inc
mov
and
leave
pop
iret
push
leave
fdiv
cmp
xor
xor
dec
lea
lods
push
jmp
mov
outsl
lods
repz
sub
jl
pop
in
sbb
xchg
cs
hlt
mov
imull
mov
mov
xor
xchg
loope,pn
xchg
cmp
xchg
nop
mov
cmpsl
mov
dec
push
fisttps
daa
pop
xchg
jg
fisubrl
add
iret
addl
add
cmp
mov
bound
and
fstps
test
lods
inc
imul
push
std
inc
repz
out
xchg
xchg
sub
inc
out
fistpl
pushf
sbb
xlat
ja
jle
hlt
jge
movb
orl
fimull
sbb
incb
btr
xchg
mov
mov
xchg
in
mov
roll
loope
xchg
push
shll
lock
js
cmp
mov
pop
xor
nop
mov
or
loope
xlat
push
mov
push
movsb
mov
dec
mov
lods
push
inc
cmp
or
push
pop
outsl
cwtl
popf
add
xor
add
sti
inc
sti
das
hlt
ds
repz
and
push
test
andb
data16
hlt
mov
outsl
test
nop
jmp
sub
cli
mov
cmpsb
loope
xor
adc
mov
imul
push
mov
leave
mov
sarl
pushf
flds
sub
mov
push
bound
mov
inc
cmp
loope
xchg
clc
pushf
cmp
std
gs
sub
sub
push
sahf
roll
push
cmp
or
lahf
sti
pop
push
xchg
out
sub
in
add
pop
mov
mov
xchg
es
pop
or
xchg
jle
push
push
push
test
mul
in
pop
mov
push
mov
and
nop
or
adc
push
xchg
arpl
popa
sbb
dec
mov
mov
shrb
pusha
mov
iret
cmpsb
xor
repnz
lret
inc
pop
data16
and
cmpb
or
adc
and
inc
mov
aas
enter
xor
mov
add
aad
ret
int3
and
xor
sahf
mov
stos
popa
push
bnd
xchg
iret
fs
sarb
add
cwtl
jae
addb
jge
lret
push
imulb
or
sti
jge
mov
fadd
aas
and
andl
mov
out
gs
pop
ds
mov
lods
sbb
mov
loope
sarl
popa
pop
jmp
jge
mov
mov
addr16
inc
sarl
mov
enter
enter
inc
push
xor
xchg
rep
lods
notb
push
fcompl
and
rcrl
inc
sti
or
popl
push
cld
xor
sti
sbb
repz
addr16
testl
adcl
insl
cwtl
xchg
xor
lds
push
mov
push
leave
pop
push
ds
mov
lcall
xchg
scas
aam
dec
in
aas
imul
pop
sti
insl
pop
xchg
gs
and
push
je
cwtl
bound
scas
in
bound
add
push
int
test
mov
arpl
insl
xor
pushf
mov
xor
sahf
sti
fdivrl
mov
insb
jp
add
add
lcall
mov
in
arpl
xor
fwait
xchg
cmp
in
and
sarb
and
pusha
push
inc
inc
and
fmul
jle,pt
mov
mov
jmp
jecxz
mov
adc
push
jbe
out
test
cmp
daa
push
leave
nop
fs
xchg
rcl
pop
cmp
lahf
enter
or
xchg
mov
and
adc
push
fnstsw
inc
out
loope
out
cmpsb
out
dec
mov
mov
xchg
sti
repz
push
fimuls
je
out
shrl
sahf
push
and
enter
out
jle
arpl
rcrb
mov
sub
out
add
out
inc
leave
loopne
insb
xor
lcall
pop
in
xor
sbb
loope
sti
mov
loope
mov
jbe
add
push
cmp
scas
cltd
cmpl
and
fdivrs
daa
cli
movsl
cli
and
mov
jbe
stos
in
fwait
testl
xchg
push
or
push
cmp
xchg
inc
sub
in
rorb
pop
hlt
jo
xchg
pop
push
int3
fcmovbe
enter
add
xchg
dec
cmp
cld
push
iret
inc
inc
push
or
in
xchg
jmp
ret
adc
hlt
stc
sahf
movsb
and
out
popa
add
jecxz
movsb
inc
rcl
jne
aas
push
sti
and
xchg
mov
cwtl
inc
sub
pop
and
dec
jne
clc
cmp
or
jne
fmull
aad
push
lock
leave
xorl
loopne
or
push
fnsave
cld
arpl
addr16
aaa
and
mov
pop
pop
out
movsb
jne
cld
cmp
ror
mov
pop
xor
lods
and
mov
xor
pop
int
subl
or
and
mov
imull
bound
add
ljmp
sti
aas
xor
loopne
jp
mov
leave
push
leave
and
mov
fisttpll
addb
jl
leave
cwtl
mov
movsb
and
pop
inc
add
pop
movsl
inc
add
push
je
sti
in
push
hlt
scas
mov
inc
repz
pop
pop
repz
in
push
ficoml
mov
in
repnz
sti
adc
shl
mov
push
std
imul
inc
push
xor
sahf
jnp
aam
vprotb
into
mov
inc
adc
nop
pop
in
ret
inc
xchg
add
aad
iret
sbb
jmp
lods
fnsave
outsb
enter
xchg
cmp
add
arpl
ror
sub
insb
aaa
daa
adc
jns
mov
add
repz
outsl
lea
xor
fnsave
push
pop
lods
pop
out
mov
mov
adc
in
push
jp
out
aas
xchg
mov
dec
negb
inc
pop
roll
pop
loope
repnz
imul
mov
mov
rolb
enter
stc
jbe
in
pop
cli
or
outsl
outsb
enter
enter
mov
cwtl
jmp
fs
push
pop
es
mov
pop
pop
js
in
adc
xor
fmul
cld
add
dec
push
dec
lret
out
sbb
push
push
pushf
out
stos
stos
int
mull
cs
mov
cltd
sbb
or
push
pop
adc
pop
push
jg
ds
insl
ror
xchg
xor
in
mov
cld
fs
popf
xchg
ret
cld
pop
jle
mov
mov
lds
insb
pop
cmp
test
sub
das
imul
or
jb
inc
incb
imul
jmp
fadds
xor
fnstsw
fs
sbb
fsts
cli
push
loopne
adc
je
pop
popf
adc
mov
hlt
or
sub
push
mov
mov
ljmp
mov
leave
bound
jne
xchg
mulb
add
subl
pop
enter
push
leave
pusha
pop
mov
cs
mov
dec
mov
shrb
xchg
and
sbb
cmp
aam
inc
jmp
iret
add
mov
mov
decb
je
repz
repz
cwtl
mov
jno
cld
psraw
add
dec
lahf
mov
cmpsl
data16
mov
jno
data16
fwait
pop
aas
sbb
fistpll
ficomps
add
and
push
or
jne
aas
jmp
mov
pop
push
loope
mov
shrl
cmpsb
loope
mov
leave
outsl
xchg
pop
leave
pop
testl
xor
enter
test
and
loope
jb
mov
ds
or
sbbl
scas
cmpsb
add
pop
lahf
loope
mov
fwait
jge
cmp
daa
test
xchg
jb
aam
cmp
push
shl
and
mov
leave
mov
or
xchg
lahf
xor
arpl
shll
cmp
sbb
add
add
mov
pushl
cli
insl
stos
cmp
fstpt
adc
in
fdivrl
loope
test
cmp
enter
pop
jg
xchg
mov
and
addr16
lds
cld
lret
imul
nop
adc
push
dec
sub
stc
lods
fisttpll
lock
cld
jo
mov
and
out
add
popf
scas
mov
jo
xor
shrd
fwait
das
mov
shr
loop
sub
add
jnp
push
jmp
jecxz
xchg
mov
leave
sbbb
std
cmp
xor
adc
pop
mov
jns
movsl
leave
pop
enter
out
sbb
or
ret
lods
inc
pushf
or
fsubl
dec
rcr
adc
loope
lahf
lret
cltd
test
add
and
js
aaa
cli
aam
into
push
cmp
add
shlb
mov
jnp
push
sti
jl
popa
xchg
add
ret
gs
fldt
leave
push
test
fmull
lcall
cmpsb
fimuls
mov
popf
dec
add
std
xor
sub
leave
cmp
int
in
push
pop
and
in
leave
es
push
repz
pushf
repz
push
inc
mov
lds
js
lret
fcmovbe
xor
popa
sub
jnp
call
gs
in
adc
cmp
test
xorl
and
sub
pop
sub
scas
ds
mov
mov
and
std
mov
into
sub
or
sub
xlat
cmp
ja
mov
and
mov
es
int
xor
insl
mov
xchg
push
push
xor
cmpb
in
pop
dec
pop
inc
mov
push
dec
cltd
mov
sub
icebp
mov
pop
push
data16
add
xor
aas
push
enter
pusha
cmp
lods
xor
cs
aas
mov
mov
stos
fists
cmpsl
in
push
outsb
aaa
call
cld
addr16
fs
push
xor
adc
push
cmp
adc
dec
mov
push
push
test
enter
and
xchg
cmp
pusha
jp
mov
rcrb
sub
lock
pop
mov
xor
jne
mov
dec
out
pop
pushf
sbb
fidivrs
push
adc
mov
pop
mov
adc
call
push
xchg
leave
rcrb
nop
add
adc
mov
mov
out
sub
mov
push
jnp
fs
out
add
jl
lods
nop
dec
push
mov
adc
movl
push
inc
lds
lock
xchg
leave
mov
mov
jge
cli
cmp
and
mov
xor
ljmp
mov
cltd
xchg
dec
test
cmc
push
mov
dec
sahf
loopne
std
xchg
scas
daa
lcall
fs
xor
xor
push
dec
jno
cmpsl
ss
add
ret
into
stos
push
insb
xor
xor
xor
mov
fistl
inc
orl
fdivs
cmp
out
add
sub
outsl
sbb
xor
xor
jo
stc
add
sti
bound
add
gs
lea
sbb
cwtl
out
or
sub
int
decb
xchg
pushf
add
in
test
mov
xor
push
in
orb
xor
pop
test
in
mov
fs
mov
mov
arpl
mov
ret
jge
and
pop
mov
stos
or
outsl
mov
rcr
mov
xchg
mov
adc
inc
xor
jl
loopne
push
push
call
sub
pop
push
dec
sub
sar
iret
adc
add
subl
mov
scas
cmp
iret
std
sti
rcll
push
push
out
cld
xchg
mov
mov
inc
loope
mov
fstpt
loope
repz
dec
adc
daa
add
cwtl
sub
xchg
arpl
jb
pop
add
test
cld
push
dec
loope
xchg
dec
movsl
push
in
movl
lods
sub
add
or
mov
inc
xchg
mov
inc
loop
aam
in
mov
cmp
push
fidivrl
clc
lret
ja
and
pop
inc
xchg
fcmovnu
fnstsw
sub
rcr
sbb
aaa
dec
mov
cmpsb
repz
inc
or
mov
loopne
test
xchg
lock
pop
sti
ret
test
xor
hlt
jb
gs
push
sub
sub
sub
inc
sub
in
rcll
push
sub
lock
sbb
sbb
or
sti
arpl
push
enter
jecxz
push
imul
mov
icebp
iret
add
inc
mov
sti
push
test
nop
outsl
shlb
popa
enter
lods
pop
push
test
popa
outsl
pop
repz
and
inc
mov
or
fsubrp
mov
insb
inc
test
fiaddl
repz
add
cmp
out
lret
jp
mov
cwtl
clc
hlt
stos
lds
xchg
test
cmp
enter
sbb
loope
and
vpsubusw
cmpsb
sbb
adc
add
adc
dec
out
push
cmp
clc
stc
sahf
pop
andl
popa
in
inc
cmp
or
adc
enter
aas
fnstsw
dec
aam
in
imul
cld
push
or
cmp
or
cmp
push
dec
jae
ja
cmp
inc
adc
shrb
fs
add
es
stc
xor
aam
and
cmpsb
shlb
and
subl
add
imul
enter
sbb
push
push
cli
fnsave
mov
arpl
xor
inc
out
and
pushfw
icebp
insb
aaa
scas
mov
rcrl
dec
push
and
cmp
movsl
ds
pop
xchg
leave
mov
xchg
or
int3
xor
ret
and
push
lds
dec
lods
lods
ss
jbe
clc
test
push
scas
loope
and
xor
fcompl
ljmp
mov
mov
fmuls
test
sti
scas
in
pop
ds
cli
sahf
dec
movsb
loopne
cmp
out
inc
jne
inc
decb
adc
fs
cmp
loope
shlb
out
arpl
dec
mov
push
mov
cmp
lahf
rcr
cmpb
xor
pop
roll
fisubrl
je
push
xchg
pop
mulb
mov
outsb
sub
jae
sub
and
mov
imul
lret
int
and
outsl
and
and
inc
aad
mull
rolb
mov
push
mov
mov
in
shlb
dec
push
movsl
mov
sbbb
pop
sub
cli
push
cmp
enter
addr16
out
xchg
push
cld
mov
negl
mov
cld
leave
mov
hlt
leave
ss
mov
clc
mov
add
negl
inc
sub
pop
cmp
cmp
int
in
cmp
xor
jne
hlt
or
out
leave
mov
stc
cltd
xchg
addr16
xor
call
cwtl
pop
rcll
xor
sub
sub
mov
pop
addr16
dec
xchg
out
divb
or
js,pn
sahf
rcl
cwtl
add
je
mov
mov
add
mov
mov
push
inc
lds
push
imul
xor
cmp
je
cli
jae
in
xor
mov
std
mov
daa
inc
push
clc
fistps
xchg
leave
in
and
ret
dec
sbb
stos
fists
stos
xchg
push
ljmp
xor
out
sub
jns
out
inc
test
mov
outsl
fs
pop
shl
aaa
dec
xchg
sbb
cmp
pop
mov
sbb
xchg
in
mov
mov
cmp
jg
gs
push
mov
jno
xlat
sarb
ror
gs
pop
repnz
daa
mov
push
push
add
fsts
dec
fcomps
mov
add
nop
int
lahf
test
iret
fcmovne
or
or
mov
dec
xchg
lret
adc
dec
sbb
or
rcrl
lahf
mov
mov
jno
iret
adc
stc
jne
pop
addr16
lret
cld
ret
mov
xor
sbb
inc
fnstcw
ljmp
push
in
outsb
mov
shll
or
fsubl
daa
pop
dec
pusha
xor
fst
test
out
push
add
mov
icebp
dec
and
adc
mov
add
sbb
mov
adc
xchg
and
jge
lret
loope
lahf
jno
sub
mov
stos
xor
test
dec
out
repz
xor
daa
inc
cwtl
popa
std
call
and
sub
aad
aas
jl
lock
push
or
ret
or
mov
ret
mov
and
lock
fdivrp
xchg
repz
pusha
jno
and
mov
dec
mov
hlt
idiv
jbe
pop
ds
decb
loope
mov
addl
addl
aas
hlt
shll
cmpl
repz
adc
mov
jbe
mov
lds
call
xchg
shll
xchg
popf
mov
or
jae
push
push
rclb
lds
repz
rcrb
stc
repz
sbb
inc
repz
fcomi
xchg
iret
jecxz
ret
cmp
xlat
xchg
repz
xor
mov
lock
mov
add
or
jg
adc
xorl
fcoml
mov
int
mov
shl
mov
xor
mov
ja
mov
mov
jnp
stos
inc
popa
pop
inc
mov
sbb
mov
clc
push
push
pop
ss
loopne
mov
rcr
rclb
iret
or
imul
into
push
mov
mov
jle
push
inc
adc
push
xchg
popf
mov
imul
stos
xchg
pusha
mov
outsb
mov
mov
mov
dec
stos
inc
aaa
nop
es
shlb
push
ja
mov
mov
push
insl
dec
scas
loope
jo
xchg
js
push
push
fistpll
xchg
cmc
cmpsl
add
jmp
mov
mov
sbb
mov
ffreep
sbb
shll
push
or
sub
jns
out
ret
jg
xor
push
xor
repz
pop
ret
sahf
sbb
pop
inc
outsb
fisttpl
inc
daa
sub
loope
lcall
loopne
pop
mov
mov
jle
cmpsl
jne
add
call
rcl
cmc
sub
rcrl
mov
lret
push
mov
add
cmpsb
cmp
ret
pop
or
sti
or
aam
pop
int3
ret
sub
xor
lcall
xor
add
jge
or
shr
test
push
xchg
mov
nop
out
xchg
mov
add
cmp
int
jp
dec
push
pop
or
adc
aad
aam
shl
and
ljmp
nop
lret
xor
mov
adc
ficompl
xor
mov
sub
popf
pop
test
loop
rolb
push
or
imul
xchg
dec
jge
fsts
divl
cmp
sbb
inc
sub
int3
std
push
fstl
xlat
bound
mov
dec
sub
je
xorl
lds
in
sbb
lcall
cmp
fdivs
fwait
in
or
dec
add
mov
mov
xchg
jno
and
mov
inc
in
loop
and
sbb
lahf
mov
xor
test
adc
aaa
loopne
fcompl
fidivs
sub
and
xor
cld
push
data16
aam
xchg
mov
repnz
pop
rorl
data16
lods
mov
or
mov
jmp
stc
pop
cmp
rcl
sbb
add
scas
push
insb
iret
and
jne
xchg
push
pop
adc
xlat
shll
push
insl
cld
inc
lds
cld
test
mov
sbbl
mov
mov
and
sbb
cmc
adc
jo
scas
iret
sti
fwait
push
sbb
std
push
mov
ret
repz
push
imul
mov
outsl
js
pop
test
mov
jbe
cmpsb
pop
push
cmp
or
nop
ss
sbb
loope
les
mov
inc
push
xchg
pop
daa
lret
lcall
shll
cltd
test
inc
clc
mov
lret
sbb
pop
test
into
and
in
int
push
sub
mov
sub
mov
test
mov
xor
aam
js
gs
add
scas
jne
mov
mov
paddb
leave
ja
jge
mov
adc
or
test
es
and
shlb
mov
inc
in
add
and
cmp
ljmp
adc
mov
adc
pusha
push
sbb
add
rolb
xchg
sti
scas
leave
xor
mov
mov
ret
mov
inc
hlt
jl
cld
lahf
ret
insl
leave
jae
mov
mov
adc
push
loopne
idiv
int
jp
iret
sub
addb
xor
add
rcll
fnsave
fs
add
push
and
enter
daa
nop
push
xchg
aas
jns
xchg
add
bound
cmp
sbb
loope
jle
xor
ds
mov
adc
leave
xchg
inc
inc
cmc
cmp
xor
mov
leave
push
cli
jecxz
sbb
ror
sbb
jmp
jns
movsl
iret
mov
mov
xchg
cmc
inc
lea
cmp
mov
mov
inc
pop
xchg
dec
sbb
lds
push
fidivrs
or
mov
jmp
add
mov
jae
sbb
mov
outsb
ret
filds
and
dec
jg
add
adc
aam
push
push
in
cmp
sbb
out
stos
jne
mov
dec
scas
fstl
pushf
test
add
add
repnz
aas
mov
push
adc
or
bnd
pop
add
aam
mov
fstpt
inc
pop
es
enter
or
sti
adc
in
xor
pusha
add
add
iret
subb
clc
in
das
sub
daa
cmc
add
in
popa
mov
int
adc
decb
mov
sahf
or
jns
sbbb
push
cmp
aam
jg
loope
and
add
out
push
pop
nop
imul
or
ret
xor
inc
and
das
mov
cmp
add
adc
xor
gs
cmpsb
cltd
cmp
inc
jbe
icebp
lods
push
sbb
lret
xchg
push
dec
int
xor
cmpsl
popa
fdivs
fnstcw
inc
mov
shlb
xor
mov
notb
push
and
mov
into
jle
jno
sub
addb
cld
inc
mov
popa
lret
mov
xor
das
shll
fstps
shlb
push
jmp
mov
pop
jecxz
mov
loopne
pushf
loopne
mov
push
jg
hlt
cwtl
jp
xor
out
cli
mov
nop
mov
push
pop
popa
jns
das
mov
and
lods
dec
loope
jmp
jmp
lods
cld
jbe
inc
dec
add
jmp
pop
mov
mov
mov
lods
sub
fxch
fldpi
pusha
jmp
fstps
mov
in
and
pop
push
jecxz
shl
lods
out
adc
xor
xchg
sarb
or
mov
jno
jns
mov
pop
mov
sbb
or
in
cmovnp
aad
mov
lret
mov
out
adc
scas
add
movsl
clc
mov
push
fsubs
rorb
mov
js
or
rcrl
outsl
aaa
adc
sar
and
mov
xor
or
lds
data16
fwait
mov
mov
jg
lock
push
popf
adc
into
test
push
call
stos
mov
cmp
mov
rcll
mov
sub
sub
ja
movsl
mov
inc
fs
ss
sub
cmp
test
rcl
jl
cmp
mov
push
add
and
jne
or
jle
dec
scas
or
sub
popa
dec
sti
lods
call
mov
mov
cmp
lea
arpl
mov
mov
inc
testl
cmc
dec
push
mov
dec
mov
inc
add
xchg
dec
dec
sarb
into
mov
lret
inc
push
subb
add
lock
nop
mov
or
fnstsw
mov
fdivl
dec
insb
or
inc
jle
sar
mov
xor
add
movsl
stc
xor
in
ljmp
clc
imul
sbb
pop
jnp
fsub
or
mov
cmc
movsb
in
add
jbe
mov
shrl
push
adc
cmc
or
jecxz
iret
ss
and
mov
push
ror
