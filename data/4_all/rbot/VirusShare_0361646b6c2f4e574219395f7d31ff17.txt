xor
es
mov
std
sti
sub
popf
xlat
das
pusha
lret
iret
std
mov
lret
les
fcmovb
mov
aaa
dec
fwait
ror
ficoml
jle
aas
subl
sti
xchg
cmp
insb
icebp
loop
push
pop
cmp
ret
jp
outsl
jo
jl
cmp
xchg
jmp
loopne
mov
sar
and
adcl
cltd
push
out
add
mov
sti
into
add
push
adc
in
sti
cmpsl
fs
movl
mov
leave
addr16
lods
pop
sub
movsb
nop
mov
sarl
add
popf
pop
or
mov
sti
xlat
lods
xchg
push
jmp
dec
mov
aaa
cld
add
cli
cmpsl
out
mov
mov
std
pushf
xchg
adc
aaa
imul
popl
sbb
and
mov
insw
stc
adc
pop
cmpsl
push
xor
add
mov
or
in
stos
xchg
stos
gs
mov
pop
mov
jle
adc
or
das
push
xchg
in
outsl
mov
leave
add
push
cwtl
pop
repz
cmp
xchg
fwait
or
mov
iret
test
clc
pop
sub
add
orb
cld
scas
sbb
xor
dec
xor
adcb
add
push
xor
addr16
mov
inc
out
stc
roll
imul
daa
addr16
notb
xchg
sahf
dec
and
jns
and
jg
popf
inc
cwtl
or
mov
insl
sbb
add
rolb
fnstcw
or
fldenv
push
adc
out
lahf
or
mov
pop
lret
hlt
sahf
aaa
js
aam
test
push
pop
aam
adc
mov
adc
sub
inc
out
cmp
xchg
aas
das
fucomi
mov
mov
nop
sbb
sar
mov
decl
int3
jmp
or
in
mov
lods
loope
std
fcmovb
loope
imul
xor
nop
inc
xor
inc
push
ficoms
vaddsd
dec
sbb
jp,pn
incb
inc
shrl
mov
xlat
fisubrs
xchg
call
js
sti
mov
pop
adc
in
mov
sbb
jo
push
pop
xchg
js
int3
push
mov
cltd
aam
es
adc
outsb
cmp
ja
or
ds
dec
and
popf
add
imul
push
jbe
xchg
sbb
in
add
mov
adc
incl
into
icebp
shll
aaa
mov
jge
push
mov
cmp
jae
aaa
cmpl
imul
call
ss
cwtl
xchg
ret
cmp
mov
and
mov
test
ja
pusha
xor
scas
and
in
push
inc
mov
mov
and
and
push
jae
sub
notl
pop
clc
lcall
cmp
mov
adc
insl
xor
add
mov
pushf
int
or
out
add
mov
xor
pop
sbb
inc
xchg
jb
jmp
inc
stc
ljmp
sbb
or
xchg
push
ss
outsl
sbb
and
test
out
add
mov
cwtl
cltd
and
sbb
cmp
adc
cmp
adc
push
mov
xlat
int
hlt
sbb
mov
cmp
mov
xor
push
mov
sub
std
sub
imul
push
arpl
jl
cmp
fs
push
daa
and
dec
jmp
gs
and
or
fisttpl
jno
mov
xchg
add
cld
je
sub
in
mov
jmp
mov
push
into
inc
cmp
gs
lods
push
xlat
cs
mov
icebp
or
outsl
scas
aas
mov
xor
sub
mov
std
aad
bound
lret
and
jmp
pop
lds
mov
ds
lods
sbb
jle
push
aad
pop
aam
jecxz
add
fstl
mov
je
pop
pop
mov
xlat
jmp
clc
add
inc
lea
jmp
push
or
in
add
inc
or
pop
jecxz
push
lcall
repnz
jbe
lods
fadds
cmp
ss
fsubrs
test
stos
andb
inc
fistpl
xlat
and
cmpsl
push
add
aad
mov
and
ja
ret
sahf
sub
adc
out
push
cmp
xchg
out
pop
std
xchg
fdivr
xor
or
loopne
push
push
mov
jmp
mov
lret
push
jmp
push
add
add
out
inc
cmpsb
ficompl
mov
test
add
pop
cmp
push
jnp
pop
and
push
ljmp
in
xchg
xor
fsubrp
sub
and
sarb
or
push
add
lods
mov
xor
push
movsb
sbb
sarl
outsb
sbb
lea
mov
xchg
sub
cmpsl
jns
xchg
pusha
cmc
mov
cmp
inc
or
pop
push
addr16
push
or
in
insb
inc
xchg
insl
rolb
sti
cmp
call
jb
pop
loope
pusha
pop
mov
stos
pop
in
lock
mov
add
or
xor
fs
inc
jg
stc
jge
jmp
cltd
xor
jno
xlat
fldt
test
aaa
and
jb
les
jns
lea
fucomp
xlat
mov
cwtl
dec
clc
adc
mov
sub
repnz
cmpsb
or
jmp
jecxz
add
or
pop
lcall
adc
fcmovnu
repnz
out
daa
dec
idiv
fcomps
bound
mov
call
lods
mov
cmpsl
jae
loopne
xchg
stos
leave
mov
xor
xchg
and
or
pop
pop
sbb
cwtl
or
jl
pop
pushf
jl
jge
popf
out
sub
shrl
mov
jmp
xor
cs
shl
dec
out
xadd
xor
lret
jl
cmp
sbb
pop
adc
xchg
xor
sub
adc
fisubrl
mov
negb
or
out
jae
jns
mov
push
data16
sub
aad
add
mov
push
xor
sub
pop
shr
movsl
in
jns
inc
push
inc
or
and
outsb
push
dec
sub
ljmp
xor
or
dec
cs
push
push
jg
icebp
lods
mov
adc
pop
xchg
add
int3
sbb
inc
out
leave
or
xlat
ficompl
outsb
sub
into
packuswb
mov
push
xchg
pop
lret
stos
int
jge
cld
push
sbb
lar
adc
sub
or
les
jle
jge
xor
fnsave
xor
sub
sarb
cltd
je
adc
js
sub
push
mov
jae
test
jp
aas
mov
mov
pop
int
lea
or
push
adc
or
cmovg
gs
loopne
pop
jge
pop
aas
lret
or
mov
scas
jmp
add
add
push
xchg
popf
add
pop
add
scas
or
mov
push
scas
and
icebp
insb
jnp
mov
sub
mov
mov
shl
clc
test
mov
mov
je
into
lds
adc
in
and
adc
hlt
divl
aam
sub
outsb
dec
mov
test
outsl
je
out
outsb
stos
push
insl
addr16
stos
movsb
jns
pushf
jo
pop
outsl
dec
daa
sti
cmp
mov
data16
icebp
nop
adc
push
loopne
icebp
or
aad
pop
loop
mov
adc
fstl
lret
data16
push
dec
cs
push
push
enter
int
xor
and
cmp
stos
mull
aaa
push
push
pop
out
into
rorl
ja
loope
xchg
mov
out
clc
pop
in
stos
in
aad
mov
mov
jbe
ret
or
xchg
fdivp
jbe
fs
add
cmp
jl
outsl
add
insb
pop
add
pop
sub
and
xchg
loopne
xor
pop
jecxz
int3
in
enter
scas
ja
mov
xor
sub
or
mov
push
pop
popf
sub
push
sbb
dec
xchg
push
subl
cmp
mov
bound
lds
ss
fldz
aad
jne
fdivl
pop
adc
dec
hlt
addr16
stc
imull
push
pop
jno
dec
push
scas
out
das
in
daa
movsl
push
insb
aad
subl
mov
mov
loopne
test
push
sbb
xchg
inc
pop
movsb
mov
out
insb
je
imul
frstor
addr16
add
jbe
add
jecxz
inc
dec
and
mov
pop
stos
pop
lret
mov
std
sbb
dec
jae
xor
ficomps
in
inc
xchg
fnstenv
movsl
scas
fcoml
test
outsl
loopne
fsubs
in
jge
pop
out
subb
push
insl
loopne
xlat
out
lock
or
dec
out
jge
in
cmp
lea
out
je
sbb
add
outsb
mov
fisubl
xor
sar
mov
loopne
cmp
cmpsl
push
mov
xchg
aaa
outsl
push
push
ss
pop
rorb
ljmp
inc
sbb
pop
mov
mov
dec
or
lahf
outsl
rcrl
nop
icebp
std
jae
jmp
mov
push
bound
inc
fwait
xchg
addr16
cmpsb
shr
pop
or
add
xor
call
sub
bnd
aas
popf
jb
mov
push
push
inc
aaa
stc
pop
scas
mov
dec
movsl
sub
inc
sbb
pop
sbb
jg
loopne
or
xor
add
in
push
mov
push
add
add
pop
add
xor
fisttpll
dec
dec
addr16
test
push
in
sbb
bound
sbb
or
outsl
push
popa
pop
pop
pop
mov
das
pop
std
faddl
movsb
out
icebp
mov
fcmovnu
cs
in
nop
add
pop
add
pusha
arpl
xchg
or
add
mov
mov
outsl
add
icebp
mov
pop
pusha
in
nop
and
fwait
enter
add
adc
pop
aam
std
daa
cmp
dec
adc
cltd
andb
sbb
xchg
lods
pop
sti
test
faddl
fmuls
dec
mov
and
sti
test
and
or
pusha
dec
insw
gs
js
cmpsl
lret
scas
adc
decl
lahf
push
imul
lods
mov
dec
and
leave
jmp
scas
in
sti
cmp
mov
lret
lcall
jp
repz
push
push
out
test
add
push
push
jae
cmp
pop
jp
or
cmc
pop
and
faddl
sbb
dec
inc
fdivl
add
test
cli
push
cmp
push
mov
subl
scas
in
scas
loope
lcall
lock
or
inc
and
test
sub
push
cmp
fwait
lahf
shlb
sub
dec
mov
jo
stos
or
test
inc
sub
pushf
push
sbb
popf
out
nop
adc
adc
sub
shl
mov
inc
aaa
inc
data16
imul
mov
sub
arpl
mov
adc
xor
out
mov
stc
mov
das
or
sbb
sbb
push
add
sqrtps
loop
mov
jp
push
pop
stos
icebp
push
mov
mov
pusha
mov
mov
imul
in
push
pop
sbb
add
orl
ljmp
sbb
sbb
push
popf
xchg
pop
xchg
out
test
dec
sti
pop
pusha
in
mov
adc
or
test
mov
or
push
jno
sub
addr16
xchg
adcl
outsb
inc
inc
test
fwait
cmpsb
pop
addb
hlt
rorl
inc
in
je
imul
push
popa
xchg
sti
in
jl
orb
push
out
jmp
and
scas
test
dec
sti
pushf
jl
pop
adc
pop
pop
decb
jno
sahf
clc
inc
scas
xor
aaa
aas
xchg
or
jmp
pop
repnz
icebp
hlt
je
nop
push
add
rcr
pop
cmp
mov
mov
push
push
dec
xor
mov
adc
mov
or
mov
mov
cmp
dec
xchg
xor
out
stos
testl
in
add
shlb
ljmp
and
mov
push
lock
or
push
or
cltd
adcb
cmp
add
pushf
cwtl
cmp
shrl
xor
dec
fwait
insl
out
out
mov
mov
mov
pop
and
add
push
out
out
jne
pusha
cmp
push
js
mov
insl
popf
sahf
nop
cmp
mov
nop
mov
jae
push
cmc
and
lea
dec
mov
and
iret
sub
movsb
out
enter
xchg
jmp
in
inc
mov
mov
xor
jne
int3
rol
cs
jae
mov
es
mov
gs
adc
dec
fstps
dec
inc
shlb
pop
ja
jg
fdiv
lods
and
cmp
in
lcall
or
xor
pop
jno
jle
fwait
iret
mov
dec
and
cmp
mov
stc
in
gs
mov
pop
mov
out
leave
add
icebp
in
pusha
push
fld
pop
pop
ds
incl
stc
outsl
or
jle
das
scas
inc
push
test
icebp
shll
lods
sbb
gs
push
call
imul
mov
repz
push
inc
gs
fucom
or
jnp
push
call
repz
adc
out
movsl
mov
pop
lea
push
popa
inc
ljmp
test
cltd
inc
xchg
jmp
int3
stc
decl
pop
mov
lret
dec
pop
push
mov
mov
out
outsb
out
sbb
insb
cmp
and
fisubrl
lds
ret
pop
hlt
test
jo
xchg
xor
and
jns
pop
adc
pop
mov
das
xor
ljmp
cmpsb
mov
shll
xchg
divb
or
add
add
inc
dec
sub
push
mov
xor
test
inc
adc
nop
push
xor
mov
xchg
push
mov
das
push
fwait
lods
sbb
fsubrp
mov
xor
sbb
mov
mov
jbe
lret
push
xlat
and
mov
das
sysret
or
movl
dec
jg
bound
inc
mov
xor
mov
dec
and
addb
enter
mov
xor
cld
sub
pop
dec
sbb
jo
sub
lahf
arpl
dec
inc
cmp
inc
mov
mov
mov
and
xor
ds
inc
or
cmp
mov
dec
jns
bound
mov
inc
movsb
add
mov
inc
js
add
adc
pop
icebp
insb
sub
cltd
aam
cld
mov
pusha
xor
mov
shld
data16
int3
lahf
lods
add
lods
ljmp
popa
je
dec
inc
test
aaa
lds
out
push
sbb
mov
leave
push
xchg
add
jno
lret
push
gs
xlat
and
xor
add
xchg
les
ficoml
or
cmp
aaa
pusha
lea
scas
push
pop
xor
aam
cwtl
mov
test
jne
rorl
out
dec
test
nop
pop
lcall
pop
xchg
mov
push
mov
int
in
jge
mov
pop
mov
ljmp
mov
and
in
lock
shlb
and
lea
sbb
jmp
wrmsr
cs
sub
out
fdivrs
inc
cwtl
icebp
in
cmp
inc
mov
in
sub
out
scas
dec
mov
add
and
mov
push
add
jmp
xor
mov
sub
stc
jmp
pop
cld
or
add
in
adc
mov
das
jl
sbb
dec
loop
sub
das
cmp
shl
jle
cmp
lahf
shr
cmp
scas
in
xchg
fisubl
mov
ret
std
cmp
push
cmp
jns
and
ficompl
or
leave
inc
loopne
dec
jmp
mov
push
add
cmp
cmpsb
lret
push
wbinvd
nop
pop
test
sbb
aad
jb
test
sub
pop
push
sub
stc
sub
icebp
mov
mov
pop
xor
push
mov
or
xchg
pop
mov
lcall
xchg
adc
sub
sub
fisubrs
aad
lret
or
lods
sti
lret
jo
sbb
stos
xchg
ffree
pop
push
sub
outsl
test
jns
lock
xchg
fldt
test
inc
push
fldl
loopne
or
xchg
ud1
das
inc
and
cmp
pushf
nop
and
out
out
into
cmp
les
fildl
mov
popf
popa
sub
lea
pop
dec
sbb
mov
rcrl
jns
pop
cmp
daa
out
xchg
jnp
jnp
cmp
iret
push
hlt
mov
push
dec
mull
pop
out
clc
mov
push
imul
add
mov
es
mov
sahf
cs
dec
cli
std
fisubrs
jb
test
subl
imul
xchg
push
mov
pop
fisttpl
daa
leave
pop
mov
and
std
cmp
pop
pop
mov
xchg
push
es
inc
xchg
insl
mov
pop
scas
add
sub
pop
push
pop
loope
loop
push
int
popa
push
mov
push
jmp
adc
stc
scas
sub
cmp
jmp
cmpsl
out
push
sti
push
cli
fimull
mov
fldt
xchg
cltd
xor
stos
testl
lods
push
jno
les
int
imul
xchg
adc
jl
inc
scas
push
repz
fnsetpm(287
test
popf
dec
add
mov
dec
sub
mov
jo
scas
and
in
nop
popa
bound
out
cmp
testb
lret
push
fld
mov
aam
and
aam
arpl
push
lods
loopne
mov
xlat
sbb
gs
dec
call
xchg
pop
ficomps
adc
cmp
in
ret
dec
testl
sbb
and
mov
push
pop
not
dec
xchg
popa
mov
push
sbb
fisubs
punpckhdq
ds
int
daa
scas
js
jbe
mov
xor
out
roll
out
add
pop
mov
adc
mov
stc
xor
cmp
scas
xchg
pop
dec
out
movsb
pop
lds
and
fcompl
pusha
sar
imul
jmp
gs
lods
int
out
and
insl
test
and
mov
adc
add
mov
pop
add
pushf
testb
test
roll
shr
cmp
push
frstor
mov
ret
push
fcom
scas
or
pop
mov
cmp
sub
mov
xor
arpl
rcl
scas
stos
pushf
roll
cld
pop
pusha
mov
inc
lcall
xor
mov
jne
cs
mov
push
cmc
scas
jb
mov
sbb
clc
push
nop
mov
xlat
sub
movsb
adc
pop
jbe
fdivrl
lahf
jecxz
xor
in
push
xchg
mov
std
pusha
js
sbb
mov
and
fsubrs
fcomp
adc
lcall
fdivl
cmp
aaa
cmpb
xchg
sbb
pop
shlb
mov
sub
hlt
mov
cmp
movsl
lds
fdivrs
mov
mov
gs
mov
cmp
popf
pop
in
ja
sub
xchg
push
jecxz
leave
sbb
sahf
cltd
add
sbbb
sarl
mov
pushf
sbbl
mov
stos
cltd
and
inc
sub
inc
or
xchg
sub
mov
test
stos
je
jle
jp
dec
xchg
xchg
dec
fidivl
add
cmp
or
xor
stos
dec
dec
flds
inc
sbb
cmp
mov
lds
out
push
in
movb
add
popf
or
les
dec
ret
add
leave
cmp
lahf
inc
mov
fiadds
fistpll
call
adc
mov
add
rol
xor
out
ljmp
ss
aaa
xor
mov
cmp
in
in
mov
outsb
mov
sarl
fs
cmc
sub
jne
data16
jge
jns
xlat
jae
push
addr16
push
lea
enter
sub
jns
test
sub
out
fiadds
fdivs
ds
push
push
cmp
adc
or
jmp
pop
mov
sub
xchg
ret
mov
addr16
cmc
arpl
pop
xor
inc
mov
sti
dec
mov
adc
imul
cmpb
cmp
aaa
in
xchg
xchg
and
popf
sub
mov
push
bound
mov
repz
mov
mov
cmp
mov
pop
sub
push
in
pop
jns
andb
jge
dec
or
xlat
dec
jbe
mov
in
andl
daa
add
fistpll
cmp
jp
jle
push
jle
aad
js
mov
test
lods
push
outsl
packuswb
outsl
mov
sbb
mov
pop
cmp
ja
jnp
test
cwtl
xor
lahf
rcl
inc
lret
push
add
mov
dec
pushf
xchg
push
adc
addr16
and
es
aaa
sbb
sub
dec
or
scas
xor
sahf
leave
ds
cmc
bound
push
adc
push
dec
leave
icebp
in
shlb
icebp
mov
lea
xchg
dec
sti
pop
push
pop
sti
loop
mov
push
daa
ret
jo
test
sub
decl
sub
decl
add
sti
rcll
cmpsl
jnp
fadd
push
push
int
cmp
pop
leave
das
adc
daa
icebp
inc
sub
pop
jbe
imull
sbb
xchg
cwtl
sub
in
insb
les
cmp
jb
lods
shrb
and
dec
inc
jge
mov
adc
mov
xchg
adc
jecxz
nop
idiv
push
or
or
ret
lock
shl
xor
sub
hlt
or
sbb
xchg
add
or
pop
into
popa
add
in
push
xchg
and
lds
mov
repz
adc
leave
es
xlat
jb
fildl
dec
lcall
nop
dec
sbb
lcall
mov
ret
mov
push
out
fdivs
mov
push
shr
insb
mov
or
xlat
scas
dec
pop
sbb
stos
clc
in
test
imul
jo
dec
test
mov
mov
dec
bound
mov
add
lds
mov
pusha
adc
lods
cmc
imul
imul
rcl
cwtl
push
lods
loope
pop
xchg
out
xor
sbb
push
sub
jl
sub
jnp
aaa
mov
out
jmp
push
push
loopne
fisubrs
xchg
xchg
icebp
bound
jnp
sbb
rcrb
add
cmpsb
mov
imul
sub
mov
dec
cmpsl
fmul
insl
or
add
fwait
clc
aas
and
jp
in
jle
push
inc
inc
pop
divl
mov
in
mov
out
push
dec
pop
std
and
mov
cwtl
sbb
sbb
rorl
sub
lds
fsubrl
inc
add
cwtl
lea
cltd
sbb
add
out
dec
push
jg
inc
lahf
divb
icebp
sbb
loopne
mov
jmp
push
dec
test
xchg
jbe
push
mov
aad
sub
jg
in
mov
int
and
out
adc
fnstenv
scas
sti
js
outsl
mov
out
push
or
jns
jne
mov
jmp
mov
push
xchg
and
sbb
sbb
loope
cld
add
or
sahf
mov
xchg
cmp
pop
shl
and
xchg
jnp
lret
xor
cmp
add
xchg
lods
sbb
mov
xchg
xor
stos
scas
lds
aam
out
xchg
out
sbb
into
sbb
sbb
into
mov
adc
push
jge
adc
loopne
dec
aas
mov
decb
outsl
prefetchwt1
or
and
jnp
fs
push
mov
jl
addl
bound
mov
loop
mov
or
add
xor
push
or
imul
sub
test
mulb
and
out
pop
mov
loope
push
stos
adc
sbbl
sbb
mov
mov
xor
push
or
dec
or
xchg
dec
mov
adc
pop
dec
mov
iret
xor
cmp
pop
adc
imul
mov
and
lods
pushl
test
psraw
dec
lock
pop
in
xchg
inc
daa
icebp
ds
sbb
insb
adc
mov
mov
pop
sti
shll
jno
sbbl
inc
inc
push
inc
call
or
push
dec
dec
xlat
out
cmpb
ret
lods
enter
hlt
scas
jae
adc
jno
imul
sbbl
sbb
push
adc
push
or
test
popf
pop
push
and
into
and
cmp
and
scas
mov
push
or
pop
pop
out
insl
in
add
std
outsl
mov
jnp
std
in
jne
inc
and
pop
mov
push
jo
mov
mov
stos
out
adc
lret
adc
repnz
into
stc
mov
mov
hlt
jno
out
mov
mov
dec
mov
out
sbb
out
mov
ss
mov
and
push
mov
inc
sbb
xor
nop
lret
in
jns
out
in
jno
push
in
dec
and
loope
outsb
push
loop
pop
add
shll
jle
lret
mov
push
sbb
lahf
sti
movl
cvtps2pd
or
cmp
sub
mov
push
xlat
push
or
sbb
dec
jnp
fistl
nop
ds
push
test
and
ds
rorl
in
insb
mov
mov
cmp
outsl
sbb
loope
xchg
jmp
lods
xchg
aad
push
or
cmp
sbb
dec
pop
pusha
mov
mov
push
jbe
cs
ljmp
push
fildll
push
mov
xlat
popf
inc
jb
mov
aas
es
cmp
mov
xchg
jmp
add
adc
mov
jmp
sub
out
scas
xchg
and
pop
cmp
inc
scas
aad
insb
test
rorl
pop
in
xchg
jo
lods
es
mov
push
mov
mov
ret
in
jl
test
push
cmp
push
sub
xchg
add
sarl
lock
xchg
fldcw
lds
mov
push
aas
dec
iret
stos
outsb
movaps
pop
sub
adc
lret
pop
lcall
scas
in
mov
cltd
sbbl
js
imul
sub
xlat
sahf
out
rolb
push
ja
sbb
jno
push
das
xchg
inc
pushf
sub
fbld
je
loopne
test
outsl
push
in
xor
fucomp
insb
pop
jne
jecxz
inc
inc
decl
inc
sbb
sub
xlat
sahf
out
mov
test
subb
lods
xchg
dec
mov
pushf
mov
push
std
outsb
mov
and
lods
jmp
insb
sub
int3
cmp
sbb
mov
ror
xor
lret
or
jl
mov
jle
movsl
aas
add
ss
sti
or
cmpsl
mov
sub
push
jmp
insb
jle
push
or
sbb
mov
popa
sbb
outsb
mov
mov
or
mov
and
cmpl
adc
add
adc
imull
mov
xchg
jns
add
or
aam
and
mov
lcall
sbb
shll
mov
fmuls
stos
add
adc
pop
fistl
lods
decb
pop
pop
push
inc
dec
roll
in
xchg
lahf
or
adc
mov
sti
cmp
or
dec
sub
sub
adc
xor
lods
mov
push
adc
fcomip
insl
mov
adc
fwait
jo
out
stos
or
ljmp
mov
insb
add
sbb
dec
test
jno
dec
add
lods
inc
js
pop
in
outsb
dec
ss
inc
mov
sarb
add
ficompl
sub
inc
mov
enter
fwait
mov
cs
test
lcall
roll
sarl
mov
sbb
xchg
dec
xlat
inc
mov
enter
dec
pop
sub
mov
lock
gs
dec
outsl
cmp
adc
jmp
add
inc
test
cmp
pushf
mov
push
dec
popf
cmpsl
or
or
pusha
xchg
out
jae
out
or
test
dec
cmp
lahf
sub
scas
cmp
jae
xchg
icebp
dec
add
hlt
repz
aas
arpl
call
std
int3
orl
cmp
xchg
jo
dec
sbb
or
or
adc
les
ficoml
js
cmp
push
fwait
test
pop
dec
fisttps
fstl
or
adc
jbe
cli
aas
cmpsb
das
jne
aas
jmp
subl
xor
push
hlt
std
pop
sub
xor
stos
inc
xchg
cmp
and
xor
lret
jae
adc
sbb
movsl
and
mov
mov
test
repnz
loope
adc
lahf
ficoms
mov
les
add
sbb
pushf
add
lods
insl
pop
xchg
jmp
add
ljmp
loop
subl
add
test
jg
dec
mov
adc
push
movsl
xorl
aas
les
sub
cmpsl
or
scas
inc
repz
sub
out
mov
sbb
jns
popl
ds
xchg
popf
xchg
js
mov
in
mov
push
lods
or
lcall
jb
lods
rclb
out
test
dec
cmp
gs
ret
mov
mov
add
sub
mov
les
inc
add
js
testb
push
fldt
inc
arpl
push
fistl
loope
inc
lret
in
fwait
sub
dec
mov
mov
das
or
pop
adc
jmp
data16
or
mov
pop
jne
imul
lods
and
jmp
dec
sub
mov
aas
scas
lahf
push
movsb
dec
and
nop
jecxz
outsb
rcrb
mov
popl
and
xlat
push
and
outsb
jno
or
or
push
dec
mov
sub
jg
es
xor
pusha
imul
mov
xor
adc
and
fildl
and
out
pop
pop
mov
xchg
fcoms
cmpsl
pop
add
and
cs
out
xor
or
ljmp
out
mov
scas
mov
jge
es
mov
nop
push
inc
lcall
lock
pop
mov
xlat
js
pop
out
sbb
fldcw
push
inc
mov
add
jg
lcall
mov
dec
push
jg
or
lock
les
jecxz
int
aam
add
pop
cltd
outsl
and
iret
or
imul
or
mov
in
jb
or
iret
in
outsl
mov
xor
jecxz
mov
and
push
movsl
repz
scas
fwait
lods
mov
or
inc
leave
lods
in
out
mov
or
enter
out
sub
cmp
adc
or
push
dec
sbb
ja
enter
mov
loope
mov
or
push
cmp
jae
test
clc
loopne,pt
adcl
jge
pop
mov
or
xchg
incl
rol
es
xchg
jo
and
out
mov
fisubrs
sub
cmpl
arpl
jne
lret
pop
lods
xchg
sahf
adcb
lds
sti
jbe
push
adc
inc
lahf
dec
or
nop
cmp
add
scas
insl
pop
jb
aas
sub
shlb
dec
pop
addb
sbb
sub
and
leave
js
bound
push
sub
or
sbb
scas
cmc
fwait
push
nop
cmp
aaa
js
sub
push
mov
adc
or
jns
or
jmp
inc
push
pop
xor
sub
cmp
loop
xor
fcmovnbe
out
subl
mov
and
fstps
aas
add
mov
sub
xchg
push
mov
mov
xchg
mov
outsb
xor
dec
out
imul
cmp
mov
xchg
push
sbb
push
popa
sbb
and
das
cwtl
rcrb
mov
xorl
enter
xchg
std
jno
enter
sub
mov
jge
fstps
fwait
jl
call
mov
xchg
inc
out
lret
and
loopne
cmp
jmp
pop
sub
inc
sub
cmp
bound
enter
add
test
cmp
jl
mov
addb
add
in
sbb
push
comiss
cmp
test
cmp
pop
dec
inc
in
aas
sbb
das
test
rorl
ds
icebp
cs
or
dec
cmpsl
pop
pop
loope
jl
adc
call
imul
lods
repnz
add
stos
push
cmp
and
adc
adc
dec
push
mov
adc
mov
fwait
pusha
out
stos
cmc
scas
add
shrb
lret
pop
std
xor
inc
test
push
push
fstl
xchg
pop
xor
lahf
es
push
cwtl
or
repz
rcl
pop
shrl
mov
es
mov
inc
lods
loop
cmpsb
mov
fildll
inc
sbb
mov
cli
in
sbb
inc
sub
lcall
ret
das
xchg
fsubr
mov
idivb
adc
xchg
enter
mov
in
scas
stos
pop
push
xchg
fwait
insb
pop
lods
pop
clc
leave
cmp
sub
adc
mov
repz
iret
mov
test
sub
lock
test
and
iret
fcoml
cld
lea
dec
aad
mov
stos
pop
leavew
lret
sub
pop
sub
or
inc
std
add
add
arpl
and
arpl
int3
xchg
jg
test
mov
and
mov
icebp
daa
arpl
mov
loopne
mov
shl
mov
lds
inc
loope
fmul
loope
pop
shrb
ss
pop
mov
or
iret
sub
and
dec
ds
stos
pop
sub
test
scas
test
jne
sahf
sub
data16
mov
ss
mov
nop
pop
sti
into
popf
fcompl
add
lds
bound
sbb
jbe
loop
mov
mov
dec
dec
int3
scas
clc
daa
jne
in
jmp
push
daa
jmp
xchg
loopne
inc
or
lods
pop
std
aaa
or
fdivl
xor
xchg
insb
repz
fsubr
or
pusha
pop
shll
adc
imull
aaa
add
push
sbb
cmpsl
stos
dec
or
push
outsl
fstpl
adc
fistpl
ret
fisubrl
push
cmp
lods
inc
stc
adc
rcr
xor
icebp
out
imul
out
data16
add
jns
dec
xor
pushl
aaa
mov
insl
popf
pushf
mov
mov
pop
loop
pop
sub
xchg
loop
pop
addr16
and
andb
or
ret
into
mov
sbb
mov
mov
adc
into
jmp
mov
cmp
call
jp
pop
or
sbb
add
data16
scas
out
pop
mov
push
mov
mov
or
sbb
arpl
jno
xchg
les
cmp
lahf
sub
in
lds
test
push
push
cwtl
filds
sbb
xchg
mov
jle
xorl
adc
dec
xchg
cmp
cmp
arpl
push
cmp
mov
icebp
mov
aaa
dec
xor
or
mov
fldcw
sbb
int3
aam
decl
ja
jno
pop
cmp
lods
xchg
pop
xchg
lds
push
push
push
jne
dec
lret
popa
pop
sub
jmp
lahf
lods
out
jg
in
mov
mov
cwtl
fs
add
jmp
in
xchg
add
jp
js
iret
fs
lock
mov
sub
push
dec
fneni(8087
add
fistl
lcall
push
into
movsl
jg
movsb
scas
out
jl
loop
sbb
xor
dec
mov
jmp
nop
leave
xlat
mov
xchg
or
icebp
call
jae
add
jecxz
out
cmpsb
ss
add
cmp
outsb
loope
mov
push
loope
div
sub
sar
data16
and
adc
mov
jno
leave
daa
idivb
push
adc
ja
fdivl
or
paddb
mov
dec
js
ds
popl
cmc
mov
lahf
sarl
dec
lods
mov
cmp
jno
enter
cmc
push
push
push
popa
xchg
mov
jl
imul
jb
or
es
cmp
xchg
inc
push
insl
icebp
ljmp
incl
lods
push
sahf
mov
sti
and
fucom
call
pop
fld
out
pop
xor
sub
cmpsb
mov
xchg
add
adc
shll
int
popa
add
mov
cli
aas
out
xchg
mov
cmpsb
push
or
dec
daa
loop
fdivs
push
inc
repnz
sub
jno
sbb
test
push
es
pop
cmp
in
xor
stos
stos
pop
stos
inc
mov
les
sti
cmc
inc
ficoml
cmpsl
negb
pop
repnz
add
sbb
xchg
std
mov
cmp
mov
outsb
jge
sub
sub
lahf
cmpsl
mov
sar
leave
fwait
mov
mov
mov
repnz
imul
jl
push
mov
rcll
and
push
xor
adc
aam
scas
lahf
les
push
push
inc
jbe
enter
mov
sbb
pusha
ret
loope
lods
dec
cmpsl
mov
sub
lock
stos
lcall
and
popa
arpl
mov
inc
movsb
adc
mov
jae
and
fnstenv
daa
icebp
jb
pusha
ljmp
adc
adc
push
push
xorl
mov
enter
cmp
stos
stc
jnp
cwtl
pop
push
mov
scas
or
je
jns
mov
cmpsl
loop
and
cwtl
arpl
sbb
fimuls
inc
sbb
ljmp
xchg
repnz
cmp
add
pop
sahf
mov
push
jo
ds
xor
adc
insb
lods
jmp
js
add
scas
xor
sub
subb
sbb
mov
cltd
or
mov
and
pop
jmp
jp
mov
out
mov
pop
popf
divl
testb
push
add
xor
mov
arpl
pusha
mov
cmp
int
pop
data16
sbb
push
adc
es
jb
in
fwait
aas
rcrb
or
dec
stos
sbb
test
cmp
adc
mov
add
sbb
pop
mov
mov
inc
cmp
jae
icebp
jbe
pop
out
mov
add
ds
addr16
mov
pop
push
aaa
pop
adc
stos
jmp
popf
jno
mov
mov
dec
lea
inc
jle
dec
pop
or
test
mov
ror
jbe
jne
ret
cmp
mov
icebp
sbb
dec
mov
arpl
mov
hlt
inc
mov
mov
add
push
jno
cmp
mov
nop
lcall
hlt
inc
ljmp
dec
or
mov
ds
js
imul
movsb
out
pop
outsb
dec
daa
and
push
add
cmc
xlat
jl
fucomi
mov
repz
push
iret
imul
adc
rcrb
jne
mov
mov
adc
sbb
das
adc
or
add
and
mov
cld
lds
push
int3
andl
icebp
testl
lods
mov
inc
cmc
and
loopne
xor
cmp
sti
push
mov
push
adc
stc
loop
subb
xchg
jg
out
cwtl
or
sbb
jp
cmp
flds
mov
pop
pushf
outsl
sbb
mov
sarl
mov
loope
sub
pop
pusha
sub
push
out
pop
inc
adc
sbb
adc
xchg
mov
jge
cmp
ljmp
jae
iret
pop
or
mov
xchg
mov
add
imull
test
inc
xchg
sahf
pop
xor
jmp
aas
lock
fisttpl
mov
sahf
xchg
push
setne
stos
pop
mov
mov
outsl
adc
divb
or
out
mov
mov
scas
add
pop
mov
call
shl
out
pop
inc
pop
iret
int3
pop
cmp
call
sbb
aaa
in
push
pop
dec
lahf
lods
mov
fsubrs
f2xm1
out
out
jl
scas
sbb
fdivs
rcrb
cmpsl
cmp
adc
jns
repz
lahf
lret
movsb
testl
imul
je
loopne
mov
leave
call
add
jle
test
mov
mov
mov
cld
cli
lahf
push
cwtl
sahf
clc
repz
loopne
insl
cmpsb
push
jle
xchg
cmp
push
outsb
mov
lock
sub
das
lods
mov
and
adcl
loope
and
mov
bound
jle
sub
sar
addr16
cmp
sub
push
sub
ljmp
sub
add
jle
ficompl
add
imul
sub
or
adc
cmp
faddl
or
pop
xor
inc
pop
xchg
pop
clc
and
repz
pop
pop
xor
popa
jmp
lods
pop
push
mov
sbb
fwait
movsb
jp
in
push
out
or
and
in
lahf
das
cs
sbb
mov
rclb
adc
outsl
push
xor
sbb
cmc
sub
adc
pusha
pop
das
pop
jp
outsl
and
sbb
insb
push
cmc
imul
out
or
stos
mov
push
in
loop
stos
adc
sbb
int
inc
mov
pusha
add
sbb
pop
xor
loop
sbb
inc
mov
pop
into
and
inc
xchg
scas
pop
adc
scas
leave
inc
jb
dec
adcl
xchg
push
jmp
mov
pop
push
iret
popf
test
pop
fimuls
and
jecxz
lret
xchg
movsl
xchg
dec
jl
mov
aas
sbb
negl
in
dec
pop
out
inc
scas
leave
cld
or
jmp
mov
pop
jmp
decb
pushf
push
sub
lods
add
push
popl
iret
mov
mov
inc
daa
push
and
add
ret
sbb
dec
shl
adc
push
loop
mov
sub
push
stc
cmc
xor
mov
xchg
mov
xchg
scas
sti
mov
jmp
dec
pop
adc
idivl
push
inc
xchg
push
addr16
rcl
xchg
jle
imul
in
insb
into
or
loop
test
push
mov
dec
sub
adc
mov
jo
mov
lds
xlat
jmp
xor
or
xchg
mov
dec
cmp
mov
call
rorb
mov
adc
andb
pop
cltd
mov
push
mov
inc
pop
push
test
push
incb
sbb
mov
fists
add
in
out
or
cmc
fdivs
data16
popf
popa
sub
mov
push
sbb
les
xor
cmp
mov
rcll
jmp
icebp
sub
sarl
or
dec
mov
push
adc
jbe
mov
mov
adc
insl
pusha
mov
mov
ss
xor
call
lods
lods
pop
lock
or
jmp
lods
lock
xor
push
sbb
cld
mov
das
or
cmpb
idiv
addb
faddl
cmp
cmc
mov
adc
std
lcall
rep
cmp
ss
shl
cld
lret
mov
mov
sti
roll
push
xchg
shr
popa
fmuls
pop
push
dec
sahf
jno
push
pop
loopne
xlat
cmpl
sbb
loop
fwait
cmc
fstpl
dec
jecxz
mov
sbb
inc
or
pop
out
in
rolb
ss
scas
ret
data16
jge
shl
sub
mov
fld
mov
das
or
cmp
in
addr16
xchg
or
mov
lods
daa
xor
mov
xor
call
adc
out
xchg
je
pop
cmpsb
jae
dec
jl
outsl
hlt
mov
ja
sub
pop
daa
lea
out
in
jns
aaa
leave
xor
jns
push
and
push
jno
inc
clc
test
std
cmpb
adc
adc
sub
lods
push
add
mov
cmp
imul
call
vcvtsd2ss
testl
sbb
cmpsl
hlt
inc
dec
pusha
adc
mov
das
mov
xchg
insl
push
loope
and
jp
mov
dec
lds
jp
mov
dec
addr16
jp
xchg
sbbb
pop
pop
xor
in
sub
dec
xor
dec
test
or
dec
push
mov
fisttps
cld
or
push
sbb
jle
cmpsl
repnz
in
jg
dec
adc
js
mov
je
ret
jge
jge
xchg
xor
mov
rcrb
movsb
mov
xor
or
aas
repz
mov
pop
or
sbb
sub
mov
call
addl
jge
dec
call
pusha
push
js
lods
icebp
add
nop
outsl
mov
xchg
xor
fs
nop
or
loopne
test
ss
or
cmp
mov
mov
in
mov
xchg
fnstsw
dec
jb
loopne
and
adc
sub
pop
jge
add
inc
gs
pop
adc
cmp
xlat
lods
stc
shll
dec
lods
add
sub
jbe
sbb
and
xchg
push
sbb
popa
out
or
cmp
adcb
fsubrs
dec
arpl
sbb
rcrl
jmp
outsl
pop
push
push
add
mov
insb
mov
ret
pop
rolb
xchg
out
jle
shrb
in
in
cmp
mov
adc
push
lock
and
mov
pushf
stc
out
sub
xor
cld
pop
insw
testb
into
in
sbb
icebp
nop
fnstenv
imul
mov
push
add
adc
inc
dec
clc
push
punpcklbw
jle
ljmp
sub
les
and
test
adc
jp
mov
movsb
sahf
cli
in
add
insl
pop
adc
mov
xchg
pop
adc
add
nop
sub
icebp
jp
shll
in
xchg
or
loope
das
pop
xor
cld
lods
jne
or
inc
mov
loop
repz
add
dec
fdivs
xchg
mov
test
mov
jae
popf
push
int
pusha
or
in
xchg
int3
xor
pop
or
dec
sub
arpl
movsl
repnz
mov
mov
outsb
push
cmp
test
pop
and
inc
in
outsb
sub
das
bound
xor
fisttps
lods
dec
test
daa
cmp
mov
mov
mov
mov
fildl
adc
push
cmp
daa
popf
pop
mov
push
xor
test
popf
aad
pop
lahf
mov
shrl
mov
fs
cli
adc
inc
in
cld
dec
cmp
cwtl
sti
leave
lods
or
inc
ret
xchg
adc
lods
xorb
fisttpl
mov
inc
fidivl
ret
jg
sbb
or
dec
pop
nop
inc
jl
sub
nop
mov
xor
insl
out
xor
sbb
lds
sub
jp
mov
add
or
xchg
mov
subb
mov
repz
inc
mov
cmp
scas
and
sar
aam
xor
movsl
xor
or
into
sub
lock
gs
ss
cmp
movsb
bound
hlt
xchg
xor
sahf
cltd
loop
pushf
push
or
push
ficoms
cltd
sbb
lock
mov
fildl
les
sahf
roll
das
mov
sbb
mov
repnz
mov
push
push
movups
loope
jbe
jmp
dec
push
icebp
shl
shll
xchg
insl
jl
cltd
xchg
adc
mov
and
push
ret
rclb
dec
test
mov
sti
or
push
mov
lcall
add
sub
adc
mov
jns
mov
call
ss
xor
adc
mov
mov
aaa
aam
in
cltd
push
arpl
in
out
jge,pn
dec
sub
loope
mov
xor
dec
testb
push
fstps
cwtl
xchg
cmp
aad
movsb
sub
popa
mov
ficomps
imul
lea
add
popf
inc
scas
nop
decl
negl
lock
jecxz
add
sbb
push
jle
or
cmp
ds
pop
fsubl
fmul
dec
int3
or
and
push
mov
jae
xchg
mov
sbb
sar
mov
jl
jg
out
rclb
divb
add
mov
jo
adc
clc
push
xor
out
xchg
pop
repnz
ds
enter
lcall
push
dec
jno
test
mov
inc
sbb
arpl
call
xor
xor
movsl
cli
gs
dec
push
cmp
daa
dec
and
pusha
fst
fst
sub
mov
mov
dec
sub
iret
xchg
call
jmp
aad
inc
out
pop
inc
aad
mov
cmp
out
lahf
out
loope
mov
fsubs
dec
jno
mov
imul
sub
mov
rcrb
and
mov
dec
sbb
enter
out
adcl
lret
mov
sbb
mov
cmp
hlt
lods
add
addr16
out
out
in
daa
lds
sti
imull
test
in
and
dec
out
mov
cmp
leave
imulb
movsl
and
xchg
lret
xor
lds
fidivrs
xor
mov
movsb
or
pop
and
iret
aad
mov
pop
cli
arpl
mov
sub
repz
rorb
sub
sarb
imul
sub
mov
lcall
and
jecxz
mov
jno,pt
push
rolb
leave
jmp
add
fadds
adc
cmpsl
dec
sub
jle
add
or
pop
in
dec
cltd
mov
sub
dec
mov
mov
xchg
fisubs
sub
stc
xor
xlat
ljmp
lods
or
enter
pushf
adc
pop
mov
or
testl
lods
into
or
pop
jmp
call
push
adc
sbb
or
dec
sub
inc
clc
mov
out
push
pop
shr
jno
xchg
jbe
notl
xor
int3
ljmp
pop
call
pop
pop
push
xchg
lods
mov
and
bound
cs
dec
cmp
inc
jno
jl
and
jbe
or
stos
clc
mov
pop
nop
mov
lret
pop
push
ficoms
cwtl
pop
cmpsl
call
lar
daa
sti
lock
popf
fisttpll
mov
or
xchg
sti
mov
cmpsb
cmp
lock
stos
pop
fadds
jmp
shl
pop
mov
dec
fstp
mov
push
pop
mov
push
mov
mulb
ljmp
scas
fadds
pop
popf
pop
lret
sar
push
test
sub
mov
inc
sub
loopne
add
outsl
cmc
and
mov
sub
emms
daa
ret
lods
xor
data16
adc
dec
pop
mov
icebp
lods
jb
ret
mov
out
call
jg
push
fisubrs
sub
imulb
dec
and
gs
insl
sbb
iret
call
clc
mov
in
push
and
mov
adc
in
lods
mov
ror
call
xor
mov
xlat
lock
xchg
push
cmp
sub
sbb
mov
data16
orl
push
mov
das
and
enter
repz
sahf
cli
add
dec
sub
aam
lds
movsl
lea
out
cmp
shrl
lcall
jb
insl
stos
and
sub
arpl
in
push
test
cs
pop
push
clc
rcll
mov
rcl
pop
mov
cmp
dec
mov
and
sbb
or
jle
ret
int3
in
in
jb
jecxz
sti
adc
insb
dec
enter
xor
mov
loop
sub
les
js
test
xchg
out
dec
testl
mov
push
xchg
je
loope
loopne
mov
cmpsl
scas
out
xor
ds
testb
dec
mov
in
ds
aad
das
push
xor
testb
pop
mov
es
clc
mov
mov
repnz
jecxz
mov
xchg
fsubs
sub
push
inc
mov
dec
popa
rcrl
mov
popa
call
in
or
leave
mov
test
jno
insb
lods
imul
jge
and
or
push
push
movsb
lret
push
pop
push
pop
lret
xor
add
and
xchg
fiadds
xchg
push
lcall
xlat
in
sahf
fistps
or
push
lds
adc
addr16
or
cmp
bound
shrl
xchg
and
jnp
push
lods
fs
jns,pn
out
cmc
dec
jmp
ret
scas
sarl
jp
icebp
xor
rcll
jle
imul
cmpsl
sbb
pusha
cmpsl
sti
push
mov
sbb
push
jns
stos
out
jle
pusha
jo
xchg
arpl
mov
pop
or
sbb
pop
adc
pop
lock
daa
dec
or
das
xchg
sub
adc
loope
push
sbbl
adc
inc
sbb
add
and
sbb
push
and
mov
xor
mov
mov
adc
sub
add
iret
aam
icebp
lahf
out
in
sbb
or
out
fistpll
sub
cmpsl
inc
stc
xchg
arpl
aas
in
push
jmp
push
outsl
cmp
adc
or
ret
adc
push
sub
sahf
lods
lcall
sbb
divl
sbb
mov
gs
popf
arpl
fdivr
inc
fs
in
add
fisubl
jl
imulb
test
or
mov
lret
jp
mov
dec
sbb
jo
or
push
pop
in
das
sub
push
loopne
xchg
xchg
or
cmp
xchg
and
jb
lea
sbbb
pop
inc
fadds
jae
scas
cmp
test
in
sub
mov
sbb
test
mov
es
mov
loop
dec
fsubr
lods
xchg
into
pop
insl
sbb
movsb
pminsw
adc
inc
stc
loopne
repz
jp
add
push
sbb
pushw
mov
mov
clc
imul
shll
jge
lcall
or
jl
sub
sub
xchg
pop
lret
sub
sbb
outsb
lods
rolb
xor
pop
in
lods
lret
daa
adc
roll
mov
pop
enter
push
jb
lds
shl
test
dec
stc
lods
lods
es
mov
insb
adc
aaa
adc
sbb
int
pop
pop
ss
sub
rol
sub
and
jo
loope
cmpl
movb
frstor
ja
pop
cmpsl
mov
cmp
ret
sub
ret
arpl
or
inc
fwait
ss
scas
ret
add
scas
inc
jb
mov
cmpsb
aam
mov
mov
inc
hlt
ret
add
call
pop
out
xor
nop
or
sbb
int3
es
mov
mov
or
sub
xor
fisubrl
cmpsb
and
and
ja
fstpt
inc
and
repz
push
xor
inc
insb
pop
push
lods
lods
clc
jp
or
loope
nop
cmpsl
ja
jb
xchg
pop
xchg
pause
pop
or
pop
mov
loop
cmp
pop
inc
popa
pusha
jg
push
andl
fstpt
fnsave
cmp
insl
imul
mov
xchg
xchg
or
xchg
sub
and
adc
lods
sbb
push
mov
arpl
sbb
pop
repnz
push
and
stos
rcll
movsb
cmp
dec
xchg
jge
xlat
pop
filds
test
repz
popa
xchg
pop
pop
aaa
and
mov
jecxz
dec
andb
out
repnz
cwtl
cvtdq2ps
push
and
pushf
in
loop
fistps
cs
dec
or
aam
mov
ss
xor
stc
scas
jno
pop
lcall
push
das
pop
iret
sub
pop
jb
pop
mov
mov
imul
loop
std
ljmp
test
or
addr16
mov
or
mov
mov
mov
push
stc
jp
mov
movsl
dec
dec
jmp
call
into
jb
sub
xchg
mov
int
and
int
or
mov
dec
ret
xlat
cld
pop
out
clc
add
push
xchg
arpl
pop
or
jb
push
int3
mov
in
mov
out
sbb
jo
xlat
add
clc
xor
pushf
mov
imul
mov
imul
and
jnp
adc
shlb
lret
sub
sbb
push
test
mov
mov
outsb
ja
bswap
lahf
inc
xchg
mov
pushf
sub
adc
add
sub
xchg
add
sub
add
out
pop
icebp
mov
aaa
out
js
push
push
test
lcall
call
imul
mov
lods
inc
inc
into
adc
cmpsb
sub
imul
nop
scas
loop
repz
addr16
pushf
or
fists
adc
dec
adc
mov
test
add
or
mov
jmp
adc
ds
test
xchg
in
fs
pop
enter
jnp
jge
out
push
test
sbb
push
xchg
push
in
xacquire
std
push
sbb
jp
push
jnp
push
dec
sbb
mov
aad
out
cmp
inc
push
or
daa
inc
pop
mov
or
into
and
push
insl
pop
loope
add
xlat
out
sub
out
scas
adc
adc
or
lahf
mov
loope
cli
xchg
call
movsl
xchg
in
cmp
imul
gs
popa
rorb
mov
xchg
iret
int3
jo
add
jmp
cmp
xchg
sbb
hlt
xor
sahf
inc
into
sbb
repz
or
adc
or
cmp
sti
repnz
lods
add
xchg
inc
cwtl
mov
mov
mov
into
pop
or
jo
cld
ret
mov
push
jne
pop
and
xchg
dec
add
jg
jp
notl
leave
mov
pop
aam
cmpsb
icebp
out
and
jae
imul
cmp
push
icebp
cmp
adc
sahf
sub
adc
inc
iret
sbb
adc
and
sbb
and
push
ljmp
and
add
jge
rcrb
inc
sbb
sub
add
mov
or
lcall
sbb
pop
cmp
movsb
fwait
xchg
scas
xchg
sub
mov
dec
icebp
push
leave
imul
pop
adc
rcll
and
xchg
add
push
push
jmp
dec
es
jbe
sub
je
sbbl
xor
icebp
cmp
xor
adc
ss
aaa
imul
das
in
mov
das
add
xchg
repnz
cmpsl
loope
inc
jp
mov
ret
mov
cmp
fnsave
in
inc
lds
loop
pop
pop
xchg
add
insb
cmp
jnp
orb
out
adc
inc
pop
scas
lcall
bound
shll
mov
push
clc
inc
in
or
btr
cld
in
icebp
es
inc
or
mov
cmpb
cmp
or
or
and
inc
into
sub
in
sub
popf
adc
dec
fisttpll
add
ds
dec
stos
mov
scas
and
and
and
pop
xor
aam
pop
jb
push
sub
outsb
lea
sub
jno
cld
add
mov
inc
int3
sbb
lret
or
sub
sub
popf
inc
enter
dec
outsb
cmp
dec
mov
mov
push
dec
xorb
dec
xor
or
adc
add
sbb
xor
aad
sti
repnz
adc
out
repz
add
jbe
dec
outsl
in
sub
int3
scas
push
int
push
jl
in
or
shll
clc
bound
enter
xchg
xchg
ds
sbb
mov
adc
add
icebp
or
mov
imul
jle
jle
mov
mov
daa
shrl
shlb
cli
xor
cmpsl
or
pop
push
js
jb
jno
movsl
pop
ljmp
fnstenv
stos
mov
lahf
mov
xchg
test
addr16
add
jecxz
mov
pop
xchg
or
pusha
mov
push
sbb
sbb
add
mov
push
add
xchg
push
in
add
call
out
std
data16
cwtl
lods
arpl
ficomps
and
pop
decb
imul
dec
mov
js
jo
packsswb
dec
repz
lds
mov
test
arpl
dec
xor
jae
jg
outsl
cs
lds
push
pusha
stc
div
mov
jmp
or
pop
out
sbb
mov
or
push
insb
test
push
adc
scas
mov
out
adc
sbb
repnz
scas
lods
scas
xor
imul
mov
lods
dec
jno
mov
add
cltd
out
or
mov
bound
inc
shll
out
pop
add
insb
out
popa
out
push
sahf
out
arpl
outsl
pop
add
mov
and
iret
scas
icebp
adc
and
or
mov
push
cmpsl
dec
or
sahf
jle
ret
dec
xchg
insb
rcr
dec
and
outsl
ret
and
mov
pop
dec
push
dec
clc
or
add
leave
dec
pop
and
cmpsl
dec
insl
testb
xchg
pop
out
or
push
sbb
jo
scas
cmp
and
test
in
push
loope
push
gs
sbb
gs
mov
test
adc
mov
mov
sti
cmp
push
cld
cmpsb
jbe
ficomps
xor
xchg
inc
and
pop
in
lcall
mov
jo
cmp
cmp
data16
adc
movsl
shrl
jl
or
popa
mov
fcomps
cmpb
adcb
sub
int
outsb
add
mov
call
and
or
repnz
test
das
pop
dec
add
sbb
in
loop
pop
clc
stc
or
andb
std
loope
add
cmp
push
adc
pop
xchg
xlat
dec
scas
testl
push
or
mov
popf
lock
cmp
pop
ljmp
push
subl
inc
push
sti
push
sub
push
pop
imul
xchg
xlat
inc
pop
cmc
adc
mov
jne
insl
pop
out
inc
jo
or
pop
add
nop
pop
mov
ds
pop
incb
and
mov
mov
arpl
aas
daa
out
cmp
pusha
out
out
dec
fmull
cmp
pusha
imul
mov
sahf
lret
xor
pop
dec
outsl
movsb
mov
pop
and
cli
loope
cltd
cld
add
mov
jns
jecxz
jmp
mov
and
repz
out
mov
rcrl
add
loope
xchg
ds
lods
loopne
xlat
cmp
stos
orb
sbb
lods
mov
sub
in
cltd
test
pop
cmpsl
push
cmp
dec
add
mov
xchg
jp
repz
jge
test
xor
mov
adc
int
pop
jae
daa
addr16
add
pop
stc
clc
sbb
sbb
test
stos
xchg
pop
fcmovb
daa
scas
pop
int
vmovsd
mov
inc
pop
jns
xor
mov
pop
mov
push
add
fsubrl
pop
adc
into
outsl
xchg
arpl
add
xor
add
repz
testb
dec
cld
mov
dec
mov
and
pop
shl
scas
outsl
mov
mov
lods
adc
fiaddl
sub
xchg
sbb
lret
test
sbbl
insb
mov
push
adc
ljmp
xor
add
xchg
push
cmpsb
roll
and
sub
inc
cmpsl
inc
out
or
rcll
mov
push
hlt
adc
or
sbb
stc
mov
das
inc
cmp
jge
mov
and
stc
pop
inc
sub
xor
mov
cmp
xchg
pop
jecxz
inc
in
fcoml
ret
out
lock
dec
mov
sbb
pop
insl
mov
dec
sub
int
movsb
cmpsb
pop
scas
sub
icebp
push
cmpsb
jae
mov
and
loope
ficoml
shlb
shl
int
sbb
lods
jg
hlt
xlat
pop
ficompl
push
outsb
in
inc
sbb
std
sub
sub
insl
pop
punpcklbw
sbb
pop
fsubrl
in
aad
stos
or
jmp
cli
adc
fsubrs
cmp
jl
inc
xchg
mov
xor
adc
cs
or
mov
negl
cwtl
cmp
dec
in
and
out
push
outsb
fcmovnu
add
jmp
enter
sub
test
push
mov
fldcw
inc
or
cmovae
sub
or
jecxz
sub
mov
pop
cmp
lods
sub
pop
or
jl
cmp
cmp
mov
cmc
insl
or
mov
imul
pop
cs
adc
xchg
lea
lcall
xchg
and
hlt
ljmp
push
mov
jnp
loopne
mov
shrb
stc
add
imul
fsubs
pop
inc
ja
pop
or
icebp
and
cmp
mov
sub
in
cmpsl
jnp
rorl
adc
pop
push
andb
test
repnz
loope
hlt
mov
mov
push
and
sbb
pop
adc
pop
xor
movsb
fwait
dec
jno
bnd
fistpl
sbb
js
sub
aaa
mov
pushf
popf
or
adc
jbe
shrb
or
inc
out
ret
inc
aaa
lock
shlb
lods
popf
pop
cmp
cmpsl
pushf
pop
or
lock
push
mov
call
jmp
jbe
cmp
enter
orl
mov
mov
fpatan
or
xchg
pop
pop
add
movsl
ljmp
inc
rolb
inc
sub
push
repnz
test
inc
int
push
ret
dec
jne
subl
push
xchg
mov
pop
popf
clc
xlat
mov
lret
inc
pop
jmp
push
aam
dec
pop
enter
mov
or
sarl
loopne
lret
mov
test
sti
jl
in
scas
mov
das
loop
imul
lds
sbb
fstl
add
pop
dec
push
jbe
or
lods
pop
push
or
adc
mov
xor
test
leave
sbb
ds
and
aas
rclb
cmc
test
out
pusha
in
cmpsb
and
movntq
stos
mov
sbb
mov
jle
test
dec
in
mov
fcoml
pop
mov
roll
out
lcall
push
popa
mov
mov
add
dec
cmp
jle
sub
ljmp
std
mov
adc
add
mov
cli
pop
scas
test
or
push
dec
sahf
or
xor
stos
ss
adc
int
lret
sub
stos
xor
cmp
ret
sbb
enter
sub
inc
cwtl
cmpsl
inc
mov
andl
add
xchg
or
movsl
cli
adc
out
mov
dec
in
sbb
jg
push
in
outsl
es
push
and
jmp
xor
std
push
packuswb
aas
xor
mov
mov
test
ss
mov
subl
adc
or
and
jae
mov
push
jo
push
out
lret
adc
in
cmp
add
fisubrl
cltd
sbb
sub
jnp
and
sbb
mov
mov
pop
idiv
movsb
mov
ljmp
or
in
setl
jne
aam
jmp
repz
dec
adc
leave
inc
nop
enter
mov
push
outsb
mov
xchg
and
out
pop
cmp
inc
mov
fcmove
addr16
loope
ss
adc
sub
push
add
lods
iret
loop
mov
mov
xchg
sahf
push
insb
cs
popa
inc
and
repnz
pop
mov
aad
stos
adc
std
cmp
push
ficoml
negl
popf
or
push
out
mov
scas
ret
mov
adc
mov
jl
add
in
sub
ret
sub
dec
outsl
dec
fwait
ljmp
loope
in
xchg
arpl
inc
mov
in
cmpl
pop
call
pop
mov
add
xor
orl
mov
sub
mov
add
ficoms
xchg
pop
sahf
adc
jmp
inc
test
jg
fldt
adc
hlt
push
fcoms
scas
hlt
cmp
sbb
sbb
lock
jns
inc
and
mov
push
lods
loope
lods
lret
data16
cli
lods
aam
cmp
frstor
in
clc
and
fwait
shll
data16
lds
rcll
gs
pop
dec
pusha
popf
adc
sbb
cmp
push
pop
rcll
inc
jae
sub
call
gs
cmp
imul
pusha
lret
mov
cmc
inc
ljmpw
addr16
das
inc
stc
rcrb
imul
add
cmp
inc
mov
ljmp
addr16
ret
icebp
mov
out
aad
cmp
ret
imul
jmp
or
notl
or
and
sbb
dec
popf
loopne
mov
cmpb
hlt
adc
pop
pop
jno
pop
push
cmpsb
mov
xchg
fisubrl
sbb
pop
imul
inc
add
pop
adc
jle
or
popf
gs
jle
out
cltd
shr
out
push
adc
or
int3
cld
aas
or
fs
lcall
es
push
enter
stc
mov
cmc
adc
mov
sbb
popf
movsl
lea
jb
das
xor
dec
call
test
add
jmp
or
xor
push
xlat
stos
cld
out
out
adcb
pop
shrl
push
add
neg
incb
push
dec
sbb
add
lahf
insb
mov
add
xorl
sbb
pop
fnstsw
movsl
movsb
pop
pop
jno
push
jle
cmp
sub
popf
sub
iret
and
push
inc
clc
popa
test
inc
pop
dec
mov
push
outsl
icebp
leave
subb
imul
xchg
jnp
pop
jmp
daa
xor
enter
or
adc
cmpsb
and
out
testb
movsl
icebp
roll
fmul
mov
mov
imul
sbb
mov
push
lds
jnp
fstpl
in
jb
add
arpl
cmp
fstl
push
data16
das
stos
dec
sbb
outsl
push
addr16
sbb
leave
std
adc
popa
dec
pop
sahf
push
and
mov
and
xor
aas
sbb
dec
popa
out
dec
push
imul
mov
adc
lret
mov
push
mov
push
imulb
xchg
lds
test
xor
imul
mov
stc
add
enter
outsl
divb
fisubrl
pop
test
mov
sahf
pop
dec
dec
or
or
sahf
add
int
test
insb
and
mov
rcrb
stc
push
test
lock
mov
push
adc
mov
inc
jmp
mov
dec
pusha
cmp
xor
mov
xchg
mov
ljmp
out
push
add
push
outsl
ror
dec
call
dec
gs
cmpsl
or
inc
fildll
inc
fwait
aam
shl
test
loop
rcl
shrl
adc
pop
scas
subl
push
ja,pn
pusha
push
and
data16
jg
jl
or
push
ljmp
add
clc
out
stos
add
imul
sub
pop
sub
cmpsb
outsl
mov
in
mov
add
imul
cmp
mov
xchg
in
iret
stos
push
xchg
push
mov
and
sbb
std
or
daa
xor
sub
mov
adc
gs
jecxz
xor
stc
mov
loope
push
sbb
lods
cmpsb
mov
mov
gs
movsl
cmpsl
mov
cmp
push
and
popf
rorl
adc
imul
jmp
or
xor
xor
ret
or
insb
daa
sbb
fistpll
gs
jmp
xchg
popf
jmp
or
add
out
mull
push
sub
fisttps
sbb
or
mov
or
mov
or
mov
or
mov
movsb
add
dec
push
mov
in
scas
popa
leave
add
popf
movsb
pushf
jno
movsl
icebp
sbb
sbb
stos
or
cmp
dec
imul
push
cmpsl
test
xchg
push
ljmp
lds
xchg
cmp
or
jnp
adc
push
ljmp
in
push
test
sbb
adc
or
mov
shll
in
mov
jnp
sbb
imulb
push
mov
imul
out
mov
int3
push
pop
loopne
idivl
xor
adc
sbbb
mov
test
sbb
push
mov
push
adc
jns
test
std
cmpsl
outsl
test
push
test
sbb
adcb
dec
push
shlb
inc
add
in
cmp
mov
ret
lods
fsubs
shrb
xchg
in
outsb
adc
dec
and
cmpsl
addr16
lea
fldenv
jnp
outsb
push
pop
inc
in
sub
sub
jno
inc
cmpsb
jge
cltd
fldcw
cwtl
and
mov
rorl
les
adc
out
jecxz
orb
pop
cmp
lea
notb
sub
int3
insb
sub
mov
pop
or
adc
xchg
clts
push
xchg
icebp
fistpl
lds
jl
adc
rcrl
pop
out
insl
dec
out
xchg
mov
sub
mov
lret
lret
fwait
scas
cmc
sbb
aam
and
xchg
imul
lods
inc
fs
or
dec
int
das
lea
pop
popa
mov
or
push
insb
orb
and
orl
movsl
push
pop
loope
jae
outsl
and
or
ret
rcrl
out
push
add
stos
xor
jl
iret
sub
fcmovnb
pop
mov
push
push
fucomip
adc
outsl
mov
jne
aas
filds
dec
adc
andb
arpl
sbb
rcrl
mov
and
nop
or
stc
pop
adc
adc
jge
in
fadds
aam
mov
mov
addr16
stos
mov
iret
sbb
leave
cmc
shll
mov
jp
cs
sbbb
mov
push
xor
sub
mov
ss
loopne
jecxz
imul
enter
ret
mov
lcall
cmp
dec
adc
sub
or
push
push
cmp
sub
push
and
je
jns
lcall
xchg
aad
loop
lock
cmp
inc
int
mov
stos
pushf
out
in
pop
sti
icebp
push
add
lods
sub
or
out
daa
pop
loop
incl
push
test
repz
sahf
lret
data16
test
lcall
jp
adc
pop
aas
lods
call
dec
je
movq
xchg
repnz
mov
sbb
fst
sti
pop
ret
mov
pushf
dec
xorb
cmpsl
add
fs
jb
push
mov
int3
jnp
out
out
mov
jle
jle
scas
xchg
insl
xor
ljmp
mov
jmp
outsl
dec
enter
sbb
xor
xchg
sbb
xlat
test
xchg
in
inc
rorl
in
fcoml
pop
cmp
fistl
jb
inc
rclb
jns
jno
push
sub
cmc
mov
fidivs
mov
or
sbb
sub
popa
ret
fisubrl
repz
fnsave
sbb
rorb
and
shlb
add
and
inc
pop
xchg
adc
adc
jbe
mov
icebp
inc
test
out
xor
les
lods
clc
or
or
shl
insl
xlat
sahf
outsb
or
adc
ret
mov
jae
pop
and
sbb
push
jo
clc
addr16
scas
test
xchg
push
sub
jle
mov
orl
outsb
mov
lods
es
pop
mov
mov
je
cmp
pop
lret
shrl
in
dec
dec
mov
xlat
ror
dec
cmc
ret
jns
cld
pop
in
test
arpl
jle
aad
int
adc
xchg
mov
clc
push
out
in
cmp
enter
push
sub
pop
scas
aaa
mov
inc
mov
lahf
mov
lea
cmp
mov
jae
in
add
aas
add
xor
adc
xchg
outsb
xor
int
xchg
jo
mov
push
dec
rclb
fstpl
mov
jge
subl
es
mov
loopne
sbb
lods
push
inc
hlt
xor
jle
test
sub
sarl
hlt
insl
and
scas
testl
arpl
pushf
out
rclb
pop
cmc
nop
and
jns
push
div
pop
test
arpl
call
jp
dec
roll
xlat
push
push
call
inc
push
test
lock
inc
lahf
xor
and
sbbl
jae
jmp
add
cmp
jns
mov
cmp
add
insb
jge
pop
jne
movsl
push
pop
or
int3
leave
movntq
sub
sarb
outsb
popf
mov
arpl
pop
mov
pop
mov
lods
mov
push
insl
and
loopne
popa
xchg
lret
addr16
nop
popf
mov
mov
aad
push
xor
inc
mov
fcoms
fwait
lds
lods
sarb
dec
popf
scas
rcr
sahf
cli
enter
dec
cwtl
mov
stc
or
fwait
cmpsb
add
outsb
fidivl
loope
push
iret
jge
and
push
add
or
test
cmc
mov
inc
shrl
push
sbbb
imul
mov
test
xor
xor
mov
cs
jp
outsb
and
test
adc
je
lods
xor
push
test
push
mov
push
popf
inc
daa
scas
dec
sbb
inc
or
loope
jmp
test
or
cmpsl
ret
mov
out
push
mov
mov
mov
rol
cmp
je
mov
cmp
cmp
sti
das
fmuls
lahf
in
sbb
and
out
std
mov
mov
in
adc
pusha
stc
loop
xor
adc
je
push
in
xor
xor
lret
jle
loop
cmp
aam
pop
fbld
mov
jae
jbe
lcall
or
into
xchg
imul
sub
mov
mov
jnp
jb
iret
pop
dec
xchg
sub
pop
adc
dec
xor
pop
push
cmc
pop
stc
and
dec
sbb
out
ss
sub
xor
cld
mov
dec
out
xlat
aas
ss
mov
xor
shl
fs
add
les
lds
les
or
scas
sbb
sub
adc
loope,pn
push
lds
inc
mov
xchg
dec
inc
in
imul
jns
cmp
mov
lahf
std
test
mov
popa
cmp
xorl
add
mov
out
mov
sbb
mov
xor
push
lret
sub
lods
daa
add
pop
push
icebp
jne
xchg
and
dec
mov
arpl
dec
js
dec
pop
push
lret
je
jae
sbb
stc
mov
addl
gs
pop
push
push
addl
sbb
or
fsts
aas
add
sarb
adc
pusha
push
lea
mov
jno
sbb
mov
and
call
fidivrs
movsb
cltd
sbb
pop
or
f2xm1
std
shrl
cmp
lahf
lds
jmp
or
adc
mov
fidivs
mov
pushf
xlat
mov
inc
adc
jmp
or
fwait
cld
add
jnp
sbb
loopne
xchg
sub
mov
lods
inc
lods
pop
sub
cltd
xor
pop
xlat
cld
push
popf
inc
xchg
sbb
je
inc
dec
xor
ret
adcb
mov
test
jno
mov
cld
out
sbb
imul
jle
mov
ret
mov
or
inc
mov
in
mov
mov
pusha
ficompl
daa
icebp
push
or
pop
aaa
gs
jb
loop
adc
push
pop
xchg
push
add
xchg
jmp
in
and
js
push
jno
ljmp
mov
mov
push
out
addb
sbb
das
loopne
cld
out
push
test
cmp
sbb
mov
jno
add
pusha
dec
repz
je
in
pop
jle
inc
pop
and
leave
add
pop
lock
mov
push
icebp
or
push
push
sbbl
rolb
popa
adc
and
ljmp
iret
push
mov
inc
test
sub
mov
fwait
adc
subl
lret
pop
jmp
jg
inc
mov
sbb
in
push
sub
mov
mov
xor
mov
cmp
sar
xorl
pop
lcall
mov
fs
jmp
cs
insl
jp
lahf
ret
dec
test
mov
loope
or
or
sbb
shl
xchg
sub
and
cmove
xor
addr16
leave
mov
int3
xor
adc
out
jnp
sub
jg
rol
add
cs
mov
ja
shrl
jl
in
xor
pop
or
mov
addr16
pushf
loopne
cmpl
mov
loope
into
sti
fisttpl
mov
in
icebp
xchg
cmp
lret
add
popf
xlat
adc
cltd
pop
xor
cltd
fidivrl
sbb
fldt
pop
shl
insb
shlb
in
int
and
mov
scas
adc
sbb
cmpsl
repz
subb
ljmp
adc
pop
mov
adc
xchg
cmc
in
hlt
sbb
aam
test
in
pop
sbb
lea
divl
fwait
jae
pop
movsl
lretw
inc
add
jns
scas
jmp
sarl
repz
pop
mov
jb
mov
imul
xor
xor
jo
movsl
jecxz
add
lods
int3
std
mov
mov
or
adc
cmpsb
pop
mov
jle
je
mov
push
imulb
imul
push
jo
add
jmp
out
lcall
xor
or
push
fidivs
push
mov
pop
jp
repz
push
adc
pcmpgtb
call
in
lea
mov
pop
and
rcrb
stos
jnp
fwait
pop
pop
inc
jle
and
lcall
xor
int
incl
mov
insl
hlt
out
aaa
jl
nop
xor
dec
push
xor
xchg
out
loop
arpl
mov
fcompl
imul
xchg
mov
xchg
mov
loope
and
fldl
mov
cmp
mov
sub
fiadds
mov
pop
sti
movw
mov
pop
les
lock
cmpsb
pop
sbb
fadds
stc
cmp
lret
add
cmp
pop
and
or
pop
cmp
push
mov
dec
inc
cmp
dec
daa
jae
cmp
fs
shrl
fbld
and
push
test
jne
stos
jne
mov
js
test
test
mov
mov
repnz
pop
xor
cmp
aas
or
into
dec
stc
inc
jbe
dec
jns
sbb
xor
js
pop
scas
lahf
and
adc
lds
mov
ret
call
fnstcw
mov
test
ss
xacquire
dec
ja
xor
inc
push
test
outsb
jmp
xchg
lret
adc
call
inc
loope
jmp
pop
xchg
shll
xchg
sbb
jns
imul
jp
pop
push
into
mov
xor
jge
stc
mov
enter
push
mov
lcall
hlt
shl
mov
cmp
sti
das
das
add
int
in
mov
sub
push
xchg
jbe
adc
mov
fnstenv
and
imull
and
xor
jg
dec
icebp
or
pop
add
hlt
xor
pushf
pop
sub
adc
sti
cmpl
int3
cmpsl
mov
clc
and
inc
popf
negl
rolb
or
cli
mov
fistl
cmc
aad
in
sub
dec
lahf
shld
inc
xor
xchg
testb
pop
je
in
mov
aaa
fidivs
popf
notl
push
jbe
sub
add
sbb
pop
pusha
stc
push
sarl
and
aad
stos
jg
sbb
sub
imul
xchg
sbb
jp
scas
orb
sub
dec
xchg
dec
jo
push
jb
or
jg
out
repnz
int3
mov
push
cmp
aas
mov
test
sub
pop
xchg
xor
or
jp
mov
jmp
ret
sbbb
sahf
test
bound
cmp
adc
aas
mov
sbb
pop
push
loopne
aam
fdivs
adc
dec
stos
mov
es
sbb
sar
sbb
sbb
outsb
icebp
js
cmp
cmc
arpl
cmpsl
inc
pop
pop
cmp
lahf
add
dec
out
adc
icebp
stc
and
sbb
lods
or
push
in
inc
rcrl
lock
push
insb
call
out
loop
mov
and
cmp
xchg
xor
sbb
xchg
inc
lods
sbb
es
ljmp
outsb
outsl
test
sbb
or
fnstenv
adc
jb
sbb
in
mov
cld
ds
xchg
fisttpll
and
push
inc
push
dec
mov
loop
pop
std
sahf
test
loop
pop
pusha
mov
inc
leave
adc
xchg
imul
sub
pop
into
jne
push
or
cmp
mov
push
add
adc
ret
add
xlat
pusha
pushf
ds
push
lds
stos
mov
push
cmpsl
or
lds
inc
cmp
jbe
out
cmp
cmp
test
and
out
sbbb
sub
sbb
into
test
stc
xchg
sarl
fld
incl
movsb
mov
jbe
sahf
je
xchg
hlt
fdivrl
insb
xchg
mov
into
jge
jecxz
cmc
sub
lea
lret
mov
fsubrl
cmp
mov
add
mov
shl
js
jg
mov
xchg
fsub
sbb
decl
lret
lret
loopne
aaa
int
and
jbe
push
in
sub
inc
jmp
ss
dec
cltd
cmc
xor
fistps
es
lret
xor
adc
fldcw
pop
in
imull
inc
ds
push
sbbb
mov
pop
outsb
cltd
ja
inc
xchg
fwait
adc
fstpt
lret
iret
cmc
sti
sarb
xchg
fcomip
mov
leave
push
outsl
cld
cmc
add
lods
loope
xor
scas
pusha
lret
mov
and
and
adc
shll
jmp
les
and
pop
cld
jl
sarb
pop
xchg
pop
adc
jns
pop
jno
cmp
xchg
mov
mov
or
subb
shll
adcb
dec
jecxz
mov
jmp
in
mov
pop
xor
loop
adc
daa
push
cs
cmp
stc
ljmp
dec
push
or
inc
adc
scas
in
xor
lahf
mov
test
andb
fistl
lock
imul
ror
mov
dec
and
sahf
popf
mov
nop
cmp
hlt
repz
jae
push
bound
fdivrp
sbb
addr16
loop
scas
enter
xor
sbb
in
ja
test
xchg
xchg
cwtl
push
out
lret
aam
les
mov
mov
aas
sub
xchg
pop
inc
push
adc
mov
mov
js
xlat
xchg
insl
pusha
loopne
cld
popf
leave
inc
sbb
test
and
add
and
frstor
das
pushf
ds
iret
mov
sti
cmp
inc
out
push
pop
mov
fwait
push
stos
fildll
dec
cmpsl
insl
add
sub
test
cmpsl
or
add
loopne
and
pop
xor
mov
aas
and
lcall
dec
int
mov
adc
pop
dec
mov
cmp
and
mov
stos
outsl
add
cs
cmp
subl
aas
sbb
push
ja
xor
mov
addr16
push
jmp
sti
adc
movsl
xchg
and
fwait
stos
pushf
std
cli
cmc
xchg
cli
lock
xor
mov
fildl
lahf
addr16
adc
pop
push
adc
pop
push
dec
addl
aaa
sub
xchg
adc
sub
daa
insb
es
pop
pop
mov
repz
mov
xor
jno
les
mov
sti
pop
inc
jl
and
enter
mov
mov
cmp
push
cli
xor
adc
notb
leave
in
out
and
jo
xchg
mov
fistl
mov
popf
aam
adc
xchg
imul
xor
push
pop
int3
xchg
mov
outsb
notl
fdivrs
xchg
cmp
cmp
xor
jecxz
cmp
pop
fxch
out
sub
rorb
sbb
lret
or
and
sti
xchg
in
sbb
inc
lret
stos
inc
xor
addr16
jg
xchg
and
xor
jns
dec
mov
loopne
loope
sbb
andl
and
sub
mov
sub
dec
je
cmpsl
or
dec
imul
leave
enter
pusha
mov
lret
push
or
shll
rol
sub
es
ljmp
iret
xlat
je
jge
stos
lcall
cmp
jbe
mov
lret
mov
adc
xchg
and
cmp
daa
xor
ret
mov
gs
sbb
dec
and
mov
stos
sbb
icebp
xlat
mov
xor
aam
stos
popf
movl
mov
cwtl
shll
mov
cmp
inc
mov
ljmp
sbb
cwtl
popa
push
out
push
add
sub
ror
jmp
popf
lret
aas
jb
xchg
pop
jge
cld
xorl
or
pop
lods
cli
cmpsb
push
mov
fdivl
push
cltd
jmp
and
xor
mov
or
mov
push
dec
pop
mov
fdiv
ret
daa
mov
nop
inc
pushl
inc
nop
jae
xor
inc
mov
adc
adc
pop
adc
push
shr
push
enter
push
loope
pop
xor
iret
push
inc
fwait
sarl
add
popa
sub
pop
ss
and
lret
es
cmpb
xor
bound
imul
pop
adc
aas
push
mov
sub
and
jp
das
and
cmpsl
or
push
cmpsb
dec
call
xchg
sti
nop
jecxz
mov
mov
jo
jecxz
mov
divl
rcrl
xor
mov
mov
xor
cmpsb
lret
movsl
sub
shlb
daa
sbb
out
repz
out
xor
in
inc
insb
adc
out
cmp
shl
mov
mov
cmovns
mov
loopne
les
add
arpl
xchg
sti
push
pop
ret
mov
push
lods
dec
push
shll
js
sahf
in
cmc
sbb
mov
pop
xchg
cmpb
ljmp
mov
add
dec
add
sbb
aaa
jo
xor
xchg
mov
loop
loop
out
jmp
jae
adc
pop
fmuls
es
fwait
mov
xchg
xor
sti
cs
jge
fs
adc
popa
or
lods
mov
imul
cmp
or
ret
les
lret
dec
mov
pop
cmp
pop
cld
mull
test
sub
mov
out
out
or
and
push
cmp
sar
out
xchg
test
xchg
lds
clc
subb
outsb
je
inc
dec
notl
notb
jmp
xchg
push
and
and
push
xchg
sub
iret
adc
cmp
nop
pop
jo
es
loop
ja
ljmp
subb
or
dec
std
pusha
lds
iret
sbb
jge
pushl
lcall
xlat
push
mov
mov
mov
js
mov
push
inc
xor
cmc
sbb
movsl
negb
push
mov
aam
sub
fistpll
jp
inc
add
dec
adc
loopne
lcall
add
es
pop
cmp
cmpsb
and
sub
inc
sbb
jae
mov
cltd
aam
add
stc
shrl
mov
ret
subl
jmp
dec
or
sub
pushf
inc
shll
sub
fists
jbe
popa
dec
loop
aas
dec
ja
sub
test
push
xchg
or
imul
mov
jmp
fmuls
add
sti
test
mov
or
sbb
add
inc
clc
mov
xchg
lret
pop
in
es
pop
inc
dec
das
pop
cmp
xchg
in
rcll
jns
adc
mov
push
out
jp
pusha
mov
dec
mov
fwait
push
out
js
sub
mov
fidivs
mov
es
loopne
jge
out
add
cmova
mov
xchg
popf
or
arpl
push
dec
popl
bound
xor
jae
inc
imul
fstpl
jp
mov
mov
loop
sub
adc
mov
int3
add
mov
mov
aaa
inc
pop
push
call
sub
push
imul
mov
xchg
mov
mov
jle
xchg
jbe
nop
pop
jmpw
jecxz
jp
outsb
daa
jbe
or
or
pop
cmp
mov
loop
jp
ds
fwait
push
sub
lret
or
mov
and
sbb
idiv
sub
adc
lds
cmp
ret
mov
xchg
dec
fimuls
cmovle
rcr
dec
or
outsl
sub
insb
adc
cmp
pop
loopne
and
or
fcomps
mov
inc
int3
push
cmp
in
out
mov
lea
pushf
mov
test
mov
add
lods
lods
movsb
fwait
push
repnz
sbb
mov
je
mov
or
mov
dec
test
fiaddl
cmp
test
scas
inc
test
gs
in
bnd
push
scas
loope
pop
push
pop
aam
out
xchg
lds
pop
and
add
bound
inc
mov
divl
jns
sbb
cmp
add
add
sbb
push
mov
fistps
sbb
jge
xor
add
in
lods
sub
rolb
mov
gs
xchg
dec
mov
add
add
jecxz
or
sahf
xlat
out
sub
scas
aad
ss
icebp
icebp
pop
push
cmp
out
pop
sbbl
jg
pushf
out
lock
cmpsb
cmc
negl
sahf
js
pop
arpl
fisttps
push
iret
sub
scas
jmp
xor
mov
and
dec
pop
fnstsw
outsb
push
ffree
pop
inc
pushw
add
sbb
ret
sub
sti
adc
lahf
mov
mov
add
dec
pop
in
dec
fdivr
notl
add
aad
jge
xchg
gs
cmp
cmc
in
pushf
mov
inc
adc
xchg
mov
iret
test
xor
push
fxch
mov
je
popa
xlat
add
ja
dec
mov
mov
cmp
pop
jmpw
outsl
out
or
xor
mov
push
ret
aad
icebp
lcall
sbb
xchg
cmc
addr16
or
pop
pop
arpl
imul
std
pop
cli
cmp
movsb
push
inc
xchg
mov
or
mov
mov
cmc
xchg
push
pop
shlb
pop
and
and
orb
xor
shll
dec
leave
or
or
mov
push
inc
jb
das
push
sbb
shlb
dec
inc
cwtl
popa
mov
test
xchg
add
lahf
pop
mov
pop
sub
or
pop
rcll
or
sub
cmp
jbe
mov
lret
in
in
or
xor
cmp
xlat
push
sub
pop
sti
ljmp
jge
inc
je
das
clc
test
subl
cmp
push
jge
lcall
pop
ret
js
sub
lds
mov
bound
and
and
pushw
mov
xor
aam
or
adc
mov
add
pusha
xchg
iret
imul
fldenv
mov
sub
test
pop
sbb
rsqrtps
cmp
xchg
outsl
push
movsl
sbb
in
mov
shrb
icebp
fistpl
clc
sbb
addl
out
mov
add
imul
addl
repz
jnp
scas
pop
jb
sbb
jo
or
aad
lahf
push
icebp
xchg
out
push
scas
jmp
aas
dec
push
sub
mov
cmp
cmc
jae
sbb
decb
out
jb
es
sahf
cmp
add
xchg
dec
cmp
inc
dec
rorl
xor
mov
stc
xchg
in
lods
add
xchg
inc
inc
decl
add
dec
loop
ss
inc
std
fsubr
das
aaa
xchg
pop
adc
cltd
mov
lea
push
stc
clc
mov
js
cmp
cmp
push
in
mov
in
adc
call
fxch
and
fcomip
and
jl
push
dec
aaa
push
insl
in
mov
cmpsb
push
repnz
ficompl
cmpsl
stc
icebp
jne
jns
ja
sbb
cmc
pop
mov
push
lea
les
and
daa
xchg
cli
cmpsl
lods
hlt
add
push
ljmp
rorl
push
stc
fiadds
iret
shrl
pop
add
mov
mov
push
adc
xchg
jp
sbb
push
inc
sarl
outsl
out
inc
jp
repz
jmp
xchg
cmp
pop
add
lods
outsl
lea
daa
imul
pushf
jo
les
lret
loopne
sub
incb
inc
mov
out
lahf
adc
cmp
scas
out
or
in
orl
pop
movl
pop
push
mov
loope
in
inc
push
call
push
inc
ss
xorb
fisttpll
aad
or
xchg
loopne
aam
scas
and
pushf
sub
dec
stc
pop
push
jbe
fcomi
push
repz
cwtl
subl
sub
fwait
add
and
outsb
mov
mov
rol
ja
add
mov
int
icebp
dec
adcb
outsl
call
mov
cli
cmp
xchg
pop
mov
cmp
and
cmp
push
testb
cmp
jns
mov
insl
mov
call
rcr
out
jnp
lahf
mov
add
cmp
mov
and
push
sahf
mov
loope
xlat
ja
movsb
jg
cmp
pop
mov
daa
mov
jo
push
movsb
jmp
gs
push
scas
sub
and
outsb
movsb
pop
jle
cmp
popa
fwait
arpl
out
jmp
or
lock
pushl
sub
jecxz
mov
test
cmp
sub
pop
or
pop
xor
mov
adc
add
sbb
push
add
or
sub
mov
call
lods
es
aas
movsb
stos
push
add
xor
lea
movsb
pop
mov
cwtl
dec
pop
shrb
inc
test
pop
or
push
jmp
mov
mov
loope
push
test
cmp
jo
jecxz
icebp
jae
call
mov
sgdtl
inc
push
pop
addr16
fsubrs
add
loop
jge
lret
in
sbb
cmpsb
lret
add
xchg
xlat
fucomi
lods
and
scas
sbb
imul
jmp
sbb
ja
out
jg
mov
movsl
push
pop
sub
jae
lods
pavgb
fwait
mov
out
aas
add
imull
or
push
movsl
std
push
pop
jnp
push
jo
dec
faddl
jge
loope
mov
push
mov
xchg
push
sahf
jl
jb
shrl
adc
out
pop
mov
mov
cltd
lods
bound
lret
and
imul
add
pop
ljmp
push
xor
and
adc
xchg
daa
pop
xrelease
scas
aas
orb
or
jbe
jp
add
stos
outsb
pop
shlb
cltd
mov
out
or
xlat
dec
fnop
jge
dec
popf
sti
ret
and
mov
add
movb
sahf
in
and
sbb
push
stos
adc
sti
add
dec
std
inc
clc
mov
aaa
adc
insl
sbb
sub
test
add
sbb
adc
cmp
ljmp
lahf
fiaddl
ljmp
cs
int3
sbb
imul
ja
adc
cmp
fildl
mov
mov
add
out
mov
mov
xlat
and
icebp
stos
push
es
xorb
out
jg
test
mov
mov
ret
push
dec
jno
inc
sub
iret
fstps
mov
and
xchg
xor
call
or
adc
outsl
mov
dec
inc
xchg
stc
jno
adc
enter
dec
cmpsb
dec
fdivr
add
fistpl
jl,pn
les
pop
shl
repnz
fdivrs
mov
je
mov
push
xlat
jmp
cmp
push
xlat
out
mov
jle
jge
jmp
dec
xchg
jae
cmp
xchg
lcall
daa
popl
xor
add
ror
sbb
cli
repz
cmpsl
enter
aad
xchg
push
or
pop
repz
jp
sbb
cltd
push
push
push
inc
addr16
cmpb
dec
push
or
or
jecxz
lcall
sub
dec
nop
add
sub
int
loopne
hlt
ss
inc
sti
jg
in
mov
cltd
es
pusha
pop
lds
sar
jns
mov
std
xchg
pusha
sbb
push
scas
push
ljmp
xchg
push
sbb
sbb
mulb
xchg
mov
loope
cmpl
js
xor
popa
jnp
dec
push
fsubl
loope
scas
repnz
push
cmpb
js
jle
fmull
popf
notl
enter
sahf
aas
inc
lods
insl
xor
xor
or
dec
sub
mov
call
jno
bound
and
pop
xchg
xchg
pop
inc
aad
cmp
jo
into
and
insl
in
push
fstpl
xchg
es
mov
cmp
xchg
mov
fldcw
ret
adc
or
cwtl
into
cli
in
push
jmp
push
sub
xchg
sti
je
xchg
lock
mov
imul
sub
ret
stos
pop
sub
push
push
movq
lahf
dec
cmp
add
and
jb
jno
mov
repz
mov
lods
cmp
cld
decb
in
sbb
xor
jno
or
jecxz
in
fisttpll
xchg
lea
cmp
xor
lret
and
add
cmp
shll
push
int
out
call
xchg
pop
aas
mov
fistpl
cmp
stos
xchg
dec
stc
add
pusha
pusha
dec
jg
dec
or
js
mov
loopne
jge
or
daa
adc
jb
or
push
xchg
addl
test
icebp
xchg
adc
push
mov
popa
popa
mov
mov
and
mov
mov
dec
add
add
mov
inc
cmpsb
test
imul
and
jb
arpl
aad
rcrb
cmp
add
in
cmc
repz
aam
push
insl
push
sarl
data16
lods
inc
sarl
cld
push
ficomps
xor
loope
dec
sub
push
ficoms
call
mov
add
sbb
gs
push
xor
addl
pop
pop
xor
out
stos
loopne
pushf
xor
gs
add
popf
aad
jns
push
lret
dec
sub
and
sbb
pop
lock
push
or
into
ja
mov
push
jbe
lock
adc
push
out
movsb
cmp
inc
repz
lods
into
das
shlb
shll
sub
dec
dec
sbb
icebp
mov
call
xor
adc
dec
xor
sahf
enter
mov
mov
push
xor
dec
jno
adc
outsl
rorb
cmp
arpl
cmp
mov
or
xchg
and
pop
pusha
xchg
adc
imul
jb
push
jecxz
rolb
cmp
cmp
mov
sbb
ret
push
out
sub
cld
xor
in
cld
gs
cmp
inc
pop
pop
imul
cmp
mov
cmp
popa
rcll
jns
mov
adc
mov
repnz
xor
stos
xlat
mov
mov
mov
arpl
pop
add
pop
pushf
push
mov
mov
loopne
or
std
fdivr
and
scas
push
jb
push
adc
dec
test
outsb
xor
jecxz
hlt
iret
jns
xor
add
out
mov
cmc
neg
cmp
cmpsl
fsubl
test
push
and
mov
into
push
arpl
insl
mulb
cmp
lret
pop
das
add
jp
mov
loopne
xor
cmp
out
jp
dec
and
jmp
cmp
fmul
aaa
jge
jl
cmpsb
outsb
mov
adc
outsl
lods
inc
inc
adc
subl
ja
call
or
scas
sub
cmpsb
test
adc
cmp
out
loop
shl
jno
in
mov
daa
cwtl
push
fld
in
jbe
mov
scas
dec
sahf
pusha
mov
imul
mov
add
xor
je,pn
push
push
mov
cmpsl
cmovl
push
cmp
dec
jb
mov
lock
loope
sub
mov
je
and
xchg
jns,pn
push
in
mov
cli
popa
xchg
jg
insl
out
dec
stc
cmpsb
inc
cmp
nop
test
test
rcll
mov
arpl
xchg
jge
pop
hlt
xchg
cmc
sbb
movsb
xlat
lock
push
jmp
sub
xor
call
imul
sub
cmc
mov
jns
fcmovnu
jno
gs
cmp
sub
push
pop
jne
push
ljmp
push
or
push
test
addr16
test
adc
std
cmp
dec
stos
xorb
mov
adc
add
sub
out
stos
sub
adc
mov
push
and
or
jnp
lahf
mov
out
mov
testb
stos
lahf
or
pop
outsb
add
xchg
iret
cwtl
popw
push
inc
push
adc
adc
fadds
push
mov
ficoml
dec
pop
jb
cmpsb
and
jnp
out
pop
cmc
out
jp
movsl
cmc
outsl
pusha
add
xchg
rcrb
stos
loopne
test
mov
out
cmc
xchg
mov
out
imul
jae
test
addr16
sahf
add
adcb
xchg
xor
xchg
push
repnz
into
ljmp
jmp
mov
cmp
inc
fidivs
subb
es
in
add
mov
pop
adc
dec
stc
nop
mov
fcompl
fucomi
push
test
sti
sti
or
or
push
ljmp
dec
xchg
jns
into
push
sbb
adc
enter
or
es
jmp
push
ficoms
xor
add
mov
in
xlat
ficompl
cs
cmpsl
add
sub
shll
outsl
das
mov
test
es
shl
aad
sahf
lcall
mov
cmp
ljmp
jns
in
xchg
jns
sub
mov
mov
adc
mov
mul
xchg
es
idivb
nop
test
je
test
hlt
pusha
xchg
stc
mov
pop
lods
fldln2
imul
push
pusha
inc
shr
call
adc
and
cmpb
and
sarb
cs
add
mov
mov
inc
popf
aam
lds
jno
test
stos
lods
xchg
mov
push
push
sti
mov
jno
xchg
out
in
cmp
cld
jae
jecxz
sub
mov
outsb
cmp
mov
popl
and
pop
mov
lret
sbb
xchg
add
jne
fstl
fstpl
cli
sti
push
add
shrl
dec
sub
jp
cmpsl
test
pop
es
mov
pop
push
ficomps
cmp
in
add
mov
daa
or
movsl
imul
push
sbb
mov
sahf
pusha
lds
push
push
jb
inc
add
popf
fcoml
inc
aas
pop
push
in
jle
xor
pop
cmp
jecxz
xchg
xchg
es
push
fwait
add
and
jns
sub
adc
cld
call
test
into
adc
arpl
es
cmp
push
mov
insl
add
pop
jne
sbb
adc
xor
xorl
pop
pop
mov
in
add
loope
lret
sub
adc
or
jmp
push
xor
lahf
mov
test
outsl
dec
xor
add
dec
adc
fdivrs
mov
inc
mov
cmpsl
pop
lret
es
outsb
out
xchg
popa
out
jg
loopne
and
sbb
push
sahf
xchg
test
jge
imul
push
mov
mov
shlb
adc
dec
sub
fidivrl
push
lret
test
out
lret
test
sbb
sub
adc
fiadds
dec
mov
xchg
test
jbe
push
scas
or
jge
add
std
mov
imul
into
insb
icebp
and
aam
daa
lcall
add
cmp
out
add
je
lds
push
xor
jmp
daa
movsl
add
ret
test
or
mov
and
add
out
idiv
cli
jno
stc
xchg
xchg
add
sbb
add
out
and
add
stc
xor
xor
insl
xchg
aaa
stc
mov
add
push
and
test
je
xor
gs
sti
ret
movsl
inc
and
push
jno
xor
daa
ss
sbb
cmpsl
jmp
sar
inc
jmp
outsl
sbb
into
add
ja
in
mov
cmp
sub
sub
addr16
bound
fcompl
test
sbb
adc
mov
lahf
rcrl
inc
mov
in
sub
adc
pop
int
jecxz
sbb
andl
and
inc
addb
jno
xchg
je
lahf
sahf
shlb
inc
in
jle
xor
or
cmp
lock
cmpsb
test
in
jne
xor
shrb
pop
aad
jae
sub
out
sub
rol
cld
dec
insb
dec
xchg
push
pop
or
dec
fwait
or
xlat
das
testl
neg
repz
mov
and
dec
fmul
and
sarb
mov
decl
and
mov
sub
daa
fs
cwtl
cmp
or
xor
jle
cmp
push
adc
sahf
lock
insl
ds
mov
dec
mov
testl
cmp
test
adc
pop
and
xlat
pop
fnstenv
les
mov
out
aad
sbb
add
push
pop
mov
dec
jno
popf
jb
iret
repz
jnp
mov
ret
leave
or
imul
jne
pop
loop
cli
shlb
into
stc
xchg
nop
enter
jp
out
cmpsb
inc
shr
ss
or
and
fstl
mov
pop
aaa
jp
pushfw
add
insl
iret
out
insl
jno
mov
hlt
pop
add
clc
dec
rorl
sahf
sbb
jmp
insl
pop
xor
lret
lods
cmp
or
and
jecxz
dec
pop
test
pop
sbb
ret
fsubrs
jmp
pop
jp
ljmp
fstl
pop
test
mov
mov
movsb
push
mov
mov
sub
inc
test
in
ss
pop
test
aam
adc
mov
sbb
movsl
adcb
add
pop
ret
xlat
rcrb
pop
pop
mov
imul
into
pop
in
pop
out
leave
es
cmp
cmp
in
pop
push
test
lods
jmp
cmp
jge
adc
cmp
outsl
imul
pop
jno
mov
ficomps
jns
or
pop
lret
rcl
jns
jb
push
shl
fiaddl
into
out
inc
xor
daa
xchg
sbbl
dec
hlt
mov
std
shr
pop
test
insb
adc
mov
push
xchg
std
bnd
and
push
in
push
ss
inc
mov
jne
mov
iret
rol
std
in
mov
dec
add
mov
pop
test
sub
xor
mov
into
push
push
sbb
or
jo
pushl
cli
xor
test
jnp
xor
stc
mov
fstps
mov
sbb
stos
jb
jb
jg
jl
sub
jg
pop
mulb
mov
pop
movsl
jae
imul
out
insl
dec
sti
aaa
jecxz
or
bound
cmp
fdivrl
dec
mov
sub
movsb
enter
jmp
xlat
gs
rcrl
and
push
pop
mov
jb
jnp
and
cmp
jl
inc
iret
add
rolb
test
sbb
sub
std
popf
jns
aam
jnp
outsb
push
mov
push
add
jmp
imul
push
inc
js
inc
xchg
pushf
dec
cmp
loopne
sub
pushf
ss
in
or
jo
insl
test
lea
or
jo
into
jo
les
daa
push
sub
push
loopne
cwtl
into
xor
pop
pop
shlb
test
pop
iret
sub
cmpsb
pushf
ret
and
imul
je
pop
push
pushf
mov
movsb
das
mov
repz
addb
xor
xchg
lcall
jmp
in
sbb
pop
mov
test
add
enter
mov
cmp
stos
js
js
xchg
push
pop
mov
pop
popa
into
mov
icebp
sahf
lcall
dec
orl
lock
dec
mov
xchg
scas
or
push
sbb
lret
nop
cmp
lea
pop
push
shrl
jae
fisttpll
scas
or
gs
call
fsub
or
outsl
xor
mov
push
pop
sbb
je
pop
mov
sbb
sub
imul
in
data16
push
mov
ficoml
jb
xor
add
out
movsb
xor
das
incb
icebp
push
cltd
sbb
pop
jno
aam
jmp
gs
push
loopne
xorl
int3
push
popa
push
mov
adc
cs
test
mov
jmp
clc
sub
xchg
ret
jmp
pushw
mulb
cmpsb
pop
in
cmpl
out
cmp
xor
adc
fucom
out
sub
cmpsb
mov
and
pop
xor
mov
inc
in
mov
icebp
aaa
popa
daa
xchg
shl
scas
sbb
jle
mov
test
cld
pop
xchg
mov
cmp
jmp
mov
movl
push
call
popa
cmp
sub
mov
loopne
test
push
jmp
cmp
xchg
sbb
test
mov
mov
mov
pop
aaa
lods
ret
push
fistpl
bound
push
push
cli
idivb
ret
mov
push
clc
push
and
outsb
mov
dec
ds
pop
mov
or
lret
das
adcb
cmp
mov
mov
and
adc
push
out
push
lds
cwtl
jno
dec
jmp
lahf
mov
xchg
xchg
jne
loope
ljmp
std
test
inc
adc
pop
xor
rclb
mov
fbld
pop
or
mov
jmp
mov
sti
decb
call
ja
sub
adc
mov
enter
fwait
stc
stc
pop
pushf
mov
sub
add
addb
mov
jo
push
pop
adc
mov
jmp
cmp
dec
testl
xor
insl
mov
fcompl
xlat
ror
xchg
xchg
daa
or
jmp
notb
gs
xor
push
push
add
xchg
xchg
xor
adc
jecxz
pop
cmp
dec
int
in
rcl
push
push
stos
jge
xor
mov
nop
in
push
std
in
xor
and
mov
icebp
jp
arpl
ss
jmp
mov
fstpt
lret
mov
ljmp
jb
mul
into
push
sbb
cmp
inc
pop
lret
add
lfs
pop
mov
inc
mov
cmp
add
cmp
getsec
test
xor
pusha
fsubs
adc
je
xchg
das
xor
mov
rcr
test
rolb
lock
cmp
push
fwait
outsl
or
xchg
sbb
mov
in
cmpsl
mov
mov
addb
rorb
daa
out
lahf
ja
iret
mov
jno
lea
xor
lret
push
or
pop
push
ret
iret
pop
jnp
dec
or
mov
cs
movsb
in
push
outsb
or
sub
xchg
arpl
ljmp
add
dec
and
mov
jno
subl
adc
movsl
cmp
stos
pop
push
subl
into
xchg
int
mov
and
test
test
test
aad
pop
jnp
fscale
push
mov
xor
ljmp
jmp
clc
scas
fsubr
fcoml
push
ljmp
mov
cs
stos
jge
iret
cld
cmpsl
lcall
cmp
jge
fildll
mov
xchg
scas
pusha
fildl
es
mov
aas
fsubr
adc
adc
movsb
test
cmp
dec
push
mov
dec
sub
enter
push
jmp
fucomip
jno
test
xchg
fisubrs
push
pop
mov
movsb
sbb
vandps
aam
sti
mov
mull
add
jmp
sarl
mov
leave
daa
sub
hlt
clc
sbb
jo
pop
jmp
push
pusha
and
or
sbb
adc
cltd
lea
push
push
add
cmp
adc
negb
sbb
adc
and
sub
faddl
sahf
ret
call
sarl
and
orb
lcall
popf
jnp
push
pushf
dec
adc
sbb
or
in
mov
inc
xchg
xor
ss
iret
sbb
data16
jno
testb
lahf
xor
imul
scas
xor
pop
cmpsb
outsb
xor
into
xor
adc
push
sbb
mov
jns
push
push
outsl
pop
xor
pop
fwait
mov
xor
subl
mov
push
shl
adc
icebp
push
jl
shll
pop
aas
subl
and
mov
faddl
cmc
dec
sub
jo
or
scas
xchg
pop
roll
adc
ficompl
repz
adc
pop
push
xchg
xchg
xor
js
and
adc
jae
adc
outsb
fisttps
test
adc
cli
cli
dec
fcmovbe
scas
mov
sbb
inc
mov
xor
nop
pop
nop
inc
outsl
out
cmp
sbb
sub
push
or
add
xor
mov
xchg
in
pop
cwtl
xor
mov
sti
mov
xchg
xor
jae
out
pop
mov
xor
and
imul
aas
inc
imulb
mov
push
addr16
add
data16
jnp
imull
icebp
repz
nop
cmp
cmp
pushf
pop
adc
mov
dec
popf
arpl
cmp
or
fstpl
mov
push
cmpsl
in
jb
xchg
loope
cmp
aas
sub
lock
aam
push
ret
aas
sub
and
cmp
pop
push
lods
push
xor
ljmp
dec
sub
stc
out
movsl
mov
addr16
es
or
adcl
cs
xchg
loopne
xchg
sub
push
int
or
imul
sub
cmp
and
sbb
push
fs
jnp
dec
mov
or
lcall
out
ljmp
addl
loop
stc
xor
add
ret
pop
cltd
pop
lock
insb
xchg
and
movsb
xchg
mov
popa
in
jb
inc
push
adc
dec
cltd
ds
insb
ret
clc
xor
outsb
mov
in
mov
xlat
das
fbld
mov
movsl
ds
jmp
divb
out
inc
test
cwtl
insl
pop
cmc
inc
push
xor
pusha
cmpsb
mov
fldenv
fadds
push
out
ficompl
mov
into
xchg
cmp
stos
stos
push
xor
jb
adc
shll
sbb
shrb
pop
and
mov
jae
xor
test
popf
nop
popa
adc
mov
add
movsb
sbb
mov
stc
fsubs
iret
cmp
movsl
aas
in
cmp
loopne
icebp
add
jecxz
lods
or
xchg
push
mov
popf
fstpl
popa
mov
pusha
ret
stos
jbe
out
push
dec
call
out
in
fs
dec
mov
add
push
inc
mov
and
xchg
xor
lods
in
xor
sub
push
hlt
xchg
pop
cmc
xchg
shr
xchg
dec
xor
hlt
jae
cmp
push
dec
mov
inc
cmpsl
xor
mov
push
sbb
adc
out
out
clc
inc
flds
cmp
inc
sbb
fcmovnb
mov
std
jmp
faddl
add
xor
adc
ljmp
imul
adcl
gs
cmp
add
insl
cs
inc
fs
fisttps
xchg
sarb
out
jg
or
orb
lahf
mov
adc
ficompl
loope
cld
fidivrl
pop
gs
lods
jg
push
pop
aad
popf
pop
inc
ss
mov
daa
jno
pop
cs
pop
mov
jle
test
ss
dec
jno
add
push
adc
stos
das
mov
push
clc
or
add
mov
sub
stc
jbe
int3
mov
loop
jo
and
xor
bound
mov
outsb
and
jnp
popf
mov
ret
clc
popa
lock
das
or
push
jb
cs
cld
imul
maskmovq
repnz
adc
adc
xchg
push
push
lods
icebp
mov
mov
out
xchg
jne,pt
das
add
sbb
mov
xchg
sbb
aaa
or
pusha
aas
xor
aas
loope
or
test
sbb
data16
ja
ja
jbe
xchg
sahf
sub
ret
jbe
mov
loopne
gs
mov
mov
push
std
fs
xlat
sbb
pop
adc
das
lock
sbb
shl
push
pop
movsl
sub
or
sti
hlt
loop
jns
mov
aad
inc
loopne
iret
lods
sub
push
cmp
out
mov
or
icebp
xor
sbb
jmp
cmp
loopne
aas
mov
add
pop
xlat
mov
pop
or
inc
lock
pusha
idivl
adc
and
test
xchg
sti
pop
inc
in
jg
cli
sub
jno
and
sub
dec
or
mov
pop
lea
cmp
ds
pop
in
inc
shll
cmp
pop
mov
popf
incl
pop
shll
xor
xorl
xor
scas
mov
test
mov
xor
lret
or
mov
sub
jae
push
add
and
clc
aam
loopne
mov
ds
sub
call
or
lods
fsubrs
or
pusha
ret
jb
sub
inc
or
andl
mov
int3
aaa
cli
xor
adc
push
or
xchg
cmp
push
jns
dec
lcall
xchg
fimuls
lahf
jmp
mov
push
push
or
push
ds
ljmp
cld
xor
sub
pop
push
imul
lds
out
xchg
shll
push
dec
xlat
hlt
pop
sbb
pop
mov
pusha
mov
popa
push
test
xchg
ja
hlt
lods
ljmp
xchg
sub
popa
mov
inc
jb
inc
push
ds
subb
and
xchg
andb
fisubs
decb
pop
mov
xchg
push
add
aaa
int
scas
imul
nop
mov
cmp
pop
cld
or
adc
or
mov
mov
pop
sahf
dec
adc
dec
sbb
es
loope
or
es
mov
add
dec
fistpll
lcall
push
xor
mov
fidivs
xchg
push
out
and
mov
cmp
andb
push
jne
add
adc
cmpb
out
mov
xor
sti
out
out
mov
mov
push
pop
out
jae
add
push
sub
adc
push
subl
pop
cs
pop
fsubrs
out
cltd
xchg
mov
xchg
pop
outsb
cltd
dec
out
lret
subl
out
mov
jno
mov
insb
divb
sub
out
insb
es
push
inc
mov
sub
ss
leave
test
mov
xor
cmpsb
lods
sti
enter
or
roll
fidivs
xchg
xchg
adc
dec
ret
mov
jmp
les
sbb
in
inc
pusha
jg
loope
xchg
mov
cwtl
jo
mov
push
nop
sbb
stos
or
in
cmpsl
xor
popa
xor
aaa
lahf
fnstsw
xlat
fwait
ss
mov
push
movsb
imul
in
xorl
in
dec
shll
add
aam
movsl
clc
sbb
sub
jg
out
test
push
xchg
pop
popf
dec
push
std
push
add
lock
sti
jmp
jns
sbb
pop
lock
add
pushl
sbb
adc
mov
sahf
mov
sub
es
addr16
cmc
mov
mov
rclb
fstps
popf
inc
xchg
jo
lcall
mov
shrb
fcomps
xor
addr16
fsts
push
iret
pop
ljmp
xchg
fiadds
inc
loope
jmp
ficoml
loope
cli
xor
out
movsb
push
popa
adc
out
fs
jns
push
dec
outsb
jmp
aas
popf
sbb
cmp
movsw
hlt
push
popf
loope
pusha
scas
lods
push
adc
hlt
xor
stos
inc
sub
in
jp
push
pop
loop
xchg
and
jo
dec
sbb
jmp
scas
push
stos
fs
inc
cmp
push
mov
adc
jge
dec
adcl
ret
inc
mov
imul
mov
xor
lods
cmp
popf
loope
pusha
das
xor
or
dec
jne
mov
pushf
ret
sbb
sub
negl
xchg
mov
inc
dec
ficoms
rcll
in
cmpsl
daa
push
mov
mov
cmp
or
push
call
jae
xchg
orb
adc
outsb
addl
sbb
mov
movsb
insl
rorl
mov
outsb
jo
jmp
xchg
addr16
clc
lret
shll
or
pop
and
lods
mov
orl
dec
popa
lods
leave
pop
or
cmpsl
sbb
es
sbb
push
xor
cmpsb
popf
jnp
adc
push
push
xor
fiadds
rclb
xorl
add
call
inc
cwtl
jbe
fcomps
popa
cmpb
imul
test
cmp
out
lahf
cwtl
scas
ds
test
js
add
fsubr
aas
jbe
adcl
and
or
stos
jmp
lahf
lcall
sahf
jge
mov
scas
int
sub
dec
mov
and
xchg
out
push
les
push
push
imul
pusha
icebp
fcomps
add
adc
sbb
adc
dec
inc
adc
pop
ds
lock
lock
jmp
pusha
mov
out
imul
adc
test
out
jp
adc
pop
mov
adc
pop
jne
add
jle
pop
cmp
cmp
push
mov
je
lret
and
or
adc
pop
xor
jae
outsl
mov
pop
push
fldt
outsl
add
xor
xchg
pop
pop
out
das
mov
lods
dec
push
sbbb
int
and
mov
and
xchg
add
pop
mov
out
add
in
pop
pop
mov
fs
xchg
stc
or
nop
ja
cld
add
adc
into
sub
loopne
shlb
test
outsl
xor
or
addr16
orb
mov
shlb
jecxz
pop
hlt
mov
adc
pop
pop
scas
xor
adc
loop
js
in
mov
test
fsubp
dec
fstp
mov
add
fdivp
rorl
adc
imul
pop
test
xor
push
insb
sbb
mov
add
inc
data16
shlb
xor
jecxz
mov
xchg
inc
or
push
bound
lret
push
outsl
fistpl
xor
jo
dec
shll
int3
or
cltd
adc
pop
sbb
sub
cltd
popl
aas
jle
scas
ljmp
or
jo
aaa
adc
or
and
or
ja
mov
xchg
jnp
or
cmc
or
es
pusha
test
cmp
cwtl
xor
inc
scas
and
repz
repz
into
inc
shrb
and
push
sbb
gs
jo
nop
out
aas
dec
inc
clc
mov
out
jl
push
mov
sbb
or
dec
cli
insl
lods
cmc
pop
sub
add
cmp
filds
inc
data16
fsubs
pusha
or
orl
lret
bound
cli
popa
mov
inc
adc
ds
cmp
outsb
cs
jmp
push
push
mov
incb
rclb
cmp
mov
loopne
pop
jecxz
pop
add
xchg
sub
xchg
mov
and
adc
adc
pop
inc
pop
or
sub
imul
adc
pushf
cs
daa
push
xchg
sbb
lds
repnz
xor
mov
xlat
lret
add
jle
test
pop
out
adc
inc
and
insl
add
xor
push
pop
loope
iret
sbb
inc
mov
mov
add
fdivs
xor
sbb
dec
arpl
incb
push
jecxz
jmp
xor
push
add
sti
ljmp
pop
mov
xchg
imul
push
das
sub
roll
xchg
arpl
add
out
or
lret
popf
jae
scas
cmpsb
mov
insb
inc
mov
mov
add
jno
pop
sbb
ss
adc
xor
stos
insb
xor
xchg
ljmp
mov
add
add
mov
or
and
jno
pop
jo
dec
nop
and
outsb
es
xor
jecxz
movsb
xor
jne
leave
push
xchg
loope
mov
add
pushl
mov
xor
inc
jge
aas
fs
ljmp
jnp
sub
or
mov
mov
dec
andb
lahf
out
ljmp
icebp
sti
pop
sub
rorb
stos
add
lea
jbe
mull
loop
ret
leave
mov
cs
xor
cltd
addl
call
mov
mov
dec
cmpsb
mov
push
mov
and
or
inc
sbb
adc
scas
push
pusha
sub
ja
popf
inc
into
inc
sbbb
call
lahf
ror
ret
jmp
jp
int
sarb
push
push
ss
dec
into
stc
xor
and
add
mov
das
fidivs
push
push
ret
lcall
fimuls
and
lcall
mov
and
popf
xor
dec
push
xchg
bound
mov
cmpsl
xor
jo
cmpsb
inc
mov
pop
call
shrb
in
mov
or
pop
sub
push
fidivl
inc
sbb
and
jg
subl
dec
xor
fisttps
bound
mov
pop
cwtl
xor
es
push
nop
adcb
adc
push
mov
or
insb
cmp
in
shlb
dec
xlat
and
mov
ss
mov
sahf
sarb
mov
stos
test
inc
mov
test
clc
insl
pop
notb
mov
lret
stc
popa
adc
inc
adcl
push
pop
mov
dec
dec
in
sub
aam
sbb
adc
xchg
stc
bound
es
add
stc
fwait
enter
push
mov
add
pop
pushf
mov
lods
or
xchg
pop
jo
loope
loope
repnz
dec
push
add
mov
shl
pop
or
adc
js
leave
repz
aam
outsl
repnz
push
fs
fisttpl
jbe
insb
inc
jbe
test
or
cmp
arpl
sbb
test
or
ds
cmpsb
jl
popa
popa
jnp
icebp
and
sub
sub
call
out
jbe
cmpl
sbb
aad
mov
cli
movsl
push
pop
test
clc
inc
push
es
movsl
pusha
adc
jnp
std
lcall
xor
mov
xlat
mov
test
inc
inc
push
jne
mov
and
repz
inc
cs
mov
xor
inc
iret
sub
dec
jno
imul
into
call
ds
cli
aaa
push
mov
insb
ret
ds
pop
les
mov
bsf
out
fmuls
pop
cmc
fbld
inc
xchg
xor
fldenv
fstpl
loope
lahf
pop
pop
lret
xor
jbe
jnp
icebp
dec
pop
add
mov
aas
stos
leave
add
out
xor
mov
jecxz
pop
inc
push
mov
add
pop
imul
add
or
stos
adc
push
outsl
dec
xor
nop
lods
or
mov
inc
shll
lea
dec
inc
lcall
mov
stos
lods
out
dec
pusha
mov
push
pop
mov
pusha
mov
cmp
popf
jae
add
mov
push
sbb
bound
loop
jmp
jbe
xorb
mov
lods
imul
paddb
in
xor
add
jb
fsub
add
rcll
or
out
or
xchg
sbb
pop
scas
nop
lods
adc
pop
shr
adc
jmp
imul
and
xor
lea
movsl
sbb
xor
push
out
cmpsb
jge
in
inc
pop
or
subl
scas
sbb
pop
mov
movsb
mov
cvtps2pi
std
mov
sbb
rcll
or
dec
or
or
push
push
fisttpl
jl
sub
xlat
test
scas
add
scas
or
out
shrl
and
scas
or
sub
movsb
popf
icebp
xor
sbb
aaa
push
add
out
and
lods
or
or
popf
negb
test
dec
push
add
movsl
and
test
lds
in
stc
push
clc
das
adc
scas
mov
push
sahf
fldenv
nop
push
inc
push
insb
dec
mov
fwait
jae
test
push
sbb
outsb
mov
imull
mov
icebp
sbb
lcall
rorb
push
push
std
sahf
push
dec
sbb
in
rcll
loopne
add
xor
mov
cmpl
push
dec
sbb
lods
push
popa
popa
pop
cmc
js
mov
int3
test
and
into
lods
sti
enter
inc
or
icebp
popa
pop
jge
xor
inc
fwait
leave
sub
xor
aaa
int3
aad
lcall
ficoms
out
lods
lahf
xor
movsb
cmc
sub
cs
cmp
push
pop
mov
inc
aas
imul
loop
popa
sub
inc
pop
in
mov
std
in
lods
mov
testl
and
or
cmp
jmp
leave
pop
xchg
rorl
into
mov
mov
add
sub
mov
adc
icebp
ret
or
outsb
lods
outsl
mov
jge
in
nop
push
cmovnp
pusha
inc
mov
sbb
sub
shl
push
cmpsb
icebp
sub
adc
scas
ljmp
dec
sub
adc
jnp
mov
cmp
or
xchg
cmp
cwtl
push
lea
test
jne
cltd
dec
push
pop
mov
out
enter
lret
pop
jle
scas
dec
pushf
ljmp
rorb
xor
mov
lcall
outsb
les
shll
add
adc
lods
and
adc
jnp
inc
jecxz
mov
jmp
popf
add
mov
addr16
addl
sbb
add
and
inc
repnz
xchg
ds
inc
fidivrl
adc
ja
pop
in
leave
or
pop
pop
lret
mov
pop
pop
out
mov
pause
insl
dec
aaa
sbb
aas
adc
jno
xchg
aad
loop
fwait
mov
nop
and
psrad
add
jge
jns
fwait
mov
add
mov
fists
in
nop
jecxz
jmp
push
loope
loop
fcom
ret
in
out
jne
dec
mov
jle
cs
adc
pop
xchg
pop
xchg
mov
ss
cmp
in
adc
cmp
mov
je
lea
popf
fucomi
add
popf
mov
arpl
mov
hlt
mov
sbb
ret
xchg
adc
add
loop
xchg
mov
and
jmp
cmp
sub
or
je
aas
mov
test
ret
daa
mov
jbe
lret
sbb
out
scas
fnstenv
inc
lea
add
call
loopne
xor
ret
jge
mov
lahf
mov
dec
roll
divl
sahf
jecxz
ss
pop
xchg
sbb
arpl
xor
inc
or
cwtl
jmp
out
mov
adc
mov
in
lds
mov
aad
imul
in
dec
inc
mov
or
cmp
dec
mov
insl
ss
movsl
sub
push
push
mov
in
push
mov
insb
ds
push
cmp
jno
pop
pop
and
jbe
inc
push
fwait
int3
lahf
jnp
faddl
dec
sub
push
inc
or
movb
add
or
mov
pusha
lea
and
dec
stos
xchg
xchg
ds
pop
das
icebp
mov
mov
push
push
xchg
xchg
add
jg
add
mov
ret
mov
fs
fmuls
cmp
or
jecxz
stc
pop
pop
lock
and
push
push
test
out
ss
adc
mov
mov
mov
and
in
testl
cli
imul
pop
bound
sahf
not
cmp
shl
push
pop
mov
mov
lcall
aad
dec
ret
cmc
add
lret
fisttpl
movsl
xchg
dec
int3
add
fildll
loopne
in
and
jge
mov
call
add
xor
jnp
jl
fistps
adc
inc
sar
rcr
int3
cmp
ds
pop
test
std
and
push
incl
rcrb
mov
arpl
jl
addr16
or
insl
leave
add
mov
icebp
lea
pop
aad
push
mov
scas
or
inc
movsb
inc
pop
sti
aaa
and
push
scas
insl
int
stos
dec
add
push
mov
add
icebp
sbb
cmp
stos
xor
sub
cmp
ds
jne
into
das
mov
xor
mov
pop
add
repz
aam
dec
lock
inc
push
cmp
mov
pop
int
cmp
mov
sarl
inc
in
sti
je
lock
push
mov
rcl
es
pop
leave
fst
testl
imul
mov
sbb
scas
fldcw
leave
pop
jns
mov
and
shrl
data16
mov
and
mov
dec
clc
xchg
enter
and
daa
imul
movl
stos
push
and
or
std
inc
mov
sub
xchg
jp
adc
daa
es
mov
inc
jbe
and
ljmp
lds
dec
push
sbb
add
int
pop
xor
adc
mov
pop
imul
jmp
jge
sti
xchg
lea
lahf
push
jne
in
rol
and
xchg
adc
icebp
les
mov
insb
pop
lock
jbe
add
int
and
pusha
cmp
repz
test
cmc
mov
lods
or
push
xor
mov
call
mov
out
nop
test
insl
pop
and
mov
push
mov
or
in
test
xchg
cmc
mov
dec
in
mov
movsb
insb
sub
push
mov
fstps
arpl
jmp
repz
pop
cmp
adc
insl
add
jbe
pushf
rcl
xchg
cmpsl
cltd
sbb
ljmp
sbb
je
adc
jmp
and
mov
add
xchg
lock
dec
loop
movsl
loope
xor
xor
adc
ljmp
cld
movsb
pop
insb
andb
jb
dec
sub
inc
arpl
jns
dec
mov
inc
in
cmp
xor
cli
mov
cmpsl
mov
inc
jns
inc
and
mov
push
mov
subb
inc
jle
fnsave
push
addr16
sbb
mov
sbb
hlt
push
int
and
test
lods
dec
mov
mov
pop
leave
and
mov
push
inc
sbb
setne
push
jl
sti
adc
xchg
insl
jle
lock
mov
jmp
dec
in
add
add
out
sarb
adcl
jns
jo,pt
leave
aam
push
scas
xor
adc
push
shlb
mov
fwait
mov
imul
adc
or
stos
ss
sbb
loop
lret
ja
push
jp
sub
ror
cmpsb
pop
mov
inc
cmp
xchg
lahf
pop
movsl
mov
dec
push
scas
mov
cmp
jbe
dec
loopne
incb
push
inc
inc
mov
dec
popf
or
sbb
ret
xchg
add
or
jle
push
sbb
inc
push
mov
leave
push
push
pop
fdivp
pop
mov
ja
jb
xor
push
test
push
sbb
mov
pop
gs
cs
mov
or
jl
rcll
hlt
jns
push
dec
fs
dec
xchg
scas
into
xchg
xor
in
and
inc
adc
adc
mov
add
push
add
mov
ret
in
push
sub
cmp
ficomps
or
xor
ret
pop
inc
stc
and
pop
arpl
rolb
daa
aad
ds
sub
stos
cmp
or
pop
mov
scas
dec
stos
mov
sub
repz
ret
inc
push
dec
insl
pop
mov
push
movsl
scas
cmp
cmpsl
mov
lahf
adc
pop
cmc
xor
sbb
xor
out
xchg
mov
and
jecxz
ds
dec
sub
mov
or
pop
aad
sbb
loope
jo
push
push
andps
dec
jle
xchg
jmp
cwtl
mov
insb
mov
pop
cli
cmp
and
adc
ljmp
outsb
out
lcall
hlt
out
icebp
jno
or
or
dec
add
jns
ljmp
or
lock
mov
xchg
jge
mov
sbb
imull
and
loope
cmp
mov
cltd
int3
cld
aas
push
movswl
inc
mov
mov
in
add
loop
mov
dec
sub
mov
cmp
movsl
mov
push
fisttpll
sub
jle
pop
decl
lods
xchg
xchg
lahf
fwait
pusha
push
jbe
dec
outsl
or
inc
cmp
inc
jae
test
int3
cmp
lret
add
arpl
push
lahf
mov
ret
or
mov
lret
popa
mov
into
sub
sub
xor
bound
or
sub
jns
mov
inc
inc
out
and
pop
movsb
push
ror
shrl
or
cmp
rcrb
jns
test
and
aaa
outsb
mov
loope
insb
mov
push
xor
pop
jns
lods
push
dec
mov
sti
outsb
cmpsb
popf
sub
out
enter
add
xor
fs
push
or
into
pop
xor
and
and
lds
enter
gs
or
outsb
jae
and
cmc
xchg
mov
jmp
sub
dec
mov
cmp
dec
roll
test
mov
lahf
lds
aas
fdivrl
mov
inc
fstpl
lods
and
fs
dec
pop
sbb
lods
sti
pop
push
movsb
jmp
das
jne
cli
movsl
or
ja
lret
cmc
push
int
imul
stc
pushf
inc
inc
sbb
shl
pop
cmpsb
inc
sub
subb
mov
pusha
pop
inc
cwtl
into
add
pop
cmpl
lret
or
adc
xchg
pop
inc
push
pop
out
xor
ds
cmp
sbb
test
dec
dec
dec
movsl
add
pusha
jecxz
cld
add
mov
sub
mov
or
jl
daa
mov
jno
fbstp
lret
das
sub
shl
cld
leave
lcall
cli
jae
cltd
mov
pop
mov
stos
daa
pop
xchg
in
adcb
jecxz
in
adc
mov
fcmovnu
ja
and
popf
cmp
mov
add
rcrb
mov
push
push
pop
xchg
pop
pop
out
clc
scas
dec
xchg
sahf
dec
fdivl
daa
sbb
outsb
pop
xchg
xchg
inc
inc
imul
in
push
popf
in
cs
int3
test
jno
into
inc
mov
xchg
icebp
jge
inc
addr16
jno
into
cmpsb
movsb
stos
call
into
insl
inc
push
lods
repz
clc
vdivss
psubw
jo
aaa
lods
and
and
push
lahf
test
test
mov
fcompl
cs
in
gs
decl
in
test
cmpsl
fldl
mov
mull
pop
fistpll
mov
data16
insb
andb
or
pop
dec
test
pop
stos
mov
mov
mov
clc
mov
mov
pop
gs
iret
jns
mov
int
inc
je
sub
sub
jmp
test
dec
inc
in
pop
push
mov
les
push
pop
pop
and
gs
or
sbb
cltd
stos
pop
sbb
add
inc
ja
cmpsb
push
out
dec
cmp
jmp
cltd
loopne
push
pop
and
sub
jb
loopne
shll
adc
pop
cmp
lahf
shl
push
leave
scas
sbb
xrelease
mov
mov
pop
cmp
int3
sub
cmp
push
cltd
mov
sbb
add
adc
rolb
sahf
imul
push
adc
mov
adc
iret
sub
int
loope
cmp
add
les
addr16
cmc
jmp
mov
sub
mov
push
pmaxub
mov
sbb
stos
lret
rorl
push
add
js
pusha
fs
int
in
popf
jbe
sbb
stc
es
mov
aad
arpl
idivb
leave
mov
repz
xchg
movsl
xor
aaa
ud1
sub
lahf
mov
push
push
cwtl
andb
mov
or
xor
sahf
sub
push
sbb
insl
mov
jge
pop
push
imul
push
pusha
add
dec
sub
sahf
add
lods
fcoml
lea
pop
push
mov
pop
pop
pop
inc
xor
lret
sbb
pop
xor
add
add
shl
jno
and
jb
test
outsl
ljmp
push
lods
xchg
sbb
je
iret
iret
sub
aad
inc
repz
repz
fwait
dec
dec
mov
sub
dec
push
int3
out
leave
and
inc
pop
xchg
push
xchg
stc
movsl
fisubs
call
inc
adc
mov
dec
lock
negl
cmp
sub
pop
xchg
leave
dec
inc
jbe
jle
xlat
or
push
cmovge
dec
pop
mov
mov
xor
sbb
or
mov
sub
shr
inc
cmp
push
xchg
push
xlat
sbb
in
imul
pop
pop
pop
test
or
xchg
jp
fdivrl
push
popf
leave
or
or
dec
mov
jle
pop
inc
mov
and
lods
lds
jg
cmp
dec
jmp
jmp
sub
mov
popf
mov
mov
sbb
data16
mov
frstpm(287
or
mov
and
jo
adc
es
mov
les
adc
pusha
push
dec
inc
pop
jle
push
sbb
inc
dec
push
pusha
ret
xor
push
push
stos
cmpsb
push
lahf
lret
inc
pop
adc
movsl
dec
dec
add
jns
fisubl
test
adc
int3
movsb
xchg
push
xchg
in
negl
add
push
out
mov
add
add
push
and
push
popf
scas
xchg
sbb
ficomps
in
lock
inc
xchg
shl
fs
mov
push
jns
pop
push
outsb
mov
imul
cs
xchg
jmp
pop
ret
add
sbb
pop
out
test
sub
adc
sub
out
push
jno
loopne
push
add
mov
int
or
lcall
leave
xchg
lock
mulb
dec
std
inc
movb
mov
add
lret
sbb
stc
and
cli
test
mov
testl
inc
push
sbb
orl
push
push
insb
cmp
mov
lahf
stos
sub
ja
sub
stos
into
ret
in
sbb
movsl
adc
cmp
out
push
adc
xchg
and
inc
cmp
add
inc
jecxz
dec
pop
or
out
adc
pop
popa
in
stos
mov
orl
sbb
adc
jl
sub
pop
addr16
movsb
ss
mov
xor
lods
arpl
xchg
lret
and
dec
inc
dec
add
sub
add
movsb
jecxz
bound
dec
cmpsb
dec
sbb
sbb
cmp
movsb
fs
lods
in
inc
flds
sahf
mov
movsl
mov
loopne
cld
push
xor
fwait
jecxz
add
and
ljmp
pop
inc
mov
pop
jp
dec
cs
add
orl
cmp
inc
orl
jo
inc
or
jo
mov
pop
jmp
stc
lret
xor
pop
xchg
dec
push
cld
call
cmc
outsb
imul
sti
fs
sbb
lds
imul
cmp
aaa
jbe
and
dec
out
aam
mov
mov
mov
popf
cmp
gs
sbb
rorb
mov
add
aad
ror
dec
dec
dec
ret
sub
sbb
sub
cmc
adc
or
mov
aad
clc
add
push
popf
fsub
aas
fstpt
add
xor
ficoml
and
ds
or
test
xchg
and
int3
es
push
mov
jp
sub
pushf
add
lods
test
stos
pop
jp
daa
inc
rcrl
stc
mov
pushl
sbb
sub
mov
loopne
jae
popa
mov
mov
repnz
or
lods
lcall
add
rolb
test
daa
data16
ds
dec
int
imul
jg
aas
jg
mov
lret
fcoml
push
or
adcb
cmp
aam
sub
mov
rorb
rorl
lds
pop
movsb
insl
push
hlt
add
xor
call
lcall
jnp
icebp
cmp
push
vpunpcklwd
xor
in
icebp
pop
arpl
fmul
out
lret
push
dec
jne
pop
lcall
sti
subb
pop
ffreep
inc
pop
mov
dec
loope
lds
mov
pop
mov
xor
jae
insl
pop
leave
xor
bound
movsb
dec
dec
dec
push
out
xchg
cmp
mov
xor
mov
adc
mov
out
xlat
dec
rdmsr
pop
dec
popf
jg
xor
cmp
in
mov
test
leave
dec
or
shlb
ret
push
jne
sbb
inc
mov
xchg
jecxz
jecxz
mov
mov
sub
popa
push
push
cmp
cld
cs
js
pop
movsl
pushl
outsl
pop
int3
cmp
mov
aas
cmp
shr
mov
in
xor
imull
inc
into
sbb
shlb
push
shl
adc
mov
in
adc
xchg
sbb
aas
jp
test
push
lcall
insb
or
dec
adc
sub
jge
adc
aam
push
jo
xchg
nop
dec
mov
or
mov
out
fcoml
aaa
push
inc
scas
pushf
dec
call
push
loope
jbe
jge
out
outsl
incl
cmp
call
jb
and
push
mov
into
cmpsb
mov
xchg
in
cwtd
add
dec
mov
dec
add
mov
enter
iret
repz
test
push
pop
jmp
adc
dec
jle
adc
push
das
push
and
clc
dec
pusha
ja
dec
pop
out
inc
lock
xchg
mov
jl
dec
pusha
mov
inc
in
daa
lahf
sub
int3
dec
dec
mov
push
cmp
decb
in
pop
jmp
cltd
stos
je
int3
lods
pop
sub
into
ljmp
sub
push
ret
aad
dec
inc
mov
xchg
scas
insb
cmpsl
add
aas
mov
pop
addr16
jae
pop
cmpsl
pushf
out
mov
ljmp
cmp
push
or
test
and
mov
xor
push
lods
arpl
dec
loop
test
xchg
fldt
mov
jge
dec
jbe
cmp
sub
dec
add
test
rorl
mov
jnp
lcall
mov
inc
call
adc
test
or
adc
pop
dec
sbbb
js
mov
dec
mov
sub
push
inc
and
js
out
scas
nop
sub
fmull
jmp
leave
push
popf
lods
pusha
popf
mov
or
adc
and
lcall
mov
aaa
dec
dec
xchg
fbld
dec
test
push
sbb
dec
pop
adc
push
lahf
jge
add
cmp
into
das
pop
adc
mov
nop
popf
pop
icebp
add
cmp
ja
inc
sbb
test
inc
divb
lcall
inc
inc
paddb
mov
sub
mov
divb
pop
jne
outsb
out
ds
mov
dec
fdivl
sbb
scas
push
repz
aad
dec
cld
mov
dec
sub
insl
push
push
mov
inc
cld
pop
popf
loopne
add
lea
scas
mov
inc
jmp
aad
add
mov
addr16
test
repz
cmc
pop
setnp
in
movsb
cs
or
cmpsb
push
fistpll
or
adc
dec
xor
dec
mov
sbb
imul
aad
mov
outsl
dec
call
jmp
mov
dec
sbb
nop
fsubs
inc
ret
and
mov
dec
sub
gs
jbe
negl
into
add
or
push
aaa
mov
dec
jae
adc
sub
fdivrs
in
push
xchg
add
ljmp
lods
cld
sbb
mov
clc
mov
loopne
ja
shl
addr16
xor
test
and
mov
loopne
pop
loope
cld
pop
aam
or
mov
cmp
ljmp
inc
loop
pop
inc
lock
popa
out
iret
mov
mov
adc
sbb
and
push
out
adc
test
cmp
ljmp
pop
rcrb
shr
and
mov
push
in
rcrl
lcall
test
or
ds
push
cltd
add
aas
es
les
cmc
inc
cmpsl
rcrb
std
dec
and
mov
mov
movsl
push
jbe
jmp
sbb
and
shrb
gs
rep
dec
mov
push
dec
jg
hlt
pop
pop
lds
pop
mov
outsb
inc
setge
inc
pop
aad
stos
adc
xchg
aas
fldl
or
xor
sub
lret
jge
mov
inc
or
daa
aam
mov
gs
push
jbe
mov
sti
lahf
outsb
popa
aas
add
popa
dec
outsl
ss
sbb
inc
pop
pop
imull
popf
popf
and
rcll
cltd
test
lods
jle
imul
xor
sbb
xor
cli
adc
pop
jo
es
inc
push
sahf
insb
movsb
mov
pop
push
pop
loope
mov
loopne
in
fiadds
mov
sbbl
cmpsl
xchg
push
mov
push
mov
lahf
insl
xchg
lds
mov
sbb
cmc
pop
sub
call
pop
sub
daa
xor
outsb
subb
add
dec
xchg
pop
mov
scas
loopne
popl
xor
add
imul
adc
fs
mov
push
or
adc
jge
pop
pushf
nop
je
cmp
imul
add
dec
aas
ja
adc
push
pop
xlat
gs
pop
cltd
movsl
push
sbb
sub
rep
test
fnstsw
cmp
shll
push
repnz
xor
and
ja
push
outsb
push
mov
or
cmp
jmp
and
iret
jbe
adc
pushf
pop
int
pmullw
push
cli
rclb
loopne
das
jle
scas
xchg
sub
inc
aas
sbb
xchg
add
dec
add
dec
movsl
jmp
popa
cmp
test
pop
faddl
dec
dec
xor
push
shr
stc
push
fildl
cltd
dec
test
and
or
push
xchg
std
out
or
mov
fnstcw
mov
mov
pop
popa
and
sub
icebp
pop
dec
or
or
push
mov
ljmp
js
out
pop
and
mov
imul
dec
and
jo
cmpsl
jnp
ja
xchg
add
jecxz
sub
testb
xchg
scas
inc
lahf
dec
rcrb
jle
rcll
jmp
data16
mov
test
mov
jbe
inc
or
jle
jge
sub
loope
pop
inc
sbb
aam
aas
adc
pop
jl
mov
dec
push
popf
test
inc
jae
aas
loope
sbb
adc
lds
push
aaa
jmp
into
dec
mov
int3
roll
stc
push
out
fucom
xchg
push
add
insb
popf
jns
les
dec
hlt
jmp
stos
sub
adc
dec
lret
jns,pn
jne
pop
jne
jno
out
add
jae
mov
sbb
daa
jle
xchg
cmp
iret
cmp
xor
jbe
push
push
xchg
idivl
dec
jle
dec
jmp
sbbb
test
mov
mov
out
imul
adc
push
inc
xchg
sub
lret
addb
jle
xor
or
loop
hlt
inc
xchg
data16
popf
mov
mov
gs
push
pop
xchg
int3
pop
lcall
mov
call
cmp
adc
out
icebp
dec
lahf
pop
iret
fwait
jmp
daa
test
xchg
lods
xchg
inc
push
cmpsb
lahf
das
stc
adc
outsb
pop
fcmovbe
pop
stc
pop
adc
mov
pop
inc
out
ret
sub
aaa
in
push
push
cmp
fnstsw
inc
jmp
add
mov
scas
jno
mov
aas
insl
test
push
test
pusha
add
adc
dec
fsubs
adc
mov
pushl
pop
test
pushl
sub
or
cli
arpl
fs
inc
and
pop
xor
ljmp
imul
pop
stos
jge
mov
icebp
shrb
in
std
xchg
iret
cmp
out
fxch
dec
inc
xchg
cwtl
fisttps
in
sbb
cmpb
stc
push
push
out
jge
pop
fnstenv
sub
pop
fldl
adc
lods
das
test
push
fisttps
sub
push
inc
jae
jbe
mov
test
or
inc
push
aas
fld
xor
cmc
pusha
scas
jne
lea
sbb
aaa
xor
call
mov
xor
icebp
dec
pop
jo
push
sub
dec
pop
ja
dec
jbe
inc
pop
push
jae
mov
mov
jo
into
sub
leave
fcoml
or
xchg
out
jmp
jmp
pop
rcl
cmp
cmpb
cmp
mov
jne
or
sbb
mov
icebp
push
jecxz
xor
sub
adc
push
insb
add
incl
notb
push
pop
shrl
dec
sbb
fiaddl
xchg
sbbb
or
stc
std
mov
sub
pop
imul
or
sub
jge
sbb
mov
dec
jne
mov
in
inc
je
cmp
mov
dec
cli
repz
mov
arpl
jb
xchg
addr16
sbb
jnp
push
jg
and
mov
insb
jle
ss
dec
pop
dec
jnp
sti
sub
mov
pop
jns
or
ret
adc
xchg
and
push
out
adc
add
mov
iret
lods
or
movsl
mov
flds
adc
jb
test
popl
fmull
cmp
ljmp
repnz
rcll
or
inc
and
inc
or
movsl
fdivp
or
push
and
imul
movsb
dec
fstps
stc
int3
add
xchg
mov
jae
add
cli
push
xor
add
stos
fldcw
mov
call
xchg
mov
ficomps
pop
movsb
lods
ss
push
pusha
ja
sbb
loop
dec
xchg
or
subl
cmp
inc
pop
insb
inc
mov
inc
int3
pop
push
pop
xchg
jne
scas
in
push
ss
sub
mov
iret
mov
leave
xor
jae
aam
sbb
popa
xor
mov
mov
push
test
rcll
incl
or
in
push
adc
adc
sar
adc
jae
add
insb
sub
daa
add
loopne
pop
iret
or
imul
outsb
imul
push
pop
mov
andl
fidivs
push
pop
mov
test
sub
subl
xor
jne
mov
sbb
jbe
stc
push
adc
sahf
push
or
pop
popf
cltd
out
jae
stos
sbb
pushf
push
or
push
jb
or
ss
or
clc
insl
inc
les
fcmovnb
stos
push
dec
fldpi
pusha
sub
popf
cmp
loop
call
ret
sub
loope
enter
sarl
in
pop
mov
or
dec
adcl
fidivrl
call
into
xchg
popl
adc
ret
repnz
scas
jbe
dec
adc
je
idivb
push
test
dec
out
push
xlat
call
adc
mov
sub
push
push
mov
nop
pusha
or
nop
jge,pn
bound
jmp
fidivrs
mov
jnp
and
repnz
xchg
int3
xor
push
jne
outsl
ss
mov
push
or
lret
pop
mov
xchg
shll
ret
adc
les
andb
cwtl
insb
xchg
out
pop
jno
out
pop
fsubrp
movsl
sbb
add
dec
jne
add
data16
into
add
mov
and
dec
xchg
jae
dec
adc
jae
int3
adc
in
mov
scas
sub
sub
mov
gs
cld
xorb
xor
mov
es
mov
mov
fsubrs
cmp
jecxz
rorl
mov
cltd
dec
cmp
aam
jne
or
mulb
iret
dec
iret
gs
out
add
add
lock
jno
in
or
fidivs
lods
sti
in
sbb
mov
insl
pusha
std
cld
imul
scas
xor
bnd
cmp
pop
mov
xchg
jbe
pop
and
insl
bound
pushf
out
lahf
out
je
fmuls
mov
movsl
xor
stos
jg
inc
xchg
jae
sar
xor
push
xchg
call
pop
jge
push
ja
idivb
cs
ljmp
imul
sbb
jns
dec
pop
sbb
into
cli
test
dec
sti
mov
lock
std
and
xor
cmpsl
ret
sar
mov
adc
dec
adc
adc
mov
lret
repz
imul
or
add
fwait
lods
aad
fcmovnb
dec
lret
or
add
lea
xor
repnz
mov
cmpsb
movsb
mov
sahf
sahf
push
into
mov
inc
out
fucom
scas
popa
cld
inc
imul
sti
sbb
popa
sub
movsl
push
mov
adc
mov
dec
imul
cmp
arpl
xor
pop
inc
lret
scas
movsl
xor
or
arpl
mov
sub
jmp
ds
xchg
inc
mov
adc
das
xor
fs
mov
adc
gs
jb
into
sub
arpl
call
icebp
fidivs
idivb
aas
jge
fcoml
inc
fwait
mov
xor
lcall
ret
les
mov
dec
dec
lods
push
iret
jl
mov
js
or
xlat
clc
xchg
mov
mov
push
es
adc
xchg
icebp
arpl
jecxz
addr16
sub
mov
xorl
stos
iret
jb
pop
and
inc
lcall
add
fsubl
mov
shl
dec
jg
mov
dec
or
testl
pop
cmpsl
push
inc
std
fnstcw
aas
hlt
pop
dec
jbe
cltd
xor
mov
loope
cmpsb
adcb
and
mov
xchg
mov
xchg
in
scas
lret
or
dec
cmp
mov
shll
pop
inc
ds
jecxz
cmp
popf
lret
out
push
sbb
loopne
lahf
pop
loop
mov
clc
movb
addr16
inc
test
and
pop
sbb
pop
inc
in
jle
dec
sub
jecxz
fldt
add
push
std
mov
xchg
leave
int
shll
out
rcl
jecxz
pop
push
gs
fsubrl
fwait
rcrb
rclb
lcall
adcl
lods
xor
jno
sub
jne
into
sub
cltd
lea
repz
loop
mov
mov
sub
pusha
jns
std
rcrl
std
or
mov
je
out
mov
and
jb
loope
jg
lods
out
mov
loop
add
ja
xor
scas
push
loope
sub
pop
and
adc
popf
xor
inc
pop
lret
push
in
push
mov
cmp
push
push
sbbl
rol
lds
push
outsb
out
pop
jns
mov
xor
scas
mov
sbb
repnz
lods
in
inc
dec
hlt
out
pop
adc
mov
lods
xor
xchg
nop
shlb
iret
dec
movsl
push
aam
das
pop
pop
lock
mov
int
mov
loopne
fstpt
testl
jmp
inc
mov
imul
iret
es
nop
daa
subl
and
or
xor
xchg
incl
or
xchg
mov
push
andl
xor
adc
push
and
or
stos
mov
andb
andl
add
test
aam
mov
mov
outsl
pusha
push
pop
test
shlb
shll
pop
push
sub
inc
dec
mov
inc
push
and
popa
mov
mov
dec
aaa
xor
hlt
aas
adc
jl
stos
ret
hlt
aam
xchg
pop
sub
movsl
jno
cmpsb
in
gs
inc
lods
sbb
add
hlt
outsb
dec
loopne
stos
pushf
inc
adc
jecxz
mov
in
sbb
sbb
cltd
movsl
out
aaa
fisubs
mov
jmp
in
int3
pop
xchg
pusha
popf
dec
lahf
sub
stc
push
mov
push
cli
xchg
lret
xlat
in
movb
pop
pop
lods
lods
push
push
ds
int
or
xor
jp
fdivl
outsl
mov
outsb
push
mov
addl
add
dec
sbb
hlt
dec
inc
ss
ss
mov
xchg
mov
aam
xor
enter
int3
jle
fimull
dec
scas
inc
repnz
dec
inc
pop
fwait
stc
adc
pop
sub
or
rcrl
ret
push
jnp
mov
jne
out
sub
ljmp
jmp
adc
gs
cmp
push
loope
fcoml
pop
aad
aad
test
pop
dec
repnz
add
or
lock
ret
pop
xlat
mov
lds
movsb
pop
call
popf
push
in
or
mov
and
dec
out
pushf
frstor
movsl
xorl
lahf
fbstp
fldt
jbe
movb
lcall
lea
lods
test
movsb
xchg
cli
jecxz
adc
mov
int
lock
insl
imul
pop
ljmp
xor
mov
ss
pushl
loope
and
mov
dec
mov
les
sub
mov
push
jge
jp
stos
mov
lds
sbbl
movsb
bound
mov
fisubs
lods
loopne
aas
sbb
cmp
cmp
xchg
test
mov
or
dec
mov
dec
mov
icebp
xchg
sbb
sbb
mov
lds
xor
rorl
gs
movsb
mov
test
sub
fimull
add
add
outsl
pop
inc
in
popa
sbb
pop
xchg
in
jmp
mov
int3
maxps
mov
ficomps
loope
mov
pop
pop
cwtl
sub
jo
mov
data16
mov
aas
jne
popa
stos
scas
dec
mov
test
mov
outsl
cmp
aam
movsl
pop
in
xorl
addr16
imul
shlb
dec
mov
insl
push
sbb
popf
add
int3
lods
ret
jl
leave
jmp
add
out
or
movsb
movsl
xchg
or
mov
dec
and
add
ja
fidivs
into
jnp
jmp
inc
mov
sahf
sub
lock
pop
xor
pop
pop
adc
or
les
popa
adc
mov
rol
aad
sbb
test
xor
and
loopne
jne
sbb
jae
fsubs
and
loope
mov
and
ljmp
sbb
insb
cmpl
xor
outsl
sub
push
imul
pop
sahf
dec
cmp
adc
push
fldlg2
dec
add
movsb
inc
or
sub
sbb
xor
out
push
xchg
stos
inc
lea
xlat
lea
pmuludq
arpl
mov
mov
sbb
xchg
jl
dec
and
sbb
movsl
sub
into
add
mov
jg
mov
mov
add
orb
ss
adc
mov
pop
mov
and
push
xchg
xor
lods
mov
pop
sbbb
cmp
jne
pop
mov
or
pop
cmp
or
mov
xchg
incl
and
mov
js
out
pop
sbb
notb
lahf
popf
jle
fnstsw
push
jp
sti
sub
pop
sbb
and
in
cmc
pop
push
inc
jns
jp
xor
sub
mov
inc
mov
shll
push
in
repnz
push
mov
jnp
dec
inc
and
mov
adc
dec
fsubp
enter
and
add
movl
jmp
and
imul
cmpsl
imul
aas
mov
cltd
int3
and
mov
cmp
mov
adcb
mov
andl
pop
lret
xor
push
or
push
outsl
sahf
loope
imul
push
bound
push
cmp
stos
push
aaa
jne
pop
add
sub
stc
push
pop
movsb
pop
ja
insl
fwait
pop
aam
xchg
lretw
lret
jmp
cmp
jp
mov
lea
scas
add
mov
fstps
cwtl
lock
test
pop
xchg
loope
das
mov
lock
pusha
mov
jmp
xchg
mov
sarb
dec
in
dec
pop
jns
fbstp
mul
mov
jmp
inc
xor
xor
scas
leave
or
sbb
imul
mov
jo
outsl
aam
mov
mov
cld
pop
imul
divl
in
xlat
mov
cmp
sub
or
xlat
mov
loop
lret
push
aad
sahf
cs
lret
mov
jle
adc
pop
and
ficompl
push
xchg
shrb
cwtl
add
or
xor
loop
out
sub
cmc
xlat
push
adc
inc
and
sub
and
cmp
enter
pop
or
lods
mov
add
loope
pop
in
mov
cmp
iret
cmp
fcmovnu
dec
bound
mov
pop
push
push
popf
jg
mov
add
sbb
sub
aaa
push
xor
out
push
cmc
int3
insl
leave
es
pop
add
mov
hlt
test
pusha
out
mov
daa
in
sbb
icebp
adc
push
or
sahf
inc
push
mov
sub
mov
ret
scas
add
mov
push
mov
adc
add
das
lea
fildll
lea
fildll
lea
fildll
lea
fildll
lea
fildll
lea
fildll
lea
fildll
lea
fildll
lea
fildll
lea
fildll
lea
fildll
lea
fildll
lea
fildll
lea
fildll
lea
fildll
lea
fildll
lea
fildll
lea
fildll
lea
fildll
lea
fildll
lea
fildll
lea
fildll
lea
fildll
lea
fildll
lea
fildll
lea
fildll
lea
fildll
lea
fildll
lea
fildll
lea
fildll
lea
fildll
lea
fildll
lea
movsl
push
js
rcll
add
add
jb
add
popw
mov
xor
push
mov
repnz
gs
add
repz
clc
mov
std
cmp
push
mov
repnz
add
repnz
sbb
mov
sbb
gs
popa
icebp
push
pop
xchg
mov
push
xor
jmp
cmpb
xchg
in
cs
mov
xor
pop
mov
xchg
mov
repnz
xchg
or
push
mov
repnz
pop
repnz
in
cli
mov
jae
jnp
push
ds
jne
je
xchg
push
pop
outsb
mov
xacquire
repnz
mov
repnz
mov
repnz
mov
repnz
mov
repnz
mov
repnz
mov
repnz
mov
repnz
mov
repnz
mov
repnz
mov
repnz
mov
repz
sbb
or
lahf
aaa
hlt
hlt
xchg
mov
repnz
xor
call
dec
add
add
xor
jno
pop
mov
testl
std
icebp
add
dec
rol
mov
test
or
xor
xor
xchg
mov
cmp
push
mov
lock
mov
or
rorl
rcrl
mov
or
ds
push
mov
lock
mov
or
rorl
rcll
adc
test
or
ss
and
std
cmp
pop
aaa
hlt
hlt
mov
repnz
dec
add
add
hlt
icebp
add
dec
shlb
mov
idivl
push
das
mov
shll
jmp
xor
std
cmp
cmpsb
mov
or
mov
mov
lret
jle
mov
icebp
dec
aaa
or
and
mov
mov
bnd
fwait
pop
sahf
lahf
pop
mov
pop
pop
push
in
cmp
sarl
push
lock
sbb
lahf
rcrb
or
fstpl
popf
stc
lds
push
inc
mov
dec
mov
cld
mov
popa
xchg
lods
sbb
jae
mov
cmp
inc
and
mov
pop
fadd
xchg
in
jle
mov
fisttps
sbb
repz
sbb
xor
aaa
out
iret
adc
inc
push
xchg
xchg
fistpl
cli
dec
push
cwtl
out
xchg
mov
pop
cmp
or
mov
insl
cmpsl
xlat
or
test
xchg
cmp
pop
ds
faddl
mov
push
lahf
cmp
loopne
fldenv
ds
ljmp
ds
and
fmull
enter
pop
xlat
mov
or
add
ss
sub
mov
mov
movsl
or
pop
cmp
daa
lahf
xor
cmp
je
into
out
mov
xor
push
push
push
xor
shlb
icebp
fcmovbe
dec
sarb
xor
inc
mov
lcall
js
xor
xor
mov
fs
and
pushw
inc
cmpsb
inc
and
lahf
push
mov
mov
hlt
jp
mov
jnp
daa
fisttpll
lahf
xchg
enter
popa
mov
adc
push
roll
mov
mov
ljmp
cmc
hlt
push
jmp
ret
lods
sub
push
pop
cmp
test
and
ret
mov
sahf
add
cld
cld
pop
in
pop
mov
and
cmp
int
fisubl
adc
ret
xorb
mov
xchg
test
dec
jb
cmc
dec
mov
pop
movsl
xor
mov
out
push
push
mov
enter
cmp
cmp
call
movsl
in
jmp
adc
push
sub
mov
mov
pop
dec
inc
jbe
rolb
fsin
jae
xchg
js
out
outsb
dec
inc
stos
dec
mov
inc
push
or
pop
ljmp
or
sbb
je
and
mov
clc
or
pmaddwd
or
jg
xorl
cld
data16
xchg
lock
dec
cmp
xor
cwtl
inc
lock
inc
cmp
push
sub
dec
fcoml
jno
dec
jo
ljmp
mov
out
jbe
jo
inc
in
jmp
mov
sbb
mov
mov
pop
cmp
xchg
mov
lods
mov
jae
shlb
mov
rorl
std
sbb
out
cmp
or
in
xchg
loope
jae
or
in
and
jno
outsl
rcr
push
int3
and
mov
out
pop
ds
inc
idivl
mov
adc
xchg
aas
pop
std
dec
mov
cmp
daa
pushf
cmp
mov
or
xchg
repnz
pop
cs
adc
sub
mov
movsb
jo
sub
movsl
mov
mov
push
aas
jp
fwait
in
jbe
fwait
sbb
mov
addr16
pop
adc
mull
popa
push
ss
aas
jmp
aas
nop
mov
loope
lods
adc
xor
lcall
cmp
neg
cld
add
or
aas
mov
cld
mov
sti
and
stos
xrelease
xor
add
add
mov
inc
xchg
sbb
fstpt
cmp
push
mov
jo
leave
push
fs
in
fdivrs
mov
mov
std
inc
sub
sbb
xor
cmp
mov
mov
add
ret
jge
mov
andl
popf
mov
mov
sub
xor
xchg
jmp
lods
repnz
aad
test
cmp
imul
mov
iretw
sti
mov
ret
stos
mov
dec
add
cwtl
inc
cmpsb
jg
cmp
loope
pop
mov
cmp
loope
mov
inc
mov
cmp
push
pop
mov
repz
jmp
aas
push
addb
dec
shll
and
pop
adc
test
xor
mov
imul
add
inc
jo
repnz
cld
lcall
push
fwait
xor
or
mov
fdiv
mov
sahf
lods
jp
ds
jmp
mov
cmp
je
push
inc
ds
lcall
xchg
dec
mov
mov
sahf
stc
nop
mov
shr
int3
pop
dec
pop
xchg
mov
xor
outsb
mov
into
mov
mov
ret
xor
das
jne
xlat
shll
pop
addl
jge
or
mov
xchg
add
insl
jmp
into
mov
and
repz
inc
adc
add
mov
sub
add
mov
lds
add
out
mov
xchg
les
dec
bound
icebp
mov
or
in
popl
in
stos
mov
cwtl
cmp
xor
fdivrl
and
xchg
aam
mov
xor
repz
das
mov
adc
adc
mov
xchg
add
add
test
cmp
mov
xchg
xchg
and
mov
dec
push
cwtl
pop
xchg
dec
sub
sub
jns
pop
dec
push
or
jmp
fbstp
xchg
pop
or
fbstp
jmp
xor
mov
arpl
divl
hlt
iret
mov
mov
push
inc
fisubl
subb
inc
dec
and
push
mov
jbe
adc
ficoms
mov
mov
and
sub
mov
push
add
mov
ds
outsl
cmpsb
dec
pushf
js
dec
pop
push
cli
mov
pushf
shll
dec
jno
orb
nop
push
mov
insb
scas
add
sbb
dec
mov
loop
into
and
jae
and
leave
fwait
sbb
loope
mov
sbb
xchg
popf
mov
push
ds
cltd
sbb
sub
int3
and
and
xor
xor
insl
insb
dec
add
mov
xchg
lahf
loopne
fldenv
movsl
inc
jae
mov
pop
add
xor
sub
lods
sti
push
mov
sub
cwtl
xor
jnp
lret
pop
cmp
es
pop
rorl
fcmovbe
adc
xchg
rcrl
mov
xchg
jb
cld
and
mov
inc
and
jbe
adc
loopne
lcall
mov
ret
setae
imulb
jecxz
and
inc
sub
sbbl
mov
push
mov
jg
jae
ds
sti
push
push
pop
rclb
jb
pop
sbb
negb
sub
xchg
sbb
cld
dec
orl
out
dec
call
push
outsb
cld
sub
push
fistl
test
inc
xor
cmp
mov
xor
xor
mov
aaa
xor
mov
inc
iret
orb
repnz
xchg
fidivs
xor
sti
je
add
mov
and
lahf
lahf
jecxz
mov
fsts
inc
loopne
pop
out
or
add
movsb
mov
mov
xor
adc
sbb
xor
ds
in
ljmp
pop
mov
dec
loopne
jp
xchg
mov
xor
add
jl
mov
orl
inc
push
inc
divl
xchg
aad
out
adc
xchg
rorl
lret
cltd
dec
push
and
mov
in
js
adc
pop
pop
pop
ljmp
test
mov
sub
dec
dec
jp
iret
insl
push
rcr
jno
aas
dec
repnz
imul
imul
iret
clc
mov
add
mov
inc
cmp
and
dec
cmp
xchg
cs
mov
push
aaa
push
xchg
mov
test
es
add
sub
dec
nop
sbb
sahf
xlat
inc
int3
xchg
out
enter
cli
or
shl
jae
push
iret
mov
inc
les
push
push
repnz
bnd
lds
mov
mov
scas
loopne
sti
jns
out
mov
push
fbstp
sbbl
or
or
leave
in
adc
mov
cmp
dec
xchg
repnz
xor
mov
lret
rorl
and
test
sbb
cmpsb
shl
push
push
add
notl
xchg
hlt
outsb
out
in
adc
pop
je
mov
xor
stc
in
mov
popf
dec
pop
in
pusha
or
cmp
and
movsl
adc
cmp
repnz
mov
push
lea
adc
iret
xchg
sbb
push
jg
jb
pop
pop
std
mov
ret
mov
lods
xchg
repnz
loope
inc
and
out
xlat
mov
hlt
xor
sahf
ja
mov
xchg
mov
outsb
dec
or
iret
lahf
aam
push
jg
push
pop
xor
add
test
xchg
inc
ret
not
sbb
clc
pop
lods
sbb
cltd
outsl
sarl
sahf
inc
ffreep
int
cmpsl
int3
jae
dec
mov
incl
mov
add
idivl
shll
mov
lea
ret
pop
icebp
push
and
mov
loope
adc
sbb
cmp
xor
enter
and
in
dec
inc
movsb
popf
roll
xor
pop
testb
enter
mov
es
jb
or
ret
mov
testb
xor
lock
mov
ret
mov
inc
clc
pop
andb
add
inc
dec
xlat
aas
cs
dec
xchg
xchg
sahf
add
scas
push
xor
or
cmpsb
xchg
gs
sbb
imul
cli
inc
cmc
dec
mov
mov
pop
and
cmp
std
mov
std
fists
filds
outsb
aaa
js
je
lea
and
inc
test
dec
jne
lcall
dec
push
xor
outsl
movsb
and
imulb
add
pop
sbb
and
test
mov
mov
cmpsl
xor
dec
lret
mov
inc
popa
aaa
repnz
out
mov
pop
fisttps
or
lods
mov
mov
movsl
push
or
out
push
movb
push
push
add
push
repz
inc
mov
addr16
dec
sbb
mul
add
shll
ds
xor
sbb
xor
mov
out
into
pushf
pop
mov
dec
jle
lahf
push
adc
outsl
sbb
aaa
pop
push
mov
lea
sarb
jle
mov
jb
ss
std
mov
es
and
pop
inc
mov
sbb
mov
cmp
fcoms
push
sbbl
jl
and
es
xchg
ficoms
int3
add
stc
push
push
push
mov
xchg
push
ret
jmp
hlt
imul
stos
push
fnstsw
dec
in
mov
cli
pop
mov
rcr
daa
adc
neg
imul
out
sbb
or
jmp
xor
scas
push
push
xlat
std
scas
in
dec
ret
adc
lcall
cmc
cwtl
mov
mov
je
shrl
mov
lahf
std
mov
out
and
xchg
add
sbb
pop
insb
jo
mov
push
adc
or
les
adc
or
jno
dec
cli
jmp
loop
xchg
arpl
jo
fnstsw
cmpsl
lods
or
cltd
je
sarb
adc
xchg
out
cmpl
sahf
test
pop
insl
jmp
movsb
fidivrs
aam
stos
xor
cmp
ds
or
adc
roll
daa
add
pop
add
jle
jae
enter
push
jb
int
icebp
clc
pop
bound
lods
inc
inc
push
xchg
addr16
lret
aam
iret
lahf
cld
testb
add
lahf
les
rcrl
dec
xor
loopne
cltd
dec
mov
xlat
jne
mov
or
push
test
les
lods
add
xor
test
cmp
ret
push
or
hlt
mov
jp
adc
add
inc
pop
cmp
sahf
xor
add
or
in
shrb
push
lock
xor
sub
mov
mov
dec
and
or
and
movsb
mov
mov
jae
fistpl
ret
mov
mov
pusha
dec
shll
scas
add
mov
inc
xchg
fisttps
xor
add
nop
getsec
mov
inc
jg
mov
xlat
cmp
and
sub
cmpsl
add
pop
dec
xor
addl
mov
adc
orb
sub
add
add
fdivp
idivb
mov
add
sbb
ret
mov
jns
enter
or
sbb
aad
mov
mov
cmp
jae
xchg
sbb
sbb
addb
loopne
loop
adc
nop
or
imull
add
shl
xor
cmp
add
jp
and
ja
sub
push
xor
ret
sub
rep
test
cs
hlt
popl
std
xchg
or
mov
dec
mov
add
imul
test
les
or
or
movsb
gs
push
aaa
sbb
jns
lret
inc
add
nop
mov
les
and
cmp
or
lret
sti
xor
shll
repnz
and
or
sbb
ret
add
insb
xchg
mov
inc
and
enter
aam
loopne
lds
and
lds
dec
pusha
jecxz
xchg
sub
lods
int
inc
mov
popa
jnp
sub
ret
xchg
sub
cmp
lods
adc
aaa
lds
dec
lahf
cmp
sbb
add
test
pop
mov
mov
stos
cli
sub
popa
test
xchg
mov
hlt
test
jecxz
dec
dec
imul
ret
fistpll
xchg
sti
inc
out
pop
or
adc
add
sub
mov
mov
jo
pusha
shlb
adc
int3
inc
cmp
test
dec
adcb
sbb
sub
mov
mov
pop
daa
cmp
les
mov
mov
and
cld
or
test
adc
push
fcmove
cmp
test
sub
mov
jno
cmp
fs
subb
sbb
addb
mov
adc
gs
mov
mov
xorl
lock
mov
lods
test
dec
in
add
push
clc
pop
xchg
jmp
cs
nop
add
out
add
std
int3
scas
add
lret
add
cmp
xor
les
add
repz
ds
and
pop
rclb
xchg
mov
pop
nop
test
sub
pop
cwtl
and
or
insb
pop
loop
cmp
and
adc
adc
fcomps
sub
push
ret
cmp
mov
or
test
mov
jl
add
dec
sbb
add
jno
dec
cmpb
or
popf
in
into
sbb
dec
or
mov
push
inc
les
xchg
adc
rorl
cld
add
in
pop
lods
leave
clc
pusha
pusha
xor
add
mov
xchg
addb
xchg
adc
jg
mov
ret
jle
imul
faddp
lcall
test
or
adc
mov
xchg
aam
rolb
nop
pop
or
les
or
outsl
mov
popa
adc
das
add
mov
sub
sub
jl
add
xchg
or
movhlps
pop
gs
mov
push
add
inc
outsl
sub
roll
xchg
lahf
jecxz
xchg
dec
subb
clc
nop
scas
pop
cwtl
mov
aam
out
or
sub
xor
mov
add
mov
fnstsw
mov
sub
pop
xlat
lcall
jns
mov
mov
jl
test
enter
add
xchg
test
movsl
aas
rolb
xchg
cld
xchg
into
push
inc
xchg
adc
je
mov
mov
icebp
subb
inc
push
xchg
addl
cmp
and
and
sbb
rolb
out
incl
mov
or
outsb
pop
popf
adcb
test
les
loop
add
cmp
fsubp
push
icebp
fisttps
push
push
stc
mov
push
xor
rorl
cmp
push
push
mov
sbb
test
xchg
cmpsb
or
or
and
test
cmpb
movsb
pop
dec
testl
or
pop
xor
cmc
and
clc
cmp
cmp
xor
loope
cltd
and
and
jo
movsb
or
mov
mov
push
shr
add
fsts
push
xchg
add
sbb
push
ret
inc
call
popa
push
mov
and
add
xchg
mov
dec
mull
scas
or
mov
inc
mov
dec
sub
xorb
xor
mov
lcall
inc
inc
mov
sub
in
nop
sbb
mov
adc
sub
and
add
or
outsb
nop
daa
mov
bound
jle
add
add
fs
xor
cmp
xchg
and
mov
sti
cmp
or
in
push
sub
adc
into
lea
insb
xor
inc
popa
push
loopne
or
inc
in
xchg
sub
or
popf
orl
cmp
insl
loopne
pop
mov
or
rcll
jp
and
movsl
mov
xor
ret
push
cmpb
add
xlat
imul
lret
push
add
mov
cld
push
and
fcoml
xor
or
cld
int3
xor
push
mov
nop
mov
fcmovne
mov
adc
clc
mov
inc
mov
stos
movsb
push
dec
add
pop
push
bound
rclb
repz
add
aaa
cwtl
and
xchg
add
cld
or
hlt
arpl
addb
cld
push
in
sbb
add
popa
mov
pusha
jmp
add
xor
orl
jo
mov
or
adc
les
inc
or
cld
cli
push
push
mov
clc
push
add
aas
add
add
xchg
sub
add
xor
stos
fcompl
fcmove
icebp
xor
mov
pop
cmpsl
dec
out
pusha
mov
add
dec
push
pusha
orl
popf
sti
sub
mov
inc
outsb
xchg
mov
sti
xchg
mov
fs
mov
js
dec
shrb
jb
ds
stc
pusha
adc
push
add
test
sub
adc
pop
mov
or
sbb
in
adc
sahf
mov
cmp
dec
mov
popa
fs
aam
out
cmp
jo
testb
js
mov
push
mov
adc
cmpsl
or
xchg
xor
mov
xchg
push
mov
call
cmpsb
pop
mov
jns
add
nop
pusha
fdivrp
or
mov
jge
mov
or
popa
cmpb
fstps
dec
dec
pop
enter
jae
lcall
mov
test
nop
enter
xchg
and
std
mov
cli
add
fcmovbe
push
hlt
adc
es
adc
bound
test
add
cmp
xchg
fimull
in
dec
xor
fildll
add
test
add
int3
or
ds
pop
cmp
add
test
ret
pusha
cmpb
jb
or
or
jae
mov
ret
sbb
and
mov
xchg
sbbb
ficoms
jbe
mov
icebp
cmp
rol
pop
jmp
add
cmp
add
mov
push
faddp
test
sbb
dec
das
xor
sbb
lahf
testb
add
push
sub
pop
lret
adc
rorb
jbe
pop
hlt
mov
or
push
and
push
push
mov
sbb
adc
fsub
sub
xchg
dec
jo
inc
rorl
and
pop
jb
sbb
adc
sub
mov
test
and
int3
prefetchw
and
xchg
pusha
ds
in
enter
xchg
push
and
mulb
inc
pop
mov
add
mov
aaa
leave
imul
and
push
sar
sub
or
movsb
hlt
xchg
inc
push
push
pop
pushf
lret
sub
shlb
aad
mov
push
and
inc
push
adc
int
dec
test
and
or
in
in
shlb
or
inc
imul
pop
cwtl
mov
bound
push
or
adc
les
das
add
xor
mov
pusha
adc
add
push
or
sbb
cmp
inc
les
stos
hlt
mov
imul
loopne
pop
cwtl
adc
xchg
dec
aas
and
inc
pop
mov
mov
adc
mov
dec
add
xchg
xchg
xor
inc
sbb
xor
adc
mov
add
jmp
test
fcmovb
xchg
adc
xlat
jecxz
dec
add
hlt
andb
daa
xchg
sbb
mov
inc
cwtl
rolb
int
mov
sub
rcll
adc
cmp
mov
dec
add
push
das
rolb
cmpsl
orb
nop
inc
mov
jno
fs
js
pop
in
ret
loope
jg
add
mov
jle
int3
pop
inc
aam
fdivrs
or
mov
mov
in
idivl
outsl
popf
jmp
xchg
mov
fadd
mov
jl
sbb
push
daa
lea
jl
cmp
pop
es
pop
popf
arpl
call
and
shlb
out
push
cwtl
js
pushf
xor
xchg
nop
aas
ljmp
andb
repnz
nop
lods
pop
pusha
add
push
insb
adc
xor
clc
jp
jmp
enter
dec
testb
jl
repz
in
mov
out
mov
enter
andb
aad
jno
fstps
dec
sub
iret
lea
or
or
les
rolb
and
pop
xchg
sub
out
dec
add
clc
add
xchg
in
nop
cwtl
jo
sbb
or
adc
int3
nop
jo
enter
xlat
jnp
icebp
leave
jo
mov
mov
mov
adc
sbb
or
pop
ret
ss
or
cld
xor
mov
adc
mov
shlb
jl
andl
outsb
add
adcb
sbbb
je
movsl
inc
adc
cmp
mov
mov
add
lock
les
add
mov
add
imul
add
jecxz
pop
insb
xchg
sub
in
pop
xor
test
mov
cmp
jns
rolb
mov
adc
mov
sarl
cmp
and
pop
add
dec
mov
das
fs
xchg
pop
jnp
pusha
mov
xor
xchg
push
add
and
mov
pop
jbe
leave
and
mov
lock
roll
adc
test
ljmp
sbb
cmp
lret
and
in
rorb
pop
fcmovnb
aam
sbb
cmpsl
js
mov
mov
iret
jl
call
test
xor
pusha
mov
pop
mov
mov
lods
mov
jecxz
mov
enter
add
imul
and
add
addb
imul
xlat
and
adc
cwtl
outsb
sub
into
addb
nop
outsb
add
mov
push
cs
mov
or
lahf
add
mov
out
add
pop
test
pop
add
add
and
jge
xor
je
setb
pushl
lret
mov
mov
cmp
adc
xor
jns
cmp
shrb
add
xlat
xor
scas
mov
xchg
xchg
pusha
mov
jmp
add
add
rcll
pop
jnp
push
xchg
add
pusha
fcoml
sti
xchg
or
pushf
sahf
movsb
adc
and
test
cwtl
lock
add
xor
and
push
hlt
nop
jo
jns
pop
or
pop
inc
sbb
sub
adc
and
mov
cmp
rcl
sbb
bound
dec
sub
testl
stc
jecxz
add
xlat
sub
or
aas
add
test
add
push
psrlq
and
push
sub
clc
repz
into
and
jg
add
sub
push
mov
test
xor
xlat
or
bound
loope
pop
inc
cmp
shll
jno
sbb
add
std
jge
jl
inc
add
ljmp
mov
mov
loope
push
or
sub
add
mov
dec
xor
add
inc
imul
sbb
add
test
ret
push
adc
adc
decb
pop
dec
leave
push
sub
insb
add
ljmp
int3
add
shll
push
ret
in
enter
jp
mov
les
sub
stc
cmpl
push
add
xchg
lret
cs
or
into
mov
lods
pop
add
movsb
push
add
dec
fwait
add
lret
push
xchg
cmpsl
xchg
add
sub
mov
fcoms
sbb
sub
push
mov
and
lcall
aaa
dec
or
mov
leave
mov
aas
mov
into
xor
sarb
push
imul
in
mov
add
sbb
enter
mov
and
pusha
pushf
ret
dec
sbbb
sbb
int3
adcb
jp
nop
or
sar
mov
or
inc
mov
nop
push
clc
pop
and
dec
xchg
and
inc
lahf
dec
xchg
inc
add
imul
add
bound
and
je
mov
bound
cld
add
or
add
push
add
in
pusha
arpl
leave
dec
js
mov
clc
mov
mov
loope
rorb
xlat
les
mov
fistpl
decb
pop
and
or
mov
push
mov
xchg
xor
enter
adc
adc
pusha
pop
inc
xor
popf
cmpsl
or
push
testl
sarl
xorb
jle
add
rsm
mov
in
mov
pop
jmp
add
cmp
es
push
and
adc
jp
mov
adc
mov
add
mov
add
mov
or
popa
xor
jmp
sbbb
push
je
xchg
and
adcl
sub
test
loope
sub
pushf
xor
jp
jbe
sbb
pusha
mov
lds
ret
cltd
mov
movsb
ret
cwtl
cmp
push
mov
bound
add
and
push
push
imul
add
outsb
lock
loopne
hlt
mov
std
gs
ds
dec
pusha
dec
push
mov
xlat
imul
add
add
mov
inc
fdivr
inc
xchg
sbb
xchg
mov
add
ljmp
adc
push
add
in
inc
stos
dec
push
mov
xchg
dec
adc
das
shrd
adc
outsb
out
ljmp
lea
jecxz
jl
ret
mov
jge
jmp
divl
add
test
ret
dec
adc
adc
int
pop
mov
or
inc
add
adc
xlat
stc
nop
in
imul
mov
insb
sub
addb
int3
xor
or
inc
test
lock
mov
xor
dec
pop
cmp
ja
mov
les
dec
push
int3
sbb
nop
add
fs
cld
add
mov
mov
sub
pop
dec
sub
ret
and
sti
nop
or
fcompl
dec
and
xor
scas
stc
imul
subb
pop
inc
pop
xor
push
inc
insb
pop
fimull
call
js
js
and
cmp
sub
lret
xchg
inc
pusha
inc
jno
and
mov
adc
fcmovb
in
ss
pop
xor
inc
jbe
adc
out
push
jl
dec
add
dec
ret
adc
pushf
xorb
or
aam
inc
ret
and
sbb
adc
pop
sbb
pop
icebp
add
and
addr16
pop
sarb
add
stc
sbb
ret
pop
mov
les
fmull
js
and
test
mov
pop
ja
call
push
inc
aas
lahf
lcall
pop
xorb
mov
lods
xchg
cwtl
cmp
and
aaa
cld
adc
es
pop
inc
xchg
jb
push
or
popa
and
shll
sbb
cmp
pop
sti
dec
hlt
xchg
inc
test
hlt
aad
add
cmp
ret
jecxz
cmp
das
dec
sub
pop
sub
pusha
ret
dec
mov
pop
das
in
fisttpll
shll
aam
andb
bound
rclb
inc
inc
test
stos
roll
and
jno
sbb
cmp
hlt
mov
add
fs
push
lods
add
test
sub
fildll
and
add
jns
cld
pop
inc
es
add
cmp
or
mov
inc
dec
jmp
mov
sub
and
jo
push
xor
pop
add
and
loope
sbb
int
dec
adc
addr16
inc
push
pusha
sbb
or
cmp
pop
je
or
repz
popf
call
or
or
rcl
cmpsl
jo
pop
subl
ljmp
int
cmc
xchg
shrb
cltd
stc
pop
xchg
pop
xor
pop
xorb
add
add
or
inc
pushf
add
daa
cmp
add
in
cmp
xor
mov
test
or
bound
test
nop
add
jp
inc
mov
clc
cmp
das
movsl
mov
addl
sbb
or
ja
xchg
or
inc
iret
ret
or
adc
fiadds
sbbb
loopne
movb
sahf
ficoms
daa
test
imul
sbb
test
add
cli
ret
pop
sbb
pop
inc
nop
ja
sbb
in
push
mov
orl
jecxz
add
lcall
js
je
dec
add
lcall
cmp
sub
xchg
repnz
add
jle
cmp
jb
ret
pop
sub
adc
mov
add
mov
add
popf
mov
adc
test
add
sahf
add
mov
add
inc
mov
or
call
jg
mov
mov
add
mov
scas
inc
jp
dec
std
add
or
fcoml
insl
cltd
sbb
inc
jnp
push
test
rorl
cmp
sub
andb
icebp
pop
cmp
jge
xchg
cmp
scas
xor
rclb
subl
xor
daa
cli
add
aam
in
mov
and
add
sub
inc
or
cmp
fcoml
xchg
or
lock
and
test
adc
add
mov
and
mov
adc
add
je
xchg
add
push
or
arpl
push
adc
add
inc
and
lock
or
ss
mov
mov
nop
add
or
call
pop
adc
push
mov
push
enter
cmpsb
aaa
add
mov
mov
les
adc
push
and
je
push
sbb
pop
cmp
xlat
mov
ds
popf
test
enter
xor
loop
roll
sar
pusha
rorb
das
inc
sub
repz
add
clc
add
sbb
je
add
in
cmp
adc
mov
cmp
pop
call
dec
insb
mov
sub
loopne
adc
test
or
mov
stos
je
dec
dec
aam
sbb
xchg
outsb
icebp
decl
sub
mov
xchg
mov
inc
inc
test
xor
mov
pop
enter
sbb
scas
mov
rorl
mov
or
incl
jbe
pop
add
into
add
or
daa
or
inc
cwtl
add
call
and
icebp
jbe
aas
cmp
subl
js
test
inc
xor
pop
roll
mov
std
sarb
dec
sub
push
loope
sub
adc
out
in
jb
outsb
jo
les
mov
je
lret
xchg
sahf
or
stc
das
lock
test
lea
int3
test
jg
sbb
push
mov
mov
cmp
mov
jl
shlb
negl
dec
jo
icebp
loopne
fimull
or
mov
aaa
xor
dec
scas
mov
xchg
xchg
cmp
or
in
mov
in
jae
pushf
xor
mov
inc
rclb
sbb
clc
or
mov
repz
pop
hlt
mov
and
or
cmpsl
stc
add
cld
sub
sub
mov
mov
sub
rcll
adc
mov
movsb
dec
rcrl
pusha
and
add
push
lea
xor
push
sub
jae
outsl
int3
call
jg
pop
pusha
dec
icebp
xor
add
inc
ret
hlt
fcoml
and
mov
xchg
add
fmuls
fldenv
das
pop
jl
push
and
cmc
insb
pop
jmp
loopne
add
mov
lret
jo
fidivl
lds
hlt
cwtl
adc
and
inc
lcall
je
mov
adc
cmp
in
add
xchg
subb
cmp
and
adc
iret
test
and
js
hlt
repnz
xor
stc
add
mov
loopne
in
into
test
xor
sbbb
sbb
push
xor
lahf
mov
into
in
cmpb
xchg
mov
outsl
add
scas
ret
jbe
jl
push
add
xor
dec
nop
mov
incb
imul
int
rcrb
mov
mov
xchg
in
xor
push
xchg
call
aad
aad
add
add
lret
push
sub
std
or
mov
mulb
sub
mov
pushf
or
inc
es
loop
mov
in
or
cwtl
and
mov
xor
bound
and
sub
int3
lods
jo
inc
nop
add
pop
fs
pushf
or
inc
lcall
mov
sar
popl
and
add
cmpl
add
inc
sub
leave
lcall
mov
and
andb
test
shrb
sub
add
inc
and
push
ret
push
xchg
and
imul
in
fldenv
rcrb
ds
mov
shrl
fwait
test
into
and
fadd
push
mov
sbbb
jo
pusha
aaa
sbb
cmp
aam
xor
or
adc
pop
call
imul
test
sub
mov
jg
mov
sub
popf
add
or
stc
add
mov
inc
lds
xor
adc
pop
and
cld
sbb
xor
xchg
mov
cmpb
and
rol
push
jb
and
or
xchg
adc
int3
and
mov
or
pop
addl
imull
dec
add
sub
popa
cmp
xor
leave
lods
pop
outsb
sarl
out
push
or
mov
nop
loopne
push
rorb
mov
pop
repz
push
mov
js
add
cltd
cmpl
push
mov
mov
mov
jb
adc
aaa
scas
sbbl
pop
mov
or
gs
loopne
testb
lret
enter
add
into
pop
pop
add
xor
pop
dec
pandn
mov
adc
pushf
cwtl
clc
fisubs
jmp
sbb
idivl
enter
xchg
add
sub
nop
mov
ret
sub
je
in
inc
enter
add
mov
and
push
shlb
adc
mov
lock
fsubr
mov
cmp
xchg
adc
clc
shll
adc
sub
sub
adc
movb
pop
adc
cmpsl
sahf
adc
call
add
mov
or
mov
aam
cmp
ja
lret
movntq
movsl
pop
nop
jae
inc
cli
and
xchg
pusha
orb
add
call
and
stos
lock
xchg
xchg
add
push
add
sbb
lret
mov
mov
xor
add
movsb
ret
adc
pop
das
shlb
xor
shl
mov
add
sub
xor
jnp
rcl
ja
loope
jp
lods
cmp
mov
sub
ret
xlat
mov
add
mov
xchg
add
xchg
iret
cwtl
or
das
dec
and
sub
adc
and
cmp
sub
pusha
add
and
inc
pop
loope
jmp
sbb
inc
je
and
das
cmpsl
cltd
movsb
add
cmp
inc
mov
icebp
into
in
jb
jo
out
pushf
cli
jo
mov
aad
enterw
js
sbb
jp
xchg
add
std
pop
mov
add
mov
jge
xor
add
jle
sub
enter
sub
rorl
mov
addr16
sbb
cmpsl
lods
test
mov
mov
adc
mov
sbb
jno
jo
out
data16
sbb
outsl
ja
daa
scas
sub
pop
or
or
sbb
stos
mov
clc
adc
iret
mov
subb
inc
outsb
add
imul
movsb
xchg
les
push
push
inc
cmp
dec
addb
push
sarb
ret
adc
lds
shrb
sbb
int
ds
mov
subb
cs
xor
dec
cwtl
fsubl
cmpsb
dec
mov
movsb
jp
js
mov
cwtl
xchg
xchg
add
xor
sbb
cmp
daa
sbb
push
leave
fisttpl
cmc
dec
add
in
lods
fcmovb
pop
fsubrl
pop
push
and
cltd
fwait
test
sub
adc
xor
add
iret
pop
push
xlat
and
xor
fldcw
add
leave
xchg
js
call
mov
add
mov
inc
test
inc
xor
sbb
dec
sub
push
loope
fists
pop
shlb
loopne
dec
in
inc
mov
pusha
xchg
mov
ljmp
push
int3
lods
push
add
xchg
fdiv
dec
rcrb
mov
cld
push
add
pop
or
cmpl
jb
insb
mov
int3
xchg
xor
or
sub
pop
inc
pop
clc
xor
inc
inc
mov
xchg
int3
pop
fcoml
daa
dec
sbb
fcompl
mov
shl
aaa
cmpl
nop
xor
cmp
jbe
or
xor
orb
adc
xchg
je
pusha
dec
int3
or
in
fnstcw
add
lret
xchg
shlb
sub
mov
call
test
pushf
sub
mov
clc
popa
inc
add
and
mov
int3
xor
into
scas
std
mov
push
or
dec
movsb
mov
inc
andb
and
jnp
lock
pop
dec
or
and
xor
sbb
push
imul
xchg
xor
rol
mov
sub
pop
and
cmp
add
pop
iret
inc
jg
in
cmp
add
add
dec
arpl
movsb
mov
sti
jbe
aas
mov
test
call
aad
pop
imul
das
into
inc
pop
es
loopne
mov
test
add
outsl
movsl
sbb
mov
inc
sbb
js
idivb
add
dec
add
mov
cmpsb
or
fisubrs
push
ss
leave
sti
mov
sbb
inc
fsubrs
test
or
dec
xor
lods
inc
mov
mov
add
jle
out
ficoms
dec
xor
movsb
xchg
push
add
sbb
mov
and
mov
and
cmpsb
mull
movq
fs
enter
in
dec
fmulp
sub
dec
adc
adc
mov
dec
add
sahf
ret
inc
dec
add
es
movsb
adcb
add
sub
bound
out
adc
xor
inc
je
add
test
or
lea
add
ss
adc
nop
shlb
sub
out
lret
or
push
cmp
addb
dec
fs
adc
loopne
pushf
enter
sub
mov
dec
fucomip
divl
xor
clc
fadds
iret
push
nop
adc
mov
mov
mov
add
add
cmp
je
and
pusha
ss
popa
add
aam
pop
ret
popf
pushf
jl
xchg
and
lret
je
lds
mov
or
mov
xchg
jecxz
lret
push
cmpsl
leavew
or
adc
sub
scas
adc
cmp
pop
push
add
movsl
mov
mov
mov
es
jmp
inc
inc
mov
pusha
add
xchg
inc
insb
and
mov
mov
and
or
shl
aam
inc
test
mov
jne
pushf
dec
mov
bound
lods
icebp
jbe
ret
lock
and
loop
pop
cmpsb
fcoms
lods
ret
sub
ud0
jb
fisttpl
aam
faddp
pop
sbb
push
pop
add
out
enter
sub
imul
push
fildl
call
sbb
add
mov
rcll
out
fcoml
or
movb
xchg
mov
aad
add
mov
push
ret
push
cmp
daa
or
mov
loopne
inc
ficoml
orb
mov
fdivrs
loop
and
mov
test
mov
pushf
scas
cmp
mov
lahf
cli
out
aaa
cmp
xchg
add
mov
icebp
xchg
dec
and
add
pop
stos
movsb
cld
or
xchg
imul
add
das
lods
or
jo
xchg
or
jg
mov
mov
test
lret
in
push
lds
push
sahf
add
clc
aam
test
xchg
sub
fimuls
push
scas
fmuls
pusha
xchg
add
mov
jmp
adc
cmp
cs
sbb
sbb
sarb
test
adcb
inc
insb
movsb
add
push
xor
les
enter
cli
sbb
mov
or
js
jns
add
popa
mov
movsb
inc
imul
mov
ret
sub
les
scas
mov
cld
sbbl
cmp
cmp
xchg
inc
cmp
mov
inc
rorb
stos
aad
clc
cld
xchg
jno
add
int
pop
mov
add
lock
push
push
call
xlat
mov
add
sti
aam
xor
stos
cli
add
or
sbb
pop
add
jnp
push
sub
inc
les
xor
add
xchg
arpl
mov
in
add
inc
imul
out
rcrb
aas
popf
rclb
xor
inc
add
outsb
and
hlt
add
lcall
popa
rcr
inc
push
insb
call
sbb
sti
jp
cli
adc
inc
xchg
jnp
lcall
pop
arpl
cmp
je
imul
push
lcall
adc
xchg
or
imul
pop
cmp
sbb
mov
mov
sbb
or
mov
sbb
or
arpl
or
or
xchg
and
arpl
inc
and
repnz
and
aaa
and
or
or
mov
nop
lcall
ljmp
inc
iret
mov
pushf
xor
aam
sbb
and
adc
bound
aas
add
jge
bound
xchg
mov
sub
fsubs
mov
xor
nop
or
add
mov
scas
call
sahf
mov
sub
xchg
or
inc
pop
pop
les
ds
jno
xor
push
data16
xchg
mov
cltd
or
and
bound
loop
test
ret
popa
dec
arpl
or
mov
pop
popa
add
jae
xor
mov
arpl
or
add
jg
fs
cmp
pop
xchg
xor
push
test
push
adc
je
leave
mov
add
nop
addb
pop
or
rorl
fisubs
and
stc
sbb
popl
and
xor
sbb
and
mov
cwtl
fwait
or
icebp
or
inc
test
jmp
sahf
xchg
imul
xchg
add
adc
or
or
or
pop
xor
cwtl
sub
pop
sbb
mov
cwtl
jle
or
or
cmp
or
add
lret
xor
sarb
and
and
test
pushf
rorl
and
adc
fwait
jmp
xor
rclb
loopne
sbb
adc
out
xor
pusha
nop
test
sub
sbbb
sbb
mov
lds
jns
ffreep
mov
inc
mov
mov
xor
pop
or
outsl
subl
adc
pop
aaa
add
fld
addr16
nop
sub
and
cmp
mov
pusha
and
sbb
inc
adc
mov
lahf
push
pusha
pop
adc
sub
cmpl
inc
rorb
cmp
mov
xchg
adc
sarl
fimuls
add
int
cli
cmp
sub
add
fcmovb
cwtl
pusha
fsubrl
xor
aaa
jo
lods
xor
ds
pop
dec
lock
or
or
int3
sbb
js
daa
fcomps
and
addl
mov
adc
popa
andb
arpl
add
scas
cld
mov
push
xchg
nop
pop
and
insb
cmp
les
aas
repnz
les
pusha
pop
and
notl
jb
add
shl
aaa
dec
inc
and
mov
add
push
addb
mov
add
neg
lods
sub
add
adc
orl
and
mov
lods
repnz
fs
jmp
stc
jne
int
xor
xor
xorb
imul
jo
ror
sub
shll
jg
jp
add
and
stc
inc
in
lahf
pusha
scas
leave
jae
push
ljmp
cmp
mov
adc
fldl
xor
sahf
ljmp
cmp
rolb
pop
int
je
pop
push
mov
jle
add
mov
orb
lock
xchg
add
outsl
mov
mov
mov
pop
or
cld
enter
adc
popa
outsl
int
pop
xor
inc
enter
nop
nop
add
test
push
nop
inc
pusha
andb
sarb
iret
daa
pop
mov
aas
clc
and
rolb
fidivrs
pop
mov
icebp
testl
jmp
out
lret
mov
in
fbld
aaa
pop
mov
adc
int
sbb
push
mov
and
frstor
cmp
mov
es
cmpsb
loopne
mov
or
cs
ds
lret
sahf
jp
push
jbe
subb
nop
or
mov
stc
sub
adc
mov
add
or
mov
popa
idiv
push
sub
scas
adc
lods
pop
aam
outsb
mov
loopne
ret
int3
push
xor
cmp
dec
add
or
jae
leave
inc
sub
inc
pop
pop
mov
add
mov
mov
std
mov
inc
in
sahf
adc
mov
cmp
test
rcl
movl
arpl
inc
test
cwtl
popa
add
push
movsl
adc
mov
and
fstpt
add
movsb
aad
subl
and
scas
mov
jbe
clc
sbb
pop
push
add
lods
jmp
lret
sarl
loopne,pn
inc
or
and
add
insb
stos
and
mov
testl
testb
nop
sbb
jo
test
pusha
fdivrl
dec
leave
jmp
pusha
fs
js
sub
cli
pop
mov
adc
pusha
xchg
outsb
dec
jbe
sub
hlt
xchg
enter
adc
cmpsl
xchg
inc
sub
int
pop
mov
leave
and
int3
test
int
dec
mov
push
je
dec
adc
push
and
ret
fsubs
xor
or
and
xchg
fsubrs
or
mov
aam
mov
xchg
xchg
pusha
sbb
loopne
sub
popa
and
rclb
and
mov
mov
cltd
sub
pop
cwtl
or
divl
and
nop
push
mov
or
fbld
adc
xchg
imul
pop
add
jp
mov
shr
rcrl
ds
mov
cltd
bound
gs
nop
andl
mov
sub
push
add
cs
loop
dec
inc
sub
dec
ret
add
jp
mov
add
faddl
inc
fdivrs
cmp
add
and
test
es
cmp
daa
fistpll
cmp
pop
jbe
sbb
jmp
cmp
add
sub
mov
sub
inc
dec
lods
dec
sub
mov
js
add
push
lcall
ss
sbb
test
in
rolb
ret
movsb
xchg
dec
and
xchg
mov
push
and
fists
icebp
cwtl
jecxz
fcmovbe
or
and
shlb
es
dec
pop
mov
mov
adc
mov
sarl
shll
xchg
pushf
inc
fmull
call
mov
sub
xchg
add
movsl
fldt
in
add
mov
lods
addb
fadds
pop
mov
sbb
les
insb
int
adc
add
pusha
xchg
rolb
mov
out
or
es
jl
stc
not
mov
enter
or
jmp
or
pop
insb
cli
add
mov
pop
lock
daa
cmpsl
and
out
add
pusha
iret
rol
pop
mov
cmc
mov
cmp
aam
movsb
adc
popa
sub
loope
out
jno
enter
enter
cmp
pop
push
pop
orb
mov
sbbb
xor
pusha
sub
sarb
mov
mov
inc
and
ja
imul
mov
test
mov
pop
add
cmp
add
clc
stc
cmc
inc
cmpsb
dec
fcmove
js
les
add
dec
dec
xor
push
cld
loopne
xor
cmpl
inc
pushf
jns
cli
add
loope
pusha
sub
add
sbbb
jecxz
inc
dec
sub
cmp
andl
pop
lock
add
rcll
sub
sbb
daa
xor
sbb
lods
inc
test
cmp
enter
adc
lods
cmp
xorb
dec
sarb
adc
and
pop
push
ljmp
mov
cmp
mov
xchg
or
call
clc
and
pop
pushf
or
xor
mov
mov
fsubl
pusha
inc
mov
pop
mov
mov
addb
rclb
sub
es
or
xchg
or
ret
nop
sub
and
add
nop
jno
add
mov
ror
mov
xchg
sub
cmp
in
mov
pop
dec
or
jp
and
push
out
and
add
inc
push
andb
out
and
cmpb
hlt
and
sbb
push
inc
addr16
adc
inc
scas
mov
pop
xor
leave
mov
test
popa
add
sbb
pop
mov
inc
xor
rol
or
insb
mov
push
aas
xor
and
push
cmp
sub
sbb
dec
stc
loope
int3
shlb
xor
fs
int3
add
roll
and
test
aam
add
pop
inc
mov
test
addr16
dec
andb
push
fucom
scas
sbb
imul
adc
call
xlat
mov
pop
mov
std
dec
jl
xchg
add
cmp
pop
enter
outsb
and
lock
cmp
and
mov
adc
sub
mov
mul
movl
das
hlt
push
adc
and
mov
pop
in
arpl
ret
or
add
scas
adc
aad
xchg
cmp
adc
out
or
mov
pusha
pop
fs
or
cwtl
adc
pop
rcrl
or
addr16
xchg
lret
or
adc
sbb
test
sbb
into
xor
lock
enter
xor
and
andb
cmp
lahf
dec
mov
inc
aam
rcrb
test
inc
mov
push
pop
in
mov
add
xor
jb
sub
xor
and
mov
andb
ds
inc
adc
mov
add
fsubrl
mov
xor
sub
mov
in
jmp
adc
outsl
cmp
adc
dec
cmp
ror
test
cwtl
fmull
in
and
inc
mov
rcrb
cmp
sub
aam
sbbb
lea
dec
cwtl
shlb
xor
cmp
mov
aad
mov
pop
pop
mov
mov
movsl
sbb
mov
lahf
out
and
xor
lock
adc
and
add
imul
mov
mov
loopne
add
add
movsl
das
mov
add
or
pop
sti
test
add
add
sbb
cltd
lock
enter
push
nop
add
inc
fdiv
cwtl
in
sarl
mov
or
lahf
in
mov
fstpt
stc
and
adc
mov
xchg
xor
and
das
pop
mov
xchg
test
sbb
jno
sbb
aam
push
mov
jle
pop
lea
mov
push
and
testl
pop
aaa
and
movsb
or
int
iret
addb
inc
xchg
jge
push
pusha
cmc
cmp
pusha
mov
and
andb
mov
mov
adcl
and
xchg
and
add
in
in
rclb
pop
xchg
jb
xchg
nop
fimull
outsb
and
inc
add
mov
add
scas
mov
push
xlat
adc
filds
and
cld
jp
sub
aam
aad
cwtl
nop
and
bsf
mov
aam
jle
and
repnz
jge
and
push
and
mov
adc
add
dec
fisttpll
test
xchg
jmp
pop
add
subl
or
xor
sub
insb
mov
pusha
pop
aas
or
push
adc
xchg
inc
jo
jl
js
sahf
fmuls
adc
jle
js
and
mov
and
pop
sbb
cmc
push
inc
hlt
add
aas
and
push
dec
push
insb
xchg
dec
add
mov
and
hlt
or
shlb
mov
outsb
xor
dec
mov
shlb
dec
lds
into
and
in
and
pushf
add
pop
and
inc
dec
or
add
hlt
jno
mov
loopne
sbb
mov
pop
push
pusha
ss
inc
mov
inc
repnz
cs
lret
push
push
jg
jo
pop
cmp
hlt
bnd
decb
dec
sbb
mov
add
jns
xor
iret
push
int3
cmp
mov
mov
and
js
add
cmpsl
outsb
sbb
int3
fadds
andl
xor
pushf
mov
lods
clc
xor
mov
add
add
inc
stos
cmp
push
test
mov
rorl
into
loope
xchg
adc
mov
or
mov
data16
xchg
push
add
and
cwtl
add
or
mov
mov
jbe
in
xor
sub
dec
inc
add
adc
aaa
xchg
in
or
pop
sub
mov
sahf
js
xor
mov
mov
pop
xor
rcll
shl
nop
mov
loopne
mov
mov
adc
add
clc
add
pop
adc
dec
mov
int3
clc
pop
xchg
xlat
bound
loope
add
jecxz
push
pop
shlb
pop
pop
or
les
mov
pop
jno
add
popa
mov
push
push
sti
and
inc
cld
inc
add
icebp
int3
lahf
pop
push
push
inc
arpl
push
pushf
jo
shl
enter
push
mov
les
dec
cld
lahf
push
xor
andb
popa
fs
xchg
add
lret
add
iret
lock
es
push
mov
pop
in
mov
sbb
or
ret
leave
bound
jg
dec
sbbl
in
pop
shl
add
pop
xchg
orb
xchg
add
out
sbb
cmpsb
lock
add
cmp
test
xlat
pop
add
sarl
repnz
sub
jno
xorl
cwtl
fcomps
mov
nop
lret
and
cmp
outsb
jno
add
mov
ffree
or
mov
jmp
das
inc
pop
fcmovb
out
jae
adc
cli
popl
adc
movsb
xorb
adc
mov
shlb
mov
mov
add
push
pop
call
lock
mov
idivl
add
lods
js
pop
rcrl
and
pusha
pop
je
push
jae
adc
lods
xor
sbb
sub
popa
aas
xchg
lds
mov
add
xor
and
stc
and
out
and
dec
or
cmp
rorl
mov
add
call
or
xor
add
xchg
dec
in
lock
jno
es
dec
pusha
nop
repnz
add
xlat
and
mov
test
mov
jo
pop
cld
push
or
xorl
xchg
pop
bound
popf
or
or
mov
jb
into
test
push
js
clc
test
or
and
fs
or
inc
rcl
jnp
lock
mov
add
ficompl
cld
mov
sarb
cwtl
mov
jbe
sub
push
js
adc
mov
das
shll
cwtl
je
or
rcrb
sti
pop
sbb
mov
in
adc
int
cmpsl
andb
mov
test
popf
inc
jecxz
int3
cmp
bound
ret
notb
add
pop
dec
xor
add
add
lahf
and
outsb
popf
add
repnz
pusha
cmp
xchg
cs
mov
leave
jl
mov
add
dec
push
adc
sahf
xor
enter
and
ljmp
add
sbb
pop
or
rolb
sub
in
sub
xor
adc
dec
mov
hlt
and
cli
or
subb
sbb
fcompl
add
addb
int3
mov
pushf
leave
repnz
cwtl
inc
andl
les
add
adc
lahf
cmp
push
add
push
add
add
leave
imul
es
ret
loopne
xor
sbbb
decb
xor
test
push
pusha
mov
cltd
add
mov
inc
xlat
inc
sub
push
or
insb
loopne
shlb
push
pusha
mov
aas
mov
leave
inc
adc
and
int3
and
pushf
cmpl
or
clc
leave
and
dec
adc
pop
inc
leave
rolb
or
jo
inc
mov
and
and
ds
add
dec
lods
and
pop
inc
mov
mov
orb
addr16
xorb
outsb
xchg
dec
cmc
add
push
int3
adc
fadds
stos
frstor
inc
ss
mov
mov
frstor
xor
fcmove
repnz
bound
inc
pusha
lret
mov
sbb
push
les
cmc
decl
pusha
cmp
scas
push
jp
imul
stos
loop
or
lods
pop
and
adc
push
dec
cmp
add
mov
xor
mov
fldl
xor
and
xchg
mov
and
adc
mov
jbe
test
sub
and
js
pop
add
lcall
sub
push
cmp
les
cmp
cld
pop
lods
add
ret
test
xchg
pop
mov
js
adcl
enter
pop
cwtl
stc
pop
fisubrs
movups
xchg
push
mov
and
jno
cli
mov
mov
stc
sub
xchg
sbbb
or
cmp
test
das
sub
pop
mov
add
test
mov
sbb
cli
add
mov
xor
pop
repz
and
pop
add
push
faddl
ljmp
insb
add
data16
stos
addl
out
test
test
mov
and
loopne
ja
sarl
cwtl
push
pop
push
shrb
and
mov
mov
cmp
jb
push
nop
sti
cmp
sbb
fmul
jae
pop
call
in
add
cmp
nop
sub
and
clc
add
out
divl
cmp
dec
insb
mov
push
lock
imul
jle
sbb
and
push
xchg
push
movsb
dec
xrelease
rorb
push
imul
repz
test
fisttpl
add
stos
dec
xor
mov
insb
inc
cli
inc
jb
add
test
cmp
cwtl
std
cli
stos
adcl
mov
mov
and
ret
loopne
jo
repnz
cs
popa
scas
aaa
int3
subb
mov
lret
cld
sbb
add
pusha
xchg
or
add
sbb
les
imulb
cmp
push
bound
inc
lods
mov
jp
add
cmp
mov
sub
xchg
mov
js
pop
sub
inc
mov
fmuls
dec
scas
add
les
clc
jo
add
fs
jp
test
mov
mov
inc
cwtl
fisubs
cmp
js
dec
imul
xchg
in
cmp
leave
imul
rorb
stos
lods
clc
pop
pop
or
xchg
mov
cmp
or
add
and
dec
jmp
sbb
push
lcall
in
and
jbe
shlb
gs
sarb
adcb
clc
fsts
data16
xor
dec
daa
outsl
cwtl
inc
xorb
jmp
imul
andb
retw
out
cs
xor
sbb
popa
sub
and
add
popa
mov
dec
jmp
stos
add
or
pushf
or
and
shlb
sub
dec
mov
bound
push
leave
aas
jl
fs
popa
ljmp
addl
cmp
ret
fstpl
je
add
mov
movsb
stc
cld
sub
mov
push
add
shlb
cmp
add
lods
aaa
and
das
addl
shll
pushf
add
pop
sbb
aad
lods
jnp
clc
les
jae
add
ds
daa
mov
xchg
cs
jecxz
mov
push
mov
add
and
cmp
push
lock
jb
or
jne
xchg
sub
sub
clc
sub
or
sahf
and
add
call
inc
inc
in
aaa
and
test
fs
mov
add
bswap
loopne
ljmp
js
or
push
adc
or
shlb
xchg
or
adc
rorl
add
or
sbb
and
cmp
mov
bound
sub
andb
int
add
pusha
push
pusha
push
mov
cmp
aam
lock
lahf
shlb
ret
sahf
fistpll
fcmovb
into
nop
push
shll
fildl
sbb
lahf
lds
or
or
mov
pop
dec
push
loopne
test
cmpsb
enter
mov
sbb
sbb
pusha
mov
clc
pusha
call
pop
jae
sub
repz
mov
mov
sub
pop
push
add
mov
subl
in
push
loopne
sub
sbb
jnp
inc
mov
sbb
lea
leave
outsb
or
mov
shlb
mov
add
pop
mov
in
or
sbb
aam
add
xchg
add
push
repz
xorl
mov
sbb
adc
push
xor
shl
fcompl
mov
pop
shlb
aam
addr16
mov
mov
clc
int3
pop
test
xchg
mov
cmpsl
jge
cmp
inc
and
add
lcall
push
and
stc
and
or
sub
loopne
in
lahf
cmp
xor
mov
inc
jge
add
mov
mov
lahf
inc
mov
sbb
inc
loope
clc
jo
mov
push
in
shll
pop
mov
ja
pop
out
or
jbe
sbb
ret
jo
and
aas
xchg
subb
insb
orb
lcall
mov
ror
jne
cmp
dec
and
xor
inc
ds
adc
subb
sbb
adcb
inc
xor
mov
mov
add
lds
mov
add
pop
add
xchg
and
xchg
test
mov
push
cmp
enter
or
and
inc
sub
add
adc
jg
and
ret
mov
out
mov
xchg
incl
sbb
pop
stc
int
jl
sahf
adc
fnstsw
movsb
aas
adc
out
push
test
inc
das
bound
insb
push
je
pushf
out
inc
sbb
pusha
dec
lret
ret
arpl
mov
mov
add
dec
dec
add
xor
movsb
and
push
mov
xchg
xchg
loop
ja
add
outsl
cmp
adc
sbb
mov
cmp
es
lret
dec
inc
ret
sbb
pop
clc
and
adc
or
std
xchg
js
add
lods
cmp
clc
sub
sbb
nop
fisubs
pusha
jb
or
ljmp
rorl
scas
shrb
mov
and
inc
mov
add
leave
cmp
ret
aad
jp
test
dec
mov
adc
imul
push
ret
outsb
jns
pop
inc
mov
add
notb
mov
mov
jo
or
int3
aaa
cmpsl
xchg
add
enter
push
push
clc
add
nop
in
add
mov
sbb
adc
push
xchg
adc
cmp
enter
addb
nop
adc
or
loopne
test
into
mov
or
call
repz
movsb
sarb
sbb
and
mov
cli
mov
jl
test
mov
sub
ljmp
mov
pop
adcb
and
sbb
enter
mov
xchg
nop
add
addb
pop
pop
mov
inc
das
inc
pop
and
and
pusha
dec
mov
cli
sbbb
mov
push
sbb
mov
xor
mov
mov
fadd
stos
sbb
dec
mov
push
popf
add
jbe
mov
xchg
and
pusha
test
je
das
lret
mov
push
rol
je
sbb
xchg
push
mov
push
mov
sbb
mov
lahf
adc
out
jbe
fdivl
fcmovnbe
test
subb
or
add
ret
fnstcw
pusha
add
sbb
out
sub
leave
ret
push
cmp
int3
fmull
test
loopne
mov
call
adc
push
mov
stos
dec
enter
lcall
jecxz
inc
mov
cltd
pinsrw
int
rorb
in
loopne
and
mov
add
test
or
test
lcall
lock
push
hlt
lcall
mov
mov
cmpsb
sahf
lock
push
pop
cmp
cmp
mov
push
roll
adc
dec
inc
call
mov
aas
rsm
test
push
mov
gs
test
cmpb
nop
mov
add
pop
scas
sbb
or
pop
adc
cld
mov
loope
ret
stc
mov
nop
sub
enter
mov
and
or
xchg
push
clc
jns
mov
sub
sbb
in
add
das
test
mov
adc
loop
pop
dec
or
and
mov
pop
aad
ret
mov
outsl
adc
dec
nop
sbb
lret
mov
push
and
popa
xor
pop
dec
xlat
cld
or
addb
rorb
add
and
into
addr16
pushf
pop
ret
fadds
mov
in
jnp
and
pop
repnz
pop
sub
sbb
mov
imul
das
data16
test
mov
inc
and
sub
add
xorl
xchg
pop
cmp
and
subb
add
ret
xchg
push
xor
mov
test
inc
and
jns
or
les
mov
cld
mov
mov
jb
in
inc
push
inc
adc
leave
add
xorb
pop
add
cs
mov
mov
adc
pop
xor
sub
and
add
idiv
cmpl
ja
loope
mov
add
call
movsl
ror
inc
cmc
aad
jne
cld
insb
inc
or
mov
xchg
popf
sarl
push
mov
dec
jns
push
lods
sub
pop
lahf
lock
adc
fistl
lret
inc
inc
ret
mov
xorl
push
jno
add
test
sbb
adcl
fwait
pop
jl
stc
sub
cmp
cltd
jg
push
cmp
pop
test
data16
stc
loopne
fimuls
inc
out
sub
push
repz
cmpsl
stc
xchg
sub
cld
fs
mov
push
subb
mov
jbe
into
cmp
std
xchg
dec
pop
shrl
subb
sub
push
xchg
inc
call
adc
stc
les
xchg
orb
inc
xor
add
dec
dec
mov
pusha
shrb
mov
add
mov
push
mov
jecxz
cmp
sahf
repz
pop
pop
inc
and
loop
push
dec
cld
xchg
adc
inc
das
add
jo
cli
das
push
aam
mov
or
pushl
inc
xchg
adc
pop
ja
mov
cld
scas
mov
aad
push
and
lret
enter
and
cwtl
adc
cmp
fcomps
mov
xchg
ret
sub
ret
push
xchg
or
adc
xor
test
jmp
enter
aad
scas
pop
add
xor
sub
cwtl
xchg
arpl
cmp
lock
repnz
mov
add
xor
insl
fnstenv
xchg
or
rcll
aaa
ja
icebp
jl
ds
addr16
add
jne
xchg
gs
push
adc
mov
add
rcll
push
int3
stos
xchg
pop
add
out
dec
movsb
xchg
pushf
test
push
push
js
mov
mov
add
shrl
fmuls
pusha
adc
out
mov
add
ds
adc
inc
add
fdiv
xchg
lock
jbe
add
stc
adc
ret
sub
rcrb
adc
jo
mov
fidivl
leave
ss
hlt
and
loope
lock
pop
rcrb
pop
push
push
mov
fldenv
and
data16
add
adc
nop
imul
lcall
pop
add
jecxz
sbb
cmp
add
and
mov
xchg
push
pusha
mov
push
sbb
sub
popf
pop
enter
test
lcall
xchg
mulb
rcrl
xor
xchg
icebp
int3
mov
push
push
xor
pop
shlb
xchg
cmp
sub
sbb
xor
icebp
inc
ja
xchg
xor
stos
or
fdivp
or
test
icebp
cmp
jle
pop
aam
dec
cmp
hlt
or
sub
in
sahf
mov
in
adc
inc
adc
mov
in
call
mov
roll
mov
insb
sbb
mov
xor
jp
pop
cwtl
xor
mov
in
cmpsb
pop
ret
mov
icebp
jne
ja
test
and
push
pop
dec
test
pop
int3
pop
inc
adc
nop
or
cmp
ficoml
repz
int3
in
pop
out
cmp
ds
mov
sbb
movsl
out
loopne
pop
add
or
ret
inc
mov
and
daa
adc
add
adc
shlb
push
adc
pop
jo
mov
into
push
jno
fldl
or
shr
fs
and
add
imul
pop
add
inc
adc
ds
mov
fsubrs
push
pop
sahf
pusha
pop
xor
pop
in
jae
and
jae
les
incl
call
pop
dec
int
cmp
or
push
aaa
inc
xorl
lock
adc
ja
inc
movsb
rcll
and
test
cmp
test
shlb
dec
loope
pop
cmpsb
mov
faddl
pop
in
rclb
cmp
add
push
ret
adc
push
or
iret
cmp
push
sbb
test
xor
push
xchg
pop
repz
and
mov
pop
add
pusha
stos
fisttps
mov
int3
aas
in
sbb
rol
pusha
xor
inc
adc
fs
push
or
xlat
cmp
mov
call
and
and
mov
push
rolb
mov
xchg
cmp
push
popa
mov
xor
arpl
faddl
fdivl
fldl
pop
jo
adc
cmp
insl
add
leave
add
shll
aas
adc
imul
or
nop
lock
lahf
adc
and
dec
or
repnz
add
mov
pop
int3
cli
or
repz
rolb
xor
add
scas
aas
dec
mov
or
cmpsb
loop
add
lods
dec
fidivs
cwtl
sub
adcl
add
in
stc
and
cmpsl
js
or
call
in
fidivrs
xor
add
test
mov
subl
pop
and
add
adc
cmpsl
and
dec
jnp
add
cmp
jmp
sarl
sub
scas
xabort
scas
dec
mov
shrb
mov
add
lds
or
add
xchg
cli
fdivs
pushf
je
mov
sbbl
shrb
pop
add
dec
cmp
je
pop
mov
inc
mov
dec
adc
js
add
rcrl
add
pop
test
mov
cmp
push
pop
xchg
movsl
mov
scas
out
inc
jb
call
outsl
add
inc
loop
movsl
addr16
xor
sti
pop
int3
and
js
pop
mov
shl
cmove
leave
js
sbb
movsb
inc
add
dec
mov
dec
cmpsb
rolb
cmp
inc
add
lods
iret
add
pop
or
out
inc
cmp
mov
js
cld
stos
repnz
mov
cli
inc
lock
ss
test
insb
adc
icebp
fwait
js
jbe
xchg
inc
xorb
or
insb
rolb
xor
rorb
xchg
add
dec
inc
movsb
adc
mov
push
mov
jo
fists
adc
or
enter
adcb
xchg
cmp
clc
scas
adcb
fldl
adc
mov
ljmp
pop
iret
insb
lock
cmp
rcl
sbb
push
jo
fsubs
mov
add
adc
mov
je
sbb
ror
xor
jg
add
dec
notb
add
pop
cmp
add
dec
cld
sub
mov
in
test
ror
add
xchg
movsb
les
je
jbe
shl
psrad
addl
push
jo
add
in
adc
nop
mov
adc
mov
dec
xor
nop
sbb
sbb
add
das
dec
orb
pop
push
adc
push
add
sbb
cmc
movups
repnz
or
push
rcrb
js
xor
push
push
cmp
fdivr
scas
dec
xor
sahf
xor
aaa
pop
add
out
jmp
add
inc
cmp
aaa
jge
insb
incb
ret
mov
or
jecxz
pop
mov
gs
add
roll
clc
jo
cli
jns
sbb
hlt
lret
iret
ret
dec
jbe
and
cwtl
in
repz
inc
out
sub
pop
sbbb
pusha
and
cwtl
mov
xor
loopne
push
add
mov
addl
cmp
insb
fs
addb
ret
or
mov
push
and
pop
and
jo
push
shrl
fbstp
dec
insl
add
lds
push
mov
in
mov
cli
mov
jge
test
add
in
adc
push
xor
and
dec
or
push
fldl
push
mov
je
cmpsb
roll
mov
adc
pusha
fildl
adc
popf
xchg
in
push
cli
je
inc
xor
repnz
cmp
inc
add
jno
mov
js
push
jge
inc
push
hlt
scas
into
shll
add
enter
add
add
pop
add
cwtl
ds
lock
dec
and
pop
add
add
mov
mov
xchg
or
xchg
add
mov
lock
adc
jecxz
pop
adc
pop
inc
mov
inc
nop
and
mov
sub
rolb
xor
jno
xor
xor
jbe
clc
dec
cmp
pusha
and
jo,pt
loope
pop
push
xor
mov
testb
clc
and
es
sub
lock
sbb
adc
xor
xchg
rcr
movsl
test
nop
inc
add
gs
jae
add
push
cmpsb
lock
inc
sbb
popa
aam
adc
in
xor
push
ja
add
rcrl
ss
inc
cmp
add
nop
insl
add
xor
lahf
add
xor
and
mov
je
mov
aaa
inc
push
movsl
pop
gs
iret
jecxz
out
pop
adc
stc
mov
test
add
arpl
loope
lock
dec
add
mov
mov
sub
or
jg
jbe
dec
jns
push
cwtl
push
add
xor
push
push
cmp
mov
inc
insb
sbbb
jmp
icebp
jecxz
pushl
or
sar
jne
ja
add
inc
mov
jl
mov
adc
loope
pop
movsl
mov
in
cmp
push
dec
sub
lock
xchg
xlat
stos
or
in
fsts
pop
data16
sbbb
sbb
rolb
in
or
jno
push
adc
adc
mov
cmpsb
cmp
add
mov
add
push
pop
add
js
rorl
adc
mov
pusha
xchg
mov
xor
pusha
push
add
lret
sbb
shrl
cmp
pop
orb
ss
xchg
jl
jl
add
repnz
add
mov
call
mov
adc
fnstsw
pop
add
cmpsb
xor
je
cmpl
fcmovnbe
add
lcall
add
movsb
push
int
jo
test
mov
xchg
push
bound
add
jle
add
in
adc
sbb
adcb
shr
add
xor
out
loope
gs
and
int
pusha
mov
or
fistl
xor
and
lock
shll
pop
movsb
pop
jb
add
xchg
xchg
aas
repnz
les
push
adc
push
aam
inc
jnp
iret
insl
rcr
inc
mov
sbb
fcoms
repnz
enter
sarl
ret
sub
add
or
xchg
pop
fsubs
sbb
xchg
test
loope
and
jne
or
sub
mov
xchg
mov
lret
adc
push
jmp
mov
ret
fnsave
lret
roll
enter
adc
push
shlb
cmpsb
pop
jmp
adc
dec
jb
cmpb
add
or
pop
mov
repz
mov
dec
icebp
and
lods
aas
cmp
xchg
dec
jmp
or
cli
nop
roll
pop
sub
pop
adc
cmpb
cld
adc
pop
xchg
push
into
inc
fcmovnb
movsl
lahf
mov
mov
sbb
lcall
cmp
andl
push
push
xor
cmp
pop
mov
push
mov
xchg
mov
push
in
inc
fdivrp
mov
loop
add
daa
cmp
in
cmp
dec
sub
add
xchg
int3
rcrb
jmp
les
mov
mov
or
jl
xor
es
mov
lea
sub
and
add
addl
push
dec
inc
int3
js
sbb
xor
popa
sub
pop
sbb
add
mov
fucomip
fcmovnb
adc
nop
or
mov
rclb
inc
cmp
in
dec
dec
pop
or
adc
or
orb
pusha
fadd
add
and
xorb
jmp
or
pop
adc
nop
pushf
ds
mov
mov
push
fwait
dec
or
filds
and
mov
lods
mov
push
push
movl
xchg
cmp
pop
push
jmp
nop
and
repz
sub
xor
xor
push
sbb
inc
adcl
icebp
or
mov
sbb
push
mov
jmp
in
je
fcomps
arpl
add
xchg
mov
cmp
lahf
jbe
stos
pop
outsb
dec
pop
sub
xor
mov
sahf
ds
dec
ficomps
push
xchg
loop
mov
pop
jmp
add
mov
inc
neg
jno
push
shr
clc
call
add
mov
or
pop
pop
pop
jmp
mov
sbb
push
jb
push
mov
inc
jmp
repnz
adc
mov
pop
sub
push
jle
fcoms
sub
xor
adc
add
add
or
xor
cmp
sbb
adc
dec
incl
or
adc
mov
ja
clc
sub
mov
jno
xchg
push
add
push
sbb
inc
adc
jmp
mov
mov
daa
test
jmp
mov
push
mov
pop
mov
dec
add
cmp
sbb
add
sub
push
push
pop
add
xchg
xorl
xor
jb
js
add
pop
sub
pop
sub
sbb
and
sbb
movl
les
sub
push
inc
lret
fisttpll
pop
call
fwait
xor
fucomp
nop
push
or
repz
xorl
std
loopne
in
leave
sarb
mov
jbe
jb
push
orl
shr
mov
push
xor
mov
adc
mov
pop
rorl
xchg
rcrl
mov
xor
imul
lods
loop
mov
push
fcmovne
add
or
jno
idivl
xchg
push
add
xchg
push
and
and
push
push
inc
mov
sub
fidivrs
enter
push
bound
and
pop
xchg
cvtpi2ps
popf
fsubrs
jl
mov
sub
pop
push
loopne
dec
and
add
add
mov
aam
scas
dec
ret
adc
xchg
mov
rcrl
add
cwtl
ds
and
ficoml
rclb
lret
out
sub
js
es
push
push
clc
sub
dec
neg
shll
sub
xor
lret
or
sbb
adc
pop
pusha
test
out
jle
cmp
dec
sbb
mov
mov
repz
je
sbb
jo
push
xor
or
xchg
inc
out
cmp
add
inc
pusha
xchg
adc
sahf
push
xchg
shl
adc
mov
pop
lret
lret
icebp
movsb
dec
pop
push
mov
and
add
outsl
jmp
push
push
or
and
and
sub
inc
mov
idivl
int
ds
addb
rcll
dec
inc
sbb
arpl
call
add
xor
sarb
pushl
cltd
push
int
pop
in
xor
xchg
sbb
or
and
jmp
idivl
inc
xor
pop
push
fsubl
test
clc
inc
sti
dec
call
loopne
shrl
rolb
sbb
dec
fstp
inc
or
sbb
cmp
add
in
ljmp
dec
add
jmp
lret
pop
cmpb
cmp
push
add
ljmp
cmp
outsb
mov
imul
sub
xor
lea
in
or
inc
xacquire
idivb
sub
imul
aas
xchg
pop
inc
enter
enter
ja
pop
pop
mov
mov
add
push
inc
leave
sbb
xchg
jae
orb
mov
inc
cmp
sub
stos
jnp
pop
mov
sbbl
nop
loopne
popl
lret
xor
or
shll
repnz
fs
sbb
sbb
add
pop
jecxz
ret
push
iret
push
mov
inc
mov
leave
movsb
cmpsb
push
int3
and
sub
sbb
ljmp
clc
and
jecxz
lret
and
cmp
pop
xor
mull
js
ss
add
rdtsc
xchg
add
int
pop
inc
lret
and
movsb
mov
push
jmp
mov
or
push
mov
data16
sbb
xor
or
xchg
shll
lods
pusha
mov
sbb
jmp
pop
push
cmp
or
testl
push
push
les
pop
adc
nop
xchg
mov
mov
shlb
cmp
inc
repz
loope
test
add
mov
dec
testb
pop
cmp
cwtl
inc
daa
and
xchg
add
add
testb
mov
push
fidivrl
and
and
pop
push
mov
jno
cwtl
mov
push
mov
jmp
mov
addl
adc
out
loopne
cmp
or
or
xchg
sbb
pop
push
mov
adc
lcall
inc
and
jl
jge
mov
dec
jae
orb
pushf
push
shl
add
gs
cmp
add
movsb
ret
jae
enter
sbb
inc
jg
jg
or
jmp
loope
or
push
inc
and
nop
rcrb
jecxz
push
mov
fldcw
out
mov
push
nop
test
out
jns
or
mov
inc
add
or
xor
inc
popf
pop
adc
fsubs
pop
filds
inc
pop
pop
add
mov
sub
cld
sti
rcll
jge
movsl
jmp
jne
into
mov
test
mov
pop
sub
loop
and
add
ret
not
sub
xor
push
test
mov
dec
test
and
rcrb
jmp
jle
jno
cmpsb
pop
pop
ja
cmp
ret
dec
stc
adc
roll
add
xor
jmp
in
mov
mov
arpl
out
add
mov
add
pop
jmp
outsb
adc
sbb
pop
ret
sbb
jge
pop
in
stc
push
add
or
pop
pusha
and
sub
icebp
ljmp
adc
pusha
xor
lret
aad
addr16
adc
push
ss
out
popa
es
push
fcomps
xorl
mov
and
aas
xchg
pop
xor
jg
inc
subl
shr
ret
or
push
add
ds
movlhps
jbe
es
jae
cmp
nop
adc
or
cwtl
add
fisubs
out
jl
cmpsl
xchg
movsb
shll
cmp
aad
pop
lret
addb
test
lock
sub
popf
loope
sbb
lcall
in
rorb
dec
leave
push
inc
and
mov
sub
pusha
mov
aaa
or
pop
fistpll
xlat
xchg
popa
cld
and
hlt
cmp
and
ds
pop
imul
pop
sub
les
jmp
add
pop
xor
pop
sub
mov
xlat
jne
add
clc
jmp
push
push
clc
xor
rorl
mov
fbld
xchg
push
or
addl
xor
and
xchg
add
lcall
cli
push
sub
push
lret
out
inc
adc
add
jmp
push
push
add
pop
or
pop
push
push
add
jmp
in
and
jg
out
imul
scas
popa
pop
jae
imul
mov
fisttps
or
je
inc
add
jb
repnz
or
rorb
int3
out
add
js
sbb
inc
sub
inc
mov
arpl
pop
mov
jmp
add
mov
pop
mov
stc
popa
inc
and
ret
out
out
or
cmp
arpl
into
pop
pop
add
or
movl
movsb
sub
pop
mov
test
inc
add
or
or
rorb
fadds
add
pop
lods
lea
or
push
pushf
inc
adc
movsb
xor
xchg
call
mov
mov
outsb
out
test
imul
mov
or
shll
insb
out
mov
add
xor
cmp
mov
add
outsb
mov
rep
ds
ret
jne
cmp
sti
mov
pop
std
and
jmp
cmp
jmp
mov
dec
inc
add
add
cmp
or
and
jecxz
fs
jbe
cmp
and
int
cmp
cmc
or
jns
adc
divb
das
cwtl
rcll
test
xor
leave
sahf
pop
push
and
popf
icebp
sbb
jns
adc
mov
sub
in
loopne
rol
repz
inc
hlt
or
jmp
out
xchg
out
jmp
loopne
jnp
inc
in
repz
cmpsb
mov
daa
jmp
mov
xchg
push
mov
dec
push
adc
in
mov
pusha
jb
pusha
out
aas
into
and
dec
xor
adc
sbb
arpl
das
adcl
dec
daa
xor
sub
shll
das
add
dec
pop
jns
jg
out
add
push
add
addb
ret
and
adc
cmp
add
cmc
add
pop
imul
cmpsl
fisubl
addl
pop
lret
fnstenv
dec
pop
cmc
ficoml
sbb
add
sub
push
pushl
pop
pop
cwtl
adc
add
push
neg
prefetchnta
push
add
mov
jmp
adc
or
insb
or
pop
orl
stc
add
loop
not
addl
cmpsb
add
pop
and
add
pop
jmp
inc
ror
stos
jmp
popf
roll
addb
daa
jns
inc
fbld
or
cmp
xorb
ret
xchg
loope
fsubs
sbb
sbb
push
mov
push
fiadds
nop
push
imulb
jge
sbb
push
push
call
sbb
jmp
pop
xor
pop
insb
pop
adc
jbe
or
adc
xchg
sub
pop
iret
cmpsl
add
add
or
push
jmp
rol
mov
jmp
or
pop
jmp
lea
add
stos
or
andl
xor
outsl
enter
or
mov
mov
lods
adc
and
sub
pop
mov
mov
orl
rcrl
arpl
rclb
aas
adc
adc
sarb
or
add
aad
jno
and
cmp
inc
add
sub
add
push
sti
inc
ljmp
pop
xchg
neg
shlb
add
xor
stos
inc
cwtl
xor
sub
add
or
pop
ret
xchg
push
and
mov
jmp
inc
lret
shr
je
call
and
add
dec
jge
sub
ret
or
add
dec
lods
lods
mov
mov
pcmpeqd
js
ret
add
jmp
mov
loope
repz
or
rclb
push
push
or
outsb
sub
xor
sub
fldl
addl
dec
mov
addb
aad
xor
push
push
pushw
rcrl
add
mov
sbb
mov
add
js
jns
sbb
sub
jmp
test
mull
aaa
adc
inc
or
mov
pop
fisttpl
or
add
pop
not
xor
lret
inc
or
sub
pop
mov
jmp
shl
cmpsb
dec
mov
mov
out
jp
pop
sbb
insl
or
add
add
pop
sub
out
xor
jmp
dec
test
xor
cmp
repz
mov
cmc
inc
ret
or
push
in
or
xorl
sub
addr16
arpl
shll
ja
jle
add
ljmp
cwtl
in
dec
sub
repnz
add
pop
push
popl
xor
cli
sub
xor
pusha
push
sbbl
mov
mov
dec
sub
inc
cmc
jmp
inc
sub
aam
and
pop
pop
rcrl
mov
xchg
js
and
pop
loop
xorb
out
jbe
stc
shr
pop
cmp
mov
movsb
jmp
fnstcw
sbb
aad
into
pop
adc
bound
jbe
in
push
add
pop
push
dec
and
jbe
or
jmp
mov
cwtl
dec
or
sub
pop
jns
mov
or
orb
rolb
dec
push
shll
lahf
dec
leave
loop
mov
or
pop
push
mov
mov
loop
pop
pop
aam
mov
push
pop
mov
and
cwtl
pop
add
arpl
push
dec
pop
mov
fsts
or
sbb
sbb
and
fstpt
add
lcall
jl
es
loopne
or
cs
nop
lea
outsb
pop
pushf
xlat
xor
push
frndint
inc
cmp
push
outsl
add
inc
ljmp
sbb
adcb
das
mov
xor
or
xchg
ret
pop
inc
mov
int
cs
xor
dec
adcw
das
jmp
add
aad
pop
or
inc
out
imul
push
mov
addl
mov
inc
fmull
sbb
xor
pop
push
ja
mov
aaa
rclb
cmpsb
lods
jnp
mov
jb
add
hlt
mov
pop
ljmp
addr16
jnp
shr
in
mov
sub
sub
aas
dec
jnp
js
pop
lock
shl
aad
sbb
add
cmc
mov
sar
imul
jecxz
adc
cmp
aaa
pop
repnz
mov
mov
jns
cmp
bound
sub
adc
push
mov
lods
add
dec
cs
icebp
shlb
xor
jmp
into
out
jl
push
cmpsl
imul
mov
push
sub
or
sbb
sahf
adc
sub
jmp
xchg
shr
stos
into
adc
mov
fldenv
roll
mov
add
dec
or
push
int
mov
sbb
bound
imul
in
out
cmp
dec
push
subb
rdpmc
mov
xor
adc
sub
push
shr
or
mov
data16
rcrb
inc
in
dec
xor
shlb
push
pop
out
or
out
pop
mov
push
sbb
dec
cmpsb
cmp
sbb
nop
out
jge
rcl
pop
mov
in
mov
or
xor
or
inc
or
cmpl
addr16
add
incb
mov
or
lea
jmp
cmc
ds
and
repz
aad
mov
cmp
xchg
int
aad
cltd
sbb
dec
sub
call
fs
mov
push
fldt
jle
dec
add
xor
sub
dec
or
push
push
mov
adc
adc
mov
popa
shr
inc
mov
negl
or
sbbb
ljmp
cmc
xor
movsb
adc
or
test
shlb
pop
inc
add
inc
push
std
es
jb
ret
dec
ja
test
and
sahf
pop
test
pop
repnz
insb
test
dec
scas
ret
jmp
repnz
mov
leave
jl
test
push
or
in
arpl
or
jecxz
push
pusha
pop
jno
outsl
pop
xor
pop
cltd
imul
push
imul
add
cmpsl
push
pop
and
adc
sub
push
les
int3
dec
push
popf
roll
mov
pop
push
shrb
xor
add
popa
data16
inc
mov
cmp
jmp
gs
add
xchg
inc
xor
loope
jno
rol
pop
es
cmp
and
pop
and
mov
mov
flds
or
cwtl
mov
jne
int
pop
cmc
pusha
mov
or
ljmp
sub
shr
jbe
cmp
push
dec
rcrl
mov
stos
ljmp
decb
popf
jmp
and
adc
add
daa
in
pop
push
mov
js
call
mov
das
adc
test
movzwl
sahf
inc
inc
jo
xchg
scas
add
sbb
sbb
sbb
adc
shr
test
jmp
dec
inc
and
out
inc
popa
cmpsb
add
rcrb
in
outsb
sub
mov
dec
dec
test
aas
jmp
pop
notl
insl
in
ficoms
sbb
sub
mov
push
xor
fsubs
loop
add
rolb
cmp
push
lahf
into
inc
mov
push
sub
add
lods
bound
iret
pop
inc
mov
add
sbb
repnz
int
lea
fmuls
push
xor
sbb
push
cwtl
jne
subl
xor
inc
in
pusha
sub
fnstsw
mov
out
fmuls
orb
jno
jmp
add
add
mov
scas
jp
in
pop
mov
rcrl
loop
add
pop
mov
andb
leave
or
roll
mov
mov
dec
cs
jg
inc
shrl
pop
lock
int
xor
sbbl
inc
jmp
xorl
cmp
enter
jo
nop
or
adcb
test
push
dec
leave
inc
ret
mov
pop
data16
add
jl
nop
rclb
inc
xorb
xor
jno
sub
sub
mov
adc
or
push
mov
daa
cmp
or
add
lret
jne
or
mov
push
jmp
fimull
xor
mov
jae
and
or
andb
add
into
lods
push
rolb
or
inc
fistpll
mov
push
fsubrs
mov
cmp
inc
add
dec
dec
add
or
and
maskmovq
dec
test
adc
xchg
and
ja
mov
push
add
cmp
in
ss
ljmp
push
push
add
jl
jmp
mov
repz
or
fldl
cltd
dec
sub
jmp
insb
ret
mov
pop
cmp
sahf
push
mov
or
jb
sub
sbb
adc
shrl
movsb
adc
imul
pop
dec
pop
or
lock
fisubrs
add
jmp
pop
xchg
dec
mov
sbbb
add
das
dec
adc
jmp
and
xorl
mov
mov
daa
bound
lcall
xchg
aaa
test
in
and
pop
in
inc
or
fsubs
add
pop
add
ja
mov
cs
add
ret
cld
sub
jge
arpl
sub
add
ja
mov
repz
fnsave
fisttps
pop
add
pop
rol
inc
test
pop
cwtl
xor
jle
and
mov
mov
pop
xchg
xor
jns
mov
daa
ret
pop
adc
dec
lock
mov
inc
inc
inc
shll
mov
adc
mov
cmp
jns
sbb
je
nop
outsl
add
add
mov
inc
pop
pop
mov
mov
ret
mov
adc
fs
push
pop
pop
inc
adc
jmp
addb
add
cwtl
push
inc
pop
mov
jns
dec
xchg
mov
divb
shll
push
sbb
test
loop
in
ret
add
xchg
das
sbb
or
push
push
test
inc
and
fadd
imul
adc
mov
not
push
mov
add
and
mov
sub
adc
test
hlt
test
push
out
and
sahf
out
inc
ret
sbbl
shll
daa
outsl
cmp
push
mov
and
pop
or
pop
clc
sub
inc
mov
add
icebp
cmc
sbb
shl
mov
push
sbb
cli
in
add
ret
es
bnd
add
mov
mov
notl
fisttpl
andb
adc
aaa
inc
lods
push
add
jno
push
sti
mov
call
mov
push
or
push
imul
push
outsb
push
cli
add
cmp
shr
add
pusha
add
les
ss
or
popa
movsl
inc
shll
test
add
in
jb
out
js
push
es
xor
adc
or
sub
movzbw
pop
xor
jno
adc
push
mov
sarb
cmp
mov
sub
stos
inc
or
xor
mov
jb
ds
xchg
aad
or
js
mov
loopne
pop
das
inc
out
bound
mov
push
mov
in
jns
sbb
sub
popf
pop
icebp
push
sub
lahf
push
lock
inc
pop
push
xchg
xor
mov
jne
dec
je
jmp
add
pop
inc
sub
cli
fadds
pop
push
push
bound
adcb
outsl
sub
pop
popf
or
or
sbb
push
xchg
std
mov
sub
arpl
mov
stc
out
pusha
mov
outsb
add
mov
lcall
pop
inc
cld
mov
pop
mov
pop
pop
pop
fidivl
add
in
jns
pop
pop
rolb
sbb
jmp
mov
mov
test
ds
and
imul
push
or
jbe
andl
sub
jbe
scas
inc
pop
adc
add
mov
jecxz
push
add
js
jmp
mov
in
adc
mov
sbb
ret
dec
out
push
xchg
inc
or
mov
pop
andl
dec
adc
dec
mov
add
pop
mov
ja,pt
pop
lock
sub
push
pop
pop
jns
es
js
xor
xchg
jl
cmp
jp
lret
xor
or
jo
adc
mov
scas
aas
pop
add
mov
mov
adc
xor
inc
sbb
jb
xchg
push
inc
xor
jno
inc
out
add
dec
mov
pop
push
or
mov
jno
or
pop
or
and
push
xchg
xchg
in
cmpsb
add
xchg
enter
out
ret
pop
adc
jmp
cmp
jp
adc
xchg
rclb
inc
adc
out
inc
or
cmp
mov
icebp
pusha
maxps
rorl
sbb
adc
leave
sbb
dec
push
xlat
pop
test
out
ret
pop
into
out
popa
stc
insb
jmp
sub
clc
pop
and
jne
and
fsubs
add
ja
push
add
je
or
pop
xchg
xor
add
cmpsb
push
and
adc
nop
ret
cmp
push
dec
fstpt
push
lds
pop
pop
leave
popa
push
pop
push
pusha
push
xor
add
inc
pop
and
movsb
leave
dec
xchg
mov
insl
xorl
sti
and
dec
repz
xorl
cvtps2pi
push
push
pop
jmp
sbb
scas
imulb
and
dec
inc
dec
pop
clc
or
lret
push
pop
push
mov
dec
idiv
adc
xorb
aas
and
jmp
nop
add
pop
movsl
and
or
add
mov
jmp
cmp
dec
aad
sub
cpuid
sbb
sqrtps
test
sub
fdivrl
sti
lods
testl
and
in
testb
push
adc
xor
push
and
out
or
cli
dec
adc
je
call
shl
inc
adc
sbb
call
jp
push
or
bndldx
inc
push
inc
sub
mov
and
add
and
jmp
addl
push
mov
xor
pop
orb
test
xchg
add
icebp
jbe
push
mov
inc
jmp
cmpb
mov
lret
mov
dec
mov
add
or
sub
xor
outsb
imul
test
jmp
pop
sarb
pop
push
fwait
inc
testb
cmp
or
xor
cmp
lds
subb
pop
push
fs
test
dec
pop
sbb
loop
shlb
push
dec
add
mov
mov
movsl
test
inc
dec
mov
or
aad
lods
loop
add
push
mov
in
aas
pop
pop
mov
movsb
les
bound
or
repz
push
jne
mov
mov
pop
mov
mov
cmp
or
cwtl
inc
add
jnp
jecxz
clc
test
mov
fdiv
or
js
in
leave
jne
mov
es
insb
adc
add
push
int3
xor
xor
push
or
push
int3
push
dec
fildl
popf
push
cwtl
pushf
clc
mov
dec
imull
lret
pop
lods
loope
dec
inc
cmp
mov
ds
xor
pop
xchg
sti
ja
mov
ss
test
pop
or
jns
mov
or
adc
or
sahf
adc
insl
loopne
inc
into
idiv
xor
out
adcb
cmp
and
mov
xor
fldenv
jecxz
cltd
jno
cs
inc
popf
lods
hlt
cmpsl
fstpt
das
or
push
pushf
mov
ret
mov
sub
sub
pmulhuw
dec
shlb
pop
das
mov
dec
aas
test
sbb
sbb
fists
add
inc
clc
sbb
rcrl
mov
pop
mov
cmpsb
mov
cmp
mov
jmp
dec
jl
mov
or
int
pop
or
call
dec
bound
pop
pop
jge
sbb
cmp
hlt
pusha
add
shll
dec
xor
dec
add
push
adc
sbb
aaa
push
mov
adc
mov
aas
adc
or
rorl
mov
andb
jmp
sub
xor
adc
loope
and
xchg
ret
out
jns
jo
into
dec
movsb
daa
or
sub
ds
sub
xor
adc
ret
fdiv
das
fs
jle
addr16
adc
clc
movsb
fldt
cmpsl
push
or
sub
mov
add
cmp
mov
sub
call
add
iret
xor
sub
inc
mov
and
es
pop
ret
add
daa
jle
xor
push
lret
movb
rcrb
sub
and
and
stos
cmp
gs
push
xchg
add
rcrl
jle
pop
sbbb
push
pop
pop
sub
pusha
jl
dec
adc
les
push
mov
inc
sarl
lret
jbe
push
loopne
push
add
rorl
jnp
out
pop
and
add
jns
fildll
in
push
xchg
lds
and
pop
sbb
int3
in
dec
bound
test
jp
daa
popf
or
and
pop
lret
mov
cmp
adc
movsl
ss
and
shrl
xchg
xor
add
loopne
pop
and
push
jmp
jnp
cmpsb
xchg
addl
lcall
dec
xor
sub
pop
cmc
outsb
mov
inc
jmp
es
movsl
ret
xor
cld
or
negb
jae
out
enter
lcall
dec
data16
jecxz
int3
pop
arpl
or
in
stc
mull
push
push
push
aaa
adc
iret
or
fsts
push
lea
jp
jl
ss
mov
addr16
rcrl
and
pop
push
mov
outsb
enter
pushf
or
dec
pop
sbb
les
int3
or
adc
xchg
repnz
add
fucompp
push
sahf
fisubs
jmp
add
push
scas
jne
es
fimull
das
adc
fs
repz
sub
flds
fadds
or
pop
pop
jg
pop
addl
add
arpl
into
jne
add
pushf
jae
mov
push
insb
cmpl
xor
shlb
push
fists
repz
call
dec
add
xor
add
repz
and
fs
dec
jmp
inc
ret
movsl
or
mov
pop
cmpsl
lods
dec
test
jo
rcrb
in
pop
mov
xor
adc
sbb
stc
aas
push
addl
ljmp
add
add
xor
inc
hlt
mov
data16
and
and
xor
add
ret
sti
jmp
hlt
ljmp
push
cmc
divb
xor
insb
scas
int3
orb
or
sub
pop
sbb
outsl
cmp
xchg
inc
add
push
mov
loope
cmp
add
inc
lods
or
xchg
sbb
stos
push
bnd
mov
mov
shll
loopne
mov
repz
xor
add
cwtl
jp
sub
add
test
or
pop
push
je
fs
and
cs
mov
pop
adc
notl
jge
clc
out
and
pop
sub
sub
aam
jmp
pushf
andb
jbe
pop
add
xor
push
push
xor
or
mov
out
cmp
jg
and
movsb
insb
push
and
cmp
out
mov
in
mov
add
or
shlb
rcll
jo
dec
gs
push
cmp
dec
adc
mov
mov
xor
or
fistl
ret
push
mov
push
fwait
add
add
jno
and
inc
push
mov
dec
clc
addb
mov
jno
cmp
das
mov
xchg
mulb
loope
fmull
mov
and
movsb
hlt
cmc
inc
movsb
and
adc
pop
fsts
xor
sti
cli
rcl
out
mov
aad
into
sub
xchg
or
push
xor
idivl
nop
outsl
add
cli
pop
jmp
ret
pop
xor
jmp
sbbl
lahf
leave
pop
arpl
push
andb
js
nop
jle
xor
mov
icebp
inc
push
mov
and
repnz
sub
mov
inc
orb
inc
lret
pop
adc
mov
rol
mov
jmp
dec
lret
add
add
mov
sbb
shll
mov
xor
gs
mov
xchg
dec
mov
add
flds
mov
insl
add
loope
lds
sub
or
add
ja
add
adc
dec
inc
cltd
push
xchg
sub
cmpsb
xor
pop
mov
ja
ret
mulb
mov
sbb
jno
popf
cltd
adcb
mov
push
xor
jmp
mov
dec
dec
mov
cmp
pop
push
pop
adcb
xor
or
test
in
popa
and
outsl
arpl
movsl
mov
shr
popa
pop
call
test
fs
xor
mov
jge
or
jg
div
dec
mov
and
pop
add
jmp
or
divb
push
xchg
scas
and
movsl
pop
pop
cli
mov
les
mov
add
es
fstl
and
push
imul
mov
inc
lods
add
fisubs
mov
or
add
sbb
pop
pop
outsl
sub
inc
dec
dec
adc
push
out
adc
inc
repnz
jge
outsb
je
or
and
pop
mov
jne
adc
shrb
into
daa
mov
ja
movsl
inc
cltd
sub
shlb
subb
and
or
aam
inc
inc
mov
cwtl
divb
incl
je
mov
sub
pusha
pop
out
sub
dec
outsl
add
fmuls
push
or
mov
cmp
fimuls
orb
sub
gs
mov
leave
scas
cld
test
stos
or
push
mov
sub
or
jo
pop
ds
pop
cwtl
cmpsl
push
sbb
mov
or
popa
and
rcrb
pusha
push
xor
hlt
dec
imul
scas
xor
sbb
cmp
add
orl
notl
and
mov
fwait
incl
lock
dec
je
shrl
pusha
push
or
mov
xor
push
inc
xchg
sub
insb
add
sub
fildl
sub
lret
sub
and
dec
sbb
jge
jmp
in
movsb
leave
push
and
fldl
testb
insb
sub
test
daa
inc
loop
enter
add
adc
aad
andb
and
inc
das
pop
outsl
in
mov
push
popa
or
icebp
inc
pop
sub
xor
adc
inc
adc
fistps
ficomps
mov
bound
or
lds
popa
pop
jo
jno
movsl
test
adc
repz
pop
inc
jl
sbb
stc
fisttpll
jns
inc
call
xor
or
pop
dec
dec
push
inc
adc
mov
jle
cwtl
movsl
lock
and
or
ficoms
sub
pop
xchg
cmp
pop
arpl
outsl
adcl
push
adc
popf
xchg
mov
orb
cmp
pop
scas
jl
sub
pop
shr
adc
add
push
fldt
in
imul
adc
cli
or
mov
mov
sub
add
xor
xor
leave
cmp
mov
out
and
sbb
jnp
in
repz
push
xor
out
mov
loop
fadds
add
mov
fcomps
shl
cs
cmp
pop
adcb
dec
add
mov
push
dec
add
nopl
pusha
int3
and
loope
fiaddl
push
pop
push
mov
and
ds
lds
mov
add
shll
add
inc
xchg
cs
call
clc
or
ja
mov
mov
jp
xchg
test
imul
out
je
mov
jnp
push
and
and
pop
and
push
hlt
cli
pop
adc
jmp
xor
fwait
sub
cltd
dec
lret
test
in
jg
jmp
add
jb
and
ret
add
pop
arpl
push
leave
pop
or
adc
adc
mov
aas
int3
xor
dec
testb
xchg
sub
xor
rol
cmp
outsb
xor
xor
sub
andl
aas
push
inc
mov
add
or
wbinvd
fdivs
lcall
sub
sub
adc
adc
popa
sub
ret
dec
sub
jbe
jmp
push
mov
pop
cmp
fistps
sub
les
dec
adc
dec
fadds
add
sub
lock
mov
or
dec
push
push
es
dec
adc
testb
fs
or
adc
loopne
push
jmp
dec
sub
addr16
add
xchg
add
sub
arpl
inc
loope
inc
mov
lds
cmp
in
fs
lods
test
pop
movsl
sub
push
add
or
jmp
out
sbb
test
in
add
jo
push
add
jmp
stc
add
iret
jmp
dec
mov
and
int3
imul
sbb
adc
and
or
lret
les
in
or
cmp
xor
repz
sub
xor
iret
adc
test
and
rcrl
pop
dec
inc
enter
fistl
lret
cli
ds
and
jbe
adc
ret
cld
inc
mov
mov
roll
pop
mov
out
or
bound
jl
xlat
push
sbb
push
add
push
mov
add
loopne
sub
mov
hlt
sbb
pop
sub
in
into
or
rcrb
stc
rclb
test
aaa
mov
dec
mov
inc
add
add
shr
roll
jmp
jns
push
mov
xlat
mov
bound
or
sarb
or
jp
sub
mov
mov
rol
int
aas
arpl
add
lods
push
incb
sub
inc
or
sbb
shrl
lods
cmp
arpl
dec
cmp
cmp
aad
ljmp
lock
push
jne
andl
cmp
jmp
cwtl
dec
out
aam
andb
add
inc
pop
stc
pop
cs
clc
xor
es
or
mov
sub
or
jnp
adc
or
xchg
mov
test
xorb
lds
data16
imul
not
mov
or
icebp
mov
jg
or
popl
jl
jmp
push
sub
stc
or
in
cmc
dec
xor
addl
xorb
xor
and
call
mov
mov
add
int3
jmp
enter
cmpl
sbb
push
fsubs
push
sub
mov
push
in
pop
sub
xor
lahf
fldcw
cmp
adc
ficompl
sub
into
test
and
mov
mov
xchg
cmp
addr16
in
in
je
sub
xor
or
or
adc
pop
pop
adc
push
mov
xorl
cwtl
push
push
jp
in
cmp
pop
add
das
jmp
mov
or
in
xchg
mov
in
add
jmp
dec
and
in
insb
sub
and
and
test
add
idivl
outsl
fnstenv
inc
inc
repnz
mov
sahf
fidivrs
pop
repnz
stc
cmp
push
add
mov
and
and
jl
add
jno
add
mov
rsqrtps
mov
cmp
inc
jne
addr16
bound
push
cltd
out
mov
inc
mov
dec
icebp
mov
push
mov
pop
pop
push
mov
push
add
adcw
fadds
dec
push
jmp
mov
xchg
andb
adc
add
call
xchg
xor
push
mov
sti
mov
adc
add
pop
mov
mov
add
iret
in
xor
push
leave
es
push
mov
mov
push
push
jmp
pop
add
lock
ret
xor
jno
sbb
sub
add
xor
push
sahf
nop
cmp
cld
repz
jae
dec
push
in
mov
sub
push
push
or
mov
mov
adc
rcll
or
add
push
bound
stos
adc
push
xchg
lret
inc
inc
adc
dec
jnp
out
xchg
sbb
adc
jns
ljmp
aas
xor
jecxz
adc
pop
cmpsl
mov
xor
add
lret
sub
das
aad
xor
aam
push
notl
int3
cmp
mov
jns
rorb
into
and
push
jge
xchg
jp
add
movsb
pop
mov
push
fs
xchg
ds
and
add
xchg
xchg
xchg
pop
push
std
icebp
incb
add
sahf
sbb
jne
jl,pn
arpl
sbb
leave
adc
sub
lock
mov
divl
push
cld
movsl
jb
or
jbe
bound
push
xor
xchg
in
or
pushf
jo
add
mul
pop
nop
push
cmp
mov
push
and
sub
add
add
out
cmp
dec
inc
mov
cmp
push
pop
pop
push
push
lods
jmp
das
sub
sub
insl
mov
nop
rcl
inc
jl
cwtl
adc
or
xor
push
and
cmp
xchg
push
inc
inc
outsb
fs
outsl
pop
adc
xchg
pop
inc
pop
orb
or
ficomps
push
mov
xor
pop
cmp
int3
ds
add
jno
or
pop
push
push
rorb
inc
fisttpll
jecxz
lods
adc
mov
into
or
mov
add
call
hlt
sub
adcb
add
inc
jno
sub
push
les
inc
push
jmp
fisttpl
icebp
lcall
mov
and
or
mov
sub
cmp
in
cmc
add
jmp
adc
ret
or
add
sub
jo
or
adc
fiadds
shll
adc
sub
call
pop
add
pop
sub
xor
fisttpl
leave
imul
push
mov
sbb
into
rorb
rorl
repnz
cmp
fstpl
add
jmp
in
leave
xchg
add
iret
jge
pusha
insl
int3
cmpsl
jno
icebp
sub
inc
pop
lcall
adc
cmpsb
pop
loopne
xlat
cmpsl
pusha
cmp
pop
aaa
jne
mov
push
dec
push
daa
xchg
loopne
pop
pop
idiv
lahf
add
ror
xor
sub
mov
popa
cwtl
add
fmuls
fwait
pop
aam
xor
pop
push
mov
inc
or
xor
sub
outsl
push
jmp
mov
loopne
pop
aaa
add
insl
mov
jle
jmp
sub
jge
dec
shll
std
add
lods
mov
adc
sbb
leave
jns
pop
pusha
xchg
push
test
not
mov
out
ret
or
or
clc
mov
test
pop
push
push
inc
mov
pop
sub
cmpsb
or
sub
movsl
rcrl
xchg
int
rorb
xchg
dec
fisubl
inc
dec
xor
and
es
enter
pop
sub
decl
inc
or
push
xchg
rcl
in
call
pop
cmp
mov
jns
pusha
inc
push
cmpsb
int3
add
jo
mov
push
pop
xor
and
mov
push
ja
mov
movsb
or
add
sub
neg
jle
adc
in
sub
inc
add
cltd
sub
roll
or
icebp
jmp
loope
xchg
jp
movsb
rcll
out
and
ljmp
mov
adc
add
arpl
es
shll
out
jl
lcall
fidivrl
sbb
xor
xchg
jg
fildl
pop
push
push
jle
pusha
push
aam
or
loopne
jmp
mov
pop
adc
fisubrl
ds
add
lahf
daa
imul
repz
push
cltd
mov
mov
add
dec
xchg
call
lcall
inc
popf
es
pop
and
push
or
dec
hlt
adc
push
dec
add
dec
in
mov
xor
push
lret
not
or
sub
addb
add
ss
mulb
enter
add
push
mov
pop
push
push
popa
add
sub
les
push
xchg
jmp
sbb
insl
inc
cmp
add
pop
pop
sub
mov
cmp
sub
pop
jmp
mov
or
ja
dec
test
and
mov
mov
xor
pushf
pop
pop
inc
mov
cltd
xchg
pusha
in
or
or
ret
add
pop
and
xchg
sbb
cmp
int3
xchg
xor
sub
xchg
inc
jmp
push
push
dec
aam
mov
xchg
cwtl
xchg
out
int
mov
and
ret
fisttpl
add
add
ror
daa
cmp
add
mul
mov
bound
popaw
mov
neg
or
test
lahf
dec
bound
xor
movsl
repz
jmp
xor
push
push
gs
cwtl
dec
inc
xor
faddl
cmc
ret
shrl
fadd
or
mov
adc
pop
jmp
push
mov
enter
push
subb
adc
pop
repnz
jecxz
or
cmp
jl
push
aam
push
cmp
push
repz
and
out
or
pusha
ja
popf
in
hlt
xlat
adcl
int3
add
aam
hlt
dec
mov
pop
in
imull
inc
and
and
xor
in
push
xor
xor
les
shlb
sub
and
jmp
mov
inc
rcrb
sub
nop
lock
lret
fiaddl
mov
xor
jl
fstps
movsb
jo
aad
or
jae
add
add
push
inc
pop
jmp
mov
sub
das
push
lahf
in
lcall
pop
jmp
js
xor
les
sub
add
and
bound
add
loope
neg
sub
xchg
add
test
jnp
outsb
iret
lds
inc
adc
cmp
lods
lds
lock
adc
add
cmp
je
roll
xchg
push
dec
add
das
push
loop
inc
pop
push
mov
push
sub
popa
ret
aam
ds
sbbb
mov
xor
dec
cmp
xor
gs
mov
add
in
and
cmp
or
das
or
mov
sbb
sbb
dec
jno
mov
mov
or
or
mov
outsb
repz
pop
shl
or
fucomi
inc
sub
and
rorb
push
neg
add
out
or
das
push
icebp
pop
movsb
repz
ret
pop
cmp
pop
and
pop
inc
sahf
jb
jb
rcll
shrb
aas
stos
inc
adc
cmp
mov
ret
sub
adc
je
and
pop
xor
test
in
pop
fadds
and
pop
int
mov
fdivs
push
cmpsl
je
jmp
shr
mov
adc
xor
pop
add
movsl
add
jmp
loop
or
out
ret
sub
pop
sub
add
cmp
ja
repnz
or
loop
popa
or
fbld
sub
fisttpl
mov
or
pop
push
pop
cmp
dec
or
ret
add
jae
add
add
loopew
push
sub
adc
dec
test
imul
out
dec
sub
rorb
sti
icebp
inc
mov
mov
xor
pop
push
add
jmp
getsec
mov
imul
ljmp
mov
fucompp
btl
xor
inc
xchg
or
cmp
or
push
xor
movsl
pop
nop
or
mov
jecxz
sahf
adc
pop
and
push
push
mov
outsb
jmp
jb
pop
dec
jp
ljmp
add
bound
subb
fdivp
cmpsb
cmp
loope
aad
push
lahf
cld
add
adcb
leave
dec
sbb
shrb
neg
add
out
cmp
ja
inc
idiv
ljmp
int3
jae
cld
fistpl
loope
and
or
mov
out
notb
cmp
or
push
xchg
cmp
pop
popf
dec
push
mov
sub
orb
mov
mov
lcall
mov
mov
adcb
mov
or
stc
jo
mov
je
popa
push
outsb
lods
outsl
xor
push
rcll
xor
push
pop
pop
mov
out
out
insl
xor
and
negb
mov
mul
inc
xor
jp
addb
add
mov
jmp
shll
pop
xor
and
pop
ljmp
mov
push
xor
xchg
lret
xchg
mov
mov
xchg
enter
adc
movsb
push
xor
cmp
pop
sub
pop
sub
sbb
in
stos
test
je
shrl
push
push
mov
arpl
loop
stos
enter
movsl
adc
fdivr
mov
pop
inc
adc
mov
mov
and
jmp
mov
xchg
push
pop
cmpsb
inc
cmp
mov
or
xor
stos
or
lcall
imul
push
stc
sbb
add
mov
nop
jl
inc
mov
or
outsl
jns
movsb
ret
add
and
add
stos
xor
mov
iret
jmp
ret
out
push
sbb
mov
xchg
pop
pop
rcll
inc
and
das
or
nop
sbb
jle
or
add
jnp
imull
imul
jecxz
icebp
add
loop
les
adc
add
pop
lds
shl
enter
or
pop
orb
inc
lahf
dec
sbb
clc
pop
lret
fisttpll
lret
sub
add
push
stos
aas
xchg
mov
mov
sub
inc
into
pusha
pop
pop
push
or
jae
sbb
pop
cmp
adc
popa
cmp
subb
jmp
mulb
xor
mov
adc
mov
imul
enter
aam
lret
sbbl
jmp
push
or
or
cwtl
xchg
inc
sub
or
or
outsb
xor
dec
add
and
pop
adc
xchg
mov
add
jnp
cli
cs
jmp
add
and
xor
jmp
mov
jecxz
pop
movsb
mov
mov
pop
or
jmp
shrb
rcl
and
mov
inc
add
xor
loope
mov
cltd
adc
enter
stos
iret
pop
mov
xlat
push
cmp
dec
sub
sub
pop
xchg
movsb
jmp
push
mov
fidivrl
out
outsl
or
xor
add
fnsave
dec
or
xchg
sub
cwtl
lret
popa
shr
popf
in
add
cmp
std
es
push
inc
movl
pusha
outsl
in
or
push
cmp
popf
lcall
add
ss
dec
push
sub
aad
jge
leave
fistpl
rclb
push
jmp
cmp
add
jmp
in
cmp
push
int3
adc
sbb
addr16
daa
push
clc
and
dec
ret
sbb
push
mov
out
dec
daa
mov
mov
xchg
and
out
dec
shl
ret
or
into
push
mov
mov
pop
sbb
or
lods
pop
imulb
sbb
and
add
pop
add
test
sub
jle
daa
sub
mov
xchg
dec
nop
movsl
or
jnp
pop
cmp
push
push
sbb
ficomps
mov
incl
fwait
mov
dec
cmpsb
xchg
and
sahf
lods
pop
jl
lods
add
inc
leave
add
ret
pop
push
push
ds
addr16
add
lret
repnz
inc
hlt
mov
push
mov
dec
stc
sarb
cwtl
push
add
js
push
pop
mov
into
loopne
pop
and
mov
shl
popa
clc
pushf
sbb
inc
pop
add
cmp
or
inc
dec
add
sbb
pop
xchg
push
pusha
or
aam
mov
inc
mov
jmp
add
sub
test
sub
shrl
pop
int
cld
add
xchg
movl
fstpl
xchg
xor
mov
pop
inc
add
push
jmp
push
mov
mov
sub
add
aam
aas
pop
jp
add
and
and
int3
call
inc
jmp
shll
and
push
add
mov
push
jecxz
pop
sub
xor
stos
dec
push
sub
mov
xlat
jle
or
and
jmp
xorl
mov
push
jp
sub
lahf
les
xchg
cmp
mov
cld
ds
pop
jmp
add
gs
in
js
mov
sbb
xchg
and
mov
fcoml
pushf
cmp
or
inc
mov
pop
dec
pop
mov
or
sbb
out
pop
adc
sub
push
sub
or
or
cmpsb
ficompl
movsb
mov
out
jmp
sahf
sbb
or
push
lds
jno
jge
adc
out
push
or
xlat
ds
push
daa
pusha
fsubrl
add
rcll
jns
pop
add
iret
and
pop
pop
js
sbb
repnz
mov
das
repz
or
test
dec
dec
addb
cmpsb
pop
cwtl
clc
pop
rcll
mov
in
repz
enter
outsb
rclb
push
shlb
xorl
popf
std
adc
roll
mov
jmp
gs
pop
push
xorb
das
pusha
test
sub
fs
cmp
test
pop
mov
daa
xchg
pop
ja
jno
addb
jb
test
inc
jnp
pop
adc
sahf
lock
test
insb
adc
adc
xor
pop
inc
and
es
adc
inc
orl
pop
pusha
sub
push
mov
mov
push
es
jmp
fisttps
orb
mov
lcall
push
pop
push
mov
xchg
lods
popl
dec
ds
xor
negl
dec
inc
add
out
adc
sub
mov
cmp
or
pop
push
or
pop
out
sti
in
aad
xor
das
mov
push
lea
cmpb
inc
mov
jge
cmp
jns
in
push
mov
out
push
test
out
notb
sub
add
fadds
or
pop
add
loop
mov
jae
inc
or
insb
and
rorb
add
xchg
pop
jo
pop
mov
or
push
mov
pop
aam
jmp
xlat
ret
jl
sub
add
mov
push
mov
and
adc
lock
add
jno
jns
fs
dec
mov
xor
roll
add
mov
lret
popa
sub
hlt
or
inc
fsubs
adc
or
push
clc
pop
xor
cmp
mov
push
loopne
mov
mov
and
xchg
jbe
dec
mov
mov
lock
pop
loope
push
mov
movsb
jne
mov
fisubl
push
pop
sub
pop
fdiv
dec
pusha
sbb
repnz
mov
add
and
mov
mov
loope
lock
fisttpll
popf
outsb
dec
xor
xchg
ja
push
push
sbb
sub
push
dec
in
sahf
xor
pop
or
jmp
call
pop
mov
insl
gs
out
lret
sub
adc
or
push
add
daa
add
enter
xchg
mov
push
jecxz
loope
push
sub
stos
pop
sbb
jno
stc
add
imul
js,pt
cmp
xor
ds
xor
push
scas
nop
xchg
push
or
pop
fcomps
xor
bound
loop
pop
mov
jne
fldl
dec
xor
jmp
push
sti
lret
add
jbe
mov
xor
pop
add
sbb
add
sub
and
ret
add
cs
mov
mov
and
shll
dec
xchg
mov
cmpsl
xchg
inc
push
dec
adcl
xchg
or
fs
cmpsl
xor
aas
jmp
lret
adc
inc
pusha
sub
rcrb
test
daa
and
push
push
pusha
push
push
mov
sbb
mov
xchg
pop
pop
nop
cli
xor
pop
add
rol
ror
cltd
push
xchg
push
add
iret
mov
push
andb
inc
jle
or
inc
outsl
push
inc
push
push
add
pop
outsb
or
adcl
jge
xchg
sub
add
test
mov
or
sbb
or
dec
or
fsub
jp
cmc
clc
in
pop
fs
pop
mov
push
loope
cmp
pop
icebp
sarl
and
add
xor
push
sub
sbb
mov
inc
or
leave
xchg
out
shr
dec
sbb
and
bound
add
xchg
cmp
or
dec
pop
xor
mov
sub
or
xchg
sbb
pop
sub
sbb
pop
mov
and
rorb
insl
and
aas
aas
enter
rorb
incl
or
sarl
and
pop
fisttpll
sub
inc
addl
inc
iret
pop
cmp
jg
jns
dec
pop
stc
sub
push
xchg
addb
les
pop
xchg
popa
das
pusha
xor
xchg
outsl
push
sbb
pop
sub
sub
int
xchg
mov
pop
jmp
mov
les
call
lahf
and
in
mov
mov
or
js
test
loop
mov
lahf
in
in
bound
and
fisttpll
jmp
push
arpl
fs
fsubr
mov
mov
data16
cs
mov
jl
sub
sbb
or
repz
jp
jle
loop
mov
xchg
rclb
sbb
and
and
pop
add
push
cs
jmp
cld
lahf
push
xchg
not
sbb
xor
or
sbb
js
push
inc
sub
dec
sub
adc
mov
scas
cli
pop
sbb
xchg
jb
or
mov
sub
inc
push
gs
cwtl
shr
or
lret
loop
sub
test
adc
or
xchg
mov
add
shlb
sub
loop
add
add
pusha
push
into
and
jno
or
and
xchg
push
sub
cli
push
movsb
idivb
movsl
imul
stos
fwait
sbb
jg
cmp
mulb
add
dec
jmp
jno
sub
xor
jno
add
xchg
sub
fists
je
dec
mov
jmp
inc
in
mov
popa
jae
push
add
in
add
pop
mov
imul
push
or
add
push
pop
cmp
mov
int
and
repz
add
aas
push
mov
ret
or
ret
xor
cwtl
sub
shr
mov
jno
pop
addb
icebp
adc
pop
or
call
out
dec
ret
adc
xchg
jmp
out
mov
dec
lock
xor
add
lret
dec
jp
dec
mov
and
jo
shll
add
jmp
je
test
adc
pop
shr
cld
iret
pop
js
pop
cwtl
aaa
push
and
insb
mov
dec
jno
mov
fnsave
xchg
outsl
loop
cmp
inc
je
sti
sarl
dec
sbb
lret
out
and
or
subps
inc
add
cmp
aad
test
js
push
xor
lock
sbb
pop
sbb
ltr
push
mov
mov
jle
lods
add
stos
add
sub
aaa
push
mov
test
aam
dec
out
leave
test
mov
mov
bound
aam
mov
call
add
sub
dec
add
cli
mov
dec
pushf
and
enter
xor
pop
and
dec
sbbb
mov
fsts
nop
push
pop
and
inc
jmp
dec
add
out
lret
sti
ja
dec
aad
test
inc
gs
and
xor
nop
and
mov
xor
shll
js
xchg
pop
in
lods
arpl
push
dec
pop
pop
push
cld
cmp
movsb
mov
adc
mov
sbb
xchg
orl
or
div
daa
sub
jbe
test
xor
jle
adc
xor
int
pop
ficoms
bound
lret
add
test
jne
in
test
xchg
cmp
sub
sub
add
jo
pushf
mov
sti
bswap
push
mov
ja
cmp
mov
add
nop
push
inc
popf
inc
pop
bound
sbb
or
xchg
dec
jbe
push
rorl
and
jge
dec
les
inc
adc
cmc
or
xchg
je
jo
daa
add
jns
popa
jmp
not
and
das
int3
out
sub
add
lret
inc
push
push
test
add
or
pop
pusha
xor
adc
lock
push
xchg
test
cld
je
mov
mov
or
xor
add
push
shll
test
mov
in
xchg
pop
in
jno
dec
or
jg
pop
push
push
jmp
xchg
add
dec
jge
xchg
insl
mov
sub
dec
rclb
fbld
scas
push
pop
leave
add
pop
mov
adc
add
add
mov
lahf
pop
and
inc
sub
daa
push
lret
jo
divl
subb
sub
add
xchg
dec
outsl
xor
push
fwait
add
jp
popa
mov
leave
add
loopne
jnp
in
loope
or
js
mov
adc
stc
aad
jmp
repz
pusha
sub
sarb
jb
xor
xor
add
aaa
out
mov
gs
cmp
push
add
fs
mov
lock
sub
pop
dec
sahf
cmp
sbb
clc
push
inc
clc
cmp
and
add
add
push
push
mov
adc
pop
aaa
ret
shl
ja
jge
xchg
pop
imull
pop
roll
mov
and
mov
clc
imul
aad
das
bound
xorl
push
adc
dec
divb
mov
xchg
stc
cli
test
lods
dec
lcall
lret
mov
test
mov
mov
loope
jl
sbb
xchg
sbb
pop
data16
add
js
add
push
xor
jmp
adc
cmp
test
mov
push
not
roll
xchg
or
loop
jbe
movsl
cs
add
push
inc
rclb
daa
cmpsl
dec
sub
push
lcall
dec
cs
or
push
push
mov
popa
movsl
jns
movsb
inc
cmp
add
lods
and
and
mov
cmp
jae
popf
sbbb
clc
pop
inc
movsb
into
cmpsb
lahf
out
xor
dec
inc
test
shl
add
and
push
sub
into
popa
mov
pop
fmuls
jnp
jg
jo
xor
jmp
or
cmpsl
adc
adc
cwtl
push
or
int
test
xor
js
ret
push
cmpsb
dec
mov
subb
loopne
and
das
inc
ret
jne
or
push
push
dec
stos
push
lcall
pop
mov
sbb
imul
add
dec
dec
les
cmp
mov
jecxz
add
out
inc
aas
inc
movl
nop
jmp
pop
fs
adc
mov
push
pop
add
mov
movsb
movsl
cld
and
bound
cmp
fnsave
xchg
in
orb
push
push
push
mov
inc
loop
in
sub
sarl
dec
out
adc
push
cmp
jb
sub
and
xchg
jbe
pushf
push
leave
jp
data16
mov
ret
push
mov
jmp
outsb
mov
mov
mov
ds
test
push
mov
hlt
shlb
stos
lahf
test
push
inc
add
adc
xor
shll
pop
imul
dec
shll
push
adc
mov
jb
enter
add
dec
pop
rclb
out
lods
inc
pop
jne
ret
jbe
dec
cmp
mov
nop
adc
into
sbb
xchg
inc
stos
lds
or
leave
shll
push
data16
cmc
sbb
rclb
jnp
jnp
lahf
enter
jle
pop
add
push
and
mov
jp
push
lock
or
addr16
push
pop
in
jns
sbb
mov
mov
cld
mov
ja
xor
jmp
pop
stc
enter
push
nop
imul
dec
mov
shlb
or
test
and
fidivs
sbb
iret
mov
mov
sub
adc
add
fisubs
nop
outsb
push
int3
xchg
pop
loopne
shr
jmp
and
sbb
jo
vandps
stc
js
dec
stos
iret
mov
imul
in
and
js
vmread
push
mov
jp
and
das
xchg
pop
pop
push
arpl
test
daa
mov
popw
test
pop
pop
adc
xchg
xchg
xchg
add
xchg
insl
push
jo
jmp
mov
push
aaa
shl
push
in
pop
cwtl
cmp
stos
adc
mov
xor
mov
aas
xor
gs
xor
and
jne
dec
paddsw
es
add
jle
fdivs
test
test
mov
xor
fdivl
scas
ret
inc
pusha
push
out
mov
mov
xchg
call
nop
mov
daa
dec
xchg
int
inc
jne
xor
mov
jecxz
test
inc
in
dec
adc
addl
or
js
xchg
repz
mov
push
aad
cmp
adc
push
dec
xor
or
fwait
iret
jb
pop
pusha
inc
daa
ds
adcb
inc
dec
add
jno
mov
movsl
sarl
sarb
dec
jmp
xchg
mov
cld
inc
adc
mov
pusha
insb
xchg
jno
add
inc
shl
and
dec
jmp
jns
shrb
xchg
sbb
ja,pt
add
jns
sub
popf
push
mov
xor
jbe
push
ja
js
xchg
mov
lods
adc
push
add
cmp
xor
test
xorb
xor
adcb
mov
dec
inc
out
pinsrw
imul
or
lret
pop
push
xchg
fidivs
adc
sub
sub
aad
scas
adc
dec
or
in
and
dec
jnp
add
aad
in
test
pop
pop
jmp
lret
push
and
ret
rolb
mov
into
int3
cmp
repz
add
ljmp
xlat
aas
clc
jmp
and
loopne
test
push
push
ljmp
mov
nop
jnp
and
and
cmp
aad
fstl
cmpb
xor
sub
stos
or
neg
add
lcall
ja
ret
cld
or
lds
icebp
jo
mul
jmp
xchg
add
lea
orb
rclb
dec
jbe
int
pop
add
ds
add
sub
es
pop
push
lcall
mov
dec
jmp
xor
push
push
dec
mov
push
sbb
jmp
pop
adc
pop
lea
rolb
add
js
or
pushf
in
dec
out
into
cmp
int3
loop
aaa
enter
push
cmp
pop
or
xor
xor
into
jno
in
out
jmp
dec
push
cmp
push
or
and
cltd
or
inc
cwtl
or
dec
pop
in
ret
lcall
dec
outsb
fs
xor
shll
inc
mov
and
sahf
jl
add
add
add
sbb
pshufw
outsl
push
sbb
xchg
in
and
or
sub
sbb
loopne
adc
xchg
gs
jno
inc
adc
pop
push
inc
lcall
cld
jp
mov
push
push
ret
in
xorb
adc
popa
popf
push
mov
pop
call
and
test
inc
inc
adc
or
cmp
pop
daa
pop
lds
push
lods
repnz
fmuls
add
jp
cli
push
pusha
dec
jae
add
sub
aas
mov
arpl
shll
cmpsb
mov
roll
sbb
jbe
movsl
mov
lock
cld
lods
mov
adc
insl
or
les
ss
xchg
adc
sti
sub
mov
xchg
xor
or
ret
stc
enter
or
pusha
addr16
pop
pop
mov
sub
xor
rcrl
adcl
inc
jnp
stos
add
les
inc
rcrl
es
es
les
enter
ret
xlat
mov
nop
and
testl
jo
subl
mov
adc
or
lahf
shl
mov
inc
pop
pusha
xor
sub
and
jl
mov
mov
popa
pop
xrelease
add
pop
jmp
flds
movsl
jb
popw
adc
mov
cld
shl
jl
add
aas
sub
pop
xchg
pop
out
add
push
mov
daa
sbb
jns
out
jmp
lahf
jge
push
add
and
xchg
ss
push
orl
mov
leave
jne
sub
aaa
lcall
add
and
jb
scas
pusha
or
mov
out
xchg
xchg
leave
sbb
data16
dec
add
loopne
int
mov
xchg
mov
fnsave
add
sbb
push
xchg
es
mov
push
pop
dec
xor
jge
xchg
daa
pop
fmul
lahf
loopne
mov
jg
js
xor
mov
ljmp
ret
or
dec
mov
imul
lcall
int3
sub
dec
cld
add
add
xchg
jbe
adc
dec
or
leave
jnp
fsubr
push
mov
add
shrl
fs
pop
pushf
sbb
push
mov
fs
adc
or
in
bt
stos
sub
insl
push
imul
inc
adc
push
ds
add
add
leave
in
push
aad
insb
testl
lock
or
mov
xchg
push
addr16
sub
ljmp
nop
push
daa
push
cmc
roll
or
cs
add
scas
add
dec
add
mov
xchg
in
pushf
cmp
sbb
or
sbb
and
xor
cmp
inc
lds
mov
sub
and
sub
jmp
loope
dec
pop
dec
je
enter
and
lret
popf
push
mov
stc
dec
or
movaps
mov
xor
jo
or
mov
or
or
and
adc
loopne
pop
add
test
sti
sub
int
gs
leave
mov
add
mov
cmc
xchg
sub
add
shll
add
jbe
jno
jle
and
add
das
std
cmp
sbb
pusha
ljmp
cld
mov
xchg
mov
push
push
push
xor
mov
cmp
cmpsl
and
pusha
dec
popa
lea
and
dec
adc
outsb
test
nop
pop
mov
jne
dec
call
sti
push
add
fistl
xchg
mov
mov
dec
mov
fidivl
cs
dec
gs
jno
jmp
or
and
pop
xchg
push
popa
fimuls
out
movsl
cmp
mov
mov
shr
push
negb
cmp
jns
xor
test
out
pop
dec
mov
cltd
cld
and
or
bound
mov
sub
push
shrl
mov
add
cmp
mov
jp
lods
push
inc
lds
lods
mov
inc
or
stc
sbb
les
out
neg
and
jb
xchg
jecxz
or
cld
push
adc
dec
add
jmp
mov
jne
cli
jmp
repnz
cmp
out
pop
rcrl
loop
xor
mov
nop
cmp
dec
adc
jno
subl
pop
mov
pop
sbb
adc
or
inc
cwtl
cld
fwait
jmp
push
push
adc
lea
push
push
daa
sarb
es
add
cmovs
pop
ja
sub
adcb
sub
push
in
or
push
ret
mov
insb
and
mov
mov
push
cmpb
sub
stos
dec
xor
sub
pop
inc
repnz
shr
push
movsb
xlat
sub
push
jne
stc
stos
mov
sbb
lcall
push
test
xor
fmuls
orl
jl
popf
xchg
xchg
adc
xchg
repnz
dec
icebp
jne
xor
xchg
iret
ret
pop
sub
jns
ret
das
mov
xchg
and
cmp
in
add
xchg
aam
mov
mov
adc
pusha
push
add
icebp
jle
or
jmp
mov
iret
and
addb
push
shl
neg
idivl
out
fwait
js
dec
cli
and
add
fidivrs
fcoml
push
pop
mov
in
dec
adc
xchg
pop
movsb
jo
dec
je
mov
repz
push
fildl
xchg
sbb
jmp
mov
push
mov
cs
mov
and
add
cs
adcl
xor
insb
lock
insb
push
fdivrs
push
sub
push
and
cld
cmpsl
ds
or
cli
jne
dec
xchg
dec
sub
push
xchg
mov
cmp
aam
iret
lret
cmp
jmp
push
fs
xor
inc
movsb
push
add
fisttpl
pop
push
or
fcomi
out
loop
loope
pop
push
clc
and
pop
xor
adc
mov
and
mov
xchg
push
fwait
pop
sub
leave
sbbb
inc
adc
pop
mov
mov
add
mov
popf
add
and
sub
fldcw
in
or
dec
pop
outsl
mov
or
imul
dec
xor
inc
jle
and
roll
add
jmp
and
add
imul
dec
inc
out
std
and
cwtl
push
dec
xor
xor
hlt
movsb
dec
mov
xchg
push
adc
dec
xor
inc
pop
add
insl
nop
inc
popf
fisubl
or
jbe
mov
mov
inc
jg
xor
aam
frstor
cmp
add
js
scas
lret
mov
test
in
sbb
aas
mov
loopne
scas
cmpsl
rorl
push
adc
jno
in
lds
add
repz
movsl
in
icebp
cli
jbe
faddl
repnz
inc
daa
dec
call
sahf
outsb
push
pop
stos
loope
mov
das
call
sbb
addr16
sahf
fnstenv
fsubrs
or
test
int3
pop
pop
pusha
pushf
pop
sub
call
cmp
aas
mov
cltd
pop
movsb
inc
iret
xor
movlps
add
add
or
or
jne
cwtl
inc
xchg
lods
lds
pop
push
jb
in
repnz
shrl
push
inc
stos
into
dec
jae
sbb
xchg
mov
js
andb
cmp
add
out
pop
push
mov
or
ficomps
push
dec
lods
mov
jmp
adc
dec
inc
fs
dec
dec
rcrb
jp
cs
sub
sbb
mov
jge
cmpsb
adc
flds
ds
mov
loopne
adc
in
sub
test
sahf
or
jp
decb
push
icebp
fucomp
cmp
in
pusha
scas
sub
and
push
xchg
or
cli
out
or
push
adc
push
or
dec
imul
ds
or
add
pop
fsubs
mov
inc
xor
or
lcall
inc
and
mov
xor
aad
and
or
cmp
daa
cmpsl
adc
nop
stos
add
test
or
je
movsl
addl
scas
test
mov
repnz
xor
out
in
or
pop
push
xchg
ret
mov
sbb
and
jmp
sub
and
and
xor
pop
inc
pusha
jns
pusha
aaa
cmpsl
pop
insl
je
jmp
mov
repnz
or
push
sbb
push
mov
lds
xchg
jge
dec
jo
add
test
add
xor
push
mov
sbb
or
push
inc
mov
sub
out
xor
pop
outsb
add
pushf
xchg
mov
xor
adc
pop
popa
xor
adc
incl
clc
jmp
pushf
jg
and
lret
inc
adc
pop
lret
mov
or
or
pop
xchg
xchg
and
jle
push
mov
cltd
es
cmpsl
mov
cld
je
jmp
xlat
testb
inc
mov
shr
jmp
dec
mov
add
mov
out
pop
das
adc
xlat
add
and
pusha
cs
jbe
cmp
sub
jmp
pop
mov
fiaddl
push
jmp
push
fnsave
popf
pop
sub
imul
pop
push
test
cli
inc
or
dec
fisubrl
repnz
dec
iret
fldl
push
lods
add
outsb
pop
lods
cmp
ljmp
out
sbb
or
push
sahf
or
iret
sbb
shlb
out
lods
mov
push
loop
or
sbb
or
and
nop
mov
jns
loop
movsl
jb
mov
std
mov
cwtl
adc
pusha
push
push
dec
pop
cmpsb
add
shll
decb
sahf
add
aas
sub
stos
sbb
aad
data16
pop
and
repnz
mov
pusha
push
push
jmp
xchg
cmp
mov
lahf
icebp
call
lds
dec
xor
pop
int3
out
add
xchg
outsl
aaa
jle
mov
call
stos
stos
enter
jne
ficoms
fxch
add
jns
imul
mov
ljmp
xor
pop
jg
push
add
pop
mov
insl
sbb
fimuls
dec
push
jecxz
jle
push
packuswb
jmp
and
and
jecxz
mov
in
enter
vpmaxsw
pop
push
sti
data16
daa
push
cld
sub
insl
add
addr16
test
lret
call
popf
adcb
jmp
out
sbb
rcrl
xor
lahf
or
push
jmp
sub
fisubrs
adc
jb
pop
fmuls
addl
xor
ret
pusha
xor
or
sbb
or
ret
jo
cwtl
and
mov
and
mov
jno
or
cld
add
aaa
mov
xchg
push
jmp
out
add
ret
imul
clc
pop
scas
mov
pop
adc
not
fisttpll
addb
lahf
dec
lods
mov
dec
add
and
addr16
repz
mov
adc
outsb
adc
mov
inc
cs
mov
orb
xor
sbb
mov
popf
das
clc
lea
push
push
imul
cmp
sub
pop
inc
add
jno
cmpsb
jmp
clc
or
jae
mov
jns
pop
rcll
dec
mov
mov
xor
dec
mov
mov
mov
adc
orb
repz
add
imul
push
xchg
push
sub
ret
jno
call
sbb
xor
inc
cmp
mov
incl
stc
loop
dec
ds
jno
sub
mov
inc
scas
mov
fbstp
jmp
loope
loope
mov
nop
xchg
add
lods
iret
inc
or
pop
and
add
pusha
and
jne
pop
mov
insl
addr16
outsb
xchg
push
pop
pop
sbb
js
and
imul
and
cmpsb
pop
sub
das
ds
orb
push
sub
mov
fwait
adc
lea
test
inc
add
xor
sbb
dec
cmpsl
inc
inc
mov
loope
shrb
sub
sbb
ja
add
scas
js
jl
add
pushf
add
jmp
inc
test
lea
in
fs
xchg
dec
mov
cmp
lret
dec
jle
movsb
cmpsl
push
rcrl
enter
mov
addr16
add
test
cmpsl
adc
mov
mov
pause
pop
aam
aas
add
jp
push
pop
mov
iret
pop
movsb
push
imul
xchg
js
mov
aad
movsb
cmpl
les
movl
inc
pop
adc
lods
pop
or
aam
xchg
and
sub
add
in
pop
sbb
and
xchg
jge
pop
in
xchg
and
sbbl
fs
mov
xor
add
lods
iret
pop
gs
cmc
or
mov
xor
scas
or
jmp
push
adc
mov
in
test
pop
cmp
mov
outsl
and
jle
popf
enter
enter
add
and
fmuls
add
sbbl
sub
xlat
or
add
pop
cld
xor
or
aad
jns
xchg
inc
xchg
shlb
sub
jb
inc
mov
jae
add
mov
pop
out
mov
mov
cmp
add
cmp
loope
nop
loope
pop
outsb
mov
adc
push
add
shll
sub
in
mov
cld
pop
pop
add
or
out
leave
jle
jae
xor
jo
xchg
sub
xchg
in
pop
add
and
mov
jbe
sub
imul
xchg
stos
sub
sub
shll
popa
push
dec
pop
push
in
outsl
dec
shlb
inc
aam
mov
adc
loopne
cmp
pop
push
cmp
insl
push
pop
jo
mov
push
dec
test
or
dec
mov
outsb
xor
lods
adc
pop
add
dec
mov
je
cld
push
add
cmp
push
and
in
cs
push
jle
mov
jo
jecxz
fstp
pop
jg
inc
jmp
push
pop
cmp
es
inc
push
adc
pop
jmp
lcall
xor
sub
idivb
mov
xchg
test
daa
xor
xor
and
pop
push
push
enter
and
das
jb
jmpw
push
push
das
jmp
dec
cwtl
push
mov
jge
push
jae
sub
test
cld
adc
mov
js
and
negb
mov
ret
xor
ffree
fs
jl
xchg
xchg
neg
push
add
stos
lds
jns
mov
pop
test
xor
dec
xor
or
sub
pushf
sub
hlt
stc
pop
pop
mov
jne
inc
jno
inc
dec
and
push
sti
cwtl
loopne
mov
daa
fsub
lods
test
xlat
add
scas
or
std
dec
imul
jbe
movsb
cwtl
dec
or
add
mov
jg
inc
mov
push
pop
pop
mov
sub
scas
bound
rcl
cmp
jmp
je
jmp
stc
cmp
adc
scas
xchg
jl
dec
push
jle
inc
or
adc
shr
push
or
or
dec
mov
scas
shrb
pop
ss
clc
xchg
mov
mov
js
pop
jno
push
sbb
les
add
je
jns
lret
sub
sbb
pop
push
mov
mov
adc
pop
clc
adc
jne
leave
xor
inc
xchg
pop
loope
outsl
sub
push
adc
int
adc
add
cmp
std
sbb
out
add
and
divb
es
ds
sbb
lea
mov
pop
roll
data16
jg
andl
adc
sub
add
xor
mov
sbb
push
mov
cmp
add
add
xchg
in
inc
push
add
in
idivl
cmp
pop
push
and
in
loop
xchg
push
in
hlt
dec
dec
pop
nop
sub
xchg
nop
aas
add
inc
loope
xchg
xor
fiadds
mov
inc
cs
jbe
inc
mov
push
inc
test
xor
test
jns
loop
or
insl
mov
ficoms
cmpsb
sbbl
pop
add
push
in
and
filds
dec
scas
es
push
adc
out
pop
dec
nop
and
mov
sub
dec
push
stos
and
test
push
add
dec
and
xchg
jl
testl
fidivs
mov
arpl
sub
add
jp
leave
fst
js
inc
shrb
lds
sub
xlat
adc
outsb
es
in
daa
pop
sub
jnp
iret
and
flds
sbb
and
inc
jle
enter
xchg
cmpb
pop
cmpsb
push
mov
push
xor
push
jmp
pusha
cmp
movsl
cld
jle
jecxz
std
dec
punpckhdq
nop
sub
mov
inc
sbb
rclb
add
push
xchg
and
gs
movsb
xchg
or
add
testb
lcall
std
add
jmp
push
mov
mov
iret
xor
roll
popa
lods
sarb
stos
cmpb
popf
bound
mov
add
mov
outsl
add
push
incb
mov
pop
dec
adc
xchg
push
ja
xchg
pushf
sbb
or
fldl
shr
pushf
jmp
add
jecxz
dec
sub
xor
leave
rolb
cli
insb
cwtl
ja
adc
and
jl
stos
push
mov
ljmp
fcoms
adcb
inc
pusha
bound
xor
pop
cmp
add
cmp
ror
push
xchg
dec
pop
mov
sbb
adc
insl
pop
add
pushw
xchg
nop
jo
add
push
jo
cmp
sub
lock
pop
cmpsb
lret
mov
push
outsb
cmp
or
aad
and
push
xor
jecxz
sub
aad
rorl
pop
in
sbbl
push
cli
mov
negl
cmp
xor
movups
or
mov
rorl
pop
cmpsl
inc
je
mov
int3
lahf
dec
aaa
cwtl
dec
pop
stos
jno
in
ss
clc
test
mov
jmp
add
js
sbb
push
das
sub
push
pop
rclb
jns
insl
cwtl
sbb
push
xor
aam
push
jnp
push
sub
push
fs
jg
test
ror
and
jbe
or
sbb
inc
mov
sahf
rcrl
inc
popl
mov
pop
or
jo
jae
loope
out
jnp
ret
dec
adc
push
fidivrs
or
lods
jno
and
fcompl
xchg
and
fistpl
mov
ret
js
stc
adc
jmp
dec
xor
sti
inc
sbb
mov
cs
arpl
imull
sub
add
ljmp
shld
test
inc
lcall
add
sbb
cmc
xchg
or
or
push
jbe
loop
push
out
in
pop
mov
fstpt
or
jge
add
xlat
push
icebp
push
gs
sub
das
and
inc
push
cs
clc
mov
jmp
sbb
and
cmpsl
xor
jmp
mov
xor
mov
push
push
mov
push
es
push
and
gs
inc
dec
push
mov
lret
insl
hlt
fcmovne
inc
rcrl
pop
push
das
pop
inc
mov
jo
mov
cmpsb
aam
adc
dec
push
sub
addl
dec
mov
shll
push
add
in
push
in
add
insb
and
mov
fistps
lods
xchg
push
push
mov
gs
xchg
xor
jecxz
fadd
push
inc
mov
push
ret
mov
shlb
mov
aaa
sbb
pop
test
pop
xchg
xchg
push
mov
or
cli
xor
add
add
imul
nop
mov
inc
jo
dec
xchg
inc
mov
sub
xchg
jbe
pusha
ja
sub
push
leave
js
adc
sti
inc
sub
mov
cmp
mov
sbb
and
fstpl
in
and
add
jmp
shll
mov
rorl
push
pop
xchg
pop
pop
inc
dec
nop
cmc
rorl
sbb
repnz
mov
popa
xchg
or
pop
inc
cld
dec
push
xchg
and
jmp
and
pop
push
nop
outsb
or
or
cmp
cmp
mov
lcall
mov
xchg
xchg
stc
pushf
loop
xchg
js
xchg
push
mov
cmp
mov
push
push
enter
lahf
jmp
andb
iret
dec
mov
jae
jecxz
ror
inc
rorb
xchg
cmp
inc
pop
scas
sti
pop
pop
inc
push
mov
pushf
sbb
ror
mov
not
addb
and
in
in
in
jns
pop
lds
or
inc
or
xchg
adcb
push
adc
xchg
adc
add
cli
pop
sub
mov
xor
popa
push
add
or
cmp
cmp
push
imul
or
push
dec
sub
and
sbb
pop
jmp
mov
jp
or
jae
sbb
sub
fisubs
mov
ljmp
add
or
dec
sub
xor
push
inc
adc
div
sub
sbb
mov
xchg
mov
add
dec
push
push
add
jb
das
cmp
inc
jle
push
or
les
lret
inc
and
mov
dec
inc
inc
mov
scas
adcb
lods
fsubrs
out
cmp
roll
add
gs
stc
xor
xchg
repz
leave
fldenv
or
jg
push
mov
dec
jo
push
or
repnz
mov
push
sahf
adc
cmp
imul
xchg
fs
andb
icebp
pcmpgtd
jo
fisubs
jbe
and
stc
inc
movsl
mov
dec
add
mov
mov
push
or
push
ss
pop
mov
shrb
xor
cmp
sub
scas
ret
fs
lret
push
jbe
lds
hlt
mov
pushl
out
pop
sub
cmpb
push
cmp
mov
or
xchg
in
mov
idivb
lock
sbb
sub
gs
or
push
and
push
fstps
das
dec
add
dec
andb
cmp
xchg
cli
push
jno
adc
pop
inc
jge
sarb
cs
or
push
mov
cmp
push
push
jmp
push
and
adc
bound
cld
add
or
pop
add
and
pop
mov
dec
jmp
jne
push
mov
or
incb
xchg
and
or
jo
push
rcrl
sbb
or
outsl
cmpsb
push
jmp
int3
and
rclb
xchg
adc
ret
lods
iret
mov
call
cmp
lock
jmp
xorl
or
lret
pop
xchg
std
dec
mov
jbe
jmp
dec
jle
add
sub
stos
fstp
or
or
sub
pop
jmp
fwait
and
hlt
arpl
les
dec
mov
mov
out
pop
inc
pop
fucomp
movhps
push
aaa
std
orb
add
pop
push
mov
mov
jbe
pop
mov
and
icebp
jne
xchg
in
and
lahf
jmp
fimull
push
outsb
nop
aas
dec
sub
sub
dec
fdivl
pushf
int3
movsl
test
enter
enter
aaa
cmc
pop
pusha
out
mov
and
adc
cli
cs
adc
sbb
pop
sub
jns
hlt
or
dec
popa
inc
mov
mov
sbb
subb
add
roll
popf
pop
xor
mov
adc
mov
push
aad
pop
adc
pusha
pop
inc
mov
push
or
loop
ficoml
cmp
dec
mov
sub
jmp
mov
cmp
sbb
lret
in
mov
negl
push
and
xchg
mov
icebp
je
jmp
add
inc
call
lock
mov
dec
aad
imul
jmp
add
lret
xchg
push
arpl
jmp
mov
push
sub
fcmovne
rcrl
mov
mov
cmp
lea
ljmp
insl
xchg
pop
in
loope
in
or
push
pushf
cmp
sub
push
mov
negb
sbb
mulb
lods
jl
and
mov
dec
xchg
dec
mov
add
mov
xor
or
lods
jle
fmull
stc
das
loopne
lods
sub
and
and
mov
jg
pop
pushf
inc
shll
dec
jmp
and
imul
push
adc
pushf
inc
imul
dec
add
xor
mov
add
xor
js
test
adc
gs
adcb
dec
fs
inc
sub
sarb
adc
add
pop
lods
jle
jmp
add
shl
ret
jl
adc
mov
sbb
xor
add
subl
inc
jmp
mov
cwtl
cmc
jmp
or
sub
push
or
add
sbb
cmp
aad
add
stos
mov
aas
mov
sarb
lea
push
jp
sub
sub
mov
addr16
jmp
sbb
inc
pop
or
add
roll
or
push
outsl
cmp
repnz
add
add
clc
cmpb
adcb
test
ret
jmp
and
push
sbb
push
add
stos
pop
cmpsb
lret
jge
add
xchg
sbb
sub
xorb
mov
pop
or
push
pop
loop
cmp
test
or
xchg
lcall
xlat
dec
mov
push
pop
pop
xchg
mov
cmp
aaa
push
nop
sbb
push
push
add
mov
inc
jmp
fldl
pop
mov
jp
add
cmpsl
or
mov
xor
xlat
push
dec
adc
call
xor
test
mov
insl
addl
pop
push
adcb
xchg
mov
mov
and
jns
mov
inc
dec
pop
pop
aad
shlb
push
adc
xchg
clc
push
mov
xor
mov
mov
add
sbb
test
sbb
mov
not
and
pop
and
js
iret
js
fisubrs
divl
clc
xchg
sub
ds
orb
pop
push
aas
push
test
mov
sub
loop
pop
std
inc
jbe
in
ret
cmp
roll
dec
inc
and
into
int3
pop
adc
dec
pop
xchg
pop
mov
xor
iret
or
push
push
and
dec
push
es
inc
add
xchg
into
sub
ret
mov
jns
mov
mov
ret
cli
insl
repnz
mov
lock
inc
lahf
icebp
xchg
dec
dec
adc
or
sub
shrb
in
adc
loope
stos
inc
fwait
pop
pop
mull
push
pop
inc
push
xchg
push
sub
add
lea
pop
add
mov
jecxz
outsb
cmp
loopne
push
xchg
add
or
imul
jne
sbb
cwtl
cmp
push
test
adc
cmpsl
xchg
or
cmpsl
addl
adc
stos
out
ds
cli
lea
lods
and
lods
push
mov
fs
js
push
in
mov
mov
pop
popa
and
sub
cmp
insb
push
add
inc
sub
jns
outsl
pop
into
mov
push
sbb
push
sub
push
adc
add
mov
lock
xor
mov
mov
stc
fbld
xlat
sbb
inc
aas
lds
sbb
mov
ds
and
lods
inc
pusha
rolb
inc
cltd
push
in
push
or
sbb
in
sub
pop
pop
and
fnstcw
dec
cmp
push
and
out
mov
sub
pop
fsub
inc
jb
hlt
shlb
in
sbb
pop
jnp
adc
sub
inc
pop
inc
push
jbe
sub
fisttpl
mov
mov
pop
decl
add
adc
pusha
pop
add
jmp
fwait
mov
mov
dec
enter
push
jmp
add
repnz
mov
add
mov
and
clc
pushf
and
dec
pop
mov
shlb
aad
lods
push
into
out
ljmp
repz
out
inc
sub
js
and
jmp
add
ja
imul
push
bound
fisttps
or
test
addr16
push
shll
jo
and
adc
and
mov
popf
mov
push
hlt
adc
mov
and
inc
not
sti
and
stos
push
pop
pop
es
add
inc
inc
dec
ja
mov
scas
mov
cmpsl
sbb
rcll
dec
mov
popa
push
add
in
mov
rorl
in
adc
daa
add
dec
andb
aad
inc
daa
jae
jnp
rol
dec
lods
lret
dec
ss
or
dec
push
arpl
pop
mov
mov
mov
aad
scas
mov
test
scas
mov
adc
pop
mov
rolb
xchg
jb
test
or
jle
dec
cmpb
or
jns
sub
clc
mov
mov
clc
mov
std
clc
addb
pop
clc
sbb
stos
lods
pushf
adcl
pop
pop
mov
arpl
dec
scas
cmp
mov
pusha
xor
or
test
rcrb
push
jns
push
adc
sahf
das
mov
dec
cs
jmp
ss
jl
cmp
inc
add
roll
cmp
enter
fildll
mov
push
jmp
inc
or
or
dec
push
adc
js
pop
xor
loop
fcmovb
outsb
mov
add
push
xor
adc
jg
dec
add
pop
push
push
iret
push
and
ds
pop
popf
add
js
ljmp
mov
lock
dec
rolb
mov
add
outsb
add
sub
xchg
data16
mov
or
jae
cmp
lret
je
imul
adc
stos
bound
scas
push
push
jno
mov
jecxz
rolb
jecxz
and
stos
mov
mov
jle
jne
jmp
add
rorl
xchg
stos
push
cltd
loopne,pn
xorb
inc
cld
pop
mov
loope
stc
pop
xrelease
lcall
cmpsb
decb
movb
imul
or
add
sub
je
inc
adc
loope
sbb
mov
hlt
sbb
mov
lds
pop
xchg
orb
mov
add
pushf
pop
cmp
repnz
pop
inc
xorl
or
imul
and
add
gs
and
shl
movsl
stos
daa
inc
xor
xchg
pop
jge
ss
adc
xchg
add
repz
aad
xchg
adc
pop
sti
xor
jp
xchg
orb
add
or
daa
inc
inc
push
mov
adc
push
push
out
shlb
or
inc
aad
cli
xchg
cmp
or
adc
mov
inc
dec
mov
std
jmp
sbb
or
mov
popa
adc
ss
xor
pop
ret
ja
adc
jbe
mov
gs
push
fsubl
imul
pop
and
xchg
in
dec
and
sti
pop
push
inc
mov
mov
jmp
insb
daa
hlt
add
or
jno
mov
movsl
stc
hlt
bound
mov
out
and
sub
fldl
into
pop
xor
mov
pushf
ret
jmp
mov
outsl
push
sahf
push
sahf
in
nop
fs
and
test
inc
mov
and
sbb
aas
mov
movsl
in
jg
mov
rcll
dec
fs
in
aaa
lret
cmpsb
movsb
or
das
repnz
add
xor
mov
test
movsl
xchg
or
push
pop
mov
pop
xchg
cli
pop
mov
sbb
fidivs
inc
loop
dec
sbb
pop
or
aas
cltd
mov
sub
std
adc
add
dec
push
jnp
mov
mov
mov
sub
add
imul
lods
inc
icebp
aad
shl
add
in
xchg
dec
addb
dec
pop
icebp
int3
aas
mov
int3
iret
jmp
scas
mov
pop
sbb
pop
sarl
add
test
sbb
fs
flds
inc
xor
xchg
sub
inc
lods
cmp
adc
sub
clc
jecxz
je
pop
or
and
push
or
scas
push
sub
dec
das
add
aas
adc
das
xchg
scas
sbb
or
call
and
and
push
xlat
add
ljmp
sub
mov
mov
stos
dec
push
xchg
sub
cmp
push
sub
ja
add
adc
dec
repz
jns
sbb
ret
lcall
sbb
shr
scas
popa
cmpsb
in
test
into
sub
test
loopne
jmp
lret
cmp
fimull
out
sbb
addr16
dec
sub
hlt
sbb
or
or
fisttps
add
je
or
jnp
lock
imul
xchg
sub
push
push
or
test
jp
adc
pop
push
pop
pop
mov
shll
pop
or
pop
xchg
bound
adc
adcb
jo
push
xor
subb
dec
pop
mov
cmpsl
mov
lea
test
pusha
imul
push
lock
pop
repz
add
sbb
mov
push
adc
push
dec
xor
jmp
pushf
mov
mov
push
stos
inc
xor
mov
mov
add
xorl
test
add
rcll
imul
sbb
cmp
ret
dec
jl
inc
cli
in
or
movsl
fists
mov
popa
aaa
lahf
inc
cmp
push
xchg
scas
jns
outsb
lret
popf
dec
add
jmp
mov
cwtl
sti
sbb
fsub
push
mov
iret
jmp
out
je
shrb
mov
into
cmp
enter
push
mov
ss
mov
mov
add
test
mov
les
movsb
imul
push
sub
out
mov
or
xor
lret
sub
outsl
in
add
add
jp
vpshufhw
lahf
inc
out
mov
jnp
push
dec
lahf
in
insl
mov
out
xchg
cltd
lds
and
fcomp
sbbb
jb
dec
pop
in
aam
stos
addl
dec
daa
pop
push
cld
xor
sub
jmp
jp
repnz
ljmp
in
pop
or
push
mov
fmul
ljmp
call
xor
aam
and
js
loopne
inc
add
out
or
push
mov
and
call
aaa
outsb
jecxz
or
cs
cs
add
sbb
jb
jmp
ss
add
test
cmp
or
add
xchg
test
loope
ss
into
pop
or
lock
pop
mov
pop
cmp
push
cmp
push
aad
mov
mov
pop
jmp
or
cmp
pop
insb
imul
loope
jmp
aaa
subl
pop
out
pop
push
dec
add
add
subl
mov
bound
pop
test
orl
sub
repnz
pop
daa
push
pop
mov
push
shll
ret
movsb
or
std
push
push
shl
dec
hlt
inc
push
iret
nop
sbb
xchg
or
les
je
jecxz
out
mov
pop
popa
pop
jnp
pop
lret
xchg
and
iret
mov
into
sar
arpl
outsl
jge
mov
pop
push
roll
into
sub
pop
inc
ror
imulb
je
add
filds
mov
push
repnz
imul
into
pop
and
neg
xorb
imul
decl
sub
jg
inc
pop
sbb
into
or
daa
jl
mov
into
pop
xchg
add
in
push
cmp
cmp
xchg
scas
push
push
mov
std
sahf
jae
jmp
cmp
les
ljmp
cmc
mov
push
push
push
pop
xor
comiss
fdivrl
add
add
pop
add
mov
or
subl
daa
xor
mov
push
out
push
arpl
cs
fwait
cwtl
test
stc
imul
ret
ljmp
mov
mov
test
cmp
sub
fldt
add
jp
es
sti
mov
add
popf
arpl
mov
mov
xchg
add
or
pop
addb
or
and
jae
insb
ljmp
jg
test
arpl
mov
pop
adc
jl
pop
or
loope
into
dec
cld
xchg
push
push
sarl
std
dec
hlt
ffreep
pop
mov
or
out
outsb
das
and
mov
sub
and
dec
xchg
push
orl
popa
xor
fsts
cs
stos
dec
movsb
cmp
lock
push
xchg
addl
aas
mov
out
andl
mov
add
mov
ss
jp
mov
jae
repz
popa
repz
add
mov
nop
xor
mov
cmpsb
push
xchg
pop
mov
and
aas
repz
xchg
lods
mov
jb
and
mov
jecxz
pop
in
shr
dec
aad
nop
gs
push
mov
adc
add
clc
mov
add
mov
xchg
adcb
test
dec
push
jmp
xor
dec
mov
mov
lret
std
or
cmp
int3
fdivp
pop
xor
sbb
pop
dec
outsb
dec
add
enter
push
mov
cmp
aaa
pop
push
hlt
inc
ja
and
stc
dec
inc
std
push
push
push
in
push
or
cmp
mov
mov
orb
lods
inc
rclb
pop
mov
push
fnstsw
cmp
cmp
sbb
sarb
leave
addr16
jmp
push
pop
pop
notl
mov
pop
inc
out
push
mov
pop
mov
dec
cltd
add
arpl
int3
pop
outsl
and
mov
lods
xchg
std
movsl
add
aas
inc
pop
sbb
xorb
jg
cmp
stc
add
add
and
imul
pop
inc
jmp
mov
pop
inc
adc
xor
pop
push
mov
int3
inc
jno
mov
xor
jnp
repz
mov
lcall
cli
outsb
add
xor
loop
sarl
mov
cmp
ljmp
mov
pusha
cld
lret
adc
jmp
adc
cmp
leave
or
loope
pop
mov
or
imul
repz
cs
mov
inc
or
vpmovmskb
daa
or
cmp
mov
or
mov
push
jns
lahf
arpl
dec
push
push
ret
mov
inc
mov
xchg
xchg
inc
mov
adc
outsl
out
imull
ret
xchg
in
ds
and
int3
mov
add
lahf
pop
add
and
push
push
repnz
sarl
xchg
imul
xchg
push
mov
jge,pn
ljmp
add
add
out
or
out
insb
outsl
aas
pop
push
jle
shlb
mov
sub
mov
jmp
cli
lods
xchg
addb
notl
shr
mov
repz
pop
add
roll
pop
imul
outsl
in
cmp
inc
repz
inc
mov
dec
js
sub
lcall
loop
ret
mov
push
icebp
aam
in
inc
sbbb
fimull
push
lcall
cmpb
sbb
or
icebp
push
outsb
idivb
insb
sbb
pop
sub
and
pop
sub
roll
add
fsubr
stos
jb
mov
or
cmp
ja
sub
adc
das
and
fdivrl
push
mov
inc
add
outsb
bound
mov
mov
add
out
adc
mov
gs
push
xor
add
pop
xor
or
xchg
outsb
pop
xlat
pushf
or
jbe
dec
in
cmp
push
cld
push
jno
fcomi
jecxz
test
scas
sub
sub
pop
call
cli
jmp
mov
pop
clc
arpl
push
jge
mov
sub
mov
lret
and
je
jge
add
addb
loope
cmp
adc
fnstcw
pop
xor
sub
into
imul
add
mov
mov
lds
push
xchg
adc
clc
jne
dec
add
push
pop
push
arpl
inc
pop
inc
shll
add
stos
pop
pop
lods
aas
ret
jno
notl
insb
int3
mov
jle
xchg
and
rcl
push
xor
lret
dec
cli
push
je
popf
inc
in
add
xor
pop
pushl
ljmp
pop
xor
add
jmp
es
adc
js
sbb
mov
xchg
sbb
sbbl
int
dec
in
ret
bound
jp
movl
and
xchg
and
push
push
mov
mov
and
mov
dec
pop
jae
push
cli
loope
das
cld
push
adc
stc
sbb
push
sub
sub
lahf
lods
ret
mov
sbb
xchg
outsb
mov
cmp
jle
adc
add
rorb
repz
xor
sub
mov
pop
jg
xchg
xchg
jl
loop
imul
push
nop
in
clc
pop
orb
in
cmp
idivb
add
adc
mov
je
mov
pop
sub
mov
or
in
pop
lahf
xchg
push
pop
pop
inc
mov
pop
and
sti
ret
filds
jp
add
ss
and
pop
mov
pop
sub
push
push
adc
shl
inc
add
movb
nop
push
dec
or
dec
mov
pop
xchg
shll
lods
enter
subl
mov
stos
test
pop
and
mov
sarl
fs
sub
fldenv
cmp
jmp
push
mov
dec
xor
xor
sub
mov
jmp
push
cwtl
addr16
push
mov
sbbb
adc
ret
xlat
popa
stos
lret
lret
pop
or
sbbl
subl
adc
cmc
lock
mov
xor
jbe
sub
jmp
pushf
jo
cmp
andb
push
push
lret
push
mov
scas
push
push
cmp
and
and
add
pop
ljmp
add
pop
push
test
movsb
add
lock
leave
icebp
xlat
ror
push
inc
das
fs
xchg
fdivs
jnp
leave
and
sub
in
cmp
outsl
daa
test
dec
or
ljmp
xchg
dec
mov
icebp
sti
loopne
stc
sahf
push
inc
push
mov
push
dec
pop
adc
shl
add
and
sub
aam
or
mov
xchg
es
and
lds
fildl
or
ljmp
xor
gs
loopne
mov
ret
es
out
jl
push
pusha
mov
push
add
dec
pusha
xor
or
cmp
ja
lahf
pusha
iret
jns
cmpsb
mov
push
repz
adc
sbb
sbb
jne
push
mov
mov
add
adc
fiadds
je
inc
and
lea
jecxz
pop
test
lea
out
jmp
cs
sub
xchg
adc
cmc
subl
and
rcr
and
nop
ljmp
loope
loop
xchg
mov
jo
xchg
pop
cltd
pop
add
ljmp
adc
lods
add
out
push
jmp
cmpsb
in
enter
add
or
push
les
xchg
icebp
xor
mov
pop
or
jp
fsubr
mov
xchg
mov
fistps
push
pusha
insb
or
andl
fdivrs
mov
push
testb
jge
push
shr
sub
cld
stos
inc
dec
push
and
pop
inc
js
lcall
mov
das
nop
dec
divb
pop
add
cmovno
xor
sbb
leave
xchg
ds
popa
dec
sti
fcompl
mov
mov
adcb
xor
push
push
push
xorb
inc
xlat
cmc
xor
lock
loop
int3
xor
mov
cld
out
add
ret
or
jle
subl
loope
and
dec
shl
dec
jns
jae
or
loopne
xor
mov
jg
xchg
mov
lcall
test
mov
pusha
jmp
push
xor
xchg
rol
enter
push
xchg
xor
mov
dec
subb
sub
das
and
xchg
je
xrelease
out
mov
shlb
xchg
sub
cmp
xor
cld
jmp
mov
push
mov
insl
push
cs
bound
and
inc
mov
loopne
dec
scas
xchg
lock
mov
add
mov
xchg
sub
or
jge
add
pop
add
inc
push
push
add
mov
and
cmc
mov
fmull
xor
push
jp
shr
rclb
test
inc
dec
cli
aaa
cmp
pusha
pop
mov
dec
mov
pop
mov
mov
loope
divb
pop
mov
jp
fistpll
fwait
and
jmp
stos
pop
les
cwtl
mov
rcrb
mov
mov
pop
xchg
push
xchg
js
inc
mov
xlat
stc
push
cmp
or
jb
xchg
push
xor
pop
or
into
sub
lret
or
xchg
jne
test
jmp
leave
imul
mov
cmp
loop
filds
xor
aad
incb
shrl
mov
or
sub
fstpt
cld
xor
scas
and
inc
out
jns
mov
cld
fcomps
push
lret
shrb
shlb
outsl
xchg
jns
add
sub
fwait
loope
hlt
dec
loop
cmp
pop
mov
les
cs
push
add
jns
push
gs
add
sbb
adc
leave
pushw
sti
pop
scas
sub
add
push
sub
add
mov
shl
add
add
xor
sbbb
lea
xlat
test
ffree
pop
xor
fsubs
in
xchg
cld
push
jmp
pop
and
enter
mov
nop
push
je
add
sbb
ret
inc
sti
popf
mov
inc
mov
jae
pusha
jns
test
cld
aas
nop
dec
pop
pushf
or
push
cli
xor
fdivr
int3
leave
sub
repnz
bound
adc
push
jecxz
rcrl
sbb
fdivs
push
das
pop
add
out
xchg
dec
mov
xor
add
add
pop
fstpt
sbb
xor
arpl
inc
xchg
fldl
insb
roll
rcl
loope
rcrl
add
adc
stos
cmp
jmp
push
aam
push
mov
ret
das
or
fcom
rorl
add
push
sahf
pusha
mov
fcomps
xor
negb
cmpb
popa
dec
and
sub
add
add
or
mov
jo
mov
lds
fs
mov
dec
inc
fdivr
or
mov
outsl
inc
cli
add
sub
or
repnz
sub
in
add
and
int
mov
dec
jo
ljmp
xor
mov
int3
dec
in
cmp
ret
pop
nop
jecxz
jmp
test
test
and
or
sub
in
jmp
in
mov
cmp
sub
sbb
cmovo
loopne
ljmp
push
push
nop
jo
push
inc
push
add
mov
leave
jbe
xchg
jns
mov
jb
or
jnp
enter
dec
fbld
nop
or
xchg
cmp
cmp
cmc
xchg
jbe
fidivrl
adc
sub
mov
insl
cld
sti
add
stos
or
test
mov
sbb
lcall
jle
push
add
pop
or
imul
mov
and
or
lret
mov
aam
cli
into
pop
push
std
adc
adc
loop
movsb
aaa
ret
xchg
sub
stc
push
xchg
popa
or
and
mov
jns
mov
xor
dec
mov
repnz
mov
jb
in
mov
xlat
add
inc
cmp
cmp
push
adc
out
mov
dec
bound
cmp
nop
subb
sti
push
or
add
mov
pusha
ja
dec
sub
adc
or
repnz
mov
das
add
popf
jbe
xchg
mov
das
jp
mov
pop
sub
pop
pop
mov
sub
fldl
sbb
stc
jl
push
pop
loopne
xor
xchg
dec
push
loop
out
cwtl
lret
xor
or
arpl
subb
dec
mov
or
dec
xchg
test
cmp
ret
lods
adc
es
jmp
es
xstore-rng
cmpsl
add
or
popf
mov
sbb
fimull
mov
daa
clc
and
mov
add
pop
or
push
sbbl
xchg
pop
jmp
xor
inc
rorb
cmc
push
in
sbb
push
jo
push
pusha
cwtl
adc
out
jnp
sub
and
ljmp
and
sub
loope
clc
cmp
push
shrb
lock
mov
sbb
div
and
push
sub
mov
sub
inc
inc
ja
mov
das
adc
into
scas
dec
xor
lea
and
repnz
and
pop
mov
inc
outsb
shr
add
cmp
popf
das
xchg
mov
add
xchg
pop
sahf
sub
pop
sub
mov
mov
in
sub
lock
jo
fiaddl
xor
push
push
movb
bound
xchg
icebp
adc
imul
adc
negl
push
mov
inc
jb
xchg
popa
pusha
sub
jmp
out
pop
xor
in
js
pushf
add
push
or
out
rorl
popa
pop
call
sub
test
inc
mov
dec
je
je
jmp
jo
mov
vpcmpgtb
aam
adc
test
sbb
test
sbb
inc
push
stos
int
cs
xor
adc
into
or
aas
loope
mov
loope
test
inc
xchg
mov
sub
pop
push
addb
push
jns
mov
jno
dec
xlat
test
sbb
mov
xchg
sbbb
lds
sub
fildll
push
pop
shr
fwait
push
call
push
sub
icebp
mov
push
push
shrb
or
jl
pop
add
sub
and
sub
cmpsl
js
jne
and
pop
push
les
and
jge
push
dec
and
xor
lods
adc
std
jmp
lret
inc
add
pop
inc
sub
dec
dec
mov
adc
adc
or
enter
inc
pop
cmpb
add
ss
mov
lahf
stc
xlat
mov
addr16
sahf
imul
stc
push
test
or
sbb
mov
repnz
or
push
sub
mov
dec
inc
std
pop
mov
sahf
into
jmp
xor
pop
mov
pop
pop
rorb
ds
arpl
js
xor
addr16
and
mov
push
push
cmp
pop
push
rclb
addb
and
push
flds
jmp
mov
adc
out
or
imul
push
pop
and
jmp
pushf
jle
enter
sbb
in
mov
sub
ret
push
or
inc
pop
test
xchg
pop
add
or
and
int
xchg
or
lds
mov
sub
pop
sub
ret
mov
inc
mov
jmp
jge
add
or
adc
mulb
imul
mov
call
jmp
cld
pop
pusha
and
sub
or
xor
sahf
sbb
imul
and
mov
sbb
dec
pop
push
add
xlat
xchg
add
popf
mov
cmp
and
out
add
lods
inc
repz
lods
mov
or
sub
sbb
sub
out
shlb
push
aas
packssdw
decb
outsb
scas
mov
inc
cmp
stos
rclb
jle
dec
inc
xchg
or
stc
pushl
cmpsl
shl
push
add
dec
xchg
add
and
in
fisubl
inc
push
jmp
or
add
adc
popf
sub
das
lahf
and
cld
addr16
sub
push
mov
lods
dec
jbe
xlat
popf
adc
imul
lea
inc
sbb
fs
cmc
cmp
mov
jmp
popf
pop
je
pop
xor
pop
mov
hlt
sarb
inc
sar
dec
pop
addl
cmpb
repnz
out
fimull
ror
push
pop
lret
in
xchg
bnd
adcb
push
addr16
or
xchg
aaa
addb
jmp
push
cmp
mov
xchg
js
loop
aad
gs
pop
cs
insb
in
and
mov
mov
push
push
sbb
add
add
jp
xchg
in
adcl
repnz
iret
xor
or
imul
pop
rcrb
xor
sbb
clc
push
inc
scas
push
push
mull
mov
sbb
fcoms
push
pop
neg
lods
addl
pusha
jmp
and
je
rolb
mov
stos
bound
mov
into
jo
pop
shlb
sub
jmp
xchg
sarl
aad
cbtw
xchg
push
push
fs
mov
or
mov
rorl
in
adc
cwtl
adc
push
jbe
adc
mov
imul
clc
cmp
orb
imul
lea
inc
pop
mov
sub
pusha
daa
daa
push
xorb
out
addr16
lahf
ficoms
adc
rolb
xlat
ss
or
arpl
mov
cs
call
scas
jb
icebp
cmp
test
sahf
daa
adc
mov
es
mov
pop
incb
loop
pop
and
stos
add
fcoml
sti
jmp
xor
pusha
add
adc
lret
loop
repnz
cwtl
xor
adcb
gs
jl
mov
add
adc
mov
push
es
shl
out
add
push
test
or
and
add
mov
xor
cmc
ljmpw
loope
push
mov
aaa
dec
repnz
out
sti
mov
leave
jae
pop
rcll
sub
cmc
lahf
cmp
je
cltd
lret
repz
inc
push
out
addr16
scas
mov
out
lret
pop
push
ja
add
jno
mov
movsb
out
test
scas
xchg
outsl
pop
aad
ljmp
cmp
inc
and
popf
xchg
cli
push
mov
adc
addr16
sti
add
fldl
scas
fistpll
cmp
pop
jmp
out
int
in
ret
xchg
jle
pop
inc
pop
mov
ret
das
js
or
rolb
stc
pop
bnd
push
push
jmp
mov
ja
cli
pop
lcall
and
add
movsb
rcl
jl
dec
dec
or
add
cmp
push
pusha
push
les
dec
cli
ja
xchg
add
sub
mov
xchg
jno
adc
in
and
mul
pop
aas
mov
pop
inc
pop
std
inc
xchg
dec
sub
push
jno
push
adc
and
mov
mov
dec
scas
push
or
lea
jo
pop
rorb
mov
pop
jo
nop
jae
lahf
mov
fildl
push
mov
jle
gs
cmp
neg
push
popa
fwait
sub
pop
cmp
nop
xor
jmp
xchg
jnp
push
lods
test
sbb
test
outsb
and
mov
pop
push
pop
neg
movlps
int
mov
jno
ja
stos
scas
inc
outsl
jl
sub
lods
sahf
ret
inc
jle
fistpll
lock
insl
ljmp
stos
sbb
mov
aaa
inc
add
mov
jmp
adc
sub
xchg
je
dec
fisttps
clc
testl
push
push
cmpb
popa
jmp
dec
jge
leave
xorps
pop
mov
stc
nop
xchg
ds
or
repnz
mov
xchg
jmp
icebp
jb
sub
sbbl
xor
popa
add
adc
jns
ficompl
adc
rorl
shll
sahf
mov
push
dec
xorl
nop
inc
sbb
jg
mov
push
xchg
cmp
mov
es
and
or
test
ds
add
int
xor
xchg
lock
icebp
das
sub
adc
jmp
fiadds
xlat
pop
out
dec
or
and
addr16
pop
xchg
rol
jl
or
or
add
in
adc
inc
das
push
pop
sti
sahf
adc
mov
loopne
out
xor
test
mov
jo
mov
clc
dec
mov
ror
mov
xchg
cmp
or
sub
adc
or
mov
pop
xor
jmp
cmpsb
enter
jno
jmp
pop
cmp
test
sbb
mov
subb
jnp
pop
js
push
mov
jo
imul
nop
dec
pop
scas
sub
lret
mov
not
and
jae
or
bound
mov
push
ffree
adc
push
and
cwtl
sti
mov
adc
fsin
add
adc
clc
aas
sbb
iret
mov
inc
ljmp
adc
inc
push
mov
lds
push
adc
ret
mov
xor
sub
mov
dec
in
out
sub
mov
adc
push
jmp
insb
add
fiadds
jb
and
fiaddl
dec
jge
cwtl
rcrb
mov
push
ret
mov
mov
mov
add
roll
xchg
out
pop
andb
popf
repnz
cwtl
stos
push
pop
movsb
ljmp
jmp
xor
add
leave
popa
fs
jp
jmp
jecxz
sbb
imull
cs
mov
xor
mov
push
shll
xorl
inc
imul
fnstenv
mull
mov
jne
cmp
dec
ljmp
sbb
add
xor
pop
das
jmp
jle
jmp
stos
push
jnp
dec
xchg
insl
mov
pop
xor
pop
aaa
add
cmp
adc
dec
cli
scas
fisubrs
ret
or
lret
testl
adc
rclb
pop
pop
rcl
mov
cmp
imul
pop
cli
mov
dec
xchg
ret
std
cmp
mov
gs
jns
add
roll
loope
dec
inc
add
fwait
jmp
ljmp
movzbl
subb
push
ret
or
or
out
cmp
rcrl
adc
adcb
dec
dec
dec
cmp
pop
or
movsl
sub
add
dec
js
pop
cmp
pushf
stos
cmpsb
add
mov
xchg
mov
jbe
push
adc
sub
js
cld
sbb
jnp
sub
addr16
jmp
adc
dec
inc
icebp
test
pop
rcr
xor
jns
add
test
jae
dec
test
pop
xchg
sbb
jg
out
outsl
loopne
dec
jae
adc
xbegin
xor
adc
popf
je
das
jle
pop
and
adc
push
jnp
insl
mov
loop
and
clc
or
sub
lret
dec
sub
inc
jae
outsb
add
dec
pusha
outsb
cmpsl
xor
pop
loop
je
xchg
add
mov
adcb
das
cmp
or
jle
nop
ret
ja
popa
add
mov
xor
add
xlat
push
push
adc
xor
sti
loope
dec
imul
in
mov
inc
jg
cs
daa
sub
es
mov
xor
loopne
xchg
hlt
sub
divps
add
pushfw
inc
pop
mov
inc
es
cmp
stos
xor
mov
add
dec
push
in
pop
call
pop
subb
addr16
sub
add
stc
pop
test
push
xchg
lret
xor
pop
jle
push
or
mov
outsb
xlat
cmp
lods
jne
jmp
into
fcompl
scas
ret
jmp
ret
mov
push
xor
popa
jg
jmp
ret
and
out
lods
hlt
push
push
push
sbb
push
mov
push
repnz
cwtl
ljmp
add
pop
out
stc
adc
insb
out
pop
add
mov
jmp
andl
rcll
adc
pop
jle
push
jge
sahf
push
or
enter
cmp
jmp
lods
cs
das
xor
jge
adc
mov
pop
scas
xchg
xor
leave
or
pop
add
mov
mov
and
ret
jae
sub
into
popa
pop
bound
jg
mov
pop
pop
xor
sub
and
jns
or
sbb
addr16
dec
lods
push
xchg
push
dec
jle
testl
xchg
daa
pop
fbstp
pop
sub
jge
enter
pop
push
push
mov
sahf
shrl
imull
lahf
push
cli
pop
mov
or
xor
adc
test
sti
xchg
dec
adc
pop
jae
inc
jns
inc
push
in
push
js
pop
loope
inc
push
dec
and
pop
sbb
jmp
or
pop
and
in
into
add
and
and
mov
and
mov
lret
pop
rcr
fstpl
movsl
bound
xlat
dec
xchg
imul
cmp
mov
mov
add
cmp
xchg
aad
movsb
cltd
lret
push
mov
sqrtps
insb
inc
jnp
adc
jecxz
ret
stos
add
and
sti
mov
dec
add
test
shrl
adc
in
jmp
iret
repnz
cmp
rcrl
insl
mov
inc
sahf
adc
scas
jmp
adc
jbe
ljmp
jmp
xorl
lret
rcrl
ret
pop
mov
mov
xchg
sbb
ret
or
xchg
dec
adc
jnp
data16
add
out
popf
inc
adcl
mov
mov
js
out
sub
dec
test
sbb
mov
sub
into
test
popa
pusha
fidivs
and
and
mov
add
das
pop
or
pop
or
xchg
dec
loopne
pop
mov
add
xor
xchg
xchg
sti
je
das
cmpsl
inc
mov
mov
outsl
push
inc
lea
ficomps
jnp
jmp
dec
push
add
dec
das
pop
loope
clc
push
data16
dec
mov
jmp
add
lret
sub
ljmp
icebp
pop
push
pop
xchg
aas
arpl
xchg
add
or
jo
rcrb
mov
inc
mov
pop
fildll
mov
fldenv
fldl
push
push
loope
outsl
adc
mov
mov
fs
fstpl
test
sub
lret
stos
and
cltd
fs
xor
add
mov
js
dec
xchg
dec
adc
adc
sbb
ret
jne
pop
inc
loopne
jb
testb
test
push
movb
mov
or
stos
or
aad
pop
add
shl
push
neg
inc
sbb
jle
add
jmp
xchg
pop
loop
subl
in
push
pop
inc
dec
add
imul
cmp
and
aas
jno
outsb
nop
rorb
jns
popl
mov
sbb
cmp
push
xchg
cmp
sbb
out
and
add
add
jl
adc
mov
or
and
jne
daa
test
repnz
daa
push
add
js
test
mov
mov
jge
pop
cmp
test
xchg
mov
lahf
sbb
sub
adc
repz
dec
clc
notb
fisttps
test
test
pop
aam
jnp
sbb
dec
xor
mov
daa
mov
add
pop
mov
pop
sbb
pop
popl
and
jecxz
jmp
pop
js
sub
in
into
or
loope
dec
mov
cmp
fisttpll
leave
push
add
out
dec
xchg
cli
fidivl
xchg
push
add
sub
push
and
mov
insb
mov
ss
dec
sbb
mov
xchg
sbbl
ds
in
inc
popa
jle
loope
push
xor
push
and
inc
jle
ja
ret
jno
enter
int
xor
test
or
push
push
sti
sbb
lea
or
into
shlb
ljmp
out
adc
push
jp
ljmp
es
cmp
lods
out
mov
lods
mov
je
xor
jl
fimuls
inc
rcl
mov
sub
push
sarl
push
adc
mov
dec
and
fcmovnb
scas
mov
xchg
mov
cli
enter
cmp
cmp
mov
sbb
jg
stos
add
push
mov
mov
mov
mov
jl
push
mov
iret
mov
out
adc
jb
ret
sbb
pushf
adc
rolb
pop
dec
jmp
mov
push
outsl
shr
jmp
mov
cmp
iret
stos
and
pop
loopne
dec
jne
mov
pop
push
adc
adc
in
xlat
loop
add
fidivs
or
push
xor
mov
inc
pop
inc
stos
dec
mov
push
fsubr
sub
push
pop
push
mov
dec
iret
mov
popf
hlt
ficoms
out
add
xor
ficomps
and
adcb
dec
sbb
stos
xchg
add
add
push
cmp
or
pop
icebp
adc
sbb
jns
pop
adc
mov
dec
incl
mov
mov
call
lret
dec
out
test
mov
dec
pusha
pop
xchg
insb
mov
and
subb
and
es
les
or
test
or
inc
cmp
or
movsl
bound
or
aad
cmp
push
jle
inc
nop
loop
cmp
movsl
adc
lea
cmp
enter
push
jo
push
xchg
inc
cltd
xchg
pop
and
cltd
aad
and
and
pop
cmp
icebp
cld
jg
mov
jbe
push
sbb
jmp
out
flds
popa
jns
es
inc
jns
or
dec
andb
hlt
sub
sub
data16
add
push
mov
nop
shr
lahf
inc
imul
and
and
ret
adc
rolb
push
mov
mov
sahf
js
das
loopne
subb
pop
dec
inc
fidivs
daa
add
or
push
push
outsl
cmp
pop
mov
jmp
out
ficomps
mov
data16
mov
mov
mov
cs
jo
rol
scas
mov
shr
movsb
rclb
or
imul
pop
insb
xchg
add
ror
jbe
out
xchg
push
imul
inc
lahf
shl
mov
xchg
xor
push
in
pop
int
mov
xchg
and
jmp
rorb
popf
sub
iret
adc
sahf
insb
add
xchg
jl
rolb
cmp
or
sbb
push
cmp
add
ret
cmp
test
add
outsb
sbb
mov
dec
icebp
cltd
sbb
das
dec
insb
or
jle
sbb
loope
ds
mov
mov
test
ljmp
jmp
and
cmp
fistpl
mov
movsl
xchg
mov
push
fsubrl
ds
fcomps
movaps
cmp
push
ret
lock
add
cmpb
mov
je
jb
xchg
and
push
and
mov
mov
in
sub
push
push
cmpb
popf
into
outsl
ljmp
loop
inc
fs
push
fmuls
jmp
pop
mull
and
dec
dec
bound
andl
cmc
mov
pop
add
cmp
fisubl
dec
and
bound
jo
out
add
in
add
pop
jno
and
int
and
mov
jmp
jno
rorl
out
cmp
dec
cs
loopne
xchg
jg
push
push
loope
push
lcall
stc
cmpb
xchg
out
icebp
int3
shr
cs
add
xor
mov
hlt
inc
pop
inc
sbb
add
add
ficoms
mov
ds
das
loop
aam
and
mov
fwait
enter
sarl
xchg
xchg
daa
lret
dec
add
test
and
add
mov
je
add
mov
sub
ret
fcomps
je
fsubr
add
inc
aad
bound
xor
adc
test
ret
sbb
mov
jmp
aam
fildl
adc
jae
stc
popf
add
into
xor
jmp
jne
mov
cmc
rol
daa
jae
push
pop
jmp
lds
lahf
pop
xchg
pop
pop
cmpb
sub
jmp
loope
mov
add
or
pop
jle
mov
xor
jmp
cwtl
sub
pop
add
and
dec
cmpsb
rolb
rorl
popa
push
lock
ds
dec
cmc
push
and
imul
xchg
push
inc
add
outsb
lahf
stc
sbb
push
push
push
insl
popf
adc
loope
fldenv
fistps
mov
imul
lcall
ljmp
sub
nop
lret
mov
subb
pop
int3
jp
push
add
mov
mov
push
mov
sub
lds
fucomip
push
push
xchg
lcall
dec
xor
mov
jmp
test
push
mov
dec
enter
cmp
add
or
pop
sub
ds
cmc
or
xor
shlb
out
cmp
enter
stos
push
ss
orb
push
test
je
cmp
shl
test
stos
inc
pop
inc
jmp
or
clc
push
push
cwtl
test
or
test
pusha
lea
mov
or
sbb
sub
aad
and
ficomps
test
js
push
jo
lock
pop
mov
ret
jb
dec
jae
mov
mov
pusha
sub
lock
mov
pop
xor
xchg
aaa
inc
push
pop
mov
push
jmp
dec
icebp
mov
mov
xchg
jmp
lods
sub
mov
or
out
call
xor
or
jmp
into
sub
or
movsb
sub
fdivrl
insb
repz
jp
lds
sub
lcall
or
mov
in
lret
scas
fidivrl
js
daa
stos
adc
es
daa
or
lods
sbb
add
testl
in
jl
out
lret
fs
jg
cli
in
sub
jg
pusha
lret
inc
out
iret
add
es
call
add
and
push
ja
dec
dec
gs
jns
inc
jmp
dec
stc
sti
jbe
add
cmpsb
adc
pop
mov
pop
faddl
pop
imul
jno
dec
mov
in
xchg
add
xchg
pop
pop
xchg
aad
fisttps
sub
imul
repnz
enter
out
sbb
test
mov
fnstcw
in
cmp
or
lock
rorb
dec
jmp
push
fnstenv
jb
inc
shrb
push
out
add
sub
xchg
jo
addl
shlb
pop
jp
gs
and
fbld
in
stc
push
in
test
orl
or
and
lcall
push
sbb
xchg
lahf
scas
fcoml
push
ljmp
jl
int3
dec
filds
cmpsb
call
loopne
sub
mov
xor
push
ljmp
pop
jg
stos
and
add
push
add
push
inc
xor
js
enter
popf
out
mov
cmp
xor
push
mov
xchg
push
inc
sub
clc
adc
stos
lret
mov
adc
adc
xchg
insl
or
fcmovnbe
cmpb
test
xchg
int3
and
push
adc
mov
clc
stc
je
inc
sti
es
mov
or
add
xchg
rcl
push
fiadds
xadd
add
adc
adc
xlat
les
xor
pop
xchg
push
pusha
cmp
jle
fsts
das
push
xchg
xor
or
mov
fidivrs
sbb
xor
lds
xorl
ljmp
mov
inc
aas
in
divb
add
xor
inc
scas
and
sub
pop
out
push
push
mov
into
hlt
or
jo
rorb
xor
push
cs
test
enter
ljmp
push
push
mov
or
push
aam
pop
add
xor
and
push
cmp
fst
out
jae
popa
pop
inc
add
dec
mov
and
loopne
dec
in
or
int
call
inc
popf
inc
and
jecxz
enter
xchg
mov
push
dec
push
testl
cmp
pop
dec
add
jp
and
pop
cmp
sub
ret
adc
xchg
pop
mov
imul
adc
xchg
das
in
mov
sti
mov
movsb
cli
xor
cmp
xor
or
pusha
nop
jne
stc
xor
es
sub
sub
cmpsb
shlb
add
daa
adc
dec
xor
add
in
mov
testb
dec
in
js
mov
jge
sub
adc
push
xor
sti
sub
into
shll
xor
mov
cmp
or
sarw
cld
add
push
push
jmp
adc
scas
inc
out
pop
out
pop
rcll
insl
outsl
bound
mov
sahf
xchg
stos
rorb
add
sbb
icebp
cmp
push
or
lods
pusha
adc
rorb
lods
sub
testl
cs
inc
scas
pusha
adc
pop
xor
jnp
leave
dec
out
iret
test
lret
or
mov
mov
inc
fsub
ret
pop
hlt
mov
jns
addb
pop
mov
push
add
push
sahf
into
cmp
ljmp
adc
xor
bound
out
ret
or
cmp
insb
and
sti
sub
dec
enter
mov
testl
testb
bound
xor
inc
cmp
out
push
inc
sti
mov
std
or
jb
cmc
sbb
icebp
dec
cmp
and
jae
push
and
push
sbb
ret
shlb
pop
mov
xor
xor
cld
cmp
rorl
mov
sub
lahf
faddl
add
popf
insb
push
inc
outsl
dec
hlt
inc
or
pop
les
cmp
fstl
dec
sbb
push
add
mov
adc
into
adc
xchg
xor
outsl
lret
mov
push
jmp
ret
inc
push
cmp
scas
add
or
xchg
pop
lods
cmp
out
xchg
push
and
add
stc
inc
inc
or
stc
adc
lods
pushf
dec
into
imul
push
add
xor
push
test
cmp
or
jb
and
jp
or
pop
sub
test
xor
or
add
xor
xor
mov
loopne
fidivrl
andb
je
xor
adc
push
stos
icebp
jne
insb
sbb
cmp
sub
cld
into
mov
cmp
je
mov
inc
notb
repnz
mov
lds
rcll
mov
xor
mov
cmp
mov
mov
xor
add
and
mov
jb
add
adcb
jmp
enter
jns
adc
dec
adc
xlat
mov
or
xchg
sub
mov
add
inc
mov
xor
faddl
js
mov
sbbb
adc
jge
adc
jmp
push
mov
jl
ficoml
flds
movsb
fdivrp
jle
or
sbb
leave
push
cmp
daa
push
adc
cmp
hlt
insl
or
add
inc
rolb
ds
sahf
xor
push
mov
or
xchg
mov
aam
jmp
pusha
push
push
inc
pop
int
nop
push
outsl
mov
push
adc
cmp
xchg
jmp
push
mov
sti
xor
out
in
cmp
jmp
pop
mov
inc
mov
popa
jmp
sub
and
push
add
sti
sub
mov
popf
dec
cmpsb
sub
sub
ss
pop
popa
les
ja
out
pop
mov
adc
loope
mov
xor
pop
or
mov
mov
test
mov
pop
and
pop
test
je
jg
inc
in
in
dec
adc
adc
in
mov
icebp
mov
mov
and
mov
push
dec
or
shlb
push
xchg
adc
adc
add
cmp
int
popa
ljmp
jp
out
sbb
or
aas
inc
inc
inc
and
dec
add
jns
sbb
nop
shlb
push
inc
mov
jo
add
dec
push
jmp
cwtl
cmp
xor
push
push
mov
lods
roll
test
or
xchg
push
aaa
insl
mov
aaa
pop
cmp
sbb
add
push
jmp
mov
movsl
pop
lods
push
mov
push
mov
cmp
and
cs
jno
add
and
xchg
inc
icebp
pop
mov
mov
add
and
jns
movsb
js
push
hlt
add
push
daa
adc
adc
xorps
push
aas
or
adc
jmp
dec
or
dec
test
icebp
jae
test
into
shrl
das
and
clc
and
adc
enter
rsqrtps
sbb
loop
xchg
sahf
loopne
jne
pop
jl
pop
sarl
leave
lds
test
push
addr16
add
das
xchg
dec
jle
in
out
rorb
out
xchg
jle
imul
xor
mov
xor
add
inc
fiaddl
jnp
adc
inc
inc
xor
inc
jp
ds
add
out
dec
sub
jp
notb
push
pop
fnstcw
sub
ret
fxch
rorl
cltd
and
pop
ja
nop
loop
mov
sub
cwtl
and
jne
or
pop
dec
gs
xchg
enter
dec
pop
in
adc
push
mov
repz
jno
outsl
movsl
into
adc
dec
ret
push
scas
outsb
adc
jne
std
push
inc
ja
mov
cmp
mov
fucom
cmp
cmc
pusha
mov
sbb
cld
pop
pop
xchg
lods
loope
lock
int
dec
or
xchg
bnd
jge
ja,pn
jo
pop
pop
mov
adcb
insl
or
add
cld
cmp
pop
in
fbld
xchg
sbb
insb
subb
es
push
cli
cmp
push
jmp
sub
ret
addl
repz
adc
icebp
lcall
cmp
pop
adc
sahf
jb
sbb
and
lret
in
loope
pop
jg
cmp
jg
xchg
movsb
dec
subb
pop
pushf
push
lret
inc
mov
mov
push
push
lahf
orb
shrl
xor
xchg
dec
mov
das
and
ret
pop
push
pop
lock
xchg
movb
sub
push
mov
mov
mov
test
jno
xchg
leave
sub
int
adc
addb
int3
mov
push
pop
or
jmp
sbb
sub
ds
jmp
dec
dec
fldenv
lods
cwtl
inc
add
lret
sti
or
fstl
cwtl
dec
out
add
xchg
mov
sub
ja
adc
push
subl
add
mov
call
mov
adc
mov
es
aas
or
pop
xor
pmulhw
mov
popa
and
cwtl
inc
insl
roll
jl
jns
mov
insb
movsl
aam
lods
pop
sub
xorb
daa
addl
cmp
rcll
cmpsl
call
imul
loop
into
mov
cmp
cltd
pusha
inc
imul
mov
push
dec
lret
cs
sbb
jbe
add
push
jp
ds
push
inc
or
jmp
std
sar
pop
sub
jno
mov
push
sbb
gs
inc
xlat
pop
push
nop
pop
xchg
rol
jnp
cmp
mov
adc
mov
test
jmp
push
test
and
adc
mov
cmp
jno
hlt
pop
icebp
cmp
dec
pushf
xchg
push
xchg
vmovsldup
stos
cmp
sub
stc
and
mov
sub
fdivrp
movl
and
js
call
stc
insl
ljmp
xor
cmp
push
dec
mov
push
push
mov
xor
mov
add
sub
pop
jo
ljmp
popf
adc
inc
adc
jg
hlt
pop
push
xor
xchg
fsubl
inc
mov
test
push
inc
pop
add
das
lods
jp
jg
xchg
shll
inc
cmpsl
xchg
mov
push
jae
scas
icebp
loope
or
fstl
inc
jmp
aam
js
push
mov
movsb
or
addr16
ficoms
push
cmpsb
fcmovnb
pop
push
push
mov
icebp
push
jmp
mov
mov
sarb
xchg
enter
cmp
push
adc
fs
xchg
jmp
inc
dec
adc
sbb
pop
lock
inc
add
jg
dec
lahf
jbe
stos
je
repnz
data16
rcll
les
mov
add
push
jmp
subb
push
and
push
mov
and
inc
push
jne
xchg
cltd
call
test
inc
in
push
mov
jo
mov
dec
aas
pop
mov
xor
pop
add
push
out
orb
popa
xchg
lock
jb
fadds
pop
and
and
sub
jne
inc
pop
mov
cmp
inc
cmp
mov
mov
jecxz
loope
cmp
les
cmc
adc
ret
mov
push
scas
add
icebp
xlat
sub
jl
xchg
clc
int
push
fnstenv
cmp
aam
push
pushf
pusha
roll
ja
or
lret
hlt
jns
sub
xchg
inc
clc
loope
pop
flds
imul
jmp
inc
and
or
mov
push
jle
inc
aad
mov
leave
or
mov
mov
pusha
in
add
repnz
pop
mov
xlat
test
test
cmpb
adc
loopne
decb
add
stos
imulb
pusha
xor
jo
jmp
pop
add
mov
pop
push
std
dec
mov
pop
clc
pop
push
mov
jmp
out
or
testl
loope
fiadds
test
mov
push
popf
push
push
popa
inc
xchg
add
mov
mov
dec
mov
xchg
inc
ss
push
push
or
fdivrl
sub
push
add
push
pop
leave
insl
add
test
push
or
and
dec
js
jle
sub
test
sub
or
jns
jmp
lea
xlat
das
xchg
sar
aad
and
out
hlt
pusha
pop
inc
into
mov
mov
mov
mov
cmp
or
push
ret
idivb
mov
push
cwtl
cmc
imul
addr16
ret
push
icebp
jmp
jbe
mov
add
mov
xchg
cmp
jle
sarl
inc
jno
in
into
inc
aaa
mov
xchg
stc
lods
adc
lds
mov
jmp
xor
out
int3
ss
or
lods
orl
fmul
inc
aas
sbb
xor
mov
cmpsl
mov
sub
nop
sub
fmull
js
out
inc
subl
dec
push
aas
push
pushl
int
pop
mov
pop
dec
mov
push
pop
bound
sub
movsb
add
std
cmp
enter
xlat
mov
inc
and
dec
inc
js
jb
xorl
ljmp
mov
in
ljmp
push
shll
pop
ficompl
ret
adc
adc
or
jae
add
push
aas
pop
adc
fisubrl
add
cmp
mov
pop
pop
push
add
pop
mov
pop
push
xor
cmp
adc
jae
repz
imull
inc
pop
incb
aas
cld
and
test
insb
dec
xorb
and
or
dec
jnp
dec
sbb
roll
imul
sub
arpl
gs
std
call
sti
mov
push
jo
add
sub
in
sbb
lock
or
jecxz
sub
mov
test
movsb
rcll
ret
pop
mov
inc
mov
int
jmp
xchg
inc
cmc
ret
in
insl
and
xor
mov
mov
stos
adc
mov
loope
mov
pusha
mov
lods
fidivrs
add
adc
cltd
insl
cmp
inc
lods
jle
or
pop
jmp
scas
push
das
dec
es
sub
ret
orl
jns
or
std
loopne
xor
in
pop
loopne
inc
adc
push
sub
ds
push
scas
sbb
fnstcw
aaa
leave
and
xor
push
pop
or
jmp
jae
or
add
push
adc
push
inc
out
bound
imul
inc
jo
mov
mov
and
xorb
xor
cwtl
gs
sarb
sti
lds
pushf
inc
int3
mov
dec
sbb
cmpsl
cmp
test
ret
lret
test
jns
jae
add
push
dec
adc
stc
enter
pop
dec
xchg
shl
sbb
push
pusha
push
cltd
test
dec
sub
sarb
mov
xor
push
cs
rcll
xor
xlat
dec
pop
stc
out
push
shr
push
stos
add
or
and
fs
cmp
jb
and
nop
xchg
sbb
loop
cmp
jo
and
xor
or
pop
push
add
and
xorl
xchg
xchg
pop
in
outsb
sub
movsl
dec
push
mov
int
dec
pusha
outsb
adc
ret
xchg
sbbb
or
push
dec
adc
data16
int3
arpl
out
incb
xor
jge
lahf
test
xchg
cmc
xor
push
mov
fdivs
in
nop
add
das
mov
xchg
push
jae
inc
cmp
in
jecxz
sub
add
stc
jmp
rcrb
xor
and
dec
orb
dec
je
rorl
imul
out
mov
cmp
cltd
jne
cltd
pop
and
mov
mov
xor
not
push
adc
mov
pop
xchg
std
aad
or
rolb
repnz
rep
ja
outsl
lock
or
jmp
or
sub
js
clc
sub
insl
mov
fcoml
jmp
fistps
es
push
mov
sub
aam
dec
and
loopne
fs
jg
cld
and
aas
test
adc
in
outsb
lods
sti
xchg
dec
test
sbb
pushf
push
sbb
mov
push
adc
rclb
mov
jg
ja
adc
cmc
and
and
sbb
xchg
add
lret
ljmp
cmp
andl
aam
jecxz
ljmp
cld
dec
pop
push
inc
test
jns
popf
lds
mov
fisttpll
sbb
push
push
rcll
cwtl
and
pop
jecxz
jl
sub
jle
jl
cmp
adc
test
adc
and
imul
fidivrl
scas
sub
imul
popa
or
add
std
testl
mov
pop
pusha
adc
mov
test
scas
mov
adc
jecxz
xor
sub
fldl
rclb
or
sub
fldl2e
ja
pop
sub
xor
mov
std
cs
push
jmp
jne
mov
clc
jle
and
aad
loope
out
adc
mov
add
xor
and
adc
ljmp
in
stos
movsb
xchg
add
lahf
dec
ds
dec
frstor
outsb
ficoms
out
sub
jge
orl
sub
test
or
adc
cmp
je
sub
jb
out
pop
sbb
and
sub
or
add
dec
mov
nop
pop
nop
rolb
pop
jns
fadds
push
in
sbb
and
pop
xor
mov
sbb
jecxz
xchg
or
ss
movsl
push
enter
push
js
sub
frstor
ljmp
ret
add
push
mov
jp
subb
push
popa
add
jmp
mov
or
fisttpll
inc
mov
sbb
jge
fimuls
xorl
adc
dec
imul
movsl
mov
fdivs
bound
lods
xchg
roll
mov
orl
push
movsl
cmp
and
push
push
mov
inc
mov
push
sbbb
lahf
inc
orb
in
mov
pop
pop
mov
jp
pop
adc
push
lahf
je
popa
std
repz
test
add
mov
imul
lock
adc
mov
sub
mov
insb
sub
pop
rcrl
jle
xor
nop
or
pop
aad
jb
push
push
xor
pop
inc
lds
push
dec
push
ljmp
leave
sub
and
shlb
or
pop
hlt
aas
or
mov
mov
adc
fninit
dec
in
xchg
xchg
call
fstpt
adc
jo
lea
outsb
shl
lahf
and
sbb
jmp
xor
xor
mov
inc
mov
pop
and
out
xor
or
cmc
cwtl
scas
pop
inc
mov
or
cmp
leave
in
add
inc
loop
mov
icebp
and
pusha
jmp
push
fnsetpm(287
lret
dec
lea
aad
sbb
ror
dec
cmp
pop
mov
xchg
sbb
inc
jg
cld
mov
mov
orl
mov
xchg
add
or
mov
cmp
leave
jmp
rcrl
cmp
mov
sub
jmp
rclb
jge
repz
addr16
jge
mov
push
add
pop
addr16
jmp
and
jo
movsb
bound
xchg
sub
cmp
pop
into
mov
popa
or
or
lods
rol
xor
aas
mov
add
push
adc
testb
pop
stos
mov
adc
in
or
add
lret
sahf
pop
std
dec
adc
stos
inc
fildll
add
cld
or
jmp
orb
mov
shl
mov
out
inc
push
outsl
in
ret
and
mov
inc
dec
cld
mov
pop
and
cmp
or
dec
and
repnz
sbb
mov
outsb
adc
in
adc
push
mov
ja
into
push
insb
pushf
pop
int
push
ds
shr
xor
pop
jmp
sub
pop
add
fs
inc
push
loopne
js
icebp
sub
out
or
ret
pop
push
dec
xor
mov
mov
fwait
div
stos
mov
lret
mov
ja
inc
cmpsl
hlt
mov
xor
daa
mov
pushf
inc
outsb
call
int3
adc
shlb
test
ret
clc
mov
adc
ljmp
test
sub
pop
or
scas
cmp
jp
mov
dec
xchg
sbb
and
mov
lods
jl
pop
ret
cmpsl
ret
mov
add
in
jp
fcomps
mov
pushl
jle
push
dec
mov
jl
jbe
in
and
cmp
push
sbb
data16
add
inc
add
jne
imul
push
dec
imul
jl
add
leave
adc
mov
add
int
dec
addr16
push
pop
in
push
int
in
add
mov
imul
in
and
test
leave
cmp
insb
xor
adc
inc
sub
imul
cmp
std
lods
imul
and
xor
es
fnstcw
pop
jge
ja
mov
outsl
inc
into
dec
out
xor
in
ret
pop
loope
loopne
pop
xchg
jno
mov
adc
sbb
out
adc
and
loop
jns
sar
mov
add
push
mov
out
negl
scas
mov
mov
das
pop
and
repnz
and
les
push
sub
out
mov
inc
sub
dec
jmp
pop
pop
sbb
push
jnp
inc
aam
dec
xchg
sti
and
adc
rclb
and
sub
jle
cwtl
xchg
leave
xchg
gs
mov
mov
inc
nop
adc
pop
add
mov
pop
sub
lea
imull
inc
inc
fisttpll
cltd
mov
loopne
adc
and
lock
dec
inc
orb
or
std
addb
add
mov
mov
pop
push
pop
data16
imul
mov
les
cmp
sub
aam
or
insl
call
outsb
stos
loope
ja
repnz
pop
repnz
in
or
jle
negb
lock
adc
push
not
stos
xchg
xor
cmc
lret
cli
ret
mov
xor
scas
xlat
dec
fimuls
adc
inc
sub
aas
or
leave
xor
jnp
addr16
xor
std
push
lret
out
and
adc
jmp
inc
out
lods
or
repz
xor
inc
orl
dec
xor
xor
clc
cltd
test
push
pop
pop
out
adc
into
ja
pop
and
jbe
es
sub
sub
add
inc
jmp
and
std
int
lock
pop
cmp
cli
sarb
in
fwait
sbb
pop
out
out
mov
int3
sbb
cmc
xor
mov
xor
sbb
mull
jo
je
xchg
inc
push
mov
orb
hlt
xchg
test
mov
push
mov
movb
dec
lret
dec
rcrb
mov
or
sub
daa
mov
and
sub
int
xchg
inc
mov
sub
cmpsl
aam
push
sub
sbb
dec
ficomps
and
out
cmpsb
mov
cmp
jno
fucom
sbb
adc
mov
or
mov
shr
lock
rcrb
adc
and
sarl
icebp
addr16
mov
cmovo
pop
jb
cmp
pop
xchg
inc
lock
fimuls
xor
mov
xorl
or
push
addr16
fmuls
push
inc
push
mov
jbe
aaa
enter
jns
lock
popa
push
xor
adc
movsb
jmp
push
sti
xchg
sub
cmp
cld
pop
dec
dec
das
jne
mov
and
and
jmp
jae
rcll
addr16
inc
cmp
sub
arpl
dec
jmp
mov
push
pop
clc
jp
sbb
xchg
sub
cltd
sub
jne
call
sbb
aas
test
imull
or
int3
cmp
das
pop
push
xorl
imull
inc
push
andb
mov
add
test
mov
mov
cld
mov
lock
jle
insl
and
outsl
mov
fnstcw
test
lret
jmp
lods
dec
ds
push
add
jmp
mov
jg
jge
and
and
jo
repz
inc
jl
aaa
pop
xchg
popa
dec
clc
fcoml
mov
xor
pushf
movsb
pop
lahf
sarl
sub
dec
lods
sti
icebp
cmp
fs
icebp
in
int3
imul
cmp
decb
add
add
xor
cmp
cs
pop
jge
or
icebp
jae
sbb
loope
cmpsb
xor
add
inc
call
cmp
das
aad
or
dec
mov
mov
pop
jnp
mov
inc
sbb
pushf
mov
sbbb
xchg
shl
inc
popa
add
nop
xchg
repnz
push
or
push
not
add
sub
or
repz
inc
popa
cmp
dec
sbb
mov
leave
dec
add
popa
jo
jmp
and
std
inc
dec
or
pop
shl
pop
inc
popa
push
jp
je
xchg
jp
test
stos
xor
adc
sub
mov
jge
jne
sbb
cltd
push
aad
ljmp
xchg
adc
sub
cmp
pop
outsl
jecxz
adc
cs
notl
jle
daa
pop
adc
jmp
mov
push
jne
dec
jmp
mov
das
mov
out
jge
sub
mov
pop
dec
and
cmpsl
dec
xchg
fwait
jno
add
pop
maskmovq
int3
sbbl
gs
mov
cmpsl
sub
add
or
fwait
mulb
xor
sbbl
fs
daa
cmp
jnp
add
sbb
outsb
insl
add
xchg
jmp
sbb
push
mov
in
sub
jecxz
cmp
adc
or
leave
fdiv
ja
adcb
dec
into
pop
xchg
lahf
or
push
sbb
jl
mov
xor
jecxz
add
lea
out
dec
add
and
or
sbb
std
pop
daa
add
add
jmp
lret
jae
xor
cmp
adc
or
wbinvd
mov
out
call
or
or
sbb
push
lds
imul
cmp
jnp
sub
sbb
mov
or
lcall
or
lret
pop
jl
imul
clc
loope
mov
pop
xchg
mov
mov
pop
mov
dec
icebp
or
cld
xor
clc
xchg
mov
mov
enter
mov
sub
mov
sbb
inc
or
add
sub
sub
jns
ljmp
shrl
jno
adcl
nop
sub
rorl
pop
mov
das
push
push
cwtl
mov
or
addr16
inc
mov
lahf
dec
mov
xor
adc
es
mov
xor
test
cli
mov
lock
or
adc
aad
shr
pop
dec
je
adc
bswap
jmp
xchg
and
insb
stos
nop
mov
mov
push
fucomp
and
call
and
mov
vsubpd
mov
dec
or
add
push
sub
icebp
shr
sub
and
xchg
jecxz
pop
push
sub
sub
std
mov
ret
push
ja
and
cmp
cmp
pop
in
cmp
inc
sub
out
sub
xor
xchg
inc
scas
sub
mov
dec
gs
mov
xchg
cmp
leave
jp
and
test
enter
sub
add
jg
cli
stos
das
add
vcvtsd2si
cmpsb
cmp
dec
cltd
pop
inc
and
xor
fwait
fsub
notb
out
inc
fisttps
xorb
pop
aam
and
lea
popa
out
jmp
mov
push
dec
and
cmp
xor
mov
jne
pusha
push
mov
adc
daa
sar
prefetchnta
jmp
xchg
xchg
outsl
adcb
jns
fistpl
pop
and
gs
dec
push
cmc
add
lahf
fs
or
sbb
pop
pop
jle
xor
inc
mov
jmp
inc
testl
jecxz
xor
add
nop
data16
pop
or
sub
push
js
fimull
xor
cmc
add
mov
inc
stos
pop
sbb
dec
negl
mov
xor
pop
jge
ret
push
mov
mov
push
movb
sub
or
push
clc
fdivl
mov
xchg
stc
xchg
push
clc
subb
ja
les
mov
mov
dec
lret
cmp
xchg
scas
loopne
pop
push
mov
insl
xchg
inc
lret
push
mov
inc
cwtl
push
mov
cld
clc
push
dec
out
fs
push
or
and
popf
lods
out
test
xchg
mov
popa
inc
mov
add
push
in
js
shr
int
cmp
setp
add
sbb
cs
adc
sub
sbb
sahf
inc
rcl
adc
data16
jl
daa
xchg
cmp
pop
add
inc
push
jmp
popa
orl
push
add
sub
adc
jnp
sub
or
jne
jmp
cltd
add
jno
push
add
xor
leave
lret
ficomps
push
fstl
div
jns
sub
adc
rcrl
es
popa
imul
sub
daa
gs
insl
xchg
cmp
pusha
or
cwtl
leave
daa
push
clc
jnp
in
fildll
add
aaa
cmp
pushf
dec
lods
lahf
test
stos
mov
imul
inc
lods
in
ljmp
jecxz
inc
idivl
adc
jb
enter
pop
cwtl
sub
inc
nop
sub
outsb
mov
aaa
dec
sti
mov
jmp
sub
sarb
outsb
das
dec
adc
into
loope
adc
ret
scas
xchg
mov
push
push
shll
cltd
xchg
loopne
insl
inc
call
movsb
cmp
inc
ficompl
adc
pop
push
lods
out
and
mov
sub
sarb
sub
bound
adc
xlat
xchg
fldt
mov
sbb
clc
dec
or
inc
aam
jmp
sub
enter
rorl
pusha
and
and
xor
fdivrs
or
in
imul
jge
lahf
pop
xor
gs
popa
jecxz
xor
mov
pushw
nop
lcall
push
adc
out
cwtl
je
sub
dec
inc
cmp
push
mov
dec
xor
pop
ds
rclb
and
out
push
adc
add
xor
push
rcrl
mov
mov
and
rorb
add
fcmovnb
and
cmp
aaa
sahf
dec
add
mov
adc
dec
sub
mov
out
inc
cmp
and
push
push
in
sub
cmc
fbstp
gs
jp
lds
push
push
cld
xor
data16
mov
pop
and
pop
add
andl
std
adc
push
xor
push
add
jb
jg
jae
in
pop
in
aad
jmp
or
inc
push
stc
push
push
and
negb
jb
mov
xor
loop
xchg
mov
sti
pusha
icebp
push
or
sub
insb
mov
gs
mov
xor
pop
cs
mov
sub
add
aas
outsb
inc
jo
das
inc
cmp
and
inc
fmull
icebp
dec
dec
adc
ja
xchg
push
mov
pop
push
mov
shl
push
mov
sub
sub
aam
or
cmpsb
sub
addb
repz
jns
inc
addr16
pusha
pusha
and
push
jne
imul
sub
pop
sbb
aaa
mov
mov
push
jg
inc
jno
cwtl
cltd
imul
push
adc
mov
sub
in
jle
inc
sbb
popf
lock
in
out
loop
pop
repnz
add
xor
subb
sbb
jmp
xor
pop
push
das
out
fiaddl
clc
test
icebp
test
loop
mov
enter
outsl
add
ja
push
adc
imul
ss
gs
sahf
and
and
add
adc
testb
in
out
mov
sub
mov
int3
ret
mov
jecxz
adc
outsb
das
lret
xchg
dec
call
daa
cmp
pop
adc
loop
jle
rclb
mov
or
frstor
push
jmp
dec
clc
out
sub
add
aas
add
inc
push
loopne
icebp
clc
in
mov
and
je
and
mov
inc
insb
push
jne
pop
and
dec
aad
loope
aas
repnz
push
mov
or
shl
fistpl
repz
fidivs
in
adcl
or
and
cmp
pop
xchg
push
mov
jno
jmp
popf
ret
jmp
pushf
adc
out
jo
ds
stc
enter
mov
pop
inc
pop
decl
dec
sbb
cli
mov
in
push
sti
mov
jmp
fisubrs
cmp
jmp
adc
stc
idivb
jl
push
jmp
not
cmp
sbb
push
loop
enter
or
xchg
mov
add
popf
inc
test
inc
ss
jo
mov
loop
addb
push
add
cmovle
test
push
rol
jge
push
pusha
adc
xchg
add
jmp
xlat
xor
jmp
push
xchg
cli
rcll
dec
popa
dec
xor
inc
mov
pop
jp
xor
lret
daa
mov
in
clc
scas
sbb
int
add
and
stos
jo
cwtl
lcall
mov
and
mov
or
xor
mov
and
or
mov
outsl
sub
pop
lds
mov
cmc
mov
xchg
push
pop
mov
sbb
stos
cmpb
or
push
push
loope
pushw
sbb
divl
sbb
test
pop
sbb
scas
test
push
jbe
inc
push
jle
fistl
inc
dec
dec
mov
xchg
sbbl
fldt
je
add
xchg
je
imul
xor
xor
rcrl
push
add
mov
jb
ds
xchg
aam
mov
push
push
jle
mov
sub
loope
jle
fs
sbb
hlt
sarb
insl
push
mov
mov
sarl
pop
mov
pop
push
pusha
or
jb
push
add
jge
jnp
fcompl
mov
or
mov
xlat
adc
mov
mov
cmpsb
and
xor
inc
jmp
ss
xchg
movsb
mov
pop
push
out
hlt
std
test
adc
push
cli
mov
test
or
mov
js
add
testb
aas
shrl
dec
lods
in
cmp
jl
push
inc
or
add
or
jecxz
cmp
push
fmulp
lret
pop
popf
loop
lds
xor
mov
inc
mov
sub
inc
add
scas
jno
cmp
xchg
xor
aad
fs
mov
les
push
pop
cli
xor
into
jne
es
xor
sbb
adc
mov
das
push
add
dec
lret
lods
repnz
jae
push
mov
in
pop
outsb
inc
push
pop
pop
mov
scas
addb
cmp
add
mov
jmp
ret
push
andb
add
int
jmp
fldenv
sub
push
jne
mov
das
leave
jg
test
xchg
subl
or
jb
xor
rorb
pop
add
loop
adc
jmp
test
mov
ficomps
mov
inc
into
pop
fstpl
dec
ret
cmpl
inc
sbb
test
mov
sbb
dec
jg
jmp
push
or
js
gs
dec
pop
test
cli
out
mov
cmpb
and
adc
fstpl
outsl
scas
rclb
enter
in
and
or
add
mov
dec
xor
dec
mov
add
outsb
mov
rol
sbb
cmp
add
or
jle
pop
add
scas
bound
les
add
mov
in
adc
sbb
push
or
push
push
aad
mov
pop
or
mov
dec
sarl
clc
es
or
adc
pop
or
mov
movsl
jbe
add
roll
jmp
stos
imul
sub
sahf
inc
and
mov
xchg
sub
test
dec
mov
or
push
inc
mov
mov
xchg
pop
jae
out
repz
clc
add
mov
test
in
add
stos
pop
cmpsl
push
jge
outsb
lods
cmc
adc
push
out
jns
ret
aam
orb
dec
push
or
imul
in
cwtl
jnp
out
sub
sub
inc
and
and
scas
bnd
pop
mov
fldenv
outsb
dec
jo
aad
cs
pop
lds
sub
movb
or
pop
flds
mov
lahf
mov
sarl
stos
mov
outsl
cmp
pop
mov
imul
or
dec
dec
fbstp
add
sub
lret
mov
fcompl
pop
inc
and
mov
rcrl
dec
sar
jo
out
inc
shrl
and
pop
mov
mov
cwtl
stos
ja
cmpb
sub
push
jmp
mov
lcall
mov
call
into
push
and
pushf
loope
test
ljmp
test
xchg
jb
push
add
push
or
pop
and
adc
dec
sub
and
sbbl
ljmp
in
jp
stos
jmp
adc
mov
inc
addr16
ror
mov
ds
push
jge
pop
mov
pop
pop
xor
es
or
inc
or
jmp
pop
scas
jne
scas
adc
sub
and
sbb
fbld
sbb
mov
dec
adc
add
shl
hlt
into
add
mov
popa
jg
fnsave
aas
ret
add
add
lds
push
stos
repnz
dec
fcompl
xchg
xchg
jns
lar
dec
push
add
ss
or
jl
pop
sbb
imul
sub
push
add
jp
jns
jmp
xor
or
lcall
inc
xchg
or
jl
and
and
sti
cld
adc
rolb
clc
scas
aas
sub
je
test
in
dec
or
cmpb
adc
sub
pop
das
sbb
sbb
pop
sbbb
pop
pop
mov
ss
fs
inc
roll
addb
and
in
mov
pop
or
push
fs
adc
pop
repnz
xor
adc
fdivrs
mov
jecxz
xchg
jmp
cmpsl
xor
sub
jmp
movsb
out
imul
fwait
pushw
cmpsb
sub
jle
or
mov
lret
xorb
xor
loopne
adc
fcmovnb
ja
add
jb
jmp
sbb
sbb
jmp
shrl
pop
mov
enter
orb
movsl
fcoml
out
pusha
repnz
out
loop
in
movsl
jg
dec
mov
out
in
add
loop
call
and
dec
sub
push
xchg
and
into
pop
or
test
cli
fidivl
aas
add
jnp
or
cmp
push
test
inc
adc
mov
push
add
pusha
and
adc
jo
nop
adc
test
scas
xor
add
mov
rcll
mov
outsl
addr16
ret
mov
cmc
pop
cld
not
mov
jo
clc
enter
call
mov
cs
dec
mov
sub
lock
pop
xchg
inc
lahf
imul
cmp
pop
mov
and
or
add
inc
and
mov
dec
sbb
pop
add
add
pop
hlt
mov
idivl
dec
insw
sub
push
int3
ljmp
jg
or
jecxz
pop
shll
xorl
lahf
sbb
cmpsl
fists
mov
outsl
jns
out
pop
pusha
and
lret
stos
pop
push
or
push
or
xchg
loopne
in
sbb
fs
nop
ds
or
pop
jne
daa
clc
pop
adc
jmp
add
push
jno,pn
lds
fsubrp
adc
mov
sub
into
adc
push
pop
and
in
mov
or
jae
mov
add
ja
out
ret
scas
rcrl
xchg
sub
clc
ds
repnz
dec
inc
jo
xchg
mov
jg
sub
inc
icebp
pop
jg
aam
inc
push
mov
mov
or
sbb
pop
push
mov
stos
jmp
aaa
sub
jge
pop
addr16
stos
repnz
jo
mov
jb
mov
inc
sbb
testl
or
out
xor
mov
cmp
lea
pop
dec
pop
cmpsb
mov
lahf
add
add
jle
xchg
sbb
add
xor
mov
and
orl
fstl
pop
bound
fsubrl
ljmp
scas
and
ljmp
int
adc
pop
jmp
out
out
xchg
pushl
jne
es
sti
popf
sbb
push
les
xor
adc
shlb
sub
imul
dec
testl
mov
test
shrl
sub
xchg
loop
sub
cld
adc
xchg
pop
mov
test
les
sarl
xor
and
test
dec
lods
int3
fisttps
cmc
xlat
cmp
sti
notb
and
mov
mov
int3
dec
les
or
push
jmp
daa
fisttps
mov
pop
xchg
nop
movsl
pop
cwtl
adc
mov
mov
sub
cmp
adc
xor
xor
imull
pop
dec
outsl
ret
repz
fsubrl
add
rorb
xchg
pop
dec
xor
mov
cltd
xor
and
jg
scas
and
and
test
pop
or
sub
or
inc
mov
js
ret
lock
pop
inc
popl
rclb
or
jmp
xor
and
call
in
les
fistpll
jg
jae
hlt
jne
dec
mov
mov
or
dec
push
clc
mov
sub
push
int3
mov
popf
jge
mov
jmp
mov
sbb
push
bound
mov
or
pop
aas
cmc
push
ljmp
popa
adc
call
test
out
sbb
daa
orl
xor
pop
and
rclb
inc
push
sub
ret
or
cmp
pop
mov
pop
jmp
pop
aaa
jecxz
inc
pop
sbb
inc
jge
push
jle
idivb
or
push
mov
jbe
xchg
xor
sbb
mov
cmp
add
add
stos
cwtl
clc
adc
rcll
or
push
push
add
push
xchg
jb
add
cmp
jb
loopne
lret
out
pop
mov
pop
or
and
push
cmp
and
sbb
cs
mov
cli
pop
sbb
sbb
or
pop
and
movsl
je
inc
pop
dec
mov
or
fists
lods
sub
sub
pop
xor
ja
push
sarb
jae
inc
shlb
and
inc
mov
outsb
aas
hlt
and
xchg
rcll
notl
jb
lahf
leave
icebp
mov
shlb
adc
cmp
sub
cmp
or
pop
inc
xchg
fldcw
sbb
cmp
mul
les
sub
call
and
adc
push
cmp
mov
mov
addl
mov
mov
sbb
sub
add
mov
push
dec
cmpb
add
shrl
jnp
xchg
pop
add
xor
out
test
ss
jnp
pop
shr
adc
call
adc
and
addb
sub
add
arpl
push
push
pop
pop
dec
pop
clc
rorl
loop
pop
in
imul
mov
jo
out
mov
sbb
hlt
movsl
and
push
add
push
mov
mov
orl
jb
rcl
out
cmp
in
ja
mov
adc
push
pop
pusha
popa
mov
lock
popa
or
je
imul
or
adc
hlt
add
or
sub
adc
les
in
xchg
inc
jne
int
xor
mov
xlat
cmpsw
mov
mov
or
ljmp
dec
dec
ljmp
test
leave
fwait
xor
idivl
and
add
inc
dec
cmp
fimuls
mov
jae,pt
sbb
mov
mov
mov
pop
test
daa
loopne
mov
clc
push
push
push
or
mov
orb
psadbw
dec
fcompl
sub
pop
sub
movsl
aam
add
mov
xchg
add
test
insb
cmp
mov
xchg
loopne
ds
addb
loop
sarl
jbe
arpl
js
jo
jp
jmp
mov
bound
cli
jnp
xor
clc
mov
stos
insl
je
addb
cmc
adc
lods
push
push
jno
xor
push
int3
sub
sarl
push
idivl
or
rcrb
xor
xor
stos
pop
addr16
shr
cltd
push
jl
adc
cmpsl
sub
insb
add
lret
adc
gs
cmp
cmp
cmpl
mov
daa
push
mov
and
loope
inc
imul
xor
test
or
daa
adcb
int3
cmp
jmp
mov
fistpll
push
jae
subl
push
jg
and
roll
lcall
out
pop
ljmp
jp
rcrb
cltd
xlat
or
lods
jmp
ds
stc
incb
push
or
cltd
xor
adc
int
xchg
test
aad
fyl2xp1
hlt
push
ret
movsl
push
es
aaa
outsl
adc
stos
mov
pop
jmp
cmp
std
mov
jp
in
pop
mov
mov
pop
and
add
lea
jecxz
stos
push
add
das
sbb
jb
push
mov
pop
or
mov
xlat
inc
mov
ror
movsb
orl
push
je
dec
and
cld
sub
mov
lcallw
pusha
adc
not
xchg
inc
aad
pushf
adc
in
xlat
and
pop
mov
sub
sti
aam
xorl
lahf
aam
mov
vmovhpd
into
imul
sub
in
mov
imulb
test
or
and
pusha
sub
sub
insb
rcll
cmp
adcb
jmp
fmuls
addb
jmp
sahf
addr16
out
adc
arpl
test
push
orb
lret
into
or
mov
jl
adc
mov
push
push
pop
std
sar
inc
outsb
mov
sub
add
test
inc
scas
mov
sub
or
fbld
xor
xor
mov
pop
inc
outsb
add
daa
add
push
mov
fsub
sbbl
rolb
add
sub
jg
pop
in
sti
repnz
fsubrs
ret
xchg
inc
push
aaa
pop
pop
fs
jns
addr16
repz
mov
pop
jmp
mov
lock
sbb
shr
push
sub
mov
mov
xchg
sub
cltd
gs
and
addl
out
xchg
and
or
xchg
mov
and
scas
cld
push
imul
gs
xchg
jecxz
jb
jnp
outsb
addr16
mov
ret
push
out
pop
sbb
cmpsb
popw
push
mov
push
mov
pop
andb
xchg
push
scas
insl
fsubrs
ret
jg
cmp
aam
mov
inc
in
lret
hlt
lea
repnz
mov
mov
mov
inc
mov
add
pop
jno
int
jle
push
add
jmp
or
pop
inc
add
popf
dec
cltd
arpl
imul
scas
cmpsl
icebp
push
pop
push
jecxz
or
fbld
dec
add
stos
fldl
pop
pop
adc
repz
sqrtps
insl
lods
sti
leave
out
add
add
adc
in
mov
mov
jmp
push
push
jmp
int
out
mov
data16
jl
add
ss
neg
pop
loopne
mov
jecxz
stos
push
cmp
inc
adc
jmp
out
shlb
xor
stos
popf
push
jl
mov
pop
add
popa
loopne
sub
inc
xchg
loopne
sbb
mov
push
xlat
loopne
daa
rorl
rolb
adc
les
inc
cmpsb
pop
popa
fimuls
mov
bound
adc
mov
repz
xchg
or
insl
mov
xor
sub
xor
not
hlt
add
in
push
sub
nop
mov
das
mov
notb
jmp
dec
mov
in
jo
sub
dec
push
ljmp
loop
pop
iret
add
dec
imulb
adc
lcall
shll
sub
pop
cs
dec
out
add
pop
ljmp
or
jo
bound
aas
push
mov
and
pop
xchg
mov
pop
mov
lret
imul
add
inc
pop
add
hlt
mov
sub
outsl
and
mov
ss
unpcklps
shll
adc
aaa
xor
add
mov
add
inc
or
jecxz
std
pop
add
lahf
jae
or
pop
add
daa
mov
xchg
adc
pop
or
aad
outsb
cmc
jge
push
pop
pop
sub
cmpsb
mov
add
movsl
js
or
lds
and
mov
mov
add
and
stc
les
loope
push
jmp
xlat
mov
ret
out
sub
sbbb
push
bound
mov
jg
xchg
pop
clc
pop
rorb
out
jmp
add
sub
sti
push
mov
xor
push
lret
cli
nop
pop
sbb
pop
rcr
cmpb
mov
stos
in
pop
mov
mov
push
or
out
jle
mov
pop
push
sub
or
add
clc
outsl
rorl
fisubs
or
xor
sub
lea
rorl
sti
sub
adc
inc
mov
pop
push
adc
loope
mov
mov
mov
rcrb
mov
inc
mov
push
out
call
mov
negb
xchg
mov
mov
stc
cwtl
sbb
dec
add
cmpsb
adc
inc
sub
mov
sbb
andb
cs
push
or
cmpsb
cs
lds
sbb
xchg
lock
mov
adc
repnz
and
mov
cmc
pop
loopne
mov
nop
xor
dec
inc
int3
fisttpl
out
sbbb
incl
test
aam
daa
push
in
add
out
and
xor
into
pop
add
hlt
imul
repz
pop
or
push
shr
pop
cltd
out
popa
jle
inc
xor
jge
out
dec
pusha
add
lods
sbb
sub
jp
cli
dec
mov
ss
add
lret
mov
mov
cmpsb
loopne
sbb
out
adc
push
movsl
mov
clc
loope
and
iret
dec
sub
adc
xchg
mov
jle
mov
push
inc
enter
in
sub
jmp
lahf
xchg
outsb
scas
mov
movsb
sbb
add
jle
imul
xchg
dec
add
jg
fiaddl
mov
push
sub
xor
repnz
mov
and
cmp
shlb
imul
mov
mov
pusha
cmp
mov
pop
xchg
and
sub
lahf
inc
push
push
and
sarl
jge
daa
jno
int3
pop
pop
cltd
popf
fs
add
mov
push
push
andb
and
pop
push
jg
dec
sub
jmp
repnz
ret
jmp
jmp
cwtl
fcompl
stos
fst
fs
dec
fwait
cs
xchg
call
ljmp
mov
jmp
pop
mov
pop
adc
jnp
movsl
lret
dec
cli
into
dec
aam
mov
jmp
dec
lods
add
push
pop
or
test
dec
add
dec
xor
or
pop
add
subl
fdivrs
adcb
push
fisubl
cmp
xor
stos
lahf
dec
les
xchg
xchg
and
cmpsl
ret
add
mov
sbb
and
xchg
insl
jne
push
adc
movsb
and
fucomip
iret
push
xor
mov
xchg
lods
ljmp
cs
push
push
push
fmull
or
outsb
push
iret
inc
push
dec
xor
pop
adc
inc
out
or
cs
call
push
outsb
push
leave
movsb
insl
out
out
dec
lock
or
shl
sbb
sub
add
cmp
sahf
mov
icebp
and
pop
mov
pop
add
mov
jns
or
push
sub
xlat
shlb
add
sbb
pop
jnp
xchg
push
in
mov
outsl
loop
aad
jp
subb
mov
nop
xor
xchg
inc
leave
aad
or
cmp
sbb
sarl
add
adc
or
pushl
lret
add
jmp
or
bound
in
fwait
es
inc
xor
aaa
sbb
xor
pop
stc
or
les
xchg
out
test
pushl
mov
sub
pop
mov
push
and
lahf
cwtl
xchg
inc
pop
bound
dec
lds
push
mov
stos
and
push
pop
test
push
push
adc
test
aad
jo
mov
sarl
lahf
push
push
in
loop
bound
or
clc
testb
rorb
push
daa
pushf
clc
push
sti
lds
mov
cmp
jnp
movsb
jo
int
and
ret
xchg
fsubs
orb
adc
or
lahf
jo
jp
push
add
scas
xlat
nop
mov
das
pop
push
add
sub
rol
insl
dec
push
jo
dec
add
add
cli
out
and
aad
or
push
in
jmp
sbb
dec
pusha
rol
dec
testb
xor
decl
jecxz
enter
mov
in
adc
aad
pop
and
xchg
xchg
pop
add
mov
subb
insb
aad
hlt
adcb
outsl
xchg
movsb
sbb
push
sarl
or
outsl
inc
push
in
dec
mov
mov
xor
movsb
push
es
les
test
sbbl
cwtl
sti
lock
enter
jg,pn
mov
mov
loopne
in
pop
lret
mov
ret
ja
mov
or
popf
add
add
hlt
insl
sbb
and
cmp
out
xor
dec
fldenv
cmp
fs
outsb
loope
mov
das
mov
ficompl
inc
flds
in
xchg
test
add
orl
jmp
pop
xor
roll
aaa
push
stos
or
mov
and
fwait
and
pushf
stos
icebp
lods
hlt
xchg
pop
scas
ret
loopne
add
popf
pop
push
push
jmp
cltd
es
cmp
jge
aad
push
fldenv
out
rcrl
fcom
sub
in
test
subb
lcall
fs
dec
push
ret
shrb
aad
xlat
mov
and
test
adc
mov
mov
pop
test
sub
mov
cmp
lods
cmp
mov
or
aam
mov
sub
outsb
addr16
push
fcomps
insb
fs
sub
ds
sub
shlb
xor
movsb
mov
int
ficoms
dec
cmp
gs
aam
xor
pop
mov
xor
mov
jge
dec
pop
cmpb
sub
mov
mull
fists
inc
ret
mov
imul
pop
jmp
or
adc
pop
xor
mov
sbb
inc
shrb
fcomps
xor
jbe
xor
add
mov
mov
inc
mov
push
cmova
stos
aam
add
dec
dec
xor
and
adc
xchg
in
nop
fwait
add
sub
push
and
pop
or
sub
loop
fisttpll
add
into
inc
dec
push
in
stos
add
inc
adc
in
xor
jmp
push
mov
adc
xor
cmpsb
pop
fmull
neg
hlt
cmp
test
jmp
mov
jmp
cld
mov
cmp
inc
inc
ljmp
push
xchg
push
jnp
and
push
push
mov
cmp
dec
push
subb
and
push
dec
loopne
shrl
call
outsb
lock
inc
lods
dec
mov
adc
or
sti
icebp
xchg
outsb
repnz
mov
data16
shr
ret
inc
andl
adc
mov
push
jg
push
pop
and
out
and
add
add
mov
push
ret
out
dec
push
pop
add
mov
lods
and
imul
cmp
jle
mov
jo
rorb
push
dec
jmp
movsl
fdivr
xor
sbb
inc
xchg
cmp
mov
jb
push
inc
test
cli
dec
xchg
jmp
jns
push
or
out
dec
cli
jl
jmp
mov
sbb
xchg
das
push
xchg
adc
mov
outsl
push
sub
pop
add
scas
fwait
jns
repnz
mov
jecxz
xchg
sbb
mov
push
dec
jl
ficoms
negl
rclb
mov
mov
stc
push
jg
pop
or
add
jle
and
bound
dec
dec
and
jmp
mov
push
sub
lods
xchg
inc
push
add
pop
ljmp
pusha
sub
xchg
lcall
xor
mov
iret
gs
jmp
loope
dec
icebp
ret
jge
mov
cwtl
dec
jne
mov
or
sarb
xchg
or
push
aas
jno
cmc
test
sarl
sbb
mov
sub
add
xchg
es
cmp
xchg
sub
add
and
pop
pop
add
jb
lods
je
jle
inc
shl
xor
add
clc
pop
push
mov
repz
push
add
adc
cli
lahf
clc
and
inc
xchg
push
sub
jae
sar
shrb
sahf
repnz
insb
mov
jns
lret
fldcw
subb
ss
push
pop
fdivrl
and
rorb
movsb
mov
xchg
pop
shl
aas
xchg
pop
mov
sub
je
adc
and
or
out
xor
daa
jmp
mov
push
adc
cmp
ret
adc
jl
pop
lret
in
call
jnp
pop
lea
jno
imul
push
js
shll
pop
cli
inc
aad
addr16
xchg
ja
sahf
pop
sbb
and
dec
cmpl
push
push
jg
std
nop
aam
jo
sub
sti
push
iret
or
out
lret
mov
adc
pop
orl
pop
dec
addr16
insb
sbb
leave
and
jbe
and
pop
ja
mov
ss
xchg
jae
mov
in
pcmpgtd
or
roll
dec
add
pop
sub
push
push
jno
lahf
add
xchg
mov
movl
cmp
mov
es
and
ljmp
cmp
cld
or
rorl
cltd
lods
mull
adc
or
cmp
dec
out
aas
loop
shll
lock
stos
add
xor
xchg
movsb
cmpl
push
dec
fcom
je
icebp
adc
dec
xor
adc
jmp
popa
lret
pop
lods
xchg
add
xor
lock
es
pop
dec
clc
aad
cli
mov
xor
lods
cmp
test
lods
js
sub
imul
sub
xor
pop
push
push
jmp
ret
pop
xchg
in
xor
jo
scas
clc
stos
mov
nop
xor
mov
test
mov
cmp
out
sub
sub
cmpb
insl
shl
jmp
mov
push
xchg
lea
push
push
inc
ja
mov
loopne
fsub
stos
dec
hlt
mov
ds
sub
pop
mov
dec
or
sub
gs
aas
xchg
mov
mov
dec
push
adc
ljmp
fisttpll
mov
das
scas
cmp
loop
aam
add
mov
adc
or
ficoms
ljmp
cmp
add
push
out
sub
mov
mov
into
les
out
cltd
adc
dec
or
jg
in
add
mov
sub
mov
mov
pop
das
push
xor
mov
jmp
into
test
dec
push
pop
jmp
add
pop
sbb
cmpsl
cmp
jo
sub
inc
pop
jne
adc
sbb
sbb
ret
add
push
push
pop
push
inc
shll
pop
mov
rol
mov
mov
in
negl
sub
orl
jecxz
add
cs
xor
lret
arpl
mov
mov
xor
hlt
clc
ret
mov
shl
notl
das
pop
sub
adc
fisttpll
shll
shrb
dec
pop
scas
adc
testb
arpl
jmp
add
cmc
cmpsb
pop
mov
pop
std
sbb
jle
in
cmp
inc
cmp
sarl
inc
pop
mov
cmpb
cwtl
movsb
mov
pop
and
jbe
add
insb
inc
neg
mov
fs
mov
dec
sub
jo
mov
add
xor
ret
mov
dec
xchg
leave
les
lea
pop
popf
pop
xorb
mov
or
and
popa
cmc
sbb
xchg
call
push
inc
push
xchg
adc
scas
fwait
call
cmc
add
adc
das
cld
notl
inc
push
sub
dec
les
xchg
xor
add
fptan
mov
adc
out
push
ja
sbb
pusha
insl
testb
inc
inc
or
adc
into
sbb
stos
add
and
cmp
popa
out
or
aaa
xor
adc
int
dec
jmp
movlps
fistpl
cmp
shl
scas
xlat
jno
jg
adc
cmp
pop
lret
add
push
dec
add
jmp
cmpsl
dec
sbb
push
mov
jg
mov
sub
fwait
movsl
or
xor
test
sub
mov
in
int3
icebp
mov
in
movsl
inc
jnp
sub
inc
sub
adc
jge
xchg
lds
std
sti
pop
mov
flds
sarl
sbb
iret
std
leave
push
pop
jne
loop
or
push
or
dec
push
add
mov
mov
lret
or
xchg
hlt
sub
add
pop
jb
add
leave
push
jno
clc
pop
dec
mov
inc
pop
adc
ret
dec
sub
dec
std
shll
cmpsl
jne
hlt
ss
inc
bound
pop
and
out
fisttpll
and
aam
out
jge
pop
mov
or
mov
add
or
jmp
mov
aam
out
leave
push
cs
adc
stos
adc
pop
xchg
ds
rorb
jbe
out
aas
test
scas
pusha
scas
mov
add
jmp
lds
add
pop
mov
add
inc
dec
and
in
xchg
stc
nop
xchg
pusha
push
repnz
sbb
xor
mov
inc
rclb
dec
daa
dec
jne
push
loope
jge
dec
pop
sub
mov
adc
xchg
pop
sbb
jmp
pop
pop
cmp
pop
add
dec
and
or
test
les
mov
iret
leave
andl
imul
push
inc
push
fistl
pop
stos
mov
idivl
ret
xorl
cli
mov
inc
jb
adc
jmp
xor
js
idivb
push
inc
mov
mov
fdivrl
jns
fcomps
xor
and
punpckhwd
lret
push
mov
or
mov
popf
leave
clc
xor
xchg
mov
add
rorl
xor
inc
xchg
or
lods
mov
dec
je
test
pop
pop
mov
stos
sub
cs
decl
xor
xor
pop
xchg
adc
xchg
mov
inc
and
or
cmp
jno
jbe
repnz
aas
mov
mov
push
mov
or
jnp
fldl2e
in
xor
push
inc
fs
es
dec
adc
add
add
lods
mov
in
pop
shll
sub
mov
stc
mov
jo
jge
jg
jns
inc
dec
fwait
loopne
jnp
pop
jmp
cmp
daa
or
sub
mov
int
loope
repz
jmp
add
lds
jmp
mov
les
add
and
outsl
or
jo
cmp
in
imul
rorb
test
adc
imul
inc
or
cmp
in
loopne
push
sub
stos
rorb
sarb
add
dec
pand
cld
jb
cmpsb
icebp
push
add
and
cwtl
xchg
push
mov
fst
mov
lret
pop
push
inc
fxch
outsb
daa
out
mov
mov
adc
pop
add
rorl
enter
jecxz
popf
addl
movsb
adc
inc
push
sbb
dec
jge
and
and
push
xlat
ljmp
in
or
push
negb
dec
cmp
push
sbb
sub
and
les
jbe
push
call
subb
adc
das
pop
push
adc
sbb
or
les
xchg
movsl
push
int
adc
pop
scas
jge
or
and
xchg
out
andl
int3
or
sar
loope
stos
lea
pop
into
or
jp
xor
in
mov
arpl
jle
incl
call
xchg
or
mov
pop
inc
and
inc
inc
xor
addr16
popa
pop
stos
les
adc
mov
cmp
push
add
jecxz
mov
test
inc
fcoms
gs
or
inc
movsb
out
arpl
xor
fwait
sbb
cltd
shll
sub
sbb
mov
xorb
sub
or
in
mov
or
inc
sbb
inc
mov
les
call
pop
les
frstor
push
dec
enter
std
inc
sub
sub
xor
mov
cmp
push
inc
and
mov
or
fs
add
ret
test
dec
add
mov
loopne
or
mov
or
inc
push
mov
test
add
xor
dec
sub
mov
lds
mov
dec
push
adc
mov
mov
leave
sbb
add
xor
jo
enter
mov
or
pop
xor
rcl
sbb
fs
push
xor
jnp
hlt
pop
les
aas
movsb
push
pop
dec
adc
ret
cmp
les
int
add
sub
mov
mov
and
popf
add
jne
pop
xor
xchg
add
andl
sarl
mov
fisttps
or
add
cmpsb
cmp
and
jmp
and
and
xor
sub
lock
sbb
mov
dec
ret
sbb
pushf
cld
call
mov
mov
cmp
vmovupd
inc
add
sbb
mov
add
dec
dec
or
jne
mov
shlb
adc
shl
sbb
push
mov
or
jl
mov
xor
add
pop
inc
push
aas
cwtl
out
out
cmp
out
aas
jb
fmulp
or
loop
pop
lds
xor
add
aad
je
rolb
popa
jmp
scas
inc
sbb
inc
sbb
add
sahf
adc
mov
cmp
test
popa
dec
or
ljmp
enter
add
aad
xor
add
gs
sbb
mov
mov
arpl
jp
pop
mov
das
xor
clc
gs
punpckldq
and
add
sub
add
sbb
out
inc
int
ror
pop
jmp
add
ljmp
in
mov
push
mov
dec
out
sub
addb
push
mov
cli
and
mov
dec
cli
or
sub
lock
out
stc
sbb
pop
sub
push
pusha
jmp
ret
call
pop
shrl
orl
add
test
repnz
add
xchg
dec
jmp
mov
push
das
push
imul
into
hlt
addr16
lock
cmpsl
push
push
insb
lock
mov
push
mov
subb
loopne
ds
fs
xchg
popa
push
pop
push
sub
pop
dec
pop
mov
or
rolb
add
mov
inc
shr
cmp
sub
push
sub
mov
jmp
in
or
pusha
negb
testl
sarb
mov
jmp
xor
dec
std
cli
and
adc
adc
inc
rcll
cmp
lock
cli
xchg
xchg
mov
dec
or
nop
aad
xchg
cmp
mov
int
push
pop
push
jmp
ljmp
imul
sbb
stc
jnp
hlt
loope
mov
xchg
lds
test
mov
stc
sbb
notl
ret
add
sbb
pop
fstps
test
mov
bound
add
jl
leave
aas
incl
push
aam
pop
popf
fs
and
xchg
hlt
push
bound
ds
js
xor
mov
les
mov
ret
xor
outsl
jle
xor
or
test
xor
and
insb
bound
inc
adc
jne
add
mov
cli
add
cwtl
pop
push
imul
xor
repz
pop
lahf
in
popa
je
add
leave
lea
adc
or
outsb
cmpsl
xchg
test
mov
rclb
push
shll
inc
push
mov
xor
loop
lret
sbb
inc
dec
jbe
mov
add
aas
loope
popa
add
xchg
cwtl
mov
js
ret
repnz
scas
test
jns
mov
pop
std
test
fdivrp
mov
stos
je
or
push
mov
jne
pop
cwtl
jecxz
mov
xorb
pushl
add
push
stos
lds
enter
xchg
mov
adc
push
and
xchg
xor
sub
mov
mov
sarb
add
jbe
insl
shr
pushf
or
lock
fimuls
add
adc
addr16
fisubrl
push
add
popa
sub
push
dec
inc
loopne
mov
add
lock
jmp
push
lahf
push
sub
xchg
push
mov
jmp
sub
jge
test
sub
sar
bound
xchg
filds
inc
aad
inc
add
push
cltd
pop
push
stos
cli
cmp
mov
sbb
pop
cmp
push
scas
int
add
mov
frstor
bswap
shlb
xchg
out
xchg
popa
lret
and
out
sti
insb
mov
and
dec
pop
pause
sub
in
nop
lret
stos
cs
sbb
sbb
jae
jmp
jb
push
jnp
daa
jno
sahf
lret
push
mov
push
shlb
add
dec
test
jp
and
sbb
pop
sub
xor
prefetch
pop
jg
or
xchg
hlt
pop
sub
lods
or
push
or
mov
imul
aad
shll
cmp
pop
mov
ss
repz
cs
or
push
jbe
push
pusha
outsl
je
dec
lahf
aam
pop
std
sub
pop
js
jmp
pop
nop
push
test
inc
sbb
jp
adc
jo
pop
pop
xlat
pusha
or
sub
ja
add
js
or
inc
lds
das
das
call
xchg
int3
mov
icebp
sub
sbb
icebp
sbb
xchg
sbb
cli
and
mov
mov
mov
das
sub
dec
adc
imul
cli
adc
and
jmp
sti
sub
push
xor
out
mov
jecxz
imul
push
jmp
jnp
mov
push
inc
and
roll
fcom
jp
ret
and
and
bound
xor
notl
dec
mov
fs
mov
xchg
lods
xor
cmp
adc
jg
inc
add
adc
push
mov
inc
pandn
inc
pop
andb
mov
pop
sbb
sbb
fstl
pop
les
shrb
pusha
lret
icebp
andb
sub
mov
stos
jl
pop
shr
jns
dec
xor
add
sbb
xchg
clc
sub
daa
dec
cld
add
das
push
loope
jmp
in
push
pushf
and
scas
adc
cwtl
sub
and
inc
xchg
std
sub
dec
jecxz
adc
sub
cs
aas
sub
shrb
addr16
ror
pop
xor
push
stc
dec
sub
test
and
hlt
jle
sbb
mov
add
cmp
mov
pop
push
or
adc
xor
pop
mov
pop
loopne
cmpsb
jb
movsl
or
shlb
xor
sti
bound
push
mov
fisttps
sbb
sub
and
sub
lea
xchg
mov
push
and
xchg
lods
or
jns
push
fidivs
gs
push
inc
jne
mov
lret
fildl
cwtl
or
pop
xor
inc
push
mov
and
mov
cmp
add
rdmsr
inc
popf
xlat
cmpsl
jmp
xor
mov
clc
out
lds
call
sub
js
jmp
fistps
lret
pop
dec
add
and
pop
jno
pop
inc
jle
test
cmp
or
mov
and
lods
mov
pop
dec
shlb
mov
cmpl
scas
fnstenv
jae
sahf
call
mov
dec
push
pop
shl
stc
dec
add
adc
xchg
mov
xor
pop
xor
out
insl
xchg
in
push
and
stc
into
push
iret
rcrl
aaa
jmp
mov
fdivp
mov
bound
dec
cld
leave
jle
loopne
adc
in
lcall
insl
jg
outsb
xorb
adc
push
test
lds
pop
add
out
lahf
push
addr16
rclb
and
int
movsl
ret
sbb
sbb
std
not
xor
sub
call
mov
adc
add
add
xor
dec
mov
arpl
or
dec
xor
cwtl
add
mov
inc
pop
neg
push
jnp
sub
add
jmp
and
sbb
mov
in
lcall
fcompl
pushf
push
xor
mov
ljmp
repnz
ja
test
cmp
or
cwtl
ja
add
out
push
sub
inc
aad
and
jg
lods
sbb
dec
bound
ds
sbb
enter
insl
jg
push
ja
mov
or
repnz
or
js
dec
cmp
psubusw
sarl
ficoms
mov
push
add
dec
insb
sbb
mov
cmp
push
cmp
or
dec
jecxz
sub
sub
push
popl
stos
andb
scas
ds
mov
jo
mov
add
jecxz
cwtl
xchg
pop
rcrl
and
add
bound
out
fsub
xchg
mov
mov
jmp
jle
popa
not
xchg
or
jmp
mov
imul
dec
in
cmp
loopne
add
jae
adc
jb
jbe
jl
sar
lret
push
mov
je
xchg
ljmp
push
in
sub
cmp
sub
adc
ja
lea
sub
loop
jbe
pop
lret
push
mov
imul
adc
ret
sbb
push
ja
sti
add
adc
mov
and
aas
add
lcall
cmpb
in
dec
mov
mov
xor
add
aam
lahf
pop
and
sub
leave
aam
cmp
push
stos
inc
add
xor
sarb
dec
mov
dec
dec
or
iret
mov
jo
pop
push
in
pop
pop
inc
test
aaa
adc
dec
popa
jmp
or
in
enter
ja
int3
or
orl
mov
pop
add
sub
test
loop
jnp
ss
pop
push
loope
rcll
add
insb
pusha
fnstsw
jmp
push
out
push
daa
and
icebp
dec
mov
push
das
mov
loopne
scas
push
lods
push
sarl
mov
xor
add
mov
sarl
movsl
sub
pop
icebp
lret
sub
js
pusha
shlb
mov
dec
fcomps
push
imul
add
fmuls
and
or
xor
add
add
stos
jecxz
dec
dec
adcl
cltd
add
fmulp
pop
aad
fdiv
jno
or
lcall
mov
jmp
pop
shl
and
adc
mov
mov
xor
push
push
sbbl
shll
sti
fnstcw
mov
ret
dec
enter
sub
cmpsb
shrl
jb
inc
js
pop
push
scas
inc
in
sub
subl
xchg
js
jl
fisttpll
add
popa
sbb
popa
xor
daa
lods
mov
rolb
loop,pt
adc
mulb
push
mov
mov
mov
in
jns
inc
push
xchg
xchg
fstpl
sar
sub
cwtl
mov
or
push
dec
ja
inc
lock
mov
dec
and
daa
pop
mov
stc
xchg
add
in
push
mov
xchg
daa
aad
or
imul
mov
push
xor
xor
mov
ds
repz
push
sub
adc
ljmp
add
add
inc
or
xor
add
mov
hlt
adcl
or
rcll
shlb
in
mov
push
dec
test
add
mov
xlat
leave
ds
jmp
add
add
xchg
cmp
push
add
xchg
movl
andl
loop
cmp
shl
mov
cs
pusha
sbb
inc
jecxz
daa
cmc
test
test
stos
fucom
fwait
nop
in
leave
gs
outsb
pop
fsubrs
push
lds
repz
ret
xor
test
push
dec
sbb
jne
mov
adc
out
lods
and
out
or
and
sbb
push
mov
out
out
cli
dec
loopne
or
scas
mov
dec
xor
jne
adc
jmp
or
add
fcomps
not
out
add
xor
push
shl
add
push
add
dec
fld
ds
mov
mov
and
dec
sbb
dec
fiadds
les
add
ljmp
mov
and
cltd
or
clc
sub
mov
xchg
daa
out
add
out
jecxz
test
aad
ret
sbb
pop
jns
inc
lock
ljmp
insb
mov
pop
ret
push
adc
cmp
mov
jl
sahf
xchg
mov
cmpsl
push
int3
dec
xchg
or
sub
stos
in
push
xchg
invd
orb
shll
mov
or
xorb
inc
or
push
sub
inc
arpl
mov
cmc
inc
clc
add
jmp
inc
cmp
push
dec
push
or
fildl
or
pusha
push
jne
hlt
loopne
pop
sar
stc
push
add
xchg
xorl
cmp
jmp
xor
mov
lds
fnsave
xor
add
jmp
add
jecxz
cmpsl
mov
dec
test
les
je
cmpsb
aam
pop
in
in
sbb
lods
scas
jbe
outsl
add
push
movsb
cmp
daa
add
sti
xor
and
xchg
inc
and
dec
inc
jmp
mov
popf
pop
mov
pop
out
icebp
xorb
neg
scas
in
fisubrs
mov
ja
fs
dec
pop
in
and
fisubl
lea
xchg
fldcw
pop
xor
mov
stos
clc
outsl
mov
push
push
jmp
cmp
pop
dec
sub
dec
add
jno
mov
aad
xchg
jne
std
xor
pop
jmp
ja
sub
sbb
xor
out
and
or
dec
leave
shrb
into
leave
lcall
add
hlt
pop
leave
lcall
notb
push
loope
add
movsb
dec
roll
xor
push
push
push
stc
out
dec
rcl
lret
insl
add
cmp
cmpsl
les
out
lret
dec
jbe
jecxz
or
sub
lcall
outsb
popa
inc
aam
adc
jne
lods
jle
add
pushf
insb
mov
add
jle
ja
mov
lahf
repz
and
pop
neg
jne
icebp
pop
jp
inc
jae
inc
jge
push
dec
enter
leave
lds
test
and
daa
or
fidivs
or
sahf
xchg
jecxz
fstps
sbb
add
push
xchg
add
jb
pop
jge
fwait
in
add
repnz
test
or
push
push
or
mov
ljmp
daa
pop
inc
dec
push
fnstcw
push
std
leave
xlat
in
jp
ficoml
add
push
inc
xlat
out
js
sti
fdiv
scas
add
pop
dec
jl
sub
clc
cmp
jge
sub
jge
pop
ret
sub
jmp
addl
shlb
push
sbb
int3
mov
add
or
mov
cmp
out
add
push
cmpsl
enter
xor
jmp
loopne
clc
imul
cs
or
cmp
es
test
js
add
add
push
mov
mov
mov
rcll
flds
sbb
das
pusha
push
dec
jbe
orb
sbb
push
loop
jg
xor
add
mov
cmp
jo
into
sub
mov
movsb
or
sub
cmpsl
pop
test
adc
mov
mov
sbb
imul
mov
or
adc
sub
sbb
mov
loop
dec
out
cli
int
iret
and
mov
mov
shr
loopne
inc
cltd
mov
xchg
cwtl
push
lahf
inc
sub
jbe
jnp
and
add
insl
lahf
push
nop
dec
movsl
add
push
jne
test
mov
add
xor
push
shrl
sub
mov
dec
xor
mov
out
nop
adc
xor
dec
scas
notl
jns
pusha
aaa
dec
scas
push
cwtl
les
jae
inc
clc
or
nop
out
mov
testb
mov
cld
cwtl
jp
negl
inc
push
push
xor
popf
cmc
lds
neg
outsl
dec
or
sub
fidivl
ret
int3
repz
and
and
sub
push
push
jbe
inc
sbb
fisttps
fbld
inc
or
mov
sbb
jo
push
or
mov
rcrb
push
xchg
imul
insl
es
add
pop
push
push
or
push
jb
push
dec
sbb
sub
adc
xchg
fcoml
jmp
xchg
scas
aaa
mov
dec
ljmp
jmp
xchg
in
mov
ret
add
fldenv
aas
cwtl
push
mov
iret
mov
lods
dec
adc
rclb
mov
push
xor
pop
jmp
adc
push
dec
sub
xchg
push
jns
decl
xchg
ljmp
in
mov
insl
dec
pop
call
stos
xor
loop
mov
or
add
into
mov
xchg
out
mov
xchg
popl
jmp
ficoms
push
cmpb
sub
fsubrs
movsl
xor
push
xor
lods
jne
call
mov
adc
roll
shll
scas
sub
mov
and
filds
pop
push
push
add
pusha
cmp
ljmp
cld
std
or
inc
adc
adcl
xlat
iret
mov
enter
jp
mov
jno
add
lcall
sub
fmull
adcl
sub
jmp
aas
sbb
jmp
pop
sub
sbb
stos
shrl
add
jo
sbb
jnp
shrl
add
inc
cwtd
adc
xchg
xchg
mov
popf
pop
fcomi
aas
pop
imul
jae
stos
mov
das
inc
xchg
inc
outsl
mov
data16
cmpsl
mov
cwtl
addr16
push
test
mov
js
xchg
jo
pop
dec
add
int3
mov
xchg
mov
rcll
pop
mov
loopne
jnp
cs
sub
adcb
testl
mov
dec
fbld
inc
dec
lock
xor
add
xlat
mov
dec
add
jmp
mov
add
dec
jmp
xchg
mov
mov
addr16
mov
mov
inc
xchg
and
fcomip
out
rcll
xchg
and
pop
add
das
adc
mov
jnp
push
push
out
xor
mov
jge
out
rcll
sub
inc
inc
xor
dec
fsubp
jbe
and
clc
dec
in
dec
inc
scas
or
add
scas
xchg
and
repz
test
mov
dec
add
jp
aas
mov
mov
rolb
nop
xor
cli
jb
mov
lods
and
push
leave
dec
dec
mov
jecxz
es
daa
out
inc
pop
fiadds
jb
inc
or
out
clc
arpl
mov
popa
sbb
jmp
push
and
ret
sbb
dec
in
inc
out
mov
enter
outsb
orb
cmc
xchg
jno
es
bound
jne
in
push
xor
sbb
lret
mov
push
lret
cld
jnp
and
mov
mov
mov
clc
add
jmp
push
xlat
xchg
out
and
pop
fnsave
mov
adc
pop
and
not
pushf
andb
mov
push
jmp
pop
mov
xor
mov
iret
adc
mov
filds
dec
repz
inc
jno,pt
aam
push
and
jo
inc
btr
test
sti
test
loopne
sub
mov
and
cmp
adc
mov
cmc
test
ss
dec
mov
cmpsl
pop
or
xchg
lds
sbbl
or
xor
xchg
aas
jp
mov
inc
push
sub
pop
cli
jno
jmp
pop
pop
cmp
negl
adc
or
mov
pop
adc
loopne
pop
outsb
es
push
pop
push
and
mov
cli
push
cwtl
dec
inc
iret
prefetchnta
sub
xor
jne
mov
in
mov
int3
adc
data16
inc
add
fs
sbb
and
add
pop
sti
fcmovu
vmread
nop
or
xchg
fmuls
aaa
fisttpll
lods
push
or
cltd
xor
aas
repnz
adc
ret
lahf
mov
sub
pop
out
call
mov
shrl
cmp
jmp
fstps
negl
jns
mov
add
clc
pusha
orb
imull
push
mov
cs
cs
popf
loope
mov
mulb
dec
sub
imul
xchg
push
inc
sbb
rcrb
jg
fstps
movsb
ret
jmp
jnp
incl
or
xor
push
popf
enter
add
dec
cmp
clc
inc
stc
mul
mov
sub
sub
or
inc
mov
insb
xchg
clc
lret
out
pop
gs
inc
stos
push
je
imul
clc
insb
movsb
or
pop
sub
pop
fstpl
cmpsl
push
shl
push
jecxz
dec
add
dec
inc
jno
iret
es
pushf
fs
dec
scas
dec
push
orb
jae
scas
in
or
cmpl
lds
or
adcl
gs
xor
and
add
fisttpll
pusha
inc
out
or
pop
push
xor
mov
and
adc
lods
jb
hlt
enter
mov
push
push
fucomi
inc
add
mov
test
std
dec
push
les
pop
push
imull
test
push
jno
out
add
dec
pop
imul
pop
push
cmp
call
and
ss
fidivrl
adcl
mov
pop
pop
mov
cltd
push
cmc
das
in
push
dec
push
test
mov
stos
aam
sub
insb
mov
mov
out
cltd
mov
lret
mov
sbb
insl
fsubrp
mov
add
into
xor
pop
mov
xchg
and
int3
das
push
scas
mov
movups
or
test
mov
jo
popa
enter
int
mov
add
dec
sub
mov
stos
call
aad
ljmp
push
push
push
pop
adc
adc
jecxz
cmp
inc
rcl
cmp
jg
mov
lods
or
pop
shll
js
pop
mov
pop
scas
xchg
push
mov
out
call
mov
out
push
jne
mulb
xorl
sbb
and
mov
jmp
push
out
xor
test
js
fidivrl
outsl
orl
pop
in
push
pop
sbb
daa
leave
stc
push
push
ds
inc
dec
xor
cltd
dec
jge
push
and
loopne
ret
pop
push
or
mov
sub
dec
or
andb
in
or
inc
xor
pop
andb
or
add
movl
jne
inc
xor
add
add
xor
stc
add
cltd
add
mov
bound
shl
sahf
or
pop
add
outsl
repnz
sub
xchg
push
stos
xor
xchg
jns
jns
adc
sub
jp
pop
ret
pop
je
cmpsb
dec
je
out
mov
es
gs
and
or
fildll
adc
sub
in
inc
sti
in
pop
dec
and
jne
outsl
cmpsb
sub
mov
mov
pushf
mov
inc
es
sbb
icebp
sbb
pop
push
mov
push
add
xchg
sbbl
dec
out
adc
repz
ret
or
arpl
fcomps
dec
fs
mov
inc
xor
xor
mov
pop
pushf
clc
push
fiadds
cmp
stos
repz
into
push
fsts
lea
sbb
xor
dec
out
or
and
push
sbb
sbb
add
push
repz
hlt
dec
cmp
icebp
shrb
push
repz
cli
xor
test
mov
push
cmp
ss
push
movzwl
sahf
addr16
cwtl
movmskps
mov
add
mov
rcll
add
cmp
shrb
pop
xor
fcoms
test
add
adc
sub
cmp
push
and
sbb
les
or
cmp
mov
xor
pop
and
mov
jecxz
pop
sub
clc
dec
adc
icebp
pop
add
addr16
or
callw
pop
push
mov
pop
and
or
test
fdivrs
pusha
cmp
xchg
xchg
pushf
jb
sub
out
gs
stos
daa
cld
sub
push
push
mov
cs
inc
jmp
mov
adc
jmp
xchg
aam
popa
adc
movsb
adc
sub
mov
sbb
cmp
adc
push
xchg
test
sarl
pop
inc
cmp
in
ds
ljmp
push
dec
add
xchg
stc
pop
push
int3
push
mov
mov
mov
or
and
dec
or
mov
add
jle
arpl
xchg
or
cld
mov
push
mov
xchg
inc
dec
or
jmp
lock
pop
fists
mov
test
fadds
jbe
add
sub
add
add
fiadds
lret
adc
xor
mov
adc
sub
cltd
and
mov
sbbb
imul
loop
fcomps
lock
leave
cmc
jb
pop
ret
gs
imul
pop
add
cwtl
orb
or
sahf
jae
push
and
push
inc
cmp
aas
jne
sub
xor
mov
xchg
push
mov
insl
mov
imul
sbbb
rolb
outsb
stc
mov
lock
repz
lods
pop
mov
inc
leave
mov
cld
cmp
mov
nop
xchg
sub
cwtl
inc
push
adc
xchg
jmp
inc
jge
loop
xor
addb
push
or
fwait
jmp
pop
pop
scas
sub
add
out
push
pop
shlb
xor
add
rol
gs
test
xorl
push
loop
pop
push
cmpsb
test
sarl
cmc
pop
dec
test
andb
jge
xor
cli
and
dec
push
repnz
in
xchg
outsb
pop
pusha
push
mov
adc
pop
hlt
mov
push
insb
cld
fdivrs
and
filds
or
push
scas
push
mov
aas
addb
xor
sti
sub
add
pop
clc
jl
pop
inc
icebp
in
adc
add
mov
xlat
or
das
aaa
add
jle
xor
cmp
shrl
xchg
cli
dec
inc
xchg
call
or
mov
cld
sbb
sub
ja
fs
hlt
test
pop
pop
pop
sub
sub
xorl
and
lret
jmp
add
inc
mov
in
outsl
xor
jo
pop
and
test
arpl
xor
sub
or
jmp
pop
xchg
jmp
data16
outsl
out
dec
stos
lret
jmp
and
dec
stc
pop
push
ss
sbb
mov
pop
call
cmpsb
xchg
mov
mov
cmp
or
repnz
mov
call
into
push
jnp
das
xchg
stos
movsb
or
in
cpuid
pusha
xor
in
dec
scas
dec
sbb
pop
adc
ljmp
jae
inc
shl
push
insb
pop
divl
xor
into
scas
push
push
jo
add
inc
and
and
movsl
mov
lds
addr16
fmuls
cmp
or
adc
push
aaa
xchg
popa
gs
jbe
xor
or
adc
imul
test
sbb
ja
daa
out
je
and
movsl
pushf
xchg
pushf
fidivrl
jmp
pop
push
pusha
jmp
call
in
or
aam
shlb
sbb
arpl
rol
dec
cmp
jb
fsub
or
add
or
mov
or
ss
push
or
xchg
fs
pop
hlt
ret
enter
and
cld
xor
cmpsb
sub
cmovno
outsb
aaa
notb
out
dec
inc
es
loope
orb
jmp
xchg
sbb
xchg
popa
mov
add
push
xchg
and
add
lea
cmp
xlat
pop
push
pop
push
mov
push
arpl
or
mov
push
xor
jmp
or
adc
inc
stc
loop
sub
test
jmp
pop
stos
sub
inc
push
shlb
adc
inc
adc
ror
andb
shrb
mov
mov
jno
clc
add
je
pop
or
call
jge
mov
nop
lcall
iret
sub
push
pop
sbb
fisttpl
cs
xchg
dec
les
cmpl
push
adc
and
or
jno
inc
lret
xor
lea
pushf
and
jmp
lds
mov
xor
inc
ret
fcoml
popa
neg
jl
cmp
out
les
rcll
mov
xor
or
and
pop
pop
pop
rorb
jmp
xlat
cwtl
xor
xor
pop
adc
or
or
jle
test
cli
xchg
sub
cwtl
mov
sub
sub
add
or
addr16
inc
mov
inc
xor
mull
adc
inc
inc
jne
xchg
xlat
and
or
cltd
add
add
add
inc
mov
pcmpeqw
xlat
repz
sbb
jmp
xchg
pop
mov
mov
outsl
cmpsb
mov
add
inc
and
or
test
arpl
mov
in
pop
aas
dec
adc
out
inc
es
mov
addl
cmc
outsb
push
jns
fiaddl
inc
das
sub
push
mov
ds
dec
je
lret
psubsw
and
gs
jmp
adc
jns
or
loop
mov
push
jbe
and
ljmp
les
addb
sub
push
sahf
outsb
pop
push
or
lods
dec
adcb
dec
pop
call
sub
push
lea
pop
repz
fadd
lods
lock
aas
shlb
dec
mov
mulb
outsl
or
ficoms
xchg
les
lret
movsb
adc
jmp
jns
stos
shl
or
sub
sub
ror
lock
mov
pushf
lcallw
push
jnp
pusha
mov
or
divb
rolb
pop
sub
jg
cmp
xor
nop
or
push
push
daa
mov
ja
movsl
aas
xchg
or
jmp
dec
jl
add
jae,pt
andb
das
pop
test
loop
daa
sahf
pusha
insb
hlt
or
cwtl
pop
or
enter
movsl
lret
mov
rorb
push
push
xor
sub
loop
std
jg
jae
lock
sbb
or
ss
inc
xor
pop
dec
btr
add
jb
in
or
dec
cld
pop
daa
xorl
sbb
add
fildl
push
add
push
xor
sti
ret
insl
or
dec
push
lds
lock
pop
mov
scas
sub
pop
icebp
cltd
xor
hlt
lret
mov
lock
adc
mov
pop
pop
push
mov
bnd
adc
or
adcb
ja
and
dec
inc
hlt
iret
ljmp
shr
inc
pop
jnp
jge
inc
mov
add
or
push
icebp
mov
adc
clc
push
mov
imul
jmp
out
insl
sbb
aam
repz
inc
xor
test
dec
mov
adc
mov
leave
scas
loopne
adcl
sub
enter
out
outsl
push
mov
mov
mov
cli
mov
or
rolb
ret
jo
add
or
stos
and
movsl
pop
stc
sub
xor
cmp
cmp
add
xchg
push
lock
mov
or
sbb
mov
and
std
add
adc
pop
shlb
and
pop
pop
push
jae
xor
or
jns
ja
lahf
dec
lcall
mov
or
jbe
xor
xor
and
pop
ds
jg
cld
invd
jne
adc
and
push
pop
add
clc
cmp
and
roll
sti
and
pop
outsb
push
mov
lock
lret
mov
xchg
movsb
push
lahf
shl
lods
sbb
dec
fsubp
enter
leave
mov
push
xorb
or
xchg
adc
fdivrl
xor
jg
js
cwtl
jmp
loopne
aaa
cld
iret
andnps
push
loopne
lds
push
adc
or
and
je
cmp
mov
pop
aaa
and
cli
adc
add
daa
sub
dec
fstpt
pop
int
xchg
pop
dec
dec
jb
popf
aad
addr16
inc
xor
aas
cmp
dec
out
push
mov
ljmp
jle
popl
call
pop
mov
jmp
push
fmull
jmp
mov
inc
scas
push
dec
pop
shrl
add
subb
pop
inc
pusha
or
sub
dec
dec
popf
repnz
mov
xor
push
aam
jmp
das
xchg
adc
sub
jno
pop
pop
jp
or
cmp
adc
and
add
xchg
fsubl
cmp
or
das
pop
test
sub
in
push
ds
mov
subl
add
and
sub
push
or
roll
jbe
cmp
or
rorl
cs
ret
mov
or
xchg
rclb
xchg
mov
adc
add
test
gs
iret
cmp
cmp
and
lods
dec
sbb
in
and
test
roll
imul
lods
dec
imul
aad
sbb
ljmp
test
dec
xor
orb
jb
mov
leave
pop
mov
xchg
xor
sub
push
sub
add
hlt
iret
pop
lock
xchg
sahf
loop,pt
sbb
or
mov
sub
inc
fdivrl
aas
test
out
push
adc
add
xchg
mov
mov
xchg
enter
adc
add
push
dec
loop
pop
aas
lds
mov
jecxz
outsl
sbb
mov
jl
sbb
adc
fisubl
ret
add
lds
mov
pop
mov
lods
insb
xchg
adc
mov
rclb
shr
jg
jne
insl
loope
sub
mov
cmc
in
out
add
add
cmp
push
addb
mov
repnz
inc
cmp
push
out
sub
and
mov
lret
ja
mov
xchg
xchg
push
and
ljmp
pop
mov
or
add
push
mov
jne
xor
and
pusha
cmpsl
dec
dec
imul
xor
xor
push
stc
add
mov
jmp
adc
jle
pop
and
lods
add
hlt
shr
decb
add
in
jmp
js
sub
jle
adcl
jecxz
cld
fucom
das
cmpsb
jae
push
xlat
adc
or
dec
nop
or
mov
sbb
ret
jecxz
mov
mov
push
xor
bnd
push
leave
test
mov
sbb
sub
xchg
movl
in
push
cmp
inc
cmp
add
and
aad
into
lret
arpl
mov
mov
hlt
sbb
sub
or
or
lock
daa
jbe
jg
or
mov
jge
add
mov
daa
les
lods
push
inc
ljmp
push
imul
gs
adc
mov
xchg
stc
clc
enter
fnsave
adc
mov
negl
cli
fs
pop
repnz
mov
jae
sbb
and
or
aad
push
lcall
push
push
mov
dec
adc
mov
add
mov
xor
pop
add
push
lods
jne
or
or
gs
xor
jnp
push
or
dec
push
add
fnstsw
scas
adc
mov
cmpsl
enter
in
mov
add
push
dec
not
push
cs
dec
ret
push
in
and
inc
pop
pop
xchg
out
cmpsl
push
std
leave
rcll
push
in
sub
mov
pop
lds
or
pusha
jae
cmp
mov
mov
or
push
mov
push
das
mov
sbbb
xchg
clc
out
pop
jle
push
mov
sub
out
sub
ret
jecxz
sbb
scas
and
mov
jns
adc
inc
cmp
add
add
push
mov
lods
sbb
popa
xor
fdivl
add
cmp
stc
shrb
inc
add
dec
mov
add
jge
pushf
xorb
fadds
sub
lds
pop
nop
dec
sub
decb
xor
movb
and
mov
iret
arpl
jbe
xor
dec
or
jge
cmp
fiadds
jae
adc
pop
movsl
cmpsb
daa
dec
es
icebp
adc
loope
adc
adc
lret
dec
dec
stos
and
outsl
add
pop
adc
adc
add
jns
push
loope
cmp
jb
testl
repz
fwait
xlat
ret
cmp
pusha
mov
mov
jmp
or
and
push
out
jg
xchg
sub
movsl
or
push
add
mov
sahf
pop
mov
or
xor
pop
sbb
int3
sub
or
xor
mov
popl
jg
out
jecxz
mov
faddp
fidivs
sarl
and
sbb
addl
fs
daa
xchg
lret
rol
add
or
sub
cmp
sbb
mov
daa
inc
adc
mov
pop
jb
adc
es
filds
bound
sbb
test
subb
popa
scas
ret
imul
jns
stc
adcb
loopne
in
jle
sbb
jg
call
cld
cmp
daa
rorl
scas
fnstsw
test
ja
add
sbb
cmp
test
popf
std
pop
pop
mov
cmp
push
xor
cmp
mov
repz
pop
sbb
das
lcall
jge
popa
and
dec
and
mov
add
repz
or
add
sahf
pop
dec
adcl
jmp
push
jle
dec
pop
mov
or
inc
in
or
in
fmul
pop
dec
inc
or
sub
and
add
out
and
in
testl
and
sub
jg,pt
push
xor
jmp
imul
and
dec
and
push
and
in
pop
mov
jo
mov
rcll
movsl
xor
push
sub
je
pop
mov
fbld
or
roll
push
jmp
add
pop
pop
nop
mov
and
arpl
inc
mov
sub
imul
jno
cs
jge
cmpsl
add
or
js
adc
test
mov
pop
push
movsb
pop
hlt
xor
movsl
sbb
sti
sbb
imul
mov
ljmp
adc
sub
and
inc
inc
cmpb
mov
push
sub
mov
or
mov
xor
repz
push
and
xchg
ljmp
out
stos
or
rcl
popf
pop
add
mov
mov
pop
nop
pop
push
pop
clc
sbb
rol
push
sub
jmp
inc
cli
sub
xchg
aas
adc
cmp
imul
and
icebp
aad
lds
inc
xlat
pop
popa
std
pop
inc
testl
scas
add
inc
jne
aam
push
shlb
not
and
call
in
pop
cld
repz
lock
xor
rcrl
add
or
xor
ret
rclb
ss
inc
setae
push
and
adc
cwtl
inc
or
mov
lcall
or
or
sbb
aam
lods
mov
popa
mov
stc
frstor
vpaddsw
pusha
gs
sbb
sbbb
fistps
mov
jmp
loope
push
add
mov
add
jb
ljmp
gs
daa
push
sub
jo
xchg
sub
call
fdivr
sub
scas
xor
bound
jl
push
neg
or
shl
mov
mov
jg
das
mov
and
pop
jle
loop
or
sbb
inc
and
inc
cmpb
sub
ret
fs
or
adc
push
cmp
add
popa
jbe
inc
andl
ret
sahf
jnp
test
or
ss
jge
arpl
movl
jmp
add
out
stos
int3
lea
aam
pop
push
inc
scas
lods
pop
and
mov
add
mov
cli
inc
dec
xlat
movsb
imul
add
jmp
add
jmp
insb
pop
rcl
imul
push
push
pop
cmpsl
pusha
das
sub
shrb
sub
and
aaa
jmp
lahf
add
or
xor
mov
shll
inc
dec
mov
add
or
call
push
stos
pop
bound
adc
dec
mov
mov
cmp
scas
imul
and
pushf
nop
sbb
push
pop
pop
daa
ss
and
testl
retw
ljmp
inc
jns
inc
xchg
xchg
mov
pop
movsb
pop
scas
pop
xor
or
jle
ret
ret
cld
mov
jmp
inc
adc
ljmp
or
and
push
ror
outsl
cld
cmp
rolb
pusha
sti
inc
shrb
sbb
jb
leave
mov
push
jno
cmpsb
or
or
push
jnp
aad
lret
lds
stc
pop
ret
sub
pusha
lret
repnz
xchg
ret
fldl
sbbl
rclb
movsl
pop
push
push
mov
movsl
int
jmp
jbe
dec
jg
pop
push
adc
pop
add
inc
insl
pop
lods
aam
out
push
insb
mov
adc
cmpsl
adc
sub
stc
inc
adc
xor
rcrb
xor
icebp
pop
pop
pop
shll
lock
xchg
loopne
faddl
xchg
adc
aas
pop
fistps
jl
dec
pusha
mov
ljmp
hlt
out
filds
fcomip
pop
sbb
in
jge
std
outsb
lds
call
and
push
adc
test
roll
arpl
adc
inc
ja
daa
adc
inc
rolb
pushl
sbb
inc
adc
and
or
pop
xor
loope
dec
mov
xchg
decb
mov
sbb
out
iret
imulb
test
rcr
jb
adc
out
push
in
push
fs
add
pop
adcl
jmp
xchg
push
out
nop
mov
cli
xor
pop
mov
clc
sti
out
js
imull
in
outsb
cmpsb
jl
das
inc
gs
or
and
not
js
add
jb
sbb
cli
add
imulb
lods
adc
setg
inc
or
inc
fwait
pop
xor
gs
pusha
and
imul
scas
xor
into
insb
daa
and
aad
pop
pop
xchg
ret
add
subl
add
ret
rol
jg
jb
repz
std
or
ror
out
add
pop
loop
jne
test
sbb
xor
insb
inc
movsb
or
mov
fsubrs
mov
add
mov
push
adc
popl
jle
sub
mov
loope
ljmp
xchg
pop
aam
or
in
add
jns
mov
pop
movsb
div
or
scas
enter
jne
pop
mov
jge
mov
jecxz
loop
jl
or
ficoml
mov
test
sub
pop
push
incl
bndstx
push
cmp
add
pop
lods
stos
dec
mov
rcrl
adc
pop
mov
push
inc
loop
mov
int3
lods
or
push
in
incl
insl
ret
cmp
sbb
or
pop
enter
notb
lods
pop
iret
and
imul
das
sti
out
sub
hlt
add
push
mov
imul
sub
or
dec
fidivrl
add
std
call
popf
out
or
xchg
sbb
jle
fidivrl
repnz
dec
lret
or
gs
enter
addl
push
jle
icebp
jbe
pop
stc
sbb
mov
jns
dec
mov
lods
es
add
mov
jne
outsb
and
sbb
in
shll
dec
sbb
sub
cmp
lock
aaa
add
jmp
mov
andb
sub
or
sbb
outsb
jns
pop
pop
cli
gs
pop
lahf
add
xor
mov
xor
jmp
out
or
jle
outsb
shl
push
or
xchg
insl
pop
int3
mov
pop
int3
jmp
stos
or
or
inc
into
popa
ss
call
fidivl
out
mov
add
int
inc
mov
fstps
add
leave
shrl
xchg
add
jge
xchg
add
mov
ret
add
jmp
repnz
mov
repnz
mov
shrl
or
addr16
sub
fiaddl
xchg
out
in
bound
or
andl
mov
sub
ficompl
sub
loopne
and
sub
aas
add
lock
dec
sub
push
inc
mov
push
je
mov
out
add
add
xchg
xchg
icebp
ret
dec
out
roll
test
add
ss
mov
xchg
add
inc
cmp
inc
xchg
or
cmpsl
xor
or
adc
lret
jge
mov
inc
fcomps
inc
pop
push
mov
arpl
subb
xchg
jmp
xor
or
mov
adc
fnstcw
sub
int3
mov
mov
outsl
add
xor
adc
xchg
sbb
inc
pop
fidivs
bound
stc
xorb
and
mov
ja
jnp
pusha
pop
and
mov
pop
mov
ret
cmpsb
or
or
inc
inc
pop
jns
or
stos
ret
bound
invd
aaa
repnz
adc
dec
inc
xor
cld
inc
leave
mov
jg
or
add
loope
adc
xlat
mov
int3
les
push
out
dec
cld
pavgw
or
popf
mov
fldl
imul
test
adc
fmull
or
xor
into
and
movsl
jae
inc
jmp
push
dec
push
loop
ja
lock
or
pop
jl
add
cmp
xchg
fcmovnbe
mov
inc
imul
add
addr16
sub
sbb
ret
sbb
xchg
pop
test
or
inc
cmp
es
jmp
xchg
pop
jmp
sar
outsl
sub
push
mov
mov
mov
rol
jmp
or
mov
mov
jmp
cltd
mov
fmull
pop
dec
jl
xlat
movsl
mov
leave
pop
jle
inc
push
mov
imul
icebp
stos
shlb
lods
add
sub
and
cmp
cmp
js
pop
iret
fnstcw
fcompl
xor
jmp
and
cmpsb
lahf
lcall
in
adc
ret
cmpsl
mov
rcl
int
aas
mov
and
or
clc
ret
xchg
push
loope
cmp
push
sbb
mov
sti
je
scas
movsb
mov
or
push
cmpl
mov
pop
add
in
repnz
cld
fs
mov
dec
pop
cmc
pop
push
or
mov
dec
pushf
and
jns
adc
out
and
push
jmp
inc
push
jecxz
sbb
rclb
add
mov
in
push
add
jae
add
xor
popa
dec
push
lea
cmc
into
mov
andb
and
push
push
mov
out
add
sub
cmp
cmp
and
shr
add
ljmp
leave
cmc
push
dec
mov
aad
add
incl
push
int
enter
cmp
fnstsw
xchg
sarb
inc
sub
dec
out
mov
mov
test
popf
int3
sub
ljmp
adc
push
rorl
push
add
fucom
adc
bound
cmpb
mov
add
jmp
dec
imull
add
nop
pop
and
cmpsl
mov
rcr
cmp
mov
into
push
jl
sbb
or
cmpsl
inc
popa
repz
dec
ljmp
lds
add
or
jl
xor
inc
std
or
dec
push
ja
inc
in
addb
rcr
adc
push
loopne
cmp
pop
or
add
xchg
fsubr
int
xorb
comiss
leave
or
sbb
add
jl
adc
fwait
cmp
icebp
or
loop
mov
dec
fnsave
cmp
out
dec
das
testl
test
es
push
dec
stc
stos
movsl
shrb
jle
out
fdivl
push
pushf
aam
fistpll
repz
jno
pop
popa
stos
inc
sub
sub
lods
xchg
and
vaddps
scas
pop
xchg
ja
pop
repz
xor
fnsave
sub
or
push
jl
mov
mov
jmp
pop
call
cmp
xchg
jne
push
sbb
nop
cmp
nop
in
imul
nop
lods
xor
cs
jge
sahf
mov
xor
cmc
xor
ja
mov
jmp
loope
push
inc
jo
fs
adc
lahf
jno
mov
inc
push
sbb
add
rcl
jb
mov
fcompl
inc
jle
bound
fcom
test
jmp
jmp
inc
bound
pop
xchg
std
mul
cmovle
andb
pop
repz
daa
cmpsb
jbe
inc
adc
inc
mov
cmc
fnstsw
mov
add
push
pusha
sub
pop
jmp
pop
pop
xor
mov
adc
enter
lock
push
in
adc
pop
jg
mov
add
outsb
test
sarl
xor
add
daa
cmc
cmp
mov
and
aam
mov
inc
lret
imull
xchg
pop
test
or
jne
sub
pop
xchg
mov
out
push
sti
jo
jmp
inc
scas
jmp
cld
gs
lods
dec
sub
mov
mov
push
ds
sbb
fstl
inc
push
mov
nop
mov
jmp
out
mov
push
inc
or
insb
aaa
push
jmp
mull
out
sbb
adc
sub
fsubr
cmp
insl
pop
fsubrs
pop
push
sub
js
sar
adc
jmp
adc
fidivrs
sbb
sbb
outsl
cmp
pop
inc
ja
mov
mov
sub
gs
test
in
andl
lods
jmp
add
xor
pop
nop
cmc
fwait
sub
repz
mov
cmpb
cmpsb
cmp
mov
fadds
xor
bound
fisubrs
push
or
outsl
addb
movsl
fcompl
loope
mov
nop
lods
add
pop
lock
rol
or
sbb
cmpsb
in
mov
or
into
fsubrl
pusha
jmp
add
push
pop
xchg
xchg
mov
mov
and
std
pop
inc
lahf
dec
ret
je
push
outsl
xor
out
cmpsl
fimull
inc
idiv
inc
inc
inc
pop
js
jp
pop
lret
push
jo
imul
dec
xchg
mov
and
shll
or
ss
lcall
and
push
push
jno
dec
test
and
sub
add
or
inc
je
push
sahf
jg
push
adc
test
icebp
push
add
push
pop
adc
lods
inc
int3
stos
jmp
cmc
outsl
aad
sub
test
outsl
lds
and
shrl
dec
sbb
xchg
es
xchg
loopne
shl
sub
pop
shlb
lea
aas
cmovp
mov
sub
jecxz
jmp
dec
and
imul
fsubs
cli
sub
mov
jnp
pusha
popf
dec
sbb
mov
mov
push
mov
in
data16
sbb
add
ljmp
ret
or
aam
in
mov
leave
out
adc
mov
shlb
fistl
ja
jmp
imul
lret
sub
inc
xor
in
push
jmp
mov
xlat
fildl
rorb
xor
rcrl
sub
sub
nop
pop
into
fs
jmp
mov
and
es
les
insl
push
push
sub
cmp
inc
rorl
cli
jg
jbe
xchg
jbe
sub
out
hlt
psubsw
subl
sub
mov
rcll
scas
sbb
dec
or
pop
cmc
lret
or
incb
fldl
mov
add
icebp
movsl
lds
jb
outsl
or
add
in
inc
sub
stos
jecxz
test
sbb
cmp
and
pop
inc
sbb
or
aaa
pop
push
mov
sbb
inc
mov
and
lret
add
mov
xor
xchg
pop
shl
xchg
add
loopne
dec
dec
push
in
push
pusha
inc
dec
iret
or
dec
clc
bound
cmpsb
aam
adc
cli
cmp
clc
push
out
scas
inc
mov
cwtl
add
rcrb
inc
lahf
dec
cmp
sub
out
sub
fmulp
hlt
mov
outsl
orb
xchg
imul
popa
xchg
test
cmpsl
sbb
scas
or
into
jbe
inc
cmc
enter
push
and
movsl
lret
imul
repnz
stc
out
sub
pop
cmp
pop
and
nop
xchg
and
sub
subb
jg
sub
pop
orl
outsb
add
es
dec
cmp
push
pop
mov
incb
cmc
push
dec
mov
sbb
cmp
fs
gs
out
inc
push
add
imul
sub
cmp
and
loopne
in
dec
jmp
pop
push
cwtl
mov
mov
lods
sub
add
jl
xor
lods
outsl
xor
pop
test
loope
aad
dec
push
mov
hlt
outsb
repnz
push
andl
xchg
sbbb
sub
das
ja
sbb
daa
pusha
and
lahf
or
and
and
aaa
jmp
mov
rolb
adcb
jbe
push
fs
cld
sbb
mov
ds
jl
mov
iret
popa
sbb
and
pop
frstor
jae
stos
or
hlt
dec
push
roll
push
dec
jecxz
xor
icebp
cmpl
push
mov
jns
or
jmp
or
and
cs
push
jb
dec
sub
jb
or
push
es
out
cli
mov
dec
pop
das
jmp
xor
insl
mov
or
dec
stc
add
pop
xchg
xor
xor
shrl
or
into
pop
jbe
test
add
test
subb
and
loope
and
push
es
jb
jno
shr
repz
pop
xchg
pop
loope
out
xchg
mov
and
mov
or
and
inc
outsl
int3
mov
xor
rcrl
push
xor
adc
icebp
movb
lahf
loope
push
jp
aas
lock
fdivrs
adc
push
mov
stos
and
lods
cmp
add
mov
imul
ljmp
mov
adc
lret
imul
inc
out
pushf
add
imull
js
inc
arpl
or
xchg
ds
sub
pop
js
or
inc
iret
movsl
pop
das
into
les
lock
adc
and
testb
pop
fnstsw
mov
xor
mov
pop
jno
push
outsl
lds
into
adc
or
popf
stc
rorb
xor
lret
cmc
push
push
cmp
shlb
pop
push
decb
xorl
jle
fimull
lea
jl
mov
add
loopne
mov
jmp
int
jp
mov
fdivl
test
xchg
sbbb
mov
test
xchg
ss
out
in
in
jb
cmp
mov
jo
leave
orl
popa
sbb
adc
in
mov
call
or
add
mov
pop
lods
or
jmp
sub
pop
inc
out
adc
bound
dec
pop
sub
scas
mov
imul
push
mov
xor
es
add
adcb
lock
jae
xor
inc
jg
enter
or
in
pop
and
mov
jecxz
jle
adc
fs
lahf
test
and
add
and
add
mov
push
mov
mov
outsl
add
inc
daa
sub
or
bound
test
into
adc
daa
or
adc
jle
and
call
addr16
not
sub
sub
push
aad
cmp
pop
out
xchg
xchg
pop
mov
inc
mov
iret
cmp
jne
jmp
jne
clc
add
shrl
or
sub
or
fstpt
cmp
jle
addl
repnz
mov
xchg
je
xor
arpl
mov
and
mov
mov
xchg
sub
nop
dec
push
add
push
lock
jno
and
mov
lock
addb
mov
push
les
les
addl
pop
imul
xchg
push
mov
outsb
ret
push
sub
pop
sbb
mov
test
jmp
or
ret
mull
fs
outsb
movsb
nop
and
inc
add
movsl
mov
dec
pop
in
pop
or
inc
lods
stc
sub
jmp
inc
or
psubsw
stc
and
movsb
leave
test
adc
push
mov
clc
das
add
jne
ja
jmp
scas
inc
addr16
loope
lods
cmpl
xchg
rcrb
add
adc
xchg
out
repz
or
xor
jl
adc
push
out
je
orb
and
jo
shrl
icebp
stc
and
push
leave
out
lock
adc
les
sub
ret
int3
shrb
aam
cmp
jnp
xor
adc
push
jne
jb
in
and
fdivl
out
insl
xor
mov
fwait
dec
stc
sub
inc
mov
aam
aam
icebp
mov
stos
dec
pop
std
push
dec
lods
add
pmaddwd
repnz
pop
jo
and
stc
outsb
jmp
sbbb
jno
inc
arpl
not
mov
mov
push
xor
movsl
xlat
sub
pop
in
sbbl
sub
jne
adc
pop
mov
push
add
add
sub
sbbb
sub
mov
mov
in
fwait
in
add
push
hlt
mov
in
jge
push
notb
mov
dec
pop
mov
andl
cmpb
cmpsl
cmp
jge
xchg
scas
xchg
out
test
out
fld
outsl
popl
inc
nop
out
cmp
pop
shl
adc
sub
push
inc
into
data16
dec
dec
cmp
test
push
adc
cmp
ljmp
dec
lea
das
repz
in
cli
std
out
push
pop
outsb
loope
test
cmp
inc
or
adc
test
pop
aam
mov
mov
pop
incb
mov
pop
mov
aam
sub
fistpll
jo
loope
std
int
ret
lcall
mov
mov
sub
inc
int
pop
xor
jo
mov
sbb
lcall
sub
aas
pop
push
cmp
jns
lret
add
fwait
adc
adc
inc
dec
stos
shl
xchg
js
mov
add
add
insl
pop
addl
dec
adc
sub
ret
sarl
mov
cmp
adc
leave
mov
or
fimuls
mov
call
dec
xchg
push
rorl
xor
jecxz
in
incb
and
mov
in
jns
movsb
push
xchg
cs
pusha
lahf
adc
hlt
into
and
dec
jnp
clc
mov
and
pop
fcoml
mov
les
mov
ljmp
or
inc
mov
loope
mov
xchg
std
stos
add
js
aad
das
rclb
pop
insl
add
add
xlat
sub
cmpl
sbb
and
xchg
or
push
mov
filds
cmp
insb
fs
add
jg
xor
cld
sbb
call
into
sub
data16
sub
fsubs
dec
leave
pop
je
ret
je
in
int
shl
js
insl
sub
or
data16
adc
xchg
or
push
aad
rcl
shrl
and
mov
sub
or
sbb
jnp
mov
js
add
ja
aad
jne
or
and
adc
push
sub
and
mov
jge
xchg
add
movsb
dec
mov
and
outsb
adc
adc
jnp
inc
sbb
jmp
divl
rcrl
ljmp
and
mov
dec
je
dec
loop
inc
in
mov
and
dec
jle
rcrb
dec
lock
pop
rcr
ret
ja
sahf
lret
daa
sbb
push
inc
sbbl
bound
in
xchg
call
lea
popa
jb
or
or
roll
repz
add
or
rcrb
or
add
inc
jmp
or
pop
and
enter
fistps
cmp
addr16
xchg
out
dec
add
jo
add
aas
ret
lret
and
test
dec
dec
cmpl
jmp
rcrl
jnp
mov
adc
jns
es
adc
sahf
or
ljmp
add
push
push
and
xchg
add
push
clc
loope
pusha
mov
add
mov
mov
inc
popa
push
and
add
imul
push
push
push
mov
pop
pop
mov
pop
xor
nop
pop
or
out
nop
pop
cmp
shll
hlt
test
cmpsl
push
jbe
mov
add
mov
jle
or
cld
add
jae
out
and
adc
jmp
aas
push
pop
fmulp
imul
and
insb
and
arpl
or
lds
or
jmp
adc
mov
lods
add
repz
lods
hlt
in
sub
mov
and
out
pushf
cli
xchg
pop
mov
cld
scas
xchg
push
ja
es
mov
call
add
lds
add
in
icebp
jbe
pop
pop
test
pop
lods
lahf
in
jnp
push
add
decl
xor
mov
cmp
mov
ret
in
pop
and
bound
push
loope
sahf
add
addr16
jg
adc
int
test
mov
jmp
xor
icebp
bound
dec
dec
enter
add
sub
add
mov
or
push
pop
xor
push
pop
cmp
or
insl
xor
jmp
sub
dec
ljmp
ret
shr
jle
mov
xor
push
or
dec
pop
daa
mov
scas
push
loopne
fstl
div
pushf
pop
or
test
jecxz
xchg
lret
mov
clc
stc
mov
mov
mov
lret
xorl
inc
pop
pop
jb
jmp
call
xor
mov
push
int
lcall
adc
out
test
scas
pop
insb
stos
cmp
sub
insb
pusha
cwtl
jnp
pop
sbb
outsl
gs
mov
loop
sbb
sbb
ret
imul
mov
clc
jg
mov
pop
cmp
add
cmpl
mov
in
xchg
lock
imull
mov
jns
lods
mov
frstor
push
add
es
xchg
jl
arpl
xor
mov
andb
lods
ret
mov
cld
xor
clc
jmp
xchg
and
lahf
sbbb
pop
test
push
push
mov
loop
xchg
test
pop
or
mov
fsubl
push
stos
out
add
xchg
inc
aas
push
fsubr
add
inc
lds
repz
in
out
les
push
rcr
or
push
fmuls
or
and
add
xchg
pusha
flds
or
test
push
dec
jl
pop
and
sbb
xor
pop
loop
mov
xchg
xchg
mov
or
outsl
jb
push
sti
and
jecxz
mov
or
leave
rcrl
data16
push
and
insl
orl
sbb
push
out
push
jbe
fildl
or
cmp
and
jl
test
sub
sahf
or
inc
add
adc
mov
decl
dec
add
rcll
mov
adc
sub
aad
ror
shl
adcl
out
lar
mov
repnz
mov
gs
mov
loopne
add
loopne
mov
push
pop
ret
imul
shl
mov
arpl
lahf
pop
ja
sub
push
pop
lods
and
out
movb
shl
not
pusha
aad
pop
xchg
aam
mov
cmpsb
scas
popf
stos
leave
add
jns
add
add
scas
lcall
add
cmp
imul
xchg
push
call
sub
rolb
jmp
pushf
andb
push
aam
popa
mov
dec
in
stos
nop
movb
pop
lret
sub
jmp
cmp
ficompl
jp
mov
outsb
or
sbb
and
jmp
ja
jbe
dec
lods
pop
scas
sub
fwait
lea
mov
add
mov
in
add
or
xchg
les
mov
push
jg
cmp
cmp
adc
xlat
mov
daa
dec
inc
sub
in
jb
je
jo
pop
xchg
sbb
xor
stos
loop
add
sub
push
sbb
in
dec
mov
pop
mov
pop
dec
les
mov
aaa
mov
pop
add
adc
dec
push
stc
iret
rcll
cmp
adc
jle
jecxz
adc
int
mov
push
daa
mov
jp
mov
imul
jne
hlt
imul
inc
clc
testl
es
or
repnz
jno
xchg
add
mov
push
jge
mov
cmp
lret
fmuls
lock
sub
negb
sub
or
imul
test
dec
enter
sarb
call
sub
test
cwtl
push
mov
inc
and
jae
add
mov
loopne
aam
je
pop
les
jle
sub
out
xlat
daa
fldenv
aad
mov
jp
and
loope
dec
pushf
xor
lret
out
std
mov
ss
leave
outsb
push
je
add
testb
cmp
push
sub
pusha
jmp
cltd
mov
cmc
and
not
sub
in
pop
add
movsl
mov
pop
mov
sbb
loope
lret
shl
inc
loope
cmp
daa
push
pusha
cmpsl
jle
xor
mov
add
aas
pop
imul
cmp
cmp
orl
fs
add
push
fs
int3
icebp
stc
leave
adc
sti
mov
jmp
es
or
sub
inc
test
jmp
loopew
inc
adc
fwait
in
nop
pop
aaa
addb
mov
add
push
pop
mov
push
mov
dec
and
fcoms
cli
xlat
enter
es
jne
testb
pop
xor
push
stos
sub
outsb
adc
pop
push
rol
std
jnp
movsb
add
jno
mov
je
or
shl
sbb
not
cld
sti
dec
stc
rorb
xchg
js
pop
sub
jb
pop
pop
add
sub
cld
hlt
cmpsb
out
fcmovnb
or
shl
adc
jmp
push
xor
or
rcll
push
cmp
and
push
or
outsb
jns
sub
insl
cmpsb
cli
cmp
hlt
and
popa
jmp
ja
rep
pop
sti
loop
insb
rorl
pop
inc
or
push
cli
or
je
sub
jmp
call
push
or
fcomps
pop
xor
bnd
mov
push
cltd
push
jmp
sub
mov
dec
test
mov
jmp
stc
popa
negb
loop
jne
dec
cmp
das
jno
add
stos
shr
xchg
mov
outsb
mull
sbb
mov
sub
add
sub
pushf
add
adc
repnz
jmp
loopne
imul
into
lahf
or
adc
sbb
sar
and
pusha
xchg
inc
in
sub
sbb
lahf
test
cmpb
dec
andl
clc
jmp
lock
lret
sbb
push
out
pop
mov
nop
mov
sub
cmp
sbb
cwtl
dec
dec
push
mov
lods
cmp
js
dec
lret
inc
cmp
jle
add
dec
xor
bound
fmuls
dec
sbb
or
push
cwtl
xor
sbb
fisttps
mov
rol
adc
push
into
dec
sub
cld
or
dec
and
and
dec
rolb
and
js
jmp
cmp
rorb
jmp
mov
jg
jmp
in
add
lds
pop
and
push
out
or
jnp
daa
lret
scas
aam
inc
ret
ljmp
or
add
les
inc
pop
fcompl
inc
adcb
jp
mov
test
das
clc
stos
mov
inc
bound
inc
out
dec
cmp
mov
xchg
sarl
and
push
jle
or
test
gs
mov
push
imul
add
repz
or
jnp
imull
clc
mov
sub
pop
or
add
stos
cwtl
add
jmp
rorb
repz
movsb
les
push
stos
cmpsb
mov
xorl
popa
scas
sub
movsl
sub
xchg
sbb
mov
jmp
pop
loope
pop
call
adc
shr
les
push
sub
ficompl
loopne
xchg
cwtl
lds
lods
lret
scas
adc
jns
sub
pop
jno
iret
cmp
sahf
stc
adc
test
jbe
add
mov
dec
cs
mov
jge
movsl
inc
push
push
je
leave
js
jo
cli
push
and
pop
in
jl
fs
in
movsb
or
mov
mov
mov
mov
addl
push
sbb
ret
nop
sub
stc
cmp
imul
inc
adc
int
mov
xchg
call
negl
push
cmp
movl
mov
push
push
rorb
sub
shlb
pushf
sbbl
mov
xlat
or
mov
jp
lea
lret
xor
jbe
and
pop
push
loope
pop
cmp
push
jmp
push
in
sub
xchg
and
lods
pushw
push
mov
movlps
push
sub
push
push
push
pop
xor
pusha
and
pop
or
or
jns
push
out
mov
scas
call
add
sub
xor
call
movsl
cld
jecxz
lods
push
rcrb
push
pop
mov
mov
xchg
clc
pop
sub
add
jge
popf
jle
les
into
scas
addr16
ret
jle
and
rol
pop
xlat
xchg
adc
stc
movsl
andl
cli
loope
out
subb
add
cmpsl
fdivp
inc
cli
xor
pop
scas
ror
ljmp
mov
cld
rcl
mov
movsl
push
fists
pop
popf
lds
scas
push
repz
inc
jle
cmpl
in
xchg
sub
and
in
ret
jecxz
stc
cmc
sbb
popa
scas
scas
addl
jge
and
mov
ljmp
push
inc
add
cs
or
adc
jno
dec
repz
repnz
js
pop
in
cwtl
pop
test
add
dec
sub
sbb
ret
cltd
call
xchg
inc
or
in
fidivs
js
mov
cmp
rcl
subb
adc
ffree
int3
xchg
push
adc
pop
jnp
in
mov
les
xchg
ljmp
pop
add
imul
mov
push
add
pop
xor
jmp
fucomi
repz
nop
ret
or
xor
sub
ficoms
inc
cmpsl
lahf
icebp
cwtl
jecxz
testb
repz
movsb
pusha
fidivl
out
ja
mov
loop
arpl
int3
add
pop
jle
cmc
sti
insb
clc
jg
mov
jmp
sbb
mov
and
push
jbe
push
lcall
out
add
loop
addr16
push
or
ljmp
addb
repnz
rcrl
cmc
xchg
mov
insb
adc
call
in
bound
cmp
mov
cld
cmp
add
es
les
lret
mov
push
cmpsb
push
fbld
gs
bndldx
les
and
add
call
cmp
in
add
orb
jmp
mov
bound
test
cmp
jp
and
cmovo
gs
pop
push
push
jmp
sbb
pop
and
push
shl
lea
add
fidivrl
or
or
mov
pop
mov
add
scas
fdivl
mov
sahf
inc
test
inc
adc
xor
test
mov
or
pusha
stc
add
jge
push
jmp
cmp
daa
add
xor
mov
adc
test
insb
jo
jle
shrl
es
stos
sbb
rol
adc
jno
cmp
pop
dec
test
daa
mov
add
jmp
rclb
sbb
jle
or
sbb
push
test
sti
enter
adc
sub
add
cltd
push
inc
lret
push
or
and
xchg
xor
jmp
repz
rorl
inc
jmp
sub
push
mov
sbb
negl
fmul
jmp
sbb
adc
gs
loope
lods
pop
xor
scas
mov
add
repnz
push
nop
cltd
push
dec
sub
out
adc
xchg
and
cmp
xchg
xchg
subl
ret
mov
in
adc
cld
out
dec
flds
adc
mov
adc
cmpsb
jnp
pop
mov
outsb
imul
mov
push
add
pop
and
inc
mov
jle
add
or
add
add
pop
loopne
test
add
lret
aas
dec
insl
orb
jle
jmp
cmc
stos
jg
pop
jge
xchg
pusha
movb
adcb
dec
shl
and
out
dec
fidivs
jmp
das
or
mov
lds
or
and
adc
jno
sbb
scas
repnz
sub
or
mov
mov
xchg
pop
add
scas
push
mov
lods
push
out
loopne
mov
and
jmp
testl
push
pop
push
mov
mov
xchg
push
xchg
add
in
nop
ds
jg
popa
adc
sahf
mov
xor
pop
test
shrl
les
stc
mov
mov
add
out
icebp
leave
in
add
push
or
add
cmp
cmp
pop
jnp
dec
repnz
pop
imul
or
dec
shll
add
fnstcw
pop
and
adc
sub
jmp
movsl
mov
adc
inc
dec
insb
aad
mov
es
and
fs
push
mov
fnstsw
rcr
dec
test
lock
shll
adc
dec
pop
dec
int
mov
adc
sbb
out
popa
add
fnstsw
in
outsb
mov
fdivrs
bnd
jmp
in
out
mov
fsub
mov
popf
push
xchg
out
xor
shlb
or
cmp
sub
sti
mov
adc
out
push
push
mov
aaa
add
lahf
bound
pop
ss
hlt
mov
and
inc
outsb
mov
cwtl
xchg
ror
gs
test
fdivrs
adc
push
mov
lahf
call
test
lahf
adc
jo
xchg
xor
cmp
cld
mov
push
jno
lock
xchg
xor
cs
xor
xor
inc
jle
test
je
add
pop
cmc
adc
adc
scas
or
add
out
cld
mov
pushf
sub
sbb
add
stos
into
adc
add
add
push
add
adc
or
ret
fldcw
mov
xchg
add
dec
jo
xchg
aad
rorl
xor
scas
movl
repz
push
mov
jmp
bound
test
or
sub
cmc
jg
or
mov
xor
adc
xor
jmp
sub
push
mov
mov
imul
sbb
push
shr
dec
outsl
mov
cwtl
pusha
jb
pop
or
pop
std
sbb
or
dec
movsb
cmp
pop
pop
vpxor
or
adcl
call
jo
dec
jle
inc
push
mov
stos
in
pop
cmpsl
in
mov
sbbl
insb
mov
shll
or
xchg
jg
cmp
xor
pop
fildl
jmp
xor
adc
xchg
enter
cmpsl
mov
xchg
out
or
lock
inc
lds
inc
sbb
jmp
in
mov
inc
pop
sub
sub
add
fs
adc
out
fcoms
aas
adc
rcrb
ret
mov
mov
cli
mov
insl
je
lods
pop
and
cmp
loope
ljmp
add
clc
jb
jo
jge
and
cmp
ss
cmpsb
cmpsb
inc
jg
lods
xchg
xchg
jne
add
cmp
mov
dec
and
test
xor
xadd
idivb
sti
sbb
pushf
inc
or
int3
loope
les
clc
lea
cmp
mov
xchg
dec
inc
inc
jle
in
mov
ljmp
pop
xchg
pop
pop
or
sub
filds
xor
pusha
jecxz
jbe
pop
nop
xchg
or
xchg
inc
orb
inc
push
rorl
push
mov
push
ja
cmp
shr
vpsubsb
shl
stos
test
sbb
fstl
loope
push
mov
push
jne
jmp
mov
mov
sub
jmp
in
subl
or
jnp
rcrl
popa
cltd
inc
stc
add
xor
jmp
mov
add
sub
rcll
or
adc
inc
add
and
push
icebp
pop
std
cmpsl
std
jnp
cmp
mov
test
in
cltd
xor
mov
cmp
shrb
cmp
shll
rclb
sbb
cmp
and
xchg
fs
hlt
push
push
adcb
in
fs
jmp
sbb
mov
or
push
jnp
andl
pop
xor
sbb
sub
or
cmp
imul
lods
xchg
pusha
addr16
imul
and
enter
scas
add
sub
aaa
imul
jns
inc
movsb
inc
out
rorl
je
je
ljmp
jl
cmp
imul
decb
pop
orb
adc
lock
or
movb
and
out
adc
adc
add
add
inc
out
pop
jno
mov
push
or
jmp
dec
test
or
xchg
jg
push
pop
cmp
cmp
add
hlt
or
mov
xor
push
push
stos
leave
cwtl
lods
cmp
cld
outsl
xchg
inc
pop
cwtl
outsb
sbb
clc
xor
cld
push
add
jle
arpl
mov
xchg
btr
push
scas
or
out
mov
sub
or
mov
test
add
inc
testb
pop
js
push
jno
fdivl
pop
stos
push
pop
jmp
rcrb
imul
pop
stos
jo
popa
inc
or
add
int3
and
mov
jmp
imul
out
in
and
lahf
inc
push
xor
aas
std
in
shll
fs
xchg
adc
movsb
dec
jae
add
std
adc
repnz
ret
mov
pop
mov
pop
jle
or
aas
outsl
ja
cmpsb
or
lock
push
shrb
hlt
gs
sub
add
sub
inc
cld
adc
lods
xor
cmp
mov
shr
stos
icebp
sub
nop
out
jmp
es
data16
pop
mov
pusha
pusha
xchg
and
sub
mov
jge
xchg
push
mov
lahf
pop
test
push
jb
cwtl
push
stc
cmp
adc
adc
or
jl
push
xlat
dec
cltd
pop
pop
shlb
push
test
mov
push
add
push
cld
pusha
and
mov
hlt
push
pop
outsb
pop
pop
test
xchg
test
es
push
daa
fdivrs
out
xor
and
xchg
test
fmull
xchg
mov
testl
adc
or
pop
ja
sti
out
lret
or
in
ret
or
sbb
push
pusha
adc
and
pop
adc
xor
cmp
stos
add
aam
push
inc
jmp
div
jmp
aad
sti
jbe
jge
pop
adc
fisttpll
test
shll
push
inc
xor
jne
push
or
ljmp
and
and
and
dec
xchg
call
cwtl
cmpsb
mov
call
push
inc
and
inc
push
incb
fstps
jbe
or
pushf
adc
add
push
jmp
sahf
mov
xchg
cmpsb
pop
lcall
jae
test
sbb
mull
ljmp
mov
test
pop
push
push
mov
jmp
mov
pop
xchg
jne
and
inc
push
add
out
jo
cltd
adc
jp
lods
add
or
inc
fcoml
movsl
inc
lds
dec
push
xchg
xchg
sbb
push
jo
lahf
sub
and
test
in
xchg
in
in
lret
add
lret
rsm
mov
loopne
cmp
inc
ljmp
jb
inc
jge
pop
gs
movsl
add
pop
xchg
inc
inc
jmp
lods
jg
mov
cmpsl
cmp
pop
std
stc
cmp
int3
sub
cmpb
pop
sub
xchg
fninit
xor
bound
push
es
jecxz
xchg
pop
pop
sub
into
add
mov
mov
lea
pop
add
or
or
or
das
and
mov
inc
mov
repz
bound
xchg
addr16
movsb
mov
fldl
cltd
pop
lods
cli
dec
ljmp
jge
push
cmp
mov
setne
jmp
je
leave
push
and
loop
ffreep
movsl
and
push
push
nop
mov
push
dec
add
lock
dec
push
ficoml
mov
addr16
jle
dec
stc
out
dec
loopne
mov
out
adc
pop
test
fbstp
and
jp
popf
out
cmc
dec
push
pusha
mov
or
mov
mov
rcrl
subb
push
push
mov
mov
sub
cs
movsl
cmpb
jne
mov
push
dec
xor
xchg
mov
or
adc
adc
mov
xor
insb
out
pusha
leave
data16
mov
mov
add
sub
cwtl
nop
sub
xor
repz
das
pop
sahf
cltd
inc
xchg
cmpsb
adc
xchg
adc
mov
insb
jp
xchg
jmp
fwait
or
adc
rcll
into
xor
cmpb
xchg
stos
sub
cmp
ret
out
and
shr
mov
jp
xor
xchg
rcl
test
jmp
push
bound
jmp
insb
xchg
jge
add
push
mov
sub
fldl
inc
jmp
sub
faddl
cld
push
xchg
test
repz
mov
sub
imul
push
fs
sub
cmpsl
dec
adc
fcompl
sbbb
add
lret
add
ja
cltd
leave
mov
push
mov
sbb
mov
pop
cwtl
or
and
dec
or
add
jnp
push
push
push
mov
xor
or
movsb
test
mov
jg
aam
data16
mov
cli
cmp
xchg
add
dec
jle
jmp
add
mov
and
or
cmpsb
push
pop
cwtl
out
add
imul
cmp
sub
xor
stos
std
xchg
test
mov
xorl
and
jp
adc
sbbb
mov
in
mov
sub
pop
jmp
add
adc
xor
push
mov
jns
das
mov
jnp
and
fsubl
inc
divb
mov
jnp
cmp
jo
cwtl
out
adc
rcl
scas
clc
out
shll
fnsave
cmpsb
add
add
jae
add
ja
cmp
cmp
arpl
ret
ret
lods
repnz
xchg
subb
aad
sub
addr16
add
sub
rcr
int3
addr16
add
ds
stc
cs
or
pop
push
lock
mov
jl
je
or
adc
ffreep
cmp
imul
sbb
inc
mov
aaa
out
jl
lock
testb
and
fstpl
or
sub
jno
out
int3
outsl
lcall
fcoms
bnd
into
or
imul
sbb
adc
xchg
jl
or
repnz
pop
pop
or
push
loopne
dec
ret
mov
ljmp
cmc
rorb
pop
inc
aam
nop
shl
dec
mov
loop
inc
push
data16
mov
shrl
imul
push
jge
rclb
xchg
fwait
mov
pop
cmpsb
sub
xor
jg
or
cmp
test
jb
sbb
rolb
jp
in
push
repnz
popw
scas
fxch
ja
inc
sarl
dec
sahf
mov
rcrb
push
push
mov
xor
shl
xor
dec
push
ds
push
movsb
out
in
das
loopne
fs
pop
ljmp
inc
lahf
test
push
mov
or
lahf
sub
mov
cmc
jnp
lods
or
daa
sub
and
shl
bound
dec
cmp
xchg
push
mov
mov
ret
cmp
jo
popf
idivl
lock
lcall
jo
insl
mov
daa
xor
sub
and
xor
push
push
je
add
mov
push
enter
ret
scas
scas
movsl
loopne
ret
or
pop
lret
loope
sub
xor
dec
out
push
sub
shr
stos
xlat
loope
out
inc
aas
push
sub
leave
sbb
jle
dec
fcomip
mov
adc
cwtl
and
pusha
mov
leave
scas
fwait
jo
jae
aam
jle
mov
out
xor
push
enter
push
jb
jmp
mov
fdivp
jns
popa
gs
inc
in
sbb
mov
cld
mov
imul
add
test
movsb
jecxz
inc
bound
push
mov
jl
or
cmp
xor
jmp
push
roll
sub
xor
stos
cltd
insl
and
add
mov
xchg
das
mov
sub
jno
pop
das
xchg
jg
shlb
inc
mov
push
add
test
and
push
in
int3
cmc
icebp
pusha
push
push
adc
mov
in
jl
add
add
sbb
push
add
xor
and
sbb
mov
dec
sbb
jmp
jp
and
inc
cwtl
mov
xchg
clc
lds
sub
xlat
jg
xor
and
mov
sub
pop
shr
mov
sbb
cld
insb
mov
push
inc
sub
repnz
addr16
or
cld
xchg
pop
repz
xor
or
adc
fldl2t
and
mov
ret
or
jns
lods
push
xchg
jb
repz
xchg
dec
ret
xlat
out
out
pop
xchg
pop
mov
std
stos
xchg
mov
and
js
jb
stos
pushw
cmp
mov
jecxz
jmp
data16
mov
loop
shrb
dec
add
sbb
add
jecxz
rcll
mov
mov
fmull
mov
std
add
jo
cld
push
rorl
jnp
bound
or
ret
loopne
mov
mov
jmp
cmpsb
pop
subb
nop
and
sahf
arpl
inc
lahf
xchg
adc
xor
js
mov
add
fcoms
or
mov
or
shlb
or
testl
and
inc
sub
jno
ja
mov
push
jmp
ja
int3
sub
mov
push
incb
cmpsb
hlt
add
gs
jbe
aam
mov
and
imul
test
xchg
icebp
jmp
hlt
cmp
mov
nop
nop
and
sbbb
sbb
cli
cld
push
xchg
mov
mov
lcall
mov
call
add
push
addr16
pushf
insl
push
mov
push
sbb
aad
shll
sub
adc
dec
lret
pop
bound
push
add
jmp
xchg
add
popa
jl
adc
fisubrl
mov
pop
add
lock
adc
pop
mov
and
pop
ljmp
fcmovbe
xlat
rclb
out
push
sub
or
jne
in
dec
fldt
mov
mov
push
idivb
mov
das
and
orb
add
mov
nop
lods
gs
add
xor
push
shlb
sub
jmp
inc
fs
adc
call
fstpt
and
mov
adcb
in
push
loopne
fwait
in
cmpb
cli
xorb
pop
xchg
push
push
inc
fimull
rorb
pop
push
inc
insl
divl
and
arpl
mov
sahf
shr
les
sub
movsl
and
cwtl
ja
xor
or
in
out
or
pop
jb
add
cmp
jmp
cmpxchg
and
or
les
in
cmp
sbb
add
js
es
add
add
sub
es
das
jmp
repz
out
inc
jmp
das
aad
daa
push
outsl
push
pop
lret
out
pusha
ljmp
mov
add
lock
jo
sub
js
xor
fiaddl
mov
or
imull
loopne
loope
cld
pusha
lock
jmp
and
inc
pop
mov
lock
mov
mov
add
xlat
jmp
pop
shll
ljmp
push
mov
xor
sbb
fldl
mov
clc
mov
fwait
xchg
jne
jp,pt
or
xor
mov
mov
adc
xor
inc
mov
cwtl
add
iret
repz
adc
aaa
sbb
ret
push
jp
jb
sub
mov
mov
test
sbb
int
add
jmp
cli
xlat
cmpsb
push
sbb
pop
xor
sub
pop
pushf
and
decl
aas
arpl
jg
leave
ret
add
enter
roll
cmc
rolb
fbstp
cmp
inc
pusha
sub
sub
jo
gs
nop
jl
sbb
xchg
xor
in
aam
in
or
or
mov
cwtl
push
adc
sub
out
adc
mov
jmp
ljmp
adc
clc
call
lcall
daa
aam
push
and
or
test
push
hlt
das
jno
pusha
sub
mov
cwtl
pushw
outsl
push
fistps
mov
xor
push
out
dec
mov
aas
jmp
in
jo
aam
faddp
out
fs
mov
divb
adc
pusha
pop
in
es
call
pop
jle
ljmp
stos
or
inc
flds
inc
add
sub
jecxz
add
and
adc
add
dec
cmp
stc
divb
mov
out
mov
imul
ss
and
int3
add
popf
push
je
test
rorl
cmp
test
jne
scas
out
rcll
pusha
lock
pop
or
sub
or
imul
test
xor
adc
add
das
or
out
repz
lods
adcb
inc
cmc
aas
add
pusha
pop
jbe
subb
leave
add
out
xor
cmp
js
sub
pop
mov
loopne,pt
jg
cmp
or
mov
in
mov
mov
or
ret
push
add
rcrb
inc
push
jp
mov
jmp
jg
sbb
push
xor
xor
outsl
fsubrl
xchg
xchg
std
stos
add
inc
inc
ds
imul
mov
sbb
lahf
add
shl
cmp
daa
rcr
test
and
cs
int3
fwait
ljmp
xor
mov
xor
or
pop
mov
inc
jl
and
movsb
fnstsw
cmp
pop
xor
xor
daa
and
jae
sarb
xchg
stos
xchg
mov
cmp
sbb
lock
sbb
sbb
and
ja
cld
dec
or
sbb
mov
or
pop
pop
mov
jnp
sub
aas
outsb
loopne
rcrl
and
ja
pop
imul
add
push
xchg
cmp
stos
shlb
dec
daa
pop
aas
sbb
sbb
pop
out
or
mov
add
or
fimull
out
test
xchg
inc
test
movsl
adc
mov
and
movl
adc
sub
lret
es
add
mov
insb
or
xor
adc
sahf
repz
aas
mov
loopne
mov
mov
inc
pop
les
int3
sub
out
testb
in
pop
aaa
test
imul
jo
outsb
mov
jle
mov
pusha
testl
jmp
push
adc
jge
jle
scas
jmp
xlat
or
inc
testl
cltd
testb
mov
xor
xor
jnp
push
xor
imul
or
data16
sub
sub
ret
push
aad
inc
gs
mov
mov
shl
ror
fwait
cmp
shrl
sub
xchg
mov
rolb
ljmp
push
std
sub
pop
fsub
pop
push
add
mov
jbe
pusha
cs
xor
push
push
outsl
lods
sbb
jne
int3
add
dec
mov
shlb
and
scas
sbb
sbb
in
add
data16
cld
ljmp
mov
wrmsr
xor
insl
lret
ret
pop
push
arpl
jg
or
add
dec
inc
xchg
mov
dec
add
fstps
adc
and
rcrb
loop
rolb
adc
lret
outsb
rcrl
pop
sub
int
paddd
xchg
pushl
int
adc
mov
dec
xor
or
pusha
cmc
adc
sub
stos
jp
nop
ds
push
es
pop
pop
sbb
adc
xor
bound
mov
sub
data16
js
pop
bound
inc
shrb
sub
xchg
mov
mul
push
lods
xlat
lcall
jl
xor
sbb
in
dec
imul
popf
xchg
pop
or
out
pop
inc
imul
push
add
in
inc
mov
pop
mov
mov
xor
aas
lods
push
adc
adc
and
push
aad
push
jmp
leave
cltd
jbe
and
push
xchg
jo
mov
xchg
xchg
fisttpll
js
add
ss
add
popa
add
in
adc
mov
push
dec
cmpb
push
notb
in
mov
adc
rolb
or
mov
arpl
pop
popf
sti
sub
sub
xchg
iret
push
in
aas
lret
test
xor
push
lods
roll
imul
jmp
sub
sub
xlat
leave
pop
sarl
adc
jbe
xor
call
push
pop
dec
mov
push
je
pop
out
mov
pop
popf
mov
nop
dec
cmp
adc
xchg
push
jmp
and
lods
pop
push
push
cli
sub
mov
aam
and
shll
imul
and
pusha
cmp
sahf
push
popa
adc
inc
or
incl
sub
jmp
push
or
adc
iret
movlps
xchg
jle
or
stos
mov
push
push
ret
xchg
movsb
rcrb
xor
ret
push
dec
sub
cmp
stc
and
pop
xor
adc
xor
cmp
outsb
or
jne
arpl
out
xor
aas
lods
fimull
insb
or
jmp
cmpsl
jne
mov
inc
jl
ret
in
dec
ret
ja
loop
push
adc
pop
scas
cmp
negl
repz
sub
lea
rcrb
adc
dec
pop
or
jno
cmpsl
xchg
frstor
in
xchg
repz
dec
push
pop
jb
mov
add
xor
or
mov
xchg
xor
add
jg
out
adc
jnp
add
dec
hlt
dec
inc
pop
add
mov
jne
add
dec
ljmp
sbb
fs
xor
push
orb
es
mov
push
xchg
xchg
mov
xchg
repz
dec
in
add
dec
iret
jmp
bnd
sti
enter
pop
pusha
pop
or
jg
sbb
cli
movsb
and
dec
inc
cli
add
xchg
dec
or
sbb
pop
jb
fmul
mov
add
mov
push
sbb
mov
or
push
xchg
add
clc
pop
jle
rcrl
js
sub
sub
rolb
inc
adc
cs
adc
dec
add
repz
jne
cmp
or
adc
inc
or
or
addb
ret
jae
jo
mov
push
inc
ss
in
pop
ret
sub
je
pop
nop
pop
add
mov
std
adc
adc
sti
in
xchg
pop
sbb
push
push
pop
dec
push
adc
jecxz
xor
rcll
popa
mov
aam
in
sub
in
pop
ret
xlat
xchg
and
pop
pushf
dec
pop
fsubl
stc
cltd
adcb
cmp
iret
or
cs
dec
clc
adc
fildll
pop
mov
dec
stos
fs
stc
cmp
or
mov
leave
or
addr16
sahf
fisttps
pop
out
inc
sub
xor
sub
or
add
pop
pop
mov
push
and
pop
mov
push
or
mov
popa
sbbb
xchg
jb
and
inc
xorb
je
andb
sbb
mov
ficompl
fists
pop
inc
add
mov
cmp
dec
xchg
pop
mov
in
pop
pop
mov
ljmp
push
and
cmpsl
mov
xchg
pop
sub
inc
ljmp
mov
cs
leave
adc
xchg
cmp
scas
push
outsl
sbb
push
pop
xchg
movsl
add
mov
jle
and
dec
test
mov
xor
push
dec
and
outsl
push
mov
shr
sbb
add
popa
pop
test
jecxz
lret
push
add
clc
push
fwait
test
sub
sub
leave
idivb
xlat
rolb
sbb
pop
in
and
or
push
mov
test
leave
or
pop
outsl
test
rcrb
mov
add
adc
enter
xor
pop
push
mov
mov
xchg
sbb
push
jno
add
in
add
das
and
push
mov
add
inc
fimull
push
call
pop
gs
aam
aas
mov
push
stos
add
push
mov
pop
or
pop
or
sub
and
or
jae
dec
sbb
lods
fistl
xchg
lock
xchg
das
push
add
add
push
cs
imul
and
xor
push
or
pop
daa
xchg
push
sub
stc
shl
push
in
inc
fsubrs
test
scas
push
mov
shll
das
push
push
cmp
test
movsl
jge
je
nop
jle
and
icebp
das
sbb
stos
mov
xor
mov
addb
add
xor
xor
xchg
xchg
loope
repnz
test
sub
xchg
rcrb
xchg
cmp
mov
out
inc
pop
xor
and
call
or
mov
ret
cs
es
add
popf
out
adcl
dec
jns
jmp
sahf
sbb
fiadds
adc
gs
push
in
push
adc
scas
and
outsb
push
cmp
jns
cs
and
mov
lcall
mov
pop
sbb
pmaxub
fstl
daa
mov
xchg
dec
or
and
loopne
imulb
or
mov
shlb
rorl
and
incb
addr16
cmpsl
loope
int
sahf
jne
sbb
jg
sub
imul
mov
enter
cbtw
and
and
je
rol
cmpb
mov
call
push
pop
stos
inc
adc
or
mov
jl
pop
aad
insb
rclb
add
ja
gs
jmp
mov
lea
fstps
jo
xchg
je
popa
push
push
nop
popf
jl
push
sbb
icebp
mov
mov
adc
sub
lea
aas
addl
push
ja
push
or
rcrb
sub
nop
sbbl
cmp
mov
add
cmp
sarb
pop
dec
insl
xor
push
sbb
cmpsl
roll
add
jl
sbb
out
mov
adc
jmp
jne
cli
sub
imul
adc
in
std
leave
fadd
jns
lahf
or
push
movsb
pop
inc
jp
fs
adcl
aas
call
mov
test
mov
repz
inc
into
mov
lcall
imul
dec
ja
mov
push
scas
pop
pop
popa
cmp
xor
push
mov
xchg
add
es
and
add
in
sub
add
or
dec
cs
adc
push
mov
cwtl
mov
push
mov
xchg
adc
aam
repz
mov
sub
xor
bound
fldl
pop
popf
loopne
jb
pop
jle
lret
adc
scas
cmp
pop
inc
cmp
jmp
sub
ljmp
in
fucompp
adc
pop
mov
mov
xchg
push
test
hlt
adc
fldt
adc
aaa
and
jo
popf
inc
dec
es
xchg
stc
jno
test
xchg
add
jle
jnp
int3
jno
pop
ret
mov
outsl
mov
lods
nop
test
jmp
loopne
lret
imul
into
jo
add
daa
call
push
jno
jae
sub
mov
pop
outsl
lret
in
push
mov
inc
xchg
call
dec
sbb
fs
fcomps
ljmp
rcrb
faddl
jmp
mov
pop
outsb
nop
pusha
ljmp
not
jmp
daa
ss
insl
or
ret
daa
ret
jae
pop
or
mov
outsl
mov
mov
popa
mov
jbe
sahf
xlat
sbb
inc
fwait
test
push
in
add
jmp
pop
neg
stos
cmp
or
into
cld
int3
dec
out
lds
dec
mov
pusha
push
mov
frstor
xor
rorl
add
ds
xchg
or
dec
and
or
call
adc
mov
or
cld
or
loop
cmp
pop
push
add
push
add
enter
mov
out
add
cmp
dec
sar
addr16
add
mov
cwtl
fstps
ret
dec
or
and
stc
pusha
jmp
ret
popa
xchg
add
scas
pushl
sarb
adc
push
pop
dec
ret
sub
out
imul
mov
popa
sub
addr16
pop
mov
or
sti
pop
inc
mov
inc
lods
push
stc
xchg
insl
and
mov
fsubrl
add
mov
int
xchg
dec
das
or
ja
or
insb
and
movsb
xorb
xchg
std
xor
subb
xlat
dec
and
jmp
push
or
mov
aad
push
loope
jg
pop
in
add
and
jmp
ja
pop
movl
and
xor
mov
cmpb
fs
or
mov
ds
movsb
enter
or
push
fsubs
add
mov
sub
fs
das
mov
idivb
add
hlt
or
out
clc
sarl
out
cmp
mov
and
mov
adc
mov
inc
pop
mov
push
inc
pop
push
or
insb
sbb
push
ljmp
clc
cmpsl
cmpsb
add
ret
pop
sbbb
add
js
pop
add
adc
aad
jnp
stc
xchg
add
sub
inc
mov
dec
hlt
jne
pop
xchg
mov
daa
jbe
or
dec
jbe
les
mov
mov
imul
enter
pop
lahf
mov
sub
enter
int
outsl
stc
jmp
shl
adc
dec
dec
bnd
push
add
fimull
sub
syscall
mov
inc
mov
mov
je
andb
lahf
push
jmp
nop
repz
sub
adc
test
clc
sub
adcb
xchg
or
push
mov
sub
ljmp
or
add
loop
ja
sarb
xchg
jmp
pop
pop
add
or
cmpsl
hlt
and
push
push
pop
into
sbb
nop
or
add
sbb
lret
outsl
add
sub
popa
addl
push
sub
jp
les
lcall
sub
jmp
rorb
in
out
outsb
xchg
sti
pusha
pop
pop
mov
sahf
fistps
adc
pop
mov
push
mov
dec
xor
xor
xlat
popa
jle
shrb
sti
ljmp
sbb
lods
cmpl
sub
pop
push
lret
sbb
inc
shlb
jge
xchg
add
cmp
mov
xor
mov
loopne
cld
pop
mov
and
pop
mov
call
stos
std
imul
add
sbb
push
inc
adc
inc
mov
inc
jns
lods
repz
mov
out
lea
jnp
das
pop
lods
dec
sub
adc
xor
pop
add
adc
call
inc
fsub
aaa
std
lods
insb
xor
xor
out
aad
or
mull
add
sub
pop
shr
mov
sub
cmp
daa
pop
adc
decb
mull
mov
or
ret
push
jns
gs
push
add
cli
jp
in
push
das
call
nop
dec
outsb
test
pop
jmp
dec
iret
jmp
dec
ret
test
xchg
test
jg
adc
push
dec
scas
out
add
scas
out
push
xor
xchg
xor
movsb
mov
push
xchg
xchg
inc
pop
push
push
push
mov
or
popf
cmp
imul
and
outsb
xor
add
popa
iret
or
jmp
std
add
push
shl
add
mov
inc
or
cli
mov
mov
ja
sbb
dec
ret
popa
aaa
pop
pop
push
out
push
enter
jo
popf
and
pop
push
sbb
sub
test
dec
push
sbb
es
xor
xor
sub
mov
or
cmp
enter
int3
repz
scas
pop
testl
push
mov
xchg
shl
aad
aas
popa
adc
push
subl
jge
push
mov
sbb
push
pop
mov
fnstenv
push
adc
and
std
pop
packssdw
inc
mov
inc
dec
arpl
push
mov
mov
lea
pop
sbb
clc
inc
jmp
adc
jmp
xor
cs
rclb
push
push
jl
pop
std
stos
push
jns
adc
xor
bnd
lods
test
scas
sub
int
ja
cmpsb
sub
pop
loop
pop
push
pop
and
push
jo
js
sub
sahf
ljmp
push
mov
aas
mov
mov
mov
sub
int
lret
je
stos
jne
and
arpl
pop
pop
hlt
add
or
mov
dec
mov
dec
pop
sub
dec
mov
push
lret
in
ljmp
stc
adc
daa
leave
sub
xor
xor
pop
jnp
iret
pop
dec
jmp
push
xor
rcl
loope
dec
cli
mov
xchg
sbb
pop
add
je
cld
arpl
adc
and
sbb
call
and
rol
ljmp
mov
inc
pusha
cmpsl
pop
mov
or
ret
out
push
hlt
dec
add
jle
mov
pop
mov
lret
jmp
add
inc
lret
fdivrs
or
cmp
outsb
in
add
jmp
mov
jmp
fadd
xchg
inc
xchg
and
clc
call
popa
xchg
pop
push
push
cld
sahf
pop
sbb
inc
outsb
xchg
cmp
inc
lahf
popf
push
or
jmp
mov
xchg
jmp
cmp
xor
xchg
add
and
and
sahf
sub
mov
push
xchg
lahf
mov
cmpsb
jl
aas
lods
cmpsl
push
ret
sbb
call
adc
push
add
mov
rcll
out
bound
mov
push
mov
jmp
dec
pop
jae
cmp
imul
mov
jbe
pop
push
mov
jae
hlt
cmp
lock
dec
mov
or
in
jg
aas
jle
adc
arpl
int3
dec
sbb
xor
icebp
jmp
push
push
mov
or
sti
mov
xchg
pop
scas
int3
dec
mov
push
jmp
inc
icebp
js
mov
push
addr16
push
push
push
and
sub
pop
lods
outsl
push
imul
inc
mov
push
cli
imul
rorb
jne
mov
and
pusha
jp
arpl
inc
xor
movlps
stos
sub
dec
push
mov
push
adc
cwtl
mov
cmp
jmp
jp
jmp
cmp
orb
mov
pop
jnp
sbb
xlat
lret
sbb
iret
jmp
mov
shr
xchg
popl
xor
shll
mov
hlt
daa
sbb
push
movsb
inc
mov
jl
lahf
mull
mov
pop
mov
dec
xchg
lock
popf
push
push
shr
mov
gs
lods
aam
lock
jmp
cmc
xor
fucom
cmpsb
mov
std
addb
dec
cmp
movlps
sbb
mov
jl
ficoml
sub
pop
pop
jg
push
and
sub
nop
xchg
add
test
lods
insb
mov
test
std
push
nop
sub
inc
adc
es
mov
dec
jo
mov
pop
push
mov
dec
mov
inc
mov
repnz
xor
dec
icebp
jnp
pop
adc
mov
pop
xor
sub
shrb
cs
aad
adc
xorl
jmp
push
mov
sub
mov
aad
inc
out
test
addr16
xchg
push
sti
shlb
ja
jecxz
dec
test
push
mov
sub
and
popa
dec
arpl
ss
xor
dec
and
fidivs
dec
push
jge
pop
push
insl
dec
mov
cmp
jno
adc
sbb
ds
sahf
jp
cmp
push
adc
std
pop
daa
pop
in
ja
ret
les
mov
adcb
scas
inc
fidivl
inc
push
xor
mov
cmp
aaa
mov
dec
pop
mov
jae
andl
add
cmp
jnp
mov
pop
jb
xorl
lock
idivl
push
cmp
sub
push
adc
mov
or
js
xor
sub
ljmp
push
sbb
out
aam
arpl
pusha
int
fistpll
clc
jle
test
or
fsub
adc
shrb
in
in
sub
les
or
push
mov
pop
and
pop
xchg
cltd
lods
xlat
pop
out
push
add
insl
mov
mov
xchg
mov
xor
push
and
sub
lods
adc
add
sub
pop
or
push
outsb
leave
test
pop
loopne
dec
pop
mov
ret
push
inc
xchg
sbb
jge
sbb
sub
cmc
xchg
cld
aas
sub
dec
fs
fistpll
push
into
add
and
push
push
int3
out
sbb
pop
outsb
add
shll
sub
hlt
cmp
jle
repnz
ja
movsl
jmp
test
ljmp
adc
mov
or
sbb
mov
sbb
adc
mov
daa
je
pop
cmpsb
or
inc
sub
xor
push
pop
pop
adc
mov
sub
xor
imul
xchg
pop
add
jge
int
pusha
stos
ret
mov
movsl
add
cmp
loopne
sub
push
mull
and
or
dec
sub
pop
mov
adc
mov
pop
add
xchg
das
fcomps
enter
or
cwtl
sub
cwtl
mov
inc
es
add
add
and
leave
pop
cltd
rolb
mov
jecxz
addl
scas
inc
mov
inc
dec
repz
jmp
jmp
xor
push
cmp
fidivrl
aaa
push
rolb
repnz
pop
push
inc
sbbb
jno
adc
cmp
sbb
add
in
mov
inc
rcrb
mov
sub
and
dec
xor
sbb
adc
inc
sahf
pop
int
xorb
and
test
push
or
aaa
cld
aad
cmp
jo
cwtl
jmp
jmp
push
sub
xchg
repz
cmp
pop
mov
pop
pop
daa
cmpsl
push
out
sub
iret
dec
call
mov
dec
fimull
dec
fmull
mov
popf
shlb
inc
arpl
hlt
into
call
or
fsubl
push
and
pop
push
movsl
sti
jns
outsb
test
pmaxsw
pop
mov
sub
add
mov
dec
and
add
sbb
pop
push
loope
pop
mov
xchg
or
add
mov
mov
push
mov
cli
sbb
loopne
repz
adc
push
add
pop
pop
lret
jbe
shlb
push
or
or
inc
push
sub
xor
push
fisttps
pop
in
sub
cmp
jecxz
out
or
fwait
pop
insl
jp
rcrb
push
popa
jmp
nop
mov
dec
ret
out
fs
jmp
sbb
xchg
add
adc
test
jo
and
xor
add
sbbl
pop
inc
cmpl
std
cmpsl
or
inc
loope
push
xchg
fstpl
popa
mov
pop
push
jge
shlb
mov
mov
cmp
pop
pop
jg
push
rorb
push
dec
mov
je
xor
xor
das
cld
adc
push
fs
lock
xchg
cmpb
push
or
push
stc
sub
mov
pop
repnz
daa
adc
push
adc
pop
xchg
imul
sbb
add
mov
jmp
or
andl
shrl
dec
movsb
mov
stos
cwtl
mov
xor
push
adc
imul
out
push
fucom
ficomps
xlat
jg
es
mov
lods
imul
jl
adc
and
cmc
sbb
or
sub
and
sub
cmp
fists
into
sub
pop
out
or
dec
inc
add
icebp
test
dec
mov
or
cmp
das
jp
loop
stos
jge
push
mov
sub
shlb
adcb
or
mov
test
aas
hlt
pop
pop
inc
mov
jle
dec
dec
cmc
adc
adc
stc
jb
or
sub
inc
scas
dec
dec
popf
add
and
fistpl
lods
orl
test
push
or
movsb
xor
jle
scas
pushf
cmp
jl
das
test
shlb
push
jae
mov
cwtl
push
mov
mov
enter
cmpsb
mov
mov
sub
add
bound
shl
rclb
pop
cmpsb
xor
les
mov
xor
cld
rclb
dec
xor
scas
cwtl
fisttpll
adc
shll
xor
push
push
mov
add
dec
shl
and
fbld
mov
pop
cmp
mov
imulb
dec
cmovg
sbb
jae
in
pop
mov
sbb
or
push
mov
loopne
clc
push
sbb
sub
dec
xor
ja
js
cmp
dec
xchg
pop
mov
shr
sub
ljmp
test
dec
jbe
jo
dec
scas
stc
push
fmulp
sub
jp
sub
sub
pushf
mov
mov
mov
cmc
outsb
add
mov
xor
cmp
loopne
xor
rolb
dec
xor
push
jp
and
cs
les
xorl
aaa
mov
jno
jmp
sub
scas
ret
mov
mov
sub
sbb
loope
lods
push
inc
sub
mov
mov
insb
xchg
sti
movsl
ret
insl
mov
scas
loope
inc
or
mov
testl
add
insb
mov
test
jmp
push
push
test
mov
add
xor
pop
mov
add
imul
add
inc
sbb
pop
and
testb
sub
push
inc
idivb
jmp
adc
imul
les
stos
lretw
das
div
mov
clc
adc
add
std
notl
mov
fdivl
push
mov
fcom
enter
into
scas
cmpl
xchg
pop
out
adc
jae
push
mov
cmpl
sub
inc
jp
mov
daa
mov
or
popa
insl
incb
or
jle,pn
pop
insb
push
or
out
pop
dec
push
xor
mov
mov
sub
pop
clc
incl
das
arpl
xor
xchg
mov
dec
sub
mov
jnp
xchg
out
sub
int3
xor
fiaddl
jae
cmp
add
dec
inc
sahf
out
push
es
jo
bound
mov
or
push
push
aas
call
dec
sub
pop
sub
scas
fbld
jae
or
icebp
jnp
ljmp
popf
adc
mov
jae
xchg
fcmovb
jmp
adc
push
sub
pop
inc
loope
mov
jmp
lods
lret
or
or
movlps
cmp
adc
lret
mov
push
xchg
imul
out
lods
es
outsb
call
or
xchg
lods
push
std
or
jne
scas
or
cmp
in
pusha
lock
push
or
dec
cmp
cs
cmp
push
jge
push
add
lock
pushf
dec
jb
imulb
jmp
sub
mov
daa
gs
mov
mov
pop
lods
add
add
fsubrs
or
xlat
je
push
or
inc
cmpsl
xor
add
xorb
push
inc
or
mov
ljmp
and
dec
outsl
and
xor
ja
inc
jmp
mov
sub
mov
xchg
xor
add
mov
add
add
lret
jmp
pusha
data16
mov
pop
xchg
imulb
shl
mov
mov
xor
inc
xchg
fimull
test
pop
inc
push
push
cli
andb
pop
ds
lahf
push
or
xlat
or
das
xchg
pop
clc
add
ret
push
pop
sub
and
cmpsl
and
and
imul
and
bnd
dec
add
add
xor
xor
and
and
pop
mov
pop
xchg
in
imul
testb
mov
pop
mov
jns
daa
shlb
jle
nop
cmp
pop
sbb
inc
pop
test
call
repz
stos
mov
ljmp
pop
pop
loop
xchg
shll
xlat
data16
add
dec
push
jge
rep
arpl
mov
adc
add
scas
ja
ror
fildl
dec
dec
jecxz
adc
insb
pop
mov
shrb
sbb
and
xor
pop
xor
jns
out
sbb
andnps
push
push
mov
or
call
pop
in
js
mov
xor
in
fsubr
xor
pop
cmp
or
mov
xchg
mov
out
lock
cwtl
mov
out
jnp
and
xchg
push
test
jg
mov
add
sbb
sbbl
mov
pop
inc
imul
adc
inc
imul
sub
inc
call
pop
pop
icebp
mov
push
or
data16
sub
pushf
lret
cmc
mov
adc
enter
jb
out
mov
incl
or
test
jmp
orb
cld
lds
push
mov
lock
xchg
jmp
mov
rorb
sub
add
add
or
jbe
mov
jl
pop
jmp
cmp
loopne
jl
jg
jecxz
scas
lahf
les
push
or
fstpl
fcoms
loope
iret
ja
inc
in
and
jge
jns
adc
pop
inc
rorl
gs
out
dec
jg
repz
adc
push
ljmp
jmp
or
lods
insl
xor
call
daa
xlat
cli
fs
dec
stos
lods
cmp
pop
adc
mov
cmp
dec
es
dec
ss
pop
arpl
lret
pop
adc
jecxz
xchg
int
and
pop
inc
in
es
dec
or
shll
jo
sarb
das
aaa
pop
lds
pop
jg
mov
dec
push
pop
inc
lock
leave
bound
cli
sub
lods
dec
fcoms
xor
imul
mov
sbb
pop
jnp
loope
call
xchg
push
add
jle
outsb
xchg
adc
mov
fdiv
adc
mov
push
pop
add
jae
or
icebp
jecxz
and
pop
add
mov
in
pop
xor
inc
lods
mov
and
jmp
in
push
mov
movsl
sub
push
aaa
dec
incl
jmp
mov
push
add
xor
shlb
xor
xor
jg
movsl
dec
push
cmp
sub
add
nop
dec
daa
inc
jmp
fndisi(8087
adc
mov
ljmp
testl
push
mov
jecxz
pop
stc
out
cmp
movsl
sub
and
pusha
pop
in
xor
into
jbe
adc
jg
fisubrs
xor
dec
pop
xchg
ficomps
sti
dec
je
ja
lods
cmp
sbb
std
int3
xchg
xor
outsb
cld
not
cmc
jo
orb
divb
pop
add
adc
cmpsl
add
jmp
add
cld
or
xchg
out
out
jmp
dec
jl
add
xor
or
mov
push
dec
dec
mov
cmp
mov
repnz
mov
mov
sbb
lock
pop
mov
hlt
push
mov
lahf
xchg
and
pop
loope
jo
scas
pusha
mov
adc
sbbb
xor
scas
lock
dec
pop
inc
mov
jb
test
dec
xchg
subb
aas
adc
scas
inc
imul
out
outsb
inc
je
dec
out
xor
cmp
repnz
sub
pop
stos
mov
inc
pop
pop
sub
jbe
or
inc
jmp
add
push
push
xlat
adc
test
adcb
sbb
jns
add
xlat
cltd
jb
lea
mov
loop
or
adc
lods
out
dec
lds
mov
stos
add
or
mov
mov
push
sub
jo
lods
scas
movsl
mov
popa
call
movsb
mov
out
imul
ret
enter
mov
repnz
push
cmpsb
mov
push
imul
sub
xor
cmp
adc
push
test
pop
fs
xlat
out
mov
push
pop
push
lock
push
ret
enter
aad
inc
pop
and
push
sub
mov
clc
add
bound
and
cmc
arpl
jmp
jg
mov
add
stos
mov
push
inc
mov
mov
add
sbb
add
mov
add
out
pop
adc
xor
xlat
jmp
roll
push
dec
mov
das
pop
bound
sbb
repnz
into
push
ja
loop
repz
xchg
adc
out
add
leave
ds
mov
mov
arpl
frstor
cld
or
jmp
pop
popf
ja
jne
xchg
add
loope
daa
lock
sarl
call
out
jg
xor
jbe
rorb
cmp
add
jno
test
cmp
negl
mov
dec
pop
aad
push
in
mov
and
lea
lahf
jno
movsb
sub
or
pushf
imul
pop
push
xor
imul
xchg
pop
test
ljmp
sub
rcl
or
pop
rcll
aaa
mov
das
int3
hlt
daa
pop
adc
mov
lock
addr16
sbb
es
fbstp
push
xchg
pop
cmp
mov
cwtl
sarl
pop
sub
daa
inc
sub
or
pop
xor
mov
jmp
push
xchg
jmp
mov
push
lock
push
pushf
shrl
inc
mov
cmp
and
dec
lods
adc
dec
xor
daa
jo
inc
jae
aad
push
test
or
mov
ss
cmp
insb
leave
shll
dec
dec
stc
loopne
pop
cwtl
xchg
nop
pop
xor
or
sub
push
jge
and
out
sub
cmp
mov
loopne
xor
mov
mov
out
into
cmc
mov
outsb
jne
mov
je
xlat
add
jmp
cld
out
shl
add
push
ja
cwtl
in
jo
add
inc
jmp
fldl
or
dec
aas
mul
fmuls
push
int3
lret
push
sub
shlb
or
push
mov
mov
mov
mov
sub
loope
test
or
leave
testl
adc
xchg
xor
dec
pop
inc
test
stos
scas
mov
and
rol
or
outsb
xor
inc
or
add
sbb
rorw
cmp
inc
jmp
jmp
pop
sub
inc
pop
mov
sarl
pop
leave
mov
lds
dec
cwtl
arpl
or
pop
sub
int
pop
xor
xor
sbbb
add
add
cmp
push
push
pop
jle
pop
cwtl
lods
jmp
cmpsl
mov
pop
dec
repnz
and
jmp
imulb
or
jmp
testl
gs
mov
pop
pop
push
ret
or
cli
shlb
jne
jmp
xor
sub
mov
repnz
hlt
imulb
jae
cs
pop
xor
xlat
mov
imul
or
fstps
cmp
sub
daa
ja
jae
or
dec
sub
jg
das
add
mov
outsb
loopne
imul
mov
inc
out
fstpl
cld
push
stos
mov
inc
push
ds
mov
xorb
adc
ljmp
push
dec
andl
adc
test
fimuls
mov
in
imul
jp
jmp
mov
mov
ficoml
push
push
lods
xchg
movl
das
es
popf
sub
or
js
in
dec
push
div
pop
in
dec
adc
mov
sub
push
push
pushw
daa
mov
int
jl
fs
mov
or
scas
inc
lea
dec
push
jmp
test
rorb
add
subb
mov
inc
lea
sbb
cmp
push
mov
js
in
sub
adc
clc
sub
push
jecxz
data16
pushf
mov
lea
and
scas
cld
jg
sub
ljmp
andb
rol
jmp
jno
flds
cmp
xchg
adc
add
mul
lcall
mov
pop
neg
add
cwtl
add
hlt
pushf
xchg
rclb
loope
add
div
popf
inc
jno
pop
mov
out
jmp
dec
popa
jnp
and
dec
fucom
or
pop
sar
push
daa
add
aaa
xchg
mov
add
dec
pop
mov
xchg
xor
ret
push
add
xor
xchg
add
clc
mov
ss
push
mov
sub
jg
inc
dec
adcl
dec
or
fdivrp
into
lock
shll
mov
lret
or
ja
int
jecxz
or
ficoml
pop
test
test
jmp
adc
lahf
sub
es
adc
add
push
adc
or
stc
shrl
dec
xchg
xor
add
pushf
and
shrb
ficoms
and
decb
pop
cmp
mov
mov
push
mov
xchg
outsb
cwtl
dec
aaa
daa
rcll
adc
xor
lcall
in
xor
mov
cmpsb
or
adcb
inc
ja
jae,pn
adc
out
xor
add
mov
add
std
sbb
pop
inc
lds
mov
jmp
add
nop
push
movsb
push
test
out
in
xchg
ret
sbb
sub
sub
xor
int3
out
add
popa
push
push
inc
sarb
test
push
push
jl
ret
pop
push
or
imul
xchg
or
std
pop
cmp
in
inc
sbb
jl
sbb
or
inc
ret
push
or
mov
cmp
cmc
xchg
test
and
ficoms
lock
sub
push
push
push
inc
or
dec
dec
int3
jne
adc
sahf
cmp
add
stos
add
fs
mov
push
mov
sbbb
dec
xor
cmpsb
mov
insb
ret
add
ret
sub
sarb
mov
or
mov
stos
cltd
pusha
pusha
mov
pop
test
xor
cmc
xlat
pop
lcall
dec
adc
pop
cmpsl
lret
data16
mov
jmp
stc
fstps
and
dec
pop
inc
je
xor
inc
inc
movlps
cmp
clc
das
lahf
dec
leave
in
add
fcoms
sbb
xor
sub
test
jecxz
xor
cwtl
ret
js
in
jmp
pop
sub
mov
add
pop
clc
ljmp
pop
fsubrs
xchg
mov
in
dec
fnstcw
mov
xchg
ds
int3
sbb
sub
sbb
xorl
add
cmc
test
sbb
mov
mov
add
ret
sbb
or
cmc
cmc
aaa
sub
mov
out
inc
or
mov
subb
test
faddl
fildl
cld
jmp
imul
push
jle
push
pop
sti
or
cltd
add
aaa
in
mov
inc
aaa
orl
mov
push
rcll
push
sar
or
mov
loope
mov
cmc
cmc
shrb
dec
jnp
cmp
pop
popa
push
pop
neg
xor
push
push
idiv
test
nop
mov
sbb
push
dec
inc
pop
cmpsl
mov
xchg
icebp
imul
fsubrs
inc
fcompl
push
jmp
data16
pop
xor
xchg
pop
loop
das
mov
fs
pop
dec
xor
pop
xor
sahf
push
addb
cmp
push
add
add
jecxz
shrb
xchg
mov
jno
ret
inc
jp
jae
adc
enter
lods
andb
mov
mov
mov
or
mov
dec
ror
mov
push
sbbb
push
push
mov
mov
and
jle
jno
jl
xchg
add
dec
jne
push
neg
nop
shlb
push
add
loopne
sti
inc
clc
shlb
outsb
mov
xor
adc
int3
lods
jmp
scas
pop
lcall
push
jns
out
lret
or
shll
loop,pn
nop
loopne
sub
loopne
pop
mov
ficoml
lcall
gs
dec
out
mov
test
push
inc
mov
pop
in
xchg
xor
jae
into
pop
mov
ja
mov
imul
mov
xor
and
stos
inc
sub
fsubrs
cmp
sub
sub
or
insb
inc
push
ret
push
fisubs
and
roll
subb
add
jge
call
lret
mov
jno
or
or
adc
or
adc
cwtl
outsb
cmpsl
je
xor
sub
xchg
in
add
xchg
push
sub
loopne
or
mov
sahf
inc
lds
or
stos
imul
pop
mov
inc
pop
outsl
lods
and
push
jmp
paddsw
inc
or
repz
aad
jbe
pop
pop
mov
lds
add
add
or
pop
mov
lods
shlb
cmp
or
jne
mov
or
pop
xor
out
sub
and
lahf
adc
test
jns
add
mov
lods
imul
lods
cmp
cmpsl
push
pop
outsl
fs
mov
jae
int3
or
push
shll
cmp
sbbb
pop
or
outsb
mov
adc
jae
xchg
fadd
add
repz
pop
inc
sub
or
pop
add
mov
adc
push
and
dec
xchg
jae
and
xlat
add
add
sub
or
dec
cmp
xorb
mov
pop
mov
mov
addl
pop
popa
mov
and
movsb
pop
in
shlb
sbb
add
add
jmp
jle
xchg
fwait
cmp
add
mov
rcrb
adcb
or
loop
adcb
inc
and
repz
dec
adc
sahf
sbb
pop
adc
clc
jg
lret
add
adc
mov
push
mov
sbb
push
jae
add
mov
push
fidivrs
cmp
jmp
ret
sbb
jp
add
dec
mov
loope
das
lret
in
adc
ss
adc
sub
dec
mov
loop
add
je
divl
daa
ljmp
xchg
and
mov
adc
mov
ret
mov
mov
xor
add
push
in
filds
jg
cmpsb
leave
pop
xlat
push
mov
stc
jno
inc
pop
insl
bound
jno
fscale
inc
sub
test
push
out
push
or
pop
or
stc
test
mov
mov
cwtl
dec
pop
dec
ja
mov
aas
jg
mov
dec
jmp
out
popl
mov
xchg
jno
decb
xlat
inc
cmc
pop
adc
mov
sbb
pop
inc
jg
out
fnstsw
jnp
sbb
fwait
rcl
cmp
inc
add
and
out
jmp
jge
xor
std
addl
out
or
pop
dec
mov
mov
adc
fidivs
stos
push
push
or
sub
inc
mov
fimuls
inc
cmc
popf
fldt
inc
mov
pop
rcl
adc
scas
add
sbb
cmp
out
add
push
in
jge
or
jmp
mov
sub
and
out
outsb
pop
dec
shll
lds
repnz
add
pop
jmp
roll
lret
ds
mov
and
mov
pop
subl
sub
mov
xchg
popa
hlt
mov
push
push
mov
dec
mov
dec
adcb
sub
mov
and
testl
push
pop
movsl
xor
dec
lds
call
stos
mov
mov
add
sbb
push
movsb
in
inc
push
je
stc
dec
add
xor
out
and
or
shlb
and
cs
call
aad
mov
lds
pop
imul
mov
cmpsl
push
dec
bound
or
test
lcall
sub
jbe
push
testl
add
sub
mov
and
xor
sub
add
mov
negb
out
lret
pop
ds
sti
test
lret
test
movsb
bnd
pop
xor
sbb
int3
lahf
push
adc
insb
adc
mov
in
pop
insl
jns
dec
stc
sbb
inc
add
fstl
loopne
nop
sbb
xchg
cmp
sbb
push
sbb
repz
es
andb
sub
cmp
push
or
in
pop
pop
stos
and
pop
ss
push
adc
ret
or
out
arpl
mov
jl
inc
push
cli
subb
mov
xchg
enter
xchg
lock
xchg
jle
arpl
call
add
inc
pop
mov
mov
jnp
cmpl
add
loopne
call
cld
in
inc
mov
rclb
insl
in
jmp
mov
push
pop
pop
repnz
mov
xor
jae
mov
add
and
sbb
or
fs
cld
insb
lock
or
aad
push
cli
sub
arpl
dec
orl
inc
xor
add
lret
pop
dec
add
push
xchg
loope
fstps
jmp
sti
pop
das
insb
fidivl
mov
push
pop
push
push
or
xor
cmp
pop
jg
out
test
add
xchg
int3
xchg
inc
add
pop
ja
add
xchg
shrl
adc
bound
cmpl
iret
lcall
or
dec
mov
cltd
jbe
push
jmp
or
push
cmp
mov
sub
imul
test
decb
push
in
pop
loop
int3
xlat
lock
mov
mov
dec
hlt
jl
pop
add
je
cli
popa
mov
pushw
out
xor
jbe
cld
cwtl
mov
sub
add
xor
pop
nop
mov
jl
dec
pop
xchg
inc
mov
push
dec
stc
xor
add
jae
loop
jle
add
mov
rcl
xchg
jg
cs
insl
repnz
stos
cmp
insb
and
jp
add
push
push
mov
pushf
test
dec
xchg
mov
or
or
test
imul
repz
rol
fwait
int
sub
movsl
shl
jmp
pop
push
push
cmp
mov
mov
stos
lcall
mov
lods
imul
fistpl
add
fnstsw
scas
cmp
push
inc
push
and
push
mov
fiadds
push
sub
std
cmp
clc
jge
or
imul
mov
lods
inc
or
or
fsts
mov
out
cltd
scas
jnp
mov
and
or
ja
pop
jle
jcxz
pop
shl
jne
cmp
dec
xlat
pop
pop
dec
fsubr
hlt
in
and
bound
jl
out
das
inc
fwait
xchg
outsl
adc
push
mov
pop
adc
jns
dec
add
lahf
aam
add
shrb
call
loop
icebp
aad
inc
push
inc
cmp
out
loopne
hlt
adc
add
xchg
inc
fnstsw
adc
test
in
in
test
and
in
int3
xchg
out
inc
imul
icebp
xor
add
icebp
or
sub
enter
pop
mov
jns
in
mov
int3
xor
mov
andl
cltd
jne
daa
mov
push
xchg
inc
es
sub
addr16
pushfw
jge
test
jbe
movsb
adc
mov
in
daa
in
ds
pop
add
stos
cmp
push
icebp
mov
push
mov
lods
xchg
add
jg
mov
fcoml
push
jl
mov
sbb
add
pop
arpl
leave
xor
jge
je
xor
add
sub
dec
sub
inc
mov
mov
and
jo
cs
jle
fwait
push
adc
push
je
clc
xor
int3
or
add
mov
fsubrl
out
cmp
add
xor
pop
mov
out
ds
lea
sub
inc
mov
push
ret
jmp
in
pop
sti
stc
lahf
xchg
mov
lret
cmpsb
inc
inc
loop
inc
cs
imulb
mov
mov
fcoml
ljmp
sub
andb
xor
stc
or
in
inc
sbb
fldt
imul
sbb
int
iret
in
gs
out
inc
leave
and
cld
pusha
jbe
int3
and
mov
ss
jnp
add
xor
outsl
rolb
repnz
adc
pop
xchg
or
push
pop
rcl
lock
fidivl
dec
pop
mov
ret
lret
scas
jnp
sbb
std
jns
in
iret
sub
stos
pushf
mov
xor
ret
or
push
adc
dec
inc
daa
pop
sbb
scas
and
cwtl
adc
lds
push
lahf
pop
frstor
icebp
add
loopne
stos
mov
and
pop
enter
add
push
push
or
mov
enter
das
out
inc
pop
jg
mov
jo
call
add
jmp
pop
push
jo
push
push
pushf
push
das
jle
leave
push
fcmove
xor
pop
pop
out
cmpsl
jb
sub
in
mov
jne
add
into
xchg
jns
jae
sub
test
decl
mov
das
push
mov
jne
repnz
and
or
sbbl
and
jge
inc
push
scas
ret
repnz
mov
push
and
mov
adc
sahf
imul
inc
add
jl
pop
add
movsb
int
das
sub
pop
dec
iret
leave
rcr
pop
fs
filds
dec
cmc
insl
adc
data16
lahf
pop
and
xchg
int
xchg
or
adc
sbb
repz
and
mov
ret
stos
push
xor
cmpl
push
mov
pop
xor
and
push
add
sub
mov
mov
aaa
push
dec
mov
aaa
mov
jg
sbb
inc
push
mov
adc
jg
push
xorb
ret
fstp
inc
mov
jge
push
and
jl
addb
fstpt
push
mov
xchg
je
push
sbbl
and
dec
sbb
dec
mov
repnz
pop
cmp
lret
push
and
xchg
ret
add
cmp
mov
xorb
inc
orl
in
push
dec
cmp
push
or
fisubrs
mov
neg
cmpb
ljmp
pop
loop
sbb
pop
out
add
mov
pop
and
insb
jbe
jae
fldcw
mov
pusha
sub
pop
add
push
add
or
dec
fisubrs
mov
add
leave
or
mov
jmp
cltd
dec
mov
push
add
jmp
jmp
mov
fmull
nop
or
in
sbb
pop
pop
cld
stos
add
push
jmp
les
inc
aad
jg
cltd
hlt
sub
aas
push
idivb
or
push
sub
mov
les
pop
jmp
fs
jno
xor
mov
daa
fcmovnbe
or
jne
mov
sub
or
push
push
add
popf
pop
movsb
sbb
mov
add
pop
repz
cld
mov
testb
mov
stc
jmp
jmp
rcrb
pop
xor
popa
pop
fadds
mov
lret
jl
pop
mov
add
jne
lods
mulb
sbb
pop
pop
lds
sub
push
and
je
sub
outsl
lock
jp
frndint
test
mov
jnp
inc
xor
iret
inc
out
lds
push
hlt
bndldx
loope
fldt
imull
xchg
test
sbbb
cli
push
sub
xor
add
adc
addr16
mov
jno
out
xor
popl
cmp
and
inc
or
cmp
mov
test
inc
pop
dec
push
sti
dec
sahf
fsts
inc
dec
in
or
std
sub
jl
or
sarb
and
cld
icebp
sbbb
inc
cmp
push
push
pop
ds
inc
clc
sub
or
inc
adc
inc
adcl
xchg
int3
mov
add
fadds
pop
push
dec
fadds
das
jmp
lret
adc
or
adc
test
sub
jecxz
fiaddl
aad
lret
push
cmp
bnd
or
push
or
or
and
dec
cmp
stc
push
pop
push
fldl
push
inc
setno
add
cmp
push
mov
repz
cld
xchg
push
pop
imul
lcall
jae
or
xor
add
sub
pop
pop
orb
push
mov
inc
enter
pop
mov
jbe
xchg
or
jno
not
push
push
mov
mov
push
lods
pop
push
shll
dec
push
out
or
insl
call
xchg
inc
dec
pop
shll
jbe
cld
out
push
js
mov
add
loop
sti
cmp
xchg
adc
pushw
pop
inc
pop
subb
daa
bound
cmc
popf
fists
xchg
pushf
leave
add
cmc
repz
and
cmpsl
or
shr
xchg
adc
xor
add
test
or
dec
cmp
lea
inc
mov
adc
lret
and
push
fwait
lods
adc
dec
in
pop
dec
pop
cwtl
in
xchg
dec
daa
movups
pop
lods
xor
out
jl
stos
aad
push
rolb
xor
mulb
sub
mov
push
fstps
mov
cwtl
inc
xor
gs
adc
push
scas
and
mov
sti
dec
xchg
mov
loope
sub
pop
jo
mov
pop
pop
shll
jp
or
mov
cwtl
dec
cwtl
push
add
mov
push
mov
and
ror
inc
das
outsb
test
xor
cmp
xor
cmpsb
add
stc
jmp
jnp
xor
cmp
sbb
xchg
pop
ljmp
pop
out
jb
mov
pop
inc
sbb
adc
jnp
mov
orb
jp
cmpsl
mov
int
movsl
rorb
and
or
dec
inc
addl
inc
jb
jne
cmovns
sbb
out
das
sub
sub
lret
dec
pop
call
add
pop
rorl
push
add
mov
repnz
xor
add
jo
jbe
into
and
push
push
in
mov
push
int3
mov
add
sub
rcrb
mov
or
int
das
std
adc
mov
roll
cld
js
lock
add
inc
rclb
inc
sub
add
out
pop
inc
adc
or
jmp
sahf
lods
dec
dec
xor
mov
push
scas
out
shll
popa
fstpl
outsl
mov
and
sarl
push
push
loopne
neg
rorl
push
mov
popa
cmp
add
jne
sbb
push
cltd
iret
scas
adc
es
pop
push
cmp
sub
fwait
dec
aad
je
ljmp
insb
test
fsubrl
inc
dec
add
mov
pop
insb
mov
adc
jmp
sub
stc
jle
or
cmp
rcrb
xor
or
ss
ret
setge
jg
mov
rol
or
scas
cmp
ret
pop
fiadds
cmp
adc
jp
idivl
xor
or
and
add
aad
and
imul
or
neg
add
xchg
sub
jns
sub
adc
inc
push
or
add
inc
mov
pop
and
sub
test
adc
repnz
incb
and
cltd
fsts
icebp
mov
icebp
test
sbb
mov
and
lods
stos
pop
push
xchg
sarb
sub
xor
push
push
pusha
xchg
lret
adc
pop
jl
add
std
jo
push
xor
popl
jmp
out
xorb
popl
jle
push
inc
or
adc
xchg
popf
push
jl
lahf
mov
imul
lret
adc
mov
mov
not
es
gs
mov
std
ja
xchg
ret
shll
cmp
shlb
dec
mov
aam
lds
cs
add
fucompp
out
hlt
imul
inc
dec
adc
mov
ret
mov
mov
inc
shrb
std
or
push
jmp
add
or
or
test
shl
lds
jo
xchg
insl
lahf
cmp
fiaddl
lcall
dec
inc
jecxz
popa
insb
cmp
es
sbb
aas
pop
jnp
mov
jo
lcall
jmp
cli
mov
in
and
push
add
push
add
push
push
mov
jmp
lahf
pop
pop
pusha
mov
sub
jl
lea
inc
sub
or
inc
adc
inc
insb
jae
jg
dec
mov
js
repnz
jb
fiadds
imul
adc
add
xchg
stc
clc
mov
in
jae
je
das
add
adc
xchg
aam
adc
or
push
push
int3
inc
ljmp
mov
inc
pushf
aaa
inc
in
mov
dec
mov
dec
add
jg
lcall
pop
pop
push
cld
pop
pusha
fdivr
push
jo
push
stc
dec
ret
call
jle
mov
gs
adc
int
adc
js
sub
or
fmull
push
or
sbb
in
pop
pop
jne
xor
add
and
push
push
and
js
mov
sbb
mov
mov
or
js,pn
mov
pop
and
int
sub
out
and
and
mov
sub
test
in
test
andb
xor
popa
enter
inc
cmp
lods
fsts
fcompp
repnz
fnstcw
fs
jb
cmp
loope
stos
push
and
out
and
add
daa
sub
and
xlat
adc
and
and
mov
adc
jl
insb
repz
mov
adcl
add
push
ds
popf
mov
adc
mov
aaa
add
enter
push
dec
aaa
sbb
sarb
lret
sbb
movb
fcomps
pop
int3
push
dec
rclb
subl
mov
addr16
jmp
outsb
xor
cmpsl
inc
in
mov
faddp
push
pop
jns
xchg
mov
in
and
bswap
adc
or
cwtl
or
sub
out
and
bound
sub
fnstenv
sarl
enter
imul
add
subl
dec
push
mov
xchg
or
mov
icebp
push
lock
sbb
jae
std
inc
cltd
cmp
push
imul
int
xor
or
adc
push
jmp
mov
push
div
xchg
jp
pop
das
jb
in
xlat
popa
int3
sti
sub
stc
sub
push
adc
scas
sbbl
repnz
cmpl
fstpl
fidivl
push
jns,pt
ljmp
sub
mov
addr16
and
jecxz
or
add
push
cld
push
loopne
pop
push
and
pop
xor
push
pop
cmpsl
pusha
shl
sub
adc
xchg
pop
dec
ret
ja
stc
idivb
popa
aas
or
mov
mov
mov
adc
pop
insb
cs
push
mov
loope
pop
repz
cmp
in
pop
shlb
add
or
push
sbbb
dec
icebp
lds
dec
push
add
and
jmp
mov
icebp
movsl
hlt
fistpll
popf
sbb
imul
jae
inc
pushfw
jb
adc
and
adc
flds
and
lods
les
xor
pop
jbe
cmc
in
outsl
sub
jno
sbbl
popf
mov
lds
inc
pop
je
add
push
stc
mov
jecxz
loop
js
ret
loop
jg
adc
cli
sub
lods
adc
xchg
push
or
bound
mov
pop
inc
mov
push
push
push
pop
pop
les
dec
fwait
adc
daa
popa
cmp
pop
popf
icebp
push
push
mov
add
jmp
dec
lock
lds
mov
and
adc
adc
push
mov
push
mov
aaa
cmpsl
test
sub
dec
or
xor
cmp
dec
adc
mov
lahf
xchg
enter
clc
push
jmp
pop
jmp
pop
or
in
sti
and
pop
sub
mov
mov
lret
repnz
or
xor
xchg
lock
xchg
mov
out
shll
cmp
push
pop
out
pop
int
mov
lahf
xor
je
bound
std
jns
cmpb
or
out
add
fwait
xor
es
outsl
ret
stc
inc
call
xor
mov
inc
imul
and
jecxz
xchg
and
shl
jae
adc
in
movsb
cmpl
stc
leave
cmp
jne
inc
mov
add
lret
cmp
xchg
jo
lahf
pop
and
xchg
cmpsl
fcoml
call
in
subl
in
adc
das
jno
mov
dec
push
add
jge
mov
push
inc
dec
daa
adc
jne
mov
ret
sub
push
adc
inc
fsubrp
lds
pushf
dec
movsl
jge
dec
push
fxam
xchg
jbe
pop
push
fs
push
sbb
fs
aaa
pop
cld
mov
add
out
adc
stos
sar
add
push
hlt
aad
mov
mov
js
loope
add
lahf
xchg
adc
mov
pop
ret
jecxz
pop
xchg
sahf
sub
jno
mov
outsb
lahf
xchg
dec
push
push
aaa
and
test
insb
repz
push
add
pop
jmp
push
mov
out
jl
cs
in
stc
insb
mov
mov
je
xchg
dec
jg
loope
decb
inc
out
or
pop
pop
mov
out
adc
jp
enter
push
inc
neg
rolb
cvtdq2ps
ss
in
pop
fldl
daa
shr
add
pop
sub
fnsave
push
push
lods
outsb
jmp
clc
lock
aad
xchg
and
and
inc
or
jne
xchg
mov
jmp
push
xor
sub
out
xchg
pop
pop
mov
push
add
add
inc
sbbb
xor
push
or
sub
and
sbb
dec
pop
sbb
sbb
xchg
ja
cs
fstpl
or
fiadds
repz
pushf
subb
ja
sti
push
mov
or
xor
push
mov
fiadds
cli
stc
cltd
movsb
cmc
out
dec
mov
xlat
insb
mov
frstor
pop
sbb
test
push
mov
mov
and
add
and
fisubrs
push
pusha
push
push
jmp
ja
mov
dec
inc
push
xor
in
testl
inc
scas
adc
scas
loopne
orl
aas
inc
into
ja
leave
jge
std
mov
cmp
add
mov
fidivs
pop
sbb
push
sub
xchg
mov
mov
testb
ds
xor
das
out
sub
adc
outsb
push
sub
call
sub
dec
add
ret
push
push
mov
add
data16
and
loop
stos
dec
xchg
xor
test
pop
testb
call
mov
adc
xor
or
sbb
cmp
mov
push
andb
pop
pop
in
add
cmc
add
loope
sub
cmpsl
push
aam
inc
dec
orl
lret
nop
movl
and
jbe
mov
pop
nop
xchg
leave
push
pop
and
pop
inc
in
or
dec
fdivr
popf
inc
or
push
pusha
out
mov
xor
or
lods
mov
push
lds
sub
xor
outsl
fldl
aad
cwtl
cmp
bnd
in
and
mov
jb
call
rorb
sub
ljmp
call
or
sti
xchg
push
mov
daa
movsb
inc
faddl
fwait
jns
sbb
les
add
fsubp
flds
loopne
gs
cmp
out
jge
push
and
xlat
jns
inc
shrl
and
cld
vunpcklpd
pop
xor
cs
jmp
das
xchg
and
push
push
mov
popa
or
int
cmp
mov
pop
fsubrs
pusha
jle
push
xor
push
push
scas
jge
imul
incl
add
push
jmp
push
movzwl
pushw
push
icebp
add
dec
pop
frstor
and
add
or
in
cltd
sbb
repz
jl
fmulp
sbb
pop
push
sbb
and
and
jns
mov
imull
rorl
pop
jns
sbb
and
or
and
scas
rclb
roll
jmp
daa
inc
xchg
pop
xor
mov
and
sbb
adc
sub
jnp
xor
mov
push
popa
cmp
movb
lock
not
or
mov
adc
or
jno
dec
cmpsb
add
dec
fnstenv
jmp
xchg
jne
test
test
and
push
int
sbb
mov
jmp
mov
add
pop
mov
inc
mov
addps
out
inc
or
cmp
mov
pop
sahf
pop
mov
fcoml
movsl
imul
push
ss
push
jecxz
cmp
outsb
sbb
or
sbb
xor
mov
xor
outsb
xlat
mov
fsubrs
clc
dec
jnp
sahf
sub
adc
jp
bound
lahf
sub
jmp
jnp
sub
aas
daa
push
mov
negb
xchg
das
jmp
ljmp
or
push
adc
pushf
stos
into
cwtl
out
pop
popl
mov
data16
xor
push
testl
fisttpll
dec
xchg
add
popf
fimuls
or
lock
ror
dec
frstor
or
mov
aad
push
xchg
push
push
and
adc
push
mov
mov
out
mov
pop
mov
mov
cmp
push
imul
ret
aad
dec
or
cmp
xor
inc
push
mov
outsl
fcoms
mov
push
aad
inc
xor
cmc
sbb
fsubrs
in
dec
dec
add
jg
addb
pop
adc
cmpsl
adc
adc
push
pop
sub
sti
xchg
test
ljmp
arpl
orl
dec
mov
push
in
lods
adcb
sbb
pop
pop
and
or
enter
pusha
and
xor
dec
pop
pop
or
and
jmp
pop
sbb
or
dec
sub
fdiv
pop
pusha
dec
ret
dec
rcr
add
and
add
pop
push
mov
shll
out
adcl
std
push
leave
or
push
in
add
lods
jne
or
mov
dec
test
push
mov
inc
and
arpl
lea
or
lds
test
mov
movsl
adc
frstor
mov
imul
mov
movsl
or
inc
adc
shrl
lcall
lret
jb
jo
and
sub
pop
xorl
mov
pop
sbbl
mov
pop
ss
xor
jmp
xor
divb
push
cld
shr
jp
mov
push
mov
inc
es
or
sbbl
add
sbb
pop
iret
dec
adc
jbe
lods
loop
xor
pop
mov
out
jb
jno
leave
cli
and
stos
lock
outsl
dec
push
mov
and
icebp
movsl
cmc
stos
adcl
shlb
inc
cmc
sarb
dec
push
fiaddl
mov
and
mov
mov
mov
fs
outsl
lahf
mov
dec
mov
fs
dec
push
jb
dec
dec
loopne
mov
cmp
jmp
push
fwait
mov
jns
adc
subb
bound
sub
xchg
and
xchg
sub
xchg
mov
push
dec
cltd
dec
inc
pop
pop
cld
call
jl
sbb
or
stos
nop
jmp
das
pop
jnp
test
adc
pop
push
popf
movsl
aad
adc
push
loop
push
cmp
outsl
out
stos
loopne
pop
and
pop
aam
mov
sub
mov
adc
or
sbb
aas
inc
icebp
repnz
add
push
fistpl
sbb
iret
xchg
or
shrl
add
clc
add
or
inc
mov
mov
dec
xchg
pop
mov
fs
sbb
adc
js
mov
mov
dec
lock
pop
pop
jg
jae
js
fdivrs
inc
rcrl
push
push
cs
jo
or
add
fstl
mov
and
outsl
loopne
aaa
cmp
inc
daa
add
push
sbbb
cmp
jb
clc
push
sub
push
jne
dec
and
cli
mov
jge
aas
pop
test
xchg
int
mov
pop
sub
leave
stc
sarl
push
movb
push
sbb
lds
push
push
cli
inc
add
or
or
addb
and
push
iret
dec
orb
xchg
pushf
cmp
movb
add
fistps
es
xchg
pop
sbb
xor
xor
push
xchg
jb
dec
push
xor
loopne
mov
push
xchg
adc
orb
xor
xchg
into
lret
mov
mov
dec
xchg
and
cmp
sbb
mull
and
push
sti
xchg
pop
lret
xchg
add
push
sub
add
loopne
or
jmp
lods
sub
xor
adcb
hlt
mov
add
jbe
jno
pop
mov
xor
scas
aam
test
mov
pop
sub
mov
scas
loop
xchg
loopne
fldl
loope
jge
pop
pop
mov
cmp
adc
sarb
and
cmp
jmp
cwtl
notb
dec
xchg
and
and
jns
ds
ret
jns
jmp
dec
daa
mov
aad
jnp
jmp
add
dec
les
push
gs
cwtl
or
add
push
sub
push
or
push
daa
push
jl
xchg
cmp
les
scas
cwtl
pop
pcmpeqd
incb
imul
mov
in
and
push
and
testl
sub
xlat
cmc
jae
sub
inc
xor
inc
ficoml
orb
loopne
adc
enter
push
mov
movsb
sub
pushf
adc
out
test
xor
mov
cmpsl
int
insb
ljmp
jl
daa
fiaddl
mov
or
insb
mov
ds
nop
sbb
std
sub
sub
push
add
jmp
out
sbb
push
xlat
test
add
int
cld
test
push
mov
xchg
call
jmp
sub
xor
push
ss
push
sbb
add
jb
jg
or
adc
out
push
add
adc
sub
pop
cli
xor
or
jp
mov
add
in
mov
xchg
popf
or
cs
jae
ss
add
fistl
test
shl
dec
xchg
cld
mov
pusha
test
in
fnsave
cmp
and
push
loopne
fcomip
xchg
das
out
pop
aas
xor
mov
lods
pusha
lock
pop
jnp
pop
add
lret
daa
jmp
and
aaa
out
adc
stos
cmpsb
or
and
les
je
andl
out
jle
or
scas
add
pop
aad
imul
pusha
pusha
fucomip
dec
or
jnp
xor
repnz
adc
jge
movsl
mov
adc
cli
pop
repnz
add
mov
push
in
sub
add
icebp
mov
adc
pop
sbb
stos
mov
pop
mov
in
jbe
add
jmp
pop
stos
sbb
mov
or
jle
inc
fldl
mov
fimuls
mov
fiadds
mov
or
push
hlt
mov
mov
cs
mov
pushw
cmp
into
in
push
out
shll
push
xchg
mov
mov
add
inc
xchg
pop
add
mov
add
fimull
or
mov
andb
ja
mov
les
adc
xor
dec
pop
aas
lds
sub
push
aas
lods
adc
ret
adc
sbb
mov
pop
dec
aas
hlt
divb
in
cmp
test
xor
jmp
lods
sahf
add
imull
fsts
lods
into
pop
ljmp
pop
fmull
jle
or
sub
push
dec
jmp
in
fldt
jle
fwait
jns
dec
clc
shll
stc
pop
adc
inc
cmp
pop
stc
pop
repz
cmp
pop
add
xchg
pop
ljmp
mov
mov
ret
add
add
pusha
push
add
out
jnp
pop
mov
sub
push
push
fadds
sub
loopne
mov
addr16
add
jecxz
cmc
mov
inc
loope
lahf
and
orl
xor
sub
shrl
into
shll
movsl
sub
insb
test
inc
aaa
xor
xchg
dec
lret
je
and
adc
std
loope
sbb
outsb
or
aaa
jle
mov
ret
clc
cwtl
pop
aaa
mov
loope
pop
pop
inc
xor
jae
clc
inc
dec
and
dec
sub
jmp
outsb
roll
daa
mov
rorl
movsb
cmc
xor
xchg
cld
aam
lret
cli
pop
or
jno
push
and
dec
clc
add
xor
pop
inc
and
sub
out
push
or
cmp
or
outsl
jge
pop
out
sub
pop
mov
hlt
and
decb
rcrl
sbb
out
hlt
ficoms
mov
icebp
push
inc
sub
loop
add
inc
ret
aas
xchg
dec
mov
mov
sbb
cmp
lcall
paddw
add
pop
mov
addb
or
enter
mov
in
pop
mov
fwait
sub
into
popf
push
out
insl
mov
pop
add
mov
mov
dec
and
mov
add
add
mov
popa
push
sti
mov
scas
and
sbb
cmpl
pop
rorl
dec
inc
sub
dec
cli
cltd
add
adc
lock
pop
mov
daa
jle
arpl
sbb
xchg
nop
incb
das
aam
sbb
repz
mov
rcr
insb
addl
sbb
mov
pop
or
jmp
aaa
adc
mov
xor
fsub
iret
gs
xor
enter
push
scas
nop
mov
ret
mov
pop
xchg
inc
jo
dec
rcrl
pusha
ds
inc
and
push
adc
sub
cmp
sbbb
push
jbe
adc
aad
stc
cmp
test
sub
data16
pop
cmc
add
repz
cmp
jecxz
push
mov
pop
cltd
loopne
or
jbe
cmc
les
push
mov
jnp
pcmpeqw
std
mov
push
jp
aam
sub
dec
clc
pop
jo
cmp
push
cwtl
mov
sbb
and
mov
cmp
inc
or
and
fstps
add
xchg
sub
outsb
sti
repnz
adc
rclb
dec
push
sbb
mulb
and
and
and
pop
andb
in
inc
mov
fs
orl
cmc
loop
jmp
mov
cmp
xor
add
aas
clc
cs
pop
cmpsl
xor
xchg
movlps
ljmp
and
ljmp
jle
call
int
add
clc
jmp
sub
fists
add
xchg
enter
or
lahf
add
es
mov
out
sub
adc
pop
xor
push
push
jns
or
dec
pusha
mov
bound
mov
dec
adc
dec
pop
ljmp
inc
cmp
stos
inc
xlat
popf
out
or
imul
rep
lret
gs
jmp
out
sub
nop
jo
xchg
add
dec
add
mov
adc
xor
mov
mov
cltd
stos
mov
adc
das
lds
mov
and
and
inc
dec
fistps
subb
cmp
push
jmp
repz
popf
xchg
fsubl
adc
jne
enter
sahf
dec
xchg
jbe
add
adc
mov
pop
into
je
adc
popf
fs
mov
stos
test
insb
dec
cmpsb
in
pop
xor
mov
sbb
mov
mov
es
fistpll
pop
xchg
add
inc
jo,pt
psadbw
dec
ljmp
std
dec
sub
mov
pop
and
std
adc
dec
std
push
out
int3
sbb
xor
dec
add
out
iret
dec
mov
shll
dec
test
mov
and
fcomps
andl
mov
fldl2t
jne
imul
sub
push
jmp
and
inc
jne
pusha
inc
pop
repnz
dec
adc
sub
sub
or
jl
loope
jge
cmc
imul
mov
or
cmp
iret
pop
inc
pusha
push
in
or
mov
pop
das
stc
inc
lds
test
dec
mov
adc
out
andb
rcll
fsts
mov
or
int3
dec
push
cs
mov
mov
adc
popl
pushw
inc
aad
inc
repnz
adc
and
or
jmp
pop
fldcw
pusha
or
mov
pop
icebp
pop
push
push
mov
inc
aad
push
je
clc
xchg
icebp
xchg
and
mov
jge
add
inc
and
pop
xchg
xlat
adc
push
hlt
mov
mov
fwait
add
leave
repz
jmp
mov
call
gs
mov
adc
inc
cli
jge
cmp
repz
inc
adc
push
or
rol
popf
add
xor
mov
push
imul
pop
cwtl
arpl
lret
push
mov
addb
mov
adc
inc
jae
add
or
pop
shr
jmp
and
out
add
inc
cmc
cltd
push
nop
out
push
lock
iret
mull
adc
push
cmp
divb
mov
jecxz
iret
mov
ds
add
inc
je
cmp
outsl
mov
dec
mov
shll
jae
jg
push
lods
and
pslld
and
lahf
adc
cs
pop
in
pusha
daa
push
inc
push
jne
pop
sub
xor
mov
add
push
adc
sub
xchg
stos
or
adc
mov
hlt
dec
pop
into
pop
sub
icebp
add
xchg
add
rcll
dec
orb
push
or
ficoms
pop
add
addr16
and
pop
sbbl
add
adc
mov
jmp
jmp
sub
mov
or
cmp
xor
mov
xor
lock
push
rcrb
nop
mov
xchg
dec
test
orl
fdivrs
test
scas
sub
addb
xor
pop
out
add
sub
sti
repz
or
leave
and
ficoml
push
cli
sub
inc
adc
and
dec
rorb
pop
xchg
nop
int
add
sub
test
xchg
jb
adc
enter
xchg
data16
adc
sub
test
sub
xor
cmp
dec
dec
popf
ja
sahf
xchg
add
add
out
or
inc
jmp
pop
jb
cmp
push
sub
add
fstpt
pop
scas
gs
dec
adc
pop
xchg
push
mov
jae
mov
and
stos
in
rcll
enter
ds
jne
cmpb
call
pop
jbe
push
pop
imul
pop
push
mov
in
dec
lea
inc
jnp
xchg
push
jmp
ds
adc
add
and
mov
push
xlat
mov
push
xlat
and
pop
fimull
pusha
dec
daa
jb
cwtl
cltd
inc
adc
out
add
sbb
test
daa
jb
xchg
add
jge
decl
mov
jmp
cmp
sbb
push
popf
in
pop
push
test
dec
mov
push
dec
insl
nop
and
stc
inc
fisubrl
or
pop
and
bound
add
mov
push
inc
mov
cmpl
mov
inc
mov
jb
pop
xor
mov
or
sti
adc
insl
pop
gs
xchg
xor
pop
or
ds
iret
dec
mov
rcrl
dec
mov
jge
push
add
jo
inc
roll
xorb
xchg
push
test
adcb
xchg
das
and
jb
xchg
push
shll
cmpsb
outsl
addb
mov
inc
and
xor
notb
popf
mov
jg
jg
mov
pop
push
neg
push
dec
je
daa
xchg
inc
jb
push
pop
mov
mov
into
or
and
pop
subb
outsl
cmpsl
out
push
ret
loope
cmp
loop
fists
mov
sbb
int3
pop
dec
push
scas
mov
sbb
lahf
pop
js
aas
out
add
pop
addb
repnz
pop
dec
rol
add
push
test
sub
fs
add
pop
sub
push
scas
cmpsb
inc
add
je
cld
pusha
loopne
in
jmp
popf
push
test
iret
dec
adc
fnstsw
fs
sbb
loop
mov
das
aad
push
cmp
cmp
inc
add
lret
test
mov
lock
push
or
pop
aaa
out
sub
push
loopne
sub
xchg
push
add
popa
cmp
insl
add
or
adc
inc
movntps
lds
out
mov
dec
call
adc
sub
pop
mov
jmp
or
pop
rorb
jns
add
roll
xor
sub
sbb
mov
cld
ret
sbb
push
pop
testb
pop
adc
sub
inc
mov
xor
sub
xorb
pop
push
addl
inc
fnstsw
out
lock
and
add
push
jns
aas
push
jmp
subl
outsb
mov
arpl
push
lret
jb
add
sub
mov
icebp
das
add
fiadds
insl
inc
sub
xor
test
xor
fisubl
add
jmp
pop
jnp
clc
adc
lea
adc
gs
mov
xor
cmpb
pusha
mov
xchg
push
cli
enter
fcoml
jecxz
or
inc
jo
add
repz
mov
lds
dec
ljmp
push
xchg
sbb
pop
jp
mov
xor
insb
mov
jno
add
inc
xchg
push
pop
in
jmp
testb
invd
push
adc
aam
mov
dec
adc
xor
adc
fldcw
xchg
push
add
xor
push
daa
idiv
sbbb
and
push
out
test
cli
push
hlt
pop
push
inc
cli
scas
call
xchg
xchg
jg
xlat
das
aas
in
imul
jecxz
push
mov
aas
scas
pop
rorl
loope
or
mov
mov
lahf
stc
xchg
dec
mov
addr16
push
xchg
sub
shrl
fisttps
or
xor
inc
add
sub
push
fdivrl
test
adc
in
pop
in
inc
ror
jbe
jno
out
cmp
sub
and
and
nop
mov
mov
add
add
lock
inc
in
dec
and
ja
icebp
add
jg
xor
or
mov
pop
inc
hlt
std
add
js
jp
lods
pop
jb
nop
sub
mov
mov
in
or
sub
pop
push
push
dec
leave
pushf
adc
jge
in
imul
or
push
jmp
add
outsb
mov
mov
adc
ss
mov
push
movsl
lret
mov
out
xchg
xlat
es
jns
or
cmpb
mov
push
ret
fwait
cmp
in
enter
cs
cmp
adc
hlt
jge
add
push
sub
gs
loopne
push
pusha
push
mov
dec
add
fs
add
shrb
loop
pop
stos
or
mov
mov
cld
mov
out
in
ds
popf
lret
fnstsw
insb
sub
insb
ret
test
mov
out
sub
mov
adc
mov
xchg
mov
or
inc
iret
mov
xlat
xchg
mov
ds
lcall
sub
and
mov
jno
push
shr
rcll
daa
aam
test
and
les
jg
or
push
shlb
out
mov
mov
cli
push
or
xlat
pop
push
out
push
and
cmp
dec
hlt
cmp
daa
jo
shr
push
cmp
and
stc
sbb
adc
push
orb
test
or
jmp
mov
test
rclb
inc
add
add
jmp
cwtl
fdivr
push
push
pop
popf
mov
cmc
pop
adc
and
jo
test
mov
test
cmp
clc
sbb
cmpsl
pusha
ja
add
aaa
ds
xor
sbb
or
jae
out
add
push
pushf
add
dec
jmp
subb
jp
xor
rorl
in
jno
mov
sbb
inc
dec
sub
lods
push
scas
or
jle
pop
mov
pop
ficoml
pop
int
dec
ljmp
xchg
pop
rolb
sahf
lods
pop
test
mov
lahf
push
dec
jmp
mul
leave
scas
daa
aam
ljmp
add
or
clc
push
dec
mov
and
or
xchg
push
adc
jnp
test
and
push
shr
cmp
or
das
loopne
push
pop
movsl
inc
ret
in
hlt
jecxz
xchg
sub
jbe
rcrb
sbb
aas
inc
adc
ret
xchg
std
fiadds
mov
loope
jae
add
ret
enter
icebp
lock
pushf
lcall
inc
sub
xchg
mov
inc
inc
add
lea
subb
xchg
lcall
popf
enter
aad
mov
inc
xchg
into
mov
push
cmp
add
sbb
dec
aaa
test
and
and
or
jmp
iret
enter
hlt
push
sahf
dec
push
push
mov
lret
sub
mov
xlat
mov
sbb
mov
dec
in
mov
cmp
loop
add
add
xlat
test
aas
pusha
ret
pop
dec
clc
mov
sbb
cwtl
testb
mov
push
push
jo
out
jmp
sbb
pop
nop
sub
test
ret
test
push
pop
das
out
xor
fwait
dec
inc
jecxz
xchg
addr16
jne
xchg
and
mov
out
sbb
jmp
loopne
call
lods
pop
sub
es
cs
lea
pop
sub
add
mov
scas
fisttps
or
push
repnz
xchg
in
add
or
ss
je
jmp
out
cld
and
cmp
push
loopne
je
dec
xor
rorl
push
dec
ret
pop
cli
jb
pop
pop
xchg
cltd
sub
bound
pop
add
jo
loope
add
or
fdivrp
push
add
push
jbe
pop
mov
mov
cmc
cltd
cmc
pop
nop
inc
sub
and
or
out
pop
nop
dec
xchg
in
out
and
cmp
mov
add
das
ljmp
push
dec
sbb
push
push
sub
inc
pop
pop
mov
out
jle
jbe
mov
loop
fldl
cmp
sbb
adc
sub
and
push
push
sub
jmp
into
divl
mov
mov
lods
mov
xor
cmpb
sti
push
sbb
test
push
ret
mov
inc
test
stc
xchg
xchg
stos
cs
adc
pop
cmp
or
adc
stos
or
jge
mov
mov
hlt
xchg
test
dec
es
nop
inc
and
jbe
or
loopne
jl
mov
mov
push
or
pop
xchg
rorb
dec
push
xchg
aad
dec
rorb
cmc
arpl
inc
imul
inc
push
jmp
ja
jle
das
dec
mov
mov
mov
add
pop
subb
and
push
cli
movsl
aad
push
adc
pop
sub
pop
xor
lods
push
mov
scas
push
shll
fstpt
cmc
and
push
push
lcall
div
cld
int
push
dec
xor
jnp
mov
dec
iret
pop
ja
push
mov
lret
les
cmpsl
movsb
mov
subb
cmpsb
mov
sub
popf
xchg
lds
lcall
xchg
cmp
or
jmp
xor
dec
pop
inc
hlt
or
cmp
add
and
fists
xor
mov
loope
lds
mov
adc
xchg
std
nop
xlat
push
push
stos
dec
and
push
dec
mov
pop
popa
sub
xorb
adc
and
dec
icebp
or
pop
push
xor
aas
pop
cltd
cmp
loope
fwait
inc
add
adc
jb
sti
sub
adc
outsb
test
push
pop
xor
testb
mov
sbb
fs
pop
inc
mov
cmp
dec
fadds
mov
cwtl
xor
ja
adcb
je
jno
sbb
cs
loop
jmp
fnsave
pop
fsubrl
mov
loop
jne
pop
mov
add
sub
ds
hlt
or
and
ja
ret
add
out
dec
loope
inc
sbb
mov
rcrl
pop
bound
and
adc
pop
push
mov
fimuls
xchg
mov
ret
orl
cmp
inc
push
and
xor
not
inc
add
add
push
or
push
hlt
and
and
or
orb
xor
rclb
add
push
ret
mov
and
test
jne
jecxz
pushf
jmp
loopne
ret
dec
fldcw
std
jmp
xchg
push
shlb
movsl
jmp
stos
push
nop
movsb
push
in
mov
mov
bound
jle
cmp
xor
fisttpll
push
fs
dec
pop
jg
jg
sub
fimuls
repz
jbe
push
jmp
notb
adc
add
add
xor
jl
cs
sbb
or
jge
dec
cmp
xor
push
mov
mov
sti
xchg
pop
add
leave
xchg
and
loop
movsb
out
xchg
pop
lcall
dec
fmuls
xor
addb
gs
mov
pop
pop
mov
fistps
aaa
xor
xor
xchg
mov
mov
xchg
out
push
adc
jl
fsub
jne
or
pop
mov
movsb
xor
lret
pop
ja
nop
pop
push
pop
push
push
add
jg
gs
mov
dec
inc
add
lret
xlat
push
int
add
xchg
or
xchg
and
and
arpl
and
in
push
fs
add
push
dec
orl
popa
inc
pop
xchg
icebp
repz
push
mov
mov
add
jg
in
pop
jp
cvtdq2ps
ja
in
and
leave
sbb
xchg
jmp
add
sbb
push
das
add
mov
cwtl
or
add
dec
pop
dec
jne
int
xchg
and
and
hlt
movsl
jne
pusha
dec
mov
repz
sbb
testl
jbe
add
leave
aaa
js
fs
out
in
bound
mov
inc
lret
add
cli
in
pushf
dec
add
scas
dec
adc
xchg
andl
sbb
shl
push
pop
xor
jne
dec
imul
repnz
mov
add
jl
mov
cmp
mov
push
andb
dec
fucomi
xor
lods
push
mov
add
sbb
pop
add
fimull
adc
jb
imul
xchg
pop
mov
adc
push
jmp
sub
sub
repz
xor
cmp
clc
call
push
pop
sub
es
jae
and
adc
repz
stos
cwtl
mov
push
adc
lcall
mov
xor
repnz
add
imul
das
and
or
arpl
jg
fidivrs
das
jmp
rcll
xchg
pop
ss
jnp
and
pop
roll
push
jnp
adc
jno
out
push
pop
push
shrb
sbb
orl
ud1
or
data16
orb
mov
mov
mov
dec
sarb
and
fadds
adc
add
ficoms
xchg
adc
int3
jbe,pt
cmp
gs
popf
jbe
jp
sub
add
outsb
mov
das
sub
and
mov
in
push
hlt
pop
push
and
mov
iret
sbb
push
inc
pop
inc
stos
leave
push
jo
test
sub
aaa
and
jb
lods
sti
dec
mov
nop
and
add
int
cmc
out
sub
ret
call
aas
mov
cmp
push
les
or
lods
addr16
in
out
push
rorl
lock
das
push
jno
adc
or
mov
inc
cli
test
fcoml
add
test
les
hlt
in
aad
inc
sarl
leave
pop
and
and
je
out
popf
cld
add
sub
notl
test
add
jp
inc
pop
call
xchg
pop
scas
popa
loop
cld
test
sub
cli
mov
gs
mov
cmp
mov
cmpsl
lahf
push
mov
push
cs
sub
adc
adc
add
daa
out
pop
dec
imul
int
lock
mov
mov
or
repnz
popf
hlt
xlat
outsl
adc
hlt
push
push
or
or
cmp
sbb
cmp
add
mov
js
mov
dec
cmpsb
call
decb
popa
cmp
popa
sub
adc
jmp
test
and
popf
jg
ljmp
rcrb
add
mov
aas
loopne
xor
movsb
repnz
jl
dec
sub
daa
jno
adc
pop
out
xorb
int
fnstenv
add
push
aad
mov
mov
pop
adc
inc
or
mov
sbb
dec
fnsetpm(287
sbb
lahf
test
push
mov
jmp
sbbb
jg
ret
adc
adc
popa
push
sbb
icebp
arpl
fcompl
sub
pop
add
push
add
jno
mov
or
sti
pop
lock
jnp
pop
out
mov
mov
jl
jb
xor
push
mov
pop
push
popa
jmp
mov
pop
ss
jle
pop
inc
sti
dec
imul
xchg
add
pop
loop
cmp
jo
mov
sbbl
sub
mov
mov
mov
xchg
mov
push
aam
in
movsb
mov
mov
fcoml
or
push
sub
sub
cmp
into
adc
cwtl
mov
xchg
push
cltd
push
bound
jle
add
pop
call
mov
sub
xchg
mov
pop
pop
mov
inc
aam
or
imull
push
inc
fistpll
inc
adc
lcall
sub
orb
xor
push
pop
pop
add
adc
fcmovu
lret
add
test
jae
dec
out
lods
pop
loope
js
mov
pop
repnz
bnd
and
xchg
mov
xor
scas
inc
iret
stos
je
sub
mov
ret
les
out
faddl
pop
adc
add
mov
cmpl
or
sub
jmp
push
lock
aam
jns
lret
pop
mov
jp
ret
mov
loop
xchg
mov
gs
adc
push
add
dec
mov
jp
cmc
aam
scas
and
mov
in
mov
mov
sub
and
loopne
xchg
add
pop
dec
jp
mov
les
repz
jb
dec
xor
outsb
push
pop
add
sti
imulb
nop
call
mov
iret
mov
inc
test
push
mov
push
xchg
mov
dec
push
shll
ja
sub
scas
jb
inc
shll
idivb
pop
shr
sub
pop
pop
push
pop
or
mov
out
lds
lahf
stc
lcall
xor
fs
rolb
pop
add
inc
or
jp
or
jmp
add
hlt
or
dec
pop
ss
ja
or
or
or
je
add
cwtl
mov
xor
jmp
cmpsl
imulb
sub
pop
daa
and
push
or
stc
rcrb
sub
lods
add
aas
sbb
popa
jmp
inc
push
mov
clc
arpl
mov
hlt
or
pop
neg
rcr
sub
idivl
push
xchg
push
jecxz
push
and
mov
pop
add
inc
and
or
xor
test
xchg
jns
inc
lahf
sbb
repnz
mov
cmp
mov
sub
xchg
jnp
or
in
cld
ljmp
ja
sbb
repz
repnz
fs
mov
sub
pusha
vcvttps2dq
jmp
subb
stc
jecxz
fistpll
dec
test
xchg
dec
imul
cmp
push
push
push
add
repz
aad
pop
and
lds
mov
xor
in
mov
lea
es
cmp
rorb
incb
mov
add
mov
dec
xchg
add
mov
pop
pop
push
jb
leave
fisttpl
and
dec
or
sub
rcll
sbb
push
shrl
arpl
jbe
add
jno
sbb
mov
cmpb
xchg
fbld
pop
xchg
pop
dec
jb
das
jmp
mov
inc
in
lds
dec
cmp
or
jmp
adc
cld
jg
subl
movsb
rclb
xor
add
add
lcall
negl
pop
cli
or
add
mov
pop
clc
jge
push
ljmp
push
adc
or
stos
mov
sub
rorl
mov
repz
xor
popl
xchg
scas
sub
jo
or
icebp
add
and
test
movsl
or
mov
push
dec
sub
enter
out
add
mov
inc
and
rcrb
nop
shrb
xchg
loop
push
aam
fiaddl
mov
mov
lock
push
stc
mov
xchg
gs
fs
shr
inc
mov
sub
mov
dec
dec
decb
mov
dec
movsl
js
repz
fadds
dec
cmpl
jb
xor
adc
add
xor
sub
fdivs
enter
fildll
arpl
es
cmp
movsl
lret
out
fs
pop
shrb
add
mov
mov
inc
or
out
pop
sbb
lds
or
das
mov
xchg
insb
jge
std
and
push
lds
or
fisubs
or
cmp
and
cmp
push
pusha
dec
push
pusha
pop
adc
int
mov
lds
push
loop
mov
mov
adc
lods
and
sbb
aaa
into
mov
xchg
daa
addr16
addb
call
imul
inc
push
add
adc
les
jmp
cltd
sub
sbb
pop
std
ds
insl
pop
sbbb
cmp
sbb
mov
rol
mov
in
xchg
outsb
push
repz
add
fadds
pop
cmp
cmp
or
mov
xchg
or
xor
xchg
xchg
xchg
cwtl
inc
pop
or
dec
int3
push
pop
dec
pop
in
iret
or
sbb
popf
aam
adc
mov
sub
inc
pop
and
movsb
dec
lret
divl
movsb
pop
mov
imul
push
add
jmp
in
mov
push
jmp
push
jl
daa
negb
adc
sarb
cmp
inc
jmp
bnd
in
int
sbb
pop
test
loopne
push
cmp
and
add
jb
or
aas
xor
cld
mov
psllq
pop
push
jg
inc
dec
ret
push
inc
sbb
jl
adc
or
pop
out
jecxz
push
inc
add
fs
ja
xlat
adc
call
pop
push
xchg
mov
sub
dec
mov
lea
lds
pop
test
lods
adc
pushf
mov
push
jns
dec
dec
inc
fs
aaa
insb
jns
xchg
repnz
icebp
mov
icebp
into
rol
insl
nop
push
mov
push
and
lahf
pop
mov
pop
in
xor
pop
lods
nop
loopne
sub
fsubl
cwtl
cmp
cmc
orl
cltd
mov
sub
xchg
ret
dec
pop
push
ficoms
in
in
sbb
repnz
sbb
imul
and
ja
lcall
sub
fmuls
mov
fsubl
fists
pop
push
pop
es
int
push
pop
push
and
adc
push
jne
call
dec
insb
lods
and
in
bound
shll
fimull
adc
jnp
call
add
cmc
dec
mov
sbb
outsb
and
adc
or
sbb
dec
add
sbb
wrmsr
sbb
dec
sub
in
inc
dec
adc
and
ret
pop
fucom
inc
and
pop
mov
jge
popa
popf
sbb
xor
lret
enter
mov
add
pop
sub
push
adc
in
stos
sbb
rclb
pop
lds
imul
pop
push
adc
xchg
gs
outsl
test
inc
pop
mov
stc
push
mov
mov
add
enter
sbbb
notb
test
in
xor
adc
mov
test
sbbb
addb
jg
adc
stos
xlat
iret
push
and
mov
pop
jp
mov
and
sub
jp
and
pop
scas
stc
repz
hlt
stc
pop
adc
es
mov
mov
jns
pop
pop
and
cmp
les
rcll
cmc
mov
dec
sbb
jbe
aad
ret
push
add
dec
adc
clc
add
lods
jno
push
sub
in
sub
shr
mov
mov
imul
pop
xor
xor
imul
je
loope
sub
popf
mov
pop
jmp
shrb
movsb
or
fmulp
aas
jae
lret
pop
les
xor
xor
cmpb
ja
push
pop
loop
mov
imul
jo
or
jmp
adc
incb
sarl
sbb
push
mov
mov
dec
and
inc
inc
subb
roll
dec
mov
leave
in
or
inc
and
das
push
dec
sbb
or
pop
out
push
pop
adc
mov
aaa
and
pop
push
mov
add
rcrb
and
add
rol
mov
push
mov
pop
inc
pop
jne
sub
lcall
lds
js
sbb
mov
push
inc
xor
ja
stc
ret
push
pusha
pop
push
jb
add
mov
sub
and
xor
xor
das
cmp
sub
lds
and
out
ret
xor
cmp
int
xchg
cs
jbe
add
pop
sub
imul
xchg
int
dec
xchg
pop
rclb
in
imul
dec
mulb
aas
scas
in
clc
dec
mov
mov
push
pop
out
scas
and
jmp
add
jns
or
dec
inc
or
xor
stc
pop
add
add
dec
leave
shlb
mov
nop
cmp
dec
inc
push
xor
mov
test
mov
mov
pusha
fmul
push
cmp
lds
fcoms
das
int3
mov
dec
push
call
aam
shr
fs
pop
clc
stos
je
jns
jle
mov
jae
fiadds
mov
xchg
mov
jnp
jmp
pop
push
push
pop
outsl
and
shlb
shr
jne
sub
push
daa
mov
push
lret
mov
das
popf
sbb
dec
arpl
sbb
pop
pop
or
sbb
pop
pop
or
std
add
sbb
jno
es
sub
mov
aam
repnz
clc
loope
jns
mov
pop
leave
push
xchg
pop
pop
popa
dec
and
outsb
push
dec
cmp
push
adc
nop
pop
jno
sbb
clc
pop
pop
push
mov
not
dec
push
in
hlt
rorl
adc
sub
add
mov
sbb
jb
sub
xchg
fisttpl
mov
jb
push
bound
sub
mov
jle
sbb
dec
mov
lock
repz
shrb
aam
and
jge
std
repnz
lret
sub
mov
dec
or
mov
fucomp
cs
dec
add
lds
sbbl
add
cmpsl
inc
mov
sub
lahf
lds
inc
mov
or
push
mov
fldl
jmp
testb
testl
sub
mov
insb
jp
insl
arpl
xorl
shl
popf
cltd
ret
or
test
movsl
stc
fcoms
sbb
dec
mov
aaa
add
inc
repnz
add
popa
and
dec
or
lret
ja
jnp
mov
dec
enter
jle
jnp
lods
shrb
enter
test
xor
cmp
orl
mov
jmp
js
sub
dec
rcrl
jbe
int3
lcall
add
pop
inc
mov
sub
push
out
add
mov
ficompl
pusha
sub
pusha
cwtl
mov
add
jo
or
pop
divb
out
sub
or
or
subb
outsl
xor
fwait
adc
add
dec
jg
pusha
aaa
or
dec
in
cmp
jge
xor
xchg
push
lret
and
cmp
pop
into
jo
cmpsb
xor
jmp
test
je
add
imul
and
in
mov
pusha
sarb
jmp
in
mov
pop
addr16
mov
pop
out
sub
loop
dec
icebp
adc
add
sarb
and
pusha
jbe
lea
das
jmp
jl
xchg
and
cmp
jns
hlt
mov
jp
jae
adc
sbb
popf
test
push
scas
in
icebp
sub
ja
outsl
std
aas
xchg
sbb
ds
and
xchg
ja
mov
sub
sub
xor
cmp
cld
jg
arpl
fisubs
add
mov
push
pop
call
or
sbb
sbb
mov
xor
pusha
pop
xor
sub
push
add
pop
mov
and
dec
xchg
fists
daa
flds
fiaddl
lret
stos
xor
xchg
out
jmp
lret
pop
scas
or
pop
ja
xchg
ret
jmp
dec
mov
pushf
inc
xchg
mov
push
jb
add
mov
and
in
pop
stc
ret
imul
xchg
dec
add
add
jnp
das
popa
je
call
ja
xchg
sub
inc
cs
repz
cmp
inc
testb
out
cmpsb
outsl
and
cwtl
lcall
gs
loope
mov
or
push
sub
pop
jbe
xchg
inc
inc
outsl
mov
pusha
ljmp
jmp
fld
cmpsb
inc
mov
inc
mov
cs
int3
cmp
lret
dec
mov
sahf
cmp
int3
mov
xor
and
int3
in
lods
lock
xchg
sub
repnz
mov
xchg
xor
mov
cmp
mov
mov
das
pop
push
out
pop
lahf
pop
jp
imul
cld
push
cmp
push
cmpsl
and
outsb
push
ds
add
xor
jns
adc
jns
mov
dec
mov
or
fbstp
jno
mov
int
xlat
test
movsl
jno
inc
sub
lea
fdivrl
das
hlt
out
cli
sub
add
inc
pop
mov
call
xchg
lahf
xlat
ja
icebp
mov
mov
pop
xchg
dec
mov
mov
push
adc
repnz
push
jmp
inc
adc
sti
lods
ljmp
xchg
xor
mov
push
mov
and
loope
add
scas
mov
xchg
outsl
pop
iret
out
add
hlt
mov
leave
test
scas
ljmp
mov
sub
mov
popa
jmp
inc
push
mov
add
xor
pop
in
jb
adc
dec
movsb
dec
jl
add
mov
lret
scas
or
and
mov
sbb
ss
and
mov
pop
sub
mov
das
fstpt
bnd
orb
push
mov
push
subl
testl
mov
test
add
xorb
jl
jle,pn
push
adc
jmp
imul
cltd
push
xor
mov
in
xor
xchg
xor
push
popa
jmp
or
das
imulb
inc
push
sub
mov
jnp
test
xchg
cs
out
test
in
pop
iret
loop
mov
rorb
mov
incl
or
outsb
cld
sub
xor
adc
xlat
andl
bound
push
sbb
push
sub
js
lret
rcll
nop
dec
jle
out
dec
push
test
jmp
test
add
xor
jns
popa
push
mov
sub
xchg
scas
add
xor
sar
fs
jmp
stos
jmp
xchg
mov
mov
outsb
mov
fdivrs
fisubrs
arpl
mov
sbbl
xor
mov
mov
scas
ss
mov
or
lock
push
cmc
mov
dec
ds
dec
mov
inc
lahf
and
fwait
mov
adc
push
dec
fs
jp
add
mov
mov
push
cmp
movb
sbb
shrb
push
leave
lahf
mov
lret
cmc
mov
xor
pop
or
sbb
mov
push
cltd
mov
sub
jne
rolb
fisubs
push
jle
cli
pusha
daa
sti
data16
mov
or
sbb
dec
sub
cmp
out
and
shlb
add
sbb
lahf
fistpll
push
outsb
sub
sarl
cmp
dec
in
jo
dec
inc
sarb
cmp
pop
loope
clc
test
mov
jnp
aas
fistl
jmp
int
xor
gs
pop
sub
pop
and
adc
mov
add
pop
push
pop
and
pop
inc
adc
loop
inc
pop
cmp
pop
push
es
gs
push
xchg
cmp
lahf
xor
xorl
loopne
mov
daa
mov
jg
fs
mov
jns
dec
fmull
es
or
repz
dec
or
stos
push
mov
adc
ds
stos
cltd
or
cmp
ja
mov
nop
jle
in
jns
outsl
inc
add
and
push
cmp
fisubs
cs
out
pop
jg
test
mulb
addl
std
xor
mov
sbb
mov
xor
mov
lret
jle
pop
pop
mov
push
or
fs
push
pop
in
cltd
test
stos
lds
inc
mov
pusha
add
cmp
sub
pop
cmp
and
mov
movsl
les
fimull
mov
pop
push
push
pop
pop
rorb
and
fstl
sbb
pop
xor
xchg
lds
lret
push
stos
or
scas
adc
mov
pop
xor
mov
enter
inc
push
cmp
scas
lock
jecxz
lock
leave
inc
lahf
mov
xor
insb
add
jbe
shlb
or
mov
test
sarl
pop
es
xor
aam
pop
aad
mov
or
add
sub
sub
or
xor
outsb
mov
cs
or
ss
jnp
adc
cmp
xor
pusha
bound
mov
mov
sti
add
and
push
jecxz
out
mov
adc
out
iret
inc
pop
push
addb
mov
popa
add
mov
outsl
je
add
jmp
pop
js
and
push
fwait
sbb
sti
fcompl
pop
jbe
lock
fimull
sbb
sbb
mov
fcmovnbe
adc
add
sahf
pop
add
inc
nop
int3
xchg
inc
or
jmp
mov
sub
adc
xchg
movsl
add
mov
test
mov
or
jns
ret
and
or
or
fsts
xor
xchg
pop
les
pop
pop
xor
cmp
push
adc
mov
icebp
jbe
jg
jnp
repz
adcb
mov
xchg
dec
js
push
mov
mov
or
test
lock
std
fs
xor
inc
inc
and
xchg
sub
sbb
push
dec
sti
xor
scas
xor
arpl
mov
jl
ds
xchg
pop
enter
mov
sub
pop
dec
sub
sub
shll
or
clc
lret
add
cmpl
inc
hlt
shll
push
decb
mov
pop
mov
xchg
pop
les
add
adc
shl
add
xor
add
or
cmp
pop
add
das
jns
sarb
std
gs
sub
loopne
mov
shrb
pop
in
dec
lods
pop
push
in
pop
test
xchg
inc
imul
jge
mov
test
mov
or
in
push
in
or
adc
fstl
add
jbe
add
add
fmuls
or
pop
inc
rol
xchg
pop
adc
jle
leave
adc
mov
stos
mov
imul
fimull
push
jbe
jo
inc
dec
sbb
push
adc
xchg
sbb
ja
enter
adc
xor
and
ret
gs
fsts
scas
int3
inc
loope
add
sbb
mov
in
xchg
mov
cmp
jmp
test
dec
out
inc
loopne
enter
cmc
pop
gs
rorb
sub
sbb
ljmp
push
jp
jmp
fsub
mov
jmp
ljmp
lret
inc
mov
cmpsb
aad
mov
rolb
rcll
jecxz
pop
rcr
ss
jmp
fnstcw
sub
add
bound
ret
je
mov
sti
mov
scas
push
nop
std
and
or
push
rcll
lock
addb
lret
jge
ja
push
dec
cmp
gs
mov
lods
int
and
addb
shrb
int
mov
jo
push
sub
xchg
sub
in
mov
hlt
cmp
push
or
outsb
lds
in
out
andl
add
adc
pop
jmp
das
clc
inc
mov
sbb
xor
scas
push
push
test
in
pop
and
stc
rclb
lret
mov
std
enter
mov
scas
mov
andb
std
gs
pop
and
push
lods
xor
mov
popf
bound
fs
mov
pushf
dec
mov
cs
pop
clc
and
sub
cmp
sbb
add
jmp
or
arpl
dec
or
push
jo
sub
test
aam
mov
divl
mov
add
insl
pop
jo
xchg
adc
inc
jp
and
and
or
fldl
cmpsb
fcoml
xor
insb
mov
sti
outsb
mov
aam
sub
fsubs
shl
ucomiss
je
out
std
add
or
mov
jge
dec
out
and
add
into
jmp
and
out
push
inc
mov
frstor
sub
inc
hlt
or
aas
jmp
sub
xor
or
add
arpl
stos
lret
inc
dec
cmp
out
fldt
daa
jmp
push
push
pop
mov
pop
jns
push
dec
inc
jp
cs
dec
push
lods
xchg
lock
cmc
mov
jo
dec
call
add
lret
mov
repnz
dec
push
aas
andb
aaa
movsl
and
add
mov
add
push
push
ja
jecxz
pop
mov
and
or
loopne
arpl
ljmp
aad
repz
dec
jne
jg
cli
inc
ja
push
mov
mov
push
dec
lock
xchg
fs
out
push
or
inc
or
cltd
ja
aas
repz
sbb
mov
arpl
mov
jne
xor
xchg
cmp
in
add
test
cmp
ds
cmpsb
or
daa
jle
mov
shr
pop
jge
loope
imul
jge
frstor
jl
add
das
push
fcoml
aam
sbb
sbb
adc
and
les
jne
fmuls
mov
insl
mov
les
add
add
inc
pop
jmp
and
das
mov
adc
or
add
dec
sbbb
sub
inc
mov
pop
push
test
rorl
lahf
push
in
adc
lds
cmp
xor
xor
pop
pop
add
shll
push
xchg
sbb
and
xor
push
sub
mov
dec
rcll
add
rclb
mov
push
push
jns
dec
mov
dec
sti
cltd
cld
or
sub
xchg
test
inc
or
jae
adc
mov
xchg
pusha
pop
roll
rcll
cli
fsubrs
pop
movsl
frndint
inc
mov
fcmovu
clc
rcrl
andl
mov
sub
add
push
xchg
mov
ss
mov
not
xchg
or
mov
bnd
mov
inc
sub
sti
nop
mov
add
aad
ja
sbb
enter
mov
push
or
pusha
jnp
inc
out
adc
xorl
pop
test
dec
mov
daa
scas
dec
push
mov
pop
add
movaps
shl
xor
inc
comiss
icebp
sub
pop
add
and
pop
mov
mov
and
and
hlt
push
dec
in
cwtl
ss
inc
or
aad
sbb
jle
pop
mov
jb
ror
shl
adc
cmp
jecxz
push
mov
outsb
mov
hlt
mov
or
imull
pop
rcrl
and
mov
aad
loop
leave
fwait
imul
iret
dec
clc
sbb
mov
in
jbe
mov
ret
lock
pusha
or
and
rcrl
popa
mov
xor
les
xchg
sub
sub
mov
sbb
sti
ret
aad
inc
and
orl
movsl
loopne
mov
outsb
lods
ljmp
xlat
sub
mov
add
mov
jg
mov
xchg
jmp
jmp
mov
into
pop
ja
inc
shl
pop
jmp
sub
add
iret
arpl
or
popf
movsb
jae
pop
shrd
loope
jmp
enter
sbb
popf
outsl
add
negb
in
stos
push
pop
push
add
not
jg
pop
sbb
mov
pop
xor
into
jmp
xor
jmp
fisubl
adc
pop
pop
add
lret
ficoms
push
sahf
sbb
roll
mov
dec
popa
mov
xor
mov
dec
aaa
mov
or
pop
lods
sub
lret
sub
movl
mov
sbb
fsubl
js
lods
xor
sub
xchg
add
addr16
mov
hlt
dec
pop
push
dec
push
push
mov
iret
shlb
stos
mov
sbb
das
icebp
pop
jl
xchg
fildl
out
sbb
insl
nop
or
cmp
and
or
aaa
popf
ret
cmp
mov
or
into
test
adc
push
sahf
or
inc
jae
jb
dec
mov
push
mov
jge
iret
or
cmp
add
in
xlat
rcl
mov
out
notb
add
mov
mov
pop
jns
daa
sti
shlb
xor
fiaddl
add
sub
sub
repz
push
pop
pop
stos
lea
fsubrl
or
loopne
lods
and
sbb
into
add
cmp
dec
ret
jecxz
shll
fs
pop
or
fadds
add
mov
xor
repz
push
xchg
mov
pop
sbb
cli
dec
std
icebp
jmp
inc
inc
jo
sbb
out
jnp
adc
cltd
pop
rolb
or
pop
pusha
push
sub
lea
jnp
mov
arpl
subl
add
jno
mov
sbb
mov
jo
popl
xchg
or
dec
ja,pn
das
jmp
pop
cmc
out
movsb
test
pop
pcmpeqw
sahf
shr
push
mov
cmp
movsb
jmp
push
push
mov
aas
dec
faddl
add
xor
dec
std
pop
and
addl
adc
cs
adc
out
lret
push
imul
jmp
roll
repz
or
xchg
dec
xor
movsb
mov
or
push
sbb
adc
lds
cmp
nop
aaa
cmp
ja
push
adc
nop
push
add
test
and
cmp
inc
test
movsl
int3
daa
andl
and
inc
test
xchg
addl
mov
xor
jg
mov
dec
insl
test
aaa
adc
inc
jmp
inc
sbb
push
add
sbb
xchg
add
and
iret
push
adc
xor
sbb
push
mov
push
jne
das
sti
push
call
mov
out
sbb
ret
inc
popf
aad
mov
xchg
popf
dec
aas
push
shl
add
outsb
in
cmc
and
push
adc
fadds
leave
jo
xchg
fstl
mov
mov
dec
in
cs
rolb
inc
push
sub
loop
push
loopne
add
lret
addr16
mov
add
xor
neg
ds
sbb
add
outsl
sub
mov
pop
rorl
mov
sbb
aad
je
in
push
hlt
repnz
js
push
xchg
lods
test
add
dec
sub
loop
movsb
stos
test
hlt
xchg
lds
adc
adc
orb
lods
add
aam
lods
pop
ret
aas
xor
cmp
test
xor
andl
or
stc
add
xor
adc
nop
adc
stos
dec
and
fsub
mov
inc
out
add
mov
jge
fistpll
lret
or
sahf
or
or
cmp
cmc
notb
mov
pop
mov
jl
gs
and
xchg
push
xchg
sbb
mov
mov
ret
inc
mov
repz
cmc
pop
jne
push
stos
mov
je
call
not
dec
adc
jge
test
lods
into
shrl
push
inc
fldenv
xor
lret
in
popa
push
and
xor
mov
out
dec
movsb
stc
pop
fcoml
test
imul
call
jno
xchg
inc
jle
shlb
arpl
mov
xor
rcll
not
ds
pop
inc
call
jo
adc
fwait
bound
inc
push
adc
js
xchg
push
adc
push
xor
mov
mov
shr
mov
jo
pop
pop
lods
mov
or
fstps
test
ret
sub
adc
enter
fadds
in
test
mov
adc
push
gs
or
leave
orb
dec
ret
test
dec
mov
add
add
out
test
sub
in
pop
rolb
bound
inc
pushf
filds
rolb
sub
sbb
jo
das
test
aas
mov
pop
or
adc
dec
aas
pop
mov
cmc
or
repz
ficoml
sub
and
dec
add
imul
orl
subb
sub
add
call
pushf
adc
push
mov
sub
rorb
sub
das
pop
pop
sub
sub
sbbb
xchg
add
shl
pop
lcall
pop
or
jp
add
fidivrs
xlat
bnd
jge
pop
add
sbb
lret
mov
insb
add
in
sub
xor
sub
jge
inc
pop
xor
cmp
fdivrs
pop
xchg
sbb
cs
hlt
int3
mov
ljmp
mov
in
popa
pop
arpl
mov
shrb
test
mov
ret
ljmp
jecxz
pop
xor
push
out
jge
push
loop
out
aas
push
and
adc
and
out
fildll
and
dec
xor
xor
call
bound
and
cmp
push
in
mov
jnp
pushf
dec
inc
pop
jnp
push
adc
pop
adc
inc
pop
mov
adcl
mov
xchg
cmpsl
jge
icebp
idivb
mov
imul
or
jl
dec
mov
lret
mov
sbb
cmpsb
dec
lret
sbb
xor
enter
sub
shrb
or
jl
mov
jl
enter
mov
adc
fistps
xchg
daa
cmpl
mov
jg
mov
sub
xor
subb
mov
lock
out
das
mov
daa
adc
imul
js
dec
pop
jmp
mov
adc
xor
pop
ljmp
cs
rclb
ja
aam
lret
xchg
es
dec
mov
add
pusha
pop
cmp
loop
mov
sbb
dec
pop
sti
push
fiaddl
mov
add
add
lret
xchg
dec
dec
das
xchg
jae
bound
dec
roll
pop
arpl
icebp
fldenv
ljmp
push
and
push
adc
nop
notl
addb
shl
xchg
shlb
into
mov
dec
cld
imul
xor
out
rcr
mov
mov
cmc
pop
cmp
add
jno
push
icebp
pop
adc
divb
stc
adc
push
stos
stc
cli
pop
nop
sahf
xchg
add
loop
cmp
pop
inc
mov
or
sbb
sub
out
push
insl
jp
xor
and
imul
fstl
dec
int3
or
in
sbb
jle
fs
int
pushf
lods
iret
push
loopne
jmp
fdivr
cmp
das
movsb
addb
aas
std
add
out
mov
ljmp
jmp
popf
cmpsb
mov
lea
pop
icebp
lret
mov
pop
rcrl
sbb
cwtl
push
and
mov
clc
jb
pop
jne
push
loop
xorb
mov
aad
test
jns
pop
sbb
push
mov
cmp
push
lret
pop
aam
jmp
jo
mov
or
sti
push
push
fidivrl
dec
push
jns
cltd
das
cmp
in
mov
ljmp
mov
dec
outsl
repz
repz
aaa
scas
pop
dec
add
add
jl
popf
arpl
mov
add
cmp
jmp
xor
mov
std
xorb
das
lock
mov
out
sub
sub
sbbb
dec
hlt
cmpsl
pop
pushf
in
push
jle
outsb
sbb
nop
or
xchg
setl
sub
movsl
mov
aad
stos
adc
les
fsubl
leave
fdivp
push
push
andb
cmp
jmp
xor
rcll
adc
notl
xchg
lret
cmp
pusha
xorl
stc
ds
lret
pop
addb
sub
mov
pop
pop
shl
push
jmp
dec
repz
out
or
ljmp
insl
dec
add
adc
loopne
sub
add
ja
cmp
mov
pop
dec
and
leave
pop
aad
or
lret
and
sbb
pushf
dec
push
jmp
pop
xor
sub
dec
in
dec
cwtl
inc
pop
sti
push
cwtl
je
dec
mov
repnz
sbb
inc
and
lds
mov
add
cmc
dec
sti
push
jbe
mov
rol
imul
dec
cmp
shl
and
dec
adc
sub
rol
rclb
ficoml
ret
or
push
push
push
mov
jnp
mov
cmc
adc
push
adc
clc
sub
jmp
lods
shll
add
mov
shr
xchg
push
daa
pushf
cmc
cmp
sub
mov
push
push
sbb
sub
fdivp
mov
and
jmp
mov
std
enter
sbb
push
mul
xchg
fldenv
test
add
dec
add
fucomp
xor
sub
and
xchg
push
adc
adc
pusha
sub
xchg
inc
roll
pop
movsl
sbb
imul
decl
adc
daa
add
sub
jge
sbb
arpl
les
push
ja
jo
pop
and
xor
xchg
jmp
je
sub
lret
sub
lret
adc
push
sbb
add
testl
xchg
cmp
mov
sub
in
adc
inc
aam
push
sub
scas
dec
test
push
bound
cs
clc
pop
inc
mov
or
jle
add
jno
cmp
ret
or
es
sbb
inc
jl
dec
push
out
das
loopne
cmp
jno
add
and
add
insl
sub
dec
adcb
cs
sub
xor
mov
pop
mov
inc
les
dec
jns
add
mov
add
push
push
jns
xchg
icebp
xor
sub
nop
cmp
mov
sub
pop
mov
push
sti
jno
add
cmp
jo
out
dec
scas
xor
jbe
add
jmp
lret
je
rep
sbb
fildl
dec
add
inc
or
lcall
shl
xor
add
pop
add
out
lock
add
lock
sbb
in
fs
dec
mov
sub
mov
jp
inc
xor
bound
mov
mov
dec
or
pop
xchg
or
in
push
je
sti
push
sub
xor
or
jg
jno
dec
je
xlat
add
pop
xchg
inc
imul
stos
adc
sbb
pop
mov
adc
imul
sbb
dec
jo
pop
neg
test
dec
pop
fistpl
scas
ret
mov
bound
lret
je
xchg
int
xchg
inc
mov
jl
sahf
dec
push
or
test
outsl
add
shlb
decl
push
adc
arpl
mov
pop
and
pop
dec
stos
inc
lret
inc
pop
push
jmp
ja
mov
sub
jns
fnstenv
enter
xchg
add
out
push
enter
inc
stos
push
dec
lea
xchg
add
or
mov
mov
push
mov
xchg
push
jb
aas
add
test
and
xchg
jp
mov
jp
js
and
cld
mov
es
adcb
and
pop
mov
lret
and
add
pop
jmp
adc
sub
add
roll
pop
push
and
jmp
daa
fmul
cld
sbb
push
daa
xchg
mov
mov
xchg
call
ret
cli
jo
jmp
push
cwtl
mov
mov
fldl
push
mov
addl
es
js
pop
out
and
cmp
out
jnp
ret
adc
dec
shl
pop
and
dec
push
xchg
or
push
and
add
xor
jb
inc
bound
dec
fwait
pop
xor
mov
and
add
pop
rcrb
orb
xor
not
add
push
push
push
xchg
imul
pop
outsb
xchg
cmp
leave
xchg
ds
xchg
mov
adc
xchg
subl
ds
dec
mov
sbb
xor
out
sub
clc
mov
outsl
lret
push
pushf
push
push
cwtl
out
sbbl
jmp
test
shr
jp
leave
outsb
mov
ret
bound
mov
test
xor
mov
mov
sub
inc
and
sbb
out
xor
mov
mov
pop
mov
mov
outsl
xchg
in
cmc
sub
mov
and
inc
push
lock
sbb
cs
out
std
repnz
adc
nopl
inc
jmp
pop
sub
mov
add
not
xchg
nop
mov
jge
das
cmp
mov
add
fnsave
imul
inc
cmp
repz
clc
pushf
ss
mov
pop
mov
sub
mov
clc
mov
loopne
shlb
add
jp
ljmp
jmp
cmp
dec
pushf
mov
sbb
mov
sub
mov
mov
xor
sbb
int3
out
enter
xchg
cmpsl
add
movsb
push
shlb
fmul
cmp
mov
adc
ret
pop
push
fs
mov
jb
int
mov
repz
xor
sbb
mov
push
std
or
inc
xor
lret
adc
xchg
dec
pop
xchg
out
mov
or
nop
push
stos
dec
mov
insb
out
lret
lahf
sbb
lcall
sbb
jb
icebp
das
fldenv
sahf
cmpsl
sub
in
popa
cmp
cmp
pop
push
addl
xorl
repz
andl
bound
add
push
stc
pop
les
mov
adc
clc
or
out
ret
stos
mov
jmp
nop
cmp
dec
add
clc
jmp
adc
xor
cmp
or
out
mov
dec
pop
jp
fistl
add
mov
xorl
mov
push
push
pusha
xor
cmp
lods
pop
add
jge
add
loop
out
mov
test
scas
test
mov
shlb
data16
es
or
enter
xchg
xchg
or
jg
cli
rcrl
and
test
mov
in
mov
cmp
shrb
pop
jecxz
ljmp
or
std
fimuls
call
ficomps
ret
fs
mov
or
pushf
cmpsl
jl
fs
lods
dec
add
shl
out
push
out
dec
dec
icebp
inc
and
ret
dec
fiadds
push
jno
sub
fsubrs
adc
jo
xor
sub
jnp
pop
jle
push
js
mov
ficomps
std
in
inc
movsb
and
jno
aas
or
jne
xor
xor
pop
out
les
pop
in
jmp
mov
jge
jns
add
call
ret
mov
fnstcw
xchg
inc
call
pop
mov
jne
outsb
cmpsb
inc
dec
mov
pop
rcrl
fimull
push
and
pusha
xchg
pop
jecxz
dec
cld
stos
sbb
jmp
repz
xchg
push
popa
jl
add
jmp
add
mov
xchg
sbb
scas
sub
pop
cmp
std
mov
jb
add
je
mov
push
mov
cmp
aad
ret
sbb
adc
cmp
lock
in
mov
mov
jno
mov
ret
outsl
aas
sub
jb
pop
lret
adc
int
test
cltd
push
mov
sub
inc
test
fmuls
pop
pop
loop
and
xchg
mov
dec
fidivrl
or
jmp
sub
lret
outsb
data16
repz
out
pop
inc
add
or
rcrb
imul
pop
insb
jo
dec
jns
adc
jnp
mov
daa
aas
mov
cmp
xchg
add
imul
inc
arpl
sub
gs
push
xor
or
nop
sbb
sbb
and
orb
sbb
aad
or
jl
fimull
or
je
xor
lahf
inc
push
sbb
xor
imul
shll
or
sbbb
push
mov
or
sbb
mov
movsl
xchg
or
lret
pop
arpl
or
test
sbb
or
sbbb
int3
and
xor
inc
in
inc
popa
roll
inc
push
les
repz
mov
push
imul
mov
or
ss
xor
mov
rcr
and
ljmp
or
sbb
and
nop
inc
sbb
add
adc
xchg
and
xor
mov
cmp
gs
test
popa
dec
adc
je
stos
clc
scas
or
shll
adc
insl
sbb
cltd
ja
test
subb
or
sbb
fildll
inc
and
or
or
sbb
sub
or
roll
or
xchg
dec
xor
int3
fbld
out
test
bt
jne
push
push
roll
aaa
movsl
add
xchg
pop
or
or
mov
adc
xor
rcrb
pop
addb
scas
xchg
sub
add
fcoml
adc
cwtl
sbb
inc
adc
fstl
inc
aam
fistl
dec
pop
cwtl
cmpsb
adc
cmc
xchg
les
mov
or
and
pop
mov
inc
dec
sar
add
mov
into
outsl
pop
push
pusha
sub
inc
xchg
jo
rclb
jnp
pop
arpl
sbb
add
loope
mov
adc
and
xor
pop
sub
add
insb
add
cld
call
imul
inc
data16
cmp
jne
jmp
mov
push
mov
add
inc
leave
jne
testl
jb
cmp
rolb
mov
xor
lods
jmp
xor
jae
push
fsts
cmp
insl
pop
cli
sub
cmc
packssdw
inc
add
mov
push
not
push
mov
xor
sub
shlb
clc
sbb
int3
pop
sub
inc
out
mov
cmp
call
and
movsl
sbb
cmp
xor
mov
sbb
iret
jne
and
mov
lock
xchg
rcll
iret
les
add
popf
jge
dec
testl
fsubr
mov
push
add
ret
pop
pop
push
jecxz
dec
stc
les
dec
push
test
cmp
ljmp
push
sub
lea
push
mov
inc
or
mov
not
shr
out
pop
inc
adc
jo
sub
adc
jo
pop
push
push
mov
push
add
add
jmp
inc
push
pop
pop
sbb
std
into
jno
pop
les
xchg
jne
sti
lret
sti
pop
xchg
mov
push
sub
les
lret
jl
adc
js
dec
pop
test
ror
xor
dec
sub
mov
iret
and
pop
das
mov
add
mov
mov
xor
jg
shr
dec
repnz
movsl
aam
xor
or
xor
lods
mov
pop
and
imul
add
aas
call
xlat
daa
or
stos
icebp
andb
repnz
add
or
and
jo
add
aas
jmp
out
lahf
mov
jge
jb
sar
ja
xor
sub
clc
dec
outsb
xchg
jb
add
jo
adc
lods
loopne
sub
bndstx
jge
and
dec
test
idivb
inc
adc
out
sbb
clc
inc
cmpsl
cmpb
lods
xchg
loopne
addl
lret
pushf
and
push
cmp
jno
fadds
xor
adc
test
pop
orl
pop
mov
add
shrb
add
clc
cs
sbb
dec
les
enter
je
sahf
push
jg
dec
jo
loope
cwtl
inc
mov
xor
inc
rcl
pop
fldenv
or
aam
xchg
mov
fimuls
xor
cmp
mov
cmp
adc
mov
pop
hlt
in
add
and
dec
push
add
std
fiadds
and
inc
jg
repz
or
mov
movsl
mov
push
ret
and
and
add
or
jecxz
iret
ss
inc
adc
pushf
std
push
and
mov
cwtl
cltd
and
ljmp
shrb
and
push
xchg
add
pop
push
jmp
roll
push
jle
rcrl
sub
cmp
enter
lds
and
inc
mov
mov
push
push
lahf
sarb
push
add
lods
push
gs
pop
pop
add
in
inc
mov
sub
xor
ds
pop
aad
mov
or
xor
or
mov
or
push
fildl
pop
mov
xor
ret
pop
mulb
dec
push
adc
jae
dec
fnstsw
adc
or
jb
inc
fmul
loopne
pop
jbe
repnz
and
add
ds
std
dec
nop
mov
or
iret
pop
jp,pn
push
sub
out
and
jns
into
mov
jmp
dec
stc
dec
sbb
out
xchg
cmp
and
dec
sub
xor
popf
or
push
aad
rcll
add
lcall
cmp
es
jmp
xlat
add
dec
shl
jecxz
jge
xor
dec
test
lahf
pop
inc
xor
sbb
pusha
das
dec
repz
jmp
incl
push
aaa
xchg
xor
loopne
jle
pop
and
xor
shrb
mov
bound
inc
add
mov
filds
shll
cmp
inc
fistpl
jmp
or
dec
dec
lret
lods
jae
push
jb
cld
cmp
clc
sub
imul
push
scas
cmp
push
add
add
sub
push
in
add
mov
clc
jae
lods
rolb
ds
push
mov
pop
add
pop
lret
pop
push
cli
add
sub
jmp
in
loope
xor
xlat
add
add
sbb
es
mov
sbb
imul
push
jbe
scas
or
je
test
jge
sub
sub
or
mov
push
xchg
cld
sti
add
in
push
mov
dec
add
in
jnp
jmp
add
mov
aam
imul
scas
cs
imul
fsub
jae
outsl
push
pop
neg
rclb
dec
je
add
out
ret
test
pop
scas
and
push
mov
or
jmp
rcrl
sub
xor
das
cli
xlat
or
jne
and
scas
jge
add
call
int
cld
and
pusha
inc
jmp
icebp
mov
je
sbbl
imul
aas
test
and
inc
dec
pop
popa
lret
cltd
sub
inc
iret
jb
mov
dec
jne
mov
sbb
mov
cmp
pusha
aas
sahf
or
cmp
xor
mov
add
inc
add
xchg
sub
xor
xchg
popa
cmp
stos
push
pop
add
test
lret
lds
bound
xor
inc
repz
adc
dec
mov
mov
jge
fmull
bound
add
loopne
push
xchg
mov
jg
sub
xlat
lret
cmp
sbb
adc
adc
xchg
sbb
push
mov
jmp
ss
mov
sbb
adc
push
push
pushf
pop
and
push
mov
add
adc
test
in
lds
test
adc
mov
test
lret
sbb
cmpsb
jecxz
mov
pop
xor
adc
xchg
outsb
paddsb
xchg
fisubs
sti
les
add
sqrtps
ds
pop
cmp
int3
xchg
add
or
rorl
mov
outsb
mov
outsb
mov
and
sbb
add
dec
cmp
repnz
push
ret
fs
jb
jge
call
jmp
dec
and
add
addr16
sbb
daa
pop
sub
fbstp
push
jb
sbb
sbb
add
std
jne
fildll
out
jecxz
sub
pop
dec
adc
rolb
frstor
dec
push
sbb
cmp
cmp
dec
lret
xchg
and
add
orb
push
mov
xchg
xor
mov
popf
cltd
cmc
int
and
outsb
and
or
push
add
xchg
cs
lods
or
add
lock
dec
mov
sbb
mov
scas
imul
xchg
cmpl
idivl
scas
push
xchg
add
dec
or
repnz
pop
push
adc
adc
or
or
ficomps
mov
pop
lds
and
outsl
jae
xchg
adcb
not
rorl
scas
mov
dec
stos
sub
dec
clc
and
shrl
mov
sub
xor
lea
dec
sbb
adc
stos
retw
inc
and
rcrb
pop
mov
inc
mov
ret
inc
mov
mov
pop
xor
dec
and
dec
sbb
and
das
shl
or
dec
daa
test
jle
stos
andb
dec
add
add
jno
loope
jmp
cltd
sub
cs
jmp
andb
mov
add
adc
add
stc
clc
inc
jns
dec
call
lret
pop
add
jmp
leave
xchg
push
lods
mov
adc
mov
test
mov
sub
add
mov
sbb
pop
iret
out
dec
lods
jl
test
jmp
fcom
and
jno
in
das
mov
sub
iret
pop
mov
dec
push
adc
pop
into
mov
hlt
adc
jecxz
and
push
sub
fimuls
and
adc
pop
inc
mov
arpl
lret
dec
sbbb
add
enter
stos
enter
adc
jle
mov
dec
mov
mov
add
out
pop
mov
movsb
lods
outsb
push
aam
in
push
adc
and
pop
pop
xchg
push
mov
xor
dec
cmp
loop
in
sub
mov
loope
repz
pop
mov
jp
sbb
cmp
xor
jno
xor
js
push
ljmp
fidivs
rclb
mov
sub
jne
jmp
ret
shrd
mov
cmpsb
jb
sbb
mov
fucomip
or
or
xchg
fbstp
dec
push
aam
scas
inc
xchg
inc
xor
insb
push
xchg
sub
or
sbb
jl
repz
popa
xor
or
push
iret
hlt
add
lds
popa
out
dec
jns
add
pop
push
aaa
or
jbe
mov
mov
xchg
ds
pop
xchg
sti
pop
loop
cmp
aas
call
popf
sbbl
sbb
mov
cmpl
xchg
jns
mov
addr16
add
negb
push
pop
inc
clc
jmp
mov
cmp
push
add
lcall
in
pop
fs
loopne
jbe
fcmovnu
mov
sub
dec
or
jg
fwait
inc
popa
push
fmull
or
dec
and
push
lahf
std
push
lret
sahf
lds
xchg
mov
cmp
jbe
or
adc
inc
pop
shl
push
lsl
ficoml
stos
loop
inc
pop
inc
mov
adc
jg
mov
rcrb
lods
test
add
mov
inc
dec
dec
call
or
repnz
std
out
pop
push
mov
loopne
ret
mov
in
rcrb
cmp
js
out
push
jmp
andb
jns
dec
sub
jl
mov
sbb
jo
fistl
xchg
pop
js
out
xchg
test
and
xor
fldcw
or
mov
mov
adc
sub
dec
icebp
ljmp
inc
and
inc
push
push
mov
pop
push
pop
xor
clc
pop
mov
outsl
sbb
jl
call
or
adc
dec
movhps
jmp
lea
rcrb
mov
mov
cmc
rcrb
popa
push
dec
popl
xor
xor
mov
push
adc
out
pop
sub
pop
lret
sbb
shr
iret
pop
repz
push
mov
push
lcall
insb
ret
adc
inc
pop
and
bsf
bound
bound
cmp
pop
aad
or
jmp
loopne
ljmp
adc
or
jbe
cli
add
and
jp
imul
pop
add
dec
loopne
push
push
adc
ljmp
rcll
addr16
sub
xchg
xor
and
sub
jle
sbb
mov
jns
js
mov
inc
jle
xor
xlat
movsb
add
mov
pop
xchg
ss
fcomip
pop
pusha
fisubrl
cs
push
outsb
jp
push
mov
jmp
mov
and
and
lea
and
inc
call
dec
sbb
sbb
sti
pop
jne
out
cmp
adc
cld
or
call
es
or
add
xchg
insb
add
or
mov
sbb
mov
jmp
mov
jnp
hlt
cmp
adc
mov
and
cmp
jl
mov
and
xchg
mov
mov
pop
dec
push
out
pop
jb
and
dec
xor
fidivs
and
in
in
rorb
pop
xchg
sbb
mov
push
adc
nop
or
ds
dec
pop
pusha
sub
daa
or
jmp
mull
ljmp
push
pop
inc
in
sbb
cli
fldt
lods
push
pop
mov
and
xor
ds
out
ret
nop
rclb
push
adc
inc
pop
sub
cli
push
pop
push
xor
xchg
adc
inc
sub
add
xor
test
mov
sub
js
cmp
pop
add
fldt
push
jno
lgs
xchg
flds
pop
pop
sub
sub
push
je
rcr
add
dec
aas
addb
cli
daa
je
and
lock
sbb
dec
push
jmp
adcl
fildl
add
inc
add
jecxz
stos
mov
std
and
ret
aas
out
inc
mov
and
sti
sub
add
add
fldl
push
cmc
scas
xchg
xchg
sbb
jae
or
inc
push
pusha
inc
sarb
mov
mov
rcrl
ss
movsl
mov
pop
call
mov
pusha
push
or
xor
ja
jmp
jne
popa
bound
sub
mov
jns
push
mov
or
pop
test
and
rorl
jo
dec
jb
xor
and
adc
push
jmp
shl
rorb
sub
xchg
ljmpw
loop
or
sbb
pop
stc
aad
mov
pop
xor
fildll
push
mov
jmp
pop
mov
and
or
mov
leave
repz
adcl
push
or
ja
pop
lock
out
push
mov
xor
xor
fnstenv
pop
or
pop
scas
and
test
scas
and
jl
jp
cmp
dec
call
imul
ljmp
mov
push
adc
mov
add
jmp
out
inc
bound
pusha
jne
or
mov
mov
jnp
aam
push
pop
xor
jp
popf
push
mov
fiaddl
mov
push
mov
clc
nop
lahf
out
pop
lds
stc
lcall
xchg
out
xor
push
pop
mov
stc
adc
lds
jae
or
adc
push
stc
shl
scas
inc
sbb
mov
cmp
fs
xor
das
jmp
jne
dec
push
mov
rorb
sarl
and
fsubl
daa
in
pop
dec
sub
push
push
add
scas
andb
dec
in
cli
inc
sub
sub
and
rolb
inc
out
sbbb
mov
xor
lock
xor
pop
sub
cmp
int
loopne
aam
jmp
mov
xor
fimuls
or
scas
mov
jo
fdivs
test
mov
cld
push
jb
insl
call
js
fstl
mov
out
jo
pop
lock
inc
mov
mov
lock
pop
ret
cli
dec
jg
movsb
andnps
loope
sarl
lock
lahf
mov
xchg
mov
into
hlt
push
adc
or
or
jmp
jno
dec
adc
mov
test
in
icebp
lock
mov
shrl
arpl
and
dec
inc
filds
test
ds
sub
cmpsl
xchg
add
push
shr
add
adc
mov
movsl
inc
out
pop
ret
mov
cmp
mov
jecxz
pop
insb
jno
adc
mov
rcrb
stc
clc
and
leave
push
dec
xor
mov
xor
mov
jnp
xor
cmp
mov
cmp
push
addl
ret
add
sbb
push
jo
ror
inc
mov
mov
inc
pop
sub
xchg
sbb
mov
repz
dec
inc
mov
shrl
mov
scas
pop
je
mov
pop
add
sub
ja
or
push
sbb
adc
popf
adc
sbb
jmp
jo
fstpt
xchg
in
popa
jmp
or
lock
sub
mov
addl
mov
sub
cli
add
or
mov
ljmp
and
icebp
jne
prefetchnta
enter
push
rcrl
outsb
pop
inc
dec
in
cmpsb
push
adc
adc
xor
pop
roll
sbb
push
out
sbb
add
bound
sarl
mov
jge
inc
shrb
or
cwtl
pop
push
or
sti
and
popf
mov
adc
inc
enter
ret
dec
add
sbb
shr
jbe
pop
adc
cmc
lods
nop
test
popa
insl
lock
jnp
mov
push
xchg
lahf
lock
test
scas
inc
lods
mov
add
mov
push
addr16
ss
cmp
xchg
pop
inc
fcompl
dec
add
leave
jecxz
cli
ljmp
xor
imul
push
xor
and
cs
ja
xchg
ss
xor
pop
sarb
lods
and
sub
adc
daa
out
shrb
push
add
pop
mov
or
xchg
mov
push
add
cmpsl
push
mov
push
xor
stos
andb
nop
shll
mov
ret
mov
icebp
xor
sarl
movsl
adc
adc
cmpsb
xor
push
ja
popf
icebp
movsl
mov
xor
fsub
lret
add
adc
hlt
mov
sbb
das
dec
lcall
sub
or
pop
inc
pop
sub
movsl
aas
cltd
add
xchg
stos
add
mov
sub
cmp
adc
sub
dec
add
adc
mov
mov
negl
loopne
jmp
mov
xchg
push
or
adc
jge
mov
pop
pushf
daa
call
sub
jne
pop
icebp
cmp
push
out
cmp
lret
push
mov
jo
adc
push
data16
mov
pop
push
push
in
sub
xor
sbb
test
jo
aad
js
and
mov
jl
sbb
pop
inc
ret
jg
or
cmp
rorl
pop
aad
sub
pop
ret
ret
jl,pn
mov
pusha
mov
insb
rorb
add
jae
cmp
mov
jb
neg
roll
cmp
pop
dec
add
mov
xor
filds
mov
aas
rcl
and
push
frstor
decl
mov
jb
or
pop
sbb
pushf
or
xlat
in
mov
gs
mov
push
shl
scas
add
jo
orb
and
fimull
insb
or
rcr
push
add
loopne
jl
dec
rolb
add
stc
pop
push
mov
fldl
popa
xchg
filds
loope
call
push
fistl
push
pushf
or
push
shll
mov
push
push
push
das
imul
or
add
mov
or
sub
jmp
mov
orl
add
out
inc
and
xchg
sbbb
mov
xor
lcall
pop
sbb
jnp
inc
inc
ja
lock
fucomi
sub
pusha
out
add
push
push
cmc
into
shll
fcmovb
nop
jle
add
out
add
cmp
mov
sub
pop
add
ret
inc
bound
popf
xlat
add
or
and
adc
fwait
add
sub
push
sahf
outsb
add
jns
or
es
lahf
push
lret
std
pop
mov
aaa
xchg
fists
es
push
shrl
add
ja
repz
cwtl
mov
testb
and
pop
mov
cmpsl
in
rorl
rcrb
and
cs
and
pop
mov
dec
lock
fcoms
jmp
pusha
stc
xor
mov
sbb
jle
call
adc
mov
out
or
ret
idivb
push
mov
or
out
repnz
mov
add
push
push
cmp
cmp
popa
pop
push
mov
out
pop
push
mov
std
in
loopne
mov
scas
and
les
insl
xor
fsubr
sub
and
jns
xchg
rorl
enter
shlb
mov
add
cltd
dec
pop
push
dec
mov
pop
xchg
fidivl
pop
push
adc
push
in
outsl
daa
or
mov
sbb
sub
shl
in
cmp
sbb
cmpsb
dec
roll
psubq
std
das
and
test
test
sub
ljmp
seta
lret
inc
push
mov
gs
pop
dec
jno
mov
add
sarb
mov
mov
ret
push
in
addr16
movsl
mov
ja
and
cli
jp
flds
add
enter
inc
imul
sbb
sub
jge
cmp
movl
cmp
sbb
data16
out
cmp
sub
mov
mov
test
push
jmp
imull
adc
jge
dec
xchg
xchg
pop
sarl
xor
mov
dec
xor
call
inc
std
mov
or
sub
test
repnz
nop
fwait
out
pusha
in
sbb
sub
adc
insl
rcl
lock
imul
push
inc
pop
and
xor
pushf
stc
pop
ljmp
mov
leave
dec
lods
pop
ss
shrb
repz
jmp
lods
shl
jg
jge
cltd
sbb
and
ss
pop
sti
mov
jmp
jmp
and
add
add
jmp
cli
lds
xlat
fs
cwtl
jne
sbb
sbb
xor
mov
jge
addr16
adc
cmp
add
call
jb
push
adc
sti
xor
out
mov
cmp
fcoml
push
xorl
pusha
mov
and
movb
push
and
cli
loopne
hlt
or
ror
mov
and
mov
xchg
xchg
add
loope
jnp
rorl
mulb
sub
push
jne
push
xchg
inc
or
add
inc
or
clc
push
sbbl
imul
mov
dec
adc
dec
or
or
int
ret
xchg
mov
push
push
add
and
push
pop
jo
roll
pop
stos
adc
jb
add
xor
add
mov
xchg
mov
push
sbb
pop
sub
popa
add
xor
cld
sub
add
cmpb
or
dec
scas
pop
pop
jmp
mov
push
dec
push
jo
xchg
fidivrs
push
lahf
mov
leave
cmc
push
aad
lahf
dec
andl
or
xlat
pusha
jmp
push
testb
das
xor
cld
jo
cmp
mov
jge
xchg
sub
or
ret
popa
nop
inc
dec
jg
dec
pusha
ja
sbb
in
or
xchg
aad
mov
imul
pop
pop
add
add
pop
cmc
addr16
sbb
jp
push
lcall
sub
push
or
outsl
xchg
stos
mov
pop
fdivs
push
repz
mov
mov
test
loope
enter
or
mov
sub
pop
push
jmp
out
pusha
xor
sbb
jmp
pop
bound
dec
xchg
popa
mov
xchg
inc
pop
xchg
adc
or
fs
xor
shr
cmp
rep
cld
testb
xor
addr16
pop
push
mov
adc
and
cmp
fcoml
sahf
inc
test
pop
sub
push
mov
enter
sub
sub
incl
mov
fcoms
je
lcall
sub
or
ret
test
and
jne
mov
nop
adc
sbb
add
loop
sub
inc
add
test
adcb
add
addl
je
cld
or
jo
into
daa
inc
das
jl
sub
and
sbb
sbb
and
sub
insl
mov
adc
sub
arpl
popa
xchg
daa
mov
adc
lahf
int
out
pusha
les
popa
icebp
jne
icebp
mov
gs
jnp
mov
mov
negl
mov
aaa
imul
jp
dec
add
lea
add
xchg
or
mov
sbb
pop
addb
inc
dec
and
sbb
into
pop
sub
cmp
add
scas
es
cmp
in
inc
aas
pop
add
enter
stos
lcall
cmpsb
addb
push
dec
add
lods
cmp
daa
dec
loope
push
cmp
aas
insb
inc
sbb
neg
mov
insl
shl
pop
xor
cmovp
sbb
out
and
push
clc
out
cmp
jmp
or
jmp
dec
incb
or
in
ja
test
add
outsl
and
jo
inc
fcomps
dec
pop
mov
gs
or
shrb
cmp
jmp
mov
xchg
dec
mov
scas
gs
push
incb
mov
cmp
add
or
add
push
popf
xor
les
mov
insb
xchg
sar
pop
push
sub
sbb
pop
pop
addl
xor
sub
fs
test
stc
mov
pop
mov
mov
int3
add
in
or
mov
dec
psadbw
jge
fists
dec
cmpsl
aas
sub
inc
jo
push
and
punpcklbw
sbbl
mov
imulb
xor
or
adc
call
or
pusha
pop
dec
add
pusha
jl
inc
pop
sub
imulb
jecxz
jns
pop
jp
ficoml
mov
xchg
sub
cmp
and
jge
sbb
shlb
inc
adc
lds
in
outsl
testb
mov
xor
push
sbbb
adc
lock
mov
bound
leave
pop
jmp
les
scas
jo
push
jg
mov
adc
add
in
movb
dec
in
jae
lcall
ret
add
in
and
cld
bound
or
lcall
xor
mov
xor
pop
pop
imul
sbb
dec
inc
cli
and
xchg
xor
js
jmp
fs
sbbb
add
dec
adc
mov
pushf
adc
sbb
pop
sbb
jbe
cli
inc
mov
add
xor
movsb
roll
loop
testb
mov
inc
je
push
or
or
xchg
push
inc
add
xor
or
stc
sub
push
mov
xor
or
mov
or
lock
jecxz
mov
or
cmp
cmp
sbb
inc
push
js
out
lret
nop
orb
out
push
inc
mov
add
ret
int
or
js
hlt
clc
dec
inc
or
sub
sub
jae
dec
cmp
push
out
repnz
in
inc
es
mov
push
mov
lcall
out
fsubr
mov
or
push
mov
jle,pn
mov
loopne,pn
or
lahf
or
dec
int
and
cmp
mov
push
mov
cwtl
sbb
movq
add
mov
or
pop
or
and
stos
sub
lods
pop
mov
call
imul
and
hlt
icebp
cmc
cmp
mov
and
pop
xor
add
cmp
rolb
xor
out
adc
sub
push
das
add
push
adc
into
arpl
outsl
xchg
dec
test
adc
and
mov
adc
and
cmp
cmpsb
push
xor
pop
pop
icebp
adc
xor
inc
inc
gs
push
fcmove
mov
xor
adc
hlt
movsl
inc
pushf
xchg
aad
and
push
mov
nop
packssdw
dec
aam
cmp
pop
incb
jmp
dec
cli
js
or
cmp
sub
sub
sub
mov
bound
das
jno
dec
pop
sub
push
and
mov
lret
pop
jmp
pop
jns
or
add
mov
test
vpcmpeqw
pop
neg
inc
fcmovnu
and
mov
inc
mov
icebp
inc
or
pop
sub
lea
cmp
scas
aas
xchg
jl
stos
add
pop
or
ljmp
dec
push
cmp
push
or
incb
adc
in
rcrb
mov
pop
push
add
je
rcrb
mov
mov
leave
mov
jl
ficompl
jl
and
daa
scas
cmpsb
lds
scas
inc
sub
stos
clc
or
gs
pop
or
push
jo
pop
push
inc
mov
fs
fisubrs
jo
pop
push
cmp
add
cmpsl
iret
or
xchg
or
inc
sbb
divb
fwait
or
or
gs
lods
adc
xchg
inc
pop
mov
mov
fisttpll
pusha
add
gs
outsl
inc
loop
dec
sbb
xchg
loope
out
push
cwtl
sbb
xchg
scas
rclb
pop
jl
xor
sub
pop
mov
or
in
sub
mov
or
pop
xor
test
sub
and
aaa
xor
shrb
cmpb
movsl
daa
dec
jmp
movsb
test
lock
sbb
jb
pop
testb
int3
nop
dec
loop
and
or
dec
inc
mov
inc
cld
dec
mov
clc
add
add
mov
inc
lahf
xchg
sub
insl
pop
push
into
cmc
and
lods
sub
push
cmp
enter
loop
shrl
cmc
pop
xor
jmp
imull
pop
fwait
and
xor
jecxz
sbb
data16
cmp
lret
loope
xor
out
jle
ds
jle
movsb
lock
xor
push
lods
mul
in
mov
idivb
pop
push
shll
lcall
cld
shr
mov
pop
in
mov
dec
sub
jb
mov
leave
mov
sub
repz
mov
scas
loop
ffreep
dec
xchg
lret
int3
and
lahf
inc
stc
sarl
bound
xchg
out
je
mov
mov
sbb
scas
xor
adc
add
cmp
xchg
inc
xor
call
xchg
dec
xchg
imul
std
subb
fxch
arpl
rorb
js
cmp
out
mov
adc
push
mov
adcl
pop
jp
loope
cltd
mov
xchg
into
pop
xor
sub
pop
sbb
mov
stos
loopne
pop
push
pusha
inc
sbb
sub
push
in
cmp
stos
cli
jle
add
jle,pt
push
push
jmp
sbbb
jns
jmp
sahf
repz
lods
xor
xorb
add
es
testb
adc
or
movsl
shl
pop
add
nop
push
jnp
jae
addb
mov
std
orb
or
scas
sbb
gs
jne
es
call
jnp
and
or
add
sub
dec
push
rorl
jg
aad
sbb
cltd
fistpll
xchg
fdivs
mov
cmp
add
pop
push
cltd
pusha
dec
ljmp
jle
jno
cmp
and
cld
add
stos
pop
or
lock
xlat
mov
int3
mov
dec
jbe
daa
sar
pop
shrl
mov
jmp
cmp
scas
repnz
les
mov
mov
aaa
out
out
fisttpll
sub
je
push
mov
adc
cmpsb
or
mov
and
pop
xchg
mov
push
loop
xor
pop
test
mov
pop
pusha
daa
or
inc
xchg
jb
cmc
dec
daa
fdivl
pop
or
push
or
in
dec
add
pusha
sbb
cmp
pop
pop
push
and
or
cmc
loopne
cmpb
adc
push
xor
jbe
xchg
adc
dec
dec
inc
xor
rcl
jp
jl
fnstenv
or
ss
add
push
dec
adc
cs
orb
mov
popf
jo
dec
das
orl
xchg
mov
sti
dec
jp
xor
lds
mov
add
mov
jbe
clc
pop
cs
sbb
loope
jns
jnp
and
sub
push
pop
push
scas
stos
popa
in
sub
jnp
cmp
lock
add
mov
adc
pop
leave
add
shr
sub
dec
dec
sbb
adc
pop
push
incb
sbb
push
sub
clc
cli
cmp
fdivl
jo
mov
add
push
je
ret
or
add
push
flds
pop
pop
fdivrs
pop
ds
jae
sub
jmp
out
xchg
pop
xorl
xchg
pop
push
and
pop
add
je
cwtl
cwtl
add
mov
xchg
and
mov
or
ds
ret
enter
push
cmc
adc
push
scas
push
mov
xor
adc
add
push
xor
mov
fwait
adc
push
jle
mov
push
or
ret
icebp
push
pop
neg
pop
inc
call
rorl
mov
das
adc
push
lea
cmc
jne
push
lcall
jns
sub
xor
rorb
lock
subl
clc
xor
or
addl
sub
cmp
or
repz
adc
fwait
inc
out
or
call
inc
jge
mov
adc
sub
xor
inc
movsb
enter
mov
and
fidivs
add
ja
cmp
fs
add
lcall
in
sbb
int3
cmp
in
sub
in
jg
and
jne
sti
or
cmpsb
arpl
pop
pop
and
pop
push
bound
add
hlt
rcll
int3
cmp
clc
push
xor
popf
push
push
xchg
dec
mov
loopne
mov
lods
sub
es
cwtl
mov
dec
add
int3
pop
mov
out
orb
icebp
insb
and
addl
sub
push
add
jmp
or
jg
xor
and
xor
mov
mov
jecxz
mov
outsb
in
or
add
sbb
push
movl
pop
jnp
insl
jge
lcall
push
inc
icebp
mov
cmp
inc
lahf
les
pusha
mov
sub
test
fcomps
ljmp
and
inc
hlt
and
sub
xchg
or
lods
add
ss
and
pop
pop
pop
mov
mov
ret
test
jb
lods
rcrb
xor
shll
orl
dec
lods
jge
shrb
ja
sti
xor
add
loop
push
movb
inc
cli
mov
daa
testb
call
push
rcl
push
jbe
mov
mov
mov
and
push
add
fldenv
ds
icebp
nop
into
jnp
fistpl
mov
jns
push
inc
into
in
lret
imul
scas
imul
fcoms
lcall
es
cltd
add
inc
lret
out
mov
push
xchg
add
jnp
add
stc
dec
cmp
dec
inc
add
insb
insb
inc
gs
pop
pop
xor
movsl
clc
pop
add
jne
nop
addr16
movhps
iret
mov
lods
dec
lret
inc
mov
jg
push
jecxz
ja
push
stos
ffreep
jae
pop
push
test
sbb
add
enter
cmp
jmp
out
sub
adc
mov
push
stos
xchg
push
and
subb
cli
push
xlat
pusha
mov
iret
jo
dec
jl
push
sub
lahf
jl
pop
fisubl
dec
fnstsw
dec
add
cmpsb
sub
pop
daa
cmc
das
adc
xlat
pop
dec
xchg
add
xorl
cli
cmp
addr16
lcall
pop
lock
test
add
push
pusha
mov
mov
ja
and
mov
int
data16
xor
into
push
push
jle
sarl
lods
mov
adc
xor
out
mov
push
nop
or
pop
pop
push
jmp
add
sub
and
call
push
add
sub
aas
mov
adc
add
jle
add
imul
cmp
xorb
adc
jnp
fisttpll
add
push
mov
pop
add
jns
or
andb
mov
pop
fdivrl
jg
lahf
inc
mov
add
ss
mov
sbb
mov
jbe
jno
mov
add
add
add
pop
test
inc
mov
xchg
js
jmp
call
outsb
imul
jmp
pop
fwait
or
inc
and
movsl
rclb
lahf
ss
nop
dec
lahf
jae
or
sub
test
test
and
and
popa
lret
fnstcw
xor
push
xchg
sub
dec
sub
adc
mov
push
mov
fstps
pop
pop
dec
jge
adc
jbe
xchg
fwait
and
pop
cwtl
imul
or
jmp
xor
ret
movsb
icebp
push
imul
in
data16
out
rolb
sbb
sub
xchg
add
sbb
or
or
rorl
cmp
mov
rcrl
loope
mov
mov
mov
bound
sbb
push
mov
fwait
jecxz
adc
dec
add
frstor
loop
sbbb
mov
push
adc
fnsave
fcoml
xlat
jo
push
mov
add
out
pop
inc
loope
neg
das
mov
movsl
repz
lods
loope
fcomps
add
rclb
divb
and
mov
inc
push
adcl
xor
fsubrs
loope
add
loop
ja
rcll
mov
cmp
fcomps
xor
pop
adc
clc
add
pop
xlat
in
xchg
xchg
pop
lods
xlat
pop
lods
push
hlt
pushf
inc
pop
add
jnp
cs
test
loopne
mov
xchg
aaa
out
jbe
xor
mov
int
repz
inc
pushw
aad
ja
mov
and
mov
icebp
and
push
xor
or
mov
test
or
xor
and
push
inc
movsb
std
nop
adc
aaa
jmp
dec
maxps
push
gs
add
jmp
sar
aam
test
lock
push
pop
cwtl
cs
and
lds
xchg
pop
or
insb
inc
fwait
cmp
sbb
or
push
push
jmp
and
mov
lods
andb
jae
push
cld
xor
testb
andb
xchg
inc
cltd
mov
and
jecxz
mov
jno
pop
pop
ja
cmp
sub
imul
clc
pop
push
loopne
jmp
frndint
test
js
cmp
seta
pop
das
fcompl
push
popa
and
mov
mov
add
push
xor
xchg
inc
clc
mov
shlb
mov
lock
add
cmp
jg
add
add
inc
mov
out
addl
mov
push
shl
ds
rcl
fidivrl
js
imulb
xor
rorb
frstor
loop
mov
and
lahf
dec
push
cmp
and
test
loop
test
dec
cmp
adc
sbb
popf
push
adc
mov
test
popa
and
push
push
mov
jnp
int
add
lock
or
xlat
cltd
aam
sarl
push
pop
mov
cmc
xchg
push
mov
repnz
inc
dec
ljmp
lret
mov
adc
es
inc
adc
xor
sbb
int3
xchg
nop
dec
lods
jae
push
sub
push
iret
jp
dec
repnz
pop
push
popf
sbb
outsl
adc
mov
insb
outsl
push
add
shrl
inc
mov
and
in
int3
in
repz
xchg
movsl
pop
sbb
push
pop
cmp
repnz
jo
ljmp
dec
push
add
mov
add
add
daa
jmp
add
ljmp
jmp
mov
fsub
sbb
ret
and
icebp
push
adc
adc
jae
das
call
mov
xor
add
push
mov
or
cmp
dec
mov
mov
mov
adc
add
jo
jmp
xor
lock
push
and
invd
movsb
mov
push
inc
cmp
push
dec
or
add
push
pop
mov
aaa
push
repz
dec
fwait
cmpb
mov
loop
push
js
xchg
pusha
movl
pop
adc
sub
push
sub
mov
add
inc
cmp
inc
stos
add
push
out
mov
fistps
adc
sub
jge
mov
jmp
cmp
xor
adc
dec
pop
clc
or
xor
sbb
imul
cmc
faddl
movsl
addb
dec
pusha
jae
pop
dec
xlat
xorl
inc
jmp
pop
push
aas
pop
adc
ljmp
loope
jo
mov
xor
adc
push
xchg
xchg
cli
inc
mov
mov
jl
test
scas
shl
call
stos
jo
or
aas
and
adc
xchg
lods
in
outsb
push
mov
push
push
pop
and
sub
push
adc
into
loope
push
clc
rorb
rol
dec
and
les
mov
mov
fmuls
sub
dec
mov
add
add
adc
push
push
mov
xchg
repz
adcb
lods
xor
and
sub
xchg
pop
mov
xchg
stos
pop
outsl
addb
mov
cmp
push
xchg
mov
pop
or
aam
les
xor
cltd
lds
sub
xor
and
pop
in
and
es
aaa
sbb
pop
lods
mov
mov
leave
xchg
xor
punpcklwd
repz
or
cmc
pushf
or
pop
sub
loope
leave
cmp
inc
mov
jmp
jb
in
push
ret
push
leave
jne
imul
pop
push
in
sub
jecxz
add
sbb
dec
orl
jbe
stc
aad
sub
popl
not
push
push
pop
adc
mov
mov
mov
out
icebp
lret
lods
mov
and
jne
lods
ss
pop
pop
mulb
and
sub
fnstsw
inc
imul
daa
pop
in
pop
and
mov
testb
xlat
cmp
divb
xchg
jb
ljmp
add
cwtl
outsb
add
out
lock
xor
mov
and
push
mov
mov
test
movb
push
jbe
or
cmpsl
jns
adc
and
lret
and
mov
mov
add
mov
pop
xchg
popa
or
aad
mov
push
fsubl
mov
mov
sub
ret
cld
jg
in
push
stc
sbb
xor
aad
fld
cmpsb
roll
and
push
pop
lds
cmc
dec
out
xor
adc
mov
push
sub
jp
cmp
das
or
adc
dec
into
in
pop
mov
pop
adc
adc
mov
std
pop
xchg
add
cmp
push
cmp
jmp
repnz
dec
pop
insl
mov
push
pop
loope
pusha
sbb
or
adc
dec
inc
rcr
push
mov
lcall
cwtl
push
push
movsb
in
rclb
mov
in
hlt
mov
pop
stos
insb
adc
and
fcoml
pop
add
popf
int
or
loopne
sub
add
jmp
cld
dec
add
xor
and
add
mov
imul
xorb
push
shrb
es
cmp
xor
test
push
loope
push
cmp
hlt
adc
cwtl
xor
jge
and
add
pop
inc
inc
ds
jo
rcl
iret
les
mov
das
pusha
lahf
mov
insb
inc
pushf
or
dec
xor
mov
rolb
add
dec
cltd
xor
shrb
mov
jmp
sbb
dec
lret
cmpsl
ret
clc
shll
je
pop
sti
fsts
and
adc
sbb
pop
sub
pop
jmp
sub
or
jbe
loopne
push
xor
mov
das
jmp
dec
cwtl
sbb
sub
mov
rclb
js
xor
std
int3
cmp
cld
roll
mov
cmc
mov
aaa
inc
loope
cltd
xor
cmp
adc
mov
push
mov
xchg
xchg
add
mov
mov
loopne
dec
add
cmp
ds
ss
xor
add
inc
mov
cld
xchg
mov
push
cmp
ja
or
notl
mov
sub
push
mov
ds
sti
inc
aas
jb
sbb
out
sbb
les
or
rcrl
xchg
add
repnz
pop
pop
loopne
jns
jmp
pop
sub
leave
push
inc
jle
mov
push
daa
outsl
sub
and
sbb
jae
pop
push
ret
into
push
xchg
sbb
cli
clc
add
inc
jmp
ljmp
nop
push
jmp
jecxz
fsub
pop
aad
push
into
sub
jb
add
call
js
dec
or
xchg
aad
add
sahf
adc
jnp
cmc
mov
clc
add
dec
sarb
mov
jno
dec
fildl
and
aad
add
jmp
loop
shrb
imul
mov
mov
xchg
and
mov
inc
stos
add
pop
adc
mov
sub
xchg
inc
arpl
cld
xor
daa
in
push
adc
pop
sbb
call
xor
sub
jns
imul
xchg
push
xor
push
mov
clc
je
cld
loope
sub
int3
sub
push
fisttps
mov
aad
add
test
std
ror
lret
push
sbb
ljmp
xor
dec
shl
js
xchg
loop
mov
rorb
into
xor
inc
push
dec
jmp
icebp
mov
pop
push
test
divb
dec
cmp
ret
jnp
inc
cmp
and
jle
cmpsl
js
sub
jb
test
adc
push
mov
dec
push
jnp
dec
addb
add
pop
ja
rolb
or
cs
dec
enter
xchg
repz
sub
fbstp
jle
xchg
mov
mov
push
imul
push
scas
loopne
insb
xlat
pop
dec
xor
cmpsl
push
dec
in
push
pop
cs
sarb
pop
push
mov
adc
cld
pushf
ret
jl
cmc
lea
mov
fs
pop
out
pop
dec
dec
fbstp
je
dec
sahf
adc
imul
jo
mov
or
test
push
rolb
sarl
sbb
jmp
sub
loopne
mov
inc
mov
and
in
hlt
and
gs
testb
daa
mov
push
pop
mov
cmp
lret
inc
ljmp
pop
jns
and
out
not
dec
mov
loopne
mov
add
jecxz
sbb
lret
cmovns
aaa
loope
cmp
push
test
xchg
xchg
push
shlb
add
out
popf
push
mov
leave
mov
jbe
inc
adc
xor
dec
mov
pop
testb
pusha
inc
sbbl
push
mov
mov
shlb
mov
scas
mov
adc
lahf
ljmp
iret
ds
aad
mov
aam
mov
jmp
cmp
call
mov
mov
mov
pop
xor
movhps
mov
mov
adc
jecxz
adc
mov
sahf
or
shll
repnz
dec
or
imul
int
mov
inc
jp
enter
adc
mov
xchg
sar
rorb
sub
mov
pop
xchg
adc
pop
mov
aas
add
inc
lret
ficomps
pop
or
xchg
pop
mov
mov
cmp
shlb
daa
call
rcr
inc
scas
push
adc
inc
call
movsl
xlat
pushf
xor
jmp
inc
cmp
xchg
inc
mul
and
push
leave
jne
cmp
xlat
inc
test
mull
jbe
mov
or
inc
push
shll
dec
in
pop
mov
add
inc
dec
popa
add
jno
push
lea
lock
adc
or
jp
enter
addr16
in
xor
push
add
xchg
adcl
fldenv
pop
mov
sub
aas
sbb
std
sub
lods
loop
jmp
pop
ds
cli
xor
sub
jns
cli
inc
push
add
test
sbbl
adc
into
push
pop
movsl
adc
pusha
pop
ss
sbbb
push
daa
cs
inc
out
gs
fnsave
xchg
cmp
loop
popf
adc
xor
pusha
js
sub
fidivl
mov
mov
das
out
sub
pop
pop
in
ljmp
dec
in
and
jae
rcl
dec
xor
test
mov
add
ja
push
fidivl
ret
xor
sub
add
daa
insl
adcl
sub
xchg
sub
jp
leave
or
xor
push
jbe
inc
mov
sarb
movsb
mov
imull
sti
sub
jmp
inc
sub
jne
fidivs
add
into
pop
dec
shrb
xor
lret
std
rcrb
stos
xor
or
decb
arpl
adc
adc
das
pop
fidivs
out
xor
stos
mov
adc
add
cli
mov
push
fidivrl
pop
sub
inc
fadd
pop
mov
push
mov
mov
fsubr
adc
dec
xchg
push
das
pop
pop
add
sub
shr
jle
xchg
out
add
jmp
mov
pop
sub
mov
cmpsb
xor
mov
pop
and
pop
test
ret
sarl
sahf
adc
addl
jmp
mov
xor
loop
test
xchg
iret
mov
sti
lcall
adc
cmpb
jns
jno
add
jle
push
push
push
add
add
std
jne
imul
fsubs
jle
pop
push
ror
push
mov
test
fnstcw
mov
or
mov
dec
andl
or
sub
lahf
pushf
and
push
dec
jb
mov
das
cli
add
mov
and
add
and
loop
inc
in
jo
add
repz
pop
inc
ds
xchg
shlb
push
ja
push
cwtl
and
shll
lret
or
rclb
mov
rorb
imul
and
or
lods
inc
dec
pop
out
sub
sub
adc
add
gs
addb
adc
int
sbb
dec
pop
int
das
mov
test
xor
push
sti
orb
sub
xor
jmp
mov
add
adc
pop
adc
sbb
movsb
xlat
or
inc
jns
xchg
movhps
xor
sbb
test
adc
cmp
cld
adc
shrb
and
or
pusha
cmp
inc
sub
inc
adc
std
negl
adc
lret
and
icebp
jnp
pop
mov
jmp
ja
xor
in
jp
out
dec
gs
xchg
mov
out
add
pop
push
loop
cmp
mov
jmp
adc
lcall
add
or
sub
or
pop
scas
pop
jge
hlt
sub
sub
jecxz
fs
sbb
add
mov
roll
pop
ss
sub
add
std
push
inc
or
mov
sbb
jnp
clc
adc
mov
movsl
test
sbb
mov
aad
aam
push
sub
xor
leave
jns
push
push
add
pusha
mov
rolb
addr16
insl
pop
dec
and
sub
push
nop
sbb
jnp
leave
push
push
mov
jmp
dec
lret
fmulp
cmp
mov
mov
scas
mov
cli
dec
cmpsb
dec
lret
cmpb
fsts
cmpsl
das
das
pop
lock
inc
inc
jge
in
je
or
and
push
daa
call
sub
pusha
ja
cmp
xchg
cli
hlt
dec
daa
jl
push
jge
repnz
push
clc
call
adc
in
add
mov
cld
or
jmp
push
int3
imul
addr16
or
incl
sub
or
push
jmp
pop
sbb
dec
loop
test
mov
xchg
cmpsb
insl
in
imul
ret
sbb
jns
bound
icebp
push
sub
lds
nop
adc
out
adc
inc
mov
mov
push
insl
arpl
sub
sarl
jbe
stos
fiaddl
sub
lret
or
jmp
cmp
push
js
sbb
repnz
test
push
push
scas
dec
scas
adcb
movsl
and
int
and
nop
sbb
inc
jmp
stos
std
pop
rcrb
mov
testb
mov
neg
or
sbb
push
push
jg
sub
push
mov
xor
add
cmp
jmp
push
dec
test
add
mov
out
xchg
mov
or
movsl
lods
push
xlat
pop
adc
xor
mov
add
pop
add
punpcklbw
in
inc
fldcw
push
push
sub
or
dec
call
int
je
inc
movsl
lahf
test
sahf
push
add
orl
pop
mov
rorl
enter
cmpsl
adc
xor
push
leave
lret
mov
shlb
fidivs
or
rcr
adc
int3
or
ljmp
sbb
pop
adc
mov
sbb
pop
mov
insl
push
sbb
scas
and
mov
dec
call
cmpsb
lods
fidivrl
lret
dec
es
mov
jmp
mov
and
or
clc
xchg
jmp
adc
add
les
mov
or
out
mov
pushl
lock
pop
stos
stos
xor
add
stos
push
sbb
cmpb
mov
pop
cmovs
mov
pusha
rcr
mov
add
stos
je
sub
and
pop
dec
loopne
arpl
xchg
pop
xor
cmp
ret
push
mov
pop
inc
or
fcomps
adc
add
pop
jbe
adc
jp
push
pusha
sbbb
cwtl
fldenv
inc
in
xchg
xchg
mov
add
cmp
lret
mov
push
aas
sub
jle
or
fsubrl
xor
stos
mov
adc
add
dec
add
mov
fs
addr16
sbb
inc
lods
xchg
and
mov
and
repnz
and
jmp
or
ljmp
push
xor
imul
jmp
sub
out
dec
mov
ret
pop
movsl
std
int3
adc
and
or
scas
xor
dec
jmp
mov
add
sub
cli
out
jge
fsts
stc
lea
in
mov
pushf
or
test
and
out
xchg
roll
jns
mov
aas
mov
shlb
pop
push
mov
sub
dec
push
jo
push
push
or
popl
mov
push
xlat
jmp
mov
mov
push
mov
hlt
sub
pop
inc
subb
clc
jne
push
pusha
dec
sbb
or
sub
cwtl
cmc
mov
out
adc
and
add
lret
push
insb
jp
xor
sbb
pop
and
mov
push
sbbb
and
or
pop
bnd
push
jns
test
cmp
xchg
repnz
cwtl
pop
lahf
idivb
rcr
rorl
xchg
and
pop
mov
in
iret
lret
ret
push
or
cltd
in
in
mul
test
repnz
lea
pop
loopne
sbb
dec
imull
adc
and
mov
insb
mov
lds
lock
mov
mov
cmp
add
cmp
add
sub
lods
std
imul
es
xchg
ret
into
or
loop
mov
push
and
push
sub
jmp
loopne
cmp
mov
jmp
mov
push
add
mov
mov
pop
inc
nop
push
add
call
xchg
inc
jge
pop
subl
test
and
ds
push
ljmp
adc
das
repz
cmp
in
out
jmp
inc
inc
popa
ret
testb
dec
push
gs
inc
or
dec
xchg
add
std
add
leave
daa
jg
aam
push
inc
mov
je
or
cmpsl
loope
or
dec
mov
ret
lds
pop
pop
jmp
pop
cmp
dec
push
aam
sub
push
push
cmp
or
or
xchg
shl
mov
pop
mov
ss
orb
lcall
push
push
xor
mov
fistpl
movsb
cmp
cli
push
dec
repnz
sub
jmp
add
add
push
pop
mov
jmp
lret
or
jmp
jge
pavgb
cs
sub
cmpsb
mov
or
loop
dec
lds
add
sbb
or
xor
add
cmpsl
pop
add
lock
mov
sar
loop
or
inc
pop
shrl
add
push
in
pop
push
jnp
pop
or
scas
psubsw
aam
leave
test
or
mov
or
movl
out
fs
scas
repnz
and
cwtl
addl
hlt
jge
xchg
dec
movsb
out
sbb
sub
cmc
pop
jg
ss
jo
sub
pop
xchg
jo
xchg
ror
ljmp
mov
cmc
sti
add
pop
mov
mov
iret
repnz
mov
outsl
movsb
test
add
push
sub
mov
jge
jg
mov
add
sbbb
pop
jmp
sbb
mov
inc
ret
mov
push
xchg
lahf
add
pusha
sub
jnp
push
jmp
iret
lahf
jl
aaa
hlt
mov
out
xchg
inc
filds
loope
fsubr
outsb
push
push
out
jae
loope
push
movsb
ds
sub
inc
and
or
cmpsl
sbb
enter
pop
out
mov
mov
jge
jo
pop
inc
mov
push
xchg
xchg
les
jb
iret
jnp
jmp
test
in
lods
dec
test
icebp
sub
add
xor
mov
xor
scas
fdivs
mov
shr
push
test
sub
or
jle
adc
decb
sbb
and
pop
lock
pop
movl
test
iret
cltd
repnz
push
std
nop
jg
out
add
jmp
or
in
loopne
stos
sub
xchg
mov
pop
xor
xor
in
xchg
mov
fstps
push
mov
xchg
test
repnz
and
or
pop
js
dec
pop
lret
lahf
pop
jmp
mov
add
mov
xor
xlat
jmp
adc
daa
jns
hlt
notb
or
daa
adc
test
rorb
add
dec
das
movl
in
incl
ror
or
jmp
loope
add
push
daa
adc
lahf
fstps
ret
push
out
popf
jmp
push
pushaw
jmp
insb
sbb
test
pushf
inc
sub
dec
jbe
xor
add
push
push
mov
adc
add
pop
adc
jp
sbb
bound
fistpl
cwtl
inc
fs
pop
incl
add
pusha
push
imul
loop
push
push
xor
add
adc
push
mov
cmpb
repnz
hlt
dec
sub
push
add
jae
cmp
pop
pop
loopne
cmp
jno
inc
xor
pop
mov
cmp
inc
jmp
mov
add
ds
cs
xchg
stos
mov
pop
test
sub
stos
mov
pop
add
jmp
jo
sub
sbb
push
add
jg
inc
and
xor
in
jp
ret
in
mov
adc
cmpsb
fcom
int
jnp
addr16
and
daa
pop
scas
in
jg
roll
jbe
imul
inc
mov
sub
in
xor
cli
push
and
scas
negl
jmp
das
testl
cmpsl
jge
xchg
mov
repz
push
mov
jle
sbb
ret
cwtl
sub
add
cmp
xlat
push
lock
test
adc
lods
inc
jmp
out
or
dec
jbe
push
xchg
mov
jmp
lahf
ja
or
sub
jne
fidivrl
idiv
das
roll
mov
push
out
or
adc
sbb
inc
jb
fdivs
push
leave
mov
push
lret
testb
push
add
cltd
adc
sar
inc
movsb
lods
push
test
push
inc
and
into
mov
lcall
mov
jle
daa
sbb
push
cs
dec
outsl
jle
adc
not
inc
or
lea
sub
sub
jmp
hlt
jg
mov
adc
dec
jl
mov
mov
ret
push
mov
mov
lcall
dec
adc
pop
cld
popa
xchg
mov
ljmp
sub
shl
cmp
ja
pop
cmp
mov
in
cmp
jno
xor
sub
sar
je
je
cwtl
push
loope
sub
sub
sti
aad
jae
push
dec
mov
mov
or
out
pop
loope
push
cmp
lds
adcb
fistpl
xor
jnp
mov
ja
pop
lahf
add
iret
bound
inc
push
push
sbb
inc
push
mov
das
pop
andl
repz
xor
int3
imull
and
jp,pn
in
icebp
adc
les
adc
mov
in
add
inc
xchg
outsb
push
jmp
lock
dec
into
add
sahf
nop
jl
imul
or
mov
not
subb
dec
test
arpl
xchg
loop
rcrl
add
mov
inc
incb
into
mov
jecxz
test
sti
and
add
and
jmp
sahf
dec
and
les
lret
sbb
push
movd
xchg
repnz
push
mov
mov
cmpb
inc
andl
adc
xlat
daa
lock
out
hlt
xor
xchg
xor
inc
fwait
aaa
cld
push
add
popf
addr16
xchg
or
cwtl
cmp
or
jb
popf
jne
outsl
xchg
xchg
in
scas
mov
jo
popf
add
pop
sub
pop
pop
outsb
dec
push
dec
pop
mov
sub
adc
dec
cmp
add
cmp
loop
mov
xchg
mov
cmp
add
dec
fcomps
and
mov
out
mov
dec
xchg
ds
sub
and
pop
xor
inc
or
adc
ficoms
testl
add
jae
adc
push
jne
push
call
xlat
fidivrl
adc
sub
sbb
or
jbe
imul
pop
jmp
aas
jae
repnz
dec
shr
movsl
adc
mov
adc
push
jle
rcrl
sbb
adc
mov
fsts
or
test
cmp
or
push
das
add
stc
in
xor
pop
lahf
lock
lcall
or
das
testb
pop
lds
into
adc
push
inc
aam
clc
fs
push
pop
inc
dec
negb
ja
lret
mov
sti
hlt
lods
xchg
xor
leave
ja
icebp
js
les
in
mov
les
not
inc
sub
inc
and
outsl
test
xchg
cmpsb
cs
hlt
add
jge
mov
pop
dec
test
or
xchg
mov
and
xchg
bswap
push
in
inc
xlat
push
out
adc
fldcw
dec
fistpl
addb
bound
mov
sti
popa
test
das
xlat
test
sti
jmp
jecxz
ds
push
xchg
inc
clc
mov
add
dec
push
in
cmp
imul
out
mov
nop
cld
and
and
mov
and
into
push
push
loop
pop
mov
mov
mov
xor
dec
in
and
cmp
or
xchg
jnp
sub
jbe
or
sbb
lahf
fsub
jg
pop
inc
lds
xor
xor
aam
jecxz
cmp
adc
mov
jle
sub
rcr
pop
in
out
into
add
mov
repz
sub
push
add
aaa
sbb
push
dec
xorb
xchg
push
add
jmp
mov
inc
jmp
or
out
mov
out
pop
pop
push
push
jb
in
jmp
mov
fdivrs
aas
xor
ret
or
movsb
mov
rorl
jmp
inc
shl
lret
inc
mov
jl
movsl
mov
fldcw
mov
rol
inc
push
adc
lahf
outsb
or
movsl
xor
fcoml
loop
and
sbb
mov
cmpsb
mov
pop
pop
cmpsb
pop
notl
mov
xlat
mov
push
push
addr16
xchg
mov
lods
iret
mov
cmpsl
pop
xchg
mov
and
ret
icebp
es
mov
push
sub
lret
fdivl
into
mov
push
aad
outsb
jne
int
test
push
mov
inc
jecxz
repz
sbb
mov
cmpsl
in
cmp
mov
dec
sbb
call
cmp
add
jmp
mov
scas
ss
xchg
in
addr16
pop
mov
push
sbb
adc
sbb
or
dec
jmp
inc
inc
cs
add
pusha
pop
jo
dec
cmp
mov
mov
dec
add
daa
or
xor
push
and
mov
xchg
orb
rol
sti
and
test
ret
and
dec
sub
jmp
sbbb
dec
movsl
add
cli
cwtl
xor
cmp
or
xor
push
jl
je,pt
movsl
or
rcll
shrl
ret
out
aam
pop
and
or
popf
mov
jmp
inc
fdivrs
and
loop
iret
punpckhbw
popa
inc
js
add
or
xor
fdivs
rolb
sub
and
cltd
rclb
jb
mov
lahf
mov
inc
mov
add
sbb
or
and
repnz
cmp
pushf
jg
and
push
cmp
push
test
mov
insl
xchg
sbbb
push
loopne
test
inc
cmp
mov
jbe
inc
add
sub
out
fwait
push
xchg
in
repz
out
mov
and
xor
sub
hlt
roll
jg
jmp
mov
dec
push
leave
mov
push
or
sub
sahf
outsb
imul
and
neg
test
cmp
in
cmp
pop
mov
pop
xor
out
sub
ja
sbb
jmp
jl
rcrl
push
jmp
jl
and
enter
pusha
cmp
jecxz
sbb
test
icebp
sbb
lret
loopne
in
shr
xor
add
add
mov
or
hlt
out
and
loopne
push
jo
fwait
dec
dec
mov
jge
pusha
pushf
and
out
push
iret
pop
adc
inc
mov
pop
and
add
inc
icebp
sti
and
add
push
cld
sahf
xchg
adcb
sub
popa
fcmovnb
mov
ja
rolb
pop
add
mov
sti
dec
add
sub
adc
inc
movsl
xor
pop
add
cwtl
in
imulb
add
in
je
xor
pop
pop
adc
and
ja
and
xor
mov
std
fnstcw
btc
xor
push
sub
pop
inc
popa
addl
aam
stc
pop
sub
out
push
jo
fcoms
je
inc
mov
inc
ljmp
fadds
mov
sbb
lods
sbb
dec
imul
push
shll
cmp
or
in
mov
mov
add
cmp
lock
xor
sub
add
loope
cld
push
lods
pop
mov
pop
mov
inc
xor
add
inc
fmuls
mull
incb
test
cmp
mov
or
cmp
idiv
out
das
in
or
push
adc
rcr
daa
sbb
int3
jmp
or
loope
push
mov
jg
in
lock
xchg
loope
les
xchg
push
push
dec
sub
mov
popa
inc
adc
sbb
stc
mov
push
fiadds
ret
popa
inc
add
lea
mov
inc
in
les
daa
mov
aad
cmpsb
cmp
pop
hlt
and
in
xchg
fidivs
fiadds
aas
pop
shlb
inc
adc
dec
icebp
mov
mov
mov
mov
add
inc
adc
scas
mov
fiadds
sarl
sub
pop
lret
add
dec
mov
mov
jp
inc
or
mov
xor
ljmp
call
fcoml
imulb
or
push
add
pop
jmp
mov
daa
in
lret
or
push
dec
jg
inc
add
mov
testb
dec
pop
xor
xchg
or
dec
popf
add
dec
negb
pop
cwtl
sub
push
cmp
cld
or
imul
add
jnp
gs
pop
push
test
loope
jno
adc
in
or
sti
pop
cmp
push
sbb
push
and
mov
ljmp
cmpb
sub
sub
cmpsb
sti
ret
or
pop
pushl
lahf
push
mov
lock
stos
aam
out
and
add
clc
les
scas
mov
dec
je
jecxz
add
cmc
or
mov
sti
xor
push
sbb
repnz
mov
mov
add
jp
sub
andb
pop
loope
sub
into
sub
aaa
shrb
add
add
adc
and
and
dec
sub
test
enter
or
adc
pop
call
xor
mov
pop
pop
sub
cmc
dec
test
ss
shl
out
mov
cmp
push
lock
xchg
out
xchg
dec
jge
fmul
addr16
sub
push
xlat
mov
out
outsl
ret
inc
jle
loop
add
lret
clc
clc
ja
xlat
ret
inc
popf
push
xchg
or
dec
mov
cmpsb
fcos
into
add
add
inc
sub
lret
xchg
push
pop
cmp
push
xchg
mov
adcb
lret
xlat
pop
mov
xchg
pop
push
push
in
out
add
insb
pop
sub
das
call
fisttps
mov
xor
inc
roll
jge
jg
push
mov
pop
mov
ja
add
fisttpll
and
ds
sbbl
insb
fs
jmp
outsl
in
fcoml
dec
push
icebp
mov
outsl
shrb
mov
push
les
xor
ja
jle
imul
inc
inc
pop
jmp
sbb
mov
pop
push
jno
fistl
jp
inc
loop
add
daa
pop
lds
push
mov
lods
outsl
pop
pop
cli
into
in
or
jecxz
push
enter
mov
add
ficomps
jge
add
adc
mov
jp
into
add
mov
xor
aas
mov
scas
mov
add
lret
ds
adc
add
push
push
cmp
mov
xor
dec
stos
aaa
xchg
and
adc
mov
add
stos
leave
xor
and
pop
sub
inc
mov
dec
int
pop
sahf
popf
add
jmp
lret
shr
je
add
adc
cmc
xchg
mov
lds
adc
sub
cmpl
jecxz
lods
dec
add
insl
aam
js
insb
hlt
xchg
add
xor
fadds
dec
outsb
and
bnd
dec
mov
pop
cmp
pop
push
xchg
add
xchg
mov
popa
adc
add
dec
das
iret
mov
sti
outsb
or
mov
pop
and
or
pop
inc
mov
mov
je
inc
sub
dec
sar
cmpb
dec
sti
aaa
sub
sub
jo
std
fsubr
adc
rcl
fldl2t
jnp
enter
sub
cld
inc
dec
jbe
imul
daa
fwait
scas
push
in
js
rol
gs
mov
mov
or
jne
jae
leave
movsl
lock
mov
in
das
and
dec
cwtl
mov
sbb
adc
jg
or
xor
or
or
xorl
xor
lock
dec
imul
pop
jmp
mov
dec
or
mov
jmp
dec
lock
jae
push
xor
inc
sub
mov
inc
mov
add
cmpsl
xor
jmp
add
int
jae
fsubrl
mov
add
ljmp
leave
adc
add
adc
mov
call
loope
out
ret
mov
rcrb
inc
sbb
xchg
dec
pop
push
inc
mov
shrb
in
and
scas
sarb
scas
out
dec
in
adc
sbbb
ret
in
inc
jnp
lea
push
or
adc
aam
clc
push
sub
out
cld
push
pop
pop
call
mov
hlt
inc
mov
in
pusha
push
mov
add
stos
imul
out
dec
fcoms
push
mov
filds
dec
pop
jbe
sbb
negl
and
icebp
jo
enter
jnp
pop
nop
sbb
pavgb
jno
std
inc
or
xor
cs
addl
pop
jle
xor
mov
jo
push
jmp
ds
test
or
jge
ja
sub
flds
mov
dec
mov
insl
dec
add
cld
pop
je
add
jmp
cmp
test
daa
pop
fsubrs
jns
mov
idiv
in
enter
test
cmp
add
jmp
pop
push
xchg
movsl
fldl
cli
sbb
inc
stos
mov
sub
jb
aas
jo
pop
not
or
xor
push
ret
movsl
xor
push
fdivrl
cmp
mov
dec
mov
fstpl
add
or
popa
loope
mov
add
imul
ja
inc
leave
mov
add
repnz
popf
lea
xchg
push
jmp
pop
add
add
pusha
and
xor
int
in
pop
loope
mov
push
pop
ja
lahf
dec
mov
rolb
addb
inc
jo
popa
mov
nop
push
ret
fstl
imul
in
cmp
jle
shr
popf
pusha
xchg
cli
and
inc
cmp
fists
cmp
dec
loop
jle
push
sub
mov
mov
test
xor
das
movsl
out
frstor
iret
jno
mov
or
xchg
dec
inc
inc
sub
adc
cmp
or
adc
mov
pop
add
inc
or
fwait
hlt
mov
lock
push
popa
leave
push
js
out
jb
dec
and
ljmp
in
std
test
repnz
clc
xchg
xchg
icebp
out
adc
rolb
push
sbb
iret
dec
or
or
shl
popa
rorl
jg
loopne
inc
popf
enter
lahf
jae
dec
push
shl
push
pusha
xorb
mov
fisubrs
sbb
xor
dec
sbb
inc
push
sub
pop
jno
or
pop
ret
or
adc
mov
mov
fimuls
mov
mov
cmp
pop
mov
out
outsl
inc
jp
mov
aaa
bound
test
or
add
cmc
rorl
adc
mov
cli
pop
ja,pt
xchg
int3
xlat
mov
mov
popa
pop
pop
mov
testl
in
xchg
pop
stos
daa
cwtl
or
shrb
imul
inc
or
sbb
adc
sbb
xorb
addb
orl
adc
xor
mov
fdivs
ds
lods
popf
pop
inc
js
pop
xchg
pop
sbb
push
jo
movsl
jo
add
push
shrb
cmpsb
in
fbstp
out
aad
dec
mov
and
jecxz
popf
inc
loope
in
dec
add
mov
fld
repz
jno
mov
mov
mov
adc
pop
push
inc
fimull
pop
jle
fldl
cli
call
scas
mov
mov
pop
lcall
in
lods
fisttpll
add
je
xor
and
or
mov
mov
mov
movb
clc
jo
dec
sub
rcl
add
jecxz
pop
out
bnd
repnz
mov
push
sarb
test
xor
dec
sub
sub
rcrb
sbb
sub
push
repz
jo
jp
adc
adc
jnp
sbb
push
jb
sub
xor
cmpsl
push
mov
pop
mov
cmc
jge
pand
std
pop
xchg
sbb
or
testb
rcll
xor
cmpsb
pop
fistpl
inc
adc
push
in
jae
test
sub
rcl
and
sub
or
je
pop
dec
pop
cwtl
cmc
cld
loopne
or
jmp
subb
jnp
ljmp
gs
xchg
xchg
xchg
dec
inc
adc
pop
imul
enter
mov
nop
orb
and
inc
and
xchg
push
filds
sub
loope
outsl
ficoml
fld
cs
cwtl
push
and
pusha
repz
mov
push
mov
loopne
pop
in
xlat
shll
ds
jg
orb
jge
mov
js
mov
repnz
mov
lock
add
ficoms
pushf
and
push
inc
mov
mov
and
outsb
adc
ljmp
xchg
dec
or
push
xchg
xor
pop
dec
inc
sbb
bnd
mov
mov
mov
jmp
icebp
jmp
aaa
addl
jo
mov
repz
testl
and
pop
pushf
fisubl
dec
ds
inc
adc
add
xor
pmulhuw
cmpl
xchg
cli
jecxz
push
cmp
rclb
pusha
mov
hlt
fstl
jmp
xor
or
pop
xchg
dec
jb
repz
xchg
push
or
sarl
shrl
addr16
push
jmp
mov
jne
sbb
xor
mov
pop
fsubr
fsubl
sbb
sub
pop
stc
orb
cs
adc
add
dec
or
sub
fbld
and
add
xor
dec
pop
add
mov
sbb
or
jmp
inc
sahf
sub
mov
push
xor
addr16
addl
outsl
xchg
sub
dec
add
adc
pop
test
xor
or
push
loopne
cmp
adc
mov
ret
jmp
lock
fcoml
inc
fmull
bound
xchg
les
cmp
add
inc
lret
mov
or
jo
pop
mov
call
push
or
sub
outsl
fs
idivb
sub
push
xor
aad
insl
pop
add
dec
jmp
test
inc
mov
jb
pusha
add
sbb
test
das
xor
filds
not
and
or
inc
push
movl
dec
xchg
bound
scas
push
inc
outsb
pop
add
cld
mov
mov
inc
pop
adc
xchg
ds
sbb
jmp
lcall
jmp
add
cmp
sti
sub
ds
xchg
orb
xchg
test
cmpsb
pop
add
shll
pop
mov
push
push
daa
jmp
push
sbb
or
or
jmp
or
lods
xor
cli
ret
and
pop
sub
orb
out
inc
xor
testb
inc
cs
in
icebp
mov
push
daa
call
jne
jge
cmp
or
add
jno
or
or
dec
lret
adc
add
adc
push
sbb
pop
mov
xor
ljmp
add
jmp
pusha
idivl
xor
push
fsts
pop
std
daa
leave
cld
inc
mov
cmp
adc
xchg
sar
push
shll
icebp
or
and
imul
dec
in
jmp
lock
rol
push
or
cwtl
dec
push
mov
xor
outsl
sarb
mov
mov
pop
and
add
inc
xor
sbb
arpl
push
xor
push
adc
add
jg
adc
mov
adc
jle
rcrl
loopne
pusha
addl
test
adc
test
loop
mov
ljmp
xor
xchg
and
xor
sub
repnz
xor
sub
dec
iret
push
stos
shlb
andb
mov
hlt
lods
stos
out
inc
push
sub
jl
or
or
add
daa
test
adc
adc
adc
loop
sbb
push
pop
pusha
inc
adc
lcall
inc
out
sti
add
hlt
mov
dec
add
lock
movsl
push
inc
orb
add
sbb
push
pop
mov
push
dec
in
dec
mov
and
jp
je
mov
aaa
imul
clc
loop
mov
dec
pop
xchg
pop
jmp
inc
pop
sub
sbb
jbe
pop
jmp
jge
push
pop
shl
outsb
jmp
dec
test
adc
mov
push
mov
xchg
adc
pop
cld
ret
push
bound
xchg
ljmp
lds
add
aad
pop
cwtl
inc
and
and
push
add
cmpsb
imul
inc
xchg
jge
sub
pop
push
push
in
push
pop
pop
jmp
mov
jmp
sete
push
ja
sbb
sbb
pop
cmp
ret
cmp
outsl
mov
setp
and
mov
mov
xor
repz
iret
add
lds
push
inc
push
and
or
dec
mov
data16
lods
lcall
push
sub
add
out
lds
mov
cmp
push
stc
daa
cmp
ja
shlb
fadd
popf
in
cmp
insl
inc
jno
push
lea
sbb
lea
or
ds
sbb
jle
sbbb
cmp
push
frstor
icebp
test
in
adcl
and
addb
loop
push
or
repnz
in
xor
xor
cmp
dec
add
je
inc
jmp
or
std
sbb
scas
jecxz
fisubrl
sub
ret
jmp
movsl
repnz
loop
mov
dec
test
ficoms
or
xor
sub
or
sub
add
xor
les
inc
cmc
lock
gs
jne
pop
pop
aad
cwtl
cmpsl
jge
xchg
xchg
jne
add
sbb
xlat
push
add
cmp
outsb
xor
xchg
dec
es
dec
fimuls
sbb
rcrb
movsl
or
loop
loopne
adc
mov
xor
and
push
xchg
dec
add
push
inc
add
adcl
mov
cmpsl
and
add
pop
add
jmp
push
add
leave
sbb
rcll
jne
adc
shlb
xlat
xchg
dec
mov
pushf
cli
and
or
cmp
addr16
jecxz
arpl
sbb
fadds
sbbl
sbb
pop
push
mov
mov
lret
imul
add
add
push
ljmp
jmp
push
mov
adc
sub
dec
das
andb
loope
js
hlt
or
aam
aas
lods
test
aaa
and
push
jne
jne
les
enter
pop
cwtl
and
mov
icebp
mov
scas
pusha
sbb
ja
xor
jg
pop
stc
shlb
sahf
dec
xchg
test
out
xor
mov
aad
add
iret
jnp
aas
or
daa
add
inc
sti
mov
and
out
adc
mov
movsb
mov
les
in
rcll
jmp
push
mov
sub
dec
and
pusha
inc
ret
cmpsl
mov
add
fldt
in
cmpsl
shll
inc
neg
movsl
add
adc
jmp
or
or
add
jecxz
jg
iret
pushf
push
outsl
mov
inc
push
mov
xor
sub
adc
addb
ljmp
push
or
outsb
mov
ja
push
add
jns
in
push
aas
push
aam
sbb
sahf
mov
mov
jbe
out
mov
dec
pop
test
imul
sahf
movl
mov
lahf
xor
lret
jbe
leave
es
and
loope
repz
loopne
or
mov
imul
add
cwtl
out
into
push
jg
mov
das
movsb
andb
inc
mov
pusha
das
ret
and
or
bound
or
or
pop
or
aas
sbb
lds
inc
cmc
aad
jl
test
sbb
push
inc
push
xor
popf
stos
lock
or
into
mov
js
xchg
movsl
ljmp
gs
or
add
and
jmp
mov
cmc
lock
repnz
lods
pop
test
push
mov
stc
dec
in
inc
imul
jo
aam
jmp
insb
mov
daa
pop
fidivs
out
xor
xchg
not
or
adc
and
pop
call
dec
add
or
inc
inc
imul
mov
ret
int3
or
fistps
mov
mov
pop
scas
fldl2t
in
incl
int
mov
jae
aas
lods
pop
pop
lods
rcl
mov
push
sub
mov
in
mov
mov
lea
mov
test
and
sbb
add
mov
dec
or
xor
icebp
inc
xor
mov
mov
and
push
or
enter
push
jp
into
mov
ret
insb
cmc
testl
lock
lret
adc
std
mov
pop
add
add
sub
ret
jge
cmc
pop
dec
sbb
fcoms
scas
mov
sub
or
jns
cmp
or
cwtl
adc
sub
lret
aam
add
dec
add
pop
sarl
popa
ficoml
neg
push
jne
cmp
xchg
adcl
adc
mov
popf
pop
xchg
sub
repnz
hlt
inc
leave
sub
dec
mov
mov
pop
and
int3
ret
mov
clc
cltd
data16
inc
mov
enter
xchg
inc
jl
jb
jae
popf
mov
das
cmp
ret
in
mov
xchg
in
add
xor
out
xchg
xor
loopne
mov
gs
movsl
pop
enter
adc
lds
popa
mov
add
stos
and
jmp
js
push
icebp
rorl
mov
call
ds
pop
iret
xor
popa
cmpsl
mov
aas
pop
stos
sbb
cmc
xorb
mov
arpl
adc
gs
call
cmc
push
sub
xor
jne
cli
dec
in
mov
cmp
and
daa
lds
movsl
push
jmp
xor
pop
das
ret
cld
push
jge
or
sbbb
jg
pusha
xchg
test
popa
push
ret
pop
xor
into
je
lahf
cmp
push
push
rcrl
mov
loope
sub
add
and
imul
fmul
xorl
cmp
jmp
push
push
pop
mov
xchg
in
and
aam
inc
notb
xchg
xorl
push
sub
push
cmpsb
lret
ret
jg
mov
mov
into
jno
repnz
out
push
mov
lds
mov
imul
cmp
out
mov
hlt
jnp
and
pop
push
cwtl
movsl
pushl
cmpsl
add
testl
jle
das
addl
pop
or
push
popf
cmpsb
inc
clc
adc
xchg
sub
sub
mov
push
stos
call
inc
add
jmp
or
push
loope
ret
mov
inc
lret
fisubs
mov
push
inc
stos
mov
pop
mov
mov
dec
or
popa
sbb
mov
enter
subl
mov
add
or
inc
mov
push
sbb
and
or
jg
test
js
or
jge
push
add
pusha
in
mov
push
push
lods
arpl
out
lds
mov
push
dec
ret
adc
xor
cli
mov
mov
pop
call
jl
xchg
dec
inc
in
xor
lds
notb
outsb
in
mov
and
not
add
or
dec
push
mov
test
jecxz
xor
out
or
pop
cmpsb
or
mov
mov
jecxz
daa
push
mov
or
mov
fstpl
xor
add
js
into
sbbb
rcl
dec
fimull
ret
pop
xor
sbb
loop
jbe
and
xor
sarb
int
jmp
arpl
aaa
mov
jle
dec
xchg
cmp
aaa
xlat
xor
mov
xchg
jl
or
lds
mov
fnsave
or
push
leave
add
sbb
inc
or
sub
jp
mov
mov
or
or
jb
mov
or
or
mov
nop
daa
daa
mov
adc
fisttpll
push
stos
or
pop
daa
and
jne
rorb
push
xchg
mov
or
cmp
mov
add
mov
jmp
push
adc
aad
imul
push
sub
add
adc
roll
dec
jb
nop
ret
or
pop
xor
nop
imulb
icebp
ret
mov
pop
push
sbb
add
subps
and
popa
dec
adc
inc
mov
js
iret
es
inc
mov
pop
icebp
add
xchg
xor
push
mov
push
mov
cld
shl
pop
mov
lret
shl
daa
ret
jo
pop
gs
out
iret
or
lds
rolb
sub
shlb
imul
lret
jnp
in
push
shrb
adc
imul
add
ret
dec
into
inc
and
fcoms
test
sub
orb
push
and
mov
mov
xchg
pop
sahf
or
jmp
xchg
xlat
cmpsl
fnstsw
add
push
push
push
xor
lcall
jnp
mov
sarb
push
movsl
adc
mov
mov
sahf
xchg
push
dec
adc
and
cmp
push
mov
pop
js
lahf
loopne
gs
or
dec
xchg
mov
insb
or
push
xchg
scas
popf
push
xchg
iret
sbb
xor
xor
pusha
add
into
test
lret
iret
mov
or
mov
js
lahf
pop
push
lock
xchg
addb
mov
in
mov
or
pop
fidivrl
sub
out
push
iret
rorb
push
jmp
jle
fs
pop
mov
mov
jno
dec
push
pop
sbb
shll
cmp
xchg
xchg
dec
sti
or
pop
or
and
add
pop
nop
addb
aas
xchg
pop
mov
mov
bound
jmp
lock
out
push
inc
fwait
inc
dec
popa
sti
add
sub
sub
add
push
in
mov
pop
push
add
in
mov
mov
pop
loop
bound
cmc
je
pop
mov
lcall
in
xchg
cmp
cmp
arpl
pop
push
push
add
psrlq
jmp
insb
cmp
mov
push
or
arpl
dec
imul
sbb
loope
jmp
negl
stc
movsb
ljmp
add
incl
xor
aas
xchg
pop
out
dec
hlt
movsl
lods
dec
loope
and
int
sub
cld
inc
outsb
movsb
mov
loopne
jnp
gs
scas
popa
lret
dec
shlb
imul
or
jno
into
mov
pushf
xchg
or
jnp
dec
test
fldenv
mov
pop
shll
mov
repnz
sti
movsb
decl
push
adc
aam
cs
add
sbb
mov
movsb
mov
push
mov
mov
in
sahf
push
dec
fmull
pop
xor
das
push
mov
popf
mov
js
fildll
mov
jg
adc
mov
in
inc
jg
sub
nop
adc
dec
imul
mov
mov
xchg
jg
daa
jmp
pop
push
push
inc
imul
push
gs
out
insb
ljmp
xchg
mov
stos
in
jge
pop
dec
subl
aad
out
movsb
into
mov
arpl
mov
sarl
or
lock
add
icebp
adc
jns
and
out
add
not
outsb
inc
mov
sbb
das
mov
jmp
adc
jecxz
dec
addr16
sub
mov
test
adc
jp
dec
push
jo
outsb
cwtl
popa
or
xlat
xchg
and
jmp
lock
cmp
xchg
xor
loope
popf
mov
subb
dec
es
pop
inc
outsb
push
mov
push
adc
pop
das
inc
jns
mov
xchg
xor
gs
shlb
mov
add
adc
pushf
movsl
xor
rolb
or
adc
add
push
add
dec
inc
cmp
ret
aad
cmp
movsb
dec
pop
cmp
cmp
mov
aam
out
jnp
or
push
addb
sub
adc
push
and
repz
mov
pop
sti
clc
cmp
push
push
adc
js
andl
imul
inc
sbb
pop
push
insb
mov
cmp
imulb
or
sbb
push
int3
sbb
mov
push
mov
movlps
orb
mov
or
and
cmp
adc
pop
sub
in
xor
jl
lds
push
pusha
lret
xchg
mov
cmpsb
add
into
pop
jnp
mov
add
jmp
mov
outsl
add
pop
lea
sti
into
jbe
fs
push
pop
lock
sahf
pop
or
inc
cmp
dec
adc
fnstenv
dec
adc
sub
xchg
mov
push
push
fcmovu
xchg
inc
or
jge
pop
fsubrs
enter
push
ret
xor
sbb
aas
pop
sbb
mov
ret
sbb
scas
inc
mov
loope
outsl
test
sub
add
inc
jg
pop
jge
mov
sbb
mov
in
xchg
cwtl
cmpl
filds
movsl
push
cmc
orb
pop
and
sarb
inc
jne
push
pop
jmp
add
loopne
mov
jne
push
in
sbb
mov
push
stos
push
pop
mov
shlb
clc
push
movsb
or
sarb
fildl
aas
push
decb
jo
xchg
push
test
fstps
adc
xchg
or
adc
mov
int3
cmp
cld
or
inc
stos
xor
orl
adc
hlt
dec
push
add
jg
leave
add
out
mov
jno
or
test
dec
mov
ja
mov
sub
adcb
out
pop
dec
xchg
add
mov
dec
add
testb
and
subb
sub
add
imul
sbb
jecxz
test
push
dec
push
mov
into
not
mov
adc
mov
xor
mov
dec
pop
mov
add
xor
decb
dec
enter
adc
inc
pop
push
popa
push
stc
mov
push
mov
and
add
adc
pop
adc
ds
inc
pop
mov
add
jns
mov
int
aas
notb
sbb
sbb
loop
add
test
inc
repnz
xchg
sub
ds
or
mov
out
aam
and
adc
pop
addb
and
pop
or
sbb
out
sbb
adc
into
cmp
push
push
jl
add
sbb
pop
jnp
pop
imul
pop
mov
movsl
bound
or
cmp
dec
push
push
add
push
clc
loope
jnp
popf
push
bound
out
mov
jg
loop
arpl
push
mov
sbb
adc
daa
std
cltd
imul
scas
adc
sbb
xchg
aas
push
lods
push
int3
sahf
dec
leave
sbb
and
hlt
cmp
sub
xor
dec
ficoms
int3
shr
jmp
lods
lcall
test
xor
pop
push
test
cmpsb
test
sub
pop
push
push
adc
mov
xor
mov
mov
inc
xor
or
fidivl
push
xchg
imul
jmp
ret
shl
icebp
pop
das
fisttpl
push
mov
outsb
xchg
je
test
out
xor
pop
popf
pop
pusha
orl
cmc
and
and
jnp
test
inc
stos
jg
popa
dec
fiaddl
mov
movl
sbb
add
or
and
jmp
daa
fs
xchg
das
lret
jle
cltd
inc
and
xchg
sbb
xor
mov
add
xor
in
mov
xor
pop
popf
out
pusha
pop
pop
int
add
xchg
inc
jmp
sub
aam
dec
or
jb
pop
es
repnz
cmc
ror
hlt
outsb
subl
dec
sub
adc
cltd
sarb
call
add
or
leave
pop
mov
lods
mov
mov
into
cld
mov
cld
pop
dec
fidivrs
fucomip
or
lea
rolb
aam
stos
adcl
mov
jns
dec
shr
xor
mov
das
sub
notl
or
cmpsb
adc
dec
mov
jg
pop
mov
shrl
mov
push
jle
test
push
push
loopne
lret
pushf
xor
or
jl
adc
shl
inc
and
scas
mov
inc
cmp
test
fbstp
shlb
push
pop
push
xor
jmp
or
les
mov
rclb
sbb
pop
imul
push
ffree
clc
cmp
or
mov
add
pop
xor
jbe
add
mov
jmp
cmp
out
decb
shl
add
mov
add
nop
out
xchg
outsl
xor
jo
shl
clc
int
test
or
push
dec
adc
jmp
ljmp
jecxz,pt
addb
jno
jae
andl
ljmp
rorl
lret
rorb
outsl
or
add
ret
daa
fistps
mov
push
jge
sub
subps
ret
push
inc
popf
ljmp
adcl
outsb
push
shlb
lods
repnz
repnz
mov
mov
cmp
jmp
dec
add
das
inc
push
out
sub
bound
call
in
or
inc
adc
push
add
and
sub
sahf
dec
dec
imul
sbb
rorl
fs
add
sarb
inc
add
xor
frstors
push
call
jo
xchg
pop
cwtl
pusha
xchg
lret
pop
push
mov
adc
filds
add
push
adc
out
out
add
and
cmp
faddl
cmp
bound
out
lret
pop
inc
push
sbb
pop
adc
jae
sbb
ss
addr16
movsb
mov
mov
pop
or
bound
add
rolb
sti
jl
es
lahf
lods
movsb
int3
cmp
dec
xchg
jmp
mov
or
loopne
push
stc
int
daa
ret
xchg
mov
in
cmp
imul
pop
sbb
movsl
mov
inc
inc
insb
ret
jl
xor
ds
sahf
jle
xor
sub
in
ss
xor
or
or
int3
loop
pop
push
xor
mov
push
pop
fsubrl
jecxz
testl
sti
out
xor
adc
jnp
pop
push
mov
push
aas
sub
ret
lods
push
push
add
pop
xlat
adc
popa
and
add
mov
jbe
sbb
daa
int3
add
pop
jne
xor
pop
jae
pop
inc
push
jmp
xorl
sub
xchg
movsb
je
leave
inc
push
aas
lret
popa
gs
cs
pusha
daa
xor
push
adc
inc
or
es
loop
and
xchg
stos
mov
idivb
adc
or
lahf
and
xor
ljmp
das
jg
icebp
xchg
clc
movsb
mov
and
jp
rolb
scas
lods
arpl
push
push
cltd
scas
aad
cmp
call
mov
cmp
adc
scas
je
mov
cmp
push
adc
jmp
xchg
pusha
jno
push
inc
or
xor
dec
and
or
or
fwait
jbe
dec
jo
and
mov
fwait
outsb
shrb
sub
out
xor
adcb
pop
mov
pop
or
mov
sub
pop
xor
shlb
adc
ds
mov
jae
jge
pmulhw
mov
sahf
mov
idiv
call
push
dec
cli
pop
inc
pop
or
loopne
push
add
fcoms
or
jmp
push
sahf
insb
mov
add
sbb
and
jl
es
adc
adc
popa
xor
lea
adc
jmp
mov
dec
stos
add
sub
mov
cmp
lahf
add
or
jo
pop
or
pop
adc
inc
add
and
jmp
lods
fsubrs
clc
inc
inc
movlps
mov
ficoms
outsb
pop
mov
cmp
push
and
pop
addr16
negl
cmp
xchg
cmc
and
repz
sbb
movsl
jg
rcrl
mov
mov
sub
cmpsb
or
repnz
sbb
mov
mov
repz
pushf
sub
jge
push
fmull
hlt
inc
jne
xor
loopne
mov
ret
loop
add
dec
pop
mov
enter
loop
cmp
mov
xchg
das
in
cmp
jmp
stos
inc
int
loop
adc
in
les
jmp
enter
fdivr
push
out
es
mov
or
pop
data16
mov
jo
dec
and
sahf
add
push
adc
mov
pop
imul
frstpm(287
add
mov
outsb
inc
push
mov
sub
add
cmp
out
mov
sbb
xlat
hlt
adc
pop
sti
ss
ret
hlt
fldenv
ss
repnz
daa
dec
test
push
xlat
out
jle
xor
adc
jno
mov
push
dec
mov
enter
arpl
push
pop
push
mov
fs
fistpl
mov
add
mov
jg
and
xor
jb
add
insl
cmp
or
sub
shrl
pop
stos
es
movsb
push
lods
ficoms
outsl
dec
sahf
push
mov
stos
dec
rcrl
sbb
nop
mov
sub
cmp
inc
insb
pop
and
js
icebp
rcrl
scas
push
sub
pop
jbe
in
jne
and
xor
inc
stos
daa
xor
xlat
jns
pusha
ljmp
int
adc
out
cmpb
xor
stc
pop
pusha
int
jnp
lahf
or
mov
jbe
mov
test
popa
pusha
out
scas
jo
push
mov
int
jmp
adc
push
pusha
mov
shrb
dec
jl
out
das
jne
inc
les
lret
jmp
or
xor
add
sub
in
ljmp
outsb
ret
jae
fildll
insb
cmp
mov
movsl
mov
cmpsb
das
inc
scas
inc
xchg
rcl
sbb
dec
push
sub
mov
mov
cmc
or
fdivrl
push
cmp
int3
mov
test
or
pop
clc
cltd
movsl
fs
icebp
outsl
cmp
decl
mov
adcl
dec
mov
pop
push
dec
lcall
mov
in
jle
add
xchg
push
xor
xchg
sbb
lea
mov
shll
jae
pop
sub
pop
jmp
push
dec
scas
push
xchg
sti
stos
mov
call
mulb
sbb
push
pusha
repnz
inc
adcb
push
mov
jb
pop
mov
push
call
outsl
notl
fcoml
mov
repnz
dec
hlt
les
or
inc
lods
or
repz
fwait
sbbl
aas
push
sub
cmp
mov
sub
sub
ret
mov
inc
insb
xor
push
jmp
loop
xor
add
fildll
aad
in
scas
pop
push
mov
fiaddl
jg
popl
dec
jge
dec
std
icebp
mov
pushf
cmp
sub
mov
jne
lahf
ret
xlat
xchg
inc
dec
cwtl
test
cs
pop
lcall
and
mov
and
cmpsl
sub
cmpb
mov
mov
ss
fwait
push
std
aas
loopne
pop
xchg
dec
shr
scas
or
dec
and
test
pop
mov
lods
fwait
or
cli
sub
push
or
dec
pop
lahf
push
push
dec
mov
sub
mov
jbe
push
push
push
int
xchg
mov
sbb
push
add
xchg
inc
xor
inc
push
push
pop
dec
add
das
test
xchg
test
cmp
int
aas
in
ja
subl
adc
movl
push
jmp
fnstenv
jmp
dec
xor
add
in
rcll
jecxz
mov
xorb
popa
and
inc
sbb
lret
jle
popa
cmc
data16
in
std
jl
outsl
or
xchg
jbe
fs
mov
pop
add
fcoms
jmp
pop
pop
stc
movsb
or
and
and
and
or
popf
bound
jns
in
jo
xor
adc
mov
or
divl
jmp
pushf
adc
dec
xchg
xchg
cmp
push
xor
mov
aam
daa
sbb
rclb
imul
mov
and
mov
fsubrl
and
sub
add
icebp
push
add
test
or
mov
fidivl
inc
jmp
add
inc
cmp
pushf
add
sbb
stos
mov
dec
ret
je
mov
neg
push
shl
stc
andb
insb
jmp
loop
jb
sub
fnstsw
push
mov
push
pop
fwait
add
stc
clc
adc
push
mov
and
imul
jnp
lahf
jne
out
xor
pop
mov
mov
stos
movsl
mov
repz
jp
mov
add
sti
aas
and
jo
daa
movsb
rcrb
and
movnti
inc
pop
dec
arpl
add
inc
daa
and
sub
inc
push
daa
lock
mov
mov
shr
sbb
sbb
test
loopne
sar
pop
fnstenv
das
lods
dec
add
les
add
ret
or
or
dec
fsubs
push
rcrl
mov
daa
cmp
xchg
pop
dec
xor
mov
jle
scas
dec
jecxz
mov
mov
nop
in
subb
dec
mov
mov
mov
test
jmp
xor
loope
sbb
push
or
add
dec
lock
negl
adc
pop
jmp
je
fmuls
je
adc
jmp
mov
rcrb
jmp
add
lds
jmp
push
xor
jge
imul
inc
shll
xchg
insb
jl
jo
aas
out
dec
sahf
in
or
jg
jle
rolb
pop
and
repnz
sti
inc
pop
sub
add
adc
cmc
lret
imul
std
or
adc
mov
sub
sbb
push
mov
push
fisttps
icebp
andb
int3
or
pop
cmc
push
iret
add
mov
fnsave
xlat
xorl
cmc
jmp
clc
fiadds
not
xchg
inc
rorb
adcl
cwtl
pop
mov
insb
shlb
dec
outsb
mov
out
or
xor
pop
je
add
add
adc
add
jmp
outsl
test
dec
lret
and
scas
sub
jle
or
xchg
or
jnp
imul
dec
xchg
mov
pop
outsb
imul
dec
scas
in
test
pop
test
insb
push
ret
inc
icebp
push
inc
lcall
push
cmp
jmp
lods
pushf
test
jnp
fs
push
test
ja
cmc
imul
insl
fiadds
sub
adc
test
xchg
inc
add
mov
mov
or
sub
cmp
dec
push
inc
sbb
popf
call
negb
xchg
lcall
adc
gs
or
sub
mov
xchg
or
sbb
cmp
imul
cmp
push
add
cld
icebp
dec
add
sbb
es
jno
divl
fisubs
push
inc
inc
iret
jns
xor
jne
sbb
call
or
mov
jp
jbe
gs
subl
in
add
rolb
adc
inc
jle
push
xchg
push
add
jmp
inc
fstl
rorb
pop
mov
fs
or
test
add
pop
in
add
mov
jno
je
jge
sub
fcoms
mov
sub
les
pushf
ds
xchg
pushf
insb
sbb
sbb
bound
std
adc
or
push
sbb
sub
add
ret
in
loop
jge
enter
iret
pusha
xchg
sub
push
sbb
out
add
addl
cli
sub
lret
cmpsl
and
pop
pop
shlb
arpl
outsb
jae
dec
pop
mov
push
xor
jp
in
mov
fsub
push
fwait
mov
test
xchg
mov
mov
adc
cmc
scas
xor
ret
sub
mov
fisubs
jmp
data16
and
rclb
int
pusha
imul
xor
and
aad
mov
pop
cmp
cmc
xchg
mulb
ret
sub
push
das
and
aaa
mull
imul
mov
sahf
add
outsl
pop
or
pop
or
sbb
jo
cmpsb
ljmp
dec
push
lock
push
jl
sub
pop
add
xorb
das
cmp
daa
das
fmuls
shlb
cs
inc
in
add
cmp
cmp
leave
inc
cli
aad
call
loopne
mov
push
icebp
jmp
popf
inc
hlt
out
pushf
or
cmp
add
jmp
cli
push
sub
and
mov
rorl
pop
mov
scas
jle
push
and
scas
dec
cmp
sbbb
repnz
aam
push
push
jecxz
mov
jmp
fmuls
lods
ret
wbinvd
push
mov
mov
fucom
mov
cmpsl
arpl
ret
and
xchg
outsl
pop
cmp
add
aas
dec
push
scas
test
outsl
cld
or
ljmp
es
push
cmp
and
cmp
jmp
negb
mov
mov
push
jbe
sbb
push
icebp
pop
popf
aad
sub
jne
iret
out
dec
xor
pop
out
pop
jne
inc
popf
jg
push
stos
inc
mov
pop
sub
addb
mov
inc
loop
sarl
xchg
xchg
insl
cmpl
mov
xor
sub
pop
or
aas
pusha
push
ret
flds
sub
or
subl
sub
adc
xor
sub
push
inc
mov
add
daa
and
add
push
push
cmp
push
sbb
cmpl
inc
jne
jecxz
pop
in
adc
cld
jp
std
push
jo
push
adc
bndldx
sbb
jb
jns
lods
push
jge
adc
leave
add
push
lods
mov
mov
sub
mov
pop
push
push
push
das
pop
dec
fidivl
jb
mov
jp
in
sbb
pop
push
fmuls
xchg
add
inc
push
push
add
stc
fwait
push
aam
push
and
ficoms
repz
mov
xchg
inc
or
xlat
lret
mov
cmp
jecxz
jmp
cli
rcrl
dec
fs
cmc
inc
xor
add
cmp
loop
dec
mov
pop
cltd
dec
xor
movsb
cs
mov
add
sub
pop
push
and
mov
addl
dec
jecxz
add
out
add
xchg
fists
sbb
not
push
inc
xlat
fmuls
pop
adc
out
pop
jmp
inc
ret
lods
sbbb
stc
mov
jp
sqrtps
out
mov
cli
xor
jbe
addr16
mov
or
mov
inc
mov
addr16
ret
dec
nop
jg
cwtl
gs
pop
cmp
jo
flds
jmp
scas
daa
lea
jne
add
mov
inc
vcomisd
in
xor
dec
call
or
xor
push
enter
rcl
inc
push
jmp
dec
clc
movsb
dec
xchg
enter
popf
push
xchg
jmp
test
arpl
push
xchg
jl
rorb
out
pop
pop
ljmp
daa
inc
lock
cli
adc
jge
mov
in
push
mov
jmp
mov
shlb
xor
in
mov
jo
sbb
sub
fwait
mov
inc
mov
mov
shl
xchg
cmc
pop
xchg
xchg
ja
adc
mov
sbb
test
mov
pop
pusha
repnz
jge
jb
pop
out
or
jp
inc
xor
adc
stos
arpl
popa
or
pop
cmp
cmp
pop
addr16
pusha
adc
jle
or
cli
pop
jno
mov
inc
jmp
mov
xor
ss
jg
or
sahf
aas
dec
shl
out
icebp
push
fistpl
xlat
xor
mov
pop
ja
mov
push
fs
shr
fadds
cmp
xor
push
mov
shr
xor
jbe
mov
loopne
sub
jmp
mov
imul
add
sub
mov
adc
mov
push
jmp
xchg
dec
in
iret
sbb
icebp
and
lods
imul
xchg
aam
or
dec
cmp
push
mov
mov
imul
sahf
or
mov
push
das
push
inc
pop
mov
xchg
aaa
xchg
data16
inc
scas
clc
in
mov
nop
and
pop
jmp
fadds
fidivrs
sub
iret
icebp
call
push
mov
ja
sub
fistpl
cmc
sub
les
sub
stos
not
pop
cmp
test
ja
xchg
and
sbb
or
test
cwtl
xor
aaa
pop
lret
test
cmp
jo
lea
push
add
or
add
rcrl
add
nopl
and
cmp
in
cmpsb
add
das
sub
mov
adc
jmp
cmpsb
jne
dec
mov
jge
cmp
mov
out
adc
lret
in
mov
subl
test
hlt
add
shlb
fs
lds
mov
rorb
inc
cltd
pusha
dec
xchg
mov
ds
inc
push
ret
jno
nop
jnp
negb
sub
lcall
loop
test
rolb
ljmp
mov
pop
xor
fiaddl
mov
js
or
cmp
cmp
daa
push
aas
movsb
push
stos
jl
push
jecxz
aaa
inc
sub
or
xor
xchg
pop
dec
sti
int3
into
mov
pop
push
adc
cmp
test
jno
xor
push
jns
ss
add
adc
out
inc
add
sub
push
jb
add
sbb
insl
or
jge
push
sub
inc
aas
shl
xor
and
mov
and
mov
jbe
loop
notb
cmc
and
push
xor
add
xchg
mov
xlat
scas
sub
daa
add
lds
pop
shl
orb
sub
cmc
inc
pop
sti
push
add
push
push
mov
jle
jmp
mov
adc
xchg
jge
test
rolb
sti
mov
mov
add
mov
pop
xor
stc
neg
dec
loope
push
leave
xchg
mov
sbb
fsts
jnp
xchg
es
dec
and
sarl
cmp
rorl
adc
jecxz
sub
lret
dec
rorb
incl
daa
add
jl
or
aas
and
push
xchg
lds
dec
adc
pusha
xlat
dec
fstl
and
stos
aas
repnz
sub
xor
in
jmp
dec
ret
pop
imul
ret
jle
in
rcrb
mov
arpl
jmp
mov
jmp
pop
sbb
cmp
cwtl
sub
lahf
push
push
lahf
lock
pop
ret
fucomp
push
mov
das
mov
imul
mov
sub
dec
fnstcw
dec
push
dec
roll
jb
leave
push
xchg
or
and
mov
lods
sti
add
rcrl
in
std
aaa
inc
mov
jp
mov
mov
xchg
push
adc
cltd
pop
push
push
es
rcll
xchg
and
or
lahf
fcomps
xchg
jmp
leave
bound
mov
mov
add
rcll
lahf
xor
jns
mov
cltd
test
xor
jns
sti
jbe
xchg
sub
jmp
mov
add
or
call
addb
jno
add
sbb
push
jno
xchg
or
cmp
lock
scas
test
in
addr16
mov
cmp
adc
xor
jne
inc
clc
mov
dec
xor
inc
pop
or
scas
add
addr16
push
add
std
test
decl
jg
jge
shl
cld
or
fadds
sub
jmp
iret
lds
lcall
pop
inc
xchg
sbb
inc
add
daa
clc
clc
adc
loop
adc
add
clc
icebp
xchg
mov
inc
test
sub
in
ljmp
imul
out
sub
arpl
lahf
loope
inc
mov
imul
repnz
jl
cmp
in
ljmp
mov
pop
cmp
loopne
mov
jne
push
and
sub
pop
adc
jmp
icebp
xchg
mov
into
adc
repz
adc
test
negl
in
orb
xor
dec
subb
scas
popa
jg
cs
jl
fldcw
fsubrp
mov
int3
es
pop
das
cli
out
mov
xchg
fsubrl
pop
push
mov
rcr
inc
or
push
mov
sub
nop
mov
cmp
in
jne
xchg
pop
push
mov
ret
or
lods
je
or
dec
hlt
lock
lods
addl
add
add
and
sub
add
add
stos
in
fmull
push
push
jecxz
xchg
inc
cltd
std
xorb
mov
ljmp
mov
ret
add
inc
xchg
aam
inc
dec
cmpsl
jge
jp
adc
xchg
bound
je
push
cld
jnp
notb
jno
sub
add
dec
dec
std
flds
pop
mov
je
push
and
xchg
pushl
mov
xchg
int
push
cmpsl
jne
add
push
jp
loope
pop
push
out
std
repnz
push
push
loope
jnp
outsl
xor
mov
or
ds
and
daa
add
mov
mov
ja
xchg
inc
std
add
pop
sub
call
jecxz
insb
mov
inc
xchg
insb
adc
xorb
insb
daa
scas
imul
es
incb
mov
popa
pop
inc
mov
push
push
lds
lahf
xor
add
sti
orb
adc
sub
xchg
push
push
call
jbe
ljmp
cmp
ffree
stos
mov
fs
testl
cmpsl
sbb
ret
ja
insl
add
idivl
sub
inc
xlat
mov
adc
cmp
jne
scas
cmp
aas
sub
pop
pop
pop
adcb
andl
inc
sub
imul
pop
push
loope
dec
pop
xchg
dec
pop
push
sbb
mov
gs
ret
call
mov
xor
xor
xchg
jg
xor
cmp
fimuls
push
mov
loopne
push
and
orb
and
push
fimuls
not
pop
jl
push
popa
in
aad
mov
pmulhuw
dec
xlat
adc
clc
push
mov
add
jecxz
lret
dec
ret
sub
mov
pop
pusha
or
idivb
pop
jle
fimuls
sub
inc
nop
test
dec
icebp
sbb
sbb
adcb
imul
mov
jl
pusha
pop
stos
adc
js
inc
fcmovbe
icebp
push
pop
inc
sbb
aas
xchg
and
aaa
xchg
sub
adc
and
shl
sub
aad
xlat
ds
jne
jmp
lahf
sbb
mov
test
adc
or
aaa
mov
dec
fbld
mov
inc
idivb
sub
xchg
rcr
and
lcall
jle
cmpsl
sbb
cmpb
arpl
aas
lods
ficompl
mov
pop
or
sub
add
inc
xchg
jle
ljmp
mov
cmc
data16
push
std
push
pop
imul
sarl
mov
push
jo
pushf
test
stos
xor
repnz
testb
cld
and
mov
mov
stos
sub
adc
pop
dec
in
mov
rorl
adc
lock
loopne
mov
imul
and
pop
and
flds
aam
mov
push
das
xorl
pop
in
push
mov
and
testl
out
test
jmp
inc
cmp
sti
mov
stos
cmpsl
jbe
gs
mov
fldenv
pop
cmp
jne
dec
orl
sbb
outsb
mov
repz
outsl
in
pop
push
push
sti
and
rorl
dec
andl
dec
pop
jmp
dec
mov
mov
jmp
xchg
out
jo
and
jg
xor
adc
loopne
pusha
jmp
cmc
pop
rcrl
push
sarl
inc
test
or
jne
add
add
cmpb
push
mov
dec
pop
mov
jecxz
mov
sub
pop
pop
repz
mov
push
sahf
hlt
xchg
sbb
imul
jno
mov
add
or
out
enter
ret
lods
add
add
jmp
mov
out
push
out
sub
les
andb
or
dec
lcall
jbe
or
xchg
sub
push
pop
xchg
mov
lods
jo
add
push
mov
xchg
dec
stos
cwtl
dec
mov
jg
mov
or
mov
or
jb
addb
insb
in
pop
loope
push
lock
mov
loope
mov
dec
fisubs
pop
daa
int
adc
jecxz
sbb
xor
dec
mov
decl
ljmp
mov
mov
and
jne
gs
xor
mull
or
mov
push
add
aam
lds
mov
enter
mov
or
inc
dec
repnz
xlat
cmc
mov
xchg
jmp
xchg
pop
roll
or
in
cmp
inc
and
neg
repnz
adc
pop
sub
mov
orb
lds
sarb
xchg
imull
or
sti
aam
mov
rclb
cmpsl
pop
daa
imul
and
daa
or
ret
adc
cli
inc
sub
xchg
jle
icebp
sub
sbb
xchg
adc
mov
pop
bound
lret
sub
outsl
pop
insb
movsb
xor
dec
lock
dec
xchg
adc
loop
or
movsl
push
in
jmp
in
and
mov
lock
mov
jo
pop
adc
clc
xorb
mov
sbb
into
xchg
dec
xchg
jmp
mov
push
imull
pop
orb
jp
sub
aas
js
add
loope
cmp
mov
movsb
sbb
arpl
adc
frstor
fsubr
or
xor
sub
push
gs
scas
mov
add
push
test
jmp
xchg
mov
push
dec
mov
cmp
pop
xchg
repnz
jns
push
cmpsb
push
fistpll
mov
push
pop
addr16
mov
fdivrp
jnp
push
cltd
outsl
mov
subl
add
pop
insl
adc
stos
les
cmp
add
lds
mov
mov
sub
loopne
popf
jmp
rclb
push
pusha
and
lock
push
pop
mov
push
mov
in
leave
out
out
ds
add
sbb
fsubs
lcall
mov
js
mov
inc
xor
shr
and
and
push
das
mov
cs
cmp
dec
xorb
scas
jne
jb
lea
popa
daa
addb
popf
pop
mov
das
and
xorl
push
fdivp
addb
rclb
addr16
add
cld
out
and
ja
cmp
lods
pop
sbb
xchg
xor
fcmovnu
popf
sub
decl
ret
pop
icebp
lret
test
pop
mov
fstl
adc
repz
in
sbb
dec
cmp
add
fcoms
leave
add
pusha
jne
jne
add
imul
movsb
pushf
or
fwait
cmp
adc
dec
mov
dec
and
test
insl
push
lock
add
mov
fbld
arpl
dec
add
rolb
inc
adc
imul
jno
xor
or
or
das
sbb
mov
pushl
xchg
rol
in
or
mov
movsb
movsl
and
or
pop
jns
rolb
jmp
xlat
adc
int
inc
pusha
jno
shl
rcl
xchg
and
scas
pop
pop
out
sub
or
pop
jb
inc
adc
jmp
xor
adc
pop
rcrl
sbb
dec
push
pop
xor
or
jne
and
xor
mov
outsl
jb
add
xor
sarl
dec
rolb
fisubs
add
ss
or
cs
mov
add
add
stos
mov
test
add
jb
xor
lcall
jmp
inc
cmp
das
push
in
xchg
and
add
cli
leave
xlat
cmpsl
or
sbb
xchg
pop
ret
and
imul
inc
jle
mov
sbb
push
adc
jge
inc
mov
ja
jo
pop
or
push
hlt
adc
and
mov
dec
mov
dec
cmp
xor
mov
add
push
mov
arpl
pop
cmp
lret
add
je
jae
stos
inc
xor
ret
out
jmp
push
dec
sub
daa
dec
sbb
das
adc
gs
lods
cld
dec
clc
pop
xor
test
stc
aas
orb
bnd
test
sqrtps
adc
dec
add
out
iret
inc
adc
mov
xor
push
ds
insb
add
dec
inc
lcall
push
lcall
vmovsldup
and
mov
or
cld
xchg
cmp
das
add
pop
add
int3
xor
cli
cmpsb
gs
insl
or
jmp
jge
cmp
pop
mov
sbb
mul
js
add
pop
stos
test
xchg
ljmp
stos
sub
leave
push
cmc
sub
sbb
push
or
mov
push
pop
pop
xorb
pop
jge
out
mov
mov
sub
mov
icebp
add
jno
cwtl
push
bound
dec
pop
lahf
cs
arpl
and
ret
jno
jecxz
out
fucomi
adc
stc
sbb
xchg
fmul
push
xor
sub
dec
inc
cmp
mov
dec
and
lahf
jle
shrb
mov
mov
adc
jmp
adc
cmp
push
xchg
and
vmread
push
inc
mov
mov
ficoms
push
dec
lods
cwtl
test
fcoml
or
sbb
stc
repnz
jge
ror
push
and
jbe
dec
dec
push
add
out
xlat
push
xlat
insb
inc
and
add
push
push
popa
insb
loop
mov
dec
jns
adc
push
xor
cwtl
aad
cmpsl
add
jne
mov
dec
imul
pop
add
jg
notb
fidivs
mov
int
in
in
out
add
push
push
ret
push
out
mov
testb
dec
outsb
fiaddl
or
jo
xor
xlat
rol
or
xchg
jg
in
pop
mov
lahf
enter
sbb
push
negl
xor
mov
or
xor
int3
data16
cmp
sbb
aam
cli
mov
cwtl
mov
pop
pop
or
adc
nop
scas
mov
dec
sub
shrl
dec
scas
adc
daa
fildl
sub
sub
mov
lods
adc
lods
pop
in
sti
xchg
mov
push
mov
shr
not
in
sbb
mov
int
outsb
dec
aad
pop
aad
push
inc
push
popf
mov
jecxz
cmpsb
mov
xchg
fucomp
pusha
xor
mov
not
call
dec
or
or
test
test
scas
inc
inc
ljmp
push
int3
or
inc
icebp
rolb
hlt
jg
cmp
bound
rolb
xchg
shlb
mov
jae
and
mov
mov
repnz
mov
cmp
sbb
or
push
mulb
mov
mov
fbstp
lds
lcall
add
mov
xor
or
fidivrl
mul
dec
inc
xlat
jnp
dec
pop
popf
inc
fdivrl
movsb
flds
push
data16
sub
sbb
scas
mov
stos
ret
push
dec
xchg
aad
stos
mov
int
xor
jmp
xchg
push
pop
pop
jle
dec
add
mov
xor
xor
xor
or
jmp
inc
imulb
pusha
mov
lods
push
pop
adc
xor
or
xor
mov
popf
dec
imul
push
adc
hlt
push
pop
rclb
jecxz
inc
xor
adc
pop
loopne
add
xor
int
scas
and
imul
and
mov
leave
push
or
addb
stc
lcall
sbb
popl
loope
xor
xchg
js
jmp
lods
push
aaa
pop
push
stc
daa
mov
or
and
dec
sub
sbbl
out
in
add
pop
mov
lds
shrb
inc
or
mov
call
insb
mov
scas
mov
cmp
imul
mov
xor
dec
add
push
adc
pop
xor
ficoml
pop
xor
mov
call
lods
xchg
nop
or
fsubrs
add
insl
sti
sbb
jmp
popf
clc
cld
add
ja
add
pop
xlat
and
hlt
call
scas
push
adc
pop
adc
mov
dec
mov
jmp
out
or
xchg
xor
repz
inc
mov
and
adcb
aam
inc
pop
lret
pop
arpl
sti
rclb
xchg
movsl
adc
lods
mov
lahf
pop
cs
xor
dec
mov
add
out
jmp
pop
and
inc
mov
pop
adc
mov
in
sbb
sbb
lret
nop
adc
imulb
and
pusha
popf
rorb
es
push
dec
sub
jle
mov
pop
inc
stc
mov
add
in
inc
pop
addr16
mov
dec
mov
cmpsl
fstpt
inc
or
arpl
xlat
test
or
push
jae
and
adc
bound
add
ljmp
add
sbb
out
cld
test
inc
dec
pop
add
mov
sub
dec
add
push
jbe
sub
adc
mov
push
push
pop
mov
or
xor
inc
sub
and
adc
cmpsl
pushw
sub
adcb
mov
xor
andb
sub
push
mov
sub
mov
mov
pop
popf
testb
adc
and
in
nop
adc
adc
add
notb
mov
sbb
inc
add
mov
scas
pop
xor
iret
pop
shl
fadd
adc
jmp
xor
pop
adc
sahf
push
xchg
push
ljmp
inc
pop
inc
pop
xor
mov
mov
aaa
loope
icebp
arpl
notb
fmuls
adc
arpl
insb
dec
and
xchg
mov
fdivs
mov
pushf
repnz
out
xchg
jg
shlb
xor
mov
jge
pusha
add
cmpsl
pop
pop
mov
fs
in
fdiv
iret
imul
push
pop
pop
or
in
and
add
pusha
mov
jge
pop
stos
mov
xchg
mov
loopne
testl
fs
mov
cmp
pushf
and
loopne
add
out
add
push
arpl
movsb
mov
adc
pop
dec
mov
jnp
jns
das
or
sbb
loope
scas
movsl
cli
aas
adc
call
mov
mov
add
push
push
nop
out
pop
clc
sub
cmovb
jne
xchg
or
cmpsl
pop
out
sbb
jmp
js
mov
cmp
dec
test
sub
jae
das
jmp
loope
outsb
or
call
daa
lock
mov
in
cmp
std
mov
out
cmp
inc
out
or
je
fsubrl
dec
stos
cmp
lea
push
addl
mov
imul
lret
lods
pushf
and
sub
int
add
pop
jnp
xchg
mov
fsubrs
jecxz
pop
out
test
xlat
arpl
pop
fnsave
roll
mov
push
neg
loope
imul
gs
or
push
bnd
push
mov
sub
rorl
flds
repnz
jg
or
add
stc
loopne
mov
cld
mov
mov
clc
shl
sub
hlt
sub
lahf
in
mov
call
inc
jmp
ljmp
mov
cmc
pop
inc
xchg
sub
fidivrl
das
mov
inc
dec
jo
cmp
xchg
jecxz
adc
xchg
pop
movsl
push
mov
push
lahf
fadd
imul
adc
je
das
dec
clc
clc
lods
push
xchg
fstpl
or
add
lds
repz
rclb
jb
xchg
outsb
sub
sub
push
iret
xchg
mov
xchg
pop
fnstenv
adc
in
and
sbb
xor
mov
pop
dec
mov
loopne
sti
icebp
ja
add
xchg
and
jno
xlat
nop
loope
test
repnz
sub
inc
mov
push
pop
jg
pop
xchg
out
das
jae
cmp
and
jb
push
jge
pop
ds
push
mov
addl
imul
and
cmp
sub
pop
dec
jge
aaa
loopne
jns
adc
cvtps2pi
xchg
pop
stos
in
sbb
mov
pop
mov
push
or
cli
mov
jmp
and
int3
out
push
mov
push
js
loopne
shrb
pop
add
push
hlt
lock
or
cmp
sub
scas
test
jecxz
sub
dec
frstor
out
inc
mov
push
pop
comiss
mov
push
mov
test
call
fimuls
test
inc
sbb
xor
gs
cli
lahf
popa
pop
adc
insb
jl
push
ljmp
sbb
arpl
jl
sbb
jecxz
inc
pop
pusha
xor
cmp
in
jo,pt
xchg
xor
pandn
jae
ret
lcall
jle
daa
pop
mov
lods
shll
mov
jl
adc
jecxz
dec
cmp
comiss
pop
xchg
mov
cmp
daa
daa
push
clc
sub
dec
repnz
pushf
pop
scas
dec
cmp
mov
mov
jp
add
sub
imul
out
push
dec
aad
addb
or
daa
mov
pop
push
sbb
add
sbb
or
adc
sub
pop
pop
pop
femms
xchg
and
pop
mov
test
dec
out
pop
add
rolb
or
shl
pop
shlb
hlt
popf
add
ljmp
test
mov
mov
loop
jmp
adc
ret
pop
jmp
in
and
rol
push
push
shl
jecxz
adcb
pop
loop
je
push
pop
ja
lea
not
or
dec
mov
and
mov
dec
test
pop
sub
dec
clc
shrb
stos
mov
pushl
flds
imul
dec
test
fiaddl
mov
int
pushf
shr
sub
push
dec
inc
scas
sbb
mov
xchg
dec
sbb
inc
inc
adc
and
subb
nop
ret
dec
pop
inc
pop
ret
or
clc
pop
dec
mov
jo
dec
inc
add
or
adc
inc
mov
or
sbb
repz
inc
jmp
mov
jnp
sub
jo
cmpsl
jne
push
daa
xor
call
sahf
sahf
lods
int3
or
add
mov
push
ljmp
cmc
out
inc
mov
es
cmp
or
fstpl
mulb
pop
xor
sub
push
inc
mov
and
mov
dec
jmp
dec
aas
xor
pop
cld
push
or
pop
enter
in
push
jno
je
and
sbb
mov
iret
inc
repz
or
and
cmc
pop
sub
pop
mulb
enter
add
cli
dec
imul
sub
arpl
or
test
push
stc
pop
adcl
out
xchg
add
popf
jl
test
cmp
in
fucom
mov
lock
outsb
and
sub
add
adc
aas
paddsw
adc
mov
imul
and
lods
cmp
sbbl
popf
push
shlb
sub
test
push
test
je
pop
xor
and
pop
nop
repnz
adc
pop
leave
sub
xor
xchg
jnp
pop
mov
movsl
push
mov
stos
int3
insl
mov
sub
das
adc
dec
test
scas
pop
push
xor
out
rol
cmp
scas
das
fdiv
add
addr16
dec
or
push
int
imul
je
add
jbe
adc
jmp
cmpsb
dec
popf
push
mov
insb
xchg
adc
subl
mov
in
add
or
leave
or
push
pop
pop
sub
shr
or
xchg
dec
dec
and
mov
add
sbb
xchg
insl
std
andl
pop
push
push
pop
lock
mov
push
or
mov
sub
sub
data16
jge
mov
mov
in
push
out
add
arpl
test
shl
xor
dec
ret
movsl
daa
pop
je
iret
inc
fidivs
xor
push
inc
add
mov
mov
push
mov
mov
inc
jns
cmpb
test
push
sti
xor
andb
ror
jo
cmpsl
ret
orl
inc
adc
push
sbb
jg
pop
andl
les
mov
pushf
sbb
cli
mov
test
and
push
pop
pop
xor
push
mov
push
add
popf
fmuls
jae
enter
popa
cmp
or
out
std
jmp
out
cmp
push
adc
ret
xor
popa
sub
mov
cltd
mov
pop
mov
mov
cmp
adc
fidivrl
dec
lds
and
cmp
cmp
xor
mov
flds
mov
adc
lods
mov
pop
xchg
das
jne
and
add
out
mov
sub
ja
mov
pushf
jb
mov
mov
inc
daa
xlat
inc
mov
xlat
sbb
int3
add
cmp
or
sub
mov
ljmp
lock
add
mov
gs
rsqrtps
mov
stos
mov
inc
mov
pushf
fs
jecxz
test
ljmp
pop
pop
in
icebp
adc
push
loopne
fisttps
test
sbb
mov
jnp
ret
mov
fisubs
cltd
adc
sub
addb
xlat
push
gs
or
fisubs
cmp
push
out
sub
movsb
mov
sub
xor
add
not
inc
cmp
jnp
dec
add
pushw
ja
pop
testl
cli
andb
mov
js
jb
lcall
cwtl
pop
fs
and
pop
jmp
lods
adc
pop
jmp
sub
insb
add
lods
pop
pop
sarl
popa
das
mov
into
jmp
jnp
imull
flds
adc
pop
dec
pop
sub
push
cmp
call
cmp
adc
inc
jmp
mov
mov
mov
sub
scas
repz
jmp
push
sbb
xor
imul
js
sub
add
sbb
bound
sbb
daa
jbe
or
cltd
mov
cli
pop
les
outsl
les
or
sbb
call
mov
rcl
mov
mov
ret
dec
dec
ja
dec
cwtl
mov
mov
ret
sub
pushf
xchg
out
int3
sub
inc
or
fnsave
aaa
push
mov
shll
and
leave
and
ss
push
jp
scas
ficoms
xchg
sub
fwait
cmpsb
xchg
or
inc
sub
aad
inc
pop
adcl
les
loope
add
pusha
out
dec
sub
dec
jno
test
sti
movsl
ret
rorl
and
cld
shl
vxorps
ds
scas
and
pop
jns
inc
push
mov
inc
add
mov
add
mov
push
or
int
mov
dec
data16
dec
divl
or
dec
push
mov
xlat
les
push
pop
aad
cmp
jge
sbb
mov
sahf
jno
mov
sub
mov
pop
add
js
mov
test
adc
testb
xchg
rclb
cmp
bound
mov
pop
stc
movsb
std
pop
pop
popf
push
cmc
sub
or
inc
and
test
rcl
inc
adc
jl
std
call
jb
sub
sbb
rclb
das
adc
xchg
rorb
dec
jno
pop
add
lea
les
mov
pop
frstor
and
xchg
ret
cmc
xchg
lea
push
xor
push
aad
pusha
push
mov
popf
push
sbb
addl
dec
imul
aaa
das
nop
test
push
inc
lcall
jns
je
add
xchg
ret
and
cmpb
jae
outsb
sub
into
mov
dec
sbb
adc
mov
inc
shl
movsl
idiv
je
xor
je
rcl
in
xchg
outsl
shlb
gs
icebp
xchg
dec
or
ficomps
sub
shl
popa
gs
aas
xor
stos
jo
xchg
aam
repnz
data16
fidivs
mov
sub
xchg
pop
fisttps
jmp
mov
and
cmp
dec
insl
xchg
subb
loopne
divl
mov
pushf
jp
jmp
xchg
popf
jp
cmp
and
ljmp
daa
aaa
dec
pop
sub
and
cmc
stos
and
repnz
inc
and
cmpxchg
inc
push
aad
jnp
fs
ret
in
outsl
push
out
lret
gs
xchg
add
sub
jne
sbb
or
adc
stos
add
mov
and
or
jmp
pusha
mov
push
mov
ja
mov
rol
xor
rorb
shlb
imul
jmp
jnp
adcl
xor
pop
dec
shl
cmp
mov
aad
out
lods
lods
pusha
mov
rorl
jmp
pusha
dec
popw
mov
or
and
jbe
dec
cmpsb
adc
dec
mov
mov
jae
add
lcall
xchg
in
mov
popa
mov
push
or
jge
leave
add
mov
add
cltd
fsubrl
mov
cld
out
sbb
jbe,pt
in
mov
repnz
or
pop
jmp
in
inc
leave
jne
sub
ljmp
mov
test
mov
sub
fcompl
rorb
push
dec
dec
add
sub
call
icebp
sub
push
adc
mov
outsl
and
sbb
ret
push
push
pop
imul
fisttpll
arpl
cli
jmp
sahf
sti
push
or
aad
fisubrl
jnp
negl
sarl
xor
stos
mov
and
add
daa
fcmovbe
ljmp
mov
push
icebp
cs
test
inc
xchg
outsb
lret
sub
mov
js
or
push
push
int
rcr
icebp
lret
push
and
sbb
insb
imul
inc
xor
in
loop
push
jp
pop
pop
stos
push
mov
sub
paddd
push
add
movsl
mov
cmc
pop
and
inc
jo
jle
rolb
cs
pop
or
jmp
mov
dec
cli
mov
les
in
or
cld
xchg
cmpsl
xchg
add
leave
push
int
push
mov
dec
push
adc
fistpll
enter
cmp
aaa
adc
fs
or
sub
out
cld
pop
and
push
loope
mov
add
jbe
divl
aad
and
sub
jne
mov
sbb
test
decb
push
dec
data16
sbb
push
sbb
cmp
sbb
pop
rclb
mov
xchg
jmp
fsub
ljmp
out
push
jno
call
mov
push
dec
icebp
or
push
inc
mov
xchg
xchg
cli
mov
push
jge
fwait
and
push
sbb
loope
imulb
cmp
cmp
cltd
cmp
mov
xchg
push
mov
sbb
je
push
cmp
notl
sub
lret
mov
push
mov
ja
js
pop
sub
call
mov
push
adc
inc
ljmp
lret
pop
pop
lds
mov
add
push
fyl2xp1
cmp
push
sbb
mov
mov
push
xor
and
xor
add
addb
mov
jle
mov
bound
mov
inc
pop
xor
cli
cmp
cld
inc
ret
stos
push
mov
mov
push
sbb
jmp
add
mov
cs
dec
test
aas
jno
jle
add
enter
adc
test
pop
sbb
jb
leave
je
pop
pop
jp
inc
dec
and
push
rcrl
push
mov
pusha
push
dec
fadds
ja
add
jmp
pop
xchg
ss
sub
pop
mov
push
aam
in
sub
or
jmp
scas
insl
or
popa
out
sub
jg
push
mov
ret
mov
test
adc
add
sbb
push
jmp
sahf
movsb
xor
xchg
mov
or
sbb
ret
sbb
dec
cmp
movsb
lretw
arpl
cmp
jge
in
jl
call
and
stos
mov
jge
stos
lods
mov
imul
ja
in
push
mov
int
pop
push
add
mov
fs
mov
inc
sti
pop
xchg
cld
sub
and
cmpsb
inc
mov
or
push
and
cs
xchg
dec
lds
ficompl
add
push
into
xor
dec
push
or
or
lret
lret
pop
pop
add
jg
cmpsb
add
das
push
pop
push
and
cmp
add
fstpl
adc
subl
add
xchg
push
cltd
push
movsl
push
in
mov
mov
imul
pusha
dec
adc
sbb
in
add
mov
lret
in
ja
jecxz
adc
jmp
mov
add
mov
push
int3
push
pop
pop
push
loop
jmp
je
inc
pop
andb
inc
and
int3
add
xor
ds
shl
or
sub
xchg
negl
lock
push
add
mov
jmp
mov
pop
sub
jnp
adcl
jns
popf
orb
aad
push
and
push
mov
and
addl
sbb
mov
repnz
bound
ret
ljmp
lahf
pop
sti
jns
sub
jb
pop
push
push
push
out
not
or
imul
popa
add
xchg
add
fnsave
hlt
fsubrl
jmp
loop
in
test
test
inc
mov
dec
xchg
xlat
push
insl
rcr
mov
int3
sub
insl
jo
notb
sarl
jo
sahf
ret
aaa
dec
or
aas
push
adc
and
iret
push
sub
mul
neg
jmp
mov
cmp
pop
push
clc
repnz
xchg
cmpl
shl
cltd
dec
or
inc
fnsave
xor
cmpsl
icebp
ja
add
lahf
mov
ljmp
pusha
in
and
pop
mov
xchg
clc
jmp
jle
mov
ds
in
imul
pop
dec
push
in
push
adc
pop
js
push
or
xor
jbe
test
out
jb
pop
popa
scas
ss
push
pusha
pop
push
daa
jmp
xor
fmuls
inc
and
mov
stos
in
mov
ljmp
aas
dec
out
iret
or
inc
push
ds
repnz
jecxz
dec
mov
push
pushf
push
std
rclb
out
jl
bound
xchg
cmp
lods
cli
out
push
push
pop
movnti
pop
cmp
rcrl
adc
in
pop
cmc
cwtl
aaa
pop
popf
jl
push
adc
jae
clc
cmp
push
mov
mov
xchg
jbe
jo
fimuls
jp
out
jne
jno
pop
dec
push
push
mov
sahf
loop
rorb
xchg
jae
bound
idiv
dec
cmp
cmp
and
and
test
pop
test
mov
xchg
xchg
mov
jnp
mov
outsb
ljmp
inc
or
inc
or
nop
jecxz
fsubr
ja
shrb
enter
hlt
or
dec
sbb
inc
andl
jge
jge
test
mov
adc
or
mov
add
adc
lahf
neg
leave
test
das
adc
add
dec
icebp
imul
sub
divl
test
jmp
mov
xchg
pop
sbb
fistpll
sbb
out
jl
dec
ljmp
add
xchg
sbb
xor
mov
jnp
xor
adc
push
loope
hlt
sbb
add
lock
xchg
and
xchg
cld
cmpsl
rolb
push
dec
and
add
mov
addr16
adc
fcomp
or
ficoms
rorb
cltd
popa
cmp
test
pop
push
push
mov
mov
jle
cmp
push
or
push
add
mov
iret
imul
pop
cmp
jmp
add
lret
inc
fdiv
xor
sub
cmp
add
mov
xor
xor
cs
insb
add
aas
sub
in
push
adc
pop
push
mov
or
neg
sahf
mov
pop
stos
mov
inc
shrb
stc
movsl
cli
xchg
pop
jo
xchg
add
jl
sub
xchg
push
jp
and
cld
dec
or
popa
mov
pop
sti
inc
xor
push
mov
sub
sub
pop
pop
call
mov
mov
xor
adc
xchg
inc
pop
outsl
movsl
xchg
outsl
mov
pop
inc
add
shr
inc
cli
popf
xor
or
sub
shrb
imul
int
test
jmp
cmpsl
jne
xor
stos
data16
clc
fwait
pop
dec
sub
mov
xor
addr16
push
cmpl
add
fisttps
mov
xor
gs
std
insb
pop
jmp
mov
out
inc
lds
imul
mov
jmp
test
dec
sahf
mov
sbb
lods
int3
fs
sbb
aam
mov
repz
loope
test
pop
push
into
and
and
enter
or
rcll
in
or
sbb
adc
aad
and
mov
shl
push
mov
pusha
mov
and
xor
mov
jnp
inc
shl
cmp
jmp
add
push
sub
pop
andl
mov
push
enter
andl
cs
push
pop
jp
mov
cs
push
pop
mov
into
push
shl
in
and
bound
cmc
dec
lods
add
jmp
push
mulb
sub
pop
cmp
lret
addl
jmp
jns
imul
push
adc
fdivrl
testl
ret
enter
cli
cltd
inc
or
and
bound
or
clc
adc
inc
pop
xor
pop
inc
xor
out
mov
push
cli
cmp
or
lcall
scas
push
lea
pusha
lcall
jg
arpl
aaa
mov
xlat
push
repnz
jmp
shrb
pusha
push
pop
cmp
push
fidivl
jle
cmpsl
sub
pop
sub
jo
rolb
loope
mov
dec
test
dec
sub
or
not
or
sbb
or
hlt
dec
lock
mov
xor
icebp
fs
add
lret
loopne
push
sub
and
sub
shrb
hlt
push
cli
jo
add
pop
out
jmp
ret
jmp
clc
pop
xchg
in
mov
sbb
cmp
mov
loop
push
cmp
sti
call
pusha
aaa
or
push
and
pop
jl
repnz
adc
add
xor
shr
inc
ja
adc
roll
dec
mov
jb
out
adc
xchg
jmp
fwait
jle
pop
jne
icebp
push
mov
xor
les
add
sub
or
xor
stc
das
pop
insl
decb
pop
add
xlat
or
repnz
or
add
pusha
icebp
dec
xchg
push
mov
fs
pop
mov
mov
dec
or
stc
dec
nop
popf
jmp
push
xor
rclb
adc
mov
mov
mov
push
push
add
xor
ljmp
xor
movb
jl
dec
out
dec
or
loope
jle
or
clc
aad
inc
fisttps
sbb
sbb
inc
and
push
xchg
xor
sub
mov
pushf
push
push
inc
jmp
mov
icebp
mov
scas
fdivrs
sbb
fidivl
bound
aam
and
push
gs
and
add
pusha
lock
and
clc
cmp
add
outsl
cmp
xor
or
mov
mov
mov
mov
and
rolb
fdivr
lods
pop
pop
mov
fimull
push
or
jmp
mov
inc
adc
popa
movsb
sbb
add
add
dec
cmpsl
adc
mov
popa
add
jle
or
repnz
popf
or
sub
and
pop
mov
aam
lods
adc
push
iret
pop
xor
es
cmp
insb
jne
lret
sbb
test
and
loopne
repz
out
jp
leave
push
jno
adc
sti
shlb
int3
inc
mov
daa
xlat
pop
push
inc
cli
fadds
sub
jmp
mov
mov
test
lret
out
push
fisubrl
jmp
mov
xchg
or
ds
xor
dec
das
mov
adc
and
push
cs
cld
test
sbb
sub
lahf
jmp
and
fidivrl
adc
lret
adc
and
jns
mov
aas
push
pop
decb
ret
xor
mov
push
mov
stos
ror
mov
inc
add
cmc
icebp
push
pop
pop
fsubr
out
std
jmp
in
adcb
pop
mov
notb
or
rorl
lods
jne
xor
testl
lds
add
outsb
inc
add
pop
mov
lds
push
aas
and
push
in
imul
stos
call
leave
pop
decb
and
mov
pushf
pop
pop
mov
lea
and
and
or
ss
cmp
inc
test
push
test
xor
xchg
addb
adc
jnp
mov
lahf
push
mov
ds
lock
ds
xchg
adc
out
ret
sub
ret
inc
fidivrl
add
fs
jg
mov
imul
out
popa
adcl
sub
outsb
lods
mov
bound
xchg
pop
push
xchg
stos
adc
or
je
mov
xchg
sti
cmp
adc
jno
dec
loope
add
test
cmp
inc
or
dec
scas
in
into
pop
dec
cmp
inc
sarb
inc
inc
jl
add
pop
out
nop
shl
jno
fldcw
or
add
pop
add
gs
mov
or
cmp
rcrb
nop
nop
lahf
pop
dec
or
jno
jmp
add
adc
add
or
push
movsl
or
stos
jecxz
and
mov
pop
push
movsb
jns
adc
mov
leave
cs
cmpsb
or
sti
pop
jnp
mov
mov
push
int3
push
movsl
pop
insb
mov
jle
pop
test
fwait
jge
data16
out
sbb
xchg
add
cs
xchg
add
int
jecxz
or
add
and
hlt
cmp
mov
jg
jle
cmovne
or
or
aaa
ja
std
gs
sbb
or
cld
pop
cmp
sub
add
and
call
add
jnp
icebp
and
orb
push
andb
pop
shrl
sbb
adc
cs
mov
jecxz
mov
sub
fidivrs
lea
inc
mov
push
push
cli
jno
test
inc
sbbl
push
js
bound
sbb
add
ja
sub
push
cmc
add
inc
jg
repnz
imul
push
mov
push
sub
mov
pop
sbb
pushw
push
mov
xlat
dec
adc
pop
sti
and
ret
aad
xchg
lods
notb
xchg
popf
xchg
sub
fcmovbe
js
sub
jg
add
mov
dec
pop
pop
hlt
mov
fists
lahf
addr16
push
add
call
adc
and
push
cmp
aad
xor
jns
out
add
loopne
and
jecxz,pt
in
adcl
mov
jle
or
lds
pop
inc
mov
inc
ljmp
cmp
push
repz
cmp
mov
sti
adc
pop
out
mov
repz
xchg
loop
leave
mov
sbbl
push
xchg
fstl
jg
jb
mov
dec
lahf
jnp
out
or
mov
push
push
pop
xchg
pop
jae
cmpsb
jecxz
aas
fwait
test
mov
fs
enter
adcl
ret
add
sub
lret
pop
pop
add
xor
in
pop
leave
sti
dec
sbb
clc
push
dec
pop
sti
xor
sub
aam
add
adc
repz
or
in
cmp
psubsw
dec
jo
add
andl
mov
dec
mov
xor
fldl2t
adc
hlt
fdivrl
test
dec
cltd
xor
pop
roll
test
sbb
adcb
int3
pop
xor
hlt
cmp
test
movsl
xchg
and
xchg
hlt
mov
push
mov
jne
ss
push
fidivl
jne
pop
bound
jge
lcall
inc
stc
dec
dec
ret
imul
lcall
and
movd
hlt
mov
push
jno
loope
mov
cs
cld
and
jo
mov
jne
imul
repnz
sub
scas
hlt
xor
or
cltd
xchg
push
shrb
add
fs
jmp
mov
sub
mov
pop
dec
scas
lea
fcomps
fmuls
pop
lret
iret
dec
adc
loop
les
pop
stos
cwtl
cli
sbb
jno
push
adc
mov
bound
shlb
imul
xor
mov
out
dec
sahf
out
sub
jge
enter
in
xchg
or
jne
ret
ret
cmc
cld
dec
xchg
movl
or
in
sarb
cmp
notl
js
xchg
and
mov
in
push
sbbb
scas
jo
and
inc
add
push
lock
mov
xchg
pushf
or
out
inc
pop
flds
stos
cltd
mov
push
inc
mov
mov
pop
dec
sti
adc
push
mulb
add
add
popaw
fwait
push
test
add
adc
cmp
sbb
or
loop
pop
scas
movsl
rclb
es
jno
mov
or
cmp
inc
add
mov
jnp
insb
add
push
aas
neg
adc
jmp
jge
jb
or
xor
dec
iret
inc
pop
cli
incl
movsl
out
add
mov
mov
inc
push
or
push
pop
sbb
outsb
adc
inc
shl
loopne
push
cwtl
pushf
mov
pop
or
addb
adc
sub
pop
test
ret
out
dec
enter
and
push
orb
adc
addr16
xlat
ret
sbb
faddl
ret
cmp
mov
test
push
test
je
ss
sub
bound
push
shll
movsl
inc
push
mov
sub
push
add
cmp
adc
lcall
lret
rcrl
add
jns
and
and
dec
sub
sbb
sbb
mov
push
or
adc
jmp
pop
dec
inc
or
push
xor
jmp
bound
sti
in
lods
jne
inc
lahf
ret
sub
mov
pop
or
mov
or
mov
sub
xchg
cmc
add
das
pop
inc
into
sbb
push
or
xor
push
mov
jne
sbb
sbb
mov
sub
ret
fadd
sub
or
push
in
mov
inc
jne
out
nop
sub
pop
mov
mov
mov
jo
sub
push
fs
jmp
xchg
imulb
adc
sub
cmpsb
arpl
pop
adc
mov
pop
lock
sub
out
sbb
js
sub
jb
pop
flds
xor
xlat
inc
cmp
loope
sub
or
pop
sub
or
in
jnp
and
xor
push
mov
xchg
xor
jne
mov
sub
fildll
cld
jge
cmp
jbe
cmpsl
adc
pop
jmp
data16
nop
notb
inc
sub
es
cmp
popa
loop
push
enter
sbb
inc
sub
mov
jmp
aas
adc
add
mov
sahf
lods
mov
lret
cmc
das
mov
aas
movsl
addr16
jmp
xor
mov
les
push
xchg
dec
ljmp
push
lret
les
les
stos
decl
out
inc
push
cmpsb
push
in
loop
pop
pop
icebp
fidivrs
in
mov
adc
mov
and
testb
xor
push
mov
mov
jecxz
dec
add
rorb
daa
mov
inc
dec
nop
ret
jbe
stc
inc
mov
sbb
orb
outsl
dec
out
mov
dec
sar
jmp
lcall
sbb
pop
mov
adc
fnstenv
add
sar
push
jmp
add
mov
cmp
addb
or
cmp
jmp
imul
cli
jbe
push
dec
out
or
imul
pop
cli
mov
das
out
shl
arpl
push
dec
add
lahf
inc
sbb
ret
push
adc
popa
lret
pop
sub
aas
push
mov
lods
or
mov
lods
inc
add
icebp
adc
inc
insl
pop
fwait
add
mov
jns
mov
imul
mov
scas
or
fmuls
dec
arpl
imul
pop
sub
add
lret
lock
lret
jecxz
nop
cmc
clc
addl
or
hlt
sahf
sbb
stos
cld
rcrl
adc
jmp
in
shr
hlt
pop
fucomip
push
lahf
jns
or
test
sbb
and
pop
jo
fstpl
cmp
iret
mov
mov
cwtl
in
jmp
mov
add
inc
pop
cmpsb
scas
xor
xor
add
sahf
inc
or
xchg
out
fs
adc
dec
je
in
das
dec
xor
cmp
and
test
test
out
mov
pop
popf
test
push
push
mov
sbbb
mov
lock
pop
or
add
sub
loopne
mov
jnp
pusha
pop
xor
push
dec
pusha
out
add
dec
sub
shl
das
and
add
int3
jp
push
mov
in
mov
add
and
stc
mov
jne
mov
add
mov
add
stos
ja
push
inc
in
inc
mov
ljmp
idivl
xchg
int
adc
jecxz
adc
and
cmp
pop
dec
sub
bound
xor
dec
pop
in
mov
add
cmpsl
jne
jo
out
jp
arpl
test
mov
in
lock
lcall
test
test
xor
mov
loope
pop
dec
xor
aas
push
xor
jle
insb
push
out
cmp
pop
pop
and
icebp
prefetchw
das
decb
dec
and
or
insb
scas
bound
adc
cmpsl
lds
jnp
rclb
jne
movmskps
mov
xchg
mov
sbb
shrl
mov
jb
mov
xor
adc
scas
mov
test
pop
sub
sub
out
xor
or
and
add
neg
dec
xchg
hlt
cwtl
loopne
push
mov
xchg
push
sbb
adc
mov
mov
jmp
push
lds
insb
add
outsl
cmp
or
int
xor
or
inc
ds
add
fsubs
aas
ret
or
in
add
add
ja
mov
cmp
xor
inc
outsl
jnp
pop
jl
inc
iret
adc
stc
mov
icebp
jmp
mov
ljmp
adc
fisttps
xchg
lahf
mov
adc
add
enter
adc
int
jp
or
or
xchg
and
sbb
sahf
bound
mov
lods
and
pushf
or
jo
or
out
push
pop
sub
mov
stos
jne
mov
lret
les
outsb
inc
iret
jmp
movsl
dec
mov
sbb
or
leave
int3
mov
ffree
iret
sub
inc
icebp
stos
gs
and
push
push
addr16
and
xchg
shrb
call
std
addl
mov
add
push
movsb
push
xchg
xchg
pop
jmp
push
cli
insb
mov
sub
inc
sub
inc
xchg
push
lods
mov
cmpsb
call
movb
cmp
cmp
jl
icebp
leave
scas
adcb
int
out
xor
pop
call
mov
lock
push
push
push
or
push
les
sub
ret
pop
cmpsl
lret
xor
jb
imul
icebp
push
lods
movsb
test
fst
add
mov
incb
cmp
cld
fwait
pop
ljmp
dec
rorb
jnp
cmp
into
inc
in
iret
das
ljmp
jmp
sbb
pop
mov
jb
push
mov
outsl
adc
add
imul
enter
gs
push
ret
xchg
or
adc
sub
add
dec
popl
pop
sarl
mov
imul
or
add
pop
inc
inc
or
mov
clc
stos
or
push
sbb
cmpb
jae
dec
jmp
cmc
mov
push
xor
test
dec
loop
js
jge
jno
mov
and
add
jge
shll
scas
add
lcall
cmp
cmc
out
outsl
add
inc
cmp
lret
mov
mov
sbb
mov
jnp
inc
cmp
dec
mov
fs
sahf
or
out
or
pop
adc
popf
int
negb
xor
sbb
jns
bound
pop
fidivl
call
jne
negb
fisttpll
pop
pop
jmp
in
jg
clc
jae
push
and
add
xchg
cltd
or
stos
add
mov
clc
movsl
in
enter
pusha
mov
xchg
xchg
xchg
push
dec
push
sbbb
dec
fsts
pop
mov
sbb
jbe
and
ja
xor
lock
ret
cld
push
inc
adc
stos
sbb
xor
ljmp
ret
add
and
adc
add
xor
push
push
mov
jnp
sbb
ficoml
repnz
inc
jmp
jb
push
scas
jno
mov
fdivrp
pop
xchg
cwtl
bound
and
adc
mov
inc
dec
mov
mov
dec
popf
mov
cmc
dec
sub
mov
inc
jl
pop
push
enter
or
mov
out
lods
or
fistps
dec
bound
push
int3
dec
and
mov
inc
loop
cwtl
mov
cli
sti
add
jmp
inc
push
mov
cmpsl
mov
vmovddup
mov
test
enter
sub
clc
test
cmpsl
adc
mov
addb
into
shl
push
mov
xchg
js
clc
loop
aad
cmp
mov
call
in
and
sbb
mov
pop
dec
pop
fnstsw
xorb
adc
call
inc
push
sub
loope
or
adc
ss
xor
xor
mov
daa
mov
xor
mov
inc
psadbw
push
push
or
shr
in
invd
and
jecxz
inc
mov
jp
push
fisubs
stos
in
aaa
sahf
mov
push
arpl
sub
daa
out
fisubrs
jo
addr16
or
or
sbb
lahf
xchg
std
mov
repnz
pop
mov
inc
stos
sbb
sbb
or
cmpb
mov
incb
xor
bound
leave
lea
adc
jmp
push
mov
test
push
mov
pop
mov
adc
lret
shr
aad
mov
out
mov
cli
jge
xchg
cmpsb
sti
add
or
jmp
ret
or
aam
ds
mov
stos
sbb
mov
ljmp
cmp
xor
mov
in
out
mov
xchg
push
cltd
mov
shlb
ret
dec
pop
mov
pop
lds
pop
repnz
mov
rolb
orb
cltd
inc
mov
jbe
insb
and
add
out
add
jmp
mov
sub
jno
xchg
imul
xor
xor
jmp
jp
or
pop
pop
rorb
inc
xor
or
shl
sub
mov
into
cwtl
push
adc
add
ret
das
jmp
orb
cwtl
jle
movsb
pop
out
gs
mov
popf
stc
mov
jb
sarb
jp
or
pop
push
mov
cwtl
insb
in
and
cld
push
dec
and
cmp
jmp
ret
je
ds
jmp
and
test
xchg
pop
jmp
aas
arpl
daa
out
ds
jge
movsl
xchg
push
or
pop
std
cmp
or
out
fucom
jnp
pop
or
aaa
pop
ret
ficoml
sysexit
inc
je
addr16
or
inc
xchg
mulb
idivl
jnp
iret
cli
push
inc
scas
push
xchg
xchg
pop
add
shl
jb
push
add
test
test
jl
mov
mov
adc
jmp
and
sub
clc
jno
imul
cmp
das
sbb
in
movsl
dec
mov
out
fs
mov
pop
push
jbe
adc
addr16
xor
jmp
fldcw
cmp
sti
push
jge
dec
jmp
pop
ret
pushf
jo
in
ds
out
out
xchg
ja
push
ret
daa
pop
negl
or
cmp
sbb
cmpsl
pop
add
add
in
push
pop
inc
adc
fldt
jbe
rorl
mov
mov
aad
pop
testb
jmp
push
arpl
test
lret
jmp
imul
mov
push
aaa
jl
sbb
or
jnp
lods
jle
add
ljmp
push
and
pop
sub
lea
fldt
xor
leave
jge
pop
and
cmpsl
dec
push
mov
xchg
enter
xchg
inc
mov
ljmp
movsb
cltd
nop
jae
cwtl
incb
into
or
mov
fstl
in
aas
daa
push
jge
push
flds
push
xchg
push
inc
push
pop
jmp
push
add
clc
fistpl
test
test
ja
pop
mov
call
inc
lock
je
sub
xor
add
inc
jle
jb
pop
mov
jne
mov
xor
sub
sbb
dec
push
push
popa
xchg
ljmp
std
cmp
out
rcrl
loope
stos
out
push
add
pop
int
ss
or
pop
leave
jmp
sbb
lds
mov
fistl
jmp
call
and
das
cmp
cmp
insb
and
sar
xorb
mov
nop
loop
repz
jg
xor
xorl
je
push
fstpt
add
pop
adc
pop
cld
add
jmp
cli
mov
mov
lock
shrl
jle
les
adcb
mov
and
pop
dec
mov
mov
pop
jmp
jecxz
sub
push
add
cmp
je
jne
addb
jmp
pop
dec
lahf
cwtl
add
call
xchg
inc
adc
in
sbb
inc
sub
cli
popa
dec
mov
add
push
pop
mov
adc
and
clc
pop
mov
in
gs
enter
jge
push
fs
hlt
sub
out
out
gs
icebp
mov
rclb
in
jmp
push
pop
push
sub
mov
inc
add
sti
mov
mov
xchg
hlt
adc
push
push
arpl
push
push
jmp
rolb
bound
or
mov
xchg
push
push
add
push
addr16
jbe
dec
inc
xor
mov
fucomp
jo
imul
or
es
je
inc
mov
or
push
sub
addl
addb
lcall
mov
jns
add
mov
pop
je
imul
prefetcht1
adc
gs
add
inc
test
sub
test
pop
pop
jge
push
mov
dec
xchg
call
mov
cmp
and
pop
ja
cmc
in
jmp
cld
pop
jno
add
pcmpgtd
push
mov
std
or
push
bnd
or
xchg
jno
jb
cltd
rorl
sbb
add
call
cmpsb
push
dec
push
xchg
mov
clc
jnp
out
adc
inc
sub
out
ljmp
lret
xchg
loope
mulb
imul
pusha
push
or
pop
pop
jle
jmp
fldt
dec
ret
add
dec
int
jmp
jle
sbb
movsb
dec
adcb
fcoms
cmc
incb
lret
add
ljmp
in
ret
jmp
mov
push
xor
add
ljmp
icebp
sti
cmpxchg
inc
add
out
and
cmp
add
mov
fstps
mov
imul
jge
push
cmp
or
dec
sbb
dec
and
faddp
test
rorb
add
pusha
dec
inc
or
pop
dec
popf
sub
into
add
xchg
inc
ss
negb
pop
xor
fists
mov
inc
div
xor
pop
mov
insb
xchg
mov
pop
popf
fsubrl
pop
push
lock
sub
xor
mov
cwtl
jmp
adc
push
shlb
inc
xor
or
or
sub
outsb
lret
adc
stc
cld
cmp
mov
rorb
scas
repnz
jl
fstl
in
adc
mov
ja
jb
ja
das
jle
pop
mov
mov
jo
lahf
cld
int
sub
cs
adc
mov
cmpsl
or
mov
mov
mov
sbb
sub
add
push
inc
push
mov
add
mov
sub
sbb
inc
push
sbb
xor
lods
push
xlat
mov
lahf
iret
dec
xchg
loope
and
dec
subl
xor
clc
adc
clc
add
jmp
paddq
in
pop
lods
jge
lret
or
sub
push
addr16
shr
inc
mov
lea
mov
mov
lcall
or
mov
sub
jns
mov
xor
pop
add
sbb
cmpsb
imull
movsl
adc
je
testl
xchg
mov
pop
or
and
sub
jg
in
inc
sahf
ror
xor
sbbb
insb
mov
stc
mov
push
sub
std
test
or
cmp
lods
xor
in
add
push
mov
and
pop
adc
call
pop
push
pop
cmp
jns
fcoms
pop
mov
pop
xor
out
inc
inc
sub
push
jo
dec
lea
push
jp
jle
sub
test
outsl
cmc
or
mov
xchg
cli
mov
psrlq
sub
stc
inc
mov
mov
push
mov
jmp
mov
imul
out
movzwl
hlt
dec
aad
dec
andb
test
push
gs
shrb
jmp
and
shl
jecxz
push
stc
dec
ror
ret
push
pop
mov
or
push
repz
mov
shl
xlat
add
add
inc
sub
lods
xor
jmp
out
xchg
cmp
jge
loope
inc
jge
or
inc
sub
in
rcrb
dec
add
xchg
jns
imul
sarb
lds
add
adc
cmpb
adc
stos
or
push
push
sbb
and
sti
push
cmc
sub
jp
xchg
add
sarl
jno
mov
sbb
sbb
adc
rclb
fwait
into
in
xchg
into
pop
mov
test
or
pusha
ss
sub
leave
sbb
mov
xchg
loopne
pop
cmp
or
jo
test
mov
jmp
jno
dec
fwait
xor
pop
lret
das
inc
filds
or
adc
pop
test
rol
sbb
aam
push
cwtl
loop
pop
pop
negb
das
xor
pop
insl
pushf
test
cltd
cmp
adc
rclb
cmp
or
sbb
loopne
ficomps
adc
bound
mov
sbb
ret
jae
push
push
std
pusha
shll
mov
push
daa
jl
adc
fiaddl
xor
xchg
notb
repnz
pop
xor
add
xor
and
push
add
bound
inc
mulb
call
or
ljmp
mov
jmp
fdivr
pop
pushf
ficompl
add
xchg
imul
mov
dec
push
shl
adc
mov
and
add
or
mull
cmp
inc
pop
push
stos
inc
or
test
std
cmp
jne
sub
jmp
push
push
pop
lds
xchg
stos
lahf
jns
ret
dec
mov
mov
mov
mov
es
push
adc
xor
push
lods
das
movsl
cwtl
dec
or
ja
faddp
pop
cmpsb
sbb
cmp
rclb
ret
or
sbb
scas
dec
fdivrs
xchg
push
xor
cmpsl
sahf
push
inc
or
dec
lods
and
xchg
jae
movsl
pusha
and
lcall
sub
and
sbb
or
or
mov
pop
inc
je
push
mov
aad
sub
mov
inc
call
add
pusha
xor
mov
inc
lods
sub
push
jmp
cmp
push
xchg
mov
popa
and
pop
addl
jle
repz
or
pop
loope
push
add
mov
inc
cmp
or
cmp
lock
movsl
xor
jo
adc
mov
push
mov
dec
inc
xor
pusha
mov
jge
jp
pop
and
iret
push
clc
mov
sti
push
int3
cltd
testl
pop
mov
or
hlt
in
in
leave
dec
lock
pop
test
push
mov
out
in
popf
js
lahf
push
mov
cmp
into
or
scas
adc
clc
les
and
or
jnp
ljmp
inc
jmp
pop
jl
insb
pmulhw
push
cmova
mov
shlb
lods
pop
jmp
ja
sub
ret
lahf
or
imul
out
dec
pop
jecxz
rol
fists
dec
jle
jbe
mov
add
scas
movsl
shlb
fstps
pop
mov
or
cmp
jae
push
sbb
push
push
xor
push
and
mov
dec
sti
mulb
mov
mov
pop
fstpt
jo
xor
fists
clc
xchg
push
jmp
xchg
sub
xor
or
mov
jmp
push
bound
sbb
mov
imul
stc
lea
es
push
faddl
xor
mov
popf
into
lds
sub
in
pop
pop
pop
jbe
and
mov
es
mov
sar
lock
shll
mov
mov
sub
xor
push
test
push
push
push
xchg
lcall
mov
or
dec
xchg
test
adc
push
decl
cmc
push
mov
pusha
stos
shl
pop
in
mov
out
jg
mov
subl
pop
ja
inc
sbb
pop
leave
or
cs
mov
mov
ret
push
or
orl
add
xor
ds
pusha
lock
mov
jmp
pop
pop
cmp
lock
mov
sub
pop
scas
sub
and
mov
push
mov
jno
dec
pop
ret
push
fsubr
test
xchg
xchg
sahf
std
clc
hlt
dec
lods
dec
mov
mov
pop
mov
cmp
fnstenv
push
xlat
dec
dec
stos
and
lret
rcll
inc
pop
jmp
inc
aaa
pop
cmc
jg
mov
rorb
pop
test
popa
jae
sub
jne
lahf
push
decb
pop
push
sub
cs
rorl
mov
xlat
inc
leave
jle
rep
sbb
pop
or
outsl
ret
dec
or
xchg
mov
xchg
and
jnp
pop
and
pop
push
push
cld
mov
pop
dec
dec
call
jo
push
iret
and
leave
sbb
je
or
or
add
rcl
pop
out
dec
mov
adc
add
scas
mov
test
xlat
cltd
ja
cmc
mov
mov
or
mov
rcrb
cli
dec
and
add
addr16
add
repnz
inc
jb
pop
sub
dec
das
ret
fisttpll
das
or
push
bound
mov
adc
cmp
push
sub
inc
mov
aas
add
repnz
das
jmp
call
sub
ret
add
xlat
and
sub
roll
add
divl
inc
adc
add
movb
cmc
das
mov
sbb
pop
or
lods
out
ret
test
and
mov
lock
movsb
std
adc
cmpsl
and
and
icebp
je
test
inc
ljmp
jmp
inc
mov
dec
ret
ljmp
push
jae
or
movzwl
dec
mov
fadds
xor
mov
sub
sti
add
pop
sub
addb
add
mov
push
jno
and
or
sub
test
adc
ret
dec
hlt
pop
jno
ds
push
inc
shlb
and
stos
cld
push
lahf
mov
jmp
jg
and
inc
push
or
jp
cwtl
call
ss
ds
or
mov
fsubp
hlt
push
mov
negl
add
xor
jl
xlat
mov
add
mov
push
cmp
pop
xchg
mov
sbb
daa
call
inc
out
mov
gs
push
rorb
pop
out
jno
fidivl
and
das
push
inc
enter
mov
mov
test
jae
mov
jge
scas
fisttpll
mov
icebp
ret
fcoms
nop
mov
or
push
push
pop
push
scas
mov
jp
sub
fimuls
xchg
xchg
pop
rcrb
movzbl
xchg
pop
mov
je
mov
and
into
ret
jno
pop
jp
xlat
mov
cmc
pop
out
push
push
jae
inc
jo
jmp
mov
xchg
ret
jp
sub
insb
jg
in
aaa
or
pop
shlb
sbb
cs
xchg
adc
cwtl
aaa
xchg
insb
mov
dec
or
in
xor
push
mov
imul
lahf
jo
xchg
push
xchg
inc
gs
arpl
stc
out
lret
mulb
inc
movsb
sarl
or
xor
lock
mov
flds
sahf
dec
xor
filds
jmp
adc
mov
cmp
xchg
and
xchg
push
mov
push
mov
mov
outsl
leave
outsb
movsb
lahf
enter
lds
aad
movsb
add
mov
and
clc
or
out
sarl
pop
repz
adc
stos
sar
and
inc
es
xchg
adc
adc
fbstp
ret
mov
loopne
dec
mov
mov
sub
jb
testl
add
pop
in
inc
shl
insl
repz
pop
sub
fs
push
in
dec
jp
jle
push
stc
xor
shlb
imul
fwait
dec
mov
dec
push
out
aam
scas
mov
mov
mov
jmp
ret
test
jns
aad
loopne
cmp
call
test
and
fists
cli
cmp
loopne
insl
push
or
syscall
push
jo
cli
addl
sub
xor
out
sti
imul
add
add
and
dec
mov
pop
xor
mov
pusha
sub
mov
jg
imul
mov
mov
addl
push
shlb
in
jg
scas
sahf
lahf
jp
adcl
inc
in
mov
fimuls
lcall
mov
jne
aad
fxch
adc
ret
jg
pusha
pop
pop
lods
stos
sub
push
mov
pop
ja
icebp
push
rorl
pusha
jns
add
cli
pop
add
jmp
or
pop
jo
add
and
add
sub
lock
aam
push
pop
jecxz
add
sbbl
add
subb
sub
adc
cmp
and
fcomps
dec
mov
push
cmp
pop
or
call
icebp
inc
pop
or
mov
outsb
popf
js
dec
dec
stc
sub
push
aas
jmp
push
push
mov
xchg
sahf
and
add
ds
inc
and
imul
loop
push
sbb
rcrl
repnz
mov
mov
in
add
xchg
sub
xor
mov
cmp
ds
test
dec
fcomps
outsb
mov
xor
or
pusha
jmp
bound
jmp
jle
jp
jne
std
push
xchg
xchg
mov
jne
daa
inc
push
pop
xchg
inc
clc
jmp
pop
repz
jmp
clc
xor
and
hlt
es
cli
add
int
adc
fldt
psubb
pop
xchg
xor
push
add
pushf
daa
jg
cmp
adc
inc
pop
or
or
nop
and
imul
push
vmovdqu
jge
sar
leave
inc
push
dec
fsubs
jmp
add
pop
pop
xor
sbb
dec
nop
push
fiadds
out
adc
ja
pop
and
lea
mov
cs
es
aam
out
pop
shlb
mov
aaa
shr
stc
stos
div
sub
or
push
inc
addr16
scas
mov
add
loopne
mov
dec
sti
sub
movsb
xor
xlat
add
mov
jne
jo
das
pop
repnz
insb
das
je
add
mov
and
rcll
dec
pop
inc
pushf
movsb
sub
push
movzbl
cmp
push
and
cltd
daa
lcall
das
loop
loope
testb
decb
rorb
jmp
rol
push
jecxz
iret
pop
push
popa
lcall
addr16
outsb
or
in
xchg
andl
xchg
sub
add
cmc
or
or
out
loop
fdiv
loopne
mov
push
sub
jge
mov
dec
and
daa
inc
mov
flds
fiadds
imul
dec
push
fisttpl
daa
jp
xchg
xchg
int3
cmp
mov
pop
daa
aad
testl
lcall
jecxz
adc
bound
or
mov
xchg
mov
into
xchg
jmp
pop
xor
icebp
mov
inc
lods
and
adc
je
mov
pop
es
adc
testl
add
jecxz
loope
jg
pop
xchg
dec
xor
test
popa
loop
jno
dec
fsts
push
pop
jp
pop
jge
iret
jmp
push
push
adc
mov
push
add
loopne
adc
adc
in
add
mov
cs
or
dec
das
sub
mov
jmp
inc
adc
loopne
mov
stc
sub
lea
stc
imul
cs
imul
dec
sub
movsl
mov
mov
push
mov
mov
pop
cs
mov
imul
mov
lock
or
inc
mov
mov
js
aaa
lock
pop
and
push
pop
js
mov
stc
test
pop
test
push
shr
das
mov
or
inc
or
hlt
and
xchg
cmp
sar
mov
sbb
mov
cmpsb
lcall
push
lcall
insb
mov
dec
inc
subl
cs
out
push
inc
push
out
lods
inc
dec
mov
push
fnstenv
dec
fbld
ja
push
scas
and
cmp
push
movsb
sub
pop
xor
jge
add
add
mov
insl
fadd
rcll
or
add
xchg
outsb
pop
lcall
xor
insl
xchg
sti
lahf
adc
xor
loop
loope
push
outsl
shl
mov
add
xor
push
push
mov
or
fs
aad
loope
adc
sbb
xor
mov
mov
adc
dec
dec
lret
daa
jge
roll
mov
and
jnp
or
push
adc
adc
add
test
pop
mov
fimull
popf
adc
fstpt
imul
nop
push
orb
orb
sub
lock
cltd
test
dec
lods
mov
add
mov
jle
test
fistpll
cmp
mov
scas
lret
cwtl
or
mov
iret
mov
fcoms
inc
test
and
sahf
adc
movsb
jnp
push
push
xchg
cwtl
or
fists
push
stos
cmp
mov
lcall
test
cli
pop
loope
adc
testl
les
je
or
sbb
sbb
xor
xor
mov
xor
into
add
jne
inc
dec
xchg
push
pop
leave
pushl
cmp
stc
push
out
inc
xor
scas
mov
pop
pop
adc
mov
dec
mov
lret
jno
pop
xor
movsl
nop
lahf
pop
cli
daa
add
sub
pop
push
jmp
movsb
stos
rcrl
fisubrs
rol
or
rclb
das
mov
xorb
jmp
fisubrl
xchg
dec
out
dec
push
stc
fwait
mov
popa
inc
shll
iret
mov
es
aam
out
insb
dec
bound
dec
ret
out
test
mov
jns
ret
orb
dec
sbb
lret
outsb
sbb
push
adcb
mov
stc
pop
dec
push
test
clc
inc
sub
or
int
inc
xchg
xlat
test
test
mov
scas
fdivs
push
xchg
fdivs
sub
or
aaa
cmp
stos
imul
add
adc
cmp
cld
mov
es
cwtl
add
int3
pop
push
xchg
cmp
adc
cmp
mov
addb
jg
jecxz
push
invd
lock
loop
bound
inc
sbbb
mov
add
lret
je
xchg
je
pusha
and
jl
pusha
mov
and
mov
mov
aas
rclb
fisttps
aaa
sub
push
movsb
sbb
das
add
push
dec
add
jle
sub
or
hlt
sub
hlt
push
jo
jno
jmp
pop
or
pop
lahf
movsl
fildll
or
fcomip
pop
or
js
jle
shll
test
icebp
imul
fsubl
cwtl
push
inc
jbe
sub
mov
inc
repnz
in
or
daa
push
or
outsl
into
cmp
test
adc
outsl
mov
adc
xor
jb
out
jo
sbb
imul
movsl
add
add
sub
or
jle
popf
pop
in
out
push
sbb
mov
or
mov
lret
xchg
pushf
jno
pop
inc
stc
lock
out
lods
push
or
push
shl
arpl
sub
push
clc
adc
jb
push
sub
push
mov
push
jmp
xor
and
cli
jae
push
std
sub
mov
stc
lock
pop
call
jne
or
aam
sbbl
or
or
mov
lret
shll
ror
sub
insb
jmp
mov
push
arpl
jnp
mov
xchg
int3
lods
jg
or
cmp
xchg
push
or
jle
daa
pop
mov
xor
cmp
stos
pushw
inc
repnz
fnstenv
aas
not
cmp
inc
mov
frstor
movsb
pop
repz
stos
loope
pusha
inc
pop
negb
daa
pop
pop
pop
or
or
inc
pop
xchg
fmulp
and
out
dec
add
push
orl
testb
push
jecxz
xchg
push
add
das
add
push
fisubl
push
mov
or
loopne
pop
mov
push
aam
add
mov
jl
sbb
inc
sub
fcoml
push
adc
inc
call
andb
rorb
imul
pushf
pop
mov
mov
jo
daa
repnz
sar
js
dec
insb
lds
mov
pop
sbb
mov
nop
xchg
xorl
jo
rorl
mov
inc
fmull
jmp
jmp
or
push
push
mov
cld
xorl
add
ret
push
jge
jmp
adc
sbb
push
push
jmp
inc
fldenv
cmp
lcall
mov
mov
cmp
dec
pop
mov
jb
mov
mov
imul
pusha
fdivs
lret
add
bound
loopne
push
and
sub
add
mov
aas
es
shlb
js
lock
add
cmc
push
out
mov
orb
inc
lret
xor
pop
not
sub
movsl
das
outsl
lret
mov
mov
ss
dec
mov
negl
fs
ret
imul
mov
jne
shlb
sub
mov
push
or
and
sub
outsl
pop
mov
dec
or
push
faddl
xchg
outsb
push
notb
mov
xor
cmc
jl
sbb
pop
aaa
mov
cmpl
mov
xchg
jnp
pop
lods
movsl
mov
out
pop
aas
popa
mov
add
xor
pop
shl
lret
loopne
xchg
jnp
shl
repz
pop
or
and
jb
or
ss
or
notb
out
xchg
xor
sub
clc
jmp
or
and
mov
xchg
or
rolb
pop
fdivs
int
in
jnp
adc
adcl
das
jge
dec
dec
loop
jl
pusha
add
sbb
icebp
mov
hlt
nop
sti
and
hlt
pop
dec
out
add
push
test
pop
push
fisttpl
mov
pop
scas
xor
jp
daa
push
jge
xor
add
mov
dec
les
pop
jmp
inc
icebp
stos
daa
in
xor
sub
int
mov
addr16
out
jg
cli
rol
pop
xor
mov
pop
jg
push
pop
repz
push
in
pop
xchg
mov
or
in
push
aas
in
insb
pop
xor
xchg
lds
push
loop
or
push
xor
add
push
jo
xchg
rorl
jo
cmp
xor
ja
scas
aam
mov
and
repz
xlat
push
mov
mov
in
add
push
gs
idiv
fisttps
jmp
jne
dec
mov
jne
jno
fildll
inc
pop
push
push
lods
sbb
les
add
stos
aam
push
or
cmp
xchg
mov
loope
xor
xor
test
es
pop
fst
sar
in
sti
push
incb
mov
rclb
mov
daa
mov
jle
sarb
sub
ret
and
adc
sub
push
jae
add
sub
dec
pop
lcall
enter
pop
mov
ret
out
sub
add
jne
les
rorl
popf
xchg
lods
fistpll
loopne
jmp
or
push
jmp
aas
in
bound
pop
int3
push
aad
add
dec
mov
jbe
jmp
mov
ss
pop
daa
sub
hlt
arpl
add
inc
pop
jne
inc
add
addb
mov
call
add
idivb
xchg
xchg
mov
scas
inc
addr16
aad
dec
pop
xchg
cmp
std
mov
push
mov
jmp
or
push
inc
push
mov
push
mov
adc
movsb
cmp
or
lock
cmpsl
out
xchg
dec
lea
fdivrs
mov
aas
add
or
cltd
pop
shlb
je
stos
mov
bnd
cmpsb
add
movsl
bound
mov
add
jl
fwait
mov
inc
filds
or
mov
and
cvtps2pi
cmpsb
xchg
subb
push
pop
in
cli
mov
xor
and
mov
or
lds
push
call
movsl
data16
or
int
add
or
xor
aaa
sub
insb
and
js
sbb
loopne
cmpsl
es
sub
jle
fdivs
ficomps
push
ja
mov
lock
xor
mov
inc
add
xor
popf
clc
cmp
insb
inc
add
push
stos
push
ret
push
sarl
add
sbbb
pop
push
inc
xor
jl
xor
sbb
mov
add
adc
mov
roll
inc
jno
sbb
cwtl
inc
sahf
push
xor
and
and
stc
sbb
xchg
pop
mov
jmp
mov
shl
fadds
push
addr16
jmp
ljmp
test
aad
enter
ret
idivl
fildl
imul
jns
xchg
add
and
and
int3
mov
cmpl
inc
push
or
and
jo
loop
pop
sbb
mov
jb
or
add
mov
out
mov
popa
mov
push
cs
roll
insb
enter
push
dec
int
push
subl
es
jo
dec
add
in
push
or
adc
jle
ffree
or
cmc
mov
sbb
cmp
push
cmpsl
fs
in
sti
jns
jle
ret
insl
push
negl
push
nop
add
or
push
or
sbb
adc
ret
popa
push
mov
enter
lea
idivl
test
ja
xchg
iret
test
leave
pop
sbbl
sub
in
hlt
lcall
pop
ret
dec
es
sub
mov
sbb
cwtl
mov
push
pop
jbe
push
int3
lret
adc
popf
lret
xchg
sbb
mov
pop
push
into
aad
mov
dec
ljmp
jo
insb
pop
sbb
dec
scas
test
movsl
sub
mov
jb
arpl
mov
push
call
test
fiadds
jl
cld
push
mov
mov
xlat
dec
xor
sub
xchg
sub
mov
nop
ljmp
add
mov
dec
mov
notl
dec
mov
pushf
inc
sub
shl
rolb
lret
adcb
rorb
pop
mov
mov
sub
bound
add
lods
pop
scas
push
daa
sub
mov
sub
jmp
pop
lods
add
aas
rolb
dec
sbb
mov
sub
testl
push
push
loope
jnp
xor
jmp
mov
jb
in
subl
loope
rep
cltd
cmpsb
add
mov
dec
insb
jmp
shrl
imul
ljmp
jg
sub
shrl
sbb
lea
sub
cwtl
in
sub
outsb
dec
test
movsb
clc
sarb
or
leave
add
jnp
xor
fnstsw
cmc
out
iret
push
add
cmpsb
push
and
sub
add
clc
mov
in
out
bound
pop
in
imul
stos
out
das
clc
in
imul
mov
and
sbb
add
jmp
stos
or
cld
jnp
fdivrl
daa
jmp
gs
xchg
push
mov
cs
sub
fists
fsubr
sbb
mov
xor
clc
add
push
push
mov
mov
outsb
xor
scas
sub
push
jns
sbb
out
mov
gs
jl
fistpl
pop
lret
or
xor
das
add
in
cmp
cs
or
push
repnz
pusha
inc
mov
aam
dec
inc
nop
sub
mov
gs
insb
add
jge
inc
ret
mov
dec
or
in
or
lret
push
cmpsb
cmc
lock
jnp
jg
ss
jnp
lret
dec
loop
ffree
daa
loopne
mov
es
bound
shlb
mov
mov
mov
dec
arpl
cwtl
and
add
add
mov
stos
das
icebp
lahf
push
add
sti
hlt
dec
dec
lea
clc
add
mov
or
lahf
add
cmp
mov
add
jae
cmp
jmp
add
lods
loopne
stos
push
cld
inc
pop
and
dec
imul
jg
js
rcrl
xor
push
mov
add
cltd
pop
xchg
out
jecxz
push
or
inc
insl
adc
cmp
push
daa
or
pop
nop
mov
scas
cmp
jns
ret
mov
arpl
add
roll
pop
add
jg
and
add
sub
stos
xor
inc
or
or
mov
dec
movsl
xor
stos
cltd
pavgb
out
sub
and
add
add
jmp
mov
sub
or
daa
mov
cmp
push
pop
mov
ret
push
add
dec
jmp
mov
mov
pop
addl
add
lret
pop
sub
push
add
inc
pusha
jg
pop
leave
push
mov
fidivrs
and
pop
add
das
rcl
dec
lcall
popf
lcall
pop
xchg
pop
hlt
fldcw
or
call
outsb
cld
cmp
sub
out
xchg
dec
fildll
ds
stc
bound
pop
stos
and
cmc
add
lahf
mov
adcb
popf
lret
inc
movsl
add
jmp
xor
loopne
or
push
or
cmc
push
testl
in
out
inc
jbe
cli
sbb
mov
adc
enter
mov
dec
stc
dec
cli
into
jecxz
dec
push
imul
push
jl
aas
jg
cmpsl
xchg
mov
sub
pop
iret
pop
es
jge
repnz
mov
fstpl
or
mov
lret
push
push
dec
jno
dec
cmc
out
test
icebp
popf
xchg
push
repnz
out
out
out
sub
sbb
xchg
jp
int3
mov
lahf
dec
adc
test
stos
imul
out
jbe
mov
jbe
or
lods
jl
mov
in
or
adc
or
jno
outsl
add
fimull
ret
jnp
nop
rorb
jmp
dec
stc
xchg
dec
stos
cmp
arpl
push
test
cmp
dec
in
add
aad
in
jno
lds
scas
popf
mov
ja
daa
add
loope
in
pusha
dec
lahf
mov
add
dec
fs
sahf
mov
xor
xor
add
dec
outsb
js
pop
mov
pop
movsb
xor
inc
fwait
add
mov
xchg
outsb
hlt
mov
jmp
mov
xor
cld
mov
sbb
or
mov
rolb
cltd
jle
inc
inc
mov
inc
sub
mov
sbb
xor
mov
mov
or
pop
in
pushl
fst
ljmp
leave
jmp
sbb
cmpsl
add
enter
pop
push
mov
pop
and
dec
jp
in
imul
pop
push
mov
int
aas
push
jg
xlat
xchg
mov
lods
mov
push
cmpsl
ret
xchg
mov
test
mov
dec
popf
adc
pop
sub
sbb
outsl
push
push
pop
int3
stos
int3
bndldx
cld
dec
lds
stc
xor
nop
push
mov
jecxz
or
jmp
loopne
mov
jnp
dec
jge
dec
sub
in
imul
xchg
or
pop
push
jae
cmpsb
int
ror
out
lcall
sub
insl
xchg
xor
jmp
push
push
fmuls
lods
mov
bound
ljmp
and
sarl
add
add
mov
adc
pop
inc
sub
rcr
inc
adc
pop
sbb
in
sbb
sbb
sub
push
and
pop
push
push
xor
and
cmp
cmp
adc
mov
out
js
repnz
cwtl
fimull
mov
lret
jbe
and
jp
xchg
pusha
in
mov
xlat
lret
test
mov
pop
addr16
xchg
cmp
cmp
lret
xchg
inc
cmp
iret
sbb
out
mov
testl
push
loope
sub
pop
outsb
lret
leave
pop
cmp
stos
sub
add
pop
cmp
jp
inc
and
in
mov
stos
arpl
mov
adc
nop
or
call
add
addr16
dec
rcrl
cmc
sbb
cmpsb
cmp
push
jno
outsl
mov
mov
jbe
mov
mov
pop
leave
mov
inc
cli
out
xor
mov
adc
mov
das
lret
jo
mov
pusha
add
mov
repnz
aas
sub
xor
js
ljmp
adc
add
inc
add
andb
aas
jg
jmp
xor
sbb
pushf
jae
jl
adc
retw
cmc
fldcw
cmp
xchg
pop
fadd
push
clc
test
and
inc
mov
sub
pop
and
push
inc
lea
adc
mov
or
mov
mov
mul
cltd
cmp
xor
andb
sbb
ret
in
pop
add
repnz
jmp
ljmp
jmp
out
jle
cmp
nop
repz
jnp
push
mov
outsb
push
push
push
lods
sbb
cmpsb
sub
sub
adc
sbb
in
inc
fdivrs
leave
cld
dec
and
add
fsubrs
inc
or
push
jecxz
test
pop
adc
add
nopl
loop
out
jae,pt
xchg
and
mov
add
push
xlat
inc
xlat
push
or
out
xlat
push
add
enter
jp
mov
lret
cld
ret
js
add
push
jl
dec
mov
lret
xchg
cmp
test
or
dec
stc
movsl
test
data16
pop
rcrb
add
scas
inc
cwtl
mov
push
xor
scas
push
mov
rolb
sbb
inc
scas
adc
jns
push
mov
test
mov
or
xchg
jno
push
or
movsl
sub
fadds
dec
mov
sub
sbb
loop
adc
dec
adc
xchg
jle
cli
into
xlat
adc
push
push
insb
scas
incb
push
test
fldt
scas
scas
insb
inc
push
xchg
or
pop
push
jb
pop
inc
mov
test
inc
xchg
mov
dec
int
aam
fisttpll
mov
pop
ljmp
inc
rclw
pop
add
clc
lea
jnp
aas
or
popa
sub
jmp
scas
paddw
sbbb
mov
or
mov
jb
lock
stos
mov
xor
push
stos
mov
push
jmp
jge
adc
inc
inc
cmp
imul
push
inc
mov
fiadds
ret
cltd
xchg
sbb
int3
and
xor
pop
subb
add
data16
lret
adc
imulb
cmp
cltd
inc
jmp
out
and
sbb
inc
mov
scas
dec
mov
pushf
cmp
jo
push
shl
jmp
out
dec
loopne
and
mov
xor
sbb
rcr
push
ss
jmp
cld
loop
roll
leave
hlt
add
sbb
inc
cld
mov
mov
ret
xchg
fiadds
jo
inc
and
cmc
or
lret
push
pushf
out
push
scas
and
mov
push
and
sbb
inc
mov
cmpsb
popf
push
dec
adcb
je
addl
dec
test
roll
and
fdivs
mov
iret
imul
inc
insb
and
cld
dec
sub
ja
jle
enter
pop
icebp
push
jnp
mov
mov
enter
pushf
scas
and
in
mov
nop
popf
fimuls
loope
in
repnz
pusha
push
adc
enter
lds
stos
data16
fwait
nop
mov
fs
orl
ret
inc
pusha
lock
dec
mov
aas
ficoms
or
ret
pop
pusha
push
enter
adc
xchg
jnp
or
cld
outsl
aad
inc
cmp
into
dec
mov
sar
jecxz
dec
dec
adc
xchg
inc
scas
out
or
push
dec
mov
sbb
dec
popa
ret
jmp
add
jne
es
rcrb
nop
inc
jmp
ljmp
sub
dec
insb
lret
and
inc
filds
stos
inc
daa
inc
fisttpll
or
cmp
xor
mov
and
cld
push
push
ret
sbb
push
mov
loopne
add
push
lcall
xor
jo
pusha
pop
add
and
xchg
sub
pop
xor
mov
je
xchg
neg
dec
or
push
sub
add
in
call
inc
lret
or
out
jne
jge
jmp
test
test
das
lahf
and
mov
mov
mov
int
sbb
add
and
lcall
mov
imul
inc
push
mov
adc
pop
mov
sub
lock
sub
push
cmp
hlt
xchg
or
outsb
mov
cmp
bound
in
loope
js
clc
pop
sar
inc
pop
cmp
ret
sahf
sbb
loop
or
pop
sbb
adc
pop
sub
or
popf
or
mov
add
mov
push
or
and
adc
cmp
rclb
mov
popf
test
sbb
in
in
sbb
mov
cmp
cmp
sub
adc
cli
addr16
insl
push
decl
int3
adc
leave
dec
pop
cmpsb
outsl
int3
roll
jmp
jmp
cmpsb
pop
mov
cmp
dec
mul
movsl
lds
adc
int3
filds
sub
push
mov
dec
pop
shl
movlps
mov
push
mov
jnp
leave
mov
or
mov
dec
or
ss
pop
jmp
sub
push
dec
push
mov
xor
pop
das
mov
subl
push
inc
je
inc
or
mov
mov
pop
shlb
xor
imul
dec
jg
pop
dec
sub
xor
pop
mulps
mov
dec
mov
inc
in
jmp
jmp
adc
push
sahf
xchg
stos
aad
add
outsb
mov
push
mov
pop
lock
dec
sbb
add
out
jo
xchg
cmc
mov
dec
jo
or
rcrb
pop
mov
out
dec
or
es
ljmp
repnz
add
call
xchg
in
arpl
push
add
xor
xchg
lret
mov
inc
mov
inc
ret
jmp
sub
or
dec
iret
stc
jl
mov
lock
jnp
cmp
pop
push
movsl
cmp
jbe
pop
push
xchg
sbb
adc
lds
mov
add
push
mov
popa
push
push
jnp
push
js
int
imul
sub
mov
sbb
jge
mov
mov
imul
ljmp
sub
addr16
inc
push
mov
and
fiaddl
fdivs
punpckhbw
fisttpl
inc
sbb
fnsave
add
rclb
sub
popa
add
pop
andl
call
inc
mov
icebp
test
fistpl
sahf
je
xchg
insb
mov
cmpl
repz
inc
jmp
mov
add
inc
repnz
push
gs
mov
je
adc
sub
mov
mov
mov
pop
lock
add
nop
arpl
loope
add
loopne
ja
mov
pop
and
mov
sub
fadd
xchg
sub
test
push
and
in
pop
fmulp
enter
call
mov
add
add
jbe
pop
or
xchg
lret
hlt
mov
push
add
sbb
add
xor
ds
sub
aam
js
jns
mov
dec
addb
fildl
mov
loopne
jns
adc
ds
or
inc
loop
or
jge
or
xor
jno
push
stos
ret
jmp
or
cmc
jnp
xchg
xchg
mov
inc
jecxz
pop
xlat
pop
in
lret
or
sbb
in
lea
test
jp
ret
subb
mov
xchg
pop
pop
lods
dec
add
adc
fmul
push
push
into
or
push
sub
and
jnp
add
stos
frstor
and
or
arpl
adc
add
scas
and
aas
jmp
dec
shrb
pop
rclb
adc
jbe
lods
xor
fsubrp
shl
fs
enter
cmpsb
aad
cmp
pop
add
out
pop
or
movsb
or
outsl
sarb
jmp
shl
push
mov
ficoms
xor
outsl
js
xor
push
repz
dec
or
aas
loop
inc
outsl
and
in
push
les
add
inc
fists
sub
inc
mov
aad
pop
sub
test
cmpl
enter
addb
push
dec
or
dec
xchg
pushf
adc
loope
or
cmp
cmpsb
lahf
shl
inc
fsubrl
gs
in
pop
stos
add
and
push
loopne
mov
and
inc
test
adc
sub
prefetch
or
pop
fld
ret
mov
enter
outsl
xchg
jle
scas
or
fisttpl
cmp
std
adc
and
adc
sbb
xor
pushf
push
jnp
not
sub
dec
pop
fs
jp
sbbl
xchg
sub
jmp
xor
mov
jbe
loopne
lock
outsl
leave
mov
cmp
jg
shr
js
ja
adc
cmc
mull
add
inc
dec
xchg
cli
push
jg
push
stos
sub
adcl
fbld
and
pop
push
jle
mov
adc
fisttpll
dec
call
imul
sub
scas
add
sub
aas
and
jmp
jmp
adc
sub
test
dec
std
daa
sbb
jns
inc
popl
mov
adc
add
pop
clc
pop
loopne
xor
rcrl
add
inc
movl
cmpsb
shl
insl
add
pop
in
cmp
pop
inc
or
sbb
cld
test
lahf
sub
mov
nop
dec
mov
adc
pop
push
sub
mov
fsts
sbb
sbbb
cmpsl
push
xor
xchg
add
enter
lahf
ret
jge
fsts
fwait
mov
mov
mov
rcr
lds
pop
mov
jge
and
gs
ret
xchg
mov
imul
pop
dec
int
push
lret
mov
ljmp
cs
into
add
push
ret
std
lds
imul
sbb
add
adc
jmp
bound
jb
es
add
or
jo
jae
ret
shrl
out
xorl
sub
inc
or
or
mov
and
inc
sub
loopne
mov
ss
push
and
out
fistl
ljmp
pop
adc
or
pavgw
sbb
test
and
jl
add
mov
add
cs
and
sbb
dec
cmpb
daa
addr16
push
ljmp
pop
or
cmp
inc
fildl
sbb
xchg
xchg
hlt
and
ljmp
xor
inc
sub
shl
adc
push
mov
add
jmp
add
mov
pop
mov
cmp
pushw
xor
mov
add
or
add
push
mov
in
int3
pop
xor
imul
xchg
iret
loope
xor
es
xchg
jmp
pushf
ds
pusha
pop
pop
mov
fs
add
or
dec
mov
xchg
or
xor
xchg
mov
pushf
test
pop
pop
cs
pusha
les
jae
rorb
jg
mov
push
mov
out
jmp
clc
pop
mov
loopne
mov
jl
mov
xchg
repz
jg
loopne
mov
cmc
outsb
les
xor
adc
or
sub
and
push
push
inc
pop
add
fs
ret
lods
mov
notl
nop
cs
lods
adc
loope
push
imul
jne
inc
jb
pop
mov
das
push
pop
xor
pushf
sbb
stos
sbb
mov
int
cmp
gs
push
cmp
push
and
mov
dec
sub
insb
jno
pop
jmp
adc
jnp
hlt
lods
cmp
xchg
pop
push
testl
inc
add
mov
or
and
ret
dec
popf
add
in
add
shl
push
arpl
out
aas
ja
lods
mov
push
pop
rclb
adc
pop
repz
jg
xor
mov
mov
pusha
jmp
xor
dec
sub
push
inc
xchg
mov
cwtl
xchg
add
inc
or
jmp
sub
mov
push
popf
loope
dec
in
lret
rol
fmul
cmpsl
add
lcall
dec
pinsrw
and
pushw
push
mov
sub
push
pop
scas
jne
andb
aam
adc
mov
sahf
add
ret
out
sbb
jmp
jge
sbb
pop
add
imul
ret
fisttps
push
adc
rclb
pusha
xchg
push
mov
das
push
xorb
adc
jo
dec
xchg
sti
inc
sub
data16
pop
pop
ret
push
insb
mov
pushf
sub
sub
aas
push
lret
lcall
and
addr16
inc
and
add
sbb
xor
in
sbb
mov
jl
jge
leave
lret
cwtl
jmp
mov
jnp
pop
xor
adc
imul
repnz
jb
mov
sub
std
mov
xor
test
pop
pop
in
inc
inc
fistpll
scas
out
cmpsb
cmpsl
sbb
icebp
sbb
push
inc
xlat
into
aam
aam
mov
mov
or
xchg
mov
xchg
clc
pop
shll
popf
add
bound
add
das
and
ja
js
test
push
js
add
mov
inc
adc
add
outsb
jo
xchg
push
sbb
sub
rcr
aas
mov
mov
cmp
xchg
mov
in
push
xchg
sub
out
mov
lods
jo
mov
pop
incl
sahf
or
je
gs
aas
adc
loop
push
fcomps
ljmp
push
nop
gs
imul
cmp
push
pushf
xchg
pop
pop
fsubrl
or
mov
movsl
pop
rcr
ficoms
insl
imul
insb
ficoml
mov
loop
test
je
cmp
adc
jge
movsb
push
scas
imul
clc
and
test
jmp
jb
add
das
dec
repnz
adc
imul
fcomps
pop
xchg
es
mov
inc
nop
addr16
cmp
push
dec
cmpsb
xchg
adc
clc
loop
sarl
notl
ja
enter
add
into
cltd
xchg
mov
sub
xorl
loope
push
mov
xor
adc
dec
mov
cmp
fs
cmp
leave
mov
xchg
push
push
or
mov
or
jne
dec
in
xchg
lahf
and
scas
lock
cmp
mov
mov
imul
jne
and
pop
push
ss
xor
imul
mov
sbb
or
adc
mov
xor
rcll
pop
xor
and
push
repnz
jp
adc
dec
lods
sbb
push
jne
in
and
in
jp
sub
test
sub
hlt
push
push
lcall
jae
fisttpl
cmp
loopne
push
mov
jbe
lret
cmp
add
repz
jg
shrb
dec
sahf
add
sub
aas
in
xchg
je
lahf
and
xor
cmc
or
mov
push
loopne
sub
add
cmp
xlat
mov
dec
ja
xchg
fmuls
push
add
cli
xor
jne
add
fsubl
xchg
jl
mov
movl
ret
dec
ds
aas
mov
adc
ret
in
xchg
mov
pop
dec
aas
add
orl
dec
lahf
enter
adc
push
add
add
or
pop
inc
jmp
fisubl
jmp
sbbb
dec
sub
je
js
imul
and
xor
jne
fisubrl
jge
mov
cmp
test
in
andl
sbb
add
inc
mov
push
mov
push
sarb
enter
loopne
cmc
adc
jno
push
sub
daa
adc
jno
inc
insb
xor
and
pop
push
pop
cld
nop
mov
fs
je
add
push
ret
ror
pop
push
mov
sub
scas
into
and
and
mov
mov
jecxz
mov
mov
nop
xor
xchg
hlt
mov
enter
mov
popa
rcrl
jbe
adc
cmp
std
mov
std
push
pop
mov
mov
and
pusha
xor
roll
pop
sub
iret
inc
or
gs
rolb
jp
inc
fsubrs
in
or
pop
notl
sarl
add
pop
jle
sub
pop
mov
cwtl
inc
sub
mov
pop
mov
rcll
ljmp
outsb
fisttpll
cmp
push
dec
pop
and
jne
jno
jmp
pop
mov
loop
shll
adc
aas
cmpsb
aam
cmp
sti
icebp
or
add
xchg
and
pop
lea
push
pop
popa
adcb
ret
push
shlb
rcrl
arpl
jmp
stc
lods
daa
pop
push
sbb
add
sub
sub
lcall
iretw
stos
leave
out
idivb
cmpsb
sub
jmp
mov
fldt
adc
sub
cs
sarl
and
xchg
push
inc
lods
sub
lret
pop
dec
inc
add
lcall
sub
mov
int3
add
inc
mov
shlb
ret
out
pop
mov
xlat
cs
scas
mov
add
insb
push
or
loopne
neg
dec
push
sbb
call
mov
daa
loope
xchg
lret
jb
inc
aad
dec
and
adc
cmp
add
ljmp
and
mov
add
and
out
popa
ret
sub
imulb
jb
jbe
pop
les
or
repnz
pop
push
or
dec
ffree
and
icebp
or
call
cli
ds
cmpb
je
pop
xor
cmp
jmp
and
add
mov
cmp
fidivrl
inc
add
rorb
and
mov
jle
jb
test
dec
pop
jmp
aam
jmp
xchg
lret
sbb
mov
loope
dec
cli
repz
adc
xchg
imul
add
sub
inc
pop
and
pop
out
ljmp
lret
jbe
jne
mov
fisubs
add
cmpsl
arpl
push
les
lret
jbe
lock
inc
sbbb
addr16
or
and
push
mov
fmuls
pop
or
xchg
lahf
pop
sub
dec
jl
add
data16
addr16
dec
jnp
incl
shr
rcrl
in
dec
jnp
sarb
negb
out
test
ret
xor
pop
push
cmp
add
mov
or
pop
repz
and
or
pop
or
push
mov
dec
push
rcll
sub
in
out
rolb
iret
sub
inc
sub
adc
or
push
lea
aad
cld
nop
or
ret
sub
leave
sub
fs
in
lcall
add
pop
push
or
stc
mov
xor
pop
push
cmp
jmp
adc
push
in
jge
enter
sbb
sbb
ja
mov
mov
xchg
sub
imul
cwtl
xor
pop
dec
mov
and
and
pop
enter
sbb
inc
imul
das
pop
stos
cmp
xor
push
mov
jge
inc
xor
roll
jle
js
aam
daa
aam
sub
rolb
lods
shr
push
hlt
or
mov
test
push
xchg
mov
enter
adc
and
stos
add
gs
cli
inc
in
dec
pop
insl
jae
mov
mov
add
roll
sbb
lods
cmp
jbe
clc
sbb
add
fsts
jo
sbb
repz
xchg
bound
adc
outsb
inc
xchg
leave
adcl
inc
xchg
push
pop
ret
cmc
out
add
inc
arpl
xor
sbb
aad
jns
pop
out
sahf
test
rolb
push
cmpsb
sbbl
mov
pop
mov
dec
inc
pop
mov
mov
mov
mov
dec
add
sub
inc
jp
add
arpl
jg
xor
cmc
rcr
jl
pop
pop
xchg
inc
repnz
adc
pusha
adc
dec
inc
nop
test
movsb
loopne
add
insl
or
push
mov
sbb
jge
push
icebp
lods
cmp
pop
addb
jns
pop
add
mov
movsl
jge
push
and
xchg
jg
cmc
test
adc
xchg
movsl
ja
and
cmp
mov
or
push
nop
or
or
imul
daa
test
mov
cmp
push
rorb
bound
mov
jle
pop
ljmp
iret
std
imul
out
mov
cmove
add
in
sub
cmp
in
jno
push
mov
in
dec
imul
add
push
mov
jnp
jecxz
push
imul
loop
push
jb
jecxz
scas
push
mull
jle
pop
dec
mov
xor
jo
or
or
sti
sbb
lcall
je
add
clc
jecxz
in
push
outsb
cmp
stos
leave
add
mov
out
xor
add
ret
xchg
loope
and
push
les
sahf
int
and
push
mov
adc
adc
jmp
and
inc
mov
add
cmpsl
test
je
popa
mov
adc
fidivs
xor
inc
mov
repz
sub
cs
add
jmp
loopne
into
adc
add
pushf
int
aad
jmp
mov
loop
add
mov
dec
ljmp
push
push
repnz
add
xchg
or
cld
mov
push
or
into
fsubrp
sub
jmp
out
leave
pop
pop
lahf
xor
jnp
repz
fucomip
loope
push
dec
or
adc
xor
or
push
mov
imul
aaa
dec
add
roll
lret
push
lahf
mov
add
add
inc
in
mov
pushf
mov
test
jp
stos
enter
bound
pop
cld
adc
aad
add
cltd
sub
addr16
lret
movsl
in
sti
fdivs
add
inc
jl
mov
loope
std
out
or
jmp
mov
insl
inc
cs
fadds
mov
sbb
lock
dec
hlt
nop
adc
out
shr
pop
mov
lds
jp
inc
pushf
jmp
jg
push
pop
push
lcall
pop
xchg
cld
pop
mov
xchg
movsl
sbb
pop
xchg
stos
sub
mov
jae
push
in
adc
outsl
pop
add
or
cmp
xor
fstpt
adc
pop
push
pop
xor
cmp
data16
pop
mov
xchg
fs
inc
dec
pop
sarb
push
sbb
sbb
js
push
and
cwtl
jo
out
das
es
pop
mov
nop
push
or
movsl
ds
sbb
cmpsb
or
jbe
jo
frstor
dec
repz
es
repnz
pusha
jp
insb
inc
add
and
dec
push
cmp
inc
lret
inc
ret
and
ret
test
lods
out
and
push
fldenv
or
xcrypt-ctr
cmpsl
pop
push
jmp
jb
sub
sub
fcomip
rol
or
mov
cmpsb
add
pop
sub
fwait
or
pop
push
pop
subl
dec
les
test
pop
xchg
adc
gs
xor
add
pop
mov
shl
leave
jnp
clc
jmp
cli
dec
add
incl
rolb
mov
pusha
jns
dec
pop
sti
dec
adc
mov
mov
push
add
movsb
daa
and
mov
mov
or
cmp
push
jmp
fsubr
sub
call
cmp
xchg
sub
xor
std
ljmp
pushf
inc
cmp
call
push
lret
push
xor
and
int
lcall
inc
pop
in
ret
repz
in
lds
push
sbbb
push
adc
mov
push
out
cmp
sbb
adc
pop
sbb
and
orb
or
add
roll
jb
push
loope
xor
inc
adc
or
sub
sbb
adcb
add
and
in
ljmp
inc
or
mov
mov
or
inc
lcall
push
scas
xorl
mov
fwait
or
push
xchg
and
sub
clc
mov
add
add
xor
add
roll
and
add
add
int3
add
add
sub
jae
aas
adc
jno
orb
lcall
bound
dec
mov
add
inc
cmp
pop
and
mov
loopne
dec
or
and
bound
ret
push
add
jl
cmp
or
sbb
and
push
mov
testb
icebp
and
jo
sbb
add
addl
adc
pop
mov
imulb
and
pop
or
xor
sbb
adc
or
enter
xor
sbbb
bound
sub
inc
les
xor
add
test
insb
and
into
push
mov
in
pop
popf
lahf
mov
mov
xorb
cmp
cmp
sbb
fwait
adc
sub
adc
sbb
aas
sub
pushf
subb
jo
cld
mov
add
movsb
or
icebp
xlat
push
sbb
and
inc
xchg
lock
mov
or
or
xor
shlb
loop
sub
pop
pushf
xor
mov
rcll
imul
mov
sbb
adcl
add
add
push
lea
push
or
xchg
cwtl
and
adc
out
pop
data16
or
les
inc
sbbb
loop
sbb
nop
icebp
cmc
adc
cmp
insb
xchg
sbb
pusha
pushf
cld
call
js
shl
dec
mov
jecxz
fstp
adcb
inc
sub
add
xor
mov
mov
add
dec
or
leave
jne
mov
inc
cmp
mov
rolb
mov
xor
lods
sub
jmp
sub
add
sbb
iret
xorb
into
aas
fnstsw
cmp
mov
add
stos
mov
sbb
sub
sbb
mov
ja
stos
xor
cmp
shlb
add
jae
adc
call
js
js
adc
jge
sub
dec
stos
je
mov
push
xchg
jmp
cli
test
dec
inc
mov
push
add
outsb
rolb
jmp
jp
cmp
pop
push
rclb
lock
in
bswap
in
sahf
sahf
xchg
ja
iret
in
loope
xchg
gs
dec
push
xchg
fisttps
loopne
cmp
xor
adc
pusha
jns
mov
pop
add
add
jb
icebp
imul
test
mov
xor
and
ret
xor
add
xchg
add
dec
inc
and
mov
adc
jne
out
dec
mov
iret
jne
sub
jmp
hlt
lods
clc
adc
mov
dec
mov
jle
fs
incb
pop
and
sbb
sub
or
divps
dec
mov
push
push
xor
dec
out
mov
xor
fsubs
jp
add
jg
sub
sub
dec
sbb
movb
sarb
push
mov
add
xlat
and
dec
and
lock
ret
jae
pop
push
adc
das
inc
inc
test
std
xchg
bound
test
shl
pop
mov
out
xor
or
adc
push
push
pop
mov
stos
hlt
aas
or
ds
cld
mov
ljmp
rclb
mov
out
xor
mov
clc
inc
push
fisubs
es
push
leave
daa
fstpl
jmp
and
test
adc
and
hlt
xor
roll
pop
add
ja
mov
pop
lcall
adc
out
psubd
pop
add
sbbb
push
icebp
inc
rolb
xor
jle
sub
std
sub
pop
inc
test
out
pop
add
into
mov
or
or
or
daa
jp
rolb
mov
dec
das
mov
int3
lret
daa
lea
loope
out
add
shl
xor
mov
popa
out
lret
nop
xor
mov
sarl
out
es
cmp
or
jmp
cmp
repnz
test
mov
adc
in
mov
adc
mov
adc
dec
mov
outsl
mov
add
push
mov
xor
add
and
lret
subb
cmpps
push
fcoms
shll
daa
xor
mov
ljmp
add
xor
inc
sbb
clc
outsb
mov
xchg
loop
inc
dec
jnp
lds
or
movsl
mov
adc
movsl
xchg
adc
mov
cmpsb
sub
pop
daa
cmp
sub
ljmp
push
ds
imul
and
sbbb
lea
fildll
roll
mov
jmp
loope
push
inc
push
sub
inc
or
or
cld
in
testl
js
insl
or
or
ja
dec
dec
dec
pushf
imul
stos
scas
jb
daa
ja
push
mov
fmull
and
mov
jnp
lret
test
push
ret
adc
cli
std
clc
jne
aas
jle
mov
and
js
push
mov
in
into
aas
subl
push
sbb
fiadds
cs
xchg
lcall
mov
mov
sub
lods
bound
rclb
imul
das
out
or
daa
das
sbb
lahf
xor
setge
pushw
stos
mov
push
and
negl
ret
push
lret
iret
cmp
pop
adc
jmp
sub
push
jle
jmp
pop
cmp
dec
hlt
je
dec
push
mov
xorb
and
xlat
rcrb
sbb
icebp
repz
rorl
out
push
jmp
orl
pusha
lea
adc
je
popa
jmp
popf
into
lahf
jo
push
pop
negb
add
add
mov
adc
xlat
and
jmp
push
sbb
stc
pop
mov
jns
testl
es
pop
sahf
inc
arpl
and
push
addb
jmp
movsb
cmp
enter
pop
ss
adc
daa
call
mov
cmp
pop
lods
sahf
or
pop
lods
add
je
aas
pop
add
sub
sub
push
cmc
jno
rcrb
adc
shrb
not
dec
add
pop
rorb
in
data16
push
push
pop
mov
jp
sbbb
inc
mov
dec
jl
or
jo
jo
mov
insb
mov
popf
popf
rolb
mov
add
cmpsb
popa
xchg
inc
push
pop
pop
mov
dec
mov
xchg
imul
mov
pushf
jbe,pn
dec
cmpsb
data16
inc
fstps
mov
and
sti
cmpsb
mov
sub
sub
in
mov
xor
inc
cmp
push
dec
outsb
insb
cltd
xchg
fisttps
in
scas
xlat
inc
mov
cmp
mov
sub
lods
sti
mov
or
adc
add
paddusb
adc
lret
mov
aad
ficoml
aam
sbb
sbb
jp
scas
rol
or
mov
ljmp
pop
pusha
scas
pop
mov
lret
js
ds
test
popa
add
pop
mov
or
pop
cmp
in
pushf
std
aas
sbbl
inc
sub
cmp
jo
inc
push
jmp
test
mov
pop
int3
sub
ds
mov
cli
cmpb
jl
loop
std
xor
or
fucomip
add
inc
adc
fdivl
push
sub
das
sbb
insb
mov
out
pushf
jp
sbb
rorb
out
arpl
xor
jle
loop
dec
sub
push
add
ret
pop
aam
fscale
pusha
xchg
pop
outsl
movsl
jle
mov
inc
test
add
aaa
pop
mov
push
add
js
pop
or
mov
je
sub
add
pop
jmp
in
pop
jb
pop
mov
sarb
lret
and
popf
sub
fisttps
push
add
push
and
add
mov
into
xchg
or
push
movups
or
mov
and
push
outsb
vrcpss
jge
mov
mov
cmpsb
fistpll
inc
add
mov
lds
and
cmp
jmp
sub
pop
mov
cmc
cld
loop
mov
std
imul
daa
xor
jno
add
cmc
xchg
mov
adc
popl
mov
sbb
test
insl
or
xchg
rclb
aas
addr16
push
sbb
sbb
cmp
test
mov
push
or
dec
aad
sub
dec
mov
ja
mov
push
lods
in
add
in
jne
dec
data16
addb
fistpll
lret
jo
pop
and
mov
push
add
xor
repz
and
roll
aam
xchg
xor
push
pop
and
jmp
loopne
sub
out
cmc
enter
scas
call
and
add
dec
mov
cmc
les
adc
stos
mov
push
mov
rol
aas
iret
xor
xor
sub
or
lea
ret
mov
clc
add
pop
push
inc
loope
sub
in
addr16
push
in
lea
loope
inc
shll
ljmp
xor
pop
pop
stos
bound
jnp
cli
sub
jmp
push
sub
xor
pop
cmc
push
shr
pop
sub
and
cmp
addb
jl
or
or
dec
and
cli
rcrl
ljmp
pop
jne
sub
add
mov
pop
and
push
push
mov
sbbb
and
repz
jmp
mov
ljmp
std
mov
pop
add
jne
aam
jle
mov
pop
cmp
or
or
pop
fildl
sub
sub
fld
pop
cmp
stos
xchg
out
incl
pop
sub
cmp
pop
mov
pop
ret
or
and
sbb
loop
and
cmovp
jle
mov
repz
ret
inc
mov
mov
not
and
sbb
and
pop
mov
jbe
std
pop
add
mov
pop
addb
xchg
inc
ret
jne
or
lock
fs
leave
xchg
or
rorl
inc
adc
leave
shll
in
aam
adc
ret
pop
pop
xorb
pop
sub
mov
or
call
cmp
aad
in
mov
fdivl
cltd
cmp
popf
leave
mov
push
or
and
nop
xor
divb
dec
xchg
mov
enter
popf
int3
inc
and
fwait
sub
push
idiv
insb
add
lret
sub
dec
cs
mov
pop
push
add
cmp
jecxz
adc
cs
fldt
in
fs
jle
mov
fucomp
add
negl
movsl
paddd
sti
sbb
push
xor
mov
mov
pop
add
mov
sub
cmp
mov
mov
test
mov
xchg
pop
out
sub
jnp
daa
jo
hlt
xor
push
fs
xor
sbb
and
inc
cmp
jl
cmp
insl
pop
add
cld
mov
or
repz
hlt
jnp
iret
cmovo
mov
dec
jb
pop
inc
orl
das
cmp
sub
push
pusha
mov
ret
repz
stos
and
popa
jo
leavew
aaa
icebp
aam
push
cmp
pop
adc
ljmp
and
adc
popa
push
rcr
shlb
mov
test
jmp
sub
es
subb
std
pop
add
stos
pop
dec
lret
xchg
repnz
jmp
push
inc
add
push
sub
sbb
pop
jmp
adc
jns
lods
dec
cmp
mov
cmp
testl
out
cmp
mov
cmp
ret
aam
and
jle
ret
adc
cmp
inc
adc
dec
pop
sti
push
pop
push
adc
pop
test
mov
jp
add
cmp
adc
fildll
push
cli
ds
dec
fisubrl
and
repz
and
xor
jo
jmp
imul
push
in
imul
inc
jo
add
lods
dec
jge
add
or
out
add
lret
add
shr
and
or
roll
xchg
mull
mov
jge
adc
bound
or
pusha
add
outsl
test
inc
lahf
ficompl
or
fisubrs
pop
sbb
in
sar
cmp
sub
add
loop
pop
mov
xchg
mov
dec
inc
push
fcomps
in
fisubrs
sbb
dec
daa
adc
js
and
shrl
cmp
adcb
push
cs
push
cmp
and
or
fdivs
scas
cmp
add
jmp
or
and
push
jo
adc
dec
pop
mov
inc
pusha
push
jae
sub
pop
cs
pop
add
dec
dec
outsb
shll
cmpsl
adc
and
enter
push
jno
push
jo
cmp
sub
mov
lods
push
mov
pusha
mov
stos
aam
jnp
cmp
imul
add
enter
push
data16
fwait
pop
lock
mov
mov
add
xor
loopne
pop
imull
daa
pop
mov
mov
and
sub
psadbw
std
imul
sub
mov
push
push
push
stos
outsb
add
cmp
and
push
and
hlt
add
push
adc
inc
cmp
cmpb
shll
jmp
ljmp
into
jae
in
dec
sub
or
addb
je
pop
or
inc
xor
inc
sbb
loop
dec
lret
aam
xchg
sbb
es
jb,pn
scas
push
das
lods
out
inc
push
dec
daa
add
mov
ffreep
mov
aaa
in
out
cmpsl
subl
das
test
pop
out
mov
iret
in
push
fstps
ja
jl
mov
cmp
pop
lea
ja
fnstsw
sbb
pop
jne
and
push
mov
shr
push
mov
add
out
or
jmp
or
dec
nop
or
in
push
aaa
mov
pop
push
nop
mov
aad
int
mov
mov
and
inc
mov
and
jge
loope
ficomps
mov
mov
pop
pusha
mov
adc
fcomp
sbb
jge
jmp
rorl
sub
jns
ds
pop
repnz
filds
ds
and
jmp
add
in
es
shll
add
sub
sub
sub
push
push
into
das
or
mov
jecxz
dec
bound
push
jmp
pop
jg
fistl
shll
je
sti
cmp
mov
push
stos
mov
stos
push
subb
push
add
cld
rclb
fists
rolb
or
dec
ret
mov
inc
arpl
lods
ss
adc
andl
sub
pop
stos
arpl
push
jne
cwtl
in
pushf
std
or
pop
out
nop
mov
push
jmp
mov
rolb
stc
add
xorb
push
pop
dec
mov
dec
pusha
shlb
sub
mov
inc
or
push
add
or
adc
mov
cld
imul
in
add
mov
dec
xchg
loopne
pop
sub
sub
je
add
ljmp
cmp
push
jmp
mov
sbb
lret
sub
add
test
and
fcompl
dec
xchg
jb
pop
out
push
xor
imul
repnz
arpl
imul
cwtl
dec
mov
cmpl
das
inc
mov
add
fisubrl
test
inc
xor
popa
mov
dec
mov
sahf
push
pop
mov
and
shll
movsl
lds
sti
cwtl
xor
add
jmp
dec
and
dec
cmc
mov
pop
add
ljmp
movsb
roll
rorl
pop
imul
xchg
and
sub
pop
xchg
and
inc
test
lret
mov
cmp
fwait
dec
mov
mov
popf
popa
sbb
and
mov
pop
pop
out
add
lds
dec
sub
in
nop
mov
jmp
ja
inc
adc
push
pop
and
movsb
imul
cmp
push
push
out
sub
mov
test
jmp
je
data16
out
fmuls
jl
lahf
in
hlt
and
or
test
adc
xchg
or
push
sub
and
mov
outsb
dec
sti
jne
mov
not
jp
ret
out
or
dec
jmp
adc
xchg
add
add
cmc
sub
call
mov
dec
inc
mov
bound
insl
pop
fdivs
jge
aad
mov
into
repnz
xor
cltd
or
in
add
outsl
inc
in
sub
sbb
add
scas
adc
inc
inc
cltd
inc
push
decl
add
or
jmp
mov
mov
xchg
xor
pop
cwtl
aad
or
sub
jmp
mov
xchg
pop
lcall
pop
add
adc
neg
jb
push
popa
push
mov
cwtl
mov
pusha
dec
repz
adc
sbb
roll
sub
lock
push
mov
dec
sti
call
outsb
push
stos
test
sub
nop
stc
mov
adc
sbb
icebp
cs
mov
fildl
add
jmp
lods
mov
clc
aad
or
pop
adc
fmul
xchg
add
sti
xor
and
fsts
push
adc
in
add
arpl
pop
les
cvtdq2ps
cltd
adc
or
inc
rol
lods
sbb
sarl
gs
fs
mov
inc
sarb
push
sub
outsl
mov
mov
sbb
sbb
fists
push
push
push
insb
sbb
dec
dec
mov
xor
adc
ds
shll
lods
and
or
push
inc
or
jno
shl
dec
iret
notb
sbb
mov
push
dec
pop
aad
aas
adc
jnp
push
push
mov
testb
mov
shl
push
jecxz
in
int
and
in
xchg
repz
sub
cmp
or
insb
jae
repz
jo
or
pop
pop
fwait
add
pop
inc
cwtl
mov
out
mov
cmp
fs
loopne
add
int3
mov
imul
cmc
add
jmp
repnz
push
and
js
and
stos
mov
jg
dec
jecxz
xor
in
movsb
and
inc
push
dec
adc
dec
idivl
pop
repnz
cli
fidivl
popa
std
cwtl
pop
aad
xor
lods
xchg
lds
or
push
aas
mov
push
xchg
sub
mov
pop
divl
jp
js
ret
pusha
faddl
add
or
mov
call
mov
or
mov
das
sbb
jle
cmc
jbe
sub
pop
cmp
xor
addr16
sbb
add
dec
mov
mov
xchg
cmp
sahf
jne
xor
push
fists
jl
fiadds
sbb
inc
mov
push
int3
dec
push
add
in
add
call
xor
mov
cli
es
xchg
xchg
sbb
out
scas
in
xor
je
pop
pop
sub
dec
out
sbb
clc
mov
inc
je
rorb
jle
mov
lahf
enter
adc
cmpsb
push
scas
mov
stc
and
pop
test
sti
repz
push
mov
out
pop
sbb
fs
sbb
pop
sub
subb
push
mov
movsl
push
dec
jmp
inc
icebp
fisubrl
sbb
incb
lods
and
inc
mov
cmpsl
aas
pop
and
push
mov
lods
xchg
and
dec
pusha
push
mov
push
push
lock
sbb
xchg
test
cmpsb
jg
test
adc
xchg
mov
jne
pop
xchg
add
imul
shlb
mov
add
inc
loope
out
sub
xchg
jl
or
adc
and
lahf
mov
out
sub
addl
adc
stos
loop
pop
cmp
cmc
cli
mov
repz
or
das
xor
xor
das
jns
ret
xchg
sub
push
shll
insl
or
push
pop
adc
jo
loopne
jmp
xor
pop
jne
dec
or
arpl
mov
imul
xor
sub
rorb
dec
or
push
or
lret
hlt
jbe
add
enter
lods
ljmp
mov
ret
hlt
adc
inc
jmp
call
mov
inc
ret
sbb
imul
sbb
push
jo
in
test
test
imul
cld
cmp
daa
hlt
push
add
out
pushf
jge
and
jmp
mov
aas
es
movsb
xchg
js
or
lea
div
ret
cli
push
push
jmp
add
xchg
adc
jno
idivl
mov
lea
xchg
push
das
rcrb
loopne
test
jmp
mov
inc
roll
jno
jmp
mov
add
addb
aad
add
mov
cmc
sbbb
sub
je
inc
jg
xor
ret
mov
fs
pop
adc
lcall
mov
shlb
jmp
daa
neg
push
jne
and
xchg
pop
pop
cmp
fstps
subl
push
mov
or
dec
pop
and
and
xor
xor
andb
sbb
or
pop
cld
lods
add
and
dec
jg
fcomps
mov
sbb
pop
sbb
pop
mov
int
adc
add
cmp
outsb
dec
addl
add
push
adc
sbb
testb
jle
test
sub
push
in
ret
cmpb
sub
out
scas
adc
push
pop
sub
pop
xor
in
dec
adc
xchg
pop
mov
xchg
pop
clc
adc
filds
xchg
and
or
push
cmp
outsb
push
push
repnz
insl
or
roll
loopne
jle
cmp
add
or
pop
js
std
inc
test
call
inc
cmpsb
or
mov
sbb
adc
stos
loop
jns
loop
cli
sbb
aad
sti
test
jge
xor
or
scas
and
loope
das
mov
add
lahf
mov
cmp
push
pop
inc
sub
mov
adc
mov
lahf
clc
jne
jo
push
mov
and
push
pop
cld
mov
popa
daa
daa
ja
loop
pop
xor
fiaddl
orl
xchg
lret
cmc
pusha
push
jnp
pop
mov
fldl
test
pushl
mov
jb
mov
lret
push
in
or
sub
sbb
je
mov
xor
jne
cwtl
ds
stos
mov
mov
push
cltd
jmp
xor
cmp
lret
inc
bound
and
ljmp
dec
inc
adc
adc
ljmp
mov
xchg
cltd
mov
mov
sub
fdivp
jg
pop
sub
and
inc
adc
pop
mov
ja
cmp
arpl
mov
stos
lret
cmc
and
push
xchg
jns
push
pop
jmp
cmp
ficoms
cmpsl
pop
sbbb
pop
add
jle
add
or
or
pop
in
dec
pop
jmp
jnp
and
mov
inc
insl
add
pop
mov
enter
adcl
addb
inc
xchg
cmp
add
test
add
push
mov
dec
cli
mov
dec
loop
ja
stc
cmp
lds
adc
sub
and
add
push
mov
and
sub
rcrb
dec
enter
ret
loop
xchg
sub
test
arpl
scas
xchg
add
pusha
dec
sub
mov
pop
pop
je
inc
sub
filds
mov
mov
jl
pop
push
fimuls
repz
fbld
popa
lods
or
adc
add
sub
pop
or
stc
push
and
shlb
addr16
adc
push
mov
jb
or
mov
aas
pop
ret
adc
pop
mov
mov
pop
xchg
sub
or
jb
pop
xchg
mov
mov
mov
jne
dec
add
stos
jp
add
push
cmp
xor
jp
std
xchg
sarl
sub
xchg
shl
push
add
sub
bound
push
mov
jle
scas
push
cli
out
gs
and
inc
std
inc
inc
or
sub
aad
xchg
jbe
cmp
testb
fstps
dec
jmp
pop
sub
pop
mov
into
rolb
popf
repnz
cs
pop
or
pop
or
ja
xor
scas
pop
push
cs
inc
sub
mov
cli
cmp
pop
das
xorb
jle
jbe
hlt
adc
in
pop
add
dec
sub
or
xor
scas
cwtl
leave
cmp
xchg
lea
add
xchg
add
add
mov
cs
rclb
dec
mov
add
push
push
sbb
xor
idiv
lret
push
cmpsb
loopne
jno
fld1
ja
sbb
push
jp
orl
addb
in
test
jo
movsb
jo
cmp
mov
shr
jno
testb
pop
add
mov
or
iret
fimuls
std
or
pslld
add
sub
dec
leave
jbe
inc
pop
enter
add
pop
js
add
aad
in
das
fstl
mov
mov
add
push
shl
adc
iret
mov
xchg
in
add
xor
xchg
inc
psubw
lock
cwtl
or
push
or
pop
ja
and
cs
ficomps
aam
inc
push
mov
sub
popa
adc
mov
cmp
xor
flds
mov
lret
stos
jmp
jmp
sub
out
push
adc
or
mov
rclb
adc
in
adc
xchg
ficoms
mov
shr
fsubrs
addb
lret
jnp
inc
mov
dec
sub
jle
push
push
push
dec
xchg
push
jl
mov
jg
leave
ret
jnp
sbb
repz
enter
or
mov
loop
les
pop
inc
clc
dec
mov
cmp
ret
pop
mov
or
aam
xor
nop
mov
cmp
and
mov
movsb
mull
cli
xchg
out
push
mov
cld
pop
iret
or
int
sbb
dec
mov
dec
clc
int3
pop
daa
arpl
adc
out
push
mov
push
rol
push
call
inc
jo
rclb
jmp
cmp
mov
mov
pop
cltd
pop
pop
jecxz
sub
in
jnp
xor
jmp
bound
pop
inc
ffree
imul
test
pop
mov
mov
mov
or
pop
add
int3
out
insl
loopne
pop
push
pop
push
fdivr
and
mov
push
fistps
adc
ja
pop
xchg
adc
ja
mov
ret
lahf
push
ret
pop
movsb
loop
adc
mov
and
jmp
xor
int
outsb
shrb
xchg
loope
clc
and
call
daa
jg
cmp
ret
fs
inc
imul
jmp
sub
pop
mov
adc
pop
sbb
testb
out
fsubl
and
leave
cmp
or
int3
push
lahf
in
cmp
pop
or
or
push
pusha
push
hlt
xor
sub
fldenv
test
add
push
or
and
mov
or
xor
pop
pusha
and
bound
mov
stc
push
jmp
mov
dec
pop
mov
push
mov
loopne
sub
mov
jb
adc
or
add
dec
loopne
and
jmp
rcrb
dec
sbb
shlb
pop
xchg
loopne
sub
xor
or
and
jne
dec
and
scas
lcall
divb
sar
sub
mov
daa
pop
cld
fs
pop
in
xchg
dec
scas
sarb
mov
add
jmp
mov
daa
ret
and
ret
jmp
jnp
xor
icebp
pop
mov
lds
pop
push
mov
call
or
stc
and
push
shlb
leave
rolb
in
rorl
cmp
gs
dec
xchg
adc
stos
cli
iret
fstps
sub
inc
aad
icebp
pop
inc
or
mov
cli
dec
push
test
mov
jmp
or
inc
jb
andl
cmp
pop
icebp
dec
jmp
dec
mov
out
adc
mov
sub
adc
dec
mov
test
push
faddl
test
in
stos
cmp
mov
leave
sti
or
jbe,pn
cmc
adcb
je
jmp
mov
cmp
or
jbe
pop
cmp
in
add
pop
cli
sbb
fsub
mov
filds
add
divl
pop
lret
ret
lahf
inc
cltd
sub
and
and
xchg
loope
push
jno
jo
xor
mov
ljmpw
mov
insb
das
mov
mov
xor
cli
pop
xchg
dec
sbb
repnz
mov
push
out
leave
xchg
fwait
mov
push
push
push
lods
dec
out
addr16
rorb
inc
mov
or
mov
jns
add
mov
push
push
push
dec
xor
inc
push
mov
rcr
es
mov
cwtl
pop
pop
add
mov
or
add
and
cmc
xor
in
push
lret
xor
cmpl
popf
pop
sbb
rcll
inc
in
jmp
mov
inc
xor
mov
das
jnp
dec
cwtl
shr
cmc
les
mov
cmc
sbb
mov
clc
jne
adc
pushf
pop
popf
lods
xchg
sub
out
mov
adc
lds
or
mov
icebp
jle
mov
bnd
mov
shrl
aaa
dec
dec
push
dec
cmp
addb
pop
ret
mov
and
cmp
xor
outsb
neg
movsw
jmp
adc
mov
sbb
pop
jg
jle
movsl
mov
cmpsl
popf
roll
xchg
inc
fadds
sbb
or
xor
shll
and
int
mov
not
add
cld
pop
nop
push
push
pop
adc
lret
fstl
pop
loop
push
add
add
push
sub
jmp
in
daa
rcll
movsb
ret
stc
orb
jle
sub
sbb
stos
and
cltd
push
pusha
mov
dec
xor
movsl
rcrl
push
int3
std
jmp
cmpsb
add
add
ror
ficoml
sbb
dec
add
or
add
in
out
cvtpi2ps
adc
jmp
add
ret
loope
mov
lods
dec
std
mov
push
push
mov
or
aaa
inc
mov
cmp
dec
push
test
inc
dec
xchg
aam
cwtl
jnp
daa
mov
inc
xor
xor
imul
add
inc
xlat
outsl
sbb
or
ja
mov
pop
and
aaa
inc
push
xchg
xchg
lahf
pop
rclb
orl
stos
mov
subl
sbb
sub
push
jp
pop
test
std
jmp
lods
xchg
and
dec
add
jno
xchg
ret
push
repz
add
or
lahf
push
mov
mov
mov
add
lea
adc
mov
add
cmp
shlb
arpl
int
push
push
pop
jmp
outsl
aad
mov
add
cmpsl
gs
jne
lcall
pop
sub
lret
push
fidivrl
scas
mov
adc
sti
sub
mov
mov
add
sub
pop
in
aas
and
iret
shlb
gs
xor
xchg
and
notl
cmp
pop
sub
sbb
sbb
adc
insb
or
adc
jmp
jg
addr16
mov
or
cmp
and
and
mov
daa
adc
jne
lock
mov
pop
aas
nop
imul
cwtl
ret
xchg
mov
xor
or
cmp
bound
pop
push
jne
jo
pop
in
loope
imul
mov
ja
mov
mov
ret
insl
push
ret
lcall
ljmp
lret
add
jg
push
push
mov
jge
sub
push
dec
or
mov
or
stc
dec
push
mov
push
mov
gs
push
pop
and
in
sub
je
testb
sub
xchg
lods
xor
pop
mov
lods
in
fbld
cs
sub
adc
or
dec
jle
scas
sub
sub
test
and
xlat
popf
and
leave
cld
daa
jmp
imul
push
cld
sahf
mov
xchg
mov
das
pop
stc
mov
sub
cmp
mov
out
aaa
daa
xor
push
mov
cmp
imul
and
inc
mov
daa
or
rcrb
sbb
lds
ficoml
into
pushf
les
out
xor
roll
inc
and
pop
icebp
or
cs
ffreep
in
sbb
in
cli
pop
inc
sub
pushf
and
xor
pop
push
lock
mov
das
pop
inc
xor
pop
sub
lret
ret
or
pop
ljmp
daa
pop
sti
movsb
cmpsl
cmp
jbe
aas
and
outsl
rol
sub
lock
mov
sub
dec
pop
mov
sub
les
sub
jecxz
pop
cmpsb
jne
push
pop
addr16
repz
push
daa
jp
add
cmp
in
or
push
mov
fisubs
mov
and
push
add
sarb
leave
add
aam
outsb
das
sub
fmuls
addl
adc
jo
pushf
sbb
dec
je
clc
lcall
sahf
adc
pop
mov
jae
sbb
ret
pop
stc
fs
pop
sub
inc
cmpl
push
adc
sub
cmp
push
pop
dec
adc
xchg
add
movsl
sbb
or
xor
cmc
pop
mov
and
dec
pop
jns
cmp
xor
lahf
das
and
test
jmp
out
addr16
mov
fmull
pop
lret
jns
xor
lock
jmp
ss
mov
push
decb
adc
mov
ss
adc
ret
jno
shll
mov
pop
data16
mov
or
stc
inc
adcb
aad
popf
imul
pushl
sbb
rcll
iret
push
cmp
test
aam
rclb
or
out
mov
add
add
cmp
cld
repz
cmp
das
mov
jp
dec
pop
dec
xchg
adc
xchg
mov
jecxz
sub
add
jle
pusha
in
cmpsl
dec
push
mov
dec
jmp
push
ret
jmp
neg
outsl
decb
add
dec
repnz
cmpsl
mov
cli
cmp
pop
mov
xor
xchg
mov
loop
fs
arpl
push
jno
cltd
or
adc
mov
push
inc
ret
fcmovb
mov
dec
outsb
lahf
hlt
jae
mov
ja
mov
xchg
add
mov
jmp
xchg
mov
mov
adc
out
xchg
or
mov
subl
adc
jmp
rol
jg
cmp
xchg
cs
pop
js
sub
or
jo
xchg
ja
loopne
and
xor
ss
add
inc
pop
cmp
sar
js
in
icebp
add
cmp
imul
pop
cmp
dec
call
add
pop
shlb
or
inc
fs
or
mov
jo
arpl
sbb
mov
adc
nop
aad
sqrtps
sub
fisubs
push
pop
jmp
push
xchg
xorl
pop
sbb
or
outsb
and
ret
add
pop
js
adc
aam
cmp
aaa
dec
cmp
xor
orb
push
xor
cld
sub
pop
xchg
fisttpll
orb
rorl
leave
stos
aaa
jbe
shl
adc
mov
fstpl
int3
push
xor
pop
jmp
xchg
cmpsl
frstor
dec
xchg
fisttpll
data16
testb
xor
push
sbb
ficomps
pop
dec
jmp
dec
addb
mov
ret
inc
rcrl
lcall
in
out
push
push
jne
inc
shl
pop
xor
das
clc
scas
pop
jle
int
int3
lds
xor
jnp
imul
ret
imul
jnp
lea
scas
sub
pusha
xchg
roll
fisttpl
sti
fsubrs
stos
cmp
pop
movsl
dec
and
out
pop
xchg
divl
sbb
mov
gs
cmp
sub
inc
stos
es
test
sbb
outsb
imull
lcall
cmc
xchg
pop
and
fcmovnbe
into
dec
xchg
mov
xor
lods
mov
fcmovnu
mov
mov
hlt
pop
cmp
inc
aaa
jmp
inc
pop
xor
clc
scas
xchg
subl
pop
mov
adc
pop
dec
jne
push
movsl
pop
mov
and
jle
cli
push
fdivr
pop
xor
push
lds
pop
bound
jmp
mov
pop
lds
or
jecxz
les
pushw
jecxz
jns
add
dec
nop
jae
cmp
int3
stc
daa
push
add
dec
jnp
sub
xchg
pop
rorl
into
sahf
and
fisttpll
mov
testl
pop
and
cs
inc
jl
mov
xor
or
sbb
lods
adc
ror
sub
lods
pop
pop
push
clc
inc
in
mov
push
cmp
mov
movsl
or
sub
mov
xor
xor
adc
out
xchg
inc
imul
add
xor
not
mov
call
push
sbb
aad
cmp
mov
sbb
imul
test
dec
fcomps
xchg
pop
push
push
xor
pusha
ret
rcrl
push
scas
mov
dec
sti
aad
cld
imul
jmp
cmc
cltd
and
pop
or
pushf
xor
cmpsl
dec
sub
sub
dec
xchg
sbb
or
adc
out
clc
and
jmp
push
mov
lret
mov
sbb
cmp
or
ret
adc
mov
insb
jns
subb
inc
pop
nop
inc
movsb
add
add
add
enter
sbb
or
add
adc
inc
lret
fcomip
cli
or
jg
loope
jl
in
lock
push
jb
rol
adc
add
sahf
pop
inc
cwtl
std
or
leave
push
test
or
cmc
add
jmp
add
rorl
adc
std
cmp
adc
pop
loop
out
jne
popf
pop
mov
mov
ljmp
out
cmp
jmp
xchg
jge
fisttpll
icebp
frstor
mov
sbb
add
sub
jnp
leave
or
addl
neg
push
pusha
stc
dec
or
filds
mov
mov
leave
leave
pop
into
rcrb
sub
pop
aas
mov
xor
pop
and
jb
aas
enter
jl
push
push
mov
sbb
jo
xlat
inc
xchg
add
sub
inc
add
add
inc
or
int
je
add
mulb
mov
inc
adc
adc
decl
mov
icebp
or
fdivrl
ja
test
and
cmp
or
and
lds
sbb
and
cld
cmc
mov
loopne
mov
stos
push
fisubl
shrb
movsl
dec
rol
inc
or
ss
push
out
or
push
pop
pop
xchg
imul
adc
lds
lock
aad
les
in
lret
in
stc
std
add
test
mov
cmc
sub
test
das
sar
add
mov
push
jecxz
int
icebp
rcrl
push
lds
test
shll
sbb
roll
hlt
in
mov
pop
addr16
leave
out
cmpsb
loop
xchg
add
popa
cmp
or
sbb
dec
in
loopne,pn
mov
cmp
or
out
sbb
push
in
sbb
test
adc
or
push
leave
pop
cmp
adc
xchg
idivl
or
test
pop
aas
or
ret
adc
add
rclb
mov
and
inc
and
push
sub
cmp
iret
shll
push
imul
bound
fcoms
pandn
sub
cmpsl
dec
pop
add
add
hlt
sub
adc
push
mov
add
cmp
jmp
sbbb
pop
icebp
pop
sub
cmp
movsl
jo
sub
rclb
xchg
jp
movsl
dec
push
mov
or
sub
mov
cmp
adc
xor
push
lret
lret
add
adc
jmp
adc
rorb
rcr
xlat
xchg
cmp
out
and
xor
cmp
subl
xor
or
outsb
repz
test
push
dec
mov
adc
pop
push
jge
and
aad
pop
fstl
push
je
pop
ja
stc
xor
nop
mov
xchg
push
out
leave
sbb
das
cmp
mov
push
inc
xor
sar
cmp
pop
repnz
pop
testl
pusha
or
sbbl
add
pop
mov
add
mov
sub
fisttps
mov
sub
repz
in
mov
push
xor
and
les
fld
cld
stos
add
popa
dec
inc
imul
mov
loop
nop
filds
loopew
arpl
adc
mov
out
push
roll
mov
cmp
sub
pop
pop
pop
jnp
mov
repz
into
jecxz
shr
xor
jmp
mov
sub
jmp
dec
push
mov
int
xor
loope
add
pop
and
add
jg
mov
jle
pushf
in
and
sub
adc
push
cmp
js
outsb
mov
lds
idivl
in
jle
or
cmp
push
not
jle
inc
mov
ret
sahf
xor
and
dec
inc
popl
rorb
inc
test
popf
xlat
add
jp
mulb
and
nop
gs
push
inc
stc
or
cli
jmp
or
in
stos
lret
fisttps
add
xor
in
les
push
stos
mov
inc
dec
das
loope
xor
mov
xchg
fdivs
jl
insl
je
sbb
mov
mov
jg
fwait
mov
lret
cmpsl
dec
or
outsb
dec
subb
push
sbb
in
rclb
aam
push
movsl
testb
xor
cmc
mov
rclb
pop
cwtl
jp
mov
push
push
add
xchg
mov
xor
nop
adc
xor
jmp
xor
out
loop
sub
pushf
ret
pop
pop
aaa
pop
pusha
lods
xor
cmp
push
enter
adc
into
clc
and
mov
mov
shl
jo
in
push
pop
jmp
hlt
dec
sbb
movsb
or
sysexit
jns
add
sbb
dec
pop
sub
push
loop
int3
adc
inc
add
dec
add
dec
inc
adc
or
movb
push
jno
add
repnz
cwtl
pop
outsl
int
in
and
dec
add
dec
push
shr
push
mov
or
rcll
add
mov
sbb
js
fimull
in
pop
pop
and
cld
dec
sti
sub
cld
mov
xchg
test
fs
push
jmp
inc
or
mov
shl
loop
adcb
aaa
daa
aad
pop
and
xchg
enter
lret
loope
ds
bound
cmp
sub
push
movsb
sti
outsb
push
loopne
movsb
cwtl
push
dec
scas
cmp
arpl
xchg
mov
add
int
mov
subb
jg
pop
and
and
roll
dec
lahf
ljmp
mov
xchg
arpl
and
out
jns
mov
xor
js
cli
or
cmp
into
xchg
cmc
mov
into
push
bound
daa
cld
mov
xchg
pop
xchg
push
sbb
or
pop
xchg
insl
or
fsubrl
dec
push
pop
jns
xor
sub
mov
ret
pop
jle
cvttps2pi
negb
add
fadds
and
push
dec
clc
mov
std
mov
ret
repz
imul
sub
ja
sbb
jmp
fimuls
popf
data16
in
push
inc
mov
imul
movzwl
push
fs
or
pop
out
out
pushf
push
daa
pop
dec
or
mov
and
dec
xchg
loop
sbbl
fists
push
mov
sbb
adc
subps
push
pop
mov
sar
notl
or
adc
sahf
adc
clc
push
push
test
mov
or
sub
xchg
or
fdivl
out
xor
mov
jmp
push
mov
xchg
enter
fdiv
fsts
cld
push
inc
xor
xorb
jae
loop
cmp
jb
orb
movb
add
xchg
divl
pop
adc
push
mov
mov
aam
int
in
cli
jnp
dec
lods
cmpsb
add
or
push
cmp
lds
outsl
and
push
hlt
add
lods
jbe
xor
or
adc
ret
push
xchg
jecxz
xchg
pusha
fldl2t
and
mov
push
mov
or
in
loopne
popf
add
jmp
add
inc
leave
pop
adc
mov
add
sub
mov
xor
adc
push
mov
push
jge
lods
mov
add
push
push
test
fistps
pushl
cmp
test
jmp
ret
push
mov
xor
pop
fs
rolb
out
sbb
jge
fldl
push
cmp
jmp
rclb
test
push
push
scas
inc
mov
mov
hlt
repz
add
xor
inc
ret
mov
jle
mov
fsubrs
xchg
inc
jb
rolb
out
dec
adc
dec
and
jge
pop
leave
sub
in
or
lods
xchg
pop
mov
push
push
dec
push
push
xchg
cmp
popf
ds
pop
scas
js
mov
xchg
fsubs
pop
cltd
cmp
ja
cs
adc
out
or
mov
enter
xchg
out
mov
out
cmp
das
or
push
and
add
shl
jbe
jg
leave
les
outsl
pop
pop
jecxz
pop
jnp
movsb
sub
sub
and
ret
les
rcrb
cmp
mov
and
push
scas
dec
inc
pop
pusha
push
test
shr
cmp
jo
std
cmc
push
popf
scas
jb
pop
hlt
or
call
xor
cmpl
cmpsb
fcoms
mov
idivl
jo
or
and
inc
jge
pop
jb
fwait
jo
fldl2t
lret
imul
jo
imul
outsl
sub
cmp
pop
or
outsb
pop
cs
dec
mov
dec
out
xor
mov
push
or
push
in
test
cmp
mov
in
add
pushf
lods
sub
sub
adc
dec
pushl
mov
jl
add
cld
push
movsl
rclb
mov
xor
jne
or
aaa
data16
insb
inc
and
pop
push
and
jg
ret
dec
cld
mov
mov
or
iret
cmp
inc
mov
adc
cs
mov
in
jae
or
or
push
push
pop
push
push
shrd
push
jp
stos
fs
jmp
scas
mov
rcrb
fs
mov
push
or
pop
popf
cld
push
test
cwtl
xor
pusha
jae
jmp
ret
loop
sub
loop
push
mov
rolb
lds
repz
popf
mov
es
cs
lcall
iret
adcb
jb
cmp
ret
mov
scas
fs
add
es
and
or
mov
add
adcb
out
sub
xchg
loopne
xchg
movb
push
or
push
and
cmp
ds
sub
mov
jp
cmp
sub
je
cmp
inc
and
dec
push
in
lock
sub
pop
xchg
push
inc
ret
int3
jle
dec
loope
lds
adc
dec
sub
nop
pop
jg
push
sub
push
ret
push
xchg
ret
push
pop
jle
xor
lds
das
mov
sahf
jge
add
mov
jg
pop
dec
push
jecxz
mov
lock
push
or
add
pusha
stos
sub
dec
aaa
in
jae
fstpl
add
ret
or
jnp
arpl
imul
add
mov
mov
idivb
lds
sub
xlat
aaa
sub
and
or
pop
movsb
pop
in
inc
je
pop
mov
sub
sbb
xchg
cwtl
mov
pop
and
lock
mov
jmp
and
cld
push
inc
jmp
cmc
or
and
stc
ficoms
aaa
push
push
jbe
movsl
fwait
push
fnstcw
fwait
ret
jne
sub
aam
or
lcall
jmp
stos
addr16
dec
popf
clc
rcll
dec
shl
sbbl
icebp
jg
or
movsl
xor
cmovo
jne
fwait
mov
push
cmpb
pop
rorb
andb
jmp
dec
mov
aaa
scas
and
outsb
xorb
inc
shl
add
sub
or
rorl
push
ret
data16
pop
sahf
ret
jne
stos
shll
xchg
mov
aaa
loopne
in
cld
sbb
jmp
ds
loop
mov
inc
jg
sbb
mov
push
pop
pop
dec
inc
mov
aas
mov
sbb
mov
psubusb
out
scas
and
push
mov
add
pop
push
faddl
push
fisttps
pop
push
xchg
mov
leave
push
loope
in
movsb
pushf
lock
add
enter
jmp
gs
in
rorb
sub
push
adc
out
xchg
aad
sar
std
mov
mov
dec
push
add
out
int
pusha
gs
into
mov
lods
repnz
jbe
xorb
cwtl
pusha
popf
in
cmpl
inc
add
xor
cmc
scas
jns
cmpps
mov
in
repz
xor
and
sbb
ret
into
js
ja
push
imull
adc
jmp
pop
lods
repnz
mov
gs
bnd
movsl
pop
vdivsd
mov
ret
pop
out
cmpb
push
mov
cmp
and
flds
cmova
mov
enter
pop
ljmp
shl
adc
les
stos
fistpll
dec
hlt
pop
gs
sub
sahf
aas
pop
pop
add
xor
idivl
xchg
clc
daa
movsb
stc
insl
jmp
adc
add
das
xor
orb
cmp
add
popf
jle
push
sub
push
and
jo
daa
ret
or
icebp
jle
stos
or
push
scas
dec
or
filds
add
push
rcr
les
jmp
inc
aas
into
jmp
mov
push
dec
or
dec
sub
test
or
in
mov
mov
das
stos
imul
add
dec
leave
adc
nop
xchg
xor
stos
sub
push
xacquire
jnp
inc
push
sub
shrl
xchg
add
sbb
sub
lret
push
pop
xor
shr
push
add
sub
mov
or
sbb
jae
mov
push
movsl
jae
ds
repnz
shl
mov
sbb
pop
adc
mov
orb
ret
or
or
sub
jbe
push
pop
pop
add
cli
mov
scas
cwtl
or
je
shlb
jg
movsl
popa
nop
xor
sub
xchg
push
push
out
aaa
ss
xchg
push
push
xchg
cld
sub
sub
fwait
and
hlt
mov
or
dec
or
mov
add
negb
pop
icebp
test
pushf
dec
xchg
lods
lea
dec
mov
pop
add
push
mov
fimuls
leave
mov
movsl
push
lds
fs
cwtl
push
jmp
out
pop
add
add
jecxz
mov
xchg
add
add
push
dec
or
in
test
imul
std
inc
pop
daa
add
add
loope
jno
add
xor
jmp
fstpl
int
push
imul
or
xor
in
jl
scas
fdivs
mov
ret
dec
xor
cmc
and
sub
add
sarb
sbbb
pop
xor
das
loope
imul
xchg
push
fisubs
dec
sti
mov
pop
aaa
xchg
jl
jmp
and
add
clc
add
adc
pushf
dec
pop
cmp
inc
mov
jo
addl
popf
incb
pop
push
xchg
sub
or
jne
loope
sbb
data16
and
sbb
push
mov
stc
pushf
subl
push
cmp
orl
call
xor
sub
xchg
pop
or
pop
xchg
fwait
arpl
mov
lret
pop
mov
xor
dec
popa
sti
iret
aas
xor
in
or
in
ret
push
bound
notl
and
push
fistps
mov
jb
and
sub
cmp
mov
xchg
xlat
adc
popf
into
pop
and
mov
or
aam
add
xor
orb
ret
pop
cmc
inc
inc
and
out
std
pop
out
mov
fwait
jecxz
sub
and
roll
xlat
and
fadd
ljmp
sub
mov
in
cmp
cwtl
or
add
sti
xchg
cmc
add
jmp
sub
push
lods
test
or
jno
lcall
out
inc
out
jge
daa
shr
test
mov
leave
push
or
dec
adc
and
xchg
aas
jo
jne
movsb
mov
xchg
loope
js
or
outsl
jbe
fmul
add
test
rorb
push
sarb
sub
dec
adc
jmp
test
popf
rclb
ret
mov
popa
push
fidivs
mov
jb
and
nop
jp
xchg
push
imul
cmp
daa
mov
mov
sbb
lods
les
icebp
mov
cli
cmp
sbb
dec
jbe
sbbl
in
rcrb
outsb
lahf
inc
cli
xlat
fstps
pushl
add
dec
addr16
dec
push
add
lret
aad
sub
lods
mov
bound
shl
add
repnz
decb
dec
ja
mov
push
outsb
lret
outsl
fsqrt
aam
pusha
add
mov
mov
inc
ret
pop
sub
jp
or
sahf
enter
fsubr
mov
popf
xchg
insb
jl
push
loope
xlat
shr
push
xchg
add
push
ret
cmp
pushf
add
push
push
sbb
add
aas
jns
jne
mov
xor
shlb
or
and
sub
adc
mov
insl
movsb
add
pop
in
stos
and
out
add
xchg
sbb
neg
call
mov
adcb
jbe
or
pop
sub
mov
jb
xor
jns
in
push
mov
mov
jp
cld
sarl
loopne
lock
jbe
in
scas
ret
je
ret
test
pop
dec
ret
mov
mov
mov
mov
add
inc
jmp
adc
pop
daa
daa
xchg
and
arpl
fdivs
adc
pop
icebp
hlt
sub
cltd
adcb
push
mov
mov
daa
jl
push
and
mov
subl
mov
out
inc
push
leave
or
push
dec
xchg
and
into
inc
dec
push
mov
jmp
cmpb
cmp
and
jmp
ja
mov
addb
jl
sub
je
into
jl
leave
jo
iret
add
dec
das
dec
pop
jno
sti
insb
mov
daa
and
fistl
xor
push
loop
lret
fsubrl
xor
dec
cmp
sub
cmp
add
data16
or
dec
pop
pop
mov
nop
inc
sbb
cmp
adc
dec
adc
movsl
divb
pop
mov
fisubrl
subb
js
into
imul
cmp
pop
jg
push
mov
xor
cld
clc
subl
pop
add
cmp
lea
pop
jb
lods
js
arpl
pop
pop
lods
mov
jns
adc
sub
push
add
jmp
into
cmp
pop
pop
not
shr
cs
cwtl
ret
pop
push
add
cmp
mov
xor
push
shlb
sub
jno
push
sub
sub
mov
addb
push
inc
jbe
xchg
movsb
mov
xchg
dec
call
push
push
jnp
test
sbbl
shll
clc
dec
pop
add
scas
xor
rorb
and
inc
and
stos
adc
movswl
push
push
xchg
jo
jne
ucomiss
and
orl
sbbl
dec
enter
push
push
sub
loop
mov
jl
inc
pop
lahf
add
push
dec
nop
and
dec
pop
sti
sub
or
pop
mov
and
movsb
and
lds
and
adc
pop
sub
lret
push
or
mov
add
or
mov
ljmp
xor
inc
jae
dec
sub
jl
pop
mov
gs
jnp
les
xchg
add
push
std
leave
popa
jmp
cli
pop
cs
add
imull
sub
pop
xor
push
lock
enter
scas
sub
call
jno
sahf
mov
cmpsb
adc
or
ret
and
negl
aam
push
test
cs
lods
jo
pop
cmpsl
inc
cwtl
mov
std
xlat
sarb
daa
in
mov
test
jmp
in
mov
jl
mov
mov
xchg
cmc
or
push
xor
cmp
or
push
and
pop
push
stos
xor
sbb
jg
xchg
insl
sub
jo
fstps
fs
sahf
push
push
xor
jmp
push
xchg
les
mul
add
cmp
pop
scas
in
jg
lcall
or
and
xor
roll
imul
and
push
pop
mov
and
scas
mov
inc
inc
test
mov
out
test
sbb
add
push
loopne
int
add
lcall
or
xor
gs
das
in
fnsave
test
jmp
shlb
stos
pop
pop
mov
cmp
inc
mov
jmp
ljmp
jb
movd
sub
add
lret
cmp
stos
inc
and
push
lods
add
imul
loop
xchg
or
adc
and
cwtl
adc
imul
mov
call
cwtl
push
dec
xchg
adc
and
outsb
subl
test
test
push
adcb
dec
pop
adc
sub
das
push
into
popf
push
stc
or
pop
enter
add
cmp
inc
xor
mov
cmp
pusha
insb
pop
pop
shr
mov
mov
push
bound
std
cli
aaa
dec
xchg
mov
adc
clc
shll
outsb
sub
pusha
push
and
arpl
out
call
ss
in
outsb
sub
aam
pop
jmp
push
push
push
jge
mov
lahf
push
aaa
das
loop
lock
idivb
jnp
xor
xor
mov
int3
call
int3
xor
ja
dec
iret
inc
idiv
cmpsb
sub
test
cli
mov
orb
push
sub
inc
push
pop
neg
add
sub
sub
dec
jecxz
dec
sub
fs
cli
iret
cmp
jmp
jns
rclb
mul
pusha
movsl
pop
icebp
mov
lret
ds
mov
push
pop
std
add
push
mov
mov
push
pop
mov
cmp
and
push
push
pop
int
cmp
sbb
and
ffreep
pop
pop
bound
stc
sarl
imul
rclb
push
lret
xor
push
nop
adc
cmp
mov
add
xor
jo
mov
adc
call
stos
loop
daa
leave
roll
or
jg
sbb
sbb
pop
cmp
pop
mov
mov
loop
aad
insb
inc
mov
xchg
int
push
enter
sub
neg
or
pop
aad
jp
push
mov
push
out
and
out
cmp
std
jge
pop
xor
pop
sub
push
mov
cltd
jecxz
ds
push
mov
loope
das
mov
nop
mov
dec
ret
add
adc
inc
aad
lods
ficompl
add
jb
and
xchg
mov
and
in
in
and
inc
xchg
pop
add
jmp
fisubrs
jge
lcall
mov
push
mov
cmpsl
xchg
add
ret
cmc
jno
or
js
push
fistps
cmp
or
insl
pop
subb
dec
fisttpll
test
mov
arpl
mov
rcll
loope
ds
daa
adc
inc
in
js
inc
bound
sbb
xchg
loop
pop
call
je
sbb
repnz
or
add
jb
pop
sub
push
pop
stos
and
jg
ljmp
fcmovnb
jb
jl,pn
cltd
ds
pop
mov
cmp
inc
mov
or
dec
or
lods
add
test
js
dec
adc
ret
pop
pop
pop
adc
ret
pop
scas
xor
add
dec
addr16
and
popf
jmp
jb
daa
fcmovnu
push
push
imul
rclb
xchg
mov
cmpsl
cmp
fs
out
andb
xchg
mov
xlat
jmp
mov
rolb
loopne
xor
nop
lret
xchg
mov
sbb
jo
repz
and
xor
ret
xchg
sub
rcrl
or
jbe
arpl
aad
mov
pusha
out
sbb
push
insb
inc
cli
pop
rolb
and
or
ja
cwtl
or
pop
ror
push
sbb
adc
cmp
cmp
jmp
cmp
subb
jmp
sbb
das
xchg
out
cmp
pop
imul
idivl
mov
dec
pop
cli
mov
pop
je
lahf
lock
fdivl
cld
hlt
sbb
mov
lcall
sbb
push
mov
xor
mov
xchg
push
xor
cmp
lret
or
jmp
or
push
in
pop
dec
in
push
pop
mull
push
pusha
push
repnz
and
push
jge
jp
test
stos
stc
xchg
sub
push
clc
adc
mov
lods
fnstenv
std
stos
mov
out
add
stc
ljmp
push
adc
scas
enter
pushf
adc
dec
dec
jns
or
andb
sub
sahf
sub
add
push
pop
mov
push
fdivrs
adc
ja
das
call
mov
std
adc
cmp
pop
xchg
cli
pushf
cmp
pop
xor
fsubrl
mov
push
cmp
fidivs
add
scas
mov
pop
arpl
mov
jbe
lods
jbe
xor
test
ret
leave
mov
sbb
maxps
sub
dec
imul
push
not
mov
fisubs
stos
aad
or
mov
std
sbb
mov
pop
inc
lcall
fwait
ja
pop
xlat
mov
lods
add
lret
and
pop
or
mov
mov
sub
jne
mov
sub
pop
arpl
mov
jo
pushw
or
addr16
scas
xorl
sub
bound
inc
mov
cvtps2pd
mov
push
shll
pop
xorl
add
pop
aam
das
xor
xor
pushf
xchg
outsb
das
xor
pop
scas
inc
add
cmp
push
push
add
pop
into
or
xor
sarl
mov
adc
fadds
push
mov
cmp
add
adc
les
idivb
push
dec
cmp
jb
lock
shll
sub
or
pop
cmp
adc
aad
xor
pop
push
outsl
push
fstpl
jae
mov
into
adc
mov
push
gs
test
push
mov
add
loop
lret
xlat
push
jnp
fisttps
jae
push
push
mov
jmp
das
inc
add
push
sbb
add
jp
mov
stos
rcrb
sar
xchg
add
pop
mov
jne
neg
push
popa
cmp
pop
in
insl
dec
ret
pop
je
fnsave
push
test
cmpsl
or
hlt
pop
test
test
popf
lods
movsl
add
push
repnz
pop
testl
scas
push
mov
add
xor
cmp
pop
sub
test
dec
test
das
lret
addb
add
aad
mov
into
rol
sub
rclb
imul
pop
inc
cmpsb
pusha
pop
shl
push
mov
and
sbb
outsb
dec
pushf
data16
mov
ja
divb
ret
lods
pop
mov
push
dec
cmpsb
adc
call
xor
cmp
and
pop
adc
call
sti
aas
pop
lds
imul
ss
dec
adc
dec
lods
xchg
repz
xchg
divb
pmuludq
lds
sbb
push
or
pop
cmp
ja
xchg
and
mov
rorl
mov
stos
xor
repz
ror
add
push
jmp
movl
cmp
dec
adc
add
bound
or
sbb
push
inc
das
cmc
mov
sbb
in
scas
jno
push
sbb
rep
push
jl
pop
fwait
adc
push
add
fildl
lea
mov
push
movsl
jg
add
es
cltd
pop
mov
dec
xor
lret
jp
xor
push
movsb
aas
neg
sub
sub
sbb
mov
cmpsb
sbb
mov
mov
sbb
test
dec
in
jae
and
sub
ret
mov
xor
push
push
stos
mov
mov
push
or
push
pop
pop
out
jp
pop
lods
fwait
jmp
fstpl
ja
aam
sub
xchg
cltd
xchg
lods
js
dec
insl
jmp
push
inc
adc
jl
flds
add
es
add
inc
cmp
pop
rorb
sub
mov
cmp
jbe
jmp
cmp
sbb
and
std
dec
cwtl
xchg
jle
inc
mov
push
loopne
sub
pop
push
and
or
sbb
mov
push
jmp
add
cltd
dec
mov
daa
cld
lret
add
outsl
jno
fimuls
pusha
lret
cmpsb
and
mov
aaa
push
inc
sbb
xlat
hlt
cmp
sbb
imul
jge
xor
xchg
push
mov
in
loope
mov
roll
push
push
out
jg
pop
sbb
in
lock
das
pop
or
pop
test
enter
outsl
xor
fwait
js
xchg
push
jnp
sub
push
pop
mov
or
jbe
int3
cmpsl
jbe
ret
wrmsr
cmp
or
push
mov
push
push
pop
push
enter
push
mov
mov
pop
cltd
or
sub
ret
add
imul
dec
sub
dec
add
mov
in
mov
cwtl
inc
push
rcr
cltd
js
xlat
dec
add
inc
je
test
mov
aaa
sub
xchg
pop
inc
add
sub
or
push
repz
adc
dec
jp
add
test
scas
cmp
mov
jmp
sarl
and
idivb
fisubrl
pop
add
filds
cmp
movsb
push
lea
jl
pop
inc
dec
push
jmp
sub
inc
lods
lea
pop
and
xchg
mov
bound
loopne
or
inc
aas
and
shll
sarb
sbb
sbb
inc
and
mov
arpl
push
sbbl
xor
into
shlb
mov
in
pushl
cs
cli
mov
push
mov
sub
inc
or
ljmp
cwtl
orb
es
add
in
mov
call
inc
das
aaa
xor
inc
inc
adc
scas
mov
sub
lea
add
dec
shlb
call
out
popf
or
and
mov
dec
and
stos
leave
repnz
xor
ficoml
cs
pop
pop
or
arpl
repz
push
xor
insb
andb
sub
ret
jnp
xor
jle
mov
xor
sub
push
mov
adc
and
adc
or
push
adc
cmp
xchg
and
cmp
jmp
pop
inc
mov
xchg
jmp
cmp
cmpsl
add
mov
mov
add
jb
mov
aad
and
ds
jnp
ret
jno
and
daa
daa
inc
call
data16
jg
jbe
test
mov
pop
loope
les
sti
repz
enter
or
add
sbb
lcall
or
pop
scas
xrelease
push
jmp
fidivs
and
imul
lock
mov
mov
dec
popf
xchg
jmp
push
jo
xor
xchg
adc
or
pop
pop
xchg
pop
adc
repz
pop
bound
xchg
or
sub
jle
stos
rorl
sbbb
mov
test
and
xor
outsl
sti
inc
dec
or
dec
dec
mov
imul
push
stos
add
jle
mov
add
testl
mov
push
mov
dec
jmp
mov
sub
scas
add
mov
int3
jns
adcb
jbe
lret
xorb
sub
js
pop
jmp
or
xor
pop
mov
loopne
inc
sbbb
mov
cmp
push
mov
mov
shr
adc
sbb
lret
lock
into
out
mov
inc
or
cmp
or
out
mov
lods
ret
mov
cmp
cmpsl
scas
dec
outsl
shrb
sub
rolb
dec
icebp
cmc
ja
cmp
and
push
inc
fistpll
adc
pop
or
fimull
xchg
fadd
icebp
push
daa
add
jmp
subb
aad
cltd
push
jne
pop
mov
xlat
lcall
jecxz
mov
push
cmp
inc
shll
lahf
push
popa
shr
pusha
sbb
add
sbb
pop
pop
jae
cmp
mov
push
cwtl
loope
lret
xchg
push
pop
inc
fwait
mov
cmc
xchg
xchg
push
pushf
sub
ret
mov
mov
pop
inc
rorl
lock
dec
xchg
clc
dec
ret
and
lods
imul
imul
cmpsl
lds
and
add
push
pop
sub
inc
ret
aad
and
or
pushl
push
cmc
sar
jg
aas
testb
mov
movsb
mov
fnstenv
out
sbb
add
jno
push
inc
or
or
jle
aas
cmp
jmp
sub
xchg
sub
shl
pusha
in
xorb
and
incb
lcall
sub
jmp
pop
std
adc
dec
push
add
inc
or
outsl
push
jl
mov
loopne
insb
orb
sub
outsl
pop
out
fnstcw
sar
add
mov
jb
ja
test
sahf
cld
lods
dec
loop
lahf
test
lcall
test
repnz
jmp
movsl
fistps
or
daa
cmp
sti
push
push
xchg
daa
pushl
hlt
xchg
movsl
pop
add
addr16
add
in
mov
pop
fistl
xor
iret
jae
stos
mov
push
add
lods
mov
data16
daa
and
insb
mov
xor
sbb
mov
xlat
jns
mov
iret
stos
pop
push
pop
test
pop
ret
sub
add
loop
xchg
inc
call
xchg
std
pop
push
and
pop
xor
rolb
inc
mov
adc
shl
adc
mov
mov
add
cmp
push
incl
nop
fiadds
mov
or
push
push
push
push
pop
dec
jns
mov
dec
xchg
xor
pop
cmp
or
inc
push
xor
pop
cmp
cmp
mov
cmpsb
cmp
out
add
fisttpl
test
adc
or
mov
jg
fwait
invlpg
std
mov
jmp
int
rcll
add
sbb
shl
inc
inc
nop
hlt
xor
das
cmp
xchg
adc
ljmp
push
sahf
mov
jae
icebp
popa
test
int
mov
xlat
push
add
inc
cmpsb
xor
sub
aaa
sub
push
mov
inc
cmc
leave
jo
mov
adc
dec
in
movsb
fldenv
pushf
lahf
and
add
jmp
add
pop
mov
arpl
push
cmpsl
pop
in
push
ja
icebp
add
mov
int3
dec
pop
repnz
test
sub
jb
dec
adc
sub
fsubs
shrl
insb
xor
pop
push
js
clc
addr16
pop
cmp
push
out
cmp
sub
jmp
push
push
lea
and
dec
mov
pop
adc
pop
hlt
cmp
cwtl
test
out
inc
xor
mov
loope
and
stc
mov
mov
loop
or
repnz
in
out
movsl
pop
lds
sbb
mov
and
pop
cmp
jp
popa
pop
and
pop
repz
dec
dec
mov
js
lahf
jg
sub
rcrb
aad
aam
add
inc
push
fnstsw
adc
jmp
nop
xchg
iret
xor
pop
nop
or
pop
sub
pop
push
sub
jnp
or
dec
cmpsl
dec
stos
fwait
rorl
push
fs
imul
jl
and
sub
add
jb
shrl
jmp
pushf
jmp
out
add
sub
sub
or
cmp
dec
mov
orl
cmpsl
shll
push
mov
sbb
push
cmc
stc
xchg
push
or
sub
mov
add
aaa
sbb
fsub
or
in
nop
jp
les
sub
leave
lock
mov
mov
sub
add
adc
cmp
lea
sub
xchg
lods
pop
subb
loopne
jmp
shll
incl
sbb
jmp
adcb
bound
dec
xchg
push
mov
push
or
hlt
pop
dec
pop
add
sub
data16
out
mov
test
xchg
enter
insb
aad
mov
popa
jmp
pop
jne
mov
cwtl
mov
cs
sub
lea
and
mov
dec
adc
sti
sub
fcoml
movsl
pop
xor
mov
test
pop
push
cli
jb
xor
push
and
xchg
out
jb
mov
shll
call
mov
sar
cmp
movsb
ss
push
mov
shrb
inc
push
fstpt
or
mov
cwtl
negl
cltd
xchg
cli
cmpsb
test
aaa
rclb
add
add
push
fmull
mov
in
outsl
xor
test
jmp
mov
add
cmp
adc
mov
mov
add
ljmp
bound
pop
sub
mov
sbb
fwait
aas
ret
push
fdivrl
lret
fmull
xor
arpl
inc
into
pop
scas
repz
loopne
adc
outsb
dec
rcrb
jns
int
pop
or
mov
or
push
in
xor
jno
xchg
jns
mov
pop
pop
insb
mov
lds
dec
adc
out
add
stc
data16
icebp
mov
lret
arpl
aad
sbb
mov
inc
push
test
cs
cmp
fnsave
add
add
xlat
pop
mov
or
xchg
mov
in
or
ficomps
or
fiaddl
sub
sub
sub
jl
enter
ljmp
lods
mov
mov
cmp
inc
and
idivb
jbe
add
cmp
call
in
push
addr16
insb
mov
and
subl
add
rcrb
sub
inc
push
jg
cmpsl
mov
and
push
lock
add
sti
jge
pop
and
notl
ret
leave
cmp
icebp
das
movsl
popf
orb
inc
xor
addr16
test
lea
lahf
fiaddl
push
mov
sub
or
or
test
ja
sbb
lahf
iret
out
pusha
add
mov
or
repnz
xchg
cwtl
ja
sub
rcll
jae
mov
icebp
or
mov
test
lods
jbe
stos
xchg
add
push
mul
dec
mov
push
pop
inc
dec
push
je
sub
xor
jne
mov
lret
pop
push
mov
pop
mov
add
lret
inc
mov
add
out
jge
adc
cmpsb
or
data16
shlb
popf
call
cmpsl
push
dec
jmp
call
inc
cmp
push
and
sbb
std
mov
fcomps
xchg
add
push
fs
idivb
std
inc
call
add
insb
push
and
jmp
ret
sahf
popa
pop
pop
imul
sub
pop
loop
js
cs
dec
add
add
jns
out
add
sbb
testb
push
mov
hlt
push
push
jmp
cmc
fdivrs
icebp
stc
sub
clc
jmp
rsqrtps
add
jb
dec
inc
cwtl
xchg
call
xchg
push
and
push
imul
add
cmp
testb
push
push
out
pop
adc
cmc
or
idivb
dec
mov
stc
sub
test
insl
mov
lret
pop
sub
arpl
inc
dec
cmp
jbe
jl
push
fcomps
add
std
pop
mov
xor
leave
arpl
frstor
add
inc
loopne
dec
add
es
mov
out
int
js
push
mov
inc
jecxz
pop
sub
cli
lcall
ljmp
ss
push
jge
aad
xorb
mov
fbstp
jne
orb
aas
add
add
xchg
mov
xchg
jbe
enter
cmp
inc
inc
out
arpl
and
add
fstl
lock
lods
or
pop
jb
outsl
rol
cmp
bswap
aam
pusha
bound
shr
push
mov
ja
cmpb
pusha
add
jmp
push
test
pop
sub
push
test
daa
in
xchg
cld
sbb
fdivs
icebp
stc
dec
or
xor
xchg
mov
idivb
sub
rcrb
shr
dec
jle
nop
daa
xor
hlt
inc
add
imul
aaa
aas
sub
rcll
lret
je
mov
sub
dec
daa
sti
push
rcrb
pop
mov
arpl
loope
popa
or
pop
push
xor
sub
scas
in
and
xor
or
in
popl
jl
and
or
shrb
cld
xlat
test
pushl
inc
inc
insl
mov
aas
sbb
jmp
std
daa
fistpll
or
iret
sub
lahf
ds
test
add
dec
xor
and
add
pop
lods
icebp
test
out
repz
scas
sub
bound
push
flds
push
scas
mov
lcall
loope
and
lahf
icebp
inc
dec
jge
jecxz
pusha
sbb
xor
push
jmp
imul
jno
not
xor
sbb
and
ljmp
cmp
push
nop
sub
imul
cmpb
sbb
and
cmp
loopne
or
rcrb
jae
cmp
shr
loope
jno
or
dec
test
leave
outsb
dec
xor
in
add
mov
jl
cmp
jp
pusha
and
pop
pop
loope
inc
lods
jo
aas
pop
cld
mov
mov
int3
jl
std
or
cmpb
out
adc
cli
add
int
ljmp
add
mov
ret
or
adc
inc
dec
or
testb
xor
xor
inc
adc
div
xorl
mov
inc
test
adc
pop
addr16
adc
hlt
adc
mov
aam
inc
je
out
jg
fmul
into
mov
xchg
daa
hlt
xor
push
mov
push
or
or
lret
icebp
inc
sub
xchg
cmp
pop
shll
or
sub
fcmovbe
jge
adc
notb
ds
jne
out
dec
push
push
cmp
test
push
adc
mov
add
fstl
addr16
or
iret
pop
lods
mov
mov
mov
rcr
aam
jmp
incb
testb
xor
pusha
sub
cli
jmp
das
and
idivb
jne
repz
ret
add
inc
daa
and
data16
aad
mov
xchg
lahf
mov
ret
sub
andb
jp
xchg
xchg
loope
leave
add
jp
sub
loope
or
push
push
add
sbb
pop
push
push
aaa
pop
mov
test
and
notl
cmp
and
sbb
xchg
cli
out
or
lret
stos
pop
push
lods
cmc
add
sub
outsl
sub
ret
pop
or
pop
add
loope
push
roll
inc
fsts
push
orb
bnd
cld
insl
imul
cltd
push
cmpsl
divl
or
adc
sbb
aad
dec
inc
rorl
add
mov
xsha256
cmpsb
xchg
sbb
dec
mov
cs
roll
es
pusha
push
push
cmp
mov
notl
inc
xchg
mov
sub
das
movsl
fwait
pop
xchg
mov
ret
je
add
mov
and
out
fimull
adc
jl
add
movsb
adc
cmpl
pop
testl
pop
xchg
push
mov
cmp
dec
mov
adc
mov
push
dec
push
sarl
loope
pop
test
call
pop
and
mov
xor
scas
dec
fdivrl
add
jle
jne
nop
mov
stc
mov
push
sub
movsl
jnp
xor
sub
in
or
int3
outsl
or
inc
orb
pop
imul
dec
adc
xchg
push
push
sbb
dec
xorl
adc
mov
jecxz
pop
sub
cmp
pop
adc
add
pop
pop
xor
ret
dec
inc
ljmp
cmp
stc
or
xchg
or
fsts
xchg
or
jecxz
lock
test
repnz
es
push
sahf
xchg
insb
or
bound
push
in
shl
add
aas
mov
push
push
mov
nop
es
sub
add
push
xor
xchg
add
ljmp
pusha
and
enter
lret
pop
push
into
in
sahf
push
mov
inc
mov
xchg
push
add
notl
dec
mov
mov
lret
dec
mov
jo
mov
mov
push
shlb
test
repnz
mov
cmp
add
addr16
and
stos
xchg
test
fstl
push
test
and
push
push
or
insb
shll
cmp
pop
lret
xchg
push
fnstcw
sub
pop
scas
xor
rcrb
neg
dec
aad
popa
cld
idiv
test
xchg
pop
mov
add
jno
jmp
cmp
sub
xchg
pop
pop
push
xchg
sub
adc
jp
add
pop
ja
cmp
ret
stos
xor
fdivl
scas
into
lret
pop
enter
and
addr16
or
in
ret
jle
frstor
jo
imul
adc
pushf
mov
inc
das
pop
pop
pop
and
hlt
scas
jmp
cmpsl
add
jmp
mov
jle
inc
decb
inc
lcall
push
or
pushl
xchg
test
xchg
lods
lret
pop
icebp
adc
imul
cwtl
out
mov
cs
and
push
jge
inc
shr
xchg
jl
fsubrl
shr
fsubrl
movsb
and
inc
jg
or
xchg
mov
repz
xor
out
inc
lock
push
mov
push
icebp
pop
inc
lahf
xchg
insl
lahf
leave
roll
and
shl
jnp
sbb
add
adc
clc
dec
cmp
or
mov
adc
fnstcw
test
mov
jb
jnp
leave
ret
mov
ja
xlat
in
stc
movsl
loop
shll
adc
pop
mov
jno
movsl
xor
sub
jmp
xchg
push
push
xchg
push
mov
lea
repnz
xlat
mov
push
icebp
xchg
jb
inc
lcall
add
jbe
adc
and
jecxz
outsl
sub
add
push
cltd
dec
pop
fnsave
popf
gs
aam
jns
push
add
test
out
add
or
inc
nop
fistl
imul
enter
adc
out
lds
mov
mov
divl
mov
mov
jl
push
daa
pop
or
mov
or
jnp
cmpsb
push
xchg
xchg
mov
test
inc
adc
or
fisttpll
or
adc
mov
icebp
pop
and
mov
ret
add
jne
add
sahf
push
je
lock
lods
fs
push
xchg
popf
in
inc
xor
repnz
loope
or
and
repnz
pushw
and
pop
mov
push
pop
sbb
mov
inc
xchg
cmc
sahf
or
pop
xor
imul
subb
insb
push
mov
ret
test
pop
mov
xor
push
jb
and
sbb
mov
std
out
incl
push
or
mov
mov
push
mov
das
xor
jns
test
test
scas
jl
fsubrs
lock
and
or
rolb
jnp
and
push
pop
fwait
dec
mov
jmp
das
fsubs
sub
push
mov
xchg
mul
xlat
imul
mov
aad
mov
xor
outsb
pop
sub
xchg
rolb
fistpll
test
insl
push
imul
ret
mov
or
jb
pop
shl
jl
minps
jns
xchg
pop
and
repnz
test
dec
mov
or
push
mov
cmp
lock
pop
jmp
adc
mov
push
xchg
incb
inc
cmp
fs
push
ja
aad
xor
ss
add
add
inc
dec
sub
jb
adc
jmp
shl
imull
fisttps
push
inc
pop
jmp
mov
inc
add
rcl
adc
sub
loope
jbe
hlt
push
xchg
dec
rcrb
je
adc
daa
adc
test
loope
nop
pusha
jb
and
cmc
push
xor
clc
pop
or
pop
test
add
inc
or
pop
loope
sbb
fcomps
lods
test
stos
adc
adc
cmp
mov
scas
sbb
xchg
push
gs
add
xchg
notb
frstor
adc
mov
loopne
movsb
mov
add
jp
sub
inc
sub
xlat
nop
push
test
sbb
cs
or
or
daa
xor
xchg
add
das
lods
pop
jge
cmc
jbe
dec
push
adc
leave
pop
clc
add
icebp
rorl
pushf
test
lret
cmp
aam
popa
jmp
mov
shr
ja
in
ja
and
imul
inc
enter
mov
or
pop
sub
addl
xor
ljmp
mov
das
lods
add
adc
arpl
fsts
cmc
xlat
add
lods
imul
push
sbb
cmp
fdivl
adc
mov
insl
addb
es
pop
xchg
jle
jl
mov
xchg
js
out
notb
xchg
fisttpll
adc
sbb
pop
lock
push
out
outsb
xor
stos
xchg
arpl
add
add
loopne
leave
xchg
mov
test
rol
mov
popw
push
mov
jns
insl
pop
sub
dec
sub
dec
mov
pop
adc
sbb
jae
or
sub
pop
fdivrs
repnz
aad
sahf
outsb
mov
push
push
sbb
loop
daa
lret
outsb
add
cmp
mov
clc
and
movb
pop
cmp
sub
dec
ljmp
cmp
mov
pop
shll
arpl
xor
pop
push
add
rcll
fnstsw
pop
scas
daa
insb
movsl
cmp
add
push
and
outsl
and
push
mov
dec
add
es
loopne
lods
mov
cmp
push
add
aaa
lock
dec
leave
sbb
in
sbb
sbb
outsl
rolb
xor
repnz
or
adc
pop
jmp
shrb
sub
push
adc
stos
and
fs
push
jo
jmp
push
add
or
nop
fdivr
jecxz
add
outsl
rclb
push
arpl
push
add
xchg
in
aas
adc
pop
mov
dec
test
jb
sub
ficoms
push
sti
insb
inc
jmp
inc
or
jp
sub
push
pop
test
ja
pusha
mov
movsl
xor
mov
pushf
cmp
mov
or
mov
jb
leave
jns
test
cmp
adc
cltd
sbb
lret
mov
pop
xchg
pop
enter
mov
mov
mov
clc
cmp
sub
jmp
add
inc
mov
jns
les
dec
xor
sar
lahf
pop
push
push
sbb
and
rorl
mov
jns
push
jb
aam
jb
das
sub
lcall
sbb
stc
cmpsb
cmp
push
xor
mov
xchg
scas
in
inc
mov
rclb
and
jo
jmp
lahf
repz
shrb
into
std
out
test
xor
pop
dec
cmp
cmp
inc
loopne
call
cs
mov
sub
adc
mov
xchg
mov
dec
mov
loopne
stos
mov
mov
lea
int3
sbb
or
xchg
pop
add
cmp
mov
cmovl
movsl
rol
inc
xor
cmpsb
mov
in
hlt
sub
and
sub
js
push
push
lret
push
pop
popa
cltd
jmp
dec
scas
hlt
test
mov
add
push
dec
rcr
sub
pop
push
push
xor
call
sbb
shr
jno
jl
cmc
xchg
adc
mov
cmp
nop
mov
loope
jbe
adc
sti
pop
mov
add
and
or
pop
shll
outsb
xor
repz
inc
stos
rorb
sbb
jg
pop
jecxz
pop
xchg
pop
iret
cmp
int3
daa
jmp
mov
jb
lock
and
dec
push
ja
sub
pop
mov
mov
xchg
fsubl
mov
jno
orb
popa
and
nop
movb
adc
cmp
orl
cmp
xor
jmp
mov
dec
sub
repz
xchg
cmp
rorb
pop
push
pop
imul
addr16
xor
imul
pop
rorb
mov
sub
aam
lahf
dec
sbb
xchg
jg
dec
mov
jl
pusha
bound
and
xchg
xor
mov
sbb
mov
add
adc
xchg
inc
xchg
cli
int
and
fisubrl
push
out
lods
nopl
inc
or
mov
add
sbb
in
outsl
dec
addb
mov
sub
insb
and
aam
addr16
adc
xlat
mov
leave
pop
add
pop
pusha
or
or
sub
arpl
xor
shlb
jmp
pop
push
jmp
sbb
mov
or
sbb
push
xor
push
pop
add
cmp
pop
cmp
dec
fdivr
xchg
lahf
out
test
pop
mov
pop
dec
push
jb
fucomp
push
imul
pop
mov
sarl
out
je
sti
jge
into
inc
dec
in
xorb
sub
xor
je
jae
pop
iret
inc
sub
lods
push
fwait
and
test
xchg
add
arpl
adc
iret
jno
daa
lret
pop
push
and
add
xchg
cmp
and
out
adc
aaa
mov
stc
cmc
mov
aas
les
jmp
fcom
loop
or
or
out
sub
pop
inc
mov
je
popa
fwait
je
adc
adc
sar
mov
js
inc
pop
push
add
daa
pop
orl
fdivs
cmp
jae
lods
push
fwait
repnz
aad
icebp
or
mov
mov
int
jg
notl
mov
mov
xchg
aas
iret
int3
sub
bound
aad
mov
arpl
popa
cmp
jo
cmp
cmp
dec
xchg
test
and
sub
mov
cmpsb
ret
pop
jmp
dec
sahf
or
push
mov
in
rcrl
jmp
mov
pusha
das
in
test
dec
pop
mov
xchg
mov
ret
insb
push
jmp
jb
jp
add
icebp
fwait
outsl
rclb
push
add
push
and
pusha
cmp
lahf
fisubs
or
inc
push
addb
or
shl
dec
jne
jmp
cmp
insl
push
mov
push
or
out
or
jne
js
stos
push
push
jg
pop
jbe
sub
jl
xor
rorl
xor
orl
or
out
in
jo
xor
clc
cmc
xchg
mov
dec
adc
ljmp
push
mov
mov
mov
or
sbb
xlat
add
lds
pop
lock
pop
mov
cmpsl
jne
rorb
adc
fcmovu
jns
fs
push
rcl
out
test
add
push
dec
sub
jle
out
mov
enter
cmp
lret
loope
jno
daa
jmp
lock
dec
jecxz
mov
add
cwtl
jne
ret
test
out
xchg
push
mov
jecxz
xchg
cmp
or
js
push
pop
jge
fdivs
stc
lods
mov
js
orl
aad
mov
or
push
jnp
mov
ret
icebp
pop
pop
movsl
mulb
dec
les
xchg
sub
fisubrs
xor
repnz
js
das
sub
imul
jnp
cli
adc
repnz
push
mov
xchg
xlat
nop
xchg
inc
xor
push
push
or
les
adcb
stos
sub
ss
popa
mov
les
mov
sarl
cld
lahf
fsubs
sub
inc
das
adc
xor
ds
sub
or
loope
or
into
or
add
jne
mov
mov
cmp
mov
pusha
inc
rorl
idivl
xchg
insb
xchg
push
or
pop
add
pop
xor
in
mov
sub
xchg
pusha
or
lahf
pusha
push
testb
inc
fnstcw
xchg
call
test
in
out
cmpsb
adc
and
les
aam
mov
add
push
push
insb
jmp
cmp
xor
mov
adc
loop
mov
pusha
xor
push
cmp
lcall
mov
dec
repz
mov
es
mov
mov
pop
cmp
or
mov
or
pop
sbb
sub
pop
xor
add
push
negl
jge
inc
sub
sahf
adc
mov
aad
inc
push
movsb
push
fcoml
adc
and
cmp
xchg
cmp
add
mov
popa
xor
stc
add
popf
int3
xchg
adc
push
cli
scas
xchg
sub
movsl
fs
decb
movd
adc
lods
jae
mov
push
scas
add
sbb
imul
mov
js
xchg
xchg
cmp
or
lahf
test
mov
xlat
mov
add
push
roll
xchg
cld
adc
repz
jl
fidivrl
xchg
jb
add
cmp
jo
int
or
mov
lret
push
add
das
pusha
into
adc
or
push
jmp
push
mov
push
sub
out
pop
adc
fwait
rorl
mov
aad
jns
add
push
hlt
push
cmp
xor
into
jmp
push
and
aad
ret
inc
iret
push
inc
cmp
rorl
into
adc
aas
sbb
add
pop
clc
jp
add
sub
pop
mov
push
pop
push
ss
inc
pop
jmp
rolb
imul
cmc
pop
xchg
or
push
jg
daa
lds
fisttpl
pop
sar
inc
test
pusha
outsl
repnz
mov
jo
sub
dec
sub
push
roll
jmp
into
add
push
setbe
pop
lahf
out
or
xor
repz
pop
sbb
and
lock
call
dec
andl
mov
xlat
jb
or
stc
call
sti
addb
push
adc
pop
pop
shr
xchg
pop
call
mov
or
push
xchg
jp
push
adc
and
xchg
daa
addb
xor
or
fisttpll
sub
pop
mov
add
das
shrb
add
outsl
inc
xor
dec
pop
inc
subb
xchg
or
pop
jmp
bound
pushl
pop
sbb
test
jns
scas
jge
les
lcall
sti
pusha
cwtl
daa
sub
js
in
and
data16
mov
xor
outsb
pop
das
ja
cmp
push
inc
ror
and
push
pop
sub
test
push
out
call
cmp
fwait
leave
or
movsb
xchg
jns
cmp
jnp
push
int3
sti
pop
movsl
lods
cs
push
in
cld
adc
sub
mov
test
or
enter
nop
mov
sub
jp
cmp
addl
jg
orl
imul
and
mov
je
setb
pop
pop
dec
neg
mov
and
pop
adc
clc
pop
jmp
cs
sbb
push
sub
mov
popa
adc
aad
subl
sub
mov
dec
cmp
lods
ret
adc
xor
pop
sbb
data16
or
jmp
les
pop
js
pop
lods
cld
mov
sbb
sub
lahf
push
sahf
dec
xor
push
testl
jl
sub
mov
dec
xor
jmp
mov
xlat
lds
sbb
push
mov
fstps
adc
push
pop
stc
rcr
jp
cmp
nop
out
sbb
or
dec
test
xor
lret
shrb
xchg
call
push
sub
push
gs
aad
aad
mov
aam
dec
xchg
jno
iret
lret
mov
rcll
push
mov
pop
sti
leave
add
push
xor
pop
inc
lock
pop
dec
dec
arpl
dec
sbb
fcmovbe
gs
jg
sub
cltd
out
enter
lahf
loop
std
inc
inc
addr16
sub
pop
pop
roll
adc
cld
shr
mov
ficoml
jnp
mov
dec
sub
mov
jl
sub
adc
jbe
das
and
clc
shrl
mov
out
sub
add
outsl
push
jmp
test
test
and
aaa
js
int3
loope
push
sbb
sbb
mov
mov
pop
insl
push
or
ret
and
dec
js
push
bound
mov
push
cmc
test
mov
jle
fisttps
data16
ret
jge
pop
loopne
pop
xor
sbb
xchg
push
vmovaps
jmp
pop
cwtl
mov
jbe
in
cld
insl
in
add
rcll
and
aam
pusha
lret
push
cwtl
rcll
arpl
cmp
or
pop
and
imul
mov
es
add
cmc
int3
inc
cli
xchg
pop
or
inc
xor
or
shr
sbb
test
das
mov
stc
and
or
test
ljmp
jne
push
or
jbe
xor
cmp
pop
mov
jns
xor
pop
ret
add
xorl
or
mov
or
dec
push
mov
inc
push
jae
add
jmp
movsb
xchg
test
mov
dec
push
lahf
mov
stos
pop
xchg
ficomps
shr
sbb
add
pop
push
pop
mov
jmp
and
push
mov
scas
xchg
out
pop
pop
push
repz
cmc
or
push
loope
xchg
sahf
clc
xchg
fdivrs
inc
pop
ret
push
dec
scas
inc
jl
pop
add
sbb
adc
pop
imul
add
mov
jmp
xor
mov
dec
bound
mov
xlat
add
out
dec
pop
push
adc
push
pop
lahf
jnp
add
arpl
pop
test
push
test
lods
lock
pushf
xchg
jns
inc
int3
inc
test
cmp
push
pusha
or
jl
jno
dec
add
pop
mov
pop
aad
add
mov
or
push
dec
mov
orl
xor
add
or
or
push
ja
and
pop
cmc
inc
fsubs
orl
fbld
add
jmp
fdivr
sarb
shrl
dec
push
leave
jno
mov
hlt
sub
ja
popf
add
outsb
xor
inc
cmc
xor
xchg
add
dec
sub
orl
xor
push
fisubl
pop
jp
add
ss
inc
insb
les
and
push
pop
lods
sbb
pop
mov
not
or
mov
jmp
jbe
or
ret
outsb
jae
xchg
aad
add
pop
bound
xchg
mov
jle
mov
inc
fstl
lret
xor
ss
mov
nop
inc
and
test
or
subl
or
out
fsubrl
cwtl
cmp
insl
jo
vmovaps
rcrb
sahf
pop
add
dec
add
neg
dec
jae
pusha
dec
push
sub
mov
loopne
jo
ja
cmp
lcall
lods
xchg
pop
imul
test
jne
mov
scas
shl
test
sar
mov
loope
xchg
leave
std
xchg
mov
incb
lods
push
mov
pop
sub
inc
add
mov
subl
add
push
add
add
inc
push
push
not
pop
es
imul
nop
xlat
jbe
lea
xor
cs
adcb
popa
jnp
sub
int
out
pop
test
sar
addr16
or
lcall
aaa
or
rclb
test
rclb
mov
cs
mov
lret
xchg
mov
in
mov
lret
in
clc
loope
push
jg
lcall
push
add
sub
into
out
popa
add
cld
sub
dec
fdivrs
or
sub
fwait
inc
in
xchg
js
dec
scas
iret
fisttps
int3
cld
int
add
mov
pop
and
ret
jne
and
pop
ret
lahf
sbb
jge
cmp
mov
push
cmp
arpl
push
push
in
sbb
add
jmp
dec
mov
imul
and
lock
outsb
inc
push
adc
test
pop
add
push
sub
or
clc
add
dec
jae
daa
add
add
or
jns
jecxz
xchg
xchg
outsb
sti
sarb
dec
pop
in
flds
in
nop
xor
xor
js
dec
sar
daa
cmc
xchg
je
adc
out
add
bound
mov
movsb
lea
and
shl
pusha
movsl
or
neg
xor
insb
sub
imul
jl
mov
sub
inc
loope
dec
mov
ret
push
shl
in
jbe
sub
xor
mov
fcom
mov
test
popf
xorb
dec
jae
jo
enter
pop
out
bnd
test
mov
cmp
divb
pop
push
xor
mov
mov
add
fadds
out
les
cmp
sbb
bound
sbbb
call
inc
mov
push
sub
lret
pop
and
pop
jmp
mov
out
cmp
fbstp
push
sub
mov
and
mov
and
pusha
adc
adc
or
pop
pusha
or
pop
jl
and
pop
sub
push
add
push
push
dec
cmpsl
dec
mov
push
push
ljmp
mov
leave
xchg
cld
sbb
push
das
insl
pop
loope
jle
xor
data16
push
push
or
lret
cmc
or
call
je
dec
push
xchg
js
repnz
sbb
jecxz
or
add
loopne
rcll
mov
jmp
popa
dec
cmp
js
aad
lret
mov
cmc
fwait
loope
or
fidivrs
and
and
xchg
lock
mov
je
push
xchg
mov
pop
and
inc
fisttpll
inc
testb
fsubs
adcl
inc
xor
cmp
aad
dec
jmp
sbb
jl
es
jbe
or
xlat
xchg
test
sbb
mov
repz
push
das
inc
push
nop
xchg
ret
addr16
xor
jmp
adc
jecxz
pop
mov
and
sarl
pop
sbb
orb
inc
add
outsl
dec
push
mov
jg
and
std
mov
sbb
and
sbb
mov
cmpl
push
mov
lock
inc
fisubrl
sti
xor
ss
call
test
jecxz
mov
lahf
or
movsb
or
dec
mov
testb
pop
or
outsb
cmp
imul
pop
pop
pop
sub
mov
mull
pop
in
xchg
or
mov
fs
fistpl
xor
adc
cmp
and
and
clc
and
or
xor
and
pop
inc
cld
icebp
or
popa
sarl
jbe
pusha
jno
call
jmp
aas
xchg
or
jge,pt
dec
and
mov
fnstenv
pop
inc
cmpsb
jmp
xor
shl
dec
ret
mov
jp
push
popa
out
cs
sbb
mov
push
lea
pop
push
je
adc
iret
mov
ret
repz
mov
sbb
jp
add
or
iret
pop
dec
dec
hlt
jle
inc
dec
mov
add
add
jecxz
or
xor
repnz
fs
pop
lahf
imul
lods
xlat
les
imul
mov
sub
loop
and
mov
insl
xchg
andb
push
fs
gs
movsl
gs
test
lret
xor
jb
shlb
dec
dec
lods
sbb
cmp
cmp
bound
push
or
std
ret
push
push
adc
mov
push
pop
jo
pop
mov
dec
push
das
jmp
neg
out
leave
les
jl
sbb
sbb
cmpsb
add
out
js
mul
dec
adc
jge
or
adc
jae
rep
sub
cs
lds
ret
sbb
dec
cli
add
inc
mov
sub
fidivl
jl
lea
test
fsub
out
pusha
scas
mov
sub
bound
pop
jo
xchg
clc
scas
pop
jmp
jae
jg
dec
subb
or
pusha
shrl
xor
popf
pop
mov
sahf
jecxz
xor
push
or
jns
xor
mov
pop
mov
imul
push
lahf
fdivrl
mov
sub
gs
xchg
std
jne
jo
dec
jbe
mov
jmp
xor
adc
push
push
pop
imul
sub
sub
push
mov
mov
xchg
add
out
mov
push
mov
or
pop
jmp
call
jae
ret
fwait
jmp
insl
cmp
jmp
mov
mov
mov
sub
and
rcll
and
cwtl
dec
repnz
in
xor
mov
nop
arpl
cmp
mov
jnp
mov
ds
or
fidivs
and
add
mov
xor
dec
pop
cli
cmp
cmpsl
out
adc
dec
movsl
stos
add
clc
jp
jmp
out
push
mov
sarb
scas
cli
or
dec
jmp
add
push
mov
push
and
sahf
pop
cmp
mov
or
xchg
mov
add
fidivrs
dec
lods
add
sbb
repnz
test
sbb
push
pop
inc
mov
movsb
nop
addb
mov
lods
adc
push
cltd
mov
xchg
or
cld
lcall
cwtl
sbb
stac
adc
xor
adc
push
mov
and
mov
jg
ds
out
jp
sbb
cld
xor
fidivl
jns
rcrb
incb
cmp
pop
pop
rol
or
xor
inc
cmp
nop
sbb
shr
add
out
pop
sbb
xchg
adc
add
stos
add
push
pusha
pop
cld
dec
dec
test
dec
adc
jo
push
and
aas
pop
xchg
daa
xor
xchg
or
test
cmp
rorl
jns
jmp
or
icebp
orb
mov
in
sub
pop
jmp
add
loope
inc
dec
jno
sub
ret
out
rorb
add
pop
mov
pop
push
shrb
add
mov
add
test
push
jmp
fdivl
imul
div
xlat
xchg
cwtl
xchg
mov
stos
xchg
xor
stc
lods
dec
clc
cmp
clc
dec
gs
lret
dec
fnstenv
subl
cli
sub
faddl
mov
xor
pop
sbb
adcb
aam
sti
lods
lret
and
pushf
push
cmpsb
loop
dec
or
jge,pn
push
jne
add
mov
push
dec
or
cmpb
lahf
push
dec
sti
and
inc
or
test
push
lret
stos
jno
ret
cmc
cmp
cmpsb
xor
add
or
add
test
or
push
les
lea
xor
dec
pop
sub
push
out
stos
es
mov
mov
fistpll
jp
cltd
mov
jno
ds
out
call
test
cwtl
inc
and
aas
shl
jne
add
jg
shrl
sbb
jp
and
mov
outsb
pop
aas
jmp
cmp
sahf
mov
popa
pusha
mov
pop
ljmp
jbe
pop
pop
test
dec
cmpsb
movsb
xchg
aam
test
jge
pop
xchg
jg
mov
push
fistpl
mov
push
mov
mov
clc
xorb
mov
push
pushf
adc
mov
dec
stos
inc
mov
add
mov
mov
out
mov
das
and
cmc
cld
scas
popf
frstor
xchg
and
xor
or
in
lret
inc
and
add
add
and
ljmp
fcoms
sub
fwait
inc
daa
pop
addr16
mov
xchg
lret
fisubl
jmp
cmp
popf
les
cltd
in
dec
cs
fwait
dec
bound
cmp
into
sub
mov
ret
pop
push
or
push
adc
testl
dec
sbb
and
jmp
mov
pop
or
cmp
pop
dec
sbb
jne
jbe
mov
cmp
mov
jno
pop
mov
std
stc
and
jae
mov
xorl
push
and
pop
jge
lods
xchg
sbbb
inc
cmp
adc
mov
imul
leave
xchg
fisttps
movsb
cmpsl
aad
enter
test
or
mov
loope
inc
and
jecxz
pop
adc
mov
data16
daa
lds
push
jo
xor
pop
and
add
jmp
inc
and
sbb
popa
outsb
mov
push
inc
stos
shrb
jmp
mov
aas
add
or
loope
dec
je
out
mov
sbb
testb
sbb
nop
mov
shlb
out
dec
push
mov
cmp
test
sub
xor
pop
rcrb
popf
js
rcrl
das
fldln2
imul
fwait
inc
rorb
lret
test
pop
testb
or
in
xchg
mov
and
inc
js
cwtl
xlat
dec
pop
or
add
sbb
pop
jp
pusha
push
or
inc
adc
mov
push
mov
sahf
adc
sbb
dec
lock
dec
iret
inc
jnp
popf
adcl
cmc
add
testl
jmp
popf
and
ljmp
and
out
movsl
pop
jne
adc
jbe
jmp
mov
xor
sub
cld
pop
dec
jl
jle
and
jle
loope
or
pop
jle
xor
pop
les
dec
xchg
ret
loopne
add
mov
sarw
mov
fsubs
lret
or
aam
or
pushw
leave
in
add
xchg
fwait
jg
mov
mov
loopne
pop
dec
push
aad
inc
cmpsl
and
adc
or
pop
xchg
mov
stos
mov
test
push
clc
jecxz
das
push
addb
rcrl
and
lret
pop
inc
sbbl
mov
xor
add
adc
insb
mov
dec
jle
adc
mov
adc
jnp
inc
mov
aas
pop
adc
dec
in
mov
test
mov
sub
push
cmpsl
inc
inc
or
add
push
les
imul
insb
jo
std
inc
or
repnz
imul
repz
and
insb
pop
cmp
fisubs
cs
add
jmp
dec
sti
negl
or
mov
imul
test
filds
jecxz
sbb
adc
push
inc
xchg
pop
hlt
xor
filds
jge
jo
inc
aas
jmp
jecxz
repz
sub
sub
dec
xor
daa
or
in
loope
fbstp
nop
add
mov
cs
mov
jge
pop
inc
pop
aad
aas
sti
pop
lahf
in
fwait
lds
inc
mov
push
adc
insb
nop
ljmp
not
pusha
pop
adc
in
sbb
jecxz
or
sub
inc
mov
xchg
daa
cmp
xchg
pop
or
pop
mov
add
pusha
sti
sub
mov
cmpsl
jns
stc
jge
and
xchg
jno
repnz
or
add
jl
cld
out
dec
mov
add
or
js
adc
xor
sub
leave
jp
cli
push
out
inc
fisttps
aas
pushl
daa
jnp
jl
push
adc
into
add
aas
pop
jg
test
les
daa
xor
decb
leave
mov
fistps
and
push
cmc
or
add
stos
loop
push
out
jmp
pop
subb
dec
out
and
jge
imul
xor
icebp
aad
mov
jae,pn
push
jne
sahf
test
cli
mov
pop
shlb
out
and
or
rcll
mov
pop
and
loop
mov
mov
cmp
jmp
jecxz
and
subl
xor
icebp
xlat
jg
jle
mov
sub
push
pop
iret
and
aad
nop
sub
fnstenv
lods
mov
or
push
xor
shlb
xchg
pop
mov
movsb
mov
xchg
pop
pop
loope
cs
dec
cltd
std
jle
cmp
rorb
xchg
pop
es
scas
add
push
stos
push
fdivrs
sub
inc
mov
push
lahf
jno
ret
aad
mov
inc
das
lahf
jo
xchg
nop
sti
loopne
out
adc
mov
jmp
rorl
imul
sbb
das
mov
dec
mov
mov
shlb
les
mov
mov
dec
cmpsl
rcrl
je
test
mov
std
das
subb
inc
das
mov
lock
push
cmp
mov
inc
jle
jmp
out
jnp
in
outsl
mov
pop
ds
sub
pop
add
jbe
in
push
mov
loop
lods
ds
rclb
in
jp
xchg
outsl
pushf
lods
dec
subl
pop
in
mov
das
lock
jmp
jb
fisttpl
inc
push
pop
xor
xchg
mov
int
in
jl
xor
pop
jbe
inc
dec
push
inc
mov
sarl
and
add
xchg
cmp
ljmp
out
mov
add
inc
xchg
dec
dec
mov
cmpsl
fstps
out
in
pop
sub
pop
icebp
sbbb
mov
and
inc
jge
cmp
add
popf
adc
mov
xchg
add
mov
mov
and
mov
js
in
insl
fisttps
mov
shlb
and
and
adc
dec
or
xor
pop
add
gs
xchg
push
mov
imul
or
lret
das
stos
lahf
call
inc
int
mov
addr16
fsts
loope
jns
subl
inc
mov
pop
or
rorl
inc
xchg
repnz
insl
xor
dec
cmp
fs
push
andb
or
adc
inc
insl
outsb
jb
popf
push
andb
xchg
push
mov
pop
add
mov
adc
add
mov
lcall
sbb
sbb
mov
jl
adc
add
push
sub
jmp
mov
xor
rcl
outsb
cmp
addb
arpl
jnp
mov
pusha
bound
mov
sbb
rorl
js
or
jge
push
stos
cmp
lock
sbb
ja
mov
call
decb
add
inc
mov
inc
dec
mov
add
jmp
or
push
sub
fwait
mov
push
repz
jp
xchg
ljmp
test
or
or
sub
xchg
cwtl
jp
loopne
cld
ja
jge
xchg
pop
xchg
test
pop
scas
and
test
mov
stc
mov
jmp
mov
inc
icebp
pop
shl
dec
sub
data16
int3
clc
xor
nop
push
jmp
inc
lods
pop
imul
je
or
or
jnp
dec
ds
lret
and
dec
inc
push
subb
fyl2x
mov
mov
inc
jmp
fcomps
inc
movsb
std
stc
test
pop
push
movsb
push
mov
jg
push
scas
push
jmp
pop
push
jmp
cmp
dec
mov
hlt
dec
nop
shll
sbb
push
mov
or
sbb
pop
jnp
add
xchg
sub
jmp
add
sub
mov
loope
mov
pop
push
mov
outsb
sub
add
jmp
addr16
mov
push
hlt
inc
inc
jae
cld
repz
push
and
cmp
in
imul
sub
sub
enter
ss
stos
jno
or
xor
add
ret
mov
and
fs
repz
fsubs
fistpll
shr
rclb
dec
sub
sub
in
enter
push
fcoms
push
mov
in
cltd
and
repz
xchg
sub
push
lahf
inc
adc
idivb
xor
dec
daa
or
push
pop
mov
fsts
out
mov
enter
xchg
and
fisubrs
pop
inc
inc
push
and
js
mov
mov
wbinvd
push
ficoml
or
or
adc
mov
or
inc
adcb
xor
fs
add
cmc
mov
fnstcw
push
adc
shlb
xor
enter
sub
daa
psubb
dec
orb
cmp
into
lock
mov
in
and
insl
push
bound
add
mov
mov
and
mov
adc
jbe
call
adc
sbb
stos
cltd
mov
adc
out
jle
jo
testb
jge
es
or
pop
dec
mov
sbb
xchg
pop
enter
sahf
mov
or
inc
or
pusha
cld
test
lret
push
adc
subb
sbb
adc
xbegin
das
out
inc
adc
sbb
sbb
or
int3
xlat
push
call
fsubs
jmp
xchg
loope
adc
xlat
cmc
insb
mov
push
jmp
adc
xchg
and
movzwl
ret
add
sub
add
inc
add
in
pop
sub
lahf
jno
addr16
lock
adc
inc
shl
ljmp
inc
fdivr
sbbl
mov
inc
and
mov
pop
mov
neg
jmp
push
and
scas
pop
mov
xchg
sti
jmp
lds
lahf
fadds
mov
xchg
push
or
push
cmp
xchg
rcrb
bound
inc
jmp
xor
adc
ljmp
pushl
push
add
loopne
mov
dec
mov
fdivr
and
in
popa
add
insl
mov
sub
dec
pop
xchg
stos
push
mov
call
add
scas
sub
pop
adc
dec
mov
and
inc
addb
sti
add
jmp
mov
jo
cmpl
pop
adc
jl
xchg
icebp
lret
mov
mov
or
aam
fnstenv
int3
jecxz
fimuls
test
mov
insb
push
popa
mov
stos
ds
xchg
pop
loope
sub
or
rorb
shr
xorb
jmp
sbb
rcrl
add
xor
into
test
mov
testb
cli
push
mov
jnp
xorl
pop
sbb
cmp
pop
std
fidivrl
jmp
pop
push
icebp
or
or
and
ja
pop
push
jge
adc
int3
icebp
icebp
adc
aas
aas
repnz
xchg
stos
mov
add
loope
pop
call
xchg
pop
cmpb
test
cltd
div
lods
push
ficoml
adcb
sbb
push
mov
push
xor
fmul
sti
sbb
insb
sbb
insl
and
and
xchg
into
add
adc
pop
jl
shll
xor
sub
jbe
pop
xchg
in
movsb
pop
mov
or
shr
insb
loope
push
dec
mov
iret
loop
add
push
inc
and
pop
loopne
jl
sub
push
nop
cli
inc
or
or
add
lods
push
rorb
cltd
and
jg
adc
xchg
mov
mov
and
das
pop
fcoml
or
push
lea
das
mov
rorl
hlt
mov
mov
pop
xor
leave
call
fnstsw
ja
or
push
sbb
insb
push
pop
imul
test
sbb
pop
jne
sub
push
fisttps
or
rorb
imul
and
sub
ret
icebp
push
push
xor
call
mov
stos
dec
loopne
test
jg
add
aam
stos
dec
mov
mov
call
sbb
mov
xchg
fdivrs
jno
out
inc
mov
cmp
in
add
push
push
mov
push
sub
or
dec
test
mov
mov
adc
cmpb
sbb
jmp
jl
testb
lds
fwait
stos
inc
xlat
outsl
sbb
orb
jno
mov
fmuls
cmpsb
cltd
adc
and
dec
mov
not
inc
jns
pop
push
sbb
js
push
movsb
call
daa
mov
gs
loop
pop
aam
xchg
push
loopne
out
pminsw
daa
les
sbb
fstpl
movsl
rorb
mov
xor
mov
push
cld
mov
mov
lahf
leave
in
pop
add
aad
push
pop
pop
push
jmp
test
push
mov
in
popa
popf
movsl
mov
cmpsl
sub
jo
xchg
idivl
jmp
adc
inc
das
lods
bound
jle
push
mov
adc
add
push
enter
inc
sbb
dec
mov
pop
test
rorb
int3
inc
inc
test
adc
sbb
and
xchg
cltd
cmp
and
pop
xlat
dec
push
xchg
jge
dec
ljmp
inc
jno
sub
dec
jo
test
out
cmp
pop
gs
sti
sar
orl
inc
ret
movsw
mov
dec
loope
loop
sbb
add
xor
xor
jg
add
mov
or
arpl
lret
nop
mov
push
test
loopne
imul
add
fisubl
sub
push
jle
dec
pop
imul
cmp
es
xchg
dec
add
or
mov
aad
ja
jmp
repz
fsubrs
insl
mov
jmp
pop
push
jo
jp
xor
dec
orl
mov
pop
insl
icebp
clc
js
out
aam
in
es
inc
and
aas
ret
inc
fs
mov
xchg
popf
dec
pop
jge
daa
fimull
in
movl
test
xor
jge
cmp
cld
inc
inc
pop
std
test
int
inc
add
jne
lea
add
dec
add
stc
pop
shl
or
mov
cmp
aam
inc
jb
stos
add
ret
pop
dec
cwtl
shrb
jmp
lock
push
add
in
cmc
cmc
loope
aad
jle
rcrl
mov
cmp
mov
adc
arpl
fmuls
inc
rolb
push
mov
testb
or
scas
fisubs
mov
adc
jge
lahf
add
loopne
shl
and
add
cli
out
cmp
cmp
pop
xchg
jns
adc
jmp
test
push
std
cmp
lret
xchg
dec
xor
jmp
cmc
jns
loopne
nop
dec
mov
and
xchg
out
imul
push
xchg
push
jmp
adc
dec
adc
mov
lcall
das
icebp
stos
subb
test
jmp
outsb
sahf
imul
lcall
cmpb
in
add
pop
push
lcall
dec
mov
mov
shl
popa
mov
or
inc
jmp
lret
jo
sub
enter
ret
adc
push
es
add
fstl
xor
inc
pop
cmc
fiaddl
adc
cmpsb
pop
mov
push
adc
jmp
mov
jg
mov
jb
nop
push
je
fdivs
aas
xor
jns
lcall
bnd
push
jb
test
idivb
push
int
pop
syscall
shlb
dec
xor
dec
push
push
fcomps
aas
pop
inc
addr16
mov
popa
dec
je
fimuls
pop
mov
lds
push
jmp
in
int
push
jl
mov
nop
xor
idivl
xor
and
push
cli
sti
pop
nop
js
mov
sub
test
sub
or
not
xorb
int3
or
leave
fadds
movsb
push
sub
call
lcall
ret
stos
xchg
fs
jb
and
stos
movsb
sub
or
arpl
dec
fcom
pop
call
pop
sub
pop
imul
pop
sub
sbb
int
or
jmp
sbb
das
or
rclb
xor
push
mov
push
clc
mov
lea
movsl
or
mov
mov
dec
dec
fnstenv
lods
sub
ljmp
fwait
add
and
inc
fs
xchg
subb
popa
ret
aas
add
arpl
or
mov
add
sub
add
inc
sbb
jb
sbb
bound
or
mov
xor
dec
inc
out
jne
and
in
shlb
push
xchg
jecxz
pusha
out
xor
insl
and
cli
add
mov
or
jmp
sti
sahf
inc
dec
jb
pop
xlat
mov
shll
adc
jno
pop
lahf
stc
push
xchg
sub
sub
add
inc
cmp
or
push
push
ret
jmp
sarl
push
nop
or
xor
je
jne
push
jo
xchg
hlt
stos
or
sub
jmp
dec
shl
das
mov
das
inc
dec
out
loopne
and
sbb
and
xor
dec
mov
xlat
sbb
ret
xor
ja
outsl
hlt
cmpsl
jno
popw
cmp
stc
pop
and
xchg
hlt
inc
inc
lea
and
and
and
add
or
cmp
dec
push
adc
add
or
daa
jnp
push
inc
test
sbb
xchg
sub
mov
negl
filds
jnp
sbb
jmp
mov
lahf
arpl
pop
lret
mov
push
insb
xor
adc
cwtl
cmp
or
jg
je
hlt
add
jle
pop
clc
inc
rorb
mov
jp
mov
mov
mov
stos
dec
outsl
push
xchg
dec
or
adc
sub
add
rcrl
sub
lock
out
call
jmp
in
aas
clc
hlt
push
cmpsb
imull
or
or
leave
movsl
stos
jo
movsl
leave
andb
xor
push
pop
mov
ret
and
lods
xor
mov
pushf
lock
add
dec
mov
jmp
shlb
adcl
mov
jae
movsl
popa
aad
repnz
add
xchg
ficomps
pop
pop
shll
cwtl
cmp
filds
pushf
adc
bound
jmp
popf
cwtl
jae
fadds
jno
bound
and
pop
rol
push
dec
pop
sub
daa
xchg
pop
enter
mov
loope
inc
cmp
push
cmp
xor
ret
or
sub
inc
mov
loope
push
xorl
add
jecxz
add
int3
jns
loopne
cmp
jnp
test
inc
xor
jae
xchg
pop
js
clc
inc
push
xor
jl
aas
mov
movb
sub
lret
sub
mov
icebp
pushf
mov
jp
popf
aam
pop
faddl
mov
mov
ja
fldt
pop
jmp
in
adc
xchg
xor
mov
xchg
mov
test
fldl2e
push
scas
in
lods
inc
xchg
jmp
daa
mov
das
mov
push
mov
push
add
mov
scas
mov
es
xor
cmp
cmp
arpl
rcl
mov
ds
les
fildll
popf
push
pusha
or
sub
jb
xchg
xchg
push
push
inc
xchg
cmp
cmpb
popa
dec
sub
inc
adc
fcmovnbe
enter
or
test
inc
jbe
repnz
push
push
rolb
mov
cmp
inc
and
ss
sbb
push
out
into
inc
mov
cmpsl
jo
add
jp
mov
fdivp
and
xchg
jl
xor
ret
sbb
in
testl
jmp
mov
loope
popf
aas
xchg
inc
test
rcrl
jle
cmp
repnz
fiaddl
dec
cltd
ret
lret
jle
mov
add
push
inc
clc
cmpsb
add
xlat
stc
pop
imul
xchg
sub
das
jmp
or
push
lret
in
xchg
stos
cmpsb
mov
js
insb
mov
xchg
mov
and
fcomps
mov
jmp
xchg
notb
decl
inc
mov
push
add
cmp
dec
sti
xor
xor
ss
daa
add
scas
sbb
push
push
pop
push
or
inc
push
pop
sbb
enter
or
dec
add
dec
jne
or
test
je
sbb
lock
inc
pushf
and
add
xchg
cmp
mov
mov
cwtl
cmp
jmp
push
arpl
es
sbb
pop
sub
cld
popl
inc
inc
mov
jne
add
es
push
dec
outsl
shll
jmp
das
pop
pop
inc
dec
shr
sub
pop
push
cld
mov
call
call
imul
adc
stos
mov
pop
sub
sub
or
push
or
add
inc
dec
andb
rorb
mov
adc
or
inc
adc
mov
sarb
cmp
cmpsb
imul
or
loop
insb
cmp
in
ret
addr16
or
je
push
testl
daa
push
shlb
fidivs
adc
and
subb
popa
movsl
cmp
xor
add
inc
cmc
xor
sbb
roll
add
pop
popa
repz
ret
test
add
adc
in
ret
imul
shl
adc
add
test
cwtl
or
xor
adcb
adc
sub
dec
xchg
sbb
add
sub
ds
jne
popf
nop
or
dec
xor
addl
xchg
aas
dec
call
mov
dec
stos
lret
push
test
jl
repz
pop
ret
xor
in
stos
leave
fstl
adc
imul
pop
mov
insb
mov
push
into
sbb
dec
and
insb
inc
rorl
mov
cli
lret
insb
das
dec
loope
ljmp
nop
push
jle
adc
jecxz
std
push
test
pop
cmp
pop
shrl
sbbl
out
jbe
ret
xorb
sub
popf
jns
test
sub
dec
lods
mov
pop
pop
xchg
enter
cmpsb
scas
pop
cwtl
sub
adc
bnd
test
pop
pop
popf
aam
inc
cmp
ror
mov
push
jg
or
and
sub
stos
addl
sub
add
push
pop
dec
pop
ret
addl
pop
adc
adc
clc
shlw
xor
push
sarl
cmp
jle
test
push
sub
ror
jmp
pusha
xchg
aaa
out
out
iret
je
add
and
repz
mov
lock
push
mov
popf
ss
stos
stc
std
hlt
sarb
sub
pop
cld
in
rorb
ffreep
push
lock
cmp
or
xor
loop
mov
xor
mov
inc
clc
dec
popf
add
jecxz
bound
jo
jge
dec
push
sub
lods
add
or
imulb
or
sub
shr
nop
repnz
push
out
push
adc
pusha
adc
sbb
pushl
inc
jae
xchg
test
ds
loop
push
add
cld
aad
and
addr16
aad
roll
push
mov
ja
inc
push
adcb
rclb
inc
inc
in
daa
popf
int
add
pusha
lret
adc
and
shl
or
inc
movsl
out
xchg
mull
cmp
dec
lds
jecxz
and
pop
and
into
cmp
mov
jp
bound
cli
pop
adc
gs
cmc
add
fiaddl
push
sub
adc
or
inc
cld
movsb
dec
mov
mov
push
push
les
pop
lret
fwait
jno
xchg
outsb
cltd
xchg
les
dec
stc
les
cmp
addr16
inc
repnz
movsl
push
mov
sub
push
lods
std
sbbl
mov
ret
mov
pop
mov
jmp
sub
pop
inc
adc
xor
ja
rcrb
or
test
leave
push
loope
ljmp
sub
jmp
add
inc
iret
fistps
es
add
and
cmpsb
dec
daa
mov
jge
pop
jge
sub
adc
fcoml
in
pop
mov
dec
leave
add
mov
or
push
icebp
jl
jmp
mov
lock
mov
jle
test
daa
dec
mov
clc
dec
clc
repnz
mov
out
jmp
lret
in
jg
out
das
rclb
dec
sub
adc
mov
cld
clc
cmpsl
mov
sub
dec
inc
in
adc
xchg
jno
outsl
fnstcw
pop
fs
scas
mov
cmp
mov
mov
inc
aas
arpl
jp
repnz
cli
pop
or
dec
push
push
add
pop
orl
sbb
jmp
dec
or
xor
add
mov
insb
xor
or
dec
pop
fiaddl
jnp
push
cmp
fadds
adc
lcall
dec
shlb
inc
dec
sbb
fldenv
notl
sbb
or
push
lret
pop
fisubrl
loop
inc
cmc
jns
mov
mov
sub
mov
cs
add
ret
pusha
push
jne
repz
lret
and
mov
and
rorb
cmp
or
pop
cmp
add
ret
and
inc
pop
loope
nop
fmuls
mov
icebp
addr16
cld
adc
mov
sub
mov
add
inc
jne
xchg
mov
cmp
adcb
nop
dec
jae
fstpt
repz
test
add
lea
rorl
lock
sub
mov
cmp
std
push
push
or
repnz
sbb
inc
outsl
push
cli
fwait
jmp
leave
xchg
add
xor
xchg
add
jmp
ret
repnz
daa
shll
outsb
pop
mov
jne
je
insb
insb
adc
out
js
push
cmpl
xor
adc
repnz
mov
pushf
in
nop
lret
sub
dec
mov
cmp
das
leave
sbb
mov
std
and
popf
push
add
mov
std
jmp
mov
xchg
add
jmp
aam
test
data16
bound
sub
pop
push
push
add
adc
add
sub
or
loopne
xchg
push
xchg
ss
mov
nop
cs
icebp
mov
xor
movb
add
pop
and
add
fists
fwait
and
mov
stos
imul
jmp
sbb
push
inc
test
ss
pop
jmp
std
push
in
xlat
xchg
xchg
pop
pop
inc
dec
clc
popl
mov
and
dec
fbld
cs
jns
stos
movsl
xchg
inc
dec
test
fwait
lock
push
mov
pop
and
jns
shr
repnz
or
and
xchg
adc
mov
mov
mov
stc
and
push
jbe
aas
or
jo
push
add
setp
test
shl
pop
sub
inc
loopne
add
shrb
cmp
pop
and
inc
clc
nop
or
jo
jbe
adc
sub
mov
fnsave
xchg
sbb
or
add
adc
or
lret
pop
inc
jae
shll
mov
mov
insb
and
popf
cmp
or
add
jbe
fs
scas
jl
or
lahf
pop
xor
add
loope
mov
push
xchg
out
pop
cmpsb
scas
pop
sbb
or
nop
pop
jmp
xchg
insl
add
fstps
and
subb
stos
loop
add
lds
test
mov
bound
lods
or
jge
stos
mov
xor
mov
stc
rorl
cli
into
popf
or
jg
ljmp
dec
xor
pop
or
adc
sti
insb
dec
cs
and
aad
mov
xor
popa
jp
pop
mov
add
es
insl
xor
push
jmp
push
loope
add
cmp
jmp
leave
add
mov
mov
add
add
mov
mov
dec
pop
clc
rorl
mov
add
or
cmpsb
ret
imul
inc
scas
fists
into
adc
cs
push
dec
adc
fistpll
pusha
scas
les
xor
testb
out
sub
add
jge
imul
jo
inc
das
test
xchg
std
adc
cmp
jle
jmp
inc
add
and
jmp
shl
cmp
pop
loopne
inc
outsl
mov
jg
push
sub
cmp
push
adc
pusha
pop
pop
add
js
mov
cmc
pop
sbb
add
cmp
pop
ret
xor
push
jge
imul
jmp
and
dec
pusha
pop
push
xchg
sub
lea
push
and
jmp
pushf
adc
inc
rorl
out
xor
pop
mov
adc
and
in
jp
xor
xchg
or
sub
sbb
decb
lods
aad
test
mov
sbb
pop
xor
ret
fsts
fs
mov
add
push
mov
mov
jl
rorb
mov
aam
test
mov
add
lret
push
ret
cmpsb
xchg
out
push
shll
mov
pop
mov
or
sbb
or
adc
xor
pop
cmp
mov
inc
popl
test
mov
pop
mov
xor
jno
pop
cld
mov
aas
mov
sub
les
mov
push
xchg
scas
and
ret
stc
sub
jbe
sarb
cmp
test
dec
jne
add
pop
xchg
lds
test
push
or
test
pop
daa
data16
xlat
xor
sarl
sbb
loop
insb
sbb
pop
xor
negl
stos
or
fs
add
orb
xor
sbb
ja
imull
shl
lahf
push
cmpsb
imul
sbb
mov
jmp
xchg
adc
cli
sub
out
inc
iret
push
mov
in
jl
pop
leave
sub
jns
data16
push
clc
lcall
nop
das
mov
add
mov
jmp
pop
xchg
mov
ds
or
pop
ljmp
lods
jae
ljmp
rol
xor
pop
add
nop
xor
sub
xchg
dec
add
pop
sti
add
fld
ret
inc
or
rcll
mov
xlat
inc
push
inc
xchg
jo
repnz
scas
cltd
movsl
add
adc
xor
js
add
notb
mov
les
sub
stos
test
xchg
adc
add
add
loope
inc
pop
cwtl
xchg
sub
cmp
xchg
xchg
out
roll
call
dec
lret
xchg
out
push
push
jb
and
and
fsubl
sbb
mov
and
cmp
or
mov
loop
add
xor
jg
add
inc
add
fcoml
pop
pop
jmp
push
dec
push
pop
in
jmp
js
aaa
push
adc
sub
lcall
add
add
mov
xchg
shll
orb
push
add
ja
inc
and
add
xor
mov
in
pop
addr16
cmp
inc
movsb
adc
gs
daa
push
dec
and
add
mov
ljmp
aad
or
and
mov
add
xchg
xchg
sub
or
popl
inc
cmp
dec
outsb
jbe
pusha
fwait
adc
adc
add
popf
mov
arpl
lods
xor
jg
and
adc
inc
fldenv
mov
and
and
or
xor
jmp
pop
inc
int3
push
xchg
push
push
dec
add
ds
fsubl
je
xor
mov
or
imul
insl
jmp
pop
in
nop
jg
mov
into
sti
cmp
sub
stc
addl
xor
mov
sahf
inc
fistl
insb
cli
je
addb
sub
gs
imul
push
std
lods
test
and
jge
repnz
mov
mov
divb
mov
sub
add
and
adc
add
or
insb
jl
pop
pop
cmpsb
fadds
adc
sub
pop
jo
push
popf
and
pop
cli
pop
add
push
sbb
jae
fstpt
in
test
dec
xchg
cltd
adc
stos
xchg
iret
fisttpl
pop
fists
popa
jmp
xchg
add
inc
inc
add
push
jmp
mov
pop
pop
sub
mov
xchg
mov
sub
mov
pusha
iret
int3
mov
push
insb
pop
mov
push
push
push
pop
es
aas
xchg
jne
rclb
out
xchg
inc
pop
lcall
popa
sub
pop
daa
rolb
or
movsb
xor
adc
cs
sub
sub
mov
or
add
inc
imulb
fsub
dec
pop
stc
daa
cmp
push
ds
push
rolb
testl
mov
and
cmp
jl
shr
inc
aas
jno
data16
outsb
mov
movsb
add
lock
and
inc
xchg
daa
jns
xlat
cwtl
pop
jmp
pop
daa
jge
nop
xchg
add
cwtl
and
cmc
mov
repz
call
mov
mov
pop
push
mov
push
cli
dec
xchg
xor
or
mov
mov
or
lods
xchg
adc
mov
push
fisubrl
lea
xchg
fcoml
ret
mov
mov
pop
push
jmp
loop
xchg
arpl
add
pop
push
mov
push
pop
popf
dec
cmc
movsl
shlb
sarb
dec
stos
iret
imull
rcrb
push
mov
mov
pop
jle
jl
and
cs
shr
or
jno
sbb
aaa
in
push
mov
xor
inc
xor
or
adc
pop
pop
imul
sub
mov
shll
pop
ds
sbb
push
iret
push
out
bound
je
jmp
sub
out
data16
xchg
inc
fildl
jl
fstl
pusha
fists
addb
pop
xchg
push
xchg
push
in
and
jb
mov
or
or
nop
fwait
dec
notl
add
mov
mov
stos
and
add
jnp
sub
inc
push
or
or
push
lods
pop
push
cs
cli
ljmp
les
and
cmp
adc
mov
ljmp
cmp
scas
pusha
dec
jmp
sub
add
pop
int3
outsl
xor
mov
rclb
repnz
pop
je
clc
xor
xchg
pop
xlat
pop
adc
jo
pop
pop
adc
jg
xchg
dec
fldenv
push
outsl
or
or
jmp
out
pop
and
inc
jmp
imul
dec
push
inc
fsub
jmp
or
loopne
movsb
das
mov
sub
jle
dec
test
stos
or
call
or
sbb
mov
cmp
push
dec
push
jnp
insb
scas
imul
scas
loop
jg
aaa
test
dec
out
mov
repnz
sub
pop
cmpsl
ficomps
sub
jp
or
mov
dec
nop
lea
or
fdecstp
in
sarl
push
jo
outsb
push
in
pop
dec
cwtl
repnz
cmp
pop
pushf
inc
sub
lods
dec
adc
sbb
add
mov
js
dec
pop
inc
xor
ficoml
mov
shr
adc
xor
dec
mov
sub
stos
fdivr
dec
push
and
and
push
adc
cli
xchg
insb
adc
add
lock
cmp
pop
stos
adc
inc
fwait
repz
add
rorb
out
jmp
test
lods
sub
fadds
lods
jae
adc
leave
lret
xchg
sarb
add
or
imul
jmp
in
pop
test
pop
xor
subl
jg
or
popa
sub
and
ds
push
into
xchg
mov
mov
in
inc
mov
add
sbb
outsl
and
ret
sub
clc
jmp
jmp
inc
arpl
sahf
sbb
add
out
jecxz
pop
inc
je
mov
pop
mov
cmp
and
push
shrb
sub
push
xchg
dec
xor
mov
sti
pusha
rorl
jne
dec
add
sub
dec
fs
sbb
mov
mov
aad
sub
or
pop
popa
lret
ret
lcall
push
out
inc
jge
inc
jg
xor
int3
mov
imul
or
sbb
xchg
pusha
push
inc
daa
adc
push
and
adc
mov
add
dec
js
adc
add
inc
or
test
movsb
scas
mov
test
push
cmp
inc
f2xm1
imulb
jmp
xlat
xor
pop
das
xchg
sbb
scas
inc
jl
mov
test
mov
fldt
fs
jbe
cs
or
xchg
inc
cmp
jo
mov
aam
sahf
mov
scas
mov
xchg
adc
mov
dec
dec
jmp
test
rcrl
repnz
push
inc
cmp
push
inc
orb
shr
jns
std
out
lds
mov
bnd
sbb
mov
je
cmp
ljmp
dec
inc
pop
gs
fwait
xchg
negl
push
cmpsl
repz
mov
cmp
mov
vpmulhw
pusha
or
inc
stos
and
jae
jmp
inc
pop
sub
data16
push
divb
jmp
leave
push
or
dec
cmp
fsubrs
dec
into
or
sbb
add
sti
xor
frstor
mov
es
jnp
fcmovbe
push
popf
pop
inc
xchg
jle
std
jns
leave
cmp
push
notb
mov
push
roll
or
adc
data16
je
mov
rorl
and
enter
int
mov
movb
push
clc
pop
repnz
fldcw
in
cmc
dec
das
in
cli
pop
call
jg
adc
dec
dec
mov
fcmovbe
bound
cs
jmp
push
mov
xor
sub
fsub
insl
shrb
adc
jmp
jmp
inc
insl
or
inc
jmp
adc
imul
or
lock
push
out
jp
or
mov
inc
packuswb
mov
sbb
dec
pop
adc
sbb
adc
xor
sub
and
call
sub
shrb
lods
add
fbstp
mov
add
push
or
mov
push
xchg
push
pop
push
shr
icebp
mov
sub
pop
push
cmpb
cwtl
in
adc
decl
lahf
push
mov
fmul
cmp
xchg
out
sti
xchg
daa
ja
xor
dec
mov
or
sub
push
decl
inc
pop
sbb
dec
jns
pop
fmuls
xor
and
pop
and
sarl
shlb
imul
out
out
stos
out
push
ficoms
insl
ret
inc
lods
enter
cmp
sub
cmp
dec
pop
aas
dec
sub
in
cwtl
mov
cmp
je
daa
xchg
push
jnp
mov
mov
rcl
adc
adc
pop
pop
movl
mov
popf
jo
lret
sbbb
movsl
sub
adc
pop
adc
ja
or
or
add
imul
rcrl
push
out
and
pop
cmpsl
sahf
lcall
addb
xchg
fidivrl
pop
jle
in
in
leave
pop
divb
daa
rorb
mov
es
or
xchg
clc
in
shr
sub
data16
mov
dec
add
es
mov
add
fsubrl
ds
xor
adc
xorb
popf
mov
std
or
push
push
sub
fdivp
push
xchg
adc
jnp
ret
daa
mov
pop
and
jno
loop
test
xchg
inc
pop
fstps
cld
insb
fnstenv
jmp
xchg
out
mov
cmp
push
mov
daa
jg
dec
mov
insb
stos
pop
pop
mov
test
push
adc
subl
pop
sub
sub
mov
cmpsb
lods
popf
inc
mov
cmp
dec
mov
jbe
xor
xchg
inc
in
jns
dec
sub
mov
jbe
loopne,pn
repz
test
nop
filds
push
cmpsl
ret
sub
inc
sub
adc
xchg
inc
pop
push
cmp
mov
add
pop
jmp
inc
xchg
xor
or
leave
jg
add
cmp
mov
mov
repnz
sbb
outsl
outsb
sbb
add
jmp
xchg
jne
imul
aam
mov
and
push
add
in
xchg
xchg
andb
jno
pop
orl
bound
loop
mov
inc
repnz
aad
movsl
fstps
in
cltd
das
pop
pop
xorl
pop
sbb
or
shl
jmp
xchg
das
pop
sbb
les
orl
jecxz
add
mov
add
push
adc
lahf
mov
adc
pushf
xor
sub
add
xchg
fcmovbe
insb
dec
sub
scas
and
mov
scas
gs
sub
loop
xor
fdivrs
cmpsl
inc
mov
xor
test
mov
rorb
hlt
cmpb
pop
push
mov
push
xor
add
out
adc
shl
shll
pop
xorb
mov
jae
stos
mov
push
pop
mov
and
push
or
les
adc
pusha
pop
jmp
enter
jle
pop
jecxz
inc
scas
addr16
popa
inc
movups
and
and
push
mov
adc
shl
popa
dec
pop
call
imul
jnp
cmp
sub
inc
aam
jle
sbb
es
xchg
adc
das
sarl
mov
cs
out
lret
jge
adc
dec
jle
sub
adc
inc
ja
out
pop
mov
push
sub
stos
sti
lret
xor
daa
sub
movsb
aas
xchg
not
push
aas
pop
ljmp
add
or
imul
jmp
cmp
popa
push
subb
sbb
bound
mov
pop
addl
push
jmp
pop
jle
jp
cmpl
jbe
xchg
or
adc
ljmp
cmpsb
and
scas
rolb
mov
push
aaa
popa
sbb
mov
pop
add
mov
loop
addb
adc
popa
rcll
sahf
xor
lea
js
xor
jecxz
cmpb
inc
lea
xchg
dec
or
sub
mov
icebp
aaa
adcl
or
pop
cmpb
inc
das
adc
jae
or
vmovlps
adc
xor
adc
jae
push
in
push
inc
or
xor
pop
cmc
cs
sub
or
popa
inc
in
add
movsl
add
ljmp
ret
ljmp
les
into
dec
pop
add
push
sub
jmp
loope
cmp
jge
in
adc
inc
int3
nop
imul
mov
dec
mov
push
xchg
insb
inc
adc
pop
and
shl
inc
xchg
mov
pop
pop
and
syscall
mov
sub
mov
pop
push
push
mov
imul
shrb
fists
pusha
sbb
jmp
clc
call
xchg
xor
xchg
inc
cmp
jecxz
mov
fadds
pop
or
xlat
shrb
mov
push
pop
popf
repz
loop
imul
add
or
adc
mov
push
scas
dec
pop
mov
sti
icebp
ret
or
lret
fstp
js
push
test
ja
sub
fadds
jns
inc
iret
sub
enter
fwait
mov
dec
fidivrl
imul
pop
clc
aad
je
js
mov
dec
les
mov
push
test
and
or
and
add
out
jo
nop
mov
rcrb
lahf
fsubs
sahf
mov
std
mov
and
sub
add
mov
sub
bound
in
mov
movsl
inc
lock
scas
jns
pop
popf
iret
pusha
loop
push
mov
pop
sbb
jp
cmpsb
les
push
fdivr
lods
lods
cmp
jb
std
scas
mov
sub
hlt
popf
ficoms
outsl
inc
in
adc
mov
xchg
inc
xor
js
dec
push
in
xchg
cmp
lea
pop
inc
push
or
das
ja
sbbl
xchg
mov
add
lea
in
and
clc
lahf
jle
or
adc
es
loopne
sbb
mov
or
cwtl
pop
push
adc
cmp
and
sub
test
mov
mov
adc
xor
mov
lods
jnp
mov
adc
mov
inc
cmp
ds
add
loopne
adc
jl
bound
pusha
xchg
or
les
jmp
outsl
fsubl
xor
enter
xor
out
inc
mov
inc
mov
incb
mov
arpl
cmpl
fmuls
mov
stos
sbb
mov
push
push
add
adc
adc
gs
push
hlt
or
xchg
mov
insb
jp
push
sub
cmpsb
or
loop
aam
dec
stos
mov
xchg
out
mov
pop
add
xchg
inc
out
pop
xchg
pop
negl
jl
inc
cld
and
cmp
sbb
sub
rol
les
sbb
sbb
dec
dec
mov
fstpt
mov
xchg
sub
std
out
dec
pop
inc
lret
mov
add
daa
jmp
repnz
and
dec
mov
int
mov
iret
or
arpl
jle
adc
shll
rorb
pop
pop
mov
mov
fucomp
mov
pop
sbb
lret
cmpsl
inc
dec
rol
fs
jmp
mov
call
cmpl
and
sbb
jge
and
jne
insb
xor
pop
add
movsl
jno
inc
int3
pop
xor
and
jno
sub
mov
mov
or
and
das
sub
push
in
ds
out
dec
jb
jmp
mov
loope
sub
cmp
aad
pop
and
add
in
push
mov
loopne
inc
push
sub
insb
xchg
add
xchg
inc
movsl
xchg
lds
mov
mov
push
jne
pop
push
mov
insl
jns
xor
sub
dec
inc
shl
add
pop
dec
add
pop
mov
hlt
aas
dec
push
out
leave
gs
fistl
mov
push
jmp
pop
das
push
es
push
xchg
outsb
mov
jnp
outsl
mov
pop
adc
iret
push
sub
inc
dec
jle
push
push
cmp
inc
cmpsb
xor
pop
pop
mov
loope
imul
mov
loopne
cmp
ds
fcomps
sub
pop
mov
daa
xchg
out
and
push
dec
push
into
xchg
add
shll
or
repz
ret
jmp
fsin
mov
call
push
inc
leave
sub
lgs
fists
pop
cmp
add
popa
sub
mov
add
pop
or
sub
loopne
xchg
mov
mov
xor
mov
and
rol
or
mov
push
ret
cwtl
cs
ret
outsl
jns
adc
out
sbb
rcrb
js
mov
fcompl
or
imul
or
or
nop
and
or
subb
cwtl
addr16
add
cltd
ret
mov
enter
je
sub
int
hlt
or
fnstenv
push
sbb
and
push
xor
jb
sub
rorb
and
out
pop
mov
jg
in
push
outsl
sbb
sbb
or
jbe
sub
mov
xor
scas
mov
in
pop
push
stc
idivb
rclb
adc
test
jmp
pusha
ja
addl
jns
clc
inc
jl
push
out
loopne
mov
cli
add
adc
pop
cli
cmpsl
ret
adc
xchg
inc
aaa
cmp
and
int3
or
add
adc
pop
daa
pop
test
dec
stos
lahf
inc
sbb
jle
xor
pop
pop
sbb
mov
inc
mov
or
or
cmp
int3
push
pop
cs
mov
inc
gs
mov
sti
inc
add
rcl
sub
pop
lea
jle
mov
mov
lcall
push
cld
jbe
cmp
mov
int3
sub
into
outsb
sub
inc
pushf
xchg
orb
nop
add
mov
xchg
neg
icebp
and
ljmp
arpl
idivl
cld
xor
in
mov
sub
cwtl
sub
pop
enter
push
push
mov
add
jle
xchg
or
test
jno
xchg
out
mov
lret
sub
das
sub
push
stc
sbb
jmp
rorl
jmp
cmc
incb
pop
push
jmp
add
lds
pop
lahf
xchg
nop
mov
imul
xlat
jns
push
jmp
pop
and
add
pop
fstl
loope
fmull
xor
jmp
push
insl
xchg
das
fiaddl
push
movsb
pop
push
test
loop
es
mov
cmp
mov
add
pop
sub
mov
xchg
cmp
aas
mov
imul
pop
push
daa
lret
pop
in
or
insl
adc
sub
jns,pt
ret
xor
sbb
adc
jo
xchg
dec
lcall
pop
lods
jns
xchg
or
aad
xor
ja
mov
add
and
cwtl
fsubrl
dec
dec
pop
pop
add
sbb
jle
in
add
xlat
push
in
in
int
movsb
clc
pop
addb
or
push
xor
rorl
xor
pop
out
jg
jmp
lret
cwtl
xorl
push
inc
jb
les
or
jae
cmp
lret
and
arpl
add
or
enter
pop
push
in
je
outsl
daa
and
lcall
push
mov
sub
fadds
mov
or
enter
inc
and
and
lods
pop
iret
push
repnz
dec
dec
rcrl
filds
pop
pusha
sub
inc
dec
xchg
pop
adc
fisttps
fcmovne
fisubrl
scas
push
pop
jne
inc
pop
in
add
cmc
aad
aad
shr
daa
jmp
jno
adc
sbb
mov
ffree
cmp
push
push
pop
insb
jmp
xor
ret
lret
cmp
fsubl
and
mov
push
pop
mov
and
mov
icebp
or
mov
jns,pt
shlb
or
inc
xchg
popa
add
pop
xchg
or
imul
arpl
ds
pop
inc
add
dec
repz
xchg
in
add
pop
fisttps
mov
outsl
xor
clc
jmp
and
pusha
jg
mov
push
loop
inc
jl
pusha
mov
push
mov
in
push
sub
dec
push
orb
and
sub
les
mov
push
mov
or
and
lock
pop
push
ja
movsl
dec
pop
icebp
xchg
mov
mov
test
sub
jle
popf
mov
lods
cmpsb
dec
loopne
dec
inc
shl
test
xchg
or
jl
add
fs
insb
daa
cmpsb
out
daa
cmc
addb
aad
repz
dec
in
or
pop
push
pop
adc
add
jne
ja
js
movsl
pushf
scas
in
daa
pop
aad
mov
dec
mov
jae
or
movsb
jp
jmp
enter
sub
mov
mov
repz
pop
jecxz
xchg
sarl
pandn
stc
pop
test
lahf
ret
das
push
out
xchg
push
or
sbb
jb
jbe
push
jmp
notl
inc
leave
jl
sbb
insl
popf
fdivl
lret
sbb
ret
pop
add
es
sub
jb
inc
inc
stos
add
int
imul
jmp
dec
outsl
add
xor
sbb
sbb
push
mov
ds
jle
and
dec
and
sub
out
add
xchg
add
lods
in
dec
icebp
out
xlat
in
sub
jae
push
nop
mov
pop
test
inc
dec
cld
incb
jb
rcrl
dec
sbb
adc
add
je
pop
push
push
ret
push
out
mov
mov
add
clc
popf
mov
ficompl
test
adc
jae
xchg
mov
rcrb
mov
add
lds
cwtl
add
inc
mov
loopne
leave
push
push
cmp
pop
mov
outsb
pop
out
and
xor
jg
test
loopne
mov
sub
or
iret
sub
sbb
push
and
test
js
shl
xor
cmp
xchg
lret
jnp
movsl
hlt
fadds
cmpsb
cli
xchg
dec
inc
shlb
ljmp
mov
cli
push
inc
or
jmp
mov
pop
and
fldcw
mov
inc
cmpsl
sbbb
cmp
in
push
mov
mov
jg
test
or
adc
sub
out
dec
and
or
icebp
pop
add
sub
and
icebp
push
jecxz
lcall
sub
shrl
push
add
insb
mov
sbb
enter
pop
pop
orb
add
push
add
repz
dec
loope
and
ljmp
pop
dec
movsl
mov
adc
dec
push
add
adc
or
outsl
movsb
push
xchg
movsb
ret
ret
bound
int
mov
pop
or
ret
inc
push
add
jmp
jo
mov
lret
inc
mov
mov
mov
inc
adc
in
int
jnp
dec
add
mov
adc
das
pop
push
mov
add
pusha
inc
iret
jl
mov
roll
add
ss
or
rorb
and
popa
std
xlat
insb
adc
shr
gs
cmp
mov
lock
fstl
ds
jbe
push
ret
stc
psubsw
adc
fwait
cmc
outsb
adc
jmp
into
jecxz
sahf
add
pop
and
pusha
not
movsb
or
add
aas
les
and
mov
in
mov
bound
push
pop
dec
or
push
mov
sub
out
xchg
pop
mov
add
test
imul
test
push
push
jg
addr16
or
add
xor
incb
rcll
out
test
loope
push
push
jo
cmp
adc
add
push
pop
jmp
lret
mov
or
jle
jg
push
add
cltd
das
jmp
outsb
xchg
lahf
pop
xor
lods
lds
add
jbe
push
in
cmp
adc
xorb
adc
adc
fptan
xlat
cmp
adc
add
cmc
js
out
js
dec
cld
sbb
aam
sbb
sbb
mov
popf
sub
call
pop
out
and
mov
in
dec
push
stos
and
mov
xor
or
add
push
jge
or
push
mov
pop
add
in
mov
imul
push
sub
add
popa
or
in
add
andl
cmpsl
mov
push
cmp
jmp
xchg
jnp
pop
dec
fdivr
push
sub
sub
jnp
pop
push
xchg
adc
or
adc
ret
add
repz
mov
popf
notl
pop
adc
cmpsl
jp
add
fnstsw
test
loope
cmc
cmp
pusha
orps
mov
dec
pop
sub
test
mov
add
pop
add
or
cs
out
xor
cmp
jge
jbe
sarl
pusha
mov
adc
lds
test
outsl
mov
movsl
test
pop
loope
shlb
adc
lock
das
xchg
pop
xchg
mov
add
sbb
jnp
xchg
jno
pop
pop
or
sbb
inc
adc
aaa
add
mov
add
gs
popf
ja
lret
push
fmull
jmp
movsl
js
sub
xorb
movsb
shlb
sub
jbe
aas
or
xor
cli
sub
sbb
or
sbb
sub
and
rorb
push
push
sbb
sbbl
or
and
cmp
or
sub
adc
jl
push
push
jmp
pop
divb
arpl
or
pop
fnstsw
adcl
fwait
mov
push
aam
movsl
ret
fcmovb
inc
sti
cmpsb
and
pop
adc
mov
js
add
sub
cwtl
mov
xchg
push
push
mov
or
cmpb
inc
sub
aad
pop
ss
lock
mov
jns
pusha
loop
outsl
daa
rcll
mov
and
lds
lea
roll
jmp
out
fcos
xor
xor
gs
or
fidivrl
dec
mov
dec
mov
xchg
push
not
mov
mov
add
adc
icebp
add
jne
negb
pusha
add
push
or
add
dec
push
stc
lds
or
or
sahf
xchg
jle
push
sub
cltd
adc
pop
push
or
test
jmp
mov
mov
mov
out
xchg
scas
fmuls
sub
push
test
xchg
jg
sub
ret
popl
subl
mov
adcb
div
jecxz
mov
jg
aaa
jmp
fdivrs
push
push
dec
xchg
sub
rol
push
push
jb
dec
sub
out
or
int
cmp
pusha
jb
or
sub
and
pop
lret
cs
fisubrs
jmp
and
decb
mov
mov
xchg
loop
mov
subb
aas
dec
add
mov
sub
icebp
mov
cwtl
add
aaa
xorb
dec
mov
push
mov
pop
add
pop
push
cmpsb
call
cmp
add
pop
sub
pop
jmp
imul
pop
xchg
ds
push
jbe
mov
fwait
loope
or
push
mull
jg
in
push
sbbb
push
fiadds
imul
test
push
jbe
inc
cmp
arpl
adc
xchg
mov
and
or
jmp
pop
mov
xor
popf
push
fadds
and
and
adc
mov
fdivrl
in
sti
add
jp
pushf
sub
ret
mov
push
mov
dec
mov
pop
xor
lods
out
xchg
gs
cmp
cmc
push
fdivr
push
mov
or
pop
jecxz
icebp
cltd
fs
push
sarl
out
div
jmp
jmp
mov
out
pusha
pop
fdivrl
mov
testb
roll
js
std
cltd
ljmp
lahf
hlt
dec
gs
rolb
or
push
mov
push
cltd
xchg
daa
or
hlt
js
xor
repz
jns
mov
jmp
push
and
fistl
xchg
sub
stos
add
push
jmp
push
fwait
shrb
iret
lret
sbbl
add
add
or
imul
cmp
mov
pop
and
add
iret
adc
add
jne
sub
mov
sahf
mov
mov
or
stc
push
jns
dec
mov
mov
mov
stc
add
push
das
movsl
mov
enter
lret
mov
pop
push
mov
and
jg
add
push
inc
add
ja
mov
mov
and
ss
pop
and
addr16
and
jo
daa
inc
and
js
add
cmp
mov
or
bswap
pop
sub
movsb
mov
mov
popf
push
add
inc
shrw
sub
sbb
push
mov
sub
not
leave
or
iret
add
fsubr
mov
sbb
scas
frstor
cmp
pop
addr16
mov
adc
movsb
and
inc
lret
sbb
out
mov
leave
add
add
add
pop
cmp
jae
jmp
test
fcoml
ja
mov
push
leave
cltd
add
dec
mov
inc
das
pop
push
repz
push
xchg
clc
dec
pop
mov
jmp
add
and
dec
fs
adc
inc
mov
test
loopne
mov
cmp
fwait
gs
adc
pop
std
mov
test
dec
pop
mov
sahf
or
stc
dec
bound
pop
sub
cmpsl
sub
loop
clc
clc
mov
dec
jmp
enter
lds
inc
gs
sbb
jns
or
and
pop
push
dec
pop
mov
pop
mov
insb
pop
dec
aam
jmp
jg
enter
cmp
inc
inc
pop
mov
ret
inc
add
cli
xor
out
or
jmp
and
bound
mov
enter
add
mov
sbb
dec
adcl
es
sbbb
push
inc
psrlq
pop
mov
sub
xor
mov
lods
addr16
xlat
adc
inc
or
and
add
out
pop
loope
lods
add
ret
and
push
dec
rcrb
push
popa
push
das
and
pop
sti
adc
dec
add
ret
mov
leave
pop
pushf
push
rclb
xchg
mov
pop
mov
test
pop
mov
fs
and
fidivs
add
test
aas
mov
add
inc
xchg
dec
sub
ret
and
sub
mov
jbe
outsb
lret
lahf
pop
jmp
mov
sub
inc
jle
out
aaa
sahf
ret
push
mov
ss
dec
fldt
sbb
sbb
into
inc
loopne
xor
sbb
repnz
pop
mov
movsb
iret
cmp
out
xchg
ret
dec
aad
push
shrl
rolb
iret
fisubrl
cmp
sub
mov
leave
lods
cmc
or
loop
cmp
lea
mov
test
in
mov
add
scas
jb
xor
fs
pop
xor
leave
xchg
aaa
test
pop
mov
bound
cmp
adc
daa
jb
notb
jmp
add
mov
femms
mov
mov
push
in
dec
mov
xorb
rcrl
jg
add
notb
or
push
sbb
mov
inc
mov
pop
sub
sub
push
arpl
pause
mov
jge
push
and
push
inc
jo
inc
xchg
enter
and
pop
test
sti
andb
push
test
sbb
or
push
add
dec
aaa
repnz
pop
jg
das
pop
les
mov
lods
shrl
nop
xor
repz
add
es
xchg
inc
pushf
push
mov
les
xchg
cmp
jb
das
call
data16
mov
cmp
out
rolb
dec
dec
inc
loopne
or
psubsw
cmp
cs
add
daa
lock
cli
xchg
or
out
movsl
mov
inc
push
jne
test
xor
dec
push
cmp
sti
popf
jle
xchg
push
inc
imulb
call
mov
dec
jmp
or
popf
rolb
jmp
adc
inc
mov
mov
test
int3
or
pop
icebp
add
jle
iret
inc
shlb
addb
mov
loope
cs
in
mov
addr16
xchg
pop
cmpsb
or
cmc
lea
sub
mov
add
add
push
or
in
jge,pn
push
inc
shlb
lcall
insl
adc
sub
stos
cmp
sbb
loope
jmp
ja
mov
push
es
jmp
dec
mov
sub
sub
dec
cmp
add
xor
cmp
aam
adc
push
inc
test
sub
pop
jmp
mov
stc
scas
ret
loop
cwtl
ffree
enter
daa
outsb
mov
pop
imulb
jb
lock
add
and
or
adc
add
cmpsb
sbb
ret
ljmp
loope
cmp
jg
inc
dec
adc
push
push
mov
cmp
push
outsl
call
dec
call
shlb
lret
sbb
jle
loopne
and
fs
push
jae
sub
std
xchg
pop
xchg
enter
push
push
push
fs
fists
jg
repz
or
mov
sbb
lahf
lock
popa
and
outsl
je
test
cli
test
and
jecxz
adcb
jo
and
jmp
and
jne
push
mov
into
mov
jbe
daa
mov
xchg
inc
xor
and
or
ret
inc
jmp
movsl
add
jecxz
add
sub
movsb
int3
sub
cmc
data16
cld
add
enter
jne
push
jl
sahf
sub
sub
or
lret
mov
sbb
jbe
lods
outsl
inc
dec
lock
dec
push
je
cmp
addb
orb
fstps
repz
or
cli
decb
mov
dec
mov
rolb
add
leave
shll
push
mov
sub
xchg
pop
mov
test
call
push
mov
dec
xchg
into
out
icebp
andl
sarb
jmp
add
ljmp
xlat
mov
xor
bound
shr
dec
dec
aaa
xor
nop
or
pop
pop
mov
mov
cmp
inc
jge
inc
push
or
inc
and
or
xor
adc
or
push
inc
cmc
xor
lds
or
not
rorl
setg
adc
pop
sub
jmp
push
cmp
mov
sub
js
mov
out
cmc
or
sarb
dec
pop
not
xor
xor
xor
mov
das
mov
movsl
das
pop
dec
pop
je
xchg
cmp
outsb
mov
jl
aaa
or
das
add
mov
and
movhps
les
mov
lock
add
fwait
cld
cmp
test
mov
sub
add
scas
arpl
stos
push
insb
inc
dec
aaa
mov
in
inc
adc
pop
ds
inc
scas
add
inc
in
or
lret
dec
pop
loop
nop
call
add
xorl
cmp
mov
lret
push
in
mov
xchg
data16
popf
add
mov
pop
dec
push
jle
push
jmp
xchg
xchg
mov
popf
add
pop
push
mov
rorb
loop
fcmovb
xchg
sbbb
pop
sub
cmp
in
aas
mov
jo
fwait
lds
push
mov
mov
or
dec
or
push
das
jl
popf
incb
test
aam
and
nop
xlat
mov
mov
push
bound
stc
mov
or
fdivs
ror
and
and
and
in
xchg
divb
dec
push
icebp
adc
and
sub
sub
out
fcmovnbe
pop
add
int
pop
dec
lds
fcomps
jge
sub
xor
std
les
lea
icebp
inc
and
in
frstor
mov
shr
sbb
scas
push
cmp
mov
mov
push
push
dec
ffreep
scas
cli
in
mov
push
mov
add
sbb
xor
in
push
scas
int3
xlat
jle
call
xchg
cmp
pop
push
pop
mov
int3
jo
std
xchg
push
sub
movsb
push
inc
pop
mov
xchg
out
rorl
push
sub
ds
arpl
repnz
adc
xor
in
jecxz
mov
jmp
pop
push
and
sti
roll
shl
inc
mov
jns
adc
in
mov
xlat
test
ljmp
xchg
andb
ss
inc
mov
shll
sarb
rorl
or
xchg
popf
pop
push
push
or
cmp
jecxz
outsb
bound
aam
push
lcall
and
lock
push
jmp
stc
cmp
daa
xor
divl
lcall
mov
fistpl
push
sbb
out
mov
sbb
or
shrb
insl
subb
add
je
pop
jge
or
add
mov
inc
inc
in
outsb
push
inc
sub
mov
sbb
push
addr16
test
add
and
in
cmp
sub
daa
cmpsw
jge
cmpsl
xchg
xlat
fwait
cmovs
xchg
inc
mov
in
cwtl
add
test
add
mov
sbb
sbb
adc
ja
jns
cmpsl
hlt
or
mov
jnp
jmp
cmpsl
mov
pop
test
test
mov
jbe
jmp
mov
xor
push
push
rcrl
pop
lods
or
and
jg
push
cltd
popa
cmp
pop
mov
cmpsb
fisttpll
cwtl
push
xchg
jb
add
outsl
add
jmp
cs
cmp
sahf
cmpsl
push
addr16
mov
push
sub
fsts
repz
cwtl
jae
pop
inc
out
jnp
pop
push
jg
les
and
cmpsl
cmp
mov
repz
aam
pushf
popa
dec
xchg
push
mov
sbb
cmc
ljmp
div
push
push
push
pop
pop
push
cli
gs
push
dec
cltd
ja
js
adc
ss
and
cli
cwtl
decb
mov
or
pop
pushf
sub
mov
adc
xchg
lret
push
dec
je
push
inc
mov
and
shrb
lcall
in
shlb
cmp
iret
xchg
testb
testl
lds
in
sub
icebp
sarl
fistps
inc
jmp
xlat
dec
stos
sub
inc
sbb
add
xchg
mov
inc
add
enter
lods
out
pop
inc
cmp
loopne
xor
outsb
add
dec
xchg
xlat
cmpsb
add
xchg
push
jnp
or
mov
arpl
lods
xlat
adc
ss
loopne
out
dec
lods
mov
xor
pushf
or
pushf
dec
push
sub
cmp
mov
lcall
jl
jnp
addl
std
mov
je
shr
dec
xchg
pop
daa
mov
jmp
adc
cmp
push
adc
jp
or
test
inc
sub
pop
pop
add
out
imul
mov
or
sbb
movsl
sarb
notb
fisttps
and
push
sti
jl
cmp
pop
ror
int
cmp
iret
add
push
lds
sub
inc
mov
inc
daa
dec
dec
sub
ljmp
adc
and
ret
pop
enter
nop
xor
imul
cmp
pop
push
push
ret
std
or
jmp
add
out
adc
sbbb
call
adc
scas
or
out
and
cmp
shll
xchg
imul
jecxz
mov
shr
add
pop
and
jp
xor
jp
push
cmp
shl
add
inc
jne
pusha
insl
mov
mov
fcoms
arpl
aas
rolb
and
cmpsb
xor
loopne
and
pop
lods
sbb
stc
ljmp
jle
jp
cmpsb
ret
orb
mov
aad
daa
js
xchg
std
xchg
xchg
das
xchg
pop
cwtl
inc
push
pop
push
loopne
adc
movsl
loop
fldenv
clc
lock
rcrl
lret
movsl
adc
js
pop
or
inc
push
sub
mov
add
or
add
add
andnps
mov
xchg
adc
add
pop
add
aam
icebp
daa
and
sub
push
and
es
pop
lahf
popa
or
inc
or
push
jno
or
cmp
xor
pop
adc
pop
sahf
sub
daa
fdivl
jne
pop
inc
dec
add
in
pop
jp
xchg
push
incb
xchg
in
iret
push
push
cmpsl
in
iret
test
repnz
cmc
add
ret
or
arpl
and
neg
or
jmp
mov
inc
neg
shr
rclb
and
mov
mov
push
and
sub
adc
orl
outsb
mov
das
add
cmp
lods
and
or
push
pop
add
sub
dec
es
or
pop
movsb
rolb
dec
jo
ja
inc
dec
aam
scas
sbb
dec
mov
cmp
adc
test
xor
les
lret
sub
rep
xlat
pusha
xor
pop
push
cmp
fldcw
rorb
js
jnp
mov
sbb
jmp
popa
adc
imul
and
rcr
in
xor
fs
mov
test
xchg
pop
pop
inc
adc
and
clc
in
mov
outsb
idivb
daa
push
jg
push
mov
mov
jb
and
pop
xchg
pop
mov
pop
push
out
add
mov
or
stc
stc
lret
sbbl
inc
push
popa
inc
push
repz
lock
inc
clc
das
test
cli
int3
mov
inc
and
loopne
pop
gs
shlb
add
jb
fwait
adc
testb
rclb
jl
or
jmp
pop
cli
dec
loope
or
es
jmp
gs
insb
sti
bound
mov
cmpsl
fcmove
test
adc
xchg
adc
mov
adc
add
jg
or
jge
or
enter
cmp
cltd
cwtl
fcmovb
js
lea
jle
in
xchg
stc
xor
xchg
and
out
mov
push
xorl
add
mov
xor
jo
loop
es
inc
ret
out
mov
pop
push
iret
roll
sti
imul
js
mov
or
cmp
pop
sahf
sbb
popa
mov
adc
push
sub
and
ja
mov
sub
dec
xchg
or
cmp
mov
nop
lods
or
inc
cmp
jo
mov
std
mov
mov
or
cmp
mov
inc
push
pop
push
ret
dec
jle
jecxz
ret
decb
stos
scas
shrb
adc
adc
inc
js
popa
add
sub
imul
pop
push
adc
or
jo
xor
adc
add
adc
int
jp
dec
je
add
push
cmp
add
sbb
or
or
inc
or
add
lods
or
inc
jbe
in
push
data16
pop
outsl
out
mov
push
sahf
sbb
pop
data16
dec
mov
adc
leave
sbb
pop
cmp
clc
sbb
add
pop
scas
into
jbe
dec
test
negl
sub
es
cmc
std
jo
cltd
sub
push
jmp
pop
mov
cmp
sbb
xor
adc
sbb
sub
sarb
push
orb
pop
shrb
adc
repnz
pop
fists
mov
fisubs
out
repnz
add
mov
cld
mov
ret
and
dec
adc
xor
cmc
jns
mov
lds
inc
or
sbb
fbld
jb
jmp
dec
sbbb
inc
or
rorb
push
xor
imul
push
jbe
fildl
mov
push
sbb
shl
sub
inc
js
addb
stos
arpl
in
lea
or
mov
jne
or
mov
in
and
pop
fnstcw
mov
push
repz
adc
add
cs
add
add
test
imul
punpckhwd
dec
pop
xlat
bound
out
cmpsl
sarb
xor
and
mov
mov
mov
jne
shll
add
push
or
jg
xchg
xchg
std
add
movsb
push
mov
jge
adc
jb
sbb
das
jne
cwtl
sub
push
adc
call
shrl
shll
outsl
lahf
jecxz
test
push
repnz
jnp
and
or
push
pop
decb
pop
pop
shr
adc
push
enter
roll
push
inc
xor
sub
cli
push
push
sbb
add
addl
sbb
jo
pop
fld
sub
int3
imul
scas
sahf
jae
mov
test
aam
fnsave
dec
mov
popf
or
and
pop
dec
inc
jl
cmc
stos
int
sub
and
push
ficoms
jnp
sub
cld
pop
mov
fs
mov
stos
dec
lret
mov
lcall
je
mov
roll
or
cmpsb
js
dec
clc
in
loopne
add
cmp
ret
add
adc
aad
dec
mov
inc
test
cli
sbb
push
dec
shrd
dec
add
mov
popa
outsl
mov
out
fnsave
cli
adc
fimull
sti
push
pop
push
sub
loop
add
xor
push
push
and
ss
mov
fmulp
pusha
into
imul
insb
push
inc
mov
or
hlt
bound
cmc
jns
sarl
cld
xor
int3
jo
pushf
or
xchg
ret
push
pop
dec
xor
mov
test
and
fstpt
insl
inc
cltd
sub
les
shrl
add
mov
lods
daa
jp
pop
dec
aad
cmc
mov
jno
scas
push
ret
add
sub
push
or
ss
and
fimuls
out
adc
ja
sbb
push
push
nop
ret
ljmp
sbbb
or
fs
pop
test
test
sub
mov
pop
daa
mov
data16
loopne
je
xchg
mov
push
pop
pop
jmp
aas
mov
fidivl
mov
addb
ret
imul
fisttpl
xor
es
and
mov
and
adc
cmp
rol
inc
repnz
mov
dec
inc
mov
cmc
or
add
mov
push
out
ja
or
movsb
cli
pop
mov
mov
inc
push
push
cmpl
sub
andb
adc
ds
out
pop
in
jno
nop
and
ds
gs
add
xor
cmp
outsl
dec
sti
pusha
jne
dec
dec
and
or
orl
and
sahf
out
pop
and
add
in
or
or
dec
das
mov
xchg
mov
scas
mov
sbb
lock
push
out
inc
pushl
or
sub
incl
out
sbb
stos
fdivrp
pop
lret
push
lock
xchg
pop
and
xchg
lock
pop
push
out
cmp
ja
sbb
imul
inc
pop
mov
sbb
jne
lds
adc
cmc
pop
shl
jnp
mov
shrl
js
leave
sub
pop
and
cs
push
push
or
push
add
add
repz
adc
outsb
or
push
mov
mov
mov
mov
daa
jmp
inc
pop
sbb
xchg
inc
xor
and
sub
and
ret
cmp
push
mov
pop
ret
jmp
cmp
icebp
test
mov
std
cld
paddsw
stos
jmp
xlat
mov
pop
popa
imul
mov
insb
or
dec
push
pop
repnz
add
std
jb
xor
or
jo
dec
in
fcoms
sub
lret
in
das
pop
pop
add
shll
push
jmp
data16
jge
add
add
jmp
fldl
adcl
mov
bound
shlb
jnp
shlb
mov
nop
mov
inc
add
sub
or
cmp
je
mov
push
push
push
and
mov
scas
adc
xchg
sti
jmp
je
imul
inc
xchg
push
lock
dec
jo
out
mov
lods
stos
sub
ljmp
fsubrl
das
iret
and
push
das
push
lcall
sar
cmp
enter
sub
push
pop
xchg
rclb
fisttpll
in
int
adcb
in
mov
sub
or
test
loope
lcall
pusha
mov
sub
lock
movsb
das
adc
sub
sub
jmp
adc
sub
scas
int
es
and
out
lret
dec
sbb
sub
mov
fs
add
xor
inc
sub
dec
pop
mov
mov
fists
cmp
adc
mov
inc
lcall
pop
fdivrs
push
sub
or
jmp
add
push
divb
in
in
jg
fdivrl
nop
sub
les
xor
daa
mov
movsb
into
daa
mov
push
pop
jmp
fwait
jnp
pop
sbb
andb
xchg
test
adcb
mov
sarb
enter
addr16
iret
inc
inc
and
int
adc
jno
adc
repz
fildll
lret
inc
add
cmp
add
nop
adc
outsl
push
xor
or
mov
pop
fistpll
mov
sbb
xor
pmaxsw
jmp
jecxz
shrl
hlt
sub
push
add
cmpsl
out
out
dec
das
notb
pop
pop
repz
add
cltd
jnp
or
lods
push
jmp
sub
notl
pop
fmuls
xchg
mov
sbb
mov
shrb
dec
data16
mov
or
clc
push
in
leave
cmp
into
ds
pop
mov
nop
pop
inc
inc
xchg
dec
mov
test
incb
dec
xor
aaa
and
outsb
add
icebp
lea
add
jo
popf
hlt
lds
out
jecxz
adc
sti
mov
adc
jbe
subl
insb
repz
push
or
add
lods
pop
xor
cmpsl
mov
incb
repz
test
es
sub
dec
and
pop
xchg
imull
or
xor
jb
aam
xor
sub
push
outsb
mov
and
test
testb
pop
jmp
xlat
mov
bnd
test
or
stos
xor
push
push
jnp
mov
push
int
ret
mov
pop
fisubrl
stos
and
mov
xor
pushf
or
pop
sub
in
outsl
dec
add
shl
fsubp
sub
mov
push
stos
mov
pop
add
dec
imul
pop
ja
popa
ret
movsb
cmpsl
xor
mov
add
or
add
adc
pop
xor
pusha
dec
mov
lock
mov
das
xor
fldenv
mov
jo
gs
sub
inc
and
sbb
mov
cwtl
lahf
adc
and
adc
jp
jae
cs
inc
inc
scas
mov
dec
out
hlt
sbb
lock
daa
dec
in
jl
imull
inc
or
pop
bound
mov
test
cmc
adc
stos
pop
imul
jo
rcrl
or
add
call
xor
dec
shl
xchg
push
dec
mov
dec
fdiv
cmpsl
bound
inc
not
inc
pop
test
pop
and
gs
adcb
cltd
inc
add
dec
push
and
rorb
cmc
das
inc
lret
push
jne
mov
cmp
test
or
mov
mov
not
or
iret
jmp
mov
icebp
mov
jbe
cmp
aaa
add
loopne
into
push
lds
lcall
pop
ficoml
movsl
fs
jp
mov
add
mov
les
adc
xor
pop
fstl
sbb
stos
loop
int
rolb
adc
pop
jnp
movsb
ja
adc
cmp
shl
dec
mov
roll
hlt
lds
addr16
sub
shr
icebp
inc
movsl
adc
popf
push
cmp
mov
je
outsb
pop
in
mov
lds
lds
repz
mov
cli
shll
popf
cmc
jb
xor
lods
roll
aam
ljmp
push
jno
and
fs
sub
loopne
cs
sub
mov
rcrb
mov
lret
add
sub
adc
lret
shlb
subb
pusha
jle
ret
sub
ror
daa
fildll
inc
push
jge
lret
fistpl
clc
xchg
je
pop
and
mov
popa
dec
xor
inc
xor
int3
pop
adc
bound
push
push
hlt
add
mov
or
js
inc
jbe
jne
cmpsb
fidivrs
push
jo
jmp
out
ficoml
clc
push
loope
jno
cmp
cwtl
out
adc
daa
pop
jecxz
aad
dec
ret
lret
add
xchg
and
pop
jmp
ficomps
mov
jmp
jge
inc
sbb
add
out
cmp
test
or
fisubl
push
ret
dec
sbb
xor
int3
mov
sbb
pop
fmul
dec
shrb
push
sbb
and
repnz
loope
and
pop
or
lods
andb
outsl
sub
inc
or
and
sub
lock
add
movsb
push
mov
jmp
mov
rcrl
push
dec
xchg
addl
push
out
jge
or
push
sub
and
cmp
repnz
pop
xchg
repz
mov
and
lods
xchg
jbe
das
je
cmpsl
jl
pop
movsl
pop
cmpl
xor
push
mov
pop
std
sub
idivb
sub
addr16
jp
and
aad
inc
mov
pop
adc
xchg
mov
and
fstl
mov
push
push
aas
pop
shl
dec
jns
sub
test
xlat
daa
testl
shr
jmp
and
cwtl
repnz
les
repz
mov
pop
loope
add
pusha
ljmp
lds
or
dec
sub
or
movsw
xlat
imul
push
pop
into
sbb
sahf
pop
jns
sbbb
sub
mov
jge
hlt
pop
lcall
pop
or
dec
xor
rcrb
scas
xchg
and
sbb
test
mov
imul
clc
es
icebp
adc
or
pop
and
dec
bound
dec
js
push
push
cmp
xchg
push
mov
pop
clc
xchg
sub
clc
pop
stc
pop
je
jns
fsubl
movsl
ret
xor
push
insl
jno
ud1
and
je
push
and
test
adc
push
add
and
inc
jmp
add
push
test
bound
push
les
jg
sbb
inc
movsb
pop
jo
dec
and
mov
sub
lock
jns
or
adc
push
mov
xchg
lea
icebp
loope
addr16
les
mov
and
cmp
rcl
or
mov
lret
pop
or
mov
cmp
adc
sub
pop
xor
add
dec
xor
int3
out
pusha
loopne
lock
ljmp
push
shlb
daa
jmp
movsb
jl,pt
sub
cmp
das
sub
fisubrs
pop
lret
gs
shlb
adc
mov
cmp
xor
popa
and
int3
rol
sub
pop
mov
shrb
dec
pop
pop
mov
clc
pop
data16
dec
je
lahf
int3
fcompl
jmp
cs
adc
jge
mov
shlb
pop
out
and
or
cmp
inc
je
and
sbb
mov
pushf
in
cmpb
cmp
dec
sbb
add
and
rcrb
mov
pop
jecxz
pop
mov
sub
and
hlt
mov
jp
test
pop
and
cmp
mov
mov
inc
outsl
inc
inc
add
mov
test
test
aad
insl
jle
in
dec
jb
pop
adc
add
fcoms
sub
stos
cli
enter
add
lds
ja
cmp
out
es
cmp
add
ror
jp
cmpsb
mov
mov
fisubrs
sbb
and
je
test
imul
cmpl
das
sbb
lock
repnz
es
push
xchg
xchg
aaa
add
push
or
add
adc
shr
divb
dec
pop
cli
lods
lret
ret
and
add
push
js
insl
hlt
and
aaa
jnp
xchg
jmp
stc
xor
loop
xlat
mov
daa
jnp
pop
sub
dec
sub
sub
fstpl
mov
out
hlt
cmp
dec
sbb
and
lds
repnz
cwtl
cmp
ficoms
pop
daa
ja
ja
dec
pop
outsb
cltd
adc
mov
in
loope
mov
fcomip
jb
sub
stos
sub
cmpsl
rcr
movsb
dec
dec
adc
ja
cwtl
inc
outsl
mov
adc
sub
mov
out
jb
pop
push
push
mov
push
jmp
mov
pop
mov
mov
cmpsb
push
xchg
outsl
or
dec
popf
xchg
mov
dec
dec
inc
push
or
jmp
dec
nop
or
pop
xor
push
daa
int3
ja
out
test
pop
inc
negl
mov
jmp
popf
push
mov
push
lea
outsl
inc
sbb
or
push
or
cmp
cli
jecxz
fdivp
push
std
inc
mov
mov
inc
pop
mov
pop
jmp
dec
mov
jo
test
mov
and
out
add
push
fs
or
and
int
mov
push
sub
jo
addb
push
push
lods
lret
or
cmp
pop
xor
das
clc
movsb
rorl
scas
xchg
sbb
mov
stc
bound
mov
dec
ret
inc
testb
jno
orb
sub
add
sbb
aas
mov
adc
test
sti
test
sub
pusha
push
adc
or
iret
loop
jp
mov
mov
push
jle
mov
mov
pushf
shl
out
push
or
pusha
pop
pop
push
mov
lock
das
xchg
xor
insb
rolb
inc
add
jo
cli
mov
xor
sub
mov
sar
fcomps
sbb
flds
dec
adc
xor
cmp
sbb
push
pop
cli
sti
push
push
or
jg
daa
xor
mov
push
jle
fldenv
cmpsl
call
adc
dec
inc
pop
mov
loop
negl
sbb
push
cld
sub
loopne
ret
pusha
add
pop
mov
sub
ja,pn
add
add
push
mov
and
push
mov
push
mov
roll
addr16
sub
das
jo
jae
rcrb
hlt
adc
lahf
rcrb
pop
mov
call
decb
add
inc
add
in
add
push
push
scas
push
cmp
jno
mov
xchg
ljmp
jno
xchg
vpaddw
and
test
fcom
es
stos
movb
jmp
push
in
or
loope
or
adc
pusha
icebp
cmpsb
call
subl
cwtl
leave
inc
inc
push
sarb
orl
leave
fnstenv
je
pop
insb
movsl
sub
jg
push
pop
jbe
popf
sarb
pop
lods
sbb
push
sbbb
pop
dec
lock
mov
push
sbb
cmp
mov
fsubrl
push
mov
lods
adc
jno
pop
adc
popa
jns
jns
jmp
addb
bound
xlat
nop
mov
mov
jp
xchg
mov
pop
push
loop
push
enter
pop
pop
stos
imul
lea
iret
dec
xor
and
test
daa
andl
out
add
sbb
push
dec
xchg
imul
jecxz
pop
mov
inc
loope
xor
clc
lds
sub
push
icebp
fsubs
notb
scas
repz
xchg
out
or
movsl
lock
mov
bound
fstl
add
fcoms
jmp
dec
mov
out
xchg
fs
lahf
lret
loope
shrl
push
lret
and
xchg
add
dec
pop
jmp
sub
mov
adcl
mov
mov
add
dec
or
lock
mov
rcrb
pop
xchg
std
cmp
hlt
mov
jmp
push
push
mov
test
scas
les
dec
push
popf
push
ficompl
aad
adc
call
sub
mov
add
in
in
out
push
push
neg
xchg
ds
lods
mov
or
in
test
jmp
adc
inc
in
cld
xchg
out
mov
dec
lcall
mov
ficoml
push
push
mov
sub
lret
push
mov
sub
das
out
sub
xchg
test
xchg
inc
pop
movsb
loop
jbe
push
ja
mov
xor
pusha
xchg
in
or
mov
adc
pop
popa
dec
push
or
mov
lds
out
push
andb
jge
jb
add
orl
aad
sub
or
sbb
pop
scas
sub
stc
mov
addb
or
mov
hlt
xchg
adc
jmp
sahf
push
dec
jg
imul
inc
and
mov
adc
xlat
std
or
cmp
pop
fldenv
dec
ja
lret
arpl
mov
lds
pop
lret
jb
out
aam
outsl
sub
leave
aas
inc
xor
push
popf
push
push
add
fists
stc
push
inc
pop
push
ret
sbb
test
test
ret
in
test
mov
rorb
movsl
jmp
push
outsb
jecxz
ret
sbb
push
dec
and
pop
pop
shl
pop
and
mov
mulb
mov
or
pop
cld
jo
jmp
pop
jecxz
repnz
xor
popa
add
cs
and
les
cmpl
data16
or
adc
xchg
pop
lcall
cltd
sub
stos
pop
add
daa
jg
mov
add
mov
hlt
xor
ret
push
pop
pop
dec
xchg
insb
dec
sbb
pop
aam
adc
pop
push
sti
jl
jmp
push
adc
inc
add
inc
xchg
clc
pop
mov
rolb
shrl
sbb
aas
inc
jmp
test
pop
out
and
int3
xor
shlb
inc
xchg
adcl
adc
int
fisttpl
cmp
mov
pusha
pop
iret
adc
cmp
pop
jecxz
out
jno
mov
add
jmp
ss
inc
jb
std
mov
pop
pop
sub
bound
add
inc
or
jecxz
shlb
xor
test
pop
xlat
lret
testb
jb
cmc
gs
push
pop
cmp
push
and
daa
cmp
aam
lock
or
daa
ja
add
stc
mov
sarb
jne
sbb
push
daa
jmp
inc
xor
es
subb
add
xor
mov
jbe
adc
pop
xchg
xchg
out
jmp
cmpsl
dec
dec
stos
sbb
insl
jae
lret
sub
int3
rcrl
sub
enter
and
jae
add
cld
xor
subl
and
cld
es
movsl
or
les
dec
int
test
xchg
orps
pop
mov
mov
pop
test
dec
scas
sub
add
js
inc
add
and
adc
or
aas
push
pop
pushf
xchg
pop
mov
or
push
push
push
and
xchg
jnp
shl
sub
jp
cmp
cmp
xor
lcall
push
popa
cmp
or
sub
fwait
lret
pop
fisttpl
push
pop
push
dec
adc
cwtl
push
pop
jecxz
out
add
cmp
sbb
sub
sbb
push
pop
enter
mov
xchg
add
jl
sub
ljmp
fwait
nop
out
push
add
mov
sub
cli
inc
add
mov
mov
jbe
push
mov
orl
enter
pop
and
not
jmp
xchg
shl
pusha
cltd
arpl
add
sbb
aad
ljmp
stc
notb
pushf
jnp
jg
testl
cmp
push
dec
mov
ja
lea
push
mov
push
or
pop
inc
and
push
adc
int
or
mov
nop
xlat
sbb
xchg
sub
adc
jecxz
mov
pop
cmc
stos
mov
inc
pop
mov
lret
mov
mov
bound
dec
jbe,pn
pxor
ret
leave
add
dec
aam
and
leave
sub
jp
popf
pop
mov
dec
je
mov
mov
push
xchg
mov
sub
push
xchg
pusha
pop
jmp
outsl
cmp
jmp
push
or
scas
pop
sti
insl
pop
das
repz
lock
popf
pop
or
ljmp
in
mov
int
fldt
adc
xchg
dec
movl
nop
or
mov
sub
rorl
mov
jge
lahf
test
jmp
mov
shl
xchg
cwtl
sbb
in
test
fists
add
cmc
aas
arpl
mov
ljmp
adc
xchg
cmpb
fimuls
clc
and
pop
dec
repz
adc
sbb
out
les
inc
mov
dec
arpl
test
fdivr
out
lods
sti
xor
adc
clc
js
sbbl
jb
in
mov
inc
test
bound
ret
pop
xor
fldcw
jo
xor
ror
loopne
out
add
stos
je
jmp
mov
dec
sub
add
stos
sub
push
dec
mov
pop
loopne
dec
shrl
in
mov
adc
sub
mov
push
dec
push
addb
pusha
cmpsb
fwait
subl
cmc
popf
push
or
icebp
stos
xlat
mov
or
sbb
clc
pop
mov
frstor
pop
arpl
aas
mov
pop
jmp
lret
or
add
mov
in
mov
and
pop
loope
bound
clc
int3
es
dec
cmpb
xchg
xor
add
sub
jmp
fists
aad
dec
les
lea
cmp
xchg
cltd
adc
jne
mov
arpl
loope
adc
jns
add
inc
jmp
das
push
xlat
xchg
call
sarb
jne
and
add
add
pop
inc
imul
std
mov
mov
add
daa
xorl
xor
loop
jle
ljmp
or
inc
gs
data16
test
add
jmp
sahf
movsl
jge
mov
nop
rorl
sbb
mov
sub
push
cmp
fstpl
add
push
inc
mov
ret
lret
push
pop
adc
push
push
add
xor
pop
sti
cmpsb
pop
stc
or
inc
adc
fwait
nop
lret
cli
and
cmpsl
jl
into
cmp
fistps
out
pusha
add
inc
push
push
push
pusha
dec
divb
fildl
xor
jmp
loopne
pop
jmp
in
mov
and
sbbb
sub
or
mov
and
rorl
mov
mov
cld
pop
sbb
pop
jge
jno
ret
or
xor
lds
or
pop
xor
and
and
flds
mov
pusha
stos
cwtl
push
jbe
jecxz
daa
jmp
pop
jmp
push
test
or
loope
mov
xor
in
jecxz
pop
pusha
rcr
jmp
pop
sub
push
lret
push
dec
mov
dec
pop
mov
pop
xor
fiaddl
or
cmp
and
xor
cmp
ret
fildl
dec
pop
in
loopne
xor
jnp
in
sbb
push
aas
fmul
movsl
ja
mov
fildll
sub
test
lods
negl
jmp
adc
mov
push
push
lcall
dec
push
dec
repz
arpl
aad
sbb
fiaddl
hlt
fs
js
orb
push
or
add
scas
adc
push
cmp
mov
adc
and
add
dec
push
cs
xor
mov
cmp
test
and
or
gs
push
ret
nop
aad
pop
rcrl
push
cmc
sub
and
fwait
ror
mov
push
jns,pt
cs
rclb
ret
pushf
test
jmp
loop
xor
push
push
fxch
leave
xlat
mov
cs
int
in
cmc
push
cli
scas
popl
jmp
add
daa
movb
repnz
stc
and
fistpll
sbb
push
push
mov
xchg
mov
cwtl
xchg
aas
cld
pop
push
mov
jmp
sub
push
mov
pop
xor
or
test
call
loope
lahf
push
insl
xchg
fdivr
push
ss
mov
test
and
inc
jns
mov
jns
mov
cmc
and
and
fisttps
jno
or
ret
push
xor
lahf
dec
aas
std
sti
push
adc
mov
in
outsb
daa
mov
jle
in
mov
pop
jg
xchg
in
dec
sub
test
int
inc
or
pop
je
fsubr
aas
sahf
push
sub
jmp
loope
sub
push
imul
insl
xchg
int3
cld
push
and
imul
dec
adc
mov
sti
cwtl
add
dec
aam
ja
add
jmp
gs
inc
mov
inc
cs
cli
in
mov
jle
arpl
hlt
les
fidivl
cmp
cli
dec
mov
mov
imul
push
push
adcb
and
add
negl
pushf
cli
popa
push
jmp
dec
mov
shlb
stc
jne
adc
jmp
fcmovbe
mov
push
cli
nop
cli
mov
or
pop
ret
mov
jmp
lock
dec
sti
lret
or
loope
les
fs
movsb
es
cmp
jae
arpl
icebp
orb
push
push
test
outsl
mov
sbb
jb
xchg
or
inc
sbb
mov
lcall
stc
fld
dec
jp
lcall
inc
sub
nop
adc
lret
pop
dec
in
ljmp
xor
pop
xchg
js
jmp
je
icebp
push
lods
or
out
sbb
cmp
loopne
jb
andb
call
pop
ret
sti
mov
cmc
xchg
clc
test
dec
lea
jne
sbb
test
mov
loope
add
mov
dec
repz
jo
mov
cltd
cmc
sub
or
jne
dec
daa
jne
sub
lods
jo
aas
add
cmpb
add
mov
into
lcall
iret
cmp
call
cmp
repz
push
push
inc
sbb
adc
adc
scas
sub
ret
pop
push
pop
jmp
sub
stos
or
or
out
inc
dec
adc
pop
pop
inc
stos
mov
pop
push
leave
add
add
push
shll
outsb
cmpsb
addb
in
cli
pop
jbe
and
sbb
inc
or
add
jae
push
and
or
movsl
sbb
inc
add
jecxz
and
jns
adc
jae
insb
xchg
fwait
jno
pop
stc
stos
adc
dec
mov
cmp
bound
adc
sarl
inc
and
jne
out
sub
push
sarl
mov
cmp
push
pop
sub
in
dec
add
or
sub
fisubl
lret
xlat
inc
jmp
dec
arpl
adc
sub
lods
or
and
xchg
inc
jl
push
push
xchg
lcall
and
scas
lret
mov
dec
xchg
add
pusha
ja
repnz
inc
pop
mov
dec
out
sub
fadds
inc
adc
fadds
fmull
cmp
sub
clc
repz
jg
jg
jae
stos
sbb
test
mov
mov
mov
push
shr
or
push
scas
xchg
or
rolb
mov
and
jp
or
icebp
push
mov
mov
incl
xchg
test
repz
xor
incl
int3
mov
xor
mov
das
or
mov
xchg
les
or
repz
outsb
nop
mov
inc
dec
cmp
or
repnz
and
pop
inc
rorb
mov
push
les
and
xor
push
add
ja
push
pop
pop
out
cmpsl
loop
jmp
sti
push
jl
push
scas
into
mov
daa
and
push
mov
sarl
push
jae
jp
das
ljmp
jae
dec
in
jp
ds
inc
sbb
divl
call
cmp
push
pop
and
xor
divl
and
into
cwtl
ficoml
sub
mov
inc
outsb
pop
inc
pop
test
jmp
lret
cmp
jg
mov
push
jmp
jl
push
adc
sbb
decb
loope
add
rorb
scas
jp
jnp
cld
loopne
jmp
mov
nop
imul
fdivs
lea
hlt
push
ret
pop
xor
sub
mov
inc
cmp
mov
xchg
or
lods
dec
sub
pop
fdivr
iret
shl
rcll
push
lcall
jns
imul
testl
add
testb
inc
dec
or
xor
xor
or
arpl
out
xchg
mov
push
push
pop
out
xlat
xchg
pop
daa
add
cmc
adc
jmp
btc
inc
mov
cmpsb
or
jne
stos
addr16
or
mov
movsb
or
inc
shrb
mov
sub
je
xlat
popf
add
pop
shr
lock
jl
dec
subl
jnp,pn
and
test
mov
jo
mov
cmp
andb
push
pop
sti
xor
out
add
lret
sub
jno
or
ja
jmp
pop
subb
jle,pt
and
cld
ds
adc
xor
add
fs
and
cmp
adc
sub
leave
in
div
add
or
nop
movsl
pop
or
cmpsl
in
lods
push
das
push
pop
sbb
xchg
ja
add
fcmovnb
jg
pusha
xor
and
lcall
or
ret
shlb
and
das
mov
lds
in
jle
iret
dec
in
loopne
push
cmp
and
sub
xchg
dec
dec
rcrl
jmp
fidivs
mov
movsb
je
outsl
mov
jae
add
lret
xor
ret
cmpl
jo
fs
jg
lods
sarl
inc
lods
or
jge
dec
lcall
add
inc
xchg
cld
sub
add
pop
dec
mov
out
leave
fwait
pusha
push
cmpsb
adc
mov
out
push
arpl
add
mov
jnp
push
or
not
pop
adc
insl
int3
repz
pop
hlt
sbb
clc
and
pop
popa
fwait
xchg
sub
sub
dec
and
inc
mov
mov
sub
mov
mov
aam
negb
movsb
pop
add
dec
dec
mov
xchg
push
out
repnz
inc
lcall
and
outsb
insl
dec
add
insl
call
jp
ror
pop
and
jmp
popa
pop
mov
add
mov
in
dec
add
jbe
out
adc
rclb
push
inc
icebp
mov
cmp
mov
sbb
packssdw
mov
cmc
xchg
xorl
mov
arpl
lods
adc
pop
neg
lret
ss
sub
sub
lret
adc
shr
test
fstpl
cwtl
inc
or
push
sbb
sub
adc
mov
jmp
in
adc
in
addl
ss
add
sub
mov
sti
es
add
pop
loope
out
pusha
pop
xchg
jmp
pop
xor
xor
nop
iret
add
popa
cmp
int
mov
ds
or
fnsave
inc
push
mov
push
sub
shl
mov
cltd
pop
sub
xor
cwtl
fimuls
adcl
mov
decl
lods
sub
mov
mov
imul
mov
push
and
fldt
in
shr
xlat
dec
jmp
mov
sahf
cmp
loopne
pop
mov
or
sub
jp
stc
push
pop
jmp
sub
pop
in
mov
loopne
sti
cmp
push
movsb
std
movsl
push
sub
cmpl
imul
std
adc
pop
pop
jmp
insb
repnz
mov
cmpsb
mov
add
in
orb
mov
xchg
mov
test
or
shll
cld
add
and
push
out
pop
jecxz
fimull
push
cmp
jmp
mov
or
pop
mov
adc
sbb
cmp
sub
jmp
fldl
stos
std
fnstcw
ljmp
jno
add
push
sbb
cli
fcom
or
in
aad
fcmovu
icebp
add
mov
jne
xchg
pop
daa
jmp
enter
cld
sub
push
ret
push
jmp
and
jle
adc
pop
dec
movsl
sbb
jle
add
notb
lea
add
jno
adc
cmp
imul
or
lods
dec
hlt
call
dec
and
jmp
inc
jl
fistps
in
sahf
out
leave
pop
mov
add
ficoml
add
pop
stos
push
inc
orb
jne
mov
int
test
popf
insb
mov
add
inc
jmp
cmp
mov
test
hlt
inc
sub
jae
push
jmp
lods
cmpsl
pushw
aad
scas
lahf
cmp
jne
and
sub
xor
or
mov
ss
inc
pop
pop
jg
gs
ds
movsl
jo
sub
rorb
pushf
je
jo
lahf
incb
pusha
sub
and
jmp
inc
in
and
aad
and
or
int
cmp
or
scas
outsl
add
pop
or
add
dec
xorb
add
and
test
or
ja
in
inc
add
adc
push
jp
imul
lods
xor
out
popf
fcoms
lock
dec
and
mov
jae
adcl
rorb
call
pop
imul
inc
add
and
mov
in
mov
xchg
filds
cltd
sbb
jb
pop
xor
pop
cmpb
cli
mov
sahf
dec
sbbl
fnstsw
leave
sub
inc
add
shll
les
and
add
sbb
mov
cwtl
in
fists
wbinvd
fmul
cld
clc
jge
movzbw
pop
jle
inc
pop
mov
lds
pop
xchg
mov
rclb
ss
mov
cwtl
push
movsb
jl
test
add
sub
mov
jp
fisttpl
cmp
xchg
stos
test
pop
lret
shlb
push
mov
push
lock
in
pop
inc
or
imul
gs
mov
dec
mov
dec
or
movsb
shll
lock
push
xor
movb
mov
neg
and
mov
imul
cmp
ds
lds
mov
jmp
in
pop
lahf
movsl
push
aam
out
mov
addl
test
in
outsb
fincstp
jp
cmc
push
jns
mov
add
or
push
outsb
push
sbb
insb
push
pop
pop
xchg
cli
js
xor
jmp
inc
pushf
popa
push
sub
add
inc
repnz
or
inc
add
xor
pop
sub
add
ret
pop
push
mov
pop
stc
or
push
insb
add
dec
sub
pop
add
pop
adcb
jo
dec
or
cs
push
shlb
push
jae
mull
jmp
sub
lret
int3
xorb
mov
xor
mov
push
xor
add
or
jmp
test
addb
mov
loopne
out
or
test
or
jmp
popf
scas
loope
add
push
push
into
sti
ror
lret
add
inc
lcall
sub
sbb
notl
xor
les
adc
fiaddl
pusha
in
mov
xor
pop
and
mov
xor
lret
movsb
push
and
add
call
nop
cmc
int3
dec
and
addl
pop
add
imul
cwtl
pop
jmp
mov
lds
jno
nop
addr16
decl
xor
outsl
and
call
cmp
xchg
mov
aad
and
jge
or
stc
pop
cltd
out
inc
push
outsb
inc
jge
pop
add
xor
lret
pop
jle
sub
or
mov
mov
pop
pop
adc
sbb
add
cmp
jne
push
xor
int3
xchg
adc
fistl
shr
test
data16
imul
cmp
jo
jg
dec
pop
mov
push
inc
icebp
pop
mov
lods
mov
jp
int
mov
test
mov
mov
les
push
dec
add
adc
lods
dec
adc
dec
mov
sti
decb
add
stos
and
int3
repz
push
sub
fwait
sbb
mov
inc
les
push
out
repz
daa
inc
jo
repnz
xor
in
inc
mov
test
jmp
test
iret
fs
sub
mov
pop
dec
mov
fists
mov
ds
push
pop
pop
not
push
mov
aaa
mov
imul
push
adc
sub
push
push
cli
testb
insb
fucomip
std
lcall
sub
push
mov
inc
dec
fstps
xchg
or
ja
mov
or
add
xor
and
test
into
mov
mov
add
inc
mov
stos
fwait
rorl
vpsllq
ja
popl
mov
pop
pop
pop
adc
stos
inc
mov
movsl
adc
das
sarb
push
mov
adc
and
xor
lods
add
mov
call
mov
adc
cmpl
in
out
xor
das
cld
xlat
nop
icebp
cmp
test
lret
hlt
movsl
jmp
pop
mov
mov
ss
push
movsl
push
sub
adc
sbb
pop
ret
sbb
add
sub
enter
lea
mov
push
cmp
fs
stos
pop
loopne
inc
inc
add
lahf
push
roll
mov
hlt
mov
test
aam
test
push
push
ja
outsl
lock
sbb
push
test
int
shll
adc
divl
mov
xor
inc
movsb
adc
out
or
xchg
ja
shlb
add
inc
mov
xchg
xlat
sub
fldl
xor
add
add
shl
dec
cmp
dec
aad
je
push
sbb
add
mov
sti
inc
pop
rclb
push
or
cmpsb
cmpsl
fadd
pusha
lret
and
xchg
jbe
movsb
shll
xor
push
test
push
push
call
in
rolb
fldl
jge
fsubs
mov
es
out
mov
pop
xor
fsubrl
sbb
in
loop
sbb
adc
divb
mov
and
cmc
pop
cmpsb
push
xchg
scas
add
and
xchg
inc
inc
jp
xchg
not
push
dec
shlb
dec
adc
adc
adc
sub
loope
cld
icebp
mov
push
and
or
outsb
mov
cmp
lods
push
test
sbbb
jb
push
into
inc
adc
into
sub
out
test
clc
pop
dec
mov
xor
into
movsl
jmp
shr
mov
mov
jp
int3
push
mov
adc
ja
inc
inc
push
jmp
loopne
push
jbe
sbb
push
jns
pop
pop
testb
xchg
out
into
jns
push
push
mov
mov
add
lods
inc
jo
mov
and
and
or
sbb
mov
mov
xor
roll
and
ss
ljmp
sub
jl
push
mov
pusha
or
nop
rorl
add
bound
icebp
into
pop
loopne
jle
adc
in
stos
sarl
pop
iret
jle
insb
cmp
cmovle
dec
mov
stc
dec
ret
les
arpl
mov
mov
aas
push
push
pop
lock
mov
xor
test
dec
pop
mov
xor
mov
jmp
mov
pop
jbe
loope
jmp
movsb
cltd
sub
jns
mov
and
inc
mov
mov
stc
or
mov
rol
gs
aaa
adc
push
add
sub
pop
jmp
xchg
pop
xchg
inc
and
push
and
jbe
loop
or
adcb
call
add
xorb
push
das
lods
jb
mov
shr
subb
pop
jne
or
bound
test
scas
adc
test
add
add
fldl
jle
outsl
pop
in
cmp
sbb
adc
lods
pop
adc
push
mov
test
mov
dec
rcll
pop
jb
mov
out
ss
push
pusha
sbb
xchg
jb
cwtl
pushf
dec
mov
inc
dec
push
adc
pop
outsl
enter
test
jmp
or
data16
push
jae
adc
les
loopne
insb
mov
and
push
xlat
movsb
aam
mov
ret
fst
xor
aas
inc
movsl
in
or
and
add
nop
orb
jmp
imul
jmp
cmp
push
fcmovbe
std
mov
std
cwtl
push
sbb
xchg
xchg
pop
inc
inc
gs
das
cmc
push
pusha
imul
lahf
pusha
cmp
jl
sbb
push
add
popa
fbld
jmp
sbb
popa
insl
adc
jae
inc
sub
test
jnp
pop
sub
cli
sbb
xchg
add
loope
mov
mov
pop
out
cmpsb
stc
xchg
push
add
xlat
and
cmpl
nop
cmp
int3
or
std
mov
scas
loopne
jne
bound
fidivs
scas
cwtl
add
inc
jns
mov
loop
sub
sbb
push
insb
fmull
add
ror
subb
repz
xchg
cmpsb
or
mov
jmp
add
add
cwtl
icebp
mov
fisubl
push
push
mov
cmp
popa
add
iretw
xor
pop
dec
clc
leave
and
nop
pop
fbld
das
push
dec
add
dec
scas
mov
and
cmp
xor
mov
sbb
movsl
push
sarl
or
test
push
rcr
sbb
cmp
cmp
adc
mov
jmp
mov
fucompp
pop
enter
mov
mov
cmp
pop
cmc
cmp
aam
pushf
and
loop
mov
add
pop
dec
mov
add
push
mov
clc
dec
jmp
sbb
daa
test
das
imul
push
test
movsl
hlt
sub
push
dec
test
orb
mov
out
adc
adc
mov
dec
jmp
jb
mov
test
popa
cwtl
mov
xchg
cli
and
faddl
dec
icebp
test
movb
adc
mov
xor
ret
and
sahf
icebp
inc
dec
ljmp
and
fcomip
sarb
mov
and
push
or
ja
insb
xchg
outsl
lds
cmpb
sti
and
in
mov
std
push
js
out
das
dec
inc
icebp
mov
js
pop
mov
es
add
jns
imul
cmp
mov
or
scas
cmpsl
jg
inc
jb
mov
mov
push
ret
out
hlt
mov
jg
movsb
or
aas
xchg
xchg
je
sahf
popf
pop
xchg
jb
and
xor
loope
addr16
pop
xchg
fwait
cs
lret
push
mov
sbb
rcll
pop
dec
xor
sub
je
loopne
inc
add
inc
js
xchg
not
pop
or
dec
dec
loope
push
push
xor
fs
push
hlt
shll
scas
pop
and
icebp
dec
pop
adc
dec
push
xor
jbe
cmp
cwtl
sahf
les
add
daa
sti
inc
add
pop
push
push
jmp
add
dec
outsb
xor
je
dec
aaa
clc
pop
push
out
mov
pop
add
xchg
inc
inc
xchg
push
mov
xor
mov
loopne
inc
xor
cltd
add
dec
sbbb
and
xchg
mov
pop
or
pop
pop
je
out
mov
fldenv
mov
inc
dec
mov
aaa
add
cmp
and
pop
xchg
xor
push
dec
fsubrl
add
cmc
cwtl
shll
mov
or
pop
test
sbb
leave
jmp
mov
jo
pop
push
scas
stos
lds
sub
sub
or
in
cs
dec
sbb
iret
gs
add
paddw
mov
and
xchg
jns
mov
pop
cmpsl
jne
or
push
mov
sub
pop
pop
cmc
mov
inc
add
inc
les
pop
loop
nop
xchg
and
add
mov
inc
test
dec
mov
push
into
movl
push
idivb
call
dec
popf
add
mov
xor
data16
add
call
adc
pop
mov
mov
xchg
fimull
mov
cmpsl
pop
ja
mov
push
incb
lock
push
add
std
add
and
jg
test
push
push
and
pop
pop
popf
arpl
js
sbb
jno
pop
pop
and
scas
add
rolb
inc
mov
dec
push
xor
incb
xor
ss
pusha
mov
mov
test
mov
stos
pop
in
jmp
insl
pop
mov
cmp
xor
ljmp
lret
sub
xor
jmp
mov
jecxz
pop
out
shlb
ja
cmc
test
xorb
xor
cmp
rcrb
sub
cs
add
fsubl
fistps
jo
mov
dec
es
adc
dec
dec
pop
add
cmp
add
test
push
push
sbb
or
mov
xor
sbb
int
or
loope
pushf
ret
adc
jne
and
cltd
mov
test
cmp
and
xor
xchg
or
test
arpl
sbb
mov
and
sub
int3
dec
xchg
sbb
data16
mov
ror
call
ja
jnp
fsubs
cld
xorb
sbb
das
or
mov
and
jl
in
out
inc
scas
adc
add
or
xorl
mov
sub
lods
test
lods
dec
adc
adc
je
and
or
sti
sbb
pusha
push
fdivl
sbb
stos
sub
mov
inc
outsl
or
mov
jno
or
xchg
adc
inc
or
sbb
orl
push
les
pop
push
stos
stos
sbb
outsl
pop
or
in
mov
data16
jl
or
inc
ret
inc
lea
stc
mov
inc
dec
or
arpl
sbb
std
adc
adc
ds
sarb
inc
scas
sbbb
xor
jp
leave
cwtl
jno
leave
push
xchg
adc
sbb
loope
or
sbb
addb
xchg
jl
mov
loop
xor
cmc
xchg
push
in
test
mov
arpl
mov
mov
jmp
xor
mov
xchg
lret
rorb
adc
insb
rep
add
sub
sti
call
cmc
pop
sub
mov
mov
adc
jo
mov
mov
mov
mov
sbb
or
sbb
pusha
xor
sbb
and
leave
arpl
sub
or
fwait
lret
mov
movsb
orb
adc
andb
or
mov
xor
iret
or
orb
or
push
lahf
pop
sub
inc
inc
mov
ss
test
cld
call
dec
mov
jecxz
lds
add
jmp
mov
mov
add
mov
push
or
mov
add
mov
rolb
mov
xor
jo
xchg
cmp
inc
sub
shlb
dec
int3
mov
inc
ret
out
or
jp
negb
and
sbb
push
neg
xchg
fucomi
or
insl
sub
aam
inc
lds
pop
push
mov
push
add
popa
jno
dec
jnp
loopne
test
std
inc
sbb
push
xor
out
xchg
jo
popf
hlt
pop
popa
push
std
or
mov
pop
pusha
out
xor
aaa
pushf
sbb
pop
and
mov
sub
sub
add
add
xchg
jo
jmp
sub
loope
fsts
jmp
mov
cltd
xorl
popf
stc
add
fmull
or
jmp
mov
push
cmp
ljmp
xlat
test
or
lcall
fsubrs
call
or
xchg
fnstcw
adc
sbb
icebp
or
add
xchg
faddl
or
lret
xor
add
sub
unpcklps
sbbl
dec
mov
outsb
std
and
xor
movsb
adc
stos
hlt
inc
stc
lret
fstl
jg
out
dec
pusha
out
add
sub
add
loope
ficomps
adc
mov
sbb
js
addr16
pop
sbb
push
adc
jmp
sbb
or
pop
and
sbb
xor
das
mov
lahf
adc
push
mov
mov
push
test
mov
inc
mov
pop
outsl
hlt
pop
jle
adc
fdivrp
sbb
pop
sub
outsl
imul
push
mov
lret
cmp
jo
pop
mov
adc
pusha
ret
lahf
int3
push
nop
inc
pusha
pop
leave
iret
push
daa
mov
xchg
jnp
and
jg
xor
inc
pusha
and
pusha
orl
inc
pop
stos
lret
out
jg
outsl
push
rol
lret
mov
lods
test
daa
sub
addr16
or
daa
push
cmp
xchg
cld
mov
das
iret
sbbb
dec
mov
pop
clc
or
xchg
or
lahf
push
or
test
insl
rolb
or
xchg
movsb
inc
inc
mov
sub
in
sub
mov
imul
dec
push
ret
les
dec
out
cli
mov
ret
jge
or
test
or
pusha
pop
cmpsb
xchg
jmp
aas
ret
cmp
aas
popa
jbe
enter
popl
mov
xor
cltd
in
outsb
jg
inc
dec
stos
fwait
lds
jmp
pop
cld
adc
mov
push
xchg
jno
push
sti
sub
adc
fbld
add
sub
ljmp
sub
cmc
int3
xchg
adc
in
loope
ja
push
jnp
and
mov
test
or
add
sbb
imul
add
dec
sub
stos
jnp
aaa
xor
add
icebp
outsl
ficoms
popf
mov
jmp
test
cli
mov
and
add
jp
in
sbb
and
aaa
call
loopne
pop
adcb
popa
mov
and
jo,pt
adc
jmp
movhps
cmp
nop
ret
push
or
inc
jno
cld
sub
repz
cmp
and
je
addr16
xlat
pop
incb
fucomp
lahf
iret
mov
xchg
push
mov
insb
cmp
daa
in
testb
push
xchg
rol
xchg
add
stc
in
dec
pop
outsb
in
ret
jnp
cmp
sbb
insl
iret
leave
and
mov
sub
mov
pop
xchg
xchg
push
cmpsl
shlb
mov
dec
mov
cmp
mov
repnz
sbb
or
aas
popl
dec
xchg
pop
xorl
sub
sbb
int
push
loope
aaa
xor
adc
insl
push
mov
clc
or
das
sbb
add
sbb
sub
cmp
or
mov
addb
push
cmpb
or
or
or
jmp
inc
xor
jecxz
adc
not
or
or
xor
pusha
jle
pusha
dec
add
mov
fdiv
sub
push
push
add
lods
jbe
push
fsts
idivb
xchg
cmp
push
jb
pop
pop
pop
and
rolb
sti
cmp
sbb
sub
inc
neg
dec
shr
xor
add
js
lds
cmp
mov
jae
mov
push
mov
mov
add
clc
ret
out
test
adc
mov
dec
movsb
xor
jmp
xchg
mov
out
lock
jno,pn
pop
or
pop
aad
cld
and
jne
repz
add
mov
fs
jmp
pop
push
jno
movsl
dec
cmpsb
and
mov
push
fldl
add
dec
xchg
lods
push
test
mov
push
test
ffree
jmp
or
jbe
loopne
push
lret
sbb
xchg
test
add
sbb
and
mov
scas
cwtl
dec
out
push
pop
sahf
js
scas
add
xor
or
fisttps
push
jle
xor
add
leave
dec
cmp
sub
sbb
insl
jecxz
and
pop
negb
dec
xor
mov
push
xchg
das
jb
mov
jno
sbb
jns
or
jmp
cs
and
mov
xor
mov
lods
or
mov
push
xor
cmp
call
jp
inc
mov
jb
pusha
sub
pop
xchg
lret
lods
mov
mov
cs
inc
fdivrs
mov
sub
and
sub
add
fmull
pushl
push
negl
pop
dec
shrb
fdivrl
sub
xchg
adc
pop
adc
fs
int3
dec
push
addl
rcrl
in
sahf
mov
fstps
or
adc
mov
mov
in
pop
hlt
scas
les
clc
loopne
repnz
dec
push
insb
or
sub
or
or
test
lahf
and
mov
loopne
popf
fists
jp
je
inc
xchg
pusha
sub
sbb
das
popf
inc
test
idivl
jg,pn
inc
subl
ret
jae
push
add
sub
outsb
leave
leave
lds
sub
add
xchg
push
outsl
adc
adc
push
push
mov
sbb
ljmp
inc
xchg
xchg
mov
decl
cmp
movsb
fiadds
cmp
mov
roll
clc
xor
or
syscall
inc
jns
jne
enter
and
testl
iret
adc
and
insb
adc
loop
sub
call
dec
scas
jns
dec
jb
push
call
outsl
jl
or
shr
fiaddl
iret
pop
gs
pop
loop
mov
pop
daa
mov
bsf
inc
cmp
push
out
les
add
jmp
or
cli
arpl
inc
call
and
enter
sub
mov
add
jmp
test
dec
push
push
add
jmp
mov
into
loop
cmp
jo
pop
xor
xorb
push
adc
dec
sbb
lock
scas
stc
lea
jmp
dec
outsl
lock
adc
inc
or
insl
sahf
lahf
psllw
mov
and
cmpsb
pusha
add
in
popl
pop
cmp
lock
jns
lret
push
sub
das
jb
add
les
loopne
mov
mov
in
pop
adc
or
dec
xor
pop
pop
clc
sub
jp
mov
ror
mov
into
or
cmp
and
xchg
out
or
repz
mov
adc
adc
sub
sti
adc
push
fs
in
ds
iret
ljmp
es
ljmp
mov
mov
call
pop
inc
cmp
inc
sbb
xor
dec
pop
mov
shrb
outsl
or
testb
stos
scas
add
bnd
add
pop
dec
pop
scas
adc
mov
rcl
or
sub
inc
popa
int
mov
lahf
xchg
or
and
and
imul
dec
sub
ds
pop
scas
inc
sub
xchg
stos
rorl
repnz
sbb
cmp
ret
cmp
ja
inc
or
lea
pop
in
arpl
jmp
rolb
pop
xor
add
inc
fstpl
fistps
lds
cld
sbb
les
jb
xchg
fcomps
add
and
loop
sarb
push
outsl
and
aas
rorl
or
push
jmp
mov
adc
aas
mov
aad
adc
cmpsl
add
inc
ds
outsb
add
jp
inc
lret
lds
dec
or
push
cwtl
bound
xchg
pop
pushf
leave
push
cmp
mov
inc
xor
int3
pop
add
xor
or
stc
jmp
adc
sbb
shll
pop
jge
out
imul
adc
cmp
loope
inc
add
loopne
or
out
and
loope
adc
ret
out
dec
push
mov
cld
in
mov
stos
add
mov
or
sub
add
popa
cs
cli
dec
cmp
xlat
dec
pusha
dec
inc
mov
lea
lds
aaa
cmp
fistpll
xor
pop
int
aas
cmp
pop
rorl
in
arpl
jns
ret
enter
sub
mov
lahf
les
mov
adc
test
or
cmc
dec
push
addl
push
jmp
neg
call
inc
sub
aam
push
mov
jmp
das
mov
inc
jnp
push
ror
call
fcompl
add
jg
sbb
dec
inc
pop
rolb
add
fwait
dec
or
xor
orb
scas
add
mov
jmp
push
dec
mov
inc
or
sub
cmp
or
and
pusha
movsl
cmp
push
ret
iret
xor
push
or
xor
xchg
add
add
push
es
or
pop
mov
dec
ljmp
repnz
push
mov
mov
mov
push
jmp
adcl
sbb
push
mov
dec
in
jne
dec
in
mov
sbb
sub
or
and
push
int
movsb
icebp
fldenv
lods
cmp
sub
xor
pop
lret
pushl
pop
mov
in
mov
sbb
fcoml
and
mov
sbb
jp
xor
lock
mov
or
push
sub
push
or
pop
jne
aam
fidivrl
dec
pop
mov
mov
cs
lss
ret
xchg
das
or
cli
bound
pusha
xchg
xchg
cmp
and
mov
mov
popa
or
int3
or
mov
leave
push
cli
or
xor
lods
lahf
adc
pop
out
rolb
icebp
out
fisttps
adc
dec
push
mov
dec
jb
rolb
add
jge
inc
xor
imul
inc
dec
sub
sbbl
test
imul
ret
sub
push
mov
xor
mov
fprem1
dec
mov
lea
sti
xor
mov
testl
mov
or
jecxz
loopne
cmp
xor
mov
jge
sub
mov
lahf
fildl
fxch
ja
adc
shr
cmp
jmp
sti
les
decl
cmp
mov
pop
xor
add
mov
rcll
xchg
cmp
sub
xchg
push
jb
cmp
and
mul
inc
sub
adc
and
fnsave
add
icebp
fildl
test
fiadds
xor
dec
push
ss
pop
addr16
popa
sbb
test
xor
ljmp
xchg
shll
inc
cmpl
das
test
mov
jnp
pop
mov
jg
or
cli
add
enter
addl
push
jbe
repnz
cmpb
lahf
sub
xor
and
xor
add
test
pop
sub
rclb
jmp
lahf
inc
add
mov
leave
ffree
cwtl
mov
jnp
and
enter
or
inc
sub
pop
cmc
cmpl
push
add
pop
shl
sbb
sub
pop
dec
jecxz
xchg
xchg
enter
pop
jecxz
mov
sub
icebp
adc
loopne
push
inc
sbbb
sub
xorb
xor
sub
sbb
lea
and
or
add
xchg
cmp
jp
insl
add
fsubp
mov
loope
ret
and
cmp
add
nop
icebp
or
aad
push
leave
testl
push
push
pop
cmpsb
push
xor
dec
pop
jmp
cli
inc
pop
scas
jmp
push
in
stos
push
out
repz
leave
std
mov
pop
mov
aam
pop
mov
or
jg
je
push
cmp
and
mov
filds
lds
fldl
ljmp
in
xor
adc
cmc
aaa
push
and
dec
popf
negb
dec
cmp
xchg
shrl
mov
cs
shrb
pusha
mov
sbb
xchg
mov
sub
jno
or
clc
repz
inc
arpl
push
push
sti
push
jae
pop
stc
adc
roll
out
js
insb
inc
jne
fwait
adcb
lock
pop
stos
ljmp
jg
neg
mov
mov
and
loopne
pop
add
add
xor
movsb
mov
push
in
jle
push
pop
cmp
mov
imul
cli
movsl
push
addr16
movsl
fs
mov
or
xor
jmp
cmp
push
leave
push
call
addr16
add
adc
test
mov
sbb
enter
mov
xchg
or
mov
nop
cmpsb
push
push
inc
test
xchg
mov
mov
sub
add
repnz
leave
loope
cs
cmp
pop
dec
mov
pushf
roll
mov
and
cmp
xor
jmp
in
sbb
std
imul
add
or
lock
jmp
imulb
stos
push
jae
leave
adc
cwtl
cmp
cld
mov
pop
jo
adc
push
sub
xor
add
rcrl
sahf
dec
mov
xchg
sub
dec
popf
dec
hlt
iret
pop
shl
dec
pop
or
pushl
enter
push
outsb
arpl
cmp
or
cmp
cwtl
enter
aam
adc
jl
xchg
popf
mov
sub
adc
cmpsl
lods
add
rol
add
inc
repnz
std
and
cltd
stos
pushf
add
in
into
or
inc
lcall
add
mov
or
inc
mov
shlb
fadds
int
mov
repnz
lcall
or
and
sbb
mov
jbe
push
push
pop
mov
idivb
mov
or
xlat
dec
add
sbb
push
ds
lcall
sub
sbb
add
pop
mov
or
or
dec
cltd
test
lods
push
pop
mov
adcb
push
inc
jmp
add
push
call
xlat
or
and
sub
pop
in
adc
mov
mov
and
in
in
test
push
js
popl
push
mov
stc
sub
xchg
sub
add
arpl
je
jne
loop
dec
lds
js
adc
and
pushf
push
add
outsb
xor
push
movsb
add
inc
lea
jl
mov
ja
sub
mov
hlt
bnd
mov
xor
xchg
rol
mov
mov
mov
mov
add
mull
jecxz
iret
mov
cmp
dec
mov
sub
push
cmp
inc
stos
push
dec
or
pop
mov
xlat
pop
jmp
mov
cmp
lock
outsb
sbb
bound
or
xor
fisubl
push
mov
dec
clc
mov
inc
dec
cld
jae
decl
xchg
std
sub
mov
and
int3
mov
mov
xor
cmc
xchg
add
add
out
add
push
mov
scas
mov
xor
push
sub
push
jge
insb
lds
orl
jp
popa
add
cwtl
pop
lret
out
rcrl
in
add
in
test
and
xor
inc
dec
adc
icebp
jge
cwtl
and
mov
inc
pop
in
ret
pop
push
lods
sarb
loop
jg
or
icebp
bound
cmp
fucomip
lahf
add
push
ds
cmp
call
cmpsb
and
out
sbb
push
in
imul
std
mov
jmp
inc
imul
jnp
inc
and
rcrl
out
add
pop
add
push
push
mov
and
and
push
out
nop
push
and
inc
adc
movsl
pop
xor
cmp
cmpl
inc
out
xor
add
andl
popa
jp
and
jmp
add
add
and
call
xchg
cmpsb
leave
lock
sub
adc
pusha
push
pop
dec
pop
sub
mov
sbb
and
and
push
lock
add
jo
fwait
push
jae
shl
pop
in
push
stc
push
add
hlt
dec
or
xor
mov
fcomip
add
movsb
xor
dec
jns
inc
sub
in
sub
into
inc
add
pop
xor
cld
sub
push
add
inc
cmpsl
or
ss
mov
pop
mov
jne
inc
fwait
sbb
ret
shr
dec
in
jmp
or
pop
push
orb
inc
das
pop
push
inc
out
mov
push
xchg
in
push
nop
dec
das
pop
xor
daa
pop
sbb
dec
das
call
stc
fisubs
lock
rolb
jp
adc
or
nop
pop
pop
jle
sbb
insb
mov
xor
or
fadds
xchg
dec
push
sbb
lock
fs
push
and
adc
xchg
pusha
sti
sti
inc
nop
ret
add
out
in
adc
and
ss
clc
sub
jl
sbb
out
pop
outsb
jbe
push
mov
jnp
paddsw
daa
mov
inc
jecxz
cmc
call
test
das
jp
dec
loopne
cmp
push
push
lock
stos
stos
and
jmp
ds
inc
cmp
add
or
pop
push
adcl
xchg
loope
dec
les
mov
rorb
or
cmp
out
shl
xchg
callw
xchg
xor
int3
push
call
or
cltd
notb
cmpb
mov
cmp
or
adc
clc
pop
out
adc
cli
sub
mov
mov
fiaddl
lret
mov
jae
mov
aas
mov
adc
inc
add
fwait
inc
or
cmp
leave
cs
inc
ljmp
pop
push
int
fiadds
sub
adcb
cmpsl
mov
add
mov
or
jo
sbb
jecxz
rcll
jnp
daa
inc
aaa
call
inc
inc
sub
repnz
test
sar
dec
adcb
pop
mov
and
or
icebp
xchg
test
mov
add
leave
dec
pop
xor
sub
xor
rolb
and
or
loop
jle
inc
or
outsb
inc
std
and
push
xchg
xor
arpl
jmp
mov
xor
mov
mov
fidivrl
xchg
sbb
pushf
or
test
jmp
loop
cmp
lcall
fwait
int3
sbb
pop
inc
lods
adcl
out
cmpsb
dec
cmp
lret
inc
xchg
jb
and
add
add
sub
sub
sbb
xor
in
sbb
push
mov
jge
push
pop
push
and
neg
push
xor
out
and
add
lock
lcall
data16
push
adc
xor
cltd
lret
push
lds
enter
mov
and
les
adc
push
inc
or
ja
lods
or
cmp
mov
or
push
mov
in
dec
shl
fdivl
push
mov
mov
cmpsl
jg
arpl
out
inc
jne
sub
add
push
or
pop
inc
adc
aam
push
jmp
push
pop
mov
pslld
sub
add
and
pop
nop
sti
imul
outsb
jge
fiadds
push
pop
add
and
cli
and
aaa
das
fldl
and
adc
jle
outsb
popa
hlt
inc
es
loop
mov
ja
adc
xor
jle
jns
nop
mov
ljmp
ljmp
outsl
mov
xor
lcall
push
notl
or
xchg
mov
ret
je
mov
xchg
add
adc
repnz
and
push
add
sub
xor
push
jmp
adc
xchg
dec
je
ret
ret
or
inc
cmp
pop
jns
ds
push
push
notb
out
iret
or
das
mov
add
xor
adc
iret
or
cmp
mov
call
cmpsb
hlt
mov
lock
fadds
dec
mov
and
lods
cmpsb
pop
push
out
cmp
and
push
mov
pop
lret
addr16
out
sub
test
push
setge
mov
mov
jmp
insl
xor
stc
jge
push
fldenv
and
scas
outsb
mov
push
mov
nop
sub
and
cmp
cmpl
xchg
inc
add
push
cmp
mov
sbb
xor
fimull
aaa
push
hlt
or
test
pop
push
orb
push
sbb
das
out
mov
sbb
mov
dec
push
pushf
xor
dec
push
dec
push
out
mov
and
or
mov
repnz
rol
data16
mov
je
push
pushf
or
and
notb
sub
sub
dec
jae
int3
jo
fsubrl
aas
dec
addl
xchg
jle
aas
push
bound
mov
sbb
jbe
jmp
mov
adc
mov
adc
pop
das
or
push
out
testb
pop
loop
loopne
mov
repnz
add
xchg
and
icebp
mov
out
add
lret
repnz
sbb
je
and
ret
fcoms
mov
inc
outsl
outsl
push
mov
rcrl
mov
add
or
out
loope
jmp
adc
push
enter
adc
mov
pop
push
cli
push
mov
inc
loope
jmp
arpl
xchg
repz
jg
jl
push
hlt
hlt
mov
pushf
nop
andb
lcall
jno
xor
pusha
dec
loop
add
sbbb
inc
sub
test
pop
sub
xor
inc
sub
daa
xor
add
adc
aaa
out
jl
or
push
out
sub
test
enter
divb
data16
je
es
adc
and
movsb
add
sbb
cmp
pop
inc
cmp
dec
add
and
scas
or
lret
iret
dec
fisubrs
inc
dec
or
sti
add
rclb
imul
mov
sbb
mull
push
lods
inc
out
sub
sbbb
mov
add
mov
jnp
test
push
aad
fucomp
aas
mov
add
stc
xchg
pop
addl
pop
sub
addb
push
add
int3
jle
cmp
imul
adc
sub
cmp
pop
cmpsb
not
sub
popf
insb
or
cli
push
les
movzwl
xor
movsl
or
jg
dec
js
popf
rclb
add
or
jmp
imul
and
mov
shlb
push
sub
mov
mov
jnp
in
insb
loopne
jmp
push
and
push
xor
pop
mov
shl
sub
mov
dec
clc
inc
xchg
mov
and
sub
repnz
mov
or
mov
cmp
test
dec
pusha
inc
lahf
mov
lods
int3
hlt
inc
add
outsb
push
cmp
nop
mov
cmp
sbb
mov
sub
or
shr
jmp
push
push
dec
or
push
mov
xor
jne
and
cmp
orb
mov
pop
fbstp
jge
pop
push
nop
mov
imul
jmp
and
test
add
inc
cmp
mov
push
lea
inc
and
cmp
int
gs
cld
ss
cmp
mov
add
sbb
or
pop
cltd
int3
and
in
xor
mov
and
fnsave
ss
jae
gs
sub
xlat
in
movsb
daa
lds
in
xor
fsubl
stos
mov
push
or
daa
or
insb
adc
lsl
cmpsb
fwait
sub
mov
and
test
push
mov
jo
addb
push
faddl
out
cmpsl
sarl
pop
dec
mov
jp
aas
pop
pop
sbb
lcall
jne,pn
adc
sbb
loop
xchg
xor
das
fstl
pusha
ljmp
fadd
notl
pop
adc
jmp
pop
add
adcb
add
adc
pop
incb
mov
and
mov
sub
add
push
pop
or
add
pop
mov
jmp
loope
and
cmp
icebp
shll
sbb
sub
test
pop
data16
rolb
mov
jp
pop
jg
imul
in
pop
iret
mov
push
lret
cs
mov
adc
xchg
mov
and
out
jecxz
fbld
enter
ds
mov
not
or
adc
mov
pop
mov
adc
jmp
add
add
mov
int3
inc
or
insl
and
jle
movl
mov
and
cmp
cmp
mov
xchg
subl
arpl
lret
and
mov
pop
adc
shr
mov
lock
push
push
jl
push
sub
adc
dec
js
in
inc
fidivl
adc
sarl
jg
xchg
sar
push
je
sbb
and
xchg
jb
das
cmpsb
push
and
lds
add
or
adcb
sub
sub
dec
dec
pop
and
xchg
add
outsl
sub
add
les
cmp
mov
gs
xlat
ljmp
and
mov
cs
sub
sbb
cld
jbe
insb
mov
mov
mov
cmp
jae
inc
xchg
fprem
jmp
cmpsb
inc
mov
jb
cwtl
mov
and
sub
inc
repz
cmp
jne
mov
push
xor
pop
gs
mov
push
sub
nop
lods
pop
mov
sub
mov
lahf
sti
push
das
iret
enter
xchg
cmp
dec
rorb
add
test
or
inc
sbb
xchg
jno
sti
int3
mov
mov
dec
scas
addl
fisttps
xchg
or
je
add
xor
jmp
cmp
pushf
repnz
jl
leave
push
push
xor
rcll
in
xorb
inc
push
into
push
dec
dec
add
xchg
movb
jl
das
dec
ja
imul
cwtl
and
jge
std
pushf
das
clc
std
jmp
mov
sub
cli
imul
cmp
shl
or
aas
dec
and
adc
adc
adc
xor
xor
jno
sahf
aas
dec
insl
and
jmp
fimuls
or
sarl
mov
test
adc
stc
cmp
orb
rorl
push
mov
inc
sub
inc
and
mov
jo
jmp
mov
gs
loope
inc
mov
sbb
or
std
jne
add
pushf
nop
adc
movb
sub
mov
and
pop
jmp
andb
rorl
push
mov
inc
jb
jnp
xor
sub
pusha
or
sbbl
fadds
leave
mov
and
add
xchg
push
hlt
mov
pop
mov
and
int
pop
sarl
in
aam
sub
and
out
xor
add
out
jge
call
pop
xchg
pop
cltd
mov
and
or
mov
jp
push
push
cmp
cs
out
popa
push
loope
mov
add
jl
loopne
inc
or
and
push
imul
xchg
mov
loop
dec
push
push
adc
pop
add
dec
ret
cmp
or
clc
and
push
daa
or
pushf
mov
push
mov
mov
sbbb
xchg
in
mov
dec
aaa
jne
lret
add
sub
sbb
jno
iret
sub
mov
icebp
push
add
push
jmp
sub
pop
mov
xor
dec
arpl
xor
jmp
lods
addr16
pop
rcll
ljmp
pusha
scas
outsb
aas
cmp
lods
sub
or
or
xor
aas
adc
sbb
add
mov
pop
push
mov
adc
lea
jmp
popa
mov
push
xor
or
call
push
push
or
add
les
lods
mov
rolb
sbb
cmp
mov
ret
shl
rcl
push
dec
add
rol
xchg
mov
sbb
inc
mov
fildl
loope
xor
jmp
jle
mov
pop
jmp
hlt
xorl
jmp
adc
andb
jbe
rcrb
push
and
and
sub
add
inc
fs
cli
cmp
aaa
nop
fmulp
clc
push
cmpsl
sub
add
idivb
imul
iret
adc
xchg
inc
orl
add
shr
pusha
test
or
into
addb
jle
xchg
push
aaa
rclb
and
sub
inc
dec
inc
mov
mov
ss
pop
fnstenv
adc
and
hlt
pop
popf
add
lods
ret
lods
add
fwait
jmp
add
push
in
adc
jne
jmp
sti
lds
sub
ljmp
stos
dec
cs
and
jne
out
pop
mov
jl
fxch
fs
push
and
mov
add
sub
stos
in
test
aad
xchg
jbe
mov
jg
push
push
push
xor
push
dec
cwtl
sbb
lea
rclb
addr16
add
jne
sub
xchg
dec
push
or
jmp
call
gs
push
push
push
adc
add
test
scas
pop
cmp
js
push
mov
mov
test
mov
mov
or
cmp
mov
jae
add
push
xchg
fs
jmp
sub
add
inc
xor
popf
inc
out
lock
pop
daa
xor
idiv
inc
mov
xor
mov
or
pop
jmp
jo
loopne
xchg
pop
rorl
sarb
pop
push
or
push
mov
push
sub
mov
lods
or
shrb
xor
push
lods
sub
xchg
pop
adc
ljmp
xor
inc
or
inc
jle
in
adc
add
pop
loop
add
push
push
cmpsl
sbb
xchg
mov
mov
pop
sub
scas
sub
lea
and
sbb
iret
adc
add
xchg
add
jp
mov
and
iret
jl
push
xchg
mov
mov
cmp
clc
hlt
cmp
mov
or
jne
pop
out
jmp
mov
pop
or
pop
xor
mov
mov
cmovle
loope
pop
jp
sbb
cmp
push
xchg
fcom
sbb
xor
mov
and
inc
mov
fmul
leave
pop
push
repz
bound
or
cwtl
stos
push
mov
cwtl
adc
xchg
stos
outsl
sbb
in
scas
sub
and
xorl
xor
andl
sub
das
mov
shr
mov
or
add
inc
shr
inc
rcl
cwtl
je
adc
inc
hlt
or
pop
mov
adc
rclb
out
xchg
cs
gs
jp
adc
mov
push
nop
pusha
sub
xlat
xchg
cmpsl
and
out
pop
mov
push
jg
out
mov
or
push
push
stos
xor
xor
xchg
and
dec
sahf
push
pop
movl
repz
mov
add
dec
pop
xchg
mulb
mov
xchg
imul
loope
dec
shrl
mov
arpl
cmpl
sbb
sahf
or
sub
xchg
stos
jl
pop
push
push
xor
popa
mov
inc
addr16
js
repnz
out
sub
adc
ljmp
or
push
sbb
xlat
lds
jmp
and
mov
insb
mov
lret
daa
fdivrp
and
rorl
or
xor
rcl
outsl
cs
in
repz
rorl
sub
pop
rclb
and
inc
add
fisttpll
or
jecxz
mov
orb
push
pop
ljmp
pop
loope
outsl
mov
push
xor
mov
dec
call
xor
adc
or
insl
pop
xchg
out
sub
test
jmp
mov
pusha
out
lock
xchg
jo
xchg
ja
xchg
das
and
imul
dec
push
add
lea
ss
dec
cmp
jmp
pop
mov
adc
add
push
mov
loope
sub
sub
cwtl
es
fisttps
dec
pop
jmp
lret
insl
pop
adc
sub
mov
push
js
test
hlt
clc
mov
push
and
adc
pop
mov
mov
gs
test
push
aas
jo
bound
adc
mov
out
pop
and
add
push
out
mov
lret
jns
imulb
neg
mov
pop
stc
sbb
sti
add
cmp
inc
mov
mov
xchg
repz
xor
adc
cmp
bound
popf
inc
sub
mov
dec
lret
sti
xor
das
ficoml
mov
ret
bound
or
loopne
jno
loop
jg
nop
mov
sub
mov
and
hlt
shrb
xchg
mov
inc
and
jns
repnz
test
nop
pop
test
lock
mov
test
or
xor
int3
ficoml
inc
jmp
add
cmp
jmp
dec
fdivrs
mov
in
stos
jns
mov
lock
rolb
cmp
jle
dec
push
push
movsl
std
inc
shr
ja
stc
cmpsl
jle
adc
loope
pusha
jae
push
sbb
and
lret
add
xlat
imul
push
jge
cmpsl
add
sub
aas
adc
mov
cmp
js
mov
div
fstl
add
xlat
jge
das
dec
pop
mov
jmp
mov
add
inc
pop
mov
movl
dec
or
push
add
fsubrs
pop
int
add
and
or
mov
and
adc
pop
ljmp
jp
and
shrl
cwtl
jb
or
push
pop
inc
add
sti
lods
dec
mov
xorl
adc
jmp
cmpsb
ss
mov
xchg
xorb
aad
sbb
xchg
inc
cld
cmpsl
jne
cli
push
es
aaa
lods
mov
ljmp
dec
ljmp
add
xor
lods
add
test
iret
adc
add
jae
lcall
out
stc
jmp
rolb
shr
xor
adc
and
rclb
mov
mov
aas
lods
xchg
roll
cmpsl
cld
mov
fsubs
pop
inc
push
xor
addr16
or
dec
cmpsb
outsb
fadds
jle
lock
push
pop
in
lds
mov
inc
ret
inc
adc
lea
xchg
imul
xor
add
or
sbb
fcomp
jnp
or
call
in
or
xor
fadds
test
sub
or
testb
add
js
jg
jmp
jge
jnp
inc
mov
jmp
xlat
js
ret
xchg
or
divl
cmp
les
cld
int3
seto
or
push
lods
sbb
fbstp
movsl
call
pop
sub
inc
mov
or
and
push
clc
or
xchg
add
mov
pop
sub
in
mov
or
mov
aaa
sub
cmp
inc
aaa
mov
or
testl
adc
dec
push
cmpb
xchg
insl
sub
sub
jp
inc
xchg
inc
andb
jmp
jmp
push
jb
out
test
out
add
add
fcomps
add
fwait
pop
push
cmp
xlat
pop
dec
xchg
imul
push
leave
lods
adc
and
pop
jae
iret
imul
cmp
and
sub
jns
das
inc
mov
inc
sub
and
shr
lahf
nop
stos
add
jmp
inc
fcmovb
dec
repnz
pop
cmpxchg
shr
sub
push
sahf
data16
push
testl
aad
shlb
and
mov
adc
lret
and
dec
push
xor
adc
mov
push
add
dec
add
or
cmc
movsb
or
jmp
fwait
mov
mov
fiadds
mov
scas
add
add
jp
scas
movsb
push
push
sti
cmp
sub
dec
clc
adc
push
and
out
mov
add
inc
clc
mov
daa
out
popf
into
and
test
dec
mov
nop
scas
jmp
aam
rolb
cmp
rolb
mov
and
imul
arpl
mov
inc
pop
lds
mov
add
lret
movsl
mov
pop
sub
xchg
ret
and
movb
sbb
cmp
inc
das
sbb
add
into
sub
jne
sub
test
pop
neg
and
sub
shrl
add
lsl
xor
inc
fdivrs
das
mov
adc
sbb
sbbl
or
mov
jecxz
mov
mov
popa
fs
call
xchg
push
jge
push
inc
add
adcl
les
mov
and
xlat
call
jb
xchg
jg
pop
xor
pop
repnz
adc
mov
aaa
mov
inc
or
daa
mov
jae
cmc
xchg
jns
insl
je
sub
fcmovnbe
data16
das
or
pcmpeqb
sbb
sbb
sub
testb
daa
push
mov
and
addr16
inc
ret
lock
not
push
xchg
test
psubq
hlt
imul
jg
daa
sti
aam
dec
test
adc
pop
test
outsb
lret
loopne
dec
sbb
dec
ficomps
movsl
sub
add
aas
cwtl
shl
pop
imul
cmc
pop
pop
xchg
xchg
sarb
inc
sahf
ret
jb
rorl
add
and
pop
xorl
dec
xchg
add
adc
std
mov
jmp
lret
jecxz
das
push
jmp
dec
clc
push
or
pop
inc
mov
add
inc
adc
stc
push
adc
pop
pop
repnz
cld
and
test
xchg
loopne
mov
add
jle
pop
mov
rorl
mov
addl
lods
pop
lahf
lds
xor
inc
inc
in
adcl
lahf
add
mov
daa
rorl
inc
pushf
xor
addr16
leave
out
cmp
mov
fxch
jg
je
sbb
lcall
adc
xchg
ss
daa
adc
hlt
dec
bound
fs
and
add
sub
mov
mov
or
ja
fisubrl
add
pop
xorb
jmp
pop
clc
cmpsl
pop
ljmp
adcl
pop
push
sbb
ljmp
push
stos
sbb
jns
iret
mov
pop
lods
xchg
ljmp
or
and
daa
sub
push
pushf
add
push
lcall
in
out
push
adc
and
pop
out
fdivr
in
pusha
sub
pop
sub
cmp
or
mov
psubsw
xor
pop
pop
in
sub
add
push
jecxz
cwtl
sub
call
or
sub
mov
push
jecxz
nop
stos
add
lds
pop
not
add
add
lea
in
push
cmp
jg
addl
in
shr
pop
sub
inc
gs
xchg
lret
stos
testb
mov
or
icebp
repz
js
imull
jle
dec
push
fs
pusha
and
dec
sti
inc
xor
push
ret
loopne
mov
pushl
fwait
mov
jmp
cmpsl
jb
pop
push
add
pop
cmp
sub
int3
dec
inc
xor
gs
jae
push
push
pop
add
inc
rcrb
pop
mov
jge
je
aas
std
pop
pop
push
xor
movsl
orl
jg
jo
sub
inc
mov
pop
shl
test
in
jne
xchg
inc
jge
pop
cmp
push
jne
and
test
enter
pop
scas
push
mov
sub
push
aad
inc
xor
enter
rcrl
sti
cmp
std
pop
xchg
cmc
lods
aam
pushf
mov
cmpxchg
imul
mov
dec
mov
leave
outsl
ret
out
fisttps
rclb
jno
fs
movsl
outsb
mov
xor
mov
inc
loopne
xchg
adc
push
push
pop
and
mov
xchg
xchg
adc
xchg
imulb
and
call
xchg
jae
out
lock
sub
mov
scas
add
xchg
dec
jmp
pop
pop
mov
nop
mov
shl
or
cmp
pop
pop
jp
xor
push
xor
pop
xchg
cmpsl
pusha
dec
push
inc
pop
and
das
mov
dec
iret
iret
push
push
test
int
jle
ret
shll
call
add
mov
nop
aad
and
pop
ret
scas
andb
fisttpll
int
ds
sub
daa
insb
mov
iret
dec
mov
add
push
jns
and
enter
cli
scas
das
push
sbb
xor
mov
dec
into
rcll
pop
stos
cs
jecxz
insl
lods
inc
mov
or
dec
dec
out
addb
stc
aas
sub
out
je
dec
sarb
xchg
xor
or
and
repnz
pop
or
adc
dec
sub
popa
test
lahf
push
inc
andb
adc
inc
mov
insb
push
mov
add
sub
pusha
push
pushw
insl
lods
xor
rorb
mov
sbb
dec
repnz
sbb
rcll
popw
push
mov
mov
nop
dec
in
mov
and
and
test
mov
loope
jecxz
js
add
das
pushf
sbb
mov
jbe
adc
and
add
xchg
inc
add
loope
push
cld
push
das
mov
or
mov
pop
jecxz
jle
daa
std
pop
sbb
fldl2t
rcrl
adc
or
popa
mov
cli
jno
xchg
jmp
ss
shll
jge
popa
push
filds
jmp
jl
scas
add
jg
xchg
add
repnz
mov
cmp
out
add
pop
add
dec
cs
jns
jp
add
inc
data16
inc
adcl
inc
jns
jle
sbb
adcl
dec
dec
std
cld
mov
ds
jo
loope
mov
xchg
in
hlt
loop
mov
rcrb
enter
test
js
stos
cltd
xor
daa
jl
add
int
and
jge
jae
repz
mov
mov
add
xlat
xor
mov
gs
sub
add
mov
testl
je
adc
or
jmp
xor
mov
rclb
stos
or
or
jecxz
xor
xor
push
push
out
stc
mov
sub
or
pusha
dec
and
mov
push
dec
aas
subb
pop
in
pop
push
mov
jne
cmc
out
adc
adc
push
and
popf
inc
sbb
sub
sbbb
xor
or
jge
test
cli
shr
fnstcw
xor
loop
jg
push
push
add
and
pop
idiv
sbb
inc
sbb
add
add
sub
jmp
mov
add
repz
out
dec
ljmp
mov
lret
imul
cs
or
adc
dec
stos
rcrb
cli
sbb
push
pop
xor
andb
mov
mov
ds
push
inc
push
jmp
xor
inc
frstor
pop
push
into
sbb
pusha
loop
and
xor
mov
idivb
inc
pop
xchg
add
call
popf
subb
subb
jg
and
adc
xchg
lahf
cmpsb
mov
push
std
or
xor
or
push
inc
sub
push
mov
jnp
ror
enter
pop
sub
add
pop
aad
jmp
dec
dec
call
mov
xchg
rolb
cli
clc
pop
pop
subl
xor
fldl
psubsw
pop
push
push
dec
pop
mov
or
fld
mov
cmp
int3
pop
lahf
push
push
jge
fistpll
mov
subb
or
cmpsb
xchg
fbld
or
out
sbb
push
out
insl
mov
and
or
xlat
mov
mov
xchg
js
loopne
pop
xor
cmovs
inc
push
mov
or
inc
jne
cwtl
in
xchg
jge
negl
and
ret
ret
roll
orb
mov
pop
fcoms
or
xor
adc
dec
add
inc
or
dec
pop
sub
or
pop
push
xchg
fsubl
aam
lock
jg
js
xchg
dec
jle
jmp
mov
or
mov
repnz
andl
stc
fisubs
je
lret
xchg
add
pop
lea
jns
cmp
sbb
xlat
adc
dec
loopne
add
push
mov
pop
clc
sbb
mov
cmpsl
lcall
icebp
icebp
test
jmp
jle
push
pop
sbb
cli
pop
pop
mov
sarl
xchg
pop
pop
in
imul
icebp
pop
or
call
push
mov
jmp
cmpl
jnp
mov
mov
clc
adc
adc
or
push
pop
pusha
test
cmp
rolb
jno
mov
add
aam
in
xchg
push
addb
or
adc
mov
inc
clc
mov
xor
push
or
dec
pop
inc
scas
cmc
pop
pop
or
sub
pop
push
or
sbb
aam
mov
cmp
pop
add
jmp
pop
js
pop
add
stc
out
xor
pushl
andl
or
popa
cmp
push
sar
lock
pusha
or
rorl
mov
sub
jp
cmc
mov
sbb
or
jmp
jb
or
sbb
out
dec
lods
repz
or
sbb
shr
push
mov
mov
or
add
add
shr
xchg
jg
push
popf
movsb
inc
orl
adc
in
inc
sub
add
pop
mov
fsubrs
sti
pop
and
jmp
mov
test
roll
js
int
xor
add
sub
lock
jl
mov
pop
add
sbbb
sub
pop
into
aaa
add
dec
scas
ror
cmp
scas
loop
adcb
xchg
ret
xchg
adc
hlt
shll
and
jno
loop
push
rcll
mov
sbb
cltd
xchg
clc
test
call
pop
scas
gs
sbb
in
nop
fiadds
push
push
jmp
imul
loop
addb
mov
jae
int3
cld
adc
andb
adc
cld
sbb
lret
or
std
inc
in
cs
movsb
and
mov
fidivrl
fisubrl
mov
push
pop
jp
hlt
ljmp
addl
sub
dec
ret
movsl
icebp
push
pop
out
sbb
ljmp
add
cmpsb
pop
xor
mov
roll
mov
xor
inc
std
mov
in
mov
xor
mov
sti
clc
adc
xchg
imul
sahf
pop
jmp
enter
pushw
dec
mov
js
insl
or
cmpsl
jl
add
cmp
imul
andb
fwait
lahf
mov
sub
in
fsubr
push
into
mov
rcl
and
and
adc
add
sub
pop
test
pop
add
or
fsqrt
push
add
xor
das
inc
sbb
in
mov
xchg
mov
lds
cmp
test
jo
mov
fs
and
add
out
inc
and
sbb
outsb
add
jmp
scas
das
push
push
sub
cmp
add
inc
xor
pop
or
inc
mov
dec
add
pop
mov
rcl
jo
xchg
clc
dec
out
stc
pop
arpl
xchg
bound
stos
sub
jmp
movsb
push
mov
inc
andl
sti
hlt
hlt
and
jns
and
push
into
adc
xchg
mov
push
lahf
daa
pusha
aas
or
sahf
aas
xchg
aas
xchg
cmpsb
out
loopne
sahf
sub
mov
mov
push
cld
mov
rorb
call
pop
jge
xorb
and
cmp
cwtl
stos
xor
mov
imul
add
jmp
xchg
mov
jns
xor
pop
sub
pop
popa
out
mov
outsl
add
cmp
lret
adc
inc
push
cmpsl
pusha
dec
dec
or
inc
js
jae
push
push
or
inc
add
shll
stc
xchg
dec
adc
rcrl
mov
mov
inc
or
mov
add
cmp
and
mov
jns
push
cmpsl
push
mov
popf
lock
xchg
sti
ss
mov
or
and
push
pushf
xor
pop
add
das
sub
inc
xor
inc
dec
xor
movsl
push
fdivrs
decb
dec
jo
sbb
and
pop
xor
dec
daa
mov
or
iret
leave
ja
xlat
ret
scas
fwait
xlat
jnp
xchg
push
xor
add
pop
dec
aaa
jmp
xchg
gs
in
lcall
xlat
or
xchg
mov
adc
mov
inc
mov
lea
jg
sub
add
pop
repz
sbb
adc
and
pop
inc
and
push
out
lahf
pop
pop
lods
mov
xchg
push
sub
mov
push
test
out
rol
adc
xchg
test
push
add
not
icebp
popa
cmpsl
mov
orl
iret
sbb
outsb
cmc
ret
in
push
pusha
jg
cmp
mov
xchg
repz
aad
cmp
loop
adc
das
mov
aad
pop
jle
and
flds
ss
or
push
scas
lods
movsb
push
js
outsl
mov
outsl
adcl
je
mov
lahf
fdivr
es
outsl
cmp
test
push
in
loop
insl
enter
lock
decb
call
sub
shrl
inc
rcll
mov
pop
xor
or
and
add
mov
cld
xchg
jecxz
ljmp
add
ret
adc
mov
xor
push
test
mov
push
aas
bound
punpcklbw
mov
cmp
nop
inc
jns
sbb
popf
add
movsb
hlt
scas
inc
lock
repnz
or
adc
jne
movd
inc
dec
leave
inc
xchg
push
hlt
cmc
nop
add
or
fs
mov
fmuls
add
pusha
push
fldenv
int3
dec
leave
push
push
test
scas
adc
add
sbb
insb
or
pop
enter
adc
add
add
ficoml
push
mov
pushf
xchg
pop
iret
mov
aad
ret
dec
int
addr16
pop
or
jae
dec
insb
and
out
out
gs
jmp
testb
pop
pop
shrb
addr16
inc
mov
cmp
cmp
lock
jg
pop
xlat
mov
out
movsl
push
pusha
ret
jmp
mov
or
push
test
and
or
push
popf
sbb
pop
push
push
dec
lds
push
cvtdq2ps
xchg
push
out
adc
out
mov
mov
outsb
call
adcb
out
adc
int3
or
stos
je
jecxz
add
xchg
mov
ret
frstor
orl
js
jbe
ficompl
shl
xlat
adc
into
mov
pop
inc
add
jmp
scas
inc
mov
sbb
cwtl
out
std
xor
push
movsb
enter
and
jl
out
nop
ja
cmp
push
stos
dec
and
out
into
daa
dec
mov
and
dec
adc
movsl
sub
lahf
push
xchg
fsubr
mov
jmp
mov
push
pusha
mov
neg
xor
jl,pt
jne
sbb
out
mov
xchg
xor
mov
push
jecxz
dec
icebp
inc
adc
sub
pop
xor
pop
jl
and
mov
dec
test
adc
fstpl
add
jmp
clc
lock
imul
or
jg
and
xchg
test
repnz
std
or
add
mov
add
stc
sarl
ret
lods
cltd
fists
or
lock
pop
sarb
inc
push
dec
mov
sarb
lock
xlat
sub
adc
cmp
dec
sub
xor
push
mov
fsts
add
nop
xchg
or
push
mov
add
mov
add
adc
pusha
aas
mov
mov
dec
jns
hlt
cs
ret
sbb
dec
in
and
push
and
repz
in
adc
mov
in
rolb
push
xchg
call
add
xor
or
and
push
jo
rorb
cmpsb
sub
loopne
mov
xor
movsl
jge
dec
std
mov
sub
cli
push
mov
fnsave
jmp
cmc
dec
nop
or
xor
inc
popa
push
in
popf
shl
pop
dec
pop
mov
mov
jns
pop
push
mov
lcall
or
push
adcl
movsb
movsl
mov
outsb
dec
std
xor
cmc
fwait
add
xchg
jg
in
jo
add
sub
pop
sub
jle
or
push
sbb
les
xor
inc
dec
je
push
pop
dec
pop
lock
sbb
subb
xchg
fldenv
xchg
test
mov
mov
adc
mov
pop
pop
neg
push
in
fstpt
add
and
stc
or
addr16
push
in
lods
mov
les
lahf
mov
mov
js
es
and
adc
adc
outsb
dec
shll
cmp
xchg
pop
cmpsl
jg
movsl
push
daa
adc
xchg
out
in
repnz
or
repz
cmpsl
in
mov
int
dec
out
sbbl
inc
incl
mov
or
call
mov
or
cmp
or
fdivl
cli
push
mov
sbb
adc
and
jno
mov
sbb
mov
or
out
adcb
pop
mov
out
push
daa
repnz
cmp
pop
jle
out
sub
jnp
loopne
jbe
and
fs
xorb
shrl
fdivr
js
cli
inc
mov
jmp
les
mov
dec
cli
cmp
adc
stos
inc
sub
in
mov
mov
into
fcompl
incl
test
shll
or
jl
jo
mov
add
mov
mov
popf
pop
and
jl
pusha
mov
mov
mov
insb
jnp
ret
add
lret
jg
jne
fisubrl
lahf
push
add
pusha
rclb
cs
adc
and
xchg
pop
mov
jmp
sbb
ret
nop
clc
mov
and
jne
or
js
movsl
loop
inc
nop
movsl
xchg
in
repnz
pop
repz
sbb
cmc
leave
fldl
subl
scas
call
repnz
fsubrl
adc
mov
mov
jmp
flds
jmp
mov
popf
inc
aad
pusha
fbstp
mov
add
mov
jg
int3
dec
dec
int
sti
or
test
pop
push
cmp
ret
mov
orb
popa
pop
and
adc
dec
je
cld
adc
sarb
sub
xor
jbe
inc
test
add
es
jp
int3
pop
je
or
xor
pop
loope
cmp
das
repz
mov
pop
inc
not
pushf
addl
clc
popa
hlt
cli
inc
movsl
pop
mov
mov
adcb
lds
push
and
movsl
cmc
cld
pop
jbe
shufps
add
xor
mov
fstps
out
mull
inc
dec
in
nop
xor
mov
xlat
nop
mov
sbb
or
push
and
jns
mov
xor
cmc
jae
xchg
pop
and
dec
shlb
js
cwtl
adc
outsb
mov
gs
aas
jge
stos
sbb
or
int
xor
sub
add
lret
shlb
filds
add
mov
hlt
xor
lahf
jno
dec
jp
and
mov
pop
pop
imul
pop
sub
leave
icebp
push
sbb
push
imul
push
push
in
jmp
idiv
andl
daa
dec
daa
js
pop
inc
add
jge
push
mov
add
xor
pop
and
pop
xchg
pop
mov
lock
or
fistpll
adc
pushf
xor
and
cmpsl
add
loope
lods
cmp
jne
and
std
sub
into
pop
addr16
sahf
in
sub
rclb
mov
pop
or
and
mov
mov
xchg
loope
push
xchg
rorl
or
xor
sbb
nop
cmp
xor
pop
jno
leave
adc
add
mov
pop
jl
push
ljmp
sahf
jle
and
movsb
dec
xchg
xchg
fiadds
dec
cli
cwtl
arpl
xor
inc
add
cmp
pop
add
pop
adc
jmp
ret
cmpsl
into
ret
push
shl
mov
mov
push
sbb
outsl
sbbb
jg
mov
or
adc
mov
and
test
jae
cmp
pop
pop
jmp
cmp
sub
dec
scas
or
enter
fidivrs
out
push
sbb
xchg
inc
ret
and
xchg
add
jne
mov
jno
loopne
push
mov
xchg
sysret
adc
sar
hlt
add
lret
hlt
aaa
or
addb
dec
sub
pop
xor
adc
and
and
mov
push
iret
and
jge
and
daa
and
shlb
mov
mov
lret
mov
bound
ret
mov
sbbb
mov
sbb
repz
adc
loopne
jmp
daa
test
and
jp
test
shrl
or
push
inc
add
es
sti
fmull
pop
push
clc
add
jge
pop
and
sub
sahf
mov
addl
sbb
push
pop
jb
leave
cmp
add
insl
lahf
push
jmp
push
adc
jo
and
repz
jle
rorb
adcb
outsb
or
in
mov
mov
xor
scas
cmp
mov
or
push
add
data16
scas
and
fs
in
add
cmpsb
ss
push
inc
test
pop
and
shrb
xchg
flds
js
xor
push
and
enter
mov
iret
or
push
and
push
rcrb
pop
and
inc
xorl
push
jl
xchg
cli
shlb
out
mov
in
mov
jle
scas
push
xorb
repnz
jmp
pop
imul
andb
daa
lret
andb
pop
adc
push
add
jmp
dec
jge
divl
xor
adc
or
jns
rorb
pop
cmpb
inc
push
or
sub
or
maskmovq
incl
inc
jp
adc
jns
aam
mov
and
dec
js
mov
call
mov
xlat
pop
pop
stos
addl
ds
and
mull
mov
dec
stc
xchg
mov
push
add
jg
fwait
adc
in
testb
adc
jbe
inc
aaa
icebp
add
sub
or
pop
mov
sbb
cmp
pop
and
jmp
in
or
out
pop
push
and
adcb
sub
or
push
sub
or
jb
and
stos
inc
sar
mov
mov
pop
inc
adc
sub
stos
jo
adcb
mov
jmp
shl
movl
push
sbb
lds
cmp
inc
mov
push
sub
pop
pushl
mov
mov
inc
inc
cmpsb
testb
das
or
jmp
mov
jmp
decl
sbb
jp
aaa
xorb
pop
fsubl
adc
inc
pop
imul
dec
inc
test
cmp
lock
xlat
push
sub
ret
aam
sub
incl
ja
pusha
inc
mov
xor
xlat
cmc
enter
mov
add
or
pop
stos
push
decl
sti
sbb
xlat
adc
daa
outsl
sti
sbb
add
push
and
add
jl
dec
mov
add
clc
adc
push
mov
lea
push
push
adc
mov
ss
mov
mov
icebp
pop
hlt
and
push
mov
cmc
and
and
pop
sbb
dec
sbb
pop
in
fiadds
push
mov
dec
mov
adc
ss
jmp
pop
push
rorb
notb
adc
and
push
pop
out
pop
adc
out
repnz
aas
mov
or
aaa
jg
pop
in
imul
xchg
ret
xchg
jmp
push
mov
outsl
mov
in
mov
add
dec
jmp
fsubs
stc
sbb
in
leave
add
mulb
jmp
push
pop
add
mov
jo
mov
js
sbb
dec
divl
cmc
xlat
add
xor
xchg
mov
das
sbb
xchg
stc
xchg
insb
js
lods
movsb
fscale
movsl
rcrl
dec
or
add
cmp
push
mov
push
pop
adc
add
arpl
rolb
jo
or
mov
popa
push
adc
xchg
popa
lret
pop
cs
pop
fmull
push
jmp
sub
hlt
repnz
pop
cld
pop
pop
mov
sti
mov
outsl
push
stos
dec
testl
mov
je
mov
loop
lret
enter
dec
out
fcompl
xchg
clc
dec
icebp
xchg
lea
and
mov
jo
xchg
mov
bound
dec
in
dec
adcl
pushl
enter
adc
push
fwait
inc
lret
fdivrl
out
xor
add
outsl
sahf
dec
dec
inc
hlt
jne
cmp
pop
push
arpl
clc
mov
imul
mov
mov
or
pop
sbb
xchg
popf
jg
add
addb
mov
pop
into
incb
adc
test
mov
xor
cmp
add
not
movsb
add
out
enter
lret
or
sidtl
pop
mov
popf
ret
xor
or
sub
pushf
nop
add
pusha
popf
pop
cmpb
or
or
add
test
xchg
roll
push
push
jo
push
inc
jnp
std
orb
leave
pop
movsl
pop
addr16
clc
sbbb
jnp
mov
imul
or
jbe
xor
in
outsb
xchg
mov
sub
dec
ficomps
and
shlb
lahf
loopne
testl
out
repz
mov
dec
dec
add
and
lock
add
push
scas
mov
cmp
push
out
sub
stos
nop
lods
loop
sarl
clc
enter
jmp
xor
iretw
adc
mov
sub
and
dec
dec
cmp
sub
jl
mov
imul
xchg
push
or
ret
pop
imul
das
pop
add
mov
cmp
push
dec
imull
out
data16
or
mov
sbb
jmp
dec
insl
pop
call
ja
mov
sbb
mov
and
mov
clc
push
and
shll
mov
push
adc
insl
aas
subb
push
sbb
fcmovnu
orb
xchg
out
daa
fcomps
pop
sbbb
fisttpll
or
add
inc
jnp
and
sbb
push
andb
add
pusha
pop
dec
cld
adc
int
cmc
or
pop
sbb
roll
aam
sub
push
cmp
lahf
scas
xchg
dec
jl
pop
inc
prefetcht0
movsb
rclb
hlt
loope
dec
and
push
dec
adc
xchg
mov
xor
sti
pop
mov
xorl
test
in
sbb
inc
add
adc
dec
add
fisttpl
ficompl
mov
stos
clc
nop
xchg
or
lret
jne
mov
roll
or
pop
call
movsl
loopne
jmp
mov
pop
jns
call
and
popl
shll
cmp
dec
pop
out
pop
scas
mov
push
mov
or
leave
shl
ja
fsubr
or
or
enter
jae
imul
push
or
push
dec
xchg
cmpsb
lods
jp
adc
mov
inc
add
in
add
sbb
push
inc
add
sub
pop
jmp
pop
jae
ja
pop
shr
xchg
test
xchg
cs
add
jge
fnstcw
sbb
mov
sarb
sbb
mov
inc
aad
mov
jnp
ja
push
or
mov
loopne
xchg
sbb
ds
jmp
lahf
int
push
pop
stos
lods
jmp
push
ret
loopne
mov
mov
jmp
shll
sbb
js
cmp
jbe
cmp
or
scas
nop
fcompl
jb
add
inc
add
pusha
iret
xchg
mov
push
jg
sub
in
insb
xchg
sub
and
or
jb
daa
lcall
lds
dec
in
inc
and
jle
ja
adc
call
sahf
std
push
add
sub
and
push
xchg
fnstcw
std
sbb
jbe
fistpll
mov
daa
je
mov
dec
mov
test
cld
add
lea
ret
fstpt
mov
push
sar
mov
add
outsl
cltd
mov
mov
das
sub
sbb
pop
insl
mov
stos
into
and
add
ljmp
pop
idivl
push
pop
shrb
lods
push
or
scas
pop
adc
mov
cli
je
and
loop
imul
mov
es
push
push
inc
fwait
and
dec
jg
add
sarb
cmp
movsl
xchg
mov
add
mov
mov
or
shll
loopne
and
and
push
or
cmp
push
lds
lahf
sbb
out
pushf
mov
repnz
inc
inc
fcmovnbe
mov
mov
add
aad
fcoml
jb
add
addr16
pop
repz
shrl
rcrb
sbb
mov
ja
xchg
insb
jmp
add
clc
mov
xchg
gs
pop
jb
inc
leave
test
mov
ds
sub
pop
out
add
lods
or
or
jp
dec
jbe
pop
cmpl
icebp
xlat
scas
cmp
xor
add
aad
loop
dec
ljmp
xlat
stc
mov
xchg
aad
sbb
mov
jmp
rol
sbb
jle
lock
jg
add
xlat
pop
andl
mov
repz
add
pop
stos
pop
imul
repz
ret
or
jne
mov
repnz
inc
pop
ljmp
faddl
imul
loopne
ret
mov
addb
push
and
out
and
push
jmp
lret
sbb
or
jge
or
and
lcall
mov
mov
lds
rol
push
das
shl
or
cmp
push
loopne
pop
lea
les
sub
cld
mov
call
jbe
cmp
dec
test
out
or
and
ret
xor
imull
and
xchg
push
or
aam
pusha
add
sub
mov
imul
pop
push
pop
daa
mov
push
ficompl
stos
mov
inc
dec
scas
or
or
push
or
and
xor
rorl
or
pop
pop
fadds
xchg
lcall
cmp
leave
iret
push
ljmp
aad
jnp
adc
inc
ret
or
cmp
sbb
pop
inc
inc
and
icebp
push
pop
sbb
mov
insb
sub
movl
int3
mov
sbb
les
or
pop
cmp
aad
ljmp
mov
aas
push
addr16
lds
shrl
cld
loopne
inc
cmp
sbb
push
and
mov
movsb
into
loope
cs
lods
pop
push
adc
xlat
add
mov
aam
aas
lcall
std
daa
das
jb
ja
sub
cmp
cmp
sbbl
add
cmc
rcll
dec
add
adc
pop
mov
lods
std
out
push
stos
cwtl
loopne
xchg
lret
subl
push
jno
cmp
push
stc
rorl
mov
push
xchg
push
rcrb
xchg
push
arpl
jae
push
scas
imul
mov
imul
jne
add
jle
sbb
sbb
iret
sarl
xor
int3
inc
fisubrl
add
pop
movsb
dec
repnz
cld
cwtl
ret
xchg
push
dec
dec
pop
jae
jmp
cmp
pop
test
inc
lods
add
adc
andb
insb
xor
mov
jb
inc
cwtl
call
das
pop
lods
jl
pusha
dec
push
mov
mov
fisubrl
adc
sahf
inc
icebp
mov
roll
jmp
add
data16
es
cli
cmpl
xchg
cmpsl
lret
xchg
stos
cmpsb
mov
push
nop
inc
in
mov
add
mov
push
xchg
adc
fsubl
bound
push
dec
add
mov
mov
sub
sub
xchg
add
dec
cltd
cmp
std
cltd
pop
add
outsl
imull
sub
adc
add
pusha
ret
stc
mul
cmp
xchg
movsl
pop
repz
lods
mov
pop
pop
adc
add
sub
xor
daa
dec
xlat
and
loopne
mov
sarl
or
sub
shlb
aam
cli
fucomp
pusha
pop
dec
and
in
and
rcrl
jns
std
cmpb
mov
icebp
dec
mov
test
in
daa
or
fstpt
mov
adc
and
ds
insl
adc
pop
insl
adc
out
cmp
shrl
in
push
js
xor
lret
out
or
arpl
push
es
pop
cmp
add
js
xor
and
sbb
sub
pop
sub
add
add
enter
pop
and
incb
fiaddl
loopne
xor
push
fsubs
dec
in
xor
jp
rcrl
pop
fs
pop
jns
dec
inc
mov
ret
add
push
cmc
mov
and
add
dec
jnp
lret
in
es
lock
push
dec
push
mov
hlt
add
sub
daa
fwait
dec
xchg
xor
jae
add
pop
push
push
mov
mov
lea
repnz
mov
stc
cmp
push
adc
dec
push
or
inc
or
mov
xor
jmp
dec
int
pop
pop
popf
dec
push
fiadds
sbbb
dec
sub
sub
sbb
ljmp
adc
pop
jne
adc
jae
or
shl
add
cmp
ret
pop
imul
mov
mov
cmc
idiv
add
cmp
cs
or
pop
sub
out
jl
or
jmp
mov
hlt
push
insl
leave
jne
ds
cltd
aad
or
outsl
dec
push
jmp
push
add
pop
cld
mov
or
inc
mov
iret
sub
xchg
xchg
ja
orb
jecxz
int3
adc
out
lods
pop
xchg
jne
push
add
adc
jb
push
int3
call
cmpsl
outsl
cli
xorl
jg
adc
mov
adc
je
in
cmp
lds
lret
in
dec
push
push
pop
mov
pop
adc
outsl
sbb
or
add
mov
fists
or
fdivrs
inc
add
or
pop
ja
xchg
lahf
push
ret
clc
dec
imul
dec
xchg
inc
mov
aas
push
cmpsl
adcb
push
loopne
push
inc
xor
add
push
pop
insb
mov
mov
scas
jg
and
push
rcll
mov
icebp
and
add
aas
xchg
pop
jo
or
adc
cwtl
loopne
enter
cwtl
push
sub
das
pop
leave
pop
xor
cmpb
dec
adc
inc
add
test
aad
pop
jmp
xlat
xchg
test
loope
std
dec
test
add
sub
pusha
pusha
lods
dec
lret
xchg
xor
cmp
jmp
negb
or
call
icebp
leave
call
or
inc
cmp
mov
fisubrs
push
je
adc
shll
jmp
mov
pop
fs
pop
push
int
or
hlt
call
inc
inc
jae
orb
jmp
pop
daa
jp
test
into
push
inc
pop
and
jnp
jle
ja
pop
mov
hlt
sbb
bound
aad
inc
and
or
shlb
js
sub
mov
dec
mov
int
loope
lock
sub
sbb
pop
movb
fs
mov
pushf
pop
fwait
bound
pop
add
into
push
xor
loopne
pop
push
push
movsl
stos
cltd
stos
in
add
sbb
dec
xor
push
ret
movsb
jnp
xchg
dec
movsb
mov
aas
lods
imul
adc
mov
inc
iret
scas
adc
pop
dec
call
mov
dec
pop
and
mov
bound
add
dec
mov
cmp
fildll
mov
ficoms
dec
sub
jne
ljmp
popf
fmull
mov
iret
icebp
cmc
inc
dec
or
adc
orb
ja
ja
test
loop
pop
push
jmp
mov
jmp
xchg
inc
cld
repz
jle
sub
int
out
pusha
push
push
and
shr
and
psubq
push
or
pop
and
dec
sbb
mov
sbbb
push
movsl
pop
fstps
xchg
pop
fbld
fistpl
jp
fnstsw
mov
and
aaa
out
add
daa
sti
sbb
test
push
aaa
adc
sub
xlat
cmp
cmp
xchg
jecxz
xor
aas
dec
dec
or
add
sub
jno
push
pop
or
fistps
aam
out
xor
out
jo
xorb
add
push
mov
push
jge
pop
pop
icebp
mov
daa
pop
push
ja
add
mov
pop
sub
pop
sti
mov
bound
and
enter
mov
jne
inc
mov
dec
call
ljmp
int3
xchg
dec
daa
rolb
pop
add
out
mov
sbb
idivb
mov
loope
aas
dec
outsl
ret
mov
or
iret
mov
ret
sub
sahf
add
dec
cld
cmp
mov
mov
cmc
sbb
sti
pop
ss
daa
push
in
mov
rorb
mov
fwait
mov
lret
pop
cmp
jg
sub
cmp
jno
xchg
sbb
mov
sub
sub
jmp
lods
mov
cld
ja
or
shr
and
mov
push
pop
pusha
adc
sub
xor
adc
pop
call
stos
mov
les
call
lea
push
mov
pop
xchg
cmp
cmpsb
leave
push
pop
pop
push
test
xchg
popf
faddl
inc
add
js
add
sub
push
add
push
dec
jmp
nop
adc
popa
testb
and
dec
pop
in
or
popf
sbb
push
cmp
jbe
ljmp
pop
rorl
repz
dec
clc
sub
add
nop
and
test
in
sti
jae
popf
sbb
xchg
mov
notl
inc
mov
hlt
out
jge
adcl
ds
and
push
sub
pop
std
or
ds
cmp
dec
fsubl
push
fldl
pop
out
ja
push
shr
inc
mov
and
push
mov
pop
addb
scas
aad
fwait
enter
or
push
mov
add
xor
xchg
mov
jmp
jp
adc
les
add
cmpb
loop
testb
loopne
in
adc
push
loopne
or
rcrl
hlt
jge
jle
daa
mov
enter
adc
inc
lock
push
push
xchg
arpl
add
minps
pop
xor
fwait
lret
mov
adc
lret
into
fiadds
aaa
lock
dec
jmp
movsb
sarb
shr
or
ret
fs
push
mov
xchg
and
sbb
adc
decb
push
mov
pushf
mov
push
mov
dec
pop
lods
xchg
in
int3
idivb
fldenv
jae
movsb
jb
fmuls
xor
shrb
dec
mov
imull
ret
test
loop
stc
sub
lcall
out
jg
push
and
cwtl
mov
xor
pop
pop
pop
adc
or
sbb
loopne
ljmp
cmpsb
and
cmp
push
pop
pop
jmp
lods
push
das
mov
cld
scas
sbb
and
loope
mov
movsb
hlt
loop
popf
inc
iret
aam
icebp
pop
cmp
or
adc
test
stos
repnz
xlat
sti
bound
fnstsw
or
add
cli
and
in
lea
pushf
jb
inc
cmp
push
inc
add
jns
sub
and
clc
add
xor
aaa
in
rcrb
pop
xor
adc
dec
fnsave
dec
pop
xor
cs
cmpsl
lock
mov
mov
cmp
sahf
ret
test
nop
mov
insb
into
insl
inc
sub
add
enter
sub
in
cmpsl
jns
dec
jne
out
adcb
pop
mov
imul
incb
mov
popf
inc
adc
inc
dec
cmpl
scas
inc
fiadds
inc
lods
icebp
das
adc
scas
insl
nop
pusha
and
pop
inc
je
lods
outsb
and
push
adcb
add
push
js
or
sahf
fadds
push
jmp
xchg
fiadds
push
call
add
test
scas
je
scas
push
clc
pop
xchg
call
push
jns
and
es
add
das
ret
mov
sub
push
add
pop
dec
inc
jae
adc
in
cwtl
add
jne
icebp
pop
mov
sbb
lret
out
push
and
push
push
add
mov
mov
loopne
xor
out
pop
sti
jmp
mov
xor
nop
pop
pop
and
jecxz
xor
mov
subb
mov
loopne
mov
cs
pop
loop
sbb
dec
and
popa
jmp
jmp
push
push
testl
xchg
pop
jbe
lret
or
xchg
icebp
adc
mov
pop
and
adc
fchs
loop
sub
xor
pushf
jmp
pop
jmp
jecxz
add
bound
dec
add
dec
ret
sbb
sub
or
mov
pop
mov
loope
mov
push
inc
push
jp
mov
mov
scas
add
or
sub
jge
ror
add
fnsave
or
int
adc
icebp
add
or
lret
xchg
aas
lods
je
push
mov
das
fnstsw
jmp
out
dec
xchg
jecxz
scas
les
call
pushf
data16
out
pop
sub
add
bound
shrl
sub
or
or
outsl
pop
lds
shr
outsl
mov
sub
not
cmp
dec
pop
sub
data16
and
pop
cltd
and
mov
aas
dec
sub
push
and
mov
pop
aas
mov
hlt
inc
pop
sbb
mov
in
in
push
int3
push
mov
popf
and
xchg
or
das
fs
mov
shlb
cmpsl
pop
push
in
sub
aas
pop
dec
dec
mov
push
jno
inc
pusha
clc
cmp
mov
add
jae
xlat
mull
jne
mov
fisubrl
enter
bound
mov
cmp
out
or
lahf
shr
and
pop
sub
sub
cli
in
call
add
push
insl
add
loop
lahf
lret
and
mov
pop
jno
ja
or
and
loope
lret
data16
daa
jecxz
fsubrl
lret
aaa
push
sbb
shrb
pusha
mov
inc
push
adc
mov
inc
fisttpll
test
imul
lgs
cmp
jae,pn
lcall
push
xor
cmp
add
or
pushf
pop
in
adc
and
jl
cmp
jg
aas
aas
repz
insb
lds
push
outsl
addr16
out
idiv
pop
mov
jmp
jp
mov
clc
movsl
push
sub
push
push
fidivl
mov
inc
dec
popa
adc
and
hlt
jmp
clc
pop
jle
loopne,pt
hlt
inc
xorb
or
cs
add
popa
jg
movsl
pusha
fsub
jns
push
leave
mov
ret
dec
add
lods
rorb
xor
sti
and
xchg
mov
rcl
sub
sub
cmp
mov
mov
cmpsb
not
lcall
add
inc
jne
sbb
xor
hlt
into
pusha
div
je
push
push
pop
repz
out
pop
push
test
out
dec
xchg
leave
mov
dec
lock
std
aaa
sbb
cmc
jbe
cmp
fldt
cmp
and
xchg
test
push
inc
shr
loopne
or
sbb
das
imul
flds
jle
in
scas
xlat
inc
and
sar
insl
test
adc
test
data16
add
add
xor
imul
pop
es
or
jno
orb
xlat
add
jmp
add
out
or
xchg
pop
jmp
mov
jg
dec
add
mov
mov
pop
nop
xor
sarb
dec
cwtl
xor
aas
inc
xor
stc
push
jge
jl
pop
mov
pop
add
xorl
fsubrp
adc
out
nop
mov
and
mov
inc
fmull
pop
loopne
dec
pusha
jae
cs
call
loop
push
inc
sub
dec
enter
sub
int3
ret
jae
imul
pop
insl
add
scas
lock
pop
repnz
mov
js
mov
orb
xor
sub
mov
push
push
dec
cmp
adc
jecxz
mov
xor
js
push
inc
cmp
jmp
mov
inc
ret
xor
adc
orb
jmp
loop
dec
mov
add
cwtl
aas
nop
push
add
xor
das
loop
inc
fmul
pop
out
out
imul
add
mov
enter
je
or
fs
lcall
fstp
mov
test
mov
push
xor
dec
sub
lret
fmulp
loop
adc
inc
rorb
cmp
xor
gs
insl
inc
push
adc
lea
mov
cmp
xchg
push
out
gs
inc
xchg
xlat
data16
sub
fwait
dec
mov
pop
test
int3
add
push
in
pop
add
mov
shl
push
lea
or
xor
add
push
mov
sbb
dec
mov
inc
stos
int
cmp
and
push
pop
and
pusha
mov
repnz
stos
and
mov
or
or
fidivs
mov
mov
pop
xor
subb
cmpsb
mov
add
xchg
popa
and
imul
mov
cmovnp
adc
cmp
dec
iret
les
out
mov
das
cmp
cs
or
outsl
sarb
mov
lahf
loop
pushf
adc
sar
gs
push
cmc
andl
jmp
sub
and
lds
pop
pop
add
pop
sub
mov
mov
push
sti
pusha
movups
cmpsl
push
sbb
cltd
out
or
in
push
push
sbb
mov
push
das
jmp
rcll
scas
and
data16
push
jp
sub
jae
lret
pop
mov
sbb
and
and
lahf
push
mov
into
leave
adc
add
pop
sarb
mov
cwtl
test
ret
lods
inc
jmp
push
imul
leave
pop
sub
or
fisubs
jne
leave
aad
cltd
in
mov
push
mov
std
xchg
roll
lods
daa
xor
inc
adc
sub
pop
sbb
clc
mov
push
and
in
xchg
mov
dec
adc
jge
sub
inc
lods
mov
cmp
clc
fs
cs
sti
mov
nop
pop
and
and
pop
sub
pop
int3
stos
jg
arpl
xor
fnsave
mov
xor
mov
mov
lods
je
pop
pop
popl
outsl
rorl
push
adc
adc
call
cli
cmp
ret
add
fstl
add
sub
or
and
pushf
jmp
xlat
pop
loopne
push
clc
push
lcall
and
cmp
pop
loopne
push
nop
inc
push
mov
cmp
or
inc
sbb
fsub
xor
cs
cmp
sub
fdivl
push
or
pop
out
pusha
daa
loope
shl
push
pop
int3
add
pop
inc
icebp
out
mov
dec
push
dec
add
mov
inc
push
mov
enter
scas
ljmp
mov
xchg
add
inc
scas
adc
push
and
out
inc
jge
inc
movsb
lods
scas
pop
xchg
sti
inc
lea
mov
dec
repz
cs
mov
and
jmp
cmp
sbb
ja
jg
or
cmp
dec
aam
pop
xchg
or
xchg
xor
out
jmp
mov
popf
jge
movsb
rcrl
mov
jmp
fstpl
leave
add
cmovl
into
jns
das
je
or
xlat
cmp
aad
imul
rol
rcll
sbb
movsb
dec
inc
cmp
loopne
clc
inc
dec
notl
pusha
fistpl
cmp
add
or
fdecstp
call
jmp
xor
mov
push
and
add
xor
sub
sbbb
and
xor
lock
fnstcw
jae
pop
add
mov
daa
shll
out
dec
jecxz
dec
clc
jne
pusha
adc
pop
mov
repz
outsb
inc
daa
movzbl
hlt
push
adc
jmp
stos
sub
outsb
cmp
pop
sahf
xor
push
jmp
jbe
loope
add
mov
and
jo
fsubp
std
cs
sub
pusha
mov
ljmp
cmp
fildl
or
scas
add
je
add
mov
icebp
push
lcall
inc
loopne
iret
adc
movsl
push
or
in
jmp
lods
mov
xor
mov
add
aam
stc
sbb
cmp
push
xor
or
aaa
cmpsb
add
ljmp
movsb
mov
into
push
rcrl
lahf
xchg
movsl
std
in
add
sbb
adc
dec
std
dec
push
push
pop
mov
adc
dec
dec
mov
xor
and
or
mov
filds
test
jns
clc
add
loop
dec
vmread
jmp
fdivr
subb
insl
dec
dec
mov
cmp
outsb
ja
shll
pop
jmp
addb
outsl
out
adc
cmc
mov
loop,pn
jle
push
test
push
out
sub
std
xchg
les
mov
jbe
stc
pop
cmc
pop
dec
push
rcrb
addr16
xchg
push
lds
hlt
xchg
popf
insb
push
cs
int3
adc
and
out
in
pop
nop
inc
orb
test
cmpsl
and
lcall
fists
jp
int3
or
pop
adc
imulb
and
nop
aad
insl
mov
jne
mov
sub
xor
dec
imul
push
mov
jmp
xor
sub
data16
mov
arpl
push
into
test
jle
mov
lods
aas
mov
popa
repz
pop
inc
jmp
cs
call
pop
inc
scas
aam
xor
sbb
cmc
add
adc
pop
add
cmp
test
lock
icebp
mov
or
adc
pop
push
pusha
cmpsl
jae
paddd
xchg
push
je
jae
loop,pn
mov
mov
addb
and
jne
call
cwtl
mov
cmc
leave
jno
rcrl
mov
lods
jbe
push
shll
inc
add
cmc
subb
adc
sub
lret
mov
mov
push
push
xlat
pushf
mov
out
sub
sub
push
add
leave
mov
repnz
in
idivb
adc
sbb
or
ret
or
push
call
sti
pusha
mov
lock
xchg
das
test
push
fsubr
inc
dec
xchg
xchg
loop
test
lea
cmpsb
pop
pop
jae
test
lret
xor
dec
test
andb
or
stos
add
idiv
leave
cmp
cmp
and
andb
ret
and
pop
pop
jg
stc
pop
nop
cwtl
xchg
lret
daa
test
out
test
mov
inc
into
jnp
sbb
xor
call
mov
adc
ss
insb
dec
jmp
and
push
ds
add
jnp
xorl
push
xchg
or
mov
jge
add
mov
jp
mov
mov
lahf
hlt
aaa
or
push
aad
add
mov
add
push
ljmp
stos
and
call
std
cmp
cmp
xor
je
notl
mov
iret
or
test
jnp
cmp
or
into
pop
js
jle
xchg
out
adc
scas
xchg
out
inc
pusha
inc
jp
les
push
lock
or
and
fsubl
jl
jge
in
add
cwtl
lds
test
pop
decb
inc
adc
push
and
mov
inc
xchg
mov
mov
jge
pop
inc
imul
test
ror
push
les
dec
jnp
int
pop
sub
and
lods
popa
lea
int3
les
movsl
inc
clc
push
pusha
repz
xchg
adc
je
sub
jmp
insl
dec
add
rcrb
rcr
lea
lcall
jl
push
jecxz
and
sbb
xor
sbb
lret
cs
cwtl
pop
insb
push
leave
shr
dec
dec
xchg
push
mov
daa
jbe
pop
jmp
daa
repz
dec
jl
or
sahf
push
shlb
sbb
orl
push
scas
rcll
adc
nop
jno
or
outsl
aas
outsl
or
add
mov
sub
pop
cmp
sbb
add
and
stos
dec
cltd
dec
inc
pop
repz
lods
test
inc
sbb
popa
stos
scas
jb
mov
test
add
pop
xor
sub
push
push
push
mov
rcrb
ret
cmp
idivb
xchg
dec
loop
ret
lock
cmpsl
xor
jmp
lret
movsb
fiadds
out
addr16
fwait
jge
dec
or
adc
jmp
sub
mov
push
or
popa
mov
lret
popf
imul
popf
mov
movsb
inc
adc
lret
out
xchg
lods
xor
jp
lret
popf
pop
mov
push
outsb
mov
pop
adc
jge
imul
ja
mov
lea
add
or
push
push
xchg
add
fimuls
addl
inc
jecxz
mov
das
or
jbe
lahf
loopne
clc
mov
insb
push
jo
mov
mov
xor
outsl
push
add
scas
aam
cmpb
xchg
and
or
rolb
adc
mov
sbb
xchg
cmp
add
sub
add
pop
sbb
jmp
pop
mov
les
dec
enter
fldcw
xchg
jge
outsl
xchg
pop
mov
push
or
sub
sub
add
mov
adc
and
aaa
add
nop
int
xor
xlat
repnz
pop
or
add
inc
lds
rcrl
dec
nop
and
cld
repz
or
and
pop
pop
jmp
xor
mov
stos
jo
mov
dec
in
inc
add
jl
idivb
xchg
sub
mov
int3
xchg
pop
xchg
xor
push
dec
rorb
call
mov
leave
stos
imul
mov
pop
push
pop
pop
add
sub
cli
xchg
call
mov
jp
pop
mov
pop
push
add
pop
add
repnz
jg
dec
mov
push
lods
testl
addb
jnp
ss
push
jmp
jno
in
add
inc
lcall
mov
xor
jnp
es
add
xlat
into
cli
inc
add
ss
int3
push
jmp
lahf
je
sub
xchg
xor
scas
sbb
ja
jne
xlat
rcl
xor
stc
add
adc
jbe
stos
repz
xor
test
or
jge
adc
repnz
xor
mov
and
xor
mov
and
or
ljmp
pop
icebp
or
add
or
dec
mov
loop
jmp
xchg
aad
shrb
pop
xor
inc
shlb
daa
jle
push
jo
or
add
dec
neg
adc
mov
xor
and
fstps
test
stos
inc
push
into
std
sub
xor
dec
mov
mov
in
jns
lods
push
sub
lock
and
pushf
jbe
das
cld
ret
sub
mov
cmp
and
sbb
lahf
pop
pushf
push
push
mov
pop
fsubrl
add
roll
sub
dec
jns
inc
clc
rclb
loopne
decb
xor
fs
addb
daa
insl
cmp
xor
fcoml
sub
and
dec
je
sahf
je
cs
inc
lcall
js
adc
push
into
movsb
mov
jno
test
fwait
jle
or
sub
sahf
and
dec
ret
inc
add
lods
sbb
fstpt
jl
fstl
repz
cmp
push
jl
and
adc
or
stc
test
xor
cmp
and
cli
adc
adc
mov
clc
pop
loope
call
fdivrs
mov
dec
mov
sti
add
daa
xor
sarl
cmp
nop
cltd
shrb
cmp
xchg
push
inc
fs
cs
push
inc
into
dec
sbb
mov
mov
fs
and
push
ss
add
js
mov
mov
adc
aad
lea
movsl
lcall
sub
fcmove
jnp
push
sub
sbb
scas
fcoml
lcall
sub
mov
xor
aas
adc
aaa
mov
or
push
imul
adc
inc
pop
jnp
btr
sub
sbb
add
cmc
adc
lahf
pop
xor
mov
push
add
sub
pusha
jg
sub
jmp
dec
loop
lahf
popa
mov
loope
jecxz
sub
movsb
movsl
pushf
pop
dec
icebp
pmaxub
clc
decb
filds
xchg
pusha
mov
pop
sub
out
xor
push
or
mov
dec
sbb
in
fnsave
push
cmp
fiadds
pop
dec
outsb
leave
push
loopne
adc
call
xchg
sahf
cmpsl
loop
ror
sbb
out
mov
inc
cmpsl
jge
sti
pop
popa
les
mov
push
insb
jecxz
pop
dec
and
icebp
sub
jge
add
aam
inc
mov
ret
int3
and
push
sbb
cmp
mov
xor
repnz
sahf
popa
jg
jae
inc
jmp
jge
adc
inc
dec
or
mov
dec
push
and
mov
popf
push
lahf
nop
push
lcall
scas
jmp
lret
xchg
push
call
jae
out
xlat
ja
dec
jg
xor
xor
pop
sub
dec
jp
push
sbb
inc
lret
out
mov
mov
out
repz
add
aad
shlb
leave
mov
js
fistpl
dec
pop
push
stos
scas
pusha
inc
pop
popa
rcl
add
or
and
loopne
add
or
loope
int3
jbe
dec
ljmp
roll
ds
sbbl
inc
icebp
daa
les
ds
imul
or
int
sbb
stos
sub
push
or
movsb
sti
repz
pop
lds
mov
sbb
dec
cmp
js
movsl
jne
aas
adc
push
cli
sub
jge
or
or
pop
mov
outsl
add
adc
aam
cmc
imul
cltd
out
adc
add
xrelease
clc
movsl
mov
adc
cmp
aas
ja
sub
sub
sub
mov
push
xchg
sbb
xor
jns
jmp
lret
sbb
pop
lds
xor
add
mov
pop
sub
push
add
pop
dec
mov
sub
test
adc
mov
push
adc
dec
test
clc
dec
mov
roll
not
shl
sub
lods
sub
imul
pop
in
cmp
dec
loop
dec
pop
mov
push
fists
or
hlt
xor
lret
sbb
sbb
inc
pop
out
ds
sub
test
push
dec
aaa
shl
gs
int
std
add
pop
pop
mov
das
xor
push
pop
icebp
sub
inc
pop
loop
xlat
ljmp
sub
test
popa
add
pop
daa
push
mov
inc
jmp
pop
push
in
insb
mov
jnp
stos
mov
push
shl
push
loopne
add
rorb
adc
xchg
pop
out
add
push
sub
popf
push
push
je
ljmp
mov
jmp
cmp
jl
test
cmpsb
inc
xchg
enter
cmc
add
cmp
jg
lahf
or
cmc
int
das
and
xchg
nop
lea
cs
jle
and
sub
xor
lcall
stc
jbe
inc
shll
inc
stos
add
mov
out
orb
jmp
adc
pop
in
add
std
pop
xchg
test
jecxz
ret
repz
gs
outsb
and
out
imul
push
cmovp
xor
adc
mov
push
mov
rolb
ds
pop
mov
mov
jb
das
fdivp
jmp
inc
fcoms
pop
nop
scas
pusha
pusha
pop
push
pop
jmp
jmp
sub
pop
les
int3
add
jl
fsubrs
inc
and
add
xor
lret
nop
sbb
push
pusha
aaa
jmpw
das
lret
xor
pop
mov
cltd
inc
out
mov
mov
adc
lock
insb
dec
or
ja
rolb
and
xchg
fmull
push
cmp
push
dec
and
add
push
pop
dec
pop
rcll
testb
and
cmp
mov
mov
inc
lods
and
je
arpl
stos
mov
outsb
out
or
push
ds
mov
and
jmp
xchg
aas
xor
jl
lds
dec
andb
dec
xchg
hlt
dec
or
test
shrb
stc
loopne
jns
jno
in
rcll
and
repnz
jmp
sbb
inc
and
sbb
pop
push
cmp
pop
jecxz
cwtl
imul
jecxz
jmp
or
sub
into
add
dec
sbb
sbbb
fs
mov
xor
sub
jbe
or
sub
mov
lret
fs
mov
or
sbb
out
inc
iret
fnstsw
fs
aas
int3
adc
mov
scas
xchg
xchg
ficomps
mov
lret
and
mov
sub
xor
xchg
data16
push
scas
sahf
dec
and
push
and
jecxz
aaa
sbb
imul
inc
dec
inc
lock
adc
lret
ja
adc
cmp
in
cmp
inc
dec
xor
xchg
add
cmp
mov
add
mov
orb
lock
sbb
bnd
cli
mov
data16
dec
stos
sub
and
mov
popf
pop
mov
ret
or
adc
jbe
mov
jbe
dec
jmp
shlb
insb
push
insb
repnz
mov
jge
jns
mov
add
mov
ljmp
cli
jo
testb
dec
pop
adc
sbb
and
pop
and
or
out
inc
fucomi
sbb
sub
lahf
jne
cmc
or
pop
fld
add
fldl
fs
ret
dec
dec
js
movsl
add
mov
in
pop
add
mov
out
in
mov
cmp
pop
pop
stc
aaa
sub
cmpsb
jbe
shlb
jae
icebp
jnp
mov
movl
mov
bound
mov
pop
jl
jge
aam
insl
icebp
test
insl
js
cs
outsb
jmp
scas
rol
jg
ret
in
and
mov
push
lds
scas
std
inc
aam
cmpsl
fwait
notb
push
inc
and
cmp
add
and
movsb
imul
lods
addb
je
jmp
outsl
xor
inc
loopne
cmc
mov
lret
dec
stos
test
in
and
popa
hlt
xorb
or
push
int
cld
inc
aaa
in
hlt
ja
inc
push
mov
ljmp
or
pushf
add
jmp
push
mov
test
jmp
push
and
mov
rcrb
les
and
or
popf
pop
or
push
push
or
pop
outsl
push
inc
into
mov
dec
pop
pusha
in
shrl
and
or
and
and
pop
xor
sbb
xor
test
out
xchg
sub
mov
pop
xchg
popa
repz
or
or
into
shlb
pop
jae
adc
push
mov
mov
push
repz
push
mov
cmpl
arpl
sbb
lock
jecxz
jg
xlat
out
out
pop
adc
xor
lods
push
add
in
iret
jnp
outsl
push
call
add
inc
in
inc
pop
pop
pop
push
loope
or
loop
mov
mov
sbb
cli
arpl
push
notb
add
or
push
cmp
lds
test
and
dec
bound
fcoml
xlat
mov
inc
xor
mov
dec
in
pop
cmp
std
sti
adc
test
adc
orl
pop
xchg
les
jmp
and
pop
and
or
inc
dec
pusha
iret
push
jge
jl
add
loop
pop
pop
and
xchg
dec
out
dec
mov
pop
pop
test
dec
sub
inc
push
loop
and
pop
adc
cmpsl
pop
mov
lcall
adc
jne
int
out
lods
aad
xor
xchg
imul
and
vunpcklps
push
or
out
jmp
dec
mov
stos
fisubl
push
push
push
mov
inc
popf
mov
leave
inc
fnstsw
ja
lahf
lock
or
outsb
sub
imul
dec
push
scas
pop
mov
loop
aaa
cmp
unpckhps
xor
stc
jmp
add
dec
pop
dec
pop
lret
xor
sub
dec
add
dec
cmp
jns
cs
ja
sub
add
mov
cmp
ss
out
jge
jae
jo
jl
mov
or
jns
nop
push
nop
repnz
inc
dec
or
pop
jge
push
inc
sarb
andb
and
or
clc
or
pusha
clc
xchg
jp
jp
cmp
or
mov
fdivr
leave
aas
bound
push
sbb
test
push
inc
test
mov
js
mov
mov
jmp
push
adc
push
bound
push
je
clc
adc
cli
push
add
cmpb
aas
daa
subb
rcl
dec
mov
fwait
loope
cs
mov
repnz
dec
or
sarb
out
add
insb
pop
sbb
lahf
je
xchg
pop
mov
sbb
ficoml
out
push
outsl
mov
or
fmuls
out
fsubrs
icebp
hlt
mov
push
test
sub
xchg
inc
jmp
sbb
xor
cld
imul
int
push
dec
cld
jecxz
shlb
push
xchg
fimuls
add
in
outsl
ljmp
push
arpl
iret
push
xchg
fwait
adc
xor
or
cwtl
xor
cmpsl
inc
das
enter
or
enter
pusha
push
or
mov
ja
xor
pushf
xchg
adc
sbb
pop
sbb
icebp
int3
push
andb
jmp
xor
push
loopne
inc
pop
outsb
xor
outsl
pop
jo
push
cmp
add
cs
jnp
fsub
and
pop
pop
decl
fdecstp
sub
mov
loope
ret
lret
dec
ds
mov
inc
stos
in
jl
fwait
jge
xor
mov
push
or
mov
mov
mov
stc
pop
jle
repnz
mov
les
xor
dec
movl
jl
aas
das
les
dec
pop
ljmp
or
outsb
add
or
pop
sub
lea
push
fldl
sub
nop
pop
sub
dec
mov
js
add
push
pop
sub
cld
mov
pusha
fidivs
xchg
js
cli
jo
enter
xor
jbe
arpl
or
int3
sbbl
pop
repz
int
enter
mov
ljmp
mov
xlat
fdivrs
push
cmp
pop
or
daa
jp
sbb
sysenter
mov
adc
push
pop
out
adc
xlat
mov
or
int3
test
mov
adc
and
lds
out
adc
mov
cmp
inc
mov
xchg
xor
es
fs
pop
sub
imul
fstpl
mov
sub
sbb
xchg
pop
jnp
out
adc
sub
or
jmp
cs
popa
notb
or
imul
jmp
sbb
mov
adc
mov
sub
mov
sarb
negb
push
dec
sub
ret
dec
sub
adc
mov
dec
jmp
pop
cs
adc
mov
jle
cmpl
jge
and
pop
cmp
ja
add
sbb
xorb
lea
cmp
test
mov
mov
test
es
add
rorl
cmc
xor
lret
popf
rcrl
mov
xor
pop
dec
test
aam
add
cmp
sarb
loopne
add
push
movsl
imul
inc
sahf
lock
out
sbb
pop
out
sbb
lea
xchg
add
fisttps
jmp
movsl
cmp
cmp
xchg
sbb
iret
or
or
pop
shrl
push
insb
mov
pusha
sub
daa
divl
rorb
inc
sbb
lcall
mov
mov
push
push
cmpsl
push
add
std
mov
test
in
nop
lods
and
add
xchg
loopne,pt
js
mov
inc
xchg
adc
int3
or
stos
inc
add
clc
std
sub
push
push
sub
add
loop
ljmp
push
test
add
scas
pusha
stos
je
call
fiaddl
mov
push
scas
cmp
sbbb
push
inc
jg
fsubr
dec
nop
lret
pop
das
cltd
cmp
xor
and
push
ss
sti
dec
mov
inc
mov
add
insl
in
iret
pop
push
cli
sub
cmp
ret
jle
push
fs
ljmp
outsb
lods
mov
dec
rcrb
sub
mov
adc
inc
cld
test
dec
aam
es
out
inc
leave
aas
cmp
pop
inc
push
inc
cwtl
test
xor
dec
or
and
cmp
lahf
das
stos
cmp
inc
push
in
xchg
mov
jg
push
movsl
loop
push
push
adc
scas
mov
inc
jns
lock
imulb
movsl
bound
nop
ja
sub
movsb
out
je
sbbb
xor
cmp
adcb
cmpsl
or
sbb
fcmove
ds
xchg
call
jb
dec
pop
pop
add
imul
out
push
sub
pop
push
adc
or
bnd
dec
cmpsl
adc
lret
add
sbb
ret
shrb
shlb
leave
push
outsb
out
aaa
jl
jmp
sub
in
add
mov
or
push
sbb
cld
ret
xor
push
fcomps
js
es
cltd
pop
mov
dec
scas
int3
dec
cltd
adc
add
imul
or
pop
mov
pop
aas
sub
and
push
push
dec
sarl
notb
xor
add
fnstcw
sbb
and
cmc
sub
push
jbe
push
loopne
pop
stos
sub
pop
test
sub
cs
repz
xor
xchg
pusha
cmc
movsl
pop
cmpb
lds
sub
adc
mov
or
lds
call
stos
enter
or
xlat
insl
iret
xor
inc
test
mov
or
sbb
xchg
mov
pop
sub
cli
cs
test
add
pop
mov
mov
cmpsl
call
cmpsl
adc
sub
test
test
xchg
movsb
out
push
repz
push
inc
xchg
mov
pop
cli
enter
aaa
inc
fiadds
pop
insl
mov
jbe
mov
add
fst
xchg
and
push
lods
mov
pop
sahf
and
ja
loopne
rorl
push
and
cwtl
push
in
add
mov
inc
and
mov
mov
xchg
push
aam
mov
mov
div
mov
es
jmp
outsb
jmp
add
testl
movsb
adc
rcr
push
sbb
add
sub
jmp
test
shl
push
add
aad
mov
xor
test
loop
add
mov
lret
pop
sbbb
or
or
push
mov
and
mov
xor
mov
mov
js
dec
jnp
cli
xor
mov
or
and
aas
fcomps
pop
loop
xor
pop
sub
mov
sbb
mov
add
push
lock
lock
adc
pushw
imul
push
and
or
sbb
aaa
ja
xchg
not
or
je
les
jne
lret
je
dec
mov
or
and
out
addl
or
mov
notl
std
clc
insl
mov
in
inc
mov
data16
out
ret
daa
jmp
add
pusha
jae
sub
test
and
inc
cmp
in
pusha
insb
sub
shl
jecxz
es
leave
cmpsl
xlat
sbb
mov
test
idivb
dec
or
dec
lahf
or
and
ret
outsl
mov
or
loope
mov
fisttpll
out
sub
fsubrl
idiv
sbbb
mov
jle
sarb
push
pop
imul
jb
cld
cmc
jb
pslld
mov
add
and
xchg
and
mov
test
pop
push
pushf
add
pop
sub
dec
pop
mov
mov
mov
or
fistpll
fwait
cmp
shr
inc
sbb
pop
mov
andb
push
insl
push
push
mov
mov
pop
mov
push
adc
mov
sub
es
dec
int
lods
cmpsl
hlt
inc
pop
push
cmp
xor
aad
nop
imul
adc
lret
mov
xchg
out
test
cmp
push
fidivs
insb
iret
pop
cmp
pop
lods
add
insl
ret
out
es
pop
neg
xchg
xchg
jmp
and
add
ret
cmp
sbb
jnp
push
xor
adcb
xor
hlt
sbb
out
push
adc
adc
pop
cs
mov
add
andb
add
arpl
mov
adc
dec
pop
cmc
sub
mov
add
jg
and
loope
aas
and
hlt
adc
push
sub
outsl
xor
adc
mov
jmp
push
push
insb
mov
mov
sbb
jl
das
ljmp
das
lret
leave
insb
push
xchg
and
lods
push
cmpsl
mov
xchg
jge
ljmp
adc
xchg
roll
rclb
push
dec
packssdw
adc
push
in
ja
outsb
rcrl
xchg
adc
pop
les
cmp
sub
das
sub
repnz
js
lock
and
or
adc
push
pop
adc
das
adc
cs
pop
mov
aas
sahf
dec
dec
inc
lds
hlt
movsb
aam
add
inc
push
or
xchg
cmp
into
sbb
inc
inc
ficomps
gs
nop
insb
addr16
xor
outsl
ja
xchg
lock
and
sahf
mov
push
push
paddusw
and
push
adcb
xor
out
mov
dec
dec
inc
fdivrp
pop
mov
fisubrl
sbb
add
gs
das
aad
std
jmp
add
outsb
lahf
inc
mov
jne
add
outsb
mov
mov
int
mov
push
ss
sbb
or
sbb
subl
lahf
js
xchg
fs
lock
inc
movsb
lds
mov
cmc
xor
adc
push
mov
add
or
pop
fidivrs
les
mov
add
mov
repnz
pop
lds
test
movsb
pop
outsl
push
cmc
dec
filds
jae
mov
insb
lock
jge
sub
test
xor
je
add
mov
sub
cmp
or
inc
mov
jne
fstps
insb
push
adc
std
sub
ret
repnz
icebp
adc
lock
xorb
pop
push
and
jg
gs
out
aas
add
mov
dec
addl
je
shl
mov
jae
cmp
test
imul
jmp
inc
rclb
xor
sub
loope
xor
call
movsl
test
or
sbb
gs
push
xor
or
push
push
shll
pop
mov
push
fdivr
cmp
dec
sub
sahf
scas
add
js
cmpsl
sbb
scas
emms
sub
testb
adc
outsl
xor
lds
or
or
push
dec
subl
inc
or
inc
cmp
sbb
mov
xor
cmpb
pop
push
lock
adc
pop
pop
add
inc
adc
dec
mov
sub
cli
fsub
and
push
shrl
dec
sub
cmpb
repz
or
jmp
movsb
mov
pop
push
mov
jbe
pop
mov
andb
or
mov
inc
cld
sub
push
js
mov
lods
js
addl
adc
outsl
ljmp
inc
xor
int3
outsb
scas
lods
mov
test
addb
jo
cwtl
adc
inc
mov
stos
mov
adc
lret
mov
push
ja
test
inc
add
and
mov
sbb
xchg
inc
adc
pop
xchg
add
mov
sub
pop
sub
mov
or
into
lea
xor
pop
mov
shl
js
inc
cmp
jne
dec
pavgb
xchg
cmp
mov
shl
addb
adc
jge
repnz
push
repz
ret
or
xchg
nop
test
jbe
iret
pop
aaa
dec
pop
shl
test
add
sub
pop
aad
adc
ds
and
lods
bound
push
bound
dec
add
sub
mov
lret
sub
in
or
insl
ds
inc
daa
ret
inc
lea
jmp
push
jne
sbb
loopne
daa
cmpsl
inc
iret
push
ljmp
sub
push
incb
daa
pop
fbld
arpl
enter
shrl
sub
mul
pop
sub
fnstcw
sub
jne
add
out
xor
dec
cmp
aas
mov
add
insb
add
push
or
sbb
xchg
aaa
mov
dec
loopne
in
imul
mov
push
rol
cmpsb
lahf
adc
jb
cs
mov
stos
mov
das
loop
aad
sbbl
fwait
and
loope,pn
lret
sub
add
or
pop
insb
mov
sbb
jp
outsl
das
add
fcomps
or
or
in
pop
pop
mov
pusha
pop
dec
loop
sbb
xchg
pusha
ret
not
call
cltd
sub
pusha
lock
sub
cmp
mov
cmp
cmp
pop
dec
cli
sub
push
sahf
push
loope
jecxz
adc
andb
pop
sbb
loope
push
cli
jl
daa
inc
or
push
jge
jmp
loope
test
in
inc
mov
cltd
incl
popf
adc
adc
stos
push
cmp
movsl
xchg
fcompl
xor
iret
dec
inc
outsb
call
push
adc
sub
dec
pop
inc
incb
scas
cmp
repz
adc
pop
mov
and
dec
mov
pop
loop
imull
pop
pop
mov
push
pushf
pushf
outsb
shr
mov
add
mov
push
cmp
jo
clc
pop
lahf
push
mov
cs
jb
dec
or
ret
sti
aaa
test
add
add
and
daa
daa
push
bound
test
jb
mov
sbb
cmp
dec
call
pop
inc
push
push
hlt
rcrl
mov
pop
int
mov
pop
add
add
inc
mov
orl
xchg
or
insl
sbb
test
add
jmp
ljmp
cli
pushf
dec
jo
sbb
cs
sub
neg
cmp
popa
or
sub
xchg
dec
or
and
pop
movsb
mov
dec
sti
lods
jl
or
daa
push
jle
push
lcall
xchg
sarb
push
iret
xchg
dec
movsb
into
dec
mov
add
aam
icebp
loop
in
gs
or
nop
and
add
stos
cmc
push
cs
cmp
or
call
adc
jo
pop
pop
dec
dec
push
sub
jmp
push
in
add
or
jle
movsb
sub
xchg
add
pop
sub
rorl
xor
mov
mov
push
sub
out
sub
pop
mov
fdivrl
pop
sub
push
cwtl
ret
outsb
xchg
add
pop
pop
call
jmp
mov
mov
sub
xor
gs
mov
sbb
and
je
movsl
cmpb
psrld
jb
dec
pop
sbb
pop
or
int
test
jge
test
xor
push
adc
jmp
pop
push
pop
fsubl
pop
xchg
scas
daa
insl
jo
add
inc
sub
inc
adc
pop
inc
jnp
cmp
sub
pop
repz
lods
jo
lock
push
jmp
jbe
fnstcw
les
outsl
add
ret
mov
nop
jns
pop
inc
cwtl
fsubr
inc
ja
or
push
pcmpeqd
clc
out
jp
xor
and
adc
shlb
or
jo
dec
push
leave
add
insb
sub
jg
sbb
xchg
ja
and
in
xchg
lods
dec
test
push
out
xor
out
mov
mov
and
pop
or
jge
xor
popf
lods
inc
in
inc
in
mov
daa
mov
add
cs
pop
and
cmp
int
jge
out
jb
lret
jbe
pop
fwait
mov
in
subb
call
cs
mov
mov
fs
xchg
out
ja
or
test
xchg
cmpsl
cwtl
xlat
gs
mov
mov
pop
mov
cmpb
push
push
xor
push
mov
or
insb
dec
scas
rorb
push
add
fs
divl
or
dec
stos
mov
push
adc
mov
lods
out
call
call
mov
and
add
sti
dec
or
jl
jnp
dec
fdivs
outsl
pop
jmp
xchg
sub
sbbb
outsb
xor
sub
push
sub
pop
mov
loope
jmp
and
lock
ds
jmp
outsl
pop
mov
hlt
jle
push
pop
loop
shlb
dec
incb
pusha
push
adc
sub
push
add
inc
push
lds
sahf
test
lcall
addr16
push
push
add
add
loopne
push
fsub
loop
idivb
stc
pop
sbb
je
push
inc
jo
jne
leave
mov
rsqrtps
push
pop
daa
pop
cltd
jns
sub
bound
push
dec
jmp
dec
cld
repnz
outsl
es
and
test
cmpsb
decl
jmp
pop
push
mov
dec
mov
mov
movsb
push
ss
push
aaa
cmp
fimuls
jle
lcall
inc
mov
dec
xor
sub
lds
bound
icebp
int3
ret
push
rorl
push
jno
adc
test
test
bound
stos
jle
dec
fisubrs
mov
test
ja
outsb
pop
pop
and
repz
fisttpll
sbb
push
sbb
add
ljmp
adc
mov
pop
or
adc
subb
mov
test
mov
jb
inc
fisttpll
cmp
mov
mov
sub
les
jge
bound
pop
notb
out
in
add
shrl
or
pop
ficompl
ja
popa
push
mov
pop
xor
or
dec
jo
push
mov
in
or
std
rolb
xor
insb
or
add
mov
jne
add
push
sarb
gs
sahf
loop
adc
xor
push
and
out
out
jl
jbe
movsl
add
mov
jmp
nop
jp
sbb
test
outsb
popa
sub
repz
lods
sbb
incb
jmp
dec
jae
pop
es
push
mov
and
imul
lret
cld
jo
cltd
movsl
pop
int
dec
cwtl
sbb
addb
jne
mov
mov
dec
ds
scas
push
mov
push
mov
xchg
push
mov
rorb
fsubs
stc
aaa
mov
and
inc
push
pop
mov
out
pop
mov
test
push
inc
fs
in
pop
or
cmc
add
outsl
repz
out
push
popf
rcr
xlat
xchg
lock
mov
dec
jne
mov
xchg
cmc
adc
push
das
fnsave
fdivl
movsl
sub
iret
push
in
nop
push
in
pop
daa
mov
movsl
mov
sub
inc
int3
or
dec
movsb
cmovg
loope
sahf
addb
fisttps
gs
add
xchg
sbb
inc
or
sub
cmpb
add
mov
xor
mov
inc
and
jge
and
nop
sarl
push
jo
shlb
loope
sti
sub
cmovs
or
fldl
imul
subb
xor
jmp
xor
shr
push
jnp
lods
add
sub
add
addr16
dec
cmp
and
movsl
add
outsb
pop
dec
add
add
movsb
and
pop
mov
jmp
lahf
sbb
je
cmp
int
sahf
mov
shl
pop
imul
push
in
xchg
nop
adc
xchg
lahf
aam
ret
inc
dec
das
or
cmp
xchg
jne
adc
pop
xchg
out
cli
add
clc
sarl
adc
mov
xchg
inc
push
xchg
sub
adc
mov
stos
adc
call
mull
push
test
mov
jge
inc
jmp
pop
imul
jmp
push
mov
and
inc
or
sub
cmp
adc
fnsave
xchg
popf
add
cmp
jl
or
push
sbb
jae
ds
and
mov
pop
cs
fcoml
mov
and
mov
sub
jno
sti
mov
aas
cmp
push
dec
inc
jg
cmp
fwait
rorl
jle
cs
mov
cmp
mov
push
inc
pop
ret
or
or
and
jge
mov
add
stos
mov
movsb
add
loopne
pop
sbbl
add
in
stos
xchg
pop
incl
mov
push
and
inc
jnp
repz
add
scas
xor
lock
sub
push
add
int
cltd
ret
pop
out
or
xor
insl
xchg
cs
les
movsl
ja
mov
das
jecxz
pop
adc
cmp
psllq
add
push
xor
movsb
fists
adc
jge
cwtl
lock
pop
in
jnp
push
pop
cmp
and
enter
in
in
add
push
fcmovnb
sahf
mov
subb
bnd
movnti
sub
pop
sub
push
cmp
inc
inc
jnp
outsl
daa
mov
push
cmp
lcall
cmpsl
pop
leave
lock
push
cli
test
add
add
mov
and
jmp
aad
xchg
bound
push
push
in
pop
cwtl
adc
in
es
sbb
cmpsl
mov
add
mov
mov
pop
and
fnstsw
or
mov
enter
mov
scas
pop
hlt
mov
or
xchg
xor
dec
lcall
inc
rcll
lea
mov
nop
push
adc
adc
cs
shld
pop
imul
cmp
adc
mov
xor
pop
insb
pop
adc
add
cmpb
mov
pop
jmp
inc
jnp
sbb
push
mov
icebp
outsl
mov
jmp
in
call
mov
repnz
lds
mov
inc
test
mov
cltd
pop
add
fimuls
xchg
mov
adc
test
aad
es
mov
pop
movsb
lock
inc
cs
or
adc
sbb
popa
lahf
movsl
jmp
outsb
sti
sbb
jno
jmp
or
sti
adc
mov
add
lea
fdivrl
inc
push
mov
mov
int
idiv
dec
imul
repz
xor
loop
movsl
jmp
inc
ja
adc
scas
xorl
loope
inc
dec
lret
stc
jmp
mov
xor
sub
cmp
adc
or
push
imul
add
jmp
mov
fisttps
je
adc
fdiv
les
pop
je
xor
and
xor
or
popf
sarb
fcomi
ljmp
dec
sbb
sti
push
aad
aad
pop
stos
lret
insl
or
pop
xchg
jae
or
fwait
pop
add
es
les
in
xchg
outsl
fs
movsb
rorb
mov
and
or
ja
sbb
inc
pop
dec
shll
call
dec
add
sub
mov
xchg
jmp
sub
and
stc
xor
pop
call
mov
cld
push
mov
stos
and
jmp
sub
out
int
pusha
push
popl
movsb
negl
je
stc
dec
jno
mov
adc
imul
cli
cmp
enter
pop
jp
in
dec
pop
and
sub
loop
rol
je
jmp
adc
xor
add
add
pop
mov
xor
push
lock
pop
inc
push
mov
jmp
or
jmp
ror
call
and
push
push
icebp
adc
cs
jb
daa
xchg
xor
lea
mov
xorb
aam
push
test
mov
aad
out
testb
arpl
out
mov
loope
test
iret
mov
pop
mov
sbb
add
sub
stos
push
lods
xorb
pusha
loopne
or
push
mov
inc
xor
sbb
imul
add
out
mov
scas
lods
fbstp
push
pop
sti
mov
adc
push
add
xor
push
push
rcll
jne
jle
lea
adc
adc
add
inc
or
pop
dec
cli
out
seto
mov
daa
cmc
adc
inc
xor
mov
pop
sub
inc
je
push
mov
popa
out
dec
push
sub
popf
mov
adc
daa
pusha
jb
mov
xor
adc
lea
inc
data16
addb
inc
xor
ret
jg
pop
addl
jp
lcall
std
mov
imul
adcb
repz
mov
jmp
faddl
mov
pop
cmpsl
bound
stc
testb
xchg
aam
mov
cmp
cld
or
cmpsl
or
mov
and
or
push
pop
sub
clc
add
jae
lods
mov
mov
sub
sub
and
lret
sbb
lret
out
push
aaa
pop
ljmp
mov
cmpsb
mov
or
in
sbb
dec
sub
mov
pop
sub
and
sub
cs
mov
ret
push
add
inc
xor
mov
xchg
sub
pop
leave
xlat
loopne
push
pop
or
add
jl
push
and
or
jmp
inc
fs
stos
test
addb
mov
fs
or
pop
jge
sub
fsubrl
dec
test
clc
push
push
cwtl
xchg
out
xchg
push
or
shl
lret
ret
outsl
ret
cmpsl
xor
inc
ret
std
xchg
sahf
dec
stos
mov
jg
arpl
out
loopne
push
cmp
mov
inc
mov
cmp
xor
mov
xor
rcl
mov
dec
std
add
mov
leave
and
cwtl
les
xchg
lods
mov
rcrb
cmp
add
in
mov
dec
lds
mov
lea
adc
pop
mov
sub
or
and
jb
pop
push
and
mov
jmp
adc
push
jle
insb
rcr
sbbb
inc
adc
jns
out
sbb
neg
adc
jmp
xchg
dec
sbbb
addr16
iret
icebp
fidivs
imul
lret
pop
fneni(8087
jns
popa
orb
dec
push
pop
shrl
push
or
test
jo
inc
push
scas
subb
dec
cmp
inc
push
fidivrl
sub
jnp
fisttpl
insl
rorl
mov
push
xchg
adc
dec
loopne
jg
std
jge
mov
outsl
rolb
cmpb
dec
mov
dec
mov
jge
outsl
fldcw
add
push
push
pop
in
cmp
cmp
push
mov
lret
and
push
sbb
shl
mov
les
dec
in
cltd
jp
pop
mov
sarl
and
ja
mov
adc
adc
or
or
aaa
add
push
adc
add
rorb
pop
inc
add
push
push
xlat
adc
das
xchg
fwait
int
xor
out
push
or
clc
jmp
clc
inc
addl
sub
call
jo
adc
nop
outsl
ljmp
inc
ja
or
ffree
das
sub
ljmp
es
cltd
adc
jb
push
in
mov
or
push
in
sarl
lcall
js
push
mov
jae
push
pop
shlb
testl
mov
jno
dec
add
shrl
and
cmp
mov
inc
shlb
frstor
mov
adc
add
inc
jmp
mov
and
sub
pop
aam
sub
pop
pop
ret
sub
dec
mulb
push
mov
sub
out
and
dec
in
pop
add
and
cwtl
xor
fbstp
out
push
adc
xchg
gs
out
es
lahf
pop
mov
daa
jge
xchg
test
cmpsl
scas
xchg
cmp
pop
sti
and
jmp
dec
push
xchg
imul
fcoms
xchg
inc
or
mov
pop
inc
inc
es
adc
inc
xor
mov
fstl
and
gs
xchg
mov
sbb
pushf
jbe
pop
jb
aaa
into
lock
mov
nop
imulb
pop
xchg
push
and
dec
xor
or
ds
dec
mov
jl
push
fwait
or
sbb
adc
pop
inc
cli
inc
push
pop
gs
sub
cmp
sbb
push
movsb
ds
lea
mov
or
or
add
mov
pop
sub
rorb
or
mov
test
cvtps2pd
scas
sub
sub
mov
es
xchg
mov
dec
sub
rolb
or
pusha
sub
jae
dec
add
int
in
dec
dec
dec
add
pop
sti
fldl
pop
jmp
int3
or
xchg
add
pop
das
notl
add
insl
add
lret
test
adc
cli
and
add
push
mov
or
cmp
push
call
shlb
xchg
and
ss
loop
shrl
mov
adc
das
out
in
or
repnz
pop
xchg
fmull
push
mov
xchg
mov
loope
mov
jno
xchg
jbe
add
inc
jae
scas
loop
push
pop
pop
or
faddp
add
mov
pop
daa
leave
xor
add
out
or
iret
or
data16
cmp
xor
xchg
mov
pop
cmpb
cmp
faddl
lods
pop
mov
add
ljmp
dec
adc
push
inc
or
lea
jae
lcall
pushf
das
mov
inc
cmp
inc
clc
xchg
xor
mov
push
sub
jns
pushf
mov
fwait
push
and
mov
adcl
sub
lea
jmp
aas
orl
jle
insb
into
push
jo
jle
and
in
sub
into
rorb
and
dec
push
pop
push
jmp
cli
mov
xchg
scas
lret
outsb
or
add
and
sbb
dec
xchg
or
mov
mov
mov
in
daa
pop
pop
adc
bnd
or
icebp
inc
mov
jmp
mov
inc
push
or
pop
sbb
jne
int3
das
shrl
cmc
adc
mov
movsb
inc
js
push
push
jecxz
loopne
push
mov
call
cli
fisubrs
cmc
push
loop
sbbb
mov
pop
movsb
inc
push
pop
sub
inc
cs
out
call
imul
mov
int3
outsb
mov
xor
dec
dec
icebp
popa
pop
xor
es
adc
inc
jge
mov
out
push
andl
xor
nop
in
test
sub
mov
gs
decb
ja
xchg
pop
cmp
rcrl
mov
or
sub
xchg
mov
adc
dec
pop
mov
inc
aad
leave
jbe
add
out
and
mov
sub
or
mov
push
and
enter
push
push
ds
jmp
mov
xchg
and
clc
es
stos
rolb
int
stos
lahf
lock
mov
add
inc
lcall
push
divb
pop
pop
jmp
add
pusha
test
mov
jno
inc
mov
daa
sub
lods
fstpl
in
movsb
les
insl
push
pop
xchg
negl
mov
insb
pop
nop
or
add
bound
sub
ficomps
pop
jne
out
cwtl
pop
pusha
cs
shr
popf
jge
sub
jnp
loopne
push
jg
call
mov
leave
ret
ss
insl
push
inc
sub
xchg
xorps
inc
pop
push
jmp
add
jo
inc
pop
sbb
fucomp
jg
pusha
aas
mov
test
mov
rorb
mov
mov
add
out
xor
push
push
fs
adc
pop
ret
sbb
add
jnp
mov
add
push
out
inc
mov
aas
loope
pop
cld
xchg
push
add
daa
sub
dec
cmc
inc
testb
imul
sub
rcr
dec
das
xchg
loop
add
aad
push
pop
je
in
jg,pn
jecxz
jmp
iret
cmpb
jmp
xchg
je
push
xchg
pop
push
xchg
xor
out
fbstp
mov
lcall
inc
jmp
pop
arpl
push
aas
dec
or
out
pop
and
xor
or
or
and
xchg
add
mov
jle
mov
sub
int
or
out
jmp
rcl
js
pop
mov
pop
dec
and
mov
les
and
push
add
stc
pop
push
add
push
in
sub
add
xor
cmp
add
mov
lock
xchg
mov
clc
out
sub
xchg
lods
or
call
leave
jae
enter
or
add
inc
sub
ror
popa
cmp
adc
sub
pop
rolb
push
lahf
cmp
stc
gs
dec
scas
les
sbb
or
adc
jge
sub
or
popa
inc
add
imul
jmp
push
sarb
mov
pop
rcl
push
sub
fsubrs
dec
lds
pop
inc
out
lods
or
inc
xchg
xchg
std
push
inc
jmp
push
jo
sti
js
enter
or
or
jbe
and
pop
mov
xor
mov
mov
sbb
std
addr16
test
imul
push
push
mov
pusha
lock
fnsave
dec
ljmp
mov
or
fdivs
negb
and
sub
xor
xchg
call
pushf
test
arpl
xor
lret
add
inc
fildl
lods
add
aam
push
add
sub
adc
es
ret
ja
xchg
addr16
pop
sub
movsl
sbb
outsl
addl
push
jge
jg
int3
loopne
mov
and
add
fidivrl
imul
inc
xor
mov
jmp
jmp
dec
adc
xor
mov
or
pushf
out
les
int3
stos
loope
rorb
adc
push
nop
out
aam
ds
or
aam
ret
push
push
push
clc
pop
push
sub
ret
subb
movsl
mov
out
mov
loop
mov
mov
xor
xchg
pop
sub
push
jp
pop
jg
dec
leave
in
pop
ret
stc
dec
dec
fwait
sbb
lahf
jmp
xchg
cwtl
daa
movsbl
enter
inc
push
adc
cltd
in
push
and
pop
inc
cmp
adc
out
mov
jns
push
roll
rep
fbstp
mov
mov
cli
jge
lea
sub
push
pop
in
inc
lods
cmp
in
and
and
push
mov
mul
pop
scas
jmp
or
cmp
push
dec
data16
or
adc
mov
les
xchg
pop
imulb
mov
mov
mov
xchg
sahf
mov
and
nop
ret
cmp
out
aam
add
repnz
dec
xor
jne
jmp
aam
imul
stos
mov
mov
push
out
dec
je
or
sub
pop
scas
add
dec
xlat
sbb
xor
test
jnp
inc
jg
mov
mov
hlt
ljmp
add
mulb
cmp
in
leave
shlb
adc
add
lahf
jp
push
out
pop
pop
ljmp
push
inc
cmp
and
sub
aas
mov
sbb
xor
xchg
and
xchg
mov
cmpl
inc
and
cmp
xchg
cld
and
add
or
sub
test
adc
cmc
lahf
cmp
flds
xchg
jecxz
repz
call
push
mov
mov
sbb
es
pop
int
icebp
push
pop
jle
add
push
jmp
jnp
out
test
mov
movsl
cli
std
aam
mov
add
paddusw
add
fadds
stc
cmc
dec
sub
add
test
stos
ljmp
pop
push
inc
lret
sbb
ds
cmp
pop
loope
outsl
ret
insl
scas
jle
pop
xlat
xor
jmp
sbb
add
jl
xor
pop
push
or
add
dec
and
push
mov
and
divl
rclb
mov
ljmp
enter
outsb
clc
mov
xchg
jb
ss
cmp
jmp
sbbl
mov
mov
push
fwait
sub
aad
mov
add
mov
pop
and
cmpsl
jnp
xor
jmp
push
mov
lock
rorb
inc
addr16
sub
dec
push
aad
pop
ja
dec
jb
push
mov
adc
dec
inc
lock
mov
mov
rclb
mov
hlt
mov
pop
pop
clc
jge
daa
dec
out
test
add
jns
pop
adc
test
icebp
mov
xchg
jge
cmp
and
popf
jl
insl
adc
sub
xor
pop
and
add
shrb
negb
leave
call
add
enter
push
rcll
mov
inc
jl
push
cmp
pop
or
cmp
shlb
lret
scas
dec
inc
test
xchg
shr
fcmove
push
or
inc
call
popa
sbb
aas
sbb
imul
xorl
sbb
xor
jno
jno
xchg
ret
add
clc
mov
adc
push
xor
mov
jl
orb
daa
pop
sbb
cmc
xchg
in
lods
into
popa
jo
lahf
hlt
notl
dec
push
cmp
lcall
pop
sub
pop
jge
cmp
sbb
stos
sbb
lea
rorl
dec
mov
add
xlat
sti
inc
jne
notl
adc
mov
out
sub
lds
mov
lahf
mov
jp
dec
add
sub
in
xchg
inc
lahf
mov
and
push
mov
add
ffreep
xchg
fmuls
and
fnstsw
jge
adc
mov
sbb
dec
add
and
xor
pusha
cltd
push
ret
mov
mov
xchg
jnp
mov
enter
and
repz
add
xor
sub
stos
loope
ss
xor
push
lods
aas
in
cmp
mov
mulb
xchg
cld
add
mov
push
dec
dec
idivb
pop
push
mov
mov
cmpb
mov
lret
push
pop
add
mov
mov
out
lock
and
lock
stos
fs
mov
xorb
dec
push
movsl
and
mov
sbb
xacquire
xchg
int
pop
divl
test
rcl
arpl
popf
lret
push
fxch
inc
or
cld
inc
dec
xor
cmp
test
pop
cmp
inc
imul
test
pop
sarb
sbb
pop
sub
or
sbb
adc
sub
jge
les
inc
aaa
ljmp
in
je
and
pop
mov
push
sub
ret
add
call
out
xor
daa
sbb
add
push
add
pop
jmp
popf
dec
push
scas
add
addr16
xorb
scas
push
aaa
mov
out
push
loopne
jge
mull
neg
lcall
das
jg
nop
jg
push
pop
and
dec
sbb
add
xor
push
mov
pop
or
stos
fcomip
dec
mov
stos
pushf
jo
pop
cld
std
pop
cmp
scas
inc
rcrb
jle
dec
call
xchg
xor
cmpsb
cmp
add
xor
add
and
pop
jmp
and
cmp
imul
jp
push
out
and
push
xor
lods
dec
out
jno
clc
dec
pop
stc
sbb
adc
clc
scas
negl
aas
mov
push
fwait
adc
mov
rcrl
push
push
inc
repz
adc
daa
pop
ja
fisttpll
pop
pop
test
test
fst
out
insb
pop
jmp
pop
pop
inc
mov
inc
dec
cmp
xor
dec
sbb
mov
ret
ret
dec
push
inc
adc
jmp
sub
pop
pop
dec
or
fldcw
fsubs
and
or
push
inc
clc
testb
in
push
lea
aad
sub
jmp
jp
mov
mov
in
push
iret
push
jae
push
loope
jg
roll
dec
cmp
push
inc
add
mov
push
sub
sub
pop
pop
testl
cmpsl
mov
inc
and
cmp
sbb
and
pop
add
dec
or
andb
or
and
dec
add
pop
jo
lea
pop
mov
pop
sub
dec
add
pop
jmp
add
mov
clc
jge
cmp
pop
push
mov
daa
jmp
push
cmove
rorb
push
pop
adc
jo
mov
lcall
sub
jp
pop
lret
mov
dec
pop
cmp
inc
dec
xor
jmp
inc
in
adc
or
sub
push
addr16
popa
shl
add
pusha
xor
sbb
bound
neg
cmp
int3
xchg
cmp
popa
mov
ficomps
sub
lods
cmp
movsl
fldl
jecxz
fistpll
js
dec
test
jo
nop
push
shlb
outsl
sub
in
pop
mov
icebp
xchg
fildll
jl
pusha
out
scas
adc
dec
imul
jno
out
mov
push
cs
pop
testb
mov
neg
dec
out
jno
xor
xor
adc
jno
add
cmp
fisttps
aad
faddl
std
inc
inc
pop
push
inc
add
sbb
loop
xchg
dec
pop
add
xor
mov
pop
mov
or
adc
jge
dec
out
cltd
mov
mov
fists
push
push
dec
lret
xor
movb
add
fstpt
and
and
fidivl
and
lcall
push
push
fwait
pop
adc
push
mov
and
pop
sub
testb
jb
push
shlb
test
fadds
pop
sub
sub
stc
daa
or
mov
paddd
aas
sbb
popf
mov
mov
pop
add
pop
shl
cs
jmp
mov
loop
cmp
and
les
mov
add
shlb
mov
add
shr
out
aam
xor
mov
push
ljmp
push
mov
iret
jmp
lret
stc
pop
andl
xorb
jecxz
inc
cmp
int
adc
jb
or
sbb
jmp
push
out
les
push
jne
fistpl
out
pop
pop
push
ret
cmp
inc
sbb
lahf
rol
or
jnp
or
lock
inc
sub
or
pop
inc
add
inc
cld
mov
xchg
daa
pop
sarb
mov
sbb
fdivs
dec
mov
std
dec
in
xchg
sub
outsb
cmc
ja
or
lds
mov
repz
lock
sub
arpl
pop
mov
mov
mov
iret
cmp
add
adc
out
jns
pop
pop
push
mov
movsl
jmp
out
cmp
fdivrp
mov
and
add
xchg
and
xor
mov
push
repnz
jno
xchg
sarl
pop
loopne
add
dec
mov
and
orb
push
xchg
movsb
mov
pop
movsl
xor
push
pop
push
decb
mov
sub
mov
mov
sub
in
int
insb
jno
push
add
fs
dec
adc
js
pop
xchg
mov
push
dec
shr
test
cltd
mov
mov
jp
mov
ror
or
and
adc
pushf
inc
gs
in
loope
push
inc
test
xor
mov
lcall
adc
jge
data16
dec
fldcw
mov
pop
push
cli
push
push
leave
mov
lret
jmp
outsb
cmpsb
push
or
push
aas
inc
leave
sbb
aad
imul
pop
pop
outsb
insb
scas
cld
sbb
jo
fs
pop
out
add
push
mov
add
int
adc
inc
test
pop
xchg
xor
dec
mov
out
adc
cltd
ja
bound
xcrypt-cbc
cmpsl
rcrl
cmp
push
test
pop
inc
ljmp
push
icebp
adc
pusha
mov
push
imulb
jmp
out
add
clc
rclb
and
shr
scas
pusha
movsb
dec
jmp
xor
stos
js
push
ds
cmc
adc
pop
xor
mov
pop
inc
adc
mov
stos
push
es
pop
xor
mov
in
nop
scas
stos
sub
mov
jle
jnp
shl
and
pop
add
push
mov
rcrl
mov
aad
lods
movsl
jne
ficomps
lock
pop
mov
mov
mov
adc
dec
hlt
pop
cmp
stc
pop
sub
into
roll
add
mov
sub
mov
adc
mov
pop
mov
das
imul
imul
filds
or
pushf
sbb
popf
push
mov
cmpsl
add
cmp
lahf
insl
inc
fisttpl
add
int
xchg
and
test
add
shl
add
rcll
add
mov
pop
pop
stc
sub
mov
ret
test
adc
pop
dec
mov
pop
adc
inc
jo
shll
add
add
xchg
lds
add
fcomps
jmp
cs
inc
movsb
in
or
subb
cmp
sahf
sub
xor
jmp
arpl
pop
add
pop
test
xlat
lods
jg
dec
lea
push
or
dec
dec
mov
xchg
jecxz
subb
sarl
test
add
and
sub
lock
mov
pop
mov
jmp
cmpsl
and
mov
ret
dec
dec
mov
pop
pop
jl
into
cltd
pop
push
ljmp
orl
sub
mov
daa
push
shll
push
gs
push
inc
or
mov
sarb
inc
mull
and
loop
push
jp
mov
cmp
jmp
cmp
inc
pop
pop
dec
inc
test
or
and
add
push
push
xchg
lods
daa
ret
and
adc
jg
lock
lahf
je
cli
jbe
xchg
mov
in
push
mov
add
lock
sub
fucom
in
inc
or
clc
push
into
cmp
in
and
aaa
push
mov
outsb
dec
sub
mov
mov
test
mov
inc
cltd
daa
repnz
push
xchg
xor
inc
lds
mov
xchg
add
loope
sbb
testb
loopne
add
fcoml
bound
sbb
mov
jae
outsl
add
xchg
movsl
pop
dec
jae
adcl
gs
aas
jmp
aaa
lcall
xlat
nop
jb
xor
or
fisubs
cmp
ds
das
xor
int
jecxz
js
or
push
push
jmp
inc
or
test
jle
mov
push
scas
push
dec
decb
add
adc
dec
xchg
xor
js
pop
mov
cmp
push
and
inc
or
mov
into
mov
sub
dec
and
jo
jnp
pop
push
jl
mov
jmp
adc
pop
inc
pop
in
dec
push
and
push
inc
jno
jnp
push
and
push
scas
test
fcomip
sarl
dec
ret
shl
dec
pop
mov
es
mov
mov
inc
add
hlt
sbb
and
stos
adc
cmpb
lock
mov
fcmovbe
out
scas
ret
aam
loop
mov
mov
icebp
dec
dec
in
or
and
or
and
jle
popf
jmpw
dec
pop
add
lret
stos
dec
push
mov
push
jnp
mov
add
xchg
mov
pop
fisubl
movsb
es
outsl
inc
outsl
pop
jno
sub
nop
inc
pusha
and
dec
pop
adc
clc
jae
jns
pop
mov
cmc
loope
add
pop
pop
test
mov
add
xchg
push
xchg
jmp
stos
pop
mov
jl
jnp
mov
jo
out
and
bound
clc
and
enter
mov
andl
jae
or
mov
adc
dec
mov
cli
test
mov
into
or
sub
fcompl
pop
sbb
xchg
cmpsb
lcall
leave
jg
pop
test
xor
jle
mov
inc
adc
test
dec
xchg
and
pop
pop
dec
pop
mov
pop
lods
dec
fistl
movsl
and
fldl
mov
lcall
pop
adc
or
idivb
orb
loop
cmpsl
in
sbb
mov
flds
rcll
into
testb
mov
imul
mov
scas
pop
fwait
mov
mov
jg
ja
aaa
fsubrl
adc
js
imul
adc
pop
loopne
mov
adc
pop
test
mov
mov
call
roll
push
mov
jno
mov
mov
sub
push
shll
jmp
cmc
pop
push
out
inc
mov
aad
ljmp
and
lock
xor
ss
sub
cmp
pop
dec
cli
cmp
mov
xchg
in
adc
push
movsb
cli
jmp
das
mov
lock
and
loopne
cmp
push
mov
jmp
mov
pop
push
incb
or
push
mov
shr
add
js
div
shl
aad
jmp
and
or
pop
pop
js
or
xor
mov
mov
cmpsl
or
mov
notl
cwtl
jno
dec
inc
repnz
sbbl
je
arpl
or
mov
cmp
test
xchg
dec
adc
and
cmp
int
xor
jnp
xor
lods
push
stc
dec
gs
sbb
cmp
xchg
lock
aam
jg
bound
push
push
mov
push
jno
lods
dec
adc
adc
pusha
mov
mov
push
shr
shrb
lds
xlat
aas
or
popf
pop
cmp
bound
pop
or
dec
push
pop
add
add
decb
jo
and
or
mov
adc
mov
pop
push
push
ja
push
pop
jae
popa
sub
pop
sub
mov
mov
bound
dec
jnp
dec
inc
or
iret
test
mov
cld
aaa
inc
jno,pt
add
pop
cmc
pusha
mov
jg
loope
in
fsub
and
sub
mov
cld
cmp
add
mov
sbb
jns
jno
pusha
lret
out
inc
xor
inc
sahf
hlt
mov
sbb
jmp
in
cmp
ret
inc
adc
mov
add
cwtl
sbb
sub
push
pop
or
adc
pop
push
loope
sbb
jno
or
outsb
fdivr
out
add
dec
out
scas
dec
das
cmpsb
inc
cltd
aaa
lret
jl
movsl
jecxz
xor
sbb
xor
sub
addb
imulb
enter
lret
push
add
cmp
icebp
pop
push
mov
sahf
imul
lods
or
data16
mov
lock
test
dec
mov
hlt
dec
and
or
pusha
and
mov
fdiv
adcb
sub
sub
cmp
dec
add
in
test
mov
jnp
xor
and
rcrl
lock
mov
leave
push
mov
add
sbb
test
icebp
jmp
push
clc
cltd
add
daa
arpl
in
fs
iret
jmp
fs
xlat
or
in
test
xchg
sub
add
jg
fnsave
add
mov
lret
push
jns
clc
dec
mov
jb
repnz
scas
pop
mov
adc
or
push
cmp
lods
adc
mov
inc
mov
sub
add
adc
adc
adc
pop
push
inc
pusha
cmp
dec
popf
sbbl
dec
in
cmp
dec
out
popa
movl
out
mov
ds
in
dec
out
popa
jno
mov
daa
mul
mov
cli
push
push
subb
jmp
dec
lret
cmp
lret
push
jg
mov
cli
idiv
je
pop
aaa
scas
sub
fidivl
and
outsb
add
push
push
mov
mov
push
pop
or
xchg
pop
or
cli
dec
inc
mov
add
rcrb
pusha
pop
or
jne
mov
push
stos
xor
inc
cmp
pop
test
or
sub
jne
add
jp
stc
imul
sub
push
xchg
rorb
rol
lahf
add
mov
add
sbb
adc
lds
popf
adc
imul
adc
js
loopne
ss
mov
gs
pop
dec
push
mov
mov
shlb
inc
dec
test
mov
push
andb
pop
dec
scas
imul
out
lret
jae
adc
xlat
mov
je
xchg
out
jne
jg
into
sbb
jge
ret
das
and
pop
leave
shlb
int
lock
dec
loopne
inc
push
pop
inc
fiadds
xchg
dec
inc
xor
popf
add
sub
aad
loopne
push
push
xchg
dec
addr16
add
cmp
xchg
mov
sbb
add
ret
pop
push
fisttpll
dec
aad
push
test
out
sti
add
jbe
mov
jmp
mov
cwtl
roll
movsb
in
sub
leave
or
adc
mov
test
adc
aaa
out
jmp
les
xchg
cwtl
mov
cld
repnz
out
sub
pop
xchg
cmc
fwait
insl
rcr
movsb
or
or
call
inc
xor
push
pop
push
mov
lret
or
into
mov
lods
stos
rcrb
jmp
dec
mov
pusha
rol
call
mov
or
adc
sbb
fs
adc
stc
icebp
cmp
and
xchg
jl
jl
or
or
sub
fldcw
ljmp
adc
inc
adc
jae
xor
add
insl
out
cltd
dec
add
dec
push
sti
adc
les
mov
xchg
push
into
push
push
inc
sbb
or
das
sarl
out
mov
pop
push
mov
pop
movsb
adc
xor
fildl
sti
sbb
adc
out
xor
into
rcrb
push
daa
jno
imul
packuswb
pop
add
sub
pop
mov
dec
sub
adc
dec
sbb
inc
xchg
ljmp
outsb
jecxz
xchg
mov
add
xor
adc
pop
xchg
push
les
out
and
cwtl
cmpsb
or
inc
ljmp
xor
decl
pop
ret
mov
or
loope
adc
lods
insb
adc
sbb
in
pushf
jns
cwtl
lods
rol
xor
adc
cwtl
test
dec
xor
inc
testb
leave
inc
cld
push
and
test
int
jmp
push
out
add
push
sbb
cmp
lea
out
pop
sbb
fists
sbb
add
into
dec
adc
and
sbb
ret
scas
out
mov
xchg
push
xor
test
imul
icebp
pop
jg
in
push
movsb
adc
jle
repz
pop
fdivs
aas
mov
testb
lcall
js
dec
out
jns
outsl
mov
imul
std
cmp
shl
push
repnz
jns
add
int3
xor
adc
add
inc
outsl
sub
xchg
jl
rol
push
les
loopne
pop
push
enter
jae
or
add
push
add
xchg
in
and
data16
out
outsb
dec
sub
inc
push
jmp
ss
jbe
leave
jne
jb
push
mov
daa
lods
inc
sbb
pop
aad
cwtl
repz
jne
mov
shll
cs
out
sbb
sub
xchg
mov
or
sbb
call
pop
insl
mov
xor
sub
cs
jl
push
or
dec
adc
gs
mov
nop
inc
and
dec
loope
ja
jnp
xor
mov
aam
mov
shlb
daa
sti
xchg
popa
cmovbe
shrb
clc
sub
xchg
ljmp
nop
cmp
dec
inc
cmp
pop
out
out
jbe
pop
cmp
das
ljmp
nop
push
push
cwtl
jbe
daa
dec
sahf
mov
and
cmp
cld
incl
loopne
lock
sbb
sbb
jp
xchg
adc
xlat
push
push
push
mov
pop
or
loop
mov
or
jmp
lcall
sub
add
ds
push
pop
repnz
cmpsb
mov
add
call
fwait
or
jge
xchg
enter
and
popf
ds
push
cld
pop
or
adc
dec
ds
call
scas
repnz
lds
cmp
repnz
imul
push
aad
mov
sub
jne
call
push
ds
rolb
les
inc
fsts
dec
dec
push
das
scas
cmp
inc
dec
rorl
int
and
or
pop
notl
sbb
sub
jnp,pn
mov
lret
or
jmp
pop
pop
sub
and
sbb
daa
in
rorb
cld
or
divl
mov
pop
mov
or
adcb
jge
mov
scas
jnp
or
or
outsl
or
mov
xchg
out
push
pop
xchg
mov
and
bswap
orb
mov
or
not
cld
movsl
movsb
out
cmpsb
pop
adc
or
sub
pop
xchg
or
cwtl
scas
jmp
test
out
inc
rcrl
adc
test
dec
add
test
pop
ret
test
jae
add
push
shrb
inc
add
or
mov
add
cs
std
sbb
std
jno
mov
fcomi
push
jb
pusha
inc
or
xor
xor
pop
or
fs
lret
adc
fadds
cmp
daa
add
lock
jne
ret
push
in
std
hlt
aas
xlat
xor
stos
jno
cmp
loop
ja
or
and
aas
or
adc
push
dec
add
jmp
mov
sub
out
decl
and
mov
xchg
ret
icebp
cmp
xchg
sbb
or
sub
test
orl
sahf
inc
insb
adc
cmp
or
mov
inc
cwtl
fcomps
insl
and
dec
xor
cmp
add
xchg
outsl
and
sbb
pop
jo
or
stc
adc
iret
or
shll
sbb
cmp
inc
aam
and
sub
push
push
ds
adc
inc
imul
ss
pop
les
cmpsl
fcompl
dec
add
pushw
rcrb
out
jmp
mov
pusha
mov
fnstenv
mov
inc
lret
addb
imulb
add
out
pop
mov
inc
mov
icebp
rcrb
push
add
and
addr16
fucompp
ja
les
mov
clc
xor
out
push
jl
cmpl
das
add
inc
xchg
sti
addr16
jns
and
sub
add
jp
dec
mov
or
jmp
std
cmp
mov
or
pushf
and
sbb
shl
jmp
dec
jmp
sbb
mov
sub
push
adc
mov
inc
not
jmp
mov
xchg
cmp
and
es
xor
stos
fistps
xor
mov
mov
or
in
or
movsl
xor
fwait
xor
aas
xor
cmp
sub
fsts
jbe
pop
ja
stc
divl
imul
pop
outsb
popa
jle
out
rclb
fs
mov
push
movl
jns
jmp
mov
int3
popf
push
imull
cwtl
pop
fiaddl
pop
daa
int3
sub
inc
mov
dec
adc
xor
adc
pop
adc
cmp
inc
orl
insl
icebp
adc
inc
add
loop
dec
stos
cs
or
add
inc
fistps
or
sbb
sbb
cmpb
xor
pop
pop
pop
push
test
jnp
mov
sar
hlt
ficoms
adc
mov
mov
jno
inc
imul
cmp
sub
and
inc
arpl
sub
ret
mov
dec
mov
scas
sarl
mov
sub
cs
sub
push
inc
outsl
pop
in
push
xchg
sub
jmp
push
mov
sub
pop
mov
in
dec
ret
push
or
fstl
jmp
mov
in
das
jg
sbb
cmp
sub
adc
inc
or
add
mov
data16
cmp
aam
bound
pusha
xlat
sbb
dec
jo
sbb
cwtl
mov
pop
pop
int3
mov
inc
adc
movsl
incl
stos
add
jmp
fmulp
push
jns
jne
sub
outsl
and
repz
addr16
movhps
lahf
rcll
xchg
mov
dec
push
jle
cli
mov
push
lods
leave
adc
stos
xor
cltd
sub
sub
and
cmp
pop
cmp
daa
cmp
loopne
jl
xor
pop
mov
sub
sub
adc
pop
das
pop
push
pusha
out
insl
jbe
add
test
xor
or
sbb
pop
mov
mov
lods
das
nop
loope
shll
es
jnp
adc
cld
test
xor
sub
mov
xor
push
mov
stos
push
aad
or
jmp
popa
push
mov
pop
jle
and
ljmp
mov
mov
inc
pop
sub
add
dec
xor
clc
test
enter
in
hlt
add
jge
int
cmp
out
add
mov
shrl
cmp
sbb
dec
mov
pop
push
mov
mov
ds
negb
push
fldenv
loope
inc
ds
inc
jbe
mov
orl
ret
aam
inc
or
push
or
or
outsl
popf
rcrb
inc
pop
mov
and
push
test
fildl
pop
and
cs
arpl
sbb
sar
jmp
pop
adc
mov
sbb
mov
push
mov
adc
xor
ret
jmp
mov
je
and
and
test
aad
mov
cli
cmp
popl
pusha
sti
mov
filds
lds
or
jo
iret
scas
sti
jae
call
pop
mov
shll
mov
inc
mov
inc
mov
adc
pop
push
xor
bound
sbb
or
popa
sbb
jo
xchg
pop
inc
jo
cmp
push
and
int3
add
xor
inc
and
in
mov
sysret
sub
sub
sub
inc
xor
jmp
ja
pop
xchg
xor
ljmp
pop
gs
pop
jg
fisttpl
or
pop
mov
ljmp
lods
loope
push
popa
fisttps
out
hlt
xor
shl
addr16
cmp
or
iret
pop
addb
pusha
and
or
add
pop
jmp
ret
dec
sub
sub
pop
pop
pop
filds
test
in
cmpb
adc
add
cmpb
lock
das
adc
xchg
lret
idivl
sbb
inc
cli
rolb
mov
fmull
test
notl
je
or
mov
or
sti
mov
lahf
iret
leave
jnp
xor
mov
xlat
mov
xchg
and
aad
aas
cmp
pusha
insb
in
dec
divl
rcrb
stc
add
or
cmp
jl
dec
out
push
sub
sar
add
cmp
cltd
and
or
jae
lock
stos
mov
jl
jbe
loop
adc
add
pop
les
subb
hlt
jmp
stos
adc
loopne
jb
repz
jae
or
shl
jbe
sub
sub
negb
or
imul
add
xor
mov
cs
xchg
fisubl
test
iret
jle
inc
or
imul
and
add
rcr
cmp
ret
xor
clc
cmp
daa
hlt
hlt
and
rol
xor
roll
stos
loop
mov
cltd
clc
aam
mov
sarl
inc
cmp
movsb
and
and
pushf
pop
push
rol
push
add
repnz
rcrl
or
pop
mov
or
lcall
cltd
dec
adc
push
jecxz
or
push
shl
push
in
sub
cmp
call
clc
dec
pop
mov
or
fiaddl
daa
mov
push
clc
mov
adc
rcr
cmpb
or
roll
add
mov
fadds
ljmp
sbb
sub
adc
mov
mov
and
pop
popf
arpl
mov
adcb
mov
gs
in
sub
daa
stc
in
pop
push
push
das
jo
out
insb
or
lods
or
jns
xor
or
pop
stos
xchg
rcrb
popf
pop
dec
fs
aad
dec
icebp
push
test
repz
lds
mov
leave
nop
pop
mov
aad
push
mov
add
ret
jo
and
mov
mov
lcall
push
and
mov
mov
lods
jbe
daa
testb
out
or
incb
mov
sar
inc
notl
inc
and
mov
jp
shlb
sub
jo
inc
jns
xchg
das
inc
add
sbb
repz
pop
jae
push
push
cmp
ficomps
stc
imul
imul
stos
aas
jge
lods
jnp
add
cmp
xor
dec
xor
push
add
fdivrs
lock
shll
pop
cli
mov
push
pusha
mov
dec
adc
mov
inc
jo
loopne
add
pop
aas
cmpsb
push
sub
xchg
fbld
inc
jp
aas
push
popf
jnp
dec
inc
dec
dec
push
sbb
mov
daa
add
mulb
int
adcb
pop
mov
popf
mov
mov
int3
sti
stc
ficompl
sbb
pop
jo
mov
jle
leave
and
icebp
adc
das
adc
lods
cmp
dec
push
and
mov
sti
jle
movsl
pop
ja
pop
add
aas
push
shll
adc
pop
leave
shll
push
sbb
in
or
mov
jmp
sub
loop
scas
nop
sbb
adc
test
stc
mov
in
cltd
pop
sbb
or
or
fdivrs
pop
pop
pop
mov
adc
sub
test
mov
jae
loope
add
arpl
inc
mov
inc
cmpsb
push
mov
sub
into
addr16
cltd
mov
push
pop
inc
mov
sub
jmp
cwtl
repz
pop
cmp
push
pop
mov
dec
scas
adc
mov
inc
mov
fwait
pusha
rol
pop
nop
test
sub
dec
sub
ja
mov
and
xchg
test
mov
jg
daa
ret
push
push
xchg
ljmp
jp
mov
inc
jmp
ror
outsb
jae
mov
rol
add
scas
and
pop
mov
push
movl
dec
les
and
dec
fadd
insl
pop
push
sub
sbbb
fimuls
add
inc
add
cli
pusha
nopl
out
push
inc
mov
or
inc
and
xchg
ficoml
cmp
aas
sbbb
lds
or
cld
jns
sub
add
dec
add
in
and
lret
pop
add
test
rorl
pop
add
mov
sbb
cli
mov
out
cmpsb
cmp
mov
fsub
mov
mov
and
or
fs
push
test
push
int3
push
sub
push
xor
data16
jp
adc
mov
not
mov
jno
inc
cli
cmp
mov
call
gs
pop
sub
add
jae
cmp
sti
jle
or
jb
rcrl
testb
fs
test
xor
add
fdivs
jmp
lods
inc
aas
add
cmp
sbb
das
fstl
sub
scas
pop
push
cs
lret
add
ret
and
test
fnstcw
ret
mov
push
inc
or
jmp
push
call
jae
imul
int3
ficoms
roll
fmull
mov
sbb
inc
les
push
mov
repnz
es
dec
imulb
lock
and
add
and
ljmp
add
lods
popf
ret
pop
mov
sarb
pop
sbb
cmpb
jo
aas
push
and
loop
pop
aas
andb
mov
jmp
add
sbb
fucomip
jns
pop
and
daa
fstpt
jl
cmovns
pop
fldt
or
xchg
push
sbb
je
daa
ret
js
js
add
repnz
sbb
mov
std
roll
dec
andl
xor
data16
xchg
fildl
jp
xor
pushl
mov
cli
add
mov
mov
ss
sub
test
daa
cmp
aad
iret
stos
or
pop
push
call
push
fsts
push
imul
adc
jnp
cmpsb
push
push
mov
pop
mov
xor
dec
adc
pop
icebp
adc
test
sub
add
push
add
sbb
out
dec
inc
jp
daa
xor
mov
scas
adc
adc
nop
sti
push
push
out
clc
cmp
xchg
mov
jne
adc
test
lods
push
test
popa
sbb
shr
xor
scas
fs
out
jo
jmp
push
rcr
jo
pop
pop
in
pop
lret
repnz
sti
dec
popl
mov
clc
sarb
js
and
stos
fists
into
pop
dec
ret
and
mov
push
sub
pop
loope
and
jl
dec
and
aam
mov
cmp
jecxz
dec
mov
xor
cmpsl
pop
jnp
push
mov
xor
push
loop
add
jge
or
sbb
pop
mov
jge
sub
rorl
mov
mov
les
nop
mov
or
adc
pop
test
adc
xor
int3
xorb
push
jge
test
fstpl
cltd
push
jp
pop
pop
inc
ja
pusha
or
testl
add
push
push
jnp
and
pop
sub
pop
push
jmp
push
out
sub
mov
sti
loope
inc
jo
imul
addr16
mov
dec
adc
loope
cmp
jmp
jnp
hlt
and
push
decl
or
int
xchg
jns
add
xchg
jne
loop
cmp
push
inc
and
aam
rolb
stos
push
fcmovbe
nop
cmpsl
clc
or
pcmpeqd
mov
aam
sub
scas
bnd
inc
cmpsb
sub
pusha
mov
xchg
pop
out
in
jae
jp
xor
movsb
test
shrb
in
repz
adc
mov
add
adc
out
repnz
imul
mov
xchg
cld
jg
mov
xor
push
pusha
mov
dec
out
cld
pop
mov
cmp
inc
xorb
movsb
xchg
pushf
adc
mov
cmp
add
ss
sub
popa
jo
or
sti
pop
pop
xchg
int
scas
fistpll
and
or
hlt
add
imul
mov
jge
gs
adc
out
addb
ja
sub
sub
or
jmp
pop
push
and
jg
psubw
out
std
xchg
dec
pop
pop
jno
cmp
and
mov
sub
pop
and
mov
movsl
jmp
cmp
enter
jno
xchg
sub
ret
mov
push
rclb
cld
shlb
sbb
in
insb
sbb
push
or
pop
cwtl
mov
xor
inc
pop
sub
cmp
add
loopne
test
into
mov
mov
or
adc
pop
mov
out
push
mov
loop
and
std
xchg
pop
mov
repnz
pop
pop
call
addr16
out
jle
outsl
xchg
mov
divl
adc
adc
mov
inc
idivl
shlb
xchg
mov
ret
jb
mov
xor
movsl
add
bound
jmp
dec
add
sbb
push
pop
pusha
dec
mov
inc
sbb
inc
out
mov
adc
movsb
and
mov
shlb
and
mov
xchg
adc
adc
data16
jnp
dec
adc
rorb
addb
xorb
cld
add
test
inc
cmp
mov
mov
xorb
daa
jmp
out
aad
sub
push
mov
pop
std
stos
fs
adc
add
pop
stos
push
jl
adc
adc
adc
cltd
mov
sar
inc
js
add
ret
iret
imul
cmp
sub
pop
dec
or
jne
loopne
dec
testl
repnz
sub
and
test
das
testl
call
es
and
push
cmc
push
xchg
gs
cmpsl
shlb
stc
mov
push
pop
push
mov
add
not
cmp
pop
out
or
inc
mov
sbb
jne
sarb
mov
loop
lret
add
jbe
cmpb
outsb
pop
int3
pushf
aaa
xchg
sbb
cld
sbb
mov
cmp
lods
das
xchg
fnsave
movsl
loopne
mov
cmpsb
dec
stos
lret
aad
dec
sub
daa
inc
cmc
mov
dec
movsl
mov
cmp
cmpsl
ja
inc
mov
sbb
mov
inc
jp
out
adc
sub
test
pop
jmp
add
repnz
mov
inc
or
cmp
pushf
popf
add
pop
jmp
or
add
lods
mov
cld
xlat
mov
pop
lock
sti
nop
gs
lods
xor
cmpsl
push
and
jg
pop
add
test
loop
adc
jno
dec
sub
xchg
sbb
sar
mov
clc
xor
push
xchg
push
lock
hlt
mov
push
xchg
scas
inc
ljmp
cmp
and
push
mov
push
pop
sbb
mov
sbb
sbbb
dec
cmc
sub
stc
jp
sub
sbb
cs
cmp
jl
push
sti
mov
mov
adc
int
pushf
push
push
adc
jge
xlat
ret
inc
sbb
pop
mov
call
mov
push
ret
adc
pop
mov
aaa
shrl
lret
add
mov
dec
pop
clc
jb
or
push
loope
inc
add
jg
loope
pop
mov
out
std
add
adc
jl
and
and
or
or
mov
pop
jns
inc
mov
jnp
ret
mov
mov
jbe
xchg
mov
fs
push
or
or
add
xor
aaa
add
je
sub
sub
jle
pop
and
add
or
xor
xor
jo
push
jmp
lahf
jnp
rcll
adc
stc
ret
mov
daa
gs
push
in
flds
inc
mov
frstor
pusha
bound
rcrl
add
lock
imul
push
push
adc
test
jp
enter
pop
push
or
or
xor
fadds
mov
and
dec
data16
jmp
mov
addl
mov
or
fnstcw
cmp
gs
inc
testl
and
aam
in
test
cmp
sub
jg
dec
clc
mov
repnz
jmp
cmp
mov
xchg
in
jle
jmp
shrl
sub
ljmp
pop
sub
add
pushf
sbb
inc
or
hlt
push
push
push
inc
inc
jle
and
addr16
mov
push
push
jmp
inc
add
ja
adc
ret
lock
xorl
adc
and
jo
push
mov
loop
sub
mov
out
dec
fldcw
adc
shl
pop
push
xorb
rcll
or
mov
xchg
aaa
inc
not
push
add
dec
ret
push
rorb
movsb
or
stos
jae
cltd
lahf
inc
sbbb
mov
ds
cmp
mov
shrb
xchg
dec
jg
mov
add
pop
push
xchg
fists
aaa
xor
inc
and
mov
add
arpl
cmp
xchg
pusha
cmp
nopl
inc
push
jmp
dec
loop
mov
push
cs
jne
cmpl
cmpsb
pop
dec
shll
xchg
mov
xchg
rolb
lock
mov
das
out
jno
mov
add
popa
push
pop
push
push
push
mov
addr16
add
push
ljmp
add
xor
sub
sbb
cld
sbb
aas
and
fisttps
leave
cmp
push
and
ret
clc
mov
and
and
or
pop
jae
int3
imul
sbb
es
daa
lods
push
pop
push
adc
push
adc
adc
shlb
popf
jns
ret
inc
xchg
dec
mov
cmpsl
fadds
daa
iret
jae
and
lcall
std
push
les
shrl
stos
sbb
stc
out
push
push
out
jecxz
pop
mov
mov
sub
and
ffreep
pusha
jg
mov
arpl
dec
out
add
popa
pop
jp
pusha
js
or
outsb
seto
xchg
aad
js
ds
pop
insb
add
cwtl
lods
mov
push
addl
push
das
mov
add
dec
ss
sub
dec
pop
addb
scas
mov
mov
fcoml
and
pop
mov
mov
rcrl
fcoml
nop
jae
bound
negl
add
jmp
push
ljmp
shrl
adcl
out
sbb
xor
sbb
jmp
jecxz
lods
push
test
nop
push
in
mov
cmc
aas
dec
push
pop
jecxz
mov
push
clc
adc
mov
imul
loopne
mov
popf
icebp
cmpsb
add
or
test
enter
insb
pop
lahf
adc
mov
jle
push
cltd
sti
pop
jg
lcall
jae
add
pop
dec
or
sub
filds
push
mov
mov
lahf
jbe
gs
mov
enter
insb
lea
xor
inc
sbb
orl
cmpsb
add
mov
std
mov
loop
sub
or
das
jmp
leave
adc
inc
cltd
icebp
xchg
add
pop
mov
adc
cmp
daa
in
lret
fidivrs
inc
pusha
pop
pusha
pop
int3
les
iret
in
ja
jns
and
lock
pop
pop
rcrb
jno
imul
or
ja
xchg
sub
loopne
jbe
or
stos
adc
xchg
sarl
stc
jns
jecxz
push
out
jmp
loopne
sti
js
push
rcrl
inc
sbbl
pop
orb
fimuls
dec
and
push
adc
filds
inc
or
pop
jne
aad
testl
and
rolb
pop
sbb
lods
repz
or
lahf
mov
das
in
mov
lea
and
fdivl
popf
frndint
or
adc
dec
repnz
xchg
lret
pop
and
and
shrl
add
mov
mull
inc
and
clc
pusha
xor
or
lds
jmp
adc
push
xchg
fsub
push
pusha
add
jle
pop
jae
inc
sub
and
fucomp
mov
test
rcrb
inc
mov
cmp
ret
adc
pop
lods
and
jns
cld
cmp
fisttpll
sti
jne
inc
inc
push
jne
mov
cmc
jae
loope
adc
or
pop
push
mov
push
in
jnp
pusha
int
dec
lret
lea
out
psubusw
jle
es
jge
inc
push
test
xchg
stos
adc
push
and
xorb
jmp
int3
inc
push
testb
cmp
ret
sub
xchg
fs
andl
xchg
add
inc
mov
xlat
add
cmp
sbb
jns
or
paddusw
out
inc
out
adc
call
jne
jg
jg
jmp
aam
push
leave
push
jg
outsl
adcb
orb
mov
aaa
outsl
sub
jl
popf
pop
mov
rcrl
cmp
movl
push
fcomp
test
or
call
push
pop
cwtl
mov
stos
inc
sarl
cmp
leave
adc
or
mov
push
xchg
pop
inc
test
sub
pop
mov
inc
loope
std
inc
iret
cmpxchg
ljmp
or
fldl
pop
mov
mulb
addr16
mov
sbb
outsb
add
cmp
mov
add
pop
push
push
jb
mov
mov
mov
add
lret
jge
icebp
sub
push
fwait
sub
dec
pop
int
jo
cld
stos
loopne
iret
or
jmp
push
hlt
scas
out
add
enter
jb
dec
xor
push
sub
lods
mov
dec
stos
addr16
aam
test
dec
std
push
test
insb
mov
mov
into
mov
xor
add
cmp
dec
idivb
fcompl
add
jmp
adc
cmp
add
cmp
lret
add
jns
jl
mov
popa
dec
sub
sbb
or
adc
jmp
jecxz
jnp
push
sbb
ret
fwait
sub
xlat
jmp
adc
mov
outsb
and
dec
lahf
test
push
xchg
mov
pop
pusha
xchg
lret
mov
pop
push
xchg
mov
stos
sbb
jle
scas
pop
out
sbb
ret
popf
add
sub
repz
aam
jae
jbe
lods
add
test
mov
mov
push
adc
push
nop
push
cmpsl
lea
xchg
add
pop
pop
mov
adc
lds
js
sahf
rep
jl
pop
dec
and
aam
mov
sbb
mov
leave
and
ret
pop
adc
add
lods
adc
call
push
pop
adc
sub
mov
fists
adc
js
popf
nop
xchg
bound
mov
movsb
cmpsb
adc
add
lods
flds
push
mov
cmp
loop
xlat
aaa
mov
pop
pop
xchg
ror
dec
lea
int
jp
gs
sbb
mov
add
xor
pop
and
xchg
inc
jmp
mov
adc
outsb
xchg
sub
and
ret
push
mov
mov
or
push
loopne
mov
ret
and
test
pop
sar
notl
xchg
and
shr
es
xlat
mov
int3
xchg
add
jecxz
dec
or
or
mov
add
jns
sbb
or
outsl
pop
pop
nop
sbb
lock
sub
inc
lock
popa
fyl2xp1
pop
and
jg
or
pop
and
sub
adcb
or
pop
lock
sub
and
or
xor
push
mov
adc
and
lahf
add
pusha
push
idivl
out
pushf
popa
push
mov
adc
imulb
je
jmp
lock
jecxz
xchg
test
xchg
xor
std
test
into
or
pop
pop
mov
mov
sbb
test
xlat
and
sbb
pop
lods
push
add
xor
mov
cmp
sub
pop
push
das
into
push
pop
push
xor
inc
es
hlt
cmpb
mov
frstor
adc
insb
cmpsl
sub
or
lods
xlat
jmp
fsubs
lds
jge
push
xchg
testl
imulb
popf
mov
add
add
pusha
mov
popf
push
mov
jle
into
and
nop
pop
sub
mov
and
test
out
cwtl
cmpsl
cwtl
pop
ljmp
int
mov
out
push
dec
add
testl
cmp
in
adc
sub
fiaddl
call
cmc
out
sub
hlt
sti
and
mov
mov
push
arpl
mov
dec
shll
mov
or
dec
or
or
aad
dec
sbb
sbb
fdivs
jmp
arpl
sbb
push
sub
pop
add
addb
out
je
dec
adc
add
sbb
lret
jno
repnz
or
push
mov
jle
dec
add
imul
incb
rolb
push
sub
pop
xor
shl
or
sti
or
outsl
ret
jb
or
pop
inc
pop
test
jmp
inc
test
and
dec
test
lods
mov
add
aaa
test
xchg
sub
or
shl
and
fists
jmp
add
stos
sub
mov
or
xchg
push
insb
aas
xor
pop
shll
out
xchg
push
push
or
add
icebp
add
lahf
and
mov
shll
cld
scas
out
jb
call
jge
xchg
dec
stc
stos
arpl
into
daa
xchg
or
pop
inc
lret
imul
pop
dec
sub
jge
mov
lods
xor
lahf
or
gs
cwtl
xchg
push
test
cli
mov
fsubs
mov
sbb
dec
or
int
shll
inc
push
add
and
ljmp
fwait
lods
push
test
cmp
add
loop
and
cmp
jno
jmp
inc
push
jmp
test
das
in
jge
jmp
lds
iret
andl
test
int
xchg
inc
push
mov
pop
mov
cs
push
pop
cmp
pop
out
jecxz
ret
imul
xchg
adc
dec
stc
push
pop
xor
xor
dec
add
addps
sahf
or
sar
add
mov
or
rcll
jmp
movsl
in
shr
mov
iret
push
movsl
adc
stos
movsb
andl
add
out
pop
jmp
xchg
iret
outsb
jp
pop
sub
sub
adc
push
std
mov
xchg
mov
cmp
dec
leave
inc
or
jle
inc
push
mov
sbb
inc
pushf
jmp
sub
and
repz
pop
gs
add
mov
data16
mov
mov
mov
mov
or
pop
syscall
dec
inc
test
das
jnp
mov
add
stos
sbb
and
pop
mov
jnp
mov
xor
mov
and
pop
push
and
daa
or
sub
das
cli
cltd
xchg
clc
inc
rolb
jmp
push
sti
testl
push
xor
sbb
test
popf
das
pop
out
js
cmp
loopne
inc
or
push
das
mov
imul
dec
lret
popf
test
pop
mov
fldl
movsb
je
add
pop
lock
sbb
scas
or
pop
jno
inc
push
mov
pop
outsb
addr16
jne
or
dec
orb
cmp
push
jp
and
int
inc
jbe
push
les
cli
sub
cmp
jge
popa
idivb
mov
pushf
mov
imul
pop
mov
and
jbe
and
int
sahf
sub
in
std
mov
movsb
out
pop
xchg
push
ss
jmp
cmc
xchg
icebp
int3
xchg
pop
std
je
pop
cwtl
fcompl
daa
ss
fdivrl
jmp
data16
bound
inc
mov
mov
pop
mov
push
add
mov
gs
test
insb
addl
jl
jae
add
mov
movsb
mov
test
idivb
gs
test
rorb
push
mov
jle
push
sub
std
mov
add
loope
outsb
push
cmp
xchg
or
add
cmp
imul
sub
in
mov
add
lea
xchg
pop
lock
pop
outsb
iret
dec
clc
in
mov
and
or
add
rol
into
jg
and
cmp
mov
mov
imul
je
fmuls
testb
or
and
add
dec
rcrb
in
mov
into
aam
adc
sbb
mov
add
and
ja
mov
mov
cmp
into
scas
shl
jmp
lods
dec
inc
cmp
push
mov
mov
xor
les
or
fs
and
or
fdivs
xchg
dec
sarb
mov
ja
and
daa
adc
mov
pop
in
jecxz
pop
popa
in
sbb
stos
mov
int
xchg
cld
repz
push
mov
dec
std
mov
insb
xchg
sbb
xchg
push
iret
mov
sub
std
test
das
mov
sub
sub
out
add
push
push
add
push
mov
ret
in
and
mov
mov
dec
add
es
add
and
mov
sub
cmp
pop
data16
es
lods
or
shrl
dec
inc
mov
xchg
adc
ror
adc
aaa
fs
cld
jne
xchg
sbb
jg
jge
ficoms
lret
outsl
jnp
mov
jne
adc
sbbl
xor
push
cmp
jecxz
loop
xchg
in
xchg
mov
xchg
sti
add
inc
or
ja
outsl
cmc
dec
outsb
fdivs
pop
adc
sub
xchg
xchg
dec
push
or
shl
xlat
cmp
or
pop
not
cwtl
jbe
pop
jnp
das
add
jle
add
add
not
mov
jns
mov
cmpsl
and
ja
std
mov
test
mov
push
or
pop
pop
and
movsb
xchg
add
test
or
jmp
cmc
adc
or
pusha
bound
sbb
mov
or
fistpll
push
movsl
inc
pusha
cltd
sub
pop
xor
jl
or
push
mov
stos
mov
and
sahf
aaa
adc
shr
or
sbb
data16
nop
ficoml
lahf
fldenv
stos
add
jmp
fwait
or
mov
dec
das
adc
ljmp
popf
or
jl
pop
jmp
dec
add
fdivl
rol
pop
push
push
nop
push
dec
and
sbb
push
adc
lcall
mov
push
or
xor
jb
pop
incl
cs
insl
dec
inc
orb
add
aam
daa
popf
sub
inc
sub
rcr
cs
std
cwtl
sub
repnz
int
neg
xchg
sbb
add
add
jmp
push
or
ret
push
adc
iret
push
pop
ror
fldl
lret
adc
mov
jnp
push
test
rorl
repnz
lahf
vpsubsw
push
jne
add
fs
add
jno
out
sbb
mov
add
mov
enter
fisttpll
nop
cmp
mov
loopne
out
dec
push
adc
aam
or
pop
fucomi
adc
popf
pop
mul
pop
pop
adc
or
or
and
pop
xchg
nop
std
or
push
sti
sbbl
out
adc
and
movsl
scas
jnp
and
movsb
stos
adc
jnp
loopne
loop
mov
push
nop
ficoml
mov
lret
adc
dec
cmc
test
idiv
repz
jmp
dec
mov
jno
or
xlat
mov
mov
pop
test
movl
out
daa
inc
or
pop
mov
and
aam
push
add
mov
jmp
push
mov
pop
mov
call
sbb
inc
xchg
test
and
pop
testl
or
mov
or
jmp
mov
in
push
pop
xchg
iret
dec
bound
test
imul
loope
repz
negb
mov
pusha
dec
shrl
daa
xchg
sub
ljmp
and
jp
xorl
adc
popa
ljmp
adc
jmp
arpl
out
imul
je
outsb
mov
ds
popf
push
sbb
hlt
outsb
or
pop
imulb
jnp
leave
dec
xor
stos
xor
add
insl
je
and
jmp
movsl
dec
ss
imul
inc
xorb
rclb
pop
jmp
insl
out
cwtl
outsl
test
repz
jns
clc
adc
xor
dec
pop
adc
cli
enter
jl
cs
add
pop
out
sub
sub
jmp
push
ror
jne
and
jle
mov
sbb
ja
cmp
sub
xor
jo
sbb
dec
push
andb
pop
add
or
cmp
lret
jp
sub
xlat
mov
add
cmp
lock
pop
cmp
fldl
inc
cld
cmp
shl
sub
loopne
hlt
mov
rclb
mov
aam
je
push
push
insl
and
daa
dec
pop
jmp
dec
xor
enter
in
loope
xchg
aad
dec
rclb
popf
and
clc
es
test
int
mov
fmuls
adc
cmpsl
in
xor
gs
cmpb
decb
xchg
lfs
into
or
jno
jbe
pop
daa
inc
icebp
dec
mov
dec
mov
notb
sub
fsubs
jle
movsl
lds
or
lret
add
jno
mov
sub
cmc
mov
dec
mov
sub
push
mov
or
mov
xchg
inc
mov
mov
mov
cmpb
push
mov
add
push
mov
pop
not
push
pop
jbe
stos
cli
test
stos
leave
scas
pusha
call
adc
adc
sbb
loop
stos
xchg
pop
andb
or
out
jne
adc
fists
sub
or
jmp
push
mov
bound
popa
mov
shr
mov
xchg
adcb
jg
add
jmp
mov
and
xor
ucomiss
mov
add
add
xor
not
jecxz,pn
adc
and
dec
push
pop
sarl
jne
jecxz
add
bound
aas
rcll
roll
push
cmp
addl
shrl
stos
cmp
add
cmp
and
sub
jecxz
or
mull
aad
mov
nop
js
mov
dec
add
add
fsubs
add
testl
insl
and
or
outsl
ret
pop
test
aas
adc
mov
int
rclb
cltd
arpl
inc
pop
sbb
popa
push
pop
add
or
add
cmp
xor
icebp
jne
ret
xchg
mov
pop
int3
loop
mov
cmpsb
pusha
add
jecxz
add
in
push
mov
adc
cmp
ret
add
fptan
mov
sbb
mov
mov
test
sti
jecxz
push
mov
test
pushf
inc
aas
pop
in
loop
nop
arpl
jns
dec
push
jne
pop
cli
push
cli
inc
movsb
xchg
test
mov
gs
lds
fildl
lahf
lods
cmp
sbb
mov
nop
adc
dec
into
shll
xchg
pushf
and
or
ja
call
sub
loop
inc
arpl
bound
pop
mov
xchg
and
or
sbb
push
pop
cld
adc
xor
add
dec
pushf
cmp
or
inc
mov
push
mov
ljmp
das
dec
inc
aad
mov
jns
adc
stc
pop
dec
jmp
push
hlt
pop
ja
or
xor
es
sub
xor
aad
lock
sbb
insb
pop
pop
es
dec
or
cld
outsl
rcrl
bound
dec
cmpsb
add
jmp
rorl
lods
adc
stc
icebp
shl
sub
jmp
push
fisttps
in
adc
mov
xor
inc
adc
cmp
cmp
sub
xchg
or
xchg
and
push
pusha
es
sub
mov
push
cmpsb
mov
jge
sbb
or
mov
inc
aaa
in
xor
mov
les
mov
adc
stc
or
das
ret
inc
pop
stos
mov
push
or
fildll
pop
push
lods
xlat
adc
jno
inc
pop
vmovups
lds
repnz
cs
mov
inc
les
mov
sti
or
leave
in
rolb
xor
aas
arpl
fldcw
mov
pop
cli
iret
ds
xchg
subl
xchg
pop
pop
mov
inc
mov
push
movsl
xchg
aas
scas
int
inc
jb
and
clc
repz
lcall
push
ret
inc
ljmp
repz
mov
dec
aas
std
jmp
push
movsl
mov
sub
or
insl
add
out
jbe,pn
xor
cmc
add
add
popf
jmp
push
mov
repz
push
sahf
nop
daa
jmp
xchg
dec
mov
movl
sub
mov
add
adc
jmp
jno
loope
mov
cmp
mov
sahf
dec
call
loopne
jmp
lahf
test
test
xchg
jl
add
xchg
je
and
jno
popf
shll
clc
or
xor
pop
in
das
pop
cmpsl
cmp
cli
mov
sub
mov
pop
test
jl
adc
imul
jg
inc
xor
adc
pusha
dec
and
and
jnp
jbe
and
andb
test
or
shr
repnz
xor
xor
adc
loope
and
sub
dec
mov
push
and
pushf
pop
cmp
add
mov
adc
fisubrs
call
ds
ja
fistl
jmp
test
sahf
dec
sub
cmp
ljmp
cmp
mov
mov
call
scas
dec
inc
inc
inc
fstl
adc
dec
sbb
or
aad
lds
fwait
hlt
pop
pop
sub
stc
jne
pop
jo
into
pop
pop
jecxz
xchg
cld
push
hlt
out
mov
repz
inc
je
push
sbb
les
and
test
push
jnp
cmpsb
and
testb
jnp
dec
push
adc
mov
mov
jo
in
hlt
mov
std
mov
dec
leave
mov
loope
pop
mov
push
inc
xor
lcall
popa
mov
sub
int
mov
sbb
aas
cltd
fcmovne
out
push
jb
aad
push
add
lods
adc
pop
xor
hlt
daa
mov
test
cmpsl
ret
stos
lds
mov
aas
mov
insb
push
add
mov
xor
push
cmp
push
pop
sbb
aad
ret
add
add
and
stos
add
divl
cmp
jae
add
push
adc
jl
adc
scas
jmp
pop
dec
call
mov
inc
icebp
pcmpeqw
adc
cmp
or
loop
adc
stc
mov
push
mov
xorb
ja
mov
xchg
jg
sbb
or
test
divb
lahf
addl
je
jl
and
cmp
popf
bound
std
xor
icebp
pop
rcr
mov
sbb
push
data16
pop
jo
nop
xor
jnp
push
int3
adc
out
ljmp
inc
hlt
adc
jle
in
push
pop
cs
cmp
flds
cmp
sub
shl
scas
hlt
stos
pop
dec
push
rorl
and
and
js
pop
mov
repz
std
mov
not
push
dec
fisubrs
inc
cltd
icebp
loope
shrb
bound
xchg
icebp
add
in
push
mov
sub
fcoms
out
sub
pop
push
push
sub
je
imull
daa
scas
add
ficoml
lahf
pop
mov
cs
mov
or
pop
sub
sub
mov
mov
inc
int
mov
dec
mov
adc
imul
xchg
push
out
lret
or
add
sub
inc
out
jo
dec
fnstcw
repz
cmp
out
add
fs
dec
sub
aas
and
or
sub
jae
add
dec
jmp
shlb
das
stos
insb
xlat
pop
mov
add
inc
jecxz
cmp
xchg
ljmp
mov
jg
jns
or
aas
inc
adc
mov
js
in
cld
sub
add
jecxz
and
lret
popa
cmp
cs
in
outsl
jecxz
sub
bound
sub
mov
decl
push
int
or
insb
aad
in
jge
mov
pop
call
jbe
push
nop
int3
lret
daa
mov
jnp
push
cmp
or
adc
pop
fnstsw
inc
mov
scas
add
icebp
pop
jp
add
cwtl
adc
xor
push
mov
push
or
push
loopne
jle
cmp
aas
push
fcmovbe
add
js
in
dec
dec
jno
nop
mov
stos
push
mov
daa
pop
ja
lods
arpl
or
mov
loope
mov
jmp
xchg
cmp
sbb
adc
and
jle
ds
repnz
mov
jmp
icebp
std
inc
mov
inc
push
or
xchg
push
les
mov
gs
ljmp
mov
pop
pop
enter
daa
inc
xor
arpl
mov
lods
sub
jmp
dec
add
mov
es
stos
xor
push
mov
shl
sub
dec
in
push
push
mov
xor
pop
ficomps
icebp
pop
push
mov
adc
mov
int3
mov
popf
xchg
add
pop
pop
hlt
mov
push
or
pop
mov
test
lock
or
imul
xor
test
daa
mov
arpl
mov
inc
cmpsb
dec
inc
add
xchg
ficoms
jge
out
pop
add
outsl
jmp
stos
cmpsb
mov
mov
xor
xor
dec
imul
cli
dec
or
mov
neg
or
or
sahf
popa
adc
repnz
xor
xor
inc
lret
cmp
adc
std
popa
ds
and
in
into
mov
cli
add
loop
subb
aad
xor
pop
sub
pop
mov
xchg
lods
stos
add
sub
mov
loopne
subb
push
mov
push
or
and
in
iret
pop
inc
cld
add
pop
rcll
jecxz
sbb
add
js
adc
jb
test
pop
rdtsc
out
sbb
lods
repz
inc
push
sti
adc
je
jbe
xchg
pop
sbb
cli
add
jne
cld
inc
pop
outsb
cmp
iret
and
dec
pop
and
dec
daa
fldt
cld
mov
shl
pushf
xchg
adc
or
and
dec
add
push
fisubs
xchg
orl
or
aad
xchg
mov
andl
mov
pushw
inc
int3
xor
adc
mov
pop
xor
out
or
pop
jmp
lds
pop
pop
lcall
ds
xor
mov
negb
cmp
fnstenv
inc
xor
mov
pusha
addb
sub
sub
jmp
ja
arpl
pop
test
inc
sbb
aam
jmp
pop
add
mov
mov
mov
out
sub
adcb
cmp
out
call
push
pop
add
sbb
or
int3
dec
int3
fcmovne
aam
popf
mov
adc
dec
pop
in
jge
adc
js
in
cs
sahf
pushf
add
je
add
call
scas
test
and
lahf
pop
popa
js
mov
inc
fistps
out
pop
push
stos
mov
mov
shlb
xor
call
add
pop
push
out
shrl
outsl
das
test
punpckhdq
ret
mov
or
mov
pop
or
fsubr
aas
or
xchg
push
jno
add
add
in
mov
pop
cmc
cmpb
adc
hlt
jle
xchg
jp
inc
scas
or
adc
add
pop
sti
arpl
adc
xor
stc
sub
sbb
or
rorb
popf
pop
jns
sbb
adc
rorb
imul
out
nop
jnp
jp
add
jl
jmp
xor
cwtl
sbb
inc
push
sbb
sbb
pop
fs
ficomps
hlt
cmp
lahf
add
movsl
add
ret
mov
mov
popa
fistpl
test
adc
mov
or
add
das
mov
mov
xchg
add
pop
jl
xor
push
sub
mov
or
in
ret
mov
add
rorl
pop
cmp
mov
sbb
pop
movsl
cli
mov
push
setg
popa
inc
imul
and
inc
add
mov
rolb
pop
repnz
js
xchg
aam
rolb
sti
jmp
lods
lahf
mov
lods
xor
mov
loopne
jmp
or
hlt
dec
stos
in
mov
daa
nop
add
sub
sti
sbb
add
sub
or
adc
sub
adc
or
scas
aaa
movsb
mov
inc
sub
inc
jno
imul
popa
out
sbb
sub
pop
jmp
xchg
imul
jmp
inc
add
out
repnz
test
outsl
push
ret
add
and
mov
je
pop
leave
and
add
jle
cmp
cltd
test
gs
aaa
xlat
hlt
nop
inc
iret
je
pusha
test
cmp
inc
jle
out
adc
into
mov
mov
pop
xchg
dec
mov
push
scas
mov
inc
sub
aad
shll
lock
arpl
or
and
jo
jmp
sub
cwtl
cmp
int
push
je
add
call
shrb
test
sub
push
mov
movsb
jg
jne
push
xor
or
int
pop
push
pop
cld
add
inc
jb
shll
hlt
sub
inc
mov
or
sarb
repnz
sbb
jmp
push
fsub
insl
lahf
xchg
aas
jbe
inc
and
push
xchg
scas
pop
int3
and
adc
lret
or
cmc
inc
ficoms
fwait
xchg
sub
dec
inc
pop
xchg
xchg
lock
pop
test
enter
lock
pop
mov
xor
inc
and
push
arpl
add
mov
out
add
mov
call
or
mov
cmp
sub
xlat
mov
adc
outsl
jmp
out
imul
arpl
in
cmp
push
jg
cltd
or
pop
xlat
in
lahf
push
ret
and
cmp
in
or
jge
inc
and
add
int
cmp
fcoms
daa
jecxz
push
shlb
scas
mov
mov
out
xchg
add
xchg
sbbb
pop
pop
out
cmp
add
movsl
add
es
jns
test
pusha
fsub
mov
popa
pop
jg
mov
lret
inc
xchg
negl
or
inc
add
je
or
mov
scas
push
cld
dec
or
sub
popa
push
mov
in
inc
lods
leave
push
pop
into
push
mov
jge
ja
leave
cwtl
movsb
pop
in
lock
addl
pop
lcall
mov
imul
jbe
sub
push
cmp
pushf
mov
jns
les
pop
cmc
mov
jno
pop
pop
hlt
adc
outsb
in
adc
cmp
jmp
orb
pop
dec
jecxz
fdivs
cmp
pop
lea
aam
xlat
addr16
mov
jmp
sti
jp
arpl
mov
subl
inc
mov
rorl
add
nop
mov
lahf
cld
pop
inc
jae
stos
jno
jno
xchg
sbb
push
push
push
jmp
cmp
and
and
mov
sub
add
and
mov
inc
mov
fldl
fdivp
test
imul
and
icebp
adc
sub
push
nop
cld
aas
mov
push
mov
cmp
push
lret
aas
aaa
mov
fstps
mov
out
cmp
orb
push
mov
mov
inc
xor
or
jne
xor
adc
or
scas
add
into
push
scas
inc
dec
xlat
mov
neg
pop
add
inc
cltd
jmp
mov
test
loop
fcompl
mov
jmp
pop
addb
nop
imul
and
ret
rcrb
push
ja
fidivs
test
pop
xchg
push
jle
dec
cmpsb
jmp
jo
push
dec
pop
test
add
hlt
xchg
adc
jl
mov
jmp
out
daa
pop
lds
sub
xor
mov
dec
push
nop
or
jmp
pop
les
jg
mov
xor
mov
int
fnstsw
hlt
cmp
iret
jge
cmp
jmp
mov
mov
pop
sub
cld
or
call
xchg
neg
push
fwait
pop
mov
adc
mov
jle
pop
dec
pop
rcl
ss
out
or
push
jge
sub
mov
clc
outsl
dec
fadd
pop
imul
gs
cld
sub
subl
adc
enter
adc
pop
adc
add
push
flds
push
hlt
jnp
jne
jle
lods
add
xlat
xor
dec
movsb
xor
mov
and
mov
cmp
rcll
popf
pop
push
mov
cwtl
jp
xchg
mov
inc
fimull
mov
loope
add
subl
jmp
sub
pop
xchg
inc
leave
pop
push
les
pusha
pop
into
sbb
adc
pop
jmp
xchg
push
je
add
pop
pop
add
or
pop
fistpll
pop
notb
add
xchg
data16
daa
add
repz
js
add
es
adc
mov
testl
ficomps
add
or
and
pop
hlt
lods
cwtl
mov
cmp
pop
inc
test
rorb
xchg
repz
aad
pop
ja
in
mov
sbb
sub
adc
mov
in
lds
sti
mov
jno
out
add
push
jo
mov
aad
jge
fwait
and
jmp
in
and
pushf
movsb
mov
ja
jae
push
sbbb
and
and
outsl
pop
lcall
hlt
adc
mov
mov
push
mov
push
dec
jo
dec
cmc
pushf
dec
xchg
aad
loope
cld
mov
mov
das
add
pop
leave
pop
jne
and
inc
imul
in
int3
sbb
test
adc
adc
pop
mov
or
es
pop
lret
cltd
std
insb
js
movsl
xchg
pop
or
or
add
int
inc
xor
pop
pop
adc
jge
pop
or
and
push
add
jns
das
mov
push
push
pop
inc
cwtl
lahf
out
addb
jo
mov
bound
add
mov
jp
adc
xlat
pop
push
stos
je
or
pop
sbb
lds
nop
fdivrs
xor
jmp
inc
iret
or
mov
mov
adc
and
push
pop
testb
es
int3
push
and
cmpl
adc
imul
loop
jge
outsl
cmp
or
dec
and
cld
and
imul
clc
xorb
inc
xor
imul
and
sub
sub
clc
add
add
sbb
cld
gs
mov
and
dec
aas
outsl
push
clc
cmpsl
imul
aam
jae
mov
pop
insb
adc
jmp
test
jle
pop
push
pusha
repz
lock
jns
das
loop
xor
add
xlat
test
rolb
rcll
push
push
dec
into
sbb
shl
loopne
out
or
jge
pop
sbb
push
push
and
loope
lods
jmp
pop
sub
dec
add
aas
mov
sbb
sahf
sub
loope
jmp
sbb
sbb
sbb
jno
testl
push
or
cmpl
cld
inc
daa
cli
incb
cld
fldenv
icebp
xchg
inc
icebp
dec
add
decl
jno
jg
cs
lret
sti
popf
push
aas
clc
inc
mov
xor
push
mov
test
inc
lahf
dec
cs
ds
xchg
pop
or
jne
xor
sbb
fldcw
push
dec
ss
mov
arpl
scas
mov
and
outsl
xchg
ret
jbe
jmp
add
ljmp
aam
cmp
dec
pop
sbb
lods
insb
in
xor
add
sti
pop
out
inc
push
or
std
insb
int
arpl
std
dec
pop
out
push
mov
push
xor
lods
sbb
or
pop
push
jmp
inc
or
into
xchg
andb
or
in
imul
or
jg
outsl
and
add
xadd
js
cmp
adc
inc
test
fcoms
test
push
daa
or
test
mov
xlat
popf
in
or
in
adc
xor
inc
add
mov
roll
push
pop
and
push
push
dec
mov
cmpsb
sbbl
in
mov
jo
pop
push
push
add
jns
imul
clc
adc
test
pusha
mov
icebp
push
sahf
popf
mov
test
insb
out
lods
test
out
ja
mov
xchg
adc
jmp
das
in
inc
leave
lret
rolb
cmc
jns
inc
ss
or
and
test
cs
jns
mov
clc
cmc
stc
es
pop
icebp
push
imul
mov
push
xchg
cmp
and
stos
je
test
sub
push
jno
inc
jnp
or
in
adc
xor
xor
sub
jbe
jmp
lahf
mov
sbb
aaa
pop
or
pushf
or
jo
mov
push
inc
int
cmpsl
dec
lret
sbb
sbb
stc
ret
out
sbb
push
and
pop
mov
out
das
fdivrl
test
jno
fmull
add
pop
push
pop
xchg
imulb
rcl
xor
ds
dec
cmpl
les
mov
cmp
fldl
add
sbb
xchg
fldcw
ja
cli
fcomps
sub
in
xor
je
add
push
leave
test
or
sub
dec
jmp
push
pusha
lret
outsb
ss
mov
jns
inc
cli
mov
or
jnp
xchg
cmp
mov
xchg
add
mov
cmp
cmpps
stc
xor
iret
xor
lahf
sbb
jle
ret
stos
enter
movsb
cltd
loopne
adcl
xchg
fwait
or
cmp
lcall
sbb
sbb
bound
lret
cmpsl
pop
mov
movsb
mov
pop
inc
add
incb
sub
mov
pop
loopne
stos
inc
sub
mov
shlb
inc
mov
jnp
shr
push
or
add
and
xor
or
adcb
mov
mov
jmp
jle
push
pop
lock
inc
ret
ror
popa
rclb
lods
xchg
mov
in
mov
fbld
mov
mov
mov
mov
and
dec
pop
mov
pop
cmp
cmp
or
mov
pop
ljmp
lods
daa
fisttpl
pop
jg
lcall
cli
cmp
rcll
push
outsl
das
inc
pusha
push
inc
loope
inc
adc
add
sub
push
mov
or
popa
mov
dec
xor
popf
xchg
scas
mov
lret
fsubs
push
push
testb
xchg
xchg
jmp
lods
dec
ljmp
inc
or
sbb
jle
mov
adc
sahf
subl
xorb
jmp
pop
and
dec
aam
hlt
mov
push
sarb
ljmp
lea
lods
cmpsl
sub
cmp
enter
or
frstor
cltd
jo
test
rcll
pop
cwtl
and
mov
les
aam
test
lret
test
add
roll
push
push
push
std
insb
imul
jmp
pop
lret
cltd
fwait
xchg
fldcw
cmp
sub
orb
insl
dec
push
sbb
push
mov
jecxz
sub
filds
cmp
mov
es
add
and
fsubp
mov
pop
loop
cmc
enter
jp
andl
aad
shlb
sahf
insb
sbb
ja
pop
out
jmp
mov
pop
and
ret
mov
or
dec
add
or
dec
mov
pop
es
mov
push
in
xor
in
add
or
decl
xchg
inc
test
shrl
sbb
mov
fisttps
jne
pop
add
jp
je
mov
imul
xchg
bnd
or
sub
out
mov
dec
nop
fnstsw
jne
adc
clc
jmp
jmp
rorb
pop
add
call
std
ror
in
scas
sbbb
pop
popf
pop
std
dec
and
addl
repnz
jmp
jmp
enter
and
mov
lods
jne
loope
pop
jmp
dec
jmp
aas
mov
andl
out
push
pop
loop
mov
pop
sbb
out
sub
nop
and
inc
outsl
mov
dec
and
nop
lds
mov
out
xor
iret
cmpsb
lahf
sbb
mov
mov
pop
add
int3
cli
sbb
mov
daa
jge
jns
cltd
outsl
imul
and
int
scas
das
sub
repz
xchg
add
nop
hlt
repz
adc
fsubl
insb
xor
cmp
dec
mov
xchg
jl
arpl
add
daa
sbb
pop
jge
xor
inc
push
inc
pop
mov
inc
pop
push
scas
idivl
xchg
popfw
cld
orb
sub
mov
cmp
and
or
sub
sarb
rcll
inc
xlat
fsubr
mov
sbb
das
adc
ljmp
adc
in
xor
or
out
and
mov
inc
sub
pop
cmp
jb
lret
jge
sub
pop
mov
and
cli
push
test
and
sub
ret
cmpsb
orb
dec
jmp
xchg
dec
fisubl
mov
push
mov
and
push
pop
iret
cmp
jl
jecxz
dec
jmp
mov
push
std
lock
inc
mov
dec
cli
ret
leave
bound
cmpsl
repz
adc
sub
mov
jo
adc
outsl
mov
jp
mov
outsb
adc
in
and
out
pop
push
cld
and
hlt
mov
daa
or
insl
add
cmp
add
mov
push
sub
or
jg
add
pop
clc
cs
cmp
addr16
inc
daa
lea
xor
ljmp
sub
rolb
dec
shl
pop
push
lea
scas
inc
sub
clc
jle
dec
rorl
lahf
mov
push
jmp
add
inc
shll
int
dec
sub
popf
xorl
fcmovb
inc
jmp
xor
mov
int3
mov
popf
mov
rorb
xor
push
jp
pop
das
jl
mov
cmc
jno
enter
add
je
jmp
shr
add
sub
mov
lds
ror
and
ret
mov
push
and
rorb
movsl
fidivl
testb
scas
notb
fsub
ret
fiaddl
add
je
sub
dec
push
mov
push
mov
mov
xor
cwtl
ljmp
jbe
daa
js
neg
cmp
mov
push
movsl
leave
add
cmp
out
call
mov
dec
sub
push
add
adc
mov
or
jo
jmp
cmp
jno
in
jne
xchg
mov
dec
or
pop
je
sbbb
ja
icebp
paddw
or
mov
xchg
test
pop
or
pop
sub
dec
stos
rcll
js
mov
sub
sbbb
aad
data16
mov
jmp
pop
stc
pusha
mov
cmp
neg
jns
sub
out
jmp
shl
sbb
repz
mov
mov
mov
xchg
or
idivb
and
inc
pop
cli
xchg
push
push
xchg
pop
ljmp
aad
and
aam
add
xor
aam
dec
push
push
sbb
or
stc
and
sti
or
pop
mov
pop
push
lea
inc
mov
insl
inc
dec
loopne
xlat
xor
scas
lret
jmp
out
ret
or
js
or
ljmp
jmp
mov
and
jp
hlt
or
arpl
add
mov
shlb
dec
adc
push
nop
bound
xor
push
push
rol
or
cmp
dec
cmp
test
mov
addb
pop
mov
aas
out
inc
adc
adc
jge
adc
nop
dec
in
mov
dec
addr16
push
add
lods
jbe
push
idivb
dec
mov
xchg
mov
ret
pop
pop
pop
push
adc
adc
jp
sbb
or
sbb
add
aas
add
in
mov
adc
dec
insl
cmp
out
or
fwait
or
stos
jns
sti
les
sbbl
jns
shlb
inc
sub
out
inc
xor
or
repz
shll
jge
or
add
and
orb
adcb
cwtl
pop
or
push
xchg
shll
push
into
xor
or
or
pop
mov
xchg
add
sbb
dec
out
or
sbb
or
idiv
sbb
test
mov
add
in
mov
and
or
dec
or
fisttpl
loopne
pop
loop
jno
sbbb
dec
movsb
inc
or
or
or
or
push
or
jns
ss
add
or
push
sbb
ss
addb
mov
and
adc
adc
sbb
sbb
or
sbb
mov
add
rclb
add
mov
jns
mov
sub
or
adc
clc
xor
fldcw
pusha
add
add
add
push
psubsw
or
fcmovnbe
and
out
or
pop
sub
mov
cmpsl
push
mov
sbb
test
enter
xor
xchg
sbb
rclb
popa
push
subl
and
andb
in
mov
sbb
or
and
les
mov
adc
xor
and
pop
and
andb
sub
xchg
stc
aam
daa
xor
adc
pop
add
and
and
or
mov
push
imul
pop
or
test
push
inc
in
ds
jle,pn
and
dec
pusha
jne
call
out
xor
outsl
mov
cmp
aas
lret
inc
add
sbb
mov
add
add
leave
jne
mov
cmpsl
popl
add
jp
mov
xor
add
mov
xor
sub
add
sub
xchg
or
xorb
lahf
cmp
push
mov
jmp
je
xchg
mov
jmp
data16
jbe
or
xchg
pop
out
inc
decl
xlat
mov
sbb
mov
inc
popf
jne
fldenv
pop
xchg
push
cmp
mov
push
mov
jle
cmp
jbe
clc
push
mov
test
enter
ret
pop
outsb
jecxz
xchg
or
sub
xchg
xor
imul
mov
sub
jnp
dec
loopne
cmp
or
xchg
push
adc
out
shrl
and
lods
mov
cmpsb
jno
adc
jg
mov
test
aam
pop
pusha
mov
push
push
push
xor
mov
and
jg
inc
popf
icebp
mov
push
lods
es
loope
clc
outsb
data16
pop
and
jp
or
mov
push
fstps
cmpl
xchg
aaa
dec
dec
cmp
stos
out
sub
imul
push
jno
push
addr16
xor
jne
js
cmp
dec
mov
stc
ja
shlb
xchg
jmp
xchg
push
jo
loop
inc
dec
mov
adc
xchg
pop
xchg
mov
xor
shl
push
bound
xor
mov
in
xchg
pop
add
loop
insl
cmp
shr
xor
add
icebp
push
orb
bound
fsts
lea
ds
sub
cmc
in
sbbb
pop
jo
add
pop
push
mov
mov
xor
stos
pop
push
add
negl
jge
in
jne
rclb
popf
aam
pop
jne
mov
cwtl
xor
jecxz
fstps
push
sub
aas
in
xor
cmp
jmp
and
nop
or
mov
adc
insl
mov
lret
xchg
rclb
fisttpl
imulb
fcomp
dec
lods
mov
push
test
push
jmp
or
and
jmp
jbe
stos
add
cld
sbb
ljmp
test
or
adc
fs
and
fs
mov
add
repz
push
add
and
addb
popf
imul
mov
jl
mov
jle
jno
into
pop
pop
leave
jge
jno
or
mov
rolb
fsubr
pop
repnz
imulb
sbbb
inc
xor
push
addr16
mov
add
push
mov
and
call
mov
inc
inc
sbbb
outsl
jne
imul
pop
xor
cmp
push
fiaddl
popa
dec
mov
xchg
push
in
inc
ljmp
mov
mov
inc
add
loopne
sub
frstor
sbb
sub
jl
add
push
jnp
pop
sub
xchg
add
test
or
ljmp
ret
add
test
ds
cmp
subl
adc
fists
sahf
pop
subl
pop
add
xchg
in
js
push
out
ret
clc
daa
sarb
repnz
test
and
sbb
fdivrl
or
jnp
add
jge
subl
in
lcall
and
add
dec
jbe
xor
pop
jg
and
bound
sbb
sbb
mov
mov
frstpm(287
fistpll
fdivrl
movsb
xor
add
fistl
mov
and
xor
repz
push
mov
sub
xchg
pop
push
leave
jge
addb
mov
jmp
sti
xlat
sbb
cmpsl
popf
stos
sar
jmp
shr
cmp
lock
dec
jns
test
lods
rorl
pop
sub
xchg
dec
or
dec
sub
xorb
or
lret
setge
ljmp
loope
mov
cmp
adc
and
inc
push
stos
or
add
sub
hlt
jo
popf
push
sbb
mov
push
jmp
mov
cmp
stos
inc
inc
push
mov
ret
stc
je
fldenv
or
inc
sub
push
jmp
xor
cmp
es
pop
push
call
je
dec
jae
in
call
mov
pop
xchg
shll
push
mov
mov
imul
rclb
outsl
mov
inc
bound
mov
stc
lea
push
mov
dec
cmp
xchg
adc
loope
mov
lods
push
adc
sub
lcall
mov
insb
dec
mov
test
outsl
fistpll
pop
sarl
dec
data16
cmp
cmp
adcb
shll
hlt
mulb
add
call
imul
out
add
dec
bound
je
and
dec
pop
xchg
mov
mov
xchg
jbe
xor
ret
je
mov
cmp
into
adcb
push
push
sarl
push
addb
lcall
inc
cvtpi2ps
fnstcw
lea
inc
inc
int
xchg
mov
ja
je
pop
add
push
sub
pop
mov
cmp
push
jmp
xor
cmpsl
mov
add
add
jle
pushf
cmc
dec
or
lret
and
ja
rep
jne
sub
push
add
in
inc
inc
push
pop
scas
add
cwtl
add
cwtl
sbb
or
cld
jns
mov
and
ss
xor
roll
adc
pop
and
inc
ret
ds
mov
pop
and
int3
stc
cmp
clc
lcall
aaa
ss
add
pop
enter
push
adc
cmpsb
sbb
out
into
mov
pop
lods
cmp
push
jecxz
push
push
pop
in
mov
dec
sub
jp
or
mov
pop
insl
push
ret
nop
and
sbb
adc
jl
cld
push
mov
push
add
fcomps
mov
ja
fistpl
pushf
movsl
ret
sbb
orb
xchg
mov
test
push
push
and
or
xchg
pop
inc
mov
popa
popf
push
orb
clc
mov
pop
lahf
xchg
loope
jmp
loope
aas
mov
sahf
adc
rorl
dec
shl
add
add
add
mov
fstl
pop
roll
fstpl
mov
repnz
mov
addr16
test
push
xchg
adc
add
ret
pop
push
xor
stc
inc
shlb
sbb
push
add
mov
mov
jp
imul
sbb
pushf
roll
rcl
dec
adc
or
ja
scas
orb
pop
dec
mov
jmp
adc
das
xor
test
pop
cmp
inc
ret
mov
fisttps
icebp
mov
mov
jmp
xchg
push
or
insb
jecxz
incb
xor
cld
or
push
rolb
iret
push
mov
jmp
movsb
pop
fidivl
mov
bound
dec
sbbl
icebp
in
int
imul
inc
sbb
sub
add
jp
sub
sub
mov
inc
stc
add
and
pop
pop
mov
inc
das
dec
jnp
mov
adc
gs
fiaddl
repnz
dec
icebp
jmp
aas
and
shll
outsl
or
add
add
add
mov
push
xchg
add
loope
test
cmpsl
mov
gs
jno
jmp
je
stos
adc
je
xchg
icebp
cltd
add
test
add
push
sub
jb
dec
adc
add
xlat
fsubl
xor
add
mov
sub
mov
mov
jl
lret
add
jmp
mulb
out
lods
mov
cwtl
pop
popf
bound
xlat
mov
pop
nop
or
push
or
gs
mov
data16
add
orl
jmp
or
ds
jp
or
push
sbb
arpl
mov
adc
mov
or
dec
shlb
sbb
and
push
jl
pop
std
stc
je
sbb
js
push
cmp
cmp
fwait
jnp
dec
cmpsb
mov
fsubrp
inc
jmp
inc
xchg
sub
sbbb
test
fbld
daa
jge
pop
and
mov
fs
push
add
addb
push
jnp
cmpsb
add
repnz
movl
add
clc
push
pop
shr
push
sysenter
sub
js
ret
pop
mov
and
sub
out
out
xor
imul
lret
and
sbb
pop
push
orb
or
or
jmp
fmulp
cmp
xchg
shl
dec
mov
xor
mov
out
pop
mov
cmp
or
jle
mov
in
or
aaa
mov
call
push
add
mov
cld
inc
or
mov
les
into
mov
cli
sub
ljmp
xorb
pop
pop
loope
add
pop
xchg
stc
rol
jmp
lods
ffree
mov
inc
imul
sbb
out
sarb
pop
pop
add
xor
lret
add
ss
jle
out
pop
push
in
lds
leave
xor
dec
je
fs
sbb
mov
loope
imul
dec
add
or
inc
fildll
jge
test
lret
leave
movsl
sbb
lds
mov
incl
mov
xor
push
and
push
cmp
fsts
cmp
push
sbb
inc
dec
xchg
dec
jmp
out
test
mov
stos
lret
test
or
sub
mov
inc
das
mov
inc
push
enter
push
test
xor
mov
in
stos
aad
enter
stc
sti
jns
sub
sbb
sub
push
cltd
xchg
fs
das
push
xorb
ja
mov
add
mov
lahf
mov
sub
push
or
not
push
mov
and
xor
clc
std
cmp
xor
dec
and
dec
jnp
jg
fcompl
notb
mov
andb
cmp
push
or
jmp
and
add
xor
ja
aas
lods
adcb
push
mov
popf
popa
fistpl
jp
mov
wbinvd
cmp
and
lock
nop
int3
sub
cmpb
push
in
cmp
ds
sarl
mov
sbb
adc
add
or
or
xor
dec
jns
inc
mov
lret
es
lea
ja
outsl
pop
popa
inc
out
sub
push
add
add
ss
xor
sar
or
imul
cmc
outsl
xor
cmpsb
ds
mov
in
jecxz
sbb
inc
daa
pop
mov
jg
mov
stc
jnp
sub
in
sub
pop
push
push
mov
repnz
jmp
add
xchg
es
repz
sub
and
and
pop
shr
dec
or
je
call
xchg
jne
dec
dec
ljmp
push
je
cmp
ljmp
cmp
push
pushf
fists
inc
mov
pop
bound
popf
sbb
jg
daa
dec
push
sbb
mov
xchg
mov
outsl
popa
push
jmp
inc
daa
repnz
sub
pop
les
push
xor
inc
or
mov
dec
sub
cwtl
sbb
xchg
mov
and
push
gs
fisttpll
movlps
mov
xchg
add
adc
adc
and
or
xor
push
inc
jecxz
mov
aad
ret
push
popf
fsubl
sub
jle
add
jb
or
dec
mov
dec
push
sub
sub
pop
sbb
femms
sub
and
dec
shl
push
mov
rorl
mov
adc
roll
fsubrl
cltd
xchg
lods
shr
or
divb
cld
dec
or
mov
std
pushf
sbb
inc
mov
mov
push
cwtl
push
sub
xchg
cld
in
je
jl
or
cmp
mov
cmp
pop
inc
jge
jl
jb
xchg
pop
out
pop
fsubs
add
sub
mov
out
cmpsb
lock
sbb
xchg
orb
and
test
addr16
aad
ret
int3
add
adc
shrb
das
mov
daa
mov
push
pushf
jmp
les
add
inc
jge
add
mov
cmp
adc
lock
lahf
pop
pop
lahf
pop
jne
mov
inc
cmpsb
lea
pop
jl
push
test
xchg
cmp
jecxz
jmp
inc
jb
je
sub
pop
lret
shr
dec
pop
out
or
aaa
push
pop
sub
cmp
fsubr
dec
adc
rcrl
cwtl
cmp
mov
stc
faddl
cmp
or
je
add
test
push
cwtl
push
idiv
and
push
jmp
cwtl
mov
mov
jae
push
mov
iret
mov
pop
incl
mov
pop
stos
loop
mov
movsb
test
arpl
inc
aaa
jmp
sub
inc
add
jmp
add
jae
inc
pop
enter
or
push
jp
movsl
pop
or
insb
lret
inc
xor
jae
sti
jmp
icebp
cli
mov
lods
pop
inc
lods
adc
xor
and
jmp
cmc
pop
push
repnz
dec
popf
daa
pop
fmull
iret
imul
imul
cmp
add
adc
add
mov
mov
fdivs
dec
ret
rcll
ljmp
sbb
addr16
and
in
sbb
pop
jmp
mov
push
pop
xchg
pop
add
push
cmp
xchg
mov
inc
sub
pop
cld
sub
aam
jmp
push
sbb
inc
push
mov
sub
and
mov
ret
arpl
and
fcmovnbe
adc
dec
sti
inc
repz
sbb
repz
push
lret
pop
jo
and
pop
sub
dec
gs
mov
sbb
insb
adc
cmp
test
add
jmp
shrl
je
fwait
sahf
push
xchg
mov
xchg
push
jmp
inc
cmp
jle
xchg
jno
inc
push
pop
adc
xor
repnz
cmc
push
repz
pop
sbb
lcall
push
sarb
push
jne
xlat
inc
push
iret
mov
and
add
jp
cltd
ja
push
cltd
ja
inc
adc
pop
scas
imul
inc
push
repnz
add
sub
sbb
add
dec
xchg
shr
or
push
inc
shr
add
lock
sub
lds
mov
add
pop
je
aaa
cs
mov
cmp
push
in
adc
push
jmp
sub
imul
add
add
cwtl
mov
mov
jle
mov
mov
push
add
sbb
and
popf
jecxz
sarb
popa
movsl
scas
rcrb
jno
pop
and
pop
sti
test
shr
enter
out
test
push
adc
cs
sub
cmp
xor
jle
repnz
dec
dec
test
and
ja
leave
add
lds
pop
add
test
xchg
fbld
out
jmp
aam
inc
xchg
xchg
lret
mov
in
sub
dec
adc
lret
in
mov
daa
or
in
sbb
push
pop
xchg
fdivs
mov
push
pop
mov
push
rcrb
out
jmp
mov
icebp
cmc
arpl
xchg
mov
sub
xchg
fmuls
push
jmp
loop
cli
xor
pop
add
ja
inc
roll
adc
data16
mov
dec
mov
pop
or
jae
mov
adc
sub
mov
jmp
jmp
fistl
xor
sub
xchg
cs
mov
pusha
decb
mov
or
or
rclb
subb
mov
dec
sbb
cltd
les
lret
mov
jnp
and
nop
sti
add
push
mov
push
mov
in
fs
loop
jecxz
cmp
inc
les
lret
xor
sbb
ret
dec
dec
mov
aas
mov
push
mov
in
xor
sub
pop
dec
fcmovnb
cmp
push
scas
ds
and
daa
push
mov
dec
pop
decl
imul
dec
scas
add
push
mov
ja
or
jmp
and
add
or
push
mov
je
fistl
cwtl
aas
aaa
lret
arpl
cli
add
cmc
sub
movsb
stc
stos
rorb
pop
xor
jns
adc
arpl
jg
mov
pop
mov
movsl
clc
out
mov
add
mov
inc
icebp
dec
das
sub
clc
or
xchg
dec
ficoml
loop
xchg
test
adc
lds
or
mov
add
dec
ret
lcall
sub
add
pop
in
dec
dec
lods
int3
pushf
into
icebp
push
rolb
mov
test
in
xor
push
push
adc
sbb
fiadds
enter
lods
push
jmp
faddl
stc
hlt
cmp
xchg
adc
icebp
into
data16
mov
jmp
push
mov
cs
cmp
sub
dec
in
push
stc
mov
lea
mov
mov
jp
sar
xor
add
cmp
mov
rcr
ret
test
mov
and
xorb
and
jmp
push
jge
or
pop
push
gs
push
iret
mov
jecxz
jo
dec
movl
mov
cs
lahf
inc
cli
jae
pop
pop
sarb
sbbl
aam
repnz
js
mov
jecxz
jmp
divb
je
or
push
jmp
jmp
ja
jg
testb
xchg
push
lds
inc
adc
or
or
and
adc
jmp
lds
lret
popa
pushf
mov
pop
repz
out
out
jne
dec
and
mov
cwtl
pop
and
rcrl
cld
mov
or
rolb
test
mov
xchg
xor
aad
inc
sbb
add
xor
test
mov
push
adc
pop
gs
inc
andb
clc
jp
std
sarb
rolb
sub
add
repnz
xchg
popf
cltd
pop
rcl
dec
sub
popa
in
pop
bnd
cmpsb
sub
pop
push
std
pop
push
push
fldenv
add
out
add
xor
mov
pop
pusha
out
mov
and
idivb
and
iret
shlb
int
sbb
mov
fldenv
push
fsts
cmp
cmp
cmp
push
dec
push
ret
fdivrs
push
inc
mov
rorl
rolb
lret
jbe
push
inc
add
add
call
repnz
push
insb
pop
cmp
rolb
mov
in
lret
xor
pop
push
adcb
cmp
pop
add
pop
lahf
jne
ret
jo
xchg
arpl
ret
cmpsl
push
xchg
js
jmp
dec
das
loope
push
rorb
mov
jmp
lea
mov
lock
pop
sub
dec
jno
mov
fstl
lods
mov
dec
out
pop
adc
cli
add
mov
mov
add
add
sub
ja
in
mov
das
mov
sbbb
adc
or
or
xchg
and
imul
fcoml
aam
cmp
js
xchg
call
and
sub
and
push
mov
jns
jno
gs
mov
mov
mov
xchg
sti
dec
sbb
mov
shrl
add
inc
jnp
add
mov
imul
or
xor
pop
cmc
loopne
dec
adc
std
adc
repnz
xor
mov
loopne,pt
je
imul
movsl
and
clc
aad
pop
cmp
pop
imul
cmp
jmp
js
dec
xchg
int
pop
sbb
jmp
push
xchg
lock
or
push
clc
cmovg
mov
lods
adc
ljmp
shr
fucom
pushf
aaa
and
and
push
lds
push
add
fnstcw
or
rcrb
pmaxsw
dec
mov
jecxz
jl
daa
push
int3
add
and
mov
mov
test
imul
inc
mov
js
mov
xor
leave
outsb
or
push
push
mov
testb
shr
xor
mov
dec
pop
mov
jmp
push
mov
subb
sub
fnstsw
je
daa
pop
in
push
or
sub
xchg
pop
mov
aaa
inc
push
adc
or
clc
mov
popa
aad
imul
xchg
lret
pop
pop
inc
addb
push
push
adc
lret
loopne
test
out
cmp
add
push
inc
gs
out
adc
pop
sub
or
es
mov
push
add
mov
xchg
mov
ja
inc
test
mov
pushf
sbb
fnstsw
lods
sti
adc
sbb
lods
and
cmpsl
fcoml
lods
dec
and
push
outsl
and
adc
pop
aas
cmp
daa
out
aas
push
mov
js
movsb
inc
dec
movsl
in
sub
push
fwait
test
or
insl
xor
adc
mov
mov
das
xorb
das
adc
push
div
jl
mov
mov
push
push
mov
jns
sub
push
popa
mov
mov
dec
lock
mov
ja
neg
loope
lds
jmp
push
dec
imul
add
das
ret
add
dec
sarl
cld
dec
sarl
pop
add
mov
daa
fsubr
ret
jno
cmp
xor
lret
insl
cmpb
cmp
jmp
dec
pop
mov
mov
mov
xchg
arpl
aaa
push
jmp
push
push
mov
vmovups
sub
cld
pop
sbb
enter
add
or
push
and
stc
pop
cwtl
das
sti
push
pop
in
push
ss
push
or
adc
dec
xlat
cli
jno
jmp
sub
add
dec
es
cmp
inc
pushf
inc
mov
popf
jo
xor
ds
sub
icebp
cli
mov
movsb
add
xor
test
rclb
dec
orl
cwtl
inc
lret
cld
xchg
ficoml
ljmp
cmc
jns
out
xor
loopne
xor
inc
or
sub
push
nop
out
push
aam
add
pop
ljmp
inc
js
mov
repz
bound
and
lahf
and
pop
cltd
push
ja
clc
ja
mov
pop
mov
in
adc
fistpll
or
mov
and
in
movb
jge
mov
stc
out
cmp
lods
mov
cmp
jae
jge
xor
aad
push
es
pop
add
inc
ret
push
push
rcrb
sub
xchg
mov
xor
xor
cmpsb
push
imul
fstpt
pusha
jmp
mov
fsubrl
pop
inc
adc
out
rorl
adc
sarb
or
push
daa
clc
daa
sub
sub
aas
es
jbe
fs
jp
push
lret
call
inc
cmp
inc
pop
sub
iret
xor
pop
loopne
mov
sarb
stc
or
mov
ja
cmp
cs
cmp
mov
add
add
cmc
in
pusha
data16
ja
fldt
xchg
rol
and
dec
pushf
sub
das
or
or
mov
xlat
mov
add
fmuls
cmc
loopne
or
jecxz
stc
jb
cmp
int3
jp
out
push
adc
adc
or
jmp
sahf
inc
cmc
inc
cld
adcl
faddl
adc
adc
inc
aas
xor
pop
xor
cwtl
jo
xor
or
inc
xorb
pop
and
subl
dec
dec
stos
inc
in
xchg
pop
ret
mov
pusha
adc
dec
or
jl
mov
add
mov
mov
xchg
and
and
arpl
sbb
jmp
mov
jae
ljmp
in
nop
sbb
add
cmp
jmp
dec
ljmp
push
popf
dec
test
add
xor
and
sbb
cmp
sub
add
nop
mov
lret
xor
pushf
es
mov
push
jle
popa
jmp
adc
inc
addl
test
sbb
rcrb
push
adc
mov
in
push
stos
pop
cmpb
aaa
popf
sbb
rcl
mov
sbbb
push
mov
inc
enter
loop
mov
shr
inc
pop
jle
add
out
fldl
adc
xchg
stos
addr16
mov
push
mov
rcrb
dec
push
add
pop
inc
jmp
in
pop
out
or
or
inc
push
inc
ja
rol
or
mov
cmp
adc
pop
mov
pop
nopl
ret
push
mov
cmc
pop
push
xor
test
push
adc
movsb
mov
fsubrl
inc
dec
add
cmp
or
mov
cmpl
xor
mov
out
cmp
popa
movsb
pop
inc
dec
adc
popa
outsb
inc
push
and
popf
out
lock
inc
rorl
push
cltd
add
push
rep
jmp
adc
dec
mov
adc
or
je
es
pop
pop
push
push
int
xor
push
fucomp
lods
fnsave
xor
ja
ds
jmp
adc
shrb
in
push
rcrb
leave
shll
mov
cmp
sub
out
push
dec
dec
aam
lods
cmc
xor
das
mov
cmp
add
aam
insb
aaa
notl
nop
jno
push
sbb
loop
jg
pop
and
pop
cld
bound
adc
mov
sar
mov
dec
mov
adc
sbb
fs
mov
fadds
inc
movsl
not
hlt
lret
jge
and
or
enter
jmp
shlb
push
sbb
pop
ret
and
cmp
cmp
loopne
les
pop
repnz
mov
sbb
adc
out
ja
mov
mov
mov
pop
and
lds
jl
mov
xlat
push
test
jmp
mov
cmp
dec
add
fcomps
dec
test
adc
fs
push
insb
sarb
daa
add
out
loopne
sub
dec
mull
ficompl
sub
add
mov
or
aam
mov
xchg
bound
dec
pop
xor
pop
mov
mov
pusha
sarl
adc
or
negl
dec
sub
sub
mov
hlt
add
std
jmp
stos
in
scas
sub
test
lret
fcmovb
mov
rorb
fs
sbbb
iret
push
mov
cwtl
loop
add
mov
push
mov
inc
scas
mov
out
cmovns
and
neg
xor
lds
and
ljmp
jns
add
imul
xor
pushf
int3
pusha
pop
aam
or
pop
xchg
adc
es
mov
push
int3
mov
mov
daa
add
xchg
adc
stc
xor
add
subl
sub
test
push
push
sbb
cmp
cmp
and
popf
fwait
out
popf
xchg
and
add
xchg
add
rorl
or
pop
out
sub
xor
adc
loop
shll
or
pop
mov
add
jno
repnz
out
jmp
dec
cmc
imul
jnp
pop
lods
outsl
add
push
or
sub
adc
mov
bound
js
loope
stos
int3
mul
mov
add
cmp
fs
shrd
add
mov
ret
and
shl
popa
insl
std
xor
jmp
pop
je
inc
int3
cld
push
repnz
loope
das
mov
jmp
out
andb
add
xchg
lods
jle
sar
push
jle
pop
sub
lahf
out
xchg
test
or
sub
mov
rcrb
cmp
sbb
sub
mov
xchg
pop
int3
iret
imul
aad
jne
pop
in
dec
mov
aas
loopne
aaa
inc
or
cmpsl
dec
mov
mov
gs
ljmp
dec
add
sub
scas
popf
push
inc
imul
xor
mov
jmp
xchg
cmpb
outsl
xlat
addb
rep
es
push
js
add
jbe
sbb
sub
fucompp
jmp
cltd
jge
mov
outsl
mov
pop
pop
push
push
in
andl
mov
std
jns
pop
push
pop
sub
xchg
xor
mov
pop
sti
imul
push
push
jl
popf
add
ficoms
mov
ljmp
cmc
sbb
insl
xchg
pop
je
add
xchg
out
add
or
mov
bnd
jmp
movsl
inc
fmulp
or
inc
push
daa
or
jmp
mov
ret
insl
arpl
sti
jns
aad
jbe
cmp
ds
xchg
jnp
pop
das
fldenv
hlt
cmp
jmp
xchg
sbb
ljmp
inc
rolb
mov
pop
add
or
aaa
sbb
mov
xor
xor
imul
sub
sti
aad
scas
and
test
pop
xor
dec
jne
push
pop
sub
sbb
push
jmp
push
sbb
rolb
out
sub
in
add
sbb
incb
icebp
xlat
imul
ret
or
add
ss
or
adc
add
fimuls
push
fwait
pop
push
out
adc
jmp
aas
adc
mov
dec
loope
mov
jge
loopne
pop
out
mov
pop
inc
add
popa
xchg
and
inc
ret
sbb
test
adc
data16
loopne
push
jle
cmpsl
mov
push
lahf
incb
jmp
pop
mov
inc
or
sub
mov
adc
inc
mov
adc
adc
mov
aam
jl
sbb
xlat
xchg
rcrl
ds
sbb
pushf
andb
sub
shl
add
push
jmp
add
push
sahf
adc
roll
mov
dec
or
sub
sbb
cmc
and
je
cmp
in
sbb
sub
mov
adc
popl
xor
into
es
add
cmp
popa
daa
frstor
cwtl
sbb
lret
repz
aad
pop
dec
clc
xchg
cmp
das
xor
sbb
or
in
rol
dec
pop
push
aaa
in
mov
dec
sbbl
mov
call
cmp
cmp
pusha
sbb
ror
jle,pn
cmp
loope
add
jge
push
addr16
dec
inc
add
jnp
jbe
out
xchg
mov
push
das
xor
adc
or
popf
test
push
roll
or
cwtl
sub
pop
enter
pop
xchg
push
pop
jno
and
push
loopne
ror
pop
cltd
or
push
add
shll
outsb
pop
daa
push
movsb
faddl
add
jns
shll
jp
jnp
xor
popf
inc
push
push
and
or
loop
xchg
shll
or
bound
aam
cmp
rolb
aam
outsl
fstpl
shll
ret
data16
in
int3
mov
mov
stos
or
aad
jmp
fsubrs
dec
jo
iret
mov
sub
add
add
shlb
pop
jae
sub
add
pop
mov
inc
movsb
repnz
cmc
scas
test
xchg
jecxz
adc
decl
mov
or
iret
pop
subb
pop
or
cmp
cwtl
and
scas
clc
ret
hlt
ljmp
mov
jg
fmull
xchg
or
adc
dec
mov
jle
sahf
mov
push
test
and
pop
dec
loop
rcll
xchg
daa
leave
add
or
loope
loopne
mov
mov
and
addps
out
pop
fs
inc
cwtl
or
lahf
xchg
dec
insl
or
add
fisttpll
decl
iret
jne
sub
mov
in
and
ja
loope
outsb
sahf
push
lret
test
mov
pop
sub
push
pop
inc
push
mov
sub
jnp
nop
rcrl
addb
cmp
jbe
loop
cmp
lds
stos
mov
loop
xchg
lahf
ljmp
sar
pop
add
add
repnz
or
xchg
jl
cld
adcb
out
cwtl
add
jge
daa
loope
push
cmpsl
pop
bound
cmp
ret
inc
rolb
xchg
jg
daa
daa
popa
std
add
or
dec
add
mov
xchg
add
shl
add
xchg
fsub
push
adc
outsb
xchg
je
mov
and
icebp
or
and
mov
shr
lea
mov
aaa
addb
sub
jo
lcall
pop
std
jge
jns
adc
adc
jmp
mov
scas
push
xchg
sbb
xchg
insl
add
js
xchg
scas
dec
jmp
lock
aas
andb
and
bnd
imul
inc
mov
sbb
jno
xor
jle
xor
fwait
adc
or
js
dec
inc
daa
out
push
or
add
shll
cmp
xchg
xlat
jbe
add
pop
std
pop
and
clc
scas
enter
and
push
call
jle
jno
mov
mov
fisttpll
sti
pop
sbb
rcll
loop
or
in
or
mov
sbb
dec
xchg
inc
in
xchg
push
inc
push
test
mov
dec
gs
xchg
lds
add
sbbb
jo
fwait
add
ja
jbe
inc
adc
aaa
jle
inc
push
jbe
push
sub
pop
dec
or
rorb
adc
jb
or
xchg
pusha
jbe
add
rcrb
mov
cli
fmull
add
mov
add
enter
inc
adc
sub
jmp
push
pusha
mov
aas
insl
jmp
cmp
push
inc
push
sub
cmp
aaa
cmp
in
mov
mov
inc
es
pop
xor
inc
aas
xchg
cmc
orb
gs
mov
pop
or
xor
mov
rcll
pop
add
pop
push
lcall
orl
pop
in
mov
sbb
in
leave
xor
pop
mov
mov
push
or
popf
or
lds
xlat
cmp
xor
movb
test
mov
jo
loopne
pop
js
inc
je
or
mov
insl
mov
pop
ljmp
jo
add
inc
jge
les
mov
fstl
fldcw
fidivrs
push
mov
mov
pop
loope
dec
and
orb
mov
adc
arpl
adc
or
frstor
sub
or
or
push
cmp
ficoms
pop
pop
shrl
xchg
mov
imul
mov
and
call
movl
ss
cmp
je
xor
or
out
gs
ret
in
int
cmp
shlb
sbb
mov
js
sub
push
push
popa
cmpl
decb
cmpsb
cmovs
pop
lods
adc
fcomps
lret
xor
push
cmp
add
add
scas
repz
sub
je
dec
lock
add
mov
mov
jg
pop
inc
scas
rcll
mov
stc
jnp
xor
sub
cmp
sub
dec
dec
dec
push
cmp
xor
cld
cmc
ljmp
mov
lock
mov
in
movsb
push
das
sbb
inc
iret
and
js
adc
imul
adc
or
test
pop
cld
push
hlt
out
mov
sub
icebp
push
jmp
ret
dec
cmpb
adc
jo,pt
fbld
push
pop
cmpsb
dec
nop
pop
and
lret
insb
and
cwtl
loopne
mov
loop
sub
push
dec
or
add
pop
clc
sbb
mov
xchg
xor
rorb
mov
jno
pop
cli
sub
sbb
mov
dec
inc
dec
out
popf
stc
lret
test
cmp
xor
gs
movaps
add
shlb
neg
add
fcmovb
ljmp
dec
jne
jmp
cltd
push
sub
sbb
lds
mov
jle
jns
xchg
push
mov
adc
lock
jae
adc
pusha
out
push
xor
pop
inc
jl
sti
inc
mov
xchg
popf
push
push
data16
lds
ljmp
jg
scas
jae
or
stc
push
jbe
cmpsl
std
pop
add
jne
pop
add
jmp
dec
sbb
nop
pop
adc
jno
xlat
mov
gs
xchg
jae
mov
imul
pop
push
pop
push
push
inc
jmp
lock
jmp
insl
jl
dec
fiadds
fisttps
and
test
jnp
mov
idiv
lret
jns
or
jne
clc
sti
gs
and
pop
in
adc
xor
or
adc
fdivrs
in
xchg
sub
sbb
xor
add
xor
out
sbb
push
loopne
xor
pop
pop
jmp
jge
sub
ficomps
xor
cmc
inc
sub
push
mov
mov
jns
sub
loope
pop
xchg
mov
fcoms
pop
jmp
mov
add
shll
ds
ret
fstpl
and
pop
mov
ret
adc
add
mov
fsin
lds
push
mov
stos
imul
jmp
adc
cld
push
xchg
mov
roll
lods
sbb
mov
xor
pop
sbb
shl
jmp
sbb
arpl
jbe
xchg
sarb
mov
add
sub
push
rcr
or
jmp
pop
and
cmpsb
xlat
add
cli
loopne
lds
sub
mov
push
cmp
into
push
mov
and
sub
jo
jmp
shl
paddw
cmp
jmp
gs
add
stc
push
cld
push
aaa
jne
scas
inc
lods
inc
mov
add
popf
sahf
inc
mov
or
movsl
cmpsl
aam
test
out
or
xchg
loop
jbe
cli
sarb
or
js
incl
subl
jle
popa
das
jle
gs
xchg
mov
sbb
jl
dec
xor
mov
push
cld
add
movsb
cwtl
imul
jbe
push
fwait
or
add
and
mov
scas
or
or
pop
inc
jnp
inc
jo
loope,pt
outsl
cs
adc
xor
mov
xor
imul
das
and
pusha
sbb
or
out
orb
dec
pop
in
stc
xchg
mov
push
repz
adc
ret
mov
fmul
and
pop
mov
sub
inc
inc
mov
sbb
stos
add
adc
xchg
fs
mov
dec
push
in
and
jne
and
pop
gs
fs
insl
or
jae
mov
sbb
dec
cwtl
int
pop
add
or
or
les
fsubl
cld
inc
push
lds
frstor
xorb
push
sub
add
rcrb
push
sbb
sbb
push
jmp
or
loope
aaa
or
jo
mov
jbe
mov
inc
mov
arpl
ret
daa
rcl
pop
es
jo
xor
sub
add
call
and
dec
lahf
cli
lret
add
inc
shrb
sbb
daa
push
repz
pop
adc
push
dec
lock
push
pop
jg
jb
cmpb
mov
sub
cwtl
or
hlt
inc
push
clc
xor
rorl
or
jmp
and
ljmp
mov
imul
pop
test
dec
stos
int3
adc
inc
mov
in
testb
xor
or
mov
or
sbb
mov
orb
movl
sbb
mov
jg
es
and
pop
lock
arpl
lret
cmpsb
push
push
jl
add
ja
mov
push
or
jmp
into
push
orb
push
shr
xor
out
repnz
inc
mov
adc
popf
push
adc
mov
adc
jnp
mov
daa
icebp
lret
mov
xchg
icebp
xor
push
pop
adc
sbb
icebp
cmpsl
and
arpl
inc
mov
pop
add
je
std
andb
cwtl
adc
add
adc
sbb
xchg
cmp
fsubr
cmp
or
xchg
mov
push
add
sub
leave
sbb
lret
sub
mov
js
xor
dec
test
insb
adc
push
pop
inc
add
subb
dec
xchg
inc
sub
sbb
repnz
mov
retw
mov
and
gs
loop
or
rol
not
mov
and
push
add
stos
fcoms
push
or
pop
push
mov
loop
decb
or
aam
testb
outsb
lret
jns
and
or
icebp
sub
xchg
or
loop
sar
hlt
hlt
pop
or
push
lds
pusha
mov
daa
shll
pop
mov
dec
jne
loop
inc
cmp
cvtpi2ps
pusha
outsb
push
pop
xchg
lds
push
pop
jmp
dec
dec
inc
dec
lods
jo
xor
sub
popl
adc
xchg
lock
test
xchg
and
es
add
shlb
mov
repz
fisttpl
sbb
cmp
sub
fcoml
fimuls
sub
dec
lahf
inc
mov
aad
loop
pop
sub
mov
stos
mov
add
out
jno
dec
test
pop
ljmp
xchg
sub
mov
sub
sub
jmp
push
faddl
dec
xor
adc
enter
push
xor
xchg
or
pop
test
enter
mov
xchg
loopne
sbb
mov
mov
pop
les
insb
jns
dec
adc
sbb
mov
les
sbb
into
int
stc
cmc
adc
cmp
ja
nop
xchg
mov
test
mov
sahf
pop
push
mov
adc
or
jmp
mov
xchg
fimuls
pusha
test
bound
test
scas
pop
imulb
add
sti
sub
inc
dec
jg
push
push
mov
test
jecxz
dec
mov
imul
dec
mov
arpl
aam
arpl
jge
lods
mov
mov
enter
sahf
fisubrs
cmp
mov
je
add
stos
cmp
push
jne
out
test
pop
mov
push
movsb
in
gs
outsl
lahf
mov
shlb
mov
mov
incb
addr16
repnz
in
in
jns
or
cmp
decl
pop
insl
inc
dec
out
mov
pop
imul
shll
pusha
mov
aad
and
add
mov
sti
in
insb
lea
pop
cmp
cmc
mov
aas
sbbb
ljmp
cmp
mov
xor
repz
adc
or
pop
jbe
xchg
jecxz
sbb
mov
mov
xor
push
or
in
sarb
jb
rcr
and
add
pop
ret
lahf
push
pop
bound
fldlg2
mov
aam
add
push
mov
fdivs
andb
clc
inc
popf
jmp
lret
mov
mov
lods
sub
sub
and
and
loopne
pop
cmp
jecxz
movsl
dec
pusha
icebp
add
mov
jo
nop
test
dec
filds
or
xor
jl
add
orb
hlt
testl
imul
ror
or
jp
jmp
lods
mov
dec
insl
sti
lahf
leave
xor
pop
pop
je
lds
mov
hlt
mov
and
push
loopne
dec
inc
dec
pop
in
add
xor
push
push
dec
dec
dec
addl
push
pop
pop
pop
add
pop
xor
data16
sub
sub
pop
add
mov
in
sub
sub
fldenv
and
jnp
cmpsl
pusha
test
js
scas
add
je
fcoms
push
mov
jae
fwait
xchg
test
xor
shll
and
and
pop
sbb
xor
cwtl
ret
aaa
ret
adc
sub
cmp
xchg
and
add
dec
ss
push
mov
je
adc
mov
mov
cs
inc
outsb
pop
mov
addb
xor
dec
loop
adc
jmp
push
mov
or
pop
jecxz
mov
jmp
push
mov
in
stos
adc
ud1
loope
ss
inc
add
leave
mov
test
push
ret
rcll
mov
mov
pusha
mov
or
push
pop
mov
int
in
subb
dec
jb
sti
cmp
into
pause
mov
scas
push
je
incb
test
cmp
pop
add
je
or
movzwl
add
sbb
jns
adc
or
and
fisubl
and
cwtl
xchg
inc
test
cmp
stos
mov
fdivl
mov
add
push
mov
add
jp
jmp
push
push
mov
addr16
mov
inc
arpl
scas
inc
int3
mov
xor
pop
mov
xchg
pop
mov
insb
mov
jbe
pop
lcall
inc
or
or
andb
mov
test
add
push
mov
shll
xor
xchg
inc
push
add
imul
sub
pop
pop
test
insl
inc
ret
lret
loop
xchg
mov
adc
aam
push
test
jmp
ret
xor
popf
inc
mov
mov
call
cli
addr16
fmull
mov
mov
sub
mov
push
ljmp
and
sub
shl
add
lret
push
int3
test
cmp
pop
jp
dec
inc
jae
jmp
gs
add
popa
cmp
ret
mov
cld
jge
testl
shl
jmp
mov
xchg
add
stc
dec
cld
pop
sub
push
das
add
pop
inc
inc
adc
pop
mov
ret
imul
mov
pop
fiaddl
repnz
cmp
cmc
mov
sub
mull
leave
mov
cmp
mov
mov
jae
ljmp
dec
mov
test
arpl
xor
xor
xor
or
add
scas
and
or
sti
adc
lods
jp
cmp
jg
dec
in
scas
repz
insb
dec
cmp
pop
cmp
hlt
jmp
jl
mov
dec
out
enter
jmp
pusha
insb
int3
and
xchg
or
push
sub
pop
push
ss
dec
push
cs
loopne
inc
inc
das
aaa
and
mov
addl
push
sarb
stc
loope
add
jb
pushf
push
push
popf
stc
inc
jmp
je
jp
in
fdivs
pop
xchg
cmp
ja
xor
imul
pop
test
shlb
cltd
jb
add
imull
sub
push
stos
mov
mov
dec
sub
and
sarl
mov
cwtl
dec
mov
int
mov
mov
andnps
test
sbb
icebp
loop
add
loopne
repz
jmp
pop
lcall
push
sahf
jno
push
nop
xchg
lock
mov
incb
jge
sbb
rclb
inc
pop
dec
mov
in
dec
mov
adc
sub
divb
fcomps
rolb
je
or
or
in
adc
dec
flds
sub
and
aaa
mov
clc
lods
cmpsl
rorb
faddl
add
and
out
and
iret
mov
sub
bound
push
pop
sub
pop
jbe
das
jmp
sahf
aam
lock
push
sub
pop
mov
mov
and
mov
pop
xor
repnz
push
push
outsl
add
adc
or
fadds
out
mov
fcomp
pop
inc
pop
adc
jmp
jle
lret
loopne
pop
shrb
or
lcall
or
inc
cs
inc
push
iret
rorb
push
rorl
xchg
push
xlat
pop
leave
popf
pop
xchg
outsl
mov
sbb
mov
sub
inc
or
and
adc
cmp
pusha
mov
jge
push
mov
cmp
inc
inc
dec
movsl
lods
das
ljmp
mov
xchg
jno
inc
or
movsl
sbb
shlb
dec
xorl
imul
push
push
mov
push
adc
sbb
push
sbb
pop
xor
inc
sbb
and
sub
sbb
roll
adc
fwait
sar
xor
jbe
and
cmpsb
adc
add
in
mov
xor
inc
and
sub
mov
push
jbe
mov
or
inc
negb
pop
test
dec
hlt
repnz
aad
pop
xchg
sbb
scas
sub
pop
in
in
fadds
mov
cmpb
clc
insb
dec
pop
push
loop
sub
orb
cli
pop
dec
push
repnz
adc
ljmp
xchg
push
and
push
mov
adc
jle
mov
mov
lock
pusha
imul
sbbl
mov
sahf
imul
mov
add
rclb
mov
xlat
mov
push
push
fidivrs
bound
mov
lret
cmc
add
dec
test
push
and
adc
pop
mov
pop
adc
pop
movsl
aam
or
jmp
sub
xor
or
add
pusha
js
push
jbe
xor
mov
lds
mov
dec
push
cmp
enter
in
and
jb
add
les
mov
fcoms
sub
and
push
jns
addb
loop
push
and
pop
xchg
pop
sti
int3
arpl
push
loop
xor
or
inc
outsb
inc
sub
rclb
jmp
leave
in
fwait
add
scas
and
shl
scas
outsl
repz
int
mov
cwtl
dec
or
sub
xchg
mov
jle
and
shl
les
adc
sub
call
mov
dec
adc
and
sbb
scas
push
push
and
jmp
pop
inc
adc
mov
and
mov
mov
in
icebp
bound
add
imul
mov
push
mov
push
push
pushf
pop
mov
or
ret
push
mov
adcl
and
mov
aad
mov
mov
pop
lods
sbbl
push
pop
negl
imul
lret
fcoml
arpl
sub
cmp
rolb
jg
xor
jp
and
movsb
inc
xor
rdtsc
lea
movl
add
sbb
cmp
idiv
add
xchg
add
add
lea
push
rcrl
adc
in
cwtl
sub
lret
repz
dec
stos
and
loopne
xchg
fs
xor
and
pop
xor
add
fisubl
ja
jbe
xchg
add
dec
mov
inc
mov
test
inc
pop
pop
mov
add
mov
inc
repz
pop
pop
and
lahf
pop
gs
mov
jmp
jo
std
and
xor
ret
cmc
outsl
jge
jg
jmp
addl
popa
or
add
lock
push
daa
pop
push
inc
add
sbb
mov
scas
in
test
scas
mov
push
mov
push
nop
adc
jl
push
adc
sub
iret
leave
fbld
add
sub
push
je
daa
in
jl
out
gs
inc
pop
mov
mov
es
pop
mov
repnz
pop
pop
push
jb,pn
add
sarb
pop
cwtl
jl
das
es
icebp
fsubr
push
cmp
sahf
jns
or
xor
lods
test
or
stos
lret
je
push
pop
jg
inc
inc
out
not
mov
pop
ljmp
ret
push
push
ljmp
mov
mov
adc
jmp
test
stos
add
aad
mov
je
lock
repz
dec
add
stos
insl
mov
stc
out
add
mov
fistpll
sub
ljmp
add
test
or
dec
stc
or
fmull
push
push
adc
and
xchg
pop
sbbb
cld
xchg
dec
dec
lods
out
sub
clc
cwtl
jns
pop
iret
or
push
jnp
xchg
cmp
cltd
xor
jg
mov
test
repnz
xchg
pop
and
pop
pusha
jle
xor
xor
cltd
sbb
or
xchg
mov
pop
shr
mov
mov
cltd
shl
pop
aaa
in
push
adc
sub
pop
xor
std
dec
add
add
sbb
mov
jmp
mov
push
cli
leave
test
stc
jnp
cld
and
int3
andb
mov
cs
das
test
add
xor
pop
add
or
or
adc
psubw
xor
ljmp
ret
jo
add
jmp
nop
shr
sub
cmp
sub
addr16
in
mov
mov
outsb
repnz
shll
lret
leave
or
enter
sub
sub
sub
jo
add
or
add
ljmp
fbld
jmp
cs
ds
data16
icebp
js
adc
add
push
push
cmpsb
dec
pop
inc
lcall
jecxz
lahf
push
cmp
movsl
sub
add
lret
out
cs
adc
inc
pop
cmc
push
in
jmp
stos
aaa
loop
lret
cmpsl
lret
test
jne
stos
add
push
jmp
pusha
ja
pop
or
jnp
shlb
loope
mov
push
pop
pop
leave
xor
mov
or
test
test
ret
sti
xor
pop
jge
xchg
or
js
roll
stos
mov
bswap
push
movsl
dec
cltd
nop
cmpsl
and
loop
inc
xor
lock
xchg
jbe
dec
pop
stos
sub
cltd
rcrb
scas
dec
mov
sbb
sub
xchg
faddl
and
jmp
dec
popf
inc
mov
mov
daa
rcr
mov
test
gs
fdivr
in
xchg
mov
in
sbb
add
cs
push
cmc
add
in
in
stos
push
pop
cmp
sub
mov
xlat
mov
cmp
cmp
cmp
sub
mov
fldl
xor
mov
xlat
cmpsb
and
movl
dec
ret
dec
repnz
inc
dec
sub
jmp
sahf
sbb
mov
push
lret
xor
rorl
cmc
push
lret
dec
or
xchg
rcr
lahf
rolb
mov
aas
and
aas
xor
mov
xchg
dec
fcmovne
cmp
in
cli
hlt
add
xchg
ja
xchg
ljmp
push
iret
pusha
arpl
pop
rcll
imul
pop
mov
lahf
push
adc
mov
lods
cmp
pop
hlt
mov
dec
rorb
stos
or
adc
pop
jnp
jmp
decb
jb
jb
adc
adc
dec
dec
pop
pop
into
mov
add
jmp
pop
push
inc
dec
lods
xchg
jle
pop
rclb
scas
cld
pop
pop
sahf
jae
push
pop
cmp
mov
mov
cmp
push
pop
push
scas
popa
or
mov
dec
xchg
aas
repnz
sub
bound
push
mov
movaps
pop
and
scas
sbb
push
subb
testl
movsb
mov
and
sbb
push
jge
inc
lcall
cmpsb
xor
lods
call
lods
adc
ret
push
or
inc
shll
punpckldq
pop
adc
popf
adc
rorl
mov
mov
lret
dec
and
pop
mov
mov
push
insb
cld
je
nop
dec
lret
sahf
adc
jg
push
popa
aas
outsb
and
cli
mov
or
mov
lds
aam
mov
jae
and
shl
jle
push
aas
jl
loope
jmp
pop
push
mov
adc
mov
orb
inc
dec
xchg
add
adc
mov
ret
jne
in
imul
negl
mov
daa
pop
shll
sbb
les
mov
jg
or
adcb
fmull
cmp
inc
mov
adc
adc
cmp
lea
pusha
inc
sub
xchg
cltd
mov
leave
add
test
out
loop
test
daa
scas
fistl
bound
sahf
fst
fldcw
imul
es
mov
add
lret
loopne
mov
jl
lods
or
test
sbb
jo
inc
xor
jge
pop
sbb
add
lahf
push
addr16
pop
orb
fiaddl
lret
sahf
inc
lret
jnp
movsb
dec
jae
adc
mov
notb
mov
push
fs
add
fisubl
rcrl
pop
dec
test
ds
add
ljmp
adc
bound
inc
mov
add
cmp
fsub
pop
add
push
lret
sub
push
cmpsl
je
inc
jp
divb
and
push
lea
test
mov
in
out
add
pop
inc
sub
push
enter
or
shr
and
mov
test
cmp
outsl
shl
push
sub
not
cmp
push
add
and
adc
add
ret
and
decb
arpl
in
jmp
inc
out
push
popf
pushl
popf
pop
and
popf
cmc
test
cld
dec
mov
sbb
xchg
or
push
adcb
push
cli
cmp
sub
inc
shlb
dec
enter
adc
push
loopne
dec
clc
cmc
add
jns
das
add
icebp
lcall
add
sti
aad
push
ljmp
fldl
ds
xor
shrb
xor
mov
lret
outsl
les
mov
mov
arpl
push
add
cmp
jno
repnz
mov
and
pop
jo
pop
fucomp
mov
jmp
add
sub
sbbl
sbb
add
sub
cmc
fnstsw
push
and
scas
sarb
lds
lea
ja
xchg
pop
pop
inc
notb
out
fstl
xchg
call
call
stos
mov
push
iret
and
pop
or
jmp
mov
push
push
jns
fs
mov
xchg
movsl
out
cwtl
in
inc
lods
adc
outsb
and
mov
out
jg
std
or
pusha
jl
add
not
fisttps
add
cltd
push
nop
jno
jbe
lock
push
sbbb
pop
jb
loop
cmp
xor
mov
jp
std
xor
mov
cs
dec
cmp
cld
je
sub
ljmp
jae
sbb
mov
sbb
lret
push
repz
loop
lock
pop
and
int
sti
inc
jge
or
jmp
jns
and
ja
fisttpl
mov
dec
shlb
ja
or
scas
push
movl
push
into
or
into
test
add
mov
add
sub
pop
mov
add
add
and
pop
data16
das
sub
mov
out
popf
xor
outsb
out
dec
pop
or
repnz
mov
and
xor
push
not
testl
das
push
or
xchg
xchg
xor
lret
std
loope
dec
add
cmpl
mov
rol
loopne
ss
adc
or
pushl
or
pop
andb
in
call
ret
sar
or
push
cmpsb
add
dec
sub
push
sahf
mov
xchg
xchg
into
cmp
inc
shlb
mov
dec
push
push
outsb
mov
mov
or
cmp
int3
loope
push
and
outsb
jl
sub
add
push
shrl
jo
mov
push
notl
fs
or
out
push
cwtl
xlat
cmp
mov
sbb
ror
mov
cmp
or
insl
fildll
scas
or
xlat
roll
fdivp
fcoml
inc
mov
xchg
stos
or
inc
xchg
xchg
jae
cmp
sbb
xchg
push
shll
jae
inc
loopne
lods
data16
jne
add
jmp
cmp
pusha
arpl
adc
das
clc
jmp
push
mov
sub
pcmpeqd
roll
sub
mov
jo
sub
es
push
mov
dec
popf
lods
and
add
lock
dec
jne
out
sahf
popa
sub
jl
add
mov
jmp
push
inc
sub
push
xor
pop
inc
std
ret
pop
jbe
xchg
mov
fbld
jmp
jae
or
push
mov
daa
dec
sub
add
adc
inc
xchg
mov
xlat
xor
shll
cmpsb
add
mov
push
xor
mov
xor
add
push
or
mov
cmp
out
pop
clc
cmc
mov
xchg
js
gs
adc
sub
pop
cmp
hlt
pop
mov
pop
mov
incl
xorb
into
or
loop
js
sbb
adc
push
sub
loope
jmp
insb
xchg
loope
cs
aas
rcr
pop
sub
lock
jmp
pop
push
data16
mov
xor
mov
add
xchg
aad
dec
incl
mov
je
in
jnp
dec
inc
push
lods
xor
adc
insb
imul
push
je
in
pop
xchg
dec
repz
fidivrl
ss
add
scas
xor
dec
subb
sub
add
and
push
push
in
adc
mov
pop
nop
mov
inc
dec
cli
flds
inc
enter
add
xchg
push
sub
je
lea
cwtl
jmp
outsb
jno
pop
pop
sub
pusha
cmpsb
cmp
xchg
inc
popf
call
in
push
lock
dec
or
lcall
cld
sub
andl
imul
shll
repnz
dec
ja
push
adc
mov
mov
jmp
push
adc
sbb
push
stos
imul
xorb
dec
pop
jno
test
dec
and
lret
mov
popa
bound
push
push
inc
mov
das
lea
in
sbb
xor
sbb
pusha
and
jns
inc
dec
pop
shll
ds
xor
mov
je
pop
adc
xlat
lcall
lcall
adc
js
aad
ficoml
jmp
ret
loop
sarb
icebp
stos
or
cltd
ss
xor
inc
fisttpl
jne
or
or
xchg
xchg
data16
test
push
push
rolb
fisttps
cltd
inc
lahf
xchg
adc
jge
inc
pop
pop
repz
nop
push
jbe
add
cs
sub
add
movsb
ja
xlat
bound
out
jle,pn
aas
ret
popa
into
push
clc
adc
and
and
mov
dec
popa
mov
inc
rcl
pop
add
jg
lock
leave
sarb
movsl
mov
stc
cmp
lret
cwtl
add
dec
push
daa
pop
subb
jp
mov
inc
repnz
cwtl
mov
cmpsl
dec
int
jno
test
das
rcr
out
push
sub
or
jl
or
or
rol
lcall
js
loopne
mov
push
popa
imul
adc
inc
pop
imull
mov
cmp
insb
bound
daa
and
jle
jo
pop
popf
idivl
pop
and
mov
icebp
mov
inc
addr16
movsl
mov
loopne
flds
cmpb
push
inc
add
add
cmc
stos
adc
lcall
xchg
sub
inc
add
fadds
sub
cwtl
and
mov
out
pusha
std
pop
rcll
dec
xchg
adcb
mov
push
add
out
jb
sbb
mov
jmp
push
jl
jp
adc
sub
jnp
in
mov
adc
lock
and
add
adc
into
sbb
mov
dec
adc
mov
fdivr
ret
push
push
pushl
lods
sbb
daa
inc
add
bound
sarb
iret
add
cmp
cmc
cs
pop
push
adc
lahf
xor
popf
fiadds
insb
loop
pop
cmc
xchg
outsb
daa
push
repz
gs
cltd
inc
aad
nop
xor
mov
inc
adc
das
add
pop
ret
add
add
dec
jo
cmp
sbb
or
jle
cmp
andl
sbb
lods
add
out
test
stc
push
fwait
int3
mov
jo
sub
out
jecxz
fs
sbb
jecxz
cmp
adc
jecxz
divl
repz
pop
add
cltd
hlt
scas
sub
xor
or
enter
pop
mov
push
mov
daa
lret
push
cmpsb
scas
push
cmpsb
ss
adc
cwtl
fistpl
ljmp
jge
pop
xor
pop
cli
iret
lock
cltd
adcb
pop
ret
mov
mov
and
pop
shll
in
std
sbb
mov
add
mov
and
iret
leave
icebp
hlt
mov
ljmp
ljmp
adc
xor
cli
push
push
xchg
push
mov
mov
cwtl
pop
xor
inc
pushf
xchg
sbb
int
call
stos
sarb
pushf
jl
pushf
lahf
addr16
scas
lret
mov
jns
lds
adc
inc
mov
sub
neg
repnz
adc
xor
jmp
roll
inc
sbb
xor
adc
sar
je
pushf
and
pusha
cmpsl
cwtl
mov
xor
sub
pop
in
dec
cld
nop
mov
dec
lret
and
insb
jbe
jno
fisubs
add
pop
or
cltd
enter
cmp
out
mov
xchg
push
add
inc
fmuls
xchg
das
mov
dec
in
jmp
and
xchg
icebp
movsb
mov
and
cli
stc
mov
dec
and
das
and
xchg
out
pop
popf
add
and
add
and
fcoml
ss
data16
std
nop
scas
mov
mov
dec
push
into
and
imul
jmp
push
mov
test
add
sarb
mov
dec
pop
mov
add
popf
or
fisttps
adc
cmpsl
sbb
fcomip
or
es
mov
xchg
ret
jno
dec
push
into
imul
mull
lods
mov
cwtl
ret
xchg
sub
dec
mov
pop
dec
cli
bound
movb
aas
dec
insb
pusha
xchg
inc
mov
cltd
adc
fcoml
push
mov
divl
shr
and
out
imul
add
cmp
mov
sar
adc
scas
sub
add
xchg
jmp
or
jg
dec
js
dec
jmp
push
sbbl
in
lahf
or
lret
call
or
jno
jg
fstl
mov
mov
xor
push
pop
inc
xchg
inc
mov
push
shlb
xor
cmp
lret
sbb
or
sub
mov
ret
mov
das
lcall
jl
mov
jle
mov
pop
mov
out
sbb
dec
repnz
fidivl
mov
dec
lock
pop
xor
inc
daa
jle
adc
add
mov
add
test
fwait
adc
imul
cmp
cmpsb
or
dec
inc
out
inc
add
mov
push
neg
sbb
stos
add
jb
jmp
sub
xchg
jg
xlat
fldt
add
cwtl
repnz
xorb
push
jmp
lods
push
je
xorb
fiaddl
addb
add
push
mov
xor
call
pop
push
push
xor
mov
enter
sub
ljmp
xchg
pop
loop
mov
sti
outsb
adc
out
ja
xor
pop
push
adcl
adc
push
push
mov
push
cs
xor
pop
cli
and
pop
dec
pop
call
shlb
in
ss
in
out
mov
pop
push
jmp
pop
pop
mov
aas
inc
push
add
shrl
add
ret
test
test
sub
aad
cmp
push
mov
test
test
push
xor
movlps
mov
bound
aaa
lods
add
xchg
sub
pop
cmp
pop
xchg
pop
pop
adc
ljmp
sub
hlt
adc
or
adc
icebp
out
or
ror
push
adc
add
aaa
prefetchwt1
xor
icebp
cmp
xor
ja
and
pop
pop
sub
dec
aaa
loopne
test
into
not
sub
xlat
and
pop
adc
push
pop
xor
adc
jle
lods
sub
adc
rclb
mov
ljmp
cltd
adc
pop
mov
sbb
jbe
jbe
jl
imul
inc
mov
or
jp
jb
add
fisubrs
push
fsts
add
ffree
xchg
lcall
xor
test
dec
or
clc
and
inc
pop
mov
pop
mov
js
jo
scas
jl
mov
clc
scas
fildll
or
and
push
adc
adc
int
out
sub
jle
jmp
xchg
push
int
popf
push
inc
rolb
add
in
inc
test
or
add
pushf
dec
out
inc
sbb
inc
aam
dec
pop
adc
js
add
add
sbb
mov
ret
and
dec
xchg
add
int3
repz
push
hlt
xchg
notl
mov
dec
pop
in
pop
fwait
mov
push
mov
xor
xor
scas
add
decl
cmp
hlt
jecxz
imul
cmpl
mov
sbb
ret
movsl
xchg
jmp
cmc
mov
and
jp
and
sbb
mov
movsl
imul
inc
add
mov
incl
pop
test
lret
push
jns
or
lcall
lods
xor
call
mov
out
out
pop
outsb
push
mov
fsub
inc
bnd
repnz
mov
jbe
xor
mov
push
push
iret
outsb
je
lods
stos
inc
mov
dec
int
cmp
testl
push
je
adc
cmpsb
adc
pop
ds
push
shlb
push
test
mov
sarb
loope
push
cmp
scas
sti
frstor
mov
jmp
adc
out
push
sbb
push
rolb
xchg
mov
sbb
ret
pop
lcall
hlt
rclb
test
push
xor
adc
dec
cmp
or
mov
mov
fs
pop
jbe
imul
xchg
add
fnstenv
lock
sub
mov
jle
push
out
or
xor
jecxz
cmp
ss
ret
cmpsl
push
push
mov
aas
pop
xchg
hlt
in
dec
or
sbb
shll
icebp
fwait
mov
mov
arpl
cmp
mov
lret
lock
pop
adc
pop
ja
add
out
fsubl
adc
or
add
inc
test
xor
cmpsb
popa
and
out
xchg
addr16
jb
js
rolb
and
mov
mov
xor
scas
fildll
shl
bound
mul
mov
and
add
adc
gs
dec
jmp
mov
pop
or
add
jbe
jmp
scas
lidtl
pop
push
popf
cmpsl
pop
sbb
mov
int3
dec
mov
sub
lds
pop
movsb
outsb
or
mov
hlt
push
jo
xchg
fnstsw
xchg
ret
xor
stos
mulb
xor
mov
mov
daa
ds
ljmp
test
daa
vminsd
cmp
cmpb
add
adc
mov
or
pop
inc
dec
je
addb
add
push
sub
dec
lock
lcall
aad
cmp
jnp
ficoml
pop
cmp
sahf
add
roll
and
sar
mov
sub
sbb
jmp
shl
cmpsl
jns
dec
pop
incl
mov
mov
and
jmp
lds
add
fdivrl
out
out
das
pop
dec
shrl
dec
arpl
fwait
sub
inc
mov
scas
loop
xlat
test
mov
cli
add
and
mov
push
mov
adc
roll
pop
rcll
jb
or
sbb
xlat
inc
imul
arpl
pop
add
fdivs
lcall
sub
add
or
loop
lock
mov
cld
inc
lea
mov
mov
mov
jmp
or
daa
jmp
mov
mul
pusha
cli
dec
addl
jb
sbb
sub
or
pop
sbb
mov
pop
xchg
pusha
and
and
lods
loopne
flds
xor
int3
cli
je
test
mov
dec
sahf
dec
test
ret
push
add
sub
jno
aas
push
jne
add
out
cmp
mov
sar
add
pop
xchg
xlat
nop
mov
test
mov
sub
das
push
ljmp
js
sbb
pop
in
stos
je
les
cwtl
in
push
push
movsl
movsb
loope
sub
ja
and
dec
inc
pop
add
lea
add
jo
add
ss
or
sub
mov
stos
lret
jmp
xchg
inc
data16
pop
dec
mov
jecxz
add
out
inc
jmp
pop
idivb
xchg
mov
stos
pop
popa
ljmp
insb
add
mov
pop
sub
push
lret
cld
cmpsb
pop
mov
push
fldenv
out
xchg
and
sbb
or
test
lds
mov
add
or
xor
add
jmp
shrl
dec
aas
push
add
mov
test
jbe
xor
and
mov
out
mov
add
jge
sbb
leave
orl
jg
sub
fdivrs
loop
in
dec
push
mov
clc
xchg
into
stos
xlat
xchg
ret
roll
lods
sbb
mov
shr
xchg
subl
lahf
sbbl
shlb
shl
dec
sub
movsl
ja
lods
sub
movaps
in
xor
loope
outsl
mov
lret
test
lock
out
sub
add
adc
jg
push
and
adc
xor
add
pop
push
es
dec
stos
jno
das
sbb
loope
mov
jo
les
mov
pop
scas
xchg
hlt
sub
lret
sub
pop
mov
sbb
sarb
add
inc
xor
rcrb
or
add
sub
jg
not
jmp
ret
jge
xchg
ljmp
adc
sti
mov
jmp
mov
mov
or
or
rcrb
xchg
push
dec
push
out
nop
cwtl
mov
cmpb
test
xchg
cli
sub
jge
aad
sub
push
mov
sbb
fldl
shl
in
xor
rorl
sub
mov
cmp
jb
push
and
das
movb
dec
xor
jb
mov
popf
dec
cmc
addb
mov
fsubs
jno
mov
or
dec
push
bound
lret
cmp
sub
jecxz
and
insb
add
les
or
pop
push
xrelease
pop
notl
xchg
xor
aam
jl
jnp
in
test
mov
in
loop
add
dec
sub
call
jbe
inc
fldcw
lds
movsb
jno
adcb
lret
mov
and
xchg
aad
mov
sti
je
jmp
xchg
or
out
bound
ss
inc
xchg
xor
add
or
insb
fs
in
roll
jbe
sub
pusha
jg
mov
xchg
outsb
loopne
jo
daa
in
adc
dec
and
ss
xor
mov
sub
fwait
push
push
mov
and
lods
or
xchg
add
rcr
push
or
insl
loopne
cmp
cmp
push
mov
add
push
mov
lahf
rol
int
xor
mov
xlat
dec
test
es
add
cmp
loop
jo
cmpsb
mov
test
ljmp
pop
ret
daa
je
inc
adcb
test
xchg
jb
xor
or
dec
imul
repz
jmp
fldt
push
fwait
testl
mov
ret
push
add
orb
das
out
pop
sbb
mov
and
imul
gs
jne
popa
xor
add
dec
mov
mov
inc
das
mov
dec
lea
mov
mov
pusha
add
xlat
adc
mov
jmp
call
pop
mov
sub
pop
mov
call
pusha
inc
jg
inc
das
ret
data16
push
loop
add
out
shl
rcr
subl
nop
cs
push
movlps
or
jmp
loope
rorl
movsl
adc
mov
mov
push
push
gs
lods
repz
jo
inc
sub
mov
sbb
xchg
jp
xchg
or
xchg
stc
cltd
mov
add
in
xchg
les
inc
xchg
inc
call
scas
and
sti
test
jnp
xchg
test
mov
popw
scas
pop
cmp
shlb
dec
or
jnp
out
sarb
mov
in
or
fucomi
gs
xchg
pusha
inc
in
into
icebp
push
xor
iret
and
mov
dec
sub
pop
mov
push
cmp
and
mov
adc
icebp
jle
xchg
mov
loope
adc
mov
jns
jecxz
int3
jno
sarb
xchg
lods
inc
fstpt
add
inc
push
inc
mov
cs
enter
scas
and
adc
or
aas
jb
or
push
pop
cmp
pop
cmp
add
push
jo
mov
rorl
out
inc
rorb
xchg
dec
ljmp
pop
and
xchg
out
xor
sub
imul
mov
mov
cmp
add
outsl
or
adc
sub
aam
jge
call
out
or
imul
xor
xor
stc
sub
fists
or
sub
popf
push
into
fs
scas
scas
dec
mov
mov
pop
cwtl
addr16
ret
or
xchg
mov
and
pop
out
cwtl
mov
lock
jno
repnz
mov
mov
hlt
push
and
push
jne
xchg
add
inc
cmp
mov
pop
and
lcall
in
inc
add
pop
js
dec
icebp
pop
sbb
repnz
push
inc
push
push
popf
pop
outsb
inc
add
inc
stos
lret
insl
adc
adc
jle
xchg
adc
pop
out
or
in
and
popf
pusha
push
pop
pop
add
cmp
push
adc
push
cwtl
push
add
mov
adc
mov
call
sub
cmp
xchg
mov
jmp
mov
add
scas
adc
pop
adc
scas
xor
test
mov
pop
hlt
loop
mov
mov
ds
jmp
sub
test
in
xchg
pusha
ljmp
sbb
loopne
sbb
cmp
xor
push
aas
imulb
outsl
insb
push
mov
and
aam
or
call
fwait
aaa
lds
in
call
int
je
jne
in
test
mov
scas
mov
sti
add
fcomp
pop
jmp
popl
push
add
ja
ret
jo
les
mov
push
cmc
add
mov
outsb
in
scas
or
inc
inc
xchg
ret
adc
pop
out
pop
pop
jmp
psllw
add
lds
add
dec
jge
dec
ret
inc
dec
add
push
mov
mov
lcall
pop
pop
mov
push
mov
ds
pop
hlt
and
scas
push
loope
push
jg
cmp
pop
loopne
sti
mov
jae
stos
dec
inc
mov
jl
rep
addps
and
jge
add
fidivl
xchg
popf
jmp
or
dec
mov
and
xor
lret
daa
pop
xchg
bsf
clc
mov
addr16
or
es
cmpsl
popf
cmpsb
mov
inc
and
cli
or
cld
pop
xchg
push
cli
sub
and
test
pop
scas
cs
dec
scas
cltd
clc
sub
popa
nop
dec
xchg
pop
sub
xchg
jne
mov
daa
cli
jnp
xor
pop
dec
aad
mov
cmp
scas
lret
jmp
sti
sbbl
cwtl
test
test
xor
cmp
adc
dec
stos
adc
scas
cmpsb
jns
clc
dec
inc
bound
or
std
lds
inc
jns
jmp
scas
dec
push
les
mov
jp
repz
icebp
icebp
cmp
insl
mov
scas
icebp
aad
dec
jge
pop
cld
add
jle
dec
dec
cmc
add
data16
mov
inc
add
das
mov
jns
jb
sub
push
or
bound
fists
and
cmp
fnstsw
jns
ja
rcll
push
mov
xchg
pushf
gs
dec
mov
adc
insl
or
inc
mov
add
fisttps
dec
push
mov
cld
nop
pop
in
ja
fsubs
in
pop
insl
inc
mov
in
or
xchg
ret
or
test
ja
push
xor
std
or
add
lock
mov
inc
pop
mov
fs
pop
lahf
stos
cmp
and
mov
cmp
pushf
mov
and
xor
jmp
andb
pop
inc
cltd
push
cmp
mov
nop
ss
pop
aaa
add
adc
ljmp
pop
add
jb
push
or
loope
dec
jp
pop
mov
mov
jne
pop
jecxz
or
mov
orb
or
mov
push
pop
jns
sti
call
adc
icebp
test
pop
in
and
scas
iret
mov
jmp
inc
xchg
mov
rcll
push
mov
add
cmpsb
inc
sub
mov
sub
or
icebp
bound
mov
push
xor
dec
ret
or
add
shr
dec
cmp
adc
mov
and
pop
pop
iret
mov
pop
jae
and
fcmovu
or
std
and
sbb
jnp
neg
adc
dec
inc
sbb
in
mov
xor
dec
pop
push
out
test
pop
mov
mov
sub
mov
dec
movsb
sbb
repnz
sar
sbb
lds
leave
sbb
fmull
jmp
sub
pop
push
rcrl
cmpsb
mov
add
push
or
sbb
inc
das
cli
lods
rclb
push
or
dec
sub
add
lock
jecxz
das
push
sub
out
je
repnz
pop
adcb
push
add
nop
insb
orl
pop
sbb
mov
or
repnz
movsb
cmp
lods
sub
ror
mov
add
pop
mov
mov
sub
out
imull
pop
cmp
lret
lods
add
cmp
pop
push
add
push
jg
adc
jo
ljmp
ljmp
sub
inc
pop
nop
int3
jno
in
sub
roll
dec
fdiv
cmp
nop
in
in
pop
in
test
sub
rolb
push
dec
dec
mov
mov
sub
popf
jge
push
jae
mov
sbb
xchg
call
test
cmpl
xor
xchg
movaps
mov
or
jle
add
out
cmpb
xor
mov
jp
iret
xor
sbb
cmc
imul
dec
jp
fldln2
outsl
out
loop
xchg
mov
add
xchg
push
inc
mov
xchg
inc
jmp
adc
jbe
outsl
shl
or
aad
aas
xchg
mov
add
cmp
mov
or
or
cmp
jmp
fmull
add
add
or
fs
pop
add
lahf
shl
sub
mov
mov
imul
sbb
dec
mov
rcll
sub
adc
les
add
aaa
jo
ljmp
imul
xor
adc
aaa
mov
cld
lds
xchg
jbe
push
out
mov
mov
insl
testl
in
mov
mov
add
xor
clc
fists
testl
pop
sub
ret
push
jb
push
dec
or
push
push
dec
pop
pop
imul
xchg
or
pop
outsl
std
pushf
push
pop
jo,pt
mov
mov
testl
cmp
cs
inc
xchg
movl
xlat
or
inc
sbb
add
inc
pop
mov
rcll
das
cs
or
add
and
dec
dec
scas
jecxz
pop
and
dec
aas
pop
xor
dec
daa
cmp
mov
sub
sub
enter
pop
adc
int
pop
ret
out
add
insl
push
mov
dec
lds
fmull
add
lret
xor
add
shlb
roll
int3
xchg
clc
or
nop
cmpsl
clc
inc
jnp
push
sahf
pop
mov
daa
decb
ds
bound
cmp
addl
jg
adc
mov
inc
hlt
cld
enter
mov
xor
xchg
sti
and
jmp
fildll
push
inc
pushf
aad
das
xor
jmp
cli
adc
sbb
pusha
mov
and
pop
inc
inc
push
mov
sbb
add
inc
das
pop
sub
mov
shr
add
test
testb
xchg
lcall
fdivs
aam
arpl
fldenv
pop
hlt
pop
pop
pop
call
or
mov
jb
sarb
sub
call
add
pop
adc
cwtl
adc
test
add
push
mov
dec
ljmp
sbb
dec
mov
mov
test
roll
adc
cwtl
push
and
push
mov
sbb
or
xchg
stos
or
out
add
mov
jne
mov
cmp
cmpb
stc
outsl
mov
pusha
ljmp
call
mov
xor
mov
pop
dec
pop
rdmsr
push
push
or
cmp
insl
jg
push
rclb
jecxz
pop
test
jno
bound
js
xchg
jmp
inc
push
out
dec
push
mov
jno
cmpsl
loopne
in
roll
push
xor
mov
add
xchg
outsl
addb
xchg
jne
pop
xor
push
insb
sub
pop
jp
adc
push
xchg
hlt
mov
enter
pusha
les
pop
cmp
mov
ja
ret
and
sahf
leave
xor
dec
leave
add
into
push
std
aas
fists
in
in
aad
hlt
jbe
cmp
xchg
in
fldl
push
and
out
cmc
mov
sub
xor
sbb
inc
jmp
movsb
dec
imul
jmp
push
stos
out
xor
push
mov
rorl
mov
mov
pop
inc
xor
call
jle
pop
add
mov
ja
stos
add
movsb
fs
push
jno
add
add
jbe
pop
xor
inc
cmp
notb
or
rorl
lods
mov
ljmp
or
inc
aaa
movsl
jbe
inc
pop
ljmp
adc
mov
iret
aad
and
imul
ljmp
bound
pop
dec
cmp
out
fcoms
pop
xlat
and
js
jmp
movsl
pop
lret
jmp
jge
xlat
shll
inc
mov
negl
and
adcb
ss
add
cmc
aaa
jmp
pop
mov
sbb
xor
idivl
cmp
cmp
sbb
adc
jne
sub
add
cmp
or
pop
push
pop
imul
mulb
add
cmp
add
out
push
neg
push
mov
sub
jbe
or
xchg
jb
add
inc
pop
push
aam
aas
das
mov
mov
pop
lods
and
push
jmp
in
push
pop
pop
test
and
rcrb
loope
out
push
sub
add
sub
icebp
and
xor
das
nop
popa
lods
pop
cmpb
aas
push
mov
pusha
fcoml
shrb
sub
add
or
sbb
mov
cld
jl
in
inc
lds
push
insl
sub
ss
adc
bound
push
cmpsl
or
fadds
test
outsl
or
push
or
adc
out
pop
pop
xor
addl
lret
loope
cli
xchg
mov
fucom
movsl
lret
cmp
inc
ljmp
stos
jne
dec
jge
or
je
xor
xor
ret
push
jl
loopne
decb
push
pusha
adc
fdivp
pop
popf
cmpsl
mov
int
das
and
shll
adcb
xor
jnp
mov
add
adc
xlat
out
xor
fcoms
push
dec
and
jns
push
adc
or
jge
leave
sarl
adcl
push
hlt
ljmp
dec
cmpsb
inc
sub
ret
hlt
inc
negl
inc
or
div
das
add
fcomps
jmp
in
pop
jmp
mov
inc
stos
mov
repnz
mov
or
mov
mov
mov
repz
push
sub
mov
or
sub
add
sub
fiaddl
or
rolb
push
jge
inc
mov
rol
shlb
or
ljmp
adc
cmp
orl
ret
jne
cmp
imul
sub
and
cli
lcall
jb
cli
pop
push
lods
ljmp
pop
lret
pop
inc
mov
lock
and
and
mov
stos
mov
adc
jmp
jmp
lcall
and
and
jno
ds
xchg
sub
pop
cmp
std
test
or
xchg
in
lahf
int
xchg
sub
jp
cmp
or
xor
in
mov
sub
pop
cmpsb
rorb
jmp
xor
sbb
ds
adc
lods
cwtl
or
stos
adc
jp
jmp
out
mov
sbb
scas
pusha
cmc
outsl
push
insl
adc
out
mov
mov
rcrl
fdivrs
jmp
pop
rclb
mov
xor
push
into
or
cmc
mov
adc
aam
inc
repnz
daa
pop
fdivl
pop
xchg
icebp
inc
in
call
cmp
mov
adcl
dec
adc
sahf
push
cmp
or
lds
andb
scas
ret
pop
loopne
xchg
mov
faddl
pop
jno
je
pop
dec
mov
cwtl
lahf
push
loopne
xchg
mov
jns
cmp
pop
dec
inc
dec
repnz
inc
daa
popa
fnstcw
adc
push
pop
push
inc
nop
jmp
pop
cld
jae
add
unpckhps
movsb
xchg
pushl
in
sbb
movsb
mov
lahf
stc
repnz
lock
lret
addr16
or
sub
jno
lods
push
pop
push
or
test
or
sbb
inc
mov
mov
popf
push
shlb
pop
and
mov
movsb
jne
ja
daa
repnz
ss
sbb
ja
in
outsb
scas
inc
and
sbb
clc
pop
inc
leave
decb
imul
daa
mov
je
jno
cltd
inc
jbe
mov
insl
add
and
sbbb
sbb
pop
jnp
shl
push
mov
adc
mov
add
daa
xor
push
dec
mov
cwtl
divl
adc
sub
jne
mov
lds
iret
jne
jmp
sbb
lret
dec
or
fdiv
push
push
jl
xchg
movsl
outsb
xor
adc
inc
add
hlt
dec
pop
xchg
and
pop
pop
push
js
add
lcall
das
jmp
loopne
add
dec
incl
or
jns
aad
lods
jbe
ljmp
xchg
sbb
mov
les
xchg
sub
push
pop
xchg
or
xchg
pop
lock
mov
jbe
or
mov
push
aam
push
in
cmp
decl
xor
push
mov
leave
fiadds
xor
sti
add
and
sbb
inc
push
jmp
or
xor
xchg
mov
fwait
movsl
pop
lret
popa
lds
sbbb
mov
mov
mov
adc
repz
push
push
fmull
or
sub
pop
or
std
xor
jp
xchg
push
push
sbb
adc
push
les
and
or
jecxz
and
addr16
pop
pop
jne
stos
mov
es
movsl
mov
or
inc
jmp
mov
aas
sti
jmp
test
mov
and
xor
pop
loope
icebp
pop
jmp
jbe
fidivrl
daa
call
dec
adc
adc
movb
adc
pop
xor
rolb
aam
call
fwait
movb
lods
inc
aad
xor
sbb
or
mov
sub
cs
aaa
cmp
int
dec
cmp
jnp
in
sti
add
js
push
push
enter
mov
mul
xorb
sbb
or
ljmp
pop
xchg
lock
pop
sbb
pop
jmp
jle
pusha
push
mov
jns
test
sbbb
inc
xor
cmp
lahf
xchg
push
xlat
add
and
inc
fstpl
shrl
sbb
xor
push
jge
jnp
mov
ret
cs
jns
sub
dec
adc
rolb
inc
push
adc
int
adc
push
add
pop
pop
shlb
in
add
out
cld
fbstp
and
adc
add
push
sti
lea
add
adc
shl
or
sbb
fwait
xor
mov
pop
in
popa
insb
inc
pop
invd
jmp
fdivr
in
mov
jne
test
xchg
xor
mov
arpl
adc
subl
out
adc
rclb
xor
lahf
xchg
rol
or
popa
dec
sub
dec
add
cmp
and
pop
jmp
aam
dec
lock
push
sbb
dec
dec
fs
mov
rcll
sub
lcall
loop
pop
sbb
mov
pop
mov
cmp
hlt
adc
sub
loopne
mov
adc
pop
add
pop
addr16
add
stos
add
std
sub
inc
orb
call
inc
cmp
inc
cmc
sar
jle
dec
push
popf
es
sub
adc
cli
sub
ds
lea
fldenv
out
testl
enter
cmpsb
fisttps
lods
pop
push
arpl
fmull
cmp
insl
stos
test
cltd
loope
jne
ret
out
and
andb
out
sarb
les
rol
ret
xchg
loope
loopne
fsubr
push
packuswb
or
or
adc
mov
inc
cmp
jb
dec
test
subb
dec
and
int3
sbb
or
add
jne
jb
dec
pop
in
sahf
inc
outsl
fs
mov
mov
xor
divl
pop
mov
inc
int3
sbbl
test
xchg
rol
and
and
adc
adc
or
movsl
sub
adc
mov
imul
jp
stc
insb
imul
jmp
div
das
das
out
sub
ss
sbb
or
jb
inc
mov
mov
test
rorl
add
hlt
rorb
mov
lcall
std
pop
ja
in
push
add
add
in
pop
mov
inc
dec
lds
xchg
cld
pop
inc
jo
ficoml
mov
jmp
movsl
add
add
cmp
pop
enter
subb
pop
mov
or
aas
je
mov
add
and
inc
rcll
jg
inc
jmp
mov
outsl
lds
sti
loop
les
jle
popa
mov
mov
jnp
pop
dec
and
xlat
popa
das
cmpsb
in
cmp
fsubr
adc
xor
das
jmp
popa
xchg
sub
jo
loop
mov
dec
pop
push
or
mov
iret
cwtl
jae
jmp
xlat
jo
and
sbb
inc
adc
lret
dec
adc
dec
pop
cmpb
je
movsb
fisttps
stos
mov
mov
sub
sarb
push
cwtl
pop
or
mov
mov
mov
aam
pop
mov
test
into
mov
xchg
out
sbb
adc
rcrl
push
jo
jg
push
xor
jmp
sti
xchg
cltd
and
or
pop
pop
stos
add
jnp
filds
push
sbb
ret
cs
mov
out
adc
out
repnz
and
jl
das
add
jno
push
or
push
repz
or
xor
jmp
jmp
sub
sahf
dec
cli
xor
shl
andl
mov
in
sub
lods
daa
add
adc
fcomp
add
inc
xchg
add
test
das
int3
inc
cmpsl
das
add
xor
xchg
and
or
and
orb
fisubrl
pop
jb
jno
push
andb
shrl
incb
and
pop
das
pop
pop
adc
mov
dec
jnp
sbb
xchg
push
push
xor
not
in
mov
das
mov
xchg
cmp
jb
outsb
lock
xor
out
jne
pop
sbb
pop
and
dec
pop
into
pop
jmp
xchg
pop
push
flds
or
test
jmp
lcall
mov
stc
out
test
gs
call
push
add
es
testl
sbb
mov
sub
aaa
adc
test
cmpsb
jno
aad
negb
scas
mov
imul
nop
xorl
lahf
shll
int3
pop
push
mov
aas
and
inc
rclb
mov
mov
sbb
push
and
or
pop
pop
xor
push
int3
xor
jno
icebp
push
aaa
mov
jo
jl
dec
loope
add
pop
jmp
inc
and
jl
decb
jecxz
dec
jge
sbbl
dec
mov
cmc
lods
fmull
mov
jmp
mov
adcb
fsubrs
je
push
dec
stos
and
loop
push
sub
sub
and
sbbl
and
pop
std
mov
mov
lahf
or
popf
fdivr
pop
shlb
dec
mov
push
jle
loope
or
xor
dec
fsubrp
cwtl
mov
and
lock
mov
in
jmp
sbb
push
and
mov
pop
add
jae
mov
ret
stos
sub
insb
test
daa
add
scas
subl
movsb
xchg
push
fcomp
mov
loop
xor
outsb
sub
mov
loope
subb
xchg
adc
fucomi
mov
xchg
xchg
dec
push
dec
bound
or
js
int3
pop
or
loop
enter
push
mov
mov
pop
dec
mov
mov
out
mov
push
push
mov
into
push
out
jecxz
ret
mov
mov
or
inc
mov
icebp
pop
popa
repnz
pop
lahf
inc
adc
aas
add
dec
inc
cmp
movsb
xchg
imul
scas
xchg
scas
push
stc
cmp
movsl
cmp
lret
in
mov
add
pop
jne
outsb
pop
out
test
adc
push
outsb
and
inc
fs
add
and
sbb
and
sbb
jns
dec
nop
pop
push
popa
mov
icebp
adc
mov
inc
sub
sbb
xchg
outsb
imulb
das
testl
ljmp
in
daa
rcrb
cwtl
repnz
pop
clc
pop
dec
jmp
mov
mov
repnz
das
shrl
sub
shlb
mov
adcl
push
in
xor
or
inc
adc
addl
jge
mov
scas
sub
rol
jecxz
ljmp
inc
sub
push
jle
clc
jmp
shll
pop
lock
ret
insb
cld
icebp
and
mov
leave
cltd
out
inc
pop
push
or
ljmp
adc
je
mov
cmp
in
pop
or
jp
push
adc
dec
pusha
sub
mov
pop
sub
imul
pop
mov
negl
pop
repnz
mov
out
loop
cmpsl
arpl
nop
pop
add
sub
test
jg
fwait
cli
and
das
pop
pop
push
xchg
testb
dec
stos
adcb
push
mov
xchg
mov
adc
add
add
add
add
lods
in
jge
mov
mov
es
and
mov
adc
push
push
or
jmp
in
lods
bound
push
push
jbe
stos
mov
pop
ror
mov
add
xchg
cmp
or
mov
mov
push
stc
mov
mov
cltd
int
fcomip
adc
nop
in
orb
clc
or
out
inc
jbe
push
push
mov
adc
inc
insb
pusha
bound
jp
push
pop
clc
imul
or
dec
or
dec
ficoml
inc
push
ja
dec
fcoml
or
or
outsl
xchg
or
bound
adc
adc
out
xchg
push
fsub
xor
add
repz
pop
sub
and
rcll
dec
xchg
jmp
add
mov
inc
push
mov
inc
ljmp
pmullw
in
jmp
loope
mov
dec
push
mov
mov
cli
ret
daa
sbb
jo
mov
cmpb
int3
mov
aas
or
ret
add
iret
push
subb
fwait
cmpsb
add
dec
stos
mov
mov
xor
inc
jg
cs
sbb
push
jmp
lcall
das
fistps
and
push
sbbb
ljmp
enter
mov
jns
dec
hlt
add
and
imull
ret
mov
jmp
out
out
iret
mull
icebp
cli
jo
xchg
cmpsl
mov
mov
ret
lcall
jmp
mov
and
pop
xor
add
dec
dec
ljmp
sub
cwtl
shll
and
dec
dec
add
nop
mov
lret
xchg
insl
je
notl
adc
pop
mov
or
pop
cmp
dec
xor
dec
fiaddl
sub
dec
pop
or
outsl
movsb
lcall
in
mov
das
add
addr16
rorl
rclb
xchg
ljmp
cltd
popf
das
cli
jns
jg
lods
lret
push
add
roll
push
mov
inc
das
test
or
mov
mov
or
jno
mov
pop
icebp
pop
movsb
add
push
sub
mov
pop
sti
push
mov
sbb
push
mov
pop
jmp
adc
jno
and
xor
inc
cli
inc
mov
fdivr
mov
inc
adcb
daa
pop
jo
pop
ljmp
mov
push
xor
dec
sbb
xchg
pop
xchg
push
xor
icebp
mov
inc
sub
or
neg
push
mov
int3
jmp
inc
sub
test
sub
shll
rorl
popl
dec
and
lret
test
xchg
in
out
inc
les
sar
inc
adc
xor
mov
clc
pop
add
flds
ljmp
xor
cld
xchg
lock
rclb
movsl
and
mov
dec
push
and
push
testb
xor
push
frstor
or
mov
fistps
jmp
pop
leave
pop
aad
outsb
or
mov
leave
xor
mov
and
jmp
adc
lods
sarb
jmp
pop
push
sbb
outsb
xor
sbb
daa
xorl
jmp
and
or
mov
sbb
sbb
mov
or
stos
pushf
push
das
out
add
cmp
shrb
addr16
jno
cmp
adc
mov
xor
js
jo
xchg
stc
mov
dec
mov
test
xchg
rorl
shlb
add
jmp
add
rclb
jmp
push
add
negl
clc
cli
out
rcl
adc
dec
dec
cmp
rolb
repnz
add
repz
add
sub
push
fs
xchg
stos
mov
cmpsl
out
cwtl
adc
sub
lret
bound
mov
mov
icebp
pushf
cmp
fs
jnp
stos
insb
adc
pop
xchg
out
pop
lcall
sbb
jp
shll
jmp
jb
faddl
mov
mov
jb
push
push
aad
sbb
mov
clc
pop
xor
insb
nop
mov
push
les
dec
mov
cld
add
mov
add
jbe
push
notl
mov
jmp
rolb
andb
push
insl
aad
enter
xor
pop
rorb
fmuls
push
pusha
test
lods
mov
jns
pop
into
mov
bound
jmp
cli
clc
or
mov
imul
stos
sahf
leave
add
and
sbb
sbb
addb
and
pushf
dec
hlt
mov
movsl
push
repz
lret
pop
fs
jne
pcmpeqb
arpl
inc
je
pop
in
fbstp
push
jmp
or
adc
mov
push
pop
or
pop
inc
mov
inc
pushf
jns
add
lds
bound
pop
mov
daa
push
stos
pop
inc
test
inc
mov
outsl
cmp
pop
inc
pop
jb
pop
push
mov
cmp
add
push
mov
imul
in
push
mov
ret
sarb
mov
arpl
into
pop
cli
int3
in
mov
add
movsl
fwait
sub
adc
cltd
mov
xor
mov
notb
sbb
int
dec
xor
dec
insl
sti
jae
fists
adc
ret
sti
and
scas
mov
add
cli
jne
mov
pusha
mov
jg
xor
inc
fldenv
cmpl
and
xchg
mov
das
push
xlat
leave
and
push
pushl
shll
mov
hlt
mov
dec
psllq
das
dec
or
aad
cmpsb
add
push
cmp
xchg
jns
and
fsubrl
ljmp
add
dec
das
mov
aas
jnp
or
dec
jg
dec
xchg
fiaddl
sub
jmp
lahf
and
inc
in
xor
subb
sbb
xchg
call
stos
lret
sub
imul
loope
cmpl
push
and
sti
fimull
add
mov
push
dec
cmp
mov
pop
fs
mov
xchg
lret
sub
xor
in
xor
lcall
mov
mov
lock
push
cwtl
mov
jne
dec
mov
and
lds
push
sti
cmp
les
sub
xor
push
add
xor
jmp
xor
mov
pop
pop
pop
nop
xor
and
popa
adc
mov
xchg
lods
pop
fiaddl
mov
and
jmp
jbe
jmp
iret
dec
pusha
mov
shr
sbb
push
jnp
jp
ds
popf
hlt
mov
ljmp
mov
jmp
iret
adc
out
pop
hlt
test
add
jl
out
imul
cmp
add
pusha
mov
imul
adc
daa
add
clc
xor
jnp
sahf
xor
pop
inc
lahf
int3
cmp
stc
gs
push
xchg
sti
fisubrl
mov
push
sub
mov
jle
mov
mov
mov
ds
clc
mov
dec
pop
andps
sub
stos
xor
add
insb
pop
cltd
jge
sbb
sub
sub
xchg
daa
repz
into
call
es
sub
sub
stos
xorl
jae
mov
js
loope
sub
fwait
ret
fmul
inc
fnstsw
orb
aad
negb
mov
sti
rcrb
inc
jmp
pop
notl
sbb
mov
inc
pop
jnp
and
imul
xlat
jae
mov
fists
aad
xor
pop
and
push
fcomps
dec
fcompl
dec
rcll
mov
into
pushf
mov
std
gs
cmpsl
xor
insb
mov
sti
iret
je
scas
sub
decl
ficoms
test
movl
jmp
lret
sub
xor
sbb
pop
or
jge
fs
roll
test
shll
inc
and
enter
push
and
or
test
dec
mov
les
inc
add
and
mov
mov
push
cmp
enter
ret
or
pop
bound
sub
stc
push
mov
out
sbb
test
call
xchg
jb
mov
shrl
cli
and
repnz
jb
vcvttss2si
or
cs
std
lcall
lahf
inc
mov
dec
cmp
sarb
dec
mov
adc
clc
je
push
movsb
mov
cmpsl
and
add
pop
or
sbb
ja
mov
fildl
mov
xor
cmp
rcrl
cli
nop
lcall
push
dec
cmp
cmpsb
fs
jno
insl
popf
pop
ret
punpcklbw
inc
mov
push
lock
jecxz
jb
rep
ja
lds
or
cli
pop
and
cmc
xor
pop
jmp
push
lods
add
ret
outsb
dec
imul
xchg
stos
sbb
cmp
adc
dec
cmp
push
pop
ljmp
rclb
in
lods
movl
jecxz
hlt
fstl
ret
xor
int
lock
sbb
jns
out
and
movsl
cmc
movsl
or
xor
pop
mov
std
pop
push
push
repz
cwtl
leave
xchg
mov
jle
jns
xor
popa
xchg
inc
test
mov
cwtl
sbb
adc
out
mov
jmp
add
sub
mov
shrb
insb
jmp
cwtl
xchg
lock
dec
sub
and
test
out
or
dec
adc
lahf
out
add
mov
pop
fadd
pushf
mov
je
push
jg
das
jp
scas
pmulhuw
es
xor
daa
add
imulb
ret
cmc
add
lock
imul
add
mov
enter
clc
sbb
jo
fcoml
xor
cmpsb
jp
mov
das
call
rcrb
or
jg
sarl
xchg
sahf
pop
daa
jmp
jo
fsub
xor
dec
sub
dec
add
lea
lock
mov
pop
and
dec
loopne
xchg
jb
orl
cmp
mov
mov
and
jmp
sub
push
into
std
xor
push
cwtl
cmp
sbb
jl
jnp
sub
sbb
cmp
add
stos
or
addl
sub
rcrl
sbb
xchg
push
aam
ds
push
lcall
ret
inc
cwtl
push
and
lret
pop
bound
scas
pop
or
int
and
and
gs
sbb
mov
add
pop
sub
xor
imul
call
shlb
ret
jmp
mov
pop
pop
mov
cmp
jb
cs
cwtl
test
jbe
les
mov
push
mov
inc
imul
std
sbb
fcoms
mov
xor
or
andb
inc
fmull
add
dec
sub
jecxz
test
xor
xor
insb
jo
mov
pop
jo
push
pusha
mov
fistl
out
inc
xchg
cwtl
dec
push
mov
movsl
lret
sub
sbb
jb
dec
sub
cmp
js
xchg
call
call
push
adc
loope
jg
das
scas
sub
dec
adc
in
push
out
mov
push
mov
inc
test
into
nop
fdivs
call
cltd
sub
not
pop
mov
leave
xor
jns
mov
push
inc
jns
ret
mov
ljmp
or
push
out
mov
or
mov
sub
pop
xorl
lahf
pop
mov
nop
or
mov
cmc
movsb
int3
push
mov
in
mov
mov
and
add
sub
outsl
push
lods
mov
or
aad
arpl
cmp
fisubrl
jmp
inc
xor
cmp
loope
xor
bnd
and
mov
xor
mov
dec
out
test
mov
sti
inc
jmp
push
dec
ds
mov
jmp
lds
test
rorb
mov
lret
popa
dec
mov
arpl
inc
mov
pusha
push
xor
push
pop
fwait
es
pop
inc
dec
xor
negb
sub
ret
cmpsl
fidivrs
inc
shrb
push
sti
pop
or
add
mov
xchg
add
arpl
jno
in
cli
mov
sub
xchg
cmp
cmp
les
mov
add
ja
mov
xchg
mov
mov
je
add
enter
or
fisubrs
sub
cld
push
push
iret
pusha
cmp
pop
neg
cwtl
test
andl
mov
jmp
stc
inc
cltd
and
and
push
leave
mov
cs
inc
bound
fisttps
or
inc
push
popf
bound
testl
xorl
bound
call
mov
ja
repz
mov
rcrl
mov
xlat
nop
add
mov
inc
or
jmp
nop
jnp
push
sbbb
and
cli
pop
in
mov
mov
movsl
mov
nop
push
xchg
mov
rcrl
or
add
dec
sarl
cmp
outsb
das
pop
loop
jl
jo
inc
cmpb
pop
adc
push
mov
push
addr16
push
data16
cmp
movb
mov
mov
mov
movsbl
loopne
mov
popa
add
sub
dec
jb
addb
frstor
adc
mov
stos
pusha
xchg
testl
add
or
jmp
add
rolb
push
push
mov
add
jp
jns
sbb
jae
jecxz
call
ret
xchg
jle
xchg
pop
mov
mov
mov
adc
lea
push
sbb
cwtl
sub
icebp
cs
mov
jbe
or
jmp
in
aad
pusha
push
sbb
xchg
add
mov
inc
or
sub
or
aad
ror
add
aam
shlb
jle
pop
inc
mov
push
cli
add
sub
mov
sub
add
push
or
out
xchg
mov
xor
mov
out
repz
fiaddl
add
jmp
dec
test
and
xor
and
scas
cmp
fwait
add
pop
arpl
ret
jge
cmpsb
inc
sub
inc
ret
les
xor
or
push
dec
ljmp
mov
loope
add
add
ret
lcall
adc
sbb
sbb
xor
lret
sbb
jno
les
movsl
mov
push
das
sub
jbe
lret
xor
or
push
mov
xchg
std
adc
add
and
jmp
iret
test
push
loop
ret
std
decl
adc
push
fistl
push
test
add
adc
cs
mov
or
in
adc
mov
jno
xor
outsb
int3
pop
xor
jge
insb
icebp
add
mov
push
xchg
inc
mov
cmp
mov
and
imul
ds
inc
jecxz
out
mov
mov
lea
jb
xlat
add
lock
fwait
sbbl
adc
aas
int3
addl
inc
push
inc
repz
push
adc
loopne
cltd
ret
in
imul
movsb
pop
mov
inc
je
pop
int
int3
shl
mov
dec
xchg
push
dec
cli
mov
mov
add
cwtl
push
mov
das
mov
test
mov
jp
mov
and
dec
jmp
test
pop
jecxz
cmp
jmp
inc
adc
iret
jnp
pop
add
xor
lea
neg
in
std
notb
inc
mov
adc
imul
mov
inc
movsd
cld
pop
les
in
adc
jmp
mov
cmp
mov
or
sub
or
es
lods
push
xchg
popa
aad
aad
fnstcw
mov
lea
pop
sbb
push
mov
add
mov
mov
jecxz
ret
dec
in
add
call
jmp
rorl
or
ficomps
pop
inc
loope
pop
adc
jne
stos
cmpsl
push
mov
pop
imul
icebp
or
mov
or
cmp
aad
test
and
stos
jp
add
in
scas
leave
fidivrs
sub
or
and
lahf
fnsave
push
jmp
aam
arpl
mov
pop
push
adc
adc
imul
inc
mov
cwtl
sub
mov
xor
sbb
pushf
adc
rorl
mov
subb
push
popf
or
mov
lods
loopne
xor
in
inc
out
xchg
add
lods
pusha
jnp
inc
cwtl
mov
sub
test
jb
mov
pusha
daa
pop
sti
jb
jae
aas
sbb
push
push
adcl
cmp
sub
daa
ja
pop
mov
cwtl
pop
adc
mov
dec
and
iret
inc
inc
loop
cmp
inc
push
clc
mov
or
rorl
pop
adc
xchg
or
ljmp
lods
fdivl
cwtl
dec
adc
mov
repz
push
je
sarl
or
insb
mov
and
jae
fisubrs
jnp
cmpsl
push
mov
sub
aas
adc
push
pop
xchg
pop
and
rclb
or
pop
or
repnz
test
xchg
popa
int3
dec
push
or
out
imulb
js
xchg
push
cmpsb
push
test
fdivs
int3
fwait
push
ljmp
and
pop
test
imul
sbb
mov
dec
and
push
pop
pop
bound
push
dec
push
push
and
into
mov
mov
not
divl
or
xor
jbe
or
and
sbb
mov
add
neg
ja
xlat
sbb
push
test
mov
dec
xchg
mov
sbb
daa
dec
dec
and
mov
aam
mov
push
popf
jnp
mov
pop
sbb
jmp
icebp
add
push
stos
push
sbb
sub
sbb
std
sub
subb
inc
adc
pop
dec
pop
scas
in
pop
sub
inc
fsubrl
lds
mov
int3
ja
xchg
push
insl
daa
push
fstp
dec
leave
stc
dec
imul
and
pop
sbb
jmp
ret
ret
jp
jecxz
adc
xlat
inc
inc
push
gs
mov
movsb
push
pop
and
push
jmp
dec
test
pop
push
imul
lods
jnp
mov
ja
jmp
dec
test
lcall
js
fstps
jmp
hlt
or
imul
xor
push
mov
push
inc
mov
inc
movsl
pop
sub
les
mov
mov
or
push
add
comiss
loop
sbb
jl
orb
inc
push
test
sti
enter
sti
mov
and
sub
pusha
fimull
dec
jno
ret
jp
stos
ss
adc
push
in
push
loope
mov
ljmp
in
test
dec
dec
pop
pop
ret
adcb
adc
inc
inc
pushw
mov
lock
jnp
jmp
or
mov
dec
movl
mov
cmovae
dec
add
jbe
leave
pop
mov
xor
sub
inc
jle
mov
xchg
fildll
adc
mov
or
dec
mov
out
shll
cmc
dec
into
sti
adc
shrb
xlat
mov
lock
call
clc
push
dec
mov
andl
sub
inc
xorb
push
loope
add
cmp
pop
xchg
clc
lods
aam
add
lret
jns
scas
lods
dec
add
add
daa
xchg
ds
xorb
push
orb
jmp
js
cs
fiadds
dec
add
add
pop
mov
ja
cli
pop
dec
andb
sbb
push
sub
ja
je
and
mov
mov
lret
push
pusha
loope
pop
jp
shl
or
jne
jnp
lds
mov
mov
pop
fcoms
cmp
dec
iret
test
and
mov
or
jge
push
sub
stos
test
cmpsb
xchg
xchg
jmp
call
push
pusha
adc
dec
stc
jae
lock
inc
sub
push
cld
and
push
sarb
fs
nop
outsb
or
and
ret
cmp
stc
jno
int3
dec
push
xchg
ljmp
in
repnz
aaa
inc
add
jmp
jle
push
xor
sub
cmp
and
mov
lahf
push
jmp
xchg
rcrb
jno
cltd
insb
xchg
jbe
out
mov
and
negb
adc
popf
pop
add
jmp
out
inc
es
push
jg
in
add
and
imull
add
adc
movsl
pop
pop
push
push
xor
adc
add
outsl
loop
cli
les
enter
jg
pop
test
pop
jmp
mov
jecxz
loope
xchg
cmp
movlps
add
jb
mov
mov
xor
jmp
inc
pop
mov
push
dec
fs
push
push
cld
adc
inc
add
cmp
xchg
pop
xor
pusha
ja
inc
bound
pop
ljmp
insl
add
sti
std
push
mov
mov
add
mov
sub
jmp
dec
push
mov
add
enter
incl
adc
shrb
xor
inc
mov
das
push
inc
in
xor
imul
jns
in
pop
mov
mov
sbb
jno
aas
jge
inc
or
xor
mov
push
in
iret
push
mov
push
push
pusha
mov
push
add
pop
addr16
jo
in
rolb
lret
mov
sbbb
mov
pop
add
xchg
push
xchg
sbbb
dec
jmp
sub
neg
add
out
pop
add
aam
sbb
mov
mov
add
jle
rorb
xchg
bnd
sub
or
jmp
add
in
cvtps2pi
inc
loope
pop
inc
and
daa
lods
sbb
sahf
hlt
movl
cmp
pop
adc
sti
adc
sub
pop
loop
fs
ja
rolb
imul
loop
push
xor
data16
mov
push
pop
jnp
mov
mov
sti
pop
xlat
lret
xchg
dec
mov
rcl
mov
push
sub
or
mov
or
mov
ss
xlat
and
fimuls
push
adc
aas
test
repnz
popf
and
mov
xor
mov
xchg
mov
jns
ficoml
add
test
dec
test
sbbb
mov
pop
dec
sub
into
jl
mov
aad
ja
outsb
xor
pop
in
xchg
add
shl
xor
jns
stos
mov
mov
jmp
das
xchg
lea
push
adcb
test
mov
psrlq
or
sbbb
aam
idivb
sbb
ret
aam
fs
cmp
sub
loop
int3
ja
xor
std
xor
lods
add
jae
cltd
xchg
sbb
shlb
pop
mov
adc
mov
out
adc
xchg
cmc
mov
and
push
mov
xor
cmpb
mov
shll
push
push
mov
icebp
mov
xorl
scas
fdivs
lds
shl
lahf
push
sbb
mov
sub
stc
dec
das
xchg
das
sar
bound
xor
push
daa
push
cltd
les
loope
pop
shlb
icebp
loop
cmpsl
inc
dec
outsb
or
dec
loop
aas
add
mov
sub
shrb
pop
sahf
xlat
dec
test
mov
push
push
stc
imull
pop
adc
or
jmp
test
adc
xor
pop
mov
mov
popa
xor
cmp
pop
jle
repnz
sbb
cltd
mov
add
fisubl
stc
out
in
lret
sbb
push
mov
es
pop
mov
add
or
inc
pusha
insb
mov
mov
hlt
loopne
jmp
mov
leave
jo
mov
xchg
jmp
movsl
or
pop
mov
aas
dec
test
clc
popf
mov
bound
pop
jp
fs
and
jo
jle
jge
sub
ficompl
push
scas
aam
lahf
pop
cwtl
ja
jge
dec
cmp
push
lock
jne
cmpsb
or
fwait
jg
and
fldt
insb
int
ja
js
sub
push
aaa
test
sbb
push
inc
mov
fstpt
ljmp
loop
stos
test
andb
lods
cwtl
inc
loope
xchg
or
out
loop
pop
decb
push
popf
mov
adc
shlb
or
pop
loopne
mov
inc
xchg
rclb
mov
orb
mov
sbb
or
push
aam
insl
jmp
pusha
jne
loopne
fsubr
adc
mov
xor
enter
in
push
fiaddl
out
aaa
in
andb
jmp
jno
cmpsl
rcrb
cmp
push
adc
fs
xor
sub
nop
push
pop
mov
ret
mov
clc
cmc
pop
xchg
or
ljmp
stc
lea
test
jge
test
push
mov
in
jo
or
add
sub
cmp
ljmp
cmp
cld
inc
xlat
lods
lret
dec
xchg
repnz
enter
sub
jbe
cmp
add
mov
sub
loop
adc
ret
or
inc
or
pop
hlt
push
jp
add
add
xor
fnsave
jge
and
push
add
lods
out
call
movsl
mov
xorl
dec
out
cmp
mulb
sbb
clc
dec
scas
fcomi
popa
das
jmp
adcl
or
jne
stc
inc
pop
fwait
jno
daa
in
scas
or
pop
push
inc
daa
sub
xor
sbb
rcll
lock
lock
fcoms
add
jg
or
repz
or
or
scas
fcmovnu
mov
lods
add
sti
popl
out
leave
inc
jb
dec
add
push
jo
mov
pop
mov
test
das
jmp
shll
clc
mov
jb
scas
sub
add
or
xchg
push
push
loopne
fdivrs
aam
icebp
inc
mov
mov
push
les
cmp
xor
movsb
pop
in
dec
popa
cwtl
pop
rcrl
jbe
ss
or
push
jp
out
icebp
jo
pusha
adc
js
iret
scas
es
jmp
pop
je
sub
aas
xchg
add
adc
inc
adc
mov
cmpsb
sbb
mov
popa
jmp
cmp
xchg
add
lds
loop
std
sub
and
leave
loopne
push
in
dec
enter
jle
add
push
mov
dec
stos
leave
dec
cmp
dec
frstor
add
out
orb
push
sub
pop
ret
push
push
leave
jl
loope
jmp
leave
push
push
add
mov
into
push
mov
popa
inc
jbe
pop
sbb
dec
mov
pop
mov
mov
out
inc
cwtl
sti
jne
cmp
push
mov
add
jmp
mov
jb
sub
add
fimuls
pop
pop
loope
or
cmp
mov
loope
jle
insl
cmc
sbb
clc
loope
xor
pop
jge
in
xchg
push
pop
push
daa
loop
xchg
in
rol
sub
jmp
xchg
xchg
rorb
in
xor
mov
out
lods
inc
in
dec
push
cld
divl
inc
movsb
fisubl
or
jecxz
nop
cli
loope
subb
and
add
loopne
mov
xor
bound
daa
adc
arpl
movsl
pop
push
or
inc
hlt
dec
popa
push
mov
leave
lock
pushf
ja
lods
imul
out
repz
xchg
rcrb
in
and
push
push
test
adc
and
cwtl
insl
add
mov
dec
add
nop
mov
cmp
add
lds
imul
aas
mov
daa
sbb
pop
jmp
repz
xchg
and
xchg
pop
es
lds
jmp
ret
push
cmp
xor
fcompl
dec
and
arpl
jns
sbbl
jle
push
and
or
das
inc
fcoml
sti
pop
push
or
das
inc
aam
add
dec
popa
orl
push
cmovg
cmp
addr16
lds
or
push
fists
push
aaa
call
sbb
add
insb
xchg
insl
es
push
popf
add
sub
mov
dec
lahf
pop
pop
sbb
sbb
or
call
testb
push
cmc
pop
stos
shlb
mov
xor
adc
das
adcl
mov
int
mov
outsb
ss
sbb
add
mov
popf
adc
aas
les
int3
cli
andl
rcrb
sub
dec
loopne
add
xchg
fimull
cld
jae
pop
dec
inc
jg
add
cmp
push
icebp
lcall
adc
add
les
aas
inc
adc
dec
xchg
xchg
fiaddl
adcb
mov
outsl
aas
jo
inc
mov
mov
fdivrs
pusha
push
adc
mov
lods
add
sbb
cmpsl
shr
add
cmp
cmp
dec
fs
sbb
daa
adc
in
mov
pop
mov
pop
inc
lock
and
sub
jmp
dec
sti
xchg
mov
data16
fdivrs
mov
push
jle
add
mov
push
popa
pop
lea
mov
sub
int3
jae
add
int
sbb
sub
in
or
dec
in
add
sub
scas
ret
or
jg
pop
loop
push
push
loopne
mov
add
in
sti
sbb
xlat
jmp
sub
push
mov
mov
fadd
inc
or
and
cmp
movl
cmp
pop
int
mov
fstl
cltd
add
or
fmuls
out
jbe
decb
add
test
mov
xlat
cwtl
mov
ja
shrl
xchg
or
flds
push
dec
sub
clc
ja
cld
daa
fisubrs
aad
repz
popf
lcall
mov
pop
jne
ds
cmp
cmp
mov
dec
push
xor
mov
mov
push
outsb
push
nop
aas
pop
pop
int
mov
cmp
lcall
cmp
addb
aam
inc
xchg
pop
xor
cmp
int3
stos
xor
ds
adc
es
cmp
int
push
jbe
shl
add
popa
repnz
jge
add
push
sbb
inc
pop
stc
mov
in
push
mov
or
adc
out
add
sbb
add
lcall
cmp
int3
mov
add
insb
mov
or
cs
add
pop
and
pop
lret
int
pop
sub
dec
jp
mov
lock
int
daa
add
mov
adc
nop
cmp
add
mov
add
dec
clc
mov
pop
xlat
popa
mov
add
scas
xor
mov
xchg
push
or
push
add
lods
hlt
or
or
add
pop
mov
dec
xchg
add
arpl
and
incl
add
cmp
loop
les
sahf
inc
fidivrl
inc
sub
push
jl
add
insb
cmp
add
pop
enter
imul
jl
int3
and
pop
add
and
shl
scas
popf
shr
cld
cmp
pusha
push
and
andb
inc
fnstsw
sub
mov
rorl
or
sbb
sub
pop
xchg
inc
dec
add
mov
mov
add
pusha
cmpsb
pop
mov
lods
out
xor
ljmp
adcl
popl
mov
sub
sbb
es
xor
inc
rorb
cmpsl
scas
sahf
add
xchg
add
sbb
shlb
subb
pusha
lea
sub
test
mov
inc
inc
adc
add
mov
popf
push
cli
aam
lock
jge
jg
inc
adc
mov
and
jbe
inc
adc
ds
into
test
add
and
inc
xlat
out
or
sbb
push
and
push
sub
lock
xlat
xor
notb
lods
add
mov
pusha
fmull
pop
add
popf
out
aam
test
push
cltd
negb
xor
jmp
ret
iret
xchg
in
xor
jmp
add
filds
xchg
rol
int3
lcall
arpl
loopne
fistps
cmp
jo
mov
add
inc
cmp
imul
sbb
add
pop
sti
ds
add
inc
jmp
add
sbb
xchg
pop
dec
cmp
push
pop
push
add
add
dec
adc
test
xchg
into
js
add
std
cltd
inc
loopne
iret
addl
ljmp
inc
add
inc
sbb
mov
mov
icebp
or
mov
mov
jns
mov
add
fisttpll
add
mov
or
jae
mov
add
nop
and
dec
pop
pushl
or
jae
ret
lods
out
and
mov
mov
push
imul
pushf
sbb
sbb
pop
cs
cltd
nop
add
stos
push
mov
test
sahf
xor
fbld
in
test
add
mov
icebp
dec
xor
pusha
pop
mov
and
ja
adc
mov
push
xor
cwtl
cmpsb
add
mov
fs
mov
in
add
inc
jns
icebp
add
push
dec
sub
sub
stc
iret
jecxz
icebp
push
add
ds
insb
sbbl
cs
out
sub
jmp
aaa
push
sub
nop
rorl
add
jg
and
cltd
sbb
stos
mov
scas
add
push
stc
push
cwtl
dec
jg
add
dec
faddl
adcb
add
jmp
pop
push
pop
xor
add
lock
jno
add
and
mov
pop
cli
push
add
pop
sub
andb
jno
mov
lahf
cmc
fisubrl
pop
jns
push
and
dec
enter
jns
push
pushf
push
add
cmp
cmp
mov
mov
test
inc
loopne
fnstcw
jb
es
hlt
mov
mov
fdivrl
out
push
xor
add
popf
adc
mul
push
call
lahf
push
xor
jnp
inc
mov
lret
cwtl
lret
adc
dec
dec
adc
addb
cs
sti
jb
cmp
xlat
lea
mov
pop
iret
mov
mov
and
jl
jne
pop
and
std
js
mov
insl
mov
mov
lea
lods
test
push
xchg
mov
or
add
mov
inc
test
xlat
add
sub
loopne
mov
add
lret
test
and
add
sub
mov
sbb
inc
mov
push
xor
sub
add
add
test
nop
out
add
int3
outsl
clc
sbb
cwtl
dec
and
xlat
push
inc
mov
xchg
cmpsb
push
sub
xorb
in
nop
cwtl
or
jecxz
dec
dec
xor
mov
cwtl
sbb
mov
inc
add
push
cmp
loopne
pop
pop
add
in
push
add
inc
fidivs
enter
mov
mov
add
addb
sub
mov
xchg
addl
and
or
mov
sub
test
add
add
or
add
cmp
adc
mov
aas
inc
mov
add
xchg
pop
lret
iret
into
push
insl
es
negl
dec
rol
jecxz
or
mov
jnp
push
lock
orb
std
sbb
pop
adc
insl
pusha
cmp
cmp
or
or
pop
or
adc
andl
sub
or
add
call
cmp
add
inc
cmp
pop
push
negb
xchg
add
cmpsb
int3
mov
jnp
stc
sub
les
push
aaa
ljmp
in
mov
add
das
mov
add
cmp
pop
enter
andb
lret
call
imul
adc
popf
xor
repz
mov
adc
test
pop
cli
cmpsb
shr
dec
mov
jl
popa
inc
int3
mov
push
add
push
or
pop
adc
call
cmovne
dec
pusha
or
movsb
mov
sahf
adc
loop
les
add
push
imul
jp
cmp
xchg
pop
out
ljmp
adcb
iret
out
stc
add
sbb
xor
aad
lcall
add
lahf
dec
into
xchg
push
jle
fs
clc
aam
daa
jno
out
inc
xor
int3
and
fistps
adcl
sub
jns
mov
dec
add
mov
out
dec
cmp
push
inc
pop
dec
cmp
xchg
mov
ret
imul
in
or
sbb
int3
jbe
cmp
add
add
sarb
add
inc
loopne
and
xchg
add
cld
adc
cmp
and
push
and
shr
out
jecxz
cs
dec
ret
jge
inc
hlt
mov
cld
fildl
addr16
jns
mov
aad
scas
cmp
cmc
mov
xchg
mov
push
sbb
stc
test
gs
ret
into
pusha
fldt
in
xor
dec
int
pop
test
stos
mov
add
xchg
sbb
pop
add
jno
mov
pop
ds
aaa
xchg
in
pushf
xor
xchg
sbb
add
mov
push
push
jecxz
mov
inc
pop
add
cmp
out
xor
lret
sbb
sbb
dec
cmp
xor
fidivs
push
dec
jo
sbb
add
mull
add
orb
adc
bndldx
lods
mov
pop
into
lahf
movsl
jmp
aas
xchg
cmpsb
pop
aad
inc
testl
mov
mov
add
pop
lea
cmovl
jnp
and
and
out
cmp
es
shrl
sbb
add
shlb
mov
pusha
call
or
mov
xor
add
stos
xchg
inc
pop
arpl
int3
adc
jne
mov
xchg
pop
jmp
add
adc
mov
mov
out
push
aad
fldl
icebp
je
pop
or
xorl
mov
nop
sbb
ficoms
mov
jle
add
mov
lea
lods
leave
or
inc
rcl
mov
jo
mov
add
inc
stos
dec
sub
inc
add
and
cmpsl
mov
inc
pop
lret
push
inc
add
xlat
popf
dec
sbb
inc
xor
test
fists
lods
jp
sti
hlt
jbe
shrb
repnz
out
out
add
lret
mov
inc
out
out
dec
pop
xchg
stc
shlb
lock
pop
add
cmp
roll
ljmp
not
loopne
add
sbb
enter
sahf
bound
call
lahf
pop
rol
dec
xchg
or
lock
jae
popa
in
mov
and
imul
test
fiadds
xchg
add
push
xor
insb
dec
jae
ret
mov
das
testl
clc
adc
test
jae
js
pop
push
add
sub
loop
cmp
outsl
and
pop
test
xor
push
pop
shll
iret
xor
and
xor
scas
jecxz
xchg
sub
ljmp
mov
loopne
mov
sbb
dec
or
call
cltd
inc
push
add
sbb
mov
aaa
ds
roll
scas
in
sbb
cltd
cmp
add
mov
cltd
out
mov
sbb
sarb
push
add
stos
jbe
loop
inc
sub
add
imul
adc
add
int3
add
imul
les
lret
fstl
jmp
cmp
dec
lret
dec
add
dec
add
mov
lcall
jno
or
shll
mov
add
sbb
add
mov
inc
cmpb
shlb
pusha
adc
push
mov
aaa
adc
mov
jns
roll
pop
sub
fnstcw
ja
orl
mov
sarb
sar
mov
mov
cltd
mov
jecxz
xchg
test
iret
inc
rorb
call
hlt
aas
cld
cli
std
bound
aad
addr16
push
pop
sti
jbe
mov
xor
je
dec
pop
push
mov
cmp
mov
mov
sub
add
dec
mov
lahf
iret
pusha
add
xor
pop
lcall
cli
xchg
add
adc
jo
sbb
mov
repz
add
loopne
push
dec
or
add
jns
add
shr
shlb
sbb
mov
out
cmc
jnp
ljmp
jae
mov
push
movb
scas
fs
popf
fildl
sub
or
dec
sub
shlb
loope
mov
push
mov
cmp
sbbb
sub
mov
pushf
aaa
fistpl
add
pop
std
mov
in
xchg
add
mov
fadds
aaa
mov
jo
sbb
nop
cld
jg
add
out
push
clc
xchg
add
lods
jnp
filds
mov
hlt
push
jb
add
lods
enter
scas
cli
std
push
in
jns
add
inc
jp
loopne
mov
cmp
rorb
xchg
sub
add
popa
ja
add
dec
iret
mov
fnstsw
loope
xorb
popf
inc
sbb
scas
test
or
mov
push
or
in
add
mull
fstl
add
push
add
inc
xchg
insb
sbb
mov
add
shlb
iret
cmpsl
add
mov
mov
xchg
mov
add
push
add
or
or
mov
push
jo
shrb
sbb
add
push
adc
stos
jmp
sti
xor
pop
dec
xor
push
lock
and
or
daa
imul
lock
pop
inc
xor
pushf
and
dec
out
hlt
lahf
pop
cmpsb
xor
js
jecxz
stos
push
test
in
cld
push
add
popa
subb
add
cmpsl
cwtl
cld
mov
pop
inc
cld
inc
add
mov
mov
inc
scas
cld
ja
add
sbb
add
and
push
push
fs
pop
jge
push
add
mov
popf
int
mov
add
cltd
mov
add
pop
mov
pop
adc
mov
aad
xor
xorl
test
out
push
or
rorb
sub
pop
adc
add
jns
and
outsl
and
cmpb
imul
dec
jecxz
inc
cli
mov
cmp
xor
push
out
lret
push
add
adc
or
add
loop
daa
push
push
xor
jno
add
in
lret
mov
mov
mov
dec
and
cmp
mov
xorb
mov
call
mov
stos
aas
mov
icebp
inc
lock
mov
ljmp
adc
xchg
ljmp
dec
add
inc
enter
or
add
test
stc
add
es
push
pop
enter
stos
sub
out
in
loopne
add
push
ds
jo
aas
int
push
push
in
push
arpl
stos
lock
sahf
push
outsb
ds
cmc
or
dec
and
sbb
insl
je
int
and
xor
jae
add
push
insb
addb
adcb
lret
push
addr16
adc
js
add
xchg
scas
mov
cmp
or
test
sub
aad
xchg
mov
nop
cmp
sarl
pushf
add
fstps
push
or
fldl
out
push
jo
xor
scas
jmp
imul
lods
jo
add
and
sbb
sub
out
pop
je
mov
mov
ljmp
das
adc
lds
mov
in
xor
repnz
ss
dec
mov
jnp
mov
mov
mov
sbb
jne
add
sbb
aaa
hlt
xor
add
and
in
mov
add
gs
add
aam
pop
ds
mov
add
mov
addr16
push
mov
fidivl
stos
adc
int3
out
aaa
in
sub
cwtl
int
stos
fsts
scas
jae
lock
nop
and
push
sbb
nop
dec
sub
fcomps
clc
add
sti
rcrb
call
lret
jl
pushf
sbb
mov
pop
icebp
mov
adc
insl
pop
push
aaa
or
into
loopne
sub
jg
aad
ret
les
add
xor
push
jl
add
adc
dec
mov
aam
add
jne
aas
out
or
or
mov
es
pop
insb
lret
and
loop
inc
pop
dec
sub
push
add
ljmp
aam
popf
fcomps
and
pushf
push
add
sub
out
cmp
aam
pushf
pusha
loopne
cmp
sub
cmc
cli
fbld
fwait
hlt
add
das
aad
dec
xchg
add
xchg
cmp
pop
loop
add
lods
jecxz
mov
jl
and
sub
sbbl
aaa
out
mov
sbb
jge
sub
outsb
mov
out
movsb
pop
sub
add
int3
add
mov
add
movsl
les
negb
pop
leave
rcl
fwait
mov
ss
mov
lods
rclb
add
stc
shll
cmp
pop
sub
mov
shll
mov
ds
add
jle
jbe
leave
push
test
mov
xlat
sub
faddl
xor
add
add
add
xchg
adc
xchg
or
rep
pop
or
push
popl
subb
adc
inc
lock
mulb
rolb
sbb
test
xchg
fs
push
mov
dec
adc
fucomi
ljmp
sub
lds
add
stos
addr16
mov
push
sbb
outsl
adc
js
je
pop
inc
adc
orl
xlat
lea
into
mov
aad
add
movsb
pop
add
add
pop
aas
push
in
mov
mov
push
add
mov
add
repnz
lahf
pop
fs
sub
add
nop
mov
jmp
xor
ljmp
push
loop
pop
dec
dec
xor
push
movsl
sbb
jbe
test
sahf
scas
xchg
cmpsl
fcomip
sti
mov
pop
add
mov
rorl
cmp
orb
in
call
lods
dec
push
mov
addb
sub
adc
xchg
pop
add
addr16
push
fwait
inc
add
mov
jge
add
mov
dec
test
mov
rolb
pop
add
aad
add
ss
bound
jle
cmpsb
sub
add
cli
test
adc
dec
lods
cmp
sub
sbb
mov
out
rcrl
xor
mov
fwait
add
rcrl
clc
scas
ret
imulb
add
dec
fiaddl
mov
stos
xchg
inc
jecxz
ljmp
lds
shl
mov
sub
add
mov
pushf
dec
and
and
stos
js
sub
scas
lods
popa
ja
jo
addb
mov
lea
add
js
mov
xchg
je
or
cld
sbb
inc
pop
jge
add
dec
add
shl
sub
add
fisttpl
inc
ret
add
push
cmp
mov
or
fisttpll
into
mov
cld
pop
mov
pop
xchg
subb
movsl
sbb
imul
aam
sbb
pop
dec
add
or
push
gs
inc
push
outsb
in
int3
and
pop
lret
add
sbb
shl
add
ljmp
pusha
xor
outsb
lods
add
mov
iret
and
fwait
andb
das
insl
int3
and
xlat
mov
or
outsb
or
fisubrs
mov
xchg
inc
ret
or
mov
pop
pusha
mov
mov
in
lea
mov
mov
int3
cmp
sahf
add
jo
jb
ds
add
dec
aam
fwait
dec
and
shr
call
xchg
and
adc
jp
mov
pusha
push
pop
jge
push
inc
lret
loopne
dec
dec
jns
add
xchg
inc
cwtl
dec
pop
or
xor
dec
add
shll
jg
add
xchg
xor
imul
lods
sub
cmp
dec
or
mov
outsb
mov
mov
push
add
das
pop
testl
stc
fimuls
sub
or
dec
and
dec
xchg
jle
sarb
push
adc
jb
sbb
mov
add
stos
fistl
xchg
adc
fs
jne
push
cld
jbe
orb
add
out
jle
push
mov
incl
dec
repnz
add
sbb
shll
xchg
mov
dec
divb
pop
nop
push
insb
pusha
inc
outsl
xchg
xchg
loop
jne
add
mov
out
ret
int
pop
pushf
add
cli
add
adc
xor
incb
dec
and
fisttpl
mov
inc
daa
xlat
mov
cmovg
jae
sar
sbb
sub
lock
sbb
stc
mov
add
or
inc
shlb
nop
test
lahf
add
mov
push
pop
mov
mov
shl
mov
divb
pop
mov
add
pop
test
and
or
aam
sarb
mov
cld
daa
leave
fcoml
mov
pop
jae
mov
xchg
shl
testl
jle
lret
into
les
and
mov
jae
xlat
cli
xchg
or
mov
cmp
pop
adc
and
dec
ret
add
dec
pop
je
mov
pop
or
dec
test
add
daa
add
jp
mov
loop
add
dec
test
fists
adc
rcrb
jecxz
adc
add
sbb
jne
pusha
add
outsb
mov
repnz
repz
cltd
lea
jmp
cli
mov
pop
or
and
in
movsb
aas
notl
in
add
shl
pop
add
xor
leave
lahf
mov
add
aas
test
sub
insb
lock
in
mov
xchg
adc
gs
loope
lock
xchg
inc
aad
push
ds
andb
add
sarb
test
fmull
push
cmp
add
add
add
gs
xorb
sti
pop
pop
mov
jle
daa
loope
sbb
sub
adc
pop
cmp
push
dec
xchg
cmpsl
add
pushf
out
imul
int3
adc
mov
faddp
pop
cmpsl
int
push
lds
inc
and
add
add
add
ficomps
repnz
push
aam
into
jae
push
xor
add
xor
sub
lock
cmp
mov
pop
iret
stos
daa
jge
leave
sbb
js
int3
xor
jo
add
test
cmp
jp
mov
pushl
aaa
cmpsl
out
test
shlb
pop
imul
ret
stc
es
gs
mov
out
maxps
popa
jg
cmc
and
mov
lds
mov
adc
test
int
add
repnz
sbb
lahf
arpl
add
rorl
adcl
imul
xchg
add
outsb
push
lcall
inc
mov
pop
leave
lret
js
cs
dec
leave
add
pop
gs
pusha
sub
xor
mov
add
test
cmp
add
push
push
repnz
je
and
xor
ret
jecxz
rcrl
sub
mov
or
pop
mov
popf
addb
in
add
ret
das
faddl
lcall
sarl
xor
xorb
jo
add
xor
flds
ret
xlat
pop
cli
mov
add
push
movsb
fnstsw
adc
ja
je
hlt
xor
gs
lods
inc
sahf
movsb
out
nop
pop
leave
dec
dec
jge
inc
pop
jb
es
add
inc
mov
jo
mov
pop
cmp
jecxz
fcoms
jp
fstpt
sub
inc
inc
or
mov
mov
xchg
jno
inc
push
sbb
fldl
jne
fldenv
add
push
lcall
sbb
and
addr16
pusha
adc
iret
xchg
adc
lret
xchg
adc
adc
int3
mov
icebp
arpl
test
mov
mov
movb
add
mov
je
sub
sbb
mov
fwait
scas
shlb
daa
or
inc
cmp
mov
xor
xchg
lock
adc
pusha
mov
jg
push
mov
xchg
lret
cmp
mov
sub
jb
sahf
mov
call
pop
pop
jns
test
xor
data16
aas
lahf
and
xchg
mov
mov
mov
stc
pop
or
push
scas
mov
imul
roll
aam
push
jle
inc
addl
in
das
adc
popa
xchg
in
inc
mov
int
dec
ja
add
les
sbb
packsswb
mov
sub
addb
pop
xor
mov
sbbb
xor
cmpsl
sbbb
push
call
xchg
add
movsb
pop
adc
xor
in
inc
adc
or
lcall
sbb
fidivrs
nop
loope
test
pop
xchg
cmpb
call
aad
adc
xchg
pop
cmc
mov
ds
add
sub
pop
mov
jle
xor
stos
clc
and
or
aam
call
into
loopne
mov
inc
mov
jno
pop
shrb
addr16
pop
ljmp
ret
pusha
or
add
icebp
rol
mov
and
and
outsl
movsb
je
jmp
repz
or
pop
sub
in
mov
out
inc
outsl
cmp
mov
cltd
push
popa
cmp
cmpl
mov
sbb
mov
in
rclb
xchg
mov
jno
sahf
dec
sub
adc
lods
cmp
fdivs
push
inc
test
mov
inc
rcll
test
push
xchg
pop
and
add
inc
jecxz
add
hlt
jl
rcrb
xchg
and
pop
add
mov
cmpsl
rolb
shrb
push
push
or
adc
mov
xchg
mov
test
int3
sub
outsl
add
lret
add
xlat
lock
push
outsb
push
inc
cmpsl
mov
xchg
pop
fnsave
lret
xlat
inc
aas
xchg
push
pop
xchg
push
xchg
xor
xchg
mov
faddl
and
mov
shll
mov
dec
sbb
or
iret
ret
mov
mov
push
mov
push
aas
push
mov
ret
push
sbbb
mov
jb
xchg
ret
add
fwait
lds
mov
add
pushf
fsubrl
stos
cmp
or
test
mov
les
repz
fdivrs
nop
in
mov
ds
fcomps
add
pushf
or
mov
push
and
rcrl
insb
js
cmp
or
rorl
xor
and
insb
adc
lds
js
movsb
inc
cwtl
and
cltd
out
inc
cmp
inc
js
fadds
test
cmp
mov
stc
fimuls
cld
mov
fdivs
fs
inc
mov
in
mov
enter
cld
mov
dec
xchg
in
lret
and
fdivl
pushf
jl
xchg
adc
popf
pop
add
xchg
test
push
call
add
dec
jns
adc
mov
mov
adc
lahf
dec
repz
mov
sbb
inc
lock
popl
enter
adc
inc
push
inc
xor
rcll
adc
in
mov
fs
imul
ljmp
insl
inc
loopne
mov
loopne
push
fs
test
add
xchg
xor
dec
push
loopne
push
jge
or
dec
inc
orb
push
arpl
push
or
int3
mov
loopne
mov
cmp
inc
xchg
dec
adc
iret
and
sbb
or
bound
orb
dec
dec
inc
jl
testl
dec
cltd
les
sub
test
inc
hlt
fs
mov
mov
adc
xchg
test
and
xchg
push
les
adc
adc
lret
add
push
mov
push
xor
dec
pop
sub
jl
stc
or
sbb
adcb
push
ds
jecxz
inc
jle
mov
xchg
les
mov
stc
and
sub
and
inc
pop
std
inc
xor
push
or
xchg
jno
nop
je
inc
js
adc
outsl
xor
movsb
or
cmp
sub
inc
call
jle
xlat
loope
dec
repnz
or
sbb
lock
add
xor
nop
cmp
sub
mov
cmp
cmpsl
add
ffreep
pop
push
lods
out
jb
add
int
leave
xor
hlt
mov
adc
or
and
nop
pop
push
cmp
scas
insl
xorb
mov
int
adc
and
cli
add
push
dec
loopne
xchg
imul
add
out
lret
les
pusha
lock
cmp
adc
jl
into
push
pop
enter
movsl
clc
pop
add
pop
push
daa
addb
add
call
lods
mov
inc
test
mov
repz
sbb
imul
pusha
jl
xchg
add
out
add
push
add
push
add
lret
jae
rclb
lret
push
stos
arpl
add
sbb
std
rol
aad
xor
pushf
or
mov
jns
xorb
cmpsb
icebp
xchg
sbb
insb
cli
xlat
adc
adc
sub
addr16
push
add
dec
shl
pop
push
cli
in
dec
dec
enter
fisttps
dec
jno
sahf
jle
test
in
sub
pop
add
jnp
adc
inc
dec
out
fsubl
inc
mov
fisttpl
add
movsl
and
dec
mov
dec
ljmp
dec
mov
inc
mov
xor
popa
fnstcw
pop
fimuls
sbb
in
shlb
and
jge
and
jmp
cmp
or
dec
mov
push
orb
inc
xchg
sbb
pop
xchg
popa
inc
inc
push
out
add
pushf
push
sub
lret
aam
jp
sbb
loop
inc
mov
cmp
stc
push
mov
jle
xchg
fcoml
and
jecxz
cmpsb
jae
sbbb
shrl
mov
mov
ljmp
adc
add
mov
divl
inc
adcl
jbe
scas
cli
mov
js
pop
xorb
roll
pop
mov
mov
sahf
adc
je
add
jp
pop
stos
fcom
mov
add
vmovdqa
jo
mov
adc
or
pop
jge
push
xchg
inc
je
or
xlat
or
punpcklwd
mov
xchg
and
and
and
xor
xchg
adc
pop
in
and
xchg
xor
addr16
push
xlat
mov
adc
xchg
inc
arpl
adc
mov
or
daa
nop
subb
cltd
xor
or
adc
and
dec
fsubs
shll
aam
ror
mov
adc
and
dec
xchg
int
int3
inc
lret
ret
mov
dec
inc
adc
add
out
mov
add
lret
xchg
fnstsw
aam
in
rcrb
dec
mov
aad
fldl
pop
mov
cmpsl
fs
aas
inc
pop
mov
dec
mov
leave
pop
clc
rcl
test
cltd
or
add
cli
and
sbb
jg
and
ret
subb
sbb
adc
add
mov
mov
cmpsb
push
cmp
add
jmp
mov
and
push
add
test
js
scas
pop
cmp
roll
xchg
adc
mov
sbb
sbb
loopne
or
jbe
sub
sbb
lret
cmp
inc
shlb
and
xchg
pushf
add
das
cmp
sbb
pop
mov
cmpsl
and
adc
orl
cs
adc
mov
push
mov
or
pop
stc
mov
add
or
inc
and
insb
lcall
push
cmp
test
adc
pop
rcrb
mov
ja
xchg
add
pusha
sbb
call
imul
jg
sub
and
loopne
mov
mov
sub
pusha
xchg
and
shr
out
fadd
xchg
adc
xchg
call
cmpl
iret
push
flds
xor
push
sar
out
xor
outsb
xor
int3
jle
add
leave
push
stc
ja
mov
mov
lea
fiadds
xchg
mov
data16
mov
mov
out
mov
jne
mov
js
adcb
push
outsl
jmp
or
sub
fmul
jge
add
and
int3
xchg
cmpsb
add
xor
jb
push
jno
dec
rcll
push
pop
dec
inc
push
add
adc
loop
add
mov
add
mov
push
add
xor
lcall
jl
cltd
sbb
add
nop
aas
mov
pop
je
pushf
scas
cmp
cmp
adc
add
mov
sbb
mov
std
dec
fldl
nop
popf
push
aam
and
movsl
cmp
ja
sbb
lods
ret
ja
push
jb
or
setp
insl
cs
add
xlat
shlb
mov
add
add
out
add
cmp
pop
sub
sub
andl
ret
loope
sbb
out
test
push
pusha
xor
push
xor
test
add
aaa
hlt
lods
fwait
sub
call
adc
mov
jns
mov
adc
add
push
mov
inc
mov
dec
decb
push
add
aam
movb
js
sti
add
psllq
repnz
movsl
in
cwtl
adc
test
xchg
pusha
add
fwait
enter
pop
sbb
divl
xor
js
repz
icebp
add
pop
imul
mov
fadd
lahf
push
add
push
sbb
mov
ss
or
fcmovbe
out
cli
sub
test
sti
lock
add
or
imul
add
fcoml
or
rcrb
inc
inc
sbb
js
pop
jnp
roll
xor
add
jp
loop
outsb
mov
mov
popf
nop
adc
add
scas
ljmp
jnp
push
test
xor
rclb
mov
lods
mov
xchg
pop
pop
fwait
or
loop
xor
fs
aaa
or
pop
das
dec
mov
cwtl
testb
clc
or
jno
loope
clc
mov
dec
sarb
jecxz
movsb
int3
adc
addr16
sub
into
pop
bound
icebp
sbb
stos
pop
mov
adc
dec
and
lret
jo
add
cmc
ror
jle
sbb
repz
in
sbb
pop
ret
aaa
fcomps
push
add
pop
adc
in
hlt
mov
mov
and
lods
jo
fwait
xchg
loop
push
push
adc
add
add
jns
iret
sbb
adc
add
jecxz
or
mov
mov
add
sub
sbb
mov
cs
adc
test
xor
push
sub
arpl
inc
adc
leave
sahf
ds
pusha
sub
xchg
adc
sbb
add
mov
and
jmp
jb
sbb
mov
push
add
int3
xchg
mov
dec
mov
pushf
and
push
pop
es
hlt
cmpsb
cmpsl
rcr
add
xor
mov
jecxz
cmp
sti
adcb
jae
sub
out
inc
add
jle
pop
add
cmc
cmpsb
ret
je
add
adc
add
fstl
in
add
inc
or
sub
mov
push
sub
cld
cmp
outsl
lret
shll
pop
aas
jns
and
pop
cmp
mov
xorb
add
and
movsb
dec
push
pusha
jo
out
adc
jno
or
mov
xchg
adc
pop
rcrl
in
add
sbb
pushf
add
shll
ret
jmp
add
push
test
inc
add
adc
fists
lcall
xlat
sub
sbb
mov
dec
push
movl
mov
lock
and
add
in
cmpsl
add
hlt
rcrb
push
mov
dec
mov
out
out
add
cs
gs
loopne
pop
push
repz
and
scas
flds
enter
add
jbe
test
or
sbb
jae
xor
sbb
mov
or
push
and
shll
mov
loopne
xor
pop
shrl
lret
jbe
sub
pop
add
call
je
push
mov
test
sbb
add
mov
je
push
into
sbb
pop
pop
and
jp
cs
cmpsl
xchg
testl
imul
lret
insl
add
pop
fisubrs
or
xor
sarb
loope
mov
lret
je
out
jo
addl
dec
push
xor
jl
push
xor
mov
inc
cmp
stos
jg
sub
jmp
out
xchg
aad
jge
ret
movl
adcl
int
adc
lret
loopne
add
fsqrt
je
push
das
popa
and
andb
lret
pop
xchg
mov
push
clc
int3
push
je
push
or
dec
or
movsl
xorb
outsl
and
and
inc
movsb
shlb
lock
push
mov
push
jae
incb
pop
cwtl
push
pop
sarb
loopne
mov
leave
pop
add
mov
les
xchg
jo
loope
or
lock
or
sub
jne
adc
sahf
imul
add
outsb
adc
aad
test
cld
mov
sub
cmp
xor
hlt
push
out
ss
clc
arpl
jge
xor
loopne
hlt
loopne
cmp
mov
enter
push
add
subb
mov
or
mov
push
adc
jl
cs
push
jne
and
push
pop
and
into
dec
mov
test
loope
and
jmp
add
pop
add
dec
and
cmp
or
loope
jge
push
jne
and
aad
loop
out
pop
sbb
cwtl
mov
mov
fldl
adc
popf
jnp
or
adc
and
rorb
adc
loopne
popa
and
add
pop
sub
lea
cmpsl
xchg
xor
psrad
je
mov
aas
add
xchg
pop
bound
xchg
or
outsl
and
sbb
icebp
ret
cli
mov
mov
shlb
shl
fwait
inc
ret
add
push
clc
or
dec
fs
add
adc
pop
cs
add
imul
cmp
cmp
jne
subb
jmp
inc
sbb
cmp
or
push
or
add
adc
adc
stc
add
pop
pop
mov
mov
les
or
je
pop
shl
mov
mov
xorl
push
leave
movsb
out
es
insb
push
shl
pop
jb
add
jle
adc
bound
lods
lea
pushf
adc
xor
cmp
pop
push
push
cli
movsb
xchg
fs
loope
cmp
mov
mov
mov
mov
dec
cmc
in
lcall
in
xchg
test
push
push
pop
popa
dec
ret
sbb
fdiv
mov
cmp
jae
fistl
push
data16
push
sub
out
sbb
les
popa
dec
add
adc
push
ret
or
cmp
and
adc
xor
ficomps
ja
movl
adc
pusha
mov
jecxz
sbb
and
dec
sbb
push
or
pop
and
jne
xor
jecxz
jae
xor
lods
pop
aam
or
sub
addb
fcomps
sub
or
rorb
pop
cmc
outsl
int
aam
daa
in
andb
push
loope
mov
mull
test
test
sbb
xor
or
aad
add
jge
out
adcb
mov
outsl
and
adc
mov
mov
add
insb
data16
sbb
mov
sub
sbb
popa
sbb
mov
push
adc
pop
xchg
fisttpl
push
pop
hlt
shll
and
push
inc
pop
and
mov
pop
mov
xor
push
test
sub
subb
xlat
mov
js
std
and
mov
cmp
sub
cmp
scas
inc
dec
mov
jno
and
cmp
xor
lds
xor
cmp
jb
xor
cmp
adc
jns
jmp
inc
push
mov
xor
ffreep
sub
clc
dec
push
and
sub
icebp
sbb
cli
and
pusha
imul
mov
pop
mov
xchg
aaa
mov
xorl
mov
and
mov
mov
or
mov
inc
mov
and
and
push
sub
test
mov
mov
mov
inc
lods
and
push
stos
or
inc
mov
and
inc
jp
mov
push
aam
rolb
push
or
nop
subb
mov
xor
mov
andl
mov
bnd
ljmp
scas
adc
jno,pt
inc
cmp
out
jo
shlb
adc
dec
xor
int3
inc
hlt
adc
mov
add
insl
daa
insb
add
xchg
and
xor
insb
rolb
icebp
add
out
inc
dec
lods
int3
enter
js
mov
cltd
push
ror
sub
and
xchg
xor
je
adcl
clc
mov
add
mov
repnz
or
aad
cmp
jp
mov
jno
flds
ja
jnp
jl
or
sbb
popl
mov
or
loop
inc
inc
pop
mov
and
adc
pcmpgtb
xchg
out
mov
insb
sub
mov
subl
rorb
pop
pop
dec
and
fs
fbstp
mov
scas
lods
add
out
adc
lret
mov
sbb
pop
fadds
dec
sub
addr16
sbb
add
daa
test
iret
out
lahf
jne
and
adc
fidivrs
jmp
add
lock
or
clc
orl
xchg
mov
add
addb
sub
mov
and
xchg
jle
add
jbe
sub
pop
adc
or
sbb
sub
push
mov
test
pop
imul
sbb
pusha
cwtl
inc
js
dec
push
test
xor
adc
outsb
inc
fsub
nop
in
aad
je
adc
or
leave
lea
or
enter
add
iret
int3
jbe
insb
test
mov
sbb
out
dec
add
mov
adc
loope
push
push
inc
xlat
adc
and
add
adc
adc
inc
rcrb
and
testb
jb
mov
loopne
mov
daa
xor
aad
add
add
push
fists
loope
add
insl
dec
and
or
inc
call
dec
or
aad
add
les
and
mov
jno
pusha
test
mov
or
arpl
fsubs
les
and
sbb
dec
fistpl
or
add
jnp
or
test
popa
pop
pop
jge
shlb
or
fsubp
out
movsb
jb
and
adc
add
fs
add
sbb
inc
fildl
add
adc
dec
aad
ja
fadds
pop
xlat
push
nop
mov
rorb
rcll
pop
lahf
sbbb
int
pop
call
sub
je
imul
insl
adc
jno
inc
xlat
sbb
inc
add
add
loope
call
adc
addb
push
adc
fmuls
sbb
fcoms
jecxz
fdivl
jnp
sbb
or
je
out
ja
sbb
orb
dec
lret
ret
dec
lock
arpl
xor
or
imul
dec
pop
dec
lock
dec
mov
pop
subb
xlat
pop
insb
clc
sub
and
dec
fdiv
jno
ja
loop
lret
faddl
dec
popa
mov
add
mov
rorb
sub
cmp
jns
addl
imul
add
lock
push
dec
fstps
mov
mov
mov
xor
repnz
cltd
shr
mov
sub
lcall
aam
aas
or
add
out
jp
cmp
add
andl
jmp
cmpb
add
ja
in
pop
icebp
xor
add
shrb
jp
enter
pop
cmpsl
call
mov
sti
mov
add
push
sbb
test
adc
xor
adc
xchg
aad
xchg
in
xor
clc
add
lea
and
lret
repz
jns
jmp
cmp
jae
pop
cmc
fcmovbe
adc
push
pop
sarl
adc
insl
lods
js
pop
inc
dec
bound
push
xor
cmp
add
data16
adc
in
adc
sbb
call
xor
test
xor
push
pop
jnp
add
pusha
xor
mov
add
es
xor
shlb
leave
je
test
mulb
mov
add
pop
loop
dec
inc
pop
jno
push
jp
ret
add
adc
loop
mov
fsts
ret
frstor
test
jmp
and
push
daa
stc
lods
loopne
scas
in
int
push
in
sbb
call
in
loop
sub
shll
or
push
nop
les
leave
push
or
and
iret
jmp
xorl
pop
inc
clc
or
and
les
popa
lea
xchg
sbb
sbb
lds
adc
shlb
arpl
push
mov
add
sti
ss
clc
adc
loopne
setbe
mov
sub
nop
test
dec
adc
mov
lock
cs
push
jae
insl
js
repz
nop
adcb
cmp
ss
and
xchg
push
ret
adc
inc
mov
inc
repz
or
jbe
xchg
adc
aas
xchg
sbb
mov
or
and
in
and
or
mul
push
mov
mov
add
and
int3
jne
nop
aaa
addb
cmp
fstl
andl
pop
shll
loope
inc
mov
sbb
les
fidivl
push
mov
add
xchg
inc
in
mov
add
test
lret
xor
ret
imul
loope
sub
sbb
insb
jmp
sub
sbb
or
mov
mov
fwait
add
dec
int3
imul
xor
fnstenv
mov
pop
ret
divb
jo
lret
add
jno
xor
rclb
pop
mov
mov
and
sahf
cmp
dec
jo
xor
mov
movb
or
cmpsl
pushf
inc
cmp
add
sub
xchg
add
dec
or
in
stos
xlat
pop
push
push
sahf
outsl
add
data16
xor
insb
in
adc
sbb
mov
adc
pop
xor
sbb
sub
add
push
mov
dec
cwtl
pusha
add
adc
sarl
xor
aad
mov
jno
pop
or
jl
jl
cmpsb
xor
sub
or
int3
or
pusha
cmp
sub
dec
add
adc
mov
int3
cltd
push
or
or
into
mov
sbb
idiv
push
scas
add
jb
dec
loope
inc
inc
dec
leave
sub
gs
outsb
mov
xlat
jle
sub
mov
lods
or
cmp
loopne
mov
call
ret
xor
call
fadds
mov
js
and
xor
push
test
mov
xchg
pop
pop
enter
pushl
xor
shr
gs
je
cmp
jmp
leave
nop
jbe
adc
xlat
adc
xorb
inc
jno
pop
fcoms
jbe
mov
fadd
jmp
cmpb
repz
fidivs
jmp
or
dec
pop
jp
loopne
loop,pn
mov
pop
xor
push
and
cs
mov
testb
cld
shl
das
scas
and
adc
rcr
lods
sub
and
jo
dec
rorl
enter
int3
enter
pop
inc
inc
adc
aam
stos
lret
mov
push
add
push
xchg
cmp
mov
addr16
fadds
inc
dec
or
loope
in
xor
outsb
and
inc
add
mov
jo
push
dec
pop
sbb
xor
push
inc
lods
pop
add
addb
test
mov
in
stos
add
push
negl
or
lock
sbb
mov
cmp
xchg
xchg
and
ret
loope
dec
popa
mov
add
sub
add
fmull
cltd
xor
ss
lea
addr16
test
sbb
jl
cs
add
sub
adc
repz
and
pop
in
xchg
fs
sbbl
fbld
inc
jl
jne
lock
push
and
lret
xor
test
pusha
jg
lret
and
jbe
jo
mov
sti
cld
movsb
xchg
insb
or
dec
stos
add
cmp
inc
add
aad
enter
orb
lock
jo
adc
bound
xchg
sbb
mov
xchg
insl
cwtl
mov
cmp
test
inc
push
sahf
sub
or
dec
mov
mov
test
lds
pusha
dec
and
sbb
in
test
test
test
mov
push
xor
push
sarb
pop
push
add
mov
cld
jmp
pop
loopne
or
xchg
fidivrs
push
dec
stos
add
push
fildl
add
inc
icebp
jg
mov
mov
cmp
inc
jp
dec
mov
and
cwtl
ds
cli
popa
push
orb
out
scas
jo
mov
xchg
xchg
cmp
xchg
inc
stos
mov
mov
fadds
adc
into
cmp
mov
daa
sbb
ret
jge
xor
xor
dec
cmpsl
jl
and
bound
mov
inc
insl
xchg
nop
shl
add
lea
pop
pop
fists
mov
jo
and
jno
lret
pop
enter
mov
xor
sub
mov
adc
das
or
jp
in
fucomip
aaa
adcb
adc
jmp
add
les
dec
mov
pop
push
in
dec
mov
jns
push
cld
sbb
scas
push
mov
in
mov
mov
cmp
stos
jmp
clc
adc
and
and
pop
mov
in
jnp
and
mov
xchg
sbb
mov
mov
jl
negl
pop
mov
xor
add
stos
iret
or
and
shrl
in
xlat
add
xor
mov
rclb
out
int
lcall
aad
add
dec
ds
loopne
scas
ret
lea
mov
inc
lcall
add
in
or
dec
mov
scas
or
andb
add
add
hlt
inc
xchg
add
push
push
sarl
out
mov
pop
mov
cmp
sub
fmuls
jns
add
xchg
int3
add
in
xchg
mov
enter
or
repnz
jnp
jns
gs
add
xor
call
inc
roll
adc
push
lds
enter
lds
pop
or
in
imul
fistpll
sbb
ret
push
fdivrs
inc
add
cmp
dec
in
repz
mov
ds
shr
lcall
inc
fiaddl
push
xor
or
mov
pop
mov
in
add
hlt
outsl
sub
sbb
dec
popf
add
jo
adc
mov
clc
or
pusha
xor
adc
lds
mov
outsl
and
mov
arpl
adc
jl
inc
jg
divps
out
mov
pop
pop
push
adc
add
and
mov
sti
leave
loope
sbb
add
leave
fnsave
mov
lods
dec
add
cmp
stc
lcall
ss
je
add
dec
lods
out
xchg
or
xor
pop
cmp
push
jno
outsb
and
cltd
cwtl
jo
sbb
lret
les
mov
sti
mul
pand
jns
loopne
mov
add
xor
dec
sarb
jl
enter
xor
jl
shrb
jo
mov
xor
out
add
xchg
aaa
pop
jae
push
adc
pop
in
jo
and
ljmp
loopne
mov
mulb
push
mov
enter
adc
addl
pushf
movsb
pop
ja
add
pushf
xor
sub
pop
cltd
dec
loope
imul
xchg
push
pop
mov
adc
mov
dec
inc
icebp
nop
dec
lret
cmp
stc
pop
jo
insl
es
xchg
inc
add
sbb
jle
mov
je
or
rorl
int3
or
aaa
stos
dec
xchg
pop
jg
cmpb
mov
add
repz
mov
insb
iret
sbb
call
loopne
fiaddl
push
mov
xor
or
pop
rcll
inc
mov
sub
pop
xor
sar
jmp
and
pop
and
repz
add
movsl
pop
insl
mov
add
cmc
and
push
ljmp
xchg
shll
jl
xchg
push
test
hlt
movb
loope
push
rcrb
pop
test
hlt
cmpb
int3
imul
fsubrs
lret
notl
jmp
xchg
sub
psrlw
dec
add
sbb
inc
int
sbb
cld
xor
mov
lds
movsb
mov
insl
pusha
push
dec
cmpsl
add
fucomi
and
or
sub
or
jmp
push
dec
mov
lret
sub
repnz
stos
push
enter
pop
rcrl
imul
push
shl
rcll
push
pextrw
fcoms
or
sbbl
add
rcl
push
sub
test
sub
nop
in
or
xor
inc
cmp
or
xchg
stos
mov
mov
mov
mov
rcrb
adc
stos
ds
in
xchg
push
mov
nop
sbb
mov
add
xor
inc
push
out
lea
int3
xor
and
mul
xchg
scas
and
pop
les
mov
ds
aaa
inc
and
imul
loopne
mov
xchg
sub
cmp
stc
outsl
dec
dec
ljmp
or
jae
mov
imul
xchg
insl
sahf
les
or
das
fwait
test
addr16
stos
or
jl
pop
dec
mov
mov
popa
into
cltd
insb
insb
and
inc
sub
jno
inc
jnp
nop
cmp
jmp
jne
test
daa
outsb
and
add
add
mov
mov
inc
jl
pop
mov
add
rol
loope
roll
add
mov
and
xor
les
jg
inc
jb
pushf
and
mov
add
es
mov
fnsave
test
sub
mov
sub
add
js
ds
stc
mov
enter
test
push
inc
nop
popf
add
test
jb
add
daa
add
ja
leave
dec
xchg
sbbl
sub
movsb
xor
xchg
and
jo
in
xchg
stc
jbe
cmc
sbb
pop
inc
lods
divps
cmp
pusha
pusha
and
roll
stos
mov
jl
xorb
aaa
and
push
movsl
insb
cld
xor
xor
stc
xorb
pop
insb
outsl
sbb
mov
js
mov
scas
dec
xlat
push
rcrb
push
rorl
dec
cmpl
pop
notb
popf
imul
mov
mov
cmp
jle
push
call
inc
popa
cmp
or
xlat
ffreep
jmp
daa
mov
add
push
sbb
mov
loopne
sbb
add
inc
lods
in
inc
mov
or
roll
push
add
dec
pop
cld
dec
sarl
ja
shlb
or
shrb
sbb
or
add
rcrb
inc
mov
add
jge
test
fmul
push
add
test
leave
clc
lds
push
test
sbb
jle
call
mov
clc
gs
or
decl
xor
pop
decb
push
dec
cmpb
xor
daa
push
sbb
call
xchg
les
insl
hlt
add
jmp
dec
xchg
add
es
jno
cmp
push
and
jo
mov
and
and
adc
shl
xchg
jl
inc
inc
je
mov
xor
inc
add
stc
and
push
inc
add
and
push
xor
jnp
xor
xchg
call
pop
or
lea
fildl
add
aad
test
mov
xorl
shlb
test
jmp
mov
add
sbbb
int
or
adc
call
aas
loopne
dec
add
jp
aaa
pushf
and
and
cmp
stos
cli
movsb
add
xchg
xor
pushf
leave
and
cltd
adc
mov
js
cmp
adc
ret
push
xchg
mov
stc
lock
xchg
repz
sub
test
ja
push
inc
lret
lods
cld
adc
cmpsl
popa
or
jmp
dec
sti
sbb
roll
and
cmp
push
in
aaa
jecxz
mov
or
mov
add
jbe
xchg
add
int
movsl
jns
mov
add
add
dec
mov
jmp
es
mov
add
subb
mov
xlat
jge
lods
xor
and
nop
add
testl
push
push
xchg
add
xchg
mov
sbbb
ja
aam
addb
mov
sub
sti
vaddss
cmc
pop
cmp
or
xor
test
cmp
add
push
or
push
out
inc
xor
adc
adc
fcompl
popa
imul
les
or
decl
inc
mov
or
adcb
cmp
sbb
or
add
xchg
nop
repnz
cld
or
lods
adc
in
pop
pusha
in
jno
push
mov
mov
mov
ds
push
cmp
cltd
sub
pushf
and
cwtl
call
and
cwtl
rcll
roll
jp
cmp
lret
pop
ja
mov
gs
jns
adc
movsb
ret
xchg
stos
inc
or
je
push
and
xor
popa
sti
data16
pusha
sub
add
mov
push
and
push
add
mov
sub
fcoms
cmp
dec
enter
mov
mov
call
cs
mov
out
call
lea
outsb
mov
add
movl
stos
aam
dec
pusha
lcall
cmp
pop
mov
cmp
stos
cmpsl
mov
adc
outsb
or
rolb
fdivrs
add
and
lock
pop
push
xchg
xor
add
mov
cwtl
pop
stc
sbb
mov
js
ljmp
push
sub
sub
sbb
test
and
inc
dec
movsb
pusha
sub
stc
stc
push
adc
out
aas
cld
jno
jl
lods
dec
insb
inc
jl
movsl
adc
adc
mov
orl
adc
mov
int3
in
xlat
in
jl
bound
and
iret
in
ja
mov
push
insb
mov
jbe
pop
out
sub
adc
repz
fildl
xchg
lret
pushf
nop
aas
pop
cld
es
sbb
test
pusha
fwait
mov
and
push
ret
add
pop
mov
clc
mov
sbb
ret
aaa
sub
or
cmpb
sbb
movsb
xor
dec
add
pop
sub
jno
add
in
jl
bound
xor
in
add
sub
test
cli
arpl
std
dec
adc
push
dec
mov
loop
xor
mov
xchg
xor
sbb
mov
orb
lock
popa
add
popf
subb
dec
sub
or
sub
orb
cltd
pop
dec
lea
adc
test
mov
push
cmp
add
orl
cmp
inc
int3
push
aas
inc
cld
push
add
mov
insb
es
es
sbb
popf
sub
dec
add
loopne
cmp
xor
pop
xor
jb
add
and
jg
lds
push
add
mov
fiadds
and
adc
jecxz
inc
dec
push
mov
cmp
fst
cltd
test
les
insb
xchg
repnz
adc
add
stos
add
mov
add
cmpb
adcb
push
scas
es
fs
shl
xchg
and
add
in
sti
rolb
and
add
xor
mov
add
in
pop
add
adc
adc
push
pop
negl
out
add
mov
inc
clc
shrl
push
jae
outsb
mov
xchg
addb
or
mov
sbb
adcb
dec
dec
add
lcall
sub
fisttpll
sbb
jge
andl
add
sbb
adc
lods
leave
and
mov
push
add
dec
add
xchg
adc
paddd
xor
mov
xchg
mov
loop
shrb
add
repnz
clc
imul
lock
xor
mov
xor
inc
pop
jnp
enter
add
add
mov
cmpsb
inc
sub
push
inc
mov
fwait
xor
adc
adc
std
dec
mov
inc
jns
pop
mov
jmp
pop
shll
xchg
mov
stc
pop
outsb
loopne,pt
cmp
mov
test
or
inc
inc
mov
xchg
push
cli
xchg
inc
pop
mov
add
int3
lahf
cld
jge
lods
mov
test
inc
leave
add
jl
inc
xor
jle
cmp
jnp
mov
shlb
mov
scas
jae
and
xchg
mov
stos
cwtl
push
add
sbb
and
jbe
movsb
sub
inc
pop
aad
cltd
jl
les
inc
cmp
sarb
fsts
adc
pop
dec
lahf
pop
add
mov
arpl
rorb
pop
shll
adc
cltd
nop
add
test
sub
mov
nop
cmc
sahf
adcb
or
bound
fisttpll
jno
push
rclb
call
pop
pusha
dec
addl
popa
aas
fsts
stc
push
xchg
cmp
and
and
or
add
inc
mov
jmp
mov
and
xor
pop
push
inc
adc
lret
sub
cld
adc
jecxz
jecxz
cmp
mov
stc
add
xor
cmp
inc
rolb
add
lea
jmp
xor
adc
xchg
cmp
fimull
push
sti
les
popf
mov
daa
cmp
sarl
enter
and
loop
sbb
addb
pusha
xchg
push
pop
lahf
je
mov
scas
push
push
iret
stos
xchg
jl
mov
ja
sbb
and
fldl
jb
inc
popl
jl
dec
add
xchg
adc
daa
jl
jns,pn
and
ror
mov
sub
or
call
sub
cli
in
mov
les
movsb
inc
nop
rol
pop
negl
mov
shll
adc
dec
sub
push
push
sub
lods
inc
and
leave
inc
or
pop
jno
dec
and
xor
sbb
add
push
addb
enter
push
sbb
add
push
mov
in
pop
and
sbb
in
lods
cmpsb
cmp
mov
mov
sbb
mov
lods
imul
imul
fcoml
sub
xchg
add
lods
aam
push
nop
clc
fistpl
cmpsl
push
adc
mov
add
lock
xor
or
or
mov
jno
add
jl
and
ljmp
inc
lods
popa
imul
xor
dec
and
xor
mov
add
mov
fadds
or
repz
pop
ljmp
or
cmpsl
sub
cmovs
nop
movsb
or
xlat
stc
test
pusha
cwtl
adc
adc
and
pop
mov
pop
and
mov
mov
mov
loop
mov
push
flds
rolb
dec
xor
adc
xor
add
mov
test
xchg
stos
fidivrs
jl
jno
jns
sbb
popf
nop
dec
mov
cltd
inc
dec
clc
and
or
les
mov
inc
or
hlt
jg
jl
std
dec
push
sub
fsts
jnp
sub
push
je
and
cltd
cmp
and
dec
add
xchg
add
adcl
xor
cmpsl
add
xchg
mov
rcr
idivb
js
lods
adc
jae
push
pusha
sahf
sbb
xor
push
lods
enter
addl
je
sahf
xchg
lahf
jno
in
rcl
movsb
inc
sahf
dec
add
cmp
clc
push
xchg
nop
cmp
or
sbb
sub
nop
add
lods
int
je
inc
adcb
cmp
pop
mov
inc
out
icebp
loope
lds
sub
movsb
and
imul
mov
sbb
mov
or
in
adc
loope
js
dec
xor
icebp
bound
hlt
into
push
sub
inc
dec
xor
and
xchg
push
int
push
cmp
mull
xor
divps
sbb
lock
and
scas
lods
adc
add
xor
mulb
push
les
sub
loope
and
jns
repz
repnz
cmp
push
sbb
add
mov
mov
stos
andb
arpl
and
xor
cwtl
shll
push
jle
shll
test
add
je
stc
adc
inc
mov
mov
push
jo
cmp
mov
add
loopne
dec
stos
js
xor
bound
imul
sarb
fbld
xor
jmp
cmpb
add
fbstp
clc
enter
es
mov
or
mov
pusha
popa
mov
aaa
mov
xor
sub
stos
mov
pop
arpl
push
cli
add
mov
mov
adcb
or
sub
pop
movsl
mov
push
add
jbe
call
xorl
and
cmp
and
fisttps
cmp
lds
inc
in
xchg
mov
xor
or
pop
call
cmp
enter
addr16
shlb
add
sub
cltd
mov
add
cmp
testb
add
gs
repnz
hlt
mov
inc
xor
push
and
das
lods
and
lret
repnz
std
dec
dec
jo
mov
push
rclb
lods
aas
add
sar
cltd
in
adc
xchg
test
add
sbb
cwtl
mov
add
and
cmp
sub
pop
add
fmulp
mov
and
sbb
and
repnz
mov
xor
js
adc
scas
or
icebp
lods
andl
jnp
inc
sub
sbb
add
sbbl
cpuid
std
mov
lret
jl
iret
andl
adc
or
mov
adc
xor
add
test
pop
xor
mov
scas
xor
cmp
shl
and
jmp
jecxz
jl
mov
mov
std
test
dec
cmp
fisttpl
and
lods
jle
mov
add
jns
jl
jl
or
or
add
mov
mov
add
repnz
imul
add
push
ds
js
add
push
clc
mov
cwtl
add
xchg
lahf
ss
jno
add
out
jns
icebp
adc
enter
mov
insb
fisubs
add
lods
xor
dec
mov
jecxz
and
xchg
adc
adc
push
cmpsl
and
imul
jmp
js
pop
mov
mov
dec
hlt
loop
jo
xchg
sbb
add
or
dec
movl
call
mov
mov
jo
insb
and
in
aam
cld
pop
ss
adc
xchg
addr16
test
or
hlt
addb
or
int
sub
sarl
adc
inc
mov
and
push
add
mov
movsb
lods
adc
push
mov
sub
pop
jbe
subb
sbb
xor
xchg
js
clc
mov
sub
inc
mov
add
inc
mov
cmp
and
nop
or
mov
add
cld
push
call
mov
lret
sub
mov
aaa
or
adc
call
rorl
jb
xchg
lods
cmp
add
hlt
shll
enter
mov
xor
mov
add
mov
rcl
loopne
xchg
rclb
ret
sub
insb
mov
pop
bound
fsubp
adc
xlat
sub
fstps
popa
or
mov
push
add
pop
inc
addb
inc
es
enter
pcmpeqw
loopne
adc
enter
dec
fistps
mov
add
lods
shl
nop
mov
xchg
leave
mov
leave
je
mov
das
jae
or
adc
icebp
xchg
sbb
add
mov
dec
and
xchg
xchg
mov
stos
nop
mov
sbb
arpl
jle
lods
rcrl
adc
and
ror
inc
movsl
mov
out
and
or
lods
mov
mov
add
subl
outsb
and
fucomp
int3
int3
lock
jl
dec
icebp
rcrb
mov
aas
or
and
ficomps
fadds
ret
or
mov
pusha
movsl
pop
jo
fmull
pusha
dec
mov
addb
mov
leave
sti
mov
scas
xchg
cmc
xorb
test
clc
and
push
in
jecxz
aad
xor
mov
xchg
stc
lahf
xchg
push
xchg
mov
movsb
or
std
push
xchg
repnz
mov
and
dec
test
mov
add
or
add
daa
push
mov
pop
mov
xor
lods
dec
push
dec
sub
adc
mov
xor
push
push
lock
xlat
xchg
and
sbb
mov
cld
mov
stc
cmpb
push
rcl
inc
jl
push
repnz
pop
mov
add
xchg
push
xchg
jle
lock
adc
or
scas
pop
int
sbb
cmp
jnp
jg
add
mov
js
dec
or
push
sbb
cmp
ror
sbb
fdivrl
mov
or
xor
or
mov
std
loop
dec
rcl
push
mov
adc
push
sarb
sub
jno
cmp
sub
orl
push
mov
je
ret
mov
jp
sub
loopne
dec
adc
jo
nop
addb
cmp
test
cwtl
stc
and
adc
add
pop
cmp
dec
xor
and
enter
mov
xchg
shrb
imul
sbb
add
shll
test
xlat
scas
shll
jns
test
or
cmpsl
xor
jb
and
mov
addb
mov
rcrb
inc
cld
addr16
jle
add
and
clc
jbe
je
addr16
nop
pusha
pop
movsb
push
js
repnz
leave
xchg
xchg
lock
or
xlat
adc
test
sbb
mov
ret
in
test
fldl
cmpb
fwait
xchg
lahf
subb
cmp
aad
push
pushf
xchg
imull
mov
stc
je
pop
hlt
inc
xor
mov
add
add
test
jnp
cmp
mov
movsl
and
clc
mov
cli
fnstenv
mov
andl
xor
dec
or
inc
das
xor
add
sbb
inc
add
adc
dec
shlb
and
sbb
rcl
adc
push
mov
xor
lret
cmp
or
sbb
or
mov
mov
xor
push
enter
push
xchg
call
arpl
jp
pop
adc
roll
xchg
and
and
outsl
repnz
mov
pop
adc
movsb
pop
popa
nop
fsubl
fnsave
roll
or
sbb
adc
xor
xchg
dec
jo
mov
cmp
shrd
pop
popa
popa
adc
cld
adc
xchg
xor
inc
movlhps
movsb
sbb
mov
aaa
cltd
or
js
cmp
xor
out
xchg
iret
adc
mov
loop
test
mov
stc
hlt
sub
mov
lea
nop
daa
test
and
push
dec
mov
adc
popa
jle
cwtl
jb
repnz
push
pop
jo
sub
lods
or
or
sbb
cmp
xchg
pop
das
xor
mov
and
add
pusha
mov
outsl
lods
leave
sbb
xchg
push
mov
dec
mov
push
stos
test
xor
setno
push
andb
lds
imul
ret
fmull
mov
sbb
push
mov
outsb
in
loope
and
roll
dec
loopne
hlt
fwait
adc
jnp
mov
ret
add
les
cmpsl
sub
int3
adc
jns
inc
push
nop
bound
pusha
es
loopne
adc
loop,pt
dec
mov
flds
mov
pop
cmp
lret
dec
adcb
in
and
aam
cld
or
sbb
mov
fisubrl
sbb
and
mov
jl
nop
test
leave
cmp
fsubrl
fnstcw
movsl
inc
call
cwtl
adc
nop
xor
inc
push
xor
jecxz
rorb
and
cmp
xor
data16
mov
into
and
push
lds
pop
add
std
xor
adc
ja
fldcw
xchg
push
std
sbb
dec
jg
jl
adc
mov
lods
dec
jecxz
push
mov
push
les
and
in
and
cmp
push
inc
dec
mov
push
or
or
push
push
ja
rol
mov
aas
adc
inc
or
dec
jne
push
sub
mov
inc
jno
xor
lods
push
movsb
ret
sub
cwtl
adc
fsubl
cmp
je
add
pop
mov
push
adc
scas
add
xchg
mov
mov
or
out
cmp
add
das
jl
add
aaa
mov
and
in
or
push
stos
cmpl
jnp
jo
movsb
or
sub
loope
mov
aam
dec
sub
jbe
jo
jae
ljmp
enter
xor
mov
mov
es
cmp
and
xor
and
enter
and
sbb
add
dec
inc
shrb
jge
add
leave
testl
fldt
xor
pop
add
jo
lock
ds
popl
mov
add
xor
mov
and
or
movsl
mov
stos
loope
jle
xor
mov
pusha
sbb
add
jo
xchg
cltd
es
pushf
jl
jg
pop
dec
aam
push
lret
add
rolb
or
cmpsl
pop
adc
nop
dec
inc
xor
dec
scas
in
mov
das
push
and
in
add
ret
in
sub
test
sbb
loope
inc
mov
daa
lock
enter
add
xchg
cmp
mov
add
std
cmpsl
divb
cs
cmp
je
or
add
loopne
mov
sub
or
and
xchg
pop
mov
leave
movsb
test
jbe
repnz
addb
and
mov
ss
fistpl
inc
ss
nop
fdivrs
or
out
add
add
out
or
add
xchg
pusha
scas
mov
add
int
inc
imul
sbb
test
adc
enter
add
push
dec
xchg
xor
popf
xchg
call
jns
test
popa
mov
or
rorb
add
mov
pusha
js
inc
sub
clc
or
das
mov
js
rorb
leave
dec
lock
out
icebp
xor
nop
les
mov
sub
jo
jl
stos
xor
aas
pop
jmp
cmpb
js
push
in
jmp
adc
mov
les
adc
pop
inc
or
inc
js
sub
push
and
loope
adc
xchg
adc
sahf
fildl
movsb
inc
dec
add
xchg
in
jle
sub
je
inc
popl
push
test
loope
popa
mov
adc
xor
movsl
ficompl
mov
fsub
stc
add
sub
xor
mov
sbb
push
dec
dec
outsb
add
ror
adc
add
enter
fstp
dec
aaa
enter
pop
lds
or
mov
inc
push
jg
negb
add
jl
push
bound
sbb
in
bound
jae
sub
inc
jl
int
adcb
add
pop
mov
cmp
mov
add
iret
mov
jg
xor
dec
out
enter
pop
jge
fiadds
add
mov
adc
enter
inc
pop
mov
cmp
push
cwtl
aad
in
test
add
cli
dec
jp
jo
daa
xlat
mov
add
or
addb
rcrl
sbb
cld
add
out
lods
rcrl
loopne
aaa
pop
add
nop
and
call
jnp
and
mov
bound
insl
call
sbb
test
sub
add
push
xor
add
scas
rcrb
mov
cwtl
pop
in
mov
xor
sahf
sbb
adc
xchg
push
ja
fucom
mov
xchg
xchg
test
jg
or
lods
nop
repz
fs
hlt
and
mov
xchg
xor
je
shlb
out
int
cmp
test
or
push
add
test
jno
add
xchg
mov
in
sbbb
pop
pop
xchg
pop
pop
cmp
popf
fldl
loopne
xchg
scas
data16
andl
in
stos
push
loope
mov
inc
jmp
pop
inc
loopne
stos
add
lcall
std
test
adc
add
mov
adcb
aas
mov
jns
xchg
sbb
icebp
out
mov
icebp
mov
cmp
adc
test
insb
orb
pop
shrl
inc
popa
push
sbb
cmpsl
add
jne
xor
jno
fldt
mov
inc
popf
test
enter
push
jbe
and
js
in
mov
sub
inc
cmp
subl
int3
mov
mov
popa
stc
icebp
pop
or
cmp
xchg
xchg
iret
xchg
test
sub
add
lahf
fs
or
lret
cmpsl
adc
inc
dec
dec
pop
movsb
inc
call
mov
scas
shr
stc
sub
pop
dec
movsl
ficoml
dec
push
jecxz
hlt
add
or
jmp
xor
pop
adc
mov
and
rorb
adc
mov
cltd
cmp
ja
inc
jl
hlt
inc
ss
enter
jmp
xor
cmp
mov
jnp
out
push
and
fs
sahf
cmp
xor
dec
or
or
sbb
xchg
enter
sub
inc
mov
or
push
dec
push
mov
push
pusha
mov
scas
dec
ror
call
mov
add
inc
inc
and
jle
mov
aas
add
lods
add
xchg
orb
cwtl
add
mov
testb
push
mov
nop
inc
add
dec
stos
inc
add
inc
inc
dec
and
sbb
movsb
fs
nop
mov
mov
jbe
adcb
enter
xor
xchg
and
fcoml
jb
ja
mov
mov
mov
jl
bound
js
inc
inc
lea
out
insb
loope
loop
les
std
jno
add
dec
jae
mov
push
add
jg
fdivr
out
pop
nop
adc
pushf
stos
mov
add
push
mov
stos
ret
add
jae
inc
out
fsubrs
add
ret
fcompl
inc
and
jno
jns,pn
mov
cmp
cs
cltd
sub
mov
lock
aad
mov
clc
add
or
xor
add
sarl
imul
jne
lahf
add
mov
in
add
inc
loopne
add
xor
xor
and
ffreep
lods
xor
in
mov
mov
loop
inc
xor
in
xor
mov
and
ljmp
aad
mov
mov
out
inc
push
xchg
aad
sbb
adc
cmp
cli
mov
lods
fdivp
aas
xor
and
shl
sbb
xchg
and
stos
cwtl
ret
pop
mov
repnz
in
fldcw
and
sub
and
mov
rcl
xlat
hlt
int3
mov
fs
ds
pop
int
add
jmp
jmp
ret
pop
sub
les
or
mov
fcomp
xchg
cmp
push
dec
pop
and
iret
sub
in
xchg
dec
loopne
mov
scas
dec
mov
cmp
or
mov
repz
scas
fsubrp
push
mov
ret
add
fisubl
fmull
cmp
and
sub
fwait
jecxz
push
sti
mov
rorb
clc
xchg
mov
push
push
xchg
orb
jb
sbb
mov
cwtl
xlat
add
pop
xchg
cmpsb
sub
rolb
es
push
mov
adc
pop
test
or
jle
adc
jecxz
dec
lret
xor
inc
pushf
and
mov
nop
or
cmp
add
sub
xchg
add
test
push
fistpl
pop
hlt
mov
mov
dec
adc
out
sarb
loop
push
loopne
in
aad
sbb
ficoml
adc
pusha
test
bound
push
aam
mov
pusha
xchg
mov
xchg
and
mov
sbb
mov
pop
mov
adc
movsb
outsl
fbld
adc
sub
pop
adc
nop
cmc
push
xor
inc
cmpsl
jl
loop
and
scas
add
xor
and
xchg
mov
jmp
cs
popf
sub
add
cwtl
push
push
mov
xchg
add
add
rolb
push
add
lods
nop
cwtl
sbb
and
test
inc
cwtl
sbb
or
pusha
nop
sbb
mov
push
addl
mov
daa
jbe
sbb
push
xchg
sbbb
push
jb
sub
pop
mov
nop
mov
or
jmp
xor
push
xor
repnz
xchg
add
das
loopne
pop
shll
andb
inc
cltd
into
add
pop
mov
in
add
scas
mov
ljmp
rolb
cmp
mov
inc
rcrb
int3
mov
mov
pop
insb
push
xor
or
gs
outsb
sbbb
insl
out
sbb
xchg
shl
and
jbe
add
lods
pop
test
aam
stos
jge
inc
mov
wrmsr
rcrl
adc
loope
in
sbb
fcoml
mov
push
fiaddl
cmp
cmp
into
mov
push
inc
cwtl
aad
pop
mov
adc
dec
push
jbe
sahf
push
add
cwtl
out
mov
inc
inc
arpl
xchg
xchg
adc
cmp
xor
in
jecxz
cmp
mov
fstl
loopne
fyl2xp1
and
pop
out
int
call
insb
addb
push
inc
shll
in
icebp
add
cmpsb
test
enter
mov
and
and
jmp
xor
mov
lahf
push
add
popa
add
xor
call
pop
icebp
mov
loopne
push
pop
pop
and
in
sub
movl
xor
ret
mov
jo,pt
int3
pop
mov
and
call
pop
jg
fsubs
fs
xor
mov
pop
inc
jo
cmp
adc
lret
lea
mov
or
xchg
xorl
jmp
xchg
add
mov
xchg
mov
fimull
sbb
jno
mov
sahf
jl
mov
jle
loop
fiadds
repnz
add
hlt
adc
pop
scas
adc
sti
inc
mov
jae
lcall
jns
fnsave
lcall
xor
je
add
pusha
insb
mov
fstpt
add
adc
sbb
pop
mov
cs
or
push
mov
mov
xchg
push
arpl
out
dec
stc
xchg
iret
sbb
sbb
fiadds
jns
xlat
shlb
mov
xchg
pop
ljmp
xchg
adc
addb
ficomps
and
sub
xchg
xchg
insl
push
repnz
sub
lret
adc
xor
mov
and
sbb
sub
cmpsl
dec
cltd
add
in
into
pop
lods
popf
fistpll
test
adc
jp
xor
mov
jnp
ret
cmp
pop
test
jl
cmc
int
lret
in
jno
pop
dec
jp
lahf
add
sub
add
in
decb
icebp
fisubs
ss
push
fsubrs
call
and
rcll
popa
outsl
pop
cmpb
and
sbb
adc
jg
rorl
mov
sub
rorl
xchg
rcrl
data16
sub
sbb
out
inc
xchg
jae
lea
inc
adc
jo
cmp
aam
xor
cltd
add
sbb
xor
add
push
aas
sub
cmpb
ficomps
mov
pusha
cmp
add
xchg
scas
pushl
cmpsb
das
les
cld
dec
xchg
sub
mov
scas
es
test
shlb
sub
stc
and
cwtl
push
and
pop
push
mov
pop
lods
shrl
xor
or
insl
add
mov
xchg
jo
cld
in
sbb
insb
mov
ret
mov
bound
add
xlat
adc
daa
jmp
add
out
rclb
adc
add
les
daa
movsb
xchg
sbb
std
ret
add
pop
lret
push
lret
movsb
xchg
push
iret
xor
inc
add
xor
adc
add
daa
push
repz
scas
ret
movsl
nop
jae
push
aas
and
add
out
rcll
mov
jg
pop
add
in
jae
cmp
jbe
add
rcrl
xchg
subb
aas
and
ja
adc
cmpb
sbb
push
push
fcmovbe
js
cmpb
stc
sbb
xor
xor
lret
std
pop
mov
bound
dec
add
and
jmp
add
lock
in
frndint
xor
adc
inc
or
loop
ljmp
adc
and
push
popf
stos
inc
inc
inc
data16
fs
inc
outsb
jmp
push
add
bndldx
lahf
sbbb
push
imul
les
mov
add
fstpl
test
stos
and
mov
xor
xorl
add
adc
icebp
xor
cs
in
je
push
xchg
mov
or
jnp
addb
jbe
xor
xor
adc
loope
xor
rcr
gs
mov
insl
repz
fcomps
ljmp
adc
jb
rcll
pop
sbb
or
out
je
pop
into
or
ror
xor
loop
add
stos
lret
shrl
in
push
outsl
lcall
insl
push
cmp
push
mov
cmp
int
clc
in
adcl
dec
sbb
sbb
mov
adc
fcoms
push
pop
scas
arpl
push
loope
mov
jb
or
mov
aad
rolb
adc
cmp
jnp
insb
xchg
and
sbb
icebp
add
push
movsb
cmp
add
jno
sub
inc
mov
sbb
xor
jp
mov
inc
jb
xchg
cmpsl
add
xchg
sbb
add
insb
nop
andb
dec
pop
pop
clc
cmp
xorb
ficompl
or
adc
psllw
jle
pop
mov
mov
movsl
add
xchg
pop
mov
add
addb
push
cmp
sub
push
add
cli
sbb
and
add
jmp
xchg
bswap
sub
insb
lahf
sub
add
pushf
cmpsb
sub
int3
test
inc
add
push
cld
and
add
push
leave
fadds
add
out
add
ljmp
sbb
jge
inc
add
mov
xchg
loop
mov
dec
add
xor
rcl
dec
outsl
stc
mov
or
or
lods
cwtl
add
dec
add
jae
jl
mov
xor
add
nop
xchg
push
jns
adc
pop
insb
add
lret
scas
clc
fdivl
mov
and
adc
sbb
daa
mov
ss
cmovae
mov
repz
xor
push
push
das
adcb
sarb
lret
sub
cmp
les
cmp
sarb
mov
repz
push
inc
hlt
sbb
js
pop
pop
mov
add
sti
orl
nop
add
jp
xchg
adc
movb
sbb
sub
mov
popa
shlb
mov
xchg
add
cmpsb
sarb
mov
pop
aad
in
pop
loop
cld
add
inc
push
rcrl
into
leave
sbb
add
push
mov
ljmp
bound
sbb
add
dec
nop
xchg
leave
mov
in
mov
hlt
daa
bound
and
and
les
fistpll
lret
add
sub
loopne
pop
mov
aaa
push
inc
enter
dec
xchg
xchg
les
in
add
movsl
mov
jmp
dec
fmull
jmp
pop
mov
adc
lds
int
loop
jmp
aas
add
pop
add
push
or
pushl
roll
sub
dec
jg
xchg
insb
and
loopne
inc
xchg
out
lds
loopne
push
add
sub
mov
mov
add
jecxz
jnp
push
add
jo
pop
je
sbb
add
cmp
push
push
add
or
xor
adc
add
imul
jecxz
out
js
gs
and
push
dec
add
sub
adc
dec
int
cmpsb
sub
mov
mov
and
loope
push
add
lret
mov
addb
jge
fnstenv
pop
add
cmc
jne
shrb
push
xchg
xlat
out
add
fisubl
mov
jle
jo
popf
dec
clc
xchg
add
fsubs
enter
fiadds
and
add
xchg
xchg
outsb
std
push
mov
xor
mov
outsl
popl
xchg
dec
add
bound
xor
inc
xchg
sarb
icebp
mov
inc
or
xchg
enter
nop
mov
mov
add
imul
mov
add
jecxz
mov
bound
jl
mov
mov
mov
push
jmp
enter
ja
add
push
pop
push
pop
xchg
add
or
and
mov
sub
sbb
dec
movsb
mov
outsb
cli
xchg
adc
xchg
add
in
aaa
push
fmull
mov
push
inc
fucomp
flds
cli
push
dec
mov
es
and
cmpsb
test
push
insl
fisubs
in
call
xchg
cmpsb
add
scas
xor
mov
jns
dec
dec
pop
cld
add
jecxz
adc
add
mov
call
add
je
sub
faddl
fimull
sbb
in
inc
push
mov
add
into
push
sbb
cwtl
xor
mov
das
fistpl
add
pop
xor
pusha
stos
adcl
pop
shrb
xlat
bound
hlt
test
dec
nop
test
inc
pusha
xchg
mov
adc
jns
inc
jo
jae
mov
pop
call
and
insl
jns
cltd
lret
aam
sahf
jp
or
dec
add
jecxz
jp,pt
add
lret
mov
cmp
adc
jl
add
pop
and
sub
jl
pop
cmp
mov
cmp
in
daa
xchg
add
pop
mov
push
mov
bound
or
scas
pop
outsl
orb
xchg
push
leave
arpl
sbb
ja
jmp
popf
xor
push
popa
xor
aaa
popf
add
iret
jmp
push
pop
out
hlt
shlb
xchg
lret
add
ja
or
cmp
movsl
fildl
test
sub
xor
test
sarb
lock
fs
in
mov
repz
das
in
sub
sbb
xor
shlb
push
add
clc
insb
add
rcll
add
jbe
mov
and
aad
fcom
rcl
das
sbb
pop
sub
out
cld
sahf
jns
ja
inc
std
mov
movsl
mov
adc
mov
cmc
sahf
lock
xchg
push
aaa
adc
pop
jae
xor
cmp
jo
push
popa
inc
or
push
call
mov
fcom
mov
movsb
nop
xchg
aaa
call
lret
or
or
orl
inc
or
roll
add
ss
aaa
add
lret
fdivs
cs
or
xchg
repnz
sar
or
insl
dec
dec
dec
lods
push
mov
add
inc
mov
stos
aam
cmp
xchg
pop
into
ja
lret
add
insl
mov
cmp
fdivr
inc
icebp
popa
sub
pop
xor
scas
lods
mov
rcrb
and
inc
pop
push
rclb
jl
stos
jns
sub
adc
pusha
jmp
xor
push
push
pop
lahf
or
mov
leave
enter
sub
inc
xchg
push
xor
and
mov
popf
add
outsb
fldt
cwtl
idivl
add
sub
xchg
add
loope
pop
pop
add
mov
sbb
add
xor
xchg
add
loopne
inc
mov
jno
insb
jo
mov
add
in
jge
adc
pop
sbb
pop
add
and
pop
cmp
sbb
inc
les
xchg
jne
cli
nop
inc
xchg
lods
loope
aad
dec
dec
pushf
jno
call
js
mov
sahf
in
push
fildl
xorl
cmp
sti
mov
sbb
add
jnp
sub
jo
adc
and
insb
in
sub
enter
add
add
mov
loope
add
cmpsb
test
in
loopne
push
add
push
dec
jecxz
repz
dec
adc
shll
mov
dec
push
dec
jns
das
movsb
adc
in
lods
xor
xor
cld
add
pushl
jl
inc
imulb
cmp
or
rsm
push
bnd
push
imul
jo
in
pusha
mov
add
popf
push
and
dec
xlat
sbb
add
mov
sbb
imul
add
aam
jbe
pop
aaa
insb
addb
pop
scas
enter
arpl
add
push
cmp
add
addb
push
xor
popf
pop
sbbb
push
lret
aas
cmp
lock
jo
mov
fsub
fcoml
scas
add
push
pop
cmp
dec
stos
jge
es
jno
pop
aas
fcoml
loope
cmp
sub
test
mov
mov
sub
sbb
add
jb
cmovne
xor
and
dec
jge
mov
into
dec
enter
add
adc
add
jns
jnp
pop
stos
or
aam
add
fscale
or
sbb
add
sub
xchg
xchg
cwtl
clc
mov
cli
add
cmp
dec
sbb
add
jmp
push
dec
movsl
rcll
sti
inc
out
in
insb
pop
add
add
mov
addl
mov
adcb
ret
outsl
cmp
adc
or
and
insb
inc
xor
push
dec
imul
push
fcomip
inc
lods
push
jae
lahf
sbb
push
mov
xorb
add
int3
shlb
arpl
add
mov
or
jmp
repnz
push
icebp
and
push
stos
in
adc
clc
cmp
xchg
orl
jl
test
sbb
jae
xor
mov
adc
pop
cmp
xchg
push
jno
inc
insb
rclb
std
adc
cmp
xchg
jmp
scas
add
sub
xor
mov
test
mov
jmp
mov
jg
arpl
hlt
dec
pop
mov
leave
sub
push
push
push
lea
fdivrl
inc
sub
push
in
add
push
repz
cmpsl
lock
in
rcrl
aaa
mov
inc
push
out
and
dec
cli
add
outsl
test
ds
add
jnp
fidivrs
cmc
cli
pop
cmp
add
fs
sbb
stc
pop
ficomps
add
add
mov
inc
cmp
push
mov
stc
sahf
orb
pop
and
icebp
push
fists
mov
or
xchg
xor
lods
out
fadds
pop
push
ret
add
cmp
add
pop
xor
in
aas
lahf
xchg
incb
out
mov
popa
push
add
push
sub
push
and
bsf
cld
clc
pusha
popa
into
lods
add
in
inc
cmp
mov
cltd
pop
ljmp
dec
add
ret
dec
mov
mov
push
jns
mov
mov
adc
or
call
dec
cwtl
mov
jns
loopne
add
scas
jb
inc
push
out
in
test
add
xchg
enter
shll
adc
addr16
test
outsb
insb
add
stos
test
jno
push
dec
mov
int
sub
add
inc
pushf
in
in
sub
ljmp
insb
push
pop
inc
cli
cmp
adc
xor
pop
jns
jae
adc
sbb
add
mov
or
push
loopne
jns
add
pop
and
addr16
rcll
cmpsb
movsl
test
enter
push
add
and
enter
push
and
push
jae
outsb
decl
jg
add
loopne
cwtl
jge
out
ret
xor
loope
std
jl
imul
cmp
aam
cld
adc
je
inc
cld
dec
xchg
xchg
pop
mov
jl
add
int3
shrl
mov
mov
mov
and
add
mov
sub
and
xor
dec
rclb
or
pop
add
popa
push
or
inc
jl
int
jge
loopne
push
xchg
imul
xchg
jnp
sbb
adcb
dec
push
iret
sub
adc
xchg
jmp
push
add
xor
or
add
sub
mov
icebp
es
add
jmp
xchg
stos
mov
add
std
idiv
ret
and
add
inc
jbe
xchg
add
mov
shl
or
xor
in
jp
add
adc
mov
adc
sub
sub
adc
and
add
and
cld
cwtl
xchg
push
dec
addr16
andb
pusha
xchg
aad
jp
add
in
in
add
cmp
lods
pop
cmp
and
push
and
mov
frstor
cmp
pop
push
arpl
pop
sahf
mov
lcall
js
add
repnz
mov
fadds
mov
pop
int3
mov
mov
cli
cmp
mov
sub
xchg
jne
mov
sub
cmp
mov
and
hlt
add
nop
call
out
adc
shl
cmp
pop
pusha
cwtl
ja
ror
sarl
cmp
and
mov
ss
cwtl
cmpsl
add
adc
mov
ljmp
test
dec
adc
and
cmp
pop
add
or
mov
faddp
pop
pop
pop
dec
rolb
and
popf
js
adc
jg
ret
lret
mov
jl
aam
push
sub
mov
pop
in
add
and
in
add
lea
cmp
fisttps
xchg
addb
pushf
decl
add
movsl
outsl
jge
cmpsb
and
and
dec
je
xchg
shlb
inc
push
add
scas
andl
vrsqrtps
or
sarb
inc
add
out
or
test
inc
dec
mov
cmc
add
popa
mov
sub
xor
into
aaa
lods
jnp
add
jno
scas
das
pop
mov
mov
jmp
loopne
hlt
dec
sub
sbb
or
fs
outsl
daa
dec
pusha
mov
jmp
clc
loopne
push
pop
data16
addr16
xchg
or
pop
add
mov
fs
jg
jmp
push
es
push
jo
push
xor
add
sbb
sub
sub
xor
ficoms
sbb
lahf
mov
dec
fld
mov
mov
rcpps
lods
loope
sti
pop
push
add
jae
and
cmp
cmp
aad
addr16
mov
iret
lock
xlat
add
jnp
sbb
jecxz
cmpsb
cs
sub
xor
jnp
mov
inc
in
fiadds
fldcw
xor
sbb
in
xor
or
pushf
cld
out
imul
dec
push
add
fdivp
movb
add
add
pop
mov
add
jno
push
or
lods
add
ss
or
test
add
and
or
das
xchg
add
jno
lock
sub
scas
cwtl
push
int3
add
js
add
movsb
mov
add
mov
inc
and
repnz
mov
repz
ret
and
nop
andl
enter
inc
add
inc
mov
and
xor
pop
sbb
dec
jno
fsubl
fldl
stc
mov
mov
xorb
imul
addl
cltd
jge
add
inc
cmp
add
pop
or
jbe,pn
mov
dec
sub
inc
mov
add
mov
sarl
call
xchg
test
and
lds
sbb
jge
aas
mov
jecxz
pop
add
cvtps2pd
stos
test
xchg
adc
push
cmp
and
jp
cltd
sbb
daa
sub
addl
xchg
sar
xchg
rcrb
or
scas
inc
jmp
inc
sub
out
jno
add
and
cmp
and
lock
xchg
pop
xchg
pop
scas
xor
dec
sub
add
movsb
jge
pop
mov
in
mov
aas
mov
aam
pop
cmp
rclb
add
jae
add
rolb
std
xchg
adc
ret
in
and
mov
mov
inc
xlat
mov
xchg
jnp
sub
add
imulb
add
or
mov
pop
xchg
push
mov
into
loop
adc
cmovnp
mov
or
adc
lret
xchg
and
and
addr16
dec
lods
cmpsb
jnp
mov
jp
add
mov
outsb
add
xchg
pusha
add
in
rcl
lret
insb
leave
sbb
mov
xor
fstpl
xchg
jecxz
add
add
lret
mov
jbe
rol
loopne
insl
add
jmp
inc
mov
add
call
mov
call
cmp
mov
imul
add
movsb
popa
lock
push
push
ljmp
jg
rolb
fadds
cs
cmp
jp
add
sbb
xchg
mov
lcall
mov
rorb
pop
mov
clc
pop
xor
in
mov
out
int
pop
aas
cmp
imul
daa
add
stos
inc
mov
psubq
loopne
rolb
imul
adc
inc
cltd
scas
xchg
aas
jg
add
cbtw
inc
leave
ss
jl
cld
pop
mov
push
leave
test
enter
rclb
jp
or
popa
push
xchg
adc
xchg
add
xchg
xor
aas
add
xor
mov
and
push
nop
test
adc
cmp
enter
ss
and
and
adc
ljmp
lret
in
dec
inc
cmc
cwtl
test
cmp
testb
inc
and
das
nop
test
test
lock
inc
dec
xchg
inc
lar
dec
mov
and
or
xor
push
push
mov
xor
test
mull
adc
sub
or
mov
mov
adc
lods
adc
mov
sbb
sbb
shlb
xor
pop
test
insb
in
push
xor
mov
xchg
cli
shl
addr16
movsb
add
mov
sbb
add
lock
or
cltd
mov
sahf
mov
cmp
fcoms
aam
add
loope
push
xor
leave
cmpsl
add
insl
or
and
insb
mov
cmp
push
and
mov
xchg
loop
add
add
add
jbe
mov
mov
cmp
jmp
jne
popa
or
int
sub
add
sbb
add
add
and
push
add
xor
js
jl
fidivrl
add
push
jge
sbb
daa
add
or
ljmp
xchg
xchg
mov
hlt
mov
dec
xlat
pop
enter
add
loope
sub
adc
data16
jmp
in
sbb
mov
add
mov
popf
add
enter
xor
je
xor
mov
mov
inc
iret
push
add
cmp
dec
push
inc
or
jae
pusha
mov
and
or
or
add
mov
sbb
popa
dec
enter
jno
jl
pop
or
add
clc
add
daa
mul
mov
ja
jne
add
movsl
ficompl
lea
and
push
add
push
ret
ds
pop
pushf
inc
lods
xor
out
test
lock
and
sbb
js
shr
pop
out
xlat
icebp
cwtl
add
popa
in
cmp
sub
in
pop
jbe
out
push
nop
cltd
insl
xor
ret
xor
push
or
lcall
mov
movsb
pop
pop
xchg
mov
insb
adc
cli
add
sarl
sbb
enter
ljmp
pop
xchg
ds
pop
push
shrl
insl
dec
jbe
mov
lea
adc
jp
add
ljmp
add
dec
lret
stc
loopne
pop
add
add
in
sub
jo
mov
jmp
sbb
subb
les
jmp
cltd
arpl
sbb
xchg
or
mov
add
fnsave
add
popa
lock
cmc
mov
pusha
lahf
rolb
pop
xchg
xchg
push
adc
jmp
xchg
lock
pop
add
push
in
jg
sub
mov
cli
adc
sbb
jmp
add
jmp
test
adc
jns
jno
dec
daa
mov
outsb
or
sbb
jge
jns
loopne
mov
hlt
lret
and
das
mov
or
movsb
sar
shlb
and
jge
jecxz
call
mov
push
icebp
mov
dec
add
loopne
mov
test
cwtl
int
add
mov
inc
add
sub
nop
adc
testl
in
lret
arpl
adc
call
dec
push
into
packuswb
inc
imul
lock
sub
jecxz
cmp
inc
cmp
push
test
jne
test
daa
mov
mul
aam
jecxz
iret
mov
push
fdivs
popf
in
pop
inc
fsubrl
add
rolb
js
add
add
lods
ds
add
or
cltd
add
shlb
add
sbb
pusha
adc
repnz
cltd
add
clc
add
cmp
xchg
push
out
pusha
pop
push
and
scas
pusha
fsubrs
popa
adc
cs
push
mov
xor
add
add
inc
or
leave
addb
add
test
inc
shlb
cmp
push
sbb
xchg
adc
adc
lods
mov
fisttpll
cmp
jb
les
add
cltd
inc
mov
je
arpl
push
shl
or
cmp
xorb
mov
sub
xor
jl
insl
jp
pusha
adc
mov
xor
fildl
cmpsb
push
mov
mov
jl
push
arpl
stos
cmpl
and
lods
ljmp
out
xor
mov
ret
fnsave
xor
sarl
jbe
cs
lcall
mov
push
daa
out
pop
push
cmp
jp
sbb
ss
add
xor
xchg
add
xchg
and
jnp
add
or
test
outsl
sahf
add
out
popf
test
sub
lea
jl
xchg
and
cmpsl
cmp
or
in
push
push
add
out
cwtl
adc
mov
adc
xor
outsl
or
int
push
mov
xor
mov
adc
sub
add
outsl
jmp
and
add
add
das
dec
push
mov
fnsave
xor
xchg
sbb
sbb
sub
imul
int
or
data16
xchg
sbb
mov
add
cmp
mov
ret
jno
pop
loop
jge
pop
imul
mov
int3
outsl
and
aad
add
adc
add
jl
pop
inc
loopne
test
dec
mov
add
iret
out
fsubrs
cmp
movsb
and
cmp
and
sub
cld
add
cli
hlt
fiadds
jecxz
ret
sub
mov
push
xlat
or
adc
pop
inc
hlt
jae
push
inc
dec
fiadds
daa
xchg
pusha
insb
inc
or
dec
outsb
test
loop
pop
clc
jbe
arpl
and
call
lock
push
jecxz
pop
add
out
js
outsl
mov
mov
cmpsb
ds
adc
sub
xlat
orb
je
jmp
mov
pushw
cmc
jle
ds
add
dec
lods
xor
sbb
add
sub
rclb
xchg
mov
outsb
xor
jg
jl
not
mov
nop
fcoml
jae
add
add
pop
add
cwtl
stos
pusha
mov
add
test
and
cli
and
or
mov
les
rcrb
adc
addr16
xor
loop
inc
mov
aaa
add
mov
dec
inc
enter
add
push
outsb
shll
pop
pop
push
pusha
xor
push
std
mov
cmp
popa
xchg
mov
lahf
mov
loopne
and
mov
dec
insl
enter
mov
scas
ret
leave
add
aaa
lea
in
orb
push
inc
jae
mov
shrb
dec
das
fldl
pop
shr
repnz
and
enter
add
cmp
xor
testb
jmp
or
jecxz
push
push
adc
add
mov
or
mov
cmp
sbb
mov
data16
sub
aad
xchg
add
pop
in
add
xchg
sbb
jo
fstl
mov
inc
push
rolb
pop
insl
in
push
xor
add
subb
lret
adcb
into
jecxz
pop
pop
add
mov
loop
add
enter
iret
jge
cld
jo
stos
add
xchg
pop
add
out
push
lods
fcmovnb
pushf
mov
cmp
pop
xor
adc
fsubs
xchg
pushf
hlt
daa
cmp
out
adc
dec
in
jns
mov
pop
inc
add
sub
data16
jnp
call
fimull
cmp
jne
sub
dec
add
gs
std
in
xchg
add
test
mov
rcrl
mov
jb
push
mov
nop
adc
call
fcmovne
aas
cli
test
xchg
adc
movsl
add
stos
add
movsb
xchg
mov
sbb
inc
sbb
cld
in
ljmp
adc
dec
dec
inc
xchg
pop
loopne
jns
add
cs
xchg
xor
movl
adc
lcall
jmp
add
add
mov
inc
pusha
pop
icebp
aas
lods
sub
je
xor
inc
int
cli
pop
add
test
push
enter
popf
push
add
lock
ffree
inc
add
stos
xlat
xor
sbbb
mov
sub
xchg
sbb
rorb
popa
hlt
mulps
cmp
je
fistl
stc
push
adc
mov
pusha
adc
add
jmp
negb
add
dec
mov
cmp
mov
movsb
orb
roll
in
scas
int
jl
xchg
jge
xor
inc
fucom
addb
adc
mov
sbb
jmp
les
pop
push
cs
xor
pop
mul
sbb
cmp
or
loope
dec
sahf
push
push
jl
fldl
cmpb
dec
fimull
hlt
mov
cmp
pop
jg
push
notl
dec
mov
mov
arpl
jle
sub
jmp
lds
push
push
js
jnp
pop
sbb
imul
cwtl
and
mov
pop
lfs
sbb
ss
add
std
cwtl
push
mov
rcl
jnp
adc
add
mov
nop
add
xchg
push
or
in
sbb
cmp
or
mov
fdivs
xchg
lds
or
adc
fildl
lcall
pop
jb
lea
loopne
scas
mov
add
mov
xchg
subb
ljmp
not
push
push
gs
test
pop
add
pushl
aam
jmp
push
sub
add
adc
add
cmc
cwtl
es
cltd
add
dec
int
xor
or
jb
fadd
inc
add
test
in
xchg
das
xlat
aas
movl
mov
int
loopne
ret
add
xchg
or
mov
movsb
dec
sbb
mov
inc
add
cmp
es
and
ljmp
pop
mov
add
out
xchg
fsubrs
stos
orl
int3
add
push
cs
push
rolb
push
jo
adc
or
xchg
jle
add
sti
add
imul
inc
cmp
push
pop
jne
lret
loope
ds
stos
inc
hlt
ficomps
xchg
adc
cmp
xor
xor
push
rclb
je
popa
mov
mulb
or
and
cmp
or
add
loope
xor
and
mov
aas
mov
fistps
cltd
add
clc
jle
inc
add
xchg
sarb
js
add
adc
mov
dec
out
mov
clc
xchg
das
sub
sbb
hlt
xchg
cli
jno
add
dec
js
out
pop
cmp
push
jle
into
ret
aas
sbb
test
dec
gs
ja
add
sub
push
mov
mov
mov
cmp
test
in
in
pop
arpl
add
push
ja
or
cmpsb
cmp
aam
mov
add
idivb
ret
push
sub
jno
lret
jecxz
decl
push
nop
sti
mov
or
and
lea
dec
mov
movsl
mov
mov
jo
add
xchg
adc
cmp
mov
out
rclb
scas
cmp
push
sti
int
jecxz
iret
mov
add
xlat
pusha
out
daa
add
mov
into
add
pop
enter
mov
inc
in
sub
inc
sbb
leave
mov
jp
movsb
add
nop
insl
jl
add
jae
pop
scas
mov
in
pop
fcompp
mov
or
mov
loopne
jmp
nop
add
aam
mov
xor
imul
add
add
insl
or
stos
jns
inc
sti
pop
popf
sbb
outsl
int3
pop
mov
cld
xchg
inc
mov
outsb
xchg
cli
jne
add
push
inc
divb
scas
or
sbb
lods
rclb
jp
xor
push
sarb
out
mov
push
mov
mov
fistl
cmp
movsb
clc
lock
fcoml
inc
push
cmpsl
test
inc
sahf
pop
lahf
std
pop
sbbb
push
decb
repz
push
xor
ret
add
pop
push
int
cmp
fdivs
cmp
and
push
xchg
test
lret
loopne
xor
enter
int3
andb
gs
bnd
cmp
incl
pop
fwait
std
pop
add
add
out
test
sbb
orb
addl
inc
cmp
insb
add
cmpsb
loope
shl
jmp
mov
sbb
add
cltd
lods
and
mov
pop
mov
std
mov
aad
or
pusha
subb
aaa
scas
test
sub
mov
add
lret
xchg
je
xchg
test
mov
mov
lea
bts
add
test
pushf
xchg
and
pop
add
or
lock
scas
movl
rorb
stos
adc
mov
xor
nop
into
ss
fiaddl
dec
lret
arpl
add
or
pusha
outsl
cmc
pop
cmpb
mov
in
call
or
ljmp
loop
add
mov
lds
stos
cwtl
push
ljmp
inc
movsl
pop
dec
add
sbb
out
pushf
test
inc
aas
std
movsb
or
test
and
add
sbb
sbb
jle
fisttpl
sub
jo
pop
cwtl
push
ds
push
test
jp
xchg
les
cld
mov
mov
push
pop
push
push
enter
jl
xchg
pop
bound
orb
sub
dec
dec
jo
andb
xchg
lods
jge
add
jle
mov
xor
inc
sbb
js
pop
dec
add
popa
fucomi
sub
xor
xlat
add
fsts
push
add
in
in
cmpl
push
and
insb
push
arpl
push
das
rolb
lods
ret
bound
imul
mov
testl
out
add
sub
mov
jl
std
add
daa
mov
iret
movsb
ds
adc
ja
in
into
mov
pop
mov
lock
xlat
pop
aaa
add
mov
seta
mov
push
jb
test
loopne
pop
fcoml
je
mulb
fs
dec
das
mov
adc
xchg
xchg
movsb
orl
ljmp
mov
std
cmp
cli
mov
loopne
cmp
mov
adc
pop
pusha
pusha
nop
mov
add
push
push
cmp
inc
or
jg
mov
test
fnstenv
out
jmp
push
cld
arpl
and
xor
mov
imul
add
mov
ja
mul
arpl
cltd
or
and
xchg
call
add
sbb
jne
fisubrl
jg
add
cld
mov
dec
addl
movsl
cwtl
pop
roll
aam
push
add
push
sar
pusha
add
jmp
sub
and
add
aas
idivl
cli
and
test
add
and
cmp
fmull
add
jg
dec
push
add
xchg
ret
xor
mov
dec
int3
andl
aas
xor
shlb
add
sub
mov
insl
inc
push
mov
enter
clc
mov
aaa
or
push
sbb
sbb
lret
in
fwait
test
mov
mov
movsb
shll
rolb
rcll
aaa
sahf
sub
add
adc
imul
test
faddl
in
nop
repz
sub
xor
jno
or
mov
adc
loope
aam
fimuls
mov
inc
enter
push
or
bnd
clc
mov
test
aas
cmp
push
jae
add
fcompl
enter
jae
adc
push
fisttpll
imul
cltd
sbb
je
pop
imul
pushf
sbb
jmp
jecxz
push
out
in
sub
inc
clc
add
push
adc
movsl
les
pop
std
or
sbb
push
add
stos
mov
imul
cmp
pop
lods
mov
lds
sub
sbb
pop
dec
ja
fxch
pop
popa
loopne
xor
loopne
sub
add
les
loop
add
je
jns
adc
pusha
mov
add
sub
adc
stos
adc
outsl
add
mov
nop
xchg
sub
nop
in
inc
rcrl
add
fisubrs
inc
mov
nop
add
and
cmp
shlb
outsl
jo
dec
pop
fldl
add
mov
jl
push
mov
jle
add
fimull
out
or
je
dec
sbb
hlt
or
xchg
rcr
andl
mov
rcrb
pop
fiaddl
push
mov
or
dec
jl
popa
cmp
dec
lret
xor
sahf
sbb
push
jl
sti
jmp
add
cs
daa
scas
call
push
add
fsub
inc
jo
nop
loop
or
lcall
mov
fcomps
add
lods
jne
in
inc
repnz
in
xchg
pop
inc
jb
into
insl
test
out
pop
mov
jl
mov
push
jp
pop
add
data16
int3
mov
xchg
movsb
fs
dec
cmp
mov
xor
sub
cmp
mov
push
adc
xor
add
adcb
leave
sub
out
cs
add
push
in
es
stos
in
add
xor
shlb
push
out
mov
jecxz
push
jl
aad
imul
cld
js
or
out
sbb
sub
orb
pop
sbb
movsl
and
sti
pop
adc
and
pop
sbb
movswl
cli
ja
fadds
dec
insb
addr16
stc
cmp
cmp
pop
xor
hlt
adc
pop
cmp
out
pop
sbb
scas
dec
clc
xor
pusha
dec
pop
rolb
and
add
ficomps
inc
add
pop
add
sti
add
jnp
jg
fwait
pop
add
add
mov
dec
jmp
je
mov
xor
mov
test
cwtl
mov
in
mov
sub
adc
pop
push
setne
mov
add
je
jmp
push
pop
out
nop
gs
jnp
add
mov
aas
imul
xor
dec
int3
dec
add
adc
add
outsb
aad
jl
xchg
pop
test
sbb
add
inc
das
jmp
add
rolb
dec
pop
jae
cmp
inc
das
jb
xchg
mov
xchg
adc
or
add
loope
cmpsl
push
fsubr
aad
loopne
es
andb
mov
incb
stc
add
call
sete
dec
mov
pushf
sbb
add
xor
mov
bound
add
ret
mov
mov
push
aas
repz
test
pop
fadds
dec
pop
loopne
dec
dec
stos
xor
pusha
xchg
pop
cmpsb
es
mov
xor
fs
add
sbb
cmpsb
adc
add
and
lods
adc
dec
je
add
mov
add
or
dec
or
dec
lret
mov
es
aaa
mov
inc
or
dec
push
inc
les
jns
mov
or
push
enter
incb
in
xchg
aam
jno
repnz
lret
jb
and
push
movsl
leave
pop
jne
rolb
sbbl
gs
loope
mov
push
push
mov
add
mov
ds
std
loop
sub
data16
mov
xchg
inc
add
mov
in
mov
jbe
fsubs
push
lods
add
or
loop
pop
loope
pop
stos
inc
mov
pop
ljmp
popa
add
adc
js
arpl
xlat
lds
jmp
out
inc
js
sarb
sub
mov
dec
fimuls
addr16
push
xchg
sbb
mov
out
outsl
mov
push
push
add
jecxz
repz
test
lret
in
add
popa
add
mov
inc
call
cli
pop
and
shrb
aad
add
and
mov
and
ficompl
lahf
js
cmp
push
sbb
div
add
xchg
stc
addl
out
or
sub
fcoms
call
shll
jg
mov
adc
add
insb
push
fcmovu
mov
add
or
loope
jp
jo
minps
jnp
push
mov
cmp
push
add
mov
fiadds
stos
outsb
int
loop
je
rorl
xchg
mov
sbb
add
ror
add
pop
fidivrs
dec
sbb
pop
adc
jecxz
sbbb
inc
pop
test
out
pop
stos
and
jno
add
mov
psubw
loopne
imull
xor
adc
dec
movsl
cmp
push
push
add
mov
cmp
addb
adc
dec
cmpsb
xor
les
dec
aad
into
add
mov
gs
cwtl
dec
iret
xor
add
fidivl
adcl
bound
fidivs
pop
mov
xor
mov
lods
cwtl
add
push
sbb
sub
mov
addr16
stc
xchg
jle
push
fs
or
xor
mov
pop
add
mov
frstor
sbb
aaa
enter
das
mov
add
mov
pop
std
xlat
push
cmpb
jne
mov
daa
mov
cltd
sarb
add
adc
dec
push
ja
add
in
dec
gs
pop
enter
dec
pusha
aam
or
lock
adc
add
xor
sub
jp
pop
lret
jecxz
leave
xor
add
jb
int3
pop
imul
jne,pn
xchg
jnp
mov
add
call
cmpl
pop
pmaddwd
mov
insl
pushf
push
add
insb
es
sbb
sbb
jns
add
inc
jbe
add
incb
insl
es
scas
sub
movb
pop
mov
ljmp
jb
lret
add
loop
jno
pop
clc
lock
fisttps
fisubrs
push
sbbb
mov
pop
add
std
mov
pop
jecxz
jae
push
shrb
aad
push
in
sbbl
mov
inc
into
int
and
xor
cmpsb
push
cmpsl
pop
xor
cltd
cmp
dec
push
cs
dec
test
cmp
add
lcall
insl
enter
pop
xor
add
in
stos
lods
or
ret
jmp
mov
sub
mov
add
jge
sub
dec
lock
pop
sub
arpl
xor
mov
mov
rcll
pop
sbb
xchg
cmp
movb
mov
and
or
pop
pop
pop
stos
mov
mov
in
mov
add
lret
adc
rclb
je
cmp
xor
fistl
xchg
cwtl
xchg
pop
push
clc
adc
test
fs
add
push
in
xchg
add
dec
das
shrb
add
lea
add
outsl
mulb
push
add
ret
push
sub
sbb
loopne
xor
ss
push
sub
call
gs
and
jecxz
inc
lahf
das
rolb
flds
pop
xor
movsl
lret
call
jge
jg
cmpsl
xor
adc
roll
or
jp
cmpb
not
add
mov
test
jae
mov
lahf
punpckhdq
jge
or
mov
aas
pop
dec
dec
push
add
mov
repz
popf
cmp
rcl
negb
cbtw
push
clc
popa
loopne
ljmp
outsb
mov
jbe
xchg
js
loope
int3
add
rorb
mov
test
push
fldenv
jmp
xor
push
add
repz
nop
push
add
pop
jo
pop
adc
pop
inc
popf
lsl
subl
loopne
xor
cwtl
rolb
repz
push
push
test
nop
ret
ret
loopne
xchg
subb
add
fcmovbe
dec
inc
jle
inc
push
cli
lds
xchg
push
inc
dec
add
pop
pop
test
pop
ljmp
lea
loopne
dec
mov
and
std
push
xor
insb
data16
dec
add
cmp
sbb
mov
clc
jge
add
jmp
test
mov
shlb
xchg
push
add
inc
mov
stc
mov
mov
adc
es
mov
pop
repnz
in
sub
lods
pushw
std
cmpb
iret
add
mov
jbe
repnz
pop
in
jo
repz
jne
add
xor
dec
fucom
or
pop
fwait
mov
outsl
xchg
xchg
jge
fucomip
add
push
mov
dec
cli
dec
add
sbb
lock
xor
add
shrl
gs
xor
loopne
push
outsl
pop
inc
xchg
pop
xchg
xor
xchg
mov
div
or
or
loopne
jne
add
dec
xorb
addr16
pop
adc
ret
jae
push
xor
push
sbbb
stos
cs
dec
jecxz
outsb
jne
outsl
out
les
mov
mov
mov
pop
xchg
movsb
add
in
je
add
rcrb
jmp
mov
imul
mov
lcall
hlt
fwait
or
insl
icebp
mov
sub
loope
aas
pop
out
rcrb
mov
bound
mov
sbb
jbe
mov
and
mov
add
in
icebp
sbb
loopne
movl
mov
sqrtps
pop
les
pop
xlat
movl
fnsave
fimuls
rcll
and
pop
test
pop
and
adcb
xchg
call
push
jl
je
ret
pushf
lcall
lods
adc
push
out
rorl
ljmp
int3
lahf
scas
add
jle
repz
lds
add
aaa
insb
iret
sarb
add
incb
rorb
mov
jg
mov
adc
pushf
into
in
rcll
repnz
add
sbb
clc
ror
sub
arpl
adc
add
shr
rcl
add
dec
inc
jae
cmp
outsb
push
jg
mov
dec
inc
add
xor
inc
mov
mov
mov
cmp
push
inc
add
gs
pop
and
lea
pusha
cmc
int3
enter
mov
cld
cmc
enter
aaa
mov
and
xlat
add
xor
leave
add
sti
and
and
add
xchg
aad
and
test
popf
add
lret
out
iret
pop
mov
and
adc
sub
inc
rorb
aas
stc
sbb
sbb
add
insb
notb
stos
and
and
dec
add
addr16
add
lods
test
mov
rolb
out
push
outsb
clc
adc
stos
inc
sub
cs
test
imulb
add
inc
mov
dec
orb
popf
jnp
mov
pop
and
adc
rolb
xchg
shlb
jecxz
and
jo
push
cs
add
out
popa
mov
jnp
xlat
add
lret
push
add
jge
jecxz
pop
mov
or
nop
add
divb
nop
popl
aas
mov
cmp
out
jb
jnp
ds
scas
bound
sub
dec
js
loopne
lds
cmpl
xlat
nop
inc
add
sub
jnp
mov
mov
test
mov
sbb
enter
xchg
loopne
inc
cmp
sbb
int3
inc
jp
push
adc
faddl
hlt
sbb
sub
fsts
lock
or
push
cmp
push
add
cmc
mov
mov
ror
fimuls
pop
addr16
out
add
dec
pop
arpl
adc
jns
insb
mov
pusha
aaa
add
sbbb
pop
cld
jp
adc
cmpb
mov
data16
mov
add
jbe
add
das
in
js
mov
sub
inc
cmp
jge
shlb
push
scas
jne
test
mov
xlat
pushf
jl
pop
mov
out
push
addb
jle
and
xor
adc
add
push
int3
add
jecxz
sbb
fstpt
cmp
fsub
aas
sub
xor
gs
pusha
ret
enter
repz
adc
loopne
add
mov
xor
sub
sarl
cmc
add
add
jbe
adc
jnp
add
cwtl
push
mov
ret
popf
lods
test
mov
inc
adc
int3
pusha
cld
pop
mov
jo
pop
inc
push
push
and
cltd
mov
cmpsb
add
sbb
stos
pop
mov
inc
push
add
sub
mov
jg
orb
jl
adc
popf
sub
lods
sub
mov
adc
notb
add
dec
cmp
jmp
pop
leave
pop
push
adc
loopne
jmp
in
cmp
lret
push
inc
aad
push
add
or
repz
idiv
and
pop
out
loopne
out
or
add
adc
sub
in
add
arpl
cmp
or
add
adc
aam
sub
pop
imulb
mov
sarl
and
mov
cmp
add
ret
jle
or
cld
aad
cmp
dec
loop
lea
jae
mov
add
or
hlt
mov
xadd
mov
ret
int
test
pop
cmp
lock
je
ljmp
into
jl
jmp
lods
in
and
daa
inc
push
and
inc
pop
rcrb
cmp
xchg
adc
aam
ss
mov
adc
repnz
xor
push
or
pop
push
out
cmp
stos
lock
in
mov
stc
xchg
testl
out
jne
hlt
pop
jl
xchg
nop
mov
icebp
push
sbb
mov
pop
loopne
xchg
add
dec
add
jae
cmp
rcll
xchg
adc
add
add
loopne
outsl
jl
cs
pop
js
pop
call
sub
add
out
pop
fwait
adc
and
xor
mov
test
cwtl
cwtl
add
mov
int3
lret
add
and
loopne
shrb
test
add
sub
mov
aaa
leave
hlt
mov
add
ficomps
push
add
sbb
sahf
int3
mov
stc
das
cmpsl
xchg
nop
pushf
adc
arpl
andb
in
movsl
pop
add
clc
fiadds
in
test
add
incl
imul
mov
pop
jp
sbb
movb
in
adc
cmpsl
insl
cmpb
lret
push
add
add
dec
cli
je
inc
sti
pop
adc
rcrl
pop
jne
add
out
jb
test
pusha
jno
add
xchg
icebp
subl
jae
adc
push
ss
mov
jl,pt
shl
inc
mov
cmpsb
xor
je
in
push
ja
cmc
adc
xchg
loopne
mov
xor
subl
jne
and
add
mov
mov
fwait
xor
inc
out
jle
int3
add
or
lock
in
jae
adc
aam
dec
mov
cltd
pusha
jl
push
pusha
cmp
dec
push
sbb
add
dec
clc
loop
add
add
nop
pushf
sbb
and
andl
cltd
add
pop
add
dec
push
add
inc
std
cld
nop
mov
sbb
pop
inc
add
pop
ficoms
fcmove
or
xchg
rcr
fs
cmpsb
push
loopne
dec
imul
xor
jecxz
cwtl
enter
faddp
int3
daa
shlb
pop
arpl
push
loopne
mov
sub
cmp
cmp
and
ficoml
pop
adc
pop
aam
pop
mov
ret
cmp
jl
arpl
dec
pop
loopne
or
add
add
std
imul
sbbb
clc
or
test
insb
fwait
xchg
lea
pop
xchg
ja
ss
clc
xchg
add
or
imul
out
dec
fwait
jmp
pop
ja
clc
xchg
push
add
xchg
orb
lcall
push
sub
pop
sbb
jbe
jle
add
pop
lds
jb
jo
mov
sbb
push
lock
and
dec
inc
nop
cltd
cmp
xchg
sbb
mov
ffreep
dec
or
jo
mov
test
sub
notb
mov
mov
jl
xchg
notb
out
mov
xchg
loope
in
dec
lock
test
cmp
out
push
test
ja
movb
cmp
sub
les
mov
stos
ljmp
sub
adc
push
xor
ret
cltd
or
add
push
lods
pop
inc
cld
add
xorl
push
mov
inc
out
addr16
enter
roll
xor
mov
mov
sub
xchg
jo
shlb
lock
push
call
stos
xor
loop
aam
add
add
xchg
jne
sbb
aam
push
js
nop
and
ret
inc
fbstp
cmp
push
pusha
and
pushf
test
pslld
pop
outsb
or
jecxz
icebp
rorb
add
test
jno
fdivl
push
adc
or
pop
or
xor
adc
jo
daa
adc
flds
das
mov
in
jp
pop
mov
adc
cmp
in
sbb
sbb
xor
sub
scas
daa
pusha
addb
fs
adc
bswap
add
xchg
pusha
add
lds
lret
xorb
add
lds
mov
lret
jge
negb
js
pop
fucomip
add
js
sub
add
or
jo
add
add
mov
xchg
push
call
dec
push
mov
icebp
add
das
fs
add
and
jns
add
lcall
jbe
sbb
pop
loopne
cmp
cmp
rcr
add
ja
mov
add
inc
dec
sarl
lods
or
mov
pushf
bound
nop
jge
adc
pcmpeqd
fcomps
hlt
or
jg
or
mov
or
cmp
scas
lcall
push
cmp
add
push
jbe
add
in
cld
and
es
adc
xchg
int3
outsl
cmc
loopne
orb
pop
or
subb
leave
or
scas
dec
ja
mov
loope
inc
aam
xchg
inc
iret
push
mov
push
mov
dec
out
lds
xchg
inc
sub
jns
mov
add
xchg
aas
test
mov
inc
rorl
add
clc
sub
jns
out
xchg
cmpsb
add
sahf
add
sub
jmp
add
mov
subb
ja
cmp
and
mov
and
push
arpl
dec
add
push
and
xchg
push
mov
fistpll
mov
lods
test
and
pop
js
push
cmp
outsb
jp
ja
push
dec
add
js
hlt
pop
jmp
in
or
mov
inc
stos
les
mov
das
add
or
jmp
mov
sub
adcb
adc
movl
lods
aaa
push
cli
pusha
push
in
push
lahf
lea
jo
xchg
sub
sub
or
mov
mov
inc
pop
loop
mov
mov
scas
dec
rorb
cs
cmpsl
mov
jecxz
add
shlb
repz
fcomps
inc
outsb
int3
addb
xchg
add
call
mov
repz
mov
hlt
lock
pop
pushf
pop
push
test
sbb
push
push
test
inc
pop
sbb
sub
fdivrs
jne
adc
into
inc
stc
add
cwtl
or
icebp
pop
testb
pop
pusha
sbb
xor
lahf
mov
xchg
pop
nop
fiadds
inc
je
adc
sub
cmp
ret
xorb
push
add
and
es
andb
xchg
ja
sub
adc
int3
scas
ss
rolb
inc
sub
sbb
jne
push
inc
sahf
pop
push
add
pop
test
add
add
test
jo
clc
push
xchg
mov
outsb
lock
mov
int3
push
dec
loopne
clc
mov
sahf
sub
adc
mov
or
push
add
pop
rcll
in
popa
cmp
outsb
pop
sti
jne
mov
dec
add
xchg
gs
movsb
add
movaps
lcall
sbb
int
jg
cld
sub
stos
notl
loopne
cmp
mov
and
cmp
pop
cld
dec
inc
cmp
dec
rolb
cwtl
outsl
incb
xchg
fs
cmp
xor
mov
mov
dec
pushf
mov
insl
or
into
add
cs
enter
iret
add
xchg
xlat
add
xchg
cmpb
add
ja
fstps
add
and
test
add
lret
in
jno
stos
or
and
dec
pop
flds
dec
mov
xor
mov
test
and
add
gs
lahf
pusha
ljmp
adc
xor
xchg
in
cmc
cmpb
int
lods
shll
test
cmp
rcrb
add
jge
shrl
jmp
mov
mov
jo
cmp
add
cwtl
add
mov
jge
mov
stos
add
mov
add
lret
pop
fldl
add
xchg
push
add
jnp
sbb
xchg
inc
std
mov
sub
into
cmp
cmpsl
incb
shl
inc
sub
mov
ja
sarb
mov
sub
cwtl
mov
les
adcl
sbb
dec
pop
inc
fiadds
add
pop
mov
loop
add
push
mov
sub
dec
add
pusha
jle
dec
jp
add
aaa
sub
outsl
cwtl
push
sbb
cmpsb
int3
jge
or
jo
or
vunpcklps
roll
cltd
out
cmp
or
xchg
add
iret
add
shrl
pop
push
test
rorl
fdiv
mov
xlat
pusha
test
sbb
adc
sbb
orb
loopne
out
imul
fwait
inc
pop
in
orl
pusha
js
fucomi
clc
add
or
xchg
fidivl
pop
add
pop
divb
mov
fcomip
cmp
int3
in
das
dec
scas
ror
inc
cmp
pop
das
dec
mov
dec
add
out
movsb
fistl
repz
pusha
inc
inc
out
std
add
dec
mov
movsl
push
pop
cmp
movsb
pop
subb
out
jmp
cli
jg
push
mov
add
sub
sti
aas
test
or
cmpl
xchg
aam
outsb
dec
pusha
pop
sbb
jle
add
push
rcrl
and
insl
cld
xor
cmp
add
inc
movsb
add
add
movb
dec
dec
fmul
test
mov
test
adc
add
insb
stos
sbb
nop
push
ret
sbb
push
loop
inc
scas
stc
cwtl
add
sub
jmp
sbb
icebp
inc
mov
mov
jo
inc
lea
pop
fmuls
mov
out
std
shrl
stos
jmp
pushf
sub
shrb
repnz
add
movsl
inc
xchg
mov
and
mov
sub
add
or
cmp
add
add
cmp
out
ss
mov
fidivs
add
push
mov
xchg
shlb
add
sti
jbe
fdivl
jb
cli
add
dec
stos
and
dec
or
les
dec
outsl
add
cld
mov
mov
js
iret
mov
inc
mov
or
loope
pop
or
add
pop
fstps
loopne
push
das
lods
adc
jl
pop
fs
or
icebp
pushf
popa
scas
repnz
inc
adc
pop
popf
inc
adc
pop
push
in
add
cli
lods
jns
push
push
push
enter
dec
push
sub
cld
pop
pop
cld
add
cltd
xor
push
fwait
sbb
xor
fbld
adcb
jl
and
dec
push
shl
mov
gs
mov
adc
jae
adc
push
pusha
adc
push
mov
sbb
push
lret
aad
and
pop
fdiv
addb
clc
stos
sub
lock
add
test
pushf
lcall
push
sub
hlt
hlt
daa
sbb
jl
into
jb
sbb
clc
pusha
int
cltd
jmp
push
add
inc
arpl
in
into
addl
add
xor
mov
cmp
rolb
push
xor
inc
test
nop
loopne
daa
xorb
jecxz
gs
shrb
jl
adc
xorl
out
ret
mov
push
mov
pop
cmp
enter
or
pop
add
or
dec
enter
lcall
cld
clc
jae
mov
mov
add
sub
dec
inc
test
fsubr
lret
and
xor
and
mov
add
out
in
xchg
adc
cmp
into
add
mov
in
and
sub
add
inc
aad
lock
cli
std
cmp
add
jge
outsb
out
adcb
nop
fs
dec
leave
loopne
mov
in
push
or
aaa
xchg
xorb
jg
in
adc
add
pop
ljmp
mov
sti
cld
jno
cmp
testl
cli
jne
loopne
push
push
shlb
fadds
push
loopne
mov
and
lret
rolb
pop
sbbb
add
push
xor
scas
movaps
ret
roll
ja
es
shrl
xor
lcall
cmc
jg
cmpsb
sahf
and
inc
sub
inc
sbb
into
cmp
hlt
xchg
xchg
sbb
rorb
add
push
sbb
xor
pop
mov
stos
or
and
and
femms
pop
mov
adc
push
mov
mov
adc
sub
pop
add
pop
xlat
dec
sub
testb
sub
fistps
daa
cmp
cmp
mov
push
xchg
push
stos
dec
xor
scas
dec
ljmp
pop
dec
push
mov
jo
adc
ja
sbb
mov
xor
sub
add
mov
mov
adc
adc
mov
fistps
lds
jmp
push
adc
and
imul
adc
adc
sbb
dec
cmpsb
lock
push
sub
add
js
adc
jge
enter
lock
test
add
push
jnp
sbb
mov
add
sahf
xor
mov
xorb
lods
add
xor
mov
xlat
and
aam
imull
daa
and
addb
inc
sbb
mov
lock
xchg
sub
cmc
scas
add
scas
xchg
cmp
enter
pushf
mov
jl
xchg
imul
cmp
les
pop
pusha
dec
addl
stos
push
fistl
jo
jb
dec
call
adc
repz
test
push
rcll
lcall
and
or
push
inc
dec
loopne
sub
mov
dec
push
jae
movsl
mov
enter
xor
adc
add
fistpll
or
inc
push
push
fcoml
inc
add
arpl
sti
test
xor
add
add
lods
dec
xlat
add
test
sbb
jo
inc
sarb
hlt
enter
jmp
out
and
xchg
js
aaa
cmpsl
sarb
sub
pusha
xchg
xor
lret
ficomps
out
jge
mov
in
fdivrl
jp
xchg
pop
xor
jl
pop
dec
ljmp
and
sub
jno
add
cmp
lcall
add
jno
mov
push
add
sbb
xchg
out
dec
int
jg
mov
mov
sub
or
jnp
xor
int
lret
add
or
dec
outsl
push
flds
jae
test
add
gs
pop
cmp
mov
filds
sbb
mov
je
test
adc
lret
fisubl
push
in
jp
jo
mov
stos
push
repnz
mov
push
or
xchg
jle
dec
popw
repnz
mov
cmp
sbb
aam
add
xlat
test
or
in
pop
sub
les
or
fwait
add
push
movsb
andb
nop
sub
call
daa
scas
cmpsl
into
ja
lock
or
js
bound
aam
push
xor
shl
mov
adc
shlb
xor
mov
adc
mov
mov
mov
push
xor
dec
adc
outsl
js
add
pop
scas
int3
adc
xor
test
jmp
or
mov
add
xor
pushf
test
add
ja
push
inc
pusha
stos
cs
cmp
mov
sbb
std
mov
int
add
or
xor
mov
std
cmc
in
inc
sub
adc
and
cli
and
cmp
jnp
mov
pusha
pop
verw
dec
test
bound
inc
sub
fmuls
stc
add
add
cmp
push
gs
add
sbb
int
insb
push
sti
xchg
inc
sub
mov
in
inc
test
mov
js
das
in
pop
fcoml
cs
sub
add
fwait
stos
cmpsl
jle
clc
push
aam
sbb
adc
ja
add
sub
or
adc
iret
pop
cld
mov
add
fldt
push
in
and
add
in
icebp
mov
inc
sbb
pop
fcoms
sub
shrb
add
push
cmpsb
sub
arpl
movsb
loop
mov
sub
pop
cli
jl
jge
jo
rcll
add
loope
nop
iret
jge
add
stc
test
lret
inc
loop
jge
mov
mov
fmull
mov
andb
loop
mov
mov
test
fdivl
or
mov
insl
das
xchg
stc
inc
shl
test
in
sbb
mov
outsb
pop
pushf
popf
addl
and
pop
mov
add
sub
adc
push
push
sub
push
pop
add
int3
faddl
pop
jne
loop
pop
ret
dec
add
jecxz
lods
iret
shlb
xchg
add
pusha
mov
push
jns
shlb
sub
xchg
pusha
mov
shrl
pop
cltd
add
xchg
add
pop
push
pop
insb
mov
je
push
call
dec
sbb
mov
dec
test
push
in
push
ljmp
mov
addr16
movsl
test
push
push
adc
popf
in
pop
add
je
out
add
fwait
or
xchg
add
fsts
nop
cmp
mov
pop
jne
clc
mov
inc
dec
jae
mov
mov
pop
inc
and
mov
mov
sbb
test
cmc
jo
or
icebp
fnstcw
add
add
add
mov
pop
push
xor
xchg
xchg
jecxz
out
loopne
sbb
add
rcrb
push
repz
mov
outsb
cltd
sub
dec
pop
add
cmpsl
dec
mov
xchg
add
jns
je
out
cwtl
jo
pop
adc
shrb
push
pusha
loopne
fdivl
add
cmp
nop
mov
aam
std
iret
shll
mov
enter
repnz
out
adc
hlt
pusha
mov
flds
scas
ret
ja
test
fldenv
fs
push
or
mov
mov
pop
icebp
imul
mov
aas
mov
aas
xorl
sbb
cmp
cld
imul
sbbb
cltd
cmp
test
loop
push
enter
push
mov
cmpl
jo
andb
pop
lock
call
pop
sti
repz
cli
loopne
aas
adc
cmp
xor
or
out
dec
or
nop
cmp
mov
jno
push
cmp
mov
inc
movsb
mov
sbb
add
clc
rcr
inc
fcoms
inc
aad
cld
jo
sbb
push
addr16
sub
xor
aas
pop
lret
in
and
xor
mov
sub
pop
sbb
popa
mov
test
lahf
sub
cld
adc
loop
jo
fldt
dec
gs
and
push
in
orl
cmc
mov
repz
fwait
movsb
mov
push
add
mov
jne
shlb
adc
dec
call
orb
js
push
aam
push
add
scas
lret
cld
or
mov
xor
dec
subb
out
cwtl
xchg
test
mov
cld
dec
and
loopne
pop
or
cmc
push
add
push
lods
adc
xchg
adc
jne
mov
xchg
inc
shll
int
aaa
aam
fsub
les
out
sbb
enter
adc
add
imul
or
test
pop
insl
add
jl
cmp
and
add
bound
push
or
enter
vpunpckhwd
pop
je
sub
adc
mov
jo
roll
sub
inc
push
cmp
adc
xor
mov
movsb
mov
shlb
aaa
jp
mov
loop
xor
pusha
adc
das
dec
test
mov
fcompl
xlat
inc
push
xlat
pop
sarb
imul
scas
inc
ret
mov
add
mov
or
mov
adc
jb,pn
adc
xor
into
push
scas
mov
cmp
pop
lods
adcb
lds
shlb
addr16
pop
or
fadds
sbb
add
mov
jge
cmp
or
mov
idivl
in
jg
lods
clc
push
pop
adc
jbe
push
sub
dec
imul
inc
mov
or
ficomps
shr
test
xchg
add
add
jg
rolb
ficoml
lds
pop
push
in
rolb
cli
mov
les
idivl
add
xor
mov
sti
scas
in
mov
popa
ficoms
sbb
mov
mov
xchg
push
dec
xor
push
add
scas
push
rolb
inc
push
dec
xor
jle
repz
mov
dec
pop
inc
adcb
es
lret
clc
pop
shlb
aam
lret
adc
inc
loop
lock
sarl
pop
dec
pop
xchg
sub
into
xlat
and
iret
out
inc
inc
jecxz
sahf
stos
mov
sub
adc
clc
nop
test
cmp
jnp
xor
jo
pop
cwtl
cmpb
enter
push
mov
cmp
add
ret
add
push
loop
add
daa
pop
sti
or
pop
add
pop
mov
enter
inc
bound
push
adc
mov
push
pop
rcl
mov
inc
and
clc
pop
out
xlat
push
pop
je
add
mov
sub
mov
fs
and
mov
jo
fstpl
add
inc
mov
cmc
sbb
stos
ljmp
sbb
dec
aam
jle
adc
test
stos
shlb
cmp
pop
fisttps
xor
sbb
in
mov
in
add
pop
push
ds
adc
push
in
in
fs
ret
jge
adc
incl
sbbl
fcoml
addr16
push
jl
fiaddl
iret
add
stos
mov
popf
mov
jmp
cmpsb
dec
mov
adc
sbb
push
ljmp
inc
addb
adc
jae
addb
lods
add
movsb
and
add
outsl
dec
cmpsb
cmp
mov
repz
push
jle
push
loop
add
dec
lods
mov
add
sarl
in
cmpsl
cmp
fdivrl
clc
je
loop
cld
pop
add
sahf
cmp
jo
dec
cmp
outsb
enter
add
pop
repz
cmp
add
cmp
inc
mov
cld
sub
roll
mov
mov
sbb
test
ds
or
and
dec
cmp
rol
pushf
xchg
enter
add
push
mov
and
cli
jbe
nop
rcrb
mov
xlat
filds
mov
scas
pop
cmp
imulb
jne
lods
es
mov
add
mov
mov
sbb
idivl
shlb
sarl
lds
xor
mov
stc
in
stos
xor
test
mov
jle
sbb
add
movsb
xchg
cmp
cmp
push
or
mov
clc
add
repz
out
nop
xchg
add
andb
sarb
push
pop
test
dec
dec
jg
dec
jo
imul
lock
add
lods
inc
iret
xor
adc
add
jge
in
cmpsb
push
add
xchg
dec
cld
dec
in
test
pop
xor
inc
add
aad
stc
mov
test
decb
mov
jo
loope
fdivl
inc
insb
in
push
adc
adc
sbb
add
out
lods
popa
cs
sbb
ljmp
clc
and
inc
push
mov
int
stos
adc
mov
jg
xchg
in
dec
lock
add
into
mov
sahf
jnp
add
or
loopne
xchg
bound
test
rolb
xor
and
int3
dec
out
pop
add
jmp
fs
push
cwtl
add
xor
jo
or
mov
adc
mov
cmp
and
test
jmp
in
adc
add
dec
or
push
data16
mov
add
fcomp
xchg
add
add
arpl
sbb
inc
jo
aam
mov
sbb
mov
fcom
out
imul
add
idivl
add
stos
movmskps
mov
outsb
add
inc
das
mov
std
add
push
jno
add
pusha
into
imul
sti
icebp
jo
and
add
add
repz
loopne
xchg
in
jle
icebp
movsb
and
adc
add
push
inc
fstpl
jno
xchg
and
add
xor
mov
movsb
cwtl
mov
lods
xor
add
icebp
pushf
jle
or
sub
and
cwtl
cmp
mov
jo
les
add
shl
or
mov
cmp
je
outsl
dec
mov
mov
adc
cmpsl
and
push
cmp
adc
clc
add
mov
popa
cli
add
xlat
out
aad
jne
pusha
mov
cmp
and
ret
pop
lock
sbb
xabort
or
imull
pusha
popa
fsub
pusha
add
cld
test
testl
mov
popa
xorl
sbb
add
sahf
push
imul
adc
out
xchg
loopne
scas
mov
mov
repnz
jne
mov
push
int3
and
repz
add
or
jae
cmpsl
mov
push
pop
or
loope
add
test
inc
lds
dec
fadd
xor
mov
fs
lods
adc
cld
and
mov
xor
cmp
cmc
or
out
jle
jns
mov
inc
fdivl
sub
stc
sbb
test
pop
ss
jnp
idivb
jg
cmp
cmp
mov
sbb
add
addr16
mov
cmp
inc
pop
ss
push
push
stos
xor
mov
adc
jbe
dec
addr16
push
add
sub
rol
or
jae
push
lods
stos
rcrb
pop
adc
xor
and
sub
pop
cmp
pop
out
jnp
shlb
cmpsb
adc
xlat
div
add
add
and
xor
fbld
inc
dec
sub
mov
fsubl
pop
and
ljmp
int3
mov
int
test
orb
dec
adc
or
cwtl
and
loope
jmp
fsts
data16
xchg
ja
xor
cmp
adc
inc
in
cli
mov
out
add
mov
bound
pop
enter
add
add
pusha
xchg
adc
lds
lcall
cwtl
push
push
mov
xor
inc
mov
insl
aam
sub
mov
dec
test
jo
jo
push
adc
jle
lock
outsb
pop
icebp
out
rclb
dec
and
inc
int3
mov
inc
bound
xchg
push
sbb
mov
sarb
mov
rolb
shrl
and
mov
mov
add
mov
imul
pop
dec
jl
fpatan
lock
jmp
adc
xchg
shlb
jnp
pop
bound
lret
icebp
or
fbstp
and
insl
je
lret
mov
dec
fiadds
or
fs
inc
test
and
and
cmp
sub
or
mov
push
or
pop
aam
jecxz
xchg
pop
les
cmp
add
sbb
adc
sub
test
or
aaa
stc
inc
and
out
push
dec
add
pop
mov
popa
push
jb
insl
jg
push
cli
jo
xchg
inc
test
inc
insb
adc
cltd
jbe
add
mov
int3
lret
in
add
jmp
rcll
jae
les
sbb
cmp
es
sets
add
lods
pop
ds
jmp
push
out
data16
pop
enter
adc
cld
sbb
inc
xchg
add
mov
adc
orb
in
push
rclb
xorb
popf
data16
pop
mov
push
xchg
jl
sub
pop
push
in
call
mov
aam
adcl
xchg
jg
cmp
jmpw
pop
sub
xchg
mov
test
or
add
pusha
fdivs
test
add
iret
mov
dec
mov
loope
adcl
xchg
in
outsb
rclb
xchg
dec
in
jp
mov
push
lcall
mov
cmp
mov
aad
out
add
dec
and
push
std
hlt
sub
jne
aaa
add
cmpb
repz
mov
jno
rclb
pop
push
add
push
xchg
cld
movsb
adc
mov
fldenv
sbb
lods
cwtl
fs
adc
clc
dec
adc
cwtl
or
pop
jp
les
cmp
nop
mov
add
imul
add
adc
outsl
pop
push
dec
vphsubbw
add
dec
adc
xchg
inc
mov
int
pop
add
ret
lds
jmp
shll
adc
hlt
adc
fcoml
sub
data16
nop
nop
in
push
int3
scas
jmp
repz
filds
add
clc
adc
add
lea
xchg
inc
in
in
jbe
aam
xor
adcb
sbb
jl
mov
ss
add
pop
sbbb
jmp
or
add
std
push
xchg
and
adc
stc
cmpsb
or
imull
in
std
xchg
jecxz
fwait
xchg
pop
cmp
push
xchg
outsb
cltd
addb
in
call
xchg
adc
stos
jmp
sbb
sub
add
push
inc
in
test
test
lock
aaa
hlt
dec
cwtl
dec
xor
push
add
ret
out
jge
nop
lahf
daa
xchg
mov
fdivs
cmc
lock
add
mov
adc
aad
ja
pop
add
in
jle
jp
or
mov
add
add
popa
in
pop
sbb
fwait
xchg
std
mov
or
shll
cmp
cmp
add
mov
icebp
xchg
add
jg
xchg
je
outsl
cmp
sarb
xchg
nop
andps
lods
mov
test
std
jp
sub
add
cmc
add
jbe
stos
adc
movl
test
mov
xor
xor
mov
pop
add
mov
or
or
nop
jbe
xor
cmpsb
inc
cmp
pop
and
sub
cmpsb
call
add
mov
icebp
pop
out
notb
push
in
add
lcall
pusha
int3
addr16
daa
push
xchg
jbe
outsb
and
add
inc
into
call
add
daa
add
or
jne
dec
in
loope
arpl
sbb
fisubrl
add
push
cmp
xor
dec
enter
add
add
push
fidivrs
pop
cmp
dec
xchg
aam
lret
rcrl
mov
andb
cltd
and
mov
add
iret
jl
push
pop
jg
orb
fmuls
adc
add
int
sub
paddusw
sahf
cmp
dec
add
jg
mov
add
inc
pushf
add
adcl
icebp
lahf
mov
fs
jl
sbb
pop
lret
or
add
mov
es
popa
mov
dec
in
into
add
jp
hlt
mov
add
outsl
addb
fisttpl
cmc
xchg
mov
dec
add
sbb
loop
add
xchg
mov
sub
pushw
mov
fidivs
mov
repz
and
jbe
add
push
cmp
and
psrad
jecxz
inc
pusha
clc
lea
sbb
sti
fisttpll
xor
in
cmp
cmpsb
or
add
jo
mov
test
repz
push
mov
jp
popf
inc
mov
test
fs
shrb
inc
fstpt
dec
ss
or
rcrb
arpl
jge
insb
cmp
inc
mov
pop
rol
nop
clc
adc
mov
lods
dec
lods
aaa
sbb
mov
rcl
shlb
test
aam
push
les
lret
daa
cmpsl
outsl
push
pop
es
or
sbbb
in
add
jle
sub
push
loope
dec
in
inc
mov
lea
rcll
sbb
jae
daa
inc
mov
gs
stos
add
dec
xor
add
test
andl
mov
push
sbb
lea
sbb
cmp
and
xor
mov
in
ret
mov
ret
pcmpeqw
hlt
adc
sub
inc
out
add
xor
aas
test
dec
push
shll
fldcw
in
sub
stc
add
testb
cmp
sbbl
das
add
inc
call
fnstenv
inc
lods
mov
mov
inc
mov
jge
sbb
fistpl
fmul
add
lods
pop
inc
in
inc
out
or
mov
lahf
lcall
pushf
int3
out
push
popf
fildl
inc
cmpsb
lock
out
adc
sbbb
push
mov
dec
test
add
pop
jb
xchg
shlb
and
faddl
inc
int3
out
jg
sbb
cmpb
cmp
sub
add
mov
js
add
mov
mov
aam
pop
mov
sbbl
mov
add
sahf
push
std
mov
mov
push
movsb
mov
in
mov
repnz
inc
fimuls
and
nop
adc
dec
mov
mov
jb
push
bswap
pop
jnp
dec
push
fnstcw
dec
add
sarl
and
jo
cld
cmp
add
fs
xor
push
xchg
jmp
ss
add
push
in
das
mov
repz
cs
xlat
daa
fwait
rclb
dec
leave
popa
popl
jmp
pop
mov
fsub
or
cmp
xor
xchg
lods
or
mov
add
lods
pop
pop
ds
xchg
jo
push
loopne
push
fimuls
les
xchg
in
or
pushf
mov
idivl
jns
mov
icebp
inc
push
ds
sahf
sub
mov
lds
mov
add
leave
or
adc
add
gs
dec
jae
add
pop
cmp
add
je
out
dec
shll
test
out
js
fs
xor
add
cmc
je
mov
out
and
add
inc
push
ljmp
or
add
lahf
pusha
fcoms
rcrb
add
lock
gs
rcrl
imul
add
sbb
adc
mov
bound
loope
or
and
shr
flds
lock
dec
add
in
jg
xchg
adc
out
push
adc
jae
pusha
sbb
outsl
pop
ss
pop
jg
jge
lea
jmp
add
cmp
filds
insl
sbb
push
xlat
cmp
dec
rolb
inc
lret
aaa
adc
mov
jo
mov
dec
mov
sahf
jae
add
jbe
psubd
pop
pop
in
enter
inc
pusha
inc
int
pop
fsubp
cmpb
pop
sbb
ret
daa
shlb
xorb
imul
push
and
stos
add
jno
pop
loop
push
adc
es
and
clc
cmpsb
nop
hlt
aam
ss
add
pop
add
mov
jo
add
xchg
decb
push
test
mov
lods
cmpsl
pop
add
outsl
pop
adc
xchg
mov
jne
pop
popa
mov
and
cmpsl
enter
dec
cltd
dec
adc
dec
andl
rolb
es
aas
cs
in
pop
push
inc
cwtl
xor
sti
push
movsb
scas
add
ljmp
xor
loope
mov
xchg
add
fdivrs
add
jg
in
imul
and
xor
sub
mov
shrl
leave
roll
loopne
push
xchg
add
icebp
out
add
repz
mov
cmp
aam
mov
xor
push
cld
mov
and
push
call
add
and
push
add
stos
cmp
test
add
mov
and
mov
fidivs
inc
pop
subb
jnp
out
add
or
add
xchg
inc
push
xor
movsb
add
mov
es
lds
push
nop
xlat
inc
push
fdivs
xchg
add
ss
loopne
movb
xor
pop
repz
fldl
xchg
decl
popf
fildll
orl
daa
mov
aam
add
popf
add
cld
adc
fidivs
mov
repnz
sbb
inc
icebp
incl
fdivs
clc
mov
addr16
insl
popa
push
cmpsl
movb
add
dec
or
fwait
sbb
js
movl
stos
push
cmpb
lret
daa
xor
xchg
filds
insl
imul
movntq
out
dec
loopne
jg
push
pop
push
or
pusha
roll
add
push
das
lret
mov
mov
leave
pop
clc
add
ds
inc
mov
test
dec
mov
add
push
ret
sub
nop
dec
sbb
mov
or
mov
sarl
jns
mov
lods
cltd
in
js
add
mov
hlt
cmp
lahf
test
fsub
push
jge
out
mov
push
in
adc
add
popf
lcall
add
dec
mov
nop
mov
mov
ds
sbb
add
imul
jp
add
andl
movsl
rclb
outsb
push
or
aas
add
jecxz
add
cld
aad
out
aam
or
movsb
sarb
mov
es
mov
mov
add
mov
daa
cmpsb
push
js
mov
enter
popf
dec
loopne
add
movsl
sbb
pop
push
lods
adc
int3
cmp
sbb
cmp
sub
lock
and
ljmp
ret
or
clc
popa
prefetcht1
sbb
pushf
xor
ret
dec
ficompl
nop
inc
pop
sbb
jns
xor
jle
jge
mov
out
and
pop
stos
or
mov
bound
xor
dec
imul
nop
loope
jbe
les
add
jg
and
rcrl
push
fldl
add
push
int
jmp
add
xchg
and
jmp
xor
fidivrl
push
jle
test
outsb
push
xchg
add
icebp
jnp
lret
js
sbb
fs
jge
ljmp
pop
clc
inc
cld
mov
push
mov
dec
mov
sbb
fwait
jb
pop
nop
adc
std
dec
push
mov
cmpsb
ja
add
add
loop
repnz
loopne
add
fsubr
cmp
in
or
pop
rcrb
test
nop
lret
in
cmp
xchg
jp
pop
mov
xor
lret
pop
jl
add
int3
push
add
jo
add
inc
enter
mov
mov
scas
pop
pop
dec
movsb
dec
addb
add
mov
pusha
pushf
ja
cmp
mov
xchg
adc
pop
inc
into
ss
mov
xchg
and
jno
sub
clc
lahf
or
rclb
in
int
adc
xchg
lock
outsb
inc
aam
inc
add
mov
testb
and
lret
or
add
dec
mov
pop
mov
popf
fstpt
rclb
push
lret
jb
std
sbb
mov
fidivrl
cmpsb
adc
test
in
jp
cld
xchg
push
test
and
mov
jmp
ror
lea
call
in
les
xorl
mov
sub
shlb
and
cmpl
addl
add
sbb
push
add
add
push
ret
repnz
pop
shlb
mov
or
pop
into
es
incl
add
mov
ret
add
loopne
iret
push
mull
loopne
sti
outsl
or
xchg
sub
ffree
mov
loope
push
mov
cmp
or
mull
lea
mov
adc
mov
add
sbb
jecxz
jle
ds
pop
jp
insb
rcrb
outsb
sub
push
lcall
dec
mov
add
jno
sti
stc
cmp
xor
loopne
mov
jbe
add
mov
movsl
xor
imul
mov
shl
adc
xchg
xor
mov
lods
inc
cmpb
jo
xchg
add
dec
cmovg
out
inc
repnz
jne
push
add
stc
pop
inc
sbbb
fldl
lds
out
xchg
mov
inc
jne
pop
negl
cltd
lret
and
out
inc
adc
mov
stos
addr16
push
xor
mov
push
mov
jno
push
mov
es
test
bound
rcr
fadds
repnz
inc
rclb
add
or
cld
and
ret
add
jge
push
test
and
mov
add
subb
outsl
in
jp
sub
mov
and
lahf
add
mov
add
cmp
stc
push
pusha
fcoml
popa
shlb
rorb
or
and
test
imul
popf
push
cltd
out
add
call
xor
push
inc
xor
mov
js
cmpsl
adc
enter
pop
mov
clc
pusha
fldcw
cmovb
add
sbb
mov
mov
add
call
mov
pop
and
mov
jecxz
icebp
lret
push
shll
xchg
add
cli
movsb
nop
cld
push
mov
mov
stc
mov
jp
jno
loop
sbb
lds
mov
and
add
int3
xchg
add
push
add
xchg
mov
jbe
adc
adc
xorb
call
ds
pushf
arpl
flds
fs
out
pop
push
verr
imul
cmp
push
test
add
sub
rolb
arpl
mov
xor
push
push
ret
lods
jbe
into
adc
sub
test
mov
mov
fisttpll
inc
pop
or
pop
cmp
inc
sbb
imul
fbstp
icebp
inc
frstor
push
add
and
xor
int3
inc
adc
flds
mov
dec
pop
pop
loop
add
jne
mov
mul
test
fadds
daa
mov
xchg
js
or
xor
or
add
adc
jp
pop
scas
pop
pop
orl
xchg
pop
orb
pusha
adc
and
and
add
lock
xor
pop
add
outsl
sub
pop
and
jns
push
push
sbb
cmp
mov
mov
and
sbb
shlb
fwait
add
cli
enter
pop
ss
inc
push
and
loopne
jle
push
movsl
cs
jmp
jns
dec
sbb
ds
add
shlb
dec
adc
add
add
je
paddusb
add
ss
pop
daa
aad
int3
rorb
push
into
shrl
pop
inc
lock
adc
add
lcall
mov
shlb
sub
mov
add
sub
dec
in
inc
out
fdivl
push
sub
fimuls
fwait
xor
jbe
rolb
gs
add
nop
inc
std
jo
test
int3
mov
push
mov
add
push
ret
pop
push
call
int3
cmp
push
sbb
mov
roll
aas
cld
xchg
ljmp
xchg
ret
roll
xor
mov
or
and
push
and
rol
mov
cmc
dec
lea
xor
xor
lock
pop
enter
sbb
and
flds
data16
xchg
pop
xor
add
movsb
aas
jmp
push
in
dec
stc
sub
mov
pop
pushf
iret
add
jae
xor
add
push
adc
pop
dec
loopne
mov
std
clc
push
mov
aad
or
pop
cmp
aaa
push
orl
pop
add
or
jle
sbb
pop
filds
jb
add
cltd
pop
les
jmp
mov
sbb
jb
test
jae
push
add
test
sbb
inc
ljmp
adc
inc
push
lret
inc
popf
les
add
pusha
sbb
jg
in
in
cmpsb
add
pop
js
xorl
insb
pop
pop
cmp
fstpt
popf
mov
mov
cwtl
push
mov
mov
push
mov
ljmp
mov
lock
std
add
popa
aas
cmp
xor
arpl
jecxz
mov
test
cmc
lcall
rclb
mov
gs
jg
pop
cwtl
lahf
ret
lea
shlb
addl
mov
pusha
mov
out
and
iret
pop
mov
xchg
ss
cltd
jo
xchg
incb
clc
ds
xor
fiadds
xor
sub
inc
add
test
mov
cmp
and
mov
or
stos
push
xor
aaa
loopne
pop
and
jl
and
jo
sbb
or
ss
sbb
int
ds
mov
in
out
orb
cmpsl
or
fcomps
daa
repz
adc
xchg
pop
or
pop
and
inc
or
jg
jnp
push
rcll
fsubrl
out
adc
scas
push
les
xchg
pusha
dec
push
mul
out
iret
sub
out
xchg
les
add
sub
add
stos
xchg
mov
popa
movsb
mov
or
inc
pop
add
hlt
jo
push
dec
icebp
cmovs
sub
fistpl
es
imul
imul
sub
pop
leave
add
jge
stos
jae
lret
or
aad
add
stc
add
jo
or
aaa
jl
sar
into
in
out
roll
mov
sub
testl
ficompl
pop
jg
hlt
mov
pop
add
push
jnp
inc
daa
int
stc
ret
popa
adc
fsubrl
cmp
mov
add
lods
mov
pusha
inc
mov
nop
add
add
out
loopne
test
cltd
mov
insb
inc
xchg
add
ds
inc
movb
add
loopne
cli
mov
jecxz
rcrb
stos
imul
rorl
xor
add
pop
inc
mov
adcb
lods
add
pop
es
sub
mov
fnstcw
pop
inc
int3
fs
add
xchg
popf
push
add
sbb
push
mov
push
add
ret
jnp
in
repz
or
xchg
insb
lcall
out
pop
sbb
sub
out
add
jb
loopne
loop
mov
outsb
mov
add
push
scas
js
push
daa
shrl
pop
dec
movsl
orb
subb
cld
movsb
add
insl
push
js
push
xor
fs
sub
mov
xchg
adc
inc
popf
fiaddl
jbe
mov
push
data16
add
xchg
push
clc
sub
shrl
jge
rolb
test
addr16
ja
fiaddl
and
sbb
aaa
rcrb
fisubrs
pop
iret
shld
and
jns
add
sub
cmpsl
test
cmp
add
sahf
mov
loopne
push
xlat
test
js
popl
lods
lock
outsb
sbb
fdivl
mov
push
mov
stc
aam
xchg
fsubrs
sbb
int
inc
add
push
mov
pop
fiadds
add
pop
mov
mov
push
adcb
rclb
lock
jecxz
and
jg
and
ja
xchg
aaa
cmp
movsl
dec
jb
mov
add
push
jnp
pop
sbb
dec
add
xor
and
leave
xor
xchg
aas
xor
or
sub
sbbl
aad
sarl
jne
incw
push
rorb
in
test
sbb
lods
inc
ficoml
out
cmp
daa
push
jp
add
sub
cmpsl
and
nop
sbb
mov
arpl
ja
movsb
rclb
popf
or
sbb
ljmp
dec
fldenv
mov
adc
jno
dec
adc
pusha
push
pop
pop
enter
xor
push
loop
lods
ljmp
mov
cwtl
jnp
mov
jns
sub
lea
leave
mov
cwtl
add
cmp
mov
cmpsb
icebp
add
rolb
mov
ljmp
push
add
leave
jae
test
and
sbb
xor
inc
in
mov
adc
xchg
shl
inc
cld
or
xchg
mov
mov
cmpsl
cmp
xor
add
mov
dec
aam
add
icebp
loop
pop
dec
bound
clc
add
int
movl
cmp
popa
and
fs
push
sbb
je
add
sarb
add
dec
jge
xchg
or
imul
add
fmull
rsm
and
push
adc
jbe
imul
xchg
andb
cmpsb
xchg
or
add
scas
inc
jmp
cmp
inc
popa
sbb
movsl
xor
or
jns
pop
xchg
call
fmuls
idiv
xchg
sbbl
out
mov
push
xchg
clc
add
sub
test
sbb
leave
pop
loop
add
out
cli
pop
add
daa
lods
sbb
bswap
arpl
mov
faddl
das
pop
dec
push
xor
adc
flds
adc
sahf
scas
shr
dec
mov
inc
push
inc
add
pop
rcrb
mov
add
jmp
jp
nop
xor
pop
sbb
inc
add
data16
adc
and
add
je
por
jmp
or
ja
mov
add
pushf
pop
add
repz
sub
adc
cmpsb
dec
in
test
iret
out
cmp
fs
mulb
sub
mov
or
in
mov
shrb
adc
xor
add
jbe,pn
test
cmp
add
pop
mov
movl
shr
mov
psubq
arpl
ret
shll
cli
ja
and
push
mov
jb
js
jne
gs
roll
into
outsb
les
xchg
adcb
dec
or
sahf
rolb
mov
mov
popa
push
es
in
sub
lret
add
mov
xchg
add
sbb
movsb
ret
mov
sub
sahf
add
cmp
sub
push
jmp
in
call
add
outsb
pushf
mov
ljmp
add
ds
out
aam
and
pop
roll
push
push
jmp
mov
addb
sbb
leave
or
xor
ret
mov
fbstp
pop
cmp
into
add
fnsave
add
jae
test
add
lret
pusha
or
nop
sbb
scas
sbb
js
sub
aam
jl
pop
lods
movsb
pop
int3
gs
shll
pushf
inc
add
sahf
pop
lock
pop
icebp
or
xchg
xor
pop
and
add
add
push
cmp
jmp
inc
pop
repz
inc
xchg
jl
movsl
cmp
add
xchg
sub
fmuls
rclb
das
add
mov
jl
imul
lret
int
inc
jmp
jno
push
dec
add
orl
or
add
out
sub
lds
cmpsb
ret
sbb
adc
inc
aaa
cli
repnz
mov
and
aas
ds
test
adc
sbb
fwait
xor
jo
cmpsl
push
call
add
arpl
push
lcall
adc
add
push
cmp
rcrl
shlb
jmp
xchg
shlb
mov
push
repnz
idivb
ja
mov
movsb
out
adc
add
cmpb
loope
add
test
sub
or
adc
add
xchg
pop
or
nop
bound
and
push
shll
sub
add
inc
popa
jnp
push
jno
adcl
cmc
out
add
in
rorl
inc
jb
sbb
adc
imul
aas
mov
mov
add
push
jg
adc
dec
cmpl
pushf
mov
testl
adc
mov
mov
setae
or
pop
inc
sub
xchg
movsb
mov
mov
mov
pop
pushf
xor
stc
sti
dec
push
adc
add
popf
ss
enter
add
or
nop
daa
xorb
fisubs
sub
mov
and
add
adc
cmp
push
inc
xor
rep
dec
mov
mov
mov
or
ret
mov
or
mov
or
sbb
sahf
add
mov
inc
enter
mov
fisttpll
or
push
or
jb
orb
sbb
outsb
fimull
pop
sbb
imul
adc
mov
pop
sub
jle
pop
add
add
sahf
mov
inc
scas
in
pop
sub
add
gs
sbb
mov
int3
push
lcall
cmp
mov
add
ret
and
maskmovq
divl
sbb
pop
testb
ds
adc
add
pop
mov
xor
and
cmc
nop
add
adc
add
imul
mov
fadd
sub
in
rorb
lret
add
xchg
cmpsl
pusha
push
and
loope
adc
inc
jle
xchg
jb
xchg
add
inc
out
dec
push
add
pop
pop
adcb
pop
add
mov
dec
jne
jmp
or
and
sub
ss
dec
sub
and
mov
dec
adc
sub
add
jmp
or
outsl
orl
xchg
add
xchg
sub
mov
or
enter
mov
pop
mov
mov
sub
jecxz
adc
jbe
pop
pusha
push
out
mov
pop
cs
push
sub
push
lds
and
int3
ja
inc
push
nop
nop
add
aaa
es
add
std
movsl
call
lret
cmp
scas
lock
in
sahf
leave
add
aaa
shlb
mov
xor
jecxz
push
sub
subl
add
mov
dec
sbb
push
cld
sbb
les
cltd
inc
aad
aaa
in
adc
dec
shrb
pop
les
add
mov
pop
sub
cmp
pop
in
test
add
mov
sbb
gs
mov
fwait
pop
adcb
sub
inc
mov
xor
xor
lret
sarl
stos
sbb
shlb
cmp
xchg
pop
mov
inc
mov
lret
test
inc
xchg
fnsave
inc
mov
mov
outsl
add
data16
and
int3
mov
push
push
lea
add
jns
int
add
inc
in
adc
cs
sub
stc
clc
lret
add
mov
adc
jmp
imul
lea
mov
mov
fistps
andb
stc
push
dec
mov
sub
jmp
cmp
movsb
out
in
xchg
jmp
mov
mov
jnp
push
sub
jg
faddl
mov
pop
lcall
cmp
sahf
and
xor
add
mov
cld
inc
movsb
mov
sbb
adcl
mov
mov
cld
fcmove
add
mov
xor
mov
dec
hlt
cmp
add
pop
push
outsb
add
xlat
pmaddwd
cwtl
push
out
add
sbb
rcll
movsl
scas
sbb
sbb
adcb
mov
mov
out
sarb
pop
pop
cmp
push
rcr
add
or
aaa
xchg
add
les
clc
dec
cmp
andb
bound
or
loopne
and
call
inc
sub
jmp
sub
jecxz
xor
call
adc
sub
hlt
dec
repz
adcl
or
jg
das
movsl
pop
es
mov
jno
inc
testl
inc
mov
xor
mov
ficomps
add
sbb
xchg
mov
and
sbb
xor
data16
stos
pusha
dec
movzwl
cld
sbb
lcall
stos
push
jg
jp
adc
pusha
and
pop
rorl
adcl
jmp
add
mov
test
push
jno
xchg
mov
sub
test
adc
daa
add
loop
add
stc
fdivp
or
inc
cli
pushf
sub
xchg
je
aas
int
out
out
pusha
hlt
and
xchg
clc
add
sbb
into
rcl
lds
add
mov
inc
pop
pushf
jmp
out
cmp
lds
test
pop
jno
ret
sub
rcl
in
loopne
aaa
in
push
or
lods
pusha
ret
daa
scas
inc
xchg
loopne
nop
lock
add
in
pop
mov
mov
xchg
cmp
dec
mov
cld
clc
push
push
loope
mov
jbe
inc
push
in
cltd
inc
dec
push
add
push
pop
sbb
std
xchg
pusha
iret
push
stc
cli
out
add
adc
cmpsl
je
add
mov
jmp
popa
add
mov
push
pop
adc
hlt
addr16
aas
pop
loopne
jno
dec
lods
dec
adc
test
sbb
and
movsl
add
jbe
inc
jmp
jp
loopne
cmp
fs
sbb
sbb
cmp
xchg
shl
stos
pusha
xchg
clc
push
or
repz
int
add
jecxz,pn
mov
cmp
sbbb
andl
xor
sub
push
mov
jnp
cltd
arpl
xchg
out
popf
jecxz
sbb
pop
add
jg
mov
sub
add
repz
xchg
mov
dec
mov
jbe
inc
mov
jne
jg
es
mov
jb
add
pusha
jmp
jae
popl
stos
push
in
sbb
aad
jle
imulb
out
jg
jmp
or
xchg
int
add
pop
sub
push
adc
repz
and
jns
push
out
mov
loopne
adc
xchg
xor
xchg
mov
add
lcall
pop
int3
xchg
lret
lock
adc
mov
aam
mov
mov
add
jns
jnp
adc
cwtl
cmp
sub
outsl
add
xchg
and
sti
xchg
add
fbld
jne
dec
xchg
test
add
outsb
xchg
in
sub
sub
xchg
hlt
sbb
loop
stos
rcr
lds
dec
out
popa
add
jmp
pop
mov
insl
cmp
pushf
divps
adc
icebp
add
mov
adc
int
out
inc
mov
lds
aas
mov
arpl
xor
add
pusha
push
out
xchg
jmp
mov
loopne
in
add
stc
loop
into
jo
subb
sbb
jo
loopne
pop
mov
xlat
inc
mov
add
mov
loopne
mov
jnp
jo
push
bound
aam
pop
mov
sahf
addr16
lds
rorb
inc
add
notb
push
and
mov
jge
adc
jmp
push
cwtl
fldenv
rolb
lret
fwait
add
add
add
aaa
push
jg
xor
sub
stos
in
mov
jbe
jae
and
add
mov
add
jp
int3
and
push
ds
insl
xor
or
add
insb
mov
mov
sbb
in
add
loop
or
repz
jbe
mov
or
shlb
and
unpckhps
mov
and
outsb
add
mov
pop
inc
or
lea
add
xor
lcall
scas
clc
pop
frstor
mov
mov
int3
mov
mov
and
in
mov
push
mov
hlt
sbb
mov
jbe
sub
imul
popf
pop
idivb
fisubs
mov
sub
or
dec
add
jge
dec
pop
fildl
and
loopne
pop
inc
xor
cmpl
dec
daa
movsb
stos
pop
add
clc
add
add
mov
fdivrl
sbb
icebp
shl
mov
imul
add
pop
pop
test
aam
fcom
aas
loope
or
jecxz
cmp
add
jne
insl
stos
mov
std
add
out
test
xchg
bound
dec
adc
cmp
add
jle
cmp
nop
cmc
add
enter
loopne
andb
fst
cmp
mov
mov
add
pop
inc
je
add
out
sbb
push
jmp
or
add
cmp
mov
inc
or
push
cmp
pop
mov
incl
push
fwait
sub
in
mov
mov
fisubrl
push
out
pop
add
and
pushf
in
scas
loope
shrl
loop
loopne
in
add
sahf
pop
test
cmpsl
ret
daa
js
add
subb
lcall
jno
stos
mov
inc
imul
xchg
mov
jnp
icebp
nop
arpl
ror
fadds
outsl
mov
xchg
cld
aaa
add
aam
mov
add
add
mov
js
inc
inc
dec
sti
inc
add
call
add
pop
js
es
mov
push
fstpt
adc
push
std
out
add
pop
push
fdivrs
addb
push
pop
pop
aas
and
sbbb
or
lds
add
adc
xchg
dec
insl
xor
dec
add
aad
pop
add
decl
or
inc
xchg
push
std
mov
pop
jno
lret
movl
ret
sub
adcb
cmc
add
dec
imul
insl
inc
jns
jno
pop
test
rolb
daa
dec
adc
fisttps
xor
mov
icebp
roll
mov
add
std
or
push
mov
add
mov
sbb
xor
xchg
and
jmp
imul
cltd
out
add
loop
jbe
add
lret
xchg
gs
cmp
mov
inc
les
dec
movsb
xchg
xchg
fsubl
push
mov
dec
jecxz
sbb
ffreep
cmc
and
jg
sbb
pop
ret
jnp
add
and
lahf
inc
add
mov
push
inc
std
inc
cmp
iret
dec
rorb
xorl
add
add
rorb
fucom
jmp
add
imul
cmp
add
lods
jge
add
mov
mov
pop
inc
mov
add
mov
int3
adc
fwait
out
ljmp
pop
sub
and
add
inc
stos
enter
inc
clc
cmp
jb
or
adc
inc
push
pop
and
dec
jae
mov
jbe
lock
add
clc
outsb
test
xchg
or
push
xchg
ret
jo
scas
add
add
push
jb
cs
add
mov
aas
dec
aaa
addb
cmovl
lcall
divb
add
aas
xor
fwait
es
outsl
add
add
fsubrl
lea
mov
sahf
sub
and
inc
xor
or
xchg
aas
inc
stos
sbbb
sub
cmp
inc
mov
sbb
pop
pop
movl
ret
repnz
push
mov
mov
mov
adc
jne
cmp
mov
xchg
jns
int
out
cmp
cmp
hlt
add
sub
test
es
scas
push
pop
jmp
mov
jg
int
sub
jbe
andb
stc
add
aas
mov
add
testl
add
sbb
out
mov
lock
inc
rcrb
mov
js
sar
sbb
add
adc
sub
cld
jo
xchg
push
xchg
fsubrs
repnz
jecxz
sbbb
xchg
pop
and
inc
sbb
jns
sarb
pushf
adc
hlt
add
push
mov
icebp
pop
sti
dec
mov
cmp
bound
imulb
inc
lgs
fdivl
insl
add
outsl
push
dec
je
and
pop
add
pop
ljmp
push
mov
cmp
mov
dec
or
sub
sbb
lods
mov
and
mov
iret
cmpsl
inc
mov
and
add
cltd
mov
add
outsl
out
pop
push
sarl
cmp
movsl
inc
xor
icebp
sub
push
jns
adc
xlat
sbb
pop
cmp
mov
and
orl
test
adc
loop
or
xor
inc
mov
cld
xor
hlt
ds
add
frstor
jns
ja
std
je
ficomps
jnp
pop
jne
sub
inc
sbb
mov
xorl
clc
sub
aad
add
or
je
add
sub
rcrl
and
insb
adc
mov
cli
jl
jp
cvtpi2ps
inc
mov
inc
ret
loop
adc
fisubs
push
mov
dec
test
push
adc
fs
mov
iret
xchg
int
inc
mov
das
jae
mov
in
int3
sub
cmpsb
cwtl
adc
stos
loope
xorl
ret
lret
xchg
xor
fwait
mov
outsl
jl
xlat
sbbb
jmp
or
mov
daa
pop
xor
xchg
loopne
in
loop
nop
pop
mov
add
push
test
jno
add
les
dec
shl
loope
sub
or
jnp
imul
adc
cli
daa
insb
ljmp
movsb
testb
and
pusha
push
loop
pop
adc
test
fsubrp
cmc
adc
nop
jb
add
repz
sbb
rolb
ja
add
ret
add
inc
outsl
mov
or
movsb
or
inc
mov
pop
in
movups
data16
mov
sahf
adc
rorb
add
xchg
fcmovnbe
jne
push
and
xor
mov
loopne
xchg
cmpsb
xchg
andb
popf
and
rcll
pop
lods
add
jle
pop
inc
push
push
rorb
mov
push
inc
inc
sub
std
add
pop
adc
fiadds
ret
fdivrs
andl
mov
mov
mov
push
push
sbb
nop
add
repnz
faddp
mov
or
mov
test
hlt
in
maskmovq
divl
dec
les
std
rcl
lret
jle
flds
bound
faddl
andl
push
pushf
xchg
test
insl
jnp
pmulhw
inc
jp
adcl
cs
fistpll
imul
xor
adc
sub
add
ret
xchg
fnstsw
mov
push
ret
add
jp
or
loop
outsl
movhps
add
pusha
into
cltd
jl
bound
test
sbb
cmp
xchg
adc
sub
aam
xchg
and
in
ja
jmp
unpckhps
xor
push
add
ret
mov
js
add
add
addl
inc
cmp
xor
push
cmp
iret
pop
jle
stc
mov
sbb
or
gs
jo
sbb
adc
lret
add
addb
and
pop
ja
sbb
loope
paddusb
mov
lcall
in
sbb
xor
lahf
loopne
addr16
cmp
aam
push
or
sbb
or
xor
sbb
ja
or
mov
mov
bound
es
adc
pop
add
aaa
mov
jo
fiaddl
test
xchg
rclb
cmp
pusha
jmp
cmp
shl
rcrb
repz
mov
sub
cmp
xchg
mov
xchg
repz
inc
or
adc
addr16
pop
sbb
sahf
outsl
cmp
inc
sub
xchg
test
xchg
add
les
pop
andl
test
iret
add
pop
push
sub
mov
pop
arpl
call
add
adc
add
add
mov
cmp
xor
js
cmp
in
popf
testl
lret
jae
sbb
lods
cli
ret
pop
mov
in
ss
cmp
iret
add
in
sarb
sbb
sbb
pusha
push
xor
sub
add
fiaddl
xchg
or
clc
sub
hlt
dec
js
add
into
pop
jle
jae
add
adcb
xchg
mov
cld
add
sub
cmp
popa
frstor
sbb
add
inc
cltd
jmp
add
loop
add
lea
inc
in
and
adc
mull
cwtl
xlat
into
popa
sub
mov
mov
add
pop
inc
inc
add
add
inc
cltd
int
dec
add
mov
and
sbb
inc
jecxz
mov
xchg
aam
nop
add
test
mov
nop
adc
ljmp
rcrl
adc
adc
stos
add
sub
add
mov
loopne
cld
push
lock
cmp
xchg
adc
mov
xor
mov
pop
addb
add
mov
or
jmp
mov
jmp
popa
popl
stc
sbb
std
pusha
in
test
iret
cs
pop
jmp
push
cltd
push
add
jo
or
nop
mov
push
inc
and
jnp
hlt
gs
add
sbb
outsb
ror
int
lahf
xchg
pop
cmp
nop
sbbb
std
pop
add
mov
fwait
mov
adc
mov
add
int3
stos
rolb
jge
add
xchg
call
mov
push
jo
mov
and
lea
rorl
scas
cmp
cli
xor
cmp
add
mov
dec
xor
mov
inc
mov
xchg
sbb
xchg
sub
mov
lahf
cmpsb
mov
pop
add
sbb
outsl
cmp
and
mov
test
pushf
push
cmp
or
ja
sub
xchg
cwtl
add
cmpsl
pop
fists
je
mov
cmpb
adcl
jno
lock
xor
adc
pop
sti
add
inc
dec
cwtl
or
sti
push
mov
nop
shr
call
pop
div
mov
outsb
jo
inc
rclb
in
or
je
rclb
or
loope
and
in
xchg
xor
out
cmp
loope
repz
sti
aam
or
shll
lock
incl
stos
in
out
mov
push
mov
cmpsb
mov
xchg
repnz
mov
cli
mov
enter
fnstcw
jmp
and
movb
rorb
jmp
add
jne
fsub
pop
enter
jb
adc
mov
je
add
into
or
jno
shr
cmp
adc
mov
push
jbe
mov
pop
or
and
les
pop
pop
cmpb
inc
adc
dec
mov
sub
xor
mov
xchg
cmp
ror
push
cmpsl
mov
xor
fwait
call
xor
fstps
xor
mov
cmpb
push
adc
dec
jl
ss
xor
add
mov
fsubrl
sub
call
adc
adc
and
cmpl
mov
ds
push
stc
rorb
fisubs
rcrb
aas
inc
jbe
scas
pop
std
mov
loopne
popf
push
mov
jns
inc
int
insb
gs
inc
popa
xchg
pinsrw
xchg
xor
jecxz
mov
in
mov
clc
es
xor
pop
je
clc
or
dec
pop
cmp
or
mov
clc
stos
in
test
stos
push
inc
rclb
rorb
inc
shrb
push
lods
mov
out
or
jmp
scas
pop
shll
inc
add
jo
push
xor
mov
mov
jmp
nop
add
and
dec
add
int3
cli
inc
sbb
dec
sbb
jmp
xor
mov
ja
add
mulb
mov
adcl
in
mov
inc
add
mov
inc
int3
inc
dec
arpl
xchg
add
push
loope
add
test
inc
aaa
adc
and
mov
orb
enter
jmp
add
andl
mov
into
bound
rolb
mov
sarl
jmp
in
mov
push
sub
inc
sub
int3
adc
sar
mov
add
aad
bndstx
mov
fidivrs
dec
loopne
push
jmp
roll
daa
mov
shll
stc
mov
jbe
pop
arpl
cwtl
pop
xchg
shlb
mov
data16
push
sahf
dec
add
inc
mov
cwtl
add
out
adcl
xor
arpl
out
push
cmp
and
dec
ja
add
jp
or
jno
lret
inc
or
adc
inc
mov
jno
iret
test
and
inc
mov
or
push
xchg
mov
sub
mov
test
stos
add
mov
insb
mov
push
cmpsl
and
sarl
mov
xchg
inc
push
test
cmp
aam
xorl
jae
call
mov
test
and
push
xchg
adc
fcomip
outsl
add
sub
mov
or
push
inc
jo
test
lods
sti
cmp
add
data16
adc
scas
popa
loop
test
adc
mov
loop
or
sub
xchg
call
add
adc
sbb
in
or
mov
andb
push
movsb
sti
add
sub
lods
sub
dec
shl
call
stc
adc
mov
mov
and
aas
shlb
adc
out
das
sbb
jle,pt
add
inc
aaa
cltd
push
xorb
or
add
cmpsl
int
cld
sbb
pop
sbb
mov
jle
push
stos
psrld
cld
pop
xchg
xchg
mov
push
mov
add
sti
jp
mov
test
xor
push
xchg
mov
shlb
loope
push
add
cwtl
pusha
and
pop
or
push
add
xchg
jae
imul
les
out
push
lret
mov
sbb
xchg
loopne
sbb
mov
movsb
jmp
icebp
aad
shll
mov
add
aad
mov
mov
add
sub
mov
les
xchg
sub
adc
sub
cmpsl
test
nop
add
xchg
icebp
pop
xor
push
pop
jg
push
add
sbb
mov
movb
cmp
imul
inc
mov
cmp
fisubl
loope
adc
rolb
imul
xchg
mov
or
add
sbb
mov
add
sbb
mov
rclb
jns
sbb
or
dec
loopne
adc
xchg
push
hlt
mov
mov
cmp
sarl
es
test
pop
mov
gs
dec
pusha
cmp
cmp
movsb
das
sbb
dec
add
sub
add
push
sbb
and
sbbl
dec
and
jne
add
sahf
add
mov
sbb
inc
cld
jo
test
in
stos
shlb
adc
pop
cltd
dec
in
andl
pushl
cmp
in
jle
cmp
out
pushf
mov
push
mov
dec
sub
mov
xchg
adc
repz
lret
aam
xchg
inc
xor
jnp
add
mov
arpl
mov
syscall
lods
andb
frndint
popa
xor
cmp
adc
in
and
and
jmp
add
mov
add
sbb
nop
and
shlb
popf
add
cmp
sub
sub
inc
push
ret
aas
lods
or
js
test
add
pop
add
mov
arpl
ret
jge
xor
aas
int
pusha
xlat
cmovno
sbb
mov
adc
sub
lock
cwtl
add
pop
jmp
jo
xchg
and
jge
adc
xchg
mov
xchg
mov
xlat
daa
insl
fwait
cmpsb
call
lcall
les
xlat
jmp
rorb
dec
dec
fildl
insb
fidivrs
mov
sub
adc
xchg
sbb
push
push
xor
dec
outsl
cmp
rcl
add
xchg
xor
jl
js
sbb
in
inc
add
mov
ss
xchg
mov
mov
loop
xor
lret
mov
jnp
mov
outsl
jo
testb
mov
and
test
adc
and
aad
ja
add
lds
nop
or
aas
jle
rcrl
pushf
jae
push
std
xchg
mov
enter
mov
dec
add
ja
and
mov
and
aam
mov
outsb
and
push
les
cmp
mov
fs
mov
rorl
sub
imul
add
jge
fwait
or
mov
sub
push
loopne
jb
outsl
and
jne
push
mov
pusha
frstor
fsts
pop
daa
sbb
scas
mov
and
fiadds
out
enter
and
paddd
add
jne
push
sub
jecxz
mov
in
mov
das
mov
or
and
adc
popa
aaa
dec
add
mov
mov
hlt
fiaddl
push
fwait
sbb
dec
mov
pop
pop
nop
mov
rorb
cs
ds
jl
cmpsl
adc
outsb
mov
add
xchg
sti
leave
xor
add
mov
jecxz
mov
mov
inc
add
in
out
or
adc
jl
add
sbb
pop
inc
loope
mov
sbb
push
jns
lods
pusha
push
or
push
xchg
xor
adc
enter
or
out
sbb
outsl
sarb
out
aas
and
mov
xlat
lret
js
cmp
or
jno
add
and
notb
and
leave
jbe
cmp
push
movq
xchg
lock
std
outsl
cmp
dec
lods
punpcklbw
aaa
sbb
inc
aam
jmp
jo
inc
lock
pop
mov
aad
lock
ljmp
je
popf
add
out
pop
adc
mov
xor
decb
dec
mov
add
xchg
add
test
jo
cmp
jae
sbb
inc
and
sbb
fadds
sbb
push
jp
push
inc
psubusw
mov
sbb
push
xlat
sbbb
jbe
repnz
sub
sub
mov
mov
inc
sub
cwtl
in
xorl
xor
sbb
add
enter
lret
test
popf
cmp
or
adcb
stos
add
popf
cmp
inc
push
pop
in
mov
cwtl
cmp
and
mov
das
mov
fdivrl
bound
sbb
mov
dec
mov
int3
call
jmp
xchg
aas
dec
stos
xchg
add
pop
jb
or
leave
pcmpeqb
lock
push
je
pop
and
fdivl
add
cltd
inc
lds
icebp
sbb
movsb
jle
hlt
lock
push
xchg
in
mov
repz
fdivrs
hlt
movsl
dec
addr16
pop
mov
stc
sbb
mov
cmp
xchg
lret
ret
aas
cmpsb
push
fsubrl
pop
mov
pop
mov
inc
mov
lret
xchg
cmp
fildl
or
jle
dec
adc
out
sahf
mov
push
adc
inc
adc
test
dec
jbe
inc
add
mov
push
pop
sti
cmpb
dec
cmp
sti
clc
cmp
adc
push
stc
sbb
popa
jb
adc
add
mov
mov
xorb
out
arpl
jae
push
shrb
aas
sbb
ja
daa
into
mov
sbb
adc
mov
and
pop
movsl
push
or
orl
add
fwait
mov
dec
lret
jns
adcb
scas
sub
or
mov
dec
shll
fsubrs
jmp
adc
add
repnz
out
sbb
test
daa
mov
int3
js
sub
push
hlt
sbb
mov
inc
fstl
roll
jae
ljmp
add
jl
lock
es
inc
and
in
fnstcw
jle
mov
stc
in
fnstcw
xchg
mov
mov
sar
stos
push
inc
and
jge
add
in
xchg
je
cmp
dec
add
movb
jnp
or
leave
mov
xchg
push
mov
pop
test
fldl
lret
sahf
arpl
loop
mov
ret
xor
or
repz
rol
mov
pop
mov
mov
xor
and
pop
sub
nop
js
iret
sub
pop
mov
dec
adc
and
fsubs
call
lret
in
outsb
add
ret
pop
inc
cmpsl
dec
dec
mov
das
outsb
push
add
cmp
add
lods
jno
mov
rolb
lret
shld
ror
loopne
jle
xlat
pop
or
flds
les
fwait
cmp
pop
int3
sub
lea
ficomps
and
enter
loope
xor
xor
fidivrl
mov
andl
xchg
hlt
addl
in
mov
add
cli
imul
test
aam
mov
pop
bound
cld
rcrl
adc
jns
popa
js
cmp
dec
add
jno
cltd
shlb
loopne
mov
loope
call
subb
cmp
dec
and
xchg
stos
mov
mov
dec
das
sbb
fistpll
sarb
cmpsl
inc
outsl
cltd
push
dec
gs
test
pop
jge
imul
push
movsb
shl
sbb
push
mov
xchg
mov
xchg
ljmp
push
jle
pop
dec
dec
mulb
and
insb
es
inc
mov
das
shl
xchg
add
imul
xchg
aam
inc
aas
xor
lds
mov
xor
jno
mov
jo
cmp
dec
pop
sub
mov
enter
xchg
mov
loop
cmp
pushf
or
jle
in
xor
subl
cmp
add
add
adc
sub
sbb
lret
adc
test
inc
xor
das
adcl
ffreep
add
repz
xor
push
cmp
divb
push
rcll
mov
add
mov
adc
fmull
lcall
inc
or
cmp
dec
mov
hlt
push
lds
fadds
mov
jge
js
out
sbbb
adc
mov
jnp
adc
jb
fimull
push
add
inc
cwtl
xor
inc
inc
nop
stos
jle
mov
or
dec
jb
repnz
xchg
daa
mov
or
imul
and
jge
push
out
add
mov
scas
nop
mov
aas
dec
add
mov
clc
cs
cmp
movsb
mov
sub
sarl
push
lds
sahf
mov
popf
das
addb
mov
inc
xor
rcrb
jmp
dec
sahf
fmull
pop
jne
adc
leave
addb
inc
ret
dec
test
jbe
shl
stos
xchg
imul
or
mov
leave
pop
add
inc
cmp
xchg
and
mov
push
repnz
shl
lods
add
inc
dec
dec
fsub
cmp
mov
je
mov
movsb
jns
sbb
pop
pusha
testb
icebp
mov
jnp
cmp
inc
fmuls
sbb
inc
mov
insb
ljmp
mov
mov
adc
add
pusha
daa
lahf
cwtl
adc
je
and
sub
sub
sbb
ret
add
scas
and
int
enter
or
pushf
push
icebp
add
movsl
mov
sbb
out
repnz
cmp
sub
dec
mov
jb
and
repz
or
insl
mov
push
stc
test
xchg
shrb
std
add
cmp
aaa
lods
dec
test
les
mov
pushf
cmpsb
lea
add
das
xor
add
cltd
push
push
ds
hlt
dec
lcall
or
mov
outsb
xor
cmp
add
inc
outsb
aas
dec
mov
add
sub
and
jns
jns
sbb
add
lahf
ljmp
and
xchg
sub
pushf
andb
push
mov
jge
mov
lahf
mov
jno
cmp
adc
mov
sub
mov
inc
push
lahf
out
xchg
add
lods
int
popa
inc
fwait
inc
push
stos
cld
hlt
call
dec
and
mov
or
add
je
bswap
sbb
add
mov
clc
icebp
jb
mov
mov
and
popl
xor
mov
fidivrs
and
push
push
xchg
adc
adc
sti
xchg
and
mov
sbb
lock
loope
add
jnp
mov
popf
stos
js
adc
adc
stos
mov
add
push
and
pop
and
lcall
mov
loopne
movsb
xchg
mov
data16
jle
pop
test
outsb
sub
add
cwtl
aad
xor
andb
aas
shl
pushf
and
add
mov
in
inc
mov
ja
pop
jae
add
stos
and
addl
ret
daa
adc
dec
iret
dec
pushf
mov
les
jnp
push
loope
ds
rcll
jns
sbb
cmp
mov
or
mov
push
lods
and
call
imul
iret
xchg
sbb
cmpsb
mov
ror
aas
pusha
mov
imul
mov
inc
or
sub
mov
rorl
mov
cmpb
in
push
xlat
xchg
test
cmp
divl
jmp
mov
lahf
add
sbb
jmp
andl
mov
push
mov
jno
xor
sbb
mov
pop
mov
test
inc
pop
inc
and
push
pop
dec
cmp
jmp
cmp
subl
das
rcl
xchg
in
and
es
sahf
pushf
lods
inc
dec
in
popa
push
cmpsb
ret
add
sbb
ds
cmpsb
xchg
or
aam
pop
je
cmpsl
fiadds
imul
mov
adcl
sahf
or
adc
sbb
lcall
and
mov
cmp
xchg
inc
inc
xchg
cli
xchg
xchg
fs
pop
xchg
bound
push
sub
push
rolb
mov
dec
and
cli
rol
hlt
nop
jo
pop
lahf
loope
rolb
sub
cmp
loope
in
popf
lock
cld
jne
imul
dec
rolb
inc
pusha
in
dec
jle
xor
je
inc
ds
sub
sar
cmp
jmp
arpl
lret
sub
test
rorb
inc
inc
popf
lret
dec
addr16
rclb
pusha
add
repnz
mov
sbb
mov
ror
fsubrs
sub
push
mov
hlt
and
add
hlt
mov
and
jg
xchg
inc
add
or
sub
rcll
addb
jmp
dec
loop
mov
dec
lds
loopne
testl
xchg
sbb
push
mov
xor
adcb
pop
cmp
add
adc
add
push
jo
movntps
movsb
lahf
add
lock
xor
pop
inc
call
pop
sub
xchg
aaa
test
lods
movb
repz
call
test
or
sarb
jecxz
aaa
dec
push
icebp
push
js
inc
push
add
cmp
sahf
lret
sbb
jmp
and
xor
testl
mov
aas
mov
cmp
or
aas
test
repnz
sbb
mov
mov
daa
pop
in
mov
pop
xchg
inc
subb
sub
sub
jns
add
sbb
dec
scas
add
mov
pusha
cmp
cmpsb
popf
jo
mov
mov
add
sahf
mov
shl
mov
dec
out
add
rep
movsl
xchg
aas
lahf
push
cmc
test
or
test
mov
and
or
test
push
fsubs
pop
lret
add
loopne
xor
les
sub
push
lds
dec
pusha
mov
add
sbb
inc
sbb
aaa
push
test
sub
mov
lcall
mov
push
inc
and
enter
daa
and
push
sbb
adc
xor
or
push
cmp
cwtl
mov
cmp
pop
aas
shl
pushf
enter
mov
clc
adc
pusha
or
ds
mov
mov
ret
cmp
add
ljmp
not
repz
mov
enter
cmp
push
inc
add
mov
hlt
lods
mov
adc
into
add
maskmovq
mull
fistpl
add
sti
push
imul
jnp
push
mov
mov
mov
jge
add
lret
imul
sbb
xchg
dec
pop
and
sub
nop
xchg
divb
lret
sahf
movsb
mov
jp
pop
insb
push
jle
jge
push
jae
cmp
sbb
pop
fwait
cwtl
sbb
push
pop
js
inc
and
hlt
jl
ds
in
jo
imul
jmp
adc
pop
inc
cmp
or
movsl
mov
inc
add
cwtl
and
fdivrp
pushf
xchg
inc
cli
push
pop
mov
and
ljmp
inc
mov
subl
ds
inc
mov
div
push
fcompl
movsl
scas
adc
in
bound
cmp
adc
sub
aam
iret
lods
add
cmpsb
pop
adc
mov
les
les
nop
js
and
cmp
add
daa
test
xor
mov
push
shlb
pop
repnz
and
jle
sub
inc
inc
pusha
dec
xlat
out
xor
sti
adc
or
rorb
loope
mov
lds
fstps
and
movsb
add
sub
jae
je
dec
or
xor
sbb
rcr
sti
scas
and
sub
jecxz
idivb
mov
mov
inc
test
rcl
mov
and
inc
inc
pusha
mov
add
iret
aaa
repnz
ficoml
popf
cmpsl
pop
mov
pop
sbb
popf
mov
loop
test
inc
in
and
xchg
call
orb
ja,pt
cmpsl
push
xchg
xorb
add
xorb
pop
insb
popa
stos
add
cmp
inc
adc
mov
iret
mov
leave
adc
cmpsb
call
aaa
lret
movsl
mov
int
ljmp
and
sub
or
test
orb
mov
xorb
les
pop
xchg
inc
or
fcoms
push
push
add
dec
fdivl
les
mov
inc
int
ljmp
pusha
cpuid
or
mov
jmp
inc
pop
or
mov
dec
adc
mov
testl
dec
cmp
ljmp
or
aas
xorl
test
push
movsl
mov
shl
jge
mov
jb
test
mov
xchg
int3
loope
ret
clc
ds
aam
adcl
loopne
sti
push
add
daa
mov
pop
in
and
icebp
aam
push
dec
push
sbb
inc
outsl
mov
add
sub
mov
add
add
out
pop
insl
adc
in
add
jne
in
push
add
push
cmovbe
adc
aad
imul
cmp
or
sub
std
daa
xchg
xchg
cld
pusha
ljmp
negl
jae
add
adc
jnp
insb
daa
cmp
jp
or
jns
mov
mov
sarb
xchg
cmc
pusha
gs
leave
fstps
roll
inc
pusha
daa
cmp
cmp
testl
or
dec
add
pop
fwait
aam
jecxz
dec
add
adcb
or
pusha
cltd
and
fcoms
sbb
imul
lahf
push
and
sub
scas
nop
pop
dec
pop
jno
es
sbb
mov
and
jno
add
lea
xorb
add
mov
ret
or
sbb
lock
mov
addr16
xchg
push
sarl
xor
and
sbb
wrmsr
mov
clc
jmp
mov
push
adc
icebp
pop
or
add
and
adc
loope
out
jle
aad
or
jnp
mov
jb
out
adc
outsl
mov
cmp
cmp
rorb
mov
rclb
data16
add
inc
add
iret
mov
or
pop
cmp
push
clc
orl
xorb
xchg
or
xor
outsb
rorb
js
add
jae
push
sub
add
int3
nop
inc
sub
test
mov
mov
aam
je
mov
sbb
lcall
fwait
stos
mov
das
mov
repnz
fsubrs
adc
cmpsb
and
std
mov
xor
je
add
pop
cld
js
mov
ret
mov
push
test
push
and
sub
add
pop
mov
sub
push
daa
push
xlat
fsubr
es
inc
cwtl
adc
dec
outsl
js
xchg
jecxz
outsb
stos
pop
add
jno
lods
inc
nop
out
pop
fisubrl
popf
cmpsb
cmp
xchg
cmp
adc
and
mov
and
sub
mov
xchg
faddl
adc
or
negl
inc
or
pusha
fisubs
pop
mov
mov
dec
jle
mov
and
sbb
dec
enter
pop
nop
les
int
ret
mov
sbb
in
scas
ds
movsl
andl
popa
inc
xlat
push
popf
fdivl
or
orb
fdiv
push
add
addr16
sbb
sub
add
mov
aaa
and
xor
mul
popf
xorb
xchg
movsb
dec
or
sbb
pop
fsubrl
mov
sbb
das
rcl
sbb
aad
push
adc
pop
add
icebp
adc
mov
cwtl
mov
add
pop
nop
add
xor
stos
lods
loopne
ja
add
fadds
sti
ljmp
clc
add
and
adc
adc
rclb
dec
int3
inc
out
xchg
push
sbb
movsb
adc
and
shlb
prefetchw
outsb
shrb
cmp
stos
dec
push
inc
xchg
xchg
mov
xchg
adc
push
adc
subl
in
adc
imul
cmp
cmp
push
pushf
sub
pop
pushf
sbb
mov
sub
mov
insl
in
mov
cli
arpl
mov
add
xchg
rolb
sbb
dec
xchg
cmp
roll
scas
gs
shl
sbbb
lods
add
es
ljmp
dec
xor
insb
add
cmp
sub
sub
inc
inc
jl
inc
addr16
rclb
mov
sahf
jo
stos
loopne
popf
outsb
scas
rcr
fisubs
sub
mov
mov
subb
out
cmp
mov
test
pop
psubd
movsl
shlb
xchg
loop
and
inc
ret
inc
sbb
sbb
enter
pop
xchg
mov
mov
push
jmp
push
bound
fs
xor
mov
mov
mov
nop
and
lds
adcb
dec
addl
fdivrl
and
imul
add
fcmovnb
or
loope
inc
inc
push
sbb
test
mov
lahf
xchg
adc
aam
fdivp
push
pop
push
xchg
loop
xor
cmp
movsl
fstpl
int3
test
adc
popa
jne
icebp
sbb
dec
sub
jne
and
mov
dec
push
fisubl
jg
mov
and
mov
add
push
psubsb
loop
sbb
sbb
test
iret
jno
adc
outsb
jae
dec
add
pop
add
push
cmp
xchg
jl
push
cmc
mov
negb
add
repnz
dec
jae
adc
adcb
and
leave
sbbb
cmpsb
je
mov
adcl
add
pop
mov
inc
jg
pushf
ret
imul
jb
adc
push
or
sub
test
scas
cs
call
cmp
jnp
orb
xor
add
repnz
lahf
dec
add
gs
push
push
and
or
or
mov
pop
add
rolb
xor
add
les
out
nop
cwtl
and
icebp
adc
add
inc
mov
pusha
push
add
ret
or
out
lret
jo
or
sbbl
add
push
and
cmp
je
jo
dec
pushf
and
jb
pop
inc
adc
ja
clc
inc
sbb
sbb
xor
fistps
les
in
imul
stos
mov
or
xchg
inc
push
cmp
outsb
dec
add
popf
cmp
mov
push
xor
mov
icebp
and
pop
and
shl
pop
in
sbb
adc
sbb
clc
cwtl
dec
out
add
add
es
shll
es
stc
jl
push
sti
pop
xorb
mov
push
dec
or
icebp
mov
add
mov
pop
mov
and
lea
loop
int3
cmc
imul
psrad
cmpsb
sbb
addl
iret
mov
stc
push
pop
inc
loopne
adc
popa
in
incb
mov
sub
or
mov
dec
test
cs
inc
mov
test
dec
push
push
mov
out
push
mov
shrl
push
and
and
add
popa
add
sbb
add
mov
cmc
loope
jp
aad
adc
hlt
xchg
lods
adc
xchg
adc
mov
and
test
rolb
push
faddl
mov
push
lods
pushf
ds
popa
mov
out
mov
je
jb
and
ljmp
pop
hlt
dec
les
push
jbe
sbb
sub
mov
sbb
pusha
clc
sub
or
push
call
sub
popf
or
shrb
mov
test
xchg
test
gs
and
mov
pop
dec
adc
imul
rclb
jge
js
enter
jo
in
cmp
xorb
scas
dec
rorb
sarb
dec
rorb
sti
shl
sub
or
add
sbb
jmp
in
pushf
lods
insb
pusha
lods
mov
sti
or
xchg
clc
and
sti
push
pop
xchg
scas
pop
push
cld
das
jl
jge
and
inc
gs
pop
mov
cmp
std
xor
cwtl
mov
mov
inc
daa
mov
add
test
and
mov
jno
pop
ret
adc
lea
shlb
sub
sbb
adc
cmc
gs
test
or
dec
pop
jle
imul
ss
xchg
mov
or
mov
ds
push
and
aam
sbb
mov
popa
add
mov
cld
pusha
repz
mov
mov
lret
push
or
adc
push
inc
pusha
loopne
inc
xor
xchg
scas
nop
and
cld
add
imul
sbb
dec
sbb
fmuls
dec
faddl
inc
mov
loop
xor
mov
ret
out
jl
in
jns
sbb
sbb
jecxz
add
push
lods
inc
in
mov
inc
std
sub
out
jo
loope
inc
jle
cmpsl
push
sub
je
add
and
sub
in
inc
faddl
or
popa
pusha
mov
dec
pop
xor
rclb
inc
inc
and
push
jns
and
sub
push
xlat
test
sahf
and
dec
sub
insl
pop
outsl
add
stos
mov
rcll
sbb
mov
jno
add
addr16
and
insb
in
sbb
push
push
inc
ficompl
ljmp
aad
sbb
out
add
fsts
mov
or
and
jno
es
mov
sti
add
or
add
test
adc
adc
add
insb
sbb
add
xchg
iret
dec
mov
sub
out
movsb
inc
lods
in
nop
add
add
push
cmp
add
mov
sbb
call
aam
xchg
add
cmp
adc
shr
or
rolb
sarb
mov
adc
js
sbb
into
add
push
shr
and
sub
andb
or
sub
adc
lock
mov
aad
imul
or
mull
addb
push
add
inc
mov
fdivs
xor
fmuls
loopne
or
inc
cmp
into
mov
ficoms
and
push
fists
xor
push
es
sbb
int
sarb
push
inc
mov
cmc
xchg
sub
mov
ja
add
cmp
test
and
les
mov
adc
jae
scas
jg
mov
dec
js
movsb
cmpsb
push
mov
push
add
mov
stos
loopne
lods
call
mov
mov
es
jecxz
bound
inc
sub
mov
fs
dec
fs
scas
mov
popf
adc
pop
add
mov
sbb
xchg
xor
xchg
dec
mov
inc
mov
mov
jno
dec
push
cmp
faddl
fst
in
rolb
or
or
ret
sbb
in
mov
xor
fwait
and
adc
sbb
mov
or
push
fstpl
sbb
rorl
jb
add
mov
push
add
sbb
popa
lahf
lds
mov
mov
fs
sub
iret
into
and
or
adc
dec
sub
int3
add
stos
push
lcall
xor
mov
xor
or
jmp
add
jae
xor
sub
int3
addb
std
mov
mov
jae
xchg
in
mov
push
xchg
fs
sbb
mov
cld
cmp
ja
mov
adc
adc
inc
pop
push
movsb
add
push
dec
mov
sub
fs
dec
fcoml
jmp
pushf
in
and
imul
lds
adc
push
add
lods
push
movsl
sub
adc
fs
fsubrs
sbb
in
push
nop
mov
pop
int
pop
sbb
dec
cmp
inc
push
xchg
jmp
sub
out
int
and
adc
mov
mov
cmp
adc
push
pop
js
rolb
stc
dec
and
out
or
or
je
lahf
scas
mov
enter
std
out
and
inc
cmp
xor
movsb
or
lea
and
fnsave
or
add
pusha
cltd
and
das
cmpb
stc
push
aam
out
sti
mov
jne
jno
scas
leave
add
dec
ljmp
mov
inc
test
push
mov
adc
or
pop
cmc
inc
lock
shll
add
sbb
mov
sbb
dec
pushl
bound
inc
add
mov
enter
loop
jae
lret
mov
cmc
pop
or
or
xor
adc
xor
jle
push
mov
movsl
and
dec
and
pop
cmp
adc
sub
mov
ficoms
sbb
pusha
lock
cmc
add
pop
clc
add
pushf
or
cmp
jno
xchg
xor
aam
clc
repz
and
mov
or
add
pop
lds
mul
jno
mov
lods
inc
mov
fldlg2
push
out
leave
in
mov
fiadds
inc
pop
or
cmp
push
add
pop
jb
adcl
lret
loop
into
je
loop
sub
add
push
mov
popf
psubusw
mov
test
jo
add
adc
out
adc
adc
push
adc
aas
subps
inc
cmc
bound
mov
adc
icebp
and
nop
xor
ds
inc
aaa
shlb
and
mov
in
adc
sbb
and
adc
sub
push
cmp
inc
push
push
jbe
mov
mov
call
push
mov
into
and
sahf
add
xor
adc
adc
sub
mov
fcompl
cmp
inc
cli
jns
imul
sets
mov
stc
das
push
test
je
lds
fnsave
add
js
lcall
xchg
nop
inc
xchg
add
mov
xor
jge
add
test
sbb
add
inc
xchg
gs
and
pop
add
sbb
push
cmc
mov
xchg
cmp
and
xchg
out
add
and
cwtl
add
test
mov
mov
jle
adc
call
add
pop
xchg
sbb
fsub
push
bound
or
pop
push
jle
add
pop
inc
xor
mov
outsb
cwtl
call
push
push
mov
fs
leave
adc
mov
push
cmp
push
pushf
adc
push
sbb
adc
icebp
movsl
and
dec
mov
push
mov
hlt
sub
sub
or
and
nop
sub
testl
lret
dec
mov
js
jns
in
ret
pop
aam
insl
test
shrl
sbb
xor
jmp
or
test
add
sbb
pushf
add
push
mov
loope
je
or
mov
adc
and
jl
call
cld
pop
pop
and
cli
xor
jmp
sbb
lds
ret
clc
xchg
fiaddl
stc
addr16
mov
sbb
fnsave
andb
adc
mov
jno
cs
push
add
movsl
xor
push
lods
jmp
lods
mov
bound
inc
xchg
sbbb
dec
dec
lea
mov
out
and
loope
and
lock
pusha
lcall
mov
decb
popf
js
mov
stc
mov
mov
sbb
add
xchg
push
add
sbb
sub
push
push
xor
push
mov
adc
sarb
cltd
imul
add
pop
in
xchg
les
add
int3
sbb
pusha
arpl
cwtl
pushf
add
outsb
scas
rcll
mov
inc
pop
push
sbb
cmp
pop
lea
jns
pop
pushf
sbb
shrb
pusha
mov
push
add
int3
push
enter
insl
rcll
mov
mov
ficoml
add
inc
icebp
xor
loop
mov
add
sbb
jge
pop
sbb
aad
sub
fs
pusha
jle
fadds
scas
stc
cmpsb
adc
das
xchg
and
inc
leave
sahf
loope
mov
fmuls
and
and
jle
mov
jns
js
in
xchg
shrl
fdivrs
lock
sbb
inc
push
or
and
shr
pop
adc
add
and
clc
fwait
aas
popf
sbb
sub
pushf
incl
inc
fstps
add
ret
adc
fidivrs
or
fiaddl
fwait
inc
pushf
iret
cld
in
pop
shlb
add
cmp
out
fcmovb
and
cmp
fiadds
std
decb
mov
fistl
pusha
cwtl
cmp
rcll
hlt
mov
dec
dec
test
add
inc
lods
icebp
push
faddl
or
push
add
xor
out
cmp
rolb
mov
in
je
inc
adc
cld
pop
add
jae
test
flds
or
popa
adc
add
in
mov
xchg
lock
pop
pop
ja
add
idivl
xchg
xchg
dec
cmp
cwtl
loopne
dec
fmul
and
call
fcomp
dec
sbb
xchg
pusha
adc
or
mov
mov
std
mov
popa
sub
pop
ret
fisubrl
dec
add
push
cmpl
push
or
lds
push
mov
push
aad
and
dec
les
ljmp
hlt
xchg
and
loopne
add
cmp
or
xchg
mov
add
cli
pop
jnp
push
aas
jecxz
iret
mov
outsl
cmp
jo
add
or
jmp
sbb
in
movsl
sbb
test
cmp
hlt
inc
movsl
and
pop
mov
movsl
xor
sarb
push
cmp
sub
xchg
push
sub
xchg
or
add
cmp
stos
idivb
loopne
pop
lcall
mov
add
mov
out
sub
adcb
andb
js
test
loopne
shlb
add
add
popf
cs
pop
cmc
sub
pop
imul
inc
add
mov
sarb
dec
push
lock
aam
test
dec
fadds
xchg
xor
ja
aad
add
sub
in
add
std
pop
mov
scas
stos
daa
fidivrl
and
std
add
jle
test
test
fidivs
cmpsb
mov
or
cmp
xchg
arpl
pop
leave
mov
cs
fs
push
jle
add
mov
sub
idivb
daa
jl
in
lds
push
add
mov
js
push
ficoml
lods
pop
mov
xor
repnz
rcl
std
out
stos
xor
sbb
mov
add
and
adc
sub
sbb
loop
mov
in
add
and
xchg
popf
push
fcoml
cmpb
mov
jl
jne
fs
sbb
loop
pop
lods
inc
loopne
dec
fldenv
pushf
fadd
inc
test
pop
jo
jbe
xor
test
in
fs
sar
and
mov
test
mov
adc
aad
adc
jb
leave
jle
mov
jae
dec
dec
or
cs
pop
pop
xchg
out
addb
xchg
xor
mov
jno
orl
pop
mov
leave
add
aaa
ret
push
add
lds
or
add
sbb
mov
addr16
movsb
rorb
mov
or
int
fistpll
add
mov
clc
add
mov
xchg
dec
leave
push
pushf
add
xchg
aaa
add
pop
cmp
repz
pop
mov
daa
sub
dec
push
clc
pop
add
xor
add
pusha
pop
cltd
push
mov
xor
pop
mov
push
mov
icebp
cmp
jne
jecxz
mov
dec
loop
cmpsb
xor
push
mov
add
pop
xor
and
nop
repnz
popf
mov
xor
adc
inc
sub
dec
test
loope
popa
cli
cmp
repnz
or
adc
lea
fimuls
mov
push
in
loop
cli
jecxz
leave
into
mulb
pop
and
xchg
mov
pop
out
xor
subb
in
mov
xor
nop
jl
xchg
and
and
imul
or
push
cmp
fwait
push
fmuls
add
ficompl
add
out
and
ror
test
push
rcl
in
sub
lods
pop
pop
ret
out
mov
sub
popf
test
movsb
xlat
popa
mov
enter
sbb
xlat
pop
scas
sbb
test
mov
mov
shrl
mov
aam
and
mov
sbb
fadds
mov
push
jle
lcall
mov
inc
or
mov
fldl
lahf
je
je
into
cmp
add
leave
pusha
sub
add
jp
divb
js
outsl
aad
imul
xor
lock
cmp
mov
movsb
mov
pusha
loope
and
mov
in
int
lock
and
add
lahf
das
cmp
and
add
rsqrtps
and
les
lahf
insb
out
pop
pop
and
xchg
in
add
push
cs
pusha
mov
xchg
jo
add
stc
test
inc
jno
es
outsl
out
mov
sbb
mov
mov
add
outsl
mov
cli
mov
andl
or
add
ret
sub
fbstp
sti
dec
jns
shl
sbb
jb
dec
aas
out
inc
pop
jecxz
or
inc
mov
pop
insb
add
fadd
or
xor
and
cld
addl
jne
xchg
rcr
jmp
fnstsw
movsl
inc
push
cmpb
add
jmp
jmp
lret
and
loop
cmp
mov
xor
add
xlat
mov
and
jo
dec
ss
xor
dec
or
rolb
jns
xor
jae
js
sub
ret
add
jmp
add
loop
xor
add
xor
push
xor
push
loop
push
and
stos
sbb
mov
popa
enter
das
sub
loop
nop
cmc
dec
call
test
andl
push
and
mov
lahf
or
mov
jno
mov
mov
sahf
js
adc
jmp
add
nop
mov
lahf
rcr
add
das
jge
insl
add
or
push
lret
adc
adc
shrb
mov
and
lods
add
dec
imul
and
test
loop
repnz
xor
cmp
mov
push
xor
sti
js
add
gs
aas
fiadds
xchg
cltd
mov
and
jb
sarl
add
jecxz
out
cltd
out
and
aaa
enter
sub
shrb
ror
sbb
ja
js
pop
inc
sub
jbe
and
push
cmp
and
das
daa
add
xor
test
xor
xchg
les
mov
inc
add
fldl
sub
mov
dec
divb
dec
out
pop
out
dec
add
xchg
sti
sbb
mov
add
mov
scas
push
sbb
mov
sbb
pusha
test
adc
mov
mov
aaa
mov
cli
mov
push
jb
shlb
cmp
popa
pop
xlat
ret
jae
js
adc
adc
push
xchg
inc
hlt
push
js
xchg
mov
push
dec
mov
mov
add
leave
ret
jae
in
js
popa
pop
dec
je
adc
mov
lcall
inc
ret
add
xchg
jecxz
xor
shll
mov
and
jnp
sbb
sbb
xchg
in
cmp
jmp
and
push
push
jne
cmp
mov
dec
jo
xor
pop
jecxz
addb
test
sub
mov
les
pop
fs
sbb
adc
cmp
fucomi
dec
and
cmp
icebp
das
add
rolb
adc
add
pusha
sbb
mov
push
sbb
jne
popf
xchg
loope
and
add
sbb
and
pop
mov
out
int
imul
ds
sub
pop
insb
xor
push
pop
mov
pop
in
sbb
or
add
pop
and
dec
xchg
add
sbb
nop
lods
dec
data16
pop
stos
movlps
mov
cmp
add
sti
cmc
or
xor
flds
xchg
out
or
je
out
popf
subb
or
je
je
in
or
mov
pop
adc
test
out
and
pop
push
mov
xor
pop
fdivp
mov
call
cs
int3
je
fdivrs
sub
add
pop
jge
push
mov
xchg
hlt
sub
mov
jae
iret
mov
pop
sbb
pushfw
addb
lahf
aaa
lock
mov
notb
push
je
add
sub
or
rorb
push
adcb
add
pop
sarl
test
adc
jne
pop
pop
inc
push
aaa
leave
cmp
insl
les
cs
and
in
sbb
or
aam
nop
mov
add
insb
dec
pop
pushf
dec
outsb
jg
inc
out
fadd
dec
mov
xor
add
pop
jp
inc
ds
sub
jo
daa
or
push
add
and
add
mov
cs
jo
inc
mov
leave
arpl
inc
xor
imul
xchg
shrl
sarl
add
scas
mov
mov
mov
jns
jge
addb
push
dec
addl
aam
push
rol
pop
push
sbb
pop
in
mov
add
sbb
jg
sub
xor
and
and
mov
mov
mov
add
inc
or
aam
jmp
inc
pusha
xor
test
outsb
mov
add
jmp
lcall
xchg
jecxz
jo
lcall
lods
jmp
or
sbbl
lock
jg
or
int3
push
stc
jbe
add
sti
ljmp
mov
andb
movsl
mov
imul
cli
pop
test
push
andb
test
jge
or
cmc
leave
xchg
loop
sub
adc
mov
pop
inc
testb
xchg
add
xchg
sub
addr16
dec
adc
xchg
push
lock
push
clc
cmp
js
cmp
fildl
insb
mov
push
mov
cmp
mulb
addr16
into
enter
aas
push
xchg
dec
loope
jnp
clc
sbb
test
clc
add
inc
adc
xor
enter
sbb
dec
iret
push
pop
hlt
jbe
icebp
xor
mov
fisubrl
push
rorb
mov
insb
and
aaa
cmc
cmp
loopne
out
or
xchg
mov
fs
orb
cmp
inc
insb
rcrb
or
out
loopne
dec
lods
popf
xchg
js
testb
add
outsl
or
mov
add
sbb
xchg
idivb
fld
pushf
sbbl
push
addb
cmp
inc
rorb
xor
popa
sub
ds
mov
mul
imul
repnz
add
pop
or
adc
jo
dec
mov
add
mov
jo
add
xchg
faddp
cltd
out
cwtl
and
int3
sub
add
xchg
adc
push
into
scas
and
xor
fmull
xor
push
loopne
push
sti
decb
add
aas
jle
mov
sbb
test
mov
dec
jns
inc
sub
loope
test
and
das
pop
test
mov
inc
test
adc
hlt
adc
fwait
jmp
stc
test
bound
dec
inc
out
mov
or
mov
cmpsl
je
mov
cmpl
cmpb
dec
xchg
mov
adc
addl
fisttpl
jne
pusha
mov
add
mov
cld
push
mov
cmp
pushf
jno
out
sbb
xchg
fistps
add
sub
push
inc
mov
jo
pop
lahf
decb
cmc
lret
and
std
daa
or
push
jo
por
and
inc
in
add
and
cltd
int3
mov
add
xchg
sub
and
adc
pop
repz
add
mov
gs
out
sbb
cmp
pop
pushf
adc
add
ret
add
rorl
and
mov
sbb
pop
add
int3
mul
notb
lock
sbb
cmp
mov
adc
sub
xchg
and
in
nop
sarb
push
jle
ror
mov
ds
fmuls
sti
xor
jmp
sbb
nop
add
lds
inc
test
call
addb
orb
inc
lcall
mov
xchg
sbb
fistpll
pop
xchg
lock
mov
and
sub
sbb
add
xchg
dec
mov
jns
pop
push
cmp
push
mov
pop
ret
flds
xor
adc
or
pushl
pop
movb
scas
inc
movsb
mov
xor
mov
push
or
pushf
mov
and
adc
add
in
and
jb
pusha
in
popf
call
les
mov
cli
or
xchg
push
out
dec
jns
orl
call
or
jae
and
nop
lods
add
dec
fsubrs
ret
jbe
stos
push
mov
das
jg
cld
add
iret
repnz
repz
or
add
cmp
pop
xor
cmp
test
add
aas
mov
out
cltd
add
adc
data16
rcr
fildll
pop
cmp
sub
clc
xorb
mov
bound
mov
xor
adc
jl
push
mov
nop
sub
add
pop
ret
xor
mov
add
ja
mov
dec
jle
test
push
sub
mov
xlat
adc
testb
ds
andl
sbbb
out
cwtl
sbb
push
dec
add
sbb
pop
xchg
in
sbb
push
shll
push
sbb
clc
and
or
xor
mov
aas
mov
dec
test
addl
push
rcrb
and
pop
lock
sbb
sti
xchg
cld
lret
loopne
lcall
imulb
jb
push
insb
sub
icebp
push
xchg
cmp
andb
mov
cmp
movl
ret
mov
jbe
mov
out
xor
cmp
cmp
mov
adc
and
pop
filds
clc
out
jo
inc
inc
xchg
out
in
std
sub
sti
pop
mov
mov
call
xchg
pop
cmp
imul
std
add
add
adc
pushf
es
cmp
jb
xchg
or
loop
cwtl
and
and
mov
add
mov
nop
pushf
jo
enter
mov
jl
add
cmp
push
dec
scas
jmp
and
icebp
add
jp
add
adc
add
popf
xor
filds
mov
mov
xchg
sub
jg
xor
arpl
mov
dec
pop
xchg
mov
cmp
cmp
and
xchg
pop
or
push
add
inc
xor
in
xor
push
shrl
hlt
jmp
cmp
add
call
mov
mov
mov
gs
sub
int3
or
gs
cmc
inc
xchg
mov
popf
add
mov
jns
add
or
ret
mov
add
fcmovnbe
add
cmp
fadds
adcb
aas
ja
mov
cmp
or
mov
pop
mov
or
cmp
pop
sbb
int
mov
and
xchg
int
cmp
add
add
ficoml
repz
inc
jnp
xchg
jge
add
inc
adc
adc
cmp
or
pop
add
push
scas
nop
lods
add
sar
push
add
divl
adc
jl
adc
mov
subb
scas
sub
sub
push
subb
sar
fxch
in
xchg
jo
clc
add
ljmp
add
pop
mov
sub
inc
or
push
orb
xorb
mov
push
andl
xor
and
lds
or
cmpsb
pop
sub
add
fs
adc
pop
add
lcall
push
fsubr
jge
add
movsb
rolb
fsts
or
inc
mov
outsb
cmp
and
rcr
dec
and
loopne
ror
in
repz
rcl
jge
mov
stos
loopne
dec
sub
push
and
fmul
test
cli
adc
stc
add
int
out
nop
dec
or
or
popf
mov
leave
das
sbbb
aam
movsl
adc
test
fsubs
jmp
mov
cwtl
fcomps
mov
push
into
inc
mov
jnp
lret
stc
xor
add
mov
les
cli
scas
mov
dec
mov
stc
aad
mov
and
testb
cld
add
sbb
in
add
cmp
mov
mov
repnz
add
pusha
aas
sub
out
fdivrs
fstl
sbb
mov
xchg
ror
jmp
lock
addr16
add
iret
sub
pop
hlt
sub
jae
out
push
inc
add
or
xchg
lods
pushf
jno
stc
mov
sub
loop
inc
ja
mov
in
sub
lods
sbb
mov
ds
mov
in
iret
popa
mov
push
dec
repz
mov
imul
xor
nop
in
xorb
mov
mov
inc
arpl
xor
push
lods
inc
cld
lock
mov
ret
inc
hlt
add
push
xor
lea
or
test
and
fs
aaa
and
mov
xor
test
cltd
stos
xchg
xor
sbb
mov
lods
nop
dec
je
pop
fchs
dec
movsb
insb
test
jnp
cmpsl
lret
jo
dec
push
fldenv
sub
mov
sub
lret
imul
push
call
sub
les
xchg
dec
hlt
xor
add
lret
adc
or
cmp
ret
divl
push
xor
sbb
push
push
add
aas
movsb
jmp
jl
scas
adc
cmpl
or
movsl
push
add
fcomp
lcall
and
test
daa
add
aaa
sahf
js
dec
sbb
add
sub
mov
sbb
cmpsb
dec
jg
imul
jmp
jne
mov
mov
xor
xor
lea
clc
scas
fidivs
pop
lock
mov
out
cmpsl
push
sub
inc
or
xor
aam
cmpsb
out
adcl
push
mov
mov
cmp
movsl
cwtl
xor
cld
and
notb
enter
add
inc
and
shr
lock
icebp
inc
sbbb
mov
sub
lahf
xor
gs
lret
sub
int
dec
mov
cmp
add
push
out
xor
and
sbb
push
rclb
pusha
cmpsb
popa
sub
inc
add
xchg
add
pop
movsb
cli
movsl
jle
shl
lock
divb
xor
ret
jno
xchg
pushf
or
inc
in
xchg
mov
sbb
add
jle
push
pop
lds
rclb
mov
sbb
loope
pushf
add
xor
adc
inc
xor
add
gs
cmp
je
inc
les
je
aam
out
mov
sub
jg
jmp
sub
sub
add
in
ss
xlat
arpl
mov
push
loop
inc
cmpl
xor
cli
mov
rcrb
adc
cltd
push
add
aad
adc
dec
xor
hlt
addb
cmp
and
lods
adc
add
lret
add
fistl
hlt
cs
ds
lret
mov
fisubs
add
adcl
mov
push
mov
push
dec
dec
push
ja
sbb
adc
in
jmp
inc
ja
mov
call
dec
sbb
movsb
sti
mov
add
and
push
gs
negb
pop
shlb
in
fiadds
and
enter
gs
cmovns
js
loopne
mov
pop
sbb
sub
test
jmp
fcmove
je
add
push
fld
jg
lods
xchg
enter
xchg
add
aad
add
aaa
dec
shrl
bound
adc
loopne
jecxz
xchg
divl
shll
imul
lcall
movsl
hlt
pop
icebp
rclb
jns
and
mov
in
pusha
testl
mov
das
lcall
and
test
jne
add
in
out
test
in
insb
mov
add
clc
sbb
sub
ljmp
fnstsw
or
or
test
mov
inc
aad
mov
xor
add
pop
lret
addr16
pmulhuw
rcrl
pop
dec
rclb
mov
add
std
insb
xor
inc
and
sub
inc
fsubl
mov
or
rorl
movl
leave
dec
mov
mov
xor
adc
or
shrb
gs
mov
sbb
jmp
mov
adc
mov
jns
ret
push
rcr
cmp
inc
mov
daa
add
mov
sub
and
mov
jg
lea
push
pop
daa
xchg
cmp
jb
aas
data16
pop
mov
jne
inc
insb
fucom
rorl
dec
sahf
decb
in
fs
mov
sub
xchg
add
mov
mov
pop
cmp
mov
xor
pusha
and
sbbl
adc
or
mov
mov
pop
cltd
push
add
sbb
inc
int
aam
out
mov
mov
aaa
test
adc
cmp
xor
rcr
mov
das
and
lret
cmp
inc
mov
mov
fcmovb
cmp
mov
test
inc
dec
test
nop
mov
jo
cmp
mov
shll
test
shlb
add
dec
pop
out
xor
lods
test
add
push
sbb
mov
xor
add
pop
aas
shll
jmp
cmp
int
rcrl
mov
xor
or
repnz
loopne
mov
enter
xchg
add
or
movsb
jo
imul
loopne
ret
xchg
stos
sarb
in
add
jne
loopne
nop
sub
or
sbb
movsb
mov
xor
jo
shrl
fwait
inc
movsb
rorl
jns
sbb
push
arpl
je
xchg
and
dec
dec
add
decb
movsb
push
mov
scas
cmpsl
andb
cmp
inc
adc
outsb
lret
notb
call
aas
xchg
and
sub
icebp
push
loop
add
fsubrl
pop
mov
and
or
fmul
in
cmc
inc
adc
stc
add
in
jne
add
shr
mov
push
mov
shll
sub
push
hlt
add
sub
pop
add
test
push
popf
adc
js
add
and
sbb
push
inc
and
add
and
lock
test
popf
cmpsb
js
call
ja
lds
jmp
lods
clc
fisubrl
insl
scas
jno
or
pop
jmp
lods
filds
data16
inc
ficompl
lods
cmp
mov
sub
fs
adc
test
inc
sub
cld
sbbb
adc
rcrl
pop
push
pop
pop
jl
xor
insl
mov
loopne
cld
and
or
pusha
push
addr16
add
cmp
cmp
outsb
in
mov
jae
stc
cmp
inc
adc
xor
cmp
add
fmulp
rolb
mov
and
push
add
adcb
sub
mov
clc
add
lds
inc
sub
sub
xchg
int
mov
xor
add
mov
and
jl
push
pop
psubusb
stc
dec
in
aam
dec
add
mov
and
push
lahf
sub
into
or
inc
imul
jns
adc
add
pop
inc
lock
mov
sti
pusha
cmp
pop
add
arpl
cli
pop
mov
scas
xor
das
xchg
adc
test
decb
and
cmp
add
mov
or
xor
rcr
hlt
sub
js
call
movsl
sahf
repnz
out
mov
sbbl
dec
stos
lds
test
mov
cltd
dec
loopne
pop
jl
cmp
xchg
daa
mov
and
pop
loop
std
or
add
mov
push
or
xchg
cmp
add
jnp
sub
test
inc
xchg
add
nop
mov
pop
daa
lods
test
jo
inc
mov
jg
inc
mov
mov
aad
push
imul
mov
call
in
jo
movsl
dec
xchg
mov
xor
hlt
mov
scas
adc
lds
roll
add
dec
lret
cmc
sub
cmpsb
aad
and
cmp
mov
or
cmp
sti
add
popf
dec
jle
add
mov
lret
cmp
cld
xor
aaa
hlt
xchg
sub
lods
ret
push
mov
push
xor
add
cwtl
pop
dec
cs
and
leave
and
adc
push
add
push
jecxz
adc
mov
mov
and
scas
xchg
es
or
orl
add
enter
mov
cli
jecxz
add
xor
add
les
sbb
inc
dec
sahf
pop
scas
inc
mov
jno
xor
cld
xor
leave
rcrb
fwait
mov
shlb
mov
lods
movsl
push
mov
hlt
shrb
jns
jnp
mov
inc
or
popf
stos
icebp
addl
ret
add
inc
cld
pusha
arpl
push
cmp
fistpl
pop
inc
lahf
sysret
lock
mov
inc
sahf
add
cmove
pop
inc
ljmp
inc
dec
ret
sbb
sbb
addr16
dec
adc
aaa
push
and
cmp
xchg
jo
sbb
ret
lret
xor
adc
sbb
rcrl
addb
movb
or
cmp
and
addr16
jb
add
cld
sbbb
cmc
dec
dec
subb
or
xlat
cmp
sub
mov
dec
dec
jns
add
sbb
xor
inc
xor
push
mov
xchg
mov
xor
or
pop
test
fiadds
pushf
cmp
xchg
sub
repz
loopne
mov
inc
add
dec
mov
sti
roll
add
xor
mov
or
nop
jecxz
lret
mov
addb
aas
call
aam
icebp
cmp
push
pusha
jns
sbb
and
lods
dec
inc
mov
arpl
xchg
and
aas
and
jl
sbb
jl
add
jmp
clc
cmc
add
push
sub
sub
sbb
and
inc
insb
out
push
adc
and
cmp
shl
push
loopne
nop
mov
sbb
call
dec
cmp
and
add
cwtl
aaa
and
xor
mov
cmc
sahf
js
pop
cltd
add
dec
push
sub
call
sbb
cmp
inc
testb
loopne
pop
scas
cmp
and
in
repnz
mov
sti
jl
adc
adc
or
push
test
mov
or
or
sbb
insl
insb
mov
divl
cltd
loopne
test
call
add
mov
adcb
add
andl
rcl
pusha
and
push
cwtl
adc
push
sub
rorb
or
mov
mov
sub
pop
push
jae
mov
adc
push
out
add
imul
mov
pop
dec
and
mov
xchg
mov
cld
or
es
jns
pusha
xchg
lods
lock
dec
test
les
push
movsl
dec
ret
addl
cmp
cmp
cld
xor
cmpsb
rorl
dec
inc
call
cli
addr16
insl
pop
outsb
or
roll
icebp
dec
add
sarl
int3
call
cmpsl
ret
jl
pop
sbb
add
insb
cwtl
sahf
dec
scas
xor
sbb
fcoml
lods
add
sub
xchg
cmp
pop
cmpsb
mov
insb
mov
ss
jmp
mov
lahf
movsb
push
dec
mov
loop
xor
or
lret
aas
sub
rorb
add
cmp
mov
fwait
ja
mov
and
jns
add
or
jp
ja
daa
mov
les
add
xchg
gs
xor
iret
push
sbb
ret
mov
sbb
es
clc
pop
inc
adc
sbb
jne
add
psubsb
push
sub
add
add
clc
adc
in
das
and
pop
dec
pop
das
or
testb
jnp
repnz
clc
mov
and
push
inc
movsb
jnp
push
movsl
and
repnz
loopne
cmpsl
mov
jmp
xor
mov
sbb
aaa
xchg
or
sub
rorb
xchg
xchg
pushf
xchg
adc
das
sub
scas
insb
add
xor
push
cmp
xor
fstpt
push
mov
or
adc
int
inc
in
cmp
cmp
sahf
lahf
mov
jl
aam
lcall
imul
cmp
inc
repz
sub
in
call
cmp
incb
mov
test
insb
xchg
das
adc
push
repz
loope
mov
outsl
jb
addr16
push
icebp
sub
sbb
add
fabs
push
aas
cmp
sub
pop
str
orb
xor
and
mov
std
jle
shll
cmp
pop
rcrl
sbb
jno
daa
arpl
in
jecxz
and
repz
aas
mov
mov
sub
or
jne
in
dec
pop
xchg
sbb
jns
sub
adc
and
mov
xor
and
roll
add
sar
push
aaa
xor
imul
adc
mov
shlb
dec
adc
push
sub
mov
add
cli
jmp
cmp
orb
pop
imul
and
loopne
mov
jne
js
cmpl
adc
jo
adc
jno
mov
sti
shlb
sbb
arpl
xchg
cmp
ret
scas
in
sub
cmp
xchg
cmpsl
add
and
xchg
push
faddl
dec
push
xor
or
mov
psllw
sub
popa
in
jae
repnz
dec
mov
push
sbb
js
or
repnz
jbe
add
pusha
arpl
or
add
lret
dec
cmp
and
inc
xchg
scas
out
sarl
loopew
popf
ficoml
scas
pushl
sub
stc
mov
xchg
and
call
lret
adc
or
sahf
iret
jns
and
cld
loope
mov
das
xchg
jb
fsubrp
cmp
shlb
insl
lock
mov
or
in
push
inc
push
leave
scas
es
mov
cs
jmp
sub
mov
inc
pop
repnz
push
mov
call
push
push
int
sarl
rclb
je
mov
mov
mov
es
rcrl
xor
xchg
pop
mov
inc
mov
popf
add
mov
adc
in
adc
dec
add
sub
bound
roll
fists
movsl
lret
xchg
lods
out
or
xorl
aaa
fnstenv
shl
out
pop
push
add
pop
movsb
idivl
xor
cmp
sub
in
lret
xor
inc
and
sub
dec
and
or
mov
cmc
mov
int3
sbb
cs
cwtl
loop
aad
pop
subl
jbe
mov
popf
loope
ds
fwait
cmp
loopne
mov
xchg
jbe
push
pop
nop
push
movsb
and
add
mov
fucom
test
adc
fs
repnz
add
insl
push
addb
loopne
push
mov
mov
ljmp
pop
lods
and
mov
leave
pop
loopne
fsubr
sub
inc
adc
cmp
mov
loopne
rolb
int3
mov
das
scas
push
xchg
test
adcb
jb
push
inc
lods
xlat
dec
repnz
addl
pop
shlb
add
sub
scas
cmp
add
repz
mov
adc
dec
mov
pop
loop
repnz
xor
pop
or
or
shll
add
push
mov
mov
push
push
shll
addr16
mov
loopne
xor
insb
pop
push
mov
pushf
xchg
add
popf
and
aas
add
ljmpw
clc
je
lock
dec
or
dec
cmp
pop
enter
push
or
pushf
or
and
das
pusha
rorb
sbb
cli
or
jl
push
push
sub
cld
mov
mul
mov
scas
adc
jo
fstpl
movsl
out
cmpsb
cltd
popf
insb
xchg
int3
nop
rcrb
mov
push
mov
sahf
add
imul
jge
mov
or
in
sbb
dec
xchg
mov
push
or
sbb
loop
int3
mov
jbe
pop
decl
inc
dec
addr16
addb
rorb
mov
jmp
jns
pop
add
mov
das
sub
xchg
xchg
adc
sbb
mov
xchg
sub
cmp
test
adc
rolb
mov
jne
das
popf
or
add
inc
cltd
inc
mov
lret
mov
add
fcmovne
xor
popf
lock
mov
ljmp
xchg
roll
pop
ret
repz
mov
xor
dec
lods
sbb
and
sub
enter
in
xor
jnp
lahf
cmpsl
pop
pavgb
jo
inc
mov
cltd
xchg
enter
sbb
adc
sub
push
test
dec
les
das
ret
adc
xor
add
jnp
lods
inc
das
movsl
dec
ret
cmp
out
fidivl
or
rorl
add
xchg
push
lret
dec
gs
pop
mov
add
sbb
das
xchg
xor
push
add
cmp
in
loopne
lret
pop
mov
add
xlat
push
scas
ret
push
sub
mov
lods
cmp
ds
add
callw
cld
cmp
das
mov
pop
fldenv
shrb
movsb
mov
int3
add
and
inc
bnd
adc
xchg
pop
je
adc
push
lcall
mov
ret
and
fwait
cmp
clc
or
outsb
push
out
push
push
bound
cwtl
hlt
rolb
inc
dec
adc
cmp
out
test
js
nop
dec
dec
sbb
std
add
data16
adc
dec
imul
imul
jne
and
pusha
and
xchg
mov
fbld
xchg
push
addl
xor
dec
jnp
push
test
pop
and
addl
imul
mov
pop
mov
out
outsl
dec
mov
lods
stc
fmuls
ds
arpl
rol
imul
jns
jb
jno
inc
mov
ror
pop
mov
repnz
std
cmp
mov
jne
jl
mov
nop
adc
repz
jo
outsb
mov
pop
cmpsl
sti
add
pop
pop
sbb
pusha
jb
cwtl
sub
stos
leave
pushfw
and
xor
add
gs
sub
or
dec
sahf
mov
loope
mov
jne
push
je
arpl
mov
add
lock
outsl
or
lea
jp
daa
add
mov
cwtl
dec
imul
movsb
or
pop
nop
aam
dec
mov
mov
sub
rcrl
in
push
repz
push
pop
inc
cli
xor
push
mov
xor
pop
and
mov
sub
cmp
aas
gs
cld
repnz
pop
mov
repnz
add
arpl
mov
mov
shll
popa
lea
sbbb
mov
add
push
daa
add
aas
roll
xor
jo
test
mov
and
push
inc
incb
test
add
push
stos
cmp
mov
inc
sbb
ja
lahf
lahf
insb
adc
xorb
push
test
adc
ret
sub
push
push
arpl
stos
aam
les
cmp
push
js
imul
loope
leave
adc
xchg
arpl
xchg
mov
cmc
orb
shll
dec
loope
push
and
inc
cmpsl
cmp
sbb
adc
je
xchg
add
pop
add
sub
movsb
cwtl
incb
lret
sub
lock
repnz
scas
pop
pushf
or
mov
lock
test
lock
inc
dec
jo
insb
xor
dec
mov
jae
paddb
mov
mov
aam
jbe
pushf
cmp
add
ret
add
out
mov
add
cmpsl
inc
and
ret
ds
mov
adcb
mov
inc
mov
and
and
mov
loope
pusha
inc
add
iret
rolb
xorb
pop
and
add
xchg
enter
and
ss
xchg
cwtl
cltd
adc
sbb
int3
add
stc
aad
mov
inc
push
dec
arpl
push
cwtl
lret
daa
adc
push
mov
movsb
outsb
pop
cs
xor
add
push
and
mov
enter
cmp
dec
xor
mov
out
add
ljmp
sub
xor
lock
int3
jecxz
pop
lods
cwtl
cmp
cmp
jne
test
add
lret
jge
cmp
xor
call
or
sub
add
cmp
lret
sub
insl
call
mov
lret
mov
adc
call
lds
rclb
aam
and
add
and
in
cmpsl
pop
push
movsl
aam
int3
xchg
cmp
stos
lret
nop
aas
lods
cmp
jmp
adc
call
and
out
sub
sbb
or
push
scas
pop
cmp
and
mov
mov
fsubl
rcl
sbb
addl
arpl
test
cmp
lods
ret
add
sbb
lds
mov
cmp
into
les
and
mov
nop
popf
jbe
pop
enter
or
jns
and
push
inc
jo
or
lcall
jg
lods
mov
movsl
xchg
mov
inc
sub
pop
dec
jp
jb
jp
adc
jge
mov
lcall
movsb
ljmp
jl
outsb
mov
mov
cmp
out
cmp
mov
andl
pop
dec
fstpt
push
or
int3
inc
adcb
call
movsl
test
lea
mov
lods
bound
xlat
leave
roll
call
fldcw
jp
daa
pusha
imul
mov
mov
fdivs
adc
ljmp
fidivrl
jo
in
jle
add
out
mov
mov
aas
sbb
cld
pop
sarb
and
enter
pusha
pop
or
outsb
sbb
push
push
mov
add
mov
lods
adc
mov
jge
xchg
xchg
cmc
xor
stos
je
pusha
push
fsubrl
shll
and
stos
stos
lods
add
aas
sbb
mov
cltd
sub
mov
icebp
mov
jg
sbb
mov
cmp
clc
and
cmp
leave
lahf
stos
popf
cmovo
or
jno
movsl
push
cli
and
sub
sub
inc
mov
mov
into
mov
scas
pop
out
je
loop
rcll
xchg
xorl
jo
mov
in
aaa
and
ds
js
or
mov
dec
and
rclb
add
ljmp
pop
aad
jnp
popa
pusha
mov
sbbb
lcall
adc
xor
clc
xor
imul
nop
lods
xor
pop
mov
pop
and
lods
in
inc
mov
mov
pushf
call
adc
and
mov
out
add
jo
jbe
push
aas
movsl
dec
das
jo
outsb
fdivl
and
outsb
add
adc
pop
add
cwtl
mov
fcompl
fwait
xor
inc
pop
sub
leave
inc
xchg
in
and
mov
sub
mov
or
jo
decb
out
xor
add
orb
pop
mov
lahf
rclb
sahf
adcb
xlat
rorl
mov
xor
push
cli
mov
in
sahf
mov
movsl
inc
sub
data16
dec
sub
movsb
sbb
inc
imul
movsb
rcrb
and
out
mull
imulb
inc
or
repnz
add
test
movsb
sti
loopne
inc
mov
mov
add
or
push
jae
or
test
add
out
pop
cld
arpl
lods
je
sbbl
or
cmp
cmp
mov
lds
test
add
or
sbb
inc
dec
sub
push
cmpsb
and
mov
jne
xchg
shrb
and
mov
pop
rclb
pushf
mov
dec
orb
xor
outsl
jo
add
push
mov
je
xchg
or
add
test
shlb
popa
out
lahf
xor
adc
mov
xchg
pop
ror
mov
xchg
inc
test
popf
pusha
xchg
lret
mov
rolb
mov
pop
ss
add
lcall
add
orl
inc
push
cmp
pop
jo
mov
mov
ret
or
and
add
jnp
push
push
and
xor
mov
mov
jmp
fs
pop
rolb
push
mov
mov
mov
adc
add
insl
cmp
js,pt
add
pusha
push
add
mov
sbbb
push
aas
inc
outsb
sbb
mov
out
jl
push
into
inc
or
push
push
add
cltd
inc
out
push
cmp
jo
cmp
sub
cltd
cmp
ficompl
sahf
push
pop
lcall
and
push
or
nop
aas
pusha
cmp
js
leave
xchg
mov
add
cli
fcompl
repz
mov
mov
push
add
mov
leave
sub
ret
aaa
ss
test
pop
mov
shlb
cmc
in
dec
add
pop
or
popa
mov
daa
addr16
repnz
xchg
call
pop
sub
dec
xchg
or
aaa
or
or
add
pop
inc
xchg
xchg
push
es
push
pop
pusha
mov
mov
adc
sarb
sti
lock
jl
xorb
xchg
cwtl
xchg
jp
nop
xor
fwait
adc
push
inc
xchg
jae
nop
push
dec
xchg
adc
aas
mov
sbb
in
imul
inc
in
sub
or
sbb
or
sti
inc
push
adc
pop
jns
push
dec
repz
sub
push
out
cmpsb
cmp
cwtl
sub
int3
push
adc
repz
dec
fwait
in
inc
into
adc
pop
cmp
inc
push
out
movl
out
mov
push
pusha
add
pop
mov
push
push
call
and
xchg
testl
sbb
inc
push
add
dec
pusha
adc
call
test
iret
jl
ret
addb
mov
xor
or
out
roll
push
pushf
testl
lea
movsl
dec
les
cs
test
pop
stc
add
add
test
push
daa
mov
stc
push
jmp
cmp
cs
push
mov
jecxz
mov
mov
pop
ret
jg
pop
and
sti
cmpsb
cmp
jbe
mov
xor
push
movsb
sub
mov
addb
test
addb
mov
push
pop
call
sub
add
js
enter
pop
ret
enter
lahf
add
ret
push
clc
dec
mov
roll
or
adc
mov
clc
test
or
call
in
idivb
mov
pop
and
xchg
add
push
popf
sbb
or
fwait
mov
rcrb
imul
mov
xor
orb
push
addr16
fsubrl
nop
test
jecxz
xchg
add
sysenter
test
pop
push
mov
sbb
test
test
adc
or
dec
pop
mov
or
iret
jg
and
jmp
mov
movl
jmp
test
test
and
sbb
push
sbb
ret
mov
inc
push
scas
jbe
arpl
mov
mov
xchg
popf
and
scas
pop
icebp
xchg
adc
fistl
ret
add
and
xchg
and
inc
push
ret
std
lret
fstpl
push
shl
add
std
sbb
push
mov
add
mov
movsl
xchg
addb
sbb
inc
repnz
xor
paddb
popf
sbb
lock
out
mov
mov
shlb
popl
and
cltd
dec
rcll
mov
icebp
movzbl
ds
xor
push
xor
mov
push
jl
and
inc
push
ret
mov
mulb
sbb
push
lret
rcr
push
and
and
rclb
rcr
pop
add
loop
mov
in
or
cmp
sbb
mov
push
fcoms
movb
cmc
xor
das
mov
and
mov
jns
movsl
icebp
sub
adc
push
pinsrw
jp
sarb
movsl
push
add
cli
inc
xchg
mov
sbb
and
loop
xor
fildl
cmp
lea
or
cli
sti
xchg
add
loope
add
mov
or
sbb
pop
jbe
mov
adc
and
xchg
mov
sbb
lods
xorl
repnz
pusha
pop
inc
and
xor
dec
sub
mov
inc
adc
call
mov
inc
in
addl
xor
pop
add
pusha
sub
cwtl
in
or
dec
push
popa
sub
insl
es
bound
xor
sbb
xor
jae
pop
outsl
push
and
dec
pop
cwtl
and
dec
cmc
fdivrs
negl
je
adc
mov
xchg
jge
sar
insl
add
jne
pop
lock
sbb
pop
add
aaa
sub
mov
mov
aaa
mov
push
mov
lock
jbe
push
jmp
mov
adc
add
mov
jae
cmp
ret
cs
or
mov
andl
mov
inc
faddl
inc
ljmp
int3
aaa
cmpsl
add
pop
pusha
test
sub
adc
out
cmovno
leave
and
push
pop
popa
loop
xor
icebp
sub
loopne
shlb
mov
loope
mov
sub
cmp
inc
and
leave
jmp
imul
enter
mov
rol
sbb
adc
psubusb
dec
cltd
hlt
sbb
xchg
sbb
int3
inc
adc
mov
inc
mov
sbb
add
sbb
cmp
ja
cmovns
pop
xlat
shl
addr16
test
sub
aad
fistpl
dec
call
pop
out
and
test
ret
add
xor
dec
ja
jmp
aam
add
or
adc
pop
and
fs
or
mov
rcrb
push
and
add
sub
in
jns,pn
bswap
lret
loopne
cmpsl
sbb
in
into
add
loope
cld
nop
push
jg
sub
inc
pop
add
imul
xchg
or
repz
sub
sbb
rcl
movsl
fwait
mov
inc
xor
jo
mov
mov
fcmovnbe
adcb
hlt
inc
pop
insb
jns
jge
add
repnz
and
jae
std
pop
addb
jle
insb
mov
popl
sbb
xchg
xor
das
test
cmc
xor
sbb
and
faddl
inc
orb
popf
mov
sbb
arpl
and
push
idiv
adc
push
pusha
sub
loope
add
bswap
test
sbb
cmpsb
pcmpeqb
add
outsb
iret
jo
cld
in
push
or
lea
pushf
es
or
enter
loope
addr16
mov
dec
repz
adc
adc
mov
fidivrl
dec
add
xchg
sbb
cmp
jge
and
bound
push
loopne
addr16
lret
sbb
xchg
dec
mov
dec
filds
mov
xchg
test
lea
pusha
adc
mov
add
xchg
cmp
adc
add
out
xor
and
ss
or
fwait
out
lahf
inc
mov
inc
sbb
sbb
mov
pop
add
mov
popa
nop
jmp
push
sbb
int3
pop
push
test
mov
dec
push
push
pop
sbb
add
and
ret
add
jl
push
mov
cmpb
cwtl
mov
pop
jnp
fstpt
shrl
test
jg
xchg
loopne
cmp
sahf
cmp
mov
mov
mov
push
lds
push
mov
jp
add
ds
sub
rolb
aad
add
push
pusha
mov
shrb
sbb
mov
pop
adc
jp
pop
rcrb
xchg
sub
xchg
add
fstpt
pop
mov
js
int3
push
ss
mov
lods
cld
andl
loop,pn
xor
jg
mov
cltd
pop
sub
or
inc
pop
add
push
xchg
cmpsb
rcrb
pop
jecxz
mov
adc
scas
ret
nop
mov
cmp
add
lods
xor
adc
pusha
mov
jo
push
mov
xchg
sub
dec
xchg
cs
sub
add
add
mov
sbb
jb
lds
pop
mov
adc
jle
jb
add
sub
inc
mov
xchg
push
gs
pusha
xchg
test
mov
test
ds
rorl
mov
outsb
lds
adc
or
inc
jle
mov
inc
jge
pop
adc
mov
insl
xlat
sarb
mov
pop
jmp
popa
popf
jmp
sbb
pop
loope
pop
fildl
in
push
data16
sbb
std
mov
sub
xchg
jmp
mov
test
dec
xor
mov
sarb
test
xor
sahf
cltd
add
or
cmp
add
mov
add
or
xchg
sbb
xor
sbb
push
test
test
loopne
push
push
jl
push
outsb
adcb
ret
cmp
loopne
and
out
dec
lock
movsl
add
jmp
jg
inc
or
pop
and
mov
add
nop
and
cmpsl
jno
add
test
sub
je
loopne
dec
add
mov
or
int3
nop
or
lahf
ja
fiadds
xchg
cmp
rolb
in
add
dec
mov
mov
push
jg
daa
shlb
jl
idivb
mov
pop
js
iret
xor
ja
fdivrs
repnz
in
das
popf
por
loope
cmp
repnz
add
test
shl
push
cmp
dec
add
ja
jne
repz
je
xchg
clc
adc
sub
bound
sahf
inc
outsb
sbb
daa
add
sbb
add
shl
add
lods
ss
dec
mov
mov
inc
xchg
lock
add
mov
sub
lds
addl
pusha
add
mov
inc
add
aaa
cli
mov
loopne
and
add
lods
outsb
sub
push
js
hlt
xor
loopne
sarl
jecxz
mov
add
je
xchg
inc
nop
fistpll
ret
cli
cmp
inc
xchg
cmp
outsl
adc
cmpsb
xor
loop
lret
xchg
dec
fistl
pop
cmp
aam
into
test
mull
add
mov
add
cli
clc
pusha
and
or
lret
push
sbb
add
lods
addr16
aaa
loopne
aam
inc
ljmp
add
jge
insb
mov
mov
add
or
sub
js
andb
push
mov
loope
enter
pop
les
push
imul
aam
cwtl
or
stc
dec
cltd
outsl
inc
pusha
push
xor
or
sarb
or
dec
mov
leave
jns
xchg
shrb
cmpsl
adcl
cmp
xchg
adc
out
jp
jp
loopne
adcl
jno
sbb
sub
pop
push
scas
add
inc
mov
sbb
sub
nop
ljmp
add
jmp
add
sbb
daa
add
add
mov
mov
sbb
jo
icebp
mov
add
jecxz
xchg
mov
dec
push
mov
or
or
mov
dec
push
xchg
sti
sbb
add
add
push
adc
popa
mov
icebp
popf
add
sbb
sub
out
repnz
cwtl
mov
xchg
and
jo
fisubrs
and
mov
dec
add
int3
sbb
add
es
inc
push
add
loop
das
fdivp
dec
xchg
push
mov
or
clc
push
frstor
test
dec
fndisi(8087
adc
inc
cmp
push
andl
add
imul
lret
dec
rorl
pop
and
adc
mov
lret
mov
pop
pop
jecxz
icebp
push
jo
sbb
inc
add
mov
dec
cwtl
inc
sbb
loopne
mov
add
or
in
xchg
rclb
xchg
loope
cmp
call
mov
inc
fld
fcoml
insl
cltd
inc
add
xor
or
pop
adc
dec
cmpsb
dec
imul
maxps
push
add
rorb
pop
push
mov
push
jnp
add
clc
adc
push
movsl
dec
daa
mov
loope
nop
lods
add
mov
and
mov
hlt
addl
fildll
mov
add
ret
cmp
mov
lcall
scas
jnp
fdivl
lds
mov
inc
mov
mov
and
dec
push
movsl
add
adc
sub
jl
push
sbb
mov
icebp
addb
ja
cmp
dec
sbb
jle
sbb
mov
imul
cltd
mov
mov
stos
cwtl
test
xchg
cmp
filds
and
andb
ret
or
cmp
dec
out
sbb
add
aam
and
faddl
mov
or
jne
add
fildll
popf
pop
jnp
arpl
nop
jmp
mov
dec
daa
add
add
sbb
test
or
daa
lds
xchg
nopl
add
sub
add
arpl
and
inc
orb
mov
sub
or
mov
push
mov
pop
adc
jne
mov
add
mov
sub
movsb
push
icebp
xor
and
mov
nop
mov
sbb
dec
js
push
cwtl
icebp
pop
push
cmc
xor
mov
xorb
bound
mov
mov
popa
xchg
xor
out
mov
les
clc
in
sub
aas
mov
outsl
mov
es
and
scas
or
mov
add
push
mov
jno
aad
mov
out
or
movsb
push
or
cmp
or
mov
daa
pusha
fsub
or
les
int
sub
cs
lods
xor
lret
sbb
adc
adcb
fisubrl
imul
adc
add
pushf
inc
pop
push
pop
jl
pop
inc
or
xchg
and
mov
cmp
or
stos
xor
loopne
mov
enter
sbb
nop
rorb
jecxz
loope
and
pop
jg
mov
lods
pop
push
and
orb
cmpsb
lock
xchg
add
cmp
jmp
or
jbe
adc
or
push
dec
pop
mov
push
lock
fadds
fwait
jmp
dec
xor
lods
sti
imul
faddl
sub
sar
sbb
ds
xor
fidivl
notl
add
xor
mov
or
sbb
inc
inc
xor
lret
push
int3
lea
scas
mov
lcall
push
mov
fisubrl
shr
lods
fnsave
push
mov
and
and
or
lods
fdivl
outsl
add
xor
pop
add
inc
lods
xchg
arpl
xchg
push
mov
js
test
pop
xchg
mov
bound
test
pop
inc
add
mov
mov
adc
stc
add
push
insl
mov
dec
sbb
xor
or
cwtl
icebp
sbb
push
mov
sbb
sbb
rolb
mov
ret
add
aam
or
push
mov
fisubs
clc
pop
loop
test
jbe
lahf
mov
fldt
fsubl
inc
lahf
sub
in
xchg
outsb
stc
sbbb
xor
add
ss
dec
push
sub
notb
xchg
dec
inc
and
lret
sbb
call
inc
xchg
sbb
addr16
ds
sub
sbb
add
daa
orl
dec
jno
pusha
and
sbb
mov
gs
xor
bound
fldenv
dec
xchg
fbstp
mov
addl
insl
shl
mov
add
paddusw
jecxz
jp
jo
adc
cltd
cld
sub
xor
scas
sbb
cmp
or
leave
and
sub
add
mov
scas
add
or
fisubl
cwtl
out
xor
in
rcll
xchg
push
aad
sub
add
scas
int
cmp
lret
push
sbb
test
test
jg
mov
xor
cmc
sbbl
jne
pusha
lock
fstps
add
cwtl
push
mov
xchg
scas
repz
pop
faddl
sbb
loopne
lds
jb
sbb
popa
push
insl
sbb
ss
mov
subl
jl
stos
jl
ljmp
cwtl
cmp
cli
rorl
shrl
mov
cmp
xor
jbe
dec
mov
xor
push
push
loop
pop
test
fcompl
and
or
mov
pop
cmc
in
sbb
mov
jb
ret
or
push
ret
xor
cwtl
jl
inc
pop
insb
dec
mov
or
mov
cmp
dec
out
add
or
aad
inc
in
lret
aaa
dec
in
jno
mov
and
sbb
in
add
jle
cmp
fstpt
mov
sub
test
test
lcall
push
arpl
cwtl
add
outsb
xchg
inc
mov
je
dec
aas
jp
mov
pushf
xor
inc
or
les
inc
popf
or
flds
push
enter
fcoms
or
es
flds
xchg
cmp
xor
divb
sub
cs
cmp
fisubrs
push
pop
inc
fs
cmpsb
cmc
mov
or
inc
push
add
push
test
xchg
sbb
pusha
enter
addr16
xor
dec
insb
mov
sarl
cltd
sub
andl
add
jb
ret
test
lds
into
cmp
orl
pop
jmp
not
loopne
xchg
sbb
add
push
cmp
inc
adc
outsl
add
lods
inc
add
adc
xor
add
push
pusha
rorb
das
aaa
xor
xchg
add
rcrl
mov
sub
pop
sbb
sbb
add
pusha
or
xor
fistpl
jb
add
shrl
pop
inc
outsl
orb
xchg
sbb
movsb
shll
xor
add
pop
lret
jnp
or
das
add
inc
sahf
daa
ljmp
pop
subb
or
mov
pop
add
pop
test
add
inc
mov
bound
lea
cmpb
pop
sbb
pop
add
pushf
ret
push
adc
std
adc
sub
jmp
lds
cmp
fsubrp
xchg
add
jo
aad
lret
movsl
xor
out
xor
lods
mov
sbb
in
inc
xchg
push
or
add
orl
jo
fmull
dec
repnz
push
sbbb
cmp
fsubrs
test
sbb
pop
xor
add
or
xchg
or
insb
inc
iret
xchg
add
jle
cmp
or
cmp
minps
sbb
stc
adc
and
cltd
repz
inc
pop
mov
pop
jbe
add
push
pop
gs
repnz
movb
xchg
and
mov
idivl
ss
or
mov
in
mov
pop
push
and
dec
fistpl
test
pop
scas
rcr
sub
or
xor
and
push
test
sahf
in
cli
test
add
in
or
pop
stos
stos
add
add
or
inc
pop
xor
mov
jae
in
ret
or
inc
call
nop
push
incb
dec
fstpl
stos
insl
fstpt
add
sbb
pop
and
xchg
mov
lock
rolb
aam
mov
inc
xchg
xor
popf
pop
int3
ja
daa
cmp
push
sarl
mov
rorb
movsl
add
sahf
inc
push
cmp
jmp
add
cmpsb
mov
and
pop
out
movsl
add
xor
sub
icebp
pop
mov
js
adc
xchg
push
ret
push
xchg
movl
std
aam
push
or
lahf
out
mov
push
and
add
add
sub
nop
pop
push
mov
fimuls
add
push
mov
rcrb
js
ljmp
sti
mov
xor
mov
cli
mulb
add
sbb
mov
fdivrl
adc
jo
add
inc
cmp
jp
add
dec
cmc
dec
inc
adc
or
and
mov
incb
pop
imul
xor
fs
push
addr16
inc
pop
rolb
vmwrite
fxtract
and
sti
pop
jnp
pop
aad
add
jge
dec
sbb
mov
dec
icebp
test
push
out
fiaddl
and
pushf
dec
aaa
mov
je
arpl
xor
or
ds
jo
sbb
push
popf
adc
jecxz
cltd
pop
aas
or
lods
pop
movsb
sbb
rcrb
add
xor
cmc
jne
mov
shll
pop
ffree
sub
jl
cld
fcomip
addr16
cmpsb
push
add
push
push
pop
clc
shll
aaa
movsb
or
cmp
jo
xchg
pop
xchg
fnsave
mov
pusha
sub
jl
mov
daa
inc
movsl
adc
lea
inc
mov
leave
imul
mov
add
sub
add
xchg
nop
jle
xchg
in
xchg
adc
jno
mov
add
rorb
cwtl
and
in
or
sub
and
inc
sub
pop
rorl
mov
out
les
adc
mov
cmp
lds
push
nop
pusha
push
pusha
popa
pop
pop
ljmp
or
mov
cmpsb
add
xor
and
sub
mov
jbe
xchg
adc
push
out
orb
jmp
icebp
push
or
xor
rclb
test
cli
icebp
cmp
push
inc
jne
or
xchg
mov
adc
les
mov
popf
inc
xor
pop
mov
sbb
adc
fadds
dec
ret
je
jbe
sbb
popf
data16
cmp
std
jecxz
or
shr
jo
add
xchg
into
nop
ficompl
daa
push
mov
xor
mov
lods
dec
push
sub
mov
out
push
xchg
pusha
orb
add
xor
pop
sub
xor
adc
nop
cmp
and
jecxz
popf
xor
sub
das
xchg
cmp
nop
pusha
add
push
dec
or
add
shlb
shrl
ss
mov
call
aad
or
cltd
mov
in
push
sbb
xchg
fisttps
loopne
jl
mov
out
or
sub
notb
shrb
adc
mov
nop
ret
jle
dec
in
rolb
mov
ret
or
xchg
lret
adc
loopne
sbb
push
mov
and
nopl
sbb
jle
das
jbe
add
shr
inc
and
in
or
xor
and
jo
lea
mov
mov
lods
add
cmp
push
nop
movsb
mov
jae
pushf
xchg
insb
hlt
loop
out
call
ret
mov
roll
pop
daa
ljmp
push
push
leave
mov
pop
jg
movsl
clc
mov
or
shl
sub
pop
xchg
xorb
pusha
mov
inc
mov
fstps
mov
rol
push
cmpsl
repnz
xchg
cmp
push
arpl
cmp
cltd
pop
loope
mov
outsb
jecxz
addl
xor
icebp
sub
pop
jbe
imul
xor
popf
lcall
push
mov
repnz
leave
pusha
push
xor
scas
popa
lock
inc
or
mov
add
mov
loop
repz
and
sub
shrb
lret
dec
or
dec
push
xor
sbb
inc
aaa
pop
xchg
adc
adc
mov
pop
push
jmp
add
stos
je
mov
popa
mov
loop
es
pop
mov
and
lcall
dec
mov
cmpb
xchg
cs
and
sub
orb
popa
pop
pop
lock
pop
add
cmc
or
inc
sbb
sbb
mov
xor
mov
lahf
xor
mov
jge
ds
jecxz
mov
rolb
and
test
mov
int
mov
or
fsub
std
mov
rorb
adc
add
cmp
adc
xchg
and
or
cwtl
pusha
decl
adc
out
cmp
sbb
or
xor
mov
or
xor
std
adc
stc
xchg
or
lahf
rcll
dec
ds
mov
insb
push
mov
sbbb
or
mov
xor
aaa
je
mov
rcrl
in
clc
add
fwait
mov
push
stos
loopne
pop
mov
fiaddl
xchg
lret
lea
and
add
popl
mov
cmc
mov
jmp
aam
daa
in
cwtl
out
popa
scas
pop
jo
jo
fisttpll
dec
out
lock
push
sahf
adc
cs
mov
sbb
adc
mov
lret
push
push
pop
sbb
inc
add
mov
inc
add
int
push
movsl
cltd
js
and
xchg
lret
mov
cmc
and
mov
cmp
cmp
xchg
movsl
fsts
xor
xor
adc
xchg
adc
in
fistpl
mov
stos
lcall
enter
sbb
add
aas
mov
cli
pop
cwtl
inc
pop
adc
sbb
ret
loop
or
add
jb
adc
sahf
dec
movsb
add
xchg
jb
ds
or
lea
call
or
pop
xchg
pushf
jmp
sub
mov
jno
enter
insl
outsl
fdivl
stc
adc
std
cmp
leave
sbb
mov
or
mov
add
cli
fcoml
or
lea
nop
add
loop
fisttps
popw
mov
loopne
cwtl
mov
jnp
xchg
out
xor
ret
xor
jno
pushf
xor
add
pop
push
leave
sbb
aas
icebp
out
add
mov
mov
push
and
and
inc
jb
mov
insb
push
pusha
or
cs
call
jg
add
mov
pop
push
nop
test
and
adc
test
pop
push
push
movsb
subb
xchg
and
and
add
and
or
push
jo
mov
sbb
lods
movsl
sti
jg
jp
jae
add
and
ja
push
push
nop
mov
pop
and
shrb
inc
inc
in
pop
pop
mov
aam
popa
jle
aam
sbb
push
mov
je
stos
pop
icebp
add
shlb
add
into
jecxz
mov
rorl
scas
adc
jnp
stos
sub
push
fs
add
sahf
fs
and
in
cmpsb
mov
aad
pop
sub
enter
and
mov
mov
test
or
push
pushf
sub
outsl
xchg
jle
sbb
add
adc
xor
loop
in
and
into
ja
dec
and
or
jmp
or
rorb
pop
sbb
adc
xchg
and
jo
push
in
jne
mov
jge
lods
rcr
inc
and
adc
call
lds
dec
lods
fildll
js
scas
sbb
lahf
dec
add
jmp
mov
sbb
insb
inc
es
dec
xor
pop
mov
and
leave
mov
add
cmp
push
xor
ja
add
adc
or
int
aas
shll
sti
fbld
pop
sbb
jmp
xchg
fistpl
mov
rclb
lods
cmp
pop
and
rcl
mov
jnp
and
xorb
and
test
push
mov
add
mov
push
add
loope
sbb
loopne
mov
xor
fcoml
fstps
mov
sbb
sbb
add
addb
cltd
xorb
ja
or
inc
fldl
outsl
sub
jge
xchg
mov
dec
mov
lea
test
adcb
add
dec
pcmpgtb
xchg
sbb
sbb
stos
cld
es
lret
add
shr
jecxz
dec
in
fs
loop
and
add
je
push
push
mov
orb
popf
jae
in
lods
andl
imul
sbbl
nop
or
mov
or
fsubrs
sahf
push
and
or
pop
outsb
stos
dec
mov
std
pop
call
push
enter
mov
sub
add
jae
push
popf
int3
dec
adc
mov
inc
sub
int
rorb
pop
pop
dec
cld
lods
adc
movsb
addr16
pusha
out
add
movsl
pop
sbb
pop
jnp
bound
xor
sub
dec
push
pop
faddl
mov
sub
cs
xchg
xchg
mov
xor
jb
sbb
cmp
sub
pop
enter
aaa
fiaddl
shll
dec
cltd
inc
xor
in
jbe
inc
jg
add
xacquire
mov
stos
jbe
or
testb
sbb
or
popf
in
add
pop
adc
pop
loopne
andl
in
testl
push
push
push
cmovp
lock
dec
sbb
mov
add
mov
mov
or
ret
and
cmp
xor
mov
add
mov
ja
xchg
xchg
out
add
pop
mov
shl
fisubrs
xchg
in
sbb
enter
jge
lahf
insl
iret
shlb
clc
fmull
sub
call
add
test
ss
jno
cwtl
xchg
pop
xchg
test
lock
push
push
cld
pop
mov
pop
shll
dec
cmp
xchg
or
shll
adcl
mov
loope
xchg
out
insb
jg
adc
loope
mov
mov
adc
into
cs
pusha
adc
pop
push
and
filds
fs
mov
loopne
pop
popa
pusha
cmpb
push
push
push
dec
pusha
in
xchg
aam
fdivrs
in
add
ljmp
test
daa
push
push
xor
jno
or
push
pop
mov
inc
inc
or
xorb
fidivs
mov
dec
pop
mov
and
pop
sbbl
ret
push
pop
cmc
pusha
daa
cltd
mov
adc
mov
jbe
dec
rcrb
and
mov
popa
movsb
stc
adc
nop
fldl
stos
mov
mov
adc
sbb
pop
sub
xor
cmpb
cld
movsb
out
lds
movsb
into
leave
pop
xor
xor
mov
pop
push
pop
adc
dec
shll
in
add
pop
adc
cmc
and
in
add
addr16
cltd
jne
adcl
xchg
mov
add
pushl
jno
sbb
outsl
lret
in
mov
xchg
dec
sbb
sub
leave
adc
adc
and
cs
adc
cmpsl
fwait
fs
inc
mov
out
dec
adc
popa
push
add
jge
adc
push
inc
lods
xchg
xor
loopne
mov
imul
arpl
mov
adc
cmpsl
add
add
daa
dec
jmp
mov
xor
adc
pop
daa
inc
test
mov
subl
xchg
or
les
or
mov
inc
pop
cmp
test
test
add
shlb
pop
dec
fmuls
rcrl
int3
add
jmp
popl
pop
and
dec
les
repnz
fnstsw
test
or
cmp
cmpsb
xor
jnp
and
push
jge
cmp
dec
add
adc
enter
xchg
rcr
cmp
or
adc
in
out
test
mov
inc
xchg
add
out
mov
loop
adc
outsb
sub
arpl
xor
adc
leave
sub
fidivrl
int
cmp
push
pop
push
leave
mov
les
sbb
jbe
mov
js
lods
add
cli
mov
jmp
pop
push
stc
ret
in
mov
pop
mov
lds
jno
jno
add
std
loopne
movsb
clc
icebp
xchg
jecxz
or
iret
shrb
add
fs
int3
add
testb
out
clc
aas
jp
and
or
fisubs
mov
jbe
add
sub
lds
adc
movsl
shrb
insl
sahf
daa
cwtl
cmp
pop
hlt
fcomp
push
xchg
jmp
inc
add
imul
testl
pop
sub
adc
fldcw
add
enter
shll
mov
nop
pop
xor
xchg
mov
xor
clc
add
sub
cmp
add
push
cmp
push
push
inc
sbb
cmp
xchg
and
mov
mov
and
mov
cmp
add
xor
int3
loopne
clc
or
add
addb
inc
jae
arpl
mov
adc
add
ds
inc
add
xor
sub
fwait
sbbb
or
sbb
jecxz
mov
push
push
call
enter
dec
nopl
push
repz
repnz
jo
xchg
xor
and
sub
inc
push
lock
add
lahf
out
and
js
insb
add
or
movswl
je
pop
or
adc
mov
mov
stos
and
jae
add
sbb
push
int3
loope
pop
jb
jno
je
call
test
mov
imul
push
mov
mov
xor
js
add
dec
gs
or
cmp
test
sub
bound
movsl
or
hlt
and
aad
sub
sti
jne
push
sahf
mov
out
dec
push
dec
pop
mov
add
xbegin
movsl
lret
jge
out
outsl
imul
mov
stos
call
fsubrs
repnz
stc
icebp
mov
inc
movsb
xor
lahf
mov
fisubrl
lcall
and
sbb
push
add
mov
stos
and
outsl
add
jno
add
loop
dec
fldcw
out
push
add
xchg
mov
xchg
inc
sub
fldcw
add
test
icebp
dec
pusha
enter
pop
xor
add
add
test
xor
leave
ficomps
jo
cltd
and
or
lock
mov
sub
and
sub
lds
nop
fidivrs
jae
push
loop
fnstenv
lea
pop
push
test
enter
js
mov
fstps
xchg
xor
lds
jns
imul
sbb
and
sbb
lods
out
sbb
loope
adc
das
aaa
cmp
and
add
ljmp
add
pop
cmpsb
cmp
ds
dec
rolb
xchg
jle
dec
mov
les
jmp
jle
cltd
inc
icebp
sbb
add
std
aaa
bound
int
ja
lcall
add
rolb
xchg
ljmp
and
sub
mov
jno
pop
cmpsl
and
std
and
popa
sbb
addb
xchg
popf
jg
ret
pop
mov
inc
in
fists
sbb
add
movsl
mov
jmp
stc
mov
sbb
or
lret
mov
sub
or
jle
jo
sahf
push
outsl
mov
js
ljmp
addr16
sbb
popf
or
adc
lret
pusha
jge
lcall
sub
sub
add
stc
adc
fadds
lods
loopne
in
int
mov
sbb
xor
lahf
sub
adc
je
push
or
sub
mov
lret
xor
cmpl
fldl
test
push
inc
xor
dec
lcall
and
dec
popa
daa
adc
jmp
fsubp
mov
clc
add
mov
lods
sti
inc
push
or
imul
xor
jns
mov
icebp
inc
pop
mov
les
roll
out
frstor
cmp
testl
xchg
insb
call
add
mov
sbbl
insb
sbb
ret
shrl
mov
xchg
or
daa
adc
aad
pop
test
pusha
in
cmp
ret
mov
lock
cmp
pop
mov
gs
and
pushf
add
and
jp
mov
mov
lea
or
mov
cwtl
mov
sub
popl
pop
aam
mov
mov
sub
movsb
scas
or
sbb
pop
xchg
imul
lahf
fidivl
fwait
imul
jmp
shlb
add
add
or
xchg
mov
ss
rcll
rclb
push
push
jmp
jecxz
mov
and
das
xor
push
mov
rcrb
int3
dec
sub
fs
push
fcoml
stos
fisubs
push
movsl
push
xchg
ficompl
jecxz
and
jo
xchg
add
adc
lahf
mov
add
mov
inc
and
jg
sub
enter
mov
fisttps
addr16
jle
testl
shll
mov
insb
idivb
xor
adc
flds
push
pop
cmp
stc
adc
inc
inc
pop
adc
add
insb
popf
xchg
nop
loope
cmc
jbe
push
mov
rep
fistl
shlb
cmp
xor
lret
mov
mov
pop
stos
cmpb
xchg
pop
adc
loopne
or
mov
and
add
mov
daa
div
data16
popa
push
push
push
loop
xor
adc
ret
aas
cmpsl
mov
popf
pop
nop
add
sub
dec
pop
mov
repnz
and
dec
mov
pop
dec
test
mov
lcall
fwait
push
mov
jbe
add
mov
pop
add
lods
mov
or
pop
call
fiadds
push
emms
insl
leave
loop
jge
xor
add
xchg
push
lret
adc
mov
dec
jl
pop
in
xchg
das
dec
gs
aaa
inc
imul
adc
cwtl
call
mov
mov
sub
mov
sub
int
aad
fidivrl
push
adc
dec
pusha
call
or
mov
movsl
push
bound
cmc
aam
nop
nop
loopne
sbbl
dec
scas
scas
sahf
leave
sub
into
xor
outsl
add
pop
xor
mov
cmp
movsl
sbbl
jg
faddl
sbb
out
popf
adc
push
pop
fidivrl
pop
aam
scas
fs
scas
xchg
sub
sub
xchg
pop
fwait
inc
xchg
cmpsb
roll
test
out
and
push
jl
fldl
bound
add
mov
mov
mov
lret
mov
pop
in
push
ret
add
stos
xchg
xor
pop
inc
and
shll
repnz
add
icebp
add
adc
adc
sbb
cs
cmp
add
xor
or
sub
xchg
mov
and
test
fstl
xchg
push
mov
mov
inc
jmp
xchg
inc
mov
aam
leave
pop
inc
sub
rorb
adcb
aaa
pusha
addr16
ss
dec
mov
and
dec
in
and
sbb
test
dec
cmc
dec
movsl
push
add
xor
adc
push
pop
outsb
jmp
jbe
pop
sti
sub
cmp
xchg
sub
icebp
insb
or
dec
add
or
pop
push
or
loop
movsb
pop
pop
mov
lea
in
jnp
cld
add
fsubl
pop
cmp
insb
shr
hlt
fs
sti
mov
push
xor
sub
mov
sub
mov
data16
lods
xor
pusha
rcll
sub
sub
jp
mov
ja
test
add
fs
or
fnstenv
lock
sbb
pop
xorb
in
xor
imul
cmp
or
rep
pop
sbbl
dec
sbb
pop
mov
add
mov
adc
dec
xchg
xor
cmp
jmp
repz
sbb
stos
inc
or
ss
imul
adc
clc
pop
loopne
dec
push
mov
hlt
add
or
jmp
jge
mov
sahf
js
nop
leave
out
sbb
sbb
mov
roll
call
cwtl
push
adc
js
mov
aam
leave
and
stc
sub
add
xchg
popa
or
stc
and
les
lods
adc
mov
and
xchg
rcr
aaa
sub
pop
data16
or
add
add
adc
adc
or
sub
enter
sbb
pop
pop
popf
push
rorl
test
mov
pushf
or
jno
inc
adc
les
stc
mov
and
sbb
inc
inc
clc
js
stos
or
lahf
ss
add
push
push
loopne
add
xchg
aaa
scas
add
xor
aam
test
xchg
pop
subb
mov
or
notl
insb
and
push
pop
popa
movsl
cmp
andb
xchg
jl
add
mov
xor
in
mov
stos
mov
adcb
and
fwait
aad
mov
add
loop
dec
jo
or
loopne
popf
sub
jns
push
add
nop
aad
js
push
sub
orb
scas
jl
fwait
and
rcr
cld
mov
mov
cmp
cs
push
sbb
sub
cwtl
xor
xlat
jg
fisubl
sbb
xchg
cmp
sub
enter
xchg
sub
cmpsl
jnp
add
frstors
sahf
or
fstps
les
pop
add
ret
mov
shll
nop
lods
mov
arpl
filds
popf
cld
mov
cli
addb
fldl
dec
xor
rcrb
leave
xor
fcmovne
and
mov
dec
dec
jp
mov
mov
repnz
lahf
insl
or
fs
sbb
sbb
mov
mov
sbb
push
push
add
daa
add
add
rol
sbb
xor
mov
pushl
push
stos
and
and
adc
int
or
pop
push
enter
les
sub
jl
pop
and
iret
push
pop
lods
push
pusha
mov
jmp
call
pop
inc
xchg
pop
es
into
xchg
inc
or
shrl
js
cmp
ret
sbbb
in
inc
popa
orl
or
fidivrl
jns
mov
pusha
xor
iret
popa
pop
test
clc
and
push
daa
lds
stc
sub
ss
push
xor
xchg
adc
movsb
push
jb
dec
mov
pop
push
ss
mov
push
lcall
adc
push
sbb
sbb
xor
lds
fildl
inc
and
adc
sbb
lret
test
popa
int
loopne
push
ficompl
aas
inc
add
insl
jge
adc
and
fstpl
add
iret
fmuls
pusha
xchg
mov
andb
sbb
adc
rclb
xchg
fiaddl
cwtl
pop
dec
fstl
sub
or
test
hlt
pop
add
xchg
loop
jmp
ss
mov
mov
xchg
pusha
cmc
scas
mov
sub
int3
call
xchg
stos
dec
sub
nop
dec
pop
fxch
inc
mov
test
std
mov
mov
mov
push
and
xchg
iret
fsts
and
aad
mov
and
xor
pop
sub
jnp
div
jp
push
xor
mov
add
hlt
add
xchg
cltd
dec
mov
pop
les
cmp
fwait
add
hlt
and
cltd
sbb
fbstp
mov
ret
pop
fmull
mov
push
and
mov
mov
outsb
out
xor
outsb
in
jo
and
xor
rclb
loop
push
adc
je
stc
sub
adcb
lock
popf
xchg
inc
adc
int
arpl
loope
inc
insb
xchg
inc
lcall
cmp
pop
nop
stc
das
or
iret
xlat
inc
lods
scas
xchg
dec
xorl
data16
add
sbb
lods
cmpsb
nop
lea
mov
mov
std
adc
test
xchg
sbb
adc
mov
adc
daa
int
add
in
imul
cmp
int3
repnz
pop
push
mov
pop
xchg
ljmp
add
lahf
and
xchg
cld
jecxz
sub
mov
dec
xor
mov
clc
inc
ss
stos
addr16
sbb
inc
sbb
pop
dec
sar
and
adcl
dec
mov
out
mov
pusha
sbb
or
test
mov
add
dec
loope
in
jg
dec
or
and
adc
mov
push
jmp
add
mov
pusha
test
xor
xchg
and
sub
fisubrl
xchg
movsl
cmpsb
and
ljmp
mov
mov
lcall
icebp
shrb
clc
loopne
add
popa
cmp
gs
mov
int
sbb
outsl
cs
dec
icebp
sub
add
sub
movsl
sub
sub
xor
scas
iret
mov
mov
inc
pop
aad
aas
push
inc
adc
icebp
mov
mov
sbb
rclb
test
mov
mov
xchg
out
mov
xor
or
push
xor
pop
xchg
push
xchg
and
insb
xor
icebp
pop
rcll
pop
fcmovnu
sub
outsb
mov
mov
test
mov
mov
call
or
test
xor
adc
or
add
outsl
sub
xor
push
push
pop
mov
jmp
stc
pop
or
adcl
rcll
push
adcl
or
jmp
popf
and
outsb
outsl
cmp
inc
cmp
int
shlb
div
out
pop
popa
lods
xchg
add
aaa
pop
mov
pop
and
push
dec
subb
or
and
dec
dec
scas
inc
mov
adc
sbb
xchg
or
in
sub
ficoms
cmp
mov
dec
test
mov
or
cmp
call
aad
cmp
mov
int3
xorb
aad
pop
mov
cmp
fucomp
rorl
mov
jo
pop
jno
adc
or
inc
mov
pop
cmp
and
es
add
popf
mov
cmp
xor
or
andl
mov
nop
ja
lcall
mov
stos
jmp
int
push
mov
cmc
cltd
imul
sub
adc
xchg
or
clc
vcvtss2si
inc
in
cwtl
pop
sbb
add
dec
cvtps2pd
rorb
sbb
test
jmp
fcomp
xchg
pushaw
jp
dec
adc
inc
jb
inc
sub
xor
movsl
subl
mov
mov
fsts
jle
xchg
aaa
fwait
add
xor
sbb
dec
add
sub
push
fcmovnbe
ret
fstpl
sbb
add
rcrb
out
xchg
mov
loopne
add
or
popf
adc
es
or
sub
add
cld
sub
call
fdivs
xchg
sub
and
sar
stc
mov
leave
push
mov
add
add
sbb
push
inc
sbb
pop
sub
inc
sub
fidivs
dec
and
adc
adc
jae
sub
jnp
call
add
push
push
fiadds
daa
sub
cmp
mov
mov
mov
xor
sub
xlat
mov
jae
push
daa
cmp
and
es
push
lods
or
in
adc
es
jne
icebp
add
loope
add
pop
mov
das
jp
dec
add
fstp
aas
or
mov
xchg
mov
mov
or
or
adc
in
jp
mov
push
in
jge
loop
dec
sbbl
sbb
ret
in
or
test
fsubrs
and
ss
cld
cld
add
add
shlb
adcb
pop
cwtl
or
insl
and
clc
and
xlat
adc
add
call
pop
mov
jmp
pop
xor
pop
pop
mov
mov
inc
mov
pop
mov
mov
mov
pop
loope
jae
sbb
cmpsb
push
sbb
dec
and
mov
pop
mov
fldcw
insl
int
ret
inc
or
rorb
lahf
mov
mov
jecxz
out
mov
jmp
jmp
sub
push
rcrl
out
lock
xchg
in
add
xor
sti
inc
add
aad
in
jg
push
and
mov
test
fists
andb
test
and
xchg
lcall
add
mov
mov
sbbb
xor
ljmp
stc
daa
adc
js
ficompl
xor
cmp
aam
add
mov
neg
cmpsb
movsl
gs
mov
cmp
push
cmp
jne
cld
testb
sub
xor
in
int3
mov
dec
insl
in
je
ja
outsb
mov
mov
je
jo
js
hlt
mov
subl
xor
add
mov
out
xchg
inc
dec
inc
jae
es
lds
dec
fisttpl
leave
mov
cmc
test
sahf
xchg
adc
mov
fldt
daa
mov
mov
lcall
xchg
add
xor
hlt
sbb
inc
push
or
nop
inc
lea
jmp
xor
xchg
sbb
ss
add
popf
sub
pop
stc
clc
xchg
adc
adcb
cli
and
sbb
dec
fmulp
inc
and
add
je
xorb
jne
lea
jmp
aam
jecxz
add
or
divl
pop
leave
xor
data16
fwait
data16
and
inc
dec
imul
jne
pusha
sub
pop
inc
mov
xchg
push
mov
add
fidivl
loope
push
test
insl
popf
add
add
imul
popa
add
mov
roll
call
pop
adc
aad
repnz
sub
mov
add
dec
push
gs
in
call
xchg
or
pop
adc
mov
sbb
push
js
or
fbld
add
adc
adc
and
mov
sub
fs
out
mov
loope
imul
lret
mov
inc
xor
push
fwait
push
add
sbb
cmp
imull
loopne
pop
pop
jmp
loop
dec
nop
and
dec
cmc
aam
popa
dec
int
sub
jg
daa
enter
adc
fwait
xor
in
dec
shll
adc
enter
fistps
add
jmp
clc
imul
adc
lahf
pop
mov
lahf
jno
bound
jmp
mov
xchg
push
je
pop
xchg
dec
repnz
adc
movntq
out
adc
cli
call
fisttps
fldl
lret
lret
add
fnstcw
adcb
xchg
add
xorb
xchg
rolb
pusha
in
dec
add
ficoml
jge
and
test
sbb
stos
addb
scas
or
xchg
fsubr
fidivs
ret
cmp
jno
sbb
add
push
mov
mov
imul
mov
adc
jmp
fs
aas
dec
sbbl
in
repnz
fiaddl
cmp
aad
push
xor
jns
pop
aam
mov
cmpsl
pop
loope
lcall
pop
test
inc
fidivs
jo
ljmp
adc
rcll
and
xor
das
xor
and
push
daa
xor
pop
add
push
pop
nop
popa
xchg
sub
rorb
add
hlt
daa
pop
nop
insl
xchg
lds
push
sbb
iret
insl
push
out
fwait
std
xorl
or
or
pop
push
aaa
fiadds
popa
andb
adc
add
dec
sub
lahf
popa
sbb
mov
loope
arpl
add
lock
loop
ret
adc
push
add
lahf
jo
out
testl
dec
out
roll
lds
cmpl
sub
sub
ljmp
pop
sar
js
shll
popa
xor
pop
jge
test
jmp
rol
iret
pop
rol
popf
inc
dec
inc
call
xchg
mov
dec
or
fisttpl
xor
gs
stos
pop
call
sub
mov
call
stos
std
xchg
lret
xchg
popf
nop
shl
cmp
sbb
ficoms
pushf
pop
insl
adc
xor
rcrw
adc
popf
push
sbb
mov
sbb
push
hlt
nop
pusha
mov
jb
push
cmpsb
jmp
shrl
add
fnstenv
fistpll
and
fwait
adc
mov
mov
jb
xchg
cmpsb
imul
mov
pushf
jmp
roll
daa
scas
xchg
adc
mov
pop
test
add
jmp
jbe
adc
mov
cmp
or
push
stos
or
cmpsl
enter
pop
fwait
call
lock
push
rcll
dec
sbb
xlat
adc
popf
mov
and
ficoms
sbb
orb
mov
adc
pusha
mov
lea
decl
sub
pop
loopne
notl
dec
mov
cmc
and
bnd
push
sar
mov
and
or
stc
js
popf
shrl
jns
pop
mov
and
popa
nop
cmc
fldt
pop
scas
jae
ucomiss
or
adc
xor
mov
popf
fsub
in
popf
or
xor
pop
mov
pop
jmp
mov
pop
mov
or
out
ss
dec
loope
adc
pop
mov
cmpsl
xor
pop
and
mov
cmp
aam
sub
jae
xchg
adc
sbb
push
add
sar
sbb
push
leave
or
std
sbb
adc
psllw
test
out
lahf
xchg
sbb
cmp
push
test
add
loope
fsubl
daa
mov
mov
xchg
xor
mov
mov
rcrl
or
jl
sbb
cmpsl
mov
pop
and
inc
xchg
cmp
ja
jl
outsb
je
xchg
push
idivl
popf
pop
inc
push
nop
popa
out
inc
in
sbbl
sbb
in
fucomi
shr
clc
sub
cmp
and
ljmp
daa
test
pop
add
orl
incl
shl
and
loope
ds
mov
ds
das
insb
dec
adc
push
loop
mov
fs
stc
mov
mov
xchg
aas
sbb
les
repz
add
pop
popw
mov
mov
adc
cld
iret
cmpsl
or
mov
sub
push
pop
mov
lock
mov
cmpsb
jno
mov
call
mov
cmp
adc
or
loopne
popa
je
inc
sbb
xchg
cmc
insb
bound
and
jmp
cwtl
shll
les
mov
scas
mov
pmulhw
mov
push
sub
ret
cmp
movsb
and
add
push
loope
mov
loopne
pusha
lods
cmpsb
mov
aad
shrl
xor
cmp
imul
scas
mov
add
jnp
in
cld
repnz
test
push
xchg
lcall
adc
leave
adc
das
inc
sub
scas
inc
lahf
inc
test
fcomps
loop
sbb
xchg
mov
push
pop
jge
add
outsl
pop
repz
or
test
pop
xor
and
cmp
add
mov
pop
cmp
cs
pop
ja
mov
and
cmp
mov
pop
mov
or
mov
loopne
test
sub
cs
lods
dec
test
xchg
xchg
pop
add
xchg
mov
cmpsl
mov
out
lcall
or
and
dec
test
fsubs
mov
pop
xchg
rcrb
and
add
cmp
fwait
add
sbb
cmp
mov
movsb
push
xor
mov
fstl
and
js
xor
loop
cmpsb
mov
add
ljmp
pop
adc
cmp
inc
add
roll
in
inc
adc
std
ss
push
push
leave
icebp
fsubrs
fisubrs
jg
or
inc
cmc
jns
test
xor
mov
fdivr
xchg
mov
push
push
cmpsl
sbb
outsb
out
loopne
popf
or
daa
and
cmp
and
popf
adc
ljmp
notl
pop
mov
push
jmp
cmpsl
cmp
cli
xchg
sub
and
ret
mov
mov
mov
rorb
adc
test
fidivs
and
pop
call
dec
in
cmp
int
jno
mov
adc
xor
sub
lock
jmp
call
daa
push
cmp
cmp
into
add
mov
mov
xchg
xorb
je
add
mov
and
sub
adc
into
xchg
and
pop
inc
mov
int3
testl
repnz
shrb
add
cmpsl
cwtl
cld
popf
and
dec
rcrl
and
lahf
shlb
ja
dec
mov
lods
rorl
add
push
adc
xor
mov
adc
cs
test
popa
stos
sub
lcall
jl
mov
movsb
push
cmp
in
mov
jae
lods
aaa
add
inc
repz
imull
pop
push
mov
add
es
ja
or
sub
pop
jnp
push
and
add
pop
sbbb
movsb
cmp
jns
add
mov
mov
mov
sbb
xor
jmp
and
push
aaa
cmp
inc
mov
fsts
pop
cltd
das
pop
in
insl
add
push
loope
repz
jne
outsl
and
aam
movsl
arpl
or
push
dec
sub
je
lods
jp
out
addr16
mov
xor
testb
outsl
xor
loope
sbb
add
add
mov
loope
sbb
mov
and
mov
jle
paddusw
insb
inc
std
ds
das
in
mov
daa
cmp
sbb
ljmp
add
sub
fiadds
repz
das
jae
sarb
or
lock
push
je
or
push
jno
dec
test
iret
add
xchg
test
mov
add
test
xor
adc
sub
fldl
sbb
dec
cmp
mov
sahf
orl
das
imul
add
sub
adc
lods
mov
fadds
mov
push
addb
mov
outsb
repz
jnp
jle
cmc
mov
das
outsb
fadds
divl
mov
in
lds
pop
adc
into
pop
int3
mov
jne
mov
in
and
mov
add
jecxz
inc
push
shlb
push
popa
adc
pop
imul
fidivl
imul
in
push
mov
dec
jle
xchg
xor
pop
sti
push
jo
add
ficompl
dec
push
add
lea
mov
nop
movsl
sbb
jbe
mov
add
mov
or
pusha
dec
repz
bound
add
xchg
xorb
push
fcoml
loop
add
daa
push
mov
and
nop
pusha
data16
cli
xor
loopne
push
pushl
data16
add
nop
aaa
lahf
push
sti
jg
les
popa
mull
dec
add
push
push
leave
cltd
add
bound
enter
lahf
lret
inc
dec
pop
outsb
add
out
addr16
arpl
xor
sbb
dec
fwait
mov
fdivrl
add
or
and
stos
mov
ljmp
or
popa
push
stos
and
push
add
mov
jle
sub
xorb
mov
mov
or
lods
add
mov
add
cmp
sub
cmc
std
push
faddp
ret
pop
pop
cmpsb
dec
and
and
sbb
cltd
push
ret
fdiv
pop
or
cmp
sti
sar
xor
push
pop
pop
cmp
idivl
xchg
push
movsl
pop
das
xor
mov
xor
lea
loop
push
and
pop
sub
xchg
jne
add
ss
mov
push
add
mov
or
push
pop
lahf
cwtl
divb
dec
ds
repnz
adc
add
xor
add
xchg
cmp
xlat
jb
and
ds
int
pusha
adcb
and
sbb
mov
push
cmp
js
imul
sahf
addr16
or
loopne
mov
pop
andb
dec
mov
and
ja
xor
stos
and
out
adc
loope
add
lock
jmp
fsubl
sbbl
imul
test
sbb
mov
outsl
js
mov
movsb
push
loop
xlat
andl
stc
and
daa
pop
jmp
in
pop
cmc
sbb
push
rcl
push
adc
dec
test
lcall
add
and
mov
xchg
lcall
push
push
popa
xchg
fucomi
cmp
test
mov
xchg
dec
out
enter
and
icebp
movsl
inc
pop
decb
push
jno
mul
cmp
dec
outsl
sahf
lods
xor
lds
std
test
adc
ljmp
int3
out
dec
test
sti
pop
loop
xor
pop
loope
push
mov
test
lock
inc
jns
jle
or
jg
ljmp
pop
rol
mov
cmc
fildl
lcall
dec
adc
repnz
xchg
push
pop
adc
push
add
data16
xchg
mov
xchg
sbb
pop
das
xor
mov
adc
scas
jne
add
lcall
or
sti
jp
popf
insl
enter
jns
dec
icebp
add
mov
test
cmp
ljmp
dec
ja
bswap
fdivrs
and
pop
orl
xor
cwtl
inc
je
or
dec
loope
and
or
pop
xor
add
lods
ret
cmp
add
dec
pop
addr16
jmp
push
imul
jns
inc
stos
add
ffreep
adc
gs
dec
cs
movsb
mov
mov
jns
pop
lock
pop
inc
jecxz
inc
das
jp
lcall
cltd
dec
cmpb
mov
sti
mov
lahf
dec
mov
mov
stos
sub
sub
sub
lock
mov
push
fs
in
push
cwtl
jo
or
cld
scas
dec
int
adc
pop
add
pop
mov
int3
pop
add
push
rcll
mov
clc
or
xchg
jge
je
jb
in
dec
add
add
pop
xchg
dec
push
xor
pop
pop
mov
jmp
cmpsb
jl
mov
or
scas
xor
and
mov
and
int
lcall
dec
push
pop
shrb
sbb
mov
movsb
pop
push
jo
orl
leave
and
mov
add
jge
xchg
mov
jle
or
in
clc
bound
lods
or
loopne
jae
popl
popf
xor
xor
test
mov
mov
cmp
enter
lock
pop
sbb
adc
test
adc
repz
add
mov
scas
jp
jnp
xor
fstpt
rolb
mov
xor
sbb
into
sub
mov
xchg
ljmp
pop
mov
das
pop
push
lret
add
jns
adc
lods
push
pop
out
fmulp
sbb
popa
lds
add
xchg
inc
mov
xor
rclb
xor
xor
mov
fnsave
pop
popf
and
sbb
xchg
and
js
push
inc
mov
arpl
xor
mov
xchg
scas
and
test
mov
das
inc
lods
jg
dec
icebp
les
das
or
stc
dec
or
hlt
daa
mov
test
clc
cmc
enter
pop
imul
lea
adc
mov
push
hlt
jmp
nop
jecxz
testb
mov
jecxz
bound
aad
add
div
in
pusha
mov
pop
pop
loopne
andb
mov
xchg
xchg
scas
xor
or
pop
and
std
xchg
mov
cmpsl
shl
sub
mov
mov
mov
push
or
popf
mov
sbb
outsb
idivl
xor
cmp
jmp
aaa
repnz
dec
sub
orl
movsl
push
add
or
push
xchg
daa
sub
je
aam
add
lock
adc
inc
and
jb
loop
shrb
inc
daa
sbb
push
add
in
daa
push
into
and
sbb
pusha
mov
and
cmp
mov
sbb
xchg
fists
daa
inc
push
or
lea
out
mov
pop
lahf
imul
test
syscall
xchg
xor
aam
out
pop
inc
cli
fistl
jg
lahf
arpl
pop
xlat
add
inc
push
cmp
inc
dec
pop
jmp
mov
ret
inc
lock
cld
nop
loopne
fstps
dec
fstpl
imulb
sbb
mov
popf
cmp
notl
test
and
imulb
stos
repz
lds
ret
std
ljmp
sub
lcall
xchg
je
add
popf
jne
pop
xlat
in
mov
add
loopne
dec
dec
sti
aaa
and
iret
xchg
dec
sbb
xchg
or
aad
add
cld
lahf
fisubs
shlb
int
das
jne
adc
les
movsl
push
loop
into
add
int3
xchg
pop
cmp
in
pop
add
bound
mov
cmpsb
push
mov
lret
or
pop
movsl
aas
cmp
pop
push
mov
into
or
jbe
push
add
and
inc
cmpsb
adc
xor
jg
cld
movsb
inc
paddw
fidivs
mov
sahf
adc
pop
mov
cld
xchg
out
test
pop
jge
incl
nop
mov
int
mov
popf
and
dec
pusha
xor
sar
nop
bound
pusha
xor
lcall
shll
adc
mov
push
gs
push
rcrb
lret
adc
add
jg
cmp
xchg
gs
sub
push
xchg
cmp
pop
adcb
add
add
add
cmp
push
mov
cld
frstor
pop
cmc
sbb
test
xor
jecxz
dec
fldenv
pop
adc
mov
cs
or
in
add
leave
dec
iret
cmpsl
enter
shll
xchg
mov
add
jge
and
fs
mov
fidivrl
outsb
jle
xchg
mov
enter
add
sbb
filds
fisttpll
lcall
add
mov
pop
sub
cmp
cs
push
sbb
out
sub
sarl
adc
or
mov
das
stos
rorb
rcr
fimull
and
mov
adc
or
sbb
lods
ret
or
push
or
xlat
add
xor
xorb
inc
push
pop
dec
pop
out
pop
xchg
shll
mov
xchg
push
out
adc
and
add
mov
or
mov
add
push
mov
or
shr
mov
mov
mov
push
nop
sub
fmull
nop
pop
pushf
repnz
sbb
mov
jo
mov
sbb
push
shlb
rclb
aam
jnp
add
lahf
aaa
xchg
mov
shrl
loopne
cmpsb
and
addr16
pop
cmpb
hlt
loop
sub
lds
cwtl
notl
adc
xor
insl
sbb
mov
addr16
adc
aas
jne
mov
lds
stos
je
dec
or
lods
inc
cli
xchg
add
dec
inc
adc
pop
adc
ds
popf
or
fidivl
cwtl
enter
adc
aas
ret
dec
xchg
cmp
shr
insl
test
or
and
adc
popf
jno
sub
std
cmp
xchg
dec
sti
stc
add
mov
mov
inc
push
xorb
or
pop
or
in
jp
pusha
call
adc
xchg
add
push
push
in
pop
je
pusha
xor
adc
sub
sbb
sti
ja
xchg
rorb
sub
xor
addb
and
fs
lret
mov
add
rcr
mov
inc
mov
sbb
mov
add
hlt
pop
ljmp
aad
shll
cmp
outsl
imul
shlb
imul
addb
or
cmpsl
out
pop
adc
xchg
lcall
stc
in
add
in
test
ljmp
aad
es
and
or
dec
insb
clc
cs
js
mov
adcl
xchg
mov
xlat
push
clc
popf
push
fistps
add
popf
test
or
mov
push
xor
enter
pop
popa
sar
jmp
sub
into
xchg
add
push
bound
sahf
ret
sub
and
xor
clc
pop
cmp
imul
sbb
cmp
mov
dec
cli
xor
add
iret
fadd
je
inc
and
insl
orb
dec
or
or
xchg
adc
adc
outsl
dec
arpl
mov
stos
lcall
mov
fildll
pusha
aam
mov
push
repnz
int
xor
loope
stc
adc
cli
stc
mov
or
jo
mov
cmp
sub
add
ret
dec
cmpsb
adc
call
testb
or
mov
add
xchg
cmp
popf
in
cltd
leave
cmc
add
mov
iret
or
in
in
arpl
movsb
stos
cltd
mov
mov
xchg
in
daa
and
pop
scas
pop
inc
sub
sbb
adc
push
jno
pusha
cld
test
out
outsb
cmp
mov
das
fsubrs
sbb
fcomi
add
pop
repz
sub
lcall
pop
fadd
enter
daa
ret
mov
lret
cmp
or
stc
stc
inc
sub
lret
add
push
in
sub
cmp
sub
or
push
or
mov
mov
fsubs
enter
mov
adc
sbb
scas
outsb
add
inc
push
cmp
out
push
lea
roll
movsl
movsb
add
loope
mov
daa
cmp
inc
adc
call
andl
mov
insb
xor
popf
js
inc
adc
lds
int
loopne
and
push
aad
push
add
mov
test
push
xor
mov
fdivrl
shrb
in
call
add
mov
mov
jo
xchg
xchg
dec
int
shrb
adc
hlt
and
aam
ret
xchg
lcall
out
mov
mov
cmp
mov
add
cmc
cmp
pop
cwtl
clc
mov
cmp
jmp
add
sub
mov
mov
movsb
sub
and
xor
mov
dec
daa
push
push
inc
push
pop
pop
push
call
cs
cmp
pusha
mov
mov
sti
add
std
push
xchg
int
iret
add
inc
lahf
add
sbb
sbb
aad
cli
addb
sahf
out
push
daa
cmp
add
mov
xchg
fucomip
push
into
in
aas
cltd
movsl
and
divl
jl
sub
pop
sub
cmpsl
xlat
mov
jnp
add
rolb
test
jb
or
inc
shrb
into
int
cmp
mov
repz
sbb
cmc
test
add
cli
arpl
cmp
rorb
popa
jmp
fisttpl
testb
lcall
cmp
jbe
das
mov
inc
lock
xor
out
adc
jg
cmp
mov
test
movsb
scas
cmp
mov
insb
popf
jg
jns
mov
xchg
sbb
enter
clc
mov
outsl
xor
into
clc
cmc
js
mov
aas
mov
push
sbb
inc
jle
into
pushf
les
mov
cmpsb
call
xor
outsb
loopne
push
push
cmp
sub
dec
dec
push
adc
lret
bound
inc
xchg
push
and
xchg
and
pusha
and
insb
add
cmp
and
xchg
jbe
inc
adc
cmp
imul
cmp
mov
or
add
jecxz
int3
insl
orb
insl
lea
pop
ja
dec
faddl
lret
lahf
cwtl
test
cmp
mov
in
insb
xchg
mov
lock
negb
shll
jno
xchg
adcl
add
test
movsb
lret
repz
jno
es
hlt
mov
xchg
je
movzwl
cld
cmp
es
cmp
sub
pop
and
or
mov
mov
push
adc
outsl
xchg
out
loopne
sub
pop
out
popa
in
loop
insl
loope
cli
xor
mov
fcompl
outsl
mov
add
lcall
fstl
cwtl
loop
or
ficompl
bound
test
inc
add
mov
mov
and
jmp
mov
add
and
and
int
cmp
cs
or
pop
outsl
loopne
mov
push
sub
dec
test
adc
xor
shlb
popa
add
and
mov
mov
adc
lods
sbb
loope
test
subb
sub
loop
int3
push
pop
loopne
sbb
push
dec
aad
dec
and
cmp
xor
ss
cld
pop
in
pop
shr
xor
inc
int
dec
push
pop
jbe
outsl
cmpsl
fcoms
dec
lahf
es
jmp
jecxz
lret
xor
clc
hlt
les
sbb
sbb
in
or
mov
mov
push
cmovge
out
ss
add
cmp
and
add
lock
lock
test
clc
js
cmp
daa
in
outsb
shll
mov
fiadds
cmpl
icebp
popa
or
mov
inc
or
mov
rorb
mov
outsb
xor
lahf
push
cmp
shr
mov
mov
repz
das
xchg
sbb
xchg
sub
aas
int
jo
dec
add
pusha
xor
test
test
rclb
push
dec
mov
out
xor
push
std
movsb
mov
repnz
pushf
xchg
xchg
repnz
jnp
jno
xlat
jb
lret
les
adc
sub
push
lock
cmc
and
lea
add
cmc
dec
pop
fst
jmp
mov
sbb
popf
int3
push
push
mov
xchg
shl
outsb
sbb
dec
or
sbb
adc
mov
adc
xor
xor
dec
outsb
subb
icebp
push
xchg
call
inc
xchg
out
in
pusha
and
sbb
fmuls
push
xchg
mov
mov
and
mov
das
sahf
sub
sbb
cmp
js
jmp
in
add
pop
mov
lock
aad
ret
mov
and
mov
test
add
repz
cmpsb
inc
jge
xor
xchg
mov
mov
call
fildl
or
sbb
mov
es
add
add
or
mov
fwait
pusha
push
cmp
sbb
andb
pop
ret
xchg
jno
sbb
cmp
xorl
add
cltd
ss
mov
pop
add
dec
pop
lcall
roll
mov
outsl
jb
nop
pushf
mov
cmpsb
sub
cs
test
daa
ret
test
or
ret
adc
scas
cwtl
xlat
mov
movsb
jnp
pop
shll
stc
hlt
out
loop
cmp
iret
add
lret
mov
adc
mov
dec
xchg
data16
cmpsb
pop
or
sti
in
add
mul
mov
adc
popf
daa
flds
cltd
inc
or
aam
push
test
jbe
inc
std
sbb
fiadds
push
xor
mov
add
popa
inc
jae
cmp
dec
mov
add
dec
mov
mov
sub
mov
and
pop
test
add
lods
and
cmp
setb
cwtl
in
mov
cmp
inc
and
pop
fldl
pop
fdivs
les
nop
add
arpl
es
xor
lahf
cmp
add
stc
dec
outsb
push
fbstp
jae
outsb
and
hlt
push
daa
jns
imul
inc
push
or
out
fs
hlt
dec
sub
nop
xchg
cmpl
push
jecxz
jmp
jle
push
sub
inc
pop
popf
sbb
pushf
pop
aam
aas
mov
push
push
dec
cmpb
imul
dec
jo
mov
cs
sub
sub
mov
mov
ss
negl
jle
jae
adc
jno
int
pop
mov
inc
sub
sbb
xchg
fs
push
test
mov
clc
xchg
xor
adc
mov
push
gs
xor
in
scas
xchg
pop
pop
pop
cltd
std
add
jne
test
mov
sub
mov
imul
mov
shlb
stc
push
test
sub
or
push
inc
pop
adc
addb
imul
sub
arpl
adc
push
popl
ss
js
loopne
xor
pop
pushf
mov
and
cld
and
roll
ljmp
mov
clc
inc
dec
and
inc
sbb
xor
arpl
xor
mov
enter
inc
and
test
mov
push
mov
mov
rclb
les
std
arpl
sbb
cmpsb
and
outsb
push
sbb
hlt
cld
in
jge
test
nop
push
call
and
cmp
sub
dec
pop
cld
sub
adc
loop
pop
mov
lahf
push
movsb
push
xchg
bound
in
add
decb
xorb
sahf
sub
xor
fiaddl
adc
sub
movsl
pop
push
cmp
js
fildll
enter
xchg
cwtl
adc
dec
in
ret
jb
sbb
lret
pop
shlb
call
sub
or
stos
push
add
test
das
sub
movl
or
pop
mov
pusha
daa
mov
sbb
mov
dec
test
cmp
iret
or
jns
pushf
add
adc
sbb
xor
arpl
lods
call
jne
ss
in
jno
scas
es
loopne
and
dec
lret
lahf
add
cmp
add
mov
pusha
repz
jnp
push
mov
mov
xchg
mov
fisttpl
adc
or
movsb
and
negl
inc
cmpsl
jl
leave
jns
cmpsb
sub
push
adc
das
lods
push
cmp
stc
sti
bound
pop
push
dec
push
and
sub
mov
mov
scas
and
mov
cmp
adc
mov
test
mov
loop
or
aas
shlb
or
hlt
pop
push
push
push
std
xchg
adc
jg
out
add
rdtsc
sub
xor
xchg
outsl
outsb
add
aam
adc
dec
out
pop
lcall
in
push
jg
out
add
cli
sub
fiaddl
adc
or
jecxz
and
xor
mov
fdivl
mov
mov
cli
test
add
movsl
mov
ljmp
sub
inc
add
aaa
xor
imul
testl
into
clc
stos
rcrb
or
mov
adc
arpl
pop
add
aaa
int
ret
add
lret
and
or
push
push
test
xchg
xchg
jbe
popa
push
dec
lock
in
pop
pop
das
mov
and
add
push
pusha
push
sub
pop
jns
mov
popf
push
inc
lods
mov
adc
mov
dec
inc
pop
or
daa
xor
imul
jno
mov
fcmovnbe
xchg
sbb
pop
xor
push
add
sbb
cmovs
ret
ss
add
pop
mov
loopne
and
loopne
xchg
andb
sbb
cld
mov
add
inc
and
in
cmp
popa
movsl
cmc
fnsetpm(287
fsts
sbb
xor
js
scas
cmp
adc
jo
mov
adc
jbe
jle
ret
sbb
add
mov
cmp
daa
add
int3
sub
lret
pushw
and
in
mov
jge
stos
mov
jns
xchg
outsb
jp
push
arpl
out
pop
decb
pop
push
scas
lret
jne
dec
nop
js
pop
hlt
js
dec
add
pop
pop
mov
push
lock
fbstp
fcoms
push
test
sub
fmulp
popf
dec
and
and
fisubl
push
mov
jb
push
mov
or
cmpl
paddsw
hlt
pop
pushf
test
jae
ljmp
push
cmp
and
das
lock
sbb
sbb
outsb
mov
aad
cli
pop
dec
repz
cmc
pop
pusha
push
adc
ja
push
nop
xchg
and
xor
icebp
xchg
add
mov
cltd
pop
dec
out
dec
push
adc
push
repz
pop
cmp
dec
cmp
call
mov
lea
lds
fadd
popf
icebp
pop
imul
xchg
push
push
or
push
pop
fsts
xor
scas
fisubrl
pop
shlb
mov
dec
pop
xor
adc
les
mov
in
sbbb
test
mov
lock
mov
stos
daa
push
pop
sbb
xchg
xchg
dec
push
jp
jge
fldenv
pop
cmc
xor
lods
test
add
inc
gs
inc
in
fistps
pushf
repz
pop
movsb
js
inc
fists
mov
xor
jno
xor
fnstsw
fwait
cmp
test
imul
fnsave
repnz
sbb
add
xchg
push
shlb
xchg
nop
cli
pop
bnd
popa
pop
outsb
les
mov
pop
or
jb
or
in
push
mov
mov
cld
test
pop
test
jb
call
add
xchg
mov
or
mov
xor
sbb
pop
rcrb
outsb
insl
mov
enter
push
or
or
sbb
add
sub
and
pop
jno
bound
xorb
dec
js
mull
adc
cmp
adc
push
outsl
loop
or
fdivrp
imul
jl
sbb
sub
xchg
fisttpl
push
fwait
sbb
in
inc
es
mov
hlt
sub
arpl
pop
sub
lahf
addb
mov
leave
pop
push
test
sub
or
inc
xchg
jne
mov
mov
in
das
test
test
rorb
dec
add
insl
test
push
fnclex
daa
xchg
sub
adc
or
mov
les
or
push
sub
les
nop
push
in
js
or
fs
fdiv
nop
xchg
jns
push
push
decl
popf
shll
jbe
sarb
and
jno
and
outsb
fldt
mov
rolb
cmp
lret
and
push
loop
add
std
dec
inc
popf
lock
add
mov
xchg
aam
les
mov
xchg
rolb
cmpsb
lret
sbb
mov
popf
int
stc
dec
pop
cmpsl
decl
mov
pusha
arpl
gs
and
enter
addr16
and
and
aaa
adc
adc
gs
rol
mov
rcll
loope
adc
jo
repnz
mov
push
cmp
or
ljmp
or
cmpsl
pop
and
loop
add
inc
out
movsb
or
pop
sub
push
and
inc
sub
pusha
push
stc
and
pop
std
shl
sbb
lds
sub
loope
xor
pop
mov
fnstcw
stos
mov
int
jg
daa
add
mov
loopne
mov
sbbl
rcll
pusha
pop
xchg
sub
js
push
lods
stos
pop
sbb
rorl
pop
ret
push
stc
add
lahf
mov
push
ds
rcrb
jno
pop
mov
pop
shll
xchg
inc
sub
xchg
push
or
mov
andl
sbb
xchg
xchg
adcl
sbb
dec
outsb
sbb
mov
rcrb
pusha
mov
dec
mov
cmp
adc
jne
cld
mov
out
outsl
outsb
test
stos
clc
push
xor
sbb
mov
pop
mov
shrb
aas
sub
repnz
loop
mov
fistl
pop
mov
mov
mov
mov
mov
adc
lahf
shll
cmpsl
adc
mov
pop
shll
test
lahf
or
mov
das
and
cmp
mov
and
adc
or
lret
movsb
dec
jmp
mov
xadd
mov
sbb
hlt
imul
sub
daa
notb
cmpsb
mov
lock
inc
push
lea
lds
dec
xchg
out
cs
or
or
lds
aas
std
popf
cmp
mov
xchg
popa
add
rol
or
lds
sub
cmp
jmp
pushf
inc
jl
mov
in
pushf
ret
fisttpll
push
fmull
popf
and
imul
mov
fisttpl
pop
ficompl
adc
scas
cwtl
push
mov
sub
jl
push
or
lods
inc
cld
imul
and
fstpl
in
jb
mov
out
xchg
add
icebp
shrb
push
dec
xor
sub
cwtl
add
adc
ss
jp
sub
mov
sub
mov
bound
or
cltd
lock
add
or
popf
dec
out
dec
std
adc
adc
jmp
push
scas
je
inc
test
sub
add
stos
es
push
jp
jbe
cmp
mov
fisubl
dec
lea
jl
and
sub
add
in
mov
add
mov
or
push
pop
or
outsb
daa
jbe
add
dec
mov
xchg
stos
int3
ret
mov
mov
jo
jae
stos
pop
jns
mov
jae
shl
lods
shll
adc
jmp
add
push
movsb
pop
dec
or
mov
mov
popa
xchg
rcll
xchg
lea
pmaddwd
insl
add
push
cmc
movsb
cmp
mov
adc
pop
mov
xor
add
in
mov
xor
pop
outsb
add
imul
inc
shlb
test
add
lea
jl
mov
push
xchg
push
loopne
idiv
mov
adc
fisubs
loope
das
xorb
push
cmp
arpl
and
popa
popf
adc
popa
push
je
jg
out
dec
xor
cmp
push
and
add
loope
rcrb
movsb
and
jmp
js
mov
icebp
and
subb
mov
mov
xor
mov
aad
cmp
sahf
add
jne
or
arpl
adc
dec
repnz
mov
mov
addr16
adc
testl
sub
and
inc
push
add
jmp
or
sub
cmp
ret
add
adcl
jg
pop
mov
xchg
push
mov
fcoml
test
test
sub
aad
imull
adc
mov
jmp
fwait
add
gs
or
adc
mov
mov
jge
and
mov
mov
jb
mov
dec
add
nop
out
push
mov
xchg
fdivrl
add
negl
icebp
mov
testb
mov
cmp
popa
push
mov
mov
ds
imul
cmpsl
xchg
ljmp
xor
lods
adc
aam
and
clc
lea
add
loopne
add
cltd
mov
jcxz
pop
les
mov
mov
cwtl
out
je
cmp
imul
add
test
stos
mov
mov
push
push
sub
push
xlat
lcall
shlb
hlt
add
push
cmp
inc
xor
dec
stos
jbe
xchg
repz
repz
pop
out
xchg
mov
and
pop
in
pop
mov
adc
sub
push
cli
xchg
cmp
pop
xor
add
movsb
gs
pusha
cmp
cmpl
ljmp
mov
or
movb
push
insb
jns
push
pop
jnp
lahf
mov
fwait
incb
pop
jns
jbe
test
xchg
jecxz
dec
fdivl
dec
or
icebp
rorb
sti
jge
mov
xor
jo
mov
add
ja
idivl
add
lods
xor
xor
fistl
or
das
add
xor
push
das
imul
mov
sbb
repz
mov
pop
mov
add
lds
mov
ljmp
testb
cmp
sub
push
test
test
add
mov
jl
or
jmp
inc
or
sub
ds
cmp
lods
mov
mov
sub
movsl
and
or
fdivs
add
mov
jae
push
std
and
mov
pusha
sbb
mov
add
mov
sti
jnp
add
add
jle
sbb
and
stc
mov
mov
push
mov
lahf
mov
out
std
add
call
sbb
cli
adc
jbe
mov
insl
arpl
add
fsubrl
or
jnp
add
and
lea
outsb
sub
fs
daa
mov
fisttpl
test
fimull
call
pushf
add
pop
popa
fisttpl
repz
push
mov
mov
mov
dec
test
adc
and
push
sub
cwtl
sbb
repnz
test
add
popa
fstpl
mov
lds
and
pop
jnp
cmpsl
dec
pop
inc
leave
nop
pop
or
push
fnstenv
lock
mov
outsl
xor
dec
pop
inc
sbb
enter
rcll
fisttpll
loop
pop
sbb
dec
sub
push
or
mov
test
out
dec
xlat
std
mov
addl
loop
pop
dec
ret
and
add
jns
add
pusha
mov
inc
imul
push
inc
adc
push
push
cmp
push
xor
cld
xchg
mov
or
lcall
mov
call
sub
out
sbb
in
dec
lret
add
loope
movsl
push
push
aam
or
xor
add
test
cmp
test
cs
jbe
test
enter
sbb
stos
add
mov
inc
in
push
push
lods
jle
ss
xchg
xor
test
add
mov
jp
daa
jbe
lds
and
pusha
and
mov
daa
push
fwait
cld
mov
pop
dec
andb
sub
insb
or
nop
cwtl
pop
pop
popf
notb
je
add
dec
scas
lret
or
xchg
adc
and
inc
inc
adc
push
mov
mov
pop
cwtl
loope
inc
jns
and
negb
sahf
adc
scas
push
or
pop
mov
es
add
mov
repnz
out
cmpsb
inc
movsl
or
fwait
add
xorl
mov
fcomip
or
shlb
sub
dec
pusha
rclb
jle
inc
adc
pop
jbe
shrb
loopne
movsl
or
dec
xchg
loopne
sbb
sub
adc
daa
xor
jnp
pop
dec
shrb
sub
mov
shl
out
add
mov
jae
test
jecxz
aaa
xchg
pusha
ficompl
sbb
push
bound
push
iret
bound
pop
call
jmp
js
and
fsubs
and
mov
mov
hlt
shl
add
test
loopne
sub
outsb
int
jnp
push
mov
shll
fsubl
int3
sub
into
jno
cli
enter
fistps
pop
xorl
and
sub
mov
enter
xor
or
inc
xchg
or
and
in
push
stos
idivb
sub
popf
and
or
add
fcmovb
push
dec
pushf
mov
pushw
lret
pusha
fwait
mov
pushf
jg
decl
test
push
enter
inc
sbb
mov
lahf
imul
aad
push
or
jp
and
add
add
inc
ja
jae
ja
xor
arpl
jns
imul
out
clc
push
movq
popa
ja
cli
xchg
adc
lock
pop
loope
ffree
scas
negb
pushf
xchg
push
bound
adc
pop
push
repz
adc
iret
imul
add
test
and
and
rorb
es
jecxz
xor
neg
adc
push
and
rcrl
xchg
adc
xchg
cltd
cmp
mov
int
outsb
mov
add
pop
jge
sub
dec
test
cmc
push
pusha
enter
call
inc
xor
push
cld
cmpsl
cmc
inc
cmp
cmpl
imul
jns
cmpsb
push
mov
mov
add
and
mov
test
stos
jnp
jnp
push
push
add
test
cmp
fadd
adc
or
lea
cmc
popf
sti
jl
cmp
pop
je
push
adc
xlat
comiss
jbe
jnp
pop
sbb
push
pop
imul
pop
mov
dec
add
inc
popa
insb
mov
jbe
mov
cmc
repnz
jge,pt
or
lsl
add
jge
dec
jb
xchg
icebp
cmp
outsl
popf
arpl
inc
sub
push
jb
mov
filds
push
xchg
mov
cmp
cmp
xor
sti
pusha
mov
pusha
jecxz
sti
xor
aam
in
and
pop
test
shr
push
test
test
mov
mov
rcrl
push
inc
movsl
pop
pop
sbb
mov
inc
stc
add
pusha
pop
cwtl
cmpsl
test
ss
cld
vorps
mov
pop
addr16
add
sub
xor
popf
xor
call
or
test
faddl
pushl
fiadds
aaa
xchg
nop
cmp
mov
pusha
sbb
pop
in
xchg
push
or
rcr
mov
lret
push
add
mov
nop
or
daa
jmp
or
cmp
sbb
enter
pusha
divb
aad
testb
cmc
or
test
mov
lock
sbb
notl
fldl
fisubs
sbb
add
mov
xchg
mov
push
ror
mov
int3
push
pop
push
xchg
jle
test
sub
fildll
clc
popa
jmp
rclb
test
mov
mov
dec
xchg
scas
xor
xchg
jne
or
movsb
jmp
stos
rcrl
aas
pop
jle
xchg
loopne
push
call
dec
push
arpl
mov
pop
pop
jmp
pop
pop
ficoms
int3
fstpt
add
jge
scas
fldt
enter
push
dec
enter
in
or
jg
rorl
fsubrp
jb
cmp
test
adc
mov
cwtl
jecxz
dec
test
jmp
test
push
fwait
or
mov
adc
repnz
and
add
mov
faddp
dec
bound
mov
mov
pop
jl
aam
out
push
ds
stos
lcall
in
clc
mov
mov
loopne
jecxz
sbb
xorb
xchg
pop
inc
push
imul
repnz
jl
xor
xchg
adc
pushf
test
add
xchg
xchg
daa
mul
dec
leave
dec
mov
std
dec
adc
jg
outsb
mov
pop
cmc
movsl
and
pop
into
cmpsb
adc
mov
adc
adc
pop
daa
xchg
pop
movsb
jo
faddl
call
mov
sub
orb
fldl
cli
cmpsl
sub
cmpb
in
push
js
popa
daa
pop
pushf
lret
or
pop
dec
sub
jno
arpl
setne
cwtl
lea
jne
popf
inc
sbb
sub
mov
rcl
pop
xlat
lcall
mov
call
cmp
add
les
leave
lock
xchg
pop
mov
jbe
aam
xor
mov
rorb
repz
rcrb
sub
orl
add
mov
push
push
jmp
outsl
jg
xchg
sbb
stos
xorb
xor
inc
and
add
ret
ret
aad
jecxz
mov
push
add
in
je
push
inc
das
in
and
cmp
xchg
aam
xor
and
pop
mov
aad
or
cmpsb
aas
pop
pop
add
shll
je
leave
dec
sbb
cmp
push
sub
inc
scas
adc
pop
lock
sub
dec
shlb
push
das
data16
xchg
xor
in
fisttps
test
cmpsb
jecxz
cs
cld
xor
lods
xchg
mov
jge
or
add
cli
repnz
jo
jnp
andb
test
dec
fstps
leave
cwtl
aaa
loope
add
mov
mov
mov
sub
pusha
and
xchg
ss
cmpsb
pusha
lret
pop
mov
add
xor
add
xchg
outsl
sar
mov
lahf
add
dec
add
mov
add
in
add
jecxz
mov
or
xor
lcall
mov
scas
xor
fs
add
push
lret
test
js
in
inc
cmc
push
popf
fisubrs
xlat
add
fidivrl
leave
les
jmp
es
inc
xchg
leave
adc
inc
cmp
pop
fisubrs
jp
sbb
mov
cmp
fdivrs
push
xchg
repz
das
int3
popf
add
and
xor
das
test
cmc
mov
mov
adc
mov
mov
pop
orl
int
outsb
lret
sbb
jge
pop
inc
insb
popa
and
or
jl
add
sub
mov
or
xchg
sub
repnz
addl
pushf
stos
or
pop
int
dec
aas
loopne
pop
fimuls
adc
pop
ret
xor
cmp
lea
sbb
sahf
aam
jg
sbb
or
adc
flds
mull
or
insb
inc
inc
inc
outsl
or
sbb
sbb
push
mov
pop
pop
sbb
lock
xor
add
fidivl
mov
fidivrl
fs
dec
aaa
inc
sarl
dec
out
or
sub
rcrl
ja
mov
sbb
xchg
dec
and
xchg
fidivs
orb
jp
sbb
jne
inc
mov
int3
push
and
and
enter
cmp
movsl
pop
int3
or
inc
icebp
add
mov
imul
add
add
push
jecxz
jmp
rorl
aaa
dec
add
cmc
add
inc
push
imull
icebp
and
or
mov
arpl
ds
add
mov
or
andb
sub
xchg
daa
insl
add
jge
mov
dec
fadds
mov
movsb
ljmp
test
cmp
xchg
push
or
mov
pop
mov
dec
lock
call
lods
or
lea
es
popf
mov
lods
les
mov
popa
popa
cld
cmpsl
rolb
dec
sbb
mov
call
insl
in
test
jl
sbb
dec
sub
push
mov
das
pop
pusha
push
mov
mov
mov
shlb
and
inc
jg
add
pop
dec
movsl
push
jbe
inc
xor
in
pop
les
inc
imul
cmp
mov
sti
in
pusha
xchg
push
cmp
popa
insb
lcall
fiadds
aaa
lret
and
lahf
das
pop
aas
sbb
mov
popf
xchg
mov
mov
mov
sbb
sub
jg
mov
loop
add
and
inc
mov
dec
out
mov
xchg
push
and
jno
popf
mov
xchg
sbb
add
repz
aam
test
mov
cmp
mov
inc
add
jns
mov
rcrl
loopne
xchg
pop
pusha
daa
inc
xchg
sbb
dec
fadd
fimuls
out
outsb
add
aad
pop
mov
inc
add
les
and
add
pop
rorb
pop
dec
in
add
das
cmp
daa
push
popf
mov
in
insb
sub
lds
pop
cmp
mov
xchg
dec
xor
add
pop
movsb
mov
or
xchg
mov
sub
movsl
xchg
scas
enter
int3
cmpsl
clc
dec
cld
add
imul
and
sbb
arpl
call
test
push
incl
cmp
movsb
inc
xor
and
inc
adcl
loop
xchg
fmuls
addr16
or
int3
fidivrl
int3
or
sub
iret
dec
cli
popa
je
xor
sub
ljmp
les
cli
fstl
test
fisubs
cld
lds
sub
xchg
jge
js
pushf
mov
push
lea
in
mov
lcall
lods
daa
mov
dec
mov
pop
icebp
add
mov
fucom
pop
daa
aam
push
or
push
daa
aam
out
jmp
out
pusha
sbb
mov
add
iret
push
mulb
out
pushf
mov
into
xchg
fistl
adc
pop
push
and
addl
add
push
rorb
js
xchg
mov
jo
addb
jno
inc
ret
pop
push
lret
or
movsl
mov
jmp
or
out
add
mov
mov
inc
xor
dec
mov
mov
fwait
imul
lret
mov
mov
out
ljmp
mov
in
mov
popf
add
nop
lcall
xchg
xchg
push
dec
dec
jnp
add
lcall
repz
pushf
into
iret
rorb
pop
popf
rcl
mov
adcb
repz
and
scas
je
decb
lret
into
mov
pop
lret
mov
dec
add
movb
rorl
add
addr16
inc
and
pop
popf
pushf
and
xchg
cmove
fcoml
pop
add
mov
fstpt
xchg
or
rcll
or
xorl
repz
adc
testl
sub
push
add
xor
jp
mov
testb
das
stos
shl
cltd
or
shll
xchg
xor
jnp
xchg
cmc
je
jmp
fcompl
add
int
icebp
jg
mov
pop
orb
clc
rolb
pop
mov
dec
jmp
shll
cmp
or
jno
in
jge
dec
lock
or
test
sbb
call
mov
sbb
enter
inc
ljmp
lret
inc
outsb
dec
pushf
and
xor
push
fildl
iret
pop
and
sbb
add
jle
jl
scas
cmp
lods
mov
cmpsb
fcomps
les
mov
pop
sub
add
push
fcoml
hlt
mov
mov
add
jg
cs
lcall
adc
mov
jl
adc
loope
insb
xchg
xchg
jmp
mov
rcrl
dec
les
or
sbb
ficoms
cwtl
ret
push
addb
lret
jmp
das
lahf
pushf
adc
mov
and
push
fwait
out
out
jnp
mov
sbb
jp
inc
addb
mov
movswl
adc
mov
jmp
push
sarb
imul
jle
cmp
imul
jmp
je
test
jg
adc
popf
fwait
cmpsb
push
cli
sbbl
loope
sahf
sbb
mov
in
dec
xchg
imul
fldenv
hlt
pop
push
jmp
sbb
leave
lret
sbb
fcompl
test
xor
sarl
or
sbb
mov
push
push
les
mov
std
or
pop
sub
sub
pop
pusha
bnd
or
jg
sub
and
pop
mov
mov
add
scas
int3
adc
mov
nop
data16
push
pusha
add
dec
jo
call
or
or
xlat
cs
or
jo
fisubs
fsubrp
xor
jns
dec
stc
fadds
cwtl
popf
data16
sub
jmp
lods
stos
aad
insl
xor
sub
clc
or
push
jne
repz
loop
int
loopne
into
xor
sub
add
jns
ds
stos
int3
gs
add
lret
xadd
nop
sub
jge
adc
push
mov
add
test
sti
xchg
xor
xor
cmp
ja
mov
mov
je
rcrl
cmc
lods
mov
insl
sarb
xor
add
xchg
stc
pop
mov
add
popf
or
jge
push
adc
cmp
jg
push
pop
cmp
mov
mov
push
add
mov
repnz
je
lret
and
cmpsl
xchg
fcoms
pop
push
and
js
or
adc
mov
jl
jne
pop
nop
jp
addl
jl
push
sti
inc
and
mov
roll
xlat
cmp
lds
push
xor
pop
jle
pop
jmp
test
dec
in
cmp
stos
mov
outsb
mov
in
pop
add
sub
adc
mov
cmp
ja
sub
fnstenv
pop
pusha
inc
jb
ss
rcll
push
addl
adc
aaa
or
sub
xor
movsb
jg
hlt
rorl
ja
mov
lret
mov
stc
inc
sbb
push
add
dec
int3
popa
out
jo
in
sbb
dec
adcb
jne
mov
push
xchg
or
inc
add
and
adc
cmp
pop
jb
sub
jne
push
insb
test
add
sub
cmc
in
shll
dec
cltd
push
jmp
and
adc
repz
sub
jge
mov
sahf
sub
cmpsb
dec
xchg
or
loope
stos
inc
xchg
inc
sub
movsl
enter
lahf
mov
mov
pop
jne
mov
and
rcll
test
inc
sub
adc
not
adc
lods
jmp
ljmp
insl
pop
loopne
movsl
imul
or
adc
es
out
outsl
xchg
mov
mov
push
fwait
add
or
pop
xchg
jecxz
orl
xchg
fcompl
test
dec
fnstenv
and
pand
sbb
fisttpl
push
mov
xor
sub
mov
mov
add
mov
icebp
movsl
in
inc
inc
pop
int
clc
adc
sbb
inc
or
shrl
call
mov
or
roll
sub
out
pop
aam
mov
shrl
cmpsl
fsubs
xchg
or
mov
gs
fisubrl
and
jnp
repz
sbb
orb
icebp
and
std
adc
mov
inc
sub
jl
outsl
inc
dec
sub
adc
mov
loope
outsb
mov
add
call
xor
xchg
repnz
in
loopew
adc
icebp
imul
xchg
lcall
aaa
xlat
lahf
add
sub
out
cmpsb
push
dec
out
and
mov
jnp
inc
push
pop
add
cmp
add
add
loop
and
xor
je
stos
popa
cld
lahf
or
jo
add
dec
sahf
aad
mov
loopne
stc
xchg
shrl
out
leave
or
and
xor
shrl
out
xchg
sbb
inc
lods
jnp
xchg
lcall
loope
inc
dec
addl
fldcw
subl
insl
xor
sub
orb
test
aad
mov
inc
cld
cmp
pop
mov
xorb
sub
jb
mov
jmp
jb
add
fadd
push
dec
mov
subb
shr
sub
int
push
push
lret
add
xchg
push
mov
pop
test
add
adc
bound
rcrb
fcomps
xchg
and
sahf
loope
mov
movsb
sti
repz
out
pop
test
rolb
add
push
sahf
or
shl
or
cmp
xchg
mov
add
or
cmpsb
sahf
daa
add
push
inc
push
inc
mov
mov
mov
stc
fdivr
cs
mov
or
sahf
jmp
add
fcomp
add
loopne
popf
or
fsubrl
adc
mov
mov
xor
lea
push
adc
pop
pop
lock
int
fs
pusha
adc
test
dec
les
outsb
sub
jae
jne
pushf
xor
pop
inc
pusha
fcmovnu
and
fsts
push
sbb
icebp
popa
cwtl
mov
pusha
xchg
mov
add
and
dec
push
shrb
xor
mov
lcall
xchg
fistl
stos
adc
rcrl
sbb
jmp
or
cli
adc
out
cltd
push
add
fidivrs
outsb
and
sbb
mov
xchg
pushl
lock
fldcw
add
call
outsb
bound
push
and
cltd
clc
leave
adc
inc
xor
aad
rcll
pop
pop
push
jo
loopne
sbb
lock
int
popf
mov
jge
in
add
shll
addl
add
aaa
add
je
js
sbb
jg
jecxz
je
jae
mov
pop
cmp
leave
test
xor
mov
mov
mov
sbb
sub
sub
mov
jns
shlb
imul
out
mov
push
mov
xchg
inc
aam
mov
mov
sub
mov
ss
fwait
mov
in
call
arpl
add
jnp
mov
sti
pop
imull
scas
cld
fisttpl
add
iret
add
adc
test
pslld
daa
xor
ja
jmp
cmc
sub
sub
mov
outsb
out
xlat
push
add
mov
cmp
fcomps
sahf
mov
dec
add
or
cmp
pop
sub
cmpsl
xchg
insl
test
popa
mov
adc
mov
add
sbb
mov
mov
loop
leave
add
sti
rcrb
rcrl
test
sbb
cmpb
testb
pop
adc
sar
data16
jecxz
inc
cmc
mov
cli
popf
or
add
jmp
fisttps
add
scas
fnstsw
xchg
stos
xlat
je
push
mov
xor
pusha
mov
roll
add
ss
jmp
add
add
inc
sub
and
mov
sub
cs
fstps
xorb
mov
add
leave
ret
mov
lods
sbb
inc
xor
sub
jp
add
cmpsb
add
add
cmp
lock
ja
mov
xorl
mov
xchg
xlat
xor
push
xor
insl
ss
cmp
and
in
test
les
push
out
xor
out
mov
adc
add
push
cwtl
lahf
xchg
pusha
std
icebp
mov
or
mov
or
add
jne
arpl
daa
pusha
mov
sub
jl
fiadds
dec
sbb
loope
leave
orl
jle
pusha
in
psubusb
movsl
mov
and
les
xchg
xchg
adcb
push
sbb
mov
imul
dec
push
mov
je
inc
sbb
adc
xchg
in
pop
fcmovu
fdiv
cmp
dec
cli
insb
cmp
dec
clc
sbb
out
fcoms
das
fcmovb
repz
outsb
or
inc
addl
xchg
ss
or
jle
aaa
inc
daa
fdivr
push
inc
sbbb
out
in
iret
or
sub
sbb
lods
pusha
mov
jbe
pusha
sbb
outsb
popa
xor
pop
or
cmpsl
addl
push
stc
adc
daa
dec
in
mov
xor
push
xor
cmp
mov
dec
sbb
push
lret
jae
cmpsl
pop
xchg
mov
push
stos
mov
sub
aad
push
loop
faddp
cmp
stc
mov
xchg
cld
mov
jo
adc
xchg
adc
pushl
shll
call
and
adc
fisttpll
std
aaa
mov
nop
add
push
icebp
jp
fwait
pusha
cwtl
andl
mov
dec
nop
arpl
xor
push
pop
call
push
enter
mov
leave
cmp
sbb
cld
mov
pop
jns
popa
inc
cmp
cmp
out
fbld
bound
push
aad
or
cmp
xor
dec
and
push
sub
cmp
pop
xlat
pop
sti
dec
repnz
movsl
icebp
test
jae
and
into
and
mov
aam
mov
adc
icebp
add
push
sbb
mov
test
jb
push
dec
pop
scas
sbbl
add
add
dec
push
inc
ljmp
add
jle
pop
jnp
adc
lret
lret
cli
testl
adc
out
adcl
or
in
pop
mov
add
xchg
ds
add
push
ret
fsts
lock
pop
sub
or
mov
movsl
das
add
mov
leave
push
js
aas
or
cld
mov
mov
shr
insb
add
push
mov
add
gs
xor
or
or
dec
das
sbb
xchg
add
mov
out
lods
mov
out
sbb
mov
popf
and
adc
mov
divb
mov
mov
mov
adc
xchg
mov
fsubrl
rcrb
data16
xchg
sub
mov
loopne
out
sti
add
mov
popf
int
push
add
mov
mov
out
mov
pop
sar
lret
push
test
out
mov
or
add
sahf
out
cmpsb
and
fs
nop
movsl
call
mov
jns
jp
push
aam
sbb
outsb
mov
cmp
mov
in
movzwl
inc
mov
mov
dec
lds
insl
in
xor
sahf
ja
fcmove
imul
lahf
fxam
xchg
jmp
jge
loop
push
xor
aaa
lods
adc
xor
push
and
rcrb
jmp
xor
push
adc
mov
add
xchg
int
clc
mov
add
sub
cs
jo
ffree
mov
ss
hlt
das
aaa
dec
aas
subl
fsubr
adc
inc
jns
fcomip
jne
flds
mov
mov
addb
xor
shl
add
push
or
mov
aad
andl
pop
inc
push
or
or
sbb
idiv
jp
push
inc
dec
mov
pop
add
adc
add
pop
ljmp
cwtl
pop
pusha
mov
dec
pop
inc
jge
fimull
add
adc
add
jecxz
shrb
add
rclb
notl
andl
add
ret
mov
cwtl
mov
jg
sbb
clc
jmp
pop
lea
jg
push
mov
push
mov
jmp
call
push
dec
pop
pop
stos
pusha
enter
cmc
cmpb
subb
call
jg
pusha
imul
pop
add
cmp
xor
jno
lods
subb
pop
jno
or
icebp
imul
mov
jno
test
ret
add
sbb
ror
test
sub
jecxz
lods
push
jmp
mov
dec
mov
popf
mov
aad
inc
xchg
stos
popf
sbb
xchg
push
mov
push
enter
loopne
or
in
movsl
xchg
scas
sub
xchg
cmp
mov
mov
and
add
adc
pop
dec
fidivrl
subl
cwtl
adc
stos
inc
fcompl
xor
outsb
test
jg
cmpsb
dec
aam
dec
pusha
xor
or
lods
add
and
add
sbb
sub
ljmp
cld
mov
icebp
add
gs
nop
js
pop
pushf
mov
ljmp
cmp
pusha
mov
dec
clc
loop
popa
int
loopne
and
loopne
mov
sbb
js
lcall
dec
xchg
mov
jne
pop
xchg
mov
repnz
pop
sub
ficomps
xor
movsb
addb
pop
pop
lods
iret
scas
mov
mov
ljmp
ss
je
leave
add
mov
test
and
lods
aam
pop
pop
out
repnz
mov
lret
es
cmp
adc
pushf
mov
mov
jno
cmpsb
fildl
or
mov
pop
cmp
pop
insb
dec
pop
cld
pusha
pop
cltd
push
push
dec
push
mov
in
mov
xchg
xlat
mov
movl
outsb
out
mov
xorl
lods
push
fdivr
add
loopne
jmp
sbb
mov
shrb
push
adc
pop
xchg
sbb
add
loope
in
int3
fldt
push
mov
ret
imul
daa
sub
pushf
ret
jnp
pop
out
pop
xchg
mov
fisubs
xor
dec
push
aaa
and
in
sub
scas
xor
push
jge
mov
jge
and
neg
cmp
cmpsl
and
clc
sub
cmc
sbb
pop
push
insl
andb
xor
adc
clc
mov
or
lods
push
xchg
mov
add
ss
pop
mov
and
bound
cmp
repnz
pop
mov
addl
sub
popf
inc
dec
dec
rcrb
icebp
hlt
int
bswap
cmp
in
cmp
out
jle
and
scas
push
movsl
out
sub
in
sti
adc
mov
mov
mov
nop
je
jno
mov
stos
out
inc
jecxz
add
mov
jne
sbb
ret
lcall
enter
mov
adc
dec
add
or
add
dec
repz
int
push
test
loopne
fidivrs
js
xchg
repnz
inc
fisttps
out
popf
add
sbb
fcmovnb
pop
sbb
in
bound
test
outsl
sahf
lahf
sarb
push
mov
sbb
pop
add
mov
mov
sbb
add
pop
testb
mov
inc
sbb
outsb
cmp
aad
jno
mov
mov
inc
bound
mov
stos
inc
pop
nop
cmpsl
mov
push
gs
ljmp
clc
cmp
sbb
enter
mov
out
test
add
or
aaa
and
popf
ret
mov
popf
adc
xchg
mov
ss
add
gs
push
je
push
pop
dec
pop
sbb
cmp
cwtl
or
mov
insb
and
fmull
inc
jne
hlt
ret
ficomps
or
mov
xor
addr16
loopne
fldt
bound
jne
push
push
and
inc
mov
outsl
cwtl
add
inc
xor
loope
cli
lret
rcll
out
dec
lea
mov
jns
sahf
sbb
pop
stos
cmp
ret
adc
out
addb
mov
adc
in
inc
sbb
es
int
dec
sbbl
mov
mov
and
sbb
popa
adc
jno
out
push
roll
ss
loope
xor
adc
xchg
and
int
pusha
mov
mov
in
or
add
xor
mov
rcl
mov
jne
shl
lcall
push
mov
add
add
loopne
and
call
sub
sub
mov
fmuls
adc
pusha
sti
mov
push
xor
and
dec
in
rorb
or
adc
xchg
xchg
sti
cmc
pop
sbb
jle
pop
dec
das
or
repz
in
movl
jmp
loopne
loope
ja
push
and
arpl
je
mov
test
mov
rcrl
or
adc
mov
inc
inc
push
jnp
cmpsl
mov
adcb
sub
aad
xchg
xchg
out
insl
adc
mov
push
cmp
loopne
add
push
dec
adc
je
xor
in
lahf
or
and
mov
and
test
out
push
mov
add
sbb
pop
in
jno
and
roll
jmp
std
xchg
adc
lea
mov
movb
jecxz
adc
pop
add
out
or
mov
add
sub
sbb
lods
and
repnz
jg
js
leave
pop
sbb
cmp
lock
ret
mov
and
inc
dec
mov
push
mov
sbb
mov
mov
adc
lds
dec
sahf
pop
sub
sbb
sub
arpl
xor
bound
pop
push
mov
stos
xor
mov
pop
cmp
mov
jno
fcomps
popf
iret
jno
cmp
lods
daa
mov
mov
mov
out
mov
fdivr
test
shrb
jmp
adc
outsl
mov
addr16
insb
fwait
dec
xor
xor
add
add
pop
popa
cld
pop
jo
mov
mov
lock
out
sub
mov
daa
or
cwtl
in
in
and
mov
and
aas
mov
test
or
std
movsb
cli
push
add
sub
lahf
lea
sbb
dec
pop
mov
dec
fnsave
das
push
add
test
add
pop
mov
fcomps
faddl
push
cmp
pop
rorb
shll
sbb
sbb
adc
dec
dec
dec
stos
outsb
fwait
pop
sti
mov
aas
adc
cmpsb
or
je
fld
mov
pop
mov
lea
inc
or
inc
push
jmp
dec
loopne,pn
jmp
les
jge
add
jno
jb
or
add
push
jae
jle
add
shll
adc
dec
mov
out
mov
jb
rorl
jae
jo
mov
xor
mov
adc
aas
cmpsb
jae
pop
movb
and
dec
dec
shrb
fcoms
push
push
das
ficomps
mov
sub
xchg
mov
xor
adc
and
push
mov
push
stos
enter
jne
mov
fdivrs
inc
stos
dec
dec
andb
adcb
ja
xchg
mov
mov
in
negb
sub
mov
push
xchg
and
mov
dec
mov
jg
and
xchg
jo
jecxz
into
add
fldcw
jecxz
sub
gs
mov
les
add
mov
cmove
iret
into
cmp
mov
mov
popa
sti
into
push
jge
push
add
mov
xchg
or
adc
lcall
cmpsb
scas
shlb
pop
in
push
loope
mov
jbe
test
aas
pop
xor
loopne
les
lock
sub
cmpb
shl
movl
aad
sub
jne
pop
adc
jno
push
cmp
mov
test
add
lds
outsb
test
rolb
rclb
and
rorb
cmpsl
aas
repz
decb
add
mov
repz
jecxz
mov
push
add
push
jge
xor
jp
jl
imul
in
shll
gs
mov
fisttps
mov
adc
rcrl
add
inc
sub
jnp
hlt
std
rorb
pop
es
mov
sub
xchg
mov
xchg
sbb
jno
int
mov
aad
nop
pusha
mov
pop
pop
test
sarb
and
cmc
jle
adc
sbb
xchg
cmp
jnp
movsb
lods
call
mov
call
inc
mov
and
adc
cmp
lret
mov
xor
mov
pusha
rorb
fs
mov
xchg
adc
xchg
popa
mov
sbb
add
int
loopne
and
cld
popf
xchg
or
pop
sub
popf
xchg
int
in
pusha
jns
stos
add
rcrl
das
lods
push
int3
iret
pop
hlt
jne
add
out
add
stos
push
int3
fdivrs
lret
dec
fnstcw
cld
mov
hlt
add
xchg
add
mov
loop
dec
inc
stos
sub
xor
std
sub
movsl
and
mov
xor
je
aam
pop
add
push
sarb
hlt
inc
imul
test
adc
enter
or
push
cltd
add
push
push
jns
xor
jmp
gs
push
leave
sti
sahf
sbb
pop
pop
cmp
or
dec
imul
jo
pusha
stc
test
or
mov
add
ret
push
jo
xchg
mov
mov
pop
ficoms
pop
xchg
xchg
rol
jecxz
test
mulb
test
dec
ja
xchg
pop
lea
sub
and
sbb
into
pop
inc
cmpl
mov
mov
push
sti
dec
xor
pop
inc
mov
aas
jmp
ds
add
push
lods
mov
loop
mov
cmp
or
scas
adcb
sbb
jbe
push
fisubrs
call
xor
or
xchg
test
ss
rorl
or
ret
xchg
jl
add
mov
add
push
jecxz
dec
cmp
push
mov
cwtl
test
add
cmc
aaa
push
or
clc
popa
std
sbb
add
repz
xlat
cmpsb
leave
iret
test
insl
sub
and
outsl
xor
adc
out
mov
mov
out
xlat
push
dec
scas
and
mov
jnp
mov
cwtl
and
fistpll
mov
pop
les
dec
jne
lcall
popf
push
mov
mov
xor
and
xchg
xchg
sahf
dec
fsubrs
mov
sub
jns
dec
faddl
xor
lcall
daa
push
mov
out
into
nop
out
dec
xorb
in
add
aas
xchg
pop
push
mov
xacquire
outsb
mov
aad
lods
add
fdiv
jmp
popa
cmp
pushf
add
mov
fs
je
inc
push
add
push
sub
dec
ffree
push
mov
cwtl
shll
in
mov
movsl
out
cmpsb
sub
xchg
loopne
popl
and
pop
sbb
into
push
push
orl
aam
lret
lods
adc
pop
dec
add
or
call
leave
sti
jns
dec
shrb
rcrl
pusha
jg
xchg
jo
dec
js
lods
push
jl
add
dec
or
mov
stc
xor
cld
xchg
icebp
roll
cmc
add
jge
ret
xchg
inc
sbb
cmpsl
in
in
shlb
push
push
push
add
cmp
push
orl
push
pusha
mov
push
or
jnp
adc
aaa
add
shll
mov
sbbb
dec
or
mov
adc
insl
xor
fwait
dec
xor
add
lods
pusha
aaa
xlat
jg,pt
and
push
ret
push
add
and
mov
push
and
pop
mov
js
xchg
pop
push
mov
mov
xchg
sbb
jmp
push
arpl
sbb
xchg
test
jmp
jb
int
rcrb
xor
loope
aaa
aas
shll
adc
mov
and
inc
pop
insl
pop
cs
mov
popa
push
push
in
push
and
imul
add
in
testl
fmul
clc
pop
xchg
pop
pop
add
xchg
pop
lea
sti
dec
mov
gs
cmp
fistl
popf
push
and
sub
and
mov
sbb
sub
push
lds
pusha
xchg
mov
dec
push
cli
dec
sub
add
and
sub
add
push
inc
or
mov
mov
and
fidivrl
sub
dec
mov
popf
bound
and
or
mov
int
ss
or
shlb
push
adc
shlb
xchg
repz
xor
cmp
or
fs
das
test
lahf
add
dec
rorl
push
mov
cld
sub
enter
test
loopne
and
add
push
pusha
add
ficoms
and
mov
fcoml
gs
jg
dec
outsb
inc
lahf
loope
sub
and
cld
nop
loop
cmc
sbb
lret
test
push
mov
sub
aaa
adc
pop
sub
addb
mov
out
nop
aam
test
pusha
sahf
jne
lcall
xor
sti
mov
or
les
cmp
adc
js
sbb
jle
outsl
and
icebp
xchg
inc
comiss
into
adc
xchg
clc
and
add
dec
sbb
rcll
sub
mov
data16
inc
and
outsb
and
xchg
mov
xchg
pop
cli
mov
cmp
nop
pushf
add
sbb
mov
or
jg
jns
inc
aaa
stos
fisubrs
jmp
loopne
push
inc
xchg
xchg
test
int3
mov
pushf
test
popf
ljmp
and
add
mov
das
add
outsb
mov
push
xchg
jge
xchg
sbb
mov
mov
scas
and
sub
xchg
or
je
add
push
scas
repnz
jb
jne
sti
loope
pop
jno
sub
addl
mov
adc
xchg
pop
inc
lods
push
pop
mov
daa
mov
adc
outsb
xlat
add
push
stc
pop
adc
jbe
xchg
jnp
cmpsl
pop
mov
and
mov
lock
xchg
cmp
mov
cmp
jmp
jns
outsb
add
pop
cmp
out
and
mov
add
mov
negl
sbb
jbe
jmp
sbb
mov
lea
add
and
add
xchg
sub
cld
shl
popf
ret
popf
lcall
outsl
pop
mov
sarb
dec
test
aam
mov
add
xlat
or
sub
cli
mov
pop
and
jl
inc
add
lds
ret
cmp
add
insb
rolb
xor
clc
push
xlat
test
pop
mov
inc
sub
das
mov
pop
mov
dec
leave
push
call
xor
dec
roll
hlt
test
jbe
and
adc
cmp
mov
out
insb
xchg
scas
mov
cwtl
adc
ds
push
pusha
jle
shll
and
mov
pop
adc
inc
push
ret
xor
cmpsb
hlt
in
mov
jp
ret
adc
popa
xchg
ret
rorb
lock
jns
or
nop
inc
push
xor
cli
cmpsl
aam
mov
push
jmp
pop
sbb
frstor
inc
xlat
sbb
ljmp
and
xchg
mov
icebp
push
sbb
daa
fdivl
push
mov
pop
hlt
add
pushf
nop
xchg
mov
and
repnz
cmc
les
sub
iret
jl
mov
std
adc
adc
cmc
stc
out
pop
movsb
push
jle
sub
cs
or
push
enter
in
imul
nop
pop
ret
iret
inc
add
mov
inc
mov
stos
add
mov
cli
lret
out
cmpsb
adc
xor
push
popf
mov
and
add
fcomps
xchg
orb
sbb
push
repnz
mov
jle
xchg
cmp
pop
cmp
and
mov
ljmp
mov
lods
addr16
out
lds
mov
cmpl
push
sub
add
or
addr16
xor
incl
dec
mov
lret
mov
and
lock
mov
add
or
add
or
rcll
mov
gs
jle
dec
lods
xor
ficomps
rolb
pop
rclb
pop
cwtl
out
ds
hlt
push
mov
rolb
push
icebp
inc
jmp
pushf
mov
adc
xchg
adc
mov
mov
mov
mov
pop
stos
adc
or
jmp
mov
pop
imul
xchg
push
out
pusha
dec
clc
or
pop
mov
or
cltd
sub
aam
fcmovu
pop
sub
adc
sbb
popf
push
or
add
xlat
dec
add
adc
xor
outsl
test
adc
in
cli
nop
nop
popf
dec
and
imul
push
flds
test
shr
xor
cmp
clc
test
cmp
popa
mov
pop
mov
jg
cld
adc
mov
push
lock
pop
or
std
lock
gs
ds
mov
std
insl
dec
gs
pop
and
xchg
mov
xor
out
loop,pn
inc
pop
sbb
pop
cmpsl
jp
sbb
inc
xor
and
divb
scas
aam
xchg
xor
movsl
adc
dec
push
add
clc
dec
scas
xchg
adc
rcrl
aad
test
das
dec
lret
mov
jae
fbstp
cmp
xchg
or
imul
ret
and
rcr
mov
xor
mov
test
push
add
adc
cs
mov
daa
in
add
dec
cmp
jmp
jae
rclb
lock
adc
add
lods
fwait
cmpb
xor
adc
cld
popa
lcall
mov
daa
add
sti
or
loop
clc
lcall
scas
or
jne
sbb
insb
add
add
mov
xchg
push
mov
add
sarb
push
aaa
mov
xor
and
dec
mov
daa
popa
jne
mov
cwtl
ja
lahf
stc
jns
adc
lret
nop
or
and
mov
push
hlt
add
pop
jmp
xchg
add
dec
clc
mov
mov
lret
rolb
fwait
dec
rolb
mov
cmp
and
popf
pop
dec
pop
cld
xchg
leave
xchg
push
adc
add
loope
lcall
pop
aaa
xor
inc
add
push
enter
adc
adc
jmp
mov
xor
jg
int
mulb
test
mov
adcl
ds
xlat
daa
mov
cmpsl
xorb
or
aad
xchg
repz
and
insl
cmpb
xlat
fsubl
mov
popa
mov
jle
pusha
fs
adc
ret
and
les
push
cmpsl
call
mov
mov
mov
pop
fcomip
push
imul
icebp
push
imul
xor
sub
sbbb
in
dec
call
je
test
jo
dec
push
sarl
jle
mov
sbb
and
sub
add
js
push
sbb
fs
fnstsw
jno
je
imul
and
fwait
mov
jbe
test
cmp
add
jo
popf
and
mov
js
outsl
sbb
xchg
cltd
negl
in
add
and
mov
decl
inc
pop
out
add
cmp
xchg
jne
mov
mov
or
jns
xor
push
push
scas
or
ja
je
push
jmp
mov
daa
rorl
aam
clc
adc
push
and
mov
sar
push
cmp
test
jle
fsubp
test
mov
push
test
loopne
inc
dec
test
lods
cmp
xor
scas
pop
fcmovne
push
sub
lcall
lods
pop
hlt
xchg
pop
push
es
ret
jnp
cmp
add
dec
sbb
xor
std
mov
mov
dec
pop
outsl
mov
and
lock
fs
adc
xchg
cmp
lcall
fisttps
bound
nop
sub
jge
sbb
fwait
adc
pop
mov
je
and
in
adc
or
cmpsb
xchg
loop
pop
sub
pop
nop
stos
pop
sar
adc
push
and
lea
pop
fimull
and
dec
in
pop
inc
xchg
push
aam
stos
mov
paddusb
js
add
add
in
das
mov
dec
jecxz
mov
rsqrtps
addb
and
movsl
mov
mov
mov
xchg
inc
mull
jns
jb
mov
imul
jbe
or
fdivr
cmc
fbstp
stc
add
add
repnz
cmp
mov
mov
mull
mov
rcll
xchg
imul
loope
out
in
pop
test
test
movsl
push
insl
mov
mov
hlt
pop
push
mov
ret
fsub
inc
daa
push
mov
shlb
and
add
jl
jge
mov
jns
cmp
dec
les
sub
mov
pushf
sahf
adc
pop
repnz
mov
xor
mov
or
adc
pusha
int
rclb
jno
jecxz
lods
lds
mov
loope
sub
xor
sub
add
add
mov
mov
sbb
mull
lods
cli
mov
js
addb
enter
cld
scas
in
addl
rcrl
and
add
sbbl
sub
dec
pop
scas
sub
mov
jno
lods
xchg
cmp
outsl
pushf
out
test
sub
jge
fs
filds
pop
popf
or
rorb
add
cmp
push
mov
nop
imul
add
cwtl
ret
fcompl
sbbl
lcall
cmp
stos
cld
or
std
lods
jle
jle
push
or
into
cmp
sbb
lcall
jb
add
rclw
jmp
or
mov
ds
stos
cli
add
xchg
and
das
jb
mov
add
cli
jmp
sbb
xor
mov
adc
fistpl
js
repz
mov
jecxz
lock
stc
mov
popf
imul
outsb
sub
in
insl
in
adc
sub
das
adc
xchg
ljmp
popa
or
xor
jbe
adc
out
xor
mov
jecxz
incl
shrl
movb
mov
push
xlat
inc
adcl
aad
pop
mov
arpl
push
lea
out
sub
cmp
cs
std
in
js
addl
cmp
mov
or
inc
sub
push
sub
shll
jg
mov
inc
push
aas
add
repz
sbb
sub
mov
mov
mov
mov
or
test
dec
test
mov
iret
sbb
push
daa
pop
jne
mov
scas
sbb
cltd
pop
mov
nop
adc
sbb
add
iret
xor
insl
adc
pop
xchg
push
add
jns
sub
stos
add
jnp
fmull
shl
enter
xchg
push
add
pop
xchg
jb
ss
scas
dec
add
push
inc
pushf
stos
jmp
adc
repnz
shlb
mov
enter
outsl
pop
xorl
jbe
push
loop
xlat
cmp
adc
les
add
in
cld
mov
adc
loope
jp
or
rol
xchg
fdivrl
xchg
test
pop
in
pushf
mov
push
add
loopne
sbb
popf
sbb
adc
xorb
std
mov
rclb
mov
pop
gs
rorb
cmc
and
or
push
push
sti
mov
aam
inc
addb
es
add
lea
sti
sub
into
pop
mov
in
cmp
push
outsb
std
test
int
test
and
jecxz
test
sub
adc
loopne
add
adc
push
push
pop
mov
and
pop
test
mov
fildll
or
sahf
jle
fdivs
lds
mov
xor
lret
or
popf
leave
cmp
cmp
pusha
push
xchg
mov
mov
jns
aas
or
add
iret
dec
lds
push
mov
xchg
jo
cmc
shl
outsl
mov
leave
dec
and
pop
xchg
dec
xchg
mov
push
push
loopne
ljmp
xor
adc
in
or
mov
xchg
sub
xor
jo
adc
add
gs
mov
pop
out
jae
leave
push
rolb
mov
xorl
out
daa
add
mov
out
call
shr
pop
lods
das
dec
mov
add
outsl
popf
and
stos
dec
pop
mov
fisttpl
pop
mov
cli
sub
lahf
cmp
jne
dec
mov
outsl
into
or
push
stc
sbb
rcrb
dec
aam
loop
repz
pop
inc
and
cwtl
or
mov
pop
cld
and
mov
cld
mov
and
mov
sbb
push
pop
inc
cmp
mov
xor
call
lods
cmp
popa
push
dec
pop
jno
jg
rorb
or
movsl
mov
mov
dec
imul
add
lea
sub
movsl
pop
mov
loope
shrl
jne
fistl
jp
es
aas
mov
adc
fidivs
enter
mov
setae
mov
dec
ror
pop
lcall
aas
jp
cli
cmp
mov
sub
lea
add
dec
les
mov
divb
out
pop
popf
or
cmc
dec
pop
inc
mov
mov
testb
rcll
int3
lret
mov
adc
inc
xchg
test
aaa
xchg
mov
lock
push
add
ret
jae
inc
push
pop
or
lods
jns
cmpsb
out
mov
fldenv
movsl
or
popa
sub
dec
adc
fidivs
in
or
mov
mov
or
fbstp
jbe
and
push
movsl
push
jnp
into
xchg
loopne
sub
rorl
stc
jns
adc
stc
stc
add
push
ljmp
add
xchg
cld
sub
loop
mov
mov
mov
movsb
add
mov
inc
les
dec
cs
jno
xchg
mov
std
adc
scas
xor
jg
lds
xchg
mov
pushf
add
rorl
adc
mov
fs
pop
icebp
sub
fucomp
jbe
mov
jbe
jg
mov
inc
push
and
push
fs
add
push
xchg
xor
outsb
incl
scas
pop
push
out
adc
or
pusha
daa
in
push
call
jmp
ret
pop
shr
and
jmp
xchg
sub
push
push
sub
inc
inc
add
cmc
jmp
mov
pop
jnp
dec
dec
int
cmp
cmpsb
cmp
jnp
pusha
xchg
push
lds
pop
adc
je
inc
sub
mov
xchg
mov
adc
jo
xor
cmp
dec
sbb
lock
test
std
faddp
sub
sti
xchg
push
sbb
test
inc
push
popf
incl
loopne
sub
sahf
addl
sub
shl
dec
into
cmp
or
pop
adc
xor
mov
dec
cld
fstpt
xchg
and
adc
movsl
xchg
mov
sub
push
jo
sbb
clc
lret
and
dec
dec
or
jle
pop
cwtl
and
mov
add
mov
stc
sub
inc
je
dec
dec
gs
xor
cmpsl
mov
outsl
test
jae
push
cmp
mov
stos
ss
or
into
jno
es
pcmpgtd
lock
daa
jmp
loop
pop
or
lcall
xlat
dec
mov
xor
je
mov
mov
nop
lcall
mov
pop
jmp
pop
fcompl
cltd
mov
cmp
data16
pusha
out
daa
rcll
inc
ds
sbb
mov
and
jne
xchg
iret
testb
pushf
mov
adc
cmpsb
mov
fisubs
adc
das
pusha
aaa
mov
outsl
outsb
jne
cmp
mov
add
or
int
pop
sahf
in
adc
das
imul
adc
out
push
cmc
pop
sti
xor
pop
mov
dec
dec
enter
fstl
mov
jne
nop
mov
imul
push
mov
arpl
sub
xor
aaa
push
das
jo
mov
dec
and
pop
jle
mov
addb
test
jge
inc
add
scas
push
or
movaps
aaa
sbbb
faddl
sbb
pop
xchg
xchg
ja
cmp
jle
add
ja
out
addr16
testb
fwait
jp
or
addr16
jmp
sbb
dec
pusha
das
mov
lock
add
iret
and
xor
inc
jbe
add
lcall
mov
dec
es
cmp
mov
rorl
mov
enter
out
sub
mov
push
mov
cltd
repnz
push
mov
pop
sbb
out
stos
jecxz
xchg
mov
pop
add
push
dec
jb
sti
in
adc
pop
fnsave
test
push
mov
loopne
or
cs
jno
xchg
aam
call
add
fstl
pusha
mov
add
out
add
ret
sub
or
imul
push
xor
hlt
mov
out
andb
iret
lock
add
ljmp
repnz
test
imul
clc
or
aad
pop
in
add
lahf
inc
adc
in
ds
sub
mov
jb
jge
cmpsl
pop
ja
flds
sub
out
repz
shl
mov
or
inc
scas
jnp
add
jns
mov
push
mov
mov
rorb
adc
push
popa
sbb
out
xchg
fildl
mov
les
add
sahf
je
or
sti
cmovne
and
in
pusha
in
jno
lahf
stc
add
out
out
aaa
andb
aad
sbb
add
and
mov
pusha
sahf
mov
mov
pusha
ja
xchg
pop
dec
push
cli
xor
mov
addb
loopne
out
xchg
sbb
cmp
jmp
and
mov
and
fisttpl
lahf
push
mov
push
jo
lods
mov
insl
mov
add
xchg
push
dec
int3
sbb
lret
fstpl
loope
jb
in
push
test
push
fildl
outsb
mov
cld
jle
mov
pop
jmp
inc
sbb
or
int
or
movsl
ja
repz
add
adc
pop
xor
pop
fldl
ss
and
push
clc
lret
push
add
jmp
add
mov
test
lods
fistpl
jno
rcrl
notb
fsts
xor
push
cmp
jns
sbb
add
mov
rolb
and
fcompl
mov
cmp
and
adc
mov
lret
aad
andl
xorb
adc
mov
lea
mov
out
adc
jmp
push
push
dec
fidivrs
push
or
daa
or
fcoml
icebp
mov
rclb
outsl
xchg
adc
or
adc
sti
adc
lcall
cwtl
mov
or
xchg
or
jnp
lret
aad
rcr
sti
out
jno
add
data16
into
test
pop
fadds
into
dec
mov
mulb
pop
outsb
popf
insb
push
adc
cmp
mov
sub
outsl
sub
aas
stc
adc
pusha
mov
mov
jecxz
call
mov
pushf
inc
push
addr16
ficoml
adc
fstpt
std
cmp
cmp
push
mov
lods
ret
add
je
cld
add
push
clc
and
xor
add
mov
daa
mov
sti
mov
xchg
sti
mov
push
fisttps
and
or
xor
in
stc
sbb
push
xor
std
ja
movsl
push
insb
flds
stos
rcrb
sbb
hlt
sbb
push
js
popf
jns
xorb
arpl
loope
sub
jl
fsts
mov
loope
pop
mov
or
cmc
xor
shll
fsubl
jbe
inc
dec
pop
push
push
clc
pop
popf
jae
js
into
jb
mov
xchg
and
sub
testb
scas
les
fsubs
add
lcall
or
mov
lret
dec
loope
pop
cmp
ja
sbb
or
mov
lock
cmp
imul
mov
mov
mov
push
ficoml
jo
movsl
add
cmp
jmp
dec
mov
add
mov
adc
dec
mov
mov
mov
inc
loop
arpl
xchg
mov
into
xor
enter
subl
or
test
scas
and
out
cmp
jo
pop
dec
cmp
dec
push
push
jle
mov
roll
mov
fadds
shlb
xchg
jle
jge
mov
popa
fwait
push
shrb
cltd
hlt
dec
add
sbb
sbb
mov
jle
es
or
or
add
fsub
movsl
jmp
stos
pop
rcll
in
add
outsb
or
movsb
cmpsl
add
adc
imul
sbb
fisttpl
pop
mov
cmpsb
mov
pop
jnp
adc
cmc
mov
and
add
lahf
nop
sub
lcall
push
jns
fdivs
and
aad
sarb
add
insb
mov
leave
add
and
popa
mov
add
sbb
das
adc
cmp
les
pushf
xor
sbb
adc
gs
popa
fs
xor
icebp
push
or
sub
push
and
cmp
add
stos
cmp
in
cmp
xor
sub
pop
aas
lret
data16
jl
jmp
in
std
outsb
in
les
cmp
xchg
cld
inc
sbb
sarl
lock
dec
lods
pop
adc
das
int
fwait
loope
mov
pop
push
les
push
js
bound
pop
aad
lret
jo
movsb
add
and
icebp
push
idiv
lock
sub
test
daa
jns
test
add
jp
sti
or
pop
mov
andb
mov
mov
test
mov
cld
dec
lds
push
rsm
pop
insl
out
js
icebp
loopne
mov
outsl
leave
call
pop
fsts
xor
int
add
mov
add
pop
push
xchg
xor
xchg
aam
inc
sub
xchg
mov
data16
xchg
fcoms
lods
sbb
push
add
xor
ljmp
or
mov
inc
pop
inc
sub
add
xor
icebp
cmp
sbbb
cmp
push
xor
pop
pusha
add
jmp
lods
jecxz
push
icebp
sub
mov
sub
dec
add
clc
ljmp
dec
arpl
pop
dec
stos
lret
dec
add
cmp
or
mov
sub
test
lret
mov
nop
dec
dec
ret
decl
xlat
add
push
jmp
rep
dec
mov
faddl
mov
push
mov
dec
sahf
xlat
push
fsubrl
adc
push
jg
xchg
push
inc
jne
or
outsl
in
sub
lods
add
push
aam
xchg
and
mov
dec
pop
lcall
cs
jl
or
adc
pop
negl
leave
jne
mov
push
mov
in
cs
pop
mov
push
les
mov
daa
adc
jb
or
push
inc
jne
out
shrb
cltd
xor
mov
sbb
mov
mov
out
push
sbb
and
sbb
mov
data16
leave
test
cltd
adc
rcll
sub
pop
sub
rcr
scas
mov
sbb
pop
fists
movsb
in
adc
je
scas
test
stc
xchg
rolb
mov
or
cmp
cmc
inc
xchg
mov
in
leave
pop
in
aas
out
lock
xchg
push
pop
add
mov
cmpsb
aad
daa
out
pop
jns
shl
pop
lahf
push
push
and
mov
ror
cmc
push
cwtl
rcll
mov
adc
mov
sbb
out
shrl
jg
pushf
mov
pushf
cmc
jno
adc
mov
push
xchg
xor
cmp
inc
scas
mov
mov
adc
add
dec
test
fistl
pusha
popa
mov
imul
add
mov
mov
cmp
dec
ret
or
pop
xchg
in
imul
dec
adc
imul
std
push
lods
xchg
jge
sub
cld
lea
jp
stc
sub
xchg
arpl
lret
test
jmp
jmp
mov
add
sarb
xchg
add
or
outsb
jmp
jo
and
pop
mov
out
sub
mov
dec
push
pop
popf
shr
dec
mov
lock
pop
subb
xchg
fsubl
inc
daa
cmp
and
bound
sub
fnstcw
push
add
mov
or
or
sub
push
mov
pop
dec
jmp
add
xchg
fnstcw
cmpsb
imul
add
add
es
in
cmp
xor
fadds
das
inc
push
rcl
inc
pop
inc
dec
popf
add
into
mov
clc
add
sub
imul
clc
and
push
or
jge
and
xlat
mov
popa
add
push
fimuls
test
je
add
adc
ffreep
and
ret
jnp
jecxz
cmp
es
and
add
fldt
call
lea
aad
fnstcw
outsl
cltd
ljmp
mov
sub
leave
add
cmp
ret
dec
stc
int
cmp
xlat
mov
in
pushf
xchg
fidivs
mov
sbbb
test
ds
mov
cmpb
add
xor
pop
add
fdivl
lods
and
xor
pop
lds
cs
pop
xor
fisttpll
fcompl
subb
jg
cmp
jns
or
jp
stos
adc
mov
insl
push
imul
ja
into
fidivrl
out
xor
push
outsl
push
decb
sbb
or
out
add
sbb
push
push
add
mov
inc
fwait
negl
mov
dec
fmul
mov
push
out
lock
loopne
push
pop
jle
or
pop
dec
sbbb
inc
bswap
je
les
pop
xchg
enter
cmp
xchg
in
repnz
pop
pop
outsl
or
push
adc
add
xor
hlt
addl
sbb
sbb
loope
popa
mov
jecxz
add
mov
and
push
sub
inc
shll
popa
and
and
jp
push
add
push
in
sub
push
rol
push
mov
add
icebp
dec
fst
add
push
imul
repz
jmp
jp
or
mov
imul
jecxz
sbb
cmpsl
add
xor
add
xor
lods
orl
test
mov
and
push
sub
insb
xchg
add
jmp
pop
aaa
xorb
jmp
xlat
push
cs
popa
imul
fildl
movsl
aas
sub
push
pop
leave
fcoms
sti
mov
adc
jge
mov
test
repnz
sahf
inc
jo
fiadds
outsb
or
adc
sbb
pop
pusha
and
sbb
mov
inc
mov
push
adc
fsubrs
push
rcll
mov
fimull
add
gs
and
sbb
add
push
jnp
jmp
adc
mov
ret
pop
in
loope
and
ret
mov
jnp
je
push
rorl
sbb
xchg
or
roll
repz
sbb
sbb
jns
xchg
push
jae
mov
sti
cltd
je
mov
push
dec
xor
jns
sbb
mov
cmp
adc
inc
or
in
jecxz
sub
cmp
add
les
or
dec
addl
cmp
push
cmc
push
or
mov
xor
cmpsb
sub
lods
shlb
add
lock
jecxz
lds
in
add
xor
cld
sbb
aaa
sahf
lds
insb
jae
xor
sti
mov
data16
cmp
push
xor
pop
pop
ret
rorb
mov
cmp
out
xor
adc
cwtl
push
sbb
jns
icebp
xchg
mov
inc
xor
mov
rcpps
sahf
loope
cmp
pop
mov
or
add
hlt
or
rcll
test
xchg
or
xchg
ss
rorl
push
cwtl
sti
add
mov
mov
out
mov
mov
and
inc
add
xchg
stc
addr16
mov
mov
mov
and
jmp
sarb
outsl
pusha
inc
mov
je
in
rcrl
mov
or
sahf
outsl
mov
jno
sbb
das
mov
inc
aaa
xor
add
mov
xor
mov
jo
inc
xor
out
rorl
ljmp
cmc
call
cmp
or
cli
mov
out
or
push
adc
test
mov
mov
rorb
jne
pushl
fwait
push
int
xor
in
mov
push
insb
xchg
cmp
cmp
inc
push
mov
mov
mov
add
push
int
add
dec
das
or
adc
add
movsb
inc
mov
mov
push
mov
cmp
je
repnz
jl
mov
mov
xchg
cli
leave
testl
push
inc
xor
shlb
fsubs
xor
into
xor
lods
nop
cli
mov
fdiv
aaa
xor
push
dec
mov
push
jno
inc
jns
loope
or
sbb
punpckhwd
call
or
mov
add
out
mov
cli
cmp
jbe
mov
xor
mov
xchg
mov
xor
lcall
sub
add
negb
rolb
xchg
dec
pop
mov
lea
fs
adc
je
push
mov
sbb
inc
cmp
cmpsb
ljmp
sbb
sbbb
pop
mov
loope
sbb
sbb
push
push
jno
clc
push
ljmp
mov
pop
sbb
cmp
or
int
rcrb
add
xor
inc
cmp
xlat
and
mov
push
test
add
lock
xor
mov
add
sbb
fucomp
mov
push
enter
cmp
push
add
sti
sbb
cmp
cmp
adc
dec
mov
or
mov
nop
ret
add
dec
cmp
nop
pushf
clc
pop
clc
subb
mull
cmp
dec
or
loope
test
aas
stos
push
inc
shrb
pop
mov
jge
sbb
fisubl
xchg
cwtl
pop
clc
cli
testl
into
dec
fnstenv
add
ja
adc
sbb
mov
push
testb
addb
lret
insb
xor
push
in
mov
popf
mov
setns
testl
ss
sub
adc
jl
mov
or
popa
lcall
or
clc
int
mov
lods
pop
lret
sub
fnclex
mov
gs
ret
add
inc
push
sarb
sbb
sbb
inc
lock
jnp
cmpsb
add
movsb
roll
mov
xchg
adc
sub
jae
sbb
sbb
add
push
push
or
clc
out
xchg
or
add
hlt
imul
cmp
int3
jle
jecxz
mov
shlb
xor
mov
js
lods
xchg
jnp
add
movb
push
jg
nop
fcomi
push
js
cmp
fisubl
xlat
ret
scas
add
loope
cmp
fwait
pop
mov
shrl
fsubs
pop
xor
aad
dec
lret
dec
add
xchg
jae
stc
cli
push
add
push
mov
out
test
into
fimull
lods
hlt
dec
add
or
test
add
rcrb
add
dec
fadds
in
jl
cmp
std
add
jo
cmp
sub
mov
add
in
push
dec
pop
xchg
faddl
icebp
fs
hlt
jl
pusha
or
shlb
je
fsub
pop
div
add
cmpsb
jle
scas
cmp
push
jb
adc
dec
add
inc
mov
les
mov
add
lret
sahf
rcrl
testl
sub
test
popa
jmp
ds
in
addb
ror
rolb
pop
sbb
dec
fcmovnb
and
sub
adc
int
wrmsr
or
mov
sbb
ret
mov
in
add
add
add
jne
push
cltd
xchg
hlt
popa
add
pop
and
add
pop
ds
ja
int3
inc
int3
adc
add
inc
push
fists
stos
mov
lea
call
iret
xchg
insb
jnp
and
fcoms
sarl
xchg
js
add
jmp
pop
test
jmp
mov
inc
and
add
in
pop
push
popf
sub
fndisi(8087
cld
mov
aad
mov
lea
cwtl
xor
in
scas
add
mov
mov
hlt
out
out
movups
mov
mov
pop
inc
add
pop
cmp
push
jno
out
sub
cli
pop
ret
scas
mov
dec
divb
add
mov
pop
popf
mov
insl
test
clc
scas
add
aaa
aad
sub
stc
aam
push
push
add
js
test
jg
sub
in
bound
ljmp
aam
xlat
lds
rorb
pop
sbb
push
cwtl
shll
je
add
pusha
inc
xor
loopne
mov
xchg
cmc
test
lods
movsb
out
rcll
add
sub
pop
pop
mov
fisttps
and
fidivrs
fiaddl
arpl
adcl
int3
clc
push
or
cmp
push
iret
push
cpuid
jbe
jg
lcall
popf
sub
dec
cmp
pop
sub
xorl
sbb
xchg
push
and
and
cltd
mov
enter
movsl
sahf
ret
push
push
lea
sbb
in
add
fcoml
jl
adc
repnz
inc
pop
mov
cmp
and
stos
pop
mov
pop
xchg
fnstenv
sti
pop
inc
mov
xor
add
sahf
add
push
pusha
lret
and
out
test
add
fimuls
push
xchg
pop
mov
inc
xor
cmp
int3
cmpsb
mov
cmpb
add
sbb
xor
and
imul
mov
decl
add
dec
or
xor
or
sbb
mov
add
sub
das
jns
mov
pop
xlat
cld
stos
add
adc
pop
pop
jo
cmpl
adc
add
sub
or
or
out
xlat
data16
ljmp
inc
xchg
jbe
pop
add
sahf
xor
jb
outsb
mov
sahf
dec
xchg
inc
and
add
daa
cmp
jb
cmp
cmpsb
pushf
out
sbb
pop
fwait
pusha
push
mov
adc
pop
lock
shrb
in
aas
cmpsl
add
int3
push
cmp
or
and
add
mov
lret
js
add
sbb
das
or
pop
push
test
enter
lods
rolb
jo
lahf
dec
repnz
ljmp
adc
add
fsubr
dec
jne
hlt
xchg
add
inc
mov
push
add
imull
leave
xchg
mov
bnd
push
shlb
mov
and
inc
adc
cmpsl
add
pop
inc
cmpsb
pop
jg
or
pop
inc
hlt
push
rcll
xor
test
push
add
dec
clc
enter
andb
add
or
add
mov
pop
cwtl
cmp
or
xchg
or
jge
mov
xorb
add
rorb
add
test
inc
push
sbb
dec
add
mov
fmul
adc
lret
movsb
cmc
test
mov
add
ja
xchg
cmp
sub
faddp
cmpb
adc
adcl
mov
inc
rolb
push
lea
das
xor
cmp
add
push
fldl
fs
pop
jae
add
inc
pop
xchg
or
mov
add
or
add
out
adc
and
ret
jnp
adc
lret
movsl
dec
les
or
add
mov
push
and
pop
adc
jmp
jno
sbb
fdivs
test
add
outsl
repz
pusha
cld
add
push
xchg
add
push
stos
dec
std
sbb
and
ds
mov
add
lods
push
mov
adc
movsl
add
enter
pop
xlat
sbb
fldenv
sbb
adc
and
imulb
inc
xor
jg
xchg
pop
pop
inc
orl
push
add
subb
inc
shll
stos
mov
inc
add
mov
es
les
mov
in
shrl
mov
xchg
popl
and
movsb
pop
fimull
sarb
lock
add
cmp
cmp
filds
xor
gs
lcall
js
repnz
fistpll
lds
lods
and
xor
jo
rcr
adcb
cltd
out
hlt
in
lock
jl
push
xchg
pusha
adc
rcl
sbb
fs
or
mov
and
cwtl
cli
add
dec
and
sbbb
sbb
cli
add
sbb
mov
je
or
imul
fildl
enter
fmull
add
out
outsl
aam
sub
pop
mov
shrb
add
sub
loopne
stos
add
insb
mov
repz
add
adc
dec
mov
add
pop
shrb
in
sub
inc
mov
add
addr16
iret
add
lock
adc
add
adc
jo
sub
scas
push
or
pop
push
pusha
or
mov
mov
dec
xor
sarl
pusha
add
sub
lds
and
jb
stos
cltd
xchg
lahf
or
in
mov
mov
lret
push
out
test
divb
notl
lods
stos
add
mov
mov
xlat
xor
mov
lret
push
sbb
push
xchg
addr16
and
insb
fs
subb
jg
lds
cmp
mov
add
loope
mov
sub
push
scas
addr16
mov
js
clc
ret
mov
bound
daa
repnz
xchg
dec
jle
loope
or
loop
pusha
pusha
in
fiadds
pop
xchg
add
mov
pop
sarb
lods
and
divb
dec
dec
mov
data16
cmp
mov
push
pop
call
out
push
cmp
loop
and
cmp
mov
outsl
out
add
push
movsl
and
mov
call
mov
inc
daa
add
push
fdivrl
lcall
mov
sub
xlat
mov
loope
jg
xchg
andps
das
stos
cmp
xor
test
mov
mov
and
jns
pop
iret
add
pop
fldt
sub
cmp
icebp
adc
ja
roll
sbb
xor
push
cmp
loope
pop
dec
xorl
pop
cmpsl
in
ljmp
repz
or
ret
imul
fsubl
scas
xor
orb
cmp
scas
mov
add
mov
or
sahf
inc
mov
xor
pop
add
mov
ja
test
dec
jo
and
add
call
push
pop
inc
int3
push
sarb
jmp
andl
or
dec
inc
jo
pop
dec
sub
not
outsl
xchg
pop
sbb
test
pop
cld
push
ret
mov
inc
cmp
rol
xorb
sbb
cwtl
mov
add
in
xor
xor
and
movsl
insb
pop
cmp
lods
and
sbb
jg
xorb
cmc
mov
push
and
add
lret
add
pop
and
movsl
sbb
add
mov
out
imul
into
dec
data16
loop
mov
xadd
adc
imul
jl
aad
xchg
fisttps
sub
js
loopne
decb
sbb
in
sbbb
idivl
pusha
cmpb
pop
jns
sbb
addr16
cwtl
jns
add
push
or
cmp
mov
movb
sar
lahf
loope
imul
jl
sbbb
xchg
mov
xor
fmulp
nop
aam
or
sub
cmc
js
mov
loope
xor
sbb
mov
mov
andb
sbb
mov
jo
pusha
pop
aam
insb
call
mov
add
dec
shll
add
jo
es
pop
or
lock
push
jbe
add
add
mov
mov
cmpsl
aam
cmp
mov
add
sub
filds
loopne
add
mov
in
js
out
add
ror
add
pop
into
cmpb
xchg
sbb
push
lcall
pop
sub
fdivl
add
add
sbb
inc
cmp
clc
sub
xchg
jmp
into
dec
cwtl
cmp
out
inc
ret
andl
jne
mov
cwtl
mov
out
add
daa
push
inc
lret
add
in
pusha
xor
add
movsl
das
xchg
xor
cmp
cmpsl
adc
add
popf
fcoms
sbb
rclb
scas
in
mov
hlt
mov
adc
outsl
push
outsb
push
repnz
test
mull
pop
incl
mov
inc
clc
and
dec
ljmp
lret
jnp
verw
mov
imul
jg
iret
jecxz
dec
pusha
mov
add
xchg
in
add
aas
push
inc
loopne
scas
movsb
add
pop
insb
xor
jecxz
nop
xor
pop
mov
outsb
and
clc
xor
sbb
dec
idivl
adc
inc
add
xchg
jbe
and
mov
push
sbb
pop
sub
push
sub
inc
mov
mov
push
push
scas
jno
add
mov
push
ljmp
insl
cli
push
push
mov
push
and
jb
fucomi
add
outsb
stc
mov
lcall
popa
xor
std
mov
inc
movsb
loopne
sub
call
int
sub
mov
inc
sbb
push
add
xor
sarl
in
add
sub
ja
inc
mov
add
js
mov
out
mov
jg
and
loopne
idivl
pop
adcl
movsb
js
and
hlt
ljmp
adc
sbb
mov
pusha
xor
and
or
dec
jo
int3
inc
imul
adc
test
sbb
ss
xor
push
cmp
push
jp
jno
call
lret
cli
in
add
mov
cmp
add
jecxz
mov
test
and
add
jb
add
dec
les
and
jbe
movsb
lahf
insb
fisubs
pop
loopne
or
ret
stos
clc
add
pop
aas
fs
loope
inc
push
jno
enter
bound
xor
fcompl
ret
jp
push
mov
or
imul
loopnew
xchg
bound
push
and
or
shrb
ljmp
call
lcall
push
icebp
mov
in
iret
inc
in
jge
xor
dec
sub
or
push
xor
divb
sbb
jns
sbb
loop
das
addb
rolb
pand
jns
cs
add
fwait
imulb
cmpsl
ret
idivl
iret
outsb
subb
dec
add
repz
add
xchg
or
add
inc
and
add
test
stc
fdivr
add
in
mov
add
dec
call
fisubrs
stos
roll
xorb
ss
or
dec
jae
jne
add
arpl
jno
pop
call
cmp
jnp
add
jecxz
mov
mov
dec
add
mov
push
and
or
mov
sub
je
and
imul
inc
add
add
or
sbb
imul
push
mov
sub
adc
test
mov
mov
mov
jp
icebp
add
jnp
insb
repz
add
or
dec
or
push
add
pop
inc
daa
movsl
ljmp
imul
cmp
inc
push
dec
loopne
mov
outsw
nop
adcl
cmp
call
pop
jp
out
and
add
cmpsb
add
mov
sub
int
or
pop
orb
aam
mov
push
imul
sub
les
pop
mov
jge
gs
popf
shl
sbbb
xlat
adc
sub
jno
cli
xchg
inc
test
nop
addb
shlb
pop
enter
cmpb
cmc
lret
enter
or
xor
and
inc
or
pop
or
cmp
and
fsts
pop
mov
popa
das
add
gs
jmp
adc
and
mov
sbb
pusha
add
cs
addb
fbld
sbb
leave
sbb
inc
pop
inc
push
pop
adc
or
pop
cmp
cmpsb
int3
lea
adc
sbb
pop
das
cwtl
jae
push
add
rcr
xor
into
loop
fsubp
sbb
xchg
dec
movsb
dec
push
js
ret
jg
inc
add
popa
fsubrs
mov
ds
mov
movl
ror
pop
in
rorl
fbstp
imul
insb
add
pop
push
dec
adc
sbbl
or
cwtl
xor
fbld
add
jle
pop
cmp
xor
cmpsl
js
or
cmpsb
and
push
adc
dec
push
add
dec
mov
cmp
hlt
ss
xor
adc
add
les
push
add
mov
adc
sbbb
cmp
sbb
mov
cbtw
addb
ror
scas
sub
xor
repz
stos
push
daa
fmull
mov
stos
mov
lahf
adc
inc
add
fs
add
pop
cmp
js
addr16
push
add
jmp
lret
xlat
cltd
shlb
lret
cmpsb
jns
add
jmp
pop
and
add
xor
imul
shr
call
addb
test
dec
or
cmp
jge
cld
mov
fcom
dec
add
xchg
add
fnstenv
aam
mov
adc
pop
scas
iret
inc
xchg
jbe
aas
fistps
mov
mov
sarb
lret
add
loopne
adcl
les
lock
fcoms
popf
je
xchg
dec
and
dec
jb
test
shrl
sbb
sub
outsb
cmp
push
sub
loop
and
mov
cmp
pop
insb
addr16
jo
add
push
sub
jmp
outsl
mov
test
mov
add
filds
and
xorb
lret
adc
test
xchg
scas
fs
stos
xor
jno
out
sbb
cmp
or
pop
scas
push
ljmp
ret
scas
mov
mov
adcb
shr
cs
jle
cvtpi2ps
fildl
fidivl
enter
int3
mov
jg
xchg
out
add
jp
and
pusha
add
or
mov
push
push
mov
adc
or
jnp
jmp
xor
add
cwtl
movsl
pop
sbb
mov
ficoms
mov
and
add
and
or
jo
push
scas
scas
loop
daa
mov
push
and
inc
sub
cli
jne
outsl
mov
and
mov
nop
in
fldcw
jae
pop
xchg
sub
jae
scas
sbb
dec
dec
mov
push
and
repnz
stos
ja
mov
mov
inc
mov
sbbl
testb
rol
push
add
cltd
arpl
add
add
sbb
sbb
out
mov
lcall
lods
sbb
xor
inc
cmp
push
cld
xchg
cmp
jl
lret
xchg
sub
pop
xchg
inc
xchg
inc
pusha
cli
sti
loope
push
push
and
sub
push
test
bnd
in
and
push
xor
push
rolb
mov
enter
add
mov
mov
mov
add
rorb
mov
add
dec
push
and
fnsetpm(287
add
dec
dec
lds
jae
popa
fnsave
pop
add
push
jl
pop
add
sub
xadd
shl
mov
cmpb
mov
out
jg
dec
repz
sbb
ss
dec
jae
push
add
sub
push
xchg
mov
std
js
add
icebp
mov
mov
push
fldl
mov
mov
ja
add
push
imul
pop
push
ret
cld
cmp
push
hlt
gs
mov
and
fsubr
jl
das
mov
or
leave
jne
sbb
fldt
push
out
jb
add
sahf
cwtl
lds
push
add
dec
add
loope
mov
mov
jg
jno
popf
shlb
add
add
lret
sbb
out
add
or
xchg
nop
addl
and
fwait
stos
mov
je
jle
jae
shlb
sbb
in
insl
loop
add
std
sbb
neg
add
les
enter
inc
dec
or
out
icebp
fwait
sub
mov
sbb
inc
es
pushf
lcall
add
jno
pop
loopne
mov
scas
mov
mov
push
pop
inc
xchg
movsb
les
cmc
addr16
adc
jo
mov
and
xchg
sbb
dec
push
adc
add
push
pushf
inc
cmp
jle
add
mov
ffree
mov
xor
lds
mov
push
push
ss
daa
pusha
cli
sbb
mov
imul
fsubl
mull
add
push
pop
dec
sbb
cltd
mov
or
jbe
add
mov
mov
pop
cmpsb
fwait
cli
out
dec
or
sub
ret
es
add
adc
jl
xchg
push
rol
mov
dec
inc
sub
les
sub
stc
fsubrl
add
das
cld
xchg
aas
pop
imul
popa
pop
and
sbb
cld
or
add
jge
pop
add
divb
sub
xchg
or
stos
inc
sbb
scas
or
cmp
sbb
xchg
and
cmp
xorl
add
rcl
dec
dec
and
mov
and
push
push
adc
rorb
gs
push
inc
ljmp
xor
mov
sbb
mov
movsb
or
icebp
mov
pop
pop
sbb
xchg
pop
adc
test
sbb
jecxz
inc
lods
mov
jo
add
adc
add
push
push
int3
clc
adc
fisubrs
xor
mov
jae
movsl
add
push
add
cmpsl
insl
mov
add
leave
aaa
test
adcb
jl
repz
mov
push
jo
add
jecxz
sub
mov
add
mov
pop
in
mov
add
push
cmc
loope
add
xchg
fimuls
stos
adc
iret
push
xchg
pusha
lock
pop
or
jns
sbb
add
mov
andb
imul
add
int3
jecxz
sub
jo
rorb
insl
and
mov
and
cmp
push
sbb
pop
lcall
add
push
cwtl
clc
xchg
je
and
dec
xor
dec
shrb
rclb
stos
clc
cld
jne
sbb
inc
xchg
les
lret
test
iret
es
shrb
pop
in
test
gs
adc
add
std
lods
pusha
dec
xlat
idivl
lea
sahf
push
add
and
insb
data16
cmpsl
sbb
push
arpl
shlb
add
and
aad
insl
out
add
pop
fs
in
push
jno
push
test
test
outsl
ret
arpl
add
jb
xchg
jo
es
sbb
daa
je
sahf
pushf
or
test
lods
add
sbb
sbb
adc
and
out
fs
or
push
fninit
inc
mov
ss
pop
bound
add
stos
sub
or
jge
xchg
push
rclb
push
stc
movsl
lock
stos
add
or
push
and
pusha
push
sahf
cwtl
add
fdiv
cmpsl
fadds
sbb
mov
ficoml
dec
into
into
sub
enter
mov
test
mov
lahf
xchg
pop
pop
mov
cmp
lret
pop
stos
inc
adc
mov
int3
add
js
pop
shrl
fistps
push
xchg
jb
lret
shll
scas
dec
inc
push
jg
add
leave
pop
pusha
xlat
inc
jecxz
retw
or
mov
movsl
sahf
mov
das
xlat
adc
rorb
push
push
aaa
dec
add
stos
add
fbstp
mov
dec
add
push
cmpsl
cmc
or
sbb
out
inc
rorb
mov
mov
add
push
push
aam
dec
add
lahf
mov
les
sar
add
push
dec
xchg
push
cltd
add
mov
ficomps
jle
imul
push
jmp
cld
add
sbb
pop
xor
sbb
movb
sti
ja
xor
ljmp
add
test
mov
lods
mov
pop
sarl
cmc
add
shr
cwtl
add
sbb
sub
push
mov
xchg
inc
mov
sbb
cltd
add
push
jp
pop
movsb
cli
cmp
hlt
xor
push
add
movsl
mov
pop
add
clc
out
lods
loop
cmp
xor
pmulhw
loopne
cli
and
popa
pop
ds
or
arpl
xlat
rclb
xchg
add
not
fsts
leave
cwtl
push
add
xor
or
sub
cmp
fiadds
or
sbb
sbb
cs
mov
rolb
jl
cmp
add
leave
es
movsb
dec
dec
add
add
ret
daa
mov
sbb
inc
add
jae
pop
outsl
iret
hlt
cli
pop
sahf
pop
es
cmpsb
add
add
add
mov
std
and
mov
sbb
mov
cmp
jns
mov
popf
jl
add
test
xor
pop
or
or
xchg
mov
jae
popa
daa
shr
sub
or
jbe
adc
mov
xchg
stos
add
das
cmp
jae
sbb
outsb
pop
mov
jae
adc
pop
xchg
fwait
ja
sub
inc
jne
and
sub
dec
cmp
pop
sbb
js
rclb
add
das
rcrl
push
clc
adc
add
add
or
movsb
mov
cmp
push
enter
and
push
add
push
sbb
inc
dec
mov
ret
dec
out
rcrb
inc
ret
xchg
shrl
cwtl
add
imull
xchg
popf
rol
add
jns
mov
sbb
jnp
loope
dec
inc
and
cli
testb
mov
and
sbb
aam
pop
mov
sbb
pusha
add
jnp
add
ret
push
cmp
sbb
mov
call
xor
int3
or
and
add
scas
sub
push
add
aas
add
xchg
add
jg
mov
enter
pop
jne
je
arpl
or
and
mov
les
pusha
sub
cld
aaa
lds
xchg
cmp
xchg
shlb
andb
add
je
sbb
mov
jne
repz
xor
test
add
shlb
add
cmc
repz
mov
out
clc
mov
pop
pusha
gs
rcll
mov
sbb
sub
or
jle
int3
cmp
jmp
inc
add
or
cmp
mov
cmp
stos
add
arpl
sbb
add
push
jp
mull
or
jae
lds
or
pop
and
mov
or
pop
and
mov
movl
repz
andb
movsl
jl
add
sbb
ss
shlb
sbb
hlt
xchg
or
and
mov
fcompl
sbbb
cmpl
push
push
lret
call
or
orb
or
cmp
adc
add
sbb
cmpsl
add
aam
lret
push
rcrb
ljmp
sbb
mov
mov
or
int3
inc
add
jno
loop
push
lods
add
cmp
sbb
addl
dec
rorl
pop
push
bound
out
lock
jne
add
ja
lret
test
sti
fiadds
pop
mov
add
and
xchg
sub
scas
es
mov
xorb
imul
or
lea
aam
mov
mov
mov
fadds
enter
pop
or
and
ljmp
shlb
sbbb
arpl
cmp
pusha
push
popa
pusha
mov
cmp
jne
jno
js
in
push
jmp
and
dec
mov
mov
dec
or
jmp
sub
mov
lcall
push
sarb
add
hlt
sub
stc
addr16
add
cmp
repz
mov
out
mov
enter
stos
imul
decl
aas
loopne
pop
jl
add
mov
xchg
lret
out
mov
rcrb
or
and
xchg
orb
pop
push
movsl
adc
push
xadd
scas
int3
add
xchg
mov
push
cli
movsl
jbe
xorb
push
sbb
mov
add
sbb
jo
loop
and
call
fiadds
xor
and
iret
loopne
push
lds
push
and
xorl
xchg
adc
or
mov
add
mov
sub
aaa
lcall
test
pop
out
popf
jne
add
flds
adc
xor
insb
mov
inc
jns
jno
test
add
fimull
das
xchg
lock
loopne
add
in
pop
scas
fcoms
cmpsb
in
outsb
pusha
or
cs
bound
jge
into
daa
arpl
sbb
rclb
stos
imul
push
and
rolb
insb
pop
jecxz
add
mulb
jnp
scas
add
mov
and
xchg
sbb
loope
add
aad
add
adc
push
cmp
mov
add
stos
sti
jae
adc
out
mov
add
mov
jb
ds
sbb
gs
push
and
mov
add
xchg
popf
sbbb
into
data16
pusha
lret
call
cmp
push
or
in
aas
add
sbb
outsl
jmp
jecxz
cmc
insb
pop
sbb
pop
sbb
lock
push
push
jl
rcrb
fwait
xor
sbb
cmp
xchg
add
and
mov
insl
int
mov
sbb
fs
jnp
pop
cmp
add
cmp
add
jmp
xchg
mov
ljmp
cmc
or
add
fwait
xorl
mov
sub
add
dec
out
cltd
dec
mov
sar
push
add
lcall
add
clc
jg
data16
mov
ficoml
push
add
hlt
pop
cltd
enter
push
push
mov
push
push
lea
cmpsb
cwtl
or
inc
push
inc
sbb
pop
jmp
jae
shr
sbb
mov
jo
pop
popl
dec
or
push
add
scas
jae
xor
mov
add
pop
mov
jle
add
divl
adc
stos
shrl
fdivs
xchg
pop
dec
aas
jge
loop
hlt
dec
add
out
movsb
mov
addb
xchg
cmp
pop
sbb
popa
inc
jmp
add
jmp
push
jl
or
mov
xor
in
out
ret
call
cmpsl
subb
pop
stos
enter
jnp
mov
add
xor
cld
stos
loop
add
sahf
icebp
in
test
sarl
imul
adc
bound
push
icebp
repz
push
inc
fisubrs
lock
xor
lods
push
cmp
arpl
jle
fcoml
pop
add
orb
mov
testl
lcall
push
push
or
loopne
out
add
pop
and
addl
mov
adc
test
add
stos
imul
shll
mov
sub
lods
jo
cmpsb
xor
repnz
pop
lahf
add
movsb
pop
stc
lret
mov
or
cmp
je
pusha
push
and
jg
outsb
inc
jge
jno
iret
adc
fwait
cltd
sub
adc
into
add
shl
mov
pusha
sbb
add
mov
jp
cmp
dec
std
inc
arpl
cmp
stc
sti
xorb
add
jb
or
leave
or
rol
and
sub
ficoms
inc
dec
cmp
cmp
push
movsl
jmp
add
mov
xor
mov
mov
ja
int3
sub
bnd
or
mov
xchg
jmp
dec
sbb
sarl
mov
add
insl
mov
mov
out
jno
or
jo
add
leave
xchg
fistpll
mov
mov
pop
push
movl
pop
insl
mov
orl
sarl
scas
pop
les
test
xchg
sbb
push
dec
mov
pushf
shlb
jb
cmpsl
mov
add
or
test
movb
movsl
cs
cmp
push
dec
repnz
jg
xchg
pop
or
into
sahf
add
push
jns
add
out
cwtl
rorl
test
add
mov
sbb
cmp
inc
lret
adc
mov
lahf
adc
sbb
addl
dec
mov
add
xchg
sbb
pusha
mov
filds
xor
push
or
jl
dec
cmp
add
loopne
cld
fcomps
xor
cs
cmp
incb
lock
and
out
push
jno
pushf
insl
loopne
adc
pop
leave
pusha
inc
xchg
adc
lahf
add
popf
push
fwait
adc
adc
jb
jno
mov
mov
addb
int
xor
mov
add
cltd
xor
add
sub
jg
or
daa
jge
adc
aad
or
mov
dec
jmp
push
idivl
cmp
cmp
or
outsb
add
lahf
imul
xor
push
loopne
cwtl
jnp
push
pop
or
add
ficomps
test
xchg
mov
mov
faddl
xor
mov
mov
xlat
repz
clc
adcb
push
sbb
jae
push
pop
mov
sti
dec
pusha
or
out
add
push
push
sub
repnz
jo
xchg
add
or
incb
mov
rorl
js
add
stos
jns
loop
mov
add
les
pusha
iret
test
sbb
and
cmp
mov
pop
out
add
sub
cmp
add
rol
out
or
add
pop
push
int
add
sbb
andb
jg
mov
movsb
shlb
xor
addl
push
cmpsl
or
add
pop
sti
fwait
and
loope
sbb
scas
cmp
mov
push
aas
testl
and
scas
fldl
aam
add
loopne
flds
push
out
pop
cld
sbb
sbb
and
loop
cli
rclb
mov
jb
xchg
sub
sbbb
ficompl
push
inc
pop
cmp
mov
sub
inc
push
cltd
stos
insl
add
add
cmp
jecxz
push
popf
mov
sbb
movsl
mov
je
shlb
pop
test
leave
adc
int
xor
aam
xlat
xor
adc
pop
mov
and
ljmp
pop
orb
mov
mov
jg
aad
lcall
sahf
jne
mov
ja
sti
and
and
xchg
es
sub
cs
cmp
add
cli
add
pop
mov
imul
mov
push
mov
jl
arpl
xchg
mov
cld
test
scas
adc
dec
outsb
push
shl
cmp
dec
jmp
add
shrl
aaa
jl
add
rolb
jle
mov
xlat
mov
pusha
dec
push
or
out
lods
fldl
dec
pop
fsubp
hlt
fbstp
push
repnz
test
add
imul
aaa
add
dec
iret
dec
add
adc
sub
fld1
cmp
insl
pop
push
xchg
mov
jnp
jo
not
jle
pop
cmp
xor
out
ja
out
cmp
ss
insb
repnz
out
rcrb
leave
imull
add
fisttpll
mov
insb
jae
lcall
out
jecxz
sbb
push
mov
cmc
in
scas
mov
loopne
cmp
jecxz
jg
sub
aam
and
ret
push
xchg
inc
jb
push
xor
mov
stos
jo
je
jne
add
clc
mov
mov
adc
jge
les
movsl
test
cmpsb
pop
or
push
call
sub
jno
or
add
push
add
std
repnz
fimull
add
and
add
or
repz
nop
ret
add
lea
pop
cmp
add
icebp
pop
enter
inc
cld
addb
xor
fwait
add
push
dec
add
or
jbe
repz
cli
cmp
leave
push
nop
sti
lods
push
in
clc
sbb
mov
or
xchg
lret
ja
add
cmpl
fldcw
insb
imul
jae
sbb
cmp
jmp
cwtl
jl
mov
fdivs
mov
neg
jl
inc
leave
ds
ljmp
push
pop
into
out
sbb
insb
add
or
data16
lret
sub
in
push
je
xor
sbbb
mov
mov
sbb
ja
sub
mov
sbb
cmp
stos
cmpb
popf
scas
mull
sub
add
push
imul
lea
addr16
idivb
loope
xchg
pop
mov
addl
jo
insb
loopne
pop
add
mov
adc
add
sahf
popf
or
push
inc
popl
push
out
inc
inc
rolb
jae
add
mov
mov
cmp
cmp
scas
ficompl
and
movsb
subb
jp
je
add
dec
movsl
cld
mov
loopne
pop
cmp
add
fwait
dec
mov
cmp
dec
add
hlt
sub
adc
mov
sbb
xchg
cld
jp
fs
in
rorb
adc
sbb
stos
push
adc
js
xor
fmull
or
jmp
xor
out
add
adc
insb
xor
stc
leave
pop
popa
sbb
insl
daa
nop
xor
lret
stos
add
data16
lcall
inc
add
mov
jb
call
jmp
mov
xor
adc
inc
movsl
addr16
add
add
or
call
add
int3
fistl
add
scas
inc
dec
jl
jb
mov
mov
push
xchg
sbb
cli
lock
inc
xorb
mov
or
ja
mov
lcall
add
xor
push
stos
loopne
jmp
xchg
inc
push
ret
daa
cmp
nop
pop
add
jo
aam
adc
pop
in
pop
sbbb
fs
add
mov
daa
jle
cmp
into
inc
andb
ja
cwtl
int
mov
push
aam
and
dec
add
lret
ljmp
push
out
sarb
sub
push
lret
push
mov
xor
mov
cmp
fnstcw
sub
std
in
orb
call
add
add
mov
popa
adc
nop
lock
in
aam
loopne
es
sub
pusha
mov
or
jg
sysenter
add
es
mov
dec
mov
idivl
movsb
sub
xor
popa
jnp
movsl
add
push
inc
push
test
out
add
scas
pop
test
adc
dec
shlb
sahf
jbe
sbb
fidivl
cmp
inc
and
aad
mov
add
mov
jl
aas
cmp
sub
mov
push
add
roll
mov
jle
clc
mov
inc
in
ret
add
fistpll
loop
fs
jnp
dec
pop
jno
add
fidivl
je
shlb
imul
xchg
mov
mov
test
jb
out
and
test
movsl
fcoms
shrb
add
jge
cwtl
test
iret
cmp
xorl
addr16
xor
je
lret
mov
call
sbb
sub
push
cwtl
add
aad
sbb
push
out
sub
sub
ljmp
sub
xor
jmp
sbb
add
roll
add
les
pop
add
dec
andl
pop
lea
xchg
test
lock
cltd
addl
mov
push
xor
std
test
stos
scas
out
push
insl
inc
subl
xchg
add
scas
fsubrl
mov
add
mov
jbe
and
sti
icebp
inc
clc
sahf
sbb
std
mov
movl
cs
and
xor
test
xchg
dec
bound
idivb
push
add
jl
cmp
daa
cmpb
sub
jnp
push
clc
inc
fadd
jge
test
les
dec
pop
mov
xor
roll
scas
das
xor
add
out
fs
mov
add
ss
mov
add
nop
fs
ret
out
sub
and
adc
mov
rorb
xor
inc
xor
cmp
stos
and
and
add
mov
negl
loopne
icebp
mov
xor
jl
into
int3
xor
cmp
jo
inc
add
stc
add
add
mov
lahf
out
hlt
mov
out
mov
mov
pop
add
sti
es
stos
movsb
push
nop
add
or
jne
jecxz
popa
add
clc
mov
sub
addr16
pop
test
mov
or
imul
inc
jb
cld
and
add
sub
in
push
push
cld
or
in
lock
nop
mov
cmp
fwait
mov
add
mov
jno
adc
rorb
adc
add
push
adc
pop
sub
mov
mov
jmp
xchg
mov
pusha
test
in
jg
out
dec
xor
das
adc
int3
sub
sbb
add
adc
sti
fidivrs
out
cli
int
mov
movsl
cmp
add
adc
in
movsb
mov
call
iret
pop
sar
pushl
aaa
clc
or
push
or
xchg
ds
and
outsl
mov
movsb
in
add
xchg
push
mov
int3
insb
repnz
and
orl
xchg
ffreep
pushf
movhps
add
adcb
add
push
cltd
push
push
sub
imul
in
icebp
mov
sahf
add
and
cmp
adc
inc
jg
nop
shll
notb
pop
sub
cwtl
jle
xchg
dec
in
inc
add
aam
dec
mov
in
adc
dec
je
shr
push
add
fisubrs
mov
or
cmp
outsl
shl
mov
sub
xchg
sub
repnz
rorl
test
or
add
pop
xorb
je
push
mov
das
cmpsb
or
es
in
orb
cmp
sbb
mov
dec
cmpl
clc
cld
pusha
push
aam
testb
cmp
jl
gs
cmpsb
push
mov
add
pop
in
push
add
call
push
jo
lock
and
jb
cmp
dec
mov
push
fldt
loop
mov
push
sbb
add
add
test
adc
add
mov
pop
pop
dec
movsl
add
lahf
dec
push
rorb
loopne
push
xchg
mov
je
add
mov
mov
sbb
lods
adc
movsb
loopne
add
mov
xor
jp
push
test
mov
test
lahf
subb
sub
add
daa
bound
push
xchg
add
outsb
repnz
stos
mov
dec
pop
mov
sbb
add
fcomi
pusha
dec
out
add
lds
jp
sub
sbb
xchg
sub
mov
push
jle
ja
scas
flds
adc
sbb
push
test
fmuls
test
loopne
sub
pusha
push
mov
stos
fs
notb
add
sahf
gs
add
pop
inc
jl
pushf
sub
add
add
xorb
push
pop
jecxz
cmp
xlat
jns
je
add
fildll
in
xchg
add
pop
cmp
and
xor
cmpsb
and
add
in
lret
daa
sahf
push
pop
fidivs
dec
inc
stc
jae
shrb
dec
cwtl
div
and
dec
cld
add
jg
dec
adc
mov
add
xor
adc
mov
leave
jbe
ret
add
int
add
ret
pop
ds
mov
xor
push
pop
pop
push
add
add
push
xor
repnz
jne
icebp
fistpll
add
inc
ret
les
adc
and
or
in
aaa
iret
and
xor
add
int
pusha
dec
shll
aad
shrb
jp
add
sub
add
out
jo
pusha
pop
mov
cmp
push
add
or
mov
mov
push
sub
push
sbb
pop
in
lret
add
das
push
sbb
add
xor
mov
aad
add
jo
dec
or
or
add
pushf
cmp
fisubrs
and
clc
and
mov
push
push
push
push
icebp
sbb
add
or
insb
insb
xor
add
inc
dec
call
mov
rorl
fwait
loopne
fnclex
nop
pusha
hlt
pop
pop
decb
incl
loope
push
sbb
cmpsl
xor
push
push
cmpsb
cwtl
and
push
pop
push
pushf
adc
es
xlat
addb
outsl
or
cwtl
call
cli
dec
aam
add
sti
in
aas
test
sub
rorl
mov
test
fmul
inc
rcll
jnp
cmp
mov
sti
adc
in
mov
lods
in
adc
adcb
fmuls
je
and
inc
test
andb
repnz
mov
jle
push
add
push
and
lock
sbb
xchg
or
loopne
mov
pop
push
fsub
je
jns
stos
push
xchg
mov
pop
leave
push
dec
jno
add
popa
push
sub
stos
add
jmp
imul
cmpsl
adc
adc
pop
and
dec
enter
jp
inc
pusha
test
aad
mov
jo
push
push
outsl
repnz
pusha
and
or
in
add
mov
xor
add
jb
fdivrs
lds
cwtl
sbb
shrb
push
inc
fwait
dec
add
xor
add
add
inc
jg
push
loopne
leave
aad
fidivl
enter
add
sub
sti
lret
mov
dec
add
xlat
push
in
add
add
cltd
lea
or
pushf
lcall
subb
xchg
dec
js
add
repnz
add
rolb
jmp
dec
icebp
pop
sub
test
and
mov
push
mov
shlb
add
xchg
inc
aas
cmpsl
testl
std
adc
jl
push
cmp
sbb
stc
and
loope
add
jecxz
lea
fisubl
push
and
add
jae
or
movsb
add
mov
mov
enter
insl
lods
mov
push
lock
and
pop
lock
inc
push
add
adcb
mov
jb
mov
add
repnz
xchg
add
adc
mov
push
add
pushf
stos
inc
sub
loopne
addr16
rcrl
add
mov
fdivr
popa
loop
add
bound
or
cwtl
xchg
testb
mov
out
mov
inc
gs
sub
add
popl
inc
sbb
xchg
les
adc
add
fs
xchg
xor
mov
pushf
pop
aas
stos
mov
sahf
int
mov
ljmp
jnp
cmp
mov
xor
fildll
cld
xlat
or
pop
arpl
ret
and
mov
push
jl
cmpsb
fs
add
and
std
pushl
shlb
cs
pop
mov
mov
add
xor
lret
fadds
mov
pop
inc
movsl
bt
add
jb
loopne
inc
mov
mov
push
xlat
ljmp
ret
loopne
mov
cmp
or
hlt
stos
mov
notb
outsl
in
sub
pop
add
je
xor
jle
add
inc
js
pop
subb
lahf
mov
test
xor
adc
adc
push
add
jne
pop
adc
add
sahf
inc
cmpsb
lahf
add
or
addr16
xchg
addb
fisubs
mov
je
rclb
pop
and
cmp
mulb
jnp
cld
jl
jae
dec
add
jecxz
cmp
shlb
adc
or
add
add
pop
inc
jle
stc
in
and
add
xchg
push
lock
xchg
push
add
icebp
inc
xchg
push
push
jne
or
add
jmp
add
mov
ljmp
xchg
adc
add
xor
adc
and
ret
cli
test
add
ja
pop
push
js
pop
add
popl
fiadds
xchg
iret
mov
xor
pop
fdivrs
add
pop
jecxz
xor
pop
jae
mov
jp
daa
xor
scas
sub
pusha
add
adc
jno
jmp
add
incl
add
sti
mov
inc
sub
mov
xchg
btr
out
shl
stos
stos
sub
and
test
dec
sbb
add
jne
pusha
mov
jl
stos
je
sub
cli
jo
add
in
js
adc
mov
adc
lock
add
and
in
and
sti
loopne
pop
add
cli
jge
jae
pop
out
add
adcl
jno
outsl
test
lods
add
cmc
cwtl
rcrl
fmull
enter
add
int
push
daa
cmp
push
outsl
test
xchg
sub
and
pop
pushl
mov
out
cmp
dec
add
or
rcrb
add
call
inc
roll
dec
push
lret
sbb
inc
xchg
pop
movsb
add
push
jae
jmp
fucomi
or
adc
add
pop
clc
les
notl
movsb
xor
outsb
cmp
call
push
jmp
jmp
sbb
pop
loope
jg
stos
scas
and
pop
addr16
xor
sbbb
adc
mov
add
dec
jp
cmp
sub
xchg
aas
int3
test
daa
addr16
mov
leave
add
push
mov
cwtl
pop
mov
dec
inc
add
jmp
scas
jo
and
push
mov
iret
ljmp
cmpsl
push
cmp
mov
or
nop
bound
sub
jg
lods
leave
les
mov
jns
inc
adc
push
add
add
and
in
sbb
cmpb
push
mov
jnp
sbb
dec
decb
gs
add
xor
iret
hlt
mov
scas
xchg
push
loope
mov
fidivl
fs
mov
add
or
mov
scas
add
pop
clc
aad
push
add
jo
mov
pop
daa
mov
sbbl
lock
sahf
iret
xchg
loopne
in
int3
jo
les
add
xchg
test
call
dec
test
das
pop
subl
ss
add
and
push
sbb
cld
stos
mov
push
outsb
add
dec
jmp
movsl
imul
out
icebp
repnz
push
mov
lods
fsub
jo
ds
jp
adc
adc
push
push
aaa
sub
inc
mov
nop
test
loop
and
sar
xor
jno
fsubl
add
lods
lea
in
cmp
cmp
frstor
add
in
adcb
adc
ret
and
repnz
adc
std
dec
test
rcr
inc
add
lds
pushf
enter
and
fcomps
movsl
xchg
push
push
add
popa
jae
ss
pop
add
sbbb
cmova
sub
imul
adc
adc
aam
js
xchg
mov
add
fsubl
sub
push
adc
add
jbe
jo
xor
add
adc
testl
xorps
ds
test
xchg
loop
or
cmp
subb
mov
and
filds
shl
inc
dec
incb
lods
mov
adcb
fsubl
sub
cmpsb
sub
std
subb
por
imul
add
jp
mov
sub
shrb
inc
pop
sbb
xchg
push
shlb
into
add
movsl
xor
pop
pop
pusha
cwtl
and
add
dec
xor
test
xor
xor
rolb
add
rcrb
aad
add
mov
ja
in
dec
mov
into
ljmp
jae
inc
or
idiv
in
pop
fcoml
sbb
clc
push
pop
adc
js
fildll
add
jnp,pn
xadd
dec
sbbl
les
add
mov
sbb
xor
add
cmpsl
testb
jge
call
loop
sub
faddl
in
cmp
andb
insl
add
cmp
fnstsw
je
sub
inc
sub
test
in
es
and
dec
cmc
or
daa
stc
add
pusha
subl
adc
fdivl
jge
xchg
insb
push
sahf
inc
mov
icebp
jne
add
jmp
repz
sub
loope
lock
movsl
dec
insb
fdivrl
adc
mov
negb
push
ret
sub
shll
xor
jge
pop
jo
or
dec
sub
sub
cmp
add
mov
std
sbb
cmpsb
imul
mov
xchg
mov
add
loop
mov
jmp
fimuls
jo
sbbl
das
addr16
cmc
inc
dec
and
adc
add
xchg
xchg
mov
xor
mov
sbb
add
push
xchg
pop
push
orl
dec
inc
mov
adc
and
xchg
add
int3
jecxz
stos
or
push
bound
xchg
cmp
and
popl
adc
jbe
in
fmuls
inc
adc
test
lods
adc
push
mov
dec
dec
add
fiaddl
lret
pop
mov
scas
xorl
xorb
fmul
fadds
add
out
imul
bound
inc
add
in
sub
xlat
out
loopne
or
jnp
movsb
cmp
push
dec
data16
and
mov
xchg
adc
int
or
int3
es
fwait
clc
mov
or
or
push
shr
in
test
push
les
and
imul
xchg
sbb
add
test
loope
ficompl
push
mov
hlt
cwtl
fs
push
sbb
dec
push
loopne
leave
imul
cmp
into
rcll
cmp
sub
ret
push
fmuls
sbb
int
aam
add
mov
pop
push
push
push
out
xor
xor
xchg
add
adc
jbe
fisubrs
sbb
pop
mov
add
jecxz
scas
or
data16
add
dec
sarl
mov
les
dec
adc
push
filds
ljmp
outsl
push
cmp
inc
add
cld
jg
das
mov
push
movsb
insl
sub
or
pop
imul
gs
pop
sarb
add
stos
mov
flds
adc
cmp
or
fwait
xchg
test
add
stc
dec
fildl
cltd
inc
and
aas
mov
push
xor
mov
xchg
mov
imul
pop
adc
movsb
sub
arpl
les
jne
xchg
add
mov
xor
adc
add
flds
out
pop
add
inc
mov
add
andl
xchg
ds
inc
pusha
adc
jne
nop
push
sbb
push
inc
and
add
push
fcompl
cld
add
push
cmpsl
inc
imul
lock
push
jnp
repnz
hlt
popa
incb
clc
mov
adc
sbb
ret
shlb
adc
add
jp
xchg
dec
mov
mov
inc
mov
add
cmp
add
call
jbe
mul
cmp
push
or
mov
add
or
jne
data16
jle
add
push
frndint
add
cmc
filds
movsb
daa
test
and
cs
out
or
mov
movsb
arpl
cmpsb
in
lds
or
cmp
jbe
pop
pop
loop
add
mov
dec
clc
pushf
add
hlt
push
mov
add
int3
mov
loope
xor
fwait
imul
scas
pop
or
incl
js
aad
push
add
mov
into
cwtl
les
insl
mov
xor
orb
lahf
xchg
addb
pop
jo
ds
cmp
out
mov
fildl
sahf
scas
insl
jecxz
jo
adc
push
call
sbbb
inc
jne
add
mov
stc
sub
cld
sbb
in
lods
inc
push
cmp
adc
jnp
jo
lret
je
pop
dec
daa
bound
dec
cmp
inc
in
int3
aad
or
fs
pop
cmp
xchg
orl
cmpsl
sbb
pop
mov
test
add
dec
lcall
xchg
jp
call
repnz
pop
mov
sbbl
inc
inc
add
bound
sub
sbb
cmc
xchg
mov
mov
add
sbb
mov
or
lahf
call
dec
movsl
ja
movsb
test
cld
adc
mov
and
push
xchg
es
add
jne
cmp
loopne
jbe
or
enter
mov
add
mov
cmpl
popa
add
lea
xchg
add
add
out
or
jle
pop
mov
xchg
adcb
lods
add
fildll
adc
pop
or
pop
movsb
add
inc
dec
roll
or
jge
and
mov
inc
das
lods
insb
aam
sarb
and
sbb
mov
or
add
nop
adc
dec
popf
arpl
or
mov
push
ss
add
subb
add
mov
add
repz
arpl
mov
sub
jns
add
mov
and
mov
add
cmp
dec
sbb
hlt
jo
and
mov
das
fsubrl
inc
add
push
mul
xor
insl
add
mov
repnz
xor
add
jge
push
adc
clc
insl
add
pop
xor
adc
push
xlat
das
dec
pop
cmp
adc
inc
lock
dec
pop
cld
scas
pop
popa
add
inc
movsl
imul
push
cmpb
and
add
mov
push
add
or
cmp
add
push
js
shlb
and
sbbb
aam
out
insb
nop
xchg
repz
rorl
xor
les
insl
cmc
add
inc
dec
add
imul
loopne
mov
xor
loop
inc
cwtl
sub
shlb
jmp
dec
testb
xor
lcall
out
sub
pop
or
cmp
lcall
jb
xchg
mov
pop
incb
add
orb
nop
cmp
ljmp
add
movl
fldl
das
ja
cld
cmpl
mov
test
imul
add
shll
movups
mov
sbb
lret
jl
add
or
mov
pop
stos
push
outsl
sub
addb
dec
add
sbb
mov
push
pop
add
and
jo
or
shrb
mov
sbb
int
popl
xor
and
push
lods
mov
nop
loop
pop
pop
sbb
lahf
rorl
ja
add
mov
test
stc
mov
iret
mov
aad
sbb
fs
and
cs
imulb
push
xor
or
aad
das
daa
repz
andb
and
int
subb
push
pop
rorl
add
sbb
jbe
sbb
xchg
inc
adc
pop
popa
shlb
push
in
pop
cltd
pusha
push
test
sbb
popf
add
fiadds
imul
sahf
and
orb
mov
lret
mov
ds
pusha
mov
cmp
aad
push
sbb
and
sub
stos
shrb
clc
adc
test
aam
jl
lcall
insl
add
out
call
inc
mov
mov
int
notl
mov
aam
sahf
insb
fistpl
cli
jecxz
call
jne
sarb
cmp
push
int3
pop
jecxz
mov
rorb
ret
das
xchg
mov
aam
imul
pop
outsb
sarl
mov
lcall
fwait
add
jno
cmp
cwtl
jo
aad
mov
loop
adc
ljmp
cmp
add
adc
jg
cmp
movsl
jp
std
call
or
jno
mov
or
add
in
movaps
repnz
arpl
fwait
or
pop
je
lods
dec
jmp
sahf
inc
push
fdiv
adc
adcl
test
inc
add
push
pushl
ljmp
out
enter
jno
inc
mov
cmp
sub
cmpsb
iret
xor
adc
xchg
adc
xchg
aad
orb
jne
or
adc
cli
or
xchg
add
lret
loope
xchg
shl
cmp
cmp
and
iret
cmp
lret
add
push
addr16
push
nop
decl
or
shl
push
adc
push
lea
inc
xor
insl
or
cwtl
pusha
or
push
dec
out
jae
add
pop
leave
push
pop
push
mov
dec
out
add
sbb
add
jecxz
test
verr
jge
pop
in
lods
add
add
push
out
cli
inc
cmp
lret
xchg
push
repz
or
cmp
add
fsts
movsb
sti
add
test
scas
pop
mov
add
insb
cmpsb
xor
and
xor
sbb
push
push
jnp
nopl
orb
sbb
add
dec
sbb
mov
pop
mov
jno
add
sub
push
popf
mov
sbbl
outsl
enter
cld
inc
lret
nop
mov
pushf
sti
or
xor
pop
jo
add
adc
xchg
xor
add
data16
add
call
and
data16
or
push
add
test
push
xchg
hlt
test
ja
clc
mov
bswap
cmpb
mov
int3
lds
fwait
enter
shl
dec
jbe
shlb
aaa
mov
rcll
adc
cld
mov
push
add
mov
stos
fs
sbb
sarb
pop
shlb
ljmp
sti
jno
sbb
aas
pop
enter
ja
add
lods
gs
test
int
in
or
dec
xor
faddl
insl
add
lret
pop
cmp
test
fcomps
rorb
add
sub
mov
fsubs
subb
jo
dec
out
adc
dec
and
out
scas
test
ss
fistpl
or
sub
iret
mov
sbb
xor
inc
popa
outsl
test
pusha
dec
add
jbe
jmp
test
sbb
sub
pop
add
cmp
in
inc
cltd
jns
shrl
cmp
test
sbb
sbb
cltd
incb
inc
mov
add
inc
mov
dec
add
jmp
sbb
cwtl
repz
sub
jnp
insb
subl
cmp
popf
loopne
cli
or
lds
jae
sbb
fcom
sbb
adc
cs
int3
xorb
imul
xor
sub
les
push
mov
enter
adc
dec
jle
sbb
shll
cmp
push
or
aas
pusha
xor
imul
test
xor
sub
mov
std
pop
rcrl
gs
or
mov
jl
xor
pusha
dec
inc
lods
add
cmp
mov
loopne
jl
or
inc
push
decb
scas
inc
adcl
xchg
inc
push
xchg
mov
sbb
ds
cwtl
pusha
dec
enter
mov
push
sub
lods
mov
dec
push
push
xor
fimull
mov
sub
mov
inc
mov
lock
lea
inc
sub
enter
pop
cmp
mov
mov
adc
add
mov
inc
and
incb
push
jo
adc
loopne
cmp
sbb
movsb
xorb
or
les
or
shlb
push
cmpsb
add
mov
enter
ret
popa
rolb
sarl
mov
xchg
inc
xchg
pop
gs
add
ret
fistpl
imul
out
or
jno
ret
mov
jb
popf
pop
add
jge
lds
mov
add
cmp
add
test
dec
mov
shlb
ss
outsb
and
es
hlt
inc
out
jo
and
fbstp
jle
add
into
je
std
lcall
add
push
push
clc
popf
inc
loopne
sbb
insb
mov
lret
jg
jno
add
adc
add
int3
push
mov
xor
xor
popa
xchg
scas
add
nop
rorb
push
pop
pop
movl
arpl
add
inc
test
mov
cld
cmp
jmp
dec
sub
sbb
in
xor
add
dec
sub
mov
les
sti
fyl2xp1
loop
add
sbb
das
pop
xchg
sbb
add
push
xchg
sub
sub
mov
lods
call
jb
ja
addb
cld
jne
orl
sbb
loop
psubsw
and
push
xchg
rcrb
scas
push
sbb
mov
push
cld
add
jae
sub
pop
into
jl
divl
out
push
pop
cwtl
je
and
dec
ljmp
psrlw
sbbb
arpl
pop
movsl
push
test
push
sub
lods
xchg
adc
xchg
nop
adc
mov
add
movsb
mov
mov
mov
mov
and
stc
mov
arpl
loope
and
daa
and
push
add
xchg
add
inc
and
or
jno
ljmp
mov
sbb
adc
loopne
sub
add
push
pop
dec
pop
das
adc
lock
pusha
or
outsl
in
lods
push
lds
cld
aam
mov
aas
or
push
sub
or
lods
rep
stos
sti
pusha
push
cmp
shlb
lcall
movsl
inc
lock
jb
arpl
mov
pop
fsin
add
enter
sub
pop
adc
xchg
shlb
lahf
shll
add
dec
or
inc
add
pop
jmp
or
push
push
clc
repnz
mov
ret
insl
out
push
sbbl
sbb
and
and
jno
or
dec
adc
push
sbb
cmp
push
sub
and
dec
inc
push
push
clc
pop
in
push
mov
scas
mov
sbb
movsb
sbb
adc
add
lahf
ret
mov
jbe
cltd
and
fadds
stos
imul
add
mov
mov
dec
sbb
nop
xchg
xchg
cwtl
add
fbld
mov
push
sti
inc
in
les
mov
add
xor
sub
add
add
lods
add
xor
repz
psubb
sbb
push
in
aaa
mov
call
sbb
or
mov
push
shl
add
lahf
daa
jns
cwtl
sbb
add
dec
add
pop
add
inc
adc
in
call
and
mov
and
sti
pushf
loopne
out
mov
aas
jmp
add
popf
popa
cmp
jnp
cmp
bound
inc
aas
mov
xchg
shll
pop
lret
adc
mov
fiadds
adc
mov
es
aaa
push
inc
xor
cltd
inc
jg
dec
lods
lahf
enter
stos
dec
cmc
loope
jl
add
loop
aad
mov
sti
pop
xchg
mov
jmp
xor
mov
xchg
cltd
pop
jae
inc
or
mov
add
ljmp
imul
add
push
fs
add
and
pop
xor
pop
in
add
js
jg
push
adc
in
dec
rorb
sti
mov
test
out
push
dec
inc
xor
pushf
sub
inc
jne
mov
cmp
clc
xchg
mov
aas
mov
cmp
aam
push
add
movsb
aaa
loope
sbb
sbb
sub
in
dec
jnp
adc
std
pusha
mov
aad
mov
pop
mov
fwait
push
pop
arpl
jno
dec
movsb
sbb
push
ret
sub
int3
sbb
addl
test
cmc
pop
adc
clc
mov
sub
jne
and
inc
ds
sbb
pop
push
jbe
cmp
aad
mov
mov
sub
cmp
jns
repnz
add
xor
xchg
fstp
xchg
add
jnp
repz
adc
lods
jns
dec
mov
pop
outsb
popl
dec
in
lcall
or
mov
push
mov
out
jae
xlat
push
lock
dec
enter
push
cmp
inc
out
repnz
push
test
add
adc
pop
stc
cmpsl
les
jb
add
xor
push
aam
xor
loop
cmp
cmpxchg
mov
roll
dec
out
cmp
sbb
or
sahf
imul
inc
or
and
js
xchg
add
dec
aad
push
insl
xor
pop
les
das
jle
add
lcall
sbb
xor
mov
movsl
add
imul
jnp
out
add
ds
add
adc
sbb
fisubrl
movsl
lds
add
fcomp
mov
lret
sbb
xorl
add
ja
dec
adc
pusha
inc
hlt
push
out
loopne
pusha
adc
dec
add
fs
cs
add
mov
push
stos
inc
push
into
in
and
mov
sbb
dec
aas
jns
push
add
cmp
leave
fmuls
ja
ja
pop
in
mov
jo
xor
sbb
sarl
push
add
xor
lret
lcall
cmp
testl
xor
jp
cld
test
ja
pop
fcoms
je
insl
sti
sbb
inc
add
or
add
scas
sbb
js
or
int
loopne
xor
das
adc
pushf
cmpsl
lea
cwtl
movntq
outsl
pop
mov
clc
loopne
add
js
mov
aas
jp
add
hlt
pop
jmp
fisubrl
add
lods
mov
dec
add
sbb
pushf
add
ljmp
add
adc
notb
add
int3
cs
fimull
divl
add
out
incl
enter
mov
or
test
add
or
sbb
stos
jnp
dec
xorl
jbe
int
or
mov
outsb
aas
imul
repnz
out
push
and
push
dec
repnz
outsl
sbb
inc
in
xchg
pop
add
fisubrl
xor
sbb
imul
fs
push
in
scas
loope
subb
push
je
lods
cmpsb
aaa
popl
int
add
dec
pusha
dec
dec
add
mov
lret
xor
hlt
add
enter
mov
add
dec
push
ja
cmp
add
cmp
js
sub
mov
push
push
mov
add
add
out
pop
add
adc
sarl
mov
dec
jg
add
stc
or
outsl
mov
rcrb
add
mov
xchg
xor
inc
sti
jmp
inc
sbb
xchg
sub
test
jo
add
inc
mov
stos
add
mov
scas
dec
aas
sub
push
std
test
jbe
dec
inc
mov
insb
add
bound
xchg
add
icebp
push
add
mov
sbbb
pop
insl
test
mov
in
push
pop
shrl
imull
xchg
clc
mov
mov
jge
jo
mov
gs
sub
add
sub
out
nop
mov
pushf
xchg
decl
cli
shrb
outsl
gs
stos
and
test
add
mov
add
push
pop
jb
jnp
push
push
iret
ret
aam
add
xor
adc
push
xchg
call
mov
cmp
cli
outsl
in
enter
nop
add
arpl
inc
fwait
xor
ret
sub
test
dec
dec
push
adc
add
xchg
fidivrs
ds
xorb
adc
jl
xchg
pop
cltd
gs
add
ret
mov
cli
cld
testb
xor
in
popa
add
mov
sub
or
sahf
orl
das
jae
daa
push
test
stos
add
adcl
add
rol
xchg
cmc
fsubr
out
jb
inc
out
fists
adc
inc
sbb
icebp
xor
pusha
add
aam
ljmp
cwtl
add
pop
popa
add
xor
ret
cmp
outsl
rcr
adc
icebp
and
sub
pop
or
xlat
int3
ret
aam
iret
pusha
xor
push
sahf
in
lock
ficoml
cmp
adcb
mov
and
pop
add
xchg
pusha
push
rcrb
int3
dec
cld
out
xchg
or
pop
insb
cli
pop
xor
jo
jno
jb
std
and
jl
add
mov
add
dec
lret
pop
aas
add
andl
jg
fwait
loopne
mov
or
add
orl
out
ljmp
cmp
jg
push
add
test
dec
mov
pop
inc
inc
nop
rclb
sbb
push
cld
mov
push
arpl
popa
insb
mov
addb
scas
cld
push
loop
add
sub
sbb
cli
loop
dec
push
push
jp
fs
xchg
xchg
sahf
pop
sbb
cmc
add
push
in
pop
test
dec
xchg
mov
xor
mov
add
xchg
sahf
int3
inc
push
xchg
fildl
or
dec
roll
sahf
push
add
ret
jae
inc
jns
push
sbb
mov
push
jp
fcmovne
dec
stos
mov
xchg
xchg
out
fiadds
les
push
jno
nop
out
pop
rclb
scas
xchg
inc
rolb
sbb
insl
and
jne
xor
cmp
sub
or
mov
xchg
ds
add
or
xchg
add
pop
mov
jo
ss
out
fcom
add
fidivrs
sbb
imul
jl
loop
dec
mov
mov
sbb
sahf
ud0
push
inc
hlt
hlt
pop
add
lcall
add
sub
into
cmp
inc
pusha
cmp
mov
arpl
pop
add
xor
shrb
incb
fdivrs
add
cltd
mov
or
adc
xor
orb
stos
repnz
aaa
pop
adc
shll
add
push
testl
jmp
int3
int3
int
add
xor
ja
sti
lahf
loopne
sbb
pop
add
jmp
xor
aas
mov
adc
dec
out
add
push
pop
lret
sub
jle
mov
mov
fildl
adc
mov
add
in
sub
and
xchg
xchg
loopne
mov
lret
clc
push
icebp
xor
mov
push
rolb
dec
out
push
mov
add
dec
scas
sub
and
out
jecxz
mov
or
pop
mov
shr
pop
movsb
and
in
cmp
mov
cmp
lea
pusha
dec
ljmp
jmp
cmpsl
jle
fldl
jnp
adc
lods
dec
mov
lock
add
xchg
cltd
pop
or
sbb
imul
mov
lea
inc
adc
shll
or
cltd
nop
mov
adc
pop
add
movsb
into
sbbb
movsl
loopne
xor
add
jne
out
inc
jge
aam
push
mov
ficomps
pop
inc
adcl
insl
fcomp
insb
movsl
pop
add
outsl
fcoml
jle
in
pop
sub
mov
pusha
push
cmpsb
test
mov
jb
subb
stc
push
inc
mov
loop
add
lods
loope
es
adc
dec
stos
xchg
mull
clc
scas
push
sub
pop
adc
enter
xor
in
sub
sbb
inc
cmc
or
pusha
dec
push
add
cmpsb
sbb
and
mov
xor
mov
and
cmp
fistps
mov
cmp
push
mov
mov
divl
jns
add
inc
and
sahf
xchg
adc
ret
mov
ss
pop
adc
scas
stc
lahf
dec
sti
add
add
aas
out
add
xchg
mov
push
or
addb
or
test
fstl
push
in
add
adc
fistpl
add
loope
push
incb
sub
lret
pop
push
add
xchg
add
lods
mov
dec
jg
push
jo
xor
sbb
mov
xor
jg
movlps
add
pop
jo
jae,pn
cld
add
push
loopne
lods
pusha
add
inc
push
cmp
xchg
inc
push
ljmp
cld
add
push
mov
pop
jp
mov
testb
repnz
fmuls
lods
add
insb
rclb
xchg
lret
jne
mov
scas
sub
dec
or
add
out
test
divb
lock
add
mov
icebp
xor
push
int3
add
arpl
or
test
sti
xchg
add
mov
mov
add
adc
jbe
add
ret
inc
ficomps
sbb
cmp
jo
jmp
add
arpl
sbb
add
adc
lret
push
add
dec
adc
sbb
inc
outsb
ror
insb
cmpsb
popf
stos
cld
mov
xchg
sbb
push
sub
jbe
test
or
nop
lds
nop
add
xor
in
dec
add
roll
dec
and
call
xor
dec
mov
cmpsb
in
mov
rclb
xchg
sti
cwtl
or
lret
enter
add
push
or
xchg
mov
jae
inc
sbb
add
add
lods
dec
icebp
daa
data16
out
jecxz
roll
cmp
fcoml
clc
pop
and
or
imul
lret
sbb
inc
je
mov
mov
cwtl
jg
test
xor
mov
lcall
pop
adc
xlat
ret
adc
in
add
fidivs
rcl
in
mov
shr
andl
inc
add
xchg
mov
mov
pop
inc
cbtw
mov
adc
fisttpl
sti
cltd
mov
cld
cli
jns
add
pop
xlat
jecxz
add
mov
add
mov
add
cld
pop
leave
pop
sarb
nop
in
and
fldl
xor
incl
add
popa
mov
outsb
arpl
inc
loopne
pop
sbb
and
loopne
inc
lock
fs
loope
xor
push
and
adcb
jl
outsl
addb
orl
in
or
sbb
xor
and
adc
sub
insl
sbb
xchg
stos
mov
popa
push
ja
inc
xchg
fsts
test
pushf
pusha
push
adc
imul
and
jo,pn
dec
sbb
push
mov
sub
ja
and
hlt
push
pop
add
adc
cli
push
sbb
adc
or
push
add
inc
mov
and
fdivs
orb
arpl
add
fiadds
dec
insb
aam
cmp
pop
inc
popa
fisubl
add
push
pop
sbb
fbstp
jb,pt
faddp
sahf
lds
add
lcall
stc
jns
add
and
ja
shl
add
add
cld
int
push
sub
xchg
add
push
rorl
insb
sbb
lret
ljmp
and
pop
pop
ret
xchg
add
jnp
sbb
arpl
movsl
add
pop
setb
sub
and
fwait
insl
lahf
add
adc
lock
pop
add
inc
ja
addb
nopl
mov
popa
pusha
int
add
push
out
dec
add
sbb
mov
pop
cmp
aam
inc
adc
out
dec
addb
push
addr16
jmp
sub
push
cltd
popf
sbb
add
xchg
lret
fildll
push
mov
inc
aas
mov
loopne
rorl
jecxz
sub
xor
loope
int3
icebp
cmp
jnp
mov
sahf
or
pop
addb
adc
in
movsb
mov
jb
clc
lahf
outsl
add
mov
or
push
mov
testl
push
pop
ficoml
dec
or
cmp
ljmp
dec
std
orb
xor
addl
rorb
add
jg
in
sbb
adc
inc
enter
mov
push
sub
jns
int3
jmp
cmpb
je
fbld
adc
dec
add
jl
jne
sbb
pop
fxch
add
shll
out
ret
add
jl
je
dec
mov
xchg
mov
call
jecxz
imul
imul
lahf
push
add
and
test
add
ds
push
inc
inc
fsts
sub
sbb
pop
addb
push
xor
cli
jl
sub
rcrb
icebp
test
jmp
sbbl
iret
loope
ljmp
icebp
add
ss
gs
cmpsb
push
xchg
adc
push
push
addr16
jg
xchg
mov
seta
inc
mov
movsl
add
scas
add
add
faddl
dec
ror
jae
add
stc
fsubp
or
add
adc
xchg
and
sub
add
inc
test
sbb
ja
mov
add
outsb
movsl
mov
add
pop
rorl
dec
xchg
repnz
mov
pop
and
adc
push
arpl
pop
andb
push
and
cwtl
call
xchg
jns
mov
mov
fmuls
push
flds
je
mov
fidivs
push
js
mov
xchg
and
add
ljmp
in
hlt
add
mov
mov
fucomp
and
pop
popf
lds
add
cld
inc
sarl
adc
mov
outsl
lea
dec
push
sar
sbb
sub
lahf
sub
stos
cmp
dec
xchg
aas
dec
and
or
jg
cli
sarl
push
aas
popa
test
and
popf
pop
out
push
and
jae
add
pop
xor
in
xchg
sub
xor
add
mov
add
push
ret
add
mov
adc
or
jmp
inc
nop
xchg
pop
loope
and
pop
cld
mov
aam
mov
out
jnp
or
add
fiadds
lods
pushf
cmp
dec
cmp
paddb
or
add
xchg
aaa
mov
add
sub
pushf
scas
inc
push
push
xchg
xor
inc
out
add
ret
adc
pop
fcom
insb
cmp
push
rclb
sbb
mov
stos
rolb
ret
add
or
pop
sub
shrb
mov
out
lock
dec
inc
shrb
sub
ret
and
ljmp
mov
aas
gs
imul
xchg
and
inc
push
je
cmc
xchg
rcl
pop
cmp
and
xor
sbb
jl
add
sub
push
lea
inc
mov
and
add
dec
or
fsts
sub
int3
add
jg
imul
int3
push
inc
scas
mov
or
push
sbb
lock
mov
mov
add
pop
mov
fcompl
cmc
dec
add
test
and
push
pop
aaa
xor
popa
xor
repnz
add
or
scas
mov
ss
push
and
sbb
jmp
test
out
mov
pop
je
add
sbb
jp
xchg
pop
test
in
sub
sbb
test
pop
bsf
and
inc
stc
cmp
add
popf
sahf
mov
out
popa
inc
xchg
idivl
lahf
in
mov
loope
dec
mov
test
adc
bound
int
xor
roll
jg
pop
mov
pusha
and
cmp
movsl
add
mov
xchg
push
test
xor
pop
arpl
jb
mov
jmp
or
imul
adc
cmp
mov
lods
sub
jno
mov
rcr
mov
or
or
hlt
insb
jl
xor
loopne
fists
add
cmc
pop
lret
sti
mov
and
getsec
jno
push
pop
push
inc
jge
sub
lret
test
cmp
addr16
xlat
aas
enter
push
cmpsl
aad
shl
pop
test
sub
sub
shlb
pop
mov
dec
mov
cmp
add
test
in
sbb
repz
and
setae
test
insb
dec
loopne
in
add
mov
mov
adc
loopne
les
add
iret
dec
xor
enter
mov
cmp
lock
xchg
cmp
cmpsb
outsb
sti
push
add
movsb
dec
and
push
dec
cld
stos
add
mov
cs
and
inc
aaa
fstps
add
sbb
scas
mov
push
out
xchg
add
es
cmpsb
dec
push
and
add
adc
mov
test
mov
addb
aad
cmp
pop
add
add
adc
add
and
hlt
mov
pop
sub
inc
aad
ficomps
clc
loopne
stos
test
add
and
dec
push
sarb
sbb
imul
std
loopne
jae
add
inc
mov
and
rolb
inc
push
sbb
mov
inc
out
jo
pop
add
cmp
xlat
add
out
add
cs
jp
cmp
add
data16
push
sub
pusha
mov
cmp
testb
dec
jmp
ficoml
add
hlt
cmp
dec
mov
add
imulb
add
fisubrl
jp
mov
out
push
test
inc
pop
shrb
xor
cmp
faddl
cs
and
cmpl
cltd
ret
out
add
sahf
in
or
stos
sub
int3
add
cld
roll
test
popf
push
jo
push
mov
pop
testb
mov
and
mov
out
fiaddl
rcrb
cli
mov
add
or
in
aad
clc
push
insb
mov
dec
ljmp
jnp
pxor
arpl
add
lret
jo
jecxz
xchg
addr16
add
mov
das
push
cmp
arpl
sbbl
inc
cmp
jle
or
sub
lock
repnz
cmc
jecxz
nop
dec
test
push
fiadds
aas
rcr
cmpsl
loopne
ja
addl
jg
daa
int3
mov
push
mov
mov
arpl
jp
add
fcompl
sub
loopne
movsb
add
loopne
jle
add
inc
and
pop
cmp
push
mov
pusha
mov
xchg
add
jg
enter
add
rorl
inc
les
loopne
inc
lods
pop
mov
inc
jb
ret
sub
sub
add
mov
repz
aad
cmp
xor
jge
rolb
loop
fisubrl
sub
lock
bsr
or
push
int3
outsb
pop
push
mov
add
adc
movsl
out
jecxz
sarb
fwait
pusha
xor
je
jmp
and
in
sahf
mov
outsb
add
loopne
jge
and
int3
test
and
and
popa
mov
push
add
pusha
rdtsc
mov
scas
jb
add
cwtl
ret
stos
in
js
pop
add
loope
inc
sub
inc
dec
dec
mov
xchg
add
mov
loopne
dec
jae
xor
imul
push
clc
xchg
and
jbe
lcall
rolb
mov
add
dec
xchg
jge
cmp
jg
int
add
rorl
xchg
push
lods
and
sbb
or
pusha
add
and
mov
or
jno
add
sbb
outsb
adc
add
in
cld
or
roll
subb
xchg
jno
push
or
jmp
adc
rep
mov
sub
jb
hlt
push
sub
mov
inc
xlat
in
and
push
mov
roll
std
lods
or
stos
in
push
idivl
dec
jo
jns
add
sbb
adc
lock
les
fwait
shr
cmc
stos
in
aas
sbb
add
xchg
cmpsb
dec
insl
add
pop
xchg
sub
jne
cmpb
adc
in
inc
add
stos
or
nop
xchg
xlat
xchg
loope
hlt
test
popa
in
dec
sarl
jns
movsb
sbbb
scas
ljmp
shll
xor
adc
bound
loop
cld
mov
or
cs
scas
stc
and
adc
ret
lcall
push
pusha
enter
fwait
test
xchg
stos
out
test
adc
push
cmpsb
inc
out
popa
cld
add
mov
nop
sub
sahf
ds
pusha
cmp
dec
and
repz
es
xchg
pop
scas
dec
add
adc
adc
adc
push
adc
inc
add
scas
loopne
jg
jp
aam
je
incl
test
aas
sbb
adcl
js
add
cmp
lahf
cmpsl
push
mov
add
mov
pusha
shlb
outsb
loopne
sub
mov
hlt
rcrb
sahf
add
mov
xor
out
push
mov
mov
aas
pop
sahf
jae
je
mov
out
pop
rolb
das
int
add
adcb
cmp
sbb
xor
dec
add
movsb
mov
adc
push
mov
push
call
mov
jne
pop
adc
dec
jecxz
push
subb
stos
mov
add
js
push
xchg
mov
out
push
in
aad
test
xorb
sbb
mov
stos
ficoms
mov
cltd
pop
add
xchg
in
ror
or
xchg
imulb
cmp
or
mov
pop
aas
maxps
fnstenv
sub
daa
or
cwtl
add
mov
inc
lret
aaa
pop
clc
pusha
add
mov
cmp
stos
shl
xor
arpl
imul
pop
lock
cmpb
and
xchg
js
add
iret
sbb
mov
jg
xchg
and
pop
mov
dec
xor
decl
pop
sub
je
push
rolb
stos
xorb
lea
loope
das
add
sub
jbe
lret
sub
pop
idivl
xor
jmp
hlt
sub
add
sarl
add
iret
mov
xchg
shl
or
pop
mov
fstpl
dec
loopne
mov
imul
mov
adc
ss
pop
jo
es
xlat
dec
aas
mov
pop
pop
and
ret
add
loopne
push
add
push
mov
sbb
js
add
xor
lea
add
jg
sbb
roll
push
add
push
icebp
cli
cmp
add
add
pop
hlt
loope
int3
adc
xor
stos
or
mov
xorb
mov
sbb
ds
je
fwait
sbb
lds
int
add
leave
jecxz
push
fcoms
sub
sbb
sub
or
stos
fisttpl
lds
sub
adc
icebp
add
rorl
lret
sub
mov
pushf
pop
bound
mov
push
mov
xor
cmp
jo
and
shr
push
adc
inc
or
into
push
and
sti
mov
test
add
popf
xor
jmp
into
ficompl
ss
xchg
lock
push
mov
push
add
mov
fistpll
lldt
mov
test
jge
loopne
jo
add
sahf
mov
pop
jno
jp
xchg
aad
or
and
cltd
int3
add
push
mov
ficoms
cmpsl
sub
fadds
pop
out
sahf
fadd
mov
testb
cmp
and
xor
jl
add
jge
pop
and
pusha
cmpsb
addb
fs
xor
pop
sahf
add
insb
sbb
dec
outsb
cwtl
push
mov
add
push
scas
and
push
mov
scas
sub
in
nop
es
jns,pn
cmp
sub
mov
ja
pusha
js
mov
jp
inc
sbb
xchg
sbb
cmpsb
lcall
inc
mov
cmp
movsb
add
ret
jge
pop
stos
add
pop
add
enter
add
sbb
in
aad
cmp
movsb
add
leave
pop
cltd
hlt
xor
jns
into
cwtl
mov
xlat
add
push
cs
mov
sti
stos
add
add
sbb
ljmp
dec
cmp
add
jbe
mov
inc
stc
rcrl
jp
loopne
aad
int
mov
jbe
fwait
xor
stos
sahf
or
mov
and
cwtl
lret
push
cld
in
or
lods
iret
loop
or
dec
popa
sub
jb
cmp
inc
fisubrl
sbb
mov
xor
scas
mov
add
pop
fimull
and
es
add
mov
sbb
mov
les
out
add
icebp
mov
lock
add
fwait
xchg
adc
xchg
cwtl
js
add
cmp
jae
leave
add
and
cmpsl
xchg
add
stos
out
adc
out
add
push
sub
sbb
add
cmp
xor
add
jns
enter
mov
or
insl
push
mov
push
inc
and
adc
mov
mov
pop
mov
jle
mov
das
fstl
call
popf
mov
add
mov
movsb
jp
sub
jecxz
jle
sti
mov
add
int
mov
cmp
mov
jno
inc
push
jne
jp
addb
pop
xchg
inc
add
mov
jge
pop
roll
push
mov
and
cmp
mov
add
pop
mov
adc
divl
nop
xchg
and
ja,pt
cld
add
add
dec
mov
outsl
add
fcoml
stc
imul
add
jg
cli
enter
jp
sbb
pop
sti
pop
dec
icebp
xor
pusha
mov
push
sbb
js
add
outsb
or
ret
out
or
add
in
sahf
mov
ja
shl
lock
and
lods
std
idivl
jae
out
push
es
stos
dec
inc
or
pop
jg
test
lret
arpl
xchg
testb
xor
das
add
add
aaa
or
mov
call
addb
test
clc
out
pop
add
shll
and
pop
xor
cltd
or
push
jns
rolb
aaa
out
push
orl
mov
lds
cli
add
mov
add
hlt
mov
dec
jle
inc
or
cltd
insl
pop
adc
cmp
xor
mov
pushl
flds
into
xchg
fadds
fistpll
outsl
int
lret
mov
mov
add
sub
cmp
repz
add
jg
stc
in
into
fwait
outsl
lcall
mov
fisttpl
fdivrs
xchg
arpl
sub
out
xchg
fildl
xchg
dec
scas
jo
pop
cs
repz
lock
fisubrl
add
sub
aam
add
jge
sub
mov
and
bound
cmp
add
in
jmp
scas
cwtl
and
jge
lds
adc
out
add
push
or
cmp
lock
addl
gs
and
dec
dec
mov
loope
inc
xchg
add
stc
je
out
sbb
sbb
dec
mov
les
add
stos
add
sbb
daa
fimuls
rorl
mov
out
in
cmp
movsl
adc
sahf
pop
or
jge
andb
clc
inc
cli
dec
shl
icebp
xor
sbb
loope
add
sti
frstor
test
dec
push
inc
pushf
push
rolb
stos
cltd
push
call
cmp
dec
scas
jl
sbb
lcall
xor
xchg
packuswb
outsb
and
mov
mov
add
lret
int3
movsl
jl
xchg
push
add
icebp
sub
daa
add
xchg
hlt
jbe
add
es
sbb
jnp
inc
ret
push
and
dec
jbe
lcall
add
add
aaa
fsub
push
loopne
incl
push
out
outsb
fs
lea
and
push
pop
iret
mov
xor
adc
pop
cmp
add
jg
in
fnstenv
add
jb
pushf
pop
loopne
mov
aam
push
je
outsl
jno
pop
xchg
mov
add
jmp
fldt
testl
ret
sbb
push
mov
xor
inc
inc
in
or
push
sub
test
push
popa
dec
inc
les
add
pusha
jns
cmpsb
add
rcr
scas
jecxz
inc
jl
cmp
inc
add
les
dec
inc
xchg
aad
sub
cltd
jle
dec
pop
shll
jge
add
shll
push
movsl
mov
loopne
sbb
xchg
add
mov
push
cmp
xchg
add
sub
add
shl
pop
jl
std
add
jg
cmp
push
push
mov
stc
insl
mov
rolb
xor
xor
sti
mov
subl
mov
rcll
mov
cmp
fisttps
mov
dec
into
fadds
mov
popf
stos
pop
imul
pop
add
mov
add
sub
bound
add
jmp
adc
pop
push
cltd
adc
cmp
xorb
ja
clc
popa
fs
adc
andb
shll
and
xchg
sub
test
sub
imul
sarb
pop
repz
in
mov
and
in
icebp
mov
adc
push
sub
or
mov
inc
sbb
nop
lods
outsl
jns
mov
push
mov
stc
enter
pop
fsubr
add
mov
and
sbb
in
mov
call
pop
shrb
add
inc
fidivrs
sub
mov
ret
rcrb
dec
pop
loopne
arpl
adc
mov
cmp
and
leave
stc
add
repnz
mov
mov
imul
jp
add
lcall
mov
stos
add
push
mov
add
inc
sti
sub
pop
add
jle
dec
pop
pop
and
das
int3
test
inc
fwait
cmc
and
mov
mov
cmp
inc
shrl
lahf
xor
jne
pusha
adc
add
insl
stos
ret
stc
out
pop
es
add
aad
add
jne
push
add
xchg
aas
scas
scas
mov
fsubrs
add
lock
adc
push
data16
movsb
pop
mov
cmp
and
pop
loop
lret
cmp
sbb
push
clc
adc
adc
sahf
mov
add
xchg
fldl
pop
xchg
jge
add
mov
cmpsl
scas
push
cmp
enter
add
jbe
jl
mov
pop
aas
adcb
cmp
in
sbb
xchg
jo
clc
jge
jmp
aad
in
add
dec
pop
rclb
add
lea
inc
xor
xor
inc
or
mov
je
insb
cmpb
push
jge
xchg
call
nop
sti
add
fstpl
les
out
mov
ret
adc
addb
notl
insb
cwtl
rclb
addb
xor
adc
add
jl
sbb
jo
add
pusha
imul
or
roll
test
fisubs
int3
add
mov
pop
mov
pop
pushf
enter
sbbb
add
inc
ds
cmpsb
mov
jle
jmp
das
add
imul
push
pop
ficoms
cmp
pop
dec
dec
add
ds
add
pushf
and
mov
test
mov
fidivl
sub
je
pop
push
cmp
pop
lret
enter
sub
and
in
push
lock
or
mov
out
xchg
in
ss
cmp
sub
push
ficompl
scas
sbb
loopne
es
push
mov
call
stc
and
repz
std
mov
push
sbb
pop
push
add
sub
int3
add
xor
add
loope
jne
shlb
js
add
mov
call
add
addr16
scas
add
daa
shlb
gs
sub
add
and
fildl
sub
adc
sub
mov
mov
sub
add
test
pushf
bound
xor
mov
add
loope
mov
cmpsl
enter
cmp
div
push
mov
add
int
xor
das
add
fsub
or
lock
xchg
or
enter
std
cmp
add
adc
nop
mov
xchg
cmpsb
xor
out
ja
jns
cs
outsl
add
add
lock
rorb
push
je
out
gs
nop
jge
add
data16
jecxz
xchg
not
xchg
std
shlb
add
cs
add
sbb
add
popa
jns
mov
xchg
sub
rol
pop
mov
aam
adc
pop
scas
add
pop
adc
lock
mov
out
push
fists
lahf
out
pop
mov
jecxz
dec
adc
icebp
hlt
sbb
ds
add
out
movsl
push
ret
add
lea
or
inc
mov
add
push
xor
hlt
call
pop
or
pop
pop
pavgb
push
movsb
cmpsl
aam
and
xor
sahf
cmpsb
clc
mov
jnp
sarb
pcmpgtb
push
inc
inc
fwait
sar
add
cmp
lret
fadd
pushf
dec
xor
fadds
pusha
xchg
dec
and
leave
rolb
fmulp
and
jb
cmpsb
add
scas
add
mov
push
add
push
jle
add
cmpl
push
call
jmp
sar
ud1
ds
jp
or
jle
lahf
cld
out
movsb
xor
mov
add
add
lock
cmp
push
enter
jp
dec
hlt
sarb
add
test
pop
roll
jle
xchg
loope
jno
pcmpgtb
dec
mov
dec
shl
cmp
xor
add
xchg
pop
jo
fistpl
aad
or
jbe
in
add
push
lret
test
mov
add
sbb
inc
mov
xchg
xchg
lock
lods
xchg
daa
int3
sbb
and
orl
das
std
js
xor
xchg
and
adc
icebp
pop
mov
sbb
jb
adc
push
mov
sarb
nop
add
out
pop
push
mov
and
andl
lcall
imul
cmp
mov
inc
mov
push
cmp
mov
add
pop
lahf
mov
pop
sahf
sbb
sub
pop
mov
das
mov
into
rol
call
fldt
add
or
add
sahf
fwait
movb
ljmp
les
lea
mov
aad
adc
enter
cmpsb
mov
xor
xor
and
mov
mov
cli
sbb
aam
rclb
test
jmp
push
xchg
rorl
cmp
shrl
fnstsw
movl
addr16
cmp
das
imul
mov
add
add
data16
sbb
cmp
xchg
lods
loop
aad
xchg
and
add
imul
ret
sub
in
pop
pop
into
pop
out
lret
and
rcrb
lahf
das
jb
xor
les
xor
add
sar
pop
xchg
aam
bound
sti
add
jp
rclb
dec
add
cmp
jbe
mov
lds
in
adc
push
test
sbb
les
and
in
add
out
or
dec
push
adc
out
add
inc
mov
jp
push
mov
filds
cmpsb
cli
call
and
pushf
out
mov
mov
add
or
cld
je
es
lods
cmp
clc
pop
jl
stos
push
xor
ficompl
pop
rolb
dec
mov
add
adc
add
stos
stc
adc
jp
jns
sbb
cmp
mov
ljmp
shlb
in
or
inc
jne
sbb
aaa
call
sbb
lret
mov
es
pop
out
add
scas
mov
push
imul
cmp
cmpsl
push
mov
dec
mov
add
repz
cmp
ret
call
sub
add
imul
pop
dec
sub
bound
fldt
add
sbb
cmp
push
ljmp
pusha
cmp
ret
xor
dec
and
adc
jecxz
add
scas
pop
adc
cmp
stc
add
dec
or
and
mov
sub
loopne
outsl
xchg
push
cmp
add
call
orl
or
push
popf
cmpsl
and
mov
xor
and
nop
or
cs
add
dec
sbb
and
ds
jb
add
and
jg
dec
sub
cmpb
sub
dec
mov
aas
aam
inc
xchg
cmp
push
andb
pop
mov
nop
sbb
push
jo
pop
dec
test
sbb
lret
add
fldt
int3
inc
add
clc
adc
out
bound
add
aas
ljmp
push
push
gs
xchg
popf
roll
fidivrl
and
jns
and
xchg
sub
mov
inc
push
cmp
pusha
mov
or
cmpsl
dec
sub
push
add
std
mov
in
cmpsb
cld
sbb
lret
ja
jnp
add
push
fdivs
test
jno
pusha
cmpsb
ds
adc
rorl
xchg
arpl
sub
fisttps
cld
mov
xchg
sahf
aad
xchg
std
add
adc
mov
mov
jb
mov
mov
imul
sub
add
pop
cmp
add
xchg
add
mov
xchg
cmc
or
mov
in
repnz
mov
adc
push
push
push
push
add
int3
sub
aaa
pusha
mov
adc
mov
subb
out
adc
or
ficoml
dec
icebp
add
push
sbb
cmp
mov
pop
pusha
sbb
out
add
push
pop
std
int3
fcoms
add
xchg
cltd
mov
sbb
jo
ds
testb
loope
add
mov
out
arpl
cmp
dec
ljmp
orb
movntps
or
sbb
sub
jae
sbb
shlb
mov
add
xor
pop
mov
sub
es
in
and
imul
dec
add
mov
cmp
ds
mov
scas
cmp
mov
jge
fsts
dec
pop
mov
stc
js
outsb
add
stos
fsubrl
adc
aas
push
add
add
nop
in
push
insb
cmp
loope
or
cli
add
add
lock
fadds
fwait
push
enter
inc
mov
leave
fistpll
mov
into
clc
mov
das
add
jge
dec
add
cld
xchg
cmp
add
fcmovnbe
sbb
insb
adc
mov
adc
les
stos
jns
add
xorl
sbb
jnp
mov
or
mov
pushf
test
xchg
fcompl
ret
insl
js,pt
mov
inc
sbb
dec
pop
lock
jle
jb
pop
scas
sbb
or
add
cmpsb
pop
cmp
mov
xchg
mov
mov
inc
xrelease
testl
add
into
sub
add
mov
outsl
mov
add
or
dec
jle
xor
sub
insb
sqrtps
xchg
push
aaa
push
fisttpll
add
arpl
sub
pop
and
lock
or
inc
xchg
scas
test
jnp
and
leave
mov
mov
cs
or
incl
add
cs
repnz
movb
pop
stos
outsl
dec
xor
add
cmc
rcr
mov
icebp
mov
pop
and
add
les
add
test
adc
dec
stc
jo
jae
add
mov
clc
aas
jle
fs
or
push
in
add
pop
mov
int3
inc
ljmp
lcall
inc
jae
add
push
movsl
xor
pop
and
repz
mov
cwtl
dec
pop
or
out
loopne
mov
es
adc
aas
pop
in
add
xchg
das
mov
mov
repz
cmp
push
add
pop
test
ds
fwait
loopne
into
std
jle
add
and
sub
dec
clc
mov
outsb
jle
ss
add
sbb
addr16
outsl
cmp
push
sarb
jp
push
dec
cmp
subb
lret
jae
cwtl
add
fmul
or
addb
or
jo
inc
add
lret
lahf
loop
sub
daa
cld
add
std
insb
jg
ret
jp
call
inc
sti
add
sbb
outsl
sbb
lock
add
xlat
jmp
clc
pop
and
idivw
cwtl
je
cmp
add
inc
pop
call
add
pop
push
xchg
mov
icebp
add
or
xchg
loopne
push
add
mov
loop
mov
or
push
mov
sti
into
push
add
shlb
sub
sub
add
fnstenv
rol
pop
std
cltd
shll
add
jle
push
push
in
mov
sbb
adc
pushf
inc
add
or
jg
mov
add
push
add
xor
std
cmp
xor
lahf
or
bound
enter
sub
inc
fs
push
les
pop
sti
in
pop
xor
xchg
repz
sub
sub
jno
popf
xor
out
loop
nop
out
fnstenv
add
outsl
push
mov
jbe
xor
jge
enter
add
orb
dec
jl
call
jg
or
mov
lock
daa
scas
ds
xchg
aas
jbe
andb
mov
push
mov
test
pop
test
lods
fisubl
xlat
add
add
push
test
test
pushf
sub
es
addr16
push
xor
iret
adc
cmpsl
pusha
add
fs
in
lods
inc
or
add
insb
mov
scas
lock
fcomps
add
mov
add
loopne
adc
xor
xlat
add
stos
sbb
sbb
inc
mov
and
inc
adc
fs
stos
inc
sbb
push
jle
fcoms
push
mov
mov
ja
loopne
je
mov
cmp
jl
add
adc
lret
add
roll
pop
mov
ljmp
mov
jmp
mov
add
mov
or
xlat
int3
sbb
and
ljmp
cmpsb
push
fisubl
add
lret
cmp
in
add
cmp
add
rcrl
out
jnp
lock
adc
testl
inc
loope
dec
orps
ret
mov
xchg
add
test
cmc
and
xchg
inc
test
das
outsl
stc
repz
addl
cmp
jmp
cmp
push
jl
lods
mov
adc
insl
pop
push
cld
adc
in
push
testl
cld
mov
sub
xor
xchg
adc
mov
pop
xorb
sbb
add
cmp
xor
jmp
movsb
add
push
xchg
mov
or
stos
mov
xor
std
cwtl
jge
inc
dec
xchg
mov
add
leave
out
mov
lret
pop
sub
shl
sbb
fs
mov
sub
psubw
or
jnp
adc
pop
add
aaa
sahf
cmp
jge
ljmp
jnp
xchg
add
or
inc
shlb
fidivrs
ja
movsl
int3
xor
push
mov
out
or
fnstenv
dec
or
adc
mov
lock
jle
add
inc
inc
leave
jnp
js
add
jecxz
pop
push
mov
ljmp
not
stos
xchg
das
insb
push
sub
inc
add
out
dec
js
rolb
fsubr
fidivl
leave
add
fnstenv
mov
push
add
push
addr16
inc
mov
adc
leave
out
outsl
test
xchg
daa
add
xchg
push
outsb
push
jecxz
mov
dec
and
sub
dec
ret
and
inc
mov
mov
push
or
push
and
mov
pop
test
adc
push
insb
push
inc
add
ret
sbb
pop
xor
and
fcoml
shr
into
dec
and
mov
cmp
ss
pop
add
pop
sti
dec
js
pushf
add
dec
mov
pop
cli
xchg
or
cmpl
or
in
pop
mov
fdivs
jecxz
rorl
pusha
dec
mov
repz
or
add
push
sahf
sbb
roll
push
out
add
std
movsb
movsl
add
insl
inc
push
fdivrl
xor
fnstsw
ror
incl
pop
cmpsl
stos
mov
pop
pop
add
jne
bound
lret
lods
push
mov
add
cmp
sbb
outsl
sbb
aam
int3
pusha
mov
mov
mov
fcoml
sbb
dec
and
stos
jno
add
dec
dec
leave
jo
notb
mov
mov
lea
cld
sbb
jno
add
fiaddl
leave
stos
lock
scas
add
sub
or
xor
xchg
push
aaa
inc
add
into
sti
aas
mov
dec
repz
stos
sub
and
xchg
add
push
in
jp
iret
and
lcall
sub
imul
add
add
sti
mov
jno
je
ret
sarb
pop
add
in
call
xchg
or
cld
clc
xor
add
clc
movsb
mov
jb
mov
dec
xor
fucom
ljmp
jo
idivl
inc
les
inc
push
in
sbb
mov
xor
add
fwait
xchg
sahf
inc
shll
add
pusha
and
add
cmp
dec
orl
sti
lret
cmpsb
jp
cmp
push
cwtl
movsb
xchg
cs
subb
sbb
fcomi
jb
mov
xchg
in
stos
mov
insl
inc
xor
fwait
pop
add
movsl
xor
incb
andl
faddl
in
icebp
mov
push
add
add
sbb
inc
inc
jecxz
lock
je
jb
add
mov
std
pop
je
repz
bound
dec
dec
scas
add
jle
lock
mov
xorb
fcom
pop
outsb
sub
mov
cmp
test
jle
jp
das
mov
arpl
xchg
popa
add
add
jp
fstps
shlb
inc
adc
movb
test
jl
mov
out
add
mov
fsubl
adc
pop
nop
dec
jmp
mov
sti
cmp
lock
add
fildl
das
add
lds
in
push
lods
repnz
add
int3
fiaddl
lret
sti
mov
out
sbb
add
in
insb
add
xlat
mov
push
cmp
mov
mov
rorb
addr16
add
bound
loop
sub
cmp
int3
iret
sbb
add
lret
lcall
das
mov
in
push
lock
mov
push
add
ljmp
dec
inc
xchg
cmp
test
mov
push
filds
dec
add
imul
pop
xchg
or
add
pop
dec
cmpsl
cmp
cmc
incl
pop
jnp
or
cmp
mov
dec
sbb
xor
cmc
in
leave
xor
add
cltd
add
ss
daa
fwait
mov
add
loop
mov
es
add
ret
add
or
sbb
enter
add
push
cmp
mov
out
push
jg
popf
dec
mov
loopne
pop
cmp
mov
mov
rcrl
inc
lock
dec
jp
mov
push
and
sub
pop
in
xchg
push
jo
jbe
rcrb
push
mov
sti
pusha
mov
sbb
icebp
mov
negb
popa
iret
sbb
ljmp
cli
cltd
das
inc
mov
lods
cld
xchg
jo
lret
mov
add
lods
aad
nop
mov
push
cmpsl
add
lds
push
mov
xchg
in
mov
or
push
sub
mov
add
mov
andb
in
push
xor
lahf
xlat
clc
mov
xchg
sbb
add
js
cmp
std
mov
cmp
lret
sbb
inc
dec
mov
and
test
jb
out
shlb
mov
lea
sbb
mov
add
inc
mov
jp
andb
mov
movsl
cmc
add
and
adc
xchg
or
sbb
adcb
mov
popl
jmp
dec
add
push
loope
xchg
shlb
ret
insl
mov
movl
jle
iret
mov
movsl
mov
pop
adc
push
jle
imul
or
inc
aaa
loopne
int
jmp
push
lods
bound
vmovups
dec
xchg
aaa
insl
repnz
add
jns
int
mov
cltd
sub
add
out
loop
movsb
jne
mov
ret
pusha
addl
mov
inc
call
fs
inc
cld
rolb
cmp
or
pusha
add
mov
dec
add
dec
in
data16
loope
scas
stos
mov
pushf
mov
xchg
xor
sub
out
add
repnz
add
ret
mov
int3
andb
in
lods
inc
je
jae
es
aaa
dec
inc
pusha
sbb
mov
add
faddl
and
cwtl
cltd
int3
popf
add
arpl
add
dec
pusha
rorb
and
inc
add
andb
xchg
sti
sahf
fwait
add
jbe
xor
xchg
mov
mov
popf
dec
mov
or
adc
das
adcl
and
mov
mov
rcrl
add
add
cwtl
adc
add
jl
loope
xorb
push
sub
pop
push
aam
jb
ljmp
lcall
in
popa
and
pusha
inc
jb
hlt
sahf
add
scas
ljmp
rcl
aam
xor
imul
push
mov
xor
cwtl
scas
inc
dec
clc
lret
add
push
and
or
jb
pop
stos
add
inc
enter
pop
sub
insb
adc
add
addb
add
sbb
add
and
sbb
outsb
add
mov
pop
rcpps
jmp
ljmp
std
pop
sub
adc
mov
adc
cld
sbb
sbb
mov
icebp
cmpb
sbb
push
jne
hlt
sbb
mov
shl
push
xor
push
inc
inc
mov
mov
pop
or
jno
outsl
inc
fadds
jb
pop
mov
mov
sti
push
cmc
add
lea
add
jno
dec
adc
sub
inc
test
pushf
add
and
adc
mov
fwait
not
pop
push
sub
shrl
stos
stos
cmpb
mov
cmp
mov
pop
popl
scas
test
mov
or
mov
sub
pushf
jo
arpl
sbb
mov
push
scas
sub
in
lock
push
out
test
insb
mov
and
aad
mov
je
adc
mov
test
mul
clc
push
stos
fildl
inc
pop
loop
out
or
fmull
lods
jg
nop
sbb
insl
mov
test
cwtl
and
loop
push
ja
add
stos
out
aas
adc
or
subb
and
jno
ret
push
mov
inc
test
adc
add
fdivs
lds
ljmp
fdivrp
popf
cmc
daa
aam
scas
or
mov
addb
xor
add
ljmp
addl
inc
es
add
addb
mov
jecxz
mov
movsb
push
mov
add
jl
shr
shl
push
dec
cs
bound
or
imul
sbb
lock
xor
or
xlat
mov
test
js
jl
add
mov
adc
pop
orb
mov
push
cmpsl
and
inc
lret
std
aad
daa
in
in
imull
and
lret
lods
cmp
add
pusha
push
mov
cs
in
add
lcall
mov
shl
pop
jnp
or
cld
add
ds
sub
add
imul
pop
lcall
js
adcb
enter
fs
lret
xchg
jo
and
push
dec
dec
aam
xchg
mov
and
add
adcb
adc
xor
div
pop
cmp
push
mov
xchg
mov
add
add
xor
lcall
outsb
std
and
mov
shrb
sbb
lahf
mov
pop
pusha
lods
int3
outsl
xor
lds
in
mov
cmc
mov
cmp
add
movsb
xor
dec
cmp
lret
xchg
frstor
daa
and
add
call
inc
add
mov
and
imul
mov
add
add
and
sbb
arpl
pop
bound
insb
add
cmp
iret
add
xchg
into
jb
push
add
jmp
add
push
js
movsb
push
orb
cmp
orl
cmp
dec
jns
icebp
inc
insb
loop
add
pusha
mov
dec
nop
adc
push
out
mov
cmp
add
mov
lret
push
add
jns
aad
inc
outsl
push
add
andb
lret
mov
add
out
dec
mov
push
pminub
push
mov
mov
fdivl
imul
mov
cmpsb
rcrb
push
and
pop
out
jo
add
arpl
in
add
xchg
stos
add
sar
xor
mov
mov
popa
add
xchg
xchg
roll
push
mov
je
add
daa
push
or
add
add
rorb
cmp
jl
dec
sahf
dec
and
movsl
dec
add
jo
fistl
sarl
adc
push
adc
jns
leave
dec
add
lret
cmpsl
or
add
add
in
push
add
out
and
or
loope
add
add
stos
xorb
mov
or
push
xchg
xchg
mov
cmpsb
sub
add
mov
mov
add
sub
push
sbb
stos
jno
and
pop
test
pop
xchg
xchg
add
sbb
sbb
mov
fidivl
fs
add
gs
add
cmp
cltd
jl
ljmp
andl
lods
add
sbb
imul
dec
das
sub
shl
into
ds
jae
adc
je
loope
daa
push
jb
jbe
lock
enter
insb
outsb
sahf
mov
pop
sbb
dec
test
jo
mov
push
sbb
loopne
dec
pusha
out
cmp
lahf
mov
mov
mov
add
push
or
cmp
add
sub
mov
nop
pop
and
lahf
pushl
insb
jle
popa
pop
mov
loop
rol
daa
add
lods
pop
fsts
sbb
sbb
mov
ficomps
add
sti
push
sub
xor
xchg
sti
sbbb
lcall
push
addb
repnz
stos
pop
fidivs
mov
inc
pushf
and
inc
pop
sbb
add
adc
je,pt
roll
push
push
sbb
test
lea
xchg
leave
xor
aaa
add
mov
inc
xchg
add
push
mov
add
ljmp
jno
add
sub
or
add
pop
mov
fldl
add
jmp
pop
out
add
outsl
rcll
pop
inc
pmaxub
repz
add
pop
jp
add
add
mov
es
add
add
addl
cmpsl
xchg
push
cmp
test
enter
loopne
cmp
push
xlat
cli
xchg
add
sub
fwait
mov
push
imul
orb
loopne
cli
stos
or
insb
sub
push
testb
cmp
pop
inc
inc
repnz
loope
adc
nop
add
mov
push
cmp
xor
stc
or
xchg
add
repz
sbb
dec
add
popa
mov
add
mov
pop
sbb
mov
mov
xchg
pushf
adc
insl
and
scas
loope
mov
scas
loopne
mov
or
dec
repnz
pop
pop
add
insl
fmul
dec
mov
dec
jns
cwtl
xor
inc
mov
mov
test
xchg
xor
pop
add
push
mov
add
dec
cwtl
pop
dec
out
in
lods
adc
pop
add
pop
mov
add
jne
sti
adc
mov
aas
jl
mov
jne
sub
and
iret
lods
mov
pop
pop
ret
js
sub
inc
sub
jno
scas
jb
adc
cmc
repz
jge
mov
shrb
add
push
push
stos
push
dec
es
mov
add
cmp
adc
gs
shr
xchg
sbb
testb
ret
or
add
ljmp
mov
mov
sbb
testl
lea
dec
push
and
call
sbb
cwtl
xchg
xor
sbb
pop
adc
xchg
bound
call
in
testb
scas
mov
jne
hlt
stos
loope
sub
test
pop
out
jbe
inc
std
jne
data16
fcmovnu
shrb
daa
cmpb
push
lods
mov
adc
pop
movsb
add
sbb
xor
aaa
push
push
or
shll
out
mov
add
fdivr
mov
rclb
fldt
ds
add
mov
inc
hlt
ljmp
pop
xchg
shr
add
mov
xor
pop
adc
xor
shlb
pop
dec
add
cmp
sti
add
mov
push
int
cmpsb
push
push
add
pushf
lods
pop
and
or
push
adc
jg
outsb
cmp
pop
jae
add
repz
and
test
adc
xlat
adc
or
add
cmc
xchg
or
sbb
and
outsb
mov
jp
jno
add
push
lcall
popa
movsb
pop
sbb
sub
mov
loop
push
add
movsl
sub
push
xor
daa
adc
add
and
jne
mov
leave
ret
int
pop
push
imulb
arpl
push
ja
push
inc
push
cwtl
int3
add
lcall
add
pop
xchg
cmp
jmp
pop
lret
xchg
in
or
add
popf
jp
fistl
sahf
int
push
push
sbb
adc
fistpll
cmp
lcall
sarl
mov
sub
pop
out
push
jbe
push
test
imul
repnz
addb
mov
xchg
dec
jae
pop
lldt
and
xor
scas
add
or
adc
cmp
addb
loope
shlb
add
jb
cmp
sub
add
pop
mov
xor
sub
add
cmpsb
push
imul
xor
mov
jmp
es
test
daa
cli
addb
xchg
pop
and
dec
mov
mov
add
mov
inc
orb
mov
push
ret
adc
ret
enter
push
aas
add
pushf
inc
test
loop
cmp
es
add
mov
sub
adc
cld
add
mov
test
adc
push
fneni(8087
jg
pop
iret
and
add
cmp
pop
add
jno
subb
lcall
adc
imul
nop
sub
fcmove
mov
mov
cltd
shlb
mov
sbb
dec
mov
add
push
xor
ret
or
push
out
push
xchg
bound
xchg
mov
push
xor
dec
jmp
daa
sbb
mov
fwait
je
cld
sarl
iret
jo
add
dec
add
cmp
cmpsb
jnp
add
inc
push
adc
mov
inc
mov
sub
mov
jp
pop
jecxz
sub
push
orb
pop
xor
idivl
shrb
mov
sub
out
enter
int
mov
testl
push
sarb
xchg
push
jns
inc
lea
mov
pop
push
jg
or
mov
in
popf
or
dec
pop
stos
sbb
adc
cmp
je
pop
stc
loopne
lcall
add
enter
into
lahf
out
adc
test
xor
sbb
and
dec
adc
loopne
xor
cmpsb
pop
sub
xchg
data16
push
cwtl
inc
add
pop
or
cmpsl
dec
int3
fisttps
mov
push
arpl
stos
add
popf
call
iret
push
add
adc
xlat
sbb
sbb
push
dec
sub
sbb
cmp
mov
add
pop
adc
jmp
daa
mov
insl
popf
mov
lock
loope
dec
add
rcl
inc
push
mov
and
pushf
shll
adc
fidivrl
fnstsw
add
sbb
sbb
sub
add
call
negb
arpl
add
cmp
push
add
or
pop
push
push
add
in
add
push
mov
cltd
add
fwait
addl
cmpb
hlt
xor
mov
add
loope
adc
arpl
fs
push
lret
add
flds
pop
rsqrtps
inc
jns
pop
ds
xchg
lods
cmp
faddl
sbb
mov
add
push
mov
outsb
add
scas
mov
movb
adc
movsb
das
loope
push
std
xor
in
cmp
mov
pusha
jbe
add
push
mov
jl
sbb
test
pop
add
jmp
rclb
xor
lods
jns
dec
jg
sub
insl
mov
cmp
xchg
in
jne
popa
add
xor
jns
mov
jg
add
test
dec
add
pop
es
dec
repz
ret
sub
mov
pop
call
sbb
nop
sti
fadds
and
insl
rcll
daa
and
imul
push
jecxz
leave
data16
mov
repnz
inc
mov
inc
loopne
add
ja
faddl
aas
cmp
add
adc
push
inc
add
sti
test
add
dec
fsubs
repnz
inc
add
scas
lock
mov
add
adc
add
insl
and
sub
mov
ret
js
addr16
cmp
and
pop
cld
mov
xchg
mov
adc
xchg
pusha
ret
ret
mov
jecxz
fwait
mov
mov
add
cmc
jae
ror
mov
imul
jno
dec
lds
or
lods
adc
add
loopne
xchg
adc
mov
add
or
int3
xor
pop
shll
add
sahf
cli
stos
push
push
out
imul
xchg
mov
jae
shr
mov
dec
shrb
mov
jns
pusha
xor
pop
push
cmc
xchg
int3
add
xchg
enter
add
pop
push
idiv
or
jl
mov
add
std
jbe
int
sbbb
pop
xor
add
mov
xchg
movsb
aaa
jl
dec
cmc
test
pusha
add
mov
and
jb
shl
std
les
in
add
xchg
add
sub
in
add
cmc
xchg
xor
jmp
mov
jbe
jge
pusha
sti
push
rcl
jl
add
mov
loop
and
xor
test
jbe
add
or
roll
add
jbe
insl
fsts
pop
out
loopne
cmp
or
clc
rolb
adc
add
aad
int
sub
or
add
add
aaa
aas
lahf
psubw
and
leave
lret
ret
sub
rorl
pop
insl
sbb
lock
adc
out
cwtl
rorb
je
mov
ret
ret
add
stc
xlat
fiaddl
ss
in
adc
rolb
xor
movsl
mov
dec
inc
add
cmp
cmpsb
jmp
add
and
pop
cmc
jecxz
add
jnp
inc
adc
add
push
popa
insb
xchg
dec
gs
xchg
stos
popf
rcrl
aam
imul
inc
jmp
in
hlt
mov
xchg
repnz
adc
adc
jmp
or
push
xor
nop
xor
pop
popa
xor
testl
push
cmp
out
and
push
mov
fisttpl
mov
push
cli
sarl
sbb
popf
test
push
int
addr16
fwait
cmp
iret
xor
pop
js
add
aas
sbb
mov
rclb
sbb
inc
mov
pop
fsubrs
sub
add
cmp
mov
xor
leave
pmaxsw
sbb
mov
clc
imul
mov
in
push
add
jnp
mov
lock
aaa
in
orb
js
push
adcb
sarb
add
adc
imul
pop
clc
adc
outsb
enter
jns
les
xor
dec
ja
and
jl,pt
xchg
xlat
push
adc
add
aam
scas
shrb
scas
add
mov
repnz
push
push
pop
push
rcl
push
int3
cmp
lods
rorl
filds
sbb
js
in
fucomip
ds
add
inc
int3
xor
add
iret
pop
ds
add
xor
rolb
pop
sbb
filds
mov
call
xor
lea
lret
adc
daa
xor
pusha
push
clc
mov
sub
cld
pop
out
mov
adc
pushf
push
fstpt
aam
add
std
jne
mov
int
jmp
adc
sarl
idivb
clc
ja
fsubrp
mov
and
sbb
popl
daa
push
mov
jnp
inc
xchg
jb
jl
xor
mov
and
mov
and
xor
adc
jmp
and
sti
adc
andl
hlt
mov
pusha
xor
movsl
lock
jge
dec
stc
ljmp
jb
jnp
push
xor
jmp
pop
mov
mov
jne
loopne
sbb
mov
sub
dec
add
cmc
mov
ficompl
out
add
jae
ljmp
and
enter
es
roll
and
outsb
inc
add
add
adc
pushf
and
sub
add
sbb
xor
fbld
cmpsb
jbe
movsl
push
and
into
lock
add
adc
sub
inc
popa
jecxz
adc
stos
inc
cmp
les
mov
clc
adc
pop
xchg
lods
xchg
nop
out
pop
mov
mov
loopne
sbb
ss
or
imul
repz
mov
inc
sub
out
lock
call
mov
xchg
loopne
push
shlb
xlat
mov
and
out
and
pop
pcmpgtd
mov
ret
pop
inc
sub
int3
js
cmp
add
sub
sub
add
idivb
xchg
in
dec
mov
mov
fldenv
mov
aaa
ja
push
cmpsl
xor
ficoml
mov
inc
pop
pusha
adcb
add
stos
mov
push
repz
add
sbb
mov
add
or
stc
sbb
shlb
lret
add
in
inc
mov
xor
add
dec
outsl
inc
add
mov
loop
add
cmp
lds
inc
mov
cld
adc
sub
jo
test
aas
push
add
sub
mov
cpuid
mov
aaa
push
js
adc
push
push
fisttpll
cmc
add
adc
pop
and
pop
fbstp
cmp
loop
jne
imul
jmp
scas
inc
jae
fstps
addb
lods
dec
jecxz
rol
lods
xchg
js
fstl
push
in
fwait
sbb
pop
adc
rcl
into
mov
push
xchg
pop
stos
ret
stos
mov
in
or
xchg
xor
dec
xor
add
imulb
jg
add
adc
mov
and
xlat
clc
icebp
lods
inc
loopne
js
add
pusha
mov
and
push
cmp
mov
leave
adc
fs
xor
sbb
mov
pop
adc
add
pop
sbb
sbb
enter
and
pop
mov
int3
in
stos
inc
add
and
sub
negb
mov
sbb
popa
or
repnz
inc
mov
enter
sub
test
mov
into
add
inc
stos
sbb
push
add
add
sub
mov
repz
sub
popl
adc
add
sub
xor
dec
test
or
js
mov
add
arpl
pop
pop
xor
testb
mov
or
push
mov
mov
push
cli
clc
or
pushf
stos
cmpb
jbe
add
add
push
push
popf
mov
in
insb
dec
cmp
addr16
lahf
xor
add
shr
rorb
adc
mov
fs
repnz
dec
test
add
sub
inc
test
pop
mulb
incb
outsb
mov
inc
popa
mov
jg
add
xor
lret
or
ss
std
xchg
loope
and
add
inc
js
add
push
lea
mov
movb
adc
ds
dec
stos
fiadds
scas
in
dec
mov
jl
or
lods
sbb
add
pop
sbb
enter
sbb
sub
lock
lds
xor
into
sbb
push
add
int3
xchg
sbb
cwtl
add
ljmp
push
ss
add
mov
fstpt
jg
int3
out
mov
push
pusha
test
adc
loopne
and
mov
popl
out
or
call
sbb
xchg
addr16
mov
adc
inc
add
pushf
inc
fldenv
sub
adc
test
or
outsl
lea
dec
or
pop
jl
call
movsb
xchg
rcrb
or
inc
lods
cmp
push
std
push
add
cmp
lret
xchg
dec
ja
add
add
or
pop
add
lds
mov
incb
data16
rcl
cmp
xchg
in
push
mov
mov
pop
scas
dec
je
add
bound
adc
mull
jl
std
icebp
adc
fwait
mov
jnp
mov
mov
cmpsb
mov
dec
roll
or
jo
sub
or
stos
insb
jg
xor
shr
loope
dec
jno
add
adc
xchg
lock
pop
xorb
cmp
iret
pusha
sarl
or
test
aam
adc
arpl
shr
and
adc
adc
hlt
pop
cld
jae
push
add
popa
out
test
jno
inc
pop
mov
push
subb
leave
jl
push
xchg
add
dec
clc
push
in
lea
push
cmpsb
cmp
cmp
pop
jno
daa
add
add
mov
adc
orb
mov
dec
adc
fwait
adc
pop
xchg
cmp
and
outsl
lods
xor
faddl
inc
jge
fs
sub
mov
or
pusha
add
sbb
fs
subl
prefetch
mov
pop
inc
adc
into
ret
out
add
pop
push
enter
push
or
mov
push
nop
imul
push
pop
mov
or
mov
fcoms
mov
or
cld
adc
cmp
ret
cld
pop
in
add
lods
inc
xchg
xor
cmp
insb
shlb
loopne
leave
adc
sbb
lock
jnp
pop
jb
mov
lret
add
jmp
in
lret
lahf
and
add
mov
out
imul
push
add
and
jns
mov
mov
sub
add
adc
es
or
mov
push
dec
pop
rolb
push
mov
push
push
add
pop
pusha
lahf
test
add
adc
iret
pop
or
add
fstpl
cwtl
mov
add
loop
jbe
adc
pop
xchg
shr
mulb
imul
add
cli
adc
es
push
dec
push
or
dec
and
rcrb
sub
cmp
mov
dec
xor
or
xor
mov
sub
in
dec
push
mov
sbb
push
lock
add
loop
aam
mov
lret
mov
jl
stos
pop
add
inc
out
int
insb
cmp
push
mov
mov
dec
add
lods
push
mov
insb
bound
add
sti
sbb
xor
icebp
sahf
in
in
aaa
xor
imul
mov
call
mov
jl
int3
gs
clc
pop
scas
inc
or
lock
xlat
jbe
add
idiv
cmpsl
mov
pushf
jle
sub
iret
jno
add
fmull
lret
adc
add
add
xchg
jnp
push
dec
les
shrb
cmpsl
mov
ja
in
dec
sub
mov
popf
ret
out
daa
dec
add
pop
and
hlt
push
popa
add
add
push
stos
fdivr
cmpsl
add
mov
enter
hlt
insb
add
jp
cmpl
pushf
loope
pop
lock
cmpsb
mov
lods
jnp
cmp
jno
add
jne
sub
outsl
rcrb
repz
add
sub
jno
fisubrs
push
repnz
imul
mov
xchg
sbb
cs
pop
bound
add
dec
xchg
jg
cmp
inc
fiadds
sbbl
push
pushf
fstpt
and
add
iret
pusha
push
xor
push
xor
xorb
add
jne
push
mov
inc
or
sub
insb
je
mov
sbb
xor
jl
inc
pop
dec
add
mov
test
mov
sbb
sbb
add
add
dec
out
aas
xchg
call
lahf
orb
les
add
sbb
jg
pop
xchg
xchg
jl
pusha
out
add
xchg
and
jecxz
sbb
add
sub
inc
or
test
cli
pop
cmpsl
inc
inc
stos
les
push
aam
xchg
inc
or
or
lret
push
sub
jo
xor
arpl
and
stos
cmp
dec
test
orb
adc
sbb
xchg
add
pop
mov
sbb
xchg
inc
or
adc
or
test
outsb
fisttpl
inc
scas
xchg
pop
adc
cmp
add
mov
dec
and
sti
inc
out
push
scas
add
pushf
mov
rorb
movsb
loop
dec
cmp
popa
pop
dec
sub
add
int3
and
movsl
lret
sbb
out
adc
test
jg
in
ljmp
add
in
add
fsubl
push
out
aaa
fiadds
sub
push
mov
popa
jle
adc
add
je
push
cltd
imul
rcr
mov
sbb
pop
dec
mov
hlt
ret
sub
adc
xor
iret
pop
cld
shlb
test
sub
test
lcall
imul
rolb
mov
push
loope
pop
ret
dec
pusha
repz
lahf
add
fstl
cmp
cmp
scas
roll
and
pop
jle
add
stc
xchg
pushf
add
icebp
cli
adc
add
imul
outsl
jae
jp
fisubrs
add
xchg
add
mov
add
movsl
or
addl
or
lock
cmp
pushf
ret
aam
lahf
out
rolb
nop
push
cmp
orb
clc
jb
adc
push
addr16
mov
jge
mov
or
or
cmp
push
cmpb
stos
insb
ret
sti
xor
sbb
dec
js
push
inc
cmp
inc
cs
int
into
lods
mov
mov
or
mov
xorb
push
sub
dec
push
or
jnp
xchg
or
ljmp
and
outsl
add
daa
inc
mov
stc
arpl
push
mov
mov
xchg
scas
into
jb
rolb
sarl
fwait
jge
daa
add
lret
jmp
adc
xor
psubusw
adcb
jmp
hlt
incb
jns
popa
andl
add
test
int
mov
add
lret
sub
and
icebp
outsl
mov
ret
push
jmp
or
repz
jns
sarb
mov
inc
xchg
cmpsl
dec
cmp
movb
aas
jb
xchg
add
cwtl
popf
testl
je
pop
xor
call
lcall
add
cld
fsin
add
cs
dec
ss
sbb
cmp
shll
gs
imul
cmp
xchg
jge
and
add
add
push
clc
mov
out
call
inc
jmp
or
call
stc
subb
sbb
mov
pushf
enter
cs
add
mov
xchg
cmc
shll
scas
push
lret
rcl
bound
aas
sub
sub
dec
xchg
add
outsb
sub
mov
pop
pop
adc
out
dec
add
lea
cmc
xor
jecxz
lods
inc
mov
sahf
imul
mov
nop
push
or
sub
stc
inc
add
jle
fs
jne
roll
int3
insl
call
nop
dec
into
or
lcall
mov
add
imul
cmc
pusha
mov
out
aaa
cmp
jnp
addr16
ds
sbb
add
cmpb
and
cmp
sbb
cmc
dec
xor
nop
dec
jns
lds
js
fwait
add
repnz
fidivrs
adc
xchg
inc
scas
dec
sbb
dec
dec
jge,pn
adc
xchg
inc
jecxz
cmpsl
sub
or
pop
add
shll
mov
or
pop
push
adcl
call
clc
mov
push
or
inc
and
pop
notb
add
dec
push
rolb
fsubrs
and
addr16
add
push
mov
add
cwtl
or
and
scas
add
mov
jmp
xor
cmc
fwait
inc
fadds
xchg
stos
inc
adc
mov
filds
dec
add
out
fcoml
or
pop
mov
xor
test
xchg
not
add
push
aas
sbb
bound
pmulhw
cwtl
rorb
cwtl
sbb
and
in
dec
add
xchg
inc
adc
andb
xor
mov
adcb
and
add
out
orl
fsts
ja
jl
inc
ds
movsl
or
adc
push
faddl
add
push
ja
mov
add
jae
jecxz
add
xchg
int3
inc
les
or
movsl
add
mov
push
add
loop
jns
jp
insb
in
jb
lock
orb
movsb
jne
xchg
unpckhps
sbb
inc
inc
mov
push
cmovo
lds
add
xor
movsl
add
sti
sbbl
pop
subl
aam
push
xor
aaa
clc
push
mov
out
mov
fdivrp
insb
ljmp
cs
push
mov
scas
cmp
push
das
shlb
push
fmull
ss
sub
add
mov
mov
lahf
sbb
push
jge
lret
and
pop
decb
add
lock
mov
sbb
add
xorb
and
cmp
je
pusha
fs
or
cmpsl
addr16
dec
stos
mov
cmp
outsl
cwtl
push
pop
and
adc
popa
jne
inc
cli
ja
or
mov
adc
fs
loope
fcmove
cwtl
lods
inc
jmp
mov
andb
cwtl
mov
jle
add
pop
in
xor
mov
popa
jmp
lahf
mov
stc
ja
inc
pop
fildll
sbb
sbb
add
flds
add
jb
dec
pusha
hlt
add
lock
stos
and
add
scas
cmp
movb
add
sub
jno
cmc
nop
rcr
hlt
add
add
add
pop
cmp
and
push
pop
cwtl
lds
xor
pushf
repz
adc
add
push
mov
jbe,pt
imul
das
addb
lods
inc
int3
cmp
jne
idivb
stc
call
push
add
jg
cmpsb
jge
dec
in
andl
sbb
fldl
movsb
or
pop
lahf
shl
mov
fiaddl
add
mov
aaa
mov
mov
add
add
enter
push
adcb
rcrl
mov
add
dec
sti
or
je
inc
push
jae
out
add
ja
ljmp
or
pushf
fsubl
add
push
add
add
or
push
push
xchg
fstpl
pop
sub
add
call
and
sti
add
add
lds
int3
adc
xchg
mov
pop
and
xchg
xor
cmovne
mov
mov
push
nop
in
and
xchg
and
mov
stos
inc
add
push
sbb
sub
mov
andb
or
add
pushf
sbb
add
das
lea
cmp
add
cmp
mov
sub
push
cmp
out
xlat
xchg
add
fnstenv
sub
dec
dec
inc
adc
ss
movsl
sub
inc
pop
inc
sarb
bound
push
jae
and
sbb
int3
jbe
push
ja
loope
adc
test
jnp
jmp
xchg
inc
sub
mov
dec
rolb
aam
lret
fwait
or
mov
push
subb
add
push
test
adc
lods
or
fistl
bound
jmp
popf
pop
mov
cmp
idiv
fsubr
incb
imul
add
pusha
push
add
fcmovb
clc
inc
call
adc
pop
add
and
inc
leave
dec
push
rorb
andl
out
fildl
mov
dec
cmp
sbb
fcoml
test
aaa
add
imul
pop
jb
es
mov
add
and
jo
loopne
inc
loope
add
mov
cmp
cmp
dec
add
or
mov
aaa
shll
popf
jno
pusha
in
add
add
mov
stc
jnp
xor
ret
and
pop
in
fiadds
jl
pop
in
mov
iret
add
sahf
lds
fiaddl
sbb
pop
into
lret
test
fstpl
daa
cs
sbb
pop
pop
cmp
cld
sbbb
fiaddl
xchg
cmp
and
push
enter
rorb
jb
add
mov
mov
mov
pop
jmp
sub
and
push
rcl
fisttpl
pop
add
inc
out
gs
add
pop
add
inc
js
test
push
mov
mov
push
adc
xchg
aam
add
addl
clc
lock
das
add
jle
rorb
ds
mov
int
fs
add
or
cmp
mov
fildll
add
les
enter
inc
jp
sub
inc
jnp
jg
inc
or
cmp
incl
xor
or
cmp
sti
pop
cmp
addr16
add
scas
or
and
jmp
add
xor
sub
sub
out
not
daa
inc
mov
fstl
jge
cmpsb
loop
inc
clc
test
jns
std
std
insl
fcmovnb
aad
jg
lret
and
adc
pop
jl
add
xor
pop
push
inc
xchg
push
repnz
in
push
imul
add
pop
subb
pop
mov
xor
and
xchg
in
mov
dec
adc
popf
pop
xor
inc
mov
jb
push
adc
movsb
lock
xchg
mov
ss
push
mov
mov
inc
shrb
arpl
andb
pushf
add
lret
pop
add
adc
stos
sbb
nop
addb
cmp
mov
sbb
inc
mov
or
cltd
mov
sbb
xlat
ljmp
xor
mov
pop
cmp
repnz
shlb
jge
or
or
push
cmp
add
dec
ror
out
in
sbb
mov
pushf
push
xlat
jmp
test
inc
test
cltd
arpl
adc
pop
push
dec
lods
jnp
dec
pop
mov
add
jns
gs
add
cs
cmp
add
in
sbb
lret
ror
pop
sti
stos
fld
pop
add
addb
sbb
loope
cmp
outsb
mov
lea
sahf
dec
add
fwait
lods
aas
add
xor
fldl
or
jmp
push
pusha
add
or
cld
insl
mov
sbb
leave
mov
jmp
add
adc
add
add
call
and
divb
aaa
mov
pusha
mov
xor
pop
or
ficomps
jne
mov
add
push
cmp
add
gs
out
scas
popf
out
in
jb
leave
cli
icebp
add
fadd
push
push
stos
pop
pop
lods
test
and
jmp
xor
aas
sbb
add
dec
jle
sbb
hlt
scas
insl
cmp
add
jne
jae
fldl
lahf
pushl
pop
sub
in
mov
jmp
push
adc
movb
lods
sbb
fildll
lret
jns
pop
mov
inc
mov
add
or
jo
cmpsl
mov
aam
sub
push
lods
cmp
add
es
repnz
mov
rorb
ficoml
cmp
icebp
add
or
hlt
adcb
add
pop
lea
push
into
or
sbb
inc
or
popa
adc
xchg
outsb
cli
out
inc
and
add
call
mov
mov
cli
sbb
add
sbb
push
aas
xchg
call
scas
or
loope
loopne
xchg
push
jle
scas
jg
fwait
or
jno
sub
popa
and
in
sub
jb
add
push
pop
in
lret
inc
mov
and
xor
lret
ljmp
mov
and
into
jp
jns
int
push
imul
lret
cmp
testl
jns
jo
add
lods
dec
into
inc
ret
add
mov
pop
xlat
ljmp
cwtl
insb
cli
add
lea
push
xchg
out
mov
inc
mov
and
mov
xchg
out
add
push
cli
cmp
cmp
adc
aas
or
lods
ret
xchg
stos
add
sarl
scas
in
je
cmp
xchg
add
loop
les
jo
imul
mov
je
xchg
cmc
cmp
outsl
push
lds
aam
repnz
add
xchg
push
cmp
jnp
add
es
sub
mov
cmp
pop
lods
fsubrs
xor
leave
jo
xchg
add
cmpsb
ja
popa
push
imul
aas
cmp
xlat
hlt
dec
sbb
jo
add
shrl
add
cmpsb
pop
dec
nop
decl
push
aaa
es
push
dec
jmp
pop
fwait
push
push
mov
or
and
lods
popa
xor
inc
and
pusha
or
cmp
and
mov
pop
cmp
mov
mov
in
shl
and
mov
adc
add
mov
and
pop
data16
add
dec
fmul
add
out
jle
or
lock
or
and
inc
call
fidivl
divl
inc
add
jns
mov
outsb
arpl
dec
lahf
fidivs
hlt
adc
aas
cli
repnz
fcmove
fstpl
mov
out
add
inc
ljmp
and
dec
dec
out
mov
adc
imul
je
inc
jb
rolb
lret
ret
xchg
push
sarl
cmpb
clc
out
add
pop
mov
call
sub
lods
fidivl
pop
lcall
dec
jbe
add
pop
xor
cmpsl
xor
out
push
dec
add
loop
mov
fmull
xlat
inc
ss
popf
add
xchg
xor
scas
xchg
cwtl
inc
lret
popa
int
add
pop
jecxz
in
add
dec
lcall
ja
xor
ret
int3
cmp
add
fmuls
daa
loopne
fwait
sbb
xchg
test
cmp
cmp
dec
enter
dec
cmp
mov
xchg
add
stos
aad
jbe
imul
add
out
push
int3
sbb
and
fnstcw
and
add
movl
xchg
add
sti
cmp
aad
ss
add
mov
add
and
cwtl
add
insb
mov
add
out
cmpsb
xchg
push
pop
stc
dec
add
sbb
fcmovu
pushf
insl
add
adc
call
pop
scas
cli
inc
dec
in
jbe
outsl
add
mov
jne
aaa
scas
add
outsl
sub
notl
cmp
pop
in
and
add
movsl
shlb
push
aam
sbb
cmp
pusha
and
add
fsts
into
lret
cwtl
cltd
adc
movl
sub
add
xor
jno
push
shrb
ja
add
inc
mov
dec
and
add
and
xchg
repnz
xor
cmp
ja
jge
shll
loopne
push
sbb
ljmp
imul
add
inc
add
jo
pop
mov
sarl
rolb
or
push
aaa
push
push
addl
adc
mov
je
ds
shl
push
inc
add
push
xor
cmpsl
sbb
icebp
mov
adc
xchg
loopne
or
inc
cmp
cwtl
push
stc
push
add
dec
mov
and
loop
leave
mov
cmp
push
mov
fdiv
add
jecxz
popl
nop
imul
lahf
dec
cmp
add
movsl
lods
scas
jmp
cli
add
lods
cltd
pusha
add
cmp
orb
aam
out
add
fstpl
add
out
mov
add
repnz
popf
ror
or
movsl
insl
pop
sbb
cmpsb
push
mov
mov
adc
leave
loop
dec
std
int3
ds
pop
adc
mov
or
mov
and
xor
inc
mov
pop
addr16
mov
push
fimuls
add
adc
push
lret
cmp
out
sub
sub
push
adc
shl
jmp
cmpb
xor
xchg
sub
jae
add
mov
hlt
leave
cwtl
loope
push
cmp
pop
stos
into
add
repz
mov
jg
add
mov
cmp
cld
push
inc
add
mov
rcrb
inc
dec
mov
stc
cmp
mov
add
mov
scas
or
mov
add
sarb
in
cld
pop
test
sbb
arpl
cmpsb
pop
stc
mov
addl
aam
cli
sub
mov
loopne
or
int3
aad
stos
mov
nop
pop
push
mov
js
inc
imul
jae
or
sarl
fidivl
test
adc
je
mov
cs
enter
iret
out
fsubrp
loope
push
sbbl
xchg
mov
and
insl
add
jae
shl
push
ret
leave
mov
add
cmpl
out
add
sbb
xor
ja
popf
leave
push
or
push
lcall
outsb
fildl
and
mov
out
shrb
xor
repnz
pop
sub
add
push
cld
xchg
fiadds
scas
aad
inc
add
mulb
add
mov
repnz
cwtl
divb
faddl
push
mov
dec
in
pushf
movsl
inc
das
mov
aaa
shrb
dec
stos
add
fistpl
add
and
or
aad
mov
scas
je
faddl
xor
inc
sti
lds
out
xchg
addb
out
jl
mov
jb
add
jle
jbe
aam
aaa
xchg
test
pop
cld
and
inc
mov
in
add
cmpb
mov
and
jne
or
sbb
gs
rolb
mov
adc
sahf
mov
add
dec
mov
push
or
dec
push
aam
loop
rolb
sbb
jnp
inc
popa
fmul
rcrb
outsl
fbstp
inc
lahf
inc
adc
sub
fs
jo
stc
frndint
cmp
repnz
scas
orb
movsl
inc
add
cmp
jmp
and
adc
into
pop
addb
frstpm(287
lods
ret
pop
mov
es
aam
add
jnp
add
iret
pop
movsb
in
push
add
push
jmp
inc
out
mov
jns
clc
cwtl
inc
add
sbbb
ss
loop
add
mov
mov
inc
aam
sbb
push
adc
aas
ljmp
in
pushf
sub
cmc
add
ja
mov
icebp
test
enter
cmp
pop
aam
inc
pop
jl,pn
in
add
imul
jae
pusha
daa
sub
pop
cmp
cmp
cltd
mov
add
repnz
int3
out
jne
rcrl
fisubrl
and
incb
loopne
add
push
rclb
pop
add
cmc
in
add
sbb
lods
stos
cmp
sub
adc
aam
lahf
aas
das
mov
aas
xor
mov
pushf
iret
mov
inc
push
cmp
loopne
jno
inc
mov
movsl
sbb
ror
out
pop
pop
fcomps
add
les
into
push
mov
shll
inc
add
inc
push
scas
pminsw
push
mov
sub
jmp
ret
out
fwait
mov
or
pop
stc
test
js
cmp
push
xor
es
jle
inc
inc
adcl
mov
mov
mov
test
push
outsl
pop
aas
jmp
sbb
jae
mov
mov
pop
cmp
add
ljmp
das
cs
add
pop
pop
in
shll
fmul
inc
rcrb
jp
add
pop
xchg
xchg
add
inc
dec
scas
int3
cld
btl
add
add
cmp
add
mov
xlat
dec
shll
sarb
popa
pusha
xor
jmp
jl
xlat
adc
push
cmp
in
in
daa
add
jle
pusha
fistl
mov
cmp
xor
dec
idivb
or
fwait
mov
out
fmulp
mov
je
xchg
lcall
repz
jns
out
cmp
in
je
lret
out
mov
push
cwtl
jb
dec
add
sahf
cmc
add
imul
ret
sbb
push
icebp
mov
stos
pusha
cmp
inc
add
jl
and
hlt
dec
add
out
xor
mov
cmpsb
cmp
lahf
push
ljmp
xchg
adc
fisubs
aad
xchg
adc
mov
and
imul
add
ret
lds
mov
loop
rclb
fdiv
addb
insb
and
xchg
lret
mov
cld
fadds
add
leave
push
fldcw
mov
scas
fidivs
lock
shll
lret
mov
dec
or
sub
cmp
fadds
mov
int
cmp
mov
cmp
push
incb
lcall
inc
add
sbb
inc
ret
dec
mov
arpl
mov
xchg
mov
imulb
into
jle
cmpsl
mov
repz
add
lods
imul
movsb
and
add
push
mov
inc
push
sub
mov
sbbl
xlat
cmp
sbb
dec
dec
jb
clc
pusha
add
cmc
mov
add
pop
or
test
xchg
subl
pop
add
int3
mov
std
out
add
sbb
lret
cli
xor
out
neg
es
addr16
mov
sti
xor
cmovns
mov
xor
jns
pusha
mov
clc
fstpt
xchg
in
test
js
in
or
pop
pop
ja
call
xchg
add
out
or
aas
sub
lds
xchg
fsts
jmp
movl
cmpsl
xlat
in
jno
fistps
les
mov
ret
js
add
xchg
shll
outsl
roll
insl
pop
push
stos
pop
sahf
pusha
nop
dec
or
adc
in
in
scas
add
mov
pop
push
add
adc
aam
and
mov
add
push
jmp
int3
and
and
fisubs
cmp
aas
rolb
mov
sub
pop
lcall
pop
jle
adc
orb
xchg
dec
lahf
scas
add
enter
popa
outsl
jns
fs
and
cmpsl
jbe
add
jne
cmp
nop
fwait
adc
pop
cmp
pop
sbb
mov
repnz
add
inc
addr16
test
mov
sub
sub
movsb
pop
stos
jle
jl
or
add
pop
pop
and
add
idivb
jo
pmaxsw
gs
outsb
je
outsl
add
mov
mov
nop
cmp
sahf
add
add
notl
add
fwait
jecxz
movsl
mov
call
add
int
mov
pushf
jne
jp
or
push
add
or
lods
pop
adc
push
add
push
push
adc
iret
pop
sub
cmp
add
inc
push
mov
ss
loop
push
mov
out
dec
dec
and
imull
push
jnp
add
aam
push
mov
and
sub
ja
punpckhdq
rcll
ficoml
fcmovne
js
out
add
adcb
popa
dec
pop
add
dec
ret
dec
and
dec
cmc
lock
rcrb
mov
rclb
movsl
je
out
repz
in
testb
sbb
cmp
push
sbbb
out
movsb
add
sub
inc
add
and
jg
stos
add
out
enter
add
or
int
pusha
in
mov
inc
cmc
shlb
jge
push
movsb
incb
pop
cmpsl
jb
stos
xorb
xor
pop
loopne
jae
cmp
fiadds
pop
rol
add
rolb
fwait
push
xor
dec
and
repz
dec
out
add
and
dec
je
sub
dec
pop
bound
xor
mov
add
fcmovb
rolb
or
subl
sbb
add
add
fidivs
clc
pop
add
test
xor
and
repnz
sbb
inc
sbb
sbb
iret
inc
shlb
lods
lret
push
adc
ljmp
pushf
sub
and
leave
mov
mov
pop
mov
loopne
es
add
cmp
mov
ror
xor
adc
or
pop
or
xchg
and
or
and
sbb
sbb
push
inc
das
test
sub
lea
sahf
fsubl
jmp
scas
pop
jg
add
adc
inc
shlb
add
ficomps
adcl
mov
repz
ljmp
xor
jo
cltd
add
push
cmp
adc
sahf
pop
in
insb
mov
lahf
sarb
jmp
push
sub
stc
out
inc
xor
stos
jl
clc
push
ja
or
push
cmpsb
lds
pop
int3
daa
or
out
rolb
pop
enter
lock
iret
jle
hlt
in
xlat
stc
dec
add
mov
fistpl
ret
data16
sub
inc
push
out
lret
mov
add
lock
outsb
sub
das
cli
push
jae
sbb
mov
outsl
jp
inc
pushf
xchg
mov
les
leave
mov
push
dec
mov
sub
sahf
inc
push
cs
in
xor
add
dec
mov
adc
mov
outsb
fidivrl
add
into
adc
loop
or
push
fadds
mov
movb
add
xor
mov
dec
sbb
mov
pop
cmp
push
inc
popf
mov
dec
push
sbb
mov
mov
imul
mov
sahf
add
test
inc
loopne
insl
sarb
mov
mov
add
pop
aaa
dec
jecxz
inc
movsb
ljmp
mov
mov
cwtl
mov
gs
hlt
inc
xor
push
ds
fidivl
aad
add
jp
mov
sbb
or
fsubl
mov
lds
add
mov
add
testl
arpl
jp
daa
push
push
scas
adc
stos
add
repnz
mov
cld
xor
jl
sub
cmp
lret
adc
add
pop
xchg
pop
ljmp
fsubs
mov
sbb
call
out
mov
sbb
jb
subb
test
sub
je
pop
daa
cmp
les
xor
mov
and
add
add
sbbb
mov
stos
mov
or
daa
in
cmp
push
sysexit
stos
es
sahf
lret
pop
call
nop
or
loopne
add
pop
or
jl
dec
ljmp
adc
fisttps
dec
roll
mov
xor
mov
fwait
xor
inc
cmpsb
add
or
stos
xlat
loope
popa
xor
cmp
jle
pop
in
ss
xchg
scas
cmp
sub
ja
add
xor
stos
testl
les
stos
push
add
mov
or
mov
sbbb
lea
jb
into
xor
add
aas
clc
rolb
ret
nop
mov
dec
add
repnz
in
push
pop
cmp
sarb
lock
loop
cmpsb
mov
push
add
fiaddl
addb
mov
imul
out
ja
je
ret
and
sysret
aas
imul
pusha
inc
jmp
and
add
not
xor
mov
sbb
mov
leave
unpckhps
pop
fdivs
cli
push
lea
and
addb
fxch
sub
cmp
add
mov
or
inc
adc
sahf
popf
pop
adc
inc
fmul
jne
lock
add
pop
andb
and
xlat
pop
sysexit
bound
mov
les
add
adc
je
lcall
insb
or
popa
fwait
imul
push
or
fisttpll
adc
inc
add
ss
jmp
inc
push
xchg
iret
add
mov
cmp
jnp
add
jmp
inc
and
mov
divb
xorb
mov
jb
in
add
adc
pop
sbb
inc
aas
fmulp
add
insl
push
arpl
or
add
jnp
and
nop
add
hlt
push
sub
out
and
dec
inc
mov
stc
stc
jmp
or
lock
cmp
mov
and
add
es
cmp
testb
pop
sub
mov
je
add
int
adc
jnp
inc
xchg
sarb
inc
orl
xor
inc
mov
mov
ret
dec
add
loopne
shrl
in
shlb
add
mov
das
add
jbe
sbb
fldl
rcrl
mov
enter
xor
xchg
cmp
xchg
xchg
data16
xor
cmp
scas
xorb
adc
jl
add
arpl
adc
fsubs
push
xor
add
or
jl
or
jecxz
xchg
faddl
inc
jle
stos
insl
jne
ficompl
add
push
incb
mov
mov
fidivrs
pushf
lret
in
jle
fcoml
mov
rclb
and
mov
mov
or
push
or
repz
aas
scas
shrb
loopne
fildl
stos
call
pushf
mov
add
cmc
adcb
xor
clc
cmp
dec
push
popf
add
add
scas
ja
and
cwtl
lret
test
pop
mov
shrl
add
mov
cmpsb
in
leave
ja
push
out
sub
mov
xor
xchg
sub
fisttpll
mov
addl
inc
or
add
xchg
xchg
and
iret
xchg
divb
jbe
add
adc
add
inc
test
add
rcrb
data16
sub
pop
das
leave
dec
add
into
lods
inc
sbb
jl
xor
data16
ret
pop
xor
testb
mov
shrl
arpl
lret
shlb
test
stos
repnz
jmp
or
roll
popf
dec
dec
leave
fs
jmp
cmp
addb
fdivl
add
repz
call
xor
lods
cmpsl
pushf
das
outsl
out
sub
test
dec
push
xchg
or
add
mov
push
loopne
jnp
xchg
add
inc
fisttpll
pop
cmp
mov
jb
push
mov
insl
repnz
sub
mov
push
jo
adc
jg
pusha
xchg
ret
and
xchg
mov
lea
mov
inc
fildl
or
adc
cmp
xor
in
pushf
pusha
sbb
ret
test
movsb
sbb
daa
mov
ror
cwtl
dec
mov
clc
dec
jo
xorb
test
sub
cmp
stc
pop
ret
iret
push
test
enter
and
fiadds
rcrl
cmp
jp
pop
jl
cld
add
sbb
mov
adc
inc
push
lods
xor
push
fmul
mov
test
dec
push
pop
add
ficompl
call
pop
dec
cmp
subb
flds
or
fcom
mov
lret
std
lcall
cmp
jl
adc
mov
and
jo
sub
addr16
push
mov
sbb
js
inc
int3
xchg
rcrl
add
add
add
inc
jae
push
mov
jbe
xor
outsb
add
jmp
les
add
push
jbe
rcll
clc
jmp
adc
aaa
pop
jecxz
jle
add
cli
mov
iret
imul
add
inc
sbb
std
push
and
push
sbb
pop
testb
mov
fcomps
lgs
and
mov
add
clc
jb
add
jmp
or
inc
jo
mov
stc
rcrl
ljmp
dec
popa
mov
movsl
inc
dec
loopne
gs
lds
sub
int3
call
mov
stc
jo
sbb
sub
sti
mov
and
dec
subb
pop
jmp
nop
jne
mov
mov
fldlg2
int
loopne
jl
inc
addl
or
cmpsl
int3
fdivrs
or
insl
xor
inc
mov
in
aas
pop
inc
add
pop
ss
add
jns
mov
mov
stos
xchg
adc
cmp
add
xor
cmp
test
xlat
xchg
ss
fs
push
ljmp
repz
push
mov
sbb
or
adc
and
mov
int3
mov
mov
lods
xor
xchg
je
outsb
push
loop
faddl
xchg
jno
mov
out
pop
in
sub
mov
cmp
dec
ficompl
inc
inc
fmull
xchg
add
adc
xchg
lret
xchg
xchg
stos
pop
mov
sbb
dec
cmc
fiadds
inc
sbb
ret
pop
mov
bound
les
enter
and
jg
clc
popa
jns
adc
add
out
shl
jle
add
push
pop
or
loop
ja
stos
add
lock
inc
adc
mov
outsb
ret
add
dec
in
push
fwait
or
clc
dec
add
add
lods
add
push
shlb
sbb
xor
cwtl
ss
mov
pop
lods
or
insl
js
aaa
mov
add
repnz
pop
pop
mov
mov
mov
pop
mov
inc
xchg
sbb
mov
or
add
jmp
push
lds
jns
lahf
cltd
pop
pop
mov
adc
andb
mov
lea
aam
mov
push
cltd
jle
mov
andb
or
fwait
popf
ss
push
imull
cmp
add
adc
push
add
cmp
add
inc
aaa
and
fs
pop
pop
xchg
add
add
sbb
pop
jno
pop
cmp
push
out
adc
add
inc
lcall
and
mov
enter
fcomps
dec
movl
hlt
nop
mov
mov
push
in
adc
sbb
lret
dec
mov
cmp
cmpsb
push
icebp
shll
xchg
dec
xchg
mov
push
sahf
notb
xchg
jno
stc
aas
cmp
mov
sub
pop
mov
sub
stos
push
incb
jge
inc
mov
sbb
jno
jo
cmpsb
xor
jns
cmp
jp
loopne
add
aas
rorl
jge
sub
lods
mov
rolb
loope
ja
adc
adc
xor
cld
push
add
and
int3
mov
push
inc
xchg
push
mov
mov
push
jbe
out
rolb
jl
pop
cmc
adc
cmp
pop
mov
ds
mov
fsubrs
repz
adc
iret
pop
jne
add
das
cmp
push
sbb
push
iret
nop
jbe
imul
popf
mov
outsl
cs
fisubs
out
scas
mov
shl
jne
dec
cld
and
pop
dec
int3
or
fiaddl
loopne
sub
pop
sbb
in
dec
add
mov
fldt
jbe
jns
cmp
and
lahf
cs
into
push
sahf
dec
pop
add
mov
xor
push
xor
inc
mov
aas
test
clc
sbb
mov
sub
or
mov
and
add
lcall
add
dec
adc
fdivs
jl
jno
or
xor
call
add
orl
and
pop
inc
push
ficoml
es
dec
jo
or
jle,pt
jb
cld
jg
pop
in
fistpll
sub
or
xor
mov
in
cmpl
pop
mov
mov
cmp
add
pusha
in
or
mov
add
int
cmpb
jno
call
jnp
popl
jl
sub
add
ja
cmpsl
bnd
lods
cmp
xchg
dec
loopne
lahf
out
pop
xor
mov
pop
push
and
les
sub
addl
xchg
add
jg
add
iret
ret
dec
add
arpl
push
jae
fdivp
pop
fwait
pop
je
loope
es
mov
add
sub
fs
xor
hlt
aam
addr16
add
stos
mov
mov
leave
or
pushf
sbb
add
inc
jl
push
mov
jmp
in
xchg
cmpsl
dec
add
in
pop
and
push
adc
clc
stos
in
mov
jp
pop
add
dec
add
sahf
sbb
jnp
aam
xchg
inc
dec
add
shlb
pop
nop
push
add
xlat
filds
les
pop
pop
shrb
mov
rcrb
mov
cmp
leave
add
sarb
add
ror
xchg
mov
jae
data16
add
and
call
add
fwait
repz
mov
pop
mov
pop
mov
sub
sub
add
and
and
sbb
ja
add
cli
cmp
xchg
add
add
push
aas
jns
dec
mov
push
addr16
sahf
or
pushf
lahf
cli
inc
xor
shlb
mov
or
ljmp
hlt
push
aam
icebp
fcmovbe
add
test
orb
sub
je
add
mov
add
mov
and
daa
aas
loop
andb
rcll
or
push
lods
push
out
cwtl
mov
sub
scas
sbb
cld
leave
add
xlat
or
jp
mov
add
dec
jecxz
sahf
mov
rol
subb
push
push
inc
daa
icebp
pop
and
rorb
add
iret
std
icebp
add
fcomps
push
daa
adcl
or
jbe
sbb
sub
lock
lret
push
iret
sbb
add
pop
das
xchg
aas
pusha
test
inc
pop
add
int3
cmc
repnz
add
xor
rol
cmpsb
sub
cmc
loop
push
sub
and
cmp
pop
cmpsb
dec
movsl
or
test
pop
pusha
jmp
or
lock
xor
push
sbb
pop
sbb
cmp
add
jg
mov
stc
je
and
xchg
sti
jle
dec
filds
and
mov
sub
sbb
push
int3
pop
mov
addb
add
adc
dec
add
push
loopne
mov
movsl
xchg
xor
add
mov
sahf
pop
test
loopne
in
xchg
jmp
daa
cltd
sbb
pop
mov
cmp
mov
add
add
ja
lds
add
cld
cmpb
mov
fcmovnbe
push
cmpsl
movsl
jmp
and
setae
sub
mov
pop
jns
inc
imul
add
lock
test
dec
add
and
stos
aam
push
add
mov
aam
inc
add
pop
sub
or
cmp
or
mov
cmc
aad
mov
add
shll
in
pop
dec
or
lret
daa
aaa
fidivrs
fisttps
mov
aad
popa
xor
push
jle
and
fnstenv
add
popa
popf
and
mov
sub
cmp
insl
popf
hlt
add
push
add
jge
inc
in
add
cmp
mov
fcmovnbe
insb
adc
push
add
sbb
or
lret
xchg
jns
divl
pop
es
or
add
roll
data16
clc
sbb
jp
in
fcoms
add
cmp
or
dec
sbb
pop
pop
ret
dec
outsb
pop
mov
movsl
or
sbb
and
jge
mov
sub
mov
xor
cmp
mov
inc
filds
pop
add
xchg
pop
div
ret
or
jno
xchg
fwait
and
push
push
sbb
sub
clc
inc
jle
cmp
xchg
lods
insb
add
dec
outsl
or
fbstp
adc
js
leave
push
push
dec
mov
rcll
icebp
sbb
dec
push
outsl
aad
add
and
sti
inc
fmuls
bound
jbe
les
push
jge
xor
add
dec
jne
adc
cli
lds
stos
mov
and
pusha
and
dec
or
mov
pop
je
cwtl
jbe
or
lods
mov
cmp
or
rcrl
add
fldenv
and
sbb
jbe
add
add
in
add
test
cwtl
pop
mov
cmp
ret
or
test
xchg
or
iret
add
push
pop
imul
mov
jecxz
sbb
icebp
push
xor
fst
lds
jmp
sbb
bound
lock
inc
mov
sahf
stos
pusha
mov
stos
outsb
loope
out
addl
cmpsl
ja
add
xchg
rorl
andb
pop
js
mov
scas
inc
xor
in
add
pop
lds
pop
imul
in
aam
cmpsl
pop
inc
add
jne
test
add
xchg
xchg
les
js
rorl
sarb
jecxz
push
enter
pop
scas
pop
fmull
dec
movl
jmp
add
insb
push
in
add
pop
fcoml
pop
sub
jne
xor
iret
jg
shlb
add
adc
cmp
andb
mov
ds
lods
add
jae
and
xor
sub
arpl
popf
outsl
sbb
mov
push
ret
add
sub
sbb
mov
fcoml
bound
fsts
push
inc
pop
js
data16
popf
test
loopne
mov
jge
call
add
inc
jns
dec
push
dec
repz
mov
push
aam
lds
rcr
add
inc
mov
xchg
cmp
add
sbb
jne
add
movsb
lock
jp
xor
pop
push
mulb
xorb
sub
ds
adc
fwait
dec
or
add
jp
sbb
xchg
inc
add
in
repnz
cmpsb
adc
inc
add
pop
inc
sub
roll
and
and
mov
pop
aaa
popf
mov
add
push
call
loop
addr16
pop
add
add
loopne
faddl
out
aam
cmp
ds
add
cld
fdivp
xchg
pop
bswap
aaa
outsb
ret
xchg
mov
mov
jge
add
mov
sbb
cwtl
push
popf
jnp
aad
mov
fidivrl
das
mov
in
imul
pusha
add
lcall
xor
mov
xchg
sub
mov
sub
xor
fstpl
mov
and
fldcw
mov
pop
mov
inc
mov
xor
push
pusha
mov
stos
pushf
and
pop
sahf
mov
jnp
cmpsb
bound
xor
ficoms
sub
jno
fcoml
push
add
out
out
lock
or
push
faddl
mov
jne
fstpt
jecxz
fsubrs
push
ljmp
loop
push
aas
cmc
pop
sbbb
jp
notb
inc
js
push
add
pop
adc
popa
es
nop
mov
pushf
incl
jecxz
lods
and
fsub
gs
inc
ret
lea
add
int
pop
sahf
inc
lahf
ljmp
cmp
add
fsubs
xor
add
cmp
out
add
ffree
mov
ljmp
pop
jmp
sub
leave
lds
or
loopne
lea
sub
lock
sbb
inc
dec
add
stc
ljmp
icebp
scas
out
mov
lock
pusha
or
cmp
in
pop
or
pop
lret
sub
stos
fbld
das
daa
mov
sbb
outsl
clc
movb
mov
lea
xlat
jge
push
add
test
dec
add
sub
mov
testl
xor
test
mov
add
fmulp
dec
fildl
and
divl
fdivl
inc
test
sub
inc
in
jnp
mov
pop
push
out
cmp
push
mov
add
push
fisttpl
add
in
cmp
dec
repnz
fs
lods
shll
mov
add
dec
cmpb
add
or
out
stc
sbb
xchg
cwtl
and
jg
push
arpl
ret
push
push
js
imul
push
or
dec
call
mov
mov
cmp
or
loope
aas
pop
lcall
pop
pop
pusha
enter
inc
mov
leave
mov
push
push
and
add
sbb
adc
out
lock
jg
jbe
mov
cltd
xchg
pop
sbb
add
push
add
flds
into
das
fdivs
inc
mov
add
arpl
mov
scas
mov
shr
dec
push
int3
lret
ja
sar
faddl
add
js
cmp
inc
out
stos
pop
jb
cmp
add
mov
add
jp
adc
jl
add
push
sbb
pop
insb
or
dec
dec
mov
mov
hlt
adc
or
inc
pop
rcll
add
mov
push
add
cmp
pop
icebp
push
into
mov
xchg
and
lods
rcrb
add
xor
subl
scas
aam
add
pop
cmp
pop
outsb
and
shrb
inc
add
popf
loopne
cmp
in
in
hlt
adcb
pop
fisttpll
rorl
push
daa
scas
push
pusha
dec
adc
pop
stos
dec
xor
loope
movsb
mov
sbb
lahf
or
jmp
icebp
jns
and
pop
scas
lret
and
add
jns
jg
loopne
cli
add
adc
pop
sbb
sub
fs
add
mov
or
pop
sub
popf
sbbl
mov
popa
hlt
jmp
jecxz
loopne
sub
jne
outsl
mov
inc
mov
xchg
jl
push
inc
and
add
push
lds
sbb
pop
dec
cwtl
ror
aad
xchg
lea
add
cmp
ljmp
testl
cli
pop
out
outsl
mov
test
xchg
add
movsb
loop
sbb
push
out
pushf
or
cmp
add
push
add
jns
jle
das
and
fcmovne
in
dec
fisttpll
add
lret
cmp
sbb
movl
popa
cltd
jne
add
jecxz
dec
das
repnz
inc
jo
jnp
add
je
cld
adc
cmpsl
add
mov
out
cmc
aaa
xchg
mov
mov
les
aad
lcall
test
add
scas
inc
adc
inc
int
jns
add
out
inc
sbb
insb
mov
adc
movsb
and
jae
mov
rorb
push
aaa
and
add
xchg
ss
xor
xchg
push
and
lock
in
push
fiaddl
fisubs
pusha
add
sti
adc
mov
mov
xor
ljmp
gs
lods
insl
sahf
cmp
sarl
imul
in
dec
jg
nop
cmp
sub
add
je
push
aam
into
dec
add
push
inc
dec
push
lods
xchg
or
rcr
add
xor
rcrl
movsl
pusha
jo
inc
rolb
cmp
insb
jp
dec
orb
add
call
inc
fmull
pop
push
cltd
xchg
arpl
imul
rep
push
orl
add
icebp
fsubr
repnz
test
into
ds
pop
icebp
out
mov
int
test
pop
xor
cmp
cld
inc
push
pop
mov
fdivrl
lret
dec
hlt
leave
add
cmp
in
cmp
push
pop
enter
add
sbb
ret
xor
into
cmpb
jbe
xor
cmpsl
add
lds
cmp
jns
lock
rclb
arpl
pop
add
add
test
pusha
pusha
in
push
nop
mov
xchg
cwtl
mov
pop
repnz
stc
lcall
insb
enter
fwait
call
pop
dec
mov
and
adc
inc
cmc
xlat
test
inc
bound
inc
cmpsb
cmp
jecxz
push
add
lret
je
packssdw
add
es
addr16
sbb
movsb
andb
sub
jnp
add
idivb
add
pushf
sub
sti
dec
pop
sub
sar
add
out
dec
iret
scas
pop
jg,pt
xor
xor
xchg
pop
mov
or
gs
popf
xchg
rolb
add
stc
xchg
sbb
sbb
push
cmp
hlt
addr16
adc
jnp
add
inc
test
adc
sbb
or
out
lret
test
jle
sub
push
pusha
xchg
loopne
push
add
imull
jae
xchg
xorl
pop
cmp
mov
push
cld
inc
scas
mov
mov
push
inc
enter
test
cmpsb
sub
rolb
xor
fdivrl
out
adc
rorb
cmp
out
xorb
add
movsb
push
mov
pusha
hlt
add
and
imul
cmpl
sub
jo
cmpsb
je
push
lret
fcomi
cwtl
add
ds
cmp
jae
add
pop
add
lds
sbb
pop
insb
sbb
imul
mov
aas
test
pusha
push
cwtl
xchg
push
scas
add
jp
jmp
pop
mov
xchg
adcb
test
mov
add
rep
lea
push
cmpsb
sbbl
out
int
xor
mov
xchg
or
cmp
add
push
rclb
sbb
add
cmp
ss
sub
or
add
push
loope
pop
xor
fadds
mov
adc
mov
pop
push
push
xchg
iret
popf
stos
mov
daa
jnp
imull
mov
stc
add
adc
dec
repnz
call
in
mov
cwtl
nop
sub
fadds
int3
ret
add
pop
jne
mov
sub
add
dec
aad
push
dec
ficoms
mov
pop
addl
cltd
sub
sub
sbb
xchg
orb
jo
dec
cmp
xlat
in
inc
test
pop
push
dec
pusha
add
out
pop
lea
mov
aas
push
insb
xor
or
sbb
into
pop
dec
and
cmpsb
negl
in
add
cs
pusha
and
lods
lret
or
jge
in
cmp
addr16
xor
scas
mov
mov
inc
jecxz
cmp
mov
imull
mov
xchg
or
push
ficomps
add
mov
mov
sbb
fdivl
lds
add
mov
xor
xchg
add
outsb
js
or
xchg
shld
shlb
out
mov
cmp
insb
dec
scas
sub
mov
jb
add
jp
aas
xorb
inc
bound
xchg
xchg
adc
adc
cs
mov
push
adc
clc
dec
pop
add
sahf
push
add
sub
test
push
cmp
fwait
addr16
ss
aad
in
call
and
cmp
pop
dec
or
jle
xor
add
mov
les
cli
sarl
push
shll
add
rclb
shrl
daa
and
dec
into
push
sbb
adc
stos
lock
lock
add
xor
add
repnz
add
outsl
mov
xchg
add
sti
sub
xchg
cs
pop
pop
out
clc
idivb
adc
call
mov
jns
jb
adcb
sbb
enter
data16
add
shrb
cmp
add
mov
pop
mov
shrb
push
or
aaa
adc
or
pop
aad
out
jo
adc
xchg
pusha
mov
das
cli
sbb
xor
adc
ret
sub
add
cmp
inc
or
push
jp
and
push
ret
js
mov
pop
shlb
mov
add
add
insl
movb
and
or
inc
pop
fldt
dec
repnz
mov
xor
xchg
pop
pop
push
add
loopne
xor
and
jmp
in
mov
push
add
or
xor
dec
sti
add
sub
es
std
fisttpll
pop
add
faddl
adc
mov
pop
pushl
je
or
mov
and
push
jle
inc
out
dec
shll
hlt
test
inc
stc
sbb
mov
jo
add
dec
filds
adc
lret
mov
aad
add
gs
dec
add
push
cs
adc
js
popa
mov
mov
sbb
pop
cmp
ds
cwtl
and
movsl
seto
sbb
mov
and
push
lret
cwtl
stos
leave
dec
fwait
inc
add
jmp
xchg
pop
adc
mul
ja
mov
ficoml
mov
rclb
jbe
jge
cmp
sbb
lds
add
andl
jne
add
enter
fsts
shl
cmp
dec
mov
sub
sbb
movl
pop
dec
ret
fldl
xlat
jecxz
cmpsb
dec
out
mov
adc
push
add
ljmp
push
lcall
push
fcmovu
adc
adc
pushf
push
andl
cmp
rclb
andb
hlt
dec
add
mov
arpl
xor
jae
add
pushf
or
add
add
mov
dec
mov
add
stos
andb
daa
push
push
mov
enter
fwait
xor
jae
xchg
mov
add
cmpsb
das
adc
add
icebp
xor
bts
rcl
lahf
rcl
shl
mov
inc
jg
add
pop
mov
js
pusha
enter
sub
icebp
mov
push
add
ljmp
push
in
shlb
cltd
add
inc
mov
fists
mov
aad
icebp
jno
xor
mov
cmp
sbb
mov
bound
imul
aas
mov
lea
ret
movsb
pop
fwait
or
lods
adc
ja
inc
stc
icebp
add
sbb
int
iret
add
sahf
mov
sar
mov
lods
fincstp
dec
fstl
in
mov
and
in
xchg
adc
mov
inc
loope
add
aas
xchg
pop
add
add
and
incl
mov
mov
out
or
mov
jl
add
or
sub
pop
add
inc
pop
jle
dec
add
xor
or
cltd
sub
stos
adc
sub
clc
rolb
bound
or
pop
fldenv
rcrb
jns
jp
jecxz
mov
push
inc
ret
xchg
lods
sarl
fnstcw
ljmp
sub
add
pop
scas
ljmp
movb
repnz
mov
mov
repz
leave
add
shll
mov
mov
pop
cwtl
jae
testl
add
sub
xchg
and
adc
fistpl
mov
push
push
mov
add
xor
aad
cmp
cmp
stos
and
enter
mov
mov
les
in
and
lret
enter
sbb
out
add
cmp
jo
je
add
lret
mov
xchg
int3
pusha
repz
mov
add
xchg
mov
push
mov
cmp
pop
mov
pop
ret
xchg
add
les
sbb
popf
fisttpl
js
dec
jnp
cwtl
test
mov
pop
cmpsl
sub
jle
dec
fsubs
add
adc
cmpsb
sub
and
pushf
adc
movl
cmpsb
mov
imul
test
dec
mov
loopne
imul
xchg
xchg
aam
jl
and
or
cs
jmp
adc
mov
call
lock
notb
orb
es
xor
out
sbb
mov
or
pop
les
mov
dec
pop
subb
add
xchg
repnz
jne
add
jno
dec
icebp
pushf
sahf
outsl
add
ds
lcall
mov
jp
outsb
sahf
and
pop
pop
loope
inc
jno
pop
in
mov
xor
jb
add
sbb
add
ret
add
xorl
in
icebp
add
push
int
out
movsl
add
lods
mov
xor
int3
cwtl
or
aam
lock
pop
dec
push
mov
xor
test
scas
mov
xchg
cwtl
in
adc
rcrb
jl
add
push
subl
mov
ret
push
add
movl
jecxz
cmp
loopne
jl
xchg
or
sbb
pop
addb
stos
sbb
mov
ss
fmuls
dec
sbb
shlb
arpl
int
hlt
add
mov
mov
sub
pop
cmp
insb
or
add
xchg
jmp
mov
pop
mov
xchg
sub
cmp
js
test
lock
inc
or
pop
out
movsl
add
cld
in
inc
add
shl
add
insb
xchg
mov
push
sub
or
jmp
cld
sbb
in
sbb
add
ss
xor
outsb
jge
rclb
add
xchg
addr16
pop
sbb
xchg
movsb
mov
out
call
cwtl
jo
imul
xor
add
push
outsb
pop
pop
add
xchg
stos
mov
push
sbb
push
cmp
jle
sahf
popf
pop
cli
add
jo
test
push
add
pop
mov
fistpl
cmp
into
adc
scas
xor
pop
mov
shll
fmul
xorl
sbb
mov
and
xchg
jmp
mov
xor
push
subl
imul
mov
stc
fnstsw
sbb
xchg
ja
adc
sub
out
enter
mov
jbe
mov
ret
sahf
adc
mov
pop
rcl
outsl
movsb
dec
add
push
in
mov
cmpsl
out
inc
enter
xor
js
add
pop
fs
addb
shlb
cmp
data16
dec
loop
cmpsl
add
test
adc
mov
sub
push
or
mov
loopne
enter
pushf
add
movups
jp
add
aas
cmpsl
cmc
xchg
shlb
push
xor
add
xor
pop
xor
add
int
push
xchg
testl
subb
mov
cmp
movsb
xor
paddw
jecxz
cmpsl
pusha
in
and
mov
pop
add
mov
pop
add
fcmovnu
xlat
xchg
mov
xor
cmp
repnz
rolb
and
sbb
data16
mov
mov
movsl
lock
push
mov
xlat
pusha
push
int3
test
push
enter
xor
sahf
iret
nop
icebp
fstl
lock
ds
popa
scas
pop
hlt
mov
sub
mov
iret
add
mov
lret
mov
xor
dec
cmp
ljmp
jmp
xor
mov
lock
add
in
inc
mov
clc
jb
add
jbe,pn
jp
fcoml
mov
sbb
lds
and
fwait
add
test
int3
xor
lock
outsb
stos
jmp
inc
aam
pop
pop
mov
mov
add
movsl
out
add
xchg
add
mov
inc
mov
push
or
insb
mov
mov
dec
in
cmp
lret
out
or
mov
movsb
adc
jns
and
out
mov
scas
mov
mov
movsl
cwtl
xchg
shr
xor
in
mov
jl
inc
js
push
outsl
pop
subb
fabs
stc
jle
call
fwait
add
mov
cmp
add
test
inc
pusha
mov
test
cmp
adc
cmp
mov
or
add
xchg
push
leave
inc
xor
push
jno
add
add
dec
mov
std
and
adc
call
scas
add
mov
add
stos
fs
inc
add
mov
pop
mov
mov
fadds
pop
sbb
ds
lret
add
and
cmp
sbb
mov
test
arpl
add
jmp
add
mov
call
inc
push
insb
lods
mov
daa
jbe
rorl
pusha
xor
push
enter
out
add
add
mov
leave
addb
and
jecxz
out
je
lahf
add
mov
xchg
or
lcall
stc
add
lret
hlt
addb
add
jg
mov
and
add
push
and
dec
jl
sbb
nop
and
push
sub
sub
xor
ljmp
out
shrb
or
mov
test
xchg
loop
add
shrl
pusha
int3
jl
mov
jp
sub
mov
dec
flds
mov
adc
add
mov
ret
ds
pop
aaa
cmp
iret
xchg
andb
inc
repz
jecxz
push
into
xorb
push
mov
add
aad
xor
pop
clc
incb
ficompl
jb
add
mov
mov
or
nop
adc
xor
ja
mov
cmc
push
mov
sti
into
sbb
xor
mov
aas
mov
rcrb
pop
mov
ljmp
jp
mov
pushf
xlat
jb
nopl
push
xor
dec
add
into
inc
xchg
add
pop
loopne
mov
je
mov
add
lods
add
xchg
cmp
add
andb
or
sbb
cmp
mov
loopne
ss
sbb
daa
xchg
sbb
inc
or
in
inc
sbb
lret
add
std
loopne
out
es
xchg
inc
in
xchg
hlt
pop
mov
push
pusha
jns
test
stos
sbb
por
xchg
mov
stos
xlat
andb
sbb
hlt
push
js
add
xchg
shlb
adc
nop
js
pop
test
mov
pop
or
add
pop
jecxz
mov
add
cltd
repz
or
adc
dec
daa
clc
mov
pop
sub
sbb
sti
add
cld
xchg
and
scas
clc
pusha
repz
push
sbb
dec
fsubrs
dec
out
add
xchg
call
push
add
inc
mov
push
pop
adc
subb
rorl
or
rorb
cltd
sarl
cs
add
mov
xor
cmpsl
jo
loope
test
dec
cmp
ljmp
lfs
mull
std
dec
pop
adc
mov
add
lret
dec
test
sub
out
jle
xor
or
add
and
loope
add
test
add
pop
jne
out
add
aam
push
xor
add
gs
cmp
cli
jge
sahf
mov
jp
add
lea
pop
out
push
add
filds
add
lock
mov
dec
daa
dec
mov
mov
mov
and
inc
aam
cmp
popl
jo
lret
and
dec
dec
pop
sub
icebp
mov
lea
mov
xorl
repnz
mov
pop
xchg
add
cltd
adc
push
nop
movsb
loopne
pop
test
out
sub
mov
sbb
jmp
pop
hlt
mov
push
loopne
cmp
int3
stc
or
lods
mov
fidivrs
aam
shrb
jb
push
inc
jae
xor
sbb
in
inc
ficoml
adc
int
pop
fcmovb
nop
xor
add
in
pop
add
adc
dec
sarl
xchg
leave
scas
mov
rep
andb
repnz
cwtl
mov
sbb
callw
mov
imul
push
mov
xor
ja
add
mov
pop
mov
fcompl
xor
fisubl
loopne
and
add
bnd
push
pop
cmp
mov
or
es
pop
jno
push
jb
jl
or
ljmp
sbb
dec
popa
and
add
mov
inc
adc
and
cmp
sbb
lock
sub
or
js
add
out
in
dec
out
sub
shll
add
mov
xchg
adc
imul
adc
add
cld
jle
and
adc
add
mov
pusha
ret
mov
sub
dec
add
outsb
nop
enter
add
lahf
cs
jg
out
sub
jp
jecxz
lods
pusha
imul
cmp
mov
cmp
das
add
adc
mov
rorb
xchg
lods
xlat
shlb
leave
sbbl
jge
push
mov
or
leave
dec
dec
add
int
pop
add
shrb
xor
aas
hlt
dec
mov
imul
sbb
jnp
es
rcl
xor
sbb
sub
or
pop
mov
pop
rorb
add
pop
or
mov
cmp
push
xchg
pushf
add
lea
sub
mov
add
cmp
mov
outsb
xor
add
test
inc
incb
mov
cwtl
cmpsl
add
loop
shl
lret
push
mov
mov
pop
push
push
mov
mov
fs
add
push
add
add
add
push
mov
sahf
or
and
fcompl
roll
pushf
pusha
push
jb
dec
rcrb
in
inc
cmpsb
and
mov
mov
fs
pop
push
lock
loop
adc
pop
addb
rol
hlt
add
ja
incb
inc
mov
fdivp
add
and
mov
jo
lcall
pop
sbb
push
in
arpl
and
pusha
fdivrs
xor
jmp
inc
mov
arpl
lock
mov
pop
das
fldl
or
ss
sbb
add
pop
enter
sbbb
repz
add
mov
cmp
jae
cmp
fdivl
mov
pop
push
jp
xchg
add
mov
lock
in
mov
dec
out
ds
fcmovu
and
xchg
clc
adc
ja
loopne
add
cmp
lret
sbb
sbb
sub
mov
or
pop
push
rclb
es
pusha
add
pop
std
push
inc
mov
cwtl
sbb
push
je
sbb
stos
and
sub
xchg
xor
sub
lds
in
lods
out
cmp
repnz
push
sbb
nop
fsubp
and
add
add
push
or
xor
enter
pop
outsl
popf
mov
loop
jp
add
nop
sbb
loopne
xchg
cmp
or
lahf
inc
cmp
and
subb
loope
add
popa
cmp
push
dec
sahf
xor
into
push
loopne
cmp
cwtl
pop
xchg
jp
and
cmp
dec
hlt
dec
lds
hlt
cmp
inc
cmp
or
pop
push
fists
inc
mov
mov
xlat
jnp
xor
and
mov
out
sbb
mov
imulb
rorb
adc
xchg
lea
xchg
orb
sbb
add
dec
push
clc
mov
dec
xchg
sbb
cli
add
pop
movsb
movsl
jg
add
fs
imul
pop
cs
sbb
mov
dec
xchg
cmpb
movsb
add
or
sub
lret
outsb
add
pop
loope
cwtl
mov
lea
xchg
inc
ror
sbb
push
scas
fs
fsubrs
mov
sbbb
pop
mov
mov
sbb
sahf
push
ljmp
xor
enter
inc
into
add
mov
add
push
xchg
mov
dec
add
lea
cmp
add
mov
bound
cld
fdivs
addr16
push
rorb
jp
cmp
xor
shrb
mov
add
jns
sbb
add
pusha
lds
add
mov
xchg
aas
mov
mov
imul
out
stc
hlt
ret
jg
xor
cmpsl
rcll
lock
add
jmp
add
cmp
in
mov
xchg
cmp
xor
push
cld
add
sub
xchg
pop
cmp
dec
add
sub
xor
scas
loop
xor
call
das
dec
cwtl
push
mov
sub
push
mov
lock
adc
pop
mov
adc
pusha
cmpsb
fadds
pop
dec
and
mov
cmp
push
clc
or
dec
int3
dec
fs
in
scas
mull
xchg
add
lods
insb
mov
sub
ljmp
into
std
cwtl
fs
add
pop
add
loop
in
sbb
push
adc
inc
sarl
push
or
pop
inc
lret
jle
ljmp
roll
jmp
popf
shrl
mov
add
sbb
xchg
fwait
add
and
mov
push
adc
cmp
cmpsl
adc
xor
push
cli
shrb
and
enter
xor
in
frndint
add
add
xchg
test
mov
stos
sbb
and
enter
jge
scas
sub
jmp
fucomp
push
push
sub
dec
jnp
dec
scas
inc
cmp
cs
cld
push
pop
pop
dec
add
cmc
jecxz
ja
push
xorl
mov
adc
mov
mov
es
insb
adc
loop
aas
push
cmp
mov
cs
out
push
pop
pop
cwtl
push
loop
imul
and
movsl
adc
mov
or
push
mov
mov
xchg
add
jo
in
call
push
in
and
roll
adc
add
and
ljmp
lock
roll
ret
loop
xchg
repnz
adc
fsts
lret
movsb
scas
addl
je
adc
jb
inc
add
test
mov
add
pop
jae
add
cmp
aas
das
ficomps
add
cmp
fisttpll
xor
arpl
pop
xchg
ja
add
popf
mov
add
cmp
es
ljmp
xchg
cmpb
adc
xor
stc
sahf
cmp
dec
sbb
add
xor
lret
adc
sbb
xchg
movsl
add
mov
pop
ror
add
aaa
xchg
cmp
adc
mov
lret
and
stos
add
arpl
int3
add
in
daa
fwait
hlt
bswap
and
mov
fcompl
sub
and
sbb
lods
insl
test
add
outsb
mov
cmp
push
test
lcall
loopne
movsb
add
nopl
xor
inc
sbb
ja
add
adc
add
mov
mov
and
in
loope
pop
add
xchg
into
stos
add
add
sbb
add
flds
repz
addb
dec
cmp
jb
adcb
je
mov
aas
nop
les
fstpl
sub
fsubp
dec
xchg
roll
int
mov
sub
pushf
je
popa
in
mov
inc
or
xor
loop
cmpb
icebp
add
sarb
mov
mov
pusha
mov
add
mov
scas
arpl
jbe
pop
test
vaddsubps
mov
cmc
add
ja
add
lahf
mov
int3
mov
mov
dec
or
add
inc
cmp
lds
les
inc
ljmp
add
inc
jb
out
fs
bound
sub
mov
ljmp
jmp
lds
ret
popa
add
xchg
adc
inc
enter
cli
jbe
ss
mov
cmpsl
fwait
or
xlat
jne
add
out
push
repz
ret
add
popa
in
add
lret
out
call
in
dec
add
cmpsl
lea
push
mov
push
lock
rolb
xor
sarl
sbb
rcrb
add
in
fistpl
nop
or
mov
lock
mov
xor
mov
sub
xor
add
call
adc
push
out
mov
jg
cmp
push
cmp
or
shrb
scas
jle
jnp
add
xor
adc
mov
hlt
push
dec
imul
and
inc
pop
xor
cltd
addb
sti
test
or
cmp
loopne
xchg
dec
add
dec
adc
lods
sti
lock
std
push
or
loopne
push
pop
add
lods
sahf
ffreep
xor
add
ror
outsl
add
inc
in
xor
add
and
push
lds
push
mov
xor
out
mov
iret
add
pop
sbb
xchg
lock
in
fisttpll
adc
cmpsl
neg
jb
push
inc
adc
add
pop
leave
add
int3
push
mov
addb
hlt
mov
cmc
inc
jle
mov
adc
xorps
enter
sub
ds
leave
adcl
lods
dec
adc
int
lret
xchg
ret
les
fs
cmp
pop
fcmovne
dec
scas
add
add
inc
xor
mov
cli
fimull
pop
dec
push
mov
xchg
lahf
std
stc
je
push
add
out
movsb
add
mov
mov
cmpl
popa
pop
pop
fs
gs
pop
xor
test
cmp
or
pop
cmpb
mov
lahf
adc
xchg
or
xchg
sub
call
outsb
mov
jo
sbb
cmpsb
xchg
add
lods
mov
pushf
lock
cs
and
addb
add
lods
pop
mov
loopne
fs
add
sub
add
cmpsb
push
loope
dec
arpl
clc
mov
leave
pop
repz
hlt
mov
es
inc
add
je
daa
jle
add
ja
and
cwtl
enter
mov
add
cmp
inc
jno
inc
dec
or
addb
jae
hlt
pusha
xchg
jno
pushf
cmc
hlt
cmp
test
mov
scas
add
pop
ret
cltd
roll
sbb
push
push
mov
cmc
ja
mov
add
ss
xchg
in
push
or
add
dec
pusha
ret
sbbb
rolb
xor
add
iret
pop
call
frstor
test
pop
addl
in
push
dec
insb
lock
orb
xor
push
inc
pop
sbb
and
jne
fs
fdivr
pop
in
adc
pop
rcll
faddl
adc
mov
subl
pop
pop
mov
test
fidivs
or
cmc
push
mov
movsb
mov
xor
xor
lock
add
icebp
es
cmp
xchg
add
mov
in
dec
or
shl
jmp
lods
push
cltd
pushl
cs
xorb
shrl
xor
in
sbb
sub
dec
aad
sub
push
xor
in
sub
out
fdivrs
leave
mov
roll
ret
fisubs
stc
sub
add
or
or
ret
inc
pop
fwait
cltd
jle
orb
xor
nop
push
add
mov
inc
push
cmp
movsl
pusha
je
jo
pop
mov
pop
cwtl
mov
lahf
cli
pop
cmpb
and
mov
pop
push
gs
loope
shl
mov
out
pushf
add
adc
pop
jmp
in
cmp
add
addl
sub
mov
ja
sub
insl
pop
pop
cmp
pop
jmp
mov
or
or
movsb
cwtl
or
stos
daa
and
pop
or
sub
into
fsubrs
fld
loopne
loopne
hlt
xor
movsl
xchg
cmp
incb
into
jl
inc
push
mov
mov
xlat
mov
jb
and
dec
sbb
mov
iret
jno
add
jo
test
push
push
add
push
xchg
shlb
hlt
or
add
lahf
mov
les
lret
pop
or
mov
jg
adc
es
icebp
add
pop
adcl
mov
mov
loope
gs
push
inc
add
mov
add
fiadds
bt
enter
js
test
fs
or
lods
cmp
xor
dec
mov
add
aas
or
mov
gs
addl
add
pop
and
lret
enter
ficomps
fistpll
xchg
add
fwait
or
adc
ljmp
scas
add
repz
or
push
mov
or
or
sub
popa
rcr
lds
orb
sbb
pop
xchg
add
lahf
popl
out
push
push
sub
mov
and
add
mov
inc
or
or
popa
std
add
push
lock
dec
cld
loope
push
int3
scas
mov
pop
cmc
push
add
sub
bound
hlt
sbb
sbb
leave
push
mov
mov
out
dec
jbe
call
inc
add
dec
ljmp
aas
cmp
jae
and
and
xorb
cmp
lods
lock
cmp
cli
aad
mov
adcl
inc
es
adc
add
cmp
repz
mov
jne
js
test
push
cmc
xchg
fcoms
arpl
add
outsl
add
mov
xchg
or
adc
add
sbb
into
mov
loopne
dec
add
sbb
inc
stos
or
and
cltd
fists
mov
add
mov
cmp
test
adc
setp
in
adcb
lds
mov
push
pop
and
add
mov
jmp
aam
cmp
js
iret
or
movsl
xor
adcb
add
sub
add
and
into
pop
mov
lcall
pop
test
push
jp
add
dec
sbb
rol
in
mov
inc
cld
pop
inc
movsl
cmpsl
hlt
fstl
mov
ds
outsl
mov
js
push
and
mov
lea
icebp
jecxz
scas
push
xchg
adc
mov
addl
lods
in
dec
cltd
add
cwtl
fiadds
lret
xchg
inc
add
cmp
push
sbb
or
cmpsl
jecxz
jb
daa
or
push
adc
out
addr16
lock
repnz
mov
or
scas
lock
mov
cmp
daa
inc
cld
pop
aaa
data16
xor
fidivrs
mov
sub
lret
jg
ljmp
xor
pop
fs
push
push
adc
xchg
add
stos
fimuls
int3
outsl
fwait
es
adc
loop
cmpsl
xchg
repnz
les
fs
sub
add
mov
insb
ljmp
mov
sti
add
sbb
fcmovnbe
daa
aaa
xlat
out
cmp
ljmp
mov
adc
push
cmpsl
call
stos
push
addr16
adc
enter
jmp
adc
inc
jg
js
xor
xchg
sub
arpl
xchg
sub
pop
lcall
sbb
sub
scas
jle
add
pmulhuw
add
dec
aad
ficoms
push
pop
jg
sarb
arpl
mov
sbb
mov
pop
pop
add
mov
js
jp
lods
xor
push
int3
adc
outsl
add
mov
mov
cltd
inc
data16
loopne
mov
sbb
ret
ja
jp
mov
add
leave
xor
dec
mov
fs
xchg
mov
inc
cmp
gs
xchg
add
pop
add
ja
gs
ret
mov
hlt
or
adc
add
jnp
pop
cmp
adcb
int
inc
fcompl
xlat
adc
sbb
jo
ja
seta
leave
mov
mov
push
mov
lahf
popf
mov
test
xlat
jp
sahf
out
stos
dec
add
mov
add
out
loop
je
mov
nop
fs
jo
mov
test
mov
jno
movsb
outsl
popf
push
push
das
mov
dec
pop
add
mov
in
loopne
mov
mov
into
cmp
sbb
mov
push
xor
stc
and
dec
or
arpl
test
mov
and
push
and
jecxz
mov
loop
mov
pop
andb
add
pop
inc
ret
dec
pusha
jo
cs
adc
add
inc
push
push
nop
push
es
jns
cmp
sub
lret
fucom
jge
xchg
adc
in
mov
lock
repnz
dec
outsb
divl
push
movsb
rcll
add
xchg
cwtl
aam
jge
add
push
int3
push
dec
add
jg
mov
cmp
fdivr
pop
jae
cli
xor
xchg
xchg
sbb
add
js,pt
movsl
sub
aaa
sub
ljmp
xchg
xchg
pop
xchg
fistl
imul
jae
or
and
daa
sbb
loopne
hlt
xchg
pop
cmpsb
or
scas
add
sub
sub
add
js
fiadds
mov
shll
adc
push
xchg
clc
inc
adc
add
inc
xchg
sbb
rcrb
dec
xor
add
jp
dec
fdivs
inc
or
test
cmc
ficoml
push
cmpsb
and
pop
sbb
xor
mov
sub
fnstcw
sahf
or
and
pop
inc
add
jb
nop
dec
frstor
loope
mov
mov
rolb
add
xor
pop
negb
pop
pop
out
sti
xchg
lcall
and
mov
and
and
jecxz
imul
mov
cmp
push
push
cltd
sarb
add
pop
out
and
push
mov
aam
add
movsb
jb
in
sub
add
shr
pop
sarb
push
shrb
jmp
add
adc
mov
dec
add
roll
add
cld
adc
lods
push
xchg
add
js
cmp
xor
pusha
dec
ljmp
add
das
inc
push
jmp
sbb
add
inc
js
add
mov
lret
xchg
repz
add
and
mov
cld
jl
pop
xlat
rolb
mov
xchg
jle
lret
fadds
push
pop
in
cs
sub
dec
mov
pop
jl
mov
xchg
adc
add
dec
clc
push
call
cmp
mov
nop
pop
roll
or
test
imul
add
mov
add
cmp
or
and
cmp
hlt
xchg
sbb
roll
sahf
fimuls
sub
sbb
negl
add
nop
je
imul
cmc
add
inc
fmull
and
sbb
dec
cmpb
out
add
or
in
repnz
mov
dec
es
pop
lods
cli
je
fildl
xor
mov
outsl
jecxz
cld
jo
adc
and
add
sub
addb
jge
sub
ljmp
clc
fadds
inc
enter
fadds
int
dec
sahf
enter
and
mov
cld
mov
inc
dec
sub
push
sub
inc
mov
xchg
dec
lock
push
xor
add
sbb
mov
adc
sbb
in
sbb
add
xor
jle
fs
jmp
mov
fdivr
pop
mov
push
inc
sbb
add
cmp
rorb
cmp
mov
jns
andb
daa
mov
pop
ret
mov
ljmp
cmp
add
xchg
add
push
adcl
push
je
lret
and
scas
outsl
dec
push
inc
adc
movsb
mov
cmpl
insl
scas
sub
ja
or
stos
mov
add
adc
sbb
add
test
fsubrl
add
lods
rol
add
sub
cli
hlt
mov
in
pop
cmp
inc
enter
add
push
lods
daa
sbb
mov
push
add
add
push
les
pop
in
in
fwait
inc
shlb
int3
add
daa
and
lods
pop
dec
jne
test
dec
add
pop
push
pop
cli
xchg
add
sbb
adc
add
xchg
test
sti
add
inc
xor
jg
lcall
aam
xchg
pusha
add
test
nop
or
pop
sbb
push
mov
add
mov
inc
adc
xchg
sarb
or
loope
mov
mov
pop
and
mov
mov
jne
mov
mov
ror
jae
insb
test
and
mov
jmp
xor
add
cmp
out
dec
out
xor
lods
loop
rclb
inc
test
fwait
mov
xchg
fstpl
sbb
and
sub
pusha
jge
call
cmp
adc
sub
add
adc
out
mov
add
mov
sbb
sub
add
add
inc
adc
fdivs
add
add
movsl
jecxz
loope
sbb
jmp
add
inc
mov
sub
xor
mov
push
inc
imul
cmp
fiadds
jne
cmpsl
jns
ja
add
pop
xorb
jge
test
dec
nop
xor
lds
sub
push
insb
add
shlb
nop
add
and
jnp
pop
push
jmp
dec
roll
mov
or
jle
pop
fstps
hlt
xchg
fdivl
add
jo
mov
mov
inc
jnp
jmp
adc
jp
repnz
push
push
and
cmp
les
rcrl
es
and
aas
jle
je
push
add
jg
xor
push
imul
into
pusha
sar
add
push
mov
fwait
add
jb
jecxz
lret
add
or
adc
xchg
pop
sbb
pop
mov
xor
mov
mov
loope
adc
ret
jne
cwtl
int3
xchg
minps
fs
in
out
outsl
aas
rorb
out
add
mov
pop
add
insl
xchg
or
push
cli
dec
mov
scas
pop
mov
mov
fisttps
xor
xchg
adc
fsubrs
mov
jns
and
rolb
lcall
js
mov
push
shlb
out
adc
fadd
arpl
add
inc
sti
das
pop
and
mov
in
pop
push
rcll
nop
imull
cwtl
int
test
or
lret
dec
push
icebp
sahf
inc
push
in
fdivp
sbb
jno
add
sbb
inc
ss
cmp
negl
pop
lea
movsb
pop
test
stc
fiaddl
push
cld
leave
fildl
jle
fbstp
add
inc
sub
adc
inc
dec
lock
cmp
inc
add
add
out
cmp
sub
dec
jl
dec
cmc
sbb
and
scas
pusha
mov
mov
or
and
and
mov
cwtl
cmovb
push
bound
sbb
xchg
xor
add
push
mov
xor
iret
pop
dec
jne
sbb
or
popa
roll
imul
add
adc
or
adc
or
lods
lcall
insl
mov
mov
add
mov
inc
loopne
pop
pop
movsb
add
rorl
xchg
fildl
add
mov
add
or
xchg
cmp
mov
add
and
lret
mov
jl
icebp
adc
insb
ljmp
cmp
mov
xor
add
and
push
ftst
test
adc
jnp
add
mov
sti
stc
jo
add
outsl
cmp
cwtl
jo
sbb
mov
mov
inc
sbb
and
add
lcallw
dec
xor
mov
add
xchg
mov
out
add
das
pop
je
pop
dec
and
add
adc
mov
adc
adc
sbb
imul
inc
shr
dec
pusha
sub
stos
adc
add
jbe
pop
je
ret
pop
lods
rorb
call
hlt
sbb
add
sbb
movsb
daa
rorb
sub
cmp
outsb
or
push
add
roll
scas
push
cmpb
in
les
add
mov
clc
hlt
adc
jp
ja
lods
ficomps
daa
shlb
mov
out
adc
mov
or
push
mov
nop
inc
add
dec
ja
shrl
xor
sub
lods
and
mov
jo
nop
cmp
ror
mov
loopne
imul
xor
jg
call
scas
push
add
xchg
out
imul
lcall
and
mov
lret
or
xchg
notb
clc
mov
sahf
dec
adc
dec
mov
ljmp
jmp
repz
mov
jmp
mov
xorb
pop
cwtl
push
or
pop
arpl
dec
mov
xor
add
clc
shr
sbb
xchg
pusha
rorb
jb
icebp
jg
mov
clc
addr16
in
popf
jae
and
xor
lcall
les
rorb
and
and
pop
push
sbb
fsubrs
sbb
mov
xor
add
pop
jne
cltd
xlat
adc
push
jmp
xor
add
adc
mov
daa
shlb
jge
or
or
add
cmp
repnz
rcll
mov
mov
dec
and
mov
mov
psubq
or
ret
push
sbb
cmc
add
xchg
or
iret
inc
adc
mov
pop
loopne
inc
add
or
inc
jae
fists
cmpsl
mov
out
jnp
jp
xchg
aas
fiaddl
lock
stc
add
sti
scas
or
gs
add
add
sarl
pop
pusha
pushf
and
jae
jge
or
aad
icebp
add
push
and
stos
add
jp
in
mov
shrl
loopne
mov
lods
flds
jb
pop
and
add
nop
mov
pop
imul
push
jb
jno
add
fwait
flds
loop
shrl
bound
pop
clc
add
cmp
inc
adcb
or
psrlq
adc
add
sbb
sbb
jbe
popa
pushw
loope
sbbb
mov
cld
dec
add
sub
jne
xchg
cmp
mov
outsl
jle
push
or
ja
ss
pushf
add
push
xlat
mov
loopne
shlb
std
dec
js
cmp
inc
mov
jns
sbb
cmp
xchg
sbb
sub
xor
add
jg
aaa
add
cmp
in
inc
add
aad
test
loope
pop
adc
xor
add
fcomip
cmp
pusha
out
dec
test
jae
push
pop
dec
pop
sbb
aas
cmp
loope
movsb
movsl
fmulp
pop
add
call
mov
add
sbb
adc
add
push
push
les
aad
xor
out
ficompl
mov
pop
cmpsl
add
cmp
and
xchg
push
pmulhuw
hlt
jecxz
sbb
rorb
lods
xchg
add
loope
pop
add
das
test
clc
add
mov
je
cld
add
imul
jae
push
shlb
fsubrs
pop
and
inc
jo
xlat
dec
shrb
lret
addr16
inc
push
out
stos
pop
and
xchg
dec
insl
inc
xor
xor
fld1
add
ds
mov
pop
les
jnp
movsl
je
repnz
sbbb
mov
and
cmpb
mov
adc
cli
aam
cmp
in
jle
cmp
sbb
pop
ret
in
mov
or
add
inc
mov
jns
add
push
cmp
mov
call
lods
xchg
out
cmp
and
pop
sbb
subb
xchg
cld
pop
lea
jecxz
add
rolb
sub
lret
inc
test
fcoml
icebp
push
add
rcrl
jnp
adcb
je
and
inc
pusha
xor
dec
xchg
sbb
cli
mov
lock
out
stos
mov
jo
addb
push
enter
mov
adc
fdivrl
bound
clc
add
push
pop
iret
add
mov
adc
add
adc
push
leave
sub
sbbb
lods
jle
pusha
fcoml
pop
sub
sub
xchg
ljmp
leave
jbe
mov
icebp
int
add
fwait
movsb
adc
jge
cmpsl
add
pop
cmp
cltd
add
push
lods
rorl
dec
jnp
loopne
sbb
add
adc
fs
lods
loopne
or
daa
mov
mov
jecxz
int
cmpl
out
mov
lahf
std
push
mov
jmp
pushf
add
add
pop
jle
xchg
mov
xchg
dec
xchg
call
inc
or
add
lcall
push
add
outsb
jbe
test
sub
xor
jnp
sbb
das
pop
xchg
inc
sub
jne
aad
xor
inc
or
mov
int
lds
gs
add
add
adcb
mov
add
into
lret
jl
stos
or
push
push
and
push
pop
jl
add
sub
in
inc
test
add
pop
leave
mov
std
sbb
rolb
clc
rol
cmp
sub
add
and
lahf
jns
pop
adc
pop
je
in
rclb
mov
and
add
cltd
scas
adc
shlb
fldl
and
inc
mov
add
xor
popl
adc
div
push
das
mov
test
lea
push
and
cmp
jbe
sar
sub
in
faddl
add
cmpsb
sbb
in
add
andl
testl
cmp
and
mov
loope
push
cmp
add
jo
rcll
jmp
or
mov
add
add
fnsave
add
es
push
xchg
lss
inc
sub
mov
pop
push
pop
cmpsl
sbb
imul
mov
pop
mov
mov
inc
ficoml
scas
jp
cmpb
inc
jmp
mov
mov
stos
adc
mov
neg
push
or
dec
pop
push
add
dec
xchg
shl
sbb
add
xchg
add
jl
or
fdivs
jmp
hlt
adc
fidivrs
add
in
test
test
sbb
push
pop
adc
add
imul
add
fisttpl
inc
xchg
mov
roll
mov
xchg
adc
data16
int3
and
adc
daa
inc
int
pop
out
or
dec
lock
rcrb
das
and
mov
movsb
mov
shlb
jl
stc
jmp
in
sub
adc
and
inc
insl
nop
ja
mov
inc
pop
mov
decl
sahf
cmp
sub
fst
iret
mov
notb
mov
cmp
add
add
fmull
mov
sub
jbe
mov
push
fadds
nop
dec
mov
and
dec
or
adcl
ljmp
cmp
push
lock
out
add
mov
test
daa
or
add
lods
rorb
popf
mov
and
dec
idiv
cltd
sub
add
pop
mov
xor
adc
lea
xor
stos
add
dec
psubsw
add
pop
dec
jno
insb
movsb
gs
push
repnz
shrb
push
setne
mov
lds
or
pop
cs
inc
pop
orb
sub
cmp
popa
sbb
icebp
mov
sub
insb
pushf
dec
mov
imul
xchg
dec
nop
popa
pop
add
add
inc
mov
push
aam
xor
aad
lods
jmp
add
sti
mov
fsubrs
insb
add
scas
lods
and
ret
aas
jmp
sti
sub
mov
mov
pop
lea
pop
push
add
mov
xchg
adc
jmp
or
push
add
xchg
inc
je
into
test
pop
cmp
dec
xorb
movsb
add
pop
xchg
lcall
sub
das
mov
aas
xchg
cmp
insl
jnp
adc
jae
or
push
and
push
sbb
xchg
and
mov
add
into
mov
call
push
test
jnp
iret
fwait
lds
add
sub
push
dec
pop
or
and
cmpsl
jge
add
xchg
fwait
rcll
in
add
sub
push
add
fcoms
cmpl
cmpb
mov
cmp
sbb
dec
inc
out
mov
sbb
adc
pop
in
add
ficomps
mov
scas
add
mov
repz
cld
rcr
xchg
out
jg
lock
out
cmpsl
push
xchg
inc
rol
mov
mov
ds
add
fnsave
sbbb
popa
enter
add
pop
push
hlt
or
aad
pusha
insb
faddl
xor
jae
adc
loopne
test
sub
lods
mov
scas
or
sarb
mov
repz
addl
xor
in
js
filds
add
aam
fwait
popf
cmc
out
push
stos
fmul
push
scas
pop
add
mov
or
ja
je
and
cmp
int
in
cmp
adc
jne
or
je
or
ret
mov
inc
adc
adc
add
aam
adcl
outsl
cwtl
add
ljmp
int
in
mov
jp
dec
add
aas
sahf
dec
cltd
ljmp
pop
mov
push
es
add
fcompl
add
xchg
std
sub
jmp
sbb
push
or
cmp
and
in
inc
imul
inc
sub
loope
das
jo
mov
gs
mov
ret
add
adc
cmp
dec
mov
cmp
add
out
rcr
pop
add
cmc
sarl
mov
add
jns
jae
adc
xor
and
lods
sbb
push
pop
dec
clc
or
sub
scas
addr16
sbb
imul
divl
mov
jmp
ss
push
xchg
or
pop
js
add
insb
push
popf
sub
push
cmp
ljmp
push
fldcw
clc
dec
dec
std
xorb
cmp
and
pop
or
add
pop
mov
mov
inc
adc
inc
dec
mov
mov
push
and
add
add
ret
lds
mov
add
movq
add
cmp
in
mov
into
pop
in
js
bnd
sub
mov
sbb
insl
cmp
out
push
xor
cmpsl
cwtl
sbb
xchg
jo
in
add
or
xchg
rcrb
bound
push
push
xor
inc
cld
mov
pusha
add
cmp
scas
push
cwtl
add
clc
mov
nop
xchg
lock
ss
mov
dec
pusha
add
pop
jmp
or
pop
mov
lcall
fwait
iret
stc
sub
cmpsb
ljmp
add
xor
cmp
mov
roll
xchg
add
pop
in
push
add
push
inc
push
popa
dec
add
clc
roll
ret
dec
push
and
insl
icebp
mov
out
outsl
inc
jne
add
mov
pop
sbb
pop
hlt
inc
xchg
mov
inc
mov
sbb
pop
pop
sub
cmp
out
add
and
add
jb
add
rolb
and
inc
jl
and
add
jne
lock
xchg
jge
sti
clc
lahf
cmp
xorb
pop
inc
or
sub
outsl
test
sub
ds
ja
add
add
andb
or
sbb
push
ds
pop
add
es
cld
sub
add
jb
mov
mov
push
sahf
push
pop
inc
add
jge
mov
sub
cmp
jb
ss
in
push
add
mov
add
shrb
ja
mov
mov
mov
lock
call
adc
pmuludq
cmpsb
data16
mov
fwait
pop
nop
xchg
in
add
lods
aam
xorb
add
dec
xor
sbb
subb
test
stos
push
xor
out
cmp
jne
outsb
fpatan
aas
and
add
daa
cs
pop
push
inc
cmc
xorb
pop
fildl
and
sub
and
and
imul
sbb
in
pop
xlat
je
jnp
cli
sbb
inc
outsl
sub
add
es
je
arpl
cwtl
add
mov
add
mov
fistl
data16
fxtract
add
dec
imul
into
xchg
cwtl
add
in
fucomip
jp
pop
mov
cmp
cs
cli
ljmp
scas
push
pop
dec
add
add
cltd
enter
bnd
or
add
pop
ret
cmp
add
clc
je
pushf
fldl
fsubrl
jne
add
cwtl
loope
cli
pop
add
jns
mov
add
mov
mov
mov
fcoms
add
sahf
int
ret
xorb
icebp
lret
push
sbb
test
xchg
xlat
sti
add
rolb
inc
in
inc
jecxz
xor
cmp
pop
pop
and
jmp
add
push
push
mov
mov
xor
rcrb
nop
mov
ljmp
pinsrw
push
inc
or
lock
in
nop
pop
add
jecxz
pushf
add
jg
call
insl
orb
incb
and
ret
loopne
mov
outsl
add
lods
aas
inc
mov
pop
mov
insl
jnp
inc
mov
inc
ljmp
mov
les
icebp
in
lock
push
pop
std
add
xchg
fs
xchg
stos
insb
add
push
arpl
test
cmpsb
cmc
mov
push
mov
xchg
add
ss
int3
add
mov
cmc
lcall
xchg
cld
jp
popl
inc
scas
and
xlat
andl
mov
icebp
jno
btrl
data16
aaa
pusha
mov
ss
xor
jl
fwait
pop
or
mov
pop
mov
mov
or
test
inc
inc
jbe
mov
mov
sub
jns
add
mov
add
nop
inc
stos
mov
cmp
cmpsl
push
xchg
pop
icebp
xor
add
fistpll
je
rol
adc
adc
push
enter
lahf
mov
jbe
cwtl
test
mov
jecxz
adc
bound
and
inc
lret
cmp
sbb
call
sahf
push
ret
es
cld
add
je
fists
jecxz
push
dec
imul
mov
jns
lds
jge
cltd
test
fistl
js
aas
subl
mov
imul
call
adc
std
enter
add
lgdtl
js,pt
rcrb
les
pop
add
xor
pop
ds
test
loope
mov
add
jl
lahf
and
shr
mov
jg
iret
add
mov
mov
mov
xchg
iret
dec
add
lret
imul
scas
test
xor
mov
jmp
dec
mul
add
pop
and
dec
add
shlb
jp
cwtl
arpl
imul
add
inc
mov
mov
xchg
pushl
mov
arpl
cmp
mov
out
push
cwtl
add
jo
out
in
add
loop
movsl
add
ljmp
add
jge
test
hlt
push
add
andb
clc
inc
push
xchg
fwait
add
incl
lock
nop
loop
mov
cltd
xor
adc
std
pop
jns
add
je
ror
add
out
mov
in
lea
clc
stc
adc
mov
add
mov
mov
add
and
inc
adc
mov
cmp
xor
dec
and
pop
rorl
jnp
pop
outsb
inc
sub
shlb
add
psraw
cmp
inc
and
lods
dec
mov
adc
dec
rcr
push
jbe
xor
sbb
icebp
roll
fwait
test
das
jg
pop
pop
movl
cmp
popf
cltd
arpl
adc
xor
xlat
push
dec
jmp
fimull
add
or
ret
inc
pushf
or
or
pop
adc
call
push
in
add
xor
add
xchg
test
jne
js
dec
fildll
xchg
mov
es
xchg
and
mov
mov
jl
bound
sbbl
movsl
dec
cs
add
and
adc
fs
add
popf
cld
mov
ficomps
mov
fdivrl
or
dec
add
cs
pop
loop
cmp
xchg
arpl
pop
clc
add
enter
test
jbe
and
lds
push
sbb
add
jne
sbb
aad
push
adc
lahf
ja
cs
and
outsl
push
dec
or
mov
mov
add
out
jno
add
mov
mov
icebp
leave
sti
push
add
add
enter
push
pop
xor
movl
xor
add
out
fldenv
pushf
and
jl
adc
nop
or
subb
aam
mov
add
in
std
or
push
sub
dec
arpl
cmp
ret
stc
loope
fldl
lret
mov
mov
mov
mov
jno
sbb
fcmovnb
add
mov
fwait
push
push
daa
je
das
sbb
insl
aaa
adc
jl
cmpl
mov
add
movsl
icebp
jbe
filds
fxrstor
repz
aas
sub
mov
jecxz
cmp
mov
cwtl
fistpl
mov
enter
scas
pop
lods
sbb
inc
jle
pop
add
add
mov
inc
sub
and
add
xchg
subb
jb
or
aam
add
lahf
xlat
mov
cmp
hlt
call
mov
insb
pop
mov
xor
mov
jecxz
mov
data16
nop
mov
inc
mov
cwtl
je
add
dec
adc
add
fmuls
lea
push
popa
repz
fadds
cwtl
xor
or
and
xor
add
jne
pop
sbb
or
sub
adc
mov
pop
mov
lahf
gs
stos
es
lock
xor
dec
pop
xchg
aad
test
add
mov
and
mov
mov
repnz
or
mov
jecxz
mov
notl
rorl
sub
mov
inc
add
ja
loop
jl
add
popf
ljmp
enter
mov
ficompl
add
pop
stos
xlat
outsb
xchg
psubq
test
hlt
movb
lahf
mov
jne
xchg
push
pushf
test
or
mov
inc
aaa
add
scas
out
add
jno
les
lock
out
add
xchg
and
xchg
mov
jae
loopne
pop
xor
jo
js
fisttpll
aaa
leave
add
cmpsb
rclb
inc
rcll
add
mov
leave
add
xor
xchg
inc
add
test
xchg
add
pop
scas
adc
jnp
stc
cmp
lret
cmp
or
mov
std
dec
inc
fadds
int
int3
jns
stc
cmp
pop
das
test
dec
mov
daa
xor
sbb
pop
add
outsb
cmp
outsl
popa
fisttpl
inc
push
push
loop
add
xchg
xor
adc
inc
sbb
pop
inc
pop
or
fs
mov
cmp
scas
sbb
fnstenv
ja
add
fisttpl
jno
mov
dec
leave
adc
sbb
xor
push
add
ret
mov
mov
cwtl
cmp
cmp
scas
movl
loopne
cmc
popa
push
es
xchg
movl
notb
add
lret
repz
outsl
xchg
lock
mov
insl
mov
out
cmpsl
rclb
int3
mov
call
add
das
leave
jb,pn
add
ret
shll
xor
pop
hlt
shll
int3
sub
out
test
cltd
cs
lock
adc
ja
arpl
add
addb
cmpsl
pop
hlt
mov
popa
lock
xchg
add
shr
mov
add
cmp
js
mov
pop
outsb
cmp
cwtl
clc
add
cmp
loop
add
mov
jb
shlb
js
cmp
cmp
test
aam
xchg
shl
mov
stos
jg
cmp
addl
jo
les
jg
jle
clc
adc
pop
out
adc
pop
pop
pop
inc
cmp
loop
or
cmp
xorb
jbe
mov
pop
add
std
popa
add
add
xor
add
mov
call
jmp
fidivrs
xchg
shll
jae
push
cmp
mov
cmp
jmp
mov
mov
mov
jo
in
pop
ja
or
xor
out
push
jbe
out
loop
add
push
pop
xchg
xchg
shll
ret
xchg
push
jge
addb
jbe
and
enter
into
push
outsl
add
repnz
adc
add
inc
sarb
add
xor
fs
lea
jo
lock
add
dec
jns
add
clc
mov
mov
or
loopne
push
orb
add
adcb
push
add
imul
inc
movsl
mov
mov
sub
test
divl
sub
mov
mov
xchg
push
in
add
dec
orl
and
sbbb
repnz
push
aas
push
dec
jg
add
fst
sbb
cmp
iret
cmp
fcmovnb
dec
std
xchg
mov
sahf
inc
dec
xor
add
jl
aas
add
jno
or
mov
pop
add
adc
add
xchg
les
mov
adc
mov
mov
movl
daa
mov
dec
sahf
add
cmp
mov
cmpsb
shl
dec
mov
adc
jl
cli
jecxz
jle
jo
sbb
out
aam
push
leave
xchg
arpl
cld
sbb
add
iret
cli
xchg
add
cli
jmp
add
cwtl
add
and
mov
pop
popf
cmc
cs
mov
add
add
xchg
adc
mov
add
adc
scas
pop
popa
xchg
cmp
xor
pop
pop
xor
sub
inc
mov
sub
pusha
sarb
pop
stc
dec
int3
lods
test
rcrl
adc
mov
or
jb
out
cmpsl
pop
mov
insl
dec
fistpll
dec
negl
cmp
inc
push
nop
mov
orl
repz
std
xor
push
loop
test
cld
sub
mov
sbb
popf
push
xor
sub
arpl
sub
test
aad
add
jl
cmp
cli
stc
xor
and
ljmp
sbbl
sbb
add
jge
dec
faddp
enter
xchg
add
lods
clc
cmovge
and
fidivrl
idivl
mov
stos
into
out
movsb
push
cltd
aam
push
dec
cmpsl
push
pusha
fsub
pop
push
add
jle
and
xor
add
sub
mov
addb
jns
in
sub
cld
test
sbb
push
mov
icebp
mov
xor
xchg
lret
dec
push
sbb
aam
xor
fstpt
int3
push
pop
pop
aad
outsl
std
xor
fwait
inc
das
ret
loopne
push
mov
shrb
sbb
out
lds
pop
mov
iret
cwtl
or
and
sahf
andb
inc
cwtl
add
pop
inc
fdivl
orb
clc
outsb
stos
loopne
and
repnz
add
inc
xchg
repz
aaa
cltd
mov
cmp
movl
pushf
mov
ss
push
in
out
pusha
sub
mov
dec
ret
inc
data16
dec
pusha
add
jle
sub
gs
shll
push
xchg
add
pop
in
mov
inc
pop
loopne
push
mov
shll
rolb
dec
outsl
call
scas
cs
dec
add
leave
inc
mov
pusha
jecxz
sbb
es
ja
insb
xchg
les
mov
mov
xchg
push
arpl
cmp
imul
out
add
lods
push
insb
adc
sub
xlat
add
cld
inc
call
xchg
es
les
adc
jle
fwait
dec
pop
aas
adc
add
fstps
int
test
mov
shlb
cmp
sti
pop
das
lock
and
test
push
push
push
add
loop
push
das
adcb
add
jbe
insl
add
sahf
xchg
popa
inc
xor
inc
leave
bound
iret
inc
add
std
loop
imul
sub
adc
sbb
inc
adc
add
ljmp
cmc
inc
subl
cmpsb
test
adc
scas
dec
movsb
out
popa
add
in
repz
outsb
filds
cmpsb
aad
push
imul
add
xor
nop
sbb
loop
rolb
gs
aam
mov
push
nop
push
jae
ds
push
mov
aad
faddl
es
sbb
jge
pop
mov
adc
mov
out
jp
and
ds
andl
fs
dec
pop
dec
push
sub
dec
inc
xchg
push
jb
arpl
add
addr16
jns
xchg
pop
cmp
pop
push
jp
leave
mov
cmpsl
jo
repnz
xor
das
push
andl
push
rolb
sahf
push
jle
cwtl
sub
push
lcall
xor
adc
lock
add
std
aas
ljmp
adc
scas
jne
shll
test
add
cwtl
outsb
sub
aas
mov
gs
ljmp
cmp
add
addb
or
jnp
mov
xor
sbb
add
ja
mov
pusha
mov
or
out
fadds
subl
cltd
xchg
add
sub
mov
dec
lea
ds
and
cwtl
jge
dec
pusha
or
jnp
mov
mov
xchg
jns
sbb
cmp
sbb
mov
aaa
lock
xchg
jg
jne
fistps
sbb
jo
shrl
dec
pop
add
lods
cltd
in
and
xchg
pusha
push
shll
pop
lods
daa
gs
lcall
sub
push
iret
stc
into
cld
mov
sarl
stos
sbb
es
or
add
cmpsb
aas
add
mov
inc
out
outsl
dec
iret
push
pusha
test
add
adc
xor
fnstcw
cmp
inc
add
add
mov
jb
add
es
adcb
sbb
mov
inc
fadds
add
pop
dec
flds
add
fidivrl
inc
mov
xchg
aam
and
xchg
xor
mul
loopne
xor
lods
in
insb
xchg
gs
inc
push
sahf
fcomps
add
mov
imul
ret
add
pop
jge
test
andb
hlt
dec
adc
xor
push
add
push
inc
xchg
ljmp
cmp
mov
mov
and
inc
cmp
mov
lds
xor
repnz
ret
inc
xchg
mov
std
jge
add
ja
mov
xchg
jg
add
cmp
jle
dec
cwtl
loopne
fcmovnbe
xor
sbb
test
adc
pop
subl
mov
mov
rcr
pop
mov
int
into
ljmp
adc
mov
add
fiaddl
pop
add
arpl
xor
lods
pop
add
xlat
mov
mov
les
cld
outsl
dec
lcall
rclb
and
scas
mov
xor
dec
dec
insl
js
mov
lock
mov
lods
cs
mov
dec
add
lahf
xchg
mov
mov
cmovns
mov
cmp
cmpb
cltd
sub
cmp
aaa
je
cmp
mov
push
cwtl
ret
adc
mov
inc
shlb
pop
out
mov
add
ja
aam
lcall
les
xor
inc
xor
mov
out
adc
xchg
lret
cltd
push
ficoms
and
repnz
into
cwtl
add
mov
popf
sar
jle
adc
arpl
sahf
pop
inc
mov
negl
roll
ret
clc
adc
inc
in
fcoms
xchg
or
pusha
inc
xchg
add
inc
iret
push
xor
les
jg
jp
repnz
add
out
and
jle,pt
lock
hlt
ret
lds
inc
add
adc
gs
fwait
insb
or
lods
out
mov
nop
cmp
rol
test
cmp
lahf
or
push
cltd
addl
int3
cmc
sbb
add
and
int
insl
inc
clc
ja
jo
jg
add
outsl
adc
cwtl
sub
jne
sbb
pop
imul
pop
xchg
das
andl
jg
dec
cmp
lods
in
cli
adc
stos
adc
adc
inc
jecxz
lcall
or
sub
outsb
arpl
push
rclb
ret
add
xchg
push
xor
ljmp
iret
daa
xorl
clc
ja
add
scas
mov
in
in
add
imul
movlps
sbb
mov
shll
mov
xchg
movsl
add
mov
cmp
lods
and
repz
imul
or
xchg
test
mov
test
cmc
inc
int3
fldt
xor
mov
adc
add
ret
insl
call
jns
sbb
adc
inc
cmpb
loop
fbld
cltd
xchg
add
imul
add
enter
xor
jo
add
paddusw
loop
push
icebp
cmp
xor
testl
add
ss
push
scas
push
aaa
repz
cmp
dec
mov
sbb
jo
dec
pop
insb
push
insb
inc
adc
inc
in
push
fcmovnbe
fcoml
leave
adc
jl
and
inc
mov
jmp
add
cmc
mov
sub
xor
inc
enter
cld
out
push
movl
js
lock
jge
add
adcb
inc
decl
mov
movsb
nopl
inc
popa
push
xor
shrl
cmc
or
mov
fmulp
mov
mov
stos
js
xchg
push
and
xchg
add
cli
inc
xlat
pop
add
and
mov
push
cmpsb
mov
sub
pop
add
jo
call
add
jbe
mov
cmp
sti
ss
and
call
lock
cmp
sarb
cmp
add
lods
fsubr
idiv
jle
fcoms
push
js
mov
push
or
les
sbb
add
or
mov
sub
add
sbb
xchg
adc
cmp
dec
jo
aas
mov
add
andl
ja
inc
outsl
pop
or
cmp
fcoml
in
xor
lcall
or
imul
ja
loope
scas
leave
add
pop
loopne
add
ret
dec
xlat
sbb
adc
adc
sub
or
xlat
sti
push
icebp
mov
push
shl
in
les
sti
xchg
xchg
and
in
add
imul
pop
lods
leave
loop
jae
shrl
mov
jbe
sbb
cmpb
xlat
push
sbb
scas
shll
fwait
cmp
les
mov
inc
add
cmpsb
dec
add
add
and
jmp
add
lock
inc
leave
cld
loop
es
xor
add
xor
nop
out
and
out
pop
pop
stos
scas
cmc
mov
push
mov
cmp
sub
pop
into
roll
push
lahf
in
fistpl
mov
jmp
push
mov
add
popf
push
repnz
jle
add
adc
int
or
add
mov
cmpb
add
push
inc
pop
lods
js
test
inc
pop
or
cmc
es
pop
xor
push
add
daa
push
inc
sub
jge
add
adc
add
popf
add
push
imul
pop
enter
loop
dec
add
xchg
repz
xor
pop
xor
lcall
sub
mov
mov
add
repnz
xor
addb
loopne
ror
cmc
jo
sub
or
fwait
loop
sbb
add
addr16
xchg
pop
sbb
packsswb
add
add
inc
jo
bound
out
jns
mov
sbb
clc
pusha
pop
xlat
sets
inc
jmp
xchg
nop
test
adc
mov
push
pop
ret
shl
lock
mov
add
mov
stos
fs
mov
jecxz
ret
sub
cltd
xchg
lock
jbe
add
testb
add
jno
or
data16
test
int
pop
xor
fildl
cmpsl
add
cltd
lcall
jg
jecxz
fisttpl
add
in
cs
mov
push
inc
int
loope
xchg
adc
jl
xlat
fnstenv
add
pop
or
push
mov
aas
cmpl
sbb
rcrl
xor
in
cld
add
jb
mov
push
test
add
rol
rclb
or
es
pop
jbe
cmp
inc
test
popaw
sbb
pop
fwait
jmp
jbe
and
sbb
repz
push
push
pop
cmp
mov
dec
jb
jle
add
mov
inc
add
dec
push
pop
and
stc
cmp
add
xor
test
add
jl
aaa
fdivrs
and
aam
leave
pop
mov
inc
inc
in
jne
and
movsb
cmp
test
lcall
mov
cmp
xchg
mov
mov
inc
leave
mov
mov
or
xchg
repz
nop
or
fstps
stos
stc
data16
jne
and
jne
push
lea
xor
sbb
push
xor
cmp
add
pushf
subb
sbb
dec
add
icebp
out
fcomps
or
xchg
sub
aaa
pop
sub
cmp
scas
xlat
rcrb
add
pop
dec
cs
rcr
and
stos
mov
leave
xor
data16
mov
pop
push
xchg
pop
shl
and
and
add
imul
adc
mov
cmp
cwtl
imul
mov
outsb
leave
int3
mov
push
or
imul
add
test
popa
popf
add
mov
rcl
call
sqrtps
cmp
mov
popf
adc
or
lret
add
mov
in
pop
je
add
insl
psubd
add
jnp
enter
xchg
adc
sub
clc
addl
test
jnp
sbb
xchg
hlt
lret
or
sarb
outsb
ret
adc
inc
add
fildl
add
out
sub
jmp
pusha
je
iret
sbb
das
mov
cmp
mov
add
es
dec
mov
add
add
pminsw
fisubs
sub
mov
or
lock
add
push
xor
pop
loop
add
sbb
mov
pandn
adc
faddl
xor
call
popf
xchg
pop
aaa
mov
mov
test
pushf
loopne
enter
stos
push
loope
adcl
enter
pop
fiadds
add
jg
push
pop
or
jns
sub
push
push
insl
mov
or
and
add
push
js
std
arpl
stos
fsub
in
dec
add
adc
loop
add
pusha
clc
or
daa
loope
sub
add
push
fcomps
fiaddl
mull
stos
pop
add
mov
pop
dec
add
add
adc
aad
pop
pusha
bound
hlt
mov
dec
sbb
push
inc
loopne
test
jne
add
and
mov
movl
fs
sub
pop
jnp
into
add
scas
jne
lock
repnz
test
jge
xor
inc
pop
incl
rcl
notb
add
cwtl
mov
pusha
push
push
dec
adc
inc
out
jo
fisubl
pop
jge
sbb
cmpsl
inc
inc
sbb
pusha
fwait
loope
insb
jl
shlb
dec
stos
ret
or
adc
or
roll
pusha
push
add
xor
adc
cmpl
bound
jle
loopne
add
insl
cmc
aam
cs
ljmp
sub
add
cmp
fidivl
aaa
add
inc
js
les
out
mov
shrb
add
push
jmp
xchg
jns
mov
mov
push
fsub
xor
addb
xchg
jne
push
rclb
pop
nop
jbe
jle
or
xchg
mov
test
test
ss
lea
popl
pusha
cltd
jns
or
fisubrl
sub
sbb
pop
cmp
add
fsubrp
stc
int
aaa
xor
jge
mov
jnp
popa
xor
and
xor
sbb
lds
push
add
mov
jge
ds
jno
imul
lfs
sbbb
dec
pusha
xchg
sub
add
aas
nop
leave
imul
adc
cmpsb
mov
add
out
push
xchg
add
loop
add
pop
rclb
inc
jno
lret
or
leave
roll
imul
mov
jno
ja
cmpsl
roll
xchg
mov
int3
in
cs
mov
push
enter
loop
sbb
imul
add
or
cmp
cmp
addr16
jmp
and
jecxz
sbb
inc
add
pop
outsb
enter
cmpsb
pop
xor
mov
ret
mov
in
inc
mov
cld
add
leave
mov
movl
push
dec
and
imul
push
add
add
sti
int
cmpsl
adc
sub
scas
fstpt
loopne
adc
xor
test
push
add
ljmp
sub
stos
jmp
fisubl
pop
inc
push
cli
ss
fistpll
pop
out
inc
pop
stos
add
jecxz
inc
jmp
mov
or
cmp
jns
mov
fcompl
loopne
adc
push
or
jle
hlt
mov
popa
add
pop
cli
loopne,pt
push
and
popa
adc
gs
scas
adc
ret
lods
push
pop
in
sub
icebp
in
ret
add
add
popf
stos
mov
sbb
mov
sub
hlt
hlt
mov
mov
cmp
push
pusha
add
mov
call
inc
pusha
jne
add
jmp
mov
mov
push
adcb
lahf
sub
clc
das
xor
cmp
and
addr16
mov
cmpsb
cwtl
movsb
enter
add
mov
mov
scas
out
popa
add
cmp
xchg
pop
sbbb
sub
dec
mov
adc
add
mov
ret
sub
movsb
mov
inc
adc
push
sub
sub
jbe
loop
int3
in
xchg
rolb
fiaddl
jle
cwtl
add
push
adc
add
lds
stos
mov
adc
pushf
adc
add
cs
insb
jb
test
jae
add
xchg
sbb
lds
push
jl
push
les
jg
mov
cmp
inc
jmp
cltd
cmp
movsb
daa
push
jo
xchg
inc
int
cmp
mov
lods
jnp
shll
out
mov
mov
scas
cmp
jns
lock
pop
add
test
es
dec
sub
pop
mov
sub
cmc
add
dec
leave
mov
push
testb
scas
ja
inc
or
fs
mov
or
sbb
push
add
mov
orb
add
sti
stos
fcmovnb
add
fdivrs
inc
add
mov
push
cli
into
xlat
sbb
xchg
ds
dec
add
sbb
js
and
add
pop
fdivrp
push
xchg
push
jge
scas
cmpb
push
dec
mov
popf
add
pushf
push
adc
into
and
in
xor
mov
outsb
add
mov
jp
add
mov
out
daa
mov
inc
aaa
cmp
into
test
add
dec
mov
sbb
push
lret
es
roll
pmaxub
jne
or
subb
cmpsb
imul
sub
mov
pop
pop
or
dec
cmc
add
add
pop
test
test
outsb
push
add
repnz
aad
test
mov
add
test
imull
or
inc
imul
insl
add
mov
ss
sub
cs
inc
roll
lds
sarb
shl
inc
lock
xchg
inc
pusha
push
sbb
cltd
push
pop
je
xlat
push
dec
and
out
in
stc
add
mov
sbb
lods
ds
sahf
int
andb
jnp
add
push
hlt
insl
leave
int3
fldcw
in
fildl
mov
sbb
or
in
mov
mov
in
push
sbb
ret
dec
add
cs
test
dec
xorl
push
inc
xor
mov
or
mov
data16
scas
xor
jl
add
ret
or
ror
adc
adc
sub
pop
mov
cmp
adc
push
add
mov
sarl
sbbb
mov
sbb
sbb
inc
out
xor
mov
push
cmp
roll
mov
sbb
ficoms
xchg
pushf
in
dec
add
push
mov
adc
inc
sarb
xor
cmp
xchg
sahf
je
add
inc
out
mov
jns
add
rol
jns,pn
push
add
mov
sbb
dec
jmp
jo
sub
outsl
cmp
dec
loopne
mov
mov
xchg
hlt
shl
add
inc
repz
mov
aad
insb
xor
notl
or
inc
fmull
aam
pop
add
cwtl
push
mov
add
jp
pop
aam
and
mov
adc
mov
add
fcoms
add
mov
out
ja
add
dec
es
add
jmp
or
rorb
adc
sbb
adcb
add
test
pop
push
les
je
fwait
cwtl
loope
shll
sub
movsb
add
icebp
fdivr
repnz
std
int3
add
inc
mov
and
and
mov
xor
cmp
gs
xchg
mov
sbb
js
add
mov
hlt
add
jecxz
lret
sbb
loop
mov
mov
jp
or
add
ljmp
add
xlat
mov
push
or
add
mov
jmp
outsb
jp
or
lcall
pop
xacquire
xlat
outsl
test
int3
lds
inc
push
push
mov
add
dec
fiaddl
outsl
jecxz
pop
movaps
adc
repz
add
inc
add
fadds
cli
outsb
mov
or
faddl
mov
ret
in
jb
cmc
jno
ret
repnz
pop
call
jne
adcl
sub
dec
cmp
or
add
faddl
xchg
add
test
fcomps
add
lods
cmp
jl
add
xor
je
adc
in
cmp
add
jbe
mov
ret
or
dec
call
testl
loope
icebp
mov
aam
and
and
pop
add
pop
aad
sbb
mov
cmp
adcl
ljmp
sbb
repz
fildl
mov
int
lcall
pop
std
jns
xchg
dec
sahf
pcmpgtd
push
cmp
pop
sbb
add
xchg
mov
jo
jmp
xchg
lds
add
push
je
pop
jbe
mov
or
or
call
mov
jae
pop
lods
mov
add
sarb
arpl
shrb
push
pop
xor
xchg
add
add
push
add
jecxz
and
add
outsb
push
inc
add
sbb
push
cmp
jae
les
sub
ds
out
fldl
je
jno
or
jae
lret
mov
test
lahf
rcrl
movsb
out
pop
rorl
push
push
dec
sahf
pusha
negl
sti
cld
add
das
push
mov
popf
scas
pop
pop
in
adc
or
dec
add
dec
not
sub
or
xchg
sbb
xor
push
cmc
dec
or
sar
and
imul
aas
inc
add
insl
pop
mov
jg
push
mov
add
dec
imul
cmp
sbb
jne
ds
xchg
loope
and
xchg
rcl
hlt
lcall
inc
mov
sbb
add
bound
es
inc
fbld
adc
nop
push
inc
add
inc
mov
adc
popa
jp
push
add
cwtl
aas
out
loopne
cmpsb
hlt
mov
push
and
scas
dec
lock
or
insb
mov
sbb
fs
mov
das
add
cld
add
sub
xor
add
dec
or
cmp
add
and
movsl
jno
cmp
xchg
orl
into
lods
das
cwtl
cmp
xor
mov
aad
stc
jmp
add
dec
add
sub
bound
dec
add
cmpsl
pop
xchg
pop
mov
pop
sbb
mov
sub
and
stc
mov
add
mov
lods
cli
cmp
dec
add
pushf
mov
sbb
add
fildl
fisubrs
push
or
xchg
xchg
roll
les
add
repnz
add
add
or
shl
stc
push
pshufw
js
adc
jnp
add
mov
test
pop
sbb
push
and
push
lods
and
stos
leave
outsb
popf
mov
sbb
das
in
cld
lahf
add
or
add
and
out
add
push
dec
add
inc
lods
clflush
mov
mov
jae
lcall
fisubrs
xchg
lock
dec
adc
andb
ret
pushf
in
lock
inc
clc
mov
ja
nop
enter
ret
add
cld
xlat
cmp
fldenv
sbb
ja
jne
add
add
stos
add
jne
pusha
pop
ror
cmpsb
xor
pop
add
pop
cmc
mov
add
mov
sub
lock
xchg
sahf
or
cmp
or
adc
popa
fildl
dec
xor
repz
dec
jns,pt
add
push
jo
push
mov
jmp
cmp
xor
fnstcw
sub
pop
sti
add
dec
cmp
inc
push
dec
add
xchg
add
inc
cwtl
pop
pop
dec
and
add
aas
mov
inc
imul
sbb
jge
cmpsb
add
lock
pop
pop
xchg
mov
mov
push
adc
imul
dec
enter
xor
sbb
or
roll
cwtl
lods
jno
cmpb
add
xor
cmp
shlb
pop
jmp
ljmp
dec
mov
xchg
jg
adc
add
mov
addl
lods
lret
ss
sub
orb
mov
call
jg
jae
xor
jle
dec
int3
dec
pop
add
mov
test
mov
pop
jp
or
push
push
cmp
enter
push
cmpb
icebp
in
add
jmp
mov
jl
inc
push
mov
cwtl
movq
insb
and
mov
mov
dec
xor
mov
push
outsb
mov
add
inc
in
jge
fs
insl
sbbb
fiaddl
out
imul
cmp
xor
and
loop
addl
cmp
jo
dec
dec
rolb
mov
out
dec
stos
adcb
popf
xor
loopne
xchg
inc
push
cmp
sub
and
adc
xchg
and
lock
in
jne,pn
subb
add
mov
stos
addb
leave
std
mov
pop
push
sub
mov
sbb
into
and
push
in
jno
xor
rorb
jae
add
dec
fcoms
pop
pop
mov
push
rcrb
add
or
jnp
lods
inc
rorb
adcl
cmp
xlat
and
xor
lahf
xorl
pusha
fcomps
xchg
cmp
repz
sub
test
out
mov
pop
push
push
sbb
mov
loopne
outsb
or
mov
mov
shll
mov
add
jg
pop
insl
push
pop
and
int
stos
movl
cld
lock
add
xchg
addr16
jp
int
aam
aad
jae
lock
je
mulb
jmp
add
sbb
xor
dec
insb
lret
subl
sbb
out
sbb
ret
sbb
cmp
mov
adc
or
clc
mov
mov
add
sbb
dec
add
jno
sub
fadds
pop
call
mov
cmp
ja
push
lret
inc
or
in
addr16
push
pop
xchg
mov
in
cmpsl
add
jmp
movb
ljmp
out
xor
inc
imul
cltd
and
adcb
mov
add
inc
jp
cwtl
ret
add
movsl
cmp
mov
cmp
cmp
mov
xchg
mov
mov
adc
xchg
jge
mov
add
mov
lock
repnz
pop
xor
fiaddl
pop
jl
jge
add
outsb
add
cmp
outsl
jp
cmpb
pop
clc
addb
jmp
mov
cli
pop
aam
cmpsl
inc
lret
std
add
add
inc
cmp
mov
or
add
add
into
add
stos
fsubs
xor
cwtl
jns
hlt
xchg
pop
dec
mov
cld
addb
inc
push
and
or
pop
fdivr
add
sbb
sbb
mov
push
add
mov
push
add
mov
adc
nop
clc
je
pop
repnz
or
and
cmc
add
rcll
dec
mov
cltd
cld
je
js
pop
add
pop
mov
cmp
and
decl
mov
jmp
into
dec
adc
cld
adc
lea
mov
sub
pop
and
pushf
fnstcw
addb
or
xor
jge
ss
add
andb
loope
dec
lahf
add
add
aad
pop
call
add
push
add
lahf
pop
mov
popl
inc
test
mov
push
rolb
mov
dec
test
and
add
into
xchg
orl
add
enter
aam
sbb
sbb
mov
test
and
shl
imul
add
mov
mov
lods
pop
and
pop
push
mov
mov
cli
aas
xchg
andb
or
jbe
jmp
loope,pn
ret
fiaddl
orb
js
in
test
dec
lret
add
mov
in
add
push
mov
adc
in
or
and
test
int3
mov
loopne
inc
aaa
test
xor
les
ds
xlat
adc
lahf
add
or
fdivl
pop
and
adc
ss
fwait
mov
and
loopne
out
movsb
ret
incb
push
xchg
dec
sbb
cs
add
dec
aam
xchg
mov
popa
cmp
sahf
push
push
mov
lcall
xchg
icebp
mov
pop
ds
pop
adc
push
add
outsl
fsubrl
inc
mov
fiaddl
mov
sbb
inc
setne
stc
mov
sub
incb
dec
pop
xor
mov
pop
aad
inc
dec
frstor
insl
pusha
rcll
dec
addr16
push
add
pusha
dec
jecxz
mov
xorb
inc
dec
aaa
lcall
fnsave
iret
jno
pusha
into
adc
clc
roll
xchg
and
jae
jnp
clc
je
inc
and
add
xlat
xchg
add
les
push
sbb
add
es
jle
add
js
fsubrs
push
in
add
movsb
jle
add
dec
popa
fiaddl
pop
mov
sbb
repz
xchg
aam
jno
pop
add
sub
or
in
sbb
loop
inc
daa
lahf
cld
mov
mov
inc
call
add
cli
outsb
ss
into
loope
rcll
mov
arpl
aam
xor
lret
pop
jno
pusha
lea
mov
add
icebp
mov
mov
test
lret
imul
cmp
mov
push
out
push
xchg
mov
orl
shlb
roll
aaa
les
aas
push
jmp
es
inc
fstps
mov
and
adc
subb
inc
popa
shlb
xchg
mov
addl
in
jae
add
stos
mov
mov
xor
idiv
mov
mov
into
adc
call
fcmovne
inc
add
addr16
push
leave
cmpsb
add
xor
dec
mov
add
movsl
mov
xchg
push
xor
aad
adc
sub
jmp
jp
add
mov
xor
ljmp
outsl
inc
and
aam
mov
xor
push
in
pop
mov
or
sbb
adc
and
popa
xchg
push
jmp
add
mov
rorl
sahf
pop
mov
lret
add
imul
test
std
dec
add
jb
pop
cmp
adc
push
mov
adc
gs
pop
rcrl
mov
push
add
pop
cmp
or
sbb
sub
mov
fucomi
mov
add
lods
gs
imul
out
jmp
stos
add
cwtl
dec
repz
mov
sahf
push
add
and
and
push
sbb
sub
pop
in
rorb
ret
cmp
sbb
xchg
scas
add
xor
inc
test
ret
jg
push
sbb
popa
and
stos
sarl
mov
jmp
ja
cmp
xor
addr16
jb
fisttps
push
jecxz
lds
mov
rorl
xor
into
xor
popf
notl
sbb
sbb
dec
cmp
push
inc
dec
stos
adc
sub
push
add
test
sahf
fimuls
jo
or
adc
add
inc
cmp
hlt
jp
pop
or
fstpt
test
sti
inc
push
in
call
hlt
iret
xor
lock
sub
adc
xor
adc
scas
out
push
ds
sbb
mov
cli
mov
or
incl
into
ja
enter
jno
xchg
mov
mov
jns
add
lcall
xor
gs
filds
add
movsb
out
lahf
jle
pop
dec
add
mov
jnp
lods
sbb
es
leave
add
inc
add
mov
jp
sbb
xorb
aam
or
iret
sbb
inc
push
add
sub
stos
xor
xlat
lods
in
adc
pop
testb
fs
mov
sar
pop
loopne
iret
add
lock
add
das
outsb
fldcw
xchg
sti
cld
bound
mov
inc
je
add
or
hlt
ja
add
and
lods
sbb
mov
jo
rol
xchg
ljmp
lods
pushf
shrb
loopne
push
mov
sub
xchg
add
sub
stos
push
push
pop
andb
add
in
pop
xor
fstl
int
push
add
jne
adc
movsl
inc
adc
add
jns
add
add
mov
sbb
repnz
in
mov
sub
lods
cmp
loop
push
adc
add
pop
sbb
add
mov
insl
inc
std
inc
or
pop
adc
jo
daa
add
mov
rcll
out
cmpsl
lock
movsl
popa
enter
push
add
je
out
jecxz
sub
repz
lcall
ljmp
mov
add
inc
adc
clc
jo
xchg
pop
add
sarl
ret
or
cld
hlt
push
add
jg
clc
push
mul
dec
add
js
das
icebp
loope
adc
ss
fnstsw
notl
xorl
movsl
je
push
subb
xchg
push
add
loope
fs
mov
jge
add
cmpsb
in
sysret
sar
sub
add
int3
enter
push
clc
xor
shlb
xchg
test
jne
add
roll
xchg
push
out
loop
jmp
xor
addr16
mov
ret
push
pusha
mov
and
add
negb
inc
popf
cmp
cwtl
es
aaa
xchg
adc
enter
or
dec
adc
imul
nop
dec
mov
jbe
inc
xor
stc
dec
pop
pushl
mov
cmp
insb
push
mov
fwait
movsl
aaa
pop
push
jmp
addb
sub
adc
push
jo
push
ret
jns
insl
dec
adc
cld
pusha
pop
insb
mov
pop
aaa
push
repz
add
enter
add
jne
mov
cld
dec
cmp
add
das
push
mov
pop
pop
inc
or
add
push
das
lods
stos
xchg
data16
fmuls
xor
in
bound
mov
fwait
rcrl
ret
js
fyl2x
ret
inc
imulb
mov
ljmp
pop
je
aad
add
jl
add
mov
test
lock
data16
ljmp
insl
add
push
in
stos
or
add
imul
movsb
lcall
dec
dec
dec
cmp
hlt
dec
add
sbb
fcmovb
add
mov
push
addl
pop
mov
xor
fs
inc
xor
out
push
jno
or
xlat
loopne
add
and
lret
insl
add
pushf
add
push
sbb
inc
imul
test
cmp
mov
fs
sub
cmp
pop
xor
jno
into
sub
sub
adc
fstpl
dec
xchg
pop
jno
sub
xlat
jecxz
call
push
fcmovnbe
push
popf
mov
pause
cmp
enter
lcall
adc
xchg
mov
aas
push
mov
mov
lods
or
add
in
in
fsts
add
mov
loopne
and
xor
pop
inc
add
iret
push
lcall
cs
data16
xchg
cmp
pop
aas
pop
cmc
add
and
scas
jl
jbe
jecxz
imulb
sub
pop
xor
pop
pop
inc
add
out
test
add
lea
mov
leave
xchg
cwtl
stos
pop
add
fcmove
cmpl
lahf
xchg
xchg
mov
lcall
mov
cld
test
inc
stc
dec
movsb
clc
xchg
jmp
stc
add
shll
sbb
add
xorb
add
cmp
xor
push
pop
ficompl
loop
mov
imul
sbb
add
mov
mov
and
and
sti
cmpsb
add
sbb
imul
xchg
sub
fadds
rol
jae
mov
mov
mov
and
adcl
cwtl
pop
push
xor
mov
add
subl
test
push
add
cmpl
xchg
push
sub
jo
add
dec
or
and
or
stos
add
es
loopne
push
leave
pop
jp
enter
sbb
sub
rclb
cmp
popf
andl
pop
es
jns
mov
loopne
jo
loop
pop
sbb
push
mov
ret
filds
sbb
nop
ja
add
scas
call
add
pop
sub
and
inc
push
cmpsl
add
stc
push
cli
ds
rclb
lret
es
sbb
in
push
xlat
cli
ja
mov
outsl
add
sub
pop
sbb
pop
inc
mov
js
pop
call
xor
or
and
test
and
sbb
ljmp
xlat
mov
add
push
out
fadd
xchg
or
mov
and
mov
cwtl
mov
add
add
sbb
xchg
push
in
inc
in
inc
adcb
mov
or
xchg
inc
int3
adc
lret
cmp
cmp
pop
insb
push
cs
inc
leave
xchg
push
dec
mov
test
nop
mov
inc
sbb
push
mov
pop
subb
pop
and
inc
xorl
lods
inc
pop
lea
testb
inc
out
mov
repnz
xor
aaa
popf
mov
add
data16
repz
rclb
icebp
pop
cwtl
decl
push
pop
imul
pop
inc
xorl
mov
sbb
loopne
pop
dec
jnp
cmp
adc
inc
sub
sub
movl
sub
gs
stos
out
add
imul
scas
cmp
inc
push
sbb
adc
cmp
add
mov
nop
mov
loop
in
inc
mov
add
cltd
pop
add
faddp
test
sbb
insl
stos
inc
push
mov
enter
fsubrs
sub
fisttps
or
or
cmp
sub
nop
sbb
push
shl
mov
jecxz
xchg
mov
sub
rcrl
je
rcll
push
je
inc
jnp
add
xor
and
mov
divb
aad
lea
fwait
jl
cmp
je
imul
lcall
pop
hlt
int
add
adc
sti
mov
in
imul
or
mov
add
and
and
outsb
pop
inc
pop
enter
sbb
shlb
cmp
imul
mov
add
xor
fistpll
es
cli
lcall
mov
dec
aas
fcmovnb
outsb
or
shl
xor
jbe
pop
lock
dec
sarb
sub
sub
out
add
inc
push
add
iret
lock
ficoml
flds
jbe
popf
fdivrl
nop
sti
aas
std
and
js
inc
in
dec
adc
add
aad
in
test
inc
add
js
mov
pop
or
adc
repnz
dec
mov
enter
ds
insb
xorl
jo
mov
jne
add
pop
repnz
sahf
idiv
pop
add
int
sbb
mov
mov
sub
mov
jmp
in
repnz
jmp
push
test
bound
add
mov
push
adc
rcrl
and
insl
push
repnz
movsb
in
pusha
add
sahf
lret
push
rcll
cmp
push
add
xchg
xchg
sub
add
or
mov
negl
loop
lods
and
mov
inc
mov
sbbl
testl
fwait
pusha
xor
ds
sbb
cltd
mov
filds
mov
dec
in
adc
addb
int3
xor
adc
sbb
bound
add
loop
sub
movsb
and
adc
or
mov
or
pop
mov
xor
pop
ja
inc
popa
xorb
mov
xchg
cmc
sbb
sar
bound
push
push
loopne
add
aaa
dec
inc
lcall
loop
popf
cwtl
mov
xor
adc
mov
inc
clc
cmp
inc
pop
mov
or
imul
xor
mov
bound
push
add
cmp
inc
push
mov
or
jae
sbb
loope
fstl
movsb
cmp
shll
push
in
pop
dec
lret
pop
data16
aam
add
or
sbb
pop
in
fdivs
ljmp
add
outsb
cmpsb
sti
sbb
xlat
sti
or
adc
cmp
inc
loope
xchg
in
cwtl
sbb
push
inc
adc
xchg
fdivrl
test
mov
mov
mov
out
inc
ret
test
std
or
into
sahf
nop
adc
pop
sbb
jmp
pop
rorb
adc
inc
ds
call
sbbl
xchg
idivl
bound
rol
push
sub
popa
mov
jmp
xorb
xchg
outsb
mov
xor
adc
xchg
out
mov
rclb
xchg
fs
add
add
xlat
sbb
dec
mov
les
rolb
add
stc
push
dec
iret
mov
fs
and
dec
stos
test
xchg
inc
cmp
and
fsubs
pop
cld
push
adc
icebp
out
rcll
dec
in
adc
add
loopne
xchg
popf
movsb
jo
push
add
fdivrs
cmpsb
stc
add
lahf
scas
pop
lcall
push
call
dec
and
hlt
incl
sub
add
daa
sub
bound
in
or
ds
dec
or
ret
in
pop
shll
into
xor
adc
mov
add
mov
sbb
out
movsl
test
mov
mov
inc
movsb
add
test
cmp
push
out
push
or
push
mov
add
inc
aaa
mov
jg
loopne
or
xor
add
push
movsb
aaa
dec
xchg
cwtl
cmp
and
mov
jmp
sub
mov
roll
sub
and
pop
flds
dec
and
push
push
mov
and
or
push
popl
xor
imul
sbb
subb
cli
jne
dec
push
mov
mov
aaa
or
or
add
sub
in
insl
mov
in
inc
mov
mov
or
jp
or
pusha
adc
fldcw
cmpsb
or
popa
xchg
rcll
adc
add
xchg
in
inc
pop
cltd
jmp
mov
ret
sub
ds
cmp
adc
aam
push
out
and
mov
jns
add
daa
xor
popa
xchg
or
addb
push
arpl
popa
lods
cmp
fnsave
inc
dec
fistps
ret
and
fimull
adc
loopne
cmp
sub
out
fadd
das
mov
cmp
jns
cmp
out
push
cli
add
inc
xchg
pushf
lahf
mov
es
push
pop
add
stos
hlt
cmp
aas
jo
and
cmp
jl
xchg
add
inc
sbb
stc
or
imull
add
and
mov
mov
mov
cmp
jl
fwait
pop
pop
fwait
daa
pop
loopne
cmc
dec
pmaxsw
addb
les
and
imul
aam
mov
push
push
fsubr
nop
pop
cmp
cmp
negl
enter
adc
push
xor
lock
in
leave
lcall
repnz
and
adc
cmp
call
testb
mov
sub
loopne
inc
inc
inc
xchg
mov
push
cmpsl
lret
and
xor
cmpsb
in
cmp
int3
inc
adc
adc
push
cmp
add
xlat
pop
xor
jns
cmp
xchg
mov
pop
test
push
pushf
cwtl
inc
mov
std
push
pusha
lods
fbstp
pop
pop
xchg
fstps
loope
int
fdivr
icebp
incb
sbb
sub
or
out
and
filds
fisttpl
xor
int3
and
adc
fadd
stos
popa
and
sub
fsubr
or
add
in
add
and
inc
hlt
subb
loopne
xchg
mov
inc
push
addb
addl
enter
lods
xchg
pusha
jb
aam
je
xchg
xlat
mov
dec
sub
rclb
mov
in
bound
adc
add
mov
daa
add
psraw
mov
add
pop
push
pop
adc
push
mov
jg
ljmp
push
push
aas
cmpsb
ret
xchg
js
cmp
and
out
aam
inc
mov
push
pushf
dec
and
pop
push
jo
imul
cmp
addr16
xor
inc
and
or
repnz
push
loop
cmpsl
sbb
xchg
scas
pop
out
mov
mov
xchg
ds
add
cld
dec
jo
pop
out
add
pusha
cmpsb
dec
add
fwait
mov
add
outsl
fsts
cmp
sub
das
gs
dec
xchg
add
sbb
out
adc
insl
cmp
aam
add
test
xor
mov
fnsave
jne
pop
mov
push
dec
daa
add
push
insl
add
and
mov
mov
sub
cli
push
sar
add
pop
xchg
push
je
sub
push
mov
adc
movsb
push
insb
adcl
sub
imulb
push
jne
cmp
mov
xchg
jb
dec
pop
add
pop
leave
mov
ljmp
and
cwtl
inc
loopne
mov
sub
adc
push
add
pusha
jne
aam
xlat
add
nop
aas
adc
aam
and
out
roll
jnp
shld
movsl
dec
lock
hlt
ja
push
shlb
cmpsb
xor
sub
andps
xchg
and
add
mov
fists
pushf
sub
push
pop
or
push
pop
outsl
or
dec
inc
jae
test
pusha
add
pop
scas
aaa
les
test
mov
into
stos
cmp
sahf
xchg
cmp
sub
sub
adc
movsl
outsb
icebp
add
sti
leave
jmp
nop
std
cmp
jge
into
aad
testl
test
enter
xchg
pop
cld
adc
test
cltd
mov
notl
aam
pushf
enter
sub
jae
adc
mov
add
andb
cwtl
add
add
mov
xchg
cmp
add
testl
xchg
lds
xchg
loopne
arpl
sti
cmp
xor
mov
jp,pt
dec
inc
nop
adc
pop
push
add
fwait
and
lods
les
jge
add
fs
pop
pusha
or
sub
dec
add
xchg
pop
inc
jno
jg
adc
pop
and
adc
cmp
and
rcl
inc
add
out
movsl
in
addb
add
test
fcoml
push
jne
imull
mov
xchg
jb
push
xchg
and
mov
movsb
cmp
subl
daa
mov
adc
es
enter
inc
inc
pop
aas
mov
lods
pusha
pop
or
scas
xchg
ja
pusha
and
nop
les
sbb
jbe
mov
and
pop
or
mov
add
cli
in
stc
sub
mov
and
push
shlb
nop
daa
push
ret
add
push
cmp
add
add
add
loopne
or
mov
ret
dec
push
and
dec
in
insb
or
sbb
sub
sbb
int3
push
xchg
or
cwtl
sbb
add
cmp
aaa
stc
mov
xor
cli
sbb
inc
pop
stos
xchg
shlb
or
popa
adc
mov
cld
xor
imul
push
xor
cmpsb
sub
sarb
cmp
push
push
xor
add
inc
pop
mov
add
mov
rclb
lahf
pop
stc
add
inc
out
jge
shll
and
outsl
and
cmp
dec
sbbb
or
lahf
js
add
sti
dec
mov
mov
movsb
pusha
xchg
testb
xor
inc
cmp
rcrl
mov
arpl
daa
lcall
or
mov
sub
dec
nop
clc
clc
cmpsl
es
xor
movsl
insl
add
jle
outsb
sub
xchg
les
test
and
add
inc
loopne
push
push
repz
sub
push
jno
sarb
inc
sbbb
mov
pop
lods
test
jmp
or
orb
dec
insb
je
adc
repnz
addr16
subl
or
xor
cmpsb
js
hlt
add
cmpsl
adc
int
adc
aad
int3
add
hlt
push
enter
aad
stos
leave
sbb
lret
pop
dec
jl
rorb
scas
cmp
pop
xor
fcmovnb
or
nop
mov
sti
add
mov
jb
add
adc
aad
mov
ret
push
inc
xor
add
leave
dec
dec
sub
and
push
mov
repnz
mov
in
pop
loopne
cmpl
sbb
adc
adc
mov
outsl
or
pop
adc
leave
mov
inc
jo
add
shlb
out
sub
jge
in
repz
jp
fadds
out
sub
pop
dec
dec
inc
out
repz
jmp
aad
add
inc
push
shl
test
or
ds
movsb
adc
add
je
cwtl
xor
aad
mov
pushf
insb
mov
xor
inc
inc
push
pop
les
stos
cmpsl
push
in
sub
fmuls
mov
clc
imul
xor
cwtl
add
sub
mov
mov
lods
xor
ja
push
xchg
js
sbb
mov
push
push
rorb
pop
or
push
fs
repnz
fwait
inc
jne
mov
cmp
xor
iret
pop
adc
xorb
dec
add
cli
xchg
shll
testb
jl
jl
shrb
jecxz
test
xchg
adc
or
sahf
jae
leave
pmuludq
daa
and
inc
add
cmpsb
fldl
sub
insb
pop
mov
inc
cmpsb
lods
or
rorb
ljmp
add
stos
scas
ret
jne
mov
cld
test
mov
dec
std
orl
and
xchg
cmp
ret
mov
add
mov
inc
je
add
addb
out
adc
lea
loopne
lahf
xchg
add
and
add
popf
add
loope
push
out
mov
push
inc
pushl
and
data16
test
inc
dec
sarb
mov
mull
or
adc
add
pop
pop
mov
mov
stc
pop
mov
pop
xor
add
decl
clc
or
and
mov
sbb
pop
mov
push
pop
mov
sbb
js
out
imul
cld
or
outsl
sub
add
lock
fadds
fsubs
aad
or
and
adc
add
aaa
int
pop
mov
js
add
xchg
insl
shrb
push
or
scas
addr16
les
jne
jle
jp
imul
fwait
ljmp
xor
mov
cwtl
xorb
add
ja
sarl
mov
xor
push
ja
push
xor
adc
insb
inc
pop
sub
arpl
clc
test
add
jne
xchg
flds
adc
xchg
jbe
dec
bound
loopw
pop
jnp
popa
xor
mul
ret
inc
out
and
mov
mov
js
loopne
shlb
cmp
add
dec
sbb
cmc
add
xor
popa
lods
inc
and
lods
faddl
ficompl
dec
les
in
mov
out
mov
mov
push
comiss
mov
repnz
add
mov
sarb
dec
orl
push
icebp
dec
mov
pop
popf
mov
jne
adcb
adc
jnp
dec
lds
mov
ljmp
lret
or
faddl
cmp
cmpsl
arpl
xor
mov
push
leave
call
xchg
sahf
lods
fsub
popf
add
jge
add
pusha
pusha
add
add
mov
push
jae
scas
mov
test
sub
or
pop
cmp
leave
mov
pop
jle
out
cmp
or
aad
inc
icebp
pushf
adc
inc
jg
popa
insl
adc
int3
shlb
loopne
adc
lcall
push
cltd
cmpsl
or
pop
js
push
in
stos
add
jle
shr
repz
xchg
jno
jns
add
adc
xorb
pop
je
push
add
ret
xor
loop
and
mov
or
sbb
lock
mov
sbb
xchg
or
push
add
jno
cmpsb
ret
pop
daa
or
nop
pushf
xchg
mov
adcb
xchg
add
into
mov
push
jle
sbb
xchg
xchg
xchg
les
repz
and
add
les
adc
adc
mov
daa
dec
lcall
mov
or
imul
loopne
dec
int3
cmp
lock
xchg
or
mov
leave
pop
inc
or
loop
sahf
stos
mov
out
and
adc
mov
xchg
mov
and
and
inc
add
fsubl
xor
push
div
lahf
aas
fwait
fs
inc
cmp
add
push
pop
daa
pusha
cld
out
mov
testb
jnp
pop
je
jne
or
or
testb
adc
add
lcall
pushf
mov
filds
cwtl
lods
lock
xchg
mov
dec
mov
xchg
add
in
ljmp
or
inc
js
add
repnz
adc
loop
addb
pop
rorl
or
xor
dec
clc
mov
mov
aaa
aam
adc
sbb
mov
fs
int3
pop
addb
mov
sahf
aas
or
sub
cmp
mov
dec
inc
push
add
or
dec
mov
push
jbe
add
dec
cmp
mov
in
inc
dec
and
sbbb
xchg
pop
sbb
sub
rolb
test
push
mov
cmp
inc
test
popf
test
push
and
hlt
pop
or
ret
mov
inc
xor
jmp
xorb
add
and
outsb
ja
push
test
adc
mov
ds
pop
ds
lock
add
jnp
fadds
mov
cmpsb
adc
fbld
or
data16
repz
mov
push
mov
addb
mov
inc
in
clc
inc
push
xchg
mov
ljmp
lea
add
push
repnz
stos
fdivl
shll
dec
aaa
mov
cmp
add
add
mov
pushf
or
movq
jg
out
das
add
rcrl
xchg
cmp
push
inc
outsb
xorl
add
dec
inc
out
sbb
mov
xor
neg
cltd
call
mov
xor
pop
mov
sbbb
ljmp
lcall
lock
xor
inc
addr16
ds
xor
imul
pop
testb
stos
sub
pop
les
loopne
test
cli
mov
xchg
mov
rcll
dec
mov
leave
idiv
fnstenv
and
lahf
lcall
jnp
rolb
push
subl
mov
sbb
test
nop
out
and
roll
cmp
std
push
pop
add
add
insb
stc
lds
push
push
or
js
add
insw
mov
push
sub
or
sbb
shll
push
out
hlt
mov
jnp
and
lret
add
fsubrl
enter
mov
jecxz
add
in
and
inc
or
jecxz
pushf
das
enter
dec
and
jg
imul
mov
or
pop
aam
sub
add
cmp
inc
test
inc
rorl
ds
mov
inc
jo
xchg
xchg
call
cwtl
add
stc
pusha
outsb
addr16
cmpsl
and
aad
in
loop
or
fldcw
mov
sti
push
mov
shrb
es
cli
cmp
cltd
push
sbb
cs
clc
bound
cwtl
jp
push
jg
push
cltd
xor
mov
xchg
js
addb
clc
orb
add
add
dec
outsl
mov
or
sbb
inc
shlb
ret
inc
jle
addl
movsb
ret
cmpsb
mov
push
push
enter
xchg
add
test
cmp
mov
mov
rcrb
pop
inc
push
fwait
push
notl
daa
xor
mov
xor
rcrb
sub
cwtl
push
lods
mov
pusha
push
incl
pop
add
push
xchg
xor
sub
jmp
and
push
add
icebp
shrl
add
pop
cmp
scas
push
out
mov
adc
sbb
mov
jb
add
ret
cmpsb
add
xchg
nop
je
into
and
add
daa
cmp
lcall
leave
movsb
imul
mov
lds
push
iret
push
jnp
lods
jp
push
test
add
repnz
cmp
stos
flds
jbe
inc
jo
addl
ret
adcb
adc
xchg
xchg
lock
pop
mov
push
xchg
add
pop
int3
in
mov
fbld
cmp
stos
sbb
enter
adc
mov
cmp
push
or
cwtl
mov
xor
bound
cmp
incb
jmp
das
aad
cld
xchg
imul
and
push
xchg
and
adc
int3
ja
das
lods
aam
jle
or
gs
xchg
xchg
push
sbb
popa
rolb
outsb
mov
clc
hlt
test
push
jmp
and
push
movsb
lods
stos
add
hlt
mov
data16
test
inc
push
lea
into
and
push
mov
in
call
sti
add
pop
adc
xchg
cmp
xor
loope
ss
es
inc
adcl
in
idivb
xor
pop
or
jo
xchg
jo
aas
add
xor
push
lahf
fistpll
pushf
xor
or
stos
cmp
imul
jl
sbb
data16
cmpsl
xor
rorl
movsb
popa
or
sub
ss
and
add
js
call
and
cmpsb
in
dec
mov
test
das
imul
nop
pop
xchg
jg
jl
pop
pushf
and
inc
adc
jle
loop
add
mov
test
push
js
mov
or
xchg
inc
xchg
lods
test
ds
lret
popa
and
push
addb
into
adc
jo
push
push
pop
cs
pop
or
in
mov
pushf
loopne
in
fsubl
pop
add
mov
mov
push
add
sbb
push
pop
sarb
out
add
fcomip
loop
into
pop
imul
mov
shlb
test
push
jle
popa
add
pop
mov
xchg
out
inc
cmp
or
nop
lods
lods
rolb
icebp
pop
pop
jg
loopne
sbb
push
adc
fsubrs
negl
movsb
movzbl
xor
cwtl
fmuls
sbb
fadd
adc
out
fildl
stc
test
xchg
pop
and
mov
push
pop
stos
add
inc
leave
cs
add
jmp
clc
lahf
loopne
dec
mov
hlt
pop
in
mov
mov
or
push
shufps
add
xchg
mov
inc
pop
out
call
int
cmpb
call
jge
sar
fistpll
or
sbbb
mov
inc
and
out
lods
mov
cmp
inc
sub
pop
mov
imul
outsl
aas
mov
loope
cwtl
mov
in
ret
int3
mov
pop
fsubrs
test
xor
scas
das
repnz
adc
in
or
es
cmp
and
repnz
inc
in
push
adc
dec
sahf
add
shl
fisubrl
mov
cmpsb
push
je
out
pop
xor
and
jmp
sarl
rolb
xor
pop
aaa
cmpl
xchg
adc
inc
fistpll
xor
xor
adcl
rclb
mov
fimull
fstpl
cli
nop
loop
add
pop
testl
sbb
bound
imul
stos
inc
sub
push
movl
mov
aam
nop
adc
mov
sbb
xor
test
add
into
lahf
movsb
sbb
hlt
push
adc
push
and
pop
add
stc
aas
xor
push
xor
pop
mov
inc
aaa
and
adc
dec
push
lock
xchg
nop
subb
pop
bound
and
mov
pushf
xchg
xor
mov
xor
and
and
mov
incl
xchg
pop
mov
mov
xchg
popf
push
pop
shlb
or
mov
ds
adc
test
aad
jo
xchg
dec
sbb
cmp
lahf
adc
in
sub
mov
popf
mov
and
push
setb
insl
sbb
sub
mov
mov
jbe
push
mov
cmpsb
mov
or
lret
jmp
loopne
hlt
add
clc
in
inc
stc
push
and
inc
cld
cltd
add
addr16
add
les
fisttps
or
dec
jnp
js
mov
xor
fistpl
inc
dec
leave
lcall
cmpsb
mov
mov
mov
lods
jno
pop
loopne
adc
aam
xchg
add
cs
imul
lods
loopne
fcomip
push
jmp
popf
cmp
sub
jp
clc
cltd
mov
or
mov
xchg
imul
push
mov
mov
das
inc
mov
in
test
sub
lea
test
xchg
loop
dec
insb
adc
jae
inc
dec
mov
and
out
aad
loop
in
add
stc
push
dec
das
outsl
mov
or
call
sub
push
xchg
add
mov
icebp
sahf
add
and
add
andl
out
and
cmp
fsubrs
into
test
dec
lret
sub
xor
add
lds
push
filds
xchg
fmuls
add
dec
cmp
add
xor
fwait
pop
mov
aam
dec
or
pop
inc
jb
jo
outsb
add
sahf
and
push
jle
mov
adc
push
aas
and
cmp
dec
add
jecxz
pop
xor
lahf
cmp
add
jp
xchg
les
add
pop
push
push
out
add
dec
out
add
sbb
mov
add
xchg
loopne
mov
aam
adc
add
sbb
test
mov
mov
fists
or
ljmp
jb
notb
lahf
pop
xor
fistps
movsb
cwtl
add
rcll
mov
push
or
rolb
add
iret
mov
push
cmc
add
imulb
aaa
mov
add
add
push
or
in
loop
rolb
pop
pop
mov
shl
insl
popf
push
outsb
aad
or
in
inc
sahf
and
and
add
sarl
xor
inc
push
dec
jle
mov
sbb
xlat
pop
mov
sub
pusha
fcomp
fwait
seta
pop
and
lahf
adc
pop
sub
shll
xor
inc
aas
add
out
ds
add
or
jg
xor
mov
adc
pop
cmp
cwtl
stos
mov
in
add
dec
das
sbb
cmp
xorl
lods
cmp
push
orb
sub
jb
add
cmp
scas
pop
cmp
mov
test
inc
inc
adc
in
aam
imul
fcoml
jne
xor
cmp
jbe
and
into
push
cld
outsb
imul
push
add
test
cmp
int3
cmp
add
scas
adc
pop
pop
pop
shlb
mov
pusha
cmp
call
mov
lods
push
xchg
inc
sbb
sbbb
mov
shr
sbb
mov
sub
shrb
add
sbb
pop
xor
in
mov
addr16
push
addb
inc
rolb
insb
das
or
push
test
add
out
adc
cmc
lret
icebp
pop
and
mov
add
inc
sub
inc
in
jle
push
pushf
je
inc
repz
aam
dec
mov
cwtl
fmull
add
lsl
add
out
in
xor
out
lcall
incb
and
cmpsb
lea
out
pop
mov
ret
and
and
pop
ja
bound
mov
push
inc
popf
or
out
mov
pop
dec
push
mov
or
pop
mov
pop
pop
add
test
push
nop
es
and
add
xorl
lock
add
xchg
adc
and
pop
mov
movb
jp
add
stos
adc
xchg
xchg
aaa
or
mov
mov
mov
mov
mov
enter
push
ds
rclb
push
inc
push
add
adc
jns
cmp
std
mov
cwtl
mov
pusha
pusha
loop
add
pop
jle
xchg
ret
pop
xchg
mov
roll
in
ret
mov
inc
sub
cmpb
out
add
repnz
push
mov
lods
movsl
ss
add
xchg
int3
pop
je
pop
adc
jnp
enter
mov
push
aad
sub
mov
subb
enter
cmp
daa
adc
add
loop
mov
inc
btc
aaa
adc
pop
jns
loope
or
fwait
cmp
sbb
xchg
hlt
shl
add
fmull
cmp
or
mov
les
and
add
mov
add
sbb
inc
and
add
aas
mov
lods
fmuls
mov
xor
pop
xor
inc
push
mov
les
or
and
rcll
jb
push
int3
add
sti
in
mov
fcoml
xchg
repz
pushf
xor
pop
loop
ss
xor
xchg
add
mov
scas
add
jecxz
push
jae
repz
push
jge
cmp
jmp
add
pop
lea
push
mov
sbb
xchg
mov
cmp
lds
cmp
je
inc
in
dec
mov
add
das
xor
adc
movsl
cmp
add
or
aad
je
inc
push
popa
add
and
xchg
cmp
mov
dec
jge
jecxz
test
fwait
jae
pusha
xor
sti
daa
das
dec
pop
adc
mov
mov
in
mov
adc
clc
outsl
add
repnz
popa
lock
std
dec
clc
push
inc
sti
das
fwait
gs
sub
adc
lock
cmp
fdivrs
and
ret
pop
clc
sti
lods
or
loop
xchg
adc
jne
and
cs
call
sbb
stos
sbb
rcl
or
outsb
jge
std
jb
adc
leave
or
outsl
add
xor
sub
cmp
add
and
test
add
inc
cmp
ja
mov
cs
or
lock
xor
adc
aad
adc
fs
cmp
sub
add
out
inc
ss
cmpsb
jecxz
sbb
loopne
cmp
outsb
pusha
lock
call
fs
lret
inc
push
insb
dec
mov
push
ljmp
inc
jl
or
and
iret
ficoml
xchg
mov
rorl
pop
mov
and
lret
loop
mov
add
mov
mov
add
mov
xor
or
jno
pop
push
fcomip
ljmp
dec
das
jo
iret
xor
push
out
sbb
rcr
jl
or
loop
mov
sbbb
fs
add
dec
mov
dec
mov
cmpsb
ljmp
fmull
cmp
out
lret
fistpl
add
ja
mov
inc
insb
sub
stos
test
es
test
pushf
pop
or
push
insb
add
aaa
ljmp
sub
insl
push
out
mov
push
and
adc
sarb
dec
fwait
inc
and
mov
cmp
or
add
sub
shlb
pop
aaa
call
insb
xchg
add
and
jg
out
add
insb
push
or
pushf
xchg
cmp
cwtl
xor
push
imul
add
insb
dec
push
jp
mov
mov
or
lahf
lock
push
adc
adcl
xor
sub
add
rclb
push
xlat
xorb
xor
shr
xor
loop
add
fisttps
mov
incb
mov
cwtl
or
cmpsb
add
xor
cmp
mov
fiaddl
jno
insl
aam
bound
add
cmp
aas
mov
or
inc
push
fs
add
push
imul
adc
pop
subb
aas
or
lock
xchg
push
dec
mov
pushf
push
nop
rcl
cltd
fldl
adc
or
or
mov
cmpb
push
xor
mov
fs
add
rcrb
add
push
outsb
push
add
push
mov
cmp
xchg
and
or
aas
jg
aad
dec
ds
mov
fs
and
mov
or
sbb
push
loopne
ss
add
and
roll
push
punpcklwd
add
out
mov
push
jne
mov
mov
add
and
cwtl
roll
inc
es
call
or
pop
mov
push
ljmp
js
adc
dec
imul
pop
mov
andb
popf
cmpsb
mov
icebp
mov
xchg
mov
jno
dec
data16
into
test
push
arpl
add
mov
fidivs
aas
pop
stc
lods
cwtl
out
inc
out
xor
jg
add
pop
rcll
jo
inc
mov
xor
lods
call
jl
into
lods
loope
jno
add
push
mov
push
xchg
enter
add
adc
dec
pusha
aam
hlt
jb
push
testb
or
nop
cwtl
gs
stos
adc
popa
mov
sbb
sarb
add
add
dec
stc
rcr
repnz
inc
xor
mov
and
leave
repnz
mov
bound
js
pusha
outsb
clc
xchg
or
or
add
xor
adc
lock
mov
hlt
rcrl
push
gs
mov
xchg
pusha
es
bnd
hlt
sbbb
mov
cltd
xor
adc
dec
ss
pop
xor
mov
xor
dec
shll
js
or
insb
xchg
push
mov
mov
push
adc
ret
add
fldl
shrl
push
mov
adc
hlt
fmul
or
shrl
push
sub
or
mov
mov
lods
xor
mov
pop
adc
sbb
mov
outsl
push
sub
add
shrb
aad
movsl
popa
jae
xchg
xchg
push
fld
btc
xor
push
add
int
jnp
out
shll
repnz
add
cmp
jae
test
mov
jle
insl
lods
jp
aas
jno
inc
add
mov
pusha
add
cmp
or
rolb
sbb
insb
push
test
add
inc
sbb
pushl
loop
sub
xchg
jo
ds
cmpl
call
mov
or
lods
jns
add
ss
push
xchg
aam
fwait
je
in
movsl
ret
pop
add
jl
shlb
pop
add
fisttps
mov
test
sets
mov
hlt
jge
orl
push
add
adc
aam
mov
aad
les
addl
adc
push
push
imul
push
popa
scas
jle
push
xor
inc
mov
xchg
pop
je
rcrl
push
es
mov
mov
push
daa
test
popa
pop
jb
sub
and
inc
mov
sub
es
inc
ret
lods
or
jp
add
push
or
out
cmp
pop
in
push
mov
add
aas
inc
xlat
jns
fmull
fsubrs
cmp
jmp
push
push
outsb
adc
loope
mov
sbb
into
push
cld
add
imul
es
ja
add
push
add
ds
pop
add
bound
and
add
fsubl
cmc
daa
js
cltd
cmp
mov
rolb
jne
std
test
ja
or
cld
cmpsb
xchg
and
enter
fidivrl
and
dec
cmp
daa
inc
popf
cmp
loopne
adc
test
andb
sub
add
stos
loop
cmpsb
rcll
cltd
in
push
loopne
inc
add
in
in
hlt
hlt
inc
sub
jb
cmp
imul
test
sarb
inc
sbb
cmp
adc
and
mov
nop
pushf
test
adc
mov
movsl
nop
xlat
pop
add
jbe
pop
test
data16
push
movsb
cwtl
out
dec
mov
add
push
cs
pop
loopne
out
or
mov
add
int3
and
test
in
in
and
daa
mov
cmp
rorl
sub
add
inc
inc
adc
movsb
pusha
xchg
jmp
xchg
cmp
aas
dec
inc
fcmovnu
or
loopne
dec
lea
pop
jns
mov
add
loope
pop
cltd
jbe
add
std
dec
mov
add
fistps
jmp
xor
push
xor
jl
push
mov
push
pop
cmp
test
in
or
mov
pop
pop
imul
jbe
mov
lcall
scas
pop
inc
jbe
adc
sub
or
into
call
negb
add
int
push
leave
lock
inc
insl
cmp
push
pop
cmpsb
dec
add
jbe
loope
sarl
xchg
mov
in
popl
lret
xchg
addb
and
ret
pop
loopne
cmp
lret
push
sti
fisubrs
ret
mov
test
cmpsb
test
push
bound
shrb
mov
cli
popa
pop
iret
test
adc
movsb
add
fcompl
push
pop
add
mov
sub
jl
or
rolb
pop
push
loopne
dec
mov
fiadds
push
sbb
pop
xchg
faddl
loope
jbe
jnp
rcll
ss
xchg
add
sbb
mov
shlb
andl
fimull
repnz
mov
pusha
pop
jle
inc
je
mov
ffreep
dec
sti
mov
subb
ds
int3
push
xor
hlt
aaa
sub
jl
loopne
xor
sub
sbb
add
or
sbb
arpl
pop
cld
lea
lret
dec
shl
jns
cmpb
dec
cwtl
aaa
add
lods
les
mov
ret
jl
clc
pusha
xchg
cmp
inc
adc
sbb
pextrw
addb
mov
pop
add
push
add
jns
cmp
outsl
cmpsb
sub
add
or
fstpl
ret
sub
loopne
adc
inc
fcom
fadd
pop
pusha
add
add
mov
lods
ffreep
fdivrs
mov
adc
inc
sbb
inc
sbb
stos
out
add
sbb
test
pop
daa
xor
jno
pusha
xor
inc
push
jae
pop
loope
sub
mov
dec
add
lret
out
xor
mov
sbb
jmp
mov
cwtl
add
or
mov
add
stc
les
inc
mov
and
ret
jbe
push
int3
ds
les
cli
xchg
in
add
mov
mov
clc
xchg
add
cmpsl
pushf
dec
scas
fbld
add
hlt
or
iret
sub
or
dec
and
imul
xor
adc
add
or
je
add
xor
fmuls
loop
add
ficomps
add
adc
cmp
cmpb
mov
pop
jle
inc
xor
hlt
and
dec
movsb
fmuls
and
push
xor
push
add
mov
add
push
test
sbb
sbbb
or
adc
pop
sar
lods
mov
pushf
rolb
rcrb
and
add
stc
add
cmp
mov
loop
adcb
lods
dec
sbb
add
inc
out
xchg
sub
mov
xchg
fcmovu
das
pop
rcr
out
inc
mov
out
mov
adc
cli
rcll
mov
add
aad
mov
test
in
jo
mov
cmpsb
ficompl
xchg
lods
jb,pt
and
daa
inc
call
sbb
add
xchg
mov
scas
shl
rcrb
jg
push
push
add
mov
popf
data16
aad
pop
das
call
imul
mov
adc
add
test
or
scas
out
fnstcw
push
mov
lea
lcall
or
cmp
fists
aas
pop
jo
inc
jmp
hlt
mov
jnp
out
ret
mov
cltd
dec
popf
hlt
mov
in
add
test
inc
add
and
mov
xchg
fsubrl
mov
fs
fadd
ret
xchg
sub
push
in
mov
cld
jl
inc
jns
popa
out
and
add
mov
or
mov
mov
push
lcall
dec
adc
in
xor
enter
xchg
cmp
and
aam
jge
mov
push
jo
add
push
in
cli
mov
xchg
clc
es
rolb
mov
sarl
mov
mov
fcompl
mov
or
mov
push
mov
cmp
push
lods
add
xchg
testl
fistl
ljmp
and
add
sbb
ljmp
xchg
aaa
inc
add
add
cmc
dec
xchg
xor
gs
test
add
inc
addr16
and
inc
jae
js
mov
sub
cwtl
fdivrs
add
es
jns
je
js
sub
repz
or
nop
je
push
add
repnz
loope
add
sub
pop
add
pop
xchg
or
pop
dec
jns
jo
outsb
or
orl
ret
push
jbe
outsl
clc
mov
mov
and
xchg
add
ds
push
or
or
adc
adc
inc
or
add
loopne
test
add
xchg
imul
xchg
jo
stc
int3
mov
cwtl
arpl
mov
or
inc
mov
add
sbb
addr16
pusha
mov
lret
pop
stos
and
xor
add
rcrb
cwtl
mov
mov
in
ljmp
faddl
pop
jg
mov
add
jp
mov
add
jmp
cs
and
and
add
aas
out
jb
push
out
and
mov
mov
add
mov
pop
mov
shr
das
xor
aas
mov
xchg
add
or
cmp
dec
adc
rcll
push
adc
lea
xchg
fs
xchg
mov
shlb
xchg
add
popa
add
dec
adc
add
sbb
inc
mov
jmp
scas
outsb
nop
mov
add
adc
sbb
cmp
lods
js
sub
mov
out
daa
cmp
pop
dec
cmp
fadd
jle
mov
pushf
test
inc
adc
or
insl
push
in
iret
pop
xchg
test
add
test
add
aam
pop
xor
adc
inc
out
cwtl
bound
std
ret
push
mov
add
add
xchg
jmp
cmp
add
add
mov
repnz
sbb
pop
iret
rclb
xor
jl
xor
add
or
mov
hlt
inc
dec
xchg
imul
lcall
add
sub
bound
cmpsl
inc
xchg
push
and
dec
popf
fcmovbe
addr16
dec
inc
sub
add
adc
mov
incl
cmp
popa
and
push
lods
or
les
add
push
loopnew
stc
lods
sub
xor
fimull
xchg
sarb
clc
and
insb
hlt
inc
clc
loop
add
dec
jae
dec
into
inc
xor
fists
inc
insb
jno
adc
xchg
dec
outsl
add
int3
dec
shll
pop
repz
aam
mov
test
loop
cmp
dec
sub
push
adc
mov
xor
icebp
mov
loopne
sub
pop
repz
mov
out
xor
test
adc
insl
mov
pop
daa
daa
popa
or
cwtl
insb
pop
push
xor
pusha
rcr
shl
fistps
jne
jmp
pop
sub
mov
mov
pop
popf
mov
je
imul
sub
data16
cmp
add
mov
inc
jnp
mov
xchg
insb
addr16
cmp
pop
jno
and
cmp
add
dec
stos
xchg
sub
lods
add
cs
push
aas
decb
daa
fidivrl
arpl
sbbb
cwtl
push
mov
test
add
scas
cmp
adc
or
adc
mov
movsb
push
add
mov
mov
mov
mov
mov
faddl
mov
in
sub
mov
lods
inc
or
nop
jmp
push
jbe
add
pop
std
insb
rcrb
iret
mov
push
in
int3
inc
jl
bound
lock
fs
push
inc
hlt
xor
jp
fs
test
das
push
jno
xchg
cwtl
sbb
imul
bound
add
addr16
cmp
rcrb
cmp
lcall
stc
gs
into
jg
xor
mov
add
imul
icebp
ljmp
nop
xor
sbb
pop
push
testb
js
dec
ss
or
mov
xor
cli
rcr
inc
in
iret
insl
cmpsb
xchg
push
je
addb
fisttpll
adc
and
mov
stos
or
xchg
add
mov
lcall
and
cmpsb
pop
cld
in
rclb
lods
mov
and
push
mov
and
inc
mov
subb
cmp
adc
mov
dec
sarl
cltd
sub
sar
pop
add
inc
jns
pop
mov
testl
cmp
scas
mov
iret
fsubs
cmp
enter
test
xchg
or
push
ja
loopne
mov
jle
or
aaa
test
push
stos
mov
pop
xchg
daa
and
add
test
pop
xchg
popa
js
cmp
mov
test
sbb
add
mov
xor
mov
jae
pushf
add
mulb
dec
addr16
mov
outsl
add
and
dec
fmull
test
lock
fucomip
shr
lock
fadds
mov
inc
add
mov
inc
sbbl
push
test
jg
push
cs
push
dec
out
push
and
inc
add
cmp
jmp
aas
out
push
xchg
ja
lock
add
clc
push
or
dec
leave
mov
sti
pop
nop
jle
xchg
out
repnz
and
add
stc
adc
call
mov
nop
jns
sbb
jecxz
or
add
pop
xchg
arpl
jne
pop
pop
repnz
imul
loopne
inc
into
or
fistps
mov
pop
dec
imull
lcall
xchg
mov
enter
aam
stos
push
inc
enter
add
cltd
lcall
and
xchg
testb
xor
jmp
push
in
nop
cld
test
xor
mov
and
cmp
mov
dec
fistpl
mov
shrb
push
xchg
loop,pn
cmp
add
test
sub
out
cli
jbe
inc
mov
call
add
dec
out
sbb
sub
mov
mov
sbbb
setp
and
push
and
or
mov
and
mov
or
sbbb
xor
fcmove
and
popa
movsl
pusha
adc
es
adc
stos
cs
in
mov
mov
pop
mov
add
cmp
mov
jnp
jno
pop
pop
or
clc
cmp
push
mov
addr16
lock
mov
add
dec
leave
add
fimull
aad
push
shll
lds
mov
mov
dec
push
es
frstor
add
ret
cmp
cmpsl
outsb
dec
push
loope
jnp
and
cmp
movsl
or
test
xor
jne
pushf
rclb
lods
xchg
add
dec
jle
pop
test
cmp
mov
cmp
inc
push
punpcklbw
cmp
rcll
int
adc
das
pop
stos
mov
inc
pop
iret
xchg
lds
push
dec
xor
cwtl
aaa
sub
insb
or
cmp
mov
insl
rorb
cwtl
orb
sbb
call
pop
add
or
seta
popa
lar
cmp
cmpsb
jnp
in
xorl
cmp
inc
aaa
adc
add
enter
push
or
add
adc
xchg
push
xchg
orl
xchg
xlat
add
aam
dec
ds
aad
sub
inc
addr16
cmp
inc
sbb
pop
sbb
stos
mov
push
or
cmp
push
push
adc
mov
sbb
js
testl
xlat
push
pop
adc
xchg
xchg
mov
push
test
sub
adc
fistpll
es
int3
pop
jne
or
xor
sbb
add
xchg
adc
or
or
or
mov
xchg
add
inc
aaa
mov
insl
aad
cwtl
or
or
or
cmp
inc
add
cmp
adc
xchg
add
push
xor
push
mov
fs
cmp
push
pop
and
pop
add
leave
xor
sub
inc
adc
jo
aam
pop
cmp
xchg
sub
lret
out
xlat
movsb
add
mov
mov
push
dec
cld
adc
rcll
sbb
jne
xchg
movsb
ret
outsl
test
xchg
inc
and
mov
je
lret
hlt
push
rclb
jg
rolb
inc
inc
in
jge
adc
gs
xchg
mov
inc
sub
out
and
add
push
fcoml
popa
xchg
sub
nop
call
push
mov
adc
call
andb
mov
jmp
or
shlb
add
int
mov
mov
lret
cmp
pop
cld
rolb
in
mov
sub
dec
jo
adc
lcall
rolb
or
nopl
jbe
adc
enter
xor
push
loop
jg
test
aam
rclb
fisubrs
lock
imulb
cmp
or
mov
aaa
enter
imull
outsb
scas
inc
lock
or
jge
fsubl
mov
pop
mov
aas
and
pop
mov
insl
mov
sar
dec
shlb
jp
int
inc
add
fdivrl
dec
add
jle
imul
push
loopne
push
mov
js
cmpl
addr16
gs
adc
sbb
xor
nop
ret
data16
adc
mov
inc
rcrb
stc
sbb
sub
mov
add
dec
push
sbbl
ds
aaa
movsb
cmpsl
or
mov
xchg
xchg
push
test
adc
cmp
add
mov
mov
pop
ljmp
andb
sub
add
cmp
jp
or
xchg
out
mov
sti
andb
es
call
shlb
push
mov
sbb
jmp
pop
test
cmp
ss
push
xor
xchg
imul
repz
test
xor
daa
push
add
pop
movsb
loopne
or
sub
mov
orl
cli
add
lods
shll
mov
mov
fwait
push
aad
and
cld
add
dec
cmp
add
xor
negl
push
test
ret
push
jo
xchg
xchg
add
xchg
fisubl
inc
lock
mov
cld
test
and
pop
adc
dec
mov
inc
and
into
mov
or
xor
push
daa
or
in
not
or
add
sbb
loop
sub
fiadds
cmc
pop
es
cmpsl
add
pop
mov
add
mov
sub
adc
cmpsb
sar
inc
rcrl
cmp
fisubs
push
in
fidivrl
call
fcomps
fisttpl
xor
in
or
ret
shrl
cmp
pop
xor
cwtd
mov
cmp
mov
jne
mov
xlat
testb
xchg
ljmp
insl
add
jae
add
test
mov
pusha
xor
mov
subb
cltd
ss
andb
mov
dec
or
popf
fcomip
test
mov
dec
frstor
in
inc
mov
rolb
and
fpatan
add
mov
imulb
or
ret
inc
and
lahf
push
mov
push
cmp
aaa
lsl
inc
fsts
sub
nop
mov
popf
pop
push
and
adc
test
push
inc
jp
enter
sub
xchg
lods
arpl
dec
int3
mov
inc
xchg
ds
lea
loopne
mov
fisttpl
fdivrs
adc
xchg
and
addr16
fdivrp
or
add
mov
xor
xor
jo
mov
add
xchg
dec
xor
fmulp
les
je
add
jl
dec
jne
lea
pop
outsl
adc
and
data16
out
mov
sbb
aas
xchg
add
mov
lcall
jle
and
jnp
or
inc
cwtl
mov
pop
retw
orb
and
sub
cld
fsubs
mov
xor
adc
pop
testl
add
or
subl
mov
out
add
or
xor
subl
and
imul
sarb
rcr
cmp
scas
movsb
lods
add
outsb
mov
rorb
pop
sbb
add
add
bound
popa
sub
add
mov
fadd
dec
mov
push
jmp
rcrb
or
fnstsw
add
jo
xchg
sbb
icebp
sbb
sub
stos
push
mov
addb
les
push
bound
or
push
or
mov
in
and
movsl
and
and
inc
dec
push
add
shll
mov
in
cmp
inc
or
push
adc
sub
xchg
jmp
xor
mov
xor
bound
push
mov
mov
imul
clc
aas
jge
cmpsl
bound
popf
cmp
or
xor
or
mov
and
mov
rolb
add
stc
test
cmp
adc
adc
xor
xchg
add
psubusb
add
in
push
test
xor
insb
fadd
and
ds
push
imul
push
add
stos
decl
shrl
dec
sbb
arpl
sbb
inc
sub
xchg
in
and
add
fisubrl
add
pop
roll
test
ret
add
or
inc
mov
cmp
flds
inc
sub
or
and
orb
inc
cmp
insb
enter
fwait
or
std
adc
cmpsb
lods
add
es
cmpl
add
add
pusha
js
mov
data16
fnop
icebp
addr16
cmp
mov
fcomps
push
into
add
popa
sub
dec
out
sahf
testl
les
test
rol
jne
fwait
cmp
pop
cmp
jae
cmpsl
pop
ret
rclb
or
fiadds
addb
test
data16
test
xor
pop
insl
add
shlb
push
dec
dec
cltd
call
add
jle
mov
dec
cs
xchg
test
lahf
jmp
jae
cmpsl
lret
dec
jo
mov
in
orb
in
repnz
nop
loop
test
addb
or
adc
jecxz
fsubr
add
sbb
in
nop
hlt
iret
inc
in
add
adc
in
or
inc
add
int3
lahf
adc
jo
dec
mov
and
js
add
mov
enter
mov
add
sahf
add
add
mov
cmp
int3
movsl
out
add
std
subl
xchg
and
les
cmp
pushf
je
jg
test
loop
jo
sbb
mov
mov
mov
insb
loopne
xor
jl
call
mov
jbe
adc
inc
mov
sar
jle
cmc
mov
int3
sbb
push
mov
add
into
or
jo
push
xor
shl
sub
gs
jmp
mov
push
cmp
cld
mov
mov
mov
xor
sub
pop
add
pop
test
sub
cli
add
push
mov
aas
push
int3
mov
lret
sub
jbe
xor
mov
and
movb
pop
pusha
or
sbb
int
push
add
clc
sub
pusha
ficomps
xchg
movsb
pop
pop
or
dec
push
jp
push
dec
push
fidivrl
adc
push
testb
stos
cmp
insl
xchg
loopne,pt
pop
add
mov
sbb
mov
add
popa
or
dec
jge
test
jns
fisubrs
or
dec
loopne
popa
sub
pusha
dec
xor
xchg
add
cmpsb
shll
dec
mov
pop
dec
add
cwtl
test
add
sbb
ja
flds
data16
les
push
mov
fs
pushf
add
outsb
sub
mov
pop
fisubl
adc
xchg
or
mov
jae
imul
rol
aam
jbe
addb
sbb
add
dec
add
and
cli
mov
push
insb
shlb
add
shll
jp
jae
adc
lock
inc
lods
and
out
cli
push
imul
sub
cld
cmp
xchg
ret
inc
pop
dec
xchg
mov
pusha
cmpsb
push
sub
inc
or
mov
dec
shl
pop
sti
imul
inc
adc
and
mov
or
pusha
inc
push
cmp
sub
stos
pusha
adc
out
mov
sub
cwtl
test
and
dec
and
das
jp
insl
mov
lahf
push
mov
dec
ds
shlb
fdivrs
decb
pop
movsb
lock
mov
pop
cli
pop
jl
cmp
sub
seto
cld
arpl
add
add
mov
imul
outsb
lcall
cmp
xchg
or
movsb
not
mov
mov
cld
and
xchg
imul
lods
and
jnp
add
mov
insl
sub
cmp
rcrb
or
xchg
sub
mov
idivl
orl
xor
mov
or
cmpsb
xor
add
mov
roll
sub
ffree
inc
xchg
repz
in
js
rcr
push
dec
add
test
icebp
ja
lret
mov
fildl
inc
adc
loopne
and
mov
xor
cmp
inc
repnz
stos
scas
hlt
ljmp
cmp
sub
es
ds
addr16
pop
nop
repnz
inc
jmp
push
add
jns
adc
shll
push
test
add
dec
loope
xor
nop
xlat
sub
mov
sbb
movl
sub
addl
push
xchg
push
mov
add
xor
rcrl
cltd
mov
xchg
sarb
mov
mov
inc
cs
dec
movsb
add
add
mov
mov
mov
dec
fdivrl
push
fcom
notb
xlat
enter
test
mov
sbb
xchg
imull
imul
xchg
adc
jb
sub
pop
cmp
test
adc
dec
or
dec
fucomp
or
fsubs
rcl
or
test
push
mov
les
adc
mov
pusha
inc
xlat
call
mov
fs
adc
sbb
mov
pop
pusha
inc
test
add
js
cmp
pusha
push
mov
add
mov
sub
sub
pop
mov
cmc
add
mov
push
into
dec
les
adc
add
jo
or
ljmp
imul
push
js
ds
sarl
add
xor
mov
std
add
fldl
or
mov
inc
mov
pop
jo
popa
inc
adc
ja
push
pop
adc
ret
sub
aaa
push
mov
dec
les
out
or
add
leave
push
dec
dec
mov
adc
fldl
jb
imull
dec
or
stc
out
jnp
adc
xchg
and
pop
dec
shll
xlat
lods
xor
out
les
mov
imul
stos
push
test
sbb
jbe
mov
loopne
jae
sub
scas
or
fsubl
add
xchg
xor
rol
ljmp
push
inc
outsl
mov
xor
test
and
pop
jge
add
testl
dec
sub
in
xor
mov
insb
mov
xchg
sbb
enter
loope,pt
rdseed
dec
sti
dec
xchg
andb
insb
add
jae
lahf
or
pop
jbe
pop
xor
arpl
jge
mov
mov
addb
jb
les
dec
insl
hlt
push
test
test
pop
mov
cltd
in
sub
pop
fadds
push
loopne
orl
fimull
and
stos
cli
sub
fnstcw
outsl
lret
lcall
jns
xor
fs
leave
push
fisttpll
stc
fcomi
leave
adc
push
add
lcall
cs
push
mov
adc
push
sbbb
lcall
sbb
jnp
pushl
fadd
sub
fmuls
xchg
mov
or
fdivr
les
popf
mov
sbbb
pop
stos
std
sti
add
pop
push
adc
int3
mov
sarb
pusha
and
test
nop
leave
mov
and
dec
aaa
out
cmp
inc
mov
popa
pop
pop
cld
pop
and
fdivs
cmp
pusha
pusha
enter
xor
xor
inc
rcl
and
sub
lock
pop
sti
xorb
push
mov
loopne
aad
aaa
add
xlat
clc
add
xchg
ja
dec
adc
xchg
cld
loopne
sbb
or
sub
and
mov
jl
add
leave
clc
inc
cwtl
cli
ret
inc
and
cmpsl
lods
aaa
push
add
or
sahf
mov
sbb
mov
xor
repz
xor
xchg
fs
and
iret
add
mov
cwtl
fcoms
mov
mov
data16
xchg
test
mov
cmpsl
add
lret
inc
mov
inc
mov
mov
mov
pusha
push
leave
ja
mov
add
stc
movsl
adc
enter
roll
jmp
push
jo
ds
mov
xchg
cmpsb
or
inc
loop
push
xor
dec
pop
xchg
inc
aas
push
adc
mov
jnp
andb
fcoms
xchg
pop
arpl
cli
cmp
fs
outsb
lcall
jp,pn
hlt
jge
xchg
addl
cwtl
mov
stc
xchg
pop
inc
fsubrs
fs
jb
sarb
add
jg
daa
popl
dec
mov
sbb
sbb
popf
or
inc
mov
ja
cmp
scas
adc
add
sub
loop
jmp
outsl
mov
push
or
cmpsb
xlat
dec
push
test
fistps
pushf
sub
pushf
ret
mov
out
add
je
add
daa
xor
xchg
roll
loope
jl
std
mov
bound
add
and
push
js
xor
cmp
fadds
ret
movl
sahf
and
jne
push
lds
add
outsl
jmp
mov
add
stos
or
add
sbb
inc
dec
scas
in
and
dec
daa
outsl
inc
mov
add
xlat
add
jmp
and
outsb
dec
add
xchg
xor
aam
sub
add
mov
xor
adc
or
dec
faddl
testl
xor
rcrl
vpor
and
xor
cmpsb
shll
in
popa
xchg
mov
cmc
pop
frstor
or
mov
mov
dec
mov
mov
add
fmull
add
shlb
in
pop
pop
cmp
push
xchg
adc
outsb
xor
addb
in
dec
fadds
lds
dec
pusha
push
icebp
add
push
into
xchg
insl
push
push
pop
and
stos
xor
ds
xchg
sbb
add
dec
pop
pop
rcl
mov
or
or
cmp
jo
add
rcrb
mov
pop
and
adc
das
add
add
gs
fstl
jp
and
pop
add
into
xchg
lods
jl
scas
mov
mov
cmp
jbe
movsl
insb
cmpsl
mov
outsl
mov
push
xchg
add
cwtl
inc
sahf
rcr
shlb
pop
push
xchg
or
je
mov
shl
or
inc
mov
fiaddl
mov
mov
xchg
aas
rcrb
xor
fs
fdivrs
and
and
and
gs
add
popf
mov
mov
faddl
inc
inc
or
data16
sub
shl
cmp
lds
orl
cmpsl
push
imul
dec
and
push
js
imul
inc
aad
and
pop
pop
lahf
pop
shrb
rclb
icebp
jae
sbb
notl
jb
add
ficoms
inc
cmpsb
rclb
outsb
clc
push
enter
xor
inc
add
xchg
mov
inc
jg
cs
push
xor
inc
loope
fmulp
rcrl
pushf
fadds
add
insb
test
std
and
jmp
cmpsb
aad
mov
xor
filds
push
outsb
add
leave
fidivrs
add
ljmp
in
mov
adc
mov
dec
pop
sub
push
mov
mov
jb
jnp
loop
mov
adc
xlat
xchg
sbb
fisttpl
ja
cwtl
add
rcrb
xchg
in
and
outsb
cld
or
push
rclb
loopne
inc
jo
inc
pop
sbb
fidivrs
enter
shrb
xchg
rolb
mov
mov
dec
sbbl
test
cmp
xchg
fildl
popa
pop
sub
icebp
arpl
and
push
adc
xchg
cmp
call
add
or
dec
mov
push
aad
inc
arpl
js
aaa
test
xor
daa
cli
sub
push
dec
dec
int
and
push
rolb
je
les
loopne
fdivrs
scas
mov
jbe
sub
rol
add
fadds
pushf
lock
jns
and
pop
and
loop
mov
xchg
inc
aam
xchg
inc
test
mov
andb
or
out
sub
inc
mov
sbb
push
mov
add
fs
das
loopne
nop
mov
jne
in
add
out
or
ret
xchg
add
mov
outsb
leave
cwtl
rcl
shl
loopne
and
mov
bound
pop
call
pop
sbb
add
sbb
aam
dec
icebp
test
push
xchg
mov
inc
cltd
subl
and
lds
aas
xor
jp
and
ja
cltd
and
aas
mov
pusha
inc
pusha
jne
aad
fistps
mov
pop
push
lock
lahf
add
dec
fwait
inc
adc
or
pushf
and
add
pop
gs
sbb
sbb
hlt
adcl
subb
jge
enter
dec
push
jge
pop
sub
mov
sub
testb
imul
add
sbb
bound
inc
or
dec
loopne
mov
ss
imul
rorb
iret
jl
aas
pop
mov
arpl
cs
ss
in
add
pop
push
or
js
push
data16
test
add
loopne
dec
lods
mov
outsl
adc
clc
add
pop
movsb
xchg
imul
nop
cwtl
scas
add
lret
das
xor
lock
jl
add
lods
movl
in
subl
add
repnz
add
pop
test
push
adc
xchg
push
hlt
call
and
jns
cli
cmp
mov
add
sub
mov
and
pop
jo
loop
loope
data16
arpl
sbb
sbbb
ljmp
lds
xchg
outsb
push
add
mov
lea
ret
jo
daa
vmwrite
cmpsb
addl
aad
add
or
pop
and
mov
xor
dec
fdivrs
add
ret
mov
cmpsb
pop
push
pop
add
xor
mov
in
add
jb
dec
mov
xor
mov
adc
sbb
mov
in
outsl
fimuls
add
jae
and
lods
add
jecxz
or
in
jp
lods
jmp
xchg
adc
cld
mov
pop
add
cwtl
sbb
lahf
pop
inc
jno
dec
mov
push
fdivrl
addb
sbb
inc
lea
shlb
js
cmp
push
cmc
sbb
leave
ljmp
repnz
jge
add
roll
xchg
loope
mov
mov
xlat
int3
mov
and
mov
cmp
or
stos
sub
mov
into
mov
loopne
jnp
loop
pop
or
ds
xchg
mov
ret
pop
cmp
pusha
sbb
sar
mov
icebp
push
xor
pop
mov
add
sub
aad
pop
push
jge
bound
mov
xor
jno
roll
mov
movups
roll
das
or
jge
xchg
inc
js
add
pop
pushf
shlb
add
inc
sbb
sub
adc
add
xchg
dec
cli
std
sbb
inc
lahf
pop
push
scas
add
jnp
bound
cld
aas
pop
cmp
shlb
lds
dec
add
inc
push
sar
pop
dec
movsl
add
shlb
addb
sbb
stos
sub
test
sub
cld
add
enter
add
dec
jnp
push
inc
lock
les
xchg
imul
sub
sbb
mov
lea
add
cmpsl
addr16
inc
mov
movsl
add
cmp
cmpsb
xor
test
mov
int3
or
add
andl
adc
pop
mov
push
aaa
sub
pop
sub
fldl
adc
and
ljmp
push
jno
jmp
inc
cwtl
aad
call
push
adc
mov
jae
add
movl
cwtl
add
cli
dec
dec
cmp
es
mov
dec
push
mov
out
popa
add
ss
loope
cmpb
arpl
dec
lds
es
shr
sbb
movb
adc
lock
or
inc
inc
lret
mov
cmp
clc
cmp
sbb
out
rcr
rcl
incl
mov
sbb
add
sbb
inc
xchg
add
jge
out
dec
add
test
xchg
mov
popa
dec
in
mov
push
mov
mov
and
and
shr
push
add
mov
pop
inc
add
pop
insl
sbb
add
shr
add
daa
out
and
xor
repnz
notb
cmp
lock
push
pop
lods
jnp
shlb
cmp
add
push
repnz
xor
addb
jo
cltd
xor
add
rclb
push
lahf
add
cmp
cli
jne
add
xchg
je,pn
mov
push
add
sbb
add
and
hlt
pusha
shrb
sub
add
push
or
add
xchg
pop
imul
mov
dec
adc
jo
dec
xor
imul
and
fbstp
insb
xor
in
and
add
mov
dec
push
inc
add
hlt
inc
daa
insl
mov
outsl
add
push
orl
aas
ja
test
sbb
test
pop
pop
es
arpl
mov
add
imul
dec
add
xchg
pop
sub
sbb
cmpsb
popf
or
add
sbb
dec
sar
std
push
and
push
push
into
sub
jge
faddl
stos
fs
jmp
insb
mov
mov
lds
pop
adc
dec
fcoml
xor
iret
jge
or
pushf
orb
jl
jp
movq
push
pop
movsb
cmp
popa
stos
dec
sub
add
jg
shrl
es
or
insb
das
jne
pop
add
inc
icebp
js
in
ja
add
push
scas
fsubrs
inc
and
and
nop
or
lea
lds
lock
movsb
popf
int3
daa
xchg
loop
aaa
push
push
enter
add
adcb
cmp
and
add
das
inc
jmp
mov
sub
mov
xor
jae
add
xchg
adc
add
mov
outsb
movsb
push
cli
imul
mov
xor
negl
fstps
icebp
sbb
pop
xchg
ss
mov
aas
mov
and
aad
scas
int
sahf
cmp
adc
jge
in
pop
loop
and
xor
cwtl
or
je
gs
iret
dec
pop
ss
out
loop
jae
jl
aad
add
gs
inc
push
xor
push
out
jge
dec
adc
push
fnstcw
loopne
jle
add
jns
addr16
nop
ret
add
adc
loopne
outsb
cmp
mov
and
arpl
mov
adc
pop
xchg
daa
jl
pop
outsb
iret
or
filds
hlt
xchg
mov
xchg
adc
add
and
mov
mov
repz
mov
popa
lahf
add
dec
into
and
pop
jnp
add
out
or
jno
and
faddl
jge
sahf
lret
mov
fimuls
pop
ret
add
add
mov
or
repz
rcrb
fcoml
lods
mov
add
xor
push
and
in
dec
rolb
mov
sub
lcall
xchg
sub
clc
dec
cs
js
add
push
arpl
add
lods
test
cli
add
cmp
jge
and
and
and
pop
sub
or
sbb
scas
jb
mov
test
icebp
mov
pop
or
mov
push
sub
lcall
in
add
pop
imul
xor
daa
data16
imul
orb
push
sbb
dec
ret
or
mov
jns
fldcw
xor
lock
cmp
arpl
add
aad
aam
out
push
add
aaa
clc
dec
pop
xchg
nop
push
cwtl
rolb
les
pop
lcall
add
pop
je
sbb
inc
mov
repnz
lahf
push
inc
fxch
jns
sub
ljmp
mov
pop
outsl
add
aas
repnz
addr16
adc
jae
pop
cmp
dec
mov
xchg
das
orb
divb
dec
pusha
f2xm1
jmp
rol
outsb
mov
dec
add
mulb
add
and
scas
lret
orb
aam
sahf
out
xchg
clc
in
ret
xchg
call
sbb
inc
shlb
idiv
and
or
mov
hlt
scas
jno
mov
dec
jo
mov
sbb
push
jns
dec
jmp
lcall
inc
das
push
les
cmp
adc
lret
out
repz
pop
inc
inc
pop
ret
sub
sub
movl
inc
movsb
divl
clc
adc
loopne
sbb
test
cmp
mov
or
mov
in
or
andb
sbb
add
dec
sbb
xor
push
rcrl
xchg
movq
sub
jae
pandn
adc
inc
insb
stc
les
pop
jns
mov
mov
andb
push
jecxz
popf
add
mov
pop
add
dec
pop
loope
cmp
mov
sub
mov
daa
xor
jbe
adc
fmul
pushf
push
pusha
cmp
es
mov
cwtl
jae
fwait
and
cs
add
inc
jg
mov
mov
ds
ljmp
scas
bound
add
push
insb
je
cs
add
fdivl
cmp
jbe
jmp
pop
leave
dec
stos
mov
add
repnz
iret
imul
add
inc
nop
jnp
and
cmp
xchg
sbbb
mov
jb
bound
mov
les
push
outsb
mov
push
sub
dec
xor
mulb
adc
mov
sub
xor
test
ret
lods
adc
push
nop
push
and
enter
sub
sub
add
call
push
lock
test
lsl
divb
cmpb
xor
mov
pop
movq
and
sub
out
mov
ret
and
mov
icebp
icebp
mov
inc
ds
notb
dec
cmpsb
add
push
out
insb
add
lods
cmp
pop
adcl
push
shll
cld
or
pusha
in
in
sarl
and
xchg
pop
jbe
shl
and
fisubl
dec
add
fdivr
add
repnz
adc
sarb
add
ss
adc
add
arpl
shll
fwait
jmp
ficoml
stos
pop
add
cmpsb
push
ss
push
xor
push
push
xchg
sub
or
cmp
jbe
fildl
int
ljmp
and
inc
add
frstor
test
or
out
rorb
fucomip
cmpsl
xor
cmp
jge
push
add
decl
dec
add
push
enter
cmc
push
andl
push
jns
mov
add
addr16
stc
mov
leave
arpl
les
cmpsl
hlt
dec
pusha
add
fldl
cmp
or
mov
xchg
imul
rcrl
push
mov
add
cmp
loopne
dec
sub
scas
add
das
pop
stos
jb
lods
jmp
fcomps
sahf
jp
cmp
add
jbe
fists
jns
add
shll
or
call
pop
cmp
push
jle
fdiv
and
add
out
in
out
add
mov
rolb
mov
data16
xchg
fsub
lds
cmpl
add
ja
push
adc
push
outsl
lods
icebp
out
xchg
add
rcrl
mov
inc
cltd
xchg
mov
adc
or
mov
mov
pop
and
cmp
dec
in
ret
leave
jge
mov
add
mov
andl
xlat
psrad
inc
mov
jecxz
out
fwait
sbb
daa
jle
and
pop
mov
add
or
mov
jne
insb
mov
cmp
and
popf
popa
lret
cmpsb
adc
mov
mull
mov
push
jmp
jno
pop
divl
cmc
pusha
loopne
inc
cwtl
sbb
jnp
cltd
pushf
les
fdivs
cli
pop
sbb
sub
push
aam
push
fsub
cmp
lods
sbb
xchg
arpl
xor
xor
add
lock
and
ja
aad
inc
imul
mov
nop
push
out
adc
and
lcall
mov
xchg
add
xchg
jae
std
push
cmp
mov
fldl
xchg
fstpt
add
inc
push
add
xor
jl
movsl
xor
add
mov
or
jae
repnz
lock
mov
dec
add
pop
mov
xchg
jle
adc
mov
mov
mov
or
mov
gs
daa
movsb
push
sbb
roll
addr16
cmc
sbb
std
nop
add
ret
js
inc
add
mov
sarb
push
test
stos
mov
adc
cmp
and
fbld
inc
aaa
mov
rolb
loopne
in
sbbb
aaa
xchg
ja
or
or
or
pop
adc
or
push
movsb
add
data16
adc
add
push
in
push
and
jge
mov
daa
in
cmp
mov
push
dec
pop
adc
push
xchg
cmpl
add
int3
cmpsl
mov
mov
cmc
lods
and
add
sub
push
jns
jmp
pop
js
in
mov
adc
push
inc
xchg
cmp
lahf
lods
pusha
and
pop
aas
dec
cmpsb
adc
push
nop
daa
loopne
lds
push
jecxz
mov
fisttpll
je
fwait
arpl
shll
mov
mov
and
adc
enter
sub
xor
ljmp
jo
add
xor
adc
add
push
cmp
sbb
cwtl
xor
adc
add
loopne
push
je
stos
divb
add
mov
js
sbb
adc
int3
imul
pop
out
xor
ret
add
pop
xchg
call
pusha
fucomip
xchg
add
insl
sar
stos
push
adc
cmp
mov
jbe
add
lods
dec
dec
push
out
sub
nop
mov
pop
into
cmp
aaa
mov
enter
repnz
shrl
xchg
outsl
xor
repnz
xor
ret
sarb
inc
jns,pn
xchg
cmpsl
add
roll
push
sbb
mov
cmp
addb
dec
pushf
lock
loope
add
leave
mov
jno
pop
add
add
cmp
cli
xor
add
add
xorb
sbb
sbb
lods
dec
mov
in
mov
add
testl
dec
pop
dec
outsl
pop
or
rcl
fdivl
add
inc
outsl
sub
nop
add
inc
cmpsb
xchg
popa
sbb
fucomip
pop
fwait
mov
add
iret
les
outsb
dec
or
inc
std
jbe
add
test
xor
fisttpl
sbb
sub
dec
or
mov
es
xorl
mov
test
add
lea
mov
mov
rcrl
insb
cmp
lods
push
flds
cmp
mov
negb
sbb
cmpsb
jae
jg
sub
sbbb
jbe
ja
cmp
scas
push
or
push
popa
add
push
cltd
cmp
pop
test
fmull
pop
push
gs
inc
or
mov
jle
test
sub
add
jg
mov
dec
push
fwait
push
aad
enter
mov
push
cmp
mov
fs
shl
pop
rclb
aas
inc
clc
mov
pop
xor
lret
frstor
inc
loopne
adc
push
xchg
adc
out
bound
add
enter
jge
mov
add
sub
je
mov
adc
popf
nop
mov
mov
cs
or
lahf
and
lock
xor
xor
sbb
fldcw
jmp
pop
rorl
mov
ret
pushl
jge
in
sbb
mov
adc
out
div
jmp
pop
add
das
push
nop
loop
or
aad
loope
daa
sbb
mov
sub
or
xchg
and
fwait
cmp
inc
inc
add
jg
psubb
fdivrl
sub
lea
pop
popf
add
inc
test
rolb
arpl
dec
fiadds
mov
cli
mov
lret
xor
pusha
aam
jns
imul
insb
add
out
sbb
fbstp
test
jmp
add
xchg
mov
inc
sbbb
mov
insb
add
jae
fisubs
xchg
mov
cmp
inc
int3
lods
add
xchg
xchg
mov
add
and
xchg
mov
test
call
into
jne
mov
sbb
movsb
inc
mov
aad
fcoml
or
sahf
test
sub
add
outsl
cli
xor
in
cwtl
add
cwtl
xor
mov
subb
incb
iret
add
int
cli
idivb
mov
and
cs
and
add
mov
inc
stc
add
test
dec
movsl
or
cmp
out
mov
adc
clc
int
push
ret
jp
push
je
es
pop
test
cmp
dec
pop
mov
add
imul
daa
in
adc
push
dec
add
inc
fcmovnbe
shl
jne
shll
subl
clc
add
sarb
add
and
cmpsb
jmp
scas
and
xchg
push
mov
ret
fadds
fucom
push
data16
add
daa
es
push
testb
push
daa
sbb
xchg
out
add
popa
pop
ret
leave
sbb
cmp
das
cwtl
sbb
sbb
bound
int3
aam
sub
mov
dec
mov
pusha
cld
and
pushf
add
insb
sbb
clc
lcall
outsl
push
movb
pushf
fdiv
mov
inc
and
test
xor
xchg
arpl
adc
insb
jo
sub
loop
cmpl
push
ret
rcr
fcomps
adc
hlt
pusha
or
mov
inc
test
and
add
adc
pop
add
cs
mov
lock
mov
mov
push
mov
dec
add
inc
ja
fnsave
sahf
cmp
xor
add
jecxz
sub
jne
push
popl
mov
mov
cmp
lea
cmp
xchg
add
mov
pop
add
add
faddl
int
cmp
subb
jb
mov
pcmpeqb
arpl
push
jo
mov
shll
or
daa
rcr
insb
add
pop
mov
push
sbb
push
rcrb
wrmsr
push
call
push
dec
insb
jge
add
xchg
xchg
cmp
mov
mov
js
add
subb
pop
ret
cmc
mov
sub
xchg
dec
cs
and
pop
mov
or
pop
or
add
outsb
rolb
nop
pop
push
imul
push
inc
mov
data16
std
lds
xlat
mov
clc
in
add
fldl
rolb
and
fidivrs
xchg
addr16
and
mov
add
xorb
cltd
fldz
test
add
xchg
shlb
stc
add
in
jb
jnp
sahf
mov
xchg
xor
iret
decb
mov
sbb
add
mov
arpl
test
std
add
push
add
arpl
ja
enter
imul
or
inc
xor
cmpsb
sarl
aas
cwtl
pop
mov
sbb
lock
add
stos
cmp
lret
in
push
scas
jp
add
and
cmpsb
inc
push
add
xor
add
fsubs
add
add
pop
jne
sub
add
popa
push
les
mov
pop
loop
adc
insb
or
adc
out
add
and
scas
add
in
pusha
dec
xor
int3
arpl
ret
jp
insl
mov
add
subl
sub
orb
lret
add
dec
xchg
test
out
jo
mov
mov
pop
shl
adcb
pop
cmpb
mov
pusha
add
call
push
push
adc
xor
mov
pop
shrb
popf
pop
adc
cmp
mov
cld
or
sti
in
sub
pop
add
sbb
popf
adc
mov
hlt
and
mov
outsl
and
dec
int
add
arpl
push
rorb
ror
aam
out
lcall
fsubl
xchg
test
loope
call
mov
pop
shrl
add
dec
push
addr16
pop
inc
inc
mov
aad
pushf
push
xchg
clc
aas
mov
sub
push
out
add
cmc
in
jecxz
cmp
imul
sub
push
adc
mov
add
lret
inc
pop
cmp
xlat
sti
add
lods
sarl
aad
imul
xor
push
popa
cmc
into
inc
add
sti
sub
stc
inc
lea
orb
jne
mov
xchg
mov
add
and
fcoms
cmpsb
or
xlat
repz
stc
cmp
mov
jns
mov
popf
cmp
add
aas
jns
std
stos
and
jno
lods
jo
jae
cmp
jae
mov
xor
and
mov
cli
xor
lods
add
repz
pop
dec
mov
inc
stos
and
dec
out
ds
pop
jns
faddl
or
xor
fwait
addb
dec
add
add
sbb
cmp
fwait
ds
jge
mov
add
punpckhbw
mov
iret
hlt
shlb
mov
loopne
cmp
ret
popl
pop
add
mov
add
mov
xor
cmp
cmp
inc
and
mov
insb
cmp
mov
pop
mov
dec
mov
jnp
add
sub
insl
add
lods
scas
mov
ret
lds
fisttps
in
push
add
and
add
mov
add
in
push
xor
add
fcmovu
dec
aam
jl
push
loopne
pop
push
mov
gs
call
addl
xor
push
lret
add
lods
and
and
mov
sbb
and
sbb
je
fnsetpm(287
jecxz
inc
push
add
push
sbb
add
jmp
jb
cmp
xor
popa
outsl
sub
inc
pop
mov
add
ds
inc
test
dec
rolb
push
sbb
cmp
or
jp
push
sbb
mov
dec
adc
test
push
pop
int
jp
adc
cmp
inc
push
stos
add
inc
cmp
movb
idivb
data16
stos
and
mov
jo
push
add
cltd
dec
inc
mov
pop
inc
cmp
sbb
sar
sbb
xor
mov
add
and
xchg
pushl
lret
pop
xlat
dec
and
fnsave
mov
adc
add
jg
jb
jp
int
inc
adc
jge
pusha
mov
inc
sbb
popa
pop
inc
in
cmp
xchg
inc
cmp
cmp
ja
cld
ds
add
jl
ret
push
insb
js
sbb
push
jecxz
jbe
nop
jo
mov
rol
cmp
add
jge
xor
test
add
mov
repnz
adc
lea
icebp
es
add
mov
icebp
sbb
mov
aas
sar
add
xchg
cltd
cmc
mov
or
add
mov
cs
or
out
mov
add
outsl
mov
add
rclb
movsb
fsubl
mov
int
int3
add
subb
iret
pop
pop
and
add
aad
ficompl
incb
mov
rclb
pop
cmp
jle
lods
cmpsl
cmp
sbb
adc
clc
in
mov
fcoml
addr16
inc
cmp
call
fisubl
mov
mov
aaa
cli
or
cld
xchg
fwait
xorl
push
xor
pop
stc
jge
add
mov
xchg
push
add
push
sbb
sub
out
add
xchg
pop
mov
add
pop
fimull
sub
mov
stc
iret
mov
pop
sub
seta
insl
bound
mov
xchg
stos
or
inc
into
add
xchg
loopne
loopne
mov
lods
dec
add
fwait
cmp
ret
xchg
daa
add
sub
lret
call
or
xchg
dec
mov
adc
aam
sub
xchg
loopne
ljmp
in
scas
dec
inc
push
push
fiaddl
pop
cli
mov
jb
loope
pop
hlt
aam
pop
insl
ds
add
cmp
sub
aas
and
or
jae
fldt
cmp
sbb
add
out
inc
inc
pop
cmc
aam
orb
xchg
add
mov
js
adc
ret
pop
movl
into
xchg
jg
push
or
rcrb
cwtl
addb
out
mov
clc
push
or
scas
enter
xchg
mov
mov
fucom
sub
sub
add
icebp
lds
insb
mov
pop
push
mov
adcb
lods
sti
or
imull
pop
daa
dec
cmp
mov
mov
push
add
pop
mov
addl
imul
daa
xchg
push
cmpsl
dec
push
stos
mov
adc
lods
lock
dec
rolb
int3
xor
add
call
add
in
and
jae
fcmovnb
loop
add
or
or
add
cmp
mov
pop
xchg
cmp
fwait
pusha
mov
or
arpl
xor
add
imull
cmp
dec
rolb
add
and
xor
add
adc
add
jb
inc
or
aaa
adc
add
xor
out
mov
pop
and
bound
or
hlt
add
xchg
push
mov
cmp
mov
add
repz
jl
push
popa
jle
loop
xor
test
cmp
add
cmp
insl
adc
dec
inc
xor
in
cmp
mov
dec
ds
test
pop
or
inc
shl
mov
push
insb
pop
lret
sti
inc
sub
sub
mov
cltd
imul
xchg
dec
sbb
popa
inc
daa
jbe
add
inc
sub
ret
add
mov
mov
sub
jl
aaa
loopew
pop
aas
cmpl
cmp
lret
out
or
sahf
rclb
add
add
adc
js
sub
addl
dec
and
dec
inc
sarl
ret
cmp
fbld
xchg
xor
cmp
sbbb
inc
lahf
cltd
idivb
add
scas
test
mov
mov
push
aam
imul
jmp
add
enter
addb
mov
dec
cmp
lock
cltd
mov
inc
push
push
gs
and
aad
add
pop
int3
dec
ror
mov
add
cmc
or
call
xor
outsl
xor
int3
into
add
jns
push
int
mov
imul
pop
in
push
pop
fadds
push
cmp
mov
xorl
cmc
push
aam
jns
xchg
dec
sub
xchg
sbbl
popfw
inc
xchg
push
scas
sti
mov
aaa
add
xchg
jne
add
mov
xchg
je
add
cmp
bswap
lea
jbe
out
lcall
icebp
push
adc
adc
push
mov
add
and
mov
cmp
add
pop
lret
out
daa
jae
add
inc
cwtl
fnstsw
add
mov
push
cmp
and
lods
and
and
adc
pop
addr16
pop
mov
inc
fisttpl
and
or
xchg
xor
pop
pop
flds
add
or
fwait
mov
icebp
add
jl
pop
sbb
rol
and
inc
add
dec
stos
in
xchg
mov
leavew
add
sbb
cs
jg
cmp
arpl
cmp
add
iret
es
pop
dec
cld
mov
or
and
stc
xchg
es
fdivr
leave
push
cmp
push
jbe
push
cmpsl
cmp
es
fisttps
inc
mov
ret
adc
sbb
mov
add
popf
xchg
aas
loopne
clc
mov
data16
mov
dec
cmp
and
arpl
mov
push
in
xchg
inc
add
sub
ret
xchg
xchg
inc
movsl
add
ds
aad
addl
sbb
add
jnp
mov
lock
dec
jmp
inc
test
cmp
push
jbe
mov
sbbl
call
scas
test
fisubl
testb
mov
in
adc
aam
cmp
mov
stos
xchg
popf
popa
dec
mov
cmp
aaa
xor
xorb
push
and
inc
and
or
andl
adc
mov
mov
sbb
out
cltd
xlat
mov
jns
pop
push
lds
cmc
sarb
sbbb
add
aad
cli
orb
fildl
cltd
sbb
imull
sub
adc
rorb
int3
pop
dec
add
push
cltd
push
xor
mov
add
cmp
cs
mov
pop
mov
xor
add
or
push
push
mov
stc
inc
out
gs
inc
jne
cmp
lahf
jae
ret
mov
cli
pusha
bound
xchg
fiaddl
and
out
scas
int3
push
jae
sbbb
daa
pop
pushf
nop
mov
mov
in
jae
pop
add
fldt
dec
xchg
das
pop
pop
pop
call
pop
mov
cmc
ret
dec
add
arpl
ficompl
jge
rcr
sti
add
and
sbb
stos
add
inc
in
fwait
mov
notb
mov
sub
jo
push
add
push
jle
in
rorb
icebp
rolb
mov
into
inc
pusha
rcr
jae
sbb
test
out
add
jne
cmp
pop
ljmp
jmp
int3
cwtl
add
sub
jno
sarl
loopne
push
sbb
pusha
leave
ficomps
fldcw
into
lods
cmp
dec
repz
pop
aas
cli
out
ja
push
aam
cmp
dec
bound
jno
and
lret
inc
jg
xor
movsb
test
xor
testl
stc
lods
xor
add
jp
sbb
call
xchg
mov
push
daa
mov
jecxz
add
add
call
pusha
jmp
data16
movsb
add
fldl
lock
push
loop
mov
add
mov
and
pop
icebp
adc
sub
gs
and
or
mov
fwait
or
sub
sub
insl
push
inc
test
mov
add
and
not
adc
cmp
add
mov
repnz
add
sbb
dec
add
jbe
xchg
arpl
test
out
xor
sbb
push
xchg
mov
add
fs
pushf
ds
outsl
jns
xor
mov
add
lea
add
testl
iret
push
faddl
pop
add
jge
int3
mov
scas
loope
pushl
add
cld
dec
jb
fcoml
adc
lock
mov
dec
loopne
mov
scas
adc
adc
sub
pushf
incl
or
xor
add
sub
sbb
sub
or
pop
testb
mov
lret
in
sbb
add
adc
outsl
rcrb
mov
xchg
cmp
insb
jmp
xchg
setb
pusha
dec
ds
pop
sub
cwtl
push
ljmp
out
call
push
fisubs
inc
nop
orb
das
add
cmp
mov
pop
sti
js
mov
fs
adc
lds
dec
xor
dec
test
movsb
pop
lods
arpl
subl
nop
mov
mov
rclb
add
dec
mov
fcomps
lea
and
sub
fsubr
lret
insl
mov
xor
ds
data16
xchg
push
loope
pop
mov
dec
cwtl
add
insb
aam
mov
fidivl
scas
mov
popf
outsl
add
mov
inc
or
and
push
fcmovnbe
mov
dec
jl
xchg
sbb
lahf
movsl
shll
bound
or
adc
mov
push
mov
jge
cs
mov
cltd
sub
pop
dec
dec
pop
add
lcall
add
daa
shl
jno
pop
rorb
mov
loopne
ds
iret
mov
push
daa
add
es
in
test
aaa
jns
ds
jo
add
xchg
call
xor
pop
test
and
mov
mov
dec
mov
adc
nop
mov
lcall
mov
stos
orb
je
jge
cmc
or
fldenv
in
add
ret
xchg
icebp
pop
sbb
inc
fidivs
mov
cld
xchg
add
push
dec
sbb
arpl
cmpsb
fs
and
mov
sbb
dec
imul
lahf
rorb
sbb
mov
inc
sti
cmp
mov
xlat
add
rol
aad
daa
call
cmp
insl
mov
add
addr16
pop
popa
push
mov
mov
stos
cld
and
stc
inc
push
shrl
mov
es
aad
test
jno
std
pusha
sarb
inc
cs
or
push
add
xchg
or
test
cmpsl
adc
inc
imul
and
lock
or
aaa
lret
mov
loop
add
jmp
mov
add
movsl
mov
movsb
add
icebp
mov
cmp
mov
call
aam
les
jmp
add
inc
push
fmuls
adcl
add
xchg
xor
xchg
insb
fldenv
mov
aaa
xor
inc
push
hlt
scas
adc
cs
cmpsb
xor
cmp
mov
mov
mov
add
inc
std
pop
stc
jno
sub
xor
sahf
mov
jl
cmp
xchg
adcb
fadd
fists
or
sub
fnstenv
aad
das
or
sub
and
mov
jbe
add
add
xchg
jns
add
inc
sbb
xor
adc
add
enter
and
call
sbb
rcrb
dec
cltd
cmp
xor
adc
je
mov
add
add
test
mov
repz
inc
sub
ret
add
int3
cld
or
add
loop
dec
mov
and
xchg
les
roll
jno
ret
sti
or
subb
enter
dec
mov
lods
add
jne
adc
add
xchg
aam
iret
movsb
inc
sub
dec
dec
fwait
xor
mov
xchg
mov
iret
out
test
fwait
push
les
add
adc
test
add
xchg
sbb
cmc
add
cld
jbe
pop
aad
dec
sub
pop
sub
jg
add
inc
mov
shl
mov
sub
adc
jp
rolb
add
sbb
jp
add
iret
icebp
push
aaa
sarb
add
shlb
pop
test
pcmpgtb
sub
in
stc
push
sbb
sub
push
sub
sti
int
imul
sbb
imul
mov
test
ss
push
out
adc
aaa
loopne
lock
cwtl
test
aas
mov
fiadds
jmp
pop
mov
add
sub
out
push
inc
xchg
loopne
sbb
add
xchg
or
in
xor
add
cmp
ror
lds
aaa
sub
jnp
fiaddl
cld
lock
sub
icebp
pop
push
push
nop
mov
lds
sbb
add
sub
roll
aad
aam
test
mov
dec
sbb
xlat
imul
and
or
stc
popa
shrb
enter
rcrb
sti
jge
add
les
add
rcll
push
decb
xchg
dec
out
cmpsl
ja
add
loopne
xor
mov
jns
pop
add
dec
mov
mov
in
dec
add
std
dec
je
test
dec
cmp
in
xor
sbb
in
add
nop
and
mov
and
lret
xor
push
jb
jle
pop
inc
mov
and
cmp
cmp
sbb
push
mov
add
addr16
in
dec
shlb
popl
bound
cmc
sbb
loopne
add
imul
mov
fwait
jecxz
cmp
out
pop
add
mov
cwtl
arpl
repnz
and
movsl
push
pop
jae
pop
mov
add
add
sub
movsl
cmc
add
call
xchg
outsb
add
xor
and
jecxz
cmp
mov
aaa
insb
arpl
sahf
test
xchg
mov
xchg
sbb
pusha
or
inc
into
rcrb
data16
sti
add
xchg
mov
sarl
xchg
and
mov
cmp
cs
jmp
dec
mov
mov
and
cld
aas
mov
cmp
add
pop
mov
add
decl
pop
add
lret
aas
jmp
pushl
and
add
jb
call
jnp
add
out
cmpb
jb
mov
add
cmp
mov
jmp
into
mov
loop
std
loopne
outsl
or
popa
pop
scas
adc
pop
fstpl
xor
add
bnd
or
sub
pop
shl
push
std
repnz
and
mov
xchg
add
pop
in
and
add
and
test
adc
jae
add
mov
sub
sbb
adc
jge
inc
mov
push
add
outsl
push
sti
inc
shlb
adcl
loopne
push
ret
cwtl
xor
sbb
add
push
inc
fmul
adc
xor
loope
int
out
adc
jno
decb
jbe
hlt
aam
fnstcw
imul
mov
rol
adc
push
push
adc
push
xchg
pop
jne
xchg
cli
mov
xchg
mov
ss
inc
inc
lcall
cld
push
stos
and
sub
adc
jl
mov
ret
xchg
scas
push
xor
mov
outsl
cli
cmc
ljmp
add
add
outsl
hlt
sbb
lahf
lock
add
nop
subl
movsb
repnz
add
cmp
jnp
out
mov
cwtl
rolb
xchg
mov
popa
push
js
push
sub
ja
mov
sti
pop
sahf
faddl
out
xchg
inc
lods
or
test
xor
xchg
inc
mov
add
dec
in
pushf
outsb
mov
loop
add
addr16
cmp
js
cltd
pop
stos
jmp
lods
cwtl
mov
in
mov
inc
cmpsl
add
popf
add
lret
addr16
push
je
xchg
sub
unpcklps
or
shl
in
pop
add
pop
mov
inc
sbb
adc
loopne
or
xor
pop
int3
cwtl
adc
add
adc
xchg
dec
pop
push
loop
mov
arpl
sahf
stos
pop
inc
or
pop
push
jae
inc
repz
popa
pop
mov
add
mov
insb
add
inc
and
add
int
fidivrl
lcall
dec
loopne
ret
push
adc
arpl
add
rorb
cmc
rclb
add
inc
mov
add
stos
loope
add
test
inc
pop
push
cmc
add
adc
sbb
test
jbe
inc
sub
les
xor
addb
pusha
call
dec
popa
out
dec
dec
or
dec
add
xor
cltd
cli
cmp
and
sbb
mov
adc
sbb
inc
or
fsubp
sahf
and
push
mov
adc
lcall
enter
shufps
adc
pop
scas
or
pop
data16
rcll
adc
insb
repz
lods
fwait
push
pop
fsubl
xor
shll
jo
add
das
fsubrs
subl
mov
adcb
xor
xchg
repz
inc
sub
xchg
movsb
setno
push
inc
lea
push
daa
pop
inc
outsb
inc
xchg
cmp
insb
repnz
jg
mov
mov
shlb
inc
add
or
sub
hlt
mov
int
xor
and
out
mov
push
mov
fidivl
sahf
add
or
xor
sub
mov
aas
push
mov
sub
icebp
inc
jb
xchg
and
sahf
add
aaa
rcrl
lock
ret
adc
aas
add
scas
mov
ljmp
sub
or
sbb
loope
loopne
sub
cmp
in
into
ljmp
dec
popa
cmp
imul
mov
das
add
cmpsb
pop
js
mov
pop
mov
sub
cmp
in
fcomi
xorb
or
add
xchg
sbbl
inc
mov
cmp
int3
or
and
xor
xor
mov
pop
dec
push
loopne
mov
bound
out
xor
cmp
movsl
fisubrs
sti
pop
mov
lcall
shrb
pop
add
lods
inc
aas
lret
jmp
cs
push
xchg
ja
icebp
xor
pop
test
and
or
mov
aas
out
pop
push
aaa
test
or
js
cmp
xchg
enter
dec
popf
pop
jecxz
inc
repnz
out
xor
sub
into
roll
mov
ror
mov
mov
int3
xchg
push
in
jl
scas
adc
jae
jge
mov
mov
and
add
iret
push
popa
ret
int
mov
dec
pushl
and
jo
push
add
lods
dec
push
mov
repnz
cli
adc
cld
dec
fidivrs
adc
sbb
inc
sahf
mov
push
inc
adc
es
in
aad
outsl
push
sbb
xchg
add
xchg
rolb
cmp
lret
mov
push
or
leave
mov
test
push
pop
jb
rcrb
es
add
out
jns
adc
data16
xchg
arpl
shlb
xor
sub
fistpl
fsubrs
jno
push
sub
sub
outsb
xchg
pop
ficoms
cld
hlt
lahf
add
add
repnz
loopne
push
jmp
jp
jecxz
sub
insl
cmpsl
test
in
hlt
es
mov
loope
icebp
rcrb
xorb
in
or
lea
jns
lahf
xor
pop
repz
movl
je
sub
dec
push
pop
dec
xchg
add
sub
clc
and
xchg
sub
cs
add
test
sbb
je
mov
sbb
lock
xor
fmulp
rcrl
cld
cmp
pop
test
jle
imul
adc
or
mov
iret
or
rorl
lock
shrb
bswap
clc
mov
dec
xchg
jecxz
fdiv
enter
divb
xor
repz
scas
pop
mov
pusha
sti
lods
loopne
add
and
cwtl
push
icebp
inc
add
jecxz
ret
js
adc
arpl
or
add
fsubrl
mov
pop
add
rorl
pusha
xor
cmp
insl
mov
push
aaa
sbb
adc
dec
add
jle
imul
add
jecxz
sub
js
cmp
add
cli
jmp
cld
jmp
gs
mov
xchg
pop
add
andl
aam
cmpsl
data16
shrl
in
add
cmp
add
or
outsl
dec
subl
push
fidivrl
lret
xchg
mov
int
mov
aaa
add
imul
mov
xorb
std
adc
jmp
repz
int3
mov
into
add
cmp
or
pop
dec
add
ds
adc
cli
out
test
es
xchg
mov
mov
add
add
inc
dec
incl
inc
inc
rcrb
sub
mov
sub
add
mov
add
addr16
cmp
sbb
pop
sbb
add
cmp
mov
push
inc
add
jbe
int3
in
mov
and
test
sub
add
jmp
mov
inc
cmp
nop
cmp
std
cwtl
popa
rolb
imul
or
add
mov
sbb
push
mov
push
arpl
xchg
sub
pushf
jno
adc
add
add
cmp
test
or
outsb
cwtl
shl
and
push
test
fsubrs
loop
cmp
fadds
mov
call
jl
lea
lods
popf
jb
cmp
jg
cmpsb
push
mov
dec
pop
ja
jmp
ret
js
pop
aad
gs
cmp
xchg
cmpb
add
add
popf
stc
add
xor
lock
add
adc
sbb
pop
repz
push
mov
les
pop
add
add
insb
push
mov
imul
lods
or
repnz
add
inc
fwait
out
add
outsb
jmp
movsb
add
ret
mov
or
call
cwtl
and
jle
rolb
push
add
or
clc
mov
cmp
mov
stos
pop
rcrl
inc
movl
lds
faddp
out
push
add
inc
cmpsb
push
lods
mov
mov
adc
rorl
mov
jle
pop
sahf
add
or
icebp
pop
xchg
inc
ljmp
sti
sbb
sbb
cmc
add
jmp
jae
es
rcll
add
repz
xchg
add
adc
mov
push
adc
xchg
rclb
nop
in
dec
push
add
int3
aam
pushf
cmp
je
add
adc
inc
add
cmc
pop
mov
bound
pop
dec
jo
dec
pop
test
add
push
pop
push
xchg
inc
push
js
shrl
lret
into
add
jecxz
test
and
lfs
bound
lret
adc
fnclex
enter
mov
jp
add
loopne
fld
scas
call
aaa
addb
add
ja
mov
lea
add
test
mov
add
lret
cmp
push
add
mov
mov
and
push
add
dec
jae
and
fdivrs
or
shll
adc
push
push
mov
inc
loop
vaddpd
rolb
jmp
mov
dec
repz
lods
dec
mov
imul
adc
cmc
pop
or
repnz
jb
add
mov
xchg
inc
add
push
insb
jp
sbb
inc
cmp
jbe
loopne
mov
jle
jb
loopne
insl
add
lds
push
out
aam
mov
add
push
sar
into
std
test
addb
xor
lds
addb
add
out
push
mov
xchg
pop
sub
inc
add
pop
or
jns
add
mov
call
fs
push
sub
mov
push
bnd
mov
shrl
imul
inc
push
add
ret
add
or
mov
lock
clc
inc
enter
xor
test
imul
inc
rcrb
enter
hlt
cmp
mov
jne
sti
push
test
packuswb
je
adc
ja
sti
mov
add
inc
mov
movl
push
and
bnd
out
inc
cltd
pop
jbe
add
push
mov
mov
lds
stos
aas
adc
sbbl
cwtl
cli
scas
fsubs
add
xor
sahf
adc
hlt
add
and
xchg
mov
dec
jnp
popf
dec
sub
movsb
repz
mov
add
into
popf
pusha
add
hlt
shlb
shll
push
adc
aaa
and
pop
addr16
mov
inc
cmp
pop
sbb
lds
and
mov
push
jns
push
imul
mov
add
mov
lods
xchg
sbb
mov
sti
xchg
mov
sbb
or
jecxz
lea
dec
and
sbb
outsb
popa
dec
jle
sub
ret
fdivl
add
sub
push
xchg
inc
aam
add
cmpsb
mov
jae
mov
add
mov
arpl
sti
add
mov
sub
negl
add
fucomp
mov
add
push
dec
add
mov
and
jg
jl
push
push
add
cmp
lock
insb
add
mov
mov
arpl
jb
add
jg
sbb
mov
jno
add
sub
outsb
cmp
jae
push
pop
mov
xchg
add
stc
stos
jns
mov
int3
add
in
cmc
lock
inc
shld
add
pop
or
fistpl
push
jecxz
pusha
enter
int
lds
xchg
shrl
xor
mov
dec
pop
add
mov
cmpsb
add
pavgb
imul
mov
out
outsb
mov
inc
testl
add
or
add
xchg
pop
mov
jmp
dec
add
nop
rcrl
popa
jp
jmp
lods
shr
add
ljmp
mov
or
rorl
inc
sbb
stc
add
adc
dec
push
sbbb
dec
sub
xlat
orl
fstl
cmpb
nop
mov
jb
mov
addl
sarb
cmp
xor
add
add
cmp
xor
jae
int3
add
lods
stos
xchg
pop
inc
adc
movsb
cmp
pop
inc
sub
cmc
outsl
add
sti
dec
aam
jecxz
add
pop
cmp
sbb
cmp
xchg
pop
and
fisubs
add
clc
add
pavgw
pop
mov
mov
add
xchg
fs
add
mov
in
pop
shr
add
arpl
push
push
xchg
push
add
jle
sbb
dec
cld
inc
mov
sub
inc
int3
xor
ss
shlb
mov
pop
push
add
jns
pop
mov
mov
mov
inc
cs
mov
xchg
ds
mov
iret
push
push
loopne
clc
in
cmp
repnz
dec
nop
xor
mov
jge
lods
ds
pop
xor
cmp
jecxz
jne
aam
out
xchg
out
inc
mov
or
andl
add
or
mov
stos
xchg
add
iret
inc
call
dec
sbb
add
dec
lea
mov
cwtl
pop
das
mov
scas
orl
popa
add
inc
cld
add
push
cmp
lods
roll
mov
cmp
hlt
cmpsb
push
mov
cmp
pop
cwtl
adcl
fbstp
cld
fildl
or
sahf
sub
lret
shr
push
lds
fiadds
sahf
enter
andl
loopne
out
sbb
sub
shll
or
jl
mov
jp
or
gs
mov
add
or
pop
sbb
pop
push
add
dec
movsl
jbe
and
xchg
mov
sbb
arpl
sarl
add
fistl
repz
mov
add
jbe
mov
cmp
mov
mov
pusha
shl
pop
push
xor
in
or
pop
mov
inc
pop
movsb
ret
fucomi
out
dec
inc
shl
stos
fnstcw
add
jns
jae
adc
sbb
cmp
adc
adc
pop
in
adc
inc
sbb
and
or
in
sbbb
add
add
mov
inc
xchg
shl
xlat
push
jge
rcll
lahf
cmp
jg
or
in
mov
jecxz
lret
adc
js
sbb
xor
jnp
mov
inc
orl
cs
data16
ljmp
add
dec
ret
add
mov
stos
mov
fcmovb
add
fwait
sbb
lods
add
mov
sub
sbb
jmp
xchg
out
outsb
addr16
jge
xorl
insb
inc
cs
add
pop
add
and
add
and
sbb
xchg
rcl
cmp
add
ret
push
js
dec
into
in
xor
pop
shrb
add
inc
insl
fnstcw
ljmp
pop
sti
mov
xchg
mov
nop
cld
mov
cmpsl
shll
in
fists
enter
lock
cmp
iret
fisttps
test
aaa
mov
xchg
pop
lods
sub
xchg
and
insl
dec
cmp
pusha
fldcw
das
call
lds
imul
int3
negb
sbb
xchg
lret
add
dec
add
mov
fdivs
lret
fstps
fsubl
icebp
movsl
jl
xchg
adc
cwtl
pop
jns
jg
jle
leave
sbb
push
lret
int
add
fsubl
dec
repnz
loop
insb
jbe
pop
sub
jge
decl
popf
pop
jg
nop
nop
ret
xor
clc
push
push
addr16
cmpsb
dec
sbb
cmp
das
mov
lret
daa
xchg
ss
scas
mov
stos
add
or
pushf
inc
adc
xchg
add
mov
jmp
jo
add
sarb
jne
pop
xchg
xor
sti
lahf
and
sbb
sar
inc
dec
outsb
lods
add
xchg
jnp
call
pop
inc
sbb
test
adc
fld
call
movb
mov
dec
jnp
and
ja
sub
sub
sarb
push
jmp
add
push
std
hlt
inc
mov
push
push
xchg
sarl
adc
and
push
add
clc
call
cmp
scas
add
sbb
push
outsb
sar
cmp
jmp
jecxz
je
xchg
adc
mov
inc
xchg
popa
stos
adc
ds
adc
push
add
push
cmp
pop
mov
shl
push
add
mov
cmp
das
push
js
add
push
shll
sub
add
sbb
daa
fwait
xor
mov
add
push
push
lcall
dec
bound
mov
cmp
fisttpll
outsl
add
ror
pop
mov
mov
add
lock
pushf
pop
pusha
jnp
push
repnz
add
ja
add
addr16
inc
pop
mov
jg
das
push
mov
cmp
or
add
cld
lea
mov
pop
xor
sbb
ljmp
les
bound
fs
mov
leave
loopne
adc
andb
pop
cli
add
cmp
stc
call
and
adc
les
add
jecxz
test
sbb
or
or
push
add
insb
adc
xor
decl
sub
add
sarb
push
mov
andps
aaa
rclb
cwtl
hlt
repz
cltd
mov
incl
add
pop
gs
dec
add
xor
push
addb
pop
into
sbb
sbb
or
push
fiaddl
inc
test
dec
add
push
mov
jecxz
add
cmp
dec
sbb
imul
loop
test
mov
or
subb
adc
jmp
lret
adc
xchg
mov
jp
xor
test
fadd
mov
enter
movsl
adc
inc
icebp
xchg
add
push
out
xchg
jmp
push
mov
mov
fidivrs
mov
mov
dec
jl
push
pop
add
add
out
sbb
lds
add
cmc
jns
xchg
jo
mov
adc
add
add
fadds
sub
mov
inc
or
addl
sub
sub
mov
xchg
mov
pop
shll
sbb
cld
call
mov
mov
sarb
popl
push
aam
pusha
stc
pop
pop
jg
jl
fstps
add
inc
push
int
stos
rcll
mov
jecxz
scas
add
jmp
xchg
xchg
aaa
pop
jno
mov
fildl
sub
sbb
rcr
push
add
mov
dec
inc
and
add
mov
sbb
rolb
xor
pop
cwtl
ds
add
cld
stos
rcrb
iret
inc
fstpt
in
sub
xchg
add
fwait
addr16
or
and
lock
xrelease
es
lret
hlt
inc
addb
push
and
stos
push
fnsave
pop
fs
mov
test
add
outsl
cmp
lds
add
popa
repnz
push
add
jle
sbb
dec
pop
xor
lock
or
add
aaa
add
and
push
das
mulb
push
jg
push
cld
orb
outsl
push
mov
mov
xor
test
dec
icebp
adc
sbb
mov
stos
mov
add
or
lahf
int
pop
ds
mov
movsl
add
sti
loop
dec
lds
cmp
mov
popw
pop
repz
lock
movsl
sbb
xchg
xchg
inc
jp
or
je
out
push
cmp
lahf
sub
inc
add
push
sbb
add
adc
ret
xchg
and
fdivr
cmp
add
lds
xor
mov
iret
repnz
icebp
fadds
jo
jb
lock
and
das
adcb
and
in
xor
dec
xchg
pusha
icebp
in
add
sbb
imul
lds
or
push
cld
cmp
mov
clc
cmpsl
cmp
pop
dec
ja
add
and
add
and
je
jno
mov
xchg
inc
sti
test
fadds
or
outsl
shll
cmp
add
into
push
shl
nop
insb
adc
add
int
testb
mov
out
pop
xor
jle
int
dec
cmp
adc
and
add
push
ficomps
decl
inc
adc
push
inc
mov
jmp
dec
insb
add
mov
mov
jno
push
inc
cmp
push
cmc
or
xor
sub
jnp
lock
xcrypt-ctr
cmpsl
sbb
push
jge
cmpb
ret
dec
and
add
push
loop
leave
add
mov
or
test
mov
sbb
cwtl
imul
push
add
or
pushf
mov
inc
pop
pop
imul
mov
push
pop
lods
sub
mov
xlat
bndldx
loopne
mov
lret
push
jno
add
jns
dec
cs
sub
cmp
pop
andl
inc
adc
jnp
cmp
mov
xchg
les
out
icebp
into
cmp
mov
mov
es
dec
add
xchg
cmp
add
ret
add
cmp
add
rcrb
cltd
aad
or
pop
sub
pop
sbb
add
pop
sub
jns
add
hlt
sub
stc
push
mov
loopne
pop
insb
mov
cmpsb
bound
xchg
ja
and
fcmovnu
mov
arpl
jmp
inc
push
movsl
pop
pop
mov
mov
add
jne
dec
add
imul
pusha
test
std
inc
call
mov
loopne
js
popl
clc
lahf
sub
xor
daa
shll
jg
jbe
inc
sub
mov
sbb
or
xchg
xchg
push
mov
cmc
psubsb
or
inc
sub
mov
ljmp
add
je
pop
and
mov
dec
jp
orb
loopne
and
ret
outsl
or
lods
cmp
scas
and
mov
sbb
cwtl
jae
or
ret
sub
add
dec
pop
insb
mov
push
hlt
mov
sbb
add
insb
je
pop
adc
add
xchg
xor
adc
std
push
jge
dec
decb
shr
pushl
mov
push
jmp
inc
and
adc
inc
popa
loop
stos
mov
or
mov
loopne
data16
bound
dec
inc
les
loop
mov
repnz
add
lahf
loopne
pop
add
stc
xchg
mov
pushf
ret
or
aam
inc
push
dec
out
and
add
xlat
sub
push
iret
into
push
push
jge
dec
lcall
inc
cmp
int3
pop
or
push
inc
andb
rol
dec
mov
add
test
cltd
lea
sub
push
push
lods
xchg
ret
ficomps
aam
add
mov
clc
xorb
pop
stos
stos
nop
dec
pop
xchg
push
inc
add
pop
arpl
outsl
adc
push
add
add
lea
xchg
cltd
adc
rcll
clc
mov
mov
std
adc
add
mov
arpl
scas
inc
xchg
add
inc
outsb
xor
out
xor
mov
pop
add
cmp
jmp
dec
mov
xor
sbb
rorb
and
pop
push
inc
lret
inc
xchg
mov
stos
or
popa
xchg
aam
add
add
push
sbb
mov
es
cmp
add
and
sbb
add
lods
flds
sbb
daa
lock
orl
push
into
in
jo
jnp
enter
pop
pusha
and
cmp
stc
clc
and
subb
pop
add
cmp
mov
sbb
rolb
shlb
inc
shlb
cmp
sbb
outsl
leave
lods
sbb
xchg
add
pushf
pusha
call
pop
pop
adc
dec
loopne
rorb
sub
adc
jp
add
repz
inc
loop
mov
sbb
lods
shll
inc
mov
test
inc
gs
xchg
js
decb
mov
pop
fdivs
push
and
aaa
add
sbbb
rcrb
push
aam
adc
add
push
pop
xchg
push
lcall
jmp
sbb
sar
adc
dec
dec
scas
add
stc
movsl
ds
xchg
orl
adc
and
jecxz
lret
pop
stos
daa
pusha
cmc
add
xchg
add
adc
pop
cmp
xor
orb
lock
add
adc
adc
cmpsl
ss
xor
lds
lods
add
stos
cmp
fwait
add
aas
clc
fbstp
incb
sub
xchg
mov
jmp
cli
mov
xchg
shl
sbb
arpl
inc
or
jle
ljmp
in
xorl
xchg
ficoml
imul
mov
mov
cs
add
ja
jae
fstps
mov
in
add
daa
inc
mov
icebp
jno
movsb
cltd
add
repz
cpuid
jp
push
cmp
addr16
cld
nop
jb
xchg
add
shrb
in
or
push
shll
aaa
fstpt
sub
rclb
andl
or
inc
add
dec
mov
stos
push
mov
sub
and
dec
mov
sti
pop
jae
rcrb
test
rolb
fstps
jl
cld
and
addb
mov
adc
call
enter
jge
scas
xchg
call
push
pop
jmp
xor
adc
fdivrl
inc
push
add
gs
adc
xor
popf
lret
stos
push
xor
cltd
xor
rolb
roll
aaa
pop
mov
push
shlb
gs
into
adc
out
mov
and
adc
lahf
xchg
jae,pt
testb
shl
mov
das
cwtl
add
lret
cwtl
push
ds
mov
dec
movsl
orl
mov
lahf
rcrb
mov
es
mov
rolb
arpl
aam
testb
add
pop
test
add
lock
mov
imul
fsubrs
add
pop
or
shlb
dec
sub
pop
fdivrs
in
lcall
and
sbb
jecxz
xchg
scas
inc
or
jnp
mov
insl
pop
sbb
sub
outsl
and
sahf
sub
mov
xor
hlt
and
ror
dec
add
cmpsl
ficompl
test
add
mov
mov
add
sub
cmc
call
pop
nop
repz
in
mov
jecxz
mov
or
into
movsl
jnp
pusha
and
jmp
das
and
dec
push
dec
jae
into
out
add
xor
rcll
sub
in
jo
bound
aaa
add
insb
pop
inc
mov
push
fbstp
sbb
movsl
sub
dec
or
xchg
mov
push
xchg
add
scas
add
je
jmp
outsl
ss
pop
std
test
mov
pop
into
push
aaa
mov
in
shr
int3
fs
add
insl
aam
fdivr
imul
test
pop
incb
js
add
int3
mov
inc
and
adc
jl
rorb
hlt
add
dec
test
addb
outsb
push
ret
int3
ljmp
arpl
add
sbb
in
ret
add
es
adc
xchg
xorb
xor
enter
mov
add
pop
orl
jl
mov
outsb
mov
add
inc
mul
sahf
jbe
add
add
lds
cwtl
cmp
xchg
push
scas
jb
in
jg
add
mov
addb
mov
ljmp
cs
inc
xchg
pop
incl
sbb
pop
push
and
pop
cld
add
mov
dec
clc
incl
push
lea
mov
call
xor
mov
sub
xlat
push
cmp
lds
sbb
daa
mov
add
imul
test
push
cmp
and
bound
jae
inc
or
mov
dec
add
mov
jo
lods
push
cs
inc
add
cmc
ficoml
mov
lds
lret
mov
loopne
loope
call
pop
ret
xor
jecxz
rclb
sub
sub
add
incl
or
pushf
rorb
add
add
pop
jnp
inc
cmpsb
test
add
movsb
inc
mov
notl
xor
jae
sub
andps
std
or
fwait
cltd
or
sub
dec
or
testb
adc
xor
fs
push
enter
push
in
push
or
lcall
push
ror
scas
add
sbb
and
jecxz
rcrb
add
and
pusha
add
fsubl
ja
add
and
mov
inc
or
bnd
cmp
imul
rcrl
pusha
sub
stos
jg
cmp
pushf
incb
in
js
movswl
jmp
rcl
je
or
mov
mov
ds
add
fdivp
cwtl
loop
cmp
xchg
loopne
mov
lock
or
lods
pop
and
xor
in
jmp
cmp
jno
xor
es
mov
mov
inc
inc
add
pop
jecxz,pt
fsubr
add
ret
pop
jl
add
sub
mov
ds
cmp
leave
add
and
inc
jno
mov
setne
cmpsl
das
sahf
and
push
int
pop
ret
lret
push
popa
pusha
lds
icebp
or
mov
das
sbb
fprem1
mov
xchg
pop
stos
mov
and
pop
rclb
mov
add
bound
add
in
inc
test
xchg
pop
jo
popa
ja
add
addr16
mov
call
xlat
ret
scas
push
or
movsl
nop
data16
push
jno
mov
or
and
pop
mov
jae
insb
fs
rolb
and
negl
xchg
rcrb
lock
cmp
inc
popa
iret
enter
loop
fdivrs
notl
fs
add
dec
jne
xchg
fs
cmp
lahf
pop
pop
xchg
addb
cmp
push
xchg
cmpsl
xor
and
inc
pushf
int
movsb
jmp
sub
jl
jmp
pop
add
mov
repnz
popa
in
jecxz
or
add
pop
add
out
dec
pop
xor
loope
mov
pushf
bound
pop
andb
subl
ret
pusha
faddl
imul
bound
mov
lcall
arpl
mov
jle
lahf
fidivs
push
loope
sbb
gs
add
push
into
mov
add
cld
jne
out
or
pop
test
fsubrs
sbb
mov
popa
xchg
add
xchg
lret
ds
push
rorl
jo
pop
add
adc
sub
adc
or
mov
cmp
pop
and
lock
mov
or
movsb
test
pop
xor
or
xchg
dec
add
clc
rolb
dec
jb
ficoms
orb
add
outsb
loopne
add
push
icebp
inc
sbb
mov
mov
xchg
xchg
add
stos
loopne
bound
adc
inc
or
rorl
sub
enter
fistpl
mov
cld
add
es
ds
mov
sbb
inc
mov
stc
dec
push
loopne
jne
rolb
faddl
add
dec
nop
dec
mov
enter
sahf
incl
mov
xchg
jae
add
cwtl
jle
notb
mov
jae
icebp
mov
loop
add
sub
adc
daa
and
test
sub
shll
add
mov
ljmp
push
dec
add
or
sub
add
aas
movsl
mov
push
add
pop
jbe
xchg
andb
je
sbb
stos
es
sbb
add
lods
adc
jecxz
add
sbb
sub
or
addr16
sub
adc
lret
mov
or
dec
push
xor
mov
shl
or
pop
sahf
jbe
push
cmpsl
push
shlb
add
test
jl
pusha
mov
ljmp
push
mov
add
ret
mov
lods
add
xchg
nop
and
enter
push
ret
pusha
rorl
test
test
orl
and
pusha
sar
repnz
out
and
out
outsl
push
sbb
out
xor
pop
push
enter
add
pop
push
xchg
ss
aad
add
jl
imul
cli
and
fcmovne
leave
add
and
jmp
das
adc
or
inc
cmp
lret
in
rol
mov
imul
inc
fdivs
and
push
das
lcall
add
jne
adc
lock
jl
loop
add
dec
mov
add
mov
xor
lret
stos
and
cmp
fiadds
xor
push
mov
jns
cltd
shlb
cmp
cwtl
adcb
ret
jecxz
ret
pushf
pop
push
xor
mov
jp
cmp
aam
es
fwait
nop
ss
mov
sub
cmp
enter
add
pop
pop
push
xchg
popl
rep
and
cmp
mov
gs
mov
add
notl
ss
aam
out
shlb
movl
inc
or
js
daa
fstpl
out
je
xchg
add
notl
aam
dec
shrb
dec
add
ds
add
sbb
enter
cmp
pusha
sbb
add
repnz
mov
in
mov
aad
mov
add
jecxz
xor
and
leave
mov
lcall
dec
inc
xchg
outsb
xlat
icebp
aam
add
pop
add
cmc
in
jl
lods
enter
jne
fimull
jb
outsl
mov
mov
int3
lahf
mov
inc
cmp
sbb
lret
xorl
stos
add
inc
xor
cmpb
and
sarb
or
movsl
scas
pop
insb
add
mov
dec
pop
int3
cmp
add
jg
jnp
or
out
add
dec
and
mov
adc
in
outsb
push
pusha
cmpsl
push
enter
dec
cmp
mov
nop
mov
ds
push
rol
pop
dec
in
and
bound
je
mov
loopne
add
add
mov
lods
sbb
mov
xor
inc
dec
getsec
sbb
in
int3
loope
fmul
xor
inc
mov
cmp
sbb
sbb
imul
xchg
mov
push
loopne
popa
bound
and
inc
js,pn
das
fstpt
or
mov
push
jno
or
pop
out
cmp
lods
push
pop
or
add
cmc
inc
jmp
shl
add
loopne
push
andb
push
sub
out
add
pop
in
cwtl
adc
add
mov
lcall
add
adc
jecxz
sub
cmc
ljmp
inc
xchg
or
rcrb
mov
xor
mov
leave
add
inc
mov
cwtl
mov
mov
dec
xchg
sub
cltd
or
adc
enter
arpl
icebp
cmp
pop
popf
add
aam
add
outsl
bound
add
cmp
push
out
cmpsb
jg
fsubs
pushf
std
shrd
mov
inc
add
test
icebp
add
adc
aaa
andl
or
daa
add
push
mov
add
mov
dec
loope
out
mov
into
pop
inc
jle
add
iret
bound
out
mov
xchg
mov
jmp
lret
out
int
fiaddl
leave
lds
adc
sarb
push
push
fistl
mov
insb
jp
mov
add
dec
or
lods
jle
push
add
rep
jno
fsubr
std
add
push
cmpsb
idivb
subl
lock
and
or
hlt
add
stc
pop
sub
jne
add
and
add
mov
cli
icebp
mov
loope
cmp
pop
fildl
cltd
push
push
xor
and
icebp
aas
jns
movsb
sbb
lret
jbe
and
sarl
cmc
add
push
xchg
bound
jp
dec
adc
jle
imulb
gs
js
cld
xor
loopne
lahf
dec
sbb
cs
adc
aas
mov
cmp
flds
aam
idiv
push
std
cmp
xchg
jmp
push
add
mov
nop
cs
shl
lea
add
pusha
leave
add
out
inc
and
aas
cmp
scas
and
xor
ret
pusha
pop
fnstsw
cmp
lret
clc
sub
xor
add
outsb
dec
sbb
jl
out
add
je
and
xor
daa
push
xchg
dec
in
add
mov
inc
pop
into
cmp
xchg
push
imul
pop
je
addl
mov
push
xchg
add
loope
lock
pop
rcl
dec
dec
mov
and
fsubs
pushf
or
idivb
aaa
imul
xor
add
jo
dec
sub
movsl
enter
fdivs
cmp
rcrb
fxch
jecxz
aas
out
les
xchg
or
add
fnstsw
jae
mov
cmp
xchg
sbbb
divl
pop
sbb
pushf
and
add
fwait
aas
push
mov
and
loope
dec
insl
inc
shrb
add
cmp
nop
or
inc
outsb
mov
adc
nop
push
push
mov
mov
inc
cmp
pop
cmp
sbb
rclb
popa
dec
ret
add
sub
xchg
pop
jl
sbb
add
xchg
pusha
popa
inc
int
mov
nop
xor
sbb
add
jo
push
sbb
test
sub
add
or
cld
sbb
adc
insl
inc
sti
push
je
cmc
mov
mov
mov
sbb
push
out
jmp
adc
sub
add
fisttps
push
or
rol
mov
push
sbb
add
dec
jo
push
add
scas
mov
adc
aaa
add
jb
call
lock
cmc
cmp
adc
jne
cmpsb
add
icebp
push
not
and
dec
mov
inc
enter
add
sahf
jmp
mov
pushf
add
arpl
xchg
cwtl
testl
sahf
cltd
pop
enter
inc
in
dec
lea
mov
add
movsb
cmpsb
icebp
add
stc
xchg
add
add
xlat
add
ja
sbb
cwtl
add
jae
sbb
sbb
cmp
scas
popf
loopne
mov
add
mov
add
mov
sub
jg
fldenv
add
insl
ret
cld
stos
dec
int3
or
xor
jo
sbb
inc
mov
inc
and
out
pop
sub
movsl
cld
sbbb
sub
movsb
jg
jns
out
je
push
sbb
add
dec
dec
outsl
mov
imul
lock
pop
xor
test
pop
add
push
inc
pop
and
shr
and
cs
repnz
cld
clc
lock
sub
xchg
jl
insb
mov
cwtl
push
fnstcw
add
outsb
cli
dec
insl
imull
imul
cmp
loop
add
lcall
iret
sbb
adc
inc
jno
add
xchg
mov
pop
cmpsl
and
cmp
mov
aam
xor
mov
push
xlat
sbb
xchg
xchg
jp
inc
xchg
cmp
and
mov
inc
pop
mov
adc
inc
cmp
add
push
clc
xchg
cmp
test
std
test
ds
add
cmp
add
aam
stc
mov
inc
hlt
inc
and
lret
push
jmp
ds
or
ret
or
xchg
into
inc
pop
add
xor
push
jmp
repnz
jg
js
les
sub
std
adc
cwtl
mov
adc
test
inc
push
jne
sbb
mov
rcl
arpl
xor
out
pop
push
les
pop
out
sbb
into
aad
lock
paddd
dec
out
dec
mov
fs
lea
jle
push
push
pop
icebp
cltd
xchg
sbb
push
push
jle
into
push
adc
test
popa
push
scas
cs
les
dec
test
dec
inc
xor
jo
enter
sahf
mov
adc
or
roll
dec
in
enter
movsl
daa
xchg
sub
mov
loopne
adcb
mov
ljmp
add
pop
jns
jl
shlb
ja
xor
leave
rol
shlb
mov
rorb
pusha
cmp
ret
cwtl
test
add
out
fbstp
lcall
add
dec
xchg
rol
dec
add
push
lcall
cmpsl
or
or
ss
cli
add
cmp
cmp
sbb
push
sbb
addr16
jns
and
sub
add
or
add
dec
pop
sub
jo
adc
mov
les
push
mov
ja
push
pusha
imul
sub
lcall
cmpsb
roll
rorb
sbb
adc
lret
imul
sbb
dec
adc
mov
or
movsb
insb
mov
lret
gs
pop
wrmsr
sub
std
imul
fwait
add
push
mov
push
push
ret
cmp
fimuls
cmpsb
mov
push
or
out
inc
and
jp
inc
repz
add
sub
repz
sub
cltd
fdivrs
cmp
xor
sbbb
popf
sub
testl
jbe
leave
inc
nop
test
flds
dec
mov
sbb
sbb
loope
loopne
stc
add
push
dec
out
mov
push
imul
add
sub
loope
iret
add
shl
aas
xchg
mov
aas
pop
add
pop
add
stc
add
xchg
mov
popf
cmp
inc
sbb
push
cmp
test
aam
cmp
jns
adc
push
shlb
pop
test
inc
nop
out
xor
sbb
dec
cli
jge
sub
out
bound
jp
add
push
mov
arpl
jb
jnp,pn
xor
cmpsl
pop
jge
sub
lods
rorb
add
or
adc
cmp
add
lea
jnp
pop
cwtl
mov
out
or
xor
cmp
int
inc
fildll
call
psubusb
jge
inc
orb
add
sbbl
sub
cmp
add
cmp
sbbl
pop
jle
mov
loope
bound
mov
add
movsb
out
mov
add
movb
je
ret
adc
negb
dec
push
pop
cmc
mov
mov
cmp
sti
xor
cmpl
jmp
fistps
add
shrl
enter
iret
sbb
adc
add
sahf
dec
stos
ss
add
add
test
iret
sbb
mov
fcmovnb
cli
jo
add
cmp
ficoms
push
xchg
stos
je
add
adc
cmp
int3
test
das
add
out
mov
scas
adc
inc
mov
xchg
imul
add
xor
sahf
leave
mov
mov
fiadds
lock
push
hlt
jb
repnz
insb
mov
insl
push
movl
mov
jbe
ljmp
lods
mov
dec
cs
add
and
add
subb
sub
dec
enter
mov
inc
sbb
add
test
iret
and
out
pop
add
mov
mov
in
sbb
and
jge
dec
mov
rorl
enter
cmpb
loopne
mov
and
or
xchg
lods
or
cmc
mov
push
push
out
fsub
sub
add
mov
ss
stos
in
jmp
xor
shrd
hlt
jae
dec
xchg
sti
shlb
insl
psraw
adc
add
push
mov
cmp
faddl
loope
mov
int
lahf
sbb
or
call
popa
imul
cmp
add
movsb
xchg
test
pop
cmpsl
add
imul
push
addr16
pushf
lret
mov
mov
hlt
sbbb
jmp
jno
icebp
xor
dec
pop
cld
fiaddl
shlb
mov
bound
xor
push
test
mov
pop
std
and
inc
push
stos
fbld
inc
cmp
pushf
pop
xchg
lea
cli
or
sub
sub
add
push
hlt
aam
jl
mov
push
cwtl
xchg
test
ficompl
add
pushf
add
sub
sbb
mov
mov
mov
xchg
add
pop
rorb
add
add
adc
shlb
fcomps
cmp
int3
in
jns
jecxz
mov
xor
jmp
cmp
nop
and
add
stc
orl
cmp
mov
and
cmpl
mov
or
scas
xchg
add
aam
jbe
adc
jl
adc
lods
inc
or
push
add
adc
push
add
adc
sahf
iret
lret
in
mov
jl
mov
sbb
sti
leave
andb
addr16
dec
xchg
addb
sbb
arpl
mov
aam
hlt
sub
mov
aas
inc
fldenv
lock
push
shlb
pusha
inc
cli
jnp
mov
outsl
lods
xor
inc
test
adc
sub
enter
fistl
xchg
sbb
adc
addr16
add
push
repz
add
in
imul
fisubrs
fcomps
ds
cwtl
pop
lea
cli
xorl
stos
push
or
push
mov
testl
pusha
cmpsl
mov
add
add
hlt
add
jb
sbb
int3
sbb
ljmp
movsb
fidivrs
fdivl
add
jae
addb
mov
or
pop
inc
ljmp
sbb
loope
jg
mov
lock
mov
subb
lcall
sub
sbb
adc
jne
adc
add
bound
mov
push
in
cmp
jae
dec
add
pushf
push
outsl
out
das
jns
add
movsb
inc
jge
popa
push
js
in
add
inc
arpl
shl
cmp
add
pop
test
sbb
xor
xchg
icebp
cmp
js
imul
pop
and
xor
jae
push
cmp
sti
jmp
roll
cmp
aam
mov
inc
sbb
or
sub
dec
xchg
test
mov
dec
mov
or
imul
andl
or
test
mov
or
mov
mov
mov
jno
mov
add
outsb
jnp
addb
stos
mov
add
cld
fs
jnp
loope
add
fucomi
xor
inc
jns
fisubrs
or
add
mov
les
cld
mov
jg
and
enter
or
leave
daa
imul
xchg
cmp
mov
lahf
jo
je
xor
and
inc
sub
dec
subb
jne
mov
xlat
dec
insl
add
or
push
mov
pusha
add
add
mov
je
add
rclb
lcall
inc
fsubrs
out
add
mov
je
icebp
fnstcw
add
mov
add
xchg
add
adc
add
shll
add
or
incb
bound
lock
and
sub
pop
ret
cmp
ss
push
inc
sahf
arpl
ds
mov
dec
mov
sub
mov
cs
push
addl
rorb
gs
add
and
mov
addps
repnz
sub
mov
push
rolb
pop
jmp
inc
mov
push
sarb
aad
data16
push
dec
scas
push
adc
sub
jns
adc
pop
mov
inc
dec
test
pop
add
cmp
inc
lock
test
sbb
jp
or
pop
inc
and
int
mov
push
stos
ror
inc
xor
sub
pusha
test
pop
outsl
ret
cmp
les
es
sbb
cmp
push
pop
inc
add
data16
mov
push
xor
jno
or
roll
ljmp
jge
stos
sub
punpckhbw
and
xor
or
and
xor
mov
lods
mov
pop
outsb
movups
xchg
stos
incl
mov
xchg
js
push
sbb
add
aam
mov
xlat
add
out
pusha
adc
out
imul
mov
add
push
rcr
add
sbb
inc
mov
adc
les
mov
test
inc
or
push
add
or
cld
add
jp
hlt
aaa
mov
jnp
push
aas
xchg
or
jecxz
add
sbb
dec
or
xor
adc
insb
les
jns
or
lods
arpl
add
inc
out
cltd
call
mov
dec
lods
add
xchg
pop
jp
push
rclb
ljmp
sti
imul
push
cli
aad
pop
mov
scas
and
or
jne
add
jmp
shlb
mov
cmpsb
xchg
and
push
mov
test
jg
dec
xor
xor
cmp
jp
mov
pop
in
xchg
push
shlb
and
sbb
incb
dec
popf
mov
ret
jbe
add
int
inc
add
inc
cmp
pushf
outsl
int3
dec
add
add
mov
adc
hlt
or
sub
out
cwtl
cmp
adc
shl
inc
inc
dec
test
and
pop
pop
add
dec
fildll
fs
scas
sub
fwait
or
shrl
inc
dec
mov
adc
mov
sub
add
inc
xor
jae
loop
loopne
xchg
cwtl
jge
add
dec
and
adc
sub
push
inc
sub
dec
add
and
sbb
mov
fs
add
or
fwait
jmp
cltd
jb
pusha
dec
jne
sub
mov
dec
cmp
fisttpl
shll
pusha
cmp
stos
mov
bts
or
jo
addb
stos
xchg
jg
repz
or
or
jg
add
adc
mov
fisubrl
add
sub
insb
dec
add
ficomps
add
inc
xor
mov
aaa
pop
fldenv
call
adc
fwait
cltd
or
idivl
lret
cmc
mov
xchg
jno
cmp
jnp
mov
and
fdiv
cmc
das
cld
add
pop
les
jns
pop
add
inc
or
mov
sbb
add
test
jno
add
mov
in
fnstsw
jo
orb
iret
sub
loopne
sbb
call
mov
andnps
or
sub
dec
mov
cli
bound
push
out
add
out
ret
and
cmp
adc
andb
popf
push
dec
add
fadds
lock
or
ret
lret
jnp
push
icebp
xor
push
xchg
push
pop
ret
pop
icebp
sub
je
and
inc
jne
bnd
add
or
dec
add
bound
in
cmp
scas
pushf
jnp
cmpb
lds
insb
mov
lods
addb
in
and
shl
daa
mov
adc
push
add
push
push
loopne
loopne
outsl
or
pop
pop
sub
rorl
mul
rcrb
daa
push
in
inc
jge
mov
cwtl
sbb
jo
fiaddl
add
inc
lock
adc
in
pop
in
rcr
rclb
scas
roll
sbb
jae
out
call
into
or
les
int
cmpsl
lahf
mov
fdivl
fbstp
mov
add
or
enter
sbb
xlat
xchg
popa
jae
sarb
ret
jb
insb
test
pop
lret
cmpsl
ss
mov
hlt
sub
adc
repz
cmp
pop
nop
mov
push
gs
sub
push
stos
mov
inc
pusha
nop
xor
scas
dec
add
sub
adc
mov
mov
adc
movsb
pop
out
xor
int3
xor
loopne
mov
dec
addr16
cmp
movsl
loop
sbb
jecxz
shl
call
insl
mov
add
shl
mov
cld
mov
inc
add
fwait
outsb
lock
ss
test
pop
int3
jb
add
pop
mov
push
les
sahf
push
nop
add
imul
sub
xor
aas
fdivl
add
ret
sbb
mov
loopne
mov
add
and
dec
out
ret
dec
push
pop
out
iret
sar
sbb
insb
cmp
arpl
jmp
add
mov
mov
xchg
js
call
or
ja
xchg
cwtl
add
cmp
pop
and
jne
dec
add
adc
rclb
pusha
sbb
movsl
cmpb
lahf
jae
add
sbb
dec
cmc
sub
or
add
inc
packuswb
loop
dec
andl
push
scas
lret
rolb
jo
add
pop
pusha
mov
mov
cltd
pop
mov
je
addr16
inc
add
in
push
and
jmp
inc
in
ljmp
add
inc
fnsave
add
mov
pop
lret
aaa
add
sbb
in
pushf
das
inc
add
push
jbe
cwtl
and
add
inc
je
add
aad
pop
add
mov
lret
and
fcomps
test
sarb
repz
add
mov
add
aad
mov
jecxz
pop
add
lea
add
mov
pop
pop
adc
lahf
mov
mov
xor
stos
mov
iret
and
add
shl
mov
pop
add
add
bound
add
push
sti
push
xor
jmp
add
sbb
sbb
mov
add
sbb
add
call
addr16
xor
xchg
leave
push
ror
rol
jle
outsl
out
cmc
es
insl
xor
lds
fstl
pop
xchg
cmp
adc
js
adc
add
inc
xlat
pop
rcl
adc
es
inc
addl
sahf
adc
in
lret
imul
pusha
insb
or
mov
jmp
sbb
push
test
or
mov
bound
xchg
or
data16
add
push
filds
mov
or
xor
lods
inc
in
test
arpl
jnp
std
daa
lcall
cld
inc
repnz
orl
jle
inc
das
inc
es
add
xchg
rol
add
add
cmp
sar
add
jmp
aam
repnz
push
cmp
lret
cmp
les
stos
sub
std
add
jmp
dec
add
je
sbb
xor
and
add
jmp
sub
dec
pop
jns
adc
shl
jo
or
jl
call
cmpl
xor
and
mov
imul
cld
pusha
jl
add
test
ret
rorl
js
jl
add
dec
pop
xchg
rcll
xchg
add
inc
inc
cmpsl
cmp
mov
inc
xchg
imul
or
cli
out
dec
add
rol
fdiv
add
scas
xor
jecxz
mov
dec
jne
add
in
sub
test
xorb
sub
clc
add
pop
testl
pop
push
mov
xchg
cmp
dec
push
sub
hlt
addr16
sub
hlt
jns
fsubl
sub
and
enter
divl
add
or
sub
cmp
or
ret
sbb
addr16
push
outsl
add
nop
inc
ljmp
sbb
mov
jp
add
add
push
adc
and
push
xor
aas
xchg
add
mov
shlb
or
loope
adc
xchg
aam
add
imul
xchg
cltd
rorl
mov
mov
pop
add
xchg
pop
imul
jns
adc
enter
mov
cmp
xchg
add
testl
stos
mov
inc
hlt
add
add
jl
or
add
fisubrl
rorb
xor
mov
mov
test
daa
add
mov
rorb
repnz
in
add
mov
add
mov
sbb
push
lret
and
add
sbb
loop
add
pop
cmp
aad
mov
pop
or
nop
pop
popf
xor
in
mov
rcr
jne
cmp
and
add
jg
jnp
les
adc
lahf
mov
add
aas
add
cmp
adc
xchg
jnp
push
int3
ret
adc
data16
xchg
test
ret
sub
dec
sub
push
pop
pop
jno
lret
scas
rcll
dec
xlat
add
cmpl
push
xchg
push
sahf
mov
aad
add
aas
fistpll
ja
mov
add
sbb
inc
xchg
outsl
lock
cmp
pop
dec
shrb
lret
cmp
and
sub
push
into
pop
cmp
add
push
pusha
push
and
add
add
movsb
lea
dec
sbb
bswap
fisubrs
loope
leave
pop
addr16
pop
mov
push
clc
jo
jmp
mov
orl
loope
dec
enter
add
dec
rorl
dec
pop
rolb
and
cmp
mov
js
mov
push
mov
nop
cmpsl
cmp
add
xchg
fmuls
jb
add
mov
dec
cmp
add
mov
loopne
jns
adc
movsl
inc
xor
mov
cmp
mov
lock
xchg
dec
jp
inc
je
std
cmp
test
cld
jb
scas
jle
xchg
sbb
mulb
leave
ror
cmp
inc
out
add
cmp
and
add
inc
sahf
addl
stos
imul
loopne
insl
xchg
add
loop
and
mov
jo
sbb
addr16
subb
pusha
iret
jg
test
cld
cmp
fildl
jecxz
outsl
ljmp
lock
fildl
add
out
aaa
mov
ss
add
jg
xchg
and
pop
jno
sub
stos
call
mov
inc
pop
xorl
add
mov
and
mov
cmpsb
sbb
testl
clc
mov
push
out
int3
add
jo
inc
shll
mov
imul
ret
lock
add
cli
mov
out
pop
orb
adc
pcmpgtw
filds
mov
xchg
in
push
add
mov
jne
add
cmp
pop
sub
out
nop
shrl
add
mov
jb
jp
shlb
add
lods
fcoms
add
cmp
fidivs
pusha
imul
mov
div
add
xor
lret
ja
daa
pop
add
loope
rol
das
imul
push
xchg
clc
jmp
lea
pop
aam
nop
mov
inc
lret
enter
and
rorb
adc
add
aas
jb
add
mov
out
push
int
and
push
sahf
int3
fwait
loopne
lahf
iret
push
ficoml
mov
mov
mov
add
lea
mov
xor
and
push
jmp
add
jbe
data16
push
pushf
dec
add
mov
andb
jmp
in
sbb
sbb
xor
enter
add
lds
xor
pop
add
mov
cmp
xlat
mov
xor
push
cmpsl
sbb
jecxz
aad
negl
add
push
add
fsub
ficompl
push
or
xor
xchg
add
leave
xlat
pop
sbb
add
pop
aad
mov
dec
ss
mov
movsl
mov
enter
lock
sub
mov
rcll
jmp
or
mov
lods
push
ror
xchg
add
pop
mov
shll
cmp
push
mov
movsl
and
jb
jp
shlb
je
add
or
or
es
dec
add
xor
mov
shlb
xor
inc
push
add
inc
hlt
jp
in
add
add
idivl
adc
mov
add
xor
cli
adc
dec
xorb
ds
adc
xor
inc
add
mov
push
pop
movsb
scas
inc
repnz
mov
loope
icebp
add
inc
add
sub
push
cmp
dec
xorb
jb
add
shll
add
adc
negb
sub
dec
stos
adc
loop
cmovs
add
adc
sti
adc
jnp
add
and
xor
inc
mov
and
insl
mov
int
repnz
mov
rol
loop
adc
dec
mov
jl
pushf
fmuls
in
addb
jne
fisttps
mov
jnp
pop
add
xchg
push
test
inc
add
add
aam
fidivrl
lock
call
add
cmp
adc
fcmovb
faddl
mov
add
negl
dec
fsubr
mov
imul
ja
sbb
imul
daa
inc
dec
in
nop
sub
push
adc
and
iret
sbbb
inc
hlt
inc
add
jb
fdivrl
fiaddl
mov
pop
nop
add
push
xchg
out
mov
inc
decb
sbb
dec
cmp
adc
mov
mov
ss
in
dec
jge
or
rcll
sbb
pop
scas
not
add
jecxz
xor
pop
je
and
sbb
test
adcl
in
arpl
push
aas
add
les
hlt
add
pop
pop
testb
and
mov
mov
adc
sbb
mov
pusha
or
inc
bound
mov
mov
and
mov
jo
pop
out
mov
mov
mov
cmp
add
imul
inc
cltd
les
orl
add
shll
pop
sarl
cmp
push
out
mov
jge
fsub
lods
add
test
add
jne
decl
bound
addl
aad
sarb
inc
xlat
sarl
daa
cmp
sbbb
inc
fwait
stos
imul
hlt
fistpl
scas
add
xchg
add
in
nop
loop
jle
and
jnp
call
ret
add
mov
pop
flds
xchg
clc
mov
cmp
sub
pushf
add
mov
in
add
jle
xchg
add
pop
ss
or
in
jnp
cmp
shlb
psubd
mov
sbbl
sbb
sti
add
mov
pop
xchg
push
xorb
mov
cltd
rcrb
pop
xorb
jg
cmp
in
add
push
mov
add
cmp
lock
sbbl
shrb
push
lock
and
xor
xchg
push
gs
add
mov
icebp
push
xor
xor
outsb
andb
adc
adcb
or
xchg
mov
mov
std
popl
out
add
fcmovne
rcrb
ss
daa
aaa
sahf
and
dec
add
lea
push
mov
mov
mov
int
cmp
xchg
shrl
je
cmp
add
cmc
mov
pop
and
adc
push
mov
jbe
jno
xchg
dec
dec
add
pusha
lcall
cld
sbb
mov
aas
push
jae
add
push
scas
or
pop
mov
inc
mov
orl
popa
stos
add
mov
mov
mov
mov
cwtl
lods
cmp
mov
cmp
out
add
cmpsb
push
enter
subb
cmp
mov
leave
mov
das
arpl
call
call
jge
add
fiadds
adc
jno
stos
jns
ds
scas
xorb
lock
pop
mov
xchg
lods
add
cwtl
cmp
jb
add
dec
andb
push
mov
mov
mov
sub
and
iret
add
add
or
add
xor
je
pop
dec
leave
add
popa
cld
arpl
and
test
das
push
rorl
jmp
mov
push
and
ja
add
stc
mov
mov
and
xchg
mov
daa
arpl
aam
push
inc
dec
jbe
sub
imul
ljmp
mov
sbb
mov
loopne
mov
add
call
add
aaa
dec
inc
pop
test
xor
xchg
std
and
add
mov
adc
pop
add
loope
pusha
or
lahf
fdivs
add
xchg
mov
orb
jmp
call
add
sub
mov
jmp
xor
pop
mov
mov
gs
push
and
aam
adc
mov
or
les
push
das
mov
pop
stos
add
fs
sbb
fisttpl
pop
push
ja
jnp
cwtl
jmp
mov
aaa
pop
cmp
imul
imul
mov
sbb
testb
pop
repz
in
add
or
popa
sahf
rorl
dec
pop
lret
add
adc
add
leave
jmp
mov
fsubrp
jb
cmpsl
pop
add
sti
test
ret
ficoml
subb
dec
icebp
roll
xor
es
push
and
sub
and
add
sbb
cmp
push
mov
dec
fisttps
pushf
xchg
add
jo
add
fdivrl
add
sbb
cmpsb
adcl
stos
dec
addb
jge
xor
adc
lea
cwtl
sbb
ss
and
mov
movsb
faddl
rolb
or
jmp
jbe
cs
dec
xchg
add
popa
je
add
xchg
mov
jae
jp
js
add
fmuls
dec
daa
pusha
push
add
or
sbb
cmp
das
std
jbe
mov
dec
fs
inc
lods
stc
add
push
or
mov
fcoml
xlat
dec
xchg
mov
push
mov
in
add
jno
sub
rcr
sub
xchg
cwtl
add
cs
and
cmp
movsb
add
sbb
mov
lods
enter
adc
and
pop
js
lret
into
pop
shlb
cvtpi2ps
popa
add
add
and
lds
xchg
cli
and
add
dec
jbe
adc
outsb
movsl
add
rcrl
cmpsb
js
add
sbb
add
icebp
mov
loope
in
jnp
mov
ret
scas
cmpsl
push
das
or
add
sbb
jle
mov
lds
scas
lcall
sbb
pop
fwait
addl
dec
ficompl
mov
scas
dec
sbb
adc
push
cmp
push
pusha
xchg
popa
add
inc
outsl
lea
cmp
insb
nop
test
add
sbb
cmpsb
pop
shll
fsubrl
outsl
mov
pop
jns
push
daa
mov
sarb
inc
fiaddl
lock
or
add
ss
jmp
mov
add
subl
xchg
pop
mov
sub
jg
add
xorb
jno
mov
jmp
mov
xor
nop
pop
lods
mov
xor
sub
lock
or
cwtl
int3
push
xor
sub
adc
add
add
dec
jmp
adc
mov
add
sub
inc
sbb
ja
xor
xor
jb
sti
xor
clc
add
and
xchg
dec
mov
jb
scas
gs
mov
lods
aad
scas
cli
pop
xor
ss
add
rcrl
cmp
mov
add
dec
xchg
leave
rolb
inc
and
rorb
std
lret
jecxz
shll
repnz
jg
cmp
mov
or
sub
or
inc
shr
shrb
enter
push
mov
cmp
nop
mov
xchg
mov
mov
add
mov
jp
push
adc
mov
loop
jb
bnd
scas
cmp
in
nop
filds
mov
repz
add
sub
jp
inc
shll
adc
add
adc
rclb
pop
loope
add
mov
addl
or
ds
adc
add
mov
push
repnz
jb
add
mov
lea
mov
and
aaa
les
mov
and
lea
xchg
dec
add
jbe
mov
mov
in
or
mov
nop
repz
cli
scas
xchg
mov
dec
pop
jae
or
mov
pop
mov
arpl
leave
imulb
in
mov
fmuls
es
lods
ret
and
mov
imul
add
cltd
sbb
inc
xchg
add
insb
mov
mov
mov
or
loop
dec
add
cwtl
pop
xor
jae
fst
in
pop
jmp
jno
mov
les
xor
aas
out
sbb
xchg
sub
inc
add
add
enter
mov
test
sbbb
lods
mov
aad
sub
sbb
shll
mov
out
add
inc
inc
stos
movsb
pop
adc
mov
add
mov
jb
insb
sub
mov
xchg
sub
aas
fstps
subb
test
aas
bound
jne
dec
push
jns
add
cli
movsl
ljmp
sti
subb
das
add
jp
lock
xchg
leave
jmp
or
minps
or
andb
push
insb
int3
movsl
jg
icebp
iret
fadds
dec
add
inc
mov
jbe
rolb
ret
mov
xor
sbb
fsub
xchg
movsl
jle
add
mov
mov
into
in
add
xor
nop
pop
xor
jnp
clc
mov
bound
push
shl
imul
pop
add
filds
or
cltd
push
sub
sbb
fstl
dec
add
imul
pop
mov
nop
pop
insb
jns
andps
jl
mov
out
pmuludq
dec
pushf
mov
je
cmp
cmp
cmp
cmp
push
add
mov
repnz
mov
sbbb
add
xchg
pop
repnz
shll
adc
pop
adc
jmp
or
call
jl
test
hlt
mov
rcrb
and
push
ljmp
adc
arpl
lods
daa
rorl
add
mov
movsb
cmp
in
add
xor
add
loope
sahf
in
outsl
dec
add
cwtl
dec
adc
mov
mov
sahf
lock
sub
add
or
shll
aaa
pushf
add
insb
sti
dec
clc
mov
bound
adc
add
xchg
mov
mov
xchg
jb
mov
mov
mov
subl
inc
cmp
add
push
push
fcoml
and
and
sbb
lcall
loopne
repnz
push
push
lahf
add
push
mov
fildl
or
add
jb
mov
ds
xchg
imul
add
dec
mov
and
jo
xchg
shll
int3
in
or
add
imul
stc
cmpsl
jecxz
xchg
jl
pop
sub
xchg
inc
sarb
inc
ljmp
aad
aas
jb
pop
sub
imul
add
push
dec
jle
jb
add
push
or
add
cmpl
ret
lods
and
xchg
mov
fcmovnbe
cld
mov
das
add
movb
sub
pop
sbb
icebp
lea
mov
dec
pusha
data16
push
push
shll
shrb
jp
pop
cmp
sub
xorb
dec
jns
add
fadd
push
jns
scas
xor
mov
xor
insb
jno
out
cmp
mov
shrl
or
mov
add
push
dec
stos
pusha
lahf
xchg
movsb
add
pop
call
inc
jb
cmpsb
mov
cmp
and
mov
popa
push
pop
add
in
cmp
shr
xchg
xabort
add
mov
mov
mov
add
cli
pop
repz
pusha
mov
sbb
and
fisttpl
push
xor
cmp
subb
inc
mov
outsl
stc
adc
sub
add
test
sub
movsl
add
pop
loop
xchg
rcr
mov
aas
jl
mov
add
mov
stos
pop
add
cmp
int3
fiaddl
jg
dec
push
lock
push
add
call
sbb
push
aad
andl
add
enter
mov
lea
sub
cmpsb
jge
sbb
xchg
incb
rolb
out
push
in
dec
movsl
add
cmpsb
stos
inc
adc
mov
push
inc
inc
xchg
test
cltd
movsl
js
pop
cmp
mov
sbb
and
adc
out
add
add
jo
xchg
add
cli
lret
fistps
cmp
cmpsb
add
out
xchg
add
jo
cmpsl
pop
cmp
in
mov
bound
push
or
scas
cmp
call
sbb
repz
pusha
mov
add
cmovnp
aaa
popf
iret
jb
inc
xor
cmp
add
ljmp
add
push
or
fmull
cli
imul
adcb
mov
push
popa
add
xor
add
jecxz
fwait
pusha
dec
int
repz
sub
push
xchg
dec
pcmpeqb
or
cwtl
clc
xchg
mov
xor
mov
inc
sti
cmp
fadds
mov
add
jae
jnp
cmp
fiaddl
fisubrs
xor
mov
add
ljmp
popf
adc
sbb
sub
push
push
xchg
adc
wrmsr
clc
add
push
sahf
pop
aam
out
cmp
loope
sbb
xchg
add
addb
mov
push
cmpps
cs
add
sub
dec
lret
mov
xor
ficompl
mov
push
pop
inc
push
fstpt
jae
mov
dec
lods
cld
xor
movsb
mov
call
rclb
jo
sub
add
nop
int
loope
ltr
rorl
xor
xchg
aaa
insb
jbe
add
fsubl
rolb
test
int3
jbe
mov
lods
pop
xchg
cmp
enter
adc
mov
push
jmp
sbb
in
pop
iret
imul
xor
mov
sbbb
into
mov
cld
mov
add
jmp
das
jno
addb
cmp
rolb
push
call
addr16
and
jae
sbb
jge
aam
jp
xchg
push
lcall
addr16
sbb
subl
aam
xchg
pusha
inc
jns
or
outsb
scas
ds
bound
or
pop
cmp
xor
rcll
adc
add
repnz
and
mov
int
fstpt
xor
jg
shrl
cmp
fbstp
out
lock
add
cmp
push
addl
dec
push
and
add
in
push
mov
test
addr16
push
sbb
add
xor
test
call
fcmovnu
xor
mov
cmc
jns
insl
add
cld
or
ljmp
sbb
fmul
stc
loopne
mov
cmp
test
cmp
sub
jb
mov
in
mov
xchg
pop
mull
sub
dec
xchg
push
add
xor
add
scas
fsubl
aad
mov
cltd
jle
clc
push
inc
cli
mov
dec
nop
fsub
mov
movsl
add
jno
and
inc
decb
mov
mov
pop
xchg
sbb
addr16
push
push
and
leave
mov
xorl
lret
adc
add
xchg
adc
push
inc
jno
lock
nop
cmp
lcall
in
shll
es
arpl
or
dec
call
dec
inc
add
push
mov
out
addr16
rorb
mov
cmp
int3
repz
call
xor
arpl
push
in
loopne
add
inc
jmp
add
mov
xor
out
mov
jmp
mov
sub
lahf
addr16
popa
cmc
movsl
adc
aaa
les
mulb
pminsw
in
add
sti
mov
inc
add
divb
push
jge
add
mov
clc
lret
sbb
xor
jge
mov
or
lea
push
add
nop
or
mov
mov
hlt
sub
ret
ja
lock
inc
cmp
and
mov
mov
fcomp
jecxz
jne
sub
popf
ja
call
loope
stc
add
stos
inc
push
sahf
pop
inc
enter
xchg
lret
or
inc
xchg
xlat
and
js
sub
lock
add
xor
add
outsl
inc
push
leave
mov
jne
jae
addr16
repz
jo
cmp
sub
adc
loopne
add
push
sub
lods
gs
push
push
fnstsw
adc
cmp
jb
lret
jmp
shl
jp
in
sbbb
clc
js
add
lcall
cltd
jp
cmp
pop
mov
mov
lcall
test
orb
dec
sub
aaa
mov
insb
cmp
add
cwtl
inc
mov
and
arpl
pusha
fwait
pusha
and
or
pop
out
sbb
push
daa
mov
cmp
add
in
lea
decl
cmpsl
movsl
arpl
cmp
shl
mov
mov
popa
xchg
movl
lods
or
rclb
popf
jae
add
xor
cmp
add
push
cmp
ror
mov
push
sahf
sub
lahf
mov
xor
add
subb
es
sbb
mov
inc
imul
nop
and
inc
cmc
pop
fwait
sti
mov
andl
mov
add
dec
xor
pop
xchg
add
dec
daa
dec
jl
mov
and
rcrb
ret
xorl
daa
lds
sub
or
xchg
rorl
shlb
test
add
jge
out
les
sbb
jmp
add
mov
mov
test
lret
ficoml
lds
jmp
jle
sti
cmp
outsl
mov
sbb
xchg
aas
iret
adc
int3
pop
xor
lcall
fdivrs
adcl
lods
add
push
cs
lods
stos
add
sub
lods
sub
int3
pop
jno
inc
lock
divl
dec
rcrb
sbb
mov
add
mov
pop
std
lret
add
inc
rclb
push
cmp
pusha
mov
dec
add
stos
negl
out
and
xchg
lods
sbb
add
inc
iret
aam
mov
jo
mov
inc
mov
fcmovu
pop
add
lret
bound
popa
add
push
or
add
dec
sub
nop
sbb
aaa
and
sbb
sahf
in
jecxz
add
scas
add
sbb
mov
push
sti
je
setge
push
mov
pop
pop
xchg
bound
mov
pop
ret
mov
shlb
add
out
mov
in
shlb
add
fcoml
mov
and
and
add
dec
adc
and
pop
das
enter
mov
inc
adc
and
add
sbb
lea
mov
xchg
or
sub
and
pop
jl
in
fldt
sbb
iret
jp
int3
shll
sarb
mov
push
movsb
adc
loopne
lock
sbb
sbbb
add
pop
sahf
adc
mov
xor
mov
and
xor
push
mov
mov
push
sbb
adc
subb
arpl
inc
shll
jmp
lret
loop
add
xor
sub
in
sbb
add
dec
ror
jae
test
fbstp
mov
and
xor
imul
dec
lock
mov
jns
fidivrl
sub
mov
fists
outsl
icebp
ja
xchg
or
shll
mov
lods
rolb
js
mov
cmp
xchg
push
sbb
test
mov
scas
adcl
inc
mov
add
mov
cmp
push
cld
jb
out
sbb
movsb
and
stos
add
les
ss
xor
sarl
data16
dec
fimuls
lods
filds
inc
es
mov
add
dec
test
orl
and
ficomps
ljmp
jns
pop
add
cmpsl
pop
sbb
testb
je
add
xchg
add
pop
divl
cmp
addl
in
xor
adc
cmc
add
sbb
sti
js
lea
test
and
add
mov
mov
call
add
ja
cmp
push
repnz
pop
mov
and
lret
xchg
inc
mov
mov
jns
call
sbb
loop
xchg
popf
mov
in
leave
loope
hlt
and
add
aam
outsb
divl
mov
pop
int3
jmp
iret
add
push
pop
and
xchg
and
pop
lock
je
ja
sbb
bound
in
add
ljmp
test
cmpsb
push
push
in
ror
ja
mov
or
outsl
push
jbe
fldenv
mul
add
icebp
cwtl
mov
fldenv
xchg
cmp
call
and
das
ljmp
ja
sarl
sbbl
iret
and
fs
add
xchg
fldt
or
rolb
lds
mov
popa
cmp
adc
sbb
cld
xor
adc
push
clc
idivb
pop
dec
mov
addr16
sbb
roll
pop
fwait
cmp
into
nop
aam
push
js
les
push
arpl
in
add
mov
pop
lea
or
lea
ret
lods
pop
and
test
lret
mov
repz
cs
leave
lea
lsl
popa
ret
loop
stos
sub
jo
push
rorb
ds
repz
insb
dec
add
sbb
aad
add
cmp
mov
lcall
inc
bound
ret
sbbl
jmp
add
and
pop
mov
or
iret
hlt
xchg
and
push
fisttpl
ss
pop
fisttpll
cwtl
cwtl
and
or
add
scas
add
packssdw
nop
andb
jmp
cmp
lret
push
jo
shll
xchg
dec
inc
cli
pusha
pop
lods
mov
add
sbb
pop
add
call
mov
cwtl
jno
fdivs
mov
add
js,pn
icebp
push
sbb
xor
dec
lcall
imulb
cmp
aam
vmwrite
inc
in
xor
add
push
addb
adc
cmp
sbb
outsb
jmp
mulb
cmc
mov
repnz
sbbb
adc
faddl
push
sbb
mov
and
mov
push
pop
data16
mov
subl
push
jns
ror
add
dec
pop
pusha
sbb
xchg
sbb
popa
push
sbb
mov
pop
push
xchg
cwtl
inc
in
adcb
xor
fisttpll
fmull
pop
xlat
hlt
ss
add
mov
adc
je
cmp
repnz
rcr
shlb
push
xor
add
adcb
adc
fidivrl
pusha
loop
pop
fimuls
jge
push
pop
movsl
and
mov
ret
rclb
out
xchg
add
lds
pop
ss
icebp
xor
lcall
subb
mov
push
add
jg
mov
inc
sbb
add
test
adc
cmp
filds
or
xchg
inc
hlt
push
jle
jl
lret
repz
and
adc
stos
cmp
mov
out
inc
push
jnp
stos
repnz
or
test
fcmovnb
lods
push
imul
sub
or
sub
push
sahf
loope
xor
jns
sbb
cmp
pusha
insl
mov
or
lods
sbb
push
mov
xchg
cwtl
js
ficomps
stos
adc
fdiv
lods
loopne
gs
pop
add
call
inc
clc
sti
push
pusha
xor
or
enter
fists
jle
sbb
out
sub
add
cmp
cld
add
das
xlat
xorb
sbb
sar
jno
cli
fucomp
pop
roll
shlb
cmp
movsw
scas
mov
pop
mov
nop
fnclex
mov
jg
add
shrb
cmp
add
dec
decb
imul
xchg
es
xor
add
cmp
inc
in
mov
lcall
pop
jnp
mov
aaa
rclb
orb
out
mov
xor
js
mov
cmp
aas
xor
and
pop
cmpb
sbb
jne
pushaw
pminsw
aas
xchg
int3
lds
add
test
sbb
fcoms
cmp
lds
xor
or
mov
and
fwait
nop
cltd
mov
add
cmp
enter
xchg
add
movsl
adc
cld
xor
jmp
scas
xor
inc
mov
cld
into
adc
xchg
lahf
mov
cmp
das
xchg
sbb
ljmp
jge
sbb
shrb
lods
add
cli
fcoml
mov
rorl
pop
out
mov
mov
cmp
mov
mov
mov
cmp
mov
pop
inc
push
fmull
add
lret
jge
dec
mov
dec
cmpl
push
bound
leave
cmpsl
dec
xchg
out
mov
xor
add
loopne
dec
push
mov
add
das
add
add
daa
dec
inc
rclb
mov
jae
add
mov
fwait
add
mov
and
inc
mov
stos
push
imul
dec
pop
test
sbb
pop
mov
testl
icebp
push
jge
fld
sbb
cltd
cmpl
push
lcall
dec
pop
sbb
rcll
sar
cmp
inc
push
pop
or
push
mov
fwait
push
enter
or
jl
add
popf
push
in
add
js
mov
adc
int
in
clc
jno
sub
mov
sti
mov
cmp
cld
aas
mov
shl
inc
test
mov
pop
cmp
xor
lock
cmp
ret
mov
inc
xchg
sub
push
sarl
insb
cmc
inc
pop
int3
and
idiv
inc
sbbb
sbb
mov
mov
pushf
rcl
out
jns
add
push
add
lret
stos
sbb
fimull
sbb
stos
and
int
cmpsb
ja
nop
dec
notl
mov
mov
rclb
jecxz
mov
lock
jnp
xor
mov
fwait
jp
sbb
add
add
xchg
pop
mov
inc
repnz
add
push
dec
push
cmp
inc
lret
dec
push
add
lea
inc
inc
adc
insw
cmp
add
scas
push
cmp
xchg
xor
jmp
add
outsl
sub
call
or
and
push
bound
sub
pop
sbb
and
xor
xchg
lcall
or
je
push
pop
pushf
insb
clc
adc
scas
aam
test
and
inc
nop
nop
lods
addb
test
into
mov
out
push
push
hlt
adc
mov
mov
popf
add
ds
add
data16
and
cmp
add
or
frstor
lods
imul
sbb
push
int3
popf
out
cs
sbb
add
in
dec
mov
cld
repnz
dec
cmpl
sbb
iret
xlat
popf
push
sub
add
or
xchg
mov
or
mov
jbe
add
and
andl
mov
in
ja
pop
andb
test
jg
sbbl
in
addr16
adc
sbb
bound
aaa
push
xchg
inc
mov
cmc
fists
fsubp
dec
inc
enter
pop
roll
xor
lahf
stos
icebp
adc
sub
cmp
or
divl
mov
leave
sbb
jae
push
clc
xchg
ret
mov
add
fwait
mov
push
jg
dec
lods
pusha
jge
mov
enter
daa
lret
cmp
roll
mov
push
add
das
cmp
inc
scas
mov
scas
add
xor
push
adc
xor
mov
xchg
ljmp
mov
cmpsl
push
xchg
add
pop
shlb
iret
imul
jnp
mov
loopne
sahf
lahf
xchg
cmp
addl
daa
push
std
cmpsl
mov
lods
mov
nop
cld
mov
mov
insb
jne
in
dec
sbb
add
pop
add
mov
mov
fldcw
jge
xor
jb
pop
push
mov
sub
popa
adc
push
or
mov
and
xor
push
inc
xchg
pop
inc
jns
pop
jl
jns
push
and
and
test
sub
or
pop
sub
adc
incl
xchg
push
adc
inc
jno
inc
popa
mov
add
mov
xor
sbb
or
outsb
cltd
xchg
mov
sbb
popa
sbb
mov
das
imul
add
jge
loope
out
sbb
or
adc
mov
outsl
adcb
movsl
add
pop
push
loope
dec
ja
hlt
xchg
add
mov
xor
jg
or
jnp
add
dec
fmuls
pop
cmp
popf
shrb
add
push
or
push
test
add
cmpsb
mov
push
cmc
imul
scas
add
xchg
add
nop
sarb
das
mov
neg
pusha
sbb
sub
sbb
loop
je
add
pop
dec
cmc
sarl
std
inc
pop
add
mov
mov
sub
add
push
mov
cmp
ja
xchg
jo
in
stos
add
sarb
lcall
aaa
shrb
lret
movsl
cmpl
add
sahf
adc
pop
push
aam
mov
and
adcb
sub
jecxz
hlt
ja
or
andb
movd
pop
xchg
and
lods
add
jp
add
test
add
mull
inc
fucomp
sbb
stos
mov
add
push
adc
xchg
addl
adc
add
xchg
xor
cwtl
mov
das
data16
imul
add
lea
mov
add
push
add
andb
and
dec
in
mov
adc
mov
cmp
jbe
popf
inc
mov
push
adc
je
enter
arpl
inc
dec
add
in
push
loopne
mov
stc
aaa
sub
insb
stos
cmp
mov
repz
and
roll
fst
gs
sbb
mov
dec
loopne
cmp
inc
subb
pop
jo
lea
pusha
inc
and
ret
add
mov
pop
xchg
and
lods
lods
arpl
ret
sbb
call
add
test
pop
cmp
add
aad
fnstsw
shlb
inc
stos
sub
push
xchg
sub
jae
push
jb
sbb
jo
xchg
xchg
in
or
dec
pop
daa
ljmp
xchg
ss
repz
add
mov
fwait
je
fcompp
loopne
and
add
push
into
mov
aas
or
add
add
fs
xchg
sbb
mov
imul
jge
daa
inc
popf
icebp
xchg
jp
out
rcrb
lods
test
decb
sub
dec
sbb
lcall
fadds
dec
repz
add
dec
mov
jg
jmp
xchg
sbb
cmp
jg
int
out
stc
arpl
add
and
je
data16
mov
adc
fwait
mov
pop
add
bound
or
xor
sbb
punpckhdq
cwtl
and
xorb
in
insl
mov
dec
xor
add
movsb
int
jno
add
add
je
int3
add
add
mov
pop
repnz
jne
ss
test
fiaddl
dec
lea
adc
cmpsl
jl
enter
mov
cmp
fdiv
xchg
sbb
cli
sub
and
push
enter
jo
rolb
sahf
ja
pop
cltd
stos
popa
push
mov
xchg
daa
test
dec
pop
sub
jne
test
push
push
jae
or
push
jp
add
inc
cmp
add
mov
xlat
lock
pop
movsb
dec
sbb
cmc
add
loop
xchg
in
add
jno
jbe
cmpsb
test
dec
push
dec
dec
adcl
mull
jo
sub
xor
cmc
sbb
add
das
pop
jbe,pt
hlt
add
add
popf
jb
icebp
xchg
add
cmp
xchg
jae
clc
sub
add
sbb
fwait
pusha
mov
jb
add
sbb
test
dec
out
loopne
jge
roll
jp
adc
cmp
add
sub
test
pop
rolb
movsb
aaa
xchg
jmp
call
jne
ret
rolb
ja
sbbb
bound
xchg
call
loop
mov
and
sahf
pop
test
add
and
add
repnz
pop
mov
icebp
add
push
push
dec
inc
xchg
dec
jmp
add
jae
mov
add
popa
cld
insb
stos
clc
add
aad
stc
push
addl
xchg
gs
pop
jg
adc
inc
mov
adc
fstpl
out
add
addr16
add
dec
jbe
popa
adc
in
jo
subb
fwait
add
call
dec
imul
and
jmp
ljmp
push
push
pop
pusha
addl
jb
lea
sbb
mov
cmpsl
add
xor
add
nop
stc
add
mov
adc
add
xchg
out
xlat
mov
add
js
aas
add
mov
mov
sub
mov
pop
pushf
mov
inc
sbb
add
jbe
roll
push
pushf
in
imul
js
call
enter
lods
movsb
ret
xchg
or
enter
fnstcw
aaa
sbbl
fsubrl
add
das
inc
ljmp
loop
sbb
dec
int
daa
dec
sbbb
push
xor
jns
jl
fsubrs
test
push
fwait
mov
inc
fildll
jo
in
pop
ret
adcb
xchg
sub
inc
je
mov
cltd
jno
add
or
cld
lahf
test
add
mov
add
mov
and
push
pop
lock
push
push
adc
dec
inc
in
int
cmp
fstl
add
add
mov
dec
add
sub
enter
dec
mov
loope
jl
add
pop
and
sbb
mov
aas
mov
adc
fmuls
pop
or
mov
clc
insb
jns
filds
aam
pop
fwait
jg
jnp
aas
test
xor
dec
pop
mov
out
aam
push
sub
lahf
call
test
enter
loopne
sbb
adc
add
ss
mov
mov
bound
movsb
aad
add
insl
jbe
leave
jne
in
and
jl
sub
lcall
xor
push
mov
pop
shl
mov
fldt
hlt
jp
jbe
andb
mov
push
pop
das
pop
pop
jmp
lock
mov
sub
inc
add
add
mov
out
sbb
add
pushf
xchg
popa
fucomp
cmp
xor
add
xchg
jb
add
cmp
orl
cmp
shll
jecxz
and
add
ret
inc
jo
fs
test
or
jmp
enter
add
jg
outsb
jecxz
adc
add
les
sbb
xchg
aam
shrl
in
ss
pop
mov
adc
jae
sub
lock
mov
cmp
cltd
dec
push
add
ds
jl
bound
lods
add
rcrb
xor
aas
mov
add
aam
jbe
fistl
mov
or
mov
sbb
mov
loopne
addb
mov
lock
xor
lret
js
add
mov
enter
add
roll
mov
arpl
push
push
or
jae
orb
push
add
data16
dec
pop
rorb
sbb
mov
imul
aad
ljmp
pop
dec
fiadds
xor
dec
add
cmpsl
idivb
add
dec
arpl
iret
jb
jne
add
and
ret
add
xchg
clc
pop
pop
out
add
stc
call
aas
fcomi
cld
ss
cmc
aam
mov
inc
xor
push
in
ficomps
cmpps
pop
lcall
xchg
std
inc
scas
and
movsb
repnz
hlt
add
adc
xor
sub
fisttpl
add
add
lcall
add
xchg
lock
jae
jns
aam
pusha
mov
add
test
xor
jnp
add
addr16
enter
dec
adc
push
stos
dec
stos
sti
sbb
mov
jo
iret
push
add
xchg
outsl
jne
out
add
stos
sub
and
lahf
mov
add
mov
data16
adc
call
arpl
js
xchg
imul
mov
add
push
cmpb
sbb
lods
xchg
adc
mov
aaa
xchg
push
mov
pusha
sbb
sbb
jno
pusha
call
add
lds
add
jo
repnz
es
jg
add
pop
stos
mov
rcll
cltd
sahf
mov
gs
add
stc
sub
jbe
push
mov
loope
aad
add
loop
scas
sbb
incl
in
mov
out
pop
imul
cmp
jbe
loopne
jmp
mov
xorb
bnd
ljmp
stos
pop
fimuls
sub
fisttps
repnz
add
mov
jo
add
repnz
cmp
add
cmpsl
lock
mov
data16
xchg
add
add
fwait
ds
add
mov
sbbb
ret
push
rcl
dec
fidivs
repnz
outsl
and
lds
stos
aas
inc
sub
add
int
jg
dec
and
sbb
pop
outsl
xor
icebp
push
mov
addr16
rorb
or
push
cmp
test
adc
push
xchg
aad
aas
fs
push
and
xor
lahf
push
dec
inc
push
mov
jg
jo
jecxz
fnstcw
jge
movsb
adc
sahf
pop
scas
add
fwait
or
loopne
sub
and
decl
xchg
sub
movsl
add
shrl
xor
pop
iret
cmp
pop
icebp
jnp
sub
lock
jns
or
jge
clc
mov
in
imul
stos
shl
mov
leave
add
and
xchg
mov
test
ds
or
pop
mov
scas
mov
mov
add
cmp
jae
mov
jb
repz
xchg
add
cmp
push
sarb
jecxz
push
mov
cvtps2pi
loop
mov
xor
dec
jp
out
mov
push
cmp
inc
cltd
jae
add
inc
xor
add
cmp
sbb
das
lahf
mov
out
popf
insl
add
lds
leave
xchg
dec
add
add
mov
dec
mov
mov
out
push
dec
sub
push
xchg
add
mov
adc
in
out
jl
or
lcall
ds
push
add
add
xchg
sub
add
add
shl
dec
popa
adc
daa
jle
ret
inc
mov
fildl
ret
in
shlb
repnz
out
sahf
js
testb
mov
sub
inc
test
or
es
inc
pusha
add
sub
dec
inc
mov
lcall
adc
mov
push
xchg
sbb
xor
pop
mov
dec
out
add
or
xchg
xchg
sbb
insl
dec
push
rcr
push
inc
movsb
cld
js
mov
adc
or
or
inc
popf
leave
cld
add
push
and
icebp
and
aas
mov
incb
push
adc
cmp
in
pusha
push
insb
add
shl
add
mov
movlps
lods
cmp
dec
and
pop
das
adc
inc
scas
jnp
jge
jbe
sub
dec
sub
clc
mov
dec
add
dec
rorb
xchg
or
int
sub
aad
fdivs
cmp
mov
sbb
punpcklbw
cltd
fdivl
add
pushf
mov
push
fbstp
xor
add
in
and
xchg
push
and
add
ds
mov
fiaddl
stos
add
popa
js
xchg
cmp
add
lret
sbb
loop
and
out
dec
ret
add
mov
pusha
cmp
dec
push
pop
pop
faddl
dec
aas
xor
add
mov
xchg
add
lret
sbb
xchg
out
shrb
pop
gs
pusha
jnp
push
ljmp
jp
push
ljmp
xor
test
pop
cmpb
je
pop
mov
dec
sub
test
ja
clc
add
cmp
rcrl
cmp
push
adcb
and
lret
lock
add
and
cmp
in
fwait
xor
cmpsl
sbb
or
and
inc
jb
test
add
and
pop
nop
idivl
sbb
mov
add
jbe
in
repnz
add
insb
dec
sahf
loopne
add
inc
aad
daa
loope
mov
fwait
lahf
xchg
add
leave
pop
jg
repnz
ret
add
loop
dec
cmp
add
bound
in
out
pushf
cwtl
fcoms
add
repnz
dec
fiadds
shl
inc
mov
mov
repnz
push
scas
out
ret
sahf
xor
subb
add
pop
insb
hlt
movl
and
outsl
add
shll
arpl
sub
inc
sub
pop
test
insb
fdivs
add
xchg
mov
bnd
cmp
lods
jnp
adc
inc
aad
xchg
movsb
imul
add
mov
push
push
jns
sbbb
fsubrp
mov
mov
mov
orb
push
mov
sub
incb
xor
pop
jo
lods
add
sarl
add
fildl
movsl
cltd
dec
jo
add
lea
jecxz
add
fdivrl
lods
add
mov
cld
mov
mov
add
dec
mov
jl
jl
pop
pop
pop
rcll
je
xchg
jle
add
loopne
hlt
add
sbb
push
add
insb
jae
lock
icebp
enter
inc
dec
faddl
cmpsl
jno
insl
in
mov
insb
push
and
mov
decb
pop
leave
cwtl
xchg
cmp
xor
ficompl
mov
jl
add
jae
sbb
jmp
dec
adc
push
inc
sub
xchg
mov
stos
xor
jp
out
mov
pop
dec
mov
clc
push
add
leave
shrb
fs
push
pop
add
divl
cmp
mov
ja
das
dec
mov
fld
sbb
mov
add
enter
fcmovb
test
and
es
mov
and
push
sti
cmc
sahf
scas
jns
jecxz
das
inc
add
adc
rolb
aas
xorb
push
ret
out
adc
dec
add
adc
adc
mov
xor
pop
aaa
fildl
push
jne
cmp
mov
add
push
jmp
shll
mov
xchg
add
into
mov
insl
cld
imul
and
mov
mov
fidivs
loopne
xchg
loopne
inc
xchg
or
fwait
sbb
fiadds
or
push
or
mov
xor
cmpsl
out
cmp
adc
sbb
dec
pusha
jo
xor
mov
jo
test
xorb
jmp
icebp
dec
and
pusha
sbbb
loope
mov
xlat
pop
test
insl
sbb
in
jne
cs
js
add
push
cmp
add
adcl
stos
push
xor
mov
jbe
add
loopne
movsb
addl
pop
mov
dec
adc
jo
and
push
or
mov
adc
and
out
xchg
outsb
pusha
xchg
xlat
xchg
xchg
xor
add
push
cli
imul
lret
push
pop
movsl
sbb
into
cmp
push
rol
dec
dec
adc
arpl
je
faddl
outsl
adcb
jne
mov
mov
xor
es
lds
loop
adc
call
mull
xor
jle
cmp
and
add
loop
xor
push
mov
aaa
jle
sarb
add
scas
ret
pop
push
cmpsl
outsb
cmpb
call
rol
iret
mov
lahf
push
and
cmp
data16
repz
mov
xchg
loopne
subl
cwtl
lods
xchg
inc
shlb
pop
jle
jne
add
fnstsw
jp
add
pop
and
push
popa
mov
ret
add
insl
push
dec
add
pop
sub
in
add
movsl
repz
jne
add
ljmp
test
nop
cmp
ja
inc
add
pop
shl
scas
sbb
cmpsb
je
loop
add
mov
cmp
add
std
lea
mov
xchg
lods
push
inc
hlt
push
fs
cmp
in
andb
or
mov
jno
add
dec
push
stos
clc
adc
mov
mov
inc
add
mov
or
cmp
or
popf
call
xchg
mov
incb
loop
xchg
pop
xchg
add
inc
sbb
fucomi
hlt
push
mov
add
es
xlat
out
and
int
push
push
push
orb
add
iret
mov
aad
pop
sbb
xor
adc
lods
clc
lds
mov
mov
sbbl
dec
pushf
sti
decb
rcrl
ss
pop
pop
icebp
jo
or
cmpsb
bound
mov
pop
or
mov
push
push
outsb
adc
add
sub
fs
roll
stos
in
popa
test
jmp
int3
scas
cli
or
popf
loopne
mov
mov
flds
out
adc
leave
add
inc
inc
pop
add
mov
lds
std
xchg
and
les
add
cmp
push
roll
mov
aaa
filds
pop
aas
mov
mov
adc
add
sahf
out
pusha
loop
popf
je
push
mov
test
lea
xchg
add
xor
cld
add
popa
in
stos
add
movsl
sbb
or
int
lret
add
loop
lea
ljmp
and
aad
mov
dec
mov
rcr
mov
xor
pop
subl
mov
mov
lret
add
subl
dec
add
ljmp
adc
mov
cs
xchg
ja
add
movb
add
lret
jno
nop
verw
mov
add
in
mov
push
roll
add
dec
out
xchg
add
add
mov
pop
lret
inc
ja
jns
add
stos
xchg
cmp
jns
xlat
popf
mov
sub
push
inc
add
fnstsw
iret
push
mov
pop
popf
addl
push
push
lods
cmp
ljmp
daa
shrb
in
xchg
dec
or
mov
shlb
outsb
in
leave
sahf
push
add
in
es
or
cld
aas
lock
cmp
hlt
cmpb
dec
adc
add
enter
test
mov
test
xchg
scas
add
pusha
ja
nop
jnp
or
mov
add
push
and
pop
hlt
mov
sbb
fsubrl
xor
ss
clc
mov
mov
insb
add
pop
sbb
xor
jecxz
add
daa
int
test
psrld
mov
loop
add
nop
out
push
enter
out
ja,pt
add
aaa
ja
add
mov
in
fiadds
pushf
cli
adc
nop
adc
jp
add
push
dec
mov
sub
jnp
mov
dec
dec
movsb
push
lahf
add
mov
sub
add
mov
add
decb
mov
push
lahf
cmc
adc
cmpb
repz
cwtl
cmpsb
jo
add
jns
jmp
sti
lcall
out
sbb
in
aam
rol
scas
and
add
insl
push
pop
add
fs
into
inc
addb
pop
jb
jp
pusha
arpl
ds
mov
sbb
add
or
xchg
xchg
pop
pop
cmpsl
outsl
lahf
lock
in
out
add
rolb
add
mov
test
add
sbb
icebp
pop
inc
inc
stc
scas
bound
and
push
ja
sub
aaa
xor
dec
or
jmp
cmpsb
adc
push
cmp
rolb
aam
push
orl
das
scas
add
inc
and
stos
pusha
aas
mov
sbbl
pop
pop
jbe
lret
jp
adc
inc
push
xor
push
dec
pushf
cmp
pop
mov
rcrl
jne
sbb
cmc
xor
mov
mov
jmp
add
out
push
sub
daa
cmpsl
pop
lret
cwtl
or
cmp
jbe
test
pop
aad
dec
add
sbb
xor
push
sti
inc
pop
jg
mov
add
test
mov
jbe
aam
add
ljmp
sbb
sbb
test
mov
mov
mov
ficomps
add
inc
aaa
stos
and
mov
push
sub
fsubr
add
mov
cld
incl
call
cmc
xchg
lock
pop
pop
aaa
adc
dec
ret
and
push
xcrypt-ctr
cmpsl
lahf
pusha
les
mov
jle
dec
ret
and
sub
data16
mov
jae
pusha
lret
daa
push
lock
adc
add
xchg
cmp
push
jo
adc
xchg
clc
push
aam
ret
push
add
shl
cmp
mov
ret
cmp
js
ret
popf
lcall
mov
mov
cmp
aaa
add
cli
sub
adc
popf
fdivrl
add
sub
pop
mov
cmp
mov
aam
ds
cmpb
sub
pop
bound
jle
in
xor
dec
ret
ljmp
dec
lds
inc
pusha
movsl
pushf
jno
imul
jp
sbb
add
ljmp
add
out
lea
aaa
adc
pusha
lahf
cmp
cmp
sar
jmp
test
cs
out
cmp
add
fimull
push
push
dec
stc
jne
ds
dec
mov
mov
add
lods
shlb
fidivrl
sahf
roll
cmpsl
push
add
lods
jae
add
aaa
push
sbb
xchg
mov
sub
mov
dec
pusha
test
xchg
add
ds
test
and
xchg
das
pop
movsb
inc
sbb
out
insl
pusha
or
imul
xorb
push
xchg
mov
jns
adc
loop
imul
cmp
jmp
fisubs
pusha
add
adc
mov
mov
nop
jecxz
fsubs
cmp
add
testb
mov
adc
ret
inc
aas
add
cmpb
add
cmpsb
jnp
imul
sub
mov
lds
push
scas
mov
inc
sub
jmp
add
orl
add
adc
jge
and
dec
lcall
add
scas
pop
sbb
add
cs
push
fisubrl
push
xor
inc
sub
adc
lock
add
xor
jne
jmp
sub
sub
jb
push
divl
or
das
push
pusha
daa
cmc
gs
add
imul
adc
stos
test
push
cltd
rol
jge
sbb
cltd
and
cwtl
inc
xor
adc
jbe
outsl
repz
cmp
dec
mov
push
adc
outsb
push
add
je
insb
sbb
sbb
cmpsl
sbb
add
and
sub
and
add
mov
add
jp
sbb
cld
lret
in
xchg
scas
insl
enter
add
fidivrl
js
test
jl
jo
xchg
inc
inc
nop
rcll
push
add
jp
dec
or
imul
or
jo
add
aaa
push
mov
clc
rorl
cmovg
jb
add
and
adc
dec
add
pop
hlt
icebp
add
cmp
mov
lcall
pop
insl
jl
or
icebp
in
jne
jmp
pop
mov
lods
insl
add
inc
or
loopne
ljmp
out
ds
out
add
cmp
mov
cmp
jle
rorb
jp
pusha
jl
imul
add
divl
inc
sbb
btr
push
and
add
mov
lret
stos
aaa
inc
push
add
pop
std
not
push
mov
push
add
movsl
mov
cmpsl
sbb
and
jl
add
adc
push
dec
aas
cltd
dec
mov
pop
xchg
inc
dec
sub
les
jge
stos
and
daa
sbb
xlat
lods
jb
add
xchg
pop
jns
jmpw
xchg
mov
push
jns
add
inc
in
mov
pop
add
cmc
lahf
jne
pop
bswap
xorb
ret
cmpsb
je
ds
mov
lods
mov
and
faddl
push
sbb
pop
adc
cmp
out
ds
xchg
les
pop
insl
xchg
dec
inc
xchg
adc
push
test
mov
dec
scas
and
enter
cmp
imul
mov
mov
mov
int
les
dec
add
and
jl
add
rcrb
mov
mov
ror
pop
and
dec
push
jecxz
add
pushl
adc
push
jne
add
xor
xchg
sbb
insb
push
cmp
call
shrl
decb
add
mov
shrb
add
sbbb
inc
sbb
cmp
add
jne
int
aam
ss
and
test
mov
mov
pop
in
dec
add
jns
lcall
fildl
addr16
adc
int3
pop
adc
popf
lret
enter
add
cltd
or
shlb
jnp
loope
and
pop
mov
sbb
add
cltd
dec
str
push
add
ljmp
sub
xchg
push
mov
dec
rorb
aam
or
in
repz
rol
push
fsts
xchg
popf
add
pop
xorl
xor
xor
mov
gs
pop
mov
aam
add
fst
cmpsl
out
adc
shlb
or
jnp
add
aad
and
insb
fcomps
fsubr
sahf
pop
test
bound
add
mov
icebp
pusha
mov
mov
shl
fmull
mov
jecxz
shrl
das
xchg
jb
jnp
add
sub
addb
clc
and
aam
inc
imul
ss
insl
ficoms
outsb
clc
mov
enter
and
mov
test
fstpl
cmpl
mov
xchg
sbb
mov
pop
pusha
pusha
mov
inc
aad
add
adc
ds
mov
insb
out
lahf
add
xor
orl
daa
xor
cmp
lret
cmpsl
add
rcll
or
pop
inc
adc
cmp
xor
mov
enter
sbb
bnd
cmpsl
add
pop
inc
scas
cmpsb
rcl
add
mov
mov
sbb
loop
cmp
data16
mov
test
lahf
sub
sub
and
gs
jle
pop
mov
clc
and
out
mov
xchg
and
and
inc
dec
cwtl
fs
dec
xchg
mov
insl
stos
xor
negb
repz
xor
add
xchg
xchg
icebp
inc
fldcw
xchg
gs
lods
add
mov
jno
push
push
cs
add
orb
add
pop
mov
add
movsl
cmp
lods
outsb
pop
xchg
ret
out
adc
add
pop
mov
cmp
out
jne
and
aas
jns
pop
mov
dec
cmpl
sub
mov
mov
add
xor
mov
add
lods
in
push
stmxcsr
fs
das
mov
add
mov
sbb
lcall
movl
sub
enter
jl
add
popa
mov
cmp
add
pop
cmp
push
add
mov
xchg
add
daa
inc
lahf
cmp
xchg
cwtl
and
add
shl
inc
pop
movsl
aaa
jo
mov
adc
popf
add
push
mov
popa
mov
sti
cmpsb
addr16
add
insb
repnz
inc
xchg
pop
push
add
shr
stos
and
scas
fwait
add
xchg
fmulp
cld
in
push
and
lods
scas
lods
clc
add
push
aas
add
stos
add
sti
mov
les
incl
fadds
sub
int3
jo
pop
lea
jl
push
sbb
mov
mov
sub
into
inc
test
sbb
add
add
aam
pop
xor
or
add
sbb
xchg
add
stos
cmpsl
sahf
pop
in
sarb
loopne
pop
leave
lods
pop
xchg
sbb
cmp
jae
cwtl
rclb
push
ds
sbb
sbb
mov
sub
add
xor
mov
cmpb
sbb
aaa
cmp
rcll
in
sbb
sbb
pusha
mov
xor
add
add
call
fcom
incb
mov
pop
pusha
push
out
js
add
dec
mov
aam
cwtl
in
jg
xor
sahf
add
mov
mov
cmp
frstor
cmp
sub
loop
scas
sbb
add
sub
add
or
pusha
popa
mov
pop
inc
pop
cld
xchg
add
mov
add
nop
sti
push
adc
adc
dec
les
sub
jp
pop
jnp
add
mov
mov
scas
lret
xor
daa
push
mov
add
mov
into
pusha
jb
sbb
ljmp
dec
lods
xchg
rcrl
enter
push
lret
test
or
call
cs
ret
fisttpl
and
pop
test
sub
push
dec
add
xchg
cs
hlt
test
lock
cmp
sub
or
or
test
pushf
mov
nop
xor
cmpsb
lahf
pusha
push
mov
jl
pop
test
shlb
mov
and
jo
add
mov
es
jmp
cmp
shl
jl
add
xchg
jns
dec
fadd
add
push
sub
pushf
cmpsb
cld
rorb
add
push
pop
ljmp
jbe
adc
stos
mov
insb
inc
repz
scas
daa
ja
adc
mov
add
fldenv
lret
rolb
rol
iret
adc
push
sub
and
test
je
clc
aad
test
inc
int3
inc
pop
data16
mov
cs
popf
aaa
jbe
mov
fimuls
scas
pop
add
jbe
adc
ljmp
sbb
push
imul
mov
pushf
sbb
mov
jle
and
pop
fiadds
add
cmc
push
pop
call
pop
push
cmp
add
js
and
jns
mov
or
pop
or
out
fstps
test
shll
rcl
jno
pop
cli
add
and
adc
cmp
sbb
jne
in
push
sti
add
andl
sbb
add
daa
sub
loopne
mov
mov
lock
sub
jne
int3
xor
bound
add
pop
cld
mov
ljmp
adc
cmp
sub
jae
add
ss
or
or
add
jbe
add
or
dec
les
js
sti
aaa
xchg
dec
enter
insb
push
pop
cmp
nop
iret
scas
sub
mov
add
shrb
sarl
push
div
adc
add
lcall
mov
cld
pop
add
fimuls
lret
add
and
stc
mov
add
push
scas
mov
push
loop
add
add
jmp
jo
add
nop
insl
lahf
aas
mov
and
fistpl
jge
push
inc
loopne
test
ja
inc
jbe
rorb
mov
add
cli
mov
cmp
push
sbb
pop
mov
fldt
jo
xchg
mov
and
pop
add
push
or
sti
pushf
pop
or
loopne
incb
lods
stos
add
cmp
pusha
add
lret
or
sub
xchg
incl
xor
sub
sar
in
testl
loopne
sub
mov
adc
int
orl
sti
add
add
js
xchg
cmp
adc
enter
adc
testb
sbb
lret
inc
or
add
dec
fisubl
or
int3
out
xor
add
xor
int3
xchg
in
dec
loopne
mov
push
mov
lret
add
cmpxchg
cmp
je
mov
add
cli
adc
add
dec
cltd
add
push
dec
xchg
add
jl
xchg
add
in
leave
mov
lds
or
push
lcall
imul
mov
jl
add
cmpsl
loopne
loope
out
add
mov
pop
addb
mov
sbb
loopne
mov
mov
in
pushf
jmp
dec
add
scas
inc
rolb
xchg
aas
or
mov
enter
les
call
inc
ss
xchg
cmc
cmp
test
xor
mov
or
sbb
adc
lret
out
pop
or
cld
dec
add
js
mov
add
mov
add
scas
dec
cmc
push
pop
mov
sbb
and
xchg
fwait
mov
ficompl
inc
mov
lea
sti
stos
add
lods
shr
nop
push
sbb
cmp
xchg
lahf
sti
dec
add
shlb
mov
push
loope
lock
insb
xor
sbb
push
jbe
push
loopne
cld
cmp
inc
mov
add
add
insb
filds
dec
mov
inc
daa
mov
add
shll
dec
xlat
xor
mov
sbb
dec
sub
daa
int
add
lds
aam
roll
jae
mov
sub
mov
push
dec
stc
mov
andb
testl
push
and
arpl
push
pop
icebp
dec
jle
aaa
fdivrs
out
push
cmp
jmp
add
test
sbb
jmp
adc
sti
repz
mov
fcomps
into
add
ret
lods
pop
repz
jg
nop
pop
pop
int
daa
mov
ds
push
cmp
loopne
popl
les
scas
cmc
add
fdivs
popa
xchg
and
cmp
ds
mov
jno
add
stos
dec
xchg
push
push
cmpsb
push
enter
dec
cmp
je
std
mov
addb
jo
idivb
movsb
faddl
mov
inc
add
punpckhbw
mov
rol
imul
loopne
push
ret
shlb
popf
xchg
clc
lret
push
pop
adc
mov
call
mov
sbbl
add
or
nop
add
or
add
call
push
or
mov
add
pop
call
add
jae
icebp
pushf
add
pop
cwtl
cmp
jne
cmp
mov
add
mov
add
push
add
jmp
lret
sbb
lds
dec
adc
push
add
mov
rorl
shl
scas
lret
pop
pop
push
cld
int3
les
std
int3
pop
ret
inc
mov
sarl
mov
mov
cmc
decb
add
loopne
jl
or
int3
pop
es
movsl
addr16
js
pop
inc
dec
and
add
and
fstpt
clc
lahf
cmpl
and
add
ss
add
sbb
rolb
ja
jno
loope
dec
cmp
inc
in
mov
and
es
xchg
mov
add
rcl
movsl
pusha
clc
mov
mov
inc
pop
push
pop
jae
mov
dec
xor
xchg
pushf
mov
inc
out
pop
lds
gs
cmpsb
xchg
pusha
dec
cwtl
lods
add
ret
add
sub
add
cmp
adc
fiaddl
mov
jle
add
out
adc
dec
call
lods
add
sub
sbb
or
ret
xor
loop
add
xor
xchg
lcall
jmp
repz
push
rcr
movb
cmp
cmp
leave
inc
add
mov
push
das
lahf
or
sbb
and
rcrb
push
aam
and
data16
enter
or
lods
or
xchg
and
add
fidivs
test
roll
xor
jle
add
jbe
push
cmc
ret
je
add
add
xlat
pop
movsb
inc
cmpsb
push
popf
xchg
add
shlb
insl
or
cltd
xchg
pop
push
lock
cmp
or
jnp
cs
popa
xchg
dec
lods
loop
outsl
scas
mov
ret
sti
dec
add
mov
xorl
fwait
test
faddl
fildl
rcr
mov
stos
sar
jp
xor
cs
xor
add
jb
push
into
lcall
scas
add
inc
lcall
leave
int3
adc
xor
inc
add
cmp
sbb
jle
mov
mov
or
push
mov
push
jle
pop
mov
mov
lcall
add
rcrb
in
lret
sub
push
xchg
add
jno
jl
cld
lea
pusha
mov
lahf
add
cmp
cmp
js
and
add
xchg
pop
in
imul
push
pop
add
push
push
stc
cmp
adc
shll
stos
push
push
add
out
aaa
inc
mov
jns
add
xchg
enter
add
aaa
in
in
dec
cmp
add
popw
std
out
push
fwait
pop
sahf
ja
inc
ret
inc
mov
jp
roll
mov
pop
clc
cld
or
add
push
jns
sub
dec
add
stos
shrl
inc
mov
add
pop
int3
pop
fs
add
mov
pop
cmp
mov
add
stc
pop
ret
inc
popa
ret
or
jl
cli
out
rcl
aad
out
add
mov
les
ds
sbb
cmp
add
stos
jae
mov
roll
or
pop
pop
jmp
rolb
outsb
mov
xchg
lcall
or
cs
jb
sahf
negb
jmp
inc
jecxz
punpcklbw
incl
mov
pop
enter
jns
inc
mov
es
pushf
mov
cmp
sarb
cmpsl
mov
mov
jmp
add
push
pop
out
test
cmp
mov
xor
jnp
mov
jmp
in
add
in
ljmp
mov
mov
pop
in
cmp
ds
xor
and
add
popl
pushw
and
pop
outsl
mov
adc
mov
roll
sub
sbb
dec
testb
xor
add
push
stos
mov
add
out
adc
push
outsl
aam
dec
xor
repz
inc
sub
push
sbb
xchg
mov
lea
mov
xor
lret
dec
shrl
adc
add
ja
dec
cmp
mov
mov
neg
xchg
bound
sahf
test
sbb
pop
mov
fcmovu
sub
movsb
cld
rorb
cs
dec
jecxz
mov
loopne
sbb
jp
pop
mov
imul
inc
push
repz
test
cli
jp
mov
faddl
add
cmp
dec
xlat
inc
je
ja
pop
sahf
cmp
fcmovnu
mov
push
clc
add
xchg
add
sbb
xlat
add
js
adc
jno
jns
add
pop
xchg
and
sub
push
cs
add
lret
lcall
jge
fisttpll
aas
insl
sbb
add
mov
testb
fmuls
jbe
add
in
xchg
bound
jno
lahf
add
out
lea
xor
xchg
adc
lahf
movsb
jmp
sub
xchg
add
enter
in
addl
sub
lcall
sahf
push
xchg
xor
sbb
les
repnz
xchg
aas
int3
fisubrl
outsb
push
incl
mov
and
xor
add
jge
push
sbb
cmp
nopl
rcrb
xchg
outsl
out
cmp
repnz
lea
pop
aad
hlt
loop
push
pop
sti
or
nop
shlb
add
pop
push
xchg
imul
adc
rcr
mov
mov
hlt
cli
push
mov
scas
xchg
jo
push
cs
add
and
in
popf
push
roll
daa
iret
bndldx
cmp
and
add
xchg
jp
inc
xchg
pop
daa
add
bound
inc
arpl
dec
pop
test
mov
scas
and
ss
push
cmpsl
xor
adc
mov
scas
add
lds
repnz
mov
and
push
add
pusha
jo
push
cmc
or
add
jnp
mov
jae
push
or
inc
cmp
cmpsl
test
ret
repz
sbb
pushf
loopne
scas
outsb
lds
sub
std
cld
dec
or
add
dec
addr16
sub
jne
xchg
sbb
js
push
mov
and
xchg
push
inc
idivb
ljmp
sub
sub
inc
mov
shl
ret
lods
cmp
jp
scas
mov
push
repz
rcll
add
divl
pop
xor
sarb
out
test
lds
mov
xchg
adc
pop
movsl
add
test
mov
xchg
push
aad
jns
aas
xchg
ss
mov
fwait
pop
jmp
dec
cwtl
mov
xchg
dec
xchg
lahf
loop
jmp
clc
sub
jge
cld
cmp
clc
popf
push
pop
daa
push
add
fldl
sub
mov
xor
outsl
je
fadd
add
pushf
and
dec
add
aaa
cs
push
cmpsb
aam
rol
je
and
add
fnsetpm(287
mov
sbb
fimull
add
clc
mov
add
or
ret
xorb
jb
cld
lea
js
repnz
dec
ficoml
add
pushl
test
cmp
cmpsb
lods
push
add
clc
mov
or
les
and
lock
test
repnz
cmp
jecxz
out
sbb
sbb
addl
xchg
outsb
jg
push
dec
cwtl
je
roll
scas
pusha
add
mov
pop
out
movsl
pop
clc
inc
add
loopne
mov
rcll
inc
dec
sbb
adc
cwtl
push
xor
mov
das
fadds
shrb
push
mov
int
mov
pop
jl
add
outsl
cmp
movsb
cwtl
lock
xchg
add
add
sub
cmp
jbe
adc
test
adc
stos
add
clc
test
and
cmp
aaa
push
push
xchg
add
rolb
push
sub
or
pusha
movsl
cltd
es
inc
jo
add
test
divl
add
xchg
jg
ljmp
insl
cmpsl
outsb
repz
inc
aam
mov
jns
das
rorb
dec
add
bound
xor
lret
jo
pop
lcall
add
test
push
aam
or
add
pop
jmp
out
dec
add
in
jg
inc
mov
in
js
add
inc
push
dec
cmc
cmpsl
xchg
jb
insb
hlt
inc
mov
cmp
lret
out
cmp
orb
cmpsl
sbb
movsl
sub
add
jle
dec
jae
les
pop
jmp
sbb
popf
push
mov
fcomi
dec
call
or
divb
fiadds
fs
cmovs
and
mov
int
pop
mov
jle
push
and
in
shlb
imul
add
lret
adcb
sbb
inc
add
push
je
xlat
in
mov
jo
jo
outsb
add
orb
subb
nop
addr16
push
or
xor
pop
das
xchg
add
xor
push
pop
sahf
push
sbb
addb
mov
fidivrs
fwait
add
adc
mov
aas
test
sub
divl
add
sub
lahf
add
shlb
leave
mov
sbb
xchg
inc
shr
jnp
shl
pusha
sbb
sar
sub
push
or
push
or
inc
fwait
dec
push
addl
cmp
sbb
or
insb
ret
adc
mov
add
aas
add
cmp
mov
test
fcmovu
xor
adc
addb
mov
fldt
sub
ror
filds
or
sbb
movaps
jo
add
sti
into
cmc
test
push
loope
pop
fcoms
add
pop
scas
jge
das
xchg
int3
push
or
fists
roll
call
mov
jbe
jb
pop
adc
aas
cmp
int
es
xchg
mov
push
incb
les
pop
cwtl
xlat
pop
dec
pop
xor
aam
add
clc
cltd
add
cmp
adc
mov
sbb
pop
movl
enter
sarl
repnz
fwait
je
addb
push
test
mov
sub
pop
cld
sub
cmc
or
add
add
popf
mov
cmp
push
or
pop
or
stc
rolb
sbb
ret
sub
and
add
jle
mov
test
dec
cmp
add
repz
add
in
jne
sub
add
outsb
and
ret
xor
movsl
dec
pusha
imul
je
jle
inc
incl
fidivs
xor
mov
les
inc
aad
imul
popa
sbbb
add
or
stc
add
mov
push
fstpl
arpl
cmp
xchg
sub
add
sbb
sub
out
lret
hlt
inc
cmp
lcall
push
add
mov
sti
scas
add
dec
or
add
adc
adc
test
pop
lcall
or
pop
add
cmp
mov
pop
xlat
filds
in
addb
stc
add
sub
repz
dec
inc
leave
push
mov
add
lds
je
xor
add
jg
stos
sbb
cmpsb
pop
pushf
sbb
sub
add
push
push
sbbb
fucom
stos
xor
inc
xor
orl
jo
cli
xchg
jno
aam
jnp
mov
jno
mov
xor
adc
shr
jno
call
and
movl
push
cmpsl
jo
rorb
push
jnp
add
dec
xchg
mov
add
and
call
cli
mov
out
mov
pusha
mov
add
ja
push
andb
cltd
psllw
ror
sub
adc
pop
nop
jne
pop
cmp
add
pop
add
sub
adc
cmp
mov
ds
stos
inc
ljmp
jl
dec
jne
add
xchg
jb
push
jle
add
daa
addr16
jnp
pop
movsb
add
cltd
fstl
or
outsb
fucomip
add
xor
in
push
fs
or
jb
fsub
add
adc
mov
add
add
bound
fistps
inc
and
inc
pop
mov
xchg
add
xchg
or
add
dec
jns
add
inc
aad
mov
xchg
add
out
mov
push
and
add
ja
and
fstps
lods
cmpb
sbb
aam
xchg
cmp
dec
je
push
test
imulb
sysenter
ds
add
iret
rcrb
loope
jle
push
stos
push
aaa
mov
add
scas
je
xlat
mov
add
xor
xchg
out
push
inc
or
mov
mov
lahf
xor
pop
ret
add
cli
inc
xchg
cmp
movsl
or
add
andb
add
push
or
inc
jmp
fisubs
cmpb
jecxz
add
fnstsw
fwait
nop
cwtl
add
lret
xchg
insb
mov
movsb
add
sub
je
and
jge
lock
mov
cmp
int
add
mov
mov
scas
rcrb
or
mov
test
mov
incb
sbb
or
pop
xlat
test
pop
outsl
add
pop
push
dec
and
pop
pop
add
test
call
cmpsb
pop
cmpsl
xchg
es
xchg
stos
add
mov
roll
pop
cld
dec
sub
pop
add
out
and
stos
in
jmp
rorb
test
cltd
and
xor
and
lret
inc
xor
roll
and
add
in
andnps
lret
cs
xor
push
mov
int
ljmp
fwait
outsl
and
and
testb
inc
add
cwtl
pop
fs
xchg
lar
int3
aas
pause
mov
out
add
and
cld
mov
add
lea
inc
lcall
pop
aas
scas
faddl
out
lea
jbe
mov
mov
enter
out
and
popf
scas
sbb
mov
or
xlat
mov
add
movsl
and
test
neg
in
sub
pop
add
popa
add
add
cld
sbb
rolb
jae
outsl
dec
adc
adc
test
ret
add
shlb
sub
testl
test
daa
sbb
out
add
push
pop
ljmp
rolb
jg
sub
add
daa
in
and
fstpl
mov
push
fwait
mov
or
mov
jg
and
cs
xchg
pop
add
mov
adc
dec
arpl
jecxz
lret
pop
fisttpl
in
inc
cs
cld
xor
lea
mov
fcompl
add
adc
add
subl
add
arpl
out
mov
mov
push
pop
mov
mov
xchg
jecxz
arpl
cmp
je
and
bound
inc
cmp
fmuls
xlat
add
sbb
cmp
inc
mov
fadds
inc
push
pusha
shr
adc
rorb
outsb
dec
cwtl
inc
dec
lret
cmp
test
dec
dec
xlat
push
popa
adc
mov
inc
add
les
or
mov
and
push
add
stc
or
mov
mov
mov
ret
cmp
bound
incb
in
in
jmp
jp
stos
ds
add
fistl
add
fisubl
stos
test
add
sub
add
movsb
and
fsubrp
add
push
or
pop
lea
call
cmp
aad
movl
movsb
add
add
xor
fcmovne
jp
push
cmp
gs
in
pushf
sbb
dec
mov
repnz
aad
push
push
cmc
pop
das
cmpsb
mov
leave
das
mov
pop
add
jle
sub
call
jne
mov
rcll
test
ret
mov
addr16
push
outsl
jno
je
add
push
rcll
add
add
mov
inc
cli
out
in
aad
adc
cld
pop
ficoms
loopne
dec
mov
icebp
jb
add
add
sub
fldenv
adc
mov
sahf
add
xor
vpshld
mov
push
into
mov
adc
add
sbb
dec
pop
cmp
mov
xchg
jl
andb
jmp
dec
push
push
iret
inc
push
inc
xchg
imull
dec
and
add
sub
ficompl
test
xchg
inc
pop
imul
aas
xor
test
pop
cmp
xchg
add
add
std
xor
orb
shrl
mov
jno
sbb
mov
stc
mov
pop
scas
loopne
aaa
adc
jecxz
xchg
add
int3
mov
push
lret
hlt
push
and
in
std
add
and
or
mov
push
cs
nop
jnp
xchg
inc
insl
mov
sbb
imul
adc
fldl
ljmp
sti
sub
mulb
pushf
lahf
dec
mov
adc
mov
es
rolb
clc
mov
pop
enter
mov
push
jno
and
lock
clc
dec
add
pop
fstpl
add
in
xchg
add
pop
jge
sub
add
pop
pusha
ficoml
add
sahf
int
add
sbb
out
push
call
movsb
jns
rol
fisttps
add
jg
pop
icebp
mov
mov
pusha
add
stos
inc
xchg
icebp
xlat
cmp
mov
xchg
mov
sbbl
adc
pushf
sub
lret
and
pop
pusha
add
and
inc
rolb
jle
push
lret
cli
out
outsl
push
adc
add
ss
dec
in
add
sarl
push
leave
clc
cwtl
popa
cmp
sbb
jmp
xor
call
xor
cmc
cmpl
jmp
sti
pushf
je
sbb
and
repnz
add
ret
sti
adc
sbb
out
xor
out
pop
repz
push
or
jns
daa
or
xor
inc
cmp
pop
sahf
pop
pop
in
mov
call
dec
adc
stos
cmpsb
mov
aas
cmp
mov
outsb
sub
or
xor
xor
pop
add
mov
cwtl
clc
add
shll
int
mov
xor
insb
out
adc
shlb
mov
mov
xor
or
into
sub
or
int
repz
add
fcomi
in
and
push
inc
add
push
push
sti
and
mov
push
add
js
xor
dec
push
push
sbb
nop
mov
or
pusha
test
add
mov
sti
pop
mov
adc
xchg
js
je
aaa
sbb
pop
clc
adcb
dec
dec
add
rorl
push
mov
jl
add
daa
testb
dec
flds
inc
fistpl
xorb
xchg
lock
addb
ss
push
or
stc
test
and
testb
into
xlat
or
mov
and
pusha
adc
push
dec
or
rolb
mov
xor
enter
clc
fwait
es
xor
in
jp
sub
jo
repz
add
ficoml
xor
imul
cmpl
test
sbb
repnz
add
nop
jae
outsb
push
add
lcall
ficomps
cmc
scas
mov
mov
cmp
pop
mov
sub
mov
sti
incl
push
stos
addr16
adc
aas
cmp
adc
xchg
add
push
dec
mov
pop
and
pop
push
out
sub
or
add
in
push
cmpsl
pushf
add
mov
pushl
inc
sbb
or
ss
out
pop
mov
jo
sbb
add
mov
xchg
xlat
mov
cwtl
add
jecxz
fucomip
repnz
cmpsb
xor
dec
xor
and
adc
je
jnp
xor
or
add
leave
inc
flds
add
int3
sub
jne
ret
jmp
cmp
scas
mov
cltd
scas
lock
or
loopne
je
jbe
sbb
xchg
stos
sbb
lds
push
or
add
cmpsl
adc
mov
and
std
add
dec
repz
loopne
gs
inc
movl
push
dec
push
rolb
test
jmp
jb
cmp
cmp
js
mulb
mov
xor
adc
dec
xchg
andb
shll
icebp
jmp
pop
lea
cmpsb
dec
lock
mov
jno
mov
ja
mov
jmp
roll
loope
enter
lret
aam
lods
jecxz
xor
ret
or
jl
sbb
jnp
pop
adc
shrl
jecxz
mov
or
cwtl
jns
add
add
lret
mov
insl
add
les
mov
add
pop
mov
imull
cmp
fcomps
inc
add
and
add
dec
jnp
push
fiaddl
inc
outsb
jns
and
sub
aad
and
andl
mov
mov
add
pushf
sbb
jae
stos
add
adc
and
xchg
mov
or
je
roll
loopne
lods
add
push
and
add
mov
push
and
push
inc
sarl
loope
pop
into
rcrb
aaa
mov
dec
pop
push
add
icebp
xor
push
cmc
xor
inc
xchg
cmp
sbb
stos
xor
enter
jg
les
out
add
sbbl
xchg
push
cmpsl
rolb
orb
jns
mov
lods
push
jno
xor
sti
dec
sub
loopne
bound
je
adc
jo
mov
aam
andl
std
mov
add
add
add
bound
adcl
pusha
mov
jo
addl
scas
aaa
cltd
flds
int
pop
cmc
sbb
fcomi
add
adc
add
adc
ret
mov
lret
pushf
add
loopne
xchg
add
xlat
jno
sbb
and
cli
and
call
add
pop
stos
dec
enter
xchg
adc
test
sub
addl
in
jno
orb
xor
lcall
add
loopne
sbb
sbb
ret
sarl
dec
push
in
xchg
scas
js
jbe
repnz
add
ss
es
mov
enter
jge
negl
jp
xchg
fwait
cltd
mov
ljmp
push
cmp
das
xchg
shr
xor
scas
sbb
outsb
add
xor
dec
adcb
xchg
mov
cwtl
xchg
push
mov
sub
sub
sbb
sbb
lods
test
adc
in
mov
and
add
sbb
dec
sbb
jmp
xor
xlat
add
add
outsl
and
xor
or
testb
add
dec
xor
imul
mov
push
dec
sbb
ja
pusha
movsb
js
sub
inc
push
push
test
clc
xor
enter
pushf
and
or
leave
jb
pop
popa
add
adc
sub
lods
or
push
adc
lahf
mov
icebp
lcall
adc
outsl
add
mov
xchg
cs
notb
addl
rolb
inc
jg
out
add
mov
sbb
jl
pop
scas
rorl
jo
mov
or
mov
testb
cmp
rclb
aad
xchg
add
mov
popa
mov
mov
clc
and
pop
or
cmpsb
aad
clc
push
pop
inc
ljmp
adc
out
push
jge
fwait
sbb
pusha
bound
cwtl
sahf
pop
jne
and
movsl
xor
test
sbb
push
sub
loop
testb
dec
int3
pop
rcrb
adc
jl
push
mov
fildl
xchg
scas
call
dec
xchg
pop
dec
popa
sub
fs
sub
sub
enter
pusha
loopne
jg
out
rorl
pop
push
in
pop
test
je
add
mov
mov
roll
inc
subb
loopne
cmpsl
mov
fstps
gs
lahf
mov
jne
ret
je
aas
aaa
pop
or
dec
cwtl
dec
mov
lahf
out
mov
mov
inc
sbb
sub
push
sbbl
mov
jge
add
push
lea
or
sub
jne
add
mov
pop
or
popa
inc
sub
cli
pop
jp
add
push
test
lahf
jle
shlb
or
faddl
iret
cmp
push
or
xor
add
sub
idiv
in
jno
xchg
add
fcoml
outsb
popa
lret
xor
add
aam
loop
out
push
dec
and
shrb
push
mov
loopne
imul
sbb
pop
mov
sub
add
ljmp
sbb
mov
add
and
xor
daa
dec
or
mov
sbb
or
sbbb
pop
leave
xchg
adc
addl
jns
sub
adc
push
gs
or
cltd
mov
loop
adc
add
adc
pcmpgtw
adc
push
ss
sar
imul
movsb
mov
test
jae
adc
nop
inc
add
das
inc
pop
sub
shlb
loope
outsb
ret
popa
xlat
pusha
sub
and
into
das
aas
test
dec
inc
mov
pop
sub
pop
ja
adc
mov
daa
cwtl
movsb
adc
imul
shll
rorb
sbb
outsb
sbb
in
add
adc
adc
sbb
sbb
jmp
push
push
cmpsl
or
insl
add
scas
dec
js
cmp
dec
sbb
push
xchg
adc
mov
pop
pop
ss
fiaddl
or
daa
pop
xor
inc
fcmovnb
xchg
adc
lds
inc
stos
push
sbb
jbe
push
aam
add
es
mov
mov
mov
jge
xchg
jl
pop
cmp
xor
mov
and
pop
mov
push
cs
and
pusha
xor
loopne
pop
fidivrl
js
mov
loop
popa
insl
inc
cli
mov
in
push
pop
push
shrb
orb
lock
add
inc
nop
or
adc
cmp
push
or
dec
pusha
dec
jg
push
mov
dec
pop
xchg
cld
push
enter
jo
aaa
and
insl
push
mov
mov
cmpsb
sub
xor
add
dec
xchg
cmp
mov
popa
notl
sbb
adc
orl
cmp
cli
dec
inc
test
lods
je
add
scas
push
cmp
pushf
jo
sbb
test
pushf
cmp
mov
ja
in
mov
cmp
enter
add
inc
out
hlt
faddl
inc
clc
xchg
mov
sbb
cld
fldcw
rcr
xchg
stc
push
mov
je
movsb
filds
enter
rolb
adc
clc
xor
mov
jns
cmp
ficompl
cli
adc
mov
loope
mov
lcall
movsl
divb
dec
call
mov
inc
sbb
inc
dec
rclb
fdivl
sbb
fcompl
or
mov
xchg
jp
add
iret
mov
mov
dec
and
adc
and
dec
rolb
neg
push
mov
xor
js
ret
or
aam
cwtl
fcomp
lret
xor
mov
cld
and
mov
rorb
cmpl
or
les
or
cwtl
cmp
xor
push
test
js
std
scas
cmc
lahf
shrl
jae
into
or
out
lods
adc
add
mov
lret
sbb
lods
je
testl
gs
xchg
decl
arpl
lods
and
inc
ret
mov
daa
xchg
subl
or
addl
subl
sbb
inc
mov
sub
out
imul
sub
les
orl
adc
pop
test
mov
adc
inc
movsb
adc
mov
repz
test
in
and
cmp
mov
mov
sbb
dec
test
pop
int3
xchg
into
jo
jle
sub
nop
hlt
shlb
inc
mov
cmp
and
xor
pop
adc
or
mov
xchg
mov
jmp
sub
inc
fs
inc
cmp
xor
mulb
add
test
sub
mov
fdivrl
int3
cmpb
outsw
jo
test
test
cwtl
lock
push
cmp
add
adc
scas
or
mov
test
test
cmp
lahf
negl
cmp
and
sbb
pop
call
enter
fmuls
aas
mov
dec
xchg
fsubrs
dec
sbb
pop
bound
js
pusha
add
or
or
push
pop
filds
add
loope
cwtl
icebp
rcrl
xchg
xchg
add
cmpsb
fadd
or
jl
and
lock
sub
jo
adc
inc
lock
or
push
xchg
adc
popa
cmpsb
mov
sub
sub
jbe
or
adc
cmpsb
mov
adc
adc
adc
dec
enter
sarb
outsb
mov
dec
push
pusha
sub
mov
sbb
jp
and
cmp
sbb
push
jo
xor
jl
sbb
sub
or
es
ljmp
movsb
ja
adc
and
adc
push
js
xor
xor
test
hlt
insb
cmpb
repz
ljmp
dec
frstor
call
call
push
xchg
mov
pop
dec
movsl
pushf
add
xchg
cmpsl
push
adc
pop
sbb
mov
cld
push
lock
sbb
inc
push
mov
orb
or
add
jnp
clc
sub
jg
sub
or
dec
add
pop
lock
mov
xchg
mov
cwtl
lock
enter
nop
mov
xchg
sub
mov
pop
mov
out
and
and
sub
nop
addb
or
lea
test
in
cmpl
xor
push
in
inc
push
cmp
pop
add
lods
mov
or
ss
add
push
test
push
push
sbb
sub
cmp
sbb
sbb
cld
pop
and
sar
inc
shlb
or
inc
cmp
xchg
test
xchg
jnp
cmp
inc
mov
lds
or
sbb
test
push
mov
sub
mov
lods
cmp
mov
mov
mov
or
ss
sbb
or
sbb
dec
inc
pop
and
jmp
pop
sub
xor
sub
fnstcw
jmp
push
cmpsl
nop
mov
or
fcom
inc
jg
lret
arpl
dec
or
mov
adc
out
xchg
sbb
push
ret
or
shrl
mov
or
or
push
xchg
lret
mov
test
xor
and
add
sub
sbb
xor
shll
cmpsl
xchg
cmpl
pop
mov
cmc
aaa
xchg
adc
mov
ret
rclb
inc
jns
fnstcw
dec
pop
sub
test
daa
inc
shlb
cld
flds
and
cltd
xchg
and
jmp
call
xchg
and
ljmp
pop
xchg
mov
and
fadds
push
shrb
jl
or
jne
xor
inc
inc
mov
jo
mov
mov
data16
xor
movsl
and
gs
adc
inc
sub
jle
sbb
push
mov
daa
adc
push
cltd
int3
rcl
mov
mov
or
pop
sub
sub
shl
mov
pop
hlt
lods
adc
jo
fs
mov
mov
popf
in
jmp
test
movsl
inc
adc
int
cmpsl
cwtl
push
cmc
jnp
xor
adc
rcr
pusha
mov
je
or
cmp
sbb
and
add
jbe
fsubl
xchg
add
imul
cmp
sbb
sbb
and
and
fisttpll
pusha
in
sub
fistpll
jnp
je
aas
add
push
xor
lods
js
out
cmp
in
stos
fdivrs
add
pop
stos
add
pusha
aam
mov
pusha
and
adc
adc
sbb
mov
dec
enter
nop
adc
jns
push
jo
inc
into
add
mov
adc
xor
or
adc
inc
cmc
sbb
std
loopne
gs
add
pop
shll
dec
nop
add
pop
lds
add
sbb
or
inc
andb
dec
and
sbbl
cmp
mov
mov
arpl
lcall
fwait
sub
dec
push
andb
ret
jo
mov
pop
adc
scas
or
push
or
mov
adc
dec
and
pop
lods
cmp
push
addr16
adc
pop
inc
fs
in
ror
sub
test
fsub
add
je
sub
lret
xchg
xor
jp
sub
cwtl
sbb
cmp
call
movsl
mov
orb
cmp
and
mov
int3
data16
enter
movsb
sub
mov
push
lods
and
adc
push
inc
lock
imul
into
mov
pop
xor
adc
stos
and
mov
push
mov
mov
cmpb
inc
add
fwait
cmpsb
xchg
loope
and
cwtl
jns
push
xor
dec
and
dec
adc
mov
adc
xchg
adcl
mov
mov
ret
mov
dec
popf
cmp
repnz
inc
aad
or
cltd
pusha
orl
cld
jns
dec
bnd
fs
adc
adc
xchg
inc
mov
jp
sbb
and
and
push
mov
push
popf
test
or
ret
cwtl
sbb
add
push
mov
ljmp
pop
bound
sbb
sbb
adc
xor
push
cwtl
lods
aaa
shl
and
pop
jns
dec
add
push
sbb
cmpb
inc
cwtl
xor
inc
mov
and
filds
add
xchg
mov
sbb
cmpsb
or
mov
shll
push
repnz
xchg
addl
jl
subb
mov
push
cmp
cmp
test
or
mov
and
adcl
arpl
jb
sbb
sbb
inc
pop
jl
sub
mov
dec
and
fimull
sub
pop
push
mov
add
cmp
rorb
mov
lcall
adc
ret
aaa
adc
inc
mov
and
hlt
push
xor
mov
shll
inc
mov
pop
enter
lcall
or
xchg
popa
fsubl
mov
pop
inc
push
cs
in
aam
mov
js
mov
pusha
xchg
imul
and
js
sti
sbb
sub
rol
fistl
push
adc
or
mov
xchg
les
mov
dec
shrb
adc
xor
xor
movsb
adc
push
rcrb
movsl
push
test
adc
push
push
pop
mov
lret
sbb
or
and
xor
sbb
xchg
cmp
inc
rcrb
or
xor
rorb
movsl
inc
adc
movsb
gs
nop
xchg
xchg
hlt
cmp
dec
and
or
cmp
bound
mov
pop
clc
push
mov
sbb
xchg
pop
pop
fmuls
pop
or
xor
rorb
jp
mov
lods
call
inc
sbb
add
sbb
mov
cwtl
xor
fildl
add
cmp
fwait
leave
mov
inc
sbb
adcb
jp
arpl
mov
andl
lods
or
and
orb
or
jle
js
out
leave
add
dec
mov
xorb
pop
out
ljmp
inc
inc
pop
jne
and
push
out
lahf
mov
xor
ja
repz
notl
xor
and
add
mov
cmp
add
leave
mov
and
or
xchg
fldl2t
jbe
inc
dec
pop
pop
ja
adc
sub
fdivs
roll
sbb
push
mov
push
mov
ljmp
out
out
cmp
jns
add
xlat
push
sub
sbb
pusha
mov
jp
es
add
cli
xor
xor
inc
add
mov
push
mov
jmp
cmp
ret
insl
es
add
mov
jl
lret
add
cmp
ds
stos
sahf
jne
add
scas
mov
cmc
popa
ret
inc
inc
ss
je
mov
push
jmp
inc
pusha
xor
int
ret
push
push
mull
xchg
jmp
jmp
and
ja
xor
inc
pop
add
call
cmp
xor
addr16
pusha
cmpsb
jl
add
push
mov
add
push
cmp
and
fs
adc
mov
fsts
add
xchg
mov
stc
add
or
cmp
xor
cmc
mov
iret
xor
insb
out
adcb
xchg
sub
stos
in
arpl
movl
sub
inc
jmp
push
mov
jnp
mov
cmpsl
adc
add
shrl
rolb
sbb
test
loop
repz
dec
mov
les
add
mov
gs
in
imul
aaa
popa
out
add
mov
and
cli
dec
push
add
xchg
lret
mov
cmp
cmpb
cli
add
adc
js
inc
call
in
ret
or
jl
fcomps
adc
enter
push
add
pop
add
imul
add
push
fs
xor
fcomps
popa
or
fidivrl
rclb
enter
aaa
pop
mov
addl
xor
popf
xor
jp
mov
cmpsb
xor
or
jbe
add
cmc
cmp
pop
xchg
sti
mov
jno
pop
test
inc
add
mov
jbe
add
xchg
in
push
mul
add
out
push
nop
mov
dec
shrb
or
mov
lea
xor
aaa
xlat
sbb
add
int3
pop
cltd
xchg
cmpb
mov
mov
xchg
inc
mov
sub
cmp
into
xlat
add
or
dec
fbstp
add
adc
fsubrp
pop
mov
mov
jle
fisubl
out
add
daa
and
push
mov
push
in
sbb
subb
dec
mov
fiadds
adc
mov
imul
sbb
add
adc
fneni(8087
out
lock
and
push
cmp
sub
out
jnp
cs
cli
pop
and
cmc
ljmp
and
arpl
scas
sub
out
inc
cmp
rolb
std
add
cmpsl
cmp
sub
jl
add
scas
mul
mov
xchg
push
sbb
sarl
mov
mov
and
mov
int
aas
xchg
jo
add
cmp
pop
add
loopne
xor
xor
xor
xchg
mov
xor
jecxz
loopne
pop
movsl
sbb
je
inc
movsb
stos
out
insl
mov
mov
push
outsb
add
jns
inc
push
test
arpl
adc
std
pop
hlt
or
and
add
mov
add
fs
xor
sub
adc
inc
mov
and
je
jg
test
xor
sub
push
popw
cwtl
cmp
add
ret
mov
sbb
jecxz
fnstenv
sub
sti
lods
xchg
add
jns
cld
add
pop
jbe
sqrtps
das
rcrb
ficoml
xchg
sahf
and
mov
imul
xor
fiaddl
lea
cmp
jecxz
sbb
cmp
sub
mov
pop
pop
je
iret
int3
cmp
or
xor
outsb
in
add
adcb
lods
push
mov
and
imul
outsl
add
lea
add
mov
cld
clc
xlat
xchg
jns
add
orb
mov
mov
push
lock
xor
sub
mov
mov
rorl
stos
loopne
lret
push
and
adc
movb
jb
pop
rolb
movsl
mov
dec
fs
aas
add
pop
repnz
inc
or
add
push
pusha
sub
into
pop
loopne
xor
lock
push
or
sarb
xchg
stos
popf
and
loope
por
xchg
and
adc
add
add
xchg
jne
xchg
test
pslld
mov
add
mov
inc
mov
aam
pop
add
add
adc
jbe
mov
sub
pop
xor
add
jle
mov
nop
test
fninit
jo
pop
xor
enter
push
xor
pop
add
jo
and
outsb
push
sub
jns
pop
imul
mov
insb
sub
mov
xchg
arpl
pop
fwait
mov
lods
jmp
push
outsl
dec
sub
cmp
in
sub
leave
add
dec
mov
lcall
jmp
or
repnz
adc
push
mov
dec
orb
in
push
popf
jg
mov
push
cmp
jbe
sbb
adc
fidivrl
iret
or
xorl
push
loopne
popa
mov
aad
fs
xchg
xchg
popf
or
movaps
push
shl
stc
mov
jne
add
mov
or
ljmp
cwtl
nop
add
xor
aad
push
outsb
and
loop
add
lahf
jne
mov
loopne
out
call
add
mov
mov
sti
add
iret
or
pop
flds
mov
cld
popa
in
add
pop
out
and
push
sub
stc
aad
mov
jg
adc
sub
or
xchg
add
jle
jp
or
dec
pop
push
pop
mov
pop
or
jbe
arpl
into
cs
ret
cmp
cmp
mov
imul
cld
cmpb
sub
test
inc
mov
lea
xor
sbb
xchg
sub
add
add
lods
mov
clc
fwait
nop
addb
rcrb
int
stc
cmc
adc
mov
sar
pop
push
in
xor
scas
xchg
stos
jo
add
mov
loope
add
or
adc
movsb
add
adc
inc
and
mov
bound
inc
mov
add
inc
dec
mov
push
arpl
mov
std
pop
imul
mov
dec
movsl
inc
add
mov
xchg
arpl
mov
mov
pop
addr16
je
and
xor
cwtl
push
add
mov
nop
jp
add
dec
jl
mov
sub
sbb
into
rorl
sbb
xchg
jb
jno
or
cwtl
push
push
push
adc
iret
call
mov
pop
jbe
stos
mov
add
fcmovb
insb
fdivs
sub
dec
fwait
pop
add
jb
add
mov
aas
lods
ret
pop
jge
cld
add
cli
out
cmpsb
push
lret
mov
hlt
jb
jle
imulb
jo
sbb
lahf
mov
add
leave
xchg
lret
in
ret
clc
adc
add
popa
ficoml
add
data16
enter
pop
add
loopne
stos
xor
xchg
add
inc
mov
xor
inc
pop
pop
mov
pop
xor
daa
pop
loopne
icebp
jno
add
and
addr16
test
dec
xchg
into
popf
movsb
hlt
leave
loope
cltd
data16
mov
mov
dec
sbb
imul
rcr
stc
add
imul
sub
popa
xor
repnz
jg
dec
ss
out
ds
push
mov
add
and
jae
shlb
adc
cwtl
adcb
adc
adc
leave
inc
in
xchg
scas
and
xor
rcrb
lds
loopne
movsl
xor
ret
push
add
insb
push
add
pop
jl
push
add
push
mov
jo
cmp
lods
mov
adc
mov
push
mov
push
and
fidivs
pop
or
jp
aas
mov
mov
icebp
jne
test
adc
jl
sbb
or
pop
fldcw
add
aad
fstpt
pop
iret
lcall
pop
std
or
inc
movsb
jge
stos
xchg
jle
dec
lods
iret
add
test
loopne
pop
movzwl
fwait
xchg
mov
mov
push
inc
hlt
sub
add
jmp
cli
addb
push
cs
jns
pop
dec
test
pop
cmc
or
mov
add
and
addb
xor
scas
dec
lods
repz
lods
rol
jg
push
cmp
sbb
add
add
js
rol
jl
lock
dec
xor
inc
jne
arpl
pop
jmp
pop
cmp
aas
add
inc
shl
in
fdivrl
sbb
inc
xor
xorb
sub
jne
es
sbb
mov
out
ljmp
mov
lret
and
enter
pusha
inc
push
mov
cld
das
enter
and
sub
cmovp
arpl
mov
add
mov
std
in
cmp
inc
jns
call
outsb
dec
mov
jb
xor
nopl
sbb
jl
and
pushf
inc
mov
rclb
push
scas
sbbl
jg
mov
dec
lea
pop
adc
shll
mov
insl
pop
rolb
mov
mov
sub
add
shr
adc
or
dec
add
loop
jmp
je
mov
hlt
or
jno
add
rcll
sub
cmp
inc
xor
addb
jmp
mov
mov
add
mov
cmp
mov
push
inc
add
push
or
pop
nop
mov
mov
icebp
or
add
fisubrl
sarl
mov
data16
add
in
mov
insl
add
or
or
sub
sbb
sti
push
addr16
push
into
add
nop
inc
in
insb
push
mov
sbb
push
js
popa
stos
dec
jb
add
mov
test
clc
lahf
and
mov
sub
cmp
jp
mov
lret
xchg
add
adc
xchg
in
call
inc
add
rclb
sbb
fnstcw
push
sbbl
sarb
aam
adcb
mov
pop
push
adc
cwtl
aad
xor
add
cmc
mov
es
in
xor
adc
into
push
sub
stc
mov
cmp
lods
add
add
and
push
sub
addr16
lret
dec
sub
add
sub
pop
jne
inc
rcrb
lds
push
addb
fs
dec
xchg
ja
ret
xchg
add
and
lret
ds
aam
or
out
add
subb
dec
icebp
add
mov
pop
out
hlt
xchg
cmp
mov
sub
inc
push
or
lods
icebp
add
rcrb
movsl
inc
add
xor
sub
xchg
add
repnz
stc
out
mov
xor
xor
add
mov
mov
sub
push
cli
mov
pxor
and
add
repnz
jae
clc
sbb
test
lcall
and
pop
std
fs
add
add
mov
add
xor
es
inc
xchg
cmp
jmp
inc
cmp
cwtl
xchg
in
imul
cld
cmpsl
sbb
imul
ljmp
jmp
pop
and
adc
push
pop
clc
pop
pop
pop
mov
call
cmp
insb
pop
mov
das
jae
out
dec
add
icebp
pop
cmp
mov
and
xchg
push
sti
add
lahf
pop
sbb
enter
add
shll
or
add
jae
pop
cltd
iret
js
add
push
incl
bound
sbb
sbb
jo
push
xor
mov
pusha
xchg
xchg
inc
insl
cmp
add
fstps
test
cwtl
dec
int
into
and
adc
add
mov
and
pop
test
and
add
sub
inc
and
test
add
jo
lock
aas
adc
lea
add
add
push
lret
jae
sbb
cs
add
cmpsl
or
sbb
ret
add
xor
xchg
xor
add
hlt
cs
push
frstor
xchg
sbb
subb
aas
mov
pusha
cmpb
clc
add
mov
lods
add
rcrl
adc
aaa
fldl
les
lea
lds
stos
add
jns
incb
lds
add
shrl
cwtl
xchg
mov
cmp
cld
jb
int
imul
push
push
ss
mov
push
std
add
add
mov
ljmp
mov
daa
dec
negl
pop
jbe
add
cld
mov
pop
mov
adc
pop
ret
add
jne
pop
scas
xor
add
jae
add
lds
imul
add
adc
xchg
pop
cwtl
add
lods
xchg
inc
imul
inc
mov
adc
sbb
lods
adc
dec
sub
sbb
push
cli
dec
fdiv
add
add
imul
or
mul
mov
aas
shll
add
push
mov
inc
sub
adc
nop
add
fcoml
mov
mov
push
inc
pushf
aaa
les
hlt
and
add
xor
or
jbe
xchg
repz
in
mull
cmp
add
sbb
mov
mov
jnp
leave
out
add
stc
test
and
mov
lds
aam
and
stos
lahf
mov
inc
xor
dec
add
and
fadd
inc
mov
cld
cld
push
hlt
sbb
pop
jle
outsl
add
add
cld
incl
add
xchg
jns
adc
insb
add
sbb
push
inc
add
mov
mov
sub
xchg
mov
cmp
mov
mov
pop
loop
stc
or
jne
pop
mov
xor
add
jecxz
iret
add
sbb
cltd
imul
lds
xchg
mov
ja
sub
add
loop
xchg
mov
jmp
call
pop
nop
inc
dec
inc
xlat
xor
je
or
mov
insb
sbb
mov
inc
add
xchg
jbe
pop
xor
xchg
call
sbb
rcll
rolb
adc
push
sub
and
add
jae
in
mov
jo
imul
aam
or
ficoml
xchg
stos
sbb
sub
enter
ret
push
dec
and
xchg
in
loopne
and
jg
add
mov
adc
scas
pop
fisubrl
sbb
ljmp
dec
enter
popa
outsl
push
out
push
push
inc
and
fstl
mov
cli
dec
add
sub
xor
leave
shlb
in
call
mov
mov
jl
add
cs
add
lahf
leave
xor
xchg
mov
inc
add
cmc
jb
add
push
insb
or
sarb
subb
dec
sub
add
adcl
sti
ror
adc
dec
in
lods
ja
fldl
testb
leave
jmp
and
add
or
arpl
push
sbb
jle
inc
int
add
inc
cmpsl
sbb
add
push
pop
and
xorb
cwtl
enter
mov
pusha
cmp
je
xchg
testb
jb
insl
shrl
push
dec
add
adc
ret
sbb
aaa
or
mov
push
ficompl
pop
testl
mov
and
add
out
repz
add
jp
clc
hlt
pop
sbb
rcrb
push
push
in
ficoml
dec
jmp
nop
push
add
dec
es
pop
fisubs
in
sbb
test
add
jb
rcrl
ja
es
adcl
mov
mov
mov
mov
in
mov
xor
adc
icebp
mov
iret
jnp
rol
idivl
add
sub
stos
add
out
sbbl
mov
pusha
add
xor
rcll
fwait
out
and
in
incl
mull
inc
pushf
mov
lds
add
and
push
or
mov
xor
fildl
pop
inc
std
xorl
xchg
es
dec
mov
popf
add
mov
fmul
fmull
in
add
mov
data16
lds
xchg
push
loopne
add
iret
sub
aaa
sbb
test
xchg
xchg
or
int3
loope
js
add
push
lock
pop
movsb
add
and
jp
inc
adc
add
inc
mov
loopne
shl
add
pop
incb
add
inc
fwait
inc
add
addb
outsl
ss
cltd
mov
dec
add
icebp
and
test
xor
cmpsb
push
adc
addr16
rorl
xchg
mov
outsl
loopne
push
fidivrl
or
add
lods
in
or
add
and
mov
sahf
adc
repnz
insb
jbe
sub
stos
add
sti
add
xchg
mov
sbb
cmc
cmp
jge
mov
dec
call
cmp
js
push
jae
pop
movl
lret
push
sbb
test
in
jl
and
push
pushf
outsb
add
xchg
hlt
gs
add
mov
test
dec
push
push
lret
sahf
add
lea
add
out
pop
mov
loopne
cwtl
in
mov
push
xchg
lahf
jno
pop
add
dec
xor
mov
daa
xchg
pop
adc
imul
mov
lret
pusha
xor
add
int
cmp
sbb
ljmp
lret
aad
pop
cmpsb
jbe
xorps
inc
aam
push
xchg
js
inc
pushf
cmp
mov
sub
inc
mov
call
imull
add
pmaxsw
push
clc
cmp
xor
fiadds
adc
daa
repz
cld
loopne
shll
repz
andb
cmc
shlb
xchg
or
lea
mov
ret
shl
cmc
fsubs
es
xchg
sbb
cmp
cmp
ja
xor
les
rolb
test
sbb
pusha
insl
aas
or
jne
jmp
sbb
push
or
add
mov
sub
push
xorl
or
jmp
pop
subb
sub
lret
pop
mov
push
mov
fisttps
cmp
sub
aaa
enter
outsl
push
push
movsl
push
add
mov
jp
inc
xor
dec
dec
fmull
push
xor
addl
nop
pop
pop
push
push
push
pop
fisttpll
enter
fmuls
pop
fucomi
data16
shrb
add
test
and
stc
pop
mov
add
cli
in
mov
cwtl
push
lock
add
jns
mov
sbbl
repnz
dec
call
cwtl
dec
xor
movsl
add
mov
inc
repnz
push
xchg
loop
cmp
push
jp
stc
fs
and
aas
cmovns
sti
sub
mov
add
fistpll
punpckhdq
cmpl
mov
add
xchg
aam
add
mov
mov
sbb
sbbb
in
xor
test
add
loope
add
scas
lods
mov
arpl
sbb
insl
into
add
and
mov
add
push
or
inc
lock
push
inc
outsb
std
mov
jnp
in
jle
aas
shlb
add
loop
sub
cltd
add
adc
sub
inc
cwtl
sbb
cmp
add
fnstsw
ror
outsb
in
ss
jno
pop
inc
cmpb
mov
nop
jno
adc
decb
or
add
dec
mov
dec
xchg
cmp
js
adc
loope
add
rorl
jg
jge
cmpl
xlat
fs
adc
leave
add
sbb
add
ja
int
dec
loopne
add
cmpsb
jle
test
sub
mov
jbe
push
pop
pop
jecxz
imul
nop
add
jl
ret
and
pop
jg
rcl
inc
pop
jmp
add
clc
hlt
jl
or
mov
jns
jns
push
into
or
shl
add
push
or
out
mov
add
leave
add
sub
movsl
mov
cs
insb
mov
adc
pop
xchg
lret
or
loopne
loopne
or
cli
xor
and
sub
mov
fs
push
or
testl
add
add
test
mov
stos
in
ret
push
mov
stos
fs
xchg
pop
mov
adc
sarb
pop
icebp
sbb
jo
shlb
add
xchg
mov
push
leave
inc
jnp
andl
dec
add
push
addr16
clc
cwtl
dec
test
add
xor
out
aaa
imul
push
cmp
lock
or
dec
lds
adc
stos
dec
mov
push
sahf
test
fs
add
fwait
mov
cld
aam
dec
rorl
insb
mov
int
fiaddl
ficoms
gs
dec
push
popa
popw
pop
xchg
int
jmp
and
mov
sbb
xchg
push
mov
sti
add
jmp
add
in
jmp
inc
out
dec
repz
inc
mov
dec
es
cld
add
mov
cmpb
fildl
cs
stc
pushf
push
cltd
lret
call
decb
bswap
clc
pop
lea
movsl
adc
or
shlb
sbbb
adc
ret
pushf
pushw
xchg
fcoms
jae
lahf
xor
inc
loopne
dec
shlb
cmp
shrl
int
mov
or
mov
pop
sbb
popa
aam
je
sbb
loope
sbbl
push
faddl
jb
test
dec
xor
add
ds
mov
xchg
sub
and
cltd
les
mov
and
mov
xor
xor
xchg
test
sbb
jb
jge
jp
push
dec
mov
sbb
jns
add
enter
mov
mov
nop
ljmp
push
out
cmc
jb
sub
jp
add
lret
add
jo
add
xor
push
xor
jne
and
out
cmp
mov
call
lret
add
inc
mov
pop
popa
testl
xchg
fs
popl
pavgb
push
inc
cs
test
add
mov
pop
xchg
std
mov
add
gs
sub
push
add
or
cmpsb
movsb
pop
or
push
ret
add
sbb
sbb
or
lret
roll
xor
pop
mov
xor
int
mov
mov
sbb
mov
add
pop
inc
xor
mov
popf
jnp
push
add
ret
push
test
stc
rcrb
lea
adc
sbb
lods
push
add
and
lods
add
ret
lock
mov
jns
in
dec
lock
mov
push
adc
lret
lock
ss
out
dec
sqrtps
test
clc
rcrb
mov
xchg
loopne
lods
test
popa
add
leave
or
sbb
xchg
test
stc
add
sbb
cwtl
cmp
sub
sahf
out
add
cmpsl
jmp
xor
push
jnp
pop
mov
xor
or
add
sbb
add
mov
call
les
inc
and
out
mov
scas
pop
or
inc
sahf
inc
ja
add
dec
or
mov
push
sbb
popa
fwait
add
clc
xchg
sub
add
mov
xor
fidivrs
fwait
add
inc
les
in
jne
mov
inc
add
jnp
stos
mov
call
sub
push
loope
rcrb
add
or
lock
mov
sbb
pop
xor
add
jl
add
push
pop
mov
rclb
xor
push
inc
ffreep
test
add
or
dec
push
in
pop
add
fdecstp
ds
adc
rcll
mov
jb
add
xor
sub
or
hlt
jno
out
cmp
lret
aam
mov
inc
test
mov
add
push
cmp
jg
arpl
add
lods
lods
mov
add
xchg
xor
mov
cmp
sbb
add
cmpsb
add
xor
movsl
mov
jmp
push
cmc
rorl
loopne
mov
incb
mov
jecxz
stc
add
pop
aas
ret
mov
or
xchg
mov
inc
mov
das
push
xchg
fsubl
lods
push
mov
inc
pop
int3
dec
jne
orb
sbb
mov
movsl
lcall
add
jle
repnz
sbb
add
mov
push
lods
cmc
mov
jbe
jl
add
popl
in
add
add
jge
rcrl
sbb
add
rolb
adc
or
and
push
cwtl
mov
add
pop
jae
psubusw
mov
fists
add
adc
movl
scas
mov
adc
testl
xchg
inc
sbbb
push
enter
nop
mov
cmp
mov
lods
jnp
ret
aas
dec
dec
add
sarl
pop
inc
aas
add
or
les
add
mov
das
adcl
add
or
add
lods
adc
add
and
insb
sub
call
cld
adc
add
or
jb
mov
aam
stc
roll
popa
cmp
in
sub
or
enter
add
push
mov
jecxz
stos
je
add
popa
xchg
lds
cwtl
adc
dec
jmp
inc
jg
add
imul
jl
add
shr
shl
shl
add
fsubrs
shlb
add
popa
xchg
xor
dec
popf
push
iret
aam
leave
add
inc
rorl
stos
and
sbb
and
inc
pop
je
jae
lret
pop
loope
sub
or
mov
stos
add
popl
mov
or
add
loop
lock
or
sub
in
loopne
pop
cmp
xchg
inc
clc
lock
sti
rolb
sbb
cmp
or
loopne
pop
cltd
add
push
pop
push
aas
and
dec
in
scas
xchg
add
sahf
and
cmpsb
add
push
xor
stos
sub
mov
or
dec
lret
ret
push
jb
ficompl
leave
test
mov
dec
int
mov
cs
and
push
jl
xlat
add
into
ljmp
and
repnz
mov
jns
xchg
or
pop
and
loope
inc
adc
cmp
sbb
mov
and
cmp
add
je
adc
enter
jl
scas
popa
call
fildll
clc
dec
outsb
add
cmpsl
cmc
in
adc
sti
add
xchg
and
adc
add
xchg
dec
or
pusha
imul
inc
ss
jmp
insl
mov
fwait
jmp
sbb
adc
cmp
jnp
push
fs
jb
add
fldt
add
fcomp
popa
jb
add
xorb
add
dec
movsl
inc
fdivrs
or
jmp
push
outsl
push
add
cmp
add
pop
mov
jnp
pop
xchg
in
add
or
repz
icebp
cmp
loopne
add
in
or
cmp
add
adcl
ret
es
daa
dec
mov
inc
push
push
add
ret
push
mov
pushf
loop
lcall
imul
fsub
das
fadds
hlt
mov
shlb
jne
les
xchg
je
cmp
xor
add
mov
sbbb
daa
sub
inc
ret
es
scas
test
incb
pop
iret
sub
mov
jo
add
mov
jno
push
mul
cmp
mov
sbb
and
rclb
mov
cld
dec
out
pop
pop
add
lds
jle
decl
and
add
enter
xchg
xchg
adc
mov
out
popa
jl
movsb
adcb
sub
add
pop
sub
sbb
pop
jnp
push
jmp
pusha
je
pop
scas
sbb
add
or
mov
mov
sub
and
or
test
cmp
sbb
lock
fs
and
js
add
jge
cmp
xchg
jl
ret
ficomps
xchg
dec
das
inc
test
adc
jl
sub
test
mov
popa
or
stc
mov
dec
sub
sub
test
jge
mov
rcrb
push
pop
mov
icebp
aas
xor
xorb
xchg
push
cmp
sbb
add
scas
fcomps
in
add
xchg
adc
mov
fdivr
imul
xor
mov
jbe
add
cmp
mov
js
scas
ja
xlat
add
jmp
inc
jns
pop
sarl
adc
add
lahf
inc
add
mov
mov
mov
movsb
aad
pop
fidivrs
outsl
mov
clc
fisttpl
addb
mov
ds
and
aaa
inc
rolb
push
sub
jae
push
cltd
leave
xor
addr16
adc
pusha
hlt
iret
movsb
fwait
xchg
xchg
add
out
rcll
sbb
inc
push
jne
dec
push
add
push
sahf
test
xchg
pop
add
imul
movsl
aam
and
rcl
pusha
inc
push
xlat
add
sub
xchg
std
enter
daa
lea
cld
into
xchg
mov
imul
add
inc
add
cli
arpl
add
push
stc
and
push
loop
in
insb
psubusw
fbstp
cwtl
fisubrl
lods
add
mov
sub
bound
ljmp
ret
add
add
icebp
dec
sbb
and
aas
test
lar
out
xor
mov
and
or
int
movsb
cmpsl
lods
add
adc
sub
fdivs
roll
test
mov
pop
in
sub
inc
pusha
pop
push
add
mov
dec
out
jg
add
xor
int
jns
cltd
mov
pop
hlt
clc
cs
push
pop
loopne
outsb
int
loop
insl
add
movsl
and
jp
add
fwait
pushf
jg
dec
and
mov
adc
lret
mov
lret
xor
jge
xlat
cld
dec
jge
push
xchg
mov
cwtl
ljmp
push
sub
sub
addb
pop
in
mov
add
mov
or
pushf
pop
fnstcw
cld
pop
popf
sbb
pop
push
xor
test
ficoms
shrb
lahf
lea
cmpsl
push
andb
scas
pop
js
add
fmuls
call
add
inc
jae
xor
cmp
add
outsb
call
adc
ds
andl
jle
dec
test
lsl
sub
xchg
xor
cltd
sbb
and
in
adc
add
outsl
and
loop
add
and
clts
shr
or
aas
lock
int
jl
lcall
daa
or
sub
add
out
add
or
sub
in
rorb
enter
add
outsl
in
std
sub
push
in
add
pop
pop
les
and
and
xor
fmuls
xor
jmp
jb
cmp
stos
add
fisubs
inc
push
hlt
fldl
add
outsb
popf
and
push
xlat
xchg
mov
mov
fimull
pop
add
aaa
es
into
jnp
adc
mov
mov
loopne
jns
cli
test
shrb
add
dec
add
mov
das
add
cwtl
loope
in
lret
punpcklbw
rorb
add
out
imul
sbb
rcll
xlat
ret
aas
xchg
inc
aaa
std
add
call
cltd
fbstp
mov
lock
loopne
je
jle
mov
loop
cmp
sbb
cli
shrb
sub
pop
add
mov
mov
rorl
and
sub
inc
aas
ljmp
xchg
orb
cwtl
mov
dec
call
jmp
xchg
add
fs
enter
lret
imul
pop
lods
lock
and
xchg
push
xor
movsb
push
daa
insb
jmp
and
ja
add
push
sub
pop
dec
mov
ss
sti
adcb
test
mov
dec
lds
addr16
outsl
out
iret
xor
cli
lea
add
pop
xchg
stos
pop
or
push
adc
add
jo
push
decl
inc
das
iret
sbb
sahf
add
cli
mov
cwtl
enter
out
add
scas
pop
testl
lea
add
jo
into
xchg
jb
add
mov
pop
hlt
shlb
sbb
int3
in
adc
lds
std
aam
flds
jp
test
push
fs
and
js
jg
mov
add
cs
test
lcall
add
mov
cli
add
je
fmull
push
add
push
cmp
sbb
aad
out
xor
and
popa
xor
icebp
jp
add
lahf
mov
xor
rorb
das
add
popl
pop
adc
add
sbb
imul
mov
cmp
and
sub
adc
cs
shll
mov
outsl
in
les
inc
cmp
push
out
or
out
movsl
cld
dec
add
or
xchg
lret
sbb
in
mov
int3
fcomp
add
call
sbb
mov
and
lea
dec
fcoms
pop
jg
popa
xchg
add
lcall
or
rclb
lahf
sbb
fiaddl
or
push
sub
jecxz
aaa
cmp
notb
loope
dec
rcrb
add
xor
aam
sbb
adc
enter
mov
inc
movsb
adc
mov
mov
jns
lock
repz
xor
add
dec
arpl
jle
or
inc
inc
sarb
in
adc
clc
loopne
and
call
push
xchg
adc
adc
gs
inc
sbbl
xchg
lcall
xchg
into
adc
add
push
loop
sti
mov
add
xor
adc
fstpl
sti
add
rolb
sub
jmp
and
add
sbb
ret
lea
pop
adc
jmp
ud0
imul
loope
add
add
mov
stc
xor
cmpsb
mov
inc
xorb
inc
cmp
pop
dec
or
rorb
hlt
cli
mov
lods
scas
pop
repnz
add
sahf
sbb
add
inc
and
mov
add
loop
xlat
cmp
and
aas
mov
jmp
addb
sbb
movsb
sbb
xchg
xchg
xchg
inc
test
mov
fcmovnu
sbb
movsl
add
pop
lcall
add
imulb
insl
jno
inc
xor
add
jb
imul
leave
loope
bound
cmp
dec
fcomi
ja
enter
xchg
mov
call
sbb
jl
jmp
pop
fcomps
adc
pop
ror
popf
fldl
xchg
add
dec
test
or
lcall
cmp
add
movzwl
mov
call
cwtl
add
inc
call
push
and
test
pushf
sub
int3
add
xchg
popf
filds
adc
lret
jmp
sub
add
out
xchg
leave
jp
sub
sahf
or
lret
outsb
sti
mov
inc
shrl
xor
in
test
add
push
adc
mov
orl
or
xchg
pop
push
jecxz
addr16
repnz
nop
pop
and
jb
ljmp
and
cltd
repz
ja
lods
out
jg
addb
nop
in
call
loopne
decb
cmp
lock
fisubl
loopne
push
push
out
in
jecxz
add
mov
div
adc
pop
inc
cmp
aaa
sbb
add
int
std
push
inc
into
sbb
mov
dec
pop
arpl
add
lgs
push
lea
push
out
nop
xlat
or
addl
lcall
sahf
sub
repz
mov
inc
xchg
popa
enter
pushf
lret
and
cmpl
loop
sbb
jo
daa
fcomps
push
rorb
popf
push
jb
leave
cmp
jge
enter
and
mov
sbb
adc
cmp
pop
pushf
xchg
mov
cmpsl
out
add
ds
loope
out
mov
push
sarb
cld
test
fwait
xchg
or
add
lods
fs
lahf
jg
or
adc
aas
jle
cmpl
int3
xchg
out
add
ljmp
dec
inc
mov
in
cmp
cltd
leave
xorl
loope
flds
das
scas
pop
mov
pop
rorb
ja
stos
inc
add
clc
inc
mov
roll
push
hlt
scas
fistpll
jo
aad
sub
or
dec
cmp
cmp
mov
and
rcrb
gs
pop
xor
aaa
cltd
std
sti
jge
inc
add
xchg
pop
out
jge
xor
xchg
stc
incl
dec
jns
add
sbb
mov
add
sbb
dec
xor
clc
sub
mov
iret
nop
add
inc
test
incb
pop
icebp
stos
fldt
mov
movsb
dec
dec
adc
movsb
in
aam
pop
push
mov
daa
cli
movsl
cld
rorb
inc
out
dec
loope
add
cmp
xlat
cmp
lods
jp
adc
dec
enter
or
fsub
pop
pusha
andl
sar
inc
ja
and
notl
add
imul
add
add
or
das
fs
stos
mov
add
das
xor
out
pop
in
ret
cmp
push
cld
add
mov
rolb
hlt
movsl
cli
add
nop
scas
mov
cmp
repnz
nop
and
inc
repz
xor
imul
jne,pn
or
incl
jg
lea
sub
and
scas
cmp
add
inc
addr16
pusha
je
adc
and
jp
cmp
loop
out
nop
in
imul
push
mov
add
mov
dec
inc
pop
pop
icebp
fisttpll
bound
jne
mov
ljmp
aam
mov
dec
subl
shrl
or
xor
jae
decb
mov
sbb
addr16
insb
lods
add
stc
jg
push
lahf
add
and
les
push
add
jbe
out
dec
mov
and
sub
out
sub
xchg
add
mov
addb
inc
fsubrs
inc
addr16
rorb
add
or
mov
sbb
jo
add
test
add
pop
dec
adc
mov
stc
rclb
inc
adc
mov
into
add
sahf
andb
mov
add
push
or
xor
or
out
call
and
lret
pop
in
es
add
into
pop
add
movsl
inc
inc
popf
aaa
in
insb
out
std
xchg
and
jb
clc
lds
pop
outsl
pop
mov
mov
enter
mov
loop
rolb
out
outsl
addps
mov
popa
roll
js
arpl
pop
dec
nop
add
out
fildl
subb
pop
popf
bsf
sbb
mov
push
shlb
pop
in
adc
and
sarb
bound
je
add
inc
pop
push
daa
dec
jo
and
hlt
jge
outsb
mov
dec
or
xchg
cmp
cs
andb
aas
add
cld
mov
add
adc
xor
push
test
push
stos
rolb
insb
mov
lods
ss
and
mov
das
xlat
movsb
andb
add
xorl
cs
loope
mov
movsl
lods
pop
and
mov
dec
mov
add
mov
sbb
add
lods
aam
cwtl
imul
sub
movsb
test
xchg
jne
testb
xchg
pop
add
push
inc
stos
in
and
mov
inc
scas
xchg
add
sbb
hlt
inc
mov
lea
mov
xchg
addb
jp
ret
out
subl
push
hlt
cmp
nop
xor
adc
loopne
lahf
push
clc
mov
push
dec
mov
inc
xor
adc
jns
inc
sbb
adc
imul
pop
enter
jl
rorl
xor
push
dec
aaa
andb
jae
loope
lahf
loopne
inc
dec
gs
or
shrb
add
push
xchg
and
cmp
dec
or
adc
cmp
sbb
xchg
ficompl
rol
popf
imul
or
add
stos
and
push
cmc
outsb
adc
or
add
stos
xchg
adc
pop
fidivrs
xchg
hlt
inc
jecxz
scas
sar
iret
lds
jge
ljmp
xor
mov
add
or
add
and
aam
sbb
nop
jae
add
dec
cli
movsb
shl
adc
int
test
sti
div
add
mov
jne
shl
les
mov
mov
filds
sub
pushf
into
fwait
jl
jmp
inc
add
daa
push
negb
add
cmp
and
xchg
pop
addr16
xchg
insb
shll
adc
loop
dec
mov
cmp
xlat
test
imul
pop
outsb
push
cmp
mov
frstor
imul
in
and
add
insl
push
push
pop
push
dec
fs
scas
aaa
sub
mov
push
add
lods
orl
sub
jecxz
shll
xor
xchg
clc
add
jae
jb
add
xor
xor
stos
jo
movsb
push
enter
push
clc
cmpsb
xchg
add
mov
jecxz
add
fwait
and
push
sbb
stos
adc
mov
aas
cli
jae
or
ss
add
hlt
pop
add
scas
dec
iret
in
and
cmp
and
and
pop
adc
mov
out
inc
sbb
cli
adc
shrb
test
sbb
popa
dec
sbb
les
dec
sbb
push
sbb
test
and
rclb
cmpsl
mov
and
inc
mov
nop
or
xchg
fs
xor
inc
or
xchg
inc
xchg
aas
scas
and
leave
add
or
test
dec
or
gs
nop
aaa
movsl
or
xor
xor
inc
or
sarb
pop
sbb
movb
arpl
aad
push
mov
inc
cs
lods
push
fdivr
pop
jmp
add
dec
stos
cmpl
add
lret
and
pop
mov
cli
cwtl
xchg
pushl
rorb
sbb
xchg
and
jnp
lea
scas
mov
jbe
test
push
inc
jecxz
outsb
nop
pushf
mov
or
fwait
test
add
lret
divb
add
cmp
iret
outsb
push
adc
jns
add
insl
pop
xchg
aaa
cmpsb
inc
into
push
push
mov
call
or
divb
push
sbbb
shll
push
aam
mov
inc
jg
mov
adc
jp
adc
outsb
sarl
add
pop
cmp
mov
clc
xchg
mov
jne
cli
xchg
ds
or
out
add
xchg
mov
dec
and
test
xchg
sahf
loope
out
roll
sbb
ja
dec
mov
dec
out
xor
subl
mov
push
or
mov
xchg
cmp
aam
mov
fbstp
cltd
push
mov
leave
mov
hlt
cmpsl
fiadds
xor
call
decl
icebp
ja
or
push
insl
negb
ss
dec
das
add
xchg
outsb
std
hlt
xchg
cmpsl
les
test
or
in
xor
mov
faddl
cmp
add
add
sbb
dec
pushf
scas
and
and
xchg
adcl
cmp
sbb
mov
dec
test
xorb
jecxz
pop
icebp
call
leave
push
popf
cld
lock
scas
xor
cmpsb
popa
cmp
in
pop
cmp
mov
push
int
add
stc
pop
sub
inc
sbb
clc
mov
inc
out
pop
mov
sub
xchg
lcall
push
mov
shl
dec
je
movsl
mov
cmpsl
aam
mov
lret
pop
sub
or
mov
or
mov
rol
mov
push
xor
xor
cmp
repz
jo
lcall
rclb
notl
orl
sbb
and
sub
in
addr16
push
pop
push
add
or
mov
adc
mov
push
cwtl
clc
cs
and
inc
xor
cli
fldz
insl
adc
cmp
sbb
push
mov
mov
push
or
mov
jns
jecxz
mov
xchg
sub
mov
add
das
xchg
lods
or
cmp
add
inc
inc
pop
sub
mov
adc
loop
aad
xor
xchg
push
inc
test
and
movsb
jnp
pop
test
adc
les
mov
adc
xor
pop
push
adc
adc
mov
add
cli
pop
adc
jne
arpl
push
aas
mov
js
and
ds
sbb
mov
push
xchg
jg
sbb
mov
and
inc
mov
scas
test
xor
sub
and
or
ja
sarb
mov
cmc
push
jns
addb
cmp
fmuls
cmp
sbb
mov
xchg
add
mov
pop
arpl
popa
enter
or
xchg
movsb
ficomps
add
stos
in
std
dec
addb
xlat
adc
push
out
mov
add
pop
sub
cmp
idiv
test
and
mov
enter
vorps
add
sub
jmp
jno
rorb
rol
mov
aad
das
push
sub
xchg
pop
fsub
adc
pop
xor
mov
xchg
sub
sub
mov
and
or
in
inc
call
scas
das
jnp
inc
xor
int3
xchg
dec
xchg
dec
mov
jne
inc
and
adc
sub
sub
adc
mov
or
int
sarl
or
movsb
sbb
xor
movsb
or
xor
sbb
or
mov
repz
pop
xor
sub
pop
add
xor
mov
gs
outsl
jecxz
jp
cmp
ret
enter
loope
adc
fnstsw
push
notb
or
cmp
xor
sbb
ss
lds
lods
shll
faddl
xchg
clc
push
aas
mov
mov
je
sbb
mov
decl
pushf
imul
pusha
add
sub
and
aam
out
lcall
xor
add
sub
mov
insb
sbb
shll
xchg
mov
push
mov
or
jecxz
movl
fnstenv
adc
cwtl
fcompl
outsl
ja
sub
andb
movsl
add
push
pop
adc
pop
jbe
cld
pop
repz
add
inc
int3
mov
int
pop
pop
push
adc
subb
mov
cltd
movsb
inc
cwtl
ret
dec
adc
inc
cmpsb
sub
adc
lret
stos
mov
ret
mov
jbe
ljmp
adc
adcb
movb
mov
inc
add
cs
in
xor
inc
add
and
xor
sub
sub
aad
out
orb
or
cmp
ret
ljmp
add
sti
shrb
sub
cs
sub
inc
push
pusha
ds
sub
adcl
mov
pop
adc
popf
cltd
outsb
pop
sbb
lods
int3
cwtl
mov
fstpl
cwtl
add
add
inc
outsb
std
pop
dec
inc
mov
adc
mov
or
lret
add
ljmp
dec
fcoms
repz
xchg
cmp
mull
call
add
push
outsb
cmp
add
rclb
hlt
cmpsb
and
fbld
and
movsb
mov
xchg
notl
push
nop
loop
or
pop
int3
sti
jge
cs
or
xor
mov
out
int3
das
jmp
fs
adc
hlt
pop
mov
fs
adc
add
in
ds
scas
pop
je
add
outsl
xchg
xlat
add
mov
fsubs
xorb
sarb
push
add
mov
repz
hlt
sbb
pop
out
jns
xchg
or
xchg
dec
call
jae
push
adc
add
je
push
rcll
adc
dec
cld
adc
mov
adc
aaa
ret
nop
cld
rcll
pop
dec
addb
ret
cmp
inc
shll
xor
or
add
dec
jmp
in
mov
cmp
std
orl
mov
mov
mov
mov
mov
inc
fsubrs
pop
andb
and
dec
insb
mov
fidivs
and
nop
push
sbbl
dec
pop
xor
out
sbb
js
add
cmp
pop
and
add
call
leave
mov
mov
push
xchg
fadds
sbb
into
test
aad
stc
and
daa
clc
pop
js
les
and
clc
ss
mov
sbb
stos
jp
add
lock
sub
fdiv
or
inc
pop
gs
hlt
je
adc
xchg
add
insb
xchg
dec
inc
shll
and
inc
loope
pop
xchg
lods
popf
daa
push
je
add
scas
xor
inc
or
stc
sbb
outsb
mov
rcrb
and
inc
lds
fldt
add
in
mov
scas
in
or
nop
fstps
cld
dec
mov
or
stos
push
mov
adc
mov
andb
add
out
add
jle
mov
sub
inc
push
pop
iret
out
adc
push
jno
std
testb
popf
sub
mov
add
ret
fs
add
outsl
xor
in
cmp
cltd
shll
mov
inc
fcmovnb
in
inc
hlt
test
cwtl
outsb
or
call
lret
shll
fidivl
and
call
lret
xchg
and
mov
add
adc
movsl
and
mov
sbb
lods
outsb
cwtl
mov
faddl
inc
shll
xlat
mov
leave
mov
add
add
sbb
aaa
mov
test
seta
push
pusha
mov
add
lret
mov
filds
inc
mov
add
pusha
out
lcall
out
ds
dec
test
xchg
mov
mov
or
pop
sub
pop
cmovns
push
fidivl
add
sbb
add
adcl
aas
test
das
jecxz
add
dec
fndisi(8087
ss
rcl
std
aaa
push
sti
jle
cmp
or
pop
add
push
mov
pop
add
mov
int
dec
lds
fsubrs
xor
stos
add
lods
jae
dec
xchg
dec
add
jg
push
sbb
add
lds
add
dec
out
jmp
push
nop
lds
push
or
rdtsc
cmp
jo
das
out
jl
add
in
cmp
add
out
mov
add
push
mov
or
sbb
mov
test
test
scas
mov
and
out
jb
pop
sub
lock
dec
pop
add
cli
cwtl
and
xchg
or
mov
cmp
lods
mov
add
negb
add
into
add
pop
sbb
cmp
add
insl
jb
iret
add
mov
or
pop
sub
xor
dec
jns
ja
data16
arpl
lea
sbb
sti
fisubl
loopne
add
pop
push
add
bound
iret
pop
dec
call
clc
or
jecxz
sti
fnstsw
rcll
add
pop
sahf
cmp
lret
scas
nop
mov
out
xchg
dec
popf
outsl
push
add
repz
or
jae
add
sbb
shrl
dec
or
lods
pusha
cld
xor
push
add
adc
push
pop
adc
add
xor
cmpsb
jg
aas
mov
cmp
or
mov
es
outsl
imul
and
in
jne
mov
fidivs
rcrl
add
dec
gs
mov
hlt
and
adc
jge
out
xor
jmp
sahf
inc
add
sub
sbb
push
jle
fildl
mov
add
xor
xchg
in
in
bound
lahf
popa
cmp
enter
nop
fwait
jno
add
ret
faddl
mov
call
mov
dec
push
std
fwait
adc
ja
cmp
inc
cmp
mov
push
xchg
add
jmp
dec
pop
push
iret
jg
leave
iret
in
int
int3
cmp
inc
pop
rol
ljmp
lods
inc
jg
lahf
add
mov
sbb
clc
pushf
pop
out
repnz
lret
push
xchg
jle
add
sbb
dec
push
subl
xor
sub
pop
jmp
rorb
add
adc
pop
dec
shl
jge
xor
or
push
jg
les
lods
ret
shll
jle
cmp
sbb
insl
mov
sub
popf
push
add
or
and
dec
into
fisttps
adc
flds
pusha
int
out
cs
add
sub
rorb
add
xor
jae
pusha
popf
dec
cli
rolb
int3
inc
pushf
add
aaa
icebp
dec
fcmovb
stc
pop
je
pop
push
xor
add
or
insl
ja
jecxz
lock
clc
cwtl
in
add
shl
pop
push
and
and
lret
cmc
call
sub
pop
sbb
xchg
cmpsl
cmp
mov
call
xor
cwtl
push
xchg
jae
jbe
cmp
xor
aas
mov
sbb
dec
add
popl
pop
pop
push
add
cmp
pop
sbb
inc
add
lahf
fisttps
dec
xor
lea
mov
or
cmp
push
rclb
lock
lods
add
out
cmp
push
pop
xchg
iret
mov
lods
pop
out
gs
inc
add
jg
xchg
dec
inc
fsubr
add
cmc
cmp
stos
cmp
sbb
cmp
test
gs
mov
jg
cmpsl
push
mov
jns
jno
rcrb
jmp
push
pop
repz
inc
pop
add
add
stc
dec
adc
add
rcrl
lds
push
mov
mov
ret
enter
and
mov
cmp
inc
adc
cmp
xchg
fdivr
pusha
jecxz
cli
jb
jns
fnsave
sub
les
cmpsb
pop
cltd
sbb
repz
lea
cli
add
movsl
lret
mov
add
or
test
pop
adc
pop
mov
mov
je
shlb
mov
scas
fcoml
es
add
push
inc
and
xchg
test
pop
inc
pop
mov
cwtl
data16
inc
pop
cmp
cmp
pop
incb
pop
or
cli
int3
repz
sbb
add
cmp
or
outsb
xchg
mov
call
dec
add
adc
fcomps
in
pop
adc
adc
testl
and
call
adc
ja
mov
rolb
dec
outsl
adc
lock
popa
ror
ss
imul
mov
pusha
gs
add
addr16
xor
add
cwtl
in
mov
mov
js
xor
outsl
subb
lock
inc
mov
dec
jb
adc
add
dec
fs
ja
and
loopne
and
mov
push
jb
add
cltd
push
addb
xor
lret
sub
cmpl
xchg
ds
or
mov
jno
mov
data16
enter
push
add
movsb
push
sub
in
fs
sbb
jno
jecxz
jg
popa
ss
push
shl
int
sbb
or
data16
das
cmp
add
outsb
mov
pop
jo
add
fsubr
mov
xchg
sbb
sahf
cmpsl
xchg
add
sbb
mov
lret
inc
xor
xor
cwtl
add
sub
mov
and
add
pop
cltd
sbb
icebp
add
jp
loope
dec
neg
pop
movsb
arpl
xchg
and
out
xor
outsl
mov
add
pop
pop
les
cltd
mov
mov
leave
add
cmp
arpl
add
cmp
in
shrb
gs
xchg
add
xor
rolb
hlt
fidivrs
rcrb
addr16
movsl
stos
sub
add
jecxz
cmp
lock
shlb
pusha
or
cltd
add
jo
aad
out
out
xchg
cwtl
add
adc
insb
mov
pop
dec
dec
inc
mov
nop
iret
xor
xor
sti
in
lods
in
adc
das
mov
cmp
movsb
add
rol
flds
ret
lret
fldt
or
push
cmc
mov
inc
in
sbb
jne
push
and
add
jmp
push
or
push
push
pop
je
idivb
xor
or
xchg
lods
ja
nop
push
cltd
push
imul
out
push
jle
popf
cmp
jg
xchg
sbb
pop
xor
and
push
xchg
sbb
hlt
xlat
fs
sahf
ja
outsb
add
push
adc
fdivl
push
mov
dec
ret
cmp
jo
mov
xchg
clc
push
or
pop
data16
lock
ret
sbb
jne
xor
xor
lods
mulb
mov
scas
pop
and
sbb
rolb
dec
mov
ja
push
add
xchg
pop
mov
test
ficomps
dec
add
rcrl
pop
jmp
in
pusha
out
xchg
dec
popa
int
imul
add
jge
mov
push
into
iret
add
in
hlt
pop
faddl
add
mov
sbb
lea
sti
gs
loope
xchg
leave
sbb
loopne
lds
or
adc
ss
js
out
add
out
jl
mov
dec
mov
push
insl
mov
or
in
sbb
fadds
das
paddq
lret
sub
cmp
out
pop
sbbb
push
mov
cwtl
pop
jne
fdivl
daa
repnz
and
nop
jg
rorl
push
incl
lods
in
or
aaa
and
mov
adc
sbb
pop
pop
xor
into
subl
pop
xchg
push
sub
mov
rcrb
jmp
inc
sbbl
rolb
stos
add
outsl
sahf
in
fdivs
or
lods
lods
lock
jle
add
test
dec
popf
add
fstl
and
lea
sbb
mov
mov
cmp
lret
lret
loope
mov
nop
into
pop
ror
std
add
into
jg
add
daa
mov
add
mov
mov
add
mov
pop
les
push
mov
lret
sbb
jne
rclb
adc
in
cltd
dec
pop
push
rcll
mov
daa
adc
filds
pusha
js
add
movsl
add
push
mov
xorl
cmp
cld
mov
push
xlat
mov
pop
call
pop
std
sub
mov
add
dec
pop
js
enter
push
mov
aad
addr16
add
aas
lock
pop
jecxz
jns
repz
mov
xor
stos
mov
xchg
sbb
cmp
test
cmp
insb
mov
adc
out
fadds
mov
decb
xchg
mov
jb
pop
mov
scas
andb
jge
dec
sub
push
cmovs
sub
xchg
testb
add
arpl
push
cmp
fwait
add
mov
das
mov
sbbl
in
rol
xor
add
cmp
pop
repnz
add
ret
out
mov
nop
xor
and
in
cmp
pop
inc
add
adc
lock
or
add
mov
or
pop
dec
loopne
jp
js
add
movsl
xor
pop
pop
pop
fildll
fnstsw
fimull
insb
xchg
jno
addb
add
adc
jge
ja
pop
xchg
adc
pop
fldl
inc
xchg
test
loopne
movl
fidivl
and
mov
add
cmp
setnp
pop
pop
add
sub
push
bound
stos
rclb
shlb
xchg
push
xchg
nop
fs
ret
inc
daa
mov
fiadds
inc
dec
xchg
add
push
lock
mov
jbe
cmp
or
fists
mov
loopne
cwtl
ud1
and
in
sbb
test
out
jo
dec
xor
in
add
mov
lods
arpl
fwait
ret
add
jmp
addb
mov
mov
jmp
cmpsb
stc
enter
jne
int
arpl
inc
fdivs
lods
add
out
jle
mov
add
mov
jns
add
loop
add
push
add
or
test
add
mov
clc
add
lret
jecxz
cmp
sahf
jge
scas
pushf
add
loop
loopne
mov
add
adc
add
cmp
cwtl
add
dec
cmp
xchg
adc
outsb
movsb
pop
repz
leave
push
add
mov
dec
ljmp
imul
mov
popa
aaa
stos
in
add
jnp
mov
push
mov
sbbb
mov
inc
xchg
incl
mov
or
push
xor
insb
add
insl
test
test
pop
faddp
shrl
rcrb
xchg
leave
jns
imul
scas
add
dec
clc
inc
aam
je
adc
mov
mov
cmp
cmpsl
add
dec
sbb
add
imul
andb
or
cwtl
mov
enter
popa
je
mov
adc
cmp
cmp
int
inc
and
xor
xchg
sar
data16
filds
vpclmulqdq
dec
jmp
mov
fs
mov
add
roll
in
test
mov
xchg
and
testb
out
sbb
nop
sar
add
mov
cwtl
and
out
add
stos
push
imul
push
stc
jno
ljmp
sti
add
lods
lock
out
sahf
sbb
inc
add
in
add
xorl
mov
pop
dec
cmp
inc
loopne
cwtl
int3
xchg
scas
add
loope
daa
add
adc
ret
mov
dec
stos
pop
add
lods
xchg
inc
add
out
or
mov
add
mov
inc
xchg
jbe
xchg
out
cltd
cmp
push
push
push
pop
xchg
cwtl
out
or
lock
es
repz
mov
arpl
push
add
jl
inc
and
add
sub
dec
jne
shrb
push
mov
subl
aaa
pop
in
aad
rcr
cmpsb
xlat
out
movsb
sbb
jno
sbb
add
or
cmp
popf
mov
sub
jp
add
inc
aas
xchg
imul
je
add
stos
push
pop
mov
push
inc
add
adc
jp
jmp
adc
xchg
mov
add
push
cwtl
imul
ja
add
adc
fildl
fistpll
in
ret
adc
imul
out
rclb
mov
outsb
mov
pushf
arpl
lret
lahf
popf
int
xor
lcall
fnstsw
enter
xor
dec
pop
call
jns
cli
push
js
sub
ss
push
ljmp
mov
adc
add
imul
or
in
mov
sbb
jae
adcb
add
pop
mov
loopne
mov
mov
dec
aas
add
cmp
push
mov
out
adc
mov
jo
les
push
subb
clc
cld
add
cmpsb
aaa
add
and
adc
mov
add
push
and
add
daa
xor
mov
cmpsb
mov
shrb
lea
sub
xchg
cmp
sbb
aas
punpckhbw
add
or
push
xor
sub
testl
xor
or
xor
xchg
cli
jns
dec
inc
add
push
cltd
repnz
xor
add
jecxz
pop
cmpb
sbbb
mov
fwait
addl
jmp
cmp
sbbl
shlb
das
ds
cmpb
pop
add
pop
mov
stos
lods
xchg
jecxz
xorl
push
adcb
mov
hlt
sub
push
out
movsb
add
add
add
pop
add
xorl
jecxz
dec
mov
mov
mov
add
sbb
adc
xchg
inc
daa
out
push
nop
xor
lock
mov
jo
pop
add
push
xor
out
aaa
fsubrl
cld
rclb
push
out
test
idivl
sbb
push
mov
pop
in
add
adc
sub
jge
pop
leave
bound
and
inc
add
clc
sarl
mov
out
mov
push
cld
ja
jns
fwait
cmp
ret
sti
push
xchg
test
sbb
sbb
fsubl
adc
inc
hlt
sbb
inc
cld
js
lods
add
movsl
or
out
and
sbbb
shlb
mov
rorb
inc
inc
lds
mov
ja
jb
jbe
add
test
ret
mov
imul
shl
rcrb
aaa
dec
aad
clc
stos
lret
add
sub
frstor
das
xor
add
fnstsw
lahf
outsl
outsb
add
dec
shll
je
sbb
dec
int3
jno
not
adc
push
popf
ja
add
xchg
fmuls
fnstcw
pusha
push
mov
push
dec
arpl
je
out
add
sbb
inc
add
jle
lods
faddl
out
adc
mov
sbbl
int
or
cli
push
pop
cmpsl
lock
out
add
scas
xchg
add
mov
rclb
dec
mov
pusha
int
and
jo
clc
mov
rcl
out
je
sbb
mov
adcl
cmp
stos
jnp
sub
cwtl
clc
push
push
xlat
sbb
cmc
push
xchg
rorl
ret
fbstp
sahf
push
pop
add
adc
nop
push
daa
mov
and
and
jne
into
subb
inc
popf
shlb
stos
shr
mov
xor
mov
add
or
loope
les
xor
or
mov
pop
jle
shlb
xorb
insb
push
jno
test
jl
lods
mov
pop
and
pop
pusha
mov
sub
and
pushf
add
ror
call
mov
push
shr
add
sub
sahf
mov
sbb
jo
jns
lcall
jb
mov
adc
lods
bnd
add
stos
sub
xchg
nop
cs
jmp
mov
push
push
add
test
add
je
fldz
mov
lods
lea
insl
push
fcmovnbe
mov
sub
fiadds
add
negl
sub
xor
imul
jnp
clc
mov
push
push
hlt
es
ja
loope
xchg
push
cmpsb
rcrb
lock
pop
add
xor
inc
pushf
add
and
jmp
dec
aaa
or
in
mov
int3
lock
call
inc
cmpb
push
or
into
insb
mov
cwtl
ljmp
mov
or
add
ljmp
mov
frstor
sbb
xor
cmpb
add
dec
mov
pop
inc
je
add
repz
add
decb
into
sub
in
sbb
test
leave
loop
fs
subl
stos
daa
cmp
and
icebp
add
movsl
jl
mov
or
dec
das
jecxz
mov
mov
andb
jp
add
cld
push
aaa
inc
inc
add
or
rorb
test
jne
ret
sar
mov
or
sub
insb
loope
inc
add
add
aaa
rorb
daa
jae
js
pop
sub
fimuls
mov
mov
pop
js
or
dec
push
in
mov
std
push
add
push
aaa
jge
add
loop
pop
mov
pusha
sti
cmp
add
push
cld
loop
pop
sbb
push
fisubrl
xor
push
mov
xchg
mov
jg
lret
call
add
pop
mov
push
xor
imul
cmp
mov
loope
lods
add
mulb
jecxz
mov
and
ds
sbb
lret
xor
inc
popa
xchg
add
jge
sub
adc
sub
push
cwtl
mov
mov
add
mov
popa
test
fwait
add
cmc
inc
push
mov
dec
pop
dec
sbb
mov
ljmp
mov
add
dec
sbb
mov
pop
cmpb
leave
pop
fldenv
mov
sbbb
inc
sub
mov
lds
mov
mov
add
andb
nop
fstps
push
add
dec
movsl
filds
arpl
inc
adc
add
xchg
sub
push
loope
movsb
add
shr
out
push
movsl
push
push
pop
mov
lods
add
push
cmp
subb
xchg
dec
cmp
add
bound
lods
adc
test
xor
clc
push
decb
fcomp
iret
pop
sub
cmp
mov
mov
ds
push
cwtl
dec
add
push
xchg
adc
pop
mov
sub
cmp
stos
lea
jae
aad
lds
mov
ret
mov
dec
sub
inc
popf
jne
dec
xchg
fisubrs
add
in
add
sbb
clc
push
inc
inc
call
mov
in
ss
add
mov
out
rcrb
cmp
mov
add
fdivrs
mov
filds
arpl
pop
insb
cmpsl
nop
sub
dec
mov
cmp
test
lcall
rcll
pusha
ja
jge
call
sub
sbb
push
mov
push
rorl
loopne
mov
dec
sar
arpl
sti
add
jp
incb
sbb
lahf
out
aaa
sub
arpl
cmp
fcomps
in
cmp
rorl
std
lods
mov
cmp
adc
mov
sbb
in
repnz
add
xor
xchg
mov
jge
daa
add
fsubrs
lcall
jecxz
loopne
pop
rclb
aaa
inc
dec
mov
add
jbe
add
and
add
aad
dec
xchg
clc
jmp
add
fwait
mov
les
addb
or
mov
adc
imul
jne
stc
add
int3
inc
mov
jno
pop
add
incb
sbb
mov
scas
bnd
and
ds
sub
adc
push
add
mov
add
cld
mov
push
cli
add
mov
cmp
stos
cmpsb
fisttpl
call
psubusb
jae
enter
addl
cmp
mov
sub
jbe
lods
mov
jmp
mov
call
or
mov
movb
push
mov
push
add
data16
add
fsubrs
arpl
mov
lret
test
or
mov
stc
dec
and
aas
daa
sbb
dec
iret
push
inc
add
popa
pop
data16
add
int
lods
dec
push
cld
out
movb
stos
ret
jp
int
xlat
add
bnd
sti
and
out
add
clc
mov
cmp
lds
outsl
dec
arpl
push
mov
int
test
or
inc
fisubl
loopne
xchg
aad
add
adc
push
push
int3
popf
mov
aas
lea
ret
and
pop
addr16
pop
mov
pop
sbb
lds
cs
das
dec
andb
add
push
in
adc
pusha
and
or
or
out
xchg
add
repz
sub
decl
and
inc
adcb
xor
mov
stos
bound
cld
pop
or
negl
mov
pop
inc
incb
cwtl
cmp
or
out
das
xchg
std
mov
lock
add
ljmp
dec
sub
in
aas
push
mov
add
cmpsb
push
adc
push
sub
jns
int
mov
cmp
in
add
or
or
das
roll
flds
fdivrl
lds
pop
mov
pop
lcall
aad
or
or
mov
dec
imul
jp
lock
mov
inc
add
fwait
add
pop
add
addl
es
addl
lea
imul
and
adc
dec
add
cmp
rcrl
mov
je
jg
mov
xorb
cmp
xchg
ret
sbb
mov
int3
stc
js
push
movsl
dec
je
push
sahf
bound
xchg
push
outsb
mov
dec
dec
dec
lods
add
rorl
pop
mov
jnp
add
sub
mov
aam
jl
add
inc
daa
mov
fimuls
enter
mov
fwait
cli
nop
scas
jno
add
aaa
add
jae
add
mov
cmp
sbb
or
push
mov
cvtpi2ps
adc
push
lret
mov
dec
sub
pushf
cld
xchg
popf
outsl
add
inc
adc
out
decl
div
push
je
adc
push
data16
mov
jl
test
xchg
or
lock
add
lea
push
imul
addb
cmpsl
cmp
sub
inc
add
pop
ret
dec
push
pusha
rcrl
cmp
adc
cwtl
sbb
jb
pop
shlb
push
imul
into
inc
cltd
jl
hlt
jne
jle
push
sub
adc
mov
cmp
xchg
mov
xor
loopne
pop
add
ret
mov
rolb
int3
test
roll
push
xchg
jns
rclb
sbb
repnz
sub
jbe
jle
push
xor
add
pop
or
roll
inc
lret
mov
add
adcl
dec
xchg
push
ja
aad
mov
nop
movsb
jmp
push
jb
jne
ja
pavgw
pop
pop
call
adcb
popf
sbb
lcall
int3
out
fmull
or
loope
push
mov
icebp
cmovbe
sub
jp
jg
test
fisubs
lcall
adc
and
pusha
stos
or
lods
pushf
xor
incl
mov
mov
adc
mov
add
mov
inc
aas
ficoms
xchg
add
stos
cmp
ja
cld
add
hlt
lahf
movsb
call
movb
insb
cmp
or
fcomi
and
cli
xor
sti
out
outsl
imul
pushf
insl
cmpsl
cltd
enter
fwait
cmp
mov
push
addb
je
cmp
dec
lds
add
xchg
repz
cmp
add
mov
decl
push
inc
pop
push
stos
xor
add
mov
xor
adc
cli
cmpsl
add
in
dec
adc
int3
mov
fcoml
js,pn
loope
aad
pop
das
sahf
add
repnz
nop
js
mov
sbb
jp
mov
sub
fdivrl
clc
test
in
fisttps
je
inc
mov
mov
xor
sbb
pop
push
comiss
or
mov
sub
in
add
mov
clc
out
xchg
insb
jmp
pop
jns
scas
mov
rcrl
mov
mov
jg
imul
fld
loop
mov
rclb
add
ret
das
sbb
pusha
add
xchg
ljmp
aaa
mov
add
inc
popa
xchg
out
sub
dec
add
xchg
mov
pop
inc
inc
or
mov
out
outsb
add
fidivrs
popf
and
sbb
lods
fildl
aam
pop
xchg
fwait
dec
subl
sti
insl
mov
mov
fimuls
dec
lock
sarb
cld
mov
sub
loope
xor
pop
add
mov
push
add
in
loop
frstor
mov
dec
adc
dec
sbb
cmp
xchg
pop
push
testl
and
push
mov
les
dec
xchg
add
rcll
in
xor
aam
lock
or
or
imul
mov
add
aas
sbb
add
imul
mov
push
push
add
mov
jmp
mov
lret
fwait
jbe
push
push
cmp
js
jnp
add
adc
add
ljmp
add
inc
dec
xchg
dec
les
stc
in
and
cmp
mov
add
test
jne
jns
add
or
lods
add
testb
dec
xor
test
push
faddl
add
aaa
loopne
ja
out
mov
lods
add
jo
add
xchg
mov
push
push
nop
ret
mov
add
icebp
pop
ds
inc
dec
pushf
lret
scas
dec
push
mov
add
push
arpl
into
test
add
mov
sbb
addr16
or
add
mov
cmpsb
movsl
push
cmp
push
or
mov
add
add
jle
mov
movsb
out
mov
fwait
addb
leave
movsl
and
sbb
out
fisttpl
jmp
orb
xor
sub
addr16
stos
jp
ljmp
sub
stos
push
test
jmp
cmp
incl
les
push
xchg
sub
daa
data16
ret
add
repnz
dec
push
add
jo
inc
rcr
loope
mov
sub
mov
mov
dec
jge
mov
pop
loop
and
push
insl
and
adc
pop
sub
out
mov
add
cmp
ja
lods
ljmp
aam
adc
sub
mov
loopne
add
stos
daa
inc
pop
sub
sbb
xor
inc
jecxz
xor
push
arpl
dec
aam
add
and
cmpsb
pop
iret
mov
insb
mov
lcall
cltd
in
scas
mov
sub
sub
add
mov
sub
cmp
mov
dec
loopne
sbb
ret
add
mov
xor
sti
inc
std
sub
adc
xchg
jle
ret
iret
imul
mov
outsb
add
push
test
sbb
loop
pusha
popf
xor
sub
adc
stos
int
adc
out
and
les
inc
in
test
jmp
or
jge
sbb
sti
fwait
or
test
cmpb
dec
add
mov
xlat
es
loop
add
jl
mov
addr16
or
dec
mov
sti
cmp
enter
call
in
jbe
push
cmp
or
mov
push
in
add
enter
aam
xchg
rolb
dec
mov
add
xor
fistpll
cmp
jle
outsl
dec
addl
mov
add
push
es
add
push
ret
lea
dec
mov
pop
and
fisubrs
xchg
dec
and
sub
xor
lea
fldt
inc
pop
insb
loop
jno
mov
mov
push
xchg
sub
add
aad
add
shrb
mov
repnz
pop
adc
icebp
inc
outsl
pop
xor
lret
mov
mov
les
adc
aaa
mov
mov
cmc
or
lahf
add
es
add
mov
movsb
in
pusha
mov
ss
mov
add
xchg
inc
test
pop
and
push
pop
jge
pusha
add
in
stc
bound
add
dec
ret
cld
arpl
add
repz
xor
jle
sub
or
pop
cmp
aaa
fs
fwait
loope
or
adc
into
icebp
cmp
xchg
sub
add
rorl
shl
and
push
add
sub
pop
jo
add
sbbl
xor
cmp
add
cmp
out
push
addr16
call
jne
push
add
bound
test
stc
dec
sub
testb
fsubrs
cmp
sbb
mov
sub
pop
dec
inc
pop
cmp
lock
in
int
jg,pn
add
add
mov
pop
pop
into
stos
aaa
xchg
mov
xor
inc
add
rcr
add
jge
push
addr16
push
or
insb
cld
add
mov
add
mov
jae
sbb
sahf
inc
or
pop
mov
cmp
iret
lcall
sub
aam
jb
loopne
shll
cmp
std
add
pop
imul
add
jnp
fstpt
mov
add
outsl
out
jne
mov
and
sbb
inc
push
test
adc
movsb
add
add
movswl
rcll
xor
add
dec
and
add
xor
pop
add
add
sub
pop
mov
sub
xor
adc
and
aad
cmp
cmp
stc
sti
mov
mov
xchg
test
add
mov
negb
cs
sbb
mov
cmp
cltd
xchg
add
std
push
movl
mov
scas
repz
or
sarl
sbb
push
cltd
pop
and
mov
je
add
je
jno
iret
lds
dec
std
xor
mov
scas
cmp
stc
cmpsb
or
add
leave
cld
or
or
pop
std
add
lods
inc
fistpl
mov
pop
adc
cmp
imul
push
add
fsubr
adc
add
sub
mov
pop
add
adc
jo
add
inc
aas
mov
add
and
mov
cmpsb
sub
push
lods
add
jnp
cmc
mov
jns
idivb
add
mov
test
test
sub
out
add
roll
loopne
or
not
mov
pop
ds
fldenv
sbb
lcall
test
pop
icebp
sbb
and
pop
xor
fsubl
sahf
cltd
adc
adcb
xor
jo
je
aam
mov
out
imul
xor
shlb
adc
add
pop
repz
push
mov
cmpsl
add
es
enter
shll
push
push
sub
lods
pushf
lcall
cmp
pop
ret
and
cmpsl
fidivrl
scas
sub
mov
inc
and
xor
jno
mov
sbb
rclb
stos
aad
pop
add
sbb
aas
xor
cmpl
xchg
sub
mov
roll
sbb
cld
and
test
lea
fs
jns
mov
popl
fcoms
outsb
cld
xchg
imul
ret
out
mov
in
lds
add
sbb
pop
lock
push
out
sub
add
jg
out
xchg
mov
in
aad
fwait
cmpsl
jo
sbb
lods
fdivr
call
ss
loope
add
mov
adc
pop
mov
inc
stos
pusha
cld
push
stos
mov
sub
mov
cmpb
add
pop
pop
cmp
addb
add
les
jl,pn
mov
movsb
add
dec
adc
add
in
sahf
es
mov
pop
and
mov
loop
test
pop
push
or
add
scas
jo
add
sbb
and
push
add
dec
sbb
das
add
jns
mov
nop
inc
add
xchg
shrb
and
mov
out
adc
hlt
outsl
push
loope
clc
aad
lcall
jmp
xlat
add
loope
pop
lahf
and
sub
push
incl
xor
fnstcw
mov
decl
add
cli
arpl
icebp
repnz
sub
in
adc
stos
out
enter
add
icebp
dec
add
fs
mov
in
sub
push
mov
mov
pop
add
fs
cmp
pop
hlt
jmp
leave
add
subb
pop
std
mov
lahf
shl
faddl
cmc
test
jo
xchg
lea
das
arpl
imul
aad
repnz
xchg
sbb
popa
iret
insl
mov
pop
xchg
test
mov
sub
adc
xchg
aas
fwait
into
and
fsubrs
mov
push
add
enter
roll
lock
ja
xor
jae
aad
jle
add
add
shr
call
add
adc
sub
subl
test
shrb
jo
aas
stos
lea
enter
int3
xchg
xchg
mov
sbb
bnd
add
and
sbb
adc
aad
xchg
in
cmpsl
movsl
ja
inc
add
stos
out
xchg
fcom
lcall
pop
jg
mov
bound
dec
shlb
ret
sbb
cs
ret
sub
shrb
mov
mov
pop
or
jne
aad
mov
pop
add
cmc
addb
lret
bound
dec
adc
insb
arpl
or
add
sub
push
cmp
jge
jmp
leave
push
jmp
jb
dec
rcrl
mov
lods
sbb
mov
das
jbe
mov
inc
xchg
or
jecxz
adc
pop
xorb
lahf
sbb
test
add
sbb
out
pop
lcall
add
mov
xchg
in
inc
shl
push
adc
fstpl
sbbb
pop
push
push
adc
fs
sbb
testb
aam
cmp
data16
mov
sahf
into
cwtl
jmp
sbb
sbb
cwtl
add
adcl
loope
mov
jae
pop
add
add
push
enter
call
repz
mov
sahf
xlat
pusha
xchg
push
jnp
add
call
call
push
sub
repz
out
jo
je
mov
ret
fs
mov
add
xlat
stos
jle
add
sub
pop
jecxz
movsb
or
aas
loop
jne
lds
mov
add
sub
jno
and
test
add
jmp
rclb
add
lods
lock
pop
rolb
fcmove
jle
jp
testl
mov
xchg
adc
push
sub
ret
repnz
sub
add
push
lret
cli
popf
add
mov
movsb
xchg
test
add
cmp
in
daa
loopne
dec
loop
sbb
pop
pop
ret
or
sahf
inc
arpl
aas
or
jo
or
push
stos
in
cmp
incl
ljmp
pop
jg
pop
jmp
cmp
mov
aas
inc
cs
xchg
mov
in
pop
lock
jno
out
inc
scas
add
hlt
cltd
pop
add
inc
xchg
enter
cmpsl
add
mov
adc
add
lds
jo
xchg
test
std
mov
add
xchg
push
jno
xchg
nop
adc
cwtl
ljmp
sbb
call
xor
xor
mov
dec
add
loopne
test
cmc
mov
hlt
inc
cmp
data16
mov
pop
add
mov
sub
rol
add
mov
aas
pop
push
add
dec
sub
add
dec
sub
cmp
add
lret
mov
insb
xor
and
add
push
pusha
inc
xchg
pushf
loop
xor
jge
rcrl
dec
call
daa
aas
dec
cmc
stos
jg
xor
call
cld
pop
jg
mov
and
fnstcw
movsb
add
ljmp
popf
sbb
lock
inc
add
xchg
mov
jns
mov
and
ja
cld
jecxz
sbb
call
dec
test
add
std
or
add
adc
adcl
dec
push
add
push
lods
pop
jo
outsl
fiaddl
cmp
jl
outsl
push
in
out
mov
ret
jge
insl
addr16
push
cmp
xchg
pop
cld
pop
add
dec
mov
filds
hlt
lods
sbb
xchg
cmp
jne
add
aam
or
push
fsub
jge
aaa
push
inc
add
sbb
pop
ret
sub
ja
dec
jae
push
cs
xor
mov
inc
add
xlat
pushf
cmpsb
add
std
test
push
test
call
jmp
cs
jecxz
add
pop
mov
and
push
mov
add
or
or
push
std
cmpb
loope
loopne
push
leave
lea
inc
mov
cmp
scas
xor
lahf
sbb
jae
cli
in
cld
push
add
fnsave
popa
sub
mov
punpckhwd
sbb
inc
mov
add
aad
movsb
inc
addb
xchg
clc
jne
sbb
orl
add
stc
mov
test
in
inc
roll
jae
xchg
ret
inc
jl
xchg
add
adc
cmc
lahf
rol
test
xchg
add
sub
in
pop
xlat
and
ljmp
int3
add
mov
mov
mov
cld
sub
push
adc
mov
and
xlat
jl
les
scas
xor
mov
mov
push
add
mov
jge
adc
mov
ss
mov
in
xchg
stos
aas
xchg
and
sbb
es
pop
add
adc
pop
dec
push
loope
jge
and
add
sti
xorl
sub
add
mov
into
nop
dec
add
xchg
sbb
pop
aam
pop
js
mov
in
inc
rcrb
int
jnp
repnz
les
xchg
sub
aas
fwait
jle
add
inc
sub
add
ret
sbb
cmpsl
sub
xor
inc
pop
out
jp
ds
mov
push
fsubrp
pop
dec
setnp
jg
add
mov
and
mov
adc
iret
mov
aam
or
add
pop
push
cwtl
xchg
and
xor
push
jmp
out
xchg
pop
and
out
add
mov
clc
aam
repnz
add
and
stos
sbb
xor
fwait
sbb
outsb
mov
movsb
mov
out
push
inc
cmp
inc
lock
fs
mov
add
test
stc
adc
adc
adc
add
in
gs
or
js
mov
movsl
add
nop
inc
dec
add
cmp
shr
jbe
mov
hlt
push
pop
push
push
mov
and
adc
push
pop
flds
dec
sub
jg
insl
add
clc
out
push
mov
cmpsl
adc
jl
es
push
in
add
inc
inc
jg
inc
fcoml
mov
add
lock
movsb
pop
js
cld
push
add
xchg
shll
add
test
cmp
sbb
das
cli
sbbb
es
add
test
iret
roll
enter
lcall
das
add
xchg
sti
xchg
test
movsl
sbb
fsubrp
lds
fisttps
insb
add
in
mov
sarl
lahf
add
hlt
rolb
push
insl
sub
sub
add
xor
sbb
xchg
and
lret
pop
pop
add
xlat
les
inc
shrl
jl
cmp
test
xor
sub
xchg
and
bnd
fwait
mov
push
mov
push
jo
js
add
sub
add
xchg
into
aas
xchg
cmp
xchg
mov
scas
andb
roll
in
das
jno
scas
dec
bound
adc
lcall
arpl
adc
jbe
mov
push
sarb
mov
push
add
and
outsl
jg
cltd
jle
cld
sarl
cmp
pop
or
popw
and
divb
shlb
gs
xchg
mov
pop
lods
shlb
push
sub
shl
pop
lret
call
add
mov
faddl
dec
dec
push
adc
mov
jg
bound
mov
cli
insb
mov
add
cmp
outsb
inc
inc
rolb
xchg
push
pop
test
xchg
add
mov
cmp
in
in
adc
dec
sub
sbb
int
sbb
stos
aaa
add
arpl
mov
fsubl
lods
dec
adc
and
add
adc
jo
inc
or
push
push
js
pop
shlb
push
xor
inc
or
cld
jmp
xlat
mov
cmc
add
jp
mov
or
push
les
test
dec
lea
mov
shlb
mov
mov
in
cmpb
mov
pop
and
pop
add
dec
test
test
rorb
pop
fidivs
add
adc
pop
jl
add
shl
aas
int3
in
pop
sbb
cmp
lret
adc
mov
test
sbb
add
jmp
test
in
stos
aad
lock
ljmp
xchg
sbb
add
movsb
cmp
pop
in
fldcw
insl
add
sub
ret
and
subb
ljmp
rol
cmpsl
ret
in
icebp
cwtl
add
out
push
adc
mov
sub
pop
add
or
lods
popf
loopne
call
add
jecxz
sub
inc
add
or
icebp
out
shll
sub
push
js
jae
jns,pt
ljmp
push
add
add
add
sub
addl
lahf
nop
push
xchg
out
lock
call
and
pop
mov
cmc
ret
inc
mov
xor
jg
dec
test
cmpsb
lahf
lea
jge
fidivrl
out
addb
xchg
mov
popa
mov
cld
adc
add
scas
and
pop
lea
add
dec
xchg
add
cld
push
movl
sub
mov
adc
daa
mov
test
imul
ret
lret
out
sub
push
pusha
mov
xor
mov
and
cmp
aaa
test
mov
sar
xor
xor
inc
mov
filds
or
jae
jns
and
pop
lret
pusha
cmp
add
cmc
jae
add
push
push
push
add
fwait
sbb
and
loopne
add
jl
and
in
clc
cmp
pop
mov
cmp
test
enter
lock
aam
sarb
add
test
jl
pusha
sub
mov
mov
add
mov
and
dec
les
sub
aaa
lahf
push
add
nop
scas
dec
cmpsl
jb
xor
mov
aas
cmp
add
sub
imul
ljmp
inc
lds
cmp
sbb
push
lock
sbb
scas
jnp
or
lods
les
add
loopne
pop
push
add
jmp
hlt
or
xor
push
jno
push
mov
testb
dec
jl
fisubl
mov
cmp
call
add
test
or
inc
pushf
dec
pop
xchg
aas
add
orb
out
add
insb
adc
sbb
xor
pop
add
mov
xchg
mov
push
add
cmp
add
icebp
pop
add
ficomps
mov
nop
in
sbbb
mov
dec
cli
add
pop
filds
push
inc
stc
add
xor
divl
fstpl
cwtl
loope
fdivr
add
jg
pop
sarl
enter
lock
or
decl
dec
mov
testb
and
movsl
imul
insb
push
and
loopne
stos
sub
ja
aad
loopne
addr16
dec
push
jmp
pusha
pop
rolb
or
mov
lcall
mov
jmp
test
sbb
xor
mov
dec
push
adc
mov
idivb
addb
or
aaa
jnp
mov
pusha
pop
cmp
push
or
add
add
std
mov
out
mov
je
sahf
repz
jns
jle
xor
jns
xor
movsb
adc
ds
jle
add
jno
imulb
xchg
in
ficoml
push
mov
mov
dec
mov
pop
stos
xor
adc
hlt
rolb
and
mov
xor
je
fs
xchg
repnz
mov
pop
sub
fadd
push
add
or
jmp
push
jle
or
mov
ja
pop
mov
adc
icebp
mov
xchg
aad
adc
je
sarb
insb
arpl
mov
mov
cmp
xchg
repnz
imul
jns
mov
mov
sub
add
push
mov
cld
bound
mov
mov
mov
in
xchg
sub
mov
repnz
frstor
mov
and
nopl
fsubl
repz
clc
pop
pop
sbb
js
push
push
bnd
add
jno
sub
pusha
pop
sbb
pushf
mov
scas
in
cli
push
enter
jg
xor
push
ljmpw
or
cmpsb
sahf
lret
inc
ss
add
test
xor
add
inc
inc
push
push
pop
or
jle
push
adc
dec
cmp
mov
aad
push
scas
jg
add
sub
and
enter
ja
add
push
cs
roll
fdivrl
pushf
imul
int3
aam
xchg
jae
add
fcomps
loopne
jbe
addl
popa
ja
les
out
and
pop
dec
inc
xchg
add
mov
das
addb
xchg
jno
push
xchg
xchg
sbb
incb
incl
pshufw
add
lahf
inc
cmc
dec
idivl
jl
push
add
aad
xor
outsb
mov
inc
scas
add
mov
fstps
inc
mov
addr16
int3
cmp
adc
mov
add
lahf
push
faddp
or
pop
data16
inc
rcll
mov
dec
pop
mov
fimull
sub
lods
dec
sarl
inc
jmp
inc
sub
hlt
in
mov
sti
add
pop
test
xchg
push
push
sub
xchg
pop
push
mov
and
mov
sbb
xlat
shlb
or
call
ss
dec
rorb
in
or
xor
stos
mov
dec
ret
and
fwait
nop
mov
jecxz
lret
leave
xchg
mov
pusha
pop
ds
sub
xor
adc
add
push
pushl
jecxz
mov
mov
inc
sti
mov
pop
clc
arpl
lods
xchg
test
shlb
push
jmp
jl
mov
cmc
add
rcll
mov
clc
push
xchg
adc
in
cld
mov
xchg
xor
dec
mov
cs
imulb
add
sub
add
enter
add
inc
cmp
mov
jle
das
add
xor
test
cmpsl
inc
cwtl
test
jge
push
cmpsb
push
mov
enter
fstpt
lret
add
ds
dec
add
arpl
mov
in
loop
loopne
xchg
adc
mov
xorl
mov
out
cmp
test
repnz
jmp
call
faddl
rclb
aad
movsl
cld
push
pop
add
cmpsl
popa
adc
push
popf
add
cltd
cld
add
out
add
scas
lcall
inc
xchg
mov
fucompp
xlat
inc
lock
adc
xor
cmpsl
xchg
mov
loop
inc
xchg
inc
add
inc
pop
enter
xor
cmp
pcmpgtb
popf
divb
pop
int3
fstps
adc
add
pop
and
fdivs
bound
fiadds
les
sbb
jns
int3
hlt
pushf
add
jne
mov
mov
or
lock
insl
mov
pop
dec
cmp
int3
jb
pop
aam
call
cmp
jge
add
aam
or
mov
cmp
lods
movb
add
data16
adc
mov
sub
es
inc
in
jecxz
push
cmp
xchg
scas
add
fdivp
mov
aas
aaa
nop
addr16
inc
int3
adc
add
mov
mov
and
imulb
add
popf
inc
adc
mov
push
in
stos
xor
xlat
jnp
leave
mov
jns
lds
arpl
inc
out
pop
mov
inc
out
pop
mov
and
popl
stc
mov
cmpsb
and
cmc
push
jae
stos
jp
pusha
add
lret
add
and
jnp
dec
sarb
clc
adc
add
fadd
fadds
fwait
into
xchg
ds
jno
sub
mov
push
jecxz
jo
dec
xchg
xor
sahf
jl
testl
push
mov
add
movsl
in
nop
inc
sbb
add
mov
lods
mov
mov
retw
cmp
cltd
or
add
je
jmp
cmpb
out
sbb
popl
imul
cmp
add
add
adc
addr16
lret
add
cmp
in
ljmp
mov
insb
jmp
jmp
aad
daa
pop
mov
scas
pop
dec
dec
adc
jmp
or
push
and
sub
in
add
or
add
mov
push
je
rcl
or
sbb
xchg
xor
dec
pusha
cld
sbb
add
mov
out
add
les
add
rolb
ja
cld
mov
add
cltd
les
outsl
xor
sub
dec
and
pop
mov
icebp
pop
inc
xchg
les
pushf
cwtl
aaa
ret
xchg
add
xor
mov
sub
add
or
xor
xchg
mov
in
xorb
mov
cwtl
cmp
shl
loopne
xor
xchg
sti
loope
inc
xchg
mov
adc
loopne
sbb
mov
loope
dec
jns
inc
leave
repz
or
adcb
jecxz
add
xchg
push
cmp
repz
pop
mov
fiadds
push
shufps
push
insb
stos
xor
in
mov
int3
ret
lea
and
mov
aas
cmpb
pusha
push
mov
or
add
test
pop
cmp
ret
xchg
push
cmpb
jmp
cmpsb
lods
dec
xor
jge
sbb
push
mov
mov
fsubl
outsl
into
adc
cmp
sbb
cli
cmc
cwtl
inc
adc
add
inc
jl
sub
push
adc
repnz
lods
add
lea
enter
sbbb
mov
add
lret
xor
adc
xor
xlat
ljmp
add
rcl
mov
out
test
push
pop
mov
std
push
add
cs
add
loop
cld
cld
jg
sub
lcall
mov
push
add
xchg
jnp
scas
cwtl
sub
and
inc
sub
cwtl
add
xchg
sub
scas
adc
add
clc
fsubs
cs
xchg
cmpsb
sub
add
push
and
and
inc
inc
clc
pushf
lahf
cs
cmp
dec
and
movb
daa
jnp
cmp
packssdw
vmwrite
popa
cmp
ficompl
lahf
decb
shl
dec
int3
inc
mov
jbe
leave
in
stos
ljmp
jo
test
add
cmpsb
je
dec
and
and
dec
cmp
mov
pop
daa
xchg
in
xchg
jnp
add
mov
leave
fxch
xlat
lcall
jle
movb
xor
or
in
add
cmpb
cmp
add
xor
cmc
fdivrp
xchg
je
add
scas
xchg
mov
adc
mov
cvttps2pi
pop
xor
sub
and
cmpl
andl
andl
test
cs
into
mov
ds
cmc
and
mov
mov
cmp
mov
mov
repnz
js
insl
or
add
ret
mov
outsb
fistpl
lret
add
pop
sbb
mov
mov
stos
aam
jl
repnz
into
sbb
add
out
inc
jno
insb
add
repz
add
flds
add
stos
js
pop
les
aas
and
out
out
mov
roll
lods
xlat
cmp
pusha
cmc
adc
rolb
lods
sub
aas
arpl
sbb
or
mov
decb
popa
add
adc
fisubrl
jl
cs
clc
out
adc
cltd
pop
sarb
add
into
add
or
push
or
lret
xor
add
sbb
sbb
mov
movb
imul
cld
out
repnz
shrb
jl
cmpb
or
stos
add
sbb
jne
sbb
jns
push
push
push
sbb
and
mov
js
aas
add
lret
add
mov
add
add
or
ljmp
mov
std
aad
mov
push
push
and
sbb
jae
add
pop
and
fdivl
lret
add
sahf
pushf
aam
add
mov
divl
cld
sub
add
movsl
or
push
ss
add
xor
les
lds
push
mov
and
repz
jle
stos
pushf
add
cmc
and
in
inc
sbb
xor
xchg
insb
inc
add
sbb
in
xchg
adc
int
popf
and
sbb
mulb
pusha
pop
push
pusha
rorl
mov
sbb
imul
stos
setne
iret
in
sbb
scas
mov
insl
pusha
cmp
add
pop
iret
incb
addb
mov
dec
push
jge
inc
out
lea
cmp
jecxz
sub
sbb
jmp
add
sbb
loope
xchg
xor
pusha
sbb
push
jg
lods
iret
add
or
cld
dec
pop
cmp
enter
mov
repnz
nop
lret
cmpsl
sbb
pop
jmp
xchg
mov
push
jae
ret
mov
ret
sbb
loopne
add
in
enter
jno
movntq
out
mul
mov
pop
adc
jbe
sub
scas
lods
sbb
add
lock
cs
ljmp
add
pop
orb
nop
or
dec
scas
add
gs
add
mov
rcr
and
lar
dec
gs
loope
lods
sahf
add
jle
jg
testl
or
iret
into
inc
mov
and
inc
out
insb
fs
or
mov
cmpsl
adc
loope
cmp
pop
xor
sbb
sbbl
movsb
add
push
cmp
nop
loope
add
repz
sbb
ret
mov
testl
add
out
or
fldenv
adc
pusha
cld
push
jmp
add
fidivs
add
adc
cmp
cmp
push
jg
call
dec
shrb
fcomi
lods
pop
out
add
or
imul
or
add
mov
cmp
popf
fnstenv
sub
sbb
jmp
mov
roll
inc
mov
mov
mov
std
add
cltd
pop
xchg
push
pop
sbb
js
call
mov
pusha
cmp
cli
add
jge
push
in
and
cpuid
icebp
pop
lods
negb
xor
pusha
xor
clc
loopne
add
adcb
movsl
ds
hlt
cwtl
ja
xor
xchg
add
test
lahf
out
mov
add
dec
call
lret
lret
shl
sub
jae
mov
faddl
stos
xchg
adc
nop
rolb
lcall
fadds
cld
mov
cmpb
sbb
xchg
add
ds
and
push
dec
addl
rolb
add
out
sbb
add
mov
rolb
mov
incl
dec
push
sbb
das
mov
or
sub
sub
repz
push
imul
jo
aad
and
push
pop
jmp
jle
xchg
sub
mov
jns
pop
std
roll
cmpsb
popf
mov
popa
shlb
cmp
push
xor
test
sarb
ja
inc
pushf
add
dec
mov
pop
movb
imul
out
or
mov
push
and
sub
push
aad
jbe
movsb
mov
jb
add
fs
bswap
clc
les
inc
movsl
mov
fdivs
jl
pop
mov
jno
sbbb
add
pop
cwtl
xchg
sarb
and
sbb
in
outsl
mov
inc
mov
mov
push
aam
in
inc
js
push
popf
or
subps
or
mov
jb
ret
jg
push
mov
test
lea
sbb
mov
outsl
int3
xlat
shl
ja
add
popf
mov
mov
filds
mov
and
pop
nop
sub
jae
add
xchg
mov
jns
bound
or
std
inc
pop
mov
push
das
xlat
jecxz
inc
mov
es
inc
out
xor
add
shl
cmpsb
or
fmuls
dec
rolb
sub
mov
add
or
push
test
add
mov
add
dec
push
rol
addl
popf
je
sub
movsl
adc
add
cmpsb
pop
push
icebp
push
inc
or
sarb
int3
or
in
cmp
mov
adc
dec
in
daa
test
pusha
lret
or
add
add
and
and
mov
jae
mov
xchg
in
adc
int3
aad
push
ret
add
repnz
test
jecxz
mov
and
sub
test
mov
jno
testb
mov
ss
or
ficompl
sub
jl
add
mov
lods
nop
loopne
adc
gs
jbe
adc
pop
pop
mov
mov
lret
stos
arpl
das
hlt
pop
xchg
out
dec
jp
add
sbb
jnp
lds
fs
mov
fdivrl
or
dec
or
popa
xchg
xchg
sarl
fidivrs
pop
inc
out
push
xlat
bound
add
sar
das
sbb
inc
ljmp
or
adc
lock
add
mov
inc
shlb
push
mov
addl
lahf
aas
orb
rcrl
sbb
mov
stos
cmp
pop
stos
lods
test
shll
lcall
or
or
sub
add
lods
dec
xchg
in
push
iret
add
mov
mov
arpl
je
aaa
push
roll
cld
mov
mov
sarb
dec
shrl
jmp
or
jo
or
lret
shr
fnsave
test
enter
jno
leave
xchg
sbb
icebp
jnp
fildl
insl
push
sub
sub
aad
and
lds
inc
xor
cmp
scas
push
cmp
sbb
xchg
cltd
xchg
fnsave
or
cltd
jo
mov
pop
fidivs
syscall
pop
cmp
pusha
xchg
stos
xchg
cmp
inc
gs
push
push
xor
lods
add
jmp
mov
add
mov
mov
sbb
push
je
jno
push
cmpsb
into
add
dec
inc
mov
sub
pop
ret
xchg
sub
sub
rcrl
or
outsb
in
xchg
aaa
daa
push
clc
addb
sub
rcrb
inc
add
mov
lods
xchg
pop
or
ficompl
in
sbb
sahf
pop
push
test
mov
and
lret
jge
lock
pop
bound
or
inc
mov
lret
mov
data16
psadbw
xor
dec
add
mov
push
jbe
add
xlat
push
lret
repnz
das
add
arpl
flds
ret
sub
in
pushf
mov
push
add
dec
mov
adc
lret
add
popa
mov
dec
mov
xlat
insb
pop
xchg
lcall
loopne
dec
jnp
out
pop
orb
sub
aas
add
les
ret
addr16
add
mov
sub
xor
cmp
lods
push
mov
xorb
push
and
lret
add
sub
shl
or
mov
jmp
push
jl
xchg
mov
sbb
push
stos
pop
sbb
lea
imul
inc
add
pushf
push
push
pop
scas
andl
aas
sbb
sbb
mov
sar
je
movsb
enter
adc
jle
xor
sbb
jle
leave
sub
ljmp
mov
xor
ja
pop
and
add
add
test
push
and
lret
push
push
call
lea
add
add
mull
add
xchg
adc
jge
je
pop
xchg
lea
pop
addb
adc
jmp
pop
lods
mov
push
push
mov
jmp
clc
mov
test
movsl
add
inc
mov
aas
popf
jle
add
and
add
subl
add
hlt
dec
jae
roll
cmp
ja
add
mov
pop
dec
fnstenv
mov
dec
aas
pop
push
add
sbbb
mov
mov
cmp
jp
pusha
add
xor
xchg
shrb
test
sub
psrlw
adc
scas
dec
and
int
dec
test
pop
ret
aam
mov
add
clc
movsl
xchg
sbbb
out
cltd
dec
adc
js
js
pop
sti
xchg
mov
cmp
insl
popf
add
repnz
jmp
imul
add
call
mov
mov
shrb
popa
in
loopne
adc
repnz
nop
add
in
sahf
jecxz
xrelease
mov
mov
adc
sbb
mov
shlb
add
jmp
call
mov
add
push
mov
loope
cmp
addr16
cmp
push
lcall
orl
dec
and
sbb
lods
pushf
push
mov
lret
mov
nop
ret
xor
mov
xor
loope
inc
mov
add
clc
mov
popw
dec
xchg
jmp
xchg
sbb
sti
jno
sub
ja
js
add
xchg
cld
scas
add
gs
push
inc
daa
fdivrp
xor
cltd
pop
inc
xchg
scas
pusha
jbe
loopne
add
gs
scas
jle
add
add
xchg
sbb
mov
lret
mov
repz
incl
ret
mov
test
jg
mov
call
inc
pop
sbb
xchg
es
jl
add
jb
aad
cltd
adc
or
xor
subb
pop
pop
in
sbb
inc
nop
lods
inc
outsl
sbb
and
imul
mov
add
pusha
add
jb
xor
mov
je
addb
add
pop
lret
xchg
fisubrs
mov
lock
sti
pop
aaa
inc
daa
leave
setnp
mov
in
pop
xchg
and
pusha
or
jo
je
add
ss
sti
add
jp
fwait
add
lret
adc
outsb
dec
iret
pop
ljmp
cmpb
pop
adc
push
cmp
mov
sbb
std
dec
sub
adc
rcrl
sbb
add
loope
add
or
and
sbb
add
jne
dec
pop
push
lock
aam
pop
mov
mov
adc
in
and
pcmpeqd
es
or
test
es
ljmp
shr
or
mov
fisttpll
jo
mov
mov
mov
push
add
popf
leave
daa
or
cld
addr16
ret
iret
subb
mov
pop
lods
adc
add
inc
dec
cmp
or
sbb
xchg
cli
mov
mov
sahf
mov
jg
ficompl
add
mov
scas
outsb
mov
stos
dec
xor
xor
add
xchg
cli
dec
notb
or
and
cmp
add
sub
mov
enter
sbb
cmc
or
das
sbbb
subl
mov
sbb
jp
leave
shl
into
pop
mov
add
cmp
xchg
orl
fisttpl
enter
add
dec
mov
das
stos
inc
jo
jb
dec
arpl
adc
push
sahf
js
jg
cmpl
gs
adc
dec
xor
sbb
shl
aad
das
jo
ljmp
lock
addr16
lods
push
pop
sbb
mov
sbb
pop
xor
inc
stc
aaa
mov
add
jl
and
mov
popa
out
and
inc
and
add
iret
arpl
movsb
mov
test
sub
cmp
aam
add
data16
fdivrs
jbe
or
jbe
add
cmp
push
rclb
cmpsl
sbb
adc
mov
jns
imul
repz
mov
mov
mov
movsl
orb
add
enter
adc
sbb
sub
clc
add
lret
sarl
dec
lods
add
shlb
or
add
sub
cltd
js
or
inc
xor
mov
cwtl
rcll
inc
pop
mov
icebp
push
sti
loopne
mov
popa
pop
pop
push
test
jns
dec
add
mov
movsb
sub
xor
and
mov
dec
rclb
lock
pop
test
add
pop
cmp
and
out
and
pop
je
add
testb
add
ret
add
testb
loop
imull
movsl
cmpsl
add
ficomps
add
fisubl
xchg
popf
loopne
add
sub
in
push
mov
add
shrb
jmp
sbb
test
cmpsl
mov
loopne
push
lret
ret
es
mov
sbb
rclb
push
sbb
idivb
arpl
mov
inc
out
pop
sub
das
mov
pop
ret
ret
addb
cmp
fdivl
sub
adc
sbb
add
cmp
adc
sbb
pop
mov
add
push
insl
lea
int3
add
lcall
push
jo
push
push
scas
xor
rcrl
sub
push
or
int
and
outsb
adc
sub
and
fdivs
mov
sbb
incb
mov
fmuls
inc
sub
ss
pushf
cld
mov
out
int
test
add
loopne
js
dec
dec
aam
int
sti
rolb
ds
mov
sub
inc
mov
iret
out
xor
mov
outsb
cmp
loop
xor
adc
cmpl
adc
out
andb
jno
sbb
mov
repz
push
mov
inc
ja
inc
push
push
sahf
int3
loopne
xchg
mov
fisubrl
cmp
or
and
or
lahf
nop/reserved
pop
je
leave
dec
cli
sahf
cmp
enter
lea
pop
sub
cmp
ja
cltd
inc
in
jmp
push
lods
repnz
mov
push
add
inc
xor
adc
sub
add
test
stos
cmc
sbb
dec
add
js
pop
aaa
sbb
js
std
or
les
or
loopne
inc
mov
dec
stc
loop
mov
pushf
sbb
sbb
add
loopne
movb
mov
xchg
and
repnz
mov
sub
clc
mov
sub
ss
repnz
pop
cmp
or
and
adc
cmc
fwait
and
push
sbb
add
rcrb
add
std
jnp
xchg
mov
scas
cs
sbb
add
cmpb
sarb
xor
js
orb
out
push
clc
pushf
xchg
dec
in
pop
add
xor
mov
daa
adc
and
jne
sbb
jnp
sub
subl
inc
mov
add
ret
popf
and
vsubss
pop
out
sbb
addb
int
fwait
xchg
push
xchg
add
sbb
mov
aam
rclb
adc
lcall
push
jle
jb
push
movsb
add
jge
add
iret
fldt
ficoms
ret
lret
or
leave
add
stc
add
jbe
push
push
adc
inc
ss
sbb
or
rclb
sub
adc
inc
push
jmp
xchg
push
add
and
add
in
xchg
imul
ret
subl
lret
mov
inc
nop
dec
mov
xor
lock
mov
sbbb
data16
push
into
lods
cmpsb
sti
loopne
mov
pop
cwtl
add
fiadds
mov
mov
pusha
daa
gs
dec
or
xchg
jo
jmp
shl
dec
enter
xor
xchg
sbb
lret
fcomps
push
or
rolb
out
in
das
push
xor
pop
add
in
ret
or
les
push
jns
add
add
in
dec
add
loopne
jb
pop
sub
ds
mov
xchg
pop
dec
clc
and
pop
mov
scas
xchg
jecxz
jle
shlb
add
mov
mov
mov
add
addb
xchg
adc
sbb
call
addb
add
jo
push
and
pop
dec
adcl
popa
pop
xor
xchg
or
push
xlat
and
sbb
mov
push
jbe
test
test
or
add
cmp
push
xchg
inc
add
cwtl
out
ret
repz
cs
ljmp
mov
or
pop
stos
cld
push
adc
addl
cmpsl
xchg
loope
sub
orb
ret
cwtl
adc
leave
call
jo
ret
xor
sbb
outsl
or
sbbl
cld
adcb
jb
arpl
and
ret
in
inc
lock
mov
jp
popa
sub
cmpsb
cmp
or
testl
leave
and
inc
shll
jne
lock
cmp
jg
mov
xchg
inc
jbe
out
xchg
ja
add
push
ss
aam
and
add
out
push
cli
add
or
sar
mov
shl
pusha
jg
mov
mov
add
cmp
add
pushf
stos
xor
rclb
cmp
cltd
and
fists
jo
jge
mov
mov
add
jb
lret
loopne
add
stos
pushf
aam
lods
mov
pop
fisubl
lods
inc
bound
adc
push
aaa
pop
int3
insb
popf
in
add
leave
or
push
pop
adc
ret
shl
nop
rcrl
in
popf
aaa
shll
dec
rcr
mov
mov
mov
notl
fcomp
mov
jb
clc
sahf
incl
iret
lahf
dec
in
call
inc
and
sub
add
cmc
gs
xchg
adc
push
xorb
outsb
mov
jecxz
je
cmp
adc
push
or
push
jbe
sarl
incb
lahf
xchg
add
rclb
push
adc
or
testb
mov
or
add
ret
je
inc
mov
call
xchg
in
cmp
negl
fldl
pop
and
and
mov
pushw
daa
add
mov
xor
xchg
pop
xchg
outsl
xchg
add
pop
cmp
mov
in
mov
jnp
nop
adc
rol
hlt
mov
movsb
push
mov
dec
test
xchg
add
and
push
and
push
add
out
idivl
lods
pop
add
incb
test
jo
jmp
sbb
mov
xor
fdivrl
lcall
lret
sub
push
pop
imul
popa
xchg
int
jbe
call
sbb
std
jl
add
jo
add
mov
push
add
stos
mov
ljmp
inc
push
xor
pop
rorb
aam
adc
add
push
shl
xchg
js
add
mov
daa
cmp
pop
pusha
pop
pop
imul
loopne
push
div
add
push
mov
cmp
sub
jmp
add
adc
mov
int3
jle
aas
jo
jns
mov
add
pop
xlat
cmp
sbb
dec
gs
pop
hlt
repnz
inc
ljmp
scas
cmp
pop
cli
hlt
in
jmp
out
mov
mov
stc
sub
jle
jl
icebp
mov
xor
fs
mov
ss
jne
sbb
lock
inc
sub
xchg
add
or
mov
xchg
add
dec
stos
repnz
push
loop
mov
inc
sbb
add
and
dec
in
xchg
add
cld
mov
sbb
lret
xor
icebp
loopne
add
lds
or
pop
aas
ds
pop
test
dec
xchg
adc
add
xchg
jb
fs
je
pop
inc
xchg
clc
add
pushf
xchg
jg
popf
decl
mov
sub
mov
int
sub
out
mov
adc
cmp
jbe
push
loop
into
fcmovnu
rolb
push
push
test
sub
mov
pop
jecxz
or
jns
ss
push
push
es
mov
in
sub
rcl
push
inc
xchg
jl
js
cmp
xor
andb
xchg
add
mov
add
mov
das
push
test
xchg
ficomps
clc
jge
loop
xchg
or
fs
mov
cmp
add
ljmp
xchg
jle
shll
fldenv
roll
dec
aam
subl
mov
lret
xlat
add
pop
fwait
js
cli
mov
jno
add
sarb
sbb
loopne
shlb
fdivp
xor
mov
and
ja
adc
fadds
mov
pop
xchg
nop
jae
mov
add
jge
jne
lods
add
pop
les
clc
or
loope
mov
imul
or
pusha
push
movsb
dec
push
add
jmp
sbb
push
repnz
and
xchg
add
aaa
lahf
mov
and
sub
adc
xchg
inc
incl
sbb
push
mov
jle
jo
mov
loopne
ljmp
inc
push
les
pop
mov
or
ret
add
subl
and
dec
sahf
mov
adc
push
push
add
add
mov
notl
pushf
mov
add
negb
insl
test
pop
and
add
mov
push
add
xchg
inc
outsb
mov
add
faddl
fdivr
in
jnp
cmp
faddp
mov
cmpsl
xor
addb
aad
into
xchg
fcmovnu
nop
add
sbb
pop
mov
adc
mov
sbb
sar
pop
jle
sbb
pop
add
sbb
and
mov
lock
jbe
add
dec
es
xor
add
mov
out
mov
add
mov
push
roll
push
add
in
add
testb
das
sub
loopne
out
fwait
or
jnp
push
test
dec
leave
dec
pop
add
scas
or
stos
push
js
add
push
subb
out
sti
adc
xchg
or
xchg
inc
push
outsl
cli
testb
rcrb
mov
dec
ror
dec
rcll
cs
add
push
inc
sub
hlt
stos
call
xchg
mov
adc
push
xchg
test
adc
jne
xor
cwtl
add
sbb
subb
add
pop
push
pop
sub
cmp
mov
dec
rcll
sbb
je
mov
cmpsl
xchg
lret
inc
xchg
inc
mov
dec
sub
mov
inc
pop
sbb
push
mov
adc
test
incl
idivb
inc
push
dec
stos
jmp
and
mov
rcrb
mov
cld
fcoml
mov
mov
jo
mov
cmpsb
ja
mov
iret
add
cmp
xchg
add
addr16
add
pop
icebp
mov
add
or
std
xchg
aaa
movsb
cld
shl
jge
xchg
jg
mov
add
sbb
ror
mov
pop
ret
pop
push
lcall
jo
incl
sti
mov
adc
loopne
or
and
stc
push
add
sbb
ret
out
or
add
add
cmpsb
mov
test
repnz
push
xchg
in
jno
out
lods
movsb
loopne
ret
xor
adc
push
hlt
sbb
lock
mov
popa
aad
add
insb
das
mov
sbbb
pop
in
cmp
xchg
dec
push
popa
add
clc
ret
jge
fdivl
aas
add
call
mov
push
cs
fbld
mov
inc
fisubrl
cmp
add
test
movsb
mov
push
aam
pop
es
add
jno
loopne
mov
mov
or
lea
inc
fwait
je
add
inc
scas
add
jns
push
xorl
sbb
imul
cmp
fwait
add
bswap
jecxz
push
inc
nop
test
cltd
inc
xchg
test
xor
cmc
or
out
xor
icebp
add
sbb
movsl
adc
xlat
push
nop
icebp
cmp
inc
push
enter
push
or
roll
xor
sti
push
pusha
sbb
pop
add
aaa
les
sub
xchg
std
out
lods
call
lret
int3
push
mov
ja
movb
ret
idivb
cmp
mov
add
xor
jl
mov
clc
inc
or
fldenv
or
add
cld
out
aaa
andb
add
xchg
je
dec
lcall
movsb
lods
xor
add
add
cmp
sub
add
mov
dec
push
loope
add
dec
test
loopne
in
add
and
out
xchg
xchg
test
xchg
leave
or
dec
ss
cmpsl
arpl
mov
add
insl
sub
pop
lcall
shll
fsubs
sbb
inc
push
sar
aas
dec
pop
xor
cmp
jecxz
sbb
pop
mov
pop
adc
fildll
gs
inc
in
lcall
mov
and
add
inc
mov
add
lock
bound
scas
add
mov
push
jb
testl
cmpsb
mov
mov
ds
dec
popf
wrmsr
sbb
adcl
in
push
out
scas
loopne
add
inc
in
lahf
cld
add
dec
pop
sbb
xor
loop
mov
adc
or
and
add
scas
mov
sbb
pushf
cld
shrl
xlat
jbe
fdivs
add
inc
pop
or
cmpsl
inc
add
sbb
mov
sub
push
inc
push
add
add
xor
mov
jmp
mov
aaa
xchg
loopne
xchg
add
push
mov
mov
push
adc
pusha
xchg
add
push
mov
sbb
clc
add
sub
aas
popf
mov
dec
inc
ret
out
nop
vaddsd
dec
loopne
cli
sbb
jl
add
add
scas
mov
jg
add
push
dec
add
in
or
clc
push
or
pop
cmp
jbe
pop
sbb
cmp
add
into
shr
inc
add
call
and
das
mov
popl
xlat
sbb
pop
scas
subb
fucomip
pusha
cli
js
rclb
add
fimuls
int3
push
out
pop
mov
add
pop
pop
cmp
add
xchg
inc
nop
sarl
je
fs
add
out
cmp
mov
add
jbe
xchg
jb
lret
repz
fisttpll
pop
cmp
lock
fidivrs
cmc
rclb
and
sbb
pop
xor
in
addr16
movb
cltd
add
gs
mov
add
cmc
daa
mov
pop
xchg
xor
jge
dec
pop
out
pop
mov
or
and
dec
das
loop
pop
add
xchg
iret
lock
jg
push
add
sub
sti
sarb
inc
mov
push
and
jmp
decl
sub
mov
pop
xchg
ret
add
in
cmpsb
in
xchg
pusha
jmp
pop
repnz
add
adc
add
call
inc
sub
gs
and
popa
dec
pop
orb
and
push
add
inc
dec
fwait
sbb
sbb
pushf
pop
bound
mov
add
cwtl
loop
add
movsl
es
lahf
rol
das
jle
mov
cmpb
jbe
loopne
sbb
add
mov
add
iret
rorl
pop
xor
inc
in
testl
push
jbe
pop
xor
jno
cmp
rclb
inc
add
push
or
add
cmp
xor
inc
add
insl
add
sub
scas
arpl
mov
jecxz
jo
mov
test
jp
or
in
cmp
pop
adc
mov
xchg
fbstp
push
ds
add
xchg
stc
sbb
sbb
add
lea
add
out
lods
push
pop
jg
push
test
mov
or
mov
popf
or
add
inc
push
add
rcll
out
mov
mov
inc
or
mov
sahf
or
or
leave
add
cmp
sub
je
add
pop
add
imul
movsb
jnp
inc
mov
xchg
inc
add
mov
cmp
pop
mov
xor
add
stos
mov
mov
dec
sub
popf
jmp
dec
cltd
loopne
cli
adc
pop
loopne
sub
sbb
sbb
mov
add
inc
adc
add
push
andb
pop
push
fwait
inc
sub
cmp
test
out
fdiv
mov
mov
sti
pop
xor
jecxz
add
pop
inc
outsb
insb
jns
xchg
add
sbb
inc
test
cmp
mov
sbbb
test
push
sahf
add
mov
or
imul
test
pop
add
or
and
pop
or
leave
add
clc
push
mov
adcb
push
xor
filds
xchg
dec
pop
test
dec
inc
ret
and
xorb
mov
lahf
inc
cmp
dec
mov
jb
in
in
fnstenv
test
gs
rcrb
insb
roll
dec
and
dec
dec
pop
enter
scas
inc
in
mov
jp
cmp
add
add
inc
in
xor
sti
shl
inc
or
nop
flds
aaa
sbb
or
js
add
divb
pusha
or
xor
push
push
imul
xor
fldt
jge
push
les
pop
add
mov
or
add
je
sub
xor
pop
pop
or
mov
jmp
add
leave
push
das
adc
add
push
cwtl
pop
add
negb
insb
jle
cmpsl
clc
push
loop
out
lock
outsb
or
test
add
rcrl
daa
mov
and
push
shl
jmp
je
add
test
inc
mov
jecxz
es
xchg
pop
add
push
adc
or
jo
outsb
add
cmp
mov
add
sahf
jno
mov
addb
in
cmpb
dec
pop
or
jg
mov
ja
insl
cltd
add
jo
adc
jmp
ljmp
jno
das
push
jb
mov
gs
test
add
xchg
test
mov
or
cwtl
add
insl
int3
in
pusha
cmc
sbb
mov
loop
and
in
cmp
andb
notb
repnz
push
xchg
inc
insl
mov
dec
xor
inc
sahf
aam
movsl
cli
mov
sub
xor
insl
and
sub
aas
add
or
mov
cltd
insl
iret
xchg
dec
pcmpgtw
insb
and
ljmp
fsubs
mov
xor
xchg
in
shrl
pop
sarb
add
or
ds
jne
int3
fs
xchg
ret
loop
mov
add
or
jp
test
pushf
cli
test
jg
add
popf
xor
shlb
mov
add
and
call
fisttps
adc
call
mov
ret
xorb
in
mov
lret
add
inc
add
push
aaa
xor
cmova
inc
dec
mov
xchg
xchg
call
dec
pop
mov
std
add
push
pop
leave
into
pop
cmc
adc
cmp
out
dec
add
inc
test
cltd
xor
pop
inc
mov
push
sbbl
mov
in
mov
pop
push
add
xchg
addr16
add
push
sub
rcll
inc
les
lods
sub
lahf
push
adc
out
mov
movups
inc
aam
call
add
nop
add
sbb
mov
add
cmp
mov
dec
push
xor
sub
and
inc
add
push
nop
jl
int
and
es
push
cmp
add
inc
xchg
shll
push
sbb
push
push
add
cld
je
sub
add
xor
enter
aas
add
sbb
cld
add
mov
pop
inc
mov
nop
jo
sub
aam
fistpll
data16
adc
adc
sbb
and
dec
enter
adc
ljmp
out
popf
xchg
jge
pushf
xchg
enter
imul
xor
mov
popa
mov
mov
mov
sbb
aaa
cmp
xchg
cmp
subl
mov
push
xchg
pop
je
in
inc
xchg
xchg
xor
xchg
add
adc
ja
cwtl
mov
aas
in
and
mov
cltd
inc
lcall
jbe
hlt
pop
add
out
sub
enter
mov
push
sub
sbb
addb
mov
int
pop
insb
adc
push
push
loope
jle
icebp
add
add
add
rclb
pushf
movsb
nop
cld
add
inc
cmp
cltd
dec
hlt
add
insl
and
pop
jg
sbb
f2xm1
pushf
fwait
mov
outsb
testl
dec
std
inc
clc
xchg
dec
push
cmp
push
xchg
in
add
insb
mov
jecxz
out
xchg
data16
aaa
movsl
cs
or
and
push
test
out
arpl
fildl
movsl
fisubs
clc
in
add
sbb
mov
mov
pop
or
mov
rcr
mov
lea
mov
or
int3
dec
xchg
sbb
test
shrb
movsl
add
sbb
ret
mov
add
insw
mov
dec
add
pop
addr16
insb
pop
add
test
push
movsl
or
cmp
cwtl
cld
push
add
add
hlt
or
enter
add
xchg
adc
mov
jnp,pt
pusha
add
pop
dec
rcl
mov
repnz
add
ficoml
xchg
loopne
add
jl
push
mov
sbb
mov
sbb
je
pop
adc
push
test
dec
shrb
push
inc
and
rclb
lods
dec
xchg
insb
push
outsl
lea
pushf
xchg
ret
pusha
jns
jo
pusha
inc
adc
xor
jge
cmpsl
shll
stos
js
js
or
popf
dec
add
in
movsl
add
fucomip
push
add
enter
in
cli
loopne
push
xchg
hlt
dec
aaa
subb
mov
mov
mov
lret
add
push
add
popf
int
add
xor
clc
inc
xchg
or
mov
int
cmp
add
in
jns
push
adc
loopne
lds
daa
cld
mov
dec
loopne
and
adc
dec
mov
add
dec
add
fs
movsl
outsl
jns
lret
add
popf
push
inc
lds
add
adcl
push
jecxz
push
ja
inc
jg
sub
push
mov
es
fptan
mov
call
iret
popf
jae
aas
leave
push
in
pop
sbb
pop
popf
loopne
dec
push
sbb
and
into
mov
pop
test
add
stos
pop
lcall
add
cmp
push
jae
mov
repz
repnz
mov
stos
addl
add
adc
xor
testl
cmp
inc
add
fdivrs
push
mov
fxch
lods
movsl
mov
outsl
add
push
sahf
ficomps
pop
xor
fistps
mov
scas
dec
jne
push
add
cmp
mov
add
jo
pop
stc
mov
inc
enter
cmp
sbb
popa
cmp
or
rolb
movsb
nop
pop
add
pusha
and
rorl
inc
sti
add
nop
scas
push
xor
xchg
xchg
les
mov
add
add
in
jne
cmpb
pushf
cld
fcoml
jl
lds
xorl
movb
inc
xor
bound
mov
daa
add
test
rclb
int
xor
adc
sbb
cwtl
xchg
insb
jge
add
sub
dec
add
testl
in
sbb
cmc
mov
mov
mov
ficompl
es
out
cli
inc
mov
pop
std
subb
stos
out
mov
lcall
fimuls
cwtl
jne
insl
imull
iret
or
loope
jnp
add
fisubs
lahf
fs
push
add
mov
sub
sub
pop
mov
mov
cltd
test
inc
call
outsl
and
cli
jb,pn
add
out
jl
sbb
push
mov
gs
sub
int
aaa
push
pop
and
xor
les
cmp
adc
xor
push
sub
cli
mov
ja
and
push
add
dec
es
cli
cmpl
mov
idivl
fsts
mov
add
add
mov
mov
lret
and
xor
add
jge
nop
sbb
mov
adc
test
mov
add
sbb
leave
add
lods
std
movsb
add
adc
fisttpl
pop
int3
xor
sti
push
fs
subb
dec
push
add
enter
dec
fldl
push
scas
aad
jo
jecxz
cwtl
mov
sbb
jb
add
arpl
sub
mov
daa
sbb
mov
sub
sbb
lret
rol
mov
movsb
scas
push
xor
inc
aam
mov
fwait
push
xor
jp
cwtl
sub
push
jmp
ss
cwtl
sbb
jno
push
xchg
fidivrl
scas
pop
add
mov
add
xlat
mov
adc
js
pop
jecxz
ja
xchg
add
pop
adc
testb
jmp
add
aam
jecxz
xchg
or
loope
push
add
in
push
das
iret
roll
imul
inc
mov
mov
xchg
add
dec
lret
insl
sub
aam
pop
ja
fyl2x
adc
mov
ret
xorb
dec
add
push
imul
in
adc
sbb
test
push
unpcklps
cmp
adc
out
ss
iret
xchg
dec
sbb
adc
add
lock
sub
jbe
add
jl
inc
push
jo
sarb
int
mov
or
out
lods
addr16
sub
add
sbb
fbstp
cmp
sub
pop
call
and
adc
or
push
cmp
aam
mov
clc
add
ds
inc
mov
aad
andl
imul
pop
push
aad
pop
je
test
add
sti
mov
movl
lds
xchg
pop
dec
add
dec
out
lahf
jmp
and
ljmp
movsl
inc
inc
aad
push
push
push
adc
adc
rolb
bnd
lea
add
mov
lods
ja
push
and
mov
inc
sbb
cli
lds
add
int3
mov
in
loopne
add
loope
ja
mov
cmc
aas
push
add
ljmp
flds
cltd
rclb
cmp
andb
mov
mov
add
mov
add
sub
xor
stos
mov
mov
add
mov
in
jb
lahf
loopne
sbb
stc
or
mov
xor
mov
lahf
in
fildll
fnstsw
ljmp
jns
aaa
sbbl
push
add
add
ljmp
xchg
repnz
ret
adc
pusha
xchg
and
arpl
mov
cmp
mov
test
cld
sub
jmp
jnp
or
pop
and
jbe
lds
add
xchg
mov
sbb
inc
pop
or
mov
repnz
cmp
clc
fsubs
rolb
mov
or
or
push
pusha
mov
add
mov
loop
inc
outsb
add
das
add
mov
test
js
inc
cmp
sti
out
jae
mov
jne
call
or
sarb
gs
xor
mov
push
insl
push
add
popa
mov
inc
dec
cmc
or
pushf
mov
mov
ja
xor
and
mov
mov
push
lock
add
jle
sub
test
roll
into
xor
cmovo
lret
jecxz
addb
ja
cld
jne
add
mov
repz
out
fadds
and
and
cwtl
xchg
cmpsb
pop
addl
jno
jae
pop
pop
xchg
cs
adc
pusha
jp
sub
adc
lcall
fwait
pop
sub
mov
les
add
lods
clc
push
test
inc
out
pusha
rorb
fimull
pop
mov
aas
push
out
cli
js
pop
jmp
leave
sbbl
add
in
push
out
loopne
xchg
lds
pop
pop
pop
add
movsl
xor
jno
in
jbe
cmp
ret
jl
mov
fmull
aad
movsl
out
ja
push
scas
jle
xchg
add
pushf
add
mov
scas
or
shrb
add
mov
pusha
xor
je
sti
repnz
add
add
adc
roll
add
rcrb
mov
imul
stos
mov
inc
icebp
movsb
cmp
repz
and
jb
cmp
xchg
push
iret
pop
aas
ret
cmp
js
inc
or
dec
jb
inc
mov
add
jne
push
push
fidivs
inc
insl
fiaddl
cmp
dec
jmp
stos
mov
fldl
je
inc
adc
pop
out
add
jno
adc
in
sbb
and
rclb
jne
out
mov
gs
les
push
pop
ss
jae
pusha
pop
dec
jo
or
dec
orb
gs
pop
cs
push
xor
pop
adc
add
sbb
xchg
add
pop
cltd
jae
cld
lock
jbe
adc
jnp
mov
jg
loopne
adc
pop
stos
or
jge
insb
inc
popa
adc
jns
cmp
add
insl
sbb
iret
jge
adc
mov
scas
dec
in
fisttpl
push
dec
xchg
cld
cli
pop
cld
in
add
jo
cmp
jecxz
push
push
jns
add
out
mulb
jns
add
adcb
add
adc
push
sbb
out
les
xor
cmpsl
jno
mov
or
addb
loope
mov
cmc
cmpsl
add
aam
movsl
clc
mov
adc
mov
ficoms
mov
loopne
push
mov
sbb
add
lret
push
into
aam
fcoml
add
xlat
testb
cmpsl
fnstenv
pop
test
shlb
pop
addr16
es
cltd
xor
pop
push
sub
ja
movsl
push
pushf
or
jmp
pop
scas
out
add
push
cmc
and
dec
jae
push
nop
pop
sbb
mov
incl
add
subb
adc
sub
add
decl
test
js
sbb
andb
jge
aaa
rolb
pop
or
sbbb
dec
jns
xor
movhps
loop
xchg
add
xchg
sub
or
test
and
aad
and
push
pop
push
scas
xchg
add
adc
popa
jne
ret
inc
popf
enter
sbb
jmp
ljmp
add
loop
mov
jmp
daa
jo
adc
add
std
ret
push
mov
aas
cmp
in
push
push
sub
shlb
pusha
daa
ficoms
mov
mov
idivl
cmp
lret
sub
ret
shrb
add
mov
fsubrp
sbb
negb
inc
mov
add
and
cwtl
push
add
out
push
add
popa
mov
and
loopne
das
adc
sti
lcall
add
daa
test
lahf
xor
add
dec
add
jp
jmp
xor
ja
sbb
adc
mov
add
cld
mov
pop
pushl
add
ljmp
inc
mov
into
call
paddb
inc
push
icebp
sub
or
cli
sbb
int3
pushf
add
hlt
popa
dec
popf
pop
movsl
lret
notl
add
inc
pop
cmpsb
add
shll
cmp
movsl
add
pop
clc
mov
iret
pop
sub
push
mov
xor
nop
scas
add
ror
cmp
pop
mov
xor
lcall
test
sub
push
clc
pop
stos
cmovnp
adc
sbb
scas
jns
les
aam
add
cmp
stos
je
faddl
push
or
loope
mov
jbe
jecxz
movsl
inc
out
int
add
mov
pusha
add
addr16
cld
insl
mov
sbb
jo
es
pop
sub
jp
sub
jge
aas
push
mov
xchg
adc
popf
aam
test
push
pop
jnp
dec
push
add
inc
mov
mov
add
les
inc
xchg
xchg
add
daa
cs
cmp
sbb
mov
into
add
insl
add
dec
ret
loop
cmp
out
cmp
xchg
add
mov
lahf
add
test
call
add
mov
and
hlt
inc
shlb
add
xchg
inc
or
rol
add
and
dec
adc
cld
imul
adc
aas
out
fcoml
ja
pop
test
sub
outsl
xor
mov
mov
cmpsl
mov
pop
or
ljmp
aad
mov
filds
pop
mov
push
cmp
lret
xchg
mov
movsl
shlb
xor
inc
push
push
test
andb
and
imul
mov
scas
cmp
xchg
and
aas
or
arpl
je
testb
into
mov
sbb
xchg
les
in
jg
in
pop
pop
pushf
jmp
pop
sarb
add
adc
mov
je
sub
icebp
inc
push
cmp
cmpsb
loope
jb
add
insb
test
jns
mov
push
stos
icebp
add
lret
hlt
adc
loop
std
push
cmc
shll
jbe
push
add
loop
fcoms
push
insb
mov
popa
mov
mov
dec
sbb
pop
dec
sub
add
and
sub
inc
xor
sbb
sarb
jo
cmp
pushf
inc
push
dec
clc
les
jmp
pop
ljmp
cld
adc
push
outsb
fxch
lods
movsl
jbe
xor
dec
jo
xorb
fisttpl
pop
xchg
das
add
mov
cli
clc
cld
addl
add
lahf
shr
mov
and
sub
or
test
dec
stos
inc
xor
pop
ss
xor
jge
aad
sub
add
mov
insb
es
push
add
scas
clc
mov
push
add
sub
outsl
add
mov
xlat
add
pop
dec
mov
add
dec
lret
sti
fs
data16
sbbl
fst
mov
xchg
pop
push
call
add
mov
in
push
or
jl
dec
cwtl
add
inc
lea
mov
add
insl
dec
loopne
shr
and
xor
ja
mov
inc
add
mov
add
pushf
cmpsl
pop
pop
idiv
jno
add
aas
imul
daa
mov
sub
in
xor
roll
je
inc
int3
inc
dec
out
pusha
dec
dec
add
push
inc
mov
push
jle
cs
push
jnp
add
inc
xchg
dec
or
leave
add
ss
jae
and
mov
or
shlb
out
mov
lods
xchg
pop
push
jecxz
adc
add
out
aas
add
scas
mov
jle
add
dec
outsl
clc
fcomps
sbb
add
push
pusha
fstl
out
sub
jmp
jle
sbb
or
cmp
aam
or
fsubs
arpl
out
adc
xor
jo
hlt
add
popa
in
and
add
ret
hlt
mov
and
xor
sbb
sbbl
cmc
add
mov
stc
adc
in
jae
mov
mov
aam
xchg
add
dec
mov
loope
fchs
xchg
ljmp
sub
addr16
xor
and
add
pop
lret
enter
cmc
loopne
adcb
jg
pop
cmp
mov
fs
loope
adc
out
es
push
dec
add
mov
or
repz
inc
xchg
pop
jo
sub
testl
loopne
push
lock
mov
cltd
add
push
pop
mov
xchg
push
sub
sub
or
rclb
ja
inc
sahf
popa
pusha
push
sbb
scas
add
and
je
add
pop
inc
cltd
sub
mov
xchg
lods
jle
out
cmc
roll
pop
and
insb
sub
test
push
mov
aam
dec
lods
dec
add
and
std
inc
ret
and
rcrb
add
clc
adc
lds
jg
mov
lods
push
shlb
add
pop
mov
and
push
pop
add
inc
fdiv
fwait
ud1
es
dec
lods
add
ffreep
arpl
in
add
and
xlat
push
popa
rcl
andl
mov
call
jge
add
pop
and
add
sar
rclb
add
sahf
mov
jo
idivl
xor
repz
pop
adc
add
enter
mov
jge
add
add
and
mov
xchg
add
lcall
add
and
pop
dec
add
fisubrl
in
sub
aam
add
je
sahf
leave
rorl
pop
xchg
mov
pop
and
mov
ljmp
add
cli
sbb
and
in
imul
or
adc
add
sbb
shrl
and
and
jle
push
or
cmp
outsl
mov
or
and
shll
lcall
add
and
pusha
jecxz
sbb
cmp
sahf
in
daa
daa
push
pusha
inc
shrb
add
jo
add
or
out
add
filds
shrb
add
mov
popf
jle
scas
pop
loopne
lret
sarb
add
pushf
stos
pop
movsb
cmp
orb
mov
mov
cmp
fdiv
in
shl
mov
mov
pop
fadds
std
gs
lret
add
jl
xorl
in
xor
dec
mov
jae
fs
test
mov
fadds
lock
pop
loopne
lds
sub
and
mov
inc
stc
xchg
lods
jl
jmp
inc
jno
dec
dec
mov
popf
and
mov
add
aam
incl
mov
xchg
mov
inc
mov
mov
aaa
pop
out
addl
or
xor
dec
loopne
dec
sub
or
sbb
aam
jns
daa
mov
test
outsl
ret
mov
mov
mov
fcmovnbe
inc
cltd
mov
movsb
pusha
jecxz
mov
shr
sbb
lock
sub
or
adcb
aas
enter
cmp
ss
ljmp
and
push
jb
testb
pop
jnp
cmpb
ds
gs
aad
popa
xchg
xor
mov
mov
cmpsl
pop
nop
mov
sbb
xor
outsl
push
cmp
pop
push
enter
scas
lcall
add
fidivrs
add
and
pop
cmpsl
xor
dec
ds
shl
jb
dec
dec
loopne
mov
int3
outsl
xchg
add
sarl
push
lock
stc
push
mov
xchg
rclb
dec
inc
mov
lods
add
in
dec
cmpsb
mov
or
sub
ds
fs
addl
ss
lods
push
add
adc
test
sti
repz
pop
bound
test
inc
jo
adc
dec
add
cmp
ja
movsb
mov
fcompl
add
jp
xchg
xchg
loopne
lock
pop
divl
add
cmpl
mov
aam
mov
sbb
push
ja
push
daa
vmaxss
std
orb
cmp
dec
jp
les
imul
jg
adc
outsl
movsb
hlt
add
xchg
in
cmp
push
or
mov
push
sub
pop
inc
loop
add
add
add
dec
icebp
bnd
lds
je
mov
pop
ds
adc
cmp
or
movsl
add
out
add
xor
inc
ja
mov
inc
sub
add
jl
out
add
dec
xlat
dec
add
mov
push
adc
bound
xor
sbb
adc
js
cwtl
adc
mov
jo
nop
cmpsl
outsl
sbb
push
dec
xorb
adc
mov
add
fadd
rorb
pusha
or
xchg
push
inc
add
std
test
imul
repz
mov
xchg
je
add
roll
sbb
mov
cltd
add
xchg
repz
out
xchg
jo
mov
push
mov
sbb
sbb
or
add
adc
test
int3
pop
sub
imul
inc
push
xchg
push
pxor
jp
mov
or
popf
xor
and
lcall
sti
js
out
out
add
pop
jmp
shlb
sbb
mov
repz
inc
out
jl
insb
pop
addr16
ret
das
inc
mov
pusha
pop
dec
push
mov
outsl
imul
dec
xchg
add
loopne
test
and
jno
rcl
xorl
xor
jae
xlat
push
jmp
jbe
das
aad
cmp
push
mov
and
dec
jp
add
dec
push
add
insl
dec
js
daa
pop
or
xchg
sbb
ljmp
mov
out
pop
fists
or
jnp
or
inc
and
mov
add
lods
jp
add
pop
push
out
push
into
cmp
add
jg
nop
mov
inc
clc
bound
mov
pop
mov
das
inc
add
jmp
pusha
pop
sub
movsl
xchg
outsb
int3
or
js
repnz
es
sahf
test
aam
ljmp
shll
into
mov
icebp
jo
lods
out
dec
cli
xor
fldl
lret
scas
ret
lods
adc
add
ja
add
gs
add
or
aaa
add
push
xor
add
aad
lahf
adc
sbb
sbb
push
sarb
mov
out
loope
add
nop
lret
xchg
and
add
add
movsb
popf
mov
lock
xor
sub
test
mov
test
fmul
add
mov
dec
push
mov
cli
xor
xchg
inc
aad
fcomi
pop
push
add
xor
popl
lock
out
xor
mov
add
cmp
push
jle
push
jo
and
or
ja
cld
or
adc
lret
xor
iret
sub
dec
sbb
adc
add
sbb
cld
push
push
xor
sub
pop
xchg
and
add
daa
sahf
cli
mov
add
clc
fcompl
mov
outsb
adcb
add
hlt
rcrl
xor
lahf
cmp
outsl
xchg
add
loope
int
xor
dec
rolb
daa
shlb
dec
add
and
int3
xchg
paddw
add
pop
hlt
cwtl
cmp
xchg
jae
push
shlb
mov
xchg
fcmovne
test
mov
rolb
jbe
add
icebp
orl
jb
adc
int3
pop
inc
imul
ja
out
lds
add
cmpsl
dec
xchg
scas
imull
ret
add
clc
jnp
sbbb
mov
loopne
dec
add
jne
push
xchg
mov
push
add
sub
add
push
jbe,pt
cwtl
ret
cmp
xchg
clc
adc
stos
push
fiaddl
mov
pop
sbb
cmpsl
xchg
mov
mov
push
add
and
adc
add
xlat
loop
fdivs
iret
xchg
jp
add
aas
mov
shlb
repnz
pop
testb
shll
loopne
loope
lods
lahf
cmp
jg
and
addl
mov
push
stos
enter
in
movsb
xor
sub
out
adc
xchg
push
orl
or
inc
xchg
jb
test
xchg
mov
push
andb
lods
sbb
adc
lret
pop
pushf
loopne
inc
add
push
aam
iret
ficompl
movsl
add
loope
inc
aam
fnstenv
stos
popa
fucomi
cmpsl
xor
push
push
pushf
sti
dec
jbe
pop
jne
sbb
loopne
add
xchg
push
xor
inc
mov
sub
ret
jp
cmp
jb
adc
pop
pop
cmc
sti
loopne
dec
pop
pop
iret
and
jb
imul
mov
mov
mov
xchg
movsl
adcb
mov
es
cmp
bound
enter
pop
add
fbstp
push
or
lock
rorl
cs
push
pop
jno
xchg
and
aas
pop
daa
in
cmpsb
add
and
xor
add
mov
dec
add
adc
fistpl
cmp
leave
std
mov
fcmovbe
xchg
inc
and
cmpb
pop
add
sub
mov
xor
mov
jmp
nop
mov
outsl
mov
sbb
int3
pushf
repz
nop
sbb
sbb
out
pop
push
inc
cmpsb
or
dec
cmpsb
add
dec
jge
add
xorb
mov
clc
popf
pop
jnp
add
mov
push
or
loop
rol
mov
popa
jg
movsb
outsb
mov
insl
add
mov
inc
fdivrl
fcmovnbe
inc
mov
out
and
push
cwtl
mov
lods
inc
mov
sub
test
sub
loop
xchg
inc
clc
les
ss
les
dec
inc
jne
mov
push
add
pop
dec
sub
lods
pop
js
or
jp
or
pop
inc
cmp
inc
add
xor
lds
in
test
sbbl
adc
fs
push
cmovo
test
addr16
fucom
push
je
mov
out
fisttps
mov
cmp
mov
mov
fwait
cmc
mov
add
xchg
int3
hlt
add
cmpsb
sbb
jnp
xchg
push
iret
add
pushf
mov
icebp
xchg
jl
adc
hlt
add
shll
adc
inc
andl
shl
scas
rcrb
ds
jg
outsl
add
and
and
add
and
aas
adc
add
and
inc
sbb
sbb
fmul
xchg
or
adc
cs
dec
mov
mov
pushl
imul
mov
enter
add
pop
outsl
in
jno
test
cmp
icebp
mov
test
leave
xchg
mov
mov
cmpsl
jecxz
add
add
dec
je
jle
adc
movsl
inc
addl
push
in
sar
fdivrl
ljmp
or
pop
xor
add
adc
push
mov
push
sarl
sub
cs
pusha
mov
mov
xor
push
push
iret
shlb
xchg
les
mov
add
pop
jmp
mov
and
gs
dec
rcll
aad
add
pop
mov
loop
mov
adc
iret
push
movsb
pusha
pop
inc
arpl
addr16
mov
add
mov
mov
mov
ja
add
loope
push
and
fimull
jmp
loopne
leave
push
dec
add
out
dec
fists
nop
adc
xchg
or
pusha
outsl
add
xor
aas
in
out
mul
imul
add
dec
cmp
cld
cmpsb
jmp
inc
jmp
pop
shrl
inc
jecxz
jnp
push
aam
xchg
adc
dec
cmp
movsb
sbb
cld
lret
add
aam
out
lcall
mov
jg
movsl
sbb
sti
addl
shlb
fsubp
add
xchg
decb
mov
fiaddl
jl
jbe
imulb
out
movsl
scas
pop
cmp
mov
test
int
pop
dec
pop
mov
sbb
shlb
adc
sub
push
cli
inc
inc
xchg
add
js
clc
cmp
push
into
cmp
jo
pop
in
test
das
add
fwait
pop
sahf
add
jbe
loopne
movsl
in
out
dec
add
jb
mov
inc
sti
leave
xor
mov
andb
mov
adc
icebp
sub
cmc
xor
arpl
xchg
mov
pop
add
cmc
loope
pop
fadd
sub
clc
push
jge
in
push
xchg
ret
cmc
mov
add
xlat
stos
pushf
pop
jo
setb
bound
jp
ret
shrb
call
push
cmp
ss
xchg
sbb
cmp
push
jmp
movsb
push
inc
test
mov
dec
call
inc
mov
cmp
pop
fists
loopne
jl
pop
jecxz
cmp
ret
rorb
mov
pop
insb
push
add
test
add
adc
stos
maxps
xorl
adc
bound
cs
out
addb
dec
add
mov
and
add
cmp
add
pop
or
or
pop
xchg
inc
shr
xor
pop
dec
and
pop
jmp
inc
sub
xor
push
nop
ret
sub
iretw
sbb
push
xchg
call
cli
jge
pop
and
inc
sti
loopne
stos
out
nop
test
mov
aad
test
push
inc
push
sbb
in
gs
add
mov
mov
std
jp
pusha
xor
jmp
or
mov
adc
and
lods
pop
fnstenv
adc
ret
imul
adcl
jb
add
mov
mov
lock
and
add
je
adc
jg
add
outsl
mov
adc
scas
cmp
sbb
pop
sahf
cmpsl
mov
jmp
add
mov
cmpsb
cmp
push
xlat
lahf
jno
loope
cmp
and
lcall
push
imulb
subb
add
jb
xchg
cmp
idivb
inc
sbb
mov
mov
leave
mov
jo
in
dec
xchg
pop
imul
mov
add
cltd
mov
sbb
pop
mov
mov
sub
fildll
mov
imul
add
ja
dec
outsl
push
mov
aad
and
cld
push
lea
movsb
mov
data16
add
fimuls
sbb
outsb
orl
dec
out
or
movsl
stos
test
mov
enter
mov
mov
cmp
xor
jae
enter
mov
andl
jle
add
dec
sti
cmc
inc
xchg
add
jmp
cmpsl
jb
imul
mov
xchg
xor
jae
fcompl
jmp
sbb
adc
adc
les
lock
js
or
cwtl
push
test
mov
adcb
add
mov
call
mov
ljmp
lods
jge
fldenv
xchg
orb
pop
sarl
add
cmpsl
mov
lea
in
notl
add
xlat
sub
scas
je
push
lock
test
mov
add
and
adc
lods
nop
mov
sbbl
cmpb
cwtl
adc
xchg
hlt
add
mov
out
mov
test
mov
inc
fnstenv
and
inc
int3
cmp
int3
or
and
dec
mov
xor
imul
sub
hlt
xchg
add
lods
xchg
rcll
push
add
xchg
pop
add
jo
jbe
jg
nop
cmp
cmp
and
scas
cmp
call
lods
dec
scas
cld
xchg
and
aaa
push
mov
aad
cltd
mov
add
inc
mov
out
pusha
cmp
stos
sbb
xlat
adc
enter
inc
fstps
add
daa
mov
movsb
push
inc
movsb
or
cld
fwait
mov
fstl
test
xchg
add
js
xor
pushf
aam
repnz
adc
enter
xchg
and
sarl
ljmp
inc
fldcw
movsl
push
bsf
adc
pop
lods
mov
std
lahf
dec
xchg
push
adc
mov
jmp
xchg
adc
pusha
adc
rcrb
mov
lahf
icebp
add
sub
mov
push
js
adc
aad
in
jp
and
pop
jp
push
xor
sahf
cwtl
jge
sbb
mov
inc
test
jmp
pop
xchg
add
lock
data16
add
pop
sbb
xor
xor
ja
push
jmp
fnstsw
inc
xchg
ret
cmpsb
push
add
sarb
pushf
stc
aad
and
or
and
add
lds
jmp
loopne
rol
xor
cmp
lods
add
leave
add
setb
add
inc
outsl
and
inc
mov
or
shl
sub
push
mov
aas
arpl
sbb
cwtl
aaa
addr16
adc
imul
xchg
add
pop
test
mov
and
imul
dec
test
xor
mov
fbld
ljmp
rol
and
dec
adcl
sti
mov
inc
js
sbb
nop
in
mov
jg
ret
mov
cld
outsl
lcall
icebp
xchg
and
movl
adc
or
xchg
sub
popa
inc
pop
ret
push
repz
dec
daa
in
sbb
mov
mov
inc
or
sbb
pop
insb
add
dec
orb
jae
ss
popf
add
rcrb
icebp
in
lods
inc
imul
or
mov
aaa
sub
mov
or
test
inc
and
mov
add
lcall
mov
xchg
xchg
xchg
push
add
notb
sbb
je
mov
fistl
xchg
mov
or
les
into
mov
mov
xorb
pop
xchg
push
sbb
adc
incl
sbb
icebp
or
xchg
cld
push
insl
add
push
test
pop
nop
cwtl
jecxz
mov
and
adc
xchg
add
jg
add
xchg
mov
ja
fnstcw
imul
pop
das
cmp
xor
lods
pusha
inc
cs
and
mov
cmp
push
dec
mov
or
sbb
clc
loop
xor
loope
or
dec
mov
xor
icebp
add
mov
mov
sbb
pop
mov
pop
mov
fistl
movsl
fdivrs
and
adc
jae
and
sbb
sub
mov
adc
imul
mov
rorb
inc
jle
mov
sub
repz
fildl
les
daa
push
dec
pusha
pusha
jmp
sbb
pusha
movsb
jae
in
xor
cltd
rolb
dec
mov
adc
mov
enter
lods
les
movsl
stos
add
imul
add
and
scas
push
leave
cmp
push
sub
dec
xchg
cmp
cwtl
enter
xor
xchg
jns
lea
rcl
mull
insb
xor
ret
les
shlb
loop
sbb
popa
lea
mov
adc
test
or
dec
sbb
sbb
movsb
adc
jo
in
add
stos
mov
and
std
movsl
ret
push
or
frstor
jl
sbb
dec
add
cmp
or
mov
fldlg2
push
cmp
insl
xor
popa
das
aam
nop
mov
or
pop
sbb
and
jno
fdivr
push
aam
xchg
inc
cmp
test
incl
jle
adc
xor
or
shl
and
mov
adc
daa
xor
mov
inc
les
pop
mov
test
in
addb
jae
rcrl
mov
pushf
mov
ret
leave
dec
addb
mov
pusha
pop
mov
inc
dec
daa
cmp
out
pop
jo
dec
adc
sub
ffreep
jmp
iret
jbe
add
adc
mov
inc
rclb
dec
and
inc
adc
adc
and
sbb
inc
xchg
dec
mov
in
add
add
insb
inc
sbb
xlat
mov
xchg
into
jl
add
xor
add
xlat
or
jmp
sbb
pop
ficoml
add
xchg
icebp
dec
add
jge
jbe
pop
add
addr16
ds
add
cmp
iret
test
pop
popf
add
jmp
add
add
dec
int
xor
pusha
jns
add
xor
in
adc
testb
adc
push
lods
add
sbb
or
and
int
xchg
sahf
sti
jbe
popa
add
subl
and
imul
sub
xlat
fs
add
outsl
mov
iret
add
leave
out
pop
sub
jo
out
int
add
movsl
jo
push
jl
add
iret
dec
sub
pushf
loop
add
movsl
loopne
mov
push
or
sub
dec
sub
pop
fst
inc
pop
jb
inc
sahf
push
mov
into
add
jnp
sub
adc
lock
out
add
jo
ficompl
add
push
movsl
cmp
pusha
or
fimull
mov
in
movsl
jnp
lahf
out
test
adc
push
shlb
mov
outsl
add
fldl
gs
mov
inc
ret
xchg
jne
push
cltd
or
fadd
mov
adc
jbe
movsl
shlb
dec
pop
sbb
jle
add
xchg
popf
test
sti
add
lods
out
add
int3
vandps
or
push
add
add
subb
lret
dec
fadds
pop
lahf
ret
inc
xor
adc
lods
mov
sti
dec
bnd
add
dec
aam
push
jge
xchg
inc
out
jbe
fidivs
xor
and
cmp
adc
xchg
mov
imulb
cmp
hlt
shll
pop
jmp
inc
loopne
mov
sub
repnz
clc
add
mov
adc
add
mov
or
pop
inc
pop
inc
out
add
test
pop
push
adc
ret
adc
das
adc
xchg
jno
lahf
data16
cmp
shll
add
inc
sub
push
repnz
imul
mov
add
cs
pop
popa
mov
clc
call
lods
xchg
outsl
cmp
xor
daa
sbb
pop
jmp
mov
push
pop
and
dec
xchg
data16
mov
inc
out
test
dec
int3
mov
and
clc
jno
into
add
inc
ret
push
xlat
flds
das
inc
or
xchg
lea
sbb
xchg
mov
rcrl
popf
adc
adc
inc
sub
mov
leave
jne
adc
jb
aad
adc
and
cmp
flds
daa
add
lret
mov
movsl
mov
out
or
pop
xor
mov
pop
push
push
xchg
inc
jb
sbb
push
in
fisubrs
sub
shrl
clc
in
push
xchg
test
sarl
mov
inc
call
push
lret
test
adc
and
mov
cli
lods
dec
movsb
out
je
cmp
mov
bsf
adc
sub
adc
inc
xchg
add
pop
pop
pop
sbb
push
push
xor
loopne
cld
dec
lods
mov
test
add
lock
jle
add
sub
shll
jg
push
pop
push
into
mov
add
nop
sti
xor
mov
test
sarb
addr16
add
stc
sarb
or
inc
fwait
add
jb
inc
and
sti
xchg
dec
jmp
fildl
fs
pop
enter
test
push
lret
mov
pusha
and
cmp
cmpsb
sbb
shll
and
jae
add
fcomps
pop
data16
into
sbb
test
cmpsb
lret
mov
xor
pop
es
add
stos
lret
sub
xchg
jo
enter
adc
shr
add
add
ds
sub
mov
nop
fistps
add
jg
mov
dec
out
add
scas
cwtl
adc
jmp
add
mov
add
rolb
loopne
mov
cwtl
pop
testb
aam
and
pop
cli
shll
loope
dec
add
and
and
pop
movl
cld
mov
xchg
sarl
adc
lds
pushf
add
xchg
and
popa
push
pop
insb
shlb
jb
je
add
fsubs
add
pop
inc
cmp
push
xor
xchg
push
ljmp
push
or
lock
add
xor
pushf
add
mov
mov
orl
loop
cmp
dec
aam
and
or
adc
add
sbb
push
in
idiv
sbb
cli
outsl
inc
in
mov
push
ds
sarb
push
ljmp
add
mov
add
mov
sbb
out
enter
pusha
inc
sar
add
scas
mov
rcrl
imul
divl
sahf
scas
aaa
or
sbb
xor
out
int3
mov
cmp
insl
pop
and
dec
jnp
add
push
int3
sti
adc
sub
inc
push
mov
incb
add
imul
adc
mov
mov
or
pop
add
jo
stos
pop
mov
repnz
push
jg
mov
push
or
insb
dec
lods
xchg
in
jp
sub
add
mov
sti
insl
aad
test
lock
cmp
dec
sub
mov
call
jecxz
mov
std
in
or
inc
fiadds
popa
mov
test
iret
mov
add
ja
mov
shr
sbb
cmc
repnz
mov
pop
sub
add
mov
add
and
pop
dec
add
jo
push
test
lock
jo
pop
bound
sbb
cmc
mov
jge
clc
add
sbb
sti
out
xchg
add
inc
mov
shrl
or
pop
cltd
orb
xor
add
flds
andb
sbb
add
mov
mov
jmp
mov
pop
mov
add
push
notb
pop
loop
add
popf
add
jmp
cmp
xchg
cmpsb
clc
mov
add
jbe
push
insb
adc
push
add
mov
xor
inc
sub
xchg
loope
dec
add
cmp
and
add
stc
cmpsb
insl
add
pop
out
clc
addb
movsb
aas
fisttpl
add
add
jl
and
dec
and
add
sbb
cmpb
rcrb
xchg
fmull
pop
icebp
xchg
movsl
ja
mov
sbb
pushf
imul
js
and
or
adc
pop
mov
adcl
lods
shrb
das
cs
lcall
ret
add
pop
dec
sbb
dec
addb
imul
fidivrl
rcll
or
insl
pusha
or
xchg
mov
inc
cmp
popa
out
aad
mov
bound
sbb
fldl
ret
push
adc
sbb
in
pop
add
loope
xor
add
cmc
dec
sbb
push
ja
lahf
add
jbe
cmp
xchg
enter
inc
jge
fs
sub
and
out
outsl
push
test
fmuls
sub
add
xchg
inc
ss
add
pop
fimull
int3
add
mov
push
push
mov
sbb
adcb
out
pop
inc
adc
sarb
add
insl
andl
push
dec
mov
loope
or
inc
xor
data16
out
add
jmp
dec
pop
and
or
mov
jecxz
jge,pn
xchg
lock
push
enter
sbb
mov
mov
push
xor
jnp
in
fimuls
add
cmp
add
jns
add
sbb
cmp
mov
push
cmp
mov
xor
test
dec
or
add
popf
add
dec
xlat
sbb
pop
push
or
pop
xchg
jno
jg
mov
adc
xchg
leave
fidivrs
jle
cltd
pusha
cmp
lods
push
loope
inc
fmuls
add
aas
dec
mov
add
and
mov
adc
inc
fucomp
push
sbb
mov
add
mov
push
and
push
add
dec
neg
add
fnstenv
add
iret
les
fwait
add
fnstenv
into
dec
add
add
jne
call
push
cmpsl
jle
pop
leave
mov
int
mov
cwtl
in
clc
cmp
pusha
hlt
int3
mov
fadds
add
jae
push
lcall
pusha
cld
sbb
fs
out
push
jge
jno
loop
cltd
fdivrl
jo
pushf
add
xor
push
mov
add
insl
push
cmpl
adc
cmp
adc
cmpsb
mov
add
popf
dec
xchg
pop
mov
adc
push
sarl
sbb
cwtl
cmpsb
or
mov
push
add
mov
xchg
daa
add
fildl
push
add
fcomi
xor
jge
iret
test
jl
insb
dec
cmp
mov
push
mov
lock
add
daa
ja
in
data16
rcrb
call
mov
aas
pop
add
mov
or
pop
or
sbb
add
mov
add
sti
add
xchg
stc
inc
enter
mov
cs
out
mov
xchg
jle
adc
sbb
cltd
movb
shll
add
mov
or
jb
adc
nop
jns
cwtl
add
sbb
shl
inc
add
testl
aam
mov
call
cmp
out
adc
je
mov
movsb
je
add
in
fsub
add
movsb
int
pop
fadds
cmpsb
les
and
imul
mov
inc
adc
add
mov
pusha
mov
sub
add
rorl
js
dec
or
mov
lock
cwtl
test
dec
add
clc
out
jp
je
dec
ret
or
shrd
cwtl
fmuls
pop
add
mov
add
jle
jb
jo
insl
add
jbe
sbb
mov
andb
mov
mov
negl
xchg
cmpsl
cmp
popf
pop
mov
jmp
addb
pop
or
test
and
ret
mov
loop
add
pop
movsl
mov
jl
loopne
dec
push
insl
ret
pusha
mov
sbbl
mov
push
in
xchg
into
in
jo
fsub
out
shll
xchg
shlb
mov
scas
hlt
int3
aam
mov
adc
pop
add
aad
repnz
push
push
pop
xor
aas
clc
test
sbb
add
mov
mov
jge
mov
inc
in
aad
out
sub
mov
push
sub
test
pop
pop
out
fs
sbb
mov
mov
pop
test
and
lahf
popa
stos
xchg
repz
add
push
sbb
dec
pusha
xor
cs
or
push
dec
aad
jg
dec
jl
or
adc
enter
xchg
sbb
pop
cmp
fldenvs
add
addb
sbb
in
push
pop
jl
add
xchg
addr16
cmp
add
dec
mov
xor
dec
mov
lods
daa
add
mov
mov
test
mov
push
cmp
rcr
test
mov
or
inc
je
jno
adc
dec
xchg
and
pushf
call
out
add
mov
nop
enter
test
add
sarb
mov
fcomps
js
inc
rolb
pop
sti
and
mov
add
push
cltd
and
mov
cmp
stos
and
dec
add
sub
mov
push
leave
fwait
or
pop
and
mov
xchg
mov
mov
mov
and
into
imul
lock
cmp
push
push
and
cmpsl
pusha
sub
gs
pop
dec
aam
sarb
add
push
or
subb
out
bound
add
jmp
nop
mov
aam
add
lods
dec
inc
pop
test
jg
inc
ficompl
testb
call
cmpl
pop
xchg
jge
mov
repnz
push
mov
loope
lock
das
and
mov
push
mov
inc
add
mov
scas
add
scas
lcall
jle,pt
in
call
mov
inc
jp
xchg
jns
add
xor
add
add
fcompl
add
fs
in
mov
pushf
enter
setnp
adc
xor
jge
add
lcall
add
mov
push
mov
subb
fstpt
nopl
in
xor
scas
popf
sarb
add
and
iret
lds
stos
int
in
test
les
test
out
dec
pusha
sub
movsl
push
or
loopne
mov
xlat
or
insb
and
iret
add
scas
inc
bound
xor
cmc
inc
test
test
jno
dec
fwait
nop
jle
hlt
adcb
pusha
fidivrl
xor
pop
rorl
ds
stos
popa
sub
dec
add
mov
mov
cmpsb
add
xor
fucomp
pusha
or
pop
or
mov
lret
adc
lock
ret
test
pop
loopne
les
xchg
mov
das
dec
or
xor
sbb
jb
inc
lcall
mov
ljmp
test
addr16
loopne
sahf
jl
repnz
cmp
xor
popf
pusha
loop
mov
mov
inc
test
imul
mov
inc
cli
std
adc
nop
mov
xchg
push
xchg
cli
push
leave
pushf
ljmp
mov
push
push
sub
subb
enter
push
pop
push
mov
inc
enter
add
or
add
mov
and
js
pop
aas
xchg
add
cld
cmp
pusha
nop
cmpb
mov
sbbl
xchg
add
mov
out
shl
movmskps
mov
pusha
bound
add
or
add
daa
pop
pop
in
mov
cmpsl
cmpsb
mov
inc
mov
in
mov
adc
sar
outsl
sti
lret
pop
js
lahf
mov
adc
mov
lcall
test
adc
in
setne
outsl
repnz
lret
add
inc
add
push
and
mov
repz
adc
add
lea
loopne
std
add
cmpsl
pop
inc
add
adc
dec
add
pushf
and
imul
cli
xchg
lret
sub
pop
inc
inc
in
sahf
in
insl
cmp
addr16
adc
and
xchg
add
loopne
and
inc
sbb
jp
js
jns
add
fnstcw
inc
add
addr16
aaa
call
nop
sub
xor
fildl
cltd
int3
dec
mov
push
loopne
test
sub
sarl
jp
in
testl
imul
add
mov
pushf
xor
and
xchg
std
sub
mov
cmc
inc
aaa
fldz
lock
or
test
test
mov
jb
jo
sub
loopne
cwtl
push
dec
rcl
insl
add
add
hlt
mov
sub
dec
push
mov
pop
test
add
cli
and
inc
aaa
dec
add
aad
or
out
push
sti
xor
cltd
loopne
cmp
add
arpl
xor
mov
jne
inc
fidivrl
xchg
add
or
jle
cmp
hlt
lods
ret
outsb
inc
inc
cs
inc
add
vunpcklps
ljmp
adc
shll
aaa
adc
add
ret
dec
lahf
bound
pop
into
std
mov
jge
xor
sbb
stc
call
out
enter
add
stos
cwtl
mov
lret
xchg
mov
and
xor
cs
adcb
scas
push
jle
xor
add
insb
inc
fs
popa
or
sbb
jl
pop
out
in
incb
shlb
sbb
cmp
jne
notl
outsb
sbbb
lcall
mov
add
ds
clc
stos
repz
add
mov
in
adc
mov
sub
mov
mov
enter
add
or
mov
add
mulb
sarl
nop
xor
jge
jg
ret
fists
sbb
das
scas
lahf
sarb
add
push
xchg
add
cwtl
cs
or
mov
xorb
and
cli
add
lea
loope
xchg
lods
adc
es
and
aad
int
mov
repnz
pusha
testl
mov
inc
or
add
pusha
jns
jnp
jmp
es
popf
cli
mov
test
in
push
rcrb
adc
dec
adc
aam
xor
adc
jmp
cmp
scas
movsl
mov
clc
mov
and
pop
fiadds
mov
outsl
dec
pop
xor
sbb
jnp
add
mov
and
add
sbb
or
pusha
pushf
push
add
sub
pmulhuw
into
xor
jnp
gs
add
jp
cmpsb
loopne
enter
xlat
add
dec
fldt
and
cmpsb
fmull
test
and
and
out
mov
pop
enter
das
sbb
add
cmc
push
xchg
lret
mov
fiaddl
add
xchg
lea
je
add
push
int3
repz
mov
inc
cmp
jmp
add
jecxz
imul
loope
adc
int3
add
sbbb
orb
das
pop
or
shll
pusha
push
sbb
mov
hlt
test
jno
dec
in
cld
push
dec
loop
jg
add
mov
mov
or
pop
push
dec
dec
shrb
repz
imul
cli
jecxz
gs
or
and
push
dec
rol
out
xchg
inc
push
loope
sbb
or
or
inc
lods
scas
sahf
scas
pop
or
gs
fsubrs
outsb
outsl
adcl
divb
movsl
lahf
push
jo
popf
jnp
imul
rorl
jo
ds
out
std
inc
add
cs
in
mov
fsubr
inc
sar
insb
imul
loop
jg
dec
insl
in
lea
push
push
add
push
add
inc
icebp
cmp
pop
out
dec
sbb
jb
push
inc
addl
arpl
outsl
pop
cmpsl
lods
inc
jno
ret
shl
inc
fcom
pop
push
mov
add
mov
xchg
add
jo
dec
add
enter
add
test
stos
dec
insl
adc
sahf
es
add
adc
in
ja
mov
ret
add
cmp
xor
test
mov
or
xchg
pop
push
mov
int3
repnz
lcall
mov
pop
xor
and
pusha
add
xor
lret
dec
mov
nop
dec
mov
add
inc
sti
add
push
push
jp
ja
xor
sbbb
add
jge
aaa
test
add
shrb
jns
loop
int
mov
sbb
cmpsb
mov
mov
sarl
xchg
sti
pop
add
mov
inc
int3
push
cmp
add
fdivl
roll
sbb
adc
mov
push
out
or
in
call
push
adc
cs
ror
ja
sbb
fsubrs
imul
cmp
push
xchg
sub
adc
jbe
flds
cwtl
jle
cmp
jnp
push
sub
fisubl
push
addb
jo
in
test
adc
sbb
xorl
sbbl
dec
and
call
or
fnstenv
and
mov
cltd
int3
xchg
add
and
xor
shl
into
popa
sub
cltd
adc
pop
fistl
les
xchg
sbb
xor
movb
push
ds
jp
mov
loop
out
sti
add
or
inc
add
pusha
jmp
fsubrs
add
adc
mov
rcl
add
sub
inc
and
mov
sti
ds
lods
sbb
sbb
add
punpckldq
jno
add
cwtl
fimull
pop
lods
mov
jns
xlat
sbb
add
adc
mov
mov
das
inc
and
pusha
dec
mov
fdivrl
sub
inc
add
mov
clc
add
jno
addr16
xorb
add
or
sub
mov
call
and
fisubs
mov
add
mov
push
in
lea
add
sub
mov
and
add
dec
loope
add
cltd
and
jo
mov
je
inc
push
in
icebp
into
call
jne
cli
and
mov
out
or
test
push
jne
bound
pop
in
and
lcall
lods
rclb
add
std
xlat
outsb
aad
pop
aas
xorl
jbe
mov
sarb
add
push
pop
add
ja
or
nop
xor
and
add
sets
stos
sahf
and
rcrb
add
lretw
or
scas
enter
lds
int3
lcall
daa
add
cmpsl
fisubs
cmc
fwait
add
aas
mov
jl
jp
mov
xchg
add
xor
add
movsl
push
dec
int
sbb
ret
jp
in
stos
cmp
add
aad
out
dec
mov
add
call
xchg
sub
int
inc
xor
outsb
addb
xor
mov
xorb
dec
loope
fmul
out
add
arpl
mov
call
mov
xchg
jno
add
movsl
outsb
mov
pop
aad
out
je
nop
popf
dec
loop
add
adc
sub
dec
dec
push
mov
cmp
mov
pop
sub
adc
mov
push
repnz
lahf
call
mov
cmpl
imul
ret
cmp
in
jae
outsb
add
mov
add
dec
clc
out
or
and
add
stos
mov
iret
cmp
leave
or
imul
cmp
pop
pop
pusha
std
push
pusha
or
xchg
or
xor
add
pop
cwtl
inc
jae
add
out
push
add
jge
int3
faddp
hlt
rorl
jo
mov
cmp
add
or
pop
jns
add
pop
lret
push
cmc
mov
aas
or
pop
inc
xchg
mov
add
adc
mov
pop
imul
mov
lods
fmul
out
sbb
adcb
xchg
xchg
push
or
repnz
loop
xchg
inc
add
pop
or
xor
pusha
add
out
or
dec
loopne
add
inc
sub
stc
mov
dec
jl
pop
pop
ljmp
shrb
jae
add
pop
inc
lahf
and
push
test
xchg
stos
scas
int3
sub
mov
call
add
cmc
std
mov
add
aas
mov
mov
add
jmp
cmp
cmp
add
nop
mov
hlt
rorl
je
pusha
outsl
add
sbb
xchg
mov
lock
add
cli
mov
add
cwtl
add
push
repnz
add
repz
pop
or
inc
add
push
xlat
jmp
mov
push
adc
test
sub
jmp
pop
sub
repz
add
lahf
mov
outsl
out
into
enter
test
inc
lock
cmp
adc
movsb
ficoml
outsl
in
dec
mov
xor
cwtl
mov
enter
add
aam
add
jp
jmp
out
iret
inc
fldl
je
cltd
ds
mov
pop
inc
mov
cmpsl
loope
sbb
out
push
and
fistl
mov
pushf
mov
pop
sub
mov
add
outsl
ljmp
fcmovne
sti
push
pop
xchg
cmpsb
sub
sbb
stos
xlat
add
push
push
js
dec
fdivl
xor
mov
add
xchg
inc
pusha
jb
and
add
add
mov
jbe
leave
mov
addr16
sahf
enter
dec
dec
mov
xor
or
push
add
repnz
add
iret
jbe
jp
int3
lret
mov
sub
stos
xor
or
addl
adc
mov
shlb
or
fmull
scas
orl
aaa
adc
dec
cmp
pusha
add
cmpsb
inc
mov
mov
xor
pop
cmp
mov
add
cli
fdivl
aas
fwait
rcll
adc
in
push
add
pop
inc
rorl
fdivrl
add
adc
pusha
rolb
jg
inc
lds
push
pop
add
and
mov
add
cmp
or
int3
cmpl
mov
sub
lods
stc
icebp
daa
push
push
loope
jns
add
mov
pop
add
leave
add
dec
pushf
xor
fldl
outsl
cmp
loope
out
or
add
lret
call
pop
movsl
cmp
pop
add
lock
dec
push
pop
push
xchg
addb
mov
jns
adcb
and
pop
jmp
lock
ficoms
imul
and
andl
lahf
or
xchg
lods
sarb
pop
lcall
push
sbb
or
rcrb
sti
fcoml
adc
adc
lcall
lods
add
shl
jb
andb
push
das
arpl
push
cwtl
add
sub
xlat
data16
in
mov
cmpb
mov
andl
daa
pop
mov
subb
push
and
add
mov
and
in
lahf
mov
add
xchg
jnp
pushf
fstpt
out
imul
adc
dec
gs
and
cmpsb
pop
int3
scas
add
cmp
push
jb
test
push
sahf
or
pop
push
sub
add
cwtl
sbb
imul
and
adc
mov
out
cmp
mov
pushf
dec
loopne
mov
push
out
inc
das
mov
mov
push
test
sub
push
add
push
add
rol
mov
mov
or
or
xor
xor
mov
jns
jbe
pop
add
fmull
jne
fisubl
out
add
stos
xchg
out
shr
hlt
dec
pop
lcall
addb
popa
pop
add
fisttpll
dec
mov
mov
scas
fiadds
pop
outsl
jmp
cs
std
inc
add
xchg
ret
cwtl
das
dec
lcall
stos
and
pusha
mov
sahf
clc
lods
cwtl
add
test
out
jmp
cmp
shlb
pusha
sub
shrl
loop
outsb
sahf
fwait
scas
mov
sarb
ja
or
ret
push
add
loopnew
cli
add
mov
jecxz
pusha
mov
pop
cmp
pop
repnz
mov
pushf
rorb
cmc
test
or
cmp
icebp
inc
cmp
add
xor
push
pushf
add
daa
enter
add
ljmpw
subl
xchg
mov
xchg
or
sub
fisttps
shrb
add
xchg
nop
lods
pop
pop
in
dec
xor
addb
insl
ret
ss
out
int3
add
jmp
and
jle
push
test
add
add
call
fiadds
lret
lahf
or
dec
cli
or
subl
add
lret
xor
pusha
or
bound
jbe
jmp
shl
jle
out
push
cwtl
inc
test
jle
ret
mov
call
xchg
test
add
inc
jb
mov
adc
fdivr
dec
and
add
scas
push
outsl
ja
out
imul
or
cmpsb
sub
stos
mov
aad
dec
adc
adc
xor
mov
pop
or
jecxz
mov
out
out
mov
sbb
test
iret
sbb
jb
je
test
shrb
pop
sub
add
out
sbbl
in
dec
pop
into
hlt
jmp
out
push
add
leave
adc
inc
mov
sbb
add
mov
and
cmp
pop
sbb
jne
add
mov
in
ficoms
or
sbb
les
xchg
add
movsb
add
lcall
cmp
cmpsl
jmp
sbb
jnp
fcomps
push
enter
inc
clc
inc
mov
arpl
jns
lahf
mov
insb
incl
jle
adc
jp
pop
mov
hlt
int
dec
leave
mov
lret
mov
push
push
or
dec
leave
add
inc
das
imul
pop
mov
or
pop
aaa
push
je
or
jle
ficomps
loop
xlat
test
pop
add
push
jne
adc
lds
or
lcall
or
jne
in
enter
sbb
dec
push
jo
lcall
sbb
imul
pop
andl
adc
ret
inc
fwait
xchg
jl
lahf
mov
add
test
add
mov
les
mov
out
bnd
push
in
roll
movsl
add
stos
ds
dec
push
movsb
int3
shr
or
loop
add
or
ss
dec
adc
pusha
cli
adc
add
dec
xor
mov
sahf
mov
aad
push
shlb
adc
notb
add
arpl
mov
jo
xor
subl
push
in
popa
add
das
pushl
arpl
xor
and
addl
inc
sub
lret
add
xchg
loope
std
inc
es
fcmovu
add
sti
push
add
data16
xor
leave
jb
add
dec
nop
into
icebp
or
add
or
bound
xchg
mov
or
cltd
jl
dec
add
or
mov
push
xchg
and
pop
sub
cld
cmp
add
ret
and
add
jbe
cmp
mov
pop
jmp
rcrl
and
xor
xor
dec
cmp
arpl
mov
fmull
cwtl
cltd
inc
pop
in
add
sar
rorb
inc
push
add
aas
movsl
pop
jno
add
push
je
xchg
jnp
add
mov
jno
jnp
stc
call
in
scas
push
mov
les
lods
inc
lock
mov
aaa
imul
fldl
fdivrl
sbb
pop
xor
add
xor
xchg
cmp
or
out
push
mov
push
or
pop
sbb
adc
jno
outsb
mov
add
pop
scas
cld
into
int
repz
call
mov
pop
dec
add
dec
in
pop
xchg
add
je
sahf
pop
pop
lahf
roll
adc
fimuls
inc
pusha
mov
or
add
insb
push
nop
cmpsb
imul
jmp
add
loop
lahf
fstpl
jecxz
inc
nop
pop
lds
aas
inc
subb
das
gs
lock
aaa
adc
push
dec
je
mov
jns
arpl
and
jge
mov
mov
sub
and
cmp
fdivl
adc
inc
rorb
add
pop
lea
pop
loopne
flds
add
sahf
into
pop
cld
xchg
pushf
push
add
xor
mov
bound
mov
push
inc
repz
or
and
push
mov
aam
test
cmp
popf
cmp
shlb
cwtl
or
mov
pop
xor
test
add
movsl
inc
andl
aad
int
shlb
push
loopne
pusha
ds
push
xor
mov
je
popf
add
add
jl
and
pop
sub
jno
fs
mov
jecxz
loopne
testb
add
int3
aam
and
dec
lret
addb
ja
mov
sbb
push
mov
pop
adc
add
jo
fisubl
sub
push
cwtl
add
dec
cmpsb
jno
cs
ja
dec
fbstp
sub
jle
adc
and
cmp
subb
aam
mov
push
push
loopne
mov
adcl
incb
test
les
xrelease
mov
in
stos
add
xchg
lahf
inc
jno
int
xor
adc
into
loopne
dec
jg
ljmp
mov
dec
mov
add
mov
and
add
shrb
adc
dec
es
daa
add
movsl
sar
add
cmp
pushw
dec
fldl
jp
and
sbb
fisubs
pop
push
nop
and
popa
orl
jne
out
popl
cmp
jae
cmpsb
pusha
repnz
mov
dec
cmp
das
adc
mov
add
push
neg
sub
adcb
ljmp
les
mov
xchg
fucomp
enter
test
pop
add
jo
inc
xchg
sbb
test
pop
and
xor
mov
pop
dec
lret
mov
xor
add
cmovb
inc
push
loope
add
pop
sbb
ja
sbb
fs
pusha
lock
push
std
movntps
sbb
outsb
loope
mov
adc
scas
jge
sbb
lret
add
jnp
sbb
loopne
fisubl
add
mov
sbbl
cltd
aam
sbb
addr16
inc
mov
hlt
pop
in
outsl
out
adc
and
sub
pop
jp
push
cmp
stc
andb
or
xor
xor
leave
adc
mov
xchg
into
push
sahf
daa
les
mov
shlb
xchg
mov
pusha
push
xchg
inc
and
ret
dec
mov
push
js
add
adc
mov
adcb
or
sub
xchg
xor
or
es
call
mulb
and
jb
and
js
mov
in
test
idivl
outsb
mov
rclb
push
mov
fidivrl
ljmp
pusha
loope
adcl
pop
mov
hlt
mov
and
in
push
jns
stos
sub
and
sub
and
sub
or
and
cmp
add
cmc
push
repnz
sbb
int3
sbb
jecxz
dec
jl
movsb
push
dec
add
shrb
cmc
xchg
xor
jge
cmp
and
jle
xor
cltd
lcall
xorl
pusha
mov
fs
movb
ja
imul
cmp
push
add
ficoml
mov
aam
out
jge
std
inc
movsb
xor
aad
and
or
aam
pusha
ljmp
jns
push
nop
je
inc
xchg
cmp
add
repnz
push
div
cmp
and
mov
push
jae
push
mov
mov
add
jg
push
cmpsb
sti
inc
jmp
insb
aas
jecxz
jns
sub
add
hlt
cmpsl
dec
movb
mov
pop
cmc
add
add
in
pop
sarl
push
mov
push
and
pop
mov
add
xor
mov
mov
push
dec
xchg
xor
int3
adcb
and
enter
mov
jae
push
in
lcall
test
mov
adc
mov
pop
icebp
add
sub
jle
mov
cmp
ret
popa
xor
inc
add
clc
fwait
mov
add
jbe
sub
sarb
leave
xchg
add
pop
cld
jge
repnz
lods
ljmp
lock
sti
adc
insb
sahf
add
mov
fcoml
movsl
ret
test
inc
dec
loopne
inc
add
mov
stos
je
mov
xlat
xor
xor
addb
push
filds
cmpb
xchg
add
and
sbb
add
repnz
add
add
jbe
dec
mov
mov
lods
dec
mov
stos
push
bound
imul
cld
pop
and
fs
xorb
addr16
subb
out
int
lock
ficoms
or
mov
jg
mov
mov
push
lea
jb
add
jae
cmc
xchg
popa
fisubs
adc
and
or
aam
pop
pop
cmpsb
mull
dec
loopne
inc
ficomps
adc
nop
rolb
xor
push
stos
mov
add
lds
mov
xlat
insb
inc
mov
cmp
mov
in
xchg
enter
cmp
jnp
add
ljmp
add
dec
std
movsl
pop
sbb
rolb
sbb
pop
insb
and
jnp
add
or
add
jae
adc
lods
in
jnp
mov
aad
aas
or
pop
xchg
push
add
push
or
push
cmp
pop
hlt
fiadds
ret
loopne
push
mov
xor
movsl
inc
add
divb
xchg
adc
cmp
cwtl
mov
add
cmp
mov
jmp
push
fidivs
std
add
jbe
xlat
xchg
sub
cmp
jl
inc
loopne
add
lods
cmp
jmp
mov
mov
adc
mov
fnstcw
repnz
int3
cmp
fwait
lds
mov
dec
mov
pop
pop
add
repnz
fdivrs
jnp
ja
or
mov
nop
jle
lock
mov
sub
sub
mov
aaa
imul
add
cli
xor
and
push
int3
shlb
repz
in
call
stc
add
mov
sub
add
ja
jb
mov
lcall
or
mov
movsb
sub
lock
sbb
mov
add
das
cltd
lods
loopne
add
and
repz
test
das
inc
movsl
dec
enter
call
nop
adc
fwait
xorl
add
neg
cmp
jle
jnp
adc
sbb
seto
fiadds
lods
lock
aad
call
mov
fstps
les
loop
add
and
hlt
lods
rolb
test
add
clc
adc
push
shrl
jbe
movsl
dec
dec
mov
ret
cli
cli
sub
orb
pop
and
xlat
repz
nop
cmp
lret
cmp
jne
ja
add
push
sbb
inc
xor
inc
sub
cmp
pop
faddl
add
fmuls
mov
ljmp
out
push
fiaddl
sub
test
or
aas
add
je
pop
call
add
or
dec
mov
pusha
shlb
jnp
inc
orl
mov
sbb
mov
not
idivl
cmpsl
jo
cmp
inc
or
sbb
add
push
add
lock
je
mov
cmp
add
pop
sub
fwait
xchg
hlt
out
xor
xchg
add
push
jns
mov
xlat
js
jp
ja
mov
daa
in
add
rolb
sti
std
push
call
lahf
aas
mov
dec
add
rcrb
or
add
das
scas
add
pushw
pop
aad
pop
mov
js
test
repz
lret
xor
add
inc
cmpb
pop
sbb
scas
and
push
ljmp
add
cmc
loopne
lahf
je
adc
add
pusha
test
dec
sub
add
or
xchg
mov
dec
add
movsb
mov
test
in
repz
xchg
mov
add
xchg
cltd
push
cmc
enter
test
add
jnp
sub
and
hlt
jno
inc
movsb
push
push
sub
ds
add
roll
pop
push
mov
leave
add
dec
xor
xorb
add
clc
ret
lcall
das
sbb
fcomps
add
xchg
xchg
aad
les
in
add
mov
and
add
jns
lahf
push
or
xchg
add
aam
pop
sarl
add
mov
std
hlt
rol
sbbb
adc
sub
sbb
jne
mov
je
push
or
xchg
cli
icebp
add
push
sub
inc
mov
jo
or
lds
or
xor
xlat
sahf
xor
and
mov
cmpsl
push
pop
testl
insb
sbb
mov
adc
dec
mov
push
arpl
push
loopne
add
mov
mov
cwtl
cmpsb
sub
aas
add
xor
lret
insb
xchg
loopne
push
addr16
shlb
add
jg
std
clc
add
inc
flds
dec
add
add
push
ljmp
add
pop
pop
out
push
stos
adc
pop
cmp
popf
sbb
add
xor
xchg
ret
add
inc
and
mov
add
xchg
sbb
mov
aas
movsb
cmpsl
test
je
add
jbe
or
imul
dec
or
cltd
push
pusha
jl
mov
add
or
or
xor
xorb
push
and
inc
or
insl
xchg
add
add
repnz
mov
enter
and
hlt
into
add
cmc
stos
insl
sbb
sub
repz
adc
loopne
loope
mov
insl
outsl
sbb
mov
and
push
sbb
imul
inc
stos
xor
cld
stos
add
hlt
mov
scas
and
lret
push
sub
fisubrs
or
in
cmc
subl
add
xor
inc
jb
repnz
sub
mov
push
pushl
shrb
loop
add
xchg
xor
stos
imul
or
adc
add
inc
cmp
add
add
push
or
xchg
stos
dec
sbb
adc
cmp
push
pop
mov
and
rcll
aas
dec
add
push
xlat
pop
add
lret
sbb
mov
sar
push
mov
in
lcall
jle
aad
mov
outsb
in
sbbl
jns
inc
xchg
imul
ds
mov
pop
add
rorb
push
dec
push
add
fdivr
aam
inc
inc
or
push
jae
sbb
test
push
adc
mov
push
pop
or
add
add
aaa
enter
add
cwtl
inc
scas
add
insb
filds
enter
call
les
and
test
sub
test
lahf
cmp
inc
and
inc
inc
jae
sbb
add
pop
hlt
or
or
icebp
adc
frstor
sub
rclb
push
xorl
mov
scas
or
add
popf
xor
js
or
or
insl
andb
gs
sbb
sub
or
mov
mov
cmpb
inc
mov
sbb
jmp
leave
lret
jp
mov
dec
repz
lods
movsb
lods
sub
mov
in
add
jmp
loopne
inc
sti
push
stos
inc
sahf
mov
jp
inc
fmul
push
dec
test
out
dec
clc
mov
idivb
push
and
push
jno
cmp
xlat
out
rcrb
sub
dec
imul
mov
push
inc
jmp
cwtl
clc
lock
js
adc
dec
sbb
js
inc
adc
xchg
aad
add
sahf
mov
mov
add
icebp
dec
mov
push
add
clc
aad
das
mov
lea
aaa
aam
or
orl
inc
cmp
jbe
mov
dec
and
int3
sbb
push
pushf
and
mov
dec
movaps
ficoml
push
xchg
out
push
mov
jo
shrl
jbe
add
mov
and
push
pusha
inc
cmp
jo
mov
sub
adc
clc
sbb
lea
lds
sbbl
sbb
push
jecxz
test
push
imulb
inc
pop
push
sbb
outsl
cmp
xor
enter
jp
rcll
mov
sbb
sbb
push
add
leave
sub
sbb
call
lahf
cld
flds
mov
stc
lret
add
cli
jb
test
push
jle
dec
stos
add
cmc
roll
aas
xor
repnz
ret
popa
xor
mov
loopne
jmp
add
stos
sub
xlat
cli
jl
mov
movsb
or
and
dec
add
movsb
or
testb
push
dec
xor
push
dec
fldenv
add
fimuls
mov
add
and
xor
sti
xor
leave
jb
adc
and
jbe
sti
pop
rclb
cmp
mov
and
adc
jmp
jp
sti
fcoml
or
or
pusha
add
sbb
js
add
jne
int3
or
adc
push
shlb
jno
inc
daa
and
ficomps
loope
xor
shr
nop
cld
stos
xlat
xor
or
loop
sub
sbbb
add
add
inc
add
lret
loope
into
dec
push
movsb
sahf
stc
rolb
enter
cmpsb
outsb
push
push
out
inc
pavgb
cmp
and
ss
add
and
inc
rolb
mov
xor
faddl
lret
xchg
aad
adc
add
inc
add
in
xor
add
pop
or
dec
scas
sbb
bound
sar
xor
lret
insb
popf
es
push
jo
add
dec
nop
dec
pusha
xor
shll
fld
jmp
mov
test
call
mov
fadd
ret
xor
and
mov
mov
sbb
add
sahf
movsl
lock
icebp
insl
dec
push
xchg
push
adc
ljmp
mov
stc
shrl
xor
in
mov
in
adcl
add
in
stos
jg
std
cwtl
insb
inc
adc
repnz
pop
cmp
mov
cmpsl
ljmp
lods
add
pop
jg
jmp
es
jo
push
clc
sbb
icebp
push
test
adc
rclb
mov
aaa
pop
add
dec
lahf
bound
push
xchg
pop
cmp
add
jl
jp
iret
jno
xor
jle
ljmp
adcl
hlt
scas
test
jge
insb
lcall
cwtl
addr16
xchg
sbb
rcl
clc
xchg
xor
add
popa
cmp
das
mov
push
mov
sbb
adcb
cltd
and
in
push
cmp
stc
xchg
les
push
pop
clc
push
repz
adc
sbb
or
pop
movsb
mov
cltd
bound
iret
test
jbe
add
movsl
adc
add
jo
xor
or
test
add
push
inc
or
cmp
shlb
dec
lock
jl
dec
movsb
mov
cmp
in
aas
enter
lea
lods
adc
add
outsb
ss
lea
or
add
imul
jp
add
xchg
out
jne
pusha
dec
add
add
or
addr16
add
stc
ret
and
fbld
fdivs
or
pusha
arpl
xor
inc
xor
fistps
leave
or
mov
jge
xor
adcb
rclb
rcll
je
js
lock
out
add
and
cltd
pop
ja
and
nop
lock
stc
push
pusha
push
push
push
ja
testb
xor
sbb
sbb
xchg
sarb
in
jbe
push
adc
lock
and
lods
inc
and
pop
pop
push
pop
stos
stos
flds
cmp
or
fwait
call
mov
les
mov
clc
movsb
mov
dec
add
add
and
loopne
out
lock
popa
cmc
add
mov
stc
ss
mov
mov
inc
daa
jmp
negb
push
mov
add
adc
jne
pop
fsub
ss
sbb
mov
mov
dec
mov
mov
into
mov
testb
dec
mov
push
dec
and
mov
xlat
or
push
mov
mov
es
sbb
icebp
jecxz
adc
pusha
fldt
popa
repnz
out
or
in
call
bound
pop
fiadds
and
mov
add
leave
orl
pusha
add
xchg
pop
ja
push
es
add
outsb
jnp
int3
and
fldt
adc
stc
dec
xchg
js
int3
adc
mov
lds
popa
mov
call
mov
sbb
adcb
dec
hlt
daa
out
out
inc
ret
cmp
in
and
mov
jg
outsb
add
cmc
or
jo
call
mov
ret
in
mov
cli
adc
loopne
addr16
andl
lock
mov
pusha
cmp
jle
add
outsb
filds
jno
adc
cmpsb
insb
add
lahf
out
outsl
adc
xor
pop
lcall
mov
or
scas
nop
shll
clc
pop
lahf
cmp
sbb
xor
rcl
rcrb
and
mov
or
adc
test
or
shl
decb
lret
push
xorb
push
call
loopne
jo
xchg
mov
pop
faddp
dec
insl
std
mov
orl
add
scas
inc
cli
adc
jne
test
xor
xor
add
mov
or
call
in
fildll
adc
lods
add
sarb
add
out
lahf
stc
jmp
adc
mov
push
sbb
cmp
pop
or
in
add
jmp
adc
pusha
inc
mov
dec
or
add
xor
mov
sub
cmp
and
shlb
add
lea
mov
jg
add
jmp
popa
inc
and
in
dec
dec
xor
cld
mov
sub
cmp
js
hlt
or
dec
inc
mov
pop
add
out
cmpb
xorb
add
mov
jge
in
shlb
sub
stos
cs
outsl
dec
dec
pusha
jecxz
addb
out
push
add
ja
and
fnop
mov
adc
sbb
adc
or
loop
and
add
jo
leave
add
cld
and
imul
mov
lds
mov
xor
or
jbe
js
aam
mov
pop
inc
and
jns
inc
fmuls
pusha
cmp
fimull
fwait
jle
add
and
cwtl
or
or
lds
sbb
mov
out
xor
mov
jno
jb
adcb
jle,pn
mov
daa
negb
cmpsb
lcall
imul
dec
jns
int
fnsave
push
rcll
popa
faddl
repz
lock
jmp
dec
popf
or
add
stc
jo
add
loop
call
bound
loope
je
inc
xor
xor
and
dec
aaa
mov
cmp
arpl
lods
pop
push
andb
popl
test
in
outsb
push
and
test
pop
cli
repz
lcall
lret
xor
jo
outsl
les
mov
add
lret
lds
loop
jecxz
adc
cld
pusha
and
xchg
cmp
jno
lods
in
add
jecxz
scas
push
in
adc
mov
dec
test
push
enter
mov
push
mov
add
loopne
cmpsl
sahf
pop
mov
push
mov
mov
dec
hlt
inc
sahf
cmpb
shr
inc
ljmp
daa
sbb
rclb
movsl
add
mov
mov
jbe
out
lcall
and
add
repz
les
push
cli
xchg
mov
mov
add
hlt
out
ror
lds
adc
or
mov
inc
mov
rorb
add
stos
jnp
cwtl
fmulp
and
out
cltd
daa
xchg
cmp
push
lcall
mov
sub
cltd
js
hlt
shrb
adc
dec
mov
push
jmp
or
xor
add
mov
dec
lds
mov
sub
leave
call
sub
aad
cmpsl
xlat
dec
add
xchg
push
inc
cld
mov
mov
cld
pusha
add
mov
mov
rorl
and
add
in
adc
push
dec
enter
mov
insb
out
jge
cmpsl
out
cli
das
out
and
add
lods
dec
mov
add
or
ret
jae
cmp
mov
inc
test
leave
xor
js
fstpt
rorb
inc
jae
out
push
mov
push
pushf
adc
adc
in
xlat
sbb
and
roll
js
dec
in
shll
xor
xchg
bound
mov
sub
nop
or
mov
xor
mov
outsb
icebp
inc
jmp
or
hlt
shll
dec
test
inc
adc
lret
shlb
jg
cmp
insb
pop
hlt
mov
int
lock
orb
mov
xor
jp
xchg
lock
dec
loopne
add
jnp
inc
lahf
repz
inc
dec
mov
xor
push
push
jb
mov
dec
mov
mov
pop
and
dec
clc
fld
roll
scas
push
sub
aas
ret
and
mov
jecxz
pop
and
mov
enter
cld
adc
mov
cwtl
test
les
mov
cs
das
mov
jmp
jbe
add
mov
adc
and
sub
adc
mov
movsl
cltd
push
jne
insb
dec
and
iret
imul
popa
mov
cwtl
adcl
mov
and
int3
rcr
push
clc
sahf
or
cmp
or
adc
fld
or
inc
dec
mov
and
mov
js
in
out
add
sbb
or
in
fildl
ucomiss
sbb
popf
fwait
dec
or
in
inc
es
and
jmp
jno
in
inc
xor
fistpll
lods
mov
incb
xlat
sbb
inc
add
jo
and
add
pusha
sbb
mov
pusha
xchg
daa
jle
sbb
mov
push
xor
ds
inc
mov
scas
fldenv
cmp
ds
aad
lods
or
cmp
pusha
movsb
and
and
push
sub
sbb
repnz
shlb
xchg
addr16
and
inc
addl
faddl
push
shlb
ss
movd
sar
mov
jo
adc
out
lods
add
iret
cmc
out
shll
cmpsb
pusha
mov
add
negl
cmp
jb
push
ljmp
mov
xchg
dec
add
mov
out
xor
jle
push
pop
les
add
test
mov
ja
xorb
xor
call
xor
repnz
pop
inc
sbb
and
ret
add
inc
inc
adc
fucomi
xchg
sub
ds
into
aam
sbb
das
mov
rolb
mov
xor
jg
fldenv
imul
add
jle
push
push
pop
sub
into
mov
lods
pop
jo
mov
dec
in
and
insb
pusha
xchg
jl
shrb
or
xchg
cmp
stos
ss
sub
fnstsw
fsubrs
dec
add
mov
add
fs
add
xchg
lahf
mov
stos
dec
mov
xchg
int3
pop
xchg
jmp
les
xor
in
std
pop
cld
or
dec
cmp
or
ljmp
or
inc
mov
adc
jb
fisttps
dec
imul
and
jae
add
test
xchg
repz
std
mov
mov
or
cs
sbb
adc
orl
hlt
dec
cmp
pop
andb
int3
gs
loope
call
movsb
push
pop
mov
push
jecxz
sahf
add
les
das
xchg
adc
jo
and
or
ror
je
orb
ja
add
dec
movsb
dec
stos
inc
push
and
insl
pop
add
cmp
push
dec
mov
mov
xchg
push
nop
add
test
out
lds
mov
popa
pop
rolb
ss
xchg
or
incb
mov
cltd
shrb
xor
xor
mov
sub
jmp
pusha
call
aas
dec
push
dec
sbbl
popa
xlat
pop
sti
roll
inc
sbbb
mov
or
mov
and
add
and
mov
sbb
inc
jo
inc
bound
fdivrs
push
inc
and
les
call
inc
insl
js
mov
in
jb
subb
cltd
push
dec
mov
loop
mov
ret
lods
dec
setle
loope
pusha
nop
cmc
xchg
dec
inc
or
adc
mov
xchg
test
mov
inc
aas
mov
add
push
and
loop
add
cmp
cmp
and
dec
orl
sbb
ljmp
test
daa
adc
add
adc
flds
in
jle
mov
or
or
test
sub
pop
push
call
jnp
insb
adcb
add
nop
push
lret
lods
and
adc
pop
popa
les
xor
enter
cmp
mov
loopne
push
ja
dec
clc
call
mov
aam
push
cmc
cmp
pop
xor
and
and
xor
pop
push
gs
out
mov
in
ret
jg
dec
pop
imul
lods
lods
cmc
add
add
mov
fs
adc
and
xchg
cwtl
pop
jns
or
push
pop
test
inc
stc
enter
test
cwtl
lret
xchg
cmp
or
push
mov
imul
jecxz
les
in
int
sahf
inc
push
aas
pop
push
mov
push
mov
add
mov
leave
lret
shr
xor
les
subb
into
lods
mov
mov
pop
dec
in
add
andl
mov
and
sbb
xchg
mov
dec
jno
mov
inc
jb
jb
inc
add
push
sub
push
jo
out
test
and
addr16
iret
sti
jl
sbb
pop
mov
in
inc
fcomps
cmp
dec
and
add
add
fdivl
adc
shl
cmp
mov
sub
adc
and
lock
push
sbb
movsb
or
jo
cmpsb
add
sahf
test
test
add
fscale
cmp
sub
dec
scas
sbb
mov
cmp
inc
sbb
test
arpl
sbbb
lods
inc
outsb
and
push
ret
inc
or
xchg
jb
fsubs
pushf
adc
push
mov
movsl
add
lods
out
mov
mov
add
bound
and
adc
push
sub
mov
pop
xlat
sarb
add
jb
inc
xchg
sbb
add
xchg
cmp
inc
movsl
pusha
je
loopne
lods
das
xor
leave
dec
nop
flds
push
cmp
jg
out
lahf
and
dec
inc
add
pop
mov
add
loop
mov
mov
xor
add
cwtl
add
adc
sbb
test
add
inc
jge
pop
fsubrl
cwtl
out
aas
mov
mov
xchg
sbb
pop
sarl
sub
inc
jnp
push
decl
popa
test
push
mov
inc
add
ret
and
pop
cmp
pop
or
mov
rdmsr
call
test
jg
add
jmp
in
jb
jbe
add
xchg
mov
loopne
or
jno
test
inc
cmpb
pushf
pop
xchg
or
cmp
jl
jle
inc
adc
mov
insl
popa
or
cmp
testl
inc
inc
ljmp
subb
scas
pop
add
xor
and
xor
add
pop
insl
call
cmp
ror
inc
sub
mov
and
lahf
pop
pop
xchg
mov
testl
imul
sub
inc
ret
push
xchg
insb
or
cmp
push
into
xor
mov
and
repnz
or
shlb
rcrl
test
lret
mov
clc
dec
cmovnp
sub
xor
mov
fsubl
mov
inc
add
dec
cmpsb
add
pop
mov
cmp
xchg
inc
add
inc
js
or
mov
xchg
add
cmpsl
xor
add
cmp
pop
jmp
int3
xor
xlat
cmp
adc
mov
out
push
cmp
cld
add
pop
subl
imul
sbb
lahf
add
xchg
sbb
inc
inc
mov
add
add
mov
ja
inc
jbe
cld
or
inc
jne
clc
outsb
mov
or
push
in
pop
mov
lcall
fsubrs
add
jmp
imul
adc
jae
and
nop
mov
fs
inc
mov
add
sbb
aaa
aam
sahf
nop
inc
mov
cld
mov
or
jb
pop
add
or
inc
and
mov
pusha
adc
push
fmul
lds
mov
aas
ljmp
mov
loop
add
test
mov
xor
pop
loopne
loope
pop
jb
call
test
hlt
repnz
cmpsb
rorb
add
inc
test
xchg
jno
int3
lahf
scas
stos
les
mov
dec
aas
lds
stos
xor
mov
movsb
jno
or
cmp
dec
add
ret
jnp
arpl
fiaddl
call
add
cmp
dec
sahf
test
jb
xor
mov
add
into
dec
call
test
or
lds
jo
mov
ss
cltd
push
lahf
call
jo
enter
inc
jno
jns
leave
cmp
add
and
fstpl
popf
int3
adc
mov
loopne
jecxz
mov
mov
push
jb
dec
and
and
xchg
data16
adc
mov
cmp
andb
jle
push
add
and
outsb
movsl
loop
aas
jp
sub
push
shl
out
mov
pushf
pop
add
jmp
popf
mov
aam
jo
iret
inc
sub
fidivl
pop
add
repz
dec
sub
pop
call
sbb
jne
loop
addl
xor
dec
pop
push
jmp
enter
lock
fsubrs
add
jb
push
popf
pushf
add
and
xor
aam
dec
add
int
mov
or
in
push
xchg
and
jno
popa
stos
cwtl
add
ret
pop
jmp
jp
inc
nop
and
mov
shlb
dec
subb
adc
mov
sbb
push
mov
add
xchg
sbb
dec
fists
push
lock
dec
or
push
pop
pusha
int3
xor
pop
loopne
rcrl
or
inc
mov
hlt
inc
nop
cmovo
ret
movsl
cs
push
pop
sbb
imul
add
dec
das
rcll
adc
repnz
dec
inc
lods
or
push
jge
shlb
lret
call
jae
call
out
pop
imull
js
ljmp
scas
faddl
jne
push
lods
adc
push
add
pop
frstor
test
aam
xor
inc
xor
cmc
or
loopne
push
mov
fnstenv
adc
cmpb
pop
and
popf
inc
push
loope
jns
cmp
rclb
xchg
xor
lods
out
and
xchg
push
add
imul
pushf
fdivrl
xor
out
movsb
into
mov
push
or
scas
dec
mov
arpl
repz
add
cmp
sub
add
jnp
xchg
xchg
repnz
pop
ret
add
cmp
dec
push
fisubrl
dec
les
imul
inc
cld
jo
call
pop
movsb
push
shlb
je
testl
stos
add
lret
jg
aad
or
inc
mov
pop
jo
jno
adc
jle
insb
jge
or
aad
and
cmp
lock
adc
incb
pop
sbb
jno
mov
daa
or
fsts
aaa
lahf
outsl
adc
insb
pop
jg
movsb
dec
shr
int3
out
adc
add
push
cmp
cmp
add
add
jge
leave
pop
sub
scas
dec
into
pusha
addr16
clc
dec
leave
roll
jnp
sbb
ror
mov
jae
fwait
or
mov
loopne
pop
rclb
push
lret
mov
imulb
addb
lock
fiaddl
push
add
sub
clc
aam
testb
mov
xchg
push
sarb
sub
dec
scas
dec
sub
mov
inc
jbe
xbegin
shl
shll
ja
and
push
sub
mov
fwait
mov
pusha
in
add
cwtl
inc
shlb
insb
jo
out
loopne
inc
popa
nop
cmp
add
out
or
fcoms
push
in
cmpsl
add
mov
push
ror
test
jg
in
xchg
push
pushf
pusha
add
adcb
arpl
cmp
mov
mov
xlat
test
cmpsb
add
sahf
cwtl
repnz
xchg
shr
pop
push
dec
xchg
mov
mov
and
inc
adc
add
leave
jl
cwtl
and
enter
outsb
jno
pop
repnz
loopne
mov
enter
and
pop
push
jle
add
mov
xchg
push
dec
insb
mov
scas
dec
add
bound
mov
push
mov
cli
xadd
fdivs
mov
scas
inc
test
push
loopne
jp
jnp
add
sbb
pusha
fistpll
adc
cwtl
adc
jb
test
aam
fiadds
dec
pop
frstor
pop
pusha
pushf
adc
adc
add
retw
icebp
adc
mov
test
cmp
icebp
pushf
pop
popf
out
and
addb
fisttpll
scas
fs
and
pushf
loopne
inc
sub
pop
mov
pop
mov
adc
or
repnz
mov
mov
pop
js
jns
pop
and
lds
iret
xor
mov
or
ret
fsubrp
cltd
push
dec
cmp
cmpsb
aad
add
sahf
sti
jns
das
test
outsl
push
rcr
adc
sbb
cmc
ljmp
dec
icebp
dec
test
clc
pop
call
inc
jmp
adc
adc
sarb
shlb
inc
pop
xchg
and
ficoms
in
int3
or
xor
jg
movsl
cli
xchg
mov
sbb
shll
clc
add
in
pop
add
loopne
fmulp
jmp
mov
or
shll
xchg
das
xchg
xor
cmp
adc
daa
cwtl
sbb
pop
out
ror
mov
inc
into
mov
clc
lahf
inc
ja
adc
in
loopne
pop
enter
jno
xchg
inc
add
add
icebp
sbb
jmp
push
pop
xchg
cmpsb
mov
dec
leave
leave
test
inc
jg
xchg
adc
sub
jg
push
imul
leave
push
and
aam
hlt
add
xchg
out
movsb
cmp
shll
mov
inc
out
aas
les
add
xor
out
add
mov
sbbl
and
push
add
xor
popf
add
in
loop
inc
rolb
flds
and
subb
adc
dec
mov
test
push
pop
mov
add
xor
dec
add
je
add
pusha
pusha
les
and
push
leave
addr16
imul
call
and
push
iret
lock
add
pop
sarb
and
adc
and
xchg
sub
hlt
jbe
jg
je
mov
pop
xchg
int
add
jmp
inc
mov
adcb
pop
sub
sub
xchg
test
mov
hlt
add
add
enter
add
dec
mov
and
xchg
xchg
sbb
loope
adc
sub
leave
aam
adcl
str
les
add
sbb
arpl
mov
in
scas
or
adc
xor
call
int3
or
xor
mov
push
out
jmp
push
add
add
push
mov
pop
popf
dec
add
and
lock
pop
xorl
cs
dec
shlb
push
outsb
in
adc
jae
inc
scas
dec
xor
mov
movsl
lock
inc
out
and
rcrl
sub
in
call
add
jo
jecxz
or
clc
jmp
enter
sbb
aam
push
dec
xor
push
adc
movsb
loopne
pusha
mov
cmpsb
outsb
dec
pop
lret
hlt
int
xchg
jo
mov
xor
subl
int3
and
or
movsl
leave
dec
or
popa
nop
pop
lock
xchg
call
clc
mov
jecxz
push
repz
dec
adc
sub
sbb
mov
enter
nop
dec
in
bound
or
cmc
or
and
in
mov
clc
pop
push
orb
aad
imul
inc
popf
gs
pusha
stos
aad
jg
xchg
test
or
add
jmp
ret
lahf
movsb
and
mov
je
xor
push
pop
ja
loopne
mov
cmp
subb
testb
dec
xor
dec
lods
fadds
mov
xorb
inc
les
inc
pop
orb
movd
push
jl
sub
jmp
cmp
fstps
in
add
gs
and
roll
and
inc
or
mov
popf
sarl
inc
movsl
cmp
dec
mov
hlt
cmp
mov
or
mov
add
or
and
and
lcall
add
sub
push
sub
push
jmp
adc
sub
fistpl
xchg
mov
pop
sbb
cmp
pushf
je
lods
mov
add
int
fcmovb
ja
jge
mov
jle
pusha
aam
mov
int3
je
leave
jo
mov
sbb
inc
jnp
xchg
mov
pop
jg
jne
sbb
adc
clc
loop
add
and
js
lret
or
stos
mov
add
popa
cmp
add
sub
stc
sar
bound
outsl
sbb
mov
pop
add
inc
out
xor
fcom
orl
or
jo
shlb
xchg
and
mov
rcll
jg
subb
out
fdivrs
add
mov
repnz
mov
aam
das
ficompl
add
jmp
xchg
xor
mov
inc
sbb
ror
cmp
or
stos
jb
pop
lods
cmp
leave
push
push
inc
dec
call
mov
fwait
psraw
imul
out
jmp
cmp
pop
mov
shll
add
add
inc
push
adc
je
into
inc
xor
mov
les
jo
lahf
sbb
test
mov
xchg
or
mov
sbb
and
out
pop
mov
dec
filds
dec
jb
fmul
insb
xor
jecxz
xchg
sbb
inc
push
int3
movsl
mov
sub
or
jb
xchg
xchg
in
xor
out
and
stos
shlb
xchg
les
adc
repz
iret
sti
pop
dec
xchg
mov
rcr
fldenv
push
pop
or
mov
loop
inc
clc
lods
subl
push
dec
xor
imull
loop
int3
push
ret
stos
aam
mov
mov
fld
add
pop
fwait
stos
daa
add
mov
mov
push
leave
mov
add
leave
dec
repz
sub
andl
movsb
pop
or
sub
lahf
cli
jle
fistl
clc
movsb
mov
sbb
push
mov
cmp
jae
add
leave
mov
out
pusha
pop
insb
add
mov
fstpt
sub
subb
adc
mov
add
aaa
jo
popa
add
aam
js
daa
dec
or
jnp
inc
inc
fstps
xchg
js
sub
leave
mov
add
sbb
inc
mov
in
push
clc
nop
add
lcall
add
mov
cwtl
lahf
mov
arpl
je
adc
xlat
and
push
and
nop
mov
jecxz
pop
inc
push
adc
mov
or
into
sbb
push
pop
mov
cmp
sub
into
push
inc
add
xor
adcl
xchg
sub
fidivs
mov
jl
mov
mov
jecxz
xor
sbb
int3
push
negb
jecxz
pop
cmpb
inc
add
fs
fmuls
les
sbb
sub
cmpb
adc
add
mov
sti
jo
add
adc
stos
push
fs
jecxz
aad
or
add
or
sbb
cld
in
mov
pop
cmp
mov
cmp
dec
push
addl
aam
loopne
or
sbb
ucomisd
jg
sub
and
xor
popa
les
xchg
cmpsl
lret
jg
adc
mov
mov
fiaddl
cmpsb
jmp
add
int
icebp
jge
aam
mov
arpl
in
inc
sbb
and
in
and
mov
push
scas
or
mov
jg
lcall
outsb
lods
dec
inc
dec
js
je
ja
mov
dec
fs
scas
int
cmp
push
lds
cmp
iret
es
xchg
inc
jbe
ret
inc
add
test
loopne
addr16
ja
lock
clc
dec
shlb
gs
cmp
popa
add
xchg
popa
popa
xchg
adc
ss
sub
aam
test
lret
push
or
cmp
mov
add
hlt
or
sbb
fucompp
into
add
xor
sub
mov
add
out
jno
lret
imul
scas
pop
mov
sti
out
shrl
pop
jo
mov
and
jno
pop
test
scas
add
outsl
add
decb
add
mov
xor
jbe
cmp
cmc
clc
pop
pop
mov
inc
mov
inc
dec
cwtl
or
mov
ja
xchg
inc
add
andl
jno
add
icebp
add
cmp
xlat
sbb
add
dec
jae
mov
sub
test
or
push
js
mov
mov
mov
mov
and
mov
jnp
push
bound
adc
mov
nop
rcr
call
in
imul
mov
or
clc
lds
icebp
bswap
sarl
add
mov
push
add
add
fisttpll
jmp
or
push
add
clc
xor
stc
int3
push
cmp
addl
mov
dec
movl
mov
and
call
out
add
stc
xchg
pop
push
jmp
or
movsl
push
cmc
lea
mov
mov
mov
fdivrl
outsb
dec
ja
mov
sbb
lahf
mov
lock
cmp
jmp
add
or
repnz
call
sbb
movsb
add
mov
dec
in
cmp
mov
rclb
not
test
jmp
subl
stos
fwait
or
jl
push
cmpsb
fwait
in
mov
add
pushf
pop
nop
mov
jle
scas
test
ljmp
cmp
push
fisttpl
repz
pop
add
sbb
and
out
and
jg
test
rcrl
in
push
daa
sub
pushf
mov
adcb
lods
xor
sti
and
xor
rcrb
lds
dec
ja
mov
jo
les
sbb
jp
adc
pop
jg
add
add
xlat
jo
fnstenv
push
stos
je,pt
xor
pusha
les
add
js
add
cs
and
ret
xchg
shlb
mov
pusha
shll
cmp
test
out
bound
sub
setg
adcb
into
and
sbb
ret
inc
push
xor
das
hlt
add
inc
sbb
or
dec
mov
xchg
mov
mov
leave
adc
jle
or
testl
mov
flds
fisttpll
and
clc
push
pop
xlat
daa
icebp
add
jae
test
test
mov
xor
xchg
jno
dec
out
mov
addr16
loop
jbe
daa
or
add
insb
mov
les
dec
adc
pushf
cmp
ret
or
dec
les
lcall
sub
pop
push
lods
lock
je
popf
and
add
cmp
and
pop
inc
in
sbb
adc
or
lahf
mov
cwtl
sbb
rcrb
jo
shlb
aas
roll
mov
inc
mov
icebp
test
mov
dec
dec
test
call
scas
dec
and
fdivl
jge
cs
aam
jp
xchg
sbb
cli
adc
mov
orb
vmovlpd
pop
xchg
mov
pop
adc
jge
mov
in
jo
and
add
inc
ljmp
popa
dec
inc
repnz
mov
sbb
adc
and
push
and
add
into
sbb
jo
adc
clc
pop
fldt
adcl
adc
sub
int3
add
dec
gs
cmpb
pop
cmp
adc
cvtdq2ps
jmp
ret
popf
cli
dec
push
mov
flds
sahf
pop
jo
das
push
add
leave
outsl
shlb
xorb
dec
xor
push
ljmp
add
push
xchg
adc
out
add
inc
mov
pop
add
mov
rolb
mov
cmp
sub
out
jns
add
aam
in
sub
repnz
push
cli
mov
ljmp
add
add
les
jnp
sub
dec
jno
cli
int3
add
and
into
inc
andb
repz
ss
inc
lock
test
nop
mov
xchg
jp
in
fcompl
pusha
stos
test
inc
add
outsb
pop
push
push
sti
test
dec
dec
enter
push
insb
add
sahf
shrl
xor
mov
rcr
std
fisttps
testl
fdivrs
mov
and
dec
mov
iret
add
ret
dec
dec
dec
out
mov
cmpsb
inc
add
and
lret
decb
add
lods
dec
dec
clc
pop
xor
scas
push
or
mov
pusha
mov
je
add
lods
mov
scas
clc
cmp
cmpsb
ja
ja
test
shl
stos
pop
outsb
mov
les
inc
cmp
and
or
out
insl
xor
cld
lock
cmp
nop
enter
cmpsb
rolb
sub
cmc
mov
lock
jb
ror
pop
xor
mov
cmp
loope
lods
shrb
jmp
je
iret
call
addb
fcmovnbe
mov
inc
inc
jns
cli
iret
inc
mov
mov
inc
int3
into
andb
out
add
mov
sbb
int3
mov
sub
fld
push
cmp
shlb
loopne
pop
aam
cmpsl
xchg
test
mov
fcmovnbe
loopne
out
fldl
add
and
add
xchg
fsub
dec
add
inc
pushf
cmp
das
push
jl
jb
pop
repz
mov
sbbl
dec
ret
add
imull
clc
mov
js
or
jo
shlb
pop
mov
stos
add
jg
out
movsl
adc
push
mov
add
pop
testb
cmp
mov
xchg
leave
pop
cmc
sub
jo
and
cmp
adcl
jmp
sar
lds
cs
mov
jmp
sbb
and
iret
es
nop
movsb
dec
lock
pop
add
dec
dec
stc
add
lods
fadds
jne
pop
mov
std
ret
add
ror
cli
stos
data16
xor
mov
mov
sub
mov
add
and
cmp
sarl
sub
fsubl
jb
push
and
push
mov
add
jo
popa
fnstsw
flds
leave
xor
adc
mov
movsb
popa
add
push
mov
and
cmp
push
sti
push
les
daa
adc
inc
sub
cmp
xchg
sub
or
jns
add
shrl
iret
mov
jecxz
mov
mov
add
std
stos
loopne
out
push
les
xor
sahf
sbb
movsl
add
xchg
adc
sub
xchg
add
push
shrb
lahf
pushl
mov
dec
and
jle
inc
in
xlat
cmp
mov
leave
push
jle
fmul
in
lds
movl
mov
rclb
and
fsubrp
adc
xor
adc
lock
and
movsb
or
cld
fsubrs
arpl
or
add
push
adc
and
push
adc
shr
js
dec
popa
inc
and
fdivr
and
cltd
shrl
orl
inc
stos
add
or
pop
int3
sbb
mov
and
and
mov
pop
xchg
sub
cld
sbb
cmp
cld
push
add
add
lods
mov
pusha
mov
pop
hlt
add
out
mov
fidivl
mov
sti
sub
xchg
and
or
je
sub
pop
in
add
push
dec
pusha
and
xchg
out
add
mov
xchg
lock
add
cmc
push
jl
adc
mov
pop
cld
aam
add
mov
mov
cmp
jmp
mov
cmp
adcl
loopne
imul
mov
adc
xchg
add
shlb
add
sub
into
cmp
jns
add
jecxz
jle
add
in
mov
jge
ja
sbb
and
sbb
sbb
pop
add
add
cmpsb
icebp
loop
cmp
pop
or
and
mov
flds
ja
jecxz
outsl
pop
inc
int3
sub
addb
xchg
xchg
jnp
outsl
daa
or
adc
inc
stc
leave
repz
push
or
into
pop
push
pop
je
popf
adc
test
test
jmp
or
rep
add
in
lahf
jmp
adc
les
jl
sub
je
int
adc
movsl
lahf
filds
xor
jp
adc
and
test
dec
enter
mov
das
je
pop
les
mov
fdivrl
mov
enter
jmp
aad
sbb
add
outsl
daa
mov
ljmp
popf
mov
cmp
cmp
and
adc
jp
inc
jae
adc
pusha
rclb
mov
inc
or
sbb
lret
aas
pop
dec
mov
andb
adcl
pop
mov
and
pop
add
xor
and
inc
sbb
jecxz
inc
int
push
vcvtsi2sdl
cmpsb
repnz
lds
pop
add
inc
lret
jg
pop
pop
les
xchg
pop
imul
xor
inc
add
push
out
inc
aad
pop
push
add
mov
sub
add
adc
inc
add
adc
and
push
add
and
popf
dec
mov
inc
imul
adc
add
movsb
jmp
cmp
fmuls
add
jb
push
jecxz
push
inc
dec
pop
inc
aam
add
into
daa
sub
inc
pop
jno
inc
test
inc
movsb
inc
popaw
nop
shll
cmp
add
xchg
enter
ret
inc
aam
mov
stc
sti
jge
hlt
add
sub
lds
clc
in
push
xchg
loope
inc
jmp
sbb
pusha
lods
lea
icebp
sarb
add
out
or
fisttpll
push
aad
and
loopne
adc
enter
and
int3
adcb
arpl
scas
mov
shll
xchg
test
push
fcoms
add
and
xchg
call
cs
pushf
dec
inc
pusha
adc
lock
je
inc
xchg
mov
loopne
repnz
stc
dec
lock
in
dec
rcrb
sub
mov
leave
int3
adc
cmp
imul
addl
in
hlt
xchg
rolb
sbb
popf
add
xchg
xstore-rng
cmpsl
add
inc
mov
add
jmp
sarb
test
pop
add
inc
mov
cmp
out
es
sbb
xchg
pop
jbe
mov
pop
mov
inc
dec
inc
mov
cmpsb
push
nop
out
js
xchg
clc
cmp
jo
scas
mov
es
movsl
and
xchg
out
cmp
arpl
rcrb
sub
push
sub
push
test
and
daa
add
xor
fbld
subl
sbb
jbe,pt
add
imul
cmc
ljmp
inc
lea
insb
add
popa
jbe
jmp
loop
sub
pop
xchg
movsl
adc
sbb
loope
inc
mov
fisttps
cmp
fcomp
add
out
ret
or
enter
xor
out
cmp
aam
mov
outsb
inc
sbb
push
ss
rcrl
addb
test
or
push
sbb
adc
insl
kmovw
or
in
lods
jle
sub
jecxz
mov
and
mov
aad
pop
movsl
mov
or
mov
mov
ror
iret
dec
mov
ja
add
les
pop
add
out
adc
jb
sub
push
add
cmp
xchg
test
and
jbe
daa
push
xchg
shlb
cmc
popa
push
nop/reserved
into
mov
mulb
or
fisubs
outsb
roll
popa
or
xchg
mov
inc
add
sub
adc
sbb
inc
push
mov
mov
mov
push
push
push
pop
sbb
int
lcall
les
out
rol
popa
stc
or
outsb
addb
fdivrs
add
call
sub
ljmp
and
stc
ret
out
stos
dec
mov
and
faddl
lea
pop
lret
sti
arpl
push
push
inc
test
jle,pt
aaa
mov
filds
push
or
loope
pushf
and
adc
movsb
std
cmp
add
jbe
inc
sti
adc
pop
sbb
add
scas
lock
in
mov
cmp
add
outsl
stos
xchg
inc
dec
add
sbb
cmp
and
addr16
lea
dec
ds
cltd
sbb
cmp
sub
cmpsb
imul
cmp
mov
push
adc
dec
fwait
mov
xor
jle
push
std
jl
dec
scas
pusha
subb
xchg
lret
add
xor
fdivrl
mov
or
push
in
jecxz
test
inc
daa
xor
xor
pop
xchg
sub
mov
inc
nop
rcr
lods
push
int3
adc
lods
out
in
sahf
xorb
mov
or
out
cld
mov
lock
scas
stos
rol
out
adc
in
xor
xchg
add
fwait
and
pop
sub
das
mov
bound
pusha
add
push
dec
xchg
add
add
sub
mov
adc
add
movsb
mov
xchg
xor
adc
mov
pusha
adc
pop
xor
inc
les
adc
and
and
xchg
lret
dec
inc
rolb
sub
in
nop
lock
mov
sbb
add
scas
dec
aam
jge
lret
cli
icebp
mov
and
dec
jmp
or
push
add
es
decl
and
jnp
adc
mov
sub
jge
sub
sub
in
aaa
mov
daa
nop
mov
push
and
xchg
xchg
sbb
pop
negl
lea
adc
mov
jbe
mov
jns
add
inc
fwait
in
and
push
xchg
les
mov
and
mov
or
sbb
flds
mov
jnp
out
mov
sub
rcll
cmp
xor
jo
repnz
out
sarb
jle
pop
add
jo,pt
mov
dec
sbb
mov
cmp
push
and
andl
scas
stos
cmp
xor
and
mov
push
xchg
push
stos
mov
mov
les
mov
pop
mov
push
js
jg
cmpsl
sbb
and
sub
add
xor
inc
movsb
adc
lods
inc
dec
sub
ftst
leave
es
push
cmpsl
and
rcrb
stc
and
adc
jbe
add
jp
jl
mov
sub
fwait
push
das
insb
dec
pop
inc
jmp
add
adc
push
push
mov
fldenv
mov
es
cwtl
inc
cmp
jg
clc
push
add
hlt
cltd
mov
ljmp
mov
add
addb
cmp
outsb
repz
shrb
or
sbb
mov
enter
popa
mov
push
out
cltd
fcomps
add
int
mov
nop
fidivl
in
sub
adc
or
xchg
inc
rcrb
cmp
pusha
add
add
xor
inc
xchg
loopne
mov
xchg
pop
inc
cmp
adcb
loope
out
mov
push
mov
inc
call
stc
or
sbb
hlt
test
rcrb
aam
adc
leave
test
cli
or
mov
push
es
arpl
out
cmp
mov
int
mov
hlt
add
push
cld
mov
dec
jp
sarb
mov
stc
or
or
mov
add
jecxz
stc
mov
mov
cmp
arpl
lds
add
data16
dec
pop
add
js
dec
pop
sbb
faddl
dec
test
cs
cli
fadd
or
adc
dec
lret
lret
rdtsc
mov
xchg
xor
adc
subb
rcrl
stc
sete
out
push
sub
bound
out
lea
push
nop
lock
ss
pop
enter
fadds
pop
mov
outsb
adc
add
stos
pop
sub
pusha
dec
sbb
and
fs
jns
add
orb
sbb
add
ret
loopne
int
stc
outsl
aam
jecxz
mov
pop
inc
cmp
pop
andb
loope
xchg
push
dec
pushf
mov
mov
dec
dec
pop
adcb
lret
jae
add
aas
xor
mov
fildll
xchg
or
outsl
outsb
frstor
inc
xor
out
mov
sbb
fnstcw
popf
jmp
sahf
push
movsb
xchg
imul
or
test
and
clc
xor
and
sub
adc
and
arpl
adc
xchg
pusha
add
fbstp
cmp
mov
movsb
shlb
fwait
shrb
xorl
mov
mov
or
jp
test
or
mov
dec
and
stos
cli
mov
adc
scas
adc
add
mov
aas
pusha
or
xor
lock
inc
inc
push
std
int
or
push
push
push
mov
daa
idivl
or
lds
sarl
add
mov
xchg
jae
test
adc
add
lcall
mov
bound
pop
sahf
push
pop
daa
cmp
jl
out
sbb
das
mov
loop
js
inc
or
adc
scas
test
add
out
shll
add
insb
aad
add
inc
pushf
scas
mov
add
mov
out
add
sarb
rcrb
mov
mov
or
sbb
stos
add
out
sub
mov
movsb
mov
enter
test
inc
sarl
mov
or
mov
add
push
xor
inc
fmuls
sbb
lahf
orl
test
scas
add
inc
andl
inc
sbb
or
sbb
lret
inc
xor
sub
aaa
sbb
popf
and
dec
and
sub
testl
test
mov
and
cmp
add
mov
push
mov
cli
jecxz
dec
or
sub
jo
adc
out
or
sbb
xchg
mov
jecxz
idivl
cmp
xlat
mov
ss
lods
adc
or
add
jg
in
inc
inc
flds
roll
movsl
and
mov
jle
push
xor
dec
fwait
es
xor
leave
adc
js
ljmp
icebp
mov
and
sbb
mov
subb
xchg
mov
adc
or
xor
dec
mov
push
sub
mov
inc
nop
add
xchg
mov
mov
adc
popf
or
add
mov
cmp
xor
mov
cmp
dec
xchg
and
push
adcb
fcomps
push
or
push
je
add
imul
mov
inc
int3
test
rorl
pop
xchg
jge
xor
push
inc
cld
jns
adc
leave
roll
xor
mov
cmp
loop
add
mov
xor
inc
inc
mov
xchg
adc
mov
xchg
mov
mov
mov
adc
jle
sarl
xor
add
lds
add
sahf
push
lahf
mov
imul
or
decl
lea
xor
xchg
ja
jo
clc
push
cmp
das
cmp
sti
inc
dec
xor
es
rolb
aas
lret
fildl
push
lahf
xor
sbb
and
mov
incl
outsb
inc
mov
lock
push
data16
rcrb
jg
arpl
push
in
mov
loop
inc
cs
and
or
movsb
mov
sub
cmp
cmp
lahf
and
inc
lock
test
mov
mov
cmp
je
int
movsb
lock
sub
mov
or
hlt
imul
xor
lds
jp
mov
je
dec
mov
add
mov
adc
mov
aas
das
into
cltd
adc
ds
inc
push
dec
les
add
rcr
add
fldl
dec
sub
pop
and
pusha
fcompl
or
mov
or
push
in
movb
jl
ja
sar
push
or
aaa
adc
cmp
ret
mov
js
addb
pusha
add
adc
stc
jecxz
push
inc
lods
add
addr16
in
filds
aas
sbb
mov
adc
push
sub
fs
es
in
lock
jle
fwait
add
subl
es
or
and
xor
adc
call
jg
or
push
ficoml
or
add
xchg
fbld
mov
mov
jae
mov
add
mov
sbb
mov
aam
int3
nop
inc
dec
dec
or
push
fs
dec
cmp
loopne
clc
push
jb
call
cmp
inc
cli
inc
mov
adc
xchg
lds
ret
mov
loopne
inc
pop
xor
sub
insb
std
sub
mov
add
fsubr
int3
jl
add
inc
or
xchg
lods
rolb
les
cmc
hlt
ftst
cmp
rorb
clc
cmpsb
mov
pop
aaa
sbb
mov
js
fbstp
lcall
inc
mov
or
pop
cmp
cmp
xchg
cmp
inc
push
cli
add
mov
test
push
jnp
aas
sub
pop
cmp
int
shlb
subl
dec
and
mov
stos
inc
mov
mov
or
or
xor
nop
mov
or
inc
sub
add
mov
jmp
sbb
fbld
insb
ret
mov
mov
ret
sub
xchg
std
into
add
sub
cmp
cmpl
xchg
movsl
adc
mov
xor
push
test
leave
push
add
sbb
pop
adc
inc
pop
adc
or
stc
cmc
inc
fdivs
add
sar
mov
sub
inc
or
push
inc
call
shlb
mov
idivl
xor
or
push
bound
adc
xor
out
scas
daa
out
sbbb
inc
test
and
outsb
jae
jo
int
into
mov
sarl
loop
cmpsb
adc
jnp
inc
push
and
inc
or
pop
fwait
out
cmp
and
adc
ds
dec
cwtl
mov
sub
call
adc
aas
and
orb
test
xor
add
xlat
inc
mov
jg
pop
add
and
popa
add
inc
inc
sub
data16
dec
adc
cld
adc
xchg
jne
add
mov
push
int3
sbb
nop
push
xor
sub
xor
add
inc
sbb
sub
xchg
xorl
loop
add
ljmp
sarb
sbb
dec
xor
inc
pushf
jnp
dec
inc
mov
cmpsb
inc
inc
outsb
lods
and
mov
jb
pop
int3
subb
nop
mov
xchg
mov
mov
add
nop
inc
or
push
sbb
lods
gs
adc
lcall
add
dec
jl
aam
jno
sub
pushf
add
pop
dec
imul
push
jle
stc
cwtl
xchg
inc
add
test
int3
lods
hlt
push
add
dec
sub
add
sbb
fidivl
bound
outsb
out
and
mov
push
addl
loope
jbe
inc
dec
lret
bound
daa
sarl
shl
inc
or
insb
or
test
sub
pop
stos
imul
jns
shll
cmp
or
cld
mov
mov
popf
push
mov
mov
adc
out
outsb
xor
mov
popl
add
push
or
iret
mov
dec
cmovae
out
push
push
xor
add
xor
cmpsl
popa
test
cmp
ss
cmp
jl
push
cmp
sti
mov
push
and
mov
jg
shl
add
jae
hlt
enter
or
bound
inc
inc
push
loopne
cmp
fcoms
pop
ret
and
mov
loopne
hlt
or
js
inc
in
jl
mov
mov
and
aaa
ficoml
xchg
loopne
insl
nopl
xor
add
mov
add
scas
add
cmpl
leave
sbb
mov
ret
mov
ds
enter
fidivrl
inc
xchg
xor
in
add
add
xor
jae
or
cmp
loopne
adc
int
push
fmull
daa
push
cmp
rorl
faddl
aas
cmp
cmp
icebp
jo
mov
out
or
add
push
hlt
inc
fmull
dec
xor
add
rcrb
les
push
subl
int3
mov
les
leave
dec
std
cmp
mov
jecxz
sub
inc
or
adc
mov
jle
test
or
js
add
add
into
nop
dec
mov
inc
add
add
sbb
pusha
push
push
xchg
jl
inc
pop
mov
in
dec
add
and
popa
int3
sub
sbb
fbld
or
sub
test
pop
out
popa
or
imul
add
push
cld
inc
dec
fnclex
aas
xchg
cwtl
or
push
sub
rolb
mov
xor
fdivs
mov
js
es
xchg
mov
jle
ficoms
and
or
push
lea
pusha
add
les
loopne
pop
adc
push
shrl
fmuls
pop
std
add
les
in
js
dec
enter
movl
push
sahf
or
cmpl
ret
js
cmpb
clc
adc
ret
lock
scas
mov
xchg
fsubs
mov
add
movsb
push
pushf
aaa
add
pop
in
in
insb
dec
push
ret
movsb
xchg
pop
enter
rcll
and
sbb
dec
and
cmp
leave
add
test
xor
sbbl
cld
push
bound
hlt
pushf
inc
repz
or
js
stos
in
shlb
lods
mov
imul
xor
rorb
loopne
add
jnp
daa
dec
sub
sub
jge
outsb
out
popf
xor
test
push
cmpps
and
incl
add
cmp
inc
inc
lret
add
add
mov
jno
jmp
mov
lock
clc
sub
sti
mov
mov
dec
mov
stos
pushf
outsl
xor
push
jmp
mov
fstpl
jno
subb
adc
sbb
jge
ret
fwait
add
test
insb
sbb
sub
call
sbb
clc
cmp
into
xchg
or
inc
inc
adc
mov
adc
movsl
and
xor
cmc
in
ja
mov
sub
pusha
repnz
or
adc
adc
push
cmp
lods
stc
mov
mov
add
cwtl
inc
jnp
or
stc
mov
ds
shll
mov
and
add
loope
cmp
rclb
mov
xchg
mov
add
add
outsb
push
mov
lods
outsl
xchg
xor
cs
sti
cwtl
es
sbb
pop
mov
sub
clc
add
iret
addr16
add
pop
cmp
cmp
fcmovnbe
xorb
lcall
test
and
or
leave
xchg
out
and
rcrl
fcoml
or
rcr
xor
xchg
int3
add
mov
fsts
dec
test
lock
and
cmp
lods
sub
add
sbb
adc
inc
inc
mov
test
aam
dec
aas
xchg
sub
sub
add
and
add
rorb
xchg
mov
sarl
mulb
pop
jp
es
adc
sbb
jle
mov
add
jae
sub
inc
mov
pop
test
push
xchg
mov
mov
and
cltd
in
rorb
mov
or
testl
repz
lods
jbe
pusha
aaa
scas
pop
mov
jl
dec
xor
adc
pop
adc
xchg
sbb
pusha
mov
cmp
add
mov
cmp
or
lahf
loop
cwtl
fstl
int3
in
rcrb
fmuls
add
loopne
mov
push
popf
xor
mov
fidivrs
push
add
pop
lds
add
sub
and
or
add
cmp
repz
mov
xor
pop
jb
mov
sbb
test
sub
ret
push
push
lahf
mov
jnp
mov
fldcw
or
mov
je
xchg
sub
or
xchg
mov
jmp
insb
pop
mov
xor
add
mov
push
nop
xor
rcll
or
lcall
push
xor
mov
lea
jb
cmp
bound
or
cld
adc
xlat
sub
xchg
add
lea
test
inc
int
mov
inc
inc
bound
inc
cmp
movsl
fsubp
lds
sbb
icebp
shlb
mov
cld
testl
xor
imul
rcll
cs
dec
jmp
inc
pop
dec
cmpsl
xlat
inc
and
scas
mov
in
pop
mov
lret
pop
aas
scas
adc
lds
and
int3
pop
push
mov
xor
mov
add
gs
loope
mov
adc
mov
or
and
pop
lcall
pop
cmp
rorl
sbb
pusha
push
mov
ret
cs
les
jg
pusha
push
xor
fnstcw
shrl
fistps
imul
movsb
and
or
es
lea
ljmp
cli
dec
pop
lcall
jmp
loopne
aaa
das
popw
adc
data16
bound
dec
pop
pop
fsubr
imulb
adc
popf
mov
jg
or
push
push
add
cmp
test
out
add
xor
lods
in
sbb
test
movl
icebp
pop
push
out
fs
stos
cli
loopne
xor
orb
out
fdivp
clc
jbe
js
xchg
add
shrb
or
push
xor
push
jnp
mov
dec
test
or
jmp
out
sbb
add
xchg
repz
push
pop
loopne
out
dec
xor
mov
dec
dec
lock
orb
xor
sbb
xchg
enter
sub
addb
shr
cmp
mov
sbb
dec
ret
push
lret
fadd
ret
rclb
js
jmp
or
adc
push
mov
pop
add
test
cmp
enter
xorb
add
push
test
inc
push
popf
fisttpl
jmp
and
xchg
cmp
add
test
stc
adc
or
fmull
roll
lcall
cmp
fsubp
mov
mov
out
dec
dec
fs
and
movsl
and
fwait
ds
lret
add
mov
cltd
dec
xor
lods
scas
cwtl
mov
mov
xor
or
fs
or
xor
inc
mov
xchg
cwtl
push
nop
cltd
inc
sub
mov
mov
jmp
cwtl
dec
push
or
mov
add
pushf
sqrtps
and
daa
cmpsb
pop
in
or
or
sbb
add
xlat
xchg
test
inc
js
dec
dec
fs
jne
stc
push
jns
add
xchg
scas
popf
add
fistpll
mov
inc
mov
hlt
push
mov
mov
pop
and
cwtl
shlb
add
push
leave
dec
addr16
add
jnp
cwtl
and
adc
sti
push
add
mov
les
pop
pop
add
or
fiadds
in
pushf
mov
push
sbb
cmc
shll
imul
inc
xchg
mov
stc
shl
jmp
add
mov
ss
adc
cmp
jg
mov
xorb
pusha
insb
call
js
inc
push
add
or
cmp
out
adc
bound
sub
sbb
ja
dec
mov
es
lods
into
mov
jg
cmp
popa
nop
cs
and
scas
xor
lret
cmp
mov
xchg
and
jae
addl
or
or
enter
xor
fs
and
loopne
sbb
cwtl
sub
jb
push
fdivs
sub
arpl
test
mov
jle
xor
cwtl
adc
jg
movsb
enter
hlt
cwtl
adc
sbb
sbb
es
sub
pop
and
add
jmp
mov
out
addl
inc
dec
stos
arpl
inc
add
adc
mov
test
cmpb
or
dec
jp
mov
inc
mov
ror
imul
les
add
scas
lock
hlt
shlb
cmpsl
lcall
add
repz
pushf
xor
sbb
add
mov
js
add
rep
push
jns
inc
scas
call
adc
shrl
cmp
cwtl
adc
mov
test
fadds
and
mov
xor
adc
or
and
cmc
jae
add
push
lahf
lods
xchg
mov
in
sbb
add
hlt
xchg
or
fiaddl
add
mov
out
test
addl
enter
mov
sbb
mov
sub
sub
pushf
jo
add
mov
sbb
xchg
test
add
mov
push
dec
scas
lods
sahf
push
call
mov
lahf
cmp
push
cmp
les
outsb
add
mov
cmp
add
cmp
or
call
lcall
mov
xor
mov
inc
pop
add
shrl
ljmp
xor
cmpl
bound
xchg
jmp
loop
add
mov
add
and
jmp
xor
adc
add
mov
rolb
inc
lods
in
pop
cmp
xor
sbb
push
ja
pop
cmpsb
rclb
add
mov
aaa
aad
popf
sub
ljmp
or
daa
pop
dec
push
push
push
pop
mov
or
in
jo
pop
adc
fwait
fs
and
jge
int
and
push
out
les
dec
hlt
pushf
loop
add
inc
test
or
cli
cmpl
sti
scas
les
inc
dec
jnp
add
or
or
jg
das
fiadds
xor
frstor
inc
lods
addl
cli
enter
addr16
stc
pop
cmp
sti
int
add
mov
mov
or
or
into
mov
mov
push
je
dec
jb
nop
lods
sub
sbb
adc
adc
data16
push
jl
jg,pt
jnp
lods
fdiv
sbb
mov
ret
xor
orb
inc
popa
lds
mov
in
adc
int
sub
xor
andl
clc
pop
in
push
sbb
jo
mov
push
xor
add
inc
push
orl
or
inc
sub
nop
fmull
xor
xchg
pusha
loopne
push
dec
addl
rcrb
idivb
add
mov
push
sbb
inc
sbb
inc
or
outsb
inc
faddl
mov
pushf
shr
adcb
add
arpl
add
or
test
es
mov
pop
mov
and
and
pop
push
fadds
imul
add
jnp
xor
mov
jno
cmp
jns
shrb
add
and
nop
int3
loopne
add
les
sub
cmp
mov
lock
and
push
xchg
adcl
repz
and
rep
movsl
hlt
roll
add
test
decb
adc
sub
ljmp
cmp
dec
pop
enter
into
loop
cmpsl
clc
mov
sbb
dec
push
xchg
pop
xchg
and
loope
jl
sbb
popf
test
and
mov
pop
mov
cmp
aaa
inc
add
iret
cmp
fcomps
mov
dec
cmp
cmp
add
jo
push
add
inc
xchg
mov
mov
push
jle
dec
inc
nop
dec
sub
mov
xchg
iret
pop
sti
cld
repz
adc
pop
xor
int3
or
imul
pop
leave
pushf
adc
push
mov
clc
shll
dec
fldcw
push
mov
js
xor
xor
add
popa
add
hlt
sti
adc
daa
ljmp
cmc
inc
das
mov
ror
enter
wbinvd
mov
test
mov
call
sub
dec
sti
add
imul
leave
jmp
test
je
inc
ret
or
out
dec
add
push
inc
jg
or
xchg
and
dec
rorb
test
add
or
repnz
fists
enter
scas
push
lock
and
pusha
fmuls
adc
mov
adc
sbb
xor
push
das
es
loope
leave
xor
add
fistl
add
sbb
sbb
lods
dec
add
ss
hlt
fiaddl
push
rcr
mov
sub
inc
add
fsubrs
add
xor
cmpl
clc
pop
sub
orb
mov
dec
fldl
imul
into
or
pop
dec
int3
js
test
or
push
and
xchg
fsubrp
pusha
or
bound
lods
mov
adc
adc
cld
mov
xor
fmul
dec
dec
lods
test
sbb
popf
aad
push
add
test
je
gs
ds
add
aas
pusha
out
orb
shrl
lock
je,pt
inc
adc
sub
or
sbb
jae
sub
add
add
in
fcoms
cmp
dec
cmp
and
sbbb
add
dec
mov
sarb
mov
xor
xchg
xor
cmp
adc
call
add
xor
sub
push
inc
pop
popf
int
inc
out
shlb
mov
inc
loopne
mov
mov
lods
xchg
loopne
add
fcomps
inc
add
push
daa
jl
jl
add
inc
ds
sbb
push
scas
bound
or
test
push
dec
loopne
push
add
nop
fsubrs
shlb
xor
xchg
add
sbb
and
cmp
clc
cmp
and
cld
xchg
into
rolb
popa
xchg
sub
pop
js
dec
out
push
lcall
add
mov
js
scas
add
stos
fstpl
or
lret
inc
add
fstl
adc
in
or
out
stos
sbb
lock
jp
add
inc
lcall
pop
in
sbb
lret
fadds
cmp
mov
cmp
mov
xchg
mov
push
xchg
adc
push
scas
sub
and
sbb
mov
sub
or
movb
and
mov
dec
or
mov
in
xchg
les
popa
ja
sbb
dec
cmp
jae
int3
dec
fldcw
or
pop
adc
jns
jne
ret
mov
pop
inc
or
ljmp
push
ja
cs
fcoms
nop
cwtl
jecxz
push
pushf
push
pop
std
or
dec
cmp
enter
xor
scas
pop
inc
and
jnp
fcomi
xchg
out
loop
ret
pop
inc
fimull
test
add
mov
add
mov
fcoms
pusha
pop
push
clc
bound
sbb
movsb
rolb
mov
inc
jb
addb
xchg
and
les
xchg
add
addl
out
mov
inc
fisttps
add
movsb
jns
gs
pop
and
js
xor
aas
popf
cmp
pop
xor
add
inc
cmp
and
lds
enter
inc
sahf
mov
push
mov
and
mov
add
sarl
imul
pop
andl
inc
sti
mov
rcr
insb
adc
mov
jnp
pop
or
xor
jmp
mov
icebp
jno
mov
jns
cmp
popa
outsb
xlat
sub
mov
inc
out
inc
cwtl
inc
lods
or
dec
daa
nop
mov
addb
add
les
dec
loopne
inc
lea
popf
push
add
inc
mov
scas
add
repz
mov
cmp
sub
mov
xor
add
gs
mov
adc
inc
add
cli
or
ret
mov
jne
xchg
call
mov
mov
mov
test
mov
out
add
or
push
rorl
adc
inc
push
mov
xor
or
sub
add
inc
add
xor
int
out
mov
jp
push
sbb
and
ljmp
xor
mov
pushf
adc
bound
sub
inc
push
roll
cmp
int
and
adc
out
adc
or
stos
sbb
xchg
out
lea
pushf
rolb
inc
jnp
add
popf
fwait
mov
jmp
cmpsb
dec
sub
push
inc
and
and
mov
aas
jg
xor
pop
cmpsb
add
cld
sbbb
or
push
add
add
fsubl
fdivs
add
lea
cmp
add
fldcw
loopne
push
push
out
mov
and
add
movsb
push
test
jg
fmull
jg
pop
sub
bound
imul
jnp
lcall
and
inc
push
jl
and
addr16
xchg
sbbb
jge
js
add
jne
inc
in
mov
pop
xchg
mov
push
loopne
mov
mov
adc
mov
repnz
daa
push
test
and
add
dec
cmp
hlt
shl
pop
loop
sub
jne
movntq
out
ret
stc
ret
imul
js
xor
sbb
pop
pop
dec
enter
jg
fcmovnb
cltd
loopne
mov
sub
stc
in
pop
lea
shlb
jno
cmp
mov
lock
mov
shrb
adc
push
inc
sub
push
jo
lret
gs
scas
add
jb
lock
jbe
cwtl
pop
popa
sub
in
xchg
cmpsl
enter
xchg
js
repnz
jl
push
xchg
loop
cli
pop
ss
arpl
test
movsl
mov
inc
sbb
and
push
mov
pop
lret
out
fbstp
inc
sbb
cmp
mov
add
cmp
jnp
mov
pop
inc
fsubs
jecxz
aaa
push
add
jnp
mov
ja
or
adc
xor
test
push
aam
dec
cmp
sub
add
inc
test
cmp
scas
add
outsb
rolb
sbb
pusha
jge
add
and
adc
lahf
dec
cmp
add
dec
and
inc
subl
cmpb
add
sub
sbb
stc
enter
xchg
test
push
mov
cwtl
out
lret
jp
pop
aad
movsb
dec
aam
push
sub
lcall
sbb
nop
lea
add
push
xlat
mov
mov
adc
gs
push
fldenv
xor
adc
and
add
int
xchg
sahf
pusha
add
xchg
mov
jnp
negb
mov
nop
push
into
jg
adc
dec
add
inc
js
jne
add
gs
push
mov
jno
sub
adc
mov
push
cwtl
sub
in
pop
ss
mov
jmp
cmp
add
js
xor
inc
pusha
push
imul
jne,pn
cmp
push
xor
fwait
dec
aaa
dec
xchg
mov
add
jb
sbb
insb
arpl
mov
cmp
or
add
jmp
in
or
aad
add
dec
push
pop
and
imul
nop
add
popf
sbb
mov
mov
push
and
nop
add
mov
cmp
inc
add
cmp
xor
cmp
and
les
add
bound
int
adc
jmp
xor
push
lahf
add
adc
or
cltd
shrl
xchg
or
add
push
adc
loopne
ja
into
sbb
idiv
adcb
adc
jns
je
dec
xor
leave
in
popa
xor
roll
imul
xchg
mov
jns
cmp
sarb
sbb
sbb
sub
xchg
xchg
mov
mov
cmp
mov
fs
xor
fadds
mov
adc
fisttpl
in
imul
out
jo
aam
movsl
int
cmp
ds
js
inc
add
xor
adc
add
test
add
jle
movsb
adc
xchg
fdivrl
mov
add
jecxz
lahf
cmp
push
cmp
int
out
push
inc
enter
les
jmp
xor
addb
ror
ja
push
cs
adc
add
xor
mov
lea
and
mov
pop
nop
add
and
mov
cmp
dec
daa
fsubl
or
test
js
jl
out
pop
int3
jns
sub
arpl
pop
mov
hlt
dec
xchg
xchg
rcrb
sub
int3
lahf
adc
notl
push
lock
mov
hlt
in
ljmp
pop
popf
cmp
out
repnz
popa
sbb
pop
loope
sbb
cwtl
adc
jns
ja
mov
cmpsb
in
pop
pop
cwtl
out
pop
ret
add
sub
push
adc
xchg
mov
adc
mov
jl
out
pop
jne
sbbb
inc
mov
lcall
rcrl
fcoml
test
rol
divb
add
adc
sub
xchg
adc
je
sbb
sub
lods
test
xorb
sbb
adc
xor
lods
popf
or
sbb
incl
adc
mov
cli
sub
push
pusha
inc
addl
sbb
sti
cs
push
add
sbbl
out
test
nop
mov
add
cmp
add
pop
fldl
cmc
add
js
jl
pop
jp
mov
add
mov
rolb
mov
add
cmp
push
mov
mov
fs
mov
arpl
adc
cmp
and
std
adc
cwtl
sub
sbb
sarl
roll
push
fisubs
mov
inc
mov
js
inc
into
movl
adc
jnp
repz
sahf
shrb
loopne
dec
mov
add
mov
sbbb
add
call
push
mov
cld
loopne
add
lea
and
jmp
nop
cld
fcmovnbe
sbb
cs
push
std
xor
pop
flds
inc
pop
xchg
pop
mov
mov
lods
inc
int3
or
dec
rolb
add
enter
aaa
inc
repz
xor
mov
clts
add
int
arpl
jae
push
jmp
lret
movsb
jbe
call
or
lock
cld
nop
addb
jo
into
fcoml
cmc
jnp
leave
test
add
subl
orl
add
cmpsl
or
lea
out
mov
inc
inc
push
cwtl
je
mov
mov
or
xchg
mov
imul
sub
mov
mov
shrb
addr16
mov
xchg
insb
mov
add
push
and
mov
sbb
push
daa
arpl
aaa
inc
xor
daa
inc
rorb
dec
int
dec
pusha
cmp
into
daa
jle
movsb
dec
fnstcw
or
xchg
mov
cmp
mov
cmp
stos
or
adc
ret
clc
inc
add
xchg
push
inc
lret
xor
cmp
xor
jecxz
lods
push
cmp
adc
cmp
fs
dec
outsw
push
sti
mov
adc
enter
sbb
push
add
mov
add
repz
enter
fucom
nop
and
push
stc
rclb
inc
or
test
lret
icebp
rcrl
cmp
fldl
in
mov
scas
fistpl
xor
mov
iret
add
and
xorb
es
mov
les
or
test
add
sub
and
add
pop
sarb
pop
adc
mov
shld
mov
add
jecxz
int3
push
aas
dec
test
push
mov
rcr
add
and
pop
jne
add
cmp
add
cld
fsub
int3
ret
inc
push
popa
shl
pop
or
cmp
rolb
enter
add
mov
imul
sub
rcrb
and
cmpsb
int3
addl
inc
mov
pop
add
inc
ror
int
push
jo
mov
fneni(8087
test
add
outsb
loop
ret
in
inc
push
punpckhbw
daa
pusha
lret
sub
adcb
sbb
loopne
sub
out
loopne
into
add
test
je
les
mov
mov
fidivs
push
xor
lcall
pop
loope
js
dec
bound
out
dec
and
lods
addr16
lahf
mov
push
dec
in
testb
scas
xchg
jb
pop
ret
insl
dec
mov
sbbb
mov
rolb
push
add
mov
add
and
pusha
add
dec
stc
or
jmp
nop
rol
mov
mov
lock
fsubl
scas
outsl
dec
add
insb
xor
sub
in
add
lds
test
lods
mov
add
inc
out
jno
or
pusha
cmp
repnz
or
cmp
inc
jl
add
ret
jg
and
mov
sbb
sahf
pop
inc
xor
loope
pop
push
lock
mov
push
es
inc
jl
dec
aaa
roll
fbld
sub
test
jne
xchg
jecxz
out
and
push
movsb
bnd
out
fadds
jbe
pop
xor
iret
mov
clc
adc
dec
cmp
scas
call
lret
unpcklps
inc
mov
add
inc
inc
xor
inc
push
ficoml
inc
fnstenv
pusha
or
mull
inc
add
inc
test
push
cmp
clc
inc
into
inc
cld
push
sub
ret
mov
xchg
cmpsl
push
add
insb
xor
je
add
push
in
and
lds
test
rol
shrl
pushf
xor
aaa
pop
pop
push
shlb
mov
push
mov
cmp
xchg
add
nop
imul
popa
inc
outsb
stc
mov
dec
add
push
out
dec
pop
and
cmpl
inc
pop
ret
or
outsb
pop
and
imul
xchg
div
bsr
out
mov
push
dec
sub
lock
inc
test
cmp
cld
pop
add
xlat
dec
cmpsb
mov
icebp
adc
bnd
mov
ja
out
cmp
xchg
insb
mov
push
mov
bound
ror
cli
add
shl
sarl
push
xor
test
add
cmp
or
inc
vprotw
icebp
mov
jno
sbb
loopne
jae
fcoms
pop
cmp
add
mov
dec
inc
lods
push
movsb
fiaddl
push
loop
cmp
add
ss
cmp
add
push
inc
pop
xchg
push
dec
push
scas
andl
stos
add
mov
jge
push
xlat
dec
mov
jae
cmp
stos
stc
jbe
js
pop
mov
push
fcmovb
es
pop
incl
sub
adc
cltd
pusha
mov
pop
sub
test
dec
fs
mov
mov
sti
bound
pusha
fxch
movsl
jo
iret
pop
pop
push
add
mov
jp
add
mov
xor
push
add
pop
mov
pop
add
rcr
js
bound
adc
flds
lcall
cld
and
and
mov
test
ret
push
push
adc
xor
ljmp
or
imul
in
pop
pop
nop
cmp
and
cmp
daa
adc
cmpsb
loope
sub
pop
cmp
xor
mov
mov
inc
rcrb
push
nop
cwtl
jg
in
dec
add
fidivrs
jl
adc
mov
lods
test
pop
add
sub
cmp
push
dec
add
add
in
pop
mov
sbb
out
xchg
nop
add
andb
int
pusha
out
sarb
ret
add
shrl
aam
push
push
sahf
aas
cmp
sbb
pop
popa
sub
gs
je
mov
js
mov
insb
lahf
adcb
inc
fchs
mov
jnp
and
jp
cmc
fmulp
xchg
push
push
or
setl
jbe
dec
add
xchg
mov
add
add
imul
and
push
ds
addl
xchg
sbb
lock
sbb
sbbb
xchg
xchg
into
pushf
add
inc
and
or
and
push
add
push
bound
mov
stc
add
mov
jb
or
jge,pt
loopne
jp
adc
aaa
repz
push
sub
add
pop
adc
push
rolb
dec
and
std
add
jmp
test
test
inc
sub
and
mov
sub
js
jns
add
leave
out
in
inc
mov
xor
fmuls
scas
mov
adc
add
aad
push
pop
sti
incl
adc
or
mov
ret
pop
mov
movsl
pop
xchg
jg
scas
jmp
cmp
sbb
mov
mov
mov
imul
push
add
jb
out
dec
mov
sub
fwait
dec
dec
ret
add
lea
les
rorb
cmp
rorl
pop
xor
or
aam
aaa
xchg
pushf
sbb
lock
cmpsb
mov
mov
aam
or
inc
fdivl
and
andb
jl
mov
jg
add
jnp
les
sub
cmpsl
bts
xor
mov
jns
push
test
out
jnp
xor
xor
iret
cmp
clc
or
add
add
jb
dec
jecxz
test
jo
fnsave
mov
out
pop
fsubr
pop
add
mov
add
clc
or
cld
nop
cld
add
lds
mov
int3
in
mov
sbb
imul
mov
movsl
add
xchg
mov
xchg
inc
dec
jb
inc
or
adc
je
add
test
sbb
and
pop
lock
inc
pop
inc
inc
enter
jp
push
je
pushf
mov
add
rclb
mov
adc
daa
addl
mov
neg
mov
fadd
push
or
fs
lock
stos
mov
shl
addb
push
icebp
and
cmp
xorl
adc
sahf
dec
bswap
roll
ret
mov
popf
repz
pusha
push
lods
lret
or
nop
dec
mov
or
add
daa
int
pop
xor
jb
sti
js
call
btl
add
xor
cmpb
popf
out
sti
xchg
and
xchg
mov
mov
daa
pushf
loop
adc
mov
sub
lcall
dec
mov
add
or
inc
sub
pop
loope
xchg
add
dec
jle
add
mov
add
jp
mov
adc
add
int3
pop
or
mov
dec
ds
mov
jl
mov
inc
sti
inc
or
adc
xchg
stc
inc
adc
mov
call
in
mov
cmp
mov
aam
inc
jae
hlt
sbb
lea
cwtl
xchg
out
xchg
or
xchg
sub
imul
pop
sahf
mov
add
add
cmc
ljmp
inc
scas
aam
clc
or
mov
sarl
inc
add
cmp
into
xor
add
out
cmpsb
cmp
call
pop
int
and
out
rorb
shlb
sbb
xchg
sbb
shrb
or
xchg
mov
rorb
pop
sub
leave
cmc
movsb
jb
out
inc
enter
pusha
fsubl
hlt
mov
popa
push
push
cmpsl
or
mov
adcb
test
adc
cmp
and
cwtl
sbb
aam
inc
mov
mov
ret
add
int
jg
or
dec
pop
sub
inc
push
pop
add
or
pop
mov
clc
dec
das
cmp
mov
mov
inc
repnz
in
add
push
repz
push
or
stc
sahf
add
jo
rcrb
adc
ja
sub
shll
xchg
pop
sti
hlt
inc
mov
call
pop
iret
jb
dec
ja
adcb
or
pop
rclb
aad
js
add
or
cwtl
call
sbb
add
pop
nop
into
addr16
sbb
loop
roll
fisubrl
arpl
nop
dec
add
stc
adc
lods
push
jge
sub
inc
xchg
clc
jg
mov
aad
pushf
das
imul
add
ljmp
dec
pop
and
mov
repnz
ja
xlat
test
out
push
leave
dec
pop
jno
roll
sub
sbb
test
test
inc
aam
popf
push
scas
jo
mov
popa
push
push
sbb
int
jg
fadds
or
je
icebp
aaa
inc
jb
dec
jno
mov
jb
pop
cmp
xchg
leave
jae
adc
loop
rorl
adc
inc
lcall
nop
mov
imul
test
popf
insb
jo
xor
std
les
jno
cwtl
fsubrs
add
sbb
push
add
add
in
inc
or
jno
xor
fwait
lret
dec
das
rorb
push
push
cwtl
jne
sbb
sub
xchg
popf
pinsrw
mov
jl
add
in
inc
inc
and
inc
insb
ss
push
lock
call
add
bound
and
stc
aam
out
inc
push
or
pop
test
add
push
adc
mov
ljmp
mov
movsl
adc
push
xor
jg
lret
popf
mov
aaa
pop
push
add
or
mov
mov
push
out
shrb
mov
test
adc
ds
mov
dec
fwait
cmp
and
nop
loopne
add
mov
lock
add
adc
dec
xor
or
pop
inc
xchg
cmp
xor
mov
jl
movsb
outsb
lahf
rorl
jg
fcoms
outsl
nop
hlt
ret
mov
add
repz
jns
push
clc
xor
fwait
cmp
add
sbbl
cvtpi2ps
loop
add
fmul
cld
lods
cmpsl
sbb
xlat
into
mov
adc
jno
imul
pop
inc
mov
lods
test
xchg
stos
sub
cs
push
xchg
scas
and
inc
mov
mov
mov
int3
add
sarb
fcom
jl
lea
fldlg2
movsb
add
mov
shlb
adc
outsl
and
aas
inc
xor
adc
dec
xor
loop
add
addb
mov
mov
xchg
cmp
mov
in
cs
test
stos
push
fcmovu
and
call
dec
add
pusha
jge
ficoms
jbe
mov
mov
mov
adc
cmp
cltd
adc
ret
das
and
jl
mov
dec
pushf
movsb
clc
outsb
jecxz
fs
movsl
jg
xchg
call
call
mov
sbb
outsb
cld
xchg
push
js
xor
je
add
or
adc
mov
fistpll
dec
nop
mov
nop
dec
and
and
out
rolb
ss
aam
lods
mov
inc
add
dec
mov
cmp
cmp
jne
aam
cmp
jno
cs
es
and
mov
mov
dec
cld
call
xor
sbb
or
add
pop
xor
out
dec
pop
xlat
inc
fdivr
adc
cltd
call
loop
in
add
testl
sbb
in
xchg
add
callw
dec
cmp
jb
clc
loop
mov
xchg
add
pushf
sbb
mov
inc
xor
xchg
jle
sbb
fnstcw
push
push
mov
int
arpl
out
fcmovnu
pop
les
mov
cltd
cld
ret
add
lds
aam
fs
fdivrs
outsl
in
rcrb
xchg
xchg
in
fs
es
mov
add
jge
fsubp
sub
mov
jne
xor
cmp
push
lret
add
call
sbb
mov
mov
loop
pop
push
sbb
ret
aam
dec
aaa
mov
daa
adc
mov
cmp
mov
mov
adc
rorl
cmp
sub
cmpb
mov
xchg
xchg
jb
pushf
sbb
jl
loop
xchg
mov
jb
dec
push
xlat
aam
or
cmpsl
movb
add
fisubrl
in
sbb
cmp
cmpsb
les
daa
je
push
adc
mov
pop
sub
add
dec
pushf
adc
push
fstl
pusha
fdivrs
lods
push
test
js
data16
in
repz
xor
cli
add
mov
and
inc
fmull
mov
scas
popa
hlt
xchg
or
lea
out
sub
add
out
xchg
push
add
xchg
adc
or
inc
adc
subl
adc
ret
sub
push
hlt
adc
in
loop
or
cs
dec
in
clc
idivb
movl
icebp
ljmp
mov
js
sbb
add
mov
lahf
loop
jns
xchg
inc
xchg
ret
mov
cmp
lret
nop
in
fnstenv
adc
mov
mul
stos
je
mov
call
mov
sbb
push
loope
xchg
aad
enter
pop
mov
jo
inc
fsubl
js
add
ss
xor
xchg
and
lods
insl
jbe
aam
xchg
push
xchg
jle
and
mov
mov
fsubr
andb
es
jnp
outsb
adc
xchg
mov
addb
aaa
jbe
jmp
push
sub
fsts
add
mov
sub
push
cmp
add
popf
push
mov
pop
mov
lret
adc
lods
bound
iret
dec
dec
push
xor
data16
adc
add
sbb
xor
xorb
add
sarb
loope
jle
sbb
leave
and
cmp
or
test
push
test
push
add
jg
test
test
adc
sti
mov
inc
rolb
outsb
adc
ret
mov
add
cs
mov
and
jbe
add
inc
cmp
loopne
xchg
es
pop
lock
mov
jns
add
mov
cmp
mov
mov
or
aad
enter
xchg
fisubl
adc
and
jg
fnstenv
cmp
fwait
ljmp
ret
and
das
cltd
add
mov
addr16
fcmove
enter
xor
movsb
and
push
adc
or
sub
loop
les
insb
loope
sti
fwait
cmp
lea
inc
or
and
pushf
loopne
add
adc
rclb
mov
cmpsl
mov
xor
pop
inc
cwtl
and
je
push
adc
and
inc
adc
fs
inc
inc
lock
or
cwtl
test
inc
pop
ret
and
sub
add
aad
inc
add
adc
dec
sub
sbb
fnstcw
sub
inc
dec
cwtl
loope
pop
jae
or
out
or
fcoms
les
movsl
je
dec
sub
test
sub
addb
int
inc
movsl
outsb
xchg
add
adc
aaa
xchg
negb
jns
or
mov
sub
test
loope
add
push
cwtl
add
jbe
mov
sub
inc
mov
sub
lret
mov
out
stc
or
fbld
pusha
dec
adc
dec
lock
dec
lock
dec
out
mov
adc
je
filds
jne
cmp
add
hlt
xchg
stos
and
jp
inc
les
dec
mov
call
enter
pushf
scas
stos
mov
xor
mov
dec
push
pop
adc
cs
xor
inc
nop
pop
mov
and
or
or
mov
sbb
div
xlat
je
cmp
aas
mov
lret
outsl
xor
adc
stos
clc
cltd
sbb
adc
and
lds
add
fiaddl
test
adc
add
outsb
stos
stc
sahf
mov
mov
clc
fcoms
xor
mov
jno
xchg
aaa
pop
add
mov
or
mov
jbe
cs
mov
mov
inc
shll
push
int
loope
jnp
sub
nop
iret
dec
xlat
in
or
inc
lcall
arpl
rcrb
xchg
mov
pop
jle
pop
popa
out
pop
insb
and
pop
mov
dec
rclb
lds
pusha
dec
mov
mov
cmpsb
push
in
sbb
shll
inc
push
adc
pop
xchg
je
add
repz
add
mov
push
fisubrs
in
movsb
pusha
inc
add
adc
test
jmp
test
cwtl
mov
in
xchg
adc
test
mov
jnp
ljmp
outsb
fcoml
dec
pop
in
or
mov
andl
adc
xchg
ljmp
inc
inc
mov
add
jb
adc
sub
pop
hlt
insb
jnp
add
jae
mov
fbstp
leave
mov
inc
xor
jle
cli
lret
sub
mov
add
cmp
aam
lret
lcall
iret
push
les
mov
xchg
pusha
inc
add
add
into
rolb
dec
test
mov
jb
cli
cs
adc
aam
mov
jae
xor
dec
dec
insb
dec
repnz
xchg
adc
mov
nop
cmp
loop
add
and
or
mov
lods
roll
push
out
in
or
cli
xor
cmp
xchg
add
xor
scas
cmp
add
ja
mov
decb
data16
pop
xchg
pop
jb
sub
mov
mov
or
into
jl
push
dec
add
clc
nop
mov
je
dec
jb
lods
clc
test
sub
inc
js
inc
jg
mov
inc
or
repz
out
stos
cmp
pop
and
in
push
lds
add
mov
les
sbb
inc
scas
fs
cmp
shll
jnp
sarb
and
push
inc
or
out
add
cli
addl
push
jo
dec
sbb
dec
xchg
shr
daa
shlb
cmpb
mov
out
pop
inc
test
mov
dec
mov
lock
mov
mov
je
fsubs
mov
push
add
pusha
inc
mov
fsubs
mov
fcoml
mov
xor
mov
add
and
test
xchg
xchg
movsb
push
cmp
add
mov
cmpsl
xor
dec
push
lret
and
cmp
in
jb
aas
shrl
out
and
lahf
cld
pop
xchg
add
in
inc
mov
pop
cmpsl
sub
cmc
test
jle
add
add
mov
fmul
iret
das
mov
add
fistpll
clc
movsb
add
inc
xchg
loope
lods
mov
lock
dec
xchg
add
push
iret
movsb
or
je
nop
cmp
adc
and
inc
stc
adc
sub
dec
or
lret
mov
cmp
dec
jge
add
cwtl
pop
cltd
mov
xchg
push
fs
and
out
cmp
and
lea
push
insl
mov
cmp
sbb
test
xor
mov
dec
cmp
mov
sbb
adc
jbe
pop
add
testb
cli
test
orb
pop
mov
sub
cmpsb
rorl
imulb
loope
int3
cmpb
les
inc
stos
sub
movsb
js
popl
adc
sahf
cld
mov
int
lods
push
sub
div
or
stos
cwtl
mov
push
cmpsb
in
mov
xor
jbe
fs
dec
cmp
shl
xchg
test
dec
in
rolb
inc
xchg
mov
cmp
add
aam
iret
or
cmp
dec
int3
mov
pop
cmp
cld
xor
add
xorb
subb
int
sub
inc
shrb
or
loopne
idivl
adc
cmp
mov
pop
testb
inc
leave
rcl
dec
mov
add
lock
adc
push
cmp
mov
jg
add
or
loopne
sbb
push
and
ret
test
xlat
into
pop
add
and
jmp
fs
pop
mov
sub
sarb
add
fcomps
dec
mov
jo
adc
fs
mov
pushf
xlat
testl
jg
add
lret
dec
xchg
clc
sbb
pop
add
jmp
dec
push
ds
or
add
inc
mov
dec
sbb
sub
push
scas
inc
and
sbb
int
out
inc
mov
movsb
xorb
mov
arpl
pop
jno
xor
cmpb
std
test
clc
rorb
je
test
testl
xchg
add
inc
fiaddl
mov
mov
pop
lahf
inc
je
or
mov
dec
pop
imul
jp
lret
clc
sbb
lret
pop
add
jl
jns
loope
sbb
enter
add
dec
xor
mov
js
mov
dec
rol
lcall
or
test
fadds
mov
dec
pop
in
movsl
loopne
or
cmp
or
xor
mov
xchg
mov
adcb
jl
push
inc
add
xchg
cs
cli
enter
push
pop
xor
jl
cwtl
cltd
mov
mov
adc
push
xchg
add
fidivl
lock
pop
sar
es
in
inc
sbbl
add
test
shlb
mov
fcmovnb
and
xor
dec
popa
loopne
add
mov
cmp
inc
movsb
or
jae
mov
inc
fdivrl
sub
hlt
dec
jge
dec
pusha
icebp
lcall
push
or
inc
pop
push
call
js
add
cmp
fcomps
es
sub
sub
icebp
aas
int3
mov
rorl
aam
mov
jb
mov
push
sub
cmpsl
daa
test
jl
add
sub
dec
jle
mov
adc
jnp
adc
sbb
scas
daa
sub
push
sub
xchg
xor
into
sub
cmpsb
pop
daa
fcomp
fs
xchg
repnz
std
add
cmpps
out
test
inc
std
push
or
into
and
lahf
imul
adc
ret
rolb
icebp
inc
idivl
pop
out
jnp
mov
dec
mov
lods
enter
js
loop
pusha
sbb
out
lahf
and
push
sbb
pop
and
mov
lds
xchg
divb
lock
push
imul
shrb
sti
pop
cmp
dec
push
dec
sub
sub
loope
cmp
xchg
pop
enter
mov
and
or
xor
inc
jl
cmp
cmp
shrb
push
lds
int
xchg
sbb
rorl
shrb
insb
push
cmp
mov
add
push
aaa
cmp
or
sub
mov
and
mov
mov
call
cmp
xor
sbb
fdivs
dec
out
and
shlb
test
xor
lods
mov
add
fcomip
inc
outsb
fucomi
cltd
add
pusha
cmp
int3
jno
mov
add
mov
clc
sbb
inc
sub
imul
adc
in
or
int3
mov
aas
jg
and
xchg
jno
pop
add
sti
add
int3
and
jp
mov
inc
test
dec
cli
push
ljmp
movb
sub
cltd
add
es
mov
xor
mov
cld
xchg
and
mov
in
sbb
add
adc
add
scas
inc
scas
xor
pop
add
ljmp
pop
cwtl
scas
pop
mov
loop
push
jbe
movsl
sbb
cld
rclb
inc
push
sub
pop
xor
std
ss
lds
sahf
sbb
and
loopne
xorl
gs
jp
add
fcoms
add
mov
outsl
add
inc
or
js
sub
inc
loope
mov
jns
mov
aam
dec
mov
lds
int
test
mov
mov
sbb
add
add
inc
test
lea
es
and
movsb
dec
jecxz
add
dec
add
fdivl
cli
lahf
push
xchg
stos
addb
add
jo
stos
and
xchg
mov
inc
xor
or
inc
mov
xchg
rcr
push
dec
dec
cltd
cwtl
cmpb
ljmp
rorl
push
movsb
xor
push
cmpsb
add
sub
mov
or
adc
fwait
imul
mov
inc
push
inc
or
add
mov
cmp
les
in
lret
add
iret
jno
outsl
lret
in
mov
push
xor
add
inc
add
loop
je
sub
inc
add
pop
iret
stos
in
xchg
jecxz,pt
or
orb
mov
xchg
jns
add
jns
lds
bound
call
loope
stos
and
pop
sbb
pop
lods
pop
aaa
aad
and
add
xchg
std
and
adc
loopne
xlat
inc
mov
fisubs
fcoms
call
orb
sub
iret
add
cmp
mov
add
dec
mov
mov
add
mov
push
repnz
into
ja
fldenv
add
cmp
dec
add
movsb
bswap
addr16
jmp
sub
pop
sbbb
mov
adc
sti
adc
imul
xchg
sbb
cs
or
jge
lret
add
jbe
cmp
xorl
shrb
add
outsb
xor
fsubrs
ljmp
xchg
add
dec
sti
or
xchg
rolb
push
xchg
xor
loopne
int
push
nop
and
add
adc
fsubr
or
push
addr16
jbe
add
lea
push
add
dec
andl
xchg
jbe
addl
mov
daa
mov
xor
dec
sub
loopne
popf
adc
mov
add
jmp
inc
pop
xchg
mov
inc
mov
push
je
mov
push
inc
out
pop
in
or
pop
sbb
push
push
pop
pop
jle
pcmpeqd
sbb
and
add
fildll
push
or
or
mov
inc
cmp
hlt
in
xchg
inc
nop
dec
arpl
xorb
out
adc
jo
pop
sbb
je
test
mov
and
shrl
addr16
add
dec
xor
clc
jnp
cmp
call
mov
mov
clc
and
call
dec
jle
fdivs
or
sub
pop
testl
mov
push
or
dec
and
clc
out
dec
scas
adc
push
push
jg
repnz
and
leave
push
cwtl
mov
pop
jb
movsb
add
jg
lret
je
sbb
dec
jne
aam
or
ds
retw
and
imul
xchg
inc
adc
inc
fistl
cmpsb
shr
decb
ret
mov
out
xchg
cmp
push
mov
cmp
mov
inc
scas
adc
inc
mov
mov
repnz
bswap
jg
cmp
bound
mov
mov
inc
sbb
add
jb
xchg
sahf
mov
push
lret
xor
lret
add
js
mov
jmp
shlb
or
icebp
xor
inc
nop
jns
or
cwtl
ds
inc
pusha
sbb
add
sbb
and
or
std
xor
fdivs
inc
mov
fs
and
nop
bound
aas
xchg
out
pop
jl
add
or
push
loopne
and
pop
scas
push
or
lods
sub
loop
shlb
inc
mov
repnz
adc
int
add
adc
push
push
imul
pop
mov
dec
sub
or
nop
xchg
adc
xor
gs
xor
xchg
lods
lock
imul
xchg
lret
mov
fbstp
inc
movsl
mov
add
adc
xchg
jp
aad
mov
movsb
int3
push
mov
cld
addl
add
jp
dec
sub
or
and
adc
jp
cmpsl
pop
inc
dec
jle
add
cmpb
fs
flds
sbb
les
dec
shlb
add
adc
or
xor
daa
cmc
add
movsb
xchg
test
push
adc
xor
loopne
rolb
cld
push
add
lods
xchg
dec
push
pop
dec
pop
aam
rorb
dec
fbld
push
sarl
sbb
sbb
movsb
and
pop
jp
dec
or
aam
enter
xor
pushf
enter
addl
mov
ljmp
jno
repz
cmpsb
lahf
mov
adc
scas
or
jg
mov
out
repz
idivb
pop
iret
out
or
nop
jmp
cld
ljmp
mov
xchg
out
push
ss
pop
inc
jne
pop
adc
mov
jl
xor
stos
ja
and
movsb
test
xchg
xchg
add
inc
dec
mov
add
sub
testb
or
fisttpll
repnz
popa
inc
add
jns
add
mov
lahf
cmp
or
rcrl
add
pop
push
adc
pop
inc
sub
pop
sbb
dec
add
cmc
adcb
out
dec
leave
mov
sub
pop
push
les
ljmp
push
sbb
into
sub
rolb
insb
xor
add
sub
xor
addl
test
pop
lods
or
cwtl
adc
orl
mov
lods
sti
pop
fcoms
mov
and
in
jnp
mov
das
push
enter
mov
pusha
pop
push
addr16
push
mov
sbb
das
loopne
cmc
and
push
add
mov
inc
sub
hlt
adc
or
mov
call
outsb
cmc
adc
add
fidivrs
mov
enter
jp
mov
pop
ds
das
rolb
push
mov
mov
mov
out
add
add
add
mov
mov
jl
jecxz
dec
leave
add
loope
addb
or
jge
imul
mov
mov
and
pop
aaa
fildll
fistl
sbbl
jmp
xor
jmp
pushf
std
xchg
inc
sti
mov
icebp
mov
cs
dec
push
push
pop
loope
das
inc
dec
daa
cmpsb
add
pushl
ljmp
lahf
cmp
loopne
out
je
add
std
mov
sbbb
add
xchg
add
add
lret
or
and
mov
adc
pushf
out
dec
or
andb
xchg
mov
cld
add
pusha
arpl
cmp
push
and
loop
cli
jb
mov
inc
sbb
mov
sub
push
add
arpl
test
dec
adc
je
out
xchg
rcrl
dec
fmuls
std
rcr
add
push
or
add
imul
lret
out
in
sub
jp
xor
out
inc
mov
cli
add
sub
mov
shlb
add
int
outsl
xchg
mov
jne
add
jge
in
sub
mov
hlt
inc
ja
add
mov
and
ret
out
lock
pop
mov
in
rorb
push
cwtl
adc
cmp
test
xlat
pop
xchg
pop
orb
stos
push
rsqrtps
imull
popa
xchg
add
adc
pop
push
or
pusha
xchg
std
add
mov
inc
add
mov
fildl
adc
xchg
adc
shrb
shrl
sbb
stc
leave
pop
insb
stos
add
jle
lcall
negl
jg
clc
adc
mov
dec
cmc
movsl
pop
push
mov
cld
and
sbb
add
inc
popa
sbb
inc
movsb
popa
rcrl
cmp
aas
stc
and
enter
sti
inc
in
pop
add
popa
dec
mov
jmp
mulb
pusha
mov
xchg
inc
dec
shl
add
ret
xor
daa
xor
mov
mov
jl
sbb
adcl
rcr
pop
add
test
mov
inc
add
xchg
ret
sarb
add
iret
cmp
lcall
jl
popf
push
sub
testb
pop
data16
mov
jg
jb
es
add
adc
testl
xor
cmp
or
stc
jns
push
mov
iret
pop
bound
leave
pop
call
imul
loop
popa
mov
sbb
mov
in
pop
mov
bsf
pushf
add
movsl
enter
mulb
and
cld
xchg
add
mov
push
add
cmp
or
jp
out
lret
mov
dec
add
stos
jo
mov
fwait
jle
nop
pop
pop
push
fistl
cmp
lahf
add
mov
mov
push
cmp
dec
movsbl
inc
loope
cmp
and
call
sub
out
mov
mov
decb
data16
fisubs
or
and
adc
sbb
std
mov
loopne
jae
xchg
mov
ds
pop
adc
sub
nop
movsb
incb
inc
xchg
lods
dec
or
lcall
add
subb
push
sub
inc
inc
aas
sub
movsl
insb
cmp
fdivr
jbe
add
call
or
mov
sub
ja
add
enter
mov
jno
pop
push
sub
or
clc
imul
add
data16
shlb
adc
pop
adc
inc
jnp
add
push
sqrtps
add
pop
mov
push
or
xor
shrb
int3
inc
or
push
xor
mov
mov
sub
cmp
or
add
cmp
add
pushf
xchg
repnz
lds
add
jns
movsl
push
sub
adc
adc
fdivs
testb
fdivrs
out
push
mov
sbb
in
pushf
add
dec
pop
divb
dec
insb
mov
mov
jg
or
loop
nop
xchg
add
sti
cmp
arpl
enter
mov
pop
aas
fmull
or
loope
fsubrs
nop
into
add
pop
sub
shr
cld
add
push
cmpsb
sub
push
mov
test
out
xor
sbb
and
lea
repnz
rol
cmp
xchg
ds
pusha
adc
push
aaa
in
cmp
or
sbb
push
add
push
or
pop
pop
push
fisubrl
add
dec
fisubs
dec
aaa
insb
pop
add
pop
sub
and
xor
pop
in
sub
out
and
xchg
xor
popf
xchg
fadd
xor
cwtl
xchg
add
push
cli
mov
clc
shr
cltd
cmp
mov
pop
lret
popf
adc
in
add
out
ficompl
test
aam
cmc
shlb
mov
aad
jo
add
cmp
dec
loopne
sbb
lds
xchg
shl
es
dec
or
push
jbe
int
dec
or
dec
jp
pop
addb
pop
cltd
sbb
icebp
mov
scas
jae
or
cmp
stos
ljmp
xorb
cmp
dec
pandn
movsl
pop
or
mov
and
xchg
adc
push
adc
loopne
cmp
mov
loopne
cs
cli
push
pop
xor
add
mov
hlt
xchg
pushf
jmp
mov
dec
jge
add
ds
sbb
jge
rolb
add
jp
subb
js
jbe
fwait
jmp
sbb
ja
or
addb
popf
fwait
xlat
imul
mov
push
rorb
gs
cmp
sub
stc
pop
mov
add
je
xchg
incl
les
popa
mov
add
mov
pop
cmp
out
stos
test
mov
adc
cmp
and
dec
mov
mov
repz
dec
mov
test
shll
pop
jbe
jo
jb
in
rolb
or
pop
in
jg
aad
add
out
int
ljmp
mov
mov
xor
push
hlt
cmp
sub
or
add
mov
add
addb
cmpb
add
aas
std
sub
cltd
mov
sbb
and
jne
add
sbbl
mov
hlt
ds
push
cwtl
xchg
or
test
push
mov
push
push
insb
push
in
adc
fadd
xchg
je
shr
inc
loopne
xor
notl
ret
fdivrl
lods
cld
sub
push
enter
sbb
push
mov
jge
ret
js
add
xchg
es
int3
testb
add
stc
add
push
inc
cmp
xor
sbb
test
pop
dec
add
ds
jo
mov
cwtl
xor
add
push
or
stos
sbb
loopne
icebp
inc
mov
pusha
sub
mov
push
popa
outsl
sbb
roll
jne,pt
or
les
add
and
jl
cmp
jmp
jg
sub
push
into
aad
cwtl
insl
xor
add
xchg
jae
sub
imul
sub
jmp
push
mov
inc
add
loop
mov
hlt
push
xchg
push
and
imul
mov
and
enter
adc
xor
mov
jecxz
mov
sbb
mov
shll
add
add
lahf
in
xchg
add
cmpsb
jo
push
test
add
jl
lret
sbb
jg
es
cmc
in
xor
add
stc
andb
dec
icebp
add
sub
add
sbb
cmp
dec
scas
dec
ret
cmp
cmp
mov
xor
push
arpl
sbb
in
inc
inc
add
cltd
sub
imul
mov
in
cmp
add
aas
sub
lret
in
insl
push
loope
jge
psrld
out
sub
add
xlat
ret
fdivl
add
imul
nop
sarb
mov
daa
lcall
lahf
inc
add
jno
lret
sbbl
ret
xor
add
lcall
ljmp
sub
push
test
mov
pop
xor
aaa
pop
add
or
xorb
je
push
je
pop
jno
dec
popa
mov
enter
adcl
xchg
add
push
jne
inc
mov
mov
fcomi
fistps
sti
mov
cmc
push
jmp
daa
xor
cwtl
inc
adc
loop
push
js
pushl
pusha
add
lods
cli
repnz
mov
xor
add
popf
add
mov
or
and
mov
add
hlt
adc
and
and
push
rolb
or
test
sbb
inc
adcl
push
test
add
repnz
inc
jno
imul
add
ret
mov
call
sub
test
push
cmp
inc
and
lds
shrl
mov
cmp
mov
test
shrb
add
mov
ja
add
xchg
jp
int
add
rclb
add
add
jb
inc
add
xor
push
stos
mov
mov
addl
rorb
lock
test
pushf
shlb
dec
xchg
incb
out
cwtl
jae
pop
aam
jecxz
lret
popa
cmp
insb
pop
lgs
ret
fwait
mov
cmpsb
push
popa
pop
out
or
rclb
imul
ret
test
les
sub
ljmp
aaa
test
add
and
add
jbe
or
jge
xchg
add
jnp
imul
test
shlb
addb
pop
daa
int3
push
mov
xor
arpl
out
ljmp
mov
cmp
push
lret
jp
jmp
enter
xor
ret
pusha
mov
ds
je
and
rcll
fadds
mov
ret
mov
mov
notl
push
jle
call
or
inc
sbb
testb
jns
inc
adc
adc
popf
xor
idiv
dec
mov
dec
mov
lcall
icebp
xchg
jns
mov
pusha
xlat
js
jle
pop
xchg
cld
iret
xor
das
lock
inc
fdivl
pop
cmp
out
sbb
and
pop
test
sbb
xor
shlb
addr16
add
loop
sbb
bound
shrl
inc
scas
andb
mov
adcl
ljmp
xor
sbb
hlt
or
jb
shlb
out
push
xor
push
mov
and
add
stos
pop
adc
inc
mov
ss
psubsb
push
jmp
adc
loopne
pop
addb
into
jo
xchg
out
loop
push
xchg
int3
das
xor
test
jp
pop
push
stc
leave
shr
push
repz
mull
or
mov
in
and
lret
hlt
pop
cmp
or
cltd
mov
mov
inc
add
leave
shr
xor
adc
into
or
xchg
bound
pop
orb
movhps
pop
mov
xor
pop
xchg
fisttps
ljmp
mov
inc
adc
jg
jns
jo
add
fidivl
sub
mov
jmp
insb
sbb
jl
adc
je
outsb
enter
push
fwait
inc
enter
mov
sub
andb
aas
lock
in
adc
sub
mov
xor
xor
jle
fadds
xor
inc
sarb
add
mov
iret
dec
add
outsl
jbe
inc
mov
imul
sbb
pusha
lock
mov
xor
inc
jl
pop
testl
add
roll
cmp
nop
lods
fsubrl
and
loope
xchg
push
pop
cltd
pusha
inc
aas
adc
ja
cmp
fisttpl
out
xchg
sub
push
mov
daa
or
cwtl
xchg
rclb
je
and
or
adc
lcall
sub
xchg
xchg
jmp
inc
add
mov
bound
lret
mov
in
dec
push
mov
mov
cld
addr16
rcrl
pop
repnz
faddl
add
dec
add
inc
cmpsl
mov
insb
xor
or
popa
dec
loop
loopne
mov
jno
push
cli
fs
adc
cld
and
test
add
add
movsl
xlat
loopne
ss
jl
cmp
shr
lods
sub
pop
jp
add
mov
jl
popf
and
push
aad
lock
mov
adc
or
jnp
add
mov
mov
cmp
insl
hlt
sbb
fadds
xor
rclb
mov
add
adc
add
push
or
repnz
imul
subb
or
add
jecxz
repz
push
movl
sub
jae
int
push
testl
data16
rcl
loop
bound
jecxz
dec
test
xor
or
das
out
addl
mov
xchg
in
into
call
adc
fmuls
xlat
test
and
les
fwait
dec
xlat
cwtl
pop
pop
dec
lock
mov
jmp
lcall
add
daa
mov
cmp
add
les
lock
stc
mov
xchg
xchg
shrb
ds
fldenv
cld
sbb
mov
sbb
dec
xchg
mov
pop
js
rorl
arpl
scas
adc
lods
mov
add
rol
mov
push
sub
add
push
leave
ss
ret
in
add
add
mov
repnz
sub
cs
lock
add
jle
aaa
sti
mov
add
stc
lods
pusha
add
std
dec
int3
pop
push
fbld
data16
insb
pushf
ret
xor
insb
outsl
add
mov
daa
lret
sbb
adc
add
or
xchg
mov
add
pop
mov
mov
mov
les
sub
outsl
or
fdivs
add
push
paddw
or
mov
add
mov
mov
add
adc
add
fimull
ret
mov
pop
je
bound
aas
addl
mov
mov
pop
les
pusha
pop
add
mov
add
in
clc
cltd
jae
adc
add
rcll
loope
add
adc
mov
sbb
iret
mov
dec
mov
add
addb
shrl
cs
popa
or
clc
pop
fildl
xor
imulb
jp
add
cli
jbe
incb
xor
popa
rorl
pop
repz
add
mov
push
jae
mov
pop
ss
sbb
seta
sbb
movsl
inc
out
xor
sti
adc
add
loopne
testb
das
rorb
in
popf
lods
add
leave
mov
and
pop
inc
je
pop
sbb
ds
mov
in
xchg
call
cmp
jno
sub
add
scas
pop
or
nop
repz
repnz
jne
add
cmp
adc
sub
or
mov
push
cmp
lds
out
rcrb
lock
add
jne
jmp
call
xorb
cmp
mov
out
sub
in
inc
adc
xchg
xadd
add
dec
lcall
pop
sub
mov
lock
inc
or
xchg
add
ss
xchg
out
add
cmp
in
cmp
pop
mov
sub
inc
add
adc
mov
in
insl
test
xor
add
pop
mov
pushf
add
mov
jge
mov
pminsw
sbb
mov
jno
jb
inc
jns
xchg
pop
cmp
mov
out
dec
aaa
push
shrb
push
jo
add
in
adc
and
gs
xor
xchg
out
imull
sbb
sub
mov
fists
push
push
pusha
and
pop
adcb
in
orl
ljmp
rolb
popf
push
pop
cmpsb
sub
fdivs
adc
outsl
test
js
in
xchg
cmpsb
add
and
ds
add
pop
daa
test
sbb
divb
loop
xchg
jecxz
push
add
sub
xor
lds
push
shl
mov
add
or
repz
fwait
jo
inc
inc
das
addb
inc
pop
movsb
cmp
hlt
std
inc
js
jp
sbb
dec
aas
shrb
and
push
push
adc
rolb
mov
lret
xor
pop
mov
cmp
shlb
mov
je
pop
add
out
push
sub
lcall
pop
dec
outsl
mov
shrb
add
insb
out
add
in
mov
push
mov
adc
add
out
and
mov
cmp
ret
cmc
jl
subb
sub
neg
add
fsubr
das
loopne
shlb
jno
or
xor
movsl
mov
add
xchg
hlt
je
je
add
adc
je
mov
repnz
push
add
neg
cltd
add
fwait
shr
mov
push
push
push
lcall
js
push
cmp
ja
add
fnstenv
pop
cmp
xor
sub
and
stos
inc
sbb
or
in
out
jg
mov
dec
cwtl
testb
mov
cmp
arpl
mov
add
push
inc
addr16
sarb
loopne
test
add
mov
in
add
mov
xchg
lock
push
xchg
cmc
add
clc
rcl
push
int
add
jbe
insb
inc
je
ljmp
sbb
int
movl
mov
std
sub
pop
jne
mov
add
dec
mov
xor
inc
or
sbb
dec
xor
int3
lods
jp
and
dec
dec
add
test
xchg
leave
fsubl
add
dec
fldenv
sarb
aam
jns
push
mov
insl
or
cmp
pop
call
add
sub
push
push
add
cmp
push
aam
loope
out
in
cmp
data16
pop
cmp
inc
insl
mov
test
cs
xor
ds
add
sub
xchg
std
imul
cmp
bound
jne
or
call
ds
or
cmp
dec
roll
xor
sbb
mov
daa
std
mov
pop
mov
test
xor
xchg
scas
js
mov
std
div
add
sub
lds
mov
push
es
icebp
jns
jecxz
adc
fdivl
adc
dec
clc
addl
xor
ds
stos
push
push
add
mov
stc
inc
call
shr
push
jge
jae
cmp
cli
mov
loopne
popf
xchg
pop
inc
add
xchg
pusha
test
push
add
mov
mov
xchg
inc
jle
roll
test
sbb
aam
cmp
fiaddl
fcoms
aas
iret
mov
sbb
mov
mov
inc
sbb
sti
nop
sub
fcmovnbe
jge
or
ret
imul
xchg
clc
xchg
movsb
dec
nop
pusha
add
test
idivl
mov
cmp
sahf
fists
dec
add
add
rclb
sbb
in
mov
pop
stos
add
gs
or
or
sbb
xor
ret
cmp
add
outsb
mov
je
notb
dec
lock
adc
int3
cmp
adc
jmp
popf
and
add
loope
fidivs
dec
fucomip
mov
cmp
cltd
adc
addr16
add
inc
test
pop
xchg
mov
addr16
dec
fs
pop
sub
cmp
inc
test
mov
sbb
pop
cwtl
cmp
sbb
jmp
adcb
add
add
add
lret
test
scas
flds
pop
mov
jno
addb
add
sbb
jb
dec
push
xor
pop
add
cmc
enter
add
xor
push
adc
xor
mov
push
out
movsb
xorl
popf
repz
stos
add
xchg
das
adc
xchg
adc
add
xchg
sbb
xchg
test
ja
add
movsb
push
imul
cltd
cwtl
pop
add
dec
call
lock
rcr
into
mov
sbb
add
cmp
xor
repz
add
adc
into
test
add
je
jg
or
cmpsl
xchg
cmpl
push
xor
mov
and
dec
notb
add
cmove
dec
xor
pop
in
and
lret
sub
push
xor
dec
lcall
shrb
dec
adcb
add
jb
push
ljmp
repnz
inc
cld
jmp
into
add
push
popf
das
pusha
addr16
fnsave
cmp
sub
mov
call
frstors
mov
add
push
cmpsl
and
cmpsb
xchg
jb
sub
pop
mov
das
rcll
xchg
push
out
add
xor
adc
gs
call
in
test
fisubl
or
movsl
mov
in
outsb
cmp
jb
sbb
sti
sub
pop
sbb
fbstp
mov
or
loope
mov
push
add
pop
push
jecxz
out
mov
jnp
pop
insl
repnz
push
in
pushw
pop
pop
cwtl
pusha
add
dec
fs
xor
add
sbb
ljmp
mov
add
lret
or
add
add
loope
fbstp
out
add
loop
dec
inc
test
mov
xorb
and
ljmp
add
xor
add
out
push
xor
iret
jbe
dec
ss
adcb
adc
sub
repnz
js
inc
pop
dec
jo
add
fldcw
imul
xchg
icebp
xchg
add
and
push
hlt
and
dec
out
das
aad
jg
or
mov
sbb
fstl
scas
xchg
lahf
pop
dec
mov
or
test
sbb
sbb
mov
gs
ret
std
js
xchg
push
pop
outsl
mov
dec
add
mov
dec
inc
add
mov
lds
adc
loope
shlb
aam
lea
push
push
add
push
cmpsb
dec
dec
shlb
repz
and
xor
stc
add
sbb
add
lock
in
push
add
xchg
ljmp
lea
jae
jb
xorb
push
push
mov
mov
jge
ljmp
popa
jbe
inc
dec
push
sub
divl
loopne
add
ds
xor
xor
push
adc
jns
les
mov
add
dec
xor
lock
add
scas
mov
xchg
js
jnp
add
inc
push
adcl
add
push
xchg
add
dec
push
sub
lret
jmp
xchg
dec
ja
xor
loope
add
pop
enter
add
jmp
sahf
pushf
cmpsl
popf
imul
add
fldenv
add
js
roll
stc
add
add
jae
push
add
sbb
fisubs
rolb
inc
int3
mov
or
nop
in
fbld
add
daa
inc
insb
add
in
add
cmpsb
push
pop
bound
outsb
add
push
xchg
lahf
adc
sbb
fldcw
aaa
add
popa
test
fcoms
andl
mov
mov
mov
enter
loope
add
imul
lahf
and
rolb
mov
popa
pop
mov
mov
negl
xor
xchg
xchg
es
dec
add
fdivrs
inc
mov
aam
andb
enter
mov
sbb
imul
data16
mov
pop
inc
add
inc
stos
into
je
sub
adc
mull
inc
loopne
out
shlb
or
cld
add
inc
mov
mov
and
bound
subl
and
cltd
aam
scas
adc
cmpsb
mov
sbb
mov
jl
pop
add
fsubrs
inc
add
adc
xor
xchg
push
iret
movsb
fmull
inc
movsb
mov
xor
sub
out
sbb
pop
popf
push
cli
cmp
add
imul
inc
or
pop
add
out
pop
xor
scas
testl
inc
popf
int
aaa
icebp
jnp
cwtl
shl
sbb
fimull
aas
mov
dec
leave
add
out
push
dec
fimuls
jp
sarl
pushf
fisttpll
mov
pop
push
cld
shl
pop
les
mov
push
add
xchg
mov
out
cmp
and
fildl
pop
arpl
push
ja
jp
ja
add
aaa
pop
dec
inc
fistl
pop
sub
inc
xchg
in
fmull
fadds
sbb
subb
add
mov
and
aas
dec
filds
inc
imull
std
in
loop
enter
add
mov
pop
out
hlt
fisubs
insl
js
and
adcb
sbb
add
pop
popa
add
inc
jne
add
out
arpl
mov
ret
adc
and
add
lcall
loope
cmp
pop
inc
idiv
mov
pop
mov
mov
add
in
add
pop
add
or
pop
in
das
add
xor
fstpt
inc
fs
call
inc
dec
out
jnp
in
mov
push
in
add
repnz
andps
push
loop
test
xor
add
lods
jge
jne
xorb
jo
fs
stos
out
aaa
rclb
xchg
out
pop
cmp
cmp
cmp
das
cmp
or
xor
add
pop
fcomps
outsb
jl
arpl
mov
flds
add
adc
xchg
sbb
hlt
in
add
jmp
adc
jae
fbstp
ljmp
pop
icebp
add
out
xchg
test
mov
xchg
imul
add
jg
sbb
and
pop
mov
xor
out
add
push
movsb
push
es
imul
call
add
out
shlb
add
jbe
adcb
jnp
sub
stos
add
xlat
out
mov
movl
add
enter
push
fidivrs
sub
push
enter
adc
cmc
out
test
or
push
loopne
jp
add
adc
add
sbb
cld
fwait
mov
popf
test
dec
xor
hlt
ljmp
sub
push
add
and
inc
punpckhbw
or
mov
adc
lahf
incb
push
dec
add
fwait
loopne
outsl
add
sub
lcall
inc
notb
add
add
loope
dec
dec
mov
dec
fs
pop
popa
enter
adc
test
sbb
jne
add
push
lret
stos
pop
add
test
cmc
hlt
add
enter
sub
add
test
cltd
aad
sti
push
cmp
je
pop
repnz
xor
shl
je
add
push
lock
imul
dec
int
out
fiadds
or
dec
adc
xor
mov
lcall
pusha
fbstp
xchg
adc
in
add
xor
int3
jge
outsl
sbb
mov
rclb
add
or
stos
enter
mov
scas
loope
fildll
inc
aaa
push
sti
pop
mov
mov
xor
and
push
jo
push
inc
jae,pt
jecxz
loop
outsb
les
mov
mov
and
repz
add
mov
and
add
jo
mov
nop
outsl
cmp
rcrl
enter
add
xchg
inc
wbinvd
leave
sbb
lock
inc
out
or
xor
fistps
add
adc
fstpl
cmp
push
sub
dec
aad
out
push
je
and
jb
push
add
fs
mov
xor
push
out
or
inc
adc
sbb
mov
rclb
adc
cwtl
jg
mov
jae
roll
mov
adc
inc
leave
jmp
in
jo
add
or
fdivrl
hlt
dec
gs
loop
or
xorb
into
and
sbb
scas
hlt
add
mov
mov
push
push
add
arpl
add
xchg
ja
fucom
inc
loopne
daa
mov
cmp
dec
notl
call
rolb
popf
aam
insl
xor
popl
jg
inc
add
inc
fs
xchg
lcall
push
mov
add
leave
mov
push
pop
addr16
ljmp
aam
sahf
add
push
mov
loopne
mov
xor
push
add
mov
add
loope
jg
mov
pop
mov
add
mov
clc
cmp
fsubrl
adc
mov
mov
rolb
push
jl
add
jns
push
mov
cwtl
inc
cmpsl
push
or
ljmp
mov
outsl
push
aam
lods
pop
jg
add
mov
repnz
xchg
sbb
lods
add
enter
subb
outsb
add
ds
add
mull
add
fs
inc
add
push
add
clc
pushf
add
insl
cmc
xchg
es
xor
add
cmp
dec
inc
clc
out
cltd
add
dec
test
test
in
xchg
and
add
sub
mov
xor
mov
mov
jp
add
nop
rcrb
sbbb
dec
add
ja
sbb
add
xor
in
hlt
add
scas
mul
add
mov
mov
jecxz
inc
add
dec
sub
xor
repz
imul
mov
cmp
jmp
push
push
sbb
cmp
popf
push
xchg
repnz
mov
inc
mov
add
add
mov
sub
mov
pushf
sahf
sub
dec
jg
sub
cmp
pop
fwait
addb
mov
push
popa
and
repnz
push
inc
call
sub
in
lar
in
dec
jo
push
sahf
in
or
and
add
fnstcw
push
adc
xchg
movsb
mov
fmul
imul
clc
adc
fwait
push
test
in
pop
lods
add
inc
cmp
adc
add
push
or
push
add
xor
xor
add
jp
scas
inc
mov
insl
mov
ss
dec
xor
inc
fnstcw
data16
mov
mov
mov
pop
es
aad
shlb
inc
mov
add
cmc
jbe
jo
add
stos
dec
fsubs
pusha
ret
test
in
push
nop
test
cmp
sub
fmull
lock
or
adc
add
or
or
or
mov
xchg
dec
xchg
and
aas
lock
subb
mov
ljmp
mov
fidivl
sbb
inc
or
loop
cs
push
cmpl
out
jecxz
sbb
push
push
push
jg
cmp
dec
add
bswap
xor
movsl
lock
add
idivl
pop
ds
or
and
mov
fidivrl
add
xor
in
pop
lcall
inc
rcll
shrb
hlt
mov
mov
add
and
fwait
or
outsl
mov
nop
xchg
or
popa
cltd
into
inc
scas
mov
mov
adc
push
fildl
aas
mov
stos
pop
testl
cmp
push
add
dec
jbe
aam
push
js
add
pop
sbb
nop
ss
add
cmp
mov
dec
jecxz
mov
cmp
inc
jnp
mov
push
fdiv
xlat
sub
mov
out
loopne
mov
jmp
jo
sarb
mov
aas
nop
nop
add
or
cmpsb
mov
or
mov
push
cmp
cmp
mov
lock
fldl
pop
xchg
add
inc
mov
add
loope
rolb
stos
mov
data16
pop
orl
pop
xor
lea
test
loope
cmp
leave
mov
inc
sub
mov
cmp
add
popa
dec
mov
add
pop
xor
repnz
clc
mov
lret
dec
jns
and
mov
ljmp
add
or
sbb
add
pop
shrb
test
ljmp
lret
adc
clc
div
je
add
xor
pushf
push
sub
and
mov
leave
addr16
pop
fidivs
or
push
adc
push
sub
cs
add
adcb
aad
inc
pushf
push
sub
sub
and
test
enter
add
jecxz
pop
and
std
cmp
mov
dec
pusha
add
gs
or
imul
push
cli
jbe
add
sub
sarl
cwtl
daa
xchg
push
inc
pusha
add
ljmp
dec
cmp
add
pop
dec
or
hlt
mov
aas
xor
pop
pop
pop
mov
js
sbb
loopne
out
sub
add
or
and
pop
in
lds
add
push
xchg
pop
arpl
pop
adc
adc
sbb
xchg
ret
add
pusha
pop
ret
in
push
mov
lods
mov
lret
sti
mov
add
cs
iret
in
test
pop
testb
mov
add
lret
push
in
gs
jbe
jl
insl
dec
rcrb
cmc
fs
out
or
jecxz
xchg
aam
jmp
enter
adc
out
xor
jb
xor
push
mov
cmp
xor
call
jo
stos
repz
add
popa
shlb
add
scas
jb
add
xor
add
mov
xor
cmpsl
notl
pop
and
xchg
adc
sub
add
or
orb
sti
gs
jg
loopne
int3
cltd
add
mov
add
adc
xor
dec
mov
lret
add
sbb
dec
xor
jge
cmp
lods
mov
push
clc
out
xchg
in
and
cmp
jns
fildl
adcl
shll
add
jnp
sub
es
addb
and
add
movsl
pusha
jo
inc
add
loopne
mov
xchg
dec
mov
sub
push
loopne
movsl
inc
imul
jbe
scas
mov
pextrw
jle
cld
dec
inc
pushl
lods
ja
nop
clc
add
ror
add
inc
dec
lds
mov
push
outsl
hlt
mov
sbb
add
sub
mov
bound
or
addr16
sbbb
jno
ja
push
das
push
aaa
add
ljmp
mov
xchg
inc
outsl
push
loope
nop
pop
add
int
pop
jno
es
add
loop
adcb
sbb
push
adc
xchg
psrlw
addr16
call
pop
adc
out
cmpsb
push
cmpsl
pushf
test
mov
push
dec
addb
mov
jnp
dec
pop
in
mov
cwtl
data16
bound
cmp
inc
mov
out
and
mov
adc
adc
adc
mov
sarb
xor
jg
add
mov
lods
div
add
pop
repnz
adc
addr16
scas
outsb
inc
adc
rcl
cld
cmp
sub
std
sub
inc
xor
fimull
pop
loopne
or
shlb
pop
pushf
inc
xchg
or
add
jb,pn
ret
rolb
dec
mov
pop
cmp
loop
mov
out
hlt
jmp
adcb
test
add
fnstsw
add
sub
movsb
popf
sets
add
jo
arpl
add
adc
je
lret
mov
add
push
insb
cmp
lock
lods
dec
les
push
sub
outsb
add
mov
leave
mov
dec
push
xor
add
xor
faddl
into
sub
and
inc
jp
hlt
aad
push
test
mov
push
pop
and
lea
add
ss
out
popf
and
rclb
push
add
jo
fwait
push
cmp
cld
add
les
nop
sbb
sbb
sbb
inc
mov
lret
add
out
xchg
lret
cmp
add
cli
mov
icebp
and
les
pushw
jecxz
pop
jl
mov
mov
inc
mov
pop
test
jmp
dec
mov
or
adc
add
inc
cmc
daa
sub
cmp
loopne
mov
scas
dec
mov
std
aas
xor
mov
fdivl
cmp
add
fs
addr16
dec
or
sbb
xchg
pop
mov
xchg
mov
jno
mov
jae
sbb
sbb
add
jno
add
fadds
enter
hlt
add
add
pop
mov
or
pop
out
add
hlt
lret
cmc
sbb
mov
pushf
mov
andb
cwtl
repz
mov
call
dec
pusha
or
test
cmp
insb
sbbb
mov
cmp
js
dec
xor
hlt
shrb
add
out
out
aaa
cmpsb
jnp
add
dec
movsl
movl
addb
sbb
jle
data16
enter
shll
add
mov
add
ljmp
mov
pop
pop
das
push
dec
pop
add
out
lods
jge
inc
and
add
jb
or
jl
call
jmp
pop
add
bound
movsl
loop
in
xchg
add
and
sbb
mov
sbb
ret
lahf
jne
jnp
pop
mov
xor
jns
mov
inc
sub
ret
mov
xchg
mov
mov
push
icebp
inc
lock
xchg
add
aaa
out
out
add
pop
adc
shr
dec
xchg
out
push
in
jge
dec
dec
adc
mov
pop
lods
sub
rol
divl
ss
mov
xor
adc
mov
repnz
hlt
fdivl
pop
fmull
mov
lea
add
inc
mov
add
repnz
adc
pushf
cmpb
cld
add
or
xchg
scas
and
cmp
jne
sbbl
add
pop
adc
add
sbb
fisttpl
sarb
mov
and
lods
add
mov
insl
cmp
mov
mov
jp
xchg
rorb
jnp
roll
jne
mov
mov
hlt
clc
pop
pop
dec
push
cld
pop
mov
imul
int3
imul
sub
adc
mov
jno
add
dec
sub
cmp
add
repz
dec
add
ret
fimull
pop
imul
lock
es
cmp
mov
mov
push
nop
data16
out
std
adcb
mov
and
leave
add
add
decb
add
int3
inc
mov
inc
lcall
sbb
or
test
btcl
pop
sarl
aam
jmp
inc
or
mov
imul
lds
jmp
mov
add
add
mov
pop
xchg
cli
out
add
sub
sub
add
ja
push
push
lock
push
lret
int3
mov
or
push
in
ret
subb
filds
add
lds
aaa
bound
mov
push
addr16
in
xchg
fwait
xrelease
push
fcmovnu
das
push
movsb
xchg
add
dec
jae
push
sbb
and
andb
roll
mov
xchg
stc
pop
in
sub
jns
les
es
sbb
dec
shrl
add
movsl
in
call
aam
inc
pop
sub
movsb
pop
shlb
aaa
lea
sub
loop
hlt
jg
jne
add
mov
mov
add
stos
jmp
add
sub
or
out
adc
data16
push
mov
mov
stos
iret
and
push
sub
mov
loope
sub
push
and
rcl
cmp
and
inc
mov
in
jle
mov
jl
les
mov
jp
and
orb
and
push
shrb
clc
scas
xchg
iret
add
imul
add
int3
int
cli
adc
imul
clc
push
repz
inc
pop
jno
and
add
xor
jmp
add
loopne
jge
mov
add
add
dec
and
pop
arpl
mov
ljmp
cld
add
cmp
dec
icebp
pusha
adcb
xor
push
and
add
jo
add
or
and
mov
enter
sahf
push
push
jp
push
sbb
push
mov
jne
fisubrs
mov
pop
lock
jle
mov
sub
or
cmpsb
loope
outsl
mov
fldcw
pop
mov
jno
add
ret
add
add
xor
scas
mov
sub
je
pop
repnz
call
add
cmp
std
fxch
add
push
lds
push
mov
sbb
sub
mov
stc
xchg
add
adc
roll
lahf
and
jmp
adc
cmp
mov
aaa
pop
je
jle
add
or
add
xor
stos
js
cmp
bound
cmp
or
mov
push
aas
mulb
cmpb
loope
xchg
sbb
mov
xor
mov
sub
mov
and
pop
fstps
add
push
ds
xchg
jle
mov
mov
and
ret
add
aam
ret
pop
or
in
test
fsts
pop
add
push
pop
xor
ret
clc
rorl
es
cmp
arpl
mov
cmp
nop
mov
addr16
dec
test
jge
in
push
and
mov
sahf
clc
sbb
mov
dec
jl
hlt
and
jb
mov
add
add
bound
aas
dec
mov
test
mov
movsb
insb
dec
add
inc
insl
push
mov
cmp
pushf
adc
and
jno
inc
cwtl
push
lock
mov
pop
mov
gs
mov
mov
push
xor
push
sub
pop
loopne
decl
test
addr16
jge
insl
add
pop
jle
mov
mov
jp
in
push
or
js
rolb
divb
mov
popf
push
fisttps
add
fwait
and
add
stos
dec
cmpsb
insb
pop
flds
iret
fisttpl
pusha
icebp
fwait
add
lock
sub
imulb
adc
out
pusha
pop
rol
adc
orl
pop
into
aaa
filds
push
add
ljmp
xor
aaa
add
cli
xor
jno
mov
int3
sub
testb
shll
add
add
add
mov
adc
in
pop
pop
adc
mul
dec
xor
add
inc
dec
pextrw
sub
scas
outsl
test
lods
pop
mov
ja
sti
sbb
outsl
pop
clc
pop
and
push
mov
and
mov
add
sbb
xchg
add
cltd
cmp
add
jno
in
pushf
and
popa
push
and
mov
xchg
cmp
sub
scas
cmp
ja
out
push
and
adc
xchg
mov
jns
lds
nop
mov
xchg
jg
shlb
add
ret
cwtl
mov
adc
pop
fnstsw
mov
push
mov
mov
sub
jno
stos
mov
dec
xlat
add
pop
repz
add
in
jmp
fdivrs
xchg
in
jb
and
lods
pop
es
cmp
mov
add
call
mov
dec
fs
pop
cli
ss
sbb
sub
fsubs
nop
gs
add
mov
stos
sar
ret
dec
jno
fs
xchg
in
mov
sbb
jo
xchg
inc
popf
add
add
xlat
out
add
or
out
adc
mov
stos
into
and
xlat
out
cmp
repnz
jb
dec
inc
mov
loop
ret
inc
stos
dec
pop
sub
mov
arpl
mov
pop
rolb
das
fwait
add
jp
mov
pop
arpl
pop
filds
jne
dec
mov
ficompl
scas
push
adc
jb
dec
add
xor
add
mov
shr
mov
jmp
cwtl
mov
cmp
lds
inc
test
aas
aad
add
rolb
sbb
add
cld
loope
faddl
xchg
fldl
addr16
pop
lea
sbb
fdivl
shrb
test
xor
dec
add
mov
or
xchg
inc
jne
pop
push
add
std
xchg
out
test
add
sub
add
ret
cwtl
mov
movsb
cli
push
pop
prefetch
push
outsl
daa
add
sub
cmc
jbe
inc
add
mov
scas
or
mov
bound
loopne
in
jbe
fbld
pop
xchg
sub
add
inc
push
frstor
mov
push
lods
mov
dec
andb
cmp
mov
add
push
xor
xlat
add
icebp
mov
jp
fsubs
or
push
lahf
test
jle
ror
pop
imul
in
cmp
adc
jae
mov
xchg
cltd
add
out
movsb
mov
jo
pop
jns
addl
aam
mov
mov
cli
push
clc
sbb
into
mov
mov
dec
xchg
mov
mov
out
sbb
cld
push
add
jecxz
daa
ficoml
add
int
in
icebp
cmp
adc
adc
cli
mov
js
popf
addb
outsb
add
xor
loopne
fnsave
dec
repz
mov
out
stos
add
cmpsb
mov
sub
adc
pop
adc
in
loopne
lods
fstpl
loope
dec
pop
sbb
cmp
jl
jl
add
test
subb
daa
add
mov
test
jmp
add
data16
push
lcall
mov
lods
nop
aas
jle
xor
push
add
and
mov
sbb
lock
iret
test
and
hlt
dec
sti
loopne
or
jo
jmp
inc
movsb
loope
addr16
add
or
and
sarl
ja
mov
xchg
or
test
lods
add
jae
push
sub
clc
sub
fiaddl
add
pop
out
pop
inc
shll
sti
lock
add
add
shlb
dec
cmp
test
inc
scas
repnz
mov
mov
pop
fldt
cmpb
dec
cld
mov
add
xor
add
in
stc
jmp
xchg
xchg
cwtl
pop
sub
sub
aaa
xor
or
inc
cwtl
nop
das
mov
push
stos
bound
getsec
rclb
xchg
jnp
outsb
mov
icebp
add
les
test
pop
stos
add
push
sbb
sub
xchg
stos
push
push
or
loopne
std
cmp
push
pushf
int3
cmp
nop
les
sti
mov
test
add
dec
xor
mov
pop
fwait
jne
pop
frstor
fs
loop
pop
aas
jecxz
lock
cmovae
inc
mov
and
lahf
ja
pop
mov
xor
sbbb
frndint
faddl
or
in
adc
insb
pusha
std
dec
add
lds
pop
sbb
sar
sqrtps
dec
jp
fidivrl
adc
sub
repnz
inc
sbb
lods
pop
dec
mov
xchg
inc
xchg
add
in
cmovne
repnz
push
daa
aas
jne
add
scas
mov
stc
add
push
cli
jecxz
pusha
repz
dec
mov
clc
scas
movsb
add
adc
out
stc
jge
adc
pop
mov
hlt
and
dec
popa
push
pop
push
xor
sub
add
dec
add
das
fdivl
xchg
rorb
lahf
xchg
je
cli
or
pop
push
mov
orb
dec
jle
test
mov
fcoms
push
jbe
fldl
addr16
add
inc
cmp
mov
push
pushf
addb
mov
add
pusha
or
test
jo
add
stos
add
out
inc
jne
jl
jl
bnd
inc
and
pop
sbb
adc
movsb
jae
pusha
stos
mov
call
lahf
lcall
pusha
xor
orl
jno
enter
inc
mulb
les
xor
insb
sldt
adc
leave
dec
popa
and
push
sbb
jge
cmp
mov
sbb
and
sbbb
clc
xorb
inc
xchg
roll
or
xor
cld
js
repnz
cmp
add
inc
xchg
movsb
shlb
lahf
icebp
xor
fstpl
lods
sub
cmp
push
test
cmpsl
fs
sbb
xor
pop
icebp
push
lcall
incb
mov
repz
cmc
dec
mov
mov
add
mov
in
das
ljmp
or
cmpsl
add
add
addr16
ja
repz
stos
mull
push
mov
mov
add
inc
dec
lret
add
out
inc
cmpsb
add
sbb
adc
hlt
pop
add
push
imul
sahf
aam
js
cmp
test
add
mov
addr16
loope
or
push
cmp
adc
mov
jle
add
frstor
inc
lock
and
push
stos
jns
aaa
mov
addl
popa
scas
xchg
adc
xchg
push
dec
push
mov
mov
lods
fldl2e
mov
adc
popa
stos
mov
pop
ds
mov
jns
or
inc
push
dec
aas
mov
add
out
push
shrb
fwait
arpl
add
inc
popf
je
insb
jb
cwtl
dec
add
hlt
xlat
xor
stos
push
inc
out
popa
push
xchg
test
lahf
loop
je
or
sbb
pop
add
add
mov
fldl
fsubs
inc
cmp
cltd
cmpl
mov
xchg
in
push
rclb
xchg
fadd
divl
sbb
jae
ljmp
divb
xchg
cwtl
dec
shll
xor
pop
push
xchg
addl
js
daa
jl
add
fldt
dec
jecxz
outsb
jbe
jle
pusha
in
push
call
and
mov
ja
push
inc
pop
shll
push
rcrl
adc
add
mov
inc
xor
cmp
dec
add
add
rolb
push
scas
dec
dec
pop
jl
leave
add
jnp
mov
jg
shlb
fildll
fsubs
push
push
adc
nop
inc
clc
popf
inc
pop
jo
push
pop
mov
std
sbb
je
push
sti
xor
add
add
and
pusha
int
add
movsl
jbe
iret
mov
rep
inc
sub
jae
xor
nop
sarb
xor
add
repnz
push
outsl
jno
mov
xchg
jg
pusha
lods
push
cmp
aad
and
stc
jo
shrl
push
mov
inc
or
out
addl
loopne
outsl
pop
xor
sub
adc
js
adc
jg
push
cmp
add
mov
jb
cmpsb
push
sbb
aad
shl
pop
rcrl
sbb
cmp
dec
mov
or
test
test
mov
addb
mov
add
push
sub
sbb
pop
and
jecxz
insl
lods
add
out
sbb
push
outsl
out
push
sub
inc
push
repnz
shl
out
loopne
adc
lcall
gs
out
add
mov
add
pop
dec
mov
imul
aaa
or
cmp
sbb
pusha
mov
clc
mov
mov
inc
fstpl
sti
add
ja
mov
add
xor
add
lds
sbb
jnp
push
xor
scas
inc
iret
test
popf
loope
dec
or
sbbb
jno
inc
jmp
pop
insl
sarb
shlb
nop
bound
and
fistps
cld
cmp
sub
pop
sbb
sbb
hlt
imul
mov
pop
push
xor
xor
lds
leave
fs
adc
loopne
add
lret
shll
pop
daa
leave
lret
or
mov
aas
push
stc
jns
cmp
mov
dec
jno
xchg
jae
adc
pusha
pop
adc
dec
xchg
add
xor
outsb
add
xorl
fimull
movsb
lahf
loopne
push
jb
sarb
xchg
rcrl
add
mov
loope
pop
or
add
scas
mov
and
mov
pop
inc
outsl
pop
imul
arpl
xor
ss
xchg
sub
dec
or
jb
mov
cmp
jge
mov
xor
and
adc
jae
subb
mov
mov
add
mov
icebp
je
sti
or
lods
sbb
rcrb
sub
sub
mov
pusha
sahf
pusha
and
add
shrb
xor
mov
inc
in
add
jne
and
mov
out
inc
rolb
mov
pop
in
mov
loope
xor
push
aaa
ret
xor
fcoms
mov
cmp
jl
push
std
xorb
je
cld
xor
movsb
xchg
xor
adc
add
imul
inc
gs
pop
pop
les
and
sbb
jb
xchg
aam
mov
sahf
cld
cmp
cmp
test
dec
enter
mov
out
or
cli
in
or
les
fmuls
jno
imul
xchg
lock
inc
fwait
addl
dec
shrb
jp
or
inc
mov
xor
ret
dec
sbb
mov
and
push
jge
shlb
add
adc
clc
mov
aad
mov
fsubr
jge
subb
add
mov
adc
cmp
pop
jle
xchg
push
popf
cmp
cmp
sbb
adc
xchg
push
cmp
loop
add
pop
inc
jbe
sahf
cs
jo
pop
inc
cmc
add
xor
test
and
jmp
mov
aam
push
xchg
add
out
pop
bound
dec
mov
test
xchg
out
xchg
rcll
push
pop
add
mov
loop
sbbb
movsl
mov
add
push
pop
rcrb
roll
pop
cmp
inc
xchg
popa
sbb
sbb
out
mov
sahf
gs
sbbb
pop
fwait
dec
jge
add
inc
or
xchg
add
sub
xchg
pop
cld
pop
adc
repz
add
mov
add
hlt
clc
add
cmpsl
mov
jp
add
sub
in
dec
sub
fwait
push
aas
test
sbb
lods
iret
push
push
xlat
or
add
mov
int
and
xchg
frstor
popa
add
testl
add
pusha
jmp
inc
mov
idivl
jl
pop
inc
push
roll
orb
sahf
add
daa
inc
xchg
xor
mov
test
sub
add
add
pop
shl
idivl
pop
and
add
jg
cmp
add
xchg
in
test
pop
movsl
xor
cmp
sbb
in
sub
ret
push
or
dec
repz
add
sub
cmp
add
andb
repz
jge
add
out
fsubl
cld
jo
ret
xor
xchg
add
test
xchg
xor
fdivrs
cmp
aaa
add
and
xlat
sbb
push
add
xchg
lock
add
imul
sbb
movsl
push
xchg
movsb
ljmp
mov
mov
xchg
sub
pop
push
jne
add
testb
sbbb
add
jo
inc
and
test
cmp
pop
lret
dec
pop
nop
jl
adc
xor
sbb
sub
js
sti
add
lcall
add
push
inc
mov
add
and
lods
loop
add
pop
movsb
pop
lock
dec
add
ret
mov
dec
lret
push
pop
loopne
jg
add
adc
rol
sub
cmc
add
sub
jl
pop
lcall
xor
pop
loop
nop
mov
add
pushf
xchg
adc
push
nop
loop
mov
mov
repz
out
add
sbb
mov
leave
and
inc
mov
fwait
shrl
or
cld
lds
sar
add
lret
jae
jmp
shlb
mov
in
lods
inc
test
imul
mov
es
add
xor
or
add
aas
mov
add
push
out
test
and
pusha
dec
mov
dec
data16
jo
ds
insb
add
ja
or
adc
das
outsl
je
mov
dec
iret
sub
mov
cmp
loopne
add
or
push
daa
add
cmp
mov
mov
mov
dec
dec
inc
jg
xchg
and
das
push
addl
sti
in
leave
clc
fmull
subps
aad
inc
sub
lock
hlt
jmp
push
cmp
mov
aas
adc
iret
arpl
and
loopne
gs
cwtl
push
sbb
std
fs
scas
add
dec
rclb
or
jbe
pop
xchg
xor
and
jmp
cld
nop
enter
mov
pushf
add
xchg
test
cltd
inc
xchg
loop
jg
mov
inc
lret
test
lcall
push
movsb
mov
add
or
push
imul
in
nop
inc
ja
jecxz
jne
push
add
insb
and
test
add
lret
fldenv
or
sbb
pop
aaa
and
lret
push
pop
sbb
sub
add
add
outsb
cmpsl
fldenv
mov
in
std
add
pop
js
ljmp
add
fdivs
sub
fcomip
pop
jge
cmp
adc
inc
push
pushf
nop
in
jle
adc
data16
mov
jo
std
push
jbe
mov
pop
add
push
loope
add
shl
mov
aam
lret
inc
pop
orb
mov
sbb
pop
pop
jo
jge
push
loop
mov
aas
dec
decl
add
inc
ret
jecxz
dec
or
pop
stc
pusha
mov
sbb
cmp
sub
cs
mov
sbb
in
sub
sub
jge
loopne
imul
and
fs
das
inc
and
sub
add
adc
pop
cmp
test
lea
add
into
loop
add
leave
push
repnz
xlat
cmc
add
dec
add
movsb
in
popl
mov
ja
jno
mov
push
pushf
mov
subb
fistpl
push
push
inc
into
lcall
ret
push
add
jp
and
push
iret
dec
add
outsl
bound
sbb
fbstp
ss
dec
xchg
xchg
jns
sbb
add
pop
call
loopne
test
xchg
add
dec
stos
ss
dec
dec
sbb
cmp
adc
mov
ret
mov
loop
cld
lret
push
xchg
in
pop
inc
add
jmp
nop
cmpsl
stc
movsl
and
dec
add
mov
adc
lret
aam
movsb
ja
add
push
lock
jge
xor
int3
add
imul
inc
mov
leave
mov
jno
add
pop
jg
scas
hlt
pop
mov
mov
std
and
adc
repz
pop
inc
cmpsb
xchg
mov
lcall
into
cmp
sbbb
or
cltd
int
sti
inc
fnsave
arpl
and
in
mov
cmp
mov
rcrb
stos
push
dec
test
jg
sbb
mov
rclb
and
xor
scas
xchg
out
pop
movsb
sub
negb
jp
add
out
push
xchg
aam
push
add
iret
mov
sbb
mov
ret
add
dec
sub
mov
cmp
jnp
test
dec
add
push
inc
xor
pushf
mov
mov
or
add
xor
mov
jb
dec
or
aam
shld
in
push
or
inc
dec
movsl
push
lret
inc
add
mov
or
mov
add
mov
adc
push
int3
add
mov
subl
adc
out
add
xchg
int
dec
out
int3
inc
adc
ret
fidivs
mov
lods
dec
xor
xor
xchg
pop
mov
or
adc
push
add
xchg
add
and
sub
add
shrb
rolb
jb
xchg
shl
add
lods
test
nop
add
inc
and
addl
or
in
gs
cmp
push
jl
push
xor
cmp
lods
cmpsb
dec
dec
add
add
test
push
enter
lret
rolb
int3
xor
repnz
lahf
add
scas
in
rolb
movsb
frstor
pop
sub
jb
sub
and
mov
test
pusha
or
adc
test
pop
popa
jp
sbb
pop
inc
dec
push
leave
xor
push
lock
lods
sahf
sbbb
xchg
insb
cmp
adc
sbb
add
test
push
or
or
cli
jmp
adc
jp
add
and
in
subb
in
sub
fimuls
je
xchg
add
or
xchg
out
les
add
push
hlt
ds
mov
shrb
pushf
and
push
or
push
mov
dec
rolb
xor
pop
clc
call
xor
push
dec
or
cmp
push
sbb
add
inc
cmpsb
cmp
xchg
pop
add
mov
es
repnz
mov
nop
rcrb
add
push
aad
sar
cmp
cmc
int3
add
pop
fildll
and
xchg
inc
loopne
cld
int3
add
xor
jecxz
inc
cmp
xchg
cmpsb
fs
mov
stc
mov
mov
pop
cmp
xor
rorb
push
in
adc
enter
stos
rclb
and
in
rorl
jbe
xlat
jo
add
push
and
pop
and
faddp
aad
leave
movsl
arpl
and
jg
add
setae
add
sbb
push
cmp
aas
arpl
sbb
rol
push
push
mov
jp
cmp
xchg
jno
pop
dec
aaa
jne
pusha
add
div
pop
or
js
jge
mov
stos
dec
xlat
scas
mov
ss
sarl
in
sub
dec
out
insb
add
push
or
xchg
jle,pn
in
cld
pop
loop
add
addl
jo
sbb
cs
loop
outsb
push
add
in
insb
rolb
cmp
repnz
js
dec
cmp
int3
and
push
sub
lahf
xchg
adc
mov
mov
inc
ljmp
cld
cmp
add
lea
add
popa
daa
xchg
pop
cmp
add
ret
jne
and
add
cmp
jg
rolb
pop
rcrl
fiadds
and
lods
jp
mov
pop
xchg
rolb
dec
inc
adc
les
xor
jmp
pop
arpl
fimull
sub
adc
jg
loop
mov
mov
lret
ljmp
pusha
and
cld
add
add
xor
add
mov
pop
out
ja
shl
test
hlt
inc
pop
add
inc
mov
test
add
and
aas
sbb
das
dec
pushf
jle
add
xlat
mov
pop
add
in
or
add
dec
out
pop
push
data16
aad
and
xchg
jmp
add
add
popa
cmp
mov
shll
and
fwait
push
sub
or
pop
movsb
andb
mov
nop
add
xchg
cmc
shll
sbb
lods
and
iret
jecxz
imul
jno
add
jb
xchg
shll
jo
jo
dec
gs
xor
xchg
push
dec
clc
sub
push
sbb
jb
and
sbb
pop
jl
pusha
idivl
add
aas
lahf
out
int
add
sbb
push
je
push
inc
push
scas
xor
ja
dec
sbb
mov
loop
in
rclb
cmp
cmp
pop
inc
popf
xchg
or
push
and
je
push
jge
sub
repz
push
sbb
jne
popf
or
imul
or
cwtl
inc
stos
or
add
bound
xchg
lret
push
lock
add
mov
mov
subl
jmp
add
mov
aam
shl
mov
add
mov
fidivrl
jae
add
jmp
mov
ja
call
cmp
add
cmpsw
movsl
pusha
lock
push
mov
outsl
inc
ret
fwait
jbe
scas
addr16
and
daa
jg
addl
cmp
test
xor
push
fs
xchg
push
mov
fdivl
and
cli
cwtl
das
or
outsb
jmp
jo
pusha
test
scas
xchg
mov
and
loopne
aaa
pushf
sbbb
mov
and
xchg
imul
add
jmp
jg
jo
push
mov
mov
pop
int3
dec
or
mov
scas
add
mov
xor
pop
ja
addb
push
in
mov
hlt
call
cmp
scas
lcall
xor
mull
xor
pop
add
xlat
pop
cltd
add
in
jb
inc
push
fldl
cwtl
sbb
neg
mov
rorb
add
pop
int3
dec
xchg
add
push
mov
loope
scas
dec
ss
jb
loop
out
jno
and
cmp
mov
inc
in
je
ret
jne
pushf
mov
lret
adc
pop
cmpsb
sub
ljmp
add
xor
pop
cmp
dec
idiv
and
inc
add
dec
adc
leave
lea
push
lret
jno
outsl
int3
sub
add
jnp
ds
add
mov
add
push
xchg
ror
in
adc
shlb
push
loop
push
mov
push
dec
loopne
sahf
mov
loope
or
mov
cmc
test
mov
cmp
out
add
xor
ljmp
or
mov
in
lods
inc
movsl
add
mov
or
add
cld
sbb
adc
dec
bound
ja
sub
subl
mov
popf
jp
add
pushl
out
mov
add
xor
pop
push
jp
movsl
push
push
add
mov
add
into
jb
mov
jbe
add
jg
ret
pop
inc
aad
loop
add
test
inc
pop
xor
mov
std
aaa
add
js
test
cltd
xchg
cmp
repz
ja
add
lahf
imul
push
xor
add
out
std
bound
adc
imul
dec
xor
iret
call
cmp
pop
and
push
sub
rorb
or
rclb
mov
or
sti
sub
mov
pop
cltd
xlat
pop
jns
add
sub
mov
lds
dec
sti
pop
and
jecxz
cwtl
clc
cmpsb
dec
add
jl
and
cmp
add
add
push
loope
sbb
mov
movsb
inc
into
cli
inc
pop
add
test
cld
adcb
add
imul
xchg
into
add
xchg
ds
push
inc
cmp
add
jmp
pop
rclb
les
cmp
jl
into
movsl
cmp
shlb
jge
imul
or
stos
iret
jb
ficoml
add
pop
add
dec
xor
adc
leave
ret
shrl
add
xchg
push
cmpsb
or
inc
lods
inc
sbb
mov
ljmp
jle
mov
popl
or
ret
lea
mov
xor
cmp
lock
dec
jbe
mov
add
scas
mov
std
xchg
add
loope
dec
cmp
add
add
in
stc
sub
add
test
out
add
inc
aad
jo
lcall
xor
out
mov
adc
lret
decb
loope
add
test
and
fldcw
sahf
clc
add
adc
push
mov
or
cmpb
enter
pop
cmp
cmc
xorl
jle
testb
scas
movsb
add
je
in
mov
hlt
inc
or
shll
popw
pop
mov
out
inc
push
sarl
xchg
pop
and
or
add
insb
sub
pop
lods
cs
cmp
rcl
add
add
fstl
push
add
mov
sarl
sub
mov
and
mov
push
cwtl
rcrb
cld
adc
jl
sbb
add
movb
mov
add
mov
mov
into
imul
pop
pop
daa
lret
sbb
icebp
add
cli
repz
int3
mov
push
add
xchg
mov
sbb
std
nop
cld
mov
jne
mov
push
mov
add
loope
adc
shrb
jno,pt
lret
aad
xlat
add
lret
sbb
cmp
mov
cmp
xor
mov
icebp
pop
xor
push
pop
in
add
cmp
add
fcomps
add
addr16
lds
add
inc
adc
jecxz
and
scas
add
and
or
mov
cld
mov
aam
cmp
lea
pusha
mov
sbb
jg
js
sub
imul
dec
lods
add
add
out
gs
addl
push
jo
inc
add
bound
mov
loopne
mov
roll
dec
mov
mov
and
call
xchg
or
lcall
sub
add
push
fldenv
rorl
inc
add
add
cmpsb
sub
std
stc
and
cli
lods
xlat
lcall
shr
sub
sbb
xchg
movsb
das
xchg
movq
insb
sbb
push
arpl
pop
push
and
clc
ja
mov
mov
pop
add
js,pn
xchg
addr16
rorl
mov
pop
pushf
int3
shrl
les
call
outsb
and
test
mov
idiv
lcall
or
in
in
hlt
cmpb
dec
or
pop
jp
add
std
pop
outsb
in
icebp
mov
jmp
add
jns
pop
sub
xchg
adc
cld
lret
mov
add
fsubl
movsl
pop
popf
push
push
jmp
push
arpl
add
jecxz
or
xchg
dec
cmp
or
dec
mov
fimull
pop
sti
ja
fs
fs
mov
cmpl
in
xchg
jae
xchg
out
jmp
lods
shlb
push
push
jbe
mov
jp
popf
loopne
mov
push
adc
xchg
cmp
outsw
sarb
pop
scas
push
ljmp
ss
sub
scas
in
dec
in
mulb
in
cmp
jp
pop
and
mov
mov
push
adc
faddp
cld
jne
add
ror
rcrb
cli
adc
aaa
test
nop
aam
sbb
or
jge
mov
inc
jb
add
dec
or
es
push
add
enter
push
arpl
push
xlat
sub
xor
xor
inc
sub
ficomps
adc
test
pop
add
mov
je
sbb
add
js
mov
shrb
mov
add
cwtl
jl
mov
push
repz
outsl
jne
or
mov
mov
add
sarb
or
mov
xorb
lds
mov
aas
loop
mov
sbb
in
xor
outsb
push
jne
add
hlt
add
outsl
andb
push
das
jbe
int3
mov
incb
and
pop
fsubrp
add
mov
fs
test
adc
test
mov
xchg
add
or
into
les
aas
clc
inc
icebp
add
iret
add
jne
jae
xchg
pop
dec
add
mov
push
sub
loop
mov
mov
push
jecxz
inc
adc
jnp
dec
add
mov
mov
jne
jp
jle
fidivrl
jbe
pushf
xor
push
push
lods
push
mov
shlb
mov
push
enter
ret
das
popa
sarl
push
lret
movsb
out
subl
sub
fmull
add
adc
inc
mov
out
sub
movsl
mov
dec
outsb
push
jl
cmp
push
inc
mov
movsb
and
add
lods
aaa
add
pop
jp
sub
cli
add
bound
cmpsl
add
in
push
lock
pop
add
add
inc
dec
lock
pop
inc
int
stc
pusha
sub
dec
and
mov
sub
add
dec
lret
jb
and
mov
sahf
add
data16
sub
adc
add
lods
dec
adc
pop
jns
pop
cltd
lock
adc
mov
mov
adc
lret
add
inc
sar
inc
mov
add
cmc
xor
add
ljmp
push
fisttpll
dec
arpl
add
jmp
add
inc
mov
call
cmp
mov
mov
add
pop
or
push
pop
cmpb
sbb
add
dec
mov
push
test
sub
add
fwait
cmp
cld
cltd
pusha
jmp
sbb
jecxz
mov
scas
cmp
cmp
cmp
add
popf
movsb
mov
pop
addb
jo
mov
mov
jge
xor
push
popa
sahf
fistpll
and
add
movl
cmpsb
pop
sub
shl
mov
je
lahf
leave
and
data16
movsl
mov
or
lret
cmp
sti
ss
dec
add
jecxz
stos
jbe
fmuls
rcrb
shl
push
stos
bound
lcall
mov
dec
popa
add
dec
pop
loop
call
movq
pushf
out
add
ror
xor
addb
aad
in
pop
xchg
cmp
add
adc
sub
mov
push
dec
sti
pop
loop
shrb
nop
push
mov
pop
push
clc
testb
inc
add
adc
lret
or
push
jae
add
xor
add
mov
pop
jns
xor
ret
adc
jp
fisubrl
ja
int
push
inc
mov
add
and
int3
jg
mov
data16
ja
cmpsl
roll
in
out
mov
mov
lahf
and
jg
fisttpl
cwtl
sti
pop
ljmp
jo
jb
mov
add
mov
sbb
out
add
fadds
fneni(8087
imulb
popa
sbb
test
sub
mov
push
int3
and
add
adc
jns
fists
lods
xchg
fildl
add
cmpsb
xor
push
test
sahf
lcall
out
cwtl
add
clc
pusha
pushf
ret
sarb
or
sbb
jo
mov
sub
cmp
rcrb
sbb
push
add
dec
add
icebp
xor
aas
pop
movl
fmuls
jne
inc
adc
ficoms
xor
or
push
call
add
iret
pusha
mov
testb
rcll
pop
mov
or
fwait
cmpsl
dec
mov
xchg
inc
ja
push
ret
add
cli
fwait
mov
in
push
cwtl
jno
add
push
cmc
sub
ds
mov
xchg
rolb
jecxz
sbb
insl
fwait
out
and
add
nop
loop
js
ret
xchg
ret
add
cwtl
mov
and
mov
jo
xor
mov
push
fs
out
popa
cwtl
shrb
pop
push
lret
mov
aad
cmpsb
pop
in
add
fisubs
ljmp
mov
fisttpll
insl
add
outsb
pop
add
bound
stc
adc
add
jb
into
sbb
or
loopne
mov
push
loopne
pop
cmpsb
fnstsw
cmp
call
push
ja
xchg
andb
mov
cli
push
jnp
stos
add
xorl
and
add
inc
gs
aam
or
cmp
sarb
adc
mov
loopne
or
scas
push
push
dec
addr16
adc
add
mov
add
mov
dec
mov
push
xor
sub
add
movsl
repz
pusha
add
mov
fmull
fisubrs
or
mov
mov
or
mov
push
push
and
orb
add
es
in
add
push
and
loopne,pt
sbb
add
les
jbe
dec
inc
xchg
in
cld
sahf
cs
into
repnz
mov
pop
push
or
cwtl
dec
pop
mov
insl
and
sbb
push
dec
adc
faddl
push
loopne
add
push
mov
dec
add
mov
inc
fwait
lahf
fimull
test
enter
push
jnp
hlt
movsl
add
mov
add
adc
inc
pop
mov
sbb
sbbb
nop
repnz
and
push
stos
fwait
mov
cwtl
sbb
add
and
jb
pop
cld
pusha
idivl
ljmp
sub
test
lahf
insb
stc
jmp
jle
add
insl
sbb
lds
jns
or
mov
fiaddl
out
push
mov
pop
shrl
push
jo
xchg
sbb
jne
add
sbbl
mov
shl
xor
rcl
mov
xchg
hlt
add
ds
dec
jp
mov
popf
subl
or
or
pop
mov
jo
clc
aas
cltd
loopne
dec
pop
lret
add
jle
mov
xchg
std
add
push
cld
sub
pop
xlat
or
test
aaa
addl
pop
pop
aam
cmpsl
ret
pop
mov
add
push
call
and
cli
push
jns
sub
cmc
mov
pushl
inc
pop
test
loopne
mov
push
sub
fnstsw
pop
adc
adc
rolb
sbb
gs
rolb
inc
decb
sub
cmp
cli
loope
shrb
jl
jo
cld
adc
push
ret
xchg
scas
adc
jg
xchg
jl
sbb
jno
or
lcall
je
ja
or
fbstp
scas
inc
mov
pop
clc
jecxz
cmp
xor
jns
pop
stos
inc
lret
test
dec
add
pop
nop
sbb
add
xor
lods
divl
enter
add
fwait
imul
mov
lods
dec
adc
xchg
movsb
pop
xchg
push
inc
mov
add
dec
shrb
adc
and
add
sbb
inc
add
rcll
sbb
ret
mov
sarl
clc
pop
adc
xlat
jecxz
cmp
ja
imul
cmp
repnz
loopne
push
fisubl
leave
lret
rolb
sub
mov
xor
loop
xchg
push
mov
cmp
insb
cmpsl
test
xchg
nop
inc
rcrb
aas
jno
add
xorl
cmp
add
push
lods
push
cmpsl
jl
jno
movsb
nop
adc
iret
pop
pop
and
shl
inc
pop
fldcw
or
ja
aas
shlb
xchg
cmp
xor
adc
sbb
jno
mov
or
adc
int3
pop
pop
shlb
and
in
popf
in
mov
push
imul
rolb
mov
mov
mull
cmp
add
inc
pop
fadds
sbb
in
jbe
aam
add
iret
shl
or
and
ja
enter
mov
cld
add
scas
fcmovnb
das
add
int3
inc
orl
add
push
movsb
add
xchg
sub
paddsw
xor
sbb
fcomp
cmc
xchg
cmp
pop
xlat
sub
imul
loopne
sbb
add
or
test
adc
mov
mov
bound
mov
fiadds
shrl
xor
sub
loopne
icebp
in
clc
cwtl
push
cmp
pop
movb
sbb
cmpsb
dec
jo
call
popf
add
adc
leave
xchg
add
std
mov
stc
lahf
aas
xchg
jle
add
sbb
lds
jecxz
sub
lret
pop
or
push
xchg
enter
dec
xchg
jns
out
cmp
or
cs
jae
fsubl
add
repz
out
add
scas
outsl
xchg
mov
stc
adc
adcb
test
sub
push
loop
jnp
lahf
cmp
inc
push
rcl
scas
es
xor
or
and
add
in
add
mov
int
jle
lret
mov
add
xor
sbb
push
push
popa
pusha
sbb
push
loopne
push
inc
add
inc
mov
sub
out
and
add
outsl
pop
xchg
pop
out
xor
mov
pusha
fsubs
in
mov
push
cmp
jnp
jne
out
sub
movsl
inc
lods
cmc
inc
scas
or
adc
and
mov
or
ret
test
stc
rcrl
fisubs
xor
pop
testb
adc
cli
adc
or
rcrl
pop
inc
and
add
sbb
shll
shrb
xchg
nop
and
dec
cmp
pop
and
shll
lds
subl
pop
jp
cmpsl
outsl
add
mov
inc
xchg
pop
mov
xor
fnop
or
cmpsl
push
into
sub
out
jno
sbb
stos
fadds
or
pop
pop
int
push
mov
push
adc
push
icebp
shlb
inc
xchg
add
mov
dec
fstl
es
cmpsb
mov
hlt
add
add
hlt
cmp
push
sahf
add
jne
push
in
into
das
repz
xchg
pop
push
xor
les
into
jp
movsb
insl
imul
inc
nop
enter
or
test
in
lods
or
out
iret
add
ret
lods
adc
and
and
and
add
push
sub
xchg
sbb
mov
sbb
jne
sbb
test
xlat
movsl
inc
and
pusha
call
addr16
repnz
mov
push
xlat
xor
push
dec
and
mov
aam
idivl
or
jb
sub
pop
es
pushf
jmp
cmp
xchg
adc
mov
and
push
or
ss
sbb
aad
pop
add
jns,pn
xor
scas
or
pop
sub
test
mov
test
out
ret
dec
or
inc
lds
cmp
sbbl
and
js
dec
sbb
lods
dec
pop
inc
faddl
pop
lret
dec
xchg
push
jl
out
dec
ror
sbb
movsb
test
pop
cld
jno
dec
or
mov
enter
mov
add
rorb
push
rorb
roll
cmp
sbb
mov
adc
xchg
dec
mov
stc
je
loopne
test
sbb
pop
std
mov
insl
mov
dec
hlt
push
scas
adc
cs
les
out
test
sbb
push
into
add
pop
xchg
xchg
pusha
sub
out
leave
stos
add
mov
and
sarb
rclb
mov
mov
dec
scas
jecxz
jge
jle
jo
or
cltd
cmp
in
adc
ss
hlt
sbb
sbb
arpl
in
clc
push
mov
sub
into
popf
fwait
pop
add
out
xchg
sbb
sbb
in
out
out
stos
test
or
lcall
fs
and
jecxz
xchg
add
sub
mov
imul
jae
hlt
addl
frstor
fs
xchg
adc
aam
mov
cmp
in
sbb
mov
clc
dec
xlat
push
loop
scas
out
cmp
or
movsb
or
sub
xor
mov
push
and
into
mov
ret
mov
mov
out
xchg
sbb
cmp
pop
out
ljmp
add
jecxz
adc
jnp
insb
xor
je
jo
cmpsl
mov
xchg
int
sbb
push
stc
push
ficoms
push
adc
cmpsl
lcall
jecxz
daa
xor
mov
pop
xor
cltd
int3
push
test
mov
movsl
loope
push
push
jo
mov
jnp
arpl
or
sbb
push
cld
test
sbb
push
mov
bnd
clc
add
fistl
loope
or
aam
push
dec
pop
add
dec
push
add
xlat
cmp
cmpb
jbe
add
add
gs
cmp
xor
xchg
jae
add
pushl
cmp
aad
adc
and
lea
out
and
push
xchg
in
pusha
add
pop
add
out
mov
jle
or
push
test
pop
hlt
jne
add
sbb
dec
out
je
test
leave
je
xlat
rorb
call
mov
inc
lods
and
and
xorb
cld
lds
inc
dec
inc
dec
xchg
mov
int3
sub
test
lahf
mov
xlat
sbb
cmp
adc
mov
shrb
xchg
push
mov
add
pop
sub
mov
mov
mov
inc
push
outsb
movsl
sub
mov
imulb
movsb
ret
orl
sahf
mov
mov
pop
jge
inc
push
and
add
xor
sbb
xchg
push
push
lds
lds
jo
pushf
cmp
and
cmpsb
pop
push
out
lea
dec
xchg
or
push
into
pusha
add
xchg
mov
add
adc
pop
and
add
loopne
rcl
push
mov
loop
lods
push
mov
loopne
shll
add
and
sub
inc
mov
jo
inc
push
xchg
sub
fwait
mov
daa
dec
popa
gs
push
loope
roll
fisttpl
add
xchg
rolb
mov
and
adc
pop
outsb
je
test
movq
pop
inc
into
cmpsb
add
ds
add
sub
or
mov
popa
add
leave
push
pop
push
xor
lcall
adc
jmp
add
fs
sub
addb
les
dec
inc
push
jae
xchg
jl
xchg
or
adc
pusha
and
leave
add
dec
outsb
xor
hlt
or
sarb
dec
inc
cltd
adc
pop
add
mov
cwtl
movsl
jmp
or
inc
mov
lret
xor
sbb
arpl
add
cmp
push
adc
mov
movq
dec
aas
adcb
in
mov
dec
lea
xor
bound
test
dec
push
push
sbb
xchg
loope
gs
in
xorl
outsb
mov
aam
dec
ret
add
mov
push
and
je
lret
iret
add
mov
jmp
push
fidivl
and
add
add
fsts
nop
hlt
adc
dec
mov
dec
mov
cmpl
nop
leave
sub
xor
incb
ja
scas
sub
and
fisttps
decb
std
or
into
call
sub
inc
cld
cwtl
cmpsb
xor
outsb
jo
push
pusha
mov
dec
subb
mov
fwait
loopne
je
or
sbb
imul
roll
out
sub
mov
pop
mov
mov
push
or
sbb
in
fadds
outsl
sbb
xchg
mov
pusha
popa
jns
and
pushf
clc
add
fiaddl
sub
loopne
insl
xor
jp
push
in
xadd
mov
fildll
je
mov
or
sub
test
in
test
les
add
xor
cld
int3
test
push
cmp
inc
faddp
or
ja
add
popf
sbb
xorb
decb
es
sbb
enter
movsl
push
stos
xor
icebp
add
leave
and
dec
pop
sbb
dec
pop
loop
add
test
sarb
into
dec
pop
repnz
push
test
or
cmp
js
jmp
jle,pt
cs
hlt
lock
pop
push
pop
xchg
cltd
pusha
es
int
nop
hlt
add
push
sub
sbb
cmp
out
mov
mov
push
in
mov
mov
sub
add
add
xor
inc
sub
cmp
adc
imul
push
stc
push
bound
xchg
pop
dec
repnz
pop
add
test
xor
xor
sarb
pop
out
add
push
scas
push
sar
ret
pop
pushf
cmp
nop
dec
or
out
sahf
or
sub
jbe
iret
sbb
and
cmp
adc
cmc
push
shrb
inc
cmp
and
cmp
int
repnz
es
jnp
fs
insb
cwtl
ss
cmpb
push
add
test
lcall
push
push
out
daa
shr
popa
nop
sbb
xchg
mov
cmp
loop
aas
and
lds
into
push
in
call
mov
mov
jbe
sub
pop
push
inc
jmp
fldenv
jp
inc
sahf
jns
add
pop
out
imul
loope
or
dec
mov
adc
mov
dec
or
stc
add
xchg
xor
jns
fldlg2
inc
add
clc
into
dec
and
lock
add
negb
dec
fcoml
add
push
call
xor
mov
xor
mov
in
hlt
pop
mov
lods
ljmp
xchg
ja
lds
call
test
jp
or
test
ss
jns
pop
jl
sub
fwait
add
movsbl
jecxz
inc
nop
mov
in
enter
leave
or
popf
xlat
push
add
pop
pop
add
cltd
enter
popf
imul
loop
inc
insb
cmpsl
mov
iret
sbb
rolb
cmpsb
loop
cmp
adc
inc
cld
cmp
int
push
jno
jp
inc
call
mov
sbb
xchg
outsb
scas
arpl
push
inc
pop
ficoms
mov
ja
or
lret
xor
add
adc
xchg
cmp
dec
idivl
add
and
je
add
sbb
shrb
xchg
stos
mov
dec
add
adc
inc
jb
sbb
nop
mov
add
sub
sub
cmp
jmp
push
stos
dec
aas
iret
xchg
pop
je
cmp
jnp
repnz
shl
mov
dec
pop
cmp
leave
adc
mov
enter
into
in
add
push
xorl
repnz
or
add
lea
cwtl
jne
nop
pusha
sbb
sub
fiadds
jmp
push
and
test
push
adc
int3
mov
mov
inc
cmpsb
push
lock
into
and
cmp
dec
frstor
push
repz
adc
dec
or
nop
imulb
dec
push
popa
add
xchg
add
sbb
add
call
add
mov
and
mov
ret
cmp
add
push
sbb
push
xor
pop
mov
loope
adc
int3
mov
out
insb
jle
loop
ds
add
xor
fdivl
or
sbb
and
mov
add
and
add
add
mov
js
jbe
sbb
lret
add
int3
dec
bound
pop
es
stos
fsubrs
dec
aas
inc
inc
inc
and
rcll
aaa
mov
adc
pop
test
jne
cmp
mov
into
mov
outsb
add
lret
out
aad
int3
inc
aam
xchg
data16
sti
test
sub
add
jl
jg
xchg
push
in
fldenv
add
nop
lods
call
sbb
mov
sbb
iret
adc
adc
add
in
or
popf
add
push
aaa
pop
fsubs
outsl
cs
in
dec
jo
out
iret
add
in
je
mov
add
cmp
inc
icebp
stc
shlb
add
gs
leave
insb
fistpll
loopne
cmp
mov
dec
cmp
popa
out
call
scas
shlb
and
jg
add
push
xorl
mov
add
call
hlt
sahf
addb
jns
mov
or
movsb
push
rolb
shlb
ficoms
lock
pop
xchg
sbb
js
and
sub
cwtl
lahf
dec
add
leave
sbb
fdivp
xchg
add
sub
orb
add
xor
filds
xor
pushf
into
jl
cmpsl
shl
sub
jns
mov
pop
rcll
mov
out
sbb
and
pop
ror
pop
int3
push
xchg
ljmp
add
test
and
rclb
inc
mov
sub
icebp
lods
jno
add
mov
enter
add
dec
dec
lods
or
sti
in
sbb
or
xor
enter
push
add
pop
xor
push
push
mov
push
dec
mov
pop
orb
push
int3
xchg
add
xor
add
scas
xchg
imul
and
fsubr
dec
add
cwtl
in
sub
cli
pop
lret
sub
movsl
inc
test
nop
lea
and
push
jecxz
add
gs
repz
push
or
dec
fsubr
add
sub
pop
add
xlat
loopne
jge
add
pop
and
lds
cmp
sbb
add
fwait
inc
fldt
sbb
rclb
in
ljmp
inc
movsb
fiaddl
movsl
sti
or
sbb
inc
sub
test
in
cmpl
fs
xlat
cmpsb
add
aas
add
dec
sbb
pop
ret
loop
loope
cmp
aam
js
bound
loopne
cmpsl
gs
test
and
jne
sbb
adc
jae
add
mov
in
jmp
stos
add
loop
cmp
fstp
push
add
dec
repnz
mov
jp
in
test
jns
andb
push
outsl
inc
mov
sub
pop
out
leave
mov
rolb
adc
movsl
add
mov
int3
add
pop
ret
jns
inc
xchg
adc
leave
mov
xor
lea
push
xor
or
hlt
jns
xor
pop
mov
shll
xchg
sti
stc
or
inc
jne
inc
add
add
arpl
cmpsb
sbb
jge
in
mov
aam
movsl
mov
cmp
call
jb
in
ror
and
adc
fcmovb
jbe
loop
stos
and
pushl
xor
pop
iret
and
xor
jnp
pop
xor
loopne
mov
cmp
cwtl
add
popa
dec
pop
pushl
push
out
or
add
xor
cmp
das
aad
and
movsl
repz
mov
xor
inc
adc
mov
repnz
lea
sbb
or
dec
out
stos
pusha
arpl
popa
adc
push
cmp
xchg
outsl
fisubrs
cld
lock
xchg
leave
jnp
fstps
add
out
mov
mov
aad
dec
pop
mov
mov
jno
addb
mov
cmc
inc
sub
adc
ja
add
mov
or
and
faddl
insb
and
mov
push
out
or
add
out
les
imul
ljmp
addb
lahf
jae
add
push
cmpsl
pop
and
sbb
pusha
fldenv
inc
jo
push
pop
ret
mov
mov
pop
aas
or
push
jecxz
lret
pushw
rcrb
mov
stos
cmp
mov
jno
out
jmp
insb
push
test
sub
add
mov
dec
out
pop
xor
lock
scas
iret
adc
xor
inc
sbb
pop
cmp
rorl
iret
incl
orb
xchg
add
cmpsb
push
or
mov
xchg
add
dec
leave
fwait
lret
fiaddl
aad
ret
jb
das
nop
add
xor
loop
or
aam
mov
mov
xchg
push
xchg
fwait
xchg
pop
xor
dec
xchg
cmp
mov
add
add
ss
inc
mov
lods
lret
add
add
lcall
maxps
clc
into
inc
cmpl
hlt
adc
mov
add
add
fiaddl
leave
jle
imul
or
push
add
fdivp
loopne
xchg
sub
loop
xchg
mov
shrl
inc
mov
je
not
popa
pop
cwtl
mov
sub
add
inc
mov
push
idivl
loop
cmp
rcll
cmp
aad
push
jge
add
out
jbe
inc
inc
fdivrs
push
push
sbb
das
add
mov
scas
pusha
sbb
sbb
pop
mov
outsl
push
icebp
mov
add
xchg
je
add
adc
mov
movsb
test
add
cwtl
xchg
scas
inc
mov
pushf
jno
pop
sub
push
xchg
loop
mov
jle
add
adc
or
pop
xchg
data16
adc
push
mov
push
adc
push
pop
jbe
push
jp
dec
jl
mov
sbb
dec
leave
out
mov
out
add
mov
mov
dec
aas
xlat
out
sub
inc
add
xor
dec
cmp
in
add
jle
into
add
or
xchg
cwtl
jno
cmp
out
pop
cmp
aam
out
mov
sarb
push
and
add
daa
mov
adcl
out
jbe
sbb
mov
inc
scas
jae
hlt
sub
rclb
jmp
aam
ret
ror
inc
adc
sub
mov
lods
testl
mov
pop
add
pop
aaa
add
ret
adc
mov
add
loopne
aam
push
out
fldl
inc
pop
stos
jne
shrb
nop
pop
cmp
into
mov
inc
popa
add
sti
mov
add
aad
mov
jae
or
sub
insb
test
xchg
sub
add
jg
xlat
shr
dec
jo
data16
mov
xor
or
adc
xor
lret
mov
adc
into
out
les
call
push
xchg
mov
or
repnz
addr16
push
pusha
aam
inc
fildl
cwtl
add
xor
insl
add
jb
push
or
add
xchg
inc
adc
push
loopne
loope
jb
sbb
aad
ss
mov
mov
out
js
sub
cli
aad
ljmp
xchg
mov
scas
push
mov
mov
xchg
add
into
and
sahf
add
pop
mov
scas
addr16
cmp
push
xchg
mov
push
sbb
push
les
push
or
cmp
add
cmp
cwtl
xor
data16
cmc
add
lcall
nop
dec
push
leave
or
add
mov
jno
and
add
adc
dec
mov
sbb
movl
insl
add
notl
jo
pop
add
pop
xchg
call
add
loop
ror
clc
icebp
pop
ljmp
sub
add
pop
pop
gs
js
into
sbb
xchg
int3
leave
mov
popa
push
lcall
xchg
add
add
mov
or
sbb
jb
pop
mov
cld
addr16
dec
addl
inc
adc
or
imul
inc
mov
jb
jmp
add
movsb
imul
add
lcall
mov
dec
jbe
fs
add
jae
cli
add
xchg
mov
mov
xor
sub
bound
addb
mov
out
xor
in
add
xchg
sbbl
add
xchg
clc
mov
insl
and
mov
iret
add
ljmp
negl
cwtl
out
add
es
or
or
mov
stc
add
jle
loopne
sti
inc
rorl
xchg
add
sbb
into
jae
shrb
mov
adc
roll
jecxz
decb
aad
shlb
daa
add
inc
lods
roll
jge
xor
es
dec
pop
test
das
dec
add
loop
xchg
jp
inc
add
xor
loope
insl
repz
mov
or
mov
int
setae
int3
push
xor
mov
add
les
or
add
jecxz
in
sub
clc
jp
pop
pop
test
ds
mov
lock
xor
lret
pop
rclb
lret
in
je
fsts
sbb
mov
add
and
jne
add
or
negl
add
pop
jns
lret
movd
sti
insl
and
jbe
inc
inc
mov
sbb
clc
sahf
mov
sub
lds
sbb
rcl
in
sbb
popa
ljmp
sub
add
mov
imul
aas
add
pop
stos
addl
test
cmp
call
cs
rolb
cli
or
sub
sbb
fists
inc
mov
or
or
lahf
mov
push
fildl
sbb
mov
aaa
add
xchg
or
cmpsb
in
inc
call
adc
push
hlt
dec
xor
push
lret
daa
shll
dec
or
aam
add
and
mov
dec
xchg
shlb
push
ja
arpl
push
pop
das
pop
mov
insb
inc
pop
mov
orl
cwtl
add
stos
jecxz
xchg
sar
jae
mov
in
ret
xchg
div
add
pop
dec
imul
cmp
pusha
xor
subl
add
call
and
or
xor
ja
decl
xchg
xlat
add
jo
into
pop
outsb
bt
jb
sbb
push
ds
daa
bound
jle
shrl
aam
pop
cmp
mov
sub
or
ret
bound
scas
addb
adc
push
ja
xchg
ret
scas
mov
inc
cli
in
stos
push
jae
xchg
aaa
cmpb
sub
andl
mov
addr16
faddl
sbb
dec
and
arpl
imul
dec
dec
insl
sub
add
inc
into
lahf
lock
sarb
int3
jb
add
pop
test
push
pop
add
call
test
mov
loopne
add
cmp
imul
stc
shrl
add
jg
arpl
mov
adc
idivb
mov
add
sub
push
adc
lret
aad
je
add
xchg
mov
sub
mov
mov
sti
sbb
inc
xor
sar
sbb
fiaddl
imul
push
insl
inc
lea
jne
or
and
jns
out
data16
in
ja
add
sbb
icebp
xor
add
jge
xchg
sahf
add
mov
ljmp
sbb
jmp
test
jne
mov
je
adc
push
pop
push
inc
push
ficomps
add
lea
pop
jge
push
jae
xchg
xor
lahf
pop
int3
lods
in
push
add
pop
jle
xchg
add
bound
dec
jo
mov
ret
mov
das
xchg
loope
pop
push
test
push
and
mov
or
jae
aad
and
mov
cmp
add
ret
leave
addb
imul
scas
cwtl
inc
add
jmp
xchg
out
cwtl
add
into
cmp
scas
mov
add
mov
or
push
adc
cli
dec
pop
gs
nop
punpcklbw
sub
js
pop
or
mov
xchg
aas
mov
mov
sub
aaa
dec
push
popl
sahf
inc
out
dec
insb
add
and
cs
sub
insb
testl
add
inc
sbb
loop
pop
movsl
cmp
push
and
mov
add
std
ljmp
or
mov
xchg
test
jnp
add
fcomps
and
xor
mov
xor
jno
lcall
dec
or
loop
jmp
dec
cli
aad
xor
push
jecxz
inc
pop
lods
add
sbb
mov
dec
jb
lock
arpl
adc
jg
adc
cmovs
cs
add
sbb
add
out
mov
out
sbb
push
ficomps
and
lock
pusha
add
pop
cmp
or
xor
jge
mov
sub
xchg
xchg
pop
mov
inc
push
mov
rolb
sub
in
test
pop
xlat
pop
sbb
push
mov
adc
call
stos
lahf
adcl
lods
or
jecxz
pop
mov
push
mov
add
std
adc
shrl
mov
pop
clc
add
push
aas
dec
add
jo
faddp
lods
add
cmpsl
jne
bound
sti
rorl
add
push
insl
std
sub
popa
idivl
in
cltd
clc
add
in
cmpsb
mov
jae
sub
dec
xor
mov
sbb
adc
mov
hlt
pop
repz
xor
cmp
in
lods
jno
pusha
push
popf
push
sub
inc
mov
or
mov
stc
xchg
pop
add
insb
ljmp
pop
adc
jo
xor
fisubl
cmpsl
stos
xor
pop
sub
pusha
push
sbb
xlat
adc
xchg
mov
addl
daa
cmp
add
pop
stos
pop
and
fisttpll
cmpb
xor
cmpsl
hlt
add
push
jle
inc
lret
and
add
pop
popf
mov
cmp
test
ficoml
fs
dec
add
call
sub
inc
test
sbb
jl
xor
sbb
jl
mov
jle
xchg
mov
cmp
mov
leave
aam
push
loop
add
cli
and
or
cltd
xor
lods
fcomps
rcl
cwtl
add
push
imul
popa
lock
pop
pop
mov
imul
jl
mov
or
pop
xor
int
mov
cld
lea
sahf
jge
pushf
xor
inc
stc
insl
scas
lock
xchg
lret
fld
ja
icebp
fs
in
adc
jmp
add
dec
sub
test
add
jbe
in
mov
scas
out
jle
cmc
and
cmp
xchg
and
lcall
inc
or
addb
int
xchg
or
mov
lds
cwtl
mov
mov
inc
insb
adc
pop
aad
sarb
out
inc
or
sbb
pop
add
call
hlt
rcr
fst
mov
popa
fbld
mov
and
sub
xlat
sahf
fnstcw
cli
int
shll
push
add
jg
or
xlat
or
or
inc
orb
mov
addl
sbb
imul
mov
and
xchg
mov
add
cmpsb
or
hlt
mov
inc
jns
or
mov
sbb
push
xor
pop
shlb
xchg
loopne
jnp
pop
sbb
cmp
arpl
movsl
inc
sub
xor
mov
adc
pushf
and
popf
push
sub
lods
sbb
xor
std
add
push
pop
add
cmpsb
jmp
lret
mov
bound
inc
data16
add
push
jecxz
add
sar
sub
pop
dec
orb
lcall
fildl
add
pusha
sbb
and
push
bound
or
test
data16
mov
push
je
adc
mov
add
roll
dec
in
add
or
pop
aad
call
clc
jl
add
sarl
add
and
xchg
adc
insb
das
pop
jb
xchg
cld
xchg
mov
mov
imul
add
pop
or
movsb
inc
mov
or
sub
nop
scas
sbb
mov
xor
jns
lods
enter
popa
jge
nop
push
xchg
aad
ljmp
sub
movsl
inc
data16
out
cmp
mov
xchg
pop
sbb
and
or
call
pop
push
dec
movb
int
and
into
cmp
roll
dec
jle
push
dec
pop
adc
push
je
pop
loopne
in
test
movsb
push
jbe
lods
les
dec
ss
test
mov
leave
std
mov
xchg
aam
stos
fs
pop
inc
js
adc
jge
negb
xchg
sub
shl
push
gs
rclb
mov
mov
jns
mov
addr16
cmp
xchg
ja
mov
or
cmc
sbb
hlt
adc
add
lcall
mov
or
xor
hlt
shrb
add
cmpsb
push
push
sub
cmp
adc
adc
push
push
fstpl
jo
mov
mov
out
and
lcall
pop
dec
iret
push
jne
and
imull
add
inc
adc
shl
lods
fcompl
mov
mov
addb
inc
xor
faddl
andl
dec
sub
sub
cmpsl
and
xchg
cli
imul
shl
loopne
inc
pop
jle
sbb
adc
cmpsl
jns
adc
add
inc
mov
cmp
movsl
test
pushf
pop
fildl
cmp
addb
dec
sub
sub
add
icebp
add
int3
jg
sub
pushf
pop
xor
jg
aad
insl
icebp
sbb
js
add
call
sub
push
dec
popf
add
adc
adc
xor
arpl
fs
pop
and
fidivl
adc
mov
xor
mov
test
je
in
jle
add
fsubl
imul
jmp
lds
add
sti
int
jbe
xchg
inc
mov
lret
fiaddl
lods
scas
mov
xchg
xor
enter
orl
shl
cmp
and
add
add
inc
sub
fs
stc
xchg
cmp
loopne
adc
fsubrs
sbb
mov
and
pop
sbb
inc
popf
mov
cmc
dec
out
add
stc
hlt
mov
enter
stos
loope
xchg
push
fsts
mov
loopne
aam
aam
xchg
inc
add
shll
xchg
xchg
mulb
pop
nop
movsb
movsb
dec
inc
add
push
add
or
fs
notb
lret
add
xor
scas
rorl
pop
add
fs
add
stos
lret
cmc
pop
test
pop
in
xchg
repnz
in
pushf
add
pop
push
push
add
enter
pusha
rolb
pop
sbb
leave
mov
scas
jno
and
les
and
push
mov
into
add
outsb
ret
dec
insb
icebp
add
sbb
mov
and
loope
ss
mov
pop
mov
or
jo
mov
sbb
push
sbbl
jmp
rolb
push
sub
fisubl
push
jecxz
jge
scas
inc
test
adc
adc
loop
cmpsl
daa
mov
and
fisubl
add
ret
push
pop
pop
sub
lods
or
insl
sbb
in
add
add
aam
imul
and
push
push
pop
jle
pop
idiv
imul
popf
leave
dec
jp
and
int
sbb
xor
inc
outsb
add
pop
movsl
cmp
orb
jbe
or
pop
sub
or
or
mov
out
xor
add
xor
daa
outsl
xchg
adc
stos
add
out
jbe
jb
or
scas
cwtl
or
sbb
sbb
testl
push
dec
mov
out
adc
sbb
loopne
push
mov
es
enter
inc
clc
mov
imull
ja
mov
outsl
xchg
add
fsts
mov
adc
punpcklbw
js
inc
xor
jle
inc
fcomps
adc
add
mov
or
or
pop
or
xchg
fs
mov
popw
jp
insl
xchg
add
dec
mov
js
in
pop
sbb
mov
xor
mov
cs
mov
add
lods
hlt
cmc
xor
lock
imul
int
clc
xchg
xchg
adcb
cwtl
cmp
cli
dec
pop
jg
dec
in
lret
test
mov
xchg
or
and
jle
hlt
xor
sub
adc
fmull
sub
sbb
in
andb
loope
push
insb
pop
addb
sbb
cmp
movsl
enter
sbb
jne
jo
xlat
mov
in
add
mov
and
sub
mov
iret
dec
xchg
cld
mov
mov
sub
xor
push
add
push
popa
movsb
insl
aam
scas
push
push
jns
sbb
shlb
mov
insl
add
cli
mov
and
sbb
addr16
aam
mov
sbb
testl
int3
inc
inc
add
ficomps
arpl
orb
mov
cltd
mov
mov
add
jmp
jl
test
sub
add
rorb
dec
dec
push
jo
insl
dec
adc
add
mov
mov
es
pop
push
fsubs
cmpsb
sub
mov
mov
and
push
in
faddl
push
pop
popa
sub
inc
loopne
inc
mov
rcrb
pop
inc
in
jno
int
adc
jg
pop
xchg
sub
jl
pop
cmp
and
mov
xor
mov
hlt
pop
mov
add
add
dec
mov
dec
das
jg
or
pop
mov
je
hlt
addb
lret
xor
test
das
mov
push
pop
pushf
jge
dec
inc
sbb
mov
sarb
call
sbb
xor
das
add
pop
sub
mov
mov
sti
add
lods
imulb
in
xchg
dec
inc
sub
repnz
pop
arpl
fists
sbb
dec
xor
test
jns
pop
inc
jecxz
mov
mov
add
and
in
ss
add
mov
cwtl
xchg
aam
add
inc
mov
iret
cmp
or
popa
rorb
xor
adc
idiv
sub
mov
push
add
pop
mov
push
je
daa
mov
mov
test
js
mulb
push
add
and
xor
roll
push
and
push
mov
std
pop
pop
pusha
rcl
dec
arpl
mov
push
iret
jbe
popa
inc
sar
stc
push
or
aam
adc
rol
fisttpll
mov
cmp
subl
xchg
cmc
loopne
adc
xchg
xor
sbb
xchg
xor
loop
push
out
inc
lret
rolb
sbb
add
mov
and
shlb
cwtl
push
pop
lcall
push
pushl
jle
and
fistpl
cs
push
add
fisubrs
xlat
jl
popf
add
pop
dec
rcr
dec
mov
pop
lods
clc
arpl
loop
xchg
shrl
or
test
jae
mov
mov
test
enter
xor
cld
inc
mov
pop
lods
add
out
lret
mov
aam
lcall
rcl
inc
cmc
cs
scas
mov
xchg
movsb
nop
xchg
dec
inc
dec
mov
inc
add
das
loope
xchg
sub
stc
dec
fmuls
je
mov
inc
dec
mov
int3
shlb
int
lods
push
in
mov
lds
add
cmc
mov
or
add
lret
inc
cmp
fidivrl
xchg
dec
and
push
add
xor
mov
inc
in
ds
int3
mov
inc
scas
xlat
ss
xor
pushf
add
inc
jl
add
mov
fcoms
repnz
rclb
hlt
sbbb
mov
or
xchg
jle
inc
add
lds
dec
pop
pop
arpl
mov
and
pushf
pop
data16
mov
add
mov
stos
cmpb
clc
pop
lods
or
cld
inc
mov
loop
jmp
and
or
mov
rolb
jae
or
push
movsb
out
das
subb
and
ja
xchg
addr16
js
lods
flds
stos
repnz
add
lock
adc
cltd
sbb
iret
jmp
push
add
shrb
popa
cmp
stos
sub
mov
inc
aam
nop
or
and
push
nop
call
mov
mov
adc
stos
add
ja
sub
push
cwtl
mov
gs
pusha
push
ret
jnp
mov
mov
ljmp
xor
push
inc
shl
dec
xor
dec
mov
push
add
or
adc
push
jmp
cmpsb
jbe
sub
mov
sahf
push
fadds
test
cmp
popa
or
xchg
dec
jge
sbbb
mov
sub
cmp
jbe
sbb
sub
leave
or
or
scas
mov
add
inc
inc
loope
mov
test
pusha
in
pop
ss
jbe
jnp
mov
jns
movsl
push
daa
jle
jo
das
cltd
test
mov
mov
mov
sahf
mov
push
xlat
dec
inc
push
sbb
add
mov
jo
testl
xchg
repnz
push
add
rorl
das
fsub
push
cmp
xor
pop
hlt
dec
nopl
mov
ja
mov
pusha
into
dec
mov
add
sbb
sbb
lods
stos
data16
pop
mov
insb
mov
addb
push
clc
mov
pusha
outsb
shl
sbb
inc
adc
into
dec
fdivrl
jnp
adc
adc
mov
or
adcb
mov
cmp
inc
rolb
pusha
ret
add
movsb
fcomip
lret
enter
adc
bound
cmp
mov
outsl
pop
loop
add
and
icebp
xchg
outsb
popa
pop
inc
popa
in
bound
popf
add
pop
add
fsubl
add
fdivs
jle
pop
cmc
popa
push
sti
sub
repnz
pop
adc
enter
pushf
mov
add
mov
adc
insb
cld
add
enter
movsl
mov
push
mov
test
mov
xchg
add
in
aam
test
push
addl
dec
outsb
clc
or
mov
mov
mov
sbb
mov
add
lods
inc
jb
mov
add
xchg
daa
sti
adc
enter
cmp
mov
pop
xchg
and
push
inc
testb
and
push
add
mov
mov
add
sub
mov
fisubrs
sbbl
xor
mov
dec
pop
mov
adc
pop
dec
mov
loope
adcl
dec
fisubl
incb
sbb
hlt
out
inc
out
sarl
fcmovb
add
imul
pop
inc
hlt
add
xchg
mov
cmp
add
lret
or
mov
testb
mov
mov
dec
data16
outsl
mov
fidivs
ds
aam
add
jecxz
rolb
cmpb
movsb
enter
aad
mov
pop
xor
add
xlat
mov
xorb
int3
outsb
mov
or
rcr
enter
mov
fisubs
mov
jbe
xchg
add
rolb
loop
pusha
jno
push
jmp
push
push
mov
cmp
popf
mov
xchg
movsb
les
add
ljmp
push
pop
mov
orb
add
pop
test
mov
cs
pop
push
cs
fcom
add
inc
fmulp
lahf
xor
mov
inc
and
pop
js
nop
into
add
add
mov
sub
mov
mov
add
fisttpll
add
cmp
leave
stc
sub
add
bound
pcmpeqb
mov
popf
cmp
mov
mov
xchg
add
mov
xchg
hlt
adc
popf
rclb
sbb
and
popa
fmuls
insl
jle
faddl
or
into
or
popa
sbb
movsl
dec
add
ss
xor
jno
and
mov
push
mulb
inc
add
jns
mov
sub
jb
lds
jge
shlb
std
stos
shll
xchg
in
les
mov
inc
fstpl
xchg
enter
jge
jbe
add
add
cmpsl
push
leave
out
shl
std
push
insb
int3
xorb
sbb
jmp
shll
jno
jmp
out
cld
add
push
into
lea
test
push
bound
sarb
xor
cmpsl
rcrb
sbb
or
js
rorl
and
gs
cmp
ds
sbb
shll
or
imul
imul
push
mov
mov
inc
loopne
adc
mov
mov
in
nop
fmuls
filds
sub
lret
fdivrs
push
adc
inc
inc
incb
or
or
cs
aam
cmp
dec
out
sbb
xchg
les
adc
adc
xchg
test
jbe
movsl
cmp
and
orb
and
mov
icebp
push
test
loop
add
cs
xchg
es
and
adc
in
mov
repnz
enter
daa
dec
dec
cmpb
cs
imulb
cld
add
fsts
pushf
scas
sub
enter
call
mov
dec
js
nop
mov
pop
dec
jecxz
shlb
pop
jo
or
dec
pop
pop
insb
iret
sub
pushf
push
pop
fcomps
cwtl
and
add
inc
sub
lods
jmp
add
nop
xor
or
cmp
adc
adc
add
dec
sbb
ds
xor
cmp
xchg
sbb
push
scas
dec
aad
lahf
mov
xchg
iret
pop
cmp
pusha
jmp
jle
inc
loopne
sub
inc
imul
add
int
cmp
adcb
roll
pop
dec
push
pusha
scas
jl
push
mov
cwtl
dec
add
fwait
push
outsb
test
or
arpl
add
pop
or
rcrb
cld
cltd
add
mov
js
xor
fsubs
push
jo
dec
dec
aad
cmpsl
pop
sbb
andl
add
push
cmpb
daa
icebp
inc
push
add
outsb
add
xor
pusha
sbb
testb
dec
int3
jg
inc
repnz
clc
popa
dec
inc
add
mov
add
adc
in
xchg
sbb
pusha
inc
sar
shl
add
inc
sti
loopne
das
movsb
mov
pop
sar
fcmovne
inc
faddl
pop
dec
add
jecxz
mov
ljmp
cld
insb
add
mov
pop
das
insb
dec
mov
adc
sbb
lods
mov
or
sbb
jl
cmpsl
pop
cs
cmp
addb
mov
repnz
jmp
jl
pop
add
icebp
dec
mov
test
mov
gs
movsb
out
dec
hlt
clc
adc
sub
insb
nopw
orl
vmovss
dec
or
dec
add
jmp
mov
jo
cmpsb
test
sub
cwtl
lods
cmpsl
aas
add
in
jecxz
dec
dec
test
roll
popf
or
mov
mulb
cmpsl
pusha
add
pushf
fldcw
bound
addl
inc
aad
pop
jb
xor
andl
jno
add
mov
add
inc
rcll
out
test
loop
mov
adc
jo
sbb
xor
insb
dec
js
popf
jo
sub
add
mov
addl
dec
fs
inc
jbe
add
xchg
push
les
dec
add
sub
in
subb
jo
add
pop
mov
lahf
jle
mov
orl
loop
jo
add
insl
mov
mov
ja
mov
das
sub
test
cmp
rcll
daa
mov
ja
cmp
jle
add
jmp
mov
xor
popf
xor
std
imulb
add
jg
push
mov
push
fidivl
adc
mov
movswl
dec
rolb
sub
pusha
sbb
inc
add
andl
sbb
int
lods
shrb
and
stos
mov
ror
inc
add
dec
cs
wbinvd
test
movsb
inc
adc
jnp
aam
inc
lods
jl
add
push
sbb
mov
cmp
sub
add
xor
mov
add
add
jle
mov
add
mov
cli
fnstsw
jno
hlt
pop
fistps
xchg
shlb
jge
add
lahf
adc
inc
sub
pop
cmp
jae
nop
mov
push
mov
jmp
out
clc
aas
rolb
cwtl
loopne
jle
lcall
pop
jp
mov
shlb
jmp
mov
sub
outsb
sub
test
dec
jb
lods
jmp
add
inc
push
push
aad
or
adc
je
into
xor
std
jge
cld
gs
cmp
add
mov
inc
pop
mov
add
adc
cld
ja
pusha
add
mov
mov
and
bound
cmp
aad
ja
nop
push
xchg
xor
add
mov
xchg
jo
sbb
adc
insl
hlt
int3
add
lock
xor
cwtl
popa
push
mov
repnz
jge
pop
jno
or
imul
imul
cld
cmpsb
cld
ds
repz
adc
out
add
pusha
pop
xor
cmc
adc
mov
add
dec
test
movsl
push
loopne
pusha
clc
sbbl
xor
arpl
add
repnz
aaa
dec
jmp
add
fwait
lret
xchg
mov
jae
cmc
dec
filds
add
mov
jecxz
ror
out
adcb
mov
div
dec
pop
subb
dec
push
cmpsb
cld
pop
cmpsl
mov
inc
mov
pop
loopne
jge
mov
ds
and
mov
lods
pop
shrl
std
scas
push
fcoms
pop
js
ret
out
scas
stos
les
mov
sarb
rcr
sub
cwtl
jbe
rcl
fcompl
repnz
rorb
xorb
mov
add
roll
fists
jg
push
add
in
mov
test
xchg
int
out
mov
sbbb
sub
and
inc
mov
fs
cs
roll
sbb
pop
pop
test
mov
lods
mov
outsl
loope
mov
mov
loopne
xchg
out
adc
add
mov
push
cmp
mov
fiadds
cmp
cwtl
mov
enter
push
aad
xor
fnstenv
nop
int
mov
test
inc
push
mov
inc
arpl
cs
sarb
mov
push
mov
in
dec
sahf
cmp
or
pop
popf
dec
add
mov
mov
dec
mov
xlat
mov
mov
ljmp
mov
fs
jg
xor
and
sbb
sbb
cmpsl
popf
mov
cltd
sub
pop
xchg
aas
sub
sbb
jecxz
pop
inc
cltd
inc
pop
mov
sub
xor
and
push
cmp
adc
push
retw
dec
or
dec
and
bound
stc
popa
mov
sub
imul
insl
jbe
mov
sti
mov
or
push
xor
add
jmp
aad
out
and
sbb
jmp
test
fsubrs
loopne
push
gs
cmovl
insb
sub
jge
popa
sub
ret
and
dec
or
mov
sub
mov
and
jge
add
divb
sub
imul
mov
xchg
add
mov
mov
sti
cmp
mull
mov
inc
sbb
add
push
lds
add
mov
mov
pop
add
pushf
cltd
outsl
pop
js
subb
aaa
pop
mov
adc
add
punpckhdq
mov
jno
cmpsl
mov
and
xchg
cwtl
insl
in
dec
xchg
fists
enter
test
lcall
pop
lret
roll
mov
mov
nop
js
jle
addb
xchg
dec
inc
add
sbb
test
aam
mov
call
or
inc
lea
hlt
setb
nop
add
mov
add
iret
insl
mov
shll
idivb
int3
adc
andl
sub
add
les
lock
jmp
rcrb
xor
push
lods
dec
add
push
out
mov
movsb
test
loope
jne
fs
sahf
or
cmp
mov
add
insl
mov
jbe
pushf
push
or
incl
xor
jns
shlb
jl
add
mov
stos
icebp
jp
fcoms
sub
xchg
add
push
inc
cmp
mov
loope
test
cld
inc
adc
aad
fdivs
or
mov
in
nop
ja
and
sbb
ficompl
adc
in
mov
mov
pop
jecxz
and
subl
mov
loopne
jl
mov
into
mov
add
hlt
sbb
add
push
jle
add
mov
repz
lahf
push
xlat
fdivrl
pop
add
pop
and
sub
adcb
js
xchg
fsts
inc
daa
jb
imul
add
mov
xlat
pop
add
out
mov
cwtl
out
jl
mov
mov
in
lods
sbb
ljmp
shrb
cs
or
out
dec
add
repnz
add
stos
fwait
imul
add
dec
pop
lods
out
enter
mov
jl
ret
in
add
test
mov
fstl
adc
pusha
mov
sub
push
lock
push
fdivs
lds
mov
add
push
adc
insb
imul
add
int3
sub
aam
dec
mov
int
add
jo
cwtl
add
rorb
stos
add
lods
clc
cld
jmp
pop
push
inc
decb
push
aas
loope
add
imul
sti
test
mulb
inc
mov
sub
inc
xor
imul
xor
xchg
hlt
adc
sub
ret
jno
cmp
sub
fidivrl
mov
or
or
maskmovq
negl
fildl
fidivrs
or
inc
lahf
push
and
and
pop
roll
popf
aas
add
out
or
xchg
and
mov
cltd
sub
mov
and
negb
jb
ja
pusha
in
mov
add
out
xchg
imulb
fcmovbe
add
xor
sbb
jno
adc
add
sub
std
inc
cmp
add
xor
xchg
in
inc
push
push
popf
dec
xlat
rclb
dec
dec
cmpsb
xchg
pop
mov
pop
inc
aam
cltd
flds
or
cmp
mov
hlt
dec
jno
xor
dec
add
ss
add
ds
dec
pushf
adc
xchg
xorl
rol
xlat
xchg
in
mov
cmp
adcb
pop
loope
hlt
xchg
cmpsl
and
pop
fmuls
das
in
jb,pt
fldcw
mov
loop
pop
lods
add
popf
jb
aas
dec
xchg
nop
sub
push
push
mov
stos
push
add
push
das
jle
inc
pop
sub
test
adc
add
push
jo
call
jbe
adc
sar
mov
push
push
das
pop
scas
insb
xchg
ret
or
popa
js
cmp
clc
inc
roll
lock
xchg
push
in
pop
push
mov
or
fs
mov
pop
or
fadds
add
stos
ret
cwtl
pop
or
push
cmpsl
lods
pop
aas
shl
subb
inc
pop
sar
push
jp
lret
xchg
fsubl
cmpsb
out
push
arpl
xor
sub
cmp
jne
push
lret
test
mov
cmp
add
sarb
iret
daa
test
lea
fs
xchg
mov
mov
dec
dec
lea
fstl
call
daa
pop
nop
dec
mov
and
test
out
in
adc
movsl
push
add
out
mov
in
loopne
xchg
bound
nop
cld
pop
insl
popa
adc
pop
mov
and
inc
int3
in
push
nop
inc
rcll
mov
test
adc
cli
cmp
mov
mov
fs
add
jo
or
mov
fmuls
daa
fwait
sldt
push
push
bound
mov
jnp
repz
rclb
cwtl
mov
negl
jl
ja
jle,pt
sub
aaa
loopne
mov
inc
std
sub
es
in
aas
in
lahf
cltd
divb
dec
xor
test
push
cmp
cmp
sbbl
xor
sahf
daa
outsb
xor
loope
mov
add
lods
shrb
xor
out
add
xchg
push
scas
movsb
sarb
outsl
mov
daa
test
jmp
add
pop
call
sbb
or
les
mov
test
leave
leave
and
sub
adc
mov
xchg
in
rolb
mov
test
xchg
aaa
movsb
and
repnz
dec
jp
std
cltd
and
cpuid
push
inc
mov
mov
enter
out
add
push
mov
mov
addr16
mov
or
jae
mov
jge
js
or
dec
sbb
ja
fcomi
mov
or
add
mov
mov
add
sbb
shll
or
xor
inc
sbb
cmp
rolb
jbe
cmc
mov
xor
orb
mov
loopne
decb
jp
std
lcall
sbb
and
rcrb
stos
xor
adc
jp
xor
ja
outsb
cmp
push
pop
dec
gs
sbb
movsb
in
push
lods
enter
in
jg
notb
xchg
lea
xor
test
dec
sub
mov
mov
sbb
inc
mov
adc
out
mov
ret
and
add
push
xor
rcr
std
add
jle
mov
pop
jl
into
xor
loopne
clc
cmc
ss
cltd
add
aas
inc
pop
ljmp
ret
testl
pop
lret
test
data16
movsb
int3
hlt
add
loop
mov
or
icebp
mov
fwait
insb
pop
cmp
pop
add
xor
and
ret
lahf
lahf
fsts
add
mov
sahf
push
add
notb
iret
add
push
add
mov
fidivrl
jo
jbe
ret
add
les
repz
dec
pushf
sbb
add
pop
js
mov
xor
cwtl
je
movsl
jae
aam
jnp
sub
add
push
sub
add
fidivrl
xchg
out
add
jge
in
in
inc
sub
adc
or
xlat
call
xchg
cmp
xlat
ljmp
add
shl
fdivrl
ret
push
mov
jo
es
mov
mov
mov
add
cld
cmp
sub
ljmp
fidivs
dec
es
pop
jnp
pop
clc
stos
add
mov
sahf
aaa
lds
inc
lahf
leave
and
notl
dec
and
pop
push
pop
xchg
stos
cmpsb
jne
pop
lods
mov
pusha
mov
sbb
adc
lds
movsl
mov
push
sub
lock
dec
std
xchg
and
rolb
push
inc
pop
out
mov
loopne
icebp
add
out
repnz
sbb
xchg
add
xor
sbb
pop
push
cmp
and
out
imul
movsb
mov
shr
fsubrl
inc
cmp
mov
jae
mov
movsb
xor
rolb
add
and
loop
add
cli
jns
sbb
in
mulb
sub
addr16
mov
fstp
scas
push
cwtl
jp
add
push
test
ret
mov
ljmp
sbb
subl
add
or
xor
out
fcompl
pop
add
cwtl
stos
cli
outsl
xor
lods
jne
mov
pop
jno
es
add
and
sahf
add
dec
pop
or
ljmp
and
cmp
lahf
xor
orl
add
and
mov
pop
subl
testl
mov
pop
pop
lods
repz
pop
and
mov
inc
jl
add
sub
jns
jbe
push
add
fisubs
aam
pushf
fwait
push
mov
pop
cwtl
imulb
dec
xor
pop
fistpl
pop
pop
loop
pop
sbbb
mov
rorl
xchg
sub
mov
cld
hlt
push
pop
test
mov
das
lret
repz
or
and
lods
gs
push
movb
mov
pop
sub
add
pop
fmul
mov
add
mov
shr
mov
and
loopne
aam
mov
pop
mov
xchg
add
cmpb
or
movsb
mov
pusha
lea
add
in
jo
repz
in
mov
test
sub
fs
mov
jge
jmp
icebp
nop
cld
pop
ja
ret
addr16
add
and
lret
mov
rcrl
sti
jge
add
pop
or
pop
loop
add
aam
add
xchg
ret
and
rclb
repnz
push
inc
sbb
addb
xor
fisubl
dec
cltd
nop
push
mov
add
sub
pop
push
outsb
sarl
rolb
ret
movsb
out
aam
dec
dec
add
jecxz
mov
out
jno
xchg
or
jb
lock
push
jns
pop
push
rcr
mov
inc
cmp
mov
ret
mov
push
int
cltd
adc
iret
sub
sbb
loopne
stc
mov
and
fidivs
mov
jbe
and
jmp
push
std
movsb
repnz
test
xchg
xchg
sbbl
add
mov
sbb
test
sub
or
pop
imulb
jbe
es
xchg
dec
popf
jp
jmp
bnd
sbb
addb
loope
mov
jbe
xchg
xchg
add
mov
test
pushw
ds
addl
into
xchg
and
leave
lahf
daa
data16
add
loop
out
mov
push
sub
je
add
inc
cmp
jge
dec
and
mov
mov
xchg
mov
jg
add
lea
popf
add
inc
arpl
jle
push
inc
jge
and
adc
xchg
outsl
lahf
call
sub
push
jge
insb
sbb
pusha
sub
push
inc
ret
mov
jb
loopne
add
scas
jo
push
fldl
mov
je
sub
inc
sbb
jle
rolb
ljmp
jb
dec
sbb
fidivs
or
sub
and
fadds
pop
add
push
ret
icebp
cwtl
out
jle
xor
mov
xchg
movsl
mov
jae
lcall
loope
fistl
push
leave
or
decl
jg
pop
mov
mov
add
jge
or
icebp
xor
jmp
into
int3
dec
jae
inc
xor
xchg
add
xorl
jl
adc
mov
push
iret
mov
jge
cli
sbb
lods
shlb
add
fs
push
ss
fsubl
and
lods
add
sbb
push
inc
dec
cmp
xchg
push
sbb
lods
mov
inc
mov
adc
pop
push
adc
cmp
je
out
call
popf
add
std
mov
and
das
add
mov
inc
das
add
test
mov
mov
xlat
sbb
mov
inc
smsw
cwtl
and
lgdtl
adc
iret
fnsave
cmp
mov
push
dec
or
push
push
adc
mov
enter
cmc
or
sub
daa
inc
mov
xor
sbb
jnp
lea
cmp
dec
adc
or
mov
lret
outsb
pop
lea
loope
push
daa
inc
xor
pop
inc
cli
or
scas
cmp
add
es
push
cmp
jmp
imul
fwait
xor
inc
xchg
dec
dec
add
mov
sbb
xor
jmp
cmp
add
mov
and
or
push
sbb
stos
adc
test
add
js
inc
ja
test
sbb
pop
or
dec
pop
sbb
mov
aam
es
mov
pop
cli
inc
and
icebp
leave
lods
mov
push
cmp
push
add
add
cltd
mov
add
rorl
hlt
add
testl
je
shlb
gs
pop
out
jne
rcr
das
sbbb
lahf
pusha
std
cld
sahf
xor
in
adc
pop
adc
adc
adc
mov
pop
add
leave
icebp
nop
add
xor
mov
xor
inc
cltd
jns
sub
xchg
dec
stos
jno
sar
xor
adc
rcll
cmp
clc
cwtl
or
jno
incb
shll
and
iret
add
ja
aad
mov
cmp
push
sarl
dec
mov
inc
cmp
in
mov
sbbl
sti
pop
imulb
inc
rcrl
and
add
aaa
std
add
dec
inc
dec
fmuls
test
mov
lea
add
mov
and
shrb
pop
add
pop
imul
les
mov
int3
daa
jge
add
push
pop
dec
out
das
lock
pop
add
add
imul
fs
cmp
push
cltd
enter
dec
push
push
jmp
adc
lock
cmp
add
icebp
mov
xor
push
das
jl
arpl
je
or
jl
mov
cmp
xchg
mov
in
inc
pushf
inc
mov
dec
push
mov
int
pop
mov
gs
and
mov
xchg
dec
arpl
cmp
pop
leave
push
mov
or
ficoms
addr16
imul
inc
add
dec
mov
or
in
cli
mov
pop
aad
popl
mov
or
mull
in
js
xor
push
dec
push
cmp
mov
imul
xor
pop
add
xchg
and
inc
shlb
popa
xor
in
cwtl
rcrb
adcb
jp
pop
insb
gs
movq
push
push
in
je
mov
popf
add
pop
cwtl
mov
jp
sbb
sar
dec
pop
xor
push
fsts
add
pop
pusha
inc
cmp
cmp
mov
psubb
inc
aas
rorb
or
pop
and
stos
arpl
stos
xor
outsl
xchg
addr16
movsb
jo
call
fnstenv
pop
add
stos
sbb
mov
mov
jnp
mov
cmp
data16
xchg
jo
cs
int3
arpl
push
pop
jnp
add
inc
xorb
and
and
mov
mov
shrb
lds
roll
push
xchg
adc
loop
lods
in
cs
fistl
sub
aad
mov
jle
rolb
cltd
mov
inc
sti
pop
push
and
sbb
add
iret
gs
mov
mov
rorb
cltd
aam
popa
icebp
lods
int3
add
cmp
je
inc
mov
lock
iret
lahf
adc
adc
xchg
addr16
pop
out
add
cld
xchg
cmp
pop
test
cmp
je
pop
mov
mov
mov
int
jmp
cmp
mov
lret
mov
sub
sarl
inc
pop
xor
cli
cmp
pop
ljmp
inc
bound
in
and
inc
mov
add
stos
add
jge
mov
xabort
mov
or
stos
inc
cld
xchg
add
out
int3
lods
fiadds
jne
pop
cmp
mov
cmc
push
mov
cltd
and
adc
add
cmp
push
call
out
and
or
or
and
mov
mov
cwtl
sub
jg
pop
icebp
je
stc
adc
add
xor
repz
add
stos
test
sub
add
cmp
es
les
or
into
ficoms
inc
or
add
mov
imul
loopne
and
inc
adc
ss
xchg
inc
fs
nop
adc
psraw
jbe
mov
ja
aas
cmp
cmpb
add
hlt
aas
jmp
lock
adc
adc
aad
addl
repz
test
add
sbb
das
and
or
ret
sub
inc
dec
pop
aad
int
loop
jb
mov
ljmp
mov
lds
jmp
push
mov
mov
mov
out
jo
add
dec
bound
cmp
aas
fwait
cmpl
adc
mov
xchg
lods
pop
mov
cmp
mov
lock
lret
loopne
cltd
shlb
das
pop
add
addb
rclb
cld
out
cwtl
movsb
inc
lea
push
jp
pop
xor
jno
xchg
test
push
and
sub
jmp
xorb
jo
pop
les
call
cmp
outsl
imul
mov
add
add
jae
add
push
jnp
fwait
mov
push
scas
cltd
cwtl
and
leave
cmc
inc
pop
es
movsl
adc
mov
ret
inc
adc
popf
mov
adc
push
dec
add
int
cmp
pop
push
sahf
pushf
and
pop
scas
cmp
lea
or
je
xchg
dec
cwtl
sbb
out
in
leave
js
out
add
mov
rorb
insb
pushf
dec
inc
shlb
popa
pusha
sbb
in
popf
aas
hlt
popl
cld
out
sahf
les
push
loop
add
mov
add
add
add
gs
ja
and
pop
ret
add
je
mov
pushf
adc
mov
in
mov
mov
jge
nopl
cltd
test
shrb
in
lods
ss
pop
mov
js
inc
fimull
andl
clc
mov
or
dec
out
adc
pop
add
shrb
sub
scas
mov
xchg
xor
fmuls
cmp
ss
fs
add
std
pop
ret
adc
and
gs
mov
mov
movsl
add
sbb
cli
xchg
jno
push
lret
mov
xchg
xor
add
sbb
mov
pop
fcoml
data16
nop
in
pop
adc
mov
and
stc
ss
pmaxub
jmp
xchg
adc
rcl
in
mov
movsl
add
mov
add
rcrl
sahf
cmp
mov
pushf
mov
lahf
sahf
mov
icebp
mov
leave
xor
push
and
add
jno
stos
cmc
fstps
das
jo
xorl
mov
iret
or
sub
cmp
inc
cmp
add
loop
xchg
xadd
or
mov
rolb
adc
mov
add
sahf
add
dec
add
xor
loopne
test
jns
or
mov
dec
sbbl
push
mov
adc
jp
int3
or
pop
loop
sbb
imul
add
ja
nop
add
xchg
pop
adcb
in
add
cs
shrb
sbb
or
mov
add
add
stc
jge
push
add
add
das
adc
push
xchg
mov
in
mov
add
sub
adc
das
xchg
xor
test
jl
mov
add
lret
jae
sbb
or
jo
mov
loopne
push
rclb
icebp
push
push
pop
xchg
xor
adc
add
roll
mov
push
mulb
je
and
add
mov
jmp
adc
aas
mov
sbb
orl
mov
fmuls
inc
push
add
inc
add
out
mov
in
pushf
sbb
push
cmp
pop
insb
mov
cld
and
add
push
xchg
fists
inc
dec
pop
and
cli
pop
add
in
lea
loope
add
das
in
xor
dec
sbb
sub
lcall
adc
inc
add
adc
push
xchg
push
shl
sbb
xor
fwait
or
ret
gs
cmp
loope
out
xchg
roll
imul
inc
inc
xor
out
pop
sub
hlt
pandn
inc
leave
jae
nop
outsb
fdiv
mov
nop
enter
dec
sbb
pop
rcl
xor
ret
add
int
xor
lock
aaa
outsb
adc
lods
std
test
adc
xor
dec
js
and
mov
jbe
pop
cmp
enter
push
xchg
fwait
pop
adc
jmp
daa
cs
andb
add
fldenv
jo
shll
ds
push
xchg
js
das
in
sbb
orl
mov
mov
inc
js
arpl
fadds
iret
decl
leave
lea
add
cltd
test
pop
xlat
ss
pushf
push
rolb
stc
jno
add
test
daa
add
mov
add
sbb
push
xchg
inc
dec
dec
mov
fldl
cmp
jmp
fidivs
push
scas
sub
icebp
fld
mov
jne
in
mov
jl
add
dec
std
or
mov
test
fdivs
inc
shr
mov
dec
xchg
and
pop
les
dec
mov
sbb
inc
test
cwtl
lret
push
xlat
cmp
ss
mov
les
or
fs
mov
push
jns
ja
xor
shll
fldl
jno
mov
xor
adc
popf
test
add
mov
add
or
aaa
push
push
or
and
cmc
push
mov
cmp
mov
nop
divb
pop
sbbb
xchg
cld
add
lea
fdivs
xor
lfs
jmp
stos
add
sarl
out
mov
mov
adc
add
jns
sub
adc
push
xor
pop
cs
sti
cmp
cmp
add
add
jns
mov
and
inc
arpl
shl
jno
cmp
inc
cs
pusha
push
xchg
mov
sub
into
mov
add
xor
pop
sub
lds
int3
int
fadd
sub
out
bound
or
inc
clc
add
push
dec
scas
sbb
stc
into
iret
inc
jno
mov
les
js
mov
clc
in
ljmp
cs
sub
inc
dec
mov
in
gs
pop
xor
sub
lret
and
push
xor
je
dec
adcb
ljmp
inc
sub
dec
and
mov
push
testb
xor
nop
hlt
cmp
xor
pusha
pop
daa
scas
push
add
pushf
xchg
test
loopne
mov
jne
lock
inc
xchg
btr
adc
jle
dec
mov
add
mov
int3
orb
and
pop
cmp
add
out
aaa
sub
inc
pop
add
negl
mov
mov
xchg
cmp
jp
fcoms
movsl
mov
dec
addr16
sbb
xor
dec
dec
pminsw
mov
out
mov
add
dec
sbb
dec
push
insb
add
movsb
inc
xor
aam
insl
and
xchg
fistpl
rorl
hlt
and
add
call
lods
test
in
cmp
mov
leave
int3
dec
lret
sbb
mov
fisubl
dec
inc
std
mov
mov
nop
inc
int3
xchg
pop
cs
lcall
mov
add
dec
push
sub
add
adcl
pop
loope
pop
add
and
push
jo
mov
pop
sub
mov
lock
orb
add
test
ds
add
mov
add
lahf
jo
sub
mov
popf
xorb
rcll
add
or
cmp
jmp
xor
and
dec
or
mov
cmp
icebp
adc
test
sub
cmp
pop
adc
add
jecxz
mov
in
xor
pop
int
addb
xchg
push
push
aaa
push
pusha
in
inc
dec
or
adc
add
fsubp
imul
in
out
jmp
mov
lods
imul
push
stos
and
jbe
lcall
xor
sbb
clc
sbb
cltd
ja
pushf
add
fs
inc
fisubrl
js
mov
pop
mov
adc
cmpsb
sub
orb
mov
mov
or
bound
add
xor
call
inc
pop
adc
add
int3
das
add
pushl
