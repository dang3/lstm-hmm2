mov
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
xchg
push
es
fdivl
inc
clc
sub
push
xchg
clc
fsubs
icebp
sbbl
js
fldcw
imull
rcll
add
cwtl
xor
sbb
mov
adc
sahf
aas
fcmovnb
fstl
loopne
inc
lret
inc
stos
mov
sbb
push
outsl
hlt
jns
pusha
mov
pop
pop
imul
push
or
fidivrl
sub
sbb
add
push
or
sub
mov
mov
jmp
sbb
adc
fs
pop
andb
pop
cmp
push
xor
in
ljmp
and
aam
dec
pop
sub
cwtl
es
ljmp
add
cmp
jp
fsubp
xchg
ret
dec
cmp
cmpsb
mov
cs
push
jae
jne
fcompl
lcall
dec
ret
std
mov
push
push
push
jp
and
mov
dec
pop
mov
or
mov
arpl
sbb
push
mov
push
sahf
stos
cltd
ret
or
inc
push
pop
scas
out
pop
or
mov
mov
jb
icebp
push
pushf
mov
sbb
cmc
cmpb
loope
push
and
xchg
std
roll
xor
fwait
sbb
ljmp
dec
int
cld
pop
mov
mov
ljmp
mov
rolb
cmp
pop
or
adc
jecxz
cli
jb
cmp
movsl
out
shll
adc
outsl
jno
aas
loope
mov
adc
dec
cwtl
dec
lds
repnz
movsl
loopne
out
imul
cmp
lret
in
bound
push
data16
xlat
outsb
fisttps
inc
sub
aad
std
sub
add
jp
jle
in
add
dec
out
or
insb
xor
xor
pop
bound
shl
dec
mov
mov
into
stos
addl
fcoms
scas
pop
lock
lcall
add
loope
sub
mov
test
je
mov
insl
nop
sub
mov
ds
adc
lock
xor
xchg
adcl
sti
lret
xchg
sbb
xchg
mov
mov
popa
aam
dec
iret
xor
and
mov
inc
jb
jb
iret
bound
dec
int
test
daa
jmp
mov
dec
mov
ret
aad
ficoms
adc
dec
sub
mov
mov
scas
xchg
sub
add
enter
outsb
repnz
outsl
add
into
push
xchg
int3
lret
in
mov
push
gs
adc
xchg
mov
nop
and
pop
popf
adc
outsl
add
mov
push
ds
scas
jp
xor
xor
mov
or
lods
pop
cmp
cmc
jmp
lea
cli
cmp
push
pop
pop
popl
dec
rcl
inc
leave
xor
fildl
jmp
aas
outsl
mov
lret
cmp
mov
js
adc
push
or
push
leave
fdiv
mov
mov
mov
inc
sbb
jbe
or
sbb
ds
push
aaa
movsl
pop
push
js
movl
sbb
insl
pusha
and
adc
jp
popa
sub
sub
jmp
mov
ficoms
or
pop
jo
and
pop
jle
add
out
push
mov
lods
add
dec
xor
jle
mov
cmp
pop
push
xor
ror
test
or
pushf
sub
cmp
icebp
and
inc
sbb
lahf
mov
paddusb
loop
jge
rolb
inc
std
xchg
adc
loope
shlb
sbb
rorb
lahf
cmpsl
and
pop
mov
jns
nop
std
jmp
loop
lea
or
std
sahf
cmp
or
cmpb
loopne
sbbb
push
lret
mov
stos
loopne
xchg
inc
push
mov
jb
add
add
cli
jg
add
xor
lods
sbb
sub
adc
adc
xor
repz
inc
add
sub
mov
bound
sahf
push
mov
jmp
cmp
out
sbb
jecxz
sub
bound
stos
stc
orl
loop
int3
popl
sbbl
mov
dec
jne
rcll
incb
adc
out
cmp
cmp
sub
sbb
out
pushf
ret
imul
ret
or
fimull
push
xlat
add
lahf
adc
inc
cmpsb
push
xor
arpl
jo
ret
mov
repnz
movsl
jle
or
mov
or
or
lods
lret
mov
ret
and
inc
mov
repz
cmp
dec
rcll
lods
scas
fstpl
xchg
daa
push
push
xchg
fimuls
lds
mov
std
mov
fadds
jle
adc
push
sub
in
mov
leave
inc
ds
rolb
arpl
lret
add
fimull
movsl
or
jle
adc
push
fsts
or
mov
push
cmc
icebp
movsl
push
pop
pop
rcrb
cmp
sbb
or
sbb
lds
adc
das
cmp
inc
mov
inc
jmp
push
stos
lret
stos
adc
inc
mov
nop
in
push
sarb
fcoml
cmp
sbb
stos
jo
loopne
popa
jmp
ret
dec
loopne
jns
inc
mov
cltd
sub
pusha
mov
int
subb
cmp
and
movsb
test
aad
or
pop
add
int
lret
out
in
repnz
xchg
pop
je
jp,pn
nop
mov
aad
dec
lret
pop
inc
fnsave
lret
push
data16
loop
lret
fidivl
xchg
pop
into
jae
ficomps
mov
mov
in
or
imul
filds
testb
cmp
mov
adc
xor
add
or
add
lret
add
push
xor
mov
lret
fs
pop
cmp
jle
mov
test
adc
aaa
test
in
jne
test
notl
ficompl
testb
js
fisubrs
lods
test
lcall
or
adc
and
test
push
xor
movsb
push
outsb
aam
adc
inc
or
inc
sub
add
jbe
sub
jb
outsb
jnp
mov
or
lahf
adc
cs
mov
mov
xchg
lds
xor
or
mov
xor
xchg
xor
mov
pushf
std
xor
roll
int
push
aam
dec
mov
add
into
and
lock
fisttpll
fwait
push
and
bound
push
andb
jne
pop
mov
dec
pop
mov
lods
mov
andb
mov
popa
ret
pushf
sbb
mov
mov
cmpsb
lods
and
push
dec
data16
dec
imul
inc
jae
xor
lock
gs
lock
add
xchg
out
loope
mov
lret
es
lret
nop
dec
fldcw
loope
cmp
mov
push
dec
in
fld
push
cmpsb
mov
lret
sub
sbb
mov
leave
pushl
xchg
add
imul
lret
cmp
stos
cmc
mov
mov
cmc
clc
xchg
and
ds
popa
mov
jnp
loop
movsl
rcr
dec
data16
jbe
cli
mov
mov
hlt
test
cld
loop
out
mov
mov
mov
arpl
sbb
adc
xor
and
or
mov
jnp
shlb
push
jbe
or
xchg
inc
dec
or
fildl
push
movsb
inc
ffree
and
inc
ja
sub
sbb
cld
fs
sbb
rcll
push
call
aam
inc
xchg
pop
or
xchg
xchg
inc
loop
inc
fildl
push
adc
inc
push
push
xchg
in
add
sub
xor
mov
cld
loop
fildl
mov
pop
sub
sbbb
clc
pusha
pop
adcl
mov
mov
sbb
pop
outsl
and
lock
push
rcll
das
fistpl
ljmp
adc
subl
icebp
and
and
push
xchg
je
xchg
bound
iret
inc
mov
mov
xor
cmpl
push
ffree
dec
cmpsb
iret
lods
out
ret
mov
pusha
sti
push
icebp
mov
shll
or
cmpsb
addr16
enter
shlb
adc
sub
clc
lcall
or
sbb
adc
pop
push
in
sbb
add
loope
xor
jns
enter
sbb
jns
dec
adcl
insl
and
ficompl
lea
popa
mov
subb
ret
aam
dec
fs
lcall
rcrb
mov
leave
hlt
cli
outsl
add
mov
mov
aad
enter
pop
and
add
and
or
cmp
leave
sbb
dec
cltd
gs
xchg
sti
scas
imul
mov
mov
or
ja
inc
cwtl
and
into
cltd
aam
pop
es
test
push
les
dec
mov
pop
cmp
push
cld
enter
and
ljmp
imul
jle
lock
bound
pusha
ret
mov
xchg
or
xor
xor
mov
sbb
jb
inc
sub
dec
pop
or
mov
lahf
push
cmp
adcb
jl
and
cld
mov
xor
jno
clc
mov
pop
adc
push
xchg
loop
cmp
mov
cmp
mov
pusha
js
jno
mov
in
jp
mov
stos
negb
cmp
ret
jbe
cltd
xor
stc
dec
dec
pop
in
mov
adc
and
addl
lods
or
mov
ljmp
pop
in
ja
lahf
outsl
push
outsb
adc
cmp
or
fisttpl
ret
pop
push
sbbb
fnsave
ss
jo
inc
das
cmp
xchg
rorb
xor
insl
jl
clc
xor
sahf
aam
or
rcrb
push
imul
cmp
xchg
loope
cmc
push
or
lret
add
clc
cmp
jbe
fstpl
jb
add
popf
addr16
xor
inc
mov
adc
add
mov
or
and
or
mov
inc
mov
mov
mov
pusha
xor
sub
mul
pop
push
xchg
pushf
je
mov
cli
jmp
dec
sub
rorb
mov
and
stc
xchg
fcomip
mov
jmp
aad
add
mov
out
mov
test
mov
lret
cmp
mov
dec
xchg
jge
cmpsb
arpl
sub
aaa
and
dec
jl
arpl
cs
cwtl
sub
fstpt
leave
xchg
mov
xchg
mov
and
cmp
cmp
loop
xor
jmp
push
out
mov
or
mov
dec
jns
ret
inc
aam
pusha
scas
imul
or
fistps
sbb
xor
fcmovnu
mov
inc
mov
sti
sbb
mov
inc
imul
sahf
out
xchg
jmp
cmp
jmp
into
sub
aaa
push
aaa
test
dec
fiaddl
sub
or
sub
shlb
sbb
dec
lock
pop
sbb
cld
mov
dec
push
sub
push
inc
mov
mov
cmp
xchg
sub
cmp
orb
mov
sti
fstl
cmpsl
sbb
jecxz
stos
jne
aas
xchg
aam
add
xor
push
outsb
mov
jbe
mov
cmp
jae
xlat
sbb
rcll
inc
jno
and
xchg
inc
es
cltd
test
cwtl
jecxz
and
popf
adc
pop
orb
enter
inc
xchg
and
aaa
dec
xor
dec
mov
add
xchg
test
push
xchg
stos
pop
mov
sub
cmp
mov
stos
arpl
mov
jl
shrl
lcall
icebp
and
into
and
divb
out
js
cmp
xor
xchg
cmp
push
sub
mov
cwtl
push
cmpsl
ud0
inc
mov
outsl
out
mul
insb
and
sbb
or
ds
add
idivb
movsb
xor
pop
add
ret
stc
or
fsubr
pop
dec
pop
aad
mov
fs
sub
lret
or
xor
lods
les
int
stc
fsub
mov
shlb
adc
fistpl
pop
adc
dec
loope
push
xchg
hlt
cld
add
ror
int
dec
fs
push
push
mov
or
lahf
inc
enter
or
loop
rcrb
inc
lods
jle
popa
mov
pop
hlt
sar
adc
xchg
dec
and
insb
push
aas
pop
sub
ret
cmpsb
push
jns
inc
test
jno
dec
pop
in
insb
pop
mov
std
cli
in
out
ror
les
mov
out
add
fidivl
mov
scas
mov
popf
test
push
sub
addr16
test
xchg
fisubrs
mov
pop
fldt
lock
mov
pop
sbb
push
nop
negb
nop
ror
out
scas
sub
xchg
insl
mov
fiaddl
cmp
jbe
mov
mov
cmc
scas
push
mull
jle
fwait
stos
sub
enter
mov
or
repz
sub
xchg
add
dec
jnp
xor
sub
fists
cld
cli
dec
int
repz
stos
ret
fwait
loopne
fildll
lock
adc
and
xchg
in
adc
xor
xlat
xchg
adc
jg
adc
cli
iret
adc
iret
xchg
popa
hlt
lahf
shrl
in
add
xchg
js
lds
ljmp
fbstp
or
sbb
out
lods
test
in
lcall
scas
les
inc
push
jb
xor
adc
inc
es
mov
lret
xchg
push
push
rol
dec
shrb
cmpsb
push
sub
fnstenv
int
dec
jmp
mov
mov
push
sbb
shlb
movb
inc
fbld
shr
leave
fnstsw
mov
and
xor
clc
add
stos
jmp
mov
pop
or
inc
lds
data16
dec
in
xchg
mov
bound
sub
xchg
mov
jmp
push
cmpb
movsl
bound
jge
jo
shr
sbb
lods
cwtl
mov
jge
cmp
push
cli
cli
enter
xchg
add
mov
jmp
daa
push
push
mov
addr16
mov
cld
aad
sarl
inc
sahf
sahf
aas
sbb
mov
shlb
jl
add
pop
fwait
pop
pop
jmp
fcompl
fwait
out
outsb
fmull
jle
mov
testb
ret
pop
jns
scas
test
jbe
mul
xor
jmp
xchg
cltd
nop
mov
push
rolb
dec
inc
ja
adc
jbe
adc
out
gs
hlt
sub
dec
xchg
adc
sbb
jne
mov
dec
sbb
stc
idivb
mov
fwait
sub
sub
jmp
mov
cmp
push
repz
idivl
sti
inc
rcrb
xchg
roll
or
sbb
lea
jp
add
add
mov
xor
imul
xchg
fwait
sahf
dec
push
test
mov
stc
lea
jae
cmp
push
loopne
pop
add
bound
add
notb
jecxz
shl
adc
jmp
xchg
xor
outsb
mov
jge
mov
mov
js
or
stos
ljmp
jne
pop
push
jne
cmp
lds
in
xlat
cmp
imul
lds
jne
das
sbb
add
in
xor
gs
imul
push
insb
icebp
inc
fsubrl
jle
fs
adc
adc
jg
cld
inc
lods
repz
jp
xchg
lock
in
mov
cmp
decb
sbb
jbe
mov
adc
xchg
xchg
sub
das
add
jbe
repz
sbb
stc
loopne
sbb
xchg
pop
add
mull
cmp
dec
ljmp
or
clc
sbb
sbb
iret
inc
es
test
inc
cmpsl
cmp
mov
sub
cli
sub
inc
xor
fs
push
xchg
adc
push
cwtl
jecxz
mov
push
outsl
scas
gs
xor
push
mov
push
xchg
sub
addb
dec
mov
sbb
lods
mov
test
ljmp
push
loop
pop
adc
mov
cmp
push
pop
es
popa
rcll
cmp
je
and
out
jnp
xchg
ret
pop
xchg
jmp
and
xchg
movsl
sbb
xor
inc
int3
xor
cmp
movsl
jecxz
xor
mov
xchg
inc
pop
test
call
push
es
cmp
push
mov
jnp
sub
or
xor
or
xchg
add
mov
push
mov
and
push
or
sbb
push
stos
add
imul
sti
and
mov
daa
and
dec
outsl
or
popf
jp
jnp
jge
icebp
mov
pop
clc
xchg
cmpsl
xchg
ficomps
push
aas
push
ss
ret
in
jmp
mov
inc
aam
sti
cmpsb
lods
pop
in
xchg
mov
push
push
push
or
add
negb
xchg
inc
inc
xor
sub
bound
lret
sbb
call
mov
xchg
repnz
lock
mov
loop
mov
or
test
push
sbb
lods
call
notl
sbb
dec
dec
mov
push
int
imul
ds
in
ret
mov
xchg
push
arpl
jmp
cmp
mov
out
loopne
aaa
sahf
dec
mov
repz
adc
outsb
mov
es
mov
mov
enter
sbb
mov
movsb
mov
int
xor
in
pop
jns
sub
loop
rolb
xchg
push
mov
pop
jnp
dec
push
fwait
xchg
cli
decb
xlat
imul
push
jge
vaddsubps
dec
fisttpl
sbb
test
loope
js
pop
in
inc
mov
sub
fstps
jbe
sbb
push
lret
xchg
mov
addr16
add
jl
and
inc
xchg
adcl
sub
mov
mov
es
lret
test
xor
hlt
xor
xor
hlt
cwtl
shrl
gs
mov
fistps
jbe
dec
jecxz
aad
out
popa
imul
ljmp
loopne
iret
int3
mov
add
movsb
jns,pt
rep
inc
or
adc
pop
or
in
ljmp
mov
andb
inc
dec
sub
fisttpll
dec
xor
and
and
xlat
sub
fcomps
and
sbb
push
xor
inc
or
and
std
aaa
mov
pop
add
adc
sarl
sbb
outsb
pop
test
xchg
lahf
jp
outsb
and
jno
flds
dec
push
pusha
ja
xor
inc
jnp
jl
mov
not
cmp
stos
pop
xor
jae
cmpsb
stos
sarb
jns
or
fwait
push
jne
mov
jle
jge
sub
xchg
mov
pop
test
sbb
mov
ret
fidivrl
xor
loope
adc
jb
movsb
jnp
jmp
int3
sub
cmp
mov
rolb
add
push
mov
ficoms
in
adc
cmp
cmp
push
adc
int3
aas
sbb
adc
mov
inc
fisubl
hlt
mov
cmc
cli
mov
xor
fcmovu
lret
mov
and
xchg
xchg
adc
adcl
xor
insl
cmp
cltd
bound
mov
nop
inc
mov
popa
or
jo
jbe
jnp
loop
ss
je
or
imul
pop
gs
and
imul
sbb
mov
idivl
aam
xchg
jbe
and
cli
imul
imul
xor
fcoms
and
mov
icebp
sub
jl
test
insl
pop
test
ret
adc
ss
clc
dec
jmp
and
dec
loopne
fs
in
mov
dec
adc
es
and
push
and
push
push
sbb
das
xor
cld
int3
add
movsl
std
mov
clc
and
out
pop
and
ss
sbb
fcom
pop
cs
xor
popa
inc
fsubs
jl
push
jnp
xor
icebp
pop
inc
sub
inc
and
push
lcall
or
jecxz
sahf
add
stos
or
mov
add
dec
pop
fucom
pop
shll
sub
insb
inc
sub
pop
mov
mov
repnz
xor
pop
push
decb
imul
hlt
sub
mov
notl
loope
mov
sbb
lea
sbb
pop
testb
test
gs
mov
cmp
dec
add
loopne
lret
icebp
push
mov
sub
in
out
or
pop
movsl
jmp
movsl
movsb
cmc
lcall
fadds
ljmp
jo
test
lcall
into
add
mov
xchg
sub
aam
mov
test
inc
jg
mov
mov
lret
clc
mov
cld
imul
enter
daa
movsl
pop
sbb
lret
push
cwtl
inc
inc
mov
out
fisubrl
add
and
insb
loope
dec
mov
sbbl
in
addr16
push
cwtl
pop
fidivs
cmp
lret
jno
pusha
mov
sbb
bound
or
xlat
mov
jbe
inc
xchg
dec
and
daa
out
ss
lcall
inc
pushf
pushf
lds
shll
jns
lcall
cli
jo
in
dec
adc
lea
and
pop
adc
mov
xchg
cmp
test
mov
in
jnp
ja,pt
std
jge
popf
mov
push
insb
adc
jne
in
int
sbb
in
gs
push
cmpsb
adc
sarl
push
mov
mov
cmp
mov
and
pop
jne
jo
xor
mov
mov
cmp
lods
iret
jnp
stos
or
mov
in
xchg
popa
jns
bound
or
mov
or
sub
fcomp
push
and
sbb
sub
push
sub
insb
push
jg
pop
dec
lock
pop
scas
pop
cmpsb
xor
xor
sub
and
test
arpl
cmp
push
xor
loopne
rorb
mov
mov
mov
int
lret
push
push
mov
negb
int3
daa
xchg
and
sub
add
int3
loopne
stos
dec
mov
insl
lahf
ljmp
lret
je
add
cli
sbb
xchg
xlat
pop
jno
push
jae
out
and
test
adc
adc
add
xchg
cmpsl
stc
in
pop
pop
leave
lcall
xor
movsl
jmp
lods
or
addr16
inc
pushf
daa
xor
cltd
jne
xor
into
sub
add
incl
data16
push
dec
mov
les
lret
sbb
cmp
push
jle
mov
aam
sbb
mov
js
outsl
push
and
lea
aaa
bound
fwait
out
repz
jmp
cmpsl
dec
lcall
mov
cmp
int3
and
jge
out
mov
sbb
cmc
push
das
in
sub
popf
xchg
jge
mov
in
hlt
mov
jo
popf
mov
sbb
out
mov
lret
out
or
push
cli
push
ret
mov
pushf
pusha
ljmp
sub
pusha
fistl
shrl
pop
pop
out
adc
fisttpll
push
dec
std
and
xchg
or
stos
sub
inc
les
inc
mov
and
into
mov
pop
pop
xchg
adc
pop
imul
test
pop
nop
mov
jge
mov
mov
scas
aaa
adc
mov
mov
sbb
xor
jle
arpl
fidivl
stos
addr16
lret
xor
fsubs
mov
cmpsb
lds
jmp
jns
jle
dec
les
mov
lea
xchg
mov
test
fists
imul
ficoml
or
xor
aaa
pushf
xchg
mov
adc
cmp
rclb
scas
jge
out
adc
pop
sete
mov
lret
adc
push
mov
outsb
pushf
xor
cmpsl
in
stos
add
negl
lret
les
fwait
sub
leave
mov
pop
call
xor
dec
imulb
sub
cs
pop
icebp
ss
sub
adc
jmp
notl
cmpsb
push
xor
loop
aaa
pop
xorb
xor
xchg
xchg
dec
sbb
jbe
xor
cmp
push
cmp
inc
out
mov
cld
mov
xor
fbld
add
cli
mov
loope
aam
jecxz
cmpsl
ja,pn
movsl
int3
cmc
aam
sbb
mov
out
mov
ds
call
shll
lret
mov
cmp
xchg
fldl
aad
arpl
lds
dec
push
and
dec
cmp
xchg
test
daa
jne
push
mov
pusha
or
fadd
and
mov
shr
mov
mov
leave
xor
cmp
push
mov
shlb
popa
or
sbb
or
repz
or
ficompl
xchg
out
sbb
or
cld
mov
outsl
cs
xchg
xor
mov
sub
xchg
fmuls
jg
push
sub
aas
push
clc
lea
mov
and
les
stc
test
jb
jp
lcall
arpl
jmp
sbb
pusha
std
lock
mov
inc
mulb
or
dec
cmp
sub
sbb
cmp
jp
jmp
rorb
adc
jbe
jo
stos
shrl
andb
fcompl
inc
test
pop
and
cli
push
inc
xlat
and
rcrl
aad
pusha
jno
cli
popf
nop
orl
ljmp
xchg
dec
pop
and
push
shrb
jae
ljmp
js
cli
adc
pop
ds
das
adc
inc
xchg
mov
jae
push
in
fwait
mov
lcall
or
jae
jno
sub
jle
inc
xchg
test
shl
insb
or
ljmp
or
ret
loopne
mov
std
dec
push
mov
movsb
call
xchg
mov
push
int
xlat
add
cli
mov
lods
clc
or
idivl
push
fstl
imul
loope
pop
xchg
xchg
and
lret
mov
xor
xor
hlt
pop
fisttpl
inc
cwtl
xchg
push
lods
test
ss
in
cmc
out
lds
push
sub
cmp
inc
mov
and
push
lock
inc
call
maxps
push
mov
fwait
mov
hlt
cmp
fdivs
mov
out
mov
rolb
pop
mov
sbb
mov
jmp
scas
addr16
add
dec
xor
cld
arpl
inc
iret
sarb
xchg
mov
adc
mov
ja,pt
push
inc
rcrl
sub
popa
mov
push
mov
jbe
xorb
sbb
rcrb
or
nop
movsb
dec
mov
test
int
mov
call
stos
pop
out
arpl
out
adc
sbb
jns
int
push
and
pop
pop
push
xchg
inc
xchg
xchg
mov
dec
add
adc
xchg
imul
sbb
lahf
add
sbb
js
add
and
xchg
push
push
bound
mov
mov
or
orb
push
cmp
push
sbb
lret
xor
xchg
fbstp
xor
das
out
pusha
mov
pop
xchg
out
jo
cmp
mov
std
lds
in
rcrb
sub
popa
orb
sarl
test
pop
pushf
cmp
mov
ljmp
rcl
adcb
jae
insb
mov
add
das
dec
addr16
fwait
jl
fwait
xchg
sahf
and
push
in
jl
mov
lcall
pop
jb
jl
xchg
mov
outsb
ds
iret
sbb
inc
mov
pop
daa
push
rcrl
sub
std
push
mov
sbb
mov
rolb
cmp
dec
xchg
popa
lds
ja
jb
mov
jecxz
sub
iret
fwait
andl
mov
pop
mov
inc
or
mov
cs
stos
xchg
push
mov
push
xlat
push
dec
sub
loopne
repnz
lcall
ss
mov
cmp
into
stc
ret
push
fists
shr
sub
inc
shlb
fidivrs
shrl
pop
mov
sub
push
sub
jno
repz
jnp
cmp
push
es
icebp
adc
in
js
pushf
jbe
insl
push
jp,pt
sahf
scas
push
adc
cld
add
mul
fisttpl
movb
adc
fidivrs
push
sbb
loopne
cmp
mov
rol
sub
pop
sub
pop
sbb
jecxz
test
lds
cmp
inc
mov
inc
jb
and
jns
jbe
or
inc
jo
or
add
in
imul
testb
addl
dec
ret
daa
pushl
icebp
add
jbe
and
and
xor
inc
jne
loopne
and
fcompl
xchg
loope
fwait
lock
push
push
int3
outsl
adc
dec
inc
pop
cmc
xor
mov
jne
sti
icebp
mov
enter
sbb
cmc
and
shrb
dec
sbb
je
sbb
stc
xchg
dec
adc
dec
negl
imul
xor
sub
jle
lcall
fwait
and
xchg
sbb
in
int
fimull
lret
adc
add
adcb
lahf
dec
push
call
mov
cmp
xor
enter
fucomp
fstpt
popa
jl
xchg
inc
imul
lods
lret
xchg
insb
xor
pop
or
fidivrs
add
test
add
push
repz
pop
add
pop
jg
sarb
fnstenv
leave
icebp
popa
orl
xor
sbb
add
inc
push
push
pop
stc
enter
jb
pop
icebp
repnz
test
jne
hlt
add
sub
sbb
out
sub
loopne
mov
push
cmc
xchg
sarl
fildl
sti
jge
lods
loope
mov
xor
and
popa
xor
inc
mov
jmp
scas
das
fistpll
arpl
nop
dec
movsb
sub
aaa
icebp
fsub
ret
jp
cmp
pop
push
jg
xchg
or
in
pop
xor
mov
dec
call
out
pop
jbe
jne
sbb
adc
xchg
pop
adc
icebp
or
out
cmp
cmp
pop
xor
inc
jp
lret
jmp
and
mov
mov
xor
xchg
fsubrs
inc
imul
pop
in
js,pn
jg
call
lahf
test
mov
push
push
mov
adc
adc
icebp
aam
add
sbb
loopne
adc
popf
cmc
addl
jo
mov
hlt
xchg
lret
mov
jle
inc
int
or
scas
cld
mov
stos
mov
stc
out
xor
bswap
dec
aad
mov
je
xchg
xchg
jle
jae
lods
mov
xchg
ds
mov
inc
daa
insb
push
outsb
add
hlt
cmpl
fisttpl
xchg
in
sub
in
sbb
fnstsw
movsl
add
push
cmc
add
ficoml
out
ret
pop
and
jae
dec
cmpsb
cmp
dec
pop
stos
lea
mov
cmp
lret
popf
in
icebp
jecxz
sbb
mov
xor
cmp
add
enter
das
dec
push
jb
push
and
stos
lret
imul
cmc
sqrtps
ds
cmp
mov
daa
repz
rolb
lock
test
sbb
add
out
cmp
xchg
lea
hlt
adc
add
or
pusha
push
je
mov
xor
lahf
and
and
xor
jbe
dec
data16
mov
or
cli
int3
lcall
inc
jns
outsb
and
adc
mov
ret
in
popf
aas
lds
cwtl
pop
jecxz
mov
lret
lods
cmp
icebp
sub
repz
jge
mov
roll
in
out
dec
fidivs
lods
int
pop
jle
movsb
cmp
ljmp
dec
xchg
int
xor
cmp
push
and
das
mov
dec
iret
loope
test
dec
xchg
inc
outsl
sub
aam
dec
mov
pop
pushf
test
lods
aad
scas
aam
sbb
push
mov
xchg
push
popf
cmp
pop
testb
sub
mov
jge
mov
sbb
cmp
xchg
out
jo
push
test
xchg
fxtract
xchg
cmp
int3
xchg
popf
jg
push
add
stos
jp
mov
fisubrs
addr16
outsb
or
out
cmpsl
dec
mov
xor
mov
out
lea
xor
or
adc
xorb
and
arpl
xor
pop
xchg
inc
inc
pop
sbb
xchg
mov
rcll
out
jecxz
mov
iret
call
rcr
adc
rolb
jae
test
pop
test
int
lods
xor
xlat
or
cltd
jle
fistl
sbb
jb
or
lods
xchg
inc
cmp
jmp
in
inc
repz
xchg
mov
adc
pop
add
pop
mov
jb
call
setle
movsb
int
sub
cmp
out
lods
jmp
or
bound
sbb
or
cmp
in
lea
push
pop
sub
subb
in
into
imul
pop
dec
mov
pop
inc
pop
mov
xlat
into
cmp
jmp
inc
inc
or
push
push
adc
pop
pushf
mov
sbb
cld
gs
imul
js
dec
mov
sbb
aad
ret
mov
imul
add
icebp
cmp
mov
enter
xchg
xlat
je
cmp
push
jne
sub
add
in
cmp
rorl
out
cmp
cmp
cmp
sbb
jne
sub
clc
sbb
pop
dec
pop
jecxz
xchg
cmp
add
je
es
jne
loope
out
das
pushf
bound
cmp
cmpsb
xchg
sti
iret
fisubs
pop
xchg
mov
rolb
dec
in
fs
aad
xchg
pop
aaa
out
arpl
sbb
xchg
push
dec
shl
inc
xchg
gs
adc
test
add
lahf
punpcklbw
lods
dec
xchg
pop
push
pop
and
in
aad
js
mov
sbb
cs
xchg
or
cltd
fs
lods
int3
dec
xor
jge
inc
pop
imull
push
ret
adc
dec
mov
fcomp
sub
and
cmpsb
repnz
stos
mov
push
cmp
out
les
push
dec
cmc
inc
sbb
loope
cs
sub
push
aam
fnstcw
and
lock
and
scas
sbb
fadd
cmp
int
lahf
dec
jno
imul
pop
inc
push
sbbb
xchg
mov
lahf
add
cltd
imul
test
ss
cmpsl
cli
jnp
aas
testl
dec
aam
add
and
mov
inc
cmpl
inc
jg
cmp
lods
inc
sbb
mov
cli
inc
adc
jp
sub
mov
mov
cmp
ret
leave
movsb
outsl
add
cmc
and
mov
ret
jmp
or
int3
push
sub
xchg
fwait
inc
rcr
dec
mov
iret
popf
inc
stos
mov
bound
sbb
jbe
pop
mov
outsb
test
cmp
add
inc
std
push
int3
mov
rcr
mov
test
inc
lret
bswap
cmc
daa
test
add
sahf
lods
pop
mov
xchg
dec
ret
cmc
lret
jle
or
stos
xor
cmp
sub
xor
mov
sub
lods
push
cmp
sub
and
mov
pop
mov
jp
fucomi
sub
gs
inc
hlt
xchg
out
popf
test
aad
cmpb
movsb
arpl
out
pop
lea
andb
mov
mov
or
iret
sahf
ljmp
sarl
push
jnp
cmpsb
pop
rolb
pop
rcll
call
fidivrl
jnp
enter
loope
scas
mov
xor
inc
aaa
ss
int3
lcall
sub
ja
mov
or
push
mov
subl
insl
cmp
mov
cmp
push
inc
jg
rcrb
ret
jle
mov
pop
mov
cmp
and
or
repnz
sub
cmp
sub
cmp
jno
adc
or
hlt
cltd
bound
dec
mov
int3
jl
dec
cmc
call
imul
int3
divl
loop
cs
dec
mov
sbb
pop
and
mov
loop
cmpb
adc
and
adc
mov
inc
mov
sub
mov
sti
arpl
push
sbb
push
scas
iret
movsl
xor
imul
or
and
roll
jo
test
stos
mov
jb
lods
add
sub
xchg
mov
daa
or
mov
divl
xchg
cmp
xchg
mov
add
movsl
xor
es
test
movsl
dec
jmp
sbbl
xor
repz
mov
adc
dec
std
pop
das
mov
js
mov
mov
jo
mov
dec
xor
xchg
ja
dec
test
cmp
push
lods
loop
into
mov
pop
xchg
lods
sub
jae
sbb
aaa
mov
push
loopne
in
dec
add
loopne
call
xchg
outsb
mov
dec
mov
jo
pop
insl
add
jnp
std
push
div
sahf
inc
bound
cmp
xor
jno,pn
mov
test
mov
lcall
sbb
xchg
into
adc
cltd
pop
pop
dec
or
add
jbe
dec
seta
mov
ret
dec
orb
mov
inc
imul
imul
in
fisttps
adc
cld
push
repz
inc
xchg
cmpsl
inc
xchg
sbb
sub
adc
inc
cmc
mov
out
loope
mov
dec
stos
push
ja
mov
add
sahf
test
xor
push
mulb
jb
shrb
jbe
js
cmpsb
outsl
shlb
pop
cmp
mov
cmpsb
aaa
sub
mov
sbb
xchg
repz
jnp
mov
pop
leave
icebp
inc
mov
scas
repnz
lcall
push
xchg
dec
mov
orb
xchg
mov
ficoms
adc
mov
mov
arpl
cmp
add
pop
or
stos
xchg
and
and
pop
or
mov
pushf
out
dec
call
mov
bound
xor
or
ljmp
sahf
adc
arpl
or
mov
icebp
xlat
lds
jno
cmpsb
add
and
add
ds
cmp
push
dec
call
aaa
pop
or
jo
cwtl
loope
pushf
mov
mov
call
dec
js
out
or
push
imul
sti
outsb
or
arpl
mov
enter
xor
push
cmp
sub
insb
and
pop
sbb
mov
insl
pop
popa
add
jns
mov
aaa
adc
cmp
cmpsb
cmc
push
enter
mov
addr16
mov
cmp
sbb
jmp
mov
int3
cmp
or
call
jge
xor
push
cmp
push
jns
pusha
pop
pop
out
cmp
iret
mov
popa
mov
hlt
xorl
dec
pop
mov
mov
dec
scas
cmp
inc
jnp
mov
scas
imul
movsb
lock
or
xor
jnp
mov
mov
pop
out
sbbl
shr
bound
dec
faddp
int
scas
cmp
xor
shlb
mov
stos
shl
mov
mov
sbb
push
jno
xchg
pop
lcall
test
mov
sbb
pop
mov
adc
lahf
loope
test
addb
nopl
movsl
xor
dec
mov
pop
pop
je,pn
ljmp
dec
aaa
xchg
sbb
mov
das
int
inc
sbb
in
push
mov
push
pop
rorl
iret
scas
xor
push
adc
jae
lret
movsb
andl
xor
pop
pop
or
cmp
cmp
jns
imul
lret
mov
test
fldl
push
pop
cmpsl
gs
aad
daa
nop
je
pusha
sub
cmp
loope
fildl
stos
xchg
sub
cmp
rcr
push
add
sarb
lret
dec
es
xor
xchg
pusha
dec
int
pop
addl
inc
inc
mov
rolb
ss
popf
ss
insl
mov
in
std
and
pop
loopne
imul
lret
insl
xor
xchg
fiadds
sbb
loope
test
sbb
jbe
lea
popl
ss
xor
fwait
jno
mov
xchg
popf
ficomps
jp
pushf
outsb
mov
mov
mov
imul
xor
xor
call
or
fidivl
push
adc
inc
adc
jl
xchg
aaa
lret
pop
jns
mov
jb
ljmp
cld
mov
or
leave
les
mov
ljmp
sub
fadd
in
add
pop
sbb
lret
mov
into
dec
xchg
ret
cmp
faddl
or
rcrb
push
sub
sbb
mov
push
pushf
gs
movsl
cli
pop
popa
fwait
ret
cmp
scas
psubq
aaa
into
push
push
xchg
outsb
jo
aam
das
adc
lods
mov
in
pop
pop
fucomp
or
movsb
test
imul
pop
xchg
fsubrl
lods
inc
loope
ret
sbb
cmpsl
jne
iret
sbbb
lock
adc
das
adc
pop
inc
mov
sub
inc
cmp
imul
xchg
sbb
lahf
mov
mov
cmc
fisubrs
gs
addl
adc
pop
mov
lods
dec
jmp
shrb
divb
sub
jne
lahf
or
mov
mov
enter
sbb
mov
xor
mov
and
movsl
out
das
test
shl
dec
repz
xchg
sub
push
ljmp
or
leave
shrl
sub
xchg
test
push
jp
xchg
pushf
enter
iret
dec
les
lret
fstps
jb
push
inc
adc
popa
in
jne
arpl
gs
and
fmull
xchg
cwtl
add
aam
dec
std
mov
repnz
pushf
xchg
pop
outsl
out
add
xchg
push
rcll
icebp
pop
cltd
outsl
push
aaa
repnz
mov
out
mov
mov
lock
sbb
push
xchg
psubsb
jnp
push
rolb
jnp
mov
xor
push
jecxz
callw
repnz
loopne
push
test
or
loopne
cmpb
lcall
sub
lods
pop
jmp
jo
and
lahf
mov
ret
lods
dec
cmc
test
add
repz
add
loop
insb
jnp
or
inc
adc
push
sub
sub
jno
daa
insb
and
mov
sbb
outsl
push
jg
adc
roll
jmp
rcrb
out
pop
xchg
mov
jb
and
stos
cmpsl
loop
xor
mov
sub
jp
das
mov
mov
lret
adcl
mov
push
push
mov
add
aam
xor
aad
shl
stos
cwtl
loopne
pop
repnz
pop
adc
pop
aam
sbb
mov
jnp
cwtl
pop
in
cmpsl
dec
inc
xor
lret
jb
fimuls
pop
fs
inc
lret
ja
xchg
dec
imul
je
movsl
test
rcrb
jbe
adc
movsb
jnp
adc
loope
mov
sub
sbb
add
nop
dec
or
dec
pop
mov
aam
cmpsl
xchg
xor
mov
andb
cmp
loopne
and
xor
or
daa
sub
int
rolb
and
lcall
xor
xchg
stc
jno
popf
ret
mov
and
cwtl
call
xorl
lods
repnz
idivb
das
cmp
jmp
aad
xchg
mov
pop
faddl
xlat
cltd
sbb
mov
or
add
add
int3
loop
jbe
loop
add
ss
jge
hlt
icebp
loopne
dec
popa
icebp
and
arpl
jl
clc
pop
insb
push
ror
dec
orl
gs
dec
es
in
mov
and
int
loope
add
cmp
sti
add
add
pop
out
inc
push
aam
mov
movsb
adc
ss
fwait
mov
lock
repz
jns
pushf
stc
jnp
idivl
adc
enter
int3
sub
enter
shll
dec
push
ret
xchg
pop
add
int3
ret
add
mov
sub
lcall
jl
xchg
mov
cmp
dec
dec
push
add
jmp
pushf
ds
pushf
inc
fsub
int3
cmp
cmp
not
sbb
sbb
in
xchg
mov
jp
sahf
outsb
or
mov
mov
inc
bound
pop
xchg
jmp
cmp
imul
xor
orb
js
fcomi
adc
js
jge
xor
test
mov
in
or
shrl
xor
and
sub
jno
xchg
enter
sub
sbb
pop
pop
arpl
or
cmp
cmp
rsm
sar
mov
lock
sbb
lea
cmpsb
sub
into
aad
fs
cmpsb
lds
dec
mov
or
pop
cli
dec
pusha
pop
xlat
sbb
scas
add
adc
aam
int3
jo
aam
adc
cmp
mov
jl
fisttpl
rcrb
pop
cmp
xchg
cmpsl
add
cld
ljmp
aas
xor
ds
imul
add
push
cltd
pop
popa
sbb
sahf
imulb
sahf
xchg
lock
inc
pop
out
mov
add
fisttpl
ret
into
pop
adc
in
inc
out
out
rcrl
add
or
adc
push
xchg
xchg
mov
das
fcompl
add
fistpl
aam
mov
movsl
mov
scas
sbb
cmpsb
cmp
or
call
fistps
xchg
arpl
pop
les
jae
or
adc
das
mov
adc
adc
push
jbe
dec
pop
subb
std
adc
ljmp
sar
icebp
sbb
sub
cmpsb
push
fcmovb
push
pop
les
fsubrp
and
push
mov
xchg
xchg
pop
rcll
out
cmp
dec
rorl
stos
mov
jno
push
lock
insb
int
or
jb
bound
loop
jb
mov
mov
loope
sub
jbe
psubusb
stos
test
add
fidivrl
jmp
pop
dec
inc
je
inc
cmp
mov
mov
int
add
stc
sbb
adc
jge
ss
test
push
mov
mov
lahf
dec
cmp
in
clc
xor
out
fnstenv
cmpsb
fadd
fs
jne
shl
and
cmpb
jmp
stc
mov
imul
call
inc
roll
sti
shrl
aam
cli
lea
mov
mov
add
pop
inc
jle
shrl
mov
xor
outsb
imull
sbb
pop
leave
pop
pushf
dec
xor
mov
mov
pop
adcb
xchg
sbb
iret
sarb
aaa
imul
out
push
rorb
bound
adc
divl
imul
leave
adc
sub
and
cmpsb
cli
rcll
and
mov
mov
add
jae
adc
popa
push
arpl
sub
xorb
sbb
mov
adc
loope
cli
mov
ja
iret
iret
popa
mov
pop
test
pop
or
mov
sbb
jbe
mov
push
jge
dec
fwait
push
imul
idiv
xor
sahf
loop
pop
and
ja
jne
push
fmull
jae
movsb
push
repz
and
xchg
outsl
data16
test
loopne
jg
pop
pop
fs
pop
mov
pushf
mov
adc
repz
mov
xchg
xchg
dec
stc
jle
imulb
mov
mov
dec
dec
gs
xchg
mov
mov
push
aam
mov
outsl
repnz
idivb
jecxz
lcall
mov
fstl
xchg
dec
push
jnp
test
inc
mov
sbb
fildl
cs
xchg
inc
pushf
fucomp
jae
test
jmp
rorb
jmp
aad
sbb
inc
cltd
dec
in
arpl
sahf
sarl
and
popa
cmp
in
les
jl
nop
cmp
mov
gs
jbe
sbb
jne
mov
pop
movb
stc
lret
leave
fstps
pop
lock
mov
mull
and
xor
mov
mov
fdivrs
push
or
mov
xor
add
jmp
mov
xorl
ret
pop
mov
daa
inc
jmp
dec
adc
adc
orb
xchg
cmp
ja
jae
push
mov
pop
cmp
lock
and
stos
xor
dec
movsb
mov
sahf
in
push
rcrb
mov
subl
mov
mov
mov
add
into
cmp
mov
scas
push
inc
sub
outsl
adc
out
sbb
aam
xchg
sub
add
sub
scas
cmp
shll
dec
push
sub
div
arpl
add
out
mov
cli
enter
or
push
xlat
xchg
repz
sub
or
inc
std
outsl
sbb
jnp
cmp
cmc
dec
cmpb
fists
fwait
add
dec
add
push
jbe
scas
fistpll
and
lahf
dec
add
cwtl
sub
jl
and
movsl
sub
jno
mov
aaa
sub
aaa
pop
lods
rclb
mov
pop
cli
mov
out
push
mov
repnz
fcoml
sbb
push
jmp
aad
lret
lds
into
sbb
scas
into
mov
push
test
and
fldenv
insb
mov
dec
movsl
cmp
sbb
fmull
inc
cmpb
stc
addr16
lds
cmpsl
jbe
mov
insl
push
cli
or
lock
imul
jmp
pop
dec
je
mov
dec
inc
cmc
pop
push
xchg
lock
jnp
pop
sti
ret
pop
insb
add
dec
inc
cmp
pop
fmull
mov
in
popa
add
or
dec
jp
icebp
outsl
imul
lds
jb
scas
xlat
test
cmp
out
push
cmpsl
outsl
lock
push
mov
shl
in
out
clc
and
sub
out
sub
mov
std
rcll
jge
dec
sub
test
fldcw
mov
aaa
gs
neg
flds
leave
cmpl
outsl
aad
ja
arpl
test
test
mov
pop
xor
test
mov
ljmp
pop
scas
stc
xchg
and
xor
xor
sub
or
ss
shll
lret
mov
jg
insb
sbb
insb
push
mov
loope
xchg
divl
xor
das
mov
lret
xchg
or
lcall
je
mov
xor
cmp
fildl
mov
lret
jo
shlb
push
test
jbe
jmp
mov
inc
mov
cmpsb
xor
push
addr16
addr16
stos
inc
call
sub
jecxz
mov
cmp
fidivl
fldenv
jmp
test
nopl
mov
mov
inc
jno
aam
outsb
mov
mov
lea
stc
nop
fsub
sti
and
test
inc
xchg
mov
cmp
cli
push
pushf
stc
fdivrl
scas
call
cmp
or
jne
mov
pop
mov
push
shlb
jb
out
cwtl
and
daa
std
out
aam
out
aas
fcom
add
add
mov
adc
push
aam
push
and
outsb
mov
imul
and
sahf
mov
push
inc
xchg
mov
sbb
enter
mov
and
nop
mov
je
mov
cmp
pop
scas
add
pop
mov
inc
mov
jns
in
out
inc
cmc
xorb
pop
inc
scas
adc
inc
lea
lea
push
xor
fnstcw
mov
sbb
push
mov
icebp
add
movsb
clc
sbb
adc
scas
ret
sbb
das
loope
inc
cmp
fsubrs
in
aaa
adc
into
rol
inc
lods
fidivs
add
pop
int
bnd
and
pusha
lods
mov
xchg
movsl
icebp
sub
xchg
outsb
adc
pop
push
add
int3
loopne
mov
cmp
xor
xor
outsl
ja
inc
icebp
ljmp
es
or
hlt
xchg
mov
sub
pop
mov
xorl
sub
leave
stos
add
jnp
add
fcmovbe
daa
add
sbb
out
sbb
dec
fiaddl
jo
sbb
mov
sub
push
add
push
jl
cs
inc
mov
fcmovnbe
or
xchg
inc
xor
jno
stc
adc
notb
pushf
inc
in
and
push
out
cwtl
data16
out
dec
jnp
jle
push
xchg
adc
lret
xchg
xor
or
and
gs
sub
std
lods
xchg
aam
inc
roll
lahf
push
hlt
addr16
sub
cli
add
mov
leave
int3
inc
lea
mov
sar
repnz
mov
push
jno
jle
lret
ljmp
sbb
fisttpll
mov
cmc
jne
inc
movsl
lods
int
ret
jns
add
adc
inc
aaa
jo
int
ljmp
pushf
pop
movsl
add
push
insl
pop
push
popa
pop
xor
icebp
lcall
jp
pop
ljmp
out
fcompl
insb
jecxz
mov
xor
mov
inc
or
sub
pop
lods
cmc
popf
mov
cmp
mov
or
inc
push
push
aad
mov
movsl
cmp
sub
sti
fldenv
push
fldt
xchg
je
in
mov
jmp
mov
push
jl
negl
jno
xorl
add
jno
divb
push
xchg
loope
stos
pushf
loopne
sub
shll
fbstp
sahf
sub
stc
hlt
push
cld
aaa
lahf
dec
sbb
or
xor
shlb
adc
push
dec
sbbb
mov
push
in
leave
jno
pushf
fsubs
push
fadds
fcoms
cmp
aam
mov
shl
push
push
and
cmpb
adc
xor
shlb
std
rol
sbb
jmp
dec
xchg
mov
push
mov
addb
jge
jnp
jne
in
xor
mov
pop
mov
punpcklwd
cwtl
lods
push
cltd
cmp
sub
std
push
sbb
mov
test
jmp
and
pop
dec
sbb
inc
in
add
insl
lods
jmp
push
sub
xchg
faddl
pop
dec
das
ficoml
jno
test
jl
iret
jb
mov
ss
mov
mov
cli
mov
add
mov
mov
mov
sub
nop
divb
mov
pop
popa
jl
insb
lock
flds
cmp
add
push
gs
sbb
adc
pop
inc
mov
sub
je
repnz
dec
add
jmp
cs
in
daa
dec
imul
pop
lods
mov
sbb
jmp
sbb
dec
mov
int3
dec
mov
xchg
fsub
push
mov
cmp
jmp
dec
inc
icebp
inc
xchg
push
and
andl
sub
mov
notl
cmp
or
sub
bound
insb
adc
xlat
push
imul
enter
jg
cltd
ss
icebp
xor
test
jns
mov
add
outsl
mov
in
dec
jno
add
xor
mov
scas
hlt
mov
xlat
out
or
out
aad
es
int
xor
dec
push
fisttpl
mov
cmpb
lds
loop
mov
inc
div
pop
mov
or
mov
push
pop
repnz
jp
adc
jnp
ret
adc
pop
mov
adc
in
lahf
pop
adc
outsb
push
movsl
add
inc
xchg
xorb
jns
xchg
neg
dec
cltd
mov
in
and
push
push
std
ret
fcompl
loope
inc
mov
mov
or
cli
mov
ja
xor
xor
aaa
in
call
ja
aam
test
js
mov
adc
lods
pop
add
inc
out
in
push
pop
dec
mov
xchg
mov
cmp
arpl
xchg
xchg
xchg
inc
idiv
clc
xchg
enter
das
dec
out
scas
xchg
int
pop
pop
aad
out
lds
mov
aad
push
push
mov
xor
push
jb
sub
sub
repnz
mov
mov
and
or
loop
adc
lret
push
mov
cli
filds
fucomp
jb
dec
das
jo
je
lahf
rep
mov
dec
popf
pop
fsubrs
ss
call
mov
pop
fsubs
xchg
xchg
lods
scas
pop
out
jns
add
daa
lcall
out
push
xor
and
es
add
lret
xchg
loopne
ss
xor
je
lret
cwtl
sbb
xchg
inc
cltd
jecxz
insl
into
sub
sub
add
imul
adc
cmpsb
jl
and
enter
insb
inc
mov
xchg
mov
fnstenv
dec
xchg
dec
sub
mov
cld
dec
pop
in
fbld
stos
lods
outsb
cli
lds
jge
movswl
sub
lock
es
ret
jp
mov
sub
in
test
mov
cwtl
mov
dec
cs
dec
adc
mov
loop
xchg
jp
jnp
out
addl
xchg
cmp
jb
arpl
loop
cmpl
out
jp
mov
cmp
shrb
push
cmc
or
mov
jl
and
cli
mov
loop
les
dec
insb
xchg
int
xchg
adc
mov
mov
je
fldcw
mov
jne
cmpsb
daa
cmp
in
dec
xchg
and
in
lahf
adc
dec
dec
jo
inc
jbe
lret
out
adc
aaa
fists
sub
add
outsb
cmp
fs
jmp
xor
pusha
push
xchg
dec
lret
pop
lods
out
jbe
negl
in
pop
push
mov
push
mull
cltd
mov
add
shrb
aas
loopne
cmp
mov
jo
mov
movsl
in
jge
test
movsb
movsl
shl
gs
insl
stos
cld
out
and
fdiv
fldl
xchg
repnz
inc
test
es
push
arpl
out
sahf
lcall
out
data16
daa
repnz
jne
cmpxchg
ds
mov
mov
lds
adc
lds
mov
clc
es
andb
cli
or
aam
mov
sub
jo
fstpt
jg
dec
out
cmp
mov
out
nop
in
adc
mov
sti
push
or
out
xchg
test
loopne
adc
mov
push
gs
mov
or
gs
dec
xor
jg,pt
push
sub
jo
fists
or
nop
or
es
jbe
mov
cld
cmp
ficompl
inc
clc
loopne
cs
cli
xor
std
fldcw
ss
mov
push
push
lahf
imulb
push
and
movsl
aam
push
nop
mov
popf
sbb
jnp
push
stos
out
mov
xor
cmp
or
xor
jmp
or
jle
aam
sar
mov
mov
les
ljmp
lahf
rorl
scas
mov
das
mov
loop
jno
xorb
movsl
test
adc
or
or
sub
imul
leave
lret
ficomps
push
aaa
jge
pop
shll
cmp
scas
roll
and
pop
gs
lock
leave
sbb
adc
call
push
js
cmp
sar
pop
fld
fiadds
insl
bsf
ficoms
imul
lcall
imulb
stc
in
push
stos
jl
xor
adc
icebp
ja
rol
lcall
stos
sbb
push
ljmp
mov
pop
xor
imul
mov
sub
push
jno
or
shrb
adc
les
arpl
or
call
leave
outsb
nop
cmc
xor
ret
pop
dec
loopne
xor
rcr
sub
data16
cmp
inc
popf
mov
bts
inc
nop
pop
jl
les
jne
xchg
mov
incl
fdivs
xor
push
leave
and
loopne
xchg
icebp
pushf
xor
scas
aam
fsubr
mov
out
push
jg
sub
pop
imul
xor
mov
data16
movd
mov
push
lds
addr16
mov
pop
pop
cwtl
popf
repz
dec
rcr
es
jne
sbb
dec
lret
inc
push
dec
push
mov
xchg
scas
jns
movl
in
xchg
mov
xor
fwait
enter
xlat
in
test
aas
pop
adc
jle
cld
fidivrs
int3
outsl
dec
popf
lret
inc
dec
sti
add
mov
pop
inc
push
jbe
mov
fmuls
or
dec
push
mov
leave
dec
in
cmpsl
inc
push
addr16
mov
dec
pop
jg
loop
pushf
lcall
idiv
popa
pop
cmc
jle
xor
insb
xor
mov
pop
inc
xor
jbe
push
and
cmp
sbb
loop
xchg
sbb
pop
in
outsl
into
cmp
xchg
jne
div
shlb
mov
jne
fstl
test
dec
and
loope
dec
dec
xor
das
lock
mov
orb
xchg
cwtl
in
and
lods
and
mov
inc
cmp
fnstenv
mov
outsb
std
push
outsb
and
loope
sub
xor
das
cmp
xor
lods
cltd
xlat
sar
cmp
cmp
lcall
or
cmp
xor
sti
push
cmpsl
loopne
ss
jmp
cli
mov
repz
mov
shll
shlb
add
mov
iret
shr
sahf
bsf
ss
mov
repnz
sub
divb
out
aas
jbe
inc
jp
and
ss
push
loope
imul
mov
testb
popa
std
mov
popf
out
or
xor
xchg
daa
stos
lahf
mov
push
out
pusha
xchg
cmp
movsl
add
adc
inc
pushf
in
insl
lock
repnz
shll
mov
out
cmp
std
mov
sti
mov
notl
mov
scas
int3
test
movsl
xchg
sub
sti
sbb
bound
fnstenv
fdivrl
dec
jecxz
into
mov
mov
mov
out
dec
arpl
outsl
das
jnp
jae
pop
imul
dec
fildll
stos
lea
mov
lds
jmp
mov
adc
pop
bound
divl
pop
stos
add
mov
sub
sbb
push
cmp
imul
cmp
jno
sub
pop
aaa
xor
xchg
cs
dec
rcl
cmp
jge
test
sub
stos
dec
xor
and
ret
dec
enter
lret
rcl
cmove
xor
leave
rol
and
add
ficoms
push
jb
mov
rcll
notl
sbbb
mov
cmpsb
or
fadds
mov
sahf
outsl
cwtl
push
cld
fld
fbld
xlat
mov
cmp
in
and
mov
outsb
xchg
sbb
push
add
loopne
or
das
or
push
dec
dec
cmp
and
loopne
aam
stc
rolb
cmpsb
inc
dec
push
aaa
mov
lock
push
addr16
dec
sbb
in
lahf
ret
nop
stos
ss
jp
or
pop
aam
in
in
adc
sub
fimuls
push
lea
and
sbb
sahf
inc
or
sti
inc
aas
lods
push
imul
data16
dec
cmp
aas
inc
scas
mov
adc
cmc
adc
adc
push
aad
je
push
insl
push
push
cmp
inc
xor
xchg
mov
dec
mov
idivb
mov
jb
jl
sbb
sbb
mov
pop
aas
arpl
pop
out
jmp
lods
out
negb
daa
test
dec
cmp
clc
out
sbb
and
dec
push
in
rcrl
mov
sub
flds
repnz
out
dec
jle
dec
and
pop
popa
ljmp
xor
mov
adc
insb
aaa
cmp
fimull
and
es
cwtl
sub
out
pop
insl
sub
adc
adc
adc
incl
imul
xor
jns
fs
lcall
adc
mov
popf
aaa
add
add
inc
jp
iret
jle
lahf
xor
and
aas
jbe
ja
popf
mov
addr16
pop
add
fdivrl
inc
xchg
xchg
push
les
jno
adc
xor
dec
imul
outsb
shrb
adc
and
sbbb
cmc
sub
push
mov
and
mov
mov
mov
mov
mov
test
rcl
loop
mov
or
fistps
dec
push
push
and
stos
cli
jo
jmp
sub
out
lods
mov
pop
jmp
dec
pop
out
sbbb
out
aad
pop
pop
xor
dec
dec
aaa
cmc
inc
pop
gs
test
fisttps
add
and
push
dec
mov
filds
in
jmp
push
lds
add
mov
xor
in
in
dec
aam
mov
mov
or
mov
mov
xchg
push
ret
and
adc
lea
xchg
lods
push
jno
insl
cmp
flds
push
sbb
pop
xor
outsl
test
mov
or
fwait
push
lock
lods
int3
scas
xchg
xor
cmpsb
pusha
push
pop
nop
sub
mov
mov
fnstsw
test
out
outsb
lods
ds
nop
jle
addr16
ds
outsl
add
xor
idiv
pushf
in
sbb
push
pop
sarl
push
adcb
ffree
add
lcall
shrl
fnsave
push
arpl
mov
mov
cmp
cld
inc
lret
enter
inc
fdivrl
ret
jge
push
out
loop
sbb
stos
and
jecxz
or
jbe
rcrl
push
fcomip
shl
cltd
dec
out
pop
mov
popf
cmp
inc
int
add
pop
pop
inc
rolb
add
stos
cli
mull
insl
mov
sub
mov
rcrb
in
imul
dec
xchg
sub
out
fisubs
popf
xchg
push
mov
push
lcall
sub
or
push
lods
push
mov
pop
filds
sbb
mov
jl
sahf
movb
sbb
mov
aad
mov
ds
out
add
mov
lods
in
xlat
jo
sbb
mov
ficoml
sub
pop
into
mov
test
mov
add
fnsave
push
sti
in
add
mov
ds
jno
pop
dec
pmulhrw
ret
fwait
mov
lahf
andb
scas
test
dec
gs
jle
out
stos
rcr
outsb
lock
cmp
out
xor
outsl
push
stos
out
aaa
lcall
push
jmp
in
or
cwtl
sub
cmp
or
fdivs
push
adc
into
mov
mov
bswap
push
lods
les
jmp
xchg
push
in
sbb
jo
pop
ljmp
mov
mov
imul
sti
ja
and
sub
or
test
or
xchg
imul
ficompl
in
das
mov
pop
mov
aam
sbb
xor
insl
sbb
cmp
sbb
cmpl
movsl
or
out
pop
fisubl
cmp
aam
mov
imul
test
mov
out
or
iret
mov
cmpsb
or
jg
push
mov
push
sub
add
inc
sti
leave
in
or
sbb
cld
lods
std
push
fdivrs
inc
xchg
pop
sti
cmp
xchg
arpl
add
lds
cwtl
outsb
ljmp
or
sub
xor
xchg
pop
adc
sub
add
push
sbb
xor
xlat
pop
jo
stc
or
negl
icebp
out
jg
and
mov
adc
adc
xor
pusha
lret
mov
or
cmpsl
movsb
shrl
pop
call
jo
and
repz
addr16
push
push
lcall
mov
push
xorb
mov
jl
adc
jns
push
or
fmul
xchg
push
repz
pop
inc
xor
ja
test
aad
mov
cmp
lahf
mov
sub
cs
es
jb
pop
cs
sub
pop
adc
test
jne
xor
push
cmp
inc
dec
faddl
dec
es
movl
or
inc
pusha
pop
mov
into
and
inc
popf
out
fbld
test
inc
out
adc
jmp
xchg
mov
pop
xor
pop
push
sti
sar
js
enter
and
adc
jb
popf
mov
daa
ja
pop
pop
sbb
adcb
mov
pop
mov
dec
inc
mov
cwtl
mov
cmp
and
and
leave
fstpt
scas
subb
xchg
ret
lcall
gs
push
hlt
mov
mov
cmpsl
insb
incb
jae
dec
sub
cld
jae
nop
pushf
vmovntps
adc
ja
inc
push
push
jge
cwtl
or
xchg
scas
xor
shrb
stos
mov
push
stos
jle
mov
and
cwtl
orl
mov
sub
fs
push
lock
mov
aas
imul
call
addb
stos
fs
out
mov
jno
fcomps
loopne
rsm
xor
popa
subps
negb
in
fidivrs
lcall
adc
orb
sub
sub
adc
mov
fstpt
repz
jmp
dec
mov
mov
sbb
fsub
xchg
inc
aam
test
or
ss
icebp
dec
pushf
bound
aas
jns
push
imul
inc
pushf
out
pop
cmp
xorl
pusha
inc
sti
xor
or
mov
and
or
push
das
adc
or
in
dec
and
movsl
pcmpeqb
add
sub
jne
jo
mov
and
sahf
jbe
sahf
scas
mov
movsl
daa
and
ja
xor
rcr
ret
call
mov
lods
jle
gs
paddsw
mov
mov
pop
fwait
inc
dec
sub
sbb
cmpl
lods
mov
mov
loop
adc
scas
rcrl
lcall
dec
jb
mov
dec
incb
hlt
dec
cmp
sti
daa
jl
sbb
fcomi
xchg
test
pop
mov
pop
ficompl
xchg
mov
mov
mov
jnp
pop
bound
mov
pop
pop
cli
push
mov
xor
push
repnz
pusha
inc
cmpsw
loope
cmp
xor
subb
cmp
xor
sbb
sbb
jno
xor
add
mov
jl
cmp
das
in
xchg
ret
jb
or
lahf
mov
push
hlt
jb
lods
test
data16
push
shll
or
insl
data16
cmp
faddl
adc
scas
aad
fisubl
push
sbb
pop
mov
pushf
sub
insb
negl
mov
push
mov
sub
dec
cmpsl
dec
shlb
xchg
insl
arpl
or
fbld
xor
mov
or
xor
xor
cmp
xchg
int
and
inc
mov
pop
inc
popa
jg
fstp
in
xchg
scas
inc
ret
mov
and
insb
cmpsb
xlat
or
or
push
sbb
add
jne
mov
sarb
sbb
dec
nop
hlt
add
mov
xchg
jge
push
or
sub
pop
dec
outsl
cltd
lret
fwait
das
test
mov
rcrb
call
rclb
scas
stos
push
std
jecxz
lret
in
lcall
jne
dec
loopne
int3
test
pop
or
and
aad
aam
cmp
lea
push
pop
xchg
cmc
xchg
xchg
jno
or
das
loopne
cwtl
in
sub
and
mov
ret
push
mov
sbb
dec
je
movsb
mov
jl
pop
cmp
or
adc
push
mov
adcb
int
int
xrelease
lahf
cmp
cld
in
mov
lcall
mov
mov
sub
push
sub
push
sub
into
insb
xchg
sub
add
jbe
arpl
sub
aaa
push
fidivs
add
rclb
or
jno
roll
or
and
das
sbbl
clc
es
lds
inc
adc
int
xchg
jg
or
or
pop
adc
lds
stc
neg
cltd
mov
sbb
push
mov
sbb
cltd
mov
and
cmpl
adc
lahf
cld
hlt
sbbl
sahf
jo
shll
inc
in
fidivl
gs
jecxz
cmp
lods
insb
leave
xchg
repnz
mov
xor
xchg
test
fwait
xor
sbb
lret
scas
push
test
inc
iret
add
cmp
outsl
dec
shll
in
lods
inc
lods
add
sub
jecxz
xchg
sbbb
mov
popa
inc
and
adc
jae
pop
or
or
mov
addb
ret
shll
in
stos
mov
mov
aaa
mov
ror
cmp
and
fisubl
aaa
cmp
adc
push
pop
dec
fldenv
mov
and
out
sub
cmp
stos
sub
lods
scas
push
mov
cltd
mov
mov
xor
adc
out
cltd
movsb
jo
adc
aad
mov
push
push
rclb
jecxz
jl
fcompl
pop
push
xor
inc
mov
inc
mov
loop
inc
lods
in
iret
int
sbb
mov
je
into
sub
flds
push
xchg
lcall
sbb
leave
mov
lcall
mov
outsl
ret
ljmp
push
push
out
scas
cmpsl
in
es
jge
add
mov
pop
dec
jno
into
jbe
repnz
icebp
adc
or
add
pusha
mov
insl
xor
sub
pop
mov
je
push
sub
mov
outsl
mov
mov
sub
xor
dec
bound
pop
add
inc
and
ljmp
rcrl
out
int
mov
repz
orl
or
push
ja
ja
and
adc
stos
enter
jp
bound
dec
cmp
fcomp
iret
cmp
out
rcrl
add
out
fmulp
sar
mov
jmp
push
push
call
pop
pop
xchg
xchg
lcall
fldt
mov
push
push
shl
xor
inc
pop
or
mov
ret
aam
adc
add
stc
mov
xchg
out
rorb
jle
stos
dec
sbb
pop
js
imul
hlt
cmp
jns
pop
sar
nop
sti
jo
xchg
in
xor
cmp
mov
jbe
dec
dec
add
or
dec
add
mov
enter
mov
mov
incb
repnz
and
lods
jmp
mov
pop
ret
sahf
lds
repnz
jecxz
fistpl
or
xchg
inc
test
add
call
mov
jle
fildl
inc
and
xchg
xchg
aas
push
lods
scas
inc
imull
xor
sbbb
mov
or
scas
sbb
ss
mov
dec
mov
js
loopne
and
xlat
fucomip
dec
xlat
cmp
inc
pusha
pop
cli
mov
xchg
scas
mov
sahf
push
xor
fsub
add
pop
iret
cs
or
cs
push
dec
cmp
imul
les
mov
mov
popf
es
sbb
jg
mov
sti
out
cmp
and
jl
stos
mov
or
std
lret
pop
and
mov
adc
xchg
rorl
imul
push
lcall
push
adc
cmpsl
cmp
jmp
pop
pop
sbb
cs
dec
aad
out
pop
popf
loop
cmp
mov
movsb
push
mov
push
adc
stos
pushf
mov
js
cmp
xor
cli
pop
ret
add
xor
mov
and
lods
aad
xor
push
out
jb
mov
fmuls
aad
lcall
sti
or
mov
dec
aaa
xor
fucomp
push
insl
call
test
jmp
cmp
xchg
inc
adc
dec
xchg
outsl
jl
rcr
sbb
bound
lods
mov
stc
inc
sbb
push
testl
mov
sub
popf
sub
icebp
adc
fadds
mov
cmp
outsb
pavgb
jns
je
sub
cmp
sub
adc
dec
xchg
and
sahf
dec
in
int3
sub
cmp
pop
popa
icebp
aaa
sub
data16
fwait
push
xor
shrb
jle
rolb
outsl
outsl
mov
fcoml
ret
fcoml
add
xchg
and
cmp
ret
xchg
xchg
mov
sbb
inc
pop
insb
jge
pop
out
push
inc
leave
cltd
cmp
pop
push
loopne
xchg
mov
cmp
jecxz
push
inc
xchg
clc
int
insb
cli
mov
repz
lret
xchg
fimull
rcrb
out
push
int
data16
daa
inc
leave
loope
jmp
testb
push
add
cmp
xchg
sub
shl
insb
dec
fdivl
adc
and
aas
pushf
ds
pop
cmp
sub
push
pop
dec
mov
xchg
push
adc
adc
in
repnz
mov
or
push
xor
addr16
push
insb
adc
push
xchg
ja
das
push
or
push
cld
xchg
mov
arpl
jae
subl
mov
and
icebp
xchg
pop
movl
inc
loopne
jmp
jae
lods
mov
sbb
movsb
fdivrl
mov
test
adc
cmp
push
sub
aas
xor
lds
out
jo
pop
jp
jecxz
sahf
enter
movsb
xchg
cmp
add
stos
dec
hlt
cmp
les
fwait
pop
mov
mov
leave
clc
sbb
fsub
cmpl
mov
jbe
mov
jbe
ljmp
mov
pop
sub
jo
lea
jmp
mov
nop
cmpsl
aad
pop
mov
lock
rcll
mov
int
mov
mov
pop
ret
inc
jecxz
push
test
and
or
ret
stos
jmp
stos
or
repnz
inc
js
loop
roll
or
pop
dec
cmp
mov
sbb
inc
xlat
les
lret
mov
cmpsb
and
outsl
dec
mov
mov
jle
pop
fdiv
sbb
sahf
movsb
stos
jle
xlat
popf
add
ret
and
shlb
nop
js,pn
test
iret
push
out
and
dec
xor
lahf
inc
loopne
or
call
dec
push
insb
pop
imul
or
repnz
mov
or
xlat
cmp
sahf
sub
mov
fstpl
mov
xor
inc
mov
xor
mov
subl
int
movsb
addl
loopne
mov
std
aas
jmp
addr16
jae
fildl
out
data16
or
adc
sub
je
or
pop
cmpsl
pop
cmpsl
int
push
call
test
xorb
stos
push
in
mov
in
out
or
pop
inc
jl
xor
ljmp
shl
scas
daa
call
sub
and
sar
cmpsb
fldt
or
push
push
lahf
pop
jo
jge
hlt
test
or
je
movsb
outsl
push
or
and
nop
aad
sbb
xchg
dec
jle
sub
in
movsb
imul
push
cs
gs
mov
in
pop
push
fcomp
je
ja
icebp
stc
addr16
scas
sub
shlb
shlb
xchg
scas
insb
out
mov
cmp
stos
mov
psraw
test
cmpsl
or
repz
sub
mov
xor
xchg
xchg
pop
xchg
mov
or
jo
sti
std
aaa
dec
mov
iret
test
jmp
ds
fsts
test
push
gs
dec
test
fcoml
xor
pop
mov
aam
repnz
mov
fsubrs
sub
inc
mov
stc
fs
sub
mov
mov
pop
call
clc
aas
cmpsl
jno
push
xor
dec
add
out
xor
sahf
lret
mov
mov
pushf
sbb
mov
mov
mov
xor
rcrl
fidivs
or
iret
cmp
dec
imul
mov
adc
mov
pushf
mov
aad
jnp
xchg
or
push
int3
loopne
clc
xchg
into
ja
jge
out
xor
dec
dec
scas
dec
fsubrl
jmp
push
hlt
std
movsl
inc
push
and
xchg
je
fldcw
ja
insb
ror
imul
or
lds
xor
lahf
mov
cli
or
sub
and
jbe
nop
pcmpeqw
and
inc
jo
das
push
es
faddl
inc
pop
lahf
add
mov
insb
out
mov
pop
std
sbb
out
out
lea
lcall
scas
mov
out
mov
mov
fcoml
out
test
in
xor
xor
push
xor
mov
mov
cmp
je
jb
adc
pop
and
out
xlat
ss
lock
call
in
insb
fwait
inc
cwtl
and
pusha
pop
rorb
mov
in
imul
out
cli
inc
sub
jnp
insl
divl
lea
std
sbb
inc
push
mov
int3
xchg
sahf
ret
fldl
outsl
lahf
lds
icebp
iret
test
lahf
add
in
or
xchg
in
add
sbb
or
or
repz
out
dec
push
dec
aaa
cltd
jg
fnstenv
mov
mov
shlb
mov
inc
pop
test
cmpsl
jno
inc
mov
notl
cmpsl
xor
pushf
add
cmc
in
pusha
cmp
sahf
cmp
jne
push
mov
sti
neg
pop
or
mov
lret
xor
jmp
ret
mov
inc
cld
imull
stc
shrb
ret
cmpsl
cmp
cld
cmpsl
repz
dec
and
and
cli
mov
test
mov
mov
and
xor
cmp
mov
cmc
test
adc
jmp
insl
xchg
test
mov
scas
mov
mov
fldl
or
mov
pop
push
gs
or
outsl
add
mov
call
or
push
and
sbb
sbb
xchg
jbe
loop
icebp
stc
stc
fmull
fmuls
sub
mov
lret
mov
out
mov
dec
int
or
mov
cmc
lret
flds
xchg
jmp
push
sbb
push
xorb
sub
stos
add
inc
push
pop
ss
hlt
sbb
jbe
mov
adc
cmpl
int3
enter
orb
sti
out
push
cmp
das
push
cmp
pushf
fst
dec
sbb
push
aas
cmpsb
xor
fisubrl
pop
lcall
sub
cld
mov
movsl
ror
mov
shlb
mov
cwtl
adcb
cmp
jecxz
jge
ljmp
xchg
pop
in
imul
jp
fisttps
cltd
jnp
mov
and
push
push
xchg
in
iret
ja
xor
ja
fldt
jbe
insl
add
xor
jg
adc
dec
or
lock
scas
pop
or
mov
add
int3
or
cmp
inc
inc
es
std
mov
dec
push
push
ja,pt
push
or
in
mov
adc
jg
sarb
outsb
mov
das
mov
ret
fisubrl
ffree
addr16
mov
mov
xchg
rcll
and
cltd
push
fadd
jo
ret
dec
xor
cwtl
pusha
icebp
adc
inc
mov
lods
jecxz
lcall
add
enter
outsl
test
push
mov
xor
div
or
cmp
in
stos
fwait
cmc
jecxz
and
pop
mov
xor
sahf
sub
pushf
outsl
paddusw
xchg
faddl
dec
pop
jg
popf
insb
mov
clc
push
or
icebp
mov
adc
daa
pop
clc
fdiv
movd
or
iret
or
jecxz
ss
sbb
es
jno
in
pop
pop
xchg
push
or
mov
in
decb
add
ss
jmp
rorl
adc
lahf
push
jno
inc
cmp
aad
shr
cmp
sbb
lods
dec
int
xor
add
test
fiadds
stc
popf
push
dec
xchg
dec
pop
add
sub
push
pusha
mov
dec
mov
lock
fldcw
mov
cmp
pop
or
rcrl
aaa
adc
pop
fnstenv
inc
mov
cmp
adcb
xchg
adc
pusha
movsb
cmp
or
je
jg
mov
cwtl
addr16
and
jno
cmp
sub
adc
and
cwtl
adc
scas
out
sahf
or
mov
jnp
jnp
aad
lret
add
popf
or
iret
clc
pusha
adc
jecxz
xor
jb,pn
sub
xchg
cmpsl
mov
shr
loopne
rcll
mov
movsb
shll
xchg
pop
mov
mov
cltd
insl
mov
xor
pop
cmp
inc
xchg
daa
push
sbb
fsubl
in
mov
test
xor
inc
ds
call
sbb
xchg
test
cmp
jge
imul
outsl
stos
xor
cltd
cmp
pop
in
mov
stos
ret
cmp
pop
lds
sub
lcall
iret
mov
pusha
sbb
aas
addr16
daa
cmp
jns
xchg
test
stos
pop
jmp
pop
push
ss
fists
lods
ficomps
pop
rcrb
scas
into
ljmp
sti
cmp
cmp
push
mov
js
out
scas
aaa
lods
inc
xchg
mov
or
notb
stos
test
fs
dec
cmp
cltd
loop
inc
or
decl
shlb
sub
loope
insl
fstpt
push
rclb
sets
xor
xor
out
out
in
enter
xor
jbe
dec
scas
stos
mov
jecxz
aad
aas
notl
cmp
aas
jle
adc
leave
or
xchg
cltd
inc
xchg
adc
cli
pop
sub
daa
mov
jmp
sbb
xchg
or
aam
clc
sub
stc
les
mov
nop
sahf
js
std
push
fnsave
sbb
movsl
xchg
add
xor
cmpsl
jl
mov
ret
xor
and
push
rolb
and
outsl
or
xor
mov
repz
pop
mov
jns
cmc
lret
fdivrs
add
adc
movsl
mov
adc
pop
xchg
jle
test
mov
sbb
xchg
arpl
sub
inc
lret
pop
leave
daa
cmp
xchg
fsubrs
out
cs
jbe
adc
sub
sbb
add
jmp
pop
mov
loope
pop
push
mov
fdivrl
add
pop
jmp
push
xchg
test
leave
add
shlb
out
push
mov
xchg
test
xchg
out
lret
sbb
out
adc
mov
jl
xchg
jne
mov
xchg
dec
sbb
popa
outsl
xor
lahf
push
xor
inc
cwtl
outsl
xchg
cli
cmc
add
out
pop
mov
or
insl
insb
cld
cmpsl
inc
cltd
dec
sub
mov
xchg
iret
pop
adc
cmp
imul
mov
les
mov
sahf
incb
add
test
xor
ja
repz
sti
mov
fcmovnb
test
ret
mov
mov
popa
mov
testl
sbb
scas
fcompl
enter
out
scas
and
mov
lea
hlt
push
cmp
andb
or
int
mov
sbb
rorb
jl
mov
ds
std
sbb
fldl
test
repnz
push
push
pop
dec
sub
rclb
mov
dec
test
sti
pop
das
call
dec
jns
mulb
pop
xor
dec
mov
and
hlt
movsl
cmc
and
cmc
sti
andl
cmc
xchg
iret
jg
fsubrl
leave
popf
cltd
jbe
fcmovnb
push
cli
movsb
cli
mov
push
dec
mov
dec
sahf
cmp
lret
cli
aas
mov
aad
pop
outsl
test
ljmp
push
repz
daa
xchg
jns
test
cltd
mov
fnsave
decl
push
test
icebp
std
push
xchg
clc
jns
jb
xchg
addl
sbb
rorb
sub
enter
mov
leave
test
and
gs
mov
int
into
vmovaps
xor
shll
pop
repnz
cli
cmp
and
out
add
jno
outsl
sub
and
jge
cmpsl
daa
pop
mov
sub
pop
xlat
and
push
pop
pop
adc
shrb
lods
mov
xchg
mov
xor
testb
and
je
jp
adc
inc
imul
xor
sub
jnp
mov
gs
orb
imul
rclb
lahf
shrl
call
adc
dec
jg
xchg
mov
dec
jge
push
arpl
cmp
pushf
mov
scas
adc
mov
pushf
jo
daa
scas
data16
sarl
adc
les
xor
add
mov
fiaddl
cwtl
pop
push
jmp
shrb
ffree
jl
sub
enter
mov
mov
jp
testl
fs
loopne
das
int
lock
push
ljmp
or
lods
arpl
adc
nop
push
insb
mov
mov
add
mov
je
mov
mov
push
and
jne
ficomps
stc
stos
inc
dec
fstl
adc
insb
push
inc
fdivl
ja
lret
push
test
cmpsb
daa
sti
shlb
in
mov
dec
movsl
jmp
mov
mov
fwait
cwtl
lock
mov
stc
jno
add
or
xor
jl
xor
stos
out
movsb
jb
adc
scas
lds
aam
movb
adc
mov
jge
ja
inc
iret
add
cs
outsb
sbbb
add
jnp
dec
fldenv
stos
loopne
enter
dec
fisubs
sub
or
add
loopne
push
cld
cmp
fucomip
insb
stos
mov
cs
jecxz
dec
imul
aam
inc
inc
sbb
loop
call
or
push
lods
push
cmp
and
xchg
loopne
into
das
sub
test
lret
or
aas
lret
js
mov
push
or
testl
fwait
sti
mov
push
movsb
sbb
std
out
das
cmp
jle
push
jmp
fs
je
sbb
push
adc
xor
inc
jae
cmc
inc
mov
movsw
addb
test
movsb
mov
ljmp
fdivs
mov
mov
mov
or
inc
push
push
pop
mov
dec
mov
xchg
mov
sbb
loope
pop
addr16
int3
push
lock
mov
lret
mov
push
shl
dec
subl
xor
pop
mov
popf
adc
sub
aas
addr16
cmp
sahf
test
mov
mov
dec
fwait
negl
sbb
mov
jmp
ret
sbb
int
mov
push
inc
mov
fistpll
xor
mov
insl
fnsave
std
or
aaa
gs
test
lahf
int3
fninit
bound
inc
in
inc
imul
dec
cli
xchg
cld
popa
xlat
mov
jmp
add
je
nop
adc
mov
mov
cli
test
leave
lcall
fadd
pop
test
or
ficomps
in
mov
pushf
lret
sti
arpl
pop
push
leave
mov
fistpll
push
push
mov
add
enter
adc
dec
pop
out
sub
out
mov
xchg
jge
js
mov
rolb
dec
mov
push
adc
pop
lock
loopne
jne
mov
xor
loopne,pt
bound
clc
mov
imul
lcall
lcall
sbb
test
inc
mov
adc
mov
xchg
in
jne
adc
adc
cld
inc
push
pop
gs
fildl
and
adc
cmp
sub
mov
cmp
mov
add
pusha
cmpsb
loop
mov
dec
je
inc
in
sbb
in
rcrb
stc
divb
mov
xchg
xchg
ljmp
cmp
cmp
mov
bound
jno
jae
test
sbb
jg
cmc
xchg
ss
sub
sub
xchg
ss
push
dec
xchg
lods
mov
xor
scas
fcoms
aaa
je
jl
inc
fsubrs
lea
inc
inc
icebp
xchg
dec
dec
fistpll
jne
mov
jnp
mov
jbe
mov
imul
sub
jge
in
fistpll
jb
xchg
mov
repz
add
xor
ljmp
push
stc
and
rcr
xchg
mov
fidivl
push
and
outsl
xor
js
testl
cmp
adc
sbb
das
xchg
mov
std
test
mov
xchg
xor
stc
push
sub
inc
sbb
inc
mov
xchg
push
sub
mov
xchg
pop
jp
mov
mov
aaa
out
scas
pop
push
sti
xor
sbb
inc
ds
es
add
and
das
into
dec
or
arpl
xlat
mov
adc
xor
mov
sub
negl
lret
xchg
mov
fcmovnu
and
outsb
mov
inc
mov
shl
iret
cld
sbb
push
sbb
movsl
add
xchg
orl
pop
sarl
insl
add
loopne
imul
movsb
aaa
mov
lret
addr16
mov
pop
push
mov
jnp
fdivrl
or
push
movsb
mov
mov
lea
stos
jbe
inc
lcall
mov
pop
lahf
es
and
call
pusha
lahf
jnp
mov
dec
movsb
or
orl
jb
pushf
push
dec
enter
or
mov
cmpsb
or
cli
mov
mov
push
adc
or
or
dec
xchg
fsts
dec
rcrb
cmp
or
dec
loopne
xchg
ljmp
lock
inc
jp
movsl
flds
jbe
add
and
and
dec
lds
dec
lahf
test
mov
mov
inc
cmp
hlt
shrb
and
mov
inc
insb
or
fwait
dec
mov
and
and
mov
cmp
loope
bound
dec
lods
jbe
sbb
fwait
in
mov
scas
hlt
adc
and
mov
shll
dec
or
imul
faddp
or
jmp
mov
lret
jns
faddl
aad
icebp
mov
jne
ret
cmp
gs
adc
out
push
fisubl
inc
rcrb
cmp
xor
adc
addr16
addl
les
shl
stc
push
in
fxch
pop
rcrl
dec
mov
cmc
xchg
inc
push
sub
arpl
push
pop
dec
test
pop
add
xchg
push
jle
cwtl
fwait
in
lock
adc
jmp
inc
xchg
stos
jge
cmpb
imul
mov
imul
pop
adc
dec
pop
sub
sbb
adcb
shrb
clc
ja
sbb
cmp
std
and
cmc
fstl
bound
ss
cli
cmp
or
or
jmp
sbb
bound
aam
popf
sub
jl
adc
movsb
imul
fs
mov
je
hlt
scas
es
dec
sbb
jae
mov
adc
push
jge
inc
sub
dec
rcll
pop
aaa
iret
and
jg
push
stc
sbb
or
outsl
rorl
sub
xor
fnstsw
mov
roll
iret
insb
sbb
nop
xchg
add
lods
das
sub
jmp
popa
xor
out
adc
add
inc
cmp
xor
loop
sbb
aad
dec
adc
add
cmp
test
jmp
loop
out
fstpt
imul
sub
adc
iret
sub
or
cltd
inc
or
pop
js
mov
sbb
add
xor
fdivl
push
adc
cmp
push
xor
mov
inc
add
imul
xor
negb
lret
rol
test
add
daa
mov
pusha
loope
or
out
mov
mov
sub
rcll
pop
std
div
xor
jg
add
daa
fwait
lcall
pop
pop
stos
out
or
inc
arpl
or
sub
subb
or
mov
adc
lret
clc
testb
sti
push
adc
insl
xor
js
inc
cmp
push
push
xor
rcrb
jg
jb
inc
pushf
jle
push
aad
dec
ret
test
push
cmp
push
std
adc
sbb
pop
stc
xchg
rclb
or
lods
mov
xor
orb
clc
xchg
jmp
mov
int3
sbb
xor
fisttps
call
scas
xchg
aaa
pop
pop
sbb
cmp
mov
das
addr16
es
push
push
mov
push
shlb
and
push
int
jmp
fdivrp
xchg
xchg
notb
outsl
jnp
outsb
out
into
dec
jg
imul
fidivl
mov
test
das
ret
mov
in
add
mov
stc
lahf
pushl
pop
cmp
mov
dec
std
ficoms
in
add
dec
enter
mov
repz
fcmove
pop
mov
andl
test
xchg
fs
push
bound
xchg
lret
jmp
push
imul
fldenv
sub
push
dec
aad
lods
into
sub
xchg
jp
out
push
adc
mov
push
push
icebp
mov
lahf
bnd
fs
outsl
ret
mov
mov
subl
push
shll
jl
mov
mov
testb
or
push
ljmp
nop
enter
push
jnp
sti
add
lock
andl
or
mov
shrb
dec
mov
mov
ljmp
or
pop
loopne
xor
aaa
adc
icebp
push
dec
loop
push
roll
xchg
inc
xchg
inc
or
icebp
cmp
mov
sbb
outsl
pop
inc
mov
addr16
gs
xchg
daa
mov
inc
rorb
cmc
divl
push
mov
ret
inc
inc
inc
xchg
push
das
sub
adc
je
ret
jmp
insb
aam
jmp
mov
nop
addr16
sti
cmpsl
inc
out
scas
les
and
into
incb
xlat
dec
mov
addl
iret
js
lret
psrld
xor
lcall
imul
and
dec
push
and
sbb
add
scas
sub
or
and
and
sub
stc
or
or
hlt
push
jbe
pop
mov
enter
insb
mov
push
aas
enter
lods
push
xchg
nop
cmp
add
das
ljmp
out
test
push
xchg
jmp
cmp
cld
dec
push
lea
popf
push
add
pop
mov
int
mov
jb
mov
push
jno
xor
cmc
ljmp
test
addr16
inc
cmpsb
pop
das
push
sbb
and
push
or
adc
inc
or
lcall
mov
dec
inc
push
js
add
mov
jge
mov
or
pop
das
jle
addr16
sti
arpl
push
clc
insb
nop
pushf
sbb
jbe
xchg
sub
fnstsw
les
lods
mov
mov
adc
push
popa
mov
orb
bound
fcompl
cmp
leave
lfs
orb
pop
fstl
xchg
into
sbb
inc
addb
jo
adc
arpl
lret
loop
ficomps
mov
jp
stc
outsl
je
movsl
popf
nop
xchg
adc
jnp
mov
outsb
pop
les
jg
enter
adc
fimull
imul
xchg
outsb
lea
jp
in
cli
mov
fs
mov
push
testb
repnz
in
stc
subb
aad
sub
pop
mov
pop
inc
iret
and
xchg
repz
lahf
in
and
pop
push
test
jnp
mov
pop
inc
rclb
fs
call
lcall
xor
fs
pop
das
or
in
pop
stos
pusha
mov
sti
pop
pusha
in
pop
inc
movsl
sub
aad
adc
bound
push
jge
jg
pusha
pop
ret
int
mov
dec
inc
mov
cmp
enter
xchg
lahf
lods
popf
enter
out
push
cli
mov
mov
fldz
lcall
hlt
aas
call
cmpsb
outsb
push
enter
mov
xchg
rorl
xor
lea
xor
xor
pop
test
mov
aaa
adc
mov
jnp
leave
aad
out
mov
xchg
or
adc
jle
sahf
xorb
inc
aaa
cltd
aam
fsubrp
mov
push
cmpsl
mov
xchg
lret
lock
adc
inc
sub
rcrl
js
popf
lahf
add
fstps
repnz
xchg
pop
ret
out
cmp
inc
lret
lcall
sbb
lcall
mov
scas
lds
mov
daa
das
pop
std
jne
xor
lret
sti
pop
les
repz
inc
pop
mov
nop
pop
jo
roll
and
adc
test
xor
jae
movsb
hlt
je
lcall
jns
out
outsb
inc
mov
nop
dec
inc
fwait
shlb
sbb
sub
jecxz
lahf
enter
ja
das
cs
cmpb
sbb
fidivs
add
add
jno
dec
mov
rorb
push
pop
imul
xchg
scas
fbld
xor
add
push
daa
mov
ljmp
or
jae
pop
and
pop
idiv
imul
cmc
add
add
sti
pop
movsl
mov
scas
or
insl
adc
das
fisubrs
push
push
inc
insb
mov
ret
xchg
les
fs
cwtl
jne
dec
jne
pop
xor
fcomps
and
in
sub
push
imul
fdivrl
mov
push
inc
jae
in
repz
pop
ret
nop
push
lret
dec
jle
sahf
clc
sahf
daa
dec
jne
fists
ds
mov
dec
stc
call
mov
daa
dec
loop
sbb
ss
ficomps
ds
jle
mov
sahf
lds
cmp
les
sub
jmp
add
cld
mov
std
mov
pop
scas
aad
aad
jp
inc
cmp
pop
es
xchg
pop
repnz
dec
jg
mov
aam
out
xor
jge
lcall
push
jge
loopnew
test
dec
dec
mov
pushf
and
xor
xor
sbb
leave
ret
int
jmp
inc
dec
cmpsb
or
push
loop
in
jo
lock
add
nop
sub
ret
sub
and
ja
mov
in
rolb
jg
and
cmpsb
mov
xchg
inc
cmc
movsb
adc
dec
xchg
out
xchg
xchg
addr16
xorb
ret
lret
sub
mov
andb
mov
sarb
sbb
int3
arpl
mov
push
orb
dec
imul
dec
mov
mov
sub
pusha
jo
lret
inc
or
xchg
pop
addr16
popf
idivl
inc
das
xor
add
fstpl
pop
cli
sub
pop
scas
xlat
jmp
enter
push
add
jecxz
in
cmp
jo
rorb
cmp
sub
dec
cmp
cld
pop
mov
add
jmp
loop
cmpsb
jl
xor
insb
arpl
js
jo
lods
movsb
xor
fnstcw
aas
negl
or
es
jne
and
lods
cltd
fnstcw
stos
popf
inc
mov
and
hlt
push
fwait
sarl
pop
jge
movsb
jg
xchg
ss
and
in
xchg
mov
and
repz
js
ret
sub
ljmp
xchg
rclb
sub
outsl
add
out
push
mov
inc
add
jp
addr16
add
data16
insb
add
cmp
pop
out
popf
push
sbb
dec
jne
pop
adc
mov
jle
dec
adc
insl
mov
pop
xor
pop
ret
cmp
jne
test
or
and
jmp
pop
repz
add
out
adc
jbe
mov
xchg
inc
push
test
jmp
mov
pusha
dec
in
fldl
add
dec
push
jns
mov
xchg
aas
cmp
cmp
xchg
sub
jo
jmp
fstl
xchg
mov
jle
and
test
test
fwait
dec
fisubs
fisubrs
push
lock
xchg
sub
cld
mov
xor
mov
push
loope
sahf
push
mov
out
int
nop
aas
and
inc
test
fmul
scas
or
js
push
push
fsubs
lods
inc
mov
call
and
icebp
popf
lds
dec
loopne
pop
idivb
stos
stc
loopne
push
adc
lock
cmp
mov
sub
and
pusha
pop
cmc
pop
cmp
and
cmp
sub
ljmp
leave
fsubrs
clc
or
lahf
push
lahf
rcll
ret
iret
push
jp
sahf
xchg
mov
add
push
or
xor
iret
or
inc
sub
insl
ficompl
cmpl
xchg
push
addb
in
inc
in
push
push
jnp
rclb
aas
pop
mov
mov
pop
jg
jbe
adc
push
pop
lock
test
sub
das
xor
jmp
fstps
add
xchg
in
pop
loop
jb
jns
movsl
and
loopne
filds
mov
mov
pop
pop
stos
fbstp
jle
sbb
inc
mov
pop
dec
loope
fstl
xchg
inc
jmp
out
add
outsb
int3
pop
sub
mov
data16
cli
adc
sub
dec
loop
jbe
push
fistpll
mov
out
stc
scas
shrb
mov
jb
mov
stc
dec
and
and
push
sbb
sub
je
cmp
in
lods
mov
jne
mov
fidivs
mov
jnp
cld
fistpll
out
or
jae
es
cmp
xchg
jmp
je
jb
mov
dec
inc
cld
in
lea
adc
rorl
aam
xchg
jge
adc
ret
add
dec
lea
mov
cmp
push
loop
mov
lods
add
ss
push
dec
lds
movsl
dec
test
dec
jg
mov
or
cmpsl
sti
test
mov
cmp
repnz
loopne
das
add
mov
sub
mov
push
fmuls
insb
cmp
popa
fmuls
rolb
pop
pop
mov
inc
cmp
js
xchg
cmp
sub
xchg
popf
in
jb
lcall
outsl
jns
sub
fists
xor
add
mov
daa
loop
jl
gs
or
stos
pop
testl
jae
push
jb
mov
addr16
popa
xchg
or
leave
sbb
lea
test
ror
fnstenv
mov
int
dec
mov
cmp
xor
lods
popa
fdivrp
dec
cwtl
mov
mov
leave
jg
xchg
xchg
xchg
gs
sbb
jbe
xlat
loopne
jp
es
aad
mov
push
nop
ret
mov
and
sbb
mov
xchg
mov
mov
and
testl
out
mov
and
mov
adc
and
cltd
lret
mov
std
dec
lds
mov
add
std
pop
inc
jmp
xchg
sbb
cmpsb
xchg
pop
xchg
std
pop
push
push
call
mov
test
aas
xchg
inc
cmpsl
imul
pop
fnsave
cmpsl
cmp
and
mov
mov
int3
mov
stc
mov
test
or
dec
insl
xchg
fwait
dec
cmpsb
push
fmull
fstps
xchg
movsb
jno
sbb
or
movsl
aaa
mov
mov
and
pushl
addr16
pop
inc
clc
pop
repnz
out
pop
mov
int
adc
mov
or
xlat
mov
adc
cmc
mov
cwtl
inc
jecxz
icebp
pop
ficomps
jg
cmpl
push
or
outsl
mulps
fst
cli
and
or
adc
mov
inc
fwait
mov
out
sbb
sahf
mov
xchg
adc
dec
inc
mov
in
and
rcl
mov
push
test
test
mov
bound
outsl
outsb
adc
stos
push
push
pop
movsb
ja
inc
pop
fistpl
push
out
dec
gs
pop
mov
inc
push
es
int3
mov
xor
fcmovu
mov
mov
lret
adc
mov
and
xor
push
sbb
inc
sbbl
cmp
inc
or
shlb
vmread
das
adc
cmp
das
push
repnz
cmc
outsl
aaa
jmp
ljmp
mov
cmp
shll
push
out
fmul
fprem
inc
incb
js
mov
cmp
pop
or
mov
xor
lods
cmpl
xorl
stc
sub
loop
gs
je
mov
stc
mov
rcr
pop
push
mov
xchg
icebp
or
sbb
lcall
sbb
fstp
add
mov
jge
pushf
sahf
lcall
jbe
sbb
aam
aad
xor
jge
pop
scas
push
in
aam
aaa
push
push
cmp
ja
lea
adc
xorl
pop
loopne
std
test
aaa
mov
ret
les
jp
orl
sbb
pop
jnp
push
jp
mov
and
jg
lock
lock
mov
push
jge
dec
stc
adc
rcrl
and
xor
sti
je
add
jno
cltd
ljmp
push
pop
sbb
dec
lret
pop
xor
mov
jae
jo
out
int3
dec
push
rcrb
push
mov
xchg
pop
or
push
aam
mov
xchg
jecxz
adc
xchg
xchg
cs
ret
pop
xchg
mov
das
inc
push
repz
add
jl
outsb
jecxz
shrb
xchg
idiv
adc
push
mov
mov
ret
lret
mov
popa
add
push
fwait
arpl
inc
add
add
and
int3
shrb
push
xor
pop
insb
insl
das
sbb
pop
mov
xor
mov
fdivr
adc
push
hlt
adc
mov
jbe
lods
dec
lods
mov
out
fisubrl
cld
cld
sbb
pop
adc
les
ja
call
icebp
xchg
sub
ret
cmpsb
push
cmp
xchg
rcrl
adc
aam
lods
add
inc
outsb
sbb
mov
pushf
inc
test
loop
fadd
dec
sahf
xor
pop
jle
dec
repnz
inc
dec
cs
outsb
loop
popa
push
aas
aas
xchg
cmpl
xor
cli
inc
divl
mov
jmp
mov
pop
push
mov
iret
inc
add
int3
dec
rcrb
pushf
xchg
jae
jne
adc
mov
scas
out
adc
mov
movsb
xchg
pop
cmpsb
in
clc
push
js
and
nop
jle
inc
sbb
mov
ds
jge
pop
or
nop
scas
dec
mov
rolb
sub
bound
mov
adcb
negb
xchg
insl
mov
mov
mov
enter
xchg
and
data16
xor
in
adc
sbb
inc
and
cmc
lret
mov
arpl
out
insl
test
mov
int3
movsb
outsb
jae
subl
jbe
out
cli
sbb
sbb
jg
sub
jns
mov
inc
outsb
icebp
icebp
cmp
push
fldt
das
mov
call
loope
pop
aas
mov
cmpsb
negb
in
cmp
mov
jns
test
iret
push
loopne
or
sbb
lods
dec
jmp
xchg
out
xor
cmp
lcall
lret
cwtl
push
mov
div
ljmp
insl
xor
inc
cmp
insb
ja
jle
mov
pop
jo
pause
mov
xor
lret
and
cmpsb
lea
push
and
call
nop
mov
gs
pusha
dec
mov
jg
add
xchg
xor
cmpl
or
push
mov
loope
inc
sbb
repnz
xlat
rorl
stc
mov
mov
xchg
sti
inc
sub
stos
jmp
rcl
mov
shl
xchg
loopne
ljmp
dec
mov
loopne
mov
loop
xchg
ljmp
mov
shrl
lods
push
push
mov
repnz
pop
pop
sub
clc
mov
cs
jge
mov
pop
and
push
adc
jmp
inc
lret
pushw
daa
sbb
xchg
or
roll
adc
xor
pop
push
push
xor
mov
outsl
clc
xorl
orl
jae
pop
loop
mov
cmp
neg
lcall
ja
scas
add
in
xor
test
into
or
adc
js
and
ja
xor
jl
xor
push
jb
mov
mov
and
xor
test
inc
inc
mov
sbb
imul
fcmovu
clc
pop
loopne
xchg
jbe
add
or
insl
or
pop
clc
pop
and
xchg
adc
pop
sbb
stos
sbb
and
and
sbb
push
out
cltd
ds
jge
jg
jmp
stos
out
gs
imul
push
inc
push
adc
mov
mov
adc
pop
pop
jnp
or
ror
xchg
js
jnp
sbb
sbb
and
push
dec
lds
incl
xor
fmull
mov
sbb
jae
jp
and
xchg
movsl
xchg
outsb
je
data16
popa
or
inc
subb
mov
xchg
dec
jns
nop
push
ja
xchg
fsubr
shlb
sahf
jge
xchg
sub
jmp
adc
arpl
mov
sub
test
push
lds
cmpsl
cwtl
mov
xor
scas
incl
push
mov
dec
pop
inc
or
nop
mov
sub
push
mov
push
sub
data16
xchg
pop
sub
pop
fimull
cld
out
clc
rolb
stos
or
cmpsl
imul
test
enter
clc
out
rcrb
cmp
mov
dec
clc
testl
push
fwait
sti
std
cmpsb
cwtl
out
and
dec
pop
inc
lahf
xchg
je
adc
ja
lret
dec
sub
lds
roll
pusha
aam
adc
inc
movsb
pop
stos
jno
ret
call
xchg
test
xor
loopne
test
push
mov
inc
int3
aam
pop
cli
in
mov
push
cld
or
out
test
sub
mov
lea
adc
xchg
in
aam
pop
sbb
outsb
or
or
mov
in
int3
pop
mov
in
cmp
out
popf
jno
or
sahf
inc
sub
xor
or
mov
js,pt
addl
sbb
fnstcw
or
dec
movsb
lods
and
xor
notb
pop
add
rorl
scas
cmp
mov
xchg
outsb
idivb
outsb
cs
mov
mov
sbb
je
ss
pusha
xor
adc
fsts
inc
insl
cltd
dec
je
inc
mov
xchg
pop
stos
lcall
test
dec
out
dec
push
mov
cmp
outsl
in
jge
jne
sub
jno
loopne
scas
js
dec
ficoms
xchg
ret
adc
push
repz
push
aam
mov
testl
mov
test
cmp
aaa
xchg
mov
or
xchg
fwait
xchg
shl
fsts
adc
and
push
and
in
push
out
stos
mov
cmc
jl
add
js
out
lcall
lds
imul
xchg
aas
mov
cli
xchg
mov
and
stc
nop
ret
sbb
inc
dec
in
pop
stc
mov
mov
mov
sbb
int3
lea
int
pop
test
lret
stc
inc
shr
icebp
dec
jl
xor
stc
push
inc
sbb
or
add
xchg
shll
movsb
repnz
test
push
sub
sub
lds
cs
aam
xchg
jnp
cmp
mov
andl
sti
call
inc
arpl
jg
data16
inc
add
sub
sub
ljmp
mov
pop
and
push
xor
inc
cmp
fwait
xchg
or
mov
insl
lds
les
scas
jbe
cmp
or
pop
mov
pop
pop
inc
mov
addl
push
movsl
xchg
orl
jae
bound
movsb
inc
es
loope
mov
ret
dec
mov
das
dec
pop
inc
push
cmpsl
dec
andb
dec
gs
inc
mov
test
jecxz
movsb
imul
sti
push
bound
mov
mov
xchg
and
inc
mov
addr16
pusha
flds
jp
push
scas
fs
pop
repz
scas
in
sbb
jne
pop
mov
jnp
cmp
mov
neg
mov
xor
in
repz
ljmp
or
pop
add
test
outsl
ljmp
bound
pop
jle
sti
lock
in
cmpl
popf
jge
mov
in
inc
cli
pop
mov
sbb
add
mov
xchg
orb
lods
mov
call
cmp
stos
in
or
adc
pop
sub
push
adc
cmp
enter
push
daa
jo
dec
jne
mov
jl
imul
in
mov
cwtl
sti
in
lahf
fldl
sar
xor
push
subb
pushl
les
mov
insb
imul
test
lret
adc
ror
cmp
fcmovnu
fdivrp
mov
pop
add
sarl
push
fbld
adc
push
dec
mov
cmpsl
popf
dec
mov
push
pop
sub
adc
sub
sub
into
sub
pop
or
sub
push
sbb
sub
stos
adc
sbb
push
pop
lcall
pop
jp
xor
cmp
cmpsb
mov
sbb
cmp
pushl
cmp
and
lock
loopne
inc
sbbb
dec
pop
sbb
iret
imul
sub
outsl
jl
pop
daa
repnz
pushf
out
divb
std
mov
dec
jns
loope
test
dec
jne,pt
inc
dec
mov
imul
icebp
or
and
jae
dec
inc
in
push
outsb
incl
xor
sub
mov
mov
pop
movsb
add
pop
sbb
repnz
lds
mov
je
bound
adc
sar
shlb
sub
cmc
data16
add
dec
mov
int3
les
dec
lods
adc
push
in
aaa
jle
mov
and
push
cmp
mov
push
adc
push
pop
xchg
jmp
mov
or
in
arpl
push
ds
jge
sub
lods
stos
movsb
xchg
xor
xor
push
jae
lahf
mov
aaa
imul
in
clc
fmuls
js
xchg
in
lret
adc
repz
pop
test
sub
sti
loope
fldz
cmp
cwtl
insl
sub
mov
sub
out
int
mov
mov
xchg
mov
dec
gs
in
daa
mov
dec
aas
mov
push
aam
xorb
ljmp
sub
push
cmp
or
or
mov
pop
cmpsb
sub
pop
stos
test
adc
adc
dec
insb
and
xchg
mov
sbb
adc
lret
push
faddp
movsl
leave
out
push
xchg
cltd
cwtl
stc
push
es
lods
inc
ss
dec
lahf
jp
repnz
and
cmp
in
push
inc
or
sbb
inc
sub
ljmp
jns
orl
mov
lret
mov
cmpsb
cltd
daa
pop
add
xchg
gs
mov
jmp
std
test
sbbl
push
shrb
sub
into
out
mov
xor
dec
movsl
adc
jb
push
and
lods
call
dec
inc
ret
dec
mov
sahf
rol
outsl
xchg
imul
fisubrs
iret
and
or
ds
lods
stc
jne
sarl
movsb
sbb
and
inc
xor
pushf
cs
sub
sbb
aas
mov
mov
inc
mov
jnp
ss
cmp
pop
cmp
cwtl
insl
pop
xchg
xchg
cmp
ss
fildl
arpl
and
mov
data16
push
loopne
insb
mov
gs
cld
jne
adc
movsl
jle
jnp
orl
xor
jbe
mov
or
or
xchg
inc
ss
sbb
lret
sti
push
xchg
outsb
mov
mov
inc
or
int
lods
adc
pop
mov
cmpsl
inc
retw
mov
ficomps
pinsrw
rcrl
sbb
fmulp
les
dec
dec
xchg
bound
dec
inc
enter
jbe
add
out
rcr
cmpsb
cmp
add
cmpsb
pop
cmp
adc
cmpxchg
stc
imull
insb
aaa
dec
sahf
sahf
sbb
xlat
pop
mov
pusha
fimuls
leave
jg
lret
mov
or
ret
stos
rorb
hlt
mov
rorl
repz
sbb
lret
cwtl
fistl
in
push
pop
lods
push
jns
add
mov
cmp
and
dec
cmp
sbb
data16
jae
inc
les
inc
mov
aas
out
sbb
jbe
rolb
and
mov
ret
jle
negb
outsb
mov
in
enter
sub
xchg
outsl
popf
xor
mov
sub
inc
cmp
jmp
lret
mov
jg
cmp
mov
mov
mov
sub
add
push
mov
outsl
jecxz
mov
aas
push
jnp
aam
mov
cs
std
mov
or
mov
test
or
jp
out
icebp
out
mov
daa
jecxz
add
loopne
dec
rol
xorl
ret
jb
adc
mov
sub
cwtl
sbb
mov
sub
inc
in
or
adc
mov
jno
mov
sbb
push
lret
inc
test
mov
mulb
jg
rolb
xor
movsl
dec
test
pop
sub
pop
je
fs
movsb
je
lods
adc
mov
pop
push
ret
ljmp
xchg
or
pop
jl
jg
aam
or
addr16
das
or
pop
inc
imul
lret
fldln2
push
pop
mov
fwait
std
jae
and
ds
out
ret
jbe
cmp
mov
dec
mov
sbb
movl
fisubrs
enter
cmp
out
push
push
xchg
sbb
fwait
cmp
jne
mov
mov
push
fsts
cmp
or
fucomi
daa
cwtl
dec
sti
leave
xchg
mov
addr16
cmp
push
ljmp
cld
xchg
xor
mov
mov
jmp
jmp
cltd
xchg
icebp
cmp
negb
cwtl
outsb
hlt
sbb
add
xor
mov
mov
stos
dec
mov
cmp
push
pop
dec
adc
inc
mov
popf
mov
cmpsb
dec
jmp
fwait
push
out
pop
pusha
inc
repnz
push
mov
mov
repz
sub
lds
data16
mov
mov
dec
and
pop
jl
aad
int3
dec
add
adc
imul
jle
lahf
shll
out
fcoml
mov
mov
movsb
and
sub
pop
jb
sahf
pop
xor
cmp
arpl
push
lret
icebp
in
jbe
mov
ja
subl
mov
icebp
pushf
rolb
and
imul
out
ss
push
add
addr16
push
in
xor
je
mov
fsubrl
inc
mov
dec
outsl
in
loopne
xor
test
mov
xchg
and
shll
mov
mov
dec
cli
sub
inc
fwait
dec
call
xchg
lods
sub
mov
into
sbb
jge
aam
iret
pop
out
jecxz
add
popf
inc
dec
inc
jns
lods
xchg
ljmp
mov
xchg
repz
out
lcall
sub
ja
jmp
rclb
cltd
aaa
scas
sbb
repnz
jbe
out
sbb
and
adc
cmpsl
sahf
shlb
lret
ds
pop
inc
cmp
or
adc
jmp
jno
mov
jp
jmp
rcrl
and
in
repnz
popa
jno
sahf
mov
fcmovnb
in
pop
test
pusha
repz
das
cmp
in
cli
lcall
mov
mov
rorb
push
push
jne
sub
fstps
pop
sarl
pop
std
inc
fimuls
je
std
addl
loopne
add
scas
jne
mov
jns
push
mov
insb
test
iret
mov
jno
pop
dec
imul
xor
lret
mov
push
mov
cmp
inc
push
out
ja
loope
cmp
sti
dec
insb
mov
leave
xchg
enter
jnp
icebp
jg
mov
loop
xlat
lds
add
mov
inc
fstl
js
pop
stc
subl
shlb
hlt
jl
shrl
imul
insb
out
adc
sub
hlt
je
pop
dec
push
push
adc
rclb
add
pop
pushf
sti
stc
arpl
cmp
mov
xchg
or
movsb
int3
xchg
mov
sub
stos
add
dec
out
pop
je
fidivs
push
mov
mov
sbb
bound
jns
xchg
fistpll
mov
in
fildll
sub
inc
cmp
cmpsl
lock
mov
insl
jo
shl
mov
sub
xchg
cmp
incl
fisttps
movsl
jl
mov
jbe
inc
test
cmpsl
sbb
mov
xchg
test
adc
jp
xor
push
aad
das
xor
cmp
int
sbb
mov
fmulp
pop
fstl
scas
sti
and
dec
jbe
sub
add
cmp
jns
dec
mov
push
mov
es
ja
or
dec
fwait
sbb
cmp
decl
dec
sub
mov
cmp
daa
sub
insb
pop
or
pop
mov
add
arpl
mov
dec
push
shll
jmp
jecxz
xor
mov
dec
and
sbb
ljmp
lods
xor
pop
mull
or
dec
dec
cmp
mov
mov
jle
std
hlt
jne
arpl
mov
jne
movsb
jne
push
jecxz
mov
cmpl
dec
inc
lock
setnp
sub
adc
cmp
into
jl
in
inc
in
icebp
ds
add
cmp
mov
mov
sub
lods
dec
cmpsb
xchg
int3
cmp
jmp
jbe
daa
cld
cmpsl
jo
add
adc
scas
movsl
mov
inc
add
push
pop
testb
adc
pop
cmc
cmp
test
shr
or
mov
into
jno
pop
popa
rcr
jmp
fstps
and
or
scas
mov
jge
aas
enter
cli
ret
clc
jne
push
adc
add
sbb
rorl
sbb
into
ret
or
mov
xor
daa
lahf
std
adc
fstps
xor
sub
adc
mov
outsl
add
mul
call
add
mov
xchg
and
fld
push
pop
or
stos
out
or
and
dec
mov
jno,pt
or
call
dec
cmp
jno
cmp
test
cmpsb
lods
pop
push
pop
and
in
jae
sub
mov
setae
popa
and
add
fstps
mov
leave
cwtl
xor
add
stos
cmp
push
xchg
jl
mov
out
push
mov
cmp
clc
scas
hlt
adc
lcall
mov
dec
jns
or
mov
popf
fdivrs
addr16
sbb
add
cmp
stos
push
enter
in
notl
out
push
jnp
in
cli
inc
xchg
decb
movnti
shl
jb
fdivs
data16
stos
lods
fstpl
xsave
cmp
or
mov
xor
ja
pop
cltd
mov
mov
and
dec
stos
sbb
mov
mov
push
rclb
dec
adcl
dec
mov
psubusb
std
vpunpckhbw
lea
jle
lret
insl
insl
in
fidivs
mov
cltd
mov
sbb
nop
into
ffreep
inc
push
and
mov
loop
dec
adc
or
sub
call
dec
jmp
test
test
push
dec
ljmp
dec
test
js
cmp
cli
add
push
push
mov
pop
arpl
pop
por
jmp
sbb
idiv
in
insb
xor
ss
out
push
or
sbb
movsb
jg
xchg
insl
inc
sub
enter
cs
adc
lds
jg
pop
out
or
cmpsb
icebp
dec
cld
data16
test
ss
xchg
scas
cs
jl
adc
das
fisttps
xorl
movsb
cmp
and
and
lea
pop
add
mov
imul
adc
jge
outsl
jecxz
lret
inc
and
nop
pushl
ret
jne
imull
sub
mov
movsb
inc
shll
inc
jecxz
mov
inc
jb
aas
fldl
jnp
imul
das
add
sbb
push
das
movsb
pusha
daa
lahf
adc
outsl
sbb
inc
fildll
ss
xor
sti
decl
add
sti
popf
cs
rclb
cwtd
lret
cmp
aam
iret
jb
mov
popa
mov
movsl
arpl
mov
dec
popa
fildl
pop
sub
pop
push
add
stos
jae
decb
pushaw
mov
pushf
outsl
and
inc
inc
adcl
in
fmull
mov
mov
inc
mov
cmp
xor
mov
loopne
in
sbbb
cmp
shl
jp
dec
inc
inc
fucomip
stos
cli
ljmp
mov
hlt
add
sub
mov
ljmp
xchg
jb
cmp
pop
mov
or
mov
mov
sub
fistpl
sbb
mov
out
jno
xor
cltd
mov
in
mov
test
repnz
ja
fs
orb
fwait
daa
inc
clc
jge
addl
sbb
push
pushf
adcl
int
and
mov
push
cmpl
xchg
rorb
lea
push
dec
call
add
xor
mov
jp
cmp
aam
dec
int3
pop
lock
xor
sub
out
outsl
pop
sub
mov
jmp
inc
shrl
mov
mov
pcmpeqw
adc
push
push
mov
pop
iret
push
nop
xchg
mov
shrb
add
jp
mov
xchg
adc
outsb
popa
xchg
test
sbb
mov
sub
dec
dec
and
jmp
and
cmp
fdivrs
loop
out
jmp
mov
adcl
fxam
xchg
pop
shrb
xor
fcomps
cld
dec
mov
mov
sbb
jae
jne
xchg
int
push
fidivrs
mov
rol
inc
sbb
pop
xlat
or
mov
push
sbb
push
adc
or
sub
mov
push
and
sub
test
out
icebp
push
cmpsb
push
inc
add
pop
es
test
shl
cmpsl
jnp
mov
add
push
adc
ret
add
and
fcmovnu
xchg
cmc
rcrl
insb
leave
clc
mov
xor
cli
nop
dec
cltd
mov
and
add
lods
jb
outsb
cli
mov
jo
adcb
stc
addb
and
mov
and
test
and
inc
push
mov
sub
stos
push
mov
mov
push
pop
sahf
jge
mov
mov
movsl
movl
dec
pop
iret
cmp
adc
and
bound
add
cmc
pop
pop
pop
xchg
xchg
pop
stc
jae
dec
xor
xchg
sbbb
jmp
test
push
mov
fmul
inc
push
inc
jmp
push
leave
add
cld
jmp
fildl
xchg
lods
jo
jno
es
inc
bound
xor
insb
jno
jmp
push
sarb
push
sahf
shl
jbe
out
pop
imul
push
cltd
jo
inc
or
jecxz
notrack
push
adc
repnz
and
sbb
test
sbb
jno
push
sbb
les
out
pop
add
cmpsb
fbld
mov
rcll
sti
pop
xchg
push
xchg
jg
aaa
push
cli
inc
inc
idivl
cltd
xchg
popf
dec
lock
pop
outsl
cmpsl
push
dec
cmpsl
pusha
cli
xchg
dec
jnp
fcmove
ficomps
mov
lret
pop
xorb
movsl
mov
cmp
es
fdivl
xchg
xor
jbe
push
mov
lea
dec
addl
jno
xchg
lret
and
inc
xchg
scas
push
pop
dec
imul
fdivrs
mov
insb
jns
cmp
lods
jns
adc
fwait
add
push
add
ror
or
pop
cli
sti
dec
and
dec
inc
cmp
clc
push
insb
inc
lcall
push
inc
imul
js
adc
add
scas
scas
jo
test
and
xchg
in
in
fdivs
and
mov
xor
aaa
jg
and
xor
outsb
cld
pop
push
das
push
scas
or
mov
and
cs
pop
cmp
fucomp
xor
add
ds
sbb
sub
or
insb
addb
dec
push
insl
aad
call
ss
or
xchg
icebp
cmpsl
addb
jo
dec
repnz
out
inc
mov
arpl
lret
push
fsubrp
or
stos
cli
fldt
sub
mov
imul
pop
cmp
xor
push
push
sub
push
push
mov
fwait
shll
or
out
rcrb
add
notl
shr
inc
mov
mov
es
aas
mov
clc
xorl
or
adc
fisttpll
mov
and
sub
clc
ja
xchg
into
scas
out
mov
dec
pop
outsb
lds
dec
call
inc
push
mov
test
fdivs
inc
mov
pusha
fmull
shrb
and
fmull
sahf
loop
dec
es
push
xchg
xchg
jp
adc
mov
xchg
fimull
rolb
jae
mov
cmp
std
aad
push
ds
and
std
std
rclb
cmp
adc
mov
xchg
xchg
push
inc
xlat
xor
mov
mov
inc
je
push
mov
mov
scas
je
cmp
lock
aas
outsl
jle
data16
cmpsl
mov
aas
or
mov
cmp
pop
int3
jnp
rcpps
mov
mov
mov
cld
icebp
fisttpl
pop
or
sbb
je
xor
aaa
je
insb
clc
in
jb
loop
in
rolb
cwtl
cwtl
or
jb
xchg
jmp
gs
mov
testb
bswap
les
lret
scas
pop
jecxz
pop
push
adc
jp
aad
cld
fsub
sub
adc
cld
insl
add
aas
xchg
lods
lds
call
stc
insl
cmp
sbb
aam
push
or
xchg
push
incl
rorl
push
pop
mov
xor
pop
mov
call
xchg
push
xchg
aaa
cmp
cld
lret
notl
xchg
inc
dec
and
sbb
mov
inc
or
lea
pop
cmpsl
jnp
gs
lods
and
lahf
add
jae
xor
add
sbb
ja
outsb
xor
add
and
ja
mov
add
imul
jo
popf
cmp
sbb
jno
mov
push
mov
xor
xchg
insl
adc
test
test
rol
cli
adc
sbb
cmp
pop
push
sahf
jge
or
fisubrs
or
xchg
in
xchg
pop
pop
xchg
or
es
dec
stc
jle
xchg
push
lds
in
pushf
sub
pop
lods
mov
and
ljmp
mov
aam
dec
cmp
jmp
mov
and
xor
add
cmc
pop
rclb
inc
xchg
and
jmp
js
repz
fs
jp
xchg
mov
leave
inc
push
call
push
into
pop
jb
adc
stos
rcll
in
pusha
out
push
ljmp
test
orb
scas
or
fdivs
pop
mov
and
push
lods
and
push
enter
adc
xor
sbb
sub
in
insb
ret
mov
fsubrl
insl
inc
jnp
lds
and
pop
nop
mov
fsubr
add
sub
push
arpl
movsb
mov
loopne
clc
les
popa
loope
push
gs
shll
jno
mov
add
add
or
pop
and
imul
stos
imul
push
mov
loope
dec
out
daa
cmc
sti
pusha
inc
adc
test
xorl
movsl
leave
test
fwait
dec
dec
xor
pop
or
push
lods
mov
jp,pn
std
cltd
cmp
or
sti
adc
dec
inc
bound
and
xlat
sbb
sub
push
mov
cmp
dec
sbb
fistpll
cmp
mov
pop
xchg
cltd
jp
inc
ljmp
adc
mov
out
xchg
or
fadds
loopne
pop
jnp
sub
cmp
in
pop
sarb
bound
lretw
dec
xchg
idiv
mov
aas
lahf
rorb
cli
into
xor
adc
cmp
jle
daa
adc
mov
je
das
int3
das
stc
add
repnz
xchg
in
int
and
or
and
mov
or
pop
or
mov
sub
test
test
sub
and
push
in
sub
inc
lods
arpl
shll
dec
adc
mov
sahf
popf
mov
loopne
cmp
jnp
fwait
sti
sbbb
shl
adc
mov
mov
and
cmpsl
or
aam
jp
xchg
rorb
in
enter
js
hlt
mov
mov
sub
jae
int
cmp
xchg
mov
xchg
lock
pop
rcr
fwait
stos
fbstp
inc
test
repz
scas
test
mov
rorb
mov
mov
stc
or
fidivl
jle
sbb
imul
test
scas
sub
test
fnsave
sbb
lock
push
hlt
je
loope
loope
sub
push
roll
outsl
mov
mov
test
test
cli
jmp
adc
xchg
shrl
push
fcoms
pop
adc
enter
cmp
pop
xlat
pop
stos
out
cli
lods
push
je
sub
pop
mov
push
lods
cmpsl
mov
mov
sub
sub
scas
int3
ljmp
arpl
mov
in
fcomps
mov
loopne
outsl
cwtl
sub
adc
sbb
outsl
cmp
shll
hlt
pop
shll
jge
add
jmp
and
inc
sub
dec
inc
xchg
nop
mov
pop
test
cmpsl
out
fs
cmp
or
test
mov
test
mov
push
adc
xlat
jb
int
xabort
jmp
pop
jecxz,pt
jmp
movsl
push
sub
xchg
mov
popf
sbb
jle
cld
enter
cmp
xchg
icebp
add
dec
push
dec
movsl
adc
cltd
adc
out
ljmp
mov
insl
push
xchg
test
pop
call
inc
clc
loopne
mov
fiadds
mov
pop
pop
jle
fwait
jns
sbb
mov
outsl
jo
inc
xchg
jecxz
sub
fidivs
aad
repz
sbb
mov
or
popa
aam
push
xor
or
int
out
popf
xlat
lock
adc
cmp
das
jns
jnp
jns
jb
push
sbb
push
mov
inc
mov
or
out
mov
fisubl
cmc
loope
pop
xchg
xor
sub
jae
arpl
clc
cmpsb
ss
cmp
imul
hlt
scas
pop
notl
ret
outsl
pop
je
popf
sub
cmp
fdivl
inc
loop
scas
mov
mov
in
pop
xchg
lret
test
gs
sub
or
mov
and
dec
xchg
mov
sti
dec
idivl
push
addps
and
mov
mov
dec
or
imul
or
out
int
jbe
jmp
lret
push
cltd
scas
test
sahf
cmp
mov
push
mov
mov
loope
jno
lret
fdivrs
adc
pop
dec
jo
push
jp
fs
sbb
aaa
jge
mov
mov
mov
daa
mov
sbb
andl
xchg
iret
mov
popf
pushf
pop
loopne
test
lea
xchg
sbb
std
sbb
add
fmull
jae
movsl
adc
es
or
and
aad
and
add
shlb
nop
mov
sbb
add
push
sbb
or
xor
inc
add
xchg
inc
mov
mov
ljmp
aas
xor
aas
push
outsb
out
inc
dec
adc
jmp
addr16
nop
faddl
sub
xchg
jl
sarb
mov
or
cmovae
mov
js
mov
ret
das
cmp
inc
sarl
jne
lea
dec
out
sub
inc
cltd
jo
sub
sub
ljmp
loopne
cmp
xchg
data16
sub
or
cmp
sub
loope
fs
aas
xor
inc
inc
push
lea
sub
inc
in
pop
or
mov
pusha
pop
outsl
jno
insb
mov
movsl
push
xchg
mov
pop
lock
add
outsl
ds
notb
mov
nop
mov
pop
shrl
jmp
out
stos
dec
mov
ljmp
mov
jne
leave
popa
push
jle
jo
or
xchg
inc
ret
inc
mov
repnz
xor
push
loop
das
dec
arpl
and
sub
adc
test
sub
shlb
ss
sbb
cs
cli
and
xor
pop
sub
dec
jecxz
or
push
or
mov
lahf
inc
leave
popf
jmp
jle
popf
test
mov
dec
adc
js
xchg
outsb
mov
push
in
call
rol
sub
in
mov
lahf
push
repnz
ss
jae
pop
sbb
clc
lods
push
out
dec
sbb
push
icebp
outsl
cli
pop
dec
test
dec
call
pop
sbb
pop
mov
add
ret
and
mov
lea
jmp
push
dec
xor
xchg
inc
lds
dec
insb
andl
les
test
sbb
dec
je
dec
cmpsl
lds
lret
adc
imull
push
jg
pop
jecxz
jecxz
and
int
xlat
adcb
jae
cmpsl
mov
outsl
and
dec
and
pop
int3
mov
repnz
rcrb
leave
shll
mov
cmpsl
dec
mov
xchg
xchg
xchg
jl
pusha
gs
sar
xchg
je
adc
mov
addr16
in
mov
fimull
dec
jmp
pop
in
les
repz
sbb
xchg
cmpsb
jg
decb
adc
mov
lret
jge
dec
pop
xor
pusha
mov
xchg
push
adc
push
fwait
pop
push
mov
sbb
mov
test
xchg
lods
subb
loopne
jge
movsb
outsl
inc
movsl
pop
push
cwtl
push
pop
divl
xchg
es
inc
sub
imul
jne
popf
mov
insl
scas
dec
leave
xchg
mov
cmc
push
shl
mov
ss
dec
popf
hlt
xor
shrb
popa
mov
data16
inc
cld
dec
sub
out
mov
sub
rcrb
fwait
or
xchg
ret
scas
rol
inc
mov
call
mov
adc
jno
nop
cmp
lods
dec
mov
ret
sub
out
or
xchg
mov
mov
xor
fisubrl
lahf
pop
pop
or
dec
nop
inc
and
xchg
add
out
jecxz
adc
push
or
arpl
dec
push
mov
in
mov
fisttpl
ss
int3
test
add
push
and
sti
out
cmpsb
out
shl
pop
test
push
ss
jle
hlt
jge
call
test
xlat
add
sbb
lods
sbb
add
jecxz
jns
sbb
aam
or
sub
ljmp
mov
adc
lret
jecxz
mov
ds
mov
and
scas
jle
jge
mov
or
mov
vcvtss2si
sbb
fstps
mov
in
leave
sub
cmp
leave
push
sbb
sbb
jmp
xor
clc
cs
xchg
out
jns
leave
rorl
shl
jne
cmc
xor
push
and
or
sahf
mov
or
cltd
xchg
addps
xchg
and
cwtl
sub
fisubs
scas
dec
and
pop
mov
inc
sarb
jns
add
sub
inc
xchg
das
das
xchg
push
stos
ja
popa
adc
pop
jl
mov
push
leave
jp
fimull
bnd
popf
lahf
and
addl
cmp
mov
mov
pop
loopne
movsl
out
in
js
xor
pop
push
jl
ret
cmp
in
sbb
outsl
jecxz
mov
repz
xor
adc
ljmp
lods
jb
lret
mov
mov
xor
arpl
add
mov
jge
jecxz
js
mull
ljmp
lods
jp
push
lods
add
add
out
mov
xchg
int
mov
inc
ficoml
call
bound
jecxz
in
and
fs
and
dec
xchg
pop
bt
ror
mov
mov
push
inc
mov
pop
lcall
fs
pop
jae
push
clc
mov
imul
test
adc
jmp
xchg
mov
es
pushf
cmpsl
sub
iret
sbb
add
pop
pop
inc
jne
loopne
cltd
jno
adc
mov
ljmp
pop
push
mov
ret
jecxz
adc
mov
hlt
sbb
int3
cmpsl
xor
xor
sti
jp
lds
out
notb
call
addr16
imul
sbb
mov
fisttpl
xchg
mov
jl
int3
out
gs
adc
subl
arpl
roll
mov
xchg
pop
outsb
xor
loop
dec
adc
and
adc
insb
icebp
mov
and
and
in
imul
sbb
sbb
repnz
inc
in
bound
cmp
fsubl
dec
jl
push
inc
mov
cwtl
flds
in
sbb
xor
repz
ror
addb
shll
and
test
dec
cmp
mov
cmc
lahf
push
mov
dec
rorl
arpl
imul
add
jge
dec
jecxz
stos
jb
ds
xor
test
or
push
or
mov
andb
mov
mov
or
inc
mov
xchg
enter
fsubrl
leave
mov
inc
push
in
inc
into
and
testb
sbb
mov
fwait
addr16
data16
pushf
int3
movsl
push
rorb
cmp
imul
das
or
lcall
xchg
pop
cwtl
addl
ds
pop
mov
xorl
arpl
inc
mov
sub
push
lahf
mov
push
jge
lea
pop
add
mov
adc
xor
sbb
popa
dec
imul
in
mov
mov
jns
push
int3
lcall
sarl
sbb
adc
cwtl
or
jno
imul
pop
or
std
xchg
jbe
ret
and
add
push
or
stos
dec
mov
mov
scas
popa
loope
loop
sbb
sbb
pop
cs
cmp
push
xchg
mov
call
mov
jecxz
push
cmpsl
cltd
fs
sub
inc
adc
mov
mulb
xchg
or
push
stc
cmp
rcrb
pop
pop
xchg
jbe
xchg
cmc
cld
pop
fsubrs
int
and
add
jnp
idivl
adc
subb
test
fcos
in
sub
jns
int3
pushl
cmp
sbb
repnz
inc
mov
jmp
call
dec
and
sub
fldcw
mov
rclb
movl
dec
popf
daa
add
popa
mov
jo
ret
dec
mov
out
out
fnstenv
push
xchg
mov
jno
and
adc
sub
sbb
adc
and
mov
stc
ljmp
inc
call
inc
sbb
imul
mov
pop
jae
and
dec
repz
dec
mov
mov
inc
inc
movsl
add
cwtl
push
cmpsb
jle
adc
ret
mov
cs
jmp
subl
xor
imul
sbb
aaa
jle
and
pop
inc
and
xor
sbb
jne
or
andb
fmuls
push
inc
push
cltd
daa
cld
dec
pop
lret
push
insb
push
call
sarl
je
xchg
les
jnp
daa
mov
test
inc
and
dec
inc
xchg
sbb
and
addr16
icebp
dec
cmp
popa
and
and
je
xor
cwtl
adc
bound
mov
inc
pop
enter
xchg
fcoml
cltd
jmp
push
push
stos
ja
mov
popa
in
mov
sbb
cmpsb
fdivrl
jp
jl
xor
xor
fwait
sub
movsl
pop
mov
cmp
mov
push
out
push
sbb
mov
stos
pushf
mov
lock
ja
mov
imul
scas
mov
jbe
mov
mov
jl
cmp
xchg
out
ja
sarl
pusha
out
test
cmc
popa
mov
arpl
cmp
ror
or
imul
and
jmp
xchg
out
ret
ljmp
pop
les
sub
cwtl
xor
in
adc
loop
push
sahf
xchg
xchg
mov
mov
fcmovu
pushf
jg
push
ss
mov
aaa
imul
lods
bts
sbb
ret
es
les
leave
xchg
dec
mov
sbb
push
and
add
sbb
lret
xchg
sbb
lds
stos
icebp
push
xchg
inc
xor
mov
movsb
jns
scas
mulb
sbb
addr16
or
ds
push
add
sbb
jge
mov
mov
imul
push
sub
insl
test
mov
les
cltd
fimull
arpl
addr16
cmp
imul
test
fucomip
lds
sub
out
mov
pop
jo
or
rolb
pop
aaa
or
cwtl
mov
pop
test
mov
arpl
sbb
pop
sub
push
jmp
addl
shrl
jg
add
mov
push
push
add
aas
sbb
bnd
ret
and
xchg
pushl
or
arpl
xor
cmpb
dec
hlt
shrb
mov
xor
add
movsb
dec
pop
orb
sbb
cwtl
js
int3
outsb
lahf
inc
test
adc
cmp
and
dec
testl
adc
xor
loope
mov
xchg
pop
jp
and
jns
xor
sbb
pop
jbe
xor
cmp
lahf
scas
cmp
out
jl
sub
je
add
insl
pusha
aad
in
xchg
inc
ja
mov
decb
pop
adcb
sub
mov
push
xchg
mov
bound
repz
xchg
in
repnz
jl
jg
mov
xor
daa
popf
icebp
pop
sahf
inc
mov
cwtl
loopne
mov
mov
pop
iret
push
sub
stc
jl
xor
imul
andb
mov
dec
lret
sahf
lret
test
int3
fbstp
cmp
repnz
ss
dec
orb
loope
jno
mov
clc
dec
shrb
cmp
nop
pop
mov
cld
dec
inc
pmaxsw
hlt
dec
mov
dec
mov
clc
pop
cli
pop
jae
dec
or
cmpsb
inc
out
fsubr
cmp
test
push
adc
stos
jo
cmc
mov
ljmp
adc
jbe
mov
shll
imul
xchg
inc
adc
mov
pop
or
data16
fdivrl
ss
aad
cltd
cmc
dec
scas
xchg
mov
leave
jecxz
push
xchg
outsb
and
out
divb
leave
int
les
ds
pop
call
jp
dec
push
pop
add
jne
imul
lret
out
pop
unpcklps
jmp
out
xor
xchg
in
imull
imul
stos
and
or
jecxz
mov
cmpsl
push
fnstcw
cld
xchg
and
fcomi
out
or
shrl
mov
inc
xchg
fs
repz
sub
jo
adc
ja
cmpsl
mov
mov
push
mov
arpl
cvtps2pi
dec
pop
repz
and
jl
in
je
sub
dec
testb
lcall
aam
jne
js
push
mov
fnstsw
push
fidivs
cmp
mov
and
or
cmp
mov
iret
xchg
add
push
gs
mov
sbb
lock
in
jge
adc
pop
adc
cmc
adc
xlat
popf
les
test
test
ja
ficoms
fisttps
sub
push
and
push
push
or
push
or
jb
addl
dec
fistl
dec
pop
test
cli
std
push
sub
imul
pop
jo
inc
fs
jnp
mov
daa
push
cmp
dec
lea
lds
pushf
and
cmp
dec
cltd
mov
fcmovbe
hlt
mov
repnz
nop
lock
push
mov
cmc
lds
pop
repz
into
add
sti
stos
rcll
xor
popf
jno
dec
xchg
xchg
sbb
bound
ret
push
mov
jecxz
xor
mov
cs
xchg
outsb
movsl
sti
mov
xchg
xchg
mov
hlt
lea
jmp
inc
dec
pop
mov
jg
lahf
in
enter
pop
gs
aad
adc
or
or
jp
imul
xchg
das
movsb
xchg
fists
popl
or
pop
jbe
mov
int3
negl
add
dec
rclb
cmc
test
and
and
movsl
cmp
lret
repnz
mov
jl
leave
ja
pop
ret
add
push
ja
sub
test
xchg
dec
stos
adc
mov
loope
jg
js
addb
es
in
mov
jo
insb
pop
rcrb
lret
sub
out
lahf
lods
cltd
pop
frstor
repnz
stos
addb
mov
data16
cmp
rol
jl
cmp
faddp
std
ret
adc
cmp
pop
push
loopne
xor
dec
mov
push
inc
test
mov
or
jne
xchg
je
xchg
push
adc
ds
rorl
push
cmp
test
add
inc
mov
stos
mov
std
pop
jne
in
cmp
cld
push
imul
lcall
xor
pop
insl
xor
xor
in
mov
mov
lcall
jo
inc
pop
lea
inc
mov
and
and
inc
xchg
out
xchg
xchg
and
int3
int
mov
das
nop
mov
enter
aas
inc
gs
lock
xchg
cmc
mov
sub
mov
loop
clc
imul
insl
imul
jnp
push
enter
sbb
sbb
test
or
xor
rorl
or
mov
pusha
jl
or
mov
cli
out
sub
fs
adc
ret
mov
xchg
cmpsl
mov
dec
jb
subb
fsubrs
jae
insb
loopne
addr16
pop
dec
mov
and
push
repnz
lea
loopne
imul
stos
lods
sahf
jle
inc
cmp
ss
cmpsl
mov
cs
repz
repz
repnz
cmpsl
mov
adc
inc
mov
mov
xchg
adc
sar
lcall
sti
testb
mov
adc
bound
into
es
aas
cmp
mov
jo
popf
cmp
idiv
test
pop
int
mov
ret
mov
popa
or
iret
mov
jno
aad
xchg
leave
out
insl
xor
ljmp
or
lahf
aas
mov
cmp
cmp
xor
and
xchg
dec
scas
xor
jns
jnp
repz
dec
xchg
sub
dec
rorb
ret
pop
mov
cmp
aad
sub
stc
cs
sbb
push
mov
sbb
ficoms
push
adc
test
cs
sbb
iret
faddl
aaa
mov
icebp
dec
les
add
decl
rcr
movsb
das
xchg
das
lahf
dec
out
stc
cmc
push
or
imul
cld
lock
sub
add
push
mov
aaa
je
mov
in
in
loopne
out
les
sub
ret
xorl
cmp
or
xchg
in
add
mov
push
or
les
iret
and
andb
adc
ljmp
mov
lods
xchg
or
cmp
fbld
or
and
pop
jns
inc
sub
mov
add
sub
xlat
mov
dec
pop
push
icebp
dec
jp
adc
xchg
daa
mov
rorl
pop
mov
ljmp
sbb
xchg
sti
lock
xor
call
mov
cmpl
insb
and
sbb
mov
lods
mov
dec
push
dec
cld
movsl
sbb
mov
jbe
int3
add
pop
sub
shrb
add
jae
mov
sub
popa
addr16
push
sbb
cmc
adc
mov
stos
push
addb
inc
cmp
jne
loopne
push
repnz
or
rolb
sbb
xchg
scas
fsts
stos
mov
es
mov
xlat
pop
cmpsb
and
adc
mov
ficompl
adc
push
dec
jo
jmp
jg
cmc
into
arpl
pop
fs
push
stc
mov
lods
insb
mov
repnz
jmp
mov
fstpl
sub
cmp
and
mov
jbe
popa
inc
leave
lcall
cmpsl
lock
push
jno
pop
push
mov
fdivrp
sub
sub
sub
and
les
je
lahf
push
add
mov
inc
stos
stc
dec
inc
jo
inc
jnp
insb
push
ret
mov
movsb
je
stos
cmp
imul
imul
ds
add
sub
adc
ds
frstor
add
in
xchg
lahf
gs
loopne
mov
test
or
jle
out
mov
test
outsl
aaa
cltd
mov
or
adc
or
inc
insb
movsb
mov
call
mov
gs
lret
dec
jge
dec
sub
insb
sahf
cs
jbe
mov
jnp
mov
pop
lret
pushl
mov
pop
repz
sbb
popa
adc
repz
push
js
xor
fcom
fstp
dec
mov
add
ret
mov
add
sahf
mov
lcall
jg
sti
and
stc
add
fsts
sub
mov
in
fildll
dec
jge
inc
jl
scas
jp
outsl
or
jae
aaa
clc
jge
push
xchg
or
pop
leave
daa
scas
gs
aas
and
fdivl
mov
enter
into
cmpl
js
jg
push
cwtl
mov
jmp
repz
hlt
stos
sub
mov
rorl
mov
pop
push
lahf
push
scas
xchg
fcoms
movsl
inc
mov
xchg
jae
lods
sub
sahf
and
adc
and
xor
xchg
jmp
inc
out
mov
pusha
notb
pop
mov
cmp
mov
mov
leave
push
dec
cltd
push
aaa
ret
ss
dec
int
jg
or
xchg
ljmp
lahf
lods
scas
in
shrl
stos
pop
mull
adc
mov
cs
cmp
inc
cmpsb
sub
mov
sbb
or
sbb
ljmp
pop
popa
sub
xor
bound
push
outsl
dec
sti
push
fstpl
pop
int3
insl
test
pop
cli
test
cmp
cmp
mov
jnp
lock
pop
addr16
jnp
push
fiaddl
mov
mov
mov
inc
movsl
out
pushf
sub
loopne
xor
aas
mov
rorl
cmp
dec
ret
mov
adc
push
repnz
lods
mov
pop
lcall
or
insl
shll
mov
scas
iret
gs
xchg
xchg
test
inc
cltd
lret
or
ss
nop
sub
cwtl
inc
xchg
andb
inc
and
xchg
testl
add
pop
cvtps2pd
adcl
add
mov
push
xchg
and
push
out
out
lods
jmp
flds
testb
mov
std
mov
push
push
cld
xor
push
fmul
sbb
bnd
les
push
add
fsubrl
xor
jp
mov
dec
test
outsb
xor
push
inc
jge
nop
repnz
mov
test
push
mov
arpl
cmp
inc
add
pop
es
jo
or
in
sub
cmp
mov
mov
push
mov
or
cmp
int3
fwait
push
jmp
and
jle
hlt
out
xlat
aas
mov
fs
ret
mov
or
ja
mov
scas
shr
push
fimuls
xor
aam
rcl
jp
push
xor
mov
test
gs
sub
mov
and
mov
stos
stos
bound
xchg
mov
pop
pop
aad
dec
fwait
ljmp
leave
or
call
into
inc
stos
mov
sarb
rolb
cmpsb
sub
inc
adc
popa
test
pop
hlt
arpl
cltd
into
jb
xchg
int
jmp
loope
jg
bound
inc
vpmuludq
xchg
add
jmp
cmp
add
mov
mov
shll
idivb
lods
pop
or
mov
mov
push
mov
loopne
jno
add
mov
out
adc
lea
scas
dec
mov
int
imul
iret
adc
iret
dec
aad
icebp
loopne
out
outsb
sbb
sbb
mov
mov
in
sub
mov
cs
sahf
clc
or
pusha
sti
dec
sar
divb
xchg
or
std
lret
cmp
rorl
dec
pop
icebp
sbb
xor
ret
cmpsl
and
xor
mov
cld
add
cltd
pop
mov
in
xchg
iret
insl
cmp
icebp
add
and
push
loope
shll
imul
pop
jge
pushf
fildl
adc
inc
stos
fcom
daa
ljmp
mov
mov
xchg
inc
cmp
mov
dec
dec
out
xor
sbb
adc
leave
test
loopne
into
push
inc
push
inc
xor
pop
mov
fistpll
xchg
mov
adc
das
push
repz
pop
test
xor
mov
out
push
test
jne
mov
push
mov
push
mov
in
mov
sub
jl
into
pop
iret
jbe
je
mov
jle
add
out
stos
outsb
or
push
sbb
arpl
in
fcoms
xchg
fincstp
push
dec
mov
sub
xlat
rclb
cmp
lds
adc
and
jnp
fwait
pop
int
adc
loopne
loop
loop
and
je
sub
pop
sbb
jmp
push
sub
xchg
sahf
inc
adc
movsl
sti
ljmp
xchg
insl
nop
push
aad
push
or
push
repz
cltd
jb
add
in
cmpsl
xchg
pop
mov
or
int3
and
outsb
push
sub
lcall
xchg
test
lret
or
aad
rcl
mov
ss
insb
jle
ss
inc
inc
in
leave
and
jl
xor
jp
bound
or
repnz
jle
arpl
scas
push
pusha
sbb
cmpsb
int
xorps
mov
mov
cmpsl
sub
pop
cmc
push
ss
mov
jg,pt
insl
jnp
push
pop
lcall
movsb
add
mov
daa
mov
pop
test
into
xchg
mov
cmp
mov
inc
lods
mov
jmp
mov
cmp
sub
fidivl
mov
fisttps
aaa
mov
js
xchg
popa
sub
lahf
jo
cmp
dec
nop
mov
mov
xchg
fmuls
imul
dec
jne
and
xorps
xor
rclb
ret
cmpsl
pop
and
jp
sbb
in
sarb
xchg
testb
ja
loope
mov
gs
out
jg
rorl
xchg
jne
push
adcb
test
scas
stos
push
xor
jo
cmp
pushl
sbb
call
and
setb
cmpsb
dec
lcall
dec
lock
insb
pusha
add
std
xor
mov
mov
jg
jae
jbe
cmp
xchg
push
stos
cld
ss
mov
fs
adc
sbb
dec
jb
fwait
jnp
mov
cltd
testb
adc
inc
sbbl
jno
repnz
xor
lods
push
inc
push
mov
in
pop
cmpsl
stos
or
cld
leave
jmp
clc
adc
xchg
int
add
leave
je
movl
fidivl
sbb
movsb
int
sub
int3
movb
adc
push
jne
rcll
push
scas
std
pop
pop
ret
cmp
shr
popa
aaa
bound
jle
call
mov
mov
lret
xlat
cmp
iret
mov
push
mov
je
imul
imul
lea
jbe
scas
pop
xchg
jmp
pop
lea
pop
and
ja
add
pop
cmpsb
ljmp
cs
or
adc
mov
or
xor
inc
or
pop
cmp
xlat
fdivs
mov
pop
push
loopne
or
inc
xchg
js
sti
popf
bound
jmp
push
shrb
cld
pop
out
push
sbb
iret
sub
bound
ret
mov
jbe
rcr
cmc
pop
add
jo
into
dec
movsb
insb
nop
fwait
push
dec
sti
dec
jae
ss
xlat
add
dec
pop
xor
sti
inc
lds
mov
mov
cmp
notl
nop
and
jl
inc
xor
push
sarb
aad
cmp
sarb
mov
loop
jg
cld
mov
mov
pop
or
dec
add
es
or
mov
outsl
cmp
je
push
sub
packssdw
xlat
cmpsl
xchg
mov
pushf
inc
cs
test
cmp
lcall
sbb
add
jns
mov
sahf
scas
fistpll
mov
icebp
xor
lcall
xchg
sub
lods
orb
mov
aam
mov
stc
inc
cld
push
ficomps
movsl
jo
and
call
sub
aas
pop
stos
mov
adc
inc
sbb
mov
ss
sub
and
adc
in
xchg
into
loope
std
adc
lea
push
int3
lock
cmp
fimull
mov
mov
sbb
adc
sub
cmpsl
adc
adc
into
fcompl
or
cmc
cmp
loope
lods
xorl
adc
sahf
mov
inc
cmp
negb
sbb
pushf
in
pop
inc
mov
test
sbb
push
shlb
aaa
jo
mov
mov
jle
dec
iret
sub
imul
add
sub
mov
mov
xor
movb
shlb
sarl
and
stos
xor
cli
mov
les
sbb
pop
jae
rol
and
call
orl
js
fwait
pop
sub
pop
stc
sub
xchg
loopne
pop
mov
imul
jns
or
cmp
std
das
test
xor
stos
das
mov
mov
leave
pop
sub
fstl
jmp
or
popa
adc
rcrl
shr
in
imull
arpl
dec
repnz
xchg
stc
stos
fisubs
cmpsl
out
rcr
xor
jae
mov
cmp
dec
xor
fstp
sbb
xchg
hlt
test
add
jns
fidivrl
push
adc
nop
sti
fcoml
jae
push
stc
imul
add
es
jl
jg
daa
cmp
pop
mov
xchg
lea
cmpsb
jne
repnz
mov
or
adc
xchg
fnstenv
ljmp
outsb
lret
pusha
inc
fldl
sub
ds
test
push
xchg
xor
adc
and
mov
xchg
xchg
pop
repnz
jne
mov
fldl
mov
rep
adc
pop
pop
or
cmp
sbb
sbb
and
loop
jbe
lret
jno
dec
jmp
adc
pushf
lock
sti
dec
push
pop
jle
sbb
pop
loope
mov
leave
rcrl
adc
push
or
mov
or
jmp
pop
pop
cmc
adc
es
in
int3
sarl
ss
sbb
adc
scas
mov
je
add
sub
xor
aad
xchg
and
lcall
mov
pop
push
divb
jmp
jecxz
xor
fisttps
or
pop
scas
jae
lock
data16
cli
pop
and
insl
fdivrl
lcall
andb
adc
mov
cmp
mov
sub
xchg
outsb
mov
loopne
popa
add
loopne
xchg
cmpsb
inc
mov
insb
mov
pusha
repz
adc
scas
leave
dec
jmp
test
xchg
mov
sub
lret
cld
jmp
and
rolb
ds
test
push
mov
scas
jle
inc
iret
xchg
xor
xchg
or
icebp
mov
nop
ret
and
pushf
inc
dec
rcll
aaa
loop
xor
jmp
xchg
mov
xchg
inc
jns
addb
dec
loopne
dec
jge
xor
cmp
pop
sbb
hlt
cwtl
loopne
enter
xchg
stc
test
jmp
repnz
inc
mov
push
aad
mov
in
pop
xor
mov
mov
adc
or
paddb
int
push
inc
aam
int3
gs
sbb
sub
jns
in
sbb
add
sti
add
mov
scas
arpl
add
or
test
aaa
imul
jp
decb
stc
aad
push
in
aas
mov
xchg
outsl
xor
push
add
cmpb
cmpsl
adc
dec
push
cmpb
test
fmuls
test
out
xchg
scas
mov
fiaddl
popa
mov
stos
add
add
divl
fwait
mov
or
or
or
add
negl
pop
movsl
out
pop
mov
ret
mov
aas
or
cmp
sub
les
mov
inc
dec
nopl
and
jg
adc
jbe
stos
jmp
ss
aam
mov
push
ds
add
cs
aam
sbb
les
sbb
xor
cmpsb
and
sbb
inc
cmp
aaa
in
or
or
sbb
dec
outsl
xor
inc
dec
dec
inc
inc
dec
fnstenv
add
lahf
jecxz
jle
push
cmp
rep
and
sarl
and
scas
jnp
orl
add
mov
dec
ffree
loop
jnp
inc
and
inc
push
push
inc
mov
jb
mov
xor
inc
js
sbb
out
test
push
mov
sub
jno
ss
xchg
fdivr
es
in
adc
ret
popa
jp
pop
data16
jbe
mov
loope
mull
dec
pop
cmp
and
mov
das
inc
loop
adc
adc
push
out
jnp
cmpsl
arpl
inc
call
sbb
lds
adc
je
mov
fistps
add
jle
cld
or
mov
rcrb
int3
cli
ja
into
cmp
popa
popf
shlb
js
in
rclb
mov
lods
test
out
mov
out
add
ret
dec
and
pop
and
daa
sbb
insb
mov
mov
out
adc
xchg
adc
push
into
or
test
in
add
xchg
arpl
aad
push
mov
dec
inc
subb
dec
mov
stc
adc
mov
imul
mov
jp
stos
idivl
or
push
call
inc
hlt
or
mov
jne
roll
mov
cmpl
jne
pop
jnp
xchg
and
lahf
andb
and
mov
scas
add
cmpsb
fcom
xchg
emms
mov
jns
add
pop
icebp
mov
inc
pop
lock
frstor
dec
pushf
insl
pop
stos
push
or
mov
push
or
adcb
add
or
popf
pop
xor
enter
sub
sbb
or
push
mov
out
ret
fucomi
jne
lret
or
mov
sub
dec
insb
jo
scas
dec
loop
push
push
mov
pop
and
mov
mov
lock
mov
stos
clc
or
and
pop
es
adc
aas
pop
das
cmp
shrb
push
sbb
mov
outsb
xchg
push
std
movsb
or
ret
sbb
push
xchg
xchg
mulb
push
pop
repnz
xor
sbb
cmp
jecxz
jbe
stc
sti
cmp
hlt
pop
idivb
xchg
insb
sbb
mov
fidivrs
and
mov
pop
adc
mov
and
pop
jbe
sub
icebp
movsb
xchg
mov
pushf
mov
sbb
sarl
xlat
jg
sbb
insb
ret
mov
ljmp
mov
mov
xchg
popa
sbb
mov
lahf
push
sbb
shrl
mov
neg
in
dec
sbb
push
shll
add
adc
pop
scas
adc
mov
xchg
test
sbb
in
xor
inc
out
repz
add
sub
imul
xor
loopne
push
push
lock
adc
fcomp
mov
cmp
filds
frstor
add
jno
test
fdivrl
lods
add
addr16
or
daa
jle
jno
arpl
mov
mov
sub
sbb
push
dec
call
sub
jbe
out
mov
lret
and
aaa
popa
out
sahf
jp
xor
jb
add
dec
adc
fsubrs
repz
or
and
daa
cmp
addr16
jl
lret
pop
repz
adc
mov
aaa
adc
cld
push
je
or
push
dec
lds
in
add
popa
add
mov
push
adc
and
and
cmp
movsb
repz
mov
pop
mov
orl
stos
cmpsl
lcall
cmc
fldt
flds
imul
and
cwtl
iret
loopne
xor
aad
inc
cmp
insb
jp
inc
or
cmp
mov
mov
sub
mov
push
sub
mov
push
inc
test
insl
inc
int
sbb
stc
fidivrl
jle
mov
arpl
cmp
inc
mov
addl
cmp
ret
and
out
mov
sbb
add
in
lahf
mov
ds
out
jge
lahf
cmp
mov
push
fs
sub
dec
mov
nop
push
in
fisttps
pop
adc
pop
js
clc
xor
ljmp
adc
addr16
fdivs
jae
dec
lcall
adc
mov
int3
or
add
sbb
repz
shrb
imul
adc
pop
push
scas
ss
fistpl
cmpsl
mov
xlat
sub
insl
fdivrs
clc
add
in
push
imul
je
adc
repnz
sti
mov
inc
push
or
dec
cli
aas
inc
fwait
sbb
sbb
inc
and
das
sbb
int3
cld
in
pop
and
jbe
scas
mov
call
daa
cwtl
xchg
fisttpll
xlat
mov
cs
fistpl
pushf
aad
xlat
push
repnz
pop
cmp
mov
cmp
cmovp
and
ja
push
jle
pop
out
inc
out
movsl
xchg
pop
call
mov
cmp
test
pop
in
sub
push
loopne
pop
xchg
sbb
lret
arpl
add
stc
pop
int3
push
mov
lret
sub
pop
imul
ret
or
ret
jnp
fldt
dec
cmp
inc
mov
jno
shr
xor
push
pop
dec
je
or
pushf
dec
jl
ljmp
sahf
fldl
out
cwtl
cmpl
test
test
cmpsl
jl
xchg
mov
sub
cmp
add
cwtl
in
jp
xor
sub
dec
add
outsl
test
adc
xorb
mov
mov
les
mov
inc
jecxz
add
daa
pop
mov
fidivrs
sub
in
aad
mov
lock
inc
bound
mov
xor
pop
imul
cmp
lret
movsl
jmp
andl
repz
push
ja
mov
lock
or
xor
loope
fcmovne
mov
lods
std
ds
inc
adc
lea
jge
or
mov
int
push
xor
jle
pop
sub
fwait
xchg
inc
popf
cs
cwtl
and
jp
cmp
idivb
cmp
out
jg
mov
lods
add
in
das
dec
repz
add
mov
inc
stc
roll
jmp
fwait
jo
mov
adc
mov
aad
loopne
movsb
mov
inc
adc
sbb
in
imul
push
mov
push
test
mov
mov
jp
sbb
clc
dec
push
ret
xchg
jge
mov
add
movsb
aad
inc
cmp
mov
xor
add
and
pusha
mov
add
mov
dec
adcb
xorl
pop
sub
xor
push
dec
push
iret
sub
jmp
stc
cmpb
mov
jle
popf
in
lock
scas
cmp
nop
into
movsl
pop
inc
imul
andb
add
daa
stc
in
lds
mov
and
loope
pop
les
fisttps
daa
rcr
jne
add
mov
outsl
out
lahf
mov
and
push
sub
xor
xchg
mov
cmpsb
ljmp
or
jno
sbb
jmp
nop
dec
dec
sub
insb
je
mov
subb
push
pop
aam
jle
xor
gs
cmpsl
mov
ss
scas
ret
roll
shrb
jnp
test
sbb
cs
mov
lods
xchg
push
cltd
sub
gs
mov
xchg
mov
fadds
movsb
jns
xchg
jo
mov
rcll
popf
enter
fidivrl
popf
pop
out
nop
mov
fwait
lahf
je
mov
sti
loop
pop
aam
aam
pop
rol
inc
sub
clc
movsb
cmpsb
imul
pop
push
inc
xlat
pushf
inc
sar
out
pop
inc
pop
ja
or
loop
mov
in
ss
mov
mov
mov
adc
mov
fstps
xor
adc
xlat
cmp
mov
data16
imul
in
add
inc
push
int3
push
lret
cwtl
bound
lods
jnp
loop
in
adcb
xchg
repnz
mov
push
push
push
inc
insb
sbb
aam
rcrb
jle
push
xor
sahf
inc
mov
fwait
dec
or
mov
push
mov
dec
lret
adc
mov
lret
mov
movsb
int
mov
loop
popa
jg
cmpsb
mov
cs
and
sti
lods
lods
lahf
out
jl
jb
lds
sbb
mov
test
and
int
cmp
out
lret
outsb
in
xchg
rcll
or
int
in
push
ss
loopne
mov
adc
fcompl
pop
cmp
mov
mov
mov
rorb
je
in
imul
pusha
add
cmp
mov
mov
mov
xor
ds
ffreep
jg
leave
xchg
scas
movsl
and
push
ud2
add
test
dec
cmc
test
jbe
mov
aaa
aam
lods
mov
dec
orl
sub
scas
and
lcall
and
and
fadds
stos
cwtl
sbb
stc
cmp
iret
dec
das
mov
mov
ret
jae
pop
int3
mov
and
mov
repnz
pop
lods
inc
hlt
lahf
stos
addl
clc
mov
mov
js
lret
xor
xchg
jge
mov
popf
xchg
fwait
repz
rorl
jg
or
andb
push
sub
cmpl
dec
clc
mov
dec
ds
inc
in
mov
or
or
into
jbe
adc
push
popa
push
das
lahf
rcpps
sub
fidivs
imul
dec
decl
xor
addr16
push
sub
or
addl
push
lea
orb
sub
xor
push
hlt
dec
mov
ja
cmpsb
js
insb
jb
fldt
push
scas
leave
push
pusha
loope
lods
xchg
sub
inc
xchg
iret
pop
mov
add
jns
das
push
shr
inc
andb
lock
inc
outsb
mov
pop
repz
sahf
and
mov
shll
enter
and
pop
std
loop
mov
xlat
fstp
stos
scas
pop
pop
push
sti
cvtps2pd
pop
mov
cmpsb
aad
push
rolb
jnp
das
cli
shrb
dec
dec
add
mov
mov
mov
sbb
lock
loopew
mov
add
ficompl
in
mov
ret
push
xchg
and
xor
lahf
mov
sbb
inc
lcall
outsb
psadbw
pop
repnz
mov
jge
enter
repz
mov
incl
mull
out
xchg
mov
lcall
aas
cmp
jno
fadds
jle
out
loope
sbbl
mov
cmpsb
in
aaa
mov
out
lds
int
mov
adc
mov
pop
sbbb
push
lret
out
arpl
mov
xchg
aam
lahf
adc
dec
cmp
out
lock
cli
test
inc
in
imul
mov
icebp
cmp
mov
jle
notrack
xor
int
es
pushf
stos
ss
jne
mov
bound
xor
insl
sbb
dec
xor
pop
add
inc
pop
xor
or
outsl
pop
add
or
rolb
into
and
and
in
cmp
scas
dec
jbe
and
pop
adc
ret
sarb
mov
or
pop
jb
sub
subb
lods
shll
ret
fld
mov
jge
fcomp
insb
je
popa
xchg
movsb
cmp
push
pop
aas
fwait
or
inc
add
xor
mov
out
jg
imulb
adc
dec
in
sub
xor
hlt
pushf
ja
or
iret
movsb
leave
mov
testl
movsl
mov
xor
push
daa
jmp
test
hlt
sub
movb
das
loope
outsb
adc
add
fimuls
xchg
xchg
movsb
xor
arpl
inc
push
pop
xchg
fistps
pop
sub
push
stos
mov
xor
adc
cmpsb
fbstp
outsl
insb
mov
jno
jmp
mov
fnstcw
pop
int
subb
or
fld
mov
repz
mov
cmp
cmp
test
sub
mov
cmpsb
jno
jmp
test
mov
inc
xchg
in
mov
roll
pop
fistl
push
mov
cmpsl
scas
inc
mov
sbb
pop
cs
sbb
push
mov
adc
mov
pop
cli
gs
add
push
int
cmpsb
sub
jp
mov
add
flds
stos
adcl
inc
flds
repz
mov
pop
aaa
cmc
and
add
and
andl
jp
test
bound
loop
lock
xor
jne
mov
or
push
jmp
lock
adc
mov
mov
pop
stc
pop
jmp
pop
xor
jle
sbb
push
pusha
mov
and
sar
cmp
xchg
push
ja
xor
aam
repnz
stos
xor
movsb
outsb
popf
and
inc
je
rcrb
adc
ficompl
inc
out
xchg
test
hlt
rolb
mov
leave
add
ret
je
mov
test
je
into
lods
hlt
cmpsb
test
fsubrp
pusha
int3
push
fdiv
sub
movsl
xor
pop
add
pop
push
add
xlat
and
stos
psubusw
inc
movsb
lret
lock
dec
shl
mov
sti
jnp
mov
jne
sub
inc
mov
sti
sub
inc
lds
cld
leave
jge
divb
lret
cmp
cs
aad
inc
sti
and
js
sahf
push
insl
mov
mov
insl
and
test
sbb
sarb
cltd
sub
movsb
ret
mov
mov
popa
jns,pn
xor
add
iret
cmp
inc
popa
addr16
mov
pusha
jmp
into
repnz
fsubr
movsb
pop
nop
movb
sbb
mov
dec
cmp
sbb
mov
jmp
popf
testl
mov
loopne
add
les
outsl
out
inc
jp
in
push
fcompl
popf
cmpsl
pop
iret
sub
jbe
sbb
mov
in
jecxz
push
jne
mov
jecxz
push
add
xor
ftst
sub
sub
ja
pop
sahf
outsb
shrl
aad
orb
arpl
pop
xor
repnz
sub
sbb
shl
xchg
fwait
shll
cmp
movl
add
enter
sub
leave
popf
and
jnp
and
ficoms
xor
stos
repnz
movsb
xchg
dec
xchg
jmp
rcll
clc
test
daa
mov
inc
jp
popf
mov
mov
sbb
leave
cmp
cld
mov
mov
call
cmp
xchg
lods
test
nopl
xlat
dec
jae
push
inc
jnp
leave
add
imul
pop
sbb
mov
adc
cmpsb
jnp
adc
popa
push
jmp
mov
out
mov
mov
and
fwait
pop
out
push
or
cld
inc
das
sub
fistpl
rolb
std
add
mov
push
pusha
cmpsb
lret
pusha
xchg
out
nop
fcomps
mov
into
xlat
cmc
pusha
test
cld
jge
daa
mov
push
andb
adc
jecxz
sub
or
rorb
sbb
push
insl
mov
lds
pop
enter
stc
mov
aad
js
and
push
mov
scas
ret
mov
jnp
testb
clc
call
push
test
jl
jns
in
push
loop
cmp
and
fs
pusha
cmp
jmp
gs
test
lock
dec
ja
je,pn
or
ss
sarb
fcomip
repnz
push
in
pop
add
mov
shlb
pop
lahf
cmp
lds
mov
and
scas
sbb
fdivr
bound
mov
test
adc
mov
pusha
cmp
cmp
insb
bound
xor
jge
or
mov
push
add
sub
or
add
and
push
xchg
lret
xor
add
xor
dec
call
dec
inc
ret
aam
jne
xchg
ss
sbb
fcoml
sbb
std
push
cmp
mov
fiadds
mov
xchg
ss
mov
leave
arpl
sbb
push
jmp
fdivl
sub
or
movsl
and
push
ss
out
sbb
imul
notb
stos
fimull
test
add
idivb
enter
stc
sbb
mov
mov
pop
lcall
jmp
ja
push
faddl
cld
shll
daa
aas
sbb
mov
pusha
orb
mov
insl
shll
fwait
mov
or
pop
jb
movsl
popa
ret
mov
inc
adc
push
mov
dec
mov
sbb
lret
adc
inc
sub
popf
mov
insl
cmp
xchg
pop
add
jp
aaa
and
cs
xchg
cmpsb
loope
inc
outsl
outsb
jge
jb
iret
pop
mov
jle
divl
dec
cmc
pop
cmpsb
mov
imul
aad
dec
out
lret
push
stos
pusha
dec
fidivrl
cmp
pop
rorl
mov
xor
test
or
push
out
jl
mov
jne
pop
js
scas
pushl
icebp
repnz
xor
push
sub
jmp
cmp
sub
jae
dec
or
pushf
jbe
dec
mov
test
cmp
jnp
jnp
pop
fdiv
stos
xor
test
aas
jle
fnsave
call
add
loope
pop
fsts
daa
pusha
fwait
shlb
inc
iret
cmp
xor
cmpsb
mov
or
stos
and
or
ficoms
or
je
icebp
pop
or
xchg
inc
out
mov
dec
fiadds
scas
loop
ss
cld
xchg
cmp
jmp
int
sub
sub
xchg
xor
xor
cmpsl
lods
push
call
xchg
outsl
pushf
xor
inc
dec
das
fnstsw
and
and
fndisi(8087
outsl
mov
xchg
and
or
ret
inc
popa
sbb
cs
push
xchg
sub
jne
mov
fadds
push
movsb
cmpsl
xchg
mov
sub
xchg
movsb
lods
adc
push
popa
cltd
sahf
mov
xor
xchg
xor
and
aam
mov
dec
jecxz
inc
pop
inc
out
adc
push
add
ss
xchg
push
cmp
mov
mov
sub
outsb
sahf
mov
pop
nop
jg
mov
dec
jns
imul
gs
syscall
insb
pop
pop
inc
push
lea
and
jnp
pusha
add
inc
cmpsl
dec
inc
ret
icebp
pop
inc
push
mov
iret
repnz
dec
sub
adc
add
cmp
push
mov
lea
mov
jb
outsl
pusha
cmp
and
shrb
fcoml
dec
subb
mov
pop
cwtl
push
cmc
and
sub
int
lock
mov
inc
jl
je
pop
mov
sahf
ret
sbb
or
lock
imul
out
adcb
loopne
mov
in
add
dec
cld
jp
mov
pop
imull
xchg
and
ss
jnp
mov
jle
jae
dec
rclb
in
rol
mov
stos
sub
sbb
mov
cmp
and
adc
sti
scas
dec
sub
adc
pop
and
lods
mov
add
scas
mov
cmp
movsb
fwait
pop
pop
ret
xchg
mov
or
add
inc
clc
stc
std
lcall
xchg
push
nop
roll
adc
daa
pop
mov
or
out
mov
push
push
lcall
pushf
nop
call
xchg
int3
in
xor
or
sub
and
cmp
jns
xorb
in
scas
dec
cld
loopne
jge
ret
add
push
or
lds
xchg
dec
jb
cli
test
sbb
cli
mov
fwait
push
iret
cmp
jbe
mov
or
push
pushf
xchg
arpl
add
cltd
aam
cmc
fs
cmp
sbbl
mov
dec
cli
pop
stos
xchg
push
cmp
xchg
mov
xchg
loopne
dec
out
cmpsl
lcall
mov
mov
inc
xlat
and
js
into
mov
int3
aas
dec
fdiv
pop
sub
rol
adc
lods
cmp
dec
and
sbb
orl
out
mov
mov
mov
or
daa
push
ss
add
inc
cmp
xchg
ss
cmpsb
jnp
jge
shlb
lds
iret
dec
adcb
pop
xor
dec
dec
ds
int3
mov
scas
mov
fbld
push
cli
add
shll
cmp
xor
repnz
mov
scas
jbe
ret
jo
fsub
shll
inc
loop
ret
aas
out
sub
sbb
sbb
lods
dec
inc
and
fldenv
ss
sbb
mov
push
dec
mov
icebp
or
jle
adcb
out
pop
mov
lea
mul
fldl
adc
ljmp
clc
je
mov
std
fdivrl
shlb
jae
add
popf
adc
imul
pop
xchg
pop
roll
mov
jle
cmp
sbb
mov
in
mov
shlb
sahf
roll
outsb
pushl
mov
push
les
ror
negl
ljmp
add
xorb
push
scas
nop
dec
add
jle
aam
xor
clc
aad
inc
dec
ljmp
or
mov
jle
sbb
pusha
iret
push
inc
mov
sub
add
inc
scas
call
mov
mov
bound
pop
xchg
icebp
push
sarb
loopne
movsb
mov
rcll
cwtl
jg
rorl
test
and
mov
test
inc
rcr
mov
sbb
adc
xor
int3
lock
or
or
push
pop
bnd
ficompl
repnz
in
inc
dec
stc
jbe
ja
sarb
les
adc
std
pop
push
or
out
scas
mov
inc
mov
cmp
adc
sbb
cmp
rcrb
push
out
lret
int
lahf
mov
mov
lahf
repz
push
test
insl
add
and
push
mov
or
mov
out
and
std
mull
lods
push
and
outsl
fbstp
sbb
dec
leave
lea
cmpl
sbb
mov
outsb
xor
jnp
fdivl
adc
fnstenv
call
jl
inc
test
mov
inc
cmp
push
xchg
arpl
testl
jge
xchg
mov
in
nop
jnp
pop
bound
or
test
outsl
xor
push
xor
repz
je
sti
lret
xor
sbb
popa
rcrb
outsl
sub
dec
lcall
andl
inc
pop
sahf
fsubl
mov
imul
das
pop
ret
insb
out
jnp
or
dec
jbe
aam
and
ret
cmp
mov
sbb
fmull
shlb
mov
cwtl
sub
and
orb
fisubs
lret
push
lods
pop
mov
jnp
gs
add
stos
mov
pop
cmp
js
repz
jns
andl
lret
roll
idivb
sbb
pop
outsl
sahf
repnz
adc
pop
mov
cmpsl
pop
jnp
in
imull
jae
jge
in
js
push
adc
subl
push
xor
icebp
jb
xchg
es
call
jo
mov
imul
and
adc
imul
mov
das
xchg
mov
or
sbb
insl
stos
les
roll
push
add
out
inc
test
jl
fsubr
mov
push
push
and
mov
std
sbb
js
inc
xor
xchg
gs
cld
dec
or
orb
mov
js
rcll
mov
adc
insl
mov
cli
dec
ds
in
inc
pop
js
stc
out
adc
or
push
aas
sahf
mov
sahf
rcl
ljmp
sbb
jecxz
std
dec
mov
fistpl
push
rorl
fstpt
pop
or
fwait
lods
unpckhps
fcompl
push
mov
dec
ja
mov
arpl
imul
pop
and
loopne
les
lds
mov
mov
mov
adc
sbb
out
aad
sub
sub
rcr
lcall
in
sub
fldenv
inc
sbbb
popa
mov
dec
clc
push
xor
mov
cmp
sub
movsl
mov
dec
xchg
popf
mov
mov
mov
sub
mov
hlt
inc
testl
mov
repz
push
mov
dec
inc
cmovns
cmp
cli
sbb
and
mov
mov
call
mov
push
mov
xor
lods
loopne
push
sub
out
sub
xor
push
repnz
push
jb
dec
jb
pusha
fucomp
decb
repnz
fcmovnu
add
je
mov
push
insb
test
sub
adc
pop
repz
hlt
popa
jb
xor
insl
add
lcall
xor
sub
insb
call
cli
hlt
lret
mov
pop
nop
lods
inc
sub
rclb
clc
sub
int3
fcmovne
fwait
pop
in
sub
rorl
aam
inc
sub
pop
dec
fldenv
cmp
in
jle
and
pop
dec
stc
dec
sbb
mov
and
pop
cmp
movsl
sub
adc
sub
pop
jmp
pop
dec
out
sbb
sub
jno
xchg
lret
mov
loopne
pop
add
add
mul
add
stos
jl
jle
arpl
adc
mov
ja
pop
popl
jns
popl
adc
mov
jmp
dec
subb
cmp
xchg
call
inc
cmpsb
jmpw
push
add
sti
jae
sbb
xor
mov
inc
ljmp
mov
ljmp
sub
nop
jg
movsl
inc
insb
out
push
xchg
jns
sbb
addr16
popf
ret
mov
pop
inc
jmp
inc
add
insl
imulb
cmpsl
xchg
adc
xchg
enter
jnp
xchg
add
cltd
fwait
pop
sub
jno
add
jo
or
fcoms
add
es
dec
imul
in
mov
int
mov
in
loopne
imul
lcall
sub
ljmp
mov
les
into
fstpt
call
fadds
jmp
lret
jg
add
pop
mov
lahf
rcrb
int3
lea
arpl
movsb
dec
mov
adc
xchg
in
pop
test
imul
fcompl
push
xor
decb
std
xchg
jg
sub
into
cmp
xor
mov
mov
inc
lcall
jae
les
cmp
sub
das
addr16
es
cmp
ljmp
rolb
js
or
rol
sbbb
mov
lahf
repz
icebp
adc
mov
enter
sarl
es
adc
out
push
addr16
insb
xchg
push
ljmp
mov
fwait
ss
push
gs
fisttpl
adc
pop
and
sbb
testb
lods
dec
repz
push
clc
mov
xchg
hlt
daa
mov
lcall
push
dec
lock
adc
or
pop
and
cmpb
pop
js
repz
std
aam
cmp
aas
repnz
adc
insl
mov
ret
shrb
xchg
mov
push
mov
dec
cmp
fildll
lcall
aam
adc
xchg
shll
out
or
aas
cmp
andl
and
cmp
scas
jecxz
pushf
mov
arpl
ret
shlb
dec
jo
cmp
or
iret
and
int
test
in
arpl
ss
mov
lahf
jge
and
jne
scas
xchg
pop
push
fstpt
push
mov
push
push
dec
int
mov
and
push
test
pop
imul
dec
mov
jne
sub
pop
cmp
shl
sbb
stc
outsb
mov
fdivl
or
fmull
sub
stc
sub
sbb
mov
out
mov
mov
in
push
xchg
shrb
aam
mov
push
push
inc
inc
pop
cmp
lcall
test
cmpsb
dec
leave
out
pop
sahf
mov
cmp
mov
mov
out
daa
mov
lret
jl
outsb
pop
or
mov
outsb
push
jbe
outsl
scas
test
inc
fisttpll
in
jmp
lea
in
movsb
inc
int
gs
jns
mov
cs
repnz
stos
push
add
push
push
js
stc
mov
loope
mov
mov
or
adcb
push
scas
lods
leave
bound
outsl
xor
std
fbld
cltd
mov
pop
jl
in
nop
mov
xor
dec
cmpsb
push
adc
dec
testb
cmpsl
xorl
sahf
mov
test
adc
pop
mov
das
mov
dec
or
dec
out
push
ljmp
imul
xlat
repz
test
das
mov
xchg
mov
pop
test
out
scas
insl
mov
xchg
mov
push
sub
mov
shrl
add
sbb
pop
ja
ret
int
stos
enter
jo
loopne
mov
xchg
mov
cltd
test
adc
sbb
add
mov
mov
xchg
in
and
scas
mov
cmp
mov
shl
inc
sbbl
leave
push
xchg
adc
outsl
xchg
lock
jns
jg
xor
mov
push
jnp
xlat
jne
sub
inc
and
cli
lcall
lahf
stc
adc
fwait
xor
icebp
dec
test
in
cmp
and
lahf
stos
imul
dec
dec
sbb
shll
je
jle
scas
pusha
inc
inc
pop
and
pop
popa
sbb
lret
xchg
gs
pop
jno
jl
or
aad
pop
movsb
stos
mov
ret
mov
mov
sti
sub
inc
mov
jb
mov
incb
or
scas
outsb
hlt
cld
jge
movsb
int3
sub
push
out
aam
call
loope
push
sub
out
fstpl
xor
mov
sub
nop
adc
lret
mov
pop
stos
lahf
orl
jb
aaa
pop
inc
sbb
sbb
push
pop
jmp
or
rcll
xor
mov
sbb
ficoms
pop
dec
addr16
push
dec
pop
loop
inc
mov
xor
inc
xchg
adc
jbe
jno
sbb
dec
or
dec
and
insl
sub
lock
push
push
inc
jp
js
push
pop
xor
sbbl
test
int
xchg
adc
sbb
repnz
sub
sti
jns
dec
cmpsl
js
iret
sti
jno
jle
es
or
ret
insb
out
add
mov
scas
and
xor
lret
movsl
stc
mov
movsb
mov
es
in
fnsave
scas
mov
dec
and
jg
xor
dec
mov
sbb
jl
cmc
insl
adc
or
lea
daa
loop
sbb
insl
js
ljmp
cmp
ret
push
cmpsl
outsb
mov
push
incb
jge
push
jle
pop
scas
dec
movsb
out
call
cltd
cmp
sub
pop
push
sbb
pop
in
sub
and
push
out
push
cld
add
and
shrb
push
push
int3
stos
sbb
inc
call
inc
ret
lods
int
xchg
adc
cmp
inc
push
movsl
pop
jmp
xchg
rolb
in
dec
out
mov
pop
aad
lret
movsl
lahf
rcrb
mov
sub
jnp
btr
lahf
mov
jne
mov
roll
push
cmp
cmpsb
not
jbe
clc
pop
pop
pusha
cld
repnz
jne
int
inc
cmp
pushaw
int
bound
pushf
jo
cmpxchg
sub
sbb
xorb
push
enter
sub
push
mov
inc
dec
pop
xlat
ljmp
aad
pushf
scas
das
test
mov
push
les
cmp
xchg
dec
outsl
push
adc
into
push
lret
shll
aaa
mov
sbb
push
flds
std
shrl
ret
or
outsl
sti
sub
sbbb
push
shl
pop
insb
dec
xchg
cmp
or
stos
or
inc
outsb
jl
jmp
lea
mov
inc
cmp
arpl
xchg
jns
pop
fwait
je
sti
push
popa
es
aaa
mov
in
jmp
scas
inc
adc
pop
jae
mov
xchg
xchg
xchg
jae
out
dec
inc
sbb
arpl
fsubrs
arpl
loope
adc
mov
mov
je
sbb
cmp
push
std
fs
pop
jne
nop
mov
jge
sbb
orb
cmp
stc
sub
fmull
or
rorb
and
and
xchg
les
adc
loop
enter
insl
ficoml
addl
xchg
dec
jl
in
icebp
mov
mov
int
and
dec
or
pop
lret
mov
mov
in
dec
imul
cmp
xlat
in
fidivs
cmp
or
pop
mov
daa
out
mov
imul
das
push
das
out
xor
mov
pop
pop
std
stos
test
cmp
and
jmp
sti
mov
mov
mov
cmpl
sarl
mov
sbb
sub
jne
pop
in
mov
xchg
push
xor
sub
repnz
xchg
jmp
test
fmull
out
arpl
xorl
or
mov
mov
jge
sbb
mov
and
jmp
lods
xor
fndisi(8087
jo
xchg
jb
or
hlt
mov
pop
push
es
push
mov
in
or
js
push
mov
push
xchg
aad
pop
add
sub
rolb
rcrl
xchg
mov
inc
in
insb
shrl
adc
jb
outsl
mov
repz
scas
std
sub
and
pop
subl
test
sbb
sub
movsb
cmp
insb
sbb
lret
pushf
stos
loop
test
xlat
rolb
es
jmp
adc
pop
push
pop
jbe
outsl
adc
xchg
sbb
sbb
loope
cs
jp
sahf
outsb
hlt
shl
xor
inc
mov
test
xchg
sti
fisubl
je
mov
mov
mov
je
inc
xor
and
mov
int3
loope
push
pop
outsl
test
fimull
push
pop
add
cmpl
lret
icebp
sbb
push
int3
stc
shlb
lds
xchg
sti
aad
mov
repnz
cltd
cs
mov
and
inc
aad
mov
cmpsb
mov
lock
mov
cmp
adc
fstp
dec
test
mov
loopne
xchg
inc
lahf
es
jg
sub
jns
rcrb
imul
fs
dec
test
imul
adc
aaa
xor
cltd
data16
inc
fsubr
jbe
pop
outsb
add
push
inc
aad
pop
cmpsl
inc
lods
mov
insb
or
int3
xor
jge
cmp
adc
insl
jmp
jbe,pn
mov
mov
jb
iret
sub
je
push
add
and
or
inc
cmp
rcr
pop
pop
xor
jbe
ds
push
in
fdivl
in
mov
xchg
movsl
aas
cmp
aas
mov
or
sub
imulb
sub
add
rcrb
out
pop
and
leave
in
mov
enter
sub
lahf
or
jbe
adc
rcrl
cli
enter
sti
and
mov
push
iret
lcall
and
arpl
in
repnz
stc
loop
cltd
inc
and
dec
inc
mov
cmp
mov
mov
mov
rorl
inc
xchg
pop
mov
loop
ljmp
jbe
enter
cmc
ljmp
ljmp
cmp
push
nop
dec
xchg
fildl
adc
je
sub
insb
hlt
fs
add
sbb
mov
mov
ds
mov
jp
xor
movsb
push
cs
pop
sti
fcmovbe
cwtl
push
adc
pop
imull
cwtl
xor
jle
cmc
sbb
imul
loop
in
sbb
xlat
push
jo
cmp
stos
dec
mov
cmp
int3
xchg
sarl
in
mov
inc
movb
adc
in
leave
and
ficoms
push
clc
jb
mov
or
hlt
mov
mov
aam
gs
jl
in
or
hlt
lds
out
dec
inc
jg
cwtl
shlb
pushf
xchg
xor
jnp
data16
jno
lds
stos
mov
mov
mov
in
jne
adc
rcr
xor
test
inc
outsl
aaa
iret
mov
into
xchg
icebp
inc
lods
push
sar
clc
test
fnsetpm(287
das
jle
sbb
cmp
mov
lock
orb
cmp
or
movsl
mov
cld
loope
lods
push
xchg
xchg
sar
mov
or
xchg
jmp
in
jno
push
inc
jle
inc
and
mov
bound
xchg
int3
hlt
add
and
leave
fwait
gs
mov
cmp
push
leave
push
dec
or
cmp
push
sbb
sbb
fdivrl
subb
inc
inc
fisubrl
add
and
pop
adc
xor
icebp
idivl
mov
mov
aam
shl
pushf
arpl
roll
cmp
cmpsb
icebp
pop
pop
xchg
pop
cwtl
shll
xchg
cmp
add
cwtl
shll
dec
mov
xlat
in
lcall
cmp
adc
jmp
adc
xchg
push
jb
pop
shlb
jg
pop
pop
mov
xchg
stos
cmpsl
mov
mul
inc
fs
cmp
cmp
sarb
push
pop
adc
inc
pop
fs
mov
mov
ror
and
sub
insb
hlt
xchg
adc
nop
cmc
xchg
push
inc
comiss
inc
xchg
hlt
sub
jmp
mov
idiv
sub
push
jg
inc
and
push
lret
inc
add
hlt
jns
cwtl
dec
leave
push
testb
cld
sbb
repnz
inc
cli
or
push
ja
sub
xchg
or
daa
cmpsl
mov
dec
fisubrs
ja
sbb
movsb
jmp
mov
cld
dec
ja
cmp
xchg
arpl
xchg
inc
or
inc
std
rclb
xor
jae
mov
pop
loopne
or
adc
into
mov
repnz
push
xchg
imul
data16
or
pusha
add
sbb
out
lods
pop
sbb
jno
dec
mov
dec
cwtl
inc
sti
add
pop
or
test
mov
enter
mov
mov
repnz
mov
arpl
push
cli
les
adc
or
add
daa
adc
push
fbstp
sbbl
pop
test
shll
movsl
sti
jno
inc
outsl
movl
hlt
and
rol
rcrb
sbb
pushf
jbe
movups
and
loopne
jns
pop
and
test
pop
idivl
cmp
or
mov
xchg
pop
insl
cmp
and
hlt
mov
jmp
iret
cli
fmuls
jmp
ss
mov
push
stos
lcall
xor
mov
lahf
inc
mov
or
sbb
cld
lret
sbb
jmp
and
mov
mov
mov
out
mov
jg
pushf
js,pn
mov
fstpt
sbb
jle
inc
in
cmpsl
ds
pushf
cmp
lods
push
push
ret
loopne
add
mov
jl
out
aad
push
and
pop
dec
jb
xchg
jb
pop
cmpb
sub
push
aam
scas
divl
sarb
xchg
aaa
repnz
test
aam
sti
jae
loope
and
pop
fbstp
stos
sub
xor
dec
dec
mov
push
rcrb
jo
push
pop
outsb
sub
jg
into
xor
add
sub
adc
jle
and
fdiv
cmp
mov
inc
fdivrl
cld
arpl
jp
fs
adc
js
inc
adc
es
mov
jmp
pop
mov
sbb
and
pop
mov
mov
stos
popa
jbe
sub
sarb
icebp
das
daa
sub
loopne
push
aam
fwait
jne
stos
addr16
inc
jo
push
leave
pop
movsl
pop
ret
out
dec
pop
jne
testb
mov
mov
cmc
mov
repnz
mov
xor
clc
add
jge
xchg
icebp
dec
mov
dec
mov
stos
fdivrs
xchg
aas
ljmp
push
aas
jbe
syscall
sarl
sub
lcall
imul
mov
dec
push
icebp
in
rorl
dec
dec
and
in
dec
mov
aaa
repnz
js
nop
mov
pop
jl
mov
xlat
or
dec
ret
cmpb
scas
sub
pop
loop
adc
pop
adc
jns
lahf
iret
xchg
ret
xchg
mov
adc
cmp
stos
mov
outsb
push
dec
pop
scas
dec
sbb
jno
push
inc
dec
test
mov
sbb
iret
dec
in
enter
mov
popa
leave
pop
jmp
mov
mov
mov
or
and
sar
cltd
jno
fwait
cld
sub
mov
mov
ds
mov
bound
push
leave
dec
jle
cmc
shrl
xor
das
adc
cmp
outsb
cltd
stc
out
lret
arpl
out
imul
pop
dec
dec
in
or
inc
or
div
jb
mov
hlt
mov
adc
xor
gs
jne
pop
fadds
adc
add
test
aas
ret
push
or
fbstp
popf
nop
add
repnz
repz
insl
ja
xor
cld
jae
lcall
mov
cmp
data16
mov
bound
out
pop
test
add
or
inc
fs
int
push
jo
mov
test
rol
aaa
ret
scas
jno
fidivl
push
mov
adc
out
testl
ficomps
dec
jo
inc
mov
add
add
cs
cmp
test
sarb
push
mov
scas
outsl
test
pop
jnp
test
vcvtsi2sdl
mov
pop
fstpt
pop
lods
or
lcall
lahf
cld
sub
rcll
sbb
cwtl
outsb
push
sub
or
push
nop
rcll
inc
dec
push
adc
xchg
xchg
nop
mov
cmp
enter
lcall
clc
xchg
idivb
movsb
and
or
pop
jmp
jecxz
in
and
dec
mov
lret
jno
add
pusha
pop
cs
sbb
mov
gs
cmp
add
lods
int3
add
out
mov
dec
mov
xchg
cmc
lds
cli
sbb
ljmp
scas
and
xor
mull
mov
pusha
jbe
jmp
leave
imul
fnstsw
loop
roll
or
jl
sbb
cmp
imul
repz
fldl
and
jp
mov
sbb
jb
fistl
adc
vpsubd
stc
pop
stc
pop
enter
imul
mov
sbb
loopne
mov
xchg
xor
ss
sub
xor
scas
shlb
add
daa
or
jg
push
sahf
pop
jmp
ds
jnp
iret
mov
cli
hlt
loop
mov
sub
test
lock
dec
pop
je
jo
xchg
push
in
cld
or
fneni(8087
lock
je
fstpt
mov
cltd
xor
dec
cwtl
into
aaa
negb
repnz
lea
pusha
mov
fildll
push
push
sahf
in
and
addr16
clc
push
inc
rdmsr
test
lock
or
mov
adc
clc
jl
test
mov
fisttpl
mov
hlt
or
int3
data16
sbbl
cli
pop
and
mov
pushf
out
dec
mov
xor
mov
xchg
pop
in
cmp
in
and
fwait
sti
loopne
sbbl
push
ja
out
mov
hlt
icebp
pop
add
lahf
sbb
mov
movsb
pop
jge
lcall
mov
or
push
ss
cmp
popa
int
adc
das
jecxz
frstor
popa
add
xor
js
jmp
rcr
adc
and
mov
mov
repz
push
ficoml
push
cmc
jp
lret
mov
inc
mov
mov
faddp
jl
psubd
sbb
adcb
add
into
mov
rcl
xchg
push
divl
fadd
aad
mov
fmul
add
andl
into
sbb
mov
gs
cltd
cmp
xchg
shrb
dec
bound
xchg
in
or
cli
pusha
cltd
mov
inc
rorl
push
adc
daa
clc
cmp
ja
push
xor
xchg
inc
mov
lods
sbb
and
into
or
imul
sub
in
cmp
mov
ret
dec
test
out
sbb
and
or
cltd
jp
mov
or
pop
stos
pop
cs
cmp
ds
repz
cmp
inc
sbb
jg
push
arpl
insl
in
cmp
stc
jb
adc
jbe
xor
add
jo
cli
call
test
incl
shlb
dec
insb
pop
andb
pop
pop
mov
add
cmp
sub
jle
adc
roll
fcmovnu
lea
adc
mov
lods
jo
inc
sbb
mov
cmpsb
cmp
push
fcompl
ss
stos
pop
bound
scas
movsl
sti
divb
out
aaa
sbb
cmpsb
jmp
cmp
jg
aad
shrl
fcomps
pop
mov
imul
mov
add
or
movsl
js
push
inc
xor
lret
movsl
mov
roll
repnz
test
cs
jns
push
or
iret
mov
cmp
mov
insb
sarl
cli
mov
cmpsb
push
popa
mov
or
inc
call
loop
scas
adc
lock
sbb
mov
push
fnstsw
popa
jmp
aaa
cmpsb
mov
mov
adc
out
xor
sub
add
jno
cmp
dec
xchg
mov
arpl
cmp
orl
and
pop
xlat
out
das
lcall
sahf
cld
stos
dec
es
dec
jg
divl
leave
and
xor
push
scas
mov
sub
xchg
cmc
mov
in
xor
mov
rclb
push
ss
jbe
and
inc
test
cmc
sub
add
jne
smsw
pop
test
out
cmp
std
mov
cmpsb
inc
pop
cmp
push
mov
adc
sub
dec
icebp
ss
arpl
roll
sub
scas
jmp
rcr
sbb
sbb
leave
fs
xchg
adc
outsb
dec
pushf
popf
mov
lods
cmc
lock
xchg
xor
and
out
loopne
jge
idivb
sbb
out
pop
xchg
rcrl
adc
lock
add
xchg
cld
cmp
cs
jl
dec
pop
fdivrs
or
mov
loopne
fwait
cmpsb
jb
mov
jbe
sbb
loope
xchg
sti
or
xchg
sub
add
frstor
jle
outsb
push
aaa
sub
or
sbb
in
mov
shl
dec
pop
mov
sub
jl
jnp
xchg
lods
pop
int3
ljmp
test
mov
xchg
and
cli
mov
cltd
sarb
sti
enter
ret
xchg
jno
in
or
hlt
jne
mov
aas
sub
subl
xor
dec
ret
pop
cli
iret
aad
pop
adc
jl
insb
ds
jne
mov
sub
cwtl
sar
add
rcr
loop
stos
mov
arpl
jge
sbb
adc
ja
lods
loope
xor
pop
push
js
xor
insb
pushf
sbb
in
mov
push
dec
ja
enter
sub
mov
in
mov
lcall
inc
inc
sbb
pop
sahf
pop
enter
rorl
push
cmp
aam
insl
add
xor
sbb
ljmp
cmpsl
add
sahf
sub
ficoml
fisttpll
pop
mov
push
sbb
leave
ljmp
mov
mov
aam
test
mov
adc
mul
adc
mov
icebp
testb
fcompl
daa
aam
test
mov
mov
imul
adc
shld
cmpsb
xor
pop
popa
pop
gs
push
add
sub
mov
jb
sbb
out
dec
pusha
and
repnz
ja
gs
negl
repz
std
and
or
ds
dec
imul
sub
sbb
pop
fnstcw
pop
cld
jbe
push
repnz
stos
inc
jnp
sub
shlb
fdivs
fiaddl
movsl
nop
decb
pop
ret
out
iret
into
xchg
pushf
and
pusha
and
sahf
into
cmp
shl
xchg
mov
xor
cmp
incb
das
add
loope
pushf
andps
jne
inc
jle
jle
test
inc
dec
jmp
jno
aad
jo
out
mov
ficoml
jle
in
daa
ret
sarb
mov
mov
mov
popf
flds
std
xlat
or
adc
and
es
cmpl
mov
sti
push
xchg
jp
bound
mov
xchg
and
rorl
cmpsl
imul
mov
fstpt
mov
ja
jb
leave
cmpsl
dec
mov
xchg
add
sub
jae
movb
push
lahf
mov
leave
fdivr
aam
aaa
jo
mov
daa
push
int3
aas
in
pusha
lock
or
test
pop
movsl
inc
mov
lock
rclb
int3
clc
enter
cmc
mov
inc
dec
fnstsw
mov
pop
and
or
fadd
and
xorb
gs
jnp
out
and
bound
cld
sahf
sti
mov
pop
or
xor
jno
std
gs
loop
dec
out
movsl
scas
sti
imul
mov
cmp
add
je
int3
jp
sub
jge
insb
fdivrs
in
test
cwtl
jecxz
mov
and
lds
sti
mov
push
pop
dec
cmp
mov
push
dec
imul
lods
out
adc
xchg
push
insl
or
push
xchg
fs
sub
add
jmp
jae
arpl
pusha
lds
inc
lods
mov
push
gs
cmp
sti
jae
lret
xor
fcomps
loopne
enter
lods
std
rsqrtps
lret
es
aam
sbb
mov
sub
outsl
out
fldl
addl
jb
divl
mov
aad
ficoml
jp,pt
pop
test
sbb
jnp
add
and
dec
addr16
xor
mov
or
lahf
pop
push
pop
xchg
add
test
dec
cmpsl
sub
dec
mov
cmove
mov
je
adc
xor
add
rolb
nop
stos
hlt
push
shl
icebp
add
call
inc
and
xor
mov
ret
cmpsl
mov
fnstenv
pop
outsl
mov
cmp
push
shrl
xlat
popa
sub
jbe
mov
inc
addb
outsb
jns
or
outsb
adc
in
xor
add
push
imul
gs
jp
adc
lock
fcompl
mulb
addb
hlt
js
and
xchg
mov
jl
pop
and
mov
ljmp
add
sbb
fxch
je
or
nop
jbe
xchg
cltd
jl
sbb
das
push
fs
push
in
add
and
lret
jecxz
sbb
andb
dec
jnp
testl
or
out
repnz
push
add
popf
and
pop
lds
lret
scas
fcoml
jmp
cld
mov
ds
fdiv
clc
xchg
and
into
mov
into
icebp
lea
pop
das
mov
fcoml
div
jbe
outsl
shl
shr
addr16
and
xchg
cli
pop
pop
sbbw
xlat
aam
mov
and
ja
andb
dec
push
orl
lret
test
add
bswap
stc
out
mov
and
mov
push
jbe
stos
sub
popf
insb
jecxz
int3
inc
or
xchg
divl
jecxz
jb
add
ds
int
mov
jg
dec
jle
dec
jae
out
sahf
and
arpl
fwait
fwait
out
mov
cmp
inc
data16
movsb
or
mov
and
lret
inc
test
insl
fwait
inc
nop
and
aas
into
ret
out
mov
int
lea
lahf
arpl
cmp
fidivrl
popf
mov
cmpsl
adc
shlb
ja
insb
insl
adc
das
insb
adc
pop
cmc
add
xchg
sbb
testb
jl
and
jp
aam
mov
into
outsl
in
cmp
movsl
xchg
lods
push
add
sar
cmpsb
cmp
repz
dec
movb
pop
xchg
sub
and
sub
nop
adc
xlat
test
jae
enter
push
ss
mov
shl
arpl
mov
mov
roll
clc
sub
pop
test
mov
xor
xchg
pusha
rorl
lret
rcl
sbb
iret
adc
stc
cmpb
stos
sbb
and
xor
mov
and
sub
sbb
rorl
sbb
imul
xchg
rclb
rcrb
lret
std
mov
into
inc
mov
inc
or
int
mov
das
inc
mov
aad
ja
je
mov
jb
enter
daa
xor
mov
in
mov
dec
dec
js
add
loopne
adc
rclb
or
xchg
push
aas
adc
mov
xchg
mov
cli
jle
loop
or
mov
cmpsb
jns
mov
push
push
mov
call
scas
push
xor
add
adc
clc
adc
sarb
imul
sbb
gs
pushf
push
mov
aas
push
out
in
add
loop
into
test
xchg
and
out
insb
xlat
sbb
inc
cmpsl
adc
test
sbb
push
cmp
or
js
adc
pusha
cwtl
gs
dec
test
push
je
sub
adc
sub
ljmp
dec
push
adc
dec
and
cmpl
sub
fisttpll
addr16
cmp
and
sahf
out
add
insl
sub
jnp
jo
sub
test
adc
cwtl
stc
mov
subb
xor
inc
push
cmp
push
fbld
aad
push
adc
adc
fnsave
mov
jb
dec
sub
imul
pushf
sbb
sbb
jno
fsqrt
xor
xorb
mov
hlt
inc
jo
stos
dec
mov
xor
pusha
inc
imul
fisubrl
stc
movsb
fsts
adc
fwait
sahf
lcall
sahf
inc
add
fs
jge
adc
aas
lock
adc
push
jl
ljmp
stc
xchg
cmp
aam
or
mov
in
outsl
fcoml
pop
sub
clc
shlb
xlat
imul
sbb
ror
push
dec
test
or
push
xchg
ja
shl
mov
movb
mov
cmp
push
jo
or
push
imul
in
hlt
nop
jg
add
sbb
enter
pushf
inc
dec
das
mov
test
loopne
push
xor
or
xor
jg
faddl
jmp
pushf
aaa
fld
ss
lret
adc
cli
mov
movsb
loopne
jne
imul
clc
inc
ja
xor
dec
and
xchg
fdivl
cld
imul
cld
das
pop
mov
fcompl
push
dec
mov
jo
xor
mov
je
out
daa
fldt
sub
fidivrl
lret
aam
scas
je
test
lret
inc
popa
pop
sub
dec
sbb
hlt
or
mov
dec
or
lret
jmp
addr16
in
in
xor
add
dec
xlat
call
sub
ret
or
push
push
mov
fs
cmp
adc
std
leave
push
fnstcw
repz
shrl
scas
ret
nop
sbb
mov
insb
xor
outsl
pusha
xor
or
stos
cmp
xchg
nop
shll
aad
or
adc
mov
into
and
dec
pop
mov
loope
ret
les
adc
mov
sub
adc
pusha
cmpsb
cmc
and
and
dec
ljmp
lea
add
jo
fs
adc
cmpl
test
punpckhdq
cmp
cmpsl
dec
xlat
sbb
push
jno
xchg
shrb
jecxz
in
push
lcall
ss
jne
push
mov
outsb
fcmove
das
mov
jmp
movsb
mov
xor
xchg
sbb
push
pop
imul
call
sbb
jnp
cli
movsb
sub
add
dec
lods
lods
adc
cmp
or
hlt
ja
test
scas
das
add
pop
imul
icebp
pushf
mov
call
cmp
jb
cltd
cltd
or
ljmp
cmpsb
jg
popa
pop
jne
pop
cmc
sbb
stos
and
mov
call
sarl
and
jl
inc
cmp
dec
inc
xchg
loopne
push
loop
jnp
lds
mov
nop
mov
leave
jl
inc
xchg
orb
pusha
lea
pop
or
stos
mov
out
xor
ss
xchg
rcr
loopne
sub
sti
push
sub
outsb
in
xorb
sbb
jmp
movsb
fwait
aas
push
clc
sub
jne
dec
addr16
sti
std
sbb
insl
mov
fwait
add
loop
mov
int3
xchg
movb
push
pop
int
inc
addr16
pop
int
add
add
mov
sub
outsb
inc
addl
into
stos
stos
cmp
mov
aas
lret
pop
into
pushf
jo
in
pop
pop
or
xchg
xor
add
in
movsb
pop
or
aad
adc
loopne
mov
sahf
js
push
xchg
sub
xchg
aaa
clc
dec
xchg
mov
adc
outsb
js
sub
push
icebp
fcmovnbe
outsb
mov
cltd
add
js
lcall
jns
mov
mov
outsl
xor
cmp
decl
test
add
sbb
push
jo
push
int3
cmp
test
scas
mov
jno
jne
inc
test
push
mov
and
add
movsb
ret
data16
xchg
adc
out
sbb
jmp
lcall
enter
inc
jno
lods
xchg
push
adc
xor
dec
loopne
add
lods
xlat
mov
cmp
rcr
jg
inc
jle
dec
jg
sbb
mov
xor
xchg
mov
xchg
inc
stos
hlt
jmp
jge
fwait
stc
or
cmp
cmp
sbb
push
mov
mov
aam
outsb
xchg
inc
xor
addr16
fnstsw
inc
mov
lret
pop
sbb
popa
jp
mov
nop
scas
std
jno
xor
sub
mov
mov
jge
int
xchg
sbb
sbb
in
inc
mov
mov
mov
icebp
test
sub
arpl
push
mov
xlat
push
mul
test
mov
ss
nop
and
add
adc
sub
stos
icebp
add
cmp
fistps
pop
stc
pop
imul
mov
mov
cwtl
add
jo
xchg
in
clc
ret
fs
pop
cmp
ljmp
mov
jecxz
out
js
stos
das
scas
adc
leave
xchg
add
ja
lock
xchg
outsl
stos
jbe
pop
outsl
push
mov
add
xor
loopne
movsb
popf
xchg
aas
fdivrp
test
std
lock
or
push
iret
mov
icebp
push
mov
mov
arpl
out
xchg
inc
ret
jp
js
jne
xlat
jp
leave
fnstcw
test
push
shrw
or
out
imul
sbb
lret
and
mov
cmp
sbb
inc
fadds
mov
push
jp
arpl
cmp
lock
mov
push
test
push
shl
stos
dec
es
mov
stos
mov
sarl
and
out
inc
jae
jmp
fnsave
stc
mov
mov
sub
shll
pop
fmull
mov
mov
pop
and
nop
enter
push
push
repz
addr16
or
sbb
insl
mov
aaa
insl
mov
lret
and
cmp
or
xchg
pop
xor
inc
inc
mov
push
negl
mov
mov
push
repnz
mov
mov
add
dec
lcall
outsb
and
sbb
int3
enter
out
push
jb
mov
jmp
jb
mov
aaa
adc
xlat
nop
xor
jmp
cmpb
cmc
nop
push
cli
jbe
add
xor
xor
inc
pop
xor
mov
jecxz
scas
mov
jecxz
ficomps
lods
mov
dec
test
clc
add
cmpsl
fwait
lods
or
jp
fbld
adc
popf
jp
bound
adc
pop
mov
jbe
cmp
dec
cmp
add
call
inc
pop
mov
jp
xor
aad
iret
out
jg
xchg
or
pop
adc
subl
xchg
adc
leave
cwtl
cs
mov
pop
push
push
adc
pop
mov
leave
insl
cmpsb
shlb
sbb
jmp
mov
icebp
leave
jge
mov
inc
jnp
push
fists
jg
js
mov
clc
cmpb
cmp
push
mov
lods
mov
hlt
pop
sbb
fistpl
xor
lods
xor
push
mov
bound
inc
push
in
lret
cmc
arpl
cmp
xlat
fildll
shrb
cmp
mov
lods
orl
jae
push
iret
pop
rol
push
dec
gs
adc
jnp
xor
mov
lds
mov
push
and
repnz
mov
outsl
sub
incl
es
cmp
arpl
fisttpl
pxor
xchg
mov
inc
or
ss
out
xor
mov
or
adc
pop
push
jl
std
inc
bound
test
cmpsl
or
pop
push
insb
pmaddwd
jb
and
loopne
out
aad
pop
cwtl
test
mov
jge
js
orb
and
pop
cmpsl
inc
mov
fidivs
repz
or
adc
mov
sbbl
inc
pop
sub
fisubs
aaa
push
and
in
cmp
lahf
cmp
subl
es
jb
repz
int3
sub
pop
jmp
cmp
pop
sbb
xor
jns
xchg
ret
cs
cmp
clc
and
test
mov
xchg
xchg
or
inc
push
pop
ret
mov
mov
adc
sarb
mov
mov
clc
jo
cmp
loopne
pop
fdivrs
ja
fwait
rcrl
adc
cmp
pop
stos
sub
sub
jl
jo
das
rcrl
mov
movb
insl
pusha
pusha
or
dec
add
inc
cwtl
sub
inc
mov
adc
insb
pop
fiaddl
sub
jae
f2xm1
mov
clc
decl
pop
rclb
mov
pop
push
fucomp
xchg
jmp
xlat
xchg
jmp
xchg
scas
pop
pop
push
jns
adc
xchg
pop
and
push
push
jno
fiaddl
aam
iret
loopne
ja
insb
xchg
mov
arpl
jne
sbb
xchg
aad
sahf
sub
mov
mov
outsl
aaa
sub
movsl
mov
jge
cwtl
nop
pop
nop
ds
fbstp
fcomp
gs
fstps
dec
pusha
mov
lods
inc
pop
jg
sbb
xlat
mov
sbb
mov
aaa
ret
aas
jne
call
or
mov
imul
sub
test
inc
clc
add
or
adc
mov
push
push
adc
sub
jle
jo
insl
jmp
not
into
filds
adc
fwait
add
je
sbb
into
adc
cwtl
inc
movsl
dec
imul
outsl
jp
mov
cmc
mov
leave
cs
faddl
jg
lea
popa
mov
or
ljmp
decl
jl
in
lock
mov
and
inc
loop
sarl
loop
xor
faddl
lcall
aad
fwait
dec
notb
add
repnz
mov
push
cs
xchg
out
adc
mov
or
stc
rorl
fildll
pop
es
out
ror
mov
ss
enter
sub
jmp
mov
or
jne
cmc
push
mov
xor
add
xchg
int3
sbb
bound
fwait
xchg
nop
out
lea
sahf
push
sbb
das
imul
icebp
cmpsb
jno
add
mov
sub
daa
add
test
xchg
adc
xchg
fsubrs
or
shrl
jmp
mov
stos
iret
es
sbb
mov
inc
popf
cmp
or
dec
loope
frstor
and
in
jo
dec
dec
arpl
and
adc
sub
fwait
adc
jo
call
int3
inc
add
loop
mov
pop
repnz
xchg
dec
or
jo
dec
mov
or
add
enter
xchg
lea
cmp
loopne
xchg
test
dec
sahf
sbb
fistpll
and
and
xchg
shrl
cmp
ljmp
orl
pop
jbe
mov
sbb
in
sub
xor
cmp
sub
pop
in
lea
mov
movsb
imul
sbb
dec
mov
and
scas
mov
pop
and
out
mov
gs
out
pop
fldt
sub
lds
mov
jne
movsl
inc
enter
or
dec
subl
jge
in
cmpsl
jp
loope
test
clc
daa
cmp
push
lahf
loope
dec
rcr
rorl
rcl
xor
mov
fs
cmpl
push
stc
push
pusha
sbb
test
out
sub
cmp
sar
xchg
aaa
mov
cwtl
rcr
cltd
sub
mov
je
mov
or
cmpsl
sbb
test
inc
ljmp
pop
pop
ja
jmp
push
add
loop
cmpsl
mov
add
call
dec
lret
xorl
add
je
xchg
mov
dec
xchg
test
hlt
or
dec
sub
arpl
es
mov
xor
sub
dec
imul
jo
loop
xchg
outsl
push
rcrl
push
sbb
sub
andb
add
push
pop
leave
scas
xor
and
loope
inc
cmp
cltd
arpl
data16
mov
scas
popa
gs
iret
pop
in
cmpsl
jnp
mov
pop
into
dec
xor
loop
fs
lahf
mov
push
addr16
aas
mov
imul
inc
cmp
fidivs
fdivrl
xor
stos
sbb
xchg
enter
dec
xlat
cmp
push
mov
cmp
stc
mov
jecxz
sbbb
icebp
dec
lret
or
pusha
mov
dec
pop
int3
cltd
loopne
xchg
rcrb
enter
out
dec
mov
mov
adc
sub
or
cmp
enter
mov
sub
push
lea
ficompl
repnz
sbb
and
push
or
push
rclb
out
sub
testb
dec
adc
xchg
push
mov
lcall
adc
inc
adc
sbb
test
inc
das
jle
les
cmpb
les
xlat
cmp
mov
sub
aas
pop
sub
xor
test
mov
fcoms
cmpsb
ljmp
fwait
push
adcb
mov
notl
lahf
hlt
jle
dec
sbb
hlt
movsb
adc
sbb
or
in
dec
push
orb
xchg
push
mov
sub
adc
in
mov
into
scas
jle
sbb
mov
mov
scas
out
fstps
jmp
test
dec
xlat
cmp
mov
mov
fidivs
or
test
pop
or
mov
cmp
jo
ret
jns
xlat
out
and
lahf
add
imul
adc
das
ret
mov
imul
call
sbb
ffree
mov
aas
insl
jnp
loope
push
add
cvtpi2ps
pop
lret
std
loopne
mov
or
rorl
int
and
popa
or
mov
lcall
mov
mov
push
aad
jle
insb
jle
loop
adc
push
jb
insb
jle
fwait
out
xchg
nop
ret
sbb
pusha
fcoml
stc
aam
jge
je
outsb
dec
cmp
mov
sti
loope
out
sbb
insb
stos
mov
mov
stc
xchg
fldenv
cli
jno
sbb
push
daa
test
inc
iret
pusha
jl
decw
cmovns
fbld
mov
les
mov
lock
insl
fldcw
leave
test
xorl
mov
jo
and
hlt
adc
push
push
cld
cld
and
popa
add
out
mov
push
js
inc
push
insl
and
mov
push
pop
push
xchg
mov
inc
out
inc
addr16
dec
fs
xor
adc
mov
cltd
stos
pop
and
inc
xchg
cli
xchg
cs
popf
mov
mov
add
xor
lods
loope
fs
lret
out
lock
loop
ja
pop
xor
adc
outsb
test
dec
push
test
mov
push
adc
ret
roll
xor
push
lret
pop
mov
outsl
ss
test
mov
lahf
imul
mov
xchg
shrl
int3
sbb
mov
add
sub
cmc
sbb
dec
int3
lea
gs
lock
insl
sbb
cmp
iret
sahf
adc
fistpl
push
dec
cmp
mov
inc
into
mov
and
pop
pop
gs
ljmp
lret
jae
mov
dec
mov
in
or
and
xchg
mov
aaa
cmp
out
setns
subl
in
jl
jmp
lods
mov
xchg
jmp
inc
inc
cmc
cld
adc
mov
adc
or
mov
jnp
call
jo
lcall
mov
mov
repnz
cmp
lods
aas
xchg
mov
shlb
arpl
jbe
mov
and
out
or
int
fisttps
push
cmp
sbb
lds
repz
jg
sub
and
dec
push
jle
pusha
in
rcll
dec
into
adc
jl
sbb
sub
pushf
fsts
or
dec
push
or
leave
jecxz
loop
pop
or
je
lds
sub
insl
add
jo
insb
jl
jnp
in
dec
lds
clc
lds
out
dec
out
jae
bound
cs
scas
popa
inc
mov
loopne
testl
lods
int
fstpl
adc
outsl
jne
xor
mov
or
xor
sbb
lcall
mov
out
dec
fdivr
daa
into
push
or
adc
mov
inc
in
sahf
shlb
popf
or
push
testl
xor
push
dec
fs
iret
mov
test
cmp
enter
rcrb
jecxz
test
jae
loop
popa
mov
addl
aad
jmp
out
adc
movsb
test
pop
sub
add
leave
lods
int
adc
out
push
gs
fldt
sbb
shll
inc
xor
insb
and
push
jbe
mov
fcoms
mov
jbe
cld
shrl
xchg
addb
lods
lds
aaa
dec
dec
scas
movsl
xor
ss
cli
inc
ljmp
aaa
mov
out
xor
and
mov
roll
fucomi
movsb
cli
insb
loopne
xchg
adc
repnz
xlat
jl
jae
or
sbb
mov
xor
shll
jne
push
dec
add
mov
aaa
adc
testl
push
jle
xchg
cld
dec
push
ja
cmc
mov
ljmp
lahf
cmp
jl
in
rcrl
mov
mov
fidivs
lods
stos
add
mov
mov
push
in
inc
lock
cli
mov
dec
jae
mov
jo
adc
lods
and
xlat
mov
cmp
and
lea
inc
stc
dec
in
jmp
pop
dec
jp
jns
xchg
jge
pop
rcrl
adc
inc
lods
dec
into
adc
mov
xchg
sbb
in
mov
repnz
test
push
out
lds
push
sahf
jbe
jg
inc
decl
or
mov
aas
mov
jne
arpl
out
cmp
cmp
es
mov
lret
and
leave
sub
add
imul
test
push
les
jle
shlb
jbe
loop
mov
sub
push
dec
dec
js
fwait
nop/reserved
inc
and
mov
add
or
sti
loop
xchg
push
and
sbb
insl
xchg
pop
push
popf
push
xchg
inc
sub
add
cmp
xorb
adc
mov
les
stos
dec
scas
mov
or
inc
call
pop
insl
std
into
and
ffreep
push
sub
sbb
push
jo
xchg
adc
stos
fstpt
dec
es
dec
cmpsl
testb
inc
or
xor
cwtl
pop
outsl
ss
xchg
pop
jg
xor
dec
arpl
ret
mov
jp
fidivrl
pop
or
pushl
fldt
insb
fldcw
rcr
push
rol
int3
cmc
add
test
push
decl
outsl
cmp
mov
mov
jb
popf
mulb
add
aaa
xor
loop
movsb
rcl
xchg
scas
pop
ficomps
mov
jbe
mov
push
push
xor
dec
cli
loope
in
sbb
stos
mov
inc
sbb
mov
mov
jle
xchg
cmpsl
inc
flds
mov
cmp
sbb
adc
mov
ret
in
lcall
xchg
or
ret
xor
aam
ljmp
insb
sub
jnp
fiadds
shll
daa
sub
xor
fildl
cltd
dec
out
dec
jmp
xor
in
loopne
jnp
or
xchg
fdivrl
int3
inc
jp
lahf
enter
mov
add
adc
leave
enter
inc
es
ljmp
adc
das
mov
push
in
cmpsl
divl
cmp
and
sbb
mov
dec
loope
imul
in
out
pop
mov
pop
add
clc
mov
adc
inc
iret
mov
imul
lock
inc
ficomps
jg
push
pop
addl
movsl
jp
or
adc
mov
loopne
sbb
jl
imul
dec
cld
cmpsb
xlat
cmp
sbb
out
rorl
sbb
out
in
push
mov
and
mov
lods
das
inc
in
test
lcall
jg
lret
popaw
jbe
sarb
lock
dec
push
pop
cli
out
cwtl
jb
cmp
fwait
mov
aad
lahf
fsubrs
and
dec
pop
les
lcall
mov
lods
lahf
in
adc
jmp
jle
adc
sub
mov
negl
outsb
pop
fdivr
push
aad
jg
movsl
sarb
dec
mov
out
xchg
lret
jbe
mov
es
sbb
sbb
lods
repz
dec
pop
sub
gs
scas
push
adc
pop
mov
fdivr
in
mov
or
jbe
add
int3
xchg
pop
inc
add
sub
inc
mov
xchg
sub
mov
fildl
int3
push
fcompl
or
mov
jne
cmc
or
jb
sbb
pop
popf
sti
je
mov
jnp
ret
and
popf
sbb
mov
insb
fs
aam
sub
inc
movsb
jo
test
mul
xchg
xor
xchg
jl
xchg
sbb
hlt
imul
adc
xchg
ljmp
negb
fldt
mov
cld
enter
adc
xor
enter
test
shrl
jo
push
mov
dec
popf
dec
and
lret
cmp
scas
ds
adc
fisubl
sub
lea
arpl
add
adcl
repnz
testl
pop
and
out
adc
stos
dec
push
push
dec
mov
and
stos
movb
pop
or
stos
dec
mov
xlat
cmc
jo
jo
std
and
jo
jb
dec
jl
in
loop
test
cmp
dec
add
fcmovnb
lret
cld
push
imul
fistl
jge
add
mov
jmp
pop
mov
inc
mov
pusha
rorl
in
dec
pop
out
jecxz
hlt
push
test
aam
gs
adc
xchg
fbld
outsl
jle,pn
fs
arpl
int
push
scas
add
adc
mov
cmp
out
popf
push
stos
sbb
inc
shlb
dec
subb
push
lock
les
mov
push
cmp
pop
dec
cmc
mov
fcomp
aaa
call
test
shl
insb
daa
inc
pop
mov
jg
mov
add
xor
pop
xor
mov
aaa
subl
test
dec
cmp
mov
in
ficoml
je
enter
xchg
in
fdivrs
pop
pop
loope
imul
adc
sbb
xor
in
pushf
cmp
adc
adc
or
push
inc
xor
cwtl
push
or
jp
out
add
sbb
fprem1
pop
jg
jle
enter
scas
dec
jo
mov
cmc
mov
leave
dec
cmpsw
cli
cmp
pop
dec
ret
jle
inc
xor
sbb
cld
sub
inc
fsubs
lock
lcall
sub
jns
mov
push
lahf
sub
sub
es
mov
mov
outsb
cmp
push
or
or
xlat
jecxz
mov
daa
scas
adc
lcall
out
mov
ret
sub
sub
addb
mov
mov
std
js
outsl
sbb
push
arpl
sub
lock
daa
es
pushf
subb
push
test
fwait
rcrb
mov
cli
jne
daa
jae
or
into
mov
movsl
in
sbb
push
xchg
cmp
nop
mov
sarb
xor
das
sbb
mov
fwait
hlt
popf
mov
pop
jne
mov
dec
enter
mov
jns
jge
jo
inc
ljmp
dec
sbb
mov
xchg
pop
dec
mov
and
mov
mov
adc
adc
addl
add
inc
push
dec
push
ret
sub
scas
or
cs
lock
jge
jle
je
shrb
jae
add
mov
fnstsw
lods
pop
clc
add
lret
adc
pop
divb
adc
ss
and
imul
xchg
hlt
add
loope
and
inc
mov
or
movsl
mov
add
dec
sti
enter
fiaddl
cmp
call
mov
ret
inc
push
cltd
jno
imul
repz
das
or
mov
popf
in
mov
xchg
aad
xchg
in
mov
inc
sar
mov
adc
push
mov
ja
inc
call
dec
test
fiaddl
cwtl
add
in
mov
xlat
dec
in
and
mov
push
push
insb
pop
das
out
sbb
or
and
mov
mov
fcomps
or
cld
sbb
out
cmc
push
jmp
jle
shll
fwait
cmp
cltd
or
jae
lods
out
cs
stc
or
push
xor
push
cli
das
inc
xchg
ja
mov
mov
mov
mov
stos
in
mov
int
call
mov
repnz
fstpl
mov
in
fimull
mov
or
add
cmp
int
int3
jo
jmp
mov
or
jb
lcall
fiaddl
lret
std
mov
int3
arpl
add
int3
pop
and
and
push
nop
sbb
or
repz
test
adc
cmp
fld
test
pop
add
in
cmpsb
mov
push
dec
loop
ljmp
cmp
int
cmp
clc
mov
add
enter
js
call
jge
pop
fiadds
mov
xchg
pop
mov
iret
or
jmp
stos
filds
mov
loop
fcoms
movsb
pop
daa
mov
sbb
popa
jp
icebp
push
out
mov
fs
rclb
xchg
pop
pushf
jbe
inc
adc
mov
sub
jle
cmpsl
sbb
out
jo
mov
push
pusha
xchg
push
test
push
mov
in
mov
inc
lcall
gs
mov
cwtl
lret
rorb
lods
adc
icebp
xor
push
nop
neg
xchg
call
jp
and
les
push
push
xchg
mov
mov
mov
inc
cmp
filds
adc
and
fwait
xchg
call
rcll
mov
lds
cmpl
xchg
pusha
add
cld
repnz
pop
stos
sbb
jmp
sub
fimull
fwait
loopne
int3
jecxz
jp
pop
push
loopne
mov
fsts
dec
push
mov
in
cmp
push
data16
push
in
adc
addb
inc
int
inc
push
xchg
xchg
push
adc
cmp
jmp
cltd
lds
sbb
loop
enter
leave
or
ret
dec
lock
lea
mov
gs
adc
lcall
fadds
xchg
and
xchg
ds
mov
sti
push
push
jl
mov
bound
lahf
jns
in
cld
dec
enter
pushf
and
movl
dec
push
xor
xlat
pop
mov
sbb
pop
mov
mov
fistps
pop
pusha
aad
mov
jo
mov
mov
fst
enter
xor
push
cmp
rcl
inc
cmpsb
out
insb
std
mov
jmp
iret
cli
mov
loopne
enter
ret
jg
add
xor
fs
push
inc
mov
in
jo
aas
mov
dec
mov
xchg
rorb
cmp
mov
lods
sbb
and
pusha
xor
jp
mov
push
je
or
in
jnp
jae
mov
incb
subl
out
adc
jmp
jnp
ja
lods
jmp
add
cmp
in
push
jl
cwtl
sbb
aad
hlt
add
mov
inc
outsb
sbb
sub
rol
pop
mov
std
aam
mov
xchg
and
test
or
adc
dec
pusha
repz
scas
ficomps
outsl
fwait
popf
jb
std
into
mov
fnop
in
loopne
dec
inc
and
sub
imul
cltd
push
aad
pop
mov
ja
mov
in
aad
sbb
inc
mov
xlat
pop
movaps
jnp
fucomi
push
and
mov
scas
ficomps
int
adc
xor
out
js
mov
call
cmp
mov
xchg
fmuls
pusha
cmp
int3
lea
sti
movsb
dec
push
sub
dec
bound
and
jmp
sbb
ds
xor
mov
pop
xchg
lret
cmp
xor
mov
inc
jl
shrl
inc
xchg
imul
xchg
mov
pop
jge
dec
pop
and
shlb
ljmp
aam
scas
adc
inc
sahf
stc
das
jp
sbb
loopne
xor
jo
ret
lret
push
cmp
out
cltd
or
cmp
pop
mov
push
mov
sub
push
test
stc
mov
iret
movb
push
fstl
sbbl
jmp
pop
jne
mov
hlt
lahf
mov
mov
xor
jmp
xchg
jmp
out
adc
push
mov
inc
rclb
jecxz
hlt
dec
push
ss
jle
cltd
and
lcall
pop
fidivrl
xor
aaa
pop
jg
ret
scas
insl
jns
movsl
add
dec
repz
sub
mov
xchg
xchg
mov
outsb
ret
or
icebp
and
jmp
jo
ret
orl
xchg
stc
leave
sub
and
lcall
sub
xchg
sub
fsubrl
test
push
call
outsb
subb
lea
fsubrp
mov
fsub
aaa
subb
scas
xchg
lret
std
insb
or
mov
mov
int3
addr16
or
dec
mull
in
es
pop
out
out
and
xchg
add
cmp
push
and
mov
xchg
test
push
jo
pop
lahf
or
mov
nop
mov
push
lret
jl
lods
subb
std
pusha
pop
sbb
and
mov
testl
mov
cmp
aaa
add
xchg
les
je
insb
js
xabort
and
in
cli
pop
inc
movsb
mov
clc
out
fsubr
and
mov
leave
adc
add
outsl
mov
mov
jno
scas
shr
loopne
pop
fwait
cmp
lea
xchg
movsb
lea
das
pop
daa
out
adc
mov
mov
dec
cmp
push
jecxz
scas
mov
or
xor
inc
lcall
jg
cltd
stos
pusha
fmulp
aam
jmp
test
push
aam
lods
jne
xor
add
ret
cmp
insl
mov
or
sub
in
mov
mov
movsb
mov
push
nop
push
jge
int
dec
push
mov
leave
or
dec
repz
sub
jnp
pop
inc
aaa
inc
in
dec
push
cli
cmc
ja
clc
in
adc
jmp
divl
push
add
sbb
rorl
sbb
xchg
aas
dec
jmp
stc
xchg
mov
test
mov
jno
int3
hlt
and
rorb
dec
sub
cltd
push
imul
jl
ja
sub
inc
mov
in
jmp
lret
pusha
data16
shrb
out
mov
jp
dec
cli
mov
cs
in
shlb
xchg
aas
outsb
cmp
pushf
adc
adc
or
lea
adc
xchg
add
sub
or
add
cmp
mov
pop
ret
repz
pop
repz
je
in
jae
xor
or
cmp
aas
lcall
stc
rcr
add
mov
mov
fnstsw
in
inc
test
in
fcompl
out
testb
cmp
mov
ret
mov
push
cmpsl
inc
into
outsb
subb
dec
or
sahf
fdivrl
lea
add
cld
pop
xchg
push
loopne
jne
mov
inc
test
sar
push
ljmp
mov
out
cmpsb
xlat
mov
xchg
rorb
rorl
in
sbb
aas
insl
or
aas
nop
mov
dec
jne
mov
test
mov
and
nop
test
enter
and
int3
decl
in
lret
scas
mov
and
cld
rcrb
lods
inc
ret
pop
dec
mov
sub
aas
insl
jne
daa
mov
xor
xor
cmp
test
ja
imul
data16
pop
push
cld
pop
add
cmpsl
sbbb
stc
mov
dec
inc
aad
cmpsl
xchg
jne
das
mov
pop
scas
push
out
lods
rorb
xor
addr16
jp
in
xor
add
push
dec
andb
jp
lret
or
sub
imul
dec
cmpsb
jle
push
insb
push
mov
pop
cmp
shlb
hlt
dec
inc
insb
mov
ljmp
jg
popa
sbb
cmp
mov
cmp
cltd
jb
cmc
addr16
cli
cli
mov
clc
adc
mov
mov
out
fisubs
mov
add
push
aad
test
outsl
lock
xchg
cmp
popa
iret
stc
adcl
xchg
ss
jmp
mov
repnz
divb
jecxz
movsb
iret
sbb
mov
mov
mov
jnp
xor
gs
out
pop
xchg
outsl
xchg
sbb
scas
jmp
pop
push
test
mov
inc
cltd
pusha
cmp
lret
imul
dec
fwait
dec
popf
packsswb
sub
lcall
fisubrl
xchg
or
nop
xor
cwtl
dec
push
rcrl
js
jp
or
mov
and
iret
fldt
orps
jge
pushf
sarl
xor
sahf
mov
imul
xor
int3
mov
jae
or
jb
cwtl
leave
les
loope
movsb
push
xchg
dec
arpl
xchg
aas
xchg
mov
or
dec
mov
sbb
cmp
hlt
into
stos
int3
das
cmc
movsl
fwait
sti
shlb
lods
je
fwait
iret
pop
inc
sub
mov
and
inc
push
or
ds
pop
push
and
sbb
lret
lret
sub
jne
inc
fmul
stc
repz
inc
push
pop
mov
insb
add
insl
xchg
je
mov
pop
cmp
outsb
cs
add
jmp
fimuls
xchg
fsubrl
fisttpl
and
ljmp
ret
mov
call
mov
sub
or
mov
add
outsl
mov
push
cmp
lods
daa
imul
outsl
jp
inc
and
outsb
and
cmp
lods
xor
incl
test
paddsb
push
sahf
sub
mov
mov
testl
jnp
lods
dec
outsl
mov
out
dec
das
cmp
insl
shrl
add
mov
mov
dec
mov
in
pop
pusha
repnz
es
stos
or
fwait
push
fistpl
xchg
movsl
xor
fildl
mov
pop
out
jge,pn
cmpsb
cmp
in
add
jecxz
inc
inc
push
sahf
add
arpl
mov
and
sbb
pop
mov
jns
pop
out
imul
cmp
mov
or
push
inc
sub
es
or
add
pop
insb
mov
cmp
jae
dec
cmp
add
sahf
dec
in
inc
ret
outsl
lods
mov
xor
les
pop
mov
cwtl
xor
sbb
or
clc
outsb
pop
mov
sbb
enter
ret
les
adc
mov
xor
out
dec
jo
cmp
fcmovnb
dec
ljmp
cli
dec
insl
inc
add
les
inc
notl
push
sahf
into
into
in
dec
adc
sbb
mov
in
xor
pushf
xchg
sbb
xchg
add
xchg
push
lret
loop
out
adc
nop
aaa
xor
and
jb
sti
adc
fidivl
push
ljmp
mov
xchg
push
lods
adc
sub
xor
dec
dec
imul
or
add
pop
andb
frstor
cmp
cli
fisttpll
clc
je
pop
out
and
xchg
outsb
fwait
pop
mov
pop
cmp
movsl
mov
add
mov
mov
sbb
cli
pop
ret
fmull
xchg
jne
cltd
es
ds
and
pop
fwait
mov
xchg
adc
jns
mov
rcrl
push
pop
or
dec
or
je
cwtl
dec
repnz
push
mov
cmpsb
fcoml
pushf
stos
ja
aas
dec
imul
fisttpl
sbb
popa
mov
jne
in
into
adc
xchg
negb
cmp
or
or
int3
dec
mov
inc
stos
iret
lods
imul
adc
das
xchg
dec
push
scas
loop
inc
call
xor
push
outsl
mov
leave
xchg
hlt
movsb
sub
and
cmpsb
insl
nop
pusha
cmpsb
into
in
popf
divl
mov
jb
or
push
dec
jnp
testb
dec
bound
fs
xchg
pop
cmp
cld
loopne
mov
repz
xchg
pop
pop
addl
mov
in
push
movsb
arpl
imul
push
cmp
lods
roll
mov
dec
adc
sub
fstl
rcrl
push
sub
mov
adc
push
jp
sub
xor
sbb
inc
push
jne
dec
test
dec
xlat
outsl
testb
dec
movsw
xlat
mov
mov
push
cmp
and
and
mov
loopne
mov
pop
dec
bnd
adc
xchg
ds
adcl
ja
ja
adc
loop
sub
jno
leave
xor
orb
and
fcompl
inc
test
jnp
xchg
xchg
jne
enter
cmp
iret
in
jp
shlb
insl
add
mov
enter
fs
push
aaa
xor
sbb
je
addr16
pushfw
divl
and
mov
cli
sub
ret
xchg
fbld
cmpsl
sub
dec
rorb
and
out
jg,pn
adcb
sub
sbb
ja
fadds
ja
mov
lahf
aaa
push
adc
popa
mov
sti
jge
adc
aas
mov
outsb
movl
cmc
popa
add
testb
enter
or
mov
dec
cmp
jnp
jns
repnz
lods
xor
adcb
dec
test
mov
sub
aaa
incl
or
fnstenv
jne
hlt
xor
test
repnz
mov
or
icebp
adc
push
dec
pop
lods
hlt
lahf
imulb
pop
push
imul
call
cmpsl
ds
xchg
lret
es
adc
and
sahf
push
inc
les
mov
add
push
adc
jb
sbb
pop
ret
sbb
push
mov
fisubrl
xor
cmc
dec
inc
mov
fistl
add
outsb
shrb
xchg
ret
xchg
add
cmp
push
jo
mov
sub
imulb
xlat
jne
dec
dec
lahf
sti
xchg
jnp
mov
xor
cltd
repz
inc
add
iret
add
inc
mov
or
stos
test
jae
aam
es
jmp
and
inc
and
pop
in
into
repnz
jae
cmpsb
mov
jle
cmp
cmp
pop
mov
sbb
mov
test
push
rol
lods
mov
mov
das
push
hlt
dec
cmp
adc
sub
popf
mov
arpl
or
insb
sub
out
or
push
fstp
push
xchg
pop
in
cmp
shl
ret
mov
pop
add
shlb
in
mov
cmpsb
pop
sahf
inc
and
pushf
add
pop
or
pop
fildl
add
out
je
sarb
push
insb
cmp
sbb
jmp
mov
out
fdivs
jno
pop
insb
stos
or
mov
lahf
xchg
addb
popf
js
push
scas
int3
roll
loope
xlat
and
mov
enter
mov
test
int
push
push
les
add
lahf
mov
cmpb
movsb
and
lock
mov
mov
andb
sub
scas
mov
lock
and
out
fimuls
cmc
inc
mov
add
jge
popf
xchg
add
mov
xor
daa
xchg
mov
xchg
dec
xor
test
iret
dec
add
lock
and
icebp
out
push
pop
aaa
and
sbb
sarb
push
jnp
cmp
mov
xchg
mov
hlt
fwait
mov
insl
subb
cmpsl
lock
inc
shrl
and
repz
insl
inc
call
mov
mov
jle
sbb
xor
xor
mov
sti
test
jnp
movsl
outsb
pop
jbe
xchg
lods
lcall
mov
das
bound
jge
jne
mov
mov
inc
inc
push
loop
mov
xor
jge
stc
loop
xlat
jg
pop
imul
push
xor
mov
cmp
popf
iret
dec
dec
mov
xor
daa
popa
jb
movsb
add
mov
hlt
mov
pushf
mov
and
adc
pop
mov
lea
xchg
sub
mov
bound
pop
mov
mov
mov
and
mov
push
lds
or
daa
test
nopl
pop
sub
sub
pop
insl
xor
pop
loopne
mov
in
fnsave
cli
or
jle
test
sub
sub
xor
pop
xchg
push
pop
mov
mov
jl
mov
adc
loope
aaa
int3
clc
and
or
xchg
sbb
sbb
lret
jns
push
int
aaa
pushf
inc
cli
inc
pop
push
in
imul
xlat
pusha
mov
jb
ss
inc
sbb
dec
cmp
loop
es
jge
hlt
push
sbb
and
push
sub
pop
nop
adc
dec
sti
insb
xor
xorl
mulb
push
dec
xor
inc
mov
lods
or
jmp
adc
jbe
dec
or
sbb
adc
gs
imul
fisttps
jb
leave
add
test
stc
or
cmpsl
jg
mov
scas
mov
fistpl
jns
mov
arpl
xor
mov
pop
pop
inc
addl
xor
frstor
mov
fucomip
sbb
stos
test
lahf
call
aas
adc
xorb
mov
push
cmp
rcl
inc
iret
lcall
push
cli
mov
sbb
dec
iret
cmpsl
push
jb
jmp
push
arpl
and
sahf
imul
in
call
jbe
imul
test
adc
add
sub
dec
pop
mov
loopne
insb
repnz
push
adc
inc
fcomp
and
mov
movsl
push
push
push
nop
cmp
in
out
repz
cmc
and
jge
push
ja
ljmp
xchg
add
add
clc
pop
loop
icebp
dec
mov
xchg
aas
jo
leave
xchg
das
sub
rol
es
mov
bound
sbb
mov
test
push
sbb
das
daa
pop
push
push
jmp
lret
js
lods
ret
inc
out
shl
mov
push
fisubrs
std
add
aaa
jne
push
push
jg
inc
addr16
mov
ja
je
gs
notl
pop
fistps
aad
es
push
xchg
into
cltd
mov
mov
mov
shl
lret
sub
adc
shlb
test
int
aad
add
repnz
popf
sub
out
jbe
fsubrs
add
loop
xchg
lds
cmp
inc
das
pop
stos
sub
loopne
clc
jnp
fwait
jg
mov
xor
stos
loop
xchg
push
iret
imul
scas
xchg
in
mov
jl
adc
mov
andb
mov
lcall
sbb
xlat
inc
into
shlb
push
aad
test
inc
xchg
xor
cmpsb
push
jae
enter
js
mov
and
dec
adcl
sti
ja
shr
mov
shll
cwtl
fcomps
nop
in
jl
xchg
push
ljmp
ret
mov
ja
enter
adc
stos
jno
xor
clc
iret
cltd
inc
mov
mov
insb
cli
adc
cmpb
add
cli
subb
lods
cmp
popf
jg
fs
ljmp
das
ja
adc
or
adc
xchg
out
mov
or
mov
jg
or
add
and
and
ss
insb
mov
push
add
mov
data16
scas
mov
push
add
cwtl
icebp
and
std
xchg
or
cltd
mov
rorl
push
jmp
xchg
jp
dec
jl
push
lret
fwait
mov
dec
inc
push
nop
sti
inc
int3
not
data16
lods
movsb
jmp
cmp
idivb
push
pop
sti
cs
sub
mov
bound
aam
xlat
jne
pop
add
std
dec
call
dec
and
push
outsl
mov
mov
push
insb
test
rolb
test
jg
loopne
adc
push
movsl
mov
mov
mov
in
xchg
cmp
std
inc
rcrb
pop
mov
push
repnz
mov
sub
sbb
cmp
jbe
cs
lods
gs
adc
pop
cmp
add
cmc
xchg
add
xchg
mov
jno
pop
xchg
xor
icebp
jp
pusha
clc
and
lret
mov
pop
mov
das
mov
inc
mov
fisubs
cmp
cs
or
cmp
fs
xchg
push
orl
xor
pushf
and
xor
sbb
pop
mov
pop
test
inc
in
inc
inc
push
fnsave
icebp
sbb
mov
je
sbb
sub
sbb
jb
repnz
es
jp
push
lcall
or
jle
and
jmp
pusha
shlb
mov
scas
cmpsl
pop
adc
xor
adc
cli
hlt
pop
xchg
stc
jae
movsb
sub
xchg
imul
pop
adc
jecxz
cwtl
notb
cmc
push
fdivrl
push
inc
iret
mov
imul
call
mov
mov
dec
scas
in
call
pop
sbb
stos
adc
and
das
movsl
mov
leave
outsb
jne
popf
sbb
iret
push
nop
ret
jo
in
jns
jno
jle
push
out
add
mov
out
sbb
test
sub
sarb
lahf
sub
dec
pop
outsl
les
mov
cwtl
push
push
xchg
cmp
cmp
or
push
repz
lret
and
mov
pop
repnz
fisubl
push
sarl
and
push
repz
xor
push
mov
in
or
divl
push
xchg
and
shrl
cmp
insl
stos
jp
or
pop
je
daa
sarb
pop
cmp
jns
adc
fnstsw
pop
ret
inc
cmp
sub
rol
dec
inc
aaa
mov
fistpll
sbb
std
and
mov
or
cmp
inc
dec
fisubrl
sub
xchg
cmp
insb
cmp
jmp
divb
pop
jge
jge
jecxz
nop
sub
sbbl
xor
sbb
jge
sbb
lds
mov
push
mov
enter
mov
pop
sahf
inc
shrl
push
out
and
jg
incl
dec
cmp
mov
add
mov
cmp
xor
push
jns
push
test
add
push
mov
push
dec
xor
and
outsl
push
fimuls
or
je
fs
and
mov
int3
xor
mov
mov
ficompl
fdivrs
fisubrl
lods
sub
arpl
mov
push
and
cmpsl
int
std
sbb
incb
call
add
nop
jmp
jns
xchg
xchg
out
repz
mov
mov
mov
mov
sbb
imul
inc
lret
dec
fimuls
xor
mov
daa
mov
xor
aad
push
dec
jno
mov
sbb
sbb
jbe
clc
ret
xchg
shlb
pushf
mov
pop
xor
add
inc
and
mov
ljmp
mov
stc
dec
xchg
notb
sbb
lock
dec
jo
mov
cld
dec
mov
lds
sub
cvtdq2ps
mov
inc
jb
js
ret
cli
enter
rcr
enter
stos
push
sub
scas
repz
ror
inc
pop
jecxz
clc
jmp
repnz
mov
cmp
and
xchg
rorb
hlt
lods
jge
das
clc
sar
mov
pop
fsubs
add
shl
ret
sub
out
mov
fnsave
push
cmpl
fisubs
mov
adcb
jnp
sbb
sti
sahf
imul
sub
push
dec
pop
jbe
mov
icebp
push
shr
jne
scas
nop
and
push
out
test
fs
mov
jo
sub
and
shll
jmp
jge
sbb
dec
xor
dec
or
push
push
or
fistpll
test
xor
test
adc
insb
shrl
cltd
in
fisubl
es
pop
popa
mov
adc
fistpl
icebp
push
mov
insb
xor
int3
leave
mov
mov
xor
adc
or
negb
cs
xor
ja
jbe
cmp
repz
sub
incb
push
mov
jnp
into
xchg
pop
loopne
jge
flds
mov
shll
mov
sahf
adc
mov
adcl
sbb
mov
push
idivl
cltd
jo
xchg
xlat
push
popf
mov
push
push
jae
cmpsl
cmp
out
not
subb
mov
neg
adc
into
xor
and
call
push
jb
xor
divl
mov
andl
pop
addr16
mov
and
push
mov
in
add
xchg
addr16
mov
sbb
pop
add
test
xchg
sub
adc
mov
dec
icebp
int
es
add
inc
dec
int3
icebp
aas
movsb
daa
nop
test
xor
shll
cwtl
call
mov
les
inc
sarl
xor
and
sub
enter
cltd
dec
mov
push
cmp
rcrb
mov
incl
xlat
ja
mov
add
icebp
loopne
xchg
mov
mov
add
jle
mov
stos
pop
push
shlb
mov
es
cli
mov
out
ss
and
mov
sub
xor
int3
mov
pop
xlat
mov
mov
push
inc
dec
cmpsl
and
adc
ret
add
add
popf
stos
xchg
mov
bound
inc
mov
nop
in
pop
push
and
mov
jo
xchg
inc
rcr
or
and
sub
or
inc
mov
push
dec
mov
int3
ret
movsb
and
pop
jb
cmpsl
aad
mov
add
mov
mov
and
sub
pop
add
cs
mov
popa
loopne
hlt
test
mov
test
cmpsl
dec
pop
sbb
mov
dec
xchg
push
bound
dec
pop
add
or
xor
push
adc
push
js
or
test
mov
enter
sbb
jns
pop
sbb
pop
jbe
mov
out
call
xchg
mov
or
nop
mov
jae
fstpt
xor
sbb
sbb
xor
mov
push
sbb
sarb
jge
jmp
clc
mov
hlt
cmp
gs
xor
xchg
lods
push
js
sahf
shll
sub
xchg
roll
adc
je
dec
aas
in
fwait
loope
loopne
inc
jo
ja
in
ds
pop
int3
ljmp
sbb
jb
pop
inc
std
sbb
mov
inc
adc
movsl
test
or
xor
inc
and
mov
xchg
cwtl
xor
sub
jo
mov
imul
sub
mov
imul
leave
pop
xchg
push
or
ret
lods
inc
lods
fwait
fwait
ja
push
movsb
lahf
ror
pop
xchg
fisttps
in
mov
ret
sahf
fildl
push
out
xor
sub
loop
mov
mov
ss
mov
push
fisubs
shlb
jnp
or
dec
scas
fs
and
popa
hlt
push
dec
mov
push
jmp
es
adc
cmc
xchg
jbe
cmpsb
push
mov
in
arpl
call
push
dec
pop
fnsave
dec
in
pop
fs
or
lds
jae
and
repz
sbb
mov
jg
aaa
add
cmpsl
insb
cmp
into
sub
push
pop
addl
insb
push
cmp
sti
jb
inc
iret
sbb
int
repnz
inc
inc
and
ret
test
mov
clc
ds
adc
sub
push
sti
mov
or
cmp
pop
repz
in
pop
lock
jnp
icebp
mov
imul
mov
lock
sub
das
ss
jae
nop
in
cltd
mov
out
je
xchg
loopne
add
xbegin
cmpsb
cmpsb
ljmp
add
roll
sub
mov
sub
cltd
das
lcall
popa
cmpsl
mov
inc
and
xor
orl
mov
jnp
rcr
out
xchg
and
dec
cmp
adc
xchg
inc
hlt
inc
enter
mov
pop
or
pop
sbb
decl
neg
sbb
xchg
aaa
popl
dec
ret
mov
lret
cmp
adc
add
mov
adc
fsubrl
outsb
xchg
adc
hlt
jge
or
jecxz
xor
mov
test
push
insb
xchg
test
lea
div
test
dec
mov
inc
fdivrl
lret
mov
jle
loopne
cmp
xor
fnstsw
add
add
popf
inc
mov
lret
pop
push
inc
es
int
inc
cmc
inc
test
mov
push
stc
std
push
inc
jg
sub
mov
dec
sub
cmp
mov
ret
sub
and
sub
dec
sub
inc
xorl
pushf
ret
adcl
test
xchg
xor
jp
movsb
stos
and
add
xor
and
and
sub
pop
popa
mov
jae
adc
scas
popl
push
movsl
or
mov
mov
scas
int
iret
add
add
cmp
test
stos
mov
in
jae
stc
mov
fdivr
stos
shrb
outsl
push
mov
int3
mov
add
pop
in
lahf
xor
jns,pt
cmp
fsubrs
popf
adc
cmc
in
add
sub
loope
in
push
pop
test
cmp
das
js
jnp
in
jno
iret
xor
mov
jno
mov
and
mov
jmp
mov
shll
leave
fcmovnb
imul
out
nop
add
ret
xchg
sarl
mov
mov
cmp
addl
fdivrl
mov
aad
cwtl
sub
mov
stos
and
cltd
mov
inc
cmp
fldcw
ffree
pop
lock
pop
shll
adc
in
add
mov
loope
or
mov
sbb
mov
mov
movsb
push
xchg
mov
ret
sbb
inc
dec
les
dec
add
fisubs
jo
adc
daa
imul
jns
cmp
es
int
xchg
test
andb
in
lahf
enter
and
jp
cmp
testl
int
and
xchg
cmp
lea
out
xor
mov
push
mov
xchg
sbb
rclb
lret
push
jno
cli
xchg
ljmp
sbb
movsl
and
jns
int3
xor
incb
xchg
cmp
mov
int
lret
rcl
pop
xchg
and
jo
imul
cmp
adc
mov
test
push
stos
push
inc
scas
sbb
nop
scas
jg
int
insb
xor
and
mov
xchg
add
cmp
jo
stc
popa
sub
lock
sbb
mov
sbb
dec
hlt
cmc
push
cwtl
mov
js
mov
call
xlat
scas
sub
cmp
fimuls
mov
mov
mov
cld
cli
push
push
in
sbb
push
sub
sub
mov
cmc
fxch
mov
divl
cli
cld
fcomip
pusha
aad
adc
and
jae
adc
xchg
xor
adc
mov
mov
dec
dec
xor
lock
pop
cmp
dec
mov
test
orb
lahf
sti
imul
cmp
int3
dec
cmp
or
push
pop
mov
pop
mov
cltd
mov
push
mov
mov
cmp
mov
and
aas
cmc
mov
daa
mov
push
jb
imull
sbb
lret
sbb
xchg
imul
outsb
aaa
sti
lret
push
fbstp
enter
xchg
outsb
xchg
and
and
addr16
in
mov
test
sub
mov
pop
movsb
jecxz
fcompl
xor
or
inc
mov
xchg
add
subb
int
out
test
pop
add
add
outsl
add
mov
xor
sbb
xchg
jo
sub
mov
push
insl
mov
inc
je
and
or
stc
loope
aam
sbb
je
insl
push
and
into
lret
daa
mov
dec
cmp
inc
and
icebp
pushf
aaa
test
sbb
scas
push
push
sbb
jg
bound
loope
scas
lcall
adc
rcr
dec
jp
rclb
push
enter
sbbb
cmp
fs
fistps
test
stos
pop
call
movsl
mov
lods
jmp
inc
loope
and
int3
pop
imul
adc
push
in
xchg
dec
out
push
aam
pop
pop
in
xor
dec
pop
pushf
hlt
dec
adc
divb
push
adc
int
dec
adc
aaa
sbb
mov
fdivrs
test
pop
addb
fistl
xor
je
xchg
in
mov
lds
std
idivl
fsubs
xor
mov
lock
aam
test
mov
cltd
cltd
jp
aas
sub
pop
shlb
rorl
shlb
and
sub
cli
sbb
cwtl
scas
sbb
ret
sub
inc
and
push
mov
inc
push
cmc
xchg
test
mov
or
mov
repnz
inc
mov
cli
sub
int
js
es
outsl
push
mov
lcall
cmpsl
cmp
mov
mov
xor
mov
not
out
mov
test
mov
repnz
jp
outsl
dec
jnp,pt
jns
cmp
mov
insl
mov
ljmp
loope
test
adcb
mov
fcomp
nop
iret
push
lods
adc
dec
mov
jg
repz
and
pop
sbbb
or
push
nop
lahf
cmp
cs
or
jle
mov
leave
adc
inc
sub
rclb
pop
flds
adc
addb
jno
sub
test
testb
int3
mov
leave
mov
or
xchg
sub
loopne
xorl
xchg
jae
test
popa
xor
shlb
dec
xor
in
jb
test
jns
test
pusha
cmpsl
jge
ds
push
xlat
and
xorl
pop
and
jns
addr16
adc
cmp
jo
dec
pop
adc
scas
sub
fcmovne
pop
scas
cmp
inc
ds
aaa
pop
sbb
aad
push
fdivp
orl
scas
add
add
int3
or
jo
sbb
adc
inc
test
call
fbld
inc
inc
pushf
outsb
les
inc
fdivs
scas
or
std
sarl
fistps
pop
fwait
jb
sub
addr16
cwtl
inc
push
mov
sub
loopne
movsl
or
or
mov
dec
cltd
adc
nop
or
mov
sbb
stos
mov
arpl
push
rorl
loope
imul
shlb
mov
or
rol
inc
add
or
mov
mov
or
mov
fisubs
inc
addr16
push
lds
movsb
outsb
xor
jo
sbb
push
aad
sbb
imul
out
arpl
mov
cltd
test
dec
int3
mov
and
nop
push
mov
or
je
movsb
adc
aad
adc
cmpb
shrb
or
and
push
cmp
sub
pop
call
adc
mov
sbb
aas
int3
push
mov
lock
sbb
mov
dec
add
cmp
lret
push
inc
es
sub
sub
or
shlb
fsubrl
and
shrl
loopne
and
xchg
xchg
fdivr
aaa
pop
push
fsubs
sbb
mov
imulb
xchg
add
mov
adc
js
jl
pop
test
rcr
cld
adc
push
imul
call
les
bound
loopne
lds
dec
call
div
hlt
in
stos
mov
repnz
call
and
sarl
ja
jecxz
mov
xchg
mov
inc
pop
imul
cmpsb
push
pop
sub
loopne
jmp
adc
jo
push
mov
push
sbb
adc
jo
fwait
cmp
loope
dec
mov
xor
arpl
dec
adc
push
mov
sarl
or
mov
aad
pop
mov
bound
sti
mov
mov
aad
dec
jb
push
jge
iret
push
rorb
scas
jae
sub
inc
fbld
inc
call
inc
fstpt
aas
mov
or
cltd
popf
imul
popa
in
hlt
stos
test
sbb
jl
pop
sub
clc
cmpb
repnz
jbe
xlat
adc
les
sub
mov
xor
adc
mov
xor
pop
adc
and
ja
cld
js
loopne
and
sub
jae
clc
xlat
nop
scas
cld
fisubrs
dec
cli
xor
pop
aad
adc
call
push
mov
jae
push
or
sbb
add
xor
add
fstpl
sub
iret
dec
sbb
test
gs
jnp
sub
xchg
jne
add
xor
push
jmp
shlb
in
sub
or
dec
xor
jle
xor
into
iret
mov
mov
pusha
divl
mov
call
mov
mov
inc
push
ja
out
xor
mov
mov
in
mov
mov
addr16
repz
scas
rclb
shll
push
sub
push
jne
out
sbbb
dec
repnz
test
xorl
jne
cmp
jne
cltd
mov
movsb
pop
xchg
xchg
in
add
or
notl
leave
lods
add
dec
sbb
sbb
aad
aam
aam
fcoml
jge
lahf
sti
mov
dec
xor
rclb
or
fists
sbb
pop
roll
test
jg
popa
xor
stos
dec
pop
popa
scas
mov
lock
dec
movsb
mov
pop
ds
mov
fcompl
out
aam
ror
dec
repnz
mov
or
pop
xlat
cmpsb
push
jns
mov
cmp
sub
inc
mov
push
pushf
mov
insb
xchg
pop
xchg
or
lcall
imul
popa
and
and
pop
dec
cmpsb
inc
cmpl
lock
adc
add
and
push
sub
push
arpl
jg
outsb
dec
jp
stos
mov
pop
shll
cmpsb
inc
dec
pop
dec
idivl
mov
push
ret
push
mov
stos
cs
adcl
jle
div
add
jge
xor
mov
mov
lgs
push
pop
pushf
loopne
ds
and
idivl
mov
nop
push
and
rol
out
hlt
mov
push
outsl
dec
andb
icebp
sub
js
cli
adc
add
addb
dec
dec
or
sti
arpl
or
adc
stos
stos
mov
cmpsb
xor
mov
adc
or
andl
fcoms
pop
and
cmpb
aas
dec
addr16
es
dec
cmc
push
jecxz
or
xchg
add
jnp
or
jp
jmp
sbb
pop
mov
cmp
inc
jp
int
lahf
pop
pop
xchg
mov
dec
and
jl
imul
xor
ss
clc
dec
paddw
mov
sub
lock
dec
inc
mov
stc
cmpsl
cld
push
lret
movsb
fstl
adc
cltd
and
jmp
out
pop
mov
inc
mov
outsl
cmp
or
std
std
or
jae
rcrl
mov
inc
mov
sarb
lahf
mov
scas
aas
push
fwait
inc
sbb
jne
xchg
aas
sti
mov
int3
pushf
xchg
inc
inc
daa
push
aad
movsb
inc
mov
icebp
pop
shlb
dec
xor
mov
out
inc
iret
ret
mov
xor
lea
lret
adc
repnz
cltd
outsl
xchg
rorl
test
sbb
movsb
jnp
and
movsl
pop
loope
les
insl
ja
xchg
ja
pop
push
je
roll
stos
jg
pop
add
fwait
inc
inc
sub
or
xchg
or
popf
dec
ljmp
bound
push
mov
xchg
jle
popa
xor
jecxz
lock
stc
adc
jne
stc
dec
push
ss
mov
flds
add
imul
sarb
shrd
popf
loop
ds
arpl
lock
mov
sbb
mov
mov
shrb
lds
sbb
cmc
out
gs
notb
stc
fimuls
pushf
cmc
imul
sub
insb
push
mov
cli
push
xchg
push
ret
or
push
leave
pop
ffreep
pop
cltd
pop
shl
rcrl
shrb
stos
aas
mov
mov
je
lcall
enter
out
xchg
sbb
ljmp
jp
stos
shrl
into
jle
lcall
sbb
push
xchg
fwait
scas
sbb
xchg
int
xchg
lds
add
ret
mov
adc
cmp
sbbb
jmp
lods
loop
imul
scas
sbb
fistps
aam
xor
iret
or
and
dec
cli
pop
mov
mov
mov
mov
daa
fwait
es
pop
mov
test
sub
or
ficompl
cs
inc
sbb
dec
inc
popa
gs
scas
xor
decl
pop
cmp
loop
jnp
aad
adc
popa
neg
in
int3
cmp
add
pop
test
adc
xchg
lcall
mov
pop
ss
adc
ret
iret
and
call
jno
leave
outsb
lods
push
add
or
mull
xor
orb
jbe
mov
jp
inc
push
pop
inc
movsl
add
jb
mov
setns
idivl
push
movsl
mov
fistpll
imul
cmpsb
insb
pop
mov
dec
stos
arpl
inc
xchg
pop
sub
xchg
mov
daa
xorb
inc
jb
fists
mov
xchg
nop
aam
mov
scas
clc
cmpsb
cmp
mov
adc
fbstp
fnsave
inc
dec
dec
xchg
mov
mov
cmp
jb
cmp
hlt
mov
push
mov
jle
es
sub
jl
add
pop
mov
add
jp
add
insb
jo
add
add
jo
add
add
add
jo
add
add
add
lcall
add
jo
add
jb
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
fcomps
add
add
mov
fwait
add
jle
adc
es
cltd
push
ret
scas
add
or
dec
add
push
push
push
mov
test
je
or
outsb
out
push
xor
cs
test
cmp
adc
call
jb
jne
insb
inc
in
gs
sbb
push
add
inc
mov
shlb
mov
arpl
pop
mov
and
mov
stc
push
pushl
cmp
rolb
push
push
clc
jbe
pusha
push
or
lea
stc
leave
mov
or
add
push
push
push
call
add
pop
pop
je
add
cltd
dec
push
addb
out
sub
adc
ret
mov
rorb
cmp
jne
or
inc
adc
mov
roll
mov
inc
and
or
or
xchg
adcl
mov
pusha
push
mov
ds
orl
push
rolb
pop
push
push
call
mov
or
rol
or
dec
xchg
mov
in
cmp
in
jp
out
iret
push
scas
jle
je
mov
shll
out
cmp
jb
push
sub
orl
cmp
adc
out
call
jecxz
pop
or
dec
rcr
nop
adcb
add
mov
and
subb
scas
jl
jg
or
push
add
data16
sbb
sarb
cli
sar
add
clc
mov
xorl
add
fisubrl
sub
fwait
xlat
push
and
fisttpll
loopne
ljmp
cmp
inc
std
int3
adc
dec
pop
sub
adc
jne
lea
push
leave
add
push
sub
cmp
adc
and
mov
loop
or
push
adc
cli
fdivr
cmp
daa
push
cs
out
sbb
or
add
adc
xor
loopne
sbb
cmp
sbb
mov
jb
int3
fists
or
data16
mov
or
cmp
sub
test
ret
inc
mov
xchg
aam
lret
or
gs
shr
ret
dec
add
addl
js
neg
xchg
subl
sbb
jmp
adc
pop
and
ds
in
mov
xchg
fwait
mov
push
lcall
push
inc
div
divb
sbb
fldl
or
add
mov
or
insb
cltd
out
sbb
pop
sub
test
test
add
mov
cwtl
rorb
cmp
or
mov
lods
push
dec
adc
sub
popf
stc
xor
loope
jo
adc
ret
lea
push
push
mov
sub
cli
ja
or
mov
push
lock
add
xor
dec
dec
fcoml
cmp
mov
in
or
pop
jmp
mov
mov
sar
aaa
nop
add
loopne
rep
adc
xchg
pop
or
lea
or
mov
push
clc
sub
and
test
adcl
call
jge
test
out
sbb
test
adc
clc
lea
dec
rclb
mov
enter
jp
xor
sti
xor
test
and
adc
add
mov
sub
inc
sahf
ret
rcll
mov
andl
push
add
cmp
dec
sbb
jl
xor
ss
bound
and
or
mov
xchg
es
mov
mov
movntq
out
cltd
xor
mov
fcoms
or
xchg
sub
jmp
or
or
out
push
add
clc
sbb
testb
fadds
jmp
test
jle
and
jnp
movsb
movsl
inc
fisttps
cwtl
xchg
stos
roll
jne
mov
mov
mov
cmp
or
jne
jl
cli
je
inc
shrb
inc
sbb
push
xchg
mov
mov
jb
nop
mov
movb
jnp
enter
xchg
sbb
hlt
jmp
test
jae
adc
fistpl
jl
int
inc
andb
adc
xchg
mov
test
mov
loopne
mov
test
mov
adc
pop
sub
or
inc
pop
push
dec
sbb
add
jl
cwtl
mov
pop
jge
or
aas
pusha
shrb
dec
in
sti
push
jl
cwtl
dec
cwtl
xor
jecxz
add
stc
dec
jecxz
add
into
sub
push
jge
lea
push
xor
cld
sub
ret
pop
add
xor
fsubr
ja
adc
cld
push
jno
call
fsubs
xchg
cs
sub
adc
shl
mov
inc
mov
mov
js
test
xchg
push
xchg
ret
imul
stc
shrl
inc
dec
push
mov
inc
adc
cmp
pop
cmp
or
addb
int
jb
sub
inc
cmc
xor
leave
pop
test
notb
nop
daa
xor
push
add
inc
jl
inc
and
andl
or
adc
pop
cmc
sub
fwait
adc
sub
movsl
and
cmpb
das
or
stos
verw
aam
ficomps
mov
pop
or
movsl
sbb
adc
dec
cmp
lea
dec
sar
sahf
mov
xor
mov
pop
cmp
call
xchg
or
mov
call
in
ficoml
ret
mov
mov
dec
rolb
fcmovne
push
pusha
movsl
jbe
add
repnz
lods
stos
add
je
adc
idivb
addl
ja
out
push
mov
das
mov
push
or
cld
cmc
sbb
sbb
call
ret
dec
dec
pop
adc
lcall
push
xchg
call
test
insb
dec
jb
mov
out
mov
sub
or
add
xor
test
push
mov
push
pop
sub
push
and
je
mov
sbb
jne
inc
ret
sub
je
push
push
and
arpl
push
scas
sbb
push
es
bound
lods
inc
push
push
aas
inc
dec
mov
orl
lcall
mov
mov
cld
dec
jle
add
add
movb
pusha
rolb
inc
add
adcl
add
xchg
sbb
pushl
test
add
pop
pop
pop
pop
push
out
cld
daa
test
or
adc
or
push
add
adc
xchg
and
mov
push
dec
add
arpl
shll
mov
push
std
xlat
ljmp
inc
mov
ret
in
movb
outsb
leave
push
adc
jge
pushf
inc
sbbb
pop
ret
je
dec
ja
and
push
add
in
sub
push
push
clc
lods
cmp
mov
inc
enter
nop
dec
repnz
adc
inc
xchg
lods
mov
std
add
mov
aas
and
sti
xchg
call
in
in
add
pop
dec
stc
adc
jmp
jbe
adc
and
xchg
or
adc
add
fs
hlt
test
rep
imul
mov
jecxz
cmp
or
push
jmp
xor
mov
sub
test
mov
add
ss
push
arpl
adc
or
add
inc
xchg
mov
push
call
add
and
movsb
outsl
jae
or
mov
adcl
inc
pop
adc
hlt
add
cmp
jge
enter
add
sub
and
cli
incb
enter
sbb
cmp
ret
sbb
adc
add
cli
out
or
enter
mov
cmp
push
jo
mov
cs
pop
push
mov
sub
push
data16
dec
push
or
and
cmpsb
sub
push
push
shl
test
inc
push
imul
test
inc
int
mov
adc
dec
leave
loopne
xchg
in
roll
rep
rcrb
loope
fs
push
add
cli
shlb
stos
adc
xchg
cmp
mov
adc
adc
pop
inc
pop
hlt
push
pushf
lcall
and
push
xchg
outsb
push
xor
mov
adc
dec
sub
lock
mov
pop
imul
aas
pop
and
jae
push
lock
pusha
xchg
lret
cmovs
and
lea
std
popf
push
in
xchg
rolb
adc
sbb
inc
sub
adc
push
in
jmp
lret
mov
cli
cmp
jne
push
stc
jmp
fidivl
jl
pop
add
fsub
fildll
jne
cs
cmp
xchg
ficoml
in
sub
dec
ret
adc
movsb
sbb
pop
mov
cwtl
xor
test
rorl
or
test
sarb
mov
mov
lea
mov
add
dec
push
mov
xchg
adc
pop
push
mov
insl
push
lahf
and
nop
cwtl
loope
sbb
ds
inc
rcrl
adc
jl
sbb
addb
xor
add
je
shlb
stos
sbb
push
push
cmp
ja
add
ret
jbe
es
push
jge
jp
gs
cmp
rcll
push
xchg
xor
push
push
icebp
out
xor
sbb
dec
roll
sub
push
adc
xchg
xchg
das
mov
mov
ljmp
sbb
clc
xor
mov
ret
cmp
inc
into
aam
mov
mov
mov
mov
push
add
push
push
call
mov
inc
mov
ret
vdivsd
insl
jae
bound
mov
in
inc
sbb
popf
mov
adc
adc
inc
loop
and
cmpb
rolb
push
les
xor
jmp
or
in
push
stos
mov
cmp
lcall
cmp
jae
add
cmp
mov
push
inc
jmp
pop
outsb
add
push
adc
rcl
add
mov
adc
inc
mov
and
jg
test
pushf
setl
out
sbbb
inc
inc
mov
push
jno
xchg
inc
mov
jb
imul
mov
enter
fwait
xchg
xchg
adc
dec
add
icebp
pop
adc
push
or
dec
jg
add
icebp
mov
rcrb
jae
push
outsl
in
repz
xor
pop
mov
or
sbb
addb
or
jg
fs
ret
mov
cltd
sbb
daa
or
pop
pusha
loope
mov
pop
push
push
loope
pop
test
testb
mov
gs
mov
gs
dec
sti
test
and
lds
and
inc
jo
insb
imul
outsb
and
outsb
jl
push
push
arpl
fs
adc
jae
mov
outsb
in
je
fisubs
mov
imul
cs
popa
insb
frstor
jmp
imul
je
sub
fistpll
fdivs
mov
dec
in
jecxz
popa
addr16
inc
outsl
cmp
cmp
xchg
je
adc
movsb
enter
fdivs
xchg
or
inc
shl
divl
inc
js
je
es
test
inc
mov
popa
outsb
fs
jp
icebp
pop
sbb
je
dec
mov
inc
popf
cmp
inc
inc
mov
cltd
ret
or
adc
and
pop
sub
fpatan
and
adc
push
ret
cmc
xor
pusha
mov
mov
cld
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
aam
or
mov
add
aam
add
ja
or
sub
add
or
add
inc
add
jo
add
or
mov
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
