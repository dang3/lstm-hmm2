mov
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
pop
js
dec
mov
jge
and
test
add
incl
push
mov
pop
cltd
mov
xor
scas
xchg
jnp
push
out
loop
insb
aaa
sub
in
xor
aas
not
fcomps
and
out
mov
cmpl
hlt
popl
sbb
adc
inc
jno
push
sbb
sub
push
inc
cmp
js
adc
sub
cli
sbb
jmp
enter
lahf
fnstcw
out
ret
out
dec
jle
mov
cs
or
dec
loope
mov
stc
test
mov
xor
aad
or
sub
cld
filds
dec
mov
add
jbe
test
insl
push
test
pop
rolb
in
xchg
in
pop
push
mov
inc
hlt
iret
jns
outsb
stc
or
ljmp
in
lods
lea
mov
call
test
dec
data16
fadd
cmp
cmp
fnstsw
cs
push
andl
sbb
push
jg
add
loopne
loope
xor
jae
add
rcrb
jg
insb
mov
daa
jae
sahf
mov
in
inc
jl
mov
mov
mov
fisttpl
push
dec
in
add
push
fs
fldl
jl
xchg
xchg
rolb
xchg
and
pushf
pop
stos
loope
lods
inc
in
aaa
dec
mov
movsl
sahf
or
fsubl
sahf
ficompl
sbb
mov
lcall
addr16
pop
mov
mov
imul
out
insl
jmp
inc
imul
out
push
push
mov
stos
pop
stc
mov
pop
cmp
adc
sub
pop
mov
sbb
push
stos
call
dec
pop
ret
lock
ret
enter
pop
stos
lds
dec
mov
mov
xchg
mov
pop
clc
sarb
inc
scas
mov
test
clc
cltd
inc
cmp
fsubrs
inc
inc
scas
popf
nop
cltd
cmp
pop
adc
fisubs
mov
ret
and
pop
sub
decb
lcall
add
jmp
es
adc
xchg
jne
mov
dec
xchg
notb
and
mov
sahf
les
and
cmp
adc
pop
lea
insb
fcmovnb
push
fst
mov
xchg
and
mov
insl
cmp
inc
out
pop
push
lds
lock
lcall
loope
cmp
stos
aaa
or
and
mov
and
cmp
and
jp
add
pop
and
sub
add
pop
jecxz
cmp
lods
dec
mov
xchg
push
sarb
push
xchg
and
xor
mov
mov
testb
lods
mov
xchg
icebp
pop
imul
clc
xor
sbb
stos
cmp
or
pop
dec
adc
stos
xchg
scas
les
rcr
sub
jno
xchg
xchg
dec
jnp
jge
jge
jg
push
mov
sbb
push
out
push
fiaddl
xorb
push
aad
sbb
xchg
pop
popa
mov
or
fwait
jns
stos
cmpsb
jge
inc
ja
popa
add
xchg
je
out
adcb
xor
loop
loopne
mov
push
movsb
jb
or
jno
dec
in
jae
inc
imul
or
mov
jno
push
and
std
fsubl
xchg
xchg
scas
lcall
fwait
sbb
dec
and
jecxz
lret
fcmovne
scas
in
out
jmp
or
jo
jnp
lahf
cmp
xchg
xchg
lock
mov
outsl
arpl
fldt
ja
pop
fbld
data16
mov
pop
loopne
imul
imul
dec
jne
sbb
jbe
mov
fsts
xor
bound
and
mov
addr16
shrb
sahf
outsb
popf
xor
sarb
leave
fstpl
lret
daa
lock
inc
sbb
test
cmpsb
fs
adc
xorb
sub
fisubl
loope
icebp
sbb
adc
xor
rcr
scas
loop
xchg
pop
cmp
pop
jl
xchg
sub
popf
push
mov
sub
orb
stos
daa
xchg
rorl
xchg
dec
clc
inc
repnz
push
shll
mov
xor
lods
iret
call
clc
repz
mov
mulb
pusha
aad
sub
shl
xchg
xchg
dec
loop
addb
lret
adc
xor
loop
pop
inc
jl
adcl
inc
xchg
mov
icebp
mov
pop
nop
orl
test
mov
add
xor
dec
pop
repz
push
sub
cltd
test
pushf
jb
cmp
or
arpl
ror
sbb
inc
mov
jecxz
adc
and
push
cmp
fnclex
jnp
hlt
jle
mov
adcb
xchg
push
xor
cwtl
push
push
mov
fwait
ss
pop
stos
loop
ret
pop
cmp
sbb
inc
sub
pushf
or
fs
icebp
mov
lcall
cmp
leave
xchg
dec
sbb
arpl
cltd
sarb
sbb
fs
or
ja
mov
lret
push
sbb
pop
lret
pop
push
xchg
add
pop
adc
or
mov
jecxz
gs
push
jecxz
xchg
icebp
add
adc
jne
pop
pop
cld
mov
movsb
xor
or
mov
jecxz
out
adc
mov
mov
push
dec
sbb
imul
les
dec
push
xchg
pop
aad
int3
xchg
xor
mov
out
shll
sub
shlb
cmp
nop
adc
dec
add
jmp
addl
ja
ja
cmp
imull
ds
sbb
or
movsl
cmpsb
cli
xor
test
sub
push
aas
adc
sahf
loop
xchg
jb
push
outsb
rol
fstl
add
xchg
push
ror
mov
xlat
hlt
and
in
icebp
or
jae
shl
incb
mov
ret
pop
fwait
jbe
adc
xlat
cmp
mov
jmp
mov
fs
xor
add
inc
stc
das
adc
es
aas
aad
fs
push
test
fldcw
pop
in
xchg
test
pop
xchg
sbb
std
mov
es
movsl
ljmp
loop
or
mov
sbb
fidivl
sub
lods
pop
fildll
xor
repz
push
cwtl
clc
mov
ret
shl
call
ret
jns
lods
sub
cwtl
inc
add
pop
jno
inc
inc
daa
fidivl
outsl
pop
pop
clc
pop
inc
shlb
sbb
xorb
xchg
roll
stc
fcom
lret
lcall
mov
and
in
insb
call
push
call
mov
mov
adc
shll
jmp
aas
inc
xchg
ja
cmpl
add
aam
sub
mov
cmp
and
xor
push
dec
pop
or
and
enter
inc
dec
rorl
and
fisttps
imul
aam
mov
hlt
arpl
psrlq
cmp
addr16
mov
lds
shrl
pop
cmpsb
insb
add
jge
add
pusha
xchg
xor
insb
movsb
cmp
ss
lea
xor
mov
pop
iret
xor
mov
mov
push
out
xor
movsb
xor
mov
out
mov
fcomps
cld
mov
jns
mov
xchg
test
and
or
push
rcrl
pop
test
fldl
into
inc
rorl
inc
push
cwtl
dec
cmp
je
cmc
test
fmull
jge
sub
mov
pushf
push
mov
jge
stos
push
add
push
std
xchg
ja
mov
xchg
xchg
mov
movsl
mov
xor
xor
or
outsl
xorl
leave
into
mov
dec
sbb
jmp
fwait
lea
movsb
adc
int
rorl
idiv
mov
xchg
arpl
fidivrl
xor
punpckhwd
iret
bound
mov
add
js
inc
mov
adc
cmp
fisttpll
out
mov
out
movsb
add
xchg
pop
lock
pop
cmp
fcomps
mov
jo
test
pop
sbb
jbe
sbb
dec
and
arpl
adc
daa
push
or
mov
push
jnp
adc
sub
subl
jecxz
cmc
shll
popf
jg
leave
jno
mov
loope
sbb
xchg
call
pop
or
mov
stc
add
cmp
int3
pusha
scas
sbb
sub
jecxz
mov
fldln2
data16
mov
lcall
cmc
lahf
push
add
push
test
out
xchg
mov
lret
dec
xor
inc
popa
mov
cs
cmp
cmpsb
daa
adc
sbb
xchg
imul
mov
daa
data16
arpl
lods
dec
pop
fs
add
mov
mov
mov
pop
mov
and
js
insl
push
jns
ljmp
mov
pop
sub
cmpsb
bound
icebp
shll
push
sub
divl
xchg
xor
iret
pop
mov
cmp
mov
shrl
sub
mov
pop
fistl
insl
mov
test
loope
inc
loope
adc
je
aaa
push
lods
in
cmpsb
pushf
clc
cmp
sub
fisttps
inc
loopne
xchg
mov
push
sbb
out
mov
aas
xor
jg
dec
cli
push
aas
cmp
or
mov
dec
add
add
sbb
or
xor
sahf
out
lret
lea
arpl
jp
inc
outsl
dec
pop
rcll
jo
lock
dec
cwtl
cld
cs
loop
jne
shlb
mov
lds
popa
loopne
adc
enter
mov
add
out
gs
add
scas
sub
int
adc
or
cmp
cli
and
mov
out
lret
inc
cmpsl
and
rorl
mov
sbb
jecxz
mov
ret
sub
rorb
in
cltd
addr16
mov
cmp
clc
orl
imul
xchg
aam
rorl
lret
jmp
cmp
sbb
lds
enter
dec
pop
je
arpl
pop
sbb
mov
rcrb
cmp
outsb
fwait
mov
call
mov
mov
cwtl
and
xlat
imul
out
test
enter
xchg
and
ret
cld
imul
in
pop
mov
cmc
mull
iret
mov
loop
push
mov
jns
dec
out
sbb
loopne
cwtl
clc
call
cwtl
sub
jg
add
lcall
in
ror
sbb
lea
and
add
or
aad
pop
clc
pop
mov
mov
or
cmc
fadds
xor
adc
or
push
in
arpl
mov
aad
notb
pop
les
fs
adc
sbb
lds
sbb
cmpb
and
int3
lods
test
mov
sub
out
mov
and
nop
mov
inc
popa
push
sbb
xor
aaa
jle
cmp
sahf
in
xlat
mov
jecxz
clc
fstpt
loopne
add
mov
xchg
movsb
mov
cmp
fcoml
xchg
addl
inc
leave
iret
int3
mov
out
mov
mov
inc
push
test
push
aam
rcll
jno
sbb
test
clc
or
icebp
jge
shlb
jle
sbb
ljmp
inc
sub
mov
mov
les
in
cli
jge
cli
mov
mov
adc
mov
stos
jbe
add
add
inc
addr16
pop
jl
pop
xchg
sub
pop
sbb
and
push
inc
xchg
inc
in
in
ss
xchg
mov
adc
xchg
je
push
addr16
mov
loopne
mov
outsb
cmpsb
adc
xchg
sbb
popa
pop
mov
dec
sbb
dec
cmp
aaa
lahf
adc
inc
clc
or
mov
sub
cmp
dec
xchg
pop
es
push
adc
adc
inc
inc
xchg
cs
movsl
or
call
dec
lock
mov
or
push
enter
int3
adc
rcrb
inc
sub
dec
inc
lea
sbb
add
pushf
pop
out
lret
xchg
test
push
adcl
and
cmp
cld
add
fbld
add
add
xchg
ja
ret
lret
dec
add
in
in
repnz
int
es
push
dec
movsl
push
dec
jns
fcoml
xchg
cmp
out
stos
jl
mull
cmp
pop
inc
ror
dec
enter
adc
aaa
ds
and
je
pop
das
push
sti
sub
and
arpl
pop
dec
mov
push
jp
jecxz
in
scas
lret
push
xchg
cmp
insb
dec
xchg
mov
pop
sti
fidivs
mov
push
js
adc
adc
push
repz
js
es
pop
rol
jp
push
mov
jnp
ds
mov
or
xchg
fistps
cmp
shll
call
cmp
test
mov
inc
push
in
imul
xor
jnp
ds
sub
add
in
scas
adc
inc
jg
lods
mov
out
or
cmp
add
mov
pop
popf
or
cmpsb
inc
or
and
loope
scas
jmp
cltd
inc
fs
dec
xchg
inc
add
addr16
movsl
popf
add
shlb
nop
stc
cmp
mov
jmp
push
sbb
pusha
push
inc
xor
push
dec
test
sub
mov
ret
jle
shll
xchg
ss
adc
shrb
pop
mov
gs
int3
and
bound
mov
ds
cmp
mov
aas
jecxz
xchg
pop
add
or
push
test
shll
ss
push
or
fnstsw
dec
or
ja
cld
leave
sbb
mov
xchg
fucom
mov
push
sti
jne
inc
xlat
mov
cmp
mov
adc
cmp
andb
fstpl
scas
int
fwait
xor
jne
cmp
lea
xchg
notl
adcb
rolb
fyl2x
and
arpl
mov
or
fmuls
jno
inc
mov
xor
push
out
adc
xchg
imul
xlat
subl
decb
adc
xchg
jecxz
jns
decb
sahf
repnz
cmpsb
scas
test
das
movsl
jnp
or
fcoms
push
mov
push
sbb
cmp
dec
sub
and
or
push
enter
out
lahf
popa
lret
out
add
lret
lahf
jl
test
push
jmp
jns
mov
push
lcall
jl
mov
mov
sbb
jle
es
rcll
stc
les
daa
push
inc
push
cmp
sbb
xchg
push
jge
js
stos
cmp
jne
aam
dec
mov
ret
fnstenv
push
adc
lcall
daa
xor
mov
cmp
pop
pop
pusha
fwait
cmp
cmpsl
aas
dec
cmpsb
inc
or
or
movsb
nop
add
or
cmp
adc
mov
xor
sahf
loopne
aas
icebp
push
lea
pusha
mov
xor
shlb
es
add
in
insl
roll
push
fcmovnu
jge
cmp
and
push
push
inc
andb
bound
daa
loop
sbb
pand
leave
clc
pop
jno
push
sub
sbb
loopne
cs
ljmp
test
add
enter
pop
into
dec
lds
out
jno
pusha
rcrb
inc
js
in
lret
movlps
push
cld
iret
mov
ja
lret
inc
pop
cmp
js
clc
mov
xchg
aaa
mov
or
test
sbb
pop
inc
jmp
cmp
dec
jle
sbb
fldenv
ret
int3
pop
cmpsl
mov
lods
fisttpl
jle
ljmp
mov
push
sbb
je
hlt
out
and
sbbl
add
sbb
dec
mov
mov
addr16
mov
sbb
dec
icebp
iret
jmp
xchg
adc
jnp
repnz
push
add
xor
pop
pop
xchg
adc
int
or
and
nop
add
shrb
sbb
sbb
fs
mov
out
add
mov
cli
imul
fs
scas
sarb
jo
addr16
push
pushf
jb
dec
fwait
loopne
or
and
pop
adc
testl
dec
or
mov
ja
jbe
and
sub
mov
and
lods
mov
xchg
cmp
addr16
pop
es
mov
sub
fs
ret
cmp
push
adcl
push
adc
adc
cmp
aas
mov
dec
cmp
rorl
xchg
das
cwtl
iret
cmpsl
mov
xor
scas
cwtl
test
repz
sbb
sbb
push
aam
and
pop
push
pop
pushf
data16
xchg
aaa
add
loope
dec
jae
push
xchg
jle
mov
cmpsb
movsb
mov
dec
push
push
inc
stos
mov
sar
xchg
mov
or
push
aaa
repz
je
push
pop
lds
cs
push
jecxz
rclb
mov
or
ss
ljmp
mov
movsl
jmp
mov
aam
sub
fnstsw
mov
int
test
jl
xchg
jno
xchg
xchg
clc
and
jns
push
fisubrs
cld
mov
push
cs
sbb
das
aaa
test
cmp
jns
dec
in
push
jecxz,pn
and
dec
sbb
gs
sub
xchg
imul
mov
test
xchg
dec
cltd
jmp
cmpsb
and
pusha
rclb
jg
data16
push
or
or
les
insl
shrb
add
mov
cmp
pop
int
loopne
mov
repz
movsl
mov
ret
lds
push
dec
icebp
push
in
jb
int
mov
stos
std
mov
and
lods
pop
push
repz
lret
add
adc
pop
sti
jg
add
jbe
mov
pushl
jnp
inc
mov
icebp
das
sub
jnp
sti
mov
arpl
jb
jo
movb
cmp
mov
nop
sbb
pusha
cs
add
test
int3
lcall
sub
arpl
repz
cmp
jle
cmp
mov
xchg
loop
xchg
rolb
cmp
mov
sub
js
in
and
lret
sbb
pop
in
lahf
xor
mov
aad
shlb
jecxz
xor
int
jl
and
sbb
jmp
lods
push
cmpsb
add
dec
or
xchg
adc
and
adc
adc
test
out
xchg
mov
ret
add
lret
shl
clc
mov
and
stc
mov
jnp
sub
add
adc
popa
test
pop
jp
lods
add
imul
popa
in
arpl
jmp
test
pop
xor
popa
push
xor
lret
xor
inc
xor
xorb
or
mov
dec
scas
in
mov
out
mov
xchg
jb
popf
fsts
mov
sbb
sarl
and
mov
xor
adc
adc
repnz
clc
sub
insb
jle
aas
xor
popa
vmovaps
sbb
dec
mov
inc
into
xchg
push
pushf
mov
xor
leave
push
insb
inc
dec
and
sbb
lahf
jnp
add
push
jg
cmp
pop
call
out
sub
or
ret
cmpsb
adc
add
loopne
sub
or
or
fsub
aas
cli
push
xor
scas
aad
fbstp
adc
and
cmp
lea
push
xor
fdivrl
add
cmp
pop
or
mov
orl
out
mov
mov
sub
sahf
mov
into
mov
push
push
and
push
negl
ss
arpl
xchg
mov
mov
cltd
das
sub
mov
cltd
or
je
inc
popa
stos
cmp
dec
lret
cwtl
sahf
testl
jae
adcl
outsb
mov
repnz
mov
pop
pop
out
mov
add
scas
stos
mov
cmpb
mov
aas
add
cmp
sub
subb
adc
push
push
add
shl
dec
cmp
dec
cmp
icebp
mov
and
enter
push
mov
cwtl
arpl
adc
dec
mov
jb
adc
sub
mov
stos
pusha
in
cmc
sub
inc
xchg
shrl
scas
sbb
in
js
mov
jo
ljmpw
mov
adc
cmp
les
imul
fcomp
push
ror
rclb
xchg
dec
fadds
xor
fwait
push
imul
test
xchg
fnsave
jns
xor
sbb
sub
dec
lds
jl
test
pop
inc
sub
mov
mov
jno
cld
sub
sti
xchg
pushf
xchg
inc
push
movsb
jns
repnz
loope
cmp
jnp
inc
fs
mov
pop
inc
enter
adc
into
fimull
xlat
pop
mov
repnz
and
or
mov
push
adc
mov
sbb
movl
pop
and
cmpl
push
and
fbstp
mov
roll
mov
jnp
cmp
xor
or
cs
xchg
leave
mov
or
sbb
int
sbb
cmc
dec
lea
repz
call
pushf
out
mov
jb
dec
push
xor
and
scas
jbe
xor
inc
push
cmpsl
mov
les
mov
cltd
mov
test
push
loope
add
push
sub
faddl
jbe
dec
repz
sub
fs
jecxz
xchg
loop
pushf
xchg
mov
nop
ljmp
mov
pop
jle
test
sub
pop
sub
shl
sti
jne
sbb
sbb
xchg
je
loop
lods
incl
data16
lods
shll
add
sbb
mov
fidivs
xor
fildl
insl
cmp
inc
stos
insl
xchg
testb
mov
enter
cltd
jnp
xchg
xchg
es
outsb
and
mov
xor
xchg
or
ja
stos
mov
out
pcmpgtd
je
lcall
fucompp
xor
dec
adc
mov
pop
fdiv
mov
sarl
dec
dec
push
aam
mov
movsb
dec
aad
push
dec
hlt
cs
sbb
insb
enter
pop
in
cltd
ss
roll
mov
fistl
cld
iret
jne
pop
mov
out
fsub
cmc
xchg
mov
push
sub
and
mov
dec
into
out
pop
lods
sbb
jl
stc
icebp
sbbb
repz
xor
imul
pop
imul
outsl
testl
arpl
mov
stos
lds
icebp
cmp
inc
xor
mov
jmp
push
mov
cmp
adc
enter
push
lret
test
inc
out
enter
mov
mov
inc
rcrl
add
dec
pop
xor
loop
xchg
push
adc
lds
or
inc
test
sahf
and
xchg
outsb
mov
sub
popf
or
fstl
dec
add
sti
dec
jnp
gs
fisubrs
ret
push
mov
sub
cmp
pop
test
adc
mov
cmpsb
inc
cltd
add
sub
sbbl
aad
ja
pop
pushf
pushf
push
adc
sbb
mov
mov
fildll
push
insl
insb
cmp
xchg
adc
lods
aaa
xor
shrl
call
insb
popa
rolb
pushf
xchg
mov
pop
fildl
aad
xchg
std
mov
sti
faddp
imul
sbb
imul
das
lods
clc
icebp
and
out
in
or
movsl
add
cmp
adc
mov
jecxz
jb
mov
lret
sti
clc
in
or
lret
pop
aaa
and
ret
daa
test
xchg
out
loope
jo
faddl
lock
hlt
ret
adc
pop
ret
scas
int3
push
or
mov
dec
decb
repz
xchg
push
sti
xor
ljmp
pop
pop
ret
movsb
nop
xor
sahf
mov
xor
dec
or
push
sub
int3
in
cmpsl
int3
dec
mov
and
int
xchg
jno
in
pop
or
xor
ficompl
sbb
dec
lods
fwait
popa
push
imul
mov
jecxz
repz
movsb
enter
jo
rcr
xor
icebp
out
arpl
int
mov
jmp
ss
aaa
sub
inc
imul
pop
jno
and
fnstsw
cli
xchg
call
iret
xlat
lock
lea
mov
mov
pushf
cmc
cmp
jbe
bound
sub
mov
pop
push
sarl
xchg
and
xor
dec
out
shlb
outsl
sbb
aad
fnstsw
mov
in
scas
loop
ljmp
subb
arpl
frstor
repnz
jmp
inc
cmp
jb
push
addr16
imul
mov
add
scas
out
inc
dec
std
cwtl
xor
call
cmp
pop
jg
sub
fstps
pop
and
inc
mov
lods
sbb
insb
jge
adc
js
int
push
out
jle
lds
pushf
in
movsl
xor
popa
inc
mov
js
test
pop
cs
jno
popf
mov
add
or
mov
jnp
jge
dec
xchg
push
rcll
into
xchg
jno
imul
xchg
es
add
ljmp
jae
add
cmpsb
stos
jb
jns
daa
iret
jnp
mov
push
cmp
xor
cmp
xchg
into
push
pop
or
add
mov
xchg
jnp
in
iret
mov
std
lock
mov
leave
sub
xchg
je
mov
in
out
jb
dec
addl
call
cmp
sbb
fwait
xchg
push
fcomps
pop
fisttps
imul
sahf
or
fs
pop
xchg
addr16
sysret
jge
push
leave
sub
adcb
mov
lods
cmpsl
push
push
and
add
inc
hlt
push
lahf
xor
jo
pop
xorl
ficoms
mov
xchg
cld
cmpsl
js
inc
outsb
aam
dec
cwtl
outsb
ret
xlat
sub
sbb
jo
fwait
xchg
aam
test
cmc
jl
jg
out
mov
out
dec
movsb
and
in
ljmp
lahf
gs
xchg
xchg
xor
mov
insl
pop
pop
cmp
cs
pop
test
xlat
das
mov
mov
out
xchg
mov
movsb
sbb
pop
repz
cs
scas
jmp
dec
pop
inc
imul
std
jl
int
mov
ret
cmp
jb
hlt
and
aam
xchg
dec
sbb
add
pop
insl
xlat
lcall
xchg
jo
test
lods
lcall
std
hlt
xchg
push
sbbb
pop
jnp
pop
ret
mov
ret
movsb
mov
mov
cs
push
add
jle
enter
negl
dec
negl
dec
repz
psubq
or
pop
xor
ds
lret
or
jp
std
cld
xchg
scas
bound
mov
repz
ret
out
xchg
push
xchg
and
in
cmp
dec
das
and
xchg
sub
fwait
mov
popa
pop
inc
pop
aas
xor
lret
das
mov
inc
sbb
dec
push
daa
xchg
ja
lods
test
mov
ret
gs
push
push
cs
mov
ss
mov
xor
testl
xlat
xchg
jb
stos
aas
aas
aas
imul
ja
sbb
cmp
aam
inc
ret
enter
cmpsl
stos
mov
icebp
add
shrb
mov
in
fsub
fwait
mov
sarb
inc
xchg
js
adc
pxor
jmp
or
test
fisubrl
shll
jno
jno
pop
int
stos
nop
stos
and
pop
mov
cli
jnp
outsl
in
jo
loope
jmp
pop
aam
in
insl
pop
jnp
aam
cmpsb
inc
add
int
movsl
addr16
push
push
popf
cwtl
or
push
mov
sub
push
ret
scas
mov
add
or
aad
sbb
sub
sub
push
repnz
lcall
fstl
add
mov
mov
mov
inc
dec
adc
outsl
xor
mov
mov
xchg
pop
sbb
push
mov
adc
leave
stos
push
push
dec
gs
aad
xchg
fstl
add
int
loope
mov
je
mov
test
data16
cmp
je
jp
push
cmp
sahf
dec
fldl
mov
jns
add
mov
into
ret
outsl
sarl
cli
xlat
inc
cwtl
adc
cmpsl
addr16
sbb
sbb
aad
stos
xor
or
or
nop
sub
mov
popa
sbb
fwait
jbe
and
repz
mov
lods
lock
sbb
xchg
lds
add
roll
out
out
push
mov
lcall
push
xchg
jge
mov
add
or
ror
test
dec
enter
push
int
push
fsubrl
ficoml
popa
inc
cmp
repnz
pop
cmpsb
jne
sti
ficoml
or
addr16
push
dec
loope
inc
lret
inc
mov
ds
orl
push
cld
nop
inc
pop
leave
xchg
mov
femms
shrb
out
pusha
fucomp
dec
test
ficoml
roll
xchg
sbb
bound
adc
arpl
notb
scas
add
cmp
outsl
inc
popa
sarb
andb
dec
es
mov
mov
inc
adc
sbb
cmpl
and
fnsave
jmp
pop
xchg
inc
and
sub
fdivs
mov
and
jg
adc
add
jg
jmp
cmp
sbb
mov
inc
xor
mov
sub
dec
fsts
enter
outsl
cwtl
jecxz
and
ret
jg
je
sub
cmpsb
mov
or
int3
jne
inc
push
insb
lcall
call
inc
lret
mov
inc
scas
mov
xor
mov
mov
insl
scas
push
sub
loope
ja
icebp
out
or
inc
sub
and
mov
je
cs
push
arpl
push
imul
adc
sub
fcom
xchg
lahf
repnz
cmp
stos
sbb
jnp
bound
mov
int
xchg
das
lea
jl
xchg
xor
fbld
push
cltd
and
push
jbe
xchg
or
data16
and
jmp
add
push
cmp
js
out
adc
mov
test
pop
mov
or
mov
gs
pop
lods
cmp
inc
adc
dec
pusha
jg
mov
xchg
scas
pop
jo
sti
jae
adc
jae
call
mov
imul
pop
mov
jge
cli
mov
in
int3
jo
clc
lods
sbb
ja
and
sub
pop
xchg
cmp
je
push
aaa
and
and
sub
test
imul
cmp
loope
roll
or
aaa
stos
pop
mov
xchg
aaa
test
pop
inc
int
cmpsl
in
fdivrl
fldt
js
jbe
aas
cwtl
pop
xor
ret
and
jecxz
xchg
loope
push
jl
mov
fildl
sub
adc
xchg
cltd
dec
xchg
mov
es
mov
xchg
ljmp
sbb
mov
stc
movsl
fiaddl
or
pop
fneni(8087
and
adc
sbb
mov
movsb
adc
stos
mov
call
mov
jb
popf
fiaddl
xor
gs
sbb
push
popa
fstl
in
pop
lahf
add
gs
push
lfs
shrl
stos
xlat
adc
inc
adc
scas
out
mov
lahf
stc
xchg
or
add
pop
aas
adc
jg
nop
std
cmc
jl
fcmovne
fldl
mov
adc
fcmove
add
dec
sub
cs
data16
cmp
sub
pusha
fisubrs
sbb
loope
cmc
pop
outsl
mov
cmp
or
mov
or
sbb
pop
pop
cmp
lret
cmp
subl
ret
insb
mov
sbb
mov
leave
mov
ljmp
pusha
inc
popf
imul
inc
inc
xlat
inc
adc
sbb
jl
and
xchg
cltd
not
aas
xor
mov
daa
fnstsw
das
jae
mov
aaa
cmpsb
popa
and
push
loope
in
test
insl
or
and
sbb
pop
mov
sbb
push
mov
les
mov
pop
mov
xchg
jbe
aaa
and
add
cwtl
add
mov
jle
sub
jmp
test
rcrl
jno
jge
mov
test
shl
sti
mov
pushf
dec
rclb
in
jge
repz
sti
cmp
add
push
fbstp
aas
push
mov
frstor
insb
sub
movsb
or
js
leave
js
and
mov
xchg
mov
jo
pop
mov
inc
addr16
mov
out
daa
fs
push
rcrl
hlt
sbb
inc
rolb
cld
jle
popf
fimuls
orb
arpl
xor
mov
add
xor
mov
insb
dec
pop
xchg
sub
adc
dec
scas
insl
das
out
repnz
mov
inc
mov
cmpsl
mov
mov
ror
pop
jbe
pop
and
sbb
outsb
push
dec
movsl
pop
and
sbbl
shll
mull
into
out
ficoms
inc
in
or
mov
das
cmpsb
dec
pop
adc
sbb
pusha
push
and
adc
mov
out
icebp
sti
popf
arpl
mov
sbb
stos
mov
jecxz
insb
inc
imul
fwait
js
mov
jbe
subb
nop
sub
leave
sti
xor
repz
mov
xchg
test
ja
fucom
adc
pop
in
jne
add
pushf
scas
sub
add
mov
andl
int
sub
in
aas
pop
ret
movsl
lock
fstl
rcrl
mov
lcall
jae
sahf
and
adc
fs
in
enter
nop
mov
inc
or
lock
pop
cmp
jmp
xchg
xor
adc
inc
dec
fdivrp
pop
fimuls
bound
cmpsb
repz
mov
pusha
iret
rcrb
out
adc
xchg
imul
mov
lret
sar
xchg
mov
sbb
inc
sub
cmpsl
lods
push
jle
or
out
iret
aam
dec
sbb
push
jg
sti
xor
lds
inc
cmc
mov
inc
test
lret
jmp
hlt
ret
aam
lods
mov
mov
sbbl
dec
push
imul
lahf
shlb
ds
mov
jp
push
mov
fs
sub
and
pop
call
das
outsl
jno
and
inc
loope
xlat
filds
test
sti
pop
xchg
ja
mov
popf
insb
mov
ja
xchg
ret
mov
sub
fbld
mov
ljmp
cli
add
jnp
add
aad
sbb
cld
enter
loop
out
fsubrp
push
test
pusha
push
out
mov
mov
std
dec
xlat
pop
ja
clc
inc
inc
jle
xchg
adc
cmpb
push
mov
add
xchg
inc
fsubrl
push
rolb
movsl
or
in
mov
iret
pop
test
and
ror
fdivl
imul
cmp
sub
jb
pop
xchg
sub
jae
push
std
mov
jecxz
testb
pop
mov
lret
loope
shrl
and
loop
mov
arpl
loop
jbe
je
sti
fisttpl
jge
pop
jb
mov
adc
cmp
mov
cltd
adc
push
insl
push
cmp
cmp
sbb
mov
and
xor
xchg
pop
xchg
int3
ds
mov
pop
ja
imul
add
cmp
aam
jle
mov
sbb
cmp
out
cmp
stc
std
mov
orl
mov
jo
mov
stc
pop
mov
je
xchg
push
cmp
xchg
out
mov
adc
out
xchg
dec
nop
cmc
sub
les
push
ret
andl
pop
arpl
js
out
jle
js
dec
cmpsl
stc
adc
jmp
int
cwtl
mov
clc
out
add
shll
popf
dec
jno
mov
inc
and
test
mov
rorl
notb
lahf
arpl
test
imul
fldt
add
mov
mov
or
rcll
outsb
cltd
into
sub
std
pushf
xchg
dec
inc
in
pusha
mov
int3
fnsave
mov
mov
lcall
xor
push
mov
pop
xor
filds
call
push
pmaxsw
shll
cmpsl
bnd
cmc
rorb
dec
sahf
adc
sub
addl
psubusb
stc
lcall
inc
jl
std
xchg
sbb
push
dec
shl
cmp
inc
movsl
mov
lahf
lret
sti
lods
sbb
mov
bound
xlat
cs
mov
fnsave
inc
rcrb
fdivs
pop
pushf
adc
push
leave
mov
rcrl
lods
pop
mov
stos
les
sbb
cmp
dec
fcoms
movsb
xchg
test
sub
dec
add
fbstp
data16
mov
insl
dec
pushf
nop
sbb
cmp
cmpsl
xor
adc
add
loope
mov
in
add
lret
push
ret
cld
mov
xor
in
adc
push
or
in
rolb
insb
add
xchg
cld
leave
add
add
adc
pop
aas
outsb
push
and
sahf
cltd
and
cmp
out
mov
adc
xor
mov
test
popa
mov
cmp
and
jnp
ja
movsb
add
push
sub
pop
adc
pusha
loopne
outsl
outsl
in
fnsave
in
add
loope
mov
loop
xor
lahf
cmpb
cmp
sahf
leave
pop
dec
loop
inc
out
pop
gs
mov
cmpsl
fadds
and
jle
sbb
out
out
pop
xor
or
movsl
add
int3
leave
sub
push
shll
dec
andb
jle
pop
dec
adc
jl
mov
jg
mov
add
mov
cli
mov
jp
popa
pop
outsl
scas
mov
jno
int3
mov
gs
mov
loope
cmc
add
xor
dec
inc
int
push
pop
int3
inc
hlt
mov
cmp
push
cld
in
es
js
and
movsl
stc
bound
sub
mov
sub
xchg
and
insl
int3
mov
mov
lods
fldcw
test
adc
push
push
imul
sub
daa
add
dec
jbe,pn
pop
in
icebp
sbb
scas
or
fs
mov
jne
fcomps
or
ret
inc
add
sbb
outsb
mov
pop
push
cmp
in
loop
into
add
lcall
insl
add
insl
mov
push
jnp
pop
cmp
subb
dec
call
dec
stc
sahf
out
jb
pop
in
and
mov
bound
cmp
cmp
adc
cmpsl
pavgw
lcall
xor
adc
sub
sub
cmp
cmc
test
fidivrs
mov
xcrypt-ofb
cmpsl
fldt
cs
icebp
flds
pop
aas
stos
test
fistpl
lcall
lcall
pop
dec
fwait
icebp
jecxz
cmp
inc
fldcw
adc
es
mov
popa
call
mov
int3
iret
jne
movsb
add
call
iret
cmpsb
pop
push
mov
adc
sub
ja
add
pop
rcl
mov
xlat
add
cmp
pop
dec
sub
pop
imul
dec
mov
jge
add
xchg
fidivl
inc
mov
popa
and
in
cltd
cmp
mov
xchg
loopne
popf
dec
test
inc
sub
add
jg
std
sbb
iret
int
js
xchg
add
add
imul
das
push
leave
hlt
arpl
ja
cmp
sbb
arpl
jg
sbbl
sub
lods
xchg
fstpt
clc
idiv
jle
mov
adc
xchg
loop
cld
lds
push
mov
mov
sti
pop
adcb
xor
sahf
mov
je
sahf
push
cmp
imul
mov
pop
xchg
xlat
out
fucom
jne
cmp
xchg
arpl
outsb
out
flds
mov
mov
xor
scas
int
das
and
sbb
shll
cmpsb
in
mov
imul
lods
jmp
addr16
jnp
ljmp
sahf
xlat
xchg
dec
xchg
pusha
sub
nop
pop
stos
rcrl
pushf
mov
mov
in
sub
xchg
sbb
mov
movsb
inc
das
adc
dec
cmpsb
and
jo
nop
xchg
mov
sub
add
pop
jno
sub
sti
push
fwait
ljmp
sub
shlb
rcr
cmpsb
pop
xchg
pop
xchg
xchg
lahf
mov
incb
mov
inc
sbb
xor
movsb
sarb
mov
cmp
into
iret
call
and
cwtl
and
cwtl
sbb
jg
test
xchg
xchg
mov
aas
shll
or
insb
dec
push
sahf
ljmp
add
rcrb
xor
xor
adc
push
pop
ds
xchg
sub
mov
mov
mov
negb
cmc
ret
shll
xchg
dec
jae
cmpb
push
jae
rolb
or
leave
mov
orb
jne
test
jge
cld
movsl
repz
cmp
js
test
fdivs
test
or
sbb
dec
sbb
lods
incl
loopne
loope
fstps
mov
pusha
add
mov
jbe
mov
add
loop
pop
sub
fdivrl
push
mov
xchg
and
mov
gs
pop
jno
cmpsl
or
ret
mov
fldl
loope
fs
dec
sbb
push
add
add
in
jp
loope
xchg
std
jo
bound
jle
mov
push
outsl
xchg
cmpsl
add
cmpsb
cmp
orb
xor
out
dec
and
and
shlb
sbb
xor
mov
xchg
or
pushf
insb
in
mov
pushf
sub
xchg
fdivrs
testb
sbb
add
in
mov
sub
test
lea
cmp
jne
mov
jge
mov
dec
jae
jns
fwait
out
insl
push
sub
fstps
lret
mov
adcl
cmpsb
mov
sub
push
jmp
or
mov
push
add
xchg
cs
sbb
adc
cmc
lahf
arpl
and
push
sbb
shl
inc
loope
mov
add
or
xor
add
test
dec
movsl
out
mov
popa
sbb
mov
mov
notb
nop
inc
jo
test
sub
cltd
les
adc
push
ja
clc
aad
cmp
inc
push
sbb
push
pop
or
xchg
in
jg
pop
outsb
pop
cmp
lea
jl
shl
call
xor
jnp
xchg
or
jae
jnp
icebp
mov
gs
inc
jno
mov
sub
push
mov
adc
sbb
push
outsb
add
pop
lods
mov
inc
or
pop
inc
add
fstpt
sbb
and
jbe
sti
sti
dec
test
aad
rcrl
dec
roll
jne
pop
test
fsubr
stos
adc
bound
movsl
push
orb
out
ret
mov
mov
pop
mov
mov
pushf
sbb
ljmp
cltd
push
adc
faddl
add
dec
xor
mov
cmpsb
movsb
mov
std
lea
jns
int
in
ret
arpl
mov
inc
inc
pop
fdivl
mov
lret
inc
add
mov
loop
xchg
in
xchg
jns
push
jge
stos
in
dec
orb
jecxz
sbb
cmp
ss
into
or
mov
inc
lods
push
jne
push
fbstp
mov
mov
mov
jnp
imull
mov
xor
lods
xor
es
repz
loope
ss
pop
enter
pusha
test
pop
or
add
inc
sub
pop
dec
sbb
sbb
xor
jnp
andb
push
cmp
push
push
test
and
xchg
ss
aas
push
outsl
adcb
je
je
or
lret
mov
xor
xor
inc
sbb
xor
cmp
push
xchg
sbb
divl
lcall
adc
pop
daa
out
adc
mov
test
imul
dec
fwait
sahf
cmpsl
mov
lock
lea
out
pop
lods
out
pushf
test
testb
push
xor
mov
add
addl
and
fisttps
clc
icebp
nopl
and
pop
sub
inc
xabort
inc
cmp
shlb
sub
insb
pop
mov
int3
imul
xchg
xor
dec
fistps
pop
adc
mov
push
leave
add
jnp
push
pop
pop
jnp
scas
xor
insl
dec
psllq
bound
push
mov
add
arpl
sub
cmp
push
inc
scas
push
mov
pop
pop
sub
jecxz
xor
loop
inc
daa
bound
arpl
repz
mov
cmp
hlt
rcll
je
insb
data16
les
or
outsb
sahf
push
cld
jne
add
mov
vpcmpgtd
and
cmp
dec
mov
stos
jno
out
jne
mov
mov
mov
repz
dec
cmc
adc
xor
jp
and
dec
push
lock
inc
mov
fidivs
cwtl
ficoms
rorb
outsl
adcb
notl
lret
sbb
sbb
push
dec
dec
mov
pop
daa
ret
mov
pop
lahf
or
cmp
pop
xlat
cli
jge
mov
inc
jmp
sub
inc
hlt
mov
sahf
mov
sbb
dec
adc
fadd
cmpl
push
adc
ljmp
es
or
out
or
xor
fildl
mov
sub
jb
cmc
push
jl
lds
mov
pusha
pop
roll
adc
sti
idivb
xor
pop
xchg
scas
cmp
inc
push
push
movsb
outsl
adc
inc
pop
xchg
outsl
fldcw
les
std
push
sahf
and
mov
cld
shrl
push
ja
jg
or
add
cmp
add
insl
jnp
ds
paddsb
mov
in
and
xchg
aad
mov
push
sti
insl
cltd
ret
mov
dec
adc
lock
dec
rol
ds
pop
test
xor
sub
push
out
add
adc
addr16
xor
stos
stc
mov
cmpsl
int
dec
xor
inc
dec
xor
mov
mov
push
jg
mov
stc
lock
jg
pop
adc
mov
outsb
fcoms
hlt
dec
cwtl
push
cs
add
data16
jno
dec
push
out
cmc
and
push
lds
xchg
xchg
jnp
mov
cld
fisubrs
sbb
sti
mov
dec
jne
mov
outsl
movsb
cmc
sbb
mov
xchg
test
inc
imul
movsl
cltd
or
xchg
dec
push
pusha
or
ret
cwtl
out
test
aad
pushf
dec
ss
lahf
push
or
arpl
add
cmp
and
mov
sti
test
inc
shll
jnp
cwtl
ljmp
testb
pop
std
mov
inc
test
cltd
mov
dec
pop
imul
inc
lock
pop
call
adc
inc
leave
inc
bound
jne
aam
dec
or
push
xor
ret
rcrl
cwtl
repnz
and
jnp
push
inc
jmp
bnd
inc
pop
dec
xchg
jo
adc
push
push
xchg
cltd
movsb
dec
dec
jb
jle
aaa
inc
push
jp
mov
sbbl
inc
and
jg
mov
inc
stc
prefetch
das
fnstcw
inc
gs
je
inc
sbb
and
inc
pop
fistpl
fbstp
fcomps
and
adc
jge
ret
xlat
push
test
mov
popa
add
aaa
test
sbb
push
test
iret
cmp
rcl
movsl
xchg
pop
or
jno
mov
sub
clc
dec
pop
lcall
sarl
pop
in
movl
adc
or
dec
xor
pop
aad
repz
inc
std
mov
gs
addr16
addr16
xchg
or
or
mov
js
or
shlb
int3
call
ret
loope
add
inc
fistps
pop
add
in
push
mov
int
dec
cwtl
fldcw
lods
jmp
dec
or
xbegin
xor
fnsave
into
mov
sbb
push
pop
and
leave
nop
jns
shrl
repz
mov
imul
int
cwtl
stos
mov
sub
dec
nop
cs
imul
pop
lcall
push
xor
cltd
dec
test
sbb
imul
imul
jo
int3
mov
int
bound
add
inc
ds
fstps
pop
loope
cmpsb
and
es
mov
mov
fisttps
adc
imul
rcrl
add
inc
jecxz
je
jge
iret
add
push
jne
sbb
mov
xchg
nop
daa
fdivs
cmp
mov
push
dec
sti
iret
dec
xor
cli
adc
ret
aaa
or
ljmp
push
adc
data16
mov
or
pushf
xor
sahf
scas
xchg
in
cmp
frstor
cmp
loope
inc
add
inc
test
xchg
pushw
std
xor
outsb
insb
inc
lahf
pop
out
xchg
push
vmread
inc
adc
mov
pop
cmp
cmpsb
or
mov
pop
mov
rcl
int
sub
add
push
addb
addr16
adc
jbe
mov
dec
and
rcrb
stc
jns
dec
jno
jns
fs
and
cmp
xor
xor
imul
mov
mov
xor
cli
dec
pop
mov
mov
mov
dec
ds
out
gs
jo
pop
jg
dec
mov
or
das
mov
mov
stos
mov
push
push
push
cmp
cmpsl
enter
fsts
inc
sarb
mov
xchg
jle
movsl
adc
shrl
icebp
loope
imul
or
cmp
popl
iret
mov
xchg
clc
scas
test
inc
mov
push
cmc
pop
mov
popa
rcrl
fst
mov
outsw
push
in
xor
rolb
add
push
incb
jae
pop
xor
inc
sbbb
test
fdivr
lds
and
pop
pop
mov
mov
inc
cli
shr
pop
mov
sub
imul
sub
dec
es
cmpsl
in
mov
mov
or
iret
and
mov
ja
out
push
mov
jne
in
sub
sbb
inc
xchg
jb
fidivrl
mov
inc
sti
xor
daa
adc
popa
mov
mov
add
sbb
fnstsw
and
inc
hlt
xor
inc
jl
das
scas
xchg
loop
xlat
inc
std
push
mov
cmp
jge
mov
nop
mov
pop
insb
clc
jge
test
call
push
add
stc
in
aad
add
pusha
jge
scas
bound
pushf
inc
xor
cmc
cmc
js
out
out
mov
outsb
enter
test
mov
iret
sti
mov
xchg
fnstenv
inc
push
inc
mov
out
arpl
push
iret
adc
sahf
add
mov
mov
in
and
mov
jb
pop
fwait
cmp
push
jno
and
adc
icebp
fdivl
out
adc
jg
push
dec
sbb
mov
cmp
jmp
fiadds
das
cmp
mov
fcmovne
enter
in
pop
xlat
xor
mov
lahf
scas
es
xor
lcall
sub
xor
mov
mov
lret
jecxz
call
cmpl
sub
adc
mov
out
mov
jnp
or
arpl
add
xchg
add
mov
ljmp
dec
repnz
push
daa
xor
nop
call
insb
ficoms
or
and
xor
pop
lcall
jmp
loop
cmp
in
sub
in
enter
test
int3
jle
in
add
mov
movsl
bound
sbb
pop
sti
cltd
or
out
mov
arpl
and
push
xchg
cmp
push
fstl
mov
int3
in
jg
sets
inc
cwtl
idivb
les
jbe
mov
sarb
sbb
rcrb
sbb
jmp
out
stos
push
cmp
mov
js,pn
cmp
movsb
ds
xor
xchg
sahf
das
in
inc
xor
push
push
rorl
or
sbb
inc
lock
mov
adc
cmpsl
test
dec
fs
in
aaa
les
lods
test
ret
aas
or
loop
addps
push
je
jno
cltd
add
and
out
cmpsb
jnp
and
sahf
mov
call
xor
ss
mov
ss
dec
pop
je
mulb
xor
ds
jne
stc
in
cmp
pop
sub
mov
es
push
enter
xchg
xlat
or
rorl
jecxz
inc
mov
popa
cltd
leave
xchg
mov
dec
cmpsl
repz
xor
adc
scas
push
ds
jns
inc
testl
cmp
aaa
call
dec
iret
cmp
adc
mov
mov
mov
jle
out
dec
jmp
and
insb
daa
xchg
dec
repnz
lods
xor
jmp
cld
imul
push
inc
mov
sub
pop
lods
lea
adc
out
push
dec
mov
ret
sub
sub
and
in
addr16
mov
arpl
inc
jns
clc
and
rorl
pop
mov
hlt
mov
addb
sbb
lods
js
gs
das
imull
mov
rcr
or
pop
cld
push
int
shrb
mov
into
inc
push
test
sbb
das
fistpll
push
xor
addb
mov
out
cmp
dec
inc
xchg
rolb
sti
push
cmp
xor
xchg
in
cmp
push
push
jl
rorb
jge
pop
mov
or
xchg
hlt
scas
adc
and
clc
cltd
addr16
mov
push
adc
xor
fldt
das
popa
mov
and
stos
cmp
roll
roll
dec
iret
in
sbb
leave
in
xor
inc
fiadds
xchg
adc
dec
adc
and
mov
xor
push
ret
fisttpll
js
insl
jge
sarb
push
lret
jne
pop
cmc
mov
aam
push
push
inc
or
popf
jmp
jmp
xor
or
sti
mov
mov
mulb
test
mov
and
and
jnp
mov
or
repnz
out
push
jae
scas
loopne
cltd
and
sbb
popl
sbb
inc
xor
push
xchg
pop
xchg
adc
or
inc
cmp
push
jne
addl
mov
sbb
xlat
rol
in
loop
mov
xchg
pop
stc
xchg
xchg
loop
mov
mov
adc
sbb
push
pop
mov
xchg
pop
add
pop
scas
out
fs
xchg
sti
mov
mov
pushf
ja
fiaddl
int3
or
and
push
adc
shrb
enter
pop
loopne
es
add
stos
mov
movsl
mov
dec
jb
aaa
jbe
add
add
push
mull
repz
pop
cli
push
loopne
bound
jb
and
pop
mov
mov
jle
in
mov
or
jne
inc
adc
mov
and
xor
icebp
and
decl
add
ret
gs
daa
mov
pop
jne
fmul
mov
out
ficompl
mov
xchg
sbb
repz
call
mov
lret
incb
cli
xor
sarb
dec
loop
sub
dec
jl
fbstp
icebp
rorb
push
push
mov
inc
roll
out
push
adc
cmp
mov
mov
sub
pusha
mov
xor
push
push
pop
jno
jbe
push
cmc
lcall
test
jno
in
sub
cmc
mov
loopne
cmp
fsubrs
imul
adc
jae
outsb
fiadds
cmc
into
cmp
xchg
in
or
jg
pop
cmp
xor
lea
mov
lret
jmp
push
loopne
in
rorb
pop
fcmovb
and
loop
popf
iret
inc
aad
jecxz
jge
and
hlt
stos
imul
inc
roll
mov
cmpsb
insb
xchg
in
xor
push
and
xor
les
cmp
sub
adc
cmp
add
sub
dec
jp
mov
in
movsl
in
sbb
pop
lea
mov
xlat
mov
jbe
out
lea
mov
mov
pop
add
pop
test
mov
inc
mov
sbb
jnp
and
scas
rcrb
jae
mov
rcrb
icebp
jb
stos
sub
fcom
outsl
aad
cmp
push
inc
sbb
push
push
popf
mov
push
das
mov
fiaddl
or
xorl
fcmove
test
repnz
sub
add
les
xor
add
push
movsb
mov
call
popl
push
jmp
cmp
bound
mov
push
lret
movsb
icebp
sub
cmpsl
xorb
mov
je
outsb
dec
xchg
mov
adc
push
adcb
scas
cmpsl
fcmove
cmp
sarl
xor
call
in
enter
push
add
sub
mov
or
push
popa
xchg
pop
movsl
pop
dec
out
inc
cmc
mov
xor
add
fisubs
sub
pop
push
add
dec
icebp
sbb
cmp
jno
adc
test
hlt
cwtl
lds
jl
inc
pop
movsl
das
das
xor
push
ja
fdiv
dec
and
push
mov
cmpsl
lods
hlt
test
push
fdiv
std
jo
mov
push
mov
test
mov
cmpb
cli
cld
inc
loope
js
ss
pop
jno
jge
cwtl
push
lret
mov
fistpl
shr
and
push
sbb
pop
add
lahf
xorl
and
mov
cmpsl
pushf
mov
ret
jno
mov
sub
andb
sbb
clc
mov
lods
lods
jge
adc
cli
sub
imul
fwait
icebp
imul
fmull
jecxz
and
pop
out
adc
pop
cltd
subl
subl
pop
xor
or
xor
xchg
or
iret
fisubrs
xor
sbb
outsl
jg
jne
pop
lods
pop
xchg
je
xchg
mov
cltd
or
mov
xchg
cmpsl
pop
inc
jae
gs
pusha
dec
xor
into
push
pop
xor
pop
cmp
cmp
bound
icebp
clc
pop
dec
out
ror
sbbl
sarb
xor
shr
jbe
repnz
jp
rcr
popf
or
shll
out
adc
fcomps
int
pop
xor
inc
sub
and
push
call
imul
std
fdivrs
fcoml
adc
sub
and
iret
daa
aam
mov
cmp
jae
lea
outsb
pop
jns
mov
and
ja
xchg
dec
lret
sub
cmp
repz
in
mov
xor
push
sub
add
lods
call
jno
push
insl
mov
jge
and
call
outsb
das
aad
imul
loop
addr16
mov
sub
imul
outsl
xor
mov
shlb
cltd
pop
je
xor
jb
addl
pop
jle
call
dec
sub
jno
and
xchg
fdivl
sub
stc
dec
mov
sbb
loopne
iret
mov
mov
xor
mov
sbb
mov
and
xchg
enter
sub
dec
out
lods
fisubrl
add
jmp
imul
in
push
pop
cli
mov
sub
scas
out
lcall
pop
rclb
xor
repz
mov
repz
fnstsw
jmp
sbb
sbb
imull
pop
hlt
mov
push
getsec
lcall
fmulp
mov
fildl
stc
mov
daa
loop
rcll
gs
cmc
test
ss
imul
mov
pop
jp
mov
cld
mov
iret
flds
or
xor
push
test
jb
loope
std
xchg
lock
ja
insb
push
jg
fadds
cmp
push
xchg
sbb
stos
aas
clc
push
stos
mov
fiadds
dec
cmp
add
sub
cwtl
stos
mov
xor
sbb
push
xchg
adc
and
mov
inc
fldenv
pushf
ret
xchg
nop
xchg
sub
dec
mov
and
clc
sub
loope
into
ljmp
inc
sub
aas
push
cwtl
add
ret
scas
out
push
mov
ret
gs
mov
inc
cmpsb
xor
out
xchg
gs
cli
dec
nop
movsl
daa
cmpsb
cmp
repnz
aam
cltd
push
fimull
pusha
insl
xchg
nop
mov
push
mov
pop
jl
jg
and
sbb
fldt
adc
mov
inc
push
mov
cld
and
push
nop
push
jns
pop
and
sbb
test
cmp
xchg
push
mov
xchg
ret
in
jp
jl
jle
icebp
mov
scas
xor
iret
jp
iret
mov
hlt
pop
mov
push
lods
cld
vpmacssdd
cmp
mov
sub
daa
les
push
push
fwait
das
mov
sbb
cmp
jp
mov
add
push
lcall
cli
andl
mov
notb
in
mov
pop
and
sti
je
dec
cmpsl
sub
les
jmp
or
or
sbb
fs
jnp
mov
bound
stc
xchg
mov
arpl
fs
in
mov
push
rorb
in
outsb
inc
mov
pop
insb
sahf
int3
rorl
fs
pop
mov
out
pop
jle
ret
xchg
cmp
stos
out
mov
insb
jns
fists
xchg
pop
xchg
jns
cmpsl
pop
push
dec
mov
mov
test
mov
add
jae
adc
jno
sub
ret
iret
jle
lcall
sbb
jae
leave
loop
add
insb
xor
inc
hlt
leave
jbe
lds
mov
mov
jmp
cmp
push
dec
pop
addr16
je
or
lea
lea
or
push
sahf
stos
bound
mov
or
es
and
cltd
ret
mov
pop
mov
or
lods
call
int
pop
pusha
negb
jne
jae
ret
fadd
cltd
jno
cmp
sti
pop
or
xchg
xor
cld
mov
sub
ret
pop
insb
outsb
mov
jmp
xor
mov
fwait
jb
adc
inc
pop
cld
xlat
loope
jbe
add
dec
gs
rcrl
popa
sub
push
insl
hlt
mov
pop
and
dec
mov
and
pop
fimull
mov
or
or
das
sub
ficomps
subl
cmc
lds
stos
imulb
fs
cmpsl
and
add
add
xlat
mov
push
jmp
xchg
out
stos
in
dec
add
lret
out
xor
xor
daa
jae
sbb
in
cmpsl
sbb
push
cmp
test
fwait
inc
jg
sarb
jnp
xchg
sub
aam
inc
cmovg
push
out
fstl
negb
mov
add
clc
push
bound
sbb
out
fcmovnb
jns
pop
iret
jp
in
lock
jnp
mov
inc
inc
dec
aam
xor
sbb
add
xor
ucomiss
ret
jmp
jmp
cltd
cli
jb
imul
in
js
add
rclb
lds
push
pop
xchg
add
pop
inc
sti
shlb
mov
sub
aad
test
int
movsl
and
cmp
cmpsl
push
data16
push
daa
mov
sub
mov
pop
xchg
out
aad
or
rclb
mov
pop
add
add
dec
rolb
testb
and
mov
inc
cmp
movsl
mov
push
xchg
cmp
xchg
sti
sub
cmp
add
xchg
stos
sbb
xchg
or
lcall
or
arpl
cmp
or
rcll
or
and
mov
outsl
cltd
mov
or
cmc
fimull
dec
mov
inc
icebp
push
mov
mov
ficompl
bound
add
testl
pop
push
cmp
imul
std
sti
mov
imul
push
push
sub
xchg
mov
stos
xchg
fucom
mov
leave
dec
lcall
sbb
mov
jnp
aaa
push
push
and
insl
jecxz
xacquire
mov
or
stc
rcrb
jp
xchg
enter
mov
insb
jp
bound
sbb
mov
jmp
pop
aaa
and
fsubrl
jle
mov
mov
into
xor
or
hlt
adc
pop
and
push
xor
inc
cwtl
cmc
je
sbb
dec
jmp
subl
inc
std
mov
xchg
xchg
cmpsb
mov
mov
dec
stos
paddd
jecxz
pop
and
inc
mov
and
mov
outsl
test
mov
xchg
dec
inc
ret
jno
mov
lods
adc
aad
push
lds
scas
mov
cmp
sbb
push
mov
mov
mov
aaa
cwtl
pop
lahf
jl
nop
in
loopne
cmp
add
xchg
and
add
dec
fadd
in
jmp
add
enter
inc
mov
xlat
adc
cmp
xor
add
sub
js
cmp
push
int
or
push
scas
lcall
pop
loopne
mov
aam
xor
inc
sbb
icebp
in
xor
inc
push
inc
add
clc
int
cwtl
jmp
mov
je
cmpsb
divb
inc
in
movsb
imul
mov
dec
js
push
int3
sbb
mov
aad
mov
jle
call
mov
xchg
mov
jle
faddp
or
jge
jo
dec
movsb
std
push
xchg
mov
adc
lods
mov
out
xchg
imul
int
mov
mov
insb
cmp
pop
pop
testl
testb
cmpsl
mov
shrl
mov
out
xchg
rorl
aaa
jp
clc
iret
lahf
add
repnz
xorl
xchg
mov
ret
push
pop
dec
sub
cmc
jmp
aaa
out
das
lret
enter
push
xor
js
andb
mov
cmpsb
outsb
mov
mov
gs
lea
pusha
loop
mov
jae
lea
fwait
lods
xor
adcb
lock
inc
dec
repz
sbb
jae
push
pop
jp
enter
cmpl
or
test
xchg
gs
sbb
imul
iret
andl
push
inc
push
ficompl
dec
jg
cld
dec
lock
push
xor
sbb
in
stos
mov
adc
ret
mov
cmpsl
push
in
out
dec
mov
sub
push
xor
xchg
lahf
das
ja
and
cmp
aas
nop
xchg
cmc
jecxz
mov
cli
in
or
mov
jp
roll
cmp
or
in
cld
pop
cwtl
fcomps
insl
add
stos
inc
sub
movsl
movsl
movsl
cld
mov
or
push
imul
sub
and
xchg
mov
je
mov
add
adc
in
dec
sti
cmp
ss
push
stos
cmp
mov
std
popf
pop
adc
inc
fdivr
gs
push
pop
xor
mov
subl
mov
pop
mov
aaa
out
adc
dec
iret
mov
mov
sbb
lods
cmpsb
scas
or
or
jmp
icebp
aas
push
add
test
mov
or
test
in
das
or
mov
mov
jns
inc
push
or
ret
pop
insl
dec
jge
ud1
jnp
lods
xchg
fnstsw
nop
scas
int3
mov
and
dec
fildl
xchg
push
inc
xorb
and
pop
mov
dec
lret
pop
arpl
pop
rolb
jns
leave
aas
mov
mov
push
outsl
push
cmp
jmp
ret
xchg
fsts
jmp
jns
test
shll
push
sbb
fcoml
push
xchg
leave
or
mov
lahf
inc
andl
cmp
pop
mov
xor
and
mov
add
xchg
cmp
fldt
lcall
int3
ss
out
mov
jbe
insb
sub
or
ret
cmp
push
mov
mov
ficompl
popa
fdivl
add
fsubl
xchg
dec
in
ret
jo
in
loop
nop
xorb
xchg
sbb
jp
fwait
mov
sbb
outsb
test
addr16
adc
rol
mov
or
test
into
fistps
shrb
or
aas
lea
cmpsl
mov
andl
hlt
cli
jb
rorb
mov
mov
into
cmpb
repz
into
lock
imul
cmp
sbb
push
ljmp
mov
push
sub
mov
jg
jnp
pmaxsw
jno
push
cwtl
jns
fsubrs
rclb
in
dec
es
inc
fcmovnu
jg
jle
push
mov
dec
fdiv
call
mov
xchg
mov
fidivrl
sbb
xor
test
pusha
std
dec
jmp
test
int3
dec
daa
push
jne
cld
sbb
pop
or
loop
xchg
cmp
arpl
shrl
xor
xchg
pop
push
fidivrs
sbb
divl
in
jge
aam
js
and
lahf
incl
aam
mov
cltd
dec
sbb
jne
xorl
scas
imul
jo
sub
lods
push
cmp
ja
repz
push
scas
inc
mov
shl
insl
sbb
int
dec
push
fucomip
dec
mov
pusha
hlt
lods
lahf
shll
jmp
xor
xor
and
xchg
imul
ss
neg
aas
scas
lahf
addr16
push
cmp
push
pushf
imul
mov
dec
pop
push
lods
cmpsl
fsubs
insl
das
push
inc
push
push
fiadds
xchg
cltd
movl
mov
push
test
dec
into
out
or
mov
pop
daa
push
xchg
mov
push
inc
mov
xchg
push
in
pop
jg
aaa
fstpl
repnz
imul
notl
ret
gs
lret
bound
sbb
sub
lea
mov
add
fwait
call
insl
push
call
jno
mov
push
subps
in
rcr
push
sbb
test
cld
jo
xor
cmp
and
xor
and
out
inc
lret
mov
aaa
es
aad
mulb
push
jle
xchg
es
mov
jb
pushf
shrb
sbb
enter
mov
movsb
stos
xor
mov
out
enter
and
push
fdivl
enter
mov
add
jl,pt
sbb
xor
pop
aas
mov
cmp
xor
fmull
and
mov
insb
cmp
test
mov
adc
cmp
insb
mov
cmp
mov
scas
ds
cltd
push
add
jae
lahf
loop
sarb
nop
xor
shlb
adc
ljmp
fbld
mov
rcll
sub
in
das
ja
sub
in
sub
aad
or
inc
aaa
pop
push
adc
jmp
int
ljmp
lds
fidivrs
shrb
lods
mov
fisubrs
sub
ljmp
enter
dec
rclb
push
and
inc
sub
dec
push
and
pop
and
jmp
lret
add
inc
test
ja
stos
cwtl
dec
das
fdivrl
jecxz
adc
out
or
dec
loop
xor
outsl
aaa
add
fistps
das
cltd
inc
in
fadd
mov
icebp
sarl
test
pop
jmp
leave
sub
insb
mov
xchg
iret
inc
clc
inc
fnstenv
push
mov
popa
cs
cmp
mov
sarb
cwtl
jb
dec
in
out
sahf
in
cmp
sub
xor
cmpsb
mov
jne
or
je
lods
xlat
stos
xchg
pop
mov
xor
std
sbb
scas
pop
mov
push
pop
and
jle
stos
mov
mov
cs
mov
jo
mov
push
add
dec
dec
mov
cmp
sub
pop
or
imul
pop
xor
pop
movsl
sub
xchg
imul
clc
jecxz
xchg
rcrb
in
shl
loope
push
cwtl
sti
mov
or
mov
lock
xchg
out
xchg
fwait
out
adc
xchg
xor
aas
mov
push
sub
fcmovnb
inc
and
xchg
xchg
inc
xchg
mov
bound
sbb
sub
push
filds
jge
stos
sub
or
mov
leave
add
orb
mov
push
imul
dec
push
sbb
dec
or
sbb
ja
pop
jmp
inc
test
fwait
or
xor
fdiv
stc
sbb
dec
ds
add
jne
cmpsl
jp
aam
cmp
pop
mov
subl
dec
cmpsl
fs
dec
jp
inc
lcall
aaa
loop
add
jo
mov
loopne
iret
cmc
fstp
push
mov
das
fcmovnbe
es
xor
sti
js,pn
mov
jecxz
inc
ds
les
xor
inc
fimuls
pop
or
or
mov
cmp
ds
or
sub
insb
xchg
xchg
xor
js
mov
jle
repnz
cld
std
xchg
pop
imul
cmpsb
sbb
mov
and
pop
adc
fldt
xchg
in
iret
aad
adc
aad
test
ss
in
xor
sbb
ds
popf
testb
push
arpl
mov
in
xchg
cmp
aaa
aas
cmpsb
xor
aam
out
fwait
daa
mov
inc
in
mov
lcall
mov
sbb
nop
xchg
int
or
cmp
jae
push
jo
fadds
dec
and
lock
lods
lea
sub
lcall
outsb
mov
nop
xor
ret
pop
testb
sti
stc
sub
jl
mov
cmp
stos
ja
mov
insl
sub
mov
rcrl
fsub
std
aad
and
push
xchg
test
ret
lahf
xchg
cld
outsb
lret
cli
xlat
lea
dec
rclb
mov
mov
lret
das
rclb
fimull
pop
into
xchg
jno
iret
or
push
sbb
xchg
mov
or
cmc
inc
cmp
out
test
and
cmc
je
enter
jae
push
int3
loop
loopne
push
stos
sahf
inc
fstl
insl
pop
fdivl
in
cmp
daa
cmp
xchg
jle
xor
inc
push
adc
out
xchg
inc
out
jl
or
adc
fwait
pop
out
repnz
ja,pt
stos
lods
mov
loopne
aas
adc
or
stos
cmp
loope
xchg
add
rcl
and
xchg
cmp
std
push
fistl
jne
or
adcb
pop
sub
test
cmpsl
imul
xchg
lods
lods
imul
add
out
push
add
jo
fwait
not
pop
pop
xor
shll
repz
scas
jnp
push
push
sbb
pop
xchg
and
fwait
jecxz
cwtl
cmp
fisttps
jp
and
sar
xchg
pop
mov
or
jecxz
loope
mov
push
mov
push
pop
xchg
outsb
mov
mov
jb
add
stos
lahf
jo,pn
jb
data16
addr16
xchg
hlt
mov
jne
iret
test
jne
fidivrs
sub
xor
mov
sub
loopne
add
sbb
sub
push
and
lods
movsl
das
jnp
movsb
je
mov
sub
jl
pushf
enter
sub
mov
aaa
dec
aad
adc
jo
inc
out
sbb
pop
sub
or
lcall
dec
cmp
negl
push
lock
inc
xchg
shlb
mov
dec
in
arpl
inc
and
gs
in
rclb
lret
mov
movsb
cli
or
xchg
fistpll
dec
lret
into
lea
pop
pop
pop
inc
push
adc
adc
lret
push
das
sub
xchg
bound
sub
out
mov
out
out
mov
mov
fwait
xor
adc
cvttps2pi
and
sbb
popf
in
shlb
jae
out
sbb
push
mov
xchg
and
add
pop
xor
mov
mov
jno
adc
in
jns
mov
cmc
push
push
adc
xchg
and
add
dec
pop
add
aad
cmp
lods
outsb
mov
int
loope
js
bound
movl
repz
rep
cwtl
shl
gs
or
loopew
push
xchg
mov
inc
push
xchg
icebp
mov
inc
mov
les
pop
lods
inc
ds
lcall
sti
cmp
in
xor
rclb
mov
adc
cmpsl
daa
dec
jp
or
sub
add
push
xchg
jo
sbb
adc
sbb
mov
mov
mov
sbb
test
pop
pop
mov
icebp
mov
adc
xchg
nop
filds
or
push
clc
shlb
ljmp
or
lret
inc
inc
cld
push
adc
jae
pop
es
push
aad
jmp
jb
add
pop
mov
pop
sub
xchg
inc
ss
xor
sarl
jbe
cs
and
inc
fcomps
inc
dec
ds
das
out
in
mov
dec
xchg
inc
arpl
dec
test
test
xor
jg
cmp
clc
or
scas
pop
sbb
aad
and
ficoms
lods
dec
insb
enter
cmp
insb
movq
pop
imul
pop
or
xor
jbe
push
dec
bound
push
stos
jb
pusha
ja
insb
sbb
lea
and
jmp
cli
cmp
test
scas
jg
xchg
dec
xchg
nop
xchg
xor
out
mov
rcll
jl
mov
xor
out
cmp
mull
cli
push
jmp
sbb
mov
sarb
dec
popf
mov
inc
imul
adcb
mov
sbb
xchg
add
movsb
fsubrl
mov
scas
pop
and
push
add
stc
test
xor
dec
push
sbbb
stc
lods
push
mov
cld
cmp
pop
and
test
pop
ds
push
outsb
adc
outsl
xor
andb
in
cld
movsl
repnz
cmpsl
dec
movsb
lret
sub
mov
pusha
arpl
addr16
jno
mov
and
jp
mov
iret
fistpl
mov
jb
sar
cmp
adc
xor
daa
sub
arpl
clc
cmp
xor
jecxz
dec
fiaddl
and
sbb
cmp
push
sub
jno
js
je
fcmovne
mov
jbe
adc
rorl
fs
jo
loop
and
sub
addb
loope
push
jl
jp
addr16
cmove
insl
push
fsub
jnp
fwait
cmp
push
fldt
cmpl
jmp
shrb
pop
xor
outsb
repz
idivb
adc
mov
jns
mov
xchg
xchg
mov
int3
or
push
popf
jg
jb
and
insl
or
js
jle
movsb
xor
out
sbb
ret
pop
sti
pop
sti
cld
xchg
test
data16
int3
xchg
test
subb
sbb
sbb
xor
insb
iret
lcall
sub
sub
orl
mov
mov
or
out
cmp
add
inc
dec
or
pop
das
xchg
pop
loopne
mov
jns
pop
xor
sti
and
and
std
sbb
ds
xlat
cmp
rorl
mov
inc
out
imul
xchg
push
jo
dec
lds
and
popf
cmp
pop
into
out
lock
je
shrb
pop
stos
scas
mov
jg
mov
pop
imul
mov
mov
add
outsb
mov
movsl
jl
xchg
pop
fildll
sbb
jmp
loope
adc
dec
mov
icebp
icebp
mov
add
repnz
mov
mov
or
les
das
pop
in
xor
mov
mov
sbb
imul
mov
jno
je
add
gs
add
out
lcall
outsb
scas
aad
cmp
jmp
loope
sbb
lret
out
mov
push
adc
push
pop
cmp
adc
jne
pushf
and
int
adc
sti
adc
js
push
pusha
es
xlat
inc
cmp
sahf
stos
addb
sbb
or
andb
mov
aaa
pop
leave
inc
xchg
sub
push
xorl
mov
ficoms
xor
push
mov
dec
push
stos
cmp
sub
inc
mov
and
push
bound
inc
xchg
scas
in
mov
es
and
imul
mov
enter
fnstcw
cmp
mov
pop
pop
sub
lahf
dec
pusha
mov
push
popa
xchg
mov
rolb
ret
adc
cmpsl
cmp
jmp
cli
push
mov
or
cmp
lret
xor
out
lock
xchg
mov
dec
movsl
jecxz
and
push
pop
imul
jns
add
sub
inc
xchg
lods
jg
in
mov
dec
adc
and
cmc
push
inc
mov
into
addr16
mov
push
aaa
ljmp
test
cmpsl
cmp
mov
shll
sub
nop
out
sbb
ret
mov
cld
fisttpll
icebp
aas
pop
add
jb
andl
dec
xchg
pop
loop
pop
popf
xchg
dec
stos
sub
in
in
mov
scas
fwait
pop
pop
mov
or
and
out
dec
mov
add
and
jp
cmp
jg
inc
testl
clc
loope
and
xchg
rcl
jle
xchg
aaa
sub
xchg
cmpsl
repz
insb
fisttpl
xchg
sbb
jg
repnz
pop
push
jmp
mov
and
leave
pop
cmp
jns
or
sbb
cmp
pop
jns
mov
stc
or
cli
aaa
mov
out
xor
dec
cmp
xor
or
push
or
in
and
loope
fdivrs
mov
sbb
pop
sbb
ret
fwait
mov
xor
fistpl
mov
lret
cmp
rorb
loope
and
dec
mov
in
popf
mov
es
bound
popf
adc
mov
pop
aam
adc
int
lods
inc
mov
sub
aad
in
fadd
in
inc
in
jecxz
and
lock
out
cltd
dec
mov
leave
mov
int3
roll
pop
jmp
and
adc
es
pushf
fisubs
fldcw
xor
xor
fists
repz
lods
mov
test
push
mov
aas
orb
sbb
lds
push
test
push
sub
xchg
enter
hlt
lahf
cli
stos
enter
sbb
jp
test
and
inc
add
inc
pushf
jg
jl
mov
add
mov
hlt
inc
push
pop
xchg
add
pushf
loopne
xor
mov
xchg
mov
mov
push
pop
inc
pushf
add
xor
xchg
inc
dec
fdivrl
test
insl
cli
jnp
fdivl
or
xchg
xor
pop
getsec
or
lret
sarb
add
jno
sbb
jne
dec
push
int
and
xchg
das
mov
adc
std
mov
dec
jae
jge
mov
popa
sub
into
and
fadd
push
jo
cwtl
lea
mov
sub
ret
mov
cmc
mov
ret
adc
fldt
outsb
or
add
add
inc
cmp
mov
push
pusha
sub
xor
popf
cltd
inc
jl
jne
add
loop
or
in
sub
rolb
rcll
stc
xlat
mov
jnp
shlb
mov
insb
push
jo
xchg
cli
dec
xchg
pop
lcall
mov
mov
fisttpll
pop
xor
jne
shll
in
daa
ja
sub
ficomps
push
xor
dec
adc
xchg
mov
lret
insb
or
fcomi
in
into
mov
xchg
lcall
dec
mov
mov
push
mov
xchg
das
fimuls
sbb
xor
adc
in
bound
or
xchg
mov
lret
fwait
aad
negb
pop
and
mov
or
cmp
push
jge
add
mov
mov
in
mov
stos
imul
push
xchg
out
lcall
repnz
shr
pop
pop
scas
and
ljmp
out
in
add
jae
inc
insl
xlat
call
gs
dec
test
inc
lods
stc
inc
jl
or
sub
mov
lea
xor
cmp
sub
stos
push
movsl
ja
or
loop
inc
outsl
xor
inc
lock
add
ds
push
rcll
inc
jg
fwait
test
cmp
std
cltd
hlt
inc
lcall
scas
ljmp
fisttpll
push
pop
sub
pusha
insl
sbb
mov
movsl
jnp
shll
cmp
cmp
xchg
cmp
cmp
lret
repnz
pop
aaa
push
aad
outsl
push
lret
outsl
addr16
push
daa
int
das
inc
inc
shlb
sub
sbb
push
icebp
mov
sub
dec
mov
inc
ret
inc
or
sbb
push
inc
inc
sub
and
pop
fwait
push
mov
inc
xchg
lods
bound
addb
dec
cmpsl
push
push
test
xor
mov
ret
push
adc
andnps
dec
stos
popf
jne
sarl
push
mov
sahf
add
sti
add
push
test
cmp
fadds
out
mov
lret
shlb
inc
stos
sbbb
lock
sub
pushf
add
shll
popf
bound
jbe
sub
jbe
outsl
xchg
xorb
jae
aam
rcl
inc
popa
lds
push
out
inc
imul
bound
lea
ficoms
xor
insl
aas
adc
pop
mov
cmp
or
xchg
mov
call
mov
push
or
int3
nop
mov
jo
push
jmp
mov
inc
dec
xor
sarl
jp
movsl
push
cmp
cwtl
jecxz
and
incl
out
jns
jmp
cs
or
fimull
mov
jp
push
andb
cmpsl
xchg
xchg
stos
pop
fistpl
mov
mov
and
add
ss
lods
ret
pushf
jb
mov
movsl
repz
mov
pop
cwtl
push
sbb
inc
dec
jmp
mov
push
or
jmp
aas
mov
scas
dec
mov
mov
adc
subl
fsubrs
mov
cmp
cmp
fstpt
xchg
inc
cld
aaa
xor
inc
sub
fsub
clc
cmp
call
lods
hlt
or
jge
add
inc
fsubs
incb
loopne
inc
loope
in
outsb
dec
cmpsb
fcomp
std
inc
jl
jg
fs
outsb
icebp
aaa
jl
je
sbbb
dec
lds
mov
je
xchg
xor
jmp
cmpsb
xlat
arpl
pop
jg
into
pop
insl
out
nop
push
movsl
xor
cli
add
repnz
mov
adc
push
pop
or
sub
pop
xchg
ljmp
lods
lahf
mov
sbb
aad
cmp
mov
xchg
mov
addr16
adc
inc
enter
out
in
sub
sbb
mov
in
fisubrl
mov
sub
call
push
xchg
stos
and
cld
data16
cmp
popa
aam
sbb
es
int3
push
mov
mov
mov
cld
mov
xor
and
adc
jecxz
dec
hlt
sarl
outsl
repnz
ds
jge
mov
neg
call
dec
pop
shll
cmp
or
in
les
xchg
mov
cmp
xlat
ror
mov
hlt
sbbl
jns
xor
stc
dec
or
rcl
sahf
push
lds
loop
push
push
push
jle
jae
inc
sub
jns
or
nop
pushf
cmpsl
xchg
jnp
inc
gs
outsw
out
cmp
imul
icebp
cltd
or
in
add
pop
ljmp
daa
cmc
xchg
mov
adc
sarb
fyl2x
inc
mov
popl
or
ljmp
shll
ds
in
femms
lret
sbb
push
or
mov
mov
dec
out
and
push
loop
mov
ds
cld
fistps
push
push
push
cmp
xchg
and
pop
inc
ja
adc
mov
outsb
arpl
mov
subb
es
cmp
addl
nop
daa
or
or
aas
int3
inc
jbe
mov
jmp
pop
lods
movsb
inc
outsb
gs
add
addr16
and
cmpsl
xlat
lds
cs
cs
adc
xchg
test
dec
or
add
enter
mov
test
pop
or
out
or
or
dec
cmp
cmp
jmp
push
or
cmp
xlat
bound
cmc
popa
dec
setno
mov
fimull
lahf
jle
out
fistpll
lret
push
leave
mov
cmp
out
rclb
pop
cli
pop
mov
push
repnz
loop
push
insl
xchg
in
pop
ljmp
mov
inc
mov
imul
xchg
add
shrb
inc
repz
stos
subb
leave
dec
out
xchg
jno
mov
cmc
insl
ret
hlt
jle
andb
pop
inc
pop
mov
lock
inc
xlat
pop
ljmp
dec
dec
lcall
xchg
out
pop
mov
xchg
rcl
das
stc
cs
ja
loop
les
mov
std
adcl
fidivs
insb
mov
bound
mov
mov
movsb
jmp
popa
push
das
fldt
movsb
in
xchg
pop
inc
jbe
pop
mov
dec
rorb
pop
enter
imul
cld
dec
mov
xchg
mov
data16
test
loopne
or
add
sbb
mov
or
pusha
pop
jns
sbb
sub
inc
pop
mov
adc
dec
mov
jg
mov
push
and
add
adc
hlt
jge
pop
mov
jmp
cmp
push
and
stos
orl
xchg
xor
pushf
int
push
fwait
pop
js
pushf
ljmp
int3
pop
add
mov
mov
out
sub
xchg
sbb
fiadds
mov
add
jb
pop
push
cmp
xor
frstor
int
pop
mov
lock
test
inc
xor
in
mov
add
sbb
mov
loope
xchg
in
jg
imul
push
loopne
jae
fwait
icebp
icebp
jmp
push
push
jg
jl
je
fsts
cmp
or
lods
fldenv
rcrb
lret
int
push
in
mov
and
push
xor
out
jb
inc
call
pushw
sub
out
test
xlat
xchg
xor
cmp
shlb
add
pop
pop
or
cli
adc
leave
inc
lods
xchg
aaa
leave
les
clc
shll
loop
outsb
inc
lret
cmp
sub
out
test
lods
xor
imul
rclb
loopne
pop
sbbb
je
mov
xor
adc
sti
and
sub
cli
pop
xor
out
pop
sahf
nop
icebp
jne
mov
shrl
xchg
sbbb
ds
pop
inc
xchg
pop
push
mov
cmpsl
scas
ret
mov
ljmp
mov
std
fadds
sbbl
add
jp
mov
dec
push
mov
clc
movsl
in
adcb
mov
stos
pop
sbb
movsl
or
jmp
or
mov
push
add
repnz
sub
sub
sbbl
insl
xorl
mov
cmpsb
aad
outsl
fs
ret
adc
and
push
xchg
pop
pop
jmp
cmp
loope
add
sbb
fwait
sub
sub
sub
or
mov
xchg
es
ds
dec
mov
mov
les
lds
or
xchg
jl
inc
inc
push
pusha
scas
jnp
adc
push
jae
cmpsl
loopne
or
xchg
and
pop
add
imul
lods
mov
pop
mov
lret
pusha
outsb
pop
das
popf
xchg
pop
std
jnp
test
pop
pop
xor
stc
cmp
scas
iret
fwait
call
popf
aaa
adcb
lods
loopne
cmpb
adc
xor
xchg
mov
stc
lods
or
outsb
pop
orl
into
ja
mov
and
ret
out
and
xor
ds
out
mov
stc
rclb
fidivl
cmp
sub
es
test
xlat
jne
pop
dec
out
inc
cmp
ljmp
inc
addr16
xor
es
xchg
xchg
push
xchg
lods
clc
clc
lock
mov
in
cmpsw
mov
xor
cld
lret
dec
ret
mov
icebp
decb
mov
dec
icebp
and
push
pop
mov
xor
adc
mov
pusha
inc
xor
ret
mov
mov
jo
sbb
cs
sub
or
mov
dec
sbb
js
out
into
lcall
inc
mov
cmp
jg
mov
test
xor
cmpsb
ds
xchg
xchg
enter
fldl
dec
addl
sub
bound
int
jmp
lea
fnstcw
hlt
dec
sub
aad
into
and
and
je
push
xchg
xorl
jno
and
cld
imul
shr
push
pusha
test
push
pop
sub
push
jp
adc
cmp
jle
adc
push
push
adc
lret
jg
mov
test
sbb
std
call
push
xor
adc
mov
mov
mov
mov
jbe
inc
pop
es
sahf
dec
push
fs
out
xchg
repz
add
push
repz
cmpsl
mov
out
inc
add
adc
xor
jae
and
pop
sub
loope
aad
ffree
idivl
xchg
scas
mov
mov
xorb
lahf
es
mov
in
rorb
inc
mov
xor
ret
push
aam
adcb
mov
repz
jg
imul
pop
xchg
mov
movsb
jge
push
mov
or
xchg
sbb
scas
lods
js
mov
test
loop
call
xchg
mov
dec
sub
sahf
adc
loope
jecxz
adc
dec
lahf
mov
shlb
icebp
lods
test
xor
dec
out
stos
and
jb
and
push
enter
stc
dec
pop
js
push
jmp
ss
and
mul
in
push
psllw
cmpsb
fsubl
das
mov
aas
sarl
bound
jmp
ficoml
push
push
push
pop
fwait
dec
push
neg
pop
jge
sti
push
mulb
mov
int3
sbb
mov
jecxz
or
inc
dec
movsb
xchg
rol
loop
icebp
out
jg
into
adc
and
push
ss
rcll
push
adc
imull
mov
movsw
andl
repz
mov
mov
mov
add
test
nop
xchg
add
inc
in
adc
pop
loopne
insb
and
xchg
call
jmp
es
bound
and
popa
movsl
data16
mov
cmp
xor
dec
mov
lods
stos
stc
loopne
pushf
dec
adc
jp
movups
jns
sub
insb
mov
sub
xchg
iret
push
test
xchg
je
and
pop
imul
jle
cmp
cmp
sub
push
xlat
push
mov
jle
add
cmpsl
icebp
out
shr
dec
mov
pop
test
lea
insl
jge
dec
stos
test
cs
mov
cli
add
testl
pop
ficomps
mov
sub
mov
fwait
sbb
and
scas
or
loopne
into
dec
shlb
ss
outsl
addr16
push
xchg
mov
mov
arpl
ret
mov
add
xor
sbb
xchg
insl
jno
ficoms
sbb
mov
xor
inc
mov
sarb
cld
adc
jne
push
cmp
xor
cwtl
dec
push
popa
popa
fmul
xor
loop
popa
pop
cmp
jno
int3
add
lret
mov
pop
sbb
mov
call
scas
ja
jg
mov
xor
pop
hlt
fs
push
and
xlat
das
dec
dec
and
adc
dec
and
test
mov
popf
mov
lret
call
dec
dec
jecxz
inc
cmp
xchg
or
imul
or
adc
div
inc
lea
and
lahf
push
les
mov
lods
stc
dec
in
lock
pop
cld
jae
movsb
xor
gs
xchg
sub
out
cld
movsl
ds
out
clc
cmp
adc
sbb
sbb
lods
adc
aaa
push
cmpsl
pop
push
sub
fiadds
push
int3
out
aas
pop
fldl
repnz
popf
popa
pop
pop
xorb
xor
stos
fs
push
mov
xor
and
xor
rorb
lea
push
adc
jbe
cltd
pop
fcomip
add
jecxz
cmc
iret
frstor
imul
sbb
jecxz
icebp
pop
push
fistps
out
cmpsl
shrb
arpl
test
and
mov
inc
jnp
add
test
adc
setl
jp
mov
mov
cld
lret
xor
sub
fiaddl
inc
repz
jo
aam
pop
xchg
data16
lret
mov
mov
inc
mov
test
ret
orl
repz
scas
dec
cmp
cmp
pop
scas
clc
iret
xor
fstpt
push
pop
pop
jne
xchg
addl
adc
mov
movsl
imul
sub
cmpsl
ret
pop
out
rorl
lcall
cld
fidivrs
sub
adc
add
cmpsl
mov
dec
xlat
pop
jg
sub
jle
push
jne
or
sbb
sar
pusha
xchg
inc
outsl
rolb
dec
xchg
call
cmp
jg
sub
fisttpll
dec
mov
add
into
test
shll
popf
leave
movsb
shll
das
add
jmp
into
cli
jecxz
cmc
aam
jb
aam
mov
lds
push
inc
xor
xlat
lcall
aas
sbb
or
and
or
repnz
cli
fcoms
or
fnstsw
loope
repnz
pusha
adc
sbb
aad
inc
iret
mov
test
lcall
cmpsl
cmpl
icebp
xchg
cmp
xchg
dec
push
scas
aad
std
jb
add
pop
add
dec
inc
insb
pop
cmp
nop
dec
sbb
inc
jne
push
cmp
call
mov
faddl
addr16
lret
hlt
push
iret
sti
push
out
lods
xchg
insb
jne
and
movsb
mov
lcall
pop
mov
inc
ja
push
pop
enter
sub
pop
pop
push
aas
int3
insb
outsl
inc
jne
cmp
inc
int
aam
add
push
sub
cmpsl
insl
rcr
inc
fdivl
mov
add
in
fidivs
jnp
jns
call
and
mov
bound
mov
ljmp
inc
push
jno
nop
mov
pop
sub
push
sub
lret
sbb
sbb
aaa
mov
les
sbb
int
inc
test
repz
nop
sub
and
xchg
push
lret
pop
xor
jle
xchg
lds
mov
std
lret
popf
clc
sbb
js
lds
jl
or
pop
adc
xchg
scas
or
fmul
sbb
mov
jp,pn
data16
xchg
pushw
sbb
pop
inc
add
inc
add
rorl
mov
xchg
repz
xor
mov
test
cmp
sub
xlat
shrl
test
or
pusha
sub
shl
out
outsb
mov
jmp
dec
outsb
pop
std
inc
mov
inc
in
jne
mov
jo
int3
xor
sub
pop
mov
rorb
je
mov
hlt
mov
fwait
mov
lret
cld
shl
scas
xchg
movsb
and
pop
sbb
lds
out
sbbb
sub
test
mov
inc
aam
notb
jl
cmc
test
cmpl
jbe
jp
clc
xor
pop
pushf
subb
mov
mov
cltd
test
and
iret
adc
shrb
inc
repz
lea
pop
fldcw
lds
sbb
fistl
xchg
adc
aaa
fs
insl
cmpsl
inc
adc
xchg
incb
shlb
cmp
mov
ret
enter
and
sub
mov
lds
mov
add
or
xchg
sub
xor
in
jmp
cmp
leave
dec
adc
pop
orl
dec
lods
lods
and
push
arpl
stos
mov
loop
xchg
mov
add
inc
mov
cld
frstor
loop
in
das
dec
rolb
xchg
loop
adc
and
loope
fisttpl
jge
dec
arpl
mov
mov
mov
push
pushf
xor
pop
add
es
and
dec
and
aad
aad
mov
iret
cli
notb
lcall
int
in
pusha
xorb
lds
mov
inc
pop
or
cli
xlat
cmp
out
adc
push
dec
push
ds
xchg
or
xlat
adc
shlb
movsl
pop
sti
mov
lds
icebp
pop
push
cmp
dec
or
mov
idivl
lcall
xchg
cmc
into
aas
push
mov
pop
and
inc
aad
sbbl
in
jecxz
in
cmp
loop
xchg
push
push
aad
outsb
xchg
jg
cmpsl
xchg
ss
xchg
das
pop
cmp
shl
cltd
ss
add
shrl
das
xchg
lcall
orl
cmp
mov
jp
cs
jecxz
and
add
mov
sub
out
sub
sbb
ret
cmp
lcall
cmp
push
xor
fildl
sub
pop
test
push
mov
cmp
cmpsb
and
icebp
lods
outsb
cmp
jae
mov
ds
ja
sbb
push
lods
insl
popa
shll
subl
lods
lods
aaa
gs
out
test
cmpsb
jb
gs
mov
cmp
int3
aas
movsl
sub
push
xor
lods
fcomps
lea
adc
inc
lahf
lea
push
fidivrs
into
mov
insl
popa
or
je
cwtl
sahf
add
testl
push
inc
mov
xor
stos
and
xchg
subb
jmp
sar
or
push
xor
icebp
mov
pop
dec
push
ss
repz
cli
adc
fcomps
call
jae
loopne
lret
repz
std
sahf
aaa
scas
add
jnp
pushf
xor
jle
push
in
xchg
jg
or
mov
mov
dec
in
insb
lods
pop
dec
sbb
and
pop
ret
dec
pop
and
arpl
movsl
test
jge
les
sub
xchg
mov
add
adc
adc
popa
clc
add
enterw
mov
pop
push
and
mov
aaa
jo
mov
add
and
xchg
and
and
xchg
xchg
sbb
insl
sbb
add
mov
loop
fucomip
mov
add
rcl
push
testl
popl
xor
movl
ljmp
rorb
or
mov
js
sub
push
mov
repz
aaa
mov
test
out
jne
dec
add
or
xchg
cmp
mov
iret
push
negb
cwtl
movsb
pop
push
cwtl
or
and
aam
jl
sbb
in
fisubl
lret
sbb
mov
add
orb
push
jmp
add
lods
pop
gs
and
jecxz
gs
insb
pushf
pop
fisttpll
push
push
jns
adc
sbb
movsb
lds
fsubrs
jle
imul
dec
xor
fisttpll
cmp
cmpsb
pop
ja
hlt
jecxz
test
xchg
xorl
mov
pusha
fidivs
xchg
cmpsl
push
aam
cmp
rcl
adc
dec
jo
mov
stos
push
fnsave
ja
mov
fsubr
add
add
and
sbb
jb
xor
movsl
push
aaa
cmp
sub
jnp
jge
push
add
xor
addr16
adc
and
movsb
or
xchg
mov
les
push
sbb
jno
mov
lret
sbbb
mov
sub
lock
loopne
adc
repz
cmp
pop
stc
sub
and
aas
jae
cmc
imulb
lods
adc
and
loope
test
lret
loopne
hlt
hlt
dec
jno
add
sub
add
dec
jb
cld
movsl
cwtl
dec
mov
dec
add
mov
inc
sti
jae
test
bnd
adc
pop
roll
mov
xor
icebp
push
jbe
mov
push
mov
jo
jb
mov
lret
je
hlt
push
lcall
cmpsb
aam
popa
inc
xchg
imul
icebp
adc
inc
dec
or
mov
jbe
jb
dec
xchg
xchg
push
xchg
subb
outsl
aas
sub
cmp
xchg
in
lea
outsb
into
scas
push
lock
ret
dec
rorl
push
gs
ss
lret
mov
sti
pop
pushf
pop
lret
cld
rep
inc
adc
repnz
lods
iret
daa
ss
mov
add
popa
and
pusha
fwait
sbb
xor
lcall
or
fidivrs
cmp
jns
and
in
out
int3
and
inc
and
ret
push
cmpsb
inc
lods
pop
iret
cmpl
pop
sbb
add
lret
cmp
aad
jp
inc
cltd
testl
mov
sub
push
ljmp
out
and
cmpsb
add
mov
js
cmp
adc
insl
sbb
mov
push
fcomps
test
lock
call
or
jo
adc
mov
mov
sbb
cmpsb
xchg
xchg
data16
adc
mov
or
pop
iret
xchg
fmull
and
xor
jp
ja
mov
ja
pop
int
mov
pop
ss
jecxz
leave
dec
xchg
outsb
mov
push
jae
sub
lea
idivl
dec
je
insl
in
cmp
sub
jns
pop
fwait
pop
xchg
dec
test
mov
stos
pop
lock
loop
int3
sbb
icebp
inc
pop
mov
fisttpl
add
pop
scas
cmpsl
dec
ret
mov
pop
call
push
mov
ret
shll
cmp
imul
scas
cmpsl
addb
andb
cltd
or
pop
fs
push
leave
test
lret
jge
xchg
or
mov
out
mov
int
push
lret
scas
pop
outsl
and
jae
pop
in
movsl
mov
or
outsl
mov
cld
push
or
xchg
sbb
ror
les
mov
adc
stc
mov
lods
jmp
shrb
inc
imul
sub
idivb
bnd
jg
jns
jne
scas
loop
xchg
and
mov
test
decl
fstps
pop
in
jl
mov
push
fs
pop
push
aam
pop
jae
iret
inc
rol
daa
sbb
mov
and
sarb
int
outsl
sbb
jp
pop
or
stc
cs
or
pop
xchg
leave
aad
clc
clc
sbb
mov
dec
jae
in
mov
shlb
mov
stos
jns
addr16
or
pop
jg
push
jecxz
cld
push
jecxz
hlt
repz
dec
mov
jno
mov
jb
mov
or
mov
sub
xchg
adc
movsl
inc
fdivr
sti
push
cmpl
lock
sub
sub
lea
out
ds
mov
push
xchg
fs
mov
cld
leave
jbe
outsb
loop
push
and
and
ljmp
xor
xor
sub
movsl
mov
jle
rcrb
mov
cmpsb
ljmp
insl
inc
mov
pusha
scas
in
pop
rcr
and
into
lahf
cmp
lss
out
enter
enter
xchg
out
arpl
rcll
jbe
scas
jmp
push
pop
and
sbb
xchg
scas
sarb
sbb
inc
mov
add
jp
lret
push
or
push
push
and
adc
pop
jp
xchg
sub
mov
shlb
cmp
mov
xchg
dec
pop
cmp
fiaddl
xlat
daa
lcall
push
dec
repz
xchg
pusha
sbb
ljmp
sub
cmpsl
push
sbb
push
xor
dec
jnp
inc
jo
scas
mov
mov
mov
add
iret
jae
cmp
imulb
jmp
xor
ja
outsl
inc
pop
pop
inc
or
or
js
lods
lret
adc
sub
push
imulb
das
ja
ljmp
mov
add
lahf
jb
mov
aam
imul
es
lret
call
movsb
cmp
sti
jp
hlt
jbe
mov
jl
arpl
xor
sub
cmpb
mov
mov
jg
sub
pop
addr16
out
fnsave
sub
or
dec
jg
xchg
lahf
cmp
push
mov
into
cmpsb
sub
das
call
cmpsl
mov
vpsllw
mov
mov
inc
insb
adc
ret
in
dec
cmc
or
fists
mov
push
ret
cltd
fsts
into
pop
les
push
test
fs
pushf
or
mov
daa
rcl
rolb
cli
fsub
fcmovne
xor
fcoml
adc
inc
xchg
cmp
mov
mov
das
sarb
or
pop
fstp
xchg
push
in
mov
push
xchg
rorb
pop
mov
lock
adc
pop
xor
int3
and
stos
add
in
nop
mov
pushf
ret
or
icebp
sub
sahf
xor
ja
jae
dec
inc
popf
ficoms
scas
xor
or
and
bound
xor
push
cmp
adc
in
and
add
les
loopne
repnz
jl
xor
sub
adc
and
mov
add
loop
mov
dec
sbb
into
data16
fistps
mov
sahf
mov
pop
sub
mov
sub
stos
cmp
add
inc
mov
loope
push
cmp
shr
insl
outsb
in
fwait
shr
push
scas
dec
dec
and
in
test
xchg
ljmp
push
data16
sbb
xor
add
sti
rcrl
add
leave
xor
mov
in
jg
mov
cmp
mov
mov
imul
dec
ss
sub
jmp
add
xor
inc
pop
fmul
inc
mov
in
xor
shll
fcoml
xor
aam
sub
in
aas
ret
adc
push
xchg
dec
push
outsl
mov
lcall
jle
shl
cmp
inc
shrl
inc
jge
ret
sub
mov
xchg
jecxz
cmp
popf
sub
sub
pop
outsb
pop
cmc
cs
sarl
fwait
or
lcall
jecxz
pop
sub
imul
lods
addr16
mov
data16
and
jno
mov
dec
in
cld
fadds
dec
add
lods
gs
fwait
or
and
movsb
in
mov
ret
sub
or
xor
mov
in
mov
leave
jo
lock
gs
int3
in
push
repnz
fisubs
push
scas
mov
and
mov
in
ja
push
xor
push
lods
lds
clc
mov
aas
aaa
repnz
out
adc
inc
add
push
or
dec
aad
imul
aad
stc
aad
fisttpll
dec
cmp
add
pop
mov
cmpsb
cmc
vcvtsd2ss
dec
jl
and
es
mov
pusha
push
or
mov
inc
mov
ss
pop
xlat
mov
mov
in
into
cmc
jecxz
rcrl
shrl
mov
jl
sub
jg
call
inc
mov
pop
and
pop
lods
jbe
scas
push
mov
imul
and
or
dec
lret
pop
push
aam
int3
insl
jae
in
jge
arpl
and
mov
hlt
bound
dec
add
ds
outsl
sarb
mov
push
dec
scas
inc
insl
cs
rorl
rep
adc
cld
shr
das
insb
mov
and
loop
leave
push
add
mov
or
fisubl
insl
popa
add
mov
mov
in
rcll
imul
jg
fdivl
inc
mov
xchg
mov
movsb
xchg
ficomps
mov
movsb
movb
push
jp
fs
push
dec
mov
aam
dec
xor
stos
ret
and
push
aas
sub
mov
jno,pt
mov
or
inc
pop
movsb
sub
notl
mov
push
daa
sub
inc
lds
pop
push
lret
mov
push
mov
mov
adc
rol
das
jp
movsb
ret
fmul
enter
jle
or
jb
mov
push
fisttps
pop
cmpsl
adc
and
push
jle
insl
and
inc
push
daa
ss
mov
pop
xor
popa
cmpsb
fldcw
or
fsubl
movsl
push
loop
mov
push
lods
pusha
jmp
daa
xor
inc
sahf
fadd
iret
xchg
lret
stos
inc
add
sbb
scas
mov
sti
cmp
xchg
popf
mov
iret
sbb
cmc
and
sub
loope
pop
or
dec
cltd
test
mov
sub
sbb
xlat
dec
lods
xchg
xchg
shrl
jo
add
xchg
dec
sbbl
fwait
jns
mov
push
mov
aam
movsb
imul
leave
mov
push
xchg
mov
inc
cmp
mov
mov
ret
inc
inc
xchg
push
aaa
pop
bound
aad
insb
aaa
push
push
rorb
lds
lock
scas
popa
mov
cmpl
pop
pusha
sahf
xchg
ss
jle
dec
mov
and
rclb
lds
xor
jmp
add
pop
xlat
xor
inc
mov
mov
sbbl
push
and
les
jl
lods
sti
dec
pop
int3
push
adc
pminsw
std
add
outsl
adc
jecxz
pop
mov
pop
xchg
jge
mov
mov
aaa
shlb
loope
add
addr16
sahf
ret
insl
mov
mov
mov
popa
pop
nop
cltd
fidivrs
xor
push
cwtl
sbb
inc
adc
mov
cmpsb
bound
add
cli
fisttpll
push
fisubl
push
inc
ljmp
loopne
sbb
pop
cld
test
sbb
mov
dec
dec
push
pop
cmc
ret
icebp
test
inc
popl
imul
out
cmc
stc
fdivrs
push
mov
add
cs
pop
or
mov
mov
int
cwtl
xchg
cmovo
cmp
or
and
push
dec
fnstsw
cld
mov
xchg
arpl
cmp
inc
fmull
or
cltd
fstps
clc
mov
loop
loopne
into
pop
xchg
mov
negl
test
test
and
push
call
test
gs
lcall
in
fidivrs
push
scas
push
lahf
adc
and
fs
push
mov
push
loop
test
cmc
std
and
xchg
push
xor
stos
jl
and
adc
or
adc
ret
pop
out
rcr
orb
enter
xchg
add
push
pop
negb
ja
pop
pop
in
out
or
or
pop
ja
mov
and
cld
stos
push
mov
cwtl
scas
mov
push
push
addr16
jno
sub
jecxz
xor
lahf
dec
lods
jae
lahf
fcmovne
loopne
add
nop
jbe
jne
lods
lods
push
out
cli
sbb
ds
repnz
or
or
pop
push
xor
xor
jo
cmp
push
cmpsl
and
sbb
cmp
mov
push
and
decl
pop
fisubrl
push
and
bound
lods
cmp
cmovne
lret
pushf
repz
and
lods
xchg
mov
pop
call
repz
sahf
jp
jnp
cmp
inc
sbb
mov
test
adc
jnp
dec
inc
scas
in
sarb
jg
sbb
in
dec
sbb
enter
repnz
aas
nop
jb
lea
mov
lock
or
outsb
pop
aaa
in
popf
aam
lcall
les
add
ret
xor
jg
dec
push
lcall
je
inc
insb
rorb
rcll
push
jnp
mov
inc
into
adc
dec
adc
mov
je
xchg
fmuls
fnstenv
mov
stc
cli
testb
popf
add
mov
add
jl
sub
rolb
jmp
adc
pop
dec
sub
jnp
add
repnz
into
adcb
or
xchg
hlt
dec
sub
push
push
mov
mov
cmpb
mov
or
mov
js
pusha
shl
rcll
pusha
popa
repz
rcrl
ds
loopne
test
xchg
int
xchg
aaa
es
push
inc
jns
or
hlt
push
fwait
inc
addl
add
push
lods
jmp
xchg
mov
sub
out
imul
and
push
stc
pop
test
add
inc
les
dec
xor
xchg
in
pop
imul
jnp
je
inc
jl
pusha
and
mov
js
shlb
jno
fsubrp
bound
mov
pop
das
or
pop
fisubl
addl
nop
ret
icebp
enter
cmpsb
push
in
cmp
jg
sti
and
scas
inc
in
pop
mov
lods
out
inc
jecxz
cmp
fidivrl
aam
inc
aam
loopne
xor
test
xor
mov
jo
enter
pop
pop
outsl
inc
cwtl
pop
pop
sbb
pushf
dec
sbb
fdiv
ret
dec
test
imul
popf
push
stos
mov
into
scas
bsr
out
mov
fistps
or
gs
add
mov
inc
sbb
rorl
cmpb
ficoml
add
cmp
mov
popl
mov
in
ret
mov
hlt
jns
jns
mov
jae
sub
jo
addr16
jle
and
out
xlat
dec
in
dec
sbb
fistpl
hlt
cmp
incl
idivb
test
mov
std
gs
movsb
mov
es
push
push
and
xchg
scas
subl
pusha
xor
adc
scas
test
sbb
gs
mov
push
push
rcr
adcb
push
cld
pop
je
mov
imul
fisubrl
pop
enter
in
lods
jne
rorl
xchg
or
mov
xchg
loopne
movsb
xchg
pop
or
xor
push
adc
mov
xchg
lods
addr16
repnz
popa
fstps
xchg
lods
test
inc
popf
in
dec
pop
add
xor
out
in
sub
inc
scas
mov
iret
mov
sbb
mov
dec
cmpb
int
mov
pop
test
sub
xchg
fdiv
fstpt
in
jecxz
add
add
push
jae
xor
hlt
mov
leave
lea
push
stos
lods
out
rcl
subb
fcoml
jo
std
inc
push
jmp
in
adc
cmp
test
cwtl
daa
or
and
inc
pop
out
add
mov
mov
iret
jbe
gs
jo
std
dec
in
lahf
pushf
jmp
inc
notb
ret
lods
lods
cwtl
sbbl
xchg
jp
lret
pop
mov
mov
movsb
in
mov
mov
or
loopne
cmpsl
dec
cmp
popa
cmp
incb
out
imul
addr16
mov
push
out
mov
insb
adc
test
push
sub
pop
std
cmc
clc
and
pop
pop
jb
push
out
stc
cmp
popw
rol
lods
xor
jmp
inc
in
test
cltd
lret
orl
dec
xchg
xchg
leave
ret
fldl
or
aaa
in
rcrl
aad
mov
sbb
daa
add
nop
js
out
mov
jg
cld
movsb
xchg
xor
add
les
adc
fwait
dec
dec
sbb
pushf
fistpll
and
in
lds
je
add
popf
mov
arpl
jnp
or
shrl
inc
cld
rcrb
or
jnp
jne
pop
cmp
mov
lods
jno
loopne
in
push
std
pop
dec
shlb
inc
stos
lock
stos
cmp
inc
sub
dec
rcl
aas
lcall
jno
or
push
not
mov
mov
mov
cmp
fcmove
jbe
add
xor
lods
sub
pop
ret
or
and
mov
add
jne
int
inc
les
arpl
cwtl
hlt
cld
jb
or
aaa
mov
xchg
push
mov
test
decb
mov
outsl
test
push
add
mov
xor
outsb
inc
adc
jle
fidivs
sub
push
and
daa
jne
test
xor
xor
adcl
mov
add
stc
outsb
cmp
sbb
sbbl
mov
jmp
add
cmpsl
adcl
inc
inc
mov
cmp
outsb
push
xchg
adc
aam
lods
leave
loop
mov
jne
sar
adc
adc
xchg
cmc
pop
mov
mov
mov
jo
and
sub
js
hlt
xchg
mov
mov
test
xchg
sbbb
nop
bound
xchg
xlat
sub
jl
or
cmp
cld
or
push
mov
test
decb
es
pop
inc
cmpsb
scas
push
aaa
pop
ret
mov
jb
fdivr
sbb
push
inc
rcrl
cmpsb
cmc
shll
js
pop
sbb
pop
in
call
mov
hlt
mov
jb
stos
add
addr16
adc
mov
repz
add
out
movsb
cwtl
out
inc
xchg
jb
loopne
sbb
insl
insl
xchg
test
sbb
test
outsb
adc
mov
dec
cmp
xchg
mov
imul
cld
inc
jb
loope
mov
shlb
sbb
lcall
xchg
add
xor
mov
jo
std
lods
adc
or
jle
jle
dec
cmpsl
cld
mov
fadd
adc
pop
loop
rclb
push
aas
mov
sub
das
mov
adc
out
lods
pushf
sub
rcll
mov
xchg
adc
enter
or
sbb
rolb
scas
out
adc
cmpsb
lods
inc
adc
dec
roll
lahf
xlat
sub
lods
in
xchg
popf
fcmovb
pop
push
xor
stos
int
cmpsl
test
loopne
xor
std
dec
ljmp
cld
out
add
xchg
not
je
int3
insb
shl
push
shl
in
inc
mov
pushf
mov
or
mov
movsb
aam
jg
pop
pop
add
sar
xchg
mov
jge
lcall
shrl
popf
lret
jp
scas
sub
mov
xor
push
cwtl
jbe
or
cmpsl
dec
movsb
int
lock
sar
xlat
repz
dec
faddl
ljmp
aam
sti
xchg
jnp
mov
mov
fdivl
sbb
lock
jecxz
lret
mov
ljmp
inc
jecxz
xlat
stos
mov
pop
scas
scas
or
sbb
stc
mov
pop
clc
adc
movsl
mov
jnp
and
mov
dec
xchg
cmp
jno
ret
subl
add
cmp
jecxz
sub
inc
int
push
push
mov
scas
or
push
cmpsb
stc
shl
mov
or
push
push
pop
mov
adc
ss
mov
sbb
xor
pusha
in
add
outsl
push
fs
ljmp
out
jmp
jo
repz
shll
push
jl
push
daa
xchg
sbb
ds
xor
sub
adc
out
enter
xchg
push
or
cmpsb
popa
mov
cltd
mov
les
jmp
cmp
adc
sub
sbb
addb
push
jns
je
je
fwait
and
dec
dec
clc
bound
inc
sbb
fnsave
push
hlt
adcb
xchg
and
imul
push
mov
mov
cltd
cmp
add
sarl
pusha
orb
mov
sbb
xor
movsl
in
cmp
adc
push
add
cmc
sti
mov
imul
jg
dec
call
movsb
sbb
in
addr16
fmull
xchg
ds
je
fbld
mov
rcll
rol
fcmovbe
enter
push
dec
lret
aaa
mov
jmp
sbb
cmp
lea
mov
lahf
clc
push
imul
fldt
xchg
jmp
mov
inc
xchg
aas
inc
jmp
or
fldl
push
mov
cli
mov
popf
jae
jecxz
mov
les
add
fisubs
mov
ret
ret
pop
jecxz
mov
xchg
or
jmp
repnz
rclb
push
notb
sbb
xchg
scas
or
loopne
xchg
outsb
movsb
push
sub
mov
test
les
push
dec
mov
inc
outsl
push
push
rcl
xor
ljmp
daa
mov
leave
dec
or
and
dec
lret
mov
stc
sbb
xchg
pusha
data16
fbstp
pop
fisubrs
sahf
dec
xchg
std
sbb
mov
and
enter
dec
fsts
dec
mov
test
xchg
inc
les
cmpl
scas
mov
test
jns
dec
xor
cwtl
test
adc
push
rcpps
call
lods
das
inc
jl
and
xor
call
cmc
add
ja
inc
insb
jbe
add
orb
or
pop
xor
fcoml
movsl
xchg
add
in
addr16
vmread
sbb
nop
pop
push
dec
cmc
dec
call
mov
sub
into
xor
mov
mov
lret
iret
test
fsubrs
adc
cmp
fcoms
out
test
inc
xchg
out
jno
push
or
push
test
lretw
sbb
fldl
lret
or
rcl
inc
and
test
jl
fists
out
push
ja
inc
add
scas
mov
xor
jge
add
sti
push
insb
aaa
setle
xlat
movhps
jmp
xor
aas
gs
jmp
xchg
mov
dec
js
cmp
idiv
cmpsb
mov
inc
cmp
aaa
cmc
leave
mov
mov
push
rorl
pop
mov
outsl
out
out
xor
rcr
sub
xchg
pusha
adc
sub
lods
dec
repnz
cwtl
mov
pop
push
or
das
pop
rolb
and
mov
repz
xchg
and
sub
xor
call
push
out
js
xchg
call
jae
pop
int3
test
sbb
test
xor
mov
pop
push
mov
mov
mov
sbb
mov
and
les
stos
sti
fsubp
and
adcb
sbb
rolb
push
out
fxch
pop
int
mov
sbb
daa
std
pop
je
xchg
xor
sub
bound
pop
xchg
jnp
push
insl
data16
add
mov
xchg
xchg
pop
lret
mov
cs
cmc
push
mov
outsl
sub
fdiv
movsb
test
sbb
pushf
ficoms
lret
cmp
aas
xchg
inc
addl
lock
inc
test
sbb
outsl
cmp
fnstenv
xchg
sbb
lods
test
mov
mov
das
xor
out
add
push
or
pop
rcrb
or
dec
cwtl
push
or
cmp
sbb
or
xor
jnp
repz
mov
mov
lret
decb
loopne
loop
xchg
dec
repnz
in
lret
jmp
data16
jns
xchg
cs
cmp
ret
add
shl
fbstp
lods
mov
stos
test
push
xchg
push
movsbl
mov
pop
div
adc
shrl
pusha
push
fsts
stos
pushf
pop
or
lcall
push
outsl
mov
xchg
push
sbb
leave
mov
inc
sarl
dec
js
fnstsw
or
loopne
out
push
mov
ret
int3
cmpsb
mov
out
jae
leave
cmp
push
sub
imul
andl
mov
in
xor
cld
jle
fs
inc
mov
loope
mov
jo
shll
es
fdivrl
jmp
mov
xchg
and
sbb
or
insb
pop
inc
sbb
sarb
aam
add
mull
pop
imul
shl
cltd
add
repz
cs
out
pop
popf
push
sub
pusha
das
xor
sub
pop
call
jge
add
in
xlat
inc
push
pushf
mov
into
je
mov
test
push
cmp
adc
icebp
pushf
dec
mov
xor
xor
test
or
sub
stc
jne
inc
cmp
jnp
negb
jo
jle
push
adc
in
js
popa
cmp
cltd
and
xchg
cmp
inc
and
call
fwait
jbe
cs
lret
cmc
mov
add
mov
cmpsb
loope
xor
dec
xor
subb
je
mov
xor
dec
shlb
jp
cs
gs
in
inc
xor
jmp
xchg
push
jmp
outsl
jge
mov
por
mov
or
cmp
sbb
mov
lods
cmp
push
and
movl
lcall
cmp
sub
or
xor
mov
push
cltd
stos
mov
cltd
daa
push
fisubs
cmp
mov
dec
shll
divl
packssdw
sbb
mov
test
jecxz
shll
xchg
mov
mov
add
shll
push
mov
mov
push
pushl
xchg
cli
and
aaa
sarb
rcrl
addr16
adc
hlt
inc
inc
add
pop
hlt
dec
mov
sbb
out
adc
jecxz
push
jo
adc
jb
lods
mov
cwtl
daa
push
outsl
cmpsb
loopne
rcl
jb
orb
add
pop
mov
push
int3
insb
fisubs
inc
jbe
aam
daa
lds
inc
lret
dec
imul
repz
loope
cs
push
test
or
xor
push
cmpsl
push
mov
call
add
jns
xchg
push
jnp
add
or
inc
mov
xchg
cmp
fwait
shrl
lahf
mov
or
pushf
cld
inc
add
jg
xorb
xchg
outsb
jae
jge
add
pushf
lcall
dec
xchg
jmp
or
testl
xor
and
mov
leave
sbb
fisubl
cmpsl
ret
mov
repnz
out
test
dec
cmp
cmp
into
pop
push
movsl
inc
or
aas
call
pop
clc
leave
jns
test
fisubs
outsl
dec
movsl
sbb
mov
sti
inc
and
popf
sbb
push
jp
movsl
mov
and
mov
rorl
dec
mov
incb
mov
dec
sub
and
cli
sub
cwtl
pop
out
nop
pop
enter
jp
mov
inc
lds
mov
aad
adc
push
or
inc
testb
idiv
pop
loop
shll
aam
sbb
stos
pushf
pop
loopne
jb
cmp
insb
push
jnp
pop
inc
rcrb
outsb
and
lahf
xchg
cwtl
add
jo
xor
orl
jns
cs
cltd
enter
aad
cmp
mov
cltd
and
aas
enter
aam
push
adc
push
and
jmp
in
mov
xor
pop
lret
test
sbb
xchg
mov
orl
and
push
pop
arpl
cmc
orl
pop
pop
inc
inc
xchg
je
mov
sbb
push
mov
js
sahf
fidivrs
pop
lea
cwtl
push
sbb
mov
stos
jb
xor
sub
rol
mov
jl
ret
shll
rsm
sbb
mov
lret
pop
fucomip
mov
loopne
xchg
lret
popa
cmp
mov
xchg
leave
out
jbe
aad
fs
and
test
xorl
addr16
enter
jp
xor
mov
imul
mov
lock
lahf
mov
dec
out
mov
aam
inc
push
cmpsl
adc
fnsave
dec
dec
test
lods
mov
cmp
pop
cmpsb
pop
mov
shlb
xchg
mov
adc
sub
cs
pop
adc
movsb
fisubrl
xchg
push
inc
mov
pop
mov
fisttps
sub
xor
add
jmp
stos
jns
jae
fwait
js
jb
shrb
repnz
lret
cwtl
stc
in
add
pop
aaa
dec
mov
push
sbb
cmp
adc
aas
push
stos
push
jecxz
fidivs
xchg
out
adc
xchg
fs
cwtl
lcall
popa
inc
push
mov
cltd
rcl
movsb
jle
mov
movsl
lahf
sbb
cmp
or
prefetchw
mov
lahf
aam
inc
fidivl
js
inc
ret
adc
imul
cltd
lods
jns
mov
jmp
mov
cmovg
xchg
cwtl
add
stos
hlt
sahf
imul
ljmp
addr16
inc
mov
mov
add
mov
stos
loope
jg
jmp
pop
test
jg
cmpl
fbstp
push
or
jl
push
xchg
data16
push
inc
jnp
cmp
and
add
mov
fiaddl
push
mov
jbe
jb
call
popf
inc
insb
sub
inc
or
jnp
pop
in
adc
jmp
inc
fnsave
icebp
leave
rcrb
xchg
daa
ja
mov
je
sahf
mov
out
push
mov
mov
fidivrl
dec
pop
mov
and
push
mov
hlt
fcomps
inc
lret
inc
xorb
cmc
mov
and
leave
pop
loop
cwtl
inc
mov
leave
dec
aaa
cwtl
loopne
pop
scas
push
jno
out
add
adc
push
xchg
add
rol
and
sub
inc
mov
fldt
jns
mov
in
insb
jae
aam
xchg
sub
hlt
aaa
adc
push
movsl
mov
lock
fimuls
enter
fwait
sbb
jne
pushf
cmp
les
js
or
daa
inc
sub
hlt
pop
fucomp
pcmpgtd
repnz
sbb
mov
pop
hlt
pop
cmpsb
cmp
pop
daa
inc
aaa
mov
xchg
and
lea
subl
mov
push
or
dec
or
roll
pop
xchg
je
dec
vpunpckhqdq
xchg
pop
or
jb
pop
mov
pusha
push
dec
insl
ret
and
movsb
jmp
pop
leave
popa
xor
xchg
fldt
leave
cmp
inc
xor
mov
mov
sahf
cmpsl
stos
dec
rolb
mov
in
out
mov
lret
loope
adc
lcall
adc
mov
mov
cmp
adcb
mov
out
mov
push
scas
adc
repnz
cmp
push
cmp
adc
and
or
push
mov
mov
std
inc
cmp
cmpsl
adcl
dec
lea
jne
imulb
push
or
addr16
ret
out
and
xchg
mov
cwtl
cmpsb
xchg
ret
push
stos
xlat
mov
subb
sub
stos
test
and
pop
addr16
jno
scas
xor
jp
sbb
pop
cltd
test
or
mov
mov
scas
jp
call
add
lahf
and
fst
lock
adc
and
mov
jne
mov
fldz
jns
lods
jle
js
stc
add
jl
push
xchg
xor
add
cld
rcl
das
push
iret
das
inc
stc
xlat
push
iret
or
or
js
clc
and
inc
shll
xchg
cmpl
xor
sahf
je
xacquire
ja
xor
int
inc
push
stos
jno
lret
cmp
pop
jle
xchg
xor
movsl
test
outsb
xchg
lahf
mov
adc
xchg
add
jg
xlat
mulb
cmpb
or
shlb
add
sahf
mov
inc
and
sbb
notl
inc
cwtl
inc
idivb
cmp
cli
or
cmp
daa
mov
test
out
sbb
into
test
and
in
aaa
mov
jge
das
cwtl
stos
into
stc
and
insb
xor
and
aaa
xor
and
xchg
sbb
jecxz
popa
outsb
mov
dec
fincstp
mov
xlat
test
outsl
inc
lcall
stos
add
aad
or
in
mov
pop
pop
inc
je
mov
inc
jbe
sbb
daa
jne
lcall
xchg
mov
sbbl
adc
ret
sub
leave
sbb
cs
pop
out
dec
data16
add
stc
fildll
in
pop
outsl
mov
fimuls
imul
jle
mov
xorb
sub
fcmovnu
and
adc
andl
or
jmp
xchg
mov
dec
and
mov
or
push
fnstcw
sbb
in
int3
test
adc
push
frstor
and
mov
dec
cmpsl
add
iret
mov
subl
jno
pushf
rorb
into
dec
int
cmp
push
sub
std
sbb
cs
inc
push
inc
pushf
aam
and
sbb
scas
ss
lea
ds
push
mov
inc
hlt
pop
cmc
xor
fadds
rcl
jno
cltd
cmpl
leave
aaa
push
ds
pushf
jg
xchg
ljmp
jno
jo
scas
push
or
mov
pop
leave
or
mov
xchg
push
dec
sbb
sbb
in
mov
rclb
movsl
push
sahf
mov
jle
xchg
test
or
jmp
push
scas
std
mov
aad
pop
push
cmp
loope
xlat
inc
fstpl
and
ljmp
test
into
push
lret
int3
mov
aam
xor
ret
hlt
andb
inc
add
jg
xor
pop
pop
nop
xorb
and
loop
sbb
outsl
daa
test
push
lods
dec
jae
sub
inc
mov
jno
push
out
jl
rcrb
imulb
popa
lea
jb
lcall
sbb
rcrb
cmp
xor
call
hlt
rclb
scas
cld
lds
sub
adc
movsb
sbb
mov
mov
push
push
and
je
inc
and
push
hlt
mov
mov
push
jns
pop
mov
push
je
mov
xchg
jmp
xchg
dec
das
jbe
mov
pop
data16
add
adc
aad
subb
inc
pop
imul
and
jp
gs
adcb
repz
rcrb
lods
push
dec
adc
mov
mov
xchg
jg
fwait
enter
fwait
pop
cmpsl
into
mov
mov
cwtl
mov
es
cld
cmp
pusha
lahf
sub
sbb
ret
pop
or
out
mov
pushf
jecxz
loopne
arpl
ja
mov
mov
xchg
daa
addr16
repz
repz
mov
and
insl
movsl
sub
iret
popa
jb
inc
out
jg
out
jbe
or
jbe
rcrw
xlat
inc
adc
stos
or
out
aam
clc
cmp
lods
and
push
cmpl
int3
mov
pop
hlt
push
cmpl
cwtl
mov
loop
xlat
bndldx
rcrl
andl
out
mov
dec
add
in
in
cmp
leave
jae
fsubrl
movsb
sub
adc
inc
idivb
cmp
sub
jge
jl
and
xor
jae
testb
sub
xchg
lods
int
mov
pop
push
mov
sub
jbe
jge
cld
sub
outsb
ror
xchg
mov
iret
cmp
ljmp
push
xlat
jae
mov
jg
mov
inc
nop
rorb
lods
std
test
lea
sub
in
add
sub
sub
add
repz
mov
cmp
jo
and
movsb
add
pop
movsl
enter
lcall
inc
jle
push
cmp
insb
mov
push
push
stc
popf
sbb
xchg
call
test
imul
jp
cmp
jp
dec
mov
lahf
and
pop
xor
fstl
loop
lret
inc
pop
shll
add
xlat
mov
pop
xor
mov
imul
testb
in
movsb
or
daa
sbb
adc
cmp
adc
push
pushf
mov
xchg
and
pop
je
idivl
mov
out
mov
adc
cmp
jne
lock
jbe
cmp
mov
jae
jle
shll
test
es
loope
daa
mov
adc
cmovs
pop
sub
mov
adc
push
loopne
dec
out
mov
jle
jne
repnz
loop
das
leave
jecxz
cs
xor
cwtl
adc
shll
test
mov
jmp
lcall
stos
mov
add
jae
dec
jmp
inc
or
inc
stc
cmc
add
ljmp
pop
cs
cmp
int3
ss
adc
test
inc
fdivrs
mov
add
stos
aas
test
les
push
inc
outsl
push
outsl
pop
push
mov
add
push
pop
push
leave
adcb
jno
andl
mov
pushf
pop
pop
mov
bound
data16
lock
in
adcl
adc
sbb
add
adc
lahf
pop
inc
lahf
add
loope
sub
xchg
movsb
pop
inc
fsubs
push
pop
push
sahf
jl
stos
repnz
daa
mov
mov
xchg
dec
or
into
loopne
xchg
arpl
aad
sti
mov
pop
or
mov
mov
add
test
pop
dec
pop
and
testl
cmpsl
cmpsb
mov
pop
divb
xchg
inc
je
dec
xchg
pop
adc
mov
inc
shl
imul
add
pop
sbb
call
adc
filds
xlat
mov
shll
sbb
mov
adc
push
int3
sub
pop
ja
jbe
popa
ss
cmpsb
cmpsl
inc
movsb
sbb
ja
pop
aas
sahf
mov
xchg
and
stos
dec
push
mov
fists
por
xchg
pushf
push
adc
fs
jns
enter
inc
shl
fld
push
xchg
xlat
xor
jno
test
mov
mov
inc
stos
stc
sub
dec
inc
nop
lret
or
imul
nop
sbb
jo
push
mov
stos
fwait
dec
bound
jns
sub
sub
jo
incb
sarl
fidivrs
mov
cmc
out
pop
test
cmp
inc
adc
and
push
pop
cmp
jp
cmp
and
jge
cmc
outsb
out
mov
or
cld
push
insb
mov
lock
int
fdivr
xchg
lahf
pop
sbbb
int3
fistps
out
mov
pop
js
sbb
ljmp
mov
pushf
sub
dec
sub
add
push
or
push
add
hlt
fisubl
and
add
xchg
push
cmp
dec
mov
in
and
fs
pop
cmp
xchg
insl
jmp
push
and
xor
ljmp
daa
xlat
loope
or
dec
test
xor
xlat
or
mov
lods
imul
pop
test
lods
jmp
jl
stos
inc
shr
js
dec
pusha
and
ficompl
pop
aas
pop
arpl
imul
inc
arpl
xchg
inc
loop
pop
popf
sbb
and
pop
cltd
mov
add
movsl
adc
inc
mov
les
pusha
test
jcxz
pushf
cmpsb
lret
jne
sub
or
add
add
cmpsl
cmp
adc
lret
sub
nop
mov
popf
data16
push
or
clc
loope
daa
jmp
sbbb
int3
mov
xchg
sub
cmp
in
in
mov
pop
bound
push
xchg
sub
mov
add
or
fildl
shll
jbe
dec
outsb
sub
inc
cld
inc
push
push
das
xor
mov
mov
push
aaa
icebp
mov
mov
je
xor
cwtl
add
push
or
in
movsb
scas
gs
push
out
dec
js
stos
mov
cmpsl
cmc
or
or
pop
mov
jle
sbb
pop
enter
xchg
int
lahf
lds
mov
rcl
inc
int3
fmuls
stos
pushf
fisubrs
ret
nop
xor
repnz
jbe
xchg
repz
or
daa
loop
cwtl
xchg
aaa
scas
btr
and
sti
xor
leave
popa
adcl
lret
push
mov
cld
jmp
test
lret
cwtl
mov
jb
dec
jo
sub
mov
jae
cmp
jne
mov
lahf
sbb
pop
stos
popa
mov
jle
xchg
lock
jne
aad
dec
into
sti
outsb
pop
fidivrl
inc
xchg
out
lds
mov
mov
xor
lea
int3
inc
std
into
jo
mov
std
insl
pusha
popa
xchg
lahf
sub
xlat
xchg
in
sbb
jp
cs
inc
hlt
sub
mov
push
push
dec
mov
lret
mov
push
out
dec
push
sbb
push
mov
cld
and
inc
sarl
cs
or
jb
sbb
inc
mov
mov
mov
mov
loopne
cmp
cmp
cltd
mov
and
pop
push
rolb
adc
sahf
jbe
jo
out
xchg
nop
push
xchg
clc
mov
int
lock
pop
sar
daa
add
in
dec
mov
and
test
pop
arpl
dec
iret
lahf
sahf
xor
imul
xor
cmpsb
adc
sbb
shr
xchg
inc
sbb
push
lret
inc
mov
dec
mov
mov
enter
adcl
leave
inc
stos
out
jb
enter
inc
push
xchg
rorb
mov
fdivr
int3
adc
push
jp
pop
fldcw
adc
mov
pop
add
fnstsw
push
jl
ror
and
inc
jg
sbb
insl
push
adc
in
cmpsl
or
cwtl
js
cmp
push
mov
sahf
cmc
dec
push
fcomip
add
out
jmp
iret
mov
xchg
xchg
ss
inc
lds
or
arpl
inc
mov
xor
scas
jg
mov
dec
push
mov
cmp
jp
dec
adc
scas
jnp
pop
add
dec
jl
push
cmc
inc
jle
lods
aad
mov
pop
imull
add
popa
jge
jge
imull
gs
jne
leave
mov
aam
cwtl
int
popa
xor
sbb
sub
push
dec
call
xor
sub
movsl
sub
pop
jmp
in
test
in
xor
ja
xchg
idivl
shrb
xchg
xchg
cmp
lahf
movups
mov
mov
popl
pop
jo
loopne
outsb
aaa
mov
jle
daa
add
test
ljmp
sahf
push
rcrb
bound
fstps
mov
push
cmp
lret
inc
and
rcll
inc
fwait
jno
mov
hlt
decb
repz
into
add
cmp
in
fmuls
mov
push
mov
xchg
shr
loope
or
cmp
sbb
mov
clc
push
popa
fsubs
dec
adc
inc
lods
dec
bound
aam
mov
bound
gs
ret
lds
pop
jmp
test
addr16
jge
test
sub
jmp
mov
adc
cli
lods
das
jge
xchg
test
ds
popa
adc
out
ja
loop
dec
add
adc
xor
fucomi
sti
outsl
pop
cmp
cwtl
icebp
inc
incl
sahf
or
fwait
loope
jp
mov
pop
xchg
mov
mov
jb
cmpl
cmp
sub
mov
hlt
sbb
jle
push
out
add
les
add
jmp
pop
syscall
sbb
pop
mov
gs
shl
push
dec
mov
lods
sub
shlb
fwait
mov
into
test
mov
mov
jp
inc
mov
jle
adc
push
ret
enter
dec
aam
jb
or
jo
pop
test
lret
mov
xor
push
mov
rcll
fadds
insb
sub
push
adc
ja
mov
cli
aas
addr16
icebp
cmp
out
adc
fnstcw
das
mov
cs
xchg
xor
push
icebp
or
dec
jne
dec
stc
mov
add
sbb
mov
mov
stos
xlat
clc
pop
xor
lcall
sbbb
pop
shlb
pop
fisttpl
cmpb
rorl
jnp
jo
loop
mov
ja
je
orb
std
xor
testl
ret
inc
mov
mov
cmc
ror
mov
jbe
fsts
inc
pop
jae
mov
outsl
push
jbe
hlt
das
jb
cmp
add
lods
xchg
aaa
lcall
and
cmp
arpl
mov
ret
and
sbb
mov
scas
inc
pop
cs
dec
shll
dec
dec
mov
test
sti
xchg
cmp
mov
xchg
mov
pop
bound
cmp
mov
sub
dec
imul
and
roll
pusha
imul
pcmpgtd
sub
xchg
ljmp
add
aam
sahf
popa
out
in
mov
stos
stos
shrb
or
stc
mov
stc
mov
jmp
int
sub
std
sbb
or
mov
and
pop
cwtl
fcmovnb
mov
dec
jbe
xor
add
fldt
in
sub
shll
add
add
out
lret
jne
push
mov
and
xchg
js,pn
push
jo
mov
dec
out
movsl
adc
dec
aad
rol
shrl
inc
lahf
pusha
fldenv
mov
adc
loope
mov
adc
bound
xchg
mov
push
popa
sbb
in
inc
mov
add
jecxz
int3
into
or
xchg
jmp
sar
aaa
jle
push
ja
loope
and
data16
sbb
inc
xor
push
mov
mov
xchg
xchg
cmc
test
xchg
xchg
or
add
jmp
mov
insl
jge
mov
mov
mov
subb
adc
add
shll
adc
dec
insl
push
iret
adc
jb
addl
or
sbb
pop
jns
sahf
icebp
scas
pop
mov
in
xchg
inc
jb
jg
ror
xchg
cmp
cmp
and
movaps
sub
jge
jl
cmpsl
jb
sub
push
mov
sub
jmp
icebp
imul
mov
repz
push
xor
jns
enter
lock
mov
das
dec
or
sub
negl
je
lods
pop
inc
mov
xor
je
jb
jae
out
pop
jge
stc
adc
subb
pop
xchg
fmull
aad
mov
scas
and
mov
cld
ret
lods
hlt
popf
mov
sub
and
loop
cwtl
int
mov
lret
lret
sbb
xor
dec
push
push
negl
es
rclb
jecxz
pop
cwtl
push
add
jo
sbb
js
lods
xchg
push
sbb
test
adcl
add
mull
mov
jbe
repnz
jmp
jge
fst
stos
pop
fsts
xor
add
cmp
iret
std
stc
and
nop
lea
call
push
push
mov
fiadds
lret
fistpll
mov
adc
cmpsb
imulb
cwtl
leave
jae
add
fildl
pop
imul
loop
and
pop
into
test
jno
xor
xchg
in
xchg
int3
stc
and
inc
orb
or
xchg
dec
ljmp
sbb
mov
roll
out
or
mov
dec
loopne
sbb
out
mov
or
mov
cs
aam
xchg
in
push
repz
or
aad
loope
jp
dec
xor
pop
jmp
rclb
adc
add
popa
jnp
adc
cmp
fistpll
mov
insb
dec
out
add
aaa
sbb
or
pop
xor
push
imul
ja
enter
outsl
sub
fld
mov
adcb
hlt
aam
jo
jne
mov
inc
or
sub
imul
xchg
jle
or
mov
push
cmp
jmp
mov
sbb
pusha
or
lods
popf
pop
out
bound
outsb
and
and
mov
or
das
pop
hlt
mov
and
sbb
cmpsb
aas
or
lret
insb
ffree
adc
push
push
pop
jne
dec
push
roll
aad
data16
xor
std
and
push
das
rcrl
mov
cmp
fmuls
es
bound
mov
mov
repnz
mov
mov
push
sub
adc
and
fdivrl
pop
jmp
and
inc
test
mov
xchg
pop
out
or
inc
not
arpl
sub
mov
add
test
loopne
pop
pop
push
cwtl
sbb
cmp
xchg
xchg
sarb
jbe
xchg
cmp
push
gs
jg
jmp
pop
dec
ret
cltd
imul
aam
sti
loope
jno
dec
aaa
pusha
popf
subb
cmp
in
lods
out
call
leave
dec
mov
mov
sub
rolb
mov
pop
imul
xchg
mov
lods
mov
mov
add
inc
mov
lcall
rcrb
sbb
cltd
pop
mov
add
ret
xor
mov
sbb
in
mov
movsb
lret
jns
sahf
leave
les
dec
add
repnz
inc
jno
adc
in
jp
ljmp
inc
out
dec
pop
loop
jo
in
lret
adc
xchg
pop
ljmp
and
mov
mov
in
orw
mov
stc
and
mov
jle
jo
xchg
push
fdivrl
shl
repz
fisubrs
repz
fbld
sahf
or
pop
inc
cmp
mov
push
rorb
gs
adc
jl
adc
in
loopne
xor
dec
pusha
jne
rorb
stos
cld
push
pusha
mov
nop
cld
scas
sarl
in
cmp
xor
xchg
ret
mov
cltd
or
push
add
enter
inc
aas
dec
mov
loop
lods
inc
pop
je
cltd
loop
lahf
pop
ja
orb
cwtl
repnz
leave
enter
loope
and
mov
jnp
pop
lcall
jb
stos
loope
sub
daa
mov
imul
lea
enter
outsl
mov
mov
fidivrs
push
dec
cmpsb
xchg
adc
movsb
dec
sbb
les
sub
ficomps
mov
mov
mov
sub
mov
and
pop
cmp
rcrb
xchg
cs
jge
cmp
pop
es
sub
notb
lret
fldcw
jg
out
push
outsb
gs
inc
aad
adc
xor
daa
in
jl
mov
out
inc
mov
int
cld
mov
sahf
dec
cmpsl
fisubl
and
and
jae
stc
data16
jp
mov
sbb
fmulp
dec
jne
fsubs
jnp
loop
and
pop
ret
and
and
mov
cmpsl
mov
dec
insb
mov
or
rorb
imulb
push
xor
test
sub
jo
sbb
pusha
mov
xlat
fnstsw
repz
roll
sti
in
imul
iret
and
pop
cli
xor
xor
sti
pop
xrelease
lahf
adc
loop
xor
sbb
jge
ss
dec
lcall
sbb
repz
cmp
push
and
les
fnstenv
sbb
mov
xchg
in
test
mov
les
xchg
sti
push
mov
mov
fisttpl
xchg
test
adc
jne
cwtl
jmp
fisttps
xor
loope
pop
imul
sub
dec
arpl
push
xor
push
daa
jnp
test
or
clc
les
das
jle
sbb
add
das
icebp
mov
and
or
addr16
adc
cmpsb
std
loopne
mov
mov
into
sub
or
jg
addr16
add
xorl
adc
adc
pop
mov
cmp
mov
sbb
cmpsb
data16
or
imul
sub
scas
or
enter
decl
push
in
popa
out
add
push
dec
loop
out
mov
mov
add
jns
adc
pop
gs
leave
sbb
nop
mov
repz
mov
fcomp
or
mov
jl
in
and
and
sbb
push
jns
and
call
pop
mov
xchg
in
xor
jp
push
adc
scas
ret
cmp
cmp
xor
push
icebp
dec
dec
faddp
inc
add
jne
sahf
jo
sbb
insb
fiaddl
pop
mov
aad
andl
lods
dec
xlat
out
aam
or
cld
aaa
addr16
add
scas
dec
jae
cmp
adc
popf
stc
stos
ss
push
or
dec
inc
test
xorb
adc
daa
mov
sub
xor
outsl
jg
pop
jns
sub
sarb
shll
cmp
fdivrl
push
xchg
subb
sbb
mov
adc
pop
fmul
fwait
movsb
jbe
cmp
adc
xchg
inc
fcomi
push
nop
pop
jne
inc
fisttpl
sahf
push
jne
sbb
inc
mov
mov
aaa
jo
movsl
inc
test
inc
test
nop
xchg
cmp
mov
inc
rorl
xor
mov
outsb
push
int3
test
mov
clc
inc
sbbb
inc
xor
nop
mov
stos
call
les
inc
mov
mov
arpl
insb
mov
fcmovnbe
lods
mov
enter
lea
int
mov
stc
sarb
mov
push
mov
scas
fldcw
into
jne
push
xchg
cwtl
hlt
movsb
mov
lcall
pop
sbb
int
mov
xchg
xchg
lahf
pop
sbb
lds
in
ljmp
and
call
imull
inc
std
cmp
xor
pusha
jb
mov
mov
mov
and
leave
mov
mov
shll
mov
push
sub
sti
jp
xchg
or
sub
push
xchg
lds
push
adc
cmp
icebp
stc
rcrl
push
mov
into
test
jmp
sti
jge
pop
cld
repz
pop
xchg
jle,pn
xor
inc
roll
int
cltd
mov
out
nop
xor
sbb
in
aas
fs
insb
xor
lahf
std
inc
or
movsl
mov
cmp
int3
push
mov
icebp
into
cmpsb
dec
ret
cs
jno
icebp
cltd
movsl
push
out
loope
xlat
ret
movb
cli
jp
inc
sub
jmp
xchg
lea
pop
sub
sub
rol
aam
push
inc
loop
call
das
or
dec
aam
xchg
mov
int3
pcmpgtd
mov
and
lahf
movsb
idivb
inc
lret
stos
out
jp
popa
or
mov
jns
repz
addb
out
push
ret
mov
or
adc
iret
xchg
jmp
sub
xor
pop
jb
mov
mov
xor
fninit
xor
outsl
mov
test
mov
sub
pop
jne
aaa
sbb
imul
rolb
sbb
dec
xor
aad
mov
mov
test
xor
iret
test
sbb
mov
es
jl
or
out
leave
in
testl
daa
ds
sub
xchg
sarl
out
dec
and
data16
adc
js
pop
inc
sub
adc
xor
mov
jmp
cmp
stos
outsl
rclb
pop
inc
pop
out
dec
scas
fnstenv
jne
xor
xchg
in
jae
divb
mov
nop
test
xchg
pop
push
lret
sti
movsb
lods
fidivrl
stc
or
cmp
push
and
testb
push
bswap
fcomps
into
dec
insl
fisttps
push
mov
insl
jle
pop
fistpl
push
add
scas
repnz
bound
jmp
sahf
sahf
jle
fmull
std
and
lret
ja,pt
cli
int
jnp
fidivs
fsubs
sbb
mov
aas
cmp
jnp
adc
cld
mov
add
decl
pop
cmp
shrb
jle
addr16
and
cmp
cltd
mov
ja
mov
out
daa
sub
jecxz
inc
ss
push
ss
int3
lods
or
cli
mov
cmp
add
jo
jle
adc
cmp
cmp
mov
add
orl
lock
jno
bound
repz
stc
sbb
scas
stc
push
xchg
iret
inc
mov
test
cmpl
mov
xor
push
pop
scas
xor
clc
mov
sti
dec
lea
mov
into
add
and
in
div
sub
sub
in
add
loope
jbe
and
mov
xlat
cmpsl
push
mov
cmpsl
or
dec
rcl
jle
popf
js
in
push
adc
jne
inc
mov
scas
sarb
jmp
aad
stos
dec
in
cmp
repnz
nop
mul
out
mov
push
iret
inc
jae
cs
test
sbb
pop
rolb
mov
add
loope
outsl
outsl
into
push
xor
xchg
cli
adcl
lods
mov
rcrb
xor
dec
ss
jmp
pop
mov
icebp
jp
in
je
sub
add
icebp
xor
xchg
pop
mov
mov
sbb
adc
pop
in
fcom
frstor
jl
repz
sbb
ds
xor
loope
dec
fiaddl
and
add
js
or
mov
push
adc
xor
fisubl
shlb
int
loopne
mov
shll
test
push
ret
rep
xor
test
movsl
add
xchg
rcl
test
ss
aad
and
add
ja
loopne
lahf
mov
aaa
xchg
faddl
dec
cld
cmc
jg
or
test
xchg
pop
lcall
test
neg
dec
dec
addr16
sub
fstpl
scas
add
lods
enter
mov
int3
inc
ljmp
aas
nop
adc
inc
push
popf
dec
cwtl
pop
pusha
push
adc
pop
mov
outsl
mov
adc
jl
xlat
add
ja
enter
inc
mov
cwtl
sahf
pop
dec
rcrl
sbb
or
int
adc
rorb
jae
fdiv
fidivrs
mov
pop
fmull
fildl
sbb
enter
lahf
jmp
mov
inc
in
dec
clc
dec
push
xlat
aad
das
iret
push
jl
popf
jle
lahf
mov
fimull
aam
and
cmp
scas
pop
ss
inc
fcoms
mov
testl
lahf
cmp
push
rcrb
push
cltd
mov
ja
add
lock
and
les
jle
xchg
jecxz
mov
push
in
xor
je
and
jge
arpl
decb
xor
mov
jb
divl
dec
pop
push
mov
shlb
lds
mov
add
sbb
hlt
mov
lret
das
popa
xchg
negl
mov
xor
xchg
scas
sbb
jae
hlt
pop
cmp
mov
addb
in
xchg
push
xor
xchg
loop
repz
sub
xor
dec
mov
cmpsb
xchg
or
jle
notb
aad
jbe
sbb
mov
mov
jg
ds
add
pop
push
sub
pop
and
and
insb
cmp
push
mov
shll
xor
lahf
mov
adc
testl
pop
inc
lret
mov
dec
fsub
pop
in
lock
sbb
rcll
pop
add
int3
xor
out
xor
ljmp
mov
sarb
jecxz
mov
jbe
out
pusha
jno
sub
cli
xor
jno
in
pop
push
push
repnz
mov
test
sbb
arpl
jecxz
xchg
xchg
xchg
adc
fisubrs
mov
popa
and
xor
cld
in
xor
pop
jle
mov
add
jle
and
enter
mov
test
jns
lds
or
rol
pop
push
dec
and
push
sbb
and
xor
into
fs
adc
mov
seto
add
pop
mov
and
jb
aas
nop
shl
adc
push
or
cld
add
in
sbb
fs
xchg
jns
arpl
pop
mov
cmp
mov
inc
xchg
add
lcall
cmp
adc
jb
cld
fidivl
pop
sub
shll
enter
sbb
mov
pop
fstpl
outsb
inc
xor
movsb
adc
xchg
inc
push
xchg
pop
std
popf
or
lods
xor
call
test
mov
pop
sbb
popf
push
mov
loop
sbb
les
add
nop
jle
repz
mov
cwtl
stc
cmp
pushf
fists
and
or
xor
negl
adc
xchg
shl
jle
scas
cli
in
pop
sbb
popf
cmovs
or
mov
dec
and
inc
push
xchg
ja
ds
lds
mov
data16
fildll
xor
dec
les
pop
jo
xor
fistl
mov
fnstsw
and
pop
xchg
jb
xor
lahf
add
jp
fbstp
in
sti
push
pop
dec
push
jae
adc
adc
rcl
cmp
inc
xor
aas
add
pop
sub
in
daa
mov
jle
add
xchg
repz
std
sub
push
push
jle
or
jb
mov
mov
add
mov
mov
mov
xchg
mov
xchg
mov
je
and
aas
loop
mov
test
cmp
data16
inc
cmpsb
negb
fnstsw
xor
test
sbb
in
mov
xchg
mov
or
fs
cmc
ja
sub
cld
ja
cld
aam
test
lahf
xor
loop
loopne
test
daa
lret
dec
es
fcomi
aas
mov
xchg
aaa
les
jb
pusha
push
xchg
dec
andl
push
shrl
adc
mov
sbb
movsb
mov
push
xor
test
push
repnz
test
and
lock
shlb
xchg
dec
add
sub
cmp
adc
mov
and
loop
into
mov
xchg
lods
mov
stos
adc
scas
dec
push
aam
pop
inc
adc
xorl
pop
cmp
cmp
inc
pop
mov
push
ljmp
jae
sub
inc
insb
cmp
ljmp
xlat
rcrl
icebp
and
shr
xor
add
pop
test
push
add
gs
in
fimuls
push
or
push
sub
js
cmc
test
push
xor
out
mov
or
loop
xor
mov
adc
popf
or
test
lret
mov
pop
je
mov
mov
out
and
or
or
fidivs
push
pop
mov
xor
push
mov
mov
lods
and
pop
aam
push
adc
pusha
aad
test
insl
nop
cmc
sub
ret
sbb
jg
arpl
add
lods
fmul
into
outsb
mov
aad
lock
xchg
pop
movsb
inc
inc
inc
arpl
inc
sbbb
lret
loop
mov
hlt
es
icebp
jmp
sub
add
dec
pop
std
mov
out
and
outsl
adc
mov
nop
xor
stos
jbe
or
push
xchg
jno
xchg
sbb
bound
hlt
push
mov
pop
cmp
mov
jbe
adc
xlat
jae
daa
icebp
loopne
outsl
es
into
movsl
int3
popf
outsl
xchg
sti
jle
push
xlat
inc
in
jbe
out
fsubr
sub
add
inc
sti
stos
sti
dec
iret
mov
lds
push
aaa
das
jmp
sbb
fwait
xchg
mov
jo
leave
int3
mov
jo
cwtl
adc
adc
lods
in
outsb
push
jecxz
sub
or
fnsave
push
push
cmpsl
add
push
sti
pop
inc
sar
and
mov
lret
cmp
dec
push
mov
stos
pop
icebp
aaa
mov
rorb
inc
out
aad
cltd
xchg
fcmovnb
xchg
andl
cmp
xchg
nop
ret
sub
pop
cmp
mov
jmp
outsl
mov
std
jmp
es
sbb
subb
mov
jge
aam
mov
adc
pop
ss
push
jne
sub
out
shlb
movsb
les
jnp
or
jmp
out
stos
sahf
nop
pop
hlt
push
lods
fsts
das
lds
arpl
push
pop
mov
shrb
aad
push
lcall
or
jp
xchg
pop
popf
jle
push
in
sub
aaa
aad
roll
cmp
mov
icebp
mov
ficoml
cmpsl
xchg
push
sub
jg
cmc
test
rcrb
pop
stos
add
int3
out
cld
popa
and
lea
cmovbe
and
pop
jno
sub
les
sub
and
xchg
and
fisubrl
sbb
adc
mov
cli
sbb
jnp
std
jl
repz
mov
mov
data16
mov
outsb
popa
mov
jne
movsb
ds
inc
andb
and
sbbl
xchg
fs
jmp
lods
loope
push
add
sub
jo
mov
sti
testl
fcom
pop
insb
push
daa
mov
les
push
push
mov
mov
jp
fadds
scas
jmp
in
sarl
inc
test
cmpsb
xchg
shrb
test
mov
xchg
out
mov
push
mov
fcompl
lock
imul
inc
out
imul
mov
pop
jl
push
flds
ret
shll
or
push
sub
and
sbb
ds
lret
addr16
movsb
inc
rolb
mov
sbb
aaa
sub
loopne
std
mov
push
push
jb
int3
hlt
push
push
sarl
cmpb
addb
mov
mov
xchg
sub
sbbl
push
xor
mov
aam
cmpl
lea
push
lods
aam
mov
dec
mov
aam
xchg
mov
stos
bnd
mov
push
loope
pushf
and
pop
fsubr
push
inc
push
pop
clc
or
jbe
sbbl
mov
sub
and
aaa
aas
xchg
inc
inc
jns
cmpb
repz
or
sti
aaa
subb
scas
dec
fdivr
jle
jo
xorl
aaa
cmc
push
jle
mov
enter
mov
mov
xchg
sub
aaa
incb
cld
int
inc
ja
in
sbb
add
jnp
bound
fisttps
fimull
fwait
xor
testb
iret
cltd
addr16
mov
jmp
pushf
sbb
pop
insl
cmc
jne
pop
je
add
jl
lods
jmp
or
or
sbb
iret
xchg
xlat
sbb
idiv
dec
push
mull
aam
jg
arpl
sub
scas
cmp
fdivs
jl
rcll
sarb
sub
xchg
mull
mov
imul
sbb
cmpsb
dec
inc
loopne
int3
mov
mov
jnp
test
push
mov
mov
push
xchg
in
cltd
xchg
pop
jae
sahf
add
pop
daa
and
fwait
lret
sbb
sub
cld
jmp
and
xchg
cmp
mov
push
sbbb
push
clc
dec
cmc
lahf
or
cmp
cmp
ficomps
gs
rcll
sbb
and
fistpl
jbe
mov
icebp
adc
jg
and
out
das
cmpsl
xchg
jmp
fs
mov
mov
mov
dec
xchg
pop
test
js
mov
and
aam
shlb
jmp
fsubrl
push
hlt
mov
sti
pop
sbb
mov
fs
leave
popl
fisubrl
rclb
dec
adc
pop
push
mov
pop
push
push
sbb
test
dec
mov
and
frstor
pop
test
clc
inc
mov
xor
out
xor
dec
adc
xchg
dec
mov
mov
push
sub
leave
add
mov
inc
mov
test
pusha
lea
fisubl
shr
ret
xor
push
add
cltd
lods
adc
jno
dec
cltd
aas
or
pop
xor
inc
and
mov
xchg
popl
ret
jle
cmp
jo
ss
jge
lret
add
loop
fcoms
and
mov
iret
dec
cmc
into
ret
jle
lea
dec
xchg
mov
jp
aas
mov
in
mov
pop
adcb
mov
fstl
pushf
loopne
jmp
flds
or
dec
fdivr
addr16
push
add
fsubp
nop
jl
pop
xor
xlat
scas
push
or
scas
mov
in
call
inc
lret
and
adc
and
sbb
add
mov
dec
xor
xor
scas
sbb
mov
adc
sbb
data16
into
mov
cmc
icebp
mov
jb
push
jl
out
pop
lods
outsl
loope
dec
mov
in
arpl
push
mov
nop
cmp
pop
repnz
xchg
loope
pop
push
mov
mulb
fsubrl
test
adc
in
xchg
mov
and
mov
fwait
add
mov
in
cmp
inc
and
xchg
xchg
add
jbe
ds
pop
mov
cltd
jle
mov
lods
xchg
out
lods
add
sbb
cmp
adc
inc
pop
and
fnstsw
cmp
cltd
xchg
outsl
dec
xor
and
add
clc
cmpsl
push
insl
popa
adc
xlat
leave
and
inc
test
cld
mov
leave
fidivrl
mov
and
in
out
divb
jmp
sbb
pusha
mov
jno
adc
clc
aam
push
sub
bound
jae
fcoms
mov
lcall
mov
fsubs
addr16
mov
mov
int3
pop
rcrl
cmc
sub
lret
enter
mov
adc
movsl
faddl
xchg
sub
fcoms
lds
imul
adc
fbld
push
inc
int3
icebp
adc
push
dec
ja
sarb
dec
seta
xchg
rcrl
cltd
jne
rcrb
les
imul
cmp
push
jns
inc
out
nop
test
inc
sub
lea
push
add
les
jp
fsubrs
pop
cmp
iret
clc
xorl
xor
mov
push
mov
movsl
xor
mov
mov
xchg
test
jecxz
mov
sbbl
adcb
int3
sbb
lahf
inc
les
jle
add
out
les
mov
outsl
fmuls
mov
xor
pop
cmpsb
xor
lds
and
dec
clc
ljmp
mov
mov
insb
mov
arpl
orl
insl
cmpsl
pop
rcrl
mov
push
adc
nop
fldenv
vcvttps2dq
sahf
sbb
out
stos
out
packuswb
adc
cmp
cmp
xlat
in
xchg
pop
inc
sub
outsl
cmpsl
stos
mov
xchg
or
das
mov
cmp
sarl
xchg
adc
pop
popa
aad
shlb
icebp
sub
mov
and
popa
push
das
ficoml
xchg
and
pop
ljmp
insl
shl
pusha
pop
adc
xchg
ret
cmpsb
inc
lahf
jg
in
cwtl
ficompl
sub
cmp
mov
xlat
aaa
pop
dec
ret
outsb
in
add
data16
jnp
push
test
add
xchg
xor
icebp
push
pop
out
sti
fs
lcall
jo
fs
lods
sbb
jl
aaa
dec
push
xor
es
dec
xchg
into
push
lock
adc
scas
ss
sbb
add
cltd
push
outsb
ret
jb
push
cwtl
adc
add
leave
jne
adc
or
cmp
into
imul
js
xlat
jno
addb
in
insl
hlt
dec
and
aaa
insb
inc
data16
imull
sub
andb
scas
push
test
cmpsb
xorb
sub
jmp
push
je
pushf
cltd
adc
add
xchg
mov
clc
sub
aas
test
ret
clc
inc
jb
mov
xchg
lea
cmpsb
int3
fsubs
imul
jl
sub
dec
adc
hlt
inc
les
inc
cmp
in
rcll
adc
sub
cmp
aas
or
mov
dec
fcmovu
hlt
mov
xchg
out
mov
jno
insl
lret
cmp
pop
cmpsb
xor
adc
out
mov
loope
arpl
mov
jb
pusha
nop
into
loope
add
cld
push
ficoml
nop
bound
int
in
fwait
and
outsl
mov
shl
push
insb
into
aaa
subb
adc
dec
push
add
xorl
or
pop
lcall
ret
lcall
and
cmp
data16
in
std
add
mov
xchg
push
sub
out
sbb
adc
xchg
popa
fnsave
inc
cmpsl
lahf
adc
sbb
cmp
sub
aam
jle
cmp
dec
sahf
mov
hlt
dec
insb
out
cmp
lds
ss
mov
push
mov
inc
and
mov
movsb
or
pop
jge
pop
jo
jae
imul
outsl
clc
xor
push
jae
xor
cmp
daa
cmpsl
mov
popa
inc
out
sbb
xchg
push
call
pop
lods
inc
or
test
movsl
out
lret
stos
mov
cmp
shr
out
adc
mov
lods
enter
mov
jnp
imul
xor
cli
jge
mov
nop
cmp
add
fcom
pop
jno
pusha
shrl
enter
push
mulb
xchg
jno
insb
aaa
out
shll
add
push
in
shrl
inc
aas
mov
cs
in
lcall
aas
xchg
push
clc
pop
fldl
push
xchg
jmp
or
out
mov
cld
or
test
int
jl
lret
cmp
jb
sub
rcll
ret
adc
jmp
mov
sub
adcb
fs
sub
or
rcrl
cmc
xor
pop
mov
inc
pop
fidivrs
sbb
cmp
cmp
mov
xor
in
adc
push
mov
xor
inc
mov
into
in
fisubrl
enter
push
and
push
shrb
adc
arpl
pop
push
ja,pn
adc
jecxz
jl
inc
xor
outsl
shr
sbb
lret
inc
out
jp
xor
pop
adc
es
mov
sbb
aam
jo
add
sbb
mov
mov
fiaddl
lret
js
sub
or
adc
scas
cs
cmc
inc
cmp
mov
arpl
outsb
sub
add
xor
cs
sbb
xor
addr16
xor
scas
fcoms
loop
ljmp
aam
add
dec
sub
pop
cs
mov
adc
out
jge,pt
dec
jne
js
fmull
mov
mov
leave
sub
push
icebp
popf
aad
xchg
mov
leave
in
outsb
inc
pop
add
andl
sarl
inc
test
fwait
xchg
aas
repnz
push
mov
movsl
jbe
fiaddl
iret
jb
mov
mov
movsb
int3
mov
and
and
in
icebp
xchg
xor
or
jbe
mov
cmp
mov
sub
loop
jecxz
arpl
cwtl
mov
adc
aaa
mov
push
jno
sub
shlb
into
sahf
push
nop
inc
cmp
mov
daa
int
cmpsl
std
filds
xchg
pop
andl
mov
ja
sub
jbe
sub
adc
pop
mov
loop
hlt
inc
cmp
mov
das
mov
in
arpl
cmp
mov
bound
xor
adc
xor
inc
test
arpl
daa
aam
mov
rorb
jb
popf
cmp
sbbb
jns,pn
outsb
enter
sub
dec
imul
pushf
xchg
daa
mov
push
mov
flds
fstpl
jge
jp
pusha
jb
insl
inc
sub
mov
fbstp
addr16
movsb
int
roll
movsl
dec
int
test
dec
shrb
jecxz
cmc
jae
lret
inc
ret
cmp
xchg
sub
subl
out
fists
js
xchg
ljmp
xor
jle
inc
je
push
rcrb
es
test
xor
das
adc
addr16
add
movb
push
xchg
stos
jno
subb
xor
fs
mov
xchg
pop
in
fistps
cld
sbb
inc
stos
inc
add
cmpsb
in
mov
loop
test
pushf
or
sbb
out
sub
xchg
mov
add
or
lods
sti
add
scas
bound
xor
iret
cli
push
jb
dec
loopne
xchg
clc
fsub
into
mov
cmp
repz
dec
out
std
stos
stos
into
jo
repz
add
xchg
adc
fdivrs
call
and
jb
or
mov
ret
mov
add
and
aaa
fldl
sbb
cmp
outsb
inc
cmp
pop
bound
sub
sbb
out
xchg
jg
bound
sub
pop
ds
fsub
or
out
flds
out
mov
or
push
pop
dec
sub
cmp
sub
cmp
rorl
mov
pop
jecxz
pop
in
push
rcr
dec
repz
push
fcomps
pop
out
mov
fs
cmp
dec
pushf
xchg
pop
jo
cmp
in
lcall
xchg
jbe
test
daa
push
mov
ljmp
sarb
loopne
in
insb
shll
shlb
and
cmpsl
inc
adc
jae
cltd
inc
in
ret
mov
dec
jb
sbb
mov
fsin
shr
dec
fs
shrb
sbb
mov
mov
pop
dec
pop
fmuls
fwait
or
das
into
repnz
xchg
lock
aaa
pop
mov
cmpsb
aam
xor
cs
xchg
das
adc
or
mov
lods
pop
push
imull
cmpsb
push
cltd
mov
test
mov
push
dec
xor
or
dec
insb
orb
dec
push
vpavgw
mov
adcb
stc
ret
lret
icebp
aaa
fwait
inc
cmp
sbb
sub
lret
lock
shld
push
ret
in
jno
jb
add
lret
mov
jo
sbb
movhps
cmp
mov
add
jne
cmp
cmp
jns
adc
sub
sbb
dec
jmp
or
xrelease
cmpsl
pop
sbb
lret
shrl
cmpsl
fnstcw
add
dec
sbb
imul
inc
xor
aad
mov
call
popl
and
jmp
mov
mov
int
and
mov
mov
inc
xchg
into
mov
and
in
test
js
sbb
add
jmp
fisubrs
ja
or
lock
fcomps
inc
pop
aam
push
es
jle
inc
fldl
xchg
mov
lock
add
pop
iret
xchg
dec
out
dec
lret
call
add
adc
inc
sub
fwait
dec
lock
fcomip
add
mov
xchg
movsl
test
jl
push
jle
lret
push
test
jecxz
sbb
test
lahf
fcompl
scas
lret
sbb
std
mov
sub
inc
scas
sbb
lds
icebp
mov
fisttps
mov
cltd
fisubl
imul
push
rorb
mov
mov
lea
stc
add
push
or
cmpsb
xor
mov
cmp
sbb
cwtl
push
in
daa
or
ljmp
es
or
mov
mov
and
push
inc
aad
ja
xor
push
push
je
jmp
pop
jae
add
jl
push
mov
rcll
aas
mov
xlat
adc
xchg
fldenv
test
jge
add
fldcw
push
mov
xchg
inc
out
js,pn
cwtl
pop
pushaw
jno
sbb
fwait
imul
mov
jle
cld
mov
push
shlb
xchg
fbstp
jmp
mov
mov
or
mov
pop
jecxz
hlt
mov
mov
add
push
orl
push
sbb
sahf
inc
mov
in
jns
ds
sahf
mov
lods
mov
jp
push
jb
sbb
lret
insl
out
bnd
testb
pop
and
mov
fstpt
jns
adc
adc
cmp
jb
mov
std
xchg
xor
cltd
adc
cmp
sbb
inc
push
movsl
testb
push
notl
aaa
push
leave
inc
imul
neg
sub
xchg
jge
mov
jge
sub
push
lods
incl
push
movsl
or
mov
mov
cmp
push
lock
insb
stc
and
push
or
xorb
pop
andl
inc
sarl
add
das
push
dec
and
cltd
dec
inc
cmp
stc
ss
inc
jno
repz
xchg
xor
sub
jno
xchg
push
cmp
lret
cmp
sub
mov
outsl
pop
and
int3
push
sbb
push
rcl
mov
pop
addr16
and
xor
iret
mov
into
les
clc
add
imul
fcomi
jg
out
ror
movl
sbb
andl
mov
add
in
mov
xchg
mov
mov
out
call
das
dec
loope
repz
xor
dec
cmpsl
scas
dec
jge
sub
std
mov
out
and
sti
push
sbb
mov
mov
mov
jnp
popf
ret
pop
sub
ljmp
outsl
testb
xchg
aas
jae
push
xchg
cmp
push
fnsave
popa
aad
add
out
mov
cmpsl
arpl
cltd
inc
push
repz
dec
lret
sbb
in
push
and
push
fcoml
dec
in
lea
test
cmpsl
nop
iret
in
pop
std
mov
mov
test
leave
mov
jae
jbe
mov
cmpsl
cwtl
lahf
sbb
push
sub
jecxz
pop
inc
add
or
or
out
xchg
faddl
imul
repnz
sbb
out
addb
inc
popa
push
sti
push
hlt
getsec
inc
add
add
and
mov
push
das
sti
adcl
or
jno
lea
lods
mov
and
test
shr
mov
aam
insb
xor
inc
add
rol
cs
pop
addr16
roll
data16
ljmp
movsb
insb
push
cmp
and
dec
rolb
andl
push
pushf
cmp
push
xor
loope
pop
sti
fucomp
xlat
arpl
lds
lock
adc
cwtl
rol
ficomps
mov
loop
inc
sbb
add
adc
xorb
andl
subl
push
inc
loope
push
aad
fmull
jecxz
rcrl
clc
cli
clc
push
and
cmpsl
xor
sub
dec
icebp
mov
stos
jbe
inc
push
mov
push
dec
cmpsb
adc
and
dec
cs
mov
mov
xlat
lret
pushf
mov
add
sub
insb
mov
fdivrp
fcoml
add
jecxz
mov
mov
ret
in
push
mov
rorl
imul
out
and
push
adc
xor
int3
out
xchg
mov
mov
push
enter
cmpsb
imul
pop
pop
sub
cli
push
cmpsl
jne
xchg
cld
enter
jo
faddl
xchg
sbb
mov
add
sbb
sub
or
inc
push
fcompl
mov
inc
sub
push
test
inc
lret
xor
mov
xchg
mov
jp
cmp
pushf
lcall
cmp
mov
sbb
pop
adc
or
enter
in
test
mov
push
call
ljmp
xor
mov
mov
es
loopne
ror
inc
call
mov
push
repz
add
xchg
or
push
inc
jp
into
adc
sub
std
pop
fsubrp
ss
sub
frstor
sbb
mov
lahf
sbb
cmp
sub
jl
inc
jno
mov
les
jecxz
lret
jbe
xor
ret
jnp
popf
cmpsb
or
dec
cmp
or
mov
in
popl
loopne
and
fnstenv
cmpsl
cs
cmp
cs
popa
sbb
es
pop
cwtl
dec
xchg
pop
sti
pushf
dec
inc
out
nop
push
xor
xchg
xchg
mov
cmpsb
ljmpw
and
out
dec
mov
lock
loope
xchg
pop
sbb
sub
dec
jne
adc
shr
mov
fxch
pop
scas
dec
sbb
add
add
adc
scas
xchg
sbb
lret
adc
sbb
aas
adc
pop
cmpsb
movsl
xchg
mov
loope
jp
and
xchg
xchg
out
jmp
fcompl
mov
pop
mov
roll
or
arpl
test
sbb
insb
add
movntq
mov
adc
shl
jno
outsl
push
adc
push
aas
out
inc
fimuls
call
mov
jg
jg
pop
cwtl
ds
cmpsl
test
xchg
xchg
jp
mov
xlat
in
cmp
jae
cld
shlb
mov
lds
pop
and
xchg
dec
cmc
ficoml
aam
push
cmp
std
cld
shl
lret
jecxz
jge
mov
outsb
divl
jno
lods
test
inc
es
fwait
sti
pusha
movsb
adcb
subl
loopne
movsb
ds
lahf
in
adcl
sbb
add
and
xchg
pop
push
ror
sbb
push
jle
dec
loop
pop
fldl
les
push
aas
jne
sahf
add
sub
test
mov
xchg
out
pusha
xchg
sub
jl
sbb
in
aad
insl
xor
dec
int
daa
fcomps
cmpsb
out
push
lret
popa
push
mov
stos
jnp
jnp
mov
pusha
jo
test
adc
pop
xchg
sarl
xor
jp
push
xor
bound
sbb
fistpl
in
sti
or
sbb
add
cmp
ljmp
jecxz
pop
movsb
jle
fwait
jmp
or
cltd
dec
iret
push
pop
fsubs
xor
imul
mov
jmp
aas
pusha
leave
and
cli
jge
mov
ficomps
imul
fimull
mov
dec
jbe
or
inc
ficompl
adc
or
cmp
cld
mov
in
sub
mov
inc
jo
out
icebp
testl
adc
rorl
bound
lds
mov
in
jl
lcall
push
xchg
or
jecxz
jecxz
inc
xor
mov
iret
cld
repz
mov
xchg
sbb
rcr
pop
ljmp
out
sbbl
popa
repz
out
or
adc
lret
clc
mov
mov
pop
das
mov
cli
sub
inc
or
cmp
cmp
sbb
lock
mov
mov
loop
cmpsl
xchg
push
fwait
imul
push
jb
mov
sub
adc
popl
mov
dec
inc
ret
test
xchg
and
lret
pop
pop
out
pushf
xchg
xor
inc
lret
xchg
fimuls
mov
aaa
mov
orl
xorl
jl
cmp
or
lods
mov
and
adc
xchg
and
les
pop
jecxz
shr
divb
or
outsb
pop
push
imul
inc
jne
xor
sbb
dec
add
test
sbb
add
scas
mov
outsl
loop
mov
push
mov
add
xor
xchg
push
lds
ds
xchg
lret
sub
xchg
fwait
dec
dec
cs
stos
mov
stc
fldcw
xchg
xchg
pop
cmpsb
popf
push
and
jecxz
js
insb
pop
out
fdivl
fldl
pusha
shlb
sub
mov
loopne
rcll
das
add
inc
mov
cmc
mov
clc
arpl
repnz
stos
push
aas
aaa
jp
mov
fwait
icebp
in
cmp
daa
jb
xor
jns
test
mov
test
or
inc
fsub
popl
sbb
in
sub
aas
shlb
rcrl
outsb
push
xor
inc
popa
jl
outsb
lea
out
addl
cmc
mov
mov
test
fcomps
or
mov
les
iret
jns
dec
or
sbb
dec
or
adc
lcall
mov
sub
cli
inc
dec
test
sub
adc
scas
test
rolb
inc
int
cmc
xchg
cwtl
and
fcmove
pusha
cmpsl
bound
aas
jno
outsb
inc
sar
push
push
mov
sahf
jno
xor
jmp
xchg
xor
cwtl
xchg
lcall
inc
daa
dec
push
xchg
cli
cmp
sbb
test
mov
sbb
loopne
adc
add
rcll
mov
push
dec
stos
inc
pop
mov
outsb
xor
mov
and
and
push
dec
adc
leave
int3
clc
sbb
lea
je
in
push
or
test
xor
xchg
push
test
roll
popf
es
arpl
popf
icebp
fstpt
dec
nop
jge
lret
add
mov
popa
aaa
pusha
out
mov
imul
subb
lods
leave
dec
mov
test
aaa
adcb
enter
popa
loop
dec
hlt
jp
mov
push
mov
aaa
in
mov
mov
lret
sub
imul
dec
push
jecxz
testb
or
inc
jo
dec
jge
add
fsubr
mov
les
cmpsb
cs
aas
adc
mov
mov
mov
aaa
loopne
mov
loope
mov
into
mov
adc
adc
cmc
jne
mov
push
call
sub
xor
ficoms
sbb
mov
xor
mov
add
sub
aad
and
pop
dec
iret
adc
xchg
repnz
xor
cmpsb
arpl
scas
aam
ljmp
fcmovnu
pusha
imul
ret
pop
sbb
and
scas
in
mov
push
movb
popa
pop
xor
ret
pop
sub
hlt
pop
and
ret
out
adc
xchg
inc
lret
ds
dec
outsb
cmp
mov
int
xchg
xor
leave
mov
nop
pop
add
cmpsb
pop
cmpb
int3
cmp
cld
js
sub
and
dec
sub
adc
insl
xchg
fisubrs
cmp
cmp
sbb
call
jmp
xchg
mov
out
rcll
je
bound
xor
inc
test
lea
push
je
ret
lret
movsl
add
jge
sbb
shll
sub
mov
push
mov
pop
or
jno
lahf
push
xor
inc
push
das
lods
sbb
add
inc
out
stc
insb
loopne
int3
fistps
clc
mov
adc
mov
push
imull
shr
aaa
xor
sbb
cwtl
and
loopne
nop
ja
repz
cmpps
adc
jns
repnz
stos
xchg
aam
or
clc
push
jb
and
dec
sbb
rclb
and
sub
hlt
push
cmpb
mov
fsub
scas
cmp
mov
sub
cmpsl
push
andl
daa
mov
sbb
ficoms
pop
inc
adcb
sbb
mov
gs
outsb
lret
dec
xchg
mov
fisttpll
or
pop
mov
in
adc
shrb
std
imulb
sub
pop
pop
or
icebp
mov
sub
jnp
ja
daa
mov
push
stc
loope
adc
or
adc
ret
shrl
test
insb
fs
push
xor
dec
mov
mov
cmp
fsubl
or
fisubrs
jbe
dec
mov
xchg
cmc
pop
push
push
jp
cmp
adc
or
jbe
cmpsb
pop
lods
out
cmp
dec
orl
xor
jle
xor
push
mov
lock
pop
sahf
pop
mov
jmp
faddl
aam
mov
shll
subb
cs
gs
imul
fcoms
mov
imul
mov
shrb
add
dec
imul
pop
int
add
imul
sbb
test
jmp
pop
inc
sub
out
xchg
mov
xor
push
dec
mov
outsb
lahf
test
mov
xorl
out
push
mov
jae
mov
add
popa
orl
js
int3
insb
xchg
inc
xor
lods
inc
fisubrl
lcall
xchg
jg
push
loopne
cmpsb
cmpl
out
cli
cmc
cmp
and
fnstenv
or
popf
mov
addb
mov
xor
jae
jp
repz
test
stos
pop
sbb
fldt
add
or
rorl
pop
add
fbstp
loop
test
aaa
push
daa
pop
inc
jbe
cmp
push
jbe
call
lret
and
out
repnz
dec
cld
sbb
pop
push
aam
mov
mov
sahf
pop
cmp
xor
rcll
into
adc
pop
sub
gs
jae
insl
mov
dec
les
and
ret
nop
mov
rolb
dec
or
in
sbb
pop
mov
outsb
lds
insb
in
shll
or
push
dec
sbb
lcall
inc
mov
add
lea
dec
and
ljmp
shll
movsb
cmpsb
adc
mov
cmpb
push
or
xor
lds
int
insl
mov
push
aam
or
adc
test
test
aad
add
les
sub
sub
xchg
sbb
xor
or
out
push
sbb
pushf
or
and
add
xchg
push
lahf
mov
stos
outsl
adc
daa
inc
imul
jbe
dec
inc
popa
lret
dec
pop
mov
rorl
mov
sar
and
push
mov
je
mov
fwait
sbb
sarl
mov
xchg
jnp
mov
dec
push
xor
pop
mov
push
xor
nop
test
pop
push
push
ja
shlb
add
lret
scas
popa
mov
rol
pop
mov
cmpsl
sahf
cmp
and
inc
add
cmp
push
lret
adc
mov
sub
int3
ja
add
push
negl
shll
adc
and
add
jge
jno
leave
cmp
jne
popfw
arpl
push
add
push
icebp
xchg
jns
testl
int
jl
les
cld
fwait
xor
pop
cmp
mov
sbb
pusha
pop
add
sub
sbb
push
lret
cmc
inc
inc
jge
cwtl
adc
mov
fnstcw
or
rcrl
mov
in
popa
and
aad
stos
shll
xor
sub
ja
std
ds
mov
pop
shl
clc
sbb
pop
fstl
fimuls
dec
inc
xchg
divb
inc
and
neg
pop
ret
js
xlat
addr16
es
jbe
cmp
call
add
data16
outsl
xor
pop
mov
hlt
xor
cmp
aaa
xchg
icebp
jg
in
arpl
mov
sbb
or
pop
jmp
jnp
outsl
add
movsl
lods
pop
cwtl
into
mulb
ret
insb
mov
jne
ret
mov
rcrl
gs
cmp
sarb
sub
mov
or
inc
jle
mov
and
not
mov
je
lcall
jb
scas
push
mov
aam
scas
and
sahf
xchg
mov
mov
std
in
fistpll
lret
gs
pop
hlt
insl
gs
ret
sahf
mov
fwait
lock
cmovno
call
inc
faddl
or
insb
push
dec
cltd
fwait
cwtl
or
fcompl
jns
cltd
or
mov
mov
sub
popf
repnz
outsl
stc
ret
cs
in
scas
in
inc
jne
cmp
add
or
mov
mov
jnp
xchg
cmp
fadds
adc
les
jbe
inc
test
push
jecxz
mov
mov
or
or
movsw
sub
xchg
pop
sub
xor
or
dec
pop
mov
mov
imul
and
loopne
push
das
adc
cmp
inc
cmc
sarb
test
push
xlat
adc
leave
test
mov
hlt
mov
xchg
out
xchg
xor
add
adc
les
xchg
sbb
cli
das
add
and
add
jg
out
or
leave
fisubl
sbb
sbb
mov
sub
lods
xor
cmpsl
or
or
adc
ret
pop
adc
xchg
or
insb
mov
xchg
adc
cmpsb
pop
dec
cmp
cltd
ret
mov
pop
sbb
sbb
mov
int
inc
lahf
ffreep
sbb
dec
roll
sbb
clc
insl
test
scas
mov
nop
call
std
add
sti
adc
dec
add
and
add
icebp
fwait
inc
dec
inc
clc
mov
sub
mov
mulb
or
push
push
ret
sbb
push
mov
mov
xchg
xor
cmc
sbb
sub
push
and
mov
stc
push
data16
push
mov
and
sahf
lret
pop
shl
xor
jb
cmp
mov
insb
cmpl
add
mov
push
cmp
sbbl
mov
cli
negl
cmp
or
push
xchg
push
add
pop
shl
mov
xor
pop
cltd
mov
popa
idiv
sar
nop
xchg
dec
pushf
xchg
xorl
movsb
or
sub
jl
cmp
aas
test
jle
and
nop
insb
std
int
imul
repnz
les
add
dec
mov
mov
cmpsb
arpl
mov
fadds
flds
testb
lret
ljmp
or
mov
or
push
or
pusha
mov
outsl
adc
test
pop
dec
test
in
cld
pop
mov
test
dec
lret
pop
iret
dec
xchg
scas
in
mov
mov
fmuls
das
mov
push
test
out
into
movsl
into
xchg
clc
cmp
test
in
mov
in
xchg
das
addb
xor
dec
mov
xor
repz
lret
inc
call
cmc
leave
aaa
lock
ljmp
and
sbb
bound
lock
repnz
fninit
pop
mov
jnp
push
mov
sbb
xor
add
andb
leave
mov
mov
push
insb
outsl
push
cmpsl
adc
fcoms
ds
into
cld
mov
sub
mov
das
adcl
negl
out
jge
cmpb
sbb
lods
inc
push
inc
lods
sbb
stc
mov
xor
pop
and
push
lock
data16
enter
or
leave
inc
imulb
mov
mov
push
xor
call
lret
popa
xor
repz
cmp
lcall
inc
loopne
ss
lret
dec
xchg
cmpsb
xchg
cld
adc
je
ror
fs
js
sarb
scas
out
sub
andb
loope
push
sub
cmc
orl
pop
pop
scas
loope
leave
fsub
out
push
cmpsb
rclb
test
rcr
cltd
sbb
lods
sub
sbb
lods
inc
push
out
sub
or
xchg
jns
mov
jne
test
jo
arpl
iret
jp
jl
std
outsb
out
mov
inc
test
push
cmc
cltd
movsl
and
jp
inc
mov
mov
xchg
test
inc
pusha
push
or
inc
jne
cli
inc
push
jns
sub
mov
jl
push
mov
stc
jg
popa
repz
scas
push
or
sub
test
fdivs
lods
pop
repnz
xchg
dec
or
rclb
fcompl
mov
pop
push
and
xor
dec
gs
xchg
mov
xchg
adc
out
std
push
xchg
call
int
pop
out
imul
sbb
sbb
mov
ja
mov
add
xor
sub
pop
push
pushf
push
and
pop
adcl
cmp
dec
std
push
xor
in
lods
movsl
adc
hlt
mov
lods
mov
pushf
into
shl
fisubl
mov
adc
ds
mov
cmp
int
daa
xchg
sbb
xlat
bound
stos
es
pop
fwait
add
enter
loop
add
sarl
in
xchg
in
loop
and
pop
cld
push
add
cmp
push
std
lahf
jg
jbe,pt
and
jge
sbb
aam
fistl
sarl
sbb
cmp
dec
add
sti
jge
jle
scas
push
test
ja
inc
push
cli
push
pushf
mov
mov
push
dec
cmp
dec
jne
outsb
adc
rcrl
add
xor
aaa
ss
out
jecxz
mov
pusha
xchg
push
scas
std
js
cmp
or
add
test
iret
add
les
int
fldenv
sub
mov
lock
push
shll
jl
test
xchg
in
lret
and
inc
add
or
rclb
inc
pop
mov
fs
dec
ret
mov
pop
mov
aas
add
xchg
mov
sbb
outsb
addl
adc
adc
xor
jl
sub
cmpsl
lret
cld
das
ljmp
ds
scas
sub
mov
add
sti
or
stos
inc
lods
mov
aas
sbb
inc
adc
outsl
push
in
mov
je
xchg
mov
insw
jge
insb
adc
jbe
sbb
jg
cmp
push
mov
out
ss
vpermilps
mull
xchg
sti
xor
in
ljmp
test
mov
add
push
xor
addr16
xchg
les
pop
dec
xor
adc
ljmp
inc
call
dec
cmc
xchg
push
mov
cmpsb
pop
addr16
inc
cmc
adc
lods
sbb
inc
mov
sub
cmp
inc
imul
jne
lret
xor
scas
sub
jmp
sbb
icebp
lret
mov
and
pop
dec
in
jno
push
dec
sbb
int3
gs
pop
lcall
movsl
out
js
out
cmp
dec
mov
gs
xchg
in
pusha
jne
mov
add
aas
jns
push
adc
rcrb
jge
data16
adc
dec
es
mov
mov
hlt
jmp
sbb
leave
push
cltd
test
loope
push
mov
jae
out
cs
and
dec
dec
addr16
xor
ret
push
imul
push
and
lds
aam
add
adc
xchg
ljmp
mov
cmp
pop
scas
decl
and
repz
mov
iret
imul
push
lods
inc
in
mov
xlat
orl
jmp
sahf
push
lock
sub
mov
mov
inc
or
sbb
hlt
xchg
add
jge
aaa
icebp
popa
es
xor
adc
adc
mov
or
fs
xor
jo
test
sbb
push
lds
lods
mov
insl
mul
mov
icebp
clc
mov
iret
incl
sti
das
cmp
cmpsl
stos
fdivrl
leave
inc
scas
jno
adc
or
or
fmul
std
fsubs
stc
xchg
pop
adc
bound
pushf
mov
jno
andl
and
or
xchg
inc
mov
aas
aaa
sub
scas
cwtl
mov
daa
mov
movsl
inc
addr16
enter
jbe
lahf
daa
mov
int3
and
push
sbb
inc
pop
int
push
jmp
daa
js
fwait
push
xchg
mov
cmc
cs
sti
xchg
sti
cmp
sub
cmpsl
ret
sti
outsb
loop
cmc
push
in
js
stos
push
cmpb
cmp
xor
pop
out
int3
or
add
cmpsl
cltd
xchg
jmp
scas
xchg
cmp
jns
fwait
and
loopne
mov
push
cmp
add
inc
repnz
mov
or
cmp
lods
out
insb
lea
sub
sub
jge
mov
idiv
jge
and
lods
or
mov
jge
add
pop
popf
and
insb
jns
loopne
std
pop
or
ss
lods
std
xchg
mov
lahf
loope
push
ret
mov
jbe
xor
repz
mov
inc
cmp
jae
add
xchg
mov
sbb
and
and
repz
fucomp
xchg
cs
sub
in
sub
sti
lcall
inc
jne
test
sub
fisttpl
rolb
cmpl
rorb
pop
cld
and
or
pop
xor
dec
imul
cmpl
fisttpl
or
add
sarl
jmp
jno
push
and
adc
sub
mov
jl
inc
sub
mov
jb
xchg
sbb
sbb
repz
aas
xor
dec
rorb
ss
popa
mov
push
jp
pop
ficomps
std
xor
call
mov
addl
inc
clc
adc
sub
xchg
fbstp
sar
js
ss
adc
lock
out
fwait
mov
pop
adc
push
push
inc
int3
sahf
ficoms
inc
xlat
lahf
in
in
xor
sahf
xor
fldl
pop
ja
test
shrb
jmp
aas
stos
lret
iret
roll
pusha
pop
call
push
movsl
xor
mov
dec
and
mov
sbb
dec
dec
pop
or
pop
pusha
stos
push
inc
in
and
lret
mov
dec
mov
add
out
movb
sarl
sub
add
cwtl
mov
in
ljmp
data16
add
insw
sahf
mov
push
and
loopne
int3
mov
jl
es
xor
loop
int
in
push
sbb
mov
sbb
add
jnp
rol
pop
addr16
cmp
shlb
pop
in
mov
add
push
and
sbb
push
fisubrl
ret
mov
jns
dec
movsl
std
js
jae
mov
popa
jge
int3
xor
testl
add
dec
xchg
jge
ss
jae
inc
sub
xchg
or
int
dec
xor
std
jle
jg
mov
mov
fisubs
sbb
or
enter
xor
pusha
push
insb
xchg
mov
jp
or
cli
fisubs
or
dec
push
cmp
mov
pop
out
sbb
sub
xor
or
ficoml
and
mov
inc
test
sub
outsb
clc
inc
push
xchg
xchg
addr16
clc
rcl
mov
mov
mov
mov
jmp
mov
out
stos
adcb
and
sub
pop
inc
inc
push
aaa
dec
add
sub
inc
and
repnz
sbb
pushf
pop
jns
mov
ja
cmp
xor
lods
dec
xchg
arpl
and
push
mov
popa
jo
xor
or
cmp
out
dec
dec
movsb
inc
or
or
push
dec
movsl
jecxz
rcrb
and
push
sub
pop
mov
inc
in
inc
test
sbb
movsl
movsl
pushf
es
add
adc
out
insl
pop
sbb
psraw
push
or
mov
notl
punpckhwd
xor
stos
std
xchg
xchg
iret
mov
mov
inc
xchg
mov
add
and
jno
adc
add
andl
xchg
movsb
gs
aas
arpl
js
mov
imull
mov
out
data16
xor
mov
frstor
mov
insl
xor
xlat
or
mov
or
dec
jl
jge
addr16
sub
inc
aaa
push
mov
jo
mov
sbb
mov
enter
xorl
nop
sbb
adc
pop
das
sahf
ds
push
cltd
sbb
jle
dec
gs
fwait
or
fs
push
mov
add
mov
mov
xchg
test
inc
pop
rcll
mov
imul
aaa
or
ja
xor
jg
enter
xor
out
or
mov
mov
ret
or
int
jp
xor
mov
test
and
ja
xchg
push
shlb
mov
mov
push
dec
movsl
subb
aad
repnz
mov
test
sbb
and
movsl
fnsave
ss
or
and
and
cli
jp
es
sbb
or
lcall
test
and
push
lock
loop
cmp
xchg
jo
jae
movsb
inc
inc
mov
fmuls
shll
jnp
fldcw
ss
lcall
cmpsb
pop
scas
inc
inc
movsl
fucomp
jmp
lahf
adc
pop
or
xor
shlb
pop
xchg
ret
imull
leave
comiss
push
pushf
xor
sarb
loop
sti
outsl
testb
jg
lods
fs
or
loope
add
jns
cmp
lret
out
jl
call
sahf
dec
imul
leave
add
jbe
adc
mov
push
repz
jecxz
sbb
out
mov
ss
popf
shr
test
sub
xor
xchg
push
fdivrl
in
pusha
xchg
mov
inc
lds
xchg
and
pop
sub
test
enter
rcr
mov
and
arpl
push
arpl
push
in
lcall
jo
adc
ja
cmp
inc
popf
leave
cmp
xchg
push
sub
jo
ret
sarb
adc
xchg
xchg
xchg
movsb
cmp
ret
imul
mov
mov
addb
les
sbb
cmp
jl
mov
insb
or
inc
rcl
cld
cmp
xor
xor
mov
adc
inc
and
push
xor
ret
inc
cmp
xchg
outsl
or
shl
int
outsb
mov
aas
push
pop
lods
loopne
test
loop
pop
xchg
stos
pop
mov
das
lea
push
and
xor
mov
pop
or
sub
movsb
je
gs
sti
ljmp
add
jl
ficoms
mov
mov
mov
mov
pushf
popa
jne
xor
int
cmp
inc
mov
push
hlt
int
aas
imul
call
mov
jne
mov
jns
movsb
push
cmp
or
jl
loope
mov
pop
jp
inc
mov
mov
and
mov
fcoms
rclb
add
push
push
ficoms
fs
in
iret
dec
lret
mov
rcrb
out
mov
bound
movsl
xchg
xor
cs
insb
std
shll
clc
das
lcall
dec
pop
mov
dec
imul
imull
jno
mov
push
into
jae
movsl
jmp
jb
test
dec
adc
imul
fxch
lock
and
pop
aam
arpl
add
cld
jae
xlat
mov
adcl
outsl
jl
mov
clc
ret
dec
or
dec
loop
cmp
sahf
pop
outsl
mov
inc
aaa
inc
stc
inc
fwait
add
popa
leave
sbb
addr16
adc
push
jo
test
shrl
sbbb
xor
cld
jmp
stc
mov
ljmp
or
sub
jge
in
daa
cltd
mov
inc
mov
xchg
out
aaa
sti
xchg
aam
mov
rorb
dec
add
mov
fdivrs
mov
imul
in
repnz
cmpb
rcl
pop
cs
shlb
adc
ret
sbb
push
xor
cld
push
dec
mov
jg
call
pop
in
sbb
push
cmp
ljmp
pop
or
stos
mov
test
jecxz
out
add
mov
fdivrl
pop
repnz
sahf
scas
xchg
adc
dec
pop
movsl
add
inc
imul
sbb
mov
dec
insl
mov
inc
push
sbbb
push
cmp
xlat
loope
cmp
cwtl
or
dec
pop
push
arpl
mov
jmp
ds
xchg
fbstp
test
das
lret
testb
fstps
movsb
lret
xchg
mov
add
shlb
push
popf
div
push
or
sbb
cmp
pop
jp
mov
jns
add
fisubs
fnstenv
adc
pop
sti
xlat
scas
mov
orb
pop
sub
sahf
fbld
fdivrs
ret
jg
sub
push
fildll
mov
cmp
notl
adc
cwtl
out
cli
pushl
xchg
pop
jns
cmp
sbb
xor
add
jb
scas
jb
dec
pop
popf
test
lods
scas
je
sub
dec
fcmovnbe
mov
cs
xchg
imul
adc
mov
xor
dec
inc
and
in
mov
int3
or
adc
dec
jns
int
aas
xchg
mov
jo
icebp
ds
lods
dec
cmp
mov
out
lret
hlt
sbb
and
shrl
insb
int
shlb
je
mov
sub
cmp
fwait
xchg
xor
imul
rorl
mov
out
xor
add
xor
xor
and
push
adc
and
cwtl
inc
mov
mov
je
xor
jno
out
mov
dec
aam
xor
icebp
jo
popf
scas
lcall
xor
cmpsl
repz
std
inc
out
stc
dec
pop
aaa
or
jp
out
mov
jecxz
mov
aam
dec
cmp
adc
push
dec
dec
cmc
dec
pop
mov
pop
jg
ror
or
mov
sub
fwait
scas
pop
gs
xchg
cmp
in
add
xor
mov
jnp
jae
adc
adc
adc
xor
mov
mov
in
sbb
pusha
push
fwait
adc
pop
insb
test
sbb
dec
mov
dec
or
cmp
fiaddl
decl
loop
leave
sbb
ds
out
lcall
testb
pop
jbe
cmp
adc
pop
fsubs
dec
jmp
xor
nop
fdivrs
test
cli
insl
fsubrp
dec
inc
mov
push
xor
ds
xchg
mov
bound
cmpb
ret
jmp
jp
fdivr
popa
divb
out
pop
fildl
shlb
jno
push
arpl
xchg
aam
mov
xchg
pop
inc
je
push
push
fwait
jo
xor
bound
fcom
icebp
jle
repnz
jns
mov
ret
adc
cs
cmpsb
mov
mov
das
inc
dec
hlt
lcall
jle
pop
lret
or
sub
imul
sub
adc
or
ss
push
insl
cltd
xchg
mov
inc
fbld
shrb
int3
mov
add
cmpsl
pop
jb
add
pop
repz
notl
imul
test
sub
and
and
fcomps
dec
ja
xchg
cs
xor
out
rorb
enter
cmpsb
shr
sub
stos
nop
jo
test
jmp
inc
dec
rclb
sti
push
push
test
ret
or
mov
push
and
lock
pop
cltd
imul
loope
movsl
cltd
add
insb
addl
test
fwait
mov
xor
outsl
xchg
dec
rcll
jbe
pop
inc
mov
inc
sbb
les
mov
mov
test
xchg
int
adc
lods
push
int3
cmp
sub
aas
jmp
cmp
or
dec
sub
mov
mov
xor
mov
dec
js
dec
sti
cli
cmp
mov
movsb
pop
test
shlb
out
and
sub
leave
outsb
in
out
or
add
fstpl
jae
into
into
sbb
pop
arpl
pushw
stos
sub
lds
movsb
jnp
dec
sbb
jb
mov
and
jl
xchg
pop
mov
cmp
dec
xchg
ret
cmp
pop
and
mov
in
gs
dec
jno
fldt
lahf
int3
out
and
fnsave
add
mov
mov
mov
mov
mov
ljmp
push
aas
popa
fistpll
or
ret
lret
pop
jae
push
cmpsb
shrb
cmp
push
hlt
adc
iret
outsl
mov
and
test
jb
jne
lock
pop
or
mov
rcrl
out
push
cmp
enter
mov
sub
movsl
sti
cmp
cltd
pop
or
inc
cmc
dec
mov
sub
adc
mov
movsb
loope
mov
adc
add
enter
pop
pop
sub
add
pop
pop
xchg
push
neg
push
int3
mov
push
jmp
lea
mov
dec
cmp
lret
clc
int3
movsb
arpl
cs
or
push
cmc
in
jge
xchg
cltd
or
das
dec
inc
cmp
mov
xchg
jb
push
fs
add
push
call
dec
pop
mov
jns
ds
xchg
add
dec
cmpb
mov
repz
push
adc
shrl
arpl
cs
out
pusha
xchg
call
mov
add
jns
adc
dec
js
repnz
or
mov
mov
or
out
in
pop
pop
lock
mov
push
test
out
arpl
pop
jno
mov
out
cld
in
push
test
jae
in
rorb
loopne
jbe
sub
call
ficompl
pop
xor
sub
adc
adc
jne
loopne
sub
xchg
rcll
icebp
push
and
push
cwtl
int3
mov
call
push
lods
adc
or
jg
inc
sti
in
sti
ret
out
xchg
aas
dec
in
dec
inc
iret
pop
testb
sti
xchg
and
cwtl
popa
test
ret
cmp
out
insl
xor
lret
and
adc
repz
sbb
fwait
dec
hlt
xchg
aaa
mov
push
mov
cld
test
mov
scas
shll
or
pop
pop
int
cli
mov
mov
loopne
cmc
pop
mov
mov
xchg
pop
rorb
and
inc
fnsave
add
xchg
jg
out
sbb
or
gs
aam
test
push
daa
test
rcr
xor
ret
movsl
xchg
cltd
inc
xchg
jmp
fiaddl
pop
mov
insl
push
lret
mov
pop
dec
mov
xor
frstor
call
jle
insb
inc
xor
insl
pop
minps
or
data16
mov
push
lret
adc
bt
jge
xor
js
xchg
pushf
insl
stos
movsl
int
loope
je
push
loopne
inc
add
lahf
int
insb
or
fxch
ror
sub
sahf
sub
fisttpll
in
mov
jne
es
dec
shll
pop
or
gs
xchg
jns
fcoml
roll
pop
jg
mov
adc
fwait
ret
xchg
ret
out
scas
inc
add
xor
aaa
bound
ret
data16
sub
cmp
jno
popa
adc
movsb
loop
rcrb
push
adcb
fnstsw
xor
rcrl
and
adc
add
dec
icebp
and
cmp
adc
mov
int
leave
cmpsb
shrl
jge
cs
sarl
ret
pop
cli
xor
mov
je
push
or
sub
adc
add
sbb
xor
or
sbb
xchg
inc
xor
inc
push
int
pop
stc
imul
insl
cmp
cmpsb
jne
rcrb
cmp
xor
push
or
dec
addb
adc
fldpi
push
bnd
and
pop
les
mov
bnd
aad
cwtl
lcall
xchg
nop
sbb
movsl
daa
cld
adc
xchg
lea
insl
popf
das
adc
ljmp
adc
enter
sbb
pop
mov
stc
sub
jne
lret
movsb
cld
in
test
jae
add
push
pop
push
inc
outsb
pop
fwait
je
loopne
fistl
jmp
out
and
mov
jecxz
jle
sbbb
add
in
fs
aas
jge
lea
sub
sbb
dec
xchg
loopne
cmp
outsl
ljmp
and
je
and
xchg
mov
sbbl
je
and
jmp
add
clc
xor
popf
dec
jne
sbb
popa
push
add
pusha
jns
in
nop
lahf
arpl
lea
push
and
sub
jle
pop
xorb
decl
and
pop
pop
imul
inc
in
pop
push
inc
xchg
xchg
xorl
stos
loope
loope
mov
mov
pop
aas
sbb
rcll
mov
inc
popa
outsl
popf
xor
icebp
xchg
iret
cltd
dec
int3
mov
xchg
movsb
shll
fisttps
sub
lock
xchg
call
push
lahf
jno
data16
mov
cmp
mov
imul
inc
ljmp
mov
pop
mov
sbb
out
cmp
jmp
mov
data16
xlat
nop
add
aam
dec
loopne
and
dec
and
nop
push
negl
cltd
lret
jle
iret
cmpsb
pop
xchg
imul
mov
lock
jno
mov
add
xchg
mov
inc
inc
or
sbb
and
sbb
push
arpl
stc
lods
mov
cmpsl
cmpsb
nop
mov
inc
sbb
mov
ds
mov
or
fcmove
dec
mov
sub
add
cmp
mov
negl
inc
andb
les
hlt
adc
dec
test
jle
sbb
adc
popf
idiv
int
adc
subb
jg
push
jb
jle
pop
pushf
pop
fucomi
pop
push
xchg
or
in
mov
push
iret
es
loopne
leave
push
and
mov
xor
call
mov
faddl
mov
repnz
fstpt
cmpsb
pop
fists
xor
jnp
in
jmp
mov
dec
fs
or
mov
mov
mov
or
ss
push
dec
pop
mov
sub
repnz
aaa
sti
fstps
pop
movsb
jmp
cmp
jb,pt
movsl
pop
fucomp
in
cld
cmpsb
test
or
sbb
in
aaa
cmp
lcall
sbb
stos
xor
push
sbb
sahf
sbb
ret
cltd
insb
test
cmp
cs
fbstp
inc
mov
pushf
push
pop
addl
push
push
andl
jge
sub
push
pop
mov
push
fcoml
pushf
mov
and
xchg
xor
and
repz
and
int
mov
ficompl
daa
dec
xchg
test
xor
sbb
leave
inc
shlb
daa
movsb
ret
mov
mov
xchg
cmp
mov
add
sub
loopne
and
dec
sub
push
sbb
mov
int3
orb
mov
adc
cmp
sub
jecxz
mov
jbe
repnz
pop
aas
data16
jl
repnz
push
rclb
rcr
mov
mov
pop
std
cmp
dec
add
pop
adc
nop
loopne
insl
andb
mov
push
mov
clc
or
cld
scas
add
fidivl
test
jmp
push
rorl
les
adc
out
add
cs
iret
in
addr16
fstl
mov
mov
inc
nop
mov
stc
inc
rcr
or
std
sar
sbb
std
je
test
or
inc
jno
rorb
pop
xchg
xlat
loopne
lock
mov
cmp
pand
mov
jne
dec
sti
sub
cmpl
jns
fdivs
scas
dec
mov
adc
in
sub
pop
jno
call
inc
imul
mov
clc
andb
and
adc
mov
repz
jo
pshufw
adc
ret
int3
add
or
pop
adc
sahf
mov
outsb
sub
or
imul
or
push
cmovge
insb
in
in
and
stc
ror
fcmovb
lahf
dec
mov
or
incl
enter
cltd
cmp
xchg
mov
jo
lahf
and
sbb
jae
js
pop
push
test
out
fdivrp
rclb
adc
mov
outsb
fisttpl
in
jp
pop
sahf
test
sub
imul
and
mov
mov
inc
mov
and
pop
pop
pop
sbb
loopne
call
enter
mov
in
pop
shll
insb
fldcw
addl
cmp
push
push
jb
addr16
mov
xor
not
shrb
ljmp
pop
push
jge
xchg
sub
stc
inc
push
ret
xor
add
ljmp
int
imul
xor
inc
inc
cmpsb
dec
lahf
je
test
mov
xor
xor
push
loop
insl
dec
mov
jo
jo
mov
icebp
test
inc
mov
outsl
mov
mov
loop
adc
leave
insb
jbe
jne
orl
cmp
mov
test
icebp
cmp
mov
and
rorl
jbe
addb
movsl
iret
jg
xor
fists
mov
push
jnp
test
xchg
push
les
jecxz
dec
int
int
leave
js
inc
cmc
clc
sahf
inc
cmpl
jbe
je
and
js
aad
cs
sub
loope
or
shll
mov
sub
dec
push
adc
gs
arpl
mov
imul
mov
into
mov
inc
sub
jmp
bound
daa
imul
js
jl
cmp
lret
cmp
stos
push
bound
cmpl
pop
nop
and
sbb
into
push
imul
jecxz
ds
stos
arpl
dec
ret
mov
ss
and
add
popf
flds
jno
adc
push
push
imul
mov
rcrl
and
mov
inc
std
loop
mov
mov
pop
rclb
imul
cs
mov
xor
jmp
cld
inc
mov
dec
enter
add
cld
std
pusha
call
jp
xor
sbb
fsubrs
aad
sub
cld
push
bound
aaa
dec
jmp
outsl
jnp
out
orb
lods
ficompl
cmp
dec
rcll
rcrb
inc
inc
or
cmc
lret
bnd
jns
stos
push
pushf
mov
out
add
or
cwtl
orl
lods
mov
loopne
inc
xor
test
cmp
iret
or
out
mov
jnp
dec
xchg
push
fadds
or
xchg
sub
iret
enter
out
test
cltd
xor
mov
je
out
fstpt
sub
or
jmp
insl
cltd
pop
arpl
cmpsb
and
xchg
loopne
mov
xor
insb
push
clc
ljmp
jp
fstl
mov
loop
inc
lds
scas
jo
pop
mov
add
pusha
jo
andps
xor
sub
mov
fisttpll
mov
dec
jb
cmp
push
pop
clc
adcb
out
jno
lret
or
stc
hlt
outsb
iret
xchg
adc
cld
sub
dec
rcrl
jge
test
arpl
inc
int
in
dec
movsl
mov
mov
test
in
or
xchg
mov
mov
scas
mov
fcmovnu
insb
pop
mov
mov
int
pop
or
pop
loope
ja
or
inc
cmp
std
loope
push
mov
and
dec
dec
test
dec
mov
xchg
in
inc
test
pop
scas
fadds
je,pt
sub
in
adc
xchg
push
mov
sub
fcoms
int
dec
shrl
aad
pop
mov
shlb
or
inc
outsb
jmp
cmp
ror
inc
xor
inc
aas
pop
sti
testb
loope
add
xchg
fwait
pop
sarb
iret
movsl
mov
scas
arpl
xor
xchg
imul
into
lods
sub
xchg
addr16
fwait
je
fldcw
jge
and
inc
mov
or
out
xchg
mov
xchg
xlat
mov
sbb
cli
and
and
daa
sahf
mulb
leave
js
mov
push
push
xor
popa
in
pushf
out
mov
push
cmpsb
lcall
dec
outsb
je
test
xor
mov
mov
xor
inc
rclb
mov
movsl
inc
in
jmp
sahf
cmpsb
pop
push
jl
cwtl
cmpl
jecxz
dec
sahf
jns
cwtl
mov
incb
in
out
pop
movd
jae
adc
xlat
lret
or
std
mov
mov
xchg
jge
cmp
push
push
fbld
dec
adc
push
gs
pop
lea
inc
out
rcrb
fdivrl
inc
pop
ret
add
in
cmp
jge
outsb
push
inc
add
push
sbb
outsl
mov
add
bound
mov
pop
cmp
sbb
mov
cmpsl
jno
jp
flds
push
dec
hlt
xchg
stc
rorb
incb
pop
fs
jo
dec
mov
pop
cld
iret
cld
sbb
pop
adc
outsb
xlat
pop
insl
mov
std
mov
aam
hlt
jne
aam
outsl
pop
jne
adc
enter
mov
js
imul
dec
test
sahf
jae
notl
int
xchg
sub
adc
mov
pop
mov
dec
inc
pop
mov
cmpsb
insb
mov
pop
addr16
into
adc
jae
popf
dec
mov
pop
mov
and
movsb
dec
rcr
push
sbb
rclb
lods
cmp
mov
lods
loope
sub
jg
aaa
xor
mov
ds
sahf
xchg
sub
pusha
xchg
mov
orb
mov
int
dec
add
sbbl
cmp
mov
outsb
sbb
xor
or
lcall
shrb
scas
ficoms
adc
jmp
push
pop
mov
inc
es
nop
jbe
adc
cld
jmp
les
mov
xchg
jbe
aad
outsl
mov
mov
stos
add
dec
jge
in
inc
lahf
push
push
xchg
loopne
mov
out
stos
mov
sbb
and
sbb
jae
pop
push
repz
imul
xlat
and
inc
cmp
shrl
les
mov
pop
popf
and
inc
inc
cmp
xlat
cmp
sbb
cmp
xchg
dec
aaa
mov
jne
cs
xchg
pop
jbe
int3
jmp
fdivr
fcompl
lea
cmpsb
xchg
push
mov
push
pop
xchg
xchg
push
repnz
addr16
push
daa
inc
in
and
pop
xlat
in
xchg
pop
mov
mov
mov
aam
jno
mov
push
pop
test
stos
lds
cmp
jae
fisttpl
clc
cmp
or
pop
enter
pop
loope
mov
cmpsb
push
out
mov
enter
in
ficoms
adc
sbb
sbb
sbb
or
incb
xor
sub
and
push
mov
ret
xchg
aaa
cmp
sub
fsubr
jp
icebp
gs
cwtl
or
lahf
in
mov
andb
lods
mulb
fmulp
inc
mov
movsl
xchg
jo
imul
insl
fcmovnb
lea
divl
sbb
dec
lea
and
adc
sub
data16
out
jnp
jmp
inc
imul
adc
jnp
fs
nop
ficoms
jns
scas
je
mov
gs
mov
into
inc
mov
ret
stos
fbld
or
cmpsb
mulb
and
pop
arpl
inc
ljmp
sbb
inc
ds
push
mov
jle,pt
jp
ror
adc
push
loop
and
sbb
sbb
dec
fnsetpm(287
aam
test
dec
loopne
cmp
loopne
es
push
xor
inc
pop
mov
push
pop
ja
cmpsl
jb
unpcklps
fwait
std
jl
mov
test
imul
adc
aam
fnstenv
pop
movsl
push
add
sub
xor
notl
int3
and
movsb
push
push
add
int3
cmpsl
mov
mov
insl
fidivl
fwait
jp
stos
dec
rolb
bound
push
sub
test
and
aam
dec
mov
insl
xor
rorb
into
ds
xor
xor
cmp
frstor
jnp
aas
xor
or
ja
jl
fsubrl
or
inc
pop
rcl
in
movsl
iret
insl
popa
push
dec
mov
adc
lcall
fsubrs
pop
arpl
cmpsl
mov
cmp
sbbl
cmp
loopne
bound
pop
xlat
aad
dec
repnz
sub
js
adc
and
dec
or
test
das
bound
push
scas
xchg
mov
loop
mull
inc
or
jmp
add
or
xchg
sbb
fs
mov
xor
pop
xchg
in
repz
sub
pop
sub
popa
inc
enter
mov
mov
push
inc
in
mov
imul
mov
test
dec
test
mov
sbb
loope
sub
ss
mov
sub
sub
mov
push
pop
nop
and
pusha
cltd
or
lahf
push
movsb
mov
inc
mov
jb
inc
cli
inc
shll
xorb
cmp
ljmp
scas
cmpsl
and
mov
lods
nop
out
mov
push
pushf
xor
push
aam
insl
jge
loope
sub
sbb
in
loope
es
cmpsb
jae
fnsave
and
in
adc
jl
enter
test
adc
pusha
xchg
mov
fdivrl
cmp
xchg
and
add
cld
popa
or
andb
inc
jl
xchg
ja
lahf
sbb
in
push
fsubrl
imul
sbb
jp
dec
inc
xlat
mov
shr
enter
sub
ljmp
lods
inc
stos
fcmovnbe
imul
and
mov
bound
shrl
add
repz
fsubl
push
nop
push
and
dec
adcl
enter
sbb
xor
jb
mov
loop
cli
cmp
add
add
xchg
faddl
test
fs
popf
dec
jge
stc
pop
in
or
and
into
ret
sub
adc
fwait
xchg
adc
and
iret
xlat
dec
mov
add
adc
xchg
mov
es
in
mov
decb
cmp
sbbb
outsb
int3
test
aad
pop
andl
gs
fists
out
lahf
add
call
xchg
inc
dec
test
cmp
decl
cmc
loop
cmpsb
aad
dec
sub
daa
xor
in
sub
pusha
pusha
loop
popa
sbb
mov
stc
mov
push
icebp
mov
outsb
mov
sahf
and
shl
std
scas
rep
push
sbb
lds
jno
jne
mov
mov
jnp
jle
xchg
test
inc
iret
in
scas
cmpsl
out
jbe
dec
cld
stos
test
lods
sbb
shr
mov
mov
mov
clc
xchg
add
js
mov
stos
cli
insl
mov
repnz
pop
imul
or
jns
rolb
cmp
je
jns
push
sub
add
cs
adc
leave
cmp
sbb
movsb
int
lret
push
mov
add
mov
add
cmp
stos
insl
jne
xor
cmp
xor
test
call
pop
shl
add
sub
cmp
lret
jmp
and
repnz
xchg
push
xor
fbld
jne
or
mov
or
stos
sar
scas
cmp
xchg
fidivrs
cmp
pop
push
call
aad
loopne
mov
insb
ja
pop
mov
push
stos
filds
push
pop
and
loope
jbe
enter
or
ret
nop
mov
pop
fists
jg
mov
loope
xor
repz
xor
xchg
jnp
or
sbbb
adc
adc
jge
imul
stc
cmpsb
xor
add
and
andl
lret
jns
or
adc
fwait
xchg
rolb
pushf
insl
sbb
or
popa
in
xchg
test
adc
push
inc
sahf
dec
mov
cmpsl
mov
xor
int
data16
jg
repnz
push
jae
sub
loope
or
movswl
inc
cmp
out
adc
and
popf
fnstsw
mov
push
aaa
xchg
mov
int3
sbb
or
push
add
insl
pop
xchg
fnstsw
fldl
cli
xchg
movsb
int3
pop
js
pop
xchg
mov
mov
xchg
idivl
enter
cmpsb
sahf
xchg
and
repz
std
mov
in
add
mov
lret
insb
xchg
out
or
in
enter
in
inc
jbe
sahf
pop
aas
rorl
fwait
mov
mov
call
inc
jne
xor
psrlq
jmp
arpl
push
sbb
outsb
scas
or
daa
sbb
jne
leave
jge
std
xchg
pusha
xor
dec
mov
inc
xchg
sbb
loopne
cmp
out
xchg
xlat
mov
add
dec
cmp
test
mov
mov
add
psubw
xorl
movsl
jge
in
add
test
or
and
mov
loop
sbb
lods
sub
repz
mov
pop
or
shrl
ljmp
add
push
pop
cmp
int3
jle
int
scas
cmpsl
adc
jle
or
pop
into
xor
sub
hlt
pop
sbb
add
cmc
loop
pop
lds
pop
repz
jnp
mov
push
lods
jne
lock
adc
mov
and
sbb
rcrb
xchg
ds
add
push
and
ja
out
sarb
mov
jge
pop
bound
or
fmul
adc
mov
pop
mov
add
xchg
cmpsb
or
aas
std
push
int3
mov
pop
lahf
sbb
lea
inc
scas
mov
jno
and
and
loope
mov
aaa
daa
nop
leave
fstl
cmc
cli
jb
int
gs
cwtl
pop
call
cmp
lahf
jp
out
loop
lods
lock
xchg
cld
jg
mov
jl
addr16
rcrl
push
and
push
in
xchg
and
ret
mov
inc
inc
cmpsl
sbb
xor
rcll
daa
sbb
dec
and
je
aam
sbb
inc
sbb
and
mov
inc
inc
dec
push
popf
xlat
fisubs
aad
inc
fdivl
outsl
testl
and
sub
jmp
xor
dec
add
loopne
aam
roll
or
mov
xor
jl
push
lds
ret
sub
jbe
inc
movsl
inc
sub
jl
frstor
jno
mov
inc
mov
push
rcl
push
sbb
and
xor
and
xchg
rorb
and
and
fisubl
es
jno
push
dec
popa
lods
and
shlb
stos
sub
insl
lret
cmpsb
out
mov
mov
js
adc
je
adc
sub
inc
inc
sub
inc
fs
mov
fs
sub
fcomp
mov
mov
movsb
iret
mov
bound
and
lods
clc
jmp
sub
pop
cmp
pop
je
sub
xchg
das
mov
push
por
addl
int3
sarl
sbb
pop
repnz
andb
inc
adc
xchg
lea
pop
adc
mov
mov
cmp
jp
jmp
mov
xchg
mov
lods
lea
insb
stos
hlt
bound
mov
arpl
repnz
rcrb
outsb
pop
daa
into
bound
jecxz
xchg
dec
xor
js
out
adc
fisubs
adc
dec
mov
ret
insb
cmp
cmpsb
or
mov
push
mov
cwtl
mov
arpl
mov
in
and
adc
xor
inc
adc
pcmpeqb
xlat
add
movsb
fsts
ret
mov
dec
mov
pop
xor
cmp
into
subb
cmc
mov
pop
fsubr
cvtdq2ps
sarl
jmp
push
xchg
jmp
adc
mov
sub
or
jle
xor
pop
cbtw
test
jg,pn
lds
and
lahf
inc
repz
or
fistpl
lahf
stc
out
pop
pop
int3
sub
ss
jle
loopne
push
daa
and
sbb
lods
dec
and
push
pop
jno
scas
or
push
jg
jle
cltd
push
in
loop
fidivs
lea
jns
movsl
adc
pop
jae
out
hlt
ds
pusha
push
pop
sub
dec
sbb
sbb
xchg
cmp
push
jno
jge
adc
dec
movsl
in
xchg
dec
cmpl
inc
xchg
cwtl
ret
negb
xor
ret
mov
in
scas
mov
clc
push
jns
sub
daa
test
sub
js
jmp
into
pop
mov
outsl
mov
scas
push
xor
inc
xchg
mov
mov
stos
push
xor
jg
arpl
mull
mov
mov
xchg
cmp
fs
lods
mov
push
push
stos
sbb
aam
mov
xor
das
repnz
xchg
mov
jo
mov
fcomip
push
orl
lahf
sbb
xchg
jecxz
mov
push
mov
push
stc
movsl
xor
mov
out
mov
addl
mov
pop
scas
ss
in
cmp
mov
aas
loopne
and
cmp
dec
xchg
pop
mov
xor
inc
lcall
imull
push
data16
loopne
fdivp
or
push
clc
jb
hlt
shrl
or
cmpsb
and
or
mov
loopne
imul
scas
or
mov
movsb
sub
push
mov
test
xchg
test
outsb
scas
sbb
mov
push
push
shl
xlat
or
or
aas
or
cld
mov
cmpsl
mov
das
lcall
clc
shl
xchg
mov
fsts
stos
sti
pusha
outsb
stos
mov
xor
pop
adc
inc
adc
jns
out
and
int
pop
add
inc
mov
fldcw
add
jno
jmp
cmp
xchg
cmp
sub
and
stos
sub
jmp
dec
loope
shrl
add
int3
fs
push
sub
les
cwtl
jmp
dec
rolb
jne
fldl
movsb
cmp
loop
adc
inc
fwait
pop
loopne
out
mov
bound
and
adc
pop
lock
enter
and
or
jnp
mov
enter
cld
or
mov
addr16
loop
lock
gs
xchg
mov
pop
in
and
in
mov
ljmp
out
test
xchg
iret
stos
push
lahf
int3
xchg
sub
adc
call
lea
mov
mov
dec
xlat
mov
lcall
js
ret
sub
rcll
jns
les
jmp
sub
mov
dec
sbb
xor
push
mov
or
mov
lret
rclb
cwtl
in
movsl
clc
push
ret
fistl
gs
dec
push
lods
sahf
ljmp
push
stos
leave
bound
leave
pop
cs
xchg
push
sbb
sbb
repz
xlat
inc
jl
jg
je
sbb
jg
ds
or
fimuls
pushf
dec
rol
fnsetpm(287
inc
outsl
or
fldl
mov
push
out
pop
and
push
mov
xchg
das
mov
inc
gs
leave
shlb
mov
aad
xchg
jno
cli
mov
or
cmpsb
inc
lds
mov
pop
jno
hlt
repz
hlt
sub
xchg
inc
xor
lahf
cmpl
loope
xlat
sub
push
xor
jae
sbb
int
cmp
leave
adc
jns
mov
dec
jecxz
insl
xlat
cmp
int
sub
movsb
jae
stos
jmp
or
push
stos
fstpl
cwtl
pushl
aas
in
in
or
jp
out
and
cmp
cmp
mov
pusha
test
lret
fcmovne
xor
mov
pop
pop
repnz
imul
nop
rcll
mov
jmp
sbb
mov
int3
xchg
jo
sub
add
cmp
xchg
lea
int3
xor
lock
les
and
mov
sub
mov
mov
pop
cmp
sub
adcb
xchg
test
ss
inc
test
inc
fcmovnb
mov
add
push
xor
in
daa
or
test
cmp
bnd
in
divb
cmp
stc
sbb
fsubr
adc
lock
lret
test
sbb
inc
fimull
loop
popf
data16
pop
cmp
xchg
test
hlt
js
stc
test
shlb
fadds
insb
test
cmpsl
inc
imul
cmpsb
add
fistpl
xchg
js
nop
mov
cmp
cmp
pop
inc
ja
sub
fxch
jo
jl
jo
sahf
enter
icebp
push
pop
jl
mov
mov
nop
jbe
out
pushl
jno
add
lock
adc
mulb
cmp
or
mov
adc
cmc
bound
mov
add
inc
cwtl
adc
mov
outsb
out
xor
rorb
xor
hlt
orl
pop
pop
std
gs
repnz
pop
mov
or
add
push
mov
jg
sbb
fsts
fs
xor
mov
outsb
dec
pop
xchg
push
push
sbb
mov
cs
xchg
xor
repz
std
cmc
jae
cmp
or
addr16
dec
nop
insb
and
or
adc
sub
jp
mov
test
adc
in
hlt
dec
popa
sahf
insb
insl
cmp
xchg
repz
gs
andl
mov
outsl
inc
cmp
mov
addr16
sbb
add
dec
movsl
fistpll
gs
lock
loop
sbb
nop
sarb
adc
int3
or
shll
ret
fists
sahf
loopne
mov
push
dec
mov
push
cmp
sbb
or
cmpsl
aas
aaa
add
addb
in
add
cmp
inc
push
ret
hlt
jp
cmc
sarb
adc
mov
mov
mov
adc
jmp
mov
push
jle
out
mov
sbb
mov
lods
mov
cmpsl
jge
cld
sub
sub
pop
mov
pop
sarl
pop
out
jne
pushf
push
ja
sub
sti
or
mov
xor
mov
inc
mov
imul
stos
inc
test
pushf
xchg
lcall
scas
mul
loope
and
xor
xlat
jl
mov
adc
sub
pop
mul
sub
lahf
and
data16
mov
mov
arpl
insb
push
dec
les
int
in
dec
ds
cmc
pop
cwtl
cmp
sbb
insb
clc
push
xor
les
stc
lret
sub
adcl
jo
sbb
mov
mov
pusha
dec
sti
and
xchg
xchg
xchg
jbe
mov
mov
cmpb
adc
add
enter
ljmp
mov
das
clc
push
mov
fs
inc
push
aaa
inc
push
xor
rol
adc
xchg
pop
add
lcall
jmp
addr16
pop
in
and
mov
cmp
pop
jne
es
push
lock
popf
inc
imul
sub
jo
mov
rclb
out
mov
adc
out
sbb
rcl
sbb
and
pop
push
mov
xlat
mov
in
or
outsl
lock
mov
push
iret
mov
add
mov
das
mov
stos
dec
mov
cmp
insl
jne
lock
out
int
cli
js
cltd
clc
sbbb
jne
outsl
mov
out
jl
fildl
pop
and
cmpsl
cmc
jb
loop
ja
mov
addl
dec
les
xchg
adc
test
arpl
adc
rorb
popa
stos
call
pop
mov
pop
aam
mov
cwtl
push
xchg
jns
mov
in
movsl
jne
les
add
data16
pop
movb
mov
mov
andl
or
out
jge
cmc
out
insb
adcl
pop
add
cmp
mov
dec
stc
xchg
inc
inc
lcall
stos
shll
test
xchg
mov
dec
sbb
dec
and
jae
mov
filds
insb
aad
inc
xchg
test
jae
das
mov
jge
mov
or
incl
mov
or
movsl
cmp
pop
out
ret
pop
adcb
xchg
or
sbb
sbb
pop
out
gs
aaa
pop
mov
fildl
pop
idiv
jp
fstp
cmpsb
pushf
mov
and
mov
in
in
fildll
cmp
mov
mov
lods
in
pop
add
mov
cli
repnz
mov
out
or
sbb
mov
les
sub
push
shr
notb
pop
cmp
les
ficompl
sbb
cmp
push
add
sbb
scas
cmc
inc
cmp
mov
gs
test
mov
data16
mov
mov
pusha
push
xor
outsl
cmp
jne
or
stc
sub
xchg
daa
test
xor
cmp
fwait
mov
mov
popa
arpl
loopne
or
sbb
inc
test
xchg
arpl
dec
add
sub
jp
xchg
jnp
in
xchg
lods
lock
xchg
cmp
and
or
je
negl
lret
xor
enter
jmp
pop
push
jbe
mov
pop
out
adc
xor
pop
mov
bndstx
roll
adc
and
cmp
jns
out
test
and
fstl
and
mov
jge
movsb
in
mov
mov
lret
mov
inc
fldt
and
cmc
push
sub
cwtl
fidivl
mov
sub
dec
sub
push
xor
pop
lds
push
cmpsl
iret
xchg
out
mov
cmpsl
lcall
popa
mov
jne
mov
xor
inc
xor
xchg
pcmpeqd
jnp
sbb
out
imull
leave
push
shlb
ret
or
push
call
cmovbe
fisubrs
cmp
inc
adcl
pop
mov
jl
faddl
mov
shlb
mov
xor
lret
rcrl
push
data16
je
push
mov
stc
cltd
adc
push
cmp
cmpsb
jne
inc
inc
xchg
sbb
lods
pop
je
mov
mov
outsl
mov
clc
pop
sbb
fists
cmp
dec
movsb
inc
js
lds
mov
das
cwtl
mov
mov
imul
jbe
xchg
push
xor
lods
std
push
dec
fdiv
cs
ret
int
mov
insb
lcall
rcrb
push
ja
xor
sbb
outsl
xor
dec
push
out
mov
mov
push
jle
lock
or
fldcw
jg
fmuls
in
imul
in
fimull
out
lea
or
inc
xor
faddl
aaa
jmp
or
adc
dec
pop
lahf
movsb
andps
xor
and
dec
idivb
add
xchg
cltd
xchg
pop
mov
xchg
adc
fsub
cmpsb
inc
test
ret
add
sbb
test
push
adc
ret
and
sbb
cmp
xor
pop
testl
xor
bswap
pop
sub
into
pop
aam
popf
jmp
int3
dec
std
or
jno
cltd
push
xchg
aad
sahf
loopne
les
inc
cmp
mov
lods
pop
fxch
cmpsb
xchg
mov
icebp
mov
sbb
gs
add
mov
push
pusha
inc
data16
sbb
add
push
fcoms
insl
adc
adc
xor
jle
xor
ljmp
aam
xor
pop
stos
loope
fstps
fs
sub
sub
push
mov
jb
cmpl
pop
pop
pop
push
add
dec
inc
push
stc
into
lods
sbb
rcl
push
dec
push
add
pop
push
loopne
call
add
sar
stos
lock
pop
cmp
pusha
xchg
mulb
jb
dec
add
add
dec
pop
sahf
ljmp
pop
loopne
lret
ljmp
test
mov
nop
mov
aas
daa
xor
aam
les
pop
mov
and
xchg
call
xor
sar
push
or
fwait
push
mov
aad
stos
stos
es
dec
jmp
out
ret
lret
jmp
sub
pop
aam
xchg
cmp
push
mov
and
icebp
mov
inc
inc
dec
xchg
pop
mov
xor
mov
xchg
movsb
mov
add
xchg
xchg
and
cmp
rcrb
ret
pop
pop
and
dec
jne
pop
test
jp
mov
mov
enter
pop
mov
pushf
out
xor
insb
sub
push
ljmp
mov
sbb
pop
cltd
cmp
mov
mov
jns
in
std
les
mov
or
push
lea
repz
sub
sti
adc
cmp
and
fdivl
xor
mov
inc
xchg
test
xchg
pop
ja
rcr
jg
das
xchg
outsb
pusha
ret
mov
pop
adcb
cld
das
add
in
push
shl
add
mov
mov
lock
mov
jb
sub
or
icebp
int
ss
inc
or
and
std
mov
and
jbe
dec
mov
add
fstpt
cmp
rol
int3
push
lods
mov
cld
cmc
roll
sbb
jne,pt
cltd
mov
xchg
scas
dec
rcl
shr
sub
hlt
aas
or
jp
and
inc
popf
test
xchg
mov
cmpsl
inc
sub
jmp
push
mov
outsl
arpl
push
out
dec
int
and
je
pop
add
xor
adc
jae
dec
fldenv
ds
test
xor
fdivl
cmp
cmp
leave
scas
lcall
fdivrs
icebp
insb
fucomip
xor
xchg
push
pop
mov
sub
scas
xor
dec
js
cmp
xor
into
jle
dec
sub
adc
mov
ret
add
addl
ja
jl
jns
dec
sbb
movl
push
jmp
dec
pop
addl
sbb
jge
or
mov
mov
push
aas
loop
jp
jb
jmp
movsl
pop
ja
mov
mov
je
sub
jp
dec
lret
lds
outsb
mov
lods
cmp
or
in
in
mov
andb
inc
gs
push
inc
sahf
rorl
push
adc
roll
icebp
jle
adc
push
jo,pn
movsb
stos
jle
enter
pushl
stc
in
test
cmc
pop
bound
cmp
xchg
push
fisubrs
mov
pop
mov
mov
push
pusha
fnstsw
mov
cmp
push
cmpb
jl
adc
js
loope
stos
insl
sbb
xor
adc
rolb
lcall
jmp
mov
mov
out
js
adc
stos
xchg
or
nop
and
fcmovb
pusha
jmp
mov
inc
jae
sbb
cmp
orl
push
sub
mov
stos
cmpsl
insb
adc
adc
jge
outsl
jg
lods
rcrb
adc
xchg
popa
scas
pop
mov
aas
aam
repz
movsl
das
imul
aad
inc
pop
mov
sub
push
pop
xor
xchg
outsb
jns
arpl
add
sar
sbb
push
and
outsl
jg
cmp
adc
adc
outsl
call
scas
je
neg
data16
rolb
pop
xchg
dec
sarb
imul
push
mov
ret
pop
xchg
xchg
cmp
push
fs
stos
loop
xchg
dec
scas
std
lahf
adc
lret
sub
scas
xchg
loop
mov
out
dec
mov
mov
ds
pop
and
mov
xchg
sub
mov
mov
mov
pop
mov
neg
mov
push
mov
fldl
adc
imul
mov
daa
inc
in
or
hlt
adc
mov
mov
jne
jecxz
mov
cwtl
pushf
push
lods
mov
out
cli
pop
sahf
das
and
pop
mov
test
jb
aaa
xchg
js
push
xchg
sahf
pop
je
sbb
add
mov
imul
mov
in
movsb
cmp
sbb
test
fwait
inc
cmpsl
in
mov
fistpl
enter
ret
sbb
mov
outsb
iret
push
jge
or
pop
adc
mov
push
cmp
loopne
sub
rcl
sbb
jne
xchg
mov
test
roll
rcr
arpl
fisubrs
rorl
fnstenv
cmpsb
jns
aaa
loope
mov
pop
jp
add
int3
scas
pusha
fs
jo
enter
mov
push
pushf
jge
pop
cmp
push
push
adc
lret
ja
into
aad
test
dec
scas
inc
dec
cmp
enter
sub
lret
or
ret
cltd
lahf
inc
push
jmp
mov
les
sbb
jnp
push
xchg
cmp
jbe
addr16
out
ss
test
popa
rcrb
xchg
inc
cmp
and
pop
dec
lret
rclb
cmp
dec
cltd
pop
push
push
lcall
pop
pop
mov
cltd
das
stos
push
push
adc
dec
jmp
or
lret
dec
dec
mov
movsl
lret
mov
push
jg
sarl
pop
std
xor
sbb
mov
xchg
and
dec
cmc
icebp
mov
mov
add
adc
aas
int3
aam
inc
mov
fwait
inc
adc
imul
inc
js
cld
mov
std
jae
cmpsb
in
lds
xor
std
in
mov
sti
leave
mov
inc
or
bound
lret
shrb
jb
jge
lcall
pop
mov
dec
nop
pusha
mov
ret
lcall
loope
jle
push
inc
test
mov
pop
and
sahf
out
test
cs
das
mov
stos
jnp
andb
mov
cmpsl
jne
inc
mov
xchg
and
adc
in
ficomps
imul
push
stos
insl
mov
and
xor
hlt
mov
pop
xor
mov
ret
cmp
dec
imul
push
jg
xchg
insl
push
lcall
aas
cmp
lods
mov
jl
ljmp
pop
mov
lcall
jb
mov
mov
aad
imul
repz
push
xor
les
mov
pushf
fnsave
add
or
inc
je
adc
cmp
cmp
movsl
add
sti
jnp
int
leave
imul
jle
inc
in
sub
push
xchg
into
mov
cmp
ds
popa
xor
sub
test
mov
sub
ss
sahf
or
and
cmpsb
scas
cmpsl
aaa
repz
ja
or
fistpll
popf
add
push
mov
hlt
dec
mov
pop
shrl
imul
dec
pop
cmp
arpl
out
adc
xor
mov
iret
sbb
push
sahf
insb
divb
sub
mov
gs
sbb
dec
outsl
mov
movsb
add
cli
nop
xchg
in
or
xor
out
and
fdiv
lret
stc
ficoms
or
mov
jecxz
dec
jae
leave
ja
fcmovu
pusha
inc
jg
mov
pop
xchg
scas
scas
mov
arpl
and
arpl
lods
sahf
cwtl
pop
or
inc
mov
jge
xor
in
cmpsl
fsts
push
das
popa
and
addr16
insl
sbb
xor
movsb
daa
jge
out
sbb
data16
adc
lcall
das
and
and
dec
ds
mov
loop
sbbl
lcall
pop
push
test
int3
push
jle
mov
shlb
push
lret
mov
and
inc
fcompl
xor
inc
or
add
jnp
or
lods
xchg
mov
out
faddp
in
add
mov
add
movsl
daa
add
sbb
pop
mov
lcall
loopne
lea
xlat
shl
fs
mov
pop
push
mov
lahf
or
add
imul
addl
sub
rorl
loopne
shr
pop
push
xor
popa
seto
inc
out
popf
enter
jbe
xor
sub
push
lcall
adc
push
rclb
cmp
shl
loop
fwait
or
ror
dec
inc
pop
inc
jne
inc
int
scas
outsl
imul
rorb
xchg
pop
outsl
inc
push
into
xchg
jecxz
push
jmp
push
push
inc
sti
int
mov
cld
insb
dec
pop
loop
push
sub
imul
sbb
dec
mov
mov
sub
or
mov
lds
sub
test
push
test
and
or
adc
push
xor
lret
add
stc
iret
pop
and
push
test
loope
dec
pop
jne
pop
rcll
into
pop
pop
je
gs
jg
push
flds
idiv
mov
cli
ja
es
pop
xchg
inc
roll
shr
push
test
sbb
pop
lret
or
inc
call
int
stc
es
test
or
inc
ror
cmpsb
xor
arpl
or
jge
clc
stos
ret
xchg
push
ficompl
jbe
cmpl
xchg
mov
mov
xor
fs
adc
rol
int3
mov
dec
jnp
repnz
enter
in
xor
aaa
ds
cmp
adc
rorb
iret
push
dec
fiadds
mov
pusha
xlat
scas
dec
inc
mov
rorb
mov
dec
inc
adc
pushf
push
fabs
rorb
push
scas
pop
fwait
popf
cmp
mov
call
insb
loop
hlt
xchg
out
sbb
in
add
mov
push
dec
pop
lods
mov
xchg
pushf
mov
hlt
jae
loop
ljmp
hlt
sub
call
idivb
aas
add
int3
jbe
push
maxps
out
xchg
fldl
push
cli
arpl
dec
fldl
dec
out
jae
mov
xor
and
cmp
and
out
gs
enter
in
ficoms
xorl
lahf
pop
pop
adc
mov
fstl
cmp
pop
dec
movsb
pop
mov
push
push
push
stos
outsb
and
iret
add
int
cmp
shlb
inc
cs
push
popa
scas
add
in
arpl
pop
mov
mov
ds
sub
loopne
cmpsb
pop
shrl
dec
repz
shrb
cld
push
hlt
pop
xchg
mov
push
cmp
dec
push
hlt
jbe
aad
push
cmp
fdivr
leave
and
and
sbb
addl
mov
inc
fidivrs
test
filds
mov
jle
insl
sub
sub
int3
out
cs
push
insl
or
jbe
mov
cli
fidivrl
sbb
insl
icebp
jmp
loope
fistl
mov
loopne
pop
lret
nop
xor
dec
or
push
movsl
stos
xorl
test
enter
sbb
call
out
push
jno
insb
jg
aaa
sub
sub
jae
cmpsb
mov
enter
adc
xchg
stos
arpl
outsb
ret
shr
add
xchg
dec
jae
sete
stos
fcoml
outsl
xor
mov
imul
cmp
arpl
dec
xor
dec
pop
sub
rcr
lret
or
lcall
movsl
lret
add
sti
mov
inc
sub
or
or
sub
sbbb
js
cmp
or
inc
push
adc
int3
fistpll
imul
cmp
insb
xor
cmp
lcall
test
mov
add
xorb
xchg
fdivs
jg
xor
sbb
pushf
sub
cmp
xlat
sahf
pop
sub
cli
sub
aad
clc
xchg
pop
pop
test
in
outsb
jecxz
ret
add
mov
out
mov
sbb
mov
stc
rclb
ja
iret
stos
dec
jl
clc
or
es
popa
xchg
orl
mov
in
xor
lahf
push
fcomps
lods
stc
in
rcll
sti
dec
fstl
loop
outsb
cli
pop
lret
mov
stos
and
xchg
mov
hlt
jnp
jmp
pop
xchg
pop
sbb
inc
mov
fistps
xchg
jle
sbb
xchg
cmpsl
in
leave
lods
dec
mov
mov
ret
dec
mov
xchg
and
lea
inc
aad
adc
inc
movsl
sbb
ret
inc
fdivp
loopne
jecxz
ja
in
sbb
es
insl
cs
mov
in
js
sub
fwait
movb
outsb
fcmovbe
and
cs
loope
jl
xchg
jmp
in
lcall
jle
ret
cmpsl
lds
jle
or
mov
lods
lret
adc
loopne
fsts
dec
cmp
jge
inc
mov
ja
cmp
add
jbe
add
push
pop
dec
pop
xchg
push
mov
push
jp
add
sti
aad
divl
outsl
loopne
jecxz
test
ret
lret
mov
inc
es
cmp
jns
or
int3
ret
lahf
sbb
push
sbb
iret
and
mov
or
lret
xor
mov
das
dec
ret
sti
rcrl
sub
xchg
xchg
lcall
mov
int3
lret
jl
mov
push
fninit
xchg
stos
fwait
mov
fistps
fdivrs
fiadds
in
cmp
dec
inc
xchg
das
jl
add
int
mov
add
in
sbb
pop
push
and
jg
inc
sbb
stos
inc
insb
dec
xchg
and
pop
and
xchg
testl
shl
mov
jmp
insb
jns
faddl
je
xchg
or
sbb
mov
cmp
sbb
adc
outsl
cwtl
sub
rclb
std
enter
and
leave
nop
mov
cmp
mov
cli
pop
test
and
inc
cmpsl
pop
icebp
and
and
dec
fcomps
xchg
cli
test
enter
sahf
mov
sbb
pop
dec
sub
or
jmp
sti
inc
mov
fwait
cltd
mov
leave
push
adc
inc
sub
xchg
pop
dec
lahf
cmp
or
and
sti
push
inc
ja
jge
les
xlat
push
xor
ljmp
pushf
jns
pushf
iret
cmp
jle
cmpsl
push
jg
sbb
ja
inc
xchg
sbb
xor
sbb
inc
sbb
mov
sbb
jle
xor
cmc
lock
push
sub
dec
popf
lret
adc
shl
inc
addr16
mov
jl
and
fsub
imul
lods
imul
cmp
aam
sbb
cmp
jns
push
and
mov
xor
icebp
psraw
je
incl
xor
loopne
sbbb
mov
int
aam
push
xor
loop
inc
pusha
or
pop
lar
lock
xor
out
mov
inc
pop
pop
pusha
lea
test
push
jnp
std
jmp
in
inc
out
lods
sbb
sub
lret
mov
notb
mov
negl
lret
pop
loopne
aad
insb
jg
gs
jle
imul
mov
gs
sti
pop
fdivs
outsl
out
fnstcw
pop
add
imul
jecxz
pop
cmp
js
and
mov
fcomps
xchg
jl
leave
and
jmp
jmp
leave
push
sub
adc
sbb
sbb
mov
imul
aam
mov
bound
sub
and
push
mov
enter
mov
jl
xor
sbb
jo
ret
ljmp
lret
xchg
adc
jmp
push
cmp
or
sub
sbb
subl
and
adc
movsl
fcmovnb
cmp
stc
and
cli
sbb
das
cmpsl
daa
js
loop
adc
adc
push
sub
adc
mov
or
scas
jg
pop
and
cltd
pop
in
push
jl
push
rorl
movsb
leave
cmpsl
jl
jnp
sbb
inc
sahf
fcmovnb
push
sbb
data16
push
sub
lret
xchg
in
fs
rolb
sarb
icebp
push
jae
mov
xor
push
mov
lods
jmp
sub
jecxz
mov
fmull
lret
sbb
vandnpd
mov
xchg
sub
mov
ljmp
mov
xchg
in
sar
jb
push
mov
mov
pusha
jbe
out
pop
scas
sbb
ljmp
mov
add
popf
test
lods
test
xchg
add
xor
stc
sti
in
adc
popa
inc
stos
sahf
pushf
mov
jne
aam
shl
mov
fcmovne
adc
pop
jo
pop
ret
ss
je
jno
cmp
lret
mov
or
clc
inc
xor
inc
sbb
pop
jno
mov
cmc
fs
movsb
xchg
jne
mov
push
mov
call
jmp
and
add
aam
push
mov
fcoms
gs
sbb
rcl
cli
scas
out
pop
pop
jmp
arpl
inc
mov
inc
test
mov
add
mov
push
push
xchg
cmp
scas
andb
jnp
rcll
dec
mov
xor
lret
xchg
mov
pop
inc
push
jge
inc
pop
data16
hlt
scas
imul
jae
outsl
sbbb
dec
ret
push
xor
pop
shrl
push
xor
push
jne
inc
in
push
rorl
adc
ja
xor
notl
adc
push
push
popa
stc
mov
mov
ds
xchg
cmpps
repnz
shrl
mov
push
ds
cli
loop
sbb
sub
cmp
fwait
shll
rcll
jp
xchg
dec
adc
fidivl
pop
xor
bound
adc
adc
dec
flds
lods
movsb
add
mov
pop
lret
or
call
pop
jg
clc
add
push
push
roll
enter
sub
push
fdivr
and
jo
dec
mov
enter
mov
inc
mov
push
sub
in
int
jecxz
int
dec
cmp
and
shlb
negl
xor
bound
out
imul
mov
xchg
xorl
ret
das
mov
mov
adc
pop
cmc
xor
ds
adc
dec
jnp
mov
pusha
and
cltd
push
in
xchg
inc
out
fistpl
adc
push
cmp
fs
addr16
mov
adc
scas
and
loop
mov
cs
mov
ja
dec
add
adc
mov
enter
ljmp
sub
addr16
ja
adc
cli
adc
adc
sbb
mov
sub
dec
mov
fistl
cmpsb
movsb
rorl
mov
stc
movsb
lea
sub
rcrb
addr16
cmp
add
pop
pop
jbe
ret
push
xchg
std
push
or
loope
dec
aad
arpl
cmc
insb
dec
xor
dec
negl
aad
cmp
bnd
and
lret
shld
f2xm1
lcall
pushf
mov
jl
sbb
lods
cmp
std
pop
add
mov
enter
leave
pop
inc
and
in
ljmp
inc
mov
les
rclb
mov
inc
fmulp
cli
cmp
loopne
add
and
aaa
pop
out
in
dec
push
dec
pop
sub
fsubrs
mov
xchg
out
cmpsb
mov
push
inc
outsb
mov
xchg
add
dec
push
pop
jb
xchg
dec
rclb
xor
lods
xlat
jbe
mov
push
mov
movsb
xchg
ret
mov
cmp
int3
fstps
je
sbb
movsb
sbb
push
fisubrs
sub
mov
sbb
fdivrp
addl
mov
out
test
sub
out
ds
pop
push
sbb
xorb
sbb
ror
jg
daa
xchg
sub
push
fs
xchg
rcr
push
bound
popf
pop
jle
xor
cltd
aaa
sub
roll
xchg
add
les
dec
iret
dec
add
or
rcr
mov
sbbl
mov
pop
xchg
pop
jge
out
popf
xor
push
jne
inc
ficoml
pop
cmp
ror
movsb
dec
enter
out
outsl
iret
xchg
sti
fwait
inc
inc
cmp
inc
mov
gs
repz
imul
lock
add
push
mov
outsb
nop
cli
push
dec
setb
cmp
adc
sub
out
and
popf
push
ds
fisubs
or
add
inc
xchg
inc
mov
vmaxss
andb
mov
pusha
or
les
fldenv
div
sbb
jl
mov
adc
cmp
in
jne
test
cld
into
fdivs
xchg
aam
and
sahf
insl
dec
lds
mov
jns
xchg
pop
dec
jo
pop
mov
push
jge
cmp
aas
jmp
ss
sbb
jle
lret
mov
inc
in
pop
call
neg
sbb
jne
mov
mov
in
xchg
push
cwtl
xchg
jl
cmp
mov
cmp
int3
mov
cmpsl
out
lcall
pusha
fs
in
sub
rcl
xor
jb
xchg
jae
ficompl
or
cs
pusha
shll
pop
push
sub
and
in
xchg
je
addr16
xchg
pop
pop
cmp
das
rcl
scas
xchg
sbb
push
xchg
sub
inc
pop
imul
push
inc
cmp
cwtl
push
leave
push
and
dec
cmp
movsl
in
enter
stos
idivl
and
xor
out
and
mov
fcomp
inc
add
in
dec
ret
out
adc
incl
sbbl
lcall
add
xor
and
xchg
xor
sub
gs
out
add
int3
mov
rcll
cld
inc
ja
repnz
jl
sbb
xor
insl
sbb
jl
cmp
pop
divl
mov
mov
jbe
mov
dec
cmp
pop
shl
inc
inc
incl
loop
cmp
jmp
stos
xchg
jne
je
enter
mov
repz
sub
inc
testb
imul
dec
lahf
out
mov
push
sbb
and
push
mov
and
push
ret
mov
pop
sbb
jo
addr16
dec
pop
insl
and
adc
das
jp
mov
or
xor
ficompl
add
jnp
pop
xor
mov
xchg
jb
jb
outsl
xor
xchg
jle
icebp
adc
cs
and
data16
ret
jg
and
pop
push
inc
fincstp
or
xor
pusha
aam
or
xchg
lret
ss
sbb
mov
jl
lea
filds
nop
add
or
pop
or
mov
cmp
jecxz
jno
rcrb
popf
and
xchg
add
fisttpll
iret
add
leave
rorl
fldcw
adc
dec
add
ss
sbb
ret
cs
cmp
pop
aas
enter
or
inc
popf
jmp
jo
dec
in
jecxz
mov
xchg
fnsave
ret
sub
adc
add
dec
int
fstpl
divb
ljmp
mov
daa
into
jns
aaa
sbb
js
rolb
ds
sahf
lret
testl
mov
cmpsl
lahf
or
add
xchg
mov
shrb
dec
mov
cmovno
stc
inc
pop
or
lret
jae
inc
sub
jmp
add
mov
loopne
cmovs
xor
inc
xor
roll
cmc
pop
sub
sub
daa
pop
cmp
popf
xor
test
cmpsb
push
jns
data16
inc
hlt
xor
inc
and
mov
mov
sbbb
jns
mov
js,pn
popa
jno
lds
hlt
push
xchg
jl
xchg
mov
fnstcw
addr16
sub
inc
add
subl
cs
das
idivl
adc
das
push
mov
clc
movsl
xchg
andl
sti
iret
fnstsw
pop
js
addr16
push
stos
fldenv
pushf
in
and
loopne
xchg
outsb
pop
leave
hlt
xor
sbb
xlat
lret
pop
popa
lods
fldcw
mov
dec
and
gs
test
ret
test
mov
out
test
icebp
and
popf
and
enter
inc
lahf
enter
xchg
sbb
mov
xchg
pop
fnstenv
xchg
inc
mov
call
dec
xchg
lcall
xlat
or
mov
fsubrs
dec
dec
daa
xchg
pop
jmp
mov
mov
cld
bound
hlt
mov
xchg
mull
fisttpll
outsl
pop
aad
mov
sbb
mov
movsl
pop
mov
nop
mov
imul
adc
rcrb
or
loopne
jecxz
or
fidivs
add
movsb
mov
and
mov
inc
arpl
mov
fbld
mov
mov
daa
js
int3
negl
and
mov
shr
fwait
hlt
outsb
insb
push
add
fisttpll
bndstx
mov
or
add
pop
dec
daa
mov
xlat
fisubl
psubsb
inc
mov
xchg
call
push
push
dec
repz
and
stos
rcll
fisttpll
test
mov
dec
or
sti
adc
dec
in
out
and
mov
xor
push
inc
rol
jb
ds
inc
cmp
cmpsb
mov
lods
jge
aaa
cmp
stos
xorl
sti
xor
pusha
push
outsl
xchg
fistl
in
push
test
addr16
push
imul
sbb
inc
xlat
pushf
inc
push
or
ljmp
or
mov
rorl
push
ror
loop
sbb
inc
push
mov
addr16
daa
xchg
dec
femms
xor
push
stos
dec
mov
aam
jg
cmc
mov
xor
pop
test
mov
mov
sub
fsts
daa
jecxz
or
pop
or
add
pusha
pop
mov
xor
mov
xchg
jp
dec
pushf
mov
lods
and
add
roll
fiaddl
imul
lret
stos
insb
jmp
inc
cwtl
test
pop
cmp
int3
and
aas
pop
mov
sbb
mov
cli
ljmp
ret
mov
add
gs
out
lods
lock
fwait
ss
mov
aam
lahf
push
sarb
int
popa
xorl
int
cwtl
push
scas
and
pop
push
in
arpl
jle
mov
push
xchg
test
mov
cltd
notb
aad
sahf
adc
and
push
dec
scas
jne
ficomps
mov
mov
xor
cmp
jnp
jg
xor
out
or
frstor
out
in
loop
ja
xchg
insb
sbb
fsubrl
stc
filds
jecxz
mov
cmp
das
mov
rol
cs
sub
loopne
push
jge
push
loopne
xchg
das
mov
or
jbe
jecxz
mov
es
push
add
xchg
inc
lret
arpl
popf
or
mov
mov
mov
lods
pop
jae
jns
pop
pop
mov
or
pusha
or
sub
outsl
or
mov
cmc
xor
cmpsb
aaa
mov
test
dec
or
sub
std
stos
mov
dec
xchg
pusha
or
pop
in
les
push
or
jl
or
jp
xor
inc
or
std
push
pop
xchg
cmpsb
xlat
and
push
ds
ret
cmpsb
mov
movsl
or
push
mov
jecxz
dec
inc
mov
adc
fcoml
std
push
pop
adc
fadd
test
mov
fstp
xchg
hlt
add
pop
out
cmpsb
adc
xchg
sub
add
test
adc
repz
sahf
push
flds
cmc
jbe
fbstp
iret
in
cmpl
jle
push
incb
mov
aas
inc
pop
rcll
shll
pop
xchg
ss
rcrb
lds
xor
lds
push
out
cmp
pop
fnstenv
mov
aas
repz
sub
andl
sub
jle
roll
mov
jle
pop
adc
xchg
test
sub
mov
lret
and
jb
loope
add
cmpsl
lfs
clc
dec
adc
sub
dec
loope
fcmovnbe
mov
or
and
xorl
dec
inc
sti
mov
xor
out
pop
push
stos
daa
gs
sub
pusha
out
into
aas
xor
push
sub
sub
xchg
icebp
ja
cmc
mov
ss
push
mov
fcoms
addr16
data16
ds
mov
iret
dec
xor
xchg
mov
fs
scas
xor
iret
mov
and
repz
mov
jmp
loopne
mov
and
sbb
mov
mov
test
cld
mov
jge
call
add
daa
out
mov
test
adc
push
mov
push
fnstsw
or
mov
push
cmpsb
adc
mov
inc
or
adc
test
in
inc
outsl
pop
in
mov
fidivrs
adc
xchg
les
inc
dec
jno
dec
popl
mov
dec
xchg
jne
mov
pop
mov
inc
pop
movsl
leave
pop
mov
movsl
fcmovnu
jnp
aas
mov
in
lcall
cld
add
in
xor
cmpb
sbb
inc
dec
int3
jno
adc
push
sbb
dec
push
clc
mov
jmp
flds
mov
sub
xlat
adc
fcoml
out
xchg
daa
inc
loop
or
nop
push
lret
jmp
loopne
outsl
repnz
fwait
sub
lret
jmp
ret
push
mull
inc
out
sbb
ja
push
mov
outsb
xlat
std
add
leave
lea
push
fildll
mov
mov
sbb
cli
stc
cmp
add
dec
int
adc
jp
add
popa
leave
jecxz
das
stc
jg
into
push
jo
cs
js
pop
jp
sub
loopne
sub
xchg
movb
or
cmp
mov
pusha
and
int3
dec
xchg
stos
cs
push
ja
lods
mov
jae
jo
mov
loopne
les
xchg
sub
cmp
fisubrl
sub
pop
arpl
xor
out
mov
inc
lret
sub
fidivrl
int3
jnp
xchg
mov
jae
xor
jno
push
scas
cmp
dec
cmp
push
imull
fdiv
subb
push
fs
mov
aas
inc
fwait
lret
or
repz
ret
cmp
popa
add
push
xchg
call
arpl
lret
pusha
dec
mov
sub
mov
outsl
invd
sarl
mov
push
popa
pop
xchg
sub
adc
aas
bound
mov
mov
push
and
cwtl
lret
call
lea
addr16
pop
fidivl
jb
or
push
pusha
adc
fwait
xlat
push
adc
push
cmpsb
inc
or
ds
aaa
enter
mov
int
mov
xor
mov
pop
fldt
mov
pop
jno
scas
sub
inc
leave
ret
test
sbb
push
xchg
icebp
sbb
xchg
dec
in
lods
pop
in
movsl
call
xor
iret
icebp
test
fisubl
or
fidivs
ljmp
xchg
das
icebp
adc
arpl
mov
fsubrs
sbb
data16
negb
sbb
jb
jl
fsubrp
push
sti
and
and
jnp
jbe
pop
popa
inc
es
cmc
movsl
jns
out
pop
dec
outsl
pop
lods
ficoms
lock
mov
fsubr
add
and
sbb
cmp
cmp
jmp
pop
lods
gs
jne
sbb
mov
adc
int3
jp
aaa
sbb
or
cld
mov
stos
jae
inc
pop
pop
fucomip
int
in
loopne
cmpl
mov
push
ret
pop
fwait
xor
jb
add
ljmp
sub
in
push
pop
std
test
pop
out
xchg
loope
insl
fsubrp
adc
sbb
test
imul
sbb
es
mov
jae
stos
sub
push
mov
int3
mov
mov
push
addb
sub
jne
pop
adc
aas
xchg
inc
inc
lds
lods
and
notl
add
insl
adcl
fcmovbe
aas
cmp
in
sarl
mov
icebp
push
lock
push
test
mov
into
or
xchg
xchg
mov
jbe
jbe
adc
pop
push
inc
data16
push
dec
aas
lods
mov
inc
mov
jae
inc
imul
inc
scas
inc
mov
mov
or
jo
ret
mov
ficompl
cmpsl
cmp
je
sub
pop
clc
pusha
or
sbb
out
aad
jl
lcall
xchg
test
loop
jl,pt
adc
lock
stos
repnz
jmp
push
into
and
shlb
push
out
and
fildll
dec
fs
jae
jae
fldt
stc
xor
lret
mov
ss
dec
nop
pop
out
push
sbb
ficoms
inc
test
cmp
enter
flds
lahf
cld
pop
or
xchg
push
xchg
sub
nop
sub
adc
push
in
cs
xchg
loope
lods
xor
mov
in
mov
mov
xchg
loopne
adc
cmp
adc
mov
lcall
xchg
dec
imul
adc
rorb
ss
and
icebp
ds
mov
lea
ds
and
sbb
mov
and
add
or
and
mov
cwtl
icebp
or
mov
in
leave
fwait
ss
ss
mov
sub
xchg
mov
mov
in
scas
pop
jnp
sbb
jg
decb
push
pop
iret
cltd
sub
repnz
cltd
cmc
cwtl
mov
inc
cmovle
mov
in
xchg
movsb
mov
sarl
roll
sub
push
sbb
nop
inc
movsl
enter
je
addr16
jg
iret
jnp
mov
pusha
aam
jne
fisubl
or
scas
incl
fistl
es
testb
xor
lods
push
pushf
xlat
push
pop
cmp
ljmp
in
add
das
je
rorl
test
adc
cltd
jbe
mov
mov
mov
fdivs
outsl
and
xchg
xor
ds
enter
xor
lret
and
outsl
add
sub
movsl
pusha
cwtl
in
aaa
fnstcw
or
mov
das
adc
inc
adc
mov
add
sub
jb
push
ret
rcrl
adc
and
aaa
xchg
stc
mov
repz
jnp
inc
cmp
pop
sbb
sbb
fwait
xchg
cmpsb
adc
pop
push
inc
lret
push
mov
adc
mov
pop
jecxz
adc
push
mov
imul
ret
or
sbb
xchg
sti
inc
jp
mov
je
in
lds
repz
in
loope
sbb
test
mov
mov
mov
xchg
cmp
fwait
jp
roll
rorb
push
xchg
ss
cmpsb
in
fmull
jnp
push
in
call
sbb
movsb
mov
sbb
push
mov
lcall
in
sbb
fcmovnb
xchg
insb
pop
push
nop
sti
mov
adc
mov
negl
sub
arpl
pop
mov
push
lret
ret
xchg
or
mov
pop
mov
aam
in
mov
dec
out
idivb
lcall
das
or
adc
insl
inc
ljmp
sti
sbb
out
loop
jp
cli
sahf
insl
add
ljmp
ss
fxch
daa
adc
jns
mov
inc
out
dec
mov
and
dec
lods
loop
popa
push
and
idivb
stc
inc
xor
in
enter
int
rol
xchg
das
pop
test
push
je
aad
adc
arpl
dec
call
outsl
out
lret
cmp
fbstp
adc
pushl
jg
xlat
jns
push
pop
cmc
lea
push
in
movsl
dec
dec
sbb
rolb
bound
insl
cmp
in
xor
inc
das
or
xchg
lcall
cwtl
cli
loopne
ficomps
fucomip
test
inc
or
mov
dec
iret
popf
dec
pop
jno
jo
lret
pop
xor
push
cmpsb
test
les
mov
ret
shll
mov
jnp
je
test
push
imul
add
adc
out
inc
add
cmp
dec
and
sub
lods
xor
dec
outsl
dec
mov
roll
add
leave
mov
mov
lds
mov
movsb
mov
mov
xchg
adc
aad
mov
mov
cmc
imul
movsb
add
push
mov
mov
gs
outsb
int
sub
cmp
call
adc
and
add
adc
cwtl
or
cmpsl
jns
sarl
pop
outsb
es
lret
std
sbb
cmc
xchg
leave
sbb
ret
mov
dec
push
lea
aaa
outsb
nop
clc
jno
por
fisubrs
xchg
mov
cmp
sub
mov
mov
cld
clc
push
cmp
mov
jge
xchg
jno
jnp
mov
cli
mov
push
fdivl
mov
mov
add
sbb
fs
nop
loopne
mov
fsub
and
mov
insl
xor
inc
xor
lods
dec
mov
mov
inc
pushf
or
gs
push
dec
lcall
ds
aaa
loop
mov
pop
jmpw
pop
cmpps
xor
in
into
mov
negl
add
in
lea
fcom
stc
pop
mov
mov
sub
rorl
mov
mov
arpl
sub
ljmp
jno
and
push
mov
les
dec
lea
ss
add
cmp
add
mov
sbb
xor
push
dec
adc
pop
stc
xchg
sub
faddl
shr
cmp
adc
pop
inc
adc
push
out
push
mov
dec
pop
data16
mov
xchg
jne
mov
dec
inc
push
xor
push
mov
ljmp
push
or
clc
or
xor
add
inc
gs
mov
out
adc
push
ret
jecxz
push
inc
sbb
push
adc
push
xlat
jnp
sbb
xchg
pop
divb
mov
testl
add
mov
test
daa
sub
call
pop
mov
pop
add
fisubs
xchg
popf
ss
push
stos
out
cmp
cld
add
pop
popf
stos
js
push
ljmp
pop
les
insl
out
xor
push
jp
mov
cmc
or
pop
mov
lret
popl
add
or
pop
jns
jecxz
cmp
and
xchg
or
inc
push
jg
arpl
mov
rcrb
insb
pop
add
adc
test
lret
ror
pop
cltd
stc
stc
bound
outsb
call
and
xlat
mov
lahf
or
cmp
aad
lods
loope
fs
mov
ret
ds
into
sbb
and
std
xor
xchg
stos
aam
push
fisubl
sub
mov
or
loopne
xchg
or
fsubl
hlt
cmp
adc
and
ljmp
sbb
cmpsl
push
hlt
and
dec
outsl
mov
push
popa
dec
mov
adc
mov
loop
subb
outsb
fcomi
mov
pop
add
test
bound
xor
jae
push
cld
mov
in
jp
pop
test
adc
in
cmpsb
sub
pmaddwd
dec
cmp
mov
and
ret
jae
adc
jge
mov
jl
test
sbb
cwtl
push
sbb
in
dec
call
xor
mov
adc
jle
dec
sbb
cld
adc
leave
dec
push
lds
adc
into
rclb
sub
popa
adc
fbstp
int
out
out
cwtl
inc
stc
dec
movsl
das
sub
sbb
mov
in
adc
inc
cmp
add
cmp
pop
xor
sub
cmp
cmp
lds
xchg
push
rcrb
and
inc
fwait
mov
xor
pop
push
lods
jge
push
mov
add
test
pop
inc
rorb
add
dec
fmuls
insl
ljmp
sbb
aaa
push
sub
or
imul
push
int3
outsb
test
ficoms
stos
pop
ljmp
repnz
repnz
sub
adc
xchg
int
gs
sub
push
mov
xchg
adc
pop
ret
stc
xchg
repnz
test
mov
lea
arpl
stos
ja
ret
data16
nop
stos
xor
mov
mov
movb
jge
xchg
push
in
sub
cmp
aaa
pop
scas
cmc
sahf
outsb
push
fidivrs
stos
xchg
sbb
loop
jmp
add
xchg
cli
pushf
or
push
mov
mov
cmpsb
xchg
adc
dec
out
cltd
xchg
xor
xlat
jae
jecxz
pop
mov
daa
out
dec
lods
mov
push
fsubrp
push
psadbw
lcall
push
ljmp
and
pop
sub
into
popf
int
pop
inc
and
sar
iret
clc
sbb
fisttpll
out
pushl
jbe
sub
icebp
jecxz
scas
outsl
mov
lds
mov
dec
jns
mov
cmpb
push
dec
push
mov
hlt
mov
stos
cmpl
sbb
test
imul
sbb
fmuls
and
lock
sub
mov
into
lret
mov
mov
push
das
das
mov
mov
gs
xchg
inc
inc
pop
or
cmp
data16
xor
lret
mov
sbb
bound
bound
adc
jae
push
loopne
or
pop
test
dec
xlat
push
jbe
daa
hlt
sbb
lods
pop
insb
jecxz
cmpsl
mov
imul
xor
pop
push
add
pop
pusha
pop
or
cmp
stc
mov
testb
and
mov
xorl
xchg
ljmp
and
call
inc
popa
xchg
push
arpl
dec
rcr
inc
jo
xlat
mov
mov
sub
lret
push
sti
fsubrs
loopne
dec
and
ja
ljmp
icebp
inc
mulb
adc
xchg
cld
or
gs
dec
and
xor
and
jmp
lcall
mov
fstps
pop
xlat
lret
push
pop
pop
xor
aaa
sbbl
dec
fldcw
sub
add
repnz
cmp
loop
cmpsl
push
mov
imul
xchg
cltd
xchg
movsb
xchg
fidivs
or
push
pushf
js
ds
cmp
adc
fisubrs
xchg
jecxz
enter
std
inc
xchg
inc
fmull
pop
jo
and
imul
adc
pusha
pop
popa
aad
enter
fs
mov
int
enter
in
int
cmpl
jbe
cmp
cmp
pop
mov
bound
mov
inc
repnz
push
xchg
mov
xor
and
adc
push
dec
out
dec
aas
in
in
jle
pop
mov
mov
pop
ror
xchg
adc
gs
mov
insl
mov
xchg
fidivl
fwait
dec
mov
popa
mov
xor
fwait
dec
mov
push
pop
cltd
jno
fsqrt
and
inc
cmp
fwait
cwtd
xlat
xor
ja
inc
fmulp
push
cmp
fcomp
mov
mov
adc
stos
aad
mov
jl
sub
push
mov
mov
in
movsb
push
mov
jo
or
push
jp
push
add
aaa
insl
sbb
and
mov
xchg
in
push
mov
mov
repz
in
daa
mov
pop
loop
ja
imul
xor
cltd
in
scas
mov
xor
pop
cmp
pop
pop
lcall
jb
jo
int3
sub
fsubr
aad
mov
mulb
int3
push
paddd
imul
add
sub
pop
fsubr
sub
icebp
dec
imul
dec
xchg
fs
fldenv
cmp
jl
std
xchg
rolb
cmpsb
cltd
ja
addr16
call
shr
jb
hlt
mov
dec
inc
aas
mov
insl
leave
pop
fnsetpm(287
pop
popa
inc
sbb
xorb
push
cmp
stos
orb
fwait
push
push
add
lahf
xchg
mov
dec
pop
cwtl
push
int3
push
sbb
xor
std
jg
mov
lds
xchg
push
fildl
adc
adc
xlat
mov
xorl
in
and
fisttps
and
fsubrl
cmp
mov
pop
imul
inc
loope
fdivrl
add
dec
outsl
or
push
inc
ret
mov
sbbl
cmp
dec
out
movsb
fdivs
cmc
les
aas
jle
pushf
fs
adc
push
add
ror
cld
and
daa
or
inc
cli
fs
lds
mov
pop
loop
stos
fnsave
sub
pop
push
cmp
jg
or
mov
mov
and
mov
xor
xchg
icebp
xchg
adc
mov
xchg
xchg
out
pop
fcmovbe
int3
pop
mov
push
insb
xlat
push
push
ja
mov
xchg
outsl
xchg
xchg
jle
adc
adc
jg
popl
iret
divl
loopne
into
cmc
dec
rorb
xchg
add
into
ds
mov
mov
aam
cmc
cmp
mov
push
xor
enter
mov
or
jb
dec
xchg
lds
lea
mov
in
push
or
pop
sahf
xchg
push
pop
jb
lcall
vpacksswb
dec
imul
mov
mov
or
les
std
cwtl
jmp
push
std
out
test
inc
or
mov
inc
rcl
mov
push
mov
xchg
jle
insb
stos
rorb
push
dec
push
mov
popa
cmp
imul
pop
pushf
xor
push
test
movb
jge
cmp
mov
in
mov
sbb
dec
imul
sbb
cmp
jb
ja
loope
gs
lds
mov
xchg
call
outsb
xchg
out
dec
sbb
and
xchg
mov
iret
fldt
es
cmp
popl
loopne
imul
dec
cmpl
xorb
xchg
xor
gs
aaa
cmc
jns
sub
sbb
xlat
dec
jmp
loop
lods
xor
fstps
arpl
stc
js
outsl
sub
jge
fldt
fmuls
arpl
xlat
sub
inc
incl
int3
sub
mov
push
stos
jecxz
mov
cli
xor
jo
loope
cmp
jnp
lea
testb
jbe
and
je
in
jo
clc
sbb
notl
out
faddl
fsubrl
out
leave
adc
test
jb
out
stos
arpl
fcmovnb
pushf
mov
mov
adc
mov
mov
icebp
dec
lea
jne
cmp
adc
test
jns
jnp
adc
xor
push
repz
xchg
das
xchg
add
test
clc
fsub
cmp
out
xlat
jl
cmp
cltd
or
in
shrb
push
sub
aam
repz
push
xchg
enterw
testl
mov
xchg
jne
popf
les
mov
clc
ret
and
fbstp
loope
sub
or
jae
sti
mov
push
mov
cwtl
adc
cmp
inc
stc
lods
in
or
icebp
jno
xchg
jmp
and
jmp
inc
clc
mov
xor
push
xor
add
rcrb
pop
lcall
push
arpl
nop
fildl
sti
dec
imul
xchg
mov
jmp
pushf
xlat
sub
jmp
movsb
fcomi
sub
cmp
pushf
sbb
lods
imulb
sub
xchg
fnstsw
push
lahf
fs
ds
jno
clc
stc
sub
xlat
xchg
mov
jg
inc
cmp
test
xchg
add
or
lea
pusha
jecxz
pop
push
pushf
rcrl
sub
adc
lcall
cs
js
mov
cmpsl
ja
mov
mov
ss
fidivs
daa
or
fsubrl
jb
or
aas
imul
and
xor
mov
add
ficoml
or
arpl
pop
dec
fadds
pop
adc
sub
push
jns
mov
shl
dec
and
jmp
hlt
jge
add
lods
fists
push
pop
imul
jmp
std
jo
into
xchg
icebp
mov
lret
adc
addb
push
ljmp
cltd
mov
jle
jo
add
dec
xchg
or
out
int3
shrl
int
inc
cmp
sub
sub
push
iret
or
inc
jbe
xchg
inc
lods
rorl
lret
sub
lret
sbb
imul
xchg
adc
jg
pop
arpl
xor
xchg
hlt
out
mov
dec
cmpsl
aas
cmp
lea
jg
sub
cmp
filds
into
jo
xchg
inc
or
bound
mov
loop
sti
daa
fisttpl
out
movsb
sbb
insb
les
pop
dec
xor
scas
mov
cwtl
push
in
dec
mov
mov
lea
mov
inc
sbb
sub
push
mov
mov
das
fsubs
gs
fistpll
mov
ds
push
fstps
gs
jle
xchg
cmp
xchg
in
push
cmp
xor
pop
iret
push
sub
ljmp
cmp
xchg
movsb
pusha
push
push
inc
sbb
ja
popf
adc
mov
xchg
adc
push
xlat
jae
shll
jmp
sub
enter
ret
cmp
mov
mov
cs
punpckhdq
fwait
pop
adc
inc
lcall
jb
sbbl
lcall
repz
jae
rep
arpl
xchg
cmpsb
add
cmc
push
out
dec
or
jo
mov
popa
inc
jb
jo,pt
shll
arpl
sbb
xchg
push
je
mov
test
idivl
in
mov
sub
xor
and
rcr
data16
add
xorb
xchg
andl
lock
mov
aam
xchg
mov
subb
push
sub
mov
and
push
mov
enter
mov
sub
jo
pushf
call
fcompl
push
faddl
cmpsb
sub
loop
cmpsb
pop
and
mov
ja
mov
xchg
inc
and
stos
push
push
xchg
mov
repz
xchg
sub
test
fs
mov
arpl
mov
ljmp
jne
cmp
push
mov
scas
jne
sbb
daa
enter
out
jb
jl
add
mov
or
frstor
shlb
fiaddl
gs
push
mov
leave
stos
mov
mov
jbe
stos
sub
xchg
popf
jecxz
iret
xchg
xchg
insb
push
cmp
sub
xchg
das
arpl
inc
mov
imul
in
cld
cwtl
int3
sub
dec
xorb
cmpsl
ljmp
push
xor
mov
popa
addr16
or
inc
sahf
cmp
repnz
dec
jns
adc
cmp
mov
add
ret
lods
inc
iret
dec
pusha
cwtl
lcall
xor
incb
sbb
push
inc
xchg
vpcmpgtd
dec
xor
testb
out
pop
push
push
pop
cmpsl
dec
out
xor
lods
mov
jo
mov
icebp
and
push
pop
das
aas
dec
ljmp
out
lods
mov
cmp
stos
mov
xchg
jmp
inc
pusha
fucomi
test
clc
add
out
das
fidivl
enter
xchg
outsl
movsb
subl
dec
call
ljmp
ret
enter
sub
in
xchg
mov
cmp
mov
rcr
xlat
popa
adc
mov
jnp
andb
jb
repnz
rorl
jecxz
xchg
movsb
enter
cmpsl
imul
gs
xor
negb
lock
mov
inc
push
enter
mov
xor
shlb
or
leave
or
adc
add
mov
xor
movsb
sbb
dec
push
clc
stos
xchg
or
xchg
in
pusha
imulb
into
cmp
shl
mov
sbb
xor
or
bound
loope
pusha
xor
inc
dec
bound
adc
dec
insb
and
dec
adc
shrb
pop
sbb
shrl
push
cmp
ficoml
jne
lret
push
out
mov
dec
sbb
aaa
xor
xor
mov
add
aaa
mov
test
push
push
pop
dec
or
negl
jb
stc
pusha
imul
ja
das
lods
jp
inc
jg
ret
push
ret
shll
test
pop
aam
popf
xchg
inc
mulb
rcr
jl
jb
dec
xchg
xchg
mov
aas
adc
jl
xor
xor
in
out
mov
ljmp
mov
cld
inc
js
adc
xlat
and
orl
fwait
movsb
enter
sahf
sbbl
int3
xchg
repz
ds
inc
dec
sub
call
add
inc
push
mov
aam
gs
lret
popf
lcall
lock
mov
xor
fdivl
loope
pusha
xor
mov
cmp
enter
inc
ret
fldl
repnz
popf
push
fwait
call
add
pusha
scas
cli
enter
scas
ds
pop
mov
mov
push
push
mov
or
xor
cmp
cmp
xorb
push
addb
mov
rolb
aad
inc
loope
mov
xor
lea
sub
cmp
push
std
or
bswap
mov
sarb
jae
das
repnz
cs
je
and
add
sub
xchg
dec
sbb
jle
test
sbb
ja
rcll
or
aad
add
mov
das
push
out
imul
test
cmp
xchg
fs
mov
test
sti
xchg
and
pop
jo
sub
and
lods
rcrb
aad
inc
pop
mov
add
push
fldt
and
dec
pop
sbb
nop
gs
inc
jmp
sbb
cmpsl
aad
in
or
xor
mov
pop
xor
pop
cmp
cwtl
mov
js
icebp
push
mov
xor
pushf
jmp
mov
or
lcall
in
cmp
in
outsb
lods
js
loopne
sub
jae
mov
mov
jo
xchg
shll
push
or
divl
ljmp
inc
fisttps
fs
fistps
test
add
movsb
jmp
arpl
sub
jmp
mov
sub
outsb
mov
add
xor
pop
mov
jae
inc
jnp
pop
and
jl
ds
icebp
hlt
or
lods
rorb
inc
dec
fstpl
sub
dec
ret
xchg
sub
add
kmovb
fadd
sahf
mov
add
les
mov
js
pop
add
cmp
scas
mov
arpl
dec
test
aam
ret
lahf
adc
inc
sbb
cmp
iret
imul
ffree
cmp
pop
and
int
pop
jnp
push
sub
mov
int3
cli
fstps
stos
and
orb
xchg
pusha
mov
pop
std
out
lods
add
fucomp
notb
push
imul
mov
pop
inc
xchg
test
out
mov
mov
pop
sub
test
sub
test
scas
dec
out
imul
or
clc
scas
mov
iret
sub
std
dec
jns
cs
in
xchg
and
mov
jb
jp
pushw
lret
pop
addl
mov
out
push
stos
xorl
inc
mov
fucomip
jge
or
push
lahf
pop
inc
ret
jl
lcall
mov
xchg
xchg
sub
aas
lret
cli
scas
or
mov
fadd
les
pop
aas
jmp
movsl
and
repnz
add
cmc
jecxz
mov
repz
incl
cwtl
and
bound
xor
pop
aad
jnp
xchg
cmp
or
lahf
out
push
pop
mov
int
mov
mov
cmp
cld
in
ja
stos
insb
inc
mov
jne
and
xchg
add
test
test
cmp
inc
dec
cmp
out
sahf
outsb
test
pushl
hlt
in
clc
rorb
xchg
jb
ljmp
in
addb
lods
mov
fidivrs
pop
add
inc
xchg
push
or
cld
jg
pop
mov
out
sub
out
lahf
outsl
aaa
push
mov
fldt
xorb
add
imul
pop
mov
mov
ja
addr16
jg
jg
push
adc
mov
or
mov
xchg
fcmovnbe
add
pop
mov
icebp
pop
xchg
and
sub
xchg
cltd
add
bound
pop
sti
cmp
pop
nop
dec
pop
push
sbb
inc
rclb
mov
lock
movsl
fxch
lret
sbb
pop
cwtl
lea
xchg
shrb
and
or
and
add
mov
fldenv
insl
push
xor
dec
jo
jns
pop
inc
cmc
pop
pop
jns
shll
jb
loope
stc
sti
enter
cmp
pop
fwait
mov
pusha
fnstenv
dec
insl
jns
xorl
outsb
or
mov
inc
jp
adc
pop
add
mov
mov
sub
push
repz
mov
mov
lods
ficompl
test
xchg
scas
inc
in
mov
and
xchg
fdivrl
lahf
dec
sub
push
out
push
mov
cmp
mov
xor
or
stos
pop
js
mov
mov
cmp
sbbl
call
sahf
lcall
pop
jo
int3
xor
and
lods
adc
pop
and
jno
fdivrs
es
int
popf
movsb
and
dec
add
pop
divb
das
add
mov
jbe
inc
mov
test
cs
xchg
or
loop
in
popw
dec
cmp
xor
lret
int3
xchg
test
mov
mov
notl
or
sub
out
dec
mov
add
cmp
mov
jmp
scas
mov
insb
fldl
loope
adc
jno
xor
jo
outsl
cmp
es
push
cmc
xchg
sbb
xchg
push
push
jle
inc
mov
ror
int3
xchg
les
ss
fists
inc
sub
shrb
imul
or
pop
std
repnz
sbb
incb
mov
push
jle
jbe
insb
inc
decb
roll
cmp
inc
pop
pop
cmp
or
lea
test
cmc
add
inc
lds
lahf
icebp
jmp
clc
or
inc
mull
push
repz
add
jmp
cmp
or
sbb
imul
inc
cli
arpl
data16
div
mov
insb
imul
test
test
in
popf
xchg
in
clc
mov
loop
push
movsl
xchg
jp
bound
leave
fimuls
push
aaa
popa
jge
and
pop
xor
inc
push
incb
stc
fsubrl
mov
popf
repnz
lods
sbb
mov
mov
ret
cmp
xchg
or
fstp
imul
xchg
aas
call
dec
xchg
mov
and
add
insl
test
push
jmp
and
inc
mov
das
imul
jp
fwait
out
sbbl
test
add
xchg
xchg
repz
into
pop
push
sbb
inc
lret
repz
sbb
aaa
or
dec
jo
pop
in
inc
mov
xor
inc
ror
cwtl
add
fwait
xor
fstl
shll
outsb
cs
jp
data16
aad
mov
pusha
jecxz
add
cmp
or
fsubp
xchg
rdpmc
mov
jo
pushf
dec
cli
add
out
ret
mov
out
mov
int3
fcmovnbe
gs
sbb
xor
push
xor
test
inc
ss
mov
pop
sbb
sbb
xchg
sub
int
pushf
out
and
repz
clc
popf
inc
ficompl
out
xchg
sahf
ss
icebp
sti
sbb
and
je
out
out
mov
jmp
lods
sbb
mov
js
insl
push
dec
sarl
pop
or
les
rolb
pop
mov
shr
pop
pop
sub
sub
fsts
fnsave
jbe
subb
int3
mov
inc
lea
push
push
bound
sahf
push
push
pop
dec
xlat
cmp
loopne
sbb
std
xchg
jbe
sub
inc
and
add
gs
xor
stos
sub
pop
divps
xor
push
cmp
or
xor
addr16
cmpsb
inc
rorb
outsb
aas
in
movsb
in
xchg
or
and
mov
loopne
lret
xchg
decb
addr16
mov
out
mov
push
or
add
pop
push
inc
add
push
ret
mov
cs
cmp
and
mov
cmp
test
pop
inc
or
push
jno
mov
dec
or
lcall
push
dec
sub
and
ljmp
adc
cmp
leave
xor
cli
jns
mov
cmpsb
add
jb
sbb
orb
jmp
das
mov
inc
jmp
and
out
iret
xor
or
lods
dec
outsb
sbb
jmp
insb
and
lret
sbb
sti
push
pop
jg
scas
stc
adc
xchg
mov
pop
xchg
xchg
cmpsl
ja
popf
out
mov
xchg
cli
jns
jle
imul
int
jg
dec
adc
xchg
outsb
mov
aam
dec
nop
out
cmp
lock
push
xchg
mov
lea
xchg
int3
test
lret
sar
cmpsb
or
jge
pop
adc
cli
push
loope
xchg
enter
test
imul
mov
call
jb
jge
inc
inc
dec
push
pop
cltd
dec
and
xchg
popf
xchg
xor
jge
scas
xchg
sub
or
push
add
js
dec
pop
mov
js
xchg
aad
out
cld
movsb
repnz
rcl
popa
in
jae
rcrb
push
divb
add
sub
or
fwait
in
sbb
xor
push
rorb
scas
leave
arpl
ja
jg
sahf
jp
out
mov
push
pop
pop
fstps
xchg
testb
mov
pop
iret
cmpl
ret
pop
ljmp
xchg
cmpsl
daa
mov
mov
mov
sbb
mov
in
adcl
dec
add
ja
daa
mov
int3
and
ficoms
mov
sbb
shrb
sbb
in
pop
aam
jnp
ljmp
xchg
rolb
pop
clc
idivb
or
popa
dec
adc
add
andb
mov
shll
daa
int3
mov
lret
or
or
testb
repnz
ds
mov
push
cwtl
pop
mov
xchg
pusha
pushf
push
xor
add
mov
dec
stos
xor
aas
push
sub
jae
adc
lret
mov
push
lock
xor
add
arpl
lods
jno
mov
shlb
inc
push
lret
and
subl
in
jecxz
rclb
cld
sub
mov
divb
sub
sbb
data16
pop
sbb
gs
jne
aam
scas
movsl
lea
in
jnp
enter
insb
call
inc
js
fcompl
xorb
les
dec
mov
insl
sbbl
push
sub
or
stc
or
hlt
popa
aad
es
sub
insl
sahf
jae
jne
fcomps
dec
outsl
jnp
add
mov
push
fisubrl
jmp
popa
in
or
mov
lret
adc
fwait
adc
mov
aad
cmp
testb
mov
and
outsb
add
shll
xor
jb
add
xor
jg
bound
and
adc
cmpsl
sbb
sub
fwait
outsb
in
ss
cmpsb
push
fldt
and
sbb
sbb
les
sub
cmpsb
daa
faddl
fldl
jp
fstl
mov
inc
enter
movsb
adc
loop
jge
add
pop
xchg
push
jle
pop
ror
and
rcrb
movl
jecxz
jae
jne
mov
sbb
inc
mov
or
popf
popa
sub
negb
je
outsb
jge
lea
sub
mov
cmp
mov
pop
cwtl
pusha
mov
lret
jo
inc
dec
jno
push
pop
aas
ja
push
fwait
xor
and
sbb
xchg
loopne
fs
cmpsb
and
sbb
orb
rcll
dec
sahf
jp
jecxz
xchg
test
repnz
mov
adc
inc
loop
lcall
xor
lods
jl
in
repnz
mov
xor
mov
pushf
xchg
lret
cmpsb
mov
push
pop
push
mov
das
and
int3
jne
adc
inc
pop
pop
je
ret
cmp
fnstenv
fnstenv
call
xchg
popl
cmp
subb
out
or
fbld
dec
push
insl
jno
ss
bound
push
int
int3
bsf
stos
pop
mov
mov
ja
cli
fld
xor
and
test
lahf
add
xor
movsl
mov
imul
mov
fcmovnbe
dec
and
xchg
xchg
stos
push
fdivrs
xchg
ljmp
dec
das
mov
jo
pop
xchg
in
push
jns
jae
idiv
mov
adc
int
dec
f2xm1
leave
cltd
mov
and
and
push
sub
mov
pop
mov
xchg
iret
int
push
repnz
mov
fsubl
bound
scas
add
push
push
inc
addb
mov
pop
mov
cs
push
negb
jmp
pop
add
cmp
cmp
xchg
rorb
lock
jnp
xor
in
int3
or
xchg
shll
adc
pop
sbb
and
mov
scas
mov
push
rcll
add
jecxz
cmp
xchg
pop
pop
xor
lea
clc
push
dec
test
adc
push
push
or
xor
mov
outsb
or
xbegin
pop
mov
and
rep
sbb
stc
int
jno
push
mov
es
adc
xchg
sub
xchg
ret
lods
pusha
add
jmp
jp
dec
lods
pop
shl
or
popf
aad
subb
aam
and
rcr
rcl
adc
and
dec
pop
loopne
sbb
aas
or
inc
cwtl
inc
pop
hlt
arpl
movsl
dec
inc
jg
out
inc
out
inc
or
or
movsb
lea
cld
cmp
stos
addl
mov
xchg
mov
and
fidivl
jp
dec
fsubr
mov
dec
mov
out
sub
add
hlt
adc
inc
push
das
dec
cltd
jge
push
pop
shrl
add
movsl
sti
fsubl
shll
insb
xlat
mov
mov
jae
xchg
insb
jle
loope
out
imul
clc
scas
je
cld
scas
sti
cli
loop
clc
jecxz
or
popa
ret
pop
mov
cmp
mov
inc
or
nop
mov
mov
nop
push
int
push
mov
cmp
add
cli
sbbb
push
inc
add
push
mov
sub
les
in
pop
xor
loop
test
cltd
test
push
out
jge
xchg
popl
out
les
or
fcmovne
dec
test
cmp
ljmp
inc
int3
cltd
push
or
mov
mov
fidivrs
rcrl
insl
cmp
in
add
push
xchg
sbb
jno
adc
aad
lret
sbb
xchg
mov
jo
sti
mov
push
mov
push
fmuls
lret
test
and
scas
test
xor
and
stos
or
xchg
test
xchg
sbb
js
push
daa
mov
std
insl
inc
mov
inc
xor
and
sub
cmc
sarb
aas
jns
mov
pop
out
fnstcw
testl
cmpl
add
mov
mov
fs
push
or
loopne
fistpll
xor
inc
push
sub
lcall
pusha
sbb
dec
jmp
xchg
mov
jae
sub
ljmp
mov
ja
cmp
lret
mov
addl
enter
sar
push
mov
idivb
popf
and
jo
push
jae
cmp
pop
sub
sbb
or
cmpsl
shrl
pop
cltd
inc
xchg
xchg
dec
repnz
in
push
cmc
sub
adcl
loope
out
iret
fcomip
test
dec
dec
cwtl
or
xor
lahf
test
xor
fnstcw
or
ret
jmp
iret
xchg
add
add
mov
nop
out
inc
stos
jnp
or
clc
adcb
stc
orb
pop
fxrstor
xor
mov
mov
mov
pop
jo
divb
pop
movsb
and
rcrb
push
push
sub
mov
shll
mov
jno
mov
out
pop
sti
lea
sbb
movsl
dec
imul
mov
add
sahf
arpl
or
popf
mov
repz
jecxz
jl
addr16
ljmp
int
addl
add
push
inc
mov
pop
sub
and
daa
test
xlat
xchg
xchg
push
cwtl
nop
fistl
mov
int
mov
xchg
cwtl
sub
loop
fstl
int3
fisubs
xor
mov
mov
cwtl
or
ja
push
jmp
jae
mov
scas
dec
cmpsb
jle
ljmp
mov
jle
negl
outsl
arpl
aad
cmp
movsb
stc
leave
sbb
pop
imul
imul
and
pop
adc
mov
mov
les
jb
mov
jae
mov
test
push
adc
dec
lahf
test
sub
cwtl
jge
sub
mov
xchg
mov
lcall
inc
imul
fldenv
pusha
mov
andl
pop
mov
lcall
enter
pop
call
in
mov
iret
add
adc
push
repnz
xchg
dec
subb
aas
in
outsb
pushl
pop
pop
lds
push
pusha
mov
aam
fisttps
ja
mov
imul
and
pop
mov
ret
addb
jge
js
fs
js
and
pusha
clc
adcl
addl
fdiv
xor
lods
cld
sbb
faddl
stos
mov
pop
jmp
cmp
cmp
insb
adc
mov
mov
dec
jo
out
dec
out
push
mov
clc
pop
jmp
loopne
scas
dec
mov
test
in
adc
push
cli
mov
pop
xlat
mov
jae
cmp
and
rcll
cmp
scas
inc
sub
fcmovnu
shr
notl
mov
std
mov
xchg
inc
loope
lods
push
adc
addr16
jge
and
xchg
out
hlt
push
cmp
gs
mov
cmpsb
aas
xchg
stc
pop
cmp
test
test
sbb
daa
mov
push
cmc
fnstsw
int
cmpsb
dec
push
xchg
mov
inc
mov
scas
mov
adc
int
dec
xor
pop
push
arpl
or
lret
cli
jmp
and
outsl
pop
test
cmp
mov
xchg
mov
dec
mov
or
lret
sub
and
stc
cmp
lahf
cmp
test
mov
scas
mov
test
lea
or
adc
and
dec
adc
push
jg
xchg
stos
inc
push
cmp
push
jl
adc
cmp
and
pop
pop
fildll
addr16
fisttpl
movsb
dec
lahf
cli
hlt
push
mov
in
xor
push
mov
into
cwtl
das
daa
adcb
data16
push
test
xchg
xor
push
and
in
shlb
in
lds
out
in
sub
push
pop
xchg
push
mov
and
or
scas
or
jge
mov
and
sahf
push
mov
dec
mov
mov
ret
mov
andps
adc
or
adc
cmpsl
in
imul
mov
mov
test
or
mov
jno
fldcw
adc
xor
xchg
aas
imul
pop
xchg
imul
and
and
add
sbb
jl
inc
xchg
scas
and
cmp
loopne
mov
sbb
jmp
dec
jmp
fdiv
sbb
and
xchg
sbb
mull
shrl
jmp
repnz
popf
mov
cmp
cwtl
push
pop
aaa
in
or
xchg
stos
xlat
dec
testl
or
shrl
and
mov
outsb
addr16
xlat
mov
dec
dec
dec
push
call
mov
sub
or
xor
aad
adc
pop
cmpb
test
and
fsubrp
sub
and
and
outsb
test
imul
ja
xchg
test
push
fidivl
das
je
xor
pop
mov
cmp
adc
mov
ret
pop
and
pop
push
sbb
push
stos
dec
aas
aad
sub
fsts
aad
aam
loope
or
xchg
jne
out
test
imull
imul
inc
stos
btc
pop
and
out
sbb
pop
pop
mov
mov
mov
in
pop
and
addb
pop
ss
lret
lods
sbb
jo
adc
dec
lods
ljmp
or
mov
xor
lret
push
cmp
cld
cwtl
ja
mov
ret
jae
cwtl
cmp
subb
ror
xchg
sbb
dec
mulb
and
sti
js
pop
pop
mov
and
add
mull
mov
sbb
mov
roll
push
insl
int
mov
fldl
and
ror
mov
mov
lret
cmp
xchg
xchg
shrb
mov
shlb
cmp
lock
adc
xchg
pop
cmpsb
mov
fcmovnu
enter
push
push
out
cmc
aaa
ret
subb
gs
mov
imul
jg
xchg
sbb
test
or
jle
add
jns
pop
xor
lds
cmp
sub
sbb
push
sub
loopne
add
out
xchg
es
xchg
leave
jge
ss
ljmp
cmp
mov
int
addl
or
xchg
in
sbb
cmpsl
mov
add
mov
mov
cli
xbegin
add
pop
or
out
dec
sub
cmc
test
in
xor
imulb
xor
xor
clc
sbb
cmp
ret
push
test
rcll
test
sub
pop
stc
pop
pop
xor
pop
insb
lods
lcall
repnz
and
rolb
ja
push
push
or
xor
loop
dec
repz
clc
inc
mov
mov
mov
and
gs
mov
jmp
add
dec
dec
push
test
mov
cmpb
sbb
nop
scas
mov
pop
into
icebp
movsb
data16
and
push
repnz
xchg
cltd
andb
jae
mov
cmpb
in
outsl
inc
insl
push
out
loope
dec
or
in
or
ret
lret
leave
clc
xchg
fwait
call
lock
mov
inc
sarl
xchg
fcomip
cli
mov
dec
dec
dec
add
push
hlt
mov
fldenv
lret
sbb
rcrb
sub
loop
ja
aam
jge
mov
dec
movsl
pop
popa
int3
adc
cmp
mov
xor
xlat
stc
cmp
es
push
jg
cmpsl
pop
ret
sahf
or
fwait
pop
jecxz
or
inc
xchg
sbb
rorb
sub
dec
test
push
lods
movsb
sahf
and
inc
adc
mov
mov
mov
orb
lahf
loop
pop
add
hlt
xchg
and
fisttpl
fsubrl
in
aas
xchg
or
or
roll
or
sbb
mov
dec
xlat
sub
in
popfw
add
bound
std
sbb
sbb
scas
mov
out
cmp
iret
into
add
cld
cld
sbb
adc
sub
daa
and
jle
out
jnp
orb
fsubl
cmp
in
out
leave
daa
ficomps
call
daa
dec
in
jge
add
sbb
mov
mov
cli
insl
das
int
inc
dec
add
mov
or
or
inc
add
jbe
fiaddl
sbb
adcb
int3
dec
les
sbb
mov
jle
xor
sahf
fisubl
mov
repz
mov
mov
cmp
pop
rolb
data16
in
push
mov
pop
sbbb
test
cld
cmp
pusha
ret
push
xor
cmovge
shl
pop
and
icebp
sub
push
test
mov
arpl
inc
add
ss
loopne
out
test
xor
adc
push
into
lret
cmp
gs
sub
xor
rorb
push
and
add
dec
mov
rolb
mov
sbbb
fsubrs
jbe
pusha
aam
jne
sbb
xor
jns
test
pop
xchg
movsl
pop
jo
cli
cltd
fisubrl
das
sbb
or
and
lods
xchg
dec
jnp
add
popf
adcl
daa
insb
push
fdivr
je
bnd
pop
addr16
cmp
cltd
add
xchg
cmpb
stc
or
dec
aad
test
mov
fldl
ret
sbb
stos
adc
sub
sub
subl
popf
cbtw
fsubp
or
loop
jae,pt
cmpsb
xchg
mov
data16
push
lret
popf
std
dec
data16
outsl
mov
mov
es
mov
ret
jp
dec
inc
decb
lret
out
cmpl
out
jmp
cmp
ltr
or
and
cld
pop
cmp
and
in
inc
sub
test
jle
imul
inc
pop
rcrl
pushl
and
ret
add
les
out
pusha
mov
inc
mov
aaa
cmp
adc
loope
jne
jnp
mov
hlt
xchg
push
repnz
pop
cwtl
nop
fmull
mov
mov
mov
insb
imul
push
cltd
clc
imulb
lods
ret
sti
fcomps
sbb
mov
arpl
out
push
xor
pop
cmpl
shrb
xlat
cmpb
aaa
inc
sub
inc
jb
stos
push
js
sti
stos
out
in
je
mov
jo
dec
cld
mov
nop
cmp
je
pushf
fdiv
push
loope
adc
xchg
pushf
and
std
int
xor
repz
stos
ffreep
xchg
pop
das
inc
xchg
and
addl
push
sti
fwait
pop
ror
jge
push
and
cmpsb
pop
dec
icebp
mov
sbb
jnp
nop
cld
sbb
test
ja
cmp
sbb
in
mov
dec
aaa
imul
mov
mov
xor
or
dec
loop
xchg
or
pushf
inc
in
mov
jg
or
mov
cmp
stos
dec
pop
sub
hlt
out
dec
cmpsb
push
mov
shl
and
mov
or
fs
stos
or
xchg
data16
je
pop
mov
mov
add
jnp
enter
cmpsb
push
sar
jne
fimuls
adc
lds
or
push
push
lret
cmpsb
add
mov
add
mull
or
pop
outsl
mov
adc
ds
loope
inc
call
add
jmp
das
sar
add
lret
ds
dec
cmp
cmp
ljmp
outsl
stos
push
cld
pop
jecxz
js
mov
imul
pop
repnz
push
mov
fidivl
std
pusha
out
daa
pop
sub
pushf
fstp
enter
nop
or
enter
int3
faddp
pop
into
in
ja
shl
cld
scas
sbb
loop
out
insb
loope
pop
xor
push
xor
add
lahf
add
loope
aam
out
test
mov
sub
sbb
fldcw
daa
ljmp
sbb
pop
movsb
fsubr
lds
andb
or
mov
std
aas
stos
mov
gs
push
dec
add
test
mov
scas
adc
repz
lahf
imul
roll
test
insl
pop
dec
movsl
call
je
mov
xorl
jl
cmpsb
repnz
or
scas
and
xor
ja
imul
jmp
xor
adc
cmpsb
out
mov
in
gs
repnz
mov
outsl
ret
xor
mov
sub
push
inc
in
iret
pop
mov
dec
sbb
jne
pop
jle
sub
sbb
add
mov
arpl
addr16
pop
sub
bound
dec
pop
ss
daa
sbb
adc
and
jmp
jne
ret
movsb
pop
push
sbbl
mov
rolb
bound
and
pop
insl
sbb
inc
scas
push
cmpsl
add
cmp
mov
arpl
push
jnp
xor
clc
aaa
xchg
pop
lds
dec
and
mov
push
jge
fisubrl
cmp
addr16
std
add
xchg
movb
mov
aad
cltd
clc
push
jo
and
pop
and
push
inc
adc
lea
adc
hlt
mov
cmp
sub
ljmp
inc
adc
dec
lahf
push
xor
jo
sub
leave
mov
cli
cmp
push
push
pop
push
je
mov
addr16
sbb
mov
sub
dec
sub
jp
mov
and
int
mov
pop
mov
push
jne
cmp
inc
dec
testb
or
cmc
xchg
lods
jle
sbb
repnz
int
dec
mov
imul
mov
cld
test
sub
sub
lcall
loope
pushf
xchg
and
lods
hlt
jg
lock
insb
or
jmp
pop
jne
push
mulb
mov
test
and
dec
pop
imul
jnp
mov
cmpb
mov
push
mov
xchg
pop
aad
cmpsb
pushf
inc
jl
add
jge
and
pushf
jae
push
notb
fwait
testb
ljmp
xchg
dec
fnstenv
xchg
lret
xor
xlat
jmp
jbe
repnz
adc
andw
jnp
or
jmp
dec
loope
adcl
repz
lock
pop
call
mov
dec
hlt
je
push
jo
das
cs
lret
pop
xchg
bound
rcr
mov
lea
arpl
loope
aaa
aaa
inc
or
xor
call
popf
cmp
cmpsl
jns
dec
mov
outsb
js
sahf
push
and
xor
inc
cs
pop
andps
pop
mov
dec
inc
inc
loope
mov
imul
pushf
mov
in
jp
cmp
pusha
pop
popa
mov
ret
pmuludq
mov
and
cmp
test
adc
movsb
lahf
push
shlb
adc
cs
jp
and
into
lahf
jmp
imul
sahf
adc
fs
cmc
pushf
pop
pop
negb
repz
mov
fidivl
loopne
or
cmp
ja
and
in
ljmp
sub
sub
nop
adc
dec
neg
push
imul
mov
sub
mov
idivb
mov
inc
movsl
inc
mov
pop
inc
xor
test
in
movsl
rorl
and
pusha
adc
pushf
aad
popf
inc
aam
xchg
or
movsb
xor
adc
outsb
lock
rep
mul
roll
dec
inc
sbb
push
push
inc
mov
push
or
mov
lock
sub
aaa
push
or
push
xchg
cld
leave
jle
and
mov
aas
cmp
xchg
movl
in
in
adc
popa
shll
adc
xor
mov
sbb
mov
loopne
mov
xchg
jno
into
ss
mov
or
mov
out
int
fnsave
enter
loope
add
jno
lds
mov
icebp
arpl
cmp
jns
sub
aas
mov
icebp
add
jl
data16
add
jbe
adc
call
sub
lea
xor
dec
mov
mov
cwtl
add
repz
lahf
cmpsb
xchg
pushf
jnp
out
repz
mov
mov
leave
cmp
xchg
adc
mov
iret
push
jno
adc
push
sbb
add
test
xchg
mov
andl
inc
jno
or
je
push
mov
xchg
lea
pushf
add
pop
jl
push
fistpl
sub
mov
sahf
pop
fs
test
jb
setns
popf
outsb
insb
mov
mov
shrl
call
push
lret
clc
out
lcall
mov
aad
clc
pop
sub
pop
fcomp
aaa
out
cli
adcl
add
dec
cmc
xlat
repz
stos
adc
sbb
add
or
daa
ret
lret
cltd
jmp
mov
push
test
addr16
adc
sub
pop
push
sti
sub
sbbl
push
inc
sub
pop
xchg
inc
jle
dec
aam
repnz
and
sbb
jne
lock
mov
test
pextrw
pop
sbb
mov
leave
push
sbb
jl
mov
pop
mov
adc
popf
xchg
pmaddwd
loope
xlat
xor
pop
stos
insl
dec
sub
fwait
jmp
sbb
cmp
ja
sub
sbb
in
outsb
adc
add
mov
jns
into
inc
push
popf
cmp
fisubs
iret
and
push
pushw
mov
mov
lods
mov
stos
cmp
adc
cwtl
mov
enterw
aaa
sbb
dec
aas
insb
sbb
mov
rcrb
dec
mov
aaa
jno
pop
into
in
popa
xchg
jno
lds
movsl
js
cld
cmp
jge
iret
push
xor
mov
mov
adc
mov
push
popf
movl
dec
ret
push
mov
aaa
pushf
movsl
mov
push
jecxz
in
and
sub
add
cli
cmpl
jnp
test
pop
pusha
jmp
and
adc
lea
jle
or
cltd
inc
andl
scas
cmp
inc
jg
lods
xchg
stc
test
out
push
mov
ljmp
sbb
cmp
pop
sub
adc
cwtl
in
cmpsl
sbb
jb
push
jbe
mov
sub
jle
push
sbb
cmp
pop
ret
cld
movsb
adcl
mov
jg
out
cmc
scas
pushf
jge
in
stos
pop
xchg
out
js
inc
fsubs
cs
ret
and
or
popa
xchg
fbld
movsl
lahf
popf
fists
movsl
insl
imul
xchg
lret
cmpsl
inc
in
and
push
cld
lock
or
dec
aas
fimull
addr16
lods
clc
fcomps
sbb
sbb
ficompl
cmp
lret
dec
mov
cmpsl
mov
or
scas
lods
pop
xor
jns
test
inc
lea
sbb
push
jecxz
rcr
jbe
pop
pop
pop
jae
addr16
lods
mov
repnz
pushw
in
icebp
mov
test
inc
fnstsw
leave
cmpxchg
pop
adc
or
mov
lods
shl
push
js
add
je
jp
or
or
test
in
idivb
in
add
in
sbb
push
pop
into
pop
jns
mov
lock
pop
jg
les
xor
mov
sub
fcoml
dec
lds
rol
xchg
dec
mov
jmp
scas
push
inc
mov
xlat
inc
into
adc
ja
dec
stos
mov
leave
sbb
outsb
mov
pop
out
cmp
adc
mov
popa
leave
mov
adc
decb
aaa
mov
jbe
and
jmp
std
test
cmp
lods
mov
sub
xor
insb
sbb
loope
jl
and
mov
mov
ret
sub
mov
std
mov
popa
jge
cmp
push
repnz
jg
jmp
jl
push
xor
and
shlb
xchg
bound
jns
or
pop
dec
xchg
sti
cs
xor
or
push
inc
loopne
sbb
push
lahf
in
in
addr16
leave
andb
shl
cwtl
mov
jmp
repz
sbbb
rolb
xor
dec
out
cmp
sub
mov
jecxz
popa
lcall
mov
scas
push
lahf
adc
into
lock
rorl
jl
into
adc
sbb
cwtl
int
popf
pop
mov
or
xchg
ljmp
mov
dec
add
shr
cmpsb
xchg
adc
fstl
subb
add
out
scas
fnsave
dec
int3
lret
push
das
mov
pop
or
sub
xchg
and
popa
repz
addl
mov
adc
or
add
jne
or
aad
mov
inc
daa
rol
mov
sbb
xor
pop
loop
mov
inc
sbbl
xlat
ss
sbb
xor
test
mov
call
sbb
call
stos
dec
adc
stos
push
movsl
adc
out
cmpsl
dec
cmp
loope
leave
dec
and
mul
in
cld
enter
out
or
xchg
pop
xor
mov
cmp
push
inc
fistl
ret
cmp
movsb
movl
push
cmp
inc
lock
lock
pusha
rorl
push
pop
jae
sub
jecxz
xor
call
jge
xchg
or
adc
sti
jp
and
cmp
dec
cmp
dec
or
jg
int
sub
jle
loopne
mov
jg
pushf
and
ret
pop
cltd
std
and
xchg
inc
loope
xor
cmp
xchg
fs
scas
mov
inc
lods
es
mov
hlt
xchg
sub
inc
aad
jle
push
lcall
or
cmpsl
xlat
dec
mov
fs
xchg
test
mov
xchg
adc
sub
xor
pop
dec
sub
ficomps
xchg
mov
lods
leave
xor
mov
mov
dec
pushf
sbb
xchg
ret
push
mov
nop
test
cli
pop
aas
scas
jbe
xchg
repnz
sarb
test
aas
pop
add
daa
pop
sub
xor
ret
movsb
in
cmp
xchg
mov
lahf
frstor
cmc
cmc
jl
pop
jge
les
adc
cmpsl
push
outsl
pop
inc
test
push
stos
aas
xorl
inc
aas
fiadds
sub
add
pop
xchg
scas
jb
shrb
and
mov
scas
rorb
loop
sahf
push
push
mov
test
lahf
xchg
clc
pop
mov
sti
xor
ja
lock
xchg
imul
push
jb
dec
test
call
xchg
bswap
and
arpl
jbe
add
sti
xorl
mov
xor
push
clc
mov
add
or
lock
jmp
ja
lea
pushf
cmp
inc
or
pop
push
jno
sbb
xor
shrl
ss
test
pop
pop
lock
iretw
cli
andb
jo
ds
fnstsw
push
mov
ss
mov
cld
sbb
andb
pusha
sbb
mov
and
in
movsb
mov
rcrb
mov
cmpl
mov
mov
jecxz
xor
pop
test
adc
imul
inc
or
xchg
jns
repnz
sub
xchg
rdtsc
cmc
out
mov
test
stos
stc
loope
int
pop
mov
int3
add
xchg
cmp
jg
mov
push
popf
add
call
dec
or
in
imul
xchg
dec
pop
sub
jl
pop
lcall
rorl
inc
xchg
movsb
daa
stos
jge
mov
lods
adc
jmp
pop
cld
cmpl
jp
add
cltd
mov
insb
cmp
jg
jge
outsl
js
popa
mov
mov
test
pusha
jge
ljmp
loop
into
arpl
dec
js
add
cmp
pop
push
jge
or
push
mov
jmp
out
cmp
and
adc
lea
sbb
pop
inc
jo
pop
dec
mov
loope
iret
fistps
adc
ds
das
mov
rep
aas
mov
pushf
dec
stos
mov
xorl
repz
xor
dec
xchg
aam
jb
out
mov
cmp
cmp
inc
jbe
mov
jne
hlt
and
mov
xchg
mov
dec
pop
lea
filds
or
fs
pop
fiadds
dec
pop
fstp
xor
sub
jge
adc
mov
fisttps
dec
bound
jecxz
ja
sti
es
cmp
inc
shll
pushf
jl
in
shl
mov
xor
out
adc
stos
lods
push
lock
int3
jb
sub
and
mov
inc
sub
fwait
int
test
mov
aaa
push
xor
enter
dec
xor
ss
mov
jno
sti
push
jl
fsubr
insb
xlat
rolb
loope
lea
stc
clc
xor
das
cmpl
fidivl
or
jge
mov
mov
pop
popa
add
clc
lcall
ja
mov
popa
icebp
int3
stos
mov
js
jae
xchg
mov
clc
shl
cmp
cwtl
xchg
sbb
xchg
mov
mov
cs
aam
scas
pop
pop
cmpsl
test
and
cs
imul
add
popa
or
addr16
sub
xchg
add
mov
jb
jo
je
jmp
sub
jnp
das
idivl
jns
jecxz
pusha
in
add
xchg
pop
lcall
out
inc
movsb
and
ss
cmc
popf
adc
push
cmc
push
leave
xlat
dec
push
dec
dec
xor
test
iret
inc
pop
out
in
dec
jmp
ficoml
xchg
test
std
xchg
jb
test
inc
mov
adc
mov
xor
das
outsb
scas
out
cmpsb
popa
xor
mov
testl
out
mov
sbb
mov
mov
ds
pop
shr
fsubrs
add
nop
in
sarl
and
shll
mov
aad
pusha
sbb
cs
dec
mov
xchg
pop
jne
fs
outsl
call
pop
pop
data16
mov
call
ljmp
dec
lods
divb
aad
pop
fs
fcmovb
sahf
jmp
or
insb
add
pop
or
fcompl
dec
mov
iret
lahf
pushf
xor
xor
imul
enterw
cmp
dec
xchg
es
mov
mov
pop
fbstp
pop
pop
or
cli
cmpsb
push
mov
outsl
test
lods
cmp
test
lds
popf
xchg
and
out
test
mov
sbb
arpl
sub
jb
insl
pop
mov
mov
xor
inc
jno
xchg
incb
mov
fndisi(8087
negb
jnp
mov
jge
push
jmp
rcrb
jecxz
fwait
sbb
lock
pop
push
mov
ds
jnp
add
dec
js
call
jbe
mov
jno
adcl
enter
xor
mov
jno
cli
cmc
jp
xchg
imul
pop
mov
push
dec
pop
pop
mov
movb
popf
add
popa
cmc
pop
sbb
repnz
rcrl
cmp
sub
jge
xchg
enter
and
lods
fildll
push
cmp
lds
dec
adc
int
shl
fcomps
icebp
in
dec
mov
sbb
mov
arpl
push
aas
mov
mov
add
jmp
int
daa
push
mov
ror
fcmovb
mov
xchg
fistps
icebp
mov
cmp
or
loop
push
nop
mov
inc
ror
dec
sti
mov
push
rolb
push
inc
dec
xlat
xor
xor
adc
imull
loopne
pop
cmpsb
and
idivb
xlat
cli
ljmp
jge
arpl
sub
popa
popa
inc
jmp
aam
mov
data16
xor
ljmp
test
sub
jge
pusha
mov
in
or
aam
pop
fsubrl
mov
test
bound
xchg
sbb
insb
cwtl
popf
loopne
aam
stc
jb
fnstenv
jns
inc
fsubrl
cld
pop
and
scas
jmp
push
and
cmp
ret
adc
cmc
or
rcll
cmc
lds
lds
subb
dec
or
pop
addb
pop
loope
cmp
cmpsb
adc
mov
inc
test
xorl
cmp
sbb
or
outsl
adc
pop
mov
mov
mov
push
scas
into
mov
rcrl
cmp
cmp
push
adc
mov
loope
add
xchg
sub
mov
xor
sbb
lret
mov
loop
test
mov
sbb
inc
cmp
rorb
mov
xor
shrb
out
xor
xchg
cmpsl
out
cwtl
sahf
das
fdivr
sbb
mov
pop
mov
mov
push
mov
cmp
mov
leave
add
sahf
jno
lds
inc
xchg
sbb
lock
movsb
pop
loope
insb
adc
mov
push
lcall
sub
imul
inc
cmp
int3
lds
in
ret
mov
push
push
enter
and
cli
les
inc
out
xchg
imul
sbb
aas
xor
inc
mov
xchg
jb
cltd
push
dec
push
push
adc
fmuls
jl
pop
inc
lea
ja
rcll
xchg
cld
es
fnclex
mov
cmpb
ljmp
xchg
or
inc
cli
icebp
push
fadds
popa
std
mov
jmp
mov
xchg
and
cmpb
in
inc
cld
mov
jne
stos
and
in
icebp
dec
aam
sub
cmp
push
repnz
push
sub
mov
mov
sub
pop
jg
or
lea
xchg
mov
addr16
and
and
rolb
or
sahf
fwait
lock
mov
xor
pop
rolb
gs
xor
push
out
stc
decl
or
loop
je
xor
adc
sbb
lock
push
sbb
push
cmp
push
sbb
sbb
aaa
aad
ret
xchg
fimuls
mov
adc
sarb
repnz
lods
add
lods
ds
pusha
sub
inc
mov
nop
sahf
sub
mov
imul
std
addr16
cs
incl
dec
pushf
jb
mov
mov
faddl
xor
cmp
jns
lock
shrl
movsl
jle
fsubrp
fsubrs
xor
push
nop
lea
mov
mov
data16
outsb
jge
xor
pop
dec
lret
sbb
sti
sub
adcb
cli
sub
sbb
rolb
sbb
push
push
lock
repnz
mov
loop
sub
movsb
push
dec
and
adc
jl
ret
sbb
sbb
or
call
sbb
xchg
sub
rcr
out
mov
js
clc
dec
push
jg
popa
pop
or
shll
mov
pop
jmp
mov
lock
inc
pop
dec
mov
test
inc
cmp
and
jne
outsb
xchg
mov
jge
cmp
pop
add
jbe
dec
loope
hlt
pushf
mov
jp
sbb
push
popf
aaa
add
ljmp
cwtl
pop
aam
inc
xor
into
cmpsb
in
out
lret
outsl
stos
loope
repnz
add
aad
iret
lods
icebp
gs
lock
sub
sub
cmp
std
lock
push
sbb
out
push
ret
es
jecxz
or
cli
test
cmpsl
repz
adcl
mov
scas
adc
push
lods
data16
and
dec
fcmovb
or
push
outsb
in
dec
pushf
xchg
daa
movb
cmc
or
into
mov
aam
cmc
enter
jae
or
xor
jb
dec
data16
lods
aaa
clc
ret
jecxz
dec
xchg
out
fs
mov
mov
std
daa
daa
ja
mov
repnz
or
outsb
xor
movsl
lret
outsb
cmpsl
nop
into
inc
adc
xor
jmp
push
inc
enter
pop
lret
push
sub
xchg
cwtl
dec
repz
imulb
jp
jle
inc
push
jge
jne
cmp
sbb
cld
imulb
in
cwtl
push
sub
inc
mov
push
xchg
mov
pop
clc
jns
test
ret
mov
inc
lcall
nop
es
stos
pop
test
or
pop
push
inc
stc
fnstcw
pop
aam
mov
push
pop
aas
mov
shll
mov
rorl
sti
inc
pop
xchg
shr
mov
imul
xtest
gs
dec
jae
jl
shlb
int
jmp
dec
movsb
sti
loopne
mov
pusha
loopne
ret
mov
aas
or
test
stc
shlb
pusha
sub
dec
add
jno
out
loop
lods
or
cmp
pop
mov
dec
imul
out
cmp
jle
cmp
aam
out
jle
mulb
sbb
push
inc
push
inc
das
xlat
lock
je
nop
pop
dec
in
addb
lods
scas
add
in
pushf
in
mov
inc
push
pop
pop
cli
sub
enter
stos
cld
and
adc
pop
adc
daa
imul
out
inc
mov
aad
in
aam
fwait
addr16
xchg
loop
inc
data16
sub
push
adc
data16
xor
imul
lds
lret
dec
mov
and
push
xor
add
and
mov
les
rcrb
int
jb
iret
popf
jmp
xor
pop
jne
sub
xor
push
shll
sub
cmpsb
mov
scas
lahf
cmc
mov
stos
iret
scas
push
test
mov
inc
sub
lcall
add
lds
or
aas
xchg
pop
nop
xchg
popa
cltd
push
stos
and
or
ret
xor
mov
add
xor
xchg
inc
test
fincstp
mov
mov
sbb
add
sets
stos
int3
pop
scas
push
or
adc
cli
jle
add
shlb
scas
xor
sub
insl
stc
cmp
cmpsl
outsb
lcall
or
pop
mov
pop
xor
out
or
arpl
jl
mov
out
pop
js
sbb
fnstsw
cmp
fsubs
pop
jbe
xchg
pushf
loop
inc
aas
das
lret
rolb
or
push
mov
test
inc
add
leave
out
in
xchg
inc
and
mov
in
ret
aad
xchg
dec
lods
outsl
xor
daa
and
popa
scas
xchg
push
or
mov
mov
pop
push
sub
fmull
push
mov
cmp
xor
bsr
in
fmuls
pusha
jae
or
sbb
sbb
mov
mull
mov
scas
jno
pop
pop
in
repz
outsl
out
in
pop
in
mov
fs
add
jecxz
jne
mov
daa
aam
rcrb
mov
and
xor
filds
arpl
sbb
ret
ja
leave
pavgb
mov
mov
sub
popa
pushf
clc
push
cmp
add
mov
stos
in
aas
mov
out
outsl
outsb
pop
sub
jno
sbb
stc
push
cltd
mov
dec
and
pop
inc
add
in
mov
jne
mov
sbb
sub
daa
in
push
xor
in
or
icebp
add
xorl
mov
mov
jmp
test
movsb
loope
es
xchg
aaa
inc
out
adc
inc
out
std
pusha
sub
loopne
outsb
pop
js
daa
gs
and
and
xchg
or
daa
ljmp
mov
in
and
sbb
pop
mov
and
push
dec
sub
inc
mov
sar
insb
outsb
push
jmp
test
addr16
inc
jle
std
jo
mov
daa
aas
sbb
mov
idivw
xchg
xchg
pop
repnz
fwait
lods
push
arpl
xorb
adc
inc
nop
xchg
pushf
popf
pop
les
inc
test
scas
pusha
sub
inc
lock
mov
mov
and
or
jnp
lods
and
mov
negl
inc
lea
repz
js
and
xchg
out
inc
pop
cli
dec
roll
iret
jg
push
test
inc
dec
jle
movlps
dec
mov
xchg
pop
push
adc
dec
es
sub
cli
mov
out
es
mov
add
fisubrl
pop
aas
mov
mov
int
ja
sbb
push
mov
dec
or
mov
loopne
dec
mov
lods
sub
in
sub
add
push
mov
adc
mov
mov
popf
adcl
stos
scas
int
adc
cmp
sub
mov
aam
and
dec
fmull
xchg
ret
dec
mov
je
sbb
sbb
rcrb
mov
or
call
push
pop
les
cli
sbb
jmp
call
pop
push
mov
cmp
sbb
mov
dec
pop
jns
inc
out
das
adc
loop
cmp
add
mov
loop
xchg
mov
scas
ja
popf
jno
cwtl
dec
xor
dec
inc
fstl
mov
bound
cltd
inc
call
xchg
ljmp
jmp
hlt
adc
int
into
imul
cmpsb
out
scas
imul
dec
jg
mov
sub
andl
xchg
jge
shlb
mov
and
mov
adc
mov
add
call
daa
icebp
push
xchg
push
icebp
xor
sbb
ja
sbb
mov
push
insb
mov
or
dec
gs
stos
test
mov
shrb
and
xchg
rol
pop
pop
aaa
dec
or
dec
das
inc
fistl
lahf
cld
aaa
lcall
idiv
rcrb
lret
push
lcall
fwait
xchg
test
push
xchg
das
sbb
mov
xor
adc
mov
push
push
inc
aaa
movsl
ret
int
and
icebp
pop
inc
cmp
cs
dec
iret
mov
push
pushf
shrl
pusha
arpl
test
jne
enter
ficompl
lret
jecxz
push
lods
xchg
inc
out
dec
rorb
outsl
sub
les
cmp
cs
cmp
xchg
js
js
sub
mov
xor
mov
ret
repnz
cmp
mov
in
pop
mov
aad
push
pop
lods
mov
push
jnp
or
dec
add
cmpb
arpl
push
fsub
mov
lcall
inc
xchg
mov
popf
std
jae
aas
and
push
and
xchg
cmp
mov
push
push
adc
inc
jae
leave
xchg
xchg
mov
inc
and
std
inc
into
inc
mov
push
outsl
pop
dec
bound
in
imul
cmp
sbb
xchg
in
xchg
fists
sub
leave
dec
in
testl
jno
aad
lret
cmpl
lahf
stos
inc
sub
sbb
pop
mov
push
dec
sub
and
pop
movsb
sub
lock
movsb
push
push
mov
xchg
ljmp
ret
dec
sub
int
aad
mov
cmp
imul
les
std
loop
dec
push
mov
sub
shrb
das
cmp
push
das
inc
popf
pop
mov
jl
lret
in
cli
cmp
jg
fistps
js
inc
inc
jl
cmpsl
lods
sub
mov
insb
xor
jle
lret
das
shll
xor
add
test
lods
insb
push
lret
push
pop
jmp
stc
cmp
loope
js
mov
sbb
dec
pavgb
jmp
sahf
popa
and
clc
loopne
dec
inc
push
popa
xchg
mov
insl
enter
enter
test
dec
flds
push
retw
and
cmp
jnp
push
sbb
arpl
xchg
push
stos
lock
fisubrl
sub
jmp
sarl
xor
push
mov
jmp
cmp
and
xchg
mov
inc
aad
iret
lret
cld
pop
mov
mov
push
jb
and
push
mov
adc
fsts
stos
loope
mov
fadds
in
and
adc
loopne
jne
lods
pop
rol
sub
jns
push
or
sarl
sbb
rcll
rclb
test
leave
push
dec
jge
fdivs
lods
fs
fnsave
insb
pop
aas
fucom
imul
in
add
jne
movsl
cmp
dec
pop
sub
stos
into
daa
sti
adc
push
in
arpl
lods
adc
fwait
xor
jecxz
popa
out
mov
cmp
dec
cld
or
push
int3
dec
jnp
xchg
daa
pop
push
push
data16
pop
adc
xor
adc
push
in
arpl
sbb
xlat
add
test
inc
fdivrl
sbb
loopne
xor
dec
and
and
mov
fdivrl
shlb
dec
lds
or
add
or
mov
and
adc
jno
mov
stc
lcall
pop
xchg
xor
or
lret
fnstsw
mov
popf
imul
outsl
repz
out
movsb
cli
mov
mov
stc
inc
stos
testb
and
faddl
lahf
adc
pushf
nop
je
dec
pop
jg
xlat
xor
repz
xor
push
cmpl
cs
lcall
and
push
cmp
shl
std
jmp
or
ja
or
mov
stc
pop
lea
cmpsb
and
pop
dec
inc
push
jge
sub
pop
je
pop
pusha
je
nop
cmpsb
xor
mov
or
in
out
ja
xchg
xchg
into
push
sbb
aas
into
inc
lret
shlb
mov
mov
cmp
pop
mov
cli
loopne
repnz
arpl
jp
inc
imul
jbe
aaa
pop
pop
jl
adc
jns
cmp
cltd
xor
xor
push
lahf
sbb
pop
ss
pop
push
in
into
aad
adc
or
sti
aam
cmp
cld
mov
out
pop
adc
in
cmp
mov
dec
fimuls
xor
data16
inc
jecxz
sahf
outsb
outsb
aam
repz
lcall
daa
xor
dec
mov
arpl
jle
cmpsb
jg
pop
push
fbld
sub
adc
inc
inc
sub
mov
bnd
add
or
lahf
jle
inc
or
lods
inc
cmc
ficoms
inc
inc
outsb
inc
pop
mov
out
sahf
dec
sbb
es
sub
imul
mov
arpl
sahf
add
popa
xchg
insb
adc
loopne
in
push
add
iret
aas
push
dec
add
push
sahf
jb
cltd
out
loopne
or
les
lahf
inc
mov
es
shrb
mov
repz
mov
cwtl
sbb
dec
mov
mov
stos
jmp
mov
and
je
leave
lcall
imul
pop
and
popa
ljmp
sub
popf
fnstsw
jns
pusha
cmp
mov
dec
xor
mov
xor
pop
add
push
inc
fwait
xchg
inc
cmpsb
jp
shl
xor
mov
mov
sub
fsts
pop
mov
ja
cmpsb
jl
xlat
pop
ss
mov
lea
push
insb
rolb
adc
dec
pop
mov
mov
ss
sub
pop
loop
cltd
xlat
mov
mov
adcb
jae
notl
xchg
icebp
stos
pushf
sarl
jnp
mov
jnp
movsb
cs
jg
jp
int
outsl
jne
addr16
cmp
movsl
lret
insl
pop
xchg
test
adc
and
imul
arpl
sbb
popa
xlat
imul
jecxz
sub
mov
push
mov
push
jb
jbe
push
inc
pop
or
push
into
dec
cmp
sbb
add
add
in
push
push
cmp
sub
xchg
ret
in
xchg
xchg
inc
add
push
fnsave
jne
sti
fadds
mov
popa
out
clc
sti
enter
icebp
push
std
out
mov
icebp
sbb
outsl
jl
jnp
sub
insb
push
cmp
iret
pop
dec
int3
cltd
stc
sbb
cmpsb
aad
clc
xchg
push
inc
inc
out
arpl
loop
enter
jp
and
and
rcrb
jmp
aam
inc
mov
or
bound
xchg
xor
pop
scas
mul
in
push
loop
xor
sub
in
sbb
adc
jae
or
cmpsb
adc
pop
cmpsb
cs
lret
loop
add
pop
sbb
rol
pop
mov
sub
pusha
aas
jmp
adc
mov
sahf
cmpsb
or
andl
pop
inc
test
mov
or
or
pop
xchg
add
xchg
add
fldt
enter
pop
stos
mov
pop
aad
lds
xchg
or
pop
mov
dec
lock
jg
jae
xor
aaa
and
sahf
xchg
fidivrl
jnp
cld
xor
add
mov
ds
lahf
mov
sub
cmp
push
sbb
mov
das
stc
jbe
shlb
repz
aam
mov
lret
jnp
cltd
cmp
out
ret
cmc
fisubs
lahf
xchg
test
idivl
outsl
stc
cli
or
ds
fcmovbe
and
sub
mov
fbld
pop
xlat
mov
or
mov
mov
xchg
std
sti
dec
rcll
outsb
add
push
ds
pusha
jl
push
sbb
adc
mov
xchg
aad
je
mov
lahf
mov
or
data16
xchg
daa
subb
sbbb
pop
or
dec
ds
pop
cmp
stc
push
mov
inc
inc
and
out
mov
add
xchg
jp
in
pop
test
cld
ret
mov
sbb
mov
cltd
fs
rclb
pop
lea
icebp
mov
cmp
mov
jno
mov
test
jnp
out
dec
inc
inc
dec
jle
into
loope
or
xor
rcll
outsl
mov
aad
mov
xsavec
bound
scas
negl
lret
add
popa
daa
jge
fldl
stos
mov
fnstcw
mov
movsl
inc
mov
xlat
pop
xor
mov
mov
add
in
aam
repz
adc
cmp
notb
out
into
and
rcll
push
sbbl
and
sbb
xor
mov
es
sar
xor
lret
dec
mov
lret
push
dec
lret
inc
dec
mov
cmpsl
bnd
mov
inc
int3
out
adc
pop
xor
jle
push
arpl
xchg
in
bound
pop
cmp
dec
shl
inc
add
fcoms
adc
flds
dec
xorb
adc
jnp
int
fs
mov
testl
out
mov
movsb
mov
insb
sbb
xchg
mov
scas
push
adc
inc
movsl
aas
divl
mov
iret
push
xor
mov
inc
xchg
adcl
mov
fninit
sti
sbb
xchg
pusha
pop
mov
arpl
jp
xchg
dec
add
in
pop
jp
nop
int
xor
inc
add
aaa
or
inc
popf
mov
push
adc
jb
in
ss
xlat
lret
inc
add
pop
add
incb
jge
mov
cmp
ja
ret
adc
adc
sbb
leave
aas
add
xor
jg
jbe
cmp
mov
adc
cld
pop
stos
call
addr16
push
cmp
cmpsl
pop
xchg
xor
test
test
icebp
lds
xchg
sub
gs
jo
mov
jb
fistl
mov
jmp
mov
mov
in
fildl
push
jle
jb
dec
and
mov
or
inc
mov
lret
jecxz
xchg
sub
pop
jge
stc
aaa
in
cmp
sub
fisubl
jge
xor
push
in
mov
pushf
loopne
and
jb
and
jnp
jmp
inc
mov
inc
sub
mov
cwtl
fisubrs
push
add
xor
add
lahf
mov
inc
nop
mov
mov
aad
mov
or
cmpsl
mov
adc
lret
adc
add
or
mov
loope
loope
xchg
leave
push
icebp
cmc
mov
aam
sbb
insl
jle
mov
sbb
cmp
adc
mov
test
int3
sbb
sbb
lods
out
loope
pop
test
push
dec
int
and
gs
jle
inc
hlt
das
mov
cmc
or
int
ja
dec
mov
popa
adcl
loopne
movsb
and
push
sub
rclb
iret
inc
or
xlat
jge
mov
adc
nop
pop
inc
outsl
mov
cli
or
mov
pop
mov
aam
outsb
lret
shl
loope
ret
dec
jbe
inc
jne
jp
cmc
out
push
or
inc
mov
push
scas
or
insl
outsb
fdivrs
cmp
adc
rcll
stc
and
mov
shll
fwait
aaa
bound
adc
add
cwtl
lock
sub
xor
testl
setp
data16
xchg
push
dec
jbe
out
dec
dec
mov
mov
ret
mov
xor
xor
xor
in
push
bound
or
cmpsb
mov
cltd
add
lock
pop
push
inc
inc
add
movsb
dec
sbb
mov
dec
mov
add
lret
mov
jno
jns
cwtl
inc
clc
push
ljmp
nop
jle
adc
sbb
bound
push
shr
dec
in
cs
cwtl
or
pusha
cmp
dec
sahf
int3
jo
rcrb
mov
loop
xor
aas
push
xchg
inc
xor
cmp
repz
scas
test
add
lcall
sub
aad
adc
dec
and
test
fimuls
push
data16
xorb
fimull
add
push
push
pop
sub
sbb
inc
popa
lds
cli
sbb
dec
test
fwait
test
mov
pop
and
jmp
mov
dec
xchg
addr16
scas
fwait
inc
sub
test
ja
jae
mov
cmp
or
push
rcr
dec
imul
movsb
lods
outsb
and
and
aas
jns
mov
aam
inc
lret
inc
addr16
cmp
daa
pop
jbe
mov
daa
cmpsl
pop
ja
pushf
mov
outsl
dec
xor
lahf
xor
int
mov
dec
pusha
cwtl
mov
add
mov
adc
stos
push
je
mov
adcb
push
std
push
call
sahf
arpl
jmp
out
clc
push
addb
add
jmp
dec
inc
sbb
clc
xor
sub
mov
xor
fstl
fnstcw
into
roll
leave
xor
in
ret
push
out
inc
xchg
imul
add
into
jnp
push
loope
sbb
sub
push
add
inc
shr
xchg
rcrl
lods
mov
insl
mov
movsl
into
negb
addr16
imul
xor
into
sub
subl
xchg
jns
sbb
dec
dec
jns
jg
xchg
lea
xor
mov
loope
out
test
idivb
addr16
push
pop
test
jecxz
jmp
cmpsl
push
pop
sub
add
jle
adc
pop
icebp
jge
iret
push
xchg
sti
in
xorl
mov
popf
cmc
lret
in
mov
test
scas
popf
push
or
xchg
cwtl
xchg
cwtl
dec
cld
stc
mov
sub
movsl
sub
push
bnd
rclb
jbe
sbb
shll
pop
aas
iret
pop
jg
mov
jne
push
shl
cmp
ss
dec
jecxz
clc
leave
push
std
push
and
fidivrl
out
insl
movl
out
xchg
xchg
ljmp
pop
cld
or
mov
imul
fs
adc
in
mov
mov
pop
mov
fsubr
enter
scas
dec
mov
pop
test
lds
orb
sub
jnp
push
dec
mov
lret
xor
and
cmpb
fcmovu
xor
std
and
rcll
xchg
mov
jle
push
rorb
shrl
adc
push
mov
les
cmp
sahf
addb
push
cmpsb
scas
fsubl
movsl
int3
fildl
add
es
cmpsb
adc
je
xor
pop
lock
add
push
inc
add
and
call
and
jle
add
popa
push
dec
clc
lods
lcall
shll
inc
pop
in
leave
xchg
popf
das
std
add
adc
mov
scas
xor
fsub
pusha
call
mov
gs
clc
fisttps
mov
stc
pop
shrb
movsb
out
shll
sbb
mov
inc
inc
cmp
mov
jnp
push
sub
sub
push
add
sub
stos
add
push
paddw
dec
out
pop
jg
adc
mov
fbstp
outsl
fsubl
push
insb
mov
inc
dec
xchg
loope
push
movsl
cmpsl
mov
add
dec
inc
movsb
cmp
lds
int3
notb
pop
mov
jne
jb
lock
jmp
xchg
lret
cmp
lock
fmul
arpl
cmpsb
test
repnz
lods
jb
adc
aam
xchg
rolb
cmpsb
icebp
popf
adc
ds
push
dec
jne
jno
pop
lds
push
std
outsb
cmp
lret
mov
inc
jl
dec
adc
dec
mov
and
leave
ret
popf
test
out
sbb
add
in
jle
fldenv
lahf
in
push
xor
sub
sub
or
pop
vmread
test
lds
xchg
aas
ret
lret
aad
je
enter
leave
out
sub
lea
xor
dec
xchg
inc
test
out
insb
sarl
rorl
rorb
sbb
jmp
or
movsb
adc
jecxz
in
cmp
add
dec
adc
add
pop
xchg
sub
test
jns
ror
lea
inc
shll
xchg
pop
fdivs
andl
push
fldl
mov
mov
in
push
andl
rclb
cmp
loop
cmp
inc
in
pop
dec
xor
ret
dec
mov
lods
fistpl
icebp
pop
adc
inc
data16
and
insl
mov
dec
mov
mov
pop
in
out
mov
idivb
xchg
add
daa
mov
test
sbb
test
mov
mov
push
popf
cmc
adc
test
lret
push
mov
ss
push
jb
and
jns
addr16
aad
dec
shrb
add
cld
inc
repz
dec
jbe
jbe
int
ljmp
xchg
mov
rclb
and
xchg
iret
dec
jg
bnd
lahf
xchg
xor
sbb
add
enter
test
arpl
sub
push
mov
mov
mov
loopne
mov
or
xchg
push
cmpl
fs
inc
cmc
ss
xor
mov
and
mov
pop
cmp
sbb
add
sub
jo
mov
push
out
insl
fidivl
xor
int3
cmovns
test
into
add
jo
mov
pop
lret
pop
push
cmp
add
push
test
adc
scas
cli
add
mov
clc
jae
jae
jo
mov
add
jno
loope
enter
push
aas
test
fnstenv
and
adc
call
loop
stos
add
les
mov
sub
cmp
and
push
test
dec
adc
test
lods
js
imull
loopne
sub
jg
fdiv
jns
sti
adc
fisttpll
icebp
mov
mov
decb
pop
cwtl
jg
mov
cwtl
les
cs
leave
hlt
dec
mov
push
inc
xchg
fbstp
fidivrl
xor
andb
jl
jp
xchg
cmpsl
insl
loop
dec
loope
mov
insb
addl
cmp
repnz
push
and
mov
mov
int
xlat
or
xor
icebp
and
xchg
or
mov
inc
sub
jne
call
ja
and
and
or
mov
pop
imul
stos
fldcw
outsb
rcrb
xorl
jl
or
xor
inc
imul
rcrb
popf
add
loopne
jle,pn
mov
push
test
dec
int3
xor
movsb
xor
pop
xlat
dec
mov
ljmp
push
aas
jle
stos
call
pop
cmp
cmp
call
ret
push
sub
pop
imul
pop
pop
fidivs
dec
ds
inc
add
repz
dec
sahf
dec
xchg
std
xchg
das
and
inc
dec
and
xchg
fisttpl
mov
loopne
mov
xor
adc
push
sti
lret
shlb
popa
sbb
mov
lds
subb
test
dec
push
sub
cs
push
scas
push
inc
xor
ljmp
loope
out
cwtl
add
xlat
push
cmpsb
adc
mov
xchg
lods
sbb
scas
adc
fwait
pop
aaa
inc
cmp
lea
and
out
ja
cmp
add
fsub
out
call
movsl
shlb
mov
add
xor
fsubrl
mov
push
mov
push
outsb
pop
adc
adc
lock
aad
mov
shll
test
xchg
xchg
and
pop
add
dec
jg
movsb
inc
xchg
iret
sbb
cmpsb
xor
into
cmp
jo
jnp
jmp
dec
insl
lret
push
mov
aad
bound
outsl
inc
gs
scas
dec
mov
and
je
movsl
in
mov
rcr
mov
dec
popf
hlt
into
mov
aaa
test
shll
pusha
jmp
fstl
in
daa
imul
cmp
sbb
cmp
adc
into
clc
and
push
adc
jge
fcmovnbe
inc
sbb
jne
xchg
adc
movsl
or
adc
xchg
pop
enter
xchg
cmpsl
push
ret
loopne
push
fldenv
std
andl
jp
cmp
enter
repz
dec
or
lret
or
mov
out
add
std
sarb
dec
inc
xchg
std
sbb
jge,pn
addr16
push
mov
xchg
add
dec
push
daa
mov
mov
leave
sahf
fs
lock
push
ds
and
ficoms
sub
add
pusha
pop
jne
adc
icebp
mov
sti
daa
insl
jl
mov
pop
mov
sub
and
mov
cs
nop
in
mov
sti
in
fnsave
xlat
daa
nop
adc
repnz
and
add
imul
test
shll
testl
out
fdivr
js
jb
cmp
dec
xchg
dec
adc
and
pop
loope
movsb
jp
jmp
dec
leave
add
add
jmp
loop
out
fadds
fildll
push
or
adc
imul
bound
fcompl
hlt
xor
push
fs
subl
jne
nop
inc
lock
cmp
repnz
rep
or
lock
fcmovne
test
movsl
or
push
leave
push
mul
dec
add
push
loopne
xchg
jne
jmp
adc
xor
lods
call
pop
mov
clc
cmp
aad
std
idiv
outsb
push
lods
in
add
in
push
xchg
pop
add
pushf
insb
lcall
mov
fs
insb
mov
inc
aaa
mov
or
inc
std
pop
mov
ljmp
repz
loope
mov
es
sbb
add
ljmp
stos
jecxz
into
jb
insl
data16
inc
lods
and
xchg
jo
xor
into
cli
and
fstl
pop
and
inc
mov
lods
lds
in
xchg
cltd
jmp
xchg
add
int
sub
mov
jge
cmp
jle
cld
cmp
into
cmp
dec
repnz
pusha
push
fldt
sbb
cli
repnz
pusha
outsb
xchg
mov
push
scas
ret
mov
cmp
pop
subl
mov
add
aad
pop
loopne
push
stc
fwait
mov
ret
sbb
dec
sbb
clc
test
int
aaa
imul
jns
les
aas
gs
movb
mov
push
es
fs
xchg
ret
das
mov
sub
out
popa
mov
and
dec
or
lcall
idivl
mov
pcmpeqb
lcall
std
stos
push
jp
or
jge
incl
pop
push
scas
ljmp
imul
xchg
inc
mov
pop
inc
pop
fdivs
add
mov
push
leave
lods
fs
es
sub
xchg
pop
loop
fdivs
pusha
dec
inc
ret
imul
cmc
mov
sub
or
std
ret
mov
push
fstps
jl
filds
call
and
add
cmpsl
push
scas
sahf
add
mov
push
add
mov
dec
call
dec
or
out
das
lret
dec
movsl
jl
fsts
rol
xchg
mov
ljmp
dec
and
les
xor
int
shl
pop
dec
cli
dec
sti
cmpsb
pop
aas
dec
push
xor
add
scas
daa
inc
adc
test
jb
mov
popa
sub
jecxz
pop
xor
inc
mov
mov
and
pusha
stc
mov
mov
xor
in
dec
xchg
or
out
sub
rol
cmp
mov
insl
push
and
or
add
jnp
cmp
pop
mov
dec
cmp
sub
push
add
adcb
pop
in
or
or
cmp
mov
clc
pop
push
sarb
ret
es
jo
mov
inc
jmp
sbb
movsb
dec
lods
add
sub
sub
aas
int
jo
mov
test
jmp
dec
gs
inc
inc
cwtl
mov
adc
arpl
testb
lret
std
cmpsl
push
dec
fidivrs
jbe
nop
icebp
bound
sbb
cmp
movsl
loopne
pop
gs
outsb
mov
jo
and
ss
cli
nop
sbb
gs
jecxz
aad
cmpsl
lahf
pop
push
xchg
pop
mov
bound
scas
mov
outsb
and
cmp
sub
xchg
sbb
inc
sub
test
mov
idiv
pop
adc
jge
mov
jl
push
pcmpeqw
sbb
jno
aas
mov
ljmp
and
popa
mov
mov
aad
jbe
mov
lcall
xchg
mov
cmp
xchg
mov
jl
push
cli
out
cmp
pop
dec
leave
cmp
mov
cmpsl
outsb
inc
or
mov
sub
in
int
add
in
xchg
clts
mov
add
xchg
mov
mov
sub
push
dec
in
fdivrl
stos
sti
adc
push
xor
mov
loopne
or
sbb
outsl
mov
ficomps
jg
mov
cmpsb
sub
daa
push
mov
ljmp
mov
out
jecxz
pop
pop
sub
xbegin
shll
xchg
subb
fsubrl
xor
cltd
rcl
leave
repz
aad
aas
xchg
and
mov
jecxz
mov
dec
test
push
inc
dec
xchg
roll
out
mov
mov
push
push
dec
outsl
enter
sti
lods
mov
mov
jb
gs
pop
hlt
inc
xchg
je
cmp
jle
sub
jp
jo
icebp
push
stos
jo
das
mov
fldl
cmpsb
cmc
cld
pop
push
pop
ds
popf
cld
stc
mov
shll
insb
imul
scas
jecxz
in
shl
pop
jmp
sub
mov
xchg
es
dec
mov
sbb
push
and
pop
mov
push
sub
and
lret
cs
xor
push
fs
xchg
lods
push
andl
cmp
decb
rorb
int3
lcall
jo
sarb
aas
adc
in
icebp
adc
es
or
mov
inc
xor
inc
pop
mov
mov
inc
xor
jnp
repz
into
mov
xchg
xlat
pushf
push
xor
lea
movsl
dec
or
and
and
sti
imull
jge
adc
movb
dec
out
push
sysenter
imul
scas
loopne
mov
sahf
clc
xlat
sbb
in
xchg
pop
xchg
cwtl
pop
inc
xor
jne
jmp
xchg
lds
mov
dec
jl
sarl
sub
push
push
xchg
adc
loop
lds
and
cmp
into
pop
out
je
int
mov
push
fisttps
bound
test
movsb
pop
in
pusha
mov
mov
fldl
ret
or
jbe
and
les
add
and
pop
sbb
sub
shl
add
pop
pusha
inc
dec
icebp
mov
clc
inc
jp
fcoml
out
in
mov
dec
and
enter
adc
add
mov
jno
xchg
call
jo
adc
call
and
cmp
daa
sahf
sbb
lret
cwtl
push
sbb
stos
xor
push
fstpt
adc
std
sbb
rcll
xor
pop
inc
jmp
loope
fidivrs
repnz
push
and
or
sub
js
in
dec
fnstsw
jecxz
sbb
sarl
ret
shl
icebp
enter
pop
or
aaa
jmp
lret
push
jmp
cmpsb
outsl
js
push
dec
pop
stos
mov
sbbl
cmc
mov
icebp
divl
push
pop
adc
aas
xchg
sti
int3
in
repnz
inc
sub
pop
ss
inc
push
arpl
pop
pop
add
das
pop
cmp
popa
nop
fs
lods
icebp
xchg
stc
jbe
adc
sub
sbb
or
sahf
imulb
ret
mov
inc
lods
adc
or
dec
jp
push
inc
mov
push
xchg
push
mov
push
push
add
arpl
daa
mov
test
dec
loop
push
imul
jg
sti
rolb
sahf
adc
popl
outsl
lret
fstl
imulb
inc
sti
push
push
orb
mov
lds
jo
loope
arpl
adc
sub
dec
arpl
xor
mov
sbb
cmp
ja
mov
push
vmovaps
or
jmp
jae
sub
in
lret
rcrb
or
sbb
jle
ljmp
pop
cs
popa
fnstenv
jbe
xchg
lret
xchg
mov
cli
idivb
or
xchg
mov
xchg
aad
je
fstps
adc
jp
call
outsl
addb
mov
inc
in
cli
inc
xchg
xorb
and
ja
movsl
fsubl
sahf
sub
push
data16
lahf
cmp
lret
push
pop
mov
arpl
ficomps
outsl
std
stos
imul
sar
lahf
aaa
sbb
push
insl
pop
adc
jge
jo
push
and
mov
stos
aam
jo
imull
add
xchg
xchg
shl
sbb
sub
mov
mov
mov
data16
cs
rolb
aad
jl
push
xchg
sti
cmp
mov
ficoml
data16
imul
lods
and
jbe
sbb
jae
test
stos
pop
mov
popf
arpl
mov
inc
xor
pop
xor
comiss
les
mov
xchg
movsl
divl
lahf
push
subb
iret
inc
inc
out
mov
lods
push
scas
int
xchg
loope
push
dec
call
bound
push
inc
cmc
cmp
test
enter
rorl
sbb
push
cmpsl
jp
loopne
dec
jno
shll
xchg
pop
fdivrs
aaa
mov
loope
shrb
inc
sub
mov
and
add
pushf
sahf
sti
cmp
in
dec
sub
testb
lods
into
movsl
mov
push
or
outsb
sbbl
or
ljmp
jg
add
sub
jle
js
xor
loope,pn
cmp
mov
leave
addb
stos
aaa
inc
ljmp
js
pop
lahf
sub
sub
pusha
imul
mov
repz
data16
pusha
dec
or
inc
mov
cmp
fistpll
and
mov
xchg
or
mov
pop
jo
lret
not
sbb
ljmp
jmp
dec
mov
out
cwtl
lea
rcrb
sub
fs
lock
movsb
cmp
inc
iret
fs
nop
jns
popf
jnp
inc
or
loop
jl
scas
jmp
push
stos
inc
test
lret
dec
pop
push
scas
add
xor
sbb
mov
testl
repnz
sti
aad
jl
jno
shlb
inc
dec
fsubp
mov
or
lods
cmp
mov
inc
dec
inc
cmp
and
cmp
jb
jno
jmp
call
sub
sbbb
dec
pop
loopne
cmc
addr16
out
dec
pop
sub
ljmp
and
add
mov
movl
fldenv
inc
test
icebp
xor
jns
jl
cmpsb
in
xchg
xchg
sub
mov
or
jge
add
xchg
push
enter
push
fcompl
pop
in
cld
jmp
cmpb
add
in
adc
mov
dec
xorl
mov
mov
bound
mov
daa
and
xchg
jle
xchg
das
imul
addr16
dec
pop
pop
jg
sti
xor
xchg
cs
imul
jae
dec
orl
sarl
mov
cmp
fwait
sti
dec
dec
jb
mov
jb
clc
sar
aad
push
jg
cmp
pop
div
mov
sbb
mov
inc
shlb
xchg
lret
es
movl
mov
or
stos
cmpsl
roll
aad
xchg
push
mov
movsl
arpl
adc
iret
cwtl
inc
inc
hlt
loopne
lret
sar
out
xor
hlt
jnp
mov
dec
push
and
rorb
leave
jb
js
in
mov
mov
cwtl
mov
icebp
repz
fbstp
arpl
sub
mov
dec
int3
or
cmp
cmp
and
xchg
jmp
jle
stc
mov
bound
push
mov
adc
pop
nop
enter
nop
mov
dec
popa
add
dec
jb
mov
dec
fadds
jb
outsl
outsl
js
call
aad
mov
or
je
cmp
daa
xchg
ss
push
dec
and
add
push
negb
inc
test
stos
jmp
push
cmpsl
xchg
pop
call
scas
jo
xchg
fidivrs
xor
nop
lret
lea
aaa
adc
cld
pop
sub
mov
shlb
scas
stc
xor
dec
lods
in
and
lock
fdivp
xor
push
enter
jns
xchg
loope
adc
sbb
test
test
sahf
sub
sbb
xchg
jo
pop
mov
mov
imul
cs
push
mov
bound
xchg
push
or
movsb
xor
pushf
add
pusha
push
in
inc
in
jmp
loope
dec
inc
push
mov
dec
push
push
jne
fwait
dec
fstpl
adc
movsl
inc
fisttpl
enter
fwait
mov
jl
sti
shrl
jns
cmp
push
mov
shr
xchg
jp
jae
sbbl
stc
dec
in
mov
dec
adc
xchg
pushw
xor
push
ljmp
int
insl
cmp
jmp
and
jno
mov
sub
mov
sbb
and
pop
pop
mov
adc
mov
xchg
jno
stos
or
inc
inc
and
cmpsb
add
jge
js
cmc
mov
movl
repnz
ds
cltd
pushf
dec
leave
dec
xchg
rcll
push
push
fsubs
xor
pop
push
and
mov
into
dec
add
imul
bound
adc
stos
into
push
cmp
leave
aas
jp
pop
add
fldl
fs
lret
mov
mov
cmp
mov
mov
cmp
pop
mov
jno
add
loopne
outsl
int3
and
push
and
dec
jo
aad
cmp
dec
jge
scas
lea
std
cmp
jge
into
push
nop
iret
rcrb
and
cmp
icebp
push
xchg
rcrl
in
add
push
cmp
push
sbb
dec
push
jg
dec
mov
pop
sti
and
subl
lods
adc
fdivp
stos
std
and
and
mov
gs
or
jg
popf
xchg
and
xor
addr16
test
fimuls
pop
mov
and
sbb
jg
dec
mov
mov
movsb
sub
sbb
ss
pop
push
out
aas
xchg
xchg
cmpl
sub
add
pop
jo
ljmp
xor
pop
loope
adc
dec
inc
push
cmp
inc
js
adc
xsave
in
add
xor
mov
popf
inc
xor
roll
mov
jbe
xor
inc
xchg
add
mov
xor
loop
or
mov
negl
aad
pop
popf
adc
and
lea
lret
cli
pop
pop
insb
frstor
test
out
adc
js
adc
cli
pop
ret
lock
shrb
loop
xchg
jns
scas
es
mov
dec
xor
aas
jl
and
das
movlps
stos
aaa
std
fisubrl
icebp
ss
iret
jno
lock
insb
ret
insb
jmp
in
jmp
enter
movsb
xchg
inc
cmp
or
push
movsl
xchg
sbb
and
data16
jo
push
mov
pop
jp
movsb
cmp
sbb
shll
sbb
push
adc
sbb
fwait
cmp
sbb
sbb
inc
sbb
imul
add
adc
outsb
aas
mov
aam
jbe
or
sbb
xchg
mov
std
pop
loop
out
sub
fwait
pop
int
out
stc
xchg
in
sub
stos
mov
arpl
xchg
jge
andl
pushf
jb
ljmp
out
fwait
cld
seto
jae
or
enter
jle
fs
push
xchg
adc
cmp
sub
movsb
or
dec
jl
add
jmp
sbb
mov
mov
out
mov
pop
push
insl
and
cmpsb
cmp
xlat
cld
nop
std
inc
imul
lcall
lcall
nop
fldt
imul
insl
arpl
sbb
pop
out
push
pushf
pop
or
les
inc
movsl
dec
pusha
xchg
dec
jmp
test
xor
cwtl
sarb
gs
je
mov
push
cmpsb
add
out
xchg
movsl
aas
inc
fidivrl
enter
lock
test
cmp
les
pop
inc
faddl
adc
and
shll
add
fmuls
mov
jbe
inc
fsubl
fucomi
inc
cmc
cmp
mov
pandn
shlb
lcall
das
and
outsb
mov
push
enter
into
dec
icebp
sbb
cmp
movsl
push
adc
fdivs
call
loopne
lretw
test
dec
add
pushf
pushf
ljmp
clc
daa
jecxz
inc
xchg
dec
jp
popa
jnp
hlt
adc
arpl
rorl
nopl
ffreep
loope
lock
sub
push
add
mov
fcom
es
std
inc
dec
mov
sub
xor
cmpsl
pop
lods
repz
pop
mov
xor
pop
sbb
inc
push
mov
jge
aas
dec
pop
inc
inc
cmp
and
out
sub
cmp
cmp
cmp
mov
pop
icebp
aaa
shl
pop
lock
arpl
nop
notb
mov
adc
push
jnp,pt
mov
pop
jmp
dec
pop
push
xlat
les
xlat
or
das
fnsave
nop
sbb
sbb
imul
sbb
lahf
xor
or
lret
out
mov
int3
sub
lock
jl
cmpsl
cli
add
icebp
dec
xlat
jns
les
add
dec
out
cmp
iret
sub
cmp
and
mov
and
pop
mov
inc
push
jl
dec
mov
movsl
xor
dec
aaa
lock
and
cmp
clc
sbb
cmpsb
iret
jbe
cld
add
cmc
jl
lods
repnz
and
vsubps
fstpl
xor
mov
adc
mov
int3
add
repz
and
mov
pop
insb
and
aam
pop
inc
repz
ret
sbb
or
in
mov
dec
loopne
inc
dec
lods
inc
push
iret
push
test
testl
fisubrs
pop
test
mov
fstl
xor
mov
push
mov
push
push
inc
xchg
iret
data16
fisttpll
push
cli
leave
push
inc
fnstenv
out
inc
push
push
lahf
dec
daa
test
jmp
fs
sbb
lahf
orl
or
pop
mov
cmp
dec
jge
mov
mov
jge
push
insl
adc
testb
bound
loopne
scas
cmp
or
fstps
xchg
lds
fwait
mov
popl
push
jecxz
xchg
mov
mov
mov
push
push
stos
outsb
pop
loope
mov
and
int3
sub
mov
dec
mov
jo
fnstcw
scas
andb
mov
iret
push
ficoml
dec
xchg
sbb
rcrl
bound
and
cltd
pop
jp
and
and
in
pop
lret
xor
dec
ret
cmpsl
push
xor
mov
sub
cmp
adc
outsb
add
fwait
scas
std
test
and
pop
mov
push
aad
jbe
stos
cmp
sbb
aas
negb
out
lar
andl
fs
int
lock
int
mov
sarl
mov
push
sbb
or
aam
mov
iret
sub
cltd
xchg
das
fdivl
mov
jmp
sbbl
lret
or
movsl
sub
push
test
and
sbb
dec
orl
jae
rorl
inc
mov
lcall
mov
jecxz
testb
lock
jmp
push
mov
in
in
fmull
mov
clc
push
inc
inc
ret
sbb
movsl
lea
subl
xchg
cli
pusha
ljmp
jp
adc
testb
jae
push
cmp
popa
sbb
out
jbe
mov
xchg
bound
outsb
sbb
cmc
dec
push
pop
adc
or
mov
cmpsl
fstps
and
push
dec
mov
fbld
insl
pop
ljmp
loop
inc
test
and
mov
es
outsb
test
test
sbb
ror
adc
imul
xchg
lock
pop
in
aad
lea
mov
push
out
dec
repnz
mov
dec
jge
fsts
dec
stos
ret
mov
ret
xor
lret
orl
jmp
cmp
mov
mov
insb
in
sbb
inc
jp
cmp
push
test
dec
pop
psubw
mov
fwait
add
xchg
insl
xlat
pop
and
jne
add
jmp
push
and
insl
sub
mov
inc
jae
ja
out
dec
mov
mov
outsb
insl
xor
fs
outsl
jg
sub
aam
movsl
ss
jl
adc
cmp
ja
xchg
inc
or
bound
clc
test
pop
adcb
loope
fwait
xor
mov
int
out
fcoml
aam
fstpt
dec
lret
mov
bound
les
or
push
mov
xlat
and
bound
aaa
pop
pushl
cmp
fidivrs
mov
push
pop
mov
push
jb
jae
outsb
imul
mov
push
shll
int
jp
inc
cmp
and
fisubl
jbe
int3
add
out
mov
dec
cwtl
stc
sub
xlat
ds
adc
or
loop
movsb
dec
aam
pusha
dec
ret
ficomps
add
repnz
cmpsb
and
add
push
and
pop
sbb
mov
jo
lret
pop
adc
mov
or
adc
mov
cmpsb
arpl
bound
loope
push
andl
ror
mov
dec
mov
iret
sub
or
add
inc
push
pop
mov
cwtl
push
sub
loop
xchg
jb
pop
mov
das
cmpsl
adc
mov
popf
sub
cltd
mov
add
xlat
lods
add
jb
lcall
dec
push
or
and
pop
rorl
push
cmp
inc
imull
outsl
jl
sti
test
sub
xchg
xor
xor
and
sbb
sub
mov
fsubr
push
xor
inc
int3
rcr
inc
daa
adc
mov
fdivrl
jae
inc
jmp
imul
test
out
xchg
inc
sbb
rolb
clc
jp
pop
adc
aaa
movl
test
stos
sbb
sub
fisubl
mov
push
pop
dec
sbb
mov
push
mov
out
xor
lcall
stos
lahf
div
scas
lods
jb
jae
pop
inc
sti
mov
sbb
push
sahf
out
dec
xchg
js
lea
loope
adc
mov
int3
mov
les
test
into
xchg
ja
cli
or
mov
dec
leave
aam
push
push
fsubrs
mov
outsb
jle
pop
mov
and
sub
xlat
dec
mov
sbb
fdivr
pop
imulb
data16
pop
adc
scas
popa
xchg
mov
fidivl
inc
lock
or
fistpll
jns
mov
xchg
enter
scas
jbe
bound
xchg
outsl
test
mov
stos
out
mov
popf
std
pop
push
xor
xchg
mov
fstpl
cld
ja
inc
out
arpl
push
push
int
xchg
xchg
sub
adc
xlat
sub
dec
orl
cmp
lds
imul
addr16
xchg
out
out
jbe
xchg
and
push
mov
out
pop
pop
mov
mov
jmp
sahf
adc
ret
scas
mov
cmpsb
mov
jmp
fistpl
mov
and
jl
inc
stos
pop
inc
andl
sahf
xchg
rorl
cmp
push
ret
pop
jno
inc
dec
mov
pop
psrad
pmaxub
int
or
add
xor
sbb
je
xchg
insl
adcb
jl
mov
sbb
test
aad
jae
pop
mov
and
loope
les
pushf
push
fistpl
in
test
and
cs
cmp
je
pop
xorl
jmp
mov
int
int
rdseed
jg
mov
sbb
insl
popf
mov
arpl
insl
outsb
push
mov
out
out
mov
and
inc
repnz
xlat
imul
aas
ss
movsl
sbb
stc
inc
add
mov
aad
dec
mov
mov
or
fmuls
and
fsubrl
push
cs
mov
mov
jae
add
and
adc
sub
lret
sbb
xchg
xor
xor
into
push
dec
leave
or
adc
jb
shlb
mov
pop
xor
cld
shrb
jl
inc
mov
add
lock
mov
dec
lods
mov
push
sub
jnp
sub
mov
add
adc
jno
adc
lret
fistps
jo
mov
jg
pop
faddp
push
in
enter
mov
orb
and
ss
in
push
ret
test
call
movsb
test
jmp
or
cmp
outsl
iret
fdivs
push
dec
add
pop
cmc
pusha
add
inc
adc
cli
xchg
mov
pushf
pop
xor
inc
pop
movsb
daa
lret
pop
out
cmp
jge
testb
jae
push
int
aas
cmp
out
push
movsb
in
insl
scas
adc
popa
pop
cmp
jecxz
aaa
xor
fdivrs
xchg
loope
inc
jle
sarb
jle
mov
hlt
add
dec
shl
mov
push
aad
xor
popf
add
and
aam
fsts
sub
pop
xchg
mov
push
or
js
push
mov
leave
mov
into
nop
mov
je,pn
aad
pop
mov
ret
in
cli
pop
aaa
dec
outsb
mov
aam
and
out
arpl
ja
cld
add
frstor
lcall
sbb
adc
jbe
sbb
mov
mov
pop
rorl
jns
imul
adc
dec
or
jle
inc
mov
sub
sbb
dec
push
iret
mov
xchg
jge
fdivr
addr16
push
xor
and
outsb
xchg
pop
lock
cs
xchg
cmp
jne
jnp
pop
adc
jecxz
mov
inc
sbb
push
pop
mov
int3
js
lcall
xchg
adc
ljmp
fisubrs
inc
add
dec
jns
push
and
je
jo
pop
sbb
xor
dec
sub
popa
rcrl
jecxz
inc
pop
imul
sub
xor
shll
sbb
fucomip
insl
inc
into
stc
lcall
inc
mov
adc
insl
and
xchg
xchg
jecxz
sbb
repnz
xor
xchg
add
ret
lea
xchg
adcl
inc
mov
jnp
pop
sarl
adc
sbb
push
inc
mov
jge
out
push
xchg
inc
dec
mov
lahf
mov
mov
xchg
add
lods
subl
ja
lods
xchg
or
cmp
cmp
js
mov
xchg
test
inc
push
sahf
rorl
pop
test
mov
adc
inc
popa
addl
xor
pop
ljmp
dec
cmc
xor
xchg
push
out
es
test
pop
aas
cmc
leave
data16
lret
iret
and
lcall
sahf
or
enter
xchg
mov
cltd
xor
scas
addr16
jp
pop
ja
leave
iret
repnz
or
and
lret
jb
clc
int3
in
xchg
dec
stos
inc
bound
xlat
loopne
push
adc
test
int3
sub
mov
jae
and
jb
psubq
in
mov
cmp
dec
lret
cmc
lods
xlat
call
imul
mov
shll
xchg
mov
lods
mov
inc
jp
inc
je
and
nop
sub
pushf
dec
pop
fildl
mov
out
mov
xchg
xor
adc
add
xor
cmpsb
xchg
mov
push
push
xchg
pop
sub
push
adc
dec
data16
pop
mov
fistps
out
cltd
adc
cwtl
jae
popf
daa
mov
push
sub
arpl
dec
and
jo
scas
and
adc
mov
roll
and
push
jmp
lock
aas
icebp
pop
jle
hlt
sahf
shl
mov
mov
lods
jbe
inc
adc
adc
dec
mov
out
or
dec
les
ror
sahf
mov
sub
jle
dec
scas
notl
stos
xorl
inc
sub
lock
out
inc
adc
inc
mov
pop
mov
xchg
or
mov
popf
popf
xchg
ret
adc
int
ds
insl
inc
sbb
add
inc
stos
mov
fdivrl
rorb
popf
leave
xchg
pop
pushf
push
adc
adc
pushf
add
add
sbb
clc
xchg
stc
into
sub
xchg
sbb
notl
es
lds
push
les
cmp
add
leave
lock
cmpsl
dec
xchg
dec
rcr
sti
fstpt
ja
push
lcall
pop
aad
cmp
jge
push
and
cmpsl
loope
les
or
aas
int3
dec
mov
and
out
sub
fsubrl
test
mov
sbb
adc
cwtl
lret
xchg
and
sbb
mov
jmp
xor
pop
cmp
mov
fdivl
daa
imulb
leave
test
sub
scas
in
dec
stc
push
mov
inc
cmp
mov
xchg
cmp
fwait
adc
and
ret
jmp
or
jg
sub
and
rcrb
movsl
call
inc
mov
push
aad
ror
out
int3
adc
dec
aad
xchg
xor
out
nop
lret
mov
lcall
adc
or
xchg
jle
push
push
insb
aas
into
inc
ds
jnp
sbbl
popf
push
stos
cmp
int
data16
jl
dec
dec
ljmp
mov
je
mov
xchg
xor
iret
out
adc
jge
ja
ljmp
aaa
push
int3
mov
jecxz
push
add
movsl
inc
repz
hlt
jmp
test
inc
cli
mov
xchg
add
pusha
add
adc
dec
add
sbb
aaa
cs
in
ret
insb
aas
push
sbb
inc
sbb
mov
cmpsb
lods
or
imul
inc
repnz
fwait
aaa
xor
jno
push
pop
decl
mulb
or
das
mov
cmp
inc
mov
pop
fcom
cmpb
mov
or
cmp
xlat
jle
std
pop
dec
and
shr
jae
or
mov
imul
dec
stos
mov
dec
rcrb
jge
jmp
sbb
xchg
push
mov
sbb
cmp
jl
hlt
outsl
aas
loope
xchg
jnp
push
test
mov
mov
fistpl
ss
std
fxrstor
adc
dec
clc
sub
inc
scas
ret
ss
xchg
mov
lock
fidivs
xor
sbb
push
aas
cmpb
aaa
addl
leave
dec
cld
sub
mov
or
adc
mov
mov
loopne
jmp
les
sarb
inc
pop
mov
repz
push
fbstp
je
ss
ret
pusha
pop
dec
enter
addr16
insb
jg
enter
in
addr16
out
out
dec
mov
test
xchg
addr16
lcall
pop
and
xor
ss
and
inc
jno
xlat
imul
fcompl
arpl
inc
aas
cli
das
lcall
test
push
mov
mov
dec
xlat
and
adc
stos
cltd
mov
and
cmp
stc
stos
mov
in
out
ret
jg,pt
push
inc
loop
mov
nop
fcmovu
dec
push
xchg
push
jae
sub
pushf
andl
or
dec
fdivl
add
xor
mov
movsb
inc
sbb
pop
hlt
loop
inc
call
jae
push
xor
inc
iret
stos
or
jecxz
imul
iret
mov
adc
or
add
adc
stos
add
mov
sub
and
mov
ret
cli
add
mov
daa
add
push
filds
ljmp
lds
add
int
mov
insb
lret
push
stos
notl
push
insb
insl
cmp
faddl
inc
cltd
fidivs
into
cmp
ret
cltd
sbb
or
in
mov
sub
push
lock
flds
ret
xor
js
and
negl
stc
psllw
stos
stc
and
add
lret
mov
shl
add
outsl
lcall
pop
dec
cmc
neg
shlb
inc
addr16
lahf
fwait
mov
sar
fisubrs
pop
pop
mov
lret
clc
sbb
adc
xor
aam
subl
jp
imul
xor
mov
jmp
mov
out
mov
jle
lds
sbb
cmc
add
lods
pop
mov
leave
add
test
sti
test
in
ss
push
sub
fwait
in
in
ds
xor
stos
sbb
xchg
cltd
mov
sub
fsubl
cmp
xor
cmpsl
popf
sarl
inc
or
cmp
das
leave
outsb
mov
mull
xchg
ficoml
hlt
out
rorb
mov
cmp
decb
insb
popa
arpl
cmp
sub
sbb
ret
scas
je
shrl
in
push
mov
jge
out
stos
and
sub
sarb
setne
sarl
pop
dec
inc
jne
rcrb
nop
sub
xchg
xchg
pop
out
sbb
movsb
loopne
xchg
lods
pop
inc
cmpsl
ss
lods
jbe
cmc
sub
dec
cmp
testl
pop
les
shll
bound
movsb
add
shl
mov
pop
in
pop
dec
das
lods
xor
enter
mov
push
push
fidivs
addr16
cmc
es
and
test
rcrb
pop
jb
push
sti
push
xchg
sub
sub
test
mov
js
repnz
into
cmp
mov
insb
dec
xchg
mov
push
push
subl
out
dec
add
fstpt
xor
or
jge
push
mov
xchg
or
dec
jno
add
push
and
pop
pop
mov
lret
addr16
and
mov
aam
add
fistpl
sbb
loop
cmpsb
pop
lods
mov
bound
mov
dec
test
cld
jae
sbb
roll
in
lods
lahf
into
mov
or
mov
scas
js
out
aas
pop
or
jb
daa
mov
in
jno
push
adc
or
das
repz
xchg
push
jl
and
leave
fidivl
cwtl
lret
sub
mov
xchg
lds
pop
cmp
add
popf
jle
jg
xor
jno
fs
test
cs
pop
mov
ja
loop
sahf
sahf
pop
mov
incl
fcomps
lods
pop
xchg
out
fidivs
flds
pop
mov
rolb
test
js
fs
std
pop
sub
pop
mov
mov
in
out
inc
je
mov
mov
sub
scas
sahf
push
cs
pop
sahf
jo
push
push
jmp
gs
cmpsb
push
fwait
shlb
or
inc
icebp
subb
enter
mov
shlb
int
jne
add
push
jne
or
add
adc
xchg
mov
xchg
jge
sti
pop
and
mov
pop
aad
mov
into
arpl
push
rcrl
insb
lret
test
insb
pop
mov
repnz
jae
scas
into
cli
test
mov
jg
test
fnstsw
sbb
insb
push
mov
in
and
outsb
into
movsb
call
test
xchg
fiadds
jmp
in
aam
clc
mov
sahf
pop
mov
loop
xor
sub
jmp
jmp
test
cmpsb
into
sti
or
sub
jl
inc
popa
insb
mov
fs
mov
rcrb
adc
sub
adc
subl
ja
in
mov
clc
inc
sarb
jl
cli
inc
pushf
mov
mov
mov
bound
and
cs
mov
lea
adc
movsl
roll
mov
shr
loope
mov
imul
xor
filds
dec
add
mov
mov
push
decl
pop
fdivrl
leave
and
add
lcall
testb
sub
mov
xor
and
sbb
push
xlat
mov
adc
dec
das
cld
aas
push
out
inc
inc
dec
and
cs
adc
gs
bound
fisubrl
pushf
fimuls
into
mov
das
or
cmp
cmpsl
test
mov
xchg
adc
les
add
ja
fdivrl
adc
pushw
gs
aam
hlt
dec
jl
call
dec
push
adc
mov
jne
dec
cmpsb
xchg
sti
jne
aam
clc
jg
mov
xchg
push
cltd
in
loopne
or
xchg
out
xchg
jb
scas
push
push
jae
ffree
addr16
pop
push
or
cmp
sarl
mov
mov
out
xor
jge,pn
idiv
jmp
inc
xchg
xchg
rolb
out
inc
xor
xor
cs
int3
jne
dec
pop
or
test
stos
sbb
subl
adc
dec
xor
cwtl
out
enter
adc
jle
sbb
xchg
jb
popf
push
in
das
sbb
sbb
adc
sub
hlt
xchg
mov
sub
test
cs
push
xchg
popf
inc
test
cmc
std
xchg
sub
imul
pushf
xlat
xchg
pop
pop
repnz
ljmp
negl
mov
mov
fcomp
adc
add
insb
jo
int
pop
fadds
sub
mov
add
inc
jns
add
pop
fs
pop
fisttps
mov
and
push
scas
jp
dec
or
outsb
jp
int3
je
lahf
lahf
gs
pop
jge
into
jp
pop
cwtl
out
mov
addr16
outsb
and
inc
ret
push
cmpsb
cmc
dec
out
stc
jae
sarl
addr16
xor
push
cwtl
pop
sbb
rorl
push
stos
pop
cld
mov
fs
ficoms
add
movsl
cmp
shlb
aam
aad
push
fxtract
add
lcall
shrl
je
pop
ret
imul
std
ret
jle
mov
loope
xlat
daa
mov
out
movsb
in
add
cmp
add
in
stos
jmp
leave
shll
imul
insl
pop
les
imulb
fwait
push
fsubrs
xchg
stos
into
mov
or
les
mov
push
sub
jg
sub
mov
mov
nop
call
movsb
aas
test
jnp
fwait
into
daa
sbb
dec
jbe
loop
movsl
insl
test
xor
push
iret
sti
jo
dec
push
hlt
adc
popf
out
xchg
jns
pop
adc
or
rcrl
jne
add
out
out
aam
mov
or
addr16
push
push
shrl
stc
pop
loopne
sbb
jge
lods
mov
sbb
mov
es
cmpsl
loopne
add
adc
xlat
clc
xor
jge
cmpsb
idivb
jae
rorl
push
in
xor
shrl
int3
pop
or
push
insl
jmp
add
or
or
dec
fisubs
sbb
and
in
lcall
dec
pop
mov
inc
leave
cmp
js
xchg
mov
sub
mov
fs
or
loopne
xor
out
imul
xor
aaa
rcl
adc
mov
cmp
test
sub
fsubs
stos
jb
lret
in
mov
cmpsb
aad
inc
push
dec
sahf
cmpsb
es
cmpsb
aas
ss
cwtl
pop
mov
ficoml
cmp
iret
sbb
jp
push
aam
and
mov
lods
mov
add
movsb
les
rcr
xor
jp
divb
sahf
jecxz
add
mov
push
sub
adc
leave
in
jae
rcr
mov
dec
sbb
push
pushf
test
fsubrs
ljmp
cmp
adc
imul
mov
mov
push
sub
test
jmp
rcll
cmp
cmpsb
xchg
icebp
les
sbb
or
jb
and
add
mov
xchg
lret
or
inc
mov
cmpsb
add
push
push
dec
and
rcr
pop
fcoms
cli
mov
fst
jb
xchg
stos
out
push
push
cwtl
stc
jae
mov
push
jg
or
out
cmpsl
cltd
sbb
repz
popf
sbb
push
mov
ret
jo
xchg
sbb
cmp
aas
push
call
insl
je
xchg
mov
xor
push
or
repz
negb
ljmp
inc
adc
xor
and
lock
fiaddl
cmp
stos
fsubr
dec
mov
fs
sbb
dec
lods
fdivrl
lahf
test
into
sti
ss
push
mov
jo
sub
pop
pusha
iret
rcrb
add
hlt
xor
iret
push
jb
fistl
sbb
fwait
sbb
cltd
pop
jp
popf
shrb
cltd
insb
jo
or
imul
int
inc
mov
js
cwtl
leave
mov
jbe
es
add
iret
add
mov
call
outsb
mov
mov
iret
cmp
mov
leave
mov
int
and
sub
push
psubd
ret
mov
fadds
xchg
adc
stc
pop
pop
pop
faddp
adc
xor
and
xchg
push
pusha
cltd
pop
xor
mov
pusha
ss
jne
rclb
loopne
iret
dec
lret
or
and
mov
or
shrl
aam
dec
daa
in
add
dec
adc
push
xor
jge
mov
mov
test
scas
xor
cmp
push
jo
cmpsb
mov
jmp
leave
lock
cs
jle
mov
daa
inc
call
push
ja
fs
dec
jno
mov
or
in
push
jno
shrb
or
lret
mov
lahf
add
jl
outsl
push
lds
mov
and
pushf
mov
loop
mov
fisubrl
mov
dec
sub
xchg
es
fcompl
stc
xchg
inc
out
push
in
mov
push
or
and
rcll
fisubrl
cmp
xlat
inc
ljmp
loopne
dec
add
sbb
mov
xchg
jg
leave
fnstcw
mov
subl
sub
inc
dec
cmp
test
xor
les
popa
popf
add
xchg
imul
or
adc
mov
int3
mov
aas
lock
cmpsb
pushf
dec
in
cmpsb
lods
xor
sbb
shrd
and
cld
test
adc
cs
or
push
in
sub
adc
mov
xchg
inc
jne
in
loop
cmp
fxch
cmpsl
pop
lahf
dec
pop
mov
jae
push
mov
xor
xor
inc
push
scas
mov
scas
jae
cmp
insb
sub
lds
sbbb
roll
in
nop
andb
inc
ret
dec
mov
test
mov
xor
sti
pop
loope
dec
dec
fs
xor
sub
lret
fwait
cmpsl
mov
movsb
aas
sub
les
cld
push
xchg
or
cltd
sub
scas
loope
pop
add
and
mov
lcall
test
cmp
xchg
jno
jle
in
mov
pop
adc
cmp
inc
jb
popf
inc
cmpsb
dec
cmp
pop
jmp
loop
xor
lods
jl
dec
fiadds
das
xor
sub
sbb
mov
aaa
pop
mov
lock
lret
data16
sti
shrb
stos
out
in
repnz
jo
mov
insb
roll
in
fsubl
lcall
divb
dec
adc
sbb
mov
aad
or
subl
ja
cmp
iret
shlb
push
inc
mov
data16
movsb
xchg
sub
adc
stc
or
xchg
into
cmp
inc
pop
jns
outsl
push
mov
ja
jne
shrl
jmp
and
fdivrl
popa
fiaddl
stc
cmpb
js
and
or
lret
aad
test
add
lret
and
aam
and
inc
jle
out
xchg
aad
add
xchg
test
lods
or
subl
mov
and
fsts
pop
dec
ret
jmp
test
mov
pop
push
hlt
mov
inc
lock
pop
insl
pop
mov
dec
xor
pop
lods
mov
inc
push
jg
fwait
dec
lods
loopne
cli
jno
push
test
das
ficomps
push
jno
or
lods
fistl
xchg
sbb
test
lret
mov
adc
sahf
push
jle
aaa
adc
sarl
mov
imul
pusha
xchg
push
inc
pop
ljmp
mov
pop
mov
mov
sbb
je
fwait
ja
fstps
jp
fsubs
and
adc
mov
ds
fsubs
mov
in
sti
rcrb
cmp
xchg
out
mov
in
cli
je
lds
push
sub
lcall
sbb
cmpb
xchg
cld
hlt
cli
mov
cmp
gs
adc
rcl
pop
stos
andb
mov
mov
push
and
mov
sub
stos
cwtl
or
lret
mov
in
xchg
ss
xor
or
std
loopne
dec
xchg
push
repnz
xor
pop
sbb
mov
add
lahf
mov
repz
sar
aaa
les
test
mov
jge
mov
mov
pop
dec
ds
aam
cmp
sub
ret
loopne
stc
xor
std
xlat
jb
into
pop
test
pop
mov
dec
or
push
mov
mov
jecxz
or
mov
out
add
cmp
xor
fisttpl
mov
adc
test
imul
stc
pop
fucomip
enter
pushf
adc
dec
fmuls
adcl
pop
mov
or
jmp
pop
fsubp
mov
insb
cld
icebp
addr16
addr16
dec
xchg
mov
sbb
ljmp
int
mov
fwait
pop
mov
xchg
fimull
inc
ljmp
nop
lock
mov
sbb
and
cmp
sub
stos
dec
sti
mov
xor
sarl
test
mov
mov
adcb
cmp
xchg
or
xchg
push
sbb
lock
xor
aad
push
or
xchg
inc
xchg
out
pop
sahf
out
imul
cmp
stos
mov
jmp
mov
mov
lret
and
ljmp
outsl
mov
ja
jno
xchg
loopne
jl
out
push
jne
sbb
jmp
aam
lods
pop
lret
sbb
mov
xor
adcl
sarb
stc
cmp
jge
ficomps
lea
dec
jno
sbbl
jl
sub
stos
push
shlb
in
in
aas
lds
cwtl
push
in
adc
inc
pop
dec
push
add
mov
cmpsb
arpl
xor
push
cmp
sarb
aas
cwtl
fs
inc
xchg
push
loopne
push
rcr
loopne
cmp
shll
push
test
pop
fstp
sub
addr16
or
lock
inc
xor
aaa
psubusb
xchg
push
pop
adc
inc
loope
xchg
inc
lea
enter
push
jno
xchg
nop
incl
mov
jge
ret
push
or
ja
jge
sbb
add
rsm
pand
and
push
add
inc
inc
and
adc
popa
nop
dec
in
push
mov
xchg
xchg
xchg
movsl
aam
ffreep
fsub
out
push
jne
call
or
jne
inc
rorb
jne
mov
push
in
sbb
jns
jecxz
dec
dec
sub
lea
js
cmp
inc
hlt
pop
insl
popa
test
pop
or
loopne
ret
push
pop
mov
fst
add
sbbl
dec
je
stos
out
outsl
xor
test
xchg
pusha
movsl
inc
out
nop
push
pop
inc
push
ss
xchg
mov
pop
loope
add
xor
rol
lret
scas
dec
addr16
test
fcmovbe
test
push
out
lds
das
or
cmp
jo
xor
adc
cwtl
jl
mov
mov
enter
jb
mov
jp
fucom
test
jle
xchg
dec
xchg
hlt
xchg
jo
adc
sbb
xor
xor
js
aad
xchg
adc
imul
ret
leave
ja
or
mov
mov
andl
in
lds
fsts
insl
rclb
dec
repz
outsl
mov
test
insl
jne
pop
jp
gs
pop
mov
jbe
push
or
fsubs
ret
sub
xbegin
mov
xchg
cmp
lods
xchg
movsl
or
and
lahf
jge
in
ss
cmpsb
cld
cmp
mov
frstor
pop
pop
inc
and
scas
inc
push
add
dec
or
je
push
daa
orl
cmc
xor
insb
xor
lods
push
out
sbb
adc
clc
pop
adc
pop
pop
cmp
inc
pop
popf
popf
xchg
mov
pop
sub
pusha
aas
cwtl
cmp
insb
inc
stos
mov
movb
testl
jmp
shl
pop
out
sub
jnp
fdivrl
out
mov
ds
cmp
testl
xchg
inc
aaa
popf
fiaddl
out
fsub
call
push
or
xchg
cmp
decb
mov
fwait
ds
mov
push
cmpsb
clc
adc
pop
aas
push
lods
pop
mov
int3
jle
push
nop
jnp
xlat
std
mov
adc
cld
gs
aam
psraw
sub
loopne
es
fisubl
add
daa
jle
pop
scas
xor
adc
push
ss
enterw
adc
fidivrl
xor
and
inc
jne
sub
mov
dec
pop
cmc
test
mov
jecxz
mov
fisttpll
add
jle
std
mov
xor
jbe
imul
xor
cli
push
and
lahf
imul
fadds
das
jo
inc
icebp
mov
jb
push
jg
pushf
add
decl
out
inc
dec
ret
xor
cmc
jp
dec
push
dec
int
mov
cmp
mov
sub
pop
adc
mov
aaa
cli
jl
mov
test
sub
js
jno
data16
mov
insl
sbb
scas
popf
repz
sub
dec
push
out
adc
pop
das
movsl
inc
sbb
and
inc
and
dec
addl
or
rcrl
push
cmp
mov
sarl
es
in
xchg
imulb
jge
or
or
ss
pushf
cwtl
into
push
add
leave
outsl
dec
push
dec
adc
stos
imul
mov
mov
inc
cs
jl
adc
dec
and
scas
adc
xor
add
shr
sbb
les
cs
or
loop
enter
inc
lret
adc
xor
cmp
ret
imul
mulb
aam
sub
jp
rcll
dec
xchg
jbe
shr
fldl
in
jb
push
outsl
mov
hlt
ret
inc
xor
sub
xchg
nop
cs
cmp
pop
sahf
ret
in
cmp
mov
int
ds
cmp
add
cmp
add
lret
in
subb
iret
xor
lods
nop/reserved
sbb
shlb
hlt
lods
xor
lods
jo
popa
xor
fidivl
inc
leave
subb
mov
repz
mov
call
mov
xor
ja
enter
idivl
push
lret
fisubrs
pop
mov
mov
xchg
mov
adc
add
lock
xor
imul
dec
into
push
shl
jo
mov
sahf
inc
lods
jno
pop
inc
rcll
sbb
mov
jb
mov
or
or
sbb
fisubs
mov
xlat
pop
cmp
pop
sub
sub
sub
into
aas
and
cs
jae
movsb
mov
cmp
push
mov
scas
arpl
mov
aam
jne
movl
fidivrl
mov
scas
imulb
push
or
test
fdivp
push
lret
sub
insb
ret
dec
movsl
imul
loope
ret
in
xchg
imul
fstpl
enter
add
sbb
out
scas
pop
repz
push
mov
dec
jno
cmp
add
cmpsl
insl
aam
cld
out
stos
jno
mov
divb
jmp
stos
or
pop
cmpl
push
pop
xor
or
and
ss
jae
iret
into
in
and
fisubl
mov
ss
cmp
mov
shll
xor
gs
push
ret
push
mov
in
pop
sarl
loopne
mov
ret
out
jo
xchg
scas
leave
bound
out
jbe
test
xor
outsb
add
push
fsubs
shlb
push
lock
xchg
and
addr16
ss
jl
xchg
jns
mov
xor
add
xchg
pop
and
push
xorl
pusha
dec
mov
mov
mov
xchg
xchg
mov
jmp
dec
pop
add
enter
mov
call
push
aaa
sub
dec
popa
xor
lock
jae
mov
sbb
loopne
cmp
mov
movsl
aas
pop
add
bound
adc
inc
ds
incb
or
imul
sub
jle
test
inc
mov
or
cmp
mov
pop
rcll
repz
loopne
lds
pop
dec
jno
sub
in
mov
test
fst
gs
mov
aam
cmp
loope
dec
lods
jmp
repz
fwait
or
inc
call
repnz
mov
pop
sarl
jl
lock
xchg
fdivs
fwait
pusha
or
dec
out
sbb
inc
sbb
dec
subb
jno
test
cmp
pop
cld
stos
push
and
ss
lcall
inc
xor
ret
sub
add
push
insb
mov
push
test
fisubrl
imul
pop
fsubrs
popa
into
sbb
mov
jb
lahf
sbb
push
out
ja
cmp
add
int
lahf
cli
push
dec
fistpll
or
arpl
pop
mov
cmpsl
lods
popf
mov
js
pop
clc
lock
aam
in
jmp
mov
mov
xor
add
cmpsb
jge
es
sti
inc
and
cmpsb
test
lds
das
jbe
xchg
xchg
adc
adc
insb
sub
push
mov
inc
and
xchg
jmp
adc
sub
add
and
jns
sbb
rcl
hlt
cmc
das
les
pop
pop
bound
sbb
sub
sbb
shll
in
aam
sub
icebp
and
aaa
rclb
jo
loope
add
push
mov
sbb
xchg
pushf
push
arpl
push
dec
jnp
jp
xor
mov
pop
aas
hlt
sbb
xchg
push
inc
sub
es
push
add
loopne
test
and
xor
aam
sbb
mov
in
shrl
lods
outsl
daa
push
je
jle
int3
xor
mov
cld
testb
fs
filds
imul
fidivl
jns
push
fidivrl
xchg
aaa
cmp
mov
push
or
aaa
mov
das
pushf
outsb
mov
sti
lahf
test
cmp
scas
push
imul
aad
cs
fmuls
lds
sarb
jb
mov
arpl
fs
push
xor
jae
sub
mov
jp
adc
adc
jl
movsb
jnp
sub
ret
test
xor
in
lods
inc
pop
jmp
mov
mov
fcmovnu
fstpt
jl
lret
imul
mov
xchg
clc
push
popf
xor
xor
bound
adc
mov
out
divl
lods
xchg
sbb
push
mov
sub
jle
in
scas
scas
mov
xor
aam
hlt
pop
sbb
xor
sar
addr16
pop
cmp
sub
mov
jle
call
jle
mov
jmp
pushf
incl
in
cli
sbb
rorl
loopne
popf
cwtl
xlat
fdivrs
cmp
jl
push
test
mov
inc
pop
and
rol
push
jle
and
repz
lods
add
xchg
mov
inc
out
adc
sbb
jp
cmp
loop
aam
dec
insl
xchg
push
or
out
add
or
not
shll
dec
pop
mov
inc
in
clc
fcmovb
lret
into
repz
jbe
fisubrs
ljmp
pinsrw
xchg
pop
or
mov
xchg
lock
mov
and
jb
sbbb
mov
cmp
sub
bound
mov
xlat
or
mov
mov
mov
xchg
cltd
cmp
popa
or
cmpsl
sbb
out
push
mov
xchg
jmp
and
pop
mov
mov
rcll
jae
jp
sti
pop
sbb
sbb
xor
xchg
pop
in
pop
sub
xor
xchg
test
daa
js
xor
mov
out
mov
xor
subb
sub
mov
cwtl
cmpsl
sbb
adc
or
adcl
aaa
pop
rcll
pop
iret
mov
pop
jo,pt
mov
lahf
dec
daa
or
bswap
dec
rcrl
jbe
scas
out
clc
cmp
mov
jae
ja
add
mov
bound
jne
fisubs
sar
gs
mov
jno
and
jge
js
loope
xchg
imul
imul
fistpl
adc
rolb
bound
ficoml
push
in
scas
dec
aas
roll
outsb
push
xor
mov
test
or
imul
int3
mov
fwait
mov
and
add
jle
mov
xor
cmp
std
inc
mov
add
cmpsb
mov
pop
cwtl
cli
adc
rcl
xor
push
mov
ficompl
lods
dec
mov
dec
rolb
inc
dec
mov
cmp
test
mov
mov
or
pop
jp
mov
sub
xchg
sub
or
mov
push
adc
int3
xor
mov
inc
in
jp
mov
aas
and
jmp
pop
xor
xor
adc
sbb
repz
mov
push
push
fwait
or
addr16
mov
and
mov
pop
sahf
and
jp
aaa
cmc
fdivr
add
sub
ret
pop
or
jg
pushf
dec
fistl
ret
andb
fnstcw
shlb
mov
inc
xchg
movsb
mov
mov
mov
sbb
and
mov
jge
xor
ret
cmp
sbb
into
and
push
pop
dec
cs
sbb
insb
push
inc
pop
xor
call
xchg
mov
jns
add
aas
std
mov
clc
or
out
cmc
sti
mov
xchg
jmp
sbb
inc
xchg
add
inc
hlt
sahf
aam
pop
mov
jp
jg
mov
jle
xor
cltd
lock
ljmp
pop
push
loopne
popf
jp
mov
dec
loope
insl
cmpsl
in
ret
test
icebp
loopne
shlb
lds
push
add
xor
jecxz
jnp
ret
int3
std
lret
lods
add
mov
push
iret
push
or
popl
dec
fidivrs
mov
jno
insl
aas
jne
jae
imul
test
xchg
sub
push
pop
sub
ror
mov
sbb
fimuls
int3
sbb
xchg
scas
int3
mov
mov
inc
inc
arpl
jecxz
dec
lret
adc
and
pop
scas
dec
inc
andl
xchg
and
jns
cwtl
fs
and
jns
push
add
test
sbb
lret
cltd
cmpsb
sub
mov
xor
clc
inc
sbb
aas
int
sub
add
lahf
and
popf
mov
xchg
mov
and
push
fs
icebp
imul
pusha
jne
shlb
sar
xor
pop
or
movsl
adc
ja
jae
push
jb
int
push
pop
ljmp
fcmovnu
or
sub
or
push
pop
xchg
in
inc
adc
adc
mov
mov
xchg
imul
call
shrl
mov
repz
cmp
popf
into
mov
cmp
pop
arpl
lods
mov
xchg
mov
mov
dec
mov
xor
adc
jle
rcrb
popa
xor
mov
insb
mov
add
aaa
xchg
in
jbe
pop
push
test
and
shrb
xor
stc
leave
cmpsb
inc
out
or
sarb
fimuls
shr
or
jne
mov
sub
sbb
sbb
lods
adc
xor
js
out
out
cmp
lods
mov
cmp
cmpsb
xchg
mov
les
fucomp
ja
and
inc
jle
int
xchg
dec
mov
sub
xchg
push
and
push
push
jo
adc
fidivl
sahf
inc
shrb
xlat
xchg
mov
inc
push
mov
adc
and
jle
test
in
fdivp
in
cmp
rorb
mov
mov
jecxz
mov
xor
repz
inc
xchg
gs
push
addr16
mov
frstor
mov
stos
hlt
inc
adc
sub
mov
clc
dec
popf
pop
mov
lret
or
pop
and
daa
notl
in
xchg
xor
ss
mov
pop
xor
mov
nop
test
aas
aas
or
push
jle
sarb
adc
sbb
push
mov
mov
pop
leave
hlt
mov
push
dec
gs
icebp
inc
pop
and
loopne
out
dec
gs
cmc
loopne
movups
add
mov
addr16
rcrl
adc
mov
push
or
dec
sbb
lret
push
bound
xchg
lds
fcomi
dec
jb
and
add
cld
add
fildl
cmpsl
mull
xlat
jecxz
popf
lds
frstor
dec
cmpsb
insl
nop
mov
outsb
sbb
cmp
hlt
ret
test
and
jno
mov
fbld
shrb
mov
push
andb
inc
shll
push
sub
mov
stos
and
push
les
out
xlat
xchg
add
fsts
enter
loopne
mov
push
dec
aad
cmpsl
mov
xor
rclb
jno
jp
sub
fwait
int3
and
xchg
add
lds
mov
inc
pop
sbb
arpl
jle
mov
sub
sti
movsl
mov
mov
adc
inc
jecxz
inc
fimull
add
pop
in
sub
and
push
aas
sub
pop
mov
or
enter
ja
addr16
fidivl
loope
cmp
cwtl
lcall
movsb
jns
daa
inc
inc
inc
fcomps
sub
mov
xchg
lcall
mov
movsl
js
pop
ljmp
std
aam
aas
xchg
nop
push
cmpsb
xor
xor
test
movsl
pop
mov
jbe
pop
out
cmp
jae
aaa
popf
mov
std
data16
in
std
aad
sbb
and
jl
cmp
mov
jno
push
shrl
xor
pop
mov
inc
dec
out
stos
mov
jo
sbbl
push
xchg
cmp
ds
js
ja
ret
or
mov
repnz
rolb
jg
jl
shr
and
ss
dec
mov
lcall
dec
push
call
ja
nop
enter
cmpl
ret
push
jbe
jecxz
fidivs
fldenv
roll
je
shrb
lcall
popl
fwait
cmp
jbe
out
inc
mov
fdivp
cmp
dec
or
repnz
loop
inc
test
movsb
test
mov
inc
movsb
into
repz
cmp
sub
xchg
shl
mov
sarb
xchg
cmpsb
sub
inc
sub
add
aas
cmp
daa
mov
fildll
push
stos
push
xor
mov
mov
adc
movsb
sbb
ja
ja
mov
adc
mov
adc
loop
out
outsl
lahf
fldl
or
pop
add
call
dec
push
sub
adc
in
ret
or
repnz
lcall
adc
dec
jge
xor
xchg
hlt
clc
or
xchg
repnz
lods
je
mov
jo
out
or
ja
test
mov
test
stos
pop
xorl
xchg
cmpsl
or
aaa
inc
mov
loopne
fistl
aad
inc
test
fnsave
scas
mov
jb
icebp
inc
adc
pop
ret
jmp
mov
cmp
dec
inc
gs
mov
lea
rclb
dec
xorb
adc
test
movsb
or
push
sub
add
cmpsb
inc
adc
in
aaa
les
inc
pop
inc
rcrl
ljmp
in
dec
push
jmp
mov
or
in
adc
inc
jp
sbb
adc
mov
lret
imulb
and
xor
out
xor
and
pop
sar
rcl
xchg
dec
xchg
inc
sbb
aam
popl
dec
push
jg
pop
ss
subb
pop
repnz
add
test
repnz
and
dec
push
imul
loopne
ret
icebp
mov
in
pop
inc
mov
inc
xor
mov
int
loopne
xchg
inc
cmp
fldcw
sub
xor
lcall
ret
outsl
pop
inc
xor
mov
cmp
sub
mov
inc
out
aad
nop
mov
add
xchg
cld
cli
add
sbb
iret
lret
rolb
xchg
popf
mov
sub
out
inc
push
fwait
sub
jl
ret
push
jb
cwtl
cmpsb
push
pop
mov
sti
fs
jns
clc
inc
daa
mov
pop
leave
pop
imul
ret
cmp
jmp
mov
mov
mov
pop
xchg
dec
push
inc
mov
mov
fcomps
push
aas
popa
and
lret
imul
ret
pop
ret
add
push
jnp
arpl
arpl
inc
aad
xor
int
jo
mov
xchg
push
sub
or
push
jae
push
add
pop
mov
xchg
popa
fiaddl
jno
mov
xchg
lods
push
sbb
dec
pop
add
sbb
test
out
mov
push
stos
movsl
pop
ret
pop
or
shrl
pop
push
push
cmp
adc
popa
movsl
imul
and
mov
mov
mov
push
imul
inc
or
outsl
xorb
inc
sti
daa
neg
mov
jbe
add
push
inc
mov
js
arpl
or
xor
iret
test
repz
mov
rcll
stc
xchg
xor
pop
filds
add
sahf
push
cwtl
out
mov
into
fsubs
sbb
jns
mov
fdivrp
fstenv
rcll
outsb
jae
mov
jbe
insb
fisttpl
lahf
sub
mov
popa
popf
cmp
pop
or
nop
aam
mov
xlat
xchg
dec
jmp
xor
xor
out
xchg
sub
mov
imul
jecxz
sbb
push
push
aam
gs
lock
cmpsl
pop
pop
int
jmp
das
imulb
mov
adc
push
xor
bnd
pop
pop
jnp
xor
sbb
mov
push
pop
jl
lahf
push
jne
push
dec
pop
pusha
andb
ja
stos
gs
cld
push
sbb
shlb
pop
insl
xchg
sub
int
push
adc
clc
call
push
aam
roll
repz
cmp
ret
jecxz
out
lahf
sub
or
pop
dec
xor
adcb
ds
int
mov
jno
in
jne
mov
mov
data16
out
pop
mov
pop
sbb
mov
xchg
jg
sbb
aam
iret
pop
ficomps
mov
xor
stc
or
stos
popf
mulb
sub
in
sbb
arpl
out
lcall
aam
insb
popa
adc
inc
add
test
mov
das
scas
int3
cmp
daa
add
or
pop
or
popf
push
enter
dec
jne
inc
xchg
mov
lods
shlb
jl
cmp
mov
femms
add
cmpsl
lods
jmp
add
cmp
call
shll
lods
addb
fistpl
fwait
pop
mov
sub
jns
push
clc
mov
ljmp
jns
pusha
or
jns
gs
cmpsl
mov
nop
rclw
bound
icebp
int
sub
fs
inc
cmp
and
rcrb
xlat
pop
jp
mov
daa
push
inc
je
fildll
decb
sbbl
cmp
leave
mov
push
inc
out
jg
mov
sahf
xor
inc
and
sub
mov
lea
test
mov
insb
push
xor
std
pop
xchg
aad
outsl
adc
jg
fs
xchg
xchg
xchg
adc
and
jmp
sbb
jmp
orl
or
in
ds
out
inc
lcall
push
mov
push
fwait
xchg
mov
loope
enter
clc
outsb
out
mov
mov
fnstenv
push
cmp
enter
call
cld
mov
lock
aaa
sub
outsb
adc
jmp
mov
mov
incb
negb
jecxz
jnp
sub
adc
cmpb
xor
pop
loope
mov
xchg
pop
mov
or
push
ja
or
adc
in
pop
dec
in
mov
cmp
mov
push
mov
mov
in
rcrl
xchg
mov
sbb
fldenv
push
add
sbb
xchg
pop
mov
adc
js
pop
jp
inc
jae
fisttpll
or
sbb
mov
aas
inc
sbb
inc
lcall
mov
jns
jo
insb
jmp
arpl
data16
test
mov
cmp
negb
loop
dec
bound
imul
fdecstp
sarl
adc
cmc
inc
mov
insl
test
lods
scas
pop
jb
nop
xchg
test
es
ja
xor
adc
imul
cltd
mov
aad
dec
pop
cmpsb
dec
in
mov
cltd
jno
xor
in
sbb
xor
mov
dec
add
jno
adc
jge
jle
loope
lods
sub
push
loopne
inc
aad
inc
xchg
outsb
mov
sahf
mov
push
mov
xchg
outsl
inc
push
leave
mov
jp
repnz
xor
jp
outsb
fldl
push
call
adc
push
inc
add
jg
sub
cmpsb
add
adc
xchg
jle
cwtl
cmp
xor
mov
sub
dec
xchg
repz
orb
nop
shl
adc
rep
adc
jp
jecxz
pop
push
jmp
cmp
fldt
stos
and
and
jno
mov
bound
pop
mov
jle
and
mov
out
js
leave
adc
icebp
rcrb
aaa
or
pushf
cmp
xor
out
cmp
pop
fnsave
ds
fnstenv
mov
xchg
lcall
lret
mov
push
sbb
rclb
xor
data16
ss
jbe
xchg
jmp
sbb
adcl
cmp
pop
ja
pusha
push
lret
xor
in
sti
popa
dec
jne
xchg
xlat
add
push
mov
scas
sahf
addr16
xchg
and
imul
jnp
out
test
inc
mov
cmp
push
lock
inc
fstps
dec
xchg
cmp
push
add
aaa
lods
stos
sbb
aad
jmp
aaa
inc
fistps
imul
mov
and
jecxz
in
xchg
aam
ljmp
jl
call
cmc
bound
sahf
call
pop
push
sub
cmc
and
jl
adc
notb
mov
pop
fistpll
outsl
add
adcb
xlat
push
dec
call
or
stos
and
in
adc
dec
lods
fs
sahf
jbe
sub
stos
dec
rclb
push
push
push
dec
sbb
mov
por
lods
mov
mov
mov
sbb
xchg
lds
cli
sbb
pop
fadd
jl
cs
push
cwtl
xchg
mov
data16
ljmp
pop
ret
adc
cmpl
icebp
fimull
popa
je
cmp
mov
mov
xchg
data16
cld
lea
loop
imul
dec
mov
ret
lcall
arpl
push
outsl
xchg
mov
lods
dec
outsb
xchg
or
inc
js
xchg
xor
mov
movsl
mov
stc
xor
insb
push
jp
bound
rcrb
popa
arpl
cmp
push
aam
insb
cwtl
adc
js
in
pop
dec
cmp
ja
or
jmp
iret
inc
mov
inc
jo
ret
sub
mov
jle
mov
jg
xlat
cmp
nop
mov
or
jno
incl
sub
cld
fcompl
data16
icebp
into
in
out
aas
push
cltd
sub
test
clc
inc
lcall
nop
xor
stc
xor
jg
aad
sub
cmc
mov
js
or
fmul
add
push
jecxz
test
ljmp
mov
cltd
aad
inc
dec
fimull
push
mov
cmp
jmp
jns
adc
shl
jae
out
mov
outsl
xchg
popa
ljmp
add
mov
scas
adc
fsts
inc
loope
pop
inc
jo
test
cmpsl
movsl
and
popf
ret
sbb
mov
outsb
jg
fimuls
and
add
fildll
sub
or
inc
imull
cld
das
jg
push
xchg
xchg
mov
add
sbb
lcall
daa
imul
imul
mov
js
fwait
out
cmp
cmpsl
push
xor
iret
ss
ja
jno,pn
ss
es
insl
push
jp
mov
jmp
lret
pop
test
mov
sub
test
je
std
lret
xor
rclb
sar
arpl
int3
hlt
test
lods
push
xchg
loope
sub
inc
lret
jne
and
pushf
mov
sbb
push
add
inc
jge
aad
out
sbb
iret
out
pushf
inc
xor
rclb
and
repnz
xchg
insl
pop
inc
mov
iret
xor
pop
mov
in
addr16
jmp
and
insb
jecxz
iret
je
cmp
leave
out
xor
and
cld
rcl
cmpsl
iret
fsubs
enter
push
addl
push
cmc
mov
dec
popf
and
shrl
push
lret
mov
dec
add
pop
retw
test
iret
enter
dec
mov
inc
or
enter
cmp
inc
xorl
sub
xor
shll
jb
outsl
pop
sbb
iret
xchg
cmpsb
in
cmpsl
jns
cmpsb
pushf
lahf
cli
cmc
loop
stos
test
lret
incl
push
jns
loop
jp
mov
arpl
sub
pop
ret
mov
in
cwtl
adc
mov
jbe
in
xchg
mov
mov
ds
sbb
cmpsl
ret
mov
cltd
jle
mov
xlat
repz
mov
rorl
adc
mov
dec
xchg
push
leave
shl
int
sbb
pop
pop
stc
lea
and
jbe
add
dec
mov
push
jl
inc
fcmovu
mov
xchg
int3
or
fistpll
sbb
incb
sbb
test
jmp
arpl
pushf
loope
or
mov
cmpsl
lods
or
out
out
scas
jb
push
pop
lahf
sub
xor
call
mov
imull
ret
jns
ret
dec
sti
movsl
pop
sbb
jg
ss
mov
fwait
adc
add
repnz
sbb
mov
clc
fbstp
loop
xor
fs
data16
cmp
add
dec
xchg
call
aaa
loope
pop
push
inc
or
push
xchg
sbb
mov
sbb
push
mov
add
cmpsb
iret
insb
mov
int3
pop
data16
out
test
push
jns
das
ret
mov
jns
adc
mov
cmc
fs
adcb
inc
repnz
out
jbe
rcr
inc
popf
pop
adc
push
and
mov
mov
lahf
call
mov
jl
in
push
xchg
divps
mov
push
lds
aam
xor
xchg
out
dec
rcl
mov
sbb
aas
aad
sbb
xor
push
inc
ret
sub
cmp
add
adc
add
mov
dec
int
call
je,pt
data16
push
jl
ss
or
sub
lret
push
mov
xlat
jns
push
fadd
out
pop
and
std
mov
or
aad
lods
stos
mov
cld
xchg
push
out
xor
cmpsl
adc
ret
or
int
jo
call
arpl
or
push
mov
cwtl
mov
arpl
scas
daa
lods
push
test
inc
jle
sti
das
dec
lret
dec
sbb
mov
pusha
dec
adc
lea
mov
adc
push
push
sub
mov
ljmp
mov
dec
cld
or
shrb
push
sub
adc
aam
fildl
lahf
cmpsb
call
adc
pop
and
xchg
mov
sub
dec
add
mov
add
movl
xchg
sbb
xchg
mov
mov
mov
or
dec
inc
scas
add
sub
sahf
out
cmpsb
ja
test
aam
aaa
enter
cmp
loope
xchg
mov
or
jns
sti
pop
xchg
aad
add
cld
outsl
pusha
sbb
bound
repz
out
mov
xchg
xlat
movsb
push
adc
mov
inc
imul
add
repz
js
cmp
sbb
xor
add
loop
lds
cmp
loop
lds
mov
out
and
negl
xchg
xor
jns
pop
sti
xor
sbb
xchg
dec
adcl
dec
int
dec
repnz
fsubl
and
dec
jmp
mov
xchg
fldt
iret
loope
adc
enter
mov
push
test
push
stos
mov
mov
stos
push
inc
enter
divb
stos
adc
add
mov
jns
xor
shll
dec
xor
shll
inc
inc
cmpsl
out
les
out
and
mov
jmp
ds
mov
xchg
and
ror
test
xchg
push
cmpsl
jg
mov
jg
mov
jg
sub
sbb
outsl
ret
sbb
insb
sub
jns
sub
mov
rep
addb
sbbb
int
push
fisubrs
call
mov
mov
je
cmpsb
les
push
mov
sbb
test
jmp
xlat
outsl
jo
arpl
mov
inc
lds
pop
in
xchg
push
or
xor
lock
fwait
mov
int3
mov
sub
shrb
mov
adc
stos
mov
repz
pop
xor
rol
mov
test
inc
in
pushf
xor
dec
cmp
inc
rol
dec
negb
jg
out
ficoms
push
push
lock
cmpsl
xor
sub
call
mov
jmp
out
xchg
dec
cmpsl
and
sbb
stc
xchg
push
push
xor
out
or
movsb
fistpll
imul
mov
sub
aam
jl
fistpll
cmpb
inc
scas
xor
mov
dec
rorl
sbb
inc
sbb
mov
neg
test
stos
adc
inc
out
leave
je
sbb
sti
dec
shl
jb
loop
pop
adc
test
rorl
mov
jp
xchg
add
push
aaa
clc
fs
pop
lods
sub
cld
mov
inc
jo
mov
jg
dec
in
inc
movsl
or
xor
push
cmpsl
inc
arpl
cltd
push
scas
lret
and
bound
jp
jnp
ret
jne
int3
fstps
push
lock
test
sbb
data16
pop
xchg
dec
in
sub
in
jmp
je
lret
dec
cmp
inc
or
jg
push
pop
dec
xchg
xor
loope
aaa
jp
sub
and
adc
lea
xchg
mov
mov
mov
lcall
and
mov
jns
in
js
adcl
rclb
adc
adc
outsb
outsl
dec
into
fstpl
in
cld
push
rcrb
mov
mov
cmp
or
ret
leave
dec
je
in
mov
sub
lods
sbb
aam
jo
adc
inc
pop
xchg
fdivrl
mov
inc
jne
cwtl
cmp
addl
out
adc
pop
and
fs
test
jns
mov
insl
movsl
mov
hlt
add
imulb
fisttps
mov
or
mov
movl
nop
test
xchg
les
mov
clc
sarl
jne
sbb
cwtl
xor
shlb
bnd
mov
ds
fs
xchg
popf
das
sbb
lea
mov
dec
and
shr
lret
jb
and
push
mov
scas
inc
mov
push
adc
test
xchg
and
jbe
pop
and
imul
jge
imulb
movsb
addr16
inc
dec
stos
mov
aaa
loopne
arpl
negb
fistps
inc
daa
adc
test
std
insl
xchg
push
adc
andl
leave
cmpsl
imul
jl
xchg
push
pop
jno
xchg
sub
adc
push
inc
mov
xchg
insb
lahf
mov
aam
inc
data16
inc
mov
add
push
mov
and
jge
adc
fcmovb
or
xchg
add
sub
mov
push
scas
mov
cs
cmp
or
repnz
daa
dec
fldenv
cs
lret
push
arpl
add
xorb
inc
dec
pushf
xor
loop
lods
rcll
aas
aaa
mov
test
push
repnz
pop
jg
int
mov
jecxz
dec
sub
push
ds
jmp
lret
sti
cmpsb
mov
aam
ficompl
mov
push
push
jle
xchg
rolb
xlat
int3
ss
jecxz
cltd
adc
aas
ja
push
out
outsb
aam
and
insl
jns
xchg
leave
mov
push
int3
loop
clc
vaddsubps
dec
and
in
xor
int
adc
loope
fwait
ret
mov
shrb
lret
push
inc
jp
repnz
js
out
div
subb
out
test
push
ror
mov
cltd
mov
sub
incl
cmpsb
dec
or
mov
adc
pop
mov
mov
mov
jns
jmp
add
stos
mov
lods
dec
sub
mov
jo
push
dec
adc
mov
incb
xchg
and
jno
mov
pop
lahf
cmp
inc
push
cmp
xchg
mov
sub
mov
sbb
cmp
adc
fdivrl
sub
and
xchg
aam
cmp
in
mov
aad
xchg
movsl
xor
jg
dec
mov
xchg
mov
mov
inc
inc
sarl
add
xor
mov
mov
pop
mov
das
rcrb
jns
jmp
pop
dec
lret
pop
inc
pop
dec
cmp
into
jae
enter
push
test
daa
sahf
inc
imul
in
orb
mov
push
inc
leave
adc
movsl
sbb
fnstenv
lcall
imulb
in
lods
std
pop
data16
movsl
lock
mov
ret
dec
adc
shlb
mov
dec
or
popa
push
inc
pop
mov
inc
dec
int3
and
xorb
mov
pop
push
out
test
adc
jno
cs
push
mov
mov
leave
xchg
mov
add
sub
int
das
xchg
test
pop
inc
lods
lahf
dec
and
out
xor
cwtl
sub
jo
fnstsw
pop
mov
pop
jno
or
add
jp
lahf
add
jge
outsl
lahf
data16
lock
jl
pop
adc
push
movsl
fmull
ljmp
and
fdivrl
sbb
pusha
loope
or
mov
dec
lods
ja,pn
test
mov
cmpsl
movsb
xor
lds
xor
pop
cs
inc
mov
xchg
jb
bound
bound
adc
inc
push
daa
sahf
repz
inc
mov
pop
pop
mov
pop
popf
out
push
dec
out
clc
mov
fs
mov
pop
aad
xchg
pop
test
je
adc
or
adc
xchg
cs
inc
lahf
imul
push
cs
push
jge
mov
iret
lret
jnp
xor
popa
out
sahf
mov
xor
lea
call
fisubrl
cs
sahf
push
int
ljmp
scas
cs
pop
push
cs
imul
dec
enter
sbb
sub
mov
mov
shlb
dec
cmpb
mov
clc
and
notl
rolb
add
imul
push
sahf
adc
std
sub
push
sbb
jns
cmpsb
jns
push
pop
mov
dec
loopne
push
es
lods
mov
pushf
fs
cmpb
pushf
test
adc
cmp
push
andl
jno
stc
loopne
in
cmpsl
cmpsb
xchg
push
aam
pop
int
stos
out
mov
mov
adc
ljmp
sbb
push
jbe
and
pop
adc
add
inc
testl
xchg
daa
cwtl
stos
or
jge
inc
pop
in
add
mov
mov
mov
mov
loope
adc
xor
or
jg
sahf
xbegin
adc
jg
mov
xor
xchg
filds
fcoms
jp
aas
or
and
fwait
in
jo
pop
dec
out
call
sub
mov
mov
xchg
push
mov
xor
push
imul
adc
into
shlb
mov
inc
lds
xchg
or
cltd
pushf
cmpsl
imul
sub
sub
or
inc
cmp
ret
cltd
imul
xor
test
push
ljmp
fs
sub
inc
mov
fists
adc
inc
pop
test
inc
pop
std
push
cmp
xchg
adc
dec
addr16
xchg
jmp
mov
lea
int3
aam
push
es
push
lods
addr16
clc
icebp
clc
mov
add
into
cmp
popa
sarb
mov
cmpsb
mov
push
mov
fnstsw
lock
mov
leave
dec
in
add
aad
test
mov
sbb
sbb
dec
sub
mov
push
dec
jae
mov
imull
adc
cmpsb
mov
pop
lahf
mov
test
and
xchg
in
loope
mov
push
sarb
shlb
mov
cmp
daa
jl
mov
add
rcrl
or
fcoms
jl
mov
pop
divb
dec
xchg
lret
inc
push
fwait
jmp
fs
data16
outsl
lea
popa
xchg
push
add
inc
test
dec
xchg
or
gs
add
loopne
insl
dec
mov
xabort
imul
mov
ljmp
scas
fucomi
in
aaa
adc
or
xchg
test
loop
arpl
insl
xor
add
adc
inc
mov
mov
test
push
mov
mov
push
jecxz
lock
scas
arpl
ljmp
pop
and
sbb
jbe
stos
push
mov
xor
cmp
jle
daa
mov
stos
push
fwait
sbb
push
mov
mov
xor
mov
imul
inc
jge
mov
das
arpl
mov
mov
xlat
test
pop
mov
mov
in
jmp
out
cs
call
addr16
mov
ss
sbb
cmp
mov
test
mov
and
lcall
push
xchg
movsl
jmp
call
les
push
add
sbb
fcomps
sub
int
adc
pusha
mov
cmp
jl
dec
xlat
sbb
out
or
imul
movsb
addr16
hlt
push
stos
mov
inc
in
lods
xchg
bound
mov
in
addr16
into
arpl
dec
adc
jae
and
icebp
in
imul
xchg
fdivrl
cltd
xchg
fstpl
and
xchg
leave
call
sub
mov
mov
fnstenv
gs
or
cmp
shrl
pop
push
gs
mov
out
pop
lods
sarl
jns
push
push
cwtl
inc
js
xchg
popf
nop
mov
scas
push
push
add
jmp
loope
and
call
cmp
or
cwtl
and
push
insb
mov
pop
push
jnp
lret
pop
xchg
lods
push
xor
clc
and
jbe
dec
xlat
jns
scas
fld
in
test
shr
xchg
mov
into
xor
add
mov
pop
push
dec
rol
stos
add
mov
cld
push
lds
hlt
sub
jl
cli
test
mov
mov
push
or
push
sub
lock
xor
sbb
test
repnz
gs
ret
mov
ja
hlt
sbb
mov
testl
inc
pusha
ret
push
add
jns
cmpsl
into
je
fs
iret
pop
push
loop
or
dec
dec
jae
sbb
leave
call
inc
ljmp
and
mov
mov
jbe
lea
cld
xchg
out
pop
add
and
mov
pop
adc
mov
or
testb
or
jge
sbb
stos
jno
push
outsl
fwait
pop
mov
sub
dec
xchg
sbb
mov
outsb
pop
std
adc
xor
cmp
push
out
push
push
jge
fcom
out
xchg
hlt
jmp
out
mov
pop
and
mov
adcl
and
bound
lcall
jmp
and
pop
test
sahf
jmp
mov
in
xor
fisubl
ljmp
mov
lock
clc
pop
inc
in
jp
adc
inc
pop
jl
and
push
shrb
or
xor
daa
es
jbe
hlt
add
or
lods
ljmp
inc
call
and
nop
std
mov
cmp
insb
popf
xlat
fwait
out
or
out
ret
out
dec
loopne
scas
cmp
add
mov
push
mov
sti
push
inc
in
sbb
mov
push
mov
sub
cltd
movsb
inc
call
pop
cmpsb
jnp
faddl
mov
and
jle
pop
fldcw
mov
mov
and
pop
and
add
movsl
dec
cld
inc
pop
xchg
lock
fisubrl
sub
loopne
in
push
cwtl
cmp
push
ljmp
lock
and
and
mov
rcll
inc
pop
xor
aas
std
cmp
imul
jecxz
push
fistpl
add
ret
mov
pop
shl
sub
and
cmpsl
fisubrs
sub
jns
and
sbb
jns
repnz
xor
aaa
div
and
jb
jecxz
mov
test
stc
mov
xchg
xlat
jbe
sub
pop
inc
fs
enter
sbb
js
arpl
mov
mov
mov
cmpsl
loope
add
and
out
cli
scas
jge
ds
mov
js
fisubl
inc
popf
add
xor
adc
xorb
xchg
adc
lea
das
hlt
aas
lods
outsb
shlb
js
es
ljmp
jnp
add
push
rcl
push
lods
pop
sub
test
or
mov
test
add
shll
push
pushf
mov
loop
add
pop
icebp
and
icebp
inc
xchg
inc
inc
imul
jmp
adc
pop
jnp
das
sub
rcrl
xchg
adc
movsl
pushf
aad
and
shrl
in
xlat
ret
xor
cmp
push
mov
roll
femms
push
or
jb
mov
data16
sbb
xchg
push
shrb
mov
xor
sbb
fisubrl
sub
shll
sti
push
lock
stc
out
lods
sbb
adc
cmpsl
sbb
mov
loop
lock
incb
sarl
mov
sub
inc
aam
jmp
outsl
push
sub
inc
sub
fmuls
inc
dec
out
fisubs
mov
jge
mov
fldenv
ss
and
shrl
daa
out
add
pop
pop
xlat
mov
jle
scas
xor
inc
mov
sbb
int3
cmc
fisttpl
jns
dec
lcall
adc
jns
ret
mov
mov
ja
mov
dec
sub
mov
mov
pusha
mov
push
push
mov
mov
lock
pop
adc
divb
adc
or
sub
or
or
frstor
push
push
sbb
movsb
pop
adc
imul
xchg
sub
lahf
int3
cmp
xchg
xor
ss
pop
inc
out
adc
xor
inc
in
ret
sahf
jg
int
jle
pop
out
in
mov
ds
xor
or
rorb
ljmp
imul
push
test
cmc
ret
push
sub
enter
and
gs
ljmp
dec
sbb
sbb
repz
pop
imul
out
dec
push
dec
mov
in
inc
inc
mov
pop
fstpt
pop
movsb
sub
push
sti
sub
xor
test
mov
xchg
shll
adc
jnp
sahf
ljmp
add
xchg
lcall
pop
data16
jge
mov
in
stos
xor
adc
inc
je
mov
xchg
cmp
negl
sub
outsl
out
xchg
sub
mov
outsl
xchg
mov
xchg
push
in
orb
fiaddl
lds
xlat
xchg
repz
mov
fistl
or
adc
test
out
andl
adc
mov
cmp
mov
push
shll
inc
xor
dec
fnstenv
xor
mov
pop
push
xor
xlat
push
mov
add
mov
sbb
or
cmp
outsl
in
test
inc
adc
cmp
test
mov
push
push
mov
cmp
bound
rolb
jg
jbe
jno
fdivr
out
dec
jg
mov
xlat
add
adc
or
imul
dec
xrelease
mov
and
popa
lods
dec
push
add
xchg
or
out
pop
sbb
and
add
cmc
shlb
cmc
mov
pop
cmp
or
je
in
sbb
add
sub
loope
pop
push
jp
jo
cli
push
fwait
add
xor
mov
mov
mov
ret
inc
jge
out
jle
or
data16
push
inc
js
sbb
test
and
lret
cmp
add
jp
adc
jae
pop
aam
add
ss
test
or
xchg
leave
dec
iret
push
in
jmp
adc
cmp
sbb
xor
jg
aam
mov
hlt
dec
add
int
xor
or
out
icebp
scas
adc
pop
push
mov
sub
sti
out
ficoms
cmp
aas
test
insl
dec
je
in
sub
adc
xchg
loopne
mov
pop
imul
mov
cmp
jae
sub
lds
xchg
mov
or
hlt
imul
aam
and
lods
inc
push
push
mov
cld
inc
imul
fldcw
dec
xor
stos
push
cltd
and
lret
ret
fwait
adc
out
pop
test
adc
mov
inc
dec
mov
xchg
movsl
aas
cltd
push
cwtl
ret
mov
pop
mov
adc
mov
sahf
aas
lods
mov
mov
pop
out
inc
push
cmp
pop
jp
mov
jg
inc
in
andb
ds
aad
stos
fldl
sub
jbe
lds
push
mov
mov
mov
lcall
in
cmpsb
aam
out
pop
scas
fnstsw
push
dec
stos
push
stc
pop
out
daa
pop
int
stos
lahf
inc
mov
scas
in
lcall
fs
inc
fisubrs
and
aaa
jnp
fsubl
adc
pop
std
repnz
stos
sub
and
out
xlat
addr16
add
into
sbb
or
cmpsb
and
lret
in
dec
ret
mov
xchg
jb
jae
cmp
sub
pushf
int3
into
nop
mov
das
enter
push
sub
mov
jmp
xor
iret
aam
out
lcall
push
in
dec
std
mov
ret
or
cltd
dec
pop
pop
std
xor
sbb
jge
aaa
hlt
rorl
mov
data16
ror
jecxz
adc
jo
sub
sbb
xorb
int3
sahf
bound
mov
fidivrl
fwait
sbb
xchg
dec
mov
adc
data16
inc
adc
push
and
aad
sub
gs
jp
mov
insl
std
push
xchg
ljmp
xor
les
push
andl
pop
xor
mov
cmp
jbe
leave
pop
sbb
aas
inc
clc
mov
pop
pop
je
test
sub
jmp
mov
mov
cmp
dec
dec
mov
xchg
pop
xor
subl
add
mov
push
xchg
aad
ret
adc
out
and
ja
cwtl
pop
dec
iret
es
or
andb
cmp
aad
call
call
daa
pop
test
cmp
push
adc
push
test
cltd
jg
addr16
out
out
aaa
mov
fdivs
adc
pcmpeqb
jne
push
sbb
mov
leave
xchg
jnp
mov
inc
pop
mov
in
fnstcw
xor
jle
or
adc
cmp
ss
xlat
mov
xchg
and
rcll
or
push
sub
repnz
mov
push
pusha
mov
jle
push
adcb
and
mov
lods
xchg
jl
dec
sub
sbbl
push
pop
fisttps
inc
inc
and
dec
mov
mov
pop
in
cmpsb
dec
push
mov
loopne
mov
fnstsw
push
imull
adc
test
xor
dec
cmp
xor
cmp
push
mov
pop
mov
push
fwait
jmp
loope
adc
mov
inc
fwait
cmp
adc
loopne
pop
loope
adc
lea
and
stc
in
ljmp
mov
pop
pop
adc
or
mov
sub
xor
mov
aam
pop
dec
hlt
ret
jnp
add
jl
je
aas
xlat
mov
repz
repnz
rcl
xchg
pusha
je
arpl
pop
aaa
push
jecxz
mov
inc
cmp
cmp
jmp
add
cmp
mov
out
ljmp
mov
cltd
out
fwait
and
adc
popa
mov
into
imul
or
fmull
inc
sbb
rolb
fldenv
or
pop
inc
pusha
lcall
fwait
in
pop
enter
shlb
adc
pop
or
loope,pt
fwait
movsb
in
cmpsb
enter
shlb
add
sbb
dec
dec
out
outsb
push
dec
les
sub
xor
cmp
inc
imul
in
jecxz
insb
adc
pop
jge
int3
mov
pop
repnz
adcl
add
push
sbb
cmpb
mov
mov
andl
pop
mov
mov
dec
mov
popa
cs
pop
mov
ja
jnp
sbb
push
popa
dec
rcrl
mov
lahf
adcb
fcmove
sbb
das
adc
movsl
sarl
lcall
mov
or
pop
mov
jno
adc
shll
or
or
and
inc
clc
pop
adc
jbe
fildll
hlt
dec
lds
das
jg
xor
lock
fiadds
sbb
dec
inc
fistpll
faddp
push
or
out
xor
ljmp
das
push
jp
mov
iret
jmp
and
inc
lcall
in
or
mov
pmaxsw
ljmp
pop
inc
mov
out
push
and
insl
add
cmp
mov
ja
lock
cmpsb
push
fs
ror
mov
fstps
xor
imul
imul
clc
mov
not
mov
add
addb
dec
jo
pop
enter
xor
or
mov
shlb
pop
icebp
xchg
add
adcb
or
inc
jnp
in
adc
push
add
test
lods
dec
imul
push
pusha
inc
call
adc
cmp
orb
mov
pusha
pop
gs
movsl
mov
cmp
cmp
outsl
pop
daa
sbb
cmpsl
sub
add
pop
mov
mov
jne
leave
or
inc
lahf
push
jb
push
xchg
jle
sbb
sub
cltd
xchg
adc
xchg
mov
jns
inc
cld
mov
xchg
cli
jecxz
sub
pop
xor
mov
subb
loop
cld
jbe
repz
ret
xchg
cwtl
pop
push
xchg
pop
add
shlb
push
push
dec
dec
xor
push
pmaxub
pop
pop
adc
xor
sub
imul
xor
shl
daa
stc
cld
cmp
adc
lahf
mov
mov
jecxz
and
or
cmp
idivb
fs
push
mov
sbb
mov
loopne
pop
add
push
hlt
mov
mov
xchg
jle
leave
dec
cli
lods
dec
push
and
test
rcrb
in
jmp
sbb
pusha
ss
adcb
sub
lock
mov
jb
outsl
insl
nop
cmpsb
jnp
or
sub
sbb
mov
scas
xchg
sahf
cltd
insb
pop
lea
mov
or
movsl
or
add
inc
mov
xor
mov
outsb
imul
fmuls
and
mov
and
int
xchg
mov
loope
enter
and
imul
lock
mov
ds
lret
push
jmp
pop
sbb
popa
adc
xchg
jb
cmp
out
jae
jg
mov
jbe
dec
repnz
lods
aas
mov
or
jae
dec
add
adc
sbb
out
push
scas
push
xor
xchg
add
enter
xchg
ds
push
pop
cmp
jne
fadds
cmp
mov
movd
xchg
cli
js
mov
mov
lods
shr
dec
sub
and
mov
popa
insb
in
or
shl
push
sub
add
cmp
arpl
js
sub
lods
jmp
pop
mov
xor
add
repnz
dec
imul
mov
jnp
pop
imul
test
pop
popf
jb
fadds
pop
cmpsb
xlat
or
lock
xchg
rcrb
stc
dec
pop
inc
xor
mov
jl
adc
andps
push
xor
sbb
xchg
fucom
sub
sbb
daa
cmpsl
and
add
mov
or
xchg
xchg
maxps
clc
cli
sarl
mov
jb
mov
xchg
cmp
push
out
ret
out
adc
mov
enter
mov
hlt
mov
xorl
xorb
fs
ds
sahf
insl
xor
loop
mov
cmp
leave
xchg
cmpsl
mov
mov
outsb
cli
adc
mov
mov
pop
flds
cmpsb
lahf
lret
cmpsb
aaa
filds
push
dec
enter
dec
out
pop
fisubs
cmc
push
pop
mov
jbe
jp
adc
adc
nop
xchg
movl
mov
or
xor
icebp
or
sub
test
xor
cmc
decl
add
out
or
inc
mov
xchg
inc
dec
into
nop
bound
es
mov
pop
jnp
dec
enter
je
mov
mov
pop
into
outsb
insl
cwtl
jno
push
mov
mov
cmp
push
daa
in
or
js
xor
pop
jle
mov
lcall
sbb
daa
in
and
dec
leave
push
sub
adc
testl
sbb
stos
or
insl
hlt
push
pushf
cmp
jb
jmp
or
xchg
fistps
mov
xor
and
iret
sbb
mov
idivb
lods
rcll
mov
push
rcrb
stos
sub
mov
stc
lds
test
sub
imul
out
jae
loop
xor
cmc
outsb
xchg
and
lock
sbb
mov
add
and
or
daa
ss
call
xor
and
enter
rcr
or
cmp
insl
inc
sbb
mov
inc
or
xchg
push
sbbl
xchg
loopne
xlat
gs
lret
out
out
jnp
test
aaa
adc
cmp
dec
out
cmp
mov
pop
push
jl
out
lret
outsb
sbb
xor
cld
fnstsw
addr16
jb
jge
icebp
jmp
fcompl
push
incl
cmpl
mov
insb
push
fs
out
pop
out
int3
scas
inc
adc
mov
xor
lods
pop
or
sbb
lahf
cmp
or
test
mov
in
aam
movsl
arpl
inc
inc
mov
push
mov
roll
sbb
in
add
mov
scas
adc
adc
stos
test
fiadds
fstpl
bsr
cmc
pop
out
mov
std
mov
xor
insl
push
push
xor
mov
inc
lods
fiadds
es
xlat
xchg
sbb
push
repnz
cmpb
mov
gs
push
mov
cmpsb
sub
inc
fisubs
clc
jmp
add
jl
or
in
in
add
fcmove
sbb
hlt
mov
or
stos
inc
cmc
stc
das
negl
aam
insb
aaa
push
mov
loope
mov
mov
testl
push
fisttps
xchg
jb
rorl
cmp
sar
and
lods
insl
push
adc
adc
mov
dec
add
je
int3
pop
push
sbb
adc
rcr
sbb
jo
mov
adc
adc
addr16
imull
shl
dec
ficompl
xchg
filds
lahf
or
mov
scas
jne
lahf
adc
xor
mov
and
outsb
outsl
jne
push
or
lret
pop
mov
cmc
inc
mov
stos
test
sub
imul
mov
push
shlb
ja
push
fidivs
sub
adc
gs
lret
add
inc
and
inc
fcoml
sub
push
push
dec
arpl
divb
jle
mov
scas
adc
cmpsb
mov
pop
xlat
or
mov
push
lds
add
mov
dec
ljmp
cld
xchg
inc
mov
add
push
inc
pop
out
mov
fs
stc
adc
rcrl
mov
dec
inc
imul
xor
fwait
add
xchg
fdivl
inc
sub
addr16
and
clc
movsb
fcmovbe
push
in
pop
xchg
arpl
add
pop
cld
testl
add
cltd
loop
cld
lea
hlt
mov
push
pop
mov
aam
dec
aam
aaa
int
ficoms
pop
gs
ficoml
idiv
inc
loop
repz
in
cmp
mov
sarl
js
repz
mov
outsl
mov
shr
pop
jnp
rolb
out
xor
insb
shll
loope
and
test
xor
pop
add
mov
or
repnz
jbe
frstor
mov
lret
or
out
cltd
das
push
out
sbb
stos
pushf
imul
insb
xchg
mov
test
mov
rcll
ret
lcall
push
enter
sub
cmp
pop
call
fwait
pop
daa
pop
cld
in
jge
inc
and
popa
push
adc
xor
lcall
or
and
sbb
sahf
lds
fucomp
out
rorl
and
pop
mov
jg
popf
aas
jle
mov
jae
insb
lret
lret
into
dec
mov
arpl
mov
nop
adc
mov
sub
out
xor
dec
dec
pop
incl
cli
out
mov
shl
testl
adcl
test
xchg
push
out
xorl
cli
bound
push
dec
fists
or
mov
jle
stc
mov
sub
push
xlat
pop
popf
test
loope
cld
mov
inc
pop
xchg
hlt
lret
mov
arpl
incl
mov
repnz
inc
fldenv
inc
hlt
pop
add
in
push
sarl
lds
loop
repnz
popa
push
mov
inc
imul
adc
push
or
stc
inc
mov
popl
sub
pop
pusha
push
add
cmpsb
xor
ret
fists
pop
outsb
mov
mov
push
or
shr
sub
fs
out
arpl
pop
xorb
ljmp
rolb
lret
adc
jle
mov
or
les
mov
mov
iret
jp
cmp
mov
lock
mov
insl
loope
or
pop
mov
stos
pop
icebp
or
pop
xchg
icebp
mov
push
mov
push
push
popa
aam
int3
add
mov
dec
lcall
sub
repz
inc
fxch
sti
pop
xor
sbb
fsubl
fwait
push
mov
int
loopne
cs
ja
mov
sbb
pop
mov
dec
int3
adcl
xor
mov
in
adc
pop
cmc
scas
nop
or
xchg
dec
mov
loopne
or
pushf
out
add
lcall
jb
mov
mov
inc
fisubs
jne
cwtl
out
ret
cmp
movsl
adc
cld
xor
adc
mov
xchg
std
jb
test
sarb
cmp
or
test
sbb
sbbb
icebp
jns
xchg
fstpt
lret
jno
dec
ja
insb
fcomip
dec
mov
ds
push
aam
xor
cmpsl
repz
xor
lods
jno
sub
mov
jns
jl
jns
das
fmuls
dec
bound
inc
inc
out
outsb
cmp
addr16
jge
jmp
add
pop
mov
enter
inc
sbb
or
movsb
mov
hlt
add
lret
mov
scas
push
adc
mov
clc
fbstp
jge
arpl
push
ja
mov
pop
or
jl
jbe
mov
xchg
in
adc
add
mov
enter
jge
movsl
dec
shl
cwtl
xchg
sub
movsb
cmpsb
add
popa
push
imul
outsl
aaa
lods
jle
sub
subb
gs
and
push
repz
or
dec
push
leave
add
in
icebp
and
pop
inc
or
es
jns
or
mov
xchg
sbb
repnz
in
mov
xchg
shrl
push
sub
pop
jl
jb
xchg
xorb
in
pop
sub
daa
and
aas
orb
jbe
sub
shrl
add
hlt
loope
scas
in
movsl
out
sub
push
sti
ja
mov
jl
test
cld
dec
mov
mov
mov
pavgb
aad
inc
bound
cmc
mov
xor
inc
aaa
mov
xchg
fidivs
mov
movsl
fdivl
fwait
mov
idivb
rep
test
test
pop
inc
movsb
jbe
cmp
cmp
mov
stc
nop
out
ss
inc
mov
push
pop
in
movsl
imul
sub
mov
lret
xor
gs
mov
inc
ja
pop
xchg
aam
add
dec
adc
test
inc
or
shll
push
lds
movsl
cltd
iret
add
mov
imull
push
jae
or
inc
insl
and
add
add
sarb
mov
test
test
dec
stc
adc
fs
dec
mov
lock
ss
popa
mov
mov
jb
movsb
xor
int
xchg
daa
fdivs
xor
fisttpll
jae
stos
stos
mov
scas
mov
jl
andb
addr16
out
or
jge
lods
xchg
cltd
sub
aad
lret
push
or
jg
insb
mull
arpl
and
jns
push
iret
imul
cmc
lods
sub
lahf
stc
lret
cmp
mov
hlt
pop
js
pushf
mov
enter
dec
adcb
stos
imul
scas
in
push
or
cld
inc
mov
test
xor
addb
jp
cmp
lds
lock
cmp
fwait
cmc
cmp
xchg
push
xchg
jbe
mov
mov
repz
adc
push
add
dec
push
pushf
movsl
cld
in
jmp
std
shll
cltd
adc
std
jmp
add
aad
test
xlat
sub
dec
roll
dec
ret
mov
out
imul
iret
xor
sbb
xchg
dec
mov
ss
jb
add
inc
adc
or
mov
xor
fiaddl
pop
aam
stc
mov
sarb
inc
dec
and
xchg
ja
sub
mov
mov
xchg
mov
mov
sbb
inc
sarb
fincstp
repnz
push
clc
roll
sub
cli
xor
cmp
inc
cmp
sub
in
inc
lods
xchg
shll
xchg
ror
push
sub
push
icebp
imul
loopne
and
or
jbe
into
inc
jbe
pushf
mov
fs
cltd
sub
inc
mov
test
lahf
mov
add
jl
jns
iret
hlt
push
mov
cmp
and
mov
or
sbbl
inc
fsubs
js
pop
cmp
test
mov
xchg
sub
idivb
cmp
mov
les
shll
fwait
out
lea
add
jbe
pop
jp
pop
aas
repnz
nop
in
les
out
xchg
imul
stos
push
lods
push
pop
pop
popf
inc
adc
push
ja
clc
lret
hlt
cld
movsl
xchg
sarb
addr16
push
in
jo
and
mov
mov
cld
pop
adc
inc
xchg
adc
jle
addb
cld
sbb
popf
into
adc
aas
leave
jle
adc
mov
xor
and
je
pop
out
mov
clc
popa
mov
arpl
pop
stc
int3
cmc
pop
movsl
fisubs
jnp
pop
sets
outsl
or
mov
daa
fldt
xor
xchg
arpl
les
ret
lret
flds
xchg
lock
mov
ret
inc
cmp
fs
sahf
inc
enter
adc
sub
mov
in
into
adc
add
das
leave
mov
das
mov
mov
rorl
pop
std
adc
jl
movsb
inc
inc
pop
dec
adc
mov
iret
outsb
sbb
push
push
ret
jno
in
int
add
xor
test
push
or
aas
lods
das
inc
lds
cli
pop
mov
sti
push
mov
pop
out
jecxz
aam
push
jg
fsubr
shl
jmp
mov
and
ljmp
leave
dec
xor
popf
pushf
xchg
sub
out
arpl
adc
sahf
hlt
stos
add
mov
pop
mov
xor
mov
mov
movsl
dec
fistps
jae
insb
add
hlt
xchg
dec
push
les
cwtl
mov
test
leave
pop
mov
jle
dec
repz
pop
int3
push
sbbb
stos
stc
mov
pushf
jle
xchg
insb
popa
in
dec
popa
std
popa
mov
dec
nop
lret
pop
mov
xchg
jl
pop
ja
add
mov
je
inc
mov
fisttps
fstl
fldenv
popa
and
popa
and
adc
or
cmp
mov
inc
stc
add
push
or
and
fnsave
sbb
int
loope
pop
je
lods
inc
loopne
dec
cmp
aam
inc
clc
test
pusha
cltd
stos
add
adc
outsb
pop
mov
in
dec
push
jge
std
mov
add
jle
sbb
aas
mov
jo
sbb
inc
hlt
enter
sbb
adc
pop
sbb
rcrb
add
lock
out
addr16
pop
jnp
xchg
add
imul
gs
inc
insl
notl
adc
pop
sub
insb
js
ds
call
aam
fs
add
sti
gs
fsts
xor
nop
pop
and
mov
push
jns
pop
ss
or
mov
add
jns
dec
push
push
dec
ss
and
add
or
sub
dec
cltd
mov
stc
hlt
movsl
mov
fisubl
aad
scas
and
xorb
dec
xchg
fldt
cmp
pop
popa
into
andnps
mov
inc
int
jmp
cli
pop
mov
icebp
mov
jae
div
lods
fs
lods
sbb
lods
xor
adc
iret
es
mov
inc
and
sbb
shrb
hlt
or
popf
fwait
push
and
ds
lods
cmp
mov
xor
mov
mov
das
and
pop
sub
cmp
mov
sub
add
push
mov
mov
add
loope
cltd
pop
clc
mov
xor
sub
in
dec
xchg
xchg
ja
scas
jne
adc
hlt
lahf
in
jb
xchg
push
jg
sbb
iret
insl
cmp
xchg
repnz
movsb
stos
mov
jno
sub
add
xchg
cmp
jmp
sbb
aad
push
sti
popa
rorb
jae
daa
add
xchg
xor
mov
inc
mov
mov
outsb
js
imul
enter
jmp
leave
lahf
dec
ret
mov
testb
insl
stc
movsl
std
add
lret
pop
mov
sub
pop
pop
bound
sbb
into
and
mov
aaa
adc
fcmovu
inc
push
and
pop
sbb
leave
iret
dec
cmpsb
xor
cld
das
cmp
dec
test
inc
or
push
sarl
adcl
xor
sbb
mov
or
add
sarb
push
lea
test
movsl
push
lahf
es
pop
test
sbb
pop
in
sbb
es
lods
je
fs
stos
and
loope
sbb
mov
aam
or
jo
sub
outsb
fcoms
je
or
jmp
out
adc
xlat
mov
scas
cltd
std
adc
xor
inc
fsqrt
ss
push
lds
mov
xchg
repnz
dec
call
outsb
rclb
xchg
iret
lret
dec
pop
cmpsl
loop
mov
xchg
sbb
out
push
andb
orb
push
ror
mov
adc
adc
mov
xchg
xor
push
mov
mulb
jb
nop
std
mov
cmp
add
sbb
cmp
aaa
push
cmpsl
sbb
int3
fwait
jg
icebp
daa
call
repnz
push
data16
xor
clc
fucomp
mov
stos
sbb
fcoml
inc
fsubrl
ds
out
mov
adc
push
int
js
push
shll
les
sbb
mov
mov
pop
test
fisubrs
cmpsl
ja
jg
das
xchg
icebp
dec
and
aad
sub
popa
add
lods
xchg
xor
cmpsb
and
add
addr16
decl
and
mov
pop
mov
pop
push
push
insl
cmpsb
repz
decb
xchg
outsl
push
fldenv
mov
xlat
pop
mov
sarb
bnd
xlat
lret
lahf
movsb
jmp
push
mov
ja
pop
xlat
scas
cmpsb
adc
lock
or
cltd
mov
jg
out
insl
inc
xchg
loope
lcall
into
jmp
push
pop
xchg
add
and
xorb
test
adc
xlat
push
dec
mov
jp
dec
insl
pop
xchg
lock
mov
mov
imul
xchg
and
out
les
fisubrs
sub
nop
jae
dec
fisubrl
inc
mov
je
mov
mov
mov
xor
xor
jbe
lods
repnz
adc
jbe
stos
xchg
xor
std
loope
jp
add
add
insb
mov
sub
cmp
mov
sbb
jp
outsb
inc
mulb
xchg
iret
lret
pop
cwtl
sbb
sbb
leave
mov
repz
add
test
push
jmp
inc
push
xorb
push
mov
xor
xor
push
xchg
sbb
addr16
pop
jo
imul
cld
iret
mov
or
je
into
sbb
mov
lret
daa
cld
xchg
dec
xor
push
ds
vcvtsi2ssl
out
mov
cmp
xor
lods
push
loopne
roll
loopw
pop
sub
lea
push
xor
mov
mov
and
sti
pop
cs
lret
arpl
mov
pop
fstpt
or
scas
loop
loopne
xor
outsl
out
dec
jno
push
mov
fadd
jle
and
push
lock
enter
mov
sub
push
subb
sbb
mov
sub
fldenv
sbb
adc
push
sbb
mov
rorl
mov
jae
rorl
mov
jp
fsubrs
rcrl
scas
jb
testb
lahf
test
xchg
imul
rorl
jp
mov
in
jg
arpl
icebp
loop
loope
pop
repz
cld
pusha
dec
gs
rorl
lret
hlt
sbb
xchg
xchg
xchg
push
push
cmp
sbb
jb
ljmp
xchg
sbb
mov
insb
ljmp
sbb
xchg
lea
push
leave
sbb
mov
sbb
mov
or
xlat
scas
ja,pn
add
dec
xor
sub
out
dec
jns
xlat
mov
stc
subb
fcomp
and
xchg
negl
mov
or
cmp
insl
mov
jle
lret
sbb
hlt
pop
lret
hlt
jnp
stos
adc
sbb
pop
add
pop
int
pop
les
inc
aas
scas
push
jg
andl
call
sub
and
in
push
jg
pop
dec
outsb
ret
pop
xor
mov
adc
dec
jbe
mov
xchg
push
popa
ficomps
mov
rcrb
js
mov
popf
cwtl
mov
add
mov
fnstenv
dec
cld
sbb
sti
and
sub
xor
mov
xchg
div
jo
adc
fbld
jno
pop
pop
mov
xor
outsl
loope
je
xchg
add
ret
inc
scas
fwait
test
push
pop
mov
iret
ja
pop
movsb
xchg
xchg
sbb
std
pop
pop
add
repz
dec
gs
push
sbb
mov
dec
test
or
test
sub
dec
imul
outsl
pop
cmc
add
xor
mov
mov
xchg
xchg
out
fbld
inc
scas
jae
jmp
das
add
dec
ljmp
push
movd
inc
cmp
loope
fcos
xor
jg
xor
adc
mov
cmp
add
and
sub
xchg
xchg
iret
push
arpl
dec
xchg
mov
sbb
sbb
cmc
mov
push
stos
mov
and
leave
dec
push
cld
mov
jecxz
cmpb
in
push
lock
lret
push
xchg
shl
bound
cmp
dec
push
mov
xchg
lock
mov
ficomps
mov
out
sbb
sbb
les
les
xor
dec
add
in
push
cs
and
sbb
pop
aam
shlb
jne
rcrb
xchg
push
xor
ret
lahf
sahf
sahf
js
arpl
push
mov
leave
pop
pop
and
dec
and
jne
leave
lea
test
fbstp
mov
mov
lock
cmpsl
iret
sub
nop
jle
cmp
add
inc
cmpsb
popf
pop
mov
mov
fnstcw
jmp
push
insb
fistpl
out
ss
in
cmp
pop
lcall
add
mov
sub
or
push
dec
jo
pushf
jb
mov
cmpsb
jno
and
adc
ss
ljmp
clc
pop
pop
lcall
add
subl
fsubrl
xor
pop
jb
repnz
mov
cmp
mov
lock
and
cmpsb
mov
iret
stc
cmp
lock
mov
ds
pop
aaa
adcl
jl
push
ror
and
lcall
lock
inc
push
fistpl
sbb
sub
add
sbb
icebp
lods
jecxz
xor
xor
sub
xchg
dec
sub
lods
addr16
and
jge
imul
sub
popf
add
adc
jl
ret
pop
sub
test
aam
test
push
inc
outsb
pop
jno
inc
ret
mov
jge
shrb
jns
sbb
nop
call
add
mov
lds
push
mov
inc
lock
push
in
mov
jbe
mov
pop
pop
push
fs
pop
jo
jmp
cltd
movsl
add
adc
lahf
pop
jns
scas
push
dec
cmpb
das
lods
test
sub
lods
movsb
sbb
ja
mov
insl
pop
adcb
dec
mov
and
jnp
fnstcw
jle
and
cld
pop
mull
lret
xchg
inc
aam
out
push
fisubs
xlat
add
mov
and
mov
aad
add
into
aaa
cmp
test
movsb
hlt
mov
das
add
mov
cmp
cmp
clc
pop
ficoml
clc
sbb
jbe
ds
ljmp
add
lods
xor
das
inc
or
inc
lret
in
push
orl
in
jo
cltd
pop
shll
dec
cmpl
popf
sub
cmp
mov
mov
out
push
std
xor
adcb
loope
fdivl
push
aam
xor
daa
fidivrl
mov
pushf
stos
dec
andl
dec
sub
dec
xchg
orl
push
stc
jp
or
ret
mov
aaa
xchg
mov
xor
dec
fnstsw
cmp
mov
sbbl
dec
pop
pop
into
adc
loopne
pop
pop
and
inc
push
mov
icebp
rolb
push
mov
mov
jmp
data16
mov
test
pop
xchg
jp
daa
cmpsb
mov
mov
and
pop
mov
cwtl
mov
or
es
pushf
pop
mov
cmp
inc
ds
sahf
cmpsb
pusha
in
jns
dec
add
insl
test
rorb
movsb
std
in
lahf
xorl
imul
sarb
ss
fsubl
outsl
cmpsb
inc
dec
sub
outsb
add
ds
inc
push
pop
ss
ret
ja
mov
xchg
iret
jge
jbe
cltd
out
or
adc
js
pop
mov
cli
cmp
and
cmp
test
add
push
iret
jnp
roll
jno
add
cmp
loop
es
mov
lcall
mov
ficoms
nop
test
jno
loopne
mov
scas
xchg
aam
dec
cmp
and
push
inc
jns
xchg
pop
xor
aas
dec
sbb
stos
js
xchg
dec
push
inc
adc
in
and
test
xorb
cwtl
rorb
push
and
dec
pusha
or
cltd
cmp
data16
popa
sbb
adc
mov
inc
rorl
aaa
mov
jle
dec
jo
jle
outsb
nop
xchg
sarl
xchg
push
mov
push
inc
cmpsl
lcall
pop
rorl
je
and
insl
jge
rcrb
ret
insl
in
xor
sahf
popf
sbb
adc
pop
inc
dec
movl
sbb
loop
dec
jbe
ljmp
and
lods
and
daa
scas
mov
dec
imul
cmp
mov
xchg
mov
dec
mov
lds
or
mov
jmp
insb
xchg
pop
cmp
dec
iret
pop
push
mov
xorl
test
sub
or
xchg
pop
cmp
aad
imul
mov
ret
sub
lods
mov
mov
and
rcl
xor
fnstcw
mov
ds
jae
mov
jge
mov
sahf
in
sbb
std
sub
paddw
fdivp
sbb
rorb
cmp
fwait
lods
push
orl
fnstcw
mov
mov
mov
int
jl
or
cltd
dec
push
scas
ficomps
test
adc
adcl
js
ficoms
insl
fwait
stc
jecxz
mov
inc
or
insl
fbld
jnp
mov
mov
push
add
lea
push
out
test
rcl
jecxz
xchg
popf
outsb
enter
lods
mov
cmpsl
and
arpl
or
popf
mov
scas
jbe
push
jmp
sbb
push
cmpsl
fwait
mov
dec
inc
mov
aam
or
xchg
fcomps
pop
pop
cltd
or
mov
sbb
aam
mov
imul
test
fcmovbe
and
jae
test
xchg
mov
insb
dec
push
jecxz
sbb
rep
es
test
pop
sbb
inc
test
sbb
jo
push
mov
int
sub
xchg
out
pop
aam
mov
jbe
call
outsl
sub
les
add
mov
and
mov
shl
pop
mov
aad
push
pop
jo
push
xchg
insl
ret
inc
or
mov
insl
aad
cmp
mov
ret
std
test
push
sub
mov
cmpsb
adc
pop
sub
dec
pop
cmpsb
outsb
push
pop
jae
and
mov
and
sub
mov
cli
shrl
ret
or
cmp
mov
push
ret
lret
mov
dec
push
mov
sub
or
shlb
push
lea
sbb
loope
shlb
mov
repnz
fisubrs
sbb
movsb
pop
ja
pop
push
fisttpl
sub
imul
pop
xor
mov
dec
ret
sub
mov
out
xor
lods
pop
mov
mov
dec
popa
enter
les
adc
arpl
ss
es
jge
dec
andl
pop
out
dec
sbb
lods
or
jbe
adc
data16
int3
lret
decl
pop
sub
mov
dec
in
fbld
std
stos
out
test
pop
mov
xlat
mov
fidivrl
mov
dec
gs
je
sbb
in
mul
lods
inc
mov
xor
cmp
cs
insl
adc
pop
jnp
add
les
and
pop
mov
sarb
in
in
std
inc
jno
or
jnp
cld
shrb
repz
in
sbb
lock
shl
xchg
loop
push
imul
mov
jge
cltd
call
lock
in
cmp
jl
orb
dec
je
aad
pop
dec
mov
test
push
push
mov
inc
out
mov
mov
mov
sahf
in
inc
or
test
cmp
add
adcl
mov
fwait
cmp
dec
jge
adc
mov
lods
test
test
andb
or
cmp
jbe
xor
imul
into
ficompl
dec
negl
addr16
cmc
and
shll
pop
into
inc
jns
push
dec
xor
mov
pop
add
es
mov
push
out
lock
fwait
hlt
fidivrl
push
popa
or
es
dec
test
xchg
int3
mov
loop
adc
cmc
rcrb
jl
lds
hlt
or
cwtl
pop
hlt
hlt
and
inc
jnp
push
cmc
or
and
movsl
adc
mov
or
out
aaa
loope
mov
lods
or
dec
mov
sbb
inc
stos
outsb
std
inc
lcall
test
shll
shll
cmc
repz
test
out
das
imull
addr16
pop
sbb
std
dec
and
jg
push
sub
out
pop
dec
lret
mov
add
mov
ss
inc
cwtl
mov
iret
inc
leave
cmp
and
ret
fisubrs
repz
inc
stc
xchg
lods
fs
jbe
ljmp
push
cmpsb
mov
addb
enter
mov
repz
shrl
and
out
lds
dec
push
lea
inc
in
cmp
and
insb
push
or
push
stos
cmp
stos
push
push
flds
rcl
jns
rclb
dec
sahf
mov
shlb
jge
mov
pop
dec
push
dec
xchg
ud2
nop
inc
dec
icebp
lahf
repnz
adcb
xchg
fmuls
pop
ss
xchg
insl
insb
jns
sti
je
out
orb
sti
jns
loope,pn
xor
loop
test
int
enter
add
scas
xchg
icebp
scas
lods
dec
push
dec
cmpl
pop
mov
popf
or
adc
stc
test
orl
xor
cmp
popa
pop
and
add
and
cmpsb
cmpsb
je
or
pop
mov
and
cmp
lahf
sbb
pop
jg
mov
xchg
in
cmpsb
loope
jno
test
fcomp
psrlw
xor
daa
sub
push
outsb
mov
loopne
scas
xor
sub
roll
fnstsw
shr
xor
or
sarl
adc
das
cmpsb
pop
cmp
stos
aam
mov
inc
daa
inc
repz
inc
mov
push
or
nop
xchg
ss
or
mov
xchg
je
mov
add
mov
lods
adc
out
cwtl
xor
fstl
jnp
push
dec
dec
adc
mov
or
fiadds
cmp
mov
aaa
push
rcll
gs
cs
out
adc
lods
mov
pop
adc
or
mov
fstps
or
js
enter
add
cmp
xor
sub
cwtl
fdivrs
mov
fldt
cmp
mov
aad
push
pop
pop
sbb
push
arpl
xchg
mov
pop
rcll
push
fstps
cmp
aam
inc
sub
fs
and
cs
push
sti
mov
add
fimuls
hlt
adc
push
sub
jne
pusha
cmp
push
mov
mov
std
into
test
add
imul
or
orl
test
mov
mov
mov
orb
add
rcrl
leave
mov
popa
xchg
test
rorb
loopne
into
xor
enter
shll
dec
cmc
cli
sub
dec
je
ret
or
nop
mov
pushf
cld
out
or
mov
jl
fwait
mov
fcmovu
je
mov
cmp
xchg
inc
shrl
into
xchg
inc
adcb
sbb
sahf
test
hlt
mov
jbe
or
nop
mov
iret
mov
arpl
or
outsb
sbb
lods
xchg
or
jno,pt
adc
inc
dec
test
sti
imul
push
shll
ss
mov
rorl
insb
xchg
out
or
jo
iret
neg
mov
mov
adc
push
insl
lahf
dec
add
pusha
pusha
pop
sahf
aad
pop
pop
and
pop
dec
stos
into
test
adc
push
jae
lock
mov
shlb
fmuls
lahf
inc
es
fisttpl
ljmp
push
lock
or
imul
sub
or
and
sbb
push
subb
push
jmp
shrl
mov
sbb
cs
lds
pop
inc
cwtl
sbb
into
fisttpll
aas
fmull
push
xor
and
and
or
xlat
dec
repz
shrl
sbb
cmp
and
mov
push
xor
ret
lods
es
rcrl
lods
mov
out
mov
repz
cmp
loopne
loop
popa
pop
in
insl
push
cltd
xchg
sahf
negl
pusha
scas
sub
adc
out
jno
out
jle
mov
adc
add
dec
inc
jg
pop
lods
subl
fldcw
push
inc
add
pushf
mov
xchg
mov
js,pn
out
xor
mov
push
dec
jb
mov
dec
mov
fsub
push
jae
out
ja
xchg
out
ja
dec
push
sbb
pop
inc
into
mov
test
in
sub
sbb
and
xchg
bound
or
in
push
jmp
add
test
push
push
into
shr
add
int3
faddl
pop
decl
or
in
test
cmp
sub
sti
xchg
divl
jecxz
jnp
mov
shlb
and
outsl
insb
repz
mov
ss
andl
aas
inc
mov
push
out
jae
scas
mov
and
repnz
jne
push
inc
pop
arpl
xchg
mov
test
mov
addr16
adcb
cmpb
popf
cmpsl
add
adc
cmp
xor
dec
cmpsb
and
popl
stos
cs
les
sub
std
cmp
xchg
xor
lcall
and
push
aaa
inc
cli
mov
xor
push
mov
and
cwtl
cmp
sub
loope
loope
bound
pop
mov
lret
pusha
pop
ret
inc
int
aad
call
mov
cwtl
nop
add
inc
push
xchg
mov
push
push
add
mov
repz
jae
stos
add
push
and
or
ret
adc
push
mov
out
call
pop
lret
es
mov
pop
push
fxch
xlat
mulb
mov
xchg
xchg
push
mov
data16
dec
sbb
sahf
lret
push
in
mov
mov
add
mov
das
push
xchg
stos
fwait
cmpsl
add
aaa
enter
xor
pop
cmp
jno
adc
inc
sub
shll
arpl
fwait
xchg
jmp
or
adc
pop
add
cmp
enter
les
cmp
lret
adc
mov
std
popl
call
sbb
fs
sub
rclb
jmp
mov
cli
sbb
xlat
pushf
sbb
into
frstor
lcall
ss
das
les
and
int
mov
sbb
jmp
mov
cmc
daa
adc
sar
or
mov
daa
inc
jno
lock
js
xchg
ret
mov
stos
clc
les
xchg
inc
std
xchg
adc
addr16
jle
dec
int3
push
sbb
in
xchg
stos
dec
hlt
shll
shrl
adc
pop
fdivl
test
xchg
push
cmpsl
les
push
stos
lods
cmp
cmp
cld
mov
divl
fsubrl
mov
pop
cmc
mov
cltd
add
js
leave
stc
xor
insb
add
pop
pusha
lods
push
imul
mov
dec
popa
sub
int
pop
and
add
sbb
pop
repnz
mov
sub
dec
movl
add
push
jo
mov
sub
push
dec
cmc
loop
test
mov
shll
fldl
call
mov
aas
in
jmp
sub
push
xor
sub
or
push
cs
pusha
enter
pop
lret
aas
pop
psubsb
in
jle
popf
or
fsts
enter
lods
pop
shlb
adc
pop
les
jle
cmp
or
mov
jae
jno
test
push
loope
dec
jecxz
jg
xchg
cmpsl
popf
push
cmpsb
jbe
mov
sub
stos
add
dec
das
fimull
jae
cld
add
ljmp
jae
mov
loope
sbbb
mov
je
push
jb
sub
cld
cmp
adc
loop
call
stc
or
xchg
rorl
mov
pop
arpl
cwtl
jl
mov
stos
fwait
jno
popa
push
sub
and
insl
aad
and
fs
mov
cmp
mov
jno
mov
jns
inc
sbb
std
cmp
es
dec
stos
xchg
cmc
bound
inc
lods
mov
mov
jno
mov
sbb
in
pusha
lds
lds
leave
cmpb
jmp
jno
mov
dec
fucomi
mov
inc
loope
mov
lcall
out
push
aas
aad
pop
jns
mov
outsb
pop
into
mov
inc
xor
stc
push
push
aam
push
jbe
stc
sbb
pushf
enter
out
xchg
mov
ja
popa
inc
popa
mov
xor
outsb
xchg
jne
jge
adc
sub
or
xchg
fnsave
nop
sbbb
out
movsl
jb
inc
mov
int3
sub
movsl
dec
daa
insl
stos
or
sbb
mov
lcall
cmp
shll
rcll
jecxz
push
lods
imul
out
or
dec
sbb
push
push
movsb
arpl
std
dec
imul
push
push
pop
mov
adc
movsb
sbb
mov
adc
add
and
adc
js
mov
fistpl
in
xchg
jg
cmp
inc
sub
sti
adc
xchg
mov
jge
and
mov
xchg
rol
call
inc
orl
outsb
lret
jns
adc
int
fldl
dec
mov
mov
daa
jle
inc
cwtl
fimuls
mov
repnz
add
push
in
data16
and
cs
inc
popf
mov
jp
outsb
leave
inc
mov
jbe
mov
push
adc
sub
inc
popa
lahf
ja
arpl
mov
push
mov
jbe,pn
dec
ficompl
sbb
test
inc
int3
gs
jne
xor
xor
mov
fldt
jno
test
loop
call
mov
jle
mov
jne
dec
mov
int3
mov
adc
push
push
mov
mov
les
cli
mov
or
out
fisttpl
jns
ljmp
xor
outsb
pushf
add
xchg
dec
incb
jns
mov
shrl
mov
inc
sub
scas
sbb
insl
daa
lcall
addl
push
adc
je
jae
out
mov
and
divl
je
ret
pop
fmull
pop
pop
not
mov
dec
stc
loop
jecxz
in
movaps
ret
clc
jo
pop
xor
dec
out
imul
cmp
dec
psrlw
pop
mov
fstpl
daa
pop
mov
shl
sbb
add
push
mov
mov
int3
scas
cli
pop
fbstp
flds
ja
jb
push
cmpb
pop
sbb
inc
mov
fldenv
and
and
dec
fcompl
and
push
jmp
push
or
mov
pop
clc
push
pop
xchg
xlat
mov
inc
xor
ljmp
mov
xor
mov
scas
call
pop
repnz
jae
inc
dec
pop
mov
xor
mov
dec
xchg
pop
fisubrs
jb
pop
ds
pop
popf
leave
and
out
adc
insl
mov
ret
das
xchg
dec
xor
sbb
push
call
js
pop
popf
fstpl
bound
shll
decl
xchg
mov
xor
bnd
xchg
rorl
inc
and
adc
out
je
mov
mov
sub
mov
enter
push
jae
movsb
or
inc
jbe
push
rolb
pop
and
bound
jnp
gs
pop
outsl
setg
fs
test
subl
mov
iret
xor
ds
int3
dec
adc
or
pop
ljmp
ret
arpl
fwait
adc
leave
out
in
push
jle
out
sub
lahf
movsl
mov
in
cwtl
push
lds
push
cs
sbb
jno
sysenter
leave
nop
loope
repnz
xchg
mov
outsl
xchg
push
ljmp
dec
add
push
pushf
pop
pushf
inc
mov
cmpsb
sub
dec
clc
in
push
das
xchg
dec
movl
mov
adc
subl
mov
dec
das
stos
xchg
iret
addr16
imul
adc
and
dec
popa
stos
pop
out
or
pop
xor
testb
test
jmp
inc
add
xor
xchg
dec
xor
leave
jmp
or
sbb
scas
sub
stos
sub
enter
test
out
out
mov
adc
sbb
lret
mov
mov
or
stos
push
fcmovnu
push
cmp
outsl
and
xlat
add
dec
sub
clc
ret
mov
in
mov
jecxz
rcrl
call
push
mov
daa
mov
out
xchg
div
jo
sti
xchg
aam
lahf
xor
jne
dec
stos
ljmp
ds
jmp
push
xor
mov
xchg
add
mov
push
pop
fbstp
jbe
pop
add
sbb
mov
aas
mov
push
sub
cmp
push
jno
sub
loopne
mov
lods
sbb
lcall
lcall
jno
sbb
push
or
or
loop
popa
adc
inc
lahf
add
ja
testb
iret
scas
pop
push
sub
repnz
rol
push
pop
mov
add
sahf
testb
adc
or
incl
jnp
jne
ret
sub
lods
xchg
sarl
lods
pop
mov
std
mov
cmp
fs
lds
or
mov
fwait
inc
sub
push
in
sub
loop
add
or
lock
and
addl
inc
stos
loope
jae
mov
dec
sub
add
cs
icebp
fmul
dec
iret
cmp
lret
mov
call
xlat
ret
sbb
outsb
mov
pop
inc
pop
fs
cld
or
lret
lret
scas
rol
pusha
int
mov
cmp
stos
jb
dec
sbb
pop
inc
int
jecxz
push
es
sbb
sub
sbb
in
sub
adc
adc
neg
xor
pushf
pop
mov
aas
jle
xchg
lods
jle
xor
aas
cmc
jmp
mov
push
rcl
mov
push
subl
ja
daa
movl
xor
repnz
or
add
push
sub
cmp
lea
cmpsb
sbb
jns
cld
add
aad
xor
pop
int3
shlb
jno
call
mov
xor
jo
and
lcall
lock
orl
mov
sub
adc
jns
stc
or
lea
clc
jbe
xor
dec
mov
bnd
negl
xchg
mov
clc
pop
jns
dec
xor
dec
jmp
mov
test
adc
mov
lcall
mov
cmp
or
icebp
cmp
test
mov
es
and
cmpsl
xor
mov
jl
adc
mov
pop
pusha
jge
and
mov
and
insl
add
inc
add
nop
inc
and
jb
div
adc
xchg
mov
loopne
pop
xor
fsubs
add
fdivl
add
push
mov
popf
adc
cmp
sbb
adc
pop
mov
test
pop
inc
mov
ud0
out
inc
andb
sub
ficomps
stos
mul
pop
mov
or
pop
dec
push
insb
pop
jmp
mov
mov
pushf
cmc
lock
push
hlt
int
mov
jle
outsl
push
pop
xchg
imul
xchg
jp
and
add
stos
mov
dec
lret
sbb
xor
in
mov
mov
jbe
fcmovnb
mov
stc
shll
in
int
lock
jne
adc
dec
pop
add
or
stos
inc
xchg
xchg
xor
pop
push
bound
xchg
out
mov
arpl
icebp
sbb
pop
lods
roll
xor
movsl
aad
repnz
rcr
jbe
jge
ret
cmp
and
imul
inc
cmpsl
push
idivb
fs
dec
ret
cmp
sbb
sub
and
or
pop
ds
cmp
sbb
and
adc
cmp
mov
xor
sbb
pop
and
push
fildll
hlt
cltd
ss
arpl
sbb
test
mov
inc
dec
out
sbb
inc
push
movsb
aas
inc
jno
xor
fistpl
adc
dec
movl
mov
mov
add
adc
push
mov
cltd
jnp
mov
cwtl
mov
mov
mov
mov
mov
or
mov
sbb
stc
fildl
jl
test
adc
out
mov
inc
insl
arpl
mov
add
cmp
inc
or
lcall
cmp
test
inc
mov
jmp
and
jo
inc
decb
shll
adc
pop
push
push
movl
sbb
sub
test
or
cmpsb
mov
dec
pop
repz
jne
in
sbb
jbe
xchg
mov
dec
shll
mov
adc
je
hlt
test
cmc
push
mov
cltd
stos
cmp
lods
stos
mov
test
xchg
adc
js
jns
cmp
icebp
rclw
sub
push
int
cld
jge
dec
repz
div
dec
pop
pop
pop
in
hlt
shrb
sub
pusha
mov
ljmp
mul
add
sub
daa
pop
mov
xchg
and
loope
mov
fwait
stc
out
imul
lea
mov
imul
cli
cmpsl
mov
add
in
sub
rclb
xor
ffree
repnz
xor
ja
push
cs
cs
push
enter
pop
repz
jb
test
adc
adc
fldcw
sub
add
pop
xlat
lds
data16
mov
mov
sub
dec
insb
test
out
lcall
add
jle
mov
sbb
ss
mov
mov
add
jns
and
add
rcrl
jb
and
lret
out
outsl
adc
fistl
mov
cs
push
aas
rcl
jae
xchg
cltd
lock
cmp
mov
push
aad
rorb
insl
test
pop
pop
or
pusha
cs
cmpsl
loop
repz
imul
adc
pop
pop
jbe
bnd
jle
pop
or
push
adc
jg
mov
inc
push
jae
jne
aaa
stc
dec
mov
cmc
xor
add
jbe
adc
xchg
adc
push
sbb
jp
mov
jns
popf
jb
mov
sub
mov
outsb
scas
stos
fmuls
or
mov
sbb
mov
mov
lahf
dec
xchg
movb
and
pop
xchg
iret
clc
fbld
sbb
inc
mov
cmp
sti
pop
lret
jns
mov
in
hlt
mov
test
inc
pushf
add
mov
cs
andl
test
imul
jo
pop
test
mov
fstpl
xchg
mov
inc
movsl
loope
sbb
jae
sbb
dec
pop
or
ljmp
test
add
outsb
roll
aam
xor
pop
cmp
push
lret
fs
aam
shll
js
fcompl
std
xchg
daa
dec
sarl
sub
or
pop
mov
inc
xor
pusha
jl
and
push
xor
jge
into
inc
inc
jp
fldenv
out
xor
jno
test
add
movsl
stc
jae
call
popa
mov
jge
cli
sub
lgs
push
or
dec
xchg
out
mov
inc
rcrl
mov
inc
cld
dec
gs
jle
out
push
or
cmp
rcrl
push
fs
outsl
pop
mov
scas
stos
xor
push
rcll
or
mov
push
ss
iret
loope
movsb
out
jbe
cli
sbb
sub
push
hlt
mov
lea
out
outsb
stc
push
fdiv
or
std
rcr
xchg
popa
repnz
sbb
mov
stc
cmp
mov
mov
sub
loop
and
mov
jmp
addb
cmp
mov
sahf
subb
dec
fldl
inc
inc
insl
out
mov
pslld
nop
cmp
push
aas
jns
shrb
add
in
cmp
out
xor
cmp
xor
fcoms
daa
stc
mov
adc
je
icebp
stos
rorl
in
inc
xchg
sbb
adc
dec
sbb
xchg
pop
jns
in
push
push
lcall
jp
hlt
fbstp
or
or
jo
pop
jle
add
pop
leave
push
loope
psubb
dec
adc
and
pop
loop
ss
hlt
adc
sbb
jnp
mov
fidivs
ljmp
xor
popf
cs
sub
aam
sbb
jne
adc
cmpsb
or
sub
inc
sar
sub
movsl
ja
xchg
subb
lahf
aam
push
adc
fldt
out
adc
cmpsl
test
push
mov
fmulp
outsb
sahf
lods
xlat
xor
orl
ret
push
cli
lret
pop
sti
movsb
adc
and
cmpsb
pop
xchg
cmp
mull
jl
pop
mov
insl
add
imul
add
in
xchg
loope
pop
pop
add
fisubs
jmp
push
or
xor
outsl
movsl
repnz
in
rcrl
mov
mov
je
daa
cwtl
jl
test
hlt
and
test
or
sbb
ret
fldl
inc
iret
jle
in
nop
mov
out
or
mov
dec
dec
daa
sbb
mov
popa
mov
mov
enter
mov
add
daa
push
sub
dec
mov
and
xchg
xlat
lods
cmp
outsl
or
das
or
inc
mov
enter
sbb
mov
pop
pusha
je
push
jo
cmp
sbb
hlt
cmp
dec
rcrb
aaa
sub
notb
loopne
mov
jae
neg
leave
xor
pop
stos
pop
fisttps
and
gs
sbb
faddp
sarl
xor
jbe
loope
cmp
pushf
dec
outsb
das
mov
rclb
or
mov
insl
mov
inc
add
mov
xchg
push
jg
daa
ret
inc
stos
test
xor
push
sbb
jp
xchg
addl
sbb
je
stos
xor
sbb
jb
stc
loopne
test
push
jg
mov
mov
jo
pop
fnsave
aas
mov
clc
mov
scas
cmpsl
mov
dec
ret
adc
ds
jne
sbb
xor
xor
fisubrs
lahf
aad
mov
mov
test
sbb
add
or
arpl
into
les
loop
and
nop
js
xchg
pushf
pop
jmp
out
jae
mov
pop
sbb
adc
push
sub
fidivrs
push
imul
pop
mov
jo
xor
add
aaa
stos
cmp
sub
xchg
movsl
cmpsl
push
cmp
mov
push
lock
insl
rcrl
xlat
add
cmp
or
dec
lea
jnp
in
cld
sub
pop
bound
xorb
adc
cmp
les
cs
js
mov
lea
mov
mov
jbe
push
adc
adc
cmp
sub
xlat
movsb
loope
pop
das
std
iret
lahf
lock
adc
cwtl
insl
pop
inc
popf
xor
mov
push
or
out
and
push
mov
sbb
inc
rcr
push
sub
dec
add
or
sub
pop
or
pop
jp
lods
daa
mov
push
dec
mov
gs
iret
adc
lretw
ljmp
lods
sub
dec
ret
pop
cmp
stos
xchg
xor
dec
inc
push
push
fs
or
jecxz
inc
cld
es
lods
xchg
test
cmp
hlt
pop
cmpsb
testl
xor
jmp
fisubl
pop
fdivrs
pushl
and
push
dec
jle
imul
jbe
cmp
idivb
fisttps
out
xor
sbb
and
into
dec
push
inc
adcl
fnstsw
aaa
in
adc
dec
sbb
bound
mov
mov
jne
xor
and
testl
test
add
loope
xchg
fs
mov
or
pop
inc
add
gs
sub
stc
sahf
sub
popf
mov
aad
xchg
addr16
add
aaa
add
scas
ss
xor
ret
shll
lea
push
jne
iret
andb
mov
or
fisubrl
hlt
jae
push
bound
add
mov
push
nop
sub
cmc
movsl
add
adc
or
xor
mov
mov
dec
stc
inc
scas
outsl
add
aaa
jns
das
orb
adc
mov
mov
mov
xorl
adc
out
jle
or
jae
lahf
jmp
and
aas
sbbb
xchg
adc
insb
xchg
rorl
lds
xchg
mov
sub
push
or
inc
pop
stos
sarl
adcb
xor
int3
addr16
loope
stc
or
testl
pop
adc
lea
nop
push
notl
ljmp
sub
out
mov
push
stos
std
sbb
icebp
shlb
push
popa
in
sub
imul
mov
and
fstl
dec
xchg
popf
out
pop
pop
mov
sbb
adc
imul
push
sub
pop
stos
cwtl
jno
insl
roll
cmp
testb
aas
cmpsb
ret
test
cmpsb
xchg
scas
loop
pop
sbb
les
scas
push
jge
mov
es
push
pusha
push
lret
adc
xor
mov
jp
test
leave
out
push
addb
jns
and
ss
mov
pop
and
pop
xchg
imul
mov
or
inc
bound
inc
ffree
mov
lock
fldl
sbb
mov
sub
adc
mov
adc
cmp
test
xchg
bound
fists
mov
dec
push
dec
mov
cld
xor
push
adcl
pop
movsl
arpl
cmpsb
sub
cmc
std
rclb
gs
push
call
sub
mov
jl
mov
lods
inc
cmp
pop
sub
lods
fimull
dec
je
push
stc
fbstp
dec
mov
mov
sub
and
mov
das
push
cmp
sub
icebp
pop
and
push
jmp
es
sarb
or
pop
cmp
mov
xchg
cmpsl
or
xchg
sti
xorl
imul
add
and
adc
push
push
sub
rcll
ds
stos
cmpsl
sub
adc
repnz
sub
in
mov
mov
notl
fsubrl
outsb
popf
adc
repnz
adcl
outsb
mov
xchg
cmpsb
add
lcall
xchg
orb
cmp
test
es
add
adc
pop
iret
cmc
lods
arpl
cli
dec
jmp
push
cmp
lds
sbb
push
pop
push
inc
adc
clc
fsts
gs
imulb
std
push
pop
sub
enter
movsb
add
add
mov
dec
sub
fisubl
xor
movsl
int3
pop
scas
dec
mov
testb
lds
lods
pop
cmp
cli
mov
dec
sti
sub
dec
pop
pop
adcb
fimuls
adc
ja
andl
mov
bound
xchg
adc
jnp
cmp
pushf
mov
pop
jbe
jb
cwtl
icebp
xor
inc
mov
aaa
sub
shl
inc
stc
ret
and
std
xor
and
push
arpl
es
inc
nop
sahf
icebp
test
hlt
scas
push
inc
mov
mov
mov
xchg
aam
jp
js
dec
adc
dec
mov
daa
shll
push
jle,pn
xchg
inc
adc
sbb
add
mov
in
adc
scas
repz
sbb
or
adc
xor
or
sbb
add
inc
and
lcall
cld
mov
sbb
lds
jnp
inc
mov
mov
jbe
lods
ja
test
jns
jmp
inc
ficoml
add
shr
mov
xchg
les
pop
subl
gs
pop
rcr
lds
mov
jg
cli
cltd
push
adc
imul
adc
cs
sub
and
fldl
loope
mov
ss
aad
icebp
decl
psrlq
pushf
ret
pop
mov
xor
int
push
std
mov
mov
jnp
aaa
and
out
push
mov
mov
pop
add
cmp
nop
adc
mov
sbb
mov
add
adc
dec
dec
int
stc
push
xor
xlat
outsl
fnstenv
stc
fisttps
leave
cmpxchg8b
int
sbbb
movsl
inc
fs
out
ja
arpl
jl
lods
lock
add
daa
clc
movsb
mov
or
in
psubw
fwait
data16
mov
dec
xchg
int
jnp
fidivs
jb
cmp
mov
sbb
es
pop
int3
imul
mov
outsb
mov
pop
ja
and
mov
fwait
jo
inc
add
push
pop
mov
pop
xchg
sub
arpl
test
pop
sbb
ja
push
or
test
std
xor
and
push
popf
rcl
push
jg
dec
xor
mov
imul
pop
jmp
test
enter
leave
in
mov
mov
popa
and
jae
inc
ret
stc
in
sbbb
das
ljmp
lret
sub
stos
data16
insl
xor
xchg
stos
mov
sbb
xor
scas
mov
mov
clc
cmpsb
pop
push
mov
inc
jl
repz
push
jmp
cmp
push
data16
cmp
pop
cmpsl
inc
sahf
mov
mov
sub
pop
into
sbbb
mov
mov
push
push
lods
pop
lcall
aad
and
pop
fisubrs
gs
mov
xor
mov
xchg
test
punpcklwd
dec
push
mov
lahf
stc
cmp
ret
subl
sar
xchg
test
mov
mov
cli
in
mov
pop
mov
push
sub
push
not
dec
std
cmpsl
les
and
lret
jno
out
sbbl
jbe
aaa
dec
ret
cmc
mov
popf
push
sub
fwait
out
syscall
enter
jne
cmp
adc
jbe
xchg
stos
sub
mov
std
sbbb
cli
iret
xor
gs
xor
daa
or
pop
mov
fmull
stc
push
frstor
out
sub
imul
mov
subps
outsb
mov
mov
mov
xor
jns
adc
in
sahf
and
jno
arpl
es
mov
sub
mov
inc
jle
ret
sahf
push
je
cmp
mov
gs
push
movsb
stos
fcomp
pop
xchg
add
inc
cmc
xor
mov
std
lods
inc
or
pop
sahf
lods
fimuls
jp
lcall
mov
int
aaa
pusha
cwtl
add
mov
jns
fnsave
lods
pop
mov
shlb
xchg
daa
jo
repz
or
sub
mov
jp
or
stc
add
stos
test
mov
push
push
push
shrl
fisttpll
icebp
inc
sar
jmp
xchg
insb
arpl
mov
add
scas
sar
mov
dec
mov
xor
ret
mov
adc
ret
inc
ret
repnz
dec
pushl
mov
stos
cmovns
or
add
mov
add
xchg
add
ret
int3
int3
inc
ja
mov
stc
imul
stc
daa
shll
jbe
sub
daa
imul
xchg
mov
adc
push
ds
lods
jl
cs
loop
push
popf
addb
jns
and
shlb
fidivl
jl
cmp
std
mov
ret
xchg
arpl
fadd
xchg
lcall
push
jne
lock
imul
in
sti
jne
rcr
orl
test
pop
mov
inc
stos
dec
xor
inc
lret
rcl
jecxz
loopne
sbb
dec
xor
and
and
mov
pop
in
cmp
mov
push
shrl
hlt
daa
lds
xor
loop
call
mov
mov
sbb
daa
xorl
in
hlt
ret
xor
arpl
pop
aas
push
push
mov
rorb
cltd
xorb
call
enter
ret
inc
shl
push
pop
adc
mov
out
and
jge
sbb
push
cmp
movsl
fiaddl
dec
sbb
ja
dec
je
ds
imul
jo
lds
bound
rclb
pop
call
mov
pop
scas
or
movsl
mov
shll
out
mov
inc
inc
xchg
or
adc
adc
jo
adc
rorb
movsl
push
lcall
inc
mov
cmp
movsl
popa
frstors
inc
lret
dec
jecxz
das
subl
pop
push
outsb
xchg
scas
cmp
pusha
lods
jp
mov
imul
testl
add
mov
push
cs
cwtl
sbb
xchg
fs
sbb
mov
jns
jae
pop
inc
repnz
dec
mov
add
mov
fstps
movsb
jp
cmp
inc
pop
jns
hlt
test
iret
sti
ret
lret
or
xor
mov
int
mov
test
mov
cld
pop
sbb
ret
inc
xchg
xlat
jb
pop
adc
adc
mov
repnz
in
outsb
inc
push
test
ss
inc
negl
and
xchg
inc
add
sub
sbb
sub
inc
add
pop
add
lods
imul
pop
subl
mov
xchg
and
add
addr16
sahf
cmpsl
jns
sub
aaa
xchg
into
xchg
or
mov
movsl
push
jecxz
push
in
or
fptan
rolb
loopne
sub
push
shlb
and
inc
and
and
stc
push
mov
mov
add
jno
fidivrl
mov
inc
cmp
lahf
leave
pop
fldt
cmp
lods
sti
cs
pop
iret
ret
popf
addb
pop
test
xlat
mov
mov
sub
add
jno
add
out
push
clc
jl
inc
pop
int3
shll
in
sbb
daa
repnz
sbbb
pop
aaa
movsb
push
mov
lcall
ljmp
dec
scas
in
cld
test
xor
cli
or
fnsave
lock
test
mov
sbb
add
in
scas
test
sbb
jno
inc
jae
js
stos
sub
lret
pop
jg
imul
arpl
or
lea
push
mov
jmp
lods
mov
call
test
xor
or
out
imul
push
daa
movl
pop
jbe,pn
loopne
dec
push
mov
lds
pusha
ds
xor
lahf
jnp
or
mov
mov
pusha
icebp
jmp
jb
pop
andl
mov
pop
pop
push
jl
add
ljmp
dec
mov
out
xchg
ja
dec
jno
test
dec
fsub
jg
repz
dec
inc
sub
add
dec
add
xor
rol
out
inc
dec
shll
push
sub
jmp
mov
cmpl
and
pushf
add
sub
mov
inc
lret
pop
or
mov
xor
add
ja
dec
int
jmp
divb
cmc
lock
je
xchg
les
mov
mov
push
lods
mov
sbb
arpl
sub
jmp
mov
dec
add
repnz
xchg
xor
movl
popf
frstor
xchg
add
sbb
pushf
shl
cmp
jl
and
test
sbb
sbb
insb
mov
push
pop
je
mov
push
xchg
lods
rclb
sbb
inc
in
xor
bnd
push
lea
inc
xchg
mov
inc
fldl
and
push
outsl
cli
sub
xor
inc
stos
sti
les
or
mov
mov
aad
daa
jae
sbb
test
cmp
inc
lret
or
sub
push
jno
loope
push
subl
stos
es
inc
push
dec
push
ss
out
lods
push
jmp
and
leave
sub
jecxz
fistpl
lret
lods
sub
decb
lcall
pop
mov
pop
jle
ret
cld
ss
ret
fidivl
test
and
or
leave
jp
sub
sub
xor
shll
aam
cwtl
pop
bound
loopne
pop
mov
jno
mov
cmpsb
aam
lods
xor
aas
pop
mov
dec
sahf
mov
in
sub
test
data16
dec
push
ret
add
or
pop
xchg
std
scas
or
pop
xchg
push
xor
add
fsub
mov
call
gs
imul
xor
cmp
inc
lret
mov
sbb
pop
repnz
ljmp
xchg
test
scas
pop
cli
mov
sub
sub
push
sbbb
gs
in
inc
xor
sbb
add
mov
fs
fcmovu
fmul
es
pop
jo
sbb
jle
mov
push
mov
push
cwtl
xchg
dec
and
jle
push
adc
jge
out
fadds
pop
push
cmpsb
xor
cmp
cmp
xchg
fcoms
lea
pop
imul
cwtl
push
sub
fistps
pushf
and
out
mov
nop
jo
stos
outsb
pushf
pop
fiadds
or
es
or
sbb
inc
cli
push
popl
xchg
cli
gs
pop
aas
andb
movsl
or
dec
adc
pop
xchg
cmp
sbb
mov
lods
mov
andl
cli
cmp
in
enter
fistpll
push
lds
cli
in
ds
or
mov
mov
dec
adc
adc
or
rcr
aam
xor
mov
lcall
es
ja
out
sbb
lcall
pop
pop
jne
xchg
push
jbe
jns
adc
mov
imul
test
rol
mov
jmp
incl
inc
scas
out
je
movsl
push
and
push
add
mov
and
loope
cmp
push
sti
cwtl
gs
xchg
xor
inc
repnz
mov
jbe
fs
pop
push
andl
lock
xchg
shl
inc
push
sqrtps
mov
out
push
out
xor
push
add
xor
das
into
pop
repz
jbe
imul
pop
das
jb
fnsave
fsubrl
bound
xor
fsubl
outsl
inc
jns
movsb
out
dec
ja
xchg
add
in
sbb
sahf
adc
negb
lea
in
in
scas
and
mov
cmp
fdivrs
inc
mov
add
stos
ret
inc
or
jne
js
pop
jle
sbb
mov
cmc
testl
into
test
sbb
sbb
or
aas
cmp
mov
daa
ffreep
or
dec
js
shrb
ljmp
mov
adc
lret
je
ljmp
mov
or
call
jne
pop
ljmp
mov
sub
add
jmp
fldcw
adc
push
pop
stc
dec
mov
pop
and
mov
lret
cwtl
mov
and
mov
adc
and
adc
lret
mov
sti
out
mov
cmp
shlb
xorl
inc
loope
pop
mov
inc
xchg
jge
or
and
jne
add
inc
movsl
shll
pop
inc
push
mov
lods
out
pop
mov
mov
imull
inc
ss
fsubr
insb
fsubl
jp
test
sub
dec
ss
shlb
mov
int3
stos
push
pop
add
push
or
dec
adc
test
dec
xor
pop
push
popf
loopne
or
orl
push
add
push
and
fisubl
sti
sbb
sbb
mov
jl
sbb
jbe
cmp
sub
or
or
stos
lods
fbld
push
or
sbb
or
jle
mov
mov
out
fdivl
imul
mov
mov
je
aaa
sub
xor
repz
or
je
and
scas
mov
cmp
sub
inc
pop
jnp
xchg
sbb
push
repz
inc
and
mov
popa
shrl
dec
lods
mov
push
push
iret
mov
and
pop
je
pop
jecxz
sbb
popa
bound
fcmovnb
lcall
rorb
adcb
jnp
das
mov
pushl
fistps
xor
push
or
fwait
enter
outsb
add
jae
int3
dec
push
jp
push
adc
stos
adc
sbb
jecxz
jecxz
mov
jo
pushf
mov
jmp
xchg
iret
dec
add
cli
popa
pop
sub
dec
sub
sub
cltd
into
insl
movsb
movsl
out
inc
aam
iret
loope
movsb
in
mov
push
xlat
jno
sub
lret
cwtl
aad
fisttpll
rcrb
xchg
cmc
outsb
cmp
fsubr
int
imul
push
mov
sub
mov
cmp
js
or
jae
dec
mov
mov
push
insb
push
push
cmpsl
je
xchg
cmp
jo
xor
test
divl
cmp
fldl
sub
icebp
inc
xchg
xor
mov
sti
pop
lahf
xchg
or
push
scas
adc
inc
sbb
adc
jp
movsb
cli
add
dec
ss
in
push
pop
rcll
mov
mov
cld
jb
fcoml
mov
loope
dec
xor
mov
in
aas
popa
dec
aaa
repnz
push
outsl
xchg
xchg
or
xchg
push
lahf
cwtl
xchg
ja
inc
jnp
xchg
jne
xchg
pop
inc
pushf
mov
push
dec
rclb
sub
xor
fwait
push
mov
inc
fadds
xor
xor
mov
movsl
jae
lods
in
and
push
fmuls
mov
xor
pop
iret
movsl
movsl
fadds
loopne
adc
ret
pop
ret
and
fsubrs
push
aaa
cmpsl
jno
call
mov
out
lea
ljmp
das
jg
mov
lods
pop
or
or
lds
iret
and
cmp
ficomps
sbb
aad
mov
inc
push
cmp
lods
add
adc
mov
pushf
pop
sub
jns
mov
fwait
lret
cmp
add
shlb
lret
cmc
pop
in
sub
inc
mov
inc
bound
jmp
idiv
or
jb
test
cwtl
es
sub
rolb
shrb
lods
cli
sub
pusha
daa
inc
sbb
and
aam
xor
pop
mov
les
mov
rolb
cmp
dec
push
jp
mulb
test
xchg
scas
xchg
loope
insb
mov
roll
mull
cmp
mov
mov
and
stos
ds
int3
or
mov
test
mov
add
and
aad
insb
push
or
push
pop
sub
ret
inc
imul
sbb
filds
lahf
push
xchg
xor
lods
test
xchg
mov
outsb
test
inc
out
lret
insl
and
jl
dec
mov
push
push
jnp
fisubs
mov
xor
frstor
push
cmpsb
dec
and
cmp
pop
and
pop
mov
cmp
jmp
cmp
fmuls
push
inc
mov
pop
cmp
fcmovne
mov
push
fdivrl
fdivrl
out
cmp
cmp
imul
fnstsw
rcrl
or
mov
mov
add
xchg
inc
xor
push
jbe
xor
test
push
xor
xor
and
add
pop
pop
out
ljmp
and
mov
xor
insl
int3
int
leave
imul
repz
xor
frstor
fisubl
add
fcoml
or
cmp
rolb
repz
int3
out
subl
mov
pop
cs
xor
pop
xor
cld
mov
mov
add
lds
mov
dec
fdivl
or
imul
mov
in
jg
xchg
in
sub
movsl
mov
and
clc
cmpsb
out
and
mov
test
icebp
and
push
fisttpl
fmuls
inc
in
adc
pushf
push
xor
stos
adc
repnz
loop
nop
mov
push
jg
les
push
ja
cmp
in
lcall
jne
fsubs
sub
sub
sti
jns
sbb
pop
lods
xor
pop
insb
in
mov
clc
xor
outsl
icebp
or
inc
cmp
push
pop
int3
xchg
xor
or
dec
sub
xchg
roll
mov
mov
adc
mov
and
mov
out
ret
xchg
mov
fxch
out
jne
js
sbb
clc
cmp
dec
mov
mov
lea
sub
xchg
push
fcomps
add
mov
adc
mov
das
adc
stos
mov
shll
dec
sbb
js
gs
xchg
bnd
jge
aam
rcrb
jns
movsb
cmc
jb
hlt
rorl
jg
dec
sbb
mov
test
repnz
pop
pop
push
sub
xlat
and
mov
push
es
mov
push
push
cmpsl
jnp
dec
or
cvtdq2ps
inc
adc
jmp
pusha
push
push
lahf
loop
out
pop
cmp
insb
pop
xchg
es
addps
lret
or
test
sbb
add
push
xchg
aad
pusha
outsl
outsl
cmpsl
enter
sbb
adc
jbe
push
pop
fwait
mov
pop
jl
insb
ljmp
into
pop
icebp
rcll
aam
jmp
jno
dec
sbbb
sti
adc
faddl
daa
pop
idiv
cwtl
cmp
jp
mov
out
push
pop
or
adc
gs
testl
loop
cmc
or
js
adc
inc
pop
lret
mov
inc
mov
pop
inc
sub
xor
pop
add
ficoms
repz
xor
outsb
lds
arpl
xchg
int
mov
cmp
cmpsb
test
nop
in
jmp
imul
fwait
cmp
ss
mov
xchg
out
jl
sbb
or
aaa
or
mov
insb
xchg
out
lods
xchg
fsubrl
mov
cmp
inc
das
mov
lock
push
lret
js
dec
imul
cmp
mov
shrb
mov
ror
mov
pushf
sbb
clc
inc
sti
test
dec
stc
les
movsl
cltd
cmp
subl
mov
xchg
push
mov
popa
xor
inc
xchg
inc
adc
sbb
scas
push
cmp
ss
lret
jbe
mov
imul
ss
pop
out
sub
in
inc
arpl
fidivrs
sub
add
xchg
repnz
rcr
nop
aam
dec
push
pop
jo
and
in
sub
xchg
pop
aad
push
lret
jae
out
iret
or
sbb
sbb
pop
scas
shrb
mov
mov
loopne
sbb
sub
lahf
xchg
sti
pop
testb
lcall
into
or
pop
lea
push
stos
push
xchg
ret
mov
push
sub
je
jb
fildl
jno
push
adc
popa
pop
dec
test
xchg
push
push
in
mov
ss
je
fistpll
mov
cmpsl
out
jl
xor
jns
call
adc
dec
test
lds
ret
mov
xchg
dec
push
cmp
jne
out
lret
or
imul
lret
sbb
call
cmp
push
call
mov
icebp
pop
push
sarl
pusha
bound
movsl
ljmp
jmp
xchg
mov
jecxz
pop
add
and
push
sar
sti
outsl
idivl
out
jecxz
lret
stos
nop
ss
jnp
sbb
xchg
pop
out
mov
in
or
sbb
push
inc
out
jmp
lods
adc
push
mov
mov
insb
sbb
aam
aam
rcrb
xor
or
sub
sbb
faddl
fsubl
pusha
sub
inc
sbb
test
jns
mov
cmp
sbb
mov
fnstsw
pushf
jo
movsb
loope
sbb
sbb
popa
lds
imul
mov
sub
jb
scas
xor
ja
lods
sarb
mov
add
insl
sub
mov
stos
inc
leave
outsl
dec
lods
jo
xchg
call
cld
shrl
sbb
int
pop
push
ffreep
and
repnz
gs
rcll
int3
gs
pop
mov
mov
aaa
mov
jns
fs
adc
sbb
jb
dec
pop
xor
pop
lcall
out
lcall
push
inc
ret
push
aaa
aam
lods
inc
add
fidivs
cld
outsl
loope
or
or
dec
insl
pop
loop
sahf
mov
mov
mov
add
aaa
lods
stc
mov
xchg
pop
sbb
xchg
ss
add
fstl
jae
jb
insl
sub
and
lahf
pop
loope
icebp
in
sbb
jg
mov
in
adcb
int
ljmp
mov
mov
arpl
repnz
stos
mov
adc
sbb
xor
xchg
mov
int
jge
roll
mov
push
add
mov
int3
sahf
pop
xor
inc
es
xchg
repnz
mov
mov
push
or
jge
mov
in
pop
stos
into
or
mov
test
jp
push
jnp
cmp
mov
xchg
jns
movsl
lock
jge
jle
ja
or
fidivrs
ret
push
push
mov
pop
mov
jbe
jmp
stos
adc
std
incl
dec
mov
mov
mov
iret
sbbb
insb
fistpl
call
mov
fnstsw
xchg
movl
std
ret
mov
add
int3
js
clc
pop
add
enter
sbb
mov
push
cmp
add
js
jle
mov
xchg
test
lods
cli
ret
lds
sti
subl
in
imul
icebp
rcrb
sahf
lret
dec
mov
rclb
adc
mov
fwait
sub
inc
xchg
arpl
in
cltd
sti
xchg
stos
aas
cwtl
in
mov
push
aaa
int
xchg
loope
lods
clc
inc
xor
fistps
dec
cmpsl
mov
scas
xor
in
jp
in
inc
in
cmpsl
add
les
push
push
push
adc
sub
sub
sbb
add
jg
adc
ss
jbe
aas
sbb
mov
cmpsb
sahf
std
imul
add
rol
xorl
std
push
scas
aaa
dec
add
xor
outsb
xor
jge
lcall
jae
pop
mov
adc
in
sub
pop
dec
inc
daa
aam
adc
mov
push
int3
adc
fisttps
adc
fdivrs
in
mov
mov
mov
mov
jb
adc
dec
das
cmpsb
dec
into
xchg
sub
sahf
aad
adc
sub
and
adc
insl
and
pusha
inc
xor
jns
pop
jl
mov
jmp
testb
mov
aas
cmp
int3
test
test
pop
pop
pop
dec
and
push
or
leave
mov
and
xor
mov
mov
testb
shlb
cmc
add
cwtl
mov
add
jp
call
jae
scas
dec
das
pop
sti
xor
dec
in
xlat
inc
dec
xchg
loopne
dec
mov
test
movsb
xor
out
loopne
sbb
mov
fucomip
enter
add
lds
pop
lds
adc
mov
addl
imul
nop
ja
icebp
rcr
roll
stc
jne
aad
sbb
inc
shll
fwait
movsl
fisttpll
daa
jo
mov
pushf
pop
push
inc
dec
sub
pop
adc
or
mov
pop
sarb
xlat
mov
mov
jo
cmp
nop
adcb
add
and
xor
lret
xchg
clc
ret
int
loopne
cltd
scas
mov
rcr
or
pop
mov
aad
jb
es
rcl
jns
sarl
or
mov
imul
pop
pop
js
and
pop
xchg
icebp
sub
imul
mov
dec
mov
xchg
sbb
es
cwtl
data16
fstp
inc
daa
stc
fwait
data16
sbb
cmp
dec
fidivrl
cs
add
testb
or
inc
mov
popa
stos
pop
xor
xor
inc
xor
jg
pop
rorb
push
insb
sbb
jno
test
ja
daa
mov
inc
sbb
add
lret
notl
scas
cmpl
jnp
loop
ljmp
aas
mov
dec
add
pusha
or
negb
divb
pop
mov
adc
lock
cmc
xchg
mov
rcl
loope
jle
fisubrl
cmp
cli
jp
dec
jmp
mov
movsl
mov
int
popa
imul
mov
loopne
cld
or
sub
xchg
and
sahf
dec
repnz
jg
andb
mov
in
orb
int
sub
inc
add
sti
cmp
push
repz
push
cmpsl
addb
hlt
ret
rclb
enter
lods
lods
sahf
pop
push
imul
sub
js
dec
fisttpll
dec
push
mov
imul
aam
xchg
in
daa
test
ret
js
jp
adc
or
add
pop
dec
jl
cltd
movsb
pop
adc
push
sub
fstpl
adc
dec
es
push
outsb
fmulp
out
sahf
popf
mov
dec
stos
pop
jle
push
cltd
mov
imul
lock
push
loope
lret
test
sub
test
mov
jns
scas
in
rcll
push
rorl
call
outsb
lcall
jge
adc
addr16
jae
pushf
lcall
mov
jecxz
cwtl
sub
mov
in
hlt
xchg
adc
xchg
pop
test
mov
dec
sbb
fcomps
cmpsl
adc
xlat
push
cwtl
sbb
stos
mov
push
mov
addr16
push
ljmp
cmp
rolb
cmp
test
nop
test
or
xchg
and
and
call
int3
mov
cmp
mov
mov
cld
in
enter
popf
int3
rolb
pop
sbb
fmulp
mov
mov
jg
inc
mov
pop
sub
cmpb
sub
lds
jno
sbb
xlat
lea
movsb
fnsave
imul
pop
cmp
add
lcall
push
xchg
xlat
cmpsb
fadd
and
and
fidivs
dec
mov
inc
add
mov
sti
mov
jbe
incb
call
mov
test
push
pop
xor
jns
imul
xlat
fstps
fsubr
stc
dec
jb
outsb
shl
pop
mov
mov
dec
ja
xchg
lea
fisubrs
sub
insl
jg
gs
cmp
in
clc
test
repz
mov
sbb
cmpsb
lahf
roll
mov
mov
cmpsl
rcrl
lahf
lea
fwait
je
or
ja
jp
jns
xchg
adc
movsl
sbb
daa
ja
inc
or
movsb
test
int
push
rorb
bound
jmp
cwtl
sub
ljmp
repz
iret
jbe
imul
stos
sbb
sub
inc
mov
test
ret
fsub
mov
dec
xchg
cmc
test
or
dec
fstl
pop
lods
outsl
ljmp
jbe
mov
dec
testl
add
xchg
sbb
cs
push
rcrl
mov
in
hlt
lcall
ret
mov
sub
cs
pushf
inc
iret
rcr
mov
arpl
pusha
cltd
stos
clc
adc
dec
enter
stos
cwtl
push
sub
imul
popf
jns
xchg
fbstp
xchg
jge
xor
adc
mov
lock
neg
test
cmp
out
mov
jle
fistps
inc
imul
mov
rcrb
xchg
aad
pop
xor
and
cmp
xchg
imul
cmc
adc
push
xchg
jno
fstl
int3
push
adc
pop
inc
dec
jecxz
jge
lret
jb
roll
imul
sub
popf
into
enter
mov
pop
xchg
mov
add
aad
inc
xchg
mov
call
inc
cmpsb
aaa
add
lea
loopne
ret
xchg
and
int
dec
push
stc
sbb
mov
jbe
cmp
sbb
in
out
cld
jnp
jb
dec
cs
mov
loop
push
dec
lock
fidivrs
in
lds
xchg
lret
sub
inc
jae
xchg
enter
pushf
sahf
dec
sbb
push
inc
lods
jg
mov
cs
cwtl
jbe
jge
dec
fildll
mov
jns
cmc
pop
test
push
sahf
aam
shlb
clc
dec
push
gs
sub
and
in
decl
cmp
xchg
loope
jmp
push
lcall
fmull
clc
mov
and
insl
xchg
iret
jmp
mov
shll
das
or
or
pop
std
jns
lcall
pop
sbb
pop
mov
cmp
mov
dec
dec
test
or
std
shll
or
insl
push
pop
ffreep
inc
aad
sbb
mov
mov
ds
into
mov
jge
xor
push
or
sub
pushf
pop
sub
jbe
bswap
jg
cli
jno
pop
fsubrl
and
jae
mov
sahf
pushf
jmp
bound
jge
int
jne
pop
out
daa
cltd
sub
and
lods
vmptrld
movsb
push
call
push
inc
icebp
mov
sbb
in
jg
sbb
stos
js
add
add
fmul
jmp
mov
cld
jp
and
insb
inc
mov
sbb
fstl
mull
mov
inc
arpl
mov
jmp
jmp
sbb
stos
push
xchg
int3
sbbb
inc
jge
adc
sti
jno
sub
fisttpl
inc
in
push
popf
inc
inc
xchg
pop
xorl
ss
das
shll
ds
and
mov
add
xlat
add
xor
sub
and
js
inc
inc
stc
insl
iret
gs
xor
add
enter
sub
es
pop
leave
pusha
cmpsl
xchg
lods
jno
add
mov
popf
imul
aam
add
loop
pop
mov
andl
mov
or
das
iret
xchg
arpl
mov
cltd
xor
aam
fiaddl
push
add
aad
in
mov
mov
jecxz
mov
cmc
enter
inc
test
jecxz
std
push
sbb
and
in
test
pushf
xchg
sub
insb
jecxz
or
cmpb
repz
call
adc
jb,pn
pop
pop
mov
pop
pop
sub
cmpsl
ucomiss
cld
dec
adc
das
cmp
int
ficompl
lret
test
dec
mov
sbb
jle
out
fxtract
ret
lret
aaa
iret
xchg
rol
add
arpl
cmpb
in
ss
or
gs
imul
push
insb
jmp
sbb
loopne
lods
frstor
push
out
clc
scas
nop
sbb
xchg
out
mov
jmp
push
sbb
mov
aaa
mov
xchg
pop
add
mov
lods
push
xor
rclb
xchg
rolb
icebp
dec
jo
arpl
mov
cmpsb
sub
daa
in
cmp
dec
call
adc
cmc
push
xor
or
dec
gs
lahf
ret
mov
cmpsl
fwait
push
inc
ljmp
mov
fs
imul
sbb
sbb
mov
lods
insl
add
outsb
sub
mov
pop
movsb
cmc
fldt
rolb
mov
test
out
dec
add
mov
sub
out
or
sahf
and
push
ret
data16
sti
inc
mov
lock
mov
into
adc
add
add
pop
cmp
data16
cmp
mov
dec
sbb
mov
jecxz
jae
jne
lods
jl
sub
mov
mov
iret
int3
adcb
mov
scas
faddl
sbb
scas
neg
mov
cwtl
sahf
push
jmp
imul
in
xchg
jecxz
outsb
out
push
pop
xor
jmp
inc
aas
popa
xor
pop
cmp
or
fdivrs
add
cmpsl
imul
pop
fnstsw
xor
push
pop
test
ret
shll
push
pop
hlt
daa
dec
popa
add
add
repz
lock
lock
arpl
fs
adc
push
xchg
int
xor
pusha
call
inc
pop
push
dec
xor
hlt
pop
lea
pop
pop
dec
ljmp
xorps
fistl
mov
ja
test
mov
fs
inc
test
pop
pop
jb
or
out
xchg
jno
sbb
stos
xor
vpunpcklbw
je
addr16
fs
mov
icebp
push
lret
xchg
xchg
arpl
aas
jge
inc
nop
push
arpl
adc
sub
data16
mov
fildll
pop
sbb
sub
stc
or
movsb
add
inc
cmpsl
inc
fildl
repz
cmpsb
mov
mov
lock
scas
mov
jbe
add
mov
adc
dec
jnp
outsb
aam
mov
imul
dec
pop
or
sbb
cmpsl
mov
repnz
mov
jge
cmp
lcall
shr
xchg
xchg
test
jnp
and
call
add
and
jns
test
xchg
or
std
pop
loop
out
movsb
jo
push
pop
jp
jge
stos
mov
dec
pusha
out
and
int3
jo
add
cmp
and
jbe
shlb
and
inc
push
xchg
mov
arpl
dec
lahf
in
les
fmuls
rcr
sahf
cltd
mov
xchg
cmp
dec
push
shrl
or
xchg
repnz
mov
mov
inc
xchg
stos
sarl
jno
sub
mov
mov
dec
rcr
pop
jecxz
scas
push
outsl
rclb
cmp
in
push
int3
cmc
adc
iret
mov
push
mov
pop
mov
out
and
inc
jne
jns
xchg
hlt
rorb
je
scas
mov
loope
xor
andl
repz
mov
dec
mov
push
scas
test
pop
inc
dec
xor
or
sub
mov
rcll
inc
cmpsl
aas
dec
lea
clc
ret
lds
xchg
jo
mov
test
arpl
sbb
or
push
dec
stc
loope
lea
mov
xchg
loopne
leave
cmp
pop
cmp
xor
rcll
shrl
push
mov
dec
in
cmp
sbb
je
cmp
addr16
sbb
mov
insl
sti
and
subb
xchg
imul
mov
sahf
mov
inc
int3
cmp
fistps
jecxz
shl
into
lcall
inc
jb
rorb
adc
lahf
pop
fwait
xchg
movsl
movb
lret
fsubl
lret
mov
add
add
bound
aad
push
mov
out
mov
aam
sbb
pop
jecxz
inc
lods
push
inc
pop
int
mov
dec
popa
jl
sub
mov
aas
xor
ficoml
xlat
push
xchg
into
cmpsl
and
adc
shll
push
fidivs
popf
cli
mov
repz
pop
dec
pushf
sub
xchg
adc
ds
pop
scas
pop
aam
outsb
and
stos
cmpsb
sub
xchg
inc
lea
jae
sub
mov
dec
cmp
test
mov
ret
inc
push
jge
lret
insb
cltd
fnstcw
xchg
loopne
scas
cld
jno
aaa
das
add
das
and
pop
ror
in
decl
jo
or
push
and
cmp
aad
scas
cltd
mov
and
test
sbb
fildl
stos
cli
add
xchg
shlb
add
push
cld
inc
jmp
shlb
lds
sbb
lea
lock
jmp
adc
push
pop
xlat
and
dec
pop
push
sub
adc
inc
rorb
inc
jg
sbb
cmc
repnz
insb
outsl
xchg
das
cld
pop
stc
je
outsb
fdivr
xor
mov
arpl
pop
cmc
mov
repz
push
or
sbb
cmpsb
popl
adc
push
fs
pop
ds
outsl
jp
sub
lret
add
push
jb
mov
xchg
push
dec
or
adc
or
rorl
mov
add
cltd
shl
int
push
in
sahf
and
mov
jle
lock
out
fcomps
xchg
xchg
mov
arpl
sub
push
lock
hlt
pop
ret
xchg
ret
xchg
pop
cld
xor
aaa
mov
jp
adc
xlat
aam
dec
inc
mov
mov
xchg
push
in
cli
jb
enter
xchg
imul
stc
imul
pop
lds
shlb
mov
dec
jp
mov
jae
xor
jns
fwait
mov
inc
mov
push
jbe
lea
cltd
add
and
and
repnz
pop
enter
cmpsl
push
popa
pusha
xchg
movsl
xchg
pop
shll
mov
fistl
lods
mov
adc
pop
imul
xchg
push
push
call
push
adc
push
or
fiaddl
lods
cmp
adc
inc
jbe
outsl
jg
push
out
or
out
mov
in
cmpsl
add
pop
dec
cmpsb
sub
out
sub
out
or
out
test
xchg
jns
pop
xchg
test
mov
mov
add
shrl
lds
cmpsb
ret
jecxz
scas
test
lret
dec
daa
jnp
lret
push
insl
nop
rcr
lret
xor
movl
or
outsb
xchg
into
std
das
mov
and
lret
mov
mov
addr16
lods
stc
lods
loop
dec
xor
adc
jb
ficoml
aaa
pop
jo
or
pop
xlat
mov
sub
arpl
add
add
out
loop
and
sbb
stc
sbb
cld
pop
data16
adc
add
xchg
dec
stos
inc
pop
int3
jae
adc
xchg
sbb
bound
jge
and
enter
push
dec
add
rolb
adc
ljmp
ds
testl
push
aad
gs
lcall
push
fnstsw
sub
lret
movsb
xchg
sti
or
into
notl
xchg
mov
mov
and
jnp
roll
pop
cmp
shlb
das
aas
ret
icebp
jne
int3
je
push
enter
or
add
daa
cmp
jp
pop
mov
mov
loop
push
mov
dec
cmp
or
ret
mov
or
fnclex
dec
jl
mov
ret
das
push
xor
cmp
in
jecxz
pop
sub
clc
bound
loopne
adc
bsr
and
daa
pop
mov
cwtl
test
std
in
cmpb
push
popf
pop
push
xchg
mov
inc
add
mov
bound
and
inc
or
pop
hlt
push
or
xor
ljmp
or
push
or
fisttps
fnsave
and
jae
xchg
push
mov
push
and
adc
jg
mov
fildl
fdivp
cltd
jle
mov
or
add
cmc
imul
push
fwait
push
cwtl
xor
jbe
and
popf
xor
imul
sub
jp
adc
aaa
ret
fnstenv
adc
ficoml
sub
fwait
scas
aaa
fsubrl
popf
iret
and
or
inc
clc
inc
xor
shlb
aam
inc
mov
bound
in
in
insl
jne
pop
xchg
push
clc
outsl
xchg
cmp
rcrb
cmp
jno
xor
cmpsb
js
or
lock
push
cmp
mov
jnp
adc
add
mov
pop
xor
dec
fadd
xchg
push
or
dec
insl
cld
cmpsb
sub
jp
jne
xor
lods
pop
scas
push
ss
addl
xchg
pop
cmp
pop
adc
scas
sub
mov
sub
cmp
ja
mov
lea
mov
paddd
adc
cmp
pusha
mov
in
or
aad
or
push
jge
sti
fdivs
test
push
sub
mov
iret
mov
mov
dec
xchg
fcoms
andl
scas
and
jmp
jp
xor
mov
push
mov
imul
out
test
pusha
sbbl
push
cmpsl
dec
not
cmp
inc
pop
insb
mov
jns
fidivrs
jo
push
pop
or
cwtl
push
mov
loope
mov
arpl
leave
ja
inc
fsub
jecxz
mov
mov
shl
jb
ss
jo
fmull
pusha
xchg
dec
pop
dec
ss
clc
testb
pushf
cs
stos
notb
fistps
fsubl
mov
into
sbb
adc
mov
orb
in
mov
sbb
rclb
adc
dec
inc
jae
bound
or
or
ds
ret
sar
push
adc
mov
mov
sbb
mov
xor
mov
sbb
mov
sbb
cmp
bnd
sahf
cli
hlt
popa
pop
push
push
repnz
fwait
in
aam
pop
scas
or
inc
out
ret
test
shl
pushf
rorl
push
jle
lcall
add
mov
dec
std
or
in
nop
stc
dec
psadbw
push
repnz
mov
jnp
call
shrl
in
loopne
in
sarl
inc
stc
pop
in
test
xchg
rcll
movsb
jmp
dec
mov
xchg
repnz
cli
ds
mov
push
mov
inc
inc
xchg
pop
mov
and
cmpb
xchg
add
xor
add
pushl
andb
mov
pushf
mov
or
stc
or
xor
lret
ret
in
and
shlb
out
push
mov
or
mov
jo
js
mov
inc
mov
faddp
sbb
fisttpll
out
cmp
dec
mov
sub
pop
stos
jno
loope
cmc
fwait
movsl
fstpt
and
sarb
fsubl
mov
xor
sbb
xchg
lret
inc
fs
adc
push
xchg
ret
outsl
insb
add
adc
mov
inc
jle
insl
lods
call
sbb
adc
inc
mov
out
stos
les
insb
test
fwait
outsl
add
je
ret
push
test
test
mov
iret
dec
dec
rcrb
jns
push
mov
or
push
cld
mov
fiadds
pusha
outsb
and
sub
arpl
pop
dec
insl
mov
pop
loopw
dec
int
fimuls
jb
mov
stc
cmp
or
xor
icebp
mov
xchg
loope
pop
fimull
sbb
sbb
push
pop
adc
sub
shll
imul
or
fsubp
ret
jno
into
adc
das
int3
mov
dec
mov
les
mov
aad
push
jp
cmpsb
hlt
shlb
pop
pop
clc
mov
and
dec
aas
jg
jmp
in
add
jae
pop
push
cld
rorl
lods
pop
push
jnp
mov
cli
inc
jp
lds
or
push
mov
insl
or
sbb
lea
and
mov
and
jb
cltd
and
add
dec
xorl
push
test
ret
in
stos
cmpsl
add
fadds
sti
in
testl
mov
lret
dec
mov
add
push
and
neg
sbb
xor
pop
call
push
sub
leave
adc
lea
rcr
popa
sarb
xor
inc
and
movsb
popa
xor
push
xor
dec
ror
sarl
ret
testb
bound
xchg
ret
mov
and
data16
lcall
pop
push
out
mov
xchg
out
mov
ret
cmp
pop
or
add
ja
mulb
testb
jle
or
cmp
pop
insl
mov
or
out
bound
jmp
push
imul
lds
rclb
loop
rcrb
mov
mov
mov
out
mov
ljmp
clc
push
hlt
xchg
pop
jl
icebp
fcmovnb
cmp
sub
xchg
jle
sub
mov
stos
pushf
rolb
xor
sbb
or
scas
loopne
outsb
pop
daa
insl
dec
pushf
hlt
xlat
out
in
pushl
jge
lods
adc
imul
dec
std
or
cs
out
test
sub
sub
xchg
fwait
shl
mov
mov
mov
mov
mov
sti
and
push
xchg
or
sbb
adc
lods
sahf
xorl
push
imul
xor
sbb
adc
out
or
jg
mov
seta
pusha
lods
je
jb
mov
lcall
int
ss
xchg
inc
jo
loope
insb
xacquire
ss
stos
lahf
into
mov
adc
ljmp
mov
shll
and
pop
gs
int3
mov
xor
movsl
cmp
out
mov
cwtl
fildll
push
add
pop
inc
add
mov
lcall
lret
sbb
cmc
testb
inc
pop
ror
pop
dec
jo
cmc
push
xchg
or
push
addl
lret
imul
popa
xor
js
pop
jne
rcrl
icebp
cld
sub
ror
lea
pop
or
and
jne
sub
repnz
and
fwait
pop
xchg
movl
push
pop
mov
loope
aaa
sbb
add
dec
mov
jmp
js
or
mov
cmpsb
call
push
enter
cmc
movsb
adc
aaa
jns
cld
hlt
adc
sbb
or
and
add
lods
or
pop
add
jge
mov
orb
xor
add
mov
test
sahf
dec
decl
fcomp
inc
pushf
leave
stos
ljmp
fimull
jle
dec
std
cmp
inc
pop
inc
fmul
push
push
sbb
dec
adc
push
dec
flds
xchg
and
dec
jg
out
push
dec
test
jmp
jo
dec
jmp
stos
adc
mov
pop
cli
js
dec
arpl
rorl
fbstp
dec
pop
test
insb
add
jmp
int3
mov
stc
lea
je
addb
pop
loopne
mov
dec
lret
test
fisubrl
lds
add
pop
shrl
dec
mov
add
xchg
aam
mov
or
sub
push
mov
lods
out
sub
mov
loopne
in
lock
sbb
sub
cs
cwtl
push
test
test
test
push
push
cmp
cmp
pop
inc
push
inc
imul
cmp
pop
cld
push
aam
pop
mov
inc
dec
ja
jmp
sub
into
in
sbb
inc
mov
sub
jb
add
pop
jne
bound
das
hlt
decb
push
addr16
xor
inc
mov
push
dec
xor
iret
or
jnp
jge
mov
jb
iret
les
jl
pop
mov
xor
or
das
inc
sbb
xchg
pop
cmp
ja
or
mov
int3
sahf
movsl
frstor
sti
daa
test
push
lret
mov
mov
jg
adcb
xchg
test
dec
lock
sbb
or
dec
rcl
push
pop
add
sti
das
stos
cmp
sarl
push
stos
jno
test
cli
sbb
push
test
sarb
lahf
dec
rcll
cmpsl
fcoms
dec
jmp
aam
push
xor
imul
popa
and
iret
and
lret
push
xchg
icebp
lods
inc
jo
cli
push
mov
jl
add
out
psubw
cld
mov
fwait
lret
or
adc
fidivl
mov
lret
and
mov
clc
mov
outsl
mov
movsb
and
xor
mov
inc
push
ss
mov
ja
fisubrl
mov
mov
pop
loop
inc
xor
add
sub
in
mov
jmp
es
in
or
push
test
xor
dec
cmp
call
push
xlat
inc
add
adc
adc
test
lahf
xchg
loopne
dec
mov
mov
and
ss
inc
into
scas
push
inc
mov
and
icebp
sbb
pusha
xor
daa
daa
ret
ljmp
xlat
push
scas
push
inc
sbb
in
sbb
fcmovbe
sbb
pop
fstpl
clc
aaa
jns
popl
fwait
arpl
rcr
shrl
nop
sbb
jmp
xchg
xor
dec
push
fs
adc
loopne
shlb
lcall
pusha
push
lock
ret
iret
add
xchg
fucomp
in
lock
mov
cmp
dec
sub
loop
jle
rorl
jmp
into
iret
addr16
loop
or
adc
ds
fcomps
xlat
cltd
push
push
lret
lds
repz
mov
mov
jbe
inc
data16
ret
aaa
addl
add
out
fwait
jle
mov
add
out
fs
scas
insl
mov
lods
stc
mov
add
and
repz
jmp
jp
and
ljmp
mov
into
push
mov
fidivrl
outsl
inc
xchg
ds
mov
ficoml
add
adc
scas
adc
data16
cwtl
or
stos
repz
rcrl
sbb
fs
aaa
add
mov
fcompl
mov
mov
jbe
mov
dec
dec
push
cld
faddl
or
pusha
and
pop
lea
mov
cmp
ds
fldt
imul
pushf
inc
inc
repnz
mov
sub
pushf
cmp
mov
sub
pusha
and
add
lea
dec
mov
les
pop
adc
add
mov
orb
aad
incl
sbb
test
loope
mov
scas
fs
push
jns
jp
lods
ret
dec
add
mov
bound
pop
dec
push
dec
push
fimull
jb
adcl
ret
stos
sbb
jne
pop
adc
push
jge
loop
cmp
pop
cmpb
sbb
sbb
popf
sub
das
bnd
sbb
dec
pop
dec
js
dec
aad
loopne
rolb
xor
ja
pop
cmp
mov
mov
jp
int
and
cmp
dec
sub
xor
pop
mov
push
or
pop
subl
push
add
sub
js
scas
in
add
inc
jne
jb
ret
mov
test
jmp
sub
push
in
dec
xchg
cmpsb
ss
dec
ror
inc
mov
xor
lret
lcall
push
mov
fistl
push
and
cmp
lods
inc
mov
push
repz
or
push
mov
jae
sbb
cmp
mov
out
pop
out
rclb
lods
push
pop
jbe
sub
mov
mov
in
lods
test
xor
das
mov
mov
xor
sub
xor
test
pop
cli
popf
popa
push
adc
addb
or
or
and
mov
adc
in
xor
inc
cmp
and
lods
faddp
mov
mov
mov
dec
sbb
out
test
cld
daa
push
pcmpgtb
mov
inc
sub
mov
sbb
cmp
fmul
add
out
mov
jle
inc
pop
mov
ficomps
sub
sbb
push
sahf
pushfw
fucomi
xchg
cmp
cmp
mov
dec
cwtl
lods
pop
dec
mov
and
jle
in
addr16
cmpsb
inc
and
jnp
mov
mov
push
loopne
sahf
push
dec
fistpll
jge
popf
sub
cmpsb
imull
out
out
sbb
in
push
int
inc
push
jnp
xor
push
pushf
dec
jmp
stos
push
clc
xor
xchg
jle
std
cmpsl
jmp
loope
and
mov
stos
ds
movsl
sbb
nop
aam
das
cwtl
in
call
movsb
jne
pop
and
inc
les
push
imul
push
mov
pop
or
arpl
nop
std
push
dec
test
sub
test
insb
mov
xchg
lret
and
add
je
out
mov
cmp
pushf
add
jne
in
cmp
mov
jnp
mov
jle
jl
push
sti
ljmp
jecxz
pop
fcomps
std
divb
test
or
xor
das
mov
add
icebp
mov
or
inc
cmp
out
sub
in
int
sub
and
xchg
mov
iret
out
pusha
ret
pmuludq
out
jo
fwait
scas
mov
out
lret
sbb
xor
into
mov
push
cltd
adc
fiaddl
pop
xchg
xor
or
xchg
xor
jo
mov
popf
xchg
in
mov
or
leave
and
enter
cmp
outsb
pusha
push
icebp
les
leave
adc
dec
dec
sub
lret
push
inc
add
roll
cmc
mov
shrb
jl
in
mov
xor
cmpsl
cld
js
jle
shl
push
push
ja
xchg
dec
fcom
inc
inc
pop
mov
push
mov
in
adcl
fidivs
cmp
cmpsl
pop
sub
in
decl
mov
loopne
xor
lahf
ret
inc
lock
xchg
push
aad
call
pop
lods
mov
sbb
fisubl
rclb
cmp
lcall
out
fldenv
pop
mov
movsb
sub
test
gs
repz
mov
xchg
or
popf
sbb
jl
sub
loopne
xlat
and
mov
inc
pop
ds
adc
lcall
push
adc
sbb
add
lock
movsb
in
outsb
subb
push
bound
loopne
gs
std
jle
or
inc
ret
xchg
in
fsts
jle
and
jp
xchg
std
std
es
pop
push
dec
jb
aad
add
xor
cltd
in
pusha
mov
and
imul
fsubs
aas
xchg
or
pusha
lods
dec
pushf
mov
xchg
xchg
lret
out
mov
out
add
xor
mov
and
jecxz
insb
out
ja
movsb
and
jp
popf
lds
gs
pop
int3
dec
das
and
test
ljmp
jae
popw
xor
push
push
sbb
mov
sub
out
addb
jmp
lahf
push
and
dec
lods
scas
cmp
in
push
mov
pop
inc
xchg
xlat
addr16
stos
cli
test
inc
dec
iret
mov
lock
lods
pop
arpl
insl
fprem
adc
xchg
cmpsb
in
loop
cmpl
clc
ret
das
bound
push
add
insb
mov
sub
xchg
dec
mov
sahf
andb
cltd
dec
sbb
rorl
pop
or
iret
lcall
mov
xor
gs
aas
das
cmp
cmp
ljmp
pusha
es
xchg
ds
mov
jo
cmp
into
mov
jp
xor
cmp
and
ja
subb
push
or
je
in
fmull
insl
fsubs
xlat
popa
pusha
loope
xchg
jge
pop
daa
scas
jge
fwait
int
xchg
mov
jl
jmp
add
xor
sbb
xchg
and
in
mov
push
sti
aam
pop
push
xor
pop
lahf
xlat
fbld
adc
xor
sub
add
push
mov
push
sbb
sahf
hlt
mov
clc
dec
add
jecxz
test
and
or
xor
mov
mov
sbb
fists
mov
out
cltd
decb
ror
loope
jno
adc
mov
popf
cmp
sub
pop
and
jno
and
test
cmp
cmpsl
dec
jb
push
pop
cs
xor
out
popf
inc
adc
jmp
repz
sub
dec
ss
pop
mov
mov
pop
add
push
andb
sbb
icebp
inc
add
mov
fildll
push
nop
push
push
xchg
xchg
fmulp
call
xchg
cld
mulb
adc
jne
or
adc
xchg
sahf
adc
iret
jb
xchg
cmpsl
dec
sbb
pop
pop
xchg
push
lcall
rcr
cmp
cmp
mov
push
mov
ficoml
outsb
int3
cmp
hlt
scas
cmp
jg
jne
and
pop
lret
jae
fisubl
cmp
mov
adc
cmpsl
mov
ds
je
cmpsb
fnsave
imul
mov
fmull
cltd
xlat
test
addb
dec
sbb
sti
daa
pop
xor
hlt
sbb
pop
int
cli
scas
mov
call
stc
jnp
jecxz
dec
imul
xor
adc
push
inc
xchg
sub
leave
and
mov
les
ficompl
mov
clc
jno
cmpsl
aad
mov
sbb
or
jb
std
sbb
movsb
lret
and
sqrtps
das
xor
xchg
aad
mov
fisubs
ja
jnp
sbb
cwtl
cmpsb
jmp
mov
sbb
and
mov
jge
push
and
xor
cwtl
shlb
mov
int
aas
imull
xchg
mov
stos
hlt
xor
cmpb
add
sbb
cmp
sbb
pop
std
mov
push
adc
dec
cltd
fdivl
sbb
or
cmp
cwtl
inc
cltd
fsubrs
testb
pop
out
and
mov
sbb
push
fidivl
push
dec
xchg
jbe
and
es
xor
bound
xor
xchg
mov
les
into
fdivrl
sarl
mov
pushf
mov
and
ss
fisttpl
push
mov
cs
jo
adc
int3
fcomip
xor
jl
mov
sahf
add
leave
jo
inc
inc
hlt
shlb
cmc
daa
scas
incb
push
dec
inc
mov
imul
and
push
jae
ret
jnp
xchg
push
inc
push
xchg
mov
scas
roll
in
sar
icebp
ret
mov
add
es
cs
stos
sbb
jno
or
enter
and
cmpsl
repnz
mov
test
mov
sarl
pop
jnp
pop
js
cwtl
and
shll
mov
xchg
cmp
pop
add
in
mov
sub
cs
enter
xchg
out
cmp
xor
stc
add
jnp
cmpsl
imul
jns
in
push
in
push
sbb
icebp
jne
mov
xchg
rcrb
loop
pop
pusha
popf
cmpsb
int
repz
inc
sbb
rclb
or
or
jp
pusha
shll
insl
pop
cmpl
repnz
mov
push
mov
ds
je
sbbl
shll
mov
mov
stos
mov
push
fiaddl
mov
shlb
sahf
pop
add
fisubrs
push
lgs
xor
stos
and
or
es
les
addr16
ja
gs
and
cs
dec
fdiv
jl
negl
lds
scas
out
popf
aaa
cmpsb
jno
jo
testb
inc
push
lods
cmp
add
xchg
mov
ret
cld
jnp
cmpsl
rcll
add
fadds
xchg
lret
cld
repz
pop
ret
push
lock
inc
adc
icebp
mov
stc
fsubl
or
push
dec
das
jp
push
jne
fisubrl
ror
xchg
inc
pop
push
or
movsb
cmp
imul
das
es
in
pop
adc
jno
sub
jmp
jmp
xchg
sub
fdivs
mov
int3
call
and
lcall
mov
pushf
adc
fsubr
push
xchg
mov
js
mov
icebp
mov
sti
jae
mov
mov
ss
xor
scas
sub
into
sub
sub
mov
call
lods
subl
pop
adc
jns
repz
mov
or
or
shr
cmp
jbe
mov
or
mov
sbb
pop
xchg
aam
jecxz
js
mov
loop
dec
repz
jecxz
push
out
es
push
ucomiss
imul
xor
pop
addr16
loopne
aam
pop
jae,pn
pop
out
iret
out
cmp
rolb
ret
das
or
xor
jp
jge
stos
push
ja
push
mov
imul
data16
sub
pop
test
icebp
fs
hlt
or
pop
sbb
out
cwtl
push
xchg
dec
lret
jnp
cmpsb
outsb
fisubrl
cld
cmp
jecxz
repz
sub
and
push
and
mov
rol
push
jp
jb
xchg
pop
dec
pop
adc
movsl
out
roll
inc
addl
jo
ss
add
or
les
sub
lea
mov
flds
add
push
movsb
jb
nop
ds
pop
lock
push
and
xor
sahf
inc
cmp
jnp
mov
int3
int
shrb
mov
dec
xorl
cltd
or
or
mov
movsb
imulb
jecxz
addr16
icebp
loop
pop
nop
dec
lret
cmpl
jp
negb
pop
push
cli
mov
mov
pop
inc
mov
addr16
jns
inc
jmp
jge
mov
adc
adc
pop
push
data16
xchg
mov
xor
xor
dec
pop
fcomps
insl
mulb
dec
xchg
or
inc
mov
xchg
adc
or
jge
adc
mov
dec
mov
xchg
std
xchg
hlt
jp
cmp
testl
aam
or
addb
mov
push
lahf
insl
cld
jno
and
test
adcb
adc
je
imul
outsl
sbb
clc
loop
xchg
rcrb
jae
sbb
xor
add
pop
or
xlat
adc
rolb
and
and
shll
cli
shr
lcall
mov
push
mov
mov
stc
es
ret
xlat
cltd
push
push
sbb
es
add
xor
aas
stos
xchg
scas
xor
roll
pop
out
pop
loopnew
mov
or
dec
cmpsl
dec
adc
add
jbe
sub
loope
push
cltd
imul
in
xor
fsts
icebp
in
xor
xchg
mov
in
mov
out
popf
cmc
and
cltd
cmc
inc
outsb
mov
std
pop
inc
sub
inc
enter
sub
push
sub
jae
insl
jp
dec
and
adc
arpl
dec
xor
ljmp
push
not
cli
ljmp
push
loop
mov
mov
mov
lret
test
add
divb
jne
clc
xchg
test
mov
int3
popf
xor
cmpsb
outsl
sub
es
subb
or
lcall
or
pop
rcll
and
push
jle
repz
mov
push
push
sub
rsqrtps
sbb
in
sub
dec
jle
jmp
ja
mov
aas
ds
lret
cmp
test
xor
xchg
in
push
add
mov
or
or
sbb
pushf
xor
aad
and
xchg
jge
pusha
mov
or
mov
sub
shll
mov
imul
push
ss
sub
sbb
pushf
aaa
adc
inc
orl
mov
push
ficompl
jbe
jg
bound
andl
adc
out
popa
out
pop
popa
fwait
xchg
cmp
xor
add
cld
adc
push
or
push
call
enter
dec
or
decl
icebp
or
push
sbbb
pop
ret
push
je
jl
hlt
mov
push
fidivl
xchg
pop
imul
outsb
inc
or
gs
jmp
cld
xchg
xor
cmpsb
js
lcall
outsb
mov
jae
and
cld
test
mov
sub
fs
clc
pusha
test
popa
add
sbb
outsl
xor
mov
ret
stos
fcomps
cwtl
mov
loop
lds
jl
lds
sbb
mov
insb
jne
int
xchg
insl
in
addb
mov
jmp
jo
cmp
jno
add
mov
das
mov
push
in
mov
enter
rcll
cld
shlb
add
les
cmp
cmp
pop
imul
dec
jmp
or
in
jg
xchg
pop
sub
cmp
ds
ss
sarb
in
pop
cmpsl
lret
mov
xchg
movsl
stc
in
ljmp
ret
or
or
xchg
adc
les
fmul
mov
enter
ja
sarl
int
xor
or
fnsave
jecxz
aas
mov
push
mov
dec
cmp
mov
hlt
and
in
into
or
out
or
dec
or
pop
mov
xlat
nop
std
dec
test
pop
mov
mov
ret
mov
imul
in
xchg
lods
adc
xor
xchg
jecxz
xchg
xchg
pop
xchg
mov
jb
push
cmp
aam
sub
insl
xchg
pop
shll
leave
popf
fs
imul
inc
sub
mov
dec
stc
add
xlat
popf
add
or
aaa
repz
lea
cli
cmp
jecxz
sti
mov
int
aad
out
mov
stos
fwait
in
fistl
add
loopne
mov
adc
add
ja
xor
sbb
push
push
fildl
jl
jg
movsb
jmp
adcl
pushf
sbb
mov
pop
and
xorb
push
cmp
fwait
or
add
mov
ss
sub
xlat
lret
sbb
mov
sub
or
sbb
hlt
scas
inc
insl
inc
cmp
pop
mov
cmpsl
mov
call
dec
mov
xor
or
xchg
std
or
popa
add
orb
xchg
lahf
ljmp
mov
adc
addr16
mov
and
into
popa
push
sbb
cmpsl
shrb
ja
cmp
add
dec
mov
std
xchg
aaa
dec
mov
pop
cmpsl
or
cmpb
stc
imul
push
jg
cmp
ucomiss
testb
or
add
sbb
push
bound
xchg
mov
jne
popf
jge
outsl
mov
stc
pushf
push
iret
mulb
sbb
inc
mov
mov
ret
lea
stos
jle
and
push
loopne
clc
or
adc
adc
push
jg,pt
fwait
sbb
sbbl
push
ret
movsl
lcall
pop
mov
aad
mov
aam
cmp
push
aam
es
push
adc
and
cmp
add
addr16
sub
fdecstp
jmp
lea
prefetch
xchg
fistps
fcoml
test
push
inc
jecxz
inc
xchg
in
fcomps
sbb
adc
mov
ds
pusha
shlb
negb
xor
outsl
out
shl
adc
jo
pop
gs
repnz
lcall
xchg
jg
xor
hlt
xorl
movsl
rolb
fistpl
mov
or
in
out
mov
shl
repz
jl
dec
add
pusha
mov
aam
sbb
adc
pop
stos
adc
rcr
cwtl
es
or
ss
push
mov
mov
sub
adc
out
lahf
xchg
arpl
jno
and
pushf
popf
mov
insl
std
mov
arpl
std
orl
lahf
sub
movsl
jle
lret
test
enter
pop
jno
lcall
push
or
in
mov
push
push
je
mov
jp
jo
iret
and
pop
cmp
test
lahf
fcoms
outsl
pop
inc
sbb
push
mov
push
adc
xor
add
inc
jnp
mov
jecxz
and
stos
or
ret
jge
add
lret
and
push
sbb
or
add
xchg
sbb
out
pusha
xor
or
adcl
fbstp
ret
or
ja
mov
jae
ja
int
add
stc
arpl
pop
repz
cmpsb
jle
lods
into
inc
jmp
xor
dec
mov
add
sub
out
adc
rcrb
and
subb
mov
movsb
insb
cmp
jle
ja
mov
inc
data16
xchg
pop
sahf
cltd
jge
lds
cmp
push
pop
nop
cmp
clc
mov
paddsw
shrb
lea
std
shlb
jb
fs
jmp
sub
bound
and
popf
dec
mov
push
xor
test
xchg
sub
adc
lret
sbb
jmp
adc
pusha
add
add
jo
mov
jo
pop
mov
mov
push
rclb
outsb
mov
mov
adc
popa
cmp
xor
and
sub
fdivr
ret
xor
loope
mov
movsl
scas
outsl
ljmp
push
push
out
sub
pop
xchg
xchg
push
jp
lods
popf
enter
pop
lahf
std
int
push
sbb
inc
es
cmp
clc
adc
adc
mov
mov
rorl
push
cmp
or
ljmp
mov
mov
popf
mov
push
xor
and
or
mov
mov
pop
cmc
fisubrs
pop
lods
fidivrl
xor
test
xchg
ds
mov
mov
sti
mov
cli
xchg
fidivrs
andb
imul
out
ja
enter
pop
push
mov
sub
mov
nop
or
pushf
cmpsl
adc
data16
popf
and
mov
jno
xchg
hlt
call
jge
adc
cltd
dec
inc
xchg
pop
dec
inc
pop
adc
data16
ficomps
orb
pop
lcall
cmp
pop
ret
mov
cmp
enter
add
xor
push
mov
aad
lret
hlt
pop
jge
add
rcrl
mul
movsl
adc
push
test
rcrb
and
in
push
test
scas
push
pop
jl
mov
jns
pop
cmc
jno
sti
or
jae
leave
cmp
popf
shlb
mov
out
push
push
popa
ljmp
or
jnp
ret
adc
dec
sub
out
rclb
push
in
out
add
mov
xchg
mov
dec
sub
inc
jecxz
mov
sbb
bound
adc
pop
and
test
scas
adc
push
add
cmp
jmp
test
rorb
pop
mov
addb
aas
insb
dec
push
jge
pop
mov
hlt
xchg
lods
pusha
add
in
jnp
inc
loopne
cmp
scas
popf
stc
js
fisubs
dec
or
jne
testb
sub
lret
pushf
int
negb
cmp
jle
les
or
icebp
out
mov
add
dec
push
inc
fiadds
ret
xor
mov
ret
leave
fldenv
mov
int3
jmp
mov
pop
stos
ljmp
mov
push
loop
add
jbe
pop
js
xchg
out
test
xor
jne
add
bnd
xorb
push
xor
jns
mov
and
data16
and
jle
dec
xchg
inc
mov
in
je
inc
xor
int
add
fcmovu
jns
adc
arpl
push
outsb
loopne
rclb
loop
sbb
movsb
sub
xchg
sbb
sbb
lcall
nop
ja
and
sub
add
lea
add
inc
jecxz
stc
hlt
jno
inc
xor
mov
out
mov
push
jle
cmp
test
je
adc
jo
out
mov
aad
addr16
sbbb
xchg
sahf
adcl
jle
out
or
jl
loopne
xor
add
sub
cli
fwait
xchg
jmp
adc
push
out
and
shrb
dec
dec
aam
lcall
popa
xor
hlt
jno
lret
sbb
xorl
jo
add
push
pop
mov
jg
lahf
push
mov
test
mov
and
insl
frstor
jno
test
test
adc
repnz
fwait
xchg
or
pop
pop
pop
in
inc
test
push
je
ss
in
sbb
or
cmp
xor
mov
je
std
pop
push
scas
imul
shlb
xchg
icebp
mov
xlat
push
push
sarl
and
adc
add
mov
pop
sbb
ret
scas
inc
dec
pushaw
outsb
lcall
and
addr16
adc
test
ss
mov
mov
adc
pop
aad
enter
or
mov
mov
mov
sbb
imulb
fcom
mov
imul
push
dec
jg
xchg
cmpsl
jbe
sub
or
xchg
sub
or
add
out
insl
bound
mov
push
in
mov
push
mov
sahf
mov
aaa
cmp
imul
inc
xor
sbb
push
outsl
in
shrb
dec
adc
and
add
mov
enter
adc
addr16
adcb
push
xchg
adc
fcoms
pop
jns
insb
xlat
insb
mov
insl
cld
mov
sti
ret
pusha
loop
ja
pusha
cmp
mov
outsb
push
and
dec
aaa
ljmp
sahf
mov
je
sub
xchg
jnp
cmc
pmaxsw
lret
pusha
shl
loope
popa
sbb
fdivrs
rorb
in
pop
or
sbb
dec
or
jmp
es
mov
pop
ja
sbb
mov
gs
ja
imul
push
idivb
or
jnp
dec
fwait
sub
repz
cmpsl
test
sub
and
adc
lods
scas
add
cmp
push
fbstp
addr16
outsl
decb
stc
pop
mov
dec
xchg
cmpsb
mov
dec
popf
shl
mov
adc
lcall
pop
mov
enter
leave
loope
lahf
scas
sub
sub
lea
mov
jb
cltd
cmp
sub
mov
xchg
mov
jae
add
mov
xchg
sbbb
rolb
push
push
hlt
sti
loopne
adc
or
leave
rclb
orl
adc
xor
imul
fidivrl
adc
mov
mov
xlat
mov
out
std
and
loop
adc
cmpsl
inc
rorl
jecxz
into
mov
hlt
aad
inc
jp
lods
pushf
inc
push
loopne
in
pop
pop
lods
push
mov
dec
sbb
sahf
or
sarl
and
cs
pop
jne
push
dec
jo
and
jbe
and
cmp
cmp
in
pop
cs
aam
cmc
xchg
pop
scas
arpl
or
test
jb
push
sar
daa
push
push
and
dec
inc
lret
mov
popa
adc
out
pushf
out
fstpl
cmp
and
adc
adc
push
test
lea
fildll
dec
sub
xor
das
ss
dec
jns
or
mov
icebp
call
pop
ljmp
mov
mov
arpl
xchg
xchg
out
pop
das
shr
mov
and
pop
aas
popf
imul
arpl
xor
rol
pop
pop
cwtl
xor
push
les
jmp
dec
jae
popf
mov
test
or
nop
xchg
adc
fmul
int3
jae
jmp
and
mov
cmpsb
fildll
add
sbb
lret
add
mov
xchg
mov
arpl
lods
mov
clc
test
cmc
mov
jge
aaa
dec
and
bound
adc
pop
lods
sbb
xor
imull
sbb
xchg
testl
push
cmp
push
add
clc
fmuls
dec
flds
inc
lods
sbbb
sbb
hlt
mov
push
push
cmp
cli
cs
and
repz
cmpsl
mov
cwtl
loope
jae
adc
adc
nop
cmpb
fdivs
mov
call
inc
lahf
dec
or
xor
add
sub
jno
xor
movsb
sub
fdivr
insl
repz
mov
mulb
stos
xorb
mov
cltd
dec
aaa
insl
jecxz
or
dec
sahf
adc
test
sti
adc
inc
arpl
inc
stos
or
leave
add
xor
mov
daa
push
arpl
or
fwait
add
data16
iretw
adc
pop
adc
repz
test
dec
xchg
mov
xchg
dec
sarl
lods
sarb
data16
in
pop
test
and
or
cmp
push
in
dec
push
lret
mov
mov
lods
fincstp
daa
dec
or
loopne
sarb
xchg
rcr
mov
outsl
aaa
stos
xchg
in
fcoms
rcr
push
jl
imul
add
sbb
dec
dec
jecxz
insl
imulb
orl
imul
faddl
fiaddl
ficoms
int3
mov
aad
stos
xor
sbb
adc
test
fstpl
repnz
out
adc
aaa
cmp
lret
scas
xlat
mull
decl
push
xchg
gs
shr
pusha
xchg
xor
pop
shl
stos
inc
lods
divl
sar
mul
and
jecxz
into
movsl
js
lret
sub
adc
inc
stos
test
call
lods
and
mov
arpl
and
movsb
ret
inc
jbe
test
andb
mov
and
mov
test
lea
inc
lods
xorb
cld
outsl
xor
insb
das
loopne
adc
test
sbb
test
mov
mov
pop
sar
or
jno
shrb
cmpsl
mov
in
in
xlat
in
mov
test
xorl
js
arpl
push
data16
jbe
decb
out
xor
pop
popf
mov
ror
lcall
xchg
enter
popf
fisttpll
data16
jle
sub
or
popf
icebp
out
add
and
mov
mov
dec
xor
dec
popa
pop
aam
insb
xchg
adc
add
mov
push
pop
add
push
movsl
loope
ret
xor
inc
popl
push
fwait
outsb
mov
adc
or
les
sub
insb
xchg
mov
cld
aaa
sbb
jecxz
xchg
sbb
lds
outsl
mov
xchg
test
xchg
inc
dec
and
mov
cli
sarl
push
int
lcall
pop
add
sbb
xchg
clc
subb
ja
fistpll
outsb
adc
andb
cmp
out
je
push
nop
add
adc
out
scas
xor
rcr
ret
add
inc
outsl
lds
sub
xor
js
fcoms
pop
icebp
insl
insb
mov
icebp
add
push
movsl
aas
fdivs
je
and
fistpl
xor
mov
lods
mov
fstpl
ret
mov
shll
dec
jp
inc
xchg
outsb
inc
daa
add
cmp
push
and
xchg
xor
das
dec
repz
sbb
pop
roll
fucompp
inc
stc
movsl
fidivl
ja
mov
out
sbb
jl
ss
dec
inc
in
scas
cmp
jmp
add
jl
arpl
add
or
aas
jg
cmc
sahf
and
lcall
es
popf
aas
punpcklwd
or
pop
repnz
push
cmp
shrl
sub
arpl
cmp
xlat
mov
inc
xchg
roll
pop
xlat
sbb
in
jp
jns
mov
mov
insb
stos
mov
sarb
xchg
xor
arpl
or
outsl
stc
neg
adc
ret
rcll
addb
mov
sub
js
loope
push
dec
fstpt
sub
cld
push
jge
aad
xchg
dec
jmp
aaa
addb
daa
pop
push
decb
aaa
sbb
and
mov
ja
ss
imul
subb
test
lret
add
rorl
and
std
stc
cmp
cltd
mov
sbb
cld
cmp
int3
aaa
and
stc
inc
mov
ret
mov
and
std
push
and
sub
jg
mulb
and
cmpsl
repz
mov
and
sub
xor
or
in
mov
sub
jbe
lea
mov
xchg
out
sub
outsb
cld
cs
repz
mov
das
xchg
xchg
in
sub
xchg
aam
ss
mov
xchg
and
add
js
cltd
mov
jns
ja
clc
cmp
in
idiv
mov
jge
das
push
lds
aam
das
mov
pop
aam
ljmp
out
out
addb
adc
std
outsb
sub
cmc
lods
mov
cmc
xlat
pop
mov
pop
es
enter
mov
adc
jge
movsb
imul
sub
adc
fildll
mov
mov
push
xchg
dec
xor
xchg
test
rcrl
inc
fdivr
in
sub
hlt
jmp
mov
and
ror
cmp
mov
mov
push
fnstenv
xchg
and
or
cmp
es
arpl
cmp
mov
or
push
adc
add
fs
ja
dec
pop
les
inc
daa
and
cmp
sub
add
movd
pop
mulb
js
adc
dec
stos
lret
mov
pusha
out
test
xchg
xchg
pop
rcll
xchg
pusha
xor
outsb
xor
jge
pop
sti
lods
fsubl
and
fsubs
lret
std
outsb
addr16
sti
cmp
xchg
inc
inc
push
xor
je
add
dec
negl
aaa
cmpsb
incl
fcom
out
jne
jbe
cwtl
lret
aam
push
ret
adc
out
sar
cwtl
popa
jns
andl
add
imulb
test
pusha
dec
push
adc
mov
dec
movsl
push
adc
imul
bound
mov
push
pusha
jno
fildl
push
ficomps
imul
mov
addb
gs
or
push
pop
notl
cmc
and
dec
notb
xchg
mov
or
sub
rorb
rorl
movd
or
adc
cmp
push
enter
jae
add
add
call
lret
xchg
jo
jno
push
decl
repnz
ljmp
xchg
gs
mov
add
andb
sub
int
dec
mov
insl
in
sub
inc
push
popa
ja
mov
imul
xchg
lahf
cwtl
ljmp
pop
nop
aaa
mov
jecxz
cmpsb
mov
xor
mov
es
fistps
inc
shlb
divb
aas
rcll
lock
mov
jecxz
sub
mov
or
stos
add
bound
add
popa
xor
mov
je
fcmovnu
xchg
xor
jecxz
popa
pusha
in
cmp
push
adcb
dec
push
ret
inc
repz
mov
int3
int
rcrl
cld
lea
fdivrs
aad
test
jno
gs
push
cwtl
jne
andps
xchg
or
pop
add
popf
push
pushf
int3
pop
mov
fstl
inc
xchg
sub
jp
jle
dec
add
test
and
jmp
add
and
sub
loopne
jg
inc
jecxz
pop
or
lds
sub
shr
jno
sbb
sub
sub
mov
jmp
rcrb
ss
popa
dec
jecxz
add
pop
sahf
add
jp
fwait
aaa
mov
mov
fwait
repnz
sbbl
pusha
add
in
frstor
aaa
dec
push
push
push
jo
enter
out
sub
ficompl
clc
sub
sub
push
cwtl
add
out
inc
cmp
out
popa
adc
test
inc
push
mov
dec
inc
adc
add
mov
stc
cltd
xchg
test
loop
mov
adc
jge
mov
ffree
xor
mov
add
rorb
xor
push
scas
push
sub
mov
ss
inc
jnp
dec
or
pop
jl
xor
push
mov
push
lea
xchg
pop
neg
pop
sub
push
arpl
push
scas
xchg
push
loope
fwait
mov
push
addr16
jmp
into
dec
sbb
ret
mov
mov
loopne
loopne
dec
push
insb
icebp
lods
cmpsb
dec
jl
mov
fistl
repz
loopne
aad
push
sub
cmc
cmpsl
add
pop
adc
pop
mov
pop
or
dec
push
std
je
clc
rol
inc
pop
ret
sub
rorb
dec
adc
adc
cmp
mov
push
cmp
lods
dec
outsb
test
lcall
sti
jb
pushf
mov
fwait
lds
cwtl
movsb
xchg
pop
shll
ret
adc
or
jbe
test
movswl
push
pop
adc
sub
dec
fs
jo
cltd
fldcw
stc
fnsave
push
xor
out
push
xchg
sti
mov
in
or
mov
ficomps
dec
mov
adc
jb
pop
popa
movsl
in
daa
int
sahf
fld
ds
dec
fbstp
stos
sti
int3
add
jne
adc
jge
enter
cmp
fwait
or
ss
inc
jge
mov
in
cmpsb
icebp
push
adc
scas
push
and
cmp
orb
insl
lds
cmp
ja
add
ja
lock
fildll
adc
je
push
sbb
inc
sub
aaa
stc
push
add
roll
jmp
sbb
and
push
sub
rcrb
fidivl
divb
outsb
out
push
sub
imul
mov
in
or
popa
sbb
mov
fcomi
inc
dec
cmc
nop
outsb
or
xchg
push
add
xor
call
idiv
outsb
cmp
divl
sbb
pop
cli
mov
hlt
push
cmp
arpl
in
sub
mov
sub
mov
sbb
jecxz
dec
pusha
ja
jnp
mov
stc
mov
fisubrl
out
aad
stos
jmp
in
xchg
push
and
or
mov
add
jg
dec
sarl
mov
mov
sbb
and
and
add
push
aas
lea
push
test
pop
mov
je
add
push
stos
mov
int3
subl
sbb
mov
mov
mov
stc
mov
sbb
loop
and
sub
lret
sub
fnsave
or
cmp
add
jmp
int3
rclb
lods
jge
cmpsb
push
pop
inc
inc
or
and
push
dec
cli
in
sbb
cmp
push
jg
aam
fisttpll
ret
or
imul
inc
loope
pop
movsb
mov
jne
push
cmp
xor
pop
sub
and
outsl
fisubrl
or
aaa
and
xor
scas
jb
fwait
mov
cmp
jae
int
shl
cmp
clc
pop
push
dec
pop
mov
daa
in
jo
adc
jno
icebp
nop
insb
mov
jp
outsb
paddusw
sar
test
aas
xchg
adc
or
outsl
fs
aaa
jns
stos
cltd
stc
insl
mov
fadd
add
pusha
inc
loope
jnp
cs
ja
scas
mov
cmp
out
add
daa
cmp
push
into
stos
imul
sub
imul
sbb
js
adc
sahf
push
int3
pusha
sub
sbb
fs
and
and
ret
or
pop
jns
jns
cmp
jle
lcall
sbb
scas
or
xor
lret
pop
adc
push
cmp
push
cmp
inc
sbb
xor
pop
pcmpgtw
imul
enter
pop
in
sbb
in
aam
fwait
ret
mov
cwtl
xchg
dec
pop
adc
sub
or
stc
jne
inc
jbe
je
inc
iret
lea
push
daa
insb
inc
inc
popf
sub
jg
scas
lret
fimull
addr16
lods
sti
leave
adc
xor
aaa
test
mov
negb
xchg
aas
sub
daa
cwtl
daa
pop
imull
les
loope
mov
lahf
sub
into
add
pop
cmpsb
cltd
sub
in
scas
dec
in
lods
subps
dec
in
hlt
shl
push
outsl
jle
mov
das
ljmp
xchg
add
aam
cmp
inc
or
push
rcr
in
aas
imul
pop
inc
pop
sub
sbb
ret
xor
pop
xchg
pop
add
dec
loop
push
sub
adc
test
xchg
mov
leave
shld
push
int
xor
cmp
lret
mov
pop
mov
or
jle
cmc
clc
repz
test
imul
les
fbstp
add
fsubl
mov
aas
lods
add
mov
lea
aas
jns
jo
and
sti
cmp
pop
adc
sbb
xchg
dec
lea
and
mov
ret
push
clc
rcrl
test
arpl
imul
test
jmp
xchg
ss
push
push
xor
xchg
mov
adc
subps
mov
pushl
adc
xchg
cld
in
loopne
hlt
lea
ljmp
ljmp
jg
movsl
inc
and
bound
fmull
mov
imulb
dec
push
add
mov
mov
xchg
xchg
jle
imul
mov
shrb
leave
cmpsb
cs
dec
mov
mov
sti
jp
xchg
pusha
outsb
out
mov
les
rclb
pop
add
inc
xchg
pop
test
push
in
fcoml
into
inc
outsb
cmp
adc
aad
outsb
dec
or
dec
ljmp
rorb
stc
leave
outsl
jg
ljmp
stos
xchg
adc
adc
test
insl
dec
jno
sub
adc
adc
mov
data16
mov
int
aaa
repz
and
xchg
jo
gs
cs
hlt
mov
xchg
les
xlat
stos
test
imul
dec
adc
cmpsb
les
in
in
jg
fsubl
mov
divb
push
loopne
mov
popa
cmp
push
mov
gs
pop
popa
pusha
add
xchg
scas
insb
jle
or
lret
inc
scas
add
sub
pushf
push
mov
into
lods
inc
xchg
stos
pop
push
movl
push
push
mov
mov
push
daa
clc
cmovge
lret
push
lahf
ffree
xor
das
int
dec
xor
lahf
cmpsb
ret
and
jbe
stc
cmp
loopne
in
sti
mov
fwait
sub
icebp
imul
xchg
and
mov
and
shlb
and
add
pop
sub
roll
cltd
lret
sub
mov
stos
mov
jb
outsl
arpl
sbb
xchg
push
imul
cmp
push
jo
mov
imul
adc
rcrb
mov
adc
in
icebp
xchg
xlat
scas
jmp
fdiv
cs
sbb
gs
popf
lcall
and
int
fnstenv
outsb
dec
dec
rcrb
jmp
jae
push
daa
fsubrl
repnz
pop
inc
mov
icebp
addr16
lods
loop
paddusw
in
lods
in
cs
lcall
sub
aam
repz
je
push
or
test
mov
cmp
mov
mov
loop
cmpsb
jbe
sbb
imul
and
dec
rdtsc
shl
xlat
lock
iret
mov
nop
icebp
clc
inc
cmpsb
clc
pusha
jae
jmp
sbb
xchg
lret
test
fcoms
jp
popf
cmp
loope
push
nop
sarl
mov
fs
adc
and
mov
lds
orb
add
loop
repz
push
call
ljmp
test
push
pop
sbb
idivl
mov
xchg
xor
mov
pop
xchg
sbb
or
icebp
pop
mov
push
test
mov
dec
insb
shll
mov
je
pop
pop
lcall
dec
retw
cmc
dec
cmp
and
jno
push
sbb
xchg
stc
push
sub
mov
xor
inc
repz
dec
movsl
popa
fidivrs
dec
insb
push
mov
into
dec
pop
dec
or
push
sahf
idiv
dec
daa
pop
xchg
dec
push
insb
pop
and
insb
add
mov
es
ljmp
icebp
sbb
shr
xor
mov
roll
ret
or
mov
jp
push
inc
insl
fs
jg
movsl
mov
shrl
mov
pushf
xchg
and
and
xchg
movsl
cmp
xchg
mov
push
add
mov
sbb
mov
lods
and
mov
icebp
push
jp
gs
add
sub
mov
aaa
adc
cmc
les
mov
and
ffree
pop
jns
mov
in
mov
add
sbb
inc
or
inc
test
in
pop
arpl
cmc
out
out
bound
ds
scas
call
mov
int3
add
jne
iret
dec
rcll
push
outsl
subb
sbb
fidivl
call
or
mov
sub
mov
jl
jno
test
add
adc
leave
pusha
add
jle
std
aaa
inc
sbb
fsts
out
xchg
popa
pop
inc
and
cmp
shlb
add
and
aad
mov
out
fbstp
mov
push
mov
insl
in
inc
mov
int
jne
sub
imul
cmp
jg
call
js
insl
int
arpl
jge
xchg
fwait
in
sub
aas
out
ret
push
adc
stc
idivb
or
add
mov
pop
lahf
ss
cwtl
ds
in
enter
fs
rclb
pop
and
pusha
fisttpl
add
out
xor
add
dec
adc
mov
imul
pop
xchg
fidivrs
and
push
xchg
lods
daa
pop
jno
dec
push
push
xchg
xor
loopne
push
scas
ds
roll
fiaddl
cmp
shrb
shrb
bound
lods
jge
shufps
sbb
lcall
bound
and
sub
jp
addl
js
inc
enter
sub
or
mov
jno
sahf
jp
xlat
cmp
je
pop
idivl
insb
cmp
lcall
fdivs
jp
jae
xor
out
aaa
pop
dec
mov
test
xchg
pop
sbb
sarb
mov
sbb
adc
adcb
pop
lds
aaa
jbe
ja
std
mov
mov
push
xor
push
add
fs
jl
test
jbe
ss
inc
sub
and
pop
jl
xchg
aad
lret
cmp
pop
scas
retw
sub
fildl
iret
mov
push
jbe
sar
fstp
iret
ret
push
pop
push
ss
mov
call
ljmp
cmp
push
sbb
dec
dec
nop
mov
fcoms
repnz
cmp
add
das
imul
arpl
addr16
jmp
enter
pop
popa
sar
dec
hlt
aad
mov
or
cwtl
cld
outsb
and
xchg
xor
pop
neg
in
sbb
cmpsl
es
out
adc
jmp
xor
jbe
inc
cwtl
repnz
xchg
imul
and
int3
push
cmp
je
data16
jp
pop
mov
aas
xlat
jecxz
into
mov
lods
inc
push
xchg
push
inc
mov
cmp
push
sbb
lods
and
lods
loop
mov
sahf
mov
push
rcr
and
mov
pushf
repnz
pop
faddp
xor
fcmovb
dec
mov
pop
add
mov
sarb
or
arpl
mov
fstl
stos
inc
mov
clc
mov
shrb
rcr
cmp
fdivp
int
add
test
or
mov
cmp
pop
push
xchg
mov
pop
jae
fstps
pop
and
inc
testb
stc
out
push
pop
mov
ret
cld
sub
mov
pop
xchg
cld
xor
xchg
or
add
and
xlat
lcall
inc
pop
sar
ficomps
and
movsl
dec
pop
or
mov
rcll
mov
xor
push
popa
ja
imul
cmp
aas
push
jge
pop
int3
lds
inc
icebp
and
clc
mov
in
sub
js
test
cltd
divl
sbb
and
and
shll
das
push
stc
adc
push
xor
lret
mov
ljmp
inc
arpl
and
jnp
pop
pop
shll
aam
dec
push
lods
mov
rorl
out
mov
inc
into
pop
push
out
imul
mov
nop
sub
shll
inc
mov
loop
outsb
push
inc
int3
mov
addps
fldcw
xchg
or
mov
leave
mov
shll
push
imul
insl
dec
out
mul
adc
aad
xor
inc
cmp
xchg
fnstenv
loope
push
jmp
push
in
rolb
outsl
ret
enter
dec
sub
je
repz
repnz
pop
cmp
jp
jbe
aad
sahf
sub
mov
pop
sbb
shll
sbb
dec
pop
lret
leave
inc
pop
jo
adc
out
sti
iret
outsb
push
lods
outsl
add
push
jp
insl
sbb
mov
cltd
mov
xor
les
leave
ja
cli
push
fsubr
loopne
gs
sbb
jns
int3
and
xchg
ror
sarb
out
rolb
notl
jb
movsl
mov
movsl
out
cli
push
insb
and
frstor
cmpxchg
lods
loopne
or
mov
push
in
mov
lock
cmp
dec
scas
xchg
daa
mov
jecxz
mov
or
jbe
ror
iret
lods
es
and
arpl
and
dec
aaa
rorl
into
or
push
jp
jnp
mov
xchg
adc
cltd
or
stos
std
iret
and
adc
mov
ret
and
dec
fwait
shrl
mov
adc
ret
pushf
das
and
outsl
pop
cmp
push
push
scas
mov
mov
adc
lahf
lods
push
jg
stos
sbb
lods
mov
mov
and
sti
and
leave
es
pusha
fucom
outsl
xor
inc
mov
bound
sbb
fdivp
rcl
jge
adc
pop
out
jne
ljmp
insl
sub
add
push
out
xchg
jecxz
mov
cmpsl
xor
adc
movb
inc
push
mov
aad
ljmp
inc
lock
jmp
sub
pushf
je
call
mov
and
outsb
popf
mov
xchg
lock
int3
sbb
sbb
jmp
mov
popf
hlt
or
and
insl
js
dec
add
jns
mov
dec
or
loopne
loopne
add
dec
mov
or
ja
inc
and
jno
loope
cmp
xchg
das
out
cmpb
xchg
aam
aaa
fimull
in
fistpl
lahf
and
pop
movsb
mov
jle
aad
daa
jbe
andb
clc
push
jo
ror
clc
and
mov
sub
adc
repz
or
and
push
insb
xchg
mov
pop
push
outsb
xchg
sbb
xchg
stos
stc
cmp
push
xorl
and
fdivr
pop
jmp
bnd
push
sbb
mov
push
sub
lods
pushf
roll
fcmove
ret
test
es
sub
shll
xchg
mov
jge
rcll
testl
ljmp
movsl
movsb
jp
sti
and
out
mov
sbb
xchg
loopne
push
and
fistpl
into
inc
inc
gs
lret
inc
pop
sub
jmp
adc
dec
jne
repnz
fninit
out
inc
sbb
aad
adc
bound
aaa
ret
xlat
add
cwtl
xor
pop
inc
mov
mov
jb
ficomps
pop
rorl
add
push
clc
or
sbb
jle
mov
pop
sub
inc
pop
orb
ret
mov
cmp
jnp
mov
ret
jnp
gs
mov
mov
in
clc
lret
fcoml
jmp
sarb
leave
inc
data16
xchg
out
popa
xchg
stos
inc
push
xchg
lret
fwait
add
stos
sbb
or
adc
rcrl
inc
xor
adc
mov
dec
inc
dec
push
xor
fsubs
inc
es
pop
pop
cmp
mov
das
sub
sub
cmpsl
in
pop
cmp
xor
push
stos
adc
mov
inc
push
xchg
push
jg
jo
pop
pushf
adc
movsb
cld
cwtl
dec
stos
push
mov
rcl
in
dec
push
mov
shll
jbe
daa
mov
xchg
cltd
pusha
aam
cwtl
aam
lods
push
dec
cs
push
pop
cmp
out
rclb
in
adc
jle
sahf
jbe
lea
js
out
insb
ret
mov
cwtl
fcmovb
lods
and
shrd
into
jmp
cmp
iret
clc
or
movaps
int3
shlb
add
mov
push
xchg
fisubrl
je
inc
outsb
imul
rcrl
js
pusha
pop
xchg
and
dec
test
je
xchg
xor
loop
shll
and
jae
push
sub
jae
inc
inc
adc
mov
fcmovbe
pop
xor
mov
mov
sahf
add
loope
inc
xchg
add
push
push
call
xchg
movsl
out
mov
mov
inc
sub
push
mov
lds
mov
inc
pop
nop
mov
movsl
enter
jb
sti
jge
cmp
fdivrl
push
pop
int
stc
nop
jb
aas
sub
or
bound
shlb
addr16
pop
int3
push
movsl
shlb
and
insl
loopne
xchg
addr16
cs
ljmp
xor
push
xor
nop
add
js
lahf
sbb
sbb
adc
add
out
rol
cli
dec
lea
mov
lahf
popf
movsl
and
imulb
jp
jb
lret
out
aam
jae
pop
adc
sub
cwtl
fcomi
sub
ljmp
js
sbb
xor
pop
les
incl
xorb
cmp
movsb
imul
xor
call
sub
jecxz
pusha
or
xor
dec
push
mov
jb
dec
mov
fdivs
jecxz
lea
add
jecxz
xor
incb
loope
inc
sub
lret
fmulp
pop
mov
out
adc
mov
or
push
insb
or
fmul
mov
mov
aaa
sbb
arpl
pop
test
jnp
xor
push
sbb
dec
leave
pop
mov
push
aam
mov
iret
fucomi
adc
xchg
adc
cmp
movsl
sahf
push
shrb
dec
xchg
mov
addb
mov
lret
xchg
test
pop
shlb
in
mov
js
pop
adc
pop
test
inc
cmp
xorb
mov
jae
push
repnz
dec
adc
inc
xor
aad
xor
fxch
mov
xor
std
addb
sti
fisubrl
shl
lods
xor
outsb
cltd
sub
xor
adc
test
loop
fs
add
push
sub
mov
test
nop
adc
xchg
clc
leave
test
pop
cli
mov
fwait
daa
cmp
mov
jb
and
lds
stc
imul
test
dec
sub
sbb
repnz
mov
xchg
ljmp
xor
push
inc
std
xchg
lods
xlat
adc
ror
push
inc
jp
inc
sub
sub
stos
sbb
push
dec
inc
cltd
arpl
lret
push
rorb
ror
xchg
aaa
repnz
loope
jp
roll
popf
lret
add
xor
mov
cmpsl
in
mov
xchg
push
mov
cmp
xor
je
je
cs
xor
stos
insb
pop
sbb
pop
out
scas
loop
ss
xor
push
sub
inc
fs
test
mov
pop
shll
dec
call
dec
ficomps
xor
mov
lods
and
test
test
imul
pop
orb
lcall
pop
mov
int3
jo
xchg
lahf
mov
pop
mov
aas
add
sbb
ret
inc
mov
ljmp
cmpsb
cwtl
filds
xor
fs
lahf
dec
ds
mov
cwtl
pop
int
inc
mov
outsl
mov
pop
enter
stc
leave
cmp
inc
test
mov
repnz
notb
add
lea
movl
xor
inc
movsb
ret
mov
or
mov
xor
push
mov
fldcw
loopne
sub
aas
es
push
pop
mov
sub
iret
test
fists
ret
lods
add
fsubl
cmp
lea
dec
xchg
push
jne
rcpps
jle
clc
pop
jl
mov
mov
push
ret
pop
mov
nop
and
stos
jns
sub
scas
xchg
or
jecxz
mov
movsl
repnz
cmp
sub
fwait
push
scas
xchg
cmp
mov
icebp
add
int
mov
xor
jns
inc
stos
movsb
aam
loopne
cld
imul
push
jae
xor
cli
movsb
cmp
cmp
push
repnz
push
mov
add
aaa
sbb
push
icebp
xchg
stos
ljmp
mov
sub
cmp
mov
in
repnz
xor
je
cs
xchg
mov
mov
fistps
mov
arpl
fs
push
jnp,pn
out
mov
sbb
push
nop
shrb
andl
popf
loopne
xchg
in
xchg
add
adc
xlat
cmp
jl
cmp
std
enter
pop
inc
in
insb
call
xor
test
cmp
enter
jnp
ret
mov
or
repnz
out
cs
cs
das
out
sbb
outsb
lret
fnstcw
pop
sub
scas
aad
pop
stos
out
dec
and
je
in
ja
add
jecxz
xor
loopne
adc
gs
cs
adc
daa
xchg
push
mov
push
insb
mov
out
or
jle
xor
push
mov
cltd
sbb
repnz
nop
add
adc
cltd
mov
outsl
lea
and
imul
ss
call
into
push
fbstp
cli
fdivrs
adc
out
or
sub
and
push
cmp
xchg
jae
mov
les
or
push
fdivp
add
scas
add
js
aad
push
add
mov
push
mov
and
mov
or
inc
mov
addr16
aam
test
adc
aas
jmp
sbb
add
cli
jbe
repnz
inc
cmp
cs
sti
mov
fcoms
push
fsts
fwait
cmp
sub
gs
mov
lds
in
into
xlat
cli
out
ficoml
dec
dec
and
movsl
jl
adc
pop
jle
sbbl
ret
loopne
xor
add
pop
jno
hlt
jmp
loope
notl
movsl
fwait
decb
pop
in
xchg
push
ss
cmp
adc
push
lahf
pop
in
int3
dec
lret
push
call
out
test
in
fisubrs
jl
addr16
xchg
sbb
push
jnp
mov
jl
paddd
xchg
mov
adc
mov
jp
mov
or
fdivs
sub
rclb
dec
xor
loope
shlb
jge
fcomip
sub
shlw
addr16
xchg
lret
mov
push
fs
cmpsl
and
roll
sub
mov
or
push
jb
cmc
jnp
jge
fwait
adc
sbb
mov
ds
lods
rcrb
idivl
mov
mov
sub
pop
xchg
ss
call
cld
ja
pop
stos
cmp
int3
clc
int3
jne
lret
in
xchg
add
test
push
mov
test
inc
testl
jae
jae
lea
dec
xchg
in
nop
push
mov
in
xchg
or
jno
sub
and
enter
jmp
adc
mov
push
jg
sbb
jne
fs
push
out
jns
pop
out
cmp
sti
cltd
cmp
jl
outsl
in
cmp
ror
and
xor
pop
xor
sahf
adc
loopne
popf
push
ja
movsb
jg
enter
or
std
pop
or
rcll
or
or
out
enter
jnp
arpl
inc
sbb
scas
lret
test
adc
fstps
dec
push
mov
jecxz
lock
xlat
call
lock
lret
dec
fadds
ljmp
add
out
jmp
comiss
pop
stc
shl
inc
out
dec
pop
and
push
xor
push
mov
pop
xchg
xchg
or
hlt
push
dec
or
push
push
xor
sbb
sbb
push
jl
lock
push
inc
mov
lret
jns
mov
sbb
and
dec
pop
cmpsl
fwait
mov
mov
fldl
sub
xchg
and
cmp
sub
sbb
data16
mov
jmp
jl
ja
shlb
mov
arpl
mov
popa
mov
ja
cld
pop
stos
decb
jl
adc
jns
xchg
movsb
mov
jecxz
mov
dec
sub
clc
pop
or
pop
cmpsb
cwtl
fcomps
call
push
xor
mov
imul
adc
imul
sub
xor
jmp
adcb
rcr
push
add
dec
cmp
sarl
call
and
stc
test
add
scas
aad
pmullw
and
icebp
hlt
push
mov
push
or
dec
ret
jno
xor
leave
mov
aad
push
mov
fwait
inc
test
push
clc
cli
cmc
dec
or
dec
jl
cltd
icebp
sub
pop
adc
xlat
fmuls
push
xor
into
popa
xor
dec
popa
sbb
cmp
xor
imul
std
lret
push
xchg
pop
jbe
stos
mov
xlat
lahf
lcall
push
or
mov
sub
jl
sbb
push
ljmp
dec
jp
mov
lds
rcr
imul
orb
imul
jg
in
cwtl
push
fstl
xchg
pop
push
mov
sbb
push
jl
pop
mov
lcall
in
xchg
adc
sbb
popa
nop
xchg
xor
mov
jno
stc
mov
movsb
dec
jp
fldt
push
cmp
andl
inc
loop
push
shrl
repnz
and
aaa
cmp
sarb
shlb
jbe,pt
sub
scas
arpl
outsb
popa
push
push
fcoms
adc
jbe
pop
dec
outsl
setnp
mov
int
stos
pop
repnz
or
nop
mov
stos
xor
pop
push
pop
push
outsl
loop
or
jg
mov
sahf
cmpsl
lods
and
fcmovbe
repnz
or
gs
cmp
clc
xchg
sub
stos
es
jecxz
xchg
ret
jo
mov
ljmp
xchg
push
and
stos
je
shlb
push
insb
xchg
imul
jns
push
pop
hlt
xchg
outsl
cltd
cld
shrl
popf
jmp
jae
out
xor
aad
add
inc
int
sbb
std
inc
add
cltd
sbb
mov
mov
sbbb
repz
pusha
addr16
mov
shlb
inc
sti
ljmp
xchg
adc
inc
mov
jns
ljmp
repnz
sbb
inc
jne
int3
or
jl
jecxz
nop
mov
adc
and
sbb
sbb
cwtl
fwait
leave
xchg
fwait
adc
sub
inc
xchg
sti
mov
fsubs
add
or
fs
push
mov
out
movsl
adc
mov
and
fucomp
jg
xchg
sbb
xor
jnp
xchg
xlat
add
and
and
xchg
scas
xchg
and
inc
ret
xchg
and
or
jp
push
cmpsb
ljmp
mov
jns
lret
rclb
xchg
adc
clc
fnsave
sbb
mov
xor
iret
and
imul
call
fwait
mov
xor
out
mov
ret
xchg
into
jl
pop
and
dec
sbb
push
popa
nop
jnp
jl
mov
mov
outsl
pop
scas
mov
adc
popa
mov
pop
cmp
ret
popa
push
insl
jne
movsb
iret
mov
in
cwtl
xor
ret
push
lods
adc
push
mov
fisttps
icebp
sub
bound
xchg
ja
les
push
shrb
mov
xorb
out
sub
add
mov
daa
imul
add
test
jo
or
add
sahf
adc
add
or
in
add
arpl
mov
fstpt
mov
lret
imul
test
mov
jle
mov
cmpsb
mov
jae
mov
mov
mov
mov
aam
xlat
jmp
dec
sbb
adc
ret
dec
mov
or
and
mov
movsl
decb
js
jbe
pop
xor
inc
divl
sbb
inc
movsb
jo
mov
in
and
jbe
mov
jg
cmc
xchg
add
or
arpl
xchg
cmpsl
repnz
cmp
das
shl
inc
jnp
dec
or
mov
jp
in
pop
cmp
cmp
jp
and
push
subb
cmp
out
jmp
cltd
test
das
push
sub
jnp
mov
aas
das
jae
or
popf
mov
fmulp
mov
mov
push
cwtl
lock
cltd
cmpsl
dec
cwtl
ja
mov
sbb
xchg
enter
cmpsl
cmp
rolb
dec
and
pop
out
faddl
adc
fdivrs
in
dec
or
pop
pop
shlb
dec
fadd
mov
mov
pop
dec
or
lock
jecxz
cmpsb
xor
cltd
or
inc
lods
stos
cmp
cld
inc
pop
shlb
ficoml
int
jae
fistps
add
les
adc
sbb
mov
xchg
inc
ds
push
stos
mov
pop
aam
lds
bound
fcmovb
push
imul
jne
xor
inc
mov
test
adc
and
out
pop
test
mov
add
or
stc
mov
add
lahf
cmpsb
cmp
push
jg
mov
jle
pop
mull
and
mov
push
jp
stc
cmp
dec
xor
sub
xchg
cli
inc
jb
mov
sub
xor
mov
mov
daa
sbb
xor
jno
push
addr16
add
ret
xchg
clc
clc
mov
add
xchg
sub
les
mov
cmp
aad
pop
in
in
mov
push
scas
sub
mov
call
adc
arpl
and
mov
xchg
testb
dec
sub
cmp
dec
outsl
scas
dec
push
imul
pop
test
pop
lret
xchg
insl
std
mov
stos
ljmp
addb
or
cs
lea
aas
dec
ret
int
jp
mov
cmpsb
popf
xchg
stos
mov
std
xchg
xor
scas
cmp
inc
test
dec
mov
mov
jecxz
sbbl
call
je
ja
mov
lcall
aas
xlat
inc
bnd
inc
fadd
xchg
cs
sti
or
push
sub
pop
xchg
jo
pop
sub
insb
fsts
sub
loopne
clc
or
xor
mov
add
lods
pop
jns
jecxz
loope
jl
cmp
dec
xor
xor
xchg
je
jbe
lcall
stos
push
adc
xor
add
push
cmp
and
and
sub
push
int
aad
cmc
mov
rolb
xchg
leave
data16
mov
push
daa
xor
jb
fldpi
push
sub
cli
cld
fwait
sub
movsb
jmp
cmp
ret
mov
mov
sti
jg
inc
mov
lock
je
loopne
fwait
jg
mov
ds
fnsave
in
add
jecxz
fwait
cmc
cmp
popa
stos
lahf
mov
in
jbe
test
xchg
scas
into
daa
das
ret
dec
mov
jb
lahf
loop
sub
aaa
xchg
sub
test
cs
xor
loop
pop
cmp
cmp
aam
or
clc
leave
mov
enter
sub
or
and
in
mov
pop
cmpsl
ret
enter
iret
stos
push
aam
jmp
or
jl
aaa
shl
lret
popa
mov
xchg
add
sarl
aas
sub
mov
out
add
stc
push
arpl
enter
jb
jmp
aas
std
mov
mov
jns
mov
or
es
inc
into
in
pop
dec
xchg
jge
jne
lret
xchg
push
adcl
cmp
mov
out
int3
hlt
push
sbb
sbb
test
dec
mov
mov
mov
cmp
fdiv
xchg
mov
xchg
adc
push
push
xchg
sbb
movsb
xchg
popa
loope
xchg
pop
pop
mov
outsl
cmc
sti
push
xlat
dec
loop
jge
push
insb
adc
jne
sahf
adc
outsb
adc
mov
jns
cmp
test
mov
outsl
mov
cmp
xor
add
test
mov
push
fstpt
int
fwait
clc
mov
lret
cmp
add
or
mov
inc
pop
test
or
xchg
xor
jmp
cmp
jae
mov
cmpb
jmp
xor
enter
xor
test
push
jae
push
adc
sub
ficoms
clc
xor
adc
sbb
jl
fxtract
or
pop
int3
jb
outsl
rcrb
jecxz
push
stos
in
xchg
loop
fwait
inc
rcr
fsubr
mov
xchg
testb
out
mov
cmpsb
popa
xchg
and
movsl
mov
into
jecxz
mov
and
stc
add
out
mov
mov
and
dec
inc
in
push
and
add
lods
imul
sbb
in
out
xchg
mov
jbe
mov
cwtl
dec
or
mov
aaa
mov
mov
popf
addr16
pop
ljmp
mov
or
loope
push
jg
lahf
cmp
cs
notl
jle
loopne
mov
lret
pop
xor
xor
out
cwtl
mov
or
jp
mov
lret
sbb
inc
xor
outsl
xlat
xlat
cs
mov
sbb
movsb
xor
adc
jecxz
into
cmp
es
ret
mov
stos
sbb
int3
fldl
inc
xchg
sbb
mov
sub
dec
cmc
mov
or
cmp
mov
lret
pop
arpl
daa
pop
loop
mov
ljmp
xor
adc
testb
std
out
push
inc
jnp
pushf
sub
mov
adc
orb
push
cmp
xchg
xor
adc
dec
sbb
mov
enter
pop
ss
ss
pop
ss
in
movb
xor
xlat
push
pop
movsl
mov
mov
loope
push
or
cmp
mov
lret
and
push
sub
mov
loop
leave
and
popa
cmp
fld
aaa
mov
jl
mov
xchg
scas
sbb
in
inc
leave
lea
ffreep
adc
rclb
mov
pop
fimuls
mov
pushf
sub
int3
loopne
jno
leave
xor
movsb
xchg
and
inc
push
lds
call
das
cmovae
rorb
adc
xlat
push
std
pop
mov
dec
jle
xchg
dec
in
popa
mov
rep
data16
pop
and
leave
inc
inc
lds
call
cmp
aam
out
rcrl
and
out
xchg
inc
in
dec
push
mov
pop
xor
push
jmp
pop
mov
sub
jl
xchg
inc
mov
mov
lahf
aaa
adc
rorb
popf
mov
sub
mov
popa
sbbb
dec
jns
addb
les
call
test
repz
cmc
imul
jo
and
xchg
pop
pop
xor
stos
test
sbb
or
jg
int
sub
hlt
test
ret
lcall
sbb
daa
cmp
mov
movsb
mov
insb
mov
inc
push
sti
lods
xchg
fwait
jmp
xchg
cmp
xchg
add
clc
mov
sbb
push
fs
sub
mov
enter
test
push
jbe
in
sub
push
pop
add
outsb
push
gs
out
dec
xor
mov
jmp
cmp
mov
js
into
add
leave
jmp
addr16
adc
ds
jns
fimuls
insl
or
push
lds
ds
mov
mov
scas
jae
adc
jnp
push
push
test
inc
js
pop
js
adc
rorb
pusha
int
fdivr
cmpsw
fstpt
mov
test
je
imul
sbb
push
lock
lods
test
sub
pop
mov
ds
daa
mov
stos
cmp
lcall
bound
hlt
xor
cmp
arpl
xor
jle
es
fucomip
jecxz
sbb
mov
andb
notl
stc
mov
repz
xor
ljmp
dec
int
push
arpl
jg
jge
adc
adc
cmp
pop
add
popa
cli
dec
imul
and
sbb
xlat
sbb
iret
pop
cmpsl
dec
cltd
mov
push
or
fistps
pushf
insl
jge
jne
les
jne
imul
subl
lea
pop
icebp
int
inc
imul
fs
mov
inc
sbb
pop
sub
leave
fsubrl
pop
jmp
and
cmp
and
mov
adc
jne
xchg
mov
dec
in
cmp
mov
pop
adc
push
dec
int3
repnz
fsts
stos
jns
int
out
lods
mov
or
mov
stc
lret
test
sbb
adc
fwait
call
jns
cmpsb
ret
dec
out
pop
ljmp
push
and
movsl
test
push
sbb
sbb
sbb
cwtl
mov
jnp
mov
bswap
add
mov
outsb
lcall
and
lcall
mov
lahf
stc
aas
jbe
test
neg
and
movsl
jno
cwtl
xchg
jne
xlat
cli
add
cmp
jle
jae
inc
add
dec
mov
push
cmpsl
cld
jns
jge
adc
mov
mov
push
aas
cmp
xlat
mov
jmp
mov
push
jnp
lret
sbb
arpl
mov
xchg
and
xor
popa
outsb
mov
dec
dec
lock
cltd
sub
mov
mov
mov
push
pop
addr16
cltd
pop
les
mov
arpl
subb
pop
and
sub
jg
dec
frstor
movsb
scas
in
outsl
loop
dec
cmp
cs
add
jg
pop
mov
or
pop
push
loop
cmc
adc
test
punpckhbw
roll
out
push
sar
outsl
and
lea
hlt
sahf
loop
mov
popf
dec
jbe
in
movsl
lea
in
cs
cwtl
aaa
and
push
add
inc
lds
push
pop
in
jmp
dec
leave
sub
scas
add
cmp
push
jno
pop
mov
sub
xchg
sbb
das
or
movsl
jae
adc
cmc
jecxz
cmp
lahf
andb
adc
shrl
roll
mov
ds
dec
stos
jmp
hlt
orl
or
sub
into
fdivrl
xchg
xor
fsubs
mov
cld
xlat
jnp
xchg
aam
repnz
mov
jge
mov
test
push
jns
lods
ss
push
inc
adc
pop
ja
call
outsb
mov
push
insb
or
jne
test
icebp
mov
fucom
dec
mov
lahf
xchg
test
sub
inc
xor
mov
xchg
jge
inc
pusha
scas
inc
shll
push
aaa
xor
mov
inc
mov
mov
xchg
cmp
pusha
push
sub
insb
call
inc
mov
je
sar
mov
sbb
mov
sub
les
push
xchg
int3
pushf
dec
js
stc
cmp
add
lcall
push
xor
inc
dec
pop
mov
inc
scas
adc
sub
hlt
add
adc
mov
pop
scas
insl
outsl
or
aas
fs
scas
add
sub
mov
lahf
sbb
pop
out
ret
fimull
lcall
scas
add
lret
xchg
pop
xor
clc
push
push
test
pop
or
test
repz
sar
sub
pop
dec
mov
out
in
lds
into
das
cmp
lret
jo
out
and
clc
inc
dec
cmp
dec
sbb
mov
imulb
test
or
cmp
cmpb
jl
mov
sub
mov
sbb
jl
ror
insl
fsubrl
or
inc
int
scas
cmc
pop
dec
repz
and
mov
fsubl
inc
xchg
xchg
ja
pop
addl
push
nop
je
push
cmp
lret
push
inc
in
lret
lods
inc
push
pushf
cli
jmp
sbb
mov
adc
or
pop
sub
jle
add
int3
mov
fwait
lahf
das
mov
mov
dec
mov
in
sar
cmp
fcomp
mov
fistps
pop
pop
subl
aaa
cli
or
sbb
and
test
outsl
mov
pop
add
fwait
mov
jmp
pop
arpl
in
push
das
insl
dec
fwait
inc
and
sub
jnp
rcll
ret
dec
mov
pop
inc
mov
push
mov
and
mov
insl
push
xor
dec
lahf
cmp
fisttpll
enter
aad
in
xchg
call
sti
adc
xorl
inc
jb
imul
hlt
jge
xchg
cmp
out
mov
mov
pop
push
xor
sub
or
sbb
ret
add
cmp
pop
mov
test
cmp
push
sbb
test
push
addl
mov
push
rorb
and
xacquire
pop
jae
lret
mov
cmp
int3
clc
xor
or
sub
push
xchg
sbbb
mov
rclb
ja
pop
cwtl
fnstenv
sub
and
cwtl
iret
out
mov
inc
sub
xor
ljmp
mov
mov
addl
loopne
cmp
xor
lea
mov
mov
dec
xor
aas
popa
jle
dec
aaa
pop
dec
imul
add
aam
or
xor
pop
dec
pop
imul
jno
mov
fwait
lock
ret
ret
pop
lea
cmp
pusha
xor
jns
adc
adc
push
and
mov
add
cmp
inc
dec
xchg
xor
imul
mov
add
and
pop
cmc
dec
scas
lcall
fdivl
jp
std
pop
jns,pn
fldl
sti
es
cmpsb
int
mov
adc
inc
and
stc
outsb
test
sub
aam
xchg
cltd
cmpsb
test
jb
outsl
pop
mov
cmp
es
add
mov
mov
pop
into
dec
pop
mov
adc
ret
mov
jnp
outsb
cli
mov
cltd
rcrl
inc
lcall
in
and
std
add
pop
rorb
in
sub
lock
lods
outsb
ds
dec
and
daa
ljmp
inc
cmp
dec
push
jb
push
cmp
in
imul
leave
bound
int
dec
nop
dec
int
leave
inc
push
cs
jno
sub
adc
dec
xor
aam
cld
fnsave
ret
adc
and
mov
test
push
xor
ja
int3
cmp
daa
insb
mov
push
ja
pusha
aam
cmc
fsubs
stc
imul
movsb
ret
and
movsb
push
idivl
mov
pop
adc
xchg
inc
fwait
loopne
outsb
ja
push
dec
add
xor
mov
fucom
dec
push
dec
fistpl
sbb
jo
xchg
dec
idiv
pop
jnp
dec
ret
mov
lods
dec
shrl
cwtl
inc
icebp
push
shlb
xchg
sub
lds
xchg
and
or
aad
mov
cmp
jge
and
sbb
xchg
aad
repnz
cmp
repz
test
adc
rolb
je
xchg
lds
mov
mov
pop
aam
movb
arpl
out
into
subb
inc
daa
push
inc
xor
bound
imul
repnz
sub
idivl
sub
lea
loopne
push
inc
jmp
or
fwait
outsb
and
pop
into
and
inc
xchg
fs
aas
mov
push
decb
and
testb
daa
xor
add
pop
fisttps
dec
or
shlb
lahf
xchg
cmp
jge
xchg
mov
aas
xchg
mov
xchg
jecxz
aam
test
xchg
dec
iret
pop
mov
outsb
nop
fisubs
rcrl
or
mov
es
jle
rorb
pop
mov
out
lcall
adc
or
dec
sbb
out
sub
mov
mov
lods
inc
mov
jmp
cld
pusha
not
into
sub
gs
lret
lea
sbbb
loop
cli
push
inc
loope
jne
in
das
cltd
lods
mov
dec
loop
or
and
insl
shl
decl
or
cmp
and
xor
dec
and
in
or
ret
dec
jo
dec
fistps
into
cs
dec
or
adcl
loopne
add
fs
dec
mov
hlt
jo
mov
lret
pop
gs
movsl
push
insl
ret
icebp
add
adc
adc
aaa
orb
mov
movsb
not
jl
sbb
pop
fdivr
push
lods
repnz
adc
or
push
imul
movsl
inc
popa
jnp
and
add
inc
lea
cmp
sub
lds
enter
push
leave
cmp
add
pop
pop
mov
dec
addr16
add
loope
mov
fcomip
out
adc
rolb
bound
fstl
pop
out
popf
sub
repz
dec
inc
sbb
xchg
cmp
push
aaa
dec
push
iret
xchg
out
pop
aad
xchg
fdivrs
adc
cmpsl
setne
add
fs
mov
cwtl
pop
jmp
add
les
or
adc
pop
leave
loop
add
loopne
inc
mov
shrb
movsb
cmpsb
xor
ds
xor
filds
xchg
lods
dec
xchg
aam
inc
jl
enter
fcoms
int
mov
adc
jl
xor
or
out
jmp
imul
out
stos
sub
loop
add
je
push
data16
add
insb
jp
shll
mul
in
test
cltd
cmp
flds
sahf
push
or
lcall
nop
subb
mov
lret
stc
jmp
sarl
rclb
mov
sub
stc
mov
aam
js
cmp
lcall
xchg
insb
rcr
jge
ja
popf
mov
mov
jnp
fnsave
jl
inc
lret
add
iret
insl
in
repz
fxam
in
test
pusha
lret
cmp
sbb
and
pusha
mulb
lahf
or
inc
add
pop
jb
adc
mov
sub
ret
push
add
sub
pushf
enter
leave
jle
adc
in
sarb
sbb
movsl
fisubs
jg
movsb
sbb
mov
or
cwtl
idivb
lahf
test
addr16
movb
fiaddl
mov
data16
rcll
mov
pop
xor
inc
adc
adc
or
and
dec
sbb
fsubl
jne
dec
jne
fsub
in
mov
aad
addr16
xor
xor
fcmovnb
in
iret
fstpt
pop
call
sbb
jb
dec
mov
dec
and
mulb
mov
pop
jnp
outsl
mov
xor
fistpll
mov
xchg
ss
mov
rol
lcall
pop
loopne
inc
add
jo
cmp
stos
and
push
mov
pop
xor
mov
insl
xchg
or
into
ret
pushf
shrl
or
rolb
jb
jp
out
sarl
ljmp
cld
xor
mov
pop
nop
aad
int
xlat
loope
cli
push
std
call
scas
jl
aam
icebp
mov
dec
fwait
mov
jge
or
xlat
jl
lods
sti
lcall
fnsave
int3
sub
jge
shll
cld
aad
int
xor
ja
je
adc
dec
push
or
mov
xchg
mov
stos
pop
xor
in
jb
add
push
jae
pop
movsb
repz
and
or
mov
repnz
lahf
or
mov
rcr
inc
ja
add
inc
fdivr
ror
jae
daa
add
sbb
sbb
call
sub
std
imul
outsl
mov
pop
adc
fcoms
inc
test
push
mov
jmp
sub
push
jp
push
mov
inc
dec
popf
lcall
shrl
ret
mov
add
popa
push
vcvtss2sd
subl
xor
mov
jnp
pop
rorl
mov
sahf
xor
sub
fidivrs
adc
adc
xchg
xor
stos
dec
push
jp
adc
push
jmp
daa
popa
xor
int3
sub
addr16
push
arpl
mov
adc
out
jo
test
in
inc
mov
adc
sti
mov
push
test
nop
mov
mov
xchg
stos
mov
int3
stos
pop
xchg
push
shl
adc
out
mov
mov
insb
push
sbb
cmc
subl
pop
mov
add
dec
pusha
push
cltd
les
cmp
jl
icebp
jmp
je
jbe
sub
add
fisttps
lret
inc
jo
outsb
ljmp
ret
mov
in
in
pop
enter
fsubr
sub
adcl
xor
cmp
push
pop
sbb
dec
push
jmp
xor
mov
jg
ss
xchg
xor
vandps
lods
lahf
jl
mov
stos
inc
repnz
jbe
jecxz
rcrb
cltd
inc
outsl
lods
xor
inc
adc
rclb
out
inc
mov
bound
jmp
add
testl
sbb
or
lods
sub
and
out
leave
add
fs
push
aas
in
pop
pop
jne
popa
or
mov
cmp
test
sbb
nop
out
in
lahf
cli
adc
loopne
stc
mov
sub
xor
inc
sbb
mov
mov
cmpsb
das
inc
ficompl
mov
cmpsl
mov
lock
hlt
test
cmp
pusha
into
xor
mov
es
cmp
int3
add
xor
pcmpeqb
cs
mov
int3
pop
mov
aas
xorl
aas
mov
adc
mov
fmull
add
jg
andl
sub
mov
ficompl
movsb
mov
cmpsb
mov
sti
xor
aam
xor
daa
bnd
jno
mov
push
rorl
sub
jmp
fwait
lret
push
xor
insb
ds
pop
cmc
test
jbe
inc
add
fistps
mov
dec
mov
dec
test
sub
std
cmp
xchg
push
lods
jnp
and
sub
addr16
and
jle
cmp
or
sub
xchg
add
sub
jmp
adc
mov
cmpsl
sbb
loope
adc
lret
fwait
lahf
dec
lret
jb
mov
cwtl
push
ror
shlb
add
add
scas
sahf
lcall
in
sbb
push
ret
pop
dec
jl
in
sub
sbb
adc
imul
push
fnstcw
lret
int3
jmp
jge
sbb
push
in
push
inc
or
jmp
call
pop
ss
mov
adc
mov
push
popf
popa
lcall
xor
movsl
jo
test
loop
insl
shlb
imul
enter
mov
pushf
scas
push
inc
ja
xchg
in
int3
pcmpgtb
and
or
push
xchg
xchg
je
nop
adc
mov
lods
pop
jne
pop
repz
rorl
inc
mov
xchg
sbb
fdivrs
scas
enter
je
xchg
mov
push
lcall
dec
std
daa
xchg
jmp
lret
pop
inc
push
test
xchg
cmp
jo
push
call
mov
add
ja
cmp
push
sbb
sbb
aaa
repnz
sbb
push
pop
push
js
mov
cmc
mov
divb
cld
pop
fcomps
mov
push
hlt
sbb
mov
cmp
pop
mov
sbb
push
mov
add
insb
clc
test
imul
lds
xchg
xchg
ret
dec
stos
adc
dec
xchg
cli
rcr
sahf
push
jae
cltd
xchg
and
data16
cmp
cld
push
imul
pop
xor
jne
flds
sbb
add
lods
cmpsb
enter
jns
rcr
and
jle
mov
enter
xchg
lock
and
add
push
aad
jnp
inc
cmp
fs
dec
sbb
inc
adc
jo
mov
dec
push
jl
pop
out
jns
movsb
lcall
into
sub
and
out
leave
or
mov
mov
mov
sub
push
xor
sub
xchg
repz
or
stos
or
jbe
dec
loope
pushf
xchg
or
and
fadd
add
push
test
ret
pop
in
shll
cmp
dec
inc
push
lea
adc
mov
jns
divl
lret
es
push
push
stos
popl
ret
mov
movsb
adc
aad
in
push
fsubl
dec
mov
aad
dec
ffreep
pop
add
lret
fstpt
je
ja
push
je
repnz
ljmp
mov
xor
es
mov
inc
mov
cli
sub
mov
dec
loope
ror
xor
push
and
data16
pop
mov
ljmp
rol
mov
adc
popa
adc
lods
repnz
xorl
xlat
dec
je
push
ljmp
dec
xchg
mov
ss
aas
adc
cs
inc
add
dec
ret
xchg
in
sbb
repnz
sbbb
cmp
hlt
hlt
div
or
cmp
jg
jge
xchg
pop
pop
div
pop
mov
pop
mov
les
mov
test
pop
and
popa
mov
or
std
loop
sahf
and
imul
pop
inc
ret
cld
push
cmp
jmp
stc
and
adc
lahf
mov
and
pop
mov
flds
adc
aas
fistpl
add
adc
mov
adc
dec
sarb
divl
insl
xor
or
add
mov
daa
sub
out
aad
jae
sbb
adc
ja
sahf
in
lods
lods
or
mov
test
mov
mov
adc
mov
scas
fisttps
or
jl
push
cwtl
and
nop
mov
std
stos
loopne
ss
xor
add
test
jbe
xchg
xor
adc
lods
xlat
jo
jne
jmp
outsb
fcmovbe
mov
push
sub
ret
xchg
dec
or
pop
pusha
jne
stos
pop
test
sub
add
jno
stos
xor
jne
cs
nop
xor
mov
pushf
mov
int3
pop
movsl
jb
bound
aad
stos
and
dec
push
hlt
ljmp
jo
cltd
push
and
dec
add
cmc
shll
mov
adc
lret
adc
stos
sbb
js
push
inc
roll
and
movsl
jne
xor
negl
add
cli
cs
outsl
fdivrs
cmp
mov
mov
es
jbe
sarb
cwtl
mov
stos
xchg
push
cmp
add
dec
fwait
and
push
add
xchg
sbb
sub
or
dec
push
loopne
stc
and
jl
or
bnd
shlb
cmp
sbbl
or
dec
lcall
sahf
insl
jl
push
outsb
addr16
xchg
bound
sbb
inc
repz
mov
loop
inc
push
lret
test
cmpsl
fnsave
fdivp
push
mov
push
mov
mov
in
sub
jne
mov
cmp
gs
call
push
mov
jo
cmp
lock
into
cmp
adc
sbb
pop
pop
sti
or
mov
test
popf
fdivrs
sbb
xchg
test
pop
jge
jge
mov
and
das
push
jne
mov
adc
mov
call
mov
cmp
leave
in
ret
test
mov
popa
int3
sub
shll
mov
mov
sub
jbe
push
inc
leave
adc
xor
insl
or
repz
mov
iret
jl
outsl
in
loope
mov
mov
xchg
sub
xchg
dec
dec
stos
out
lods
jno
jno
addr16
or
pop
sarb
mov
andl
and
dec
push
popf
jle
pushf
outsl
xchg
je
iret
popa
pop
pop
jge
lahf
push
push
in
rol
repnz
stos
mov
int3
sub
dec
and
add
add
adc
andb
add
add
add
and
add
add
add
cmp
adc
add
adc
imul
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
xor
add
xor
add
add
add
push
mov
popf
fmull
sub
jo
jnp
add
loope
add
xor
pop
or
in
jb
jne
cmp
or
dec
xchg
rolb
icebp
pop
or
clc
repnz
push
add
xorps
cli
inc
out
inc
aam
cmp
mov
loopne
dec
jecxz
call
add
sbb
ss
pop
in
hlt
jne
in
jge
int3
es
mov
je
mov
pop
jno
rep
in
dec
or
push
sub
enter
jge
mov
shl
or
inc
outsl
dec
mov
sbb
orb
xchg
or
xchg
int3
pop
hlt
iret
data16
and
and
roll
inc
stos
add
pop
sub
fwait
int
adc
popf
or
loopne
incl
js
or
setg
dec
out
or
scas
icebp
cmp
cmp
jg
icebp
cmp
mov
icebp
xor
xchg
push
hlt
and
dec
aam
mov
call
inc
add
imul
add
pop
lea
dec
cmp
repz
ds
sub
call
or
push
sub
shll
nop
pop
push
jne
and
or
pop
outsb
mov
and
movsb
cmpsb
pop
or
sbb
out
repz
or
js
pop
scas
mov
rolb
addps
sub
mov
jbe
xor
mov
push
add
add
cli
mov
or
incl
jmp
popa
andb
pop
xchg
and
bound
adc
je
cwtl
lock
cmpsl
outsb
or
or
lahf
test
adcl
add
mov
or
cmp
cltd
or
insl
std
add
je
sahf
adc
push
imul
rol
ljmp
or
adc
outsb
lods
and
inc
inc
jns
fldl
push
cltd
dec
fmull
pop
cwtl
and
sbb
adc
jge
dec
xchg
jmp
pop
movl
add
lea
or
pop
daa
push
mov
test
cmp
push
mov
clc
adcl
es
cmpsb
sub
cmpsb
mov
mov
jae
mov
sbb
bound
inc
pop
sub
mov
add
xor
in
mov
lea
push
clc
test
adc
push
jmp
mov
pop
jmp
sbb
dec
js
pusha
fmull
test
jp
dec
jae
mov
pop
lea
mov
dec
fstp
jne
out
imul
je
add
pop
push
sbb
loope
out
mov
inc
sbb
mov
mov
loop
enter
enter
sub
adc
or
mov
or
xor
xor
jmp
mov
inc
bound
mov
or
popa
jno
or
les
sub
andb
push
pushf
bound
test
sbb
das
xor
pop
rorb
fsubs
lock
cwtl
adc
sbb
inc
inc
mov
sbb
repz
jl
movsb
cs
sar
inc
jecxz
pop
decl
push
push
nop
or
incb
mov
sbb
gs
sbb
out
insl
add
jb
js
cld
in
xchg
lock
lea
mov
adc
shlb
push
imul
or
sub
inc
dec
cli
jo
fimull
mov
shl
lret
stc
xchg
jecxz
push
adc
add
push
mov
decb
jo
mov
adc
add
call
jno
push
sub
jne
lea
mov
and
or
jge
dec
test
adc
dec
adcl
mov
adc
push
dec
data16
or
jl
add
sahf
push
and
inc
mov
es
xchg
test
lock
lret
add
mov
pop
inc
dec
addb
dec
cmp
sbb
jb
xchg
pop
adc
mov
mov
sbb
mov
stos
add
push
cltd
push
pop
divl
cmp
pop
jl
push
mov
push
mov
xchg
fstpt
enter
fs
loop
xchg
leave
fldl
fildl
push
call
cld
add
mov
lea
sbb
sbb
jo
adc
lea
test
orb
or
dec
test
push
inc
add
mov
roll
and
incb
and
push
ss
and
insb
cs
lcall
pop
xchg
and
mov
dec
lahf
sbb
inc
add
or
or
test
fstps
mov
ss
gs
sbb
adc
test
rcr
and
add
sbb
mov
pop
push
adc
xor
pop
les
unpcklps
les
sbb
fsub
sub
add
insb
or
push
mov
cmp
test
stos
and
les
push
mov
sub
cli
push
jnp
inc
iret
inc
in
movsl
les
cmp
push
add
push
aas
flds
daa
push
push
push
push
call
xor
pop
adcb
mov
adc
inc
cld
pop
add
sub
outsl
das
fisubrs
test
jbe
add
lea
lods
stos
dec
add
add
jae
test
sbb
mov
jnp
ljmp
pop
or
outsl
add
mov
js
sbb
xchg
fists
sub
lea
dec
push
data16
dec
push
ja
xchg
sub
mov
call
enter
shlb
xchg
shrl
mov
inc
mov
lcall
mov
inc
and
push
shrb
mov
lea
inc
jne
mov
jmp
mull
push
xorb
and
lea
push
and
push
orl
inc
inc
mov
aas
fstpl
mov
adc
push
xor
or
and
and
add
inc
lock
add
add
rol
xor
sbb
or
xor
dec
mov
cltd
mov
add
add
ret
enter
cld
scas
cmp
inc
pop
or
aas
pop
aam
push
add
push
and
xchg
popf
dec
nop
ficoms
out
mov
jno
fadds
je
push
push
jne
ret
pop
push
rolb
stos
pop
add
jmp
popa
testb
outsb
leave
push
or
mov
jo
adc
pop
add
cmc
sar
hlt
dec
cltd
or
pop
cmpsb
push
inc
call
sbb
xchg
leave
add
je
fs
dec
or
pop
cmp
sbb
movzwl
test
jge
adc
jns
jbe
js
insb
inc
push
mov
adc
add
clc
cmp
jge
nop
push
inc
movzbl
rolb
push
cld
sub
je
dec
or
xlat
jne
sub
jbe
pop
or
xor
adc
push
add
scas
pusha
inc
jmp
pop
pop
xchg
mov
xor
mov
inc
movsb
push
sub
std
push
aaa
pop
push
mov
sbbl
add
jbe
push
push
call
pop
mov
dec
xor
push
push
fdivs
test
aam
fmull
mov
rcll
dec
xchg
loopne
or
jge
dec
pop
or
cmp
test
add
movsl
sbbl
icebp
jnp
mov
push
aam
sbb
stos
and
or
mov
cmp
ret
add
mov
or
or
adc
push
aaa
xchg
sub
mov
adc
bound
jecxz
push
outsb
dec
sub
push
ss
pop
gs
adc
test
mov
hlt
push
daa
dec
or
dec
enter
and
push
push
std
popf
push
in
lahf
rolb
sub
inc
sub
adc
push
in
jmp
lret
mov
cli
cmp
jne
push
stc
jmp
fidivl
jl
and
pop
adc
loopne
sub
pushf
dec
dec
mov
in
in
pop
inc
mov
sub
leave
ljmp
xlat
repnz
cmpb
pop
sbb
and
jae
call
dec
or
into
push
jle
test
and
add
push
push
call
sbb
mov
clc
dec
test
out
sub
insl
jae
bound
in
and
inc
or
subl
rclb
pop
and
inc
les
inc
mov
cli
jb
aas
test
divl
push
adc
into
jge
mov
adc
jp
jge
jbe
testb
dec
lahf
mov
je
push
movsb
jg
test
cmp
push
rcr
inc
je
data16
inc
jecxz
inc
enter
push
dec
mov
push
and
pushf
aad
test
adc
add
xor
icebp
mov
adc
dec
or
inc
jmp
mov
cld
insl
ror
sbb
inc
cmp
mov
jl
sbb
sub
jmp
push
lea
mov
or
mov
test
testb
mov
pop
mov
jb
movsl
and
xor
mov
and
push
xchg
and
pop
inc
jo
insb
push
imul
and
jecxz
lahf
or
jae
and
jne
in
rclb
icebp
popf
cmp
lahf
fs
arpl
insb
repnz
in
je
bound
ss
fs
inc
jno
rolb
cltd
andb
insb
and
xchg
xor
sub
shll
lds
pop
fwait
xor
pop
dec
outsl
push
dec
popa
addr16
inc
outsl
js
shll
js
data16
pop
fs
stc
dec
pop
xchg
inc
sub
cltd
imul
insb
xorl
dec
sarb
cmovs
fs
mov
push
sbb
inc
sahf
je
test
push
insb
sbb
mov
imul
subl
test
cmpsb
cli
sbb
dec
daa
mov
dec
or
mov
add
pusha
mov
mov
cld
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
mov
adc
jl
add
dec
or
add
sub
add
and
add
adc
add
inc
add
and
add
adc
mov
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
