call
in
sub
push
push
lea
push
push
xor
call
cmp
out
out
sbb
pop
mov
je
push
mov
fcoms
inc
fcmovu
mov
mov
cld
sub
push
push
sti
fistl
movb
clc
add
pop
pushl
leave
mov
add
push
jne
push
jg
push
jnp
mov
sbb
jne
push
pop
or
or
lret
add
mov
leave
ret
xchg
add
pushl
test
pop
jle
mov
pushl
call
pop
xchg
mov
jmp
adc
or
and
push
out
mov
in
add
test
cmp
push
je
insb
and
cmp
cmp
add
in
inc
or
push
jne
inc
or
std
idiv
and
or
inc
push
push
mov
fcmove
sti
loopne
dec
bound
inc
xor
mov
pop
cwtl
ja
pop
push
cmp
xlat
and
cmp
jle
add
jg
loopne
jne
lea
outsl
jbe
in
push
push
movl
iret
mov
movzwl
lds
push
stos
cmp
sbb
std
sbb
push
and
sbb
out
and
push
outsb
jmp
mov
addl
jno
sbb
or
jg
pop
imul
mov
push
fstpt
test
jo
push
add
ljmp
cmp
sbb
iret
add
xchg
add
rdmsr
and
jns
or
jl
ja
pop
inc
mov
add
push
jnp
cmp
cmp
mov
ret
mov
inc
aad
pop
mov
mov
xchg
mov
pop
cmp
mov
jnp
or
mov
cmp
xchg
cwtl
inc
push
mov
sbb
jne
pop
out
sub
shrl
adc
sub
pop
pop
pop
fisttpll
push
push
lea
repz
lea
pop
jns
jle
dec
sti
imul
inc
adc
adc
fldt
sti
pop
push
push
dec
mov
pop
pop
mov
pop
fsubrp
or
push
clc
cld
lock
jge
jge
mov
jbe
xor
jmp
ja
push
pop
cld
cmp
hlt
dec
pop
cmp
leave
repnz
sub
cmp
xor
cld
cld
mov
sbb
shl
add
dec
hlt
adc
or
sbb
xor
mov
ljmp
pop
mov
jge
loope
ljmp
cmp
outsl
jb
js
adc
movl
aas
js
in
adc
bound
data16
push
addr16
cld
pusha
add
push
andb
rcrl
sahf
aad
push
aaa
out
mov
jge
mov
push
push
les
clc
pop
icebp
lahf
jns
pushf
xlat
cmp
setg
pop
add
sbb
jmp
dec
lock
lea
mov
jne
movl
mov
and
xor
or
icebp
jp
xor
cmpl
stc
cli
pop
aam
lock
je
sti
movsb
add
xchg
cmp
jg
call
aas
inc
pushl
pusha
mov
push
data16
das
xorl
inc
cs
ret
enter
mov
int
cs
loopne
jge
addb
add
mov
out
and
jae
cmpb
inc
pop
add
fldl
add
sbb
mov
adc
mov
fiaddl
movl
movaps
in
jno
in
cmp
add
lahf
jge
enter
repz
jnp
clc
or
cmpsl
push
adc
adc
imul
adc
data16
mov
nop
adc
lahf
les
pandn
mov
jbe
xor
cld
jnp
ret
call
les
leave
and
add
xchg
xor
adc
adc
xor
xor
add
mov
shlb
imul
dec
aam
pop
sub
nop
test
stc
bound
aas
int
xchg
xchg
mov
mov
adcb
test
repz
jne
arpl
pusha
cmp
jo
cld
jae
cmp
jne
push
xor
in
push
xlat
sub
les
lock
lret
ret
mov
mov
sbb
fwait
in
xor
jo
jne
mov
push
enter
out
and
sti
xor
pop
or
adc
adc
imul
insl
hlt
xchg
mov
dec
lds
dec
fsubrs
scas
rorl
fwait
sub
jmp
pop
adc
insb
cmp
push
pop
inc
cmp
xchg
pop
push
cmp
mov
sbb
out
test
xor
roll
cld
mov
enter
push
push
stc
sub
or
add
adc
xchg
ret
sub
mov
adc
or
cltd
inc
pusha
xchg
and
or
xchg
je
sbb
pop
fsubrs
pop
hlt
out
push
jbe
pop
loope
gs
jae
push
sub
push
cmp
fcompl
aas
rcl
test
incl
testl
jmp
adcb
pop
push
jecxz
je
das
mov
push
pop
or
sbb
sub
out
ret
xchg
and
mov
mov
pop
mov
std
mov
ficoml
push
xor
xor
sub
lea
push
push
push
and
jbe
jg
daa
cmc
and
pop
cmpb
push
inc
jge
daa
adc
shll
lock
dec
sub
lock
addb
mov
dec
fidivrs
mov
jg
lret
mov
sub
cmp
jge
movzwl
repz
cli
or
lock
pop
addb
push
xor
ja
dec
add
pop
sbb
shll
mov
rol
sti
xorl
mov
or
fistpll
dec
xor
shlb
je
adc
or
mov
push
push
scas
ret
dec
xchg
lods
mov
cmpl
icebp
add
je
rolb
mov
adc
push
ja
shlb
out
xchg
add
inc
pop
mov
loopne
xor
aaa
cld
aaa
clc
pop
cmp
jmp
mov
mov
push
insl
sahf
es
xchg
in
cmp
mov
add
shll
mov
dec
scas
and
adc
orb
rorl
mov
cmp
jge
jp
imul
cld
add
mov
call
xchg
orb
outsb
sub
adc
cwtl
or
shl
cld
in
insl
xchg
dec
divb
push
xor
cmp
mov
leave
shr
in
push
out
out
mov
jne
sbb
sbb
fmuls
mov
push
push
call
and
pushl
pushl
inc
movsb
loope
in
sbb
or
mov
adc
in
jb
arpl
or
jnp
cltd
flds
adc
xor
jl
or
sbb
push
call
sub
xor
xor
pop
cmp
or
int
sbbl
sti
jg
call
daa
pop
pushl
adc
add
pop
loopne
stc
adc
fildl
push
aaa
bswap
xor
js
fists
and
inc
xchg
psubb
decb
test
bound
dec
in
in
test
push
xchg
sub
in
enter
or
in
jbe
pop
and
sub
cmpsl
out
aam
movsl
into
nop
inc
push
inc
jnp
add
je
mov
aad
ss
dec
movsl
mov
jns
call
mov
movsl
call
pop
loop
sbb
sti
je
in
lods
insl
xchg
aaa
xchg
call
sub
loope
push
cwtl
sbb
stos
popa
cmpb
jb
sbb
movsl
inc
prefetch
imul
add
xor
in
scas
por
mov
push
repnz
cmp
adcb
sub
pavgb
outsl
cmp
push
loope
push
movsl
in
xchg
test
enter
int
inc
mov
jmp
add
mov
cmc
push
push
out
jg,pn
cmp
mov
or
or
lock
cbtw
jmp
or
pop
or
xor
or
ja
push
push
mov
arpl
add
fsubp
or
orb
mov
int
sub
incl
adc
sub
xlat
and
mov
jne
add
pop
mov
mov
jecxz
int
push
in
mov
aaa
outsl
and
and
int3
xchg
adc
fidivrs
stc
push
dec
aaa
cmp
inc
mov
je
clc
inc
mov
add
mov
mov
imul
pop
stc
mov
decb
sbb
push
shr
shl
add
shlb
rcrl
fidivrl
mov
scas
mov
rolb
mov
sti
loopne
pop
shll
fcomps
test
mov
xor
jnp
imul
les
cwtl
mov
int3
insl
cmp
cmp
std
fists
in
push
push
or
push
push
mov
insl
icebp
cltd
pop
push
in
xchg
push
ljmp
sbb
mov
dec
sub
aaa
das
imul
and
cmpb
xor
add
in
pop
xchg
arpl
adc
call
adc
mov
pop
pop
leave
or
ja
addr16
push
test
mov
fwait
out
push
out
jne
mov
js
adc
data16
add
push
mov
dec
jnp
add
ret
push
fiadds
imul
int3
push
push
push
or
xlat
inc
mov
sti
push
pop
dec
divb
inc
cld
or
add
xor
js
mov
scas
pop
cmp
mov
outsb
fnsave
xchg
and
add
and
dec
adc
cmp
jg
mov
xchg
adc
pop
mov
dec
repnz
jl
add
inc
or
inc
push
adc
pop
adc
adc
and
or
mov
add
sub
jne
push
push
loope
sbb
inc
sbb
repnz
adc
add
push
or
pop
rorl
mov
xchg
xlat
push
clc
ret
addr16
add
add
sub
icebp
push
xchg
sub
adc
pop
jnp
testl
push
sub
cld
fnstenv
cwtl
xor
xchg
out
xchg
adc
add
setp
add
pop
push
jmp
xlat
push
shrb
cltd
pushf
pusha
push
pop
out
add
mov
or
repz
movl
pop
adc
ret
dec
fiadds
push
push
xor
sub
and
mov
jge
jo
sbb
add
jns
cwtl
je
add
mov
or
cld
push
repz
jno
mov
pop
xor
jbe
xchg
jo
jnp
sub
clc
roll
mov
aas
adc
outsl
sub
jne
cld
inc
dec
cs
pop
mov
test
jne
cmp
ja
out
cltd
test
test
loop
sub
xchg
flds
push
lods
je
insl
imul
dec
cwtl
jmp
push
xor
sub
inc
push
mov
sbbl
xchg
adc
and
shrb
adc
inc
push
adc
mov
push
pop
lock
pop
jmp
aad
lock
bound
pop
sbb
pop
hlt
lea
lock
or
xchg
xor
mov
push
sti
ds
out
jne
and
leave
shlb
or
mov
xchg
std
pushl
or
cmpb
jne
cmp
jne
movsbl
movb
add
mov
push
pop
adc
mov
dec
sub
cmp
jge
jle
xchg
movzbl
jle
sbb
jno
lahf
and
popf
push
inc
jne
fcomps
icebp
arpl
pop
pushl
mov
xor
lods
mov
sbb
jge
xor
lea
mov
popf
inc
push
int3
lds
jle
xor
xor
pop
int3
mov
cs
mov
xor
gs
mov
movsb
fildll
in
lahf
pop
aam
sub
sbb
mov
ret
push
int
lcall
call
mov
call
addl
jmp
jl
jmp
sbb
je
notb
push
push
mov
dec
add
es
ficoms
add
imul
test
mov
push
push
sub
xchg
imul
xadd
imul
fsub
les
pop
sbb
std
or
sbb
cmp
je
js
roll
cmpb
add
jae
xor
xor
loopne
xor
inc
push
fcomp
mov
inc
xor
add
inc
mov
mov
arpl
mov
insl
push
cmp
push
dec
xor
add
adc
shll
dec
push
int3
cmp
or
stos
jno
aas
mov
or
mov
ds
xor
scas
cmpsl
add
add
scas
lock
and
or
jnp
pop
repnz
sub
jbe
push
add
js
mov
jae
popa
pop
sar
lods
inc
ja
push
xchg
push
rolb
inc
pop
mov
das
mov
ret
dec
ja
or
jo
outsl
lcall
sbb
jge
xor
cmp
push
mov
aam
jno
dec
jnp
fdivrs
sbb
pop
jmp
mov
pop
add
idiv
add
mov
ds
in
add
push
pop
mov
adc
vphaddubq
push
movsl
xor
push
rorb
adc
adc
aaa
and
or
mov
pop
pop
rorl
pop
test
add
insl
or
push
fldl
cld
or
add
or
cltd
daa
scas
ja
les
enter
push
es
mov
inc
push
mov
cmp
enter
in
push
jns
dec
movsb
lret
or
pop
enter
mov
jb
xchg
test
or
in
and
pcmpgtb
pushl
push
push
insb
sub
dec
mov
mov
ss
pop
adc
je
outsl
fs
inc
es
adc
inc
add
xor
cltd
nop
xchg
out
cltd
and
add
push
or
jl
inc
pop
push
int
in
outsl
sbb
enter
enter
lods
repnz
pop
movsb
or
nop
cmp
and
mov
push
enter
push
js
inc
outsl
xchg
sub
xchg
mov
pop
enter
dec
sub
iret
add
sbb
sbb
or
push
jnp
cld
outsb
push
sbb
outsb
cmp
dec
enter
or
adcb
int3
shrb
dec
jb
dec
mov
cmp
test
dec
test
cs
scas
pushf
je
es
leave
test
iret
inc
mov
test
jns
xchg
pop
dec
jl
inc
cltd
in
push
js
jo
jb
or
inc
insb
fcoms
lahf
pusha
test
xchg
cmp
jbe
pop
pop
nop
dec
cs
cs
repnz
es
xor
test
lods
xor
enter
xor
jns
xchg
sub
inc
and
cltd
in
mov
enter
jg
daa
mov
push
inc
in
test
add
inc
xor
and
jb
pop
hlt
insl
mov
lock
inc
es
aas
loopne
xor
test
fmuls
jae
test
adc
mov
ds
insl
and
push
inc
mov
cmp
dec
sub
clc
jne
shl
xor
insl
add
cmp
popa
xor
sbb
and
add
jmp
mov
lods
insl
pop
fldenv
jle
ja
inc
aaa
or
enter
loopne
push
jge
nop
inc
pop
insb
push
xor
cmp
mov
xchg
or
mov
cs
stc
cmp
fs
or
sbb
or
das
test
add
pushf
nop
xchg
hlt
insb
loopne
in
test
loopne
or
in
cmp
inc
cmp
shlb
pop
mov
or
pop
das
sbb
pop
nop
inc
and
mov
sbb
pop
lea
das
in
jge
aaa
push
icebp
lahf
pop
inc
test
divb
adc
sbb
mov
lea
push
fwait
inc
mov
jnp
xor
xchg
push
nop
jb
xchg
pop
cmp
dec
test
xor
or
dec
push
jb
mov
mov
jo
push
stc
xor
pop
enter
push
inc
push
jns
sti
xor
or
nop
dec
cs
cmp
inc
es
enter
stc
xor
pop
enter
and
dec
jb
xchg
sbb
adc
xor
test
or
dec
cs
xor
mov
add
imul
dec
xor
cmp
fs
or
hlt
and
pop
enter
cs
xchg
loopne
sub
inc
mov
dec
cs
pop
int3
inc
nop
sbb
mov
sub
inc
pop
enter
cld
sub
mov
les
add
ljmp
sbb
push
push
mov
xorl
cld
cld
enter
lods
clc
mov
mov
shlb
sbb
inc
cld
std
scas
add
push
std
add
add
outsl
subl
mov
sub
sbb
test
mov
mov
sub
dec
lea
popf
mov
daa
icebp
shrb
jne
dec
pop
dec
shl
imul
and
fisttps
mov
loope
jle
pop
in
push
xchg
pop
leave
or
mov
jne
push
movb
add
mov
xor
push
and
loopne
sbb
clc
cli
push
push
push
shrl
imul
sub
adc
dec
xor
iret
fs
enter
lock
je
and
imul
pop
out
sub
mov
pushf
mov
jb
inc
icebp
insb
imul
imul
leave
or
setb
mov
adc
pushf
inc
cs
imul
sub
rolb
push
and
sub
sub
imul
mov
sbb
pusha
cmpsl
in
add
push
cmpl
xlat
dec
mov
lock
and
out
mov
push
test
push
loopne
push
push
push
out
pusha
adc
pop
cmp
push
and
jl
call
push
arpl
insb
jmp
add
xchg
xorl
xchg
adc
mov
mov
xchg
mov
xor
fcomi
dec
or
lcall
mov
imul
adc
je
aaa
adc
jecxz
cs
adc
mov
movb
enter
push
leave
sbb
lock
jno
sub
dec
xchg
and
arpl
push
setg
push
fistps
dec
adc
fs
jnp
je
push
sub
add
add
icebp
mov
and
mov
push
mov
in
addr16
nop
jbe
cmp
addl
push
mov
mov
insb
enter
xor
push
jns
xchg
mov
pushf
in
or
push
loope
test
add
add
and
rcrb
cmp
test
aaa
jmp
je
push
push
lahf
imul
hlt
data16
pop
call
push
sahf
fwait
xchg
mov
mov
arpl
mov
rol
ljmp
jp
ret
test
addr16
cmc
cmp
test
sub
and
nop
dec
cs
mov
es
xor
test
imul
pop
push
dec
jmp
es
inc
or
and
fs
push
xchg
pop
enter
leave
test
and
in
pop
xor
sbb
xor
sbb
mov
sbb
xor
nop
inc
pop
xchg
sbb
jl
cmp
daa
clc
gs
sbb
or
and
jb
push
movsl
pop
enter
dec
nop
adc
xchg
xor
fcoms
nop
dec
cs
mov
mov
xor
test
mov
sbb
inc
movsb
in
adc
test
lret
and
cmp
mov
xor
mov
movsl
adc
and
jb
mov
inc
pop
sbb
repnz
es
out
push
int
lret
in
or
das
xchg
jne
inc
xchg
lcall
popf
mov
dec
aaa
cmp
or
cmp
sub
jb
or
sub
enter
sbb
jns
in
adc
or
in
das
fs
add
fs
dec
es
in
out
or
test
pusha
and
cs
lret
adc
xor
lock
pop
or
fs
fiaddl
push
mov
fildl
lret
mov
test
icebp
xor
vmovsd
inc
cmp
or
sti
inc
les
sbb
mov
xchg
enter
or
jbe
sbb
sub
repnz
movsb
lea
and
icebp
inc
xor
int3
test
insb
or
xchg
popa
xchg
cmp
inc
xor
push
popf
outsb
jbe
push
pop
jl
jl
je
inc
hlt
inc
loop
gs
adc
stc
mov
mov
enter
lcall
pop
mov
addr16
mov
or
test
icebp
sbb
rep
xor
in
sub
nop
xor
cmp
jne
sbb
xor
cmc
mov
add
xor
ret
adc
adc
jns
cmp
pushf
sbb
int
sbbl
scas
shlb
inc
movsb
idivb
adc
adc
pop
out
cmp
jnp
jmp
push
inc
sbb
test
jge
push
and
enter
adc
mov
cwtl
testb
dec
adc
lods
and
push
adc
in
add
imul
xor
je
sub
shll
lods
loope
aaa
jecxz
addr16
adc
mov
dec
cltd
adc
push
and
js
bound
xor
das
enter
in
loopne
and
xor
jl
adc
shl
idiv
gs
in
divl
sti
sub
jno
insl
jge
data16
cmp
int3
mov
lahf
pop
dec
cld
adc
jl
sbb
and
imul
adc
or
dec
inc
pop
xor
xor
or
sub
add
inc
test
cld
cmp
and
or
cld
pop
xor
sti
lds
lock
and
add
lods
cmp
add
call
and
repz
cld
push
sar
fcmove
pop
in
xor
or
int3
cmp
jg
dec
ret
cmp
cli
pushl
sbb
mov
out
xchg
xchg
out
sbb
jns
in
jae
push
sti
mov
sbb
sbb
sbb
sti
and
and
xor
arpl
lock
in
xor
inc
inc
mov
and
ja
jo
adc
adc
data16
xchg
jns
dec
jmp
adc
push
ret
cwtl
lea
cmc
mov
mov
sbb
push
xor
xor
jmp
xchg
pop
shrb
push
clc
ret
mov
cmp
sbb
lods
test
or
test
or
out
and
xchg
cwtl
cld
mov
fisubrs
cmp
sub
adc
cmp
cmp
jbe
mov
ss
out
cmp
adc
movsl
cltd
sti
ljmp
pop
out
push
jg
je
aaa
push
jnp
sbb
rcr
pop
adc
hlt
std
stos
fidivrl
sbb
jmp
mov
enter
cmp
mov
jb
lea
addb
mov
sub
pop
add
mov
cmp
je
out
add
les
xchg
popa
add
test
pop
iret
imul
inc
pop
cmp
adc
shlb
cld
sub
or
jne
cltd
pop
or
in
jne
std
ret
jg
push
jl
jl
mov
jb
mulb
sbb
js
sbb
jne
cmc
mov
and
jmp
decb
xchg
rolb
clc
dec
adc
pop
mov
fnstsw
lcall
cmp
inc
cmp
das
mov
cmp
jl
mov
sub
ret
bnd
push
or
inc
sahf
xor
xlat
cld
mov
jns
cmp
and
or
adc
stc
xor
or
add
add
fisttps
jge
adc
les
sub
mov
data16
lds
sbb
push
outsb
push
lea
popa
jb
cmp
add
sbb
push
jo
popa
mov
je
xchg
mov
push
cwtl
inc
mov
mov
into
les
lret
pusha
or
adc
loope
es
inc
fadds
fdivrs
inc
xor
gs
lea
xor
andl
push
fistpl
xor
lahf
pop
in
mov
or
andl
dec
dec
mov
xchg
stc
pushl
popf
rolb
daa
cmpb
orl
lahf
push
ret
out
loopne
pop
and
push
inc
gs
cmp
inc
xor
nop
movq
or
or
and
pop
sub
sbb
outsb
pushl
sbb
push
mov
popf
push
in
pusha
inc
pop
inc
sti
lods
or
push
mov
cltd
pop
inc
xchg
add
adc
cli
mov
js
sbb
and
clc
sub
data16
gs
lods
sbb
adc
call
mov
xchg
enter
or
adc
fnstenv
or
pop
fwait
pusha
sbb
xor
loopne
jl
shr
sbb
stc
aaa
out
add
add
sahf
cmp
xchg
sub
bound
adc
add
orb
shlb
adc
adc
push
jp
push
mov
xchg
mov
mov
xor
call
push
sti
push
mov
mov
sub
or
jg
pop
enter
cmpsl
ret
iret
arpl
jb
cmp
mov
jecxz
adc
cmp
repz
repnz
stos
cwtl
cmp
sar
nop
popl
lea
ss
xor
andb
pop
fsts
mov
jecxz
scas
add
insb
pop
add
sbb
or
or
and
arpl
repnz
push
leave
add
xor
cmpsb
pusha
sbb
shll
loope
in
sub
cmp
shll
mov
dec
daa
sbb
push
movl
notb
daa
pop
mov
sbb
and
stc
and
nop
and
pop
dec
pop
cmp
push
mov
pop
xchg
push
orl
bound
movsl
dec
sahf
imul
lds
cltd
lods
push
mov
or
test
inc
lea
and
or
inc
adc
push
ds
pop
cmpsb
shrb
pop
push
push
leave
push
push
jge
call
stc
lret
xor
addr16
xor
and
or
ret
mov
clc
ja
ret
sub
sub
cmp
pop
add
arpl
shlb
mov
xchg
push
and
jns
pop
insb
mov
push
jne
pop
je
pushl
arpl
dec
xor
mov
push
jge
dec
les
xchg
ret
jnp
mov
std
fiaddl
xor
clc
shlb
push
clc
orb
ret
sub
pop
adc
fldl
sbbb
pop
dec
add
les
mov
push
pop
sbb
or
mov
ljmp
mov
test
fsubp
mov
pop
cltd
aad
push
jbe
je
cmc
pop
and
inc
cmpl
mov
adc
jnp
inc
cmpsb
dec
dec
clc
nop
test
jno
outsb
ljmp
xchg
adc
push
cmp
pop
repnz
xor
xor
cmp
and
and
push
pop
fwait
cmp
ss
sbb
insl
and
sbb
inc
adc
pop
adc
push
add
inc
fldcw
adcb
and
pop
xchg
and
cmp
xlat
add
push
push
mov
addr16
push
adc
xchg
sub
ss
addr16
and
lret
xlat
cmp
hlt
add
fsubl
pop
rorb
pop
inc
nop
and
lea
mov
cmc
adc
mov
fadds
adc
inc
int3
sbb
dec
push
pop
leave
roll
push
adc
lcall
sub
or
mov
cmp
pop
add
push
sub
or
ss
idiv
decl
jle
and
push
pop
jo
or
add
sub
mov
enter
push
sbb
push
push
into
mov
push
enter
int
xchg
scas
fs
xor
loope
sbb
stos
clc
pop
std
jbe
mov
push
in
push
insl
add
aam
pop
lahf
pop
pop
adc
sub
dec
or
add
pop
mov
push
movsb
or
jns
enter
lock
lock
jae
inc
inc
xchg
pop
mov
push
repnz
nop
or
popa
jno
loopne
test
nop
fsqrt
jmp
bound
adc
mov
adc
xor
sub
fildl
pop
jle
in
adc
sbb
sub
out
cld
add
push
test
sysret
inc
xor
adc
push
ja
scas
test
or
pop
scas
xor
add
in
pop
pop
push
lret
ss
mov
test
or
and
shrl
pop
pop
jmp
lret
cs
lds
mov
loopne
cmp
fwait
rcrb
inc
add
sbb
push
jmp
mov
adc
push
mov
jg
or
cmp
and
add
sub
gs
sbbl
add
push
sub
test
hlt
or
or
test
and
lds
je
mov
je
mov
arpl
pushf
fdivr
pop
push
add
and
or
adc
cmp
push
xor
pop
adcb
lods
pop
js
jo
inc
test
adc
in
push
pop
je
sbb
faddp
dec
mov
xor
rclb
add
je
jle
push
test
adc
cmp
test
sbb
mov
pop
pop
pop
jo
adc
pop
sti
popf
popf
mov
jmp
leave
test
pop
pop
ss
call
imul
popa
rcll
and
shrb
push
popf
mov
insl
mov
add
xchg
imulb
scas
and
rcl
xchg
aaa
mov
sahf
clc
icebp
mov
cmp
cmp
and
inc
or
fs
push
mov
push
lret
repnz
lahf
in
sub
mov
std
cli
mov
push
push
xchg
sub
mov
cmp
push
xor
test
shl
add
adc
and
or
xchg
data16
mull
jns
push
jge
addps
mov
xor
test
mov
push
stc
test
shlb
xchg
dec
jp
sar
int3
cli
in
mov
cmpsl
inc
adc
mov
sbbl
xchg
lcall
push
daa
add
or
dec
pop
dec
shlb
pop
stos
repz
adc
pop
sub
cmp
push
push
imul
fdivrs
cmpsl
xor
xor
push
jmp
mov
dec
xchg
push
add
adc
xchg
pop
push
lea
push
lea
mov
sub
ficomps
roll
fsubrs
leave
jecxz
xor
dec
shlb
sbb
das
es
sti
push
push
ja
or
pop
and
add
xchg
add
cltd
dec
sbb
cmp
movsl
aas
sbb
jp
in
icebp
adc
mov
inc
jb
aas
movsl
hlt
xchg
hlt
add
js
cmp
and
sub
push
xor
xchg
dec
adc
sub
dec
xor
out
adc
push
mov
jg
insb
and
push
pusha
and
push
rorl
movsl
pop
test
and
test
inc
inc
push
fs
inc
fs
xchg
shlb
pop
sbb
xchg
inc
cld
sub
jb
jae
call
mov
sub
int3
sbb
inc
cld
push
ret
sbb
inc
sub
jb
add
or
movsb
lret
repnz
bound
sbb
add
repz
test
data16
or
sub
jl
jecxz
insb
and
jo
push
push
in
into
adc
adc
push
popf
mov
les
repnz
or
and
pushf
jp
adc
hlt
push
or
inc
arpl
or
push
push
stos
fisttpll
inc
mov
push
aad
dec
cmp
adc
lahf
test
jl
or
mov
es
rolb
add
mov
add
rclb
mov
sbb
sbbb
shll
xchg
cli
sbb
pop
xor
dec
xchg
enter
enter
jno
cli
mov
push
nop
cli
mov
rorb
sbb
das
je
xorb
sub
push
in
inc
loope
inc
data16
rcrb
xchg
jnp
xchg
pop
ret
push
adc
cmp
push
mov
mov
test
cmp
cwtl
inc
pop
or
pushf
adc
dec
inc
sti
cmpb
push
cmp
adc
pushf
cs
sub
repz
data16
xchg
icebp
push
mov
inc
mov
jae
push
sbb
xchg
sub
fisubrs
inc
loopne
pop
or
or
sub
sub
push
sub
repnz
test
inc
and
dec
dec
test
data16
pop
pop
inc
outsb
clc
jo
lods
movsb
stc
popa
inc
adc
xchg
sbb
push
pop
movsb
jb
in
stc
in
cmp
fnstsw
jl
je
push
xor
adc
jmp
mov
nop
cmp
adc
popa
in
jge
enter
sub
mov
call
fcomp
push
fcomi
cld
pop
sbb
mov
adc
add
cmp
push
push
inc
push
inc
jb
movsb
jecxz
sub
shll
jecxz
xchg
ret
repnz
adc
je
cs
in
push
stc
mov
pop
push
imul
jno
pop
gs
scas
sahf
add
cmp
out
mov
jo
jbe
out
inc
inc
pop
and
nop
xor
clc
cmpl
mov
in
sahf
dec
rcr
arpl
sarb
and
icebp
int
push
xor
or
push
adc
xlat
faddl
push
add
sbb
or
inc
sbb
les
jb
js
jae
add
push
adc
idivl
mov
xchg
xor
xchg
or
mov
fdiv
xchg
dec
int
mov
cmp
cmpsl
sbb
lea
push
jns
and
frstor
or
and
or
fldt
test
cmp
inc
push
push
test
jmp
imul
pop
repnz
movsb
sub
aad
inc
add
pop
movsb
jo
xor
push
lahf
imul
pop
and
push
and
jp
pop
les
leave
lock
mov
outsb
mov
sub
inc
mov
repz
lret
ret
push
cwtl
mov
push
sub
push
shrb
leave
jo
sbb
pop
stos
clc
repnz
and
add
push
int3
shl
sub
sbb
nop
mov
nop
add
imul
inc
and
xor
fldt
shll
or
and
jecxz
movsb
inc
mov
push
mov
sub
pop
push
or
push
adc
inc
push
push
add
jmp
cmp
push
add
pop
inc
dec
test
xchg
sbb
mov
xchg
inc
push
and
ja
sbb
shlb
dec
push
xlat
sbb
clc
dec
adc
add
xor
adc
mov
cmp
sub
xchg
or
cmpl
or
and
dec
ffreep
fadds
aam
sub
jnp
loopne
or
sbb
dec
orl
mov
or
add
sub
inc
xor
cmp
xchg
mov
aas
push
pop
jnp
cwtl
pop
push
xchg
sub
inc
xor
leave
push
and
jl
leave
jp
adc
mov
cltd
dec
sbb
sub
loopne
mov
xor
dec
mov
test
out
dec
inc
sbb
jle
or
rol
lcall
dec
add
leave
and
and
or
mov
add
mov
lods
mov
jbe
cmpsb
and
nop
push
and
rolb
lods
stos
int3
mov
pause
pop
and
int3
dec
rorb
inc
out
test
sbb
jns
lods
incl
int
cmp
popa
cmp
add
jmp
lret
fs
pop
les
shlb
int3
sub
dec
xchg
push
push
sub
jmp
xor
cmp
lea
je
lea
out
test
sbb
mov
outsl
xchg
push
sub
fwait
and
adc
nop
dec
aas
xor
push
xor
mov
pop
mov
inc
orl
imul
and
mov
jg
in
jne
andb
add
dec
sub
fwait
orl
xchg
gs
aam
call
xchg
stos
lods
cmp
mov
mov
test
cmpl
jns
jno
mov
ss
cmp
pop
pop
addr16
in
lret
jnp
add
ja
aaa
sbb
push
cmp
or
test
push
sahf
nop
js
or
fstpt
lock
push
push
dec
and
add
repnz
mov
andb
jo
adc
cmovge
add
dec
adc
xor
insb
cld
xchg
movb
stos
pop
cmp
je
inc
add
pusha
xchg
jbe
jl
pushf
xchg
leave
jl
mov
shl
add
and
cmp
push
pop
mov
dec
cwtl
aam
jae
cwtl
rorb
subb
mov
mov
xor
mov
sub
subb
ror
inc
stos
pop
mov
hlt
out
lock
cmp
loopne
and
cmp
mov
test
enter
call
add
rcll
add
shlb
lar
cmp
push
pushf
decl
xchg
movl
cmp
mov
push
mov
push
pop
pop
lea
cmp
adc
inc
jne
mov
mov
jmp
cmp
push
gs
andl
lea
mov
std
popf
das
movsb
or
lds
mov
lds
sbb
iret
insb
orl
add
add
or
add
xor
or
sarb
dec
add
aam
clc
and
js
pabsw
push
pop
jge
pusha
cmp
pop
adc
call
or
or
mov
jae
fs
enter
or
push
mov
or
lods
lret
sbb
sbbl
sbb
inc
repz
add
imul
or
jle
mov
jl
cltd
idivb
and
pop
and
add
mov
cmp
push
lea
jo
sbb
clc
push
call
pop
inc
jle
adc
aas
xor
adc
push
dec
cmp
jle
out
filds
cmp
je
or
mov
sbb
repnz
jne
sbb
fdivr
cmp
jl
ffreep
movsl
mov
jb
mov
push
mov
lds
push
and
sub
iret
push
sahf
std
and
das
cmp
shll
xor
shr
add
mov
shl
sbb
lock
dec
jne
pop
pop
mov
pop
not
ret
fchs
and
pop
mov
inc
pusha
lret
lods
add
div
dec
test
pop
je
testb
cmc
inc
push
sub
andl
mov
push
fs
repz
pop
mov
clc
ret
clc
jnp
sbb
add
push
sbb
fcomps
movsb
cmp
and
cltd
add
inc
add
cmp
push
std
push
xor
adc
pop
lds
and
jb
pop
dec
enter
lret
cs
lret
lret
and
cmp
daa
into
sub
pop
jb
shrb
rcrl
shrb
sbb
pop
cs
dec
xlat
inc
fcoms
stc
ss
in
add
push
fcmovnu
adc
fstl
lret
in
fidivrs
fists
loopne
loope
loop
outsl
mov
jecxz,pn
in
in
push
pop
out
pop
cs
dec
call
inc
jmp
xchg
lret
in
in
aaa
in
sbb
lock
cli
sub
repnz
repz
mov
adc
add
bound
std
pop
loopne
xchg
sbb
mov
sysret
clc
jg
inc
cmp
jb
xor
cmp
add
testl
inc
cmp
jb
enter
sti
mov
pop
mov
mov
lahf
lock
add
inc
mov
cmp
lea
mov
mov
jb
test
jge
int3
insb
sti
outsl
jnp
clc
jbe
inc
and
xchg
inc
orl
and
mov
jne
jp
in
jle
mov
mov
mov
mov
fucomip
cmp
add
xor
inc
cmp
into
imul
adc
mov
jecxz
in
clc
lret
add
dec
fwait
push
in
jo
dec
sbb
icebp
mov
push
pusha
shll
bound
nop
jno
clc
dec
and
push
sub
loope
mov
fisttps
adc
jno
outsb
js
inc
insl
cld
cmp
sub
insb
push
mov
or
and
test
cmpsb
adcl
dec
pushf
add
pusha
pop
in
pop
test
add
jb
addb
cmp
adc
sbb
jmp
adc
push
push
mov
pop
push
cmp
out
pop
jne
and
inc
lcall
xor
into
jnp
push
dec
lods
into
jno
ja
iret
movsb
mov
in
cmp
lods
cmp
repnz
js
mov
mov
pusha
int3
push
pop
repnz
fmuls
cmp
addr16
add
xor
or
push
in
and
adc
and
xchg
or
bound
push
std
pop
and
ljmp
cld
adc
sbb
inc
insl
mov
in
dec
popf
out
ljmp
and
mov
xchg
shll
mov
movsl
arpl
pop
mov
xorb
jl
push
and
scas
arpl
mov
pop
and
sub
add
add
movsb
mov
add
int3
lret
dec
and
xchg
or
mov
test
or
sarb
lods
repnz
inc
dec
movsb
cwtl
add
sub
cmpb
adc
add
mov
lock
es
outsb
loopne
pop
mov
pop
test
in
mov
mov
jg
insl
lock
mov
fs
ja
in
fdivrs
test
pop
xor
lods
daa
shlb
imul
add
mov
cmpsl
pop
mov
test
push
mov
add
push
jbe
insb
outsl
rolb
and
cmp
in
jbe
aaa
adc
pop
daa
inc
out
jae
mulb
push
repnz
in
enter
repz
mov
pusha
testb
pop
push
xor
mov
pop
je
add
call
mov
ljmp
insb
mov
es
faddl
dec
and
pop
pop
jecxz
add
test
push
lea
dec
aam
fcompl
out
and
xlat
and
mov
sti
and
daa
test
call
das
fs
shr
shrl
mov
pop
stc
add
push
xchg
pusha
mov
pop
add
xor
pop
or
and
jo
and
lds
stos
sbb
jg
fisttpll
sbb
mov
xor
daa
push
lds
mov
mov
in
faddl
mov
pushf
pop
and
sti
or
jl
pop
nop
sbb
mov
daa
in
fcoms
sti
or
push
pop
jnp
dec
jno
mov
inc
test
dec
aaa
pop
ret
shlb
jle
fwait
outsl
movsb
adc
xor
and
js
mov
add
adc
mov
scas
or
or
push
call
rcrl
push
dec
clc
aad
xchg
iret
leave
clc
cld
in
mov
mov
sbb
fnsave
pop
pop
push
cs
xor
imul
out
xor
mov
push
add
ds
push
push
and
jmp
icebp
inc
fistps
add
push
jmp
push
pop
cmp
ret
or
add
sub
inc
pop
jmp
sahf
sbb
adc
orl
or
sub
iret
je
jmp
mov
dec
mov
rcrb
sarb
sbb
pop
or
pop
das
mov
leave
test
std
adc
cld
mov
fisubrs
jg
mov
lock
cmp
push
lods
in
mov
ja
imul
push
xor
push
sbb
movsl
pusha
in
cmp
or
popa
push
and
insl
shrl
push
repz
aad
rorb
push
xor
sub
fstl
push
sbb
test
mov
cmp
lcall
cmpsl
je
push
inc
and
inc
xchg
inc
adc
mov
jb
xchg
or
pop
xor
jo
xchg
push
push
cmp
inc
clc
nop
outsb
loopne
mov
call
je
inc
test
push
rclb
stos
xchg
addl
fwait
jl
add
aam
and
dec
jp
enter
popa
in
es
mov
jno
adc
les
cmp
push
inc
push
hlt
mov
or
add
movsbl
mov
adc
pop
inc
pop
dec
nop
fcmovb
xor
push
lods
and
insb
ja
fneni(8087
je
push
sti
shll
rol
and
sbb
es
push
xor
jmp
loope
mov
adc
or
movsb
pop
jle
xor
js
push
faddl
test
mov
movl
insb
push
adc
push
mov
mov
push
xchg
gs
pusha
imull
test
in
in
mov
das
insl
test
in
xchg
mov
or
int
xor
pusha
mov
out
or
or
dec
in
jge
push
mov
cmc
fbstp
dec
add
dec
add
cli
loopne
dec
lods
jns
pusha
mov
pop
push
daa
mov
sbb
cltd
add
cmp
adc
xor
dec
les
adc
in
jb
mov
mov
adc
add
aaa
mov
and
pop
movsb
ja
andb
loope
mov
xchg
sbb
xor
icebp
cmpsb
insl
adc
movsl
cmp
cltd
pop
jb
or
inc
test
mov
fsts
push
mov
push
movsl
add
xchg
out
addl
int3
mov
sbb
sbb
push
xor
lret
push
cld
and
pop
inc
fsts
cmp
filds
pop
ss
fidivrl
daa
push
ret
repnz
pop
repnz
and
mov
inc
push
mov
data16
and
push
add
fisttps
pusha
fcom
js
cli
fsts
add
xchg
fstp
scas
fisttpll
lods
pop
out
imul
jle
push
cltd
mov
lret
iret
clc
sahf
adc
loopne
lea
ret
aaa
dec
lds
mov
xchg
push
scas
xchg
lods
fdivs
jmp
or
inc
stos
movl
mov
sbb
xor
sbb
loopne
mov
pop
in
icebp
lods
and
add
pop
pop
rclb
popa
cld
pop
je
adc
jbe
je
orb
jns
aaa
sbb
mov
idivb
mov
sti
loope,pn
mov
movsl
movsw
xor
adc
mov
stos
stos
mov
test
fmull
scas
js
xor
mov
fs
out
xor
push
xlat
leave
xchg
mov
fs
or
and
mov
inc
sbb
add
adc
lahf
lret
mov
add
js
add
adc
movsb
add
xor
cmp
mov
push
push
das
repz
inc
and
add
lds
mov
in
mov
or
pusha
pop
rorl
add
xor
push
push
ret
subl
aam
adc
dec
in
inc
jo
js
add
es
test
cmpsl
add
cmpsb
mov
pop
lea
iret
js
dec
xor
mov
push
inc
xor
test
xor
shrb
sub
int3
jns
insl
push
nop
popl
mov
lea
jle
adcl
je
mov
xchg
jge
push
ja
xchg
push
popf
test
mov
mov
mov
insl
sarb
pop
add
int3
jg
or
push
pusha
int3
aam
insb
aas
xchg
shr
int
movsl
sub
pop
cld
jne
inc
nop
jl
mov
cwtl
xor
add
leave
pop
xchg
cs
cmp
decl
mov
sub
sub
rcl
mov
mov
add
mov
hlt
mov
push
or
dec
xor
or
jl
enter
xorb
mov
int3
int3
cmpsl
dec
mov
sbb
mov
ljmp
push
outsb
shll
out
push
jne
cmp
dec
sbb
pop
movsl
mov
pslld
adc
mov
or
hlt
jne
popa
xchg
inc
xor
mov
in
int
pushf
arpl
and
enter
mov
xchg
jle
sub
icebp
add
sub
jo
add
bt
call
mov
std
and
fdivrl
xchg
sub
insl
add
mov
add
jecxz
add
mov
adc
inc
push
cmp
sub
mov
mov
dec
push
out
repnz
jle
or
sahf
add
pop
in
cmp
in
cmp
xchg
pop
push
xor
data16
pusha
js
mov
movsb
sub
xor
sub
or
add
or
ficompl
cmp
test
int3
fistl
xchg
int3
fistl
arpl
add
or
xor
fimull
jne
mov
sbb
jg
xchg
jge
js
jne
pop
jmp
sti
cld
ret
jmp
or
pop
push
jae
cmp
je
loopne
test
in
addl
fisubrl
dec
mov
jmp
dec
sub
inc
insb
js
adc
or
or
sub
jle
add
ja
lret
int3
std
jl
lods
aaa
insb
and
mov
test
jnp
fs
sub
jno
mov
sbb
inc
insl
push
mov
adc
ret
and
out
inc
cmpsb
add
mov
pop
lds
push
lds
outsl
sub
push
lods
fmull
in
dec
test
loope
and
rolb
xlat
inc
ss
push
inc
sbb
subb
dec
push
add
daa
mov
inc
in
shrl
add
jo
xchg
push
js
mov
sub
add
or
push
hlt
and
iret
frndint
or
mov
and
jno
push
push
jmp
pop
in
add
in
int
fsub
pop
fnstcw
xor
rcrb
add
mov
inc
lcall
xor
jns
sti
imulb
adc
je
aaa
mov
stos
imul
inc
jecxz
jl
jmp
inc
jb
pop
in
in
insl
pop
and
push
jns
enter
add
push
js
pop
mov
lahf
xchg
pushf
adc
push
dec
and
xchg
mov
cs
mov
jns
imul
mov
repz
or
jne
lock
inc
push
in
hlt
cld
lock
lock
test
mov
xor
mov
inc
pop
es
or
xor
or
pop
movsb
mov
sahf
mov
mov
pop
movsb
pop
xor
pop
adc
cmp
mov
jne
sti
jae
xchg
mulb
lock
sub
mov
filds
outsl
movsl
in
add
daa
add
lods
test
es
add
or
xchg
pop
sub
sub
push
push
jno
scas
adc
fcomip
icebp
pop
mov
mov
inc
adc
int3
aad
stc
xchg
pop
xor
testb
push
or
xchg
pusha
mov
mov
mov
dec
jae
mov
pop
rorb
add
xchg
pop
in
mov
fildll
push
push
mov
fmull
insl
fldt
xor
lea
pop
xor
sbbl
pop
dec
addr16
jl
cmp
pop
or
jge
push
and
cmp
push
roll
mov
std
jne
bound
aas
fs
aam
push
inc
pushf
pop
push
and
aaa
mov
sbb
shlb
mov
mov
pop
mov
xchg
jle
enter
mov
push
fcmovne
daa
cmc
adc
adc
add
xor
std
mov
imul
adc
leave
orl
adc
adc
adc
inc
cmp
jl
or
pop
cwtl
out
cmp
ret
mov
insl
push
loopne
scas
xchg
jne
and
pand
sbb
mov
inc
imul
lcall
push
or
push
and
push
cld
pop
cltd
idiv
test
outsl
movb
inc
jmp
dec
addr16
jmp
insl
or
dec
jmp
andb
daa
xchg
sbb
je
dec
std
daa
add
dec
je
dec
add
sbb
push
mov
enter
pop
or
mov
into
enter
sbb
pop
shlb
rorb
inc
aas
pop
mov
mov
pop
clc
call
arpl
dec
ret
push
cltd
call
pop
cmp
xchg
or
cltd
scas
xchg
adc
gs
jge
push
jg
sbb
pusha
cmpsb
bound
sbb
inc
mov
cmp
cs
subl
sub
sbb
mov
insb
and
popa
xchg
jbe
lret
hlt
lock
dec
call
cld
clc
push
jg
jmp
mov
xchg
xor
arpl
xor
pusha
jecxz
pop
xor
cmp
adc
fsubl
cmp
mov
std
sbb
and
jle
push
mov
push
push
pop
int3
nop
sub
pop
add
dec
loope
jmp
sub
nop
push
imul
adc
lea
psubq
adc
sbb
orl
pop
inc
cwtl
js
popa
lret
fwait
add
sbb
inc
push
jo
in
jne
test
sbb
cmp
cmp
mov
addr16
inc
push
xlat
push
xchg
rcr
shrb
cmp
cmpsl
mov
adcl
jno
pop
pushl
fldt
sbb
pop
js
xor
pop
lock
lods
pop
push
push
cltd
ret
adc
movsb
std
ja
or
popa
sub
fdivrl
dec
or
adc
inc
pusha
fst
adc
xchg
push
insl
sub
push
inc
push
mov
rcll
push
or
repnz
dec
aad
pop
movl
add
mov
inc
in
xchg
shrb
mov
cwtl
sbb
xor
arpl
popa
cmp
inc
pop
inc
pop
jmp
in
stc
popa
mov
sbb
jmp
mov
fs
jae
push
add
sti
hlt
push
lea
xchg
cltd
inc
pop
imul
scas
dec
fwait
iret
push
mov
inc
mov
mov
imul
and
movsb
ljmp
setne
fldcw
out
push
fwait
fs
insb
test
push
cwtl
dec
or
negb
adc
mov
adc
add
out
xchg
inc
je,pn
sub
dec
push
ret
dec
lods
inc
push
stc
in
popa
stos
int3
inc
sbb
adc
test
sbb
and
imul
subps
pushf
enter
push
pop
cltd
push
xor
loop
and
cmpsl
mov
adc
repnz
cmpsl
sub
shrb
pop
mov
add
pop
cs
dec
sahf
decl
setg
ficoms
test
pop
jg
popa
sbb
sahf
lahf
push
push
sbb
or
out
sti
sub
test
loopne
push
ljmp
les
push
popf
into
dec
inc
sahf
pop
sbb
imul
insb
push
mov
sbb
cs
mov
mov
lahf
ja
icebp
pop
push
mov
divl
cmp
out
or
das
jne
add
shlb
cmp
cmp
mov
fs
cmp
mov
nop
xchg
mov
or
test
dec
or
or
or
push
js
pop
jmp
push
dec
in
adc
pop
xor
cltd
jae
xchg
push
xchg
fs
push
in
jmp
pop
in
push
or
xor
and
lea
psllq
push
pop
cmp
jge
call
inc
push
jns
adc
pcmpgtb
adc
pop
dec
mov
pop
sbb
push
cmpsl
not
xchg
sahf
jle
sbb
call
filds
mov
jb
inc
add
cmpw
jne
hlt
adc
add
cmp
sbb
lods
mov
pusha
push
lea
push
test
addr16
adc
mov
ret
sti
or
adc
addr16
pop
pop
rclb
ret
add
jl
and
jbe
mov
pop
mov
insl
adc
mov
flds
push
inc
lret
shlb
push
cmp
jb
cmp
test
lahf
loop
lahf
lock
or
xchg
ds
add
test
jne
cltd
cltd
mov
repnz
cmc
mov
push
inc
movsb
sub
xor
xor
dec
sub
push
repz
pop
inc
lock
jg
rcrl
fists
xchg
shrb
jo
jmp
pushf
imull
dec
sarb
mov
mov
inc
icebp
add
add
aam
int3
in
mov
test
hlt
push
cmp
fstl
push
insb
cmp
mov
inc
add
inc
int3
loope
shl
push
inc
add
inc
cmp
jae
jmp
pop
outsb
ds
add
sbb
cwtl
push
and
cmp
imul
xchg
jbe
aas
sti
adc
or
call
inc
mov
add
inc
xlat
or
inc
adc
mov
inc
sbb
mov
test
xor
add
mov
lods
jmp
jle
mov
movl
mov
popa
mov
and
jge
adc
pop
mov
push
push
out
cmpb
fcomps
sbb
or
aas
sbb
shll
cmp
sbb
loope
jne
jecxz
add
push
xlat
mov
ret
lock
addl
aad
xlat
imul
push
xlat
mov
push
into
xlat
jmp
test
clc
dec
mov
test
mov
xor
ret
add
js
js
cwtl
or
leave
mov
sub
cmp
je
inc
inc
inc
cmpb
adc
je
popa
mov
xchg
add
inc
bound
jo
jecxz
arpl
adcb
mov
pop
rclb
pmaxsw
leave
push
pushl
cs
repnz
or
push
out
or
sub
and
push
pop
nop
push
dec
testl
sbb
mov
out
call
mov
jecxz
cmpb
jl
mov
pop
aam
sub
push
adc
push
mov
fs
dec
xor
dec
in
mov
pcmpeqd
cmpl
dec
mov
lock
mov
test
mov
cmpb
jo
pop
or
mov
jbe
inc
inc
decl
out
jg
add
int3
jecxz
jge
and
fldt
sbb
sbb
scas
xor
sbb
aad
lret
pop
jbe
pop
and
ret
xchg
push
cwtl
das
iret
push
inc
test
sub
or
adc
sub
mov
add
in
mov
jecxz
or
idivl
inc
pop
ret
mov
jmp
add
inc
ss
adc
or
dec
push
je
dec
out
mov
dec
mov
cltd
fisttpl
lods
mov
add
fiaddl
jp
add
iret
mov
cltd
inc
lock
push
or
popf
and
les
rcrb
sbb
add
outsl
inc
sub
loop
pop
mov
ss
jl
lret
cmp
mov
jge
push
push
outsl
jae
je
imul
mov
adc
dec
cmpsb
roll
or
test
cmp
ret
inc
jmp
dec
cwtl
lahf
fstps
push
divb
mov
mov
sbb
jmp
pop
cmp
inc
lea
add
push
add
or
and
xor
test
dec
push
push
mov
ret
mov
cmc
or
add
add
push
push
cmp
je
enter
shrb
clc
xchg
fs
clc
jecxz
mov
or
das
inc
mov
ret
lea
adc
adc
jbe
insl
scas
mov
repnz
ds
clc
mov
cmc
sbb
xor
mov
sbb
movl
inc
cwtl
andb
sub
popf
ret
imul
in
adc
lods
push
out
mov
pop
in
and
mov
mov
push
test
adcb
jnp
cmp
je
ljmp
rolb
and
fiaddl
jg
and
es
ds
int3
out
push
imul
mov
fwait
popf
enter
inc
dec
in
lock
test
mov
int
mov
cmp
jl
inc
loope
rol
mov
aas
scas
add
faddl
push
push
dec
int3
repz
inc
push
sbb
pop
dec
test
jbe
lea
add
cmp
and
fbstp
pop
jne
cmp
jae
mov
fwait
lea
adc
adc
xlat
mov
daa
lahf
xchg
outsb
pusha
xor
into
out
sbb
mov
jg
sahf
pusha
movsl
aaa
push
cmpsl
divb
ja
pop
rol
inc
in
enter
outsl
pop
lock
sbb
adc
dec
lea
lret
mov
jb
dec
cmp
pop
pusha
out
les
add
rcrl
bound
mov
push
cmpb
jo
jmp
pushf
push
jo
test
pop
pop
clc
ret
clc
add
ljmp
pop
rol
loopne
sbb
add
fisubrl
or
pop
push
inc
arpl
add
loopne
dec
adcl
sbb
xor
jecxz
inc
movsb
loope
insb
jge
orb
sbbl
jge
add
rsm
push
push
negb
mov
cmpsl
sub
sbb
clc
pop
cmp
loop
jae
into
mov
popf
mov
arpl
dec
cltd
inc
icebp
mov
test
mov
inc
cmp
ljmp
xchg
mov
xchg
adc
push
add
cmpb
adc
xchg
sub
inc
lods
pushf
aas
mov
test
mov
mov
push
sub
pop
mov
sti
lahf
lods
xor
enter
cld
loope
es
pop
cmp
lods
and
rorl
pop
mov
inc
pop
xchg
lods
notb
loopne
inc
jns
pop
mov
popf
mov
cmp
xchg
daa
jo
int
daa
cmpl
loopne
mov
sbb
xchg
mov
das
jmp
icebp
je
movsb
push
jmp
xor
cmpb
inc
out
sti
xchg
or
fdivs
add
mov
jnp
std
push
sub
inc
sub
nop
push
mov
ret
xor
insl
add
std
cld
jbe
mov
cmp
je
and
lock
sbb
xchg
hlt
call
sbb
aaa
test
jbe
jg
jle
cmp
jae
cmpb
jae
adc
xor
testb
inc
movb
jmp
addr16
insl
mov
adc
into
mov
dec
push
inc
mov
imul
mov
or
mov
lahf
es
or
cmp
daa
out
cmc
imul
cmpsl
push
cwtl
mov
out
add
jg
xor
xchg
frstor
pop
or
mov
jne
mov
ljmp
push
mov
nop
jg
xchg
mov
xor
test
dec
iret
xchg
sub
orl
push
cwtl
cs
mov
scas
xorl
stos
adc
ss
daa
xor
pusha
fdivrl
or
push
xor
cmc
stos
outsb
dec
cmp
push
push
jns
pop
cmp
pop
aam
test
xor
clc
dec
push
mov
mov
enter
cld
cmp
push
xchg
sbb
ja
cmp
in
idivl
mov
pop
xchg
add
insb
cli
gs
test
mov
stos
adc
addl
xchg
popa
js
adcl
test
lods
insl
mov
iret
xchg
mov
imul
outsl
rcrb
pop
fwait
jno
pop
lret
mov
adc
mov
or
add
sub
mov
insb
xchg
xchg
sbb
inc
loopne
pusha
and
mov
mov
xorl
mov
mov
cmpsl
sbb
add
lods
clc
pop
pop
stc
cmpb
add
hlt
inc
push
sub
inc
fistpl
jns
xchg
pop
js
into
sbb
cltd
inc
jns
lea
nop
jo
mov
dec
mov
in
int
pop
mov
jmp
aam
xor
and
sbb
dec
pop
and
pushl
mov
or
ja
mov
clc
movsb
xorl
or
adc
fs
outsb
xor
ljmp
test
imul
push
rcrb
xchg
cmp
sub
xchg
aam
cmpsb
add
push
xor
leave
sub
pmullw
adc
sub
fs
shll
or
sahf
adc
pop
jnp
cld
mov
mov
push
pop
pop
jbe
push
subb
and
mull
js
cmpsl
and
push
xor
lods
xchg
iret
inc
xchg
and
icebp
cld
and
and
popa
lret
mov
jb
lds
shll
cltd
stos
divl
cmp
and
fs
dec
xchg
loope
push
adc
mov
push
sbb
nop
xchg
sbb
es
push
or
push
loopne
xchg
sbb
or
mov
addr16
xchg
test
and
insb
pusha
mov
lcall
xlat
adc
cld
adc
test
imul
sbb
imul
sub
and
mov
add
imul
fwait
cwtl
js
in
adcb
das
sbb
cmp
or
mov
or
imull
sub
cld
sti
cmp
in
ss
ret
or
pop
ja
xchg
xor
pop
push
es
sbb
subl
cmpl
xchg
xor
sarl
adc
cmpb
jne
movb
xor
das
push
inc
jnp
xchg
and
pop
aad
sbbl
jnp
pop
pop
xchg
cmp
sbb
sbb
dec
loope
mov
inc
sub
jne
xor
mov
xchg
pop
and
insb
add
xchg
popa
sbb
divb
data16
movsb
sbb
subb
aas
push
or
ret
pop
push
lods
cmp
xor
cld
mov
scas
outsb
loopne
adc
es
imul
lcall
mov
mov
adc
xor
xchg
mov
push
loope
pop
push
xor
and
mov
cmpl
fists
fcmovu
in
sbb
dec
lods
lods
cld
insb
sbb
cltd
int3
push
lea
cld
push
jno
push
sub
inc
mov
mov
cmp
sub
mov
add
das
fcoml
fs
ficompl
fsub
lods
add
xor
push
fistl
and
jge
jno
sub
vpshlq
sub
cmp
ja
movb
ja
xchg
push
aam
mov
cmp
cmpsb
sbb
inc
js
orb
dec
jp
fisubrl
xchg
inc
data16
adc
jecxz
adc
addb
out
das
xchg
jl
jmp
fdivr
push
out
loop
mov
in
arpl
adc
xchg
pop
test
or
in
test
and
aaa
pop
sti
unpckhps
push
inc
xchg
push
icebp
or
std
push
sbb
xor
adc
fnstcw
mov
mov
jl
sub
mov
add
lahf
adc
add
mov
xlat
mov
popa
divl
shr
push
add
adc
test
push
jb
mov
add
xchg
cmp
jge
xor
push
lret
lea
jecxz
jno
push
xor
cmp
adc
pop
add
mov
in
push
inc
fimull
and
dec
loopne
cwtl
fidivrs
or
iret
jae
lcall
jne
mov
pop
cmp
enter
es
sub
enter
or
fisttpl
lahf
mov
test
push
jbe
inc
push
push
push
mov
xorl
imul
dec
xor
loope
outsb
mov
sbb
dec
cltd
cmp
mov
mov
inc
dec
daa
mov
lods
rolb
cmp
push
or
xor
push
outsl
call
mov
movsw
mov
aas
aas
repz
cltd
or
sbb
sbb
lret
aas
fsubr
jge
pavgb
xor
xchg
popa
inc
fs
jbe
jg
or
mov
mov
iret
add
push
pop
push
fisubrl
loopne
pop
adc
xchg
lret
xorb
ss
enter
xchg
mov
and
lods
outsl
cmp
clc
xchg
cli
rclb
mov
scas
push
mov
mov
insb
mov
inc
sub
in
sub
sbb
add
and
adc
jne
leave
inc
rcrb
sub
pop
jb
mov
inc
dec
movsl
mov
mov
rcrl
jle
mov
push
sarl
test
loopne
adc
inc
sti
les
ret
cmp
in
xchg
vunpcklps
mov
and
mov
popa
fistl
cli
cli
sub
sbb
adc
push
mov
fildl
and
ljmp
dec
outsl
stc
sbb
xor
cmpsb
jns
xor
es
push
push
push
imul
sahf
in
inc
jle
imul
or
inc
adc
inc
je
cwtl
ja
divb
aad
jecxz
ja
or
icebp
fwait
mov
push
inc
sub
insb
adc
mov
mov
xchg
add
or
rorl
das
fnstcw
fmull
and
inc
dec
insl
andl
add
arpl
sub
stos
ljmp
add
ss
rol
lret
ds
lods
mov
xor
dec
adc
and
popf
add
xorb
mov
or
mov
cmp
cld
push
inc
shl
push
jne
or
pusha
push
aas
test
rcll
out
mov
mov
imulb
in
js
push
push
movsb
test
je
push
cmp
mov
int3
jle
cmp
jle
or
adc
test
sub
lds
push
inc
cmpsb
testb
daa
inc
xchg
divb
enter
sub
and
scas
sub
jne
jae
das
sub
into
mov
and
and
or
lock
in
xchg
or
mov
adc
data16
sub
cmp
lret
lret
out
je
or
je
add
jne
or
dec
sbb
pop
add
xchg
pop
pop
scas
outsl
jmp
dec
lea
aam
mov
add
and
xor
xchg
je
or
inc
ret
sub
test
push
pop
push
sbb
jno
fisttpl
std
adcb
mov
repz
mov
sbb
inc
inc
mov
mov
lock
xchg
fadd
pushf
fldl
enter
dec
pop
movsl
fs
mov
sub
ja
sbb
je
clc
sub
movsl
mov
mov
sahf
mull
inc
sbb
pop
adc
cmp
or
mov
add
mov
cmpsl
sub
rcrb
mov
addl
es
cmpsl
iret
into
mov
xor
sub
or
cmp
hlt
movsb
int3
dec
inc
inc
sub
sbb
mov
cmp
lods
clc
cmpsb
sbb
lock
jo
call
sbb
leave
xchg
inc
fcomip
movsb
js
mov
xchg
cmp
repnz
movsb
shlb
frstor
aam
fmul
test
xchg
fldln2
mov
je
xchg
sahf
out
movsb
pusha
and
mov
int3
xor
xor
pop
jmp
push
aam
ret
jecxz
int
cmpsb
test
mov
out
xor
dec
test
movsl
cmp
push
xor
inc
dec
cmp
sbb
fsubs
js
jb
mov
ret
icebp
add
mov
in
and
movsl
fsubs
je
rclb
loopne
into
rclb
jmp
mov
daa
mov
mov
xor
data16
and
jl
push
inc
dec
dec
cwtl
not
add
mov
sbb
in
mov
push
and
pushf
cwtl
cmp
fldt
cmp
mov
dec
xor
repnz
sbb
movsb
in
xor
mov
sbb
cmp
movsl
mov
cwtl
inc
ja
sbb
stos
mov
nop
stos
or
fsubl
pop
add
ficompl
add
push
cmp
add
arpl
fadds
and
les
in
andb
enter
sbb
jns
mov
movsb
mov
movsb
mov
les
nop
mov
cmp
sbb
imul
inc
cmp
movsb
xor
mov
movsb
and
cltd
xchg
inc
rcll
add
mov
dec
jo
mov
gs
mov
movsl
jo
mov
rclb
cmp
inc
fwait
xor
jbe
jb
subb
daa
and
adc
or
and
and
add
cld
sahf
mov
adc
mov
add
test
movsb
sbb
pop
fmuls
imul
or
rol
dec
data16
mov
and
dec
inc
mov
cmp
test
jbe
sbb
nop
movsb
call
ja
fdivl
movsl
and
je
sub
pop
adc
mov
add
insb
jae
fs
xor
andb
mov
inc
inc
inc
inc
mov
inc
inc
in
pop
loopne
jge
mov
out
mov
pop
or
movsb
xchg
addr16
popa
and
les
pop
cmp
cwtl
rclb
enter
movsl
and
ljmp
repnz
xor
mov
sbb
and
or
lock
push
and
fdivr
jnp
enter
insb
addr16
fxch
enter
fdivrl
xchg
xchg
xchg
xchg
aam
in
lock
mov
fldcw
or
rcrb
aam
mov
dec
sahf
loop
iret
push
inc
das
clc
cmp
dec
xor
mov
sub
lret
sbb
mov
xchg
mov
add
mov
bound
push
add
adc
roll
test
sub
hlt
repnz
mov
insb
sbb
idiv
mov
sbb
sub
cld
mov
fsubl
xchg
iret
ret
lcall
mov
mov
and
inc
inc
jl
movsl
jo
and
addr16
sbb
add
dec
xchg
cmp
mov
cs
movsb
xchg
xchg
push
and
mov
leave
enter
or
mov
cmpsb
add
jo
cmpsb
and
shrl
mov
in
lahf
and
mov
enter
or
fcompl
int3
lahf
mov
fs
js
adc
push
stc
xchg
inc
mov
push
sbb
int
movsb
adc
and
adc
and
push
pusha
sbb
and
cmp
cmp
dec
movsb
leave
dec
je
nop
xchg
stos
xchg
and
and
push
cmp
pusha
xor
pushf
int3
dec
in
sbb
dec
inc
inc
int3
pop
mov
or
movsl
jb
or
in
and
sub
xchg
ret
sub
sbb
xchg
xor
sbb
sub
shrb
mov
cmp
xchg
xor
je
inc
xchg
push
ss
fidivrs
xchg
test
cmp
and
data16
inc
leave
and
jb
fsubrl
xor
nop
call
in
js
inc
leave
and
push
jb
and
inc
xchg
dec
repnz
cmpsb
add
sub
or
in
sbbl
hlt
test
fs
mov
sbb
sub
and
dec
push
cmp
sub
inc
mov
popa
mov
mov
lods
xor
fdivs
pop
or
insb
sbb
cmpb
push
mov
icebp
jne
jle
jle
ds
mov
mov
dec
add
xor
lea
mov
adc
insl
mov
mov
adc
loopne
inc
cmp
push
push
add
sahf
mov
pop
icebp
sbb
je
xor
xorb
add
mov
push
fwait
xorl
fistl
xorl
repz
mov
addb
insb
or
pusha
hlt
insl
add
dec
js
pop
mov
adc
add
and
push
push
roll
adc
stos
or
add
dec
mov
mov
add
clc
xlat
xor
fcomp
mov
jbe
loop
outsl
ds
pop
fs
pop
shlb
arpl
cmp
add
pop
rcr
movsl
outsl
cmpsb
loopne
in
adc
hlt
jb
cli
pop
je
jmp
ret
sbb
mov
or
sub
pushf
or
mov
mov
and
sbb
mov
inc
mov
pusha
bound
mov
insb
or
cmpsl
ror
sub
xchg
add
stos
and
stc
mov
clc
adc
mov
dec
rcrb
pusha
sbb
jmp
push
nop
fwait
inc
and
sub
pop
std
test
jne
xor
jmp
mov
out
jns
aam
add
mov
mov
push
cmp
jmp
mov
dec
ss
popa
std
pop
or
or
push
mov
std
mov
inc
mov
mov
inc
inc
cmp
daa
jne
sub
pusha
dec
jmp
mov
aaa
jge
shl
push
cld
adc
inc
sbb
cmp
dec
or
arpl
test
fadds
add
push
shl
mov
pop
in
mov
cmp
inc
mov
jns
je
xchg
in
xor
or
add
fs
negb
dec
xor
add
enter
add
clc
cmp
jne
inc
clc
pop
mov
lea
lea
lods
fsubl
jmp
mov
stos
xor
push
lods
insb
cmp
in
out
cmp
mov
int3
aam
jp
out
pushf
pop
push
and
insl
jne
out
in
arpl
insb
data16
mov
jg
mov
mov
jbe
push
inc
sarb
adc
push
inc
lea
and
mov
shr
lods
das
in
in
xor
loopne
movsl
xchg
push
sub
repnz
in
mov
push
rcr
movsbl
lret
gs
test
movsl
dec
bound
jge
hlt
pop
xor
out
mov
add
dec
mov
add
shlb
addl
lea
leave
lds
test
test
mov
dec
pop
pop
lds
mov
push
sbb
repz
pop
sbb
mov
jo
sbb
jbe
push
xchg
nop
enter
ret
xchg
xchg
push
imul
xor
sub
push
imull
sub
add
jbe
js
jmp
jl
cld
adc
dec
mov
cld
aam
jecxz
int
nop
movsb
fistl
repnz
clc
or
mov
repz
adc
dec
test
setne
or
adc
in
mov
dec
push
jns
in
imul
lahf
in
das
push
movsb
or
lods
test
sub
jb
out
push
sub
testl
scas
inc
dec
faddp
push
in
pop
test
ficompl
sub
dec
ret
adc
fistpll
push
rclb
jne
fisubrl
pop
lods
mov
fcompl
push
add
push
push
in
lret
add
mov
dec
sbb
daa
subl
push
inc
jp
sbb
popa
ret
cli
dec
push
add
jge
test
lret
push
jp
adc
dec
xor
jbe,pt
andb
push
sbb
and
mov
add
mov
mov
sub
push
fsubrl
sub
nop
cld
cmpsb
inc
subb
hlt
bound
jnp
das
out
rclb
xchg
stos
dec
insb
fistl
popf
jge
ja
inc
adc
mov
sub
push
xor
test
push
dec
fsubrs
es
dec
sub
cltd
lahf
inc
adc
xchg
inc
movsl
jb
inc
fisttps
inc
loope
xchg
xor
dec
pop
mov
sti
mov
mov
mov
cmpb
je
or
jne
andb
inc
cmp
jl
xor
push
sub
mov
add
cmpb
or
jl
filds
mov
inc
push
inc
cmpb
inc
push
or
mov
push
add
push
sbb
ret
pop
sub
lcall
rclb
jle
div
stos
lea
iret
jl
addr16
jecxz
push
mov
cmp
mov
lret
pop
inc
dec
popf
xchg
lcall
mov
dec
cmp
jle
pop
out
clc
jmp
iret
and
jl
cmp
jg
loopne
xchg
pusha
ret
fwait
popa
inc
xchg
iret
push
or
push
pop
cmp
inc
mov
jbe
pop
out
push
je
fildl
sub
nop
fstpt
mov
xlat
fstpl
jp
popf
cld
ret
popa
sarb
aaa
jne
push
pop
aas
pop
std
jmp
sti
mov
mov
cmp
jle
mov
add
cmp
jge
xchg
lea
cltd
rclb
outsl
pop
cmp
js
jne
dec
dec
in
pop
shr
push
add
xor
ja
es
mov
xor
mov
out
sub
sbb
jne
decl
std
push
xorl
xchg
loope
cmc
dec
sbb
scas
pushl
mov
inc
lea
mov
push
push
mov
testl
jbe
lea
add
cmp
je
and
and
mov
mov
inc
and
mov
pop
sub
adc
fsts
sarb
sbb
bound
jbe
push
adc
cmp
fsubs
movsb
mov
lock
lcall
cmp
je
push
push
rcll
push
add
jmp
pop
fnstcw
inc
mov
int3
std
pop
push
inc
xorl
fwait
push
sbb
dec
inc
jmp
cwtl
sbb
xor
lcall
in
mov
fdivl
xorb
and
and
mov
cmc
add
gs
pop
std
adc
push
je
push
clc
daa
jne
fcmovu
lock
sbb
ret
rcll
or
pop
push
push
or
push
in
shrl
aam
xchg
in
mov
popa
push
outsb
or
pop
and
sti
lea
test
dec
bound
je
popf
jne
xor
jp
mov
fsubs
in
adcb
and
pop
mov
mov
pop
daa
in
ret
in
xchg
push
xchg
outsb
pop
push
and
xlat
mov
bound
dec
jb
mov
xor
lcall
xor
icebp
aam
adc
cmp
pop
dec
mov
insb
xorb
and
xchg
jbe
jle
loopne
or
and
add
mov
aaa
insb
fcoml
int
jo
push
adc
inc
push
push
dec
push
popf
sub
push
jecxz
fwait
lea
add
xor
pusha
push
clc
je
lock
testl
popa
push
and
nop
outsb
int
inc
sbb
pop
fdiv
dec
aad
popf
mov
xchg
rcl
mov
cli
addr16
pop
fsub
sub
cmpsl
sub
xor
arpl
test
jp
inc
mov
push
add
push
iret
jecxz
push
andl
pop
or
xlat
sub
dec
xor
ret
clc
aaa
dec
call
lock
push
push
sub
cmc
in
mov
push
xor
and
inc
outsb
jmp
sbb
pop
subb
int3
cmp
sbb
xlat
pushl
jne
pusha
pusha
mov
into
pop
int
es
mov
or
movsb
fdivs
mov
push
outsb
ss
sahf
xor
pushf
je
repz
sub
xor
jo
pop
mov
cltd
cs
add
xchg
or
jo
add
fwait
push
js
add
or
push
andl
inc
xor
movsl
inc
jecxz
dec
lods
loope
cltd
or
push
pop
int3
std
sbb
adcb
call
pop
jnp
stos
pop
inc
add
ret
imul
add
mov
addr16
in
inc
push
ret
test
xchg
inc
lods
adc
adc
mov
pushf
push
add
jp
fldl
pop
loop
into
pop
and
jle
mov
cmp
pop
mov
add
lds
fsubs
aad
fdivs
xor
adc
imul
test
cmp
lahf
or
jecxz
inc
or
adc
or
xor
scas
shl
ret
mov
cmp
jmp
test
push
aam
cmp
hlt
scas
or
out
and
cmp
cmp
cmp
push
add
cs
inc
ficomps
add
call
sbb
mov
inc
push
inc
mov
cwtl
add
push
inc
mov
icebp
jmp
push
cmc
cmp
adc
aas
decl
xor
clc
add
jle
sahf
loope
jle
push
jg
rolb
push
lret
or
mov
sbb
stos
adc
mov
ret
arpl
pop
sub
ret
or
push
mov
ds
jmp
xchg
mov
sti
and
je
mov
imul
enter
cmp
add
adc
and
lods
adc
fdivrs
cltd
fisubrl
adc
dec
loopne
scas
orl
ds
jnp
sbb
enter
lahf
fwait
mov
cmp
jbe
in
mov
mov
pop
popa
ja
je
lea
adc
ud0
mov
adc
or
push
cmp
clc
mov
das
push
and
sbb
jnp
sub
adc
mov
mov
or
lea
cmp
test
xor
push
and
bound
enter
sub
xor
shll
and
sti
aaa
dec
sarl
sbb
add
add
add
or
add
or
cmp
dec
push
and
call
stos
inc
rclb
dec
fcoml
add
jno
je
sub
out
js
lds
mov
mov
cmc
push
shlb
jle
lret
sti
dec
xchg
dec
je
add
mov
and
inc
into
jo
mov
mov
xchg
mov
sbb
or
popa
stos
rorl
adc
jbe
inc
jmp
dec
arpl
dec
mov
and
push
mov
sbb
mov
mov
clc
les
adcl
xchg
push
bound
push
cmp
jo
bound
dec
jne
push
push
push
dec
aas
jae
lock
mov
adc
push
and
push
jg
andb
push
pop
mov
mov
cmp
stos
aam
mov
rcll
out
mov
push
adc
arpl
mov
imul
and
xor
call
add
sbb
sub
or
adc
jg
lock
or
lock
int3
sub
out
pop
push
in
shlb
cld
push
or
ror
pop
cmpb
and
fucomip
jne
out
lods
jmp
and
xor
cmpl
test
inc
aas
cmpsb
mov
jg
nop
inc
pop
push
push
push
xor
add
flds
insl
xorl
pop
call
cmpl
cmpsb
adc
lods
and
xor
mov
or
lock
outsb
je
sbb
adc
cmc
lcall
and
or
fnstsw
cmpsl
inc
xchg
imul
cmpsb
sbb
sbb
xchg
popa
loop
mov
jb
pop
lea
idiv
hlt
adc
inc
mov
je
fistpl
data16
mov
je
gs
mov
cmp
dec
sub
cmp
xchg
rcl
nop
push
inc
cmpl
xlat
push
ret
sete
push
aas
in
mov
cmp
arpl
mov
bound
mov
cmp
push
push
shl
enter
call
pop
xchg
mov
adc
xor
push
add
iret
and
lods
fimull
inc
xlat
dec
and
nop
cmp
rcll
mov
jp
and
jge
sub
pusha
sub
push
por
jp
loopne
add
sbb
pop
fcoml
push
loop
sub
in
add
sarl
xchg
int3
pushf
add
push
outsl
jl
add
push
movsb
xchg
daa
mov
sbb
sbbb
pop
gs
mov
ja
or
ss
ss
in
jb
jo
popa
push
dec
jg
and
in
or
orb
adc
push
pusha
mov
mov
std
mov
mov
or
ret
icebp
adc
xchg
leave
popa
push
leave
add
movsl
lock
and
mov
sbb
sub
nop
stos
fs
pushf
stos
fs
mov
fs
sub
nop
stos
fs
nop
mov
fs
dec
sub
enter
sbb
xchg
adcl
pop
jmp
push
push
in
push
adc
and
mov
and
inc
xlat
rcrb
sbb
cwtl
ljmp
push
mov
and
outsb
loopne
add
test
sub
jg
add
mov
je
cmp
jno
push
call
insb
dec
xor
inc
jno
call
xchg
xor
pop
adc
stos
jbe
sbb
je
pushl
xchg
jge
test
rol
dec
out
icebp
clc
fdivrs
add
sub
pushf
in
dec
mov
dec
loope
and
xchg
cmp
add
movsb
cmp
loope
test
push
jo
clc
adc
adc
mov
jns
pop
or
pop
je
mov
lcall
xor
mov
clc
xor
mulb
push
rol
pop
push
xchg
dec
es
pop
inc
pop
icebp
wrmsr
xchg
jl
sub
dec
ss
hlt
adc
or
iret
out
add
enter
xchg
jo
mov
sarl
daa
sub
dec
adcl
or
dec
push
add
cld
jle
out
test
aaa
sub
pop
je
or
mov
lret
mov
add
shlb
iret
out
shlb
rcrb
mov
mov
clc
or
push
pop
les
xchg
push
inc
cwtl
xchg
clc
jnp
movsb
popf
outsb
movsl
or
mov
fsubrs
mov
push
shl
and
ret
sub
repnz
lahf
sbb
or
pop
push
pop
push
or
lcall
ret
pop
xchg
popa
push
and
lock
and
cwtl
imul
cmp
inc
mov
sbb
pop
xor
xchg
inc
push
mov
dec
daa
hlt
popa
cmp
or
outsb
mov
add
cmp
xchg
test
jo
cwtl
gs
xchg
xchg
inc
xor
mov
mov
int3
cmpl
inc
arpl
adc
inc
arpl
mov
or
dec
fs
shlb
call
loop
fbstp
add
fistps
or
inc
fisttpll
cmp
fiaddl
in
inc
adc
mov
cmp
adc
xchg
and
add
sub
sbb
cmp
data16
cmp
rcrb
add
div
adc
inc
sbb
cmc
inc
inc
div
mov
cmc
adc
lcall
mov
faddp
xor
inc
fcoms
je
pop
jno
pusha
push
scas
and
mov
and
add
shl
test
pop
mov
dec
outsl
scas
and
sbb
mov
fstl
xor
xor
push
mov
push
xor
sbb
sub
xlat
cmpl
sbb
fdivrs
and
call
fsubrs
add
pop
xor
sub
xchg
subl
mov
add
mov
cmp
cld
ret
pop
mov
imul
xor
int3
fbstp
clc
shr
and
nop
lret
rcrb
mov
dec
in
mov
sarb
inc
fmulp
jne
sub
cmp
jle
jnp
fidivl
add
xor
sbb
test
mov
sbb
sbb
and
or
ret
mov
jo
roll
pop
je
cmp
or
xchg
pop
sbb
push
popl
in
shll
adcl
cld
mov
inc
adc
mov
mov
sbb
push
aaa
leave
sub
or
mov
cmp
popa
arpl
dec
int3
pop
mov
xchg
or
xor
pop
pop
int
inc
pusha
xor
lds
mov
xchg
or
daa
push
and
cmp
mov
dec
mov
sbb
cwtl
cmp
mov
push
repz
daa
mov
inc
or
xor
scas
push
push
or
aam
test
mov
add
sbb
and
ret
mov
mov
or
dec
dec
out
test
and
cmp
or
pop
push
scas
inc
mov
add
add
popa
inc
and
ret
pusha
movsl
xor
stos
pop
inc
lea
loopne
cli
mov
test
xchg
adc
xor
rcrb
cmp
cmp
rorb
stc
and
ja
pop
hlt
dec
cwtl
in
rcll
insl
xor
fiaddl
fistps
insb
cmp
sbb
cmp
in
dec
imul
fadds
push
and
movsl
orl
pop
jns
add
jge
jbe
shrb
test
das
test
push
or
dec
das
pop
test
sub
dec
push
adc
push
pop
jo
clc
ficoml
js
sbb
jmp
test
jg
rcll
jecxz
and
pop
and
xor
mov
xor
or
inc
sub
adc
mov
sub
adc
inc
fs
sbb
mov
sbb
push
or
adc
jg
cmp
shlb
cmp
cmp
push
sub
sbb
std
sar
bnd
in
ds
dec
sbb
or
push
les
dec
lret
mov
or
lret
mov
jmp
loop
orl
add
mov
cmp
push
mov
fidivl
push
push
cmp
cmp
nop
dec
push
in
adc
lret
add
inc
jne
loope
insb
iret
aad
test
sub
xor
xor
add
mov
sub
xchg
sbb
in
xor
lea
addps
add
subb
jae
fcomps
sub
iret
prefetch
or
add
add
rcr
sbb
xor
mov
xor
lret
rcll
sysexit
popa
pop
cld
jl
pop
add
enter
jmp
nop
js
dec
je
or
js
pop
nop
pop
es
mov
mov
and
cmp
js
in
jmp
xchg
and
inc
push
mov
adc
xor
jmp
push
push
push
imul
lcall
fisttps
push
lock
not
jbe,pt
pop
add
cltd
js
add
cmp
lcall
push
inc
test
adc
inc
stos
mov
daa
and
adc
mov
repz
mov
push
or
lock
dec
dec
inc
test
jno
shrb
std
jle
mov
push
shr
mov
neg
lea
add
inc
inc
dec
xchg
hlt
jle
jne
pop
jmp
and
test
pop
je
xchg
or
stos
gs
shr
add
mov
shr
dec
and
or
pushf
push
hlt
cli
push
jne
sub
mov
xchg
jmp
or
jg
sbb
mov
lcall
xchg
lea
pop
andl
sub
and
mov
mov
iret
sahf
bound
and
mov
leave
mov
dec
sub
inc
sub
andb
pop
push
test
and
lods
add
and
sbb
push
dec
mov
sub
movb
inc
xchg
loop
pushf
cmp
test
sahf
add
and
in
test
out
and
insb
add
dec
mov
jecxz
cltd
nop
nop
insb
xchg
cs
scas
rol
sbb
rcrb
cmpsb
push
popa
loop
test
cwtl
push
inc
inc
cmc
lock
cmp
fs
cmp
inc
pop
xor
imul
inc
dec
hlt
or
or
pop
ret
push
pusha
test
push
or
sahf
adcb
imull
push
test
and
hlt
nop
pop
xor
xor
outsb
cmp
testb
pop
and
and
add
imul
out
inc
xor
inc
push
xchg
cmp
add
push
jno
das
lods
push
pop
or
cmp
mov
add
fiaddl
iret
cmp
dec
popa
push
xchg
int
fmull
jns
cld
cmp
test
jmp
sbb
popa
nop
call
push
xchg
jae
imul
fmull
jne
outsl
pop
test
lock
sbb
mov
sub
push
jns
in
pop
lds
mov
fcomp
cmp
xchg
in
sbb
inc
cmp
inc
cmp
int3
or
js
ss
jmp
inc
ds
sbb
inc
loopne
call
push
dec
fadds
jle
or
jge
jge
mov
fimuls
jle
movsl
enter
pop
push
int
push
pusha
cld
inc
xchg
mov
cmp
jl
loopne
mov
sbb
add
fadd
push
cmp
add
push
nop
dec
pop
mov
addr16
push
test
sub
dec
sbbl
jno
ja
pop
jne
xor
fs
jb
push
dec
sbb
imul
mov
or
dec
cmp
nop
nop
loope
loopne
push
or
cmc
adc
adc
js
inc
push
cmp
adc
jae
adc
popa
mov
push
cmovge
in
aam
in
fcom
jne
push
movsl
cmc
out
fdivrs
jle
mov
mov
sub
mov
push
mov
pop
or
or
inc
add
sub
dec
int3
hlt
add
fisubl
adc
js
scas
dec
jne
fs
pop
xor
jns
or
jb
mov
enter
add
shll
mov
or
xchg
shl
popf
iret
cmpsl
les
lods
cld
jns
sub
movsb
inc
add
cmpsl
push
add
add
fdivrl
add
mov
xor
and
mov
add
sub
ja
dec
je
dec
ss
in
or
mov
xchg
lret
clc
pop
sbb
js
sub
cmp
adc
dec
cld
add
cmp
call
fnstsw
inc
jne
punpcklbw
mov
es
ds
fmulp
scas
in
test
leave
adc
mov
mov
xchg
test
xchg
sbb
jne
pop
lcall
push
xchg
sub
pop
cmp
loope
mov
lfs
add
faddl
cltd
lods
mov
xor
xlat
mov
sbb
mov
arpl
push
or
xor
xor
in
aam
or
push
cmp
and
nop
imul
arpl
pop
cwtl
mov
shl
push
xorb
add
dec
clc
pop
xchg
xchg
in
mov
hlt
insb
push
xor
das
outsb
hlt
cmp
pushw
stos
or
xorl
jbe
in
mov
std
add
mov
imul
andl
pop
mov
push
xchg
pop
push
popa
push
xor
mov
sbb
push
subb
pop
inc
xchg
dec
pop
pop
sbb
sub
pop
fnstcw
nop
mov
cli
or
dec
clc
add
outsl
bound
cmpsb
arpl
lahf
sub
roll
subl
and
cmp
sub
mov
dec
mov
mov
das
xchg
sub
popf
xor
add
mov
pop
and
push
pop
test
mov
sahf
sbb
push
popf
rclb
xor
or
cs
aaa
sbb
or
mov
ret
sbb
mov
xor
or
ret
adc
cmp
push
and
daa
daa
ss
mov
dec
mov
xchg
sbb
roll
sbbl
pop
mov
inc
mov
add
mov
out
sub
repz
push
repz
mov
push
adc
inc
sbb
or
mull
sub
les
cmpsl
push
pop
adc
loop,pn
fdivrs
sti
pop
int
and
add
xchg
repz
xchg
add
nop
sbb
and
add
test
pop
fistpll
gs
pop
add
xchg
and
mov
cs
and
add
xor
sub
mov
cmp
sub
mov
cmp
or
ja
or
bound
cmp
push
mov
or
pop
push
inc
ss
sahf
in
jo
push
popa
inc
xchg
inc
cmp
xor
inc
or
cmp
pushf
pop
inc
fildl
cmp
out
sbb
pop
sub
jge
or
or
push
pmulhw
sbb
leave
cmp
mov
sub
frstpm(287
sub
adc
fs
jnp
or
push
push
pop
cli
and
sbb
mov
das
shll
popa
andb
add
sub
add
mov
iret
pop
fs
test
mov
push
mov
rep
pop
cltd
test
jge
adc
adc
scas
xor
sbb
add
jne
repnz
adc
mov
or
or
mov
movsl
or
push
incl
mov
jmp
jg
cltd
lret
data16
mov
jne
pop
les
fmull
add
jns
ss
movsb
or
cmc
sbb
xchg
add
mov
push
inc
and
nop
cs
push
jmp
lds
bound
xor
out
pop
xor
sbb
cmp
mov
leave
rcl
in
sub
mov
lcall
nop
add
jno
add
sbb
fwait
xor
push
jns
adc
cmp
sbb
inc
rorb
roll
pop
scas
xor
add
fwait
sub
xor
mov
or
adc
push
inc
or
lock
lcall
loopne
xor
call
fldenv
mov
dec
jecxz
popa
xor
jg
dec
jbe
sbb
jne
push
mov
movl
sbbl
pop
sub
xchg
sbb
or
pop
mov
aaa
add
add
ret
push
rcrl
or
int
icebp
in
add
sub
add
adc
movsl
test
mov
jb
xchg
pop
jmp
push
rolb
movsl
add
cmp
lahf
pushf
or
mov
lock
ret
lcall
dec
ja
inc
mov
aaa
imul
inc
call
out
cmp
cs
cmc
roll
test
mov
and
test
pop
pop
sub
call
add
mov
cmp
sub
in
jmp
jge
and
add
data16
push
push
push
cmp
mov
xor
mov
fwait
loope
sar
push
mov
pusha
mov
stos
cmpl
sbb
insl
lods
mov
or
lock
arpl
and
enter
xor
mov
cmc
xchg
pop
lods
pop
repnz
out
mov
push
xor
adc
lret
hlt
into
xchg
inc
in
lret
cmpsl
cmp
fwait
mov
pop
mov
dec
popa
shl
in
orl
les
mov
dec
cs
sbb
inc
bound
pop
jle
sub
sbb
jnp
stc
jo
or
inc
push
cltd
xchg
push
xor
cmp
add
dec
cmp
cld
inc
jno
arpl
les
das
inc
repnz
dec
push
cltd
cld
push
xor
dec
push
cmpsl
std
mov
mov
push
int3
pop
mov
xchg
dec
cli
add
nop
sbbl
or
loopne
xchg
lret
rclb
scas
adc
mov
push
in
rol
mov
scas
icebp
dec
std
push
call
addl
dec
sbb
xchg
mov
rorb
or
in
inc
int3
gs
jne
sti
mov
xchg
sbb
add
or
add
lods
or
mov
nop
add
jno
rorb
mov
xchg
push
sub
or
jl
push
lcall
int
push
adc
mov
loopne
xchg
xlat
mov
jns
popa
js
das
pushf
cs
fwait
xor
or
clc
push
insb
sti
mov
xorl
inc
les
add
lock
adc
sbbb
dec
scas
pop
rol
test
fsubp
push
xorb
xor
fs
hlt
lea
xchg
jle
daa
cld
fidivs
inc
bound
add
push
xor
dec
mov
fimuls
aas
aad
andb
loopne
and
and
sbb
mov
xor
mov
bound
inc
or
adc
gs
cmp
adc
std
std
inc
sbb
add
cmp
pop
push
or
or
mov
subl
rolb
and
outsl
dec
ret
or
popa
fmull
cmp
js
shll
mov
mov
lcall
push
add
push
and
sqrtps
add
push
dec
and
xor
push
xorb
adc
mov
enter
mov
arpl
inc
cwtl
sbb
sbb
pop
add
xor
fstps
sbb
les
jne
jg
rclb
inc
pop
or
addr16
sbb
adc
push
mov
pushf
shlb
dec
ja
jne
and
mov
insb
mov
dec
push
test
cs
mov
dec
jnp
movaps
push
repz
mov
push
shrb
test
fsubr
lret
dec
or
sbb
inc
xchg
addr16
mov
push
in
inc
aam
aam
outsb
push
and
push
pop
jb
nop
int3
lea
sub
xor
pop
add
sub
sbbl
leave
xor
dec
rolb
push
cmp
jne
das
icebp
mov
lods
inc
in
adc
loope
enter
bound
ret
sbb
cmp
mov
ret
jmp
mov
aam
bound
mov
nop
xchg
sub
iret
mov
pushf
movsb
adc
pop
sahf
cld
es
outsl
in
movl
lock
jns
pop
out
and
xchg
xchg
mov
xchg
adc
cmp
dec
cmp
cmp
fwait
mov
fwait
mov
and
mov
cmp
add
mov
lcall
lret
popa
addr16
push
outsl
xor
ss
sar
and
dec
mov
loopne
dec
lods
sti
pop
je
xorl
ret
add
inc
ficompl
test
mov
push
or
adc
pop
jg
sar
cmp
or
sbb
dec
hlt
std
mov
sbb
add
pop
scas
sub
add
and
xor
dec
pusha
cmp
leave
add
or
movsl
mov
mov
std
adc
fcoml
aas
cmpsb
or
insb
or
sbbb
cmpsl
stc
insl
inc
add
hlt
pop
das
repz
cmpsb
sti
pop
shrl
das
push
add
addl
and
rorl
scas
push
popa
or
jge
push
in
or
xor
test
and
outsb
sub
sbb
push
mov
inc
jp
daa
inc
fwait
sbb
jecxz
test
pop
mov
add
loop
or
pop
lock
popa
cmp
and
push
inc
push
sub
push
mov
and
push
pop
ret
not
lea
mov
pop
xchg
cld
aam
add
pop
xor
inc
out
dec
mov
cli
enter
mov
add
xchg
mov
pop
xchg
push
add
cmp
lahf
es
jle
cmp
sub
cmp
test
loopne
fsubs
sti
mov
inc
loope
js
or
mov
add
cld
pop
sbb
ret
or
and
dec
fdivl
pusha
xor
sbb
or
jmp
pusha
add
inc
xor
rolb
push
and
add
adc
and
or
inc
daa
data16
jmp
clc
std
mov
icebp
lea
add
or
pop
adc
dec
jg
stc
or
js
dec
fwait
cltd
ss
jo
pop
or
int
xchg
pop
sbb
mov
mov
loop
lret
adc
icebp
popa
cld
cld
mov
in
xor
sbb
pop
addr16
mov
and
loop
les
mov
push
rcl
add
jmp
pushl
pop
test
pop
dec
and
push
pop
insl
loopne
scas
ss
cmp
sub
mov
adc
outsl
mov
aaa
xor
jno
adc
gs
jo
sbb
dec
dec
cmpsl
stos
xor
imul
mov
inc
pop
leave
push
clc
push
repnz
push
lods
or
jo
jle
out
mov
push
adc
std
add
decl
je
mov
add
test
xchg
test
sub
add
fcmovnu
inc
add
or
pop
aaa
imul
lret
add
outsl
adc
test
cli
stc
lock
sub
inc
or
mov
mov
push
jae
inc
fisubrs
cmp
or
xchg
scas
popa
cmp
jne
push
test
test
jl
in
inc
ljmp
cwtl
sub
cmpsb
or
xor
es
nop
xchg
add
lcall
daa
or
dec
dec
imul
inc
bound
adc
pusha
out
mov
or
mov
je
mov
cmpsb
addl
push
and
cld
lcall
push
dec
fstl
adc
nop
mov
out
adc
cmp
ds
enter
movsb
test
cmp
jae
xchg
adc
cld
add
les
rclb
mov
movsl
loope
mov
push
rolb
pop
shll
mov
xchg
xor
int3
push
loop
add
and
fisttpl
cmp
xor
rol
adc
enter
xorb
push
inc
cmp
fiaddl
push
mov
sub
mov
repnz
movsl
add
sbb
ja
aas
xor
popa
mov
inc
cmp
jl
andb
int
and
cmp
mov
push
mov
das
iret
adc
jge
andl
add
cmp
cld
pusha
popf
and
adc
mov
popa
add
test
adc
mov
push
test
inc
sbb
out
add
xlat
scas
scas
inc
cmp
jl
push
pop
pop
jnp
in
sub
int
xor
sbb
jge
mov
jo
or
push
test
cmpsb
or
cmpsb
inc
and
xchg
loopne
test
xor
sbb
out
int3
jnp
and
cmpl
inc
adc
push
movsb
lret
adc
add
stc
fwait
mov
add
mov
or
mov
repnz
dec
pop
jne
mov
jne
lcall
and
add
xlat
jns,pt
add
adc
or
ds
sbb
dec
push
sub
movsl
mov
ret
mull
mov
jbe
mov
or
or
jo
push
cmp
xor
xorb
pop
adcb
pop
dec
js
adc
icebp
pop
jbe
mov
pop
jbe
and
cmp
dec
adc
outsl
out
mov
cmc
add
add
pop
nop
into
sbb
aam
pop
inc
test
dec
jecxz
mov
mov
pop
jo
xchg
out
or
xchg
popa
jns
ljmp
lret
je
vmread
adc
pusha
loop
mov
shll
into
xchg
push
repz
cmp
rcrb
inc
loopne
pushl
and
inc
sub
clc
lds
bound
jl
movsl
jb
mov
insl
insl
sbb
add
cmp
inc
stos
daa
mov
cmp
lods
add
or
mov
aam
stos
push
insl
insb
and
and
pop
aaa
dec
add
or
test
cmp
inc
je
adc
fcmovb
inc
in
je
push
in
sbb
lock
je
adcl
jnp
inc
inc
cmp
jb
sub
lods
adc
or
xchg
add
clc
jnp
jmp
stos
mov
and
push
dec
inc
lret
cld
out
xor
push
inc
scas
mov
jg
shll
ja
jp
push
arpl
cltd
jp
jne
jmp
mov
in
pop
sbb
lods
inc
push
test
pop
jb
jmp
inc
mov
jns
xchg
test
cmp
test
lods
add
fstl
xchg
adc
sub
popa
or
or
or
insl
mov
call
mov
add
and
or
pop
xchg
std
xor
cmpl
mov
adcb
fwait
lods
sbb
jo
mov
jmp
imul
sbb
cs
or
lods
pop
scas
dec
or
jmp
push
adc
cmc
pusha
add
dec
movsl
cmpb
adcl
aas
movsb
ss
add
xor
xor
xor
repnz
mov
adcb
push
xchg
inc
rcrl
js
jo
inc
mov
mov
push
cli
adc
inc
ss
push
dec
xor
mov
inc
xor
sub
inc
xchg
sbb
jl
cmp
adc
pop
jno
cmpsb
xor
mov
sbb
mov
inc
adc
rcll
xchg
inc
stos
inc
mov
mov
adc
pop
inc
push
pop
dec
or
int3
push
jo
xchg
mov
sbb
fs
inc
scas
xchg
sbb
xchg
push
xor
inc
aaa
ja
xor
inc
jg
and
nop
xorl
xor
rclb
jnp
pop
push
pop
dec
pop
xor
jge
adc
push
jo
xlat
cwtl
add
inc
loop
jbe
sub
and
mov
jmp
das
jl
sub
push
ja
push
or
cmp
stos
mov
jnp
rorb
pop
call
adc
cs
in
je
jno
xor
pushl
push
lret
adc
mov
mov
push
inc
or
mov
call
xlat
movsb
adc
push
je
je
cltd
jmp
cmp
adc
xchg
hlt
mov
push
outsb
cmpw
pop
fmuls
push
gs
and
pop
movsl
pushl
into
imul
enter
jae
call
jb
adc
xor
push
dec
xchg
add
jmp
ret
cld
call
mov
popf
testb
movsl
push
repnz
sbbl
aam
and
cmp
add
sbb
inc
push
test
sbb
jb
cmp
loopne
or
mov
mov
and
enter
cmp
jmp
lock
adc
loopne
daa
subl
sbb
mov
shl
and
addr16
pop
loopne
sbb
les
loopne
scas
add
adc
push
and
xchg
icebp
scas
scas
push
pop
sub
add
ret
sbb
jg
mov
push
incl
sub
add
call
loopne
cmp
mov
sub
sub
sahf
mov
pop
adc
inc
imul
test
sub
add
loopne
inc
and
adc
pop
inc
shrl
xchg
mov
test
in
insl
xor
cld
mov
std
outsb
mov
sbb
add
add
les
int
lods
mov
inc
aas
clc
sahf
jp
sub
or
iret
movsl
test
inc
or
xchg
push
mov
push
movb
push
pop
rcl
aam
inc
adc
daa
add
popa
sbb
inc
in
arpl
and
adc
sub
out
adcb
shrl
loop
push
dec
and
repz
inc
jb
adc
in
notl
enter
add
or
fwait
and
ret
je
dec
dec
adc
xor
sbb
jae
fidivl
mov
xlat
or
jmp
push
jmp
aad
fidivrl
imul
xchg
jbe
xor
adc
mov
mov
mov
adc
rcrl
aaa
jno
movsb
in
rcll
or
fdiv
cmp
mov
push
sti
push
xchg
inc
push
int
jge
stc
shl
sbb
sti
insb
inc
test
lock
shr
and
inc
add
cmp
adc
addl
clc
sbb
inc
icebp
sahf
gs
jge
jl
xlat
pusha
cmpl
aas
push
jno
pusha
push
sti
push
popa
inc
mov
mov
add
test
jecxz
push
ret
mov
push
leave
pop
jno
movsb
pop
test
nop
mov
mov
fsubrl
pop
jnp
adc
or
jnp
bound
cmpsb
push
push
jne
ss
adc
or
pop
in
push
adc
sbb
in
xchg
inc
icebp
adc
xor
and
sbb
adc
jmp
int
xor
jnp
add
addl
mov
imul
call
xor
jne
xchg
bound
mov
sub
incl
or
add
mov
adc
mov
cmp
xchg
mov
sbb
or
push
pop
cmpb
jmp
int
pop
pop
xchg
cmpsb
push
insl
sbb
in
pop
add
and
or
dec
test
or
push
mov
cmp
dec
lock
lea
loop
mov
mov
push
test
test
mov
jo
push
cmp
je
cmp
jne
mov
stc
mov
outsl
loop
insb
cmp
jne
mov
andl
stc
pop
loop
fwait
data16
sti
cld
or
jmp
mov
call
mov
pop
jne
and
bound
sub
jg
cmp
jbe
dec
xchg
and
lcall
adc
daa
cwtl
dec
sub
cmpsl
adc
push
xor
xchg
loopne
xchg
je
lods
lret
daa
sbb
push
sbb
add
xor
sub
addr16
sbb
das
scas
add
sarl
add
icebp
inc
shrl
aaa
pop
pop
add
sub
loope
pop
repnz
ret
je
enter
jns
aas
js
jne
jnp
lea
mov
nop
and
mov
mov
jg
push
sub
push
sbb
pop
inc
rcrb
je
sub
je
jge
add
and
mov
pop
add
xor
pusha
das
mov
push
inc
les
adc
subl
push
and
addl
scas
das
inc
stos
pop
inc
sbb
roll
pop
fists
loop
or
inc
xchg
ja
cmp
push
xor
xor
add
xor
xor
sahf
rorl
sub
mov
push
das
mov
pop
jg
in
mov
pop
pop
pop
gs
or
add
leave
jne
inc
loope
mov
ss
add
ds
in
addb
je
or
push
jmp
xor
add
adc
mov
or
sbb
pop
mov
cmp
cmovnp
xorl
adc
pop
mov
mov
pop
nop
movsl
insb
loope
cmp
jmp
fildll
xor
add
add
xor
movsl
imul
add
ret
cmp
inc
cmp
jb
cmp
mov
and
push
cmp
jge
das
orl
aas
cmp
and
push
pusha
pop
or
rol
pop
inc
subl
mov
mov
xor
mov
das
adc
lods
pop
lds
push
inc
pop
in
sub
jb
inc
pop
lea
adc
lock
or
xor
and
adcl
in
rclb
push
and
les
push
nop
in
and
and
adc
loopne
inc
sub
or
sub
shlb
int3
inc
mov
mov
sub
sub
pop
bound
fcoms
sbbl
mov
fadd
xlat
mov
inc
in
mov
adc
mov
and
ret
jmp
arpl
mov
push
mov
cmc
jl
jo
and
inc
sbb
xor
mov
pop
pop
xchg
add
imull
cmp
jge
lea
mov
or
mov
pop
pusha
clc
push
sub
adc
or
mov
insl
test
xor
ret
adc
cmpsl
nop
mov
icebp
pusha
jg
mov
pop
add
in
sbb
add
clc
data16
pop
mov
sahf
sti
add
popa
sub
pop
cltd
cmp
adc
mov
lods
movb
test
sbb
movsb
inc
into
dec
cmp
pop
out
mov
fimuls
xor
mov
sbb
lcall
xor
fcomps
fisttpll
push
xchg
call
or
push
push
or
and
mov
jp
popf
push
mov
cld
xor
cmc
and
loop
sub
faddl
sub
mov
or
xchg
add
es
adc
cli
rcrl
lock
and
push
je
push
add
test
fs
cld
cli
je
cmpsb
pop
les
sub
dec
fisubl
mov
xchg
add
push
xchg
rol
cltd
inc
jmp
loop
aad
cmp
and
sysexit
jo
outsb
pop
iret
test
std
movntps
pop
mov
out
popf
dec
cmpsl
lods
add
add
cltd
xor
mov
aaa
aad
test
sbb
push
mov
leave
pop
cmp
push
loopne
and
xlat
xchg
add
fildll
sbb
imul
mov
lea
push
ss
popa
xchg
xchg
cmp
jae
test
imul
lods
dec
push
jmp
xor
rolb
mov
movsb
outsl
pop
push
push
sub
aam
in
inc
jo
inc
or
orb
fwait
sbb
adc
pop
mov
jo
pop
lods
pop
out
add
xchg
sbb
das
int
ret
dec
push
cmp
in
hlt
cltd
idivl
je
pushw
and
lods
mov
les
ficoms
les
sbb
or
call
insb
sbb
push
and
adc
mov
dec
js
and
pop
mov
mov
pop
or
sub
call
aam
js
jo
mov
cltd
adc
dec
cld
push
mov
pop
jge
push
jl
loopne
out
mov
push
mov
add
std
xor
dec
out
sbb
nop
cs
jb
movsl
and
enter
mov
mov
arpl
jmp
adc
xor
mov
jb
ret
jp
or
mov
push
push
pop
imul
push
push
imul
pushf
fs
pop
push
add
add
push
add
aam
xor
inc
aad
mov
in
pushf
mov
sub
xlat
adc
lods
in
pop
les
push
pop
pop
icebp
push
repnz
popa
or
push
inc
fldt
add
xor
mov
or
insb
push
jmp
addr16
lods
dec
adc
dec
roll
leave
in
addl
adc
add
and
mov
add
ret
popf
ret
aam
push
fidivl
imul
push
push
imul
sbb
rcr
and
mov
sbb
inc
push
dec
push
insl
xchg
cmp
mov
dec
and
dec
jecxz
insb
aaa
xor
insl
push
pop
movl
xchg
pusha
outsl
jbe
cmp
test
add
xchg
movsl
and
add
aaa
mov
sub
cmp
push
push
adc
adc
xchg
sub
insb
nop
lock
jo
push
sbb
dec
inc
sti
repnz
outsl
mov
add
and
mov
push
aam
stc
mov
fdivl
push
xor
mov
mov
jo
lahf
pusha
sub
insb
icebp
xor
scas
fisttpl
add
fwait
mov
insl
popf
scas
aad
popl
xor
xlat
xor
lds
cmp
jae
add
cli
mov
fcoms
push
xlat
push
mov
out
insb
cmp
sub
pop
movsb
jbe
lret
jge
pop
out
inc
call
ljmp
fldl
dec
into
push
sub
fcoms
flds
gs
jbe
mov
add
inc
out
add
xor
filds
dec
add
xchg
pushf
add
insb
fiadds
fs
jmp
xor
inc
cld
in
cmp
sahf
push
inc
lcall
fwait
js
das
repnz
jo
lea
sbb
loope
or
jnp
mov
lcall
push
xchg
scas
and
inc
mov
dec
pop
rcrb
xchg
insb
cmp
in
cmpsl
xor
jl
std
je
xchg
in
jge
push
addr16
mov
xor
sbb
mov
xor
sub
cmp
adc
sub
rcrb
xor
daa
add
lea
jg
jl
cld
clc
cmp
cs
push
xchg
and
xchg
mov
mov
mov
xchg
loop
cmp
pop
arpl
cltd
pop
les
xor
push
in
pop
addb
loop
std
aam
rorl
xor
mov
dec
sub
xor
enter
mov
mov
lcall
cli
adc
mov
mov
cmp
mov
call
xor
std
div
pop
mov
adc
or
mov
jecxz
inc
repz
faddl
push
shrb
pop
pop
test
imul
inc
sub
mov
cmp
mov
sbb
popa
adc
inc
loop
adc
xor
shlb
sub
push
es
sub
sbb
and
add
or
sbb
pop
pushf
pop
pop
or
rcrl
pop
xor
fisttpl
std
cli
mov
and
jg
cli
push
jecxz
xlat
push
sub
xlat
lret
cld
jb
cmp
ja
aas
fs
loope
mov
adc
pop
ja
jb
jnp
insb
xlat
push
jae
push
and
ja
push
inc
dec
repz
xor
cmp
xor
pushf
xor
sub
and
push
out
lods
iret
dec
sbb
or
pop
sub
sbb
add
adc
insb
pushf
call
icebp
xor
addb
jl
popa
mov
popf
cmp
mov
fs
pop
push
fucom
push
ds
in
jo
cmp
and
dec
sahf
sub
jne
and
mov
repz
push
and
mov
cmp
and
add
insb
adc
clc
adc
das
cmp
inc
or
in
xor
and
pushf
xor
es
fisubrl
push
or
xchg
push
cmpsb
std
mov
dec
imul
cmp
cmc
adc
hlt
shrb
rol
mov
arpl
xor
and
inc
adc
xchg
sti
aam
shrl
dec
movsb
insb
pop
pop
push
and
xor
xchg
pop
es
push
rolb
add
jns
leave
sbb
cmp
call
sbb
push
clc
mov
sbb
adc
push
push
dec
addr16
stc
test
popf
sarl
sbb
adcb
lret
fimuls
sub
xchg
rolb
dec
imul
in
mov
aam
sub
jno
push
jmp
shrb
mov
ss
addr16
imul
push
xchg
mov
orb
push
in
outsb
sarb
daa
aaa
outsl
iret
pop
mov
adc
push
sbb
push
fmuls
shrb
insl
mov
arpl
push
mov
popa
stos
and
xchg
in
adc
enter
cmp
mov
sbb
push
inc
mov
jecxz
out
and
pop
sbb
push
mov
xchg
push
mov
and
sub
inc
inc
jae
mov
inc
pop
push
mov
and
test
and
push
pop
sar
pop
jb
lcall
mov
xlat
jb
xor
push
dec
jne
add
pushf
dec
enter
sub
insl
dec
xchg
sbb
filds
imul
lods
mov
xchg
pop
sub
push
sub
pop
dec
mov
push
ja
movsb
xchg
inc
aam
push
mov
dec
idivl
popf
push
jb
data16
and
fidivs
enter
lock
adc
addb
jmp
mov
inc
push
dec
loopne
data16
mov
push
xor
mov
add
push
lds
aas
movsb
repnz
push
xor
call
sbb
in
inc
sub
pop
pop
xorb
std
ja
add
pop
aas
enter
and
adc
cmp
and
adc
jge
jg
sbb
neg
sbb
and
add
mov
mov
mov
test
or
ret
adc
cli
push
ja
out
inc
pop
mov
movsl
push
cmpsb
lea
mov
call
adc
jbe
clc
inc
aam
dec
cmp
xchg
je
dec
lods
fs
fisttpl
popf
dec
dec
mov
dec
mov
cltd
sub
push
xor
inc
and
inc
inc
bound
bound
push
lods
pusha
je
mov
bnd
xlat
adc
test
add
test
in
movsw
pop
mov
xchg
or
outsl
or
adc
xchg
mov
movsl
repnz
jno
and
lds
clc
test
and
and
daa
iret
inc
cmp
lcall
cmp
incb
fdiv
pop
call
lds
or
gs
pop
arpl
test
dec
rcrb
arpl
push
imul
andb
insb
data16
jge
add
push
clc
jne
fisttps
inc
xchg
and
movsb
leave
cmp
add
int
pop
and
lcall
loop
mov
ja
jecxz
push
pusha
or
push
int3
mov
and
jl
popf
int
adc
int3
pushf
jl
nop
jo
or
mov
mov
mov
push
add
adc
mov
sub
sbb
dec
sbb
cmp
icebp
cmpsb
je
popf
xor
add
scas
movsb
dec
les
lcall
pop
mov
in
add
lea
bound
insb
push
sub
daa
js
and
movsb
adc
test
dec
add
xor
in
inc
adc
adc
adc
dec
xchg
shlb
loopne
mov
dec
xor
and
or
push
lea
xchg
xchg
pop
xorl
push
push
push
shrl
les
pop
jnp
dec
sbb
sarl
mov
mov
fldenv
jecxz
std
jge
fs
int
cmp
sub
cltd
inc
mov
into
lock
mov
stc
add
xchg
mov
xor
in
mov
in
push
inc
pop
lea
mov
add
adc
push
or
sub
push
movsl
dec
scas
xor
dec
ret
arpl
push
add
xchg
call
xchg
orl
xchg
daa
or
adcl
cmp
jg
test
sbb
inc
pop
cmp
mov
jno
xor
mov
shlb
pop
sti
cmp
add
outsb
inc
cmp
dec
push
mov
je
xchg
dec
xor
stos
loop
xchg
je
inc
inc
jp
and
mulb
adc
cmp
cmp
cmpsb
dec
pop
pop
push
sbb
sub
movzbl
addr16
popa
xor
mov
and
sub
repnz
inc
xor
cmp
out
fldcw
mov
bound
sub
out
xor
pushf
aas
xor
cmp
les
cmp
pusha
xlat
in
loope
ret
jns
push
jno
cmp
mov
test
sahf
nop
mov
pop
je
cltd
negl
pop
sub
xor
xor
dec
sub
xorb
js
imul
or
aaa
mov
xor
ljmp
mov
mov
or
add
jno
inc
clc
add
adc
pop
loopne
push
adc
mov
inc
daa
or
sbb
movsb
xor
je,pt
cld
push
xchg
jae
or
sbb
jns
inc
cli
mov
cmp
jne
inc
ficomps
dec
cmp
rcl
inc
xor
pop
mov
adc
inc
pop
ret
mov
test
sub
push
xor
pop
xchg
push
pop
inc
sbb
dec
jmp
mov
sub
mov
sbb
or
enter
xor
iret
enter
inc
pop
mov
add
je
inc
pop
mov
xor
rep
orb
sbb
dec
mov
lret
testl
dec
pop
loope
loop
pop
cs
jecxz
ja
nop
in
sbbb
out
arpl
fs
mov
adc
dec
jbe
lods
jl
xor
xchg
out
dec
loop
pop
outsb
jmp
inc
scas
push
jne
xchg
push
push
dec
jecxz
imul
fcoml
in
imul
xchg
test
or
mov
sbb
inc
mov
inc
test
and
jmp
add
fadd
jae
cld
gs
ret
inc
sbb
inc
rclb
push
xor
dec
in
add
popa
add
or
cld
aam
push
enter
cld
aam
aam
pop
and
in
sbb
movsb
sti
jbe
sbb
jb
add
adc
and
test
inc
in
sbb
icebp
and
cmp
pushl
sub
push
popa
call
jmp
push
mov
sbb
jge
les
mov
loopne
or
lcall
fsubrl
dec
sub
loopne
jb
ljmp
xor
inc
fidivs
cmp
loopne
loopne
sbb
repnz
call
sub
in
pop
push
adc
call
adc
enter
pop
or
add
push
cmp
movsb
mov
inc
cmp
add
lret
sub
int3
clc
adc
sub
movsb
stc
adc
cmp
cmp
push
sub
popf
sub
fistl
out
jns
stc
xor
test
cmpsb
dec
xor
in
xchg
jno
cld
adc
sub
jo
cmp
xchg
pusha
dec
xor
clc
push
sub
aad
fadds
xor
js
gs
xor
xor
cmpsl
outsl
cld
pop
mov
mov
pop
jbe
cmpsb
dec
mov
add
push
mov
cmpsl
push
fcmovnu
in
test
and
test
mov
cld
jne
popa
loope
pop
push
cld
add
enter
add
nop
lea
data16
scas
xorb
lea
inc
unpcklps
dec
shr
lahf
cmp
sub
add
cld
std
test
push
stc
add
mov
test
push
lret
in
sub
add
xchg
stc
jae
stos
aaa
nop
inc
jmp
cmp
push
aad
xorb
insb
mov
and
lahf
cmc
insl
xor
add
loopne
insl
xchg
push
movsl
dec
dec
insl
sbb
add
pop
sbb
xor
int3
aaa
es
insl
or
mov
cmp
andb
push
push
mov
push
andl
sub
or
incb
add
pop
fisubl
lret
call
mov
test
je
cmp
je
or
je
pop
sbb
dec
cmp
jmp
mov
aad
sub
mov
jno
mov
cs
inc
inc
jmp
cmpb
and
int
jne
mov
adc
or
or
lods
xchg
push
cmp
xchg
out
clc
pop
imul
jge
pop
cmpb
ja
push
mov
push
inc
mov
loope
decl
decl
jne
cmp
cmp
mov
cmc
incl
mov
cmp
jge
cmp
je
mov
push
dec
mov
mov
cmp
jl
cmp
jg
in
xor
aas
mov
pop
jmp
sub
sbb
fisttpll
jb
incl
outsb
loopne
inc
call
rorl
aaa
pop
popa
add
stc
mov
adc
leave
inc
and
or
stos
inc
fdivrs
ret
push
mov
sub
dec
sbb
or
insb
jne
outsl
lock
mov
pop
aas
jmp
mov
shrl
jl
jmp
mov
cmp
or
cmp
je
sbb
dec
cmp
ljmp
ja
pop
mov
mov
mov
loop
mov
adc
je
mov
call
xor
adc
add
add
xchg
add
jge
test
jne
testl
imul
mov
xor
mov
add
stc
in
shr
sub
faddl
inc
cmpsl
lea
jo
or
add
cmpsl
flds
sub
fs
scas
cmpsl
sub
dec
stc
adc
cmc
hlt
xchg
insb
adc
sbb
mov
mov
inc
imull
jae
push
sub
cmc
push
fsubrs
pop
lret
xchg
push
lret
pop
jp
clc
push
pop
stos
shr
nop
ljmp
inc
dec
lahf
cmc
jo
inc
or
inc
and
push
push
into
sbb
mov
les
ljmp
jbe
mov
xchg
pop
mov
test
rorb
fwait
push
test
jbe
push
mov
pop
mov
stos
sbb
into
aam
inc
jl
or
mov
pop
adc
inc
jbe
add
insb
mov
test
mov
aas
and
mov
call
mov
pop
lea
inc
sbb
or
push
bound
mov
mov
mov
mov
out
je
mov
push
and
cld
movd
pop
inc
mov
loopne
add
add
pusha
xchg
pop
and
push
iret
pop
add
les
xor
add
cmp
push
push
lea
inc
dec
jmp
xor
mov
adc
pop
adc
orb
xor
cmpsb
xor
push
sub
movsl
sbb
xor
sbb
inc
dec
test
fadds
adc
insb
stc
xor
fwait
add
int3
add
sbb
inc
or
adc
and
movl
push
je
mov
inc
mov
add
mov
jle
rolb
std
cli
push
pop
test
je
inc
cld
dec
pop
test
je
test
push
or
dec
dec
jmp
sub
jmp
or
jmp
add
pop
jg
adc
cltd
or
jne
jmp
mov
inc
mov
xor
and
jmp
mov
and
je
add
outsl
inc
cmp
add
cvtdq2ps
out
sub
daa
push
adc
adc
and
jge
aas
movsl
inc
cld
insl
or
mov
add
fidivrs
test
je
test
inc
adc
inc
mov
notl
push
add
xor
pop
adc
loopne
sub
push
or
pop
push
add
xchg
dec
xor
sbb
aas
inc
js
and
movsb
jo
aaa
or
push
adc
sbb
add
incl
or
repnz
inc
neg
dec
mov
cld
mov
std
adc
pop
add
cld
rcrl
sub
fsts
mov
divb
push
jmp
mov
xor
popa
pop
sahf
and
sub
jecxz
inc
cmp
dec
mov
int
aaa
je
imul
out
insb
xor
cmp
cli
std
jmp
mov
or
imul
ret
add
adc
inc
fcmovnbe
cmpsb
call
pop
ret
or
jl
jne
pusha
jne
inc
pop
pop
sarl
popa
roll
xchg
loopne,pt
insb
mov
mov
add
fisttpll
cmp
or
js
addr16
and
jg
jg
stc
or
imul
mov
jb
xor
pop
stc
das
test
cmp
int3
mov
popa
rcrl
or
icebp
xchg
ja
decb
add
add
mov
int3
mov
dec
add
leave
mov
add
cmpsb
nop
inc
mov
jns
inc
inc
inc
jle
das
or
mov
lcall
mov
dec
sar
pop
in
push
mov
mov
call
shll
lock
hlt
test
dec
sar
clc
cld
cld
lea
jo
lock
adc
loopne
sbb
cmpsb
push
pop
jo
daa
push
or
call
repz
or
and
ret
lock
cwtl
adc
lea
jl
cld
jmp
std
cld
out
rorb
adc
stc
testb
sub
mov
call
mov
adc
push
fildl
jne
add
in
xchg
mov
aas
add
pop
scas
inc
out
add
push
mov
dec
dec
push
pop
add
mov
mov
lcall
xchg
pushf
movsb
lods
dec
xor
cmpsb
mov
mov
sbb
sbb
adc
adc
xor
rorl
or
add
outsb
pop
dec
add
loopne
call
fwait
clc
or
das
lsl
fistl
fwait
xchg
sub
outsl
cmp
push
push
testl
imul
ret
sahf
add
shlb
clc
adc
adcb
adc
lock
push
or
popf
cmc
add
add
rorl
add
inc
test
push
fmuls
mov
je
jmp
cltd
in
push
or
stos
sub
ret
adc
std
and
cld
decl
jmp
in
push
test
inc
arpl
and
pop
sub
shl
add
add
inc
or
ja
lcall
rep
je
loopne
add
jno
inc
cmpsl
int
cmp
pop
cli
scas
adc
xchg
mov
and
jns
les
mov
mov
inc
add
ret
or
add
es
jle
mov
repnz
pop
add
mov
hlt
ret
bound
mov
cmpsb
push
bswap
cmp
shlb
je
dec
not
movsl
insl
cltd
xchg
pop
fs
push
mov
div
ret
jg
ret
mov
cmp
jne
or
cmp
adc
ret
and
cmp
jne
and
lock
adc
jne
stos
pushl
out
xor
das
sbb
shl
inc
insl
jnp
cmpsb
ret
test
das
add
jmp
ja
jns
add
ror
adc
scas
jns
rcll
leave
inc
mov
sub
push
adc
adc
mov
jnp
test
ret
push
push
pop
cwtl
clc
sbb
cmpl
movswl
push
test
negl
or
inc
rorb
mov
pop
ret
clc
fucomip
shrb
aaa
inc
cmp
mov
int3
sub
mov
xor
xchg
movl
incl
add
lea
pusha
jmp
cmp
ret
jne
pusha
dec
pushf
mov
inc
mov
jbe
test
xchg
mov
inc
in
icebp
test
and
jno
sub
xor
pop
inc
cmp
je
repnz
dec
icebp
addr16
or
insb
and
aas
jo
pushl
lea
mov
sub
mov
js
jne
mov
bound
mov
cmp
je
jmp
pop
ret
insl
push
adc
add
ffreep
or
and
inc
nop
jb
cmpb
jne
push
sbb
xchg
add
fwait
adc
lods
sarb
and
inc
inc
jmp
and
out
or
add
add
int
push
mov
push
mov
add
iret
vpsadbw
add
inc
jp
or
cmp
je
or
jne
xchg
lea
mov
mov
iret
xor
cmp
mov
sti
cmp
jb
or
out
cmc
cmp
dec
pusha
pop
outsl
das
stos
jns
add
test
and
fs
fidivs
sti
jb
jge
adc
out
sbb
sbb
sbb
mov
dec
lock
push
outsl
insl
loope
shll
inc
adc
mov
aaa
pop
sub
inc
push
aas
mov
sbb
rolb
dec
lods
les
dec
stc
xor
shrb
fadd
xor
sub
sbb
sbb
andb
add
ja
and
shlb
sbb
mull
clc
dec
icebp
sbb
fnstcw
xor
idiv
out
or
mov
xor
cmp
push
lahf
cltd
jae
imul
je
idiv
sbb
cmpsb
add
test
je
sub
inc
cli
cmpb
cmp
loopne
jge
iret
cmp
add
jns
dec
cvtdq2ps
imul
mov
jge
rep
push
fsts
add
mov
add
add
imul
add
in
ret
inc
mov
adc
les
mov
pop
push
shl
shr
out
push
mov
jae
test
je
test
inc
std
fiaddl
sti
pop
adc
inc
push
dec
pop
shl
dec
shll
xor
inc
andb
inc
fwait
sub
pop
mov
mov
inc
incl
lea
add
cmp
fcmovnu
mov
subb
mov
inc
cmp
shr
out
aaa
loopne
push
xchg
in
or
push
lods
shl
push
adc
or
loopne,pt
cld
pop
stc
xor
inc
iret
xor
xchg
and
inc
jmp
lret
nop
lods
out
clc
sub
sbb
mov
cmp
je
insl
subl
out
and
add
push
aam
xchg
pop
arpl
outsb
or
cld
lea
test
sti
jg
lock
cld
ss
jg
sub
inc
sar
dec
dec
add
ret
dec
add
push
jmp
lea
das
test
lret
pop
sbb
pop
dec
cmc
mulb
add
daa
dec
push
lods
jge
jne
xor
jmp
mov
fadds
ret
push
xor
sbb
mov
xor
scas
sbb
push
xor
aaa
pusha
scas
or
push
mov
jb
scas
adc
or
or
and
push
jns
push
sub
mov
or
jmp
cwtl
or
push
lock
mov
gs
mov
out
addl
fs
add
add
scas
and
aam
jno
jmp
adc
cmpb
sbb
test
inc
sbbl
pop
dec
adc
ret
cmp
scas
sub
jmp
jnp
fstps
push
orl
add
adc
mov
ret
adcl
jg
add
shlb
movsl
add
adc
js
or
jg
and
adc
add
adc
push
mull
pop
add
hlt
and
addr16
mov
aad
or
lods
fmull
dec
add
lret
sub
loope
paddsw
xlat
or
mov
and
in
js
dec
cltd
popa
mov
enter
sbb
dec
clc
fimull
adc
inc
xorl
pop
lods
out
pop
ds
jbe
add
or
scas
sbb
icebp
hlt
mov
add
in
inc
xchg
sub
mov
add
idivb
xchg
mov
jmp
sub
mov
clc
rcrl
and
or
aas
push
in
bnd
test
jne
sub
daa
testb
movl
stc
mov
pop
neg
sbb
mov
add
or
add
lahf
clc
dec
test
mov
xor
mov
add
push
adcb
xchg
stos
push
sub
fwait
jge
push
mov
test
mov
pop
orl
testw
les
icebp
mov
adc
pop
adc
push
ret
outsb
imul
lock
leave
and
enter
aas
cmpsb
movsb
jno
ss
push
add
add
ds
out
jmp
or
ret
adc
cs
aas
xor
adc
cmc
cmp
pop
negl
xchg
hlt
push
aaa
inc
add
jmp
cmp
test
mov
or
push
or
adc
or
jbe
cmc
mov
lods
jnp
mov
sub
and
jmp
jmp
pop
pop
sbb
test
push
jne
and
lea
outsb
sub
mov
sbb
fmuls
sub
or
mov
push
push
inc
mov
pop
test
pop
rcll
pshufw
mov
add
jmp
testl
lods
lods
add
cld
mov
dec
cmp
sbb
push
iret
and
jo
pusha
shll
int
pop
imul
fdivs
push
cmpl
adc
push
cs
inc
test
arpl
pushf
test
maxps
sub
icebp
fists
mov
mov
and
or
cmp
mov
push
ud2
das
push
mov
sub
add
inc
jle
mov
inc
sbb
mov
push
mov
cli
jmp
jns
jns
sti
xor
dec
sub
cld
in
add
fdivrs
jb
sahf
sub
xchg
sbb
push
test
pop
int
and
dec
and
pop
mov
nop
fistl
and
sub
call
das
inc
incl
cmpw
xchg
inc
cmpw
cmc
add
push
pop
xor
xor
mov
pop
ret
fmull
mov
dec
int
sti
fnclex
ret
ret
mov
mov
outsl
rcl
adc
cmp
xor
popa
lcall
and
int3
les
or
test
test
scas
pop
mov
xchg
into
test
sbb
fdivl
push
cmp
test
jmp
insl
int3
mov
lea
das
push
test
into
scas
lahf
adc
push
shr
lahf
inc
pop
xor
cli
jg
shr
rcr
shr
rcr
or
hlt
div
mov
mull
imulb
out
shll
cmp
or
cmp
pop
add
dec
call
and
inc
es
dec
or
push
fdivl
push
sub
lcall
or
xlat
or
fisubrl
pop
insb
or
jbe
and
or
fidivrl
add
sbb
shlb
jns
stos
dec
push
sbb
leave
rol
leave
mov
sbb
sbb
sbb
dec
ret
jle
adc
xor
loope
mov
jmp
icebp
push
cltd
fs
adc
js
cmpsl
inc
dec
jno
pop
pop
and
call
lock
push
add
js
and
arpl
in
aaa
leave
popa
jl
jp
push
rcrb
and
jmp
pop
test
cld
adc
lcall
mov
nop
push
and
clc
pusha
inc
cmp
sub
pop
push
jmp
enter
aam
push
enter
dec
lea
pop
xor
jg
test
pop
mov
repnz
or
jg
rcrl
je
test
pcmpeqw
fucomip
inc
inc
dec
sbb
jne
mov
mov
adc
xor
sub
add
fldenv
loopne
sub
cmpsl
ja
std
xchg
dec
dec
cld
mov
dec
adc
cmc
shrl
adc
ljmp
rcrb
insb
ja
ljmp
les
jne
sbb
outsl
and
out
jne
or
loop
cmp
inc
push
imul
inc
xchg
leave
sbb
loop
xor
shll
leave
repnz
xor
ljmp
xor
adc
data16
sub
sar
dec
jl
xchg
adc
scas
inc
push
inc
jl
aas
adc
mov
dec
clc
test
cmp
pop
and
lock
cmp
sbb
lahf
or
pop
and
push
xor
jmp
adc
cli
sar
fxch
xchg
dec
add
out
or
pop
or
or
push
js
xchg
pop
sub
test
push
add
push
lahf
rcrb
scas
scas
push
cld
pop
sub
or
pop
pop
inc
or
push
stos
shrb
fistl
add
addb
push
push
mov
leave
or
ja
pushl
mov
sub
xchg
xor
or
enter
pop
js
xor
xor
nop/reserved
clc
xchg
fsubl
out
push
rol
xchg
js
pop
cmp
and
mov
pusha
xor
jp
push
sub
outsl
lea
test
mov
jae
and
les
in
leave
leave
add
inc
in
leave
push
sbb
ficoms
ret
add
add
das
jmp
pop
or
scas
lods
mov
clc
xor
movsb
rcrb
jge
xchg
dec
je
jno
mov
mov
int
dec
clc
lea
cmp
dec
lret
test
push
sub
shrb
xor
add
sbb
pushf
lods
aaa
xchg
aas
enter
xlat
xchg
adc
add
mov
cmp
mov
add
inc
test
mov
lods
inc
mov
clc
xor
xchg
stos
adc
jno
cmp
jb
mov
incb
add
xor
push
add
out
jmp
jmp
shrb
dec
arpl
dec
fst
push
push
jae
scas
movb
jmp
pop
fwait
sbb
arpl
mov
push
push
mov
or
adc
push
or
subl
add
pop
lret
push
xchg
mov
sub
stos
cmpsl
mov
pop
inc
fistps
out
push
cmp
push
clc
loop
or
sbb
das
push
test
incl
jmp
pop
adc
shrb
loope
les
inc
sbb
cmp
inc
es
inc
lret
push
test
xchg
rorl
in
lcall
cmc
dec
adc
push
inc
add
sub
adc
bound
mov
dec
adc
sti
popf
mov
mov
mov
aam
push
or
cmp
lahf
imull
adc
je
mov
push
sub
jns
mov
adc
test
out
fwait
inc
jnp
cmpsl
mov
sarl
or
push
adcb
movsb
push
push
inc
pop
pop
sbb
sub
stc
testb
push
mov
aam
or
adc
add
out
insl
insb
inc
xor
and
xchg
lods
std
je
cmp
inc
or
sub
fimull
mov
lods
mov
insb
movsb
mov
push
mov
bound
sbb
fcompl
ljmp
and
jbe
mov
adcb
inc
dec
scas
negl
inc
cmp
data16
adc
fistl
dec
or
mov
jb
xor
scas
sahf
loop
fisttpll
test
and
cld
les
push
sbb
cmp
adc
and
clc
pop
in
add
fs
cli
loopne
sarl
clc
push
push
mov
dec
movsb
hlt
arpl
mov
xor
xor
mov
mov
sar
loope
cmc
xor
out
notl
enter
testb
pop
push
cmp
jmp
cs
mov
dec
or
bound
enter
popf
in
loop
pop
or
add
loope
and
jle
push
in
and
dec
and
clc
rcrb
pop
inc
pushl
loopne
cmp
in
mov
nop
mov
dec
aad
or
sti
neg
inc
adc
push
in
jl
and
js
push
sub
mov
movsb
xor
call
mov
xchg
add
pop
mov
add
push
lcall
pop
mov
mov
add
gs
in
fdivrl
lret
sub
cmp
add
pop
add
mov
adc
nop
xchg
jge
jmp
dec
adc
and
in
add
addb
sti
sub
mov
fildl
cmp
xchg
inc
inc
data16
cltd
fnsave
cmp
int
lea
jmp
sarl
xchg
or
cltd
popf
cmpl
add
insb
ss
sub
xchg
je
or
and
sti
ja
dec
pop
mov
adc
aas
ss
cmpb
jne
inc
inc
dec
adcb
adc
movsl
clc
rcrb
rcrl
jge
push
pop
cmp
pushf
icebp
mov
inc
mov
dec
inc
xor
inc
ljmp
sbb
gs
jo
xchg
sub
out
ret
inc
inc
sbb
js
call
jmp
insb
and
test
nop
inc
xchg
mov
xchg
add
mov
or
andl
outsl
lods
mov
add
or
adc
popf
mov
gs
lahf
dec
test
inc
aam
mul
or
inc
inc
jmp
inc
int3
add
or
xchg
es
lea
xorb
data16
iret
sbb
push
ss
inc
fistps
pop
pop
or
adc
fsubs
movsb
sbb
xor
popf
call
or
stc
call
mov
mov
and
push
mov
sbb
addl
repz
add
sarl
add
call
xlat
mov
movsl
push
fdiv
cmp
add
lock
mov
sbb
add
addr16
jmp
int3
add
call
lock
sub
imul
mov
dec
adc
cmp
lcall
inc
les
cmpsb
mov
sub
xor
add
mov
ret
dec
popf
in
icebp
xor
roll
add
out
test
push
gs
cmp
aaa
cmp
and
mov
dec
mov
sti
mov
or
in
je
add
mov
dec
dec
cld
sbb
jp
and
or
mov
lods
test
push
xchg
pop
cmp
incb
mov
jmp
inc
or
test
jmp
sbb
sub
cltd
data16
arpl
jmp
push
jo
mov
inc
jnp
insb
xor
outsb
xchg
pushf
pop
jmp
jp
and
inc
sub
mulb
fcomps
ja
cltd
jmp
pop
mov
jmp
inc
lock
loopne
xor
xor
shrb
jge
jg
jl
jae
outsl
rolb
ja
xchg
int
rorb
or
adcb
jne
and
fs
sti
daa
mov
testl
xlat
jmp
mov
mov
ja
push
xor
cmp
cmp
lcall
pop
pusha
add
out
arpl
push
fildll
mov
sti
cmp
jle
in
xchg
testl
clc
clc
mov
jmp
mov
das
and
jge
xor
scas
jo
add
xor
mov
xor
sbb
clc
cmp
test
es
adc
das
fucomip
sub
sub
or
je
and
fimuls
loopne
jne
add
icebp
adc
icebp
or
and
popf
es
xchg
sub
nop
addr16
sub
jl
add
sbb
xor
jge
inc
andl
imulb
adc
mov
inc
xor
xchg
mov
nop
loopne
ja
cs
dec
mov
push
fadds
xorl
out
sub
adc
dec
div
aas
lea
stc
into
in
push
cmpsl
inc
dec
shll
add
cmpsb
pop
inc
nop
iret
add
or
xchg
inc
dec
or
dec
add
push
mov
mov
add
popa
sub
stos
lods
adc
pop
push
into
jne
sbbl
ret
incl
pop
add
jle
mov
mov
xorl
lcall
sbb
stc
lods
mov
or
ret
dec
jno
es
push
movsbl
push
inc
inc
repz
mov
push
insl
aas
ret
dec
loop
push
mov
sbb
cmpl
sbb
movsb
sbb
flds
push
test
cmp
addr16
add
jp
jmp
push
xchg
scas
hlt
add
mov
flds
int3
mov
repnz
dec
mov
inc
scas
or
sar
or
aam
push
mov
push
inc
dec
inc
wrmsr
fwait
add
jle
inc
add
fsts
push
incb
xchg
out
cmpb
mov
lcall
call
cmp
ljmp
or
in
inc
jns
lods
add
xor
insl
jp
daa
cmp
or
gs
mov
jg
je
or
inc
je
dec
je
cld
sti
mov
inc
jmp
cmpb
jne
or
xor
inc
add
lods
lcall
jle
adc
add
daa
inc
bnd
insl
push
repnz
ja
or
jmp
jbe
sti
jmp
adc
loope
dec
dec
sti
cmpb
push
roll
mov
inc
loopne
les
jmp
adc
adc
sarl
test
shl
scas
push
cltd
cmp
mov
ja
insl
pop
sti
std
pop
and
and
je
punpcklwd
jnp
shrl
cld
fisttps
icebp
dec
sbb
mov
outsl
or
orb
pop
adc
rcr
std
outsl
jg
inc
xor
mov
repz
sub
fs
sbb
xchg
adc
subb
movsl
clc
push
rol
jbe
dec
add
ja
lock
das
in
jmp
inc
insl
and
jmp
lea
imul
xor
push
mov
jnp
cmp
test
js
push
dec
adc
dec
dec
add
pop
mov
test
loopne
mov
mov
jno
adc
push
pop
mov
jg
into
and
mov
inc
mov
mov
jne
push
pop
inc
mov
mov
push
inc
fcmovnu
pusha
mov
xchg
in
mov
sti
mov
add
gs
and
jp
aaa
sub
dec
push
push
daa
and
or
push
cmpxchg8b
shll
das
ds
pop
xor
jle
mov
roll
dec
int3
andb
scas
mov
sub
out
sub
xorb
scas
rolb
mov
push
or
imul
mov
dec
ljmp
decb
mov
add
test
js
nop
ja
xchg
ret
mov
out
and
add
stc
aas
push
jmp
ret
xor
xchg
push
mov
loope
cmp
cld
cmpb
popf
cmpsl
lock
lea
and
dec
fdivrs
jmp
in
adc
adcl
mov
mov
das
addps
js
mov
push
fildll
outsl
pop
mov
inc
pusha
ret
jne
xor
jbe
imul
test
rcrb
nop
cmovl
pushf
jno
les
testl
jne
mov
inc
push
cmpsl
and
cmp
push
mov
inc
pop
inc
cmp
mov
cmp
inc
cmp
xchg
std
shll
mov
jmp
ret
cmp
ja
gs
ret
xchg
sub
inc
mov
mov
and
mov
adc
imul
pushf
or
inc
dec
jne
xor
jmp
jae
rorb
je
jmp
jmp
les
or
add
add
pop
lret
xor
ror
push
test
lret
adc
call
arpl
loop
insl
inc
mov
call
fisttps
lods
stc
add
lret
test
je
pushf
jne
aas
adcl
mov
movzbl
fbstp
sub
push
sbb
mov
popf
movb
pop
ret
sbb
sbb
daa
fcoms
mov
push
push
pop
sbb
in
jg
lret
add
jb
sub
jns
scas
mov
pushf
xchg
jne
stos
arpl
outsb
jmp
jns
outsl
cmp
add
lmsw
jecxz
adc
fidivrs
dec
sub
push
or
sub
cli
pop
push
mov
fmull
dec
sbb
push
mov
addl
pop
es
js,pt
jne
outsl
cmp
lahf
add
push
fsubrl
pop
mov
sti
lea
cltd
add
adc
add
push
pop
arpl
push
and
movlhps
jmp
fnstsw
jecxz
fmull
roll
lods
neg
mov
pop
cmpsb
ffreep
out
leave
or
or
cmp
jbe
insb
shl
jmp
lea
js
shl
out
cmp
add
add
jno
mov
jl
shl
sub
push
mov
neg
cltd
add
xchg
into
loopne
xor
sub
or
in
aam
or
xchg
pop
sub
mov
and
shr
pop
or
inc
jmp
mov
jmp
jns
xchg
inc
pop
sbb
sub
daa
sbb
dec
pushf
loopne
enter
in
rolb
cmp
dec
dec
popl
jne
mov
mov
test
loopne
mov
lea
jg
mov
arpl
dec
das
mulb
adc
pushf
popa
adcl
add
xor
push
jle
and
or
push
xchg
out
out
pop
loope
add
jmp
add
or
addr16
add
push
push
bndstx
fistpl
or
push
inc
push
inc
xor
mov
mov
cmp
push
test
or
insl
mov
inc
jmp
and
pop
jmp
xor
repnz
cmp
push
pop
xor
mov
loope
std
push
xor
or
clc
cld
fisttpll
pushf
add
push
stc
push
fimull
pop
orb
mov
mov
shlb
stos
jns
xor
xchg
insl
inc
push
cld
mov
adc
mov
pop
dec
jb
shlb
cmp
pop
loopne
or
sub
inc
and
clc
add
loopne
dec
mov
add
mov
xor
orb
add
cmp
out
ficompl
scas
ficomps
dec
jle
inc
stc
cmp
ja
and
jmp
movsl
or
imul
xor
pop
out
stos
lea
filds
lret
je
mov
cmpsl
and
and
cli
cmp
ja
cld
mov
fildl
nop
mov
jbe
inc
inc
and
or
sar
add
shrl
faddl
scas
add
mov
mov
pmaxub
push
movsl
movsl
pop
mov
cmpb
or
add
inc
or
sbb
push
push
ficoml
fwait
or
test
add
cmp
xchg
mov
push
pusha
testb
pop
js
push
xchg
dec
cmp
cwtl
and
test
push
clc
and
push
aad
sub
or
mov
loopne
xchg
sub
xor
dec
clc
and
add
cmp
cmp
or
pop
or
push
or
and
fstps
shrb
das
mov
fdivrs
fwait
adc
mov
jo
inc
or
adc
adc
add
hlt
mov
or
test
push
lea
mov
shlb
fstps
add
push
inc
mov
mov
stos
inc
inc
mov
test
ss
clc
sbb
jmp
sbb
mov
fistps
std
cmp
push
imul
cld
cmpsl
mov
lret
dec
ja
decl
mov
mov
test
fildll
mov
jmp
divl
jle
add
mov
jecxz
mov
inc
add
mov
ret
test
testb
shll
mov
mov
shlb
ja
popf
cmp
and
imul
loopne
xchg
mov
inc
inc
xor
push
mov
pop
mov
or
stc
lock
cmp
fmull
dec
insb
aaa
push
stos
jmp
cmp
cmpsl
arpl
push
movsl
cmp
jge
add
testb
inc
inc
xor
push
fcompl
sub
adc
movsl
incb
and
andb
clc
mov
inc
dec
mov
popa
lea
sub
lahf
mov
imul
mov
rclb
add
xor
mov
data16
mov
xchg
add
sbb
push
inc
sbb
push
js
and
xor
mov
or
mov
mov
or
jnp
xor
js
shlb
sub
cmp
pop
pop
fadd
popf
mov
fcomps
sti
pop
cli
ss
or
adc
inc
std
call
pop
push
ret
shr
mov
mov
imul
jbe
cmp
cwtl
push
xchg
pushl
xchg
inc
jne
sar
push
inc
cmpps
cmp
jbe
dec
adc
sbb
jo
sti
dec
enter
jae
mov
mov
not
and
cwtl
test
in
or
ljmp
loopne
pop
inc
sti
xor
je
mov
dec
push
jns
mov
or
add
add
push
adc
sub
mov
sar
dec
cmp
sub
rol
testl
add
and
cmpsb
xchg
inc
or
in
pop
shrl
jbe
mov
lret
sti
addb
jl
cli
jbe
mov
jg
imul
or
pop
jge
jnp
ljmp
push
adc
jnp
and
movsl
jg
jge
pop
add
add
lds
jl
or
push
mov
gs
lods
fstp
stc
push
push
dec
mov
or
or
dec
arpl
clc
mov
jno,pt
maxps
jae
cmpb
std
loopne
xchg
mov
jmp
or
sbb
mov
pushf
lea
sbb
sub
lea
xor
pop
add
cmp
or
mov
adc
mov
xchg
cli
mov
sub
mov
add
add
push
jnp
mov
push
call
aas
cmp
push
or
xor
movsb
mov
cmc
jmp
fisttpl
decb
adc
mov
pusha
add
and
fucomp
and
jo
mov
adc
mov
jmp
pop
mov
and
fs
pop
mov
lea
into
outsl
sbb
cmp
and
pop
or
loop
pop
or
mov
sbb
mov
rclb
cmp
gs
pop
in
call
cs
push
aas
sub
out
jle
ret
sbb
mov
add
not
call
lds
jae
mov
call
and
decb
iret
test
adc
inc
fisubrs
xor
jne
mov
cmp
dec
adc
add
pop
dec
jae
cmp
cmp
outsb
jmp
es
jbe
or
add
mov
mov
testl
xor
mov
mov
cmp
mov
outsl
and
mov
mov
mov
out
pop
mov
scas
add
and
sbb
or
dec
mov
xchg
test
filds
and
or
je
imul
and
xor
mov
mov
in
dec
scas
into
jne
int
and
outsl
enter
jl
shl
inc
jmp
mov
stc
xchg
sub
mov
sar
dec
cmp
jle
pop
imul
mov
sub
test
scas
cmp
dec
and
mov
decb
jne
jmp
in
and
jmp
das
mull
inc
and
push
and
inc
cmp
jp
ljmp
jp
and
cmp
jl
test
or
fisttpll
test
stos
aad
decb
jge
mov
or
mov
rcrb
ljmp
cmp
push
or
das
push
or
lock
insl
or
bound
dec
mov
int3
xlat
mov
jmp
daa
repnz
lock
inc
add
cld
mov
inc
lea
mov
lcall
jne,pt
cmp
cmp
fisttpl
cmp
xlat
and
xchg
popa
ficoms
dec
mov
xor
mov
lret
mov
or
cli
test
les
clc
data16
adc
and
ja
scas
add
and
sbb
push
cmp
xchg
stc
dec
cmp
mov
incl
lds
xor
mov
inc
jbe
xor
stc
mov
std
push
add
mov
add
add
shlb
cmpsl
dec
cmp
or
out
lahf
addl
jns
pop
adc
test
add
mov
imul
jmp
out
dec
jbe
mov
inc
lea
push
xrelease
jmp
movl
jecxz
lock
scas
mov
or
movsb
add
mov
dec
or
out
in
adc
inc
fs
inc
test
clc
mov
mov
pop
test
hlt
mov
jne
or
mov
pop
lret
shr
std
push
lret
ret
or
add
pop
ret
mov
lea
sub
aad
imul
shr
or
dec
cld
dec
cmp
adc
rorb
pop
ds
add
popl
lods
mov
aas
sbb
inc
stc
adc
popf
pop
mov
add
pop
incb
clc
jl
and
test
pushf
nop
mov
pop
mov
adc
pop
sarb
jg
sub
add
loope
pop
or
adc
cmp
xchg
mov
cld
sbb
sbb
loopne
mov
xchg
pop
jg
or
mov
or
dec
pop
in
movl
sbb
jmp
inc
sub
aad
xchg
test
mov
adc
fistpll
and
or
sub
mov
aas
cld
mov
mov
inc
dec
insl
or
xor
and
andb
jbe
mov
push
sub
sub
ja
cmp
pop
ret
gs
je
repz
jne
in
enter
dec
in
push
into
bnd
in
bnd
fmulp
mov
repz
jo
dec
in
or
fstpt
in
loope
aam
ret
pop
dec
dec
xchg
cmpsl
pop
inc
push
decb
push
shlb
ret
xor
into
bswap
rclb
orb
lock
adc
inc
enter
imul
push
ss
mov
xor
icebp
testl
pop
lea
out
mov
inc
xor
je
push
loopne
mov
xchg
mov
subl
add
imul
aas
pop
cmp
sbb
pop
cmp
pop
insb
fcomip
sub
call
fnsave
clc
mov
je
push
shr
inc
mov
add
andl
int3
imul
jno
sbbl
sbb
pop
cli
andl
push
inc
popa
cmpb
or
cmp
pop
fwait
loope
add
ret
mov
testb
cs
loopne
xchg
pop
sbb
notb
js
push
ret
enter
push
adc
aas
iret
aaa
test
xor
imul
mov
es
push
pop
mov
pop
inc
add
std
pop
push
add
popa
inc
fbld
xor
sbb
pop
out
sbb
pop
mulb
xor
pop
inc
jle
mov
mov
cmp
outsl
xor
mov
inc
test
jne
push
lock
sbb
leave
inc
add
xor
jne
or
inc
cmp
je
push
ret
adc
outsl
popa
out
and
jne
mov
incl
bound
mov
and
jmp
sbb
ret
push
iret
sbb
imul
gs
add
push
clc
icebp
pop
push
ret
xor
dec
adc
stc
ljmp
stc
mov
cmp
cmp
jmp
mov
mov
and
fwait
pop
push
or
mov
cmpl
lret
dec
loopne
lds
enter
push
dec
into
xor
pop
test
sub
adc
sub
add
sub
cmpsb
pop
jo
add
cld
xlat
push
pop
cld
popa
je
cmp
sarl
mov
call
add
or
and
inc
std
pop
mov
inc
cmp
and
shll
push
push
jg
pusha
sub
je
or
je
push
and
pop
out
scas
dec
cltd
lods
hlt
cld
notb
push
mov
or
jmp
sub
orl
mov
jmp
lods
inc
jne
adc
jmp
pop
jne
das
mov
nop
jbe
or
into
enter
cmp
mov
lret
bound
xstore-rng
cmpsl
ret
sbb
jne
daa
jnp
sbb
cmp
cs
fisttps
mov
andb
into
repnz
mov
pop
addl
leave
dec
adc
rcll
pop
lret
jge
bound
call
or
jo
pop
insl
sbb
or
arpl
add
xor
pop
sbb
xchg
sbb
jae
mov
cmp
je
testb
inc
mov
cmp
jl
jmp
mov
jmp
mov
mov
mov
push
mov
pop
mov
std
inc
lock
je
in
cmp
fiadds
add
in
or
or
lret
popa
movsb
pop
sub
push
push
cld
push
and
jp
cmpsb
push
arpl
mov
push
mov
cltd
sub
add
and
add
and
popa
cwtl
add
pop
jnp
sarb
and
and
popa
sub
add
movsl
cmpsb
scas
pop
testl
fadd
in
stc
incb
repnz
imul
mov
mov
stos
sahf
mov
adc
iret
jecxz,pn
ljmp
or
add
jecxz
dec
xlat
test
pop
movb
loope
add
sbb
mov
icebp
xor
lds
cmp
add
jecxz
insb
or
rolb
je
data16
dec
comiss
stc
add
xor
xchg
cmpsb
push
js
idivl
loopne
test
add
call
or
jmp
and
mov
lock
ret
daa
leave
loopne
adc
cwtl
or
mov
cmp
ljmp
push
inc
fistpll
jmp
mov
dec
or
or
inc
leave
xchg
push
mov
fistpl
mov
inc
mov
jae
push
push
xor
and
mov
iret
adc
je
cld
and
jge
adc
ljmp
mov
jmp
mov
out
or
movl
call
mov
jle
jb
inc
mov
push
test
nop
cwtl
or
add
add
xchg
xor
jg
pop
jl
cmp
add
jmp
movsl
out
std
push
cmp
adcb
add
test
je
fmull
push
scas
push
push
pop
arpl
push
lds
mov
xchg
jmp
jl
push
and
out
xor
and
sub
sbb
or
loope
movb
or
lea
push
sub
pop
pop
jl
fildl
clc
repz
icebp
jns
xchg
mov
add
mov
jb
sarb
and
xor
scas
loope
or
or
inc
mov
aad
repz
jo
ljmp
pop
fildl
leave
or
or
rol
mov
je
add
int
scas
rcpps
push
in
addl
pop
iret
add
cmc
insb
jecxz
and
negl
pop
fldl
pop
clc
adc
jge
fistpll
clc
fmull
insl
lock
cmp
shlb
loopne
jbe
jge
pusha
int
sahf
insb
and
xor
es
sbb
pop
orb
ret
add
or
jne
pop
adc
pop
je
add
mov
test
or
inc
fwait
push
inc
or
mov
add
js
inc
push
repz
pop
xchg
std
adc
adc
mov
pop
mov
mov
inc
cmp
leave
and
adc
stc
gs
pop
jle
push
xor
jne
into
ficoms
inc
jno
adc
or
dec
push
aad
jb
pop
loope
push
push
sbb
sbb
pop
adc
call
add
ficoml
fisubs
xor
mov
cmp
daa
inc
or
jecxz
int3
test
lock
push
clc
gs
rcll
sub
adcl
shrb
mov
sbb
fstl
int
xor
insl
push
cmc
ljmp
loop
in
fidivrl
pusha
shlb
rolb
lret
testb
testb
xor
cmp
sbb
mov
xchg
outsl
push
or
cmp
lret
addb
das
cmp
push
xor
mov
dec
cmp
pop
add
jns
neg
cld
xchg
jle
daa
sub
adc
sbb
pop
jnp
cltd
or
or
or
inc
mov
shlb
push
loope
sub
pop
dec
xor
lret
inc
push
lods
sbb
inc
js,pt
xorl
xor
pop
bound
jle
imul
dec
ret
add
adc
std
jne
adc
lea
cmpsb
jg
rolb
xor
jmp
popa
lods
loope
add
cmp
nop
das
insl
std
sbbl
jge
pop
mov
add
fsubrp
push
pop
cmp
jl
fdivl
push
push
adc
add
ret
loopne
mov
mov
sbb
or
push
push
aad
icebp
push
arpl
sub
sbb
rorl
jo
out
dec
add
loope
and
sbb
loopne
sbbl
jmp
mov
repz
push
cmpsb
adc
vunpckhps
inc
ds
dec
addl
and
lret
push
dec
or
dec
cmp
mov
adc
sub
jne
out
jbe
and
pop
dec
loop
sbb
test
subl
push
jmp
and
imul
push
pop
or
xor
mov
push
add
adc
pushf
inc
cmpsl
ret
pop
pop
test
shrb
sarb
pop
or
jae
cmp
scas
adc
stc
adc
or
sbb
imul
aam
mov
fwait
fwait
jns
es
bswap
dec
or
stos
lea
jae
and
enter
popa
push
movb
cmp
or
or
jne
jne
push
gs
lret
mov
in
and
aaa
push
je
push
mov
aas
jb
jle
fwait
leave
cmp
aad
xchg
adc
cmp
es
sbb
jl
data16
cmpsl
enter
outsb
jbe
rorl
arpl
and
pop
cltd
mov
or
add
in
adc
movsb
pushf
mov
mov
adc
mov
lahf
lock
jg
adc
mov
dec
and
data16
push
fisubrl
inc
scas
jne
mov
xor
xor
or
inc
fisttpll
testb
je
jge
aad
mov
sarl
jg
mov
cmpsl
mov
dec
gs
add
decl
js
rorl
fmull
push
sub
push
enter
pushf
or
inc
push
addr16
pop
rcrl
adc
push
push
add
add
fdivl
xchg
mov
pop
xchg
jno
repz
insl
or
add
repz
add
pusha
cmp
xor
loopne
ja
inc
add
pop
pop
or
dec
jo
pop
arpl
cmpb
adcl
or
push
sarb
inc
mov
jns
jne
rolb
mov
ret
adc
mov
pop
or
xchg
jmp
mov
mov
jle
inc
std
out
and
orl
push
sub
or
jmp
adc
add
xchg
cli
or
sub
add
adc
inc
inc
pop
movsb
or
mov
mov
mov
mov
cmp
jge
ret
imul
pop
mov
fmuls
out
pop
xor
int
jae
push
pop
xor
mov
rorb
adc
popl
stos
imul
dec
add
ret
out
pop
push
jmp
add
xchg
xchg
and
test
pop
loopne
movsb
aam
mov
add
jo
pop
and
and
jae
lahf
outsl
lret
pop
stc
test
testb
mov
nop
push
dec
insl
jmp
or
mov
add
mov
test
or
adc
outsb
je
or
fs
ljmp
mov
push
decb
rcrb
arpl
fisttpl
xchg
mov
repz
push
test
mov
das
cmc
adc
jecxz
mov
or
ret
push
push
call
aad
push
fsubrs
fdecstp
ret
das
mov
pop
pushf
lret
ret
sar
jecxz
xchg
scas
fiaddl
pop
inc
loope
je
mov
cmp
jae
cmpb
dec
clc
inc
jmp
mov
or
popa
xorb
mov
inc
les
testb
cli
xchg
dec
je
fdivs
and
sub
add
or
xchg
push
pop
sbb
test
push
popf
les
lods
inc
add
or
jae
dec
adc
or
or
cld
arpl
insb
xchg
ja
dec
sub
outsl
jns
add
lock
rcrb
mov
cmp
jecxz
sbb
into
sbb
or
xor
or
jle
cmp
push
adc
pusha
or
dec
sbb
into
testb
sbb
dec
sub
mov
push
pop
mov
xor
cli
fisttps
add
push
cmp
jge
lea
sub
or
mov
dec
jne
mov
cmp
pop
rolb
adcl
sbb
xchg
test
xchg
sbb
cmp
add
and
popl
imul
dec
mov
gs
jmp
add
and
scas
imul
loope
add
push
test
ss
fnstcw
cmp
je
ljmp
or
xor
cmp
jne
lea
pop
pop
lea
mov
je
lea
sbb
and
movsb
subl
mov
jne
leave
inc
xadd
xor
push
fdivrs
gs
fwait
ds
or
cmp
jbe
inc
sbb
ja
imul
and
ds
pop
fsubr
mov
mov
mov
incb
cmp
inc
add
add
add
add
or
test
push
or
mov
cmpb
je
push
lret
sub
push
or
aas
xchg
and
push
imul
pop
out
adcl
dec
lock
pop
decl
cltd
mov
push
jno
paddsb
cmpsb
aam
pop
lds
add
push
mov
adc
sbb
mov
dec
test
std
les
push
repnz
rorb
push
adc
ss
or
arpl
push
push
imul
mov
cmp
aam
pop
cltd
sbb
lock
cli
and
popa
and
push
sbb
hlt
or
adc
pop
aaa
inc
mov
inc
cmp
sub
lock
and
loope
adc
aad
fistpll
sub
inc
cmpb
inc
leave
out
inc
cmp
inc
mov
testb
sbb
lret
or
jge
pop
or
or
popa
dec
ja
push
sbb
sbb
loopne
mov
dec
pop
add
es
enter
adc
andl
sbb
scas
or
lock
loope
jge
sub
and
fldcw
or
or
ror
sbb
jae
jmp
pop
sbb
enterw
sete
or
rorl
jmp
rorl
push
inc
adc
push
pop
inc
pusha
lock
arpl
add
leave
fs
adc
push
je
push
sbb
loope
or
bndstx
sub
or
hlt
pop
lock
or
pop
sbb
mov
andl
inc
add
mov
cwtl
mov
int3
outsb
xor
pop
or
pop
adc
jp
sub
inc
push
xchg
sbb
dec
cwtl
pop
cltd
dec
ljmp
iret
rcrb
dec
ret
dec
aaa
cmp
out
cli
imulb
stc
or
inc
sbb
sub
clc
sbb
mov
xor
mov
aaa
push
cmp
je
sub
push
or
mov
pop
and
jmp
dec
bound
push
cmp
clc
ret
jmp
ficompl
pop
cmpsl
inc
or
cmp
div
push
add
cmp
sti
or
sub
inc
aad
pop
mov
push
popf
xchg
imul
or
or
push
jnp
xchg
xlat
pop
in
lar
in
inc
and
lcall
loop
inc
cmp
test
dec
and
xchg
lock
fildl
imul
insl
movb
mov
ss
lea
dec
xchg
ret
mov
clc
inc
push
xchg
inc
outsb
pop
jge
les
mov
jle
lea
jnp
cmp
ss
add
test
dec
repz
decl
shll
pusha
or
in
subl
sar
stos
mov
xor
xchg
aaa
push
mov
add
sub
cmpsl
sub
aaa
bound
mov
gs
fwait
jp
inc
or
fstpl
add
and
mov
mov
pop
mov
inc
inc
push
dec
or
icebp
pop
mov
mov
lea
jne
test
add
andl
dec
scas
cmc
mov
lcall
int
dec
jl
dec
orb
in
out
lret
unpckhps
jne
or
add
addb
add
add
test
push
lcall
add
in
xor
stc
pushf
pop
decb
add
imul
std
xchg
add
mov
mov
test
stos
cmp
push
adc
mov
push
cmp
je
loope
jne
int
mov
mov
mov
jnp
inc
inc
aas
dec
pop
mov
or
std
sti
aad
call
ret
popl
hlt
inc
xchg
mov
cmpl
push
jecxz
push
or
daa
pop
xor
cmpsl
add
dec
xchg
test
ret
adc
out
pop
pusha
sbb
imul
ret
dec
cld
pandn
xor
pop
inc
xor
and
hlt
lock
sub
nop
mov
loopne
sub
jge
jae
sbbl
jnp
andb
jbe
je
das
fidivl
clc
push
push
lea
push
pop
pop
pop
orb
xor
xchg
daa
mov
dec
push
xchg
aam
cmp
dec
push
mov
fimuls
insb
push
mov
jge
stos
or
or
mov
jmp
sti
dec
lock
sbb
jmp
mov
inc
xchg
dec
pop
sub
movsb
jge
jne
mov
push
pop
sbb
ret
add
pop
jmp
mov
add
ljmp
cld
mov
sbb
pop
movsl
add
jne
mov
push
cli
lea
xor
adc
loope
loop
cmp
icebp
icebp
cmp
in
dec
sbb
fldcw
fisubl
cli
ljmp
cmpsb
pop
repnz
ret
pusha
adc
jl
inc
push
jno
test
test
xchg
push
pop
cmp
sub
imul
sub
push
add
push
imul
pop
pop
xor
frstor
cmpsb
sbb
insb
pushl
pop
cmpsb
sub
lock
popa
dec
xor
cmpsl
mov
pop
jmp
je
fldenv
adcl
hlt
inc
call
cmpsl
pushf
push
jmp
pop
cwtl
cld
lds
jmp
or
aas
in
leave
pop
ja
adc
pop
inc
adc
jl
data16
insb
adc
je
add
push
push
fadds
pop
test
jg
mov
and
xor
add
sub
shll
cmp
cmpb
jl
cmp
aam
sbb
pop
pop
filds
xchg
movsl
push
inc
mov
cmp
in
mov
movsl
inc
inc
fnsave
push
inc
fmuls
icebp
adc
data16
clc
push
xchg
xchg
stos
xchg
sbb
sub
push
cmp
les
popf
pop
data16
aaa
xchg
inc
mov
add
xor
dec
mov
ljmp
imull
or
xchg
addr16
das
pop
jne
push
jb
cmp
adc
mov
pop
test
xor
xor
rclb
movnti
xchg
bnd
adc
cmp
sbb
sub
fsts
idiv
out
pop
inc
cmp
jae
or
jae
shld
shl
inc
rol
and
and
shl
ret
jb
test
push
je
xor
jg
cmp
imul
add
adc
adc
adcl
out
or
fcoml
mov
notb
fs
mov
cmc
mov
outsl
fbstp
sbb
out
pop
adc
mov
jb
pushf
gs
sbb
mov
in
es
addr16
add
pushf
cmp
jae
or
cwtl
addr16
lahf
pop
out
popa
sbb
call
outsl
pop
ljmp
movsl
mov
xchg
add
sar
xchg
int
pop
xor
adcb
sbb
andl
sbb
iret
pusha
arpl
ds
lea
rcl
ret
test
jmp
iret
fldt
cmp
xor
clc
sub
xor
lret
shrb
cmp
int3
adc
inc
push
dec
and
add
insb
in
lea
jl
adc
cmp
pusha
in
enter
pop
call
add
in
jg
lcall
les
cmpsb
movsb
pushf
in
pop
mov
jmp
add
pop
or
push
or
and
pop
jns
cmp
sub
out
mov
sub
fistps
cwtl
push
mov
add
pop
sub
out
lods
or
or
push
inc
ss
shll
push
pop
fs
and
add
insb
pop
mov
push
test
out
or
add
pop
into
fistpll
or
jmp
mov
jbe
cmpsb
lea
sub
or
icebp
inc
js
lahf
sub
mov
push
in
xchg
test
cmp
xchg
or
sbb
xor
push
out
shrd
mov
jmp
shl
mov
or
sbb
lods
lock
sahf
push
push
jae
stc
cmpl
pop
or
ss
dec
jne
out
call
test
dec
je
dec
jne
push
push
jmp
or
sbb
nop
lret
popa
pushf
outsb
sub
mov
std
mov
in
and
dec
or
sub
cmp
sti
and
aaa
or
mov
inc
repz
xchg
cmp
mov
push
push
push
orl
and
or
decl
xor
scas
cmc
mov
sbb
jge
sbb
ss
push
shl
pop
xor
or
push
cmc
xor
out
adc
adc
xchg
fsubrl
pop
icebp
call
roll
stos
mov
je
movb
jmp
mov
pushl
push
mov
punpckhdq
test
mov
and
cld
rol
incl
adc
mov
xchg
sub
out
cmpsl
push
sbb
push
insb
repz
adc
pop
and
sub
pop
clc
adc
and
push
js
xor
mov
stos
stc
mov
cmp
add
add
sbb
jl
daa
jp
lret
enter
lret
je
mov
jo
sbbl
push
add
imul
sub
orl
cmp
adc
fiaddl
add
jmp
xor
leave
cmpsb
not
and
add
or
or
or
test
xchg
ret
or
pop
or
lods
push
idivb
mov
pop
into
sub
int3
adc
adc
xor
pushf
or
out
lock
or
out
icebp
sbb
sbb
loope
add
pop
mov
or
jae
fcomps
jmp
dec
out
sub
mov
pop
sub
sbb
mov
or
in
mov
repz
cld
sub
in
dec
push
add
js
enter
je
icebp
add
decl
iret
insl
pusha
divl
addl
aam
jmp
insl
adc
andb
adc
xchg
push
clc
es
jne
push
sbb
lock
mov
xor
xor
sbb
add
loopne
xor
enter
add
repz
dec
xor
adc
inc
popa
test
jge
jle
pop
sar
jecxz
not
and
or
or
push
add
cld
jecxz
sbbl
test
xchg
adc
idiv
push
jmp
jecxz
or
jmp
push
xlat
push
add
movsl
jae
or
or
add
add
add
cmpsb
jg
lret
push
mov
mov
and
mov
jecxz
mov
rorl
jne
or
mov
lds
bound
loopne
int3
and
ss
cmp
out
mov
adc
jbe
push
movsb
shlb
push
adc
add
add
test
sbb
mov
mov
adc
into
movsb
rcrl
xor
or
or
or
sub
faddl
mov
lahf
cli
xor
or
or
pop
sahf
push
xchg
sbb
jge
push
jo
pop
push
lock
mov
pop
sub
lret
call
loop
rolb
sbb
add
xorl
daa
sbb
add
jl
sub
sbb
jbe
nop
js
fldcw
jo
xchg
jge
mov
pop
pop
push
mov
pop
xchg
aaa
dec
in
dec
js
fadds
or
sub
repz
add
out
jae
fnstcw
lret
mov
imul
pop
add
ret
pop
cltd
addr16
ret
push
pop
mov
push
xor
sub
pop
fucom
test
sbb
pop
in
or
mov
sub
push
sbb
fmuls
mov
push
jmp
add
subl
rorl
rolb
mov
stos
pusha
adc
lret
ret
mov
mov
or
dec
cmp
sti
mov
mov
dec
sahf
cmovp
or
push
jge
pop
sub
lds
jns
push
lods
mov
push
inc
dec
popf
mov
jg
mov
scas
mov
imull
popl
into
mov
call
lock
or
sub
jne
xchg
imul
cvtdq2ps
jae
rolb
mov
pop
add
inc
mov
addr16
dec
test
jns
and
sbb
rorl
mov
pop
testb
mov
or
add
adcb
or
pop
adc
cmp
clc
sbb
sti
add
jp
das
dec
dec
div
pop
cmpsb
mov
add
out
xor
add
xor
push
leave
fadds
in
lret
and
call
inc
shlb
add
inc
in
ljmp
loope
jge
ffree
jg
cmp
fdivrs
sub
testb
ja
or
inc
mov
js
mul
imul
mov
imul
ja
mov
inc
push
add
inc
push
imul
in
jnp
idivl
add
inc
clc
push
and
jg
pop
add
inc
jle
aas
pushf
mov
adc
inc
pop
inc
sub
xchg
fisttpll
int
add
nop
xor
lock
fldpi
adc
out
call
fimuls
add
or
out
pop
je
pusha
fbld
call
pop
xchg
and
pop
rclb
mov
push
xor
pop
dec
xor
aas
add
bound
mov
subb
pop
mov
pop
or
insb
adc
jnp
jecxz
jl
cmpb
jl
clc
sbbb
jno
mov
inc
clc
sbb
incl
or
or
sbb
movsb
adc
in
inc
jo
dec
push
cmp
rol
or
cmpsl
popa
hlt
lea
adc
cld
add
rol
ss
push
sub
pop
ret
stos
sub
mov
shl
movswl
push
or
scas
pushf
add
mov
lock
push
mov
mov
aaa
scas
pop
add
sub
rcll
fldcw
add
jge
adc
loopne
mov
cmp
mov
jg
and
rcrl
jecxz
xor
push
pop
popf
fs
dec
dec
add
lods
scas
mov
rcll
inc
or
loop
inc
cmp
inc
mov
call
adc
leave
mov
shr
or
lea
mov
fbld
xchg
jecxz
jno
jmp
and
iret
cltd
dec
or
cmp
sub
or
mov
ja
or
pop
add
loopne
cmpb
ja
cmp
mov
sub
jne
inc
adc
sbb
and
sbb
mov
mov
cltd
clc
or
pop
pop
loop
clc
xchg
inc
das
testb
ss
jo
fs
mov
jle
adc
pop
inc
pushl
cwtl
sbb
mov
dec
add
jmp
movsl
outsl
scas
nop
fdivrs
jbe
mov
dec
and
jne
jno
jl
mov
add
rcll
fs
sbb
inc
stos
je
cmp
fiadds
cmp
fisttpll
mull
scas
xor
sbb
pusha
or
push
idivb
mov
shrb
icebp
mov
pop
testl
lcall
sub
add
dec
popa
sub
mov
mov
mov
add
les
inc
shr
test
bound
sbb
mov
les
aad
lock
rolb
jnp
daa
cmp
clc
jge
shl
add
mov
xchg
sbb
xlat
andl
or
icebp
pop
fwait
push
mov
icebp
aad
jge
and
push
xor
movsb
sbb
neg
sbb
pop
adc
push
inc
adc
mov
jp
lahf
mov
or
paddusb
stc
xor
and
aas
adc
into
jae
imul
and
mov
lahf
push
or
cs
push
mov
pop
or
dec
xor
add
inc
or
int3
das
or
or
cmc
xlat
xor
mov
into
add
pop
mov
aas
lea
mov
xor
pushl
shr
shl
or
pop
cmp
push
decb
repnz
out
jmp
outsb
mov
sbb
shl
shr
xchg
push
aas
mov
adc
or
popa
bound
arpl
dec
inc
outsl
mov
mov
add
pop
repz
sub
add
push
movsl
sub
push
or
push
xchg
mov
inc
clc
push
imul
mov
push
inc
daa
push
mov
test
xor
out
adc
loope
mov
push
add
pushl
add
sarl
insl
jnp
adc
cmp
icebp
jmp
sub
pop
data16
inc
and
add
mov
mov
lret
pop
fildl
sti
add
cmp
mov
push
stos
test
add
sub
or
or
daa
addr16
pop
gs
adc
pop
sbb
add
aas
and
sti
xor
cmp
negl
jmp
icebp
icebp
scas
cmp
sbb
js
shrb
rorl
add
lock
pop
add
pop
pusha
out
test
jmp
mov
les
add
lret
out
lock
mov
or
cld
in
lret
je
inc
jle
jle
arpl
enter
shrb
sti
call
push
cmovp
dec
test
mov
pop
add
fldt
push
out
outsb
cli
cmp
inc
lods
push
inc
mov
push
push
inc
mov
test
jae
fcoml
sti
adc
sbb
or
enter
push
jmp
adc
dec
cltd
subb
icebp
fwait
sbb
dec
repz
xor
sbb
shl
add
mov
in
or
data16
mov
ret
out
lea
xor
jno
push
dec
adc
fs
fwait
mov
push
jmp
mov
ds
loopne
add
mov
test
inc
xchg
cmp
inc
push
or
pop
dec
iret
jle
lret
adc
jmp
cltd
and
je
mov
ljmp
fdivs
popa
cmpsl
mov
dec
xchg
cltd
orl
and
mov
repnz
or
adc
adc
add
incl
mov
je
rolb
jg
mov
pusha
or
addr16
sbbl
xor
jp
xor
std
push
lcall
lea
cld
jbe
cmpb
jl
incb
hlt
enter
jbe
inc
dec
adc
and
movsl
adc
gs
into
je
repnz
sub
insb
sti
out
loope
or
add
imull
sub
add
loopne
pop
xchg
mov
fsubrl
inc
sbb
cmpb
andl
adc
leave
aam
ret
pusha
xor
mov
cmp
pop
cmp
add
loope
rol
clc
dec
add
rclb
scas
jmp
mov
xchg
jmp
pusha
pop
lret
nop
cmp
sbb
sub
rol
lds
jno
mov
inc
or
add
adc
incl
aam
xor
add
push
mov
add
xchg
xor
or
cmc
roll
jl
cs
inc
call
mov
add
outsl
test
push
shll
in
out
dec
shll
in
out
sbb
xchg
sti
out
aas
icebp
rcrb
leave
mov
add
or
and
or
push
icebp
sbb
sti
iret
pcmpeqw
xor
add
add
dec
ja
pop
divb
dec
jp
xor
data16
sub
add
maskmovq
dec
daa
jo
stc
mov
sbb
adc
sub
inc
jne
push
and
loope
and
push
push
add
aam
pop
mov
loope
mov
iret
inc
jmp
sbb
adc
out
or
lcall
sahf
iret
lea
mov
dec
mov
lea
daa
popa
xorl
mov
loop
mov
xor
aas
jb
inc
xor
icebp
jle
pop
inc
imulb
add
add
das
ret
push
fstps
dec
mov
cwtl
hlt
pop
and
pop
push
jnp
ud2
jne
sub
mov
sbb
mov
sbb
pop
jne
stc
pop
neg
add
xor
or
xor
jb
jle
repz
jo
push
xor
push
inc
imul
xchg
sub
ja
inc
test
xchg
decl
clc
adc
add
stos
mov
shlb
xor
xor
sub
push
dec
jmp
mov
inc
jmp
sbb
sub
sub
mov
andb
pop
sbb
ja
dec
xor
ret
lahf
add
andb
rcll
jb
lock
dec
pop
lea
or
push
sarl
js
mov
adc
or
cmp
and
out
imul
sbbl
orb
adcb
push
add
sbb
jl
js
mov
pop
cmc
mov
sub
pop
push
jb
jmp
and
ds
and
and
test
jle
and
lea
cmp
push
and
loopne
jg
lods
push
sbb
ja
lods
cmp
mov
mov
lock
push
loope
call
loope
push
ret
sbb
pop
adc
pop
roll
push
cmp
pop
test
movsb
mov
cmp
cld
loope
add
loopne
rcl
dec
rcl
add
push
out
xor
push
adc
lret
rorb
add
inc
xor
cld
inc
xor
push
dec
jb
mov
add
call
cmpb
jg
shll
add
xor
jle
popf
test
loopne
orb
popa
or
jg
or
mov
jmp
and
push
adc
xor
add
aam
mov
jp
ljmp
aaa
mov
and
mov
jne
inc
lret
sti
je
lea
fiadds
adc
sbb
loop
push
adc
or
clc
ds
push
xchg
andnps
lods
jmp
loop
ficoms
pop
ret
jae
mov
fdiv
fmull
pcmpeqw
or
push
sbb
mov
xor
mov
fsubrl
movl
arpl
and
or
push
mov
pusha
cmp
rol
clc
sub
movsb
mov
testb
loopne
or
ficompl
cs
push
add
inc
inc
xchg
pop
icebp
test
dec
cmpl
and
ffreep
neg
fiaddl
jl
icebp
lds
jmp
mov
inc
shrl
push
ja
or
int
outsl
inc
jb
ret
and
add
pop
add
mov
mov
mov
sbb
into
jmp
ficoml
sub
push
inc
pushf
cli
and
pop
xchg
cld
sbb
inc
push
inc
pop
pop
imul
arpl
pop
fcompl
or
ret
sub
clc
or
imul
int
push
mov
fistl
dec
out
pop
clc
cmp
adc
inc
cld
mov
loope
ror
in
jns
enter
decb
or
and
cli
in
jno
sahf
push
push
daa
or
leave
repz
leave
stos
add
sbb
cmp
cmp
mov
xchg
and
push
mov
enter
jne
mov
xorl
ss
movsl
mov
arpl
popa
fwait
cltd
xlat
and
or
inc
cmc
in
in
or
adc
and
xor
andl
mov
les
mov
andl
data16
ja
in
jo
je
push
push
stos
rcr
push
inc
popl
xchg
aad
cmp
ss
pop
sbb
jns
jne
sub
jno
mov
pop
or
data16
xor
enter
mov
pmulhw
or
into
icebp
sbb
sbb
clc
aam
push
je
loopne
sbb
push
adc
mov
mov
hlt
inc
jmp
push
cld
push
add
jge
and
inc
sub
shlb
ret
inc
adc
aaa
mov
cmp
push
jl
in
dec
add
jb
cwtl
aad
add
jge
add
push
jecxz
bnd
lret
jge
add
mov
jnp
mov
aad
addl
jecxz
test
jne
cmp
test
add
jmp
and
xchg
push
fistl
shl
loop
lret
lea
lea
insl
push
jnp
xchg
push
push
insl
fsubr
pop
cmpsl
aad
movsl
outsb
mov
lcall
add
mov
in
and
fidivrl
call
push
xchg
xor
ja
popa
push
out
mov
les
incl
hlt
push
xor
xchg
fs
xor
fdivrl
jmp
rclb
decl
mov
sub
mov
sbb
dec
jno
repz
test
mov
in
insl
push
mov
hlt
movl
imul
std
in
leave
jmp
dec
pop
add
insb
push
arpl
psubd
or
outsb
cmp
imul
jmp
shl
add
aam
dec
std
test
movsl
cli
test
xor
leave
mov
mov
xor
filds
or
shrl
cmp
ficoms
push
xlat
enter
call
mov
and
mov
cltd
xchg
mov
mov
or
or
and
decl
mov
jl
das
adc
stos
sbb
data16
inc
fdivl
jno
add
push
call
out
mov
mov
movsl
in
lahf
xor
mov
js
stc
jg
test
xchg
sbb
push
sub
insb
fs
add
hlt
push
imul
jmp
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
cmc
fnstenv
call
mov
ljmp
cld
fistps
ficoml
gs
aam
pop
popa
mov
jg
incl
add
inc
movsl
fisttps
xchg
fadd
shll
hlt
shrl
imul
mov
sarb
add
in
add
pop
dec
or
jl
fnstsw
add
daa
adc
or
and
test
or
mov
jmp
popa
into
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
and
pop
outsl
cmp
lods
insb
mov
mov
lcall
mov
lcall
ljmp
fildl
push
fdivl
or
test
fs
ds
ljmp
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
push
add
inc
push
imul
xorb
sbb
push
imul
aam
loopne
rorl
jp
adc
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
shll
inc
fdivrs
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
idiv
decl
ss
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
andl
call
outsl
and
xchg
ja
int3
add
mov
das
es
lds
or
lcall
sub
mov
cmpsl
call
ret
shlb
sbb
ret
es
pushf
jmp
insl
add
ss
jmp
addr16
jb
push
add
adc
mov
ljmp
mov
cmp
mov
fwait
mov
xchg
or
out
fdivrl
fisttpl
aam
roll
clc
pushl
ficompl
int
mov
mul
ja
outsl
ja
mov
out
sti
incl
movsb
jo
lret
pop
or
adc
sahf
gs
aas
cli
clc
sar
imul
push
js
or
push
addl
mov
cmp
jmp
notl
pusha
rorb
imul
push
scas
fcompl
fldenv
filds
cmp
aaa
push
scas
incl
mov
fidivrs
mov
jmp
mov
inc
mov
push
cmpsb
mov
sarb
sub
push
mov
jp
mov
jmp
decl
les
sbb
xchg
sub
aaa
mov
or
sbb
add
sub
add
push
movsb
inc
add
xor
add
bound
clts
add
add
out
repz
and
cmp
pop
or
aaa
xor
push
push
repz
mov
push
and
add
pusha
push
jo
aas
mov
insl
or
sub
add
sbb
sub
repnz
inc
sti
outsb
add
insb
add
adc
outsb
jne
insb
sub
movsl
push
lock
xor
push
inc
push
cmp
inc
inc
dec
jae
sub
call
outsl
arpl
jae
jb
gs
je
jb
sbb
jns
fistps
dec
inc
push
dec
inc
dec
xor
add
xor
pop
pop
scas
sub
cs
out
mov
loop
jne
imul
jb
fistpl
sub
push
sbb
pop
mov
sbb
inc
and
jle
jle
xor
adc
insb
je
imul
movsl
adc
push
jo
idivl
repz
aaa
outsb
outsl
je
or
push
arpl
cmpl
imul
sbb
ss
lock
xor
imul
inc
addr16
arpl
arpl
insb
sti
cmpsb
nop
xchg
push
mov
js
imul
shll
out
outsl
jo
mov
inc
dec
push
divb
arpl
pusha
enter
dec
arpl
arpl
inc
aaa
insl
and
and
mov
outsl
arpl
addr16
ret
push
imul
clc
push
inc
inc
jb
add
addr16
insl
inc
mulb
mov
xor
lahf
sbb
jo
and
dec
and
pop
push
cmp
addr16
jae
or
xor
fsubrl
in
shll
jne
dec
fs
jnp
ret
dec
pop
shll
push
imul
inc
sub
and
dec
imul
cmp
sub
push
add
aaa
mov
add
mov
dec
pop
imul
mov
xor
push
inc
gs
popa
test
mov
inc
and
popf
jge
jo
cmpsb
rcrl
insl
das
in
mov
std
popa
addr16
outsl
js
xor
push
dec
inc
dec
add
dec
dec
inc
add
cs
jl
movl
or
push
bound
outsl
jae
repnz
subb
mov
inc
add
pop
ficompl
gs
imul
in
sub
add
jo
jae
dec
push
push
adc
sub
les
add
insl
xor
xor
adc
add
fwait
in
xchg
out
dec
jle
push
ja
xor
xor
adc
add
sub
push
inc
adc
lahf
nop
xchg
ja
xor
xor
mov
xor
stc
or
dec
dec
push
xor
jbe
pop
fidivrs
bound
adc
adc
add
pop
push
xchg
jle
or
sub
jae
adc
in
mov
insl
pop
jno
ja
cmp
push
dec
cltd
add
std
pop
bound
insb
xor
inc
ja
inc
xchg
lds
inc
xor
outsl
aaa
in
adc
mov
add
or
stc
cwtl
int3
bound
jo
imul
iret
push
or
pop
icebp
jne
outsb
jo
push
push
dec
ja
pop
enter
inc
jp
pusha
aaa
push
xor
adc
add
adc
add
add
xor
add
push
popa
jb
adc
sbb
cmp
in
cmp
adc
mull
sbb
push
addl
xor
mov
jae
bound
adc
xchg
in
ja
push
pusha
decl
adc
xor
mov
jmp
incl
cli
jmp
call
cwtl
cltd
cltd
ret
and
cltd
adc
test
in
push
xor
fsts
lcall
mov
lea
sti
iret
into
enter
imul
shrb
xchg
rol
pop
popf
fdivrl
adc
std
call
fistpll
lcall
sbb
out
cmpsl
adc
arpl
outsb
sbb
adc
lcall
xchg
lret
mov
data16
gs
shl
popf
and
cwtl
repz
out
std
out
sub
pop
sahf
fwait
cltd
sahf
and
pop
adc
popf
repz
lret
xor
or
leave
sbb
adc
inc
xor
adc
fbld
add
mov
xchg
adc
mov
iret
lret
jge
outsl
fs
movsl
cli
hlt
std
and
jb
leave
pop
jno
xor
sbb
in
pusha
enter
ret
shlb
ja
jno
addr16
mov
cld
in
leave
jmp
cli
fdivr
std
jmp
ljmp
and
jg
mov
fcomps
xor
idiv
std
aad
sti
jmp
jmp
ja
sar
out
ljmp
fmul
cmp
xchg
test
fucomip
sti
lock
cmc
lock
jmp
sbb
je
insb
cmp
and
das
jae
es
push
inc
inc
dec
pop
sbb
inc
js
insb
outsl
fstl
test
lock
push
arpl
js
pusha
pop
ret
outsl
inc
jne
jb
outsb
shl
addr16
dec
push
cmp
push
inc
xor
movsl
out
je
loope
fs
fwait
inc
inc
jae
xor
fbld
jne
sub
cmp
dec
mov
aas
and
pop
or
and
outsl
outsb
test
imul
sti
jae
and
inc
mov
in
push
pop
iret
pop
outsb
lret
mov
xchg
sbb
push
gs
gs
or
sahf
sub
add
pop
jo
push
outsl
out
shlb
bound
push
aas
mov
mov
and
out
and
fisubrl
outsb
xchg
push
cmp
pop
ret
les
sub
push
insb
lock
mov
cmp
imul
push
sbb
addr16
mov
in
arpl
sub
out
insl
lret
jo
cs
cmp
inc
dec
popa
fistl
lods
js
dec
mov
xor
cmp
mov
or
dec
dec
es
into
inc
push
fcmovnb
add
jo
js
and
and
mov
inc
gs
testl
ljmp
push
push
pusha
add
leave
std
das
lret
ja
add
xor
or
sub
sub
decl
sub
pusha
das
xor
sbb
insl
inc
mov
add
cmpb
das
das
pushf
jae
xchg
into
push
or
inc
dec
push
push
dec
inc
pop
add
cltd
jbe
push
push
push
out
inc
xor
add
leave
leave
or
cs
dec
enter
nop
dec
jl
add
cmp
dec
pop
xchg
dec
jae
in
das
add
ss
dec
pop
pop
inc
das
or
pop
enter
fmull
sbb
mov
das
inc
sub
pop
repnz
dec
rorb
orl
or
inc
enter
mov
xchg
inc
xor
lock
aam
xor
pop
movsb
test
in
or
in
inc
int3
inc
push
leave
and
js
clc
inc
mov
mov
mov
das
mov
sahf
xchg
inc
pusha
push
xchg
and
inc
push
mov
mov
dec
pop
inc
jns
pop
xchg
or
les
cmp
cmp
or
and
and
in
mov
faddl
inc
das
rolb
xchg
inc
shlb
cmp
hlt
aas
in
dec
repz
int3
mov
xchg
dec
and
call
cwtl
push
add
jns
cmp
inc
xorl
dec
imul
jae
sub
jb
jmp
nop
popa
jg
and
sbb
popa
jb
sub
loope
orb
push
xchg
imul
outsb
arpl
scas
add
shrb
add
les
stos
mov
popf
ja
pop
lahf
push
push
divl
add
dec
push
dec
pop
imul
mov
stos
insl
data16
jo
push
bound
push
insl
jo
mov
sbb
mov
mov
inc
mov
and
push
les
hlt
dec
gs
cmp
or
rorl
iret
insb
insb
push
add
push
lock
jae
pop
das
loop
or
fs
xor
ja
xor
addr16
cmp
adcl
dec
shll
and
mov
jae
outsl
inc
push
or
fldl
jne
idiv
mov
notl
insb
addr16
push
pop
pop
mov
pop
aas
push
fwait
les
fstps
aas
sub
push
pop
sub
outsb
cmp
push
addl
out
inc
pop
mov
inc
xchg
push
pop
mov
push
imul
push
sub
xlat
push
ret
cmp
adc
call
sbb
cmp
lds
dec
push
ja
push
dec
fadd
xchg
loope
and
je
inc
xchg
dec
ret
push
inc
dec
push
dec
dec
inc
dec
inc
outsl
mov
mov
arpl
xor
xor
jl
xchg
inc
insb
pop
xchg
mov
ficomps
mov
jo
adc
push
fdivs
arpl
roll
dec
dec
sub
pop
sbb
in
xor
inc
dec
inc
inc
xchg
mov
mov
and
fidivrl
xor
js
lods
outsl
addr16
or
and
cmp
insb
scas
imulb
fisubrl
push
inc
inc
dec
inc
push
pop
mov
aad
mov
imul
shlb
jbe
sbb
adc
adc
bswap
or
jns
mov
sub
jb
jne
push
push
stos
imul
sbb
xchg
dec
and
rorb
bound
push
sbb
xor
adc
push
mov
fwait
cltd
xchg
sbb
test
jb
lods
push
xor
add
mov
add
push
aas
inc
mov
mov
bound
and
push
imul
inc
jno
insb
mov
outsb
popa
and
dec
ret
adc
fld
jae
outsl
pushf
stos
aaa
cmp
xchg
sbbb
push
mov
sub
or
cmp
sub
js
sub
fwait
cltd
mov
xchg
arpl
push
rolb
mov
push
pop
faddp
mov
inc
pushl
jbe
sbb
std
xchg
add
add
jno
mov
xor
xor
inc
xchg
mov
push
dec
dec
andb
mov
cmpsb
fdiv
push
pop
add
loop
ljmp
fs
sbb
mov
push
jo
mov
mov
mov
imul
data16
dec
inc
dec
bound
andb
mov
jnp
imul
test
fcoml
daa
mov
mov
adc
mov
sti
xor
inc
dec
jl
cmp
or
les
jo
inc
push
arpl
xor
mov
and
jno
arpl
push
outsb
roll
add
imul
push
sbb
push
and
rcrl
lds
fsubrl
adc
push
inc
jle
loope
insb
insl
jns
gs
add
es
dec
test
dec
gs
and
jecxz
mov
imul
leave
jbe
mov
imul
pusha
aas
cmovnp
push
popf
mov
push
int
xor
jbe
pop
sbb
sbb
dec
outsl
push
outsl
outsl
inc
imul
mov
sub
push
jb
or
sbb
scas
outsb
fimull
mov
pop
add
ja
jno
inc
stc
adc
inc
insb
dec
inc
or
in
mov
xchg
lods
outsl
add
dec
jne
lea
xor
loopne
insl
aas
outsl
jne
push
mov
mov
cmp
pop
sub
mov
jg
or
add
pop
xchg
out
mov
and
mov
pop
sub
push
loopne
adc
jecxz
jae
inc
stos
add
push
in
cmp
sbb
sbb
pop
lahf
push
cmc
arpl
pop
shrb
mov
mov
sub
daa
ss
add
sarb
sub
mov
pop
push
push
lret
and
and
pop
aas
addr16
dec
inc
inc
xor
pop
outsb
jp
sbb
pop
and
insl
or
sbb
mov
or
movsl
rolw
rol
stos
pop
jle
and
mov
push
push
imul
in
sub
inc
xor
addb
arpl
push
or
sbb
in
inc
xchg
rorb
dec
outsl
or
pop
push
dec
or
in
je
mov
push
inc
inc
push
push
inc
or
pusha
orb
add
sbb
mov
outsl
mov
insb
xlat
ljmp
xchg
add
rclb
pop
dec
inc
dec
push
xor
add
adcb
loopne
mov
sbb
fld
mov
call
push
jns
pusha
and
adc
inc
pop
out
mov
or
push
lods
jb
or
mov
pop
sub
pop
arpl
dec
cmp
ja
push
or
mov
push
jo
push
and
lock
cmove
inc
inc
push
les
or
imul
and
xlat
fwait
adc
loopne
cs
add
dec
lods
aad
dec
scas
ret
jno
les
outsb
sarl
andnps
pop
insl
outsl
jbe
sub
ja
and
call
call
aas
imulb
lock
push
and
std
ss
jno
clc
inc
pop
push
xlat
mov
cmp
or
inc
jne
xchg
scas
negl
cmp
aaa
sbb
insb
outsb
daa
je
pusha
push
lcall
inc
imul
popf
jo
outsl
cmp
sub
pop
sub
es
pop
or
inc
dec
push
push
dec
inc
dec
jne
out
rolb
popf
inc
push
push
andl
rclb
das
dec
fmull
lds
sub
push
jg
popa
jo
cs
sub
aam
rcr
fists
mov
pop
sub
cmp
adc
push
mov
cmpsb
mov
outsl
testb
cmp
jg
inc
push
push
lods
insb
roll
lods
outsl
iret
nop
sub
jo
inc
mov
fwait
pop
outsl
pxor
jmp
daa
clc
dec
dec
inc
dec
or
pop
andb
push
dec
adc
dec
pop
pop
dec
aad
es
sub
mov
nop
push
inc
flds
mov
pop
pop
or
imul
lods
dec
dec
imul
aas
std
adcb
test
rclb
mov
jp
jo
jp
sub
dec
and
inc
dec
inc
and
adc
movsb
sub
popa
in
and
pop
adc
outsl
mov
cmc
mov
adc
adc
arpl
adc
scas
pop
dec
inc
dec
dec
mov
cmp
pop
jbe
xor
ljmp
and
adc
test
imul
outsl
outsl
imul
sbb
js
sub
loope
inc
pop
push
xchg
and
xor
bound
adc
xchg
jbe
aaa
add
jo
push
orb
jge
dec
inc
inc
inc
int
jb
push
push
pop
daa
jae
jg
bound
mov
fistps
out
or
idivb
dec
push
cmp
mov
fbstp
lcallw
insl
mov
dec
sub
insb
xchg
sahf
dec
cmp
adc
xchg
gs
rclb
mov
daa
or
mov
fs
outsl
cmp
add
outsb
fldt
arpl
test
imul
ret
adc
push
mov
add
adc
popa
pop
andl
sbb
shlb
cld
ja
shll
ja
rolb
lea
ja
inc
insl
bound
adc
ja
dec
jae
and
add
push
mov
mov
aas
dec
insb
adc
add
out
pop
cs
test
stos
imul
inc
xchg
cmp
xor
jmp
pop
mov
xchg
test
insl
imul
outsb
test
mov
insl
addr16
push
xchg
xor
mov
adc
arpl
aad
dec
gs
imul
movsl
xchg
arpl
in
sub
test
insl
jae
cs
inc
pop
mov
arpl
das
inc
jns
push
pop
jne
fisttpll
sbb
push
add
rolb
sti
add
dec
inc
xchg
ja
pop
outsl
insb
ja
inc
lea
xor
imul
aas
sarb
rclb
das
es
xlat
or
push
ja
outsl
xchg
ja
mov
out
pop
pop
mov
add
iret
popa
out
xor
push
inc
inc
push
inc
lds
jbe
cmp
push
fld
add
popa
fimull
add
sub
add
xchg
or
icebp
mov
mov
dec
mov
jo
push
ret
cs
aaa
lret
or
or
xlat
inc
pop
inc
inc
popa
das
or
pop
adc
shl
mov
pop
mov
outsb
xchg
test
mov
inc
push
mov
jle
push
and
push
js
dec
push
xchg
test
add
outsl
or
lods
frstor
adcb
xor
sbb
adc
sub
lods
addr16
insb
in
es
les
pusha
ljmp
sbb
push
and
movnti
aaa
push
pop
dec
jge
or
subl
push
dec
sbb
inc
inc
jns
add
adc
mov
add
ficomps
pop
push
inc
inc
dec
pop
inc
gs
ljmp
jg
xchg
push
jge
int
mov
insl
psrad
mov
xlat
xlat
ja
mov
add
dec
dec
mov
inc
push
les
inc
push
push
popa
mov
dec
xor
mov
pop
or
movsl
push
les
test
lds
pop
add
lock
sub
popa
and
jle
ret
call
fisubl
das
and
adc
filds
push
push
js
orb
and
mov
adc
mov
ret
les
add
lds
inc
frstor
or
sbb
mov
jns
gs
pop
pop
inc
bound
xchg
cltd
std
and
adc
insl
divl
add
xor
sahf
popa
adc
sub
adc
push
sbb
jo
add
pusha
add
pop
adc
inc
pop
pop
push
push
insb
stos
sbb
data16
ljmp
dec
jnp
sbb
out
dec
movsl
mov
adc
jns
scas
push
xorb
xchg
hlt
jmp
jo
aaa
push
push
push
push
inc
pop
je
xlat
fsubrs
jo
jnp
pop
mov
push
mov
pop
dec
into
push
sub
or
or
and
call
pop
loope
inc
test
icebp
shrb
imull
mov
insl
fnstsw
xchg
jb
jo
mov
xchg
or
push
mov
add
cld
or
add
or
pop
fdivl
push
je
push
add
xor
in
jbe
push
xor
fs
aaa
push
rclb
pop
fs
sti
out
cmp
arpl
push
pop
ss
jo
punpcklbw
push
jo
sbb
inc
add
jns
push
mov
loopne
push
fsubl
ja
insl
stc
cmovno
sahf
adc
sub
scas
pushw
emms
loope
test
pusha
jne
or
push
cmp
adcl
inc
push
mov
push
push
sbb
cmp
loopne
insl
push
and
sub
jb
popa
ja
push
sub
or
adc
push
sbb
or
adc
int3
js
popa
and
mov
fnstcw
push
outsl
inc
lcall
xor
jbe
scas
add
cmp
pop
bound
bound
add
add
je
insl
imul
cmp
inc
rolb
adc
daa
mov
add
xor
insl
ja
iret
setns
dec
popa
push
movsl
pop
add
sub
jno
das
insl
test
sub
dec
cwtl
ret
in
lds
aaa
sbb
push
sub
dec
inc
rclb
insl
or
jbe
rolb
push
cmp
cmpsb
jne
sti
mov
jecxz
mov
cmpl
ret
lods
and
loope
lds
popf
popa
fs
xor
adcb
sub
addr16
sbbl
adcb
ja
dec
or
aas
outsl
pop
movsl
jno
pop
push
aas
aas
imul
insl
imul
int3
lods
and
jae
movsb
lods
pop
bsr
sub
out
aaa
mov
lods
mov
xchg
inc
inc
dec
pop
insb
add
mov
lret
pop
or
mov
fcmovne
adc
inc
add
std
xor
xor
dec
mov
mov
push
dec
loopne
mov
cltd
inc
out
jbe
gs
imul
imul
dec
xchg
test
ficoml
add
inc
shrb
dec
push
fldenv
inc
jbe
arpl
ds
mov
insl
push
mov
imul
nopl
out
je
movsb
inc
push
push
jae
repnz
push
xor
cmpsb
jb
imul
mov
pop
mov
mov
fwait
test
call
mov
mov
fwait
pop
pop
pop
jno
jne
sbb
push
adc
mov
jo
xor
add
mov
or
or
or
mov
orb
arpl
mov
dec
add
fisubrs
dec
fucomi
daa
jb
movntps
insb
sub
loopne
data16
add
xorb
arpl
addr16
push
xorb
repnz
arpl
aad
fwait
dec
mov
loopne
mov
xchg
cmp
sti
jns
inc
insl
insb
addr16
mov
shrb
push
js
adc
pop
outsl
inc
lock
mov
pop
adc
bound
or
jns
fs
outsl
push
push
pop
push
lods
jae
jbe
iret
data16
cmp
xchg
push
add
mov
or
dec
pop
cs
jae
insl
lds
imul
cmp
addr16
addr16
xlat
dec
mov
cmpsl
mov
sbb
inc
mov
dec
ja
ret
jg
out
push
add
push
repz
jno
dec
mov
mov
arpl
sbb
addr16
pop
sub
push
aas
xchg
lods
dec
xor
pop
ret
xchg
push
inc
bound
dec
negl
sbb
cmp
mov
daa
daa
data16
sbb
xlat
dec
mov
cs
sub
insl
push
aas
dec
sarb
cmp
mov
ss
jns
das
ss
inc
pop
xchg
filds
add
pop
dec
push
dec
xor
mov
and
ja
xor
jg,pt
loopne
and
push
popa
in
xchg
cmpsb
daa
pop
inc
loope
fst
xchg
popl
outsb
ficoml
in
mov
aaa
jae
aas
nop
bound
mulb
mov
lods
and
fsubs
sbb
fwait
jmp
stos
inc
add
es
testb
push
and
push
mov
aaa
popa
outsb
out
stc
dec
pop
test
fs
mov
fimuls
dec
orb
sbb
add
pop
xchg
adcl
ds
push
icebp
push
jl
add
test
bnd
pcmpgtd
and
out
js
xor
xor
adc
pop
pop
cmp
xor
fs
popa
rdpmc
xor
fisttpll
push
arpl
mov
or
imul
mov
jo
outsl
push
and
sub
mov
gs
mov
out
sarl
sub
push
es
adc
ret
dec
gs
adc
sub
adc
call
jo
mov
test
into
pop
or
xchg
add
adc
ret
cmc
sub
or
cmc
shl
dec
dec
dec
dec
add
sbb
mov
or
jnp
outsl
shrb
imul
das
mov
fidivl
stc
dec
insb
xor
mov
pop
push
aaa
sti
jnp
jno
lea
and
aad
ja
jbe
ss
push
push
nop
or
idivl
push
push
add
sbb
shll
jne
and
es
sbb
xor
inc
add
arpl
stc
ljmp
imul
push
inc
pop
stos
iret
out
pop
mov
cs
jg
xor
xor
pop
push
push
cld
push
jp
jo
gs
xor
add
xor
bound
repnz
xor
jg
mov
cmp
test
sub
sbb
push
dec
adc
les
push
inc
ret
add
mov
icebp
pop
pusha
ret
push
or
mov
push
and
adc
pop
push
movsb
sbb
push
jge
test
ss
cwtl
lahf
inc
mov
mov
jecxz
sub
sub
sbb
add
in
sub
inc
cmpsb
add
fcoml
in
lret
push
ret
mov
in
jg
shrb
imul
pop
pop
inc
fbstp
jecxz
push
sbb
jbe
scas
adc
aad
aas
cmp
xchg
xchg
dec
out
sub
mov
out
sub
xchg
push
add
int
jge
imull
add
add
cs
jg
xchg
loope
rclb
add
sbb
ss
mov
mov
call
lahf
call
dec
pusha
add
push
pop
in
xchg
push
mov
decl
std
int3
inc
fs
mov
pusha
pop
or
fnstenv
xchg
jl
add
sub
adc
push
and
inc
push
inc
addr16
std
or
test
or
pusha
fiadds
aas
inc
dec
push
add
jo
push
xchg
inc
rol
fidivl
sub
add
or
fdivp
insb
enter
fadds
rolb
les
int
fs
inc
sbb
stos
pop
movsl
and
xor
movsb
das
and
xor
lcall
and
sub
mov
scas
or
mov
and
add
mov
dec
pop
data16
or
adc
js
pusha
push
vmread
or
in
call
aaa
jo
cwtl
xchg
cwtl
dec
rclb
test
scas
xor
xor
stos
cwtl
or
sbb
dec
lds
rorb
mov
jg
lds
add
cltd
icebp
mov
jp
add
test
xor
mov
or
add
loopne
dec
adc
cs
push
xchg
push
punpckhbw
add
or
and
je
in
outsl
push
add
xor
cs
push
out
and
sub
add
pop
test
jmp
mov
into
int3
loopne
mov
push
xchg
add
push
ret
xlat
jo
fstpl
add
sbb
mov
sbb
fsub
std
ror
inc
mov
imul
jo
popa
aaa
pusha
std
out
dec
popa
call
inc
cmpl
data16
cmpl
add
outsb
xor
loopne
add
and
das
sbb
aaa
mov
xchg
xor
inc
add
repz
ljmp
fdivrs
pop
add
jl
mov
ja
mov
cs
add
cld
ja
and
jecxz
adc
rolb
popa
fs
mov
dec
or
cs
sbb
dec
mov
fcmovnb
mov
nop
fcoms
sbb
cs
clc
mov
dec
dec
xchg
cmp
xor
inc
add
inc
pop
das
adc
pop
cmp
inc
xor
jne
sub
and
mov
add
xchg
orl
les
popa
and
mov
xchg
xlat
shlb
insl
inc
sbb
mov
xor
dec
xchg
xor
movl
cmp
inc
std
mov
loopne
sub
aas
fs
insb
sub
sbb
dec
add
fnstenv
pop
dec
sbbb
dec
cmp
xchg
add
sbb
sub
sbb
adc
or
ss
and
push
sbb
sub
les
hlt
loopne
add
pop
stos
or
mov
inc
aaa
rorl
lcall
or
sub
cmpsl
mov
inc
bound
fdivl
addr16
sub
and
xchg
pushf
xchg
clc
ret
insb
pop
outsb
pusha
pop
cs
fwait
add
xor
cmp
jb
xchg
adc
pusha
and
push
outsl
popa
stos
mov
test
es
sub
insl
scas
adc
and
nop
push
jo
iret
jo
jmp
jmp
rorl
fildll
adc
sub
jg
std
mov
fwait
push
pop
add
fildl
dec
rolb
cmpsb
das
dec
inc
add
imul
adc
push
je
and
sbb
xchg
outsb
cmp
movsb
rol
xor
jle
sbb
push
or
xor
arpl
ds
sub
aaa
dec
arpl
les
popa
jne
dec
je
xchg
adc
sar
push
inc
dec
dec
cs
inc
outsl
pop
or
push
inc
add
fmuls
xchg
movsl
jne
jo
sub
mov
sub
popa
dec
sub
imul
inc
inc
scas
push
push
es
lock
dec
and
das
mov
add
das
nop
mov
inc
mov
add
pushl
scas
mov
adc
add
rclb
sbb
ljmp
xchg
lret
adc
or
push
js
ret
aaa
rol
stos
jns
add
in
adc
aad
test
pop
mov
pop
xchg
xchg
xor
sbb
je
pop
sbb
push
bound
gs
pusha
sub
pop
ja
rorb
add
pushl
orb
popf
ret
mov
outsl
outsl
test
cmpl
je
jo
inc
loopne
xor
adc
aaa
xor
andl
jnp
mov
je
cmp
sub
pop
ja
add
sub
sbb
jb
sbb
cwtl
jp
lret
sub
sarl
mov
imul
loopne
cwtl
js
sub
test
inc
dec
push
and
lea
dec
sub
in
call
adc
inc
jae
stc
rorl
mov
xor
sbb
fisttps
test
insl
insl
cmp
outsl
imul
loope
shlb
outsl
and
mov
mov
cmp
negl
push
push
xchg
mov
jns
push
jno
mov
inc
test
and
mov
shr
imul
sbb
fst
cmp
bound
xor
adc
cmpsl
decl
inc
and
dec
push
push
dec
cmp
cmp
sub
sub
sti
leave
mov
inc
dec
inc
adc
inc
pop
out
ss
dec
ds
dec
gs
push
lahf
mov
outsl
add
fcoms
cmc
jae
and
loopne,pn
daa
das
sub
rcll
gs
repz
inc
push
dec
and
mov
and
lret
adc
inc
dec
dec
inc
test
cmp
mov
int
mov
movsl
add
shll
xor
jae
movsl
cmp
adc
xor
aaa
fsubrl
sub
adc
jae
inc
mov
xor
cmp
into
das
daa
dec
inc
and
inc
sbb
adc
pop
mov
inc
mov
xchg
fs
or
inc
adc
or
out
or
sbb
popl
cs
pop
mov
jo
movsb
adc
sbb
test
daa
jne
sub
and
dec
push
popa
enter
dec
add
ficomps
dec
movsb
push
mov
arpl
ds
jmp
pop
ret
adc
push
test
mov
inc
push
addr16
fwait
xor
out
dec
mov
ss
dec
push
jge
inc
mov
lret
fistps
xor
cmpsl
mov
mov
push
gs
sbb
fistpll
or
aas
mov
sbb
xor
shll
stos
and
insb
cltd
fiaddl
mov
dec
and
dec
inc
inc
xorl
popf
push
and
inc
lods
and
popa
adc
mov
and
xorl
dec
add
popa
je
cmp
cmp
adc
mov
mov
stc
and
push
cld
popf
subb
dec
dec
pop
and
dec
sub
test
xor
insl
sbb
inc
pop
and
decb
bound
add
dec
push
popl
dec
jno
daa
inc
movsb
fstl
pop
test
cmp
gs
push
inc
pop
or
das
aaa
xor
daa
jno
cmp
cmp
xor
xor
cmp
cmp
xor
sbb
cmp
xor
sbb
cmp
jbe
aaa
cmp
sbb
ja
cmp
cmp
sbb
cmp
xor
cmp
or
or
xor
ja
push
push
rolb
or
xor
fisttpl
jns
and
pop
es
mov
fidivs
pop
and
nop
mov
repnz
pop
es
ss
es
aaa
pop
and
in
cmp
es
push
jns
cmp
sub
pop
es
sub
dec
jae
cmp
adc
or
aas
push
jno
mov
es
insb
in
xchg
dec
inc
ds
push
push
adc
arpl
adc
add
adc
add
adc
lahf
jo
daa
jnp
or
nop
jge
popa
popa
mov
push
cmpsb
adc
popa
int
adc
xorl
adc
add
push
mov
xor
add
imul
adc
mov
insb
adc
xchg
pop
cmp
dec
push
adc
mov
and
dec
arpl
add
adc
mov
bound
fildl
push
adc
dec
mov
push
cmp
ds
cmp
aas
fcompl
jg
xchg
out
push
dec
pop
or
push
push
jno
or
aas
push
or
inc
pop
sub
sbb
or
fisttpl
dec
pop
or
scas
out
jge
outsb
lods
rorb
inc
pop
or
sbbb
ss
mov
fcmovnu
les
jbe
jne
dec
and
xorb
add
inc
inc
push
pop
or
stc
imul
inc
dec
or
pop
dec
pop
or
inc
test
shlb
scas
imul
sub
sub
imul
and
mov
popa
orl
bound
arpl
and
fs
enter
xor
dec
ss
mov
or
inc
cs
cmp
or
inc
xchg
punpcklwd
fs
sbbl
es
shrl
or
in
sub
movsl
xor
inc
stc
dec
add
sub
mov
dec
addr16
icebp
push
pop
pop
fisubs
jo
inc
aaa
mov
andb
xorl
pop
lcall
mov
jecxz
gs
rol
movsl
inc
mov
aas
insb
lea
gs
outsb
movsb
pop
xor
jbe
je
jb
inc
movsl
jno
arpl
bound
push
dec
fwait
dec
and
aaa
fbld
bound
shll
inc
popa
sub
pop
inc
mov
pop
cmp
and
repz
subb
inc
fs
inc
gs
jo
mov
iret
dec
jo
inc
unpcklps
and
or
and
sbb
insl
fdivs
outsb
jae
push
push
fsts
push
xlat
jb
jnp
movsl
movsl
fcomps
aas
cs
dec
jecxz
stos
add
push
addl
insl
pop
fs
lods
and
dec
push
popa
mov
push
fmul
scas
nop
daa
pop
testb
gs
outsl
bound
cs
add
add
push
mov
adc
jle
pop
inc
mov
mov
inc
jbe
push
enterw
rcr
cli
add
pop
ja
outsl
jp
popa
das
xor
adc
sub
add
sbb
sub
sub
xchg
daa
sub
pop
ja
js
daa
movsb
push
jnp
inc
addr16
mov
arpl
jb
push
jb
inc
daa
mov
and
and
pusha
inc
push
inc
in
mov
mov
push
inc
gs
xor
dec
aad
push
mov
es
daa
sbb
lods
fadds
aaa
pusha
arpl
inc
out
and
cmp
xchg
jne
mov
and
or
jns
lea
cmp
push
or
pop
cmp
fs
mov
hlt
lret
push
bound
pop
xchg
add
les
pop
pop
mov
repnz
or
push
fcompl
pop
outsb
push
push
add
push
sbb
pop
aaa
pop
push
leave
pop
lea
rcll
dec
push
shrl
rorb
inc
in
jo
testl
push
dec
fs
sbb
dec
jae
push
inc
loop
mov
jg
dec
lods
insl
push
inc
pop
cmpsb
cmpsb
je
pusha
xor
dec
mov
inc
out
inc
imul
inc
fmuls
sub
mov
cmp
daa
push
iret
movsl
push
mov
mov
pusha
dec
aas
cmpsb
daa
inc
push
addr16
xor
stos
insb
add
xchg
sub
push
mov
stc
cmpsb
shrb
cmpsb
addr16
gs
outsl
mov
dec
je
push
outsl
fisttpl
add
pop
imul
pop
dec
dec
ficomps
cmpsb
add
lods
int
push
out
or
sub
scas
or
shl
push
pushf
adc
adc
jge
in
nopl
mov
out
ss
jns
cmp
addr16
push
mov
dec
adc
lods
outsl
mov
sbb
gs
sub
pop
xor
shrb
pop
lret
or
mov
out
ds
pop
inc
dec
lods
popa
notl
pusha
out
fs
movsl
imul
jae
add
imul
imul
add
arpl
sbb
test
mov
mov
lods
or
and
int3
sbb
or
sbb
js
enter
test
mov
inc
inc
lret
or
or
cmpsl
and
xchg
js
popa
jae
push
add
or
inc
pop
sbb
sbb
inc
add
sbb
inc
mov
movsb
shll
pushf
outsb
ret
push
fwait
out
or
roll
and
mov
sbb
bswap
aaa
inc
pusha
add
and
int
adc
cwtl
insb
aaa
or
lahf
sub
jae
sbb
imul
and
orb
jb
sub
insl
int
and
pop
inc
xor
pop
mov
shrl
mov
outsb
jle
outsl
push
into
xchg
inc
push
dec
push
cmpsb
out
out
pop
lcall
sbb
inc
pop
mov
mov
mov
xor
roll
jb
lods
mov
adc
xor
push
xor
add
rcl
das
pusha
stos
insl
ret
xor
sub
leave
ss
mov
jbe
or
cmpsb
mov
add
addr16
in
push
push
adc
push
or
sbb
popa
and
push
or
fwait
shl
nop
pop
mov
lods
xor
push
sub
outsl
cmp
lcall
pop
dec
push
inc
mov
jo
orl
adc
loope
int3
popa
popa
sbb
mov
pop
dec
and
inc
mov
cmp
cmp
xchg
adc
dec
add
icebp
stos
stos
jge
adcl
sti
jge
xor
sbb
cwtl
bswap
icebp
cwtl
or
mov
add
pop
flds
adc
out
cwtl
icebp
fwait
cltd
popf
dec
adc
mov
lret
xor
andl
ljmp
movsl
mov
mov
jmp
mov
movsb
adc
mov
adc
outsb
xchg
fbstp
leave
enter
pop
out
test
data16
lcall
xchg
lcall
fsubl
lcall
insb
lcall
stos
push
rcr
xor
pop
jmp
dec
in
xchg
pop
push
xchg
lcall
in
fildll
adc
mov
xchg
rclb
test
fwait
push
xor
fnstsw
rcrb
add
xlat
xchg
jne
sub
pushf
push
jbe
jns
push
add
lcall
andl
pusha
xor
jle
pop
loopne
daa
in
mov
add
add
mov
or
or
or
loope
out
dec
imul
add
add
cs
mov
mov
pop
pop
mov
in
cltd
inc
xchg
bswap
gs
or
xor
insl
es
fscale
sub
int
cmc
imul
mov
aad
and
inc
jb
out
rorb
cmp
dec
add
lock
aam
and
and
loope
cmp
inc
lds
push
sub
jbe
das
dec
inc
dec
dec
add
popa
inc
jo
or
outsb
jo
xor
xor
dec
inc
xor
xchg
xchg
xor
aad
sbb
xor
movsb
jae
scas
add
outsl
incl
lea
add
or
aam
and
aaa
lea
movsl
xchg
orb
imul
cmc
mov
cmpsb
bound
jmp
push
das
rorl
gs
xchg
sbb
adc
xchg
dec
push
in
push
lahf
push
loopne
arpl
test
cmp
inc
push
add
adc
loopne
add
adc
addl
pushl
sbb
repnz
sbb
scas
xor
ret
das
test
pop
mov
lea
jp
mov
in
ret
push
add
push
out
xor
jbe
mov
fs
add
mov
add
popa
iret
xchg
push
sub
dec
int3
fwait
adcl
add
push
insb
mov
das
jo
fcomps
xlat
pushf
and
aas
adc
add
lods
mov
aaa
push
es
mov
pop
inc
mov
sbb
push
xchg
inc
sub
add
test
adc
sbb
or
rclb
fwait
cmp
and
test
rorb
cmc
add
hlt
scas
in
xchg
pusha
mov
add
and
mov
or
in
add
inc
test
xchg
adc
lahf
jl
inc
das
inc
mov
rorl
xchg
js
iret
sbb
test
add
adc
das
jp
js
decb
inc
add
or
adc
mov
mov
popa
fwait
cmp
or
and
add
clts
nop
vmwrite
push
fwait
jl
jo
insb
lidtl
sbb
xchg
js
and
xchg
pop
push
les
xchg
or
sbb
add
outsb
mov
sbb
into
outsl
scas
add
xchg
and
imul
mov
inc
mov
jne
inc
dec
jge
loop
fs
pop
rolb
out
push
push
xor
add
sbb
add
inc
testl
add
lock
imull
arpl
rclb
aad
jmp
mov
test
add
dec
fistpll
adc
shrb
jae
pop
adc
inc
aaa
push
or
and
aas
orl
arpl
push
pop
outsl
popf
inc
gs
inc
push
xchg
leave
cmp
cmp
add
sti
ds
and
dec
xor
adc
sbb
pop
pop
outsl
insl
dec
mov
jae
aaa
and
bound
pop
add
cmpsl
sbb
test
das
hlt
cmc
jbe
insl
xchg
arpl
inc
and
xchg
aas
mov
jae
js
cmpsb
add
or
mov
jnp
or
cmp
addl
cmp
inc
adc
push
push
or
add
js
shlb
adc
mov
jo
mov
movsb
sbb
aam
sbb
lcall
add
push
daa
inc
fs
fistpl
fs
insb
mov
aam
jmp
push
push
out
dec
mov
mov
push
aas
lods
mov
fs
cli
cmpsb
or
inc
push
js
pop
push
inc
mov
dec
mov
sbb
add
aaa
xchg
jne
test
outsb
inc
test
outsl
arpl
hlt
sub
loopne
pop
imul
adc
dec
add
mov
jp
push
pop
dec
dec
sbb
jb
mov
push
push
or
mov
arpl
xchg
bound
inc
cs
aam
add
cmc
imul
test
or
sahf
pop
push
lea
das
imul
jbe
popl
pop
stos
leave
add
movaps
andl
push
add
test
aad
jo
inc
popa
loope
push
orb
mov
sbb
int
adc
bound
add
jg
add
arpl
scas
push
mov
xchg
add
or
inc
xor
ja
lret
es
pop
sbb
orl
subb
lret
shlb
fs
arpl
push
loopne
pop
addr16
sbb
mov
subl
outsb
or
sub
sub
inc
mov
icebp
jmp
push
pop
test
ljmp
cmpsl
icebp
pop
inc
fisttps
inc
adcb
add
push
shrb
pop
and
sbb
iret
addr16
jg
sub
inc
faddl
lea
enter
cmpsl
mov
arpl
pop
adc
push
das
lods
rcrb
dec
arpl
mov
ds
sbb
fstpt
movsb
orl
loop
push
loopne
pop
dec
or
aaa
imul
mov
push
insb
aaa
jecxz
adc
cmp
aas
sahf
xor
aam
ss
or
ret
fldcw
add
push
pusha
jno
push
push
out
nop
sysenter
insl
mov
cli
add
jae
or
es
adc
and
jne
mov
push
xchg
adc
adc
loopne
push
add
or
xchg
scas
outsl
daa
fadds
ficoml
push
sub
cmp
lock
dec
popa
js
xchg
mov
daa
push
dec
xor
sahf
pop
jne
push
xchg
dec
imul
call
add
sbb
push
sti
daa
imul
mov
pop
sbbb
mov
imul
test
jg
pop
shll
sbb
test
sbb
push
dec
fldenv
ss
or
mov
movsl
ret
add
cmp
cmp
gs
loope
bound
add
pop
into
popa
inc
add
ds
out
or
mov
sub
shll
sub
ret
add
push
and
sbb
outsb
and
aas
push
enter
jnp
test
mov
pop
mov
movsl
iret
sbb
frstor
in
sar
loop
adc
cmp
mov
insb
xor
pop
lcall
pop
add
pop
insl
outsb
fdivl
pop
add
mov
mov
inc
adc
mov
rorb
or
push
arpl
sub
cmp
pop
ja
add
arpl
jae
jns
sub
outsl
jo
and
mov
sti
adc
lods
jns
or
ljmp
frstor
insb
mov
mov
bndstx
adc
in
ljmp
mov
fs
je
or
push
and
je
test
leave
and
icebp
push
sbb
imul
lahf
cs
jne
adc
orb
sub
popf
push
pop
loopne
jns
dec
outsb
and
and
rolb
pop
sbb
jae
stos
jne
pusha
xor
das
cmp
xor
sbb
sbb
adc
cmp
push
push
sbb
movsb
ja
sub
xlat
xchg
pop
push
jg
in
push
and
test
add
ja
mov
sub
daa
stc
and
and
add
add
xchg
rcl
pop
xchg
jge
daa
pop
pusha
pop
cmp
xor
xchg
jne
inc
pop
lea
jl
insb
fdivrs
ljmp
subl
outsb
add
sbb
mov
popa
cltd
out
pushl
jmp
sbb
imul
push
add
xchg
push
mov
dec
add
mov
xor
xchg
pushf
popa
mov
or
pop
cmp
mov
adc
inc
gs
xor
fs
jmp
lods
sbb
ret
pop
cmp
cmp
out
push
sub
and
push
popw
fstp
jns
inc
pop
inc
mov
xor
xor
rdmsr
xor
jae
sbb
xor
jle
lret
inc
and
sbb
xchg
push
mov
xor
repnz
jbe
push
mov
fwait
daa
stos
addl
nop
inc
arpl
imul
sub
xchg
movsl
ss
cld
dec
cli
test
push
hlt
lock
rcrl
push
fmul
mov
rcrl
shll
sbb
nop
fnstenvs
clc
out
call
data16
les
fs
mov
cmpsb
imul
imul
dec
shll
sarb
xchg
push
pop
dec
inc
xor
inc
fisubrs
adc
cmpsb
in
pop
loopne
cmpsb
imul
cmpsb
imul
lcall
in
dec
shll
enter
shll
nop
cmpb
and
fs
inc
cmp
xchg
dec
shll
or
lock
imul
imul
imul
imul
cmpsb
imul
cmpsb
imul
imul
xor
hlt
call
test
lcall
push
cmpsb
imul
ja
add
call
das
shr
lcall
movsb
cwtl
mov
cmpsb
imul
xor
sbb
cld
out
shll
mov
xor
nop
test
shll
cmp
fnstenvs
out
lcall
lods
mov
imul
dec
cmp
sbb
imul
cmpsb
imul
imul
cmpsb
imul
shll
aam
mov
shll
inc
sub
dec
shll
or
lock
imul
imul
cmpsb
imul
xor
cmpsb
add
loop
fmul
xor
shll
mov
pushf
mov
xor
sarl
pusha
push
dec
dec
shll
or
lcall
enter
lcall
je
imul
imul
dec
shll
mov
nop
adc
dec
shll
inc
xor
shll
clc
filds
push
fmul
mov
xor
cwtl
mov
push
dec
ss
shll
xor
lock
cmpsb
pop
aam
mov
xchg
cmpsb
imul
imul
jbe
fisttpll
mov
lods
mov
xchg
cmpsb
push
out
cmpsb
imul
pop
loopne
cmpsb
imul
cmpsb
imul
imul
shll
mov
xor
shll
mov
pop
ss
roll
sbb
adc
xor
cmpsb
add
enter
xor
test
mov
shll
dec
inc
xor
pop
ss
rcrl
add
fld1
cmpsb
imul
imul
cmpsb
imul
lret
cmpsb
add
fsub
fmul
fsubrs
dec
shll
lods
mov
shll
jo
pop
push
fnstenv
add
xlat
cmpsb
imul
imul
cmpsb
imul
imul
xor
lock
call
xor
shll
pushf
mov
orl
inc
xor
xchg
imul
in
cmpsb
imul
imul
cmpsb
imul
cltd
mov
aad
aam
in
enter
imul
je
pop
dec
imul
sbb
sahf
lcall
aam
mov
imul
pop
dec
cmp
and
mov
lcall
shlb
movsb
cwtl
mov
xor
sarl
dec
cmp
shll
clc
rcrl
fmul
shlb
test
cmpsb
imul
sub
or
shl
loopne
mov
lods
mov
xor
shll
dec
cmp
inc
push
push
dec
cmp
mov
inc
inc
sbb
xor
pop
stos
xor
sbb
inc
dec
inc
push
dec
push
sbb
ret
pop
sub
inc
push
push
push
dec
push
sbb
push
push
inc
pop
mov
xor
lock
int
pop
push
inc
xor
xor
aaa
push
pop
or
xor
test
mov
xor
dec
in
imul
push
inc
inc
push
mov
push
ljmp
mov
push
dec
jp
daa
outsl
dec
push
mov
data16
cmp
sbb
push
push
dec
jecxz
push
push
movb
out
pop
imul
aas
pop
sbb
dec
pop
push
inc
inc
dec
push
mov
pop
test
cwtl
xchg
mov
fcomps
dec
add
push
and
pop
cmp
inc
aaa
inc
dec
push
push
push
sbb
push
mov
and
xlat
adc
pop
pop
fwait
loop
das
sub
frstor
out
mov
in
push
dec
dec
dec
push
inc
push
inc
dec
mov
punpcklwd
enter
inc
inc
cmp
add
pop
inc
inc
lds
or
aaa
mov
or
push
outsl
cmpsb
pop
inc
aaa
lock
jg
cmp
xor
inc
push
dec
cmp
push
push
push
insb
fcmovnbe
lret
negl
insb
sbb
pop
ja
pop
fs
or
mov
dec
sbb
ffree
mov
insl
push
dec
pop
addr16
and
push
mov
pop
ds
fistl
mov
cs
inc
aad
ret
lods
loopne
sbb
pop
push
arpl
out
out
dec
ffreep
xor
fadd
imul
xchg
jno
enter
inc
dec
xor
mov
xor
arpl
cli
cli
push
sub
push
xchg
cmpb
adc
pusha
xlat
outsb
adc
push
testl
inc
cmpsl
jae
inc
mov
adc
aaa
add
or
push
dec
clc
ljmp
xlat
mov
sub
popa
mov
stos
push
adc
push
cmpsl
ds
pop
sbb
dec
push
push
push
dec
in
mov
adc
dec
in
jecxz
and
xor
cmpsb
mov
push
sub
jmp
push
adc
mov
push
sbb
mov
mov
jno
aaa
inc
fildl
aas
sub
dec
xor
dec
dec
inc
fidivs
xchg
push
rdmsr
sub
mov
xor
adc
sub
sub
dec
pop
in
pop
dec
ds
push
dec
dec
fistpl
pop
sbb
cwtl
or
and
test
cmp
ja
aaa
jne
mov
dec
and
icebp
mov
pop
insl
pop
sbb
sbb
push
ret
adc
pop
sbb
jg
xor
jecxz
jp
dec
mov
mov
xchg
pop
inc
pop
loopne
mov
nop
sbb
test
jo
insb
pop
aaa
inc
mov
dec
mov
push
mov
push
inc
pop
outsl
dec
repnz
xor
push
mov
jp
iret
push
dec
cmpsl
pop
adc
mulb
push
pop
pop
pop
pop
dec
mov
shl
pop
inc
xchg
int3
icebp
shlb
pop
pop
dec
cmp
aad
pop
jbe
aas
cmp
dec
and
adc
fsubrl
mov
mov
inc
inc
scas
jg
flds
rcll
dec
jne
ret
adc
inc
inc
lahf
pop
scas
ret
inc
xchg
call
mov
pop
inc
pop
pop
enter
lds
push
sbb
inc
or
inc
fidivl
push
dec
xchg
sbb
imul
adc
inc
push
test
xchg
mov
dec
pop
repnz
cmp
or
int3
xchg
jle
sub
dec
inc
inc
inc
bsf
jae
inc
inc
xchg
push
inc
adc
pop
inc
ret
push
dec
add
or
xor
push
sub
mov
dec
inc
and
pusha
adcl
pop
dec
push
pusha
push
inc
push
arpl
push
sbb
inc
push
inc
lcall
enter
sbb
inc
dec
pop
ret
adc
sbb
xchg
push
pop
dec
inc
inc
pop
and
testl
cltd
mov
inc
out
es
aas
aaa
push
inc
je
das
push
add
fs
pusha
mov
push
lods
in
dec
jl
jecxz
push
inc
jmp
push
popa
cmp
add
sbb
sub
cmp
pop
je
adc
out
ret
add
icebp
or
mov
inc
adc
pop
mov
or
cwtl
or
mov
mov
push
push
ja
add
in
pop
inc
inc
mov
out
mov
inc
popf
inc
imul
and
inc
adc
inc
fwait
push
jno
adc
mov
scas
daa
push
arpl
les
les
pop
xor
dec
cmpsb
add
out
mov
mov
int
adc
inc
mov
pop
in
jl
call
push
inc
push
mov
lahf
loope
push
dec
jbe
jo
pop
inc
xor
mov
mov
dec
push
xor
xor
aaa
pop
xor
call
mov
enter
mov
sub
pop
aaa
nop
add
or
pop
pop
dec
dec
jno
cli
mov
ss
xor
sbb
fcmovnu
out
xchg
mov
mov
dec
pop
adc
repz
sbb
ret
mov
xor
icebp
inc
pop
ret
lods
inc
push
mov
movsl
add
das
arpl
fwait
push
jecxz
xor
jge
pop
lcall
aam
mov
aad
mov
dec
cltd
pop
inc
inc
and
ljmp
dec
push
cs
push
repz
adc
xorb
daa
pop
dec
push
push
push
push
inc
mov
jmp
adc
fndisi(8087
xchg
inc
pop
dec
mov
lods
or
outsl
rorb
add
pop
xchg
mov
lret
stc
add
add
out
adcb
push
dec
daa
sub
cmc
inc
dec
aaa
xor
push
add
push
cmp
clc
shll
xor
pop
push
push
pop
int
pop
pop
aas
pop
pop
outsb
in
pop
xor
sub
mov
out
add
test
pop
sbb
xor
jge
pop
add
xorl
cmp
adcl
rcr
inc
mov
ljmp
js
jo
cmp
fisubrs
jns
mov
arpl
push
iret
inc
dec
lahf
scas
xchg
sub
add
mov
mov
imul
call
mov
cmp
popl
xor
inc
mov
xchg
test
out
cmpsb
jge
ja
stos
jle
inc
push
dec
push
idiv
adc
dec
push
or
fbstp
add
pop
mov
mov
sti
pop
sbb
mov
arpl
insl
xor
xor
pop
lahf
ljmp
sahf
cmovge
cmpsb
dec
add
dec
push
xor
arpl
divb
pop
dec
dec
mov
dec
cmp
add
and
adc
push
pop
out
rorl
jno
pop
outsl
dec
pop
repnz
dec
fs
inc
dec
mov
insl
imul
sbb
dec
or
add
push
fldl
pop
push
inc
ja
fdivr
pop
mov
loop
in
cmpsb
push
inc
dec
push
pop
das
pop
loop
adc
push
popa
push
inc
jp
inc
inc
pop
decl
rclb
das
lods
loope
dec
sbb
sbb
sub
cs
sbb
inc
pop
sbb
cmp
add
and
pusha
push
movl
xchg
fisttpll
push
mov
movsl
inc
sub
pop
fadd
sbb
mov
shrb
gs
aaa
dec
dec
dec
inc
dec
push
pop
scas
cs
mov
and
push
mov
ret
mov
push
pop
pop
leave
test
push
aad
cmp
sbb
cmpsb
add
sbb
mov
xchg
pop
dec
dec
ljmp
xchg
jbe
and
adc
daa
pop
inc
jmp
add
scas
xor
pop
push
push
inc
pop
jo
std
subl
fistpl
push
mov
mov
mov
mov
mov
rorb
inc
push
push
push
sub
enter
xlat
sub
imul
mov
sbb
std
mov
inc
pop
in
lds
xor
outsl
es
dec
push
inc
test
adc
jmp
inc
mov
mov
pop
push
popf
cs
sbb
mov
dec
inc
adc
or
inc
dec
lods
leave
test
push
das
dec
xchg
xorb
push
sbb
jbe
dec
dec
fmuls
mov
imul
mov
pop
lret
out
adc
psraw
and
cmp
mov
stos
push
push
push
mov
addl
push
ret
jmp
adcb
js
add
push
insl
outsl
shll
inc
push
inc
adc
push
push
push
inc
push
sub
sub
cs
xor
in
mov
test
inc
push
jecxz
xor
cs
mov
pop
push
dec
ja
sbb
mov
sbb
dec
mov
cmpsl
aaa
sub
pop
sub
cmp
inc
test
inc
imul
shll
flds
nop
cmpsb
add
leave
ss
adc
lods
sar
pop
push
xor
inc
pop
out
fmuls
daa
push
jg
cwtl
or
push
inc
pop
push
sub
dec
xchg
push
fcompl
movsl
lods
ror
int
xchg
dec
sbb
imul
or
sbb
imul
pop
dec
pop
mov
fadds
cltd
pop
push
mov
or
jmp
and
fsubr
and
sbb
inc
inc
dec
cmp
cmp
fnstsw
push
aaa
neg
sbb
aaa
push
pop
xor
dec
dec
notb
pop
test
int
outsb
xor
sbb
pop
das
daa
rcrl
fistpll
dec
lods
pop
add
addr16
push
adc
push
cmp
mov
add
jg
push
mov
push
movsl
sub
pop
dec
dec
push
inc
fcoms
aas
jmp
and
adc
sub
adc
xchg
pop
mov
push
test
add
and
je
cmpsl
push
pop
lahf
scas
jmp
mov
or
xor
jmp
mov
adc
in
loope
and
mov
pop
inc
push
push
push
sub
mov
addr16
push
ss
sbb
cmp
shll
sub
test
jbe
inc
lods
jecxz,pt
ds
insb
popa
ja
inc
sub
addr16
add
xor
dec
and
mov
enter
lahf
popa
xor
ss
cmp
dec
in
dec
mov
adc
lret
ds
fisttps
sbb
jnp
inc
push
fildll
pop
inc
popa
jbe
test
add
ficomps
pop
fcmovnbe
push
cmpsl
xor
aaa
addr16
fimull
inc
pop
inc
inc
dec
mov
in
pop
sbb
add
aaa
arpl
sbb
mov
inc
push
dec
pop
xlat
pop
xor
push
leave
psubw
push
notl
pop
sbb
sbbl
call
xor
mov
aas
in
push
dec
inc
push
xor
imul
inc
push
out
adc
arpl
push
ret
inc
ds
rorb
jbe
push
imul
pop
rolb
imul
ret
aad
inc
mov
lods
rol
outsl
das
fwait
mov
outsb
mov
popf
js
inc
arpl
and
bound
mov
inc
sbb
adc
inc
dec
xor
loopne
popl
inc
add
push
aas
sbb
xor
inc
add
push
jge
repnz
cmp
ret
imul
jnp
pop
mov
sbb
adc
popf
pop
cmp
fisttps
and
push
push
xlat
xor
push
and
fcoms
push
jg
push
jmp
and
push
dec
push
inc
push
insb
cmp
popf
jne
mov
sbb
aad
pop
sbb
mov
in
sub
pop
lahf
pop
aaa
cs
xchg
adcb
std
push
add
jg
xchg
shlb
pop
xchg
cmpsl
movb
pop
pop
mov
ret
push
lcall
pop
pop
add
pop
fstl
pop
xchg
mov
loopne
mov
sbb
inc
rorb
push
push
pop
mov
pushf
daa
aaa
pop
mov
arpl
dec
dec
adc
xor
fcmovne
inc
sbb
cmpsl
push
sub
mov
jb
test
ss
je
push
or
aaa
fcomps
push
ss
inc
or
stc
pushf
aas
and
cmpsl
sbb
xchg
add
inc
and
add
lea
aas
loop
xchg
mov
insb
adcb
aaa
movb
xor
mov
movsl
or
outsb
add
loope
xor
int
pop
push
fsubs
in
jmp
pop
mov
jbe
mov
daa
mov
dec
mov
into
dec
and
test
shll
jecxz
daa
test
int3
add
and
push
out
add
adc
adc
test
or
and
arpl
inc
add
add
add
mov
dec
sbb
add
mov
and
dec
lods
add
testl
push
loopne
inc
cmp
movsb
pusha
fcmovnu
cmp
pop
addl
cs
adc
adc
adcl
jg
push
and
dec
mov
xor
pop
or
mov
lret
data16
cld
add
lock
push
inc
sbb
cmovb
adc
sub
and
or
inc
and
inc
xchg
fs
or
loop
das
or
inc
scas
and
nop
and
cs
mov
push
lret
out
das
test
pop
and
add
xor
mov
inc
inc
xchg
sarl
sbb
sbb
icebp
out
xchg
and
sbb
out
pop
push
out
das
and
inc
and
out
pop
add
cmp
inc
xchg
and
and
test
nop
and
dec
pop
sbb
sbb
sub
adc
das
adc
test
cmp
aas
daa
pusha
mov
xor
push
fwait
das
and
sub
sbb
nop
inc
and
nop
and
or
inc
xchg
sub
sub
pop
or
inc
cmp
and
pusha
and
jle
jb
pop
test
and
sub
inc
enter
adc
test
and
pop
es
adc
test
inc
das
pop
inc
enter
aas
daa
xor
inc
enter
push
shrb
test
inc
enter
and
xchg
and
inc
and
pop
enter
and
cmp
or
add
jae
outsb
das
and
add
mov
roll
and
fisttpl
add
mov
dec
push
inc
push
int3
push
xor
xor
pop
cmc
nop
add
or
daa
mov
fistpll
pop
sub
pop
dec
dec
mov
pop
sub
push
repnz
push
push
add
aaa
add
das
xchg
sbb
dec
xor
jae
jne
adc
test
mov
sbb
pop
das
inc
mov
inc
das
rolb
add
popa
add
lods
adc
das
test
adc
or
dec
inc
jg
add
in
push
scas
add
repnz
or
jne,pn
lods
lods
mov
and
jo
nop
or
sahf
inc
add
das
popa
pop
add
and
sahf
das
sahf
pop
push
push
inc
enter
adc
mov
push
scas
push
in
xor
decb
pop
out
das
jns
add
push
fsubrs
add
add
push
jle
sahf
mov
cs
dec
dec
pop
push
inc
das
pop
ljmp
pop
outsl
imul
xchg
leave
inc
bound
stos
shlb
dec
or
adc
test
push
cmpsl
cmpsb
xor
mov
addr16
lea
arpl
push
jmp
xchg
inc
sbbb
scas
adc
dec
pop
add
divl
decl
stos
dec
cs
or
sub
mov
outsl
push
aad
loope
xchg
out
pop
cwtl
or
add
decl
aas
and
cmp
lods
ficompl
xor
push
and
mov
cmp
stos
mov
lahf
pop
push
add
dec
dec
cmc
and
add
inc
sbb
mov
mov
pop
mov
xor
imul
dec
xchg
jae
add
xor
rcrb
or
lahf
xchg
adc
pusha
in
popf
in
mov
inc
mov
push
insb
dec
sub
push
rorl
loop
cwtl
pop
insb
adc
adc
int
xchg
outsl
fcoml
pop
push
pusha
pop
pusha
xor
push
test
add
daa
loop
push
inc
add
lds
addr16
outsl
xor
or
sub
add
invd
inc
imul
scas
xor
or
xchg
arpl
inc
in
add
rcll
insl
adc
add
ss
cmp
add
add
jp
add
aas
xchg
into
push
xor
movsl
daa
mov
daa
add
inc
outsl
jae
ja
jns
mov
imul
cli
pushl
xor
xor
popa
bound
addr16
call
cmpsl
insl
jecxz
jno
jne
ja
jns
pop
cmc
xor
cmpsl
outsb
jl
inc
lahf
adc
jl
add
dec
xor
cs
cmp
dec
inc
cmp
les
andl
ret
add
inc
roll
add
mov
push
push
push
incb
mov
push
addl
adc
push
and
sub
bound
sbb
or
adc
xor
mov
pop
in
mov
push
jns
lcall
js
push
out
imul
test
inc
xor
sub
lahf
imul
sub
jae
cmpsl
fabs
int
movb
adc
and
mov
les
shr
inc
add
pop
mov
adc
outsl
arpl
dec
ja
aaa
push
add
cmp
pop
dec
sahf
test
dec
shll
xor
add
inc
push
and
xor
fnstenv
adc
add
adc
call
push
fmuls
enter
lods
cmpsb
xor
xchg
mov
xor
imul
ss
rorl
sub
push
or
adc
cmp
push
and
cmpb
mov
push
jg
outsl
xor
push
adc
mov
shll
hlt
lock
call
in
int3
les
movsb
cwtl
mov
xor
roll
pop
mov
push
push
dec
push
inc
cmp
lret
xchg
xor
imul
or
xor
mov
adc
in
rorb
pop
add
pop
adc
mov
xor
mov
xor
roll
shll
push
dec
jbe
cmpsb
imul
daa
shll
sbb
imul
dec
add
adc
adc
push
in
dec
rcrl
push
int3
push
les
xor
mov
mov
mov
push
adc
dec
shll
cmp
sbb
negb
out
mov
xchg
push
or
pmaxsw
mov
rcrb
les
cmpsb
imul
call
push
mov
pop
addl
and
enter
add
insb
mov
aam
lods
push
push
and
fiaddl
pop
pop
test
xor
outsb
mov
mov
push
test
sbb
pop
fs
mov
ret
into
bound
divb
pop
jno
mov
pop
mov
outsl
bound
push
add
inc
fisubrl
mov
bound
or
fistl
inc
push
pop
pop
dec
fs
pop
pop
mov
push
ret
imul
outsl
push
mov
aaa
bound
out
decb
data16
xor
xchg
jg
int
sbb
je
inc
add
in
shll
imul
xchg
movq
aaa
or
imul
adc
push
and
mov
jb
loopne
pop
push
xchg
jae
daa
adc
xor
sbb
xor
outsb
push
cmp
sub
xchg
jbe
jo
ds
outsl
bound
jno
jp
in
test
jno
jp
mov
push
cmp
adc
les
xor
das
imul
cmp
popa
dec
pop
xchg
gs
push
test
lea
sbb
mov
fstl
push
jne
out
mov
mull
scas
push
dec
and
mov
dec
jb
jns
or
jne
scas
insb
sbb
jne
lahf
imul
sahf
outsl
outsb
and
mov
push
push
xor
enter
xor
fdivs
xor
xor
popa
addl
pop
das
aas
push
push
xchg
jle
addr16
ror
aam
ja
fbld
pop
push
xor
cwtl
push
daa
xor
add
nop
ss
jne
cmpb
pusha
loop
scas
out
rorl
add
je
add
popa
pop
aas
loope
fdivr
data16
arpl
lea
and
jne
sbb
int
inc
das
mov
out
inc
dec
ja
push
ljmp
or
push
cmpl
or
lock
outsl
fs
and
sbb
mov
jae
pusha
or
outsl
pop
arpl
pop
or
popa
nop
or
andb
shrb
pop
insl
cli
jbe
aad
cld
ss
dec
fstl
mov
loope
inc
push
and
dec
scas
aas
xor
xchg
lock
inc
sub
push
or
ss
rcl
xchg
xchg
punpckhbw
inc
pusha
pop
jb
mov
push
push
push
inc
cmp
fwait
cmc
pop
push
pop
and
push
mov
aaa
push
push
outsb
add
or
bound
cs
lods
inc
push
pop
xor
jecxz
xchg
pusha
xlat
cmp
rcll
arpl
jo
jae
test
adc
mov
and
repz
sbb
xchg
inc
sub
mov
or
mov
subl
mov
push
mov
xor
pusha
loopne
push
sti
dec
push
fwait
ja
pusha
in
push
jmp
push
addr16
add
lods
std
incl
imul
add
jge
pusha
into
jecxz
inc
dec
jmp
ljmp
ja
or
jl
jno
insl
mov
cltd
ret
cmpsl
lea
pop
push
add
mov
mov
movsb
mov
lahf
cmp
jno
and
sub
sub
sub
fcoms
jo
add
mov
jmp
popl
ret
and
inc
outsb
sub
mov
ja
dec
scas
xchg
inc
clc
aas
inc
xor
loopne
and
dec
icebp
or
subb
xchg
pop
pop
mov
push
jmp
mov
test
mov
insl
fisubrl
aaa
mov
inc
inc
mov
inc
sub
push
mov
shll
dec
or
iret
nop
xlat
jmp
hlt
pop
loop
add
or
adc
xor
popa
mov
dec
inc
jo
adc
push
addr16
add
push
enter
addr16
mov
in
insl
add
cmp
adc
ret
adc
test
mov
ja
jns
mov
adc
and
jno
icebp
mov
push
adc
cwtl
adc
add
pop
xor
jg
fisttpl
inc
loop
das
mov
add
sub
add
js
out
dec
dec
pushf
jo
lods
or
xor
test
jl
inc
cmp
rolb
lret
js
inc
and
pop
lock
xchg
mov
push
and
adc
jne
mov
mov
adc
cmp
cli
inc
stos
ret
jno
adc
jg
xlat
add
add
push
call
add
andl
jp
aad
add
call
clc
pop
cmp
in
dec
ret
pop
pop
pop
push
sub
cmp
add
inc
mov
rep
mov
stos
push
push
push
push
xor
aam
cwtl
or
fprem
push
jecxz
les
ret
out
or
add
loop
mov
pop
test
or
pop
pop
jg
and
xlat
mov
xchg
sub
cmp
sub
cs
gs
mov
cmp
out
push
xor
nop
scas
das
add
ss
cmpsl
stos
nop
pusha
dec
mov
mov
sarl
pop
add
test
dec
push
clc
and
sbb
push
xor
cmp
jl
mov
or
push
dec
mov
push
stos
ss
rolb
ja
push
and
and
sbb
push
fidivs
sub
sub
adc
iret
add
movsb
push
notl
fdivrs
jp
push
mov
mov
ret
cmp
sbb
xor
xor
cltd
shll
add
xor
xor
sbb
cmpsb
mov
inc
xchg
outsb
outsb
or
aad
sub
xchg
sub
and
mov
scas
jns
push
cmp
inc
push
push
or
dec
ss
dec
dec
jp
and
dec
jae
movsl
adc
lods
cmp
sub
cwtl
adc
cmp
cmp
pop
push
cs
sbb
lahf
imulb
inc
xchg
sbb
imull
jmp
xor
push
jbe
stos
push
dec
ds
pop
push
imul
sbb
mov
arpl
add
roll
mov
adc
pop
xchg
or
adc
bound
dec
sbb
popa
or
pop
dec
pop
or
sbb
cmpsl
ret
ret
pop
ret
ret
xor
xorb
lds
ss
popa
leave
add
jl
js
inc
stos
inc
stc
das
push
or
insl
pop
sub
mov
movsl
mov
sbb
mov
rcl
mov
adc
adc
add
mov
mov
icebp
mov
lods
sub
jbe
sub
xorb
ficompl
mov
cmp
push
adc
cmp
scas
or
cmpsl
imul
xlat
rcl
loopne
gs
ret
cmp
ds
js
dec
sub
sub
mov
xor
incb
ds
aas
js
insb
clc
dec
sbb
lret
and
pop
xor
pop
mov
cmp
scas
or
mov
and
addr16
and
inc
inc
inc
push
cmp
jno
adc
inc
fld
sub
xor
push
out
mov
adc
pop
das
popa
roll
in
adc
inc
test
xchg
inc
adc
ds
adc
sub
mov
lods
sbb
inc
and
cs
jmp
sbb
leave
sub
cmpb
push
loop
jg
in
pop
loop
push
push
pop
je
jne
xor
mov
sbb
mov
jl
mov
imul
fcmovb
subl
out
pop
clc
in
paddb
enter
jmp
ret
je
data16
or
pop
stc
int
jl
and
pop
pusha
mov
dec
xlat
stc
jns
test
lcall
fisubrl
mov
xchg
mov
js
jp
cmp
enter
xlat
fldl
neg
pop
xchg
aad
rcrl
in
inc
fisubrl
xchg
add
push
mov
lcall
jg
sub
shr
aam
jmp
mov
pop
xchg
subb
jge
inc
fs
in
movsb
call
pop
push
xlat
push
in
in
pop
imul
fistpl
out
mov
aam
push
mov
jg
pop
add
aas
bound
shlb
nop
fwait
jp
stc
jg
push
jle
sbb
fwait
and
shr
arpl
ljmp
in
jmp
mov
or
out
mov
mov
pop
cmpb
in
mov
das
iret
cs
addl
pop
mov
cmpb
jmp
lock
sub
ret
pop
mov
xor
test
jmp
in
subl
push
aas
js
shll
dec
mov
mov
cmp
jo
xchg
mov
shrb
inc
mov
pop
mov
mov
pop
test
pop
test
call
mov
insl
lret
scas
das
mov
cmpsl
enter
jo
or
inc
insb
xor
or
lret
sub
movb
dec
mov
movsl
adc
or
add
pushl
pop
jae
bound
add
aas
ret
mov
xor
xchg
push
or
adc
push
cmpsb
sub
add
and
cltd
dec
push
dec
add
test
adc
or
addb
add
inc
popa
push
xor
mov
add
movsb
add
jns
and
pop
inc
loope
mov
fcmovne
iret
loopne
inc
jle
test
shll
in
adc
pop
jg
or
mov
sbb
in
in
adc
pop
jle
adc
push
scas
in
pop
fidivrl
xor
fcomp
loopne
jae
inc
pop
mov
jle
push
clc
add
notb
add
shll
or
dec
or
or
or
nop
popa
orl
or
jbe
imul
daa
adc
adc
mov
pop
or
inc
push
addr16
mov
ret
xchg
push
xorps
pusha
fsubrs
push
and
add
push
imul
or
orl
and
add
xchg
sub
mov
ret
xor
into
aas
xlat
pop
sbb
fsubr
xchg
pop
mov
add
inc
mov
add
push
add
in
mov
lcall
or
sbb
add
nop
nop
xchg
xchg
sbb
das
or
pop
and
mov
sbb
add
cli
sub
fcompl
wbinvd
lcall
adc
insb
lcall
loopne
shll
sbbb
shll
call
lcall
xchg
cwtl
lcall
stos
arpl
stc
add
in
sbb
incl
adcl
mov
in
cmpsl
pop
enter
inc
pushf
or
sahf
in
push
ret
mov
adc
xchg
pop
repnz
sbb
leave
sbb
jmp
ret
inc
and
sahf
mov
sub
inc
rcrb
and
lcall
jmp
inc
jno
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
sti
iret
decl
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
jl
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
jmp
jecxz
cli
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
jmp
mov
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
cmp
lds
mov
cmpsb
lock
mov
popa
sar
mov
fsubs
stos
and
call
mov
outsb
dec
leave
fwait
xchg
and
and
pop
int
add
sti
aas
jno
or
mov
lcall
cmp
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
inc
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
aad
mov
std
std
into
jmp
adc
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
fisubs
xchg
cmp
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
jl
call
mov
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
jmp
inc
rcr
push
arpl
int3
and
call
cmp
jp
and
ljmp
addb
add
xlat
cmp
mov
sbb
add
movb
lcall
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
mov
cmpsl
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
faddp
jge
call
push
sahf
out
pop
push
xchg
cmp
push
andl
dec
dec
gs
std
orl
pop
ficomps
into
ror
add
cmpsb
fmuls
addr16
movsb
add
push
and
stos
test
inc
add
test
mov
add
and
add
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
pusha
mov
mov
cmp
add
rolb
add
ja
pop
out
jo
or
stos
inc
rcrl
insb
movb
mov
popf
sbb
add
arpl
imul
push
dec
or
addb
inc
mov
jne
lock
push
loopne
lods
push
and
ficoms
nop
sbb
mov
push
cmp
push
xchg
add
test
dec
popa
add
xchg
xchg
xchg
add
popa
jo
add
add
add
jp
rcll
pop
gs
and
inc
sub
mov
cmp
or
js
jle
jo
sub
insb
push
xchg
jge
add
fisttpll
push
push
xor
push
adc
cltd
loopne
xchg
test
push
ljmp
inc
jns
outsl
push
imul
popa
inc
sbb
in
fs
imul
mov
lahf
adc
pop
rcrl
jb
pop
inc
dec
or
daa
gs
cmpsb
xchg
adc
inc
dec
push
sbb
daa
push
xor
es
pop
dec
outsl
fldt
dec
jo
adc
xor
fcompl
hlt
jae
bound
aaa
sbb
xor
jo
addl
jmp
inc
lahf
inc
add
test
lods
add
aaa
mov
bound
lods
adc
add
jnp
push
shlb
cmp
or
pop
roll
dec
push
outsb
mov
mov
jno
arpl
dec
data16
lds
xor
mov
addr16
iret
sbb
fnstenv
adc
inc
add
sarb
and
add
outsl
jo
mov
dec
mov
inc
mov
pop
pusha
sub
cltd
and
fcoms
imul
cmp
outsb
sub
jmp
and
sub
movsb
xchg
stos
pop
xchg
or
test
jnp
sub
sub
adc
pop
xchg
xchg
bound
or
xlat
dec
add
rorb
outsb
cmpsl
inc
rclb
sub
mov
stc
jne
inc
pusha
ja
and
les
add
mov
add
add
inc
sub
adc
sub
xchg
popa
mov
adc
adc
add
cmp
dec
inc
dec
adc
icebp
sbb
ret
rclb
jns
sbb
dec
lcall
inc
sbb
jl
cmp
jo
or
push
loope
mov
xor
test
push
sub
xchg
push
fwait
xlat
mov
cmp
push
ja
or
outsl
jne
xor
adc
pop
stos
mov
mov
aad
nop
lea
push
fs
pop
in
dec
push
push
inc
add
dec
add
add
add
add
inc
jmp
or
push
add
push
sahf
pusha
mov
add
add
adc
frstor
sysenter
or
push
push
lahf
sub
fiaddl
or
sub
add
nop
outsl
adcb
or
scas
jmp
mov
fimull
cltd
add
in
jb,pn
loopne
mov
xchg
adc
adc
xchg
mov
imul
dec
xchg
sub
in
add
xor
add
xchg
lock
shlb
inc
sbb
hlt
or
mov
add
add
inc
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
popa
jmp
