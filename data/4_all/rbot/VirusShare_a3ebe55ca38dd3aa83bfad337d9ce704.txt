add
add
add
add
sub
adc
add
push
push
add
add
add
adc
add
adc
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
adc
add
add
add
add
adc
add
and
or
sub
add
cs
jo
arpl
add
nop
or
add
add
aas
add
add
add
pusha
add
loopne
jb
jb
add
add
loopne
add
mov
add
add
add
pusha
add
loopne
cmovp
pop
add
add
.byte
sub
stos
push
or
cmc
cmp
movsb
ja
mov
insl
divl
mov
sub
lods
movsl
xor
cli
je
pop
mov
push
xor
mov
xchg
scas
push
push
lods
adc
cwtl
xchg
rclb
dec
movsl
shlb
ret
rcrb
adc
dec
sub
sahf
xchg
iret
dec
xor
sahf
pop
mov
jns
int3
lret
cmpsl
cld
fcoml
cmc
add
aad
jecxz
dec
addb
cli
sahf
lcall
lea
aad
jle
and
and
outsw
mov
add
pop
cmpsb
ja
scas
mov
jp
cwtl
cmp
rorb
outsb
not
ljmp
pop
cmpsb
add
or
cli
add
xchg
xchg
adc
jge
ret
iret
not
int
rclb
cmp
mov
and
loop
repnz
mov
sti
pusha
sbb
jae
xchg
in
cltd
xor
filds
cmp
mov
pop
in
jmp
xchg
shll
jmp
xlat
xchg
and
popl
dec
or
lock
dec
mov
mov
ficoml
lcall
fwait
stc
imulb
ret
sub
push
xor
lods
pop
add
pusha
dec
pop
xchg
cli
out
or
pop
scas
and
lds
pushf
and
hlt
mov
fnstcw
jecxz
inc
jp
jp
scas
out
sti
es
test
and
jne
sub
out
fld
in
sbb
imul
mov
mov
cwtl
add
nop
sbb
push
das
jmp
and
sub
jo
jmp
in
mov
popf
mov
sahf
ret
dec
ds
xchg
shl
dec
and
mov
in
stos
out
fisttps
sbb
imul
push
into
jg
cmp
jo
sbb
push
push
sti
pop
mov
jo
loope
repz
xor
nop
push
jmp
mov
rolb
pop
movsl
dec
mov
inc
sbbb
push
lret
ja
xchg
test
xchg
cld
inc
mov
mov
pop
xor
and
or
mov
ja
push
imul
jecxz
pop
jb
xor
movsb
lds
cmpsb
push
stos
dec
iret
outsb
and
loopne
pop
rclb
inc
adc
cmp
push
dec
push
out
rorb
out
cmp
cmp
add
fstpt
fildll
mov
rolb
or
jmp
sbb
jne
mov
push
mov
cltd
out
mov
sub
xor
sub
shlb
fwait
enter
movsl
bound
add
xor
inc
mov
or
sub
sahf
clc
xchg
mov
je
imul
negb
xchg
sub
inc
sub
into
sub
ja
mov
and
scas
dec
dec
jge
enter
jne
and
mov
daa
dec
hlt
or
test
outsb
add
xorl
dec
addl
jg
das
ret
int3
subl
icebp
jg
jle
jns
fstps
sub
enter
iret
out
add
sub
inc
ficoml
cmpl
outsb
add
dec
repnz
jg
push
pop
inc
movsl
iret
sub
inc
cld
std
sbb
fwait
xor
mov
loopne
jae
sbb
or
mov
cmpsl
jno
cmp
add
push
inc
les
sub
cmp
stos
fisttpl
sub
xchg
cwtl
mov
out
lds
nop
addl
cmpsb
mov
xchg
add
pop
add
jae
test
sub
data16
mov
iret
js
xor
insb
xchg
nop
inc
add
rcll
mov
je
sti
popa
insl
dec
ret
ret
cwtl
xlat
jno
out
mov
movsl
addr16
test
test
inc
or
cmc
mov
cmpsl
psraw
fistpll
add
nop
mov
sub
sub
add
dec
sub
and
aad
jge
xor
ret
inc
xchg
pusha
add
stc
cmpsb
adc
int
fadd
je
or
xchg
pop
add
out
iret
pushl
int3
xchg
and
lahf
add
xchg
and
ljmp
stc
and
or
xor
pop
lea
and
lea
shlb
mov
out
and
lcall
sbb
ljmp
sub
or
aaa
pushf
mov
or
jmp
xor
ds
leave
pop
bound
hlt
stos
icebp
out
addb
repnz
or
mov
and
dec
fwait
push
loope
push
lods
xor
push
mov
adc
cmp
decb
subl
sbb
dec
jp
fwait
orl
int
out
mov
mov
jae
fiaddl
push
cltd
and
xchg
pop
or
pop
js
lret
cld
mov
shl
dec
pop
cmp
popl
and
xor
xor
test
push
jmp
jge
fbld
in
imull
adcb
push
ss
pop
sbb
push
inc
fs
lods
popf
sub
mov
mov
popa
outsl
jl
or
movhps
sbb
les
push
dec
sub
test
sub
mov
js
cmp
into
in
imul
sub
push
jno
sub
push
inc
cmp
mov
fsubr
loope
cmp
fiadds
pop
leave
fs
mov
movsl
sbbb
test
adc
gs
addr16
push
cmp
lods
adc
jmp
adc
in
pusha
dec
cwtl
out
xchg
popf
sub
imulb
stc
cmc
mov
adc
adc
out
add
js
stc
fcoml
mov
lcall
push
push
mov
and
xchg
clc
or
sub
mov
hlt
outsl
aad
jmp
aam
mov
push
xor
cmpsl
push
cltd
cmpsb
rcrb
jg
iret
ds
sar
leave
jno
push
xor
jbe
push
pop
xchg
idivl
or
fiadds
lret
ret
adcb
add
push
add
les
aas
fstl
vmptrst
mov
sbb
in
scas
sbb
push
xchg
fiaddl
sbb
stos
lcall
int3
pavgb
adc
sbb
lds
xor
mov
push
sbb
imul
jl
adc
add
sbb
and
mov
dec
pushf
scas
or
pop
dec
push
xchg
dec
or
push
mov
outsb
fldcw
mov
test
es
pop
inc
cmp
ljmp
cmp
cld
xchg
or
fcoms
xchg
mov
std
push
jle
stos
push
mov
into
repnz
mov
lcall
sub
imul
dec
pop
lods
jae
pop
lret
mov
test
arpl
jae
sbb
shrb
frstor
in
pusha
shlb
inc
mov
sub
loopne
ficoml
and
ljmp
in
and
push
lods
cmp
mov
xchg
jg
roll
outsb
add
adc
pop
pop
adc
cmp
test
push
out
cmpxchg
ud1
push
lahf
lea
stos
mov
jl
data16
pop
push
cmpsl
std
movsl
dec
xchg
inc
call
jo
sbb
jge
dec
add
ljmp
clc
negl
cmpsb
call
push
stos
test
out
cmpb
mov
mov
mov
testl
xchg
or
clc
stos
dec
loope
jo
pop
bound
hlt
out
lock
stos
adc
pop
push
sti
and
xor
push
ret
dec
mov
out
xor
leave
jnp
fbld
jle
or
jnp
pop
in
jle
mov
or
xor
push
push
popf
outsb
shr
lods
jae
and
xchg
cmc
gs
jb
adc
scas
dec
sti
jno
test
ss
mov
sahf
jg
lcall
mov
push
nop
inc
loopne
data16
in
pop
lock
insb
mov
cmpsl
mov
sub
cmp
jecxz
and
xchg
sub
ss
test
push
sahf
cmp
sub
mulb
fwait
in
mov
adc
outsl
xorb
cld
dec
jns
mov
push
xchg
pop
inc
insb
repz
cmovo
js
mov
or
add
in
inc
stos
mov
out
push
cwtl
pop
stc
fimull
lock
xchg
cmpsb
es
mov
cs
or
sbbb
add
inc
outsb
les
dec
cmp
push
js
or
or
cmp
jl
int
pop
int
fnsave
addr16
sub
ret
and
push
mov
cmp
add
into
popf
mov
sub
mov
cld
dec
or
pop
rolb
ret
ljmp
xchg
push
imul
sti
test
jmp
jae
stc
add
icebp
jnp
push
popa
rorl
sub
mov
mov
adc
scas
or
adc
icebp
jo
jmp
roll
mov
add
push
mov
mov
mov
aad
inc
aam
outsl
mov
or
sub
sub
in
adc
cltd
and
adc
mov
inc
and
test
pusha
out
fidivl
insb
test
jle
inc
dec
imul
mov
je
outsb
sub
jb
scas
out
pop
mov
add
jg
mov
jbe
sbb
or
adc
push
mov
mov
mov
sahf
fidivs
mov
pop
movzbl
xchg
xor
jl
mov
outsb
out
pop
mov
push
int
cmpl
hlt
loopne
mov
mov
test
sbb
cld
or
xchg
sbb
lahf
adc
and
insl
imul
mov
add
das
xor
ds
std
outsl
sub
adc
mov
mov
lods
adc
arpl
leave
inc
push
pusha
fdivr
mov
fisubrl
mov
mov
jl
insb
movsl
repz
inc
xor
and
sbb
or
cmp
cmc
imul
push
mov
push
movswl
dec
iret
cwtl
cmpsl
ret
jmp
mov
ss
cmc
xchg
or
lahf
sbb
cmp
jns
xor
add
cmp
std
rclb
adc
ds
pop
pop
sbb
arpl
dec
inc
mov
cmpsl
je
sbb
or
adc
fisubs
sub
xor
push
mov
pop
movsb
fwait
aam
out
mov
repz
jecxz
in
cmpl
jg
adc
jmp
in
in
jmp
sub
movsb
jae
fcoms
and
lret
jg
inc
outsl
outsb
xchg
mov
adcl
pop
push
test
aaa
xchg
mov
divb
push
sub
mov
jg
aaa
cmc
mov
in
ud2
cs
jne
int
xchg
sub
cli
cmpsb
mov
pop
sbb
fwait
inc
sarb
mov
jbe
fdiv
imul
hlt
out
test
loope
push
repnz
add
sub
pop
inc
aam
jno
mov
test
pusha
mov
adc
mov
std
adc
fistps
inc
mov
fwait
adc
pop
xor
push
jns
xchg
xlat
pop
pop
lea
gs
fcompl
jg
dec
cmovl
inc
movsl
roll
push
pop
mov
sbb
cmp
inc
xor
mov
insb
ljmp
push
push
pop
jg
mov
cmp
jns
push
push
test
push
inc
mov
jns
in
and
xchg
pop
mov
aaa
mov
push
mov
rclb
test
pop
jg
cld
lahf
fldt
xchg
rcll
sahf
add
mov
shll
mov
cmp
sub
sub
scas
stc
jno
xor
jecxz
push
add
inc
inc
in
sub
mov
lea
mov
or
inc
pause
cwtl
jg
adc
jecxz
sbb
xchg
jo
cld
xchg
cmp
xchg
hlt
inc
aad
pop
cwtl
arpl
fucomip
adc
lock
sti
fwait
or
push
xchg
jo
push
mov
push
enter
xchg
jb
jmp
jmp
add
or
shll
push
popa
leave
pusha
ss
lods
pop
push
push
mov
clc
push
xchg
cmc
adc
cmp
jbe
sub
or
and
stos
xchg
leave
mov
fdivl
jmp
pushf
fnstcw
mov
jmp
xchg
mov
in
mov
int3
adc
pop
mov
mov
sub
sarl
xor
jns
push
popa
scas
and
mov
lods
in
imul
shlb
cs
ljmp
pop
xchg
out
ret
stos
xor
notb
sbb
xchg
push
imul
into
cld
aaa
xchg
call
inc
jns
arpl
mov
pop
data16
mov
mov
and
les
data16
or
sbb
inc
repz
aaa
pushf
hlt
out
jg
sarb
sub
jle
incb
or
mov
aam
push
jl
aaa
xor
js
sti
shlb
cs
jbe
dec
xlat
xchg
stos
mov
mov
or
cmp
int
mov
in
mov
mov
cli
shlb
ret
loopne
lea
push
test
out
mov
idivl
mov
pop
xor
or
sbb
subl
adc
daa
adc
packssdw
imul
add
lahf
sarl
jge
add
or
mov
ljmp
mov
pop
sub
inc
jns
call
add
xor
into
lods
hlt
lods
sub
sub
shlb
loope
les
mov
dec
outsb
mov
pop
cli
ja
inc
popa
mov
scas
push
ss
test
cmp
inc
xor
jmp
lret
mov
push
stos
fucom
mov
cmp
adc
imul
cmp
pop
mov
cld
or
jbe
inc
push
loop
nop
inc
shlb
mov
int3
push
ja
add
mov
jg
repnz
call
xchg
mov
cli
xchg
cmpsl
insb
out
dec
xchg
dec
sbb
sbb
jne
jno
push
cwtl
cltd
xlat
jle
es
js,pt
test
call
adc
pop
adc
xor
ja
repz
sbb
aas
dec
push
cmc
jnp
inc
aad
push
sbb
push
mov
cmpsl
push
inc
jbe
std
add
ljmp
adc
lds
lret
int3
insb
mov
arpl
aaa
pop
ss
mov
jle
add
xchg
lock
stos
cli
add
adc
inc
lcall
cmp
mov
sarl
mov
sbb
push
jo
stc
in
xchg
push
mov
push
mov
and
add
sub
and
adc
adc
mov
dec
push
mov
sahf
stc
orb
das
test
add
std
std
cmc
fistpl
leave
sbb
push
add
lcall
movsb
das
mov
out
add
mov
mul
or
inc
fimuls
sub
lahf
inc
sub
shrl
cs
mov
jbe
insl
inc
nop
jne
hlt
iret
jge
xchg
arpl
xor
add
inc
cmp
cmp
cmpb
in
mov
pop
rorl
sub
out
mov
loopne
push
cmpl
jne
cs
int3
loope
sahf
into
stos
push
and
imul
fdivrl
mov
incl
stos
mov
jp
into
add
or
enter
insb
fnstenv
inc
cs
cmc
mov
push
mov
mov
sub
sub
or
test
add
in
scas
sbb
neg
add
ljmp
mov
sbb
and
aaa
lock
sbb
add
xchg
sub
mov
loope
and
rorb
es
in
fistpll
lods
rcrb
push
aad
mov
mov
rcll
xchg
loopne
outsl
test
xor
nop
lods
subb
push
pop
jmp
mov
out
in
push
mov
pop
mov
jl
fmuls
inc
xchg
movsb
sub
pop
push
jle
sub
pop
push
lods
pop
in
sti
aad
lock
push
push
cmpsl
inc
xchg
aaa
push
and
ss
push
ficoml
jg
into
std
sbb
xchg
dec
mov
cs
dec
icebp
cmp
xchg
cmpsl
int3
xor
fdivrl
jo
out
lds
imul
lahf
and
dec
mov
xchg
lahf
mov
and
cmp
nop
push
shlb
mov
jl
gs
mov
stos
stos
xor
outsl
enter
stos
arpl
arpl
xor
out
mov
add
das
add
sub
cmpsl
test
mov
add
test
fidivrs
mov
pop
sbb
xchg
xor
push
add
xor
push
shlb
adc
mov
daa
xchg
mov
sbb
or
stos
adc
fs
pop
cmpsb
mov
nop
ret
in
dec
ret
aad
dec
out
add
stos
cmp
cmpsb
fcomps
mov
call
inc
xchg
xchg
movsl
push
lds
xchg
insl
xchg
jno
stc
test
int
or
ss
dec
outsb
movsb
outsl
mov
xchg
mov
mov
popf
inc
pop
testl
dec
insl
sub
negl
scas
int
xchg
pusha
incl
xchg
mov
dec
push
cmp
mov
stos
into
test
lea
into
mov
out
popa
imul
mov
jae
addb
push
or
mov
mov
inc
add
shlb
int
test
shrb
lret
orl
les
ds
add
xchg
jp
cmp
mov
sub
sub
adc
xchg
cmpsl
outsb
into
cmpsl
inc
push
ja
adc
out
sti
test
jne
mov
stos
add
cltd
pop
dec
loop
aam
das
and
test
add
inc
xchg
loop
mov
or
xor
cmp
jo
inc
mov
mov
jo
iret
push
les
mov
cmc
rolb
in
sbb
jae
insl
hlt
sub
add
push
xor
scas
sub
sti
outsb
rclb
mov
fwait
cmc
pushl
test
and
sbb
xlat
pop
mov
pusha
jne
mov
xchg
in
pinsrw
inc
add
daa
push
out
mov
push
lret
lods
clc
sbb
xchg
cmp
addr16
adc
xchg
push
inc
jne
push
nop
cmpsl
ret
stc
mov
push
inc
popf
lcall
cmc
or
leave
mov
sbb
adc
gs
pop
cltd
sbb
dec
fwait
jb
lret
xor
les
add
in
test
or
or
cmp
test
sub
clc
jae
subb
pusha
int3
dec
xchg
dec
pop
xor
or
test
out
jb
cld
pop
dec
sbb
xor
xor
or
sub
scas
sub
push
push
or
dec
xor
mov
int
imul
and
sahf
push
sti
push
sub
cmpsl
pusha
mov
pop
cwtl
jae
or
orl
jae
js
call
ja
loope
or
push
jo
dec
out
or
std
mov
out
stos
sub
pop
inc
sbb
xorb
sub
fsubrl
jp
sub
adcl
je
test
outsb
repnz
jmp
mov
adc
pop
mov
jecxz
jge
nop
and
sbb
or
out
and
cmp
outsl
data16
xlat
cli
in
mov
mov
iret
push
bound
inc
fdivs
sub
std
aad
cltd
out
cmpsb
pop
cmp
or
push
loopne
sbb
dec
inc
xchg
fs
pop
leave
add
imul
popf
jmp
pop
hlt
mov
xchg
ret
shrl
sub
jne
push
mov
push
jl
push
mov
sbb
ja
mov
cltd
icebp
cld
inc
push
and
push
xchg
dec
clc
xlat
stos
arpl
clc
mov
cmc
sub
dec
xorb
test
xchg
ret
pop
scas
mov
pop
fwait
pusha
leave
or
pop
xor
pop
sub
notl
cmp
push
or
jno
pop
rcll
xor
xchg
repz
sahf
movsl
dec
lahf
test
push
rcrl
aaa
xchg
in
push
ret
cltd
mov
and
loope
add
adcb
mov
or
mov
decb
hlt
mov
insl
ljmp
inc
cltd
sub
sbb
inc
mov
mov
xor
cmpsl
fsubr
repz
or
inc
fisubs
pop
sbb
push
or
pop
mov
xor
dec
test
cmp
cli
sbb
xchg
movsl
cmp
in
jle
mov
xlat
xor
dec
retw
fstps
xor
pushf
shlb
pop
out
jge
push
mov
cltd
sbbb
sub
rolb
bound
mov
aas
jns
fmuls
and
movsl
lret
push
ds
mov
adc
xchg
es
mov
ljmp
jmp
int3
xchg
or
fwait
cmpsl
iret
clc
in
xchg
lods
aad
insl
mov
inc
shll
int3
jge
push
je
das
sbb
aam
stc
loope
rolb
orl
leave
cwtl
insl
sub
mov
jecxz
movb
test
jle
scas
xor
or
mov
mov
int
ja
sbb
fsubrs
notl
pop
adc
jmp
mov
cmp
stos
movsb
sti
rcr
cmp
lock
xor
xor
aaa
pop
push
push
xchg
rcl
push
push
loop
movsb
repz
sub
push
nop
dec
cmc
insb
push
in
in
mov
xlat
and
aas
xchg
ljmp
push
test
test
mov
ss
jno
cltd
pop
push
jge
sahf
sub
push
lods
inc
dec
xchg
or
fmul
mov
cmp
sub
or
push
int3
xchg
loopne
xchg
mov
das
mov
aam
or
dec
outsl
popf
aam
mov
mov
repnz
add
push
sub
lods
fstpt
fadds
xor
push
cmc
out
mov
pop
xchg
and
stc
nop
add
jne
xchg
pop
jnp
adc
sbb
imul
jecxz
mov
xlat
fcoms
repnz
jmp
dec
aaa
add
in
xchg
add
mov
inc
clc
jmp
sbb
hlt
pop
stos
les
and
loope
ja
jne
cwtl
mov
adc
dec
mov
out
mov
mov
clc
ret
pop
lea
sbb
adc
int
or
inc
lea
ljmp
sar
std
jmp
adc
out
int3
inc
sub
cmpsl
or
mov
rol
push
lret
adc
push
andb
or
test
sbb
xor
xlat
mov
ret
insb
bound
sub
jle
iret
sbb
scas
and
xchg
stos
cmp
inc
dec
fisubrs
loope
rclb
pop
cmpsb
inc
and
subb
sbb
push
mov
pushf
add
bound
dec
xor
je
inc
arpl
xchg
fstpt
cmpb
mov
and
fs
mov
inc
sbbl
out
aas
mov
sbb
std
add
aam
add
fdiv
push
jae
sti
jecxz
filds
sbb
xchg
jo
out
add
jmp
icebp
fldl
stos
inc
and
jmp
push
jl
cmp
adc
xchg
add
popf
and
xor
loope
pop
jp
scas
frndint
and
fwait
pop
das
iret
addr16
inc
popf
lahf
les
mov
lods
cld
arpl
mov
test
xchg
iret
mov
fnstcw
inc
push
inc
mov
das
scas
aaa
fsts
repz
aam
imull
jne
pop
lods
xchg
cmp
mov
sub
pop
add
xchg
add
pop
out
xchg
adc
sbb
cmp
ljmp
cmpsl
stos
push
fsubrl
popf
cmc
popf
mov
js
fstl
pop
jl
lods
subb
pop
pop
or
xchg
inc
pop
dec
clc
lret
fsts
dec
pop
pop
cmp
fildll
jne
rcr
dec
xor
xor
push
xlat
jmp
push
inc
mov
adc
cmp
or
imul
lahf
add
sub
ficoms
jmp
mov
dec
int
out
xor
cmpsl
mov
mov
ss
sbb
shlb
fcomps
jle,pt
sub
jecxz
jae
outsb
lret
rorl
inc
jg
and
daa
jle
aad
lods
sub
jns
pop
pop
inc
xchg
shlb
outsl
jne
cmp
pop
clc
push
std
sub
pop
adc
inc
xchg
es
jbe
jg
mov
push
adc
shrb
mov
repnz
les
stos
cli
and
xor
insl
mov
pop
jl
mov
aaa
cmpsb
movsl
jne
mov
stc
and
cmpsl
fs
add
and
cmp
xor
imul
pop
aam
mov
test
sbbb
adc
lock
pop
lea
mov
lock
fsubrp
bound
ljmp
xor
outsl
xor
scas
ja
orb
sub
decl
rcll
sahf
sbb
inc
test
jnp
lahf
movsl
into
idiv
pushl
faddl
or
leave
mov
mov
dec
sub
das
aam
mov
lcall
jb
jb
push
jl
mull
jb
ljmp
divb
jecxz
lcall
stos
adc
pop
jle
pop
iret
ret
arpl
xor
sbb
pop
fwait
pop
or
push
cmpsl
add
movsb
out
mov
jecxz
scas
popa
test
sub
add
jbe
inc
cltd
inc
and
shl
mov
pop
mov
adc
dec
mov
xchg
sub
sub
add
xchg
repnz
adc
and
and
jecxz
push
mov
mov
scas
lods
push
cmp
fisttpl
repnz
xor
in
or
mov
lahf
cmp
shrl
movsb
into
roll
inc
jmp
sub
mov
in
aam
repz
dec
popf
repz
jge
push
cs
jge
popa
jge
lods
popa
mov
mov
sahf
cmpl
mov
and
sbb
sbb
arpl
add
out
fs
jno
inc
jnp
mov
ret
cmp
imul
push
loopne
ret
sub
ss
cmp
mov
pop
rcrb
xor
and
lcall
into
xchg
dec
pop
outsb
pop
xchg
idivb
dec
gs
xchg
mov
mov
inc
repz
lcall
repnz
scas
sbb
shl
mov
pop
cld
xchg
enter
leave
xor
inc
fcomp
mov
pop
pop
xchg
add
loop
dec
das
aas
imul
jo
cmc
insl
nop
ds
dec
aas
lea
dec
mov
loop
xor
ret
out
mov
inc
cmpsl
lods
inc
jb
push
cwtl
dec
inc
test
and
popl
adc
jp
lock
fmulp
aaa
pushf
cmc
cmp
or
mov
ljmp
repnz
and
sbb
xlat
sarb
loope
aaa
push
mov
push
pop
mov
ss
pop
pop
shll
sahf
inc
addr16
outsl
jecxz
bound
add
pop
cmpsb
pop
ljmp
aad
adc
lock
adc
push
mov
leave
mov
mov
adc
loop
repz
addr16
sub
or
sub
sub
push
pop
mov
int3
les
cmp
mov
aas
pop
or
cmpsb
mov
aaa
js
adcb
mov
loop
cs
es
cmp
mov
sub
std
daa
or
cli
into
leave
jns
sub
pushf
es
dec
jbe
fstps
imul
xor
mov
sbbl
bound
sbb
cld
arpl
jg
out
push
test
xchg
mov
jge
addr16
mov
fwait
fwait
mov
addr16
mov
popa
pop
push
jl
hlt
out
insl
xchg
out
mov
mov
jns
shrb
xchg
fldt
xor
and
test
pop
test
clc
push
orb
cmp
jno
aaa
push
sahf
sbb
jb
nop
out
aas
sbb
ljmp
cmp
fistpll
aad
add
and
pop
sbb
jb
xor
orl
dec
lea
rorb
fstps
test
in
les
and
jo
mov
pop
sbb
ficoms
ds
xlat
cmp
inc
cmp
jl
lcall
push
fldt
mov
jb
arpl
scas
arpl
pop
test
xor
mov
pusha
sub
gs
and
mov
xor
pop
in
ja
decl
les
cmp
cli
in
popf
inc
fidivs
les
sti
je
mov
sahf
popa
dec
ja
lods
and
xor
pop
mov
mov
inc
sbb
cwtl
mov
jg,pn
fsts
movsb
idiv
cli
mov
mov
pop
xchg
sub
jmp
sahf
mov
mov
imulb
xlat
jge
cmp
cmp
incl
sub
add
add
sahf
call
repz
repnz
mov
arpl
aad
aam
stos
push
gs
int3
std
lahf
cmp
cmp
testb
lds
sub
xor
sti
pop
adc
push
add
and
cmp
pop
shrl
fidivs
jno
mov
in
inc
scas
jno
xor
jmp
or
loopne
adc
out
push
inc
popa
dec
jmp
das
or
mov
popf
int
fimuls
adc
mov
add
and
add
fistpl
cwtl
pop
arpl
inc
xchg
ljmp
pop
inc
leave
inc
mov
or
lret
int
cmpsl
addl
jae
xchg
filds
sbb
das
popf
cmp
ret
xor
jge
push
out
rcrb
shr
pop
sub
sahf
stc
ja
js
dec
xchg
stc
and
ret
jmp
and
adc
inc
rcr
fisubs
fildll
mov
add
cmp
outsl
ljmp
adcl
call
mov
pop
pop
fs
sbb
lods
push
aaa
int
push
pop
xlat
fmuls
cmp
popa
cmp
or
fucom
aas
ds
notb
xchg
mov
jae
sub
lahf
fisubl
sbb
cmp
ljmp
pop
push
fstpt
jp
mov
inc
stos
jno
test
lahf
xlat
mov
push
xlat
fs
adc
push
and
add
dec
fnstsw
or
outsl
gs
sbb
cmp
mov
scas
leave
dec
and
mov
shr
cmpsb
fldcw
addl
dec
jo
negl
adc
mov
popa
mov
mov
push
mov
adc
fs
ljmp
xlat
iret
pusha
scas
pop
fcomps
std
inc
int
inc
pop
sbb
sub
pop
mov
mov
call
xor
mul
pop
cmp
adc
inc
lods
es
popf
loop
pop
stos
mov
outsl
mov
cwtl
push
push
mov
fucomip
ret
xor
mov
out
addr16
xchg
cmp
mov
cmpsb
das
adc
pop
mov
dec
sbb
pusha
shll
xchg
dec
jne
dec
jl
scas
dec
cmpsl
jo
insl
pushf
add
xchg
jae
andl
dec
mov
movsb
jo
insb
sbb
pop
repz
sub
rorb
mov
insl
fmull
inc
in
insb
dec
and
cltd
inc
lds
jecxz
sti
cli
dec
repz
testb
aas
in
addr16
fnstsw
lods
lcall
cmp
add
jnp
nop
push
out
mov
stc
ret
xchg
data16
lret
push
mov
and
imul
and
adc
mov
or
addr16
inc
loop
push
out
xor
mov
inc
xor
jle
clc
data16
test
mov
or
int3
and
aas
cmc
cld
aam
push
lds
mov
cmpsb
movsl
jo
sbb
lret
ret
and
adc
sbb
mov
gs
push
es
adc
test
and
push
xor
frstor
lret
in
call
jb
or
dec
add
pop
xor
in
inc
stc
mov
adc
arpl
add
push
outsb
lret
loopne
add
insl
dec
enter
mov
in
mov
rcrb
push
push
pop
pop
or
cmpsb
mov
and
dec
jbe
int
shrb
aad
cs
orb
out
pop
cmp
mov
imul
mov
into
xor
pop
or
adc
fwait
xchg
mov
lock
jns
mov
add
fs
xchg
jo
and
xchg
pop
pop
clc
add
push
cmp
mov
lea
shrl
push
mov
pop
xorl
sarb
imul
xchg
jecxz
or
addr16
enter
jbe
pop
jns
add
push
mov
mov
loopne
jnp
rorl
lret
loope
insl
push
scas
in
mov
or
mov
inc
mov
push
call
xor
iret
out
mov
lock
dec
mov
pop
or
jo
adc
pop
and
insb
orb
dec
jl
das
and
in
fcomps
adc
cmp
sbb
hlt
jne
addr16
lcall
add
rcrl
and
scas
xchg
movsl
rclb
xchg
xchg
inc
or
sub
test
jnp
sbb
xchg
fbstp
cmp
aad
test
ficompl
fldt
out
add
xor
dec
cmpsb
xchg
mov
imul
cmc
cmp
jb
lahf
jl
push
test
int3
or
push
out
sbb
jno
rol
push
ret
cmp
sub
xor
sbb
lods
xchg
orl
and
and
repz
pop
stos
sbb
dec
pusha
stc
jp
xor
xchg
rol
fwait
xor
mov
xchg
popa
test
sahf
int3
sarb
pop
cli
insl
xchg
jnp
int3
add
sbb
add
cmp
fidivs
aad
jl
ficoml
rorb
lds
push
lds
jae
inc
insl
xchg
xlat
add
cli
dec
out
aas
adc
xor
push
sahf
sub
adc
loope
cmp
pop
pop
add
inc
jg
ja
pop
imul
inc
sbb
popa
lds
or
push
scas
and
dec
inc
ret
into
mov
xchg
gs
cmpsb
pop
cs
scas
jnp
shll
add
rep
daa
or
cld
or
popf
ja
ja
enter
jmp
and
inc
cmp
dec
mov
lods
mov
lcall
jnp
js
add
fcomip
mov
push
or
sub
fldenv
cli
xchg
test
popa
test
int
cld
mov
add
xlat
pusha
cs
or
out
mov
cmp
and
mov
mov
sub
rorl
push
pop
ret
mov
ljmp
out
jbe
xor
inc
leave
lods
daa
out
jae
js
xchg
into
je
iret
sbb
cwtl
pop
test
sbb
jp
int
loope
fisubrs
mov
sbb
cmpsl
mov
pop
pop
imul
xor
jo
in
cmc
inc
adc
jno
xchg
in
xor
pop
fistps
fildll
insb
pop
xor
add
jno
cmp
ficoml
add
and
cmp
ljmp
daa
pop
pop
fwait
cmp
outsb
ljmp
in
push
push
mov
inc
and
in
adc
push
adc
xlat
sbb
sbb
stc
mov
xchg
mov
xchg
cmp
mov
lods
repz
and
shll
mov
rcll
mov
subb
out
aaa
aad
mov
test
inc
xchg
aad
dec
jo
aam
mov
xchg
movb
in
sub
mov
out
push
xchg
aaa
ds
xor
mov
adc
jb
push
inc
fwait
mov
add
cmpsl
js
dec
add
mov
mov
or
jmp
dec
sub
push
push
pop
aad
dec
mov
mov
adc
test
push
jno
aam
jle
lods
mov
adc
pop
outsb
movsb
jne
pop
fiaddl
mov
cmp
pop
jbe
aas
dec
cmp
cmpsl
stc
jb
test
push
xor
les
adc
mov
iret
jbe
jno
cmp
mov
dec
mov
push
push
pop
xchg
xor
dec
sahf
sub
pop
call
adc
sub
jns
es
lcall
cmp
in
leave
gs
in
in
cwtl
and
dec
sub
ret
jecxz
xchg
fisttps
push
jne
sahf
pop
popa
test
movsl
lock
orl
cmp
jmp
sarb
shll
mov
pop
nop
dec
cmp
ffreep
aad
mov
xor
inc
xor
cwtl
sbb
push
push
out
sub
push
outsb
sub
nop
add
mov
dec
mov
mov
or
bnd
iret
repnz
mov
inc
cmc
es
hlt
push
cmp
daa
popf
push
xchg
xchg
andl
clc
inc
pop
jns
pop
xchg
sub
mov
add
jae
add
ljmp
call
pop
push
inc
jae
shl
mov
popf
leave
add
aaa
dec
pop
inc
sbb
test
cmp
mov
inc
in
pop
rolb
in
fstpt
popa
dec
lods
xchg
jle
push
int
push
wrmsr
inc
inc
or
inc
jo
cmpsb
mov
push
xchg
xchg
sti
popf
jg
adcl
ret
add
xor
lds
dec
dec
pop
notl
inc
jae
js
cwtl
fcmovbe
cmp
test
lock
mov
add
xchg
and
or
push
lock
ja
fisubl
sub
add
fistl
xchg
sbb
fdivs
xchg
add
adc
imul
js
pop
into
jne
pushf
inc
pushf
rcrl
xadd
in
test
mov
sbb
xorl
push
add
lds
adc
cmc
fwait
pop
orb
and
fmuls
or
mov
inc
js
mov
loop
cmpsl
std
jge
mov
addb
nop
stos
sahf
add
push
and
adc
mov
cmp
jp
test
cld
movsl
movsl
or
je
add
std
sbb
jnp
and
xchg
xlat
push
arpl
sub
jmp
cmp
adc
fnstcw
pop
shll
enter
ja
pop
stos
clc
mov
std
js
jb
in
sub
push
jmp
cmp
adc
in
ret
insb
loope
sub
outsb
fisttpl
rcrl
mov
mov
lret
inc
jne
dec
pushf
inc
xor
cld
out
cltd
or
xchg
gs
scas
mov
xorl
pusha
int3
in
aam
xchg
inc
test
jb
jg
xchg
icebp
sub
lods
sahf
adc
dec
adc
or
xor
stos
ss
test
orl
roll
push
out
adcb
sti
nop
dec
ret
clc
xor
push
in
scas
xor
dec
lds
pop
lret
xlat
mov
ss
cltd
push
mov
add
lahf
xchg
and
inc
add
sub
sbb
inc
sub
and
sub
idiv
push
pop
xor
inc
adc
setl
js
pusha
jb
fs
dec
out
aaa
fs
rorl
cmp
cmpsl
stc
mov
pop
sub
jns
pop
jecxz
aas
fcoml
sti
cltd
cmpl
mov
lret
jae
jns
lret
ret
insl
lahf
pop
int3
div
push
mov
icebp
push
int3
cltd
fcoms
mov
cmc
push
inc
sub
push
ss
outsl
inc
loop
lds
or
push
movsb
pop
in
jb
add
out
sub
stos
addr16
or
jecxz
jne
dec
push
aad
xchg
mov
bound
leave
add
daa
ss
stc
add
ss
scas
mov
pop
outsb
mov
pop
jae
adc
and
test
test
outsb
mov
setno
out
movsb
cmp
mov
jl
sti
cmp
inc
cmp
xor
or
and
pop
mov
int3
inc
cmpsb
fwait
and
mov
xchg
add
adc
lods
data16
fdivrl
jp,pn
lock
xor
add
cmp
fs
inc
mov
loope
or
hlt
jl
push
push
or
loope
or
in
inc
inc
mov
mov
cmpsl
fistps
pop
les
inc
pop
push
aad
popa
aad
cmp
rcll
enter
gs
inc
push
ds
fcmovnu
aaa
lods
pop
pop
cmpsb
mov
xchg
pop
mov
imul
ja,pn
scas
jmp
je
adcl
sar
inc
js
cmpsb
lcall
in
leave
ljmp
push
xchg
xor
mov
cmpsl
mov
add
lret
cmpsl
movsl
push
movsb
and
cld
out
call
cmp
xchg
stos
and
jmp
jp
popf
pop
mov
inc
enter
lcall
jno
add
add
lcall
push
stc
in
mov
sub
sbb
jne
stos
jnp
mov
les
decb
adc
xor
cmp
nop
inc
mov
jge
imul
ret
les
cmp
imul
in
or
bound
add
xor
mov
aam
ja
adc
fdivs
mov
bound
ds
push
dec
xor
sub
std
sbb
loop
leave
insb
lcall
mulb
mov
popf
push
cmp
scas
les
das
jo
ljmp
movsb
jb
inc
sbb
dec
dec
lods
add
jno
mov
inc
xchg
mov
cmpb
sbb
aas
xor
int3
xor
shrb
and
cmpsb
orb
push
sti
adc
add
mov
push
mov
roll
or
lds
test
jl
or
mov
mov
inc
je
push
jmp
fwait
orb
sub
cmpsl
fldl
mov
sbb
pop
fisttpll
and
mov
test
jno
pop
cwtl
add
mov
sub
and
test
push
push
popa
fwait
pop
mov
inc
mov
xorl
out
sbb
nop
data16
ret
daa
dec
mov
fists
adc
fldenv
out
mov
js
inc
pop
pusha
pusha
mov
rcl
sbb
pop
sub
in
fnsave
imul
jg
stos
hlt
lea
push
test
ret
inc
ds
lods
mov
out
push
testb
ss
pop
jbe
icebp
loop
les
nop
or
arpl
icebp
loope
es
mov
mov
mov
pop
fwait
lods
out
xchg
push
ret
mov
lods
lret
fsts
enter
jmp
aas
gs
fiadds
mov
cwtl
pop
stc
fnsave
movsb
loopne
jbe
repnz
enter
or
cmpxchg
adc
add
jne
mov
repnz
inc
in
sub
inc
push
inc
out
mov
adc
mov
and
test
rcrl
dec
and
xchg
lds
sub
in
je
cmp
lods
fistpll
xor
inc
xlat
push
les
pop
pop
xchg
aad
or
push
cmp
insb
dec
pop
inc
add
sub
sti
xchg
mov
aad
cmpsl
sub
lock
ljmp
call
cmp
stos
fisubrl
popf
test
sti
popa
or
mov
dec
shr
jge
outsl
xor
adc
xchg
fmuls
pop
adc
ficoms
mov
push
aad
in
rcrb
add
xor
pop
mov
ucomiss
bound
cmp
lods
fidivl
sub
js
mov
in
cmp
inc
adc
push
mov
inc
das
js
xor
bound
push
jnp
insl
jne
pop
clc
shrl
stc
clc
movsb
or
xchg
cli
push
lahf
cld
in
jno
cli
insl
lock
mov
cmp
add
jb
je
lods
cmp
mov
pop
xlat
into
movsl
in
and
xchg
mov
loopne
cwtl
fimull
mov
lcall
add
loopne
imul
pop
mov
or
dec
stos
xor
pop
out
jnp
and
fwait
arpl
pop
mov
sub
stos
xchg
outsb
jno
xchg
mov
clc
movsl
mov
or
xchg
add
lds
aas
mov
addr16
sbb
sbbb
mov
mov
cltd
sub
and
int3
inc
jge
enter
inc
jns
stos
lods
ja
iret
push
stos
add
mov
cmp
pop
iret
outsb
fisubrl
pop
fistpll
cmp
xchg
scas
or
cltd
adc
cli
clc
pop
mov
aas
cmp
adc
mov
jp
or
xchg
mov
adc
insl
fldl2t
js
mov
imulb
jo
into
cmp
je
lock
cltd
lock
push
or
mov
or
les
loopne
jb
das
sub
jmp
rol
push
xorl
jp
mov
imul
aam
xor
jno
cs
ja
ljmp
inc
pop
outsb
sub
andb
out
lahf
lds
test
xchg
imul
ds
cmpsl
dec
adc
in
imul
shll
in
in
add
out
andl
add
sbb
pushf
dec
sbbl
mov
add
cmpsb
andl
pop
cmp
int3
sbb
jle
pop
test
mov
and
xchg
mov
lock
sbb
cmp
or
shll
dec
push
mov
repz
adcb
sahf
mov
fs
inc
jno
sbb
ss
dec
mov
cwtl
ficompl
jno
dec
call
outsl
sub
shl
and
lcall
outsb
cmp
dec
adc
mov
sub
loopne
push
rorb
sbb
lds
push
xchg
adc
mov
int3
fcmove
les
adc
lfence
out
pop
mov
notl
stc
adc
ret
push
cmp
sbb
cmp
push
leave
imul
dec
or
lds
pop
lahf
jne
pop
stc
shl
stc
dec
cmpsl
mov
incb
loope
mov
std
hlt
movsl
ja
daa
clc
add
push
mov
cmp
ffree
jp
inc
out
ror
arpl
ret
jmp
imul
ja
cmpsl
jns
pop
je
pop
fsts
gs
sbb
call
jmp
push
loopw
cmp
sarl
jp
in
fistpll
imul
daa
scas
mov
push
jne
mov
jmp
push
cmp
mov
xor
jmp
or
and
cmp
dec
out
pop
popf
outsl
popa
fmull
xchg
cwtd
push
sar
mov
in
mov
jmp
sbb
mov
sub
mov
add
inc
mov
mov
fdivrl
adcb
mov
jo
lret
jns
inc
js
xchg
mov
mov
cmp
daa
mov
jg
and
imul
push
or
cmp
je
or
cld
cmpl
pop
imul
cmp
mov
repnz
mov
mov
xchg
test
cs
or
les
jle
aaa
inc
and
jnp
idiv
flds
out
and
dec
arpl
push
pop
jg
adc
adc
movsb
jge
in
imul
sub
pop
jl
enter
data16
xchg
sbbl
mov
cwtl
fbld
jp
sub
imul
andl
inc
pop
pop
dec
popf
es
into
lock
pop
test
push
in
xchg
mov
mov
cmp
push
imul
in
push
or
cmp
js
int3
pop
push
mov
test
stc
jbe
clc
clc
dec
xchg
mov
dec
test
mov
pop
sub
clc
xchg
xchg
mov
sub
add
stos
push
add
cmp
jge
xor
jns
mov
movsb
push
loope
jo
xor
jo
aas
lahf
mov
lahf
xlat
shrl
and
fldcw
and
fdivl
jl
sub
pop
mov
mov
pop
push
es
jns
jmp
in
les
or
mov
add
sbb
xchg
punpckhdq
mov
cmc
xorl
jp
sbb
cmp
or
cmpsb
pop
lret
or
popf
cmp
pop
in
icebp
outsl
cmp
push
lea
inc
pop
dec
test
or
data16
test
mov
jp
push
pop
lods
jecxz
outsb
push
std
inc
aas
inc
jb
or
je
adc
ja
es
mov
or
mov
in
div
inc
mov
cmpsb
leave
idivl
pop
rolw
movsb
push
rclb
adc
cmpsl
movsb
add
sbb
fnstcw
mov
pop
jge
sbb
in
sub
fsubrs
outsl
cli
orb
adc
test
jl
push
pop
cmpsl
xor
hlt
cs
lcall
testl
sub
das
jne
and
lock
mov
mov
mov
pop
pop
jecxz
sub
nop
or
jo
sub
test
inc
cmpsl
movsb
andb
insl
add
jle
or
loop
cli
push
aas
push
inc
sub
rcl
pop
and
sbbl
xchg
fdivs
jns
adc
in
or
movsb
mov
sbb
sub
loop
pop
jecxz
in
hlt
push
sbb
leave
jge
icebp
out
inc
rorl
add
fildll
cmp
sar
dec
adc
or
or
or
sub
mov
imull
movq
bound
or
mov
jp
shll
or
push
push
js
xlat
mov
cli
daa
xchg
push
orb
mov
cwtl
loopne
das
and
fdivs
sbbl
mov
rcr
aad
xchg
adc
aam
or
xchg
jb
loopne
xchg
mov
sub
push
pop
adc
loope
cltd
out
sub
lcall
adcl
mov
cmp
rolb
iret
sub
sub
aas
dec
pop
adcb
sbb
rolb
adc
fcoms
pop
orb
jo
add
mov
sbbl
sub
xchg
pop
outsb
adc
push
out
lock
lods
lahf
mov
fwait
jg
bound
ret
push
call
pop
stos
ss
fcoms
ljmp
mov
dec
lds
and
test
mov
and
xor
hlt
into
rorl
mov
sbb
pop
js
add
or
cld
pop
lods
push
repz
and
subb
lods
adc
xchg
jmp
arpl
scas
add
or
test
dec
dec
iret
add
out
mov
test
inc
push
cltd
int3
mov
jmp
loope
fnstsw
or
sahf
cmpsb
push
sbb
lods
fisttps
lea
jne
mov
cmp
ss
xchg
out
test
push
lahf
cmpsb
jmp
es
xchg
pusha
aam
jbe
jle
inc
push
push
mov
and
pop
lret
mov
pop
ljmp
xchg
aas
jae
mov
jae
sub
adc
pop
jecxz
ljmp
pop
nop
test
jbe
hlt
mov
repnz
les
orl
cmpsl
aas
es
icebp
enter
xchg
dec
jl
test
jae
rorb
rcll
test
xchg
sbb
cmpsl
jmp
mov
or
pop
sub
stc
loopne
cmc
bound
gs
pop
mov
push
arpl
xor
popa
jge
add
outsl
xor
cmp
pop
mov
shrb
pop
inc
mov
mov
cmp
movsb
push
int3
jb
inc
and
fidivrl
call
fimuls
mov
stos
in
mov
pushf
xlat
xchg
and
xchg
mov
std
and
cli
outsl
inc
loopne
enter
jmp
mov
ret
cmpb
or
popw
in
out
pop
popw
push
mov
inc
inc
movsl
cmp
jmp
lods
outsl
xchg
rclb
stos
cmp
xor
rcrb
jno
adc
imul
jp
ror
inc
or
into
and
imulb
daa
xchg
push
inc
fsts
lods
std
xor
pop
mov
andl
rclb
jl
enter
pop
sarl
dec
mov
out
jmp
scas
and
sbb
in
mov
and
pop
jb
sahf
xlat
push
xlat
sbb
out
pop
loopew
daa
push
int
rcrl
ud1
sbb
pop
push
xchg
test
lds
negb
jp
xor
cmp
sbb
mov
dec
add
xchg
or
jnp
sbb
cmp
fmuls
mov
pop
scas
xor
sbb
outsb
stos
mov
add
add
sbb
mov
jge
jmp
push
sbb
les
fdivl
cltd
jmp
mulb
cli
loop
and
aam
fildll
adc
sbb
test
lea
scas
jge
out
pusha
aas
xchg
add
mov
or
lods
les
mov
or
in
loopne
push
dec
sub
mov
in
loop
imul
and
sarb
mov
nop
push
in
pop
popa
mov
addr16
mov
or
jp
movsb
cmp
sbb
orl
pop
inc
cmp
and
xor
dec
sbb
clc
jg
jns
dec
fcomps
push
ret
mov
lds
sahf
lret
and
das
jne
fadd
sub
cmp
into
adc
inc
push
addl
addb
add
loopne
mov
out
notb
hlt
sahf
std
jmp
repz
push
popa
inc
xor
dec
or
pusha
outsb
dec
loop
addb
dec
pop
loop
loop
or
daa
ljmp
mov
mov
test
push
idiv
sub
or
jge
add
pop
xor
or
mov
hlt
sbb
aad
dec
je
cmp
inc
notl
mov
cmpsl
aaa
shll
popa
inc
push
mov
sbb
rcr
xchg
sbbb
jmp
pop
popa
jge
test
int
mov
adc
ret
sbb
jnp
imul
sub
sub
negl
add
mov
repnz
pop
divl
mov
nop
popl
or
stos
and
orl
test
pop
jne
shlb
mov
pop
mov
ds
nop
les
mov
jb
fldt
out
mov
inc
mov
pop
out
mov
mov
pop
je
cmpsl
or
loope
adc
xor
mov
stos
test
dec
sbb
inc
js
sahf
pop
ljmp
rorl
cmp
mov
sbb
adc
jle
test
fcmovnbe
xchg
jle
mov
in
jnp,pt
jns
loop
test
andb
push
pop
sub
push
mov
pop
out
push
lock
or
sub
mov
pop
jle
mov
out
mov
cs
rcr
aas
bound
jno
mov
xor
xchg
test
inc
scas
mov
movsl
sti
and
or
cmpb
clc
mov
divl
mov
jp
inc
push
lds
adc
ss
jmp
cmp
ret
rorl
fnstsw
bound
push
cmp
ja
call
sbb
pop
push
mov
add
mov
ss
add
icebp
sbbl
lods
movsb
lcall
outsb
push
and
pop
mov
fidivrl
pop
push
mov
cmpb
dec
xor
imul
lret
pop
in
gs
ret
jb
popa
mov
xchg
sub
sbb
imul
popa
mov
sbb
jl
xor
pop
adc
push
mov
mov
jp
cltd
enter
shl
mov
xor
int
insl
movsl
adc
inc
dec
jle
inc
mov
test
xor
pusha
xchg
mov
ret
cltd
les
or
sub
inc
scas
cltd
and
test
pop
iret
mov
sbb
add
repz
scas
repnz
fwait
and
or
imul
out
pop
push
cmp
jmp
mov
rorb
push
and
jnp
js
sub
push
and
push
and
mov
hlt
jae
scas
imul
xor
push
mov
sub
xchg
push
stc
dec
xchg
data16
hlt
mov
nop
mov
cmp
js
int
aad
xchg
dec
repz
mov
movd
pusha
addr16
aam
xchg
push
push
hlt
jl
aaa
test
xor
popa
dec
cld
cmpsl
or
loop
push
jle
insl
add
int3
dec
or
das
cs
pop
sbb
push
inc
jo
or
sub
pushf
das
jmp
ja
sbb
enter
daa
test
inc
lock
add
lea
rolb
into
pop
xor
les
and
pop
push
or
adcb
nop
mov
inc
push
aad
sub
jle
cmpl
jb
jp
addr16
xchg
shrb
hlt
ret
lods
dec
repz
enter
adc
lods
pop
mov
adc
pushf
push
add
das
movsl
adc
movsl
sbb
cmpb
imul
mov
pushf
dec
jl
in
adc
jb
xchg
inc
adc
mov
xorl
cs
out
sub
mov
and
cmovnp
adc
or
add
shr
push
push
mov
push
jecxz
dec
or
sub
lea
in
fildl
enter
dec
xchg
ss
push
and
mov
arpl
mov
mov
jge
push
lcall
xchg
test
out
jge
cmp
add
push
inc
lcall
xor
mov
mov
jns
and
jg
fdivr
lods
cmpsb
or
insb
pop
mov
popa
cmpb
push
sbb
sti
outsb
jne
pop
popf
push
popa
cmc
inc
ds
std
mov
scas
movsl
jmp
xchg
add
and
jae
push
daa
in
mov
test
xchg
lea
or
dec
push
jno
and
in
bound
jecxz
or
xor
mov
mov
pop
cmp
hlt
or
sbb
and
fmuls
mov
stos
pop
adc
jge
mov
stos
sub
cmpsl
bound
and
mov
sbbl
adc
push
rcll
inc
nop
jne
sub
sub
jae
adc
popf
adc
push
pusha
pop
hlt
out
mov
mov
lret
jbe
jns
dec
out
push
ljmp
mov
xchg
addr16
sbb
stos
stos
sub
imull
push
or
add
xchg
jae
fimuls
or
mov
or
adc
lahf
pusha
cwtl
jmp
inc
adc
rcrb
cwtl
into
popa
xchg
dec
dec
cmp
or
insb
cmp
jp
mov
loope
push
leave
push
movsb
inc
pop
dec
mov
aaa
outsb
fimull
sbb
das
jp
hlt
mov
ficoml
mov
testl
fbld
loopne
jmp
xchg
inc
decb
pop
mov
mov
out
es
stc
fwait
mov
shll
mov
hlt
pop
mull
mov
popf
inc
repz
daa
sub
sbb
xchg
loop
dec
call
xchg
push
inc
dec
lods
push
ljmp
rorl
mov
iret
mov
mov
fs
pop
fs
xchg
sbb
cld
sahf
sti
mov
jns
mov
imul
mov
fwait
dec
adc
dec
outsl
outsl
ss
lahf
es
xchg
call
xchg
mov
pop
cmp
add
out
in
push
lods
push
lock
loop
inc
fcomi
int3
popf
fidivs
inc
jecxz
xchg
and
mov
or
repnz
das
mov
mov
mov
popf
mov
mov
ds
cmp
or
xchg
mov
jmp
les
pop
aaa
pop
pop
mov
xor
cwtl
rorb
popf
jle
cmp
inc
push
mov
push
and
jbe
out
adc
mov
mov
jle
js
xor
pop
add
sbb
fwait
pop
inc
insb
ss
insb
or
testb
aaa
sti
dec
nop
pushf
mov
xor
inc
adc
add
dec
loope
in
pop
and
cwtl
cli
insl
adcb
xlat
push
jbe
jge
cld
mov
mov
mulb
scas
and
loopne
push
aad
xchg
inc
push
lea
pop
sarl
cmp
cs
aam
mov
pop
popa
and
scas
cmp
shrb
cli
pop
mov
cmc
loopne
dec
incl
mov
adc
mov
test
lret
aad
jns
imul
int3
or
pop
int
jbe
out
sub
xchg
jo
jb
and
dec
hlt
in
cmp
mov
dec
jmp
pop
xor
and
xor
or
mov
pop
imul
adc
push
ljmp
out
cmpsl
outsb
mov
dec
jp
adc
and
lea
ret
pop
ret
imull
xor
repnz
cwtl
lods
movsb
or
scas
shll
dec
imul
rol
lds
movsb
test
adc
sbb
hlt
jl
add
pop
fnstcw
add
mov
sub
inc
testl
push
mov
sarl
movsb
xchg
out
sub
ja
sub
and
inc
push
push
stos
imul
pop
pop
fwait
ljmp
movsl
mov
mov
sub
lods
imul
nop
stc
xchg
icebp
jbe
fldcw
cli
push
outsl
mov
jg
jae
imul
lods
outsb
add
jns
pop
lahf
sahf
lret
lds
mov
adc
imulb
sysexit
int3
inc
sahf
sub
mov
push
adcl
mov
popf
mov
mov
outsl
cmpsl
push
push
loope
int3
insb
out
insb
and
jne
mov
jae
cmp
out
lret
inc
into
stos
cmp
andps
sub
adc
cmpb
fdiv
pop
test
mov
int
sub
dec
cmp
mov
pop
dec
ja
shr
mov
push
iret
cmpsl
inc
bnd
jns
enter
jmp
push
inc
lds
mov
in
addr16
test
cs
xlat
loop
push
mov
mov
pop
leave
sub
sahf
mov
mov
sti
sbb
sbb
jl
outsb
fstps
fiaddl
cwtl
imul
in
or
jle
add
pusha
xor
gs
fs
mov
test
xor
dec
out
js
sub
pop
ficomps
push
mov
mov
mov
mov
subl
imul
dec
pop
jae
xor
pushf
arpl
mov
pop
pushf
andb
jbe
add
in
mov
mov
inc
rclb
jns
int
mov
fisttpl
aam
inc
mov
inc
lret
ss
push
divl
inc
jnp
xor
jge
mov
mov
pop
pmullw
and
lcall
pop
push
dec
push
hlt
test
aas
negl
or
xchg
adc
or
and
shlb
push
stc
int
js
push
lock
push
cmc
sub
cltd
fidivrl
push
add
jo
data16
imul
push
and
adc
aad
jno
test
loope
test
scas
idiv
lods
mov
push
cwtl
pop
icebp
repz
or
cld
iret
push
adc
xor
movsb
mov
andl
stos
xor
stc
push
idivb
test
fbstp
cmpsl
adc
mov
mov
jl
fcomps
mov
cmp
mov
sub
and
scas
pop
fnsave
push
inc
xchg
icebp
fwait
pushf
shlb
sub
ret
pushf
xlat
add
imul
pop
mov
xor
out
shrl
nop
jnp
inc
lea
push
inc
mov
push
cld
inc
push
adc
cmp
adc
mov
icebp
loop
pop
jle
sbb
inc
inc
sbb
sti
xor
jg
aad
pop
mov
sbb
xor
mov
adc
cmp
pop
xchg
pushf
outsl
pusha
push
mov
mov
jnp
xor
xchg
jae
jecxz
cli
cmp
mov
adc
mov
add
arpl
ds
or
pop
jle
jo
fldt
leave
ret
popa
and
scas
sub
cltd
mov
fnsave
mov
xor
sub
xchg
jbe
jne
dec
outsl
jae
jne
and
dec
icebp
mov
and
xchg
xor
gs
pop
lret
push
jge
ror
mov
dec
movsl
or
aam
xchg
fucom
hlt
dec
inc
out
lret
xor
pop
jle
sahf
out
dec
add
jnp
dec
adc
or
icebp
or
xchg
hlt
repnz
rcl
pop
jns
mov
push
outsl
popa
mov
test
push
adcl
leave
dec
fldt
pop
xchg
sbb
push
add
dec
insb
xor
push
in
mov
jmp
std
mov
cld
pop
xchg
push
jbe
jne
dec
sbb
and
arpl
pop
and
xor
jne
inc
mov
outsl
mov
xchg
adc
xor
aaa
lds
mov
inc
add
xchg
and
mov
dec
cmpsl
xor
sbb
shrl
dec
or
sub
mov
push
subl
insb
add
and
xorl
sub
cmc
scas
xor
mov
pop
push
mov
lcall
or
add
sbb
or
insb
movaps
jg
xchg
xor
lods
mov
loope
jle
mov
imul
std
jmp
shlb
push
test
sar
inc
or
dec
push
push
nop
sbb
push
add
cmp
dec
cld
mov
dec
loop
pop
movsb
js
lods
mov
cs
gs
decb
and
pusha
inc
pop
ljmp
mov
jno
push
in
movsb
or
xor
jmp
mov
pushf
mov
mov
mov
call
mov
scas
fbld
pop
negl
ret
jecxz
push
repnz
test
mov
push
iret
push
xchg
cli
lods
int
add
cld
sbb
dec
outsl
xlat
std
dec
or
inc
pop
cmc
or
xchg
inc
dec
sub
pop
jo
inc
call
pop
bound
cmp
dec
int
aam
inc
sbb
sbb
imul
sbb
jmp
adcb
jmp
push
ss
sub
mov
jecxz
mov
rclb
daa
dec
add
outsb
shl
sti
add
jge
insb
xchg
fiaddl
and
adc
stc
mov
cmp
jb
leave
push
loope
jno
sti
mov
cwtl
arpl
and
mov
sar
loope
rorl
sub
mov
sub
je
test
popf
shll
lret
or
xorl
mov
cmpsb
test
out
mov
cltd
and
add
clc
pop
dec
sub
pop
mov
inc
mov
add
push
xchg
out
and
imul
mov
push
jl
jno
popa
out
mov
clc
xor
mov
fildll
pushf
add
bound
jns
inc
popf
mov
inc
mov
in
and
cmp
dec
movsl
shll
jne
sbb
xchg
mov
jnp
mov
loopne
dec
flds
stos
pop
mov
imul
adc
adc
mov
mov
mov
scas
mov
mov
test
and
lods
fwait
aad
jl
push
mov
jp
mov
gs
scas
lock
xor
jecxz
pop
add
lahf
shrb
scas
sub
sub
repnz
out
inc
enter
js
aaa
inc
sbb
cmp
xor
in
push
gs
stos
pop
ds
jne
push
arpl
addr16
mov
pusha
xor
sahf
add
add
cwtl
cmp
and
adc
mov
shlb
lods
add
push
and
and
test
adc
loope
adc
fmuls
cwtl
ljmp
mov
fsubrl
mov
xchg
mov
ss
ror
cli
mov
lods
and
xor
xor
mov
movsb
jge
ficompl
push
jge
inc
fucomp
jnp
out
scas
sub
xlat
into
push
cli
push
jne
cmpsb
les
jmp
inc
packssdw
popa
imul
mov
movsl
sub
leave
jo
sbbb
addr16
fisubrs
jbe
loop
and
fisubrs
mov
leave
ja,pt
inc
push
ret
loope
movzwl
call
outsb
repnz
xchg
push
push
jnp
jle
cmp
pop
orb
nop
ljmp
pusha
fisubrs
push
mov
sub
es
jns
mov
sbb
mov
hlt
fiaddl
sub
inc
mov
cli
lds
sarl
mov
pop
loop
dec
test
in
es
inc
andl
cmp
jnp
push
aaa
cli
jns
into
add
insb
outsb
fdivrl
nop
mov
mov
mov
aaa
into
and
sub
pop
jae
rorl
cmp
xor
sbb
and
fsub
test
dec
insb
mov
mov
add
aad
mov
inc
dec
sbb
pop
fdivrp
xlat
xor
mov
in
lock
jnp
sub
adc
xor
cltd
xor
iret
fldcw
push
inc
movsb
jmp
test
out
or
add
and
dec
add
push
sti
icebp
pushf
pop
mov
aaa
sub
inc
lds
cltd
mov
fadds
pop
xor
clc
cmp
mov
xchg
mov
es
sub
imul
in
out
out
sbb
push
jns
inc
and
pop
decl
mov
cmpsb
xchg
rorl
mov
pushf
push
mov
data16
sub
pop
jne
and
int
push
imul
fldl
in
sub
adc
mov
mov
xchg
fcmovnu
push
mov
add
cmp
xchg
mov
jmp
jg
or
repnz
jp
in
mulb
fildll
cmp
jbe
rorb
or
shrb
cltd
mov
add
test
stos
sbb
aad
jl
in
mov
pop
xchg
pop
cmpl
xchg
test
das
adc
mov
clc
add
orb
dec
cmp
es
mov
je
gs
jo
push
fistpl
imul
jbe
mov
push
subl
imul
pop
dec
test
jno
fcomps
int
jno
aas
in
sbb
ja
pop
xor
mov
fldcw
xchg
in
cmpsb
sbb
out
fcoml
aad
mov
inc
inc
ficoms
test
inc
or
jge
dec
repnz
inc
dec
dec
mul
cs
and
and
stos
fs
dec
test
insb
adc
push
add
mov
rcr
or
inc
mov
data16
loope
bound
and
xor
sbb
pop
jmp
test
xor
or
push
sbb
sbb
imul
xor
fs
mov
fistpl
or
mov
pop
xor
xor
cmpsl
cwtl
cltd
out
push
or
sub
jmp
mov
movsl
dec
repnz
and
lcall
or
scas
movlhps
js
repnz
add
dec
push
fistpl
xlat
imul
cmp
sbb
and
adc
sahf
ficomps
add
push
jg
jg
or
or
mov
cmp
sahf
inc
sbb
test
mov
stc
cmc
sbb
ds
aad
mov
jp
lea
cld
enter
daa
cmpsl
imul
ret
dec
mov
call
sub
int
mov
loopne
xchg
xor
out
push
pusha
cmp
adc
inc
inc
sub
xor
fcomi
out
push
pop
stc
push
imul
mov
scas
and
imul
cmp
mov
mov
and
xchg
mov
mov
popl
dec
mov
adc
jbe
cmp
in
aam
out
push
mov
pop
and
mov
xchg
and
push
and
out
clc
enter
sbb
dec
sub
addr16
enter
repnz
test
or
adcl
pop
and
aaa
lods
addl
jle
push
sub
aad
aad
dec
xor
lods
sbb
pushf
jp
fmull
xchg
enter
pop
aaa
cmpsb
xchg
adc
fsubl
mov
add
fwait
xchg
jg
aam
movsb
add
out
mov
cmp
mov
or
das
jle
add
addr16
jl
into
out
inc
dec
pop
add
aam
andb
pop
andl
push
or
push
push
mov
dec
lret
loope
mov
mov
jge
repz
inc
xchg
jnp
xor
call
mov
add
movsb
adc
sub
mov
xchg
dec
popa
adc
in
ss
in
stos
sbb
scas
mov
mov
cmp
mov
hlt
or
lods
mov
inc
ds
jnp
cmc
ss
mov
jae
out
jg
outsl
mov
pop
stos
pushf
imul
out
popa
add
fmul
insb
mov
aas
mov
push
mov
movsl
addr16
sahf
jno
pop
pop
cltd
or
pop
mov
push
jle
mov
mov
roll
xchg
dec
xchg
dec
xor
fimuls
negl
movsl
rorl
push
mov
dec
in
lahf
xor
movsl
adc
insb
pop
ljmp
nop
fsts
xchg
test
or
fsubr
pop
pop
outsl
negb
fcompl
adc
mov
std
stos
mov
or
cli
psubusb
add
dec
cmp
js
enter
int
mov
lret
sbb
xor
mov
pop
dec
stos
lds
sub
aaa
je
jle
jecxz
fs
pop
mov
xchg
mov
xor
movsl
or
lret
pop
cmpsb
sbb
mov
dec
push
xor
sub
jle
hlt
pop
xchg
negb
fists
lcall
lock
xor
cs
and
lods
or
lahf
mov
jl
outsb
sar
adc
sarl
and
push
mov
fwait
and
mov
pop
mov
pop
jp
filds
lret
mov
fidivrl
aam
aad
sub
mov
cmp
push
pusha
mov
jo
shll
stos
fistl
adc
adc
jae
fistpll
pop
jmp
outsl
loopne
or
jmp
jo
fnstcw
xor
cmp
adc
fstpt
inc
movsb
outsb
movsb
xlat
mov
jecxz
into
or
hlt
jo
loope
in
pop
mov
push
jg
mov
sbb
and
xchg
inc
cwtl
arpl
mov
shll
ja
mov
push
pushf
loop
push
test
xor
bound
outsb
or
jmp
dec
sub
pop
aas
subl
fimull
jge
pop
outsb
push
mov
fsts
push
stos
ret
out
cmpsl
jnp
out
stos
iret
jno
push
lcall
pushf
sub
in
daa
lret
in
xor
sbb
in
lods
enter
movsb
adc
adc
adc
and
mov
outsl
pop
je
fcmove
cmp
mov
lret
and
outsl
inc
adc
sbbl
xchg
jns
mov
popf
inc
lea
mov
and
rolb
call
inc
sbb
lods
fbstp
notb
cmp
add
rcrl
jmp
outsl
fistpl
iret
outsb
popa
mov
jno
movsl
outsl
mov
mov
cmp
sbb
ljmp
outsl
mov
cwtl
jle
into
cmpsl
inc
or
sub
dec
sbb
ljmp
adc
pusha
test
fdivrs
pop
popa
jmp
jno
mov
test
loopne
fsts
dec
popa
inc
mov
adc
sub
fldt
iret
clc
das
aad
sbb
out
fdivs
add
daa
fwait
call
pushf
jne
out
xchg
jne
sbb
push
add
je,pn
xchg
xchg
pop
cmpsl
mov
in
sub
xchg
mov
mov
jmp
xlat
or
mov
bound
loope
loop
sti
aam
rorb
rclb
or
sub
or
xor
in
lods
pop
test
sti
inc
scas
push
cmp
test
mov
jge
loopnew
or
shll
dec
inc
xchg
cmp
and
push
aad
adc
fcomps
jb
mov
stos
fcomi
leave
pop
cmp
mov
jl
cmp
mov
nop
bnd
lea
mov
inc
mov
xchg
mov
xor
add
pop
inc
js
out
jns
mov
mov
pop
inc
outsl
ljmp
add
outsl
stc
adc
mull
jb
mov
sbb
push
mov
add
adc
lcall
mov
push
loopne
push
mov
mov
jo
mov
mov
lcall
xor
xor
sub
jb
cmp
mov
xchg
int3
jno
je
ss
pop
lahf
stos
cwtl
adc
mov
into
push
in
mov
lods
push
adc
cmp
cs
enter
insl
lods
xlat
imul
stc
ss
sub
jnp
int3
xchg
xchg
mov
inc
shrb
insl
insl
add
shr
or
adc
cli
jo
sub
push
out
pop
dec
imul
sub
mov
mov
jmp
daa
mov
cmp
mov
scas
roll
pop
push
shrl
aaa
or
rcll
aad
popfw
jle
js
push
lcall
push
popf
jle
adcl
xchg
lds
push
rorb
sub
aas
sti
into
lret
lods
arpl
pusha
push
push
fisttpll
jne
mov
jecxz
movsb
icebp
in
out
mov
mov
icebp
cs
notl
dec
cmpsl
scas
pop
lds
add
daa
inc
orb
enter
out
sbb
xchg
popf
enter
sub
push
xor
sbbb
stc
and
fs
add
push
js
fcmovnu
aam
mov
adc
in
jne
push
dec
pop
paddw
shr
push
stos
inc
mov
inc
pop
lahf
test
ret
fsubrl
aam
or
cli
mov
mov
int3
clc
cmp
shlb
xchg
loope
fsubrl
cmp
inc
lcall
popf
repnz
mov
cmp
int3
mov
sbb
xchg
loopne
inc
mov
pop
cld
out
push
push
popl
xchg
dec
inc
xlat
das
data16
xor
lahf
rolb
inc
sbb
mov
jle
mov
jb
pop
mov
push
lahf
pop
mulb
inc
adc
rcl
shr
inc
js
jnp
test
in
arpl
and
dec
mov
hlt
test
test
lcall
movsb
fmull
mov
and
lods
std
adc
cs
pop
mov
inc
pusha
cmp
mov
mov
cmp
push
sarb
ja
aas
jp
test
call
push
cmc
mov
cli
sub
outsl
mov
adc
in
iret
xor
negb
push
adc
push
call
testb
pop
jb
je
add
lock
out
add
mov
and
xor
js
insb
add
cmp
xor
js
std
sbb
sti
sbb
add
pop
jmp
lds
cli
sub
or
inc
fidivrs
adc
cltd
mov
lahf
push
imul
test
cmpsl
sar
push
mov
int3
lret
aas
sahf
outsl
scas
adc
mov
icebp
mov
sbb
adc
aam
and
ja
addr16
push
in
pop
jb
data16
and
and
jne
xchg
inc
adc
push
adc
jmp
sti
pop
daa
js
shlb
and
push
divb
jbe
dec
test
in
and
popa
xchg
jge
call
jnp
sbbb
mov
push
or
push
push
ja
mov
inc
lods
and
lods
js
xchg
outsl
out
sbb
rol
xor
mov
mov
mov
and
sbb
push
insl
cmp
or
test
xor
jl
sahf
pop
lock
cmpsl
pop
fcomps
sbb
mov
repz
les
adc
ss
dec
pop
or
dec
outsb
arpl
pop
aaa
aas
bound
pop
and
gs
push
mov
or
mov
jmp
sahf
and
jbe
pusha
test
mov
xchg
pop
push
es
dec
repz
adc
cmp
stos
sub
xchg
lods
cld
jmp
pushf
inc
or
bnd
jg
mov
stos
incl
pop
shrl
and
xchg
xchg
je
mov
adc
mov
pop
fwait
sub
adc
inc
pop
jb
xor
loopne
fdivl
sub
lret
std
popf
test
or
xor
je
lock
insb
push
into
clc
inc
nop
das
sbb
mov
jo
pop
xor
cmp
call
mov
xor
dec
in
ds
push
or
test
jae
sbb
cmpsb
push
jl
push
adc
scas
mov
inc
movsb
sbb
xor
mov
push
mov
adc
mov
repnz
sub
sub
in
add
and
mulps
arpl
gs
dec
and
and
test
lods
insb
mov
jge
inc
daa
pop
mov
push
jno
cli
fwait
lea
sbb
aaa
hlt
cmp
test
aaa
lahf
adc
js
sub
xchg
xor
push
rolb
stos
adc
xor
aam
sbb
out
mov
jmp
es
mov
xchg
sub
fnstenv
pop
inc
into
lret
mov
push
and
sub
pop
fbld
fsubrl
dec
pop
aad
test
and
push
add
ss
subl
xor
sbb
ficomps
clc
aad
movsl
pop
into
lret
test
inc
add
inc
shll
jecxz
mov
fwait
les
xor
mov
push
adc
jl
cltd
push
dec
jp
clc
mov
mov
hlt
loop
aam
movsl
mov
icebp
stos
cmc
movsb
mov
rcrl
xchg
mov
inc
xlat
add
mov
out
enter
add
push
icebp
addr16
mov
ror
inc
push
std
pop
out
push
jb
lock
sbbb
mov
add
shl
xchg
push
push
mov
cli
xchg
xchg
std
into
cmp
shlb
testl
scas
leave
add
icebp
push
dec
popa
imul
movl
out
adc
call
jl
cltd
sbb
add
mov
fnsave
popf
mov
imul
rcll
push
and
xorb
cmpsl
rcrb
or
xchg
cld
sbb
insl
jnp
pushf
or
ret
mov
xor
fs
scas
xchg
adcb
rcrb
cmp
dec
or
cmp
xchg
mov
jns
repz
pushf
push
repnz
push
stc
orl
mov
adc
adc
xor
pop
fcoml
fwait
xchg
addr16
mov
mov
sti
ljmp
add
int3
mov
fnstenv
mov
mov
dec
and
pop
and
xor
insb
std
cmpsb
push
pushf
mov
and
jg
out
outsl
daa
movsl
loopne
adc
stc
mov
jp
jnp
cmp
dec
mov
hlt
add
arpl
dec
dec
mov
lahf
mov
cwtl
cmc
or
xchg
stos
rclb
mov
push
dec
mov
lret
lods
loopne
push
jmp
sub
divb
int
mov
mov
insl
das
push
xor
shl
mov
mov
cmp
sbb
adc
add
sbb
mov
mov
aad
cld
rcll
aam
fcmovu
insl
ffreep
aaa
out
jp
sbbl
jecxz
mov
iret
jnp
iret
pop
inc
add
mov
cmc
fldt
cs
frstpm(287
clc
pop
std
repz
and
sbb
cmp
and
push
movsl
push
sbb
jge
adc
mov
aad
insb
out
into
loope
lds
inc
mov
sub
dec
loopne
sbb
mov
mov
and
jle
data16
in
push
add
dec
cmp
and
je
fistpll
fists
and
jnp
push
mov
pop
mov
out
add
repnz
sbb
sub
jle
enter
scas
mov
leave
fcmovnu
in
sub
mov
jecxz
inc
sar
sub
jp
pop
jne
subl
sub
push
ret
cmc
lods
xchg
inc
pushf
add
push
fwait
shrb
mov
mov
cwtl
adc
mov
mov
hlt
add
xor
mov
mov
xchg
push
push
or
add
repnz
in
mov
adc
mov
enter
xor
add
push
in
xchg
stos
in
lcall
sbb
xchg
mov
das
inc
jmp
xor
add
mov
add
adc
test
inc
imul
mov
and
push
mov
add
xchg
into
fsubl
or
or
mov
xor
cmpsl
ret
imul
addr16
pop
mov
test
andl
imul
jo
das
mov
psllw
outsl
add
xchg
xchg
lsl
outsb
aas
push
inc
bts
jns
add
xchg
push
inc
xor
push
jb
lods
mov
enter
mov
fwait
and
shlb
and
inc
cwtl
push
jl
jecxz
inc
lcall
add
adc
test
fsubrl
and
add
jp
adc
out
pop
outsl
pop
popf
and
jne
dec
pop
push
push
subl
dec
dec
bound
decb
jb
pop
inc
ret
push
xor
cmpsb
xchg
lods
or
and
pop
lds
xchg
mov
mov
fimull
cmpsl
mov
push
adcb
lods
mov
arpl
inc
call
lods
pop
push
jg
jge
inc
in
clc
jge
jmp
push
and
aam
adc
add
sub
push
lahf
xor
sub
push
rcrb
lea
jne
mov
add
push
in
lret
push
jge
jbe
lcall
adc
push
outsb
sub
int
jns
mov
gs
pop
out
pop
pop
in
lcall
mov
adc
xchg
in
sbb
mov
out
mov
test
add
inc
or
sub
test
mov
mov
and
or
sub
mov
xor
dec
lods
add
leave
ret
jb
shrl
lds
stos
repnz
mov
push
fmuls
dec
test
pop
lret
cmpsb
cmp
adc
mov
add
cli
sub
bound
and
mov
lea
jo
fstpl
jp
call
adc
dec
je
call
fstl
jns
pop
or
lahf
imul
cmp
jo
sub
shl
jl
arpl
lods
push
cli
addl
sub
and
popf
lds
shll
xchg
jne
jge
pushf
adc
loopne
bnd
xchg
and
cmpsl
push
hlt
mov
iret
xor
mov
imul
out
stc
sbb
jg
mov
loop
and
shrb
mov
subl
arpl
popa
lea
jbe,pn
or
int
ret
mov
mov
inc
mov
mov
fdiv
jbe
dec
out
ss
repnz
or
jle
mov
add
inc
and
pop
sub
push
pop
daa
push
xchg
aas
or
pop
lret
adc
xor
cwtl
pop
lock
mov
out
cmp
clc
mov
nop
add
test
aaa
jne
aaa
pop
cmp
mov
cmp
repz
andl
xchg
xchg
fs
cmpsl
cmp
inc
fsub
mov
adc
fstl
cs
pop
adc
gs
ret
cmc
xor
js
out
insl
cmp
iret
adc
lret
cmp
ja
fcmovbe
imul
sub
dec
sbb
cmp
sub
mov
or
sbb
insb
lock
int
adc
in
mov
lret
ds
add
adc
dec
xchg
mov
mov
mov
adc
pop
popf
out
fnstenv
scas
outsb
dec
pop
pop
fildl
xor
xchg
inc
xchg
and
adc
repnz
lds
xchg
pushf
or
sbb
inc
ficoms
sub
xchg
sub
and
std
in
mov
mov
js
inc
xor
lods
popf
popa
and
test
arpl
lock
into
ret
out
pusha
mov
adc
mov
mov
push
ja
dec
ret
xor
xchg
fdivrp
into
fldenv
icebp
in
sbb
out
sbb
out
jge
sahf
or
mov
loope
jno
shl
add
ret
sbb
test
hlt
pop
repnz
inc
int
dec
xor
cmc
push
add
add
jmp
inc
push
xchg
scas
mov
enter
add
int
or
xorl
mov
push
pop
sbb
popa
push
popf
jno
and
orb
jb
mov
push
mov
test
dec
mov
xor
sbb
daa
xchg
cwtl
adc
adc
popf
cmp
in
in
and
sbb
or
or
clc
or
fwait
ret
iret
dec
cld
idiv
hlt
lods
ja
mov
adc
xchg
arpl
or
push
cli
test
sub
add
loopne
addb
pop
cmp
xor
into
dec
js
jge
mov
je
maxps
pop
rcrl
push
pop
ret
movsb
imul
xchg
push
add
add
push
aaa
push
inc
scas
loope
subb
shlb
arpl
dec
fcoms
jnp
in
jecxz
jb
push
mov
insb
mov
mov
imul
push
imul
andb
sti
gs
outsl
add
pop
push
mov
stos
hlt
dec
cmp
repnz
adc
dec
push
mov
mov
icebp
add
pop
lods
adc
call
cltd
xor
xor
fadds
add
sub
and
not
loope
cmpsl
pop
push
xor
ja
add
fidivs
push
mov
push
mov
and
paddw
jb
dec
add
mov
pop
std
gs
sahf
std
insl
adc
dec
and
rcll
sub
cmp
inc
shlb
flds
xor
mov
jge
dec
and
pusha
add
das
sub
push
fsubrl
add
jnp
mov
jmp
and
push
mov
pop
fistpll
lahf
popf
mov
sbb
sbb
mov
outsl
sti
adc
ds
scas
sar
inc
inc
cmp
outsb
ja
aad
or
mov
fildll
in
inc
mov
stos
adc
cmp
or
mov
out
xrelease
jmp
imull
mov
pop
cmp
push
imul
add
dec
aad
jg
jno
jge
addb
jns
inc
mov
xor
mov
xchg
in
add
mov
jle
lret
sub
hlt
cwtl
sub
sti
sub
sbb
movsl
inc
push
cltd
out
and
xchg
jle
and
lods
or
jae
push
inc
mov
call
aam
out
iret
dec
loopne
out
sahf
mov
jno
mov
call
js
inc
test
pop
into
outsl
mov
stos
xor
xchg
leave
in
ds
out
insl
jo
adc
das
out
inc
xor
scas
and
fcomp
jae
lea
cmpsb
push
dec
into
mov
movsb
rcl
movsl
das
adc
into
cwtl
mov
scas
std
pushl
sub
adc
icebp
ljmp
or
xor
outsl
cmpsl
jbe
sbb
mov
shll
scas
call
or
sub
imull
adc
jo
xor
push
and
add
ds
xchg
adc
test
in
lret
decb
xchg
lcall
pop
pop
xorb
rcrb
cmp
jle
jp
mov
adc
or
fs
push
leave
xor
lcall
jae
es
mov
inc
add
cltd
xor
dec
jnp
mov
outsl
jns
cli
in
mov
sub
cmp
mov
pop
mov
subl
loopne
movsb
xchg
aas
or
dec
and
push
aas
bound
add
or
push
inc
cmp
push
xchg
inc
mull
push
mov
xor
inc
mov
enter
xchg
cs
cwtl
outsb
dec
xchg
jb
outsb
push
and
cmc
dec
xchg
lods
mov
int3
sbb
cltd
inc
aam
dec
mov
or
pop
fidivrl
das
aad
std
pop
das
data16
cltd
xlat
inc
pop
xchg
ret
add
xchg
cmp
mov
pop
inc
adc
xchg
ds
inc
sbb
jnp
aam
repnz
xor
push
xor
mov
cmpsb
mov
movsl
pop
cwtl
jno
cmpsl
ficomps
inc
lret
pushl
push
xchg
push
xor
lret
mov
fcmovnu
div
xor
sbb
outsl
clc
dec
inc
sub
sub
and
cmp
and
jmp
inc
push
jnp
shrb
push
loope
lods
jae
pop
arpl
mov
jae
adc
insb
sar
mov
shlb
sub
mov
sahf
jmp
jmp
sbb
inc
mov
pop
mov
movl
xchg
gs
scas
insl
insl
iret
iret
sbb
sub
out
scas
pop
iret
adc
add
test
push
gs
sbb
imul
jno
cmp
leave
test
inc
lahf
mov
pushf
mov
push
add
pop
movsl
pushf
dec
sub
mov
mov
sbb
sbb
mov
jle
daa
xor
lahf
pop
xor
insb
sub
adc
jo
jmp
adc
imul
dec
adc
insb
jecxz
inc
daa
icebp
push
mov
and
inc
je
aad
push
sbb
sbb
repnz
cmp
adc
ljmp
dec
scas
adc
mov
fcompl
ja
addr16
jl
shrl
lods
aam
jg
sub
popa
pop
jmp
or
inc
adc
call
mov
bound
enter
fidivrs
mov
cmp
int
call
stos
push
dec
fstps
xor
sub
jae
out
fwait
pop
cltd
sbb
add
and
stc
and
jmp
addb
bound
clc
imul
aad
inc
xchg
dec
arpl
fcoml
movsb
aad
fstl
fisttpll
pop
xchg
adc
jo
cmpsl
jb
aas
mov
test
xor
push
outsl
movsb
out
pop
inc
cli
in
ljmp
aas
mov
push
add
popl
pop
xchg
repz
mov
aaa
cli
jo
push
fisttpll
out
subb
adc
push
clc
xchg
into
arpl
clc
inc
mov
or
iret
loopne
sub
add
ret
inc
adc
sub
pop
das
fs
mov
cmpsl
call
loop
fisttps
mov
pop
add
adc
dec
out
inc
sbb
sbb
scas
leave
shll
jle
sbb
xchg
push
cmp
testb
add
jnp
mov
add
dec
xor
popf
aam
in
jmp
fimull
fcmovnbe
inc
in
les
mov
sub
aaa
push
dec
int
mov
push
addr16
js
adc
adc
inc
popa
ja
sti
inc
movsl
inc
push
push
movsb
shr
jno
mov
mov
mov
sub
out
mov
clc
xor
mov
adc
mov
cs
dec
or
xchg
addr16
cmpsl
lods
faddl
xchg
mov
stos
jne
imul
dec
je
mov
mov
dec
jl
xorl
pop
lret
outsb
inc
jae
xor
stc
sub
rorb
and
push
nop
popf
add
lods
mull
jae
push
scas
sub
push
ljmp
aam
cmp
mov
inc
pop
push
xchg
xorb
dec
inc
and
pop
es
mov
das
in
inc
mov
inc
ljmp
xor
sub
testl
leave
shrl
and
insb
mov
add
push
xchg
dec
mov
subb
mov
xor
mov
std
aad
sbb
pop
dec
loope
jne
add
cmc
inc
imul
add
pop
lods
nop
add
out
cli
mov
jbe
inc
and
xchg
jmp
mov
dec
mov
sub
das
xor
dec
flds
in
in
fsubl
xchg
mov
mov
jbe
cltd
jbe
ds
or
adc
mov
in
cmp
mov
lret
stos
mov
mov
sar
iret
mov
cli
mov
push
push
pop
ljmp
gs
scas
push
mov
scas
push
adc
lock
push
dec
clc
outsb
xchg
jns
ret
or
pop
and
or
xchg
mov
arpl
mov
push
rcl
mov
lea
inc
arpl
xchg
cli
test
es
xchg
int3
cmpsb
adc
fs
out
repnz
dec
sbb
cmc
test
add
fiadds
leave
andl
int
cmc
pop
andl
imul
lret
ljmp
daa
and
push
pop
or
aam
push
adc
and
add
enter
dec
in
ret
dec
jns
pop
and
lret
stos
subl
sub
push
push
inc
shr
xor
sbb
scas
imul
push
shr
jg
insl
xchg
and
shrb
ret
test
psubusw
rorb
pop
je
gs
adc
add
mov
mov
aas
xchg
cmp
dec
mov
insb
repnz
mov
in
jl
add
imul
jmp
imul
dec
inc
mov
mov
cwtl
cmpsb
sbb
lea
inc
jp
sahf
fwait
imul
test
mov
je
jnp
popa
jns
cmpsl
mov
dec
lcall
lret
out
insb
mov
add
adc
sti
cli
inc
clc
mov
js
mov
out
jmp
push
push
or
ss
add
je,pn
mov
mov
jne
pop
dec
iret
push
lret
push
inc
mov
addb
aad
fcoml
or
or
add
aad
push
pop
seto
xchg
xchg
mov
cmp
sub
shll
cmpsb
lret
pop
lret
xchg
mov
movsl
and
push
xchg
or
pop
jecxz
test
push
icebp
ljmp
mov
mov
jno,pt
loope
xchg
adc
push
inc
sbb
test
dec
dec
fmulp
push
mov
sbb
mov
mov
fmuls
mov
add
cmpsb
xchg
mov
in
test
cmpsl
sub
stos
cmc
enter
divb
mov
push
push
lds
jae
pop
shll
mov
inc
mov
lahf
xor
outsl
xchg
xor
and
cmp
aaa
imul
popf
inc
pop
cltd
jb
fimull
adc
and
xor
andb
adc
lcall
xchg
mov
add
outsl
idivb
mulb
pop
mov
or
and
pop
inc
mov
scas
mov
dec
fmull
xchg
lret
jecxz
inc
xchg
stc
fadds
insb
outsl
sbb
xor
cli
or
jns
dec
jbe
push
and
mov
or
dec
outsb
add
out
out
pop
ds
mov
inc
out
rorb
cwtl
add
lahf
and
and
xchg
in
ljmp
stos
aas
arpl
dec
cmp
std
into
lods
mov
mov
push
sbb
and
jno
push
pop
push
jno
sub
popf
inc
ss
mov
mov
addr16
and
fs
add
xor
ss
in
mov
loop
fld
stc
or
fwait
add
xor
xchg
ja
in
and
scas
xchg
pop
or
push
push
fisttpll
and
or
add
pop
inc
lahf
sbb
inc
xor
push
insb
mul
xorl
lods
loop
insl
in
push
iret
jne
pop
ror
stos
xchg
and
xlat
shlb
ja
repz
lods
repnz
out
mov
es
es
lods
pop
fmul
das
add
inc
inc
movsb
shll
movhps
adc
adc
or
sti
aaa
push
je
in
xchg
jp
jae
test
inc
pop
ds
mov
dec
xchg
into
fdivl
push
outsl
bound
popf
push
pop
data16
fisubrs
sarl
dec
insb
stos
out
jle
scas
or
sti
vcvtsi2ss
dec
cmp
cmpsl
jmp
add
sub
popf
xchg
sahf
dec
sbb
sbb
sub
into
mov
cmp
ret
repnz
mov
lsl
cmp
push
insl
nop
jns
adc
xlat
stc
mov
out
outsl
mov
xor
add
lea
stos
insl
and
sahf
jg
sbb
mov
aas
rolb
ficomps
or
or
adc
dec
lods
repz
pop
add
aaa
or
sub
push
xor
lret
in
ret
sarb
mov
in
mov
mov
push
lods
jp
repz
pop
stos
jb
pushf
leave
movsl
sbb
sbb
push
xchg
jg
jecxz,pn
int3
ficomps
int
inc
stos
push
mov
in
aaa
movsb
sbb
adc
inc
pop
js
and
rcr
pop
fcmovne
shrl
sbb
shll
sbb
xchg
sub
xchg
jg
xlat
sbb
lret
mov
or
icebp
movsl
dec
push
dec
sub
add
jmp
dec
pop
inc
mov
push
sub
cmp
inc
push
adc
rcll
adc
int
mov
adc
dec
icebp
xlat
inc
hlt
and
jl
jl
subl
ror
popf
mov
loop
or
xor
jae
adc
xor
mov
mov
aam
in
aam
add
or
push
enter
cmp
out
cmp
and
sbb
adc
subl
and
adc
xor
push
cmpsl
cmp
shrb
mov
add
enter
in
je
push
jl
sub
or
jb
add
adc
loopne
pop
sub
mov
es
xchg
subb
xor
out
mov
orb
cmp
jp
xorb
mov
not
movsl
xchg
int3
sbb
mov
stc
dec
out
mov
imul
out
pop
std
sbb
push
in
jbe
aas
adc
mov
gs
outsb
mov
lea
adc
mov
mov
pop
sahf
push
jmp
loopne
mov
pushf
bound
andl
xor
jl
adc
sbb
sub
loope
jbe
out
das
inc
rcrb
ss
test
mov
pop
jp
jmp
mov
loop
repz
leave
or
pop
fsubrs
hlt
mov
cltd
fsubr
and
adc
sub
arpl
in
xchg
push
cmp
or
and
mov
xor
test
fcoml
mov
repnz
inc
movsb
jb
dec
mov
fnstsw
fadd
mov
jnp
dec
sbb
movsl
out
or
xor
aas
icebp
push
mov
insl
xchg
ds
call
or
out
stc
movsb
inc
pop
push
cld
fsubr
sub
cli
cmpl
pushw
add
or
pop
fucomip
es
sub
movsb
inc
cwtl
xor
es
fisttpll
push
aas
rorl
test
dec
pop
lds
jle
arpl
add
test
out
add
push
cmp
call
dec
jne
in
and
rorl
mov
adc
gs
mov
hlt
xchg
add
push
lahf
inc
or
xchg
iret
xor
push
sbb
xchg
xor
sbb
mov
int
cmpl
fsub
adc
sbb
sub
jp
add
or
lock
ja
xchg
fisttpll
sbbb
rorb
cltd
sarl
dec
pusha
lods
push
cmpsb
jp
ja
xor
mov
sarb
fsave
xchg
jmp
mov
sbb
or
xchg
cmp
push
jg
adc
fdivrl
cltd
pop
mov
repnz
lods
loopne
out
cmc
gs
dec
rcl
repz
nop
and
push
adc
jge
sub
loope
setne
test
ret
or
push
mov
sub
mov
mov
mov
fdivrs
aam
cld
add
adcb
jb
cwtl
push
jp
out
lock
or
pop
or
and
jg
iret
pop
adc
fistps
pop
sbb
add
dec
mov
mov
mov
pop
gs
test
or
jg
pushf
jnp
or
adc
jg
pop
dec
pop
scas
sbb
mov
sbb
xchg
jae
cmpsb
mov
sub
cmp
inc
and
test
push
mov
stc
lods
xchg
xchg
sub
xchg
pop
stos
pushf
xchg
mov
cmp
jle
pop
fwait
push
mov
mov
sub
xchg
into
test
lods
leave
ret
lea
xor
or
mov
pop
ret
xor
es
jae
or
adcb
jno
cwtl
jb
jnp
dec
ljmp
pop
mov
int3
add
fnstenv
pop
mov
lret
add
cmpsl
sbb
fidivrl
loopne
dec
cmpsb
xor
push
stc
cmpsl
mov
mov
mov
rol
xor
cmp
loopne
iret
mov
sub
cmp
sbb
lahf
sbb
mov
cmpsb
stos
in
jp
xor
adc
mov
lret
push
fistl
push
fmuls
push
fistpll
xchg
movsl
out
inc
mov
or
inc
mov
mov
mov
pop
xchg
or
mov
push
lea
xchg
xor
mov
loop
sub
xlat
rcrl
xchg
sbb
pop
fmuls
inc
addr16
ds
out
adc
imul
inc
sbb
mov
xchg
sbb
mov
insb
pop
es
iret
xchg
icebp
jmp
popf
push
scas
jb
mov
fisttpll
or
mov
mov
data16
inc
add
xchg
add
push
mov
stos
fs
ljmp
xchg
insb
ret
push
pop
mov
movsl
jae
sti
push
mov
jl
pop
out
sti
out
inc
lcall
lds
xor
jae
repz
or
cmp
push
jmp
sahf
pop
inc
icebp
xchg
je
inc
pop
stos
test
cs
mov
mov
mov
jle
jmp
mov
fstl
rcr
mov
imul
and
test
and
clc
sub
pop
xchg
inc
inc
push
push
cmp
adc
inc
sbb
icebp
mov
push
sub
lds
out
pop
mov
pop
test
lods
or
dec
lret
xor
inc
cmp
sub
mov
jecxz
and
stos
inc
add
repz
jl
adc
jo
setnp
sbb
pusha
lods
push
push
push
dec
mov
ficoms
ret
jae
lods
pop
xchg
mov
push
pop
mov
mov
test
rcrl
mov
fs
lods
movsl
adc
push
sbb
cmp
je
rcrb
lds
out
push
js
push
sub
adc
inc
mov
daa
fidivrl
xor
imul
shrl
out
sti
arpl
ss
mov
inc
stos
in
arpl
les
inc
mov
stc
mov
mov
cmp
xchg
and
mov
stc
jl
fcomip
sbb
inc
fstpt
outsb
mov
inc
mov
jbe
push
mov
pop
nop
add
outsl
sahf
xchg
scas
setbe
xlat
mov
cmp
mov
sbb
lea
mov
aad
int3
aas
addr16
pop
leave
jne
jnp
das
leave
xrelease
lods
dec
dec
cld
pop
int
push
stos
add
jecxz
popf
or
popa
into
mov
add
cld
ljmp
movsb
aas
in
mov
and
ret
lods
dec
movsb
sub
cltd
fildll
adc
mov
mov
sbb
aas
mov
sahf
push
lret
out
push
mov
inc
in
adc
les
inc
inc
push
or
inc
jo
pusha
fcomp
clc
je
stc
pop
icebp
jbe
inc
fucom
insb
push
iret
sbb
pushf
andl
outsb
dec
pop
or
pop
or
cmpsl
xchg
jbe
dec
pop
repnz
testb
xor
push
jns
mov
xchg
dec
sbb
ja
pop
scas
mov
pop
inc
mov
mov
mov
adc
call
ficomps
aaa
dec
das
xchg
mov
popf
cmp
paddb
in
push
std
mov
push
xor
sti
inc
sahf
pop
mov
dec
pop
fs
jl
or
sti
push
inc
outsb
loop
sbb
fs
mov
outsb
pop
push
aad
jp
lea
dec
pop
mov
out
adc
or
hlt
add
scas
clc
iret
rorl
rclb
iret
adc
cli
xchg
cmp
in
add
cmp
es
cs
push
mov
add
sbb
dec
sbb
dec
push
mov
pusha
std
push
mov
dec
or
and
jl
pop
enter
or
inc
or
les
push
inc
xlat
js
push
cmp
fs
gs
push
cmp
pushf
push
xchg
scas
lcall
jo
gs
loopne
or
cli
jecxz
or
cmp
push
std
mov
sti
dec
sti
xor
jmp
mov
dec
mov
int3
xchg
cmpsl
push
jmp
outsl
cmpsl
cltd
popa
movsb
inc
int3
mov
fmul
mov
xchg
jns
mov
rorl
in
pop
iret
cmp
push
sub
fistpl
ret
fwait
or
movsl
dec
pop
pop
pop
push
inc
add
out
fs
addb
pushf
jno
mov
jnp
xor
cmp
pop
dec
and
cwtl
scas
aam
call
or
cmc
xor
cli
pop
addr16
ret
mov
mov
sub
or
shll
cmp
inc
in
out
sbb
cmp
add
and
daa
and
xchg
popa
mov
adc
push
sub
dec
jno
in
aam
stos
fsts
push
out
xchg
push
sub
adc
shrl
xlat
ja
inc
jae
xor
jnp
loopne
mov
lods
xchg
sbb
jle
ret
ds
dec
cvtpi2ps
shll
jp
mov
add
aas
addr16
lods
jmp
mov
lock
sbb
push
sahf
xor
jne
test
push
addb
ret
push
test
sahf
js
mov
fcmovne
les
cmp
in
lcall
inc
dec
in
test
xchg
inc
and
sbb
fcomps
sub
add
jmp
dec
jne
pop
outsl
cli
call
iret
xlat
into
inc
xchg
dec
ret
inc
in
pushf
sbb
pop
or
push
sub
int3
stc
push
mov
xor
pop
dec
lds
push
sbb
lret
xchg
push
loope
mov
addr16
jge
mov
lahf
xor
inc
push
mov
notl
cmpsb
sbb
xchg
lds
mov
mov
addl
dec
scas
cmp
xor
loopne
ss
pop
and
ljmp
pushf
xor
std
xor
sub
push
or
mov
test
sub
leave
and
sbb
sub
mov
mov
fwait
sub
fisubrl
add
loopne
pop
add
cld
lret
pusha
fucomi
in
push
jae
cmp
mov
dec
sbbl
and
imulb
movl
pop
sub
push
xor
fildl
mov
mov
imul
cmpsl
adc
aas
jmp
mov
xor
adc
adc
cmp
adc
pop
in
jne
dec
in
mov
cs
in
ret
sbb
sub
cli
jle
ljmp
adc
ja
js
popa
addb
jge
scas
jo
add
xor
xchg
in
testl
or
test
lock
inc
ficomps
flds
cmp
mov
ret
cli
mov
dec
adc
fistpll
dec
xchg
cwtl
shll
scas
ficompl
int3
or
cwtl
hlt
push
ljmp
sti
inc
fcomps
pushf
adc
aad
enter
cltd
jecxz
sbb
fidivrl
stos
mov
push
mov
in
in
mov
sarb
mov
lock
test
mov
test
ss
adc
sbb
je
cmp
xchg
std
into
sbb
jl
sub
mov
jo
push
repnz
lar
fidivrs
pop
outsl
mov
enter
iret
testl
out
aam
inc
loop
xor
pop
mov
loop
xor
roll
ja
imul
call
mov
in
xchg
pop
jno
xchg
mov
je
stos
arpl
repnz
lods
xchg
sbbl
shrl
cmp
movsb
lret
inc
ja
inc
and
mov
out
lret
jmp
nop
push
add
cmova
or
cltd
adc
inc
inc
nop
jg
aam
inc
mov
lahf
xor
jne
push
adc
cli
jmp
mov
mov
xchg
test
push
sarl
dec
pop
inc
out
adc
pop
fildl
aad
push
mov
dec
es
jae
jb
pop
dec
push
das
sbb
push
jb
add
faddl
dec
xchg
xor
imul
adc
or
jp
cmp
xor
add
rcr
sub
cmp
sbb
mov
pop
xchg
pop
hlt
adc
aas
cs
fstl
test
jae
push
fisttpl
pop
sbb
fmuls
rcrb
sbb
mov
push
mov
push
sbb
cld
jb
repnz
ret
pusha
imul
add
sbb
mov
negb
sbb
xor
mov
cmpsb
lods
arpl
pusha
in
mov
out
mov
loopne
outsb
mov
xchg
add
in
je
enter
xor
mov
lods
out
inc
push
repnz
inc
or
test
outsl
or
popf
xchg
pop
and
jl
dec
test
inc
shll
dec
icebp
mov
mov
jl
sub
aas
fwait
add
test
sub
sbb
addr16
mov
xor
test
add
jp
into
push
std
dec
stc
stc
ss
loope
lock
mov
stos
leave
mov
push
dec
pop
cli
adc
cmp
xor
mov
lods
arpl
mov
out
addr16
mov
bswap
pushf
iret
cmp
inc
mov
pop
add
mov
or
mov
or
inc
leave
cmpsb
push
adc
push
fdivrl
push
pop
sub
test
ds
aad
mov
mov
std
xchg
icebp
sub
mov
push
mov
mov
insb
mov
jns
enter
bound
inc
iret
jbe
xchg
adc
fcmovnbe
pop
icebp
lcall
addr16
shrl
adc
adc
inc
xlat
xor
sbb
leave
pop
push
xor
addl
mov
enter
xorb
mov
pop
cwtl
lea
int3
pop
mov
popf
cmp
lea
outsb
jo
rcrb
add
cmpsl
xchg
int3
sbb
cmp
mov
inc
movsl
and
shr
mov
outsb
xchg
scas
or
push
or
jne
mov
ret
cwtl
fcoml
mov
jns
rdtsc
ljmp
sbb
jo
lds
jno
push
inc
jge
mov
jp
fdiv
jns
pop
stos
and
or
outsb
adc
jno
sub
sbb
push
sub
sub
add
adc
xchg
mov
add
stc
xor
hlt
xlat
push
das
jle
dec
push
subb
inc
push
jp
jb
imul
subb
sahf
out
add
adc
mov
jno
int3
cmc
stc
popa
pop
loope
adc
xchg
popf
ds
rolb
or
mov
test
int
cmp
lods
push
mov
dec
aas
popf
cwtl
adc
ss
jg
cwtl
jno
or
lcall
test
lahf
xor
mov
dec
js
rorl
push
or
loop
adc
or
test
loope
stc
cmpl
cmp
pop
sbb
jo
pmaxsw
inc
gs
and
xchg
les
das
mov
fimull
cmp
and
lret
or
sub
mov
hlt
adc
outsl
aas
imul
add
sbb
dec
sahf
xchg
cmp
vaddss
outsl
sbb
inc
add
enter
test
cmp
dec
orl
pop
sbb
xchg
push
dec
mov
clc
fwait
pop
fcompl
repz
fs
ljmp
adc
jnp
cmp
xor
dec
sbb
lock
sbb
jge
adc
imul
dec
jae
inc
pop
js
mov
jae
mov
jne
dec
daa
addr16
cwtl
jae
and
add
addl
dec
inc
and
cmp
hlt
jmp
subb
in
push
xor
adc
and
push
arpl
in
adc
push
add
aaa
dec
loope
test
push
and
roll
push
out
out
pop
or
insb
icebp
fwait
mov
jge
repz
in
jge
jmp
out
jnp
mov
xchg
test
mov
cmpxchg
mov
pop
sbb
rorb
call
xor
cmp
sbb
es
adc
ficoml
push
insl
dec
cmp
xchg
and
setns
repnz
test
mov
es
cwtl
mov
jmp
ficoms
pop
hlt
stos
dec
add
jl
inc
test
shrb
arpl
mov
les
je
aas
jle
push
call
sti
jae
lcall
adc
xor
aad
hlt
sbb
add
fidivrl
and
xchg
dec
jbe
jb
das
pop
cmpsb
icebp
jbe
adc
jmp
xchg
push
insl
cld
mov
pushf
add
cmp
jecxz
jge
dec
out
push
rcll
and
stc
rclb
gs
push
idivb
popf
je
cmp
xor
mov
dec
bnd
aaa
pop
mov
xor
mov
mov
jl
test
hlt
sbb
dec
jnp
cmp
sar
int3
bnd
mov
sarb
sbb
test
fists
icebp
inc
sarl
mov
mov
ja
das
sahf
insl
mov
dec
dec
mov
jmp
imul
movsl
dec
lds
ror
xchg
test
daa
xchg
ss
pop
aad
pop
adc
cltd
xor
movsl
xor
push
aaa
dec
mov
rorb
test
mov
cmp
pop
cwtl
dec
das
aam
xchg
loopne
mov
sbb
sbb
filds
call
gs
jb
rorl
sbb
inc
and
dec
stos
mov
test
movsb
pop
pop
or
jg
adc
mov
dec
push
repnz
std
into
leave
sbb
imul
mov
jg
mov
loopne
jp
fsubrl
in
cmp
dec
test
cwtl
push
mov
sub
inc
lock
js
sbb
pop
cmp
repz
aam
xor
rcr
inc
je
fucom
pop
push
cs
out
lock
push
cmp
rorl
loopne
inc
repz
test
fnstsw
out
xor
lcall
or
in
lods
add
in
pop
stos
xchg
inc
lahf
cmp
xchg
repnz
or
jb
enter
insl
scas
pop
into
faddl
inc
push
iret
movsb
ss
bound
dec
mov
jns
lahf
jge
andl
xlat
adcl
push
or
or
push
sbb
push
mov
jge
movups
loop
and
sub
inc
sbb
jnp
adc
push
push
add
stc
sub
cmp
ss
pop
mov
outsb
mov
int
out
mov
or
lret
mov
in
clc
mov
mov
pusha
cld
fisubs
std
mov
adc
mov
fidivrl
out
fdivl
mov
cmpb
mov
mov
cwtl
or
je
arpl
xor
sub
mov
add
inc
in
pop
and
mov
fs
jl
shlb
jmp
pop
je
adc
lcall
mov
insl
and
push
iret
add
xor
sbb
out
inc
mov
adc
push
es
mov
fcoms
jnp
scas
or
cmp
mov
xchg
dec
cmp
and
movsb
or
jne
jg,pt
push
mov
insl
int3
js
cs
repz
cmc
test
stos
mov
lret
popf
enter
push
sub
mov
and
add
fcmovnb
in
mov
loope
insb
enter
dec
xor
inc
or
jg
push
add
xor
adc
insb
rorl
mov
popa
fistpll
adc
jns
fnstcw
cmp
mov
ss
or
adcl
lret
movsb
lahf
sbb
dec
movsb
cltd
leave
stos
movsb
ret
lods
popf
or
mov
js
pop
jge
sub
fisubl
mov
fdivl
mov
pop
xor
shrb
mov
adc
push
and
repnz
mov
ja
xchg
fnstcw
pushf
aas
ds
fisubrs
xlat
cwtl
jae
jmp
push
adc
lcall
ret
dec
push
pushf
inc
lods
std
or
and
scas
test
adc
adc
and
gs
pop
stos
xchg
xor
dec
into
or
movsl
lds
sub
jo
jns
scas
xor
icebp
rcr
sub
and
add
test
sahf
sti
mov
pop
out
int3
icebp
repz
pop
sbb
inc
cltd
and
es
sbbb
mov
jb
fistpl
stc
test
jge
sub
imul
popf
jnp
nop
fcomps
pop
leave
xor
inc
imul
push
sub
and
and
int
mov
adc
jecxz
fnstsw
inc
push
iret
sbb
cmpsb
cmp
mov
xor
andl
mov
mov
jno
test
pop
lods
std
cmc
mov
and
push
add
cmp
jmp
call
mov
fcmovne
out
and
pop
loope
mov
add
mulb
adc
fnstenv
jb
popf
mov
jne
fldcw
negl
fistps
xchg
xchg
mov
popa
or
icebp
notb
lret
dec
hlt
je
enter
dec
inc
icebp
mov
jecxz
imul
sbb
push
fldl
or
dec
outsb
sbb
pop
push
ljmp
sub
adc
sub
filds
stos
push
pop
push
pop
icebp
adc
add
ja
cmc
out
adc
pop
scas
ret
rol
cmp
sti
jne
jno
pop
lret
pop
insl
pop
enter
addr16
cmpsl
loope
mov
xor
repnz
add
hlt
popf
adc
iret
js
xchg
aad
xor
add
fstpt
in
dec
dec
pushf
mov
subl
and
mov
sub
adc
cmp
pop
lahf
adc
fiadds
adc
inc
pop
les
addr16
add
jne
xor
into
adc
sti
fs
mov
jp
lret
inc
arpl
pop
cmp
insl
insl
sbb
int
mov
int3
mov
scas
xchg
les
adc
add
pop
popa
cld
mov
add
mov
lahf
sbb
shrb
xor
fdivs
mov
aas
lods
pop
cmp
mov
mov
movsb
setnp
pop
pop
test
cltd
outsb
stc
dec
aam
push
lret
pusha
xchg
push
cmp
je
cmc
mov
divb
dec
or
out
pop
fistps
sub
mov
out
xor
xchg
xchg
xor
insl
fists
outsl
lds
fiadds
mov
or
and
imul
out
sbb
push
mov
flds
imul
pop
lods
adc
loop
jmp
mov
cmpsl
pop
or
cmp
push
push
mov
dec
pop
cmp
or
shlb
ds
pop
xor
jb
leave
adc
or
xchg
inc
jl
adc
and
lcall
and
jp
cli
xchg
mov
mov
jecxz
jle
test
mulb
out
stos
jge
cmp
sbb
cld
or
and
push
cwtl
xchg
add
add
int
enter
add
mov
mov
xchg
cmpsb
mov
pop
inc
pop
movsl
add
ljmp
cmp
sbb
cmp
imul
out
les
jbe
jp,pt
out
push
dec
outsl
shl
popa
cmpsb
jmp
movsl
sahf
inc
xchg
mov
out
shlb
ret
mov
iret
lret
mov
pop
adc
dec
scas
std
shll
sub
lfs
sahf
dec
push
in
cltd
clc
mul
lahf
fwait
lods
cli
adc
push
mov
fwait
fs
or
test
mov
pop
scas
jp
rorl
sti
fdiv
out
adc
sub
inc
movsb
das
mov
and
stos
pop
pop
jne
lahf
pop
push
out
clc
div
cmp
and
pop
je
xor
pop
fucom
cmpsb
outsl
xor
or
cmp
daa
xchg
pop
lahf
and
movb
adc
mov
inc
xchg
mov
enter
outsb
loope
aam
arpl
cwtl
rorb
jb
push
mov
jle
push
clc
outsl
pop
push
ljmp
test
dec
mov
jmp
and
cmpsb
cld
push
jp
mov
mov
mov
scas
in
notl
sub
hlt
sti
push
push
adc
es
or
aad
mov
fs
mov
xchg
fwait
adcl
lods
sub
sub
lock
cltd
dec
fs
jecxz
jp
cmpsb
mov
lret
jb
ja
cmp
jno
arpl
ss
fucomp
fildll
hlt
adc
pop
aam
or
clc
push
xor
popf
mov
dec
xor
mov
inc
hlt
add
pop
lahf
shll
in
push
or
push
cmp
cmpb
mov
mov
cltd
mov
jbe
push
pop
fs
shll
fimull
mov
stos
jbe
jl
inc
jecxz
mov
mov
xchg
movl
dec
lahf
jo
js
mov
jmp
and
pop
imul
xchg
mov
mov
arpl
pop
adc
push
or
mov
fdivrs
subl
cmpl
iret
pusha
pop
jae
movsb
cmp
cmp
cmp
adc
inc
flds
pushf
push
adc
es
inc
pushf
js
loope
hlt
sbb
cmp
mov
mov
or
pop
cwtl
or
cld
dec
subl
adc
cli
sti
xchg
fcmovnbe
or
adc
das
mov
pushf
mov
in
subl
enter
fmuls
push
rorb
ljmp
adc
loope
inc
or
or
cmpsb
xor
sub
add
pop
fistpll
call
std
mov
jp
mov
xlat
sub
out
adc
and
inc
or
dec
mov
xchg
rcll
push
fstpl
xor
sbb
jl
icebp
adc
or
cmpsb
jmp
sbb
jle
push
daa
into
iret
jp
push
test
fsubrs
inc
aas
scas
je
std
and
add
sti
aaa
lea
mov
cmp
jl
xor
push
dec
int
fs
mov
mov
mov
pop
popa
or
xchg
ja
add
in
mov
and
mov
jle
mov
js
sbb
fwait
jb
hlt
and
jmp
aaa
mov
fs
xchg
lea
and
mov
scas
and
or
or
aaa
hlt
sub
andl
inc
mov
popa
push
jae
xor
add
inc
mov
popl
out
fbstp
dec
adc
ret
xchg
fwait
pop
out
ja
das
push
push
sbb
pop
fwait
movsl
push
cmpl
push
popf
xchg
mov
sti
out
sub
inc
stc
test
push
dec
inc
dec
ds
mov
fstps
ret
lods
xor
inc
cmp
fbld
lret
fcmovnb
out
mov
xchg
lahf
xchg
aas
aam
add
inc
into
in
and
lea
and
rolb
or
cmpsb
xor
bound
js
pop
popf
mov
and
sbb
sar
out
xor
mov
xchg
mov
adc
fisubl
rcl
stos
jecxz
fldt
scas
mov
pop
fwait
sub
xlat
mov
inc
dec
push
jl
mov
pop
sbb
outsl
lods
scas
xor
jecxz
mov
sbb
xchg
mov
stos
loop
push
dec
inc
out
int
imul
or
mov
push
lds
sub
ret
imul
and
std
or
divb
jae
sbb
push
test
cwtl
test
ret
lds
lret
push
push
adc
dec
fdivrs
dec
cltd
add
pop
jnp
adc
arpl
popa
jbe
fisttps
xor
lods
pop
mov
xchg
mov
in
nop
jb
pop
mov
testl
stc
scas
add
or
add
pop
pop
pop
insl
lods
out
sbbl
push
addr16
das
xchg
loope
mov
stc
cmp
add
lcall
in
cmp
mov
std
sub
cs
sarb
cltd
xor
jle
and
mov
pop
out
addr16
push
and
mov
popf
out
pop
call
xor
adc
std
je
cmc
xchg
mov
xor
lods
pop
mov
addl
or
sub
jae
push
out
xorl
leave
shl
mov
jmp
addl
pop
out
xchg
jo
bound
lcall
incl
pop
jne
xchg
arpl
cvtps2pd
push
in
mov
mov
add
gs
scas
aam
mov
push
popf
pop
psrlw
adc
adc
ret
xchg
push
int3
dec
push
jb
orl
popa
aam
shrl
jle
and
testb
es
notl
pop
stc
clc
into
or
xchg
sub
and
or
or
iret
in
and
mov
xor
lods
inc
adc
ret
aad
and
loop
cmpsl
adc
test
and
jbe
mov
dec
in
mov
xchg
loope
dec
cltd
scas
addb
je
fnstsw
sarb
loopne
icebp
daa
pop
pop
les
in
lcall
pop
adc
and
xchg
pop
or
addr16
xchg
jb
inc
sub
pop
and
and
in
ja
push
lods
ret
scas
jo
pop
out
and
xchg
adc
pop
orl
jnp
outsl
ss
adc
jge
in
aaa
fnsave
jno
mov
cmpsb
sti
aas
ja
mov
nop
js
mov
adc
jecxz
pop
push
cmp
pushf
loop
cmp
call
sub
xor
inc
mov
mov
xchg
push
aad
bound
leave
pop
sbbl
adc
pop
pop
xor
sub
or
or
popa
dec
and
xor
in
dec
jge
leave
dec
cmp
add
es
mov
orl
pop
js
test
add
xchg
and
mov
fdivl
aaa
jbe
mov
fldt
pusha
sub
insb
sbb
add
in
mov
movsb
out
mov
and
or
inc
mov
in
lret
cmp
les
andl
and
mov
mov
sbb
push
xor
mov
fs
ffreep
add
fisttpll
xchg
mov
lret
lahf
mov
movsb
xor
jle
cmpsb
repnz
inc
xor
loop
in
and
push
jbe
scas
xchg
pop
mov
add
sbb
dec
cwtl
mov
push
out
insl
repnz
xor
rcrl
scas
mov
mov
popa
fcoml
in
iret
sbbb
inc
and
sub
loopne
mov
mov
jecxz
xorl
cs
imul
ds
cmpsl
orb
dec
outsb
push
xchg
inc
mov
add
xchg
and
add
outsb
data16
and
xor
dec
shl
out
lock
jo
jge
jbe
mov
xlat
int
adc
add
shlb
mov
das
dec
ret
jae
lcall
add
fnstenv
fistps
adc
je
dec
and
popf
rorb
lods
adc
add
jg
sub
cli
and
mov
shrb
mov
pop
bound
pop
iret
mov
cmpsb
ljmp
dec
pop
aaa
paddusw
pop
stos
adc
mov
fnstenv
mov
lret
in
and
ret
ja
pop
jg
test
push
insb
jge
xor
leave
xchg
shlb
mov
shrb
inc
sub
cmp
scas
pop
loopne
lock
mov
popa
jb
jbe
pop
inc
call
in
xchg
add
sbb
lea
xchg
jns
test
add
pop
cs
outsb
or
stc
fisubs
sub
xchg
out
xor
fstpl
rcrl
imull
hlt
fs
xchg
test
test
and
ret
mov
push
clc
test
jno
push
xchg
test
cmp
ret
jns
cld
stc
testb
xchg
in
mov
xchg
xor
mov
adc
lods
enter
stos
lock
cmc
aas
pop
mov
lcall
jecxz
add
pop
ret
cmp
push
ror
or
mov
mov
shl
lds
inc
je
xor
loopne
jmp
lret
fisubl
jno
aam
xor
or
add
in
and
cmp
mov
sbb
subb
xor
sub
inc
mov
fmull
push
dec
push
orb
or
pushf
push
pop
mov
fcmove
nop
push
push
jge
fstps
iret
movsb
push
inc
xor
push
mov
rorb
shl
ret
xchg
fdivs
pop
in
pop
mov
mov
pop
jae
dec
xor
pop
pop
cmpsb
out
negb
outsl
aad
mulb
nop
dec
xchg
add
or
dec
ljmp
mov
out
or
lret
add
sbb
inc
sub
lea
jmp
popa
mov
jno
cld
ss
inc
jl
scas
pop
out
inc
jmp
test
movsb
incb
dec
lahf
adc
scas
cmp
mov
add
loope
dec
push
xchg
pop
xchg
mov
mov
pop
sub
inc
fimuls
bound
xor
stos
sti
jns
cmpsl
insb
mov
cwtl
fadds
leave
inc
mov
xor
addr16
ret
pop
and
decb
imul
adc
ss
cwtd
fldl
loop
aam
xchg
or
outsb
into
adc
xchg
and
sub
mov
lds
shlb
ds
int3
and
mov
test
mov
add
movsl
jge
or
aam
test
inc
stos
icebp
xor
jg
cmpsb
mov
stos
mov
mov
fs
out
out
loopne
push
xor
mov
xor
out
hlt
test
fildll
jbe
adc
ret
push
mov
idivb
test
sbb
mov
pop
add
mov
addr16
in
jne
outsl
rcll
ljmp
mov
push
int
je
push
pop
dec
cmp
mov
push
xor
add
xchg
aas
mov
mov
cmc
add
enter
xchg
add
ret
sahf
sbbl
mov
adc
push
lcall
leave
push
fwait
cmc
jae
aas
and
push
rcll
push
jns
dec
xchg
fstpl
jle
adc
push
or
xor
scas
cwtl
jl
insl
adc
xchg
push
add
or
pop
in
arpl
cmc
data16
ret
dec
or
in
in
mov
push
loopne
dec
or
rorl
xchg
xchg
pop
lret
adc
add
adc
popf
clc
dec
push
int3
in
cmp
xor
push
adc
jbe
rorb
mov
dec
ret
fdivrs
data16
loope
bound
xchg
xchg
dec
adc
iret
push
xorb
les
xor
mov
sub
int3
leave
xchg
xor
leave
in
mov
in
cwtl
jg
roll
lcall
stos
sbb
adc
lock
xchg
adc
push
pop
and
fstl
or
push
out
cmp
mov
lcall
aaa
insb
cmc
xchg
movsl
add
mov
cmp
and
add
cmc
or
and
dec
dec
mov
cmp
and
fsubs
mov
push
in
rorb
jbe
vmptrld
push
movsl
pop
out
and
mov
xchg
jne
mov
popa
into
ret
rol
mov
dec
sti
xchg
int3
out
push
cwtl
frstor
and
xchg
add
jae
push
push
and
daa
dec
push
inc
lds
mov
xor
lods
clc
lahf
jmp
xchg
xor
xor
cmp
cmpsl
rcrb
shrl
outsl
xchg
imul
mov
bound
nop
repnz
push
dec
mov
pop
jbe
jae
add
cmp
sub
sarb
mov
push
inc
movsl
loope
sbb
mov
stos
enter
fsubs
popf
xchg
test
pop
mov
inc
dec
jg
ret
fcmovnb
mov
int
cli
mov
add
test
xor
mov
inc
push
jno
sbb
sbb
sbb
pop
je
sub
mov
xchg
jle
sub
rcrb
mov
add
add
inc
std
inc
dec
lret
xchg
xor
mov
int3
jl
imul
or
call
std
shlb
cli
mov
fdivl
in
les
push
jno
pushf
lods
dec
mov
jg
orl
rorl
push
xor
add
mov
add
cmp
lret
in
imul
pop
in
stc
arpl
in
nop
repz
pop
inc
cs
or
shlb
into
iret
lahf
jp
sarl
dec
into
pop
cli
dec
stos
nop
jb
xchg
dec
sbbl
pop
pop
pop
lcall
movsl
and
and
das
and
std
std
leave
inc
push
push
rorl
in
adcl
cmp
fsubs
push
arpl
in
mov
mov
ja
test
push
fwait
or
and
mov
jbe
inc
ret
stc
mov
dec
jns
jecxz
addr16
pop
xor
pop
mov
addl
pmullw
test
or
jmp
push
jle
ss
ret
pop
cmp
push
xchg
ds
push
clc
mov
pextrw
mov
dec
outsb
inc
pop
inc
sub
imul
shr
gs
jb
and
mov
xchg
mov
pop
pop
mov
and
in
js
cmpsb
out
fisttpll
cmp
push
dec
fnstcw
enter
lcall
xchg
lret
cmp
xchg
roll
test
sub
xchg
data16
es
loope
movsb
imul
jle
cli
pop
xor
daa
ja
shrb
jno
mov
jp
in
xchg
in
and
push
test
xchg
addr16
mov
ret
mov
rcrb
or
test
sti
fcompl
pop
mov
pop
sub
sub
mov
xchg
adc
adcb
pop
cmpsl
lock
pushf
sbb
pop
jnp
addl
rep
jno
arpl
mov
push
xchg
mov
push
jbe
dec
sub
shll
push
sub
or
andb
pop
push
add
sub
leave
mov
lds
test
test
sbb
cmp
test
aad
popf
out
cmp
notl
inc
jae
ss
rclb
jecxz
xor
aas
movsl
push
mov
out
sub
inc
in
hlt
jge
movsl
mov
or
adc
ljmp
aad
out
mov
or
cmp
popf
pop
in
das
jp
push
or
in
jecxz
add
loop
cmp
adc
ja
cmpsl
loope
mov
stos
and
dec
mov
mov
push
lret
mov
or
or
fnstsw
xor
or
jl
adc
scas
outsl
add
cwtl
add
jle
js
jnp
arpl
cmp
add
cmp
mov
xchg
inc
int
add
xchg
cmp
inc
fnsave
adc
ret
pop
rcr
push
xor
std
pop
inc
sub
aas
popa
adc
adc
xlat
cwtl
test
in
sbb
imul
shl
mov
dec
mov
div
push
aam
cmp
imul
inc
std
fldcw
dec
aad
xchg
int3
mov
cwtl
xchg
mov
dec
push
or
push
dec
sub
imul
jbe
dec
or
repnz
insb
hlt
pop
push
xor
lcall
and
or
jle
push
xchg
mov
sti
add
fistl
mov
push
push
push
js
sub
popa
push
inc
mov
arpl
jmp
mov
loop
adc
test
and
in
jnp
adc
or
jp
data16
sub
loopne
add
xchg
adc
xchg
jg
pop
aad
dec
sbb
ds
pop
dec
js
pop
xor
and
inc
in
or
int
push
fidivs
ret
aas
ja
adc
sbb
mov
sub
jle
cwtl
adc
mov
dec
insb
out
adc
mov
xchg
in
sub
xor
bound
sub
xchg
fsubr
mov
fstpl
insl
xor
and
pop
sub
insl
cmp
fsubrs
jg
xor
aaa
or
and
jae
out
sbb
pushf
push
das
aas
pusha
jge
int3
inc
stc
fdivl
lock
or
movsl
adc
push
jno
ret
push
add
mov
or
mov
push
lods
lods
pop
sbb
or
push
xchg
imul
rep
mov
jns
push
stos
xchg
dec
mov
out
rorb
or
call
je
dec
cs
aad
adc
cwtl
aam
inc
and
mov
inc
xchg
and
aaa
rcll
lcall
popf
loopne
xchg
jle
scas
or
xor
push
fidivrs
stos
int3
push
xchg
std
fistps
rorb
cwtl
aad
popa
adc
xlat
dec
inc
sub
rolb
and
sbb
repz
or
fmuls
sahf
or
and
cmc
sub
jl
cmc
loop
fs
fidivrs
fsub
aas
jbe
sbb
leave
jp
sub
and
fnsave
push
stos
icebp
pushf
aas
xchg
sub
fs
fidivrs
xchg
cmp
test
fnstenv
push
mov
mov
and
jle
mov
fcoms
push
or
call
dec
mov
mov
sbb
adc
cvtps2pi
ljmp
lret
sbb
adc
xor
inc
roll
pusha
push
iret
cmpl
icebp
movsl
dec
mov
dec
pop
add
push
adc
push
outsb
push
jl
mov
push
fists
xor
ret
cmpsb
icebp
popa
outsb
cmp
out
add
lahf
mov
jl
rorl
inc
and
xlat
fwait
push
movsl
cmp
pop
sub
cmc
mov
dec
cmp
mov
pop
jecxz
add
xchg
das
repnz
out
pop
mov
fcomps
inc
js
xchg
call
mov
xchg
out
pop
add
mov
rcl
lods
mov
pop
pushf
popa
mov
mov
mov
inc
cs
push
test
stos
dec
int3
loopne
or
lar
jb
call
adc
sub
jne
pmuludq
lret
cs
filds
mov
jl
mov
repnz
cmpsb
aaa
pop
pop
sub
das
imul
aas
and
enter
pushf
cmp
mov
dec
and
out
enter
push
sbb
sti
pop
out
add
add
sbb
lcall
inc
push
mov
inc
mov
lock
clc
nop
pop
and
jle
nop
sub
xchg
vcvtpd2dq
pop
test
xor
pushf
cmpsl
inc
addr16
jg
push
dec
int3
mov
sub
out
aaa
pusha
push
lock
push
int
mov
cltd
int3
rcrl
mov
or
sbb
repz
adc
push
mov
jmp
call
cmp
adc
data16
data16
jle
pop
lods
movsl
icebp
test
movsl
push
loope
lret
jl
and
and
loopne
leave
mov
pop
push
leave
test
pop
mull
mov
cmp
lcall
mov
enter
jbe
pop
in
cmp
stos
insb
or
adc
mov
push
call
ds
and
or
xor
pusha
in
int
fs
dec
ret
ret
push
lret
push
inc
out
push
pop
mov
insb
push
xor
jp
adc
mov
or
pop
adc
test
sub
fisubs
fisttps
cmp
call
jmp
pop
cltd
lock
or
jl
mov
stos
xor
or
push
and
bound
xor
cmpsl
cmp
and
bound
mov
mov
inc
inc
xor
cmp
adc
xchg
shrb
test
stc
inc
fstpt
aas
mov
and
inc
subl
xchg
xorps
xor
ljmp
pop
xchg
mov
aaa
push
imul
movsl
je
pop
mov
je
loopne
repnz
push
int3
outsl
sub
add
cli
sub
dec
addb
lahf
mov
inc
mov
push
pop
mov
xorb
insb
lret
stos
add
mov
arpl
pop
cmc
ja
xorb
sbb
int3
mov
pop
jbe
shll
mov
jo
sbb
fldt
scas
jge
std
pop
push
mov
mov
jne
jne
scas
mov
out
push
xchg
lret
gs
xchg
adc
xchg
pop
and
andb
in
cmpsb
cmpb
xchg
xchg
adc
fs
mov
mov
sbb
repz
xchg
enter
pop
in
out
gs
ljmp
in
fcomp
sbb
inc
push
sub
dec
xchg
ret
popf
setl
lds
aaa
stos
mov
mov
jl
xchg
add
cmc
jl
inc
cmpsl
imul
and
adc
roll
icebp
ficomps
or
lahf
lock
xor
jo
pushf
and
mov
std
call
pop
insl
ret
mov
adc
xchg
out
fstl
iret
hlt
hlt
xchg
or
and
jnp
and
lds
mov
and
xchg
sahf
or
outsl
fisubl
cwtl
lods
addr16
leave
push
cwtl
fsts
mov
sbb
or
repnz
insb
xchg
rcrb
cli
xor
and
push
jg
stos
sbb
jle
sub
jne
xlat
adc
std
lea
mov
jae
fisubrl
mov
insl
mov
pop
mov
test
fnstsw
dec
loope
ret
shll
mov
add
or
enter
dec
aam
ljmp
loopne
cld
jae
mov
sub
stc
and
test
dec
lcall
in
pop
sarl
sub
sbb
hlt
xchg
loopne
orb
xchg
cmp
dec
or
je
out
sbb
dec
xor
xor
mov
shlb
xchg
pop
dec
out
test
mulb
out
outsb
das
mov
jle
add
scas
lret
in
test
jbe
add
lret
or
repz
mov
lock
movsb
mov
jge
inc
les
cltd
flds
sub
rcrl
push
and
push
inc
xchg
push
jl
repnz
cmovns
out
imul
sahf
insb
nop
es
in
or
fcoml
sub
add
mov
dec
in
mov
mov
mov
mov
rcl
sbb
scas
dec
ret
repnz
scas
icebp
or
mov
mov
mov
div
pop
xor
out
dec
cmp
or
mov
or
mov
xchg
xchg
dec
adc
jnp
cmpsb
and
loop
sbb
xchg
xchg
fisubl
cmpsl
cmp
jno
or
arpl
add
int3
adc
dec
insl
imul
cmc
out
or
mov
xlat
cli
jb
loopne
pop
inc
icebp
pop
dec
add
and
mov
das
cs
es
dec
or
add
add
es
jae
xor
rcll
js
stc
into
pop
xchg
fucom
pop
sbb
cmp
xlat
pop
cmp
lcall
stos
xchg
stos
ficoms
mov
nop
addb
adc
scas
test
sub
cmp
jle
cmpsb
aaa
mov
and
push
clc
add
inc
lcall
sbb
aas
jbe
cmpsb
psubd
or
je
sbb
sub
in
add
xor
sub
loope
and
lods
jb
fildl
sub
xor
leave
mov
sbb
mov
jbe
cmp
inc
fs
loopne
int
aam
add
cmp
mov
cli
arpl
fisubs
test
pop
rcrb
mov
cs
pop
cmpsl
in
std
jne
mov
push
xlat
lret
jecxz
mov
push
out
inc
cwtl
mov
rclb
cmp
adc
mull
and
pop
fldenv
sbb
xchg
jnp
scas
and
push
cld
pop
push
xchg
jl
call
lea
aad
inc
ret
mov
and
imul
jb
adc
out
push
pop
movsb
adc
sub
daa
add
dec
out
sub
xor
outsl
and
cltd
jl
xor
sub
inc
lods
push
lahf
insb
sbbb
test
lret
in
ret
inc
stc
lret
mov
aas
jno
pop
test
scas
call
adcl
and
scas
xor
dec
lahf
push
pop
mov
mov
add
fs
sub
sahf
es
arpl
mov
xchg
jl
pop
out
in
and
hlt
repnz
test
inc
xlat
cmp
jbe
gs
add
mov
daa
inc
xor
and
mov
ljmp
inc
jge
adc
jb
xchg
leave
adc
pop
out
adc
xchg
jo
mov
sub
pop
bound
jns
bound
out
push
dec
iret
scas
xlat
orb
imul
mov
xor
data16
pop
add
aad
mov
into
addl
mov
mov
xor
cld
mov
mov
cmp
test
sarb
sbbl
fisubs
mov
jl
inc
sub
arpl
pop
jecxz
add
dec
ret
add
rcr
fs
insl
hlt
push
stos
push
xchg
je
xor
sub
jge
mov
pop
enter
insb
jmp
sbb
sbb
push
mov
sub
or
lods
int
rcrl
add
in
push
pop
xchg
ds
hlt
sub
mov
iret
dec
ret
xchg
in
in
dec
add
fcoms
jo
lret
mov
sti
pop
pop
dec
xchg
or
daa
scas
cs
dec
ja
in
inc
add
push
sub
cmp
ljmp
mov
mov
or
mov
insl
int3
scas
shll
and
or
jmp
push
movsb
unpckhps
inc
adc
mov
in
mov
jle
dec
fsubrl
rcrl
push
ds
jecxz
lea
fld1
es
loopne
inc
or
sbb
fsubrl
mul
mov
mov
mov
lods
and
fnstenv
cltd
jo
xor
test
inc
sbb
incl
outsb
icebp
ret
push
pushf
pop
sub
fwait
jle
xchg
es
out
or
fcoms
or
xchg
cmp
aad
sbb
or
dec
divl
hlt
push
xchg
insl
cli
push
sti
adc
add
insl
mov
out
insl
loopne
mov
xchg
decl
mov
cmp
int3
cmpb
aaa
mov
push
xchg
scas
das
mov
clc
in
dec
icebp
repz
test
mov
int3
mov
inc
lods
sub
int3
rep
jns
add
push
cli
das
test
cmpsl
pop
cmp
push
lea
ret
or
xor
mov
mov
jae
mov
leave
sub
in
inc
push
repnz
cwtl
lods
push
out
aad
in
sbb
sub
test
bnd
ucomiss
lock
out
fisttpl
fcmovbe
ror
add
stos
dec
jle
shl
xchg
popa
inc
xchg
js
ret
pop
test
ljmp
mov
pop
mov
xchg
lret
enter
push
push
leave
mov
nop
test
das
mov
push
mov
mov
fdiv
add
pop
mov
aaa
pop
xchg
xchg
sbb
leave
aaa
sbb
pop
int
out
jns
movsb
xchg
inc
int
mov
cmp
xchg
scas
jne
addl
add
in
jle
add
pop
pop
sbb
mov
push
xlat
out
mov
adc
dec
ret
dec
leave
mov
push
jo
xor
adc
pusha
mov
xchg
sbb
scas
pop
sti
pop
stos
out
insl
mov
xchg
jns
jl
pop
jl
fisubs
ljmp
mov
popf
xor
sbb
sarb
cmp
addr16
adc
fstl
xor
add
pop
rorl
das
mov
rclb
dec
stc
std
ret
xchg
push
mov
gs
shll
or
in
ss
outsb
sbb
push
or
ja
repnz
mov
mov
mov
mov
or
push
in
sub
fnstsw
iret
stc
sub
xor
cmc
mov
pusha
jge
xor
leave
xor
in
sub
loopne
aad
bound
into
push
pop
mov
sub
push
mov
cmp
cmpsl
clc
in
inc
pop
push
enter
sub
leave
xchg
mov
jno
dec
jg
arpl
push
sahf
sub
dec
push
mov
sub
or
sub
jge
jg
arpl
imul
cs
xchg
dec
jbe
adc
je
loop
aas
pop
mov
test
aam
rcrl
cmp
xchg
imul
lods
or
stos
test
push
dec
inc
or
jge
sub
mov
jns
enter
out
jmp
pop
in
dec
and
xchg
rorb
addr16
loopne
shl
loop
jns
shrl
dec
cwtl
mov
jae
mov
xor
clc
mov
push
test
addr16
aas
or
rcl
inc
pop
jae
std
mov
jp
cmp
mov
nop
pop
mov
fwait
pop
imul
lret
out
or
pop
xchg
repnz
xchg
aaa
or
data16
and
xchg
or
dec
xchg
loopne
xchg
lock
insl
lret
insl
push
pop
int
ret
rcl
dec
add
call
xor
or
or
std
cmp
push
sbb
adc
fdiv
mov
add
ljmp
xchg
jge
daa
enter
jp
jmp
dec
mov
mov
rcrl
leave
pusha
mov
popf
lock
scas
mov
lea
out
loope
aaa
icebp
xchg
int
into
jne
rorb
adc
mov
mov
clc
inc
jns
popf
or
xlat
push
mov
sub
mov
xchg
push
sbb
xor
mov
or
add
add
sahf
les
jnp
dec
dec
dec
and
and
mov
or
jecxz
xor
and
mov
dec
jns
mov
gs
mov
and
inc
sbb
mov
arpl
cmc
shr
stos
cmp
outsb
mov
dec
fsts
xchg
pop
sbb
ljmp
push
cld
xchg
shr
bound
inc
and
push
mulb
js
jge
roll
enter
or
mov
movsl
clc
pushf
xchg
outsl
dec
js
push
push
adc
int3
add
push
add
inc
jecxz
in
fmuls
outsl
cmp
xchg
andb
das
in
push
jle
or
dec
popf
xchg
int
out
xchg
pusha
sub
lods
mov
gs
jecxz
and
cmpsb
test
lods
mov
mov
std
xchg
rol
push
push
inc
dec
outsl
neg
fnsave
jecxz
xchg
cmp
popa
push
lds
inc
mov
mov
fsts
test
cmp
pop
or
shll
stos
mov
xor
enter
xchg
arpl
out
cmp
push
pushf
xor
or
add
or
or
push
or
cmpsl
dec
pop
and
pop
jecxz
int3
fwait
mov
sahf
sbb
adc
cmpsb
pusha
rcrb
outsl
xchg
jb
mov
lcall
jg
sbb
fisttps
sub
adc
repz
sbbb
adc
test
push
sub
xor
push
add
test
xor
pop
sarl
mov
ss
outsb
dec
call
cmc
or
inc
call
jnp
pop
adc
inc
pop
cmp
test
or
add
and
xchg
aaa
fcoml
pushf
pop
fldl
cmp
and
add
sub
adc
jae
ret
rolb
xor
adc
jp
xorl
dec
add
rorl
aad
dec
pop
push
int
fcmovnu
or
push
lret
sbb
out
outsl
repnz
xchg
fsubrl
jp
popa
ret
fists
push
jno
ss
xchg
xchg
mov
mov
pusha
and
or
stos
fidivl
xor
repz
push
mov
jmp
sti
mov
imul
fistl
lcall
aad
fildll
pop
push
bound
gs
imul
imull
mov
mov
ffreep
inc
add
adc
cmpl
sub
mov
in
dec
aaa
jmp
jno
test
cltd
cltd
cwtl
dec
fadd
dec
jmp
lret
ja
loope
mov
mov
popf
pushf
add
sub
leave
mov
leave
sbb
incb
outsl
pop
cld
call
cmpsl
xor
int
imul
dec
repz
sub
jge
cmp
lahf
jb
ret
push
cmpsb
or
adc
adc
int3
sbb
push
out
cs
sti
add
adc
sbb
movsb
push
mov
and
ja
add
cld
int
filds
pop
int3
js
or
mov
clc
mov
push
inc
sbb
mov
sub
lcall
jne
xchg
or
shrb
inc
jnp
cld
rclb
xor
loopne
sahf
xchg
inc
mov
push
mov
repnz
std
mov
mov
cwtl
adc
cmpsl
adc
inc
out
dec
or
ror
cli
cli
fisttpll
pop
jae
mov
rcll
mov
int
hlt
aam
test
pop
ja
cmp
adc
sub
shr
jl
sbb
xor
push
shlb
aas
mov
cwtl
lret
repz
add
pop
jns
mov
dec
fcoms
movsl
pop
into
inc
sbb
or
addr16
test
pusha
out
adc
lret
mov
add
popf
dec
aaa
or
test
xor
push
jae
leave
add
rorb
push
iret
in
in
lahf
daa
pop
in
hlt
test
test
lock
inc
std
repz
sub
ret
or
cmpsl
test
cmp
mov
iret
test
push
aaa
lods
cmp
lea
pop
xor
push
fistps
lds
xchg
pop
cmpsb
pop
xchg
dec
jle
scas
hlt
leave
flds
gs
dec
ljmp
jl
mov
fidivrs
mov
int
or
jecxz
movsb
add
test
xor
inc
stos
mov
jb
jns
push
inc
aas
addr16
imul
mov
and
movsl
adc
icebp
into
push
aas
ficoms
movb
adc
pop
xor
je
and
push
ficoms
cmp
bnd
mov
je
push
sti
mov
idivb
xlat
fwait
int3
sub
add
or
ljmp
adc
mov
aaa
loopne
bound
xchg
fabs
cwtl
icebp
inc
test
movsl
into
imulb
mov
movsl
pop
mov
mov
shll
push
repz
das
and
xchg
pop
hlt
or
shll
dec
test
je
jb
scas
popa
mov
jno
fstl
fisubrl
push
out
jo
fsubs
jns
mov
ljmp
fwait
jge
mov
aaa
and
xchg
adc
adc
adc
leave
push
cltd
mov
push
lods
lock
inc
ret
lods
sbb
cmp
mov
cmp
sub
mov
xchg
movsl
mov
dec
vpaddusw
gs
movsl
dec
push
sahf
lret
inc
xlat
scas
or
adc
push
testb
or
loop
test
jns
into
cmp
ja
inc
cld
pop
dec
sahf
add
ficomps
add
cmpsb
mov
dec
nop
outsb
outsl
dec
cmp
inc
in
add
mov
sbbl
sub
stc
loope
daa
xor
or
je
movsb
cwtl
jb
add
cmp
cmp
gs
xchg
pop
jns
int
sub
lahf
movsl
jo
cmc
in
gs
lea
jg
popf
das
jbe
cmp
pop
mov
mov
scas
cmc
mov
mov
sbb
jle
in
or
adc
imul
jmp
dec
incl
mov
js
xchg
imul
pop
jbe
loopne
dec
xchg
outsl
in
push
rcll
mov
test
inc
sub
iret
mov
push
sub
or
in
aaa
jmp
frstor
lahf
push
sti
ret
ret
sahf
ss
adc
dec
push
jg
insb
jp
add
shrb
aad
mov
leave
fildll
cmp
inc
push
in
outsb
dec
sbb
aaa
xchg
test
inc
push
push
xor
inc
push
jmp
mov
mov
push
xchg
cs
movsb
cmp
cli
adc
sbb
hlt
add
fnstcw
pop
fbstp
mov
or
push
sahf
or
sbb
mov
xor
cmp
push
flds
adc
icebp
inc
fldenv
jbe
outsb
sub
jb
xchg
xchg
adc
mov
aaa
stc
cmp
adc
fbld
push
add
in
inc
push
addl
cli
dec
fildl
push
lea
je
and
xchg
je
out
hlt
arpl
jge
mov
ja
dec
jnp
mov
push
inc
cmp
cmc
in
cli
out
leave
pop
fs
ficoml
scas
mov
outsb
mov
mov
in
out
shrl
xlat
pop
nop
sahf
scas
push
scas
ljmp
inc
add
imul
push
in
lahf
gs
in
rolb
int
call
lds
idivb
rcr
mov
inc
inc
add
aam
sbb
mov
test
mov
push
in
bound
rcrb
jb
call
sub
pop
ljmp
xchg
push
arpl
jmp
cltd
or
sahf
push
lahf
fsubl
fcmove
or
pop
aaa
lret
jno
dec
xchg
mov
outsl
popf
cmp
je
mulb
adc
push
mov
push
add
into
sub
cli
jl
cs
jge
call
pop
fwait
sbb
adc
cs
out
out
fs
mov
fnstcw
jne
pop
jbe
cmpsl
jns
jb
mov
and
and
movsl
sbb
push
push
lock
sub
cwtl
inc
mov
lahf
xor
std
icebp
adc
mov
push
jmp
pop
addr16
push
mov
mov
pop
cmp
int3
lea
jnp
bound
fs
xchg
add
dec
push
add
outsl
and
dec
lcall
ja
scas
push
pop
addl
cmpsb
outsb
inc
jge
xchg
lahf
iret
cs
repz
mull
jp
xchg
shrb
nop
incb
imul
mov
jno
pop
xor
or
leave
xchg
pop
in
fdivs
ds
mov
mov
ret
jno
mov
jl
call
or
repnz
xor
addr16
nop
int
out
bound
jnp
jb
xchg
add
cmp
bound
das
sbbb
insl
dec
je
fidivrl
cmpsl
adc
imul
lods
xchg
hlt
popf
xor
loopne
mov
xchg
push
test
mov
add
mov
xor
mov
dec
mov
fsubrs
cmp
test
fnstcw
ret
mov
jg
out
stc
mov
popa
sub
cmpsl
fsubs
xchg
je
xorl
sarl
jg
jbe
jbe
arpl
adc
pop
jecxz
adc
loope
add
sbb
clc
inc
push
into
test
push
inc
cmc
sbb
mov
push
test
sbb
pop
scas
cmp
xchg
inc
add
jecxz
into
pop
xor
mov
fisubrs
or
gs
sahf
addr16
xchg
sbb
jle
fmull
in
loop
repnz
push
faddl
mov
or
jo
call
adc
add
movsl
inc
push
dec
loope
std
ficoml
pushf
insb
push
daa
fistpl
inc
adc
movsb
loop
push
loopne
dec
mov
test
xorb
jnp
dec
push
int3
inc
or
jb
inc
mov
imul
sub
mov
xchg
test
je
sbbl
bndstx
or
xchg
jl
ror
data16
pop
add
pop
sbb
shll
scas
jge
dec
not
orb
iret
push
xlat
sub
jno
icebp
stos
inc
int
mov
fsubs
int
orb
lahf
fs
push
test
push
or
out
dec
lods
or
mov
or
adc
test
xchg
mov
push
lods
jnp
js
mov
lret
xor
mov
cli
sbb
inc
cs
adc
lods
xor
lock
clc
jp
pop
sahf
jnp
dec
mov
fs
mov
mov
insl
stos
or
imul
std
fwait
cmc
shlb
push
imul
mov
inc
inc
cltd
mov
push
add
or
fsubrl
adc
add
and
int3
cs
rcrl
bound
outsl
shll
mov
ffreep
outsl
mov
ja
cmpsb
mov
test
aaa
out
push
push
pop
mov
inc
or
adcb
lods
push
jno
cli
mov
adc
icebp
mov
push
push
ds
xchg
mov
mov
push
pop
add
mov
xor
jnp
mov
pusha
lods
cli
out
mov
xchg
adcl
jnp
test
insb
jb
mov
sbb
pop
in
in
loop
cltd
out
loope
nop
add
cs
xor
pusha
in
movsb
pusha
or
es
mov
popa
stos
and
pushw
arpl
arpl
push
mov
pop
sahf
pop
sub
xor
dec
push
lea
dec
mov
inc
cmp
xchg
int3
mov
orl
pop
or
inc
fadds
rorl
fbstp
les
addr16
push
xor
stc
mov
push
adc
test
sbb
and
add
jl
pop
rcl
std
cmp
nop
int
mov
sbb
mull
cmpsl
push
mov
mov
imull
bound
xorb
pop
xor
ja
pop
and
inc
fldl
les
mov
sub
sub
and
cltd
push
out
mov
and
into
xor
cld
mov
pushf
aas
mov
fwait
jnp
and
loope
and
mov
pop
and
xchg
sub
sbb
sub
mov
sbb
mov
jno
addb
lcall
xchg
loop
shrl
mulb
push
insl
stos
push
push
and
pop
out
fs
lods
incb
popa
pop
stc
pop
out
stos
mov
push
inc
adc
ja
xchg
pusha
cmc
outsl
ret
test
xchg
mov
arpl
sub
add
testb
mov
mov
mov
pop
lret
jae
imul
push
iret
movsl
jno
cmp
in
std
out
cmp
in
js
adc
es
rcrb
dec
jmp
stc
fcoms
dec
cli
nop
xor
inc
test
mov
mov
imull
dec
movsl
dec
fisttps
ror
and
test
push
pusha
and
clc
add
dec
subb
push
addl
je
mov
scas
imul
push
xchg
inc
cmpb
repz
enter
adc
std
mov
cmpsl
push
int3
enter
mov
daa
dec
popa
push
and
adc
fldt
mov
jp
add
pop
and
leave
fs
fidivs
cmp
cmpsb
arpl
inc
dec
imulb
push
cmpsl
push
jno
jbe
dec
icebp
testl
mov
xchg
xor
jae
and
or
mov
adcl
sbb
lahf
pop
ja
adc
push
add
jl
mov
adc
xor
sahf
add
xchg
outsl
rol
std
in
push
push
pop
ljmp
xchg
sbb
mov
sub
pop
sbb
pop
pop
imul
sub
jmp
outsl
mov
out
dec
cmpsb
imul
jnp
lahf
or
mov
or
jne
andb
jnp
sbb
pop
and
mov
test
adc
mov
lcall
stos
push
movsl
push
pop
mov
int3
lds
mov
pop
add
mov
jne
push
inc
inc
pop
inc
repz
inc
fcoml
ljmp
idivl
jno
call
and
push
add
dec
sti
xor
xchg
fcompl
pop
sbb
dec
mov
loopne
inc
mov
jge
sub
sub
mov
ficompl
ret
xor
stc
or
sub
add
ficoml
pop
jo
leave
mov
out
dec
jmp
and
adc
out
jmp
pop
loopne
add
pop
dec
cmovs
addb
or
mov
xchg
fwait
xor
dec
xchg
jo
jge
test
inc
xchg
repz
lret
js
adc
loop
jae
sub
lcall
add
int3
adc
aad
mov
cmpsl
xchg
pop
xchg
insb
js,pn
xchg
and
jp
mul
push
push
sub
into
push
xchg
add
add
jne
test
sub
iret
sbb
pop
cli
scas
xor
cmp
jo
sti
cmp
pushf
stc
mov
cmpsb
repz
cli
rorb
cmp
fistl
ret
inc
dec
and
hlt
mov
mov
inc
jno
cmp
and
jo
insl
inc
mov
sbb
out
jge
into
mov
or
mov
xchg
rorl
pop
sar
rcrl
jl
out
cmp
fstpl
xor
fcmovu
das
aad
and
sub
inc
lods
outsb
dec
movsl
gs
sbb
sub
icebp
and
or
jnp
pand
fs
sbb
ljmp
xchg
sti
pop
cld
pop
sahf
jns
jb
add
or
xchg
fcoms
faddl
fcmovnu
cmpsl
or
cmp
jbe
rcrb
mov
mov
cmp
mov
push
and
pop
divb
pop
cmp
or
pusha
xchg
faddl
ljmp
or
xor
lret
cs
xor
push
ja
mov
and
negl
cmp
pop
andb
inc
inc
aam
push
pop
sub
jp
xchg
pop
and
sahf
push
mov
enter
stos
imul
and
sti
push
xor
enter
ret
int3
jne
xor
out
aad
mov
dec
mov
mov
cmp
pushf
mov
sub
and
dec
or
mov
scas
mov
sbb
jmp
jno
xor
mov
xor
push
jecxz
pop
shrl
cmp
add
jl
cmp
bnd
fs
test
repz
out
in
popf
dec
pop
cltd
sub
outsb
mov
out
pop
or
add
pop
hlt
xor
ja
cmp
push
jmp
mov
push
adc
shlb
repz
out
xchg
ret
imull
push
mov
mov
enter
adc
add
shlb
sti
cmp
cmp
pop
sbb
repnz
add
mov
ror
das
leave
push
adc
cmp
cli
mov
cmpb
push
jb
imul
js
test
jbe
fnsave
lock
inc
test
aad
dec
dec
push
movsb
and
push
std
sahf
xor
pop
jb
testb
pop
xchg
xchg
or
mov
jns
xor
and
aam
mov
dec
xchg
add
mov
mov
ss
inc
cmp
sbb
adc
push
sub
cli
leave
mov
and
cli
stos
sbb
cmp
out
fwait
ret
push
ja
les
repnz
cmc
pop
fnsave
pusha
or
jecxz
stos
rclb
mov
adc
mov
shll
enter
and
mov
and
aad
xchg
push
adc
scas
gs
in
push
or
stos
fisttpl
std
adc
mov
sub
pop
push
inc
vphsubdq
push
add
xchg
rorl
jbe
cmpsl
push
fisttpl
jne
test
pop
fstp
mov
jecxz
nop
and
cmp
pop
fnsave
je
std
cmp
pop
movsb
in
bound
in
test
ret
movsb
jge
loopne
adc
and
inc
orl
nop
cmp
outsl
enter
repnz
mov
or
add
nop
int3
cmp
pushf
push
outsb
sti
add
sarb
and
fildl
adc
sarl
sbb
inc
xchg
inc
inc
jbe
jns
push
jecxz
sub
inc
pop
jmp
int3
mov
int3
xchg
sub
push
xor
shr
mov
hlt
outsl
icebp
push
xor
xchg
ret
sbb
out
adc
lahf
stc
icebp
ja
pop
sbb
sub
lock
push
xchg
cltd
xor
sub
add
dec
cmpsb
inc
lea
je
xchg
lahf
mov
xor
xor
pop
inc
fwait
movl
insl
popa
jl
adc
mov
test
jno
fcom
test
clc
dec
rcl
push
add
js
test
push
faddl
cmpl
ret
push
inc
ljmp
dec
or
jg
dec
push
into
mov
sbb
adc
mov
and
add
gs
cmp
arpl
inc
aam
and
in
fistl
xchg
mov
orl
push
cwtl
std
inc
dec
mov
jle
mov
imul
je
add
loop
dec
push
cmpsl
fsub
fisttpl
and
sub
pop
insl
or
jno
xchg
and
cmpsl
fldl
and
mov
dec
popa
bound
in
inc
adc
test
adc
mov
sub
pop
pop
jge
pop
iret
lods
jbe
xor
cmp
mov
mov
inc
insl
aas
mov
mov
adc
ss
push
test
ds
mov
mov
inc
fwait
push
add
subb
icebp
test
insb
loopne
insl
xor
lea
adc
sub
pop
imul
mov
sbb
movsl
bound
pop
inc
mov
xlat
pop
stos
inc
pop
insl
jae
enter
adc
sub
int3
dec
dec
dec
inc
jo
adc
adc
popf
cmpsb
les
movb
dec
xchg
ret
icebp
push
pop
movsb
xchg
rcrb
mov
xor
mov
or
dec
xor
clc
test
lods
ret
bound
dec
clc
out
insl
ss
pop
pop
jbe
xchg
add
into
push
xchg
add
lea
pop
popf
subb
sbb
cmp
mov
push
jno
inc
out
lds
lahf
divb
jns
dec
adc
iret
fldt
sti
inc
lods
jg
movl
mov
outsl
dec
test
pop
jge
mov
jnp
mov
inc
dec
push
and
lds
aaa
hlt
aas
int3
and
push
pop
jb
dec
cmp
sub
pop
ret
mov
insb
and
dec
xchg
cwtl
xlat
mov
xor
mov
pusha
mov
add
push
in
push
stos
xor
dec
cmp
scas
adc
es
or
lods
ret
or
icebp
cltd
icebp
or
aas
test
mov
fldl
xorl
adc
das
icebp
xchg
push
xor
jae
inc
movsl
jecxz
icebp
or
mov
push
xorl
lods
fcom
sbb
dec
xor
insl
xchg
mov
in
arpl
pop
jg
sbbb
cmp
add
sub
inc
push
add
and
test
xchg
inc
je
sbb
sub
es
jecxz
fwait
mov
mov
rolb
lds
shrl
push
cmpsl
adcb
adc
mov
sbb
push
cmp
jge
divl
push
andb
movsl
insb
push
and
and
inc
dec
xchg
data16
sub
sbb
push
and
lret
mov
clc
rcrl
fcompl
sbb
push
int
ret
sbb
loope
stos
xchg
ljmp
ljmp
fidivl
sahf
mov
and
mov
ljmp
add
jle
outsb
inc
daa
push
ja
icebp
shl
cmc
jecxz
adc
inc
mov
pop
movsl
js
pop
out
xor
nop
test
adc
nop
sbb
mov
es
push
push
jnp
dec
xchg
dec
push
pop
scas
mov
ds
aad
pop
loopne
jb
hlt
nop
ss
test
cwtl
jae
cmpb
sub
adc
push
mov
mov
jno
jae
cmpsl
sbb
jns
out
mov
ret
sbb
ss
add
fs
adc
notb
sub
or
in
adc
sbb
xchg
xchg
test
mull
add
into
sbb
and
dec
scas
and
cltd
rorl
out
and
sub
bound
test
std
pop
mov
mov
xor
and
cld
outsl
lock
push
stc
test
test
mov
rcrb
imul
push
sahf
leave
fstps
adc
push
adc
jo
pop
orb
push
pop
and
lcall
cltd
rorl
or
jmp
cmp
or
cmp
push
jno
push
rcrl
mov
js
pop
xor
xlat
mov
mov
bound
xchg
adc
mov
mov
call
jecxz
rolb
mov
pop
jb
sbbl
cmp
mov
adc
pop
in
pop
daa
xchg
mov
js
bnd
aas
icebp
std
mov
jp
lock
stos
cmp
mov
pusha
out
cld
cmpsb
mov
cmpsl
xchg
mov
jmp
inc
loop
out
jp
ljmp
xlat
jge
mov
jae
xor
mov
shr
outsb
or
not
push
jns
and
inc
jns
push
jnp
fs
mov
xchg
js
sub
dec
pop
push
fidivs
sub
fldl
cmp
sub
jbe
mov
cwtl
clc
test
ret
lods
jne
sub
mov
imul
or
push
push
push
mov
dec
pop
mov
mov
lea
mov
test
jne
xchg
xchg
leave
imul
dec
add
pop
clc
psubusb
scas
fstps
xor
out
out
cmp
pop
and
mov
pop
cmp
inc
scas
inc
xchg
gs
cmpsb
je
int
xchg
sahf
cmp
fildl
in
push
sub
jne
in
std
int
and
rcl
inc
test
lret
pop
test
xchg
cltd
scas
mov
gs
sbb
sahf
cmp
and
mov
pop
outsb
inc
dec
push
leave
fsub
ret
fisubrs
xor
mov
loope
dec
in
fstpl
insl
jb
mov
and
out
or
mov
mov
test
mov
dec
arpl
inc
mov
pop
mov
leave
mov
fsubl
cmp
test
je
mov
addr16
stos
add
idivl
mov
mov
sbb
mov
cmp
push
lret
dec
scas
imul
sar
dec
add
call
fistl
cli
mov
xchg
icebp
or
xchg
popa
sahf
or
imul
adc
fdivl
jl
int3
int
mov
clc
sub
movsb
icebp
mov
mov
ret
into
in
es
cld
insb
and
jno
pop
add
dec
cmpsb
inc
adc
in
in
and
push
xchg
sub
das
dec
out
push
daa
test
adc
jno
sub
push
out
mov
inc
jge
repz
shll
add
inc
sbb
mov
das
addl
cmpsl
cmp
add
mov
int
shl
cmc
dec
cmc
mov
adc
sbbl
into
mov
stos
mov
mov
mov
push
pop
loope
out
add
outsb
out
mov
jle
ss
cmp
jno
clc
mov
xor
mov
iret
push
cmp
bound
sbb
dec
inc
das
dec
and
dec
xlat
test
or
push
mov
push
incb
xor
xchg
cmp
fldt
fidivrl
pop
les
pusha
in
adc
insl
fimull
test
int3
stos
lds
inc
orl
inc
cmp
cmp
and
test
insl
push
inc
mov
aad
cmp
js
adc
enter
outsl
sbb
fldcw
mov
sti
xlat
xchg
stc
jno
dec
imul
stos
or
inc
sarb
and
gs
xor
add
mov
or
add
push
cmpsl
call
clc
dec
cmpsb
xchg
push
aaa
fwait
or
into
adc
aaa
cmp
add
popa
lea
jmp
rorl
call
je
mov
xchg
inc
out
mov
dec
push
insb
xchg
mov
gs
lods
adcb
xchg
lock
das
jl
push
jnp
repz
bound
inc
push
adc
fimuls
pusha
mov
mov
jnp
add
sub
sbb
push
sub
lret
xchg
push
bound
pop
or
xchg
arpl
les
mov
mov
sbb
mov
push
mov
pop
push
les
movb
cmp
mov
iret
mov
repz
shr
movsb
pop
pop
sub
mov
jno
push
mov
dec
shlb
pop
out
clc
loop
mov
mov
in
pop
add
lcall
repnz
xchg
mov
lea
cmp
test
jmp
jg
mov
push
dec
bound
cmp
test
push
pop
pop
cmp
mov
rorb
fdivl
out
and
and
into
shl
adc
mov
pusha
stc
mov
cmpsl
sbb
imul
stc
in
imul
call
adc
out
sub
lods
orps
sub
in
out
fcoml
adc
pop
add
icebp
push
mov
jo
test
movsb
aam
ljmp
sbb
andl
je
sub
lods
sub
jmp
sbb
jl
or
mov
cmp
sub
jb,pt
mov
scas
cmpl
mov
dec
icebp
ja
push
push
test
cmp
or
out
xchg
jle
scas
xor
sti
mov
sub
repnz
jo
xchg
rcrb
jge
les
lea
dec
test
xlat
and
jmp
das
jae
adc
stos
mov
cmp
rcrl
dec
add
hlt
popf
jno
fiadds
mov
in
or
icebp
sbb
jae
fwait
or
mov
sub
sbb
in
sbb
orb
push
lahf
and
cmp
mov
int
pop
mov
aam
scas
add
add
enter
jbe
sbb
in
pop
sbb
ret
call
adc
sbb
je
test
popf
xor
sub
xor
xchg
jne
sub
inc
imul
pop
dec
in
leave
pushf
ds
cmp
mov
insl
inc
xorl
xchg
lea
in
mov
jnp
cmpsl
sub
and
inc
cltd
test
outsl
push
mov
popf
mov
faddl
jns
cmp
dec
shll
pop
mov
push
adc
adcb
cmp
jg
divl
jbe
xchg
xchg
dec
mov
mov
daa
add
cmp
insb
add
adcl
aas
pusha
icebp
lea
shrb
mov
in
fists
into
pusha
and
push
enter
test
int3
movsb
jmp
mov
fwait
stos
enter
pop
add
push
add
bound
inc
lods
mov
insb
mov
xchg
mov
push
lock
push
loope
scas
out
dec
jnp
in
mov
lret
and
adc
mov
push
fcoml
rol
cli
rolb
test
pop
dec
jo
imul
ss
stos
shr
cwtl
sub
jae
cwtl
push
add
in
xchg
fisttpl
mov
jl
mov
lahf
sbbl
xor
adc
out
mov
ja
cmp
ds
out
in
cs
cmpsb
mov
ret
repnz
push
sub
inc
mov
mov
rorl
push
push
or
cmpsl
int
shrl
xchg
dec
popa
in
lcall
dec
cwtl
insl
popa
jb
ss
into
scas
jmp
mov
leave
in
cmp
lods
dec
add
cltd
gs
push
and
and
sbbb
orb
movsl
aad
push
testl
insb
outsl
and
loop
pop
gs
bound
out
jb
mul
scas
add
pusha
xchg
in
mov
shll
out
add
jb
ret
mov
and
cli
fists
or
xchg
cmpsb
adc
xor
inc
sbb
daa
inc
test
jns
icebp
fisubrs
sub
ljmp
pop
xchg
dec
mov
fisubs
hlt
nop
mov
call
and
pop
ret
int
cmp
les
ss
les
in
push
mov
sbb
add
xor
cmp
cld
and
bound
test
pop
movsl
mov
scas
cmp
dec
jb
push
push
push
push
pop
sti
dec
or
repnz
out
stos
adc
jp
inc
femms
or
jae
adc
repz
shufps
ret
mov
xchg
fcmovnbe
sahf
mov
or
xchg
ffreep
mov
mov
pusha
or
leave
or
jecxz
push
push
push
or
pop
mov
subb
push
sbb
jnp
fwait
cld
lods
test
mov
push
push
mov
adc
aam
mov
xor
dec
mov
sub
push
cmp
fstpl
orb
icebp
xor
aad
nop
clc
test
xchg
lds
xor
lret
sub
push
pop
and
test
movsb
push
xlat
mov
test
pusha
sub
mov
popf
aad
jle
subb
dec
cmpsl
shll
mov
cmpsb
xor
cmp
lods
xchg
push
shll
or
enter
stos
ljmp
sarl
adc
mov
out
mov
and
jecxz
mov
nopl
mov
xor
insb
outsl
sbbl
mov
adc
fwait
dec
clc
int3
ret
mov
sub
mov
mov
data16
xchg
jp
fsts
jo
inc
insb
mov
lret
fidivs
dec
dec
pop
out
push
hlt
inc
adc
xchg
add
or
repz
test
or
mov
rol
pushf
rcrl
lret
das
std
mov
pop
iret
fs
inc
cwtl
cli
movsl
push
or
adc
ficompl
mov
dec
xchg
pop
das
adc
jne
pop
pop
or
outsb
push
add
mov
ret
and
or
dec
push
mov
push
jae
jmp
ss
mov
bound
lret
loop
shl
xchg
imul
xchg
add
adc
rcl
jno
mov
dec
mov
shll
xchg
cmpsl
lock
adc
jle
and
sbb
mov
mov
inc
adc
imul
mov
rolb
mov
or
mov
into
fisubrs
sbb
mov
adc
orb
jmp
ds
daa
ja
clc
mov
mov
sub
pop
fmuls
pop
in
inc
sbb
inc
adc
jge
xor
fucomi
jbe
push
jno
in
cld
xchg
dec
dec
pop
je
sbb
adc
insb
mov
inc
inc
lret
lds
inc
les
nopl
clc
lret
lods
jns
push
cmp
sbb
mov
cmpsb
xchg
cs
lods
in
jecxz
daa
xor
fiaddl
and
mov
cmp
movsl
jnp
xorb
dec
inc
xor
orl
lahf
push
addr16
push
xor
repz
push
aam
adcb
out
adc
inc
lret
dec
andb
aas
cmc
push
imul
jp
cmc
and
mov
jno
scas
jle
add
je
test
bound
mov
loopne
mov
ljmp
sub
pop
pushf
shl
clc
mov
sbb
ret
aas
cmp
mov
mov
aaa
ja
cmp
rolb
jb
out
or
cwtl
mov
mov
test
adc
incl
xlat
push
inc
jg
mov
negb
orl
push
je
fwait
sbb
cmpsb
in
in
mov
mov
rcl
dec
into
cmp
enter
ljmp
push
jg
mov
rolb
sub
mov
test
inc
mov
adc
dec
mov
push
jg
loope
xchg
mov
xor
sub
sbb
int3
dec
adc
sbb
add
sub
ret
pop
sahf
sti
jae
jg
sti
shll
xchg
mov
cmpsb
mov
push
mov
ret
jp
dec
cld
cmp
pop
sub
lahf
or
xor
cmpsb
stos
test
in
inc
inc
push
push
ljmp
or
adc
xchg
hlt
rclb
sub
cwtl
mov
orl
mov
ja
pop
lahf
push
add
sub
dec
sbb
or
ljmp
add
call
xor
cmp
sub
loope
jo
rcrb
add
pop
push
mov
or
mov
outsl
jo
fmulp
push
nop
inc
xor
dec
mov
sbb
lods
dec
insl
inc
es
lods
mov
jnp
imul
push
adc
xchg
faddl
inc
subl
out
or
sub
dec
cmovb
mov
rorl
add
mov
mov
cltd
cmpsl
and
orl
into
int
arpl
popa
ficomps
sub
xor
shrb
cld
inc
cmpsl
rol
out
or
sub
jmp
movsb
flds
mov
lcall
into
push
pop
jb
dec
adc
jo
test
sub
popf
xchg
cmp
addr16
fcomps
shll
adc
or
insb
push
cli
push
mov
lds
popl
negb
loop
ds
cmp
add
jmp
ja
mov
std
stos
and
jne
or
cli
insb
fsts
mov
insl
pop
and
call
mov
cvtps2pi
movsb
cltd
in
sbb
push
scas
mov
sub
mov
mov
setg
xor
test
xor
xchg
leave
shlb
push
lods
push
imul
cmp
jl
jo
pop
inc
adc
in
jecxz
jb
lahf
push
scas
scas
fildll
adc
inc
int3
xor
and
and
lods
add
shl
lret
mov
dec
cmpsb
hlt
inc
xchg
imull
lods
iret
sub
loopne
scas
jge
call
fadds
xchg
pop
mov
shlb
add
push
mov
or
cmp
push
cmpsb
push
mov
jb
sti
fcoms
push
adc
mov
aam
and
pop
outsl
notb
xor
or
push
push
cmc
cmc
dec
adc
add
cmp
cmp
or
cmp
cmp
je
setno
and
imul
js
sbbl
adc
xor
sbb
lock
or
xor
mov
jmp
in
lods
adc
jo
imul
xchg
test
pop
jge
sti
or
and
inc
rcrb
test
stc
lcall
cmp
fcomip
add
add
in
cwtl
fisubl
cmp
mov
and
scas
jno
mov
leave
cmpsb
mov
push
repnz
test
lea
jmp
lahf
div
cmp
mov
sub
jne
xchg
subb
enter
lret
sahf
lret
aad
add
sub
jnp
popa
lahf
push
push
sar
xchg
sub
mov
jmp
les
aad
int
dec
fcompl
push
pop
inc
les
mov
jbe
xlat
adc
fwait
mov
stos
lea
fcoms
xor
iret
ljmp
jecxz
mov
dec
mov
add
icebp
test
and
adc
mov
jo
or
js
xor
cmp
icebp
les
push
sub
mov
mov
fcmovb
adc
pushf
out
jae
add
mov
jg
cwtl
cmp
es
sbb
in
pop
in
jl
cmc
mov
xor
ljmp
push
loopne
xchg
push
cmp
adc
cmp
and
cmp
lahf
pop
fcmovnb
add
aam
lods
nop
mov
add
gs
pop
loopne
sbb
mov
cld
add
adc
js
mov
jl
jne
adc
inc
ljmp
inc
cmp
inc
les
lods
or
insb
xchg
data16
pop
fstps
cmp
cmc
push
mov
jecxz
or
scas
push
mov
xchg
push
pop
and
hlt
xor
dec
mov
pop
push
or
dec
cwtl
sti
cli
je
scas
das
mov
ja
xor
enter
adc
add
movsb
out
idivl
mov
and
aad
inc
in
cli
test
insb
jle
sub
jle
jne
out
and
mov
sub
pushf
jmp
je
dec
fldl
cwtl
jge
frstor
lahf
decl
aas
insb
xor
daa
pop
jae
cltd
cli
sbb
mov
sub
mov
imul
xor
xor
cmp
outsb
sub
fs
daa
jl
inc
sti
or
in
cltd
das
jge
les
xlat
lea
int3
cld
in
outsb
popf
fcompl
shll
cmp
hlt
dec
xor
add
fidivs
lea
js
cmp
xchg
test
movsb
dec
outsb
jmp
aaa
mov
mov
aam
popf
movsl
adc
mov
jnp
fstl
push
xchg
dec
jecxz
cltd
push
ret
ficomps
xchg
inc
adc
sub
mov
jp
add
jecxz
mov
push
cwtl
js
cmpsb
mov
push
popa
jb
xor
and
or
sub
js
jno
test
mov
adc
mov
inc
cwtl
dec
repnz
lret
stos
sbb
je
pop
cmc
fisttpl
inc
subl
icebp
shll
inc
inc
andl
xlat
adcb
ljmp
push
mov
adc
push
arpl
mov
insl
sbb
mov
jno
std
pop
call
cmpsl
mov
sub
fistps
xor
into
xor
mov
test
mov
roll
push
leave
cmp
mov
push
loope
out
and
les
jbe
mov
shl
sbb
out
fidivrs
xor
dec
mov
push
test
addl
loope
inc
cld
inc
ljmp
rcrb
xchg
pop
and
xchg
cltd
and
loop
aam
pop
movsb
rorb
lea
dec
int3
test
out
ret
dec
cmp
mov
dec
test
add
fmul
inc
push
addb
call
lods
lret
cmpb
call
mov
push
movsl
mov
push
dec
popf
mov
mov
daa
lcall
dec
ljmp
or
cmpsl
mov
xchg
stos
into
es
jmp
jo
mov
fnstenv
and
test
iret
push
xor
out
sub
and
or
or
ret
movsl
push
imul
mov
push
lcall
dec
sub
push
test
test
in
push
push
ficoms
jl
adc
in
cwtl
add
push
xchg
push
pop
add
in
inc
inc
loopne
ljmp
mov
xchg
lods
sub
gs
jge,pt
or
dec
adc
mov
stos
adc
and
out
rorl
push
ret
test
dec
xchg
adc
and
fwait
xchg
aam
add
movsl
adc
mov
fs
push
mov
push
outsl
es
ret
cmp
sahf
dec
mov
dec
adc
adc
adc
push
lods
movsl
or
pushf
and
aad
sub
and
rorb
push
test
adc
or
fisttpl
pusha
jge
adc
jno
cld
and
pop
lock
xorb
dec
and
ss
fstpt
push
add
sub
test
inc
notl
aam
sbb
aad
jno
pusha
es
sti
stc
decl
dec
mov
gs
sbb
pop
xchg
pop
mov
int3
adc
mov
rclb
push
xchg
shll
xchg
mov
add
fs
outsb
sti
lahf
jg
into
sub
jg
arpl
inc
loopne
inc
fiadds
mov
jl
jle
mov
push
fildll
xchg
jno
call
and
sub
mov
mov
cltd
push
fldenv
or
jl
fnstsw
pop
aas
test
sbb
je
xor
mov
sbb
add
int
sarl
jb
inc
push
leave
cmp
jg
das
and
movsl
sub
adc
xchg
xchg
or
sub
cltd
sbb
mov
jo
jo
xor
daa
sub
pop
jg
std
push
jnp
daa
add
insb
imul
xlat
add
ss
mov
out
adc
lock
xchg
mov
stc
insb
test
or
jmp
inc
jbe
sahf
or
xchg
mov
add
xchg
ret
push
cmp
adc
fsubs
sub
adc
aad
push
xchg
mov
jmp
xor
pusha
xor
lods
push
lods
push
pop
mov
push
cltd
mov
insl
pop
ds
pushf
pop
cmpsl
sub
xlat
cli
add
or
add
lret
mov
repz
mov
clc
ror
xor
and
mov
cmp
jmp
adc
inc
movsl
pop
shll
jl
fxch
or
mov
push
jbe
push
jae
cmp
or
and
mov
cmpsl
push
out
dec
inc
xchg
fs
dec
xchg
stos
cld
push
into
pushf
clc
sbb
leave
lcall
lods
out
hlt
xchg
mov
jmp
inc
cmp
out
addl
shrb
lret
add
sub
in
cli
lods
movsb
stos
test
lcall
and
pop
push
mov
or
pop
or
add
leave
fxch
das
push
out
sbb
into
mov
lcall
jbe
mov
das
movsb
pop
jmp
testl
in
push
mov
jge
dec
pushf
mov
fs
adc
xor
mov
sbb
lds
cld
xchg
arpl
call
fisubrl
jecxz
or
push
mov
and
jl
mov
repnz
loope
jae
negl
or
push
xchg
popa
add
push
add
call
fdivs
fnstcw
pop
fs
adc
stos
int
hlt
mov
in
or
repnz
mov
push
lret
pop
ds
push
adc
sbb
pop
out
testl
jnp
sub
mov
lods
mov
mov
mov
movsb
int3
jno
push
aam
add
cmp
sub
cmpsl
and
inc
scas
push
pop
pusha
or
hlt
and
rcrb
enter
fdivl
rclb
popf
dec
adc
hlt
stos
shl
sbb
popf
into
mov
repz
rcl
and
call
inc
lds
dec
repnz
inc
out
mov
dec
push
push
xor
xchg
cmp
mov
leave
adc
inc
jae
icebp
or
leave
mov
outsl
pop
or
pusha
mov
lahf
xchg
pop
and
and
mov
xor
adc
iret
jl
addb
icebp
mov
jmp
pop
movsb
sbb
call
cmp
pusha
push
mov
xor
mov
icebp
push
sub
repz
lock
popa
scas
jmp
and
pop
lahf
push
lahf
stc
test
f2xm1
push
icebp
pop
cwtl
push
jmp
nop
mov
and
cltd
cmp
cmp
pop
or
jmp
cs
cwtl
push
in
mov
dec
insb
rorl
imul
push
fistpll
int
call
int
jo
imul
subb
push
clc
ja
lret
cwtl
stos
lcall
or
push
movsl
notl
into
mov
adc
xor
push
int3
adc
out
pop
sbb
sub
lods
jne
push
outsb
lock
jg
adcl
xchg
daa
sbbb
or
xchg
cmp
mov
das
and
shr
xchg
inc
push
sbb
aam
and
out
dec
jb
ret
aam
std
mov
les
jnp
loope
aam
xlat
insl
xchg
push
jg
pop
push
pusha
scas
fidivl
rorl
stos
cmp
mov
push
testb
push
xchg
or
mov
das
call
lret
xor
fildll
jns
sbb
mov
lret
mov
xor
push
sub
push
xlat
lock
xlat
pop
cmp
adc
lock
rorl
aam
or
movsl
popf
fildll
js
stc
pop
imul
test
jl
pop
leave
sbb
fists
inc
les
jno
pop
fnstenv
mov
inc
jae
mov
stc
or
sbb
cmp
and
xchg
lret
jb
push
inc
pop
lods
shll
jmp
cmpsb
pop
fdiv
popa
jl
push
imul
xchg
out
insl
adc
jmp
sub
outsb
jg
in
and
int3
push
daa
adc
cmp
sbb
and
fcmovnb
mov
pop
leave
mov
stos
sbb
sahf
inc
add
cmpsb
out
repnz
pop
popf
push
add
mov
sub
push
mov
jno
xor
dec
xchg
sub
cmpsb
or
mov
jecxz
pop
cmpsl
jns
outsb
cmp
fists
fidivs
lret
or
adc
lea
sarb
cli
push
mov
insl
mov
xlat
negl
inc
nop
in
ja
data16
cmp
and
or
inc
mov
pop
movsl
adc
movsl
sbb
xor
in
adc
pop
je
loopne
cmc
mov
into
push
push
orl
loopne
test
lret
call
push
iret
push
test
xchg
ficoml
ljmp
iret
push
mov
push
rclb
sub
lahf
and
mov
cmpsl
sub
loopne
xchg
enter
jp
test
sti
idivl
popf
in
nopl
scas
mov
out
into
js
cmp
lret
or
or
add
imul
jo
or
or
loope
ror
movsb
adc
out
mov
pop
pop
add
aas
cmc
cs
sbb
jg
popa
lds
outsl
aaa
icebp
xchg
rorb
push
imul
push
clc
daa
test
stos
leave
mov
movsl
lock
xchg
fs
add
mov
dec
sbb
ret
xchg
add
and
xchg
jmp
fmuls
xchg
fwait
pop
push
adc
lsl
jnp
sbb
mov
or
insb
mov
lahf
fstpt
or
push
xchg
sub
mov
mov
dec
out
pop
vcomiss
adc
in
and
inc
insb
sbb
pop
mov
loopne
idivb
sbb
mov
mov
push
ss
mov
fmuls
in
imul
shlb
sti
std
sub
pusha
inc
mov
ds
jp
out
jg
inc
add
jp
enter
push
pop
and
and
aaa
roll
leave
mov
push
subl
inc
mov
cmc
ret
add
sbb
loopne
mov
into
push
repz
xchg
rcrl
push
xchg
push
ds
xchg
xchg
fstl
cmpsl
das
aad
in
ret
scas
sub
mov
mov
in
sahf
cmc
fisubl
je
dec
push
sbb
ret
jne
sti
pop
pop
xor
out
lret
adc
stos
add
arpl
clc
movsb
sahf
scas
cmp
insb
out
ljmp
mov
dec
mov
inc
cmp
mov
rcr
sub
fidivrl
mov
stos
mov
cltd
fbstp
pop
in
cmp
push
stos
mov
ret
jmp
lahf
lods
jecxz
xchg
add
mulb
jb
cltd
push
adc
cmpsl
xchg
out
add
rcrl
fistl
js
outsb
inc
pop
popf
or
outsb
ds
push
push
mov
jne
push
push
mov
adc
subb
mov
jmp
jmp
adc
xchg
loop
enter
inc
adcb
out
in
dec
or
scas
or
in
xor
or
or
sbb
or
out
xchg
stos
arpl
je
lds
scas
jge
dec
stos
jnp
mov
in
test
popa
pop
dec
xchg
out
lret
bound
xor
pop
aaa
pusha
testl
shrb
out
push
xor
mov
mov
mov
or
stos
push
jge
dec
aaa
or
pop
repnz
jne
or
fdiv
push
nop
jle
mov
dec
aam
mov
fucom
es
in
and
lods
out
push
stos
shr
sub
nop
repz
inc
leave
cmp
addr16
hlt
add
xor
jl
mov
hlt
daa
sub
cli
imul
push
insb
es
repnz
cmp
sub
popa
out
cmp
je
xor
iret
inc
xlat
add
enter
cs
inc
push
or
data16
lea
sti
fstl
adc
call
fs
scas
inc
sub
insl
sub
insl
or
mov
mov
mov
add
or
mov
mov
sbb
stos
jmp
xlat
or
clc
dec
sbb
jns
add
push
shr
les
and
xchg
jae
int
pushf
cld
ret
dec
movsl
orb
cmpl
jl
mov
push
je
xchg
fs
mov
add
sbb
xchg
inc
push
cld
pop
cmc
mov
ret
lods
push
mov
sti
mov
dec
jmp
and
loope
clc
dec
lret
test
add
dec
movl
mov
hlt
inc
add
popa
subb
sub
mov
lahf
data16
adcb
jb
fisubl
roll
in
adc
dec
out
insl
icebp
xor
inc
pop
ljmp
sub
test
ret
or
sbb
jnp
std
insb
sbb
in
pusha
dec
sbb
cmp
mov
sub
pop
mov
das
pop
fwait
xchg
in
movsl
mov
mov
lcall
imul
and
push
mov
inc
mov
fwait
inc
mov
cli
jns
sbb
ljmp
xchg
daa
popa
in
shll
jo
dec
inc
fsubl
jge
lea
push
push
push
xor
test
cmc
ljmp
inc
jbe
adc
or
out
pop
push
inc
dec
lock
into
add
dec
push
icebp
and
clc
iret
in
test
sub
and
inc
fwait
jnp
les
pop
xchg
rcr
popf
mov
shrb
das
cli
push
jo
sbb
cld
pop
xor
movsl
push
jo
push
mov
and
jg
adc
inc
push
stc
mov
push
enter
sbb
jb
sub
add
mov
dec
fiadds
shll
ret
mov
lock
adc
adc
mov
out
add
sub
xor
and
or
mov
push
add
cwtl
pusha
pop
add
pushf
call
sub
movsb
xchg
mull
inc
push
scas
pop
lock
imul
sub
leave
mov
nop
lea
stos
js
adc
lea
or
inc
inc
idivl
shlb
push
xchg
mov
adc
cmp
or
and
sub
sub
mov
push
int3
fsubrl
jnp
mov
sti
mov
fsubrs
pop
and
maxps
es
push
sbb
xchg
xchg
jmp
aad
jmp
inc
sti
filds
mov
mov
jb
jbe
dec
cmpb
shr
xor
ljmp
jnp
add
add
and
mov
dec
test
jmp
or
sahf
push
out
cs
nop
lret
lahf
and
dec
insl
je
enter
dec
in
mov
roll
jne
loop
lods
dec
gs
pop
cmp
cmpsb
insl
imul
gs
addr16
push
int3
dec
cmp
jmp
xchg
pop
pop
sahf
orl
hlt
mov
insb
mov
dec
lcall
movsl
or
mov
xor
or
xchg
shrl
xchg
ret
or
xor
std
fs
enter
outsb
stc
and
testl
sbbb
xor
xchg
jb
aaa
sbbb
int
mov
fstpt
dec
faddp
xchg
divl
inc
out
or
push
jne
lret
mov
in
jg
jbe
or
lods
mov
xchg
xor
rorl
mov
sarb
mov
leave
dec
test
shr
cmp
xchg
jl
data16
mov
ficompl
es
lret
notb
and
pop
pop
push
fstpl
push
inc
cld
sub
sub
icebp
mov
out
ja
mov
sbb
testb
jg
mov
sarb
lret
out
int
sti
lret
pop
fidivl
shll
mov
ret
jb
test
flds
jb
xor
daa
jno
adc
pop
pushf
jecxz
inc
sbbl
aaa
push
scas
rclb
push
push
out
mov
das
cmc
imul
lret
dec
sub
mov
cli
and
pop
fadd
sbb
push
pushf
lods
ficoms
jb
mov
jnp
orl
or
test
in
rorl
cmp
xchg
or
push
sub
xchg
ja
mov
enter
push
jo
or
out
xchg
xchg
pop
sub
mov
dec
out
cs
cmp
inc
and
add
je
movsb
cmpsl
fisttpl
lcall
ja
dec
int3
inc
dec
leave
dec
mov
test
xchg
ja
sub
inc
push
gs
cmpsb
sbb
xlat
test
mov
sub
aaa
sahf
test
ljmp
jo
test
cld
loopne
push
fsts
jo
xchg
jno
push
cmp
daa
xor
sbb
jno
jge,pt
insb
ret
jbe
sbb
adc
cmpb
es
fwait
movsl
mov
fstl
orb
adc
inc
addr16
mov
sub
test
mov
test
in
jmp
inc
push
lahf
jp
in
sbbb
push
mov
fisttpl
lahf
scas
clc
add
xor
sbb
xchg
mov
lds
shll
inc
ss
stos
in
add
inc
jb
cwtl
clc
nop
add
push
inc
inc
adc
and
xchg
xorb
pop
lcall
sbb
imul
mov
insb
cmp
pop
and
sbb
nop
xor
and
cltd
insl
sahf
lea
cmp
imul
mov
mov
in
out
sbb
or
or
in
es
int3
pop
andl
cmpsb
sbb
lret
movsl
mov
xchg
lret
jge
shrl
push
mov
fcomps
insl
pop
and
test
add
mov
mov
sti
jmp
in
test
test
jne
pop
or
or
push
or
filds
aam
cs
push
add
movsb
push
mov
pop
jbe
mov
dec
add
in
incb
cmovo
addr16
fwait
in
mov
mov
lcall
lcall
sbb
xchg
xor
stc
into
jmp
leave
lcall
fdivs
addr16
or
int
into
push
arpl
scas
add
leave
xchg
inc
popa
in
dec
or
aaa
mov
jb
sub
rclb
push
enter
pop
or
push
pusha
arpl
pop
rolb
nop
outsb
ss
fs
popa
jge
ret
cs
repnz
stos
daa
test
mov
fwait
jecxz
popfw
or
add
jmp
jl
sbb
xor
push
scas
sbb
int3
mov
add
push
xchg
imul
les
fmuls
pop
cmpsl
addb
into
loopne
outsl
cmp
popa
fildll
and
loope
inc
mov
or
and
cltd
je
xchg
enter
mov
loop
xchg
pop
daa
sbb
ss
out
sub
sbb
add
pop
pcmpgtb
pop
mov
les
ficompl
cld
dec
test
jg
test
outsl
add
pop
mov
stos
push
sub
fdivrl
or
shlb
sbb
fcoml
push
lock
sub
mov
out
dec
jle
sub
dec
test
mov
fwait
mov
scas
and
jg
rcl
add
rcr
inc
mov
addl
add
leave
push
cmpsl
pop
mov
xchg
call
imulb
movsl
push
in
jo
pop
and
adc
iret
dec
adc
push
adc
mov
cwtl
insl
fwait
out
add
mov
jno
fistps
xlat
inc
shl
or
inc
jge
jae
int
push
ja
add
mov
stos
lret
cmpsb
nop
pop
out
aam
mov
out
push
lahf
adc
repz
in
cmp
mov
jmp
cmp
popa
out
mov
orb
add
mov
and
jecxz
lret
nop
out
cmp
mov
sbb
sub
add
xchg
mov
mov
cwtl
hlt
mov
or
cmpl
cmp
add
sar
push
jno
pop
in
xor
js
or
mov
lret
mov
dec
or
test
int3
add
push
adc
loope
xchg
mov
test
xor
adc
lds
adc
or
inc
sti
mov
pushf
push
adc
into
dec
mov
mov
scas
adc
hlt
shlb
out
pop
cmp
sbb
jbe
mov
mov
lea
ss
xchg
scas
jo
mov
mov
push
adc
xchg
push
jmp
mov
js
clc
mov
cltd
push
inc
in
sbb
and
repnz
sub
xchg
or
xor
cmp
inc
scas
rolb
pop
xor
test
scas
and
xor
sbb
xor
orl
bound
pop
in
inc
jp
adc
xor
in
pop
scas
mov
movntps
xchg
scas
stos
mov
lea
xor
call
dec
inc
sbb
lods
pop
std
out
pop
cs
movsb
cmp
ds
jo
icebp
stc
sbb
aaa
jp
add
mov
aaa
xor
test
aad
lds
dec
sub
adc
xor
movaps
add
mov
insl
fsubrl
pop
sub
stc
mov
leave
fld
or
test
rcrb
cli
cli
cwtl
sub
sub
cmp
pop
inc
adc
jl
popa
in
movsb
jbe
mov
sbb
popf
data16
xchg
inc
popa
xor
fistpl
jmp
movsb
adc
adc
push
pop
int
fisubs
sarl
inc
loopne
and
sub
outsb
scas
enter
sbb
gs
lea
into
je
movsl
pop
adc
cmp
mov
xchg
cmpsl
into
xor
daa
jae
fwait
shrl
xor
hlt
fadds
mov
push
int3
out
out
xor
fwait
in
mov
adc
addl
sbb
jbe
push
inc
sbb
out
and
mov
xor
mov
loop
xchg
sti
xchg
inc
jg
loope
hlt
mov
cli
sbb
jae
fiadds
cmp
popa
scas
jp
outsb
mov
scas
jecxz
jns
xchg
into
fwait
pushf
movsl
mov
fsave
pop
arpl
shlb
fs
pusha
fisttps
add
insl
iret
imul
test
add
push
mov
and
mov
push
pusha
dec
xor
pop
dec
outsl
cmp
push
daa
rolb
pusha
lahf
mov
in
jno
lods
mov
shlb
scas
cli
push
in
mov
jle
jl
data16
jne
fcmovu
mov
rorl
push
stos
jno
pop
pop
cltd
hlt
push
or
enter
push
stos
cwtl
add
popf
or
sbb
test
jmp
inc
jns
inc
outsb
andb
test
jp
push
and
pop
xor
addr16
ja
notb
sub
pop
insb
mov
or
mov
jge
lahf
pop
ljmp
xchg
or
mov
pop
jns
push
repz
dec
push
sti
cmc
clc
ret
loop
rcr
mov
dec
inc
cli
clc
adcl
inc
jge
shlb
leave
pop
xchg
in
jmp
mov
repnz
lahf
int3
popa
cmp
rol
out
mov
jo
push
or
push
loope
shrl
and
xor
leave
mov
mov
fwait
nop
std
sub
dec
cmpsb
fisubs
fldl
clc
or
ret
faddl
and
mov
push
pop
fisubrs
add
jnp
imul
hlt
sbb
mov
mov
dec
lods
ret
adc
test
js
mov
imul
icebp
mov
or
loop
adc
jo
dec
call
scas
xor
imulb
scas
inc
lret
lcall
push
setge
lcall
pop
push
jo
aad
cmp
mov
mov
mov
fbstp
sbb
inc
nop
lea
sahf
test
inc
cwtl
lcall
insl
xchg
sbb
push
incb
pushf
aas
test
fstps
xlat
inc
push
cmp
xchg
in
mov
jle
jmp
fildl
lds
adc
cmp
repnz
push
pop
fcmove
adc
stos
outsl
push
imul
ret
movsb
fwait
rorl
inc
push
jno
cmp
xchg
push
dec
fbld
dec
ja
sbb
loop
sti
imul
mov
dec
or
cmpsl
inc
lods
pop
jp
mov
out
pop
aaa
mov
in
fcom
test
lock
xchg
add
jle
js
xor
rcrl
xor
bound
stos
int
mov
add
test
lcall
jmp
stos
mov
imul
mov
and
imul
pop
mov
inc
dec
into
daa
and
xchg
add
out
insb
lcall
into
sub
pushf
and
push
cmp
pushf
leave
lods
stc
mov
addr16
jbe
mov
lret
or
pushf
mov
adc
mov
push
divb
lds
sbb
shlb
aad
imul
and
xchg
mov
sahf
sbb
mov
fwait
mov
add
hlt
jno
mov
loop
leave
insl
push
inc
popa
jae
mov
cmpsl
mov
mov
test
push
push
call
xchg
lret
sbb
dec
ret
call
mov
insl
outsl
fs
rclb
arpl
lods
cld
movsl
adcl
aam
sbb
inc
sub
leave
pop
add
fdiv
mov
cli
loope
push
or
adc
inc
add
ljmp
sub
cld
add
or
mov
ficomps
mov
test
mov
test
xchg
js
pusha
inc
mov
rcpps
out
lcall
and
jmp
push
imulb
add
inc
in
xor
addr16
loope
nop
scas
add
les
test
add
xor
and
xchg
dec
mov
dec
aaa
pushf
je
icebp
push
loop
cmp
cmp
xchg
repnz
call
arpl
andl
xor
leave
dec
dec
daa
sbb
cs
rorb
mov
jb
arpl
shlb
add
xchg
push
jne
push
and
pop
sub
push
rcll
jns
jmp
fists
mov
ret
mov
add
int3
add
mov
push
jns
arpl
lret
pop
cmp
add
sbb
int
jg
subb
jo
aad
rclb
lret
mov
out
popa
cmp
imul
mov
cmc
mov
mov
jp
push
test
mov
xor
fldt
sub
mov
jecxz
or
dec
int3
or
pop
stc
mov
test
dec
mov
inc
clc
xor
outsb
lock
shrl
dec
lods
popa
fsts
cmc
shlb
jg
test
xor
mov
xor
push
scas
jl
xor
jge
adc
mov
in
popa
outsb
mov
adc
jno
inc
addb
mov
rcrb
xchg
mov
fwait
popa
cs
mov
ss
aas
xchg
adc
push
addl
dec
rcrl
mov
push
pushf
mov
add
mov
fdivrs
cli
fldl
sarl
mov
and
dec
or
mov
aam
mov
mov
add
pop
jo
add
stc
xor
les
ret
add
jle
fildll
sub
mov
push
call
xor
push
or
inc
add
sbb
lds
cltd
add
xbegin
sub
imull
push
stos
xchg
xchg
xor
pusha
pop
mov
int
mov
adc
test
fcmove
add
repnz
push
push
movsl
in
push
scas
push
mov
popf
mov
scas
stos
and
and
add
mov
mov
movl
push
cmp
aaa
push
cmp
push
loopne
test
pusha
or
mov
movsl
dec
data16
repz
lret
icebp
sub
je
in
xor
lods
mov
adc
add
pop
mov
adc
cmp
and
xchg
push
jo
pop
ret
jae
les
rcll
lcall
roll
jnp
cmp
push
int3
dec
push
dec
add
lods
xlat
xor
push
mov
into
dec
xchg
lea
rolb
test
jo
sahf
ds
mov
lcall
jg
dec
sub
aam
xchg
stos
fisttpll
xchg
mov
xor
inc
add
add
mov
mov
xor
cmpsb
outsl
mov
neg
cmpsb
jge
dec
fidivs
decl
pop
pop
sbb
sbb
sbb
mov
addl
jl
daa
cmp
jo
jecxz
je
adc
testl
add
das
inc
cmp
pop
push
sub
ja
adc
mov
and
sbb
jnp
jno
scas
rcl
arpl
mov
xorl
push
mov
rcl
add
repz
std
or
es
jno
adc
push
mov
jmp
int3
sbb
test
adc
cmp
dec
es
inc
mov
xchg
stos
ja
mov
cmpb
stc
imul
add
xchg
jmp
mov
pusha
pop
jecxz
cmp
xor
cmc
dec
push
jo
bts
cmp
popa
dec
stos
lret
pushf
and
xor
ret
jecxz
sbb
or
xchg
dec
sub
fisubl
clc
pop
mov
or
adc
dec
ja
fidivrl
inc
popf
and
xchg
push
outsb
xor
cli
xor
test
xchg
mov
ffree
pop
jg
jge
cmp
mov
adc
cmp
shlb
rcll
mov
jo
loop
adc
jae
stos
mov
mov
jp
inc
icebp
sbb
rcrb
cmp
xchg
aam
push
sahf
cmp
sarl
mov
pop
lock
add
cmp
xor
inc
movsl
ror
stos
or
les
inc
xchg
push
mov
cmc
ss
xor
xchg
pop
stc
and
inc
imul
mov
push
sub
cmp
jns
cld
cmpsl
mov
into
repz
mov
mov
push
xchg
int
movsl
in
and
cli
in
pop
sbb
and
inc
inc
mov
lock
cli
outsb
bound
mov
pop
jnp
mov
lret
loop
stos
mov
mov
pop
das
mov
idiv
add
dec
xchg
push
lret
pop
loope
and
sbb
and
push
clc
fistps
jb
std
fsubrl
pop
xor
cltd
gs
fdiv
and
fsubs
cmp
ljmp
and
ret
popf
pop
push
or
in
add
mov
adc
nop
je
dec
xchg
jp
mov
lods
and
mov
mov
xor
insl
iret
mov
pop
pop
xor
mov
ret
call
mov
xchg
dec
mov
mov
push
mov
pop
add
mov
dec
add
push
stos
xchg
push
bound
loopne
mov
and
aaa
aas
jae
cmpb
add
cmp
lods
jge
out
cmp
fwait
adc
shlb
mov
add
inc
jns
iret
push
push
push
in
jl
dec
mov
sub
jl
in
fisttps
fwait
mov
jne
inc
filds
mov
push
imul
inc
lcall
sub
sbb
cld
mov
ja
sbb
sbb
jno
or
out
enter
inc
xorl
cmpb
adc
mov
and
out
lods
gs
push
cmpsl
cmpsl
mov
xor
in
and
aad
repz
stos
add
clc
xor
popf
sahf
shrb
sahf
sarl
push
sbb
sub
pop
dec
pop
cmp
xor
test
iret
arpl
mov
or
cmpb
cmpsb
mov
cmpsb
pop
outsb
xor
ret
mov
inc
aad
lahf
pop
jno
lock
inc
lcall
std
loopne
sub
and
inc
add
dec
sahf
mov
sub
aaa
sub
cli
leave
js
fs
test
mov
cmpsb
std
js
jecxz
dec
push
lods
jae
shll
inc
mov
cld
lods
dec
imul
leave
sti
push
sahf
inc
subb
and
push
and
test
push
inc
inc
out
fsts
orl
subb
icebp
xchg
push
clc
adc
stos
imull
scas
mov
adc
stos
jnp
mov
cmc
inc
popf
push
xor
fwait
xchg
cmpsb
fldenv
test
gs
jg
inc
or
jmp
adc
add
mov
inc
into
push
push
dec
pop
cltd
add
inc
cmpsb
jno
push
cmp
inc
mov
icebp
lods
ljmp
lods
dec
sub
and
pushf
rcrl
mov
in
outsb
pop
jge
and
fwait
sub
leave
pushf
mov
push
pop
inc
cld
jb
push
inc
sbb
je
mov
cs
xor
lods
jg
mov
rcrb
xor
pop
outsl
stos
mov
mov
add
dec
inc
sbb
push
fwait
arpl
dec
pop
xchg
call
fwait
leave
add
pop
xchg
cmp
adc
cld
addr16
cmp
mov
push
loop
ficomps
add
mov
push
mov
mull
mov
or
in
leave
or
sbb
movsb
lds
hlt
cmp
dec
cmp
fs
cmp
leave
movsb
xchg
lret
adc
push
imul
shlb
xchg
xchg
mov
push
js
jmp
inc
pop
mov
xchg
fidivrl
dec
cmpsb
mov
testb
jns
cmpsb
repnz
cld
or
aad
stc
out
out
stc
or
fld
mov
test
inc
sarb
push
popf
push
ljmp
inc
frstor
loopne
mov
loope
xor
bound
clc
sbb
pop
xlat
sub
bound
and
mov
cli
stos
inc
xor
loop
js
test
cmp
sti
fsubrl
and
adc
or
std
lret
push
cmp
cwtl
or
jbe
xchg
fwait
inc
jmp
pop
pop
fiaddl
mov
push
lret
cmp
add
aam
xor
inc
scas
and
repnz
out
in
mov
sahf
insb
push
mov
mov
dec
fisttpll
add
mov
inc
cwtl
jb
lret
ftst
xlat
in
xorb
cmp
sub
mov
arpl
not
int3
mov
inc
int
xchg
movl
lds
ficoml
push
pop
std
clc
sbb
imul
sbb
icebp
repnz
pop
movsl
mov
mov
jbe
enter
mov
mov
xchg
lods
pop
imul
in
jne
inc
jge
gs
les
adc
pop
add
ret
inc
vmaxpd
bnd
repnz
movsb
jmp
lret
outsb
les
addr16
xchg
add
mov
mov
js
cltd
loopne
xchg
scas
loopne
mov
jecxz
inc
sub
push
sar
jno
in
push
sub
insb
or
outsb
mov
out
lods
pop
jae
sub
pop
leave
add
pop
out
mov
int3
hlt
cld
cmpsb
lods
and
lock
test
cmpsl
les
mov
adc
dec
inc
push
mov
rorl
das
pusha
mov
daa
popf
jae
stos
lods
mov
dec
jle
pop
jb
sbb
mov
fidivrl
push
add
sub
xor
sahf
lds
inc
outsb
cmpsl
mov
sti
dec
sbb
xor
cltd
cmp
lds
or
mov
sub
lods
and
xor
sbb
incb
daa
loope
or
push
cmpsl
lods
jge
movsl
jb
enter
fidivs
stc
jo
or
cmp
test
rcrl
cli
loop
add
fimull
xchg
aaa
xchg
test
test
adc
mov
cwtl
mov
mov
ret
xor
je
sbb
adc
dec
fwait
pushf
jo
mov
in
stc
pop
xchg
cmpsb
push
xchg
dec
fisubrs
and
mov
mov
adc
and
pop
in
pop
or
cmp
nop
mov
fwait
lds
xchg
dec
mov
xchg
pop
jmp
dec
mov
stos
cld
sbb
jo
test
jle
in
push
push
in
inc
loope
mov
pusha
out
mov
dec
push
insl
test
jl
fisubrl
loop
pop
js
mov
mov
pusha
test
lea
jmp
jae
mov
xor
outsl
into
lods
add
pop
sbb
insb
ret
jno
fwait
outsb
cmp
jno
mov
or
add
fcompl
test
jb
xchg
dec
dec
popa
fsts
negl
cmp
mov
xorl
pop
ftst
adc
mov
jp
push
sub
sbb
pusha
imul
mov
xchg
push
test
ret
jb
adcb
ret
cmp
pop
xchg
scas
scas
adc
adc
loopne
std
rolb
sub
pushl
push
loop
push
pop
push
mov
mov
fsub
loope
pop
mov
es
ret
in
push
int3
addr16
and
stc
or
fnsave
and
push
fstpl
sbb
add
pop
repnz
cmp
pop
xchg
dec
xchg
mov
sub
add
lods
fnsave
fnstenv
inc
into
lea
push
dec
cmpl
mov
aad
imul
lods
mov
and
and
pusha
and
adc
mov
hlt
jle
and
or
dec
mov
lods
clc
cmpsb
xor
cmpl
mov
xor
jno
jns
test
push
xor
adc
imul
decb
shrl
sbb
das
push
jp
ss
es
mov
mov
sub
pushf
aaa
clc
dec
je
ret
stc
fs
int3
pop
pop
xor
mov
or
add
cmpsb
popf
in
fcmovb
cltd
aaa
adcb
sbb
out
shrl
add
and
into
mov
lahf
cs
gs
lahf
jo
pop
testb
outsl
jo
nop
add
or
add
or
xchg
pop
imul
fcomps
pop
dec
or
jno
ljmp
jne
jle
and
ds
in
dec
adc
cmp
fmuls
jg
rol
lea
call
xchg
lods
std
test
in
hlt
cmp
jno
or
fdiv
jbe
adc
pop
pop
pop
int3
stos
gs
mov
lret
sub
sbb
popa
cld
or
lcall
pop
filds
fwait
jne
jmp
leave
mov
push
xor
mov
imul
adc
dec
mov
push
mov
out
dec
push
push
data16
cli
add
mov
test
inc
dec
sbb
jle
icebp
cmpsl
aad
insb
mov
rcl
mov
or
js
pop
clc
lret
cmp
mov
pop
jo
push
sti
inc
mov
hlt
in
push
jns
or
dec
outsl
bndldx
fistps
cli
inc
mov
das
xor
ja
fs
mov
sbb
stos
pop
loop
aad
scas
je
pop
inc
lret
inc
xchg
xlat
xor
les
enter
pop
ss
rolb
inc
movsb
out
dec
fisubrs
lret
rclb
pop
das
and
or
and
jno
fcmovne
test
std
lds
test
xchg
cmpsl
mov
stos
sub
lods
dec
hlt
icebp
xor
inc
mov
fisubrl
cs
shrl
addr16
loopne
sbb
incb
sbb
int
gs
ljmp
xchg
dec
stos
cmp
fwait
cmp
mov
jne
cmpsl
add
mov
inc
inc
je
je
push
imul
stos
xchg
inc
stos
jl
xchg
xor
jmp
imul
mov
lods
or
mov
and
fstpl
mov
ret
adc
lods
sub
out
fwait
mov
dec
jo
scas
inc
outsl
dec
mov
out
hlt
rcl
andb
pop
cmp
adc
xor
sub
cmp
push
cmp
mov
cmpl
dec
lock
aaa
popf
mov
adcb
jne
push
nop
mov
inc
fisubrs
in
jp
mov
lods
mov
out
enter
js
mov
sbbl
rcrb
mov
jno
call
cmp
out
xor
int
push
sbb
sbb
mov
mov
dec
pop
dec
or
mov
jnp,pn
rcrl
cli
jo
and
outsl
ror
sub
aad
test
adc
sahf
or
aam
xchg
push
xor
ja
adc
dec
mov
dec
jo
jg
das
test
cmpsl
add
insb
inc
inc
rolb
pop
clc
insb
lret
rcrl
xor
orl
scas
or
sbb
in
and
stos
add
rorl
xchg
pop
xchg
insl
mov
scas
stos
rcl
imul
xor
jo
call
add
cmpsb
push
pop
and
dec
in
push
leave
pop
xchg
data16
fmull
pop
gs
jne
out
xchg
fsub
in
divb
fstl
mov
mov
mov
iret
push
sub
fsub
daa
out
inc
cmc
mov
cmpsl
in
mov
mov
jle
push
adc
lock
and
mov
in
push
and
mov
leave
mov
les
dec
in
inc
and
inc
cmpsl
lock
pusha
inc
or
aam
push
dec
cmp
cwtl
xchg
pushf
adc
cmp
sub
xchg
out
mov
mov
dec
add
stos
mov
mov
fs
shl
jno
mul
pusha
push
popf
sub
add
push
xchg
xlat
adc
subl
repnz
andb
nop
jae
fwait
lea
sub
and
pop
inc
cld
jle
pushf
movsl
repnz
popf
mov
cmpsl
inc
cmp
jnp
xchg
push
inc
insl
pop
mov
pop
jecxz
fwait
xor
add
cmpsl
outsl
dec
out
or
cltd
fbstp
fsubrs
pusha
push
jnp
mov
test
cmc
ret
mov
jp
lods
mov
or
out
repz
sbb
out
cmp
ds
pop
inc
adc
sbb
xor
pop
pusha
pop
and
push
xchg
outsb
ljmp
test
xor
out
or
cld
push
leave
outsb
dec
int
sub
add
popf
andb
dec
shrb
or
cmc
mov
cmp
movsb
insb
in
pop
cmp
cld
pop
cmp
cmpsb
inc
xchg
and
lea
inc
jmp
in
dec
das
rcrb
push
icebp
cmp
lds
test
jmp
xchg
inc
fwait
jle
or
out
sbb
push
scas
aas
jmp
scas
call
stos
cmp
cmp
mov
loop
icebp
or
dec
mov
mov
push
cmp
popf
out
fstp
loope
add
jmp
inc
jae
add
pop
lea
test
xorb
add
daa
fnsaves
xchg
int3
das
divl
shlb
gs
repz
cmp
sahf
inc
out
lock
or
push
add
mov
ss
push
inc
sub
sbb
mov
mov
iret
cmpsb
aad
rcrl
or
lret
leave
dec
fbstp
mov
ljmp
cmp
push
clc
icebp
outsl
xor
mov
jns
or
mov
movsb
dec
pop
sub
sbbl
je
mov
das
aaa
popa
fwait
mov
cld
xchg
and
cmpsl
push
inc
inc
sbb
popa
pushf
mov
jnp
pop
xchg
fwait
addr16
lods
sub
push
cs
stc
mov
ror
imul
xchg
inc
jb
or
gs
pushf
mov
xchg
scas
mov
push
cmp
push
aad
push
das
mov
cmp
orl
pop
cmp
subb
sub
mov
inc
out
and
xchg
into
repnz
mov
ja
adc
dec
mov
sbb
push
test
add
ds
pop
add
inc
add
adc
testb
push
pop
insl
in
fsubs
or
cmp
loop
insl
inc
xchg
inc
jl
mov
dec
ss
iret
cmpsl
push
inc
xor
adc
dec
push
or
mov
xchg
mov
push
adc
fcoms
add
jns
jmp
imul
js
sahf
sub
rclb
jae
loopne
sub
nop
jp
jmp
push
out
fnsetpm(287
loopne
xchg
leave
mov
imul
mov
sub
scas
pusha
ss
cwtl
shrl
cmp
loopne
dec
cmp
cmpl
inc
fs
pop
test
into
js
ret
ret
ss
std
push
and
jg
xor
leave
pop
and
imul
inc
stc
pop
in
inc
and
cmp
xorl
jge
aas
fdivrs
push
ret
fstps
fwait
cld
mov
aam
cmp
sahf
scas
jge
mov
jg
pop
rcll
jmp
subb
nop
add
xor
call
stos
adc
cmp
inc
xchg
lock
sbb
push
sbbl
push
xchg
sti
std
pop
xor
testl
mov
pusha
int3
adc
test
out
fst
or
pop
cmpl
shrl
jle
mov
xor
mov
mov
push
cld
ficoms
or
xor
xor
xlat
dec
das
fnsave
int
and
repnz
arpl
rcl
add
mov
stos
faddl
mov
stos
inc
loope
jno
inc
and
cmovae
add
jle
push
inc
xchg
sbb
mov
out
or
ret
push
loope
ds
or
sbb
ds
cwtl
add
jb
xor
outsb
jne
ljmp
pusha
adc
jge
data16
add
xchg
scas
push
sub
ds
jne
shr
mov
push
jo
out
dec
in
sub
jg
push
lcall
adc
mov
rorl
sarl
idivl
push
les
pop
pop
fnsave
sub
cwtl
push
pop
inc
sub
nop
add
scas
mov
or
pop
jge
xchg
cmp
ja
test
fiadds
cld
daa
pop
rclb
or
enter
arpl
xchg
out
xchg
xchg
lods
mov
add
mov
mov
mov
fs
xor
adc
fisubl
lcall
in
inc
js
push
fsubs
mov
pop
ljmp
int3
std
xchg
add
rcrb
loop
and
mov
aam
rorb
out
push
cs
gs
call
pop
enter
decl
add
in
adc
sahf
adc
mov
into
xor
inc
add
icebp
jmp
mov
jne
push
pop
add
adc
mov
lret
pop
sbb
push
jae
scas
sbbl
imul
gs
cmp
xlat
sbb
adc
loop
jnp
adc
nop
mov
xor
addr16
loopne
dec
cli
xor
cmp
daa
adc
cmc
mov
xchg
inc
lret
stos
iret
gs
nop
out
pop
push
jle
cld
mov
mov
jmp
dec
stos
jnp
cmpsb
test
sarb
ds
push
or
int
cmpsl
cld
test
adc
movsb
jg
jo
mov
add
into
fnstsw
pop
mov
sarl
outsb
dec
ja
add
mov
xor
xchg
inc
daa
into
and
sarb
or
test
scas
and
or
or
mov
jbe
sub
sub
dec
xor
ja
arpl
mov
xchg
jg
into
and
faddl
and
lret
pop
dec
sarb
pop
lahf
xor
lock
arpl
ss
xor
imull
pushl
repnz
cmpsb
rclb
lret
xchg
mov
or
pop
and
stc
adc
xchg
js
outsl
mov
das
dec
mov
enter
sub
mov
ror
push
mov
lret
inc
push
xor
negb
insl
shr
mov
add
add
les
in
loop
test
xchg
aas
xchg
lcall
hlt
mov
aam
add
pop
call
push
mov
out
mov
out
repz
and
mov
sbb
roll
cs
into
sarl
lods
lret
sub
insl
inc
dec
pop
movsb
pop
imul
jle
jmp
subb
cmpsb
jecxz
cmc
xor
sbb
adc
sub
insl
std
pop
arpl
xchg
pop
leave
lea
js
repnz
cmp
or
dec
adc
aam
rcrl
mov
mov
shlb
pop
incl
sbb
mov
xor
cmp
push
dec
and
arpl
dec
lcall
lods
sbb
sbb
loopne
xor
test
psraw
sub
in
mov
fdivrs
hlt
or
inc
add
lcall
and
jne
pop
fistpll
jmp
leave
fdivr
and
bnd
jl
add
iret
dec
imul
lcall
pop
test
mov
push
add
xorb
pop
les
jmp
call
ss
lcall
imul
stc
jmp
je
into
insb
cmp
add
fincstp
jge
imulb
or
dec
mov
xor
bound
pop
loop
arpl
or
jecxz
cmc
jp
or
dec
adc
mov
pop
push
dec
push
sbb
ss
or
loop
out
mov
mov
in
jno
pop
adc
pop
scas
sub
cmp
mov
rolb
inc
pushf
shll
ret
test
sub
ss
sub
ds
cmc
mov
out
pusha
imul
xor
inc
sbb
movsb
mov
push
cltd
insb
add
test
xchg
in
data16
cli
xchg
ljmp
scas
or
jae
in
jae
dec
dec
cmp
popf
das
int3
outsl
add
mov
mov
adc
pop
icebp
frstor
repnz
or
rcll
jecxz
jns
mov
jne
pop
sub
je
pop
cmp
fdivp
cmp
push
addr16
push
push
inc
ds
adc
push
add
cmp
daa
sahf
shll
sub
sbb
jns
sbb
pop
xchg
jmp
xchg
pop
addr16
cli
add
int
fildl
jo
sbb
jp
movsl
fsubrl
dec
dec
div
shl
xchg
xchg
fimuls
sub
subb
test
mov
sbb
and
stos
and
aas
xor
cwtl
shlb
mov
mov
cmp
mov
mov
dec
inc
mov
mov
outsl
fisttpll
inc
pushf
scas
xchg
nop
test
xchg
sti
insb
mov
mov
mov
mov
sbb
jae
add
push
xor
iret
dec
push
in
and
cmpb
aad
lock
adc
pop
cmp
mov
jmp
loop
mov
bound
cmp
or
adc
andb
ficompl
les
lods
mov
in
cld
dec
mov
aas
cmpb
mov
xchg
data16
stos
fcoml
add
test
jmp
lods
xor
adc
mulb
jmp
int3
cmc
cmc
cmp
adc
push
das
jne
push
test
xchg
fdivr
gs
adc
fstl
pop
and
dec
cwtl
lea
movsl
es
mov
mov
in
inc
jl
into
push
push
xor
adc
repnz
loop
test
sub
xlat
mov
mov
out
mov
push
pop
incl
mov
inc
adc
jnp
pop
fcmovnu
in
ja
mov
or
test
cmp
cmpl
loopne
rcl
lahf
mov
fdivr
xor
shll
and
sbb
loop
sbb
push
rcr
call
into
fwait
inc
mov
scas
ds
mov
shll
and
sarb
fcoms
dec
notb
psrlq
add
les
and
popa
sar
icebp
stos
or
inc
jo
repz
or
ja
test
sbb
jb
pop
mov
outsl
adc
stc
cwtl
rcrb
gs
in
out
sub
iret
cmp
push
shll
fisttpl
les
sub
and
mov
pop
xchg
test
sub
fsts
rcrb
testb
push
fildll
xchg
dec
loope
lods
xchg
push
jle
mov
mov
mov
imul
in
in
mov
cli
mov
jbe
loope
bnd
mov
jl
push
jmp
adc
sub
cmp
pop
movsb
mov
dec
xchg
je
mov
mov
pop
ja
out
and
call
adc
cmpsl
jo
xorb
cld
jo
sub
les
add
pop
sahf
jns
gs
cmp
test
xor
mov
xchg
lretw
mov
fisubs
lods
bound
dec
adc
sub
loop
pop
add
xchg
sub
movsl
jb
push
inc
push
mov
xchg
pop
jmp
iret
push
jb
push
push
push
inc
daa
sti
cmpsl
add
dec
add
popf
movsl
ja
xchg
jne
jl
out
into
cmc
scas
mov
jbe
js
clc
jecxz
sbb
dec
jg,pt
push
xor
bound
mov
jecxz
int3
hlt
push
xchg
push
fdivp
adc
jmp
mov
mov
xor
aaa
or
rorb
push
in
pop
mov
xchg
mov
loopne
dec
pop
sbbl
sub
jecxz
aad
shll
fs
push
xor
mov
push
shll
add
jbe
aas
fcoml
mov
out
into
stos
movsb
fstps
push
lds
icebp
inc
out
pop
jnp
sub
popf
xchg
mov
inc
fwait
testl
jmp
inc
insb
xlat
cltd
mov
jl
sub
ja
jne
imul
push
pop
jae
jmp
jp
test
mov
sbb
fldenv
sbb
movsb
rorl
mov
mov
xchg
cmp
imul
cmp
mov
pop
add
popa
cmp
shll
adc
mov
jno
cmp
sarl
stos
pop
popf
out
loop
cmp
adc
testl
pop
test
iretw
mov
push
sbb
and
stos
hlt
fwait
xchg
mov
dec
dec
dec
loop
pop
adc
imull
cmp
test
mov
jbe
rep
daa
xor
mov
mov
aad
data16
jl
pop
ljmp
push
int
adc
mov
jg
xchg
jae
mov
stc
mov
aas
test
iret
inc
sbbb
push
and
mov
in
sbb
daa
test
adc
inc
adc
xor
inc
scas
pop
mull
or
sbb
add
clc
pop
aam
aad
int3
push
cmp
pop
rcr
movsb
cmpsl
push
sbb
nop
mov
xchg
or
daa
inc
aaa
mov
inc
sbb
jno
int3
cmp
call
xlat
mov
sti
lret
and
sbb
jo
pop
mov
loop
dec
pop
lock
test
lea
das
jmp
add
pop
pop
jp
call
mov
das
daa
adc
icebp
jle
aas
mov
cmp
mov
mov
push
out
push
adc
dec
jns
mov
addb
testl
inc
lret
jecxz
cltd
loop
nop
outsl
inc
sub
xchg
xor
sbb
dec
sub
pop
and
int3
aad
je
aas
dec
mov
call
jns
out
adc
scas
sub
add
pop
push
std
jmp
fld1
es
and
push
xchg
mov
faddp
sbb
pushf
lds
sub
adc
mov
pop
fcmovne
jg
out
ljmp
outsl
add
lock
int3
jnp
rcrb
clc
fimull
decl
dec
pusha
sbb
lea
cmp
mov
insb
sub
imul
stc
xor
mov
jae
jp
jge
push
es
cltd
cmpsb
inc
xchg
fsub
mov
and
frstor
sub
icebp
ds
cwtl
push
inc
mov
pop
pop
rolb
sahf
mov
lea
sbb
jo
jge
or
stos
pop
jg
mov
sbb
fidivl
mov
out
mov
or
jae
imulb
lds
int3
or
xchg
mov
push
ljmp
ja
xchg
pop
jo
adc
mov
jg
fnstsw
fs
cwtl
sar
or
mov
ss
push
subl
mov
ret
ss
lcall
cmp
sub
lock
xchg
test
or
pop
jne
or
daa
mov
jnp
dec
cli
push
pop
xor
pop
cmp
sub
nop
cltd
and
cmpsb
mov
sub
sbb
cmp
sub
pop
pop
pop
jns
add
ret
or
inc
sub
xchg
jns
shll
ret
sbb
xor
scas
xchg
xchg
adc
rcr
dec
mov
mov
sbb
mov
mov
iret
sbb
and
rorl
test
in
dec
jns
jl
add
ss
pop
sbb
lcall
sub
test
int3
repnz
dec
loop
cld
jge
insb
int3
je
mov
mov
sarl
rcrl
cmp
pop
sbb
cmpsb
das
cmpsl
hlt
inc
sbb
dec
imul
jbe
adc
faddl
pop
mov
call
loope
add
loopne
jmp
jo
adc
sbb
dec
and
inc
sbb
fidivrl
dec
scas
js
divb
fcoml
cmp
jb
sub
movsl
fsts
es
push
repz
push
fistps
iret
and
push
xor
rorl
std
ss
aad
mov
add
adc
cld
mov
faddp
jb
icebp
fisttpll
nop
fiaddl
or
lods
adc
lcall
insl
mov
cmp
jl
sub
popf
ret
fldcw
jmp
xchg
test
pop
jnp
pop
jne
sub
add
fs
jecxz
scas
mov
dec
xor
sub
div
stos
aad
nop
in
cmp
adc
inc
pop
aam
arpl
cli
test
call
jg
std
jne
xchg
inc
xor
fiadds
pushf
jb
test
cmp
scas
xor
aad
sbb
dec
iret
sbb
std
imul
pop
push
jg
cs
sub
outsb
jo
mov
aam
lret
sub
ja
add
jmp
out
sbb
fistl
adc
dec
push
lods
aam
setns
push
inc
xor
sub
pusha
xor
popa
push
loop
xchg
pop
sub
and
loop
int3
xor
rorl
mov
jg
imul
mov
add
or
cli
sbb
xor
sti
xchg
cltd
sarb
lock
std
xchg
sbb
pop
les
pop
add
xor
xchg
lods
cwtl
lret
paddq
pushf
sub
fistpll
sbb
or
es
xchg
imul
and
lahf
pop
jecxz
ljmp
mov
out
ja
inc
sub
movsl
dec
cld
into
mov
lock
popa
adc
or
push
xchg
pop
ret
and
call
dec
sub
or
mov
icebp
enter
loopne
mov
dec
mov
xchg
and
popa
xor
test
cli
pop
f2xm1
addr16
and
imull
dec
ljmp
fists
scas
aaa
rorl
out
daa
pop
mov
aad
addr16
fstpt
lods
push
test
aas
inc
mov
lock
mov
or
mov
das
jns
in
xchg
out
jo
je
fs
and
mov
pop
dec
mov
sub
adc
mov
mov
phsubsw
or
aas
push
hlt
outsb
bound
js
sahf
xor
or
sti
std
push
int
pop
ja
xor
xchg
lahf
fisubl
cmp
pop
movsb
mov
in
inc
lods
test
pusha
mov
xchg
sub
ret
data16
jo
lret
cs
in
and
lret
add
cld
int
clc
push
movsb
mov
push
mov
pop
outsl
mov
in
jbe
mov
pop
or
aam
test
pusha
pop
pop
xlat
sarb
xchg
jbe
xchg
xchg
scas
repz
out
cli
jb
pushf
sub
jle
jbe
cli
popf
lds
mov
lea
jno
stos
add
add
inc
fldt
inc
jae
scas
cwtl
mov
push
outsb
push
lds
popf
inc
test
inc
imul
out
into
shl
and
loop
sbb
mov
sar
inc
mov
push
clc
sub
stos
or
inc
mov
inc
rorl
dec
in
ret
sub
add
out
sub
inc
xchg
add
and
jo
in
in
movsl
inc
and
push
dec
ret
jo
test
mov
sti
cmp
stos
nop
push
lea
outsb
mov
sub
in
je
mov
add
push
mov
fwait
into
insb
push
icebp
xor
fisubs
add
mov
sub
push
fwait
add
sarb
cwtl
in
rclb
das
fadd
cwtl
xchg
cwtl
sar
push
pop
and
or
in
inc
test
sbb
mov
outsl
cmp
sbb
outsb
mov
pop
xor
in
pop
pop
inc
ds
push
mov
xor
dec
je
push
dec
inc
stos
les
mov
sub
ja
dec
outsl
rcrl
ret
test
sahf
loopne
cmp
cmp
ss
popf
outsl
sti
lods
imul
dec
sub
out
dec
pop
test
xor
adc
rorl
sbb
stos
mov
add
lds
aad
xchg
test
fisttpll
or
mov
out
push
shl
insb
lcall
lcall
stc
mov
sbb
insb
repz
movsb
or
ss
adcb
and
and
sub
in
push
pop
divl
jne
push
lods
int3
ss
leave
push
loope
mov
xchg
xor
dec
jbe
add
xor
jp,pn
outsl
nop
push
jmp
cwtl
pop
push
loopne
addb
dec
ret
sbb
dec
inc
cmp
add
stc
add
cmpsl
insl
xchg
xchg
cmp
xchg
ret
scas
fbld
mov
repnz
xlat
lret
fsubl
andl
je
mov
test
cld
insb
rcrl
imulb
sbb
leave
xchg
cmp
mov
cmp
repnz
ds
pop
icebp
push
mov
mov
inc
rorb
sbb
aas
cmp
enter
mov
lods
push
pop
and
jb
mov
arpl
decl
mov
adc
sbb
mov
mov
xor
mov
cli
cmp
lea
fldcw
xchg
mov
pop
ds
pusha
sbb
push
stos
inc
fistpl
jbe
xlat
clc
ret
mov
lods
push
sbbb
adc
jg
add
jnp
add
lock
in
jle
test
mov
add
aas
lea
sbb
es
mov
pushf
sbb
out
inc
sub
inc
xlat
push
push
in
push
rorb
dec
push
inc
icebp
out
cmp
xor
test
or
ret
mov
lods
arpl
shlb
sbb
loop
xchg
call
push
stos
xor
aad
or
stos
push
mov
mov
js
sbb
jno
jo
test
daa
push
in
lahf
sbb
lock
and
xchg
sbb
sbb
cs
daa
jl
mov
jp
sub
sub
mov
inc
fs
push
fisubl
rorl
cwtl
cmp
fwait
sub
out
rorl
lcall
stos
data16
loop
or
in
xor
add
lock
test
mull
and
mov
adc
jge
mov
cs
imul
pop
push
out
shr
es
enter
sub
push
test
sar
fistpll
sub
movsl
dec
sbb
xlat
ds
mov
fstps
test
int3
aaa
daa
jl
ss
mov
gs
pop
inc
mov
or
mov
rolb
scas
addl
xor
or
imul
jp
jnp
fstps
in
jg
rorl
mov
loop
pop
std
in
je
in
cmp
loop
inc
fmuls
or
int3
scas
mov
jle
pop
addr16
rolb
imul
mov
aaa
loopne
inc
lahf
ret
or
inc
adc
sbb
neg
hlt
add
jae
dec
sub
cmp
mov
or
pop
ret
cwtl
cmpsb
xlat
dec
scas
dec
jo
pop
cmpsl
loop
inc
cmp
test
out
repz
insl
loopne
stos
sbb
mov
in
test
mov
sahf
sbb
aad
ss
out
adc
push
or
add
outsb
sbb
in
shrb
push
xchg
lcall
hlt
pop
jg
fwait
rol
or
cmp
repz
mov
insb
cmpsb
jecxz
pop
adc
es
adc
or
rol
aam
fisttps
stos
push
out
popa
add
shrb
pop
mov
jae
ret
pop
push
ljmp
and
xlat
adc
pop
jns
js
lret
jmp
fistl
dec
scas
dec
mov
cmpsl
inc
out
cmpb
and
inc
fcoms
lock
or
ss
mov
nop
aas
mov
or
jl
mov
pop
jp
jnp
cmp
pop
lea
dec
add
mov
inc
mov
stc
cmp
ffreep
rcrb
or
sbb
dec
lea
mov
add
pop
xor
mov
repz
push
or
dec
push
sbb
sbb
into
mov
je
mov
push
cmpsb
hlt
xchg
dec
in
inc
inc
fstl
fadd
sub
xsha1
cmpsb
mov
mov
mov
and
mov
adc
mov
sti
cli
in
scas
nop
inc
cmp
hlt
inc
lret
test
xchg
dec
mov
pop
pop
push
cmpsl
dec
push
adc
dec
insb
cmp
mov
mov
xor
sub
and
xchg
in
mov
cld
test
jns
adc
lahf
pop
mov
fwait
mov
loopne
daa
aas
into
lret
xchg
and
test
mov
je
lock
and
scas
push
cld
call
fcomip
cli
push
xchg
or
leave
fldcw
mov
jo
sbb
dec
fstps
fstl
xchg
outsl
or
into
leave
cmp
jmp
notb
pop
dec
mov
lea
cmpsl
add
loope
int3
int
sbb
adc
mov
into
jb
ror
aaa
imul
or
jmp
sti
enter
push
popf
movsb
jns
inc
shlb
xor
xor
inc
or
popa
mov
cmp
lret
dec
add
testl
sub
je
push
ret
repnz
addr16
xor
leave
scas
js
jnp
or
clc
push
test
push
cmp
mov
jno
pop
and
scas
xchg
mov
enter
mov
lods
lea
pop
or
imul
sbb
dec
icebp
or
sub
mov
push
sbb
and
mov
mov
sbb
movsl
cmp
stc
inc
mov
adc
inc
fwait
and
dec
adc
imul
dec
insb
and
movsb
pop
lahf
pushf
arpl
call
sbb
loop
mov
arpl
aam
icebp
fldenv
pop
cmp
pop
or
shlb
movsb
sahf
or
movsl
xchg
enter
jmp
arpl
pop
jne
inc
xchg
mov
aaa
es
test
loop
dec
sarl
push
popa
jo
and
mov
es
out
ljmp
and
rorl
mov
push
in
or
mov
dec
cmp
test
addl
ja
and
iret
xor
adc
cld
push
mov
movlps
xor
sbb
pop
subl
inc
fimull
mov
sbb
mov
lcall
fsubs
into
int3
mov
jnp
inc
jle
mov
mov
jbe
mov
pusha
mov
stos
sub
cltd
enter
pop
lods
sub
int3
ljmp
push
inc
xchg
and
iret
jmp
xchg
xchg
and
movsb
nop
xor
lds
inc
imul
imul
cmp
movb
mov
sti
ret
push
cli
mov
inc
mov
cmp
ss
fbld
and
dec
lock
jecxz
cmc
into
mov
lods
cmp
pushf
or
xchg
add
add
fimuls
shlb
xor
mov
pop
mov
out
pop
cwtl
cmp
push
in
mov
popf
pusha
xchg
lret
sub
push
test
inc
fcom
or
neg
sub
je
sub
lea
out
fcoms
sub
subb
xchg
adc
lret
inc
mov
fnstenv
adc
push
outsb
fiaddl
jb
dec
push
cmpsb
pop
jg
ljmp
add
pop
mov
in
push
mov
lahf
and
inc
push
xchg
adc
popa
push
loopne
movsb
xor
xchg
sbb
sub
add
ja
mov
int3
mov
out
pop
ret
xor
mov
cmp
mov
jp
lcall
xor
movsl
daa
scas
push
test
loop
push
jno
pop
gs
cmpsl
test
mov
xor
xor
dec
dec
popa
pop
sbb
push
sub
insb
or
cld
ftst
mov
in
es
add
inc
jo
out
popf
pop
push
imul
xchg
dec
pop
xor
pop
sub
sbb
xchg
fstpt
lcall
jno
arpl
es
and
icebp
cmc
mov
fidivrs
mov
loope
out
pop
push
and
pop
mov
mov
mov
jmp
push
shrl
out
inc
out
jge
xor
scas
dec
insb
popa
xchg
mov
gs
mov
hlt
into
pop
xchg
jle
cli
mov
dec
filds
sbb
mov
fimull
mov
cwtl
lcall
mov
cli
xor
mov
mov
cmpsb
jns
imul
cwtl
push
adc
mov
sti
cltd
aad
loopne
mov
je
sub
adc
sub
fcompl
daa
mov
inc
sbb
les
ja
fildl
lret
cld
ret
xor
rolb
out
mov
mov
jmp
jl
dec
xchg
or
xor
add
stos
loope
push
or
xlat
int3
into
in
sahf
mov
es
call
pop
in
mov
dec
inc
ljmp
dec
xor
and
sbb
push
sub
add
adc
xor
push
outsb
loop
out
jae
and
and
fbstp
sti
pop
call
jecxz
sub
mov
loop
xchg
push
cmp
idivb
rorl
lret
add
test
mov
es
pop
ds
pop
jbe
jne
push
adc
clc
adc
sub
jae
jnp
decl
ss
fs
xorb
andl
sbb
or
jne
in
pop
inc
addr16
jo
xchg
mov
cmp
cmp
negb
push
mov
int
mov
push
ljmp
mov
mov
jge
sub
dec
jle
clc
sub
stos
inc
xor
dec
pop
call
pop
test
fldcw
add
inc
test
rcrl
mov
pop
cmpsb
sub
inc
nop
mov
mov
mov
test
icebp
or
enter
mov
xor
xorb
mov
push
in
dec
mov
pop
das
aaa
sbb
out
mov
fs
mov
ljmp
ss
jge
stos
cmp
pushf
push
shll
in
lea
fadds
loopne
scas
icebp
jns
mov
add
mov
sar
and
sbb
divb
add
jb
or
sub
jb
jge
sbb
lret
or
push
push
int
cld
mov
xlat
mov
out
ret
sub
mov
daa
sbb
and
aad
mov
lcall
and
je
xor
fstl
add
dec
lds
icebp
and
fsubrl
push
lods
lds
iret
lds
adc
enter
add
dec
jge
and
js
fs
jle
inc
popa
call
mov
pop
mov
or
hlt
aam
mov
loope
xchg
jmp
cmpsl
fnstsw
es
cmp
push
orl
fldenv
jne
fcoml
andb
fldt
icebp
loop
inc
pushf
xor
aad
lods
mov
add
sbb
cmc
add
lcall
clc
clc
shll
inc
push
mov
lret
adc
fs
fnstsw
mov
pop
pop
xor
loope
stos
sbb
push
fistpl
and
xchg
jno
ds
xchg
insb
sub
mov
ljmp
gs
insb
cmpsl
sub
pop
lods
pop
lret
andl
pop
insl
mov
dec
aas
lret
and
mov
imul
cmp
sbbl
outsl
pop
mov
xor
xchg
push
fiaddl
js
popf
pop
and
mov
cmpsb
add
pushf
mov
fistpl
jp
mulb
out
jl
lock
or
mov
fimuls
dec
test
arpl
jo
dec
xchg
mov
neg
es
and
xchg
jnp
fsts
cmp
popa
gs
adc
mov
jae
dec
or
cmp
or
enter
adc
pop
adc
cmp
shrl
testl
jmp
mov
xor
sti
mov
or
data16
push
stc
xlat
loope
movsl
mov
sub
xor
les
fbld
push
adc
xlat
xchg
sbbb
or
inc
fidivl
push
movsl
lods
sti
pop
lds
adc
idivl
test
mov
andb
arpl
pusha
sub
push
idiv
mov
mov
repz
pop
fwait
xchg
or
leave
test
push
bound
in
lods
movsl
imul
pop
mov
in
jnp
xor
and
mov
rorl
stos
xor
sbb
mov
sub
jl
xchg
jo
inc
xchg
into
or
jg
lods
inc
cmp
dec
hlt
rorl
out
shl
pop
cmpsl
das
mov
cmpsb
imul
sbb
xor
sbb
ljmp
pop
or
test
fwait
js
sbb
sbb
addr16
push
in
push
xchg
sbb
jno
sarl
cmp
pop
cmp
mov
sbb
test
or
jb
mov
cmp
cmp
sbb
xor
dec
imul
jecxz
imul
jne
push
adc
push
push
bound
jae
rcl
lock
adc
lret
jb
jg
fwait
push
stc
ja
aam
fistl
pop
imulb
or
xor
adc
dec
and
push
sahf
outsb
test
in
cli
clc
cltd
add
dec
dec
pop
lds
cmc
rol
mov
or
outsb
sub
out
std
push
pop
in
pop
into
jp
and
stos
clc
pop
push
push
les
add
fisttpl
mov
pushf
add
pop
push
loop
fstpt
mov
mov
lock
adc
mov
dec
xchg
pop
mov
push
clc
int
enter
inc
cmp
mov
cmp
mov
lock
das
push
and
adc
cli
in
cld
push
mov
xchg
cmp
dec
test
push
iret
dec
mov
sbb
lea
inc
shll
out
cmpsb
jnp
insb
sub
out
lock
pop
out
inc
es
popf
repnz
aam
mov
lock
popa
sub
jg
and
jmp
add
imul
in
adc
jns
cmc
fstpl
negl
bound
in
inc
std
les
pushf
fldenv
hlt
jno
inc
in
dec
cs
jno
ja
imul
and
sub
adc
cld
movsb
push
fistl
jbe
cmp
add
push
les
or
mov
or
sub
sbbl
dec
jo
push
sub
test
xchg
mov
loopne
or
out
pop
push
mov
jb
add
lods
pop
aam
das
cmp
repz
sahf
cmpsl
jnp
out
out
into
xchg
imul
sub
mov
imul
adcl
sub
mov
cwtl
xchg
ljmp
fdivrl
push
sub
jp
stos
cmp
cmc
out
insb
stos
mov
add
mov
dec
loop
and
push
adc
mov
mov
sbb
mov
lcall
shld
dec
mov
mov
lahf
stos
jp
stc
out
inc
neg
pop
add
orl
mov
add
push
and
fpatan
sahf
fisttps
data16
push
hlt
psubb
dec
push
pop
addr16
cmp
icebp
call
js
xchg
sbb
arpl
inc
add
inc
or
scas
fidivrl
repnz
aaa
popa
mov
sub
adc
pop
push
lret
or
push
sub
or
fsts
mov
mov
test
sub
rclb
out
xchg
scas
movsb
mov
add
cmp
inc
hlt
cltd
div
push
test
cmpsl
pop
xchg
pop
in
dec
cmc
sbb
enter
shll
nop
imul
inc
dec
mov
mov
push
nop
scas
ret
out
loop
pop
ss
push
test
stos
ds
aam
push
iret
insl
xchg
push
xchg
jae
test
mov
popf
outsl
ret
aad
and
jns
stc
xchg
in
les
mov
mov
jo
pop
leave
push
ja
lea
inc
call
sbb
es
test
popf
ret
pop
sbb
pop
mov
cmp
rclb
clc
test
scas
and
adc
cmpsl
andl
xor
dec
out
dec
xchg
mov
fwait
adc
jmp
jb
mov
cmp
loopne
add
adc
popl
sbb
mov
sti
filds
push
cmp
add
adc
sub
jb
sub
pop
mov
mov
inc
cmp
arpl
les
ja
cmp
add
subb
scas
adc
xor
cld
adcl
ss
scas
ss
jg
aas
or
or
mov
mov
jo
mov
insl
sub
sbb
enter
mov
add
pop
sub
or
rolb
fisubs
lcall
mov
scas
cmp
int3
adc
iret
add
lret
icebp
stos
fadds
hlt
adc
sbb
fstpt
lds
mov
inc
loop
mov
push
push
and
or
loop
movsb
rol
cmpsb
or
jle
aad
gs
loope
jle
aam
stos
push
fwait
xor
test
sbb
fwait
hlt
cmp
push
stos
xor
sub
xor
push
add
xor
fistpl
jno
inc
mov
cmpsb
mov
cmp
xchg
cmpl
arpl
popa
sbb
and
pop
aad
test
daa
xor
adc
push
xchg
popf
in
pop
fs
mov
bound
cmpsb
push
mov
rcrl
leave
or
inc
shrb
mov
jmp
int
cmp
inc
stos
mov
jle
addr16
add
aad
das
jae
sbb
out
outsl
push
popa
cmpsl
pop
lcall
test
adc
and
sbb
xchg
dec
into
fiaddl
pop
cmp
xor
insl
pusha
xor
inc
xlat
cld
mov
add
mov
cmp
jle
outsb
adc
mov
in
sub
ret
fimull
imul
call
aad
xchg
cltd
daa
xchg
sbb
iret
cmc
fwait
push
mov
mov
fwait
jge
pop
mov
cs
shlb
dec
mov
pop
cmp
cmp
push
loopne
jmp
xor
mov
cmp
or
mov
mov
das
jbe
and
cmp
jmp
push
sub
push
ja
sbb
leave
aam
bound
mov
pop
test
enter
cmovo
or
repnz
cmc
repz
xchg
icebp
int3
dec
shlb
mov
ret
mov
fnstsw
sahf
inc
dec
cmp
push
out
jb
test
adc
mov
rcr
arpl
sarb
pop
dec
cwtl
test
adc
out
sahf
mov
mov
movsl
sub
jno
fnstsw
fisubs
pushf
lret
push
aaa
mov
addr16
sub
fisttpl
je
enter
cmp
pop
rclb
leave
jnp
std
fwait
push
mov
or
mov
pop
gs
mov
outsb
push
jb
jle
orb
fdivs
or
orb
ret
mov
mov
movb
stos
loope
push
pop
lret
sbb
sbb
loopne
sub
nop
rorl
jne
mov
notl
dec
pop
sbb
loop
sub
mov
pop
enter
scas
scas
stc
aaa
in
mov
in
scas
stos
je
repnz
sbb
adc
lahf
cli
xchg
loope
stos
jge
cmp
mov
pop
push
pop
int3
lds
out
jbe
nop
push
sub
xchg
loop
aam
or
popa
cmp
or
int3
jo
dec
xlat
mov
leave
adc
in
outsb
adc
pop
je
mov
jmp
cmp
jp
cmp
pop
inc
and
xchg
or
xor
je
negl
pop
or
cmp
pop
mov
inc
pop
pusha
jb
orb
xchg
or
and
mov
push
in
cmc
xchg
inc
pushf
mov
mov
push
jbe
jbe
cmc
into
mov
mov
mov
or
das
mov
sub
xor
adc
jbe
mov
bound
movsl
xlat
mov
inc
mov
jne
and
in
pop
adc
lahf
jne
adc
andb
cmp
popl
mov
sbb
fldt
aas
jp
out
ja
fdivl
js
mov
or
push
cltd
xchg
adc
rcrb
fistl
mov
ljmp
clc
cltd
add
aad
mov
outsl
sbb
push
pop
test
out
lds
xchg
sahf
sbb
dec
dec
sbb
lods
and
std
cwtl
xor
jle
jnp
ljmp
sbb
pop
es
js
repnz
cltd
and
mov
cmp
dec
mov
cs
mov
jns
loopne
test
xchg
das
pushf
flds
ds
xor
gs
push
pop
fstl
imul
mov
pop
fs
loopne
dec
or
dec
or
sub
pop
test
into
or
mov
enter
sub
cld
xchg
cmp
sbb
sbb
sub
sbb
icebp
dec
jmp
int3
or
push
jbe
mov
mov
int
push
stos
inc
pop
popf
mov
mov
push
mov
in
cmp
sti
mov
jnp
push
rcrl
icebp
test
pop
inc
jno
js
lods
push
mov
jae
das
inc
imul
cltd
add
dec
jne
cmpsb
mov
lcall
cmp
bound
test
sbb
jl
in
je
les
sub
bound
divb
jecxz
or
pop
mov
jbe
out
push
push
testb
push
outsb
xchg
aaa
adc
xchg
push
iret
sbb
icebp
into
jae
pop
or
xchg
aad
xor
xor
push
sbb
mov
jg
iret
push
pop
adc
shlb
sub
mov
outsl
mov
cmpsb
sbb
jl
push
ds
pushf
aaa
insl
jmp
aaa
lcall
pop
mov
jae
loope
ret
and
cs
aam
sbb
mov
mov
addr16
stos
pusha
fnstcw
sub
popa
das
fstpl
or
mov
loopne
inc
xchg
xor
loope
fldenv
mov
dec
mov
hlt
bound
cmp
fldenv
mov
adc
in
mov
mov
xchg
pop
and
negb
fnstcw
sbb
dec
fwait
clc
jnp
xchg
mov
das
js
sub
out
add
mov
shrl
jne
add
in
xchg
les
loopne
call
jo
pop
mov
sub
adc
and
xchg
dec
xor
xchg
popa
xchg
dec
sahf
fcomp
push
xor
xor
pop
sub
mov
cmc
cmp
movsl
out
sbb
sub
mov
or
cmp
inc
mov
xor
std
xchg
lret
icebp
dec
cs
fcomps
lods
lahf
jle
ljmp
cmp
daa
fadds
inc
add
sarl
nop
xor
fmul
dec
push
sub
imul
imul
and
aam
pop
lahf
hlt
movsb
js
add
pop
cld
enter
or
repnz
jne
fstpt
gs
imul
add
mov
shl
jo
fld
jge
mov
filds
add
cwtl
fmull
rolb
loop
cmp
mov
jo
std
shl
clc
adc
or
in
add
mov
rcrl
sbb
push
pop
or
fidivrs
push
lret
negl
push
scas
or
xor
fwait
lods
mov
in
mov
mov
jnp
jo
dec
movl
stos
arpl
test
and
pop
dec
add
mov
fst
sbb
ds
mov
daa
nop
cmp
inc
dec
xor
movb
jb
xchg
sarb
dec
movsb
push
pop
loope
out
or
mov
mov
xchg
adc
insb
hlt
inc
or
jo
sbb
adc
outsb
xchg
jns
jle
jge
popf
sbb
popa
jmp
and
lret
loopne
filds
add
pop
addb
jno
sbb
sahf
into
rcl
adcb
xchg
cmp
call
add
lret
cwtl
add
cmp
cltd
loopne
push
push
add
in
loopne
sbb
fs
lods
shlb
loope
jno
mov
adc
mov
mov
mov
mov
insl
add
insb
or
inc
gs
nop
add
push
cli
pop
stc
lock
in
sti
ret
cmpsb
push
xor
popa
xchg
or
sub
lods
test
mov
pushf
mov
mov
stc
js
dec
iret
dec
push
dec
sbbb
lret
jl
rorb
sub
cli
add
cmp
scas
test
adc
pop
sahf
and
loopne
adcl
cmp
mov
or
and
adc
or
push
in
mov
hlt
outsb
aad
and
push
movsb
xchg
sub
ret
pop
lea
aad
out
push
xor
xor
adc
std
xchg
sti
notl
popa
aad
bnd
loop
xchg
dec
loopne
sbb
pop
cltd
and
pop
repnz
les
cmpsb
mov
pop
mov
fidivs
ds
sbb
xchg
dec
mov
sub
imull
push
stos
xlat
sahf
inc
data16
xor
jge
stos
mov
lcall
pop
int3
inc
rclb
inc
dec
jns
sub
int
addr16
push
cmp
lret
pop
jge
pop
sub
in
outsl
fs
xor
xor
aaa
pop
jo
adc
or
out
mov
or
stos
push
cmp
rcl
cld
pop
scas
mov
jp
rolb
inc
lret
dec
stos
or
or
insb
fldcw
mov
xchg
fstpt
or
or
or
sbb
fisttpl
test
lret
sub
pop
orl
or
test
mov
xlat
mov
push
outsb
xor
call
xor
and
jns
faddl
sub
xchg
sahf
incb
bnd
repnz
and
pop
mov
out
jl
xor
in
mov
lods
xchg
rcll
imul
xor
mov
push
daa
cmp
div
out
popf
jle
jae
andl
and
loope
xor
shr
adc
xorl
cmp
dec
fcomps
aad
js
shlb
xor
scas
add
mov
push
adc
filds
dec
lahf
repz
mov
rcl
dec
mov
test
sub
push
or
pop
inc
arpl
xor
cmpsl
aaa
lock
mov
mov
push
fdivs
lret
adc
push
sbb
sbb
lret
test
inc
outsl
sbb
and
in
ds
leave
cmp
xchg
push
mov
lods
hlt
icebp
fcomps
imul
gs
fcoml
pushf
pusha
jns
jecxz
test
mov
adc
mov
aad
xlat
es
outsb
in
mov
mov
xchg
fcompl
in
mov
xor
sbb
mov
dec
cmp
lahf
fisubrl
cwtl
sti
jge
outsl
loopne
mov
push
test
push
sti
aaa
lret
xchg
add
jg
cmpsb
push
mov
sub
pushf
loopne
inc
lret
das
xor
adc
sbb
xorl
jo
test
test
inc
pop
imul
pop
push
push
pop
cmpsb
andl
mov
les
in
mov
sti
and
dec
adcb
xchg
pop
pop
or
ret
and
xchg
addr16
add
fnstcw
mov
push
stc
adc
aaa
shlb
mov
jae
arpl
popf
lret
push
mov
cmp
data16
test
testl
les
icebp
movsb
les
mov
ss
int
or
aas
xchg
rclb
loope
sub
and
cld
popf
push
cmc
daa
mov
cmp
rcrl
dec
ficomps
cmp
dec
jae
test
das
gs
notb
add
add
xchg
pusha
jb
out
pop
dec
test
cmp
cltd
push
or
jl
xorl
decb
clc
jno
jae
mov
es
leave
inc
je
inc
inc
or
lods
cli
push
dec
jae
push
inc
push
jl
jmp
adc
insl
into
call
push
je
dec
sarb
mov
mov
fdivrl
adc
and
xor
stos
test
pop
or
stos
test
push
mov
inc
in
out
push
or
daa
and
push
daa
sti
rcr
cmp
cwtl
scas
push
negb
cmp
add
into
or
xchg
adc
inc
and
addr16
pushf
mov
push
xor
lods
dec
xchg
aad
dec
sbb
ficoml
dec
in
mov
cmp
stos
cmp
adc
loope
lret
pop
add
xor
or
lock
mov
aas
aas
stos
test
adc
imul
or
inc
xchg
mov
pop
clc
inc
mov
neg
aam
push
and
sbb
cwtl
test
insl
sbb
std
push
subl
jae
push
sbb
popa
xorb
out
jge
ret
ljmp
scas
mov
xchg
or
and
jnp
inc
daa
popa
in
leave
inc
pop
mov
dec
mov
cmpl
fmull
adc
add
call
inc
sub
repz
jno
push
xchg
push
mov
jge
ja
in
add
mov
pop
dec
mov
addr16
orb
jbe
out
and
lret
in
sub
pusha
lods
inc
push
aam
xor
sub
cs
mov
xlat
les
out
mov
lods
mov
fsubrl
add
inc
xchg
pop
sub
outsl
andb
push
mov
mov
xor
mov
popa
sbb
dec
cli
rorl
jge
adc
movsl
icebp
addl
mov
jo
xchg
mov
and
or
fadd
xchg
mov
sub
pop
xor
add
push
jns
mov
sbb
shll
ss
cmp
add
xchg
ja
xchg
xchg
rorb
fists
nop
jg
mov
bnd
inc
bound
mov
inc
sbb
xlat
adc
cmp
lret
testl
dec
cmpl
loop
sub
xchg
push
cmp
gs
cmpsl
sbb
sbb
rcll
inc
mov
sbb
test
in
mov
pop
or
stos
xor
cmp
sub
in
sub
sarl
push
xchg
inc
ror
mov
mov
cld
test
pop
lcall
pop
mov
icebp
inc
and
shll
subl
testb
and
arpl
and
test
stc
jmp
and
or
int3
arpl
or
ror
and
cmp
add
jg
xchg
ror
and
test
jl
pop
and
push
incl
jae
das
add
mov
rcll
imul
cmp
xor
ljmp
cs
hlt
push
mov
cmpsl
ret
pop
movsl
add
jge
lret
sub
inc
cmpsl
jg
xor
push
mov
iret
push
or
ret
dec
sub
shll
imul
fdivs
pop
adc
push
movsb
repz
pushf
dec
xchg
dec
jmp
dec
pushf
sub
ret
add
mov
add
stc
xchg
adcb
rcl
jp
loope
dec
orb
jge
inc
jns
lret
adcb
xlat
hlt
in
daa
das
sub
outsl
jnp
stc
adc
lods
pop
cmp
mov
push
inc
rol
and
mov
mov
mov
xchg
lods
fcmovnb
xchg
and
repz
pop
xchg
adc
fcomps
mov
ss
xchg
jle
mov
cltd
fs
pop
mov
jae
push
loope
push
cmpsb
xorb
les
je
call
mov
paddw
dec
je
pop
mov
shlb
mov
sahf
xor
lods
jmp
and
jp
inc
imul
adc
jge
fs
aas
outsb
repnz
or
pusha
cmpsb
outsb
xchg
sub
and
scas
push
pop
daa
sahf
inc
lahf
js
mov
fstl
adc
dec
jl
sub
in
push
hlt
lret
pushf
mov
push
int3
mov
fistl
mov
push
leave
xchg
dec
cld
ss
aaa
jp
cmc
pop
push
pop
mov
add
std
sbb
jno
mov
xor
pop
xlat
mov
vmovhps
mov
mov
or
fwait
xchg
jnp,pn
inc
repz
sbb
or
pusha
pop
lret
push
mov
push
out
sbb
sbb
outsb
les
les
jecxz
or
iret
fwait
out
push
les
movsb
lods
fisubl
sub
fwait
inc
in
push
int3
xor
imulb
test
mov
shlb
int
dec
test
pop
add
cmp
data16
sub
sub
leave
pusha
enter
cmp
mov
push
xchg
daa
dec
or
xlat
pushf
push
test
bound
lods
cmp
in
cmp
insl
pop
jbe
pop
jb
mov
daa
jne
int3
fsubr
in
xchg
movsb
adc
inc
fstpl
out
xchg
dec
sub
vandpd
ljmp
sbb
stos
fsubs
ret
xor
or
sbb
mov
push
mov
shll
xor
inc
mov
pop
popa
lea
mov
ret
mov
adc
cmp
scas
cmp
cltd
popa
lods
jge
fldl
arpl
xchg
or
iret
cmp
pop
andl
shlb
pop
dec
out
addl
test
popf
aas
sub
mov
rolb
sub
insb
sar
pop
clc
push
fisubl
enter
sbb
mov
decb
popf
bound
dec
inc
mov
pop
cli
and
cmovle
shll
xchg
outsl
xchg
shll
xorl
xchg
adc
cwtl
or
je
mov
fmuls
add
scas
sub
mov
sti
aam
in
push
mov
xor
push
dec
mov
push
lahf
jo
cmpsl
loop
or
and
pop
mov
jecxz
jno
push
push
test
sahf
push
test
sahf
in
fwait
out
imul
sbb
out
pop
push
out
enter
mov
addr16
push
and
add
stc
aad
and
sbb
lahf
add
andl
push
lock
mov
push
lods
stos
pop
add
mov
pop
add
sub
and
push
ja
mov
xchg
lods
cmp
xor
xchg
loop
shlb
pusha
inc
inc
cmpsb
cli
add
inc
hlt
jae
sub
mov
mov
popf
mov
sbb
scas
xchg
enter
stos
push
push
lcall
inc
orb
push
mov
popf
insb
mov
lret
xor
xchg
lds
movsl
les
cld
aad
push
fyl2xp1
movsl
in
dec
cmc
popa
vpsubusw
cmp
sub
in
jo
sub
imul
imul
shrb
int
xlat
popa
add
and
test
into
in
jnp
das
add
cwtl
ds
mov
and
popa
sub
test
cmp
sbb
sub
inc
loopne
sbb
test
adc
int3
mov
push
mov
popf
cmp
push
stos
sbb
movsl
insl
imul
imul
fcoml
xchg
sbb
or
in
sahf
jo
adc
xor
pop
xor
ret
shll
arpl
inc
mov
pop
and
or
jb
repnz
fwait
rep
adc
dec
repnz
push
cmp
adc
lret
push
int3
jl
fsubl
inc
pop
outsl
pusha
jne
sbb
pop
add
pop
in
jg
mov
fdivrl
iret
sbb
ljmp
push
imul
inc
mov
jecxz
xchg
fwait
or
mov
mov
dec
adc
bound
push
jmp
lret
push
inc
shr
cmpsl
leave
loopne
lret
inc
stos
pop
mov
mov
mov
imul
cmpl
les
add
adc
filds
push
ds
sbb
or
push
pop
call
sub
mov
negb
lret
int
cmp
pop
jp
adc
pop
xor
xchg
test
jb
addr16
aad
out
or
inc
movsb
imul
jbe
int3
inc
hlt
or
sbb
pop
sub
outsb
dec
inc
dec
jb
xor
sahf
cmp
hlt
xchg
xchg
push
iret
mov
fs
cltd
daa
lea
fnstcw
pop
push
lds
dec
int3
mov
scas
out
mov
gs
lds
scas
pop
mov
mov
adc
sbb
sbb
scas
mov
sub
and
addb
fwait
rol
lea
enter
mov
mov
or
call
mov
cwtl
data16
daa
lret
lods
sub
clc
mov
jle
inc
fcomps
test
mov
fsts
mov
testl
pop
lcall
movsl
inc
out
jnp
push
in
or
rolb
xor
testl
and
mov
xor
xor
jge
cmp
jp
mov
test
in
imulb
cmp
cltd
push
fistpll
popf
jecxz
pop
or
push
aaa
mov
mov
sbb
jb
xor
loop
adc
test
push
mov
mov
shrl
test
in
rorb
add
sbb
dec
daa
addr16
call
leave
fdivr
lods
dec
aas
cwtl
add
and
call
add
les
jns
std
push
push
add
push
or
mov
mov
xchg
rcrl
rol
inc
pop
lods
in
sti
ds
enter
sbb
add
jb
jae
fcoml
xor
imul
outsl
dec
xor
jp
dec
and
xorb
xor
dec
insb
jl
sbb
sti
clc
orl
imul
orl
mov
push
dec
ffree
jns
mov
mov
mov
daa
xchg
mov
insl
add
inc
push
repz
popf
add
ljmp
fldl
jb
mov
icebp
mov
xchg
or
pop
jg
insb
fsubrl
mov
call
inc
incb
aaa
or
adc
inc
cli
mov
xchg
addr16
mov
add
into
or
into
sub
mov
enter
mov
add
idivb
jmp
pop
sub
mov
lods
mov
mov
dec
pop
jmp
jle
fdivl
imul
push
loopne
jecxz
dec
pop
imul
int3
jge
rcrb
mov
cmp
setae
mov
mov
dec
orl
add
ds
jle
in
or
xor
in
fcomi
add
xchg
pop
repnz
add
adc
adc
xor
lcall
testl
loopne
lods
ss
push
xlat
mov
lods
inc
adcl
jb
es
and
push
lods
sub
mov
push
popa
loope
stc
cmp
jae
enter
xlat
dec
push
push
jno
mov
inc
lahf
int
pop
je
xor
add
add
ljmp
sbb
sbb
push
cmp
ljmp
aam
in
push
inc
mov
mov
imul
sti
shll
xor
lret
push
fs
pusha
sti
cli
push
lret
adc
sahf
pop
in
mov
sarb
add
pusha
mov
stc
movsl
jne
mov
ss
xchg
mov
dec
dec
inc
dec
fs
cli
mov
addr16
out
rcl
sub
sbb
enter
imul
loopne
inc
sub
rcrl
push
fmul
cmpsb
jnp
stos
loope
and
ficoms
push
xchg
ret
les
cmp
insl
outsl
scas
imul
test
adc
movsl
stos
push
xchg
movsl
cmp
out
push
pop
xchg
push
enter
mov
insl
mov
in
mov
and
test
xchg
jl
imul
jecxz
das
ss
loopne
outsb
dec
and
mov
push
out
call
ljmp
fbstp
xchg
add
sub
pushf
fistpll
pop
shr
jmp
dec
enter
add
mov
dec
sbb
in
jmp
xlat
xchg
scas
jp
jl
and
std
cmp
jle
add
mov
leave
xchg
aas
test
andb
js
mov
and
mov
repz
cmp
addr16
jmp
les
push
hlt
stos
xor
fsubs
rorb
jmp
sub
cmc
in
xor
mov
daa
add
mov
xor
push
pop
inc
sbb
pop
xchg
out
inc
shll
cs
pop
and
sti
pusha
push
mov
data16
sub
fwait
mov
mov
icebp
addr16
std
adc
sub
popf
jp
insb
add
or
and
pusha
inc
xchg
js
add
lock
or
pop
ret
jg
lret
pushf
dec
out
xor
aas
insb
or
cmp
pop
cltd
mov
jo
pop
leave
mov
xor
dec
loop
ljmp
shll
xorl
sbb
jbe
hlt
cmp
inc
test
inc
mov
test
mov
xchg
pop
scas
cltd
inc
addb
pop
ljmp
ja
enter
cmp
fsubl
in
ljmp
jae
jo
outsl
int
stos
jmp
test
test
dec
hlt
test
rolb
sarl
subl
push
fnstenv
sbb
xchg
mov
or
int3
pop
out
mov
push
push
dec
jbe
jbe
mov
xchg
mov
aam
jl
cmp
mov
adc
sub
xchg
pop
xchg
loopne
adc
jle
lret
xchg
xor
inc
test
sbb
in
sub
shrl
push
xchg
cs
pop
xor
movl
mov
rol
adc
movsl
add
adc
sbb
inc
aaa
inc
dec
or
faddl
or
sbb
push
push
pop
pop
scas
mov
mov
xchg
adc
xchg
adc
mov
sbb
jg
xchg
and
and
mov
mov
inc
lahf
daa
lea
in
cmp
adc
or
leave
rcrb
xor
inc
xor
add
jo
or
scas
dec
sbb
popf
dec
jmp
mov
test
cmp
jl
aam
int
xor
push
jg
pop
test
xorl
mov
nop
mov
and
cmpsl
scas
into
jp
inc
mov
pop
adc
add
fdivrs
push
nop
sub
xchg
repz
js
inc
int
mov
pop
into
cmp
pop
enter
jl
ja
pop
dec
jbe
ss
and
fidivrl
pusha
lcall
or
aam
adc
mov
sbb
mov
sar
xchg
xor
inc
bound
push
push
out
fdivrs
lahf
adc
sbb
jp
loop
sbb
sub
test
dec
sub
cmpsb
adc
movsb
ljmp
into
dec
mov
das
and
loop
std
dec
jb
xchg
mov
testl
das
lds
cmp
push
push
in
bound
mov
pop
out
sub
or
pop
orl
sub
pop
js
popf
jo
mov
jne
cmpb
xlat
iret
sbb
and
dec
ret
hlt
pop
and
and
sbb
sub
inc
dec
jmp
scas
inc
push
add
mov
push
sbb
jno
sub
clc
lcall
sbb
pushf
loop
outsb
mov
cmp
add
dec
jbe
sub
pop
pop
imul
stos
or
mov
fidivl
mov
inc
scas
pop
bound
int3
adc
mov
lock
les
scas
cli
push
jb
lret
fidivrl
sti
ret
jmp
fcomip
fdivrs
and
sbb
inc
rolb
into
out
shlb
icebp
xchg
xchg
add
push
jne
nop
push
or
mov
pop
and
cmp
xchg
mov
outsl
fwait
add
fadds
pop
out
push
insb
lahf
js
int
mov
stos
sub
mov
jae
and
repnz
pop
in
loope
or
adc
add
mov
pop
iret
inc
xor
lods
adc
into
icebp
push
ja
pop
mov
repz
jbe
or
pop
stos
add
into
aas
lock
cmp
out
hlt
stos
cs
fcmovb
fidivs
or
pusha
jo
hlt
fdivrs
sub
mov
aaa
lock
dec
mov
hlt
cmc
addl
push
xchg
pmaxub
ret
xchg
mov
shll
dec
mov
fmull
inc
lret
mov
pop
lds
inc
mov
or
pop
pop
stos
lcall
xor
inc
cld
leave
or
sbb
arpl
jg
adc
cmp
dec
push
repnz
add
ds
or
cmp
mov
fwait
mov
sbb
ds
pop
mov
cmpsb
fldcw
stos
insb
dec
inc
mov
lret
xor
sub
or
std
mov
ja
xor
or
dec
mov
mov
push
cmc
push
pop
push
mov
rcl
dec
sbb
cmp
stos
outsb
or
jb
mov
sub
inc
or
push
adc
ds
ficomps
data16
cmp
insb
xor
or
inc
mov
cltd
mov
out
pop
lock
push
sub
addl
pop
inc
and
out
loope
or
jmp
dec
lods
push
xchg
xlat
lods
pop
popf
add
roll
ret
test
int3
sub
sbb
les
mov
lds
popf
add
and
mov
leave
bound
fnstsw
cmp
out
push
imul
or
out
subl
mov
jecxz
inc
jecxz
pusha
les
adc
xor
xchg
lahf
pop
addr16
sbb
fdivs
stos
insl
jb
push
mov
pop
push
mov
inc
cwtl
cltd
shl
sub
lcall
mov
xchg
adc
iret
dec
mov
jae
out
mov
scas
cmpsl
dec
push
fisttps
cmpsb
mov
scas
dec
fwait
pop
mov
jp
outsb
mov
xlat
movsb
pop
xor
mov
sub
sub
mov
jb
dec
fstl
into
addr16
and
adc
scas
jae
sarb
insb
adc
movsb
xor
test
aas
ljmp
sbb
push
lock
movsb
adc
mov
pop
push
jmp
xorl
pop
or
repz
push
pop
xor
pop
xlat
cld
into
pushl
xor
movsb
pushf
xor
push
or
mov
rclb
je
in
loope
pusha
jnp
mov
mov
jmp
movsb
push
dec
cwtl
data16
pop
hlt
fcompl
pop
lcall
aaa
mov
fstps
repz
xor
mov
in
dec
sub
pop
mov
jle
imul
xchg
int3
cmp
jp
and
mov
mov
pop
rcr
mov
cmp
sbb
mov
loop
lock
or
mov
mov
outsb
and
pop
inc
sbb
cmc
and
push
cmp
and
notl
pop
mov
xchg
xchg
das
jbe
mov
pusha
push
sti
push
inc
sub
mov
rclb
vpavgb
push
sub
sbb
loopne
repz
fiaddl
xor
add
pop
movsb
and
pop
lret
cmp
mov
pop
pusha
xchg
jge
mov
xchg
das
stos
mov
inc
xchg
add
ret
sbb
mov
jecxz
xchg
mov
mov
std
mov
or
jmp
or
inc
cmp
icebp
pop
sub
sti
mov
leave
xchg
rcrl
ja
outsl
jg
sub
pusha
xchg
xchg
push
daa
call
add
lret
push
xchg
push
pop
fistpl
mov
mov
jle
mov
dec
lock
push
lods
fldt
daa
sbb
xor
jns
fdiv
jmp
xchg
sub
arpl
subb
loope
lcall
stos
stos
dec
mov
mov
int3
xchg
adc
pusha
mov
mov
sub
xchg
into
xor
dec
enter
pusha
popf
jle
and
rorb
xlat
ja
es
mov
push
mov
xor
int
mov
or
mov
pop
mov
fdivs
xchg
dec
repz
add
clc
clc
pop
pop
jg
jb
js
inc
jmp
addb
negb
pop
mov
xor
push
inc
clc
cwtl
xchg
lods
jle
cld
dec
inc
mov
mov
scas
and
loopne
mov
add
sub
sbb
test
sbb
cmpsb
mov
popf
dec
cmp
push
xchg
lret
sbb
out
pop
dec
push
and
pop
mov
lods
pop
push
and
add
jp
loopne
dec
nop
clc
sub
call
bound
nop
inc
aas
mov
movsl
and
lret
outsb
cmp
sub
lret
std
fs
jle
test
push
fmul
or
jb
dec
mov
xchg
les
sbb
ret
cmp
pop
pop
mov
pop
outsl
mov
jecxz
movsl
jmp
shll
cmp
mov
fadds
packuswb
pcmpgtb
add
mov
out
adc
push
out
insb
jp
mov
addr16
fstl
mov
cmpb
int
mov
dec
gs
jmp
mov
mov
sbb
dec
push
jbe
jnp
cmpsl
push
and
test
shll
arpl
pop
jge
push
movzbl
sarl
cmc
mov
test
xchg
stos
cmc
cs
dec
sub
popa
dec
inc
lahf
cmp
rolb
fwait
clc
data16
jmp
loope
daa
pop
bound
loopne
dec
loope
jge
lcall
js
pop
mov
cli
cli
inc
xor
lods
notl
inc
or
dec
push
cmc
ja
inc
push
xchg
call
test
or
cmp
mov
fadd
inc
out
fcoms
cwtl
sub
sbb
lret
add
mov
mov
mov
push
sub
adc
push
jnp
loop
pop
add
stos
cmp
movsl
push
in
and
cmpsl
insl
aas
insl
repz
mov
jns
sbb
inc
imul
roll
pop
and
xchg
push
cli
scas
xchg
mov
pushf
adc
adc
push
fxtract
mov
sub
push
das
cld
sub
mov
xchg
cmp
cmp
lock
or
scas
hlt
xchg
and
cwtl
cwtl
pop
mov
xchg
dec
cbtw
stos
push
adc
jle
mov
lods
scas
jbe
pop
sub
xlat
pop
mov
shl
sbb
adc
ret
cmp
sahf
jmp
lret
and
and
xor
daa
ret
jp
pop
loopne
xor
dec
push
xor
sub
jno
stc
sarb
pop
sbb
popa
adc
cld
mov
cmp
ljmp
imulb
jae
sub
jne
pusha
or
xchg
dec
jp
aad
adcl
xchg
fistpl
jl
adc
xor
pop
aad
in
adc
push
in
mov
sub
out
lock
pop
mov
dec
gs
jecxz
push
push
cld
clc
decl
stc
pushf
int3
scas
sti
fldcw
loope
adc
xchg
insb
adc
fimuls
js
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
push
and
sarb
dec
loope
xor
fimull
sti
je
test
shr
fldl
cwtl
inc
push
gs
pop
jns
push
mov
sbb
popf
pop
mov
in
sbb
push
sti
and
mov
mov
add
jecxz
repnz
add
xor
in
adc
inc
xchg
xchg
mov
ret
or
pop
cmpsb
cmpsl
inc
lret
add
inc
jae
mov
push
sub
out
out
and
sub
push
lods
sbb
dec
loopne
insl
mov
add
test
mov
sub
js
addl
aam
lcall
in
out
movsl
and
and
inc
mov
idiv
push
jbe
adc
call
call
mov
shlb
sbb
mov
testl
inc
dec
inc
inc
add
aam
int3
ds
or
pop
repnz
add
addr16
mov
sub
insb
stos
or
cltd
sub
fstpt
sub
rcrl
iret
add
mov
mov
push
inc
test
ja
adc
outsb
mov
adc
xchg
out
test
js
inc
xchg
adc
mov
addr16
pop
addl
push
fnstenv
shr
inc
in
cli
sbb
lahf
into
inc
lcall
pop
xchg
inc
je
aad
mov
push
rcrb
inc
mov
mov
sub
sub
jge
xchg
pop
lods
jnp
ret
lea
rolb
mov
sub
adc
es
insl
into
add
jg
add
push
stc
mov
sbb
sahf
shrb
mov
mov
stos
sub
outsl
dec
rcr
sbb
or
xor
jg
iret
sbb
fdivrs
xlat
dec
xor
hlt
data16
jne
push
cmpsl
lea
pop
std
lcall
xchg
dec
adc
sub
jnp
pop
mov
adc
cmp
xor
mov
or
repz
jl
ss
mov
iret
add
adc
push
push
lods
sahf
add
xchg
into
or
mov
lea
outsb
xchg
sub
es
popf
test
cmp
jg
stc
or
ljmp
repnz
into
in
sbb
insl
mov
test
push
aam
insl
daa
push
mov
add
repz
jmp
out
cmp
icebp
js
insb
pop
aad
test
aaa
pop
and
add
imul
mov
mov
adc
test
jns
les
sbb
test
orl
mov
inc
and
bound
or
mov
add
out
lea
fmul
push
add
lods
mov
xchg
lods
xchg
rep
lods
mov
rep
lods
push
xchg
push
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
pop
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
mov
inc
lods
test
je
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
push
add
add
add
add
add
add
