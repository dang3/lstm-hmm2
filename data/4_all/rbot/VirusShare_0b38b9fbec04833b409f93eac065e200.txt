call
in
sub
push
push
lea
push
push
xor
call
cmp
pop
and
pop
pop
mov
inc
push
mov
add
push
lea
fidivs
cld
jl
and
std
fistl
cmp
les
jle
add
pop
pushl
popf
dec
xchg
push
jge
push
mov
jnp
sbb
jne
push
pop
or
or
pop
cs
testl
pop
pop
leave
ret
xchg
add
in
mov
inc
test
pop
jle
mov
pushl
adc
mov
std
xchg
mov
jmp
sub
in
sbb
or
mov
clc
call
test
sbb
and
cmp
cmp
add
outsb
pop
push
xor
test
inc
mov
mov
xor
push
mov
sbb
repz
or
inc
das
add
pop
push
jle
cwtl
mov
pusha
sbb
sbb
popf
cwtl
verr
iret
andb
ret
enter
lea
push
push
jbe
popa
push
movl
push
mov
mov
mov
mov
ss
pop
cld
std
pop
and
testl
dec
inc
cld
fwait
addl
pop
inc
stc
push
imul
or
cmp
leave
xor
cmp
mov
push
out
pop
out
fwait
shrb
push
add
jbe
fsubrp
ljmp
lods
and
xchg
gs
jo
adc
or
std
mov
pop
sub
pop
iret
pop
je
mov
mov
push
pop
fwait
and
xor
insb
dec
push
into
adc
fstpl
mov
inc
nop
in
mov
mov
sbb
enter
leave
xchg
sbb
push
sbb
and
and
vmwrite
pop
addb
push
inc
insl
sbb
cmp
adc
jne
push
cltd
xchg
rcr
xchg
mov
pop
pop
pop
pop
cmp
mov
push
sbb
mov
sbb
sbb
xchg
pusha
lahf
mov
inc
das
out
sub
inc
mov
pop
or
push
dec
pop
pop
mov
in
adc
into
ljmp
jne
add
idivl
fimull
mov
add
shr
ja
push
pop
cld
addr16
imul
dec
pop
jle
cmpsb
jns
cmp
pop
mov
clc
jg
pop
es
cld
cld
mov
mull
addr16
and
adc
or
sbb
cmpsb
addl
int
pop
mov
out
jmp
push
xchg
push
or
loopne
jge
mov
pcmpeqw
outsl
adc
movl
pop
mov
adc
bound
data16
push
daa
enter
xor
in
adc
aam
push
cmpb
adc
stos
loopne
insl
mov
mov
push
imul
rep
push
mov
adc
xlat
cmp
setg
pop
cmp
aam
ds
dec
lock
aas
pop
pop
lea
mov
movl
fsubs
mov
mov
pop
imul
cmpl
out
stos
scas
jge
dec
je
add
pslld
mov
cli
pop
jmp
push
mov
adc
sub
mov
push
cmpsl
sub
mov
push
pop
enter
call
test
mov
popa
sub
fucomip
pop
mov
cmovns
loopne
jnp
iret
dec
scas
mov
scas
movsb
fs
sarl
adc
imul
fbstp
call
push
outsl
shlb
pop
gs
popf
ljmp
aad
add
pop
sub
inc
mov
loopne
cmp
jle
add
mov
repz
jns
jns
addr16
mov
adc
fs
xchg
loopne
pushf
jae
pop
cwtl
adc
xchg
mov
mov
push
aad
xchg
call
adc
jg
les
rolb
add
add
push
adc
daa
adc
xchg
int3
popa
daa
adc
jae
cli
push
dec
pop
cltd
mov
jnp
mov
arpl
dec
popa
inc
push
mov
add
xchg
call
jp
imul
outsl
adcb
stc
pop
jl
pcmpeqw
in
mov
faddl
aas
or
or
push
xor
dec
cs
in
push
aas
shrl
scas
in
mov
aas
mov
aam
xor
sbb
push
pop
insl
subb
aaa
mov
dec
jae
out
in
pop
es
pop
std
add
fwait
rcr
imul
mov
xchg
jo
loopne
popa
dec
fcomps
fildl
sub
jmp
dec
fbstp
or
loopne
iret
dec
pop
inc
cmp
xchg
jg
rolb
rorb
pop
mov
cmp
mov
cmpsb
call
in
cld
inc
or
add
mov
ret
sub
or
jne
jmp
out
sbb
xchg
and
mov
mov
jo
je
inc
pop
fadds
icebp
out
push
andl
pop
lock
mov
mov
push
pop
daa
jl
and
gs
pop
dec
jno
mov
add
cmp
inc
jp
out
adc
push
imul
je
pop
cmp
pop
int3
ja
shlb
push
push
loopne
ret
push
daa
and
add
push
testl
mov
mov
adc
xor
and
mov
xor
xor
ja
popa
fistps
push
push
push
mov
rorb
insl
or
push
cs
out
cmp
dec
test
pop
push
push
fnsave
cmp
sub
mov
loopne
fidivrs
adc
sub
stos
sub
cmp
push
mov
iret
repz
cli
or
lock
pop
addb
push
aaa
imul
mov
out
or
cmp
pop
adc
push
mov
adc
mov
or
pop
inc
jl
cmp
push
mov
push
adc
push
push
cmp
imul
ret
dec
cmpb
cmpsb
add
mov
sbb
movsb
sub
push
inc
pop
test
or
into
jae
add
inc
sbb
pusha
rcrl
pop
fnsave
orl
mov
call
mov
sbb
sbb
loopne
je
dec
push
aam
jl
xorl
lahf
ret
jnp
cmp
jge
cmp
je
sbb
cmpsb
jge
popa
outsl
jnp
sbb
push
xor
fcos
mov
stc
negl
ss
pop
add
push
xor
cwtl
xchg
repnz
or
push
mov
sahf
js
sahf
js
inc
mov
mov
aaa
cli
sbbl
mov
pushl
pop
inc
mov
cmp
je
mov
mov
jbe
jl
push
jmp
pop
cwtl
push
sub
in
push
insb
add
jmp
jl
jnp
in
pop
push
addb
jecxz
pushl
add
call
hlt
pop
stc
imul
movsb
cld
shl
popa
je
mov
or
push
mov
loope
mov
cmp
lea
sub
rorl
aad
jnp
int3
mov
inc
ret
push
pushf
or
in
mov
inc
fsubrl
pop
pusha
out
enter
cmp
in
inc
jmp
lods
rcr
in
mov
cmpl
or
arpl
fistl
mov
or
test
sub
inc
jle
mov
xchg
call
pop
jns
cli
cmp
sti
je
arpl
bound
test
aaa
push
outsb
push
adc
aam
cmpsb
in
cmpsb
inc
push
sbb
mov
push
in
sbb
int
push
sbb
xchg
push
sub
imul
iret
mov
fcoms
out
outsl
mov
loop
scas
in
cmp
sbb
js
add
push
wrmsr
mov
jb
addr16
sbb
or
imul
dec
test
push
or
bound
xchg
pop
mov
mov
sbb
rcrb
sbb
cmp
mov
or
or
int3
je
data16
or
pop
or
pop
icebp
dec
hlt
cmp
shlb
push
push
mov
out
jmp
mov
js
lahf
cmp
sub
clc
push
sbb
fcomip
or
mov
das
push
int
jl
add
adc
movsb
mov
jne
add
mov
cwtl
mov
mov
xor
in
pop
or
mov
and
adc
negl
int3
mov
stc
push
push
les
je
inc
sbb
jecxz
ret
clc
cmp
mov
cld
jg
lock
imul
pop
stc
mov
push
shr
shl
add
out
hlt
jo
cmp
add
aaa
inc
rorl
sub
scas
mov
cmp
inc
dec
mov
shll
fcomps
test
dec
fildl
movsb
mov
xor
add
sub
pop
fidivrs
enter
add
je
lea
cwtl
imul
pop
push
or
push
push
push
xor
push
in
adc
push
ljmp
mov
mov
aaa
das
movsb
pop
pop
inc
imul
and
sub
fs
pop
insb
add
in
hlt
sahf
insl
btc
in
jmp
adc
jmp
adc
cmp
cmc
push
xor
dec
mov
sub
jnp
xchg
mov
pop
frstor
js
mov
rcrb
test
mov
test
mov
mov
orl
sub
add
ret
push
ficoms
pop
sti
push
push
push
je
inc
mov
sub
je
sti
push
pop
inc
clc
or
lahf
pop
mov
add
std
clc
je
js
mov
pop
push
cmp
mov
cltd
loope
fldcw
adc
lods
xchg
sbb
dec
adc
sahf
icebp
or
cmp
jg
mov
pop
mov
loopne
pop
mov
mov
lds
adc
xchg
testl
and
or
mov
shll
sub
adc
inc
sti
push
push
loope
cmpsl
cwtl
pusha
cmpsb
cmp
cmp
sbb
push
cli
into
push
or
rorl
in
jge
fsubl
ret
addr16
add
inc
adc
icebp
adc
adcl
push
test
adc
sub
icebp
cld
or
fsts
and
icebp
cld
adc
and
mov
pop
push
jmp
xlat
push
shrb
fstps
mov
inc
pop
int3
mov
xchg
iret
add
push
shlb
adc
adc
push
push
xor
mov
xlat
mov
sub
loop
mov
aas
popa
push
sbb
sbb
sbb
jns
cwtl
je
fwait
or
mov
mov
clc
jecxz
sar
push
mov
pop
xor
jbe
mov
pop
xchg
pushf
pop
adc
clc
mov
clc
sahf
cmp
push
sbb
dec
xchg
pop
pop
sub
cld
call
int3
and
insb
xor
fbstp
loope
cmp
test
imul
sub
in
dec
lahf
cwtl
sub
jmp
push
xor
insb
sbb
sub
das
inc
push
adc
push
sbb
jbe
push
lods
jbe
test
xor
notl
std
mov
iret
xchg
mov
pop
jmp
aad
popf
cmp
sbb
loope
sbb
pop
hlt
lea
xchg
sub
push
cmpsl
imul
shlb
cmp
pop
lcall
jg
and
and
xor
shr
add
nop
add
out
jge
cmc
stos
pop
jecxz
not
ret
dec
add
xor
sbb
aas
cld
imul
std
in
pop
call
testb
jne
inc
push
sub
mov
idivb
out
pop
adc
lea
pop
inc
clc
out
mov
and
rcrl
dec
dec
add
fwait
push
mov
enter
notl
cmp
dec
or
ret
cs
xchg
pushf
push
and
test
cmpsl
fmul
sbb
fnstsw
subb
or
in
imul
jl
std
cmp
les
add
hlt
xor
lahf
push
sub
call
jae
imul
add
mov
lds
testl
xor
fiadds
pop
insb
push
inc
push
mov
jmp
pop
fisubs
movsb
adc
lret
out
imul
out
sub
fistl
push
repnz
push
repz
fs
jns
adc
cmc
pusha
imulb
push
test
push
lods
cmp
fs
cmpsb
icebp
add
inc
mov
ljmp
out
mov
dec
bound
std
mov
push
inc
loopne
sti
sar
push
sub
loopne
add
fsub
addr16
fdivrl
mov
ljmp
pop
call
adc
rcll
push
inc
pop
stc
in
or
test
int3
movsb
cmp
push
jecxz
or
or
jl
mov
ja
insl
push
push
sbb
lds
std
jp
adc
nop
or
inc
arpl
nop
jl
sub
push
enter
mov
xchg
pop
mov
add
ficoms
out
mov
xchg
or
ljmp
pop
pushf
add
xchg
dec
sti
add
in
dec
sti
jle
jnp
dec
xor
pop
jae
or
pop
mov
sbb
enter
sbb
adc
pusha
adc
into
mov
xor
jo
or
int
or
scas
push
call
mov
push
dec
adc
repnz
push
add
das
loopne
call
push
xor
fstpl
jnp
inc
das
test
push
fwait
xchg
addr16
cmc
and
mov
pop
arpl
jne
cmp
sub
push
and
jmp
sbb
jne
push
jmp
push
pop
popa
pop
js
cmp
movsl
movsl
jmp
adc
add
lock
xchg
pusha
mov
or
ret
xchg
sahf
repnz
adcl
mov
and
loop
jmp
jne
adc
cwtl
add
mov
insl
dec
mov
in
mov
sarl
mov
pop
sbbl
push
aaa
in
push
outsb
out
lds
inc
sub
mov
cmp
xor
push
xor
in
ljmp
push
cmp
test
sbb
jns
clc
pop
cld
aas
movsl
or
xlat
add
fs
faddl
pop
daa
addr16
or
mov
pop
jp
cmp
fildl
sbb
outsb
insb
and
imul
je
scas
outsl
fs
orl
test
nop
addb
loop
or
shrb
and
pop
ja
push
ret
mov
loopne
add
sub
mov
jne
push
xor
rclb
rclb
out
popa
push
adc
mov
sbb
bnd
pop
xlat
rcrb
aaa
int3
jnp
rcrb
imul
mov
or
add
add
mov
stc
pop
pushf
mov
dec
cmp
pop
jbe
jmp
lods
push
cmc
sub
push
imul
mov
out
jne
clc
jne
lock
clc
add
sub
rorl
sbb
cmpsl
movsl
or
lcall
cld
fdivrs
adc
push
bound
dec
enter
pop
lahf
in
push
adcl
sti
push
mov
or
add
jg
push
xchg
mov
rclb
enter
mov
sbb
scas
les
push
push
and
xor
ret
xlat
js
call
or
stc
cmp
jge
mov
hlt
cld
cmc
fisttps
pop
popa
xor
neg
push
and
cmp
loopne
dec
pusha
pusha
int
sub
mov
mov
test
cltd
add
cmp
aaa
adc
jg
mov
lods
ss
adc
sub
jne
outsb
mov
sbb
jns
cltd
or
adc
mov
inc
mov
jne
jne
add
inc
mov
add
or
cmp
cltd
pop
inc
test
enter
push
mov
mov
mov
sbb
cmp
push
les
add
pop
test
sbb
pop
pop
lods
add
jg
std
pop
rolb
dec
mov
mov
arpl
daa
push
adc
pop
bnd
add
pop
push
jbe
jmp
mov
fldl
and
lock
inc
dec
xlat
arpl
aam
inc
jge
in
rorb
jmp
mov
push
add
sbb
arpl
inc
push
mov
dec
add
dec
sub
arpl
inc
aaa
dec
hlt
imul
add
fsubl
cli
dec
push
and
jb
pop
ljmp
mov
in
aas
and
mov
in
add
movl
popa
sbb
cmc
sbb
push
inc
in
dec
adc
pop
sbb
pop
in
add
pop
pop
je
xchg
orb
sbb
jbe
aas
xchg
mov
jne
push
add
sub
idivb
mov
mov
jge
mov
movsl
xor
adc
stos
jl
filds
test
push
pop
xor
incb
mov
daa
push
int3
jnp
jl
notl
dec
xor
andb
lret
jnp
jne
sbb
mov
sub
add
adc
push
jb
int3
add
mov
or
and
lods
and
or
push
ret
mov
in
mov
mov
or
pop
push
add
lods
int
test
and
mov
hlt
sarb
lock
loopne
mov
in
jno
xor
push
add
sbb
dec
xor
dec
adc
pusha
mov
mov
in
or
dec
fbstp
insb
fwait
or
nop
popl
lret
sub
inc
jle
mov
inc
clc
jg
mov
push
cltd
pop
idiv
cmp
je
mov
xchg
inc
xchg
push
popf
ret
sti
test
xor
mov
mov
jns
sbb
enter
pop
cmpsb
cltd
jmp
jne
push
push
sbb
fiaddl
cmp
test
mov
sub
mov
pop
mov
mov
mov
jo
push
push
rorb
out
cmp
push
or
sub
sub
sar
add
ret
mov
add
jge
xor
mov
jbe
push
or
jl
sbb
fs
xchg
dec
mov
mov
sbb
fs
int3
mov
lea
mov
sbb
arpl
mov
mov
push
push
imul
sbb
fwait
pop
les
les
sbb
mov
cmp
cmpl
test
int3
nop
call
mov
mov
and
pusha
pop
sub
fs
shrl
adc
jae
rolb
cs
bt
add
sub
sbb
add
inc
fs
lea
xor
cmp
mov
or
daa
mov
rol
dec
je
mov
popf
xor
arpl
mov
or
push
lock
dec
add
sbb
xor
add
jne
xchg
sbb
subb
jp
cltd
popf
sub
movsb
sub
dec
mov
stos
add
mov
cmpl
sub
adc
sbb
test
fistl
dec
adcl
fcompl
add
inc
fisubs
jae
xlat
fidivl
loopne
or
sbb
mov
jg
loopne
xor
ret
jne
pop
jmp
mov
pop
jl
leave
ret
add
push
test
ss
sub
jmp
loop
xchg
in
push
sti
lods
movsl
push
test
sbb
or
adc
and
sub
sarb
sub
cmpl
adc
inc
std
ret
or
inc
cltd
push
jl
jmp
jae
and
outsb
test
int3
ss
adc
adc
push
jbe
push
iret
fiadds
sbb
adc
sti
repnz
mov
adc
mov
fldz
or
cmp
jo
out
jns
xchg
aam
inc
test
or
and
js
dec
mov
jle
push
pop
aam
add
dec
dec
push
mov
mov
push
and
add
cmp
add
es
mov
shlb
dec
pop
or
add
mov
in
cld
xor
repnz
or
mov
xor
cmp
daa
push
jmp
insb
pushf
dec
pop
roll
mov
out
sbb
into
xor
rcrb
add
or
vxorps
dec
cs
es
in
stos
and
in
in
sub
fsubrs
sub
xchg
sub
push
mov
insb
jl
sub
pop
dec
movl
mov
jo
sbb
xor
test
cwtl
mov
nop
fwait
cmp
mov
icebp
pop
addr16
jb
push
insb
std
into
sbb
and
push
fnstsw
mov
cmp
dec
cmp
mov
jl
push
call
outsl
rorb
rclb
and
sub
lret
lret
roll
push
xor
fidivrs
aas
or
pushf
or
stos
add
test
pop
mov
pop
jne
imul
stos
mov
movb
mov
adc
pop
jge
pop
rol
inc
aam
aad
xchg
adc
push
dec
fdivrl
adc
mov
cltd
mov
push
xor
daa
push
xor
ds
mov
mov
adcl
jne
xchg
hlt
incb
add
push
push
jmp
push
dec
and
jae
mov
sbb
neg
sbb
and
add
mov
push
push
pop
test
push
push
push
scas
inc
movsl
cli
repnz
adc
inc
cmp
sti
stos
in
push
hlt
mov
cmc
cltd
or
add
adc
adc
outsl
leave
enter
sti
jns
ror
jmp
push
fstpt
insb
adc
cmp
shl
and
xorb
lock
cltd
ds
fcomps
repnz
ret
mov
push
icebp
frstor
xchg
scas
inc
mov
mov
inc
enter
and
push
int3
imul
add
int3
push
addr16
xlat
mov
mov
popa
mov
rcrb
lahf
push
pop
jl
scas
xchg
mov
nop
sub
inc
adc
jl
inc
enter
mov
push
sbb
les
push
dec
out
shlb
xor
ret
jmp
mov
push
inc
repz
cmpsb
adc
or
push
out
aad
call
lret
xor
movsb
adc
mov
jl
pop
pop
bound
dec
push
ss
test
push
mov
xor
xor
js
call
adc
adc
call
pop
add
movsb
mov
mov
leave
lahf
call
call
cmp
dec
popl
xchg
psubusb
jae
xor
lock
jo
iret
xchg
scas
and
aam
inc
inc
ss
xor
lock
sub
mov
jno
or
mov
clc
push
push
push
repz
mov
push
inc
or
lea
call
pop
int3
je
fnstcw
and
mov
popa
mov
pop
loop
icebp
leave
loopne
jae
dec
sub
cmp
fiaddl
lods
idiv
sti
add
lods
les
jge
ja
cmpl
mov
je
shr
pop
shll
cmpb
and
xor
adc
in
xchg
icebp
push
xchg
adc
cmpsb
mov
je
xor
jg
shll
xchg
push
in
push
push
or
jg
pop
nop
jecxz
sub
div
pop
cmp
mov
addr16
adc
mov
xchg
sbb
add
roll
test
or
adc
push
and
mov
jecxz
in
lods
aaa
add
jg
push
fcmovnbe
jne
fildll
push
push
mov
fmull
nop
add
and
push
xor
mov
sub
push
rcrl
push
jecxz
sti
shl
mov
insl
movl
mov
sarb
mov
pop
pusha
xlat
add
or
and
inc
push
xor
xor
sti
pop
push
arpl
mov
cld
mov
dec
add
mov
sahf
pop
sgdtl
int3
lock
loopne
xchg
sbb
pop
jne
je
fstl
stos
fdivrl
sub
rorb
or
lods
sbb
shll
pusha
test
icebp
das
mov
or
leave
xchg
or
mov
lahf
stc
xor
inc
cmp
jl
aam
mov
bound
icebp
dec
jle
rcll
mov
out
and
mov
mov
or
fbld
int3
sbb
lahf
data16
add
mov
inc
and
ret
or
push
mov
push
cld
pop
cltd
idiv
test
outsl
movb
sti
push
inc
jmp
dec
leave
lea
cmp
jb
mov
mov
inc
dec
jmp
andb
daa
add
or
leave
cld
adc
sub
and
pop
das
push
mov
mov
xchg
xchg
lods
movsb
pushf
xchg
scas
jo
adc
lret
in
popa
sbb
adc
icebp
rclb
mov
rorl
pop
clc
call
clc
dec
aas
push
stos
call
int3
loope
sbbl
or
jbe
pop
mov
push
pop
ret
and
cmpsb
and
lret
push
jl
lock
xchg
clc
add
add
push
in
jmp
jb
xchg
mov
jo
adc
push
push
sbb
lock
dec
inc
mov
dec
call
mov
nop
lcall
das
mov
imul
pop
pop
jo
sbb
push
jecxz
pop
xor
add
adc
data16
les
push
sub
pusha
jno
and
ds
addl
jne
push
push
pop
xlat
push
leave
sub
sti
jmp
in
popf
test
add
add
push
and
pop
xor
push
and
fwait
pushf
and
cmp
jp
lret
fildll
lahf
jo
push
stc
sbb
jg
cmp
mov
addr16
push
insb
mov
xor
lretw
cmp
cmpsl
adc
shlb
int3
push
cmpsl
or
or
xor
or
push
shll
sbb
adc
shll
ljmp
push
sbb
or
pop
shll
or
lods
or
shl
leave
sbb
mov
subb
jae
xchg
push
inc
push
pop
call
shll
mov
inc
call
subb
jle
add
mov
enter
mov
xchg
sub
fs
pop
cmp
out
cmp
cmp
imul
xor
popa
mov
faddl
push
xor
xchg
push
shl
fs
mov
je
xchg
cltd
inc
pop
dec
mov
xchg
ficoml
xor
dec
and
lea
sarl
mov
decb
sbb
sub
rcrb
repz
pop
pop
out
into
andl
aas
mov
je
jno
cmp
je
cmpb
adc
jne
jmp
je
negb
cmp
call
ret
or
pop
adc
test
sbb
data16
es
sbb
dec
insb
pusha
data16
pop
adc
or
push
je
loopne
sarl
cli
push
nop
fdivr
mov
pushf
addb
sub
mov
pop
inc
jne
pop
mov
sbb
sub
test
jle
cmp
add
repnz
mov
cld
or
idivl
jne
jecxz
or
incl
or
dec
push
je
dec
je
dec
push
test
stos
lods
push
dec
xchg
pop
ret
push
push
inc
sbb
lds
add
fisubrl
iret
mov
pop
or
ror
push
sub
pop
les
xchg
mov
mov
dec
xchg
push
lahf
sbb
je
in
jle
push
push
sub
adc
ss
mov
xchg
not
loope
pop
ss
repz
dec
mov
lret
faddl
xorl
pop
insl
je
imul
inc
or
inc
mov
dec
insb
sub
adc
cmp
inc
jmp
dec
or
out
mov
mov
rol
stos
inc
jg
or
dec
in
add
lods
enter
mov
sbb
sar
fnstenv
push
or
adcl
add
incb
fdivrl
xchg
sti
mov
jne
mov
mov
pop
adc
jg
push
ds
pop
dec
push
dec
xor
pop
and
and
sbb
lock
jge
push
pop
jno
push
push
ret
pop
jae
stc
clc
test
nop
ja
adcl
dec
int
fcomps
adc
xchg
jae
icebp
scas
add
jmp
jno
cmp
adc
sub
leave
test
jbe
push
incl
je
inc
add
cmp
jb
pop
jne
cmp
jae
mov
enter
inc
mov
push
fsub
daa
xor
xchg
adc
push
add
xlat
fldt
push
push
out
push
loop
xorl
push
cmpsl
notb
pop
sahf
loopne
pop
xor
lock
inc
in
enter
sbb
adc
dec
lea
lret
dec
cmp
inc
xor
lret
mov
pusha
enter
pop
icebp
pop
enter
jmp
mov
jno
cmp
mov
jo
test
popa
fistl
aaa
dec
and
clc
add
push
push
push
mov
push
inc
sbb
test
rcrb
pop
push
cmpsb
or
addb
inc
xor
addb
ret
inc
fdivs
inc
jge
addb
cmp
or
jmp
jge
sub
mov
fldt
sbbl
cld
sub
dec
jmp
outsl
sbb
clc
pop
cmp
andl
adcl
sbb
outsb
xor
mov
add
dec
pop
js
xchg
mov
inc
cmp
and
mov
xchg
in
push
adc
inc
and
mov
daa
out
outsb
push
jne
push
cmp
mov
cli
popa
enter
adc
adc
cmp
bound
cmpsb
pop
repnz
push
push
enter
mov
sti
fldt
cmp
loope
das
bound
lods
lods
and
fimuls
in
ret
pop
test
push
testb
dec
decl
aad
mov
or
inc
mov
fadd
xchg
pusha
cmp
jo
sti
leave
and
push
daa
sub
cmpl
pop
mov
push
loopne
jne
mov
dec
cs
push
jmp
icebp
in
xchg
pop
mov
sub
inc
test
push
pop
inc
adcl
jns
mov
lahf
jne
testb
add
jmp
std
xchg
aas
add
adc
in
arpl
push
out
into
test
or
bound
lock
and
mov
aaa
adc
je
sub
incb
movb
push
imul
dec
sbb
roll
jg
mov
lcall
xor
and
xor
divb
jne
inc
mov
test
sbb
sub
addr16
insl
xchg
in
fldcw
pop
inc
or
idivb
push
inc
mov
nop
mov
push
sahf
inc
jl
or
lock
daa
orps
mov
out
popf
shr
mov
and
mov
jmp
pop
xor
jne
sbb
ljmp
cmp
jle
and
and
push
pop
sbb
and
or
dec
push
push
sub
scas
cs
inc
stc
fldl
jmp
push
insl
and
push
dec
pop
das
push
and
loop
xor
insb
dec
arpl
fstpl
fst
js
mov
inc
add
out
sub
cmp
push
push
fnsave
inc
push
and
add
aam
insb
mov
lcall
cmp
popa
xor
cltd
inc
in
pop
lahf
popa
enter
dec
jne
push
adc
adc
test
pop
loop
je
pushf
rclb
pop
cmp
rol
pop
xchg
add
inc
xchg
sbb
sub
gs
lcall
pop
inc
or
and
imul
pusha
inc
sahf
xor
inc
mov
loope
lds
test
lods
xchg
mov
fcmovnu
jbe
imul
pop
outsl
gs
loop
xor
scas
notb
push
push
lahf
inc
ss
xchg
or
pop
lods
leave
clc
add
sub
lock
sbb
and
or
adc
xor
dec
xchg
cld
je
add
sbb
add
or
cmpb
cld
scas
or
dec
jne
inc
push
sub
inc
sbbl
js
into
cmp
mov
adc
cmpsl
push
push
mov
outsb
xchg
icebp
orl
or
xchg
aas
add
fists
add
jecxz
mov
loopne
sub
js
fldt
and
or
ja
mov
mov
loop
add
or
adc
xor
rorl
or
out
ljmp
push
outsl
xor
adc
jns
xchg
lea
andl
pop
or
imul
adc
int
sub
xor
test
dec
std
stos
dec
lds
and
push
cmpsl
sub
adc
enter
sbb
adc
jbe
push
dec
push
pop
pop
jbe
push
test
in
and
jp
mull
push
and
imul
out
xor
insl
sub
mov
xchg
sub
pop
sbb
stos
and
adc
idivl
cltd
pop
and
sub
shrl
push
cmp
mov
jmp
inc
or
push
sbb
and
loope
or
xorl
xchg
test
and
pusha
pusha
xor
mov
cld
add
push
mov
sbbb
adc
pop
sbb
imul
sub
cld
push
sub
adc
push
adc
cmp
jno
shrl
add
adc
sbb
inc
pop
or
insb
in
pusha
movsb
fisubrl
cld
sti
loop
addl
or
mov
fdivs
mov
add
push
js
cmp
cmp
loope
jne
sub
add
ljmp
outsb
lcall
and
ds
jne
movb
push
inc
pop
test
arpl
in
aad
sbb
mov
xchg
rcll
insl
and
sbb
loope
xchg
push
icebp
jo
sbb
je
jmp
dec
add
add
add
mov
jmp
mov
ret
popa
sbb
push
out
jno
movsb
sbb
int
lods
and
push
pop
popa
sbbl
cs
pop
adc
sub
pop
sbb
mov
popf
pop
mov
push
dec
inc
push
repz
or
lea
mov
xlat
inc
cld
fsubs
pop
fidivrl
pop
sub
fmuls
shrb
cmp
enter
fs
mov
add
pop
hlt
or
and
sbb
inc
in
movsl
sarb
xor
fcoml
and
pop
int
in
push
fsub
in
lods
lret
pop
or
mov
ficoms
push
loop
xchg
div
cmp
ja
call
add
in
sti
adcl
mov
aam
cmp
jnp
fsubs
orb
or
shl
adc
or
fisubs
das
xchg
fcompl
sbb
or
inc
insl
jns
xor
sbb
push
test
inc
pop
mov
in
and
and
pop
sti
lcall
call
xor
pop
push
roll
push
cmp
xor
or
sti
test
sub
shld
sub
xor
xchg
mov
jecxz
lahf
jmp
mov
dec
pop
sarl
jne
shr
push
add
repnz
in
pop
repnz
lret
jo
pop
jge
xchg
ja
mov
std
add
insl
push
push
mov
inc
call
pop
adc
or
add
jnp
push
and
pushf
add
outsb
push
dec
cmp
ljmp
sbb
fcomps
cmpsb
xchg
std
out
in
and
fcom
dec
sbb
sbb
inc
lahf
sub
dec
js
push
enter
push
mov
lock
stos
scas
push
add
test
ja
or
and
jl
cmp
sub
nop
idivb
add
push
inc
mov
mov
daa
andl
dec
push
movsl
addr16
xor
xor
mov
rcrl
push
clc
imul
sar
sarl
and
in
jb
add
cmpsb
mov
sbb
adc
add
sub
and
lds
pop
xor
rorl
sbb
sbb
xor
push
call
mov
popf
sub
and
xchg
rolb
mov
push
lock
test
jne
ja
imul
jae
push
pop
add
mov
push
push
aaa
jb
movsb
arpl
xchg
lcall
mov
adc
or
adc
or
outsb
std
andl
daa
push
sub
pop
les
mov
inc
in
cmpsb
les
push
rep
add
sbb
mov
push
decb
adc
push
cmp
and
or
stos
fs
jnp
mov
jecxz
sbb
sub
daa
cs
pusha
in
je
in
sahf
push
xchg
add
inc
clc
push
cmp
mov
pop
jo
out
movswl
mov
push
pop
clc
cli
add
test
je
push
cmp
pop
push
std
xchg
mov
sbb
or
adc
test
cwtl
xchg
push
test
arpl
fs
add
daa
cmp
fcoms
mov
push
mov
lea
jno
fsubl
add
sub
fsubs
andb
stc
outsl
and
cmp
or
mov
in
jmp
xchg
or
jne
xor
pop
test
sub
cwtl
fdivs
jno
movsl
je
or
je
add
ljmp
sbb
out
cltd
inc
mov
rolb
xchg
pop
pop
subl
push
add
or
mov
int3
jge
sub
pusha
push
test
jo
add
adc
stos
adc
fcmovne
mov
lds
rclb
hlt
jle
es
mov
jmp
push
sbbl
mov
sub
imul
adc
inc
cmp
or
cmp
xchg
ret
lods
jg
setne
dec
pop
popf
inc
pop
adc
cmc
shrb
nop
in
pusha
xchg
es
add
pop
or
fidivs
cld
fwait
sbb
xor
call
jmp
dec
push
add
enter
or
ja
enter
lret
pusha
and
xchg
rolb
pop
and
lahf
outsl
mov
and
xor
mov
mov
xor
scas
push
repz
and
imul
out
dec
pop
adc
inc
inc
sbb
push
pusha
sub
das
or
pop
cwtl
ss
mov
adc
pop
or
je
push
ljmp
lods
lret
clc
jle
pop
fldl
jae
cmp
hlt
ss
in
popa
ss
popa
fisubrl
cmp
push
cld
or
int3
in
inc
adc
sub
push
cmpb
xchg
add
dec
inc
movsl
add
and
xchg
movsl
cmpsl
jnp
inc
xchg
cld
or
fildll
adc
add
mov
push
dec
push
and
sar
mov
enter
sar
cmp
push
imull
call
insb
daa
aad
xor
rcrb
fdivs
inc
fsubp
sti
in
push
jb
lods
dec
pushf
pushf
int3
dec
pushf
xor
mov
js
sahf
pusha
sub
sbb
xor
sub
call
sub
ja
sbb
je
clc
cmp
fnstenv
sub
sub
jnp
mov
sbb
mov
call
sub
es
jge
pop
enter
mov
adc
shr
adc
xor
xor
xor
sbb
jl
imul
in
in
les
cmp
int3
lahf
movsb
fcoml
cld
sbbb
lock
mov
cmp
int3
fsubl
sbb
sbb
mov
into
pop
repnz
clc
inc
sbb
in
fs
repz
mov
sub
jns
and
sbb
adc
pop
jmp
push
clc
hlt
inc
ficompl
sahf
sbb
dec
mov
out
or
iret
xchg
iret
cld
push
mov
dec
inc
dec
xor
cmp
and
or
in
push
cmp
and
test
rclb
adc
call
ds
mov
popf
mov
and
adc
mov
jl
pushf
mov
daa
das
sahf
in
fsubr
lahf
and
jb
xchg
adcl
in
nop
inc
dec
push
sbbb
paddq
sbb
and
mov
repz
mov
imul
xchg
sbb
js
xchg
xchg
xchg
jo
pusha
pop
lahf
xchg
fxch
enter
dec
je
jae
cmpb
sahf
sbb
sub
cmovno
xor
xchg
mov
xor
pushf
and
repnz
mov
inc
cmp
in
mov
imul
and
xchg
xchg
xchg
or
or
pushf
int3
dec
fdivrp
push
and
pushf
mov
inc
mov
mov
int3
dec
inc
enter
pushf
dec
jae
mov
daa
and
mov
sub
sub
daa
and
sbb
cmp
sbb
sbb
or
in
repz
push
xchg
xchg
xchg
fnstenv
push
sub
enter
and
rcrb
add
hlt
sbb
out
and
fcmovnu
addr16
test
movsb
xor
adc
cltd
cmp
dec
lahf
stc
add
in
in
shl
jae
fs
lods
mov
enter
aam
das
mov
movsl
pop
insb
cltd
sub
inc
inc
inc
lea
sbbl
mov
sahf
in
inc
popa
add
pop
push
mov
mov
fs
inc
or
inc
mov
mov
lahf
adc
or
shlb
fs
mov
dec
cwtl
addr16
daa
mov
out
cld
sahf
xor
pop
enter
test
dec
add
cmp
and
cmp
repz
jae
cld
inc
jb
mov
push
lcall
lahf
xor
sub
je
cmp
mov
inc
push
sbb
adc
add
xor
push
xchg
fdivl
dec
sbb
and
out
lods
lds
pop
xor
je
push
mov
jb
movsb
in
sub
sub
mov
pop
repnz
in
lds
cmp
sub
add
daa
and
mov
js
lods
xor
xchg
xchg
and
daa
mov
sbb
adc
jns
dec
mov
xchg
xchg
call
jp
sub
adc
daa
and
js
lods
lahf
mov
xchg
lahf
adc
mov
and
adc
sub
pop
cmpsb
loope
shrl
movsb
stos
cmp
lahf
push
and
push
in
xchg
xor
test
addb
test
nop
xchg
sub
movsb
cmp
inc
mov
push
inc
ss
gs
movl
mov
xchg
inc
cmp
in
sbb
hlt
fs
push
ret
xor
mov
cltd
in
and
jl
pusha
fs
xchg
mov
popa
movsb
sbb
cmp
mov
lock
test
sbb
sbb
jb
sahf
push
insb
jb
daa
bswap
mov
dec
push
fs
push
xor
dec
jnp
sbb
xor
and
push
cmp
sbb
add
int3
clc
or
jb
lea
adc
xor
add
and
std
and
leave
and
dec
cld
sub
xor
or
and
adc
in
sbbl
in
mov
and
cs
sub
mov
push
cmp
xor
xor
fs
mov
sbb
sub
cmp
dec
dec
push
inc
mov
mov
xchg
pop
adc
lods
jns
into
clc
insb
shlb
pop
jne
cmp
adc
call
mov
outsl
inc
pusha
jg
nop
lock
mov
add
and
dec
jo
scas
and
es
ret
and
cwtl
movsl
daa
add
pop
mov
js
mov
js
pusha
decb
rcrb
ret
push
add
inc
mov
orb
loopne
push
jb
jne
xor
jmp
inc
jmp
popa
mov
aad
cmp
mov
push
into
shlb
int
mov
dec
push
jbe
test
mov
adc
leave
in
mov
inc
mov
mov
inc
pop
adc
inc
cmp
jl
push
cmp
sbbb
xlat
jo
jge
shl
dec
mov
push
cld
lods
jl
pop
insb
jg
push
push
test
inc
jg
lock
add
push
shl
mov
fidivrs
mov
add
inc
inc
pop
xchg
movsb
pop
jns
pop
pextrw
adc
and
jb
jne
xor
jo
test
cltd
add
nop
ret
mov
xchg
test
clc
and
test
mov
cmp
adc
and
movsb
leave
dec
pop
cmp
outsl
xor
sbb
push
outsb
je
cmpb
and
and
lea
or
int
jmp
mov
arpl
in
mov
jbe
or
xor
popf
push
rcll
or
sar
dec
push
gs
xor
loopne
push
jmp
push
das
addb
mov
mov
mov
fcomip
nop
pop
mov
outsb
es
rcr
movsbl
mov
inc
or
push
pop
adc
pop
xor
inc
jge
push
jne
mov
clc
addl
aam
stc
jge
and
inc
je
xor
cmpsb
push
out
stos
stos
fs
or
jne
push
pop
sbb
xor
cmp
in
repz
jbe
enter
xchg
xchg
xor
or
push
fdivrs
fmuls
xchg
repz
dec
cld
mov
push
add
lds
jl
dec
mov
jl
cld
in
jb
dec
repnz
nop
movsb
fistl
jne
sbb
in
mov
clc
or
add
repz
jo
test
popa
inc
daa
xor
rorb
fldl
ret
or
add
jecxz
dec
jno
sbb
add
imul
push
cs
lahf
in
mov
mov
pop
jno
jb
cmp
out
push
subl
inc
dec
ficomps
leave
test
pop
aam
mov
test
xor
add
mov
loopne
jb
push
jno
les
insl
xor
inc
enter
fwait
insl
push
data16
adcl
sub
lret
inc
inc
jnp
mov
add
push
lock
jg
xchg
arpl
cmp
je
cmp
je
cmpb
pop
add
sbb
sbb
loope
push
test
je
jo
push
or
mov
inc
sub
xchg
and
test
ja
incb
and
sbb
xor
push
mov
data16
cmpsl
adc
mov
push
gs
sbb
lea
or
pusha
or
add
push
and
insl
cmp
push
mov
pop
add
cmp
jge
divb
leave
mov
add
cmp
je
or
pop
and
add
enter
rclb
sub
cmp
or
sbb
dec
or
sti
pop
mov
sti
imul
inc
add
inc
cmp
jl
pop
push
pop
je
incl
inc
popa
adc
fcomps
popl
adc
mov
jg
rep
lea
jl
push
mov
cmp
mov
push
cmp
jns
pop
inc
mov
mov
dec
cmp
jle
push
ret
lcall
cmpl
cmp
pop
jl
cmp
jg
jle
lea
xchg
aad
ret
adc
stc
dec
add
mov
xorl
mov
das
pop
icebp
sub
push
js
dec
mov
cmp
jno
mov
popf
cld
ret
or
cwtl
xor
stos
push
in
push
push
hlt
mov
sbb
sub
arpl
mov
add
cmp
mov
xchg
lea
cltd
rclb
outsl
cmp
in
mov
cltd
arpl
shll
dec
jmp
pop
xchg
shlb
inc
add
add
gs
mov
insb
pop
xchg
add
out
gs
cli
sti
outsl
out
mov
pop
jg
or
jne
inc
cld
mov
lea
cmp
je
cmpsl
lock
and
pop
mov
mov
int
in
and
xchg
enter
hlt
mov
ret
sbb
sbb
push
je
and
inc
and
iret
adc
addb
mov
xor
cmp
cmp
je
jge
add
enter
incl
fwait
add
pushf
add
cmp
in
enter
add
push
sbb
lods
and
push
sbb
icebp
bound
daa
sbb
rorl
repz
in
incb
push
xor
les
mov
add
jo
xor
clc
orb
je
and
push
cwtl
xchg
clc
test
test
mov
cmp
push
jl
mov
adc
push
std
push
sbb
shll
adc
mov
adc
add
roll
movsl
in
push
in
addr16
je
pop
mov
dec
in
pop
stos
pusha
xor
sbb
divb
jne
push
repz
lods
pushf
clc
adc
leave
mov
pop
xor
inc
push
or
sub
push
push
sub
xlat
mov
bound
decb
xchg
push
cltd
sbb
jbe
js
js
movsl
sbb
push
pop
and
jbe
push
cwtl
cmp
daa
test
push
push
jge
mov
pop
push
adc
jns
adc
xor
mov
pusha
mov
ljmp
ret
jne
mov
mov
fidivl
jo
imul
pop
ficoml
inc
cmpsb
push
dec
pop
in
popf
pop
das
pop
sub
push
lock
add
push
mov
shl
and
add
shlb
sbb
fsubr
mov
add
cli
pushf
cmpb
jne
push
test
les
adc
xchg
orb
pop
cwtl
xor
arpl
cmp
adc
into
add
sub
push
mov
xchg
dec
cwtl
into
clc
add
jb
loope
sbb
xor
daa
fmull
or
mov
fsts
mov
add
push
xor
jmp
push
dec
fldt
cmpsl
sbb
sti
or
cmp
sbbl
std
xor
je
jmp
incl
add
push
cmp
jne
fcomps
orl
inc
or
adc
test
push
shlb
dec
sub
xchg
or
mov
lret
fs
cmpsb
mov
rcrb
orb
mov
mov
lret
and
or
pop
inc
push
test
call
in
lods
push
sub
xchg
sub
jmp
sahf
pop
mov
popf
lock
fdivs
cmp
cmpl
das
sub
mov
xor
jp
cmp
pmaxub
inc
mov
js
out
sbb
xchg
ret
in
movsb
jmp
dec
movsb
adc
or
iret
pop
sub
jmp
and
movsb
dec
ja
in
inc
push
enter
fcomi
jmp
pop
push
pushf
out
mov
push
in
inc
cmpsl
xor
xor
and
movsb
adcl
push
jne
add
mov
orl
fsubs
mov
fdivs
pop
xor
cmpl
xor
and
cld
mov
enter
daa
xor
add
je
lea
dec
clc
scas
shl
std
mov
jp
outsb
fisubrs
sbbb
or
and
dec
sbb
push
jmp
mov
andl
cmp
jp
out
call
inc
rorb
or
rorb
adc
or
mov
pop
movsl
adcb
and
inc
mov
sbb
jmp
push
push
mov
lahf
inc
or
push
xchg
repz
dec
fildll
push
sub
add
jle
or
dec
add
ficoms
aad
movsb
jmp
sbb
imul
arpl
push
or
pop
popf
push
mov
and
rorl
movsb
cmp
ja
out
idiv
std
je
mov
sub
cmp
add
adc
and
pop
or
shr
jl
cltd
fidivrl
jl
xor
enter
mov
scas
cmpl
xchg
adc
pushf
cwtl
jle
mov
jmp
push
mov
jg
lahf
mov
pop
popa
ja
je
lea
loope
cmp
ja
movzbl
and
push
mov
or
push
test
push
andb
and
push
pushf
or
ret
int
push
push
and
daa
lods
mov
and
mov
sbb
cs
xor
std
xchg
or
push
daa
add
mov
or
add
or
add
add
or
mov
mov
push
or
cmp
into
jae
dec
std
cld
push
fcoml
je
sub
shlb
xor
in
mull
lds
test
pop
cld
jle
pop
sarb
inc
or
inc
add
gs
and
mov
sbbb
or
in
xchg
and
xor
call
insb
fmull
popa
adc
pushl
pop
jno
cld
lods
mov
je
lock
and
jl
nop
mov
adc
mov
adc
jmp
add
pop
test
mov
sub
jmp
sbb
dec
jne
push
push
add
xchg
adc
and
xchg
cmc
loopne
pop
jne
push
pop
mov
test
stos
jp
sbb
lea
inc
or
cld
jne
arpl
mov
subb
cs
cmpsb
pop
cmp
rcll
nop
pop
ret
add
mov
pop
sti
xchg
or
cmp
xor
sub
cmpl
sbb
cmp
inc
divb
orb
pop
mov
mov
pushl
sbb
push
pop
add
cltd
and
adc
adc
nopl
and
jg
push
jecxz
xchg
orl
pmuludq
and
shll
hlt
mov
rol
cmc
or
push
sbb
cmp
cmp
cmp
fstl
mov
xlat
cmc
dec
js
inc
call
inc
or
inc
aas
add
das
nop
cmp
sub
pop
lods
add
jl
mov
fs
les
popa
orb
push
adc
add
push
pop
pop
mov
lods
mov
push
push
ja
jmp
cmc
popf
and
loope
in
js
and
push
push
push
mov
je
or
mov
addb
ja
jmp
push
cmp
jb
daa
lea
jbe
bswap
mov
mov
out
imul
int3
mov
imul
push
fistpll
mov
lods
rcll
les
push
repz
out
movsl
sete
dec
lahf
mov
push
xchg
mov
cli
and
je
jne,pt
aaa
ljmp
mov
inc
shrl
push
pop
pop
xchg
mov
mov
add
bnd
das
jns
mov
inc
cmpb
movsl
dec
or
jns
sbb
test
cmpl
and
sbb
and
sti
adc
bound
aam
push
sbb
clc
outsl
les
cmp
fcoml
push
shll
roll
adc
cltd
dec
ds
int3
add
lea
mov
and
test
mov
push
cwtl
inc
orb
push
adc
outsl
xor
lds
ret
mov
inc
jne
push
leave
mov
bound
pushl
popa
cmp
push
push
jns
fs
or
push
sbb
rcr
add
inc
jmp
mov
call
add
orb
aam
sub
ss
sbb
shl
sbb
sbb
sub
pushf
sub
sub
in
xor
sbb
sub
sub
dec
xor
sub
in
cmp
in
sbb
dec
push
jb
sbb
addl
dec
inc
push
aam
fcomps
std
pop
pop
jmp
push
push
mov
or
mov
sbb
jmp
orb
test
inc
aad
mov
sbb
pusha
xlat
lea
xor
push
jnp
and
addl
enter
xor
jne
iret
sub
lods
mov
adc
cmp
hlt
je
cmp
ljmp
mov
pusha
jnp
xchg
push
cli
andl
in
daa
loopne
imul
xchg
rclb
and
mov
inc
cmp
jb
jmp
stc
sbb
or
mov
fcompl
xor
sbb
xor
lds
mov
sarb
pop
push
scas
jo
cmp
rolb
cmpsb
outsl
daa
jle
mov
enter
xchg
clc
jnp
pop
je
pop
jle
add
inc
or
je
xor
add
ffreep
clc
xor
sti
mov
and
js
push
xor
and
cmp
adc
clc
pop
sbb
enter
dec
sbb
jne
jg
dec
fdivrs
outsl
cmpsb
adc
ja
fs
std
or
xor
lods
adc
push
dec
adcl
sti
or
dec
push
push
in
jnp
aaa
sub
pop
je
or
clc
mov
cltd
pop
test
cmp
sub
test
add
mov
adc
push
sbb
or
sarb
add
or
int3
clc
xchg
adc
or
dec
fcmovu
nop
jbe
push
mov
ja
adc
mov
sbb
inc
rclb
dec
ret
xor
hlt
or
fcmovne
xchg
lea
mov
push
xchg
movsb
xchg
rcr
and
aas
pusha
mov
and
push
movl
jnp
mov
and
push
and
inc
xlat
aam
repz
int
jl
jnp
dec
jbe
jo
cmp
inc
mov
dec
in
inc
lock
pop
dec
loopne
lods
pop
xchg
or
lock
roll
push
jmp
adcb
out
je
insl
dec
dec
sub
lahf
je
xchg
shlb
push
rcll
or
cmp
fstps
mov
add
jecxz
pop
add
mov
sub
mov
cmp
das
rol
and
add
enter
sub
sbb
adc
push
xor
pop
mov
push
div
mov
sub
int
inc
sbb
icebp
popa
dec
or
pop
ret
dec
inc
jp
sbb
pop
adc
push
inc
outsl
popa
push
xor
mov
xor
lods
stos
adc
outsl
add
mov
xchg
mov
movsb
aam
or
je
loopne
test
mov
lock
sti
mov
jnp
mov
in
lret
dec
les
adc
sti
in
out
add
fimuls
addl
cmp
ret
push
scas
fdivs
and
sub
aaa
or
call
shlb
mov
pop
aaa
xor
sub
orb
add
rolb
pop
out
pop
sub
cmp
mov
dec
imul
dec
pop
or
sahf
aam
lods
mov
mov
add
jge
mov
mov
pop
call
pop
push
mov
int3
dec
mov
arpl
enter
repnz
rolb
jle
jnp
pop
sbb
inc
js
mov
xchg
cmp
cltd
loopne
or
loopne
push
les
ja
pop
hlt
je
test
jo
push
je
cmp
sbb
pop
clc
ret
je
xchg
mov
dec
sub
sbb
cwtl
mov
mov
inc
push
popf
cmp
mov
lods
xchg
pop
les
adcl
add
inc
loope
jb
cwtl
or
pop
cltd
and
loope
das
cmp
fidivrl
add
call
mov
cmovge
dec
int3
cmpsl
repz
inc
inc
or
or
int
cld
mov
lea
push
lea
push
push
push
inc
out
jno
xchg
sbb
mov
call
lcall
out
or
xor
push
add
test
xor
lock
pop
lods
insl
adc
sbb
mov
and
or
leave
dec
dec
fstl
rcrb
cmp
push
nop
adc
or
push
pop
aaa
insl
xor
fadds
and
xor
push
add
rolb
inc
pop
add
add
insb
pusha
test
add
add
xchg
pop
leave
call
cwtl
subl
push
iret
shlb
fisttpl
pop
sbb
cmp
xchg
sbb
gs
cmp
lock
push
and
push
jecxz
iret
inc
pop
rorb
lock
dec
sti
jbe
addl
jp
push
push
pop
push
fcomps
ss
fwait
dec
das
pop
daa
cli
xchg
imul
ljmp
bound
jle
cmp
push
movb
pop
and
mov
test
jo
add
nop
xchg
push
sbb
unpcklps
jne
xor
add
out
orb
inc
xchg
sbb
je
add
add
add
xorb
lret
hlt
xchg
dec
rclb
and
out
mov
in
shrb
lea
mov
adcl
jnp
add
push
lret
mov
push
sbb
inc
fsubl
mov
xor
xor
push
inc
aas
add
je
or
cmp
push
sbbb
test
rcrb
fmull
rorl
add
adc
pop
inc
bound
xchg
pop
xchg
loopne
adc
xor
scas
mov
fmulp
push
sub
in
or
sarl
sbb
cmpsl
nop
xchg
in
in
push
adc
push
lcall
mov
sbb
mov
ret
clc
pop
shlb
test
je
call
les
jae
fcmovnbe
pop
dec
cmp
clc
cmp
sub
inc
pop
cld
test
sub
clc
cmp
xor
xchg
and
outsb
je
iret
pop
shrb
pushl
fldt
push
jmp
xlat
std
push
xchg
push
xchg
push
xchg
cmp
ret
xor
push
mov
push
sub
lcall
dec
dec
sbb
in
cmp
int3
cmp
jbe
fistpll
cltd
movsb
inc
add
cmp
cmp
adc
push
cmp
je
push
sti
lea
jg
mov
movsl
aam
mov
repz
mov
mov
adc
push
or
lock
jne
addr16
movsl
ret
ret
mov
or
sbb
ljmp
out
decl
mov
neg
lea
add
inc
inc
dec
jne
pop
and
and
test
pop
je
xchg
or
dec
jmp
shr
add
mov
shr
shl
enter
pushf
push
hlt
cli
lock
pop
and
mov
adc
add
pop
pop
jb
xchg
out
sub
pusha
xlat
and
cld
arpl
mov
fwait
test
push
mov
add
cs
adc
mov
xchg
or
mov
dec
sub
inc
sub
and
dec
push
test
and
add
and
addr16
push
dec
mov
sub
movb
adcb
cmp
test
enter
mov
jae
dec
xchg
out
pop
dec
push
shlb
fldl
insb
scas
push
mov
test
xchg
and
mov
inc
test
mov
fildll
andb
jecxz
jle
push
add
mov
imul
or
or
push
pusha
test
inc
ret
sbb
lods
test
or
imull
or
push
and
hlt
ret
nop
pop
xor
and
adc
and
adc
xor
add
push
jecxz
aad
adc
out
inc
ret
in
push
xchg
cmp
push
dec
dec
mov
add
mov
mov
inc
push
test
cmp
xchg
sub
test
jmp
popa
add
pop
enter
iret
clc
and
add
pop
mov
les
or
loopne
xchg
xchg
aas
push
mov
jbe
adc
mov
xor
cmpl
pop
adc
and
pop
fdivs
cmpsb
mov
sar
xchg
sbb
mov
or
jmp
pop
cmp
pushw
inc
loopne
jle
cld
dec
call
fadds
jle
or
jmp
inc
stc
jge
jge
mov
sarb
or
or
lods
sbb
das
add
push
xchg
jl
sbb
pop
fwait
cld
mov
mov
lcall
mov
pop
scas
orl
sub
inc
jecxz
lcall
pop
jne
popf
pop
pop
lds
push
push
int3
sahf
add
push
inc
dec
lcall
test
pop
cmp
loopne
sub
roll
jne
pop
fs
dec
addr16
fdivr
inc
push
cmp
fsubrl
adc
adc
mov
and
pop
sarl
fadds
jne
xchg
jge
jle
jl
pusha
mov
jo
mov
push
cmpsb
jl
push
push
push
pop
mov
in
push
icebp
jnp
dec
add
aam
ret
jbe
cltd
jno
test
inc
test
inc
xchg
jmp
outsl
dec
adc
inc
and
icebp
popa
out
and
push
icebp
les
pop
inc
stos
cmp
bound
lahf
sub
and
jnp
dec
or
clc
add
sbb
shr
jnp
jno
int3
adc
or
or
push
mov
cmpb
pusha
sub
jbe
stos
mov
lahf
mov
mov
lods
cld
je
pop
push
push
pop
mov
lahf
cmpsl
jp
arpl
adcl
loopne
jne
and
cmp
push
jne
or
cmp
pushf
pop
xchg
daa
cmp
lock
adc
mov
sarb
sbb
scas
push
sbb
cwtl
pop
push
fstl
mov
in
in
push
sub
into
int3
xchg
sbb
add
jge
clc
inc
jl
mov
test
pop
fdivs
ffree
stc
xlat
inc
fadd
cmpl
sti
test
jnp
popa
leave
adc
mov
or
pop
stos
imul
bound
push
mov
mov
fstl
and
sub
add
fisttpl
and
jb
mov
mov
cltd
dec
mov
cmpsl
js
jns
js
push
test
fbstp
arpl
fldenv
mov
shlb
push
dec
aam
xorps
icebp
lods
adc
rcl
adc
jl
pusha
es
cmpsb
loopne
jo
ljmp
adc
ja
xchg
adc
negb
jne
push
sub
mov
or
insl
dec
sub
das
outsl
shll
inc
cmp
cwtl
cmp
fs
mov
mov
adc
and
xchg
or
loope
xor
mov
shrb
in
push
or
lret
loop
mov
outsl
aaa
add
xor
or
add
jg
or
jo
mov
push
jne
mov
xorl
jl
and
xorb
add
add
shrl
and
mov
add
test
cld
cmpps
sbb
or
xor
pop
inc
dec
lcall
inc
push
fs
shl
loop
mov
leave
mov
xchg
fs
lret
xorb
shlb
loopne
clc
orb
inc
and
add
and
enter
rorl
rclb
mov
imul
jns
adc
lahf
cmpb
mov
test
flds
sbb
imul
mov
xchg
jg
mov
xor
xchg
mov
cmp
cmova
insb
mov
xor
dec
rcrb
add
jg
or
out
cwtl
popa
mov
or
insb
xor
sbb
sbb
add
rcrb
xchg
push
cmp
mov
mov
or
lock
dec
inc
xor
rolb
mov
test
push
pop
imul
push
mov
pusha
test
mov
pusha
xor
sub
je
cld
loopne
adc
fmull
lcall
fnsave
test
lods
mov
push
push
sarb
add
or
rorb
sti
add
pop
sti
dec
jnp
loop
cmp
cmp
stc
enter
subl
repnz
push
imul
adcb
push
xchg
xor
icebp
add
je
mov
push
push
xchg
dec
inc
dec
sbb
cmpsl
inc
cmp
jb
ja
fcoml
es
and
push
xor
mov
push
inc
xor
or
cmp
xor
add
jnp
je
sub
sahf
ficompl
clc
inc
push
push
jmp
mov
jnp
pop
sbb
xor
cmpsl
mov
out
fcoml
or
add
sti
mov
faddl
popf
sbb
fnstcw
pop
out
cld
and
test
cmp
rorb
mov
mulb
mov
add
mov
push
push
jae
aad
jno
sub
xor
cld
mov
mov
cmpl
inc
inc
loopne
fsubs
mov
pop
loope
add
movsb
lock
cmp
je
imul
or
aam
pusha
out
clc
ss
cld
adc
push
imul
adc
test
fsubs
push
and
clc
sbb
and
push
inc
push
or
loopne
test
bound
clc
cwtl
adc
sbb
mov
xor
mov
add
jne
andl
rcrl
push
push
add
mov
aas
ds
jns
sbb
enter
roll
push
add
add
inc
insb
pop
std
sub
aad
push
cmp
add
mov
dec
push
out
push
mov
mov
stc
movb
sub
push
sbb
ds
xor
mov
pusha
or
sub
iret
sahf
or
xchg
add
daa
xor
sbb
add
dec
clc
fisttps
pop
pop
loope
test
jge
push
jl
jns
cld
insl
mov
lock
outsl
pusha
adc
in
jo
push
jns
mov
cmp
out
lock
xchg
dec
xchg
cmp
lahf
dec
xchg
dec
test
mov
xchg
pop
adc
mov
pop
inc
mov
add
les
sbb
cmp
je
or
fs
sbb
xor
ja
or
jns
inc
int3
inc
popa
loope
cmpsl
push
add
aam
xchg
mov
sbbl
ss
mov
adc
mov
inc
push
and
add
and
and
mov
adc
lds
xchg
adc
dec
mov
add
ljmp
jle
adc
int
add
jns
int3
dec
add
cwtl
cmp
or
xchg
cli
sbb
cmp
lret
lods
add
scas
pusha
mov
add
jge
out
ret
movsl
mov
and
stc
jg
push
or
aam
in
insl
pop
sub
test
aaa
xor
std
sub
push
sbb
inc
popa
fadd
sbb
inc
popa
test
xor
jns
ret
loopne
mov
mov
fcmove
sub
mov
sarl
bound
and
hlt
and
les
or
imul
pop
cmc
cmp
inc
push
aaa
aad
bnd
rorb
negl
orb
std
je
or
or
je
repnz
push
or
js
outsl
lds
mov
xlat
jmp
lock
repnz
xchg
jl
pushf
adc
ret
cmp
sub
les
bound
push
cltd
in
cld
cmp
rcll
das
out
dec
sbb
insb
xchg
fs
sbb
mov
pusha
loop
pop
push
or
stos
sub
xor
mov
add
or
pop
imul
aad
cwtl
push
or
lock
inc
mov
pop
pop
loopne
decl
cmp
jne
mov
es
add
inc
aas
nop
dec
pop
xchg
in
cmc
dec
call
js
pop
stos
mov
mov
cmpb
jne
insl
out
jmp
cmp
inc
movsbl
mov
movb
jg
cmp
add
jmp
int3
cmp
cmp
test
mov
jge
addb
je
push
fldcw
dec
xor
fidivrs
nop
xchg
and
es
aad
and
and
sbb
aas
inc
or
jns
push
test
js
lods
jp
pop
sti
push
inc
mov
lds
xchg
pop
popa
es
clc
lds
scas
jl
and
pop
sub
in
pop
xor
lock
push
popa
push
or
push
je
icebp
stos
dec
inc
push
push
inc
fsubp
xor
lret
jo
push
push
adc
xchg
pop
push
push
push
xchg
mov
mov
sbb
cmpsl
or
adc
add
imul
jne
int3
ret
inc
mov
aam
aam
fsub
sti
cmpsb
inc
sub
cmp
shll
or
sub
insb
ds
js
pop
fstl
loop
fdivr
inc
and
jae
cmp
and
mov
xor
nop
ret
sub
jbe
in
cmp
int
lds
mov
mov
lahf
push
ret
xchg
shll
inc
add
and
pop
mov
popa
in
jge
and
jge
pop
aas
and
and
pop
jle
mov
aas
inc
mov
and
lock
push
outsb
sub
lods
ret
or
xor
sub
mov
fdivrs
xor
sar
lret
jge
xor
cmp
je
cmp
jo
data16
inc
add
xor
sbb
in
ret
ret
add
clc
xchg
cmp
sbb
inc
loopne
aad
shl
cmp
and
adc
or
inc
jno
mov
inc
aad
nop
cwtl
nop
mov
daa
andl
lcall
jno
mov
nop
pop
fisubs
int3
xor
inc
sbb
jl
dec
les
fadd
mov
cmp
lds
pop
pop
mov
xorb
inc
and
xchg
arpl
repz
mov
rcll
hlt
andb
xchg
inc
inc
rorb
sbb
addr16
push
adc
lods
cmp
enter
shll
mov
pop
notb
pop
lret
lods
arpl
sub
sub
sbbb
jno
xor
add
lea
adc
jecxz
shll
aad
test
cmp
xor
mov
pop
enter
push
test
pushf
pop
pop
dec
mov
add
in
sub
xchg
loope
daa
jl
rcrl
inc
cli
lock
xlat
or
add
xor
fwait
and
cmc
dec
lods
pop
cwtl
jns
clc
adc
jecxz
jno
lds
std
cwtl
cmp
adc
and
into
jmp
pusha
fmull
lock
aaa
mov
loope
imul
dec
lock
xor
es
adc
outsl
pop
mov
dec
push
int
gs
loop
js
sti
push
dec
cmp
push
mov
and
fcomps
lods
sub
sub
ficomps
mulb
test
jmp
mov
mov
mov
clc
les
push
call
testb
loopne
add
mov
cmp
or
push
push
in
test
ret
test
sbb
std
aam
xchg
mov
int
sbb
imul
cmp
adc
jmp
in
sbb
inc
les
dec
enter
les
xor
pop
adc
daa
add
subl
jmp
and
and
icebp
adc
das
xchg
add
je
jmp
ss
insl
cwtl
lock
ret
mov
xchg
adc
inc
mov
mov
cmp
pop
sub
pop
push
mov
lods
les
jp
test
push
repnz
jg
jne
inc
and
add
adc
mov
jno
sbb
ds
aam
daa
sub
sub
pop
add
adc
loopne
into
cmp
ret
outsl
subb
stc
outsw
sti
cmp
jb
jmp
dec
add
and
lea
push
inc
jae
pop
jecxz
xor
repnz
mov
inc
test
movsb
sub
sbb
push
pop
mov
mov
idivl
lea
fwait
out
inc
hlt
pop
pop
xor
jo
dec
and
inc
fnstenv
jl
popf
add
xor
mov
push
push
imull
adc
cld
scas
jbe
pop
out
addr16
dec
sub
mov
push
ss
adc
push
sarb
mov
negl
mov
mov
jg
das
mov
inc
sahf
push
jecxz
aad
cmp
and
jno
gs
sbbl
inc
cwtl
mov
mov
jmp
pop
pusha
imul
sbb
pop
and
sub
fdivrl
icebp
jecxz
mov
add
xchg
pop
xchg
pusha
pusha
dec
ret
or
fucomi
sbb
mov
adc
jle
push
dec
dec
stos
mov
subb
js
push
and
and
xchg
mov
mov
pusha
pusha
mov
in
inc
arpl
or
or
daa
sub
mov
loop
mov
rolb
sbb
mov
xlat
xor
dec
mov
jg
frstor
push
push
push
push
push
push
cmpsb
shlb
dec
inc
dec
test
mov
jne
mov
clc
cmp
lret
sbb
add
mov
mov
leave
stos
push
inc
ret
aas
dec
and
sub
and
bnd
dec
inc
xchg
xor
repnz
nop
ret
decl
ljmp
mov
sub
or
js
sbb
xor
arpl
dec
xor
and
cmp
cmp
lahf
pop
add
ret
mov
sbb
lock
ss
or
call
shrl
fwait
aaa
jnp
jno
fists
jg
xchg
adc
bnd
dec
mov
iret
mov
test
bnd
push
rcll
leave
repz
pop
jb
repz
inc
jb
repz
and
leave
repz
add
mov
add
lock
imul
lds
jg
inc
les
jns
enter
roll
pop
mov
or
cmp
in
nop
test
pop
bnd
push
pop
bnd
push
inc
cs
inc
sub
xor
in
inc
int
in
mov
sub
andl
sbb
inc
sahf
pop
xor
cli
inc
adc
fs
or
or
fs
inc
add
or
or
cld
rorb
out
push
ljmp
rorl
push
sub
negb
mov
flds
sub
inc
inc
les
mov
enter
cwtl
pusha
mov
test
mov
adc
jl
or
mov
sbb
sbb
add
and
or
ds
lds
inc
cs
push
xchg
jno
fdivrs
enter
xchg
enter
sub
and
test
jns
enter
or
add
xchg
enter
push
push
dec
mov
mov
fmuls
aad
sbb
fdivs
call
adc
lea
inc
jp
lods
jb
inc
push
xor
and
imul
andl
sbb
adc
xor
in
sub
inc
inc
mov
in
inc
sbb
cmp
fs
pop
enter
sub
dec
mov
inc
mov
and
pop
repnz
popa
cs
and
and
sbb
push
jmp
and
in
in
pop
fwait
pop
sbb
shlb
inc
cs
inc
push
or
add
fs
or
add
dec
enter
xor
cmp
xor
mov
jb
in
in
into
and
loopne
or
jns
xor
xchg
and
jl
enter
push
sarb
leave
or
jl
clc
xor
xor
popf
movsl
fadds
mov
and
das
in
mov
xor
test
mov
je
add
jns
adcl
or
nop
inc
test
enter
inc
sbbl
cs
or
jns
cmp
nop
and
sub
test
and
enter
inc
dec
pop
enter
inc
loop
sbb
lea
test
add
sub
add
das
jo
enter
mov
jb
push
mov
xor
jl
ds
adc
adc
lods
push
add
or
ja
push
xchg
dec
in
push
push
xchg
leave
enter
leave
in
mov
or
in
jl
mov
mov
in
add
std
jnp
add
mov
fwait
nop
pop
aaa
add
jo
mov
dec
pop
mov
std
push
repz
or
xchg
sub
cwtl
jl
dec
enter
add
push
popa
xor
xor
and
lock
clc
add
push
add
pop
aad
test
in
ds
and
js
jbe
or
clc
mov
in
jmp
cmp
mov
divl
int3
mov
nop
xchg
or
xchg
insb
xchg
sub
xlat
cs
xchg
mov
pop
dec
pop
leave
and
mov
jmp
sbb
pop
ret
mov
out
lods
or
inc
es
mov
nop
enter
xor
mov
inc
push
push
and
clc
mov
add
mov
sbb
mov
inc
jle
or
mov
mov
adc
inc
pop
inc
mov
daa
pop
or
sbb
push
push
lahf
ja
bnd
mov
sbb
push
push
add
cmpl
cmp
ret
add
fiaddl
cwtl
push
lea
lret
je
rolb
inc
xchg
scas
in
insb
add
stc
mov
or
xchg
sbb
mov
add
insb
dec
sub
imul
add
xor
add
test
sbb
inc
rcll
rclb
cmp
dec
sbb
pushf
aas
add
mov
aas
pop
add
adc
les
and
xor
mov
push
jmp
inc
add
icebp
imul
in
jnp
dec
add
or
xor
push
jnp
aaa
sub
push
aam
cmp
aad
push
jg
add
add
rorb
xchg
addb
nop
das
pushf
test
sbb
ret
and
enter
xchg
jg
push
hlt
lcall
pushl
enter
xor
sbb
and
inc
jb
sub
jb
insb
pop
nop
inc
cs
test
inc
push
mov
nop
or
push
add
daa
das
jle
dec
addr16
test
into
sbb
cs
das
sbb
inc
push
xor
sub
or
sbb
les
and
xor
test
adc
mov
aas
add
jb
inc
lea
add
daa
in
clc
mov
pop
cltd
nop
ror
mov
and
or
hlt
push
fsub
inc
push
mov
nop
or
rcrb
jp
daa
das
dec
adc
xchg
inc
data16
js
jl
mov
cmp
bound
adc
xchg
or
and
jb
xlat
mov
mov
test
mov
push
adc
sub
or
sub
inc
cs
jl
push
in
test
mov
or
or
jns
daa
pop
or
enter
jl
push
das
in
jecxz
dec
daa
or
sub
cmp
push
cmp
nop
inc
cs
sub
test
enter
sbb
adc
inc
dec
pop
mov
or
xchg
rorb
add
fs
sbb
pop
xor
test
mov
aam
xor
repnz
sbb
pop
add
mov
orb
daa
sbb
outsb
pop
push
or
sub
aad
mov
les
lock
ret
lods
xchg
add
sbb
outsl
xor
mov
sbb
movl
sbb
dec
mov
ljmp
mov
mov
insb
push
push
dec
sbb
out
mov
jl
loope
inc
loop
add
rorl
or
and
in
mov
push
mov
fwait
stos
mov
or
xor
xor
sbb
clc
popf
add
ds
mov
cmpl
je
je
subl
adc
xor
push
pop
cwtl
iret
push
xchg
arpl
mov
xor
push
aam
hlt
push
lods
mov
xchg
and
arpl
sarl
xchg
ret
cmpsb
sbb
mov
jae
aad
imul
sbb
and
and
sbb
ds
cs
push
add
cmpl
je
or
and
lea
arpl
jns
add
lods
push
shll
das
fsubs
xor
js
jmp
fadds
push
push
cmp
and
jbe
aas
add
pushf
stc
mov
and
sti
lds
das
enter
addl
int
dec
sti
push
les
sbbl
xor
inc
test
in
inc
sti
jle
pop
sbb
out
adc
or
popf
xor
test
je
and
add
cli
das
dec
loope
jb
cmp
lods
ret
mov
mov
and
xor
ja
mov
cmp
popa
mov
sub
test
rcll
iret
add
adc
loopne
adc
lock
mov
cmc
addr16
xor
push
imul
adc
jl
cmp
sbb
clc
sbbb
add
addb
data16
cmpl
mov
mov
stc
test
aaa
add
mov
gs
and
cli
dec
mov
push
rclb
adc
jne
sub
test
lock
push
jbe
pusha
pop
insl
xchg
cmpsb
or
insb
or
add
push
repz
je
push
jnp
popa
ret
fstpl
popf
push
iret
jnp
sub
ret
xchg
xchg
jb
xchg
sbb
push
xor
push
loope
push
inc
dec
jmp
add
push
lock
pop
cmp
push
jle
or
stos
add
and
lahf
and
mov
lds
push
adc
outsl
fistpll
add
push
pop
cmp
jbe
or
negb
aaa
xor
jbe
cmp
pop
inc
adc
push
mov
or
jns
inc
loope
mov
int3
fildll
xchg
aaa
adc
or
fucomip
sbb
leave
js
shr
mov
or
jno
pop
dec
mov
jg
roll
dec
and
aas
and
lods
mov
cmp
cli
push
and
sub
pop
inc
leave
and
loopne
mov
insl
add
adc
andb
lea
mov
pop
rclb
leave
mov
pushf
xchg
pop
mov
test
mulb
or
rolb
add
or
sbb
lock
xchg
ret
je
jle,pn
xor
inc
inc
mov
dec
ds
mov
mov
jle
add
js
push
sar
mov
incb
add
mov
jl
cwtl
pop
fsubr
lods
inc
int3
push
mov
enter
stos
loopne
inc
and
cld
rclb
lcall
jle
jbe
js
or
adc
sbb
add
cmpb
jne
push
jmp
mov
mov
insb
cmp
push
js
insb
or
fs
es
shrb
loop
jl
mov
mov
push
andl
lock
dec
pop
insb
dec
adc
cld
push
neg
xor
sub
pop
push
fs
add
sub
clc
mov
pop
pop
fs
mov
add
push
xor
hlt
insb
xchg
add
inc
jne
push
outsb
adc
fsubrs
fisttpl
mov
roll
movsl
and
push
call
xchg
xor
mov
filds
dec
lods
jle
imul
mov
or
lahf
xchg
mov
sub
sub
and
sub
sub
shr
es
ror
jns
in
add
clc
cld
loope
jle
or
aad
mov
adc
and
xor
dec
pop
and
xchg
mov
dec
rorl
nop
mull
daa
sbb
add
mov
add
dec
push
mov
inc
add
mov
add
adc
add
adcb
dec
dec
add
hlt
decl
enter
imul
sbb
sbb
popf
adc
rorb
imul
repz
setae
lods
hlt
pop
and
in
and
add
push
adc
or
adc
jl,pn
adc
xchg
clc
lea
jle
gs
adc
cli
popf
cwtl
cli
ljmp
jg
mov
adc
adc
out
test
lret
add
orl
rcrb
mov
push
mov
sbb
clc
adc
aaa
sbb
xlat
enter
call
push
mov
xchg
mov
adc
xor
nop
add
mul
lods
mov
dec
or
jg
pop
push
jns
sbb
sub
test
lds
stos
xchg
and
inc
lods
mov
and
xor
cmpl
rolb
add
push
enter
orb
pop
add
cmc
iret
dec
mov
lods
clc
sub
pop
enter
push
inc
mov
pop
gs
and
nop
dec
dec
and
or
adc
sub
shll
test
add
clc
xchg
hlt
nop
cmp
jmp
adc
icebp
in
mov
aad
push
das
pop
testb
mov
stc
adc
or
dec
pop
push
mov
adc
push
mov
sbb
pop
shlb
adc
mov
and
adc
or
inc
pop
adc
out
mov
add
xchg
popf
fiaddl
adc
xchg
or
imul
xchg
sub
pop
and
cmp
mov
or
and
cmp
bound
jmp
sub
clc
mov
jp
push
xchg
and
call
xchg
pop
sbb
fadds
pop
sarb
xchg
jp
mov
inc
mov
sub
cmp
sub
imul
dec
push
mov
mov
fisttpll
jb
sbb
movsl
adc
xchg
and
insb
xchg
cmp
ljmp
sbb
mov
nop
dec
push
in
sbb
dec
inc
ret
add
and
xchg
insb
popf
pop
mov
jp
mov
lcall
xlat
or
ret
sbb
jo
add
mov
loopne
xchg
pushf
mov
out
shrb
mov
xlat
ret
mov
unpcklps
push
push
push
adc
dec
mov
mov
jge
mov
and
pop
ret
andb
lret
aaa
or
repnz
sbb
insb
push
popa
andb
rclb
in
pop
mov
cli
mov
cmp
add
popa
xlat
arpl
ret
push
push
push
add
adc
push
inc
or
enter
sbb
adc
test
les
fcmovnu
adc
insl
inc
cwtl
add
sub
jo
push
or
loop
mov
int
call
add
jle
sub
inc
nop
or
mov
sbb
lock
dec
rcrb
cmc
push
je
add
jne
sub
repnz
push
jo
cmp
sbbb
ja
ret
push
hlt
push
sbb
iret
mov
adc
mov
cli
inc
fldcw
sub
lea
sbb
in
fisttps
sahf
fcmovbe
fs
or
adc
xchg
adc
or
add
sbb
or
xorl
xor
sub
and
sbb
mov
or
lret
negl
pop
in
rcrb
push
adc
sub
not
lods
sbb
mov
loope
adc
lcall
into
mov
shrl
test
imul
jmp
das
mov
adc
xlat
pop
rcrl
jns
jo
dec
and
rorl
shlb
push
pushf
loopne
xchg
inc
lahf
sbb
repnz
and
jb
and
test
push
and
pop
aaa
leave
add
pop
and
and
sbbl
inc
nop
adc
out
and
push
ss
xchg
popa
xor
jo
push
or
and
pop
sub
addr16
sub
je
addb
inc
push
push
aad
enter
add
xor
inc
dec
loop
cvttps2pi
cmp
aam
and
mov
int3
cmpsl
and
es
not
ret
push
mov
mov
jbe
mov
inc
subl
ret
add
aaa
or
xchg
iret
gs
scas
or
scas
sub
mov
jne
add
or
mov
arpl
add
fdivs
adc
cmp
lods
and
jne
mov
loopne
iret
pop
or
inc
ficoml
fsubrs
shrb
xchg
sti
jne
js
movsb
lahf
out
jl
mov
je
dec
test
add
lock
scas
or
sbb
jns
lods
and
inc
lods
cmp
ret
js
add
je
mov
je
sub
cmp
jo
pop
popa
je
pusha
xor
test
das
dec
hlt
test
mov
or
lock
movsl
adc
dec
jnp
mov
pushf
adc
mov
inc
aam
les
scas
roll
je
loope
movsl
or
and
iret
fiadds
and
pop
mov
mov
adc
lcall
pop
fwait
bound
in
inc
and
enter
push
sub
mov
enter
test
stos
adc
iret
repz
je
jg
jmp
dec
xchg
test
xchg
xchg
cwtl
mov
stc
out
push
stc
dec
mov
fsubrs
adc
pop
and
andl
nop
push
pushf
stos
xor
das
sbb
push
or
cltd
push
fisttpll
jmp
xchg
movsb
lds
fwait
imul
inc
pop
inc
jne
stos
inc
xchg
sub
xor
push
and
xchg
aam
in
push
stos
inc
or
mov
push
fadds
push
fs
sub
push
mov
test
jns
dec
mov
xlat
call
add
mov
shll
push
cs
push
push
rolb
je
push
enter
dec
imul
xor
xor
movsb
addb
subl
adc
loope
into
jns
leave
inc
popa
adc
push
lea
add
cmc
jp
jecxz
or
mov
pop
sbb
add
xchg
xorl
mov
mov
dec
movsbl
addr16
test
or
sub
in
pop
shrb
negl
xchg
das
mov
call
inc
mov
lods
rclb
pop
xchg
cld
shr
mov
imul
mov
or
aam
test
movb
mov
movsb
call
dec
incl
cmp
jae
mov
mov
sub
xchg
inc
notl
xchg
lcall
jb
subb
loop
and
pop
dec
jo
jb
test
mov
lds
inc
test
mov
cld
lds
jae
add
fdivl
cmp
loopne
jno
add
test
sub
les
mov
push
sbb
or
jo
adc
ret
sbb
fwait
add
stc
push
insl
lcall
loopne
jmp
inc
mov
dec
pop
cli
rcrl
push
out
mov
test
daa
repnz
addr16
pop
inc
add
pop
and
movl
pushf
cmpsb
adc
je
cmc
insl
test
mov
add
sbb
data16
xor
sbb
adc
dec
mov
test
adc
and
mov
aaa
push
test
nop
pop
xor
xor
add
stc
cs
and
out
cmp
testl
dec
loopne
daa
dec
in
adc
cwtl
cli
xor
sbb
cmc
add
cmp
pop
mov
push
add
add
in
jmp
dec
rcrb
popa
mov
pop
xchg
inc
and
jge
loop
mov
pushw
adc
roll
xchg
jo
pop
fdivr
pop
xchg
jmp
rorl
sbb
lock
jnp
push
imul
lods
inc
mov
aad
lods
cmpsl
add
fdivr
mov
inc
adc
adc
test
rolb
inc
rclb
orb
pop
push
xchg
std
jo
dec
dec
sub
sbb
inc
mov
mov
jae
test
dec
das
mov
fistps
sbb
test
adc
shr
push
cmpsl
div
cld
pop
sbb
sub
adc
adc
mov
lahf
cmpsb
imul
pop
xlat
push
cltd
test
addb
xor
lea
sub
cmc
push
and
test
fisubs
dec
mov
inc
cmpsb
mov
sub
movsb
nop
dec
imul
mov
add
iret
lods
shlb
add
or
inc
or
sub
inc
adcb
jae
addl
xchg
xchg
push
inc
cmp
sub
jecxz
push
xor
leave
or
out
clc
movsl
adc
sbb
xor
scas
dec
adc
enter
movsl
mov
mov
dec
or
lock
shlb
or
xor
popf
call
pop
ret
enter
std
fucom
orl
movsl
sbb
enter
test
mov
push
and
ljmp
lea
pop
xor
push
jne
mov
inc
pop
jmp
xor
scas
mov
fldenv
or
lock
or
sti
mov
cmp
adcl
push
scas
jno
decl
enter
mov
fadds
sar
push
push
mov
fs
mov
and
sarb
subl
sbb
or
push
or
dec
push
cmp
mov
loop
inc
mov
or
push
inc
pop
leave
xchg
sbb
movsb
push
addr16
pop
leave
bound
cmpsl
and
movsb
sbb
and
xor
jmp
movsb
ror
mov
popa
and
mov
aad
test
fbld
adc
les
sbb
jle
pushf
and
push
sbb
inc
jp
push
xchg
or
sbb
sbbl
inc
orl
pop
inc
sbbl
ss
push
dec
or
dec
adc
ret
adc
adc
inc
sub
pop
into
mov
xor
push
aad
fdivrl
lock
adc
mov
xor
cs
jo
insb
or
and
leave
mov
std
andb
adc
test
push
in
insb
repz
add
push
xor
mov
sbb
orl
and
stos
adc
xor
push
push
movsb
iret
inc
or
xor
loop
imul
dec
out
movsb
aaa
enter
sbb
sub
dec
test
mov
inc
loope
dec
push
jns
cmp
jg
cmp
mov
cmp
cmp
pop
cmp
lea
je
push
sbb
mov
inc
cmp
jmp
sets
leave
roll
loopne
pop
push
adc
add
and
pop
sub
add
add
and
adc
or
mov
mov
pop
testb
cmp
outsl
movsb
aad
mov
lods
inc
loopne
inc
cmp
js
jge
dec
push
xor
mov
lods
pop
push
adc
out
inc
cmpsl
mov
popa
insl
femms
mov
push
mov
push
lea
cmpsb
in
cmp
push
hlt
push
nop
mov
mov
mov
int3
sbb
pop
adc
loop
and
outsb
pop
sub
cmpl
leave
mov
inc
xchg
xor
fcomip
gs
and
push
cmpsb
cmp
jne
or
lods
inc
mov
lds
aam
dec
gs
adc
push
push
sub
push
lret
sub
aaa
or
loope
sub
or
pop
clc
lock
add
sub
push
adcb
sub
cmp
sbb
push
add
leave
or
push
adc
movsl
pop
hlt
inc
in
andb
in
push
adc
and
jne
rorb
push
outsb
shlb
xchg
popl
inc
leave
push
cmpsl
push
je
ficoms
mov
push
mov
movsb
fnsave
or
xchg
iret
mov
adc
and
fadd
add
mov
daa
rorb
or
cld
adc
daa
popa
mov
mov
jb
jmp
mul
orl
add
inc
call
adc
es
add
xor
les
adc
enter
decl
sub
arpl
push
add
or
mov
or
fsubrl
and
adc
cmp
leave
orl
gs
add
in
lret
mov
and
push
and
fiadds
pop
popa
imul
add
movaps
jmp
cmp
mov
sti
pop
fwait
adc
mov
ss
lret
mov
push
push
sbb
int3
leave
xor
imul
imul
add
inc
lock
clc
popa
mov
incb
data16
shlb
lds
jne
xor
mov
outsl
mov
iret
pop
dec
ss
adc
fwait
jle
cmp
sub
jmp
mov
and
bound
int
cld
xchg
pop
xor
sbb
fmul
imul
add
out
xchg
mov
cmp
inc
sbb
sbbb
mov
xor
rolb
fs
cltd
mov
pop
je
adc
insb
sbb
and
add
push
jbe
sbb
cmp
enter
push
outsl
xor
push
sbb
mov
dec
or
lock
push
xchg
imul
ss
cmpsl
or
imul
sbb
movsl
xchg
xor
inc
sub
jg
inc
in
inc
rorb
loope
pop
push
mov
inc
and
hlt
std
pop
sbb
enter
sub
lock
jge
stos
inc
lcall
pusha
in
pusha
shlb
clc
or
dec
push
scas
cltd
sbb
sti
not
jbe
arpl
cmp
jb
add
in
add
stc
hlt
frstor
sti
cmp
insl
mov
push
das
movsb
hlt
addr16
sbb
inc
jbe
sbb
jo
push
xor
mov
push
inc
stos
sbb
jno
in
js
mul
xchg
sbb
inc
sti
cld
cmc
xor
or
pop
mov
mov
sbb
mov
adc
mov
pop
cwtl
push
jae
add
inc
cmpsl
sub
cmp
les
cmp
xlat
cmp
xor
cmp
hlt
pop
and
push
mov
sbb
aaa
movsl
pop
and
enter
popf
sbb
les
mov
loopne
mov
adc
dec
mov
xchg
or
sbb
fistpll
test
popf
lock
mov
bound
mov
inc
cmp
icebp
adc
add
cld
add
sub
push
push
push
jmp
dec
dec
fsubrl
inc
lock
inc
cmp
push
dec
repnz
xor
in
movsl
jmp
and
and
xor
sbb
jge
sub
stc
mov
hlt
push
add
faddl
add
cmp
icebp
icebp
movb
fsubrp
add
push
jb
enter
or
pop
inc
popa
ret
or
cmp
cmp
sbb
das
iret
les
incb
repnz
pop
sbb
sbb
in
pop
cmp
popa
cld
cld
adc
xchg
arpl
inc
scas
push
arpl
mov
or
call
and
jne
lods
jge
std
jmp
pushl
pop
fdivrs
push
xorl
inc
cmp
jl
adc
rcrl
fs
push
arpl
rcll
js
jno
inc
or
jge
push
add
testb
xchg
and
ss
xor
push
lea
add
aad
jae
mov
call
mov
dec
mov
adc
sbb
cmp
push
mov
dec
je
gs
or
mov
pop
incl
adc
lcall
arpl
nop
call
add
imul
or
pop
cli
jns
inc
loop
nop
xor
add
es
aad
shr
arpl
imul
ret
hlt
leave
scas
stos
fdivs
jne
push
je
int
mov
or
mov
clc
jp
push
or
pop
in
call
pop
js
xchg
mov
cmp
push
mov
push
add
push
push
and
sbb
filds
sbb
int3
cwtl
and
inc
fdivrs
ss
or
xor
lds
mov
ror
sti
nop
xchg
cld
and
jl
in
sti
inc
push
inc
fstpl
jge
xor
fs
mov
jno
inc
and
sub
dec
outsb
sub
cmpb
aaa
inc
leave
mov
in
sti
adc
mov
in
sti
shl
sbb
in
sti
push
or
aad
pop
outsl
pusha
insb
popa
xor
das
sbb
fildll
and
mov
out
sbb
fildl
popa
inc
mov
add
popa
jle
stc
push
flds
dec
push
inc
cmp
rclb
jl
mov
movsl
popf
out
and
jge
js
xchg
std
orl
rcrb
pop
inc
cmp
jl
andb
and
bound
and
jg
adc
jae
mov
mov
jl
add
add
jg
icebp
popa
pop
lsl
stc
pop
jl
push
or
lret
pop
jnp
push
shll
cmp
or
aas
xrstor
or
add
and
ror
popa
add
stos
mov
adc
in
sbb
add
or
or
andl
lret
adc
jl
jbe
xor
cmp
ficompl
add
mov
hlt
lret
or
mov
outsl
iret
lahf
pop
jne
mov
jne
lahf
sahf
out
mov
add
adc
out
dec
add
fdiv
push
aam
clc
sbb
scas
push
sbb
pop
es
or
add
js
fs
outsb
adc
dec
clc
add
push
into
add
push
push
cld
adc
and
movsl
mov
jmp
push
push
push
dec
addr16
cld
cltd
pop
jbe
jns
dec
insb
scas
sub
insb
fwait
mov
inc
imul
insb
std
add
dec
adc
pop
aad
xchg
scas
bnd
mov
into
mov
add
aas
das
rorb
pop
jl
cmp
add
call
cmpsb
icebp
flds
adc
shl
sbb
and
pop
pop
ret
pop
mov
add
stc
sbb
dec
pushl
imul
insb
loopne
dec
jnp
push
xor
sub
add
add
shlb
mov
shlb
lret
mov
mov
push
dec
or
loopne
sub
sbb
push
scas
or
pop
or
pop
popa
sbb
lock
hlt
rclb
pop
jae
mov
jmp
add
mov
mov
sar
sub
inc
and
push
sub
inc
outsl
aad
xchg
xchg
mov
in
xor
pop
mov
jge
jne
push
inc
adc
inc
pushl
test
inc
mov
inc
sub
dec
clc
mov
mov
fisttpll
and
mov
jbe
sub
dec
cmp
push
je
sub
fildl
or
and
mov
jno
jge
popf
cmp
add
mov
push
adcb
test
xchg
xchg
int
jecxz
sbb
push
gs
popa
adc
push
shlb
or
mov
cmp
test
in
popa
outsl
scas
xor
and
push
sbb
divl
jne
push
aam
stos
out
in
pop
test
jnp
dec
dec
enter
mov
lods
pop
cwtl
sbb
add
or
aas
or
int3
divb
sbb
dec
js
add
movsb
dec
lds
out
mov
push
ficomps
add
xor
jecxz
push
inc
push
sti
clc
mov
lcall
jno
pop
lret
nop
push
or
lods
push
jg
and
mov
xor
orl
push
pop
xor
cltd
push
sub
icebp
jae
addb
pop
jbe
mov
cmpl
pop
jne
adc
mov
mov
pusha
cmpl
movsb
mov
scas
inc
jns
jbe
stos
add
call
xchg
ret
mov
jnp
lret
jnp
cmpsl
jecxz
cmpsl
cwtl
lret
sbb
pop
sub
dec
cmpb
inc
push
pop
leave
xchg
cmp
adc
add
inc
push
cld
into
xchg
and
cmp
into
loopne
sbb
cltd
pop
loopne
inc
xchg
inc
roll
nop
push
mov
dec
test
mov
add
aas
cmp
dec
inc
sbb
pop
cld
inc
sbb
and
pop
mov
add
loope
or
or
in
push
xchg
inc
jo
aaa
sub
mov
push
loopne
cmp
mov
push
and
sub
test
clc
ljmp
fistl
lock
push
out
add
mov
add
sbb
add
push
fwait
push
push
pushf
push
push
leave
xor
ljmp
push
pop
sarb
sub
and
push
rorl
mov
rolb
mov
push
sahf
xor
jno
xchg
cli
xor
stos
cwtl
lret
adc
mov
cmp
or
inc
or
or
enter
inc
or
push
or
cmpsb
hlt
aas
xlat
ret
mov
adc
popa
push
addl
movsb
iret
jg
inc
imul
arpl
inc
adc
sub
add
dec
pop
gs
add
xor
add
fisubs
unpcklps
insl
cwtl
inc
xchg
in
stos
shlb
pop
pop
xchg
push
and
ret
je
dec
dec
jb
enter
and
data16
cmp
das
jae
lods
xlat
or
clc
lods
mov
jmp
push
jmp
aad
jbe
xor
push
push
aad
pop
test
mov
xor
adc
shrb
stos
leave
mov
mov
int3
mov
clc
test
notl
sbb
daa
ret
ds
xchg
xor
lock
push
int
jge
fmuls
sti
mov
popf
hlt
jmp
xchg
or
fdivr
push
inc
add
roll
loope
pusha
popf
in
jmp
jl
sbb
xor
outsl
jge
xlat
incb
push
adc
addr16
fs
pop
inc
adc
mov
fldcw
adc
adc
or
push
push
push
mov
icebp
xor
call
or
es
cld
out
add
stos
loopne
sbb
lret
imul
mov
add
sub
jne
fwait
push
or
fiaddl
pop
mov
sbb
fwait
sbb
lock
add
shlb
stos
and
xchg
test
hlt
jne
and
mov
push
ret
cmp
shlb
push
lock
cld
arpl
arpl
or
mov
hlt
jl
jno
push
pushl
adc
xor
icebp
rep
and
aas
jbe
mov
decl
arpl
test
decb
or
inc
inc
mov
cmp
xchg
inc
add
mov
adc
addb
pusha
lret
jmp
mov
in
jge
insl
je
or
in
cmpb
add
sbb
sbb
adc
mov
int3
and
mov
pop
ljmp
fimuls
cmp
rcll
push
cmp
je
cmp
jne
push
jmp
jmp
cmp
jne
mov
lret
ja
sub
cli
sti
and
frndint
or
jmp
pcmpeqb
in
or
cmp
or
add
cmp
jbe
dec
xchg
and
mov
or
cmp
les
dec
sub
xchg
pop
adc
pop
cmp
add
xor
hlt
pop
fdivs
iret
jne
out
jl
ret
mov
or
sbb
enter
mov
fs
ret
push
pop
adcl
sbb
inc
or
nop
xor
inc
cwtl
inc
jns
pop
jnp
out
mov
lea
mov
add
push
push
mov
pop
push
sub
push
addr16
loopne
mov
sbb
xchg
cltd
je
fdivs
in
data16
and
rol
pop
add
test
out
les
adc
dec
cmp
repz
pop
dec
push
and
out
adc
test
xor
xor
adc
lock
push
adc
push
sub
ja
cmp
dec
ret
xor
aaa
test
mov
jae
or
dec
fdivl
sub
xchg
ret
pop
pop
pop
pop
xchg
pop
fisttps
test
jne
inc
mov
data16
int
add
in
addb
je
test
mov
or
push
subb
jbe
mov
mov
shr
cmp
mov
cmp
cmovnp
cmp
mov
std
rclb
push
pop
nop
xor
or
dec
neg
inc
jecxz
sbb
add
xor
cwtl
push
movsl
jns
or
inc
cmp
jb
cmp
mov
ja
push
push
or
nop
cmp
cmp
and
testb
push
mov
mov
into
xchg
pop
aas
cmp
cld
sbb
mov
xor
and
loopne
or
int
jb
push
inc
and
mov
push
xchg
inc
pop
adc
aam
mov
test
pop
nop
xchg
jecxz
enter
sbb
push
or
inc
test
int
push
sub
push
and
and
je
adc
inc
sub
push
shlb
add
mov
and
sub
jb
xchg
enter
fdivrp
jae
aam
outsl
imul
add
push
outsb
xchg
and
cmp
cli
inc
aam
nop
or
iret
popa
lock
sbb
shl
ss
push
jae
lea
inc
and
bound
xor
repnz
fadds
xchg
rorb
arpl
dec
cmp
mov
add
popa
push
test
push
pop
and
cli
mov
or
push
push
add
add
cmpb
add
in
sbb
add
loope
fwait
loopne
pop
mov
lcall
popa
sub
rclb
mov
lods
movb
add
inc
ror
push
mov
add
sub
test
insb
leave
mov
sbb
mov
dec
push
fs
mov
sbbb
or
nop
imul
cmpsb
fcoms
mov
push
sub
mov
bound
inc
imul
fidivrs
cmpb
leave
cmc
and
adc
adc
cmp
jb
or
inc
or
int3
ret
dec
cli
pop
aaa
or
dec
xor
push
popf
and
das
dec
lahf
push
je
push
adc
lea
pop
enter
pop
mov
dec
and
leave
mov
adc
xchg
mov
adc
ss
xchg
sbb
sbb
push
icebp
xor
data16
mov
xor
add
add
ret
mov
pop
test
out
in
cmp
lds
add
add
sbbl
jg
jno
xchg
push
int
in
and
or
sub
nop
sbb
mov
inc
lods
push
icebp
int
dec
sbb
int3
jl
add
cmp
xor
adc
or
mov
lea
lods
xor
adc
notb
fsubrs
mov
add
add
pop
and
andb
cld
rolb
mov
les
and
push
push
cld
xor
inc
sub
lea
xchg
out
sar
rolb
daa
mov
adc
mov
cmp
lahf
movsb
push
dec
push
adc
sub
out
fwait
or
gs
inc
aaa
mov
aam
xor
popf
push
sbb
xchg
xor
pusha
outsl
jbe
cmp
jg
sub
movsl
sbb
adc
push
lods
mov
cmp
sub
xchg
add
ret
sub
nop
adc
jno
xchg
movsl
xchg
in
out
lock
in
cmp
xchg
and
in
jo
or
or
mov
add
hlt
je
and
dec
insb
scas
mov
cmc
mov
enter
sbb
inc
loopne
das
lret
jb
loop
out
inc
call
arpl
inc
inc
mov
dec
into
sub
cmp
mov
add
shl
cs
fdivrp
les
jle
sar
repnz
test
sbb
inc
in
fmul
lock
pop
jb
push
inc
lock
jmp
mov
add
sub
div
push
repz
mov
and
jb
mov
daa
clc
dec
push
mov
int
and
enter
test
inc
inc
or
hlt
enter
and
add
scas
jmp
les
push
mov
push
js
shrb
mov
push
fninit
not
sub
div
das
xor
div
pop
mov
adc
hlt
mov
or
or
movb
shrb
add
jl
dec
sub
comiss
mov
mov
jno
and
ret
push
sbb
sar
mov
jno
xor
add
fidivs
cmp
movsl
pop
or
mov
adc
cli
lock
pop
ja
jb
push
jae
push
lcall
ja
push
inc
inc
cmp
xor
es
movsb
jns
sbb
sbb
push
pushl
pop
sub
sbb
add
adc
cmp
push
into
pop
insb
call
popl
mov
xor
mov
add
popf
in
jb
outsl
jne
and
and
jno
ficomps
lods
out
sbbb
mov
mov
and
push
pop
jne
in
sahf
pop
in
inc
mov
jne
push
call
ja
and
pop
add
insb
clc
and
clc
fdivl
cmp
adc
or
mov
test
rcll
aam
rcrl
mov
cltd
inc
test
adc
enter
sbb
sbb
xchg
mov
call
fwait
enter
in
pop
inc
sub
xor
sub
pop
sub
shl
sbb
lcall
sub
dec
in
pop
pushf
and
cwtl
fs
aaa
xchg
movsb
leave
enter
mov
push
repnz
xor
sbb
dec
push
test
mull
push
les
xchg
jbe
adc
cwtl
stc
shlb
push
cmc
or
and
jns
std
rep
mov
or
inc
decl
cmp
leave
mov
scas
clc
cli
xor
pop
cwtl
aam
push
xchg
fdivs
lock
int3
ret
lea
test
clc
push
xchg
sub
in
push
jo
xor
jns
in
orb
cmp
les
pop
xchg
jne
daa
aaa
out
dec
sbb
dec
cmp
sahf
mov
sub
jl
test
imulb
in
mov
xor
fildl
sub
in
ss
fstpt
or
mov
sub
inc
sub
sbb
test
popa
jae
sub
dec
aaa
in
std
sbb
push
mov
mov
jo
jge
cmp
les
push
xchg
je
nop
in
data16
lret
jecxz
sar
aad
ljmp
add
sar
sbb
enter
rol
and
jo
nop
push
int3
pop
jne
and
ss
sub
xor
imul
mov
sbb
push
movsb
adc
mov
lock
mov
pop
pop
shrb
push
or
inc
cld
test
fimuls
xchg
test
testl
push
push
mov
int
inc
adc
fstp
je
and
lock
adc
add
loopne
jmp
mov
out
subb
iret
cmp
in
or
inc
fs
xor
test
push
and
int3
ret
adc
in
xchg
inc
frstor
add
cmp
adcl
or
pop
aas
cmpl
mov
jmp
rol
push
or
lock
push
out
sub
pushf
mov
mov
and
insb
cli
push
pop
mov
mov
dec
movsl
push
cmpsb
lea
movsl
mov
movsb
fiadds
inc
aam
dec
mov
adc
jns
sub
adc
and
push
das
jne
dec
mov
std
les
js
add
dec
xlat
imul
inc
sbb
test
js
sbb
dec
addb
test
and
cmpsl
dec
mov
mov
movsw
pop
mov
mov
pushf
jne
jl
jnp
mov
xchg
mov
mov
xor
outsb
lds
clc
test
or
cmp
jns
cmp
pushf
test
xchg
mov
nop
inc
add
out
mov
repz
xlat
mov
sbb
fdivs
bound
jno
xlat
push
decl
in
test
add
insb
and
dec
ffreep
test
leave
xor
ret
adc
dec
jecxz
pusha
jl
loop
jl
pop
mov
insb
lods
orb
test
int3
xor
lea
ljmp
sub
lea
sahf
push
loopne
xchg
add
cmpsb
and
mov
mov
cli
roll
push
jmp
mov
scas
aam
loopne
and
mov
jo
iret
es
cld
add
sub
pop
add
jae
jb
lcall
rorb
mov
sbb
jnp
in
sub
daa
repnz
jns
das
test
mov
bound
fsubrp
inc
xchg
rolb
outsl
jne
sub
cli
xchg
xor
mov
mov
adc
and
addb
pop
out
pushf
test
push
or
rclb
lret
les
pop
and
adc
sti
sbb
mov
or
mov
inc
test
icebp
int3
xor
and
mov
pop
pop
sbb
loope
mov
adc
shlb
lahf
jnp
popf
jmp
inc
pop
add
lea
mov
add
xchg
push
movsl
push
outsl
movb
pop
or
xor
pop
inc
add
lds
adc
xchg
in
sub
pushf
aad
push
inc
or
adc
imul
lret
or
jmp
jne
cmp
pop
pop
adc
fimull
adc
inc
mov
rorb
pop
cli
mov
orb
outsb
inc
cmp
sbb
out
jmp
push
mov
stc
lcall
xchg
pop
xor
push
cmpsb
and
mov
adc
lock
hlt
andb
push
and
or
sub
les
dec
sub
scas
in
sbb
cmp
mov
adc
cmpl
pop
inc
fimuls
vprotq
inc
sub
xor
cmp
aaa
mov
rcll
mov
loop
pop
in
cmpl
fs
gs
push
daa
shll
std
movsl
cmpsl
sarl
pop
je
pop
mov
sub
data16
sarb
inc
hlt
mov
or
outsb
or
inc
sbb
push
pop
mov
addr16
sub
lret
jp
push
lcall
adc
jae
sbb
mov
cmovbe
lret
stos
or
je,pt
adcb
and
xchg
inc
cld
xchg
inc
pop
sub
fadds
mov
jge
adc
push
jne
inc
add
iret
fdivrp
aam
jmp
xor
fmull
adc
inc
pop
ret
mov
pop
inc
orl
add
dec
pop
and
ljmp
push
rclb
aaa
sbb
mov
xchg
sub
mov
lods
stos
push
xor
push
pop
add
or
in
lock
dec
pushf
xchg
mov
pop
mov
repz
inc
pop
mov
aas
xchg
jmp
orb
mov
dec
inc
add
ja
fcoml
xchg
loope
loop
pop
cs
jecxz
ja
nop
in
sbbb
out
arpl
fs
mov
adc
lods
jl
push
and
push
mov
pop
sbb
mov
je
mov
in
popf
popf
addb
pop
or
xor
loopne
std
sbb
mov
dec
push
leave
sbb
repnz
jmp
arpl
inc
mov
mov
orl
jmp
or
test
out
xchg
fcoms
daa
adc
and
cld
aam
pushf
inc
pop
and
cld
aam
nop
push
or
mov
out
movsb
cld
mov
cmp
push
rol
fs
cltd
inc
inc
pop
xchg
test
xchg
scas
xor
adc
sbb
cmp
stc
push
mov
pop
lcall
jge
adc
mov
icebp
imul
das
or
adc
inc
das
mov
mov
jbe
int3
mov
adc
das
adc
in
fimuls
movzwl
cmp
xor
aam
dec
repz
loopne
loopne
fcoml
call
fucomi
push
pop
fdivr
mov
outsb
push
mov
jno
iret
pop
enter
dec
jge
sti
xor
mov
hlt
cmpsb
sbb
sbb
insb
cmp
add
mov
push
cli
jl
xlat
hlt
pop
pop
sbb
les
movsb
cli
popf
sub
bnd
das
jmp
cli
xor
test
movsb
and
cli
push
insb
mov
ret
in
cld
adc
sub
xor
cmp
adc
std
clc
add
fcomp
inc
pushf
dec
sub
fs
push
mov
lret
sub
cld
pop
je
sub
adcb
scas
xchg
push
inc
bswap
push
sbb
leave
mov
cld
lock
xchg
shrb
fs
shlb
nop
dec
sub
mov
outsb
add
push
mov
mov
sub
movb
mov
add
aas
sbb
clc
jae
sub
lea
inc
mov
rcl
adc
test
sub
push
jo
or
add
dec
mov
stos
push
push
stc
in
sub
add
push
cmp
jae
stos
aaa
nop
inc
jmp
cmp
mov
loopne
push
push
ja
jl
insb
mov
mov
test
inc
movsb
add
cmp
inc
lds
sub
xor
scas
cmp
aad
test
call
xchg
fdivl
dec
pop
bound
or
inc
mov
fistl
adc
lock
and
test
inc
push
dec
cmpsb
test
int
in
inc
sbb
jecxz
sub
pop
inc
push
decb
pop
aam
mov
or
adc
sub
aas
je
pop
adcl
lret
sub
aaa
sub
sbb
mov
xchg
cltd
or
cs
sti
fisttpl
inc
jmp
cmpb
jne
mov
adc
push
jecxz
rcr
jne
cmp
adc
sbb
xor
lods
xchg
xchg
divl
jge
mov
clc
clc
pop
cmpb
cld
push
inc
pushl
aam
loope
mov
cmp
jne
cmp
pop
decl
stc
cmp
mov
jno
mov
cmp
jge
movl
sbb
push
pop
mov
sbb
fnstcw
fdivrs
xchg
xor
or
cmp
sbb
pop
incl
fsub
sbb
mov
inc
sbb
mov
mov
outsb
sbb
leave
inc
sub
pop
push
stos
push
and
mov
push
mov
sub
push
sbb
or
insb
jne
sbb
divb
pop
aas
jmp
mov
shrl
add
jmp
mov
cmp
inc
add
mov
cmp
je
sbb
dec
xchg
dec
mov
pusha
scas
sti
out
bound
xchg
popa
cmp
lds
adc
je
mov
call
xor
adc
testl
les
test
fnsave
testl
dec
push
int3
add
rol
test
and
jl
das
rclb
sub
movl
pop
inc
ficomps
icebp
mov
add
xor
xor
in
sti
and
xorl
cmp
das
dec
stc
or
out
mov
jmp
sub
jmp
or
jmp
add
aas
sti
sbb
test
shr
jne
jmp
in
out
clc
pop
push
inc
int3
xor
and
jmp
int
jg
mov
and
je
inc
cmp
add
cvtdq2ps
mov
ret
daa
push
adc
addl
adc
aas
roll
and
mov
movb
fwait
loopne
js
test
je
test
insl
mov
xchg
xor
sbb
or
movsl
xor
adcb
add
add
inc
jmp
sbb
jb
aaa
mov
jl
lret
lock
loope
push
rorb
or
dec
jnp
sub
shlb
pop
out
add
data16
neg
dec
mov
std
push
lret
adc
pop
cs
xor
mov
push
arpl
sbb
push
fwait
push
dec
mov
sub
push
jmp
mov
popa
pop
inc
inc
ret
pop
sahf
and
jo
mov
and
inc
cmp
dec
mov
int
aaa
je
xchg
jbe
sbb
insb
xor
cmpsb
popa
ret
cli
std
jmp
cltd
sub
or
sbb
rolb
sarl
cmpsb
call
popa
add
mov
jne
inc
xchg
and
mov
insb
mov
mov
add
cmp
jbe
dec
jb
xor
loop
stc
or
loop
decb
and
push
cmp
cli
dec
mov
enter
cld
das
test
nop
push
cld
jno
mov
lods
nop
or
lret
cmp
icebp
mov
mov
or
lods
adc
dec
mov
dec
push
dec
fwait
in
xchg
add
add
mov
jle
pop
or
cmpsb
imul
dec
sar
fwait
sbb
inc
mov
mov
call
shll
lock
hlt
dec
sar
clc
cld
cld
lea
cmpsb
sbb
adc
loopne
push
mov
js
mov
nop
ret
cmp
repz
sbb
and
je
iret
jl
cld
jmp
popf
in
loopne
std
cld
out
add
push
jno
fisttps
sub
pop
nop
sbb
cmp
pusha
pop
sti
push
iret
fildl
jne
add
dec
lods
mov
xor
xchg
aas
inc
out
mov
jns
add
push
mov
mov
add
lds
pop
xchg
mov
mov
push
int3
aam
in
cmpsb
cltd
divl
sbb
sbb
imul
imul
aaa
sub
adc
sbb
sub
jb
mov
add
subl
mov
adc
js
mov
dec
ret
mov
inc
icebp
add
sub
or
sbb
clc
adc
shrb
mov
loopne
icebp
in
jecxz
and
and
test
pop
pop
pop
add
aas
add
rcll
mov
inc
addl
loopne
add
sbb
xor
je
leave
sti
std
add
int
inc
ljmp
std
rcr
orb
xlat
pop
scas
push
test
inc
and
roll
push
out
shl
inc
ret
sub
shr
lods
dec
add
or
imul
xor
push
rep
je
inc
shll
dec
dec
sarl
jecxz
es
push
cmp
das
icebp
scas
adc
mov
test
das
jae
mov
arpl
loope
lret
inc
add
ret
lahf
popa
add
add
pop
stc
or
add
sbb
pop
jl
cs
cmp
and
in
mov
add
sub
mov
sub
xor
nop
sbb
shl
inc
ret
xchg
ret
add
jmp
out
out
repz
add
ror
and
repz
rcll
xchg
xchg
lods
movsl
and
adc
int
in
push
loopne
mov
test
aas
or
cmpl
movzbl
push
out
mov
sbb
or
hlt
jne
add
push
or
inc
jmp
sub
popf
xchg
aaa
inc
cmp
mov
mov
xor
mov
test
or
orl
mov
fprem
incb
lea
pusha
jmp
cmp
ret
jne
aam
cmp
fmull
or
shl
lcall
xor
mov
and
sbb
nop
xor
pop
adc
rclb
cmp
shl
inc
jmp
sbb
orl
ret
mov
mov
icebp
shl
addb
sti
mov
sbb
or
jne
pop
xchg
push
mov
sarb
iret
es
dec
jmp
je
sub
cmp
jb
xor
jmp
daa
in
xor
and
loope
dec
int
add
test
and
mov
jb
jge
adc
outsl
leave
adc
sbb
push
jmp
jae
lock
cmpsl
shll
inc
adc
mov
inc
push
aas
stc
sbb
push
add
xor
and
xchg
dec
mov
adc
jae
testl
pop
popf
xchg
sbb
pop
addr16
aas
cs
inc
imul
loopne
and
push
stos
int
cmp
push
cmp
lahf
cltd
sahf
ret
daa
lahf
dec
ficoms
cmp
idivl
ja
loopne
sahf
xor
inc
pop
fstpt
jae
imul
adcb
inc
or
inc
pushf
cmpb
je
andb
test
fs
outsl
jns
inc
jge
iret
adc
rorb
mov
data16
add
leave
mov
dec
xchg
sbb
inc
pop
or
fwait
clc
mov
mov
push
mov
add
addr16
stos
iret
testl
add
jecxz
shlb
jecxz
repz
sbb
iret
push
lock
pop
push
shl
shr
sti
inc
ret
jmp
xor
pop
test
jle
mov
push
inc
push
dec
pop
shl
dec
roll
andb
inc
adc
ret
loopne
subl
imul
jl
lea
jmp
lea
rclb
in
cmp
outsl
sbb
add
jp
roll
xchg
in
or
mov
push
mov
jecxz
push
adc
mov
xor
loopne
cld
or
ror
mov
and
je
pusha
pop
sbb
shl
lds
pop
into
jne
dec
jo
inc
cld
cmp
je
add
lock
je
movntq
fmull
mov
adc
xchg
pop
into
dec
mov
arpl
outsb
or
cld
jecxz
bound
call
jecxz
xor
add
jno
or
int3
jle
xor
adc
pop
inc
cmp
movsl
or
loopne
add
or
xlat
lahf
add
lock
lea
mov
fsubrs
and
cmp
inc
mov
bound
mov
mov
jnp
and
mov
push
insb
push
sbb
loop
call
lods
push
jecxz
jg
call
jp,pt
pop
dec
add
jnp
loope
jg
add
push
jmp
mov
mov
call
add
jg
inc
scas
daa
pop
js
jge
jne
add
repz
jmp
mov
push
xchg
push
sbb
pop
or
scas
cmp
push
inc
insb
adc
pop
movsb
inc
push
dec
imul
xchg
mov
push
mov
imul
dec
and
daa
adc
mul
pop
pop
inc
out
or
je
inc
inc
adc
xor
xchg
test
or
cmp
mov
jo
mov
or
mov
mov
shrl
sub
add
faddl
jmp
cmp
mov
xlat
jb
int3
adc
dec
xor
mov
lods
addl
adc
in
popa
insb
clc
and
sbb
sahf
loopne
cld
add
mov
or
push
adc
or
xchg
cmp
nop
ficoms
xchg
lcall
adc
xlat
push
xchg
pop
shl
jne
aad
in
push
fs
xchg
clc
test
push
jne
push
inc
inc
gs
mov
repnz
and
dec
xchg
dec
add
xchg
lret
call
sub
lods
and
shlb
movsl
push
pop
pushf
push
add
jmp
fwait
sbb
outsl
add
mov
dec
stc
jb
mov
push
pusha
movsb
call
decl
test
aaa
lea
clc
and
cs
andl
popa
rclb
pop
and
xor
arpl
and
mov
xchg
or
push
mov
scas
popa
xchg
xchg
mov
inc
jns
jge
jmp
or
jmp
std
jmp
push
pop
or
sbb
inc
and
push
cmp
push
push
out
add
add
enter
xor
aam
insl
dec
pop
jno
adc
notl
sbbl
fcomps
dec
or
jb
mov
int
or
add
push
pop
mov
outsl
pop
and
jns
je
pop
and
dec
pop
ret
mov
shll
or
push
cmpsb
add
jmp
jle
test
inc
idiv
mov
push
and
ret
sti
sub
jmp
sti
jl
outsl
cmp
cmpsb
push
es
add
mov
jb
lcall
and
incl
mov
dec
cmc
dec
nop
cmpsl
xchg
adc
stc
push
push
pop
xchg
cs
cld
jp
call
dec
out
mov
cmpw
inc
inc
std
clc
ret
mov
cmp
push
insl
xor
icebp
pop
arpl
test
or
nop
cmp
mul
mov
xchg
imul
mov
cmp
fs
add
loope
rcrl
inc
scas
xor
test
mov
cli
fists
cmpsl
mov
loop
ret
mov
imul
sbb
imul
xor
ret
aas
sub
pop
bound
add
mov
adc
insb
xchg
sbb
push
ss
orl
icebp
xchg
or
scas
mov
aad
jmp
rcrl
es
or
jmp
rcr
or
jne
div
mov
ficompl
inc
inc
jno
negb
icebp
out
shll
cmp
or
cmp
add
mov
xchg
pop
push
fists
push
mov
mov
push
fisubrl
xor
lcall
or
xlat
or
fisubrl
js
or
jbe
and
or
jg
jnp
neg
sbb
stc
mov
adc
jno
pop
sar
outsb
jo
inc
stos
dec
push
sbb
mov
mov
sbb
sbb
xor
xor
jle
adc
jle
mov
xor
jmp
inc
inc
lcall
fs
adc
dec
jmp
pop
pop
imul
outsb
insb
repnz
push
sbb
xlat
cmp
shlb
std
ljmp
push
inc
inc
dec
jmp
shll
mov
mov
loop
xor
call
jge
pop
add
loopne
jnp
aad
sub
cmpsl
test
sub
out
je
cmp
and
sbb
mov
push
sbb
pop
cmc
ljmp
les
xlat
sti
idivl
lret
sbb
out
jne
or
xchg
clc
fiadds
int
rcll
mov
inc
sub
xchg
shr
xor
add
add
xchg
data16
sbb
jne
dec
inc
jl
popa
loope
pop
jg
mov
gs
push
cmp
pop
jge
cmp
mov
lods
push
lods
in
hlt
leave
or
js
pop
loop
mov
and
clc
leave
sti
jle
cmpsl
enter
xorb
xlat
xor
or
or
fmuls
test
push
add
or
or
popa
in
adcb
cwtl
scas
imul
movl
std
pop
and
shrl
push
arpl
mov
cld
movsb
lea
or
rcrb
cmpl
sub
sar
dec
ljmp
and
push
push
adc
and
icebp
jne
add
mov
push
xchg
xor
or
push
fnsave
add
mov
cmpsl
dec
mov
inc
dec
jp
cmp
sub
push
cmp
sbb
adc
mov
les
mov
mull
sub
hlt
je
test
lea
ret
mov
or
mov
sbb
jg
inc
jnp
inc
repnz
add
sub
jle
adc
loopne
add
jmp
inc
and
pop
or
fadds
xor
sbb
mov
dec
or
je
mov
aaa
jae
clc
call
push
jbe
mov
test
xchg
imul
or
mov
nop
add
cmp
push
or
add
mov
clc
ja
aad
pop
mov
push
inc
mov
cwtl
lahf
dec
pushl
add
or
jno
cmp
jb
cmpl
mov
das
sub
cmp
push
rclb
repz
hlt
and
hlt
push
ss
mov
imul
movb
mov
push
movb
std
testb
jmp
push
mov
fldcw
filds
xchg
sub
daa
orl
jmp
lds
negw
sub
inc
dec
imul
jo
sahf
lahf
jp
push
and
lock
pop
xor
or
mov
icebp
int3
incb
cmp
je
cmp
and
cmp
jne
push
jne
aas
add
mov
inc
popa
aaa
shll
xchg
adc
add
call
lret
sub
sub
push
push
cli
popa
imul
push
dec
ret
push
scas
out
pop
movhps
aaa
cmp
jae
cmp
and
fisubrl
lock
cmp
jbe
mov
jge
add
add
mov
add
jns
out
cmpsb
cld
adc
xlat
mov
rorl
mov
repnz
add
sub
dec
mov
jne
adc
add
aam
clc
sbb
or
sub
rorl
pop
pushl
divb
loope
roll
insl
and
neg
dec
jecxz
add
testb
push
add
mov
or
addr16
mov
nop
std
or
push
loope
mov
and
mov
mov
jmp
imull
mov
pminsw
mov
leave
cmp
mov
dec
dec
not
mov
mov
je
mov
sub
cltd
fnstenv
gs
mov
filds
inc
clc
loop
or
jecxz
sub
push
test
incb
and
adc
adc
add
mov
add
inc
sbb
and
aaa
pop
mov
mov
jmp
std
push
dec
cs
pop
push
outsl
add
addl
lret
inc
add
imul
mov
andb
rorb
jle
mov
cli
sti
loope
or
or
lret
ret
arpl
call
xor
push
into
pop
mov
xchg
aam
push
push
jp
pop
sub
cmp
inc
ret
mov
loopne
mov
or
repz
push
rorb
and
sub
loopne
sbb
pushf
jecxz
shrl
mov
scas
push
sub
pop
cmp
or
cwtl
push
push
das
mov
mov
mov
or
icebp
push
mov
adc
push
mov
fcomps
mov
mov
adc
pop
lods
cmp
jl
sub
pop
adc
pop
cmp
and
cmp
andl
adc
fcmovnbe
cltd
loop
cwtl
dec
or
mov
jb
xor
adc
mov
test
and
outsl
je
jge
lods
jne
clc
jne
mov
mov
adc
fisttps
je
test
ds
cli
aaa
mov
sbb
dec
add
adc
mov
push
fdivl
push
push
mov
out
psubw
sar
loope
mov
inc
inc
push
mov
pop
adc
testb
daa
mov
icebp
insl
xor
mov
dec
or
add
dec
cmp
cmp
pop
out
xorb
and
sbb
or
jle
ret
xor
and
dec
xor
mov
inc
jmp
add
push
cmpl
mov
in
or
add
lea
push
in
jl
lock
jecxz
jl
or
push
add
addb
pop
test
movsb
sbb
dec
cmp
pop
mov
lcall
pop
xchg
inc
pop
xchg
in
fimuls
loopne
cld
cmp
push
pusha
faddl
cmpl
call
mov
sub
mov
ficoml
sbb
jae
add
or
add
sub
inc
add
addb
sti
sub
mov
ljmp
cmp
in
jmp
fsub
dec
shrl
pop
fcmovne
orb
sub
xor
mov
push
lock
iret
push
outsl
xor
mov
rdpmc
imul
and
pop
jno,pt
sti
ja
add
sti
dec
and
aas
ss
cmpb
jne
inc
inc
dec
adc
xor
out
xor
shlb
cmp
adc
fstps
movsl
jmp
xorl
inc
xor
clc
imul
dec
sbb
xchg
test
testl
nop
mov
fidivl
insb
and
add
bound
xor
roll
mov
movsl
xor
or
stos
sbb
mov
pop
or
xor
pop
add
repz
dec
test
inc
aam
mov
lret
jmp
inc
int3
add
rolb
aaa
es
lea
xchg
mov
add
iret
add
push
mov
jo
dec
jg
sbb
cwtl
cmp
or
adc
and
cmpsb
jo
add
sub
sub
pop
je
or
je
dec
stc
call
popa
cmpb
adc
inc
ss
sbb
add
mov
dec
sub
orl
pop
movswl
shr
ror
subl
fdiv
cmp
push
shl
cmp
addb
jno
or
movsb
lock
mov
mov
jmp
mov
lock
inc
and
and
mov
add
lods
mov
adc
adc
out
mov
bound
inc
adc
es
imul
jp
or
or
jne
je
mov
ret
dec
pop
sahf
pop
dec
in
sbb
add
fimuls
std
data16
dec
popa
cmp
aam
or
push
dec
scas
enter
in
dec
add
mov
or
push
mov
dec
cld
popa
jne
int
jp
fwait
ja
adc
mov
mov
inc
xor
xchg
sbb
add
inc
or
js,pn
test
jmp
das
ss
cmp
jge
xor
or
add
push
or
fsubs
mov
jmp
mov
scas
jge
je
or
aaa
pop
xor
ret
jle
rcrb
jmp
inc
or
loopne
jnp
loopne
xor
xor
jg
jl
jp
pop
sti
jae
aaa
rolb
xchg
out
out
psrld
or
jne
and
push
mov
sti
add
add
mov
or
jne
in
mov
aam
jne
mov
ds
push
push
jmp
push
les
outsb
sub
xchg
ret
xor
nop
mov
add
pop
aam
clc
inc
jbe
jle
mov
jmp
mov
negl
leave
adc
xor
jnp
or
push
movb
pop
cmp
fsubrs
es
cld
imulb
movsl
es
adc
jmp
push
repz
pop
adc
je
and
in
loopne
jne
add
repnz
add
push
push
dec
subl
ljmp
sub
pop
jl
add
andl
xor
faddl
or
jle
sbb
clc
mov
push
rcrb
stos
inc
mov
andb
mov
dec
mov
popa
inc
push
mov
mov
pop
leave
je
mull
test
repnz
adc
and
fwait
negl
add
lea
xchg
dec
rcll
sbb
decl
decl
js
mov
mov
pushl
popa
or
add
ldmxcsr
into
jne
sbbl
ret
incl
pop
add
and
and
ficompl
push
jae
sbb
inc
jg
testl
insl
repz
imul
sbb
adc
mov
push
insl
or
dec
loop
xchg
add
add
and
inc
push
cld
cmp
aad
add
and
xchg
jno
jmp
push
lods
mov
push
rcrb
dec
jp
ja
cli
mov
out
fildl
rcrb
add
jmp
outsl
movsl
roll
dec
lret
sub
sub
mov
inc
add
rclb
das
mov
pop
push
and
lcall
lret
push
call
imul
dec
insl
mov
loopne
repnz
repz
inc
enter
add
cmpsb
push
js
sarb
repnz
std
shr
gs
dec
jg
je
or
inc
je
mov
je
dec
jne
inc
jmp
cmpb
jne
or
xor
shrl
shlb
out
testl
inc
bnd
insl
push
je
insb
ja
or
jmp
jbe
fstps
jl
sti
jmp
decb
sti
cmpb
hlt
loopne
sub
movsl
mov
mov
jmp
adc
loop
pop
add
sarl
sub
lods
push
cltd
cmp
int
mov
jmp
ljmp
mov
xchg
xor
outsb
add
add
sbb
jnp
push
sbb
lret
jecxz
scas
mov
lcall
lcall
xor
je
cmp
adc
outsl
jg
jl
mov
fs
ret
iret
sbb
imul
in
xor
dec
add
dec
incl
push
pop
xchg
loop
jp
jmp
inc
jle
jmp
cmp
cmp
xor
jne
repz
push
mov
and
jnp
test
adc
loopne
test
gs
jmp
mov
loopne
dec
sub
jno
scas
dec
enter
scas
fnstsw
cmpsl
adc
scas
in
mov
in
mov
inc
mov
mov
push
pop
cmpb
mov
push
inc
fldt
and
in
mov
sti
gs
rcrb
or
jno
sbb
sti
jbe
push
gs
pop
jb
in
xchg
xorl
inc
outsl
daa
and
dec
cwtl
dec
xor
adc
mov
ds
mov
gs
push
push
cmp
testb
int3
call
sub
out
or
popl
sbb
push
je
mov
jns
loopne
dec
pop
mulb
mov
movsb
add
and
mov
pushf
call
or
and
ja
je
add
stc
aas
cmp
jmp
ret
ss
cmp
ret
inc
ret
js
ds
cmpb
popf
cmpsl
pushf
add
fxch
jecxz
and
mov
xchg
sbb
push
mov
push
xor
xor
pop
popa
adc
or
sbb
sti
outsl
push
pop
mov
jae
mov
pop
sub
outsb
mov
pop
loopne
xchg
faddl
jmp
les
mov
cmp
pop
jne
mov
inc
push
cmpsl
and
mov
jge
lods
jae
pop
inc
cmp
mov
cmp
inc
cmp
xchg
std
shll
mov
jmp
ret
cmp
ja
gs
ret
scas
lock
inc
mov
mov
and
mov
inc
testb
aas
pushf
or
inc
dec
jne
xor
jmp
enter
sarl
fwait
jmp
test
sub
add
add
lret
xor
jecxz
and
push
test
cs
jge
in
pop
adc
shll
enter
pop
filds
loop
push
pop
call
add
das
pushf
xor
test
je
pushf
jne
or
leave
mov
aas
cmpl
push
sbb
fistps
leave
js
lods
stos
int
dec
pop
ret
cmp
xor
lock
jo
push
pop
and
jns
leave
fwait
sub
jg
sbb
jb
xor
les
scas
setl
shlb
xchg
jne
jmp
mov
rolb
out
add
push
repz
jecxz
jnp
dec
test
sarb
mov
and
mov
mov
lea
cmp
mov
stos
lcall
push
pop
mov
adc
lahf
mov
lcall
es
fsubrl
mov
and
sbb
push
or
leave
add
pop
enter
fldl2t
add
mov
fmull
roll
lods
leave
or
mov
mov
add
out
je
or
cmp
iret
or
add
aas
lea
shl
jmp
fwait
inc
pusha
js
je
push
imul
cmp
add
mov
lock
fists
inc
push
xor
add
in
int
rolb
sti
aam
or
mov
jmp
ret
repz
cmp
sar
sbb
inc
jmp
sbb
inc
jns
test
cmpb
push
dec
movsl
and
dec
push
xchg
movsb
adc
movsb
adc
or
dec
push
loope
lock
in
outsb
jne
mov
mov
test
push
cmp
xor
sub
lods
lods
dec
das
mulb
call
push
xchg
insb
lock
sbb
adc
push
push
jle
jge,pn
inc
rcrb
test
out
out
pop
mov
cld
aad
ret
sub
dec
add
or
jl
or
push
xchg
rclb
jo
jecxz
pop
popf
in
xor
xchg
loop
inc
push
subl
lock
arpl
stc
jmp
popa
xor
ja
insl
mov
inc
jmp
dec
jmp
jmp
xor
rcrl
xchg
push
pop
pop
gs
xor
xlat
loopne
loope
std
push
movsb
rorb
jae
dec
or
or
pop
dec
call
mov
sbb
test
test
aas
nop
cmp
scas
add
xor
sbb
outsl
push
cmp
decl
sarb
je
add
or
add
icebp
repz
add
loopne
pop
add
and
iret
test
out
clc
mov
call
stos
stos
mov
mov
dec
iret
xchg
out
test
mov
mov
test
jle
inc
stc
cmp
ja
pop
ds
jmp
movsl
xchg
lea
mov
shl
stos
lea
je
sub
lock
push
add
cmp
ja
fstpt
add
cld
mov
mov
lock
jbe
inc
inc
xchg
adc
or
pop
cld
add
shrl
jl
scas
mov
pop
push
xchg
inc
lea
push
movsl
fidivrl
pop
push
pop
jbe
jmp
cmpb
es
mov
add
or
sbb
push
jae
jo
adc
test
pop
stos
add
pop
movl
inc
cmp
push
ret
sbb
stos
sub
lea
cmp
add
mov
pop
xor
inc
xchg
mov
xchg
push
cmp
incb
jo
add
call
jae
cli
add
iret
repz
adc
or
push
fstps
inc
xor
xor
stos
imul
mov
into
mov
out
jge
sbb
loopne
adc
test
test
mov
inc
repnz
loop
test
clc
add
mov
shr
pop
dec
imul
inc
mov
jl
push
rep
rep
inc
inc
mov
test
inc
cli
dec
sbb
push
push
fneni(8087
jmp
test
inc
filds
cmp
or
push
imul
aam
lods
dec
lcall
icebp
in
mov
test
scas
cmp
mov
add
dec
jle
sub
xor
mov
cmp
imul
jecxz
mov
mov
and
jmp
sbb
lea
push
xchg
enter
mov
outsl
pop
xor
adc
push
popf
add
and
loopne
xchg
mov
and
nop
dec
cmpsl
adc
push
fs
sub
cmpb
jp
cs
dec
inc
push
add
push
xchg
dec
adc
cmp
out
mov
dec
in
testb
inc
push
lds
sub
adc
jg
mov
cltd
jne
jmp
andb
jmp
pop
jmp
dec
mov
popa
lea
loop
dec
add
mov
sbb
mov
add
inc
mov
inc
inc
add
ja
or
jno
mov
or
push
orb
bsr
pop
add
ret
inc
jae
pop
out
dec
das
adc
popf
or
jle
mov
or
jnp
in
fbld
mov
jae
pusha
sub
subb
or
cli
add
pop
popf
sbb
fcomps
jmp
das
cmp
adc
pop
test
call
cld
push
shr
mov
mov
imul
cld
addl
sub
or
lahf
test
outsl
inc
jne
sar
push
dec
pop
sarl
loope
decb
add
pop
sti
dec
incl
mov
jae
mov
dec
add
xlat
and
decb
xor
sti
ljmp
loopne
pop
inc
out
imulb
mov
push
jns
mov
mov
dec
insl
adc
add
jns
sti
das
push
jo
sti
sar
dec
cmp
testl
add
test
push
cld
and
fisttps
js
dec
pop
xor
jbe
mov
pop
fnstcw
cmpb
add
push
mov
push
jnp
push
sbb
mov
jl
popa
xchg
adc
loopne
mov
dec
subl
in
jge
pop
add
and
adc
add
mov
stc
push
push
dec
jb
ficomps
pop
sbb
jge
cmp
arpl
pop
add
jno
sysret
lock
inc
inc
push
jae
cmpb
cmp
sarl
in
or
sbb
aas
arpl
sbb
sub
lea
xor
add
add
popa
push
cmp
mov
sbb
push
int
or
std
out
dec
fisttps
inc
shl
add
mov
arpl
fld
nop
insl
aas
cmp
push
or
xor
fmuls
pop
mov
push
decb
adc
icebp
lods
mov
dec
pusha
add
and
in
outsb
and
jo
mov
adc
adc
mov
lods
inc
and
arpl
aas
mov
lea
jmp
ja
arpl
sbb
or
cmpsl
out
leave
dec
clc
pop
or
sarb
pop
or
subl
rclb
cmp
mov
xchg
in
lock
push
clc
insb
pop
shr
jl
or
dec
mov
shr
sub
pop
pusha
sbb
mov
sbb
jae
mov
cmp
push
ds
jg
and
or
pop
ret
adc
jle
push
shll
out
jne
mov
cmp
dec
adc
add
pop
dec
jae
cmpl
pop
adc
or
outsb
jmp
es
jbe
or
add
mov
lcall
inc
rcr
fwait
pop
pop
mov
mov
aaa
adc
push
cmp
inc
lcall
fimull
mov
mov
insb
add
sub
jo
push
mov
call
push
xor
jb
xchg
test
cmp
jmp
adc
mov
and
or
je
push
add
ljmp
mov
mov
in
dec
scas
into
jne
insl
pushl
enter
jl
shl
inc
jmp
mov
stc
ljmp
icebp
test
add
cmp
jle
dec
mov
mov
pusha
fidivl
inc
jge
and
sbb
push
cmp
rorl
pop
mov
xlat
adc
push
decb
jne
xlat
in
and
jmp
adc
sub
push
test
push
nop
or
push
cltd
arpl
inc
adc
jp
shrb
jp
push
in
and
popa
push
jl
push
test
lock
inc
test
pop
push
decb
jge
mov
scas
dec
jne
or
mov
lds
cmp
addl
pop
jmp
push
cmp
test
or
jnp
bound
sub
out
or
aam
jmp
or
jmp
bnd
add
inc
add
cld
fisubl
inc
lea
jne,pt
cmp
cmp
push
test
mov
outsl
lret
lea
adc
pop
pop
jb
jne
mov
mov
adc
pop
push
popa
test
std
ret
cmp
inc
jge
mov
lea
aam
inc
in
sbb
pop
pop
loop
jmp
inc
cmpsb
adc
repnz
jne
xor
jne
les
xchg
cltd
shl
stc
dec
dec
mov
pop
test
add
or
mov
mov
rorb
xchg
inc
stc
mov
mov
ret
outsl
imul
mov
divl
add
ret
xor
dec
cmp
or
loopne
out
jns
pop
adc
xchg
pushf
dec
lea
mov
cli
ja
lea
dec
in
jns
dec
mov
cwtl
lea
cld
lock
cmp
out
fstps
scas
movl
pop
mov
dec
or
out
fstpt
js
pop
dec
mov
dec
or
mov
inc
fs
inc
test
mov
jg
shl
dec
inc
jne
or
mov
cmp
shr
std
push
lret
ret
mov
adc
push
clc
iret
and
jo
sub
xlat
push
lods
xor
add
dec
cld
dec
cmp
sub
mov
sbb
sahf
lea
in
aas
loope
stos
aas
sbb
popf
pop
mov
add
cwtl
cmpsb
es
pop
jbe
cmpsl
clc
fidivrl
in
jl
and
inc
popl
es
pushf
nop
jge
mov
cmpsl
imul
std
adc
into
add
pop
mov
loopne
call
movl
out
cmp
jg
pop
push
lret
or
dec
pop
pop
dec
jle
dec
popf
adc
cmpb
mov
ror
jno
and
and
dec
xchg
test
sarl
adc
adc
lcall
pusha
xorl
mov
sub
lahf
inc
push
test
ficompl
mov
inc
dec
add
push
jge
pop
xor
and
shlb
jbe
imul
cld
ss
bnd
inc
cmc
dec
inc
cmp
pop
out
push
add
je
repz
xchg
jne
and
seta
bnd
cmp
or
out
in
or
fstpt
push
push
push
mov
dec
ret
pop
dec
jns
gs
push
decb
push
or
add
bswap
sub
in
ret
mov
add
out
add
fnsave
xchg
pop
ret
add
pop
pop
pop
mov
in
cmp
test
rolb
out
sbb
mov
lea
out
add
inc
xor
je
sbb
xchg
mov
xlat
push
cmp
fnstenv
add
add
sbb
cmp
push
push
cmpsl
or
dec
ja
fnstenv
mov
andb
cmp
icebp
in
je
push
leave
jmp
jle
cltd
adcl
andl
sub
punpckldq
sbbl
mov
data16
sti
jge
add
add
ret
add
jne
and
mov
or
fisttps
mov
inc
lock
mov
mov
push
outsb
or
sub
loope
mov
or
test
xor
adc
es
push
jne
fdivs
jbe
sar
inc
push
and
pop
push
or
pusha
xorl
and
inc
cli
xchg
lods
testb
into
jle
mov
xor
loop
mov
dec
lahf
cmp
adc
xor
testl
inc
icebp
sbb
std
imul
lods
inc
add
xor
inc
cmp
jl
jno
je
shll
outsl
mov
cwtl
cmp
pop
bound
out
and
mov
sbb
and
jmp
addl
sbb
add
ret
incb
push
sbb
mov
ret
xor
dec
adc
jp
add
ljmp
stc
repz
cmp
cmp
jmp
mov
cld
outsl
pop
and
fwait
pop
push
or
jno
jle
dec
jecxz
je
dec
loopne
cwtl
je
mov
mov
push
dec
into
push
sub
das
mov
adc
cmp
inc
mov
andl
shr
das
and
cmpb
jb
cmp
and
mov
add
add
jmp
rcr
das
sub
add
or
pop
or
or
mov
inc
cmp
sub
mov
cmp
gs
jle
fstpl
pusha
sub
je
or
je
push
or
cltd
lods
lret
fstl
icebp
popf
or
jmp
sti
loopne
cltd
sub
inc
jne
adc
pop
icebp
inc
jmp
pop
jne
das
mov
popf
cli
add
mov
pop
vpmulhrsw
or
je
pop
icebp
push
imul
or
jne
mov
std
jmp
int
cmp
dec
cs
and
or
sub
lret
fdiv
sub
jns
rclb
addl
cltd
lea
rolb
leave
lret
jge
sbb
inc
inc
mov
mov
out
sbb
sbb
or
pop
mov
mov
cli
enter
jle
sbb
jge
decb
cmp
je
testb
inc
jg
lock
cmp
jl
jmp
mov
out
push
sarl
shl
mov
jmp
mov
jecxz
pop
cmp
je
in
cmp
jnp
std
inc
fiadds
add
test
add
push
jmp
pop
or
inc
repz
push
pusha
shl
pop
inc
nop
add
add
mov
adc
rcrl
adc
call
mov
bound
jl
push
adc
mov
or
mov
out
dec
add
add
add
sub
pop
xor
xchg
cmp
add
inc
adc
dec
sub
enter
mov
cmpsb
add
test
cltd
pop
add
pop
loope
push
mov
adc
pop
out
std
incl
or
or
jmp
and
mov
daa
dec
or
sbb
inc
das
add
enter
dec
cmp
pop
mov
or
jecxz
dec
jae
sbb
and
out
arpl
pop
or
insb
mov
jae
push
adc
test
aaa
adc
sub
adc
je
in
pop
xrelease
adc
mov
inc
mov
jmp
mov
jne
cmpb
add
in
call
pop
and
add
jle
jb
inc
or
mov
movsb
pop
mov
push
sub
xor
mov
jo
adc
cmp
add
push
adc
sub
push
mov
jp
sub
cmpsl
scas
test
lds
push
pop
arpl
adc
sarl
fs
jbe
inc
add
sub
sub
mov
clc
pop
and
or
add
or
lea
xchg
mov
jg
jl
hlt
and
sbb
lock
in
out
popa
cld
push
ffreep
jl
leave
inc
outsb
add
pop
es
popa
jo
rorl
std
popa
add
inc
mov
aad
stos
ja
clc
add
hlt
mov
scas
sub
pop
jno
stc
aad
mov
ret
adc
inc
aaa
call
mov
out
scas
sbb
jmp
aas
lock
or
aaa
add
jo
and
lret
shl
lock
add
inc
adc
das
out
sti
ja
fisttpll
dec
add
call
test
loopne
jbe
jge
pusha
dec
jl
dec
and
mov
es
sbb
pop
test
rol
add
jp
lds
push
and
pop
je
insl
imul
xor
push
add
lock
std
subb
mov
or
add
ss
repz
jl
adc
lea
repz
or
sub
or
cld
and
dec
ja
cld
decl
adc
dec
mov
inc
mov
fldl
aad
jb
mov
aam
xchg
add
je
inc
iret
ror
xchg
cmp
xchg
ja
int
cld
and
nop
dec
adc
cmp
add
jo
pop
mov
lock
mov
sete
add
cmp
add
inc
push
in
sbb
sahf
loopne
in
push
imul
pusha
shlb
out
mov
add
add
jo
jbe
lock
sub
adc
cmpsl
mov
add
fsts
cmp
sub
enter
outsb
pop
add
mov
or
dec
jmp
xchg
cmp
pop
add
jns
neg
daa
sub
notl
jg
adc
fs
pop
idiv
jnp
cltd
or
mov
sub
or
dec
repnz
scas
bound
adc
mov
js
iret
mov
test
xorb
int
xorl
int3
jmp
scas
adc
imul
adc
jg,pn
add
jne
movb
lcall
scas
sub
push
jg
push
mov
xchg
add
xor
jmp
add
cmp
cmc
pop
sahf
test
pop
mov
adc
cmc
jge
pop
je
neg
jmp
fidivrs
pop
add
xor
rol
dec
mov
ret
imul
pop
mov
push
mov
rcll
xchg
and
push
aad
icebp
push
arpl
xchg
pop
mov
dec
setl
mov
ss
jge
imul
sbb
pop
lock
stc
and
push
push
stos
into
jp
pop
xchg
cmpsb
adc
cmpsl
popa
addl
add
sbb
lret
push
rclb
inc
ret
cmp
out
mov
mov
or
sub
jne
out
fldln2
sbbb
sub
xor
and
insb
cmp
push
ret
or
dec
sub
mov
notl
sbb
pop
pop
xor
cmc
mov
and
test
add
cmp
stc
adc
or
xchg
callw
sbb
push
mov
and
cmp
lret
bound
or
in
pushfw
cld
jge
je
add
lea
ret
icebp
pop
or
arpl
cmpsl
nop
xor
adc
cmpl
scas
adc
jne
push
sbb
sub
das
loope
adc
jnp
sbb
popa
jmp
mov
mov
jle
push
sbb
add
orl
jl
or
dec
add
cmpl
sub
insb
ffree
aas
andb
andl
es
scas
pop
cld
inc
inc
pop
push
add
aam
pop
outsl
jo
test
inc
in
mov
inc
push
push
push
push
mov
call
push
mov
pop
cmp
push
daa
pop
xchg
aaa
cmp
dec
data16
add
adc
adc
adc
xor
scas
mov
push
mov
sbb
xor
jbe
push
sub
rorl
ret
jns
out
xorb
and
or
test
hlt
and
mul
or
adc
dec
clc
mov
add
daa
add
pushf
sbbl
sbb
adc
adc
int
push
test
jno
fdivl
mov
push
fadd
inc
scas
cmp
scas
call
adc
xor
lock
xor
inc
or
sbb
mov
push
jg
mov
daa
add
gs
add
decl
or
rorl
fmull
push
sub
push
enter
pushf
push
mov
push
pop
push
jo
js
sbb
call
stos
mov
ljmp
jne
daa
decl
mov
dec
add
pop
inc
icebp
dec
sbb
je
pusha
outsl
sbb
add
xchg
aaa
sbb
jecxz
mov
cmp
add
mov
movl
roll
add
inc
out
xchg
imul
mov
mov
push
sbb
mov
mov
xor
cmp
cmp
cmc
std
cs
in
xchg
cmp
psadbw
push
dec
and
inc
fistl
pusha
xor
add
push
or
mov
pop
xchg
and
jle
mov
adcl
fidivs
jns
fisttpl
adc
xorl
rorl
das
sbb
add
add
push
or
ret
add
adc
sub
mov
iret
jb
cli
neg
sub
test
out
push
adc
mov
sar
jecxz
mov
mov
cmp
jae
cmpb
inc
mov
inc
jmp
popa
xorb
subb
push
addb
mov
pop
jecxz
xchg
cmc
push
jmp
push
cwtl
sub
add
dec
mov
and
loopne
cmp
call
arpl
fistps
fstl
and
xor
pop
sbb
pop
cld
arpl
xor
lds
lret
out
inc
sbb
int
cmpb
dec
xchg
pop
sbbl
mov
bound
pop
or
bound
ljmp
shlb
dec
jecxz
or
or
lods
push
jo
adc
dec
mov
test
cmp
fiadds
sti
jg
or
cmp
jge
lea
sub
or
sbb
jne
mov
or
out
icebp
movsl
cmp
adcl
cmp
cmp
lahf
test
xchg
test
cmp
add
out
hlt
in
adc
push
adc
xchg
aaa
rcrl
adc
rorb
push
and
cld
or
js
jge
fld
fildl
push
mov
add
dec
jno
mov
jne
lea
pop
pop
lea
mov
je
arpl
sbb
sub
sub
mov
lds
jne
incl
lock
aam
rcll
ss
sti
rcll
out
sub
inc
out
neg
or
jbe
inc
sbb
ja
imul
mov
int3
cmpsb
inc
mov
mov
pop
lret
cld
mov
je
cmp
je
inc
inc
test
add
jmp
lea
rcrb
adc
or
xor
adc
cmovo
and
cmp
clc
jle
adc
inc
cmpb
and
cmp
das
push
pop
xchg
or
mov
mov
test
std
outsl
jne
pop
decl
push
rcrb
ret
loop
pop
jl
fadds
jnp
mov
xchg
push
daa
add
pop
inc
inc
clc
jg
sbbb
xchg
push
push
cmp
rcr
mov
rcl
or
mov
or
dec
xchg
imul
xor
dec
mov
inc
frstor
jnp
mov
aas
das
lods
push
andl
add
aam
push
mov
mov
imul
inc
cmp
add
cli
ret
lcall
jmp
test
add
push
pop
fsts
aad
into
sbb
and
cmpb
inc
cmp
testl
xorl
lret
cmp
or
adc
jne
dec
popf
lea
pushw
sub
sbbl
or
fimuls
das
enter
pusha
jns
push
adc
outsb
xor
inc
cmp
add
sub
test
adc
cs
inc
loop
or
xchg
jge
ret
cmp
cs
sete
or
jmp
rorl
sbbl
sub
inc
adc
push
pop
inc
arpl
or
and
dec
dec
fwait
adcl
je
push
xorb
sbb
push
add
or
addl
sub
lcall
out
pop
sbb
mov
andl
adc
lgs
mov
cltd
inc
add
and
add
sbb
into
xor
scas
sub
cmp
dec
mov
test
push
sahf
xchg
xor
outsb
xchg
dec
ret
push
out
pop
sbb
arpl
cmc
in
dec
stc
or
sar
mov
inc
add
push
mov
cmp
je
outsb
ljmp
push
sub
pop
test
xor
jne
cmovle
cld
sbb
pop
ret
jmp
insb
cmpsl
push
and
or
cmp
sti
jnp
rorb
or
sub
inc
aad
xlat
pop
aad
popf
pop
imul
or
mov
mov
repz
xlat
add
jo
fiaddl
xchg
sbb
test
incb
lock
and
push
cmp
jae
jo
push
fildl
mov
cmpsb
incl
ret
jecxz
and
jl
test
inc
push
cli
cmp
xor
lea
fcomps
sbbb
lock
mov
movsb
adc
imul
std
shll
pusha
or
lcall
sar
stos
xchg
inc
testb
adc
inc
mov
cld
movsl
movl
inc
xchg
sbb
or
push
xchg
iret
testl
mov
inc
inc
shl
les
jae
mov
jg
fdivr
lea
jne
test
add
xor
negb
ret
dec
cmp
xor
shl
insb
xlat
pop
mov
shlb
mov
push
orb
adc
jmp
int3
dec
lock
or
jl
pushl
push
push
jnp
ss
push
push
ret
loopne
pop
clc
mov
shrl
inc
add
mov
pop
pmaddwd
mov
mov
adc
movsb
ss
push
push
dec
cmc
xor
roll
adc
mov
and
cmp
out
jmp
pusha
je
jbe
or
mov
sbbb
add
fimull
mov
mov
jmp
popl
xchg
cmpb
add
and
je
outsl
imul
mov
add
sbb
sbb
add
add
inc
and
ret
jl
dec
int3
push
inc
xor
pop
inc
xor
sbb
hlt
cld
orb
and
mov
inc
pop
push
or
pop
xchg
jae
or
arpl
je
push
push
lea
push
pop
pop
pop
orb
mov
pop
in
xor
dec
push
xor
mov
mov
sbb
mov
arpl
stos
or
or
mov
ja
pop
aam
mov
jmp
mov
push
jg
sub
sti
cmpsl
sub
mov
push
pop
sbb
rsqrtps
ret
and
pop
jecxz
sub
jne
push
out
sub
fadds
ljmp
pop
movsl
mov
int
push
jnp
sub
daa
outsb
mov
or
mov
jmp
int3
push
out
cmp
fldenv
loopne
and
cmp
lock
push
cli
ljmp
daa
cmp
aad
pusha
adc
inc
and
push
pop
or
loop
ss
xchg
addr16
jbe
xor
mov
sub
push
add
push
test
shrb
jecxz
stos
and
rorl
cmp
sub
sub
and
lea
psubd
rcll
sub
jmp
xor
add
push
mov
add
cmp
xor
nop
ljmp
cwtl
jmp
pop
cmp
ja
popf
lcall
adc
and
insb
je
xor
andl
mov
lahf
jb
push
xchg
pop
mov
adcb
inc
inc
daa
aas
lods
and
adc
pusha
lea
mov
clc
adc
pop
push
mov
pop
mov
fsub
and
and
dec
xor
sbb
mov
orl
inc
pop
cmp
sbb
mov
mov
repnz
lock
andl
cltd
pop
outsl
aam
sub
fs
ret
jl
cmpb
in
add
and
push
mov
and
xadd
lods
pop
xor
mov
push
push
jb
or
adcb
dec
movsl
push
pop
fnstcw
mov
popf
movsl
inc
fildll
add
add
mov
push
adc
movsb
xchg
sbb
cmp
sbb
add
data16
add
xchg
add
mov
enter
adc
jle
jno
or
jl
popa
daa
jne
lods
or
mov
pop
jne
push
jb
cmp
inc
dec
pop
and
bound
cwtl
jnp
lods
jge
pop
fdivrs
movaps
lret
insl
xor
push
push
lock
sbbb
ret
fdivrp
std
int3
cmp
jae
or
jae
shld
shl
inc
rol
and
shl
mov
jnp
or
xchg
lock
stos
push
je
sub
loope
test
add
sbb
ljmp
dec
cld
xchg
inc
or
jle
adc
testl
inc
mov
das
sti
xchg
in
sbb
and
ret
and
xchg
lock
mov
nop
incl
and
orb
inc
loope
js
sub
sbb
sbb
dec
loopne
adc
adc
roll
sbb
fwait
pop
push
push
xor
dec
dec
test
insb
pop
es
push
dec
sbb
add
pop
pushf
sub
xor
sub
add
jbe
push
pop
andl
sbb
pop
mov
pop
arpl
orb
cmp
mov
leave
fcompl
dec
cmp
or
neg
andb
loopne
mov
cmp
jns
int3
jl
scas
int3
adcb
add
shrl
rcl
rolb
xor
rcl
lret
enter
rcl
shrl
mov
rcl
rcl
shl
sbb
mov
rcl
pop
nop
sub
rcl
rcl
and
and
aam
add
mov
aam
aam
inc
and
aad
lret
mov
and
aam
aam
add
mov
aam
aam
sub
jae
aad
aad
add
pop
add
sbb
or
and
mov
cs
lea
fistpll
jno
sahf
rorb
icebp
or
fdivrl
or
and
xchg
xor
and
aaa
or
jmp
xchg
push
leave
jno
xor
sub
lods
adc
add
mov
jmp
shl
mov
sbb
sub
rcll
shlb
cmpl
jp
insl
les
mov
call
ret
ficoml
dec
je
dec
jne
push
push
jmp
or
jmp
outsb
pop
shrb
xchg
orb
mov
pop
mov
iret
and
mov
push
push
xchg
cmp
sti
adc
mov
and
pop
fsubrp
xchg
dec
dec
icebp
dec
sahf
addr16
push
push
orl
push
mov
andl
lahf
testb
mov
cli
sbb
jge
sarl
or
loop
jge
cmc
cwtl
mov
test
jnp
push
xchg
les
push
sub
or
out
pushf
test
push
aas
mov
pop
call
and
or
mov
lods
in
mov
add
test
mov
incb
das
lea
subb
and
popa
add
out
popa
lods
aaa
push
sbb
lret
dec
adc
stos
add
jl
jmp
addb
je
or
je
xor
mov
dec
jmp
lret
add
cmp
sahf
call
pop
sbb
and
mov
ret
adc
je
jns
sub
xchg
pop
data16
push
add
imul
jno
sub
rcll
cmp
pop
ss
dec
lcall
ljmp
adc
lock
dec
adc
push
clc
and
push
jne
andl
push
testb
les
imul
jge
ds
sub
pop
shrb
cmp
push
iret
test
push
je
adc
sbb
ds
add
test
pop
cmc
lock
xor
cwtl
je
jecxz
push
or
mov
sub
cmp
pop
xor
inc
jmp
test
je
dec
or
vmulss
fwait
lods
mov
or
in
mov
scas
test
xor
or
add
mov
clc
mov
je
icebp
add
or
mov
movsb
dec
loope
push
cmpl
aas
jo
das
call
inc
push
ffreep
sub
fbstp
dec
sbb
lock
mov
jns
cltd
xor
clc
lahf
cmp
clc
lahf
fs
xor
shl
loopne
int3
repz
dec
xor
add
sub
jge
mov
lret
cmp
shlb
or
add
or
or
inc
lret
lock
fldcw
dec
test
push
fimuls
push
mov
and
imul
push
add
or
popf
lcall
or
add
cs
pop
and
push
or
and
mov
inc
jae
les
mov
icebp
sbb
int3
cmp
jne
or
or
cmp
mov
lds
int3
dec
roll
dec
and
int
mov
std
ja
or
adc
jbe
sub
adc
push
hlt
testb
adc
das
add
add
aaa
and
ret
sbb
mov
bswap
mov
into
add
movsb
popa
int3
or
adc
or
add
mov
add
dec
dec
or
push
cmp
or
pop
sahf
add
or
ljmp
scas
push
lock
lret
add
dec
call
loop
rolb
add
jnp
lods
add
jnp
sub
add
jl
jbe
nop
cmp
xchg
adc
mov
pop
pop
push
mov
adc
dec
cmovno
cli
ret
pusha
sub
out
ffreep
cmp
in
mov
mov
iret
loopne
add
ret
pop
cltd
addr16
sahf
pop
push
push
pusha
fdivl
add
pop
or
loop
mov
mov
xchg
sbb
sahf
aam
lret
add
jecxz
imul
enter
inc
push
mov
push
aaa
mov
mov
dec
mov
sbb
stc
pusha
stos
add
dec
push
in
cmp
fists
or
cltd
push
push
les
dec
popf
dec
dec
pusha
sub
sbb
xchg
not
cmp
add
es
call
dec
imul
pop
insb
fnsave
xchg
cmp
or
clc
mov
int
jl
orb
leave
add
xchg
shlb
jge
or
push
popa
sbb
clc
push
push
pop
rorl
mov
pop
lret
pop
or
imulb
or
add
sub
jo
mov
sbb
aas
cmp
and
add
jmp
movsl
add
push
add
cmp
faddl
dec
popa
sub
and
in
add
push
dec
into
mov
sub
test
mov
pushl
inc
sub
add
inc
jne
dec
xchg
jnp
scas
pop
loope
jge
cmp
fdivrs
sub
fidivl
xchg
mull
pop
sarl
neg
imulb
in
mov
test
cmp
jl
movsl
popa
or
dec
testl
add
inc
jge
pusha
notb
cmp
idivl
add
inc
in
xchg
inc
mov
rclb
adc
xor
cmp
call
incl
sub
loope
jg
fisttpll
lds
adc
shlb
xor
jnp
ret
aaa
int
call
sub
jecxz
add
mov
add
test
aad
je
into
or
and
pop
iret
push
imul
or
fiaddl
dec
or
jle
movb
test
mov
jle
inc
and
fistpl
mov
rolb
pop
mov
inc
fistps
add
fisttpl
adc
loopne
clc
cmpb
jl
add
mov
leave
jmp
std
xor
lcall
enter
jge
lea
or
orb
popa
in
push
cmp
cwtl
cmp
sub
mov
ja
add
adc
clc
sub
movsl
adc
adc
pop
stos
fisubrl
lock
jnp
lock
or
mov
adc
lods
adc
ss
pop
dec
push
mov
mov
cmc
jno
add
mov
rcll
flds
orb
bound
pushf
pop
mov
pcmpeqw
dec
mov
cmpl
pop
ret
hlt
cli
push
adc
rcrl
dec
xchg
jns
mov
jmp
dec
add
dec
outsl
jne
adc
enter
add
adc
or
xchg
into
aas
adc
leave
mov
shr
or
lea
mov
add
fbld
lret
jmp
and
iret
cltd
dec
dec
lods
push
mov
sub
rcrb
sub
movzbl
dec
and
jne
sarb
dec
jmp
pop
and
sub
lock
push
pop
mov
add
push
add
outsb
popf
shrb
test
popf
fs
je
outsb
push
adc
and
test
cld
mov
xchg
push
xor
call
and
icebp
mov
popa
pop
push
and
pop
sbb
mov
jge
mov
shlb
or
xorb
sub
sbb
sahf
outsb
add
jne
push
testl
and
push
mov
inc
imul
fsubrs
stc
leave
adc
popa
push
inc
jno
sbb
cmp
jno
jl
lahf
cmp
xor
cwtl
sbb
and
add
lea
aad
mov
in
inc
loopne
pop
mov
dec
pop
dec
add
adc
mov
adc
add
or
jns
les
add
jns
sub
push
cld
outsl
mov
stc
add
jo
jmp
and
loop
mov
sbb
cmp
jge
push
push
daa
or
movsl
clc
and
jmp
addl
add
int
pop
fwait
insb
arpl
inc
jge
and
outsl
adc
push
int3
ret
outsb
dec
add
xchg
mov
inc
adc
mov
call
xor
lods
jmp
setbe
or
mov
pop
xor
cmp
lea
jae
call
rorb
or
add
cmp
faddl
testb
add
inc
or
lcall
cmc
and
xor
call
into
add
mov
lea
lea
mov
mov
mov
shr
shl
or
pop
cmp
push
ja
mov
jmp
in
imul
or
mov
or
out
shr
xchg
push
aas
xchg
xor
mov
adc
adc
ljmp
mul
cld
dec
inc
adc
jbe
push
push
gs
pop
js
lea
int
aam
push
or
in
and
pusha
push
movsb
sbbb
xor
inc
cmp
push
cltd
jne
mov
inc
test
dec
add
lea
fwait
mov
out
adc
loope
mov
jnp
cli
imul
jmp
mov
lret
inc
mov
icebp
jmp
mov
pop
data16
inc
xchg
pop
test
mov
pop
loope
jp
rcrb
fildl
lock
aam
in
jnp
add
in
mov
adc
or
aad
add
stc
or
jg
mov
mov
pop
sbb
add
inc
add
xor
daa
lods
jle
cmp
popa
icebp
fsubrs
cmp
js
and
cmp
aas
mov
push
add
jbe
lret
pop
pop
pop
lcall
pusha
out
pop
adc
fsts
scas
xchg
mov
in
lret
lret
out
mov
or
push
inc
jle
mov
sbb
adc
gs
enter
dec
push
cmovp
dec
pop
add
int3
push
lcall
fistl
out
cli
cmp
arpl
and
jmp
xchg
mov
ljmp
pop
mov
repz
ret
mov
inc
movsb
push
jmp
adc
dec
mov
arpl
in
jb
fwait
sbb
repz
push
add
xor
ljmp
inc
cmpsl
or
jnp
into
js
ljmp
aaa
push
push
lea
push
dec
adc
sub
or
fidivl
or
gs
cwtl
add
mov
pop
dec
cli
pusha
test
inc
push
shrl
aas
or
pop
dec
adc
jmp
cltd
jne
cmp
sub
je
mov
xchg
sbbl
ds
xchg
pop
dec
pop
decl
mov
mov
test
mov
fidivrl
add
aas
add
je
rolb
ret
sahf
loopne
jg
mov
mov
insb
sub
out
and
or
jge
xor
popa
add
lcall
jge
add
mov
and
inc
dec
adc
xchg
adc
insb
xor
xchg
or
repnz
insb
xor
jnp
aam
push
in
movsl
addl
fldl
inc
adc
sub
sbb
inc
add
jl
inc
sbb
cmpb
add
adc
xchg
xchg
xor
mov
and
inc
add
clc
mov
jmp
jbe
loopne
xor
mov
repnz
xchg
jns
xchg
ret
sbb
jno
push
jmp
mov
arpl
nop
cmp
adc
sub
sub
mov
mov
inc
or
add
inc
in
adc
out
int
imul
xor
cmpsl
fstpl
call
pop
mov
sbb
mov
mov
lcall
dec
repz
sub
int3
pop
in
out
dec
shll
jmp
ret
in
out
sti
out
aas
mov
mov
mov
sub
push
add
xchg
or
push
out
mov
pop
sbb
and
xor
add
rcrb
fcomp
repnz
jp
or
data16
sub
pop
dec
mov
or
push
mov
or
or
pop
mov
fidivrl
cs
and
sbb
mov
ret
into
add
jle
lret
push
loope
mov
icebp
aas
jo
iret
inc
jmp
dec
das
out
or
cmp
lods
xor
cli
imul
loope
leave
dec
mov
lea
sar
vmaxsd
movswl
jae
lock
or
aas
jb
and
stos
mov
xor
jno
sbb
xor
adc
dec
fisttpl
add
and
movsl
adc
jle
cmp
xchg
clc
cli
in
or
rorl
push
mov
sbb
jne
fildl
neg
std
xor
or
push
mov
mov
pop
jge
inc
mov
push
repz
cltd
jo
into
and
push
adc
int3
sbb
test
fsubl
mov
sbb
ja
inc
xchg
decl
jne
call
jmp
popl
add
add
fwait
bswap
push
push
pop
adc
dec
jmp
es
lcallw
add
daa
je
sub
sub
mov
mov
pop
loop
fsubrp
mov
lods
pop
hlt
flds
or
jle
xor
pop
enter
dec
pop
lea
sub
sbb
pop
loop
mov
inc
jl
sub
cmp
and
pushl
and
jmp
cmp
mov
adc
or
sbb
das
xchg
rolb
and
jl
xchg
insl
imul
aaa
test
push
jb
ds
inc
iret
stc
mov
jecxz
std
and
and
and
lea
cmp
inc
adcb
jg
lods
mov
std
mov
aas
ja
icebp
inc
loopne
cmp
mov
or
push
test
incl
mov
fnstcw
push
ret
sbb
imul
pop
adc
pop
cmp
push
cmp
cmp
add
sub
loop
mov
push
dec
mov
cs
cmpsl
sub
pop
add
in
mov
sarl
fcmove
les
imul
push
adc
adc
test
sar
xlat
mov
xor
push
dec
scas
xchg
mov
hlt
add
out
push
das
out
jne
and
add
pushf
andl
addl
jle
popf
out
mov
mov
or
fidivs
cmp
gs
jmp
ffreep
lds
jnp
add
dec
scas
in
andl
cmp
mov
pop
jnp
cmp
dec
or
inc
xor
ficomps
adc
sbb
out
addl
loope
jp
push
xchg
por
jne
ficoms
jae
out
ret
pop
std
mov
push
pcmpeqw
or
rcr
lds
xor
fldl
sub
lods
add
faddp
arpl
rclb
jnp
mov
pop
addr16
cmp
je
jge
mov
pop
shlb
or
adc
mov
icebp
mov
inc
push
cs
push
inc
mov
pop
icebp
pushf
jle
lea
cmpl
and
ffree
testb
inc
pop
filds
pop
mov
mov
jne
int3
add
inc
js
jmp
and
push
mov
data16
push
test
lahf
adc
add
lcall
xchg
xor
ja
popa
push
out
mov
les
hlt
push
pushl
movsl
arpl
mov
mov
push
movsb
mov
aad
mov
rclb
mov
jle
sub
mov
sbb
dec
jno
repz
test
ficompl
jmp
ljmp
mov
hlt
movl
imul
std
in
leave
mov
add
insb
push
jmp
cmp
or
pop
adc
in
pusha
aad
jno
mov
inc
aam
decl
test
movsl
cli
test
xor
leave
mov
lods
jecxz
fdivs
jne
incl
or
shrl
cmp
ficoms
push
xlat
enter
mov
and
mov
call
xchg
mov
mov
or
or
and
or
adc
lcall
sbb
data16
inc
fdivl
jno
add
aad
mov
mov
add
incl
movsl
in
lahf
xor
mov
js
stc
cmc
test
decl
xchg
sbb
push
sub
insb
fs
add
hlt
push
imul
insb
sbb
xor
jmp
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
mov
mov
cld
fistps
ficoml
gs
aam
pop
popa
mov
into
lcall
je
mov
aam
movsl
fisttps
xchg
fadd
shll
jmp
incl
fldcw
inc
mov
sarb
add
in
add
pop
dec
or
cmp
add
push
stos
inc
add
adc
or
and
test
or
mov
popa
into
push
stc
fdivp
lcall
leave
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
stc
mov
lcall
mov
cmp
ljmp
jmp
fildl
push
fdivl
or
test
fs
ds
or
or
push
in
decl
xchg
daa
ljmp
pop
jge
xchg
shlb
add
inc
push
imul
xorb
pushl
insb
sbb
push
imul
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
mov
call
xchg
shll
push
repnz
addr16
cmpsb
incl
mov
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
decl
imul
andl
shrb
ss
push
xchg
ja
int3
add
mov
call
add
das
es
lds
or
sub
mov
cmpsl
call
ret
shlb
lcall
ficomps
ret
es
pushf
mov
insl
add
ss
jmp
jmp
jb
push
add
adc
mov
jnp
sbb
xchg
or
out
fdivrl
fisttpl
aam
roll
clc
mov
push
int
mov
mul
and
mov
ja
mov
out
sti
jo
aas
cli
dec
cmp
pop
or
adc
sahf
gs
clc
sar
imul
push
js
decl
mov
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
imul
push
call
scas
fcompl
fldenv
filds
cmp
aaa
push
scas
mov
fidivrs
mov
jmp
loope
repnz
lret
mov
cmpsb
mov
sarb
incl
xlat
int
push
ficoms
fldenv
jp,pn
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
jns
decl
add
sub
mov
scas
sbb
push
push
add
sbb
clts
pushl
testl
add
and
cmp
pop
or
outsl
fisubrs
push
push
pop
push
and
add
pusha
push
jo
pop
imul
fcmovne
sbb
sub
outsb
add
insb
add
repz
insb
insb
adc
add
aas
lock
push
inc
push
cmp
inc
inc
cli
lret
dec
jae
jb
arpl
jae
jb
gs
je
jb
sbb
push
nop
pushl
add
push
dec
inc
dec
xor
add
xor
add
pop
scas
lods
mov
cmpb
pusha
mov
test
in
das
movsb
mull
gs
jb
push
dec
dec
push
push
sbb
paddsb
or
dec
inc
sbb
inc
and
and
xor
cmp
sub
insb
je
sti
jne
in
outsb
imul
jns
jo
dec
aaa
outsb
outsl
je
or
push
and
popa
arpl
out
insb
inc
imul
sbb
ss
xor
xor
ja
and
jb
inc
addr16
arpl
enter
arpl
insb
push
mov
out
jge
gs
das
mov
mov
mov
xor
out
outsl
jo
mov
jnp
loop
inc
push
fs
push
cmp
lea
cltd
xor
and
xor
cld
and
push
pop
insb
outsl
arpl
popa
sub
xor
pop
add
add
sbb
std
andl
insl
insl
pop
addr16
lahf
and
mov
pop
push
cmp
push
iret
lret
fisubs
push
jae
push
xor
pusha
fnstcw
fcomp
outsb
addr16
and
decl
shll
mov
imul
push
cmp
jb
mov
jnp
jns
or
inc
sbb
lret
sbb
and
cmp
cs
insb
xor
pop
imul
repnz
push
inc
lds
popa
test
jbe
jge
push
outsb
divl
add
pop
push
dec
fs
jle
das
in
addr16
outsl
js
xor
push
dec
inc
dec
add
dec
dec
mov
add
add
jbe
lret
mov
add
push
add
testl
inc
add
mov
push
jle
imul
outsb
gs
imul
in
daa
in
mov
jb
inc
outsb
je
popa
jae
xchg
sbb
testl
add
ss
xor
xor
nop
xchg
lret
xchg
cli
cmp
xor
xor
adc
add
ss
pop
xor
inc
out
stc
xchg
mov
insl
jae
jno
dec
push
push
push
dec
das
in
or
and
insb
xor
inc
push
xor
xchg
lret
mov
ja
aas
pop
orl
push
push
fcoml
inc
aaa
or
loop
pop
push
nop
insb
jae
adc
fiadds
sti
outsl
jo
imul
jle
xchg
or
outsb
jo
push
push
dec
cmpsb
out
mov
jae
mov
gs
aam
sub
add
fmuls
inc
adc
xchg
xchg
test
inc
and
adc
shll
sub
stc
pop
imul
xor
out
jle
xchg
pop
xchg
inc
mov
jae
bound
stos
push
in
fcoml
push
add
push
call
ror
dec
add
push
outsl
je
insb
cmp
and
fs
or
es
mov
bound
inc
js
insb
outsl
imul
das
pop
push
inc
inc
dec
pop
dec
push
arpl
lock
js
dec
arpl
sub
mov
aaa
dec
push
cmp
outsl
jno
filds
jb
add
outsl
popa
mov
sarl
push
aas
adc
in
and
lea
and
mov
popa
and
je
adc
jbe
inc
mov
sub
mov
rol
into
and
gs
push
add
fdivrs
push
outsl
push
mov
outsl
gs
in
jle
rcr
aaa
aaa
cs
xor
jae
ret
push
mov
mov
add
loop
pop
cs
js
imul
lock
rcll
fucomip
inc
mov
sub
shll
and
ss
lods
ljmp
sub
pop
das
sub
test
lock
addr16
iret
jae
je
imul
insl
lret
inc
mov
cmp
inc
dec
pop
dec
pop
iret
lock
pop
xchg
and
push
pop
sub
outsb
fidivrl
xor
adc
or
or
inc
dec
dec
inc
push
out
inc
jmp
adc
add
jns
xor
or
addr16
mov
pusha
ljmp
jg
xchg
add
add
pop
sub
sub
pushl
daa
sub
das
xor
sbb
mov
mov
xchg
mov
push
das
xchg
jae
add
xlat
inc
dec
push
push
pop
xchg
mov
ret
pop
mov
xor
push
cwtl
add
jo
dec
rorl
push
xor
sbb
and
clc
cmp
cmp
cmpsb
sbb
cwtl
mov
sbb
adc
and
aaa
fdivl
mov
jnp
aaa
pop
jo
cmp
pop
sbb
mov
sbb
push
scas
test
enter
jo
adc
leave
or
lock
and
or
and
xor
enter
xor
pusha
push
leave
and
add
xor
and
xor
or
enter
xor
or
leave
test
js
pop
xor
push
mov
xchg
das
cmp
mov
push
xor
das
call
xor
test
leave
and
mov
mov
fs
mov
ja
xchg
and
cs
fsubrs
das
xor
jae
mov
enter
xor
enter
sub
xchg
sub
imul
cld
sub
lret
addr16
sub
inc
xchg
push
sbb
add
gs
cmp
into
ret
shrb
pop
clc
sar
jae
sub
jb
gs
mov
ret
out
and
sbb
popa
jb
sub
loope
add
push
push
jb
cltd
mov
sub
outsb
ja
arpl
pusha
pop
js
fldl
xchg
outsl
arpl
sbb
mov
pop
iret
or
out
xchg
dec
push
dec
pop
imul
imul
stos
insl
data16
jo
bound
outsb
jbe
cld
push
insl
jo
mov
imul
les
jecxz
dec
dec
and
js
out
gs
cltd
dec
outsb
jae
insb
push
lock
pop
cmp
push
loop
or
pop
out
xchg
mov
imul
push
dec
sbb
jbe
scas
dec
les
jnp
jne
and
popf
imul
pushf
lock
push
dec
pop
lock
dec
dec
jne
notl
or
addr16
push
mov
pop
aas
sahf
fnsave
outsl
aas
sub
jle
pop
and
pop
outsb
jno
popf
cmp
push
adc
push
addl
out
inc
pop
mov
inc
xchg
push
pop
mov
push
imul
push
sub
xlat
push
ret
cmp
adc
call
sbb
cmp
lds
dec
push
ja
push
je
sti
js
and
inc
outsb
je
enter
bound
inc
push
inc
dec
push
dec
dec
inc
dec
inc
imulb
mov
outsl
arpl
arpl
xor
xor
incl
adc
inc
insb
pop
daa
imul
xorl
movsl
jo
adc
add
scas
pop
arpl
js
add
pop
shrl
xchg
pop
test
inc
rclb
mov
dec
inc
inc
mov
pop
fildl
pop
das
xchg
lret
lcall
scas
incb
lods
xor
inc
inc
dec
inc
push
pop
test
orb
aad
rorb
add
xadd
iret
jnp
pop
hlt
pop
mov
jg
push
jne
ret
jb
jne
pop
dec
xlat
dec
jo
pop
xchg
dec
and
dec
ret
cmp
dec
mov
rol
js
jecxz
push
mov
push
dec
fwait
cltd
xchg
sub
fiaddl
imul
add
or
and
lahf
add
out
inc
cmp
insl
pop
mov
dec
jo
xchg
test
lahf
insl
andb
movl
test
pop
movsl
dec
clc
fs
pushf
stos
aaa
cmp
out
dec
out
imul
push
inc
xchg
sahf
and
pop
popf
js
sub
and
fstps
inc
ficoml
arpl
push
push
add
popa
pop
xchg
inc
pushl
lods
mov
test
gs
subb
mov
cmp
inc
xchg
shlb
rcll
daa
fwait
cltd
sbb
push
insb
notl
xorb
ljmp
xor
push
sbb
pop
sub
mov
gs
cwtl
arpl
dec
inc
inc
das
inc
imul
bound
data16
dec
inc
dec
add
andb
xor
inc
jne
cmc
ret
movsb
push
outsb
daa
lock
adc
inc
mov
pop
inc
cmp
aad
fisttpll
gs
ficomps
jo
jae
push
arpl
xor
push
mov
xlat
push
pop
fs
andl
dec
sub
mov
jg
pop
icebp
push
shrl
fidivs
popf
dec
in
xchg
loopne
adc
push
and
insb
insl
jns
gs
sbb
mov
dec
gs
and
sbb
jmp
imul
leave
jbe
mov
pop
jecxz
cli
xor
push
aas
addps
push
xor
scas
cltd
icebp
dec
pop
jo
jbe
pop
dec
outsl
lds
xlat
lock
outsl
outsl
inc
imul
xor
sub
push
sub
movsb
fnsave
xor
call
dec
push
mov
adc
ja
jno
mov
cmpsl
and
mov
adc
lods
outsl
lock
xor
lea
gs
nop/reserved
outsl
jne
sub
cmp
sub
inc
sub
jg
pop
jo
or
mov
mov
and
cmp
fisubs
bound
adc
push
add
lahf
add
cmc
sub
or
pop
mov
leave
mov
or
loop
lods
jmp
jo
idiv
lcall
xchg
imul
xor
fsts
movsl
lcall
mov
lcall
iret
into
enter
imul
shrb
xchg
rol
pop
popf
fdiv
fistpll
adc
mov
lcall
sbb
pop
js
sbb
adc
pop
xchg
adc
lcall
out
fistpl
data16
gs
shl
popf
and
neg
add
cwtl
repz
sub
pop
sahf
fwait
cltd
sahf
and
pop
adc
popf
repz
lret
outsb
mull
insl
xor
sbb
adc
inc
xor
adc
fbld
fbstp
divb
iret
lret
lret
movsl
cli
hlt
std
and
jb
leave
sbb
testl
pop
in
pusha
enter
ret
shlb
ja
lcall
jno
addr16
in
leave
jmp
cli
fdivr
std
jmp
ljmp
in
cld
ljmp
sti
jbe
fcomps
xor
idiv
std
aad
sti
jmp
out
cmp
xor
ljmp
fmul
cmp
xchg
sti
sti
std
and
lock
cmc
lock
jmp
sbb
jle
dec
dec
dec
push
leave
sbb
push
xor
ret
bound
jne
xor
xor
fs
das
push
das
mov
cmp
decl
xor
incl
repnz
sti
jnp
jno
aad
ja
fs
add
in
jo
iret
xor
enter
push
fstpt
cmp
addr16
push
xor
ja
orb
adc
les
jne
es
gs
bound
outsb
gs
jae
jb
add
arpl
stc
je
je
and
imul
adc
jle,pn
outsb
add
and
cli
xor
aaa
jg
xor
xor
cs
adc
xchg
jo
outsl
fbld
mull
xor
add
xor
xor
cmp
add
cmp
push
movsl
in
and
push
dec
sbb
daa
testb
dec
mov
insl
outsl
shlb
je
jae
or
iret
xchg
jmp
sarl
popa
js
pop
sub
jae
xor
xchg
push
and
loopne
cs
push
jb
jae
sub
xchg
test
add
sbb
loope
sub
bound
ss
or
out
ficompl
outsl
jne
outsl
add
inc
dec
pop
fcmove
mov
cmpsb
add
and
or
pop
js
cs
add
fldl
or
pop
imul
xor
sub
jg
lods
cmpsb
push
adc
jmp
adc
out
bound
dec
inc
popa
sub
cs
sarb
dec
pop
imul
imull
add
add
cs
insl
lcall
popl
out
jbe
rolb
mov
ss
es
lcall
mov
sbb
adc
adc
add
cmp
add
add
aas
sub
and
std
int3
inc
fs
mov
pusha
pop
or
aaa
jo
xchg
jl
add
xchg
hlt
push
sub
adc
outsb
jb
dec
inc
push
inc
xor
mull
or
test
or
pusha
fiadds
aas
shll
add
ja
add
xor
sub
add
or
fldt
cmp
add
add
add
les
int
fs
insl
dec
pop
push
das
out
stos
pop
or
nop
or
cmpsb
movsb
nop
or
nop
lods
stos
imul
and
scas
adc
and
add
enter
mov
push
or
loopne
orl
vmread
or
decl
data16
jo
cwtl
xchg
cwtl
dec
rclb
test
scas
xor
mov
iret
add
adc
adc
pusha
pop
out
shlb
and
mov
add
jmp
mov
jp
add
adc
sbb
insl
fimull
fcomp
or
sets
insl
loopne
dec
adc
cs
lcall
mov
pop
and
sbb
add
inc
add
push
add
sbb
xor
xor
mull
add
push
andb
xchg
insl
testb
sub
adc
pop
pop
out
xor
int3
loopne
jg
xchg
add
cmp
push
fstpl
test
dec
add
pop
push
inc
clc
inc
nop
je
jg
bswap
outsl
cmc
pop
jo
jo
jo
popa
repz
jo
pop
call
inc
cmpl
dec
jne
cmpl
jne
add
cld
add
loopne
adc
inc
daa
decb
or
inc
aaa
mov
pop
xor
add
jmp
repz
std
decl
jl
mov
ja
mov
cmovno
cld
ja
inc
or
mov
cmp
push
ljmp
arpl
mov
imul
inc
xor
dec
pop
inc
sub
add
jae
lea
pop
adc
das
jae
loop
dec
mov
dec
inc
inc
mov
imul
push
push
add
cwtl
js
jbe
push
push
dec
dec
dec
mov
and
add
jmp
inc
das
imul
pop
dec
gs
inc
dec
mov
popa
mov
push
and
out
inc
orl
scas
xorl
sbb
mov
lret
inc
ja
inc
dec
fdivrl
dec
and
jl
inc
popa
inc
cmp
xor
and
and
or
js
outsl
inc
push
inc
mov
pop
in
daa
icebp
jno
sub
negb
xchg
imul
and
pop
adc
or
or
fisttpl
pop
dec
push
jno
add
push
pop
outsl
jne
xor
dec
test
add
and
push
pop
filds
hlt
shll
cmp
pop
enter
fs
inc
push
inc
dec
add
push
add
mov
lahf
aam
xor
js
lcall
mov
sbb
fwait
pop
js
dec
pop
adc
loopne
mov
push
lock
dec
inc
cmpsl
imul
ja
mov
mov
aas
push
add
jne
out
adc
das
pop
sub
and
mov
inc
frstor
mov
adc
add
pushl
add
pop
sar
mov
add
es
sbb
stos
jns
imul
jae
outsb
dec
pusha
lret
in
pop
pop
test
adc
frstor
inc
inc
push
and
xor
and
cmp
mov
outsl
mov
push
mov
insb
out
sub
sbb
sub
popa
js
mov
cmp
sbb
pop
jp
repz
js
xor
or
imul
push
popa
push
insl
inc
in
test
scas
add
pop
pop
dec
fisttpll
and
sub
mov
dec
in
dec
sbb
push
movb
adc
jo
jae
add
lock
inc
shll
jae
out
adc
das
cli
pop
and
and
pop
sub
pop
add
dec
das
outsl
jge
movsb
mov
push
jno
das
push
insl
insb
cmpsl
pop
pusha
pop
jne
mov
mov
ret
imul
push
dec
xor
cmpsl
push
stos
mov
push
mov
ret
arpl
loopne
psrlq
sbb
mov
cmp
push
adc
inc
out
mov
dec
push
push
inc
dec
cmp
cmp
sub
sub
push
inc
inc
ret
adc
inc
pop
loope
jge
adc
dec
dec
ds
push
push
dec
push
dec
push
inc
and
mov
adc
jae
cld
out
insl
bound
das
sub
insb
shlb
imul
inc
push
dec
and
lahf
pusha
pop
stc
jmp
inc
dec
dec
cmpsl
cmp
gs
inc
push
jmp
pop
das
xor
jae
inc
and
lods
cmp
and
daa
aaa
jo
add
fsubrl
inc
stos
jg
das
push
jns
mov
xor
cmp
jbe
daa
add
jecxz
dec
inc
and
inc
inc
sbb
js
sub
sub
rcr
das
or
inc
adc
jbe
sbb
push
dec
adc
jmp
arpl
jno
or
test
mov
jge
cmpsb
adc
fbstp
mov
cltd
popa
in
popa
orl
inc
dec
inc
xor
push
ja
cmovbe
arpl
ds
cmc
cmp
lret
sbb
push
neg
aad
test
and
addr16
fwait
xor
out
dec
cmovne
fsubrs
fisttpll
dec
jge
ret
sub
aad
fbld
xchg
adc
or
jmp
or
add
lds
pop
dec
inc
dec
push
xchg
lahf
jp,pn
add
daa
jo
sub
insb
inc
dec
pop
inc
sbb
ljmp
out
xchg
insb
pop
mov
gs
push
push
js
insl
and
cmpsl
mov
pop
jnp
lcall
or
sub
inc
pop
js
sub
dec
addr16
mov
jnp
push
adc
dec
push
or
push
push
fildll
dec
dec
pop
and
mov
lea
or
xor
sub
xchg
outsb
fists
sub
jg
insl
pop
add
adc
in
nop
xchg
gs
inc
push
inc
pop
std
les
dec
movl
lods
or
in
fs
xor
jae
in
fs
je
in
in
xor
in
in
aaa
aaa
ja
in
cmp
js
movsl
mov
pop
xor
fs
in
jp
xor
and
xor
shl
fidivs
xor
and
and
xor
es
xor
enter
and
es
inc
fidivs
pop
es
imul
cmp
sub
outsl
cmp
insl
pop
sub
pop
sub
daa
int
mov
daa
int
cmp
xor
sbb
pop
mov
and
push
jno
es
add
inc
insb
in
xor
ds
push
push
adc
movsb
xchg
adc
sbb
adc
dec
imul
ficoml
dec
scas
jo
daa
mov
dec
lcall
rcrb
es
popa
popa
sbb
sbb
lods
cmp
arpl
pop
adc
test
call
push
mov
dec
push
mov
cmpsl
xchg
iret
out
adc
nop
lret
daa
mov
cmp
fisubs
insb
in
je
and
adc
rcrl
adc
mov
adc
add
pop
imul
es
adc
dec
mov
sbb
shrb
ds
jns
aas
fcompl
nop
fisttps
adc
inc
push
push
dec
pop
push
inc
imul
or
out
push
or
fisttpl
es
push
sbb
test
dec
dec
pop
or
lea
push
pop
or
inc
pop
mov
mov
inc
push
push
pop
or
dec
xlat
inc
push
or
mov
ja
inc
scas
cmp
dec
or
mov
mov
into
inc
inc
push
pop
or
into
dec
fisttpl
dec
or
pop
pop
or
fneni(8087
dec
dec
test
imulb
lcall
lcall
imul
adc
or
enter
popa
xor
and
dec
xor
and
dec
xor
orl
ss
xor
and
push
imul
dec
cmp
in
outsb
cs
dec
inc
pop
std
push
int3
js
push
into
fs
add
and
lcall
ret
xor
inc
jne
mov
in
rdtsc
cs
push
andb
or
addr16
cmp
paddd
arpl
inc
lods
inc
loopne
test
jb
gs
jo
mov
ss
sbb
repnz
pop
gs
xor
xor
pop
dec
lahf
or
stc
pop
dec
dec
sti
push
gs
xchg
outsl
arpl
sub
inc
stc
arpl
aas
mov
inc
outsb
jbe
jb
shrb
fcomps
and
mov
loopne
arpl
push
dec
mov
je
ret
movsb
mov
mov
les
mov
inc
pop
arpl
adc
inc
xor
das
inc
lods
xchg
fsubs
inc
fs
daa
sbb
insl
jo
mov
or
jo
inc
pop
xor
lock
or
and
pop
adc
lds
hlt
arpl
outsb
jae
sub
push
addl
fcomps
aas
cs
push
pusha
imul
cmpsl
dec
sti
loopne
push
popf
add
outsw
pop
mov
jne
pop
fs
lods
or
and
pop
stos
push
dec
fsubs
sarl
iret
scas
nop
daa
mov
iret
gs
outsl
bound
mov
push
adc
pop
rclb
loop
pop
push
fbstp
js
outsl
dec
arpl
inc
mov
outsl
pop
inc
inc
out
mov
push
icebp
sarb
sbb
out
arpl
outsl
jp
insb
popa
das
xor
sub
dec
and
and
fcoms
daa
push
xchg
lcall
push
push
jb
inc
daa
subl
daa
inc
adc
sbb
inc
dec
gs
mov
insb
pop
mov
and
imul
xor
sbb
mov
addr16
xchg
push
dec
pusha
xor
scas
mov
add
sub
das
out
xchg
iret
bound
mov
imul
gs
adcb
lods
pop
cmp
into
out
pop
xchg
mov
xchg
sbb
scas
push
jbe
pop
push
fisttpl
fisttpll
or
imul
rorl
jae
push
outsb
push
push
nop
pop
inc
jecxz
shlb
mov
dec
mov
mov
or
in
inc
mov
jo
mov
fdivrl
push
pop
adc
inc
inc
dec
jae
push
inc
or
push
push
xchg
fwait
cmp
cmpsb
pop
notb
seta
push
pop
cmp
scas
inc
imul
lahf
inc
js
inc
insl
enter
scas
frstor
or
pop
or
mov
roll
mov
daa
mov
movsl
outsb
fisubs
push
pop
shll
popa
inc
push
mov
jae
outsb
jb
push
inc
subl
scas
sbb
lods
push
inc
cli
jae
xchg
jmp
sub
mov
negb
mov
andl
sbb
add
pop
call
dec
xchg
adc
and
push
add
outsl
imul
jnp
das
testb
jo
push
nop
push
jo
lahf
repz
lods
xchg
imul
pusha
inc
and
inc
arpl
push
cmp
jge
cmp
data16
out
jo
mov
and
add
in
in
and
int3
sbb
ss
jg
mov
mov
adc
mov
loopne
roll
xchg
and
mov
push
js
popa
jae
add
shlb
bound
imul
mov
inc
push
insb
or
jns
mov
adc
mov
scas
into
jmp
and
fwait
jb
xchg
inc
sub
das
imul
pop
fwait
insl
fsubr
jo
sub
sub
ret
aaa
fwait
mov
pop
jmp
dec
cmp
cmp
call
mov
sub
inc
mov
mov
xor
mov
test
cmp
xchg
pop
mov
js
sub
dec
mov
inc
popa
hlt
pop
xchg
jns
or
cmpl
push
es
or
pop
push
ja
sbb
dec
dec
and
leave
inc
pop
repz
scas
dec
add
cmpsb
gs
jo
xor
rcll
xor
popf
xor
rcr
addl
daa
xor
ss
xor
inc
fs
outsl
jbe
sbb
fsubrs
call
ffreep
push
sahf
pop
dec
and
or
std
cmp
or
fsts
outsb
clc
insb
mov
pusha
icebp
pop
cltd
icebp
cmp
mov
adc
sbb
jne
mov
int
mov
mov
lods
add
out
cwtl
icebp
fwait
cltd
icebp
fidivrl
popf
dec
adc
mov
lret
shl
mov
jg
mov
jne
adc
mov
mov
jmp
mov
movsb
adc
mov
adc
outsb
xchg
fbstp
leave
enter
pop
out
test
data16
lcall
xchg
lcall
fsubl
lcall
insb
incl
rcr
xor
or
in
xchg
in
lcall
xchg
lcall
in
jle
adc
mov
xchg
rclb
test
sbb
mov
mov
pop
xlat
xchg
jne
addr16
call
decl
jbe
jns
push
cmp
jne
xor
jle
pop
loopne
mov
jge
scas
adcb
jg
adc
in
sub
sbb
das
pushf
shlb
popf
dec
mov
insl
popa
in
lcall
add
rcr
jmp
and
test
stc
daa
enter
jge
jns
in
aaa
gs
add
xorl
es
xor
lcall
inc
test
push
dec
inc
jmp
push
enter
adc
call
sbb
push
inc
and
push
push
dec
push
dec
and
dec
inc
fstp
inc
mov
dec
inc
dec
dec
add
adc
sbbb
jo
xor
xor
or
inc
xor
xor
adc
dec
and
xor
movsb
jge
sbb
pop
adc
or
mov
cld
inc
add
or
dec
out
imul
daa
and
loopne
inc
dec
aad
xchg
outsb
mov
arpl
ja
jne
xor
das
rorl
xor
sbb
dec
gs
fimull
in
or
ficoml
or
lahf
add
xor
add
pop
in
push
adc
ds
roll
aas
cmpsl
sbbl
dec
sbb
scas
xor
ret
dec
and
adc
push
or
inc
xor
ret
push
add
push
out
xor
aas
add
fs
add
or
add
add
jno
xchg
fidivrs
or
adcl
add
push
insb
mov
cmp
aam
cmpsl
jo
pushf
and
aas
adc
imul
es
mov
pop
inc
cmpsl
pusha
adc
ud0
stc
add
sub
cmp
rclb
push
lods
nop
lcall
fldcw
cmc
add
hlt
push
repnz
mov
or
or
insb
repnz
in
or
addb
add
add
xchg
adc
lahf
jl
inc
cmove
daa
repnz
adc
stos
pop
cmpsb
jmp
inc
mov
add
decb
inc
add
scas
mov
subb
adc
incb
mov
leave
xchg
and
fdiv
pop
pop
and
add
stc
nop
push
test
xchg
mov
ja
add
insb
push
test
xchg
pop
pop
repnz
popf
lods
xchg
pop
mov
cmp
push
and
mov
int
pop
jne
jbe
sbb
lods
add
dec
ficomps
roll
ja
imul
popa
out
xchg
dec
jbe
adc
xchg
mov
push
push
xor
insl
addb
add
inc
add
or
jecxz
aad
sub
push
add
or
outsl
aas
imul
in
sbb
jmp
cli
push
loope
leave
ljmp
push
inc
xor
cmpsb
xor
push
push
je
aaa
test
xchg
or
adc
das
arpl
aam
push
test
icebp
ficoms
test
cli
mov
aad
dec
xor
adc
xchg
or
pop
push
outsl
fwait
loopne
push
inc
dec
jae
ss
bound
pop
jbe
sahf
push
sub
int3
clc
and
and
sbb
pusha
test
and
inc
pop
inc
inc
and
lret
scas
je
arpl
insl
fs
daa
or
data16
orl
pop
ss
pop
or
popf
jnp
cmp
out
cltd
jge
fnstsw
add
push
dec
inc
adc
push
push
arpl
dec
xchg
or
lds
orl
aas
gs
lea
sahf
mov
push
imul
imul
cmpsb
imul
xchg
lcall
rcrb
pop
jo
xchg
xchg
adc
fnstenv
fstp
jo
and
ds
push
push
test
test
xor
scas
inc
popa
ror
fs
fs
jne
loop
das
fwait
in
xchg
sbb
and
mov
lock
cmpsb
fmuls
mov
iret
into
dec
xor
and
mov
mov
inc
or
xchg
lock
mov
add
sub
jb
cmp
lds
lea
cmp
call
gs
movsb
mov
cld
sbbl
ret
or
sub
je
sub
mov
and
inc
xchg
xor
imull
add
popf
mov
shlb
lds
int3
push
arpl
or
push
popa
idivl
dec
or
push
scas
inc
mov
sbb
sub
xlat
inc
sbb
inc
jl
test
dec
dec
sbb
cmp
subl
mov
xor
arpl
fs
fnstcw
stos
fs
inc
popa
mov
xor
mov
xchg
shll
aaa
sub
lock
jb
adc
or
adc
sub
scas
inc
adc
and
popa
xchg
or
inc
adc
ret
mov
aas
imul
es
sbb
outsl
adc
daa
jo
xchg
cmp
xor
sahf
mov
fs
arpl
shrb
ret
add
arpl
mov
xorl
push
pop
push
xchg
xchg
mov
pmaxsw
pop
and
or
nop
jmp
mov
mov
mov
outsl
add
jg
jns
and
push
push
les
push
xlat
inc
sbb
iret
movsb
js
mov
sub
dec
push
jg
or
imul
lock
add
movsb
push
mov
imul
jo
arpl
push
dec
push
dec
fstps
pop
sbb
sub
outsb
and
and
pop
lret
pop
pop
ret
jo
add
push
sub
aas
aaa
mov
lods
jecxz
addr16
les
xor
jo
into
pop
hlt
or
jne
xor
fnstenv
and
and
jge
push
dec
fldt
jno
aaa
add
insl
push
cli
sbbb
add
jae
pusha
adc
dec
xchg
mov
addb
xchg
and
push
pop
inc
pop
aas
aaa
lret
push
or
add
sbb
scas
pop
cmp
add
inc
push
sub
cmp
js
mov
xor
xchg
xor
add
push
aaa
jne
cmpsb
xchg
dec
imul
call
sub
es
dec
fildl
daa
mov
xor
je
outsb
xchg
ss
inc
push
mov
sub
add
mov
stos
push
cmpsb
ja
add
shll
adc
or
fstl
mov
aam
imul
daa
inc
jne
inc
insb
movsl
ret
add
lea
cmp
or
daa
loope
insb
mov
pop
push
and
and
ds
ss
jbe
mov
dec
xor
shll
sub
and
inc
jne
ret
cmp
test
xor
outsb
xor
int
sub
lods
test
out
jecxz
push
and
inc
pop
ss
addb
xor
addb
cmp
and
mov
in
dec
roll
mov
loopne
outsb
insb
jne
mov
stos
add
rcl
add
cmp
mov
outsb
mov
sub
mov
xorl
pop
cmp
sub
daa
mov
addr16
addr16
and
jae
pop
inc
and
in
and
cmp
shrb
rcll
jns
push
out
insb
or
inc
xor
sbb
pop
dec
push
jno
xor
mov
cmpsl
cmpsb
sbb
fs
imul
and
je
sbb
ss
and
inc
pop
cltd
push
add
fidivs
and
inc
jne
and
popa
xor
push
popf
push
ret
jns
dec
sub
loopne
in
pop
insl
or
or
mov
jae
arpl
jae
stos
outsl
cmp
nop
xor
cmp
sbb
mov
into
fadds
push
pop
sub
loopne
imul
inc
outsl
push
call
pop
push
jg
shrl
popa
outsl
out
cmp
ss
xchg
add
push
cmpsb
dec
dec
arpl
ja
in
imul
xor
daa
or
or
and
add
or
lahf
pop
pop
sbbl
fs
inc
std
mov
jl
imul
inc
cmp
push
add
fldcw
push
push
out
cs
sarl
jge
push
shlb
decl
pop
inc
dec
push
push
dec
inc
dec
push
inc
arpl
dec
mov
inc
lods
stos
int
cmpsl
push
push
imul
jbe
cld
cmpsb
arpl
inc
push
push
and
cs
idivb
and
je
aas
orl
loope
mov
in
adc
push
lods
adc
mov
lock
sbb
cmp
popa
scas
push
sub
and
push
into
mov
mov
inc
inc
pop
inc
jbe
in
mov
xor
xor
add
sbb
xor
push
pop
cld
inc
sub
aas
es
sbb
adc
aas
shl
jbe
push
xor
cmp
imul
cmp
cmp
add
addr16
ja
lahf
or
and
data16
cmp
xor
mov
cmp
lcall
dec
dec
dec
xchg
dec
mov
adc
inc
push
xchg
xor
popf
mov
stc
ja
jne
cmp
add
dec
mov
clc
mov
fadd
lods
shll
jl
dec
shll
xor
shll
or
mov
xor
xor
xor
cltd
xchg
imul
ret
push
mov
jb
adc
jae
rcrb
lods
int
push
popw
test
fcomps
bound
insl
dec
imul
rclb
pop
je
aad
or
mov
dec
push
inc
dec
inc
push
push
inc
insl
jae
jbe
shl
dec
or
ja
popa
or
xor
xor
pop
fstpl
arpl
pop
je
imul
in
add
xlat
jp
mov
pop
ret
outsl
ja
fnclex
cmpsb
insl
pop
sbb
sbb
mulb
jae
lea
adc
in
daa
mov
shl
rcrb
stos
aaa
jmp
vmovaps
inc
bound
cmpb
and
dec
inc
inc
dec
mov
xchg
push
or
mov
aas
pop
in
push
inc
aas
pop
mov
lods
mov
add
xor
pop
inc
insl
lcall
nop
xchg
fcom
add
sub
or
inc
inc
and
xchg
or
sub
inc
xchg
and
cmp
aas
daa
xchg
and
popa
mov
das
inc
enter
and
test
and
and
adc
adc
test
sub
sub
pop
enter
cmp
inc
daa
pusha
inc
enter
and
test
imul
xor
inc
and
test
and
adc
sub
xor
inc
enter
enter
aas
daa
test
inc
pusha
jle
rclb
xor
cs
adc
mov
iret
das
and
and
and
jae,pn
and
das
xchg
fldt
insb
and
and
add
inc
and
push
inc
das
and
adc
xchg
insl
mov
and
and
or
loope
dec
imulb
dec
dec
inc
dec
pop
imul
movsl
add
ds
sub
lods
andl
cmp
lcall
dec
fisubrs
push
inc
push
push
jns
ficompl
mov
pop
add
loope
pop
imul
or
cs
dec
dec
aas
mov
push
or
imul
sbb
lcall
sbb
dec
push
das
push
rorb
insl
inc
inc
das
pusha
inc
xchg
nop
rorb
call
jo
arpl
jne
inc
fimuls
sub
sub
adc
push
or
add
push
xor
pop
cmp
add
rcrl
lahf
ret
inc
xchg
mov
pop
jns
sub
xlat
jb
inc
outsl
cmp
shll
push
inc
pop
push
inc
lds
not
cmpb
jp
add
jle
outsb
jae
and
insl
outsl
sbb
lock
dec
xor
js
cmp
je
ljmp
or
or
fs
cmp
add
mov
lock
pop
adc
lcall
pop
shll
pop
push
jne
and
pop
sbb
fistl
sub
dec
dec
inc
cs
push
push
inc
dec
ja
aaa
or
cmp
pop
dec
jae
jbe
sahf
push
xchg
push
cmpsb
pop
ss
mov
xor
rcrl
push
dec
inc
shll
and
sbb
cmp
push
cmpsl
xor
jbe
sbb
push
clc
popf
in
in
xor
shl
aam
dec
shll
movsb
cwtl
xor
shll
test
dec
mov
popf
das
push
cs
inc
ss
shll
xor
sub
popf
fwait
cmpsb
mov
cmpsl
sbb
adc
or
cld
pushf
xor
in
loopne
int3
cmpsb
imul
cmpsb
imul
cmpsb
imul
lcall
lcall
and
shll
cld
fwait
in
mov
lcall
aam
int3
imul
cmpsb
imul
imul
shll
sub
adc
int
leave
mov
push
jns
push
fcom
lcall
rolb
dec
shll
cwtl
nop
ss
shll
cmpb
lcall
lcall
adc
add
mov
adc
dec
or
mov
bound
sahf
outsl
add
xor
jbe
add
push
cmp
mov
cmp
sub
push
ret
adcb
out
or
push
jle
jnp
outsl
js
imul
outsl
bound
xor
xor
push
add
push
sbb
fidivl
getsec
pop
bound
gs
pop
push
mov
mov
sarl
pop
pop
mov
push
out
mov
js
insb
jne
aad
sbb
imul
xor
aaa
mov
divb
ret
sub
shlb
mov
shll
sub
jl
imul
imul
inc
jae
rorl
or
sbb
jo
or
sbbl
jbe,pn
into
lods
pop
cmpsl
data16
ds
outsl
pop
das
outsl
bound
jno
pop
js
add
jno
out
in
cmp
das
adc
punpcklbw
ss
aam
imul
cmp
xchg
mov
insl
push
shlb
sub
adc
call
push
push
movsb
mov
xchg
add
inc
outsl
xlat
js
addl
cs
pop
jb
xorb
outsb
jne
loopne
outsb
sub
iret
iret
insb
or
movsl
out
or
mov
or
insl
jle
inc
bound
jb
pop
fs
mov
testl
push
sbb
xor
xor
pusha
imul
inc
test
das
jl
cltd
test
push
push
fimuls
ja
jbe
cmp
xchg
dec
xlat
push
movsb
dec
pop
pop
imul
pushf
mov
pop
into
xor
repz
daa
lock
loopne
xlat
dec
fldl
sahf
lds
add
mov
mov
add
cs
inc
push
inc
movsb
xor
pop
jecxz
push
push
dec
pop
mov
aaa
lahf
add
aas
pop
push
xor
push
adc
jb
outsb
das
psrad
scas
pushf
mov
mov
mov
jbe
xor
add
xor
js
and
xor
inc
sub
mov
inc
sbb
xchg
xor
adc
jmp
icebp
punpckhdq
std
xchg
push
das
xor
xor
inc
inc
push
push
inc
scas
push
stos
dec
ret
lea
push
cmc
outsl
push
dec
rclb
int
mov
rcrl
inc
mov
insb
shll
mov
rol
adc
adc
jbe
push
push
mov
push
and
inc
dec
mov
into
sub
test
test
mov
push
fs
xchg
sbb
aaa
pop
les
mov
aaa
push
xchg
mov
xor
je
in
lret
adc
sbb
es
dec
push
push
and
push
adc
insb
mov
push
mov
pop
aas
movl
pop
inc
popa
xchg
aas
mov
push
inc
andb
aam
and
xchg
add
test
push
imul
mov
push
mov
or
loopne
shlb
pop
scas
sub
jle
mov
cmp
insl
xor
mov
pop
sahf
js
test
pop
and
jb
daa
or
call
popf
test
xchg
dec
add
popa
ret
sbb
outsb
jo
ret
pusha
mov
mov
and
jg
sti
std
sub
imul
sub
js
inc
inc
push
les
xchg
adc
push
loope
in
lods
imul
fadd
fisubl
repnz
pop
inc
sti
sbb
cmp
mov
adc
cmpsb
dec
and
bound
fmuls
cwtl
pop
dec
jg
pop
jbe
popa
andb
pop
insb
lret
lods
mull
xor
and
cltd
dec
push
outsb
inc
mov
adc
scas
lds
xor
mov
outsl
ja
xchg
imul
adc
mov
cmp
adc
xchg
pop
cmp
push
or
pop
mov
mov
sahf
gs
outsb
dec
shlb
push
pop
jg
and
popa
arpl
mov
das
push
xchg
ja
fwait
inc
popa
cmp
mov
mov
inc
sub
cmc
lcall
fwait
mov
ret
pusha
test
inc
or
scas
insl
sub
arpl
or
rorl
shrb
movsb
arpl
popa
xchg
ret
filds
lods
int
js
lea
insl
jmp
sbb
mov
xchg
imul
stos
addl
push
imul
roll
mov
dec
sbb
add
and
adc
xor
scas
insb
je
add
sbb
pop
push
inc
cwtl
push
lods
adc
pshufw
xor
mov
in
and
rcrb
stos
lcall
jb
inc
jg
pop
test
mov
test
and
xor
pop
inc
fisubrl
pop
sub
cmpsl
jne
test
and
adc
insb
nop
sub
inc
nop
and
fildll
cwtl
fisubl
mov
mov
pop
outsl
cs
pop
sti
aad
lods
push
ret
int3
adc
sub
aad
inc
add
outsl
fisttpl
clts
std
jae
insb
mov
faddl
push
or
and
fiaddl
adc
and
mov
ss
aas
dec
outsl
aam
mov
xchg
inc
push
cmp
rcll
mov
add
or
push
bound
fs
inc
inc
mov
or
icebp
imul
jp
add
mov
and
rcr
daa
icebp
pop
jl
js
lock
xchg
inc
dec
dec
mov
and
aas
mov
cli
xor
xor
inc
dec
inc
and
cmpsb
mov
pop
sbb
push
inc
and
sub
sbb
leave
loope
pusha
mov
mov
adc
mov
nop
addb
dec
or
inc
arpl
mov
adc
and
shrl
outsl
call
jg
dec
push
arpl
xchg
ja
cmp
ja
imul
test
push
inc
das
sub
fsubl
sbb
xor
push
mov
es
add
in
inc
pop
and
popa
addr16
cmp
xchg
aas
add
pop
mov
inc
testb
cmp
xor
mov
cs
inc
xchg
fs
xchg
mov
arpl
hlt
ja
xlat
push
pop
insb
pop
jne
sbb
adc
pop
aas
ja
dec
mov
rcll
jae
jbe
mov
pusha
add
inc
inc
mov
pop
aas
and
ss
push
cltd
sub
pop
aaa
fistl
inc
add
push
and
shlb
jmp
push
and
arpl
push
pop
mov
or
and
stos
pusha
in
push
xchg
arpl
cs
pop
cmp
push
push
cmc
jg
je
mov
xchg
int3
mov
dec
scas
popa
pop
dec
int
fcmovbe
dec
xor
jae
cs
inc
push
xor
xchg
jns
shrb
push
xchg
inc
push
pop
inc
pop
add
and
shl
inc
inc
dec
dec
dec
dec
loope
pusha
mov
daa
lods
lea
aaa
mov
imul
aaa
push
sub
sub
daa
inc
es
daa
push
adc
ljmp
addr16
daa
cltd
adc
pop
daa
popa
pop
fldl
cmp
adc
aaa
dec
and
and
cmc
jp
mov
fldl
or
mov
xor
aaa
xchg
xor
pop
imul
outsl
nop
cmpb
pusha
and
push
test
fildl
or
and
xchg
fwait
pop
xchg
aaa
or
add
addb
and
push
pop
dec
pop
xchg
femms
ja
xorb
add
popa
or
adc
add
addr16
jo
and
inc
dec
inc
insb
aad
mov
adc
stos
push
xorb
mov
arpl
mov
xor
mov
jecxz
das
inc
pop
loopne
pusha
ret
aaa
sbb
aaa
mov
jg
mov
dec
adc
pusha
aad
inc
addr16
ja
mov
dec
addl
mov
pop
inc
js
add
in
mov
rolb
jg
inc
push
addr16
dec
add
mov
mul
popa
popa
fcmovbe
sahf
lea
fs
bound
lcall
and
sbb
add
popl
inc
adc
jnp
sbb
mov
fnstsw
addr16
and
sarl
push
fmuls
mov
jne
mov
dec
push
xchg
and
jle
imull
adc
and
jo
lds
das
cwtl
pop
arpl
popa
lret
adc
mov
push
into
inc
imul
outsb
sbb
push
inc
adc
aaa
addr16
push
loop
ret
nop
fwait
pop
pusha
push
nop
jns
adc
inc
inc
inc
push
cwtl
mov
cld
jl
mov
cld
cmpsl
sub
and
outsb
fldl
sbb
in
xorb
pop
inc
adc
pop
sub
ret
loope
ja
cmpsl
scas
stos
es
mov
add
mov
lret
dec
sbb
movsb
inc
jns
xchg
jb
jmp
addr16
shrb
imul
mov
dec
xchg
inc
stc
in
test
push
pushw
repnz
pushf
sub
daa
bound
inc
jecxz
jbe
imul
call
adc
push
jne
or
dec
jecxz
pop
adc
inc
popa
dec
xchg
aaa
push
add
push
loopne
pop
and
scas
jo
jb
push
or
jo
outsl
adc
or
data16
pop
in
or
add
loopne
shrb
push
loope
je
push
xlat
or
inc
and
rdtsc
test
jo
jg
lods
and
arpl
lret
push
dec
pop
jo
bswap
fidivrl
add
test
mov
orb
or
add
imul
inc
lcall
cmp
push
push
cmp
cltd
adcl
fs
or
adc
and
adcl
jo
push
mov
into
push
push
inc
jno
xor
insl
push
adc
push
jb
popa
ja
and
insl
sub
mov
into
xchg
lods
add
sub
jecxz
jbe
sbb
stos
popa
jmp
xor
jae
punpcklwd
or
rcr
mov
push
das
cs
inc
daa
dec
jecxz
inc
mov
imul
pop
add
ficompl
aaa
jno
push
movsl
pop
data16
arpl
dec
or
mov
or
add
xchg
add
mov
sbb
jmp
outsl
addr16
ss
jae
push
xchg
aas
mov
stos
mov
aaa
and
mov
push
imul
jo
adc
mov
sbb
and
dec
insl
or
fiaddl
jbe
ret
and
ljmp
push
adc
push
aam
jp
aas
gs
sub
dec
into
ret
dec
ja
icebp
push
and
ret
out
jno
push
mov
push
fldenv
arpl
add
nop
scas
popa
adc
ds
jb
push
push
jbe
pusha
mov
push
pop
inc
adc
mov
rorb
imul
jl
jo
aam
jne
outsb
push
dec
nop
add
jo
imulb
push
jle
orl
aaa
jno
jne
push
xchg
cmp
ja
je
fisttpll
push
or
inc
test
ret
push
insl
stos
test
jb
setno
mov
inc
push
ja
sbb
push
movsl
sbb
pop
jo
mov
arpl
aam
sbb
les
inc
in
or
inc
ds
push
mov
add
dec
push
ja
outsl
outsl
push
mov
pop
dec
sbbb
outsl
push
mov
mov
xchg
xorl
and
adc
push
js
outsl
popa
dec
insl
xchg
or
jb
clc
mov
insl
mov
jbe
mov
or
xchg
sbb
leave
addr16
fldenv
mov
loop
cmp
xor
cmpsb
xor
dec
cltd
pop
add
bound
in
jge
add
popa
mov
movsl
fcmove
mov
add
arpl
sub
dec
jg
ss
add
sub
or
adc
inc
push
pop
das
xchg
push
xor
aaa
shlb
add
mov
lahf
push
cwtl
push
and
inc
fisubrs
data16
imul
cmp
outsl
daa
mov
push
xchg
fistpl
mov
arpl
push
clc
cmc
cmp
into
cmp
ss
jns
fisttpll
adc
aaa
dec
pop
fcmovnu
rcr
cmp
and
out
inc
or
pop
pop
clc
xor
and
or
cmpsb
imul
testl
arpl
sbb
xor
pop
xchg
movsl
lret
pop
adc
fsubs
sbb
pop
idivl
push
sub
rcll
mov
mov
xchg
push
std
and
aaa
popa
outsb
out
je
jno
and
pop
and
fs
or
xor
push
sub
cwtl
sub
sbb
or
dec
cmp
pop
rorb
jbe
mov
mov
mov
andl
faddl
out
add
andl
movsl
push
bound
adc
add
enter
iret
push
push
mov
mov
xchg
adc
or
adc
adc
add
push
xor
xor
add
clc
lea
xor
add
ss
out
scas
sub
faddl
mov
mov
add
addr16
dec
xor
loop
sub
xor
pop
sub
repz
xor
or
mov
test
in
das
test
push
rcrb
outsl
jmp
push
into
sbb
mov
adc
xor
sti
or
leave
sbb
xlat
mov
rcrl
les
push
cmp
mov
add
lahf
pop
cmpsb
push
push
push
add
or
out
das
or
insl
sbb
xor
lods
mov
mov
ret
mov
cmpsl
mov
scas
pop
dec
cmp
mov
sbb
lahf
in
popf
push
lret
push
push
jns
addb
lahf
or
pop
rorl
push
insb
adc
inc
rcrl
or
adc
dec
xchg
sbb
les
push
add
bound
outsl
push
push
mov
xchg
rorb
popa
in
sahf
mov
sbb
fcompl
adc
lret
xchg
sub
bound
imul
xchg
outsb
adc
push
add
add
adc
push
inc
cmpsb
xor
xlat
mov
cwtl
setnp
push
daa
add
sbb
dec
fdivl
daa
imul
imul
jl
jl
popa
andb
xor
stc
sbb
dec
mov
cs
cmp
mov
dec
push
xor
bound
pop
jg
adc
test
pop
cmp
or
sub
dec
shlb
enter
nop
lret
inc
mov
push
jl
inc
cmp
repz
cmp
dec
dec
dec
movsl
sbb
adc
loopne
jecxz
mov
pop
mov
push
das
lea
pop
push
push
pop
aas
insl
mov
cmp
pusha
xchg
push
mov
cmp
jae
push
mov
inc
mov
popa
std
pop
xor
lods
inc
hlt
imulb
adc
lcall
xor
stc
addb
or
outsl
inc
mov
outsb
jns
jl
or
addr16
adc
dec
cmp
popl
adc
dec
cmp
es
pop
jno
sub
sarl
lock
and
dec
adc
and
xchg
push
lds
adc
add
lahf
or
pop
fidivl
ja
cmp
ret
gs
mov
add
push
xor
dec
cmpsb
and
sbb
cmpsl
jae
test
add
and
mov
pop
mov
jno
adc
mov
sbb
es
in
test
adc
mov
insb
sti
jns
adc
or
jno
or
popa
pop
jno
xor
adc
insb
test
stc
xchg
cs
lcall
rorl
fdivr
or
inc
loop
das
mov
or
lock
xchg
push
add
js
mov
sbb
or
xor
inc
jl
inc
cmp
rolb
push
ljmp
add
mov
mov
add
dec
clc
mov
and
adc
jne
mov
adc
mov
outsb
ret
mov
je
xlat
add
add
push
call
and
adc
push
adc
mov
ret
call
or
pop
xor
dec
test
pop
pop
pop
push
sub
insl
mov
jmp
rep
mov
stos
push
push
push
push
daa
dec
js
sbb
push
xchg
shlb
les
ret
lahf
fistpl
pop
mov
mov
add
stos
cmp
pop
mov
adc
push
arpl
lea
jp
xchg
std
mov
mov
push
cmp
xchg
test
call
into
mov
push
xor
insl
push
push
push
push
push
or
push
cmp
ljmp
xor
xor
xor
jmp
xor
cmp
sbb
insb
push
sub
lods
push
sub
repz
pop
daa
pop
push
ffree
pop
push
pop
inc
jo
insb
dec
ss
dec
dec
jp
or
popa
insl
mov
cs
sub
add
inc
dec
jae
int
mov
sub
mov
test
jg
out
cmp
cmp
add
inc
ja
sbb
pusha
scas
mov
dec
es
mov
js
xor
daa
imul
rcll
outsl
and
lea
aam
inc
ret
sub
fdivrl
aas
pop
add
add
push
adc
test
push
mov
addr16
cmp
icebp
inc
add
add
sub
pop
flds
xor
fnstcw
iret
stos
insl
adc
dec
inc
popa
push
sbb
addl
pop
outsb
sub
mov
jno
sbb
and
xchg
les
push
mov
add
int
inc
mov
add
mov
cs
sbb
shrl
lods
arpl
cmpsl
arpl
push
or
mov
add
inc
sbb
sbb
pusha
pop
clc
popa
jmp
sub
sub
mov
xor
sti
jmp
ret
popa
std
or
aas
js
insb
cmpl
mull
aas
dec
sbb
xchg
cmc
lcall
add
shll
inc
inc
push
cmp
inc
push
in
and
adc
psraw
fldenv
xor
jo
mov
sub
jo
mov
xchg
out
das
popa
adc
add
aaa
fidivs
push
mov
and
adc
inc
sbb
pop
int
incb
push
inc
dec
and
filds
fistpll
les
inc
out
les
adc
push
stc
cmp
sub
fadds
xchg
test
and
add
adc
sbbl
adc
add
push
aad
jle
stc
mov
add
add
movsb
add
fildl
pusha
cmpb
cmpsb
fisttps
mov
stc
sbbl
mov
cmp
cmovo
pop
inc
mov
iret
mov
inc
sbb
in
call
adc
std
xchg
cld
mov
mov
xor
fcomp
loopne
mov
jbe
jae
jle
xabort
loope
pop
ss
jnp
ds
push
add
punpckhwd
add
lcall
or
mov
or
or
jbe
imul
daa
adc
mov
pop
nop
adc
and
enter
addr16
ret
xchg
push
mov
pop
imull
push
and
push
imul
ss
orl
xor
test
xchg
sub
mov
insb
or
mov
into
aas
xlat
out
mov
pop
add
inc
push
imul
push
fs
or
fs
xchg
xchg
xchg
push
xchg
add
or
push
adc
rcrl
and
test
daa
call
xlat
mov
mov
insb
fwait
cmpsb
imul
dec
shrl
rcrb
sbb
xor
shll
sub
lock
cmpsb
imul
imul
in
sub
mov
test
add
cmp
add
add
xchg
sbb
jnp
lahf
inc
pop
dec
daa
mov
xchg
sbb
or
fsubs
jg
mov
and
repnz
add
or
and
push
ret
mov
adc
dec
mov
mov
sbb
into
lcall
ret
inc
and
sahf
mov
sub
inc
rcrb
and
sbb
addl
xlat
std
call
sub
mov
popl
cmp
cmpsb
iret
decl
js
jns
outsl
loopne
jmp
xchg
test
mov
cmp
inc
mov
lcall
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
jmp
jmp
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
dec
pop
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
and
push
movsl
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
subb
cwtl
sar
fwait
xchg
and
and
std
outsl
add
aas
jno
or
mov
pop
fs
dec
lea
aas
inc
shrl
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
pushl
xchg
aas
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
decl
mov
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
jmp
loop
mov
jp
popa
push
pop
sarl
jl
mov
das
lea
mov
out
adc
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
incl
int3
and
call
cmp
jp
and
cmp
mov
cmp
std
call
cmp
mov
sbb
add
movb
aaa
fldt
cmp
jno
shlb
pushl
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
dec
jmp
sub
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
xor
std
jmp
sbb
gs
std
orl
pop
ficomps
frstor
test
or
subb
stc
adc
add
and
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
stos
test
add
js
cmp
lock
add
loop
rcll
insb
gs
mov
pop
pop
fwait
and
inc
inc
sub
or
pop
mov
cwtl
sahf
aas
dec
or
inc
and
dec
dec
dec
in
inc
nop
sbb
inc
sub
push
and
mov
pop
ficompl
dec
iret
or
xchg
push
inc
outsb
fs
jo
outsb
dec
add
add
loopne
dec
outsl
and
mov
push
pop
add
aaa
adcb
sbb
sub
outsl
imul
push
push
push
sbb
and
test
inc
fdivs
inc
jns
fadds
imul
mov
sub
push
imul
pop
add
shlb
in
addb
mov
lock
xchg
inc
and
mov
addb
push
xor
ret
jbe
pop
mov
pop
adc
je
je
mov
mov
pop
xor
ret
fstl
orl
and
mov
inc
sub
fs
adc
mov
and
dec
mov
daa
push
jo
imul
sbb
xchg
xor
addr16
mov
inc
sub
and
lock
addb
add
push
mov
mov
sti
jmp
inc
mov
jl
jo
xrelease
push
mov
and
arpl
imul
mov
or
adc
push
addb
adc
and
and
adc
inc
adc
ret
lods
loopne
sbb
imul
adc
sub
mov
test
loop
xchg
mov
push
mov
les
add
fwait
dec
adc
int
ja
sub
fistpl
xchg
mov
and
outsb
outsl
jno
push
int3
fcmove
inc
jbe
inc
or
stos
jge
push
pop
rol
mov
jo
adc
adc
mov
sub
xor
mov
aad
cmp
mov
inc
pop
cmovg
adc
icebp
sbb
pop
xor
inc
xchg
inc
jo
mov
sbb
push
cmp
inc
pop
sub
cmp
push
cs
lods
das
sub
pop
push
jne
fisubl
lods
dec
fs
int
jo
je
ja
dec
les
mov
test
inc
pop
stos
mov
xchg
and
ja
stos
mov
push
inc
pop
dec
add
add
aas
in
lahf
add
add
add
add
adc
add
xchg
or
mov
add
insl
popa
insl
pop
inc
pop
adc
pcmpeqd
sbb
push
push
add
cld
push
adc
add
sub
stc
push
test
mov
scas
push
loopne
sub
popf
rclb
pusha
jb,pn
mov
mov
mov
add
dec
dec
lcall
dec
cli
loope
ret
pusha
shrb
mov
aas
jl
or
and
add
inc
incl
add
add
add
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
popa
jmp
