mov
repnz
or
jne
push
insb
pop
pop
and
std
mov
sub
add
bt
dec
dec
jge
cmp
mov
jmp
mov
jge
mov
je
mov
pop
jecxz
jnp
int3
pushf
int3
fsts
push
pop
sub
jp
mov
add
pop
leave
cmp
rcrl
daa
lcall
rcrb
dec
popf
jo
xor
icebp
hlt
push
rorl
outsb
rolb
mov
outsb
les
mov
jb
fldt
mov
adc
jl
dec
shlb
push
dec
rcrl
push
rclb
push
push
stos
loope
mov
push
adc
cmpsl
mov
inc
icebp
inc
adc
pop
add
xor
xchg
add
mov
inc
pop
rcrb
mov
and
out
jle
out
ret
test
dec
fs
les
popf
loop
or
mov
cmp
std
sbb
repnz
in
xor
js
ljmp
notb
mov
je
fs
es
sub
inc
xor
pop
mov
xor
das
sub
repnz
das
xchg
icebp
jge
mov
push
cmp
dec
enter
mov
fsubl
add
fisttpll
cmpsl
stc
outsb
adc
pop
xchg
push
insb
mov
add
daa
and
addl
pop
mov
out
outsl
adc
nop
cmp
addr16
jge
jg
cmc
popf
loopne
popa
xchg
jnp
cmpsl
cmp
insb
mov
jb
imul
int3
jecxz
fstpt
mov
loope
jecxz
dec
sti
stc
pop
lret
ss
outsb
in
xor
ss
lret
push
es
and
in
dec
pop
leave
dec
ljmp
xchg
push
pop
das
sahf
imul
in
hlt
bound
test
jnp
popa
lods
and
loope
gs
rcll
in
sub
ror
nop
or
xchg
add
fwait
push
data16
outsb
and
int3
jnp
and
sub
das
pop
mov
jbe
xchg
in
dec
sbb
jo
insl
in
dec
addr16
adc
je
popf
add
dec
adc
icebp
rorb
mov
push
lret
adc
fcoms
or
xchg
shrl
adc
jp
mov
push
test
xchg
je
add
cltd
das
fbstp
or
jnp
mov
pop
pop
lea
dec
dec
subb
push
mov
sbb
jno
cmpsl
fiaddl
mov
pop
or
fisubrs
mov
stos
dec
test
add
jmp
mov
neg
xor
mov
inc
daa
fwait
lea
xor
hlt
scas
add
out
test
xchg
add
sub
and
sbb
sub
mov
adc
ret
loop
inc
fists
lock
jo
je
fwait
mov
les
pop
fisubrs
cmpsb
xchg
xchg
inc
pop
cmp
fwait
push
or
decl
mov
mov
iret
adc
xchg
lea
mov
hlt
aas
jge
xor
adc
dec
or
in
rclb
in
icebp
xchg
hlt
nop
add
lock
lcall
les
pop
jmp
out
mov
movsl
shlb
and
adc
inc
xchg
loop
insb
jmp
lea
adc
xor
sub
dec
inc
xlat
mov
jnp
xor
lcall
es
pop
add
cmp
dec
pusha
loope
xchg
in
mov
out
mov
fsubr
iret
outsl
aam
int
insb
mov
scas
jp
notb
les
loope
clc
arpl
adc
loope
addr16
pop
jge
test
iret
jecxz
and
push
scas
sbb
leave
mov
in
in
mov
adc
in
cmp
jnp
xor
cmpsl
fsub
sub
jle
or
push
aad
inc
and
mov
pop
xor
scas
and
xor
loop
cmp
xchg
lahf
aaa
push
pusha
xchg
mov
fwait
divl
push
push
into
mov
flds
jl
loope
and
pop
or
xchg
fs
jge
inc
clc
cmp
aam
lods
jae
outsb
lock
andb
inc
mov
mov
cmp
inc
fidivrl
add
hlt
push
setns
inc
mov
mov
fdivp
icebp
adc
mov
jb
push
or
xchg
inc
ret
lods
imul
cli
inc
inc
push
add
mov
pusha
pop
add
or
push
test
lret
nop
mov
and
sub
std
adc
fisubrs
pusha
lea
fldt
add
sbb
and
push
stos
shll
adc
add
daa
in
arpl
adc
and
pop
push
xchg
fisttpl
rclb
test
mov
xchg
xor
add
iret
outsb
add
aam
sahf
iret
jg
or
mov
scas
lret
lret
pop
imul
xor
imul
xor
in
repz
das
inc
xchg
ljmp
or
sarb
jle
pop
imul
pop
ret
jecxz
pop
sbb
fmul
je
mov
out
std
insb
ret
mov
mov
and
fsts
bound
out
ret
or
or
insb
ljmp
into
pop
fidivrl
imul
fld
out
fs
sub
lea
mov
mov
push
xchg
lahf
outsl
sti
repz
test
mov
jbe
sbb
jmp
sub
stos
cmp
jle
js
sti
aas
and
pop
sti
xchg
push
xor
jmp
mov
cli
inc
adc
lds
mov
movsl
shrl
cmpsb
and
jle
inc
inc
je
mov
sub
mov
push
iret
inc
push
aam
pop
xchg
mov
jo
fcomps
xorl
ret
mov
popf
cmp
arpl
cmc
ret
loop
push
lahf
and
sbb
pusha
out
mov
xchg
push
test
idivl
cs
fldenv
stos
inc
les
outsl
sbb
and
xchg
ja
nop
push
test
jae
mov
sub
jge
xor
push
in
push
mov
pop
sarl
dec
ja
cmp
ds
movsb
push
mov
or
jmp
test
xchg
add
sbb
arpl
push
sbb
sbb
cmp
gs
push
and
mov
lret
xor
outsb
fwait
mov
pop
int
cmp
sub
js
jno
jno
sbb
jge
push
dec
add
sub
int
jl
sub
and
clc
lret
sbb
call
pop
dec
je
pop
sbb
into
inc
push
push
adc
inc
jbe
mov
das
jp
or
sbb
pop
inc
xchg
scas
rcrl
lods
or
lret
lea
jbe
add
out
mov
cmp
shll
inc
xchg
adc
xor
int
push
dec
testb
pop
cmp
in
cmp
in
and
add
sbb
mov
adc
xchg
rclb
in
mov
inc
jnp
dec
xchg
adc
aad
mov
or
jbe
cmp
inc
dec
inc
sbb
es
sahf
mov
popa
sti
andl
mov
mov
jb
icebp
ljmp
push
jb
pop
xchg
adc
loope
stos
cwtl
mov
in
xadd
lret
push
addr16
push
xor
cmpsl
addl
add
jl
push
ss
adc
mov
cmp
xchg
jae
cmp
popf
iret
sbb
inc
add
ret
outsb
pop
gs
jg
sbb
mov
xchg
imul
popf
in
test
adc
cld
sub
jg
jmp
mov
je
incl
inc
into
xchg
and
or
xlat
pop
adc
mov
add
sti
jnp
jb
clc
mov
out
mov
iret
test
push
pop
mov
rcl
sub
mov
test
pop
shl
hlt
scas
idivl
in
inc
scas
or
sbb
pop
and
sbb
xchg
mov
sbb
out
test
aaa
or
mov
push
out
jge
lods
stc
aad
loope
loopne
and
data16
adcb
orb
dec
out
adc
loop
and
xchg
mov
leave
xchg
xor
imull
lock
inc
add
mov
push
pop
xor
lods
xlat
cs
xchg
jnp
cmp
mov
aaa
sbb
mov
add
in
add
mov
ret
push
push
mov
pop
push
inc
sub
mov
adc
ja
jge
mov
cmp
push
jge
push
movsl
push
femms
push
xor
insl
mov
andb
bsf
nop
les
cmp
sbb
shll
in
and
cmpsb
cmp
push
push
imul
and
test
iret
push
and
stos
inc
xchg
pop
sub
negl
nop
and
mov
lds
or
mov
cmp
pop
xchg
dec
fiadds
cwtl
fs
add
xor
adc
inc
pop
mov
insl
push
arpl
xchg
insl
into
xor
std
loopne
sub
xlat
inc
inc
faddp
and
mov
into
icebp
je
das
sbbl
stc
aam
jnp
and
jns
push
icebp
faddl
test
cs
fidivs
fists
push
data16
rol
out
mov
lcall
call
push
xchg
in
xor
jp
pop
ja
movsl
fbstp
cmp
push
fistl
repnz
lea
push
xchg
push
or
popa
mov
stos
xor
push
mov
cmp
leave
sub
mov
sbb
test
fidivl
xchg
and
adc
icebp
std
xor
or
rclb
leave
cli
movsb
cmp
pop
and
inc
fisubrs
pop
xor
push
int
dec
sbb
adc
pop
sbb
imul
pop
and
xlat
lcall
loop
insl
fs
push
jmp
sbb
push
xor
inc
cltd
jnp
inc
jne
ds
adc
add
cmp
cmp
fstpl
imul
or
sbb
adc
flds
pop
push
inc
popaw
mov
xor
sahf
inc
sub
cmp
and
rcll
into
xor
lcall
jae
in
lea
mov
test
adc
cld
dec
push
or
mov
inc
mov
cltd
push
or
sub
cmp
jnp
inc
orb
add
mov
rcrb
mov
mov
sub
dec
jns
arpl
aas
faddl
outsb
mov
scas
jo
jo
add
xchg
push
aam
mov
clc
push
cmc
andb
enter
lret
ds
in
movsl
ss
ror
aad
or
cmp
cmpsb
jne
popa
je
inc
or
push
mov
and
gs
les
lods
push
scas
push
test
sbb
mov
leave
adc
jmp
js
xchg
xor
xor
push
add
fildll
or
mov
icebp
pop
and
add
jmp
lea
test
and
cmp
mov
cmp
push
add
fldt
mov
mov
xchg
pop
sar
ficoml
inc
mov
jns
out
add
rcll
pop
fsubrs
sbb
inc
scas
jno
mov
stos
push
int
xor
pushf
adc
outsl
push
ss
xor
adc
pushf
sub
pop
inc
sbb
in
pop
mov
shlb
popf
adc
adc
xchg
jp
add
movsb
out
inc
mov
sahf
ds
inc
test
je
cmp
mov
inc
xchg
xor
mov
mov
loope
jmp
arpl
es
pop
pop
out
push
pushf
repnz
mov
inc
or
jmp
iret
xor
or
mov
mov
adc
xorb
or
shrl
push
je
mov
and
add
in
ret
sub
aad
mov
adc
mov
test
arpl
lcall
xchg
mov
fldl
dec
mov
inc
sarl
and
test
paddsw
adc
and
out
outsb
jle
pop
sub
lock
scas
adcb
and
adc
adc
inc
mov
mov
popa
aam
pop
fs
jg
fdiv
mov
mov
or
movl
mov
xchg
rol
pop
mov
sbb
orl
cmc
jg
sub
push
pop
lea
fistps
dec
in
xor
sub
sti
jmp
arpl
mov
pushf
test
std
mov
jne
into
incl
loope
mov
movsb
mov
in
pop
fimull
jb
insb
jl
sub
jmp
pop
and
in
fucom
adc
mov
daa
ficompl
lret
pop
nop
or
clc
add
cltd
and
mov
stos
repnz
jae
loope
rcrl
dec
sub
jb
cmp
pop
adc
rcrl
mov
loope
sub
pop
rcrl
add
hlt
sbbb
adc
sub
push
repnz
mov
or
mov
cmp
push
test
lods
xor
mov
xlat
cmp
fwait
out
das
cmp
mov
jne
sbb
repnz
cmp
out
test
ret
je
sub
adc
xor
cwtl
jne
negb
rcrb
in
xchg
push
pop
mov
push
mov
movsl
inc
mov
dec
pop
jle
imul
xchg
je
dec
adc
mov
pop
dec
stos
scas
sarl
xor
mov
cltd
and
dec
stos
into
xchg
add
and
jb
or
test
cli
sti
xor
test
inc
sub
pop
shlb
mov
fiadds
and
and
cmpsl
rolb
repnz
dec
lret
icebp
lcall
sub
call
shlb
repz
notl
and
pop
pop
lods
int3
push
lea
loope
sbb
repz
shl
jmp
cmp
dec
sub
cld
mov
pop
jge
fcoml
gs
inc
sub
jp
out
scas
iret
add
xor
pushf
xlat
ljmp
sbb
xchg
lea
je
cmp
pop
cmpsb
cmp
clc
add
or
fdiv
pop
sbb
sub
cmp
fwait
or
int3
mov
mov
or
sub
jmp
mov
inc
adc
imul
xchg
or
push
sbb
xor
int3
lcall
test
jno
push
sub
adc
roll
mov
adcl
addb
out
cmp
les
pop
lret
int
mov
pop
push
cmp
inc
imul
or
call
outsl
push
sete
cld
mov
jno
mov
jl
sbb
xchg
rorb
and
cmpl
xchg
sub
jge
sub
dec
push
pop
xchg
ret
pop
xchg
cmpsb
iret
out
sbb
cmp
ret
xchg
xchg
add
stos
sub
push
push
mov
inc
popf
inc
in
mov
or
ror
cmpsb
enter
xlat
scas
inc
sbb
and
pushf
sub
jno
insb
rcrl
pop
mov
and
lods
divl
or
lock
pop
data16
sub
das
movsl
mov
inc
stos
pop
lds
data16
dec
lods
pushf
mov
mov
jl,pn
aaa
inc
dec
ja
stos
mov
adc
cmp
push
sbb
cmpsl
and
xorl
jmp
xchg
lods
sahf
or
fs
daa
leave
sti
inc
mov
clc
xchg
sub
xor
or
fs
test
jno
insb
in
in
rclb
adc
sbb
pop
lret
xor
add
loope
xor
nop
mov
inc
or
add
mov
jl
jo
mov
stos
mov
popa
lods
movsb
pushaw
or
lcall
cwtl
sbb
mov
jns
je
jne
addb
aad
scas
push
dec
out
adc
pusha
add
popa
ret
mov
sub
daa
jo
cmc
repz
lret
jg
sub
cmp
jbe
mov
push
push
xchg
mov
fisubl
popf
mov
call
inc
inc
pop
add
ss
mov
or
rolb
lea
cli
jge
lods
lods
cld
fcompl
mov
movsl
dec
cmp
mulb
cmp
and
pop
adc
xor
cs
sbb
les
sub
push
push
sub
mov
fisubl
sbb
out
sbb
shl
jno
pop
mov
xchg
div
cmp
sbb
scas
aaa
jmp
jae
stos
clc
sub
jl
stos
mov
push
lods
pop
jae
mov
pop
int3
ljmp
testl
push
shr
inc
stc
gs
cmc
fucomp
inc
add
adc
push
pop
in
movsb
scas
mov
lcall
cmpsb
hlt
or
jl
addr16
lea
pop
mov
ljmp
loope
or
pop
mov
and
or
pop
push
scas
enter
fistpll
mov
fst
push
inc
clc
loop
dec
jmp
lock
lahf
andb
pop
xlat
mov
or
es
popf
flds
imul
sub
or
jl
and
stos
ret
push
pop
push
or
dec
add
enter
pop
shlb
add
jg
scas
xchg
jbe
cmp
mov
gs
loope
pushf
shlb
sti
mov
jae
aam
popa
insl
xchg
lahf
pop
orl
loop
js
in
dec
mov
push
gs
and
insb
jnp
pop
xchg
cltd
scas
aaa
lods
pop
mov
stc
pop
jmp
lods
jecxz
dec
pop
std
in
ljmp
pop
inc
scas
lock
pop
jnp
cmpsb
jl
addr16
fs
es
jle
mov
loop
scas
movsl
inc
in
stc
cmpsb
cmp
mov
push
jno
mov
mov
jae
pop
mov
push
jnp
sub
jne
and
push
rcrb
xchg
adc
add
cmp
xchg
fst
aam
xchg
leave
iret
xor
fucomip
adcl
gs
pop
jl
mov
sub
inc
add
inc
pusha
and
shrb
jb
mov
mov
xchg
mov
xchg
or
cmp
mov
pop
movsl
pop
xchg
iret
sub
sub
xchg
lods
jbe
mov
test
sbb
xor
xor
mov
dec
lar
test
gs
sbb
in
cli
sbb
bound
insb
fiadds
punpckldq
cltd
inc
imul
mov
cwtl
xor
clc
divb
imul
and
sbb
das
nop
lret
notb
fwait
cwtl
push
push
inc
push
cmpsb
inc
xchg
je
test
repnz
mov
xchg
dec
pop
int3
in
jne
add
sbb
xchg
loop
ljmp
pop
aam
add
add
mov
adc
fistpl
or
xchg
pop
xchg
and
shlb
inc
int3
jmp
incb
adc
mov
mov
mov
xchg
fwait
dec
es
repnz
aad
or
subl
jmp
out
lods
ja
cmp
jnp
sub
cs
icebp
shll
pop
jne
adc
push
inc
mov
dec
pop
pusha
or
mov
ss
lret
sbb
xchg
xchg
sahf
sub
aam
outsl
test
lock
outsb
stos
jb
mov
sub
aam
repz
stos
pop
outsb
xchg
add
iret
pushl
scas
and
cmp
cmp
lahf
add
dec
pushfw
xchg
or
fcomp
mov
dec
in
sbb
or
cmp
ljmp
icebp
sub
mov
or
pop
lods
lods
add
xor
pop
cmp
mov
mov
cwtl
inc
fsubrl
idivl
sbb
arpl
cwtl
push
sbb
in
cmp
mov
iret
movsb
pop
out
filds
jb
and
rol
cs
pop
push
sub
ret
lahf
mov
sbb
rorb
in
fildl
int
repnz
cli
mov
scas
inc
cmp
and
scas
cld
movsl
xchg
lahf
xchg
adc
cmpsl
pop
mov
push
std
mov
sub
movsl
mov
test
cmpsb
dec
leave
mov
sbb
mov
fidivrl
or
mov
sti
mov
lock
movsl
sbb
fnstsw
outsl
aas
aam
xchg
or
pop
mov
pop
orb
fcompl
out
repnz
in
gs
pop
sbb
stos
xor
xchg
jl
sbb
pop
shlb
xchg
mov
inc
cmpsb
lret
fimull
push
jmp
shlb
dec
fimuls
jl
call
inc
mov
xor
push
clc
push
mov
xchg
nop
dec
or
enter
aaa
pop
sbb
clc
hlt
mov
jne
xor
mov
icebp
int3
int3
lds
cmp
dec
and
in
pop
into
xchg
mov
mul
imul
aam
in
faddl
dec
imul
leave
les
inc
mov
jne,pt
imul
pop
movsl
xchg
fistpll
cmpsl
push
into
iret
in
push
sub
insl
pop
cmp
dec
in
arpl
rorl
push
fidivs
dec
sbb
pop
fs
in
mov
int
in
push
iret
lret
fwait
test
rcll
das
rclb
jle
bound
stc
pop
dec
aad
aaa
sub
into
xchg
jo
cmovne
ret
addb
lahf
aaa
cwtl
sbb
movsl
test
adc
adc
mov
mov
int3
out
cmp
jbe
pop
inc
lds
dec
sbb
sub
cmpb
inc
popf
or
ljmp
xchg
jno
subb
out
cmc
mov
inc
jge
cmp
or
cmp
int
pop
mov
daa
sbb
movsl
jnp
mov
test
ja
mov
jmp
les
mov
adc
nop
jle
adc
je
cld
sahf
aaa
sub
rolb
push
les
xlat
and
xchg
stos
inc
mov
ret
mov
mov
icebp
ja
testl
mov
lea
pop
rcrb
push
jae
pop
jb
push
into
dec
adc
sub
jp
pushf
sbb
std
jge
out
jge
push
jmp
push
orl
adc
mov
cmpsb
jecxz
loop
nop
sbb
dec
rorb
mov
leave
cwtl
jnp
sub
out
subb
mov
dec
les
cli
shl
sarl
mov
mov
movsb
fs
int
mov
mov
cmp
pop
inc
fs
pop
test
int3
mov
cmpsl
xor
jl
in
or
pop
cmp
pop
cmovle
insb
cmp
in
mov
dec
cmp
inc
jae
jae
jle
and
xor
gs
test
jmp
xchg
fcoml
jmp
decl
jnp
iret
test
aas
sti
ror
inc
or
mov
push
ss
mov
push
adc
and
andb
stos
sbb
or
movsl
push
pop
mov
or
mov
fldcw
addr16
add
sbb
aas
stos
js
test
mov
lcall
push
cmp
lea
sub
iret
rcr
clc
cwtl
sbb
test
xchg
pusha
pop
mov
inc
push
bound
loope
add
int3
sti
pop
push
inc
pop
cmpsl
sar
mov
mov
add
sahf
mov
mov
push
mov
ffreep
leave
fucom
das
pop
sub
fsubrl
inc
ret
pop
repnz
or
adc
fwait
dec
sbb
sbb
ret
cs
call
jo
push
cmp
movsb
jb
jle
adc
mov
div
xchg
hlt
mov
jg
xchg
outsb
js
aam
pop
cmpsl
or
jmp
andl
pop
or
dec
and
fsts
scas
cmp
push
mov
lret
add
cmpsl
xor
push
out
std
jp
jecxz
ret
dec
jecxz
inc
in
dec
add
jecxz
imul
cmp
and
xor
jbe
mov
mov
insb
pusha
lock
int3
dec
jg
pusha
mov
xchg
add
dec
jecxz
ret
xchg
stc
cs
pushf
bound
lahf
pop
mov
xchg
pop
xchg
add
adc
mov
in
or
jne
imul
mov
pop
push
adc
jl
int
sbb
scas
int3
shll
xchg
pop
sbb
and
pop
push
movsb
xor
call
test
icebp
mov
and
cmpsb
bound
push
adc
inc
cltd
mov
push
push
jns
int3
cmp
jb
outsb
jle
or
pop
adc
sub
loop
sbb
test
and
inc
bound
and
test
adc
add
shll
imul
xchg
loopne
add
imul
fisubrl
pop
lods
jecxz
dec
jne
ficomps
jb
push
mov
aaa
adcl
xchg
inc
repnz
jmp
popa
pop
in
shll
fstpt
xchg
rcrl
shrl
movsl
xor
and
inc
addl
wbinvd
pop
jl
outsb
sbb
in
mov
xor
push
jge
sbb
mov
enter
mov
and
push
orb
mov
jno
fsub
stos
mov
fnsave
xchg
or
jno
stos
push
push
clc
into
mov
inc
into
int3
lahf
mov
out
sbb
pop
pop
ja
and
aam
pop
roll
shrb
sub
std
mov
mov
mov
loop
cmp
gs
xor
popa
cmpb
sub
ss
es
mov
lds
xchg
pop
pop
mov
xchg
push
outsl
dec
pusha
jae
jp
lcall
dec
sbb
sub
fsubl
push
jne
jle
xchg
xchg
es
mov
jne
dec
pavgb
push
outsb
add
popf
mov
and
push
popa
sti
shll
shl
adc
sub
sub
mov
ds
test
pop
sub
in
stos
cwtl
mov
push
lods
jb
fldt
inc
inc
xor
and
inc
sbb
cmp
push
clc
jae
sub
mov
sub
dec
ja
test
aam
cmp
xchg
sub
sub
and
out
jmp
out
gs
and
jb
add
mov
pop
inc
cmp
sbb
inc
adc
loope
fidivrl
jg
clc
cmp
stos
pop
cmp
mov
movsb
stos
mov
fcmovb
and
int3
daa
cmc
lods
cmp
cmpl
sti
mov
xor
inc
cmp
mov
dec
das
imul
ljmp
lcall
sub
jb
dec
notl
clc
push
jae
lahf
push
and
into
lret
out
xchg
adc
enter
fnstcw
das
call
push
hlt
or
push
xor
jns
cmp
push
pop
cmp
mov
aam
jns
sub
add
ret
mov
push
aam
pop
xchg
leave
jp
int
adc
push
jmp
sbb
adc
loopne
iret
mov
out
icebp
shll
roll
dec
out
mov
movsb
sbb
sbb
pop
clc
sti
dec
mov
shr
mov
cmp
loopne
sub
pop
add
xchg
jb
and
and
pop
add
out
xor
adc
mov
mov
lret
and
std
loope,pt
bsf
xor
cmpsb
pop
dec
jg
dec
and
aam
pop
sub
mov
fists
pop
negl
test
les
test
jbe
test
fisttpl
pop
mov
sbbb
cld
fdivrl
sbb
jmp
fnstcw
gs
xchg
adc
cmpsl
sbb
ret
inc
mov
hlt
scas
lods
push
xor
push
outsb
sub
mov
dec
and
out
enter
mov
inc
jge
stc
mov
dec
inc
mov
xor
xchg
arpl
jl
sub
mov
mov
jg
or
cmp
call
push
jp
jb,pt
xor
dec
mov
inc
or
xchg
repnz
cs
cs
cmp
mov
scas
mov
or
int3
jmp
push
mov
xor
mov
push
test
xor
lret
or
pushf
lods
sbb
cwtl
cmp
push
aas
jnp
push
pop
enter
pop
test
or
imul
leave
lretw
addr16
insb
sub
or
pushf
mov
mov
loopne
aam
je
leave
and
mov
and
pop
mov
and
mov
mov
out
and
jl
jg
lahf
mov
xchg
mov
sub
ret
xchg
fdivrl
sub
cmpsb
xor
dec
adc
sub
push
enter
in
das
rolb
mov
inc
cltd
out
mov
sub
and
lods
mov
push
xchg
push
loopne
adc
and
mov
cwtl
and
push
mov
movsl
or
mov
cmp
mov
fdivl
sub
xlat
in
pop
aaa
rcr
popa
mov
mov
cs
pop
push
jo
cmp
in
mov
mov
ja
bound
or
ljmp
outsb
sub
inc
in
inc
push
xchg
addl
ret
push
sbb
xchg
inc
sbb
in
add
jg
repz
out
adc
daa
pop
fcmovu
adc
mov
pop
dec
repz
cmc
nop
sbb
or
sahf
and
xlat
lds
xchg
mov
or
xchg
in
mov
add
add
mov
adc
mov
cmpsl
cmp
das
mov
sbb
inc
pop
stc
mov
sahf
in
loopne
pop
jle
xchg
les
adc
mov
add
clc
pop
das
fldcw
in
push
xor
adc
pop
jmp
jbe
test
add
mov
and
jne
mov
movb
xor
push
add
mov
push
mov
subl
dec
and
scas
pop
aad
scas
leave
sarb
fnclex
cmp
mov
mov
pushl
lea
push
mov
pop
pop
or
sub
dec
and
cs
xor
xlat
in
outsb
addr16
dec
xchg
push
mov
mov
mov
cmp
push
or
rol
inc
add
dec
addl
popf
xchg
xchg
mov
loope
outsl
cmp
xor
loop
stos
nop
mov
inc
dec
jge
das
movsl
sbb
push
jle
xchg
popa
dec
shll
sbb
cmp
lret
dec
sub
mov
fisttps
push
sbb
insb
icebp
or
cmp
lahf
lods
lahf
out
rorb
xor
pop
nop
in
orb
enter
neg
cmpsb
rcr
test
incl
jns
jbe
pop
lods
sbb
add
mov
addb
pop
pusha
xor
xchg
xor
test
ja
sbb
fwait
das
int
sub
aam
mov
sbbl
mov
dec
aas
mov
sbb
lahf
lea
pop
in
mov
inc
or
lret
hlt
sub
jmp
mov
fidivl
lret
inc
sub
in
adcl
push
sub
fistl
mov
aam
or
idivb
pop
mov
filds
mov
fnstsw
divb
adc
enter
cmp
enter
in
mov
sbb
and
lret
adc
dec
add
stc
movsb
cli
mov
and
pop
sub
mov
std
popf
jbe
fwait
sub
movsb
fstpt
mov
loop
cmp
push
bound
cmp
adc
js
sub
mov
leave
decb
mov
lds
sahf
lret
dec
cmpsb
and
ss
add
xchg
add
hlt
jb
mov
mov
pop
cmpsl
xor
imul
lea
or
ljmp
out
imul
mov
insl
push
aad
cli
jecxz
xor
gs
xchg
xorl
cwtl
pop
push
add
dec
fsts
mov
pop
stos
ljmp
adc
lds
sbb
test
fistpl
xchg
fistpll
cs
xor
shll
sub
mov
lods
push
xchg
sub
clc
sub
cltd
mov
cmp
dec
ficoml
aam
orps
xchg
faddl
lock
in
cmp
pop
out
and
sbb
loope
scas
in
das
ja
dec
push
mov
jnp
lret
xchg
pop
out
bound
xchg
or
xor
aas
fadd
call
mov
lret
inc
daa
fnstenv
rcll
mov
cltd
lods
sub
es
fiadds
push
mov
test
inc
xchg
inc
mov
add
movsl
lcall
sbb
mov
fs
pop
mov
add
int
jns
add
das
out
rclb
and
mov
adc
or
or
cmp
adc
push
inc
push
out
mov
xor
push
add
mov
out
ds
mov
adc
stc
dec
mov
jo
test
movsb
adc
dec
lcall
lea
push
lret
and
pop
mov
daa
xor
test
mov
xor
movsl
push
xor
mov
mov
shlb
cmpsl
nop
add
js
call
mov
in
sti
pop
jp
sarl
sub
lea
test
fiadds
push
cld
test
adc
call
fwait
sub
movsb
xchg
inc
cmp
or
fnstenv
imul
pop
lret
push
int
cwtl
stos
xchg
xchg
fadds
or
movsb
mov
outsl
into
sti
repz
inc
cltd
nop
rolb
aas
push
jecxz
lock
int
or
and
test
loope
mov
ljmp
or
bnd
pop
xor
ss
fdiv
fdivrp
jmp
mov
xchg
sahf
bound
mov
sub
xchg
stc
push
ja
dec
or
mov
int3
in
pop
stc
aas
test
addr16
mov
inc
jl
add
loop
jg
push
int3
sub
jg
movsb
call
pop
add
ds
popa
scas
cmp
mov
stos
negl
lods
and
lcall
or
jl
fisubrl
dec
sbb
inc
dec
or
and
add
cmpsb
adc
call
adc
nop
sub
jmp
fcmovne
sbb
out
gs
inc
stos
mov
or
pusha
jmp
cmp
mov
mov
add
and
jecxz
inc
nop
mov
mov
bnd
out
jae
leave
incl
das
push
int
mov
cmp
cmp
fwait
sub
xchg
sub
in
sub
jbe
loopne
mov
cltd
fnstsw
ret
inc
mov
lock
cs
out
or
xchg
push
rolb
fwait
mov
sbb
mov
dec
push
call
jbe
scas
icebp
rep
jmp
push
add
fldt
add
push
jge
sti
sti
cmpsb
mov
xchg
jp
xchg
dec
cmp
pop
lahf
sbb
or
pop
dec
movsb
cmp
push
and
int
add
mov
mov
mov
subb
and
mov
inc
jl
push
push
add
inc
dec
sbb
xlat
dec
xor
rol
push
test
jb
imul
bound
gs
ljmp
lods
dec
insb
cmp
jo
jmp
into
jb
adcb
ds
mov
xchg
dec
cmp
mov
mov
xchg
pop
and
adc
add
cmp
insl
push
pusha
jae
aam
sbb
pop
repz
jp
test
adc
js
cmp
stos
movsl
mov
test
push
sbb
cmp
popf
aam
mov
jne
cmp
mov
test
imul
push
movsl
jmp
push
mov
test
adc
dec
pop
inc
jbe
fadds
push
pushf
imul
jo
xor
hlt
outsb
aad
roll
dec
fcomp
sub
inc
shll
cltd
stc
les
push
cmp
dec
cs
pop
test
mov
fidivl
jns
mov
das
jb
mov
adc
xor
es
pushf
xor
sti
in
jmp
dec
insl
sbb
cmp
leave
pop
gs
imul
rcrb
outsb
loopne
hlt
sar
je
pushf
shlb
rclb
hlt
mov
push
add
loopne
icebp
push
cmp
cmp
xchg
push
scas
xor
push
sub
xchg
lock
bound
daa
cmp
mov
dec
imul
popa
push
je
aad
andl
fcompl
mov
lock
sahf
je
aas
daa
rcll
pop
push
mov
fisttps
mov
idiv
fldln2
xlat
sbb
mov
cmp
aad
mov
paddusb
and
in
dec
iret
and
lea
into
xchg
test
add
lods
mov
into
push
adc
stos
cli
pop
inc
add
and
sub
lds
into
xor
popa
jb
fs
das
jne
add
or
xchg
es
enter
add
movsl
and
mov
cmp
pop
jne
push
loopne
push
cwtl
and
or
cltd
inc
out
mov
lret
mov
in
xchg
push
ljmp
sbb
in
std
push
imul
xchg
cld
fnstcw
pop
pop
fxch
sbb
xlat
sbb
inc
pop
jne
inc
std
pop
push
lods
stos
jo
mov
cli
in
ljmp
inc
jge
mov
dec
jbe
and
mov
fsubrl
cmpl
lahf
jmp
testl
je
push
mov
and
leave
insl
sti
cmp
addb
shll
out
imull
adc
inc
xchg
out
mov
and
lcall
test
or
in
testl
mov
out
adc
sahf
cmp
fiaddl
add
mov
and
xorb
jns
fstps
xorb
testl
sbb
or
push
into
and
pop
aas
int
jne
lea
push
add
add
xor
nop
je
xor
in
xchg
into
xor
push
pop
xor
aas
ret
rcrb
in
lcall
mov
jno
jbe
mov
rcll
iret
pop
cmc
imul
in
sti
pop
cmp
loopne
leave
lahf
jle
or
int
and
mov
push
sub
aas
ss
or
popf
or
fstl
sbb
mov
cmc
inc
out
push
leave
push
movsb
cmpsl
mov
lahf
dec
xor
mov
xlat
mov
fmuls
xor
xor
dec
and
stc
not
ljmp
jmp
loop
inc
mov
pusha
insb
stos
or
xchg
and
mov
push
fs
subl
cwtl
dec
sub
rorl
mov
and
push
push
mov
dec
and
lea
dec
in
ret
into
imul
cmc
mov
xchg
adc
pusha
pop
scas
or
rclb
pop
sbb
nop
aaa
call
or
sti
aas
dec
icebp
sbb
xchg
push
test
mov
push
es
pop
das
push
dec
cmc
and
popf
mov
hlt
cmpl
aad
xchg
dec
test
add
push
jae
jo
and
fnstcw
jb
add
fcomps
mov
push
fldl
imul
mov
or
out
jp
adc
stos
jbe
cmp
mov
aas
xchg
pop
sub
ja
inc
gs
pushf
cmp
xor
je
shll
imul
jne
sub
jb
icebp
mov
movsl
cwtl
mov
pop
test
jl
push
jb
cmp
cmp
lret
mov
pop
xchg
jmp
movups
push
scas
dec
xchg
mov
in
jp
mov
es
shr
xor
push
dec
adc
fnsave
push
and
repnz
movsb
sbb
mov
bound
jmp
je
lods
sbbb
or
inc
mov
int3
das
sbb
lods
dec
arpl
or
inc
dec
fsubs
outsl
jmp
gs
filds
rorb
rol
scas
xchg
outsl
out
out
loopne
iret
js
dec
cli
imul
aas
lods
sbb
mov
not
lcall
fldt
xchg
add
jp
jae
ret
scas
loope
dec
dec
repz
loopne
cwtl
adc
std
gs
hlt
cld
pusha
bnd
insl
cmp
decb
jle
mov
add
fndisi(8087
xchg
mov
hlt
loope
je
xlat
dec
or
or
cmpsl
sarb
lahf
ret
adc
out
repz
ret
lds
push
fucompp
xchg
aad
ror
mov
sbb
mov
mov
out
jg
pop
daa
xor
dec
clc
mov
sub
fsubr
std
xchg
sbb
fnstcw
jecxz
push
cwtl
cmp
in
lds
mov
outsb
xchg
hlt
mov
push
into
bound
or
out
xor
test
jnp
cmc
push
cmp
movsl
cli
xchg
std
stc
push
repnz
jl
push
xor
in
imul
jnp
adc
fcoms
add
ds
shr
testb
mov
loope
sti
push
xchg
push
mov
add
jmp
cli
add
lahf
jle
lcall
xchg
push
ja
mov
mov
inc
cld
das
push
pop
aad
xchg
pop
jg
jnp
mov
mov
xchg
xor
jge
inc
insb
pusha
xor
and
push
add
outsb
cli
cli
cltd
jnp
adc
cmp
inc
mov
xchg
inc
popf
push
ss
add
clc
hlt
adc
ficompl
mov
jmp
sub
add
or
cmp
test
imul
push
cli
mov
ss
imul
inc
inc
pusha
inc
fwait
int
xor
xlat
cmp
enter
jo
fscale
mov
in
push
push
push
dec
and
mov
cmp
jae
out
sti
pop
lahf
dec
test
dec
mov
push
gs
adc
rolb
add
addr16
jne
dec
push
xchg
dec
and
scas
cli
xchg
shlb
pop
jnp
mov
ss
xchg
or
enter
cmpsl
rorw
inc
loop
jle
sub
xchg
lret
stos
jne
push
or
cmp
jp
inc
mov
ja
xchg
mov
int
xor
dec
addr16
in
jbe
int
add
clc
fldt
fs
add
sbb
fwait
cmp
cli
leave
fiadds
addr16
pop
inc
jle
loopne
cmc
xchg
test
xor
jae
dec
fsubl
push
and
sbb
or
mov
js
pusha
jnp
inc
cmpsb
and
stos
cmp
cmpb
jns
xor
xor
andb
jno
mov
and
push
xor
int
std
mov
cmpsl
cmp
mov
fwait
stc
cwtl
mov
sub
iret
add
arpl
or
xchg
lret
into
sub
add
mov
mov
inc
inc
arpl
je
pop
adc
add
xlat
ret
mov
imul
xchg
push
outsb
addr16
aad
mov
sub
or
pusha
ljmp
jg
pushf
jns
jbe
cltd
into
sub
mov
dec
nop
add
mov
xchg
xlat
in
inc
shrb
xchg
aas
jnp
icebp
mov
push
sbb
iret
lock
fidivrl
unpcklps
sub
inc
bound
lods
jae
push
das
pushf
nop
mov
andl
mov
pop
inc
ds
push
xchg
cs
pop
or
fldt
leave
std
xchg
push
sbb
sbb
fidivrs
push
sbb
mov
imul
pop
ja
mov
pop
or
mov
es
pop
cltd
push
jne
hlt
xlat
and
rdpmc
ret
mov
mov
lock
sbb
cmp
sti
gs
push
out
xchg
push
mov
sbb
jb
or
xor
mov
adcb
pop
xor
out
pop
cmp
jl
push
mov
cmovnp
popf
xchg
xor
cwtl
xchg
or
or
xchg
fsubl
rcl
sub
mov
push
repz
and
jl
pusha
mov
and
pop
xor
stos
push
scas
add
and
daa
addb
sbbb
or
add
push
mov
add
out
test
stc
sarl
push
pop
call
pop
testb
adc
inc
mov
mov
pop
jae
inc
lret
mov
jae
es
out
or
add
shl
cmpsb
cmp
lret
imul
insl
stos
ficoml
mov
push
jb
out
mov
xor
pop
imul
xlat
mov
cmp
jmp
iret
cmp
pop
imul
xor
adc
push
repz
adcb
jnp
xchg
cmp
mov
std
js
add
scas
mov
push
jno
ret
stos
sub
clc
push
nop
add
test
mov
and
mov
sbb
rcrb
mov
ret
xchg
jbe
adc
clc
mov
mov
hlt
scas
test
imul
cmp
pop
adc
test
xor
subb
mov
inc
jmp
mov
out
das
dec
mov
pop
ss
arpl
jmp
mov
jo
mov
leave
add
mov
jp
mov
xor
scas
dec
cld
jb
cltd
roll
in
jecxz
sub
pop
xor
iret
imulb
test
mov
sub
fstpl
mov
adcb
mov
je
ret
loop
pop
je
jle
sbb
inc
stos
sti
jo
add
fisubs
mov
add
cwtl
adc
push
xchg
dec
pop
mov
in
mov
inc
xchg
bound
push
cmpsb
push
inc
mov
or
wbinvd
aad
mov
push
mov
cmc
in
and
bound
lret
jb
cmc
jl
sub
test
mov
dec
into
aad
mov
stc
fwait
enter
push
aas
push
daa
mov
ds
test
cltd
adc
dec
leave
fnsave
pusha
inc
fistpll
inc
mov
cmp
jp
inc
add
std
or
mov
dec
mov
mov
sbb
xlat
jmp
mov
cld
push
jnp
in
push
sbb
lock
fwait
call
add
ja
movsb
cmp
fstps
inc
mov
jb
push
push
cmp
adc
outsb
adc
jne
mov
ret
outsl
inc
inc
adc
popf
cmpsl
sbb
adc
dec
dec
out
xchg
call
dec
aad
xchg
imul
pop
or
sub
push
push
ljmp
subb
and
shrl
les
pop
aam
ja
repz
sbb
xchg
lret
push
mov
or
movsl
jns
mov
mov
testb
jl
gs
subb
adc
jb
jp
mov
cmp
jge
xchg
mov
lcall
pop
lds
insl
dec
in
prefetch
pop
xchg
sbb
and
sbb
mov
cli
or
dec
repnz
dec
mov
mov
orb
sub
push
nop
insl
aam
mov
xchg
cmp
movl
pop
jo
push
add
push
jecxz
shrb
repnz
sbb
cmp
jne
and
inc
cld
inc
pop
sahf
mov
push
out
jecxz
nop
push
aas
bound
mov
push
icebp
jo
sbb
jmp
or
pop
pop
gs
and
push
cmp
mov
sub
adc
cmp
sbbb
js
or
add
and
jo
adc
push
add
pop
add
sbbl
aas
inc
enter
sbb
dec
shll
or
and
lock
stc
sbb
inc
scas
adc
fdivs
ret
movsb
dec
shlb
mov
inc
adc
ja
das
test
mov
jmp
xlat
pop
ja
pop
push
xor
mov
repz
adc
movsb
mov
cmc
push
imul
scas
mov
movsl
sahf
mov
sbb
shl
push
out
lret
jo
rcrb
and
sub
jns
dec
xor
insb
xor
jb
in
mov
sub
pushf
xor
in
push
lock
adc
adcb
mov
jp
xchg
sarl
addl
jo
int
lea
xlat
in
mov
in
nop
and
or
xorb
and
ljmp
test
ja
out
in
jecxz
sub
mov
adc
inc
pushf
cwtl
jns
out
mov
insl
and
sbb
stc
cwtl
xor
mov
movsb
pop
ljmp
push
loop
in
push
insl
mov
test
stc
jb
pop
pushf
cmp
cld
sub
movsl
repnz
mov
xchg
adc
sbb
xor
movzbl
inc
sbb
icebp
stos
cmc
jb
sbb
mov
push
push
in
push
mov
push
cmp
stc
ret
ret
adc
mov
push
scas
and
dec
insb
ljmp
sub
adc
sub
movsb
loopne
sub
fisttpl
scas
sub
add
ljmp
aaa
jne
sbb
loope
mov
loope
adc
test
test
add
and
jg
push
lods
dec
xor
pusha
rolb
xchg
xor
int3
pop
icebp
sub
add
loop
or
addb
adc
mov
int
cmc
jo
pop
rclb
loope
jmp
mov
add
insb
xchg
xchg
out
pop
sti
and
xchg
fs
jle
jp
lods
adc
jmp
cmpsb
jecxz
pop
pop
cmc
mov
sub
sbb
mov
pop
xchg
sbb
jnp
jbe
adc
or
ret
ret
add
sbb
dec
sbb
rcll
mov
jp
and
cmp
mov
cmp
sub
int
xor
lahf
xchg
push
adc
andl
jnp
das
aam
mov
stos
sbb
loope
rcrl
stos
scas
xchg
fcomi
mov
add
incl
push
xlat
add
dec
lods
or
test
stos
xor
pop
mov
xchg
pop
jmp
test
ds
xchg
mov
pushf
mov
mov
jl
loop
cmp
aas
xchg
xchg
mov
cmp
lret
and
push
sahf
sbbb
cld
xchg
cmp
sti
out
pop
icebp
pop
mul
aas
leave
in
dec
movsb
movsl
test
arpl
push
jge
mov
daa
cmp
pop
das
into
jp
and
negb
xor
incb
pusha
mov
lock
push
movsl
xchg
sbb
mov
int3
test
mov
or
fcomps
jp
imul
dec
aad
mov
mov
fs
into
test
lods
push
icebp
push
xor
das
or
mov
fldcw
cmp
out
aaa
sub
dec
clc
or
lret
test
aaa
insl
dec
cltd
mov
sbb
mov
or
shrb
mov
js
push
jnp
fstpt
and
xlat
fstpt
xor
sti
ss
push
pop
bound
cmp
mov
adc
adcl
xchg
push
sub
sbb
enter
push
mov
in
xchg
adc
in
clc
sub
fstps
rorl
in
add
xor
les
movsl
aad
xor
addr16
jge
push
pop
adc
sahf
add
mov
dec
inc
dec
and
cmp
outsb
fs
xor
fidivs
out
mov
faddl
xor
add
scas
mov
scas
mul
pushf
lcall
adc
mov
fsubs
inc
xchg
int3
imul
xchg
rolb
lret
subb
shlb
sbb
xchg
jb
xchg
bound
cmpsl
adc
call
fiadds
and
mov
inc
sbbb
ret
cmpsb
hlt
adc
outsl
mov
fimull
xchg
hlt
mov
out
cmp
jb
inc
sarb
xchg
repz
pop
pop
mov
test
sarl
pop
pop
jmp
pop
push
jle
testb
mov
scas
pop
popa
ficoms
frstor
ret
push
into
fiadds
clc
pop
xchg
and
mov
bound
addl
jo
cwtl
pop
iret
lahf
add
ss
les
lret
cmp
js
pop
in
sbb
pop
out
test
or
sub
cli
movl
scas
repz
in
xchg
xchg
add
data16
notl
xchg
mov
push
or
pop
mov
lods
inc
scas
inc
sub
push
xor
pushf
add
inc
arpl
jnp
les
push
pop
sub
dec
xlat
inc
sbb
loope
jmp
cmp
aaa
fcompl
sub
pop
scas
sbb
aad
leave
call
pop
adc
add
mov
inc
insl
js
pop
adc
push
shlb
insl
data16
cltd
adc
dec
mov
push
adc
jmp
sub
inc
hlt
jge
mov
push
jb
pop
add
pop
popa
shll
push
into
mov
or
push
jb
scas
cmpb
adc
mov
ret
ja
lret
std
testl
sbb
add
jecxz
inc
push
ret
or
sbb
enter
out
mov
fistl
jne
cmpl
repz
xchg
or
inc
sbb
aas
mov
bound
jle
inc
mov
inc
add
xorb
cmp
cs
iret
mov
inc
adc
out
jns
jmp
cmpl
xor
jae
imulb
cmc
lcall
jmp
jle
in
mov
adc
cltd
xchg
scas
pusha
push
stos
mov
inc
cli
adcl
xchg
pop
and
imul
and
sub
sbb
dec
or
scas
mov
int3
sbbl
std
clc
push
call
js,pt
mov
pop
je
test
xchg
rol
subb
mov
xchg
leave
jmp
sarb
cs
mov
mov
inc
mov
cmc
mov
and
mov
push
addr16
mov
xor
push
mov
mov
xchg
movsl
jbe
std
xorb
icebp
or
pop
inc
xchg
std
mov
nopl
and
call
xchg
and
icebp
out
jnp
cmc
xchg
push
xchg
pushf
mov
adc
adc
inc
push
hlt
dec
jge
inc
shlb
push
in
ret
std
ljmp
push
mov
sahf
shrl
xchg
insb
jbe
call
stos
lds
cmp
mov
mov
pusha
scas
popf
add
aas
lahf
into
sbb
leave
push
leave
lds
xlat
addl
or
sbb
jns
lods
daa
and
fwait
xchg
inc
xchg
and
sub
loop
jbe
sub
or
jg
adc
sub
sbb
lret
adc
mov
and
lret
nop
mov
mov
aaa
and
mov
mov
or
cwtl
pop
outsl
xchg
rol
shr
dec
mov
mov
mov
inc
mov
loopne
jmp
xor
add
pop
addb
adc
and
mov
lds
dec
ret
inc
or
sbb
js
fs
adc
insl
push
int3
aaa
popa
inc
shl
xchg
adc
ds
push
loop
push
xchg
addr16
and
mov
pop
sbb
sbb
ss
outsb
icebp
jecxz
mov
repz
sbb
add
mov
jg
insb
cmp
sbb
add
int3
dec
lret
and
lcall
ss
cmp
movsl
mul
out
hlt
in
bound
dec
outsl
shrb
inc
add
sbb
lock
mov
popf
rorl
sbb
ficoms
inc
pop
xor
cmp
jl
pop
pop
mov
sub
dec
outsb
psllw
ss
add
jmp
jo
jp
dec
into
push
jo
add
and
lahf
arpl
mov
sub
pusha
xlat
arpl
jns
or
stc
xchg
icebp
cwtl
stos
push
xor
mov
xchg
inc
lret
inc
lods
push
xchg
pop
jmp
daa
push
notb
sbb
sbb
push
pop
mov
sub
sub
add
movsl
adc
mov
andl
iret
stos
outsl
jp
mov
add
xor
clc
imul
jnp
mov
jb
out
leave
insb
movsb
cmp
cmpsl
push
mov
cli
out
xor
filds
clc
mov
or
punpcklbw
loop
pop
pop
pop
xchg
push
sub
mov
idivl
ljmp
jns
outsl
test
pop
sub
fidivrs
dec
xor
lea
sahf
repnz
and
orl
fcoml
xor
hlt
gs
mov
fcmovnb
fsubrp
mov
xchg
flds
jg
xchg
int3
xor
cmc
subl
je
sub
push
mov
mov
cwtl
jns
sbb
add
xchg
sub
fcmovu
out
jmp
scas
mov
dec
mov
iret
jo
imul
imul
out
mov
stos
sarb
mov
int
mov
cmp
mov
xorl
xchg
sub
inc
jne
mov
lret
sahf
fwait
mov
rolb
inc
xchg
pop
ss
fstpl
mov
out
dec
pop
stos
es
or
shlb
push
popa
add
mov
and
inc
data16
je
idiv
sahf
fnstcw
les
or
iret
sub
lret
inc
jno
loope
popf
into
pop
js
push
dec
dec
sub
xchg
or
popa
inc
ret
mov
popa
mov
sbb
or
shll
mov
out
adc
pop
cmp
aad
shr
mov
inc
ljmp
pop
sbbb
dec
jo
pop
mov
jl
xor
or
stos
add
mov
mov
jo
or
lea
loope
adc
fcomip
cmp
rorb
xchg
jp
jl
inc
sub
xchg
xchg
xchg
or
call
push
xchg
lahf
dec
outsb
js
push
mov
pop
jp
cmp
xchg
js
push
jp
nop
pushf
sbb
popf
std
sub
jb
das
sbb
in
test
push
jle
cli
or
pop
stos
lock
sub
lock
push
mov
outsb
adc
cltd
add
add
test
sbb
mov
sub
xlat
mov
dec
jge
sbb
mov
lahf
sub
cmpsb
divl
psubsb
jg
cli
adc
jb
inc
pop
sahf
or
in
test
sbb
test
loope
sbb
scas
push
out
xchg
mov
lods
mov
das
std
es
repz
lock
add
mov
mov
imul
std
or
cld
incl
fsts
scas
nop
cld
and
push
xor
adc
inc
popf
push
or
jne
stos
pop
das
mov
inc
mov
add
loopne
inc
imul
xchg
insl
xor
mov
mov
pop
out
sbbb
sub
xchg
mov
sbb
test
jge
mov
jmp
adcb
dec
and
fld
je
xchg
out
mov
ljmp
push
das
or
mov
push
add
jp
mov
mov
test
jae
bound
or
adc
nop
or
repz
not
hlt
pop
insb
cmp
cmp
mov
cmp
dec
xlat
imul
aam
cltd
mov
adc
std
cmpsb
and
in
arpl
mov
rep
ja
pop
jnp
pusha
or
ljmp
pop
negl
loope
and
or
push
push
mov
imul
xor
lods
adc
adc
pop
or
xor
and
pop
testl
in
movsl
nop
dec
mov
ss
mov
push
xchg
add
fidivl
cli
daa
mov
rcrl
sbb
adc
push
das
rorb
rcrl
pushf
icebp
dec
fldenv
adc
and
aas
iret
mov
loop
leave
xchg
xchg
stos
jbe
loop
mov
jl
insb
std
sbb
fsub
stos
mov
orb
out
test
dec
push
stos
and
mov
sbbb
add
dec
sbb
subb
push
cmpl
shll
mov
mov
xor
test
popf
popf
repnz
pop
aaa
push
fldl
dec
jo
jns
nop
sbb
jo
cmp
inc
insl
and
test
aaa
aad
nop
icebp
push
arpl
xchg
mov
xor
xor
insl
fs
add
pop
mov
decl
arpl
mov
xchg
fisttpl
xchg
out
jmp
xchg
inc
fst
into
dec
mov
dec
mov
roll
cwtl
mov
sar
test
mov
cmp
stc
mov
iret
fcomps
cmpsl
in
mov
nop
stc
push
inc
xchg
mov
jp
and
jns
push
cwtl
pop
mov
cmpl
mov
ljmp
push
xchg
xor
andl
jno
roll
mov
xor
aaa
idivl
out
ss
test
mov
in
xchg
lret
and
pusha
and
cmpsb
sbb
movsl
cli
sub
scas
fistpll
fs
fcomps
roll
stos
movsb
out
adc
adc
mov
sub
es
ljmp
not
iret
dec
pop
pusha
hlt
repnz
clc
test
cwtl
sti
jmp
bound
jbe
or
add
hlt
nop
add
test
and
cmp
mov
psraw
les
sub
mov
sbbb
lret
je
cmp
sbb
or
cmc
ret
divb
jl
pop
addr16
jae
in
mov
movsb
mov
pusha
jg
outsl
movl
adc
nop
mov
pop
fdivrs
loop
fldenv
and
dec
mov
sarb
lahf
jo
in
sub
pop
inc
and
sbb
in
pop
aam
cmpb
jo
dec
cmp
jae
fwait
in
cmp
mov
sahf
or
rcrl
add
std
jnp
jae
sbb
aad
mov
cmp
pop
push
sub
jne
fidivl
lret
aam
pop
mov
sbb
into
addb
std
jmp
ficompl
mov
subb
lahf
out
stos
push
aad
cmpsb
and
int3
fwait
pop
cmpb
xor
mov
add
push
pop
lea
shlb
shl
add
je
xchg
aam
adc
dec
mov
jbe
push
jne
cmp
push
scas
xchg
mov
adc
imul
mov
lods
lock
inc
mov
icebp
and
xchg
cltd
inc
push
cmp
inc
int
cmc
add
lods
dec
cmp
push
pop
sub
fstpl
cmp
lret
sbb
sub
mov
xor
clc
mov
or
jnp
cmpsb
adc
cmc
pop
mov
mov
popf
insb
or
dec
rorl
imul
pop
xor
fsubs
shrl
push
fisttpll
xor
or
push
cmpsb
xchg
imul
repnz
inc
xchg
dec
pushw
ljmp
adc
addb
pop
adc
xchg
jno
xor
cmp
push
decb
or
add
and
popa
movsb
fstpt
jl
jle
push
xor
and
out
mov
test
xchg
lock
gs
hlt
stos
iret
mov
xchg
sbb
je
in
sub
xchg
xchg
lock
mov
jmp
xor
sarb
pop
pop
ret
mov
ds
roll
mov
push
fldenv
inc
jge
ret
lods
mov
and
cmp
xchg
mov
pop
mov
cwtl
pop
aas
dec
in
mov
xchg
sub
xchg
into
jmp
lods
leave
lds
add
xor
push
and
imul
stos
lock
iret
fldt
insb
lret
mov
lret
sub
lea
fs
data16
mov
fxch
pop
and
cmpsb
and
ljmp
cli
dec
fbld
jle
xchg
push
leave
mov
jl
mov
fcmove
xchg
data16
jne
sub
repz
jge
dec
adc
mov
fwait
ret
shl
xor
jmp
push
fcmovnb
xor
xor
push
mov
push
ds
sub
lods
mov
mov
add
xor
jbe
xchg
fidivl
popf
push
lock
cli
insl
and
lods
jp
fstpl
addr16
push
pop
xchg
push
xchg
in
jp
cmp
andl
shll
jnp
push
enter
sub
fnsave
jns
lea
ja
hlt
push
rcll
fisubs
add
movl
and
pusha
lods
and
inc
xchg
imul
and
and
mov
xchg
das
jp
xchg
out
sti
inc
jmp
dec
pop
cwtl
mov
jecxz
fdivr
ja
scas
test
clc
jb
sarb
nop
jmp
cmp
movsl
aad
cmp
dec
sbb
insb
repz
jmp
test
xor
jno
inc
rorl
add
dec
stos
inc
dec
call
or
dec
or
mov
sbb
xchg
test
pop
jae
dec
dec
pop
lahf
test
test
fs
jns
sub
jmp
and
ret
dec
cmp
xor
rcrl
popf
negb
pop
jle
and
jle
cld
or
jb
std
leave
shlb
inc
repnz
pop
push
popa
xchg
outsb
sbb
adc
mov
mov
andb
push
movsl
pslld
dec
xor
mov
into
pushf
dec
mov
mov
xor
arpl
dec
sbb
insb
add
mov
aad
adc
push
add
push
repnz
enter
movsl
xor
pop
dec
nop
cs
add
adc
jns
idiv
call
pop
imul
cwtl
mov
dec
xchg
xor
leave
adc
sub
sbb
dec
fwait
push
pop
es
js
fcmove
out
jmp
mov
lock
insl
or
daa
pop
sbb
sbb
sub
ret
cmpb
out
xchg
xor
push
ret
test
jmp
out
sbb
lock
sbb
adc
push
push
adc
imul
test
data16
xchg
mov
pop
aam
mov
xor
cmp
add
sub
out
pop
ss
icebp
lahf
sub
jo
mull
mov
into
ljmp
cld
stos
jns
sub
movsl
fbstp
mov
xor
call
ficoms
and
xchg
fldenv
cmp
cwtl
aaa
icebp
mov
lds
and
fidivl
cmp
push
xor
jecxz
mov
push
xor
dec
iret
std
xchg
icebp
xor
sbbb
fsubs
push
stos
jg
stos
push
out
dec
adc
hlt
pop
mov
sahf
xchg
push
mov
fs
imul
mov
int
aaa
or
pop
aas
push
test
adc
shr
enter
mov
push
test
leave
ds
mov
dec
pop
mov
inc
inc
fisttpl
adc
ret
ret
pop
cmp
mov
xchg
repz
push
scas
add
in
clc
jae
mov
das
pop
or
daa
mov
xchg
lods
mov
in
test
mov
lret
push
inc
in
sub
ds
sahf
jp
mov
stc
fwait
dec
ja
pop
pusha
das
mov
rcl
mov
ret
dec
cld
test
mov
pop
testl
enter
outsl
push
push
jecxz
jns
in
dec
jl
sub
fucomip
push
add
dec
jbe
ljmp
imul
jnp
dec
mov
push
fbld
sbb
mov
daa
mov
mov
lret
js
subb
test
or
push
sbb
dec
push
mov
dec
cmpsb
iret
imul
xlat
les
xchg
insl
test
and
shr
jno
rol
popf
push
ljmp
pop
shrl
int3
shr
sub
mov
ret
and
mov
ja
mov
loop
negl
dec
les
or
inc
xor
sbb
cmp
ret
hlt
test
adc
or
iret
movsl
jbe
ret
pop
shlb
aas
mov
add
lret
sub
mov
lods
loop
xlat
and
enter
das
xchg
push
jbe
fcompl
pop
data16
das
jecxz
rol
add
pop
nop
imul
mov
ds
out
insl
lcall
cmc
xorb
paddusb
sahf
leave
dec
and
dec
icebp
push
repnz
xchg
jge
outsb
test
ret
jne
pop
sbb
mov
cmpsl
loopne
adc
je
push
push
xchg
jecxz
mov
inc
and
lcall
mov
push
mov
pushf
mov
jns
cs
clc
xchg
loop
scas
cld
jno
dec
inc
or
neg
push
lret
adc
test
mov
std
hlt
cmp
mov
ret
bound
push
pop
add
xchg
mov
mov
loope
mov
movsb
add
lds
in
mov
shll
lods
stos
and
add
xlat
mov
add
mov
pop
cmpsl
cmc
roll
push
pusha
cmc
jae
mov
dec
pop
aam
clc
imul
fisubs
icebp
or
mov
outsl
cmc
mov
addr16
hlt
adc
jne
or
and
pop
cmc
push
jae
rorl
pop
push
cld
fistpll
sub
call
out
mov
add
outsl
jne
into
pop
sub
sub
in
mov
xor
cwtl
push
fwait
and
mov
lods
xchg
cmc
sub
jns
pop
jge
inc
pushf
dec
in
daa
mov
xorb
daa
test
cltd
mov
pushf
and
ljmp
push
inc
inc
cmp
jge
jecxz
out
loop
lahf
out
cmp
mov
cli
pop
xor
sbb
nop
dec
testl
push
lock
mov
loop
xchg
int
xchg
dec
inc
fwait
out
mov
cmp
cmp
add
nop
jge
pop
rorb
mov
sub
loopne
push
cli
cs
cli
ret
mov
loopne
xchg
xor
mov
subl
pushf
push
xlat
hlt
clc
jecxz
cmp
movsl
outsl
stos
mov
adc
dec
mov
xor
iret
xchg
sbb
stc
inc
mov
xor
aaa
jmp
pop
idiv
adc
and
xchg
fwait
push
scas
xchg
test
push
lea
bound
mov
jmpw
movl
dec
aam
out
js
mov
xchg
jmp
push
repnz
out
jnp
pop
sbb
imul
in
frstor
repnz
push
sbb
cld
xchg
mov
into
fwait
mov
sbb
stos
das
jecxz
jle
jmp
push
mov
enter
pop
mov
lcall
in
fwait
stos
dec
push
inc
fildl
mov
adc
dec
loop
cmp
sbb
cli
and
adc
cmc
shlb
outsl
lahf
jp
mov
mov
inc
arpl
lcall
dec
es
pop
outsb
push
ret
aaa
xchg
fcmovnb
mov
cmc
xor
pop
lods
sub
sbbb
cmp
fistpl
shll
int
pop
jbe
xor
mov
pop
xor
mov
lret
xchg
fcoml
gs
ss
mov
gs
aas
cli
mov
fdivrs
pop
rcll
push
pop
cmp
xor
je
jl
xchg
pusha
mov
dec
test
cld
ret
cmp
in
outsl
inc
or
fidivl
test
push
or
and
fiadds
pushf
jge
shl
leave
sbb
jnp
lret
inc
sbb
hlt
bound
ret
call
addr16
sbb
mov
xchg
cld
mov
mov
adc
sar
cmp
sbb
push
sbbl
leave
iret
cli
mov
mov
fisttps
aad
in
stos
add
pop
cs
lock
mov
pop
adc
ffreep
mov
mov
mov
orb
insl
pop
adc
fdivrs
fcmovnbe
mov
sbb
dec
cltd
mov
mov
shll
stos
xlat
ss
mov
inc
shrb
push
sbb
stos
mov
add
sti
adc
andb
push
or
mov
shlb
adc
push
jecxz
sbb
xchg
daa
stos
jne
loop
shll
inc
test
cltd
xchg
inc
push
mov
adc
sub
cmp
adc
testb
push
fadds
xchg
xor
int3
lds
and
into
int
mov
repz
pop
leave
or
cmpl
adc
jl
cmpsb
shlb
lods
movsb
bound
mov
add
cwtl
mov
sub
mov
xchg
aad
sbb
sbb
mov
sub
addr16
pop
sub
shlb
mov
fidivrl
insb
cmp
add
lds
pop
rorl
jl
pushf
psllq
xor
dec
iret
call
pop
cmpsb
add
repnz
mov
popa
xlat
pop
mov
pop
rclb
ror
push
sarl
fsts
pop
fs
add
dec
dec
fistps
mov
add
es
jbe
inc
std
push
and
clc
mov
lods
daa
pop
stc
adc
adc
jle
cmovns
cmpsl
xchg
ret
repz
xor
dec
js
or
xchg
push
mov
dec
mov
out
ret
push
cmp
and
gs
jnp
and
pop
pop
add
xchg
testl
jb
cmp
mov
inc
sti
jno
dec
fs
in
loop
xorb
xor
jl
ja
inc
or
ljmp
mov
stos
xchg
inc
es
sub
mov
repnz
pop
cltd
push
pop
dec
cmpsb
pop
roll
test
push
arpl
cmp
lret
sub
lods
mov
add
scas
daa
adc
inc
adc
sub
cwtl
push
in
inc
mov
inc
pop
movsb
adc
loope
pop
add
cltd
cmp
xlat
push
mov
mov
in
add
dec
scas
jo
addr16
scas
and
inc
xchg
cmp
jle
xor
lods
adc
inc
test
pop
mov
jle
inc
dec
out
adc
sahf
jg
shlb
dec
xchg
stos
inc
in
sahf
adc
dec
mov
dec
js
in
mov
cmp
lods
jle
push
cmp
dec
fnstsw
je
mov
sub
mov
lds
dec
notb
cmpsl
imul
push
cmp
and
sbb
pop
or
sub
loope
jmp
and
add
xor
ret
jns
fldcw
aas
xor
out
test
jg
stos
mov
in
sbb
andb
cmpsl
es
rol
jl
notb
out
js
out
mov
xor
roll
adc
out
cmpsl
xlat
mov
ds
mov
icebp
inc
dec
xor
mov
ds
in
sub
test
pop
nop
fidivs
arpl
fisubrl
cltd
imul
lahf
inc
and
inc
jge
call
xchg
out
adc
push
sbb
xchg
mov
or
inc
xchg
mov
cmp
push
js
pusha
xlat
pop
mov
pop
jp
andb
mov
fsubrs
dec
and
xchg
sbb
or
addr16
jno
pop
popa
pop
cmp
jbe
cltd
or
ja
xchg
out
jle
ror
ja
inc
pusha
mov
adc
jg,pt
jge
lods
loop
enter
push
sbb
arpl
xor
mov
nop
push
push
jmp
dec
fdivr
xlat
aad
gs
popaw
lret
dec
popf
xchg
lahf
repz
popf
pusha
loope
stc
sbb
sbb
mov
push
outsl
cwtl
push
fistps
mov
pop
sub
xchg
movsl
fucomi
push
xchg
int
adc
push
outsb
or
mov
mov
add
push
xchg
imul
add
icebp
mov
in
rcll
sbb
adc
pop
daa
mov
shrb
mov
and
jns
stos
add
jg
inc
outsb
nop
add
imul
repnz
gs
lock
fnsave
xlat
xlat
mov
jb
addr16
call
push
pop
movsb
outsl
fistpl
sbb
dec
out
cmpsb
in
add
cwtl
test
pop
mov
out
jns
std
add
sbb
mov
outsl
push
mov
pop
out
jg
lds
xchg
je
lcall
adc
xor
jg
daa
xchg
push
and
aad
shl
xchg
cmp
lea
mov
push
mov
in
cmp
xorl
add
add
gs
lret
outsb
and
iret
jb
sub
out
mov
mov
filds
mov
stos
push
add
out
pop
adc
add
dec
addr16
scas
loope
gs
scas
call
mov
push
les
aaa
hlt
push
sarl
out
sbb
and
leave
dec
imul
push
adc
ljmp
into
loope
mov
add
inc
lock
out
mov
notb
bound
jmp
aaa
out
adc
lea
inc
inc
fidivrl
aad
ficoml
jecxz
jne
and
sbb
or
pop
push
fmuls
stc
cmp
iret
adc
and
movsl
mov
adc
jns
mov
lods
imul
in
addr16
adc
add
ja
lcall
icebp
xor
push
sbb
xchg
mov
scas
mov
ret
mov
or
mov
cs
cmp
inc
lods
imul
dec
cmp
mov
je
pop
push
add
xlat
jo
stos
shr
mov
cmp
jo
cmp
ss
mov
mov
ds
pop
xchg
cwtl
push
mull
mov
sub
push
inc
inc
loopne
filds
push
in
leave
dec
lahf
inc
inc
xchg
xchg
mov
fstl
and
sub
clc
mov
xchg
push
and
xchg
xor
lods
jae
adc
leave
push
sbb
xchg
and
adc
sub
mov
mov
bound
adc
jp
mull
daa
mov
mov
je
or
icebp
test
leave
test
and
dec
bswap
xor
lods
and
aas
mov
xchg
jne
cmp
mov
or
push
or
je
sbb
mov
dec
stc
sbb
or
clc
sbb
dec
fs
mov
xlat
data16
rcrl
cmp
insl
xor
movsl
fldl
testb
mov
clc
push
jbe
rclb
lods
aas
rol
and
xor
mov
jb
push
xor
ss
ja
xor
jo
jae
mov
movsb
cwtl
fisubs
test
lret
lahf
imul
frstor
mov
orb
mov
out
or
push
rol
lret
jle
sar
jmp
jge
sbb
sbb
out
icebp
outsl
movsb
adc
pop
and
or
movsb
mov
mov
push
stc
jae
mov
test
jnp
mov
ja
shrb
sub
movsb
pop
daa
or
call
shrb
jnp
adc
jle
jg
jl
rolb
arpl
mov
inc
push
push
cli
sete
inc
or
or
sbb
mov
out
and
or
xchg
mov
movsb
mov
shrl
push
out
sub
fmull
cmpb
jecxz
push
movntps
push
imul
call
scas
xchg
sbb
gs
int
add
cmp
cs
pop
inc
and
outsl
mov
cmp
repz
mov
pushf
pop
fsubrl
jecxz
mov
outsb
xor
movsl
loop
and
dec
icebp
pop
push
outsb
pop
fistps
xchg
and
jmp
std
out
adc
bound
mov
fcomps
ss
ja
sub
fcomps
and
pop
cwtl
shrb
test
push
inc
pop
daa
les
test
jbe
icebp
inc
add
in
incb
sti
out
test
loopne
cmp
pusha
fcmove
jnp
xchg
out
out
sahf
xchg
jmp
repnz
fld
mov
xor
sbb
popa
shrl
push
cmp
repnz
aam
addb
cmp
push
arpl
leave
sub
dec
or
and
dec
mov
or
dec
arpl
stos
in
push
cmpl
inc
xor
scas
push
les
dec
mov
add
mov
or
leave
fcomps
je
mov
js
shll
lods
sub
js
jns
cs
mov
pop
aaa
mov
adcb
ja
rcr
lock
xchg
push
adc
mov
out
fwait
lods
dec
insb
sar
sub
push
sub
xchg
pop
leave
adc
out
cs
mov
dec
xor
and
sub
pop
xchg
sbb
jne
dec
push
xchg
lods
xchg
xlat
call
inc
popf
inc
mov
repz
and
repnz
fisttpll
inc
out
mov
stos
mov
pop
cmpsb
mov
test
insl
mov
cmp
mov
fstl
roll
cld
out
loop
mov
xor
adc
sub
mov
data16
cmp
clc
cmp
push
lcall
cmp
das
mov
in
jmp
xchg
xchg
imul
popa
push
pop
adc
or
jmp
jne
iret
insb
decl
and
mov
push
sub
dec
push
imul
mov
inc
dec
push
pop
out
movsb
pop
mov
test
sbb
movsl
ret
add
or
int
or
adc
cmpsl
adc
jg
jae,pn
push
lds
out
cmc
inc
jns
out
dec
jp
push
cmp
mov
stc
leave
pop
add
inc
mov
mov
bound
in
popf
imul
ds
mov
xor
int3
outsb
xchg
test
jb
jg
out
mov
test
or
cmp
jb
and
dec
les
pop
das
xchg
jp
mov
jmp
push
lds
outsl
push
outsl
lock
xchg
lods
enter
in
leave
leave
cld
push
adc
mov
lret
in
inc
sub
inc
xchg
cmpl
ljmp
and
jne
push
cld
fidivs
inc
les
cmp
adc
pop
push
pushl
mov
pop
jge
cmp
adc
add
lods
push
fmuls
mov
fnstcw
adc
scas
scas
push
lahf
and
inc
xorb
cld
xor
shll
mov
rcrb
inc
mov
scas
add
out
int3
push
jle
push
bound
xor
xchg
dec
sbb
aas
out
push
mov
push
inc
inc
es
push
sarb
stc
iret
pop
in
sbb
lret
std
movsl
jmp
jnp
mov
jae
sub
cmp
add
jecxz
jno
fs
aas
sub
sub
fnstcw
sbb
jge
jno
mov
lcall
mov
stc
mov
cwtl
bound
or
imul
xchg
add
aaa
adc
cmp
pushf
and
cld
dec
rcrb
push
mov
mov
int3
lcall
popa
dec
stos
mov
ds
ja
cwtl
mov
test
sbb
int3
lcall
jle
add
cmp
testb
jecxz
test
dec
jno
icebp
xchg
push
ror
lahf
movsb
inc
xchg
iret
xor
cltd
lahf
cli
aaa
jecxz
push
jae
cmp
add
into
adc
into
inc
jge
sbb
add
lods
fcmovu
test
or
clc
lds
xchg
stc
pusha
inc
repnz
jge
cmp
or
pop
mov
mov
sbb
stos
xchg
fistpll
sbb
das
jmp
test
adc
ljmp
add
rdpmc
popf
push
mov
mov
fmull
clc
lret
nop
jp
cmp
lock
stos
or
sbb
or
xor
addr16
mov
outsb
xor
jb
stos
and
arpl
out
pop
insl
or
icebp
mov
adc
sub
into
outsl
or
sbb
push
mov
and
popa
pop
ffreep
insl
xchg
mul
loope
add
push
adc
in
add
cmp
sbbl
rcrb
dec
pop
xchg
aam
sub
jecxz
inc
cmc
fs
push
mov
inc
insb
jne
mov
inc
jge
out
loope
addr16
pop
xchg
ja
shlb
shll
or
add
xchg
xchg
xor
shrl
mov
ja
scas
loope
mov
stos
fists
xchg
cmc
rcl
add
popf
out
or
mov
cs
aad
test
cmp
fucomp
add
pop
sub
in
movsl
cmc
jp
and
leave
nop
imul
and
push
outsb
push
or
fwait
xchg
and
add
sub
mov
and
sub
outsl
aaa
cld
push
out
rorb
pop
sub
dec
jmp
xchg
pop
nop
cmc
lods
repz
data16
xchg
sbb
ficoms
hlt
cmp
push
xorb
xchg
inc
adc
je
xlat
mov
mov
or
xor
stos
ja
into
lahf
push
xchg
inc
lret
jns
sub
inc
sbb
lds
scas
xchg
shr
lods
cwtl
iret
and
jle
mov
aas
mov
mov
scas
test
and
mov
push
mov
out
dec
scas
repz
add
or
xor
out
lea
pop
xor
repz
test
gs
orl
leave
jno
ljmp
mov
repz
in
fistpll
loope
xchg
mov
add
ror
pop
testl
roll
dec
mov
dec
or
ds
jl
adc
nop
cmpsb
dec
cli
shlb
xor
aas
inc
sbb
xlat
mov
pop
rcrl
std
dec
xor
mov
aad
push
inc
dec
inc
push
mov
xchg
xchg
adc
xchg
aad
test
mov
lds
xchg
adc
fistpll
jo
mov
mov
scas
pop
aam
xor
cmp
sub
xor
call
add
inc
outsl
inc
lods
in
mov
fsubr
sub
gs
dec
or
subb
arpl
push
fidivrl
xlat
push
lods
adc
jb
jmp
sub
mov
mov
mov
mov
cmpb
imul
pop
xchg
repz
xor
enter
mov
fcmovnu
mov
push
inc
addr16
ret
aad
insb
icebp
and
adc
xor
fwait
adc
mov
daa
in
cmc
in
arpl
aaa
imull
pop
and
popf
shll
mov
dec
loop
jg
inc
mov
idivl
cmpb
stos
adcl
into
sti
aaa
inc
xchg
mov
xchg
pop
int
ja
and
pop
and
jecxz
notl
scas
loope
faddl
cmp
dec
dec
inc
sub
popa
push
clc
test
sti
cwtl
inc
shlb
aad
xor
pop
jb
jmp
lahf
sub
cmp
in
and
ret
add
lds
push
pop
psllw
aas
sbb
mov
nop
lods
outsl
xlat
test
test
xchg
xchg
sub
dec
cld
lret
gs
out
pop
pop
in
sbbb
ljmp
jg
popl
push
mov
mov
repnz
sbb
xchg
pop
xor
mov
out
mov
pop
out
add
lea
into
pop
jno
mov
adc
movsb
sbb
ret
arpl
lcall
jp
loope
lret
frstor
das
xorl
je
inc
clc
rcrb
jno
cmp
cmovno
sbb
fnstsw
cs
leave
add
fwait
pusha
mov
jmp
mov
cmp
and
pop
add
mov
int
mov
out
jecxz
pop
out
out
icebp
lds
cmp
cmp
push
mov
out
scas
jge
dec
adc
gs
sahf
std
adc
push
mov
mov
mov
jp
jb
lcall
xor
shll
test
mov
lcall
sub
mov
orl
sti
jb
jo
push
pushf
arpl
inc
bound
jecxz
sub
ljmp
pop
mov
jb
and
jge
mov
and
pop
rolb
lahf
shll
sbb
fsubs
mov
pop
fisubrs
jne
out
test
dec
dec
call
fmuls
ret
out
stos
dec
sbb
cmp
in
nop
cwtl
inc
cmp
sbb
lahf
hlt
push
dec
les
fistps
mulb
add
sti
int3
cmp
add
mov
loopne
push
in
je
xor
push
or
stos
add
fisttps
push
dec
arpl
outsl
push
mov
xor
adc
jne
ret
frstor
and
mov
cld
adc
lods
pop
shlb
mov
jle
fadds
adcl
lock
sub
stos
addr16
sbb
in
stos
hlt
rcrl
jl
xlat
aas
sbb
in
lret
mov
lea
adc
cld
mov
das
enter
add
jno
imul
rcrb
sub
sub
add
repz
stos
popa
cli
enter
testl
adc
callw
cmpsl
push
subb
adc
lods
mov
and
scas
dec
push
outsb
sbb
shrd
inc
adc
insb
ret
mov
mov
fisttpll
sbb
or
loopne
in
arpl
cmp
fdivrs
aas
js
add
push
in
stc
mov
xor
loop
xchg
mov
movsb
xchg
push
xor
sbb
pop
movsb
pusha
fnsave
and
cld
js
jnp
jecxz
inc
jp
fs
jno
sar
aas
nop
mov
lret
cmp
lret
cli
mov
push
imul
popa
cmp
icebp
js
sub
hlt
add
in
adc
xor
sahf
xchg
sar
orb
adc
das
rorl
xchg
inc
out
inc
das
cld
call
push
aad
xor
stos
or
repnz
pop
push
mov
push
lahf
push
add
or
cltd
das
ret
mov
adc
cwtl
cmpsb
aad
xlat
rcrl
fidivrs
jmp
cld
push
cmpsl
call
call
divl
cmp
pop
shlb
pop
sbb
pop
lods
mov
cli
mov
rol
fldt
negb
lahf
in
icebp
iret
adc
push
ja
jp
lds
jg
insl
mov
or
test
sub
test
pop
sub
cmp
cmp
pop
outsb
pop
std
push
or
or
popf
push
mov
fidivl
cwtl
xchg
pusha
inc
lahf
mov
lods
mov
imul
repnz
push
dec
inc
leave
aaa
inc
or
mov
jle
inc
inc
inc
dec
inc
icebp
cmp
push
fildll
ret
ret
dec
lods
mov
pop
lea
sbb
cmp
fnsave
xchg
jg
dec
lods
rcrb
xorl
adc
jecxz
push
in
rcll
push
mov
aam
ret
repnz
hlt
lods
in
imul
into
adc
xchg
es
outsb
sbb
in
sti
pop
xor
jl
sub
mov
adc
push
popf
pop
test
jns
dec
lods
and
xlat
dec
add
es
push
adc
aam
mov
iret
pop
call
loope
lret
jg
push
outsl
mov
loopne
dec
mov
push
add
movsb
push
js
sbb
cs
mov
out
outsb
or
out
sbb
xchg
adc
mov
pusha
in
mov
cld
xchg
mov
stos
daa
rclb
add
cs
in
mov
icebp
in
aad
stos
jo
fcompl
sbb
jae
call
rcll
test
leave
pushf
scas
rcrb
movsb
mov
imul
xchg
adc
dec
xchg
leave
pop
das
mov
das
sbb
out
and
stos
repnz
add
xchg
mov
pop
data16
add
cmpl
or
in
push
test
xlat
pop
ja
mov
mov
rcll
mov
sbb
push
jecxz
popa
pop
int3
or
pushf
clc
mov
hlt
pop
jo
xlat
mul
sub
addb
es
cmp
sub
pop
movsl
dec
fidivrs
ja
int3
sbb
imul
in
daa
ss
bound
dec
loop
push
les
mov
push
xchg
and
sub
sarl
fldl
mov
call
repz
fld
pop
bound
adc
adc
push
loop
mov
mov
mov
sub
jge
push
pop
lods
punpckhdq
jae
pop
push
arpl
ljmp
stos
in
sbb
shlb
movsl
dec
iret
and
sbb
int3
ret
and
dec
mov
dec
fildl
mov
mov
in
outsb
into
jge
mov
sarl
push
pop
mov
push
adc
int3
ret
sbbb
dec
shlb
in
sub
pop
inc
mov
or
out
mov
fisubl
sbb
lea
xor
mov
mov
lea
dec
cmpsl
xor
adc
mov
loop
notb
and
testl
mov
mov
bound
add
sbb
out
shl
lods
adc
pop
add
adc
es
test
and
sti
adc
sahf
gs
xchg
in
jns
std
sti
mov
stos
insb
sbb
xor
and
mov
sbb
imul
test
ret
addr16
repnz
imul
cmp
cmpsl
les
test
and
dec
cmp
xor
ret
cmp
pop
mov
cmp
jae
into
pop
es
cli
jecxz,pn
dec
lret
add
rclb
push
cmpsb
or
sub
xchg
sbb
ret
mov
mov
scas
loopne
ljmp
into
cwtl
or
jp
sti
and
imul
daa
filds
dec
xor
stos
roll
dec
pop
sti
mov
in
xor
mov
dec
push
mov
mov
fmul
enter
in
inc
add
std
inc
pop
add
rorl
or
jne
movsb
pop
jo
testb
lahf
mov
aam
xchg
jl
push
mov
or
or
cmp
push
mov
dec
push
inc
test
push
mov
cli
sub
push
lock
and
rol
adc
push
mov
add
xor
inc
cmp
call
cmp
ljmp
and
jns
sahf
inc
mov
jno
icebp
and
sub
fdivrs
inc
ret
inc
add
icebp
into
mov
cld
stos
push
sbb
test
dec
lea
adc
xchg
push
inc
dec
mov
xchg
add
add
addr16
leave
cwtl
addr16
repnz
adc
push
stc
fists
subb
push
or
loop
test
scas
rcrb
repnz
jl
mov
jmp
lods
inc
push
outsl
xchg
fnstcw
mov
imul
cli
jle
fucom
sbb
adc
jno
jnp
fs
fstps
push
test
pop
addr16
mov
aad
testb
scas
outsb
aas
pop
scas
mov
clc
mov
mov
into
xlat
inc
mov
push
mov
les
adc
sbb
add
pop
ss
mov
aaa
stos
push
js
xlat
sbb
std
ficompl
jp
sbb
add
addr16
arpl
push
jge
pop
pop
movsb
pop
movsl
ds
aas
test
les
push
enter
mov
aam
nop
rolb
jne
sarl
push
ficompl
mov
scas
and
ficoml
dec
inc
lea
cmp
cmp
in
lret
jbe
push
or
cmp
andl
enter
adc
rcr
mov
add
lock
out
and
jp
push
mov
mov
add
pop
cmp
pop
lret
stos
scas
in
xchg
xchg
imul
sbb
stc
mov
jg
adc
jl
cmpsb
mov
ja
in
stc
out
cli
andb
hlt
dec
inc
jp
inc
adc
pop
xchg
pop
call
or
and
pop
xchg
mov
push
mov
testl
movsb
movsb
jle
ljmp
push
mov
mov
shl
cmp
loopne
jp
nop
daa
imul
aad
mov
jmp
loop
jne
in
test
and
in
dec
adc
xor
inc
rcrl
mov
cmpsb
xor
ss
lcall
pop
mov
mov
mov
sbbl
repnz
push
xchg
push
enter
imul
and
mov
mov
gs
hlt
popf
sub
xchg
mov
inc
add
loopne
cmp
stos
sahf
push
lcall
fdivs
mov
lret
sub
ret
sbb
cli
int3
lret
mov
mov
pusha
sub
pushl
dec
push
rcl
jl
jge
pop
cmp
loope
andb
fcomps
or
stos
je
test
push
push
cmp
inc
push
xor
inc
mov
jnp
push
sub
xrelease
mov
sub
shlb
xchg
inc
push
push
pop
pop
pop
push
mov
pusha
lods
shll
pop
jl
jl
aaa
int
adc
stc
pop
push
out
rol
pop
fisttpl
mov
lret
gs
and
call
push
push
std
call
mov
mov
call
adc
sbb
scas
push
mov
aas
sbb
pop
scas
cmp
fistpll
fwait
inc
mov
pop
test
jne
les
ret
dec
push
fadds
add
pushl
sub
xor
rolb
jns
or
push
fs
fnsave
fstpt
xor
mov
es
test
pop
inc
ljmp
stc
jmp
aam
dec
push
popa
xchg
lcall
in
jecxz
xor
cmp
xor
jp
addr16
xlat
mov
lods
adc
ja
into
iret
imul
jae
imulb
outsl
fidivrs
test
mov
cmpb
das
sub
ja
call
dec
sub
out
out
push
add
sub
push
mov
pushf
movsl
adc
mov
mov
call
push
mov
mov
inc
jle
in
call
mov
insb
outsl
jecxz
sbb
push
lods
iret
mov
or
popa
add
je
out
mov
xor
sub
sbb
jne
fs
cmc
adc
or
and
mov
jmp
pop
jp
pop
movsl
pop
cltd
jle
push
nop
cmc
mov
or
das
int
pop
movb
jg
scas
leave
pop
lcall
mov
mov
inc
data16
push
cli
push
inc
ss
or
ds
or
test
push
into
jns
mov
cmp
and
add
aas
dec
or
and
lret
mov
or
adc
xchg
ret
shl
ret
fistpl
lret
jb
sbb
and
fcmovb
jge
subl
pop
add
cmpsb
sub
push
call
pop
nop
sub
mov
arpl
outsl
shll
repnz
ret
iret
jo
sti
les
imul
cwtl
xchg
jecxz
xor
test
mov
pop
inc
cmc
jp
mov
sbbb
lcall
adc
push
pop
jnp
das
mov
xchg
xchg
icebp
xchg
addb
lret
sub
jnp
js
ljmp
adc
fwait
mov
insb
jns
xor
add
mov
outsl
fidivs
divb
test
jmp
in
mov
pushf
sbb
add
jno
fbstp
outsl
shll
fcomp
ljmp
out
pop
xchg
sahf
lods
xor
xor
sahf
cld
pop
out
mov
xchg
cld
and
in
inc
repz
in
inc
lret
cwtl
push
jmp
ret
lock
ret
aam
fdivl
inc
push
cwtl
stc
rol
pop
sub
xchg
nop
in
push
add
stos
ljmp
clc
test
cmp
mov
imul
filds
fs
nop
addl
dec
xchg
pop
mov
imul
out
inc
pop
and
loope
jmp
or
dec
sahf
inc
dec
mov
or
pop
and
nop
mov
and
mov
push
int
aas
es
mov
out
inc
scas
cmp
stos
pop
mov
inc
bound
stos
pop
mov
inc
lret
xor
xor
sub
jbe
outsb
adc
mov
sti
cli
xchg
stos
aad
dec
jne
adc
mov
dec
pop
jle
jns
sbbl
test
mov
sub
scas
push
cmp
dec
add
push
pop
mov
ljmp
xchg
scas
mov
outsb
jle
push
cmp
js
xchg
idiv
pop
cwtl
fsubr
in
dec
sahf
icebp
or
sbb
jp
cwtl
sbb
fneni(8087
std
push
scas
pop
rclb
or
sub
scas
sbb
js
sbb
mov
pop
push
mov
mov
loop
inc
push
mov
stc
mov
sbb
mov
jo
mov
and
loop
pop
pop
cmpl
mov
movsl
mov
in
push
mov
nop
sbb
ds
outsb
push
mov
and
and
fwait
sbb
xor
stc
adc
imul
mov
cmp
dec
incl
xlat
outsb
rcrl
dec
pop
pop
mov
flds
cmpsb
repnz
push
cs
adc
or
xchg
push
adc
xor
std
stos
push
lcall
mov
or
gs
inc
and
cmp
cmp
mov
dec
cwtl
inc
or
dec
adc
ss
xor
xorb
ret
jge
mov
dec
pop
lahf
pop
and
icebp
xchg
je
dec
fisttpll
mov
xchg
add
jns
mov
sbb
ja
fs
push
push
divl
repnz
popf
ljmp
mov
in
jle
mov
sub
xchg
jno
repz
pop
mov
fisubl
roll
lret
ss
jns
rorl
sub
lods
mov
fwait
inc
das
or
xor
mov
xchg
fistl
add
xchg
ja
push
sub
test
pusha
pop
insb
inc
xchg
ss
int
xorl
out
or
fwait
arpl
xor
sarl
jns
in
xchg
or
mov
lahf
imul
cmc
daa
sbb
mov
xor
sti
insl
mov
mov
cmpsl
and
xor
and
gs
inc
sbb
and
je
aad
aas
nop
xchg
pop
ret
decl
enter
mov
out
jne
lods
lds
xor
and
sub
dec
jns
popl
adc
fdivl
mov
mov
cmp
xchg
cmp
out
fcmovb
sbb
out
or
mull
jge
lds
inc
and
jne
insb
jg
xchg
fcomps
data16
sar
pop
outsb
adc
jbe
xchg
xchg
pop
inc
mov
fwait
leave
and
je
movsb
jne
cld
cwtl
xchg
push
mov
aas
mov
xchg
nop
dec
ret
sbb
add
and
mov
sub
xchg
adc
lcall
out
imul
pop
mov
xchg
int3
mov
mov
enter
mov
loopne
out
inc
push
dec
leave
aam
mov
fists
adc
sbb
repnz
inc
outsb
push
or
lret
mov
daa
leave
or
inc
push
mov
lret
pop
mov
nop
outsb
imull
in
dec
pop
xchg
mov
mov
mov
mov
mov
mov
or
or
divl
mov
rcr
je
lock
sub
cmpsl
xor
imul
arpl
or
inc
inc
stos
ljmp
loopne
int3
xchg
add
inc
cmp
cmp
mov
push
mov
sub
jbe
jmp
fcmovnbe
scas
push
mov
jg
and
pop
sub
adc
jne
inc
in
jmp
cli
cmpsb
mov
mov
std
ds
inc
icebp
scas
xchg
pop
xchg
cwtl
pop
pop
cmp
aam
inc
inc
cmpsl
xchg
push
fs
xor
dec
imul
jl
push
lcall
shll
cmpsl
cwtl
ret
das
testb
nop
negl
fucomi
popa
pop
in
push
clc
mov
jmp
shll
mov
mov
jg
aam
cmp
mov
test
cmp
push
das
aad
stos
dec
jmp
mov
xchg
mov
cmpsl
dec
in
sub
rcll
xor
mov
push
mov
out
push
or
inc
dec
sahf
push
jp
decl
mov
sbb
sbb
jns
inc
dec
push
cli
cmp
sahf
push
jl
push
pop
sub
sbb
int3
in
sub
loope
fcoms
xchg
mov
or
push
jb
push
daa
fildl
or
dec
xchg
sbb
push
rorb
ud0
mov
ret
les
jmp
pusha
imul
dec
les
aam
add
xchg
pop
mov
pop
js
inc
je
add
xor
pop
test
jg
cmp
add
cmpsb
cmc
and
or
stos
inc
jae
push
loope
jne
jl
adc
jle
fistpl
repz
or
adc
loope
jne
dec
mov
sti
mov
push
xchg
dec
xchg
push
inc
fwait
dec
das
loope
test
xor
jb
and
sub
jns
mov
out
or
iret
mov
inc
xchg
jge
out
test
or
in
in
mov
movsb
sub
or
cmc
std
mov
add
mov
push
adc
lret
mov
mov
mov
adc
dec
add
aam
setne
and
mov
dec
ja
pop
test
stc
sub
lret
mov
add
out
arpl
cltd
dec
jmp
mov
mov
int
lcall
nop
in
js
xchg
loopne
add
in
test
dec
les
shll
je
sbb
sar
movq
sub
lds
mov
cmp
push
jge
xor
xchg
cs
test
cld
popa
popf
stc
cmp
dec
push
stc
incb
shll
xor
push
adc
in
jmp
gs
int
fcoms
adc
shrb
andb
xchg
mov
sbb
lods
sbb
bound
lahf
jle
push
fbld
div
incl
mov
xor
cs
fisttpl
jge
inc
or
cld
dec
xor
and
pushf
push
mov
mov
scas
xor
dec
jl
mov
adc
imul
lret
dec
aas
cmpsl
cmp
lds
jbe
inc
insb
cmc
cmp
fdivrs
dec
sti
add
pop
mov
mulb
mov
mov
dec
jno
pop
push
mov
scas
lcall
jg
aad
inc
adc
mov
jmp
fsubs
mov
fstpl
mov
dec
xchg
scas
cmp
pushf
shr
and
and
dec
fbld
int3
cmpsb
clc
cwtl
jnp
jle,pn
movsl
and
sbb
mov
imul
out
push
adc
nop
notl
dec
xchg
sub
sub
jnp
lcall
jnp
andl
or
mov
or
sbb
sahf
sbb
js
lret
sub
pop
ds
js
lods
stos
lds
lock
fimull
cli
in
or
xor
inc
rcrl
and
pop
pop
icebp
sbb
orl
push
jo
pop
data16
lods
dec
clc
and
mov
pop
hlt
cmp
test
sub
jl
clc
mov
sahf
lcall
push
sbb
sbb
enter
pop
mov
ret
insb
push
add
out
out
subl
mov
aam
popw
sbb
pop
pushf
push
sbb
pop
pop
lcall
mov
and
mov
pop
cld
stos
mov
outsb
sbb
push
sub
push
mov
mov
test
int
nop
fdivr
inc
popa
cmp
and
and
sbb
cli
pop
les
nop
push
sbb
or
test
push
inc
pop
mov
test
pop
jno
sub
xor
call
mov
mov
mov
mov
hlt
cmp
aam
mov
out
in
or
sbb
mov
dec
mul
insl
mov
mov
push
fildl
cmp
dec
add
lret
ss
test
push
adc
xor
sbb
dec
sbb
mov
stos
idivl
ret
ds
sub
dec
adc
ds
popf
push
xchg
pusha
ja
movsl
jg
xlat
sahf
push
cmp
imul
add
and
sub
cmp
rorb
pop
ja
pop
mov
push
fcompl
psubsw
and
push
lret
sub
insb
jo
nop
push
pop
ret
adc
insb
rorl
rorl
sub
test
sub
aas
fwait
inc
out
arpl
out
and
cli
adcl
fbstp
repnz
lahf
lock
adc
sbb
lahf
lock
inc
sub
or
ljmp
xor
inc
push
insb
leave
das
mov
jecxz
data16
pusha
aam
scas
push
fs
pushf
xlat
nop
mov
inc
popa
pop
mov
push
cmp
ja
aas
xor
push
outsl
orb
sub
in
cltd
aas
out
xor
add
data16
mov
int3
aas
hlt
fidivrs
pop
fwait
dec
pop
cld
ficomps
dec
adc
fildll
add
xor
ret
push
xchg
lods
cmp
mov
cmp
xor
pop
push
xorl
ret
push
adc
scas
into
fiaddl
divb
data16
frstor
into
loope
jecxz
into
scas
cs
cmp
inc
or
in
jge
dec
mov
mov
popf
insl
std
jecxz
aas
rclb
sub
cmp
mov
cmp
jae
imul
jge
mov
movsl
shll
xor
jno
lods
pop
in
push
inc
pop
shlb
xchg
push
push
xorb
in
les
inc
repnz
mov
sub
mov
imul
ja
lds
mov
icebp
mov
jl
dec
rcll
pop
or
xchg
push
fnstenv
cmpl
pop
icebp
lret
cmp
mov
addr16
jne
rclb
sub
iret
fsubs
sub
addl
jl
fs
jle
jne
lock
add
or
mov
push
push
sbb
mov
repz
fwait
lret
popa
mov
fdivrs
xor
fsubrl
or
jp
in
mov
rcrb
mov
add
stos
and
lods
idiv
jg
jp
lods
fnstcw
shrb
xor
test
in
cld
sub
xchg
cmp
or
mov
scas
xchg
rcl
adc
mov
pop
insb
fdivrs
pop
mov
insb
out
bound
sub
je
cmp
aas
rcl
dec
jbe
insb
adc
std
pop
sbb
or
adc
in
arpl
or
mov
mov
pop
jno
in
aas
sbb
shufps
xor
dec
ljmp
arpl
es
add
push
mov
cmp
mov
adc
adc
or
std
pop
push
fadd
in
inc
inc
jne
cli
fcoms
rcr
or
jecxz
dec
add
inc
sarb
pop
lea
sub
jno
mov
jge
cltd
bound
leave
leave
aam
pop
add
call
js
cld
ss
xchg
and
std
lret
inc
cmp
inc
mov
popa
inc
cwtl
popa
mov
fwait
push
inc
jno
push
inc
xchg
lret
sub
add
ljmp
pop
inc
movsb
mov
dec
popf
aam
aas
ja
test
or
es
lret
and
push
fwait
pop
or
pop
jno
dec
mov
scas
push
subl
addb
call
push
push
popa
pop
pop
lret
xchg
add
fcos
push
mov
sti
push
push
cmp
mov
cld
fldl
dec
jmp
mov
pop
sub
dec
icebp
clc
xchg
pop
aam
sbb
sub
insl
push
mov
or
mov
mov
cmpsl
shl
mov
pop
das
out
jbe
xor
pop
inc
stos
inc
add
jp
xchg
and
cmp
arpl
xor
pop
fs
add
out
xchg
imul
dec
xsaves
cmp
bnd
mov
jbe
xor
out
sbb
test
lahf
xchg
adcb
pop
out
xchg
push
mov
ds
out
stos
aam
iret
cli
lahf
dec
or
push
ljmp
in
mov
ret
inc
ja
inc
ss
fcoml
or
jae
push
negb
mov
out
faddl
xchg
mov
lock
cwtl
out
pop
js
ss
pop
aam
stos
imul
mov
or
jp
fwait
ret
in
adc
repz
out
xchg
ja
addb
loope
pop
xor
test
adc
ss
dec
in
stos
pop
add
decb
jo
xchg
fs
aaa
jl
imul
pop
sahf
lret
pop
sub
inc
jl
dec
sbbl
lahf
sbb
mov
dec
sub
and
nop
and
idiv
jecxz
data16
leave
xor
mov
push
incb
pop
out
lods
xchg
xor
sbb
and
in
dec
push
imul
pop
movsb
sbbl
test
jno
lret
dec
xchg
mov
fisttpl
scas
addl
fcomps
daa
lahf
bound
je
leave
pop
mov
adc
mov
dec
js
int
mov
fcomps
push
sbb
dec
cmp
xor
add
push
mov
add
shrb
adc
adc
xor
sub
fisttps
add
hlt
xchg
ss
test
divb
inc
add
sarl
sar
xor
push
push
arpl
and
sub
pusha
ljmp
pop
call
or
popa
in
xor
xor
in
fcmovbe
push
dec
jmp
test
mov
push
pushl
sbb
cmp
and
out
cmp
rorl
sbb
cmc
les
repz
ljmp
sub
stos
lret
mov
das
lcall
add
jecxz
popa
dec
xor
mov
sbb
cmp
outsl
clc
call
mov
je
adcl
sbb
dec
cs
xor
mov
test
dec
dec
in
sbb
pop
jecxz
inc
cmp
push
mov
ljmp
push
mov
cmp
jge
xorl
xchg
dec
cwtl
popf
xchg
mov
cli
lcall
adc
leave
mov
mov
in
mov
add
sahf
jno
push
xchg
mov
push
ret
adc
imull
mov
ja
call
rorl
sbb
dec
mov
inc
inc
push
or
adc
mov
imul
cltd
pushf
xor
popf
test
fldlg2
jle
sbb
orb
adc
stos
mov
push
leave
out
ret
fwait
mov
adc
subl
lret
adc
aam
pop
out
ds
imul
cmp
sub
pop
push
in
fcomp
xchg
add
cs
imul
imul
leave
les
cli
and
push
pop
or
mov
loopne
shlb
pop
mov
jle
or
pop
test
es
mov
mov
lret
or
xor
lahf
and
mov
mov
push
pop
fwait
inc
xchg
sbb
pop
lock
call
sub
adc
jg
test
hlt
pop
addr16
pop
hlt
jmp
pop
mulb
in
std
rolb
loop
dec
adc
jg
xchg
inc
out
mov
test
and
movsb
popa
sbb
repz
inc
push
mov
cli
add
sbb
clc
daa
pop
loopne
shll
mov
lret
lds
xchg
cmpsb
test
or
cmp
ret
movsl
mov
jno
negb
jmp
push
cs
bound
dec
or
lret
insl
cmpsl
ja
inc
adc
xor
bound
jle
pop
insl
jne
xchg
pusha
movsb
or
mov
scas
nop
lock
nop
or
fs
cmc
sarl
movsl
cmpsb
test
jl
sub
or
lods
and
out
pusha
jge
or
aad
mov
inc
test
pop
aas
or
lea
aaa
or
out
and
dec
sbb
fcompl
popf
cwtl
xchg
adc
jge
dec
int3
dec
xchg
mov
enter
shll
bound
test
jge
arpl
inc
mov
mov
fs
lret
insb
sbb
in
xor
scas
mov
inc
pop
push
adc
sub
inc
bound
punpckhwd
fcmovb
lock
nop
fisttps
mov
outsb
std
pop
and
xorb
mov
pushf
loop
rclb
dec
repnz
sub
lret
divl
push
dec
icebp
push
inc
rcl
dec
xchg
and
ljmp
jnp
mov
cmp
xchg
aam
sti
int
mov
ja
loopne
cmp
push
sbb
repz
leave
pop
mov
roll
and
sbb
fadd
adc
insb
and
mov
divl
mov
std
mov
dec
jno
in
add
andl
add
xchg
aas
in
push
repnz
pop
xor
xor
and
add
mov
mov
out
jg
mov
or
mov
mov
ret
pop
pop
mov
push
in
add
popf
pop
cmc
sti
adc
jp
jmp
mov
mov
mov
movsl
and
ja
or
jne
sub
mov
cmpsl
mov
stos
push
lret
int
add
jno
pop
inc
jbe
mov
xchg
cltd
mov
fbstp
cmpsb
xchg
lock
das
out
shrb
dec
pop
js
leave
mov
xchg
dec
cmp
add
mov
dec
jnp
dec
out
jne
je
xor
adc
addr16
int
loope
xor
sbb
icebp
test
xor
out
std
or
cmpsb
mov
dec
push
out
sub
xor
dec
nop
push
and
xchg
mov
imul
adc
pusha
pushl
mov
and
out
push
call
mov
push
mov
xchg
inc
dec
jnp
jo
mov
push
pop
mov
mov
mov
rclb
xlat
adc
leave
add
or
cmc
adc
ja
fs
testb
iret
mov
clc
add
ret
data16
sbb
cltd
sbb
pop
and
mov
xchg
lods
mov
in
cmp
repz
movsl
jmp
mov
adcl
cld
in
mov
in
std
movsb
call
fidivs
lcall
pop
dec
cli
adc
cmp
stc
enter
pop
jae
test
and
add
pop
jmp
popf
pop
inc
xor
repnz
lods
dec
loope
dec
loope
into
cmpsb
mov
add
repnz
xor
push
dec
sar
ljmp
inc
stos
stc
repz
xor
adc
jge
sbb
ljmp
inc
mov
or
roll
mov
xor
sbb
loopne
insb
aad
xchg
xor
cs
loope
and
inc
mov
out
fndisi(8087
loope
sbb
pop
pop
pop
aad
out
xorb
lcall
lret
push
push
and
aaa
lods
xchg
add
pop
mov
sarb
xchg
mov
lock
lods
or
stc
xor
mov
dec
popf
sbb
movsb
scas
pop
jecxz
mov
cld
xor
and
sub
and
inc
jg
mov
jl
in
int3
in
rep
xor
jns
dec
inc
jecxz
mov
loop
outsl
fldt
ss
out
jge
xchg
and
mov
sahf
pop
mov
sbb
movsl
cld
cwtl
mov
push
xor
xor
ret
or
sahf
pop
xor
lds
xchg
xlat
sbb
arpl
lods
push
int3
xor
setne
push
sbb
fisttpll
rolb
fidivrs
pusha
mov
stos
or
movsb
hlt
jle
jmp
js
pop
rcrb
addl
and
cmp
jge
pusha
pop
sub
outsb
jno
pop
ret
pusha
cmp
cmp
sbb
inc
xor
test
inc
gs
insl
into
jl
mov
pusha
or
push
jge
mov
fidivs
aam
sbb
les
cmc
dec
or
xor
xlat
hlt
jnp
inc
xor
pusha
es
call
out
xlat
sti
pop
jno
test
rol
outsl
imul
cld
adc
pop
pop
inc
dec
mov
or
js
inc
dec
sub
sub
push
cmp
push
xlat
pop
dec
and
jo
cmp
sbb
dec
mull
ljmp
aaa
cwtl
inc
pop
xor
pop
cmc
dec
shlb
in
out
fs
aad
mov
jg
mov
in
ds
xorl
mov
jo
repnz
sbb
pop
inc
lcall
mov
test
fsubrs
mov
jecxz
cltd
cmp
iret
mov
xchg
movsb
das
sbb
adc
pop
stc
lret
addl
xchg
loop
add
mov
inc
sar
pushf
pop
mov
into
popf
cli
mov
cmp
stc
fwait
sbb
inc
or
sahf
aas
stc
adc
mov
fadds
mov
or
leave
inc
lcall
pop
in
xchg
in
daa
or
imul
ljmp
mov
push
inc
in
adcl
lock
pop
addr16
sbb
and
cmp
push
jnp
push
and
stos
dec
sub
stc
repz
push
xor
pop
or
xor
mov
fadd
add
lea
arpl
les
jmp
aas
cmp
scas
decl
out
push
stos
stc
xchg
jns
add
sub
mov
cmpsb
pop
jmp
dec
pop
pushf
dec
std
xlat
mov
inc
jns
cmp
push
dec
rorb
iret
mov
mov
leave
cmp
call
adc
cmp
test
xchg
or
inc
rcrl
pop
popl
rdpmc
jae
xchg
cmc
sub
mov
into
sbb
jge
ret
stos
aaa
outsb
cmp
dec
inc
arpl
and
jne
out
and
lods
mov
inc
cmp
mov
aas
aas
jmp
xchg
add
jp
add
popf
subb
fisttpll
jo
stos
mov
sbb
mov
sub
dec
ret
or
push
pop
in
cs
dec
popf
or
stos
ficompl
movsb
lea
mov
xchg
cmp
xor
xor
pop
pushf
mov
ret
in
xor
add
aas
fbstp
push
pop
arpl
mov
rcl
cmpsl
cli
scas
inc
sub
fiaddl
mov
ds
pop
dec
rclb
stos
jmp
pop
mov
mov
icebp
sbb
xchg
les
pop
fwait
dec
cmp
ds
leave
cmp
xchg
in
je
push
andb
pop
fildll
xchg
jecxz
dec
mov
or
inc
clc
mov
js
inc
out
push
pop
xor
pop
jmp
xchg
push
loop
dec
push
mov
out
fstpt
das
mov
movsb
adc
cmp
jae
rclb
sbb
mov
mov
addr16
dec
push
push
mov
lcall
sbb
jnp
int
in
add
mov
cmp
jecxz
push
dec
mov
xchg
jb
jge
negb
inc
mov
orb
adc
das
in
add
inc
xchg
and
cmp
or
add
repnz
dec
cmovl
rolb
jl
xchg
addps
mov
xor
stos
arpl
stos
add
mov
aam
ja
push
xchg
mov
call
icebp
inc
sbb
jle
pop
mov
cmpsb
ret
ja
call
and
popf
test
ja
xlat
out
xor
mov
repz
sbb
insb
lock
or
jp
in
cmp
ret
int3
int3
xor
xor
aaa
aad
movsb
and
dec
pop
push
dec
dec
gs
adc
stos
rcl
pusha
jbe
adc
in
pop
loopne
push
cltd
mov
mov
ja
loopne
mov
adc
sub
xchg
xchg
and
pop
mov
shl
sbb
push
sbb
pop
outsb
lret
call
popa
flds
cmpsl
pop
jl
addr16
notl
push
aam
jg
jno
adc
lret
iret
insl
add
movsl
xchg
bound
mov
add
jbe
dec
mov
xchg
shrl
sbb
sub
push
and
iret
sarb
in
lret
flds
popa
mov
ret
push
and
cltd
push
or
ljmp
addl
adc
xchg
xchg
pop
jne
mov
mov
push
push
cmpsl
testl
mov
mov
icebp
dec
pop
mov
scas
in
icebp
movntq
out
test
cmp
xlat
push
sub
push
into
mov
mov
aas
mov
pop
push
cmpsb
xor
mov
out
ss
mov
sub
dec
adc
outsb
sbb
and
andl
mov
mov
pop
pop
dec
and
pop
add
jae
pop
insl
push
out
jns
movsb
dec
sub
jg
mov
mov
jo
idiv
scas
cmp
and
add
scas
scas
dec
int
mov
sahf
dec
xor
pop
push
and
std
mov
mov
pop
pop
inc
addb
mov
sub
nop
outsb
or
scas
clc
xor
mov
mov
add
mov
ret
iret
cwtl
dec
dec
pop
shlb
in
cmpsl
mov
mov
mov
in
push
lds
repnz
scas
ss
and
lcall
loopne
lahf
cmp
cmp
repz
arpl
or
cmpsl
jae
pusha
dec
jmp
xor
jge
push
adc
adc
dec
lods
sbb
push
pop
leave
fadd
inc
mov
test
aaa
ja
pause
and
mov
call
popf
pop
inc
ret
xor
jne
pop
fwait
js
mov
rolb
shll
sub
dec
sub
add
xchg
shlb
ret
cmp
jg
lds
sub
sbb
shrb
in
lods
in
xchg
in
cli
xor
test
xchg
fstl
jo
mov
jle
loope
aam
xlat
xchg
pop
cmp
xor
js
pop
pop
xor
into
ss
lods
cmp
inc
xchg
lock
sub
add
adc
mov
call
fimuls
dec
lock
jns
bound
movsl
xor
lret
cmpsb
push
xchg
imul
jns
lcall
movsl
out
sar
inc
push
adc
sub
mov
or
dec
and
aam
jne
in
pop
test
shrl
sub
movl
jle
pop
sbb
mov
or
loope
ret
shrb
xor
sub
fdivrs
add
jns
sub
imul
push
inc
jmp
add
sbb
xchg
jb
stc
in
stos
lret
mov
pop
mov
scas
push
xor
loopne
rclb
mov
push
aam
loope
pop
mov
inc
aaa
sub
pop
mov
loopne
rcl
pop
dec
lods
in
mov
sahf
mov
mov
ret
lods
stc
scas
out
cmpsb
aaa
shrb
sti
outsb
ja
mov
orb
mov
mov
andl
ss
lea
sti
inc
dec
negl
std
xchg
sbb
sahf
xor
xchg
movsb
and
adc
xchg
testb
cmc
cmpsb
test
jo
ror
adc
jg
shl
bound
xlat
js
jbe
xchg
pop
dec
fistps
stc
cmp
inc
cmpsb
xlat
pushw
adc
push
repnz
and
sub
ror
out
pop
pusha
fiaddl
dec
test
jge
sub
imul
pop
push
fldenv
mov
stc
stos
inc
repnz
pop
loopne
popa
mov
dec
jp
xchg
xlat
test
or
adc
sbb
cmp
pop
lods
lds
shlb
int
fdivr
mov
jmp
jae
out
jp
jne
mov
pop
sub
into
push
adc
jp
xchg
pop
adc
cmp
insb
mov
movsl
inc
icebp
repnz
notl
push
loopne
mov
ja
outsl
mov
popf
mov
xchg
mov
pop
or
mov
ret
mov
adc
sbb
jns
add
enter
adcl
sub
scas
push
rorl
jnp
in
mov
cmpsl
lcall
xchg
jmp
sbb
and
inc
pusha
push
andl
xchg
cmp
imul
mov
dec
loop
dec
and
cmp
add
xor
ja
push
add
ss
push
fistpll
test
push
push
sbb
jno
fistps
test
adc
aad
pushf
cmpsb
ljmp
into
mov
adc
in
and
fstpl
repnz
or
xchg
sahf
push
hlt
push
mov
pop
push
or
mov
insb
adc
mov
es
sub
stos
cmpsl
pop
mov
rcl
scas
call
imul
out
mov
inc
inc
sbb
sub
inc
xchg
lock
imul
sbb
or
aad
sub
daa
mov
je
scas
sub
aas
push
fcoms
iret
adc
aam
fcomp
loopne
cmp
pop
shl
cmpsl
lods
dec
sub
and
mov
mov
inc
sbb
movsl
xchg
mov
cmp
xor
in
jg
sub
ds
fcomps
cmp
mov
inc
scas
pop
and
pop
iret
shll
mov
inc
leave
xchg
andl
mov
lods
and
mov
pop
cltd
inc
lret
cmpsl
outsb
cmc
or
shrl
leave
and
int3
xor
into
dec
leave
mov
rcrb
inc
aas
ror
js
mov
out
mov
push
je
stos
std
daa
lahf
ficoml
subb
mov
xor
add
adc
cmpsb
testb
push
les
mov
pop
sahf
push
psraw
decl
mov
sarb
je
lds
stos
cs
xor
ss
clc
mov
cwtl
jae
bound
loope
mov
dec
sbb
mov
leave
pop
push
int3
call
test
enter
scas
data16
cmp
aas
xchg
cmpsl
and
icebp
xor
hlt
jge
popf
ret
add
dec
lret
mov
into
mov
xor
xrelease
or
push
adc
sub
out
bswap
mov
cmpsl
icebp
arpl
mov
sbb
or
jg
loope
pop
xor
push
out
jns
setne
jp
jle
add
xchg
in
movsb
mov
ret
pop
dec
push
test
mov
into
adc
daa
mov
ret
dec
jo
pushf
add
and
add
fwait
nop
test
cmpsb
orl
or
xor
inc
loope
push
mov
jno
jmp
call
loop
or
mov
dec
fldt
jmp
mov
add
pop
das
lock
push
addl
mov
jge
out
fisttpl
arpl
lods
mov
cmp
mov
out
or
je
mov
sti
es
push
rcrl
pop
aam
dec
aas
lds
mov
pop
fcoml
xchg
hlt
repz
rclb
xor
movsl
sub
adcl
movsb
jecxz
aad
or
jno
push
testb
inc
or
lahf
movsl
push
adcl
adc
xchg
sub
ljmp
lock
mov
mov
sub
ja
push
inc
sbb
pop
cmp
dec
jmp
repnz
mov
lea
addr16
cmp
pop
neg
mov
push
sahf
stc
xchg
ss
sub
je
adc
fdivrs
add
pusha
mov
jo
fstpl
xor
inc
mov
pop
mov
or
jns
inc
push
clc
hlt
dec
dec
daa
xlat
push
hlt
push
loop
imul
sahf
push
lods
adc
rorl
pop
push
mov
mov
loopne
xchg
rorb
or
cltd
mov
jle
pop
sub
or
ret
fld
notl
mov
cmp
pop
jp
scas
jb
cs
ss
scas
push
pop
loop
ffreep
dec
in
scas
cli
push
sub
jmp
in
sahf
cmp
pop
and
jl
pushf
mov
ss
inc
xor
adc
or
ja
adc
jp
inc
insl
push
mov
or
jne
das
mov
cltd
sub
std
gs
add
xchg
add
mov
hlt
push
cmpb
pusha
test
outsb
jecxz
std
pop
into
in
stos
scas
mov
and
sbb
jle
mov
jnp
pusha
sahf
xor
or
movb
movsl
mov
in
xchg
jmp
xchg
arpl
roll
jno
sbb
rcll
popa
outsl
iret
sub
cwtl
xor
add
lods
or
mov
aam
in
in
adc
jbe
dec
daa
xor
stos
cmp
pop
xor
xchg
int3
xchg
in
jae
stc
xchg
mul
adc
sti
test
mov
mov
push
in
outsl
pop
cli
xchg
jle
ret
ret
and
xlat
cmpsl
xorl
aad
setb
add
mov
dec
mov
fildl
push
mov
mov
and
pop
imul
mov
fs
in
mov
cmc
or
lret
iret
inc
shrl
mov
push
inc
fcoml
sahf
test
arpl
push
xchg
xchg
sbb
bnd
lock
adc
xadd
mov
in
adc
sub
xor
popf
xchg
andl
push
pop
and
mov
dec
pop
dec
push
push
lds
dec
add
pop
lcall
mov
iret
scas
ficoml
push
push
clc
lret
mov
aam
xor
cli
sbb
movsb
lds
bound
fdivl
mov
or
ljmp
fstps
dec
clc
mov
popf
shl
adc
jecxz
lcall
dec
dec
movntq
aas
repnz
std
fistps
test
xchg
cli
jbe
rol
xchg
popa
jp
out
fcmovnu
xchg
jne
in
jnp
dec
and
pop
xchg
test
inc
rorb
mov
pop
and
push
fisttpll
daa
jge
jg
dec
outsl
fcmovnu
rcl
fwait
sahf
cmp
mov
pushf
jb
cli
xchg
add
cmc
sti
push
rcl
push
aaa
fisttpll
popa
iret
stos
cmc
mov
push
or
movsb
nop
lods
jge
jno
mov
cli
call
dec
test
popa
add
lock
push
pop
mov
test
xchg
ror
xchg
jno
js
repnz
add
lods
inc
loopne
loopne
adcb
addr16
fldl
dec
dec
xchg
ss
or
repz
sti
pop
sahf
pushf
outsl
xor
mov
call
aad
ret
cmc
mov
mov
int3
push
mov
jnp
in
push
leave
mov
hlt
andb
cltd
std
mov
xor
push
out
xchg
or
pop
and
mov
cltd
movsl
insb
mov
mov
sahf
into
xchg
mov
push
push
push
pop
xor
out
push
adc
sub
xor
push
iret
push
test
leave
test
fdivrs
sbb
xlat
fcoms
mov
push
clc
cli
hlt
and
test
or
mov
je
push
xor
lock
in
add
add
inc
andb
imul
test
lcall
cld
ret
outsl
mov
cmp
push
xchg
mov
rorl
addr16
in
add
fistpll
xlat
dec
iret
shlb
dec
gs
adc
mov
push
xchg
inc
xor
sbb
stc
daa
sub
lret
dec
mov
mov
cwtl
in
bound
icebp
adc
and
bound
les
mov
sbbl
cld
divl
push
push
lea
jnp
xor
lods
and
dec
shrl
add
xchg
pop
ss
pop
lret
popf
jecxz
dec
xchg
sbb
xor
push
adc
push
add
lret
cmp
jbe
adc
stos
mov
es
leavew
or
add
es
jns
testl
dec
shll
loopne
sub
iret
lahf
mov
and
jp
adc
insb
dec
js
mov
ficoms
or
ret
ja
or
outsb
and
cmp
outsl
mov
sti
and
scas
scas
insl
lahf
out
in
stc
cmpl
push
or
orb
fs
pop
mov
shlb
and
pop
dec
cmp
sbb
sti
popa
mov
xor
sub
loopne
sbb
lock
iret
ret
arpl
push
mov
jmp
subb
loopne
incl
xchg
mov
inc
dec
pop
out
movsl
jp
pop
jbe
lods
mov
pushf
cmp
test
scas
jb
mov
stos
lock
and
inc
inc
int3
loope
mov
jg
xchg
movsb
fdivl
movsl
loope
or
cld
jbe
sub
or
sbb
ljmp
jae
cwtl
loop
mov
add
sbb
rorl
fisubrs
mov
push
jno
or
push
jg
sub
mov
mov
xor
jmp
sub
inc
push
mov
pop
xchg
inc
and
rcrw
push
mov
in
movsl
dec
push
mov
enter
ficomps
xchg
inc
mov
and
ljmp
sti
ret
jmp
fistpl
pop
ss
add
cvtdq2ps
adc
jg
sbb
add
ficoms
cltd
fsubs
orl
pop
jle
inc
rorl
loopne
in
lret
daa
ss
mov
movsb
mov
push
lret
subl
fdivr
lret
sub
out
ljmp
mov
inc
jne
fpatan
popf
enter
call
pop
mov
cltd
dec
repz
dec
sbb
movsl
leave
inc
aam
filds
adc
fsubr
xor
cmpb
push
jb
xchg
fcomp
push
sub
jecxz
jns
xchg
rolb
cmp
xor
or
int
popf
das
les
ds
rorl
mov
repz
mov
add
dec
mov
or
cmp
cltd
ret
and
mov
push
and
add
ret
aad
push
sbb
xor
fiadds
pop
aas
pop
sbb
or
sub
rcrb
add
loope
pop
inc
data16
xchg
cmp
in
push
mov
inc
insl
js
push
fcomp
cmp
scas
ss
imul
jbe
mov
xorb
dec
test
out
inc
aad
pop
stos
lods
mov
push
imul
rcll
pop
lcall
xor
add
cmpsl
mov
stos
mov
lcall
int
in
sbb
pop
adc
shll
jmp
out
or
dec
inc
insb
inc
clc
pop
lea
dec
mov
fnstcw
push
cmp
sbbl
cltd
insl
int3
aaa
movsb
test
or
stc
imul
lahf
and
cmp
arpl
lahf
js
negb
imul
add
bound
sbb
cmp
ror
sbb
sbb
or
jno
imul
stos
add
arpl
ds
hlt
jl
pop
push
mov
icebp
or
mov
sub
inc
xchg
decb
out
lock
scas
gs
mov
nop
jnp
cmp
cmp
bound
mov
je
or
inc
mov
lcall
jmp
fmul
loopne
lds
sbb
adc
inc
mov
push
xchg
cwtl
jg
idivb
lods
lods
das
es
xlat
mov
in
sti
aam
jle
int3
mov
das
dec
fwait
xchg
out
mov
je
jae
add
inc
or
fbld
push
and
outsl
movb
js
inc
jle
jmp
pusha
rorl
daa
orl
push
jle
das
or
mov
lds
push
shl
sti
or
inc
inc
pop
jns
mov
mov
incb
notl
sarl
fdivl
cmpsb
push
in
push
dec
popa
out
pop
jge
sub
addl
mov
dec
push
call
ds
xchg
into
jnp
daa
xor
adc
je
sarb
stc
cmp
test
loope
jecxz
ss
pop
sbb
repz
jno
xchg
inc
mov
sti
jnp
and
mov
add
pop
cltd
scas
cmpsl
popa
jmp
xchg
fldt
push
adc
rol
scas
mov
sbb
push
push
lahf
pop
adc
imul
stos
or
out
fmull
rep
sub
dec
mov
pop
rorb
mov
ljmp
aad
sub
mov
out
mov
cmpsb
std
and
xor
cmp
aaa
call
cmp
les
es
jmp
cs
xlat
jl
mov
sbb
dec
sub
ret
pop
clc
leave
ja
icebp
popa
push
inc
mov
mov
repz
add
test
mov
or
push
es
nop
dec
shr
pushf
sti
push
in
dec
inc
sbb
xor
fadds
addb
xchg
mov
and
add
adc
or
aaa
leave
sub
mov
int3
lea
shl
and
cmpb
mov
cld
lods
jne
cmp
jmp
jb
fsubrl
sub
mov
jnp
pop
cmp
popl
out
ss
pop
int3
in
out
bts
faddl
sbb
insb
sub
add
cli
mov
insl
shll
mov
mov
out
out
add
xor
mov
dec
dec
xlat
ss
aad
iret
arpl
push
adc
mov
in
mov
xor
dec
cmp
lds
inc
gs
fldl
mov
clc
pop
add
dec
jae
push
movsl
insb
pop
imul
fnstenv
push
pushf
add
xor
mov
mov
dec
bound
iret
add
js
lea
mov
iret
inc
sbbl
inc
mov
xor
sahf
and
repnz
lret
cli
adc
xchg
adc
adc
movsl
mov
aam
xor
xor
shlb
scas
sahf
dec
pop
inc
lods
inc
push
cmpsl
push
sahf
xlat
loop
test
pop
clc
scas
daa
test
aam
cmp
mov
pop
push
fwait
enter
xchg
fstl
pop
and
subb
adc
pop
pop
pop
mov
mov
cwtl
sub
aas
movsb
xor
jg
push
pusha
cmc
jp
mov
stos
stos
subl
cli
and
andb
xor
mov
push
mov
fstpl
xor
js
xchg
xor
dec
push
in
cmpsb
out
add
test
seto
cli
loop
iret
sbb
int
icebp
fsts
cmp
rdmsr
mov
xor
mov
sub
out
inc
pop
pop
sbb
bound
leave
pop
ret
dec
ja
xchg
lahf
push
repnz
ficoml
test
mov
hlt
jecxz
mov
or
mov
lcall
shl
fdivr
xchg
enter
mov
dec
and
imul
or
decb
insl
jne
fdivl
lret
sahf
loopne
stos
xchg
mov
jns
out
mov
jge
arpl
push
inc
cltd
test
ds
dec
jecxz
dec
sahf
jbe
lret
leave
and
mov
out
jp
xlat
jge
pop
jmp
aas
dec
stc
cmc
pusha
pop
push
xor
mov
aas
in
stos
mov
push
out
inc
lods
call
das
lods
inc
test
in
mov
faddp
out
insb
xorb
cmp
mov
negb
scas
sbb
lcall
add
out
mov
scas
pop
mov
ss
idiv
inc
or
fbstp
cs
jecxz
jl
out
sbb
mov
dec
dec
add
inc
xlat
sar
adc
shrl
push
sub
mov
lret
out
lock
mov
dec
call
xchg
fidivrl
jo
sub
ljmp
xchg
jnp
lahf
mov
sbb
sbb
addr16
mov
add
cmc
aas
mov
and
inc
and
ljmp
sub
xchg
fucomi
or
lret
xchg
test
aad
mov
call
std
data16
xchg
sub
scas
lcall
dec
lahf
dec
das
sub
out
aad
rcll
movsl
dec
mov
rol
fildll
cli
ljmp
cs
sub
mov
pushf
lahf
cmp
adc
xchg
push
push
dec
mul
out
inc
push
pop
push
fisubrl
inc
frstor
lret
xlat
add
popa
ja
push
lock
push
mov
dec
push
lods
loope
mov
fldl
push
inc
add
inc
xor
outsl
jne
add
mov
lock
ds
enter
sub
or
call
jg
mov
mov
push
mov
das
testl
paddusb
adc
sub
dec
jo
pop
inc
in
nop
mov
stos
in
call
and
xor
lcall
sbb
pop
mov
icebp
push
jne
iret
mov
adc
aam
push
inc
inc
popf
lea
rorl
push
out
icebp
pop
subl
pop
or
iret
mov
push
or
cmp
lahf
xor
loop
xchg
inc
mov
sub
adc
mov
rcl
and
fstps
dec
xor
movsb
mov
push
xchg
adc
mov
icebp
imul
mov
xor
pop
inc
stc
mov
xor
shl
mov
lds
inc
or
fcoms
test
stos
imul
push
add
sarl
dec
mov
add
push
lea
les
jae
sbb
push
dec
ret
int3
es
fsubl
pop
add
pop
popf
or
mov
adc
adc
mov
xchg
idiv
je
fwait
and
or
out
cmpl
mov
pop
push
xchg
mov
inc
mov
add
xor
sbb
call
test
adc
js
or
cmp
push
pop
push
mov
ds
in
push
lret
mov
aaa
push
les
sub
fistps
push
inc
adc
lods
idivl
scas
jb
ljmp
jns
lds
push
dec
loope
mov
lds
les
sbbl
xchg
jne
das
pop
add
mov
hlt
push
pop
jp
out
fldcw
adc
fs
mov
addr16
call
rorb
xor
ljmp
ljmp
fs
iret
mov
sub
ret
mov
cmp
mov
ljmp
test
dec
mov
pop
xchg
aaa
sbb
inc
rclb
ljmp
and
pop
dec
adc
and
jmp
ret
add
jb
jle
aaa
or
push
mov
rol
pop
addr16
inc
push
int3
push
adc
in
inc
insb
push
pop
aam
cs
sub
xor
aad
push
out
std
jl
pop
addr16
fs
push
adc
mov
in
sub
lock
push
push
mov
push
daa
cs
push
fs
inc
data16
test
sbbb
adc
pop
jecxz
inc
stos
push
int3
sti
push
xor
cmp
xchg
lret
push
imull
iret
mov
nop
enter
cmp
adc
xor
fs
movsl
mov
decb
sarb
mov
dec
mov
rorb
sub
sahf
inc
in
mov
sbb
ret
sub
mov
dec
popf
mov
outsl
lea
mov
mov
cmc
xor
xchg
mov
jnp
enter
pop
daa
enter
jmp
fs
jb
jbe
ror
jle
xor
jp
out
divb
jp
mov
leave
jge
shlb
xchg
lea
repnz
insl
in
sub
sub
pusha
xor
pushf
stos
sahf
xor
xchg
xchg
push
icebp
decl
jbe
push
int3
and
lcall
popa
in
in
xor
jp
imul
mov
daa
in
mov
mov
jg
push
lret
pextrw
push
call
push
jnp
lcall
cmpsb
or
mov
or
in
pushf
mov
or
test
and
sbb
fmull
loope
sahf
enter
testl
cmp
call
xor
inc
enter
mov
stos
jge
adc
cmp
inc
clc
jecxz
out
adc
xorl
cmp
int
cmp
fnstsw
test
std
jne
cmp
adc
aaa
and
dec
jecxz
nop
pop
lcall
or
fwait
ret
cwtl
sub
in
push
pop
and
imul
out
daa
pop
sbb
mov
dec
scas
push
dec
jle
adc
decb
movsl
in
jne
jl
add
lret
aas
sbb
aaa
sub
test
push
push
mov
xchg
inc
mov
mov
mov
mov
push
push
mov
div
dec
je
inc
xor
mov
add
int
ret
inc
dec
push
pop
mov
test
mov
adc
loop
icebp
movsb
mov
xchg
pushf
aas
out
sub
pop
add
add
inc
and
and
cmp
sti
rolb
es
xchg
push
lods
xchg
andl
push
cmpsb
fistpll
cmc
sub
ret
clc
mov
rcrl
inc
imul
mov
insl
mov
xchg
call
dec
mov
test
movsl
clc
add
out
sub
jo
add
cmp
clc
and
lahf
xor
jg
jmp
shll
lods
push
rorl
push
fisubs
fcomi
pop
out
sbbb
inc
xor
out
cli
mov
mov
mov
pop
test
jl
cmc
je
fwait
mov
jmp
jno
es
cltd
jp
or
cmp
mov
mov
push
or
pushf
sbb
mov
mov
test
negb
cmc
ss
mov
stc
rol
inc
je
shl
stc
dec
inc
pop
push
lods
test
ds
or
and
sub
nop
in
loope
pop
stos
sahf
and
sbb
test
push
inc
movsb
call
addr16
es
fsubr
sub
cld
insb
add
add
pop
jne
cmp
and
int3
int
mov
arpl
adc
ljmp
lcall
test
push
out
movsl
pushf
push
aas
pop
arpl
fisubrs
je
repz
mov
and
pop
mov
or
jbe
data16
jmp
jecxz
fs
jae
in
push
ret
pop
xchg
scas
in
push
and
inc
daa
mov
sub
stos
mov
xlat
or
or
loopne
push
pop
pop
mov
repnz
insb
inc
pop
mov
and
sbb
xchg
mov
mov
cbtw
ds
mov
jmp
gs
repnz
push
adc
jo
sub
mov
inc
mov
pushf
in
sbb
cld
mov
dec
in
push
mov
mulb
sub
rol
mov
sahf
jb
inc
fidivs
aaa
aaa
popf
adc
mov
xchg
and
sbb
imull
call
inc
xchg
jecxz
int
std
xlat
and
jne
jo
jg
xchg
sub
mov
pop
loope
lods
pop
add
loope
into
out
jecxz
inc
popf
mov
loop
mov
jnp
loop
sbb
fcmovb
imul
hlt
mov
addr16
stos
sbb
xchg
sbb
fldenv
imul
or
jp
mov
dec
dec
mov
sbb
adc
jae
fstp
je
adc
movsb
test
push
icebp
mov
orb
cmpsl
rcll
sbb
dec
mov
pop
mov
scas
xlat
jg
insl
mov
lds
inc
ret
push
icebp
test
or
mov
in
out
add
ret
mov
inc
ljmp
push
dec
cmp
cmp
inc
popa
fadd
dec
push
pop
dec
data16
and
negl
cwtl
mov
and
dec
mov
loop
cmp
mov
or
add
push
sub
lods
cmpb
jl
adc
lds
scas
stos
dec
mov
pop
inc
stos
bound
fcomi
lret
inc
lahf
pop
xchg
aam
es
les
xchg
ss
or
jecxz
popf
test
sub
cmp
scas
mov
test
xor
jp
dec
mov
xchg
js
cmp
sub
aam
adc
mov
add
sbb
sbb
or
mov
icebp
imul
scas
add
in
out
mov
bound
inc
inc
push
int
test
cmp
out
pop
fwait
or
in
adc
cmp
add
popa
dec
add
and
stos
bnd
push
mov
sbb
ja
xchg
lcall
movsb
cmc
inc
jle
ret
fs
dec
and
mov
loopne
or
shll
adc
decl
sub
scas
ja
test
imul
cmp
and
into
pop
adc
out
repnz
cmpsl
cmp
rep
pop
mov
daa
mov
arpl
scas
inc
push
add
inc
mov
sbb
enter
aam
push
orl
movsb
sbb
pop
push
shl
dec
loopne
adc
and
push
cmp
roll
movsl
or
imulb
lar
sub
mov
int
or
push
push
lea
push
js
adc
imul
push
andl
rclb
mov
sub
inc
hlt
xchg
inc
push
mov
xor
jne
push
repz
in
or
push
jbe
push
add
ret
in
repz
scas
jl
mov
ret
ss
lahf
in
int3
or
mov
cmpl
cmpsl
and
aad
popf
push
mov
fcmovbe
fcomps
ret
pop
dec
sub
push
pop
sbb
sbb
insb
jecxz
bound
inc
adc
test
add
cmp
pushf
inc
push
jne
push
cltd
dec
mov
icebp
xchg
mov
sub
mov
out
cmp
bound
inc
pop
xchg
dec
daa
mov
push
sub
leave
fsubr
add
and
ja
sub
sarb
nop
sub
filds
cwtl
inc
lret
and
lea
das
shrl
jb
cli
jl
outsb
mov
and
jae
gs
ljmp
insl
stc
or
sub
icebp
push
data16
dec
cmp
xchg
sub
cmp
xor
dec
dec
and
movsb
repz
les
mov
ljmp
add
xor
dec
mov
mov
out
pusha
xlat
push
movq
loope
ret
idivb
pop
mov
lods
pusha
sbb
and
cld
jmp
jmp
push
int
adcl
les
adc
call
dec
in
loope
test
scas
push
push
insb
je
adc
inc
jno
in
xor
dec
dec
test
inc
stos
and
call
push
ds
clc
cmpsl
outsl
out
cmp
nop
push
sahf
xor
jle
sbb
mov
addr16
mov
sbb
outsb
mov
mov
nop
in
ret
sub
imul
mov
xor
repz
lods
stos
mov
or
mov
cs
int3
ds
sbb
aam
mov
fnstenv
test
aas
xorl
into
xorl
pop
aam
or
loopne
cmpsb
pop
jge
popa
jae
or
mov
jmp
fdivs
xchg
jle
mov
jle
push
xor
testb
cmp
js
fsubrs
lods
sub
loop
cltd
sbb
and
and
push
aad
shll
cmp
mov
adc
xor
dec
inc
push
fldcw
cwtl
mov
adc
fwait
lcall
and
jo
js
mov
rolb
lods
jnp
sbb
sahf
dec
out
enter
stos
sbb
mov
aas
in
push
lods
scas
mov
vcvtdq2pd
cld
push
arpl
outsl
bound
imul
gs
or
in
pop
xchg
push
std
jnp
pop
ret
in
fcoms
jle
sbb
icebp
xchg
sahf
xchg
lds
jl
test
jmp
dec
or
in
dec
ja
out
pop
mov
xchg
pushf
fwait
inc
jns
jl
jae
inc
ljmp
mov
adc
pop
sub
pop
push
lret
lds
or
icebp
cmc
or
xor
out
rolb
xchg
sbb
push
push
cmpsb
repz
pushf
xor
into
mov
pop
jg
pop
push
sub
push
push
and
jl
add
in
arpl
or
inc
cmpsl
lret
xchg
jne
dec
in
mov
adc
mov
ds
repz
int3
dec
sbb
js
adc
xchg
pop
into
imul
mov
sub
sbbb
jp
jae
jbe
push
scas
jnp
push
inc
sbb
rorl
sub
sub
je
pop
outsb
pushf
enter
out
dec
jl
dec
fmull
call
or
pop
or
ret
lret
push
iret
sub
aad
leave
cmp
sbb
pusha
loopne
push
dec
jge
repz
sbb
xchg
ret
inc
xchg
leave
push
cmc
sbb
jmp
mov
loopne
clc
pop
dec
sbb
aad
sub
inc
xchg
sbb
jns
arpl
loopne
xchg
sahf
push
jp
jno
dec
push
repnz
sub
mov
das
insb
sbb
mov
lods
cwtl
push
push
arpl
insl
or
xor
mov
sbb
ja
lock
mov
and
test
les
nop
dec
inc
push
push
xchg
xchg
out
adc
or
push
mov
js
sub
pop
add
mov
daa
mov
scas
mov
popa
jle
pop
shlb
outsl
cli
add
jg
lahf
xchg
jns,pn
fsts
jmp
and
movsb
lret
test
pusha
add
clc
outsb
std
mov
xchg
dec
jnp
aam
mov
insl
pusha
call
dec
xchg
cmpsl
sbb
les
push
pop
mov
push
adc
push
or
insl
ret
movsb
cmp
inc
fstps
fisttpl
push
fistl
or
lea
mov
out
adc
mov
pop
sti
aas
inc
xor
repnz
inc
enter
fbld
pop
in
pusha
jle
pop
dec
mov
xor
in
stos
adc
add
and
mov
jmp
ss
mov
mov
lods
xor
xchg
arpl
shlb
xor
inc
mov
das
dec
sbb
loop
testl
mov
test
cmp
and
popa
daa
xor
mov
or
mov
mov
push
hlt
jp
sub
mov
push
cmc
and
sti
jbe
mov
jmp
out
mov
sbb
cmpb
out
lea
gs
neg
ss
pop
arpl
and
and
pop
and
inc
imul
inc
int3
stos
sar
cmpsb
popl
cmpsl
xlat
jbe
jmp
decl
pop
lahf
xor
repnz
insb
pop
aad
jg
fildll
flds
lahf
push
fcompl
cltd
adc
outsl
into
cwtl
push
sarl
hlt
sbbl
jmp
xor
mov
aaa
aad
push
mov
inc
aad
addr16
cmpsl
add
adc
ja
das
enter
aas
push
mov
outsb
adc
mov
popa
loope
aaa
and
cmp
stos
pop
pop
test
mov
lahf
mov
mov
mov
push
jl
mov
jne
repz
out
sbb
fsubrs
cmp
into
cmp
fmul
cld
ljmp
ja
hlt
or
rol
hlt
xor
ficoml
addb
adc
mov
fisubrs
repnz
aam
popf
jmp
das
cmp
nop
dec
jmp
ret
daa
push
stc
or
jmp
push
jle
xor
inc
dec
movsl
dec
dec
cld
fstpt
cmpsl
xchg
out
dec
inc
fcompl
out
push
lret
jecxz
fs
push
popa
or
or
fs
xor
shll
test
xchg
xor
jp
aad
inc
ss
pushf
das
movsl
ljmp
xor
jb
lds
or
jb
inc
ficomps
arpl
add
ret
inc
gs
sbb
adc
mov
ficoml
push
fadds
and
repnz
push
fidivs
and
bound
enter
in
add
push
stos
jmp
fs
sbb
movsb
push
call
jnp
mov
test
adc
movl
push
xchg
shr
sbbl
add
push
out
call
adc
fisttpll
lcall
fwait
or
dec
aad
jmp
out
mov
jl
sub
lahf
scas
pop
push
iret
out
cltd
fsts
pushf
addw
ficompl
and
jae
gs
inc
jmp
mov
inc
hlt
xchg
adc
rolb
call
jecxz
mov
repnz
fistl
ret
es
mov
inc
je
pop
sbbl
cld
jnp
je
adcb
sub
pop
mov
push
ficoms
xchg
lahf
xchg
mov
test
mov
inc
fsts
sub
fucomip
xchg
imull
dec
cs
daa
scas
rcl
icebp
or
shlb
shlb
mov
pusha
xchg
push
xchg
mov
and
mov
xor
xor
cmpsb
ret
jl
jbe
lock
popa
inc
mov
cld
sub
or
xor
and
pop
ss
enter
xchg
sbb
divl
mov
adc
imul
fwait
pop
clc
mov
shrl
mov
popa
jecxz
jp
jg
adc
lcall
js
mov
cmp
xchg
std
imul
xor
nop
out
pop
push
or
ret
into
jmp
push
push
mov
xchg
pop
arpl
lea
push
jmp
inc
push
push
pop
dec
pusha
movsl
into
add
pop
add
pop
jecxz
and
out
add
add
and
test
mov
and
push
scas
mov
push
jb
cltd
outsl
jae
fistl
dec
cmc
jg
cmc
mov
sar
je
test
mov
push
push
inc
sub
sub
sbb
mov
ljmp
pop
iret
out
test
outsb
ljmp
shll
add
jecxz
stc
add
mov
jnp
adc
sbb
leave
fdivs
xchg
add
pop
pop
add
push
cmp
in
fnstcw
mov
jae
mov
icebp
ret
mov
sahf
rclb
fwait
inc
ja
inc
add
inc
mov
jo
dec
inc
in
mov
ret
mov
mov
push
sbb
mov
and
ss
lea
scas
inc
fwait
sub
dec
fsubrs
adc
mov
enter
mov
mov
daa
jecxz
cmp
cmpsb
nop
repz
cmc
push
ret
or
fsubp
cmpsl
loope
mov
mov
push
jnp
sub
lods
sub
adc
shlb
mov
and
outsb
adc
cmp
jecxz
gs
fistpl
mov
hlt
test
insl
and
push
add
push
xchg
push
push
mov
out
out
call
jmp
out
pusha
mov
add
adc
das
push
pop
sbb
lahf
aam
hlt
lock
xchg
imul
mov
sbb
addr16
add
add
sub
push
adc
inc
and
dec
aam
fadd
sbb
int
aaa
arpl
jo
sahf
dec
inc
add
add
inc
in
out
inc
push
mov
dec
inc
div
loop
data16
ficomps
mov
sbbw
sub
adc
dec
push
das
inc
jae
or
or
sahf
enter
stos
andl
mov
cli
fsubrl
mov
shr
lret
cmp
pop
rorl
push
and
cmpsb
ljmp
cltd
fsubrs
sbb
push
and
adc
jo
icebp
sub
jns
arpl
aam
in
add
jle
popf
inc
cld
in
adc
and
sub
outsb
mov
xor
sarl
repz
aad
nop
push
mov
rclb
gs
js
jmp
bound
out
jo
popf
mov
jnp
mov
pop
rcrl
notb
mov
adc
movsl
lret
stc
xchg
cmp
inc
and
mov
fwait
push
jno
and
and
and
push
jns
push
scas
lea
cmovnp
sbb
pop
addr16
and
imul
xorb
pushf
mov
push
and
adc
fdivs
xchg
popa
arpl
jne
mov
adcl
mov
mov
inc
mov
cld
sbbb
lea
leave
push
into
stc
cmpsb
mov
cld
jg
mov
xchg
cmp
lahf
jae
stc
jo
movsb
sahf
jae
outsb
or
push
hlt
add
fimull
test
push
mov
jp
shl
leave
add
jb
mov
inc
cmc
cmp
shll
rcl
inc
sub
aaa
add
push
pop
pop
adc
inc
rol
xor
pop
ja
roll
rorl
push
dec
jae
adc
pushf
roll
mov
push
sub
js
mov
je
std
mov
jbe
push
mov
or
mov
sub
jp
mov
or
clc
out
inc
rcrb
outsb
ds
loop
xor
repnz
movsb
lds
sub
sub
fists
mov
adc
je
std
pop
xchg
inc
fld
cld
popf
mov
add
and
aaa
add
inc
xchg
lods
push
lcall
fisubrs
out
jle
mov
scas
sbb
xlat
sbb
test
lret
sub
mov
xor
xchg
iret
shrl
add
and
outsb
nop
add
push
bound
xchg
cmp
cmp
js
mov
sub
fadd
bound
adc
fwait
push
pop
sahf
je
scas
mulb
lret
xchg
mov
dec
sahf
sub
or
mov
jne
add
mov
mov
cmp
push
pop
adc
mov
loop
imul
dec
mov
add
or
dec
cmp
js
jp
sub
popa
dec
adc
in
jb
int
pushl
xor
bound
aad
gs
in
push
xchg
daa
add
stc
inc
faddl
imul
movsl
xor
mov
out
fidivs
ljmp
roll
jp
jo
pop
push
scas
xor
lock
cwtl
ds
es
sub
add
sbb
xchg
add
sbb
in
lret
adcb
adc
add
push
adc
pop
sbb
sbb
push
pusha
enter
mov
dec
aad
inc
jae
mov
movsb
or
ljmp
cwtl
and
vmovapd
mov
inc
icebp
sub
sbb
inc
je
ljmp
out
mov
movsl
cltd
inc
mov
imul
pop
lds
sbb
mov
incb
ss
icebp
jno
test
notl
call
mov
mov
sub
pop
mov
dec
mov
out
cmpsl
pop
lods
push
mov
add
sbb
pusha
sbb
mov
dec
push
shlb
xor
xchg
pop
pop
dec
lds
and
sbb
mov
dec
add
mov
inc
push
cmp
fadd
or
or
push
jl
mov
add
push
dec
outsl
sub
pop
lcall
arpl
push
add
mov
mov
xchg
push
and
adc
mov
popf
pop
mov
cmpsl
lods
loopne
repz
iret
jb
mov
add
fwait
outsl
insb
or
jno
inc
js
mov
daa
fistl
movsl
pop
dec
and
insl
dec
inc
pop
stos
sbb
adc
pop
imul
push
mov
and
pop
shll
outsl
in
cmp
data16
test
push
shrl
add
fildll
jl
and
push
test
mov
movsl
dec
sbb
inc
cmpsb
test
arpl
dec
pop
scas
pusha
sahf
lahf
rorl
mov
aas
mov
fistpl
adc
dec
xlat
xchg
fcomip
out
mov
mov
lea
arpl
xchg
setb
cmc
cmp
mov
or
stc
in
test
loope
jns
popf
out
dec
mov
idivl
fcmovbe
pop
mov
add
cmp
mov
testb
pushf
dec
fnstenv
push
jno
movsl
fimuls
xchg
in
pop
loop
mov
mov
imul
mov
pop
mov
jl
push
mov
jge
cmc
hlt
jne
pop
dec
int3
push
cmp
test
test
mov
mov
cli
test
test
xchg
ds
inc
or
and
push
xor
out
fistpl
dec
std
inc
fmulp
push
movlhps
mov
mov
and
aaa
cmp
pop
jne
inc
incb
call
ficoms
jmp
pop
in
dec
jg
xor
mov
adc
in
movsl
in
insb
push
xchg
inc
inc
mov
mov
into
out
mov
rolb
pop
jo
mov
or
inc
push
push
cmp
sahf
aas
sarb
loop
add
fstps
leave
inc
enter
mov
add
add
les
adc
pop
pop
iret
test
lea
fisttpll
call
movl
inc
lock
mov
cmc
add
jmp
pop
push
mov
pop
sbbl
push
mov
pop
frstor
add
in
cwtl
fcmovnu
xchg
scas
cltd
jbe
repnz
std
loop
mov
mov
ret
and
or
adc
mov
test
push
stos
jbe
jl
test
in
dec
inc
mov
insb
xchg
mov
mov
mov
jge
add
dec
mov
sbb
cwtl
mov
ret
rcr
pop
inc
adc
push
lds
lret
fcmovnbe
jle
jmp
jle
mov
movsb
arpl
aas
xor
lock
jbe
icebp
push
aaa
dec
cmpsb
iret
movsl
movsl
adc
lods
movl
stos
stos
fmuls
mov
shll
cmp
jmp
mov
dec
push
jb
mov
pop
pop
std
inc
fisubrl
mov
fs
mov
cld
mov
sbb
ss
jns
ficompl
inc
test
test
push
aad
int
dec
adc
faddl
sbb
ret
in
adc
jmp
mov
xor
pushl
mov
mov
push
add
jle
pop
movsl
std
jno
mov
xor
sbb
sbb
jne
stos
rcll
dec
mov
cmp
or
pop
mov
add
idivl
addr16
cmc
xchg
mov
in
outsb
bound
into
daa
inc
test
cmp
adc
fsubrl
sbb
and
xchg
dec
aaa
repnz
cs
lods
insb
or
in
mov
lret
adc
pop
jnp
cmpsb
dec
cmp
das
inc
adc
das
push
je
xchg
das
jp
lcall
in
lods
or
push
fldl
in
mov
mov
stos
popa
push
sub
sub
dec
jb
pop
stc
icebp
fadds
lret
cmp
cmp
addl
mov
roll
lds
stos
imul
jae
mov
or
xchg
or
push
push
mov
lret
roll
pop
jne
mov
fwait
xlat
bound
mov
push
jmp
daa
mov
and
dec
push
out
fildl
test
add
and
imul
bound
lahf
dec
test
jmp
testl
fnstsw
inc
push
or
cltd
lcall
stos
scas
hlt
push
mov
mov
or
pop
jbe
push
loopne
cmp
popa
push
dec
xor
xchg
aas
out
cld
popf
adc
repz
inc
cmp
inc
rcrl
mov
std
jne,pn
add
out
jle
cmc
mov
int3
jl
sub
xchg
in
jbe
push
pop
mov
sub
adc
int
jns
xchg
rorb
cmc
push
fidivs
sub
aaa
lret
push
in
pop
inc
adc
mov
lods
lods
lahf
popa
mov
cmc
and
repz
cmp
and
cltd
pop
mov
xchg
inc
adc
adc
add
leave
insb
div
fsubs
dec
dec
add
int3
pop
sbb
inc
lock
inc
xor
iret
imul
hlt
add
adc
push
pop
cmp
pop
mov
data16
out
in
into
inc
cmp
or
imul
scas
cmc
jb
jg
lea
outsb
xor
xor
in
mov
icebp
cmp
pop
xor
clc
cmp
add
push
mov
test
std
lret
push
sub
in
movsb
inc
mov
or
in
scas
rcr
xchg
add
mov
push
lcall
or
nop
sbb
and
bound
jle
cmpsb
lods
adc
imul
std
das
sbb
hlt
xchg
outsl
and
daa
fmul
fnstcw
cmp
popa
jnp
mov
sbb
jmp
sahf
jg
jg
and
cwtl
dec
call
inc
test
jmp
arpl
mov
xchg
adc
sbb
movsl
adc
jecxz
jg
jo
andb
mov
mov
sbb
inc
push
add
mov
cld
inc
xlat
leave
inc
repz
jle
xchg
xchg
xchg
mov
dec
jecxz
adc
imul
inc
stc
stc
pop
pop
icebp
lods
ss
push
xchg
mov
adc
and
and
mov
in
pop
pop
jno
out
jne
into
sbb
mov
push
inc
pop
mov
sbb
ret
gs
add
lret
jle
and
mov
ja
mov
push
repnz
nop
dec
xor
xor
int3
jp
repnz
xchg
mov
push
cmp
ret
nop
xor
jl
cmpsb
scas
adc
loopne
pushf
call
add
jbe
lock
mov
xchg
fnsave
lcall
pusha
lods
sbb
add
jmp
lcall
dec
dec
icebp
and
nop
cli
mov
and
addl
popa
mov
leave
into
out
ja
jns
mov
push
cmp
aam
cmc
xor
jmp
ljmp
fwait
pusha
cmc
aam
faddl
jg
inc
cltd
scas
push
repnz
rcr
pop
pop
lcall
jmp
push
mov
addl
and
jge
out
pop
push
mov
mov
xlat
out
rcrl
inc
add
jns
add
adc
imul
push
test
xor
dec
orb
pushf
fstpl
xchg
and
into
ljmp
adc
aaa
and
sbbl
scas
ss
enterw
jnp
jge
or
jecxz
jo
cmpsl
cmp
shll
xchg
in
cli
push
sub
mov
rcl
xchg
sbb
xchg
test
sbb
scas
aam
or
in
mov
mov
andl
sub
aam
outsl
dec
mov
sub
into
push
lock
dec
nop
push
sti
sbb
inc
xor
hlt
mov
cmp
outsb
pop
xorl
sub
leave
add
testb
or
pop
ret
lea
aaa
push
xchg
sub
int3
pop
stos
mov
stc
jmp
std
insl
push
mov
dec
movsb
mov
ja
lods
cmp
jle
ss
std
xchg
ja
sbb
and
adcb
or
sti
lret
dec
sti
dec
or
or
je
cmp
jb
mov
inc
mov
ljmp
cs
mov
xchg
or
aaa
aaa
mov
sbbl
imul
lret
loopne
clc
xchg
sub
adc
lret
add
popa
ss
inc
daa
ret
inc
repz
fimuls
cmp
xchg
sbb
bound
mov
fiadds
xchg
arpl
fisttpl
repz
std
shll
and
push
mov
add
mov
fstps
mov
lcall
inc
loopne
rorb
inc
or
cmp
inc
inc
fs
mov
jecxz
cmp
movsb
pop
jecxz
andl
jecxz
inc
fistl
lcall
aad
sub
fnstsw
adcl
cmp
push
add
imul
jb
into
adc
add
inc
sbb
adc
mov
push
bound
fiadds
dec
loopne
shlb
icebp
add
jbe
xchg
and
push
or
pop
jl
out
sarl
add
sbb
outsb
imulb
mov
fcompl
xor
int
leave
lret
pop
push
rcr
aaa
js
xlat
ds
imul
fucom
jp
lock
or
int
fstpl
stc
xchg
push
repnz
fistpll
movl
cmp
xor
jl
lcall
and
add
lcall
inc
jle
pop
nop
adc
or
bound
sbb
pop
jecxz
push
xchg
dec
inc
and
mov
aam
xchg
lahf
ret
jp
lock
adc
pushl
out
imul
cmp
xor
mov
inc
jo
fstl
pop
pop
pop
push
mov
inc
push
mov
loope
push
dec
cmp
sbb
or
xchg
pusha
mov
scas
rcrb
fists
cmp
mov
inc
mov
lods
lret
test
mov
rorb
nop
arpl
jmp
jns
mov
push
jp
sti
nopl
adc
mov
cmp
xor
pop
add
data16
call
xchg
push
inc
in
xchg
xchg
dec
imulb
stc
fcompl
xchg
dec
mov
jae
mov
push
or
and
dec
push
inc
movsl
and
xchg
je
adc
cwtl
inc
lods
aad
pop
or
cmp
push
out
pop
fisubl
aad
lods
loopne
les
cmp
xlat
cmp
stos
push
push
dec
push
mov
out
out
push
dec
xchg
daa
outsl
or
outsb
mov
sbb
push
push
cmp
daa
rorb
xorl
mov
jb
pop
mov
inc
test
mov
mov
sub
mov
pop
mov
imulb
xchg
sub
mov
mov
cmpsl
cli
jno
sub
push
jge
sbbb
sahf
rorb
mov
scas
or
dec
push
in
mov
fldcw
mov
mov
push
outsb
cwtl
xor
push
push
push
push
or
sbb
fcom
movsl
mov
fwait
ljmp
dec
dec
popa
sbb
sahf
aas
sub
jecxz
mov
mov
sub
mov
ja
jmp
or
iret
sbb
jbe
dec
test
adc
push
sahf
add
orl
shll
sub
mulb
lods
push
pop
mov
shr
in
dec
les
mov
dec
pushf
mov
jne
sti
jo
adc
mov
inc
cmpsb
mov
mov
in
dec
out
cltd
xchg
bound
mov
inc
mov
dec
add
mov
jns
jae
pusha
cli
jmp
fbld
sti
cwtl
rolb
ljmp
jnp
mov
xlat
dec
xor
sbb
lods
mov
jge
jno
ss
jecxz,pn
push
push
cmp
adcl
and
rcrb
sbb
xchg
dec
aam
popf
lahf
xor
mov
jecxz
hlt
pop
mov
mov
in
movsl
add
lcall
popa
fstpl
leave
in
add
adc
es
sub
fadds
out
cli
xchg
inc
shl
xlat
loope
xor
ficomps
inc
out
and
xchg
mov
movsb
in
divb
cmc
call
and
sbb
pushl
jne
dec
repz
dec
lahf
add
and
fld
ds
negb
pop
or
shl
in
cmpsl
aas
pusha
add
pop
in
and
pop
pop
jne
test
or
out
fmulp
adc
adc
and
pop
lods
sub
mov
xor
mov
fstpt
add
mov
imul
xchg
dec
and
movsl
mov
mov
and
sub
call
dec
or
bound
adc
popa
lock
dec
addr16
and
inc
daa
aam
mov
popa
cmp
rorb
jle
push
sbb
inc
dec
or
xor
cmp
mov
mov
jmp
vpminsw
out
inc
out
jbe
xor
inc
push
imul
mov
jno
pop
mov
inc
daa
popf
xor
lds
mov
lea
pop
inc
ret
or
jbe
std
dec
icebp
js
push
dec
dec
stc
mov
sbb
jbe
push
into
aaa
or
outsb
dec
jae
aad
sbb
and
insl
loope
inc
popf
sbb
cmp
jmp
cmc
mov
mov
xor
or
pop
insl
and
mov
movsl
add
fdiv
xor
mov
lcall
jle
add
xchg
jbe
mov
push
push
iret
add
nop
rorl
scas
pop
inc
dec
inc
out
aad
dec
xchg
cmp
cltd
or
add
dec
je
mov
jb,pt
jo
sti
out
cld
mov
and
fistpll
xor
fsubrs
aas
sub
sub
cmp
inc
popf
add
pop
clc
fildll
or
popf
jle
ljmp
movsb
pop
iret
dec
fstl
push
mov
lretw
cmpsb
jno
cmpsl
cmp
sub
out
mov
and
inc
cmp
mov
sub
inc
sbb
pop
and
arpl
adc
stos
pushf
in
lret
pop
stc
sub
dec
sub
inc
add
jl
out
nop
mov
mov
imul
cs
out
inc
arpl
mov
or
xchg
cmp
arpl
mov
lcall
scas
aad
cmpb
cmp
clc
xchg
cmpsb
repnz
and
sub
bound
pop
mov
fcom
dec
adcl
ret
jl
push
pusha
aaa
inc
push
and
dec
dec
sbb
shlb
mov
sub
negl
repz
gs
pop
rcl
xchg
jmp
mov
andl
xor
xchg
push
test
mov
vfrczps
minps
and
sbb
and
stc
sbb
sub
pop
sbb
ficompl
aas
negl
call
push
cld
rolb
dec
rolb
push
dec
stc
sbb
shll
jp
mov
lea
scas
inc
popa
push
push
xchg
cwtl
iret
mov
adc
adc
pop
xor
add
shlb
dec
mov
add
sbb
jp
je
pop
sbb
stc
movsl
mov
pop
outsb
push
jae
fisubrs
jb
es
test
scas
dec
push
xor
adc
popf
xor
sbb
sub
outsb
cmp
inc
adc
xchg
xchg
in
mov
out
aam
push
cmp
out
sbb
popf
mov
inc
push
xchg
inc
pop
mov
push
outsb
daa
lahf
sbb
stc
push
xor
lret
cmp
enter
mov
jmp
jo
bound
xor
mov
sbb
pop
inc
test
push
cmp
int
stos
sbb
lock
mov
sub
adc
jle
push
pop
aad
inc
xlat
arpl
loope
ds
cmp
mov
stc
or
inc
jnp
jle
cmc
es
mov
shll
mov
test
mov
add
cltd
inc
outsl
cmp
sbb
lret
bound
movsb
and
jns
mov
push
in
jnp
aaa
pop
test
fs
test
test
dec
add
sbb
cltd
mov
inc
sub
scas
iret
int3
xor
andb
add
mov
shll
xor
sub
sub
stos
loop
cmp
test
movsl
bound
mov
or
jge
lret
mov
mov
adc
push
cmp
inc
cld
xchg
mov
xor
daa
cmp
je
popf
inc
int3
fs
repz
xchg
adc
std
movsl
xchg
cmp
pop
testb
or
inc
test
stc
fisttpll
mov
lcall
jge
repnz
jae
mov
push
data16
mov
xchg
cs
add
imul
jg
jne
pop
stos
out
or
add
lock
repnz
call
mov
aam
pop
mulb
or
mov
xchg
push
and
push
subl
in
jp
int
sub
and
and
js
mov
mov
xor
in
mov
cs
mov
mov
and
jge
cmp
mov
jp
cmp
cmpsl
mov
mov
adc
xor
inc
in
inc
jno
rcrb
xor
pop
std
frstpm(287
mov
mov
sub
jp
mov
xor
sub
lock
scas
dec
fcmovbe
jns
push
pop
or
outsw
sub
mov
add
adc
ss
ds
xor
dec
jo
push
mov
add
jb
fsts
sub
adc
sbb
and
sbbb
mov
jg
mov
insb
mov
fistps
adc
cld
cmp
dec
std
in
lret
cmc
mov
sbb
adcl
rolb
call
in
push
imul
fadd
hlt
pop
adc
outsb
dec
outsb
add
cmp
dec
adc
shl
xor
sub
jns
mov
or
mov
rcll
jmp
mov
dec
cmpsl
ret
pushf
movsb
mov
mov
mov
insl
adc
roll
or
fs
outsb
pop
push
pop
int3
xchg
fst
xchg
shll
hlt
inc
sub
mov
out
flds
inc
mov
or
adc
xor
pushf
mov
sahf
dec
stc
pop
cmp
cs
fldcw
rcl
stos
stos
cld
push
ds
loop
in
rcr
cmpsl
sub
dec
xchg
outsl
lock
inc
leave
pop
inc
in
hlt
mov
mov
mov
negl
cwtd
inc
xchg
jne
ret
sub
in
int3
ret
xor
add
xor
call
push
xchg
stos
push
inc
bound
lcall
inc
cmp
dec
add
cmpsl
and
cmc
sub
imul
aas
outsb
mov
imul
and
xor
mov
idivl
loop
xchg
pop
test
addr16
test
xor
icebp
mov
mov
cmpsb
aam
pop
cmc
jbe
adc
lods
fdivrs
adc
movsb
push
cmp
cmp
std
int3
iret
push
sub
xorl
or
lods
lahf
and
aas
subl
cmc
add
lea
inc
std
sbb
pop
adc
loope
or
sub
lahf
in
call
xchg
aad
fwait
jne
mov
addr16
fistl
in
idivb
mov
nop
adc
xor
and
repz
lods
adc
add
add
and
add
adc
outsl
or
test
enter
pop
mov
dec
mov
mov
or
and
mov
loopne
and
adc
imul
add
daa
pushf
or
outsl
imul
cld
push
out
cmp
and
jmp
mov
cmpsl
mov
popa
adc
jbe
fstps
xchg
push
push
mov
jb
mov
sahf
push
je
nop
stos
dec
sti
push
mov
imul
xchg
push
adc
mov
addb
pop
int3
clc
lret
popa
push
test
pushf
inc
js
xor
divl
sahf
fstpt
imul
rcll
adc
sbb
imul
iret
mov
insl
imul
dec
movsb
testb
ds
in
lahf
xor
inc
xor
dec
les
nop
mov
aaa
and
add
mov
jbe
jne
test
pusha
adc
push
push
pop
sub
push
ljmp
pop
repz
js
aad
call
mov
addb
adc
pop
mov
mov
fisubs
xor
in
scas
rcrl
ja
mov
clc
cmp
daa
pop
lret
lds
xchg
push
fmuls
xor
and
loope
push
xchg
addr16
mov
or
mov
inc
push
sbb
dec
push
js
jb
sar
rcll
push
pushf
iret
lcall
cmp
adc
mov
mov
clc
jp
and
xor
xchg
or
jp
xchg
xchg
inc
lret
flds
jp
int3
jge
fisubl
sub
xlat
xor
mov
xchg
cld
pushf
fstp
adc
enter
das
mov
sub
push
pop
mov
fs
hlt
mov
mov
leave
mov
out
pushf
adc
pop
pop
testl
leave
imul
xor
shrb
jecxz
popf
add
loop
cmp
sbb
das
add
mov
nop
subl
or
cmpsb
or
fmull
adc
mov
jl
and
icebp
xor
pop
repz
mov
push
mov
push
mov
fdivs
xchg
stos
mov
aas
les
push
enter
test
hlt
adc
mov
testl
std
lret
adc
fisttps
xchg
fisttpll
mov
jp
stc
icebp
jge
lret
addl
cmpsl
movsb
xchg
xchg
cmpsb
loopne
scas
sub
lock
sub
sub
fld
enter
sbb
clc
push
add
pushf
or
aaa
mov
test
divb
roll
adc
dec
or
call
scas
lret
rcll
jo
insl
enter
jg
in
add
icebp
mov
mov
ud0
xor
sbb
sub
mov
push
jecxz
scas
mov
xchg
js
out
ret
cmp
sbb
fisttpl
pop
negl
stc
push
mov
sub
add
inc
mov
jbe
jl
pop
loope
out
orl
add
cmp
test
repz
inc
ror
loop
sahf
or
scas
xor
int
cmpxchg
push
ljmp
mov
dec
into
mov
fldt
cmp
arpl
fcomps
adc
std
rcll
sub
daa
push
fwait
aam
adc
psllq
in
sbb
stos
sub
push
adc
movsl
mov
mov
adc
mov
xchg
mov
sub
repz
push
add
jge
inc
in
lret
ljmp
xorl
and
hlt
cmc
fcoml
mov
mov
xchg
stos
call
clc
sbb
cld
push
or
pop
fidivl
stos
in
pushf
fdivl
mov
inc
pop
pop
out
pop
adc
lods
or
test
inc
push
cmp
popa
into
add
repnz
dec
mov
cltd
mov
cmpsl
sub
test
cmpsl
xchg
add
mov
jmp
xchg
jae
pop
dec
mov
fsubr
xchg
popa
fnstcw
jp
dec
pop
xorl
loopne
loope
out
repnz
addr16
pop
mov
pop
cld
mov
mov
xchg
cmc
inc
ret
gs
movb
stc
inc
cmc
adc
imul
mov
arpl
push
mov
pop
stos
mov
fstpt
sub
sub
push
push
xlat
iret
add
mov
test
or
repnz
mov
clc
xor
fwait
or
les
xlat
imul
mov
push
pop
gs
dec
cltd
test
nop
and
jp
loop
mov
jnp
in
mov
cli
pop
hlt
mov
mov
sbb
sbb
push
aam
call
mov
fs
les
fnstsw
inc
jns
test
int3
sbb
jae
cmp
sbb
cmc
cwtl
incl
or
out
out
in
lods
pushf
loopne,pn
mov
cwtl
xchg
or
inc
out
cmc
pusha
mov
mov
mov
sahf
ja
inc
cld
xor
stos
add
xchg
ficoms
cld
jno
jno
pop
mov
or
imul
or
arpl
stos
insb
cmp
ss
inc
cli
insb
jl
xor
gs
fwait
je
sub
adc
pop
dec
es
imul
pop
mov
inc
adcb
addr16
out
and
stos
mov
pop
xchg
xor
aaa
inc
sub
leave
jns
pop
and
adc
into
lret
cltd
mov
cltd
sbb
dec
sub
cmpsl
cmp
sahf
std
je
push
xlat
or
push
fistps
xchg
ja
pop
rclb
mov
xchg
cmpsb
mov
mov
dec
jns
pop
fidivrl
pop
inc
mov
xor
movsbl
adc
popa
push
cmp
out
or
mov
inc
adc
not
lea
cmpb
adc
aad
popl
das
xchg
in
fldt
adc
das
daa
int3
jno
or
push
push
jp
mov
jle
pop
xchg
cmpsl
mov
dec
sbb
adc
loopne
ret
pop
jge
xchg
pop
enter
dec
mov
xchg
lcall
mov
sbb
in
shl
int
stc
cmpsl
cmpb
xor
daa
stos
aam
xchg
repz
jns
stos
into
jbe
pslld
cmp
hlt
xlat
mov
xchg
adcb
dec
cmp
or
xor
hlt
ds
inc
pop
cmp
mov
popa
xor
lret
rcll
andl
jl
cwtl
test
cmp
das
pop
and
lret
inc
out
int3
lret
das
pop
aam
enter
aas
cmpsb
xchg
cltd
fistpll
jno
ljmp
mov
mov
scas
mov
xchg
add
repnz
loopne
inc
xor
cli
push
clc
xor
cmp
divb
aad
out
sub
je
mov
pusha
jo
add
mov
insb
adc
sbb
outsl
mov
inc
aam
pop
xchg
push
add
mov
and
loopne
out
dec
aad
cmpsb
pop
outsb
mov
loop
das
jge
xorl
scas
fisubl
adc
mov
xchg
jecxz
mov
cmp
jb
lahf
push
ljmp
movb
in
fdivrs
repz
sub
data16
lret
sbb
rolb
and
shrl
jg
and
push
aad
xchg
mov
loopne
dec
sub
push
dec
and
sbb
insb
out
iret
sub
and
lea
inc
rorl
js
push
movsl
gs
push
mov
dec
mov
mov
xor
fsts
lock
sub
std
add
sbbb
push
push
aas
jnp
sarl
jbe
jns
imul
sbb
xorb
and
mov
cmpsl
mov
movl
aad
flds
stc
mov
sarb
or
jno
in
mov
cmpsl
push
and
mov
fnsave
inc
outsl
pop
decl
jno
xchg
cmp
mov
data16
lods
cli
mov
sub
imul
movsl
or
jb
sub
roll
loopne
sbb
gs
jl
xchg
data16
mov
shrl
push
test
popa
lock
mov
dec
fisubrl
sub
xor
xor
inc
aam
xor
and
mov
push
adc
jo
push
pop
cmovg
hlt
in
or
pop
es
jp
or
xor
fisubrs
test
leave
dec
sahf
pop
mov
stos
idivl
arpl
and
mov
adc
sub
loope
xchg
push
cmp
add
push
push
dec
sub
push
out
lods
mov
add
sbb
sub
int
mov
mov
scas
loop
rclb
mov
cmp
fldt
sub
nop
mov
test
dec
lcall
pop
rol
dec
jbe
and
out
std
aad
loop
dec
and
roll
sbb
sub
into
add
loope,pn
mov
pop
aas
lock
push
mov
mov
pop
imul
ja
insb
and
jnp
movsl
sub
jns
sub
loope
movsl
push
push
sti
jge
mov
stos
jg
inc
mov
push
mov
repnz
lock
pop
fstpt
pop
sbb
xorl
popf
je
aad
test
arpl
ss
dec
push
clc
test
jae
sbb
gs
stc
andl
mov
add
repnz
add
insl
or
xor
rolb
jp
xor
mov
in
sub
or
xor
dec
add
jbe
aam
test
jbe
or
inc
mov
das
les
loop
pop
int
inc
orb
cmp
stos
pop
mov
mov
into
dec
int
xor
ret
push
cmp
cmp
pop
jg
mov
cmp
and
mov
call
lods
sub
out
ret
push
stc
ja
mov
adc
enter
scas
iret
ljmp
aad
add
cmp
cmp
mov
pop
into
test
sbbl
scas
fdivrl
scas
icebp
mov
inc
add
je
or
push
push
mov
cli
jge
cmpsl
pop
test
lret
mov
dec
xor
pop
xor
outsl
scas
fdivs
mov
adc
cwtl
mov
jl
mov
sbb
ret
fs
push
and
sub
adc
out
sbb
adc
gs
inc
inc
and
inc
adc
inc
sub
inc
jo
or
loopne
xor
stos
jns
leave
cs
push
insb
popf
js
sub
dec
jne
gs
stos
push
mov
xchg
paddusb
popa
push
inc
adc
int
insl
jp
jl
dec
pop
dec
push
add
movsl
repnz
scas
push
scas
fchs
mov
or
and
pop
push
aaa
xchg
int
and
push
fcmovu
dec
xor
xchg
and
fnstsw
outsb
cmp
pop
lahf
sbb
sub
or
sub
fcmove
rcll
fists
mov
cmp
out
mov
movsb
cmpsb
add
jl
repz
ljmp
and
test
mov
dec
aas
inc
jecxz
xchg
lret
movsb
add
pop
out
movsb
fs
xchg
outsb
sub
shlb
pusha
sub
stos
daa
rcrl
mov
sbb
test
scas
movsl
mov
xor
out
sub
xlat
lea
and
sbb
insl
lret
sbb
idivl
insb
jae
negb
mov
ljmp
mov
mov
dec
cwtl
idivb
sahf
movsl
add
arpl
mov
inc
push
imulb
inc
jl
and
sahf
arpl
daa
jne
xor
push
xor
aaa
data16
negl
pop
push
cli
sti
dec
out
mov
pop
dec
and
cmp
cwtl
cmp
pop
xchg
sbb
arpl
sub
shl
inc
sahf
jo
stos
pop
pop
lahf
mov
mov
xor
in
mov
cmp
xor
cmp
mov
sbb
sub
mov
mov
lds
les
mov
test
adc
cmp
push
ljmp
cmp
xor
jecxz
and
jp
scas
xor
aam
addb
push
jb
mov
sub
leave
lds
and
shr
inc
fs
mov
out
add
xchg
test
vpackuswb
push
cmp
cli
dec
push
test
hlt
cmp
mov
ret
and
sub
dec
pop
mov
mov
xchg
mov
lret
and
dec
addb
adc
xchg
addr16
add
jbe
ljmp
adc
leave
cmp
mov
jo
es
xchg
dec
fisubrs
cwtl
xchg
mov
xchg
sub
and
data16
mov
mov
pop
icebp
js
mov
or
mov
dec
cmp
or
clc
push
push
jb
mov
bound
addr16
mov
or
cwtl
lcall
fidivrs
push
ss
mov
ja
xor
out
cwtl
and
xchg
in
inc
push
jecxz
cmp
mov
hlt
pop
insb
outsl
jbe
mov
sti
xchg
xchg
xchg
std
hlt
push
bound
test
fs
dec
leave
mov
bound
js
sub
in
cs
mov
and
fildl
shll
sbb
sub
add
pop
fwait
data16
cli
fimull
push
sahf
mov
addr16
pusha
adc
loopne
sub
add
repnz
and
jns
in
xor
cmpsl
add
sti
push
repz
or
jmp
mov
xchg
push
dec
dec
pop
cli
and
inc
sub
sahf
mov
push
popa
out
mov
xchg
nop
out
add
cwtl
clc
mov
shr
fs
mov
jno
hlt
jne
sbb
mov
test
mov
test
je
lds
aad
pop
xchg
mov
je
add
or
clc
iret
jae
ljmp
pop
jl
fwait
adc
ss
jns
jl
shl
mov
mov
add
and
xchg
daa
xchg
les
cmp
lcall
jmp
mov
test
inc
fs
vmread
les
sbb
adc
imul
inc
bound
out
and
adc
push
shlb
addr16
ret
fnstcw
xchg
or
lods
sbb
jo
push
push
stos
sub
jp
fs
nop
mov
or
xchg
popa
les
shll
pop
cmp
mov
fs
movsb
adc
cs
lods
cmp
cmc
cmp
mov
inc
mov
xchg
jnp
loopne
ss
mov
cwtl
mov
adc
adc
jg
ret
jg
and
int
push
insb
adc
insl
inc
and
pop
sahf
xorl
pop
cmp
iret
jno
add
xchg
adc
inc
cmp
jbe
xor
and
push
add
mov
cli
inc
loop
popa
sbb
lcall
push
test
lods
imul
xlat
mov
push
test
mov
loop
lods
cmp
mov
xor
mov
add
rolb
addr16
ret
daa
mul
in
cmpsb
outsl
mov
add
mov
mov
addl
mov
add
out
inc
iret
inc
mull
dec
scas
mov
gs
nop
jne
in
int3
inc
sub
or
rcll
test
jb
jmp
ds
pop
mov
push
xor
scas
jp
sbb
nopl
cwtl
sti
jbe
loope
in
arpl
rolb
adc
fldcw
sahf
dec
or
or
iret
stos
and
js
ficoms
inc
sbb
push
xchg
nop
mov
mov
std
insb
push
push
int3
jmp
inc
inc
adc
repz
adc
stos
jecxz
ss
xchg
mov
jo
fidivrl
ret
in
jne
sbb
push
movl
mov
out
lcall
and
mov
je
xchg
sahf
inc
xchg
sbb
stos
hlt
add
adc
mov
enter
xor
fldt
push
aad
mov
add
and
ret
fildll
push
push
mov
add
dec
push
push
sbb
pop
jecxz
out
xchg
push
js
jp
fldenv
xchg
inc
in
mov
movsl
stos
loop
or
movsl
test
cld
dec
aaa
orb
push
insb
in
in
xchg
out
outsl
or
loop
hlt
push
jno
imul
stos
out
mov
sub
mov
test
cmp
popa
xor
jnp
outsb
insb
outsb
inc
lret
nop
out
cmp
addl
clc
add
xor
mov
and
jp
jecxz
ja
dec
sub
or
in
inc
push
add
dec
cmpb
icebp
sahf
pop
popa
aaa
pop
dec
pop
xchg
inc
jecxz
loopne
scas
mov
mov
mov
dec
sub
xchg
dec
mov
and
iret
fdiv
dec
cwtl
negb
dec
shlb
pop
fcoms
in
and
nop
jnp
outsb
adc
pop
lret
in
out
push
sbb
arpl
fcomps
push
insb
out
add
popf
xor
xchg
mov
pop
mov
leave
sub
mov
aam
loopne
mov
sub
mov
ret
jecxz
stos
sub
mov
adc
inc
stos
sbb
dec
add
mov
jne
jo
add
fidivs
inc
pop
or
lea
push
sub
dec
gs
push
sbb
push
inc
mov
add
nop
cmpsb
xor
lds
repnz
mov
mov
mov
inc
negb
jo
aas
jae
js
mov
insl
push
inc
mov
lods
cmp
fldcw
movsl
ret
loop
lahf
fsubrl
sbb
push
shl
or
scas
cwtl
in
lcall
mov
das
daa
cmp
jnp
jecxz
sti
cmpsl
pop
sti
lock
fsubrp
std
sbb
enter
add
add
sbb
enter
mov
scas
lods
adc
push
data16
xlat
mov
cmp
pop
idivb
insb
mov
jo
push
or
mov
inc
icebp
negb
in
hlt
jae
in
or
enter
mov
mov
ja
bound
inc
mov
sub
pop
negl
ret
add
jge
jg
int3
jmp
dec
lods
adc
add
scas
cwtl
popa
fldl
sbbb
movsl
push
fs
pop
add
cld
pop
movsl
lahf
or
int3
jbe
int
int3
push
adc
cltd
lods
sub
fsub
sub
cmp
jmp
test
mov
in
mov
sti
mov
inc
in
fmuls
das
add
mov
mov
xchg
scas
pusha
mov
sbb
gs
and
adcb
mov
or
int
xor
jbe
jbe
mov
jge
mov
xor
stos
push
cmp
popa
sbb
mov
sub
pushf
sbb
ret
jg
pop
xor
lahf
lcall
out
loop
fwait
addb
jbe
out
xchg
and
and
data16
pop
sbb
mov
sbb
mov
push
jnp
xor
pusha
xor
xor
in
dec
add
repnz
data16
push
fdivrl
mov
jno
cltd
push
js
push
push
incl
inc
jge
inc
jmp
inc
mov
dec
jnp
cli
int
je
mov
or
cmp
sahf
sub
add
out
lds
dec
mov
js
and
pop
push
jb
int
or
dec
shlb
cmpsb
push
jg
addb
cwtl
rcrb
sub
push
mov
hlt
pop
pop
lret
movb
int
pop
sti
loop
rcrb
sbb
jle
pop
mov
adc
mov
fcomip
xor
cs
inc
sbbl
jecxz
add
or
or
pop
inc
push
lcall
imul
loop
stos
cwtl
repnz
or
mov
pop
sub
jmp
mov
loop
filds
icebp
inc
sbb
popa
test
xor
and
and
popf
or
jne
out
dec
dec
hlt
sbb
sbb
std
adc
mov
leave
push
push
testl
push
xor
fwait
push
cli
push
lcall
dec
mov
pop
add
lcall
cs
sub
jg
in
je
movsl
jle
jb
push
pop
push
and
dec
insb
outsl
daa
adc
cmpsl
cmc
and
scas
pop
push
sub
filds
shrl
in
out
movsb
lock
adc
xor
dec
inc
inc
enter
cmp
mov
call
push
or
lods
and
xor
test
add
adc
scas
push
adc
call
add
dec
mov
lret
aaa
shll
or
fldt
or
push
ret
mov
mov
push
inc
rcrl
dec
mov
push
cmp
cmp
inc
cwtl
sub
push
fists
test
test
ja
in
dec
mov
sbb
cmp
lods
shl
out
cmp
into
cmpsb
aad
mov
aad
cmp
or
imul
cli
sub
adc
xchg
cmp
pusha
push
fldenv
and
insb
ret
jmp
sbb
les
rcl
lock
xchg
inc
xor
mov
cmpsl
loopne
xchg
cs
jae
mov
xchg
xchg
xor
pop
xchg
out
ljmp
cmp
xor
mov
notl
ffree
cltd
out
test
push
outsl
push
imul
dec
cmpsl
test
dec
xchg
es
dec
push
dec
popf
dec
pop
push
and
mov
outsb
dec
aad
mov
psrlw
testl
add
loop
sbb
loop
mov
jno
add
xchg
mov
sbbl
xor
jle
cmp
mov
ret
inc
push
xchg
adc
and
jo
xorl
sub
addr16
and
pop
aaa
pop
outsb
mull
stc
adc
fmull
outsl
add
int
push
in
inc
jmp
sub
sbb
sub
sub
xlat
xchg
and
pop
xchg
mov
call
mov
loope
xlat
lcall
repnz
mov
test
xchg
jb
aad
cld
xchg
pop
push
daa
push
ds
push
jecxz
hlt
mov
leave
and
add
dec
inc
xchg
pop
push
sbb
gs
mov
xor
mov
adc
pop
cld
xchg
cmc
popf
inc
stc
dec
jl
ljmp
cmp
mov
or
push
dec
add
cs
gs
fdivl
lods
sbb
cwtl
xor
je
xor
or
loope
push
lret
hlt
outsl
in
test
adc
inc
enter
dec
ret
orb
xchg
inc
mov
add
pop
sbb
js
call
icebp
pop
das
icebp
mov
pop
add
cmp
test
mov
imul
and
cmp
or
cmp
push
jno
sti
bnd
hlt
sub
pop
xor
mov
in
test
gs
xor
dec
jns
jecxz
add
mov
jbe
jmp
pusha
mov
jecxz
cltd
mov
insb
stos
xchg
add
inc
push
jp
sti
imul
inc
movsl
stos
mov
hlt
adc
jae
pop
sub
addr16
divl
cmc
jb
mov
aaa
sbb
adc
icebp
mov
sbb
outsl
push
mov
mov
push
imulb
jmp
mov
jle
jmp
loopne
jmp
loopne
sbb
add
mov
push
pusha
push
loopne
orl
and
dec
and
lods
adcl
jb
mov
test
jno
pop
push
enter
ret
ret
pop
imul
and
xchg
gs
ja
and
dec
scas
fimuls
mov
shll
inc
and
out
cwtl
imul
dec
push
aad
std
pop
pusha
sahf
pop
fs
movsb
and
add
push
fcmove
lret
movnti
cmp
pop
out
data16
adc
or
in
mov
dec
fs
mov
xlat
mov
hlt
or
push
mov
fnstcw
add
aad
mov
sti
and
sbb
arpl
sti
add
sarl
and
mov
adc
sbb
lods
out
pushf
dec
dec
inc
mov
test
and
cmc
fs
push
mov
in
fistpl
pop
inc
jo
fdiv
neg
lds
fldenv
repz
pop
dec
lcall
loop
add
xor
lret
fcoms
fsubrl
xor
ret
lods
sub
pop
sti
dec
cmp
mov
mov
ret
xor
and
or
insl
enter
mov
incl
mov
repz
add
push
fdivrl
lret
adc
and
push
pop
mov
shll
icebp
test
mov
cs
fs
mov
or
fldl
aaa
fldt
mov
jbe
cmp
pop
inc
ljmp
pop
sub
cmpsb
orl
push
cmpsb
mov
rolb
fisttps
icebp
mov
cmp
push
dec
sub
pop
fwait
add
repz
sbb
pop
and
push
fmuls
lods
jl
inc
test
push
test
push
lret
sbb
dec
es
sub
xor
idivl
mov
mov
ret
cmp
pop
mov
inc
pop
push
mov
cmp
add
popf
outsl
push
stc
cmpsb
sub
or
mov
xchg
pop
mov
ficompl
nop
imul
orl
adc
rclb
push
pop
pop
lret
fs
cmp
dec
jl
jmp
dec
push
dec
pop
fwait
test
lods
adc
sub
dec
movsl
xchg
pop
test
mov
pop
xchg
mov
mov
sarb
push
push
or
mov
stc
leave
mov
ret
mov
mov
scas
out
stos
addr16
jl
out
cmp
iret
mov
sub
dec
int3
dec
mov
mov
jbe
std
outsb
cmpsl
in
dec
push
fdivrs
push
add
fstpt
fistpl
dec
adc
xchg
mov
push
stc
movsl
fbld
es
insl
mov
pop
sbb
leave
mov
xchg
std
or
pop
fldl
jbe
addr16
xchg
mov
js
add
int
inc
pop
insb
jo
jmp
imul
jnp
mov
pop
jbe
arpl
pop
jns
jl
loopne
sub
rcl
fistpll
jne
mov
jae
xor
inc
jne
cmp
scas
cmp
sub
mov
sub
lcall
sbb
shlb
outsb
ja
add
mov
in
mov
test
mov
jo
icebp
pop
enter
xchg
dec
sti
test
sbb
out
add
fistl
roll
sub
push
push
fwait
mov
push
fwait
push
cmpsl
push
xlat
hlt
mov
mov
mov
lods
dec
inc
xchg
xchg
mov
fmul
dec
clc
pushaw
cmp
vmovapd
cs
or
and
fistpll
int3
movsl
mov
clc
lret
add
xchg
jae
mov
mov
xchg
ret
jle
jle
push
fcomps
push
sbb
mov
loopne
in
maskmovq
das
shr
mov
test
pop
jns
fiaddl
sti
dec
into
lds
cld
sub
out
ss
add
mov
sub
cs
adc
lea
and
popf
push
sbb
xchg
int
jb
add
dec
pop
sub
and
es
call
push
mov
das
mov
rol
jb
movsb
repnz
mov
and
inc
cs
push
adc
mov
lret
and
shl
sbb
out
iret
mov
push
ret
mov
jle
pushf
or
jno
test
cmp
fmulp
fiadds
pop
jmp
sub
sbb
repnz
mov
push
clc
mov
adc
xor
fadd
jg
mov
dec
loope
adc
nop
xchg
add
out
pop
cmp
xchg
stc
sbb
in
xchg
popl
sub
xchg
pop
mov
into
dec
int
je
jle
scas
test
and
gs
ds
call
cmp
push
test
mov
js
inc
push
adc
rolb
lock
test
and
push
lock
mov
push
orl
fstps
inc
cltd
add
bound
mov
xlat
ja
es
xor
sti
addl
xchg
sub
xchg
adc
inc
push
fs
mov
jecxz
insb
jne
mov
xor
mov
inc
dec
lods
pop
xchg
sbb
add
jnp
lcall
pop
jge
cmp
xchg
and
jno
cld
stos
mov
aad
or
dec
dec
sbbb
mov
mul
outsb
xchg
xchg
and
pop
in
enter
inc
mov
int3
je
jp
xchg
imul
sub
aas
cmp
aad
idivb
lret
aas
push
and
fisubrs
sub
fs
int
lret
fisubs
add
pop
sbb
mov
push
mov
adcl
push
lcall
pop
stos
inc
cmp
inc
pop
lock
push
movsb
inc
add
imul
sbb
test
adc
sbb
xlat
into
pop
jmp
mov
repnz
sbb
cmp
ds
mov
push
inc
bound
les
add
add
cmp
lods
and
xchg
adcl
js
cmp
xor
pop
pusha
ljmp
insb
adc
scas
mov
pushf
inc
arpl
sub
jge
mov
add
int3
xor
ffreep
dec
icebp
shlb
ret
xchg
jle
or
test
cmpsb
or
xor
ret
ljmp
xorb
insl
mov
jo
fnclex
xchg
andb
pop
dec
popf
mov
icebp
jnp
mov
les
sub
or
pop
inc
mov
orl
cmp
sbb
xor
pop
sarl
rolb
lds
jg
dec
in
sbb
dec
jg
mov
mov
hlt
sub
lcall
mov
lret
cmp
inc
stos
mov
gs
inc
imul
and
rol
adc
and
inc
cld
lret
cmp
popf
jp
out
mov
inc
testl
ljmp
or
jg
dec
leave
cld
cmp
xor
fiaddl
aad
arpl
arpl
das
rol
outsl
es
gs
mov
inc
jl
mov
lods
jbe
inc
sub
mov
mov
rorl
xchg
ljmp
cmp
nop
fstpl
mov
stos
inc
add
lret
sub
fidivrl
jecxz
or
into
movsl
stos
shrd
into
into
clc
inc
push
or
scas
fwait
in
mov
in
pop
insl
xor
jb
stos
sbb
xchg
jmp
repnz
push
iret
fsubrl
sub
push
sbb
ja
lods
sahf
adc
repz
adc
adc
ror
pusha
pop
in
push
add
in
lret
cmp
pushf
sbb
stos
ds
jp
push
mov
pop
ret
jle
pop
add
fs
or
test
je
lcall
inc
dec
mov
cli
loope
pusha
add
dec
int
inc
rep
js
and
ret
xchg
mov
sarb
adc
push
rolb
sarb
repz
bound
mov
iret
push
pop
jns
aad
pop
addl
dec
xchg
and
mov
movsl
dec
or
sbb
or
and
clc
sbb
mov
pop
sub
and
dec
test
or
fcmove
das
fidivl
inc
outsb
or
xchg
sbb
fstps
push
ret
adc
popf
fimuls
inc
push
sub
ret
sub
add
jbe
adc
sbb
cmc
push
mov
mov
out
insb
adcl
out
jle
cmpsb
push
mov
mov
jb
shl
fistpll
push
int
cmpsb
sub
sub
sub
mov
cltd
in
add
es
push
js
xor
cmpsl
pop
sti
push
sub
je
inc
shll
imul
aad
or
push
stc
mov
pop
loope
adc
fdivrs
sarb
cmp
int3
mov
mov
push
cwtl
push
cmp
dec
add
fisubrs
popa
cmp
ficoms
fdiv
leave
fnstenv
rclb
test
and
filds
fstps
stos
push
and
call
push
out
and
out
jl
adc
jb
mov
cmp
jle
dec
ss
fwait
movsl
dec
jmp
out
pushf
cmp
lcall
sbb
jmp
jp
lock
jl
sbb
pop
xchg
sahf
div
jmp
sbb
and
ljmp
int3
js
outsb
or
iret
les
push
sbb
and
pop
jb
loope
mov
mov
sarl
orb
clc
in
push
sbb
rorb
ror
shll
cmpsl
jne
xchg
cwtl
in
jb
jno
xchg
ret
pop
push
out
in
mov
hlt
adc
sub
sub
pop
insb
call
cmpsb
sbbb
sti
ljmp
dec
insb
sbb
nop
mov
out
pop
ss
jg
mov
inc
xchg
jae
mov
and
stos
cmpb
testl
lret
xor
pop
hlt
add
std
mov
loop
dec
mov
sub
data16
out
mov
push
call
inc
cltd
aaa
mov
sbb
adc
sub
push
inc
mov
or
push
or
mov
mov
out
in
shrl
adc
push
jg
loope
les
sub
int
lret
lock
push
mov
repz
push
sarb
xchg
sbb
fs
shl
push
arpl
int
hlt
enter
shlb
inc
xchg
push
fucomp
call
cs
xchg
push
xor
pushf
jmp
icebp
mov
sbb
mov
insb
xchg
adc
push
pop
pop
pusha
cmp
mov
push
push
imul
sti
test
es
cwtl
sahf
jbe
xchg
out
jg
cld
pop
mov
sbb
adc
mov
mov
xor
addr16
sub
in
push
lcall
repnz
loopne
xor
inc
dec
rcrb
int3
lret
scas
leave
mov
outsb
lea
pop
sbb
jle
subb
xor
jle
push
or
sub
jl
adc
jmp
adc
adc
lret
jo
out
out
pop
out
sahf
push
nopl
dec
movsb
rcll
outsb
aaa
in
in
inc
add
ror
mov
pop
rorl
ror
sbb
jnp
cmpsb
mov
push
or
pop
cmpsb
pusha
sub
adc
mov
pop
jmp
dec
out
out
xor
lahf
mov
test
dec
add
cmp
push
jp
mov
insl
pop
leave
adc
and
jl
push
xchg
pop
sub
cli
cmpsl
pop
pop
dec
fmulp
mov
mov
js
jb
push
cmc
jnp
dec
sub
and
mov
into
cmpsl
cltd
test
adc
and
push
ret
adc
jle
pop
fstps
fwait
into
lock
jmp
das
push
scas
xchg
cmp
xlat
movsb
out
pop
gs
movsb
mov
inc
dec
inc
sbb
rcll
cwtl
icebp
and
clc
mov
cmp
mov
jnp
add
stos
ljmp
and
jo
inc
adc
pop
and
cmc
mov
fisubrs
outsl
into
push
stos
into
lods
aam
lret
jnp
scas
xor
icebp
ss
mov
sub
push
mov
imul
xchg
imul
cmp
push
stos
adc
xchg
jno
cmp
cmpsb
stos
iret
lcall
stos
test
sbb
jnp
repz
and
jbe
mov
iret
es
mov
xor
sbb
leave
cmc
hlt
in
pop
and
in
mov
push
sub
insl
mov
mov
fs
les
fcomps
ja
jno
push
dec
dec
or
xchg
cli
cmp
mov
and
fdivl
in
inc
adc
sti
jecxz
and
cmpsb
popf
dec
add
inc
jnp
sub
inc
mov
shr
sbb
sti
dec
or
pop
adc
adc
int
xchg
scas
nop
xor
jle
imul
xchg
testb
jno
xchg
jbe
outsl
mov
aas
adc
sbb
xor
xchg
dec
cs
sbb
cmpsl
fdivs
dec
subb
in
arpl
stos
test
mov
cmp
les
adc
imul
mov
pop
lea
sahf
pop
sar
cld
sub
testb
andl
mov
call
call
push
dec
adc
push
hlt
fwait
in
popa
stos
arpl
fs
imul
inc
enter
cmp
push
sbb
fmull
scas
popf
add
inc
lahf
or
xor
pop
movsb
into
xor
stos
push
out
pop
test
xchg
inc
lcall
dec
daa
mov
fmuls
mov
mov
sub
mov
mov
lds
xchg
arpl
dec
push
and
dec
sbb
movsl
aad
scas
imul
dec
popf
pop
xchg
imul
sub
bound
xchg
das
into
mov
loopne
inc
hlt
push
dec
inc
movsb
lcall
out
inc
or
mov
frstor
shll
pop
bound
imul
lret
mov
dec
jp
add
in
mov
orl
mov
fdivl
xchg
sar
push
je
sbb
pusha
xlat
scas
orb
xchg
dec
sub
ljmp
cmp
pop
mov
sbb
jmp
push
outsb
and
jno
test
stc
pop
xor
rcrl
cmp
ja
xor
push
ljmp
pop
hlt
lods
xor
mov
mov
lds
and
lods
repz
push
xor
into
aas
sbb
das
and
mov
push
xor
push
push
bound
rcll
xchg
imul
fs
sbb
xchg
aad
sbb
bound
test
outsb
ror
xchg
add
push
or
push
lods
fistpll
push
inc
sbb
leave
rol
incl
jae
sub
inc
push
mov
mov
sub
stos
movsb
dec
pop
pop
je
ja
movsb
stc
repnz
popa
mov
add
xor
sub
scas
call
js
movsl
cmp
add
loop
sahf
stos
pusha
sub
movsb
fsubr
je
lods
imul
fwait
inc
push
push
jbe
push
or
shll
iret
pop
std
jp
popa
mov
addr16
test
push
test
sbb
fwait
lds
dec
jbe
jecxz
clc
pop
cmc
sbb
jmp
je
add
inc
inc
mov
xchg
sbb
mov
dec
xchg
mov
xor
xlat
xor
into
fdivl
jp
in
or
rcrl
inc
ja
inc
sbb
mov
sub
lds
sub
mov
mov
sbb
mov
push
xchg
loope
xchg
sub
lds
into
push
in
and
xchg
bound
and
inc
mov
mov
cmpl
sti
and
outsl
out
fisttpll
cs
outsl
pop
mov
addb
cmpsb
cmpsl
jmp
shrb
lods
aas
incb
testl
sahf
mov
fimull
popa
in
inc
scas
repz
mov
push
lea
pop
mov
push
dec
aaa
mov
in
jge
push
andl
dec
and
movsl
xor
xor
aaa
or
leave
push
push
mov
xchg
push
inc
ds
lds
xlat
movsl
out
mov
mov
mov
adc
mov
add
out
in
lea
cmp
pop
mov
lret
test
call
subb
popa
cmc
sbb
rorl
sub
idiv
pop
sub
stos
sarb
mov
sbb
mov
inc
or
jg
jns
lea
jg
adc
stos
mov
push
push
and
inc
xchg
test
scas
push
popa
jnp
and
in
mov
xorb
daa
sbb
popa
lahf
inc
add
or
out
dec
inc
repnz
jmp
call
and
mov
std
loopne
faddl
jmp
add
dec
call
add
xor
jnp
hlt
pushf
mov
lret
ja
jne
stos
daa
sub
gs
popa
in
outsl
sti
lods
add
je
lret
mov
out
dec
mov
add
sbb
xlat
jg
mov
lods
mov
arpl
jns
adc
push
pusha
cmpb
or
pop
mov
push
sbb
nop
movsl
add
out
scas
or
int3
push
xchg
jmp
mov
push
fisubl
std
sbb
daa
push
roll
dec
lcall
aas
pop
insb
cmpsb
push
pop
loop
mov
aas
mov
test
rcrl
sar
dec
push
xor
mov
hlt
jge
adc
and
fisttpll
rolb
insl
movl
shlb
fsubl
jno
fidivrl
mov
in
clc
cld
sub
roll
stos
pop
insb
sub
sub
add
xchg
fnstsw
negl
not
mov
add
mov
cmc
decb
mov
pop
lock
es
or
sub
movsl
clc
dec
fimuls
dec
jmp
pop
mov
and
add
pop
hlt
stos
dec
ds
pop
hlt
sbb
xchg
fldt
into
xchg
sbb
mov
inc
and
pop
sub
push
add
adcl
push
xor
jg
sub
and
stc
fwait
pop
pop
mov
push
loopne
fcmovne
into
dec
mov
push
mov
xor
and
je
cld
lahf
je
pop
jp
dec
dec
out
clc
mov
push
in
cmc
xor
lahf
or
and
push
adc
fbstp
ss
or
jnp
mov
fwait
xchg
cmp
jle,pn
xchg
push
outsl
pop
add
or
xor
sbb
sub
or
stos
pop
or
dec
fnstenv
pop
inc
jl
aam
cmp
add
sub
in
test
out
leave
adc
pop
cld
sbb
sub
add
sbb
add
inc
aam
nop
xchg
repnz
scas
jecxz
dec
push
mov
jo
icebp
shll
dec
mov
and
cmp
cmp
dec
shll
aas
out
jg
test
pop
je
pop
gs
enter
nop
push
pop
or
push
aad
xlat
jo
pop
push
push
cmp
cmp
cltd
push
jg
bound
ret
push
test
xchg
int3
and
aam
pusha
ret
cmpsl
adc
mov
or
test
sub
notb
sub
mov
jbe
lds
inc
aam
inc
negb
sub
inc
fisubrl
and
push
shrl
sahf
int
fidivl
and
bnd
sub
out
test
mov
inc
and
repnz
mov
lret
mov
dec
inc
fs
lods
jns
jb
sti
cltd
ss
in
dec
push
js
roll
push
fucomp
aam
adc
mov
push
xchg
xor
orb
push
jle
xor
repnz
lret
outsl
push
ret
shrb
mov
adc
adc
aam
dec
mov
jl
ret
shlb
stos
popf
je
add
inc
adc
mov
jbe
mov
or
mov
lods
pop
jle
dec
or
adc
push
stos
lahf
cmc
inc
lods
push
dec
enter
lds
adc
xchg
andl
insl
lock
pop
lock
jbe
lds
pop
inc
jl
push
add
repz
test
and
adc
pop
mov
outsb
xchg
in
mov
mov
cmp
jle
icebp
sbb
movsl
xor
idiv
pop
cmp
inc
pop
fiaddl
repz
push
loopne
sbb
lds
mov
cmp
andl
inc
ret
push
mov
cmpsl
pop
pop
inc
or
loopne
mov
cmpsb
mov
sbb
fmuls
lds
xchg
xor
lock
and
outsb
dec
in
cmp
mov
cltd
arpl
xchg
stos
mov
icebp
loop
test
adc
daa
push
sub
xlat
aam
sbb
lds
inc
pop
jge
sahf
std
fmuls
add
fisttps
icebp
jmp
imul
addl
loope
hlt
or
sti
test
xchg
cmp
lret
imull
lds
cs
lock
xor
xor
dec
out
icebp
mov
mov
inc
nop
out
push
xchg
xor
mov
lea
hlt
aad
inc
out
and
pop
mov
pop
ret
aas
mov
or
inc
mov
out
push
sbb
xlat
xor
xor
test
stc
and
sub
fsubrs
sbb
pop
das
add
shll
scas
sub
cmp
inc
mov
and
inc
cmp
or
fsubs
dec
xor
mov
sub
scas
pop
lahf
rclb
lods
cmp
sbb
cmpsb
sbb
mov
push
sbb
out
and
sub
mov
xlat
lea
mov
mov
push
cmp
in
mov
adc
xor
pop
add
sub
pop
mov
push
jle
negl
fstps
js
mov
and
jl
add
cmc
imull
sbb
pusha
xchg
in
add
jnp
lock
lods
and
mov
repz
fstpt
ljmp
push
mov
icebp
arpl
inc
sub
hlt
push
insb
xor
pop
test
into
sbb
jmp
std
stos
inc
sti
xor
sbb
shrl
push
mov
subb
loope
xor
inc
in
hlt
dec
rcrb
pcmpeqd
lret
scas
mulb
and
roll
cmp
jns
loope
in
pushw
mov
out
fisubrs
xor
mov
jb
jmp
adc
cmp
out
adc
mov
xor
pop
lods
cmp
inc
fsubrs
les
sub
das
pop
push
loopnew
xchg
mov
aam
testb
inc
pop
mov
add
iret
mov
int
fstpt
jg
pop
or
dec
fcmovnb
mov
mov
loopne
inc
and
scas
aam
sbb
adc
and
inc
or
mov
inc
fimull
ds
gs
jl
push
cmp
aas
cmpsb
in
iret
pushf
repnz
mov
dec
jno
sbb
jecxz
jle
shrl
fldcw
xor
xlat
mov
inc
and
mov
xor
cmp
movl
or
pop
out
aad
mov
gs
fnstcw
mov
mov
jle
sbb
xchg
es
dec
push
dec
es
inc
aas
mov
inc
in
xlat
cmp
mov
xlat
pop
adc
repnz
bound
sbbl
lods
test
mov
int3
cmp
fstp
xor
and
pop
lods
mov
addl
sbb
std
xor
push
sbb
mov
stos
stos
and
pop
mov
clc
std
nop
xchg
pop
pop
push
lcall
inc
movsl
xchg
xor
les
notb
lret
out
rcll
sarb
imul
pop
push
call
jo
add
inc
gs
into
and
xor
mov
xchg
xor
in
adc
cs
in
xor
inc
lsl
mov
push
jnp
adc
gs
ret
xorb
in
lea
insb
lret
popa
and
lds
dec
jb
add
sbb
adc
or
cli
and
aad
pop
dec
nop
stos
jmp
movsl
sub
xor
pop
mov
or
pop
dec
adc
lods
add
push
jae
idivb
stc
pushf
adc
int3
sti
jns
or
test
mov
mov
lret
xchg
out
imul
xor
fcmovbe
jle
mov
lahf
push
daa
test
inc
out
fisttps
ds
fadds
xchg
push
insl
rolb
icebp
js
out
or
repz
or
jno
dec
lds
fisubl
cltd
pop
mov
sub
pushf
xchg
cmp
cmpsl
mov
frstor
mov
frndint
sub
lock
popf
out
xchg
ljmp
out
sbb
pop
das
cmp
mov
movsb
in
ja
dec
jnp
push
mov
lods
stos
addr16
jae
loopne
test
jbe
lea
mov
fstpt
pop
xchg
idivl
in
jb
loope
push
and
js
andl
cmp
or
stc
mov
mov
mov
shl
sti
arpl
or
jae
inc
add
dec
testl
push
shr
mov
and
dec
lods
sub
pop
adc
out
inc
lea
inc
adc
mov
pop
push
sbb
mov
leave
jmp
loopne
dec
sti
roll
xchg
stos
mov
hlt
imul
cs
call
fistl
pop
jo
sbb
mov
divb
sub
cmp
outsb
notb
cmpsl
jo
push
outsl
leave
and
and
and
mov
aam
dec
xor
or
cli
xchg
cmp
inc
push
mov
test
out
adc
sbb
adc
dec
mov
scas
jns
insb
adc
das
xchg
dec
and
mov
cmp
cmp
jnp
sar
cmp
jnp
in
jl
imul
push
push
push
or
adc
mov
mov
jbe
cmp
out
xchg
movsl
orb
inc
stc
cmpb
cs
adc
inc
mov
xor
sbb
repnz
push
inc
add
mov
mov
jmp
xor
cld
lret
jmp
jl
fistpl
inc
scas
push
movsl
add
bound
sti
xorb
sbb
movsb
test
adc
push
hlt
rcr
rcrl
pushf
je
lods
push
mov
in
rsqrtps
xor
mov
aam
aam
pop
and
jnp
adc
pop
xor
test
mov
es
gs
arpl
sete
sbb
movsl
or
loop
repz
in
les
pusha
xor
mov
mov
fsubr
daa
mov
outsb
in
fxch
xchg
or
lcall
jne
and
jg
push
mov
shll
js
in
cld
sbb
cld
dec
mov
xchg
jl
push
cli
idiv
or
mov
jnp,pt
push
sti
push
push
in
leave
ja
mov
scas
into
mov
pop
mov
imul
cltd
ss
jle
cmp
pop
jb
mov
out
mov
mov
fisubrs
add
fiadds
je
addb
cld
xchg
mov
and
scas
sub
out
jge
fwait
popa
das
adc
int
ficompl
in
inc
loopne
sbb
roll
sbb
mov
jp
and
loopne
js
lods
call
jbe
into
jo
mov
sub
popa
sub
mov
mov
add
out
out
neg
mov
and
data16
fimull
pop
sbb
pop
movsb
jne
movl
icebp
sub
sbb
xchg
idiv
push
mov
sub
cmp
ret
mov
cmp
bound
pop
mov
hlt
loopne
fbld
stc
cmp
dec
mov
mov
push
sub
das
fldcw
fistpl
ret
roll
xor
in
push
sbb
adc
out
in
outsl
add
les
daa
std
add
push
nop
mov
test
lahf
lcall
rclb
imul
outsl
stos
mov
jge
std
inc
stc
cli
in
pusha
in
popf
adc
push
add
jae
int3
fcoml
jecxz
repz
sub
mov
push
lods
scas
inc
mov
pop
and
jmp
mov
cmp
cltd
add
add
cmpsb
ss
les
lret
paddsb
fistl
sub
neg
push
xor
pop
lods
aad
and
mov
sbb
lods
mov
xor
andl
sbb
sbb
mov
inc
xchg
jmp
cmc
push
lret
divb
scas
adc
fiaddl
mov
xor
sbb
pop
jo
in
add
push
int3
out
pop
pop
inc
aad
fldt
xor
xor
jge
push
jb
outsb
mov
aas
xor
add
xor
popf
leave
das
mov
decb
test
lea
cmp
or
adc
loop
fwait
idiv
jmp
je
xchg
xor
lcall
xor
cld
pop
ret
ljmp
pop
inc
adc
inc
sbbb
mov
lods
push
mov
ljmp
jmp
and
lret
clc
popf
sub
jle
and
dec
fidivrs
pop
jg
call
mov
adc
mov
mov
xchg
enter
lahf
pop
push
and
push
xchg
fiaddl
movsb
adcl
movsb
mov
imul
add
mov
mov
lret
into
stos
cltd
mov
loope
sub
push
js
sub
femms
lods
mov
test
stos
pop
or
filds
cmpsl
add
jne
daa
out
shll
jnp
pop
cmp
push
jl
pushf
and
out
dec
gs
rolb
mov
scas
inc
aas
mov
inc
push
rclb
outsl
daa
es
sub
enter
xor
popf
fsubs
mov
loope
fstpt
push
mov
mov
out
xor
test
subl
mov
dec
xor
dec
mov
call
int
sbb
fldl
das
hlt
sub
stc
jge
fwait
mov
add
incb
and
andb
pusha
inc
imul
mov
mov
std
out
inc
insl
stos
and
sti
jle
jge
outsb
mov
out
or
outsb
adc
jns
mov
push
sub
jb
pop
movsb
push
mov
xor
xor
aas
fidivrl
jecxz
inc
cmpsb
shrl
in
movsb
sbb
cld
popf
jns
in
add
jno
es
add
mov
add
iret
lahf
xor
mov
out
mov
jno
addb
cmp
iret
aam
icebp
mov
jnp
cs
test
shlb
pop
data16
call
loop
testb
xchg
or
aam
es
mov
xchg
push
sbb
mov
or
mov
jb
lahf
idivl
jp
arpl
mov
in
lds
jp
lods
insl
jmp
lea
push
gs
test
aaa
in
add
adc
sub
pop
sub
mov
sahf
rcrl
imul
mov
fsubl
pop
lods
jl
pop
arpl
rcrb
or
outsb
mov
sbb
shrl
mov
jne
sub
xor
je
jge
mov
xchg
jnp
lcall
dec
scas
mov
ret
xor
stos
lds
dec
out
lods
push
sub
imul
rcrb
push
movsl
adc
inc
int3
lahf
pop
lods
mov
mov
stos
fmulp
in
lods
mov
xor
xor
pop
or
scas
inc
pushl
mov
mov
imul
or
shrb
lods
xchg
movsb
push
scas
test
inc
inc
xchg
adc
sub
addr16
mov
mov
ret
push
mov
nop
gs
pop
test
outsb
ds
mov
xchg
test
pop
adc
xor
xor
rolb
test
jle
jp
jmp
aaa
add
push
mov
mov
push
aad
push
mov
loopne
fistl
add
inc
sub
add
es
imul
hlt
xchg
and
dec
outsl
xor
stos
scas
xchg
sbb
jle
add
int3
in
aam
jns
push
inc
shl
fsubrs
mov
xchg
gs
roll
fstl
decb
mov
loop
add
lahf
mov
dec
lock
dec
ret
fsubrl
xchg
mov
or
cmp
test
xor
jmp
lahf
mov
aas
scas
insl
call
jbe
lcall
cwtl
out
inc
or
lods
mov
lea
ss
and
add
cmpsb
jmp
add
jnp
cmpsb
data16
sub
bound
fldcw
lcall
mov
ss
shl
adc
movsb
mov
lds
lds
add
test
imul
mov
jns
xchg
mov
mov
and
jecxz
cmpl
repnz
adc
dec
setns
xor
sbb
push
mov
sub
inc
adc
scas
fs
jg
and
mov
mov
mov
pop
mov
out
xchg
fucomp
push
xchg
inc
push
out
leave
adc
lods
sbb
into
mov
jno
aaa
sbb
jmp
aaa
sub
imul
cmp
bound
cmp
ret
and
out
or
add
in
mov
mov
push
sub
mov
mov
scas
jnp
push
dec
daa
jmp
je
cli
mov
adcb
repnz
inc
lea
ja
xlat
jbe
sti
out
mov
mov
and
mov
jl
test
sub
pop
push
add
pop
popa
shrd
xchg
scas
sbb
mov
inc
sahf
cwtl
repz
scas
adc
nop
lret
sub
into
out
sbb
cs
dec
xor
outsb
xchg
rorb
nop
sbb
in
loop
cld
enter
dec
xor
pop
add
test
and
iret
sahf
jg
cmp
xchg
inc
mov
mov
mov
push
jo
lahf
cmpsb
adc
das
adc
andl
cli
in
adc
mov
jne
jg
pop
jne
jg
sti
andl
add
iret
test
sarb
dec
jae
xor
adc
mov
mov
cmp
pop
call
testl
xor
std
stos
cmpsl
adc
mov
jp
repnz
jne
fidivs
push
xchg
lods
adc
pushf
lock
aaa
mov
dec
in
mov
lds
out
jl
aad
dec
sbb
insl
or
jnp
enter
and
and
xchg
push
call
push
imull
cli
adc
dec
leave
mov
xchg
repnz
push
popf
stos
pop
mov
aad
sbb
stc
cs
push
xchg
xchg
add
xlat
push
test
jo
lock
and
mov
cmp
js
loopne
jmp
gs
xchg
pop
jg
das
mov
imul
mov
sbb
shrl
lods
popf
pop
test
stos
cmpsb
repz
and
insl
mov
in
lahf
cmp
sahf
jmp
popa
sahf
push
add
inc
jnp
mov
aam
and
pop
xor
stos
mov
lret
leave
push
lock
mov
cmpsl
ss
or
out
mov
pop
inc
xchg
sub
test
pop
pop
movsl
inc
sahf
dec
mov
out
cmp
repz
imul
cld
xchg
sbb
stos
daa
sbb
xchg
fcmovnb
mov
out
and
dec
decl
test
pop
ss
inc
sub
test
outsb
cmp
add
sahf
movsl
outsl
adc
sbb
xor
adc
insl
mov
in
lret
sbb
push
push
add
or
mov
or
test
fsubrs
or
stc
cltd
xor
xchg
outsb
mov
or
inc
lcall
pop
movl
je
pop
into
mov
mov
mov
fbld
fisubrl
fidivrs
mov
daa
shll
out
mov
fists
push
mov
sahf
dec
aad
or
clc
nop
adc
or
adc
les
int
add
outsb
or
or
xchg
jnp
sbb
cmp
int
push
cli
cmpb
test
outsl
add
inc
inc
rorb
ja
cmpsl
push
adc
push
ljmp
mov
out
cmp
in
xor
dec
shl
cmp
clc
inc
pushf
and
std
incb
dec
or
adc
shl
std
lcall
scas
adc
divl
push
adc
arpl
dec
mov
mov
sbb
lret
out
imul
jo
inc
sbb
add
xor
jnp
inc
cmp
push
or
jne
sti
cmpsb
xor
or
fcomp
xchg
not
cld
adc
pop
adcb
push
or
lret
or
add
icebp
lea
adc
pushf
fprem1
nop
sub
not
mov
les
in
mov
out
and
stos
xchg
pop
lock
jnp
shl
jae
xchg
push
mov
and
xchg
inc
mov
dec
add
rcrl
rcll
cmp
test
sbb
shrb
fistl
ja
lods
loopne
out
jg
in
jle
push
nop
dec
and
adc
push
scas
inc
pop
in
stos
jns
add
jo
push
into
dec
ljmp
and
cmpsl
dec
jne
xchg
sbb
loop
and
hlt
loop
adc
jp
test
mov
movsb
int3
pop
or
lret
cmp
sar
mov
push
test
mov
dec
sbb
sbb
aaa
inc
int3
lcall
shr
adc
or
inc
jns
jmp
out
adc
cmp
inc
mov
jmp
adc
rcll
sbb
pop
mov
fisubrs
and
cwtl
add
test
mov
cmpsl
cli
mov
push
or
jecxz
xorl
nop
std
ret
xchg
mov
pusha
sbb
test
xchg
lock
fldenv
imul
jns
jmp
subb
sub
mov
cld
cwtl
not
mov
int3
or
sub
call
jg
fildl
jmp
movsb
or
loop
ret
inc
inc
ja
xor
push
nop
pop
cmp
sub
aad
mov
mov
movl
adc
cmovns
flds
popf
clc
pop
jp
push
icebp
add
bound
popf
pop
push
lea
mov
mov
inc
jns
jne
sbb
push
mov
je
scas
dec
xor
imul
cwtl
out
ss
mov
pop
xchg
pusha
cmp
sub
mov
xchg
push
mov
pop
out
adc
push
mov
inc
inc
and
dec
dec
cmc
pop
adc
dec
std
cs
mov
jg
pop
pop
rcrb
rcll
pop
incl
fiaddl
pushf
adc
xlat
pusha
sbb
adc
ljmp
and
into
aas
and
or
jbe
pop
insb
sti
cmp
mov
gs
cs
lea
push
aam
sbb
xchg
pslld
mov
push
ss
adc
aaa
or
mov
loope
js
push
loopne
ret
shlb
and
pop
dec
loopne
rclb
test
sbb
mov
nop
pushf
ds
sub
dec
daa
cmp
push
sub
icebp
jne
iret
jmp
mov
ds
lods
jmp
sti
daa
cli
push
or
inc
mov
or
rorb
stc
test
jg
and
adc
out
stos
inc
sbb
push
mov
inc
ret
ljmp
sub
push
or
fcomip
popa
sbb
dec
pop
fwait
cmp
mov
lcall
xchg
add
or
out
pop
jnp
dec
shrb
aaa
pushf
dec
js
mov
inc
sahf
xchg
in
inc
jae
jno
in
sub
push
mov
pop
leave
cmpl
sbb
push
xchg
and
sbb
out
and
cmpsb
out
int
inc
sbb
mov
fcmovb
jnp
aad
pop
ret
cmpb
cmp
movsl
add
cs
mov
negl
idivb
outsl
push
mov
repnz
push
movsl
cmp
aam
push
add
inc
data16
inc
maxps
xor
lds
lcall
inc
fwait
or
bound
ss
bound
xor
repnz
xchg
sub
jbe
leave
jno
add
faddl
and
cmpl
or
add
xor
mov
fwait
lods
inc
fninit
les
cs
cmpsb
push
adc
lods
pushf
dec
std
pop
loopne
and
adc
inc
in
mov
ja
cmc
aas
lods
insb
cwtl
mov
nop
test
jne
test
push
add
push
mov
js
dec
add
adc
jg
scas
in
leave
xlat
mov
out
imul
inc
insb
adc
sub
lret
sub
sbb
and
sub
ja
pop
jecxz
mov
dec
pusha
push
and
inc
hlt
fcompl
ja
pop
add
add
add
aam
jo
sub
call
push
pop
cwtl
mov
int3
and
xor
sbb
sbb
in
mov
mov
jl
xor
jns
dec
xchg
add
aad
js
cmp
xchg
stos
aad
sub
mov
movsl
fcmovb
sbb
jmp
add
sbb
mov
push
xor
movsb
dec
push
data16
inc
sub
iret
dec
push
sub
cmp
loope
into
outsb
aas
shll
fildl
cld
push
imul
sbb
pop
xchg
out
rorb
shll
cwtl
and
cmp
insb
cltd
lods
fiaddl
and
mov
mov
imul
mov
push
adc
cli
ja
popf
enter
mov
out
and
sbb
js
clc
daa
scas
pop
nop
mov
stc
inc
cmp
push
pop
int
mov
aas
and
mov
insb
sub
dec
mov
xor
inc
mov
out
xchg
ret
jno
sub
inc
adc
sub
lahf
mov
push
and
cmc
das
out
out
push
sub
sub
jae
cmp
jge
lds
imull
adc
dec
xchg
mov
pop
push
outsb
inc
insl
stos
adc
in
or
out
push
sbb
or
mov
punpckhdq
and
fildl
mov
pop
lods
out
fwait
jge
jle
dec
int
xchg
mov
and
mov
jns
jp
inc
mov
call
cmp
fldl2e
cmp
push
pop
push
ds
iret
push
decb
push
jecxz
shlb
test
fistps
mov
mov
push
outsb
sub
in
adc
add
addr16
mov
or
pop
or
iret
jb
add
sbb
dec
loop
lret
out
mov
inc
daa
jnp
or
jo
add
inc
daa
es
das
cltd
jae
mov
and
xchg
push
add
pop
jno
mov
sub
adc
and
xor
jno
les
mov
test
mov
aaa
sbb
cli
push
cld
sub
testb
lretw
pop
push
loope
imul
sub
test
xor
loop
cmp
jg
into
cmp
push
insb
dec
cmp
mov
mov
shl
or
jo
decb
bound
fdivrl
xor
test
mov
cmpb
push
dec
dec
inc
mov
loopne
adc
lods
push
or
pop
jecxz
mov
sbb
lret
sub
imul
rcr
sti
inc
scas
andl
pop
out
mov
fnstsw
fnsave
push
dec
fwait
pop
push
orl
testb
addr16
inc
xchg
cmpsl
fcomi
fdivrs
jmp
dec
enter
adc
decl
call
loope
xor
inc
gs
sub
enter
adc
outsb
mov
inc
jns
or
jbe
mov
test
std
hlt
mull
stos
out
adc
cmp
jbe
fistpll
cmpsb
cmp
mov
shll
data16
sbb
add
push
push
repnz
lea
mov
dec
inc
in
pop
xchg
dec
adc
loop
pop
js
mov
sub
sbb
orb
mov
jbe
aad
rolb
orb
sbb
sub
fs
fildl
in
pop
insl
fwait
in
pop
decb
push
fwait
mov
cmp
movsb
or
bnd
mov
idiv
cmp
popf
adc
loop
clc
cmpsb
jl
xchg
insb
push
out
sbb
adc
out
pop
mov
dec
adc
add
mov
lock
sub
imul
rcll
aam
in
sub
adc
mov
jl
jns
int
mov
stos
add
pop
shlb
mov
pushf
dec
clc
ret
lods
xchg
mov
xchg
stos
popa
lods
jge
and
jbe
nop
sarb
dec
sub
cmp
test
and
jl
je
dec
lods
mov
aad
iret
enter
mov
xchg
dec
int
pop
sub
mov
jmp
test
stos
and
inc
sahf
inc
pop
inc
fistps
repz
dec
xchg
fwait
xchg
add
cmpsb
outsb
add
sbb
lret
add
js
mov
cld
jno
fidivs
faddp
sub
movsb
pop
fnstenv
jle
push
ljmp
mov
xor
mov
es
movsb
ficoml
xchg
mov
dec
repnz
call
pop
mov
push
mov
jo
pop
sub
adcl
pushf
pop
and
sarl
xchg
mov
std
cli
push
out
jns
xlat
imul
icebp
neg
or
fsubrs
push
mov
add
rorl
add
test
lcall
xor
jle
inc
dec
call
or
fnsave
test
mov
outsl
sahf
mov
movb
jno
fistpll
pop
fldcw
pop
pop
cs
xchg
mov
icebp
jg
and
push
div
test
xor
mov
std
decb
pop
sti
jnp
fcompl
jecxz
inc
adc
pop
add
stos
in
inc
iret
mov
movsb
xor
mov
jns
aaa
cmp
sbb
inc
scas
xlat
daa
xor
bound
sbb
sbb
push
adc
lret
scas
xchg
iret
or
lea
push
pop
std
imul
loope
arpl
jno
mov
loop
inc
push
pop
push
jge
out
andb
push
xchg
mov
insb
xchg
lahf
sub
das
sbbb
out
inc
mov
inc
jmp
push
in
and
add
cmpsb
or
cmpsl
mov
xor
jno
push
mov
push
mov
int3
inc
push
fwait
pop
pop
sahf
sbb
repnz
int3
rol
jp
xchg
pop
dec
xchg
cmp
scas
movsb
mov
inc
in
and
mov
or
clc
subb
cmp
out
lcall
lds
sbbl
jl
mov
push
inc
fadds
psrld
insl
je
shlb
cmc
cmpb
rolb
sub
test
movsb
pop
xor
outsb
lods
les
sub
push
lods
adc
test
xchg
lods
dec
mov
aad
aad
adc
lcall
or
mov
cmp
push
mov
pop
adc
fimull
in
pop
add
roll
sub
sub
push
aam
in
jg
push
shl
xchg
inc
sub
pushf
sti
add
fmul
cld
lock
pop
push
xchg
mov
repz
cltd
and
loop
cmpsb
dec
icebp
push
fstl
push
cld
pop
jae
in
jns
and
rorl
cwtl
cmp
push
ljmp
push
lahf
push
btc
sub
cmp
or
aam
mov
shlb
outsb
mov
cmpsl
push
mov
sub
out
jo
insb
icebp
fldcw
add
aad
sbb
cmp
xor
sub
and
lcall
scas
push
in
je
stos
cmp
ss
icebp
sti
ss
mov
inc
pop
cmp
pop
out
adc
popa
or
mov
xlat
in
pop
jmp
mov
fwait
lret
sbb
inc
mov
bound
inc
and
cld
cld
mov
fiaddl
xor
dec
and
call
cli
push
dec
dec
sub
sub
movsb
out
xchg
pop
push
pusha
icebp
lcall
lds
sbb
xchg
mov
cmpsl
out
xor
fwait
ja
scas
pop
test
imul
mov
hlt
mov
mov
std
xor
aad
pop
shll
je
mov
rcrl
jo
push
mov
sbb
sbb
out
repz
dec
mov
clc
pop
rol
push
lret
cli
int3
add
cmp
jge
mov
pop
subb
sti
out
test
aam
fldl
add
xlat
xchg
out
jo
push
test
dec
push
out
dec
lret
mov
test
fcmovne
xor
and
pusha
ret
pop
jnp
fst
test
ficoms
xchg
push
les
popa
mov
testl
sbb
sbb
es
jge
xchg
orb
sbbl
sub
iret
xchg
mov
addr16
fmulp
outsb
mov
dec
adc
mov
adc
outsl
fs
jg
dec
jbe
xchg
xor
std
sub
sbb
jne
in
mov
pop
lahf
jbe
xor
inc
push
imul
out
xchg
dec
ret
cld
imul
mov
jo
mov
mov
nop
cmp
scas
arpl
or
dec
mov
push
jle
lahf
dec
fdivrs
jecxz
daa
mov
mov
enter
adc
mov
mov
lods
fsubrl
mov
cmp
jecxz
imul
dec
pop
pushf
sub
aam
out
cwtl
add
cmp
jg
sub
sub
cmpsb
mov
adc
sub
jo
test
and
or
xor
add
cmp
add
push
popf
xchg
inc
xchg
movsl
popa
mov
and
in
mov
adc
icebp
dec
xchg
cmp
jb
inc
jge
movsl
xor
rolb
aas
pop
ljmp
pop
or
push
sub
lahf
lock
lcall
inc
xor
bound
sar
adc
xchg
ret
cmp
xchg
and
repz
fmuls
cli
shlb
js
loope
shrb
ljmp
mov
cmp
jbe
mov
mov
push
bound
dec
addb
xor
jge
cmp
mov
insb
push
cmpsb
jb
push
bound
xchg
adc
lds
push
and
dec
xor
push
inc
sahf
push
jmp
ds
xchg
stc
mov
or
gs
xor
jo
mov
lret
mov
aam
fwait
xchg
imul
dec
sbb
loope
or
hlt
sar
movd
dec
ja
and
mov
call
inc
jecxz
loope
shl
cltd
test
or
loopne
pop
and
nop
call
out
shrb
orb
loope
lock
push
enter
bound
pop
jae
sbb
outsb
ljmp
push
pushf
fbstp
mov
lds
inc
fimull
mov
andb
ljmp
fucomip
or
ds
inc
and
push
and
jp
mov
dec
loop
jne
or
push
lods
jp
cmp
ljmp
xor
mov
push
out
push
or
push
popa
js
add
lock
xchg
push
adc
jmp
test
loop
ja
adc
add
mov
mov
mov
adc
jne
xchg
lret
mov
lods
push
xor
adc
nop
jno
mov
sbb
int3
call
inc
sbb
fcoml
roll
popa
ss
outsl
mov
mov
into
inc
jp
sub
imulb
or
jmp
cmpsb
pop
jg
sbb
stos
mov
push
aas
cld
movsl
sbb
push
adc
mov
repz
pop
jb
xchg
pop
push
push
les
jmp
fsts
xor
das
lds
dec
inc
xor
dec
stc
adc
push
fistpl
sub
and
testl
pop
sub
cli
fldl
cs
mov
movsl
imul
or
sub
mov
movsb
fidivrl
pusha
push
or
mov
and
sbb
addb
in
xchg
sbb
adc
aad
aam
pop
cld
icebp
mov
gs
fmull
popf
sub
jp
inc
jo
jnp
push
popa
fnstsw
pop
pop
mov
aam
in
cmpsb
clc
push
sbb
pop
aad
daa
scas
mov
out
mov
and
adc
pop
or
cmp
sbb
adc
outsl
pop
mov
mov
push
roll
mov
sub
and
fidivrs
cs
mov
fwait
xor
add
inc
sbb
jae
push
xor
scas
outsb
pop
or
and
mov
popf
inc
das
ficomps
push
xchg
mov
rolb
int
jp
push
aaa
in
pop
push
jl
xor
jecxz
cmp
jecxz
mov
pop
insl
add
jns
adc
cmp
gs
xor
adc
scas
sbb
adc
sub
xchg
add
fists
das
and
andb
ret
aaa
mov
mov
push
std
add
out
clc
dec
or
in
clc
mov
add
mov
add
cmp
adc
in
jl
in
sub
mov
jbe
sbb
xor
inc
je
dec
push
xor
cmp
stc
pop
pop
mov
sarl
sti
js
pop
call
push
aaa
xor
push
jl
out
or
or
push
and
inc
mov
in
jmp
push
mov
icebp
shrb
push
fildl
mov
icebp
mov
add
mov
inc
xor
iret
sub
jmp
decw
or
cltd
jbe
test
mov
inc
dec
cmc
iret
jae
lds
mov
mov
mov
push
mov
inc
sbb
add
xlat
insl
les
cmp
fstpt
mov
dec
ljmp
out
add
outsb
stos
jge
or
adc
push
jbe
dec
jl
rorl
ss
int
pushf
xor
sbb
clc
je
push
dec
xor
push
mov
repz
arpl
aaa
mov
xor
int
cmp
fwait
rcrl
pop
jecxz
pop
pop
jecxz
fwait
ret
and
in
and
pushf
imul
adc
addr16
dec
push
cmc
stos
push
jp
lods
ss
xor
xor
push
orb
call
movsl
inc
je
rolb
les
xchg
in
push
push
pop
outsl
and
pop
jecxz
pop
movsb
xlat
sub
pop
lds
sbb
jle
ficoms
sbb
shrl
pop
out
scas
test
daa
adcl
shlb
int
sbb
or
cmpsb
adc
outsl
mov
xchg
push
inc
fs
push
shr
js
inc
sti
mov
shlb
arpl
test
shr
inc
fdivrp
cli
fildl
shl
mov
inc
out
jae
jb
jle
inc
iret
pop
xor
cmp
cld
xchg
and
sbb
ficoms
pop
in
mov
sub
je
xchg
mov
pop
shll
or
lret
lods
pop
and
jo
jae
imul
cmp
cmp
mov
in
jg
xchg
icebp
adc
mov
das
popf
sbbl
fadds
add
int3
sbb
arpl
cmp
lcall
fwait
popf
jp
xchg
pop
es
sbb
add
aaa
jb
adcl
mov
or
in
add
test
jle
cmp
push
sbb
popf
inc
dec
add
aam
pop
jae
das
cmp
frstor
std
mov
sti
mov
jbe
icebp
daa
mov
sarb
loop
sbb
adc
xor
sbb
in
pop
dec
mulps
in
inc
lods
sub
in
cmp
dec
and
jne
pop
loopne
xor
jns
push
lret
in
cltd
jge
sbb
jmp
orb
lock
push
imul
cmp
addr16
cwtl
dec
jge
jns
sbb
mov
aad
adc
out
cmpsl
clc
xor
push
in
clc
jecxz
push
insl
inc
pop
stos
nop
and
stc
xor
inc
jno
and
adc
push
cmp
pop
test
insl
cli
push
push
sbb
cld
out
stc
call
jns
and
aad
pop
add
arpl
mov
cmp
cmp
push
mov
loop
jne
mov
jne,pt
sbb
push
sarb
insb
pushf
outsl
in
popf
sbb
scas
leave
cltd
push
fistl
or
sub
or
out
jp
sbb
or
outsb
mov
lock
xor
jle
dec
xchg
and
sub
dec
mov
add
imul
dec
add
sub
sub
xlat
xchg
fstpl
jae
ret
pop
mov
add
dec
rol
push
test
lcall
push
fcoms
ljmp
movsb
push
jmp
out
insl
xchg
in
pop
scas
mov
lcall
jmp
fstpt
stc
test
outsb
mov
popa
push
cmpsl
adc
pop
push
mov
sbbb
jnp
dec
sub
jno
ret
or
aas
rol
mov
call
or
dec
imul
add
jo
pop
scas
lcall
addr16
mov
aad
in
popf
inc
mov
mov
ret
mov
data16
cwtl
ds
xchg
fldcw
mov
int3
sahf
ja,pt
cmc
les
cmp
insl
mov
cmc
and
mov
mov
or
in
mov
in
leave
mov
push
in
sbb
sahf
mov
mov
or
and
dec
pushf
xchg
or
mov
mov
js
ljmp
bound
pop
cmp
and
movsb
cmp
es
add
das
push
adc
shll
movsb
sbb
lahf
divb
cli
jle
andl
rcr
pop
je
push
add
cmpsb
add
fmuls
sti
jge
or
push
push
je
jae
push
and
cs
mov
repz
mov
sub
xchg
push
mov
mov
lock
popf
dec
icebp
and
push
pop
insb
movsl
lret
pop
popf
fldenv
cmp
add
jecxz
xor
mov
dec
sub
sub
dec
xor
test
bound
xchg
dec
das
cmp
push
pop
hlt
xlat
add
add
sbb
mov
jmp
jns
ja
stos
inc
push
or
mov
mov
jmp
ret
inc
cmc
insb
or
inc
sub
pop
mov
dec
inc
movsl
and
loope
jb
repz
mov
jno
call
dec
and
push
loope
add
stos
in
int
int
jge
dec
cltd
mov
and
call
sub
push
jl
dec
sbb
movsb
pop
fxch
sub
jae
push
xchg
repz
cmp
sbb
jecxz
in
shlb
ljmp
add
in
rorb
ja
mov
repnz
cltd
adc
xchg
lahf
aad
xor
xor
sbb
lret
outsl
mov
xchg
mov
sub
lret
jp
pop
inc
sbb
hlt
and
mov
repnz
inc
pop
xchg
cmc
adc
xchg
dec
aaa
pop
iret
mov
jo
lods
call
cmp
les
mov
das
push
pop
pop
add
ret
push
lahf
sbb
pop
enter
adc
jmp
arpl
addr16
pop
inc
pop
lcall
pop
jne
daa
hlt
pop
das
inc
shrb
movsl
jbe
popf
xor
loope
xlat
out
or
mov
and
stos
dec
loope
lret
or
jnp
ret
aaa
jge
mov
xchg
ss
jmp
subb
xchg
ret
scas
mov
scas
pop
lret
push
rcrb
jle
mov
cmp
loopne
stos
or
ret
in
out
popf
out
push
xor
into
mov
xor
mov
mov
iret
into
xchg
xchg
sbb
fsubr
inc
xchg
mov
fldt
jno
ss
sbb
adc
scas
insb
xchg
adc
mov
add
scas
mov
in
add
shl
xchg
push
in
jle
ficoms
mov
xchg
pop
ss
mov
or
xchg
mov
loopne
outsl
xchg
ja
repz
jb
rcl
sub
in
xlat
pushf
lahf
cmp
xor
not
daa
sub
shl
movlps
mov
ret
daa
cmp
ljmp
test
pop
fnstsw
mov
lock
cmp
loope
and
jle
jo
aas
push
rolb
aas
add
fisttpl
pop
lahf
xchg
xchg
mov
xor
inc
jge
andl
aas
movsb
mov
stos
pop
popf
dec
ret
and
mov
orb
sbb
ja
pop
pop
lods
push
daa
scas
mov
outsl
jo
push
imul
pop
jge
add
mov
sbb
fadds
ror
movsb
ret
pop
mull
sub
inc
sub
add
in
cmc
mov
pop
dec
loope
idivl
or
jp
insb
jbe
stos
leave
test
xor
stc
loopne
inc
scas
in
lahf
dec
shrb
mov
inc
push
mov
jle
ret
cmp
fdivr
push
mov
pop
xlat
outsb
enter
xchg
mov
dec
into
imul
xor
fucomip
cld
js
and
cmp
hlt
cmpb
mov
fwait
xor
push
ljmp
inc
adc
inc
xchg
bound
cmpsl
xchg
clc
aas
inc
ds
rcl
in
mov
lret
cmp
bound
rcrb
push
mov
pushf
shl
out
mov
int
xchg
pop
imul
adc
mov
mov
iret
loop
sbbl
mov
xchg
mov
testb
rorl
gs
xchg
inc
and
push
aad
or
in
push
dec
ror
or
dec
out
add
cmp
mov
jmp
pop
xchg
xor
loope
xchg
push
push
push
stos
stos
and
testb
xor
add
mov
mov
push
in
stos
sahf
cld
xchg
jp
data16
cltd
xchg
cmp
cmpsl
jnp
shlb
dec
cmp
iret
push
add
lock
xchg
push
xchg
adc
inc
insb
push
das
subb
xchg
xchg
imul
lret
xchg
movsb
pop
sbb
xchg
cmp
mov
andb
aam
adc
ds
add
push
push
dec
xchg
dec
iret
mov
dec
psubd
fiaddl
fistpl
es
fcompl
adc
lds
pop
add
adc
loope
dec
fdivrs
jmp
push
aas
aad
int3
adc
std
or
sbb
dec
inc
jl
and
mov
xchg
cli
repnz
jno,pt
sbb
sub
shrl
aam
adc
jmp
xchg
inc
in
int
push
mov
aad
iret
sbb
stc
scas
cmp
jp
cmp
outsb
call
call
call
pushf
xor
hlt
lds
sbb
pop
sbb
pop
lods
xor
data16
loope
xor
movb
lock
push
inc
jmp
mov
jnp
cmp
lea
add
jecxz
sbb
push
inc
jle
inc
mov
jae
jle
mov
inc
mov
jmp
xchg
push
lcall
cmc
sub
and
ss
push
or
mull
adc
jecxz
lret
into
pop
mov
pusha
jge
arpl
arpl
and
inc
fcoml
lea
xchg
pop
fmuls
or
or
pop
stos
popf
in
push
outsb
pop
mov
aas
mov
aaa
imul
or
js
popf
jns
mov
ret
jp
pop
xchg
lcall
jg
inc
mov
scas
mov
out
dec
adc
insl
insl
xor
aam
sbb
inc
lret
mov
adc
mov
in
push
inc
fsubp
push
fsubrl
loopne
push
fbld
mov
pop
aad
insb
xor
movsl
in
ljmp
pop
int
dec
cmp
adc
test
ret
imul
push
scas
pop
sbb
sub
mov
jae
into
cmpb
jnp,pt
nop
hlt
sub
jno
enter
lods
fsubrs
stc
lock
int
add
inc
push
xorb
mov
into
lock
jae
adc
and
push
adc
jle
or
cli
xor
add
add
jne
adc
int3
rorb
popf
mov
arpl
jge
test
sbbb
xor
cwtl
push
fisubrs
stos
push
pop
sahf
jp
aas
in
add
push
test
paddsb
std
mov
inc
sbb
test
es
cmc
jo
ljmp
scas
leave
push
daa
cmp
mov
test
add
lock
inc
das
dec
sahf
mov
insb
mov
cmpsl
subb
cmp
xchg
test
jae
aas
filds
cmpsl
or
jg
enter
lret
cmp
push
push
neg
lret
cltd
aam
clc
xchg
jmp
je
jl
jne
pop
dec
jg
imul
sbb
ret
test
sbb
pop
jle
add
xor
adc
negb
dec
scas
cmp
sbb
sub
hlt
nop
jno
jnp
cltd
add
iret
dec
shrb
sub
fadd
ljmp
pop
dec
cld
repnz
in
cmp
push
cmpsb
mov
xor
dec
repnz
inc
jecxz
fimull
ja
pop
jmp
rclb
std
inc
jmp
aam
mov
push
mov
test
sbb
sbb
push
pop
adc
fwait
lret
cltd
lea
hlt
xchg
or
decb
lea
cmpsl
push
cs
mov
cwtl
xor
movsb
stc
scas
pushf
shlb
test
add
xor
outsl
cltd
inc
push
dec
xchg
dec
mov
mov
sbb
dec
mov
lcall
mov
inc
cli
dec
push
adc
push
rorb
push
les
test
stos
push
or
repnz
arpl
or
xchg
cmp
loope
adc
rclb
outsb
inc
jne
icebp
mov
imul
stos
cmp
std
pop
or
pop
push
mov
mov
sbb
adc
pop
or
addl
push
ss
bound
inc
fdivs
jnp
rol
xor
ljmp
lods
ret
jb
je
shll
pop
dec
push
lahf
stos
hlt
lds
imull
lock
lea
les
lods
jae
mov
mov
pop
jno
repz
aam
stos
daa
mov
and
ror
xchg
xchg
push
xor
incb
iret
ss
adc
repnz
rorl
andb
je
scas
ja
pop
leave
cmpl
xor
dec
xchg
sti
push
or
cwtl
mov
add
jb
or
lret
add
and
sub
lock
jbe
dec
lret
and
lods
or
aaa
test
loopne
cli
sbb
fisubl
fdiv
shlb
pop
add
lret
pop
push
fsubr
and
mov
leave
xchg
xchg
leave
cmp
popa
or
jge
cmp
mov
jo
pop
add
stos
xchg
sbb
fisttpll
push
mov
push
inc
ds
scas
leave
mov
and
jg
daa
mov
jns
mov
add
aaa
lcall
leave
or
jnp
loopne
mov
mov
rorl
jge
mov
push
mov
sbb
xchg
cltd
call
fwait
xchg
or
repnz
stos
jae
movsb
int
mov
adc
pushf
mov
in
jne
mov
ja
xor
jbe
push
loopne
scas
repnz
mov
fwait
pop
jns
mov
cld
aad
xchg
repz
cmpsb
xchg
fs
add
pop
aam
stos
ficoms
aam
mov
movsb
mov
sub
adc
outsl
inc
data16
fs
jle
sub
pop
pop
inc
leave
cmpsl
add
mov
repnz
push
lods
and
sbb
push
jmp
ljmp
arpl
cmpsl
cld
arpl
int3
cmp
sbb
sub
adc
mov
popa
and
loop
shl
or
jl
xchg
lock
mov
inc
in
jns
sbb
cmp
rcrl
dec
out
repnz
loopne
iret
jle
mov
mov
sbb
lods
bound
adc
fwait
pop
mov
jae
cmpsl
mov
pop
js
rorb
les
int
add
popf
add
addb
mov
jecxz
lahf
arpl
or
mov
rcl
insl
inc
adc
and
in
mov
fldt
fdivrl
lret
sbb
cmp
cmp
mov
pop
pop
adc
jmp
test
outsl
jl
iret
fidivrs
ljmp
cwtl
mov
jmp
mov
in
mov
mov
sbb
sarl
movsl
cmp
popa
jp
cmp
ret
or
sahf
inc
into
push
sub
mov
mov
bound
out
into
mov
xor
lret
xor
sub
push
aam
cwtl
add
mul
mov
in
jecxz
adc
pop
or
jmp
jne
in
outsb
mov
mov
movsl
dec
pmaxub
jecxz
aas
jae
loopne
pop
push
pop
adc
xor
fcmovu
sbb
movsl
xor
dec
jnp
es
xchg
xlat
mov
lods
ljmp
push
iret
pop
mov
pop
fidivrs
jne
cmpsb
jb
in
sub
nop
dec
inc
mov
lods
mov
fisttpl
adc
cmpsl
pop
fcom
jle
xor
sbb
faddl
cmp
daa
jg
xchg
in
jp
sbb
and
data16
push
stos
xor
ret
das
negb
add
test
addr16
push
and
mov
adc
inc
shlb
call
push
add
sub
mov
dec
lahf
jns
subb
jae
icebp
in
loop
xchg
jle
loope
mov
mov
repnz
sub
cmpsb
imul
adc
pop
aaa
jge
cmp
fs
aam
xor
xor
ficoms
mov
loopne
movl
jne
xchg
test
cltd
mov
fimuls
lahf
dec
dec
out
je
inc
adc
mov
and
loopne
lcall
es
and
cmpsb
es
pop
int
test
push
xor
xor
xchg
test
shrl
mov
call
and
jno
out
sbb
or
test
sub
push
or
jle
icebp
int3
push
in
mov
sub
and
aam
xchg
cltd
shl
jne
or
mov
mov
push
sbb
mov
mov
xorb
out
mov
mov
ret
and
fildll
std
enter
push
insb
or
mov
sub
pusha
movsb
xchg
sub
or
arpl
mov
push
aaa
xchg
mov
sub
jb
or
lods
xchg
cmp
xchg
ret
sbb
push
enter
testb
daa
mov
arpl
jno
xchg
shrb
dec
pop
mov
popf
mov
adc
stc
xlat
icebp
jl
cltd
sub
repz
mov
cmp
or
cli
mov
pop
push
mov
sahf
cli
fimull
lcall
mov
shrl
aad
jle
sbb
imul
adc
pusha
cmp
mov
xor
dec
js
cli
aaa
sub
lock
push
cmpsb
gs
es
add
sub
or
cs
pop
jo
adc
stc
and
mov
loope
push
push
sub
xor
or
xor
andl
cmpsl
mov
adc
aas
jl
out
into
mov
inc
loopne
adc
jge,pn
sub
mov
jmp
mov
shl
adc
inc
sbbl
add
jbe
lock
loopne
stos
push
xchg
cmpsb
mov
sbb
push
ljmp
lods
out
movsl
sub
movsb
stos
inc
mov
xor
push
sub
dec
adc
movsl
jle
jl
jnp
cmpsl
loope
dec
js
aas
loopne
or
inc
add
push
test
insl
pop
xlat
sub
xor
cmp
into
dec
and
movsl
hlt
adc
stos
fs
adc
mov
int3
nop
adc
fiadds
pop
lcall
cli
sub
pop
testb
or
pop
lods
jp
mov
data16
push
push
lret
pop
lock
xchg
fisttpll
push
bound
pop
push
sbb
ficoml
cmp
xchg
mov
lahf
mov
inc
pop
fistpll
lds
cmpb
jge
fucomi
jecxz
cmp
dec
lret
push
pop
push
lret
and
dec
jge
roll
mov
rclb
ret
xchg
dec
push
cmp
sbb
push
mov
outsl
and
sub
dec
dec
cmp
xchg
jbe
xchg
fsubs
movsl
xchg
fwait
sub
inc
add
fs
aas
loopne
xchg
pushf
inc
mov
les
pop
push
cmpl
add
dec
sub
adc
jg
hlt
add
xor
dec
mov
and
jne
jne
mov
lock
add
movsl
aaa
shlb
push
scas
shlb
pop
pop
imulb
cltd
rolb
cmp
inc
into
dec
sbb
pop
faddp
std
and
fcmovu
xchg
and
sub
cmp
orb
push
movsl
push
in
int
rcll
aaa
imul
push
cmp
pop
out
pop
bound
jp
mov
xchg
xor
adc
mov
dec
inc
ret
aam
jno
pop
pop
cmp
testl
or
out
stos
pop
mov
push
js
addr16
in
cmpl
ljmp
mov
dec
sub
nop
pop
xor
aaa
dec
lahf
js
test
add
loope
mov
adc
popf
pop
jne
and
test
dec
nop
inc
insl
and
jp
test
cmp
sub
test
or
fstps
ljmp
xacquire
sbb
in
sti
lods
in
add
popa
in
push
arpl
cli
loopne
jp
cmp
jne
sbb
cmc
cmp
xlat
negb
ljmp
xor
sbb
adc
push
enter
je
sbb
add
xorl
int
sub
scas
adc
mov
lods
das
xor
adc
mov
inc
adc
mov
xor
mov
pop
je
xor
cmp
add
setp
test
lock
xchg
jp
sub
cli
hlt
int
jno
sbb
xor
in
outsb
je
ss
sarb
rclb
inc
lock
clc
rolb
add
inc
jp
rcrl
mov
and
popf
arpl
sub
ds
fisubrl
fs
hlt
orl
aad
sbb
lock
movsb
jmp
xor
outsb
xchg
add
push
je
sarb
push
rolb
sub
adc
push
in
inc
or
insl
dec
and
jp
sub
add
push
adc
or
add
dec
push
dec
test
lret
fstpl
cwtl
dec
xchg
and
sti
xchg
mov
adc
jg
dec
push
or
inc
xor
pusha
ljmp
push
jge
mov
push
das
sub
mov
lret
xchg
iret
lea
push
push
mov
jle
stc
ds
cmp
jl
and
mov
sarb
push
jge
xlat
mov
in
jge
xor
les
adc
decb
sbb
dec
and
or
jl
or
daa
in
inc
mov
std
push
stc
mov
add
popa
jp
test
mov
jnp
cltd
rclb
movsl
push
sti
in
imul
fcmovne
out
add
inc
or
push
pop
out
xchg
pop
xor
mov
and
inc
enter
and
lcall
clts
mov
adcb
out
stc
jae
xchg
adc
mov
add
ret
push
ds
stos
cmp
sahf
sub
fiadds
mov
mov
pop
mov
inc
call
imul
pop
in
int
push
cmp
add
adc
lret
data16
cmp
xchg
repz
test
mov
into
lods
xchg
cmp
adc
sti
and
insb
leave
fadds
mov
xchg
daa
out
clc
sbb
and
lods
into
mov
jne
fidivl
mov
les
cwtl
cmc
lock
aas
ss
add
repnz
push
cltd
rcr
popf
mov
or
mov
or
mov
das
mov
adc
rorb
inc
or
jns
add
add
fdivrs
adc
addr16
inc
xor
xor
pop
pop
dec
adc
mov
iret
nop
aaa
rcll
pop
mov
call
ret
sysenter
mov
and
addl
movl
push
and
out
call
cmpsb
jl
shll
pop
in
out
cmp
ret
hlt
or
dec
and
lret
xor
push
xchg
sub
sahf
mov
pop
sub
clc
test
je
cmp
test
and
jecxz
ret
xor
cmpsb
mov
outsl
gs
push
cld
lahf
push
mov
test
roll
std
mov
cld
jb
popa
jecxz
and
mov
movsb
lcall
mov
dec
movsl
mov
icebp
xor
xchg
mov
je
jbe
inc
or
andb
dec
adc
mov
cmpsb
out
lret
dec
daa
push
outsl
sub
mov
shll
loop
add
pop
outsb
push
mov
pop
fldz
adc
lods
leave
testl
sbb
inc
pop
aas
mov
sahf
dec
dec
repz
sbb
sbb
nop
dec
scas
outsl
push
jbe,pn
mov
sub
pop
popf
nop
and
es
in
aam
icebp
xor
fwait
jg
lret
repz
test
data16
mov
nop
pushf
push
pop
lret
in
or
sub
lret
xchg
pop
inc
clc
fsubrl
jae
sarb
and
lds
cs
lret
repz
clc
je
lahf
jo
sub
rcll
mov
ss
push
loopne
lret
jb
mov
iret
dec
gs
negb
sub
popa
push
sbb
mov
jmp
add
mov
ret
mov
aaa
ret
pop
sbb
loope
adc
add
cmpsl
imul
dec
js
fisubs
xor
add
cmp
loope
jae
pusha
xchg
shll
dec
push
mov
pop
push
es
data16
push
popf
int
or
aad
mov
lahf
sub
add
sub
inc
imul
scas
adc
leave
push
pop
xchg
lock
cmp
adcb
das
sub
fcmovbe
popa
mov
jp
push
aas
adc
leave
cmp
and
nop
mov
xor
mov
mov
add
pop
aaa
bound
sar
pop
insb
out
jmp
mov
mov
cli
dec
push
outsl
push
cmpsb
rolb
stos
inc
xorb
lds
cli
jle
lods
insl
fst
lea
jmp
mov
mov
jae
pop
push
ficompl
and
mov
xor
call
mov
jo
cmp
das
fs
push
bnd
and
loop
ja
test
dec
in
call
or
dec
cld
test
insb
push
cld
pushf
or
xor
adc
fists
dec
xor
and
popl
repnz
popa
or
pusha
inc
lret
shl
out
add
movsb
test
adc
xor
or
xlat
xchg
mov
inc
lcall
aam
imul
mov
add
pop
mov
and
push
or
aaa
xor
add
mov
pop
je
xchg
jno
cmp
cmp
loop
orl
stc
pop
jg
cwtl
outsb
pop
scas
mov
lods
mov
mov
mov
add
pop
imulb
mov
push
fsubl
jo
sub
lcall
faddl
mov
in
inc
adc
mov
cmp
ficompl
xchg
out
addl
inc
and
push
cwtl
sahf
imul
pushf
adc
cmpl
mov
addl
imul
pop
testl
repnz
sub
push
enter
add
arpl
xchg
xor
test
into
inc
cwtl
das
loopne
int3
add
stos
shrb
push
and
test
ss
out
mov
xchg
add
xlat
outsb
dec
sub
fistpl
inc
or
inc
mov
int
cmpsb
sub
adc
data16
mov
inc
mov
dec
mov
jle
pop
xorl
xor
xchg
and
push
adc
mov
fwait
adc
and
lret
out
imul
ljmp
mov
insl
adc
or
jb
cmovp
pop
ret
pop
xchg
inc
cwtl
scas
adcb
mov
jecxz
in
mov
jno
idiv
addr16
sbb
add
push
push
outsb
shll
in
sahf
mov
lahf
test
mov
jnp
test
outsl
xchg
mov
add
icebp
sarl
pop
test
and
popa
jne
dec
clc
jmp
enter
inc
das
mov
xchg
repz
jl
imulb
es
xor
push
je
cmp
add
sub
ret
andl
mov
orb
jb
cmpsl
in
sbb
mov
gs
popa
push
cmpsb
mov
aaa
mov
push
sbb
fadds
loop
lods
or
lea
pop
lea
xchg
push
inc
movsl
xchg
fdecstp
lods
jnp
inc
inc
popa
in
xchg
stos
pop
ficompl
cmp
lods
dec
or
cmp
push
out
sub
clc
daa
push
dec
mov
or
movsb
jnp
lods
scas
fstp
enter
lds
pop
es
cmp
call
int3
cmp
fistpl
fcompl
sub
out
xlat
das
pushf
into
pop
sti
mov
pop
scas
push
fs
out
add
sbb
cmp
xchg
xchg
xor
mov
inc
lahf
shl
sbb
sbbb
inc
clc
out
dec
in
int3
dec
inc
fld
adc
mov
call
int
jle
add
popf
or
sub
mov
or
mov
outsb
and
mov
xchg
xlat
lods
popf
mov
stc
mov
jle
pop
push
jb
movsl
repz
cmp
rcrl
sbb
daa
sbb
ficompl
fldenv
pop
add
test
dec
or
jmp
and
out
in
jl
in
js
cld
fnstsw
mov
pop
cmc
mov
stc
inc
pushf
inc
jecxz
push
shlb
nop
imul
and
sub
jl
sub
fldl
inc
lcall
mov
adc
xchg
in
movsb
movsl
ds
idiv
and
sahf
arpl
nop
inc
iret
test
daa
xor
std
jns
movsb
push
ffree
adc
repz
fisttpl
mov
mov
aam
or
sub
cltd
scas
cmp
jbe
dec
jge
scas
into
gs
shlb
aad
ss
push
mov
std
cmpsb
jmp
iret
divb
lods
xchg
mov
push
test
pop
mul
je
ljmp
stos
aaa
add
xchg
sub
mov
sbb
mov
in
je
mov
fst
scas
mov
mov
jge
inc
sbb
ja
subl
push
fst
cs
sbb
lea
xor
or
jae
mov
inc
jecxz
aad
push
bound
addr16
sbb
aas
inc
sar
lods
jns
popa
xchg
xchg
pop
cltd
inc
mov
pop
xchg
pop
fistl
loopne
pop
sbb
push
push
popa
push
lods
lcall
mov
jno
sub
xchg
inc
fildl
sub
add
mov
push
leave
inc
call
jle
cmp
lds
fldenv
xlat
inc
mov
rcrb
decl
push
jbe
je
jge
icebp
jge
in
cmc
stc
push
pop
and
pop
leave
leave
pop
xchg
test
add
sahf
test
sub
in
pop
ret
les
cmp
mov
add
push
or
lea
imul
xchg
adcb
mov
mov
push
daa
rclb
mov
test
mov
dec
outsl
outsl
scas
lahf
jge
add
adc
aas
outsb
adc
add
sahf
jle
clc
gs
adcl
shlb
pop
test
mov
dec
push
push
gs
mov
mov
stc
jmp
cmp
pop
ds
sbb
rcll
jl
stos
lock
adc
pop
aam
mov
xor
push
popa
pop
jnp
xor
leave
les
dec
out
repz
and
stos
sahf
ds
nop
xchg
adc
push
mov
arpl
aad
lds
bound
dec
adc
mov
mov
cltd
adc
call
scas
pop
repz
gs
adc
cmc
add
loope
jnp
cld
data16
into
daa
movsb
mov
mov
fs
rclb
cli
xlat
xor
sub
daa
lcall
mov
adc
repnz
out
sub
cmp
dec
out
mov
int
jmp
adc
jmp
sbb
jns
into
mov
leave
jle
mov
negl
lds
ds
xor
mov
push
fisttpl
pop
jl
ror
int3
inc
mov
test
fistpll
ss
std
jg
pop
sbbl
and
popa
imul
and
test
cmp
loop
test
loop
sub
jg
jnp
mov
jmp
dec
inc
lret
xchg
imul
push
loop
mov
sub
outsb
ss
shlb
pop
cmp
out
lods
push
inc
xchg
rcrb
sahf
sar
imul
mov
mov
dec
xor
push
jnp
dec
imul
test
mov
mov
pop
lahf
xor
pop
xor
pop
and
filds
xor
fisttps
pushf
cmp
div
mov
addr16
andps
xchg
dec
adc
add
cmp
push
jb
lret
cmp
mov
fists
test
fs
jbe
mov
sbb
test
dec
xchg
mov
jl
xor
aas
cmp
add
sbb
xchg
pop
cld
rclb
rclb
xor
outsb
repnz
mov
ds
mov
popa
pop
pop
xchg
lock
lahf
insb
inc
mov
and
popa
mov
dec
js
sbb
mov
adc
adc
cs
loope
adc
decl
add
push
movsb
inc
mov
fbld
mov
jg
out
adc
loope
lahf
inc
pop
push
in
frstor
loop
lds
cmp
mov
push
icebp
mov
sub
xchg
lret
pop
bound
fdivr
dec
pop
or
int3
test
call
sti
cmp
ficompl
inc
fidivrs
or
push
add
fidivl
cmp
mov
enter
stos
xchg
ja
inc
sahf
inc
xchg
out
scas
push
faddl
out
sbb
dec
pop
or
adc
jne
sub
xchg
pop
std
lods
pop
xchg
dec
sarl
stc
add
and
ret
shrb
pushf
sbb
js
cltd
add
andb
addb
test
je
jp
jno
xchg
jb
jnp
push
pop
adc
mov
testl
stos
and
in
shl
pusha
in
sub
imul
xlat
xor
mov
xlat
test
inc
cmp
out
ljmp
daa
in
arpl
xchg
fimuls
into
inc
sbb
jge
aad
aas
mov
sbb
insl
jp
mov
push
cmc
test
mov
cmp
ss
insb
fimull
dec
lret
jno
loopne
mov
and
xchg
sbb
iret
jo
inc
lock
mov
mov
das
push
mov
out
addr16
mov
pop
xchg
shlb
mov
fdivrl
or
nop
aas
cmpsb
and
shll
stos
xor
leave
sti
insl
xor
inc
lds
test
rorb
pop
add
jno
insl
push
or
dec
scas
hlt
jne
mov
add
movsb
cmpb
lret
ret
sbb
aaa
repz
jae
lods
rolb
xchg
test
push
or
cmp
mov
fadds
and
mov
dec
pop
cmp
mov
xor
in
xor
sub
test
push
mov
fistl
lods
push
jbe
dec
sub
pusha
cmp
lods
je
ffree
xchg
dec
ds
pop
mov
inc
cli
daa
fbld
xchg
repnz
aam
jp
mov
sub
mov
idivb
insl
cmp
push
cmpsl
add
mov
dec
fadds
adc
test
push
mov
cmc
mov
out
out
repnz
sbb
inc
je
scas
nop
addr16
pop
in
add
repz
lods
xlat
and
mov
loop
negl
push
in
add
add
mov
inc
imul
or
sahf
aad
daa
aas
and
scas
nop
dec
sbb
adc
push
imul
subb
push
inc
outsl
sbb
clc
dec
xchg
and
enter
outsb
out
sbb
clc
inc
xor
mov
fmull
stc
fdiv
sub
or
outsb
adc
loope
xlat
dec
mov
test
push
sub
lods
shrb
popa
add
in
test
push
jbe
xorb
sahf
lods
pop
fidivrl
hlt
aas
mov
das
xchg
mov
dec
decb
in
sub
jo
pop
int
test
call
sbb
pop
pop
push
lret
adc
mov
xchg
mov
stc
dec
inc
pop
ljmp
mov
cmp
in
push
jo
call
jb
sbb
and
testl
stos
rorl
dec
mov
into
iret
mov
xor
jbe
cmp
and
inc
ficomps
pop
or
push
mov
inc
repz
adc
sbb
shlb
push
inc
fcmove
xchg
jb
add
mov
stos
outsb
int3
imul
jp
add
and
push
dec
and
sbb
pushf
jecxz
xchg
mov
mov
sub
out
imul
fcomps
aad
xorl
add
adc
rcll
adc
dec
mov
test
mov
mov
and
add
in
push
pop
stos
ss
lods
adc
inc
pop
sub
xchg
into
addr16
mov
xchg
test
scas
xchg
shlb
dec
dec
cmc
lods
hlt
xchg
add
movsb
xor
enter
test
test
xor
dec
pop
ret
in
mov
push
cmp
mov
cmp
fucomip
imul
or
jno
int3
xchg
and
rdtsc
fsts
pop
jl
adc
sub
pushf
out
cmp
adc
xchg
xor
mov
fsubrl
mov
cmp
ds
aam
negl
repnz
push
lahf
daa
pop
sub
fsubs
adc
cltd
addb
or
sub
scas
fdivs
add
or
mov
dec
mov
mov
xchg
and
jno
scas
icebp
test
idiv
rcrl
lock
add
or
xchg
popa
ds
sbb
sbbb
insl
enter
push
lock
sbb
add
pop
rorb
andb
cmp
mov
repnz
and
daa
sbb
shlb
dec
in
xchg
and
bnd
push
outsb
pop
sbb
loopne
movsb
jg
push
jo
sbb
add
mov
in
xchg
imul
out
cli
push
cld
cmpb
mov
movsl
cmp
sbb
mov
test
enter
mov
push
mov
rcll
sbb
jmp
fcomip
pop
jle
hlt
lea
cmpsb
sbb
sub
mov
out
loope
sbbb
movups
adc
adc
stos
subl
jl
cmp
xchg
add
mov
loopne
dec
jp
mov
loopne
sub
gs
inc
mov
popf
mov
lea
cmp
mov
xchg
jecxz
and
inc
dec
call
add
data16
pop
movsb
push
push
aaa
icebp
xor
and
hlt
addb
sbb
fadd
jnp
cmp
inc
and
les
jg
leave
std
clc
mov
bound
mov
dec
pop
rol
mov
fsubrl
nop
jecxz
inc
int
test
mov
sbb
xchg
xchg
lds
shlb
cmp
pop
insb
jg
scas
xchg
call
mov
mov
call
push
xchg
sti
jo
sub
adc
push
pop
aaa
cltd
cltd
jge
out
add
outsb
fsts
incl
inc
inc
push
xor
shll
add
inc
jb
mov
mov
or
je
dec
test
stos
mov
fldl
icebp
insb
push
adc
xchg
or
and
cmpsl
cmp
cld
fisubrl
int3
sub
xchg
aad
dec
jecxz
or
push
insl
nop
jp
imul
add
cmpsl
loopne
inc
cmp
xchg
add
jb
loope
pop
dec
xor
pop
cmpsb
jle
aad
push
cmp
addr16
int3
inc
les
jb
xor
mov
int3
push
pop
and
push
sete
aas
int
int
mov
mov
lods
stos
out
mov
sub
jne
and
mov
sub
gs
cmp
fs
scas
in
mov
icebp
outsl
stc
lea
pop
out
fwait
inc
out
xchg
mov
inc
pusha
jp
jmp
mov
add
inc
cli
add
pop
dec
out
inc
xor
add
sbb
push
movsb
inc
adc
call
sub
inc
push
lcall
out
mov
aam
sub
sub
cmp
movl
mov
xor
divl
inc
ret
pop
movsb
fdivp
aas
pusha
cmc
xchg
adc
andl
in
mov
xor
mov
incl
inc
daa
add
mov
dec
pop
pop
fstl
or
fs
filds
lds
stos
cwtl
fisttpll
jnp
iret
repnz
scas
fnstenv
push
or
pop
cmc
jge
mov
pop
jb
add
outsb
inc
inc
adc
or
loopne
inc
aas
cmpsb
jecxz
xchg
pop
jae
and
outsl
std
dec
or
jl
and
cmpsb
pandn
push
leave
into
dec
inc
xchg
fsubl
xor
js
movl
dec
sub
faddl
loopne
jnp
ret
add
lods
xlat
or
jb
daa
sub
repnz
fsubrs
nop
sub
inc
xchg
mov
jae
lock
nop
ffreep
jle
lret
bound
flds
aam
xor
jno
xor
push
inc
push
das
divb
dec
test
push
sahf
and
pop
out
test
mov
daa
dec
repz
lret
inc
test
fdivrs
out
or
ljmp
addr16
out
lods
out
popf
inc
pusha
or
xchg
pop
leave
lahf
inc
pop
rorl
je
mov
mov
in
js
fnstsw
jae
lock
inc
jns
cmp
sub
dec
sahf
jno
hlt
dec
daa
jp
cmp
jp
add
addb
std
sbb
rcll
cmp
test
movsb
pushf
pusha
jnp
sub
and
aas
xor
adcl
sbb
xor
push
xchg
add
out
in
enter
push
push
add
push
ret
faddl
idivb
popf
jae
fists
mov
mov
jbe
fucom
lret
scas
ds
imul
and
cli
cmp
dec
ja
mov
sbb
jg
dec
bound
mov
fwait
negl
rolb
inc
add
add
mov
mov
mov
and
repz
test
in
push
out
decb
sub
adc
cmp
out
dec
inc
outsl
push
jle
dec
in
cmp
xorb
jnp
loope
pusha
add
cmp
ret
out
mov
jnp
dec
out
ljmp
xorb
mov
sbb
stos
jl
inc
cwtl
repz
jb
jl
call
xchg
repz
test
push
mov
aam
daa
ss
pop
add
adc
sbb
dec
aam
out
loop
add
stos
enter
out
push
mov
or
adc
or
adc
push
cmc
mov
adc
fsubs
shrl
xor
outsl
data16
arpl
xor
or
cmpsb
in
iret
lea
and
push
test
fiadds
fs
dec
jmp
fsubs
sbb
mov
fnstsw
jg
arpl
xor
mov
jns
fmull
lods
mov
jns
mov
or
das
and
sub
lret
stc
incb
decl
mov
fisubs
lock
out
adc
mov
movl
gs
add
dec
mov
outsl
popf
stos
mov
mov
in
int
jecxz
aas
andb
mov
cwtl
icebp
je
push
jge
dec
xchg
sbb
jns
mov
mov
jecxz
pop
lods
and
addr16
dec
das
lods
mov
dec
dec
icebp
sti
mov
cltd
sahf
xchg
insb
cmc
pop
cmp
xchg
mov
movsl
fidivs
movsb
dec
xor
out
mov
decb
dec
hlt
push
gs
clc
inc
mov
push
adc
jle
rcl
out
shufps
lods
notl
stos
mov
cwtl
shr
xor
mov
xor
pushf
pop
pop
inc
xchg
or
add
mov
sub
cs
xchg
jno
jle
push
push
mov
mov
stos
jns
cmp
pop
lods
adc
das
mov
dec
mov
outsb
adc
outsl
scas
xor
mov
pusha
sti
lds
leave
jo
pop
sahf
jo
jb
imul
cli
dec
imul
movsb
adc
push
or
jnp
in
test
movsl
stos
jmp
inc
mov
into
or
push
int
fwait
or
aad
js
movsl
imul
push
out
inc
xor
int
mov
mov
adc
or
xor
xchg
fists
jl
in
test
jle
pushf
test
mov
mov
lahf
insl
cld
xchg
sbb
je
ret
fldl
push
mov
popa
adc
mov
inc
lods
pop
inc
nop
pop
jge
mov
ret
jecxz
test
xchg
div
push
into
ja
xchg
jno
xchg
imul
std
lods
adc
movsb
fisubl
out
sti
test
movsl
add
jge
divl
ficomps
jnp
mov
fs
out
push
add
xchg
xor
cld
sub
dec
in
adc
sbb
ret
push
xchg
ss
sub
aad
dec
or
repz
xchg
inc
pop
and
dec
and
push
test
jmp
cmp
nop
lcall
inc
xor
or
sub
lock
cmp
add
xchg
ds
arpl
out
mov
xchg
ret
or
pop
mov
push
xchg
filds
rcrl
mov
mov
dec
jae
inc
pop
lea
mov
and
cld
pop
js
mov
adc
mov
adc
dec
push
test
dec
pop
pop
shrl
cs
mov
jmp
mov
xor
jno
inc
das
lret
imul
xchg
pop
faddp
dec
xor
xor
scas
aad
mov
jnp
mov
daa
flds
xchg
mov
jb
cmovge
test
sti
mov
pushf
jp
adc
mov
enter
cltd
repnz
insb
sub
sub
sbb
fadd
in
call
gs
sbb
lea
insl
je
std
repz
cmp
dec
sub
jge
push
mov
or
jecxz
mov
sbb
and
data16
xor
mov
sarl
les
adc
xchg
lcall
pusha
repz
xor
mov
push
cmp
push
mov
loopne
xor
dec
rol
imul
or
and
cs
jmp
mov
call
out
mov
stos
dec
push
or
or
mov
cmp
fsubr
in
jmp
inc
cmp
call
or
shl
shrl
into
cmp
fs
jnp
hlt
lds
lcall
push
lods
je
fwait
add
les
rcrl
xchg
sbb
daa
or
loope
xchg
fisttpl
mov
push
push
sub
movsb
aad
cmpsl
push
jg
call
and
icebp
inc
adc
into
pop
mov
jle
xchg
mov
dec
add
or
sbb
inc
arpl
in
imul
xor
lcall
xchg
pop
lret
jne
sbb
xor
js
popa
lods
push
fs
mov
jl
cs
mov
add
and
movsb
ja
in
add
mov
sarl
std
dec
leave
push
stos
adc
cmp
call
push
iret
mov
pop
pop
in
mov
xchg
mov
xor
fnsave
ret
lock
push
sub
push
jbe
jp
in
and
bound
int
cwtl
mov
iret
ljmp
mov
mov
inc
sub
fnsave
pop
orl
das
dec
dec
adc
push
mov
and
lret
int
cmpsb
add
repz
sub
inc
jne
int
push
jmp
mov
push
cwtl
incb
push
mov
xchg
cli
xrelease
xchg
inc
or
in
or
mov
and
adc
cmc
cld
jbe
scas
or
fiaddl
add
pop
pop
jecxz
cmp
aaa
or
insl
mov
cmp
jne
and
mov
mov
lock
sahf
add
inc
push
test
sub
mov
mov
sub
xor
lods
add
lahf
ljmp
clc
mov
sbb
std
aam
sbb
xchg
xor
mov
pop
clc
orl
arpl
dec
mov
fsubl
aas
cli
xchg
sub
mov
jae
add
sub
inc
fisttpll
enter
xchg
lcall
hlt
sub
lea
jnp
push
sahf
sbb
fsub
push
push
mov
adc
cld
add
divb
imul
sbb
sbb
add
dec
shrb
inc
out
xlat
icebp
lds
stc
push
adcl
sbb
ret
mov
ror
pop
arpl
push
push
out
lcall
add
mov
loope
xor
das
aas
sbb
fxch
jecxz
xchg
pop
rcrb
rclb
in
imul
push
je
out
adc
arpl
adc
push
adc
flds
not
and
or
jae
scas
mov
mov
sarl
xlat
bound
and
jo
mov
mov
fdivrl
mov
dec
pop
andl
xchg
outsb
ds
mov
fsts
cwtl
lds
xchg
mov
push
pop
scas
push
bound
stos
jnp
ds
jns
inc
xor
aam
and
mov
xchg
sub
xor
or
icebp
cld
cwtl
outsl
test
lds
adc
push
fwait
jnp
push
mov
pop
cltd
or
cwtl
sub
roll
mov
ss
xor
xchg
sarb
leave
inc
xor
adc
outsb
inc
sbb
push
movsb
je
push
jge
add
ret
stc
adc
add
push
pop
add
jne
xorb
and
sub
jp
add
nop
mov
mov
xchg
lds
testl
pop
jmp
adc
mov
enter
jge
mov
jecxz
sub
fimuls
pop
sub
jo
in
push
push
addr16
insl
rolb
sbb
rolb
mov
dec
and
aas
mull
mov
adc
adc
hlt
scas
adc
and
scas
jno
insb
mov
dec
test
rcrl
inc
jae
jge
imull
sbb
imul
jo
jp
or
mov
or
inc
insb
cmpsl
rolb
and
add
push
inc
push
or
das
sub
push
ret
pop
mov
fwait
xor
jb
lret
xchg
adc
and
ds
out
and
or
or
sub
pop
mov
adc
xchg
jns
or
sub
jb
fldcw
cmp
call
insb
fnstcw
aaa
call
adc
add
in
jge
fimuls
out
aaa
sub
mov
jnp
mov
xchg
into
aad
fcmovnbe
push
cmc
stc
scas
jne
jb
mov
out
push
ljmp
jo
imul
les
scas
inc
js
in
push
cs
and
cmp
ret
push
rol
mov
aas
es
cltd
fldenv
test
jb
inc
fdivs
push
gs
ret
pop
lods
ljmp
imul
and
push
shlb
adc
mov
fwait
and
xchg
mov
ljmp
scas
and
mov
or
inc
movsb
or
neg
fwait
xchg
lods
incl
orb
sub
repz
xchg
cmp
push
stc
hlt
dec
loope
xchg
jecxz
stc
iret
or
jb
jle
cwtl
xchg
mov
mov
stos
mov
insb
adc
sub
xor
and
pop
addr16
and
popf
push
ljmp
pop
push
repz
or
int3
mov
int
sub
fwait
hlt
insl
cmc
mov
jno
les
and
xchg
cwtl
sub
fcomps
stos
fisubl
mov
jb
jl
push
fbstp
lods
jns
add
mov
fcompl
movsl
fdivr
mov
test
cld
stos
int
jp
push
or
sbb
fildll
and
fxsave
clc
mov
jmp
mov
jmp
mov
movsl
in
cmpsl
pop
mov
dec
insl
gs
lret
add
scas
fisttpl
incl
xchg
cmpps
mov
movsl
adc
xchg
jnp
fcoms
push
adc
or
inc
mov
leave
pop
les
inc
addr16
jnp
movsl
sti
jle
repnz
imul
jmp
push
pop
cmp
jmp
and
dec
jnp
int
mov
push
leave
fwait
out
cli
and
mov
loopne
add
loope
mov
cwtl
lea
les
mov
stos
jge
cmc
xor
jg
mov
movsb
xor
dec
mov
test
inc
and
or
enter
lods
lcall
push
mov
rcl
adc
sub
adc
mov
push
stc
adc
cld
push
divb
fneni(8087
jle
xor
imul
ja
pop
pop
xor
sub
pop
je
cmp
call
sbb
pop
gs
sbb
dec
popa
divl
pop
movsb
jo
popa
or
mov
adc
popa
mov
cmc
aaa
add
ds
jmp
mov
test
out
push
std
rcll
cs
aaa
movb
hlt
sub
xor
adc
adc
ljmp
push
adc
mov
adc
jae
sbb
jae
cmpsl
inc
and
cmpsb
nop
aam
jno
sbb
jns
push
inc
imul
lret
je
shl
push
fisubl
jmp
movsb
cs
stc
dec
mov
es
mov
ss
lods
outsb
push
nop
and
dec
ret
aad
ret
in
call
pop
xlat
push
repz
loopne
fwait
add
mov
shll
dec
sub
mov
jo
pop
pusha
adc
in
cmpsb
ljmp
xchg
outsl
pop
enter
sub
adc
sbb
sub
enter
repnz
sbb
sbb
xchg
jge
jbe
mov
jns
hlt
lock
movsl
int
push
mov
mov
push
cld
in
shrl
push
jb
lahf
outsl
mov
add
push
dec
popa
dec
movsbl
or
adc
lock
outsl
add
or
mov
mov
je
xchg
mov
push
lret
icebp
jno
hlt
sbb
mov
adc
aam
or
icebp
ret
test
dec
jno
push
xor
add
movsl
stos
repz
pop
test
sbb
icebp
repz
popf
cmpb
jo
inc
jecxz
aad
aas
xlat
xor
xlat
in
ret
bound
push
call
pop
push
cmpsb
das
jmp
aam
xchg
ret
sbb
mov
movsb
push
je
mov
dec
push
iret
xchg
cmc
mov
mov
and
fiadds
jns
pop
pushf
aas
sahf
in
mov
cmp
std
mov
movl
pushf
fld
ljmp
sub
in
push
addb
xor
xchg
or
mov
jno
mov
dec
inc
push
sub
stos
xchg
jns
repz
cltd
pop
gs
pop
sbb
lret
cld
cmp
push
lods
icebp
ljmp
idivl
sbb
enter
or
in
xchg
fidivrl
cmpsl
out
int
sub
enter
cmp
jg
and
sahf
add
cli
xor
shrb
lea
mov
adc
push
xchg
shlb
test
pop
std
ljmp
fidivrl
dec
xor
fisubrl
aaa
jne
mov
pop
pusha
int
mov
pusha
mov
pop
sbb
test
mov
addl
adc
movsb
sahf
loope
mov
cld
bound
popf
push
or
popf
sbb
add
into
mov
sub
pop
mov
enter
jge
add
movsl
mov
pusha
imul
and
mov
mov
push
sub
cmp
mov
int
pop
sbb
in
mov
cmpsb
mov
or
push
jl
or
add
movsb
popf
enter
push
sahf
mov
insb
bound
gs
leave
and
xchg
sub
scas
mov
sub
cmpsl
dec
test
in
lods
sub
stc
imul
sbb
in
mov
mov
ret
cmp
inc
hlt
loop
push
sbb
sbb
stos
outsl
mov
inc
and
and
xchg
mov
lcall
sti
rcll
mov
loop
das
jmp
mov
cltd
jmp
cli
sbb
jl
xor
bound
sbb
mov
inc
lcall
pop
lods
lods
mov
jle
repz
add
or
cmp
ffreep
pop
loope
je
scas
out
stc
dec
fmull
sub
rcrl
push
inc
lea
mov
jecxz
fisttps
test
ljmp
mov
xor
pop
repz
and
sbb
and
push
dec
into
aad
out
fildl
dec
jle
lea
scas
add
mov
push
fsubrl
lcall
rcpps
push
int3
leave
sub
dec
jo
scas
lret
pop
scas
sub
popa
inc
and
dec
out
mov
dec
push
mov
jle
xchg
gs
xor
or
dec
pop
call
pop
pop
out
lcall
jns
sub
lret
jae
dec
ret
in
insb
scas
rcrl
js
outsb
push
idivb
add
out
test
jbe
fnstenv
mov
jo
cmp
lock
push
xor
aaa
sbb
sbb
add
or
mov
shrl
aas
cmp
stos
divl
mov
leave
push
dec
scas
sub
sti
or
iret
dec
fisubrl
sti
and
dec
outsb
xor
mov
test
inc
or
push
cli
inc
cmp
sarl
add
ficomps
push
add
test
fmul
shrb
xor
pusha
int
pop
outsl
jnp
mov
subb
cmc
gs
mov
cmp
mov
daa
jmp
int3
dec
adc
aaa
adc
cmp
es
sbb
sbb
jbe
inc
jmp
into
push
jecxz
xchg
movsl
in
dec
jl
test
mov
mov
pop
int
xchg
sub
imul
in
cltd
call
cmc
push
jb
pop
ss
xor
and
sub
xchg
cmp
ret
sti
lcall
xchg
cmpsb
adc
xor
mov
daa
xor
loopne
scas
sub
sub
cld
rcll
fcomi
jecxz
rep
cwtl
sub
je
nop
cmp
mov
sbb
sub
stos
mov
mov
add
and
xchg
les
mov
cld
push
jo
xchg
dec
leave
cmp
aas
sub
jne
setno
mov
out
or
ljmp
pop
cli
mov
dec
movsb
mov
popa
fisubl
repz
xchg
sub
cmp
pop
dec
mov
mov
push
add
sub
lds
and
pop
sbb
rcl
sbb
in
arpl
adc
xchg
xchg
call
sahf
mov
xor
pop
jbe
insb
call
imul
inc
mov
std
xor
popa
cmp
ljmp
aam
push
or
movsb
or
lret
repnz
dec
popf
lds
subb
push
fmull
push
xchg
and
in
mov
movl
insl
sub
sbb
cmc
aas
jb
cld
adc
movsb
test
shll
in
nop
fbstp
scas
xchg
sub
adc
or
cmp
ja
cmpsl
sub
es
push
ja
enter
pop
shll
mov
add
push
xor
stos
mov
sbb
ret
inc
out
xor
jnp
jl
fs
js
pop
sti
dec
and
outsb
mov
add
add
push
idivb
lcall
xchg
mov
inc
add
sahf
inc
inc
xchg
mov
sub
mov
xor
daa
pusha
sti
xchg
cltd
inc
sbb
cltd
enter
jg
adc
shl
sub
fcos
xor
sti
repz
adc
jno
mov
fldcw
arpl
aas
cmpsb
in
dec
push
mov
hlt
push
pop
mov
gs
rcr
mov
push
aaa
jnp
test
sti
int3
sbb
pusha
inc
adc
cmpsl
push
pop
mov
aaa
dec
cmp
in
add
out
dec
adc
nop
cmp
inc
gs
mov
lret
push
hlt
push
mov
test
mov
pop
movsl
into
stos
rcrb
adc
ljmp
sub
sbb
mov
push
jb
inc
xor
mov
clc
cmp
cmp
fs
outsl
dec
stc
sub
push
push
addl
xor
ret
xor
mov
and
les
out
lret
inc
int
jae
adc
orb
mov
adc
push
in
sub
iret
mov
mov
adc
stos
int3
or
inc
cmp
mov
mov
sbb
sbb
ret
ja
out
pop
negb
push
pop
cmpsb
mov
test
jno
jg
push
cmpsb
loop
and
fisttps
rcl
testb
xchg
int3
mov
push
push
adc
fucomip
inc
add
lea
sbb
popf
dec
fs
fcmovb
pop
int
jb
aaa
mov
lcall
cs
fbld
mov
ror
outsb
lds
xor
xor
jecxz
sub
and
dec
jmp
fstl
rolw
inc
mov
mov
push
inc
roll
scas
push
inc
fstl
xchg
adc
xchg
inc
cmpsb
push
push
test
mov
sub
adc
hlt
pusha
sbbb
je
lods
pop
sub
repnz
test
scas
sub
gs
cmp
rcl
jns
pop
pop
sub
add
movsb
pop
in
pushf
notl
fldt
lcall
push
aas
lods
mov
rcr
jp
jge
pop
loop
fwait
pushl
call
das
out
xchg
sbb
fwait
xor
lcall
loopne
in
or
sub
dec
dec
push
inc
cmp
add
jne
ja
mov
pop
repz
cs
outsb
clc
mov
out
xor
negl
push
mov
jns
mov
dec
push
out
xor
inc
push
loop
fimuls
stc
jecxz
mov
inc
lret
ficoml
fisubl
mov
aam
push
imull
cli
cli
lods
enter
aaa
jnp
xchg
or
pop
call
lea
sbb
ss
inc
cmp
mov
rcrb
cmp
out
imul
pop
xchg
imul
lods
mov
sahf
adc
repnz
mov
scas
sbb
or
repnz
pop
pop
in
push
cwtl
popf
and
movsb
jg
pop
mov
inc
aaa
in
cltd
add
das
push
jecxz
addl
mov
lods
ss
jg
adc
add
pop
add
or
out
outsb
mov
add
into
subb
jl
dec
lret
mov
push
aad
jae
and
adc
ficompl
lcall
mov
and
sbb
pop
aaa
imul
xlat
jp
add
outsb
mov
test
popa
jae
xor
nop
mov
jl
push
lds
loopne
rclb
pop
mov
or
and
lret
dec
aaa
dec
mov
jae
rol
pop
aaa
scas
je
stos
les
sbb
pusha
arpl
je
ss
pop
data16
mov
lods
aam
outsl
lahf
push
push
ficomps
arpl
add
decb
sub
xchg
sub
cmp
es
arpl
ret
or
add
xor
cwtl
and
jmp
sbb
jle
and
aaa
fbld
sbb
popa
jle
jp
xor
sti
mov
xchg
ja
push
shll
xchg
aam
mov
pop
es
adcl
pop
jge
mov
stos
idiv
mov
sti
mov
pushf
jnp
jle
test
and
push
lods
pop
stos
xchg
lahf
jno
adc
stos
inc
mov
cs
inc
data16
stos
jmp
cli
cwtl
mov
push
adc
mov
adc
pop
push
xor
aad
cmp
fildl
sbb
add
push
ds
movsb
ss
jp
das
test
test
subl
into
ljmp
pop
jbe
inc
push
pop
aad
lcall
sbb
clc
daa
xor
push
pop
or
cmp
jecxz
repz
xchg
mov
xchg
aaa
and
sbb
mov
mov
loop
sbb
sub
sbb
xchg
or
stos
out
push
mov
rclb
xchg
push
pop
stos
push
fs
es
or
mov
push
ss
sti
lods
jbe
sar
inc
jno
lock
jns
sahf
mov
lahf
pushf
test
jns
js
push
mov
adc
dec
xchg
adc
cmp
xchg
or
sub
ror
push
sub
lods
mov
arpl
mov
frstor
mov
pop
ret
ja
test
push
scas
pop
xchg
xchg
push
dec
push
pusha
cltd
out
std
les
lea
lea
cmpb
enter
xchg
ja
in
ljmp
dec
aas
roll
dec
icebp
xchg
mov
inc
mov
push
in
push
in
inc
mov
pop
and
jg
push
int3
call
daa
cmc
sub
shrb
popa
loop
loopne
test
jo
rolb
or
fiaddl
dec
nop
sub
xchg
aas
add
mov
fisttps
push
lcall
xchg
int
movsl
inc
jnp
or
sub
adc
dec
and
dec
fisubl
jmp
adc
js
mov
mov
cvtpi2ps
adc
dec
nop
lcall
jl
xor
lcall
dec
into
xchg
sbb
jle,pt
xor
sti
adc
adc
adc
sub
ljmp
xchg
icebp
xor
dec
push
push
mov
sahf
xchg
push
mov
push
adc
xchg
sti
aas
test
push
cwtl
in
pop
mov
decb
out
pop
iret
inc
pop
or
mov
ret
stos
xorl
call
push
hlt
jle
push
sub
filds
mov
mov
gs
adc
sub
popf
dec
daa
mov
xlat
dec
fisttps
jae
shrl
sub
mov
ds
push
inc
mov
lret
mov
out
xchg
mov
inc
divl
push
dec
ja
dec
adc
jecxz
or
xor
and
jmp
xorb
add
push
xchg
leave
jle
sub
and
inc
insb
cli
push
push
mov
mov
xchg
or
or
divl
fstps
insl
repnz
loop
sub
push
cmc
and
lahf
stos
test
test
aad
mov
imul
scas
or
sahf
aam
cmc
push
sub
adc
and
pop
cwtl
mov
mov
dec
dec
nop
insl
sahf
jg
mov
popa
aam
cmpsl
mov
or
or
test
xorb
mov
pop
adc
js
sahf
jge
pop
movsl
inc
dec
sub
leave
shll
sub
aaa
and
popf
int
outsl
insl
sbb
movsb
dec
fsubr
adc
xorl
popa
adc
jle
icebp
xor
mov
add
dec
lahf
pop
and
sub
leave
and
jae
cmpsb
add
jne
add
mov
sbbb
ret
call
aaa
inc
and
or
gs
or
lret
add
ja
pop
sahf
cmc
mov
mov
xchg
flds
xchg
call
and
push
jl
cmp
lcall
lret
sbb
cld
shrl
loope
mov
xor
xchg
mov
lock
xor
adc
xchg
jo
pop
cld
subb
shrl
in
dec
inc
xchg
sub
into
mov
dec
iret
or
cmp
stos
jp
call
lods
iret
cltd
mov
rolb
stos
jl
nop
mov
jae
out
jmp
jge
sub
ds
push
ret
shl
lcall
lret
jle
lods
aam
repnz
sbbb
adc
loope
dec
js
test
jnp
push
cmpsb
repnz
aas
xchg
or
sbb
movsl
rol
addr16
repz
jo
clc
push
push
xchg
std
popf
mov
call
cmp
and
dec
outsb
ljmp
gs
fmull
fmul
mov
clc
ja
lock
mov
mov
daa
add
inc
loopne
mov
xlat
cmp
push
sbb
mov
xchg
jo
repnz
jmp
jmp
pop
ss
ret
sub
hlt
add
cmpl
int3
jle
ret
jnp
xchg
xor
pop
xor
dec
jle
xchg
pop
fnsave
xor
push
fdivrl
xor
push
mov
repz
xlat
and
mov
scas
adc
out
pop
ja
push
jecxz
and
icebp
mov
insl
sar
xor
and
jl
test
cmpb
mov
jno
sbb
mov
sub
iret
sahf
hlt
dec
cwtl
push
sub
ja
test
add
sub
repz
bound
call
mov
in
out
sub
or
inc
aad
xchg
xchg
jmp
imulb
sub
sub
or
sub
xor
inc
dec
popl
call
out
daa
lods
dec
aas
jecxz
adc
dec
add
push
imul
leave
int3
xchg
in
mov
sub
fs
inc
fucomp
stos
fstpl
xchg
jno
cmpsb
adc
in
dec
mov
int
lret
imull
sub
mov
pop
dec
addr16
push
adc
sub
in
dec
jmp
cmpb
mov
sbb
cld
fwait
imul
ss
loope
add
stos
cmp
lods
lods
jno
mov
push
sub
nop
inc
xlat
push
mov
add
sbb
jge
mov
pop
or
xor
pop
sub
cld
popa
sti
ret
out
lret
jae
xchg
stos
adc
adc
inc
lds
xchg
xor
adc
mov
add
sub
mov
out
lret
ret
push
movsb
mov
xor
jbe
inc
or
sbb
xlat
repz
iret
cwtl
jbe
add
pop
enter
lret
xorb
add
lret
mov
mov
into
stos
int
in
movb
iret
stos
inc
xlat
push
sbb
and
xchg
add
push
and
mov
inc
arpl
sbb
test
push
xchg
xor
shlb
int3
sbb
mov
cmp
rol
adc
cltd
addb
das
bound
jo
lock
ljmp
lahf
insb
shrb
int3
ss
inc
cmc
fwait
mov
xchg
fsubr
stos
into
out
xlat
or
pop
and
push
mov
ds
cmp
sbb
icebp
mov
out
test
fcmove
or
push
jo
nop
stos
and
mov
cmpsb
pop
outsb
daa
add
frstor
xchg
jle
mov
pop
add
fcomp
ljmp
mov
loop
dec
mov
insb
lods
lcall
xchg
push
leave
fisubl
ret
mov
sahf
adc
fsubp
push
cmc
mov
jo
mov
xchg
fsubrs
in
pop
cli
popa
push
repz
xor
add
adc
inc
shll
test
and
call
jg
fisubl
mov
cli
cmp
push
fs
push
jne
xor
nop
sub
es
mov
repz
push
inc
rcl
stc
pop
std
out
fsubs
repnz
mov
int
mov
add
loopne
int
in
adc
cmp
sub
add
add
mov
icebp
fisttpll
fs
jo
int3
scas
push
pop
sub
cmp
imul
lods
sbb
jo
dec
ret
fwait
or
inc
jbe
inc
gs
sbb
xchg
das
dec
jg
cmp
push
loopne
adc
out
pop
xlat
sub
insb
sarb
inc
mov
push
add
cmp
fsqrt
in
push
push
cmp
mull
pushf
les
mov
mov
xchg
scas
sub
outsl
or
jg
aad
imul
in
mov
xchg
jne
fisubrs
jae
stos
pushf
fimuls
push
je
jb
mov
push
rorl
cmp
mov
mov
sub
push
icebp
add
out
xchg
mov
jns
pop
inc
arpl
and
arpl
das
or
js
stos
pop
dec
sub
in
ss
fldt
das
push
add
lea
faddl
in
clc
insb
sub
lahf
adc
pop
out
ror
inc
stos
xor
pop
add
rorb
sbb
shlb
add
pop
fs
and
lods
jg
and
cmp
mov
pop
inc
inc
clc
out
add
lret
aad
insl
mov
pusha
jecxz
mov
sub
dec
out
xchg
outsl
mov
call
jge
hlt
mov
sbb
stc
push
fs
pop
dec
pop
or
pop
fiaddl
xlat
adc
dec
test
add
dec
inc
or
imul
call
sub
dec
shl
cmc
cmc
pop
fisubrs
mov
mov
rolb
aas
jb
test
and
push
addr16
jne
aam
mov
iret
pop
xchg
outsb
xchg
pusha
divb
cli
and
add
lds
push
les
jbe
std
and
ljmp
call
lcall
jl
aaa
pop
and
cmpsl
out
in
es
push
pop
mov
loopne
push
jae
dec
sti
hlt
jo
repz
das
mov
bound
push
push
movsb
inc
test
jbe
sbb
out
xchg
add
enter
jmp
aad
outsb
jne
pop
sub
mov
xchg
hlt
icebp
je
add
inc
lret
outsl
sub
jp
jge
popl
imull
sub
cmp
sbb
sahf
cwtl
mov
inc
adc
leave
fists
fimull
rcl
shrb
mov
push
scas
fadd
into
adc
xor
push
jmp
sti
add
adc
rorl
outsl
push
mov
ret
push
xor
loope
push
sub
ficoms
jl
sahf
js
and
jne
test
xchg
dec
repnz
inc
push
xchg
sbb
xor
testl
aam
mov
inc
test
out
lods
cwtl
inc
mov
aaa
sbb
arpl
pop
test
test
mov
aas
push
adc
and
cmpl
push
inc
sahf
lods
mov
lret
pop
add
mov
out
scas
test
jmp
and
aaa
pop
lods
jno
inc
push
xchg
pop
pop
xchg
push
lods
loop
out
cmpsb
add
and
stos
in
mov
dec
jge
ficoml
push
ss
gs
push
inc
add
pop
push
js
les
test
xchg
shlb
cld
jb
add
hlt
mov
add
mov
xor
dec
in
cs
pop
out
xchg
dec
push
out
mov
sbb
jle
pop
add
in
cmpl
inc
dec
adc
inc
jae
out
outsb
add
pop
pushf
dec
push
pop
jl
xchg
sub
jae
xor
cmp
inc
scas
jp
jbe
mov
aaa
cmp
or
imul
daa
lret
mov
jle
mov
mov
cmpsb
lret
xchg
push
scas
into
inc
lods
mov
xchg
mov
and
inc
sub
mov
inc
hlt
adc
jle
jle
outsb
mov
arpl
lods
shrl
or
ret
jb
jl
or
push
and
sbb
lock
inc
mov
es
test
fistps
push
movsb
lods
clc
dec
inc
cmpsb
fldl
movsl
mov
cmc
jbe
adc
and
sbb
outsl
lahf
jg
mov
jae
xor
push
mov
cwtl
add
cmp
cli
mov
inc
xchg
or
imul
mov
add
xchg
mov
and
rcrl
je
clc
push
jle
or
push
mov
cmpl
inc
cmp
xor
fcoms
jb
mov
adc
mov
cwtl
sub
pop
pop
stc
outsl
adc
cltd
aaa
mov
fnsave
test
repz
xlat
mov
subb
pmaxub
fcom
cmpsb
out
xor
push
mov
daa
inc
push
xchg
lret
xchg
mov
pop
sbb
ss
gs
push
mov
pop
pop
inc
movsl
lea
dec
xchg
out
push
or
out
adc
mov
movsl
cld
sub
jp
and
or
test
or
outsb
mov
xchg
inc
cwtl
jne
sbb
pop
loopne
les
aam
mov
xchg
dec
imul
cmpsl
cmp
add
add
xchg
test
and
inc
scas
mov
adc
daa
push
cmpl
xchg
pop
xchg
sahf
insl
or
arpl
mov
mov
negb
mov
inc
mov
cmpsb
mov
adc
mov
mov
xor
or
xchg
loopne
mov
inc
test
inc
ss
xor
xor
or
addr16
lcall
testl
rorb
stos
lahf
pop
fs
jge
push
lcall
xchg
sbb
inc
aad
lahf
pop
push
in
daa
add
daa
dec
mov
ss
xor
in
push
jbe
push
in
ds
jb
ljmp
into
jl
ret
std
aaa
xor
popa
adc
pop
int
inc
rolb
aaa
sti
sbb
dec
scas
or
jns
stos
and
fs
imul
stos
imul
sub
ljmp
mov
cmpsl
clc
add
pusha
xchg
lahf
dec
mov
dec
mov
add
lds
fisubrl
add
mov
call
fmuls
leave
push
pushf
in
mov
sbb
mov
orl
cwtl
les
adc
cmp
shrb
enter
test
ja
cmpsb
xchg
cmp
cmp
sub
popa
pop
sub
cmpsl
adc
or
xor
jp
mov
push
mov
mov
cmp
js
mov
or
in
popa
inc
mov
iret
fwait
iret
sbbl
sbb
leave
jbe
mulb
shlb
sbb
aas
inc
es
push
push
aad
mov
and
hlt
mov
stos
movl
sbb
add
push
mov
inc
add
call
fstl
jg
roll
jno
jge
mov
shl
hlt
dec
add
loope
in
sub
loop
dec
scas
cmp
sarl
jae
outsb
dec
stc
aam
aad
cmpsl
or
icebp
cmp
ret
stos
inc
cld
mov
repz
bound
or
mov
mov
mov
or
adc
add
jns
or
push
clc
and
or
icebp
mov
jnp
jne
sbb
jg
jnp
rcrl
xchg
mov
inc
push
dec
xor
scas
lahf
scas
inc
jmp
call
xchg
dec
add
es
pop
cltd
int3
nop
xchg
testb
clc
ljmp
mov
mov
leave
and
jns
outsl
push
sub
jge
xor
sub
jae
xlat
inc
inc
rcll
aad
je
into
sbb
push
outsl
adcl
cmp
lret
inc
xchg
mov
push
xchg
lcall
mov
dec
jo
push
insb
xchg
pop
pop
push
pop
dec
adc
push
mov
out
push
push
push
mov
sbbb
gs
and
and
push
lret
pushf
fucomi
imul
adc
iret
gs
dec
pop
ret
sub
pop
mov
addr16
adc
mov
adc
fs
std
call
mov
add
lds
push
pop
test
test
cmp
test
sub
inc
push
jecxz
leave
out
sarl
and
push
daa
std
push
xchg
sbb
bound
cs
aas
enter
popfw
lcall
inc
and
aas
mov
cli
aas
and
adcl
sub
test
int
inc
roll
test
adc
lods
sbb
inc
or
adc
cmpl
cmp
ja
shrb
jge
mov
mov
out
xchg
and
mov
imul
inc
int
enter
push
mov
dec
popa
jbe
fwait
mov
dec
pop
sbb
xor
sbb
dec
cmc
push
insb
pop
cmpsb
sub
stos
out
cmpsl
sbb
rol
add
mov
xchg
sbb
les
mov
push
add
or
in
in
aaa
lds
add
test
je
inc
sub
or
mov
lret
gs
inc
leave
sbb
cs
dec
mov
push
ret
pop
out
loope
dec
mov
outsb
ret
mov
xor
mov
test
shl
ficomps
sbb
bound
test
in
in
mov
push
lret
outsl
rcrl
loop
jge
imul
arpl
inc
jo
inc
leave
sub
pop
js
aad
inc
pop
std
pop
push
scas
fmuls
mov
and
sub
sub
pop
out
aam
adc
push
mov
mov
mov
push
roll
and
sbb
out
adc
dec
ret
cmc
mov
cmp
adc
outsb
out
xor
adc
adc
cmpsl
dec
inc
pop
adc
pop
cmp
imul
push
ret
xorl
sbb
inc
jl
mov
out
mov
stos
icebp
and
in
psadbw
mov
imul
int
mov
dec
stc
push
jle
pop
testl
fnstenv
xor
inc
adc
pop
loop
in
sub
xor
sahf
jge
or
mov
and
pop
enter
sbbb
lods
and
push
xchg
mov
add
dec
or
scas
stos
adc
ss
outsb
test
sub
into
mov
push
pusha
lock
xchg
insl
pop
mov
test
jnp
and
lods
stos
dec
or
mov
out
rcr
movq
mov
jb
mov
xor
cltd
jl
xchg
dec
xor
lret
fidivrs
mov
or
stos
outsb
es
les
cmpsl
pop
mov
cmc
cmovne
sub
xor
cmp
mov
pusha
out
pop
enter
fs
jb
in
xor
xchg
test
jb
dec
and
call
dec
mov
pop
pop
and
inc
bound
push
mov
dec
sbb
mov
aad
xor
xchg
adc
mov
or
fwait
sbb
cltd
cmpsb
aaa
xor
fld
call
and
scas
stc
mov
push
sub
in
scas
cmp
loopne
shll
sub
and
inc
or
repz
pop
mov
into
jbe
mov
imul
call
rep
dec
xchg
xchg
xchg
jg
push
inc
xor
rolb
std
setg
push
jns
xchg
and
mov
rol
sub
push
movsb
test
cwtl
mov
add
outsl
filds
fs
sbb
jmp
testl
mov
add
les
sub
ss
jl
jne
pop
pushf
jb
lods
data16
aad
lds
push
push
out
sbb
jge
loop
mov
icebp
pop
into
out
xor
inc
jge
pop
mov
or
lahf
addr16
mov
sbb
jno
dec
xchg
jb
pop
lods
movsb
clc
or
pop
repz
adc
push
out
push
scas
xor
lahf
popa
fldl
ja
xchg
lret
fmuls
xchg
xor
outsl
adcl
push
ret
scas
xchg
mov
data16
jl
lcall
daa
ret
lcall
in
inc
out
lret
cltd
sub
stos
shl
es
cmpsb
xchg
lret
adc
jbe
mov
fisubrs
outsl
sysret
lahf
inc
mov
clc
mov
aam
jns
subl
aas
xchg
nop
stos
ja
ss
push
je
insb
mov
push
mov
out
push
xor
and
ret
imulb
xchg
cs
mov
dec
mov
in
data16
inc
sar
add
dec
imul
mov
lcall
dec
xor
sub
mov
in
or
sub
shrb
push
and
jb
jbe
in
inc
sub
lock
jb
cmp
adc
hlt
xchg
hlt
int3
fstl
rorl
aad
cli
push
mov
or
subb
or
mov
push
movsb
les
pusha
pop
outsl
in
jmp
jecxz
inc
inc
out
or
cmp
xchg
adc
ss
outsl
cld
sbb
push
in
adc
mov
fxch
aad
pop
inc
loop
negb
daa
fmuls
fnstenv
jecxz
aad
call
loopne
rcll
insb
dec
sub
jo
stc
mov
leave
mov
pop
xor
bnd
lods
inc
pop
add
lods
outsl
rol
push
aaa
pop
dec
pop
xchg
push
and
mov
xchg
bound
mov
mov
add
imul
cmp
jmp
push
mov
loope
cmp
lahf
lods
and
adc
mov
in
out
loopne
mov
mov
aas
jmp
data16
gs
outsb
push
dec
mov
xor
add
mov
push
fs
les
inc
clc
out
insl
inc
sahf
jae
mov
jmp
xor
and
bound
xor
lahf
mov
pop
daa
int
sbb
push
pushf
ret
mov
add
dec
xlat
mov
adc
in
repz
lret
inc
sbb
popa
rorb
or
popf
dec
xchg
comiss
daa
jno
push
ret
push
or
add
cmp
mov
fcomip
push
shlb
push
adc
icebp
mul
adc
pop
call
cmc
mov
bound
clc
popa
mov
stos
mov
scas
dec
dec
push
cmp
xor
jne
and
aad
pop
mov
aad
das
jo
push
js
in
push
stos
test
or
add
test
mov
cli
rorl
or
cmpsb
pop
and
adc
push
push
lea
inc
add
out
les
push
das
adc
sub
mov
divb
sbb
dec
adc
js
sub
mov
mov
xor
push
adc
hlt
gs
or
or
dec
cmp
mov
sbb
sahf
mov
sbb
mov
jle
popf
mov
mov
mulb
inc
push
jmp
xchg
mov
cmpsl
or
gs
sahf
pop
xchg
add
test
lahf
scas
push
mov
mov
and
mov
mov
inc
ja
cmp
jmp
test
push
sbbb
and
xchg
aaa
pop
xchg
dec
mov
push
mov
mov
in
outsb
or
push
sub
mov
inc
add
jae
jns
push
add
arpl
adc
sub
sub
mov
fdiv
pop
mov
aas
loope
sar
inc
stos
inc
push
mov
lds
xor
nop
push
jbe
cmp
negb
mov
lret
in
insb
out
cmp
mov
aam
les
out
pop
into
xor
sub
mov
data16
mov
or
pop
push
test
fistpl
and
xchg
or
push
outsb
cld
jl
insl
rcrl
xor
dec
ret
push
sarb
rorb
cmc
mov
mov
sub
sarl
cs
cltd
lods
cli
cmp
cs
sub
adc
sbbb
scas
imul
ret
and
lods
pop
or
and
cmp
sbb
or
repnz
xor
loope
lea
inc
stos
adc
ffree
lock
or
popa
imul
int3
adc
insl
negb
mov
lret
push
push
pop
dec
sub
xchg
pop
lods
cmp
sub
daa
mov
stos
mov
jmp
jp
test
mov
sbb
ja
dec
cli
add
pop
outsl
add
fldt
dec
adc
pusha
mulb
cmc
out
es
mov
fcomps
mov
mov
push
ret
push
imul
in
mov
cmc
push
divl
add
clc
sbb
out
adc
cld
sub
xchg
popf
test
and
bound
jnp
push
jns
inc
mov
daa
mov
xchg
pop
out
mov
push
jmp
ret
sbb
aam
arpl
mov
xchg
lret
stos
xchg
and
jne
lret
mov
out
mov
lds
lret
iret
cmp
lods
cld
cmpsb
cmp
and
std
xor
add
mov
or
ret
jbe
jecxz
jne
add
out
sahf
xchg
push
pop
icebp
sbb
push
jl
dec
sub
mov
insl
push
mov
outsb
js
lret
mov
cltd
in
rorl
mov
inc
in
push
fisttps
push
int3
xlat
mov
rorb
xchg
sahf
std
shl
in
push
rcrb
mov
xorl
xchg
movsb
inc
pmulhw
push
clc
inc
push
fbld
test
dec
out
leave
sbb
aaa
jnp
mov
jp
outsb
out
lcall
xlat
sub
and
lods
jbe
xor
pop
or
dec
fistpll
push
cmp
lahf
stc
cmc
mov
das
sbb
lcall
cmp
stos
imul
cmp
push
or
addr16
into
and
xchg
dec
mov
lock
pop
dec
xor
fdivs
clc
cwtl
xchg
mov
inc
adc
cmp
mov
outsb
imul
mov
and
mov
out
loop
dec
mov
mov
push
lds
enter
imulb
mov
hlt
andl
pop
lock
pop
or
popf
push
mov
cld
cmp
fisubrs
push
push
jae
or
push
das
lock
xor
push
sbb
dec
and
mov
inc
push
pop
adc
pop
xchg
pop
push
arpl
lcall
dec
js
ffree
pop
and
mov
pop
sub
dec
pop
mov
mov
mov
stos
jne
inc
mov
add
add
pop
addr16
leave
or
outsl
arpl
adc
mov
in
lea
fildl
cld
dec
mov
loop
gs
test
push
cmpsl
ja
jno
das
pop
test
hlt
pop
mov
lods
sbb
mov
mov
or
out
lret
xchg
jle
das
dec
pusha
es
clc
sbb
sbb
jo
mov
lahf
jle
mov
dec
push
or
cmp
mov
loope
adc
out
bound
loop
cmpl
adc
mov
push
push
mov
xchg
insl
jb
xlat
xchg
test
test
sub
test
stos
mov
xchg
dec
mov
sbb
and
mov
js
inc
sahf
loop
shl
mov
mov
inc
pop
orb
bound
cld
xor
subb
int
inc
mov
sub
xchg
mov
add
sahf
mov
and
stos
hlt
mov
lds
shll
imul
mov
rclb
mov
jo
leave
pusha
mov
mov
push
push
leave
in
sbb
clc
xchg
call
jmp
inc
scas
imul
test
lds
out
adc
sub
in
daa
pop
fxch
lcall
jnp
fists
ja
push
sub
dec
pushf
xchg
cmp
lea
scas
je
setge
aaa
ret
dec
int3
repnz
xor
jno
xchg
pop
xchg
or
test
adc
in
pop
dec
fisubl
pusha
ss
xchg
push
mov
sarb
sub
push
mov
and
daa
and
repz
sub
sti
cmp
sub
adc
jbe
push
rolb
and
iret
pusha
jg
sti
and
xchg
inc
lea
push
fiaddl
push
dec
mov
mov
xor
std
xor
imul
xchg
or
dec
inc
lock
mov
mov
adc
test
pop
aam
cwtl
mov
mov
sub
mov
notl
js
es
mov
adc
icebp
cmp
xchg
lret
into
xor
dec
inc
test
dec
rorb
mov
push
or
jge
hlt
push
cmc
mov
jecxz
xchg
xlat
dec
movsl
cmc
xchg
xor
dec
lcall
mov
mov
jl
cmpsl
mov
or
mov
pop
in
pop
incl
int
or
out
lock
xor
dec
pop
ret
loop
lods
pop
fnstcw
push
inc
movsb
pop
mov
into
jns
call
or
inc
xor
imul
jg
in
out
vpcmpeqw
pushf
je
pop
sub
rcrb
testl
scas
push
das
pop
cmpsb
pop
jns
mov
sub
aaa
stos
imul
shll
sub
scas
cltd
sub
dec
es
sbb
mov
xchg
aas
jmp
lahf
and
loop
pop
xchg
imul
jmp
pop
in
in
add
test
cmp
movsb
mov
mov
movsl
jae
dec
and
lock
psadbw
mov
adc
adc
aas
jge
jle
add
sbb
add
sbb
mov
push
rcrl
sub
call
xor
arpl
aad
jg
into
scas
mov
stc
test
mov
mov
cmp
jmp
inc
or
xchg
adc
repz
shlb
repnz
push
mov
call
mov
push
aad
es
aas
and
stos
dec
cmc
fcompl
adc
fidivrl
dec
mov
popf
add
in
popf
cmpsl
dec
xchg
dec
mov
add
add
cmc
hlt
rorl
mov
sbb
pop
in
lea
mov
push
stc
sbb
in
jno
mov
popa
pop
loop
cmc
sahf
lcall
mov
push
xorb
enter
in
sub
mov
mov
movsb
sarb
pop
cmc
cli
xorl
mov
inc
push
lds
jge
adc
fwait
mov
push
int3
xchg
push
movsb
dec
aam
leave
inc
je
mov
mov
addb
dec
cmp
jne
addr16
push
xchg
stc
sbb
js
lcall
popa
ds
xor
test
xchg
dec
imul
and
lods
aas
pop
adc
cmp
sub
jae
loope
inc
xchg
stos
mov
push
xor
xchg
test
jg
mov
addr16
inc
add
inc
imul
jmp
fdivrs
or
fistpl
or
cmp
push
outsl
push
leave
push
mov
scas
sbb
sahf
imull
jl
adc
mov
imul
xchg
fwait
hlt
cmp
std
out
shrl
lds
or
in
add
sub
cld
mov
sub
inc
lods
jnp
iret
gs
cmpsl
jb
mov
cmp
push
add
cmp
push
sahf
xchg
lods
dec
incl
enter
aaa
lods
adc
sar
xchg
jnp
mov
fiaddl
imul
sbbl
add
mov
adc
inc
repz
jae
movsb
clc
cmp
and
cltd
in
mov
daa
jb
ss
dec
jmp
js
nop
das
imul
sub
pop
test
into
ret
stc
je
cmp
data16
ja
cmpsb
movb
insl
cmp
xchg
or
testl
pop
push
push
pushf
pop
fs
mov
insl
rorb
jne
fstps
shrl
jns
or
int3
mov
mov
mov
push
push
or
mov
push
inc
pop
cmpb
test
sahf
pushf
jno
mov
jge
imul
add
lock
lock
jno
pop
dec
cltd
mov
cmp
imul
adc
jmp
es
out
nop
imul
test
jae
ljmp
cmp
gs
shl
cmpl
jg
mov
out
and
lods
mov
ds
fldcw
adcb
or
rcl
cli
sub
clc
pop
mov
add
or
push
scas
pop
lods
inc
add
imul
pop
lahf
inc
cs
fcoml
push
push
xchg
pop
stc
push
dec
insb
xchg
test
outsb
scas
add
mov
sub
test
adc
subl
or
clc
sub
in
in
aad
inc
push
mov
int
lods
popf
pop
mov
sti
repz
movups
ss
or
repz
cmp
xchg
in
jns
cmpsb
mul
and
sbb
sub
lea
daa
xor
sub
mov
fstps
cltd
testb
push
push
jbe
push
repnz
int
cwtl
out
adc
out
faddl
and
imul
ljmp
movsb
push
mov
jecxz
je
in
ljmp
addr16
cmp
xor
xchg
stos
xor
adc
addr16
filds
cmpsl
mov
out
and
jmp
fsub
sub
data16
out
pop
sti
sub
xlat
lds
push
mov
lods
cmpl
cmp
pop
dec
xor
int3
pop
sbb
subl
xchg
outsb
cmp
or
xchg
lds
dec
and
iret
push
xchg
dec
lods
xchg
je
pop
int
and
cli
loope
sub
inc
negb
sub
test
and
lcall
xor
lea
cltd
cmpsl
sbb
sub
pop
xor
enter
ret
jmp
mov
sub
imul
sub
cmp
jno
sbb
ret
loope
dec
xor
les
inc
pop
sbb
daa
add
fistpll
test
sbb
movsb
fists
aam
int3
mov
ja
movsb
mov
mov
ljmp
mov
aad
das
mov
pop
aas
push
sbb
push
ret
push
mov
xchg
movsl
fld
sahf
jb
into
sub
or
and
sbb
cmp
div
push
dec
les
pop
in
mov
ret
add
jp
and
aas
das
cmpsl
inc
jmp
jl
mov
xchg
mov
out
xchg
cmpsl
sub
shl
sub
inc
stc
les
les
les
int
xchg
call
int
lea
and
stc
adc
std
push
dec
test
xor
out
mov
xchg
push
loopne
enter
fisubrs
mov
js
mov
or
cmc
sub
mov
sahf
sbb
xchg
dec
sbb
lods
add
dec
std
inc
pop
and
inc
out
push
pusha
or
repz
push
xchg
inc
adcb
xchg
dec
xchg
cmp
sti
imul
xlat
outsb
outsl
jae
ss
jae
icebp
push
enter
sub
mov
bnd
dec
push
pop
xor
mov
cmp
jecxz
xchg
rclb
add
hlt
dec
stc
clc
inc
or
lods
push
adc
or
pop
aaa
lds
aaa
je
dec
jecxz
inc
movsl
leave
call
cltd
in
pop
iret
mov
jg
mov
idivl
add
icebp
stc
xor
dec
adc
pop
cli
pop
arpl
cltd
dec
cmpsl
movb
xlat
sub
sub
cmpsb
js
push
mov
scas
adc
inc
sub
xor
fisubl
add
shll
mov
adc
jg
loopne
ret
adcb
cwtl
les
cmp
cmp
inc
pop
and
cmp
shl
mov
out
xor
jp
cmp
xchg
cmp
adc
lret
mov
dec
negb
mov
push
rcrb
dec
lret
fcoml
xchg
or
push
push
aam
sub
jle
aas
sbb
mov
in
mov
and
mov
or
pop
and
xlat
movb
insl
sbb
mov
ret
shrb
fdivs
repz
mov
mov
les
xor
icebp
icebp
out
xchg
xchg
xlat
bound
sbb
int3
inc
mov
push
jp
and
sub
lea
imul
jg
je
add
xor
push
cld
ljmp
cmc
jae
mov
out
stc
push
test
xor
sbb
cwtl
out
je
push
sub
push
insl
cmp
push
and
push
test
cmp
adc
lret
cwtl
aad
loop
roll
or
xor
mov
hlt
sbb
out
jg
int3
inc
imul
inc
pop
shlb
data16
fucomi
mov
xchg
mov
sbb
mov
sub
xchg
shr
incb
popf
adc
roll
fdiv
jae
sub
xchg
imul
jl
sti
add
in
out
add
loop
cmp
cmp
push
ljmp
orb
mov
push
ffree
xchg
cs
adc
iret
or
fdivrs
daa
imul
and
pusha
dec
mov
gs
mov
jge
xor
in
adc
sarb
fstpt
inc
mov
in
sub
jno
dec
orl
xor
movsl
faddl
mov
movsb
psrld
call
sub
mov
lahf
lret
in
nop
mov
jle
and
test
popa
clc
cmpsl
imul
mov
lods
jo
xchg
mov
icebp
test
push
shlb
mov
pusha
xchg
mov
mov
adc
daa
shl
popa
int3
xchg
cld
pop
jmp
in
xchg
lods
mov
push
lcall
push
icebp
test
in
jl
lods
scas
adc
mov
pop
xlat
out
sarl
mov
pop
xchg
stos
rcrl
dec
lret
sbb
cmp
dec
mov
push
sbb
and
adc
cmp
out
fs
xchg
jecxz
js
sub
or
sbb
xchg
pop
mov
aaa
jb
add
dec
lods
cli
sub
and
sub
enter
je
push
enter
out
sbb
mov
iret
cli
push
loop
sbb
cltd
pop
int3
inc
mov
mov
stc
xorl
mov
jge
mov
movb
push
mov
sub
adc
mov
insb
outsl
sbb
xor
mov
mov
jle
jg
sub
mov
pop
xor
pop
aam
out
adc
mov
sub
cmp
jmp
lret
dec
cmpb
imul
cmp
adc
pop
jp
xchg
adc
push
jge
mov
inc
push
mov
inc
rcl
std
and
xchg
mov
in
adc
sarb
pusha
mov
adcl
dec
pushf
orb
sbb
cmp
mov
das
inc
pop
lret
lods
and
pop
lcall
add
and
lcall
mov
out
test
add
add
setp
add
push
test
fldenv
xchg
mov
and
jmp
sub
je
outsb
cmp
pop
loope
jb
fldcw
fisttpll
mov
jecxz
enter
fcoml
jne
les
outsb
aaa
jns
cmp
test
jnp
scas
popa
test
lret
test
inc
cwtl
cmpsb
and
pop
int
mov
sub
sub
idiv
jae
stos
insl
stc
and
fs
dec
mov
jmp
outsl
iret
daa
and
mov
pusha
mov
sub
inc
adc
subl
out
sbb
loop
adc
jno
sbb
lret
push
push
mov
mov
fcoms
mov
add
inc
sub
mov
mov
mov
mov
xchg
xor
jae
inc
bound
lcall
cmpsl
jl
loopne
shl
in
in
pop
push
jnp
enter
adc
test
cmp
and
sub
or
test
jl
movsl
add
sbb
cmc
cmp
insl
jno
lock
ds
dec
or
es
iret
adc
out
push
int3
mov
dec
pop
cli
mov
jmp
ss
mov
addb
cs
in
shr
add
test
inc
pusha
std
sbb
cmp
dec
adc
fmull
add
mov
pop
add
fs
pusha
shrb
leave
xor
fisubs
movsb
inc
pcmpgtb
inc
lret
mov
sbb
ss
and
sar
sarb
mov
call
xor
jns
or
sub
xchg
dec
jl
out
mov
mov
cmpsb
inc
push
movsb
xchg
sub
mov
mov
in
xchg
sub
cmp
sbb
hlt
and
cld
fbstp
add
lea
and
inc
mov
sbb
aad
clc
inc
mov
mov
or
mov
mov
mov
lds
inc
adc
mov
cld
imul
mov
mov
insl
repnz
hlt
adc
add
sbb
inc
cmc
sbb
nop
stc
xor
loop,pn
shll
into
fbld
imul
notl
adc
cli
imul
in
aam
fwait
std
ljmp
and
stos
repnz
lock
mov
subb
aad
shrb
fsts
cmp
dec
insb
es
pop
pop
sbb
mov
stos
stos
pop
push
movsb
repnz
cltd
xchg
push
scas
mov
or
popf
pushf
xchg
pop
sbb
in
cmpsb
test
fistl
fnstenv
dec
mov
or
mov
int
inc
insb
mov
push
dec
gs
xchg
dec
inc
enter
ret
dec
or
out
test
add
seta
cmp
jle
adcl
sbb
fwait
jl
cmp
cmp
int
inc
mov
in
dec
cmpsl
mov
push
lods
sbb
test
mov
sbb
and
jne
dec
sub
xchg
enter
jbe
test
or
mov
mov
aad
inc
xor
jbe
test
and
cmpsl
mov
sbb
aad
je
xor
in
fs
and
pop
and
mov
push
mov
cmp
xor
mov
ret
shrb
mov
inc
inc
int
sub
insb
pop
and
fdivl
jge
pop
aad
aam
push
inc
pop
mov
jns
pop
out
insb
pop
cmp
jmp
outsl
jns
jge
ja
xor
out
jne
test
in
loope
mov
test
jo
cmpb
push
xor
jp
out
xor
mov
call
and
fmuls
or
mov
cmp
test
je
inc
shll
ret
mov
in
ljmp
rcrl
xor
call
sbb
aad
sub
scas
pushf
lret
mov
ss
daa
adc
sub
dec
sub
sub
pushf
fsts
scas
sub
lds
adc
call
cmp
gs
or
push
fdivr
call
stos
jne
add
in
lret
arpl
cli
and
push
mov
jae
sbb
aas
jo
adc
push
test
insb
push
and
mov
iret
ficoml
bound
inc
add
xorl
test
mov
xor
addr16
and
xlat
push
mov
jno
mov
insl
in
pop
jne
sub
fsubp
fwait
jno
popf
in
clc
cli
mov
aad
xor
pop
in
cmp
shl
sub
mov
inc
test
fs
dec
repnz
mov
sub
stos
push
lcall
outsl
pop
gs
mov
cmc
jnp
pop
jno
inc
sbb
shlb
adc
in
xchg
es
ret
popa
mov
int3
gs
adc
bound
cmc
adc
arpl
jl
imul
mov
xor
std
bnd
out
xlat
and
xor
cli
cmpb
mov
inc
movsl
push
mov
test
stc
cmove
xchg
xor
sub
dec
out
jnp
hlt
cmp
dec
mov
outsb
mov
sub
jecxz
out
stos
push
jg
mov
add
sbb
daa
xchg
mov
pop
mov
scas
les
inc
push
aaa
add
xchg
and
jecxz
movsb
cs
pop
test
in
mov
in
pop
adc
mulb
mov
xchg
mov
pop
lock
push
lahf
iret
ret
out
or
shr
cltd
cmpsb
and
mov
popa
andl
scas
lahf
or
aaa
cmp
mov
inc
push
push
pop
bound
in
jmp
cli
mov
mov
les
aas
testl
dec
cmp
int
adc
repz
add
adc
test
popa
adc
ret
hlt
cwtl
loop
cmc
pop
mov
iret
fmull
mov
push
cmpsl
arpl
jae
lods
cmpsb
xchg
in
jno
rcrl
in
sbb
cmp
or
dec
pop
ja
pop
notb
push
fcoms
fstpl
xor
xchg
mov
out
mov
cwtl
fcoms
dec
aam
into
xor
mov
sbb
std
adc
sahf
xlat
mov
cmpsb
pop
nop
sbb
out
adc
xchg
sbb
push
pushl
fidivl
addb
sbb
sti
pusha
cltd
testb
in
adc
arpl
popf
ret
cmc
loope
mov
icebp
xor
scas
lods
cmp
out
mov
js
shll
imul
jno
cmpl
add
fstpl
xchg
push
fmuls
push
movsb
sbb
xlat
out
or
xchg
or
add
adc
sbb
jp
not
sbb
ds
cltd
in
shl
pusha
clc
cmp
pushl
xor
mov
and
xor
dec
das
sbb
rolb
stos
add
mov
icebp
cmp
push
pop
pushf
lea
fnstsw
mov
or
push
adc
ljmp
ja
inc
icebp
sbb
xlat
jecxz
decl
mov
imul
sbbb
rcrb
enter
das
addr16
ja
adc
hlt
xor
loop
pop
dec
push
or
in
fcmovu
fiaddl
sbb
mov
cmpsl
out
out
sbb
in
cld
or
sub
push
xchg
mov
inc
jns
fwait
out
je
jmp
je
mov
mov
mov
imul
mov
mov
dec
subb
fcomps
inc
sbb
push
cmp
push
test
dec
scas
cmp
inc
pop
fcoml
fadd
pop
shll
arpl
fisubrl
push
mov
je
mov
xchg
loopne
adc
or
fwait
aaa
test
bound
cli
and
push
ds
or
clc
or
stos
repnz
in
dec
and
ret
stos
jge
movsb
add
cmpsb
or
cmp
icebp
pop
sbb
in
xor
add
xor
adc
or
divb
insb
mov
addl
in
cmp
negl
adc
xchg
inc
mov
sub
sbb
outsl
xlat
mov
mov
loope
rclb
mov
cwtl
pushf
orl
data16
fs
std
shrb
dec
sbb
outsb
mov
and
add
sbb
test
js
mov
or
push
ret
jbe
and
loope
jbe
push
aad
rclb
sbb
pop
dec
mov
cmp
push
mov
std
inc
aad
dec
in
shll
mov
jne
and
jb
sbb
and
pop
nop
in
adc
lret
push
into
xchg
inc
jge
gs
call
jp
or
or
inc
pop
or
or
and
scas
dec
fsubrl
jle
xchg
and
mov
test
xor
ret
ret
push
neg
dec
pop
std
jg
fnsetpm(287
ss
mov
fcoms
ja
or
ljmp
cmp
loopne
rcrl
int
adc
xchg
in
cmpl
pushf
popa
imul
stos
pop
add
insl
cmp
in
addl
popf
or
cld
std
cltd
lret
pop
movsb
clc
mov
adc
mov
mov
sbbb
ret
lock
orl
int
je
lods
in
fiaddl
mov
lcall
xor
fists
xor
add
dec
cs
mov
add
xor
fcom
incl
adc
insb
mov
push
xor
jge
jno
stos
cld
pushf
pop
flds
push
mov
pop
inc
sbb
movsb
sub
sbb
fcomp
mov
out
jno
fsubrs
mov
and
shrb
dec
hlt
jge
sub
iret
rcl
fsubrl
jo
aaa
and
ljmp
ficoml
add
lods
push
ret
push
movsl
adc
fimuls
lea
inc
xchg
lods
xor
jae
shlb
sub
rcll
inc
test
dec
push
out
jno
cld
cmpl
ljmp
jmp
xor
push
cmc
mov
not
pop
ljmp
adc
inc
sbb
mov
pop
inc
mov
dec
pop
or
sub
stc
cmpsl
insl
popa
pop
fisttpll
sbb
enter
pop
xor
pcmpgtw
xor
rorb
fdivr
ds
stos
imul
loop
fstpl
xorb
inc
fisubs
add
sbb
dec
hlt
iret
xchg
mov
dec
les
push
push
aaa
sti
sbb
roll
call
mov
sub
mov
mov
fisubrl
jecxz
sahf
enter
jne
jl
inc
adc
repnz
dec
or
jae
or
jmp
icebp
ds
icebp
fs
lds
push
aaa
sbb
fwait
mov
fiadds
mov
xor
pop
nop
and
mov
dec
add
repz
mov
mov
mov
push
xor
lret
push
iret
pusha
and
xor
jle
data16
mov
mov
add
clc
fwait
pop
incb
test
sbb
int3
daa
lahf
add
fwait
lock
mov
jae
xchg
fldz
cmp
loopne
sub
mov
sub
sub
mov
fldcw
cmc
dec
cmpl
in
mov
iret
and
ja
ficompl
enter
push
mov
ds
iret
pop
xor
mov
xor
dec
and
sbb
sbb
mov
push
jg
sbb
xchg
cmp
mov
daa
movsb
shll
and
push
cmc
int
scas
sub
pop
arpl
idivl
shlb
jp
jg
das
dec
jl
mov
cmpsb
lret
xchg
scas
repz
leave
xchg
mov
mov
mov
cmp
adc
ja
inc
fnsave
sub
cmp
sbb
loop
imul
fs
out
nop
mov
sbb
lahf
in
iret
dec
xchg
and
fs
mov
repz
aaa
or
fs
sub
cmpsl
jecxz
adc
adc
das
das
out
mov
ss
sahf
test
ds
lahf
out
pop
push
lods
maskmovq
divl
pushf
cmp
cmpsb
in
daa
jg
imul
mov
jb
aad
test
mov
iret
mov
push
push
add
and
ficoml
call
bound
lret
cmp
inc
adc
popf
jg
and
rcrl
popa
in
pop
cmp
sub
add
mov
dec
cmp
or
and
repnz
mov
enter
push
or
and
dec
aaa
js
loop
push
shlb
xor
fsubl
je
ja
aam
or
add
gs
fisubl
das
xor
dec
nop
jg
push
call
lcall
pop
sti
jo
addb
mov
dec
test
add
push
push
ljmp
and
ds
enter
dec
jmp
jb
inc
and
sub
cld
xchg
dec
xor
xchg
dec
mov
or
ja
push
rcr
ss
add
mov
push
test
lret
adc
test
or
sbb
sbb
test
adc
movsl
das
pop
or
scas
dec
movsl
cmp
jne
arpl
mov
jge
popl
aad
mov
push
jnp
jb
cmp
inc
xchg
pop
mov
icebp
or
pop
outsl
stc
mov
out
andl
mov
cmc
pop
repnz
inc
sbb
ret
jo
mov
pushf
stc
aam
cmp
pop
cmp
push
push
fldcw
dec
cmpsl
mov
out
out
out
inc
mov
loopne
push
call
std
mov
mov
cmpsl
rclb
js
and
imul
into
fsubr
test
negb
inc
xor
call
int
push
test
stc
push
pop
or
packssdw
dec
setns
mov
popf
mov
rcll
dec
sbb
adcl
std
cli
mov
push
add
in
cmp
jecxz
inc
outsl
xchg
push
int
aas
mov
out
xlat
movl
jmp
or
nop
push
push
js
fiaddl
ljmp
int3
jae
into
movsb
lret
mov
push
cmp
pushf
dec
fmuls
div
js
pop
mov
jno
fcmovne
sub
dec
les
lods
data16
mov
ret
xchg
pop
pop
push
sub
ds
sub
inc
outsl
lcall
push
cmc
xchg
xchg
xchg
adc
cli
mov
out
insb
popa
pop
pop
aam
lret
jno
mov
xor
movsl
mov
stos
hlt
xchg
lret
xchg
sub
pop
test
lock
lret
lods
fisubl
inc
aam
sub
sub
fcmovu
add
pop
call
jg
sti
ljmp
into
cmpsb
jmp
stos
cmp
notl
pop
outsb
pop
cmp
and
adc
lret
sub
nop
ljmp
inc
sub
cmp
and
ds
xchg
rcll
data16
or
dec
sbb
fistpl
push
push
in
pop
into
adcl
test
jbe
mov
jmp
pop
push
jnp
loop
adc
shlb
jnp
xchg
jp
ja
lret
dec
frstor
in
inc
fwait
and
aad
mov
and
adc
or
gs
jmp
popf
popa
push
mov
pushf
sub
mov
andl
leave
in
cmp
ss
inc
sub
push
and
popa
hlt
addr16
push
add
int3
or
push
and
mov
xlat
daa
inc
ja
xchg
jmp
mov
push
mov
repz
fstl
icebp
cs
mov
mov
mov
jl
sub
fadd
stos
mov
or
repnz
icebp
sub
and
lret
jae
inc
call
clc
into
enter
adc
jg
xor
and
aad
sub
xchg
inc
sbb
adc
rorl
sti
adc
inc
mov
enter
sub
mov
push
out
cwtl
adcl
mov
dec
or
loop
lret
dec
cs
push
xchg
xchg
jle
fsubs
leave
call
or
in
sub
imul
insl
hlt
dec
xchg
xchg
mov
sub
lret
adc
cmpsl
push
fists
fucomp
add
and
leave
scas
sbbb
add
xchg
loopne
ja
jp
inc
nop
push
nop
push
and
jmp
cmp
mov
inc
add
lahf
movsl
movzbl
mov
xchg
jno
in
dec
call
push
in
adc
and
xor
pushf
or
cmp
add
fcmovb
sbbb
cmp
mov
mov
xchg
stos
pop
fimuls
mov
sti
push
jae
sub
adc
clc
xorl
lock
dec
cmpsl
mov
nopl
jmp
or
or
xchg
jge
push
rol
aad
fistl
push
pop
lods
out
dec
loopne
fwait
fwait
lods
pop
cmp
add
in
mov
xlat
add
cmpb
mov
in
sub
xorb
jns
mov
cmp
or
pushf
jo
pop
xlat
out
pop
or
sbb
cltd
in
frstor
cmp
outsb
mov
mov
fidivs
sub
push
mov
notl
adc
scas
inc
add
pop
fbld
cmp
movb
pop
cld
mov
jge
outsb
mov
cmpb
add
repnz
ja
cmp
jecxz
inc
dec
jns
jbe
xchg
cmp
fdivrs
cmp
stos
je
sbb
xchg
roll
adc
psadbw
pop
ret
aaa
xor
inc
aad
and
decl
or
stc
mov
mov
mov
aam
sub
and
es
outsb
into
sbb
mov
xchg
lcall
data16
add
xchg
cmp
mov
xor
xor
loopne
lods
cwtl
push
outsb
into
lahf
jp
daa
loope
push
loopne
test
pop
adc
int
sub
out
sbb
in
xor
pop
mov
cmp
sbb
in
fwait
pop
movd
jae
out
out
fbld
or
adc
or
adc
xchg
ljmp
or
test
dec
jnp
sti
iret
ja
daa
addb
jmp
sub
pop
adc
movsb
and
lahf
cld
cmp
int3
push
dec
dec
sbb
sbb
mov
pop
mov
idivw
fwait
jl
push
rclb
insb
fdivrl
mull
fdivrs
mov
lods
mov
dec
mov
sti
inc
mov
cmp
leave
jo
pusha
or
nop
andl
cmpsb
and
xchg
inc
jp
movsb
out
and
fmul
push
enterw
pop
pop
or
faddp
sti
repz
ja
aas
or
pop
xchg
loope
mov
sbb
dec
pop
push
movsl
loop
out
xchg
int3
or
jmp
pop
push
iret
xchg
mov
in
cmp
stc
push
stos
jno
mov
iret
mov
push
and
sub
ror
das
in
pop
pusha
pop
sub
fistl
jne
mov
dec
inc
je
cmp
ret
repnz
xchg
imul
dec
cli
mov
mul
push
daa
xchg
mov
xor
mov
xor
and
cltd
cwtl
pop
jae
dec
sub
jns
xchg
sbb
sub
out
aas
sub
and
jge
cs
add
dec
in
mov
test
imul
shr
mov
scas
xchg
int
xor
ja
testl
push
sub
in
mov
push
bound
fstpl
test
in
loope
cmp
popf
jne
jl
xor
adcb
mov
cmc
stc
addr16
push
scas
mov
and
arpl
mov
stos
cltd
out
and
pop
xor
ret
mov
arpl
in
xor
jmp
popf
je
fwait
jno
mov
test
mov
mov
fadd
fsubr
aad
in
dec
xchg
cmp
daa
leave
and
movsb
mov
ror
mov
test
pop
mov
mov
leave
add
jge
sbb
cmp
insl
movsl
push
push
outsl
nop
out
in
sbb
mov
pop
aad
test
mov
mov
mov
or
shl
lock
mov
or
and
mov
int
ror
in
mov
iret
xor
dec
push
sbb
iret
mov
leave
jnp
jle
mov
movsl
jnp
out
adc
insl
inc
mov
fcomps
pop
or
loope
lret
mov
add
enter
sbb
mov
and
mov
lods
enter
outsb
bnd
js
jmp
fwait
fwait
dec
sub
mov
lods
xor
push
cmp
sbb
es
dec
ret
into
jge
push
sub
arpl
les
push
pop
jle
fcompl
ret
inc
mov
add
mov
mov
aam
lea
cmp
sub
loopne
pop
xor
jnp
mov
nop
dec
jns
jecxz
and
fs
outsl
xchg
sbb
test
sbb
jmp
cmp
xchg
int
or
rclb
adcb
fcoml
mov
addr16
popa
int3
fistps
mov
xor
push
test
mov
outsb
lret
add
sbb
pop
lcall
xchg
icebp
ror
xor
xchg
jg
pop
jmp
sbb
sbb
movsl
jnp
dec
and
daa
mov
das
flds
cmp
test
mov
inc
sbb
clc
xchg
add
lock
pop
cmp
divl
cmp
pop
sub
mov
inc
add
fldl2e
pop
aam
ss
lods
ret
or
lods
adc
cmp
mov
bound
lods
and
add
jnp
jae
cs
dec
xlat
stc
nop
movsl
movl
mov
je
loopne
push
ficoml
imul
loopne
xor
in
repnz
push
out
mov
add
adc
addb
push
scas
in
and
pop
pop
pop
pop
mov
jnp
out
push
mov
inc
mov
test
ret
mov
fwait
jmp
int
sbb
bound
pop
mov
add
dec
addr16
cmp
dec
sub
xchg
pop
jae
cmpsl
roll
push
out
aaa
insb
lods
push
rcll
mov
jne
cmc
pop
divl
mov
adc
pop
jmp
ja
or
nop
les
cmp
out
push
aas
sbb
popf
cmp
pop
imul
or
addr16
ficoml
and
adcb
and
movsb
aaa
dec
test
jbe
sub
insb
push
inc
jg
xor
js
js
cmp
pop
nop
ss
dec
jo
and
call
fcmovnu
int
xchg
movb
hlt
cmc
pop
leave
lods
loop
xchg
push
imul
push
mov
jno
mov
xor
stc
scas
inc
add
mov
lret
sti
mov
jle
subl
js
mov
gs
aad
sub
int
in
aad
jmp
outsb
hlt
call
inc
nop
adc
mov
hlt
jnp
popa
ror
mov
mov
add
ret
sub
dec
mov
movsl
ret
ja
jg
sub
mov
into
jecxz
mov
push
fmulp
add
pop
clc
icebp
sahf
scas
add
cmp
in
mov
mov
inc
sbb
test
sti
clc
add
jo
pop
and
loop
adc
push
mov
ret
sub
subl
jbe
pop
rolb
mov
jb
cs
push
fistpll
loopne
cmp
in
cltd
test
dec
sub
gs
xor
out
popa
cmp
xor
std
sbb
out
mov
xor
inc
nop
sub
sbb
or
or
mov
inc
push
in
xchg
mov
pop
testb
and
cli
push
sub
pop
push
lea
xor
iret
xchg
pop
fnsave
sub
bnd
gs
add
loopne
xchg
sbb
add
adc
aam
shlb
jg
or
mov
fists
xor
push
push
popf
push
addl
xchg
and
dec
mov
dec
lods
subl
xor
or
xchg
cwtl
cmpsl
push
pop
xchg
scas
xor
test
subl
es
push
outsb
insb
outsb
mov
xlat
pop
std
movsl
xchg
or
out
out
mov
ficomps
jae
adc
fsub
out
push
push
shlb
mov
leave
or
cwtl
test
xchg
sti
push
cmp
es
daa
mov
lret
shlb
les
das
paddw
mov
test
movsl
mov
jecxz
push
ret
push
pop
ja
imul
cli
enter
xor
cmp
pop
imul
aaa
adc
movsl
cmp
imul
call
fstpl
xchg
jmp
push
add
stc
dec
inc
cld
dec
mov
add
sub
out
mov
sti
lock
jge
js
mov
pop
xor
jbe
sbb
dec
cmp
aad
dec
dec
mov
xchg
mov
aam
push
pop
lcall
lds
push
iret
aad
loop
sbb
aam
imul
lahf
nop
pushf
xchg
and
sub
inc
aam
mov
jae
add
xchg
inc
mov
rcll
sarb
adc
stos
decb
sarl
ss
push
lods
mov
xchg
jge
mov
cmp
fwait
mov
outsl
xor
in
xlat
mov
adcb
cmp
mov
fstl
mov
sbb
adc
jp
or
shll
pop
aas
xchg
in
and
xchg
out
dec
jo
je
add
sbb
xchg
fwait
mov
push
bound
lock
jae
and
and
lret
mov
ljmp
jge
push
and
push
jnp
mov
outsb
mov
and
jnp
push
mov
aad
aam
xchg
sti
jecxz,pn
jne
fmull
sbb
std
jo
ja
test
andb
mov
stc
mov
push
dec
scas
rcl
xor
cmp
ret
adc
and
scas
shlb
jns
jl
movsb
jb
sub
or
pop
gs
movsb
mov
mov
mov
stos
and
adc
hlt
daa
pop
dec
lret
daa
pushl
inc
imul
inc
lock
loop
pop
orb
jb
mov
dec
scas
or
out
shlb
sub
fidivs
add
lods
mov
jg
or
dec
test
ljmp
jb
or
xchg
gs
out
dec
pop
add
lret
xor
push
in
movsl
test
dec
sbb
pop
mov
ss
xchg
stc
cmp
push
sub
add
out
ds
cmp
sbbl
and
stos
cmpsb
outsb
andl
cmp
sti
mov
push
inc
sub
pop
inc
push
inc
jne
bound
sub
xor
mov
and
repnz
mov
pusha
sbb
insb
in
lock
add
nop
in
add
notb
insl
mov
out
adc
add
test
xor
pop
mov
sub
add
clc
ret
movsb
into
fildl
inc
enter
cli
rorb
out
je
imul
fisttpl
shrl
xchg
jb
in
add
mov
jbe
sbb
pop
inc
fldl
xorl
cld
mov
xchg
cmp
insb
idivb
addr16
test
xchg
cmovs
xor
je
adc
sbb
xor
inc
jmp
andb
xor
add
mov
int3
or
das
movsl
xchg
xor
fistpl
pop
loopne
mov
sarb
mov
sbb
sub
lahf
mov
cmp
lcall
ja
xor
ljmp
sbbl
mov
out
xchg
and
arpl
insb
push
aad
sbb
push
mov
ret
mov
cmp
push
add
xor
incl
or
xor
fistl
xchg
loop
loopne
push
arpl
aas
int3
xor
testb
add
dec
mov
enter
pop
sub
jl
xor
inc
outsl
jmp
adc
stos
scas
cltd
inc
mov
xchg
mov
out
mov
ret
push
jmp
outsl
les
jg
sbb
inc
aaa
inc
in
pop
lods
dec
fisubs
mov
fwait
jl
sub
loope
push
jp
mov
add
mov
aaa
jle
cmpsl
push
push
add
sar
mov
or
mov
or
out
int3
test
push
pop
iret
or
mov
mov
xchg
insl
les
je
dec
xor
bound
xorl
das
ficoml
data16
hlt
inc
cld
dec
shlb
push
gs
dec
sbbb
outsb
or
sub
mov
das
loopne
push
loopne
stos
cltd
jg
push
cmp
xchg
xchg
xor
cmc
in
push
adc
fistpll
flds
popa
jns
pushf
or
push
movd
or
jl
jecxz
inc
or
xor
imul
cli
fistps
jmp
lahf
push
pop
movsb
mov
xchg
cmpb
cld
lods
into
movsw
insb
add
sub
add
cli
lods
xchg
addr16
mov
pop
push
out
mov
popa
in
fwait
lret
outsl
push
loop
shl
add
mov
outsl
repz
jecxz
sub
fsub
sub
jae
push
and
imul
and
fnstsw
mov
xchg
cld
popf
lea
pop
andl
cmpsl
movsl
mov
jno
cmpsb
xor
movsb
inc
sbb
jb
lock
shrl
pop
xchg
fs
jg
cmp
cmc
sub
comiss
inc
cmp
lods
mov
int
cwtl
adc
insb
dec
jl
lcall
sub
lahf
mov
pop
out
mov
jbe
jmp
pop
ljmp
sbb
push
jb
std
out
inc
push
or
mov
sub
data16
les
pop
jns
mov
push
xor
pop
pushf
inc
adc
mov
xchg
xor
in
jmp
mov
add
jl
in
out
adc
ja
test
pop
popa
sysenter
sub
decl
cmp
push
add
lcall
loop
add
fcomp
ljmp
xchg
mov
mov
mov
inc
popf
incb
insb
arpl
ljmp
mov
lcall
lret
fistps
ret
mov
dec
rclb
test
movsb
mov
shrb
xchg
sbb
mov
adc
sub
pop
call
dec
fists
add
aas
nop
adc
call
in
dec
cmp
out
cmp
xchg
movsb
push
movsb
or
pop
test
enter
inc
xchg
leave
jmp
mov
aam
inc
mov
inc
stos
ja
mov
mov
loopne
in
pop
lret
sar
jo
pushf
jne
std
sbb
mov
outsl
sahf
inc
xchg
and
rcr
aas
pop
jbe
pushf
sbb
mov
nop
mov
enter
sub
arpl
inc
clc
scas
iret
scas
or
in
or
test
inc
div
jo
call
call
inc
mov
ljmp
cmp
mov
js
adc
mov
mov
cli
xor
cmovl
inc
ja
xor
mov
xchg
cmp
or
jbe
adc
fisttps
xor
and
pop
inc
dec
movsl
jmp
xor
xchg
adc
lcall
inc
fsubl
pop
xchg
fildll
jbe
ret
dec
cld
and
inc
sbb
jecxz
mov
and
and
pop
fldenv
cmp
cmpb
adc
jge
sti
sub
mov
or
and
movsb
push
ss
pusha
icebp
adc
repz
sub
jae
lods
sbb
nop
sub
inc
cs
dec
arpl
cmp
hlt
fcomp
jb
or
or
aad
mov
popf
in
jmp
inc
mov
out
add
jg
jns
add
lds
mov
std
fldcw
sbb
outsb
add
jae,pn
shrl
mov
adc
test
or
ss
mov
jnp
std
scas
jecxz
jnp
jecxz
add
insl
je
jne
sahf
mov
call
pop
out
inc
pop
pop
jno
cmpsb
jle
in
hlt
mov
ja
movsl
cmp
mov
dec
addl
fs
outsb
cld
push
push
lods
rcll
push
jnp
es
jmp
imul
and
push
mov
ror
xchg
test
lcall
adc
loopne
xlat
push
or
dec
push
in
clc
jl
cwtl
lahf
data16
fisubl
and
scas
xor
push
outsb
stos
outsl
pop
sub
sub
sbb
divb
mov
insl
rcr
out
adc
adc
pop
fdivrs
filds
mov
inc
and
loope
out
scas
dec
decl
adc
std
stc
mov
ljmp
dec
dec
push
jmp
push
adc
nop
mov
aad
das
dec
jnp
scas
mov
out
fdiv
fcmovbe
sub
pop
mulb
mov
enter
jmp
mov
shlb
xchg
adc
sbb
adc
sbb
xor
aad
dec
mov
and
out
je
pop
sbb
fwait
add
xor
int
inc
flds
outsl
add
adc
rclb
jle
pop
in
mov
mov
adc
shll
sub
cmp
mov
cmpsl
adc
mov
lret
enter
cli
jg
xchg
pop
mov
cs
cwtl
dec
rcrl
pop
lods
mov
mov
and
ss
stos
sub
into
mov
iret
ret
mov
scas
mov
arpl
roll
testb
and
lahf
je
sub
xor
sub
incl
dec
dec
movsb
call
inc
pop
cmp
push
or
sub
or
mov
fnsave
lea
jmp
and
push
sti
cli
push
je
push
mov
fldt
adc
dec
xchg
cmp
mov
mov
or
cmpb
sbb
add
mov
rorb
pop
mov
bound
xor
xchg
mov
rcrl
repnz
xor
mov
fdivs
push
add
jb
cmp
je
mov
lods
mov
js
lods
sbb
mov
mov
lods
cmp
mov
or
jne
das
ja
je
movsb
mov
lods
test
pop
cmp
add
pop
scas
push
test
dec
fwait
in
dec
xchg
jae
in
push
jnp
repz
int
sbb
mov
outsb
stos
add
pop
jge
mov
mov
orb
mov
cmc
incb
cld
sahf
cli
scas
inc
jmp
push
scas
aad
lods
rcr
test
int
xchg
cmpsl
iret
clc
or
mov
xor
push
sbb
outsb
xorb
xor
add
cmp
hlt
xor
or
mov
mov
cwtl
add
sub
push
lock
repnz
push
sub
lods
outsl
dec
push
push
jge
sbb
xchg
xor
jno
jae
data16
dec
cltd
push
mov
jae
jbe
or
shrw
fdivl
adc
push
out
mov
aas
sub
stos
jne
push
ljmp
xor
xchg
jb
mov
dec
shlb
pop
sub
lods
fcompl
outsl
sbb
pop
push
mov
and
xor
stc
lahf
push
xchg
dec
shr
push
mov
push
add
sar
jae
popa
shrb
inc
mov
mov
jl
rcrb
add
sbb
subl
push
cmp
out
movsb
lret
adc
popa
arpl
pop
mov
push
dec
sub
orl
lret
inc
aaa
mov
cmc
jl
pusha
sbb
out
adc
mov
xor
mov
roll
and
dec
inc
lcall
inc
mov
jne
inc
push
loop
out
jae
std
les
push
es
or
push
lds
mov
cli
pushf
in
in
xchg
test
sub
sub
pop
imul
int3
cltd
popa
mov
fwait
ret
mov
jmp
mov
mov
stos
or
dec
rcrb
call
mov
call
mov
mov
dec
arpl
mov
sub
jmp
pusha
aas
add
fsubs
fs
xlat
insb
fnstenv
cs
mov
daa
ss
cmp
les
rcll
faddl
adc
pusha
iret
rorl
iret
loop
or
push
jl
mov
push
adc
and
pop
rclb
sub
add
pop
repnz
mov
fsts
sti
sub
popa
adc
dec
lret
enter
faddl
adc
mov
xor
and
push
jmp
pop
sub
aam
lret
or
xlat
adc
stc
sbb
out
imul
jno
ja
repnz
push
movsl
push
xor
pop
push
pop
loopne
pop
cltd
cmpsb
cmpsb
pop
jl
jns
xor
test
sti
pop
mov
inc
test
outsb
mov
js
in
pop
mov
xchg
lret
into
mov
arpl
sbb
mov
inc
inc
repz
mov
div
cmp
mov
xchg
mov
jmp
hlt
movsl
loope
fwait
test
and
out
rcr
mov
shl
xchg
inc
jnp
jecxz
addr16
loop
push
xchg
cwtl
mov
mov
inc
lods
jle
dec
lods
enter
adc
mov
iret
popf
mov
lret
stos
mov
xchg
xor
bound
jl
jb
push
pusha
movsb
dec
sub
rcrb
nop
cmp
jo
test
imul
lcall
test
mov
enter
or
aas
push
rcr
ror
dec
push
insb
mov
mov
out
loope
dec
std
imul
scas
sbb
fbld
sbb
int3
enter
push
out
icebp
fwait
imul
mov
dec
adc
lret
mov
push
dec
jl
xor
fldenv
test
sub
mull
sarb
jno
lahf
pop
or
mov
out
xchg
jmp
mov
inc
test
jae
cmp
scas
pop
mov
loope
loopne
mov
popa
jbe
jbe
mov
xchg
sti
je
aad
mov
addr16
popa
lods
sub
in
push
xchg
ret
inc
push
pop
ds
fwait
cld
push
ret
or
daa
push
sbb
sub
addr16
xor
pop
and
fsubrs
in
decb
loope
add
stc
js
xor
jp
cmp
shl
es
cmp
mov
sub
xor
sub
cmp
popf
enter
insl
sub
adc
repz
inc
jl
mulb
adc
cmp
cmp
icebp
mov
pop
aas
jnp
adc
out
inc
cli
adc
dec
imulb
cmpsb
jmp
push
testb
mov
repz
std
dec
movsl
lea
xchg
adc
or
cmpsl
mov
aam
push
pop
or
in
lea
mov
lock
cmp
in
stc
xor
jnp
sbb
pop
mov
inc
das
adcl
and
loopne
inc
call
add
ljmp
scas
sti
notb
enter
notl
jb
jecxz
mov
push
mov
test
sub
jnp
xorb
popf
pop
inc
mov
pop
adc
leave
add
add
jne
adc
mov
dec
jnp
mov
int
pop
dec
imul
int3
rclb
add
sbb
mov
jno
js
int3
and
int
mov
inc
iret
dec
int
jmp
fmuls
leave
arpl
jo
or
cmp
pop
sbb
das
fiaddl
mov
outsl
adc
pop
imul
data16
aas
fsubp
or
dec
mov
inc
push
xchg
jo
cmp
cltd
jge
jmp
adc
imul
mov
add
rcll
sbb
or
aas
cmc
popf
inc
and
sbb
rol
push
cmpsb
mov
shrl
and
out
jecxz
movsl
leave
loope
insl
add
xchg
subl
dec
mov
lahf
cmpb
xchg
mov
lahf
ljmp
push
or
shr
lods
mov
jl
xchg
or
das
divb
ljmp
scas
pusha
sahf
sbbl
xchg
insl
xchg
cmp
cmp
cmpsl
or
ljmp
or
add
cli
cmp
mov
lock
sub
popa
pop
inc
mov
mov
or
cmp
push
mov
xchg
dec
jecxz
mov
scas
nop
das
out
pop
bound
and
dec
pop
es
or
idivl
adc
mov
movsb
mov
sub
imul
xchg
iret
mov
adc
cmpsl
and
call
xor
or
popf
bound
cmp
sbb
sub
mov
dec
arpl
cs
orb
addr16
shll
fs
jl
lret
rorb
aam
sti
push
inc
in
jle
cmp
out
seta
sub
and
jecxz
add
jge
adc
sub
xor
mov
mov
adc
or
mov
in
call
cwtl
stos
mov
adcb
cli
jno
jb
jnp
jecxz
cmpsl
mov
or
or
xchg
adc
cmc
inc
movb
push
dec
add
jb
lret
push
cli
sbb
cltd
pushf
mov
insb
inc
jb
ljmp
es
mov
fldt
das
xorb
addr16
inc
flds
stc
add
pause
inc
sarl
bound
pop
sbb
mov
adcb
jmp
lea
mov
inc
pusha
jae
aam
jp
icebp
xor
and
sbb
add
pop
loopne
in
aaa
jns
mov
adc
ret
mov
add
ficoms
adcl
adc
cld
jge
popf
or
insb
lds
mov
mov
cs
xor
loop
or
repnz
repz
repnz
in
mov
mov
push
add
xlat
cmc
sbb
sbb
cmpsl
lcall
mov
add
sub
mov
aad
xor
sub
adc
push
mov
add
or
dec
lea
loopne
xchg
das
incl
dec
push
repz
aaa
movsb
repnz
push
push
das
roll
fldt
dec
jo
push
pop
out
ret
imul
and
outsb
aad
daa
adc
lret
test
outsb
fnstsw
test
shrb
int
and
or
sub
je
dec
cmpb
cmp
movsb
xchg
sub
cmp
in
lret
orl
sbb
sub
icebp
adc
push
cmpsb
out
ljmp
push
scas
jge
inc
mov
lods
push
adc
pop
pop
mov
sub
insl
lcall
push
dec
or
xor
test
lock
sub
push
jbe
or
inc
out
insl
js
orb
and
and
js
jnp
xchg
gs
add
cwtl
sti
xchg
test
mov
in
push
into
imul
inc
fadds
in
mov
ficoms
insl
sarb
xchg
adc
outsb
arpl
cli
xchg
lds
gs
aad
sbb
mov
movsb
lcall
shlb
fisttpll
add
movsb
scas
jb
movsb
ja
and
inc
scas
inc
daa
push
outsb
test
or
push
gs
sbb
in
enter
and
add
aam
ja
cmp
cmp
pushf
mov
or
inc
rorl
in
or
push
outsb
jg
inc
mov
shll
fcmove
sub
aas
mov
insl
mov
icebp
imul
loop
sarb
adc
push
or
std
mov
adc
aas
imul
dec
aam
inc
cmpsl
scas
pop
add
mov
icebp
testl
pop
out
sub
push
jo
xchg
sbb
pushf
sbb
clc
inc
mov
jmp
push
add
inc
hlt
and
xor
pop
lds
xchg
jns
lods
jb
mov
fiaddl
mov
inc
cwtl
rcll
jb
mov
scas
movsl
dec
in
lods
enter
xor
iret
out
imul
cmpb
xchg
jmp
cmp
push
in
jo
addr16
pushf
divl
pushf
stos
cmc
add
lods
lahf
dec
mov
or
mov
in
cltd
jo
lds
sbb
cmpsb
lret
repz
mov
fsubrp
sub
mov
test
pop
bound
and
ret
inc
jmp
adc
insb
test
cmc
rorb
mov
dec
add
add
xchg
fsubrl
test
adc
jle
sub
mov
lods
lock
jae
js
arpl
dec
lret
add
inc
pop
imul
mov
addr16
test
mov
fwait
lea
insl
or
mov
stc
inc
xlat
xor
dec
sarl
adc
shrb
test
cltd
mov
call
jo
sbb
cmp
es
push
into
adc
xlat
das
outsb
mov
mov
lret
xchg
mov
adc
les
ret
lds
inc
test
jg
loopne
lcall
pushf
xchg
test
adc
sbb
and
dec
pop
mov
aas
sub
cmpl
cmp
inc
je
mov
xlat
lods
sbb
mov
mov
dec
insb
push
int3
hlt
lret
inc
xchg
mov
mov
mov
in
lock
jl
rol
mov
lds
inc
cmc
lea
outsl
mulb
shrl
into
cli
outsl
fstl
mov
idivl
test
es
and
push
aad
fmull
lret
mov
es
sub
cmp
insl
scas
dec
daa
push
cmpsb
jo
cmp
mov
test
sti
movsl
mov
loopne
cmp
js
movb
xchg
loope
fstl
mov
push
xchg
mov
push
cmp
repz
lahf
and
ljmp
push
leave
mov
sbb
mov
lcall
roll
pop
fstpt
dec
je
test
rcrl
adc
add
inc
dec
dec
rcr
std
pop
loope
rorl
adc
mov
insb
inc
insl
mov
jne
fiaddl
jge
push
add
inc
dec
cli
ljmp
mov
mov
pop
xchg
xchg
mov
pusha
and
mov
add
mov
sbb
mov
cld
fsubl
ds
pop
push
shl
test
in
out
aam
mov
xchg
lds
fdivrs
or
andb
popf
icebp
cwtl
xor
aam
rorb
loopne
pop
adc
icebp
sub
aad
xor
in
mov
jo
test
loop
push
mov
sarb
cmpsb
inc
push
lds
mov
ret
mov
addr16
shlb
push
xor
pop
pop
scas
addl
in
sub
add
stos
flds
adc
repz
outsb
fists
add
lcall
ret
push
imul
test
push
jo
mov
push
ss
push
pop
pcmpeqb
lret
sbb
rorb
dec
inc
mov
bound
rep
cmp
out
inc
inc
int3
pop
cld
mov
mov
ret
sub
ret
dec
je
mov
popa
popf
jne
popa
dec
xorb
mov
scas
inc
ret
jae
in
decl
fisttps
mov
aam
pop
inc
pushf
scas
inc
pop
out
es
dec
ss
fsubl
shrb
mov
mov
insl
xor
mov
sub
cmp
insb
std
xchg
fnsave
fwait
mov
ficoml
dec
in
pop
xchg
cmp
xor
mov
into
add
dec
dec
sub
mov
push
inc
add
leave
adc
out
jno
aaa
or
mov
in
or
ss
adc
das
cmpsb
arpl
out
out
push
outsl
xchg
out
xor
pop
pop
xor
push
cmpsl
fdivrp
mov
jns
ret
iret
test
addb
ret
dec
or
mov
jmp
sub
lahf
push
xor
int3
enter
dec
mov
lea
icebp
jge
mov
xchg
fcoml
mov
mov
addr16
cltd
mov
and
das
dec
ror
fisubl
sti
pop
dec
inc
mov
xor
inc
sub
or
push
ret
cld
mov
jmp
jne
inc
test
jne
mov
jmp
addl
ja
mov
xchg
les
inc
mov
push
clc
fisttpll
mov
sub
mov
mov
add
mov
clc
pop
jbe
fmul
inc
inc
lods
test
ja
in
push
insl
iret
ljmp
jns
rolb
js
divb
xlat
xorb
loope
leave
shlb
lock
out
mov
aaa
inc
hlt
mov
sbb
clc
pop
push
nop
xchg
add
es
jg
add
popf
inc
das
mov
int3
rolb
sbb
xor
shl
push
pop
imul
leave
pop
in
mov
xchg
sahf
mull
pushl
inc
push
pop
push
pop
out
lock
lret
mov
leave
aam
sbb
add
mov
daa
dec
xchg
outsb
pop
cltd
mov
xchg
xchg
push
mov
cmc
xchg
xchg
adc
adc
rcr
and
aas
rorb
adc
sub
jle
ljmp
pop
out
ret
cld
int
lock
or
pop
lret
das
test
pop
leave
and
imul
sub
test
or
add
inc
pop
xchg
xlat
jb
pop
ljmp
adc
jns
stc
sub
fcomps
addr16
fsubrl
das
in
push
xchg
xchg
or
push
cmp
arpl
rcll
loop
std
mov
and
loopne
sbb
inc
or
or
stos
push
push
mov
pusha
cli
xorb
cmc
gs
push
gs
pop
jno
int
xchg
fcmove
push
lcall
mov
xchg
loopne
pop
loop
push
jo
scas
dec
aas
test
aaa
or
xchg
push
test
leave
inc
lods
ret
jp
fnstsw
dec
test
mov
mov
cmpsl
mov
loop
notl
push
leave
in
imul
pusha
ljmp
aaa
enter
push
pusha
lea
in
arpl
fs
xor
mov
jge
or
and
ds
cmp
dec
mov
fwait
xor
xchg
xchg
xchg
arpl
inc
xchg
adc
mov
dec
xor
push
out
lods
call
push
mov
xchg
sbb
sub
mov
push
sub
cmc
imul
add
or
mov
imul
sub
jnp
loopne
ja
pusha
xor
mov
rorl
mov
mov
aaa
pop
inc
je
cli
jnp
sub
xor
jnp
pop
fists
js
sbb
in
xchg
adc
dec
mov
and
lods
add
aaa
cmp
in
and
mov
mov
aas
decb
sbb
fidivs
xchg
push
fs
pop
mov
dec
loopne
jmp
xchg
ja
xchg
xor
cmc
test
xlat
aad
mov
lea
sti
cmc
mov
call
cmp
loope
les
popa
adc
clc
stos
mov
sbb
data16
pop
rcl
sub
xchg
sub
arpl
dec
into
inc
insl
mov
sbb
sub
or
es
push
enter
addr16
mov
or
and
dec
cwtl
jne
outsb
mov
jne
dec
sbb
in
sub
or
xor
cmp
jbe
xchg
mov
adc
xchg
gs
dec
jno
pop
stos
add
test
inc
fbld
jb
cltd
out
push
mov
aas
hlt
or
test
testl
hlt
iret
rcll
or
pop
fistpll
inc
dec
and
sbb
add
cmp
jecxz
add
xchg
sub
fisubl
aaa
and
shlb
or
xlat
mov
or
adc
or
sub
je
sub
mov
flds
pusha
pop
cmc
ret
push
lret
ret
pop
outsb
arpl
push
add
add
xchg
mov
ja
outsl
arpl
outsb
mov
and
cwtl
mull
dec
and
mov
es
lods
stc
shrl
sbb
mov
aas
fdivl
popf
jne
sbb
ret
rclb
inc
jns
sahf
les
jne
mov
sarb
rcrl
cmp
xchg
mov
pop
scas
jmp
cs
outsl
and
subl
repnz
jmp
mov
outsl
push
ja
mov
pop
loopne
ret
clc
fiaddl
fdivrs
je
movsl
mov
push
insl
jmp
mov
xchg
fiaddl
adc
test
push
pop
add
aam
jle
jg
ja
mov
jns
add
push
aas
fdivrl
or
lcall
adc
mov
jnp
cwtl
jo
adc
fimuls
push
push
je
mov
xor
dec
insl
sub
jge
adcl
lea
pushf
pop
hlt
or
or
negb
loop
dec
gs
cmp
dec
jp
add
ret
adc
add
imul
paddb
scas
mov
loopne
into
dec
mov
loope
adc
push
jbe
mov
cmpsb
dec
inc
dec
mov
sbb
pop
fdivs
mov
andb
movhps
sbbb
pop
std
stc
jmp
lret
mov
repz
or
push
shl
xchg
mov
pushf
fidivl
dec
push
add
test
add
sbb
mov
or
mov
addr16
xorb
cmp
push
test
ds
sub
je
pop
mov
imull
loope
outsl
pop
jne
jg
or
movsl
push
and
repz
lods
pop
pushf
and
xor
and
call
push
lret
shr
in
es
mov
inc
inc
pop
push
push
popa
sub
aad
mov
hlt
sub
mov
push
aaa
push
sbb
insb
rcrb
mov
or
add
or
jbe
out
inc
adc
xchg
mov
mov
xor
sub
or
and
fcmovb
out
arpl
sub
repz
xchg
movsb
in
stos
xor
in
add
add
scas
push
push
popf
push
adcb
mov
divl
arpl
mov
iret
sbb
mov
notb
cld
int3
cmp
fsubp
lock
mov
or
leave
mov
cmc
jmp
ret
inc
int3
pop
stos
mov
and
es
insl
ret
xchg
outsb
cs
mov
xor
push
xor
pop
test
out
fiadds
cltd
orl
jbe
loopne
xchg
mov
sub
scas
sahf
inc
loope
stc
ss
adc
rcl
mov
stos
scas
push
out
popf
lods
pop
cwtl
cmpsl
int3
lret
iret
pusha
dec
sbb
adc
inc
pop
lcall
or
push
bound
jnp
pslld
mov
outsb
cli
je
clc
cmp
adc
arpl
lock
or
jle
push
or
std
xchg
dec
cld
stos
jmp
pop
jae
mov
test
jg
mov
mov
imul
mov
mov
loope
es
add
shrb
lea
pop
push
fistpll
lock
or
dec
test
sbb
and
jl
icebp
pop
cmpsb
sbb
xor
in
add
or
repnz
pushf
negl
jg
inc
or
mov
decb
loope
inc
or
scas
imul
fwait
mov
inc
jae
xor
call
add
lahf
lock
sbbb
std
inc
pop
ss
stc
aaa
jb
mov
icebp
loope
in
pushf
push
dec
into
adc
mov
rcll
and
sarl
mov
rorb
jl
clc
jecxz
cmp
in
lock
stos
pushw
movsl
lock
jmp
inc
mov
adc
cmp
and
aad
xlat
ss
arpl
ss
pushl
or
jno
shl
lock
jge
mull
lret
dec
aaa
lahf
imul
sub
dec
shlb
push
cli
sahf
mov
shll
mov
vmread
inc
push
push
call
out
mul
fidivs
jbe
and
pop
imul
inc
aas
inc
sub
loope
mov
jge
push
xor
repnz
push
cltd
pop
mov
mov
add
sub
xchg
adc
xor
jo
pop
arpl
inc
cmp
cmp
push
add
scas
cmp
nop
test
enter
lcall
insb
jne
frstor
mov
stc
mov
hlt
jo
xchg
xchg
cltd
test
jne
and
and
inc
inc
mov
lods
xlat
push
xchg
mov
and
sub
pop
sbb
mov
cli
sbb
and
sub
xor
pop
xchg
and
xchg
jmp
and
daa
mov
mov
pop
cmp
and
lret
test
inc
xchg
lods
out
out
cs
aad
ror
xlat
and
adc
mov
das
cmp
dec
cltd
in
jno
pop
xchg
imul
pop
outsb
mov
sub
sub
test
mulb
es
bound
mov
mov
or
mov
cmp
push
lcall
shlb
decb
cltd
pop
lea
std
inc
sbbb
mov
or
xor
neg
sarl
dec
fidivrs
jmp
scas
fldenv
cld
push
and
mov
xor
test
mov
jb
jo
xchg
cmp
subl
adcb
ficoml
xchg
stos
push
cmp
sahf
pop
jns
pop
ret
cs
test
je
jns
out
shl
repnz
insb
stc
add
xor
or
mov
icebp
rolb
dec
pop
xchg
and
push
mulb
fsubrs
mov
call
xchg
cld
add
fnstenv
movsl
test
mov
lea
sbb
imul
cld
xchg
cmpsl
imul
or
pop
xor
lcall
mov
push
popf
pushf
pop
adc
adc
jno
or
xchg
cmp
shl
pop
mov
sbb
dec
inc
in
pushl
or
cltd
mov
inc
xchg
ss
mov
cmp
cs
xchg
icebp
bound
movsb
and
iret
or
pop
fnstcw
and
and
test
clc
fidivrs
mov
adc
mov
mov
icebp
dec
add
pop
test
xchg
xchg
dec
pop
sti
adc
sbb
andb
sbb
add
in
mov
mov
subl
mov
pop
mov
imul
fwait
push
inc
pop
mov
and
push
jp
and
shrb
je
push
popf
js
mov
mov
mov
inc
ja
fcmovnu
xor
jbe
add
push
test
xor
lret
add
sbb
push
push
jmp
clc
shll
mov
cwtl
divb
push
mov
fs
pop
test
roll
push
out
inc
dec
mov
test
or
cmp
outsl
dec
nop
pop
jl
or
decl
add
cmp
repnz
ret
push
int
outsb
test
cli
es
cmp
out
sbb
mov
xchg
lret
in
cmp
jbe
sbb
xchg
sbb
loopne
dec
adc
pusha
add
sub
jae
movsl
xchg
push
xchg
in
pop
adc
inc
jne
jns
lds
nop
sbb
mov
jns
cltd
sub
jo
fimull
push
pop
or
aaa
xchg
iret
jns
into
rolb
enter
or
lock
mul
and
cltd
das
int
push
str
ret
add
cmp
insl
orl
mov
dec
fistpll
int3
jg
fcoms
mov
inc
push
int3
clc
jns
mov
mov
jmp
int3
jl
mov
addr16
movsl
inc
sbb
adc
or
jb
push
cmp
mov
call
test
or
jp
sub
mov
hlt
jmp
or
mov
in
cli
dec
cmp
popa
ret
adc
jb
mov
popf
sbb
push
in
lods
add
adc
dec
mov
mov
das
aaa
cmp
bound
adc
ja
dec
lcall
nop
std
repnz
mul
lcall
mov
mov
jno
inc
cld
adc
lret
sub
push
scas
out
or
mov
inc
pop
mov
data16
lock
nop
sub
jb
pushf
data16
dec
xchg
add
popf
lcall
andb
mov
xchg
data16
negl
js
test
aas
repz
fmulp
or
arpl
repz
cmp
push
jle
xor
fmull
mov
into
lods
mov
jbe
xchg
jnp
in
cmc
jbe
dec
fdiv
cwtl
pop
lock
aaa
or
int
pop
mov
and
xchg
test
popf
push
test
add
xchg
cwtl
or
cli
fdiv
add
lock
cmp
pop
mov
cmp
pop
pop
leave
jne
mov
stc
mov
test
test
shlb
dec
sbb
xor
andb
arpl
pop
adc
jo
cmp
pop
pusha
jle
mov
jno
hlt
cmp
aad
cwtl
pop
or
insb
bound
sub
mov
sbb
mov
lods
inc
cmp
inc
and
out
outsl
aad
movsb
daa
fdivrl
jle
je
sbb
adc
shll
xchg
cmc
sbb
mov
pop
sbb
decb
mov
popf
fwait
insb
inc
je
sbb
sbb
mov
push
sbb
dec
mov
push
movb
jge
in
lahf
loope
sbb
loop
pop
or
dec
roll
lock
pop
rorb
cmp
sbb
cmp
in
lret
adc
add
xlat
and
lods
adc
xchg
mov
fdivrl
test
adc
cmp
aas
hlt
add
test
pop
push
jbe
sub
jne
jl
stc
mov
daa
pop
imul
mov
sub
inc
aas
or
addr16
dec
xchg
scas
test
ss
xlat
loop
push
or
pop
out
jns
repz
or
aas
mov
or
sub
test
es
mov
mov
pop
mov
inc
aad
aas
je
js
cli
add
test
movsb
pop
lds
pushf
xchg
mov
ret
add
shll
xchg
sbb
fnstenv
ja
rorb
jp
not
or
mov
adc
push
jmp
lret
loop
add
imul
lahf
add
sarl
or
outsb
call
mov
mov
out
push
out
cwtl
out
sbb
leave
xchg
pop
sahf
dec
das
fwait
add
and
aad
mov
push
push
jb
add
push
out
rclb
iret
push
std
cmp
outsb
push
xchg
inc
inc
insb
or
dec
sub
loopne
sbb
fmuls
lea
jecxz
andl
jmp
ficoml
fsubr
subb
lds
jl
xchg
aaa
push
dec
stos
jg
dec
jmp
mov
adc
xchg
mov
and
add
xlat
fwait
ret
push
push
out
call
js
cltd
adc
pushf
nop
dec
rcrb
inc
das
xchg
mov
aad
cld
mov
shlb
nop
pop
ret
les
es
xor
mov
xchg
and
xor
data16
mov
lahf
mov
imul
xchg
adc
sqrtps
loopne
xorl
xor
pop
out
sbb
lret
int
js
shr
test
adc
jp
mov
sub
pop
out
mov
out
call
or
pop
mov
add
push
mov
in
pop
sub
mov
push
push
popf
xchg
mov
jnp
cltd
rol
call
jno
push
adc
jb
lea
cmp
test
bound
xor
or
shl
fstps
rcrb
or
mov
xchg
dec
sbb
dec
dec
mov
fnsave
dec
lcall
fbld
rclb
jae
movsl
test
or
and
testb
mov
cmp
mov
push
imulb
xchg
pop
jne
pop
movsb
sbb
int
mov
push
repz
xor
mov
test
adc
fs
sub
call
out
sbb
jae
or
xchg
popa
pop
hlt
sbb
out
fld
adc
leave
lahf
push
xor
jmp
fisttpl
dec
neg
mov
or
cwtl
sbb
scas
xchg
outsb
popa
xchg
outsl
xchg
lahf
dec
jae
push
jae
outsb
push
dec
mov
loop
ret
xchg
mov
outsb
ret
fisttpl
pop
aas
call
fmull
ljmp
nop
enter
cld
mov
aas
mov
xchg
sub
lcall
dec
in
shl
mov
scas
sar
jo
lcall
and
and
add
aas
into
sbbb
sarb
jo
es
inc
xchg
push
push
das
xchg
jp
mov
movsl
xchg
xlat
adc
jbe
fdivl
insl
repz
stos
jp
cmpsb
xor
aaa
xor
lds
insb
mov
cmp
loope
sti
subl
mov
cmpsb
pusha
inc
aas
xorl
ds
jo
pop
mov
out
jae
push
lcall
cld
sahf
call
inc
lahf
mov
ss
hlt
xor
bound
out
ss
jns
pop
mov
and
xor
jp
loop
xor
push
dec
imul
je
pop
mov
sbb
decl
add
mov
outsb
mov
outsl
inc
sbb
xchg
fwait
ss
mov
jl
pop
xor
mov
icebp
push
sbb
dec
outsl
and
lock
mov
icebp
cmpsb
arpl
sbb
scas
mov
xchg
mov
movb
mov
mov
test
push
inc
mov
adc
and
xchg
jae
cli
sbb
push
jle
or
rcr
fcom
jmp
mov
out
and
test
imul
fadds
fwait
push
pop
push
jne
dec
shlb
sbb
shl
scas
mov
mov
dec
test
aas
cmpsb
stos
mov
pop
cmp
das
fs
arpl
mov
movb
and
jo
add
adcl
jns
mov
shr
sbb
jp
dec
pusha
dec
push
std
cmpsb
in
sbb
ret
cs
gs
dec
in
pop
repnz
lods
cmp
mov
dec
mov
push
and
roll
or
push
shl
cmp
xchg
loopne
sbb
xchg
jae
and
sub
and
fisttps
jp
push
or
cmp
repz
or
stc
fcomps
dec
mov
int3
scas
fld
cmp
lds
pop
mov
mov
fwait
cwtl
iret
es
ss
rorl
jl
clc
pop
addr16
in
sub
push
cmpsl
movsb
pop
and
incl
sbb
pushf
addl
adc
out
inc
dec
in
mov
fdivr
pop
jb
scas
pop
cmp
idivb
js
mov
mov
lret
dec
inc
je
adc
mov
fidivrl
add
shrb
jmp
outsl
sub
sub
das
mov
cmpsl
inc
cmp
cmp
insl
mov
push
sahf
test
adc
adc
add
mov
sar
cmp
icebp
xchg
lock
mov
test
inc
mov
pop
push
xor
data16
push
fcoml
lret
ljmp
clc
sub
imul
push
out
rolb
sbb
fcomps
mov
test
addb
mov
mov
bound
shll
cltd
and
arpl
or
daa
lds
iret
pop
das
jge
pop
fdivl
into
call
adc
mov
or
sarb
mov
orl
sti
std
scas
mov
subb
pand
shl
sahf
dec
and
aam
addb
or
jmp
faddl
xor
pop
adc
sub
ret
out
inc
mov
push
ret
outsl
incb
cmp
insb
mov
and
xchg
push
flds
push
sub
dec
inc
or
jmp
dec
add
xor
int3
mov
push
lods
pop
insb
roll
rcrl
ja
pop
loop
dec
inc
mov
push
mov
pop
dec
cmp
sub
test
or
in
repnz
dec
pop
inc
loope
xchg
lret
dec
loope
movsl
fadds
dec
jg
inc
sbb
inc
fwait
and
lret
push
push
not
gs
push
mov
popa
push
shlb
into
push
mov
nop
xchg
xor
lods
push
popf
dec
inc
inc
mov
inc
pop
into
aam
jle
loopne
jg
and
mov
or
int
icebp
mov
push
mov
stc
pop
cmpsb
fstpl
and
repnz
jae
sti
push
sub
inc
xor
xchg
mov
in
sub
xchg
stos
push
in
mov
sbb
xchg
test
or
xchg
xor
out
xor
jge
push
rcr
jae
push
pushf
mov
adc
jp
aas
mov
fsubl
xchg
pushf
icebp
add
pop
int3
push
loopne
bound
in
hlt
cmp
out
sub
jg
cli
jge
inc
mov
rcll
pushf
mov
pop
daa
sub
cwtl
imul
lcall
arpl
rcll
not
pop
cld
xchg
repz
das
mov
fistpll
xor
cwtl
fcmove
inc
adc
bound
sub
lret
cld
test
notb
dec
sti
mov
addr16
in
or
nop
adc
dec
loope
xor
jo
bound
lods
inc
les
ret
mov
mov
pop
rorl
cmpsb
sub
and
idivb
push
mov
sub
fyl2xp1
mov
or
vpminub
roll
inc
loopne
mov
push
enter
lret
push
add
out
dec
std
push
fsubrl
jmp
stos
lods
pop
leave
cmc
mov
hlt
outsl
sub
jp
icebp
mov
pop
dec
mov
xchg
in
ja
gs
lcall
mov
mov
movsb
arpl
popf
sub
jg
push
cmpsb
mov
fdivrp
cmp
arpl
push
stos
lds
inc
cmp
mov
pop
push
pusha
pop
mov
lods
push
or
and
fucom
test
mov
push
test
and
mov
adc
test
repz
xchg
jne
movsl
push
int3
lds
pop
cli
sbb
mov
jns
leave
mov
add
outsl
mov
pop
sub
cmp
adc
aas
or
jns
ljmp
mov
icebp
inc
jb
data16
mov
sbb
sbb
idivb
les
sbb
push
or
loopne
jb
sub
repnz
mov
nop
cltd
or
stc
mov
and
jnp
dec
sbb
out
mov
int
shll
push
cmp
sbb
mov
cld
push
xor
mov
aas
aaa
jl
push
inc
pop
bound
mov
adc
xor
jmp
cwtl
in
add
mov
dec
cmc
xchg
fbld
cmp
cmp
push
in
jno
mov
cmp
gs
xlat
stos
jbe
pop
push
insb
mov
stos
cwtl
fwait
call
aam
test
out
fnstcw
jg
lcall
dec
dec
xor
pop
adc
xor
xlat
lahf
pop
inc
and
pusha
dec
xchg
shlb
cmc
and
iret
xor
pusha
iret
and
je
jbe
hlt
pusha
mov
sub
adc
inc
sub
mov
mov
stos
inc
loope
dec
gs
loope
mov
mov
cmp
and
and
jae
bound
aas
add
pop
ss
cmp
mov
mov
ret
in
sbbl
sbb
ret
cld
mov
jb
inc
sub
inc
dec
sub
fildl
insb
sbb
aaa
xor
shrl
sbb
pop
mov
jo
push
sti
add
and
or
xchg
jl
mov
or
fadds
call
aas
mov
xchg
xchg
dec
fs
cwtl
jnp
cld
push
sub
and
lcall
imul
inc
lahf
pop
inc
push
pop
adc
fbstp
xchg
sbb
mov
ret
push
jmp
into
fsubp
dec
daa
test
and
pusha
cmc
or
popa
in
cmpsb
mov
test
fbld
cmpsb
dec
out
xchg
loop
orb
add
sub
mov
jno
call
mov
pop
sub
mov
jmp
orl
sub
mov
mov
cmp
dec
sbb
ret
xor
aaa
fcmovnbe
sub
out
sbb
adc
jnp
dec
mov
mov
test
cmp
mov
jp
iret
add
push
lods
mov
scas
and
mov
cmp
jo
push
fistpl
xor
mov
into
scas
pop
push
std
vpmuludq
lds
xchg
fisttps
mov
imul
sub
and
fdivl
xchg
push
push
emms
push
loop
rorl
mov
jp
aam
call
call
sbb
andb
xor
clc
xor
mov
js
and
out
xorb
pushf
or
xchg
xchg
push
fwait
jbe
mov
cmpb
lret
mov
test
xchg
mull
jp
mov
add
fists
adc
std
loop
fistpl
cmp
pop
and
imul
adc
adc
push
mov
mov
xchg
pop
loopne
mov
mov
or
stos
mov
mov
xlat
mov
adc
cwtl
rolb
dec
xchg
inc
xchg
jno
cmpsl
mov
xchg
icebp
cld
cs
pop
ljmp
out
je
imull
int3
jae
fwait
mov
fnsave
inc
idivl
sub
out
lret
xchg
cli
icebp
cmp
das
imul
nop
or
mov
dec
xor
popf
imul
in
clc
add
xlat
mov
mov
cmc
push
pop
icebp
clc
addl
inc
aam
enter
in
or
das
jnp
inc
shr
cmp
jl
stc
stc
cltd
mov
push
nop
lret
dec
fcmovnb
lahf
mov
xchg
insl
push
xor
not
cld
lock
fists
and
loopne
aam
scas
jo
sbb
jp
sbbb
adc
pop
mov
sbb
shrl
cmp
sub
push
pusha
es
mov
jb
rcl
xchg
cmp
pop
ds
jo
lds
mov
mov
es
pop
stos
jp
popf
mov
mov
add
lds
cmpsb
mov
ret
dec
mov
pop
add
cmp
cltd
int3
add
fwait
inc
es
fwait
std
test
scas
fsubrl
xchg
push
add
nop
sbb
lahf
inc
mov
mov
mov
stc
lcall
cmpb
pop
sahf
out
test
push
rolb
mov
add
adc
hlt
cmpsb
aam
xchg
or
xor
lret
xor
add
adc
adc
and
idivb
cmp
and
mov
inc
adc
jg
addr16
xchg
sbb
sub
lahf
mov
dec
adc
iret
sub
mov
ret
mov
xor
faddp
and
push
add
outsl
mov
pop
cmpsl
mov
decb
add
daa
xor
mov
les
jnp
push
and
cmp
dec
leave
pusha
add
or
mov
bound
mov
repnz
pop
mov
jle
inc
sub
mov
mov
xchg
pop
push
out
pop
sbb
lods
out
mov
cltd
test
leave
iret
jo
inc
sarb
fstpt
pop
or
xchg
and
fimull
cmpsl
pop
ds
mull
ss
loop
mov
testl
jmp
imul
adc
push
jnp
sahf
repz
mov
arpl
cmpsb
js
jae
aam
jge
xchg
xchg
dec
movsl
sub
dec
fwait
add
mov
leave
cmpsb
testl
mov
lcall
leave
ss
in
orb
stc
stos
sar
test
les
aaa
outsl
cmp
mov
xchg
pop
lcall
sti
xchg
loopne
pop
and
addr16
gs
jge
dec
jmp
sbb
mov
rcrl
dec
pop
push
adc
mulb
nop
test
and
jge
inc
adc
shlb
jg
sub
mov
fiadds
int
push
fdivrs
gs
dec
lods
push
lcall
arpl
inc
pop
jno
xor
movsl
idivb
dec
shl
sub
or
cld
mov
push
loope
cmp
lcall
pop
jbe
into
mov
cmp
in
in
cltd
ss
into
inc
sbb
scas
psrlw
push
mov
and
push
sahf
xchg
adc
imul
cmc
xchg
xchg
test
testb
and
sbb
inc
mov
ljmp
lods
push
mov
sub
out
aaa
jns
cmpsb
fwait
pushf
insl
push
movsb
incb
addr16
inc
movsl
inc
loop
mov
insl
in
push
xchg
movb
mov
mov
aaa
sub
pushf
mov
dec
dec
xor
mov
push
jno
push
je
fwait
xchg
sahf
sahf
push
addr16
xchg
js
int3
mov
and
shlb
cmp
std
popa
push
popf
inc
xchg
.byte
xchg
mov
lods
dec
xorb
loop
ret
pusha
call
jmp
out
out
inc
out
sbbb
out
dec
out
bound
adc
inc
rcll
rolb
shl
rolb
addb
rolb
adc
mov
sub
lea
and
gs
mov
fldt
in
xchg
dec
mov
loop
xlat
in
mov
mov
rclb
jbe
and
inc
inc
pop
cmp
sbb
es
cmp
cmpsl
out
cmp
xor
insb
test
xor
push
mov
push
test
sub
mov
les
adc
lock
ret
aad
scas
cwtl
loopne
das
cmp
push
ds
repz
sub
mov
and
jecxz
arpl
pop
mov
mov
test
mov
repnz
sti
jnp
cwtl
lock
push
lods
mov
push
inc
and
cmp
push
cmpl
push
or
and
mov
adc
ds
xor
adcb
adc
je
or
xchg
or
cld
pop
ficompl
push
jns
repz
filds
or
rcll
push
or
lcall
sub
push
add
jmp
mov
fcoml
lret
orb
jmp
stos
sbb
sub
xchg
push
fucomip
jbe
mov
lods
xor
enter
and
ja
xchg
lret
cmpsl
mov
ja
popa
inc
imul
mov
js
mov
lahf
fwait
and
mov
sub
jle
sbb
inc
aad
push
in
cmpsl
inc
subb
xor
les
mov
lea
xor
jecxz
lea
movsl
sub
push
xchg
std
xchg
dec
aad
and
pop
pop
pop
jns
fsubl
xor
out
daa
cmp
insb
iret
loope
andl
dec
push
not
add
sub
ret
mov
rol
stos
jbe
sti
pop
push
aam
shlb
dec
hlt
jnp
stos
pop
push
adc
dec
or
dec
or
mov
xor
and
std
lods
aas
repz
ljmp
test
fnstenv
xor
mov
dec
mov
xor
jne
push
insb
add
mov
insb
bound
iret
and
cli
loopne
rclb
xchg
pop
sub
mov
in
jbe
xchg
jb
cltd
sbb
pop
and
mov
xor
sbb
jo
adc
inc
je
stos
negb
push
sub
or
cmp
pop
inc
out
mov
aas
in
rolb
add
sub
mov
and
dec
shlb
aas
shl
out
adcb
cmp
andb
cmpsb
mov
dec
aam
jno
out
xor
pop
aam
movl
and
loopne
addr16
cmp
mov
xchg
adc
lahf
cmp
popf
and
or
sbb
cld
mov
bound
mov
pop
and
add
and
dec
add
lea
shl
mov
mov
pushl
push
dec
shl
adcl
movsl
int
arpl
mov
pop
stos
sub
testb
or
std
xchg
mov
or
xchg
ficompl
sti
or
aam
std
int3
add
sbb
or
cmc
nop
cmp
repz
mov
aam
sbb
jecxz
mov
in
addl
mov
mov
inc
int
pop
inc
scas
push
jle
sbb
rcr
into
lcall
mov
dec
jle
and
lret
mov
xlat
dec
test
dec
shlb
shrb
xchg
inc
movsb
insb
xor
add
addl
in
ds
pop
jae
out
push
sub
inc
mov
cmpsb
push
inc
movsb
int
mov
movsb
push
mov
jmp
mov
jle
cmp
adc
pusha
lds
xchg
mov
fstpl
popf
lea
out
push
icebp
cs
aas
or
xor
hlt
nop
jecxz
fistps
xchg
ss
push
and
pop
xor
sbb
cltd
scas
idivl
sbb
fwait
lea
xchg
fucompp
repz
cwtl
push
sbb
insl
cltd
ljmp
add
popa
inc
or
sti
mov
mov
push
loope
xlat
mov
adc
shrl
adc
cltd
sub
fwait
dec
mov
movl
push
loopne
mov
cmp
pop
subb
mov
sub
mov
sbb
cmp
jae
xor
aad
js
icebp
stc
mov
xlat
adc
int
push
pushf
test
push
repnz
insl
imull
jecxz
inc
fucomi
mov
xchg
aas
mov
cmp
jg
sbb
jecxz
insl
fldl
out
adc
fs
mov
add
repz
inc
and
je
jo
or
pop
lea
pop
xor
fsubrl
hlt
mov
arpl
dec
xchg
std
int3
decb
cltd
push
pop
xorl
jge
movsl
stc
jg
push
movsb
aas
jmp
and
je
lret
mov
mov
inc
xor
rclb
repz
xor
jecxz
inc
ds
adc
sub
sarl
jg
sub
loop
or
jg
arpl
rorb
sbb
jecxz
jnp
xchg
sbb
or
or
aas
hlt
cmpsl
testl
cmp
repnz
popa
mov
pop
mov
mov
outsb
cwtl
imul
cmpsl
xchg
out
jnp
push
inc
in
push
jb
arpl
lods
add
test
aaa
sub
movsl
int3
sbb
into
rcl
mov
movsl
and
lret
mov
fnsave
pop
notb
and
inc
rcrb
pop
jns
cmp
aas
fiadds
mov
mov
mov
aaa
sbb
fldl
xchg
rcrb
pushf
push
xor
les
imul
mov
xor
push
sbb
nop
aaa
jle
subb
cs
dec
or
aam
cmp
incl
faddl
outsb
stos
and
xchg
pop
scas
das
sbb
clc
add
fistpll
int3
mov
ljmp
sbb
mov
movsb
mov
jmp
repz
jns
inc
fs
adc
sbb
roll
add
mov
pushf
hlt
or
inc
cmc
fucomi
cs
jp
cmp
xor
jno
mov
jb
cmovp
jb
cmp
and
mov
add
std
cld
inc
pop
cmp
and
cmp
jb
idivl
mov
iret
insl
jmp
and
rcll
je
lcall
cli
xchg
push
pop
and
pop
add
aam
popa
xor
in
add
or
cmp
sub
pop
push
pop
outsb
fsts
mov
push
sbb
mov
or
and
adc
xchg
inc
inc
mov
dec
gs
pop
add
jg
xchg
cli
decb
push
cmp
push
sbb
mov
pop
fwait
lods
negb
dec
outsl
xor
in
movsb
rclb
jmp
pop
sub
mov
sti
enter
repnz
adc
pop
flds
lcall
mov
sub
test
lret
inc
lcall
aas
add
sbb
cmp
pop
loopne
pushf
cmp
sub
outsb
insl
adc
xchg
push
sti
cmpsb
jbe
cmc
sub
loop
ret
pushf
ss
in
test
pushf
subb
jnp
loope
mov
pop
adc
out
shrb
mov
dec
sbb
add
pop
rcll
adc
popf
les
mov
scas
xor
pop
arpl
xor
push
loopne
pop
cmpsb
push
mov
lock
mov
test
int3
or
les
and
push
repz
cwtl
out
negb
in
mov
ljmp
pop
dec
jg
out
sarl
mov
popf
scas
inc
movb
mov
or
fisubrl
push
mov
and
pop
jecxz
ss
xor
jl
imul
add
mov
call
mov
enter
and
mov
cltd
in
repz
packsswb
jns
fnstcw
pushf
mov
out
stos
xor
mov
idiv
dec
inc
jns
fs
xorb
nop
dec
pmullw
jb
add
addr16
mov
xchg
push
repz
pushf
int3
pusha
cmp
out
and
shlb
popl
into
loope
scas
pop
ja
jmp
out
sub
jp
aas
aam
xlat
mov
cwtl
inc
push
in
mov
adc
mov
test
shll
push
imul
out
and
mov
add
popa
int3
pop
movsb
jae
jmp
and
sahf
rol
xor
pop
pop
sub
xchg
dec
push
lahf
fincstp
pop
mov
dec
test
adc
inc
pop
and
mov
repnz
pop
outsl
loop
fnstsw
dec
mov
add
std
pushw
adc
ret
inc
sbb
lcall
cwtl
sbb
mov
mov
nopl
fnstenv
fs
mov
dec
js
mov
imul
mov
adc
lcall
test
adc
cs
ss
and
arpl
stc
jp
mov
push
aaa
out
xor
add
lahf
popa
decb
inc
sbb
mov
in
sub
sub
loope
mov
mov
clc
rcrl
std
push
ret
ret
mov
and
aam
jmp
mov
lea
push
xlat
or
sub
popf
test
mov
inc
cmc
jl
adc
inc
repz
or
ljmp
call
je
popa
imul
stos
in
lods
shlb
into
push
jae
je
mov
and
pop
adc
mov
xchg
jb
adc
aad
stos
aad
and
adc
add
bound
cltd
cmpsb
repnz
jecxz
mov
adc
jne
jg
pop
pushf
iret
jl
and
add
inc
and
xor
pop
scas
insl
mov
inc
mov
adc
scas
data16
push
pop
mov
pop
xor
mov
lock
pop
scas
sub
sbb
mov
mov
out
pusha
push
sub
shll
mov
mov
pop
das
xchg
lret
adc
in
xchg
dec
inc
mov
mov
addb
xor
mov
sub
jge
xchg
dec
call
test
out
inc
mov
idiv
add
loopne
popa
push
test
push
lods
imul
sbb
bound
push
mov
mov
xor
clc
nop
dec
inc
mov
or
ret
mov
cmp
adc
jae
and
cmp
decl
xchg
nop
lods
cmp
add
or
add
push
dec
inc
dec
xor
add
add
add
add
je
jb
arpl
fs
jae
add
add
add
add
insb
jns
jb
jo
and
and
arpl
and
xor
xor
xor
xor
popa
bound
data16
popa
jb
add
inc
add
inc
