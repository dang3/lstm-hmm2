rcrl
xor
add
add
sub
push
mov
fdivl
loope
sub
in
enter
sti
out
or
fs
sahf
sbb
push
dec
call
sbb
mov
mov
fisubrl
leave
popl
jns
ja
add
mov
lds
push
mov
leave
dec
popf
aad
cmp
inc
fwait
aaa
jns
or
scas
jg
mov
bound
jae
xchg
out
or
dec
xor
inc
pop
jo
mov
mov
mov
fsubs
add
popa
out
lock
sub
jo
cmpb
lret
mov
cli
push
fisubs
int3
xlat
cmpl
cmp
ret
adc
lcall
push
call
dec
pushf
and
mov
dec
cmp
inc
pop
cmp
ret
insb
mov
out
sbb
fisubrs
xor
sbb
mov
xlat
iret
cwtl
aad
fildl
pop
xlat
push
into
mov
loope
cwtl
xor
sub
dec
test
andl
mov
lcall
incb
and
sbbl
mov
jmp
mov
xor
shll
xor
cwtl
jb,pn
cli
enter
and
sub
push
test
pusha
fucomip
inc
cli
std
aam
cmp
rolb
mov
add
add
dec
lods
loop
ret
data16
loop
int
shl
sub
push
adc
aad
push
pop
lds
sbb
or
and
aad
mov
inc
pop
sarl
scas
add
test
mov
mov
mov
push
mov
in
fbstp
sub
lret
jmp
add
mov
popl
in
mov
sahf
mov
lret
ja
movsb
xchg
shrl
fidivrl
sahf
pop
xor
lcall
jo
pop
dec
enter
xor
mov
mov
punpcklwd
or
jno
or
sbb
out
lods
pop
popf
enter
mov
mov
mov
loop
jl
mov
push
inc
add
out
adc
pop
test
pop
adcl
or
dec
lret
mov
jp
ds
or
aad
adc
lcall
mov
jns
xor
adc
test
imul
mov
mov
mov
mov
jg
inc
ja
shlb
je
lret
lcall
loopne
ret
mov
movsl
mov
inc
pusha
xor
dec
bound
xchg
push
sub
cmp
cwtl
arpl
cmp
lods
xchg
sub
pop
popf
push
mov
xchg
mov
adc
sahf
sti
mov
lods
rclb
imul
jno
cmpsl
dec
dec
nop
jge
les
jns
sbb
pop
xor
adc
xchg
xor
or
adc
mov
mov
jbe
pop
jns
add
mov
mov
outsl
cmp
enter
dec
adc
mov
xor
push
mov
jae
mov
jmp
push
imul
mov
mov
mov
rol
in
popf
xchg
or
movsl
push
test
mov
loop
cmp
push
dec
mov
jns,pt
pop
and
pop
fsubs
inc
mov
or
mov
rcll
stos
pusha
imul
mov
rcr
mulb
jmp
das
jmp
dec
and
movsb
cmp
enter
or
aad
cmp
mov
jmp
jl
push
jmp
daa
or
mov
ss
aam
ljmp
inc
add
mov
stos
xor
jp
sbb
mov
test
loope
out
sti
jp
xchg
adc
lods
les
pushf
and
add
into
xor
xchg
push
bound
adc
xor
add
push
or
es
xor
ljmp
xchg
sub
adc
cs
fs
jae
adc
jecxz
cwtl
xor
ja
push
cmpsb
cmp
or
sbb
scas
imul
rorb
stc
clc
push
loope
movsb
adc
lret
jae
loopne
fs
push
scas
test
enter
pop
loop
jne
xchg
mov
mov
sub
mov
repz
negl
push
jp
cmp
test
dec
jno
push
xchg
jae
cmp
sbb
dec
push
aam
popa
test
inc
fstl
xchg
jbe
addl
mov
hlt
sub
jp
pop
cmp
stos
adc
mov
xchg
in
mov
jnp
sahf
mov
out
push
pop
pusha
jmp
cld
xchg
push
mov
push
shll
cmpsl
ret
rcrl
mov
pop
ret
adc
int3
or
lcall
ss
mull
dec
dec
xchg
mov
inc
ret
imul
sub
scas
xor
mov
loop
mov
pop
retw
subl
pop
xchg
mov
movb
and
adc
or
incb
push
sahf
insb
daa
fsubr
cld
repz
repz
pusha
fwait
nop
es
xchg
mov
out
insb
mov
repnz
xchg
dec
cmp
mov
mov
arpl
sub
out
xchg
sbb
out
jnp
inc
lahf
iret
xchg
push
outsl
lcall
mov
mov
lea
and
push
repz
fidivl
mov
insl
sub
shl
mov
inc
or
mov
scas
ds
jg
popa
inc
fisubs
out
xchg
out
rcrb
mov
call
and
push
pop
xchg
mov
sub
jecxz
xchg
sti
cmc
popa
lods
and
or
cmp
or
dec
mov
fnsave
and
pop
dec
xchg
test
push
mov
push
out
sub
insl
xchg
bound
jbe
in
dec
xor
mov
cli
jo
jnp
repz
adc
in
push
mov
mov
mov
adc
pop
mov
adc
and
inc
xchg
int3
push
idivb
sub
fstpl
pusha
cwtl
xchg
cmp
dec
loope
xor
sbb
jae
insb
shlb
pop
sub
fs
lret
sarb
pop
cmp
repnz
daa
and
hlt
push
jb
stc
insl
sub
ret
and
sbb
bound
mov
test
cld
xor
movb
insl
aam
add
and
lock
loopne
stos
xchg
push
mov
mov
stos
add
out
imul
xchg
pop
sub
fnstenv
xor
sahf
imul
pop
push
jns
dec
jl
rep
bound
and
pop
cld
xor
call
nop
push
sub
xor
pop
test
testb
cmpsl
pop
ret
push
or
xchg
mov
hlt
mov
mov
mov
lret
mov
dec
and
lds
fdivs
xor
bswap
aad
cmp
popa
jecxz
pusha
lret
push
ds
test
add
mov
xor
das
lods
pop
lret
inc
mov
pop
dec
mov
mov
fsubl
xor
mov
lret
or
sub
in
insb
and
fisubrs
mov
push
fwait
inc
push
clc
cltd
add
sbb
inc
std
jmp
loopne
push
cmp
div
pop
mov
loopne
jnp
shll
push
push
mov
dec
les
ds
add
push
setae
clc
loop
je
cmc
shrl
jae
ljmp
orb
cmp
repz
fwait
inc
adc
mov
pop
fdivr
push
fnstenv
push
in
push
jnp
sbb
enter
push
jle
push
cltd
jne
pop
ljmp
clc
movsb
sarl
push
gs
jle
add
cmpsb
movsb
and
jl
shrl
inc
inc
mov
sahf
scas
sti
lea
and
in
aaa
popa
jae
daa
jb
mov
stos
iret
xlat
sub
and
dec
or
rcrb
sbb
pop
and
out
cmp
xchg
mov
adc
xchg
or
ret
pop
add
and
and
repz
stos
lcall
clc
mov
repnz
dec
xchg
dec
mov
jp
cs
xchg
jecxz
sub
xchg
add
test
adcl
aas
lods
bound
aaa
pop
push
sub
cwtl
loopne
notb
push
jl
push
inc
push
mov
push
repnz
ret
pushf
clc
lcall
test
lods
mov
nop
aaa
add
shlb
mov
dec
lds
mov
inc
mov
cmp
dec
ret
sub
stos
xor
xlat
iret
mov
bound
jle
mov
sub
pop
xor
pop
repnz
cmp
addr16
sub
fnstsw
lods
ljmp
adc
shr
push
pop
push
jp
mov
int3
mov
aad
xor
add
mov
cmpb
and
add
inc
insl
out
or
mov
jbe
into
ljmp
push
mov
fcoms
hlt
lods
jge
stc
push
int3
movb
test
cmp
jle
push
fwait
dec
rclb
sub
sbb
jno
adc
xor
fsubrs
mov
xor
daa
in
xchg
xchg
int
mov
mov
inc
clc
adc
mov
idiv
out
adc
mov
cmp
lret
xor
sbb
xchg
test
cli
bound
jle
ja
iret
fcoms
test
call
mov
cmp
int
adc
xchg
out
mov
pop
add
out
mov
xchg
movsb
jmp
hlt
push
mov
sub
dec
enter
pop
push
in
andl
addb
scas
push
xchg
gs
rcrb
std
int3
adc
pop
aam
push
lret
dec
add
int3
pusha
inc
push
mov
and
adc
xor
scas
fcoml
stos
push
xor
int3
jno
cmpsb
mov
scas
jae
add
arpl
lret
sti
mov
movsb
lea
test
rclb
aaa
adc
mov
jo
fistpl
rcll
and
shl
out
push
enter
rorb
jns
jl
mov
and
lret
dec
jae
mov
lods
fstps
add
dec
sub
push
adc
jb
push
xor
xor
adc
pop
lock
lcall
and
adc
sub
pop
jl
push
scas
movsb
int
push
sub
xchg
sbb
bound
out
mov
mov
jg
push
mov
out
push
gs
imul
dec
dec
rcrl
fbstp
xor
in
roll
mov
pop
psubw
bound
or
jbe
enter
sub
ja
icebp
wbinvd
mov
pusha
bnd
jns
push
push
mov
out
aaa
subb
movsl
push
jo
out
outsb
fstpt
or
ss
ja
btc
out
jnp
mov
jne
add
or
xor
or
shlb
insl
sbb
das
cli
lahf
int
stos
push
or
repnz
jp
sbb
xchg
es
xlat
sub
popa
lcall
flds
and
scas
cmpsl
das
dec
lods
cmp
sbb
outsb
ljmp
sbb
mov
mov
jnp
stos
jg
outsb
jge
dec
stos
addr16
xchg
cli
popa
das
mov
mov
xchg
xor
jnp
int
loopne
jp
js
push
dec
mov
cltd
ds
sbb
xchg
xor
fnstcw
mov
mov
mov
sub
gs
pushf
inc
out
dec
inc
aaa
pushf
stos
icebp
pusha
push
cltd
sub
or
insb
stos
scas
push
lock
push
popa
stos
add
mov
pop
xchg
mov
mov
push
ja
leave
jmp
or
or
lahf
mov
test
push
dec
notl
das
sbb
sbb
sbb
cmp
sub
xor
mov
push
aad
pop
call
ss
loopne
mov
xchg
negl
push
mov
jle
adc
sub
mov
push
bound
je
cmpsl
pop
test
movsl
sarb
push
fmulp
loope
cmp
mov
ret
or
in
add
popa
ljmp
lods
jno
cmp
lret
jmp
xchg
std
xchg
lods
mov
jecxz
loopne
pusha
dec
adc
inc
mov
and
jmp
cwtl
in
and
push
mov
pop
lret
int
mov
outsl
xchg
inc
ficoml
imul
dec
daa
mov
pop
cli
gs
lea
lahf
loope
int3
inc
loope
sbb
inc
mov
idivb
inc
ss
dec
aad
add
xor
lahf
pop
ljmp
shrl
cwtl
jnp
ja
scas
lods
dec
adc
or
les
xor
cmp
fs
in
sarb
mov
sbb
sbb
adc
inc
adc
repz
xchg
jae
enter
int3
cmc
dec
push
clc
inc
in
enter
lds
push
xchg
bound
dec
xlat
outsl
pop
inc
filds
test
iret
fs
mov
mov
pusha
lds
aam
cmp
negl
sub
add
sar
xchg
sbb
ret
pop
aaa
lret
ret
aam
stc
xchg
lods
or
cmpl
daa
mull
push
testb
jmp
int
mov
jno
sar
divb
test
add
adc
xor
sub
mov
push
mov
xchg
cmc
sbb
shll
les
pop
out
sub
xchg
sub
xlat
outsl
cmpsb
lds
jmp
sub
cmp
xchg
mov
dec
jmp
popa
ret
popa
adc
cmp
dec
loopne
out
sbb
and
mov
push
xor
fcompl
jle
cmp
outsb
clc
fwait
ret
mov
inc
in
inc
bound
dec
leave
xchg
test
sarl
pusha
sahf
push
pop
push
bound
push
xlat
cmp
cmp
out
lds
aad
fmull
sub
add
fsubs
iret
mov
or
mov
std
xlat
add
test
lods
jmp
into
fisubrs
repnz
pushf
arpl
mov
les
or
lods
mov
xor
inc
fadds
ss
mov
dec
jl
inc
push
popf
sbbb
mov
hlt
mov
push
loop
cmp
fstl
sahf
and
add
pop
dec
inc
sbb
adc
push
adc
or
cwtl
xchg
dec
cmp
ret
nop
mov
push
loop
xchg
sub
inc
lret
arpl
xor
sbb
xor
lds
in
adc
divl
ja
jg
mov
addl
sub
xchg
and
dec
xchg
fwait
jp
and
inc
stos
push
cmp
cwtl
push
or
pop
jnp
lret
push
sub
gs
mov
pop
jecxz
push
sbb
cmp
jge
aas
ret
mov
xchg
stc
mov
add
pushf
or
jns
aas
mov
pop
jae
inc
fldcw
in
push
inc
jbe
pop
aad
cmc
push
jmp
pop
adc
bnd
mov
pop
cwtl
jbe
jmp
cmp
sub
cmp
cmpl
orb
jb
ljmp
insl
sbbb
ret
in
lods
dec
jmp
sbb
sub
or
or
mov
mov
push
addr16
cwtl
sub
pop
xchg
cmc
fs
pop
mov
stos
es
and
xorl
and
cltd
or
lcall
scas
xor
lds
inc
dec
ret
inc
sub
movsl
cmpb
adc
das
pop
dec
sbb
nop
jnp
cmc
push
in
int
in
mov
or
fsts
sbb
push
push
mov
dec
cmp
rorw
mov
cwtl
xor
xchg
adc
lcall
sti
add
imul
push
notl
movsl
mov
int
and
fmul
mov
frstor
add
mov
orl
aam
js
clc
rorb
aaa
push
pop
fdivl
mov
jns
sti
jg
jns
mov
jne
fsubrl
cmp
clc
cmp
fs
shlb
xor
jge
fisttpll
jne
test
in
pushf
nop
push
push
and
clc
mov
sbbb
xchg
shlb
jb
ss
loop
xor
push
mov
jg
xchg
or
xchg
addr16
out
jecxz
nop
or
dec
and
aas
mov
sub
jl
fmuls
jecxz
inc
cmp
in
fnstcw
mov
mov
out
popf
aad
rolb
cmp
jno
rclb
push
xchg
das
cmpl
mov
cmc
mov
dec
lods
test
xchg
fwait
mov
add
fimuls
add
ljmp
jnp
jle
mov
sarb
out
push
pop
xchg
iret
or
mov
sub
pop
xchg
in
scas
adcl
inc
outsl
fwait
lds
and
out
push
push
push
fiadds
push
sub
add
lods
mov
out
add
sahf
xor
push
cmc
aas
xorb
inc
inc
jge
rcr
pop
bound
shll
push
add
sub
or
mov
add
xchg
jg
shrl
mov
sbb
jle
outsb
cmp
dec
mov
popf
mov
arpl
shr
inc
cli
fwait
pop
in
pop
mov
add
sub
inc
adc
mov
pop
xchg
pop
and
popa
andl
cli
call
cmp
adc
jl
movsl
cld
nop
popl
dec
xor
sbb
add
scas
sub
sub
pop
aad
and
out
stos
and
dec
retw
xchg
cmp
loope
hlt
outsb
push
jns
jecxz
jae
cmp
add
andl
sub
jns
sbb
and
mov
or
dec
aas
outsb
sahf
outsb
mov
mov
xor
lret
xchg
loope
adc
mov
nop
ljmp
inc
lods
ds
xchg
or
jns
dec
push
insl
pushf
ret
ror
adc
call
sub
mov
loope
inc
fwait
ret
push
hlt
ror
out
xchg
mov
push
mull
mov
pop
sbb
sbb
inc
pop
xchg
adc
ror
rorb
jp
jne
cmpsl
js
call
mov
add
pop
jg
push
das
adc
into
insl
cltd
out
jmp
enter
int3
mov
cmpsl
jae
rorl
mov
fmull
mov
cmp
outsb
sub
xchg
and
ror
movsl
incl
pop
xchg
fcomps
stc
stos
inc
out
push
imul
xchg
jns
mov
mov
lods
xchg
aas
fisttpl
sti
out
fdivrp
lock
jl
ljmp
addb
std
aad
imul
decl
fstpt
and
push
ja
mov
cld
mov
and
pop
pop
inc
or
inc
sub
mov
inc
xlat
mull
sub
lea
inc
std
addr16
dec
dec
sahf
and
xchg
in
in
ret
pusha
fs
or
cld
scas
test
mov
push
mov
cli
jno
std
test
jle
imul
sub
sub
and
lcall
push
aas
xchg
adc
loop
jns
fimuls
cmp
cli
cli
out
jno
mov
jl
ror
xchg
adc
in
fwait
jb
jmp
std
pop
call
cmp
sub
jnp
aad
adcl
fsubp
sbb
inc
jb
cmp
lret
rorb
xorb
pop
or
ljmp
cmp
fisubrs
mov
out
ss
mov
dec
or
push
cli
jmp
ja
push
jl
adc
lock
sub
hlt
sarb
mov
pop
lock
test
jne
rcl
fwait
sbb
dec
test
sahf
scas
in
gs
nop
cltd
cmp
jecxz
pop
leave
ds
mov
lods
xchg
or
cltd
mov
mov
das
aaa
mov
pop
sarb
in
movsb
jge
mov
jle
jp
testb
inc
int3
call
ret
add
mov
inc
xor
clc
pop
pushf
dec
addl
rorb
ss
mov
fwait
hlt
pop
lahf
xchg
repz
outsl
stos
cmp
xchg
push
inc
cmpsb
sbb
in
adc
mov
push
je
jno
xchg
pop
insb
into
mov
push
pop
or
hlt
pop
gs
xor
push
pop
imul
hlt
ss
xlat
scas
rcrb
pushf
dec
test
xchg
mov
cmp
fwait
cs
add
push
mov
aam
hlt
inc
jne
mov
fldenv
adc
push
int
xchg
ja
jns
in
and
sub
cltd
pop
ja
shll
push
dec
pop
sub
je
mov
psubsw
lret
jb
sbb
out
push
lret
movsl
shll
xchg
mov
cmp
xlat
add
mov
cld
cmpsb
stos
mov
xor
jecxz
sahf
sbb
sbb
mov
scas
stos
pop
push
cmp
and
call
mov
jae
jl
iret
pushl
dec
lods
cli
pop
or
mov
jmp
mov
decb
pushl
sarb
adc
inc
inc
sahf
mov
sbb
jae
cmp
inc
xor
pop
sti
aas
ret
add
imul
xchg
stos
mov
or
js
sub
cld
sub
inc
sub
ljmp
mov
fbld
mov
rcl
out
dec
push
push
imul
mov
add
mov
cmp
push
popf
leave
add
inc
xchg
pop
sub
inc
push
jnp
mov
sub
out
pushf
sub
inc
pop
add
xor
out
adc
int
jne
lahf
mov
cwtl
push
fwait
jl,pt
push
xchg
out
insl
stc
repnz
test
mov
ljmp
push
cmc
mov
cli
out
jne
mov
sub
int3
mov
les
fldt
repz
mov
xor
jl
push
arpl
bound
cmp
fst
pop
rdtsc
mov
fwait
lret
sbb
sbb
js
data16
hlt
push
mov
rep
xlat
add
cs
rcrb
xor
outsl
je
mov
mov
ds
inc
mov
pop
pop
adc
xchg
pop
cmpsb
arpl
clc
sbb
add
cwtl
cld
cmc
das
inc
out
imul
pop
jo
sub
sub
mov
in
insl
mov
cmp
sahf
cmpb
cmp
popf
inc
loope
adc
mov
pop
jmp
movl
shr
xchg
cld
xor
inc
mov
add
xorb
das
or
aaa
mov
jbe
clc
rolb
jecxz
push
lea
fxch
in
cld
pop
out
decl
aaa
repnz
aam
add
ret
adc
and
cmovg
test
das
shlb
stos
inc
xor
sub
xor
call
sbb
fisubs
fimuls
jl
addl
push
test
das
mov
sub
sub
roll
jbe
and
outsl
jne
push
mov
push
dec
cmp
ljmp
pop
xor
push
adc
or
lea
and
insb
xor
inc
subl
dec
mov
movsl
cmp
inc
push
enter
sub
push
in
mull
shlb
and
test
cld
jne
movsl
sub
out
lock
sarb
mov
jle
sub
cwtl
push
popa
cs
shrb
fistpll
xchg
dec
movsb
mov
mov
mul
out
repnz
mov
jne
mov
cli
bound
pop
movsl
stc
and
xchg
cmpsl
and
imul
pop
pop
shrb
sbb
jo
cmp
jb
jl
in
inc
add
xchg
sub
pop
xchg
pop
out
mov
insl
mov
insb
push
out
push
add
and
hlt
sbb
push
and
dec
inc
jbe
sbb
or
cmp
push
rcll
mov
aas
in
cmc
jno
pop
mov
mov
popa
cs
addb
pop
repnz
lcall
sbb
mov
add
adc
pop
sti
jl
adc
jnp
push
out
je
das
and
sub
scas
sub
lret
clc
xor
fcmove
hlt
inc
arpl
push
jns
adc
mov
inc
stc
push
push
out
mov
stos
xchg
data16
fnstsw
cli
inc
add
xchg
cmpsb
sbb
ss
insl
movsl
loop
outsb
inc
stos
fidivrs
sub
cs
xor
or
inc
xor
adc
aad
in
jns
cmc
dec
pusha
lds
or
mov
xchg
add
inc
sbb
sbbl
mov
in
sbb
out
mov
push
mov
test
or
or
xlat
jo
jo
xor
fstps
daa
jno
clc
push
mov
add
and
notl
sub
lcall
or
pop
pop
testl
arpl
les
fnstsw
aad
jae
out
mov
dec
and
pop
movsb
pop
inc
call
add
add
mov
data16
xchg
inc
in
mov
xlat
lock
jl
aaa
sbb
add
adc
dec
jbe
xchg
iret
inc
xchg
pushf
pop
loop
and
or
cmp
fcmovne
fiadds
pop
inc
shll
or
stos
adc
dec
fsubrl
lret
iret
js
xchg
push
cwtl
in
mov
dec
cmp
mov
cmpsb
adc
push
testl
fcomp
icebp
data16
pop
ja
or
xchg
dec
jmp
xchg
mov
inc
lret
jmp
mov
inc
push
ds
aam
aaa
or
jl
xchg
stc
push
sahf
aam
rcr
lods
jg
lret
jge
jno
cmp
scas
or
lea
sub
test
test
pop
xchg
xchg
call
inc
sub
adc
test
icebp
imulb
and
int
mov
pop
cli
popf
test
test
mov
push
pusha
cltd
jg
push
jmp
lret
out
cmp
into
shlb
pop
jno
inc
push
stc
sbb
pop
pop
mov
rorb
pop
fcos
and
push
stc
imul
sti
and
ljmp
or
mov
jmp
sub
pop
mov
sub
aaa
sgdtl
dec
and
push
add
pop
and
pop
repz
pusha
mov
fwait
cld
imul
xor
into
push
mov
stos
push
inc
jmp
xchg
mov
ds
fisubs
sub
test
movsb
jns
lods
enter
icebp
shll
das
push
adc
push
push
lds
and
incb
push
push
pusha
pop
outsb
testl
in
repz
cmc
popf
xchg
ror
imul
js
insl
ret
pop
subb
sub
out
ss
js
rol
or
sub
sub
insl
pop
adcl
pop
mov
inc
xor
je
and
jbe
xor
shrb
add
push
sbb
dec
dec
icebp
xor
cmpb
int
pop
jmp
adc
sbb
dec
adc
aaa
inc
inc
insl
outsl
add
lret
addb
xchg
imul
aaa
mov
jbe
or
pop
add
jb
add
lds
movsb
lret
mov
hlt
mov
repnz
js
push
fcmovne
pop
adc
mov
jmp
loope
xchg
add
inc
ss
sub
sub
push
imul
push
push
mov
push
push
gs
push
push
je
lcall
fwait
test
jb
adc
data16
ret
out
rorb
mov
iret
pop
mov
rcrb
lock
mov
push
mov
sub
xor
das
cmp
jmp
and
gs
cmp
call
fbstp
popf
orb
mov
add
cmp
mov
movsl
add
test
and
pop
pop
mov
push
getsec
or
and
xor
jb
ret
rcll
cmpsl
ss
test
pop
xchg
add
sub
fdivrs
pop
and
movsb
xchg
mov
inc
outsb
push
mov
cli
int
frstor
jnp
mov
in
loop
pusha
cmp
jae
scas
mov
test
add
popa
dec
sub
inc
mov
imul
leave
pop
sub
aas
cmp
leavew
xchg
jecxz
jbe,pn
aam
scas
push
pop
add
stos
jp
lahf
mov
icebp
imul
stos
mov
stos
sti
jmp
testb
filds
fiadds
lea
std
lahf
push
inc
or
or
xchg
lock
cld
xchg
insb
mov
xor
leave
ror
pop
adcl
scas
repnz
sub
pop
pop
cmp
aaa
leave
aad
loope
xchg
lcall
stos
inc
fstpt
call
out
fadds
jge
mov
pop
lock
aas
sub
cmpsl
jno
aas
in
cld
push
movsl
mov
dec
pop
bound
cmp
adc
mov
and
fsubl
into
xchg
mov
push
adcb
rcll
mov
insl
je
xchg
in
and
xchg
mov
xchg
fnstsw
shll
call
jns
loopne
ds
jg
sub
jno
ja
sti
jo
cmp
xor
pop
inc
shl
cmp
mov
add
xchg
dec
mov
cmp
or
adc
ffree
push
dec
pop
shlb
sbb
cmp
xchg
sbb
push
andl
movsl
pop
lock
and
adc
mov
outsb
cmpsl
int
jns
push
sbb
stc
fwait
dec
jnp
enter
push
xlat
pop
jle
test
addr16
mov
ficomps
imul
jl
sbb
and
fisubrl
cli
sub
pop
add
sbb
shl
pop
xchg
fwait
mov
jne
adc
ds
mov
fldenv
and
scas
ljmp
jg
std
sub
xchg
or
pop
jle
sbb
shr
scas
out
idivl
mov
mov
shlb
jge
fbld
test
ja
movsb
xchg
sahf
lea
cmp
adc
scas
push
jae
or
jb
adc
xlat
jmp
mov
cmpl
pop
negl
gs
xchg
imul
xchg
mov
enter
dec
inc
push
lods
aaa
stc
out
dec
xchg
mov
cmp
sub
xchg
inc
mov
mov
gs
fadds
or
jmp
and
mov
mov
or
fimuls
or
pop
sbb
enter
std
loop
clc
dec
rcrl
test
adc
sub
and
out
stos
outsl
lods
shrl
cld
xchg
mov
mov
adc
orl
xchg
push
fnstsw
dec
insb
into
or
and
sbb
dec
mov
jg
mov
aad
sahf
inc
mov
ss
fsubrs
lods
and
decl
mov
push
sti
test
sarb
adc
pop
daa
sub
repz
dec
mov
adc
rol
jae
xor
mov
dec
je
inc
movsb
lds
inc
jnp
pusha
mov
aas
repnz
mov
scas
test
sbbl
outsl
mov
add
cmp
cmp
cmp
xchg
mov
cmp
jg
jns
sub
daa
and
out
ja
push
mov
sti
mov
push
or
test
push
push
jb
lods
push
jae
inc
lods
jne
lea
xchg
pusha
add
lods
int
cmp
dec
and
xor
repz
shl
das
sub
mov
ret
mov
xchg
cmp
jne
les
or
or
push
std
xchg
mov
insl
push
cld
lods
jl
mov
bnd
jo
cs
shrl
xor
ss
arpl
fstps
int3
popf
js
lea
xor
int3
ljmp
push
popf
cmp
sarl
icebp
sub
inc
adc
sub
mov
inc
push
push
dec
mov
push
push
repz
popa
jp
cmc
jbe
jp
ds
popf
lcall
sub
enter
lods
xchg
mov
mov
adcb
cmp
sub
cmp
jmp
clc
jnp
xchg
setp
sbbl
ret
mov
in
leave
cmp
scas
mov
int3
andb
sbb
mov
mov
arpl
lcall
nop
sti
push
inc
fsubrp
or
les
ljmp
fcomps
std
sbb
mov
rcrl
lahf
jnp
out
mov
inc
fisttpll
cmp
jp
aaa
icebp
inc
sub
cltd
and
loop,pn
lods
mov
ror
xor
jp
clc
outsl
test
or
sbb
jg
test
dec
in
and
adc
xchg
mov
push
jbe
ret
cmp
test
jge
cmp
push
mov
int
push
outsb
aam
push
jg
xchg
xor
orb
mov
xchg
movl
xor
mov
jb
repz
jecxz
pop
mov
testl
push
adc
inc
xchg
pop
icebp
jl
ss
push
scas
pop
std
jmp
adc
iret
lock
inc
cmpl
mov
aad
push
movaps
push
pop
adc
add
and
int
push
mov
mov
add
leave
cld
sub
sub
or
data16
sub
mov
xchg
dec
cmp
mov
aaa
xchg
lahf
cli
dec
imul
imul
dec
xchg
fwait
imulb
aad
in
mov
pushf
cmc
data16
push
mov
daa
cwtl
jle
dec
lcall
pusha
sti
arpl
or
jnp
push
cmpsl
mov
cmp
ret
lods
cwtl
popa
call
cwtl
mov
pop
lods
adc
out
sub
daa
adc
mov
and
push
fcom
fsubrl
scas
loope
pop
roll
stc
loope
xor
icebp
les
push
inc
inc
ds
sbb
test
adc
and
aad
subb
inc
xlat
mov
sbb
or
sbbb
add
push
sahf
outsl
rorb
jne
mov
int
add
sarb
int
jle
push
cld
lcall
mov
cmp
or
inc
xor
and
addb
movsl
arpl
aas
push
pop
es
loope
stc
stos
shl
pop
rclb
push
jmp
xchg
pop
xor
pop
inc
das
pop
sbb
out
arpl
addr16
mov
sub
push
pop
adc
testb
and
mov
das
dec
lahf
insl
imul
lock
adc
dec
clc
sub
sbb
sbbb
aam
ficoml
adc
mov
mov
data16
repnz
enter
ljmp
fistl
adc
cwtl
xchg
adc
jae
adc
add
aad
fwait
inc
inc
mov
sbb
movsb
arpl
mov
sub
add
adc
xchg
cmpsb
mov
lds
popa
and
sub
arpl
stc
mov
dec
aad
or
mov
mov
add
in
or
sarl
sub
jnp
sbb
arpl
call
jmp
push
popa
jg
mov
lds
in
mov
jp
sbb
push
pop
xadd
sbb
loopne
mov
push
das
cmp
mov
xlat
sti
add
movsb
sti
inc
adc
sti
sub
or
dec
out
clc
push
loop
insb
jp
loope
sbbb
lods
mov
push
mov
mov
rorl
and
rolb
nop
push
push
cmc
inc
xchg
fwait
and
ret
frstor
inc
pop
and
js
sbb
fmulp
adc
popf
adc
fnsave
shlb
mov
inc
mov
das
cmc
outsl
dec
mov
mov
cld
push
adc
inc
jmp
movsb
mov
sub
lods
imul
or
xor
adc
pop
das
or
inc
out
scas
mov
out
jmp
mov
out
dec
leave
add
sub
out
mov
in
jp
jmp
sar
inc
divl
sub
popf
inc
cs
fldl
shll
cmpsl
jbe
nop
mov
adc
mov
sbb
in
lds
enter
pop
dec
mov
js
out
push
push
jmp
mov
in
jl
jns
add
faddl
outsb
mov
dec
mov
jae
test
dec
xchg
fdivrs
test
cmp
ss
mov
sub
mov
enter
fs
hlt
jns
xor
cwtl
call
loopne
lds
lcall
mov
mov
testl
lock
push
sbb
cwtl
inc
jae
sub
mov
mov
lds
dec
sarl
popf
clc
loope
mov
sbb
enter
test
fisubrl
inc
inc
lea
or
xchg
dec
dec
xchg
xor
mov
jae
iret
setle
pop
or
das
stos
out
ljmp
scas
fsubrs
mov
jb
data16
subb
insb
adc
or
sub
pop
sub
xchg
fidivrs
adc
enter
pop
mov
mov
jp
inc
push
lahf
loopne
outsb
daa
movsl
push
xor
ret
imul
push
test
loope
out
push
pop
xor
jge
pop
or
sbb
sarl
sub
daa
sub
dec
cmp
je
mov
adc
push
in
sub
les
cmpsl
les
xchg
js
notl
sub
das
call
test
cmp
adc
sti
mov
jmp
inc
sbb
mov
lods
call
mov
sbb
push
mov
cmp
arpl
pop
ret
aas
rclb
adc
push
push
adc
or
ds
and
mov
ret
sbb
mov
or
dec
shrb
fldl
xor
cli
frstor
mov
cmp
push
adc
aas
fimull
in
aad
fnstenv
je
mov
cld
out
sbb
fists
hlt
loope
mov
cmp
xlat
xchg
push
xor
add
and
lcall
xchg
insb
adcl
sarb
xchg
jae
imul
int3
or
enter
ljmp
dec
push
jbe
fidivrs
and
mov
jle
shll
push
pusha
fnsave
push
in
sbb
mov
dec
fidivrs
pop
mov
shr
pop
push
pop
int
cmp
call
inc
or
enter
mov
shll
pop
lret
mov
mov
movsl
push
pop
in
push
hlt
sbb
inc
cli
sti
cmp
inc
repnz
in
pusha
jge
push
je
cmp
shlb
ret
sarb
shlb
ret
ss
popl
cld
inc
imul
pop
cmp
ret
inc
nop
mov
xchg
dec
stos
fcmovnu
xor
cmp
outsb
dec
lret
lret
repnz
in
mov
les
or
inc
jecxz
mov
inc
and
cmpl
out
jno
sub
cli
push
aas
fsubr
in
shlb
mov
aad
or
pop
addr16
mov
pop
cltd
xor
dec
jl
jne
lods
das
cld
sub
lea
in
add
push
enter
sub
mov
aam
pop
fwait
xor
or
mov
push
cld
fcoml
fisttpl
mov
gs
mov
stc
mov
cmp
lock
and
jo
cli
fstl
mov
scas
lods
dec
pop
adc
pop
cld
in
test
mov
push
repz
pop
in
mov
out
out
pop
xchg
rol
jecxz
push
jg
lret
ss
mov
mov
cs
orb
je
mov
insb
popf
fadd
mov
xchg
add
fwait
rclb
es
mov
daa
add
xor
xchg
pop
adc
out
and
and
adc
jo
lods
cmp
arpl
es
bound
xchg
sbb
jnp
mov
movsb
jmp
int
sbb
lahf
ja
jp
pop
mov
inc
leave
jns
pop
repz
std
xor
icebp
mov
mov
add
and
es
xor
aaa
in
mov
add
adc
jmp
cmp
popa
mov
in
jmp
lea
int3
mov
sub
dec
cmc
fdivrs
mov
test
sbbl
sub
add
cwtl
loope
cltd
jmp
int3
insl
xchg
mov
add
add
and
add
sbb
adc
cmp
sahf
xchg
pusha
and
insl
jbe
inc
jns
imul
lcall
aas
mov
lock
or
mov
fs
cmpsb
push
iret
dec
sbb
adc
mov
jmp
rcll
sbb
add
shrb
leave
mov
aam
int
outsl
cwtl
shll
icebp
lret
or
rcl
arpl
cmc
mov
cs
sub
insl
add
xorl
hlt
in
jnp
out
sbb
ret
lret
xchg
jne
jg
movsl
inc
or
fucom
push
xor
mov
icebp
testl
pop
mov
out
leave
imul
test
cs
fldenv
imul
ljmp
inc
adc
sbb
adc
out
xchg
outsb
addl
mov
ds
or
rcrl
dec
into
adc
imul
sbb
mov
fsubrs
jecxz
inc
xchg
xchg
pop
cmp
mov
and
popa
mov
adc
and
sub
bound
ja
xchg
push
or
roll
sub
xchg
pop
into
adc
jae
jmp
mov
push
lcall
fsubs
shrb
push
fldl
adc
jp
inc
pop
fwait
push
push
cmp
fistps
test
inc
int
or
mulb
jb
out
rcll
ds
nop
test
dec
pushf
jge
pusha
adc
sti
es
js
xchg
jg
mov
adcl
imul
dec
xor
sub
je
mov
xlat
add
sub
lods
jp
cmp
popf
mov
push
out
jp
cmp
xchg
pop
aam
dec
adc
jno,pt
leave
push
stos
dec
das
out
cwtl
arpl
outsb
sbb
jg
mov
cld
mov
in
in
xor
out
popf
loope
mov
call
jmp
or
adc
jb
jbe
sub
push
mov
in
ds
mov
add
lcall
mov
sbb
lds
xchg
mov
mov
ds
lret
sbb
insl
mov
pop
fwait
jns
jecxz
stos
fnstsw
pop
loopne
jge
mov
mov
in
push
js
cmpsb
repz
decl
ss
mov
push
xchg
cmpsb
cmp
loop
sahf
movsb
jp
push
jle
xor
pop
js
mov
adc
pop
mov
xor
aam
cli
fs
jmp
push
test
in
daa
mov
xchg
push
test
ficoms
fsubrl
cmp
sbb
popa
das
les
mov
movsb
movsb
pop
imul
enter
fwait
lret
xchg
jl
cmp
push
jbe
cmc
mov
xor
or
xchg
adc
xchg
or
jo
cmp
ja
outsl
shlb
adc
ljmp
loop
mov
lcall
and
dec
iret
mov
mov
jae
mov
cli
mov
mov
push
repz
ret
xor
add
scas
and
cmc
and
loopne
cmp
jbe
es
jg
bswap
mov
in
cltd
adc
sbb
cmp
mov
mov
dec
xchg
push
xchg
out
notb
fcompl
je
orl
pushf
mov
pop
fildl
cs
loopne
dec
xchg
clc
dec
mov
mov
cmp
pop
mov
jle
add
push
mov
mov
cmp
jge
dec
fcmove
jne
arpl
cltd
fildl
loope
mov
xchg
or
cmp
iret
pop
in
inc
push
adc
adc
lock
xor
filds
pop
testb
push
jo
pop
das
fldenv
pushf
push
xor
adc
mov
jmp
jns
push
subb
mov
out
sub
call
and
mov
mov
cmp
add
push
lds
andl
mov
dec
fdivrs
adc
fwait
xor
sbb
adc
loop
std
inc
adc
xchg
cmp
mov
test
mov
in
hlt
mov
mov
mov
test
dec
lock
inc
push
xorb
jbe
scas
lret
xor
dec
fcmovbe
stos
adc
addb
push
pop
out
sbb
pop
enter
es
andl
pop
andl
lahf
lds
subb
adc
xchg
loope
inc
sbb
pop
xchg
adc
jmp
movsb
cmpsb
add
jbe
ds
subl
int3
xchg
leave
subb
les
test
punpcklwd
ja
in
push
add
push
cltd
incl
jnp
mov
repnz
out
fstpt
icebp
jne
imul
inc
xchg
mov
mov
adcl
pop
sbb
sub
outsb
into
sub
sbb
inc
xchg
test
cmp
pop
lcall
pop
add
push
mov
mov
je
fnstsw
ja
popa
lahf
xor
cmp
movsb
dec
or
je
sub
aam
sub
loope
mov
fsubs
jns
dec
sbb
hlt
xchg
out
inc
cmp
bound
jle
add
adc
gs
in
gs
das
bound
out
ret
cwtl
enter
shll
jb
loopne
mov
jp
sub
pop
outsb
xchg
jne
loopne
cmp
loop
cmp
arpl
aad
cmc
xchg
jl
sbb
jns
adc
fs
ret
inc
adc
add
jne
lcall
push
into
adc
mov
dec
insl
mov
fstpt
fwait
pop
and
push
and
enter
rcl
inc
mov
iret
in
add
sbb
dec
push
pop
frstor
je
or
xchg
pop
fcoms
jne
push
lods
lock
dec
fldcw
add
filds
adc
adc
lcall
xor
jbe
or
adc
jbe
adc
sub
aas
add
lret
pop
es
or
out
movsb
mov
xor
icebp
xchg
jmp
daa
insb
xchg
aad
pop
push
testl
adc
jnp
push
pop
and
xor
mov
push
sub
inc
movsb
int
push
cmp
mov
add
push
mov
xchg
sbb
adc
xchg
out
sbb
loopne
enter
mov
or
mov
std
mov
or
fldpi
adcl
push
xlat
mov
sub
inc
xor
leave
adc
arpl
rol
scas
mov
out
jo
fldl
mov
mov
leave
cs
fsub
dec
sahf
adc
call
inc
scas
fdivrs
push
jae
mov
and
sub
pop
lods
inc
xor
call
jne
xchg
stc
fnstenv
and
adc
push
repz
cmp
aaa
mov
rorb
jle
xchg
pop
in
mov
scas
dec
pop
aas
push
push
pop
sub
mov
inc
lret
aad
hlt
mov
call
mov
push
rcr
sub
fisubl
mov
and
cmpsb
into
dec
das
mov
fisttpl
add
in
in
adc
sahf
push
dec
mov
add
xor
mov
xchg
inc
pop
mov
push
mov
lahf
clc
cltd
mov
or
push
test
xor
mov
xchg
mov
mov
pop
adc
in
shl
imul
lcall
ret
mov
pop
lahf
lods
xchg
rcr
adc
in
cmp
mov
mov
push
int
sar
shl
dec
add
xchg
imul
mov
add
out
push
fnstsw
xor
ficomps
lods
cmpsl
lret
mov
xor
adc
lret
pushl
jns
aam
mov
xchg
outsl
dec
pop
adcb
push
cmp
add
hlt
cmp
mov
or
and
sbb
pop
xor
es
stc
pusha
sti
and
add
cwtl
or
out
add
xor
mov
sahf
ds
gs
hlt
jecxz
or
ret
or
inc
inc
dec
sub
aad
jmp
push
jbe
mov
push
outsl
mov
popf
jge
aaa
fsubs
movsb
clc
ss
jb
mov
addb
or
inc
int3
call
or
xchg
jle
inc
and
std
jecxz
imul
mov
add
movsl
mov
das
sub
dec
lahf
pop
int
jecxz
lret
xchg
ret
aad
and
nop
inc
inc
jg
cmp
sub
and
jge
adc
mov
std
add
aad
add
mov
jge
bound
in
and
xlat
lcall
lret
sbb
lods
ds
push
sbb
out
scas
arpl
cmp
mov
pushf
push
inc
mov
push
shlb
sti
mov
cld
jle
xchg
push
add
sbb
mov
movb
mov
imul
aas
loope
lret
test
cmp
rol
push
and
mov
push
push
rcrb
adc
test
fidivrs
pop
popf
nop
mov
push
mov
sbb
stos
jp
dec
subb
loop
pop
in
clc
iret
dec
lea
cmpsl
pop
ret
jge
pop
and
les
xorb
sbb
imul
in
jno
xchg
sub
rcrb
jl
pop
movsb
fs
or
mov
dec
xchg
in
or
inc
pusha
je
out
bound
mov
rorl
cmpsl
sub
dec
jge
test
xor
dec
inc
mov
xchg
lahf
and
sub
je
xchg
inc
je
repz
mov
adc
jecxz
scas
pop
outsl
inc
ljmp
std
std
jno
mov
push
andl
lcall
and
pop
rcl
push
jno
cmp
mov
lock
adc
add
stos
mov
les
cs
add
inc
cmp
rol
movsb
xchg
imul
mov
test
daa
xor
xor
mov
adc
mov
pop
mov
cmc
and
pop
jne
test
mov
rcll
lret
or
push
das
mov
sub
scas
pop
cmpsl
mov
xor
imul
mov
loopne
add
popf
fsubl
mov
or
je
test
or
cs
call
push
sbb
std
jns
dec
mov
and
mov
xchg
lods
in
gs
test
xor
test
into
jmp
fs
pop
fstpt
cmp
push
clc
leave
mov
mov
adc
jle
shrl
ja
enter
pop
ljmp
cmp
ds
mov
stos
or
fidivl
fstl
arpl
sub
push
in
mov
testb
jnp
xor
inc
mov
pop
cmpsb
jg
pop
gs
hlt
nop
ret
popa
xchg
mov
in
inc
mov
ja
and
dec
cmp
pop
cmp
loop
inc
shll
jp
fcompl
jb
loope
loopne
dec
stos
mov
rcrb
into
fucomp
shrl
mov
pop
imul
pop
mov
add
imul
out
cmc
or
inc
push
sbb
xchg
mov
pop
daa
inc
pop
icebp
fstps
cmp
mov
push
inc
add
mov
add
je
scas
fists
push
pusha
adc
or
jge
add
jns
aad
pop
icebp
mov
mov
test
dec
in
mov
jmp
pop
or
xor
jg
adc
push
popf
sbb
div
inc
jo
mov
inc
mov
lret
loope
in
mov
in
or
leave
and
jnp
rcll
dec
and
add
adc
js
loopne
out
fsts
cmpsb
pop
dec
call
inc
rcrl
add
out
sub
ds
inc
imulb
jl
fs
pushf
test
testb
stc
push
jge
fs
xor
add
test
jmp
call
je
sbbl
fsubs
out
xorl
popf
out
sub
or
mov
add
cmp
push
add
and
push
xchg
jl
pop
xchg
mov
adc
xor
sti
in
inc
cs
roll
movsl
jo
aam
cmp
mov
mov
push
mov
push
jmp
stc
dec
inc
sub
iret
fdivs
dec
out
cs
cltd
dec
mov
pop
inc
xor
cmpsb
lahf
mov
lds
or
sahf
jecxz
cmc
mov
les
mov
dec
push
popf
xlat
stos
pop
xchg
sbb
adc
cmpl
sbb
addr16
sahf
out
mov
out
mov
fwait
jo
inc
call
mov
pop
mov
emms
cmpsl
movsl
shufps
mov
cmpsl
pop
mov
push
jmp
xlat
jb
or
out
hlt
int
shll
mov
cmp
xchg
adcb
mov
jo
clc
repz
nop
in
insl
inc
test
jne
and
cmp
mov
jp
or
jne
xchg
pop
imul
or
fs
outsl
in
inc
rol
cmp
add
lret
jb
jg
adc
scas
mov
stc
jg
xor
sbb
pop
add
pop
iret
addr16
jle
dec
daa
ret
inc
inc
int
xchg
int
mov
ficomps
lret
lock
fstl
adc
lcall
pop
rcrl
sub
mov
push
call
lea
notb
dec
mov
inc
and
movsl
sbb
iret
jbe
push
mov
cmc
pop
pop
xchg
cmc
inc
jno
mov
xor
test
lds
pushf
jp
stos
cmp
nop
popa
jp
xor
pop
sarl
sbb
cmpsl
dec
add
inc
pop
popa
daa
in
pop
jnp
add
pop
and
push
ja
out
and
stc
adc
lock
aaa
mov
outsb
mov
mov
dec
dec
sub
fbld
lea
stos
scas
pop
push
add
fstl
test
adc
daa
cmp
adc
jmp
dec
enter
add
mov
gs
sbb
iret
mov
sub
cmp
mov
loop
gs
outsl
movsb
dec
fdivl
jno
popf
sbb
imul
aam
data16
sub
add
mov
jno
daa
sbb
not
sahf
and
hlt
hlt
inc
xlat
add
mov
mov
add
jo
mov
sub
mov
out
mov
iret
push
adc
xor
push
stos
jb
das
adc
loopne
sub
lret
xchg
push
xor
repz
jge
pop
aaa
aaa
pop
sbb
add
scas
sbb
add
inc
lock
adc
stos
adcb
shrl
out
fsubs
add
dec
mov
xor
cltd
push
in
jp
pop
push
fdivrp
inc
int3
test
xlat
cmp
jne
cmpsb
dec
xchg
adc
sub
aam
lcall
mov
sti
dec
pusha
and
add
mov
sub
call
frstor
xor
xchg
scas
and
push
xor
jmp
fwait
sbb
test
inc
pop
push
cmp
jno
rolb
add
xor
subb
in
adc
mull
adc
movsb
push
add
movb
imul
mov
adc
iret
sti
mov
jnp
lret
mov
lods
ret
push
ror
inc
gs
addb
in
gs
xchg
mov
in
mov
jns
sbb
mov
mov
movsl
adc
sbb
cmp
fs
testb
xchg
rorb
cmpsb
push
mov
jo
mov
adc
fs
setp
loopne
and
jp
es
push
jbe
pop
fimull
lods
cltd
std
lea
xor
in
ljmp
adc
rcrb
or
cltd
daa
mov
lcall
out
mov
dec
inc
sub
leave
ret
jb
ja
shrl
gs
xchg
out
or
jb
inc
sbb
jp
stc
cmc
push
lds
push
addr16
adc
mov
fst
mov
pusha
pop
jmp
or
sahf
dec
sarb
jne
lahf
sub
and
mov
jge
mov
lcall
jb
pop
js
adc
leave
cmp
icebp
mov
ja
xlat
mov
sbb
cmp
cld
xchg
rcrb
fxch
movsb
jge
mov
and
fbstp
cs
outsl
sbb
sbb
cmp
das
cs
xor
cmp
mov
mov
push
jl
iret
imull
test
jns
cwtl
fstpl
aad
in
rorb
inc
or
xor
scas
fcoml
mov
mov
xchg
xor
xor
adc
dec
imul
xor
jnp
pop
inc
sti
or
pop
aas
jbe
je
pop
sbb
ret
shrl
out
movsl
loope
enter
shll
out
dec
push
jecxz
ja
ja
ja
or
add
insl
adc
call
adc
xchg
push
lock
mov
cmpsl
ja
jp
ljmp
mov
xchg
test
mov
daa
cmp
ficoms
mov
xor
shlw
ds
jl
jns
scas
sbb
scas
inc
notb
adc
cmpsb
push
sbb
sub
push
sub
xorl
repz
je
cmc
lcall
adc
les
push
orb
nop
aas
inc
xor
xchg
xor
enter
mov
je
movsb
call
add
pop
idivb
int
pop
stos
out
mov
fdivrl
jae
es
pop
fs
mov
jp
and
xchg
mov
int3
sbb
mov
cltd
mov
lret
xchg
dec
cmp
mov
jae
mov
push
lret
jle
leave
inc
lods
ja
sub
mov
aaa
cmp
or
sbb
cmc
push
inc
dec
popa
rorb
lock
mov
pop
pop
cs
in
inc
das
hlt
sub
test
fmull
div
loop
dec
mov
add
repz
inc
out
or
cs
inc
lods
inc
push
iret
nop
cwtl
pusha
mov
roll
push
pop
sub
jns
in
push
jo
lods
sub
cmp
jae
mov
lock
cmp
pushf
adc
add
iret
add
cld
mov
adc
mov
xor
cltd
inc
pop
xor
xor
js
xchg
mov
add
or
cmpsb
cmpsb
and
adcb
enter
xor
cmpsl
or
ljmp
outsl
mov
rclb
jmp
mov
js
adc
jbe
push
ror
jo
sub
xor
shll
or
push
cmpsl
dec
mov
and
test
and
xchg
ljmp
adc
pusha
movsl
and
sbb
stos
insb
ficoml
cmp
adc
lea
add
mov
mov
sbb
jb
mov
sbb
push
mov
add
push
lea
jae
push
std
or
dec
sbb
je
int3
dec
test
pushf
negl
mov
xchg
and
pop
inc
adc
jb
mov
loop
lcall
into
fsubl
adc
aam
pop
jns
sub
pop
mov
sarb
enter
jbe
pop
pusha
jo
movsb
dec
jo
sub
sbb
sbb
es
pop
mov
sbb
cltd
sub
call
dec
dec
adc
xchg
scas
pop
lds
divb
or
xchg
movntps
pop
arpl
fstpt
fcmovne
cmpl
lods
jbe
bound
in
mov
and
xor
es
in
jo
lea
clc
push
popf
es
xchg
and
insb
jns
in
out
cli
xchg
mov
push
and
into
orb
and
jp
pop
xlat
jne
int
push
ror
dec
movsl
push
mov
dec
fcoms
or
adc
jo
cli
fldt
mov
movsl
das
int
int
or
push
sub
outsl
js
test
add
and
fiaddl
push
xchg
or
and
pop
push
nop
ret
push
repnz
jmp
sub
bound
es
mov
cmp
xchg
addb
dec
add
fucom
cmpsb
stos
ja
mov
mov
out
icebp
push
out
test
inc
movsb
lods
or
les
in
in
push
lds
sub
push
inc
ljmp
mov
or
mov
push
rcrb
mov
cli
sub
aam
add
in
pusha
xchg
push
or
lret
adc
movsl
sarl
adc
and
cmpsl
mov
arpl
mov
xor
jecxz
fucomip
xor
xchg
insl
aam
mov
lods
mov
out
lcall
rcl
mov
jo
dec
mov
mov
or
sbb
pushf
aaa
dec
lds
iret
cmp
jecxz
fnstsw
mov
jo
sub
js
mov
xorl
lds
jno
rclb
sarb
pop
xor
repnz
call
cmp
mov
pop
into
movsl
push
sahf
jg
pop
cmp
imul
sti
outsb
jg
cmpsb
pop
add
pop
jl
dec
push
add
sbb
ficoms
cltd
scas
push
fs
cmp
aad
xchg
ds
mov
lret
xlat
jmp
jb
push
mov
out
or
cmp
xchg
push
add
xlat
hlt
and
pop
dec
mov
pop
mov
cld
push
rorl
inc
in
daa
cmp
add
pop
repnz
pop
dec
and
cmp
xchg
mov
pop
mov
lds
aam
xor
jo
mov
fisubrs
adc
and
std
rclb
sub
in
xchg
xlat
adc
xlat
inc
dec
sarb
mov
pushf
mov
xor
or
imul
insl
inc
mov
rcll
adc
ret
enter
shl
shll
mov
pop
lahf
repz
jmp
pop
ljmp
sub
aaa
std
imul
incb
sub
cwtl
jmp
add
les
dec
lret
loope
lret
jno
inc
fiaddl
xchg
jmp
int
sub
out
mov
or
cmpsl
pop
stc
jns
scas
scas
dec
cwtl
jle
lret
insl
and
inc
mov
jnp
sub
and
add
sti
iret
pop
stos
mov
popa
mov
pushf
mov
popf
cli
cld
stos
lahf
or
push
insl
out
lret
cli
aaa
int3
lds
pop
jbe
xor
mov
push
push
mov
clc
push
push
popa
add
int
pop
iret
mov
aas
sbb
mov
fimuls
cmp
xchg
add
mov
pop
mov
sahf
adc
roll
lea
mov
jae
cs
in
ja
dec
mov
fsts
add
add
adc
or
push
xor
sbb
test
cmp
pop
inc
orb
xchg
hlt
xchg
xor
stos
mov
mov
sarl
addr16
mov
push
lods
dec
std
int3
jno
sbb
mov
add
cwtl
jmp
leave
xor
adc
inc
cli
mov
push
jmp
iret
push
push
xchg
insb
lcall
pop
cmpsb
mov
leave
inc
cli
jbe
cmp
xor
sub
xor
push
out
dec
mov
dec
gs
xor
xchg
push
fwait
or
fcomp
cmc
out
pop
xor
dec
sahf
lock
sbb
rcl
adc
xor
push
inc
mov
imul
scas
sbb
pop
call
in
mov
or
adc
gs
mov
jmp
arpl
adc
outsl
inc
xor
add
xlat
mov
mov
pop
pushf
subb
or
imul
push
fsub
pop
adc
jmp
lret
inc
lods
push
rcl
xchg
fsubl
mov
sub
icebp
aad
or
and
mov
sub
andb
aas
push
xor
sbb
in
jnp
add
add
jae
sbb
pop
cmp
pop
xlat
scas
push
pop
xchg
insl
mov
je
jnp
dec
outsl
les
loope
lock
ret
mov
enter
repz
lcall
popf
sti
push
in
cmpsl
lea
pop
cmp
stos
in
jnp
push
mulb
push
xor
mov
dec
pop
xchg
cmp
arpl
dec
sbb
jns
pushf
and
popa
and
pop
and
daa
popf
andb
inc
push
sbb
mov
adc
test
pop
cmpsb
sbb
pop
mov
adc
outsl
mov
sub
pop
mov
insb
xchg
cmp
or
xchg
fmull
mov
push
ljmp
cmp
xchg
popf
cmp
into
stc
mov
dec
cmpsl
sub
call
pop
rolb
xor
fistps
xchg
add
pop
shrl
sub
mov
jne
or
pop
sbb
and
adc
inc
dec
mov
mov
dec
leave
add
pop
imul
jmp
cld
pop
hlt
add
mov
inc
and
das
or
adc
sub
mov
cwtl
inc
andb
mov
cmp
ja
push
cmp
pushf
sbb
add
jb
outsl
pop
xor
inc
push
popf
sub
sbb
std
mov
das
mov
xchg
mov
dec
cmp
pop
mov
pushf
inc
stc
js
ficompl
repnz
add
adc
lods
sbbb
movsb
add
xchg
add
xchg
inc
jne
jl
and
clc
lret
ss
mov
mov
lahf
add
or
stos
stos
outsl
pop
nop
les
jo
and
mov
into
mov
cmp
out
mov
lcall
xchg
add
fistpll
inc
in
adc
add
mov
icebp
cmp
pop
push
cmpsb
jae
popf
push
fcompl
or
mov
insl
sbb
jo
sub
cltd
notl
push
cmp
dec
xchg
fidivs
repnz
cmp
dec
jb
cmpsb
ljmp
call
xlat
cld
jl
xchg
lock
sbb
das
nop
movsb
mov
lods
jp
pop
test
mov
incb
push
fwait
mov
je
test
and
ja
mov
loopne
das
in
mov
jmp
mov
sbb
and
add
inc
xchg
cltd
and
arpl
inc
mov
jecxz
sbb
cmc
sarl
jp
dec
jno
sub
lds
sbb
or
adc
push
cmp
fadd
cmpsb
lret
aas
mov
dec
out
mov
mov
stc
ljmp
fisubs
xchg
loope
insl
in
out
and
and
ljmp
xchg
jbe
scas
push
add
dec
cli
shlb
int
pop
adc
mov
in
fbld
jp
jae
mov
pop
rcr
idivb
add
mov
push
pop
lcall
jns
rol
gs
adc
cmp
clc
mov
orl
cmp
leave
jge
xchg
mov
loope
mov
add
rclb
inc
arpl
fimuls
adc
inc
lcall
dec
dec
xlat
dec
push
jno
jno
fiaddl
subl
mov
xchg
mov
pop
or
pop
lock
and
cmp
xor
push
sbb
insl
push
imul
insb
sub
add
out
shl
mov
repnz
push
loope
leave
cmc
add
int3
adc
imul
cmp
sub
push
push
addr16
ss
pop
xchg
dec
gs
fsubl
pop
mov
mov
ret
rclb
pop
pop
push
shll
int3
lods
xchg
fcoms
and
mov
xchg
mov
orb
and
lds
pop
mov
pop
jo
mov
roll
shr
mov
cmpsl
lods
jmp
mov
add
mov
in
clc
add
aad
fnsave
cld
mov
jo
ret
or
pushf
push
mov
movsb
mov
pop
repz
cwtl
stos
hlt
mov
adc
popf
int
sub
jg
xor
loopne
in
sbb
push
mov
mov
leave
loop
int
stos
sub
xchg
std
add
pop
cmpsb
call
cwtl
push
fldpi
imulb
sub
mov
pop
fadds
leave
jno
loopne
jb
cli
adc
rcrb
xchg
faddp
imul
enter
add
pop
cmp
adc
std
test
ds
dec
xorl
push
cmpb
cmp
push
add
test
andb
push
mov
rclb
loopne
mov
xor
fistpl
jg
sahf
add
repz
and
dec
testl
les
out
and
rorb
or
pushf
andb
jle
mov
mov
daa
fdivr
popfw
inc
jle
push
mov
pop
add
pop
xchg
repnz
sub
inc
inc
test
jo
loope
in
negl
stos
pop
jo
rclb
jae
or
imul
inc
rcl
testb
iret
push
js
into
mov
push
and
imul
xor
xchg
cmp
push
outsb
inc
adc
push
inc
ret
mov
dec
mov
or
out
loop
adc
pop
pop
in
notl
sarl
mov
test
dec
pusha
les
cmc
repz
rolb
je
mov
push
repz
ret
fcom
cmp
pop
mov
scas
js
and
mov
icebp
jo
xlat
sbb
scas
add
sub
xor
push
xchg
or
xor
cwtl
inc
nop
xor
insl
cld
sti
std
addr16
sti
jmp
cli
inc
sub
popf
je
es
xor
outsb
xchg
pop
push
lret
cmc
incl
loopne
dec
adc
hlt
ret
loopne
divl
push
js
or
loop
mov
mov
incl
fcoms
sub
add
fimull
movsb
jno
shlb
subl
lods
pop
jno
repnz
test
dec
sbb
data16
orl
cld
clc
ljmp
mov
loopne
or
mov
cld
lahf
insl
cmp
enter
pop
aam
flds
sbb
mov
and
sarb
and
in
out
add
inc
jge
sbb
into
xchg
std
sti
inc
mov
lahf
leave
pop
dec
jecxz
dec
cmp
clc
out
in
in
or
dec
out
push
cmp
cmp
movsl
cmp
pop
sub
xchg
or
xor
xor
orl
test
out
out
addb
into
jl
stos
pop
mov
push
mov
inc
add
mov
clc
sar
in
das
push
adc
stos
stc
popf
mov
aad
aad
in
ja
mov
jg
imul
mov
and
push
gs
jae
mov
pop
push
pop
jne
scas
add
repz
cmpb
loop
mov
cmpl
shl
mov
shll
push
xlat
jns
shlb
mov
add
add
daa
adc
les
add
and
adc
dec
xor
fnstsw
dec
gs
es
xchg
lods
test
stos
daa
sub
push
lahf
mov
into
iret
inc
mov
fimull
pusha
addr16
jb
fnstcw
inc
into
lret
push
mov
push
insl
pop
data16
push
cmp
or
mov
cmp
xchg
push
cmp
sbb
sub
mov
movsl
pop
enter
push
scas
insl
and
fbld
dec
rcrl
out
into
push
adc
cld
andl
jmp
xor
jecxz
movsl
int3
lahf
xor
cli
push
push
dec
and
mov
lods
test
mov
icebp
cs
adc
adc
inc
les
sbb
enter
inc
jecxz
xchg
sbb
into
push
lret
xchg
rolb
mov
out
in
adc
pop
movsl
das
sub
in
adc
ljmp
inc
rcrl
insb
cmp
fsubs
fidivrs
mov
mov
cmp
pop
inc
and
xchg
popa
nop
cs
in
or
fiaddl
rolb
cs
in
std
sbb
lock
mov
iret
mov
and
data16
push
sbb
sbb
mov
jbe
sti
adc
rolb
jp
pop
cmp
or
mov
ffree
pop
adc
mov
inc
sahf
repz
incl
shll
push
mov
mov
sbb
rorl
test
jae
xchg
incl
lcall
push
and
div
es
mov
add
leave
cmc
jle
mov
insb
xor
sub
subl
lcall
xor
jno
inc
imull
cld
push
jp
jbe
xor
out
rcrl
icebp
push
xor
xchg
adc
lret
sbb
lods
cmp
lcall
jge
arpl
pop
cmp
nop
jb
cmp
movsl
mov
sub
in
cmp
nop
in
ja
dec
add
mov
les
fwait
jbe
jns
cs
cmp
xchg
mov
sbb
in
mov
sbb
test
jp
int3
lea
repz
sub
push
bnd
daa
or
addr16
outsb
mov
cmc
and
dec
cmp
or
in
imul
aam
mov
ret
add
mov
jb
insl
fiadds
sbb
mov
clc
adc
icebp
loope
sbb
sbb
stos
or
cmpsl
jne
jmp
outsb
mov
movsl
inc
subb
call
lea
inc
addl
push
les
xchg
pop
outsl
jge
lahf
roll
int3
push
fldcw
inc
adcb
xchg
lret
sbb
loop
je
mov
pop
sbb
jo
cmp
inc
or
out
in
les
inc
lods
icebp
add
mov
and
testb
mov
out
adc
loope
lds
mov
sbb
aam
orb
inc
in
xchg
mov
cld
lcall
test
add
das
cmc
fst
sbb
sti
imul
in
mov
or
add
jns
hlt
mov
sub
fistpll
lahf
add
inc
add
jnp
pushw
push
popa
scas
adc
movb
sahf
out
add
add
loopne
xchg
test
cmp
int
cld
jne
out
je
cmc
mov
test
xchg
mov
dec
xor
mov
popf
inc
sub
pop
addr16
psubq
xchg
inc
push
inc
pop
dec
lock
sbb
daa
adcb
or
imul
mov
aaa
int3
or
loop
lcall
xchg
lcall
xor
add
jecxz,pn
mov
addl
out
icebp
xchg
pop
pop
rcl
mov
push
fcmovnu
maskmovq
testl
push
mull
inc
push
fs
push
mov
pop
or
cmc
inc
aam
add
fwait
or
out
cmp
sbb
mov
cmp
mov
xchg
arpl
xchg
jl
jg
test
pop
mov
pop
es
nop
test
int3
hlt
fstl
sbb
inc
insl
dec
out
outsl
mov
out
push
mov
xchg
pop
inc
mov
fcomp
xor
push
js
repz
movsb
aad
daa
adc
popf
scas
fimuls
into
dec
in
arpl
imul
cltd
clc
jecxz
and
sub
or
fwait
mov
sub
gs
pushl
adc
adc
jo
cli
and
or
or
sbb
sub
cmpsb
jmp
adc
lret
rcrl
arpl
cmpl
mov
lods
fs
int
pop
push
cmp
cmp
cmp
or
nop
fimuls
mov
inc
movsb
fs
push
inc
cmp
push
push
insb
dec
and
test
jmp
xor
fcoms
stc
mov
stc
imul
sti
inc
inc
loop
lods
jnp
and
dec
cli
orb
xor
push
repnz
fldt
jp
shl
in
jmp
pop
sub
out
xchg
jae
mov
mov
leave
inc
and
push
in
push
cli
incl
push
cmp
or
and
mov
aam
outsb
je
add
or
out
daa
insl
adc
int3
movsl
shll
or
add
cmp
xor
fwait
xchg
sbb
push
fisttpl
dec
fs
and
mov
aam
cmp
mov
fidivl
xorl
push
push
pop
shll
jno
addr16
fiaddl
xor
sub
pop
lret
or
sub
jbe
push
mov
jns
repz
cmp
mov
pop
arpl
mov
popl
ficompl
loope
push
pop
fidivrl
jge
ror
xlat
xor
int3
add
fcmovnbe
sti
or
nop
incb
lods
decl
xor
daa
xor
inc
mov
gs
rcl
add
cmpsl
mov
mov
push
mov
lcall
and
pop
mov
insb
imul
ja
pop
insl
push
pusha
loop
jg
jmp
push
xchg
cwtl
sarl
test
pop
add
rorl
adc
ret
jmp
pop
scas
sbb
xor
sbb
insb
lcall
popf
mov
loop
int3
cmp
lds
enter
adc
inc
sbb
pop
insl
mov
cmp
xchg
xchg
ljmp
sbbb
dec
jmp
cmpsb
push
adc
pop
les
mov
pop
outsb
push
mov
jp
fwait
mov
pop
jg
mov
stc
adc
outsb
mov
cld
push
js
sbb
cmpb
mov
pop
and
jo
push
push
sub
lods
cwtl
test
inc
mov
mov
cs
hlt
pop
test
dec
clc
jo
lcall
push
add
iret
je
mov
arpl
and
ss
loopne
mov
inc
sub
sub
jle
inc
jbe
inc
mov
cs
cld
xsave
xorb
add
roll
insl
pop
fwait
add
bound
xor
inc
ja
push
xchg
js
pusha
pop
leave
mov
aaa
popl
and
jnp
addr16
rolb
dec
lods
or
xor
and
inc
lret
fs
jmp
insl
cmp
cmp
aaa
or
dec
sub
aas
enter
gs
and
ljmp
mov
cmpsl
aaa
pusha
lcall
test
in
movsb
sti
adc
das
mov
loopne
movsl
loope
out
aad
sbb
lret
pop
mov
nop
daa
outsl
popf
dec
dec
push
sti
into
push
ja
xor
xchg
jl
cmp
stc
adc
jle
mov
jns
ja
notb
inc
dec
into
inc
and
outsb
int
add
fdivrl
inc
movsl
cmp
xor
adc
mov
cmpsb
movsl
fists
sub
aaa
ss
in
xor
inc
and
loopne
inc
xchg
addr16
cld
sub
outsb
fst
add
fcoms
mov
add
rcl
loope
shlb
inc
dec
subl
inc
push
mov
in
ja
dec
pop
out
pushf
mul
imul
xchg
push
mov
xchg
and
icebp
inc
jle
lock
mov
dec
fstl
iret
aad
lea
js
pop
ficomps
ja
push
xchg
popa
sahf
mov
sbb
aaa
fwait
loopne
cmp
clc
rol
fstps
push
aam
lahf
jg
push
ljmp
shrl
push
sbb
inc
sub
jl
cmpsb
add
mov
aad
xchg
or
lods
movsb
lods
outsl
lret
cmp
inc
push
daa
icebp
fldenv
adcb
cmpsl
xchg
outsb
jge
pop
mov
jb
fcmovnb
and
xchg
dec
enter
sbb
xor
or
fstpl
into
cmp
add
cld
cmp
mov
out
sbb
iret
fsubl
sbb
xchg
jecxz
daa
repz
pop
mov
mov
aam
inc
add
mov
jae
mov
pop
test
rcl
inc
out
js
out
inc
pop
adc
fwait
lock
add
mov
mov
imul
inc
pop
std
xchg
cmp
test
push
fiaddl
sti
pop
and
loop
cmp
adc
push
lock
les
mov
mov
add
xchg
ljmp
xchg
jmp
and
gs
inc
adc
push
icebp
out
mov
pop
stc
jecxz
xchg
or
push
sbb
dec
out
stos
rolb
jo
and
addr16
dec
mov
push
xchg
adc
test
cmc
lock
sub
fwait
pusha
mov
xchg
pop
inc
inc
movsl
pop
divl
add
iret
scas
lret
cs
pop
mov
out
xchg
jne
loopne
jge
decb
xchg
xchg
mov
jno
sbb
cmpsb
insl
pop
and
pop
popf
dec
cmp
xor
add
inc
daa
jne
fldenv
push
repz
pusha
xchg
mov
fisubrs
push
cmp
lcall
sub
mov
add
loopne
shll
and
push
inc
insl
xor
mov
cld
and
xor
mov
adc
cli
out
idivb
das
pop
and
shl
adc
mov
push
dec
and
movsb
shll
inc
and
push
nop
faddp
mov
decb
pop
mov
hlt
cmpsl
andl
mov
lret
lret
xor
mov
sub
sarl
cwtl
enter
addr16
jae
jp
test
add
clc
mov
pop
xchg
sbb
lds
adc
cmp
dec
data16
xchg
fnstcw
out
or
aas
cmp
or
sbb
cmc
adc
or
mov
ret
mov
test
gs
sub
xor
dec
bound
adc
adc
xchg
imul
lods
dec
imul
push
xchg
lahf
jae
adc
fstl
push
push
or
in
pop
fnstcw
je
cmp
cmp
cmpsl
ljmp
ds
pop
add
jno,pt
cmc
pop
pop
mov
adc
inc
jg
pop
out
mov
sarl
jns
dec
ss
out
inc
enter
fsubrl
call
xchg
xor
ret
jnp
push
xchg
ret
insl
pushf
cmp
addr16
sti
xor
sahf
xor
fcoml
inc
loope
inc
ja
scas
popa
mov
push
sbb
outsl
xor
xor
jge
mov
adc
aas
mov
leave
imul
sub
popl
dec
cmp
lret
dec
fistl
out
cs
rolb
in
aas
arpl
adc
pop
sbb
out
arpl
xor
rcrl
insl
add
fs
cltd
test
clc
fcmove
cs
mov
test
dec
sbb
push
stc
std
jnp
cmp
inc
test
hlt
pop
cmc
dec
mov
mov
mov
mov
push
inc
ds
pop
imul
cmp
and
inc
or
mov
fidivrl
lds
cmp
push
cld
sub
jmp
adc
bound
shlb
xchg
xlat
fldl
leave
mov
out
inc
sbb
daa
scas
cmp
loopne
movb
sub
test
or
xor
sahf
mov
dec
nop
mov
xor
xor
js
inc
adc
inc
pusha
xchg
clc
sbb
and
fiadds
repnz
fsts
push
sarl
lds
inc
add
mov
jge
and
xchg
pop
push
fnsave
lret
sarl
out
into
outsl
jne
jb
outsb
fldenv
sbb
jnp
add
cli
xchg
das
leave
adc
outsl
pusha
inc
xor
in
sbb
xor
pop
and
iret
adc
pop
sub
lods
sti
out
jo
or
ret
mov
aam
ds
pushf
pop
lret
cld
icebp
stc
imul
je
stos
andl
add
fisubs
lods
cmc
dec
inc
inc
jp
xor
sbb
fmull
cmp
dec
sbb
sub
push
mov
xor
insb
push
repz
test
shl
stos
imul
add
adc
cmp
mov
test
mov
adc
xchg
add
idiv
loopne
je
sahf
fiaddl
popa
cmpsl
sbb
idivb
mov
fstpt
fimull
in
jns
addr16
push
repz
push
adc
cltd
adc
jbe
mov
cli
bound
jo
xor
xchg
mov
sbb
pop
push
push
mul
xor
sbb
rclb
dec
rorb
mov
mov
out
mov
lods
push
mov
push
lods
iret
aam
inc
in
clc
imul
xchg
pop
stos
push
insl
add
inc
pop
and
pop
jne
mov
nop
sub
stos
inc
jns
xchg
cwtl
into
pusha
or
aaa
dec
xorb
xor
xchg
sub
es
into
mov
mov
push
cmpsb
aad
stos
lea
jo
jge
out
lcall
mov
call
cmp
add
add
sub
loop
mov
aas
loopnew
jns
iret
lds
inc
xchg
stos
adc
push
pop
addr16
lret
cmp
cli
mov
inc
shll
adc
iret
inc
popa
aas
xchg
cmp
out
sbb
mov
cld
mov
inc
dec
add
xchg
subl
fwait
mov
out
mov
or
xchg
push
adc
adcl
call
cli
mov
test
pushf
nop
and
rorl
ret
xchg
inc
cmc
push
adc
ja
js
pop
sub
push
inc
cmpsl
cltd
cmp
addr16
in
dec
fsubs
adc
leave
push
cmp
cmp
sbb
popa
stos
cltd
pop
push
mov
rolb
pop
xor
sahf
or
mov
add
ret
push
xchg
outsl
movsb
sbbl
mov
inc
mov
out
fs
incb
sar
jae
loope
xor
jmp
repnz
mov
scas
cmp
clc
pop
or
mov
mov
mov
xor
int3
push
out
jmp
mov
ljmp
cltd
cmp
pop
call
data16
lret
sub
iret
adc
sbb
add
repnz
jae
test
cmp
pop
into
cmpsb
cmp
into
jno
inc
fwait
and
sbb
out
push
sub
inc
sbb
lahf
pushf
daa
push
test
jo
inc
sbb
pop
je
sub
adc
bound
orb
adc
pop
push
mov
ss
pop
mov
popf
sarl
sar
dec
xchg
cmp
push
nop
cmc
cs
and
or
sub
adc
nop
js
pushf
nop
xchg
or
lock
jnp
mov
test
xchg
push
push
cmc
insl
pop
mov
jns
xor
in
cmpsl
cld
jmp
imul
xchg
pop
rolb
add
test
pop
dec
pop
pop
sbb
push
pop
sbb
imul
fxch
orl
push
test
xchg
adc
js
aaa
std
fimuls
pop
aas
repnz
jg
lods
ja
push
mov
fs
or
les
loopne
mov
mov
add
cwtl
or
inc
push
mov
loopne
mov
adc
mov
and
rcrl
push
jns
sbb
sub
dec
dec
mov
daa
push
iret
sbb
imulb
xchg
and
add
mov
xchg
dec
mov
arpl
std
adc
outsl
popf
and
push
es
in
sbb
cmp
fadds
call
sar
gs
divb
nop
out
cmp
mov
jns
sti
or
xchg
mov
push
ja
lahf
dec
mov
aam
imul
fiaddl
ret
mov
int3
cltd
add
rcrb
inc
push
pop
movsl
popf
or
xor
cmp
dec
sahf
jl
inc
dec
outsb
push
sahf
enter
cltd
mov
ds
cltd
push
fdivp
add
jmp
movsl
jnp
lods
outsl
addr16
into
les
mov
sbb
lea
add
out
gs
mov
adc
adc
loope
mov
mov
andl
outsl
add
sbb
scas
dec
mov
inc
fbstp
addb
add
and
leave
push
or
xchg
mov
sbb
cmpsl
mov
pop
mov
in
mov
jmp
stos
cmp
or
adc
sub
repz
pop
xor
lock
in
xor
add
cmpsb
xchg
mov
testl
movsl
fldcw
dec
adc
dec
mov
jmp
fsub
mov
push
mov
inc
adc
adc
mov
mov
adc
sub
push
inc
xchg
loopne
push
ljmp
mov
sub
mov
cmpsb
pop
fnstenv
cld
jmp
jo
pop
mov
ret
jmp
rol
shlb
pop
rcll
hlt
iret
stos
pop
imull
ret
andl
inc
mov
imul
mov
insb
fs
add
repz
fwait
and
ljmp
cmpsb
ret
jbe
push
pop
dec
dec
xor
mov
inc
insb
mov
cltd
int3
xchg
cmc
insb
add
in
lock
mov
add
aam
pop
cmc
cmp
sbb
push
xchg
or
mov
aam
push
jecxz
loope
fldcw
test
push
out
pop
sbb
cmp
adcl
fdivl
loope
pop
stos
mov
fmuls
and
inc
call
ds
mov
xor
and
ret
aam
cmc
dec
pop
movswl
jmp
nop
xor
pop
jb
mov
mov
jns
out
mov
stos
jecxz
adc
adc
mov
xchg
fdivs
add
sub
jmp
mov
adc
std
xchg
int3
dec
ja
rcrb
xchg
mov
sahf
mov
imul
aam
cmpl
dec
mov
push
mov
add
pop
fpatan
xor
push
jmp
pop
insl
stos
push
inc
adc
ljmp
push
cmp
das
cmpsl
jno
out
test
and
xor
mov
sub
xchg
pop
roll
ret
or
dec
add
lret
mov
outsl
rcrb
xlat
jecxz
testl
loope
lret
fsubs
inc
int
mov
push
cmp
xchg
sarb
mov
xor
icebp
jbe
jo
cmp
rorb
dec
faddl
mov
xor
inc
stos
sub
xchg
mov
add
cmpsl
inc
repz
outsb
and
cmp
inc
adc
pushf
hlt
xchg
scas
repz
mov
sbb
mov
add
shll
dec
jl
lock
fldcw
rcrb
lods
jecxz
cmp
mov
aam
inc
push
adc
orb
rorl
dec
jg
adcl
jns
pusha
das
jnp
mov
gs
jne
or
scas
jno
test
dec
es
mov
dec
aam
daa
cwtl
xchg
adc
jns
repz
mov
lock
push
xchg
push
out
sbb
and
sbb
sahf
jge
jns
adc
xchg
inc
cli
mov
jb
jl
gs
pop
pop
push
pop
pop
daa
fnstenv
int
fnstcw
push
xor
les
push
test
xor
mov
sbb
pop
and
sbb
ljmp
sub
arpl
sti
cmp
adc
rcr
adc
dec
aaa
push
mov
fbstp
push
pop
lahf
pop
insl
add
scas
xchg
sahf
out
add
mov
das
mov
es
rcrl
mov
imul
or
or
gs
repnz
clc
rorl
xor
popf
leave
pop
adcl
das
mov
and
sub
dec
sub
add
jbe
mov
push
adc
repz
in
fimull
out
mov
sbb
insl
sub
hlt
test
hlt
push
mov
lods
jp
push
mov
aas
inc
cltd
push
push
mov
out
mov
cmp
mov
pop
hlt
aas
push
rcr
test
or
mov
sarl
leave
adc
jae
adc
push
push
loopne
push
mov
and
int3
inc
mov
test
gs
aad
lahf
jbe
xor
inc
inc
js
cld
mov
inc
loopne
fwait
xor
gs
fistl
clc
sti
imul
cmpsb
and
add
jo
fnstsw
cmp
in
sbb
outsb
lcall
fwait
popf
imul
fldenv
pop
sbb
das
cmp
pop
mov
lods
outsl
xchg
dec
or
mov
inc
in
mov
xchg
ljmp
add
mov
pushf
js
fsubp
sti
dec
cmp
call
jns
push
pop
sahf
lcall
or
push
xlat
mov
enter
mov
jl
int3
jecxz
daa
xchg
sub
fwait
insl
pop
fcmovnbe
mov
sbb
das
xor
ss
adc
lds
sub
movb
mov
je
jmp
or
into
sbb
lock
mov
mov
adc
outsl
ds
push
leave
dec
mov
addl
jmp
cld
loope
mov
stos
sbb
pop
aad
adc
xchg
sbb
jnp
fldl
inc
cltd
rcrl
out
sub
nop
pop
int
inc
outsl
or
movsb
test
and
mov
movsl
mov
add
cmpl
test
iret
xchg
lods
xchg
adc
sub
sub
testl
cmp
xor
cmp
fmuls
add
jl
dec
std
or
mov
push
xchg
mov
fistpll
xchg
jl
std
int3
lahf
loop
insb
sub
std
push
lds
lea
ljmp
sbb
rcl
js
xchg
sti
mov
shlb
dec
jbe
fsubrs
iret
mov
push
js
shrb
mov
adc
xchg
daa
lcall
xor
in
push
xor
push
imul
mov
cmp
in
xor
pop
bound
adc
inc
scas
inc
loopne
clc
lcall
das
sub
sub
out
scas
pop
add
cmp
jp
push
adc
shlb
sahf
aas
jle
sub
xchg
dec
adc
mov
fwait
lret
dec
adc
sub
jmp
inc
and
testb
icebp
dec
aaa
xor
test
bound
adc
enter
mov
testb
sub
push
in
fdivs
sbb
int3
push
in
insl
and
adc
xchg
sub
bound
inc
ja
dec
sbb
out
push
pop
inc
addr16
cmp
cli
cmp
out
xchg
lea
push
and
js
push
add
jae
out
loopne
cmp
in
aam
mov
or
or
rclb
repz
popf
xchg
popf
or
xchg
jno
data16
fs
dec
xchg
nop
ret
fdivrp
cmovg
addr16
lahf
mov
mov
mov
mov
imul
in
shlb
sbb
testl
xchg
loop
ret
mov
add
sbb
mov
sbb
pop
mov
sub
adc
je
pop
push
ffree
or
aas
arpl
xchg
es
clc
mov
mov
pop
mov
push
pop
xchg
les
and
push
insl
insl
dec
icebp
ljmp
jns
cmpl
cmpsl
sbb
cmp
pop
push
xchg
xor
je
jmp
jp
insl
cmp
sbb
rorb
cs
xchg
sub
and
gs
adc
mov
cmpsl
sub
aas
mov
xchg
in
xor
jl
xchg
adc
mov
rolb
cmp
cmpsb
cmp
pop
jns
mov
xchg
in
mov
pop
or
sub
xor
jl
test
add
imul
ret
add
in
rorb
pop
pop
mov
std
cmp
cmp
inc
ss
mov
std
jbe
out
adc
pop
ret
stos
stos
mov
adc
adc
jbe
subb
shlb
xor
jbe
sbb
xchg
or
sub
push
xchg
mov
sbb
push
jb
mov
mov
decl
or
cli
loopne
lea
xor
cs
or
mov
cltd
sub
and
pop
or
jae
dec
insb
or
jo
mov
ljmp
jns
or
in
loopne
shl
lcall
std
mov
fisubrs
xchg
add
mov
aam
shr
fsubrl
bound
mov
aaa
ds
ss
daa
arpl
xchg
jnp
and
xchg
xchg
inc
out
mov
or
pusha
popa
notb
and
jno
mov
pop
xor
inc
in
imul
xchg
sub
and
outsl
or
in
inc
xor
push
enter
mov
dec
sub
xor
iret
mov
mov
push
mov
aad
cmpb
testb
push
repnz
mov
dec
add
dec
movl
jb
leave
mov
mov
popf
andl
xor
ljmp
mov
cmpsl
inc
data16
or
sbb
xlat
adc
xor
push
sbb
hlt
xchg
bound
jmp
movsb
les
stos
jmp
inc
push
add
mov
xor
inc
repnz
jp
jae
in
stos
rcrb
pop
cmp
fcoms
push
mov
jno
mov
jg
mov
lock
pop
sub
or
mov
fwait
mov
mov
cmp
jbe
jne
pop
aad
aam
adc
mov
ss
mov
dec
std
cmp
jb
xor
adc
out
mov
fcmovne
fwait
xchg
lods
fstpl
sbb
sbb
dec
fildll
dec
pop
fcmovb
loop
sbb
dec
mov
adc
cwtl
arpl
jge
inc
or
lock
sbb
lods
faddl
pop
dec
outsb
pop
cmpsl
mov
stos
pop
daa
ffree
int
in
aas
adc
and
adc
imul
loop,pn
and
sbbl
cltd
inc
xchg
stos
cld
mov
test
xchg
pop
mov
test
rcll
dec
push
sbb
stc
fsubrs
addb
sub
jp
test
insb
cmp
rcrb
imul
stos
dec
xchg
das
xor
in
scas
pop
xchg
jg
push
jns
std
je
sub
insl
iret
cmp
jb
pop
sub
cmpsl
mov
call
icebp
shrb
das
cmpsb
adc
ss
push
mov
mov
adc
mov
loop
clc
ret
adc
xchg
pop
add
fimuls
mov
jbe
sbb
pop
lret
jge
int
ds
adc
divl
scas
stc
or
mov
les
pop
push
int3
int3
push
mov
pop
or
jmp
mov
out
shrl
or
lea
sub
xor
clc
add
popa
fs
loopne
and
in
pop
cmpsb
outsb
mov
outsl
push
sub
lret
fs
cwtl
push
gs
ret
xchg
loope
js
adc
int3
clc
push
xchg
loopne
inc
xor
xorb
je
dec
adc
mov
fldl
rcr
inc
loopne
cmp
jno
bnd
xchg
orb
subb
jae
pop
xor
repz
and
or
or
xacquire
ja
popf
lock
daa
pop
jno
icebp
insb
inc
sbb
jbe
or
mov
mov
cltd
inc
outsl
cli
sbb
cld
sbb
jge
lock
mov
and
mov
and
mov
cli
ja
rorl
cmp
cwtl
xchg
call
jle
test
sbb
xor
xchg
inc
out
mov
out
js
or
dec
push
push
mov
imul
mov
or
or
out
fs
add
jbe
and
add
bound
aaa
push
sbb
enter
into
in
pop
enter
int
js
lds
xchg
test
leave
test
fmuls
sbb
or
in
das
es
cwtl
push
push
xor
mov
mov
pop
pop
ljmp
adc
push
sub
inc
fildll
jle
xor
fisttpll
mov
xchg
dec
fbstp
cmp
jae
mov
sbb
cmpsl
lods
or
pop
jo
xchg
adc
gs
lds
clc
in
rorb
mov
pop
xlat
clc
addr16
or
mov
std
inc
loopne
aaa
cwtl
jecxz
mov
dec
movsl
adc
fildll
out
mov
dec
jns
inc
jo
mov
dec
xchg
xor
push
mov
incl
dec
pop
cwtl
movsl
leave
xchg
daa
mov
out
stos
pop
mov
and
ljmp
fs
cltd
addr16
pop
ret
out
pop
xor
jge
fdivrl
sbb
or
mov
cmp
sbb
adc
out
sahf
loopne
enter
cs
sub
mov
sar
and
aam
inc
lcall
sbb
sar
dec
repz
test
insb
bound
cmp
and
ds
dec
pop
adc
mov
mov
add
addr16
push
mov
fcompl
pusha
mov
xor
nop
ret
and
sti
dec
out
sbb
push
sub
xor
incb
cmp
aad
in
push
push
xchg
jecxz
test
jo
dec
jmp
decl
movsb
adc
data16
ds
sti
push
cwtl
sub
cli
imul
cmp
pop
cmp
pop
test
adc
sti
rorl
jns
lahf
xor
ja
out
add
mov
jmp
int
add
pop
sahf
push
push
mov
jmp
ret
sti
sbb
sbb
xor
lea
sbb
or
sbb
xor
loopne
das
fiaddl
lcall
roll
mov
call
dec
nop
dec
ja
aam
int
xchg
sbb
enter
jl
sub
adc
mov
add
mov
sbb
repnz
pop
loope
pusha
adc
lret
xchg
jl
jmp
jne
cltd
loop
inc
sub
das
dec
dec
mov
fsubl
dec
jb
test
adc
add
int
lret
loopne
movsl
nopl
orl
jmp
dec
jnp
inc
dec
or
repnz
mov
mov
bswap
fwait
push
cmpsb
jae
outsb
pop
pop
aam
cmp
pop
mov
out
add
mov
jb
or
sbb
arpl
mov
in
mov
add
mov
xor
lea
inc
cmc
mov
lds
pop
dec
shr
gs
pop
data16
jnp
mov
stos
fisubl
pop
dec
mov
push
ret
ds
decl
lret
cmp
push
adc
cmp
mov
mov
xor
xor
mov
int
lock
mov
jl
add
aaa
xchg
dec
sub
leave
fcoms
and
inc
daa
lret
repz
and
out
adc
lea
hlt
scas
dec
cmp
rcll
in
pusha
push
push
mov
mov
cmp
ret
pop
jle
xor
idivl
adc
fcomps
fimuls
sub
cmp
cmp
lock
into
xchg
and
addb
sub
mov
enter
inc
and
push
std
push
xor
mov
es
cmp
aaa
xchg
rclb
and
mov
jmp
subl
sub
cmp
jge
movsl
lcall
outsl
dec
pop
test
ret
subl
xchg
lock
stos
xchg
sbbl
mov
mov
inc
out
lds
xchg
fstl
jae
enter
jg
xchg
test
int3
sarl
jl
jg
add
call
rcrb
xor
sbb
pop
cmp
loope
add
fisubs
fwait
xor
pop
cmp
jp
sub
icebp
and
mov
imul
enter
incb
xchg
xor
fldl
push
push
outsl
jmp
inc
outsb
leave
outsb
or
fwait
add
push
add
adc
ja,pn
mov
in
mov
add
outsb
push
sbb
loopne
xchg
jo
shlb
dec
nop
cmp
scas
movsb
pop
fsubl
mov
xchg
cmp
sub
cmc
shlb
fwait
mov
or
cmp
fmuls
inc
pop
lods
mov
lods
sbb
mov
rcrl
je
out
jne
adc
mov
xchg
xchg
xor
xor
jb
mov
dec
jecxz
in
dec
subb
mov
addl
out
add
or
pop
dec
cmp
clc
pushf
push
loop
mov
fcmovne
inc
mov
mov
or
sbb
cmp
push
jl
fstl
popa
sub
daa
dec
sti
cld
sbb
mov
popf
xchg
mov
jno
shlb
inc
sub
loope
mov
fs
cs
bound
out
push
in
movsb
cltd
and
sbb
pushf
mov
dec
dec
dec
aas
shlb
pop
push
inc
push
out
int
xchg
push
lcall
pop
call
or
sub
dec
cmpsl
dec
fwait
lcall
outsb
dec
adc
cltd
mov
or
sub
sbb
leave
inc
xlat
dec
dec
lds
mov
cmc
xor
jecxz
popf
rcrb
adc
mov
imul
cmpsl
adc
cmp
out
call
filds
adc
or
xlat
push
jl
shrd
negl
dec
sbb
mov
outsb
xor
lar
cwtl
xor
lcall
inc
fldcw
out
mov
push
mov
scas
fisubl
sub
movsl
inc
fldt
outsb
rolb
call
sti
jae
ss
int3
repz
cmpsl
pop
add
sahf
ljmp
cmp
ficompl
fs
call
and
inc
mov
jns
or
lock
out
pop
out
pop
fimull
mov
add
andl
sub
inc
loop
popl
push
icebp
lods
test
out
cmp
and
pop
xor
psubsb
or
lret
push
pop
out
fildll
xchg
nop
dec
outsb
mov
ret
inc
stos
xor
pop
fsubs
test
pop
sub
or
daa
stc
fwait
pop
aas
jecxz,pn
add
test
sub
shlb
push
cmpb
cmp
jno
inc
push
or
or
jge
int3
in
pop
sbb
dec
sbb
sub
das
fs
mov
pushf
lea
outsl
dec
je
stc
mov
xlat
mov
hlt
das
fistpll
cltd
dec
pushl
or
cmp
sbb
and
lock
jl
jmp
sahf
pop
push
test
lret
sbb
add
jo
sub
cmp
mov
lods
pop
xchg
repz
jl
jnp
jle
fsubrl
stos
inc
push
xchg
jae
in
scas
push
ss
sub
jl
scas
ljmp
loop
cmp
lret
in
push
or
loopne
add
sub
jmp
push
ds
lods
pop
int
sbb
aaa
je
mov
push
repnz
les
sbb
je
pushf
cltd
xchg
add
push
xor
pop
mov
imul
push
sbb
out
mov
ffreep
pop
jno
mov
xchg
enter
rcl
icebp
movsl
mov
addl
push
jbe
and
mov
sbb
into
sub
and
jl
aas
dec
mov
ficoms
push
add
popa
jns
sub
das
mov
mov
pusha
loop
popa
jae
repz
out
mov
cmpsb
xchg
aas
sub
in
cmp
enter
xor
stos
jmp
outsb
mov
es
fildl
jae
push
cmpsb
cli
cmp
pop
sbb
ds
add
out
sbb
sahf
sub
ret
sbb
repz
fwait
jl
xor
enter
imul
jo
aad
shll
cmpsl
sub
rcrb
add
sbb
jnp
add
mov
and
cltd
jbe
cli
dec
js
jnp
add
scas
mov
jns
cs
push
cmp
add
pop
and
xchg
or
repz
out
loopne
push
push
gs
loop
cwtl
lret
stc
and
andb
arpl
pop
ss
imul
ret
adc
inc
mov
or
add
orl
ss
repz
in
aaa
rcrb
popa
and
push
popa
cltd
jnp
ret
or
cmpsb
fiaddl
mov
push
and
mov
iret
push
ret
push
negl
movsb
xlat
mov
and
adc
dec
imul
jge
inc
inc
or
xchg
aaa
shlb
sbb
xchg
push
test
push
mov
mov
das
rcrl
mov
test
xchg
es
jp
or
or
insb
mov
nop
movb
or
push
mov
mov
loope
mov
stos
out
sbb
sti
mov
dec
iret
mov
cmp
pop
lods
push
sub
jns
mov
jno
dec
rcrb
add
les
add
orl
add
adc
xorb
or
xor
xlat
out
lahf
cltd
repz
mov
inc
js
stos
sar
cmp
pop
in
pushl
sbb
cli
imulb
loope
stos
xchg
mov
sub
sub
test
ss
mov
rorl
roll
leave
adc
loope
iret
push
imulb
test
ror
lods
pop
insb
and
xor
lcall
add
stc
stos
jl
sti
test
inc
add
xor
push
push
pop
scas
push
mov
fstp
adcb
xchg
out
inc
outsb
jns
jg
push
das
fidivrs
fdivp
outsl
dec
clc
mov
adc
mov
notb
pop
lret
pop
jae
shll
lods
fs
xchg
pop
popf
cmc
fcmovnb
inc
in
sbb
mov
arpl
pop
scas
sahf
sub
mov
sub
ja
fcoml
adc
xchg
sbb
pop
xchg
icebp
mov
adc
sub
add
lock
call
adc
mov
lahf
push
paddq
jns
dec
sti
in
data16
jp
repnz
push
nop
mov
xchg
dec
or
and
pop
xor
in
vpaddsw
movsl
iret
cmc
dec
pushf
mov
adc
add
dec
jns
add
fdivl
mov
lret
push
sub
push
aaa
sbb
push
ljmp
jne
or
aam
and
mov
xor
cmpsl
btc
rcrl
jmp
test
jmp
mov
pmaxub
jl
mov
in
iret
adc
stc
mov
ret
test
scas
adc
fwait
inc
add
mov
sub
insb
xchg
dec
cmp
in
adc
les
ret
in
shl
xorl
in
push
bound
cmp
lock
loop
and
movsl
cmc
shrl
jecxz
inc
mov
add
ficoms
loop
icebp
cld
mov
sub
mov
test
out
or
xchg
insl
add
push
ret
sbb
aam
orb
xchg
enter
inc
mov
stc
shll
xchg
inc
cmpsl
push
adc
dec
xchg
jecxz
jmp
je
in
adc
mov
cmp
xor
and
cmc
push
in
jne
cs
dec
and
loop
inc
sub
mov
frstor
cwtl
xchg
sbb
ret
out
test
adc
push
lret
fwait
sbb
xchg
pop
push
xchg
fs
lods
ret
pop
sahf
lods
sub
rcrb
jp
sub
mov
aad
mov
xchg
ja
cwtl
dec
xchg
bound
sahf
push
mov
and
imul
mov
and
mov
mov
jbe
fisubrs
mov
loope
push
dec
stos
jns
adc
jne
rcpps
sahf
and
icebp
cld
ja
sbbl
lock
loopne
inc
add
scas
jge
sbb
xchg
scas
mov
aas
pop
and
cmc
adc
cltd
mov
sbb
popa
cmp
add
push
test
icebp
sbb
mov
push
int
das
add
mov
in
lock
dec
imul
dec
shr
aas
jg
or
lea
aaa
adc
jl
push
fbld
and
jge
dec
idivl
sbb
fs
pop
adcl
sbb
dec
insl
mov
inc
jo
daa
fimull
pop
int
jg
imul
js
arpl
cmp
lret
repnz
pop
pop
jp
addb
sub
insb
add
pop
push
sarl
shll
sbb
lret
ds
push
inc
subb
push
ss
repnz
testb
pop
inc
imul
into
add
lods
or
push
jle
in
imul
sub
in
mov
sbb
into
cmp
or
out
imul
xchg
xor
push
xchg
aad
ss
shll
pushf
sbb
mov
ljmp
pushf
xchg
inc
loope
aam
jns
sbb
and
ss
mov
push
inc
push
out
outsl
js
incl
stos
cs
mov
inc
and
js
xchg
data16
mov
cli
and
loop
arpl
pusha
push
push
mov
jp
mov
ficoms
or
mov
or
fisubl
leave
sbb
aas
ljmp
rorb
lods
push
xacquire
pop
nop
sub
scas
test
lods
or
xor
outsb
into
dec
fdivs
sub
mov
inc
mov
loopne
mov
jp
pop
insb
push
xor
insb
fldcw
loope
pop
mov
push
mov
cmp
je
sbb
sub
dec
out
loope
jecxz,pn
fsts
sbb
jae
adc
fsubl
push
lods
adc
fsubs
mov
dec
mov
mov
in
xchg
ss
jecxz
dec
movsl
mov
inc
aaa
out
add
or
out
adcb
pop
xchg
jmp
xor
push
push
cli
xchg
and
sbb
rcll
repz
xor
js
mov
mov
scas
push
mov
je
addl
pop
rcll
ds
lds
pop
push
dec
dec
je
lret
mov
dec
push
inc
fstpt
fsubs
mov
imul
adc
sbb
jmp
push
test
dec
aaa
pop
lcall
jmp
dec
adc
cwtl
sbb
sbb
out
mov
popf
add
inc
jge
js
or
or
out
movb
jle
addb
test
mov
inc
mov
out
adc
adc
pusha
mov
call
mov
mov
mov
insl
jmp
dec
imul
out
cli
pop
imul
push
call
xor
or
jecxz
es
push
aas
cs
jg
mov
mov
push
xlat
push
ja
jge
push
shl
inc
push
mov
sti
and
ret
aaa
les
sti
jle
sub
fnsave
cli
roll
in
fwait
adcl
aaa
jnp
sbb
inc
aad
xchg
or
in
loope
or
xchg
js
add
faddp
call
inc
gs
sub
dec
and
or
cwtl
xchg
out
xor
mov
inc
loop
jecxz
test
xor
mov
xchg
jno
bound
rcl
jmp
push
fsubl
push
out
add
rcrl
pop
rcl
inc
push
jae
test
lods
sbb
add
std
sbb
inc
xor
or
popa
pop
pop
lods
outsl
pushf
mov
jnp
jmp
jbe
rcrb
leave
loope
dec
jae
add
hlt
push
adc
xchg
inc
in
jle
push
mov
pop
mov
pop
aad
xchg
repnz
mov
and
repnz
xchg
leave
and
sbb
das
mov
mov
jle
sub
pop
in
fidivl
mov
xchg
in
ljmp
add
int
jp
ret
xor
mov
sbb
fwait
push
outsb
xor
test
jmp
mov
cmpsb
aam
ljmp
repz
cs
pop
rolb
iret
test
iret
gs
xor
inc
in
mov
xchg
leave
cld
jb
mov
mov
icebp
sbb
insb
ja
pusha
xor
mov
or
mov
mov
in
lods
xchg
inc
sbb
dec
mov
mov
or
add
xchg
cmp
clc
xchg
stos
pop
adc
adcl
pushf
dec
test
mov
dec
cmp
push
cmc
jbe
sub
push
shll
xchg
adcb
mov
jns
mov
stc
inc
sbb
fnstcw
mov
jo
push
lcall
loope
outsl
das
cmpsl
jb
stc
mov
adcb
push
cwtl
inc
dec
in
mov
popf
arpl
inc
pop
cltd
push
ficoml
pop
sbb
inc
decl
inc
or
add
sahf
and
popf
push
push
push
cld
push
cmpb
inc
push
jbe
or
mov
shlb
fs
adc
jnp
in
cmp
les
inc
mov
sbb
inc
mov
test
jnp
jmp
cmpsl
sub
inc
jo
sub
ja
pop
cmp
cld
sub
dec
inc
and
jae
jns
sbb
test
popa
movsl
mov
icebp
test
setge
xor
lods
iret
mov
fwait
mov
or
lahf
cwtl
add
nop
lret
fmul
dec
jae
and
incb
jne
push
lret
sub
adc
or
jno
ret
lret
xchg
or
adc
lret
fwait
adc
push
pop
jl
mov
stc
mov
fldt
xor
sub
mov
push
dec
fwait
outsl
mov
ljmp
mov
mov
mov
sbbb
int
and
cmp
mov
mov
enter
sbb
addl
xchg
std
ja
xchg
popa
cld
mov
int
adc
xor
sbb
jns
enter
daa
pop
je
inc
xchg
mov
hlt
loop
xchg
sub
dec
push
sarb
and
pop
cmpsl
in
sbb
adc
push
js
cmpsl
lcall
lret
or
aam
fisubrl
dec
pop
cli
mov
adc
xorb
shl
test
aas
xlat
jg
cmc
and
xchg
std
push
fidivs
sub
test
xor
push
inc
sbb
mov
cld
insl
pop
pop
int3
fs
ja
mov
mov
sti
dec
jg
adc
test
push
pop
je
lret
xor
fstl
movsl
cmp
mov
insb
push
jmp
jmp
push
inc
mov
or
stc
ds
lret
icebp
cmpl
mov
mov
inc
dec
and
cmpsl
push
dec
sub
test
or
pop
sti
adc
and
daa
xchg
dec
push
idivb
add
mov
icebp
xor
insl
push
mov
stos
pop
sub
mov
adc
jne
push
cmp
popf
xchg
push
mov
cmp
xchg
repnz
mov
test
add
xchg
insl
cmpsb
ret
cmpsl
fmul
add
bound
xchg
cmp
or
aam
faddl
jge
inc
mov
loop
test
idivb
pop
mull
sub
inc
data16
popa
cld
insb
pop
pop
mov
cmp
dec
cmpb
mov
xchg
sub
icebp
pop
pop
int
and
and
loope
inc
sub
ljmp
scas
push
mov
into
dec
lret
cmp
fcmovb
pop
pusha
dec
adc
mov
mov
jmp
or
mov
jns
mov
or
out
or
push
adc
or
mov
out
test
divl
gs
loop
sub
add
mov
aad
adc
push
push
movsb
cmp
addr16
jmp
repnz
out
std
pop
pusha
add
push
and
cltd
repz
adc
pop
loop
pop
imul
in
push
jecxz
mov
mov
loope
push
and
adc
in
repnz
addl
inc
cmp
lret
mov
cs
push
test
xchg
test
ficomps
add
xor
fdivrs
in
fmul
mov
add
ds
add
dec
and
fisubrl
sarb
icebp
ret
push
mov
outsb
inc
pop
cmpl
iret
pop
les
xchg
cmp
mov
fcomps
sahf
push
mov
outsl
fwait
daa
out
adcb
sti
add
stc
jl
cltd
fs
clc
sub
xor
jmp
dec
lds
loop
ja
dec
outsl
sti
ret
mov
dec
bound
lcall
dec
mov
shll
jmp
cmp
lds
dec
dec
iret
insb
in
adc
and
nop
jmp
arpl
xchg
mov
fcmovnbe
inc
xchg
mov
test
xchg
push
sbb
inc
mov
mov
push
dec
push
aaa
jge
mov
push
pop
leave
lea
dec
daa
push
add
jb
addr16
out
arpl
jp
push
jmp
loop
push
hlt
cmp
lret
cwtl
fcompl
xchg
cmp
pop
xor
xor
sbb
out
dec
jb
std
mov
test
sti
fs
ret
in
hlt
movsb
ret
imul
cmp
cmp
pop
mov
testl
outsb
arpl
dec
dec
shlb
pop
shll
dec
arpl
jge
outsb
hlt
and
mov
out
fstpl
cmp
lods
pop
inc
xlat
stos
xchg
jp
mov
adc
in
fs
std
cmp
push
std
mov
push
test
xchg
fwait
not
sbb
ss
pop
mov
shlb
dec
pop
roll
decb
negl
mov
pop
pop
aad
fiadds
or
push
mov
out
scas
jp
addr16
or
dec
mov
mov
outsb
cli
mov
dec
add
lea
nop
iret
lea
aam
shll
add
clc
xchg
and
and
mov
js
rol
iret
mov
cltd
imul
inc
mov
dec
loope
and
in
pop
add
aas
mov
cltd
enter
sub
mov
shrb
out
mov
sbb
shl
pop
dec
stos
sbb
pop
fisubl
and
stc
inc
pop
fwait
rcll
lcall
and
pushf
jae
idivl
add
mov
or
popa
mov
dec
sbb
and
cmp
push
jbe
pop
ss
dec
mov
ja
add
add
movsl
cmp
xchg
xlat
pop
rclb
mov
div
test
push
fwait
leave
ja
cli
pop
sub
sub
jne
cmp
jbe
push
paddusb
push
pop
push
push
gs
shrl
stos
ret
and
fmull
push
fwait
jecxz
inc
mov
add
xchg
jne
sub
fisubrs
lds
and
mov
adc
and
mov
popa
es
pop
mov
inc
aad
sahf
sub
or
cmp
aaa
xchg
fwait
call
cltd
mov
gs
dec
imulb
repnz
leave
mov
fstp
insb
sahf
dec
lret
std
cmpsb
mov
lock
and
idivb
mov
adc
jbe
imul
in
sub
shld
test
push
adc
push
test
inc
scas
lock
jae
leave
dec
sti
popa
mov
or
mov
rcll
pop
repz
lret
ret
mov
cmc
lds
add
in
popa
mov
les
add
jmp
jle
aad
cmp
int
les
jle
xchg
cwtl
imul
jno
and
imul
or
pop
nop
inc
sbb
test
arpl
in
cmp
ss
push
lret
jg
rcl
jno
push
stc
fpatan
pop
mov
push
sbb
aad
pop
jo
push
into
jae
int
mov
fsubl
adcl
or
popa
loopne
push
jg
adc
movsb
mov
lret
rcr
inc
adc
jbe
dec
add
dec
test
cmp
inc
push
jecxz
cli
lock
fisttps
lret
shl
xchg
xchg
jp
lock
pop
shlb
leave
js
das
test
pushf
out
ja
pop
jl
mov
movsl
adc
mov
adc
enter
pop
push
push
fidivl
push
and
fwait
mov
cltd
sbb
pusha
inc
sbb
outsb
mov
add
rorl
jnp
sub
cmpsl
fiaddl
jnp
insl
inc
push
fisubs
decl
cmpsb
dec
in
push
jmp
or
xor
mov
sbb
fldcw
pop
jo
or
loopne
inc
jl
sbb
ja
into
lea
add
cmpsb
xor
repnz
cli
movsb
push
jmp
fistpl
int3
and
jle
sahf
scas
adcl
bound
ss
fldcw
cwtl
sub
mov
sub
jno
int3
int3
mov
sub
inc
jne
dec
insb
pop
fs
jp
mov
sub
lock
or
mov
push
jmp
dec
inc
repz
lcall
pusha
aad
data16
sbb
dec
je
cmc
loop
aad
xchg
and
rcrb
in
xchg
push
cltd
sti
pop
adc
outsl
cmp
lds
push
in
insb
sbb
out
sbb
add
dec
ret
or
jo
cmpsb
xchg
add
inc
ret
or
dec
sub
push
leave
int3
add
jl
sahf
add
call
jnp
cmc
adc
adc
pop
mov
sub
ficoml
test
sti
mov
sbb
mov
popa
pop
shll
ret
xor
imul
or
pop
sub
cmp
xor
subb
in
mov
xchg
push
push
nop
sub
sbb
test
faddl
fimuls
fstpl
ljmp
xchg
cmpsb
or
mov
or
in
into
pusha
push
dec
add
adc
or
cmpb
inc
stos
mov
sbb
jge
pop
pop
lahf
dec
push
pop
inc
popa
and
or
xor
or
pop
jb
pusha
inc
pop
xor
pop
data16
hlt
arpl
xor
notl
mov
mov
or
push
psubb
divl
mov
bound
aas
add
mov
mov
sub
mov
test
out
lods
inc
and
mov
dec
push
les
jg
jno
cmp
adc
sub
outsb
push
aad
or
xor
push
fdiv
add
mov
fwait
xchg
or
add
mov
in
fwait
mov
push
adc
jno
js
add
cmovne
dec
dec
leave
jae
dec
inc
adc
mov
dec
push
test
xor
xor
int
jecxz
stos
push
outsb
push
pop
adc
dec
scas
sub
add
cld
mov
mov
push
jle
jbe
xchg
lret
jo
mov
setne
int
sbb
int
pop
movsl
xchg
cmpsb
mov
les
cmp
leave
lds
inc
mov
xor
push
xchg
lret
push
stos
pushf
or
pop
std
aas
push
scas
adcl
dec
sbb
das
cmc
into
jb
cld
mov
adc
sub
int
ljmp
sub
out
icebp
dec
ja
sub
sub
cmp
daa
fwait
mov
pop
nop
cmp
rolb
and
jbe
mov
sbb
xchg
add
jg
and
fs
rcll
adc
push
stos
sbb
mov
flds
mov
pop
push
pop
in
cwtl
loopne
icebp
dec
lock
ds
jno
ljmp
lods
dec
mov
bound
dec
mov
mov
fwait
arpl
ret
cli
cmp
adc
mov
inc
mov
sbb
fdivs
pop
lods
daa
test
pushf
and
rcll
lds
add
lock
cmp
and
mov
jge
lret
enter
and
or
mov
ljmp
xor
daa
push
adc
dec
ffree
add
cli
xchg
aas
adc
xor
test
push
mov
mov
cs
push
sbb
cmp
mov
push
fnstcw
jmp
jne
push
outsl
push
fld
dec
paddb
jp
cs
or
inc
sub
sub
ss
aam
push
hlt
popa
jg
sahf
test
rclb
test
dec
push
fisubs
ja
mov
fisubrl
out
or
leave
inc
dec
daa
clc
mov
adc
arpl
cmc
mov
gs
arpl
add
add
sbb
sbb
xchg
int
dec
dec
mov
add
repnz
push
pop
repnz
rcll
rclb
repnz
mov
jnp
pop
push
jecxz
mov
cmp
jnp
xor
push
in
mov
cmp
leave
adc
mov
xchg
ss
cmp
pop
subb
nop
sahf
jnp
add
outsb
faddl
cwtl
dec
pop
push
push
inc
andb
ret
fdivrs
out
dec
cwtl
adc
into
dec
int3
loopne
sahf
cmp
add
pop
xor
testb
xor
jnp
popf
sbb
sarl
dec
push
aad
mov
inc
and
or
adc
std
movsb
mov
push
sbb
loope
xor
jno
pop
pop
mov
fbld
adc
and
bound
sub
sub
lcall
outsl
cmp
insl
leave
cmp
mov
inc
or
mov
push
lret
mov
int
test
dec
cmp
cmpsl
pop
or
xchg
mov
sub
inc
pop
roll
mov
xchg
lods
or
fldl
cs
push
xor
fs
sbb
xchg
repz
ja
adc
push
jb
inc
lods
nop
sbb
lds
dec
inc
lds
test
cmc
mov
data16
dec
jae
out
xor
sub
insl
dec
leave
add
push
aad
sub
xchg
sub
int
or
sub
xor
out
lret
push
xchg
repnz
push
rcl
hlt
aad
add
rcr
ja
mov
mov
xchg
fildll
dec
aas
or
adc
pushf
mov
push
dec
das
xor
pusha
leave
rorl
ret
pop
push
cwtl
jg
ret
repz
arpl
adc
xor
scas
mov
test
cwtl
repnz
pop
sub
imul
add
mov
jmp
ljmp
adc
insl
or
xchg
mov
xchg
movsb
xor
cmp
in
mov
inc
into
jmp
lcall
scas
mov
loopne
ret
and
cs
ret
jo
inc
mov
stos
fcomps
sbb
pop
mov
fidivl
jg
outsl
pusha
xor
ljmp
mov
or
cltd
loope
ja
inc
iret
inc
outsl
xor
loope
sub
popf
mov
icebp
or
mov
mov
clc
mov
pop
icebp
sub
push
ret
cmc
cs
jbe
or
cltd
test
and
gs
mov
das
shl
enter
and
pop
out
cmpl
fldcw
mov
pushf
in
addr16
cli
lcall
int3
shll
lea
mov
jle
jge
jle
test
inc
rcrl
into
lcall
inc
mov
xor
outsb
fucomip
push
int3
xchg
or
jmp
mov
rcll
enter
mov
cli
adc
jge
aam
testl
orps
sbb
fcomp
push
mov
sbb
sarl
mov
push
iret
testl
sbb
lahf
adc
mov
cmc
lret
mov
fdivs
into
xchg
and
dec
push
das
fidivs
push
daa
andb
sub
pop
push
or
lret
jo
sarb
inc
mov
cwtl
out
stc
roll
cmp
cmp
and
mov
ljmp
aam
and
jge
stos
fs
adc
inc
ret
jae
xchg
jnp
adc
xor
xor
jecxz
data16
ss
les
mov
jb
repz
pop
loope
pop
jecxz
insb
les
xchg
jnp
cmp
pop
scas
mov
and
aad
stos
adc
mov
es
lcall
xorl
push
movsb
or
iret
lds
pop
ficoml
pop
pop
add
adc
sub
adc
lock
cmpsl
lcall
addr16
les
jae
mov
adc
mov
sarl
jae
fidivrs
outsb
sahf
sbb
jae
imul
cmp
lcall
frstor
or
and
test
or
fiadds
pusha
pop
cmp
push
fucomp
adc
sub
stos
jo
rcl
mov
add
xchg
push
lahf
nop
inc
push
scas
cmp
ret
push
shll
cmp
aam
mov
xchg
clc
andl
jge
and
in
mov
fisttpll
lds
outsl
adc
pop
popa
out
repz
je
dec
add
lcall
push
and
mov
in
xchg
jnp
jmp
lea
andb
or
out
dec
rclb
sub
adc
sahf
pop
or
cli
xor
cld
lcall
mov
gs
stc
roll
cld
xor
push
ss
mov
add
add
mov
cwtl
xor
cld
sbb
mov
cli
loope
xchg
pop
fs
rol
mov
push
adc
pop
mov
pop
gs
dec
ss
mov
cmp
in
aad
mov
popa
fdiv
sub
iret
arpl
ljmp
mov
arpl
mov
js
mov
sbb
mov
rol
test
push
jp
and
ljmp
jnp
loope
data16
ja
stc
lea
cwtl
dec
repz
stos
jmp
jmp
in
jge
sub
pop
pop
cltd
sbb
in
nop
outsl
and
push
cli
pushf
mov
add
inc
lds
testb
push
daa
xchg
call
mov
jecxz
mov
aas
test
xchg
cmp
sbb
inc
stos
jp
adc
mov
xchg
cmovae
mov
into
jecxz
subb
pop
scas
cmpsl
imul
jns
or
cltd
xchg
mov
sub
adc
or
jo
mov
mov
inc
in
mov
outsl
mov
mov
xchg
inc
pop
mov
aam
adc
ss
mov
fs
shrl
shl
in
mov
insb
test
mov
dec
xor
das
and
sbb
call
mov
jo
jns
pop
inc
mov
rcrb
in
xchg
aas
enter
inc
push
cmpsl
insl
dec
sbb
aas
add
ds
xor
push
mov
pop
loop
loop
adc
lea
jp
scas
adc
enter
fwait
adc
pop
dec
shl
mov
push
leave
test
cmpsl
push
imul
testb
sub
cmp
shll
popf
sbb
ret
sub
xchg
sbb
mov
cmp
sbb
or
xchg
pop
or
lcall
movsb
xchg
stc
and
inc
in
mov
and
iret
push
sub
test
out
pushf
pusha
cmpsb
mov
pop
dec
xlat
imul
xchg
paddusw
lods
pop
mov
js
ljmp
or
lock
or
pop
push
std
jo
out
sbb
mov
ret
std
or
fnstsw
notl
sub
sbb
imulb
inc
jb
movsl
sub
push
dec
pop
idivl
push
js
test
and
sub
rorb
hlt
movsb
mov
mov
and
sub
inc
and
push
cmpsl
js
ss
in
scas
out
push
fsubrs
iret
sbb
jbe
lock
push
scas
push
xor
mov
pop
in
pusha
clc
add
and
js
cli
subb
mov
sbb
aad
aaa
test
fldt
shl
add
out
je
out
mov
inc
lods
call
mov
pusha
push
andb
aad
jle
inc
mov
or
or
and
and
lods
imul
push
or
fcomp
sub
js
mov
mov
xchg
rol
pusha
add
xchg
rolb
rcl
sbb
xor
add
loope
push
ret
movsb
pop
scas
subl
sbb
push
mov
cmp
outsl
testl
jns
push
inc
icebp
jmp
daa
mov
xchg
xchg
inc
in
mov
jp
jb
addr16
gs
or
popf
es
and
mov
sub
aam
stos
cli
leave
pop
hlt
enter
movsb
popa
xor
inc
popf
dec
or
jg
pop
mov
pop
jg
xlat
insl
dec
mov
test
xchg
and
jbe
add
es
mov
mov
mov
pop
xlat
sub
xor
mov
and
mov
cmp
stos
dec
jnp
xor
mov
jne
jp
pop
adc
add
movsb
add
add
repz
inc
jmp
dec
jl
aam
cli
cmp
push
mov
lret
mov
fs
sbb
ljmp
test
cmp
dec
mov
aam
pop
popa
cmp
outsl
mov
cltd
or
pop
notl
aam
mov
push
icebp
test
rcr
xor
rol
repnz
gs
arpl
lret
lods
inc
mov
or
push
aas
fists
or
das
jecxz
cmc
jns
push
movsl
push
orb
repz
js
iret
pop
push
push
mov
and
push
cmp
jae
call
or
xchg
into
jbe
mov
inc
adc
lods
lea
inc
lods
add
push
jbe
jmp
cltd
inc
or
mov
ss
pop
push
ja
popa
aaa
movsb
jecxz
push
mov
mov
in
loope
or
cmpsl
cmc
sub
jns
ret
test
or
sub
mov
dec
aam
push
jae
cmp
inc
jmp
push
popf
mov
dec
fadds
popl
test
and
arpl
dec
xchg
sbb
pushf
mov
cmp
ret
push
pop
push
mov
add
repz
xchg
pop
pop
pop
sub
test
jg
pushf
mov
cmp
pop
outsb
hlt
lret
nop
and
repnz
adc
mov
mov
cltd
mov
out
ret
or
or
xchg
test
stos
jae
mov
lahf
mov
dec
aam
push
jnp
dec
push
enter
adc
xor
into
dec
push
sarl
lods
popf
fptan
shrl
aam
or
push
dec
mov
es
bound
fdivrl
add
rolb
loope
jb
cmpsl
scas
lahf
push
mov
movsb
repnz
push
bound
call
mov
mov
xchg
add
sub
or
mov
push
dec
add
rclb
cmp
orb
enter
sub
pop
cmp
xchg
je
xchg
das
cmp
push
jmp
clc
lret
adc
rolb
mov
sbb
and
jae
or
inc
js
xchg
push
jge
call
mov
cmp
lock
xchg
and
sbb
xchg
lcall
cld
or
sbb
stc
inc
or
in
loopne
dec
mov
mov
xchg
cmpsb
dec
insb
pop
leave
jle
hlt
pushf
mov
fbstp
push
lret
push
jbe
rcrl
cmpb
mov
sti
pushf
or
loopne
sbb
pop
fists
cmp
lea
and
sub
cmp
arpl
in
mov
addr16
pop
xor
lahf
xor
mov
mov
xor
sbb
stos
xor
inc
jl
xchg
mov
pop
pop
into
push
cmpsl
xor
or
or
push
xor
adc
adcb
lahf
pop
push
jns
xor
mov
insl
jmp
lock
dec
mov
cmp
hlt
pop
mov
adc
add
insl
aas
cmpsl
lock
xor
outsl
pop
movsb
iret
stc
inc
cld
push
or
fldcw
imul
rclb
push
int3
repnz
or
dec
je
lods
in
mov
adc
je
fistl
mov
cmc
mov
sub
in
pop
movsw
pop
mov
ror
ljmp
adc
sbb
js
add
jecxz
pop
inc
jbe
addr16
inc
sbb
xchg
orl
in
iret
out
jns
scas
push
pop
jne
mulb
call
jg
scas
sahf
leave
jo
call
pop
mov
mov
stos
lret
dec
lea
outsl
mov
leave
and
mov
das
test
mov
arpl
inc
je
mov
jb
push
shrl
xor
jp
sbbb
sbb
mov
sbb
rcl
mov
adc
mov
in
pop
sub
in
mov
mov
or
pop
cmp
repnz
add
js
test
cld
push
rol
mov
outsb
js
pop
call
test
hlt
addl
dec
mov
popf
cmp
addl
or
mov
sub
push
dec
mov
jp
lods
xchg
jns
xorl
jle
inc
mov
push
ljmp
or
sbb
and
mov
xchg
push
mov
inc
addl
cmp
mov
aas
xor
sub
bound
hlt
rcrl
jns
mov
fs
ret
or
add
jo
push
sbb
jo
lds
cmp
dec
add
in
divb
or
inc
mov
into
jg
icebp
inc
outsb
sar
pop
mov
dec
mov
stos
or
adcb
mov
out
xchg
dec
mov
dec
mov
popa
jl
sbb
lret
xlat
push
dec
cmp
inc
cmp
stc
nop
hlt
call
incl
sbb
cmpsl
mov
or
mov
rol
push
mov
adc
mov
subl
out
jg
push
push
dec
xor
xor
shll
inc
jae
push
jl
jae
nop
pop
loopne
and
dec
cmpsl
push
mov
ret
push
jo
pusha
push
lea
xchg
mov
mov
pop
mov
cmc
shll
adc
cmp
mov
movsl
clc
mov
clc
fwait
clc
aas
pushf
lods
cmp
pop
xchg
stc
rolb
add
negl
popf
in
sub
enter
cmovae
cmpsl
adc
in
jmp
out
adc
fwait
inc
mov
lret
ljmp
jae
xor
sbb
cmp
dec
fisubrs
xor
rolb
xchg
bound
lds
js
adc
push
in
push
shr
pop
or
add
pop
fnstsw
add
movsb
pop
insb
fists
cli
idivb
outsl
add
sub
mov
adc
adc
pushf
pop
int
int
movb
sbb
xchg
imulb
cmpsb
arpl
mov
mov
dec
push
add
adc
xor
mov
outsl
pop
insl
sub
movsb
mov
push
xor
rolb
fs
addr16
icebp
aas
dec
lret
rcr
push
shll
fnstsw
mov
jnp
mov
push
je
lea
xor
outsb
loop
cmp
or
sahf
and
lcall
dec
inc
out
adc
test
mov
addl
push
mov
mov
popf
pop
out
push
jecxz
sbb
jge
add
xchg
push
outsl
insl
push
in
cmp
push
insl
push
mov
aas
xor
gs
pusha
xchg
ret
pop
call
mov
push
inc
mov
or
push
in
sbb
into
leave
sub
jns
pop
mov
push
fcoms
pusha
mov
dec
fwait
mov
push
jge
mov
popa
aad
pop
inc
adc
xlat
xor
add
icebp
adc
pop
cmp
outsl
sub
icebp
sbb
sbb
sub
and
xchg
ja
ss
add
lret
dec
adc
test
out
or
jecxz
mov
xchg
add
daa
in
add
ljmp
jo
loopne
fidivl
xchg
inc
add
and
into
rcrl
jb
lods
mov
mov
repz
shrb
or
jl
imul
add
adc
or
pop
mov
repnz
add
push
xchg
push
mov
adc
inc
in
pop
inc
leave
nop
push
jecxz
loopne
xchg
ja
iret
js
insb
lock
ret
repnz
xchg
adc
push
in
jle
daa
xchg
mov
mov
int
or
out
lods
aaa
push
mov
cmp
lods
cmp
ds
cld
xor
lock
mov
outsl
jecxz
cmp
xchg
sbb
stc
stos
pop
jecxz
jnp
push
sbbb
mov
sar
or
loopne
iret
fnstenv
inc
sub
insl
inc
clc
sahf
mov
or
sbb
ficomps
inc
stos
icebp
leave
pop
jns
cs
into
pop
mov
popf
cmp
shr
mov
es
pop
inc
and
mov
cld
jae
bound
jmp
ja
adc
xor
jecxz
mov
mov
xchg
adc
pop
xchg
imul
sbb
add
inc
dec
add
cltd
adc
pop
adc
addl
mov
or
sub
jecxz
pushf
jae
pop
sti
jge,pn
and
mov
cs
cmp
xchg
cmpsl
fwait
outsb
shr
fwait
sub
test
loop
add
sub
pusha
add
pop
xchg
ja
fisttpll
ss
fnstsw
cs
add
mov
cs
fdivl
or
iret
inc
mov
test
mov
mov
filds
fldt
cmp
jl
jle
lods
jnp
mov
cmp
hlt
in
sti
stos
sbb
cmpsl
sarb
jle
ljmp
push
mov
push
dec
dec
jmp
xor
pop
arpl
popa
xchg
add
addr16
fsubrl
cwtl
pop
arpl
jecxz
addl
gs
ret
mov
lock
jne
cmp
pop
ljmp
xchg
cmpsl
mov
push
insl
jno
jl
or
add
pushf
sub
inc
lods
push
cmc
shld
pushf
pop
cmc
mov
rcrl
xor
mov
xchg
scas
jmp
dec
push
push
stc
mov
iret
sub
fs
repz
mov
into
mov
lret
out
stos
push
adc
je
add
leave
je
leave
jecxz,pt
or
add
int
dec
stos
pushl
sahf
and
and
aaa
fwait
out
mov
loopne
adc
lret
out
popf
cmp
cmp
add
stc
mov
or
cmpsw
fnclex
push
pop
add
xchg
sub
inc
push
xchg
or
sub
add
or
js
inc
es
mov
sbb
xor
testl
mov
sub
dec
sub
lods
bound
fcomps
rcll
or
imul
jge
push
push
seta
mov
adc
adc
js
cli
fldt
lret
or
mov
pushf
dec
popf
arpl
in
xchg
jecxz
dec
sarb
lock
call
out
and
into
or
cmp
xorb
mov
andl
sub
lods
push
test
test
loop
add
push
xor
movsb
inc
jnp
je
in
fsts
popl
xchg
in
mov
imul
cmc
and
loopne
cmp
js
in
fs
or
enter
xchg
addr16
jae
add
cltd
xchg
cs
lods
pop
pusha
sbb
push
push
aas
hlt
mov
sti
mov
sahf
movsb
xor
and
flds
das
and
inc
xchg
testl
inc
cmp
xor
push
in
jno
push
lcall
pushf
sbb
push
sarb
mov
add
pop
imul
mov
arpl
lods
rclb
sub
test
stc
lret
nop
orb
cmp
add
dec
jp
adcl
sbb
mov
dec
arpl
ja
and
mull
jae
pop
inc
movsl
sbb
push
pop
clc
jns
xlat
testl
xchg
sti
scas
jp
jo
push
pop
test
shll
or
mov
js
cmp
mov
adc
inc
mov
mov
xchg
gs
mov
push
test
nop
adc
into
cli
sub
incb
clc
push
filds
push
adc
jmp
mov
sub
iret
xchg
test
out
mov
insb
adc
in
stos
shll
pop
cmp
fcomp
push
adc
fimull
aad
aas
inc
in
repz
fucomip
pop
aam
arpl
mov
aaa
mov
add
and
in
das
aam
lahf
mov
iret
sbb
js
je
dec
add
jge
fstps
and
mov
mov
or
or
stos
push
sbb
jbe
pop
mov
sub
and
out
jb
and
aaa
fs
inc
mov
mov
orl
ret
pop
outsb
mov
loop
mov
movsl
or
sub
aad
xchg
cmc
mov
cld
pop
sahf
data16
cli
and
repz
jo
dec
sbb
iret
sahf
inc
hlt
lea
in
lret
push
xor
sub
pop
ret
mov
ljmp
mov
xor
inc
pop
mov
push
add
test
repnz
sahf
or
inc
fs
into
xor
mov
or
hlt
pop
inc
dec
cli
jns
fcmovb
mov
fs
xorb
jle
or
aaa
test
into
mov
xchg
repz
mov
pop
mov
jbe
mov
push
scas
jnp
sbb
mov
jge
fisttpll
ss
mov
pushf
out
push
fdivrl
pop
dec
xchg
cld
aas
rclb
les
xchg
in
rorl
pop
mov
pop
and
mov
gs
ja
sbbl
xlat
mov
test
mov
pop
clc
pop
incb
sahf
mov
cmpsb
fiadds
mov
mulb
aam
gs
popa
mov
xor
sbb
cmp
lret
aad
sbb
push
mov
daa
ljmp
out
adc
xchg
xlat
push
in
jmp
test
mov
mov
xor
scas
xchg
lds
cmp
or
test
mov
mov
dec
mov
sti
rclb
xchg
push
cmp
mov
cmp
adcb
cmp
mov
fdivs
jle
add
fcoml
pusha
push
cmp
popf
popa
stc
repnz
jne
insb
ret
push
sbb
xor
fwait
jl
insb
pop
shll
insl
or
adcb
mov
inc
and
scas
sbb
and
adc
jb
pop
cmpsl
xchg
bound
cmp
repz
hlt
sbb
xor
xchg
sbb
fdivrs
dec
fbld
sahf
outsl
jge
or
aam
or
xor
hlt
inc
int3
stc
jbe
mov
daa
dec
xlat
push
inc
mov
lret
pop
fdivs
push
or
pop
int
popf
or
jbe
mov
dec
lea
jg
popf
mov
sti
and
or
hlt
mov
mov
lret
mov
mov
xchg
imul
pop
mov
call
or
inc
mov
pop
out
jns
or
xchg
jle
sub
sbb
sbb
fstps
cmp
rcrb
insl
add
js
hlt
repnz
cltd
sbb
lcall
mov
inc
jno
ret
xchg
push
das
cmpsb
pusha
inc
and
and
push
mov
lret
xor
push
clc
xchg
inc
add
mov
adc
addb
in
bound
mov
lods
pop
xchg
in
cs
aaa
cmc
sarb
in
ljmp
lahf
pop
mov
sub
fs
adc
adc
ret
dec
and
sbb
pop
xor
lea
mov
or
adc
pop
sub
loop
jle
mov
scas
dec
jp
pop
jne
dec
orb
popf
prefetchnta
in
pusha
jle
insl
testb
test
sub
rcrl
cmp
sub
xchg
push
addr16
inc
in
imul
pop
dec
mov
push
cltd
fmull
loope
scas
inc
mov
cltd
ficoms
dec
mov
or
stc
es
idivb
xor
rolb
loop
cs
jmp
inc
ja
inc
fisubs
xchg
and
push
sbb
repnz
mov
mov
or
or
lods
dec
movsl
ljmp
sti
mov
scas
fisubrs
xlat
arpl
pop
rclb
inc
push
pop
mov
rcr
test
call
test
cltd
xor
jp
mov
cmp
inc
push
pop
pop
into
cmc
cli
movsb
jmp
xor
or
mov
arpl
mov
push
xchg
xchg
and
in
testl
xor
dec
xlat
testb
jg
imul
mov
adc
daa
cli
mov
or
and
mov
in
cmp
stc
rorl
or
xlat
lds
jno
mov
mov
pop
xor
lret
push
fsubl
fcoms
xchg
xor
pop
int
dec
mov
jbe
push
sub
sbb
mov
inc
repnz
adcl
jp
fsts
std
hlt
lods
vmwrite
sti
mov
xchg
pushf
cmc
push
iret
into
jns
clc
scas
insl
sti
ret
test
dec
je
xchg
hlt
lahf
or
cmp
mov
das
sub
lock
mov
dec
mov
loope
repz
push
mov
pop
repnz
add
cmp
cmc
jnp
xchg
adc
add
xor
in
out
clc
ja
dec
mov
pop
pusha
xchg
mov
mov
hlt
movsl
push
clc
fiadds
repz
mov
and
js
dec
mov
test
push
imul
jnp
cltd
xlat
mov
mov
stc
or
stos
sbb
xor
sub
and
mov
cmp
jg
add
and
xchg
rorb
adc
jae
popf
and
jecxz
sub
push
cmpsb
pop
cmp
stos
lahf
out
mov
sbb
fildl
scas
stc
xchg
xchg
lds
or
dec
cmp
sbb
jmp
inc
insl
jle
push
adc
pop
lea
sub
mov
imul
mov
mov
jb
cld
cmc
insl
jl
ret
adc
subb
xchg
shll
fwait
push
mov
pushf
ss
aaa
pop
std
pusha
mov
loop
xor
mul
cmc
insl
pushf
mov
inc
add
jnp
push
icebp
jmp
fcoml
cmp
jmp
pop
sub
pop
lahf
outsb
cwtl
repnz
sbb
iret
sbb
jnp
mov
jno
out
push
arpl
pop
fs
repnz
insl
loop
mov
dec
aaa
xchg
dec
test
jae
or
dec
sbb
adc
xchg
call
sbb
mov
jmp
jns
lods
imul
push
xor
in
jo
pop
test
jnp
test
sub
dec
lcall
xchg
adc
pop
jb
sarl
mov
subb
leave
cmc
adc
sub
stos
push
inc
cmpsb
enter
arpl
lock
shlb
outsl
andl
fcoml
pop
or
icebp
xchg
adc
sub
jl
sub
or
pop
and
cld
outsb
pop
push
cmpsb
rclb
fs
divb
inc
filds
add
cmp
jae
mov
loopne
insl
addr16
je
xlat
scas
xchg
and
push
push
push
mov
pop
movaps
or
sbb
or
push
mov
mov
ds
jmp
lods
outsb
rorb
xchg
xchg
jb
mov
xor
xchg
push
js
fisubrs
test
insb
mov
xchg
jnp
cmp
shll
jnp
popa
cmp
not
pop
cmp
fists
pop
inc
mov
shr
out
cmp
out
sbb
xor
cmp
xchg
xchg
jbe
dec
xor
mov
orb
mov
jb
sub
sbb
aas
jp
aaa
inc
fstpl
in
inc
gs
add
popf
je
test
roll
cld
xor
jmp
into
bound
jb
lret
inc
stc
adc
add
sub
sub
adc
lea
push
rol
and
mov
inc
sbb
js
mov
sbbl
or
pop
mov
call
nop
adc
or
insl
add
xlat
inc
pusha
hlt
out
rcrb
adc
jl
es
adc
aad
dec
lcall
lret
xor
pop
mov
fstl
mov
push
es
add
mov
leave
fsubs
pop
mov
or
cwtl
mov
sub
loopew
jo
test
mov
pop
dec
cmp
std
insb
mov
mov
les
cs
lds
or
jp
mov
add
push
fld1
sbb
and
daa
mov
or
adcl
fdivrs
call
mov
cmp
hlt
in
and
or
push
nop
lea
or
ss
ss
sub
mov
dec
jns,pt
or
mov
mov
outsb
sub
xchg
aam
inc
sub
std
jecxz
mov
mov
push
xchg
jb
fsubs
inc
ret
xchg
xor
dec
aaa
shrb
rcll
inc
mov
out
jl
xchg
stos
sbb
push
aaa
subl
mov
popa
pop
sub
push
sub
mov
ljmp
das
jnp
mov
repz
dec
lret
sbb
xor
mov
scas
mov
out
imul
pop
or
jmp
pop
mov
pop
imul
data16
gs
mov
int3
test
repz
lret
mov
repnz
push
jmp
cmp
iret
adc
jnp
imul
cmp
sub
mov
ret
pop
push
into
dec
mov
xor
lock
dec
add
push
dec
cltd
xorl
mov
test
xchg
sub
shlb
outsb
mov
jmp
inc
push
jns
lret
lret
xchg
mov
cmp
jmp
sub
gs
outsl
sub
cli
out
xchg
arpl
enter
push
and
test
test
mov
xor
lret
mov
inc
push
scas
stos
das
cmp
fidivrs
dec
sub
mov
ret
rcrl
stos
inc
lahf
fcomp
or
add
jae
enter
movsl
adc
fwait
hlt
pop
push
mov
inc
and
bound
les
loop
loopnew
jo
repnz
pop
xor
jnp
inc
jae
mov
mov
push
movsb
xor
outsl
add
mov
pop
aas
test
add
dec
sahf
fisttpll
out
sbb
mov
subb
cld
frstor
mov
adc
or
mov
gs
xor
jns
mov
inc
repz
pop
sti
pop
lods
fmul
sub
mov
scas
push
int3
xchg
jbe
cmp
pop
cmp
inc
xchg
rorb
push
cmp
xor
out
rorb
in
stos
cltd
xchg
aad
sub
mov
mov
sbb
lahf
out
fists
xchg
aas
pop
mov
push
enter
xchg
repnz
sub
insl
lret
ja
addr16
mov
cmpsl
jle
jno
out
mov
and
mov
hlt
cmp
lret
push
cwtl
mov
mov
adc
test
inc
filds
pop
xor
fsubrp
add
fsubrp
xor
out
jl
adcl
jbe
pop
mov
repnz
add
cs
and
je
clc
sbb
in
xchg
ds
fmull
mov
imul
int3
das
jle
xchg
lahf
enter
data16
inc
lods
push
out
fcmovb
push
adc
cmpsb
imul
push
push
ja
mull
aaa
aaa
repnz
xor
jno
pop
mov
fidivrs
jg
inc
in
stos
jne
nop
ds
pop
pop
mov
cmp
fstps
push
popf
and
push
cmpsl
sub
add
push
xchg
and
mov
mov
setne
loope
cmc
inc
inc
jae
cmp
pop
cwtl
or
std
and
xor
xchg
out
push
enter
and
sbb
inc
dec
insb
arpl
lea
dec
outsb
xor
test
pusha
testl
add
in
cmp
cwtl
inc
xchg
pop
mov
lock
mov
test
imul
test
lret
dec
jle
or
mov
push
dec
push
lret
or
insb
popf
push
jns
jno
pushf
cmp
popf
pop
sbb
scas
jmp
sbb
or
arpl
mov
xchg
sub
aaa
mov
les
jno
cmp
call
pop
mov
jns
sahf
fildll
push
insb
pop
mov
cmpsb
fdivrl
cmp
enter
lods
mov
test
divb
mov
sub
stc
das
hlt
jno
cmp
sti
add
and
lea
cmp
repz
jne
mov
dec
pusha
dec
mov
dec
add
jmp
pop
dec
fdivl
shlb
movsl
mov
scas
pop
xchg
mov
loopne
daa
pushf
sub
inc
stos
movsb
ss
xlat
sbb
aam
pop
jle
lods
sbb
aad
daa
fistl
add
cs
out
xchg
lret
mov
rorl
movsb
inc
adc
cmp
je
mov
rol
lahf
push
pushf
mov
sub
out
test
fnsave
leave
les
or
imul
int
out
push
inc
push
cs
jl
psrad
xor
mov
scas
ficompl
xchg
data16
cmpsl
or
pop
rol
aam
jl
out
pushf
out
out
push
fcomps
or
xor
fstpt
aam
cld
jne
mov
add
popf
xchg
hlt
hlt
dec
pop
pop
push
sbb
testl
jmp
xor
and
jo
fsubs
mov
loopne
push
jae
xchg
push
xor
push
lret
xorl
push
xchg
clc
inc
dec
imul
js
arpl
loope
repz
inc
sbb
pop
dec
data16
out
icebp
xchg
std
push
lcall
cmpsb
mov
jns
movb
das
mov
je
lds
cmp
fwait
inc
leave
ret
jg
add
push
fildl
push
mov
out
cwtl
jg
popa
imul
xchg
sub
das
test
pop
out
sbb
jb
icebp
add
out
sbb
or
out
lret
lcall
cmc
sub
inc
lds
cmp
sub
fs
pop
or
out
je
add
add
rcrl
or
cld
pusha
push
mov
ja
jp
fadds
js
cltd
cmpsl
popa
adc
pop
adc
rcr
repz
fistpll
das
fwait
mov
or
mov
sbb
pusha
subb
js
add
push
mov
pop
rolb
stos
std
test
repz
arpl
sbb
lea
outsl
inc
add
sbb
jle
lods
mov
scas
shrl
insb
cmp
sub
or
int3
cmp
xchg
cmc
in
xlat
arpl
pop
sarl
xchg
out
inc
sbb
call
out
outsb
mov
sahf
fdivs
mov
push
inc
inc
arpl
pop
inc
popf
jg
shll
sub
and
cmp
sbb
xchg
dec
test
jmp
mov
xlat
out
cmp
imul
loopne
mov
jns
sub
imul
sub
outsb
cltd
imul
cmp
stc
movsl
pop
mov
out
push
jg
shrl
out
cmp
cmp
mov
inc
jl
mov
das
ficoml
aad
repz
add
mov
orl
les
cmp
mov
mov
sub
cmp
ds
inc
out
xchg
data16
xor
xchg
sub
hlt
out
jne
pop
pop
mov
lds
or
outsl
add
imul
aam
loope
stos
call
mov
pop
jo
inc
mov
inc
push
loopne
mov
add
out
in
nop
clc
icebp
fisttpll
pop
icebp
sub
jns
jge
add
jle
cmp
mov
fdivs
fisttpll
xor
mov
lsl
iret
adc
rorl
dec
cmp
adc
xlat
mov
push
or
dec
popf
pop
mov
loop
hlt
or
stos
fcoms
xor
pop
cld
mov
into
fbstp
push
pop
out
in
inc
loopne
icebp
test
outsl
call
adc
shll
cmp
or
adc
cmpsb
mov
cltd
sbb
les
lret
jmp
mov
xor
notl
pop
sahf
pop
push
test
cmpsb
daa
sub
sub
nop
dec
movsb
ret
or
mov
or
adc
stc
adc
das
cmp
out
dec
fistpll
xchg
cmp
sub
loop
aaa
cld
push
and
out
inc
sbb
rorl
xchg
push
sbb
dec
mov
push
orl
mov
movsb
xor
stos
or
sub
mov
jno
xor
fidivs
jge
cld
fs
dec
cmp
imul
lods
inc
pop
notl
mov
arpl
mov
fldenv
dec
pmulhuw
jmp
lret
bound
adc
push
dec
push
mov
push
mov
adc
xor
sar
mov
stos
lcall
mov
xchg
mov
stos
xchg
cli
shl
jns
push
add
add
push
push
cmp
pushf
imul
sbb
xchg
and
shr
sbb
and
xchg
xor
movsl
or
xchg
movsl
lcall
jle
xor
in
in
cwtl
dec
sub
sub
in
adc
sbb
ja
mov
aad
arpl
pop
cld
adc
lods
xor
hlt
xor
movsl
stc
mov
adc
movsl
mov
xor
ret
pop
ret
lods
sub
pop
cltd
loopne
adc
push
cmc
mov
jmp
jle
xchg
mov
popf
sbb
mov
jp
adc
xor
les
mov
pop
jne
inc
mov
cmp
leave
adc
or
push
inc
push
hlt
nop
push
out
cltd
push
insb
outsl
pop
mov
idivb
pop
mov
adc
lds
dec
test
mov
adc
int
nop
push
loop
imul
mov
mov
push
cld
jecxz
xor
add
mov
scas
icebp
xchg
and
or
jg
out
out
push
pop
or
push
aas
fldl
mov
jecxz
es
loope
mov
cmp
stc
lea
leave
mov
inc
dec
cmp
mov
das
into
outsb
and
add
dec
inc
jge
fstpt
test
xchg
pop
dec
loopne
dec
fisubrs
shll
pop
pop
xchg
ss
adc
cld
hlt
jecxz
es
aaa
aas
cli
stos
push
repnz
cmp
mov
inc
lret
arpl
cmp
mov
inc
mov
pop
fstl
sbb
test
mov
ret
xchg
cmp
subl
sub
push
inc
mov
js
dec
mov
in
dec
popf
jns
outsl
mov
int3
sarl
jo
imul
aam
mov
mov
shrb
cmp
arpl
fisttps
push
and
xchg
sub
jge
jb
fldt
or
call
out
push
lds
shll
push
into
sub
cmpsb
mov
sbb
ret
jbe
fcoms
xchg
aam
cmp
fs
inc
in
push
mov
pop
fnstcw
lcall
pop
mov
icebp
and
push
lahf
xchg
fucomip
jle
add
cmp
sbb
call
inc
pop
stos
loope
dec
stos
repz
lret
pushf
xchg
cltd
addl
jge
add
mov
mov
sub
je
adc
or
inc
and
pop
das
mov
pop
sub
bound
daa
clc
xchg
loopne
mov
test
mov
fcompl
xchg
and
dec
jo
or
test
popf
xor
cmp
xorl
scas
cltd
pop
ljmp
pop
and
and
mov
pop
clc
mov
xchg
adc
insb
cmp
push
sbb
sbb
ljmp
mov
shlb
push
jp
ss
lret
and
iret
icebp
ret
jbe
push
or
pop
int
push
in
push
mov
inc
jo
out
adc
popa
xchg
mov
xor
test
mov
daa
and
psubusb
aam
inc
dec
or
mov
popa
add
scas
xchg
mov
and
cwtl
push
push
sti
loop
outsb
jecxz
jg
cld
jge
xor
in
jb
lahf
outsb
lock
rorl
pop
les
pusha
ja
mov
hlt
push
sbb
cs
cld
mov
cli
pop
xor
lods
inc
xchg
sub
inc
in
push
ret
jo
xlat
sti
push
outsl
lret
cmp
cmpsb
cmc
test
bound
xchg
mov
adc
into
mov
dec
filds
rorl
in
pop
jp
incl
pop
mov
lcall
hlt
mov
inc
sub
mov
mov
fs
xchg
xor
mulb
mov
fmuls
cmp
sbb
out
aaa
jg
pop
bound
adc
sub
mov
imul
xor
sub
or
lods
imul
shrb
loopne
push
mov
repnz
jle
imul
pop
sub
or
adc
int
lret
sub
pop
femms
in
sbbl
fildll
inc
lds
jge
mov
mov
fdivl
sahf
scas
xlat
mov
cmp
jg
loop
mov
sub
fimuls
push
mov
stc
shlb
out
stc
pop
add
xor
fists
aam
sub
loop
arpl
imul
mov
pushl
push
popf
orb
push
jne
cmp
dec
xchg
pop
dec
nop
push
push
jmp
xchg
iret
fistpl
or
inc
ja
jle
sbb
and
jae
mov
jae
mov
in
push
mov
mov
xchg
xchg
ja
sbb
push
dec
icebp
std
sahf
jle
movsl
cmp
mov
adc
addr16
mov
je
dec
jp
mov
pop
data16
insl
xchg
sti
ss
and
ret
iret
dec
add
in
jle
adc
repz
pop
cmc
mov
pop
add
call
jg
cld
jmp
insb
js
xor
loop
mov
push
cli
lock
xor
adc
gs
add
ja
movsl
cmp
sbb
rorb
imul
add
mov
pusha
jg
jp
mov
push
aad
rorb
add
and
pop
and
adc
xchg
pop
in
and
dec
mov
push
roll
lods
or
and
in
xchg
sbbb
fstpl
fisubs
mov
lds
jmp
std
mov
out
mov
mov
xchg
cmp
leave
ret
or
jl
inc
jns
jb
cmp
outsb
daa
mov
and
sbb
testl
rorl
negb
xor
js
add
push
shrl
dec
cmpsl
dec
fmuls
xor
test
cli
xchg
pop
jg
mov
sbb
mov
int3
cmp
adc
sbb
mov
add
inc
stc
mov
outsb
fildll
js
dec
push
inc
lods
mov
jmp
into
push
imul
aad
incl
inc
cwtl
fcmovnb
or
cs
inc
stos
push
or
mov
data16
loop
insb
data16
dec
jo
push
dec
ffreep
fucomp
dec
inc
test
pop
imul
mov
cmp
shrl
add
sub
rcr
loopne
popf
loop
dec
cmp
stos
fildll
xchg
addr16
lods
push
insb
jecxz
pop
shrl
adc
scas
sub
adcl
jno
xor
cmp
outsl
add
outsl
jnp
sbb
add
sbb
sbb
test
cwtl
pop
xchg
repz
xchg
cld
xor
loope
add
into
or
xor
lods
mov
aam
in
out
in
mov
or
pop
adc
mov
mov
mov
push
and
mov
mov
mov
push
dec
std
jmp
enter
xor
das
jmp
inc
sbb
cmpsb
mov
mov
pop
aas
out
xor
inc
pop
mov
js
sti
or
enter
mov
ljmp
test
mov
cmc
xchg
mov
dec
ror
lret
shrb
sarb
mov
test
loope
jno
les
call
lahf
jo
minps
fcompl
rolb
sbb
pop
add
in
xor
rclb
cs
dec
add
sub
loop
pop
insb
insl
add
ficompl
and
dec
mov
mov
mov
pop
inc
lds
xchg
and
push
jge
mov
addr16
mov
inc
mov
or
out
aaa
popa
ret
shl
push
push
lret
dec
das
dec
ja
dec
lds
push
in
and
add
sub
rol
pop
fcmovnu
sbb
add
sbb
js
fnsave
mov
jmp
test
mov
add
or
jecxz
mov
das
jmp
insl
aaa
cmp
roll
add
sysexit
mov
inc
sbb
addr16
and
sarl
mov
cmp
out
sbb
jp
cli
pop
pop
jg
mov
es
sub
dec
cmp
sub
in
lea
pop
push
adc
stc
mov
add
xchg
testl
add
int3
stos
mov
aaa
inc
adc
pop
das
cs
adc
jmp
pop
inc
jns
imul
ljmp
loop
pop
sub
stos
dec
mov
xor
je
enter
inc
and
imul
xor
rcrb
mov
mov
inc
sbb
sbb
mov
stos
outsb
popf
lds
inc
fsubs
dec
push
push
ficoms
push
loope
rol
push
and
sbb
and
dec
pop
gs
push
loope
mov
insl
and
addr16
cmp
mov
les
lock
outsb
mov
aam
push
dec
aaa
jnp
jns
stos
add
jl
test
push
sub
lods
cwtl
mov
sub
adcb
sbb
mov
stc
add
jge
repz
mov
or
addb
inc
xchg
faddl
pop
push
ret
scas
lods
in
aas
sbb
movsb
sub
inc
pop
mov
mov
jl
movsl
rolb
inc
ss
loope
lock
inc
jnp
movsl
dec
xlat
popf
pop
cmp
pop
ljmp
cmpsb
nop
xor
bound
pushf
out
shll
ret
pop
sarl
mov
cli
iret
pop
or
and
aas
ret
jb
mov
fdivrp
hlt
stc
adc
es
ret
sub
xor
cld
scas
pop
mov
call
cmpsb
add
dec
mov
outsl
out
xchg
sbb
mov
neg
pop
dec
neg
cmp
out
mov
add
and
jb
aaa
pushf
adc
jl
adc
mov
jle
cltd
push
stos
pop
scas
adc
jmp
or
mov
add
jnp
push
hlt
ds
mov
imull
adcl
daa
and
lcall
dec
arpl
xor
mov
xchg
ljmp
dec
xor
add
xor
and
mov
stc
enter
repz
out
xchg
popa
sbb
repz
pusha
aaa
clc
dec
cmp
jmp
mov
notb
or
in
adc
daa
inc
sub
jge
divb
fsubs
mov
jmp
dec
icebp
filds
mov
call
jno
enter
ret
loopne
test
mov
inc
jmp
mov
ja
ror
lret
movsb
xchg
mov
mov
push
rclb
daa
lock
mov
or
sti
xlat
std
sub
sbb
cmpsb
cmpsl
sbb
jecxz
jle
fwait
in
push
pop
mov
xor
cmpsb
inc
sub
mov
movsb
addb
lret
add
addr16
xchg
jns
popf
lea
jnp
stos
push
and
pop
test
in
stc
add
adc
or
inc
add
paddsb
pop
clc
and
xchg
or
std
sbb
xlat
lock
inc
mov
mov
dec
call
popf
mov
mov
stc
inc
cltd
push
xchg
mov
dec
out
rol
push
inc
xor
enter
cmp
and
aas
lock
mul
lds
imul
inc
adc
stc
testl
out
call
cmp
pop
int3
cmpsb
pop
inc
in
nop
add
jmp
loop
outsb
xor
push
or
pop
or
adc
lret
insl
xchg
xchg
loope
jne
outsl
std
push
jbe
lcall
or
mov
notb
cmp
xchg
dec
lock
dec
mov
icebp
cli
or
andl
xor
mov
gs
lods
scas
shll
push
and
icebp
jl
inc
jo,pt
pushl
pop
iret
ficoml
icebp
arpl
add
xchg
mov
xor
aas
pop
adc
cld
xor
outsl
pop
repnz
xor
or
sbb
enter
mov
push
dec
inc
inc
pop
cwtl
into
lcall
fadd
xor
mov
adc
pop
push
xlat
push
sbb
icebp
fldt
add
adc
push
mov
test
xor
sub
push
enter
mov
dec
pushf
cmp
dec
xlat
in
add
les
mov
fbstp
jae
insb
jmp
mov
add
mov
hlt
mov
or
push
test
and
xor
inc
imul
scas
pop
out
mov
pushf
es
or
jne
push
std
inc
cmp
roll
sbb
push
or
enter
adc
mov
fs
fs
xorb
std
dec
fistl
and
cmp
fcoml
lds
stc
mov
inc
test
repnz
jecxz
add
jmp
mov
leave
mov
shrb
sbb
dec
notl
loopne
cmpsl
push
dec
dec
add
inc
mov
jbe
sub
icebp
jg
or
stc
sub
icebp
add
inc
jo
pushf
push
sub
xchg
sbb
add
mov
fimull
or
or
pop
leave
pop
shr
fs
in
lods
mov
xor
mov
fwait
bswap
jns
sbb
hlt
test
mov
push
cmc
sahf
xchg
insl
mov
inc
cmpsb
push
or
out
xor
out
adc
dec
dec
pop
lcall
dec
xchg
ret
imul
and
push
mov
mov
cmp
mov
cs
test
cmc
xchg
fwait
xor
add
movsl
jmp
mov
cmp
cmp
aas
inc
cmpsb
xchg
jg
cmp
or
lds
scas
fnstenv
arpl
arpl
popf
and
cmp
mov
je
mov
mov
dec
add
mov
loope
scas
popf
cmpsb
sub
jecxz
aam
fcmovne
or
rol
fcmovu
pop
leave
mov
pop
inc
pop
scas
fistl
push
dec
enter
test
enter
jl
ja
repnz
mov
pop
out
inc
mov
push
gs
scas
adc
mov
sbb
jnp
lcall
cmp
pop
in
movsl
push
push
setne
inc
mov
shl
dec
aas
sub
loope
pushf
jns
aaa
xlat
mov
push
pop
xorb
push
jae
dec
xor
mov
adc
inc
mov
mov
xor
sbb
in
push
mov
clc
mov
ret
cmp
dec
and
mov
pop
lahf
pop
mov
or
adc
addl
lret
enter
mov
fwait
inc
dec
out
cmpsl
xor
out
push
mov
sahf
les
fnstcw
stos
dec
mov
mov
mov
repz
in
pop
outsb
in
shlb
adc
push
lret
data16
push
push
and
mov
arpl
call
sarb
test
sub
outsb
add
cltd
jae
mov
sub
sub
or
xor
sub
andl
adc
test
cmp
mov
sbb
sub
idiv
inc
jg
push
enter
xchg
and
fs
cmp
push
dec
sub
mov
fdivl
jle
cmp
xor
cmp
cmp
dec
add
pop
fisubrl
inc
cmp
fwait
rolb
je
shrb
out
jb
or
jae
mov
push
inc
cmp
jne
stos
shl
popf
xor
gs
sbb
or
push
stos
into
xchg
xor
dec
sub
jge
xor
jl
mov
xlat
insb
lea
int3
jmp
add
mov
outsl
sub
inc
xor
aas
int3
shl
test
lcall
adc
xchg
lcall
gs
rcrl
jno
divb
or
scas
repz
fnstsw
and
andl
sbb
inc
add
sub
xor
mov
xlat
cmp
fidivrl
mov
out
int3
adc
aad
pop
shll
add
push
jo
js
fs
dec
shl
pop
pusha
jl
in
ss
inc
jo
cwtl
mov
xchg
mov
out
or
shlb
add
aas
movl
lock
rcrl
adc
dec
sbb
fldt
sub
popa
jb
or
daa
std
cmp
int
or
sbb
adc
xchg
cltd
hlt
jge
and
in
arpl
mov
xchg
dec
je
mov
ja
sub
les
xchg
cwtl
mov
testb
ljmp
xlat
sahf
loop
call
lods
push
pop
cwtl
js
jp
fnsave
gs
xchg
rorb
popf
in
add
hlt
pop
leave
daa
fstps
daa
stos
pusha
adc
mov
jnp
imul
pop
sub
add
or
jp
cmpb
mov
dec
inc
cli
test
dec
aaa
ret
lea
adc
mov
cs
sbb
test
test
jl
rolb
bound
xchg
sub
pop
jmp
int
scas
mov
cld
push
sbb
sbb
sbb
mov
adc
mov
lea
jle
push
mov
cmp
iret
int3
pop
mov
add
push
adc
into
pusha
repz
xor
adcl
repnz
sti
and
lds
inc
dec
les
call
xchg
std
mov
popf
jb
push
imul
cwtl
loopne
outsl
in
dec
into
stos
push
icebp
inc
push
push
dec
pop
xor
or
xchg
and
std
imul
inc
nop
in
movsl
pop
cmp
sbb
dec
xor
add
sub
dec
inc
cwtl
add
call
push
lods
stos
jae
cs
jno
in
push
test
push
mov
sbb
jae
out
pop
outsl
mov
jnp
push
ret
and
dec
pop
in
mov
sub
sbb
cmp
or
cmpl
loop
and
mov
adc
fstps
mov
notb
and
push
xor
negb
out
mov
pop
divl
lds
out
out
stc
rclb
stc
jl
adc
or
pop
cmp
mov
je
pop
jo
aaa
jge
sbb
sbb
cli
leave
jl
enter
jl
rcrb
push
sbb
sbb
xor
adc
loopne
mov
pop
pop
gs
or
notl
mov
aas
andl
push
dec
and
aad
inc
mov
ret
fistps
outsb
dec
addb
jge
push
bound
int
outsl
xor
into
add
inc
adc
xchg
jge
pop
test
adc
repz
xor
inc
dec
push
ljmp
testl
scas
gs
fdivrl
xor
cmpb
jae
lahf
inc
and
sub
shr
dec
mov
repnz
cld
dec
imull
mov
das
add
xchg
icebp
mov
xchg
fstpt
fisttpll
gs
dec
aaa
mov
cli
fcmove
inc
scas
mov
paddw
test
sarb
and
and
call
lret
sub
stos
stos
mov
adc
inc
negl
lcall
ds
jo
jbe
test
or
arpl
movsl
pop
and
lods
mov
mov
push
xchg
sbb
jo
sbb
dec
xchg
cmp
adc
and
pusha
arpl
mov
inc
dec
adc
jo
test
cmp
mov
pop
mov
or
adc
repnz
mov
or
sbb
adc
cld
adc
mov
daa
jge
mov
push
add
gs
dec
fiadds
lock
xchg
sbb
mov
or
fadds
imulb
lea
test
mov
inc
das
or
imul
pushf
fldln2
or
sub
xchg
xchg
in
dec
out
sub
pop
and
inc
pop
jo
jecxz
hlt
sub
or
xchg
push
incb
out
das
cmc
pop
or
push
fcomip
dec
call
cmp
gs
jg
mov
mov
nop
sbb
cmpsb
mov
test
jb
xor
and
ja
jmp
push
das
cmpsl
xchg
in
push
jae
lea
jge
pop
mov
ds
add
inc
notb
loop
or
std
cmp
lods
lret
out
mov
aaa
add
or
dec
mov
dec
and
int
loope
je
mov
mov
add
sub
push
pop
mov
inc
lock
repz
mul
sbb
add
ret
adc
sub
xor
pop
dec
add
addr16
shlb
pop
das
stos
scas
lods
ljmp
insb
xor
dec
mov
xor
cmp
mov
add
mov
outsl
int3
add
sarl
xchg
out
xchg
scas
adc
pop
cmp
fsubrs
mov
mov
aad
aaa
dec
jne
stc
mov
mov
or
ficoml
add
mov
adc
addl
ret
jl
les
stc
cmp
and
mov
lock
int3
mov
adc
pop
cld
subb
sub
hlt
xchg
out
inc
ds
sbb
fisubrl
mov
jnp
loope
pop
mov
int3
mov
inc
in
sub
lods
js
pop
dec
xor
data16
out
clc
cmp
xlat
push
dec
les
stos
inc
outsb
divl
pop
push
cmp
nop
cmp
jg
loope
jnp
jb
aad
sub
sbb
outsb
sar
adc
cmp
adc
pop
popf
cmp
mov
enter
inc
popa
sbb
shr
cmp
ja
insl
gs
inc
adc
enter
adc
bound
test
loopne
adc
dec
sti
cmc
push
pop
and
sahf
or
pop
pop
cmp
and
mov
add
es
sub
bound
jns
lret
imul
jae
jae
add
dec
push
es
enter
add
lock
movsb
stos
jbe
jbe
lock
cmpsl
sbb
or
popa
push
outsl
imulb
add
xchg
push
inc
push
mov
adc
xor
jp
popf
inc
aaa
decb
pushf
dec
je
orl
sarb
sbb
movsb
cs
out
cmp
pop
inc
lret
adc
lock
fs
mov
in
test
adc
or
fs
sub
sbb
shll
cmp
jno
or
outsl
push
fisubrs
data16
not
fistps
dec
mov
push
jnp
test
and
sub
inc
push
xor
push
adc
mov
dec
popa
dec
or
dec
mov
loope
out
mov
int3
jecxz
outsb
lods
pop
adc
sub
stc
mov
xchg
lea
inc
mov
shlb
arpl
adc
test
xor
sarb
push
xchg
ljmp
mov
add
cvtpi2ps
aad
outsb
sbb
bound
stc
mov
adc
gs
mov
sbb
imul
or
testl
es
xor
dec
pop
movsb
fldl2t
mov
mov
imul
jl
sbb
pop
inc
sbb
inc
out
jl
out
aam
sub
and
ja
add
or
jecxz,pt
lret
lcall
adc
pop
movsl
or
mov
dec
push
mov
outsb
mov
jecxz
xlat
xlat
xor
xchg
pop
xchg
lock
or
fisubrs
movsb
fwait
out
in
out
imulb
xchg
jne
icebp
jb
jecxz
outsl
dec
fmull
push
mov
xorb
and
xchg
jle
mov
jne
jge
pop
sbb
insl
adcl
fucom
in
adc
mov
movsb
push
mov
mov
hlt
lods
jecxz
add
inc
rorl
ret
inc
mov
mov
stos
cmp
lret
repz
sbb
into
out
out
inc
xor
push
mov
cltd
inc
lcall
pop
fwait
shlb
and
xlat
jmp
push
nop
popf
push
push
cmc
mov
sbb
addl
dec
sbb
cmp
imul
outsl
out
xchg
cmpl
iret
dec
imul
add
aas
enter
add
mov
decl
push
cmp
jmp
out
and
data16
xor
jle
mov
leave
inc
cmp
data16
or
mov
jg
or
rcrl
popa
inc
jle
lds
js
inc
lods
ljmp
outsl
mov
and
and
les
inc
sub
movsb
jle
insl
scas
lahf
je
test
cwtl
mov
out
xchg
in
mov
xchg
arpl
scas
lods
xor
push
xor
or
mov
xchg
inc
inc
mov
data16
lods
adc
jecxz
lds
jae
imul
rcll
mov
lahf
cmpsb
mov
stc
fwait
out
sub
xchg
and
loopne
ljmp
mov
repnz
arpl
pushf
test
popa
ds
jg
or
pop
adc
add
cltd
jg
aaa
arpl
dec
xchg
xor
inc
ret
or
cltd
scas
push
cmc
repnz
rol
xchg
ret
std
clc
xchg
xchg
inc
fnstcw
mov
sub
rep
nop
adc
lret
add
mov
push
lret
mov
ret
inc
adc
pushl
jno
mov
repnz
jle
fbld
sub
test
or
lret
cmp
mov
lods
insb
lret
mov
adc
enter
push
dec
outsb
mov
inc
sub
xlat
pop
cltd
ja
or
pop
sbb
mov
or
pop
sub
xor
ljmp
xchg
mov
or
mov
push
aaa
pop
dec
outsl
js
sahf
loop
add
xchg
stos
mov
enter
inc
mov
push
cmpsl
xchg
mov
cwtl
aas
testb
mov
inc
lds
add
aad
pusha
mov
sti
dec
adc
push
cmp
adc
mov
push
adc
xchg
std
push
add
cltd
and
xchg
out
jge
push
adc
lcall
push
jno
ds
dec
repnz
lret
repz
gs
idivb
dec
sub
shlb
jle
sub
mov
fmulp
push
jecxz
fbld
jmp
mov
mov
hlt
or
rcrl
cld
and
clc
xchg
orl
sub
mov
pop
fs
and
outsl
aam
cmp
xorl
in
daa
loopne
sarl
das
and
push
popa
sbbl
mov
std
fidivrl
mov
and
int3
pop
das
xor
xchg
mov
or
dec
lcall
pop
filds
add
in
xor
inc
test
push
push
mov
xchg
xor
add
cmp
loop
sbb
js
roll
jmp
and
outsb
scas
sub
arpl
or
cmp
leave
mov
jmp
out
cld
shlb
cld
cmp
stos
pop
inc
lret
sub
xlat
repnz
push
add
cmc
js
mov
or
sbb
dec
or
aaa
ljmp
dec
jno
and
lahf
pop
out
push
and
cmpsb
mov
sbb
pop
pop
inc
jne
out
xchg
or
rcrl
and
out
xchg
movsl
push
xor
arpl
int3
cmp
or
imul
data16
lds
cmp
add
xchg
or
add
push
adc
lahf
pushf
mov
pop
sti
decb
jle
mov
dec
sub
mov
dec
fcomp
es
mov
hlt
add
pop
inc
outsb
test
jb
pop
arpl
pusha
andl
lret
cmpsl
call
cmpb
fdivrs
and
mov
sbb
mov
dec
pop
stos
fs
pop
notl
cld
fcoms
xor
jbe
test
cwtl
dec
jp
inc
adc
push
lret
cli
add
imul
add
inc
ficoml
jne
xchg
add
out
jg
imull
jecxz
fisubl
mov
mov
cmp
rclb
sbb
mov
push
dec
fcoml
inc
mov
jns
shl
sahf
es
lret
jle
mov
sti
mov
mov
add
mov
dec
add
jmp
dec
sti
aam
xchg
push
sbb
xchg
mov
daa
xchg
mov
xor
ds
cmp
add
dec
dec
mov
xor
decb
and
rcrl
mov
jp
in
adc
xor
punpckhwd
mov
dec
mov
and
xor
pusha
jmp
psraw
cwtl
or
jp
and
jmp
or
test
mov
sub
xor
mov
popf
xor
mov
xor
mov
std
push
rcl
unpcklps
sbb
insb
pop
dec
push
push
rclb
leave
and
in
lods
mov
mov
stc
test
es
daa
movsb
lods
or
ss
sub
cmpsb
jl
mov
in
push
cli
hlt
inc
imul
iret
mov
stos
es
push
mov
dec
and
fistpl
or
and
mov
inc
lods
jo
ret
xor
movsl
xchg
add
cs
jne
jge
enter
pop
movsl
fstpt
lods
mov
mov
mov
push
data16
adc
mov
movsb
insb
decl
lahf
dec
mov
cld
aad
loop
aad
sub
sahf
inc
mov
adc
sbb
xchg
je
jno
movsl
jb
hlt
adc
inc
xor
test
stos
lods
and
dec
xchg
mov
test
in
int
mov
or
adc
jmp
lds
out
sbb
dec
push
jnp
push
lds
jecxz
sub
cli
out
lods
shrb
lods
pushf
mov
sub
xchg
xor
pop
dec
sbb
mov
add
popa
dec
jle
inc
les
jge
stos
dec
adc
pusha
cmp
pop
mov
jns
loop
cli
aas
dec
sbb
inc
add
lods
jns
aam
ror
mov
stos
mov
dec
lods
rcl
cmp
cmpb
dec
lcall
jmp
cs
adc
pop
jle
negb
dec
inc
test
xchg
mov
jmp
scas
mov
ss
cmp
jp
mov
pop
xchg
test
imul
mov
pushf
and
shlb
call
stc
xlat
dec
or
pop
adc
lret
xor
push
jl
jg
or
inc
mov
test
subl
mov
loop
jo
ret
test
mov
pop
test
xor
adc
test
cmpsb
lret
xor
xchg
add
jecxz
inc
imull
dec
je
in
mov
stos
das
iret
push
mov
sbb
mov
xor
inc
out
and
in
out
ret
jle
sub
movsl
and
aaa
nop
shrl
mov
jno
enter
jg
and
sahf
ss
xor
adc
sahf
cld
jne
jae
adc
sbb
fisubrl
lea
adc
insb
pushf
mov
jne
push
jmp
mov
mov
rcrb
stc
lret
sbb
xor
in
test
aad
in
inc
cld
mov
dec
xor
mov
rorl
sbb
shll
adc
push
or
shll
pop
dec
push
mov
call
sbb
and
gs
rcrb
adc
sahf
out
push
out
movsl
mov
cwtl
int
mov
sbb
xchg
test
push
loopne
testb
xor
xchg
lea
or
out
cmp
add
mov
mov
and
std
mov
enter
inc
and
xchg
cmpsl
push
popf
mov
cmc
aas
pop
dec
mov
dec
pop
fs
adc
mov
dec
xor
ss
cmc
je
hlt
cmp
mov
pop
dec
inc
ret
imul
xchg
lods
cli
dec
dec
xchg
lds
jbe
dec
jg
xchg
clc
push
or
gs
sub
mov
test
mov
push
sub
leave
push
arpl
jno
rcrl
jl
adc
xor
pop
loopne
fildll
push
imul
lahf
orl
arpl
aas
sub
ds
mov
pop
insl
dec
inc
ja
lret
sub
pop
in
gs
xchg
nop
std
mov
cmc
or
movsl
jecxz
popf
mov
aad
push
pushf
inc
dec
push
xchg
sarl
iret
clc
aad
and
loop
push
mov
leave
call
lods
clc
mov
idivb
jbe
cwtl
scas
cli
mov
popa
nop
and
lods
pop
jl
dec
xor
adc
mov
lea
hlt
js
push
inc
and
daa
sub
cmp
test
inc
outsb
fdivs
stc
mov
and
in
adc
imul
scas
xchg
sbb
mov
dec
dec
clc
outsb
scas
lds
mov
cld
roll
fiadds
jns
lret
rcll
cmpsb
jbe
adc
xor
cmpsb
pop
jg
mov
sub
jp,pt
fucom
cmpsb
lds
sbb
sbb
xor
loopne
inc
mov
xchg
jecxz
push
sahf
test
testb
pop
push
fdivs
incb
cli
cmp
cs
sbb
and
and
pop
sar
imul
jg
fcoml
lret
adc
push
pop
jbe
mov
movsl
mov
jns
xchg
movsb
int3
fidivrl
imul
jmp
sub
mov
dec
test
cli
in
imul
shlb
aad
push
adc
fiadds
mov
mov
pop
mov
xchg
jle
xlat
add
sbb
push
mov
cs
dec
push
jne
mov
dec
mov
mov
lock
sar
repnz
in
aam
or
mov
push
test
dec
adc
fwait
icebp
cli
xchg
inc
dec
mov
outsl
out
xor
and
push
push
clc
mull
mov
test
jns
xlat
iret
xor
ret
xor
jmp
out
xchg
insl
push
dec
leave
add
les
in
cmp
bound
mov
mov
mov
mov
das
push
add
add
push
test
lret
nop
mov
xchg
pop
scas
jmp
movsb
adcb
sbbl
in
inc
jno
inc
adc
mov
adc
popa
stos
and
push
out
shl
or
cmc
sahf
xor
fildl
ljmp
sub
cmp
jbe
jge
pop
mov
sub
cwtl
int
inc
pusha
xor
push
ds
inc
mov
push
and
ja
mov
ret
aam
mov
and
adc
fwait
movsl
mov
dec
adc
cmp
and
lea
leave
cmpsb
shrb
and
iret
add
pop
imul
add
test
out
dec
gs
mov
xchg
hlt
pusha
iret
aad
addr16
adc
clc
xor
cmpsl
push
lret
sarb
outsb
inc
pusha
pop
add
jge
pop
out
sahf
fsub
dec
mov
jge
leave
cltd
inc
and
xlat
out
add
add
enter
or
lret
xor
push
jmp
lods
jle
cmp
andb
sarl
push
mov
enter
mov
movsb
adc
xor
ljmp
jp
mov
int3
imull
sbb
xchg
pop
mov
je
test
pushf
ret
dec
xor
ror
push
loope
mov
arpl
sbb
mov
jne
loope
mov
lcall
dec
sub
sub
pop
cmp
jbe
sub
outsl
adc
test
mov
data16
mov
enter
add
sahf
lgs
clc
and
jp
mov
inc
sub
adc
mov
imul
imul
or
adc
xchg
jbe
mov
adc
mov
inc
cmp
js
stos
mov
xorb
jmp
pop
pop
jecxz
and
gs
add
jmp
xchg
mov
mov
scas
xchg
xor
imul
adcl
add
mov
mov
inc
push
push
pop
jnp
mov
and
popf
dec
dec
ljmp
je
xor
sbb
in
pop
jno
add
or
es
sbb
ja
test
dec
sbb
cmp
mov
adc
sbb
pushf
call
fistpll
cltd
xchg
test
test
xlat
mov
sbb
loopne
dec
daa
adc
add
stos
xchg
lods
call
sahf
aam
add
loopne
xchg
cmp
sub
cmp
jns
je
ds
inc
lods
lret
pop
test
add
push
push
stos
sub
pop
in
jl
and
jle
aam
pop
imul
test
inc
add
adc
fsts
or
rcl
pop
mov
xlat
setnp
mov
add
fisubs
adc
fcmove
inc
cmpsb
jbe
inc
out
insb
add
push
mov
sub
sbb
and
sbb
pop
bound
or
adc
jg
mov
ficomps
fldenv
mov
rcl
jge
icebp
fisttps
lds
inc
cld
mov
adc
or
jno
test
cld
sbb
xchg
sbb
jmp
jo
sbb
and
test
dec
int3
push
mov
xor
xchg
popf
call
stc
or
cmp
mov
divb
lret
add
xchg
xchg
and
lret
xchg
mov
shlb
dec
ret
adcl
cmp
push
mov
in
mov
fldt
push
add
push
ret
sbbb
xlat
add
dec
sub
mov
rdmsr
rorb
out
or
xchg
sahf
repz
add
jmp
lea
push
jecxz
fxch
pusha
jmp
sub
lcall
je
and
jecxz
mov
pusha
ss
xchg
jbe
mov
jmp
lret
dec
dec
sbb
mov
jne
mov
push
in
fiadds
jb
and
orb
es
cltd
xor
push
and
dec
jo
rcrb
sub
mov
lret
sbbl
xchg
imul
jle
dec
xor
lahf
aaa
mov
sub
scas
rorl
adc
mov
aas
jns
mov
jno
jo
cmp
lret
in
lret
pop
je
push
sti
sub
sub
das
xchg
adc
xchg
sbb
xchg
jae
mov
mov
add
push
test
xor
sbbl
mov
ja
jns
hlt
xor
mov
mov
or
out
inc
mov
xor
stc
mov
jecxz
int3
jo
add
sub
scas
mov
jmp
ds
sbb
push
inc
xor
xchg
in
cld
ljmp
lea
rcl
out
cmp
aaa
sbb
or
pop
out
cmpsl
mov
fldenv
int
cmp
out
lds
mov
add
cld
xor
mov
xchg
fisttps
cwtl
and
jecxz
push
jecxz
xor
stos
in
out
xor
dec
pop
int
int3
dec
movsl
xor
lock
lahf
cmpsb
popa
inc
jne
decb
cmp
push
sar
adc
inc
push
aaa
add
pop
sbb
mov
fucomp
shrl
or
stc
and
xor
dec
idiv
fisttpl
bound
xchg
adc
mov
sbb
lea
sub
es
inc
jo
stos
fcompl
loope
sub
xchg
mov
jne
inc
int3
fwait
mov
in
or
in
mov
and
jae
lahf
push
adc
pop
adc
xor
pusha
cld
sub
ljmp
lcall
cmp
imul
ret
les
lea
std
scas
repz
enter
inc
in
cmp
jno
sub
mov
add
or
subl
imul
xor
addr16
jecxz
dec
loopnew
lret
cmp
lret
repz
add
push
bound
dec
seta
dec
inc
and
out
pop
jne
add
xchg
mov
ljmp
cwtl
int
mulb
mov
sbb
adc
and
xor
adc
mov
js
enter
out
jge
add
push
int
sub
dec
sub
out
pop
addr16
imul
and
dec
rol
mov
cmp
dec
stos
fisttps
aas
les
fidivl
jns
clc
stc
in
mov
stos
push
jmp
and
jp
sti
mov
ret
aas
shr
in
idivl
pop
notl
add
adc
push
popa
imul
scas
push
das
fidivrs
pop
sbb
mov
fistl
adc
imul
sbb
jg
adc
xor
add
sub
cmp
dec
repnz
or
and
bound
test
scas
cmc
or
push
ljmp
cmp
and
dec
inc
xchg
daa
test
pop
aam
mov
outsl
sti
and
xlat
sahf
xchg
and
inc
packuswb
mov
jge
ja
repz
clc
out
enter
add
add
mov
movsb
or
inc
sub
pop
jnp
push
push
inc
pop
lods
push
add
lds
xchg
loope
stos
scas
xor
fidivrs
inc
xor
icebp
repz
ljmp
ja
jae
lcall
mov
inc
sub
aad
ret
xchg
mov
mov
int
adc
push
cmc
and
movsl
jns
push
push
jnp
cli
gs
lret
sahf
adc
jnp
sarl
fldl
mov
jecxz
cmpsb
mov
mov
lods
into
xlat
loop
rorl
loopne
call
outsl
jecxz
daa
ja
inc
mov
inc
mov
insb
add
out
ja
cld
jbe
out
pop
push
dec
mov
push
inc
icebp
pop
xchg
es
add
rorl
pop
xor
nop
push
shrb
pop
mov
rep
pop
xor
sub
sarb
loope
ret
loop
inc
test
xchg
lds
insl
adc
ja
xchg
pushw
test
jne
fsubr
pop
push
add
rclb
xchg
scas
push
push
fld1
decb
bound
in
sub
in
sbb
loopne
and
inc
cli
or
push
inc
fisubrl
mov
xor
inc
push
popa
inc
add
mov
xor
add
xor
mov
cmp
clc
dec
movsb
inc
sbb
jo
sub
inc
pop
add
das
sub
mov
sub
fwait
jle
fdivr
xor
xor
xchg
mov
mov
add
cmpsb
xchg
ja
sub
jae
pop
mov
fbld
lret
xor
pop
xchg
jb
cltd
shl
inc
jle
mov
addr16
les
jno
jno
test
mov
int3
mov
dec
loope
out
negb
sbb
ljmp
mulb
jns
adc
jg
fistps
push
flds
jge
pop
adc
mov
sbb
ror
and
cli
aas
xchg
pop
mov
lret
cmp
ja
adc
aaa
push
popa
xor
sub
enter
neg
mov
insl
mov
and
daa
jl
js
push
movsl
sub
jne
fidivrl
sti
outsb
sbb
dec
popa
push
dec
fiaddl
aam
adc
mov
sub
bound
xor
jecxz
xlat
addb
stos
mov
sub
loopne
mov
or
jle
dec
int
out
cmpsl
clc
sarb
pop
mov
aaa
pextrw
mov
pop
inc
xor
faddl
shl
shl
push
sbb
pop
push
fidivrs
cwtl
movsl
ss
cmp
pop
pop
xchg
add
stos
push
adc
xchg
mov
stos
mov
test
lds
add
movl
popa
mov
ljmp
push
sbb
aad
mov
add
cmp
xchg
inc
rorb
fildll
lret
inc
push
pop
adc
in
idiv
fildl
ds
sahf
xchg
inc
mov
cmp
sbb
ret
adc
in
pop
ret
int3
inc
pop
inc
and
mov
jb
bound
xchg
mov
enter
pushf
dec
daa
jg
push
pushf
cmpsb
add
cmp
fmul
sub
cmp
popf
imul
or
sbb
push
adc
sbb
mov
jo
loope
imul
mov
ret
movsl
push
imul
rcl
mov
jbe
movsb
stos
stos
outsl
sbb
outsl
shll
sbb
or
push
cmp
sbb
scas
testl
shlb
sub
orl
pop
aad
loopne
fadds
dec
xor
cltd
movb
out
mov
xchg
jb
pop
xchg
insl
jmp
jle
lock
int
xchg
mov
push
je
or
mov
push
xrelease
aas
pushf
sub
push
mov
imul
ficoms
pusha
mov
push
sahf
test
xor
or
xchg
or
mov
dec
push
scas
imul
ja
je
xor
leave
mov
adc
data16
pop
es
dec
cmc
mov
jne
sub
cmp
xchg
hlt
xor
in
fs
test
dec
cwtl
sbb
inc
ss
mov
add
push
repnz
divl
fistps
jp
loop
jl
push
divl
mov
fwait
or
mov
fsubl
dec
dec
inc
aaa
outsl
add
push
mov
adc
sti
imul
sub
dec
repnz
push
fmuls
xor
data16
pop
dec
fistl
mov
pop
or
xor
fadd
icebp
mov
ret
cmpsb
pop
jle
push
mov
mov
cmp
stc
push
pop
out
add
mov
ja
mov
cmpsb
push
pop
outsl
adc
fisttpl
outsb
pop
jb
outsb
add
jecxz
iret
lods
sub
std
xor
std
popa
xchg
call
mov
scas
fsubr
enter
inc
fldl
adc
pop
pop
xchg
mov
cmp
mov
arpl
push
or
popa
cmp
movsb
lea
pushf
dec
sahf
push
mov
test
xchg
ja
add
cwtl
jmp
lahf
dec
dec
sub
cmp
sub
mov
int
xchg
cmp
or
mov
push
or
mov
dec
lret
fs
jns
imul
jne
ret
pop
push
test
sub
add
cmpsl
mov
addl
aaa
les
insl
in
pop
mov
lret
push
cltd
or
adc
mov
out
jmp
loopne
xchg
mov
movsb
xchg
in
push
repnz
jo
lcall
scas
add
cld
xchg
mov
loope
popa
sahf
mov
push
adc
in
mov
dec
sub
add
fwait
and
xorb
xchg
jbe
mov
jl
mov
bound
add
std
jp
pop
pop
xchg
test
call
sbb
or
cmp
sbb
lea
mov
xlat
cmp
lcall
int3
push
adc
jae
ds
xorl
in
dec
shr
stos
stos
mov
sahf
popa
xlat
dec
aaa
inc
fists
mov
mov
js
xor
mov
call
data16
sbb
jnp
in
dec
xor
in
inc
ss
hlt
out
fstps
dec
out
mov
inc
aam
icebp
pop
cld
hlt
imul
adc
push
xchg
arpl
bound
enter
cmp
out
xchg
and
fidivrl
data16
fdivrl
clc
pop
ds
icebp
imul
pop
push
push
sti
jb
cli
orl
jo
sbb
lret
lock
mov
lods
sub
insb
mov
xchg
cmp
inc
sub
xorl
into
mov
sub
std
pop
inc
dec
clc
and
test
add
pop
or
add
or
pushl
dec
pop
xorl
pop
aad
xor
dec
or
arpl
std
lahf
pop
addb
mov
sbb
cmp
loop
push
xchg
lret
leave
jmp
or
push
pop
dec
fwait
mov
jne
insb
divb
xor
cmp
adc
loopne
cmp
pop
aam
dec
loopne
ret
or
cmp
imul
push
xor
or
ret
sub
push
sub
divb
je
sub
out
js
lea
btr
xchg
into
lds
push
and
pop
xchg
sbb
push
sub
or
in
aad
fs
je
xchg
outsb
mov
mov
rorb
lahf
cmp
adc
imul
xchg
int
pop
daa
insb
mov
fdivr
addr16
fisubs
int
xchg
subb
inc
inc
lahf
xchg
stc
adc
xor
adc
jl
jmp
cwtl
add
jg
fmul
lods
xchg
iret
imul
sti
xor
sti
aad
cmp
or
jle
jge
pop
or
sub
dec
adc
cmp
fmuls
push
pop
loope
cmp
shrl
xchg
inc
xchg
xlat
jge
jnp
adc
mov
jg
ret
call
and
push
out
ja
pop
xchg
mov
mov
arpl
mull
int
cmp
mov
adc
fistps
and
imul
jb
fsubrs
cmpsb
xlat
inc
daa
pop
mov
lds
mov
es
sub
imul
cld
into
inc
das
jns
scas
xchg
inc
dec
mov
pop
ret
lret
dec
sbb
inc
jecxz
xor
cs
outsl
adc
inc
andl
jge
add
inc
xor
lret
inc
ljmp
lock
shll
sub
fldcw
push
push
lcall
mov
pushf
sti
push
mov
fidivs
sub
or
pop
inc
fcomps
aaa
push
inc
bound
clc
jecxz
jne
imul
or
or
push
adcb
mov
pop
pop
mov
pushf
mov
push
shl
test
lahf
pop
or
pusha
pop
loop
call
fmull
push
xor
inc
pop
int3
shlb
and
sub
lret
test
imul
movsl
rcrb
mov
bswap
icebp
hlt
bnd
dec
outsb
inc
jmp
push
fwait
add
scas
sub
mov
pop
mov
inc
add
cmp
repnz
mov
xchg
movsb
mov
icebp
rol
and
xlat
or
xchg
inc
loopne
sbb
dec
loope
cs
cmpsb
call
mov
cmpb
into
xor
push
adc
mov
lods
and
leave
fisttpl
std
and
mov
push
jbe
sbb
aas
outsb
repz
repz
call
test
mov
loopne
jle
addr16
pop
mov
pushf
arpl
mov
mov
js
sbbb
outsl
jb
mov
push
lods
xchg
jl
stos
dec
int3
sar
or
sbb
insl
lea
dec
daa
and
push
mov
and
push
pop
jp
popf
daa
js,pn
aas
mov
and
fdivrl
xorb
rclb
jmp
xor
pop
scas
std
test
lock
data16
mov
add
imul
test
outsb
sub
cli
jnp
out
aaa
fiaddl
sub
ja
jo
sub
lahf
lcall
loop
enter
xor
or
inc
dec
roll
jmp
dec
pop
pop
ljmp
paddb
pop
mov
adc
cltd
xchg
mov
push
int
pop
cmc
mov
cmp
and
subb
mov
movsl
cmp
mov
push
clc
jmp
sub
mov
inc
push
sahf
xor
arpl
loope
mov
into
mov
pop
xor
pop
inc
subb
mov
add
lahf
and
out
repnz
mov
lret
in
xor
frstor
xor
xor
fwait
adc
popf
rcl
out
pop
fwait
lret
fxch
dec
cs
fldcw
push
rclb
dec
jno
pop
or
lahf
xchg
in
or
daa
pop
or
fidivl
clc
push
pop
or
adc
mov
int3
cmp
mov
jmp
test
gs
repz
add
outsb
mov
out
xor
in
xchg
dec
scas
ljmp
sbb
repnz
insb
mov
pushf
sbb
int
aad
mov
icebp
and
jnp
mov
std
adc
test
xorl
push
mov
jp
cmpl
std
clc
jmp
mov
push
hlt
lds
push
dec
sti
mov
jge
aam
dec
stos
out
adc
iret
icebp
cmpsl
mov
jno
pop
imul
cmp
inc
pop
repz
inc
out
and
push
xor
cmp
dec
ja
push
cmp
xchg
jnp
ret
lea
imul
loope
mov
mov
cwtl
dec
in
add
sub
cmpsb
jle
cmp
stos
mov
out
xchg
loopne
dec
jo
ret
shrb
push
fwait
std
aam
push
lds
jne
dec
popa
cmp
imul
dec
testb
pop
ljmp
adc
fwait
pop
pop
pop
xor
loope
xor
out
cltd
dec
loope
lcall
loope
mov
outsb
xor
unpcklps
into
push
sarb
jl
scas
add
dec
loope
stos
xchg
pushf
jbe
popf
mov
or
inc
out
sbb
push
adc
jp
xor
dec
fxch
fisttpll
test
xor
sahf
js
sahf
or
outsb
push
imul
push
jne
add
loop
xchg
mov
mov
jg
mov
js
xchg
std
or
loopne
ficoml
pop
popa
movsb
mov
dec
jo
nop
sbb
daa
popa
sarl
push
or
pop
pop
push
shll
lea
pop
fnstenv
add
jmp
mov
outsb
nop
popa
das
stos
pop
sbb
inc
jne
fstpt
fisubs
in
inc
and
jmp
jb
neg
sub
pop
push
cmpsl
shr
or
test
or
adc
jns
fcoms
imul
popf
sub
xlat
lods
mov
ret
xchg
jb
pop
mov
push
mov
and
in
cmp
sbb
je
ret
or
xor
mov
jg
jmp
xor
jb
fdivs
bound
lock
scas
mov
jnp
shll
adc
sub
fldt
into
add
xchg
in
xchg
sub
stc
aaa
sub
adc
inc
iret
jbe
inc
jmp
add
mov
es
icebp
out
icebp
stc
popf
pop
outsb
loopne
xlat
sbb
sub
xlat
pushf
push
shlb
mov
mov
jne
loopne
jo
inc
dec
cmp
sbb
pop
and
jmp
insb
imull
adc
jp
mov
jb
push
stos
rorl
or
xor
insb
lret
mov
ss
out
js
sub
dec
sbb
push
insl
sub
data16
addr16
fisubs
cmpl
push
ja
add
insl
mov
shll
dec
jns
callw
inc
fucomip
jne
mov
jecxz
jb
jle
leave
pop
lret
movsb
mov
sbbb
push
mov
clc
fidivl
bound
inc
jle
shll
jne
lods
xor
int3
lock
jns
icebp
cmpl
mov
sbb
xchg
and
les
push
enter
xchg
test
mov
sub
fbstp
mov
push
push
xor
mov
jbe
repz
movsb
xor
inc
cs
mov
icebp
and
cmp
inc
pop
mov
fwait
repz
dec
out
aam
icebp
add
jecxz
repnz
imul
dec
je
repz
int3
sbb
imull
inc
loop
out
cmp
cmp
test
xorl
sbb
scas
adc
add
mov
sbb
inc
push
dec
or
lods
sub
inc
pop
loop
mov
and
adc
add
mov
js
cmp
jge
daa
test
out
and
or
ds
xor
es
mov
cmovo
scas
lret
test
xchg
sub
mov
movsl
addr16
outsb
jecxz
dec
xchg
inc
inc
and
repz
jp
jge
loopne
imulb
sub
mov
dec
cmp
push
insl
ret
mov
mov
std
add
std
shrl
sbb
sti
cmp
xlat
xor
mov
sbb
add
mov
jmp
dec
jo
add
sbb
daa
testb
and
sahf
repnz
mov
push
lods
pushf
pop
sub
sbb
lock
jp
ljmp
fwait
outsl
mov
hlt
jmp
dec
outsl
fdivrl
and
int3
repz
mulb
pop
stc
jge
lea
das
jnp
sbbb
stos
ret
push
cmp
push
test
ret
dec
in
add
mov
repz
or
push
mov
xor
popa
mov
push
adc
push
gs
mov
mov
xor
mov
and
inc
test
inc
clc
xchg
xchg
repz
cmp
pop
jno
sbb
sbb
popf
aaa
int
cmc
or
lods
cmc
lds
imul
lds
data16
mov
push
shrb
leave
xor
and
jl
pushf
pushfw
jo
iret
add
add
mov
and
push
jnp
loop
scas
icebp
jg
xchg
adc
cli
leave
add
add
sbb
add
mov
shlb
pop
pop
mov
add
repz
jl
jmp
mov
pop
xchg
mov
add
push
dec
or
mov
pop
icebp
mov
add
add
pop
aaa
fbstp
insb
jmp
cmp
pop
pop
pop
or
in
insl
pop
std
mov
fadds
les
sub
rsqrtps
imull
fwait
pushf
adc
pop
mov
popf
je
out
test
int3
mov
nop
loopne
sbb
ljmp
xor
sub
xchg
lret
push
add
adc
cmpb
jg
sbb
jae
lods
xor
call
loope
into
cld
pop
or
loopne
lahf
and
js
jmp
shrb
pop
xlat
mov
xchg
out
outsl
std
sbb
pop
mov
lret
aaa
push
das
scas
jnp
out
cmpsb
sub
and
mov
xor
test
mov
xchg
and
lods
pop
dec
lcall
rorb
fisttps
mov
sbb
mov
cmc
xchg
in
rcrl
sbb
nop
inc
and
mov
lods
stos
pop
xor
mov
add
push
aas
testb
and
data16
mov
sub
idivb
xlat
divb
dec
aaa
adc
adc
fs
pushf
and
adc
sub
jb
int3
pop
sbb
lds
push
aaa
push
xor
inc
jno
pop
or
xor
sahf
imull
xchg
cmp
mov
fsts
test
push
in
test
les
int
aaa
rcll
jge
push
jnp
repz
xchg
push
jmp
outsl
lods
lahf
xchg
push
insl
jmp
mov
sahf
mov
adc
xor
inc
ljmp
pusha
xlat
and
data16
or
mov
test
ss
push
daa
movsl
add
rcrl
sbbl
mov
pop
popf
push
xchg
lret
bound
mov
xchg
push
hlt
adc
iret
jge
or
push
int
push
cmp
mov
jbe
inc
inc
imul
push
pusha
out
jne
lds
add
push
jmp
scas
inc
les
into
aas
jle
push
and
adc
fdivr
cld
adc
lock
or
shld
les
leave
std
test
and
jae,pn
add
mov
sbb
arpl
push
fstpl
inc
stc
push
mov
icebp
shrl
and
push
xor
cmp
and
lock
repnz
insl
pop
lcall
cmpsb
out
arpl
pop
imul
shrl
sub
iret
mov
push
or
adc
push
push
xrelease
adc
vcmppd
jp
xor
pop
loope
pop
mov
adcl
ds
std
xor
ljmp
sub
xor
pop
lret
cli
mov
imul
in
adc
fstpl
insb
lahf
gs
jmp
adc
ljmp
and
push
ret
icebp
jp
pop
sbb
or
mov
pushf
inc
leave
or
fidivl
pop
adc
in
jo
into
adc
push
lret
mov
popf
subl
dec
pop
pushf
jns
shr
cmp
cltd
hlt
add
or
les
mov
aaa
inc
sbb
in
pop
outsb
movsl
fidivs
pop
lods
sbb
or
sub
mov
dec
ljmp
rclb
mov
xchg
adc
lea
sbb
push
test
sub
xchg
jge
xor
mov
sarb
jbe
fimuls
leave
xchg
nop
jp,pt
add
push
sub
jl
cmp
sub
push
xchg
pop
movsb
test
xchg
fwait
cs
shlb
mov
rorb
out
leave
lret
fisubrs
add
inc
in
pop
and
movsl
insb
aad
mov
lahf
xchg
fstps
jp
clc
sti
add
jbe
adc
jp
cltd
lret
push
in
es
jl
or
and
outsl
scas
ds
or
mov
fsub
faddl
xchg
lret
push
cmp
sub
mov
jb
into
out
xchg
or
jne
fsubrp
pop
lea
out
cli
vprotw
mov
jns
bound
cli
test
pop
out
inc
or
cld
bnd
mov
pop
jo
and
cmovge
aad
stos
mov
inc
inc
add
movsb
nop
mov
cmp
popa
and
decb
xchg
push
lods
add
mov
adc
adc
push
ljmp
ja
imul
ljmp
aad
push
push
adc
mov
arpl
or
pop
pop
cmpsb
and
push
sarl
leave
xor
outsl
lret
je
adc
ljmp
mov
xchg
dec
lock
pop
add
push
sub
jp
dec
loope
movsb
xor
ja
testb
repz
in
jno
cmp
ds
jmp
cmp
dec
sub
bound
xchg
pop
jnp
sahf
adc
insb
or
arpl
faddl
sbb
or
cwtl
scas
pop
mov
xlat
xor
pop
xor
adc
testb
sarl
inc
adc
inc
adc
mov
lds
sbb
push
ja
mov
and
out
data16
lret
je
imul
in
or
mov
mov
cmpsl
inc
mov
sti
sbb
leave
inc
fisttps
insl
jne
dec
mov
rcrl
insl
add
mov
cmc
fmul
adc
test
aaa
test
mov
push
in
dec
pop
jp
xchg
arpl
pushl
mov
or
xlat
cmc
lock
jle
iret
loopne
sbb
jae
iret
adc
lea
sti
sbb
shrb
lods
sub
pop
repnz
push
jecxz
dec
inc
stos
lcall
insl
pop
sarl
pop
cmc
pop
lahf
outsb
stos
mov
cmp
fidivl
pop
inc
int
mov
adc
cmp
xchg
fdivrp
adc
mov
lret
sbb
jno
loopne
inc
and
out
add
dec
cli
add
xor
mov
fisubrl
cmc
or
lret
lret
rorb
test
xor
inc
and
pop
dec
xlat
inc
adc
icebp
mov
sti
ja
cwtl
lea
ret
lods
add
ror
cmp
stc
in
push
push
cmp
je
xor
push
sub
mov
push
and
jmp
pop
pushf
cmp
and
push
subl
push
adc
xchg
sbbb
add
mov
popf
cmc
cmp
les
and
clc
lret
mov
rep
xchg
or
sbb
addl
jae
lea
or
cs
or
cmpsl
push
sahf
push
and
fxam
mov
popf
in
fcmovnbe
sbb
psrlq
push
fwait
push
push
in
jge
fisubrs
cs
cmp
ret
cmp
int
test
mov
inc
int
fisttpll
out
xchg
sub
push
jle
fs
push
movsb
and
or
fs
push
inc
stos
adc
jo
xlat
push
push
jp
std
fwait
pop
fwait
repz
dec
ss
push
and
int3
lods
bnd
loopne
shl
scas
mov
jnp
pop
mov
cmp
adc
cs
insl
xchg
iret
jge
xchg
js
and
aas
outsl
mov
rcrl
sbb
xor
mov
mov
sub
and
sbb
and
lock
std
ljmp
je
xor
repnz
dec
mov
insb
xchg
push
shlb
lods
lods
push
mov
sub
push
loop
leave
scas
movsl
xor
std
fnstenv
cmp
add
xchg
gs
sbb
xchg
lret
sbb
jnp
xor
enter
aaa
mov
shll
or
gs
inc
icebp
les
xor
lret
sub
into
jl
mov
les
and
xchg
repz
ficompl
inc
cs
cmp
and
lahf
cmp
cmp
scas
movsb
sub
jno
mov
sahf
scas
inc
lods
and
test
push
adc
aam
cmpsl
cld
cmc
mov
add
jbe
stc
sbb
sbb
fs
mov
pop
xlat
dec
jl
out
mov
mov
outsb
cmp
stos
xlat
xchg
ja
pop
fcmove
xchg
sub
shlb
pop
and
cmp
pop
movl
dec
lcall
sub
inc
xor
inc
xchg
stc
xchg
out
mov
mov
je
xchg
adc
jo
cwtl
rclb
cld
push
pop
fcoms
mov
mov
or
pusha
pop
adc
lods
in
xor
jmp
aad
sub
rolb
pusha
sti
mov
and
cltd
mov
rcl
cld
sbb
imul
std
inc
ljmp
mov
add
cmp
in
bound
mov
mov
pop
pop
add
test
hlt
cmp
inc
ljmp
cmpsl
xlat
xchg
mov
ljmp
sub
sbb
push
pop
negl
lds
xchg
in
rorl
popa
and
pop
ja
dec
push
bound
test
out
negl
pushf
lock
rorl
jnp
pop
xchg
popf
subl
push
add
test
xchg
das
sub
add
jbe
jo
jae
xchg
sub
rep
sub
jb
add
shrl
pop
nop
sbb
lcall
shll
sbb
pop
mov
sbb
jmp
pop
push
sbb
adc
ficomps
xor
jnp
xchg
movsl
ljmp
mov
daa
scas
mov
cwtl
mov
xor
add
xorb
test
rcll
sti
lcall
fildl
je
sub
addl
outsb
cmp
pop
decl
cmp
out
push
call
xorb
sbbl
sub
loop
test
xor
cmp
mov
aam
xchg
cmc
rcrl
loopne
xor
ret
addr16
ljmp
daa
mov
sub
mov
fbstp
or
lea
outsb
nop
mov
mov
pop
sahf
outsl
les
in
addr16
pop
jnp
pop
je
lret
or
inc
xor
jno
jae
fistpl
push
mov
icebp
sub
repnz
inc
add
xchg
add
fnsave
in
push
test
fwait
xchg
scas
push
int3
hlt
jae
bound
mov
dec
ret
push
dec
call
ficoms
pop
jns
mov
mov
mov
or
cmp
add
insb
cmc
imul
outsl
adc
imul
in
lret
popa
pop
in
push
adc
mov
sbb
push
shll
scas
imul
add
dec
adcl
cmc
jo
ljmp
in
push
outsb
adc
jg
xor
jp
adc
xchg
xorb
sbb
lea
pop
push
pop
dec
shll
add
push
pusha
js
xchg
out
adc
clc
sbb
loopne
leave
mov
pop
xchg
xchg
mov
movsl
sbb
cwtl
data16
sub
sub
lods
xlat
or
inc
clc
adc
jp
push
cld
sbb
and
fstpl
mov
push
cld
mov
mov
cmp
js
push
stos
cmp
insl
jns
push
lcall
jb
enter
sub
dec
setns
insb
fwait
mov
push
std
or
lret
cltd
xchg
es
xchg
fldenv
mov
dec
scas
cmp
xor
push
aas
lret
and
pop
mov
pushf
sbb
cmp
fidivl
nop
insl
andl
fidivrs
jmp
repnz
or
pushf
daa
repz
push
fldl
cld
sbb
sbb
enter
shlb
sbb
jae
inc
rcll
lock
jmp
or
call
cmpsl
stos
jmp
movsl
rolb
in
jge
scas
daa
inc
outsb
insb
lea
out
cmc
icebp
mov
dec
cmp
out
xchg
nop
subb
adc
ljmp
and
mov
shlb
push
jge
faddl
inc
sub
jbe
mov
push
and
jbe
dec
xor
jno
cmc
dec
lods
lods
sbb
test
push
and
and
lahf
mov
repnz
mov
in
add
or
fsubrs
sub
push
aaa
gs
mov
mov
jmp
push
sub
cmp
out
aad
jb
xchg
adc
dec
test
pop
cmp
test
adc
or
out
xorl
add
rcr
daa
add
ficomps
mov
xchg
add
or
adc
es
push
mov
das
sub
cmpsb
icebp
xchg
jl
or
fdivr
call
mov
inc
push
fsubs
pushf
or
es
dec
add
pop
mov
and
pop
sbb
xlat
out
sub
clc
sbb
inc
ss
cmc
mov
xchg
xchg
sbb
jg
out
lahf
addr16
outsl
inc
push
cmp
dec
jo
mov
out
cwtl
mov
push
pop
fsubrl
inc
and
push
xor
gs
cli
pop
sub
push
loopne
adc
sbb
push
sbb
lgs
gs
loopne
ret
cmp
rcrl
ss
hlt
mov
jae
or
xor
popa
fs
push
jnp
lock
in
jp
movsb
test
mov
inc
ljmp
sahf
mov
xchg
orl
shl
dec
jo
pop
adc
sti
xchg
pop
mov
xor
jbe
xor
adc
outsb
fsubl
inc
mov
out
rclb
mov
ja
add
xor
lret
out
sbb
mov
arpl
test
inc
inc
test
dec
mov
repz
sarl
inc
movsl
into
outsb
call
sub
adc
pop
inc
les
fcompp
add
in
adc
insl
dec
add
sub
xor
hlt
dec
jmp
adc
xor
nop
add
mov
mov
and
push
test
rcrl
inc
pop
cmp
adc
dec
movsl
fcmovne
div
cs
das
xor
mov
out
xchg
sbb
stc
cmpsl
lock
jle
cld
xchg
divl
cld
mov
insl
pop
mov
and
fidivs
sahf
lcall
xchg
cli
cs
test
cwtl
sti
pushf
cmp
lret
in
hlt
sbb
cwtl
cwtl
cmp
mov
shll
negl
dec
mov
mov
cwtl
and
push
fsubrp
aam
inc
add
pop
shl
pop
add
pop
adc
sub
and
pop
call
push
aas
mov
xor
sbb
test
sub
ret
aas
fwait
push
int3
mov
xchg
jno
imul
xchg
mov
ljmp
mov
xchg
adc
addr16
jge
or
sbb
xchg
and
fs
or
mov
mov
jg
aas
jns
add
shlb
rclb
out
pop
add
scas
mov
movl
inc
dec
dec
loopne
cmpb
inc
xlat
xor
pop
lahf
insl
jnp
fnstcw
push
les
js
mov
add
pop
rorb
mov
ljmp
jl
dec
fisubrl
out
ljmp
popl
outsl
inc
lahf
or
test
mov
lods
lock
push
mov
cld
xor
sbb
inc
pushf
jp
sbb
xor
movsl
stos
jno
call
repnz
xor
xchg
test
imull
cmp
ret
mov
repz
shll
jle
push
inc
jmp
lea
cs
xchg
add
or
cmp
dec
or
out
jp
jmp
enter
stos
out
fdivl
and
cmp
push
xchg
pop
push
cltd
push
or
aas
scas
icebp
jge
mov
xor
and
bound
aas
adc
ss
or
cmc
xor
xor
mov
sub
xor
push
inc
xorl
xor
lds
lret
mov
imul
xor
xchg
cli
mov
stos
fs
inc
std
mov
lret
push
push
inc
pop
pop
jecxz
rcrb
aas
nop
adc
pop
fnstcw
jae
das
gs
cmpl
mov
lds
int
xor
and
shll
cmpsb
xorb
pusha
jno
js
loopne
clc
sbb
cmc
inc
cmpb
inc
jle
jno
xchg
sti
pushl
pop
xchg
mov
xchg
mov
pop
jmp
enter
or
stos
js
sub
xchg
inc
dec
add
xorb
aam
out
mov
in
in
add
gs
xchg
mov
jle
ds
cmp
out
inc
sub
add
cltd
add
mov
jecxz
sahf
mov
add
test
cli
fisttpl
cmp
pop
and
push
sub
xchg
inc
sub
les
pushf
lods
adc
jo
add
pop
outsb
or
xchg
sti
int3
and
std
jl
lret
push
rclb
mov
and
aam
mov
jmp
je
or
addr16
ja
mov
cwtl
pushf
sub
push
xor
lcall
inc
xchg
mov
jle
add
mov
xchg
dec
pop
mov
test
pcmpeqd
push
fisttps
clc
xchg
les
cmp
ficomps
cs
dec
rclb
mov
xor
xchg
out
xchg
push
mov
dec
xor
stos
daa
imull
cltd
xchg
flds
nop
pop
in
jno
push
ret
lock
aas
mov
stc
mov
mov
push
cli
add
add
test
sarl
xchg
sub
jne
cs
xlat
in
cmp
imulb
adc
dec
mov
mov
inc
ficoml
pop
pop
in
xchg
aaa
mov
cmp
in
mov
shld
adc
fwait
fs
xor
and
rcrl
repz
lods
xor
ret
xchg
or
aam
aaa
aas
ficomps
out
cmpsl
push
loopne
mov
push
inc
sarl
fmull
push
push
sub
mov
add
or
xor
aas
fsubl
int3
mov
addr16
mov
loop
dec
leave
imul
cwtl
jl
xchg
popw
repz
push
loopne
sbb
into
cmp
sub
fwait
xchg
pop
data16
and
adc
and
into
mov
clc
adc
sub
je
xchg
push
call
pop
out
lods
xor
aam
add
add
cmpsb
mov
xor
or
aad
fldl
add
push
aad
sub
xlat
mov
test
stos
insb
and
test
pop
and
mov
pop
rcr
cmp
sub
cmp
sub
push
int
scas
xlat
cli
inc
push
push
inc
rcll
xor
push
ljmp
out
daa
cmp
sbb
push
ss
popa
insl
div
into
les
aas
push
fstpl
dec
xor
push
add
in
int3
mov
add
push
out
pop
pop
mov
popf
mov
loopne
dec
xchg
sub
cld
jecxz
xlat
pop
insl
loopne
inc
lods
shll
mov
cwtl
xchg
enter
mov
inc
cmp
int3
fwait
cmp
jbe
stos
aas
pop
pop
adc
pop
sub
fisubl
subl
sbb
stos
int3
pop
xchg
xchg
mov
push
lret
mov
xor
scas
xor
icebp
mov
dec
mov
mov
call
dec
fs
data16
pusha
clc
in
clc
mov
mov
inc
sbb
std
scas
out
push
insl
cmpsl
pusha
repz
das
xlat
push
stos
xor
xor
jge
dec
push
shl
and
outsb
jg
mov
lcall
xchg
lods
mov
jmp
mov
sub
mov
lea
lock
inc
ds
jbe
pop
imul
pop
sahf
cld
dec
pop
mov
movsb
and
mov
jecxz
cmp
das
or
push
sti
or
popf
vhaddpd
pop
cmp
dec
ficomps
jg
dec
mov
dec
in
int
cmp
cmp
aas
lods
pusha
and
outsb
pop
dec
movsl
mov
dec
ss
or
bound
mov
outsl
inc
xor
pop
mov
xor
rorl
shlb
in
rolb
mov
fldl2t
jg
jb
mov
arpl
sub
enter
lods
push
sub
dec
test
fstpl
out
xlat
insl
push
push
lret
movsb
aad
lods
lock
cmp
in
mov
mov
iret
insb
dec
jge
cli
cmp
mov
jge
dec
ljmp
pop
adc
mov
mov
mov
sbb
mov
xchg
outsl
addr16
es
or
mov
sbb
dec
jb
int3
stos
testl
and
addr16
faddp
xor
inc
out
mov
push
pushf
mov
cmpsl
xchg
sub
movsl
inc
jnp
mov
push
lods
pop
push
adc
jge
jnp
xor
idiv
mov
sub
repnz
es
fdiv
outsl
sbb
cmp
sbb
cmp
in
jo
xchg
cmp
leave
sub
jg
outsb
push
cwtl
sbb
or
insb
pushf
mov
and
xor
dec
ds
pop
push
data16
adc
sub
add
mov
cld
shl
insb
push
add
call
pushf
push
xchg
dec
mov
cltd
fildl
push
pop
mov
sub
push
cmpsl
add
mov
mov
addr16
das
inc
inc
xor
jge
repnz
data16
js
inc
mov
in
test
repz
or
xchg
xchg
pop
sub
mov
js
stos
or
jno
mov
jne
fs
call
sub
das
xchg
xor
ror
lret
mov
cmp
ret
mov
inc
jne
mov
orl
fmuls
cld
pop
leave
jns
iret
out
shlb
mov
enter
stc
mov
sub
mov
mov
and
push
jg
pop
sbb
je
lods
or
mov
mov
jns
pop
pusha
lea
dec
mov
lret
pop
out
inc
int3
sub
movsb
lock
hlt
vpaddw
xchg
xchg
jae
mov
mov
adc
adc
mov
test
aam
call
fcmovnb
push
scas
fwait
sub
mov
cltd
inc
inc
repz
sahf
ljmp
subb
sbb
push
inc
fwait
jl
inc
and
or
jb
dec
jp
sub
jns
inc
lock
addr16
inc
addb
mov
and
lods
test
out
adc
dec
and
add
and
imul
scas
dec
test
jb
mov
push
shl
sub
xchg
shlb
push
cmp
jno
adc
inc
sbbl
jmp
mov
popf
fnstsw
outsb
pop
pop
pushf
or
xor
dec
in
push
sar
daa
adc
push
push
cmp
out
test
repz
push
sbb
and
add
stos
inc
inc
rcll
stc
out
pop
adc
adc
fwait
sarl
mov
jns
fistpl
testl
idiv
cmpsb
iret
aad
push
adc
addr16
cmpsb
jo
jne
aaa
or
pop
pop
sub
clc
hlt
sub
pop
inc
push
aad
pop
fcmovbe
xor
or
mov
enter
fstpt
mov
daa
jb
push
push
or
inc
jecxz
dec
ljmp
out
outsb
xor
dec
dec
inc
mov
insl
xchg
dec
jmp
pop
add
sti
ffreep
sbb
clc
and
pop
inc
mov
xchg
pop
or
pushf
and
sbb
push
je
addr16
movsb
pop
lahf
enter
jo
imul
hlt
out
xchg
dec
jo
dec
dec
iret
lods
rorl
outsl
mov
add
sub
or
adc
rcr
stos
xorb
stos
leave
sbb
notl
rcll
clc
outsl
and
and
push
mov
xor
sarl
xchg
and
lods
add
cld
add
repz
add
pusha
in
jmp
jae
dec
mov
lcall
sbb
aas
sub
cmc
adc
rol
and
les
sahf
lea
jne
ja
pop
jmp
jno
divb
inc
or
gs
jnp
imul
add
mov
cmpsl
pop
out
xor
movsb
and
add
es
hlt
xchg
daa
push
fstpt
test
je
rclb
das
fildll
imul
mov
mov
mov
les
lcall
mov
cld
aaa
aaa
lds
neg
jp
out
cltd
and
fcmovu
stos
hlt
loopne
push
add
insb
mov
cwtl
mov
cmpsl
out
mov
scas
inc
and
cwtl
mov
xor
mov
mov
sub
cltd
sbb
fwait
arpl
inc
test
xor
xchg
cmp
mov
mov
insb
rcrl
xchg
or
mov
lret
dec
or
pusha
xchg
ljmp
mov
pop
rcrb
xchg
pop
push
sbb
ds
cwtl
mov
mov
mov
cmp
in
ds
das
push
push
aad
enter
dec
pop
xor
xchg
mov
outsb
pop
jp
jge
dec
imul
jb
lds
xor
mov
movsl
xchg
test
cmpsl
lret
push
cli
jmp
dec
push
jbe
les
fldcw
lcall
out
loop
pushf
sti
push
xor
add
jnp
add
xor
stc
sub
push
sbb
sbb
jae
mov
mov
mov
and
lock
bound
cmp
xchg
loop
jne
or
add
roll
idiv
cmp
test
pop
cmp
mov
inc
test
add
mov
mov
add
leave
mov
xchg
sbb
iret
xchg
pop
mov
fildl
mov
in
sbb
mov
inc
inc
push
inc
lret
mov
push
scas
jb
pop
or
add
cs
mov
mov
pop
or
test
xchg
push
movsl
push
iret
bound
fcompp
xchg
fildl
cmp
mov
orl
dec
scas
or
jo
lahf
xor
push
sbb
ss
mov
dec
inc
movsl
pop
ret
jns
fisubs
lret
lods
dec
jl
lret
fnstenv
pop
shrb
xorl
movsb
cmp
or
aaa
dec
mov
rcrl
sbb
pop
jg
rolb
inc
lahf
and
or
sbb
testb
int3
stc
loope
jb
cld
fucomip
ja
sti
aad
and
xchg
pop
mov
outsl
jmp
mov
test
and
push
leave
test
enter
data16
or
adc
rsqrtps
add
popf
es
xchg
fcompl
lods
gs
in
int3
xchg
jne
out
in
mov
and
mov
xchg
orb
lods
mov
sub
arpl
test
popf
inc
push
hlt
sti
pop
jl
loopne
out
enter
push
push
push
mov
rorl
fwait
jle
pop
jmp
cmp
mov
out
data16
jae
mov
rorl
cmp
add
fadd
inc
dec
mov
lcall
xchg
sbb
fwait
sbb
sub
inc
lea
jmp
cmp
xor
xor
vpcmpeqb
hlt
or
popa
inc
inc
inc
stos
lods
sbb
jmp
js
jnp
cs
sub
jo
subl
clc
mov
pop
pusha
add
ret
cwtl
mov
push
adc
cmp
xorb
cmpsb
fldl
in
ljmp
and
mov
mov
stos
pop
iret
mov
lock
jg
add
inc
inc
xor
icebp
loop
loop
or
push
xor
jmp
into
cmp
mov
or
test
jmp
cld
ljmp
cmpsb
inc
les
mov
dec
inc
or
and
cmpsl
daa
out
mov
rcl
inc
aas
jmp
inc
mov
test
in
adc
ret
jae
inc
mov
sub
mov
jnp
and
aas
and
pop
movsb
xlat
adc
stc
xor
loopne
inc
das
fwait
adc
and
mov
lret
sbb
mov
jl
dec
xchg
cmp
aad
imul
aad
xchg
mov
mov
shll
aam
sub
or
loope
inc
loop
cltd
mov
xor
xchg
test
outsb
imul
pusha
xor
and
sbb
and
lds
jno
mov
lret
aam
sarb
mov
gs
pop
cmpsl
movsb
dec
pop
or
pop
jbe
pop
sbb
mov
cld
movsl
jae
and
pop
cli
push
mov
or
sbb
pop
test
ret
aad
xchg
mulb
mov
cltd
stos
test
int
inc
jo
push
dec
leave
add
pop
or
test
out
cmpsb
lret
push
mov
sbb
cltd
mov
push
dec
int
call
and
mov
ret
addb
lret
lahf
dec
cltd
adc
outsb
loopne
jb
pop
test
mov
inc
imul
pop
and
jmp
and
es
add
mov
call
fcompl
roll
outsb
insl
cmp
adc
clc
lods
sub
adc
cmp
cmpb
inc
cli
mov
and
movmskps
xor
mov
and
pop
negb
clc
popf
aas
xor
je
inc
jns
mov
or
insb
addr16
fwait
movsb
sbb
cmp
pop
int
out
rclb
xchg
sbb
fwait
jnp
mov
mov
jmp
in
int3
pop
sti
push
cmp
divl
or
mov
popf
in
movsl
and
inc
cltd
lock
or
sub
mov
sbb
jne
cmpsl
aad
ljmp
mov
adc
pushf
es
lcall
lahf
push
out
xor
inc
enter
fsubrs
frstor
adc
push
xor
test
cli
call
mov
mov
adcb
pop
cltd
notl
jb
sbb
add
push
mov
or
popf
test
movsl
jge
lods
bound
sarb
xorb
loope
push
loop
lea
xchg
and
daa
xchg
xor
mov
scas
in
mov
cmpsl
lods
mov
inc
daa
xor
mov
insb
lds
dec
jmp
sbb
js
mov
adc
mov
or
jmp
inc
jg
push
xchg
cli
inc
adc
mov
aaa
fnsave
jnp
popf
std
out
je
push
fsubs
mov
mov
in
xor
aaa
and
popa
mov
pop
cltd
outsl
sarl
popa
clc
and
and
int
sub
das
in
push
lds
sbb
sub
jo
mov
sarl
jnp
sub
inc
nop
sub
or
mov
sub
mov
cmpsb
sbb
add
lret
push
and
and
dec
icebp
add
lret
push
dec
mov
fadd
push
mov
movsb
push
adc
fsubs
inc
jae
fidivrs
push
push
insl
cld
jle
xor
fs
sbb
les
rcrl
les
mov
xchg
int3
xor
stc
gs
or
rorl
xorb
adc
jae
out
mov
pop
aad
mov
insl
jns
movsb
outsb
imul
shrb
out
lea
inc
jnp
fbstp
push
std
pop
dec
mov
das
pushf
sub
mov
por
push
ret
scas
add
fcoms
je
sub
loop
and
adc
test
pop
aam
mov
push
std
and
iret
mov
cmpsl
mov
jp
and
ds
fs
ffreep
xchg
mov
mov
ljmp
xor
iret
and
je
jmp
stos
jmp
cmpsl
lea
jns
inc
ficomps
adc
push
ds
inc
outsb
mov
mov
sti
sub
cmp
add
jecxz
pop
mov
out
in
sbb
enter
dec
rclb
cmp
xchg
jle
fimuls
popf
stc
pushf
add
xor
dec
jnp
xorl
pop
fldt
int3
cmp
mov
cs
fdivrs
adc
stc
mov
mov
mov
xor
enter
ror
cmp
std
inc
out
add
aad
mov
mov
xchg
bswap
xlat
fidivs
divl
jmp
cmp
xor
pop
dec
movsl
rcrb
adc
xor
imul
repnz
outsl
inc
xor
inc
movsl
push
xchg
xor
adc
sub
push
daa
leave
lcall
and
jg
sub
aas
nop
dec
mov
and
pop
lcall
push
pop
xchg
scas
pop
add
add
pushf
mov
push
outsl
mov
insb
sahf
fcoms
shlb
adc
jno
inc
dec
cmpsl
and
pop
jle
ljmp
adc
nop
imull
pop
xor
rclb
or
int3
sbb
out
in
sub
add
movsb
ret
std
or
mov
sbb
enter
mov
rorl
fildll
fdivrs
mov
in
outsb
divb
xchg
inc
icebp
inc
fildll
je
mov
sub
lods
cmp
repz
xchg
and
jns
es
sub
mov
jno
test
pop
sbb
jle
jb
inc
fisttpl
lcall
cltd
std
mov
fxch
fcoms
mov
movsl
sub
adc
inc
jp
push
repz
movsl
add
pop
mov
xor
adc
push
dec
sub
lcall
loop
mov
inc
inc
adc
ss
int
xor
push
lret
loop
imul
sub
jge
and
mov
fstps
ja
jno
je
aad
pusha
mov
xchg
loope
cmp
and
xchg
in
insl
sub
cmp
cmpsl
xchg
cmpsb
jbe
out
dec
xor
stc
inc
mov
adc
mov
aas
outsb
lods
fs
stc
addr16
popa
mov
cmp
or
lods
jb
arpl
inc
dec
int
dec
mov
sbb
dec
cmp
out
xchg
add
mov
add
cmp
jne
add
test
xchg
cmp
inc
cltd
ja
outsb
scas
dec
loopne
mov
inc
jp
mov
mov
aas
mov
mov
mov
je
aas
loope
rclb
jae
div
lret
push
or
sbb
or
xchg
fimuls
add
aad
movsl
out
or
sti
dec
gs
push
out
xor
mov
and
lea
jecxz
jo
loop
addr16
fcoml
sahf
mov
jmp
insb
xor
xchg
sbb
mov
xchg
xchg
or
popa
and
loopne
mov
lods
in
icebp
ja
out
in
mov
stos
pop
sub
and
dec
push
push
xchg
push
faddl
jmp
sahf
jecxz
mov
movsl
adc
cmp
stos
push
xlat
add
in
popf
int
fcmovu
and
mov
mov
xchg
dec
shl
mov
in
mov
movsb
jne
repz
in
push
into
std
cmc
aaa
fsts
sbb
out
data16
addb
lret
sbb
mul
shr
xor
mov
into
jp
cld
sbb
adc
inc
jmp
imul
out
xchg
cmp
adc
dec
pusha
jnp
xchg
sbb
dec
outsl
das
dec
cs
push
push
sbb
and
xlat
mov
sbb
mov
sub
push
out
outsl
xor
int3
nop
lds
mov
xor
fisubs
iret
add
leave
jge
cmp
std
lret
das
call
cmp
pop
jle
mov
int
mov
jno
xor
jmp
sbb
mov
ljmp
mov
sub
int3
jo
mov
xchg
inc
sub
mov
jae
xor
cmpsl
jl
xor
ss
rol
fnstenv
push
xchg
lcall
cwtl
push
adc
mov
cmpl
out
add
out
stos
cld
insb
xor
jle
icebp
cmp
das
mov
pop
adc
cmpsb
lret
push
and
or
aaa
pop
xchg
xchg
imul
and
les
movsb
addr16
shll
fstpl
pop
mov
cmp
jl
push
cmp
jns
sbbb
cmpsb
pop
xchg
aas
add
and
addr16
ljmp
cld
dec
sub
cmp
fists
mov
roll
cmc
std
pop
adc
inc
in
push
cmp
negb
mov
xchg
adc
cmpsb
cmpsl
xchg
fcompl
bound
scas
sbb
daa
lds
orb
jecxz
mov
call
mov
adc
inc
add
stos
iret
aaa
rcrb
inc
and
xor
cmp
subb
movl
xor
mov
dec
and
cltd
faddp
pop
movsl
arpl
mov
dec
mov
stc
iret
imul
sub
inc
jmp
sub
and
das
pop
lret
adc
data16
cmp
cmc
das
lahf
int
sti
push
sbbb
sub
or
or
sbb
pop
mov
inc
out
aad
jecxz
hlt
inc
cmpsl
out
cmc
mov
xchg
into
push
cmp
or
int
xor
test
xchg
xor
push
cmpsb
push
mov
jns
sbb
test
aaa
sub
pop
lret
dec
pop
loope
ret
xchg
scas
outsb
jne
xchg
stos
dec
jbe
push
gs
leave
subl
push
xchg
cmp
sarl
arpl
arpl
mov
push
js
fnstenv
push
lret
sub
mov
movsl
cmp
pop
outsl
xchg
outsb
push
xchg
rorl
mov
cli
dec
daa
fbstp
pop
adc
scas
in
xor
je
and
sbb
inc
xchg
das
ss
outsb
lods
test
pop
xchg
mov
adc
cmpb
lret
jb
pop
pop
je
rcll
jp
fnstcw
fmul
enter
adc
add
and
adc
jb
push
sahf
outsl
pop
or
jmp
out
or
movb
out
xor
push
divl
sbbl
jmp
fisubrs
inc
je
or
mov
add
or
fadds
mov
mov
les
mov
xchg
push
aaa
cld
repz
adc
repz
cmp
mov
or
mov
mov
jo
inc
mul
imul
cmpsl
ss
dec
cmp
xlat
jle
fldenv
sbb
stos
jns
jl
jne
sahf
lock
inc
movsl
cmpb
inc
ljmp
cmc
mov
mov
mulb
jnp
push
int
jne
lods
roll
cmp
xor
stos
sub
inc
fstps
idivb
mov
aas
sub
inc
scas
mov
insb
add
inc
mov
roll
fmull
adc
jl
pop
in
repnz
sub
cli
inc
xchg
and
inc
push
sbb
cmp
push
add
xchg
mov
sbbl
push
repnz
dec
movsl
aam
and
pushw
cld
push
jp
lahf
push
cmp
movb
pop
lret
aad
jle
aaa
ds
cltd
leave
shlb
sbb
sahf
lock
aas
adc
repnz
ds
sub
ret
lock
movl
stos
int3
repz
data16
movsl
mov
lods
out
inc
fucomp
out
mov
mov
mov
shl
inc
fnstenv
test
adc
lret
push
js
addr16
push
scas
cmp
adc
test
outsb
mov
daa
out
mov
ja,pt
pop
and
add
stos
sbb
pop
lea
mov
leave
sbb
push
or
ljmp
pop
hlt
stos
int
scas
stos
sahf
mov
pop
xor
inc
add
mov
xchg
jne
cltd
mov
je
cwtl
or
push
push
push
mov
or
stos
xor
and
push
pop
cs
clc
jns
sbb
dec
jge
cmpb
cmp
frstor
std
imul
aaa
lods
repz
imul
mov
lea
push
sbb
sahf
jne
arpl
movsl
ret
bound
rcll
mov
pop
sbb
pop
dec
outsb
mov
mov
outsb
int3
arpl
pop
fstl
in
addr16
or
enter
add
mov
ret
jge
jbe
iret
mov
pop
push
push
or
lahf
sbb
shrb
hlt
lcall
cwtl
xlat
xlat
inc
iret
outsl
into
cmp
sahf
loop
push
jns
js
push
ret
jno
adc
adc
add
or
dec
in
cld
lods
repnz
test
into
and
iret
pushf
add
jp
mov
adc
pop
xor
cmc
int
pop
test
incb
xlat
cmp
sbb
mov
test
stos
rorb
xor
fdivl
jmp
add
lahf
jbe
or
pop
push
cmp
and
adc
cmp
add
cmp
pop
jnp
sbb
jo
add
pop
mov
stos
ja
sub
or
push
push
test
dec
lcall
scas
lret
and
sub
pop
gs
in
sar
cmp
pop
lret
adc
imul
cmc
fistpll
in
pusha
ljmp
lods
das
js
jge
mov
mov
push
je
jp
sahf
inc
rcll
mov
aam
incl
pop
add
adc
xor
fnsave
sbb
fnstenv
jb
push
rolb
mov
mov
cli
mov
adc
mov
mov
and
ret
adc
jge
add
cli
call
loope
add
fldcw
xor
sbb
aad
sahf
jge
and
sub
cltd
and
popa
push
push
adc
mov
cmpsl
int
out
aas
xlat
add
and
inc
dec
sbbb
adc
jg
incl
or
mov
or
inc
das
cmc
insb
in
push
ss
decb
mov
int
stos
or
aad
cs
data16
cmc
ja
adc
mov
jbe
notb
push
lds
je
stos
adc
ljmp
jo
fisttpl
inc
mov
mov
in
pop
jmp
lret
ljmp
int
sub
add
mov
bound
pop
out
sbb
lea
lods
jge
or
cs
hlt
int3
icebp
lret
stos
in
mov
shrl
aad
mov
push
sbb
je
stc
inc
sti
mov
xorb
dec
mov
cmp
clc
pop
imul
mov
seta
outsb
xor
adc
repnz
mov
pop
inc
sbb
add
ljmp
call
pop
or
lret
in
xchg
insl
lret
aas
std
adc
pop
call
xchg
lret
sub
sbb
das
xchg
ljmp
or
popa
push
movsl
aaa
out
fisubrs
cmpsl
fbld
fwait
in
inc
les
pop
pusha
xor
shll
clc
xchg
inc
push
in
add
sbb
push
andb
add
jns
out
imul
popa
sahf
jbe
sbb
popa
xor
lds
jp
cmpsl
mov
into
cs
adc
jb
enter
stc
js
mov
xor
mov
sbb
mov
adc
jns
test
insl
mov
testl
pop
cmp
in
mov
mov
add
push
sbb
pop
clc
sub
shr
adc
iret
ds
inc
addr16
add
cmp
xor
aas
leave
insb
push
inc
jae
enter
aaa
inc
lret
mov
and
stc
addr16
xchg
or
xor
push
fidivs
xor
popa
aad
push
xor
jne,pt
push
dec
btr
jge
dec
fstpt
aam
cmpsl
in
outsb
jae
mov
cs
ret
out
out
xor
sub
jbe
cmp
sub
out
push
mov
in
leave
sahf
fsubl
jae
fnsave
dec
scas
xchg
leave
mov
inc
adc
xlat
push
arpl
js
add
in
test
mov
fwait
jae
pushf
mov
lcall
loop
in
loop
xchg
sti
clc
mov
stos
cmp
pushl
adc
pop
js
xlat
in
xor
mov
mov
sti
jo
jnp
mov
mov
xor
mov
aaa
dec
push
jge
jbe
push
in
fldpi
and
jb
add
sub
and
sbb
sbb
lock
xchg
int3
xchg
decl
sub
fcoml
cld
insl
stos
dec
lods
rcr
and
lods
xchg
out
mov
call
push
xor
clc
cmp
nop
pushf
or
shll
lret
xlat
aam
rolb
push
cs
fimull
dec
xor
cmpsl
sbb
mov
cmc
lahf
mov
jnp
in
sbb
and
sub
mov
xor
sub
adc
sbb
cmp
and
push
sub
aad
in
stos
pop
sub
aam
fldl
scas
out
xchg
in
cmpb
inc
or
sbb
ja
imulb
cwtl
fimuls
cmpl
or
mov
ja
es
out
push
lods
imul
inc
mov
fdivrl
data16
jne
cmp
push
adc
fbld
insl
xabort
push
xchg
xchg
xchg
push
pop
fildl
xor
add
out
adcb
std
gs
xchg
or
stos
sub
jne
sbb
jecxz
sub
vpavgw
or
adc
inc
and
daa
imul
pop
fcmove
push
in
sub
mov
mov
mov
aaa
add
rorl
jecxz
sbb
lods
shl
inc
adc
loop
mov
dec
test
and
pop
dec
subl
sub
dec
sub
sbb
add
cmpsl
pop
aad
mov
in
repnz
popa
bound
and
sub
mov
popa
adc
push
and
leave
mov
push
inc
cmp
sahf
push
push
mov
scas
and
pop
sub
push
into
hlt
mov
mov
mov
xchg
inc
andb
test
clc
gs
or
jle
adc
xchg
out
jl
sbb
push
add
ss
loope
sbb
es
pop
add
xchg
xchg
and
dec
pop
or
pop
mov
sbb
and
in
fisttpl
bound
outsb
stos
movsl
popf
inc
sbb
xchg
insl
aas
xchg
xchg
test
lods
negl
movsl
dec
lret
xor
and
sbb
mov
mov
sub
rcl
xchg
mov
pop
mov
jle
and
jo
imul
lods
das
lods
xchg
mov
xchg
sbb
popa
add
cmpsl
cmc
pop
adc
mov
imul
sbb
mov
std
add
daa
jne
pop
std
int
daa
ret
decl
cmp
loop
test
bound
add
cli
clc
mov
sub
aas
xchg
enter
iret
ds
inc
rcr
inc
mov
xchg
cmpsb
fs
push
popa
adc
sti
adc
stc
xor
repnz
inc
sarb
fisubl
fistl
cmpl
fsubl
int
xor
push
out
sub
lods
mov
orl
cs
xchg
hlt
dec
daa
out
jns
mov
sub
push
out
lcall
sbb
inc
add
mov
push
pop
and
inc
xor
imul
lcall
fisubl
jmp
test
into
fisubs
push
adc
xchg
in
or
jecxz
loop
xchg
popa
dec
sbb
loop
sub
mov
mov
aad
xor
ret
adc
in
lcall
aad
mov
fstps
es
sbb
jae
roll
int
leave
stos
jae
gs
loop,pt
stc
clc
xchg
jns
sub
cmp
mov
les
inc
loope
cmp
pop
fs
mov
jbe
xor
add
pop
push
test
push
mov
les
pop
jp
dec
cmp
pop
pusha
cmc
and
jae
mov
mov
xchg
popf
jg
push
scas
scas
aam
ljmp
stos
lcall
pop
imul
sub
xchg
xchg
mov
xchg
enter
fsubp
icebp
js
mov
add
aad
sbb
rclb
mov
pop
ret
adc
mov
ret
and
inc
adc
sahf
pop
xchg
cmp
jge
sbb
leave
dec
es
aad
stos
mov
mov
out
hlt
xchg
je
decl
mov
mov
pop
mov
mov
iret
dec
adc
cs
test
jmp
mov
aas
aas
in
push
xorl
push
and
dec
and
dec
pop
clc
sbb
cld
mov
add
mov
std
mov
push
push
lock
test
xchg
lock
inc
scas
ljmp
mov
pushf
dec
sbb
bound
mov
repz
in
leave
sbb
or
inc
cmp
push
fcompl
mov
dec
push
lret
lock
jne
fcmovne
inc
stos
mov
inc
mov
mov
adc
jl
lods
cmp
cwtl
xor
xor
dec
xchg
and
jmp
jmp
movsl
jg
adc
shll
jbe
hlt
bound
popa
jecxz
lods
loop
sub
jecxz
pushf
je
xchg
iret
mov
aaa
idivl
ja
and
jl
movsb
sbb
push
mov
ja
or
add
push
jno
sbb
rclb
roll
dec
xor
pop
push
cmp
cmp
shl
dec
les
ss
add
and
dec
cmpsl
xchg
test
mov
fstpt
mov
sub
mov
push
sub
dec
mov
lds
xchg
jo
dec
in
add
fdiv
or
inc
add
or
inc
hlt
jmp
std
test
xchg
fimuls
int
movsl
mov
adc
mov
jo
xor
outsl
popf
call
mov
movsb
adc
ret
outsb
jl
adc
add
jle
mov
scas
cli
xchg
sti
out
cli
leavew
ret
data16
sbb
icebp
das
repnz
lock
cmp
mov
push
loope
cltd
xorb
jmp
aaa
mov
lock
push
jbe
loop
rcrl
adc
mov
leave
loope
aas
or
mov
repz
movsl
stos
ljmp
fwait
ss
or
pop
insl
jo
ret
pop
xlat
inc
stos
sahf
jae
call
mov
pop
bound
xor
clc
jbe
cld
scas
rcll
insb
mov
ja
in
out
cmp
decb
int
test
es
mov
call
std
dec
jl
scas
nop
mov
stos
repz
xor
xchg
jg
imul
cwtl
mov
imul
jne
cmp
mov
mov
outsl
mov
pop
jbe
ljmp
push
fsubrl
push
call
inc
cmp
dec
repz
sti
push
aas
sbb
mov
jg
test
mov
push
out
stc
and
push
xchg
and
jp
jg
out
enter
popf
cld
fnstenv
ficomps
daa
cmp
imul
mov
sbb
bound
cmp
das
cmp
sub
xor
jo
ror
cli
mov
stos
es
pop
mov
push
fcoml
scas
mov
out
jl
fstp
pop
loopne
cmp
mov
mov
and
addl
fsts
mov
mov
vfmsubaddps
leave
push
mov
lret
adc
add
push
std
test
fldt
jnp
fs
jae
adc
imul
cmc
leave
cmp
push
mov
sbb
and
pop
imul
inc
into
pusha
xchg
clc
test
jo
jbe
popf
sti
in
pop
xchg
mov
pushf
add
leave
insl
shll
loopne
mov
test
test
sbb
or
mov
in
push
flds
jecxz
lods
jmp
aad
addr16
lock
lret
adc
out
cmp
in
cli
leave
scas
sbb
scas
loope
je
notl
sbb
sub
xchg
mov
leave
ss
nop
lods
push
gs
test
dec
clc
bound
jg
xchg
jo
mov
lea
shl
xor
pop
adc
movsl
jno
push
sbb
fdivrl
test
xchg
in
xchg
rcrl
and
movsb
aad
or
push
mov
stos
push
mov
adcb
mov
ret
and
or
imul
cmp
and
int3
into
jecxz
xor
mov
sub
dec
sbb
mov
js
sub
pop
add
dec
addr16
push
dec
repz
dec
mov
push
lods
hlt
xchg
xchg
pop
dec
pop
and
outsl
test
mov
push
or
cmp
dec
fisubrs
out
lret
inc
xchg
out
data16
mov
mov
lds
adc
negl
ljmp
dec
xchg
cli
xchg
ret
cmp
sub
sub
imul
xchg
pop
jno
jns
and
inc
aas
addr16
shlb
out
roll
icebp
xlat
or
aam
ret
and
and
xchg
cmp
push
addr16
repnz
out
adc
sub
mov
xlat
pop
in
fsubs
popa
test
pop
push
subl
xor
rorb
and
lahf
mov
xor
inc
dec
cmp
pop
cmc
jmp
jae
movl
push
jb
sbb
shl
aas
inc
mov
push
inc
sbb
dec
push
jge
imul
pop
mov
push
push
xchg
scas
jl
pcmpeqb
inc
xor
push
lcall
sahf
mov
push
fdivl
push
out
xchg
jp
xchg
mov
and
xor
ss
scas
popa
testl
mov
inc
test
inc
in
mov
test
sub
repz
cmp
andl
mov
insl
bound
leave
leave
pop
or
cmpsb
ret
cli
pop
shrb
adc
cwtl
dec
lods
cmp
outsl
fdivr
lret
out
icebp
cmc
or
xchg
lret
sbb
pop
fdiv
jge
pop
jle
mov
scas
push
sbb
and
cmpsl
xchg
xchg
iret
mov
dec
mov
fsub
push
shr
xlat
add
mov
test
add
fldl
xchg
loop
pop
and
sbb
jae
insl
idivb
mov
shrl
pushl
mov
or
xorb
sbb
inc
repnz
out
insl
add
mov
sti
mov
call
inc
dec
or
xchg
stos
fst
push
cwtl
xor
iret
imull
jge
cmp
pop
inc
hlt
xchg
and
pop
shl
insb
in
std
rcr
push
cli
mov
xchg
pop
pop
icebp
std
les
xchg
popa
cmp
repz
jl
lret
repz
dec
and
jp
fcompl
insl
sub
std
mov
pop
ljmp
movsl
arpl
outsl
loopne
nop
mov
out
rcrb
push
call
subl
push
xchg
pop
sub
aam
loopne
push
mov
push
loopne
sub
jb
ljmp
fsubrl
dec
cwtl
lret
mov
cmpl
repz
jg
movsb
std
mov
pop
mov
sbb
rcrb
inc
loope
outsb
pop
pop
sub
add
hlt
add
rep
cmp
sbb
inc
adc
push
rcrb
mov
popa
mov
or
pop
push
nop
jl
lea
roll
sahf
scas
sub
add
jecxz
inc
adc
push
adc
and
or
insl
iret
push
jae
sbb
xor
lock
mov
xor
arpl
fwait
pop
sar
popf
addr16
jge
repz
sbb
push
sub
jg
icebp
jb
pop
jmp
cwtl
jae
adc
addr16
movsl
dec
lret
rep
rcll
cmp
sbb
mov
mov
mov
inc
dec
cli
pop
cmp
and
gs
xchg
pop
pop
rcrl
xchg
lods
cmpsb
xlat
repz
mov
dec
std
test
add
scas
mov
movsb
lods
lock
adc
jge
mov
and
out
insb
addr16
mov
mov
in
outsb
push
in
fs
add
shlb
mov
int
idivl
jmp
test
cmp
jne
mov
cs
mov
xchg
imul
loop
pop
int
fcoml
pop
jne
mov
add
sbb
repz
addr16
fbstp
pop
rclb
jmp
pop
aas
or
sbb
pop
test
push
aaa
idivb
pause
sub
add
scas
iret
push
pop
in
pushf
js
std
movsl
pushf
mov
adc
out
sub
pop
jecxz
inc
cmp
cmp
ja
jmp
lcall
daa
fcoml
mov
sbb
pop
xchg
jnp
lods
sub
call
sub
pusha
std
out
mov
dec
fimuls
test
dec
stos
mov
movsb
mov
sti
xor
jns
loope
sub
mov
and
je
addb
mov
jno
mov
jbe
in
iret
mov
dec
in
jecxz
stos
sub
test
sub
push
inc
out
xchg
ud2
sbbl
fldl
imul
inc
mov
lock
jl
inc
enter
imul
repz
cmp
insb
mov
xor
and
sbb
xor
lahf
aaa
std
shrb
das
dec
dec
cmp
mov
jb
addb
out
add
shlb
fdivl
popf
mov
inc
test
rep
js
das
push
in
jnp
cmp
jae
jecxz
sub
clc
fistpl
mov
pop
test
jnp
dec
cmp
lock
test
xor
iret
mov
adc
shlb
push
cld
sub
cmp
imul
mov
hlt
mov
or
pop
mov
jecxz
mov
enter
movsb
cli
dec
lret
push
iret
jbe
mov
jbe
cmp
fstl
xchg
hlt
pushf
hlt
xchg
into
mov
xlat
mov
jns
lods
jle
xchg
xchg
daa
into
gs
inc
xchg
test
addr16
dec
dec
mov
cs
inc
gs
and
or
push
jo
pop
clc
aad
inc
xorl
xchg
idivb
jns
notb
rorb
or
cltd
adc
push
mov
ret
cltd
imul
sub
sbb
roll
rcll
hlt
mov
jle
add
push
and
insb
push
jno
xor
test
pop
sbb
push
neg
ljmp
xchg
cwtl
xchg
cmp
xchg
sub
test
movsl
adc
out
fimull
loopne
mov
adcb
jbe
jnp
int3
mov
outsb
pop
negb
mov
aaa
sub
pop
fsts
gs
andb
lcall
add
cmc
mov
xchg
rorb
dec
mov
sub
add
fwait
outsl
jl
dec
jl,pn
xchg
scas
stos
fcoml
mov
stos
scas
rclb
jge
ficoml
inc
dec
jmp
mul
add
cwtl
mov
outsl
cld
fs
inc
cmp
icebp
sub
pop
cld
int3
jae
fisttpll
icebp
mov
pushf
out
mov
divl
push
sbb
cmp
imul
push
faddp
add
push
sbb
xchg
pop
gs
push
gs
dec
jo
cmp
mov
cmpsl
and
cmp
enter
push
adc
das
sarb
jns
pusha
jbe
sbb
xchg
adc
xor
cmp
loopne
xchg
mov
jp
add
call
xchg
mov
inc
loopne
sbb
pop
int3
cmp
sub
insl
or
inc
xchg
repz
or
outsl
pop
pusha
sub
fisubl
xchg
lds
inc
sub
dec
icebp
adc
xor
mov
bound
pop
and
add
scas
repnz
jl
das
cli
loop
paddd
cmp
cmpsb
sub
les
sub
cmp
push
sub
addb
test
dec
lcall
enter
dec
movsl
pop
ljmp
mov
mov
inc
push
testl
pop
int
in
adc
into
es
hlt
push
and
mov
clc
cmp
mov
xor
dec
fdivrp
cmp
add
dec
andb
outsb
mov
inc
or
cmpsb
ret
and
xchg
dec
jecxz,pt
mov
cmp
sar
pusha
xchg
push
push
ja
pop
fadds
pop
or
inc
jbe
mov
and
out
push
jmp
in
out
popa
mov
iret
jne
test
xlat
and
add
sub
insl
pop
push
lock
inc
pop
subb
and
add
inc
js
xlat
jno
shrl
lea
call
sbb
inc
clc
push
outsl
fstpt
out
mov
pop
out
ss
gs
push
cmp
pusha
sahf
outsb
pop
or
insl
dec
lods
subb
lret
les
xor
fisubrs
adc
dec
test
and
imul
outsb
insl
gs
mov
movsb
jns
arpl
mov
mov
int3
push
data16
push
sbb
frstor
nop
sub
pop
jp
fsubrs
add
out
dec
scas
pop
xchg
mov
fwait
push
enter
mov
mull
popf
cmc
adc
jle
fisttpl
mov
push
in
popa
mov
sti
jge
call
sbb
jl
pusha
push
sbb
bound
ret
ja
cmpsb
test
jb
pop
out
popa
sub
lahf
mov
mov
das
gs
inc
cmp
or
rcl
cmpsl
enterw
push
fs
cmpsb
push
ja
xchg
aaa
xor
jb
pop
sub
ret
pop
pusha
jbe
cld
shl
fisubrl
sub
push
mov
cmp
push
std
add
clc
dec
cmp
or
dec
fidivl
aam
jge
pop
mov
sti
mov
iret
adc
pop
aam
in
test
add
es
pop
or
cli
imul
rcrl
sub
xchg
iret
cmp
xor
add
imul
pop
jecxz
loopne
pop
and
outsl
cmp
lods
divl
and
subl
adc
ds
sbb
into
pusha
mov
jl
mov
ret
sbb
ficoml
lahf
jns
lods
ds
rcrl
shlb
jbe
rorb
mov
pop
jae
push
jne
push
subb
mov
adc
pop
je
js
out
push
add
loop
mov
nop
enter
mov
inc
inc
mov
inc
jne
rcrb
xchg
in
int
sub
lcall
cli
mov
xchg
mov
xor
mov
sub
clc
inc
gs
pop
cmp
sbbl
fcomps
movsl
push
lcall
sub
fnsave
stos
push
xchg
push
add
push
cmpsl
mov
mov
ja
mov
ljmp
icebp
js
cmp
cld
xor
sub
sbb
rcrb
loop
push
sub
loope
popa
jl
pop
stos
xlat
lds
dec
icebp
inc
mov
sbb
iret
cld
stc
mov
fwait
adc
cmp
int
ret
out
inc
rcrl
cmp
jb
inc
scas
or
in
jne
mov
bound
cmpsl
dec
push
push
lock
and
and
push
nop
mull
add
sarl
sbb
mov
push
mov
je
dec
js
movsl
cltd
int
xchg
mov
jae
xor
xor
pushf
or
les
mov
sbbl
stc
inc
push
int
cld
clc
pop
sbb
aad
fwait
and
popf
andb
rolw
shlb
aaa
loopne
xchg
incb
push
push
jno
sbb
out
repz
inc
gs
or
mov
faddl
fcmovne
fsubrl
push
test
xchg
sub
mov
cmp
je
andb
jae
leave
pop
xchg
ja
xchg
mov
jp
mov
mov
mov
movsl
and
cld
sub
aaa
mov
push
fcoms
pcmpeqw
push
and
test
shrb
imul
adc
loope
out
adc
dec
add
fsubr
lret
and
fldl
mov
cmp
repz
dec
clc
scas
ret
mov
or
cmc
outsb
jae
in
adc
scas
xchg
mov
ds
call
testb
test
stos
std
dec
push
ffree
outsb
mov
jmp
lret
cltd
outsl
ds
aaa
fnstcw
mov
jne
sub
jp
out
in
dec
ficomps
cmp
xor
aad
sbb
pop
add
in
cmp
and
mov
adc
pop
mov
inc
loope
popa
rcrl
or
loope
push
pop
inc
mov
paddsw
test
inc
push
or
xlat
fdivrs
xchg
mov
pop
sbb
lds
push
test
loop
subb
aad
cld
movsl
mov
sub
test
data16
subb
jmp
jp
gs
and
es
jle
gs
sbb
jecxz
mov
jg
pop
jae
mov
mov
sbb
dec
cmp
fstpl
das
cwtl
mov
mov
push
pop
adc
cwtl
jb
cwtl
pushf
xchg
pop
adc
fisubl
in
push
pop
dec
add
jo
pop
lock
add
push
cltd
jge
mov
jp
dec
sbb
aaa
dec
jle
jnp
clc
pop
orl
add
jp
cmp
shr
inc
cmpsl
push
pop
into
or
repz
and
mov
lods
lea
cmpsb
xchg
adc
fldt
mov
rorb
bound
pop
nop
sub
push
inc
push
sbb
cmc
push
ret
les
adc
outsl
mov
xlat
xor
cld
dec
add
in
movups
mov
push
dec
mov
add
in
cmp
cmp
leave
lock
shll
push
cmpsl
mov
dec
mov
mov
jecxz
adc
or
add
mov
repnz
jo
dec
cmpl
ret
or
add
test
scas
push
and
inc
loope
std
je
inc
sarb
fdivrl
jns
xor
stos
scas
lea
add
arpl
std
cmp
sahf
xor
shl
mov
divb
xchg
pop
fmuls
jns
adc
out
push
fidivl
stos
add
pop
mov
incl
out
xchg
dec
cmp
in
xor
xchg
pushf
mov
cmp
xchg
incl
es
cmp
ds
nop
xchg
adc
or
or
aaa
mov
popf
rclb
mov
inc
add
xchg
jecxz
sbb
sub
inc
addr16
or
mov
call
cwtl
out
mov
sbbl
adc
mov
mov
popf
jno
dec
orb
push
push
sbb
test
ja
dec
leave
or
xchg
xor
lods
icebp
lahf
mov
cmp
sti
enter
daa
cmpsl
lods
popa
cmp
jecxz
jecxz
dec
clc
inc
adc
cmp
cld
mov
mov
cmp
jge
mov
mov
mov
adc
cmp
les
stos
mov
sub
mov
mov
dec
loope
imul
loope
and
push
pop
xchg
cmpsb
into
in
movsb
out
sub
push
xor
push
mov
mov
inc
mov
push
or
xchg
xchg
sbb
cmp
sbb
sub
add
scas
or
icebp
push
cmp
adc
jb
cmp
push
pushf
xchg
icebp
mov
sbb
insb
mov
push
push
and
out
sahf
test
in
cwtl
mov
mov
popa
pop
xor
mov
sahf
aad
stc
je
cs
jl
and
xchg
fldl
mov
test
push
or
pop
fidivl
mov
sti
dec
arpl
push
sub
mov
test
fcomip
add
pop
jb
test
sbb
jecxz
xchg
jg
ret
pop
fstpl
xor
or
orb
mov
aam
add
adc
int3
mov
or
sub
fscale
or
unpckhps
inc
inc
out
mov
add
mov
mov
in
xchg
iret
fnstcw
mov
xchg
jns
in
add
neg
lret
insb
dec
inc
push
jae
pushf
adc
rolb
popa
fadds
mov
pop
sbbl
and
inc
adc
mov
je
mov
or
addl
sar
add
aad
mov
mov
hlt
xchg
bound
loope
push
jp
cmpsb
jns
aas
sub
mov
cmc
es
push
loopne
lods
shll
dec
sub
out
inc
std
xor
jle
or
and
mov
sbb
mov
arpl
ds
ja
popf
out
cmp
adc
ss
les
jge
jp
dec
jae
test
ja
mov
lcall
xchg
clc
jmp
outsb
sbb
mov
stos
jp
in
pop
adc
mov
push
into
jo
jo
loope
je
sbb
lock
stos
cmp
pop
lret
inc
aaa
out
lods
loope
sbb
jo
or
imul
cmp
push
xlat
movaps
addr16
imul
nop
sub
cmpsl
icebp
std
adc
dec
adc
shr
mov
cmpsb
int
pop
fisubrl
jmp
mov
enter
aas
xchg
cli
loopne
lret
add
sub
dec
iret
inc
add
add
adcl
cs
inc
xchg
call
push
in
pop
sbb
cmp
mov
cld
pop
fdivrl
jne
push
sahf
shrl
inc
into
adc
xchg
inc
in
cmp
data16
mov
xchg
or
gs
imul
sbb
inc
fsub
bound
pop
xchg
push
test
mov
loope
push
std
dec
lea
xor
fcmovnb
cwtl
enter
icebp
mov
mov
inc
cmpsl
fsubl
call
dec
and
scas
jp
subb
inc
mov
pushf
inc
or
imul
clc
inc
insl
call
mov
dec
jnp
daa
into
push
dec
add
in
subb
repz
movsb
stos
repz
test
or
outsl
cmp
mov
mov
or
and
repz
mov
xchg
imul
inc
and
or
jg
sub
ficompl
push
inc
fdivl
popa
sub
push
dec
ss
cmpsb
and
sbb
mov
cmpsb
fxch
test
in
mov
sbb
fisubrl
jo
adc
mov
jo
js
out
cltd
pop
aas
pop
nop
pop
in
push
rorb
loopne
mov
sbb
lods
push
popf
filds
cmp
jg
faddl
imul
cmp
mulb
fwait
jecxz
jg
or
push
pop
mov
js
aad
push
cltd
mov
loop
jle
rcr
fsub
out
mov
push
mov
push
mov
jle
xor
and
ja
xchg
sti
dec
cmp
xor
pushf
xchg
rorb
ja
jno
dec
adc
mov
dec
stos
mov
int
mov
pop
jl
or
or
mov
pop
jns
pop
push
imul
jl
scas
mov
mov
jp
and
add
in
adc
inc
rcll
xor
push
xor
pop
hlt
sbb
or
mov
clc
xchg
scas
lret
pop
imul
and
lds
jbe
sub
sub
inc
repz
or
sub
add
fwait
mov
mov
mov
or
mov
fidivrs
test
test
imul
testl
push
sub
scas
adc
adc
fbstp
roll
into
mov
orb
adc
daa
add
xor
push
cmp
ds
xor
jne
imul
sub
data16
dec
inc
jno
mov
gs
test
testl
mov
fsubl
adc
ja
out
cmp
cwtl
xor
mov
or
adc
test
mov
outsl
push
sar
arpl
sbb
jmp
std
pop
mov
notl
mov
jge
aas
out
stos
fsts
pcmpeqw
mov
ja
mov
insl
add
ljmp
add
mov
or
rclb
inc
dec
mov
pop
adc
sub
into
loop
or
lock
loope
push
pop
inc
movsl
pop
addr16
es
inc
pop
aad
xor
lea
lret
les
out
pop
inc
xor
andl
cmp
shl
dec
pop
pop
or
xor
lods
in
adcl
jo
xor
jle
mov
out
nop
inc
sub
mov
arpl
test
clc
add
in
jmp
data16
jno
loop
lds
cwtl
sbb
cmc
xchg
xchg
adc
jns
std
pop
imul
mov
mov
dec
jle
mov
outsb
popa
jb
jmp
sti
inc
or
mov
test
push
imul
insl
inc
aad
sbb
arpl
sub
mov
pop
fidivrs
out
sbb
jge
incb
jp
pusha
jns
aas
and
rcrb
pop
push
xchg
jno
add
jnp
mov
or
inc
popa
inc
jge
aad
cltd
movsl
pusha
push
cmp
pop
test
or
jno
movsb
clc
fdiv
stc
or
inc
push
adc
lods
and
jae
push
fs
mov
ret
iret
adc
int
push
sub
pop
inc
out
sub
int
nop
and
xchg
add
mov
shll
jne
sub
stos
or
test
inc
movsl
pop
mov
stos
lret
mov
popa
push
sub
std
cltd
mov
js
imul
dec
jge
sbb
popa
push
mov
aad
ror
fisubs
out
shlb
dec
mov
test
add
pop
movsl
xchg
aad
movl
inc
xchg
pusha
in
arpl
xchg
jg
fildl
lcall
mov
xchg
les
add
lock
insb
dec
adc
mov
loopne
sahf
fsubrs
or
push
xchg
data16
sbb
out
fst
movsb
pop
mov
divl
pop
sub
pop
cmp
subl
mov
outsl
out
imul
xchg
cmp
mov
lea
push
xor
ds
fbstp
scas
and
ja
jle
xchg
xor
repnz
inc
sbb
push
scas
xchg
loopne
test
aaa
push
jo
fcoml
xchg
xlat
xor
leave
adc
mov
push
out
pushf
push
jae
add
adcl
lds
pusha
jae
jnp
and
fisttpl
out
das
push
cmc
dec
sub
dec
push
out
xchg
lcall
jge
aas
xor
imul
das
ret
jo
xchg
or
or
mov
xor
leave
std
push
xor
ds
xchg
sbb
mov
mov
mov
pop
mov
or
push
cmpsb
pop
sbb
std
mov
mov
mov
roll
inc
cmp
arpl
lods
push
les
stc
and
es
sbb
adc
dec
enter
mov
dec
ss
jo
mov
fabs
out
dec
rcl
das
hlt
xchg
adc
xchg
sub
sahf
pop
and
cld
test
ror
add
gs
int
and
or
xor
cltd
sub
xchg
xchg
mov
jne
push
mov
std
mov
adcl
xchg
insb
movsb
xor
sbb
pop
dec
inc
push
outsl
iret
lds
jae
and
sbb
mov
or
fildll
pop
jns
and
inc
je
mov
arpl
aam
add
jmp
les
test
push
pop
ljmp
js
loope
lods
loope
loopne
call
xchg
pop
or
pusha
sbb
test
xchg
xor
ds
aas
aas
imulb
sub
or
jle
pushf
push
lods
sub
pop
lcall
enter
push
in
jo
mov
jecxz
fdivs
in
shll
loopne
sbb
ret
xchg
loope
or
ret
aad
lret
or
cmp
faddl
inc
push
addr16
sbb
push
mov
aam
dec
sbb
leave
jo
sbb
mov
int3
push
push
jbe
cli
stos
imul
and
xchg
mov
pop
cmpsb
fadds
jmp
and
jns
inc
hlt
arpl
mov
cmp
cmp
pop
sbb
add
push
mulb
push
cmp
dec
dec
cmpsl
push
sub
jmp
or
fs
mov
daa
rol
loop
stos
inc
shll
ret
bound
lock
dec
add
cmc
cld
sbb
test
lret
cs
inc
adc
pop
or
mov
jg
push
ss
pop
adc
scas
xchg
js
into
xor
jge
aas
mov
ds
ret
out
and
aam
lahf
push
and
mov
sahf
das
pop
mov
mov
mulps
mov
and
dec
push
and
repnz
lods
and
cmp
bound
aad
mov
mov
ja
adc
push
mov
loope
jmp
repz
fisubrl
mov
lods
or
jecxz
adc
dec
push
call
and
in
popa
out
inc
mov
adc
pop
std
sub
ja
cmp
mov
fistl
cmp
mov
inc
inc
fcmovu
andl
push
sub
out
jecxz
xlat
arpl
jg
fnsave
inc
adc
das
add
sub
mov
mov
in
mov
adc
popf
in
push
movsl
mov
shlb
sbb
mov
insl
add
jecxz
push
xchg
push
cltd
les
dec
mov
fs
add
imul
sub
bound
bound
adc
mov
cmp
sub
cmp
testl
clc
adc
es
stos
xchg
aad
lock
push
lea
cltd
lret
imul
out
mov
and
and
xor
or
push
pop
mov
imul
or
loope
out
push
int3
pop
sti
rcrl
mov
repnz
mov
jae
sub
push
mov
jo
loopne
rcll
int3
das
ret
jne
lock
das
lcall
cmc
or
mov
sbb
in
pushf
cltd
ret
jl
subl
inc
mov
fdivr
and
ja
sahf
sarl
ret
push
adc
cmc
out
iret
adc
push
dec
rorl
sti
mov
lret
push
inc
inc
fisubrs
sbb
outsb
popa
pop
or
sbb
mov
mov
scas
or
pop
clc
fnstsw
inc
int3
movsl
vmovss
repnz
arpl
push
or
push
jge
shrl
out
cli
scas
mov
dec
jnp
inc
pminsw
xchg
push
lds
outsl
cmp
dec
clc
jmp
imul
mov
pop
xchg
cmp
or
jmp
and
push
dec
cmp
loope
fistps
mov
inc
pushl
adc
push
stc
fdivl
pop
fmul
push
ljmp
data16
fadd
push
popa
and
mov
in
adc
xchg
sbb
xor
fstpt
adc
sahf
mull
cmp
hlt
mov
cmp
push
outsb
mov
movsl
insb
mov
jl
fsubl
mov
pop
outsb
adc
ljmp
cwtl
lcall
jle
xlat
xchg
xchg
mov
mov
jecxz
pushf
ja
xchg
mov
aad
lahf
sbb
daa
aad
or
inc
sub
sub
mov
cli
mov
jmp
lock
xor
sub
inc
push
dec
xchg
and
dec
sti
bound
cwtl
iret
mov
pop
add
scas
ja
xchg
insl
sub
subl
movsl
jg
es
cmp
das
sbb
ja
mov
divl
mov
inc
enter
push
xor
mov
je
int3
sarb
sar
adc
push
ljmp
into
scas
stc
xor
lods
ret
fwait
test
icebp
jge
push
aaa
mov
inc
sub
orl
add
test
dec
ss
popf
or
sub
mov
clc
notl
push
testl
lret
push
jo
adc
bound
xor
jg
sub
pop
leave
and
jmp
stos
cmp
cmpsb
and
sbbl
xor
test
es
jb
dec
and
mov
inc
jnp
inc
aas
addb
lock
pop
dec
push
inc
adc
xor
int3
fsubs
push
inc
cli
shrl
int
xchg
push
shld
sub
fisttpll
repz
pop
enter
add
inc
icebp
jns
xchg
dec
add
stos
dec
jl
jo
inc
insl
enter
iret
nop
lcall
sub
mov
xchg
insl
jnp
nop
xchg
fptan
shrb
addr16
cmp
jae
mov
scas
push
lahf
jge
cli
sbb
push
insl
push
add
cmp
lods
imul
rcrl
dec
xchg
xchg
adc
es
jle
sub
mov
pop
push
push
sahf
loope
das
sub
adc
out
fwait
and
test
jbe
dec
mulb
cld
sub
sbb
jg
push
inc
xchg
loopne
add
adc
and
push
push
test
loop
cmp
sbb
mov
mov
pop
dec
ds
js
mov
mov
jbe
lahf
xor
or
jg
notb
daa
push
pop
daa
subl
or
enter
ret
sbb
int3
sub
fs
dec
adc
mov
test
je
enter
jae
cwtl
xchg
push
dec
mov
pusha
insl
adc
mov
hlt
pop
shll
push
mov
rcrl
aam
mov
or
inc
dec
in
cli
adc
shlb
add
orl
pop
push
bound
sahf
push
mov
push
push
mov
and
iret
jecxz
lret
inc
cwtl
arpl
fldz
out
lea
adc
or
jae
cwtl
mov
inc
pop
pop
adc
stc
pop
xor
int3
je
iret
hlt
lock
sub
pop
push
test
lea
outsl
add
pop
adcb
int
mov
test
push
mov
push
mov
out
push
inc
in
popf
and
fistpl
stos
sub
scas
mov
or
cmp
xor
js
fs
and
cmp
lcall
xor
push
cmp
aad
std
mov
and
lret
cwtl
mov
jo
mov
pop
add
push
in
adc
insl
sar
mov
sub
fistpll
fstpt
aad
jbe
jge
leave
std
into
fcmovnbe
shrb
scas
test
push
loop
mov
add
repz
jnp
mov
push
sub
and
add
add
leave
push
xchg
inc
popf
sbb
jle
sbb
test
outsl
push
inc
xchg
inc
xchg
fbstp
add
iret
push
iret
add
and
iret
mov
push
mov
xor
jo
inc
imul
jmp
mov
add
pop
shlb
or
jbe
cmp
and
xchg
jmp
loop
nop
cmp
mov
iret
mov
mov
sbb
fwait
xchg
inc
jbe
dec
hlt
sbb
sub
mov
xchg
jnp
stc
mov
xor
jp
or
roll
adc
add
pop
or
insl
mov
jae
les
lock
icebp
mov
test
lock
add
sub
pop
xchg
mov
pusha
jg
mov
mov
fcmove
pop
loope
clc
clc
cli
dec
push
push
sti
pop
add
push
and
int3
and
test
shl
add
jecxz
xchg
pop
out
xor
jl
jae
pop
jge
xchg
popf
pop
adc
sub
scas
push
inc
pushf
icebp
cld
push
stos
pop
or
cwtl
and
rcrb
push
outsl
ret
adcb
aaa
xor
cmpb
jbe
test
dec
mov
xlat
inc
push
and
das
inc
shrl
cs
xchg
sub
rolb
and
push
dec
add
pop
pushl
test
sub
jb
push
scas
add
pop
push
ret
pop
inc
out
jne
xchg
dec
push
adc
inc
fwait
dec
and
daa
sbbb
push
das
cmpsb
mov
movsl
iret
sub
mov
adc
cmp
insb
lock
out
ficoml
jl
jle,pt
test
imul
mov
mov
ljmp
or
aas
add
fnstenv
int
dec
imul
je
call
popa
cmp
int3
test
sub
rcr
sub
scas
stc
adc
int
out
mov
addr16
mov
lret
loope
ret
stos
stos
lret
out
pop
jecxz
sub
pop
ja
push
inc
es
push
inc
jns
dec
shll
scas
sbb
fimull
pop
mov
pop
xor
les
fcoms
insl
dec
popa
insl
sbb
mov
mov
inc
data16
push
fsubrs
push
mov
cmp
add
jge
bound
jne
test
inc
jp,pn
inc
andl
notl
shrb
and
repz
cmc
outsl
cmp
xchg
adc
xchg
idivl
out
push
sahf
push
loopne
sub
jmp
shr
xchg
mov
popf
mov
mov
mov
add
bound
mov
cmpsb
dec
popl
and
jp
mov
js
jecxz
lods
xor
push
sbb
cmpsl
push
in
test
dec
or
inc
mov
inc
divb
mov
movb
xor
test
lahf
jne
mov
sub
insl
pushf
fistpl
sbb
pop
int3
mov
clc
jns
mov
ret
dec
fistpl
and
out
mov
and
sarb
cltd
les
push
nop
lcall
sbb
add
or
jb
mov
push
dec
lret
pop
sti
sbb
std
sub
addr16
mov
fstpt
jae
mov
scas
fsubrs
pop
xchg
es
cmp
gs
movsl
into
xchg
test
cltd
or
mov
sub
dec
fwait
out
push
repz
sub
inc
rcrl
ffree
pop
xlat
rorb
push
add
fwait
jb
inc
push
sub
cmp
sahf
cmp
add
movb
lret
mov
insb
out
adcl
test
dec
xor
mov
sbb
mov
sbb
test
das
mov
andb
mov
lret
cmc
imul
fucomip
mov
fdivrl
mov
stos
gs
cmpsb
mov
stc
adc
lods
adc
mov
ror
inc
xor
cld
sbb
push
in
jge
shrb
jecxz
cmp
sete
fiaddl
lods
xor
mov
mov
int3
mov
adc
mov
fildll
xchg
push
das
cmpsb
mov
xor
mov
out
in
inc
xchg
xlat
or
lods
fnstsw
aam
cmpsb
lea
popa
push
add
fisubs
sub
pop
sarl
sbb
jns
push
aam
std
lahf
insl
popa
mov
sub
ja
je
scas
or
cmpsl
jg
out
aam
shl
mov
nop
movsb
pusha
sbb
mov
push
ret
jnp
lock
in
or
mov
sub
mov
xor
mov
jmp
inc
cmp
or
das
cmp
iret
mov
xor
mov
sbb
mov
test
incb
daa
jl
fdiv
or
fs
icebp
and
test
stos
sub
test
sub
das
push
jge
pavgw
test
arpl
fwait
imul
jmp
xchg
dec
push
xchg
jbe
inc
inc
sub
lock
sub
push
mov
mov
lds
repz
add
imulb
test
jle
jl
popa
sub
popf
insl
inc
sub
imul
mov
ja
add
fcmovbe
ret
mov
cmp
les
enter
jge
adc
lcall
outsl
loope
arpl
mov
xor
sub
xchg
pushf
xchg
adc
loopne
cmpsl
pop
lods
rcl
test
repnz
test
adc
pop
rol
clc
aaa
fwait
mov
lret
jl
pop
sub
lea
iret
mov
aaa
dec
inc
ror
add
or
jmp
outsl
adc
cmp
mov
scas
add
and
int
mov
jg
or
ss
cmpsl
pop
inc
out
in
repnz
movsb
mov
and
xchg
imul
mov
pop
jle
and
rcr
adc
xchg
pop
jns
cmc
inc
or
jb
fsubr
mov
dec
movsl
ss
push
jns
sbb
pop
arpl
scas
and
mov
es
and
push
sbb
out
jb
jbe
cmpsl
mov
or
pop
mov
xchg
gs
mov
xor
stc
cli
push
pop
mov
adc
mov
mov
shr
imul
dec
inc
insb
sub
sub
push
das
inc
xor
pop
fdivrl
repnz
dec
inc
jle
xor
xor
mov
popf
cmpsl
pop
imull
movsl
aad
repnz
ja
js
mov
adc
ss
je
jge
insl
push
addr16
in
addl
xor
sub
mov
xor
rolb
das
ret
adc
call
fiadds
xchg
dec
fistps
ja
outsb
loop
cmp
cmc
in
out
imul
push
dec
mov
das
adc
inc
js
subb
mov
lret
das
in
push
in
pop
mov
mov
push
ja
pop
push
shll
aas
lret
lods
dec
push
aam
xchg
out
pop
in
inc
insl
mov
aas
mov
repnz
cmp
test
pusha
and
fadds
xchg
sub
cltd
stos
sub
movsb
imul
aad
fsubs
inc
xor
lcall
jmp
arpl
ret
jp
cmpsl
add
leave
pop
cmpsl
and
test
add
repz
popf
inc
push
and
outsl
imul
repz
popf
jecxz
push
int3
xchg
and
xor
sub
cltd
xlat
sbb
pop
je
or
inc
ror
inc
mov
daa
into
add
xor
std
rolb
xor
inc
rcrb
lea
inc
aad
popa
ds
dec
insb
js
push
aam
push
sbb
sub
inc
jo
aam
ss
mov
pop
cltd
add
push
lahf
test
pop
loopne
jle
sub
icebp
sub
jne
or
fldenv
mov
std
push
addl
test
ret
lea
sti
int3
in
mov
leave
cmp
mov
pop
das
mov
les
cltd
ds
aam
clc
or
inc
insb
sbb
insb
inc
lods
in
mov
jnp
pusha
rcll
adc
or
push
mov
cmp
push
hlt
mov
sbb
cmpb
je
inc
stos
or
sti
fnstsw
adc
adc
sbb
loopne
sbbb
jle
adc
cli
mov
push
xor
scas
xor
test
insb
sahf
mov
and
sub
pop
lcall
icebp
mov
pop
xchg
les
xchg
pop
inc
mov
ss
jno
push
adc
dec
jb
mov
jbe
jge
sbb
inc
and
nop
and
mov
sbb
and
xchg
hlt
xor
or
xchg
add
ss
out
fmull
mov
movsb
repz
int3
xor
adc
ret
inc
cmp
jl
mov
mov
std
inc
mov
movsl
loope
cltd
repz
rclb
call
pop
add
das
mov
and
xor
jo
fcompp
stos
mov
adc
cli
mov
sahf
adc
lds
arpl
mov
inc
mov
pop
inc
pushl
dec
jecxz
mov
movsl
jo
xor
inc
xchg
mov
popa
mov
incl
fcomi
adcl
leave
push
sbb
inc
or
xor
xor
mov
mov
pop
and
repz
add
lret
fcompl
cmp
aam
xorl
cmpsb
fcomps
into
sbb
jb
dec
imul
jne
scas
fdivrs
jge
ficoms
scas
movsl
cwtl
push
pusha
lods
jne
sub
jb
mov
adc
aas
arpl
repnz
xchg
repnz
stos
cmp
dec
int
xor
pop
in
dec
or
scas
push
enter
outsl
cwtl
aam
loope
xchg
mov
in
jne
int
dec
fcmovne
scas
aaa
add
fildll
push
sbb
push
dec
push
std
iret
sbb
testl
repz
xchg
cmc
mov
jno
pop
notb
jns
mov
lret
mov
push
mov
mov
mov
xchg
jns
cmp
xor
mov
insb
add
fwait
inc
popf
push
lods
mov
lds
jmp
pop
loope
bound
dec
sub
push
push
and
test
das
push
cld
xor
pop
stos
inc
xor
cld
mov
je
insb
dec
test
sbb
add
popa
mov
xchg
out
je
repz
ror
push
dec
mov
loopne
mov
lret
repz
add
pop
lret
popf
in
cli
enter
xchg
je
outsb
scas
pop
hlt
pop
clc
cmp
dec
sub
ficomps
lods
into
jge,pt
fwait
ret
insl
push
cld
push
into
lock
std
sbb
test
xchg
jo
sub
push
imull
cmpsl
mov
dec
fimuls
xchg
fimuls
mov
jp
mov
inc
aad
inc
call
xor
lahf
lods
imulb
lret
jecxz
outsl
jle
push
jnp
cmp
leave
sbb
hlt
fldcw
or
dec
fisttpll
enter
fsubs
and
jg
inc
leave
adc
inc
clc
scas
push
test
rorb
out
or
cmc
scas
dec
lahf
mov
cwtl
int
push
icebp
dec
mov
andb
leave
ficoms
addr16
popa
scas
mov
mov
and
or
pop
std
jnp
lret
sub
aas
sub
or
das
pop
inc
pusha
aas
cmp
xor
insb
rorb
push
lods
js
outsb
cmp
repnz
sub
push
jno
jge
das
or
push
sbb
js
jmp
jno
scas
pop
mov
mov
stc
mov
push
pop
cmp
sarb
int3
sbb
nop
arpl
test
ret
lcall
std
xor
pop
je
insl
das
iret
arpl
rolb
repnz
jp
or
cmp
dec
push
push
mov
xor
push
rcrl
xor
xchg
sbb
xor
or
repz
sbb
xchg
mov
xor
das
sbb
sbb
xor
data16
mov
ljmp
std
inc
cmpsb
add
or
cwtl
pushaw
leave
pop
add
in
mov
aaa
neg
lock
movsl
cs
xor
lret
lcall
add
mov
cmpsl
mov
push
aaa
lods
mull
xadd
push
cwtl
jae
mov
push
int3
push
rcr
std
mov
jg
ret
mov
mov
inc
imul
cltd
insb
cmp
push
jo
aam
ret
add
test
movsb
mov
push
dec
stc
pop
sbb
popl
ja
rcrl
mov
icebp
cmp
pop
in
gs
jb
cmp
mov
jne
testb
xchg
hlt
lret
pop
pop
lcall
popf
imul
push
adcl
mov
mov
push
inc
sub
cmc
jbe
jae
adc
jg
sbb
xchg
lock
out
inc
popa
pop
lret
divb
out
mov
and
dec
leave
or
pushf
les
add
lcall
dec
sbb
ficoml
push
sti
aaa
pop
cmp
out
call
xchg
jl
mov
xchg
mov
add
mov
fsubrs
xor
jge
mov
addr16
xor
fistps
mov
mov
sbb
pop
xchg
cld
sti
addr16
ss
and
stc
fsubrl
in
scas
notl
scas
iret
push
outsb
loopne
xchg
push
into
ds
mov
movsl
arpl
mov
imul
ja
or
gs
xchg
pop
xchg
pusha
mov
sti
cmpsl
cmc
mov
sub
in
or
sbb
lock
push
je
das
jmp
add
add
push
inc
and
dec
xor
xor
inc
cli
es
add
jp
imul
adc
adc
aam
xchg
ja
push
mov
jecxz
imul
mov
ss
gs
test
pop
adc
pop
lret
sbb
daa
xor
add
add
xor
dec
dec
add
dec
lret
dec
shlb
test
push
mov
pop
xor
xor
and
in
cmovle
dec
icebp
in
fidivrl
leave
xchg
cmp
pandn
aas
outsb
sbb
movsb
loopne
popa
cmp
out
test
mov
mov
push
sti
add
fdivs
sbb
out
push
int3
fimuls
push
fcoml
jae
nop
sub
xchg
adc
das
xchg
in
xchg
push
pop
mov
adc
pop
nop
shlb
in
in
sbb
outsb
icebp
stos
mov
les
gs
bound
mulb
ror
fisttpl
add
inc
or
mov
adc
inc
in
das
movsl
cmp
add
sbb
mov
jmp
jae
dec
xor
in
cmpsl
inc
lcall
mov
shl
imull
or
shrb
icebp
xor
cmovne
sbb
sbbb
mov
test
pop
aaa
xchg
mov
jbe
inc
or
divb
sbb
xchg
inc
mov
adcb
pop
test
in
mov
popa
or
cmp
fwait
jmp
and
push
test
shll
jo
add
mov
call
in
fisttps
jns
mov
jl
add
sti
loopne
jge
ffreep
add
out
and
pop
insl
adc
adcb
popa
cmc
add
enter
iret
cmc
lods
ss
jne
jae
scas
fbld
sarb
cmpb
mov
jl
jae
cmc
push
aaa
and
inc
jmp
and
bound
negb
stc
push
add
jno
sbb
xchg
adc
test
cmpsl
hlt
test
mov
stc
lret
stos
sub
dec
mov
negb
xchg
cmp
adcb
scas
subl
pop
and
jne
out
mov
sbb
inc
inc
pop
insl
sbb
push
adc
cmpsb
mov
fadds
push
stos
test
cmp
test
sbb
and
arpl
js
adcl
nop
push
addr16
add
jae
cmp
sbb
std
xor
cmc
adcb
dec
int3
pop
shlb
adc
jmp
jle
imul
jne
mov
sub
pop
int3
add
jb
mov
xlat
and
movsb
out
inc
pop
daa
fcmovne
sbb
xchg
pop
stc
add
cli
xor
cld
xor
pop
rcrl
push
pop
shl
aas
push
add
mov
ja
ficompl
in
or
pop
sub
xor
jae
xchg
mov
dec
mov
mov
pop
jmp
jae
push
test
jg
push
pop
pop
and
mov
outsl
test
jbe
sbb
mov
lret
dec
dec
in
pop
adc
dec
jae
test
xchg
in
mov
mov
adc
mov
cmpsl
xor
jp
fdivrl
mov
jecxz
jns
sub
dec
mov
inc
dec
xlat
dec
fidivrl
push
fldt
in
or
add
jno
fs
stos
jmp
inc
lds
xchg
addl
cmp
xchg
push
cmp
mov
and
sub
jno
lock
xor
lahf
jb
fcoms
adc
jl
hlt
or
mov
push
mov
jnp
ja
out
lcall
or
sbb
movsl
push
cmp
int
xchg
iret
sahf
and
or
incb
jle
pushf
loope
xchg
jae
mov
mov
push
dec
mov
cli
push
xchg
insl
pop
dec
not
adc
movsl
pop
cli
idiv
jg
repnz
xor
lea
mov
fisttpll
jge
into
ss
adc
lahf
lcall
fldl
stos
xor
jl
shll
and
repz
jb
lret
stos
mov
sti
pop
sub
test
daa
sbb
or
lods
adc
cs
lds
pop
insl
nop
cmp
das
ljmp
jne
pop
mov
loop
xchg
mov
cmp
shl
sub
stc
jb
movsl
ljmp
cmpsb
nop
fidivrl
adc
aam
push
jmp
daa
out
and
sti
inc
jecxz
les
cltd
xchg
jge
rcrb
lcall
dec
and
mov
adc
int3
sahf
or
jns
out
lods
scas
sahf
daa
aaa
dec
shlb
push
loope
or
cmp
dec
gs
sub
add
outsb
mov
mov
stos
sbb
sbb
loop
mov
and
out
or
push
pop
mov
xchg
std
mov
test
dec
lods
scas
mov
out
out
std
mov
fwait
mov
scas
outsl
add
dec
arpl
inc
pushf
out
pop
inc
adc
or
or
sub
push
cld
outsl
pop
loope
push
popa
xlat
mov
in
mov
test
stc
test
push
aad
loop
lea
imul
test
cmp
dec
fwait
push
sar
daa
cli
lcall
or
pop
cmp
les
cld
addr16
insl
and
inc
nop
xchg
adc
mov
push
jbe
inc
inc
cmp
inc
dec
rorl
mov
add
js
cld
aas
es
ja
and
push
inc
cld
pushf
lea
inc
cmpsl
push
xchg
mov
aas
jle
dec
cmp
adc
inc
xor
xor
popf
imull
add
pop
xchg
push
jmp
sub
push
imul
outsb
mov
mov
lea
mov
bnd
push
sti
mov
ret
mov
dec
mov
pop
cltd
or
gs
sub
cmp
xchg
lds
xor
pop
mov
push
adc
xor
test
xchg
adc
lret
bound
adc
fildll
xchg
je
enter
mov
icebp
cmp
jb
in
imul
arpl
decl
in
fs
jle
xchg
jg
jmp
sarb
xchg
fcoms
push
lret
mov
iret
orb
lock
cmp
stc
inc
rclb
arpl
sbb
adc
cwtl
mov
pop
cltd
ret
sbb
pop
dec
popa
in
adc
sti
loop
pop
stos
mov
pop
sub
pop
sbb
sbb
push
cltd
mov
ret
in
mov
insl
in
lea
outsb
sbb
push
shrl
scas
sbb
ret
cwtl
movsl
idivl
sbbl
sub
jb
push
lret
clc
jg
push
decb
cmpb
pop
pushf
sbb
xchg
sub
cmpsl
lcall
sti
outsl
popl
daa
cmp
notl
lcall
and
jno
sub
scas
enter
out
cmpsl
clc
mov
into
ret
stos
sub
nop
sub
mov
cld
pop
sub
adc
xor
std
mov
lcall
xchg
popl
adc
and
imul
repz
cmp
jo
ret
lahf
jb
mov
cwtl
mov
mov
add
sahf
mov
in
aam
add
insl
or
fidivl
aaa
in
leave
add
cmp
push
loope
das
mov
jns
sub
out
cmpsl
lea
lcall
push
adc
jb
movsb
repz
jo
test
in
mov
xchg
decl
cmp
dec
push
dec
inc
sbb
xchg
and
in
rol
or
ret
add
xor
mov
pop
pop
jnp
and
cs
mov
push
push
cmp
cmpsl
fdiv
jne
call
push
push
inc
and
or
cmc
add
mov
mov
je
add
xchg
mov
movsb
pop
cmp
cmp
negb
push
pop
add
mov
mov
in
rcrl
in
je
mov
and
xor
fdivs
mov
xor
popa
mov
mov
jb
cwtl
iret
cwtl
mov
outsl
cmp
cmpsl
mov
adc
lea
test
mov
rclb
ret
rcll
dec
dec
xchg
xor
movsb
mov
shll
xchg
push
xor
pop
out
imul
divb
adc
outsb
xor
and
sbb
mov
sub
mov
mov
stc
popa
pop
mov
or
add
repnz
in
lret
mov
mov
enter
or
ret
add
xchg
adcb
add
sbb
cmp
insb
notb
sbb
pop
jbe
enter
cmc
dec
jmp
test
leave
adc
add
jo
jge
mov
and
sub
dec
jge
aaa
cltd
lahf
pop
loop
inc
fidivl
sub
jb
cmc
lock
test
mov
xor
xchg
add
adc
dec
out
jns
push
movsb
test
mov
pop
jb
lahf
sub
bound
mov
xlat
adc
inc
in
cwtl
mov
out
mov
or
imul
arpl
dec
adc
jns
mov
out
jbe
push
sti
cli
mov
imul
scas
or
mov
xchg
das
imul
ret
shll
popa
enter
adc
mov
out
pop
mov
xchg
dec
ret
dec
and
pushf
icebp
dec
mov
stc
dec
loop
or
sbb
int
mov
andb
xor
test
pushf
iret
cmp
mov
enter
adc
xchg
ljmp
xchg
and
inc
dec
sbb
shrl
icebp
popf
pop
pushf
dec
in
inc
arpl
or
scas
sbb
xchg
push
inc
inc
int
push
bound
test
add
or
xchg
ficoml
jbe
test
jle
aas
lcall
js
repz
test
push
fistps
and
out
xor
arpl
sbb
scas
xor
loop
xchg
clc
nop
lahf
lret
scas
jno
divb
xchg
aam
push
sbb
fistps
je
std
dec
cld
xchg
cmp
insb
add
mov
jmp
pop
aam
add
sahf
js
xchg
jne
jo
cwtl
mov
fmull
test
movsl
add
testl
push
mov
or
push
mov
and
dec
mov
insb
sarl
push
int3
add
push
mov
xchg
loopne
outsb
sahf
sub
sbb
and
mov
aaa
aad
mov
insl
dec
mov
mov
aad
adc
test
dec
mov
jae
xchg
test
aam
scas
into
lods
pushf
loopne
cwtl
push
and
in
add
movsl
data16
jnp
sub
scas
shrl
imul
stos
lcall
js
ss
out
xchg
idivl
xchg
lret
arpl
outsb
sbb
mov
pop
sbb
jge
pushf
mov
ss
test
testb
stos
add
mov
insl
cmpsb
movsb
rcr
je
push
mov
dec
add
ret
shlb
cmp
push
add
lds
jl
cmp
loopne
repnz
aam
pop
and
scas
push
and
stc
dec
inc
lods
mov
or
fcmovu
push
lahf
out
int3
add
add
push
jmp
mov
dec
push
cmc
add
dec
mov
xchg
or
add
imul
je
arpl
sbb
jns
jmp
lret
ljmp
dec
mov
out
inc
cmp
or
pop
push
inc
cwtl
jns
mov
dec
push
xor
mov
mov
adc
js
add
ret
xor
xchg
loopne
iret
ljmp
jns
jle
pop
fldt
pop
lods
scas
loop
pusha
ficompl
cmc
das
leave
xor
aaa
call
push
int3
loope
pop
jg
xor
cmp
mov
sti
jmp
add
ljmp
in
push
sub
cmp
pop
out
sti
sub
push
test
in
pop
fsubp
int3
in
adc
and
add
and
mov
fsubp
mov
sub
aaa
push
pop
icebp
dec
cltd
bound
mov
fstpt
mov
lret
inc
mov
aas
movsl
lods
icebp
mov
lahf
lods
ficoml
movsl
push
ds
pop
arpl
test
aas
lods
push
sub
je
cmp
pop
lea
lods
jle
fidivs
push
mov
aaa
mov
dec
daa
jecxz
adc
sub
cld
xchg
movb
pop
jle
cltd
add
push
sub
xchg
shlb
ljmp
loopne
ljmp
ret
testb
mov
imul
rolb
cmpsl
les
xor
push
or
inc
cwtl
or
fmull
aaa
in
add
pop
es
and
ficoml
fs
inc
in
aam
ret
xor
mov
enter
daa
cltd
div
sub
cmc
sti
push
push
andl
pop
push
jns
xchg
aam
fnstsw
inc
inc
xchg
mov
es
mov
ret
mov
cmpl
fistl
dec
sbb
pop
out
add
mov
inc
fs
cmp
ret
jns
inc
add
int
addb
int3
aas
sbb
aas
testl
jns
gs
int
xchg
pcmpeqw
and
test
je
jb
pop
into
push
pusha
iret
mov
in
push
cmp
push
sub
adc
lcall
mov
addr16
push
rcrl
data16
popf
dec
aas
mov
in
mov
ret
loop
mov
inc
test
leave
adc
xor
push
jge
inc
mov
stc
pop
mov
dec
adc
int
and
stos
cli
in
inc
dec
pop
cmp
loope
repz
clts
xchg
xchg
or
mov
push
inc
pop
aam
fistpll
cli
out
xchg
pop
mov
in
out
sbb
and
test
jnp
aad
cld
sti
call
mov
shlb
jl
stos
movsl
xor
ret
xor
stos
ljmp
mov
cs
pop
jecxz
pusha
jp
jnp
clc
stos
cmp
push
ds
stc
xchg
std
mov
dec
leave
loop
push
sbb
popf
cmp
sbb
fiadds
xchg
xchg
out
adc
fadd
push
push
arpl
mov
lea
push
cwtl
mov
test
sbb
xorl
repz
cmpsl
xchg
sub
cs
mov
and
movsl
repz
cmp
or
js
int
insb
jecxz
xchg
dec
loop
jge
mov
lret
pop
cld
sbb
orl
jle
mov
dec
xor
out
in
ficoml
stc
pop
les
cli
pop
or
push
stc
adc
dec
icebp
decl
push
loop
fiaddl
inc
mov
jae
mov
xchg
std
xchg
stos
int3
xor
andw
mov
jmp
xor
ret
xchg
pop
sub
inc
jno
sbb
pop
or
mov
xor
jbe
jp
je
mov
mov
jnp,pt
orl
faddl
jae
test
dec
cmp
test
scas
push
inc
dec
lret
gs
loopne
cmp
repz
pop
in
ret
xor
xchg
push
cmp
test
scas
pop
or
or
aam
push
leave
ret
dec
sbb
dec
in
xor
in
gs
push
jg
jno
adc
sti
mov
daa
dec
add
sub
call
mov
into
stos
inc
xchg
fwait
pusha
stos
push
int3
mov
adcb
lahf
idivb
inc
mov
jne
leave
inc
cwtl
enter
shrb
mov
out
mov
lods
notl
mov
add
inc
out
jo
mov
push
fdivl
sbb
inc
xchg
sbb
inc
inc
gs
sub
mov
or
mov
stos
lcall
fnstenv
xor
dec
xchg
pop
mov
add
pop
sub
mov
xchg
pusha
imul
fisttpll
ds
jb
cmpsl
in
xor
cmpl
outsb
in
cmp
and
mov
sar
dec
divl
push
bnd
add
add
sbb
push
adc
lds
dec
into
mov
sbb
fimull
add
mov
neg
shlb
dec
mov
in
sub
ret
cmpsb
mov
cmc
ret
mov
mov
std
xchg
scas
mov
out
sbb
mov
mov
adc
in
push
jmp
add
ja
cmpsb
push
icebp
test
lret
and
pop
cs
dec
mov
fcoms
mov
loopne
jne
fcompl
xor
adc
pop
push
jnp
lock
xor
jp
dec
push
lock
xchg
aam
mov
aad
shrb
movsl
imul
cmp
lods
dec
xchg
xorl
out
stos
mov
push
imulb
jmp
mov
pop
test
je
inc
xchg
nop
push
cmpsl
add
shlb
clc
sbb
and
xor
ret
leave
pop
arpl
jp
and
and
xchg
subb
cmc
xchg
lods
cmpsb
sbb
dec
xchg
xchg
ret
jmp
imul
daa
fsub
movsl
xchg
fincstp
je
sbb
sarb
mov
sti
movsb
sbb
xchg
inc
or
mov
mov
pop
sbb
jle
sbb
jne
adc
sub
fsts
sti
add
cmpsl
jg
popa
jle
dec
out
jmp
js
xchg
add
mov
addr16
std
lret
cltd
xchg
xor
hlt
xchg
mov
adc
lods
in
dec
mov
pop
or
testb
sbb
gs
dec
jbe
int
push
inc
mov
mov
push
push
movsb
sub
jns
aad
mov
push
push
leave
rol
gs
dec
jb
enter
jo
aaa
in
sub
cmp
mov
xchg
ret
push
outsl
in
test
mov
in
imul
loope
and
aam
sar
fidivrl
mov
cmp
mov
pushf
call
call
pop
stos
outsb
and
jbe
repz
sbb
sub
jb
test
cmp
push
sub
cmc
clc
sub
cmpsl
int3
or
cltd
stos
dec
es
leave
adc
sub
or
icebp
sbb
leave
pop
icebp
cld
xchg
adc
popf
enter
mov
pusha
mov
aam
inc
adc
pop
add
ret
push
lods
roll
scas
repz
scas
inc
and
cmp
in
jmp
in
ja
xchg
cwtl
aas
adc
or
mov
mov
inc
xlat
xchg
mov
xor
or
mov
fwait
testb
push
pop
pop
add
fwait
ror
xchg
and
jge
sbb
leave
pop
ret
repnz
dec
sbb
pop
mov
pop
stos
in
push
cmp
dec
mov
lahf
sbb
rclb
mov
xchg
xor
imul
cmp
leave
pop
pop
xchg
popf
je
icebp
dec
mov
into
jl
imul
sti
sbb
push
mov
ljmp
jo
jne
aaa
mull
sub
push
fisttpl
mov
or
push
int
adc
outsl
imul
xlat
add
and
xchg
xchg
shrb
mov
push
adc
test
xor
jmp
add
cmp
ss
jae
sub
in
push
arpl
pusha
in
inc
pop
inc
les
andl
sbb
aaa
jmp
jno
gs
jne
pop
push
jle
push
in
jae
xlat
add
push
push
sbb
fiaddl
sub
nop
ret
test
jo
dec
push
arpl
pop
add
les
add
sarl
in
out
int
sub
xchg
mov
shll
in
testb
dec
xchg
xor
dec
push
add
jmp
push
js
mov
adc
sbb
icebp
mov
movsb
jb
shlb
std
loopne
xchg
cmp
repz
jle
mov
out
pop
int3
fstpt
out
pop
call
jns
lret
sbb
int3
mov
dec
jae
out
cltd
psubsb
jge
push
pop
mov
out
or
lcall
dec
lods
test
inc
mov
orl
out
shll
push
push
sti
mov
test
jge
rcrl
aad
int3
loopne
lock
jmp
mov
arpl
aaa
lock
imul
outsl
bound
icebp
ds
inc
fdivrs
sub
ja
or
jno
popa
pop
enter
sti
inc
sbb
or
into
lods
inc
push
adc
push
rcrl
std
xor
pusha
cli
mov
fistl
mov
jp
adc
sahf
out
sarl
dec
sub
add
pop
aas
repnz
ret
pop
sbb
outsl
enter
enter
mov
clc
mov
rcrb
adc
cmpsl
lods
jo
xor
mov
sub
loopne
test
fnsave
insb
sbb
mov
jb
jb
add
fdivrl
push
cmp
jo
outsb
jmp
cmp
mov
push
add
mov
mov
pop
roll
shlb
cmpsl
jnp
push
mov
pusha
lahf
fidivrs
int
mov
sub
arpl
adc
mov
push
pop
outsl
in
pop
inc
and
test
das
loopne
imul
testl
mov
mov
dec
sub
xor
mov
cmp
sbb
xchg
stos
add
xchg
out
pop
or
or
leave
jg
loope
pop
cmp
jmp
xchg
shr
dec
mov
jb
movsb
ljmp
mov
cwtl
lea
and
dec
mov
xchg
stos
out
subl
imul
jbe
lods
loope
das
fld
mov
dec
rcrl
sub
fucomi
insb
call
cmp
xor
popa
add
adc
jecxz
cwtl
or
lret
arpl
and
pushf
xorl
xchg
mov
ds
and
insb
rclb
rcl
and
pop
xor
aas
pop
sbb
cmpsb
ljmp
mov
add
add
push
mov
add
in
ss
pop
mov
fwait
lods
imulb
loope
mov
mov
push
mov
out
push
daa
xor
xor
fldenv
movsl
push
dec
inc
fucomip
pop
ret
cmp
adc
aam
or
icebp
xchg
call
lahf
loopne
dec
out
inc
das
push
push
test
push
xor
jle
dec
inc
adcl
push
sbb
mov
mov
pause
pop
mov
loopne
cli
push
xchg
xchg
repz
orl
sub
insl
cmpsb
pushf
mov
cmp
jle
mov
or
add
mov
pop
sub
lret
push
mov
pop
aad
mov
xchg
mov
or
imul
push
or
loope
push
mov
fidivl
cli
mov
lock
jo
in
jle
aaa
xlat
push
cmpsl
mov
lret
jge
sbb
iret
push
sahf
cmp
inc
mov
cs
jg
push
inc
push
jge
fcomps
pop
je
fwait
lcall
mov
adc
and
ds
pop
xchg
sub
xor
dec
jg
mov
data16
stos
sbb
shl
iret
xor
cmpsb
xor
xchg
daa
bound
iret
jbe
jecxz
push
mov
jns
ljmp
ljmp
in
cmp
out
sbb
and
mov
sub
push
shlb
pop
in
cmp
mov
pop
pop
xor
cs
repnz
mov
and
call
pop
sbb
out
pop
jb
adc
or
fidivrl
mov
xlat
sbb
lea
push
cmp
jg
cs
xchg
jae
dec
stc
cld
xlat
repnz
lods
jle
or
sub
jns
adc
mov
ja
xchg
adc
cmp
dec
leave
daa
adcl
sub
in
outsl
sbb
pop
xchg
and
in
mov
or
ja
sti
sti
js
xor
aas
cmp
das
xor
mov
push
cmp
daa
xor
or
jb
mov
popa
addr16
fs
xchg
out
es
rol
fiadds
cmp
mov
ss
xor
notl
mov
movsb
push
or
nop
sbb
pop
sbb
sbb
push
movsb
lods
or
lret
or
pop
subl
inc
dec
lahf
push
and
orl
int3
mov
aam
pop
pop
adc
out
pushf
sbb
adc
ja
aad
sub
xchg
mov
sbb
mov
xor
xchg
in
mov
lock
cmp
xchg
inc
cmc
cmpsl
into
sub
xchg
stc
dec
mov
cwtl
cmp
js
or
sbb
push
fcomp
mov
leave
lret
clc
cwtl
push
aas
and
enter
add
sub
jbe
pop
stc
rcrl
imul
xchg
mov
push
cltd
cld
mov
aaa
push
test
xchg
sub
xchg
xchg
add
in
push
iret
add
push
aam
in
inc
jle
bound
fwait
repz
jle
xorb
mov
cmpsl
aad
insl
mov
jns
nop
or
cli
jne
dec
nop
decb
add
cmp
bound
jp
mov
inc
ret
sbb
das
mov
and
int
adc
aaa
push
xlat
jle
xchg
pop
and
mov
shll
dec
pop
jne
add
cltd
ss
mov
insl
mov
test
and
sub
lea
int
mov
dec
nop
mov
scas
jg
pop
insb
push
aas
aam
fisubrl
in
je
test
xchg
faddl
and
out
imul
dec
adc
rcl
pop
loope
in
cmp
pop
ret
pop
push
sub
mov
fsubl
cmp
pop
cmp
pop
add
sub
jb
test
out
xchg
loop
jp
xor
sub
pop
mov
mov
inc
ja
push
cmp
flds
mov
out
inc
mov
js
xchg
shlb
adc
outsb
test
repnz
and
fidivrl
or
add
daa
pop
mov
clc
sbb
das
xor
lea
enter
add
jmp
xor
xchg
into
movsl
mov
dec
lods
adc
jmp
adc
aas
pushf
xor
push
push
int3
bound
sbb
negl
out
jl
in
sub
enterw
loope
aam
sbbb
testb
xchg
inc
mov
mov
sbb
loop
insl
xchg
jmp
sti
jp
dec
fisubl
stos
loopne
cmp
push
xchg
pop
mov
cmpsl
and
pusha
xlat
shlb
mov
xor
repnz
ljmp
sub
pop
mov
xor
or
cmp
xor
or
adc
inc
push
sub
and
adc
xchg
mov
inc
cmp
inc
shl
mov
incb
aas
insl
outsl
push
cld
mov
stc
cld
pop
arpl
adc
in
or
std
test
add
les
iret
dec
jnp
mov
dec
push
clc
mov
lds
cltd
jae
fwait
push
or
mov
xlat
jmp
cwtl
adc
pop
inc
out
shl
xchg
xchg
ss
pusha
popa
jae
in
jne
jbe
lret
gs
xlat
sub
pushf
jmp
mov
jge
dec
loop
sub
or
inc
lret
jnp
js
add
dec
int
mov
mov
test
and
xchg
sub
in
mov
jle
mov
mov
mov
sub
inc
jbe
mov
out
mov
jne
leave
rcrb
in
lods
pop
jne
pop
inc
cwtl
icebp
add
jbe
and
int3
adc
sub
loope
or
mov
sbb
push
ret
addl
jbe
enter
sarb
lea
imul
adc
popf
pop
aam
dec
mov
push
adc
fldcw
mov
mov
cmp
add
xchg
cmp
incb
pop
dec
pop
xchg
loope
mov
mov
mov
mov
mov
int3
cmp
and
test
adc
mov
xor
lcall
fdivrp
pop
jecxz
mov
leave
jns
adc
inc
insl
repz
leave
mov
mov
repnz
mov
lahf
push
jecxz
jg
dec
les
fwait
xlat
loopne
dec
push
sub
fs
cs
in
push
mov
ret
lods
xor
push
lock
xchg
xor
pusha
push
inc
incl
xchg
sbb
mov
push
lock
mov
leave
pusha
jg
lahf
test
js
dec
mov
xlat
int
ja
mov
lods
xchg
add
xchg
icebp
out
scas
lods
fisubl
leave
std
mov
add
xor
jp
lock
fwait
ss
pop
lret
ficompl
enter
mov
sbb
and
adc
push
fsubr
leave
mov
dec
mov
call
push
shl
xchg
push
pop
pop
cmp
pushl
lods
pop
sarl
xor
lds
push
or
xchg
inc
movsb
outsb
in
in
rcll
push
xor
add
jge
pop
sub
insl
stc
sahf
sub
mov
int
mov
push
mov
pushf
xor
aas
pop
inc
popa
cmp
stos
in
and
jecxz
dec
test
mov
negb
imul
push
push
repnz
sub
mov
repnz
stc
test
leave
pmaxub
out
es
pusha
sub
sbb
stos
xchg
mov
jo
jo
ljmp
aas
sbb
fsubs
xchg
cmp
pause
std
iret
dec
sbb
sbb
int
lock
mov
cmp
test
or
iret
xchg
jne
out
sub
inc
jns
mov
cmp
pop
xor
popa
mov
and
mov
push
and
dec
inc
lock
xor
fs
orl
cmp
pop
in
pop
ret
adcl
and
movb
outsl
mov
xor
cmp
cld
movsb
mov
out
test
inc
inc
ljmp
dec
rcrl
imul
dec
mov
stos
xchg
xor
dec
push
mov
call
push
pop
xor
sbb
pop
cwtl
sub
push
cmc
or
aad
out
dec
mov
sbb
cmc
add
xchg
jns
jl
rorb
daa
imul
push
fwait
sbb
pxor
or
daa
mov
mov
mov
cwtl
push
call
jge
imul
mov
pop
mov
lret
popa
pop
xor
pop
sbb
lahf
rdtsc
pop
das
mov
lcall
adc
out
lcall
inc
shrl
jmp
fwait
scas
mov
jbe
cmp
enter
cmp
sti
imul
sub
mov
sub
andl
repz
es
movsl
push
jmp
in
jmp
add
or
sti
push
xchg
pushf
loop
dec
ds
lock
xchg
subl
add
scas
fcmove
mov
lcall
push
jb
cmp
sub
push
lahf
fstpt
imul
xor
mov
clc
fwait
xor
repz
cmpsl
and
push
lods
fistpl
insl
cmc
jmp
xchg
scas
lret
mov
out
xchg
xor
outsb
mov
mov
divl
cli
sub
inc
enter
insb
notb
jp
stos
lods
cs
adc
jnp
cmc
mov
xchg
mov
jae
insb
inc
inc
int
shlb
repnz
je
mov
or
lock
mov
pop
jnp
mov
shlb
nop
loopne
push
adc
or
pop
cmp
loop
mov
int
lods
pop
mov
sbb
dec
mov
pop
inc
pop
or
sahf
mov
mov
ret
dec
add
mov
xor
pushf
or
shr
outsb
lret
cmpsb
or
rcr
adc
clc
pusha
lock
mov
je
xchg
outsl
cli
push
icebp
fs
xlat
mov
aaa
sbb
xchg
push
out
lahf
mov
sbb
mov
jle
push
sub
mov
sbbb
cli
enter
xchg
fmull
cld
ret
adc
test
sub
pop
lcall
leave
inc
sti
push
loope
xchg
jge
iret
mov
je
mov
mov
lret
and
pop
and
cwtl
daa
adc
pushf
movsl
xchg
ja
sbb
push
pop
add
call
sub
and
xchg
ficomps
cmp
loope
nop
pop
popa
fstps
outsb
cltd
repz
sbb
push
rorl
mov
inc
dec
push
pop
add
push
push
mov
in
rcll
fiaddl
out
jp
push
dec
fsubrs
testb
rolb
data16
push
pop
mov
ss
lods
xchg
jecxz
and
movsb
push
mov
rol
add
pop
testb
jne
movsb
mov
dec
ljmp
inc
bound
gs
cltd
rorl
jns
push
mov
mov
movsb
and
mov
bound
push
jle
mov
push
xchg
add
dec
mov
mov
es
inc
xchg
mov
mov
nop
ss
mov
daa
dec
add
add
data16
sti
pop
pop
es
ss
fnstenv
dec
xor
popa
arpl
pop
adc
xor
or
adc
lret
popf
xor
mov
sahf
xchg
sbb
push
pop
insl
or
rcr
cmp
sub
lahf
int
nop
mov
cmpl
mov
ror
cmp
notb
push
icebp
cmovno
fidivrl
insb
mov
iret
fwait
outsb
mov
or
add
push
and
cmp
inc
pop
sub
jl
sbb
ret
lret
jb
lret
sub
mov
sbbb
lea
std
xchg
push
add
xor
inc
shrl
adc
xchg
fnstcw
imul
lcall
pusha
mov
nop
stc
xchg
vmovss
pop
subps
mov
stc
cmp
in
ljmp
popa
dec
dec
xor
xor
in
fcomi
xchg
or
push
outsl
es
lea
fwait
aad
sarl
or
add
jge
aam
or
inc
and
enter
dec
out
addl
push
sahf
push
pop
xchg
inc
cwtl
push
xor
nop
pop
mov
bound
inc
and
xor
ljmp
inc
xchg
leave
not
mov
mov
pop
add
and
jle
sub
iret
add
push
push
fs
daa
xor
lcall
sbb
adc
loope
cmpl
test
adc
push
mov
lods
inc
sbb
imul
or
les
nop
mov
pop
adc
cmp
sahf
jecxz
jns
ficompl
cmp
dec
and
clc
add
and
mov
mov
adc
xchg
cld
jbe
or
mov
fs
inc
mov
inc
and
pop
jg
loope
xchg
and
cmc
or
andb
xor
loop
mov
adc
jmp
outsl
inc
dec
jmp
sti
out
loope
rol
shr
sub
stc
inc
push
fsubl
outsb
fimuls
outsl
push
sbb
xor
pusha
ret
in
and
xchg
sbb
or
sbb
mov
add
mov
fwait
fs
jne
xor
add
mov
xor
push
ret
call
mov
mov
aaa
repz
cmp
test
fucomp
in
push
out
and
test
sbb
mov
dec
pop
fdivrl
shlb
and
xchg
push
add
xlat
jecxz
lret
lods
dec
push
sti
decb
pusha
mov
test
arpl
movsl
ret
cmc
imul
mov
enter
gs
rolb
lock
cmp
call
mull
cmpsl
sub
mov
or
cmpsb
in
ficomps
sub
fimull
lret
in
fwait
or
or
call
cmpsb
data16
xrelease
fidivs
movsb
push
sarb
jb
cs
std
push
dec
or
mov
pushf
sahf
push
sub
ss
fmuls
in
cli
outsl
stos
lea
dec
call
orl
cmc
mov
std
repnz
jge
cmp
jle
xchg
negl
lods
sub
test
cltd
loopne
fwait
pop
loopne
jl
mov
dec
pop
jp
pop
je
add
sub
xchg
jo
cmp
rcrl
in
test
add
xchg
cwtl
fidivs
mov
sub
jnp
and
dec
cmp
mov
xor
mov
int
aam
aaa
dec
lds
imul
push
gs
and
jmp
inc
or
cmpsl
xchg
pop
jmp
push
xor
inc
fidivrs
sbb
sub
xchg
pop
inc
lds
cmp
cmp
cmp
shlb
mov
ret
push
jbe
pop
insl
xor
xor
inc
mov
fbstp
hlt
mov
sbb
aam
lret
mov
jnp
repnz
int3
mov
leave
mov
or
jae
fstpt
cmp
push
ds
lcall
mov
fdivrs
stos
adc
sbb
cmp
iret
in
xor
mov
push
xor
insb
test
mov
xorb
stos
jmp
les
cmpsb
divb
add
mov
xor
xchg
in
mov
fistl
inc
iret
xchg
jae
mov
jmp
out
scas
push
or
xchg
mov
add
lret
loope
xorb
mov
insl
inc
aaa
loope
fsubs
mov
mov
sbb
mov
or
jmp
repz
cmp
enter
mov
fwait
ret
daa
aam
push
inc
inc
dec
add
push
pop
mov
data16
cmpb
add
imul
jne
dec
scas
stos
ss
stc
or
out
je
sub
sub
lcall
in
in
lahf
shl
andl
lea
popa
enter
repnz
add
add
cmc
ror
lahf
push
test
popa
imul
gs
mov
outsl
and
inc
jbe
fst
dec
es
jno
and
jbe
sub
mov
mov
pop
sub
xlat
lods
fxch
jg
xchg
xor
in
cmp
mov
or
sarl
pop
inc
pop
cmpsl
sti
pop
mov
sub
pop
mov
xchg
and
mov
aam
gs
pop
fwait
add
xor
sub
insb
daa
xchg
sbb
sarl
xor
je
mov
pop
flds
pop
sbb
xor
aaa
fadds
jno
sbb
or
pop
pop
inc
pop
adc
sbb
push
jae
adc
mov
mov
jmp
aas
mov
subl
pop
cmpsl
outsl
in
mov
xchg
loopne
cmp
movb
xchg
aam
int3
into
push
inc
fildll
popf
fcoms
dec
add
push
sub
sub
lods
mov
out
movsb
jp
dec
cltd
ljmp
mov
aam
and
jns
fs
orb
jmp
push
pusha
mov
div
sbbb
dec
stos
mov
popa
xchg
shrl
testl
or
lret
xor
sbb
pop
mov
cmc
iret
out
pop
hlt
mov
stos
lcall
mov
jecxz
and
in
xchg
nop
adc
pop
inc
cwtl
daa
or
bound
or
jne
mov
movsb
xorl
test
pop
mov
aas
movsl
pop
cmp
jl
mov
sbb
mov
add
pop
loopne
in
in
test
data16
aas
imul
push
mov
mov
mov
dec
mov
push
mov
lea
popa
outsb
fnsave
cmp
subb
andl
repnz
fidivs
out
out
fnstenv
filds
push
nop
sub
arpl
insl
jl
jp
mov
mov
notb
aad
popf
adc
xchg
sbb
es
sub
nop
sbb
movsl
jno
cmp
add
stos
push
mov
hlt
loope
movsl
push
das
pop
fdivl
lods
pop
jecxz
xor
add
adcl
std
icebp
add
es
mov
cltd
jle
inc
insb
sub
add
push
lods
lcall
sahf
inc
dec
or
dec
je
mov
push
lods
in
adc
xor
add
outsl
adc
scas
je
xor
sub
inc
out
movsb
scas
fisttpll
pop
inc
push
scas
es
inc
std
mov
and
cwtl
add
push
insl
or
xlat
repnz
cmp
out
or
push
jae
jle
jb
cli
lea
clc
mov
pop
push
or
out
adc
add
lock
decl
lods
out
jmp
sub
lret
das
mov
std
lods
rcrb
ja
imul
jne
in
sbb
push
mov
mov
xchg
lcall
xchg
cmc
pop
test
gs
cs
repz
push
mov
cmpb
dec
mov
cltd
pop
daa
push
cmc
repnz
xchg
loopne
sub
cmp
call
adc
mov
leave
mov
jo
fiaddl
add
cmpsb
pusha
sbb
call
mov
data16
adc
xchg
and
mov
push
std
imul
add
cmp
sub
push
jmp
das
inc
sub
shll
repnz
push
mov
jne
mov
cmp
inc
cld
pop
xchg
jnp
pop
pop
pushf
test
xchg
push
or
rorl
mov
mov
pop
and
jmp
pop
btr
sub
subb
cmp
inc
leave
xor
mov
aam
daa
adc
cli
jle
fdivl
les
std
mov
mov
les
test
sbb
mov
in
mov
mov
lds
adc
insb
pop
out
mov
pop
push
adc
inc
jle
scas
and
cli
loop
adc
hlt
and
cltd
cltd
jg
rcrl
push
fidivrl
pop
mov
fnstenv
cld
and
lahf
data16
push
ss
push
xor
mov
aaa
push
test
jbe
outsl
mov
adc
scas
cmp
push
insb
test
jno
stc
jb
lods
adc
push
mov
inc
incl
in
and
test
pop
and
repz
xorl
and
xor
inc
outsb
xchg
sbb
popa
mov
xchg
outsl
jmp
xchg
sbb
adc
mov
repz
jmp
jp
pusha
pop
std
cmpsl
sub
sbb
or
cltd
adc
or
jg
insl
iret
pop
sub
sub
addl
mov
mov
loop
mov
inc
fwait
add
dec
mov
dec
icebp
pop
cmp
aas
fs
sub
xor
test
fsubrl
jmp
xor
out
sbb
cmp
dec
cli
cwtl
pushf
out
sbb
xchg
bound
xor
imull
adc
mov
loopne
adc
jmp
adc
mov
jo
push
inc
sub
cmc
sbb
push
mov
int
inc
mov
dec
fldcw
sbb
and
jl
adc
adc
cltd
fisttpl
push
in
inc
mov
adc
std
orb
imul
jno
mov
lret
insb
pop
jne
jmp
loope
jno
jge
ffree
das
add
push
in
repz
adc
call
mov
sub
scas
mov
mov
pushf
mov
rol
mov
push
fimull
gs
push
jecxz
xchg
loopne
sbb
imul
out
jg
push
outsl
or
bound
test
mov
xorl
mov
inc
lahf
xchg
lret
ljmp
orl
jge
out
mov
fstl
outsl
adc
push
addl
mov
jo
and
mov
popa
sbb
xor
mov
jno
dec
lods
arpl
popa
icebp
mov
out
sbb
mov
test
in
push
je
test
xchg
adc
icebp
rolb
rol
fiaddl
fsubrl
dec
call
mov
cld
icebp
fisttpl
sarb
fldl
clc
lret
pop
and
pop
les
push
aas
sbb
scas
inc
sti
add
mov
popa
rorl
xadd
fbld
pop
inc
enter
mov
dec
cmp
cmp
mov
enter
clc
cmp
jbe
mov
sub
je
aas
xor
stos
jns
into
cli
idivb
cltd
fwait
mov
int3
dec
add
jae
and
pop
outsl
mov
adc
movhps
mov
jmp
es
adc
jl
push
mov
sahf
jne
add
pop
pop
ds
lods
adc
fs
add
das
mov
testl
push
cmpsb
ljmp
hlt
iret
dec
lds
add
sbb
hlt
std
add
arpl
cmp
iret
or
inc
fstl
loope
mov
lahf
ja
dec
lods
xor
mov
js
xor
dec
loopne
mov
pop
add
fstl
push
sbb
fistpl
push
data16
mov
rcrb
sbb
fbstp
shll
lcall
ret
jnp
movsl
cmp
in
jmp
loope
pop
ret
aas
push
push
sbb
shlb
sbb
mov
movsl
inc
add
clc
mov
fistps
xchg
ss
subb
cmp
jne
mov
dec
fists
add
push
push
pushl
daa
stos
push
fildl
jo
jmp
add
push
adc
fstpt
mov
fiadds
push
lret
and
pop
xchg
push
dec
bound
mov
ret
les
fucomi
inc
mov
mov
mov
dec
dec
xchg
mov
loope
mov
int3
dec
push
pop
mov
jbe
xor
sti
lahf
sub
jge
and
jae
xor
out
mov
icebp
inc
xor
repnz
pop
outsb
jl
out
cltd
inc
ja
push
push
divl
xchg
dec
out
xchg
repz
repnz
outsb
xor
bound
loope
rorl
ljmp
push
cmpsb
jo
fcompl
sub
mov
lcall
push
add
jo
inc
and
mov
mov
mov
xchg
stc
gs
out
std
sbb
lods
cmp
dec
dec
or
data16
daa
cmpsl
mov
or
loopne
sbb
jnp
negb
sub
fidivrs
mov
mov
add
sbb
in
mov
clc
lods
loop
popa
aam
fistpll
ss
pusha
jmp
mov
jne
fimull
adc
lock
sbb
fbld
aas
sub
inc
cld
test
lock
xchg
addr16
mov
xchg
test
sub
mov
scas
mov
mov
dec
jmp
push
out
into
loope
jl
mov
aas
faddl
aaa
push
xchg
into
out
sub
rcrb
lret
dec
fiaddl
dec
lods
mov
xlat
sub
mov
cmpsl
ljmp
sbb
mov
gs
hlt
or
jns
icebp
mov
and
push
stos
lea
cltd
sti
or
ret
fists
mov
mov
mov
and
imul
scas
test
fnstsw
scas
in
mov
ja,pn
and
les
into
mov
xor
fiaddl
fcoms
and
add
lds
inc
xchg
add
imul
leave
pop
repz
mov
and
ja
subl
jnp
jle
stc
cmp
jno
ljmp
aad
orl
iret
push
rol
and
mov
lahf
adc
fdivrl
imul
sbbl
enter
outsl
pop
adc
imul
lahf
mov
vmovapd
scas
lods
js
dec
inc
mov
lods
test
js
aas
jl
add
out
inc
int
sbb
and
jae
fildl
data16
sub
lret
pop
pop
push
mov
cmp
sub
je
push
addb
sarb
dec
andb
sbb
int3
mov
sbb
push
adc
enter
push
mov
hlt
dec
xchg
mov
sti
push
outsl
js
inc
mov
arpl
xor
push
int
inc
fsubs
and
sbb
add
test
subb
test
int
in
ds
adc
inc
shll
test
loopne
xchg
je
movsb
pop
cmp
ret
mov
jns
add
sbb
js
testl
and
adc
filds
mov
idivl
cs
sbb
repnz
add
por
test
ja
sbb
shll
out
lahf
pop
mov
fsubs
iret
jbe
pop
sub
lods
nop
adc
dec
sub
mov
popf
hlt
setnp
fsincos
inc
pop
and
adcl
mov
adc
enter
pop
push
pusha
mov
pop
adc
gs
sahf
mov
and
mov
jge
jle
dec
pop
and
daa
lods
inc
lcall
pusha
cmp
sahf
jnp
pop
in
rolb
mov
test
inc
clc
orl
mul
or
xchg
ds
dec
sti
jns
ljmp
fisttpll
pop
fsubrl
out
les
rolb
jbe
pop
addl
stos
sti
sub
scas
ds
mov
mov
setbe
cmp
cmp
sub
imul
xor
in
adc
rdmsr
mov
sub
cmc
arpl
push
mov
fwait
in
shufps
shr
mov
pop
adc
cmp
popf
gs
jge
int3
mov
mov
sbb
ret
call
movsl
lods
lahf
es
sahf
fdivl
das
jmp
in
call
fsub
push
lock
out
inc
or
cwtl
sub
jo
jno
test
mov
and
shr
cmpsb
sbb
mov
loop
mov
inc
inc
pop
je
mov
addl
fcmovnb
pop
cmp
movsl
push
out
idivb
gs
js
jle
or
test
jg
aaa
gs
push
mov
jl
std
out
xor
sbb
fcmove
pop
aaa
fwait
mov
jp
sahf
mov
and
and
cmpsb
pushf
add
or
cmp
outsl
or
hlt
inc
sub
sbb
fsubrp
jmp
leave
adc
mov
xchg
inc
jge
jle
fimuls
xor
pop
cmp
push
shl
sti
jp
or
sbb
leave
pusha
fcmovnbe
sbb
lods
sbbb
in
cwtl
and
test
fldt
inc
gs
loop
sub
xor
and
cmp
dec
cmp
mov
dec
pop
add
ss
popa
into
call
rclb
mov
dec
mov
jb
mov
dec
bound
adc
fdivrs
je
es
fiadds
ljmp
ret
lret
lods
cltd
adc
and
lret
jg
or
cmpsb
push
or
mov
jg
and
addl
imul
pop
pop
jmp
push
fs
pusha
and
ja
inc
xorl
add
bound
xorb
push
outsb
out
cli
jecxz
fistps
mov
inc
dec
dec
movsl
je
dec
enter
pop
jb
jns
mov
dec
and
dec
imul
mov
mov
sub
inc
sbb
test
pop
out
mov
mov
jmp
lock
xchg
lret
xlat
push
sahf
sub
adc
stos
arpl
pop
call
inc
and
aaa
sbb
vpandn
jg
stos
mov
mov
or
mov
adc
mov
cmp
ret
mov
movsl
sbbl
ljmp
mov
inc
cmp
and
insb
mov
push
fistl
into
xor
lcall
or
adc
mov
xor
pop
in
je
dec
xorl
or
sub
sub
push
ljmp
aad
and
rorb
and
sub
pop
aad
popf
xor
aad
mov
or
push
pop
push
aad
inc
ds
mov
sub
inc
sti
jge
enter
shl
addr16
nop
popf
jbe,pn
dec
imul
fisubl
loopne
int
dec
int
push
ret
lret
pop
jno
mov
mov
fstpl
add
mov
mov
add
repz
and
and
fwait
jo
lods
lds
rcrb
out
in
add
lret
push
iret
mov
push
fsubr
imul
jmp
and
sbb
inc
mov
xchg
dec
in
sbb
test
int
es
inc
mov
enter
lcall
pushf
popa
inc
cmp
js
scas
mov
or
and
fs
pop
and
ds
insl
int3
rorl
mov
dec
ds
dec
jmp
mov
fwait
inc
push
fldenv
mov
scas
mov
lea
and
push
in
mov
pop
pushf
fidivl
push
or
mov
out
mov
pop
xchg
sbb
dec
lock
jbe
inc
sarb
stos
aam
push
and
mov
jne,pt
cmp
ljmp
dec
loopne
filds
mov
iret
cmc
cmp
outsb
into
jae
test
aaa
leave
jge
test
dec
lds
or
ret
xchg
lcall
sbb
xchg
adc
outsl
cmc
mov
in
sbb
add
push
andps
pop
sbb
hlt
int
out
or
xor
cmp
dec
cmp
mov
in
and
insb
test
inc
in
dec
adcb
and
and
push
mov
lock
in
sub
push
pusha
repz
mov
addr16
enter
les
addr16
sbbl
lret
scas
adc
imul
cli
sbb
mov
inc
add
and
jb
pop
pop
jns
xchg
in
insb
inc
mov
mov
cli
scas
inc
and
adc
mov
psllw
add
ss
ret
pushf
stos
es
xchg
leave
fwait
dec
xchg
or
std
push
xor
mov
aas
rcll
and
imul
pop
std
jmp
or
pop
push
and
lahf
xchg
mov
movsl
xchg
mov
imul
cmp
dec
xlat
mov
arpl
imul
xor
cwtl
mov
push
bound
out
push
pop
xchg
hlt
jae
jle
mov
hlt
insb
je
xlat
mov
jns
in
ret
lds
or
sbb
cmp
repnz
xchg
cmpb
notl
xchg
outsb
or
and
rorl
idivl
out
aas
loop
loopne
xchg
ret
sbb
inc
lret
ret
arpl
mov
pop
pop
jge
cmp
jl
jge
xchg
loop
sbb
mov
aas
xorb
add
hlt
shlb
out
cmp
sub
out
fldenv
sti
add
mov
test
xchg
adc
cmpsl
or
sbb
std
or
les
cmp
xchg
cmp
das
pushf
push
es
shlb
fistpll
cmp
pop
outsl
sbb
pop
int
and
jne
daa
lods
pop
dec
out
in
xlat
pop
push
pop
inc
pop
jae
test
pop
sbbb
or
jae
xor
cmp
fstp
xor
inc
pop
call
push
jle
cs
out
add
sub
icebp
fs
mov
jmp
push
mov
rorb
inc
push
jo
xchg
add
inc
sbb
lods
mov
or
fstl
loope
leave
inc
fsub
popa
in
sbb
loope
dec
cmpsl
mov
cmp
mov
jle
sub
les
js
popf
cmp
cmp
iret
enter
pop
push
push
daa
pop
mov
mov
adcb
push
adc
outsl
mov
out
jns
lock
in
mov
xchg
in
pop
push
insb
sbbl
add
into
push
ljmp
xchg
adc
xchg
and
cmc
test
pop
pop
pop
fcompl
movsb
mov
cmpsl
je
and
cmp
repnz
lock
fldl
and
rcrl
je
shll
imulb
pop
cmp
stos
cs
rorb
int3
pop
push
inc
xchg
dec
movsl
dec
cmc
pop
mov
sbb
xor
sub
add
sbb
xchg
sbb
jns
adc
idivb
loopne
sbb
jp
imul
lahf
push
add
push
ljmp
cmpsb
xlat
sub
out
iret
cmp
mov
sbb
dec
loope
xor
lods
nop
xchg
scas
ret
mov
xchg
jne
lods
inc
inc
mov
mov
sti
pushl
xor
sub
pop
push
push
shrb
adc
dec
adc
or
icebp
xor
xor
mov
imul
fdivrp
out
pop
nop
outsl
loope
dec
xchg
adc
mov
mov
mov
cmp
or
push
fidivrl
adc
rclb
inc
dec
pop
imul
orb
aad
hlt
pop
addr16
cmp
fisubrs
loope
pop
int3
dec
sti
jecxz
dec
sub
into
sbb
push
push
shrl
out
push
cmpsb
cmpsb
cwtl
push
bound
xor
push
pop
lahf
ret
daa
out
fbld
std
jno
push
pushf
movl
lcall
mov
or
test
int3
fsubrs
and
mov
adc
mov
pop
adc
test
push
push
jl
cmp
jecxz
mov
xlat
loope
and
sbb
lock
cmpsb
in
fsubrl
dec
dec
int
jge
rorl
stc
cs
mov
add
mov
mov
dec
adc
in
and
lods
je
dec
pop
fiadds
push
mov
fs
mov
jle
jnp
sbb
idivl
rolb
fwait
pop
inc
adc
add
inc
add
sti
cmp
hlt
sti
aam
ljmp
lods
shl
popa
cwtl
pop
sbb
mov
nop
inc
and
je
dec
sbb
jge
sub
fbstp
movsl
std
movsb
sbb
adcl
fcmovnu
pop
rcrb
jb
pop
pusha
movsb
xchg
movsl
push
and
push
sbb
fldcw
jo
roll
xchg
std
and
mov
addr16
add
xor
imul
and
fwait
sub
push
or
pop
cmp
sub
jns
ja
mov
or
xlat
lds
popf
jmp
out
add
adc
jae
ret
or
sarl
sub
adc
test
addr16
xor
inc
sbb
mov
loopne
mov
add
mov
jp
out
repz
dec
mov
add
cli
xorb
insb
rclb
dec
jnp
ficoms
sub
ret
out
lret
fcoms
ret
push
add
sub
mov
jmp
mov
mov
pop
or
cmp
xchg
fsubrl
pusha
das
lret
aaa
outsl
pusha
inc
fdivl
cmp
aaa
adc
popa
es
iret
sub
loope
dec
adc
test
pushl
pop
xchg
addb
or
int3
pop
inc
outsl
push
lock
cmp
push
loop
xchg
or
sbb
testb
test
fstl
sub
cmp
rclb
sub
int
roll
int3
aas
push
jnp
inc
out
aas
and
loope
mov
lahf
rorl
jl
imul
cmp
outsb
xchg
ljmp
nop
push
and
outsl
ret
gs
add
jecxz
idivl
jmp
lea
xchg
jb
sub
jp
xchg
in
aaa
mov
or
dec
imul
adc
leave
movsl
arpl
cmp
int3
dec
add
mov
stos
mov
and
xor
pusha
xchg
dec
ljmp
andl
insb
dec
sarb
push
pop
rol
bound
add
idivb
adc
sub
dec
cmpb
arpl
mov
jns
je
orl
or
xor
mov
jo
cltd
jns
jle
and
push
xlat
sbb
insb
ret
jle
inc
mov
dec
jge
daa
mov
mov
outsl
imul
xchg
adc
repnz
jae
jb
test
sub
fsubrs
mov
clc
xchg
pop
sbb
cmp
movsl
push
fstl
or
lods
nop
in
xor
mov
jae
js
dec
lods
jle
dec
orl
mov
pop
xor
mov
jno
faddl
loope
adc
das
xchg
sahf
xchg
xor
mov
adc
fmul
rcrl
jb
jl
test
mov
das
mov
jne
gs
push
xchg
xchg
pop
mov
jbe
push
and
call
arpl
mov
rorl
push
mov
shrb
sar
jge
sub
mov
xchg
jns
fs
jecxz
jno
loopne
bound
divl
js
lcall
aaa
test
cmc
jo
push
fsubrl
hlt
push
pusha
les
hlt
push
clc
dec
xor
ret
lods
das
neg
pop
es
jp
clc
sbb
js
xorl
jmp
test
pop
sub
mov
pop
int3
cmp
jg
sbb
scas
mov
int
pushf
jns
pop
jle
dec
jl
add
fnsave
lea
idivl
push
cltd
xlat
movsl
xchg
xchg
mov
mov
dec
lea
sbb
push
inc
icebp
adc
mov
pop
xor
cmpsb
gs
cmp
stc
fcomip
mov
and
pop
add
push
mov
push
push
sub
mov
icebp
adc
scas
cmp
add
or
ljmp
aas
cmp
push
xchg
lods
lods
in
fs
stos
push
or
movsl
repz
shl
js
add
mov
cmp
cmp
test
push
or
aaa
push
jo
movups
lock
mov
mov
sarl
imul
cmp
cltd
sbb
xchg
mov
mov
mov
fistl
sbb
push
pop
adcb
xchg
and
push
dec
xchg
test
pop
bound
xorl
adc
pop
ret
inc
fidivs
shll
lock
aas
mov
pop
cmp
shll
out
mov
mov
jge
aas
mov
jmp
outsb
inc
rcll
fsubs
loope
jecxz
int3
pop
out
jbe
mov
mov
mov
and
test
add
add
xor
dec
sub
lods
or
mov
push
lret
jg
test
clc
fisubrs
jle
js
int3
repnz
sbb
dec
xor
addr16
add
lret
sbb
test
ds
lret
push
cmp
dec
and
mov
cmc
sub
shlb
or
mov
jl
push
pop
ss
mov
fmulp
notl
mov
fidivrl
imul
push
mov
pushf
pop
rol
fucomp
leave
pop
dec
outsb
lea
insl
xlat
outsb
cmp
repnz
push
insb
out
sbb
addr16
lret
push
fsubr
sub
push
xlat
cmpb
movsl
es
mov
cmp
dec
pop
dec
add
adc
mov
call
cwtl
cmpl
fidivl
and
into
mov
xor
iret
xchg
push
and
dec
dec
sub
cmpxchg
add
imul
je
mov
das
outsb
pop
push
icebp
cmp
mov
shll
push
mov
inc
js
mov
add
push
jnp
inc
fs
aam
mov
enter
fists
int3
arpl
and
add
cmovns
aad
jb
lret
mov
cmp
xor
mov
imul
sub
insb
hlt
mov
and
pop
inc
pop
mov
arpl
rcrb
ret
rcrb
ljmp
stos
mov
cmp
shlb
push
cltd
and
push
daa
mov
clc
dec
rolb
test
dec
mov
cmp
addr16
ja
push
mov
jle
or
mov
mov
adc
cmp
xchg
addb
popf
add
cmpsl
push
adc
lods
inc
sbb
subl
iret
out
movl
popa
cmc
cmp
add
lds
push
push
and
jmp
scas
pusha
mov
mov
pop
xor
popa
push
scas
add
and
fldcw
lods
cli
call
jecxz
pop
push
and
sahf
cmpb
xchg
mov
clc
dec
je
pop
sti
adc
cwtl
mov
test
je
sub
ss
call
cmc
repnz
inc
sbb
sti
clc
pop
push
ss
pop
aam
imul
push
jnp
sub
cmc
into
add
cmp
in
cmpsl
cmp
lods
push
in
jmp
mov
jle
xchg
sub
jg
pop
inc
jg
pop
ds
cmp
sahf
jl
outsb
movsl
add
cltd
add
xor
cs
jle
sub
roll
cwtl
push
sbb
pop
lds
cltd
loope
mov
jb
sahf
dec
pop
les
pop
xlat
aad
and
jns
pop
daa
xchg
cmc
imul
das
outsl
pushf
xor
int3
dec
pop
fidivrl
sbb
or
xchg
mov
das
mov
pop
mov
popf
xchg
or
jne
in
ret
jae
imul
shl
fwait
pop
scas
aad
aas
cld
pop
test
ret
mov
jle
xchg
in
inc
jmp
xor
pusha
dec
test
lret
cmp
data16
jmp
iret
adc
dec
addr16
jnp
adc
pop
repz
js
or
cmc
pop
cmpsl
out
lds
lret
movsl
int3
outsb
loop
push
fldcw
leave
rcll
mov
pop
inc
jb
aam
adc
jne
mov
inc
fdivrl
pop
pop
fists
lds
or
loopne
les
jb
lea
outsb
cmp
les
movsl
and
and
push
loopne
aaa
dec
cmp
add
and
cld
fcomps
add
fnsave
jbe
bound
cwtl
scas
insb
lea
out
and
jge
jb
mov
add
cmp
shr
dec
mov
test
in
mov
or
imul
icebp
sbb
push
fs
xchg
sbbb
cs
xchg
inc
inc
cmp
mov
mov
ds
fs
test
cmpsb
repnz
fwait
or
push
arpl
fidivl
xchg
orl
xor
dec
cmp
orb
jge
pop
mov
xchg
push
sbb
push
inc
clc
pop
movsl
mov
roll
test
mov
lods
int
add
fwait
or
mov
sub
movsl
pusha
inc
test
sbbl
sub
mov
daa
inc
push
xor
pop
bound
mov
rorb
daa
mov
mov
push
add
dec
out
xchg
jp
push
call
jo
pop
in
mov
jbe
cs
cmp
inc
arpl
xor
repnz
xorl
sbb
adc
mov
push
xchg
cmc
notb
repz
int
and
loopne
outsl
enter
outsb
and
out
jo
gs
test
sbb
xor
inc
cmpsb
add
in
dec
daa
push
xchg
scas
jns
rolb
mov
jge
xchg
lret
lock
cld
arpl
pop
add
out
loopne
ret
xlat
sahf
addr16
dec
sahf
add
leave
mov
add
add
pop
mov
sub
jge
cmp
loope
mov
lret
pop
mov
mov
add
add
mov
xchg
in
dec
sti
jbe
inc
pop
or
push
cmp
xor
dec
inc
pop
lods
jne
mov
jecxz
gs
mov
shlb
sub
push
fs
cmp
xlat
fisubl
push
test
mov
mov
fadd
mov
lock
les
aaa
movsb
loope
pop
cmp
pop
imul
sahf
dec
sbb
fucom
cld
in
fwait
mov
popf
xlat
leave
inc
push
xchg
push
fsubrs
sbb
pop
adc
shll
lret
jmp
sarb
aas
out
and
xchg
mov
jmp
xor
idivl
xor
push
and
pop
push
mov
das
xor
cmp
scas
jecxz
xor
sub
fwait
adc
jmp
ror
test
movsl
mov
push
repnz
mov
sti
sbb
inc
nop
fldenv
mov
iret
std
cmp
bound
push
repz
es
ret
add
popa
data16
jae
xor
insb
or
rorl
scas
push
movsb
out
repz
mov
xchg
adc
out
cmp
in
jp
adc
xor
dec
push
jno
lods
jle
inc
stos
cmpsb
ficoms
gs
pop
sti
and
mov
das
mov
mov
or
pop
add
lea
xchg
fldcw
mov
jo
add
sti
loopne
test
nop
test
push
clc
ror
mov
add
imul
cli
fildll
aaa
pop
sub
inc
xor
add
fidivrs
stos
add
dec
push
xchg
and
push
test
cmp
or
shlb
xor
fwait
andb
mov
rolb
call
add
sti
or
mov
lds
dec
stos
data16
xchg
ret
in
adc
lret
ss
daa
xlat
je
add
mov
mov
loop
hlt
sbb
inc
gs
dec
add
pusha
adcb
rorb
push
fildll
jnp
jle
mov
hlt
push
xchg
dec
ror
outsb
shl
stos
jo
hlt
loop
ds
popa
scas
adc
mov
sbb
fs
rclb
xchg
jo
data16
int3
orl
mov
xchg
add
imul
xchg
xlat
xchg
cmp
jmp
add
fs
cmp
testl
fcomps
pop
je
lahf
popf
mov
sbb
fstl
sbb
cwtl
ret
mov
inc
dec
aam
daa
jne
idivb
or
sti
jb
jle
ret
or
dec
xor
cmp
push
cs
movsl
pop
iret
scas
cmp
sbb
sub
or
and
cmp
push
std
dec
cmp
push
je
push
cwtl
push
aad
xchg
mov
mov
lds
ret
bound
mov
int3
rorb
out
sahf
jmp
jo
and
insl
xchg
add
and
rorb
or
cwtl
push
xchg
xor
add
mov
out
daa
outsl
adc
push
lods
out
popa
xchg
fcompp
or
repz
fidivrs
movsl
mov
mov
clc
fimuls
add
cmp
add
vpminub
jnp
negl
idiv
xchg
add
into
mov
adc
in
pop
mov
in
clc
icebp
or
shrb
cmc
mov
or
rcll
fistpll
pop
hlt
insl
xchg
andb
adc
xchg
imull
xor
adc
mov
aas
dec
lods
pop
arpl
mov
cmp
fdivs
popf
int
mov
xor
ds
mov
mov
scas
arpl
dec
test
lods
pop
cmp
and
pop
or
push
int
sub
leave
fnstcw
xor
add
adc
dec
mov
rcrl
sarl
sar
pop
sbb
movsl
shl
pop
pop
pop
leave
jg
scas
push
stos
flds
inc
ret
imul
push
mov
test
gs
enter
push
sbb
adc
test
jno
lods
xchg
cmp
rcrl
cs
loop
sub
mov
pop
inc
mov
pop
pop
mov
rclb
test
xor
ret
sub
or
stos
push
in
jp
scas
xchg
push
test
push
cmp
pop
daa
lret
adc
mov
add
imul
dec
push
sbb
into
sti
in
imul
mov
cmpsb
jae
out
loop
lds
ret
cld
and
push
jl
jle
fstl
jo
fwait
popf
ds
shrb
mov
push
adc
std
or
jne
dec
ss
test
rcrb
test
mov
decb
dec
les
pop
mov
movsb
jns
cltd
xchg
add
dec
lret
negl
fstpt
lret
mov
test
or
cwtl
and
faddp
push
sub
push
jmp
fwait
cmp
mov
loope
inc
pop
or
je
add
in
and
out
xchg
pop
mov
push
test
mov
adc
pushf
sbb
xchg
addr16
gs
rorl
outsl
pop
lcall
xor
fcoms
mov
mov
in
pusha
mov
add
mov
xchg
ficompl
pop
pop
movl
or
pop
mov
test
outsl
push
jae
test
jmp
cmp
and
je
cmc
and
mov
stos
insl
xchg
xor
cmp
loop
xor
mov
hlt
xor
xchg
jmp
lcall
xor
fistps
cld
aaa
xor
jl
dec
adc
ret
jle
mov
aam
in
mov
push
ret
xchg
dec
sub
nop
cmc
add
mov
leave
jp
cmp
dec
dec
jbe
cmp
das
popa
imul
shl
loop
push
adc
push
sahf
test
mov
pop
mov
pop
clc
fwait
cmp
jne
sahf
rorl
rcrl
dec
fs
lock
mov
addr16
xchg
push
mov
stos
iret
or
leave
jle
mov
add
fbld
roll
daa
testl
sti
adc
sub
inc
or
push
or
lods
sbbb
lcall
push
arpl
mov
mov
dec
sbb
insl
and
pop
mov
and
pop
fdivl
add
push
mov
test
in
jns
in
js
and
es
les
std
cmpsl
and
jmp
hlt
into
in
add
push
add
xchg
fisubs
pop
fs
insl
aam
out
xchg
jl
shl
test
shll
inc
and
lock
lds
mov
sahf
loop
cmpsl
mov
lds
cmc
lcall
sub
lahf
xchg
fildl
call
rorb
stos
test
sub
ja
pop
movsb
fadds
cmp
int3
test
in
repz
ret
fstpl
loopne
mov
dec
cmp
fwait
les
push
outsl
pop
lret
jp
int3
fcmovnb
addb
jl
mov
rcl
pop
mov
fidivrs
sub
xor
pop
push
jecxz
mov
push
scas
push
cmpsl
push
faddl
pop
dec
sbb
add
sbb
fsubrs
cmpsl
or
adc
sbb
ret
jnp
ss
iret
fs
cmp
sub
mov
xchg
int3
cmc
fstps
les
mov
mov
push
pavgw
xchg
les
std
xlat
push
or
push
xor
out
add
adc
pop
daa
add
test
jecxz
xchg
out
mov
popa
pop
xor
jg
inc
fcoml
and
cmp
pusha
fistl
lcall
cmc
mov
or
inc
pop
xchg
fdivl
loop
adcb
jo
xchg
fiaddl
sti
fisttpl
inc
mov
cmp
or
sub
dec
jns
test
jnp
mov
add
xor
push
pop
stos
jne
adc
repnz
mul
enter
xor
imul
xor
bound
gs
loope
push
fstps
cmp
dec
or
mov
imul
bound
and
clc
movsb
ljmp
dec
in
push
push
pop
xor
out
mov
stc
pushf
or
aaa
mov
or
hlt
pushf
add
mov
outsb
das
outsl
pop
xchg
fdivrl
inc
push
rorl
mov
shl
imul
outsl
or
xchg
jae
jmp
xor
cli
jnp
jno
sbb
jb
or
jo
out
add
es
add
sub
add
sarb
shr
add
dec
and
enter
mov
leave
xchg
mov
cmpsl
mov
imul
adc
leave
dec
cmpsb
fstpt
xor
xchg
sub
gs
push
push
test
scas
jbe
popa
mov
lods
cli
push
and
test
movsl
push
and
int
add
stos
out
mov
in
or
mov
shrl
test
or
jp
lcall
adc
andl
adcb
stc
mov
cltd
xorb
push
push
mov
out
cmc
sbb
fs
dec
lret
mov
pop
push
cli
mov
and
and
sbb
dec
rclb
mov
andl
ds
mov
sbb
jmp
sub
cmpsb
lret
mov
popa
neg
lods
xchg
sub
out
push
dec
mov
repnz
xor
stos
sub
mov
or
cmp
sbb
push
push
enter
repnz
sbb
ret
lcall
frstor
repz
mov
inc
adc
test
add
cmp
mov
xchg
mov
mov
das
sub
sbb
jo
adc
add
lcall
ljmp
pxor
pop
fwait
mov
jg
mov
clc
hlt
adc
bound
mov
ss
or
or
adcb
out
fs
xchg
repz
jb
mov
ljmp
loop
hlt
xchg
xchg
dec
rorb
frstor
push
scas
sbb
rorb
sub
or
pop
icebp
and
jo
xchg
cmp
imul
mov
add
popa
sub
andb
repz
ret
lods
jo
lock
mov
mov
cmp
mov
inc
xchg
push
jns
test
push
ss
pushf
test
xchg
xchg
inc
movsl
jo
fs
ret
pop
xchg
std
mov
mov
xchg
movsl
sbb
sbb
stos
fidivrs
ljmp
arpl
cltd
xchg
data16
bnd
mov
xchg
scas
into
aad
movsb
mov
push
sub
test
inc
xor
pop
cmc
movnti
int
int
adc
das
scas
mov
jne
pop
test
cmp
popa
adc
add
out
cmp
sub
jb
fistpll
stc
mov
addr16
shl
jae
jg
inc
sbb
cmp
fiaddl
ds
pop
addr16
ret
pushf
int
cmp
jno
xor
je
sbb
mov
xchg
inc
rcrb
or
cmp
loope
shrl
call
push
in
stos
andl
int3
adc
or
imul
jbe
je
lods
inc
enter
sbb
cmp
andb
out
pop
xchg
pusha
lcall
out
xor
cmp
ret
adc
mov
inc
and
mov
mov
loopne
into
push
imul
test
stos
or
xchg
pop
cmp
lret
faddp
lcall
lock
and
push
or
jp
mov
mov
outsl
test
ljmp
std
mov
jge
scas
dec
lahf
sahf
cwtl
xchg
sub
in
mov
std
pop
into
push
jae
jge
xlat
cmp
and
adc
mov
imul
dec
mov
mov
push
ret
out
jo
inc
incb
stos
ss
push
outsl
cmp
rcrl
repz
movsb
rorb
mov
pusha
leave
js
test
xchg
inc
inc
shrb
insb
jl
cmp
pushl
dec
sbbl
insl
mov
xor
dec
icebp
je
test
mov
out
jns
inc
adc
stos
mov
jp
dec
push
loop
cmp
scas
inc
pop
ds
xlat
and
les
xchg
mov
push
inc
insl
pop
cmpsb
fcomi
mov
jmp
data16
addr16
adc
mov
xchg
push
ljmp
loopne
xchg
repnz
add
in
jo
jmp
jns
pop
ficompl
push
pop
nop
xor
mov
cmp
jno
adc
mov
aad
mov
jbe
xor
pop
popf
add
xchg
fs
je
push
dec
push
xchg
into
data16
mov
jmp
loope
mov
leave
xchg
imull
daa
ret
mov
xor
adc
cmp
pop
cmpsb
fisubl
fwait
popf
push
das
dec
dec
pop
jae
into
jg
or
popa
test
ds
add
scas
nop
jecxz
mov
inc
push
mov
jge
push
movsl
jg
mov
jge
fwait
add
mov
push
mov
pop
pop
decb
popf
sub
cmp
or
cld
addl
jp
mov
mov
sahf
fnstcw
lret
jecxz
pop
xor
xchg
pop
mov
insb
loop
pop
outsl
mov
mov
int3
movsl
cs
nop
gs
cs
pop
mov
push
popf
mov
leave
add
or
inc
ljmp
lea
pop
fstps
mov
enter
xchg
mov
jo
pop
inc
fwait
sbb
jo
dec
pop
rcl
js
repnz
add
sbb
sbb
jmp
mov
cmp
cmp
scas
test
daa
inc
sbb
add
or
xchg
dec
sbbl
sti
ljmp
sub
es
sub
into
mov
sub
fcompl
sti
inc
push
push
popa
mov
idivl
imul
out
movsl
inc
iret
sbb
lods
push
push
adc
out
mov
notb
sub
in
cli
xchg
shrl
dec
inc
test
repnz
out
stos
rsm
out
daa
or
loopne
sub
hlt
movsb
pop
xor
fsubp
notb
sbb
xchg
imul
in
les
push
push
add
out
jmp
roll
cltd
dec
inc
dec
int
addr16
mov
mov
push
mov
leave
add
lods
fwait
mov
mov
dec
dec
cmp
jmp
divb
xchg
pop
jp
outsb
jecxz
and
mov
test
xchg
imul
jbe
out
push
pop
int
mov
and
sbb
testb
xchg
xorl
dec
jmp
mov
push
iret
mov
add
test
imul
test
das
out
pop
mov
xchg
adc
out
out
or
push
stc
add
mov
aaa
neg
pop
adc
inc
xor
in
mov
sub
mov
rcr
adc
dec
and
aas
xorb
fs
or
push
jl
push
inc
sbb
out
outsb
inc
xor
loope
sub
fwait
mov
sub
scas
and
out
push
mov
aam
jecxz
call
sbb
inc
mov
mov
xchg
dec
xor
loopne
pop
and
pushf
mov
shlb
sahf
mov
les
scas
add
xor
jg
test
fwait
inc
mov
mov
dec
or
add
jbe
xchg
sub
lea
add
jle
xlat
push
pushf
pop
fs
rcll
enter
mov
inc
cmp
fucomip
hlt
lock
movsl
push
xchg
xchg
xlat
or
ret
cmc
inc
jge
mov
flds
mov
sub
sub
ljmp
pop
out
data16
hlt
add
and
add
xlat
adcb
in
test
stc
jo
sbb
jg
adc
imul
inc
inc
mov
push
adc
add
mov
jmp
ja
popa
outsl
int
imul
pop
stc
pushf
addb
outsl
and
lret
sub
cmpsb
adc
repz
adc
mov
inc
mov
xchg
aam
push
mov
test
jg
mov
push
test
ss
shrl
or
xlat
loopne
pop
bound
xchg
or
and
xor
fsts
mov
addr16
pop
pop
scas
stos
lds
mov
cli
or
test
pushf
test
mov
lret
lret
xor
test
in
push
dec
das
pushf
dec
popa
out
or
or
lret
mov
ss
ljmp
inc
in
inc
pop
sbb
dec
pop
sbb
jbe
inc
dec
cmp
cld
xor
aam
xor
add
movl
sbb
dec
jmp
loope
lds
mov
cmpsb
out
rcll
xchg
mov
dec
xor
ficoms
fwait
in
mov
out
adc
sub
push
scas
push
int3
mov
sub
adc
cwtl
push
inc
jns
push
sub
sbb
adc
arpl
lcall
in
pop
dec
xor
pop
enter
inc
loop
xchg
xlat
shrb
loopne
adc
mov
inc
xchg
aas
mov
push
das
fisubs
repz
fidivl
adc
mov
sub
add
out
sbbl
mov
mov
mov
repnz
subl
ljmp
repnz
enter
mov
nop
add
popa
pop
push
add
or
and
adc
push
jle
out
gs
imulb
xchg
or
adcb
push
mov
lods
jno
pop
test
inc
xor
lret
inc
pusha
pop
mov
sti
lods
mov
xchg
or
nop
pop
jnp
inc
inc
xor
inc
addl
popf
sarb
jno
sbb
dec
popa
or
frstor
pop
cmpb
into
hlt
ja
xor
xor
add
out
mov
push
std
push
push
sbb
push
repnz
scas
push
lret
push
mov
xchg
data16
adc
out
sub
mov
ret
xor
inc
xorl
aaa
push
and
cmpsb
cmp
icebp
out
jbe
push
decl
inc
je
push
fs
push
iret
jmp
jecxz
add
ljmp
jno
scas
xlat
push
shl
or
in
into
mov
cmp
movsl
pop
adc
dec
cli
adc
cmp
stos
mov
xchg
into
pop
lods
push
xchg
and
nop
popf
and
inc
jbe
ss
xchg
cltd
jae
pop
jp
fsubs
sbb
in
cmp
pop
xorl
xchg
lahf
sbb
jle
ss
dec
insb
add
orl
and
arpl
data16
out
pop
mov
pop
inc
test
xchg
push
jl
dec
pop
movsb
call
add
insb
and
andb
add
adc
lock
or
ljmp
xchg
xor
pop
mov
mov
rcl
rclb
and
stos
aad
inc
cmp
sbb
aaa
mov
jmp
cwtl
jne
adc
pop
add
pop
adc
out
sbb
hlt
inc
cmp
mov
push
pop
inc
fbld
test
inc
adc
imul
dec
cmp
cmp
mov
shll
enter
xchg
mov
andl
xchg
xchg
jg
pop
jg
xor
adcl
mov
call
push
mov
lods
jne
cwtl
insb
pop
stc
mov
push
stc
pop
insb
loopne
push
push
mov
push
and
push
sub
or
fs
pop
cmpsb
pop
je
push
es
sbb
and
sahf
aaa
test
iret
mov
mov
or
add
out
mov
cmp
push
add
cmp
sbb
sub
roll
lock
xchg
cmp
ds
xor
jge
xchg
pop
inc
bound
jl
or
pop
repnz
ljmp
xchg
and
test
jge
in
mov
mov
out
sub
and
mov
mov
inc
xlat
sub
push
jmp
es
nop
fs
xor
adc
mov
jg
fildl
fwait
adc
and
nop
lds
xor
mov
pop
clc
mov
mov
xor
lods
sbb
fadd
hlt
and
js
outsl
push
das
mov
fwait
sub
mov
mov
mov
mov
mov
aad
adc
mov
xor
dec
repnz
or
dec
sbb
shl
int3
mov
es
and
ret
pusha
and
inc
jecxz
out
add
dec
nop
int3
lcall
xchg
fmulp
cld
movsl
imul
jmp
push
mov
test
fisttpl
jecxz
mov
mov
arpl
js
in
outsb
leave
pop
sbb
out
pop
repz
add
lods
mulb
mull
stos
lcall
stos
out
fstpl
xchg
push
sbbb
cmp
movsl
pop
push
mov
mov
pop
addr16
inc
scas
loopne
les
cld
xchg
push
xlat
sub
jno
add
fsubl
xchg
mov
in
cwtl
scas
lret
xchg
jg
inc
xchg
fnstcw
js
imul
out
mov
cmpsb
ljmp
jmp
aaa
out
leave
lods
add
mov
mov
loopne
cld
xorb
dec
lahf
mov
inc
adc
jecxz
push
lret
mov
pushf
test
pop
rorl
mov
pusha
outsb
adc
leave
jo
xor
in
rcrb
je
pusha
scas
pop
mov
je
sbb
dec
push
add
idivl
test
cmp
mov
cltd
jae
adc
and
int
mov
lahf
and
push
out
lret
test
pusha
xor
pop
inc
cmc
push
mov
sti
dec
out
inc
imul
insb
xchg
movsl
pushf
sbb
and
arpl
inc
inc
or
mov
add
add
call
fsubl
clc
sub
aas
cwtl
push
sub
iret
insl
add
adcl
test
fsts
add
jnp
je
jne
ficomps
bt
dec
inc
vunpckhpd
loope
cmc
je
push
xchg
jne
jmp
xlat
lcall
dec
scas
mov
ret
jns
jnp
xchg
mov
lret
stos
mov
or
fld
outsb
mov
xchg
fcomp
aad
inc
in
and
dec
xor
cmp
rol
xchg
and
clc
push
lds
push
inc
push
les
sbb
shrl
notl
mov
int3
add
xchg
mov
scas
adcl
sahf
mov
aas
repnz
pop
fsqrt
hlt
test
jmp
jae
xor
add
mov
add
dec
ja
ror
jno
push
ja
cli
into
movsb
mov
and
sbb
mov
daa
mov
inc
jl
testl
pushf
mov
or
in
adc
iret
pop
or
jbe
enter
fcompl
jb
cmpsl
sti
mov
dec
mov
mov
jecxz
inc
pop
stc
pop
adc
push
mov
fdivrs
mov
and
push
stos
push
jmp
mov
sbb
fsubs
fmull
cltd
sub
add
jge
cmp
mov
dec
jl
lods
nop
xor
movsb
out
xchg
idivb
sbb
daa
sahf
imul
sarb
cmpb
inc
sub
jno
sahf
aad
scas
out
or
cmp
cmpsl
push
xchg
push
imul
leave
int3
fsubs
sbb
push
add
shrl
add
xor
push
jp
in
leave
int3
add
cmp
pusha
add
push
dec
clc
adc
mov
lret
ds
and
jno
mov
stos
mov
jg
ja
pushf
inc
in
inc
lock
test
and
rcl
lock
jbe
lcall
sub
adc
outsl
push
sub
sti
fsubr
adc
push
fwait
lods
js
test
xchg
jge
jb
aas
popf
pop
fisubl
test
add
push
dec
mov
jne
ja
mov
mov
mov
inc
in
stc
dec
movsl
ljmp
pop
les
call
inc
cmp
stos
outsl
sbb
loop
inc
scas
mov
lcall
fnstenv
xchg
cmpsl
fwait
es
fisubs
scas
ret
fwait
stc
dec
jo
mov
xorb
cmp
mov
mov
cwtl
lahf
imul
in
xchg
adc
insb
outsb
jp
cmpsl
jl
xor
jbe
dec
ds
fst
jecxz
mov
ret
bt
jae
xchg
scas
xor
xchg
pushf
aam
fbstp
and
and
add
iret
sbb
mov
clc
int3
xchg
loope
push
push
loope
sbb
lcall
lods
fstpl
fdivl
imul
pop
arpl
pop
repnz
and
pop
inc
stos
mov
dec
xchg
loopne
popl
sahf
in
inc
pop
sub
ja
cmp
adc
mov
pop
and
xchg
iret
icebp
or
das
negb
lcall
cmp
je
aas
test
fldl
xchg
es
loope
cmc
adc
push
cmc
pushf
push
stos
jmp
xchg
repz
icebp
inc
dec
add
add
popf
incl
imul
out
test
invd
mov
cltd
cmpsb
inc
mov
outsw
adc
mov
mov
pop
and
mov
mov
push
ret
or
adc
and
pop
xchg
sub
pop
repnz
les
fldcw
mov
dec
mov
cltd
adc
lods
xchg
or
push
jl
push
xchg
stos
pop
cltd
mulb
add
dec
test
fildll
mov
les
and
mov
nop
sahf
fidivrs
sahf
dec
jle
xchg
inc
adc
mov
or
dec
or
shlb
mov
push
or
mov
inc
std
jae
push
test
outsb
leave
decl
pop
add
jo
and
xchg
or
mov
cmp
ret
add
pop
adc
aam
add
add
cmc
mov
inc
test
jmp
xor
shrb
pop
enter
inc
push
sbb
pop
shl
or
inc
js
mov
arpl
ljmp
mov
inc
loop
inc
pop
mov
call
popf
xor
adc
loop
test
add
je
enter
cmp
and
and
lods
imul
dec
ret
sti
xchg
inc
scas
enter
std
es
cmovne
lods
jb
add
xor
add
push
jl
sbb
sbbl
movsb
push
insl
into
test
xchg
xchg
lods
andb
xchg
dec
sub
scas
add
lahf
shrb
loopne
int
popa
scas
sbb
imul
and
inc
stos
cmp
shlb
dec
in
mov
lret
aas
fimull
push
or
imul
test
add
ds
call
ds
movsl
push
dec
or
aas
or
xor
dec
mov
cmp
adc
mov
mov
xchg
push
lods
jle
out
or
mov
and
inc
and
mov
arpl
sbb
jb
test
fwait
das
cld
in
cmpsl
sbb
adc
jae
inc
push
insl
popl
and
sbb
pop
cs
std
imulb
mov
add
jp
stos
lret
insl
aam
imul
inc
inc
cld
mov
sbb
push
jecxz
jp
push
fs
add
push
fsubp
icebp
lods
ja
int3
pop
cmpsb
dec
sub
push
sbb
rcl
js
push
dec
mov
cwtl
cmpsb
cmp
ljmp
add
enter
mov
jecxz
das
xor
adc
shl
dec
lock
mov
test
mov
ljmp
sbb
mov
imul
sbb
movsl
mov
je
outsl
mov
divl
dec
jo
loope,pt
fidivl
ljmp
push
adc
mov
negb
inc
cmc
sti
ja
aaa
push
lahf
push
daa
data16
cwtl
xchg
popf
negb
fwait
push
mov
sbb
sub
out
dec
mov
add
mov
and
jnp
inc
xor
mov
fwait
imul
xchg
dec
mov
pop
xor
push
data16
dec
fadd
cmp
sub
movsb
outsl
adc
pusha
call
inc
mov
rcr
pop
cs
popa
dec
dec
xlat
rclb
jns
mov
pusha
aam
lret
in
fiaddl
jbe
or
lcall
daa
dec
loop
mov
es
pop
lods
sub
fildl
and
push
lahf
pop
into
xor
push
out
xchg
scas
dec
mov
mov
push
push
cmpl
flds
loop
cli
ror
sti
gs
fs
sbb
mov
in
jg
sbb
mov
rorb
test
rorl
sub
shrb
pop
push
cmp
and
in
cmp
mov
mov
bound
lret
daa
add
imul
pop
add
mov
test
rorl
lods
je
mov
loope
jmp
pop
gs
add
or
jmp
cmp
insl
push
test
dec
add
std
sbb
jno
and
dec
push
and
xchg
imul
pop
aad
int
stc
shlb
adc
jl
mov
cli
inc
ds
call
add
out
pop
pop
push
jo
push
adc
mov
es
add
mov
cmp
sub
movsb
daa
mov
dec
jo
cli
xchg
sub
mov
repz
out
cmp
lock
cli
push
sub
ds
pusha
mov
in
fstps
add
fwait
and
adc
mov
das
ds
movsl
xchg
jge
ret
add
adc
repz
sbb
mov
push
push
cmp
ret
push
adc
sub
add
push
aaa
shl
mov
or
xor
jnp
inc
in
rcll
mov
mov
mov
test
jbe
xor
mov
inc
loop
xchg
scas
imul
jae
jbe
out
addl
icebp
add
lcall
scas
int
mov
jns
in
lret
sti
popf
mov
js
push
adcb
mov
out
adc
xorb
imul
arpl
adc
lahf
iret
mov
call
jle
mov
int
xchg
and
dec
and
divl
jl
and
push
jl
cwtl
jmp
dec
jl
mov
xor
and
imul
mov
xorl
aad
mov
mov
cltd
cmc
sub
jae
aaa
pop
mov
mov
push
fimull
sti
aaa
cmp
xchg
adc
dec
lcall
cltd
out
decb
cmp
add
mov
mov
dec
mov
ds
repnz
dec
xchg
jg
pop
cmp
call
shrb
xchg
push
mov
or
fstps
inc
xchg
jae
sbb
lea
cmp
cltd
cwtl
mov
popl
xor
inc
xchg
push
icebp
xchg
cmp
rcrb
xlat
cmp
xchg
fld
pop
dec
mov
imul
pop
sbb
sub
lret
xor
mov
mov
repz
in
or
mov
mov
dec
jge
xchg
fmull
and
scas
sbb
xchg
dec
test
pusha
xor
mov
push
push
test
or
mov
inc
fsubs
scas
dec
lcall
xlat
or
dec
mov
dec
xchg
inc
mov
sbb
loope
pusha
lds
jnp
movsb
mov
cmpsl
add
scas
jp
enter
test
pop
push
xor
popa
pop
aam
xchg
sbb
loop
dec
pop
mov
es
sbb
jle
lock
fdivs
negb
cmp
sub
in
mov
mov
mov
lcall
mov
fbstp
mov
ja
mov
adc
pop
sbb
xchg
mov
hlt
test
aad
mov
aad
mov
lods
inc
mov
inc
stc
lret
sarl
pushf
into
rcrl
adc
rcr
aaa
dec
cmp
xor
mov
inc
cmp
jg
mov
mov
clc
call
out
or
shl
stos
clc
sbb
dec
and
cmp
out
frndint
jp
rclb
movsb
stos
jp
data16
cmc
enter
fsubp
jmp
xchg
imul
xor
test
adc
int3
mov
sbb
xor
mov
jae
or
mov
cmp
ret
stc
xor
inc
test
popf
test
loop
shl
cmp
sarl
je
fmuls
andb
push
and
out
sbb
sbb
xchg
leave
mov
ds
sahf
int3
cwtl
adc
int3
aaa
or
xor
lods
imul
jno
rdpmc
jno
notb
iret
pop
sub
shrl
leave
mov
loope
adc
jne
aas
xchg
call
xchg
data16
out
divb
xchg
xchg
xchg
push
idivl
divb
and
xchg
aaa
icebp
jg
mov
jbe
iret
dec
in
xchg
mov
push
push
addr16
mov
jg
test
jg
in
mov
cmc
ret
inc
movsl
inc
jo
or
push
movl
stos
fs
xor
mov
into
outsb
inc
dec
mov
int
inc
data16
insl
cmp
insl
push
imul
rcll
aaa
cs
ja
cmpsb
or
cmp
xchg
out
and
cmpsl
mov
fcoml
cmpsb
xor
bound
adc
or
jae
dec
enter
pushf
sub
cmp
leave
pop
insl
fwait
sub
imul
pop
movsl
jg
fcoms
or
push
je
inc
lock
cwtl
outsb
sbb
xor
aad
dec
xchg
push
mov
mov
and
push
hlt
mov
stc
push
out
scas
push
add
int3
mov
lcall
inc
mov
jo
add
add
mov
insb
sarl
cmpsb
aad
mov
jp
pushf
and
std
aas
jbe
pop
mov
sahf
test
mov
dec
cmp
jnp
jl
fiaddl
test
and
fwait
add
or
sbb
xor
jno
jge
jne
pop
jmp
rcrl
pop
push
cmpsb
inc
ret
je
pop
or
mov
sub
sbbb
leave
push
lret
bound
je
mov
pushf
enter
popf
and
sahf
sbb
je
daa
dec
sbb
jbe
popf
inc
add
adc
fucomp
jp
or
pop
and
bound
pop
das
popf
adc
in
outsl
inc
mov
inc
lret
and
cli
adc
and
push
mov
clc
fldlg2
cli
pop
xlat
imul
mov
cmp
popa
dec
xchg
sbb
in
jg
xor
jbe
lret
xchg
ja
stos
pop
jp
test
arpl
lcall
pop
dec
pop
push
in
adc
fstpl
mov
pop
mov
pop
or
ficompl
and
sarl
jge
pusha
insb
hlt
rolb
out
mov
add
push
jns
or
pushf
jp
jno
push
sbbl
pop
push
xchg
addr16
add
js
rclb
push
lods
shlb
xor
jns
adc
push
pop
mov
sbb
sti
test
inc
fwait
add
lods
iret
mov
test
outsb
out
inc
loopne
cld
aaa
les
mov
sub
push
andl
jp
pop
clc
mov
mov
jge
cs
js
out
roll
lds
in
enter
dec
jp
sub
push
js
arpl
ss
add
lmsw
lret
sti
xor
xchg
mov
jnp
loop
cwtl
add
mov
mov
mov
idivb
cmp
jecxz
addr16
and
test
insl
jo
daa
or
nop
mov
je
xchg
aas
or
bound
mov
jmp
mov
mov
jns
and
pop
cli
jp
mov
mov
cmovs
xor
push
or
stos
sub
in
pop
mov
data16
arpl
es
rcrb
es
xor
mov
inc
outsl
cmp
pop
sbb
jmp
sub
mov
sbb
push
push
imul
outsb
sbb
mov
std
mov
inc
aad
ja
pusha
jno
cwtl
aaa
fsubrl
xor
stc
sub
ret
sub
inc
fnstcw
pop
cs
mul
aam
inc
popl
mov
xor
xor
fadd
lds
outsl
decl
sbb
mov
push
cli
pop
or
insl
cmp
int
mov
out
sub
in
adc
adc
adc
stos
jnp
sti
jmp
mov
shr
fs
xchg
dec
jge
xchg
jae
adc
mov
add
and
jae
into
mov
cltd
xchg
rorb
inc
fs
add
stc
nop
test
inc
je
mov
fwait
std
push
jle
insl
pop
call
lahf
popa
cmpsb
add
fstps
insb
cwtl
js
iret
jl
xchg
adc
cmp
cmp
sbb
je
call
pop
sbb
jecxz
hlt
add
push
loope
scas
jns
mov
imul
or
in
mov
xlat
mov
addb
mov
leave
scas
out
push
push
xor
xchg
pop
add
lods
hlt
jle
out
pop
sbb
or
fldl
je
stos
cmp
pop
imull
or
ret
jo
rcr
xchg
call
jnp
lret
aad
xchg
or
jg
cmc
sbb
bound
mov
les
aad
push
push
cmp
pop
xchg
mov
daa
ds
xor
pop
jb
adc
mov
cs
aam
es
pop
lcall
mov
aas
mov
faddp
push
popf
std
pop
ret
push
mov
lcall
push
mov
call
dec
aas
dec
out
in
int3
fisubrl
mov
push
nop
mov
fimuls
stos
and
push
fldenv
daa
fxch
nop
std
pop
ds
inc
xor
jg
add
in
dec
inc
ret
pop
xor
outsl
add
push
cmc
jecxz
dec
pushf
push
mov
lea
int3
movsl
push
gs
xchg
pop
pop
sbb
leave
cli
or
inc
nop
cmp
mov
outsb
fsubl
loop
xchg
xchg
sbb
sub
inc
push
into
push
mov
fnstsw
jae
jge
in
fidivrs
fcoms
sbb
xor
or
dec
ret
loope
cs
push
sub
pop
insb
mov
sbb
xor
cmc
ficoms
loopne
out
jne
sub
data16
out
enter
mov
clc
pop
sub
cmp
mov
adc
pop
jle
jno
inc
ret
outsb
jns
repz
mov
bound
rorl
sbb
pop
testb
sar
push
out
jmp
cmpsb
idivl
dec
inc
mov
je
and
sub
push
aad
mov
jo
jge
mov
push
pop
add
push
je
mov
dec
mov
sbb
xchg
insb
cmp
ss
sbb
fs
les
or
adc
cmp
mov
xor
inc
mov
ret
mov
inc
adc
lock
push
xor
cmc
movsl
out
popf
cmp
daa
movsb
add
mov
cltd
lea
add
add
jp
add
mov
adcb
repz
cmp
ret
inc
push
push
lods
lret
mov
push
in
shll
push
mov
mov
ret
popa
and
sub
xchg
and
mov
add
and
pop
cli
pop
stc
mov
insb
lret
cld
mov
test
aaa
loope
test
mov
rol
pop
movsl
out
testb
rol
sbb
mov
jbe
or
leave
and
addr16
and
stos
xor
inc
sub
cmp
call
pushl
in
mov
test
mov
ljmp
mov
lods
adc
adc
jbe
jg
xchg
stos
dec
push
or
inc
lret
push
inc
imul
aaa
add
pop
repnz
lds
mov
in
shlb
setno
aam
cmp
xchg
cld
shlb
add
insb
lahf
jo
fwait
sbb
or
cli
sub
mov
out
jnp
out
jle
mov
shlb
repz
cmp
popa
test
dec
jge
scas
cli
aas
push
out
mov
clc
cltd
stc
mov
inc
xchg
fstps
sbbb
jno
xchg
xor
and
pop
js
or
das
ret
pop
lret
push
push
lret
push
xor
aad
fidivl
jo
shlb
loop
dec
fsts
movsb
jmp
cli
add
insb
popa
and
mov
mov
ror
es
xchg
sbb
lods
nop
popf
xor
fdivs
popf
mov
test
sti
or
in
jle
sbb
lods
test
push
mov
inc
mov
aad
shll
push
rcrl
daa
ljmp
and
dec
mov
daa
data16
sti
arpl
movsl
lods
aaa
out
cld
mov
je
dec
imul
fwait
test
sahf
xchg
ficoms
push
idivb
dec
dec
jb
aad
add
mov
push
xchg
aaa
or
aas
push
and
ss
in
mov
push
sub
pop
in
je
insl
mov
push
sub
dec
jge
sub
cmpsl
pop
add
aad
push
je
xchg
mov
inc
adc
roll
push
sbb
inc
into
mov
aas
dec
scas
xor
gs
std
mov
jp
jecxz
shl
mov
push
pop
sub
lds
sbb
inc
mov
testl
mov
pop
fbld
xor
je
test
cmpsb
lods
mov
add
sub
or
dec
add
mov
dec
mov
sub
ret
mov
scas
out
mov
arpl
jle
adc
cli
xor
ret
fsubrs
arpl
test
test
fisubrs
popf
fwait
mov
in
subl
adc
inc
xchg
add
ss
fsubr
lcall
nop
sti
sub
bound
mov
dec
xchg
mov
xchg
pop
test
inc
adc
jmp
leave
lahf
andb
jge
jl
scas
mov
aaa
roll
popf
mov
test
push
pop
jo
push
mov
mov
out
repz
je
in
sti
ret
sbb
subb
fcoml
mov
xchg
hlt
clc
repz
or
inc
bound
into
cmpsl
clc
cmp
dec
mov
ds
popf
xor
pop
iret
pop
jo
leave
dec
int3
popf
dec
fsubl
dec
cmc
sti
std
dec
or
pop
mov
and
inc
and
enter
subb
cmp
fs
add
push
mov
mov
jb
into
mov
mov
es
popa
xorb
add
sti
mov
int
xchg
inc
insb
cli
enter
xlat
call
std
int
mov
jae
ret
pop
mov
stc
xchg
fidivs
pop
insl
push
addl
out
into
je
xchg
mov
cmpsl
push
dec
push
jo
bound
sarl
or
sub
test
and
rcll
popa
test
test
add
sbb
xchg
xchg
scas
popa
pop
pop
icebp
into
aas
testb
jge
dec
lahf
pop
notl
cmp
jns
jge
push
hlt
jmp
pop
sbb
add
sahf
pop
sahf
mov
inc
push
push
sbb
jnp
push
jns
scas
adc
xchg
int
into
dec
je
movl
xchg
jle
mov
test
mov
mov
stos
xor
xchg
sbb
dec
pop
mov
shll
jns
inc
xor
cmp
mov
orb
jne
xchg
xor
pop
mov
jle
push
inc
dec
jnp
in
insb
inc
cmp
pop
mov
arpl
lock
fistpl
and
cmp
push
fisubl
fcompp
adc
inc
dec
inc
daa
loope
xchg
test
inc
pop
or
or
lods
ss
cltd
mov
cwtl
pusha
cmpsl
sbb
jmp
lret
fwait
je
mov
mov
sbb
sub
pshufw
movsb
add
jge
push
clc
jae
xor
lcall
mov
pop
test
sub
and
aaa
cltd
jne
andl
test
mov
popf
sbb
adc
bound
outsl
loopnew
bound
mov
pop
mov
scas
fstp
inc
repz
aaa
rcl
add
adc
lock
lods
inc
inc
push
and
aam
ds
mov
lods
orl
pushf
and
in
jecxz
and
mov
int
mov
shlb
scas
mov
je
fdivrl
fwait
xchg
xchg
sbb
fs
sub
adc
sub
cs
mov
fidivs
or
mov
fisubrs
dec
dec
dec
mov
cli
mov
jb
jg
push
jne
out
pushf
xor
mov
out
adc
add
test
mov
mov
mov
daa
mov
jne
xchg
push
mov
pop
jno
mov
mov
inc
inc
addr16
pop
fldenv
std
mov
mov
je
xor
lods
test
push
aaa
pop
repnz
inc
in
mov
xchg
push
mov
fildl
mov
dec
and
mov
cs
fcmovnb
xor
sbb
int3
lods
insb
sub
enter
cmpl
add
push
ss
mov
ss
loopne
cld
scas
adc
inc
div
inc
into
in
adc
aas
mov
mov
mov
sbb
jae
ljmp
cwtl
data16
lock
or
sahf
push
leave
iret
add
add
mov
sahf
and
bound
sti
into
push
inc
cmc
xor
sbb
mov
dec
xor
mov
lds
cmp
imul
xor
push
mov
cmp
or
cs
mov
cmp
test
inc
mov
adc
filds
pop
and
xor
sub
mov
adc
adc
out
xchg
rclb
mov
cmp
mov
sbb
stos
les
lret
cltd
adc
bound
or
xchg
push
dec
shl
mov
dec
popa
or
mov
pop
xor
pop
gs
mov
sub
mov
jecxz
jae
inc
dec
insl
adc
nop
add
jo
icebp
push
daa
jg
int3
push
pushl
pop
adc
loop
aam
out
xchg
push
icebp
ss
out
ja
lret
jge
std
push
cmpsb
add
test
test
jnp
fcoms
or
inc
scas
outsl
push
mov
adc
aam
mov
xchg
dec
pop
stc
pusha
insl
xchg
lea
ret
xchg
rorl
inc
push
shll
or
je
mov
fdivl
insl
lret
scas
cmp
adc
xor
stos
adc
xchg
or
mov
stos
push
dec
test
std
enter
aas
inc
mov
pop
pusha
jae
xor
cmp
scas
push
outsb
enter
xor
stos
loop
mov
das
add
lahf
mul
div
and
mov
jne
xor
jmp
in
and
mov
les
lds
mov
pop
pusha
xchg
mov
out
or
repz
jo
sar
out
dec
fildll
dec
pop
dec
add
jbe
jle
dec
ja
mov
in
jg
out
xor
lcall
inc
lds
push
sbb
lret
imul
push
aad
es
stos
scas
pop
sbb
adc
cmp
sub
jl
rcr
jmp
adcb
outsb
repz
jmp
add
in
andb
out
jg
in
xchg
mov
xchg
int3
inc
incl
incl
jo
popf
scas
popa
leave
xchg
jp
scas
mov
pop
pusha
adc
pusha
xchg
in
lret
jl
push
je
mov
jecxz
test
xor
mov
adc
test
mov
mov
push
sub
aad
push
lods
mov
mov
inc
pop
sub
cmp
push
lret
dec
mov
cmp
xor
in
or
mov
jmp
inc
adc
xchg
xchg
mov
lock
test
adc
mov
rcrl
inc
test
sub
adc
dec
mov
or
jb
dec
mov
jae
dec
je
and
sbb
jmp
es
in
cmpsl
dec
xor
or
lret
push
jp
dec
pop
add
cmp
inc
and
and
xor
shlb
jge
shrb
lahf
bound
pusha
loop
sub
xchg
movsb
mov
push
hlt
movsb
shrl
push
bound
adcb
push
xor
int3
mov
push
in
ds
push
jmp
jno
mov
std
sti
sti
sub
lahf
xorl
lock
adc
repnz
int
negl
jp
or
xchg
jns
popf
hlt
mov
out
clc
inc
xchg
push
dec
mov
or
add
and
in
std
cmp
push
adc
clc
pop
push
jo
in
inc
sub
faddl
push
ljmp
orb
push
outsb
sub
das
das
cli
lods
out
lock
dec
xor
popa
dec
xchg
jle
add
cmc
jp
shll
mov
in
push
mov
stos
mov
add
movsl
std
or
mov
jecxz
ss
mov
xor
sub
aam
daa
fwait
xlat
ret
cmc
bound
xchg
add
cwtl
in
ljmp
mov
cltd
mov
pop
je
in
dec
addr16
push
mov
lret
sub
jbe
cmp
xchg
mov
ljmp
lret
mov
cmp
push
rol
pop
push
cmpsb
cmpsl
lock
pushl
aas
push
mov
pop
cmp
lock
aam
fsubrs
lahf
dec
inc
fistl
and
movsb
cltd
push
fsts
sti
cmpsl
test
or
popf
sbb
jmp
imul
mov
ja
hlt
jp
in
sub
dec
mov
xor
xchg
xor
jl
loop
faddl
inc
insl
imull
or
mov
lcall
fs
sbb
repz
xchg
dec
jne
mov
lcall
mov
add
push
sbb
xchg
scas
mov
pop
jnp
data16
jmp
js
cmp
repz
outsb
inc
xchg
mov
rcrl
icebp
jns
sub
jne
imul
pop
mov
ret
call
jb
or
scas
or
mov
xchg
outsl
dec
adc
jae
hlt
dec
sbb
adc
rorb
test
gs
aam
push
call
ret
adc
int
addl
andb
inc
outsl
push
mov
enter
jbe
xor
push
inc
lods
faddl
ret
stos
push
data16
arpl
imul
jne
rcrb
and
push
fisubs
adc
mov
jo
pop
mov
dec
out
sub
fs
xorb
dec
xchg
sub
faddl
push
frstor
pop
repnz
dec
pop
negl
or
clc
in
lds
sbb
xchg
mov
jecxz
cmpsl
xchg
dec
pop
loop
mov
cltd
fimuls
sahf
insb
test
dec
in
popa
jle
cmp
pusha
subl
fiaddl
cmc
imul
pop
js
mov
gs
adc
js
pop
daa
pushf
push
insl
and
lods
rol
cs
push
rorl
add
scas
loop
mov
mov
and
in
or
daa
and
mov
mov
inc
call
mov
arpl
mov
pop
ds
scas
lcall
ret
repnz
push
mov
dec
xorb
or
add
leave
or
cli
clc
sbb
pop
stos
sahf
ds
jmp
xorl
push
das
xchg
sbb
xchg
add
sbb
push
push
ss
xchg
sahf
popf
cmp
test
je
insl
mov
loop
pop
shlb
sbb
add
lds
fidivs
xchg
ret
call
in
push
rcrb
scas
ret
sbb
clc
push
adc
adc
and
adc
icebp
filds
push
xchg
xchg
mov
shl
and
push
test
dec
aas
mov
jbe
dec
or
jl
dec
test
mov
test
jg
je
xchg
leave
sub
hlt
sahf
js
imul
add
ds
cli
inc
sub
ret
dec
cmp
fisttpl
push
iret
xor
lods
ja
sbb
pop
aaa
aam
int
in
lcall
jb
or
and
clc
xchg
adc
jmp
loope
cmp
aas
cmp
sahf
int
sub
cld
xchg
testl
lods
push
in
mov
imul
and
or
shll
jge
mov
inc
movsl
jae
int3
dec
and
stos
mov
rcrb
xor
xchg
push
push
aad
pop
sti
mov
and
xchg
sahf
pop
add
xlat
outsl
sub
fildl
sub
out
cs
lret
inc
xlat
cli
xor
imulb
mov
xor
mov
dec
push
cltd
add
fisubs
dec
sub
inc
jmp
in
nop
jp
scas
nop
sbb
cmc
xchg
test
push
adc
pop
shlb
sbbl
sbb
sub
out
sbb
mov
cld
cmp
inc
stos
inc
xorl
sti
add
es
sub
sbb
inc
test
pop
mov
movsb
sub
ss
and
add
inc
cmp
mov
rcrl
push
or
cmc
mov
xor
lret
jmp
or
test
push
cli
rclb
mov
pop
xchg
cmc
aaa
jne
push
es
lret
loopne
xchg
lods
jbe
lret
xchg
mov
or
aad
sub
or
test
lock
mov
lcall
sbb
cmp
xchg
out
or
aad
fsubrs
rcrl
cli
push
or
insl
dec
mov
add
and
or
add
pop
fnstcw
jb
test
insl
xor
push
and
adc
repnz
sbb
jmp
xchg
or
dec
mov
mov
lret
jle
pop
ds
cmp
mov
arpl
in
out
icebp
mov
pop
jns,pt
or
test
lods
xchg
fisttpll
mov
dec
or
iret
fsubrl
jb
in
xor
inc
cmp
mov
mov
sub
jno
subb
xchg
pop
scas
je
cld
mov
into
mov
rcrl
insl
sets
cld
dec
das
enter
xor
fxsave
arpl
sub
mov
sub
mov
jo
arpl
stos
inc
je
dec
out
add
inc
or
aas
mov
sbb
jl
add
ljmp
and
cmpsl
ret
mov
fidivrl
in
dec
inc
pop
insl
cmp
das
xchg
pop
imul
mov
fxam
lock
and
mov
mov
lods
cmpsl
arpl
imul
fnsave
cmp
mov
int3
inc
mov
ret
fisubs
in
pop
add
sti
gs
jbe
divl
dec
or
scas
popa
mov
mov
addr16
sbb
out
xchg
lret
ljmp
enter
pop
mov
fs
push
les
outsl
sub
loop
daa
push
les
jmp
jmp
mov
lahf
fsts
lret
incb
subb
or
push
jo
shlb
mov
ljmp
lcall
subl
pushf
enter
inc
fisubl
jl
out
push
inc
xor
lretw
hlt
xor
loopne
push
lods
stos
mov
ds
push
sbb
sarl
in
push
push
jo
adc
mov
movsb
addb
add
pop
std
shl
push
daa
inc
mov
or
nop
fcompl
mov
es
mov
sub
shr
nop
jb
inc
jne
mov
push
jp,pt
lret
mov
popl
mov
jb
jle
les
outsl
popa
lret
lcall
add
std
xchg
xor
call
adc
stos
pop
test
dec
mov
scas
es
jg
test
push
mov
outsl
and
adcl
push
arpl
inc
push
jae
sbb
mov
jnp
mov
adc
and
pop
out
ljmp
nop
lds
or
or
adc
ret
add
das
push
gs
xor
mov
or
sbb
mov
stc
out
leave
xor
jno
sub
xor
and
daa
adc
das
push
cltd
repnz
mov
push
pop
add
pop
jno
cmovl
push
adc
cmp
imul
lods
in
ljmp
lcall
test
push
pop
jle
jo
stos
shlb
sub
decl
data16
fs
mov
loop
push
jle
rorl
adc
push
icebp
push
xlat
jbe
adc
inc
pop
xchg
flds
into
data16
pushf
mov
mov
fsts
call
scas
and
in
push
add
ja
iret
stos
insl
push
cmp
enter
jo
push
lahf
xor
cmp
repnz
inc
cmp
jae
sub
pop
movsb
aam
lods
test
imul
jge
aad
and
adc
adc
rclb
xor
add
mov
loope
jmp
dec
mov
sbb
lret
lret
fisttpl
cs
fisubrl
xchg
add
add
out
cwtl
ss
in
push
push
scas
jae
int
andl
adc
adc
add
lea
add
ret
and
jb
repz
jne
adc
sub
mov
dec
imul
adc
push
pop
adc
mov
ficompl
dec
rorl
stos
je
push
pop
cmpsl
jecxz
psubb
xchg
cmpsb
popa
and
pop
loop
mov
pop
lds
cmpsb
or
rcrl
insl
sub
repnz
or
dec
xchg
insl
or
push
in
bound
pop
mov
xor
jg
dec
vpsllw
int3
pushf
sbb
pop
lahf
mov
imul
mov
outsb
andb
mov
stos
aad
dec
xchg
add
pop
pop
xor
pop
xor
stos
popa
nop
movb
vcvttpd2dq
sarl
push
add
nop
in
jecxz
or
xor
cld
nop
cs
push
rolb
pop
dec
xchg
test
sbb
inc
negl
mov
xchg
xor
cltd
xchg
mulps
iret
movsl
cmp
fisttps
lods
push
gs
andl
cmpsb
into
icebp
jne
and
aas
cld
mov
test
std
push
pop
mov
aas
repz
aad
bound
enter
push
jg
into
scas
cmp
lods
adc
sbbb
mov
out
aad
cmc
push
nop
xor
ja
sbb
pop
in
push
or
std
ficoml
inc
xchg
fistps
aam
rcll
cmpb
pop
adc
lods
cmp
jge
jle
and
mov
imul
sti
and
lock
mov
out
xor
xchg
mov
loope
sti
add
shll
call
ds
cmc
test
insb
js
sbb
outsl
dec
sbb
repz
cmpsb
mov
xchg
movsl
popf
ljmp
sub
ret
mov
or
out
xor
sub
mov
sub
push
xchg
dec
rcrb
sarl
mov
xchg
sbb
arpl
and
cli
dec
aam
jns
std
scas
cmp
fsub
fsubl
lcall
pop
push
test
or
pop
mov
cmp
mov
iret
das
sub
mov
inc
gs
enter
aaa
add
adc
mov
das
sub
push
shrb
jbe
cmp
sar
mov
sub
popa
stos
push
adcl
loopne
mov
lahf
sbb
in
pop
mov
adc
aas
sbb
stos
out
dec
dec
and
sub
js
sub
jo
mov
jge
cmpsb
jo
sbb
out
mov
or
adc
xchg
add
std
frstor
mulb
les
in
fists
xlat
push
notb
or
sub
jbe
rcr
into
ret
mov
mov
mov
mov
or
xor
jb
jmp
in
cmpsl
push
int3
add
call
jl
add
into
add
call
jbe
out
xchg
add
stc
and
mov
jl
inc
pop
mov
lods
dec
xor
push
mov
cmp
jecxz
push
mov
scas
jle
sbb
outsb
xchg
fwait
inc
push
test
adc
hlt
outsb
nop
iret
xorb
sub
data16
aad
test
loope
xlat
pushf
jno
bound
cmp
subl
mov
inc
dec
insb
rorb
xchg
adc
pusha
sub
das
xchg
sbb
xchg
push
xor
inc
mov
in
movb
imul
rclb
add
scas
insl
adc
ds
or
and
adc
rcl
add
lock
adc
pop
xor
fsts
xor
in
sub
sbb
stos
shl
and
lods
cmpl
cmpsb
out
or
sbb
pop
cmp
in
and
mov
movsl
xchg
inc
ljmp
xchg
jmp
add
cmp
adc
jno
aam
aam
das
leave
jle
jl
cmp
test
dec
or
incb
lret
jae
push
iret
movsl
cmp
aam
push
ss
push
pop
fidivrl
enter
sbb
sar
mov
xor
mov
cmp
dec
in
cmp
les
add
mov
inc
mov
adc
and
xchg
mov
pop
xchg
xor
nop
fwait
cmp
sahf
sub
sbb
dec
xor
xchg
lock
ds
out
push
clc
or
cmp
idivl
mov
cmpsb
stos
shll
stc
dec
ljmp
add
das
test
jns
shll
xor
mov
fists
mov
xor
mov
pusha
mov
out
shlb
mov
nop
add
pop
ret
neg
rclb
xchg
out
sbb
jle
sub
insl
ret
adc
xor
add
out
testl
test
mov
sbb
xor
dec
cmpsl
fisubs
cs
or
sub
and
in
arpl
leave
xor
lahf
mov
adc
adc
imul
rorb
jp
adc
inc
out
les
shrl
cmpsl
sub
shlb
inc
bound
push
ss
pop
push
enter
jno
lret
push
aam
jmp
push
sub
or
fcomp
sti
xor
sahf
ds
fidivs
sbb
fisubl
jg
lea
mov
stos
pop
int3
fucom
push
jno
xor
adc
jle
dec
jl
lcall
in
push
or
loope
int
push
adc
mov
test
imul
mov
dec
and
stc
push
xorb
mov
sbb
dec
mov
mov
xor
lret
add
jae
in
xchg
mov
lds
repz
push
out
data16
xchg
pop
add
jbe
cmp
push
pop
and
xor
xchg
pop
dec
dec
cmpsb
ss
xor
push
lock
sbb
dec
dec
popf
sbb
das
sbb
daa
ret
jb
mov
mov
mov
ja
and
outsl
adc
loope
cmpsb
cli
add
ficomps
fdivs
push
mov
daa
push
push
mov
sub
pop
sub
test
clc
lods
add
stos
mov
test
sub
dec
ja
adc
outsl
dec
inc
sub
jecxz
add
out
dec
mov
ret
std
adc
roll
xor
inc
sub
jne
cmp
and
sarl
loop
roll
push
jle
add
je
mov
pop
jl
stos
fisttpl
mov
lahf
push
mov
leave
pop
xchg
faddp
dec
mov
or
xor
inc
addr16
dec
push
push
jnp
std
xor
stos
add
add
pop
outsb
cmp
ret
pop
jmp
adc
mov
pop
and
or
inc
xor
loopne
ret
jbe
push
xor
push
add
mov
pop
movsl
cmpsl
daa
jae
adc
in
sbb
ret
shl
insb
rcrl
or
loop
mov
js
in
cmp
add
decl
mov
xchg
xchg
lods
sbb
or
adc
pop
data16
dec
stos
imul
mov
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
cmc
data16
test
es
mov
cmp
add
mov
adc
adc
xchg
lret
cmp
add
ja
cs
pop
aad
push
and
xchg
aam
or
mov
int
mov
jmp
sbb
push
sbb
enter
dec
jno
aaa
loopne
mov
call
call
outsb
inc
mov
pop
or
mov
jbe
dec
mov
popf
out
scas
mov
dec
in
mov
lret
pusha
incb
imul
push
movb
mov
enter
fsubrl
mov
dec
out
sbb
or
lcall
lds
popf
out
fidivl
mov
cmp
or
insl
mov
xchg
jp
in
std
test
xlat
mov
sub
xlat
in
push
ds
sbb
leave
cmp
popf
and
jb
sbb
push
and
xchg
jo
dec
out
les
scas
or
pop
pop
add
nop
adc
movsl
jns
push
in
mov
or
and
and
std
push
xchg
push
cli
enter
in
gs
test
mov
adc
lods
shr
add
cmp
mov
mov
xchg
or
aas
in
xchg
cwtl
adc
push
sub
sub
sub
sbb
pushf
pop
jl
and
in
loop
insl
out
idiv
dec
stc
outsb
cli
push
add
fwait
cwtl
popf
stc
cmpsl
shlb
xor
push
pop
bound
jne
popa
xor
lahf
push
cmp
fdivl
test
shlb
fistl
ds
mov
test
inc
sub
in
aas
roll
test
std
cwtl
jmp
outsb
shlb
js
fs
adc
pushf
adc
out
xor
dec
daa
shlb
jae
xchg
arpl
jae
iret
or
shlb
jns
mov
aam
sahf
mov
sbb
out
fistpl
mov
or
pop
pop
cli
push
push
jmp
mov
jmp
pop
dec
movw
imul
adc
pushl
movb
fidivrl
inc
jge
adc
fldl
aam
cmp
bsf
jno
sbb
and
cmpsl
mov
cmp
call
repnz
mulb
adc
add
jnp
lea
imul
out
shll
test
daa
sub
dec
push
adc
aas
and
or
pop
popa
inc
cs
fsubr
inc
leave
xchg
push
cli
xor
pop
jg
scas
daa
leave
pop
sahf
inc
sub
clc
scas
outsl
lock
fsubrp
pop
or
cmpsb
inc
data16
lea
jnp
in
daa
mov
fadd
dec
idivb
out
xor
pop
cmp
sub
mov
push
rcrb
jb
mov
in
push
adc
push
jae
nop
fimull
push
lods
lea
xor
cmp
sub
jae
mov
mov
popl
inc
stc
mov
mov
mov
jge
or
sahf
and
lcall
and
ja
sbb
jle
adc
bt
sub
call
pop
arpl
sub
cmpsl
in
push
mov
add
fcoms
inc
mov
sbb
jne
sbbl
in
leave
out
fistpll
add
in
enter
daa
test
repnz
xor
out
push
xchg
daa
or
in
jbe
das
dec
add
xlat
sub
xor
add
push
mov
adc
adc
fdivl
jns
insb
jb
jne
jnp
shlb
dec
and
test
fsubrp
adc
jge
insb
add
outsb
inc
les
mov
out
mov
sub
inc
rorb
and
push
clc
jb
call
inc
push
pop
iret
scas
sbb
bound
add
loope
adc
xor
std
sbb
lret
test
or
ficoms
sub
jnp
jo
out
and
out
and
aas
ret
pop
cmp
or
pop
push
dec
xlat
xor
pusha
outsl
out
cmpsb
xchg
addr16
jne
mov
mov
inc
leave
jp
sbbb
xchg
xchg
mov
jl
jecxz
pop
es
adc
outsl
mov
shrb
outsb
mov
stos
popa
ljmp
mov
ret
xchg
pop
cs
in
or
cltd
xchg
stc
add
pop
mov
jg
sbb
sub
out
int
push
jne
cmp
jb
lcall
out
sub
mov
xor
decl
sub
sbb
sbb
out
outsb
or
pop
les
cs
mov
imul
xchg
mov
or
ja
fcom
insb
enter
aam
popf
adc
in
xlat
pop
stc
jnp
mov
int3
scas
sub
cli
push
lret
cs
das
loope
imul
pop
aas
xchg
or
jo
in
mov
js
ja
aaa
sub
mov
ret
ja
in
orb
cmpsl
jl
xchg
mov
subl
out
or
mov
sbb
jo
jnp
xor
std
and
and
push
inc
pop
into
sbb
lahf
inc
pop
insl
das
les
xor
jne
ret
test
xor
movsb
ss
cmp
dec
sbb
aaa
add
ret
jl
inc
out
or
xchg
xor
in
cmpsl
sbb
ja
enter
sub
inc
das
shlb
pop
push
test
inc
es
cli
jb
fsts
mov
fisubrl
orb
test
aam
and
pop
mov
mov
imul
add
fnsave
sti
jne
sbb
jg
repz
div
cs
mov
lods
in
xchg
stos
add
push
push
cld
xor
push
pop
pop
mov
fdivs
sbb
mov
pop
std
inc
pop
sbb
push
stos
data16
cltd
mov
push
clc
test
mov
inc
ljmp
cmpsb
sub
and
pushl
mov
fsub
leave
mov
ss
icebp
adc
popf
xchg
xchg
sbb
push
dec
mov
scas
aas
push
dec
int3
fisubrl
arpl
dec
fiadds
cltd
je
js
sbb
add
mov
inc
mov
pop
test
pusha
lret
or
pop
push
xlat
mov
sub
jge
fcomip
cmpsl
xor
cmp
add
fcomps
popf
popa
stos
jb
adc
pop
adc
jmp
cmpsl
push
fcompl
sbb
insl
inc
push
cmp
sub
shlb
lods
ja
cmpb
fmul
andl
cmp
xchg
insb
push
push
fcmovbe
jnp
xor
cmpsb
aad
roll
ret
das
jp
mov
mov
bnd
mov
push
fldt
fsubl
add
ret
arpl
jns
add
xchg
or
adc
jb
adc
lock
popa
loopne
pop
sub
xchg
loope
xlat
nop
out
inc
mov
adc
mov
lret
hlt
and
scas
je
xor
lcall
test
sbb
or
jle
push
add
mov
jl
xorl
add
test
and
inc
pop
rcrl
push
mov
les
aas
mov
add
stos
lea
sub
outsb
or
ret
pop
xchg
call
dec
imul
inc
inc
cmp
les
fiadds
sub
pop
lret
mov
or
cld
pusha
jo
andl
movsl
jb
sbb
test
int
mov
or
inc
int
imul
or
cmpsb
sahf
pusha
xchg
in
cs
lea
in
add
repnz
cmpsb
sub
xchg
fstpt
mov
imul
jmp
loope
imul
gs
inc
imul
and
sarl
fcomp
cld
aaa
push
stos
and
mov
loope
pop
pop
sub
mov
sbb
sub
mov
jl
xchg
lods
lcall
push
xchg
lds
adc
adc
cmp
test
lock
sub
lods
out
int3
jno
scas
int
jns
icebp
mov
fwait
jmp
xor
data16
imul
lds
pop
ljmp
mov
jno
test
das
sub
in
mov
push
notb
push
neg
mov
push
dec
xor
pushf
and
xchg
sub
mov
cmp
leave
inc
adc
pop
lea
xchg
mov
clc
mov
pusha
fmull
jae
out
out
inc
push
in
push
call
adc
push
and
shl
push
lret
and
xchg
arpl
jecxz
push
inc
add
dec
mov
mov
inc
sbb
sbb
xchg
call
sbb
pop
dec
push
push
dec
mov
xor
mov
pop
iret
inc
call
daa
mov
int3
inc
rol
lods
mov
pop
fwait
stos
mov
add
push
inc
mov
mov
lods
jne
mov
or
jge
fnstsw
sub
dec
cs
push
push
ds
push
dec
arpl
in
push
pop
dec
enter
cmp
mov
comiss
cmpsb
inc
sub
dec
sub
divl
mov
jae
mov
sub
jno
xchg
ss
jle
lret
xchg
lret
pusha
fs
lods
iret
in
mov
xor
loope
jo,pn
adc
pop
xchg
sbb
out
mov
enter
xlat
push
pop
jb
xor
pop
jb
sbb
push
fwait
psllw
inc
mov
jae
and
mov
push
fcoml
test
and
push
push
loope
sub
sbb
cmpl
addr16
xor
xchg
call
push
cmpsb
fmuls
xchg
sub
jnp
lods
and
sarl
neg
and
mov
into
push
pop
imul
ja
dec
andl
sti
fldcw
cld
subl
push
mov
xchg
inc
arpl
mov
rcrl
rcll
lea
std
mov
mov
push
lods
xchg
xchg
inc
jae
mov
pop
cmpsb
out
call
mov
jl
das
mov
lods
dec
lods
lret
arpl
pop
pushf
sbb
sub
cmp
or
int
and
std
movsb
loope
jb
cmp
popa
fmuls
cli
cmc
jmp
adc
sub
sbb
mov
cwtl
inc
repz
dec
test
sbb
cmp
imul
or
add
loopne
inc
test
in
gs
dec
into
adc
outsb
loope
add
cmc
xchg
loopne
imul
add
and
stos
into
sti
inc
jb
out
ja
in
pushf
sbb
shlb
lahf
std
xor
jo
ja
out
inc
fildl
mov
fistl
xor
add
adc
push
inc
mov
add
nop
cmpsb
outsl
outsb
clc
jb
xor
add
mov
inc
fsubp
jns
mov
mov
mov
push
iret
out
sbb
lods
adc
mov
stos
add
adc
cmp
out
sbb
scas
insl
dec
push
xchg
fists
jnp
cmp
mov
dec
and
incl
test
in
cmc
clc
pop
loop
cmpsl
mov
mov
inc
cmp
xchg
fstpt
out
inc
cs
and
fs
leave
mov
das
xchg
mov
push
daa
pop
addl
popa
cwtl
add
and
pop
icebp
ficomps
cmpsl
ja
cwtl
adc
dec
sbb
test
fldt
adc
out
clc
insl
mov
pop
mov
lods
sbb
shlb
fidivrl
repz
idivb
sub
cs
adc
int3
pop
push
leave
cmp
xchg
sub
push
mov
sub
jp
sbb
inc
xor
incb
dec
daa
lods
and
rol
mov
into
ret
movsl
xchg
int3
inc
dec
movsl
jl
mov
int
and
stc
mov
repz
call
std
jnp
lods
add
mov
fisubl
dec
sbb
mov
dec
inc
inc
push
sub
push
mov
lock
push
push
call
pop
cli
sub
or
outsb
lret
fcmovb
push
roll
mov
mov
or
fwait
xor
inc
xor
xchg
and
inc
popf
add
and
fdivr
jle
mov
push
sub
inc
and
mov
mov
mov
cmpsl
out
add
sub
xchg
xor
push
add
cmp
cmpsl
mov
filds
sbb
loope
sbb
or
jle
popf
jbe
mov
jo
inc
imul
outsb
push
adc
testb
push
mov
dec
dec
or
hlt
fcompl
pop
mov
and
xchg
sbb
push
ror
imul
jg
mov
lock
pushf
pop
out
dec
xchg
mov
sbb
push
nop
cli
lahf
mov
sub
xchg
out
scas
xchg
xor
cmc
lret
pop
mov
clc
dec
dec
jbe
mov
aas
lahf
sbb
jge
push
sub
xchg
cld
lods
cmpsl
fimuls
fcoms
mov
dec
jge
imul
or
pusha
and
inc
bound
jns
mov
jno
cmpsb
sahf
and
push
out
pushf
xor
lret
inc
adc
push
arpl
cmp
xchg
test
mov
lret
into
ret
out
mov
out
sbb
std
sub
inc
xor
insl
mov
xchg
xchg
adc
push
rorl
push
mov
xor
fstpt
dec
outsl
jbe
mov
popa
sti
mov
cmpsl
mov
test
test
add
insl
sub
push
mov
cmp
lret
jo
adc
dec
sub
sti
xor
mov
mov
lds
push
out
and
bound
rcr
xchg
ja
inc
in
sti
mov
push
cmpsb
mov
sahf
loopne
cmpsl
jb
lret
push
cmpsb
push
mov
xchg
dec
mov
movsb
and
push
sbb
testl
lods
shrb
cmp
or
out
xorl
mov
test
shlb
dec
push
cld
pop
ret
cmp
dec
add
test
arpl
add
cld
dec
inc
push
fs
lds
add
cmp
divl
inc
nop
add
cli
jae
mov
or
mov
sub
jg
and
lods
push
mov
sti
sub
xor
and
adc
stc
adc
mov
sub
sub
mov
sbb
mov
jo
ja
jle
mov
add
xorl
lds
or
iret
movsl
mov
or
mov
mov
stc
jno
shl
popf
cli
rorl
mov
sbb
inc
nop
xchg
xchg
xor
push
dec
mov
inc
inc
pop
inc
push
xchg
lret
cmp
pop
lock
inc
imul
pop
push
sub
mov
or
test
leave
nop
cmpsb
out
cmpsb
mov
movsb
addr16
cwtl
aam
xor
add
push
mov
loopne
fucomi
sub
adc
nop
jnp
dec
cmpsb
sub
xchg
out
sbb
pop
cli
rcrb
insb
mov
xchg
and
add
mov
fs
in
out
jnp
aaa
idivb
ss
mov
std
push
popf
int
insb
sbb
test
movsl
das
add
or
xor
in
cmp
mov
push
jo
mov
pushf
ret
fs
test
int3
sbb
xor
mov
adc
data16
push
pop
loop
cmp
arpl
cmp
mov
test
leave
iret
cmp
out
sahf
dec
xchg
std
pop
movd
xchg
nop
xor
rorl
pop
push
xlat
in
and
mov
divl
mov
aaa
mov
rol
arpl
lods
pop
shll
pushf
clc
xor
push
add
js
iret
std
pop
pop
mov
jnp
arpl
sbb
aas
or
dec
stos
jmp
jmp
sbb
lahf
lods
mov
adc
sysexit
push
pop
stos
xchg
add
mov
rol
out
int3
pop
int3
je
nopl
mov
cwtl
jge
cmp
test
aad
push
outsl
or
ss
jmp
lahf
or
lret
jmp
gs
adc
dec
pop
mov
pop
loope
xor
push
test
and
cs
es
lret
pop
push
mov
push
sbb
dec
adc
and
and
pop
or
pushf
cmp
lahf
mov
sbb
lds
add
mov
outsl
popf
leave
mov
insb
fstl
dec
nop
test
add
int3
sub
cwtl
and
push
xchg
movsb
adc
mov
inc
cli
jbe
outsl
push
clc
jecxz
dec
jmp
into
test
insb
sahf
ret
imul
dec
arpl
sub
jg
mov
adc
inc
jl
pop
lock
xchg
fldenv
stos
mov
push
jbe
loope
jo
test
cmp
fidivs
mov
sbb
mov
shll
pusha
rorb
ds
xchg
sub
mov
or
imul
js
dec
insb
inc
int3
insl
fsubr
mov
xchg
fs
cmp
xchg
push
mov
sbb
pop
pop
dec
addl
jnp
or
inc
fiadds
cmpsb
mov
and
dec
xor
daa
adc
jp
imul
in
and
testl
lds
dec
mov
bound
xor
scas
repnz
jno
mov
fisubrl
pop
das
xchg
mov
and
xchg
mov
pop
push
lahf
fsubl
aaa
aam
scas
mov
rclb
xor
daa
sub
mov
clc
out
cs
dec
rolb
xchg
aas
adc
lahf
es
pushf
push
out
push
lods
adc
faddp
bound
std
push
lds
xchg
push
fs
cmp
nop
mov
mov
xchg
inc
add
mov
and
mov
pop
push
ja
mov
jecxz
and
lcall
cmpb
push
js
mov
mov
pop
lret
and
xchg
das
mov
adc
clc
mov
xchg
and
mov
add
shrb
mov
mov
rsm
loopne
jl
test
pushf
int
ror
cmp
add
test
inc
cmp
outsb
add
stos
arpl
loop
imul
ja
mov
inc
mov
test
push
xchg
mov
pop
loopne
sbb
sub
push
inc
fmulp
arpl
popf
cs
repz
rolb
ret
les
adc
fildll
int3
sub
sub
add
xlat
sbb
mov
movsb
pushf
jl
pop
xchg
pop
sti
push
cmp
fcoms
jae
sbb
jo
in
aam
or
add
ret
xor
pop
rcr
int3
daa
mov
jge
lods
aam
and
scas
add
adc
icebp
fs
push
xorl
imul
lock
pop
push
ret
sahf
movsl
sub
push
pop
gs
test
mov
add
aas
aad
push
sub
jge
filds
pop
mov
sbbl
popf
jno
and
addr16
or
cld
stos
pop
sub
call
mov
pop
test
in
js
xchg
scas
push
mov
std
testb
pop
fmull
adc
bswap
jns
add
pop
test
fstpt
insb
leave
mov
fdivrl
mov
aaa
test
push
fisubs
sub
pusha
xchg
loope
in
repz
subb
push
les
and
orb
ret
inc
cmp
int3
sub
sbb
inc
shrb
push
and
call
repz
imul
leave
xor
mov
mov
mov
jno
cmc
ds
pop
jbe
insb
pop
and
arpl
pushf
mov
xchg
jnp
jae
dec
clc
fnstcw
push
fstl
ds
sbb
lock
cld
popf
test
or
xor
jb
idivb
hlt
xchg
jne
add
or
pop
dec
jmp
out
xlat
loopne
and
push
mov
mov
pop
cwtl
test
sub
cmp
lret
sti
loop
mov
sub
ljmp
dec
or
sub
sahf
fwait
test
int
cmp
lahf
jmp
insl
inc
mov
pushf
loop
push
inc
test
jae
adc
sbb
mov
imul
sub
nop
sbb
pop
pop
iret
xchg
cmp
mov
cmp
jbe
mov
sub
and
add
divb
dec
mov
sbb
cli
dec
addb
xor
movsb
push
xchg
std
inc
sarl
ljmp
sub
ds
hlt
insl
add
sub
cltd
clc
sub
je
lahf
loope
lock
stos
sarl
jb
mov
push
call
inc
add
hlt
push
or
fwait
ret
mov
clc
cmp
xor
pop
mov
dec
mov
sbb
mov
pop
push
dec
adc
inc
cmp
andb
andb
jb
or
mov
jne
pop
stc
pop
enter
in
dec
jl
aam
dec
stc
je
dec
mov
sbb
push
cmp
add
out
fcmovb
mov
add
mov
leave
hlt
lret
jle
xchg
mov
call
lcall
cli
cmp
lods
inc
in
mov
imul
movsb
sub
pop
lahf
in
pushf
fucomp
jae
test
xchg
dec
mov
enter
add
out
cmpl
lret
fcmovne
and
data16
xchg
fs
cmp
aam
mov
nop
das
pop
push
pop
test
jns
inc
movsb
xchg
adc
in
int
hlt
les
daa
loope
pop
dec
mov
inc
xchg
push
mov
sub
movsl
xchg
or
sub
mov
aas
xor
sub
mov
hlt
mov
movsb
push
jle
jmp
mov
inc
mov
dec
jo
push
xchg
jle
leave
sub
inc
mov
int
push
decb
mov
xchg
je
das
js
in
movsb
cmpsb
jbe
in
mov
in
mov
mull
adc
dec
cld
push
mov
cli
nop
lods
icebp
push
sub
mov
inc
jl
mov
out
sbb
lea
mov
dec
xor
out
adc
cmpsb
loop
stos
add
add
mov
or
test
repnz
mov
xor
push
xor
in
jns
ja
push
leave
sbb
pop
sbb
insb
out
and
es
rclb
pushl
ja
and
fisubl
lcall
leave
movsl
call
or
repz
mov
out
pop
mov
ret
fdivr
or
mov
xor
loopne
pop
mov
jno
adc
or
outsl
jae
mov
adc
adc
repz
add
or
test
sbb
push
mov
hlt
and
sub
adc
scas
fdiv
es
xchg
loope
xor
shl
mov
pop
mov
push
inc
add
pop
int
fisubs
pop
add
jmp
addr16
lods
jbe
mov
cmpsb
sbb
inc
xchg
out
or
pop
jne
das
dec
imul
in
push
iret
sbb
inc
les
dec
mov
fldt
ja
ucomiss
sbbb
pop
sbb
shlb
rclb
clc
dec
fwait
mov
cmp
and
mov
fstp
mov
cmp
pop
push
inc
mov
inc
data16
jg
nop
adc
dec
sbb
enter
push
int
mov
dec
data16
testl
inc
aad
jmp
ss
movl
xor
add
int
mov
push
lret
call
push
pop
add
mov
popf
insb
aam
inc
cs
push
ret
imul
jl
jbe
jecxz
sub
inc
das
cmp
adc
test
int
cmp
andl
insl
mov
nop
popa
inc
lods
jno
mov
push
insb
test
mov
pop
and
adc
repnz
loopne
mov
xor
out
jno
lods
mov
pop
mov
sub
stos
pop
jbe
sbb
ficompl
or
cmc
add
or
repnz
cmp
or
push
mov
fnsave
popf
inc
stc
in
stos
jp
shl
jmp
fmull
in
pop
ficoms
cmpsl
enter
in
in
xchg
add
ss
mov
xor
test
stos
rol
add
inc
xchg
pop
int
push
ret
mov
lock
inc
cmc
and
xlat
imul
in
ss
mov
xor
adc
insl
pushf
int
pusha
aas
int3
cmp
jno
lock
mov
sbb
ret
mov
cs
dec
insl
jmp
jge
xlat
cmp
adc
and
aad
mov
push
push
leave
jae
jbe
jno
inc
sbb
ljmp
xor
mov
cs
push
cmp
mov
dec
bound
aas
cs
pusha
faddp
inc
or
dec
mull
cwtl
fistpl
inc
sbb
mov
push
mov
scas
mov
inc
jge
xor
imul
icebp
xchg
mov
insb
adc
cli
int3
and
lahf
xor
stos
adc
pushf
xchg
mov
dec
or
arpl
shll
mov
clc
inc
jmp
sub
js
lock
stos
sti
outsl
and
sub
out
icebp
jo
sti
sub
js
sub
aam
popa
pusha
cwtl
mov
push
and
lret
mov
testb
int3
movsl
jmp
scas
sub
inc
outsb
mov
adc
mov
cmpsl
clc
fcomps
in
pop
add
ljmp
stos
jge
fnstcw
cmp
jo
jns
pop
mov
adc
mov
mov
pop
or
mov
js
jns
xlat
push
inc
test
add
insl
add
mov
sbb
mov
sub
aad
mov
movsl
dec
gs
dec
add
jle
hlt
in
pop
cli
std
pop
sbb
fistpll
cs
xorb
jns
iret
push
fs
mov
nop
mov
dec
lea
ljmp
stc
out
push
sub
adc
adc
jg
cld
int
hlt
dec
jl
popf
xchg
push
sbb
mov
fs
pop
in
sbb
mov
scas
ljmp
fisttps
push
lea
inc
outsb
add
add
lret
push
mull
repnz
pop
dec
jo
jp
pusha
orb
sti
jle
push
ljmp
sbb
movsb
shrl
and
mov
push
mov
push
cmc
mov
adc
cmp
jae
mov
lds
flds
mov
arpl
insb
or
sbb
dec
jae
out
outsl
aaa
popf
dec
or
add
js
or
push
fwait
rorb
pop
mov
jmp
xor
mov
repnz
mov
insb
pop
cwtl
sub
sbb
ds
out
xchg
aad
pop
and
xor
popaw
mov
add
jb
mov
call
cmpsl
lds
loop
dec
les
imul
shl
push
push
rcrb
push
jb
lock
jmp
and
leave
mov
mov
int
addr16
pop
adc
insb
push
addr16
mov
rdmsr
xor
ss
repnz
out
scas
pop
ss
nop
rolb
into
inc
cmpsb
jns
shlb
xor
pop
cwtl
jnp
loope
subl
shll
jmp
mov
in
dec
mov
push
lds
pusha
cmp
jbe
dec
xchg
popf
push
ffreep
lret
mov
pushl
jp
xor
mov
or
mov
sbb
ljmp
insl
jne
clc
push
cmp
jmp
sub
cmp
lds
clc
xchg
rcll
jl
fsubrs
jg
lcall
mov
xchg
dec
inc
fwait
mov
sbb
notb
mov
out
or
jmp
cwtl
test
mov
dec
pop
in
push
pop
adc
aas
inc
push
xchg
add
fistps
aam
loope
pop
gs
shlb
mov
xor
sub
push
pop
es
lret
stos
mov
mov
imul
cmpsl
ds
ret
mov
fwait
in
aaa
push
mov
inc
xchg
adc
lods
xor
jg
enter
mov
jno
sbb
cmp
fdivs
push
cmp
xchg
jle
and
add
inc
and
jle
xor
loop
pop
xor
imul
test
ss
fbld
pusha
fisubl
jne
xchg
insl
out
scas
inc
cld
or
into
leave
imul
or
inc
std
loop
dec
mov
jmp
rcr
lds
mov
nop
inc
call
and
or
movb
shlb
jae
sub
xor
movsl
mov
ret
xor
popf
aad
rcr
pop
ljmp
out
testb
pop
jl
mov
out
addr16
xlat
jnp
inc
adc
dec
jo
add
je
shlb
outsb
jp
jb
add
out
adc
add
ja
push
insb
sarl
imul
call
jecxz
adc
xor
mov
incl
xor
dec
jo
ret
mov
jp
cmc
mov
adc
jecxz
inc
sar
fadd
sbb
repz
loop
inc
pop
clc
pop
add
roll
out
cmp
and
test
shlb
out
rorl
jb
and
out
jbe
mov
sti
sarb
jnp
add
test
pusha
dec
sub
push
ja
push
pop
movsl
aad
leave
mov
jecxz
addl
shlb
lcall
xor
mov
cld
xor
push
in
cs
or
sti
inc
adc
dec
dec
movsb
push
ret
cld
int3
aad
int
pop
fsubrs
rolb
adc
mov
les
push
movsb
adc
sub
mov
dec
int
jmp
pop
dec
lods
frstor
inc
xchg
xor
and
pop
dec
push
push
ja
cld
daa
int3
mov
push
and
int
sbb
xchg
repnz
ror
xabort
dec
outsl
aam
push
mov
xchg
stos
test
gs
popa
cwtl
shll
icebp
insl
stc
pop
cwtl
call
lahf
sub
cwtl
pop
adc
ss
movsl
stos
test
push
js
and
dec
cmp
in
inc
dec
je
add
lds
mov
fstl
ret
mov
inc
mov
ss
add
lcall
scas
ja
xchg
cmpps
aas
adc
ret
ror
dec
sbb
cmp
lret
mov
lahf
nop
and
jecxz
pop
mov
jl
out
pushf
mov
dec
rcl
xchg
mov
lds
push
shrb
inc
lock
fcoms
call
adc
in
sub
cmp
repnz
out
mov
sbb
cmp
inc
mov
xchg
or
dec
mov
dec
in
testl
lret
es
and
int
jns
pushf
pop
jo
fnsave
pop
mov
pop
xor
popf
loopne
divps
xor
call
inc
pop
ss
pop
jecxz
jo
lock
xchg
int
adc
push
inc
movsl
lret
jne
inc
xchg
xor
fdivrl
add
pop
inc
add
insb
out
jnp
movsb
rorb
cmp
movsb
test
push
sub
je
loop
xchg
jnp
sub
and
dec
mov
dec
pop
mov
imul
loop
fdivrs
out
rcrl
inc
ds
mov
rcrl
mov
mov
and
mov
pop
mov
ret
bound
adc
xchg
aaa
and
lea
lods
adc
cli
call
xchg
xchg
sbbb
sub
hlt
leave
jp
test
cmp
xchg
fcomps
jecxz
mov
mov
push
loope
icebp
nop
in
mov
push
cmpsb
orb
adc
fcoms
clc
mov
xor
xchg
gs
fwait
rorb
cld
add
das
faddl
lcall
sub
dec
jmp
ds
sbb
sbb
cmpsl
int3
add
push
jo
das
aam
in
lret
add
jnp
inc
sub
pop
in
push
or
pop
jae
mov
push
decb
inc
repz
cmpsl
dec
xor
fdivr
inc
out
and
xchg
cmpsl
sbb
mov
data16
repnz
cli
xchg
fmull
pop
call
inc
in
adc
imul
out
lahf
and
and
mov
scas
jb
mov
repz
out
xchg
aad
jnp
xor
sub
fld
dec
xlat
push
inc
jl
aaa
lahf
dec
sbbl
enter
ja,pt
mov
pop
aaa
adc
cmp
adc
addb
addb
fidivrs
push
lret
ret
inc
mov
out
iret
and
sahf
and
cs
jns
cmpsl
jmp
ja
and
mov
cmp
cmpsl
cmc
push
jle
pop
mov
cmp
not
mov
cld
adc
sub
ret
mov
cmc
scas
pop
sbb
mov
inc
push
cmp
jmp
or
cmpsl
jmp
xchg
cli
mov
pop
in
test
js
cltd
cltd
imul
rol
jl
or
imul
lea
push
jb
test
xor
aad
out
or
jmp
out
cmp
das
aas
push
push
clc
into
decb
dec
xor
les
and
imul
dec
add
ficomps
xor
aas
sahf
iret
adc
jl
sub
aaa
cmp
mov
and
dec
bound
inc
cmp
sbb
mov
mov
sbb
test
shlb
pop
mov
sub
push
push
mov
mov
push
leave
xchg
in
in
adc
jb
lea
jns
or
and
sbb
in
icebp
jle
sbb
xor
loop
cltd
mov
lret
mov
pop
xlat
lea
sub
fistl
data16
mov
test
stc
pop
push
inc
fisttpll
outsl
inc
out
sbb
xor
inc
adc
frstors
mov
imul
sbb
loop
icebp
in
leave
push
xchg
push
in
cmp
add
cs
repz
shrb
in
insl
add
mov
cmpsl
push
cmp
fcoml
rclb
movsb
and
out
ret
loopne
and
inc
push
mov
pop
xchg
xchg
inc
imul
xor
jl
add
and
out
cwtl
pop
aad
dec
inc
sub
imulb
add
push
xor
icebp
jnp
dec
cmp
lock
pop
lods
mov
mov
mov
inc
mov
push
or
imul
or
push
out
cli
pop
rcl
fcomip
fiaddl
or
and
aam
into
jge
out
outsb
les
add
jp
jns
rorl
sub
adc
xor
int
xchg
add
pushl
mov
cmpsb
fadd
out
mov
popa
out
pop
clc
cwtl
add
lds
jbe
mov
cmp
imul
add
daa
movsb
add
mov
xchg
jl
sbb
jecxz
pop
add
std
repnz
sub
sbb
sbb
jnp
in
out
fcoms
loopne
cmpsb
mov
ror
xchg
jae
std
rcll
stos
xchg
and
test
dec
adc
and
scas
lret
or
mov
and
and
js
sar
mov
pop
aas
sub
stc
fstpl
or
mov
sbb
mov
jbe
xchg
imulb
jle
pop
sub
pushf
loope
or
addb
in
xchg
jmp
cli
mov
arpl
sbb
daa
pop
sbb
sbb
ret
sbb
sbb
loope
cmp
pushf
jle
mov
jae
pop
pop
pop
and
jmp
dec
in
jb
jp
push
add
fidivl
mov
das
mov
andl
movsl
sbbl
pop
and
jno
push
dec
and
push
cli
aam
daa
sub
lahf
cmp
punpckhwd
test
mov
xor
jmp
add
push
mov
add
mov
and
mulb
cmp
cmp
xlat
outsl
loopne
test
popa
xchg
pop
rol
xlat
icebp
dec
mov
nop
pop
jae
js
cs
mov
inc
fcmovnu
and
aad
out
xchg
inc
sub
and
pop
jbe
cmpsl
mov
jg
push
sbb
aam
lahf
cmp
xchg
inc
clc
cld
das
adc
test
mov
dec
pop
jb
jmp
imul
xchg
into
scas
rcl
sar
mov
mov
ljmp
xchg
pop
sar
pop
divb
out
xchg
fstpl
inc
push
inc
sti
and
out
shrb
push
insb
add
mov
mov
outsb
jge
sbb
and
sbb
or
ret
dec
and
or
jns
mov
jmp
xchg
xchg
cmp
add
jb
outsl
jmp
push
sbb
mov
jmp
push
inc
sbb
or
sti
or
pop
xchg
imul
push
out
out
pop
add
xchg
inc
jo
rorb
jo
pop
dec
out
scas
adc
sub
pop
sti
sbbb
icebp
dec
pop
dec
or
dec
mov
out
movsl
dec
xchg
fistl
jnp
add
ss
add
mov
inc
ss
mov
stc
testl
inc
in
cwtl
add
shrl
fwait
stc
pop
add
hlt
rcll
add
insb
and
mov
cwtl
add
out
adc
dec
mov
fwait
in
ljmp
addr16
jp
jae
xor
mov
sbb
and
mov
filds
add
in
arpl
mov
mov
cli
rcr
sahf
loopne
pop
data16
mov
add
dec
add
cs
adc
lds
gs
push
es
popa
scas
mov
stc
jge
xchg
xchg
mov
gs
mov
xchg
cmp
test
jl
bound
std
push
xor
in
mov
sub
fstpt
insb
xor
mov
add
leave
lea
in
mov
bound
jno
push
icebp
mov
cmpsb
xchg
mov
mov
sahf
mov
fistpl
js
mov
adc
mov
cmpsb
pop
push
aas
ljmp
bound
sub
push
pop
fwait
out
cmp
push
jmp
inc
mov
dec
insb
clc
xlat
fcompl
mov
nop
mov
adcl
insb
scas
pop
call
add
adc
lea
inc
push
dec
mov
add
stc
cs
jb
nop
pop
dec
xor
jae
jbe
push
add
mov
aaa
pop
pop
sub
in
pop
rorb
jnp
mov
sbb
call
add
jl
hlt
add
rcr
gs
and
mov
je
jne
rol
sub
movsl
jnp
or
mov
jle
loop
lods
sbb
ficoml
cltd
shlb
inc
jbe
jne
sbb
fidivs
mov
push
repz
jns
jge
adc
xor
dec
negl
inc
bound
jo
sub
movl
adc
aaa
repnz
lcall
js
dec
cmc
das
stc
inc
xchg
loope
mov
inc
lcall
out
frstor
cmp
push
dec
add
leave
outsb
lret
cmc
and
repz
jmp
pushf
mov
xor
in
in
jg
mov
out
iret
mov
add
nop
rcll
xor
pop
cmpb
fs
cmp
scas
enter
mov
mov
fimull
fs
cltd
push
hlt
jb
loop
cmp
cmp
cmp
imul
arpl
push
mov
daa
sub
dec
int
ficoml
fists
nop
dec
jle
mov
jbe
cmp
cs
test
mov
dec
aas
das
negb
sahf
loopne
rcrl
inc
add
jmpw
addr16
jo
mov
das
mov
jbe
jecxz
push
mov
mov
mov
add
andl
mov
sub
loop
cmp
idiv
in
scas
ja
fstpl
xchg
jecxz
test
lock
push
shll
mov
mov
loopne
mov
jecxz
xchg
dec
xchg
popf
xchg
cld
jle
inc
repnz
jg
mov
lds
div
mov
add
push
in
jae
jnp
lods
dec
clc
negl
xchg
xchg
adc
orb
fsubs
mov
test
push
jne
in
insb
scas
pop
gs
cmp
test
sarl
push
jp
daa
mov
jecxz
popf
mov
sub
loop
xlat
rolb
push
xchg
or
aas
jnp
mov
jg
mov
insb
jbe
xor
aad
es
push
cmp
rep
cmp
xchg
dec
adc
sti
add
xchg
rorb
add
sahf
jae
das
jg
xor
xchg
into
popf
push
xor
xchg
mov
mov
mov
or
jl
dec
jae
fnstenv
ljmp
sbb
sbb
lahf
and
dec
fbstp
fstps
adc
mov
inc
pop
mov
dec
in
ud0
xor
lcall
xchg
adc
mov
shlb
lds
test
cmp
fwait
sbb
dec
sub
lea
adc
pop
ja
xchg
pop
push
shrb
cmp
cld
fidivs
imul
inc
push
push
test
cli
xor
ljmp
xor
pop
adc
add
xchg
add
jnp
cwtl
dec
ja
jle
and
nop
mov
push
inc
imul
fldt
or
lret
adc
js
mov
aad
mov
fistps
cmp
sbb
cmp
and
lea
and
fisubs
adcb
pop
dec
bound
inc
dec
xchg
jae
mov
mov
mov
mov
fnsave
add
shr
fildll
cmpsb
lret
or
mov
and
pop
ret
mov
pop
sahf
mov
push
and
ret
push
ljmp
test
or
leave
mov
aas
pop
xchg
test
mov
add
push
xor
push
in
cmp
mov
inc
mov
jge
lods
sbb
inc
xchg
aas
and
test
mov
lret
mov
mov
pop
sbb
mov
in
int3
arpl
or
in
push
xor
stos
rcll
aam
mov
lods
sub
xchg
sub
insl
push
mov
cs
jmp
mov
xor
data16
adc
push
cli
mov
pop
jp
mov
xor
xchg
sbb
cmpl
stc
or
stos
push
pop
pushf
iret
int3
xor
push
pusha
fs
mov
fisttpll
repnz
fcoms
faddl
pop
insl
int
mov
push
ret
into
loope
push
push
jl
pop
adc
sahf
repnz
add
jne
add
sbb
pushl
outsb
jnp
int
lea
test
mov
lret
sarl
sahf
push
jno
gs
cmp
jge
das
int3
mov
mov
cmp
test
and
add
xlat
gs
pushf
fimull
cmpsl
cmp
dec
jb
mov
ja
insl
scas
pop
cwtl
dec
aam
jbe
mov
push
nop
orl
or
stos
pushf
inc
mov
outsb
scas
sbb
or
xor
dec
je
out
inc
outsl
jp
pop
mov
inc
dec
mov
mov
cmpsb
inc
xchg
pop
or
sbb
sub
icebp
mov
sbb
mov
loopne
imul
xchg
ret
jl
in
jae
std
pop
mov
jbe
imulb
pop
mov
mov
lods
xchg
and
inc
sub
in
xchg
inc
sub
pop
sub
sub
mov
sub
aaa
inc
xchg
xchg
xor
push
stos
or
cmp
and
fdivrs
aam
dec
mov
jle
add
or
mov
add
add
adc
scas
add
pusha
jae
clc
repnz
xchg
lods
xchg
nop
or
fnstenv
repz
and
icebp
in
out
cli
mov
add
mov
inc
add
mov
mov
dec
push
jbe
pop
push
inc
rcr
push
jne
loop
sbb
adc
mov
push
hlt
lahf
iret
jns
out
sub
int3
std
and
mov
scas
jb
dec
pop
push
sbb
jp
xchg
or
ljmp
rolb
adc
mov
lret
in
sbb
cmp
jbe
pop
fistpl
insb
cmpsb
lret
jae
xchg
scas
push
jo
aam
xor
or
jbe
xchg
hlt
movsl
cmp
int3
mov
mov
bound
sub
mov
repnz
inc
subb
add
pop
out
and
mov
cmp
call
outsl
loope
xchg
cli
cmp
sarb
dec
pop
out
mov
sbb
movsl
std
inc
jno
in
enter
aaa
cmpsl
ljmp
jmp
out
xor
push
push
push
fmuls
in
push
enter
inc
push
lock
xchg
sub
xchg
pop
xchg
repz
xor
scas
jmp
mov
pop
fwait
clc
mov
mov
or
jmp
test
sub
jge
xchg
lret
loop
ds
sarb
push
cmp
pop
jns
mov
rcll
sbbb
addr16
ret
stos
lahf
xchg
dec
lds
ds
mov
ficoms
fcmovnb
mov
addr16
fstps
push
ljmp
inc
or
mov
or
mov
dec
cmp
loope
sbb
lcall
scas
fnstenv
popf
scas
rcrb
adc
or
adc
inc
fsts
sub
std
sahf
sbb
xchg
test
jg
mov
jbe
loop
jmp
call
xchg
ljmp
subb
out
shlb
add
loop
aaa
loope
jnp
test
rolb
sub
das
xor
lahf
jl
mov
ss
jecxz
lock
lods
cmc
sub
pop
lock
clc
push
mov
jne
dec
and
stc
sub
or
ffree
lds
adc
test
push
popf
enter
pop
mov
scas
xchg
sub
fwait
repnz
xor
mov
jo
std
mov
mov
mov
or
sub
and
imul
xor
dec
jne
push
ret
mov
push
jno
popa
int3
fistpl
fisubl
xchg
mov
cli
repz
mov
dec
mov
mov
adc
xchg
aad
sbb
adc
stos
imul
push
ror
frstor
lret
enter
es
fstps
pop
mov
adc
add
pop
pop
add
jg
push
aad
rolb
mov
push
mov
clc
push
cmpsl
adc
and
xchg
data16
adc
into
jns
jle
add
push
xchg
mov
sub
jge
cli
fstl
jmp
cmp
pop
jno
cmpsb
pop
jb
adc
leave
push
shrl
cmc
mov
cmc
daa
fisttpll
ljmp
cmp
pop
call
pushf
and
lahf
adc
outsb
push
nop
jl
inc
sub
arpl
sub
jg
jle
xchg
fmuls
pop
adc
inc
push
fiadds
ss
mull
mov
das
bound
and
jns
in
repz
mov
inc
lock
sbb
cmp
out
jg
adc
das
in
inc
mov
pop
mov
es
and
xor
adc
dec
fnstcw
pop
mov
rolb
pop
add
or
lret
imull
sbb
sbb
cmp
je
cmp
adc
addr16
inc
lea
lahf
and
mov
ret
out
jnp
jge
jl
cmp
or
scas
sbb
mov
sbbb
lds
sbb
pop
pop
xor
imul
pop
and
stos
push
jg
inc
pop
cli
int
pop
cmp
mov
mov
sub
jns
aaa
cmc
icebp
std
jbe
lret
test
in
jmp
jns
jo
adc
in
push
dec
cmc
int
mov
shlb
es
out
into
inc
mov
icebp
push
jl
into
ja
js
je
xchg
mov
fisttpl
mov
ds
xchg
xor
gs
mov
xchg
out
mov
dec
add
andl
xchg
or
or
aam
js
pop
sub
lret
dec
fcomip
lcall
pop
je
dec
jg
pop
jbe
roll
or
dec
or
adc
inc
mov
sub
push
add
adc
sbb
cmc
ds
push
push
or
out
andl
jnp
dec
pop
push
jge
inc
sbb
movsl
hlt
or
rcrb
lea
inc
shr
jmp
mov
cli
scas
scas
outsl
inc
loope
fisubl
sbb
sarb
roll
lret
xor
lcall
sarb
jmp
pop
pop
scas
jp
sub
popf
fistpll
adc
std
mov
mov
mov
add
jbe
adc
or
lret
jno
pop
pop
ss
xchg
movsb
sti
lods
mov
jno
ljmp
popa
rorl
push
out
scas
es
push
cli
inc
push
mull
dec
popa
insl
xchg
idivb
pop
test
xchg
es
xchg
sub
int3
sti
sub
xchg
leave
pop
scas
pop
jb
mov
adc
or
and
aad
das
push
pop
push
test
and
lock
xchg
ret
xor
enter
scas
out
popf
xchg
clc
imul
sbb
push
aas
add
fisubrl
jecxz
cmc
or
dec
loopne
fimull
loope
cs
insb
inc
jl
lods
mov
dec
xor
sub
xchg
lds
sbb
push
cmp
fucomip
hlt
das
sti
insb
popa
les
fdiv
xchg
test
loopne
hlt
sbb
aas
fsubp
sbb
mov
movsl
add
ljmp
inc
jb
push
loop
sub
divl
jae
inc
int3
iret
sub
mov
add
ror
jg
in
pop
mov
mov
adc
stos
xor
movsb
inc
int
mov
jae
stos
sub
out
or
shr
out
ror
sub
push
fistpll
aam
or
adc
out
mov
sbb
movsb
mov
outsb
arpl
sub
mov
cwtl
lret
mov
clc
adc
push
push
jbe
xor
push
mov
jae
sbb
pushf
add
rcll
xor
je
mov
rcpps
sarl
test
int3
push
mov
and
sarl
sbb
inc
out
mov
xlat
ss
hlt
pop
inc
test
sbb
aam
inc
pmulhuw
in
mov
jno
nop
stos
jle
xlat
into
fidivrl
jns
dec
mov
xchg
push
ss
pop
loop
dec
int3
push
rcrl
ss
push
add
xor
data16
mov
adc
lret
sub
out
rorb
lea
inc
or
adc
or
add
cmp
invd
in
mov
sahf
add
xor
lock
insb
sub
out
or
mov
ljmp
bound
cmp
dec
lds
shr
mov
dec
aas
jp
cmpsb
inc
mov
push
mov
push
loop
idivb
dec
gs
cmp
into
jmp
loopne
inc
test
imul
jl
out
or
stos
loop
lcall
out
jecxz
or
out
mov
pop
add
lret
loop
jae
repz
stos
and
std
jl
in
insb
fidivs
cli
jmp
aas
and
test
test
sub
xor
inc
mov
loop
push
les
cmp
inc
insb
jl
clc
sbb
pop
js
ljmp
dec
fcoms
push
inc
pop
arpl
pushf
les
movsb
int3
enter
or
adc
and
lret
xor
aas
or
adc
push
push
sbb
cmp
push
jge
ss
loopne
cwtl
or
and
or
cs
mov
mov
jae
cmp
adc
popf
les
jecxz
mov
outsb
jg
pop
shll
and
ja
dec
jae
mov
dec
add
imul
cli
cmp
cs
pop
je
das
fsubl
lahf
push
add
stc
and
inc
outsb
ret
and
and
and
add
and
aad
xchg
gs
lods
adc
int3
xchg
dec
mov
popf
mov
sub
arpl
mov
cmp
dec
mov
xor
xor
rorl
push
pop
int3
mov
ret
jbe
sets
lods
shrb
clc
jo
fmuls
aad
mov
adc
int
push
in
sbb
mov
mov
xor
mov
xor
jns
jae
push
scas
sub
mov
dec
and
out
in
dec
adc
inc
mov
mov
pop
xor
mov
xchg
fwait
pop
dec
adc
mov
or
cmpsl
dec
sti
mov
inc
push
divl
mov
add
cmp
sub
sub
jp
std
in
shll
mov
xor
ret
xor
and
xchg
mov
mov
mov
mov
sbb
adc
orb
fstp
xor
roll
mov
xor
mov
inc
aam
dec
xor
cmp
ljmp
loope
out
pop
repz
lods
push
push
or
add
pop
add
lock
fiadds
inc
ds
in
bound
push
test
push
mov
cmp
xor
icebp
mov
push
add
add
jmp
pop
stos
sbb
cmpsb
or
xlat
mov
gs
clc
fdivs
fdivs
adc
mov
adc
or
mov
mov
data16
call
cs
mov
mov
and
fstl
pop
int3
out
sbb
add
aad
dec
jmp
dec
pop
dec
dec
fbld
test
mov
test
xor
inc
mov
inc
icebp
lds
mov
das
shll
rcl
shll
int3
xor
mov
inc
jno
xor
or
cmpsb
ret
mov
mov
adc
sub
jb
negb
mov
out
sub
or
dec
adc
ja
rcl
jg
inc
rorl
xor
xor
fwait
int
or
xchg
sbb
mov
add
cltd
leave
xchg
mov
xor
sbb
mov
pop
or
movsb
insl
in
jb
lret
xchg
aaa
mov
mov
inc
movsb
jmp
imul
sti
movsb
dec
js
mov
mov
mov
sarb
xor
jbe
xor
fistpl
andl
testb
xor
sbb
adc
cmp
ret
stos
faddp
jle
dec
dec
mov
sub
xchg
aas
sbb
add
popa
idivb
fnstenv
nop
popa
aam
push
imul
stos
adc
inc
inc
cs
fdivrl
std
and
mov
sbb
rorl
scas
aad
jmp
incb
dec
insb
pop
jns
cmp
mov
movsb
daa
mov
shrb
test
outsl
mov
dec
pop
jecxz
sti
fadds
inc
ficomps
push
add
pop
mov
int3
bound
xchg
mov
and
jb
testl
sbb
std
mov
cmpsl
clc
fcomp
aam
mov
xchg
cmpsb
inc
call
mov
aas
push
and
dec
push
orw
xchg
mov
cltd
scas
sbb
inc
ficoms
mov
add
mov
push
ja
ret
xchg
cmp
cli
insb
repz
rclb
pop
push
sarb
sbb
adc
test
lret
imul
cwtl
mov
je
lret
sbb
rcrb
mov
sub
sbb
dec
xor
cmp
push
mov
in
call
jmp
fsts
aas
call
inc
jmp
stos
cmp
hlt
add
pop
xchg
push
icebp
dec
movsl
in
cmp
lods
pop
lods
mov
adc
dec
mov
rcl
sub
aam
loope
pop
in
xchg
lds
inc
push
andb
fisttpl
test
adc
lods
cmp
lcall
popa
jg
loop
mov
or
mov
icebp
dec
stc
or
dec
cmp
inc
out
or
cmp
or
sbb
movsb
in
scas
in
std
inc
push
popf
imull
mov
pop
dec
aam
fimull
fildll
dec
sahf
js
jg,pt
cmp
cmpsl
pop
ret
leave
xchg
int
or
push
cmp
fistpll
and
hlt
mov
popl
xchg
shl
pop
daa
stos
cli
imul
shlb
lds
sub
pop
outsb
movsb
lahf
aam
call
shrb
inc
inc
or
and
fdivrs
mov
jle
iret
mov
add
sbb
mov
jnp
loopne
xchg
aam
bound
loop
nop
ret
aam
subl
dec
sub
jne
lcall
xchg
lods
jae
dec
xor
clc
ljmp
mov
int3
xor
sbb
and
fiaddl
packssdw
pop
faddl
repnz
xor
dec
push
ficompl
or
les
jl
or
icebp
aad
rorl
cmp
and
out
sbbb
dec
mov
lcall
cmpl
outsl
scas
cld
sbb
jle
rcrb
in
es
cltd
js
out
add
out
arpl
test
outsl
shl
xchg
popa
out
mull
cmpb
call
mov
fwait
mov
outsb
jb
imul
xor
jb
shlb
inc
mov
dec
sbb
sar
sahf
push
pop
adc
and
outsb
xor
js
test
arpl
add
xor
xchg
push
dec
fisubrs
out
push
mov
and
add
std
dec
leave
out
movsl
add
insb
sub
addl
sbb
and
int3
mov
add
and
push
sbb
insb
fyl2xp1
adc
bound
mov
inc
test
jne
repz
lret
les
sbb
dec
leave
fcomps
pushl
lds
daa
add
int3
lds
ret
aam
popf
push
lds
sbb
sub
shrb
xor
leave
enter
and
push
or
std
aas
mov
into
xchg
jl
ret
dec
dec
inc
push
mov
out
jne
lods
sbb
mov
pop
push
pusha
xor
jle
daa
pop
xlat
adc
mov
notb
sub
pop
into
ja
cmc
cmp
sub
sbb
lds
mov
andb
xchg
clc
test
outsb
inc
lret
jmp
cmpsl
int
roll
or
sbb
xchg
add
sahf
or
lods
sbb
outsb
arpl
lock
fdivl
sbb
pusha
loop
hlt
cwtl
insb
cmp
leave
test
inc
or
push
cltd
into
xor
inc
faddl
pop
sti
mov
es
neg
cltd
and
fstps
mov
mov
or
sub
jne
mulb
fptan
xchg
setbe
idiv
das
jns
bswap
mov
and
push
addb
aad
sub
dec
mov
das
pop
sbb
jo
sbb
cld
dec
shll
lahf
lods
addr16
dec
test
jb
popa
xchg
inc
mov
sub
les
out
or
aad
aad
outsl
mov
pop
jg
or
lods
cmpsb
mov
int
mov
rorb
sub
leave
mov
sahf
ret
xchg
mov
mov
sbb
mov
shlb
js
aaa
int3
jle
push
sarb
add
ss
repz
imul
jg
test
imul
push
mov
addr16
dec
fdivl
icebp
insb
iret
js
pop
cwtl
andb
es
xlat
arpl
pop
bound
xchg
into
push
std
mov
ficomps
clc
addl
lods
fwait
push
inc
loopne
sbb
lret
ret
es
and
lods
cmp
shr
or
jecxz
sbb
shlb
loope
cmc
jl
mov
negl
ljmp
xchg
mulps
test
xor
push
sub
mov
movsl
mov
mov
outsb
imul
add
and
fmull
in
pop
sahf
cmp
out
mov
adc
daa
pop
and
mov
aas
in
mov
int3
lock
sbb
arpl
and
dec
jno
xchg
cmpsl
rcll
or
in
cmp
push
movsb
xchg
sub
in
out
push
push
cltd
xor
enter
daa
ret
pop
and
mov
mov
fwait
mov
xor
aad
or
js
in
adc
daa
mov
push
ja
push
cmp
pop
jp
aas
and
cmp
mov
jge
mov
xchg
inc
lods
push
jecxz
xor
cs
dec
imul
dec
cmp
push
popf
scas
incl
mov
fcompl
sub
pusha
packuswb
mov
xchg
insb
mov
icebp
sbb
mov
add
scas
jno
jmp
je
sub
sub
xor
shl
outsb
sub
cmp
scas
mov
sbb
pop
push
out
xchg
xchg
ret
je
xchg
add
mov
pop
call
testb
pop
mov
leave
mov
mov
xlat
jns
rorb
mov
mov
hlt
das
xor
mov
fisubrs
fidivrs
adc
cwtl
mov
dec
and
fildl
and
arpl
in
bndldx
pop
mov
sbb
xor
mov
sbb
xor
inc
inc
lcall
scas
cwtl
icebp
cmpsl
mov
and
ret
loop
pop
inc
cwtl
idivb
mull
pop
mov
leave
push
inc
mov
xor
jmp
cmp
cltd
push
scas
or
adc
imul
aaa
cmp
xchg
and
ficoml
in
popf
add
lds
jecxz
ss
sbb
mov
xor
filds
adc
shlb
test
dec
push
insb
adc
test
out
sbb
or
mov
pop
mov
add
mov
push
mov
mov
adc
ja
and
jge,pn
cmp
enter
lods
mov
ja
je
imul
or
hlt
test
lea
shrb
jmp
cmp
decb
inc
inc
insl
add
xchg
fimuls
rorl
cs
or
add
mov
jmp
mov
push
loopne
ror
js
sbb
mov
mov
ret
cmp
lahf
add
cmc
imul
aam
push
jl
ja
pop
shl
or
js
sbb
adc
cmp
sbb
adc
mov
inc
push
gs
and
or
popf
ds
lret
sub
les
mov
icebp
in
insb
cmpsl
push
xor
add
lds
or
lock
notb
sub
movsl
popa
jmp
inc
xchg
pop
loopne
push
rolb
dec
lods
outsl
cld
pop
out
popfw
adc
aad
inc
pop
in
pushf
inc
xchg
enter
mov
mov
sub
or
sub
pop
ja
adcb
xor
mov
loop
es
mov
hlt
xchg
enter
andb
es
aaa
lcall
imul
cmpsl
aam
jo
in
xor
sbb
or
push
lock
rorl
cmp
sarl
jmp
inc
sbb
and
sub
xchg
leave
arpl
add
or
das
je
test
iret
pop
sub
mov
push
push
cmp
movsb
jg
out
or
jecxz
lret
mov
aas
sub
cwtl
lock
jbe
je
cmc
movsl
sbb
ret
cmpsb
sub
lods
imul
lods
mov
loope
insl
lcall
inc
cmpb
sbb
out
pop
or
loopne
mov
and
push
test
and
sbb
les
pop
repz
push
int
sbb
bound
aam
mov
insb
cmp
mov
cmp
shrl
daa
cmp
fsubl
mov
pushf
pop
sar
imul
out
lret
mov
stc
mov
push
sub
loopne
es
xor
pop
sarl
icebp
inc
xor
add
rcl
jb
add
fstps
and
mov
inc
cmp
inc
aam
in
sub
push
leave
cltd
bound
mov
jge
enter
inc
jb
mov
das
out
andl
inc
or
jecxz
jl
arpl
addb
add
cld
pop
jns
lret
repz
in
jge
insl
mov
lea
sub
je
ret
pop
scas
xchg
xchg
pop
dec
add
or
add
xor
stos
call
repnz
roll
sbb
sti
repz
mov
jno
push
aad
pushf
sub
jnp
in
mov
clc
ret
pop
or
fs
push
in
jnp
xchg
inc
cmp
addr16
cmpsl
es
fcoms
adc
icebp
daa
xor
test
pop
fnstcw
or
or
subl
stc
in
ja
cmp
cmp
subb
ficompl
sbb
sub
jmp
dec
mov
jae
js
out
das
insb
or
scas
stos
push
and
shll
clc
dec
stos
mov
xchg
loopne
gs
ret
mov
sub
jecxz
add
or
ficomps
xor
dec
or
xor
outsl
sub
mov
lds
das
into
mov
push
and
mov
pop
and
int
gs
leave
xchg
cli
subb
cmp
aas
jb
push
xchg
gs
pop
pop
xor
jae
mov
mov
int
cmpsl
fcmove
cmpl
add
inc
sar
test
sbb
sub
bound
jnp
enter
sti
andb
pop
or
xchg
push
fwait
addb
shll
pop
fwait
pop
jge
enter
sub
sub
movsb
lret
aas
fdivrl
jae
stos
adc
push
dec
test
icebp
aas
pop
cltd
bound
in
lock
push
mov
push
push
pop
in
leave
gs
push
out
arpl
pusha
xlat
je
push
sahf
or
out
pop
cwtl
mov
dec
cmpsl
mov
std
mov
mov
cld
pop
aaa
mov
imul
cmp
mov
jle
lea
loop
dec
jae
xor
stos
out
xchg
add
in
clc
dec
xchg
js
iret
add
push
out
fdivp
lahf
push
push
sarb
dec
aam
push
lods
cmp
sub
adc
xchg
sti
or
mov
sbb
xchg
inc
repnz
out
in
inc
add
adc
sarl
in
add
push
xchg
jl
cmpsb
imul
iret
sbb
sub
call
inc
mov
pop
les
cmp
fisubs
out
mov
mov
sbb
test
xchg
pop
dec
dec
jo
pop
adc
and
xchg
cmp
mov
adcl
or
les
cmp
xchg
rclb
repnz
or
data16
arpl
or
in
int3
pop
fmul
and
add
mov
pushf
inc
sub
jne
insb
es
xchg
xchg
in
adc
pop
pop
jle
rcrb
js
lahf
cmp
jnp,pn
ljmp
fldcw
jno
in
test
mov
in
add
aaa
jno
shlb
mov
call
lods
fmull
repz
loopne
xchg
push
jae
jecxz
aad
repnz
fmull
ja
je
xchg
in
pop
das
add
mov
mov
mov
repnz
scas
sti
xchg
enter
ja
push
cltd
ljmp
and
push
mov
cmpsb
test
sbb
xlat
mov
mov
inc
jae
popa
mov
or
xchg
out
mov
icebp
ret
icebp
sub
insl
jl
xchg
xor
mov
inc
lret
pop
in
int
jge
xorb
push
jle
add
roll
adc
inc
sbb
push
xchg
imul
mov
out
rcrb
rcrl
push
loop
mov
mov
dec
adc
in
mov
xlat
scas
mov
push
rorb
daa
out
cli
imul
in
mov
jae
ret
adc
dec
dec
clc
daa
fwait
mov
mov
fwait
push
xchg
push
pop
sub
sub
sub
xor
sbb
incb
jne
fdivrp
fdivs
stos
call
aam
xor
imul
xor
jmp
jo
sbb
ljmp
jb
getsec
subb
add
rorl
sarl
sbb
push
adc
ret
lds
lahf
xchg
jns
cmpsb
shl
push
mov
ss
push
insl
push
jge
gs
xchg
arpl
xchg
shll
adc
push
push
xor
cmpb
add
lock
pop
ds
push
loope
es
cltd
pop
mov
mov
movsb
adc
cmpl
cwtl
addb
nop
sub
repnz
setae
sbb
shl
xor
loope
gs
enter
jmp
jns
repz
in
rolb
pop
stc
cmp
hlt
adc
outsb
jmp
add
aaa
out
testl
mov
mov
sub
adc
mov
iret
cmp
push
movsb
dec
sti
in
cmp
mul
add
mov
add
std
idivb
sub
cmp
mov
cld
aas
push
std
push
leave
xchg
test
addb
mov
xor
sahf
ret
adcl
cmpsb
outsb
hlt
mov
mov
leave
incb
pop
dec
inc
out
sub
adc
dec
aam
into
inc
popf
outsb
adc
jns
nop
mov
cmp
jl
pop
jle
jns
push
cmp
leave
orb
movsb
inc
loope
outsb
mov
test
mov
aaa
cmp
push
jo
mov
test
lahf
outsl
out
mov
pop
std
inc
fcomip
clc
jle
test
shlb
aad
subb
jo
push
jle
addr16
inc
mov
fwait
xchg
std
in
mov
pop
xchg
pusha
sbb
rclb
cmp
call
lea
push
shll
and
pop
sub
sub
rclb
int3
xor
loope
aaa
mov
leave
mov
rcr
and
gs
adc
clc
jle
mov
fwait
mov
cmp
adc
mov
jno
push
add
imul
ficoms
adc
lods
loop
cmc
add
fs
mov
neg
or
mov
dec
pop
data16
xorl
ss
jecxz
and
mov
xor
jo
ljmp
jb
ljmp
dec
ret
cmp
cmc
xchg
jmp
das
insl
and
and
scas
lea
das
xor
jno
dec
dec
add
scas
push
inc
out
adcl
inc
mov
es
dec
mov
pusha
aad
sbb
fadd
xchg
ja
testl
mov
xchg
or
stos
mov
lea
mov
aam
mov
mov
out
push
push
fwait
cmpb
pop
ret
ret
inc
lret
repnz
in
insb
jo
dec
ss
stos
xchg
jmp
add
scas
and
sub
repnz
rorl
subl
stc
and
ja
xchg
fmuls
arpl
fstp
or
xchg
cmp
fwait
ljmp
add
lret
insl
dec
enter
orb
xchg
dec
mov
int3
pop
sbb
pop
arpl
in
fprem
or
sub
pusha
insb
inc
ds
cmp
lret
xor
arpl
mov
lods
cmp
xchg
arpl
mov
out
mov
cmp
outsl
cmc
fmul
jo
int
mov
lods
mov
mov
jnp
push
add
dec
sbb
pop
xchg
pop
aas
push
and
aaa
mov
jae
jp
shlb
pop
in
dec
adc
pushf
test
insl
xor
xchg
arpl
jns
lahf
pop
mov
sub
insl
leave
push
daa
cltd
clc
or
push
push
andl
insb
sub
cltd
sbb
pop
jecxz
adc
setp
push
inc
sbb
std
arpl
out
bound
cltd
jg
pop
or
in
bound
daa
sbb
arpl
xor
push
shl
shrb
or
jl
mov
mov
scas
push
and
test
popa
ljmp
sbb
in
mov
sub
pop
sub
inc
dec
mov
jg
aas
imull
neg
inc
xchg
adc
popa
mov
sbb
push
ror
inc
mov
add
outsl
adc
movsl
fisubs
data16
out
jb
xchg
xchg
arpl
push
stos
xor
jp
add
movsl
fs
xchg
push
mov
jae
mov
aas
cwtl
push
or
xor
jmp
xchg
or
jmp
fimull
xchg
push
std
mov
jge
aam
dec
pusha
sbb
scas
inc
je
into
push
pop
cs
sbbl
loope
mov
scas
xchg
lods
jnp
cmp
aas
xor
jae
shlb
mov
pop
cmpsl
ret
cwtl
xchg
fwait
and
xchg
cmp
in
add
inc
pusha
aaa
hlt
ja
mov
lret
sbb
xorb
adc
inc
das
mov
arpl
mov
xor
and
mov
aam
adc
jo
adc
cmp
out
mov
sub
call
lahf
nop
mov
jnp,pt
ret
lods
lret
fwait
pop
daa
in
faddl
mov
je
cli
sub
sub
fcom
fiadds
aas
enter
mov
roll
into
xchg
inc
push
int3
rorl
sub
stos
xchg
jp
sbb
cmp
push
scas
ficompl
pop
dec
into
mov
mov
iret
std
jne
lahf
stos
pusha
lret
hlt
sbb
mov
jecxz
test
mov
in
mov
fs
out
data16
inc
mov
push
xchg
lds
mov
andl
mov
add
ljmp
fcompl
ja
cmc
xor
aas
je
daa
adc
rol
push
imul
mov
sbb
push
dec
sub
fsubl
xchg
adc
subl
subl
rclb
repnz
mov
sub
mov
jae
cmp
jmp
icebp
jb
adc
sbbb
pop
enter
mov
outsb
shr
xchg
arpl
repnz
in
push
mov
xchg
dec
or
fildll
cmp
pop
jle
push
repz
xor
and
fidivs
fs
leave
loop
inc
mov
dec
mov
xchg
jg
push
pop
push
push
cltd
xchg
subb
pop
shlb
mov
cmpsl
fdivrs
iret
repnz
xchg
and
add
lods
xor
jo
inc
jns
fwait
mov
outsl
bound
and
jne
imulb
or
sbb
sub
add
into
iret
mov
cltd
or
mov
push
jg
xor
xor
xchg
jnp
sub
fisttpl
fucomi
dec
les
pop
push
aam
mov
mov
lock
push
aam
sahf
cltd
cmp
xlat
loopne
imul
and
add
sbb
mov
scas
mov
push
pop
ds
xchg
inc
stc
loop
lods
in
jb
mov
xor
mov
and
dec
mov
adc
pushf
mov
sti
sarb
add
xchg
lret
mov
out
aas
push
repz
ficoml
and
push
mov
in
imul
lret
out
inc
in
dec
rorb
adc
xchg
mov
jp
pop
xchg
or
pushf
pop
push
outsb
dec
ret
and
outsl
ljmp
pop
mov
cmp
outsb
add
aas
mov
iret
inc
loopne
les
mov
adc
add
enter
out
sub
sub
mov
arpl
sbb
std
popa
xorl
mov
out
es
out
cwtl
mov
sub
mov
dec
in
jbe
push
push
mov
test
rcrl
mov
or
aam
pop
pop
cmp
jecxz
mov
and
pop
xchg
imul
cmp
iret
pop
mov
addb
or
mov
lock
lea
ror
int3
sbb
ss
push
loop
out
dec
roll
or
stc
mov
xor
cmp
mov
push
mov
js
int3
enter
push
mov
mov
hlt
add
pop
mov
test
cmpsb
and
mul
or
adc
ret
adc
imul
insl
jge
lcall
ja
sbb
dec
test
push
or
adc
cmp
add
xchg
clc
fdivr
test
inc
xchg
ljmp
testl
jl
mov
movsl
out
outsl
mov
cmc
mov
lahf
test
push
cs
adc
dec
push
mov
and
test
lcall
cmp
dec
mov
iret
popf
cld
xor
movsb
out
pop
inc
push
inc
icebp
neg
lock
std
add
pop
adc
pop
aad
mov
or
adc
jbe
cld
sbb
push
lock
imul
adc
add
mulb
mov
outsl
jne
pop
mov
inc
cmp
and
imul
dec
and
mov
addb
sub
scas
inc
icebp
hlt
xor
push
popf
xchg
aas
les
pop
insb
ja
loopne
and
imul
add
jns
movsb
lcall
shll
adc
pushf
dec
mov
dec
push
scas
jbe
push
shll
pushf
enter
pop
cld
and
lea
adc
cs
out
test
mov
mov
xchg
cmp
cmp
cmpsl
xchg
mov
hlt
into
sarb
push
lahf
cmp
push
mov
ret
pusha
in
lea
out
jp
xor
popa
mov
js
lret
sub
inc
sub
jnp
lds
adc
insb
test
daa
push
jl
inc
or
imul
rorb
clc
stos
xor
adc
insb
xchg
sbb
xchg
cmp
cli
jl
add
fwait
mov
shrl
test
jg
repz
hlt
pop
add
js
pop
mov
dec
in
pop
inc
subb
and
jge
std
loope
xchg
and
ret
and
sbb
mov
in
jb
push
test
dec
mov
sbb
dec
out
xor
mov
enter
push
inc
jmp
aam
scas
ss
imul
jno
mov
negb
mov
adc
inc
adc
sar
xor
cs
jb
stos
push
mov
or
in
push
sbb
xor
or
push
sbb
stos
test
loop
pop
and
iret
lock
loope
cltd
in
cld
sarb
imul
aad
fdecstp
int
ret
or
or
sbb
push
cmpsl
xor
mov
jmp
imul
sarb
mov
sub
lret
shlb
push
jne
push
or
test
xchg
push
pop
push
stos
jbe
push
and
jp
insl
or
cmpsl
add
mov
pop
test
and
push
out
cli
sbb
insl
icebp
std
mov
outsb
jbe
bound
mov
cmpsb
outsl
cld
ficomps
std
push
push
fldl
shll
div
int
test
cmp
push
addl
out
sbb
jmp
add
xchg
cld
jp
pop
shl
inc
gs
es
adc
add
das
jnp
inc
daa
push
leave
cmpsb
sbb
sbb
fcomi
outsl
loop
sub
xchg
pop
xchg
jge
push
dec
scas
pop
add
cmpsb
xchg
icebp
out
jg
inc
jo
cmpsb
sbb
scas
call
sub
mov
dec
sti
in
or
pop
fidivs
mov
jo
fdivl
int3
xchg
stc
sbb
outsb
bnd
sub
js
scas
xchg
jnp
stos
xchg
insl
and
pop
fnstcw
mov
jmp
mov
dec
and
int
dec
xchg
dec
sbb
loope
enter
mov
mov
in
repz
sub
repz
sbb
addr16
lods
lea
lods
inc
mov
les
pop
push
js
cmpsb
lock
push
int
push
stos
in
arpl
inc
mov
adc
mov
imul
jno
aas
aam
lret
jns
inc
in
push
stos
aaa
mulb
mov
mov
outsl
mov
xchg
sahf
scas
pop
sbb
ja
cwtl
jle,pt
seta
jle
xchg
cmpsb
cltd
pop
jle
fisubl
loopne
faddl
cmpb
mov
rcll
mov
mov
and
inc
mov
sahf
push
xchg
mov
cmp
pop
scas
jns
ljmp
loopne
add
ss
or
and
call
push
pop
fwait
popf
leave
stos
pop
add
stos
add
jl
mov
das
add
sbb
dec
jge
add
mov
das
movsb
clc
add
iret
mov
ficoml
sbb
rclb
lahf
out
jbe
xor
jl
out
adcl
mov
jae
into
dec
flds
outsb
inc
fstpl
sbb
cmc
enter
mov
mov
aam
mov
ja
push
mov
dec
add
clc
jge
mov
xchg
inc
andl
jne
sar
xchg
sub
cmp
sub
fwait
arpl
jmp
xchg
lahf
jle
int
mov
shll
mov
stc
or
sbb
dec
mov
inc
out
testb
mov
mov
lea
aaa
xchg
imul
fsubs
ret
push
jl
mov
xor
mov
imul
mov
int3
mov
lods
ja
loopne
push
ja
sbb
adc
mov
stos
inc
mov
out
and
xor
jnp
xchg
mov
lret
jae
ret
lret
or
lods
jmp
xchg
dec
mov
ljmp
xchg
cmp
lret
mov
push
sub
cmpsl
enter
dec
mov
inc
mov
adc
stos
mov
xor
mov
movsl
arpl
pop
loop
lods
inc
lcall
pop
scas
aad
or
push
push
mov
xchg
push
cmpsb
or
dec
add
mov
or
adc
xorb
std
pop
outsb
out
insb
jge
lret
inc
lea
mov
cmp
or
adc
push
cwtl
xor
adc
lret
xchg
ret
je
add
push
ret
mov
loop
pop
cmpsb
imul
mov
pop
pop
mov
cmp
xchg
jns
jo
loopne
inc
js
imul
and
cmp
push
shrl
hlt
std
xchg
pop
mov
and
pop
add
or
mov
xchg
loop
outsl
jae
sbb
jo
popf
cmc
stos
inc
das
mov
sub
cmp
test
push
and
test
das
int3
push
mov
dec
and
in
mov
inc
nop
inc
loopne
or
mov
dec
push
push
ds
in
push
movsb
lcall
call
dec
in
adc
rorl
in
int3
leave
mov
cmp
mov
leave
addb
push
call
loop
cmp
out
or
jne
dec
enter
mov
jo
mov
xchg
jae
xchg
into
cmp
rcrb
scas
adc
push
adc
and
fwait
test
cmc
inc
es
dec
push
push
shll
mov
rorl
into
cwtl
fists
pop
shll
xlat
aas
cld
xchg
stos
cmpsb
divb
jmp
push
jb
add
adc
lahf
call
mov
movsb
loopne
xor
sub
mov
cmpsl
fldenv
sub
ljmpw
iret
xchg
bound
jg,pn
jae
mov
pop
aaa
stos
mov
mov
push
adc
ja
iret
cmpl
fildl
data16
pop
rolb
shlb
sbb
push
xchg
enter
test
sahf
jecxz
scas
fists
inc
les
sub
jbe
pop
dec
lea
mov
or
pop
popf
xor
dec
mov
lahf
lods
shlb
sbb
bound
sti
test
adc
inc
sub
mov
mov
xchg
jae
into
std
mulb
aaa
js
mov
aaa
and
mov
in
popa
mov
rcrl
popa
push
mov
and
mov
push
clc
mov
jle
add
scas
push
mov
xchg
ud0
or
sbb
rorb
cmp
dec
insb
ljmp
pop
inc
mov
loopne
inc
mov
repnz
lret
cmc
lahf
mov
or
test
or
or
jno
jle
fs
or
lea
notb
out
sub
push
xchg
stos
xor
dec
fwait
fwait
pop
sub
inc
imul
push
dec
cmp
std
imul
popa
or
cmp
repz
pop
lods
sub
jne
daa
lods
in
mov
push
fsubs
std
adc
pop
test
in
dec
inc
scas
arpl
shrb
lods
pop
popa
loope
sbb
andl
push
sbb
cmp
outsl
movl
scas
repz
lret
lea
jle
lret
mov
xchg
push
int
dec
cmpsb
dec
mov
test
mov
enter
daa
ror
insb
pop
daa
orl
jle
jo
dec
push
jle
push
decb
xchg
aam
adc
scas
testl
test
aas
je
lea
add
sbb
sub
fistpl
xchg
rclb
mov
es
insl
cmpsb
in
in
outsb
shll
sbb
inc
add
mov
jo
loopne
xchg
mov
or
xor
and
cmp
mov
sarb
scas
mov
jp
pop
xor
pushf
mov
xor
push
je
inc
ret
sbb
je
call
je
add
jp
and
adc
pusha
push
xlat
outsb
mov
sahf
fpatan
xor
push
push
xor
cmp
leave
and
fldl
cmp
dec
dec
push
push
mov
andb
xor
mov
mov
pop
dec
adcb
and
mov
fstl
push
mov
call
leave
shlb
mov
ljmp
adc
or
push
xchg
pusha
mov
clc
or
mov
jmp
aaa
adc
cli
iret
fdivrl
pop
push
mov
mov
cmpsl
bndcn
pop
pop
and
fcmovu
out
xchg
add
popf
repz
nop
aad
dec
dec
mov
mov
ficoml
or
js
rol
std
mov
sbb
xchg
cli
push
inc
test
or
push
iret
lret
mov
mov
push
addr16
cmp
out
inc
mov
mov
and
mov
mov
fldcw
je
jge
sbb
test
or
out
jb
sub
pop
mov
jl
and
mov
push
xor
enter
pop
sbb
out
and
cmp
dec
call
mov
dec
dec
out
xchg
stos
cmpsb
stos
mov
sbb
lods
jo
push
lret
dec
adc
leave
dec
cmpsl
sbb
ss
cmpsb
aam
fsubrp
adc
mov
repz
push
outsl
xchg
jg
insl
int3
sub
inc
pop
fwait
rolb
jno
push
addr16
pop
push
movsb
sar
lret
inc
cmp
jae
sahf
lret
nop
cmp
fbld
aas
or
jmp
fists
xchg
add
sbb
sbbb
xchg
add
test
mov
dec
ror
es
dec
aas
psubd
sti
outsb
xchg
sub
and
out
pop
push
imul
ds
negl
jecxz
adc
out
adc
or
and
mov
adc
nop
cmpsb
or
or
lock
dec
shl
movsl
cmp
fsubs
inc
adc
inc
sbb
jp
outsb
rorb
inc
mov
dec
sbb
in
add
out
stos
mov
insl
scas
aas
pop
adc
and
jne
icebp
xchg
adcl
push
int
dec
adc
outsb
test
rclb
lods
mov
and
fcomps
dec
loope
outsl
sahf
loop
in
fcom
mov
xlat
pop
loope
xor
hlt
and
cmp
add
into
roll
fbstp
pop
bound
pop
rcrb
ss
adc
mov
out
ljmpw
push
call
mov
xor
mov
popf
pop
xchg
movsl
cmc
adc
jle
dec
xchg
mov
or
xor
adc
mov
popa
xchg
xchg
mov
mov
imul
dec
bound
adc
cmp
push
out
push
cli
xchg
lret
and
mov
in
je
scas
subl
push
xchg
sub
push
mov
dec
cld
sbb
push
xchg
les
pop
popa
xchg
ret
sbb
xchg
push
push
lods
push
pusha
adc
inc
jmp
out
push
mov
shll
adc
imul
xchg
mov
pop
out
adc
pop
adc
mov
shlb
insb
ljmp
das
add
xchg
in
adc
push
push
popf
fucom
loope
scas
cmpsl
pushf
mov
sahf
mov
js
push
lret
mov
sbb
pop
pop
lds
mov
jmp
test
mov
loopne
xchg
lcall
inc
fildll
hlt
fcoms
sub
push
loope
dec
shlb
sub
subb
push
or
not
push
push
inc
xorb
push
leave
test
xor
pop
data16
sti
repnz
sbb
cld
mov
cmp
dec
mov
lock
faddl
mov
ret
popa
or
cmpsb
dec
scas
sbb
lahf
xchg
dec
stos
mov
cmpsb
or
inc
add
insb
lea
aaa
pop
adc
xchg
adc
cmp
addr16
push
dec
xorl
or
add
jno
ror
sub
and
xor
lea
cld
insl
cltd
mov
push
stos
mov
roll
test
pushf
das
addl
pop
lahf
insl
ljmp
mov
push
push
into
test
fwait
adc
mov
fiaddl
std
push
and
mov
mov
inc
pop
sbb
add
push
cltd
push
sub
shlb
pop
mov
jp
loope
inc
test
add
mov
sti
nop
xchg
xor
dec
inc
and
ret
cmp
and
mov
or
aam
cmc
and
in
int3
cmp
jp
cmp
adcl
imul
loop
mov
int3
stos
push
or
xchg
dec
mov
dec
mov
rcrb
fdivr
andl
mov
mov
mov
xor
jnp
nop
dec
sbb
sbbl
pusha
icebp
pushf
xchg
out
sarl
iret
or
lahf
push
movsl
data16
lods
pushw
icebp
data16
mov
iret
repz
cmp
sub
mov
dec
fs
jmp
dec
add
scas
enter
je
sbb
out
jae
add
inc
or
xlat
call
out
hlt
xor
jb
iret
stos
out
shrb
fisttps
jne
mov
sub
xchg
add
sbb
mov
pop
enter
jb
iret
mov
cwtl
lds
jnp
dec
movsl
ss
test
test
repnz
adc
cld
test
push
mov
lods
dec
push
dec
ja
mov
and
dec
popf
push
pushf
jo
out
cmp
ret
in
or
mov
icebp
inc
xor
test
loope
xlat
data16
mov
jne
repz
shrl
in
push
xchg
mov
fnstcw
jmp
jne
push
sub
insl
arpl
pop
and
cwtl
test
pop
bound
sub
sub
dec
lock
subb
push
or
pop
idiv
push
sub
ret
push
sub
inc
scas
pop
frstor
xchg
test
push
icebp
aaa
mov
lock
cmp
inc
jg
dec
cltd
aaa
cltd
imul
fstl
fidivrs
or
aam
cmp
pop
insb
addr16
loop
xchg
sbb
push
sbb
icebp
repz
into
rcr
mov
fwait
jb
inc
stos
mov
pop
dec
mov
int
je
sub
fstl
inc
and
mov
push
mov
add
xchg
pop
imul
popa
push
mov
mov
add
dec
sarb
adc
xor
in
or
xor
xchg
sub
add
maxps
push
push
xchg
mov
push
stos
loopnew
int
sub
int3
jle
xchg
ror
inc
push
sub
js
rolb
gs
inc
pop
or
imul
out
je
jbe
out
jns
aad
clc
test
out
xor
iret
inc
sbb
aad
lock
sbb
xor
popf
mov
pop
in
push
dec
or
inc
add
pop
dec
sub
mov
insb
pop
cmp
mov
and
cmp
jae
call
xchg
or
cmp
xor
jno
pop
rcrl
je
std
and
xor
add
pop
add
cs
aas
cli
dec
mov
jbe
mov
rclb
inc
dec
movsb
jb
push
push
adc
xchg
jmp
jae
dec
sub
repnz
aaa
push
mov
jbe
jae
cmp
push
in
js
add
or
std
insl
mov
xlat
int3
out
hlt
dec
inc
mov
sbb
and
push
jl
mov
std
mov
popf
nop
pop
cmp
repz
hlt
adc
or
mov
popa
fidivl
adc
adc
popf
mov
addr16
mov
jno
clc
jge
add
or
push
adc
int3
mov
cwtl
cltd
mov
push
pop
insl
add
into
dec
dec
pop
xchg
sub
push
data16
aad
adc
sub
jge
jns
aaa
shll
cld
inc
adc
and
mov
lods
mov
cmp
fisubl
enter
movsl
jmp
pop
imul
jle
dec
inc
aam
push
xlat
mov
scas
lcall
jp
jne
aas
inc
int
ret
ret
mov
pop
mov
iret
lods
mov
sbb
cli
push
addr16
jns
dec
push
xchg
dec
jle
ljmp
adc
mov
jg
clc
leave
mov
dec
pop
adc
test
push
dec
loope
sub
mov
add
xor
jno
das
or
add
lods
test
repnz
jge
sbb
pop
jmp
mov
ret
lea
insl
dec
fwait
enter
int3
in
movsb
cmp
inc
imul
popa
nop
dec
ret
mov
xchg
jle
and
xchg
nop
fistpl
out
fisttpll
imulb
fsubrl
dec
jecxz
and
sub
stos
mov
cmc
cs
inc
mov
enter
dec
add
pop
jno
movsb
les
jbe
ss
ss
fimull
pop
loopne
fldt
mov
loop
xchg
mov
xchg
loope
shrb
add
push
sub
and
gs
fmull
fsts
loope
ficompl
jmp
jg
into
lds
roll
aad
sbb
test
repz
jae
add
ret
inc
cltd
lcall
push
pop
pop
pop
in
or
push
les
into
lods
sub
in
pop
add
arpl
ror
lret
addr16
movsb
and
sbb
shr
in
leave
jne
and
ret
xor
movsb
push
adc
push
xchg
jo
push
ss
std
jge
insl
repz
cmpsb
popa
out
fwait
sub
out
push
sbb
shrb
jo
xchg
and
adc
cwtl
dec
les
mov
lea
sbb
pop
in
push
shrb
and
dec
js
cwtl
add
les
mov
xchg
jo
dec
adcl
out
sbb
ret
dec
dec
add
or
pop
hlt
insb
hlt
sub
ret
mov
insl
xchg
push
daa
je
add
push
out
lret
xchg
int
xchg
mov
jp
mov
xchg
or
pop
sub
arpl
mov
cli
xor
push
pop
cmc
imull
jmp
or
mov
push
mov
sar
and
mov
add
sub
mov
bnd
mov
or
lods
movsb
and
clc
add
push
js
lcall
popa
pop
push
xchg
dec
sbb
fimull
negb
inc
movsl
and
aam
mov
leave
movsl
add
es
push
xor
add
pop
addr16
aaa
cs
loop
rcll
or
scas
stos
cmp
adc
gs
dec
dec
andb
sahf
cmpsw
or
jmp
dec
or
adc
pop
pop
inc
fistl
sti
pop
dec
sarl
pop
fisubrs
cmp
andl
and
xor
dec
or
fsubrl
loope
and
push
add
adc
pop
mov
mov
shr
ss
iret
push
lds
mov
in
test
xor
lcall
jl,pt
xchg
adc
xor
cmpsl
loop
add
movsb
es
clc
xor
jne
mov
hlt
cwtl
ss
mov
jbe
mov
cmp
mov
leave
jnp
testb
into
jl
pop
or
inc
inc
sarl
in
lds
bound
inc
mov
aam
mov
jmp
into
lods
nop
stos
mov
mov
and
mov
inc
adc
data16
and
adc
les
clc
dec
test
xchg
repz
mov
cmp
mov
ret
int3
xchg
adc
push
cmp
jl
push
lock
mov
addr16
add
sti
and
or
xor
icebp
xor
jmp
hlt
xchg
jle
lcall
cmpsb
lds
call
push
cmpsb
or
test
insl
cmp
pop
clc
add
popa
xchg
lock
pushf
lret
add
inc
inc
stos
xchg
or
aas
cli
fucomi
mov
xchg
push
imul
fs
mov
xchg
or
clc
pop
jns
bound
sub
pop
jle
ret
ss
in
in
pushl
mov
mov
and
les
dec
push
or
cmp
popf
mov
mov
xor
jmp
push
xor
cmpsb
dec
iret
and
ret
and
push
add
xor
ret
fstl
or
ret
movsb
mov
mov
movsl
fdivs
frstpm(287
data16
pop
cmp
arpl
jmp
sbb
ja
push
add
ret
je
pop
add
sahf
and
shll
imul
stos
movl
neg
push
inc
push
ljmp
into
xor
insl
gs
int3
bound
mov
jne
jmp
xchg
clc
mov
inc
add
sbbb
mov
push
xchg
cmp
ljmp
sbb
adc
std
xor
sub
in
stos
xor
je
mov
test
pop
aam
scas
mov
rorb
mov
xor
push
lds
dec
pop
xchg
inc
push
jo
rorl
sbb
into
enter
addr16
dec
leave
and
sbb
ret
push
mov
inc
movsl
test
push
pop
add
fs
jmp
mov
loopne
jle
add
inc
sub
ret
mov
sub
loope
jmp
pushf
mov
rcrl
hlt
push
inc
jbe
mov
cmp
test
adc
cs
add
mov
xchg
push
and
jecxz
mov
mov
cli
movsl
int
xor
mov
shrl
push
call
xchg
adc
cmp
inc
sbb
lods
jmp
xchg
pop
inc
cmp
icebp
shl
clc
lock
in
and
push
pop
pop
push
out
fwait
sbb
imulb
xchg
addb
std
in
sbb
adc
cmp
pop
out
pop
int3
jns
inc
add
mov
push
ds
pop
insl
push
jp
iret
mov
decb
pop
mov
into
cli
into
inc
or
inc
jnp
jecxz
jle
mov
push
imul
xchg
lock
inc
xchg
pop
sahf
das
mov
xorb
out
int
push
hlt
lds
adc
adc
movsb
jne
push
xchg
imul
xchg
adcl
sbb
jg
movsl
test
add
ljmp
push
fidivrl
jno
pop
sub
fsubrs
addb
in
mov
or
js
jmp
dec
ficoml
cwtl
mov
inc
mov
or
stos
add
xchg
arpl
nop
test
in
or
cmp
mov
scas
inc
lret
std
std
push
mov
loope
dec
add
fdivl
cmp
or
mov
dec
std
in
inc
pop
clc
test
sub
leave
fcoms
aad
scas
sbb
or
inc
fiadds
ds
dec
lock
lret
sbb
insb
out
pop
ret
mov
sub
hlt
mov
scas
shlb
repnz
fwait
outsl
stos
inc
sbb
call
xor
mov
ret
push
pop
aam
sbb
cwtl
sbb
jns
dec
subl
decl
sub
adc
clc
jnp
pop
sbb
pushf
notl
push
xor
add
mov
fnstenv
cmc
rep
enter
dec
push
sub
dec
xlat
lahf
movsl
ss
mov
xchg
test
clc
movsl
push
push
lds
mov
lret
xor
and
sbb
test
sti
js
mov
test
mov
popf
jae
inc
xchg
out
cmp
add
imul
nop
in
fistpll
cli
std
push
shl
xor
lcall
idivl
pop
mov
push
jl
jmp
into
add
sbb
jnp
or
mov
xchg
push
sbb
cld
mov
mov
lods
lcall
adcb
adc
jns
and
movsb
push
mov
adc
sbb
and
stos
add
loope
bound
jnp
pop
cmpl
outsb
cmp
sbb
push
and
clc
inc
fnstsw
repz
ja
push
adc
sub
mov
test
rcll
jno
inc
jmp
sti
in
pop
outsl
cld
sbb
xlat
sbb
f2xm1
add
insb
divl
push
iret
ss
xor
mov
std
mov
sub
jmp
xor
mov
inc
lods
cmp
lcall
push
or
inc
push
inc
pop
shrb
scas
jns
mov
addr16
push
mov
fnstcw
data16
jbe
cmp
dec
mov
pop
or
mov
movsb
dec
ss
xor
mov
mov
jno
inc
loopne
xor
sub
clc
mov
and
imul
or
mov
sub
js
addps
mov
arpl
add
test
cmc
popf
lret
mov
leave
and
shlb
xorl
std
mov
dec
sbb
shl
jmp
pop
dec
insl
fnsave
fadds
xor
in
adc
dec
and
xor
ja
mov
lods
mov
inc
cmp
fsubrl
or
mov
pop
add
pop
movsb
sbb
push
adc
dec
push
ret
mov
xchg
cmc
rcl
stos
mov
push
add
cltd
mov
xlat
inc
and
mov
pop
js
jns
jecxz
inc
out
add
scas
mov
xor
sub
cld
stos
push
divb
insb
into
outsl
ja
imul
stos
xchg
test
in
and
sbb
cmp
add
mov
sbb
rcrl
outsb
mov
mov
dec
push
fmull
fisubs
in
nop
clc
add
cmp
movsb
jne
xchg
mov
ljmp
mov
sbb
gs
cmp
shll
or
xorb
popa
shlb
inc
gs
pop
mov
add
insl
js
and
sbb
nop
jge
xor
cmpsl
mov
test
inc
aam
in
and
sub
or
mov
xor
roll
jb
scas
adc
lcall
movsb
xchg
inc
test
mov
call
cmp
jnp
add
mov
popa
jecxz
push
mov
lds
stc
loope
mov
mov
cmc
xchg
adc
jnp
sub
int
inc
shrl
hlt
push
push
loope
jp
iret
test
inc
xchg
scas
xchg
lret
push
ret
faddl
add
test
lock
jne
mov
loop
adc
sub
insb
adc
repnz
jecxz
ljmp
mov
repz
cmc
cmpsb
les
pop
pop
mov
cmpsb
xchg
cli
and
repnz
push
les
or
imul
mov
stos
dec
cmp
sahf
in
rcrl
fisttps
mov
inc
inc
dec
fst
pop
mov
jb
jb
test
imul
xchg
es
jbe,pn
insl
and
mov
add
pop
push
daa
push
imul
inc
hlt
dec
icebp
andl
fdivl
mov
mov
jecxz
xor
sbb
xchg
xchg
jns
jno
add
call
or
call
ss
loope
lea
jmp
jbe
cmp
dec
popf
mov
xlat
mov
addl
std
scas
or
pop
dec
or
aad
xchg
mov
int
sti
pop
loop
rep
sub
xor
sahf
ss
in
cs
fisubl
xchg
mov
mov
shlw
test
nop
cld
push
je
push
dec
daa
rolb
fisubrl
cmp
jg
fstl
arpl
inc
mov
fisttpl
or
stc
xor
adc
sub
push
aad
pop
mov
push
pushf
ss
and
and
push
inc
movsl
enter
gs
rorb
mov
cmc
pusha
rorb
loopne
dec
fucomip
mov
sub
mov
dec
xor
in
pop
mov
mov
jns
and
int
mov
sti
add
mov
mov
int
xlat
iret
sbb
add
mov
jne
hlt
loop
f2xm1
into
ds
inc
or
aad
out
ss
mov
and
cld
adc
stos
mov
insb
mov
aaa
jg
rol
aaa
test
jno
and
out
dec
addl
xchg
fistl
adcb
ss
ja
jno
sub
test
or
imull
ljmp
arpl
pop
mov
sub
cmpl
mov
jae
mov
jae
lret
xchg
dec
sub
mov
sarb
adc
jge
jo
arpl
sbb
and
add
loopne
mov
dec
mov
movsb
loopne
imul
dec
push
outsb
dec
push
and
je
push
xor
jb
fs
test
stos
inc
stc
inc
adc
xor
jecxz
mov
jmp
xchg
cmp
mov
or
inc
negl
push
orl
cltd
add
into
sbb
aam
mov
addr16
jge
stos
popa
xchg
mov
imul
int
cli
es
cmp
cmp
and
data16
push
flds
aas
or
add
mov
cmc
jmp
cmp
aaa
mov
fcom
push
add
inc
fistpl
test
mov
std
insb
ret
ror
jp
out
dec
and
xor
ror
sbb
mov
leave
or
rclb
add
addr16
xchg
in
and
jae
lea
sbb
pushf
scas
sub
shrl
mov
mov
push
cmp
dec
mov
jmp
imul
pusha
mov
push
cwtl
fcomi
lret
xchg
pop
xchg
inc
fistps
cmp
inc
jae
xchg
or
xchg
aaa
fsubrs
cltd
push
inc
mulb
orb
add
rcr
lods
or
mov
and
jne
and
cmp
loop
push
int3
ds
add
lods
rorl
les
shrl
je
sar
mov
cmc
xchg
mov
pop
je
push
stc
jmp
cmpb
xchg
push
stc
mov
mov
xchg
jne
shll
ljmp
testb
into
mov
adcb
imull
sbb
pop
mov
mov
mov
add
int
pop
les
aad
xor
push
ja
mov
inc
xor
cld
inc
sbb
outsl
mov
push
mov
xor
popa
xor
add
xchg
adc
push
inc
mov
hlt
cmp
les
in
insl
adc
scas
adc
mov
push
pop
aad
dec
aaa
arpl
stos
fldcw
call
stos
insl
jne
jne
inc
dec
pop
mov
xchg
xor
mov
shlb
movsl
loop
adc
shll
popf
pop
pop
into
psubsb
into
lcall
cld
jmp
jg
mov
dec
insb
adc
add
int3
pop
xor
in
cmp
adc
aas
inc
push
testl
fwait
rorl
leave
lea
jne
or
xor
and
inc
xchg
push
fistpll
inc
or
scas
cmp
sti
sub
lock
repnz
outsb
pop
or
adc
clc
lods
or
mov
xor
mov
add
push
mov
bound
pop
out
test
adc
pop
inc
sahf
lds
adc
jg
popf
loope
aas
jp
mov
out
dec
inc
sbb
xchg
inc
sub
push
idivl
mov
jae
enter
add
ret
mov
push
push
rcl
out
mov
rcll
in
push
push
inc
sbb
lods
jecxz
sbb
fsubl
cmp
mov
lea
pop
mov
inc
inc
or
mov
cmpsl
cmp
inc
or
push
jle
xor
or
xchg
aas
mov
and
add
movsb
popf
mov
mov
add
push
sbb
rcrb
gs
and
pop
rcr
jns
addr16
mov
shrl
aam
or
sahf
xchg
leave
mov
arpl
mov
test
imul
pop
xlat
push
sub
into
sub
and
jb
jge
dec
fidivs
lcall
adc
movsb
sub
push
pop
fcomps
les
mov
fmuls
rcrl
and
jns
push
mov
gs
test
mov
aam
mov
imul
or
add
mov
lock
shlb
push
int3
fwait
pop
cwtl
sub
daa
jg
out
loopne
inc
popa
and
fucomip
in
push
bound
clc
imul
in
sub
imul
sarb
add
sahf
push
xor
mov
into
divl
fs
dec
les
dec
mov
mov
xchg
lret
mov
pop
je
mov
out
idivl
xor
jo
or
icebp
add
iret
pop
mov
into
fimuls
and
rolb
mov
jmp
sti
mov
fdivr
shll
mov
lret
mov
and
push
popf
mov
popa
fstpl
pop
mov
cmp
pop
sahf
lods
xor
jnp
inc
mov
das
adc
dec
xchg
cmpsb
insb
rolb
js
sbbl
xchg
aam
in
push
dec
iret
pop
arpl
cmc
ds
stc
add
xlat
pushf
jecxz
fs
int
push
divb
push
int3
cmp
or
mov
dec
pop
lret
adc
dec
push
cmpsl
and
mov
sbb
push
xchg
in
mov
shr
lock
or
lret
movsl
xchg
mov
hlt
sti
call
mov
xchg
jb
cwtl
dec
cmc
mov
jno
pop
pop
movsb
adc
out
mov
fnsave
fdivrp
mov
mov
cmp
popf
ljmp
jb
int
js
jge
std
mov
jnp
fimull
movsb
mov
lods
loopne
dec
inc
int3
loopne
and
jg
add
pusha
jne
fidivs
outsl
aam
or
jae
cmp
sub
sbb
ret
jg
aas
mov
sbb
xchg
push
arpl
call
adc
add
lret
mov
xchg
adc
sbb
xor
cld
dec
inc
stos
insb
sub
aam
test
xchg
ret
jp
push
shrb
jle
adc
mov
push
fldt
shlb
cltd
sbb
fwait
cmp
out
sub
or
xchg
int
aad
xchg
in
icebp
cmp
or
add
divb
repnz
fmul
add
sub
mov
dec
aam
leave
data16
movsl
mov
push
scas
enter
inc
jae
jne
mov
call
xchg
inc
pop
test
cltd
inc
out
cmpsl
pushf
fs
adc
mov
sti
inc
stc
pop
stos
sahf
jae
add
sar
jg
mov
or
jge
nop
aaa
roll
xchg
clc
fwait
mov
sub
mov
cmp
adc
movsb
ja
test
out
inc
push
xor
rcl
adc
fmull
lods
bound
sbb
push
scas
sbb
cltd
lods
push
cwtl
lock
jp
aas
into
inc
push
mov
dec
mov
inc
sub
into
std
mov
jo
je
sbb
loopne
jge
push
xor
or
ljmp
jle
add
mov
jge
xor
fimuls
xchg
imul
and
sub
cmc
into
push
fcomps
and
push
jnp
mov
cld
add
out
imul
sub
and
mov
xor
es
mov
mov
fldt
add
iret
lods
mov
or
in
clc
cmp
and
int
adc
test
xchg
inc
hlt
movsb
push
dec
add
xor
fcomps
lahf
sub
adc
jge
outsl
int
mov
insl
sub
mov
xor
cmc
in
mov
mov
xchg
pop
in
mov
mov
xchg
mov
or
test
movsb
pop
hlt
out
shll
outsl
gs
adcl
xchg
xor
loopne
dec
cltd
add
ds
push
mov
add
adc
push
fistl
movsb
shlb
pop
fcom
mov
in
pop
shl
lods
fprem1
adc
gs
sbb
lds
jae,pt
cwtl
jle
shlb
mov
mov
xor
bound
dec
lret
sbb
xor
dec
leave
rolb
invd
push
psubd
xor
jo
or
pop
xorb
and
out
cmp
stos
push
mov
mov
cltd
imul
push
pusha
mov
xbegin
aad
dec
push
fs
mov
outsb
inc
jecxz
mov
std
rcll
stos
push
cmp
jg
inc
or
sub
iret
mov
call
imul
stos
jecxz
mov
mov
sub
cwtl
movb
incb
and
ffree
xchg
mov
mov
data16
addb
inc
std
mov
call
in
stc
lea
icebp
jns
jae
mov
cmp
into
sarl
jp
mov
mov
and
cltd
into
scas
movsb
push
fdivrs
sbb
ljmp
xchg
xchg
sub
push
sub
orl
and
insl
dec
inc
xorb
clc
mov
in
popf
dec
inc
sbb
sti
xchg
jne
sub
push
das
mov
inc
dec
jb
shll
fs
xchg
adc
mov
pop
mov
fs
movsb
adcl
sbb
add
addr16
aam
cli
fisubrs
mov
dec
pusha
cwtl
loop
mov
mov
or
cmp
arpl
lea
ss
movsl
rcrl
pop
xchg
xor
sbb
sbb
mov
inc
ret
xchg
mov
mov
jne
or
push
mov
cmpsb
or
mov
imul
popa
sbb
mov
call
and
push
mov
lret
dec
int3
jp
mov
or
xlat
xor
aaa
mov
xchg
stos
inc
pop
pop
add
adc
sbbb
enter
mul
out
arpl
hlt
lret
mov
jmp
seto
adc
adc
pop
push
daa
into
jne
or
pop
cmp
mov
mov
mov
cltd
nop
shr
std
fs
pop
mov
jns
aam
mov
pop
cmp
push
in
sbb
jecxz
test
loop
in
xor
dec
pushf
movsl
mov
or
int3
jecxz
or
rcr
and
jecxz
inc
inc
sub
scas
pop
cld
and
xchg
push
pushf
lods
enter
inc
push
addb
or
xchg
sti
lods
add
subb
add
cltd
outsl
fcoml
dec
fidivl
xchg
mov
bound
xchg
aaa
jecxz
loopne
mov
imul
cmp
mov
sbb
fimuls
fildll
xlat
nop
push
mov
in
scas
daa
jb
cmp
cmp
mov
xchg
push
lods
add
add
addl
sub
ret
lahf
and
dec
cld
mov
pop
pusha
call
jp
mov
mov
mov
rol
lods
mov
ret
hlt
jge
in
dec
rcrb
jns
outsl
adc
test
enter
inc
ljmp
lds
cmp
xchg
repz
icebp
push
aas
mov
push
adc
repz
push
and
sub
sbb
lret
scas
test
fldln2
loope
ret
mov
and
push
sarb
sub
sub
jg
push
sub
dec
lods
cmpsl
les
rclb
cmc
mov
mul
inc
push
sbb
ret
mov
lods
das
adc
xor
lea
mov
xchg
outsb
cmpsl
mov
sub
dec
mov
aam
cmpsl
jbe
out
jne
pop
push
mov
sub
xchg
pop
aaa
dec
lret
orb
fsubp
xchg
lret
dec
int
popa
sahf
jmp
repnz
jnp
adc
pop
mov
repz
sbb
inc
out
mull
lods
daa
pop
and
clc
fisttpll
lcall
dec
dec
jge
jl
sub
std
mov
insl
xchg
sub
ljmp
cwtl
pop
mov
bound
stos
loope
inc
or
aaa
adc
lahf
or
aam
testl
shrl
or
xchg
or
aaa
dec
or
mov
shrl
sbb
add
test
lcall
ds
andl
shll
xor
test
test
cltd
add
jle
sub
adc
bound
jp
add
push
sbb
ljmp
push
rclb
imul
mov
jno
lret
ret
and
ja
rolb
insb
and
in
pop
cmc
testl
push
pop
ja
cmpsl
out
xchg
inc
aaa
aam
push
rcrb
repnz
mov
lock
pop
cltd
in
push
cwtl
inc
cmpsl
cmp
inc
inc
fs
xchg
mov
in
xor
push
loopne
test
or
bound
add
daa
cmp
sbb
ror
mov
fcmovb
add
or
or
scas
mov
mov
jge
push
mov
orb
repnz
lret
lea
add
add
or
jmp
imul
and
outsl
mov
sub
add
push
in
es
lahf
fwait
mov
fwait
or
cmp
mov
in
clc
shlb
jae
and
lds
cmpsb
pushf
xchg
in
jmp
mov
pop
int
mov
daa
std
xchg
repz
daa
cld
sbb
dec
test
in
adc
es
inc
fdivl
out
sbb
loop
popa
or
adc
xor
repnz
push
xor
mov
cmp
fcmovnu
data16
ss
xlat
ljmp
lret
mov
mov
mov
push
addr16
or
and
insl
push
adc
lcall
push
xchg
inc
xor
rcrl
lea
in
icebp
and
or
ja
movsl
mov
scas
push
dec
mov
cmpsl
cs
fldenv
xchg
jae
das
mov
pusha
aaa
outsb
sub
leave
rep
xchg
roll
arpl
push
adc
std
lds
cmpl
stos
xchg
inc
sarb
mov
cmp
ja
fldcw
mov
or
jg
shl
aas
mov
push
xchg
xchg
lods
cmp
in
xor
ss
lret
insl
loop
nop
fidivl
popl
or
insl
push
lret
mov
mov
aaa
jae
mov
lea
or
and
inc
loope
cmpsl
js
out
inc
mov
xchg
lds
outsb
mov
aaa
and
adc
lods
leave
cmp
and
fbld
insl
sub
adc
shlb
pop
sub
push
push
les
mov
lea
inc
or
icebp
cs
ret
sub
push
mov
out
lods
pop
outsb
das
int3
out
loope
lret
out
xchg
int
inc
addb
or
popa
iret
bound
xchg
imul
inc
test
mov
lahf
xchg
es
faddl
adc
into
repz
loop
add
pop
cmc
test
xor
aas
out
mov
mov
scas
dec
sbb
mov
inc
add
cwtl
cmp
jns
xlat
and
mov
ds
add
imulb
lods
jge
lahf
sti
mov
inc
or
imul
xchg
rol
xchg
push
shlb
jae
shrb
inc
xor
sub
add
mov
js
data16
xchg
out
cwtl
adc
xor
ss
fisubs
push
dec
imulb
and
leave
das
shl
repnz
push
push
mov
insb
aam
add
pop
push
repz
sbb
cmp
cmp
icebp
sbb
jmp
leave
inc
lds
sbb
insb
lock
out
inc
inc
addr16
jle
dec
test
lods
dec
push
cmpsb
jge
fcompl
lock
jecxz
add
movsb
fucomp
dec
cwtl
mov
dec
icebp
lahf
pop
arpl
hlt
sbb
mov
mov
and
cmp
cmp
cmp
mov
sarl
idivl
push
sarb
jmp
imul
pop
outsl
mov
mov
push
pushf
repz
sbb
sbb
scas
lea
mov
lock
ljmp
lcall
sbbb
imul
fwait
add
aaa
jge
test
stos
sahf
dec
lods
jl
xor
les
ror
fildl
cltd
test
jno
jbe
in
arpl
lods
lea
cmp
pop
mov
jno
mov
fists
push
enter
cltd
gs
call
add
pushl
pop
adc
in
movsb
movsl
fstl
test
jge
rorb
mov
and
int3
data16
inc
popf
daa
xchg
mov
xor
xor
fdivrl
sbbl
cmp
stos
push
pop
xor
and
iret
cmc
pop
pop
inc
inc
or
xchg
xchg
add
push
dec
inc
push
cld
pop
and
call
sarb
lret
adc
adc
cmp
addr16
shlb
shll
cmpsb
xor
fwait
std
and
add
shlb
and
cmp
inc
inc
dec
add
flds
add
mov
mov
data16
pop
cld
cltd
or
cmp
push
pop
mov
loop
jno
push
xor
icebp
or
test
cmp
out
in
aaa
and
or
xor
mov
push
insb
fisubl
stc
and
fimuls
xor
mov
mov
stos
in
cwtl
push
dec
xchg
sub
fdivrp
mov
outsl
faddl
movsl
adc
add
push
fmul
test
jp
call
ja
mov
cwtl
mov
mov
mov
outsl
sub
pop
push
outsl
push
ret
sar
mov
push
leave
jae
lds
xchg
cmp
sub
push
and
cltd
mov
shll
shrl
push
std
jns
xor
std
int
cli
add
mov
xor
data16
test
shll
fnstenv
dec
std
das
ja
cmp
or
into
int
xor
sbb
ret
outsb
ds
fwait
pop
fisubrs
test
popa
jbe
mov
daa
adc
loop
add
pop
inc
xchg
inc
inc
popf
mov
jecxz
mov
or
push
dec
dec
sub
adc
nop
push
pop
arpl
mov
or
push
les
les
out
and
mov
push
aas
scas
xor
loop
and
push
push
in
int3
jae
insb
movsl
fsubs
notb
mov
pop
fidivrs
iret
pop
sahf
xor
aaa
xor
shll
jl
pop
nop
mov
ret
sbb
pusha
mov
xor
push
jnp
xchg
jmp
mov
imul
xchg
xchg
imul
fnsave
jb
jp
mov
loope
cmp
push
aam
mov
lret
pusha
jo
das
mov
das
out
mov
insb
mov
sbb
jecxz
in
xor
or
mov
ret
pop
inc
shlb
push
lret
pop
cltd
aam
ret
xchg
cmp
movsb
or
add
imul
fidivs
sbb
xlat
addb
negl
mov
xchg
rcll
fucomp
test
xchg
pop
jbe
rol
cli
pop
mov
pop
cmp
ret
arpl
fnsave
repz
leave
loope
imul
inc
loope
adc
xchg
push
rcrl
je
setg
mov
mov
cmp
lret
clc
cmp
pop
leave
fs
and
imul
popf
pop
cmp
mov
pop
loope
mov
hlt
inc
cld
push
adc
mov
imul
or
cmp
mov
test
pop
or
imulb
pop
and
mov
mov
test
jecxz
and
jmp
test
insl
sub
int3
inc
movsb
sti
and
sbb
mov
sbb
lods
jne
repnz
push
and
adc
jbe
fcmove
and
frstor
imul
notl
clc
std
ret
push
das
xchg
test
jb
jbe
inc
in
push
cmp
inc
popf
push
sahf
xchg
js
int3
clc
xchg
rorb
xchg
xchg
dec
cld
cli
inc
out
icebp
sbb
cltd
jmp
pop
ficompl
pop
push
cmp
out
jne
movsl
push
jecxz
js
in
push
xchg
idivb
loopne
inc
cmp
mov
int
dec
xchg
mov
mov
sbb
subb
stc
subl
faddl
loop
fistps
aaa
pushf
and
pop
sahf
fs
inc
jl
std
aaa
dec
xor
push
add
fbld
pop
mov
sub
rcrb
das
mov
imul
fadd
push
pop
sub
sti
je
pop
jmp
lods
in
sub
lods
pop
adc
adc
sti
sub
xchg
and
jmp
pop
std
mov
test
mov
outsl
sub
xchg
jl
jle
or
cltd
jge
out
insb
adc
icebp
pop
xchg
jno
push
push
fs
mov
aaa
mov
aam
sbb
inc
xchg
pop
pusha
loopne
aad
push
and
sbb
mov
push
jae
daa
std
in
push
movsl
adc
jb
adc
jnp
push
or
jmp
lods
xchg
pop
mov
pushf
inc
pop
dec
adc
rcll
sub
arpl
enter
lds
sub
mov
adc
lret
xor
pop
xchg
fistps
sbb
cs
cli
ret
into
out
push
cmpsl
push
cmc
sahf
hlt
stc
push
aad
icebp
in
pop
sub
and
insl
out
jg
cwtl
stos
mov
jmp
pop
int3
or
add
leave
push
flds
stos
and
gs
adc
test
mov
sbb
lea
sub
mull
loope
cmp
push
sub
pop
in
dec
je
ss
mov
dec
inc
push
xchg
outsb
add
icebp
add
insb
pop
dec
fldl
jg
xchg
jns
add
std
fidivrs
add
or
std
pop
fwait
mov
mov
in
sti
or
xchg
daa
jecxz
das
xchg
pop
xchg
sbbb
cmp
les
inc
stos
outsb
aaa
imul
scas
xor
cwtl
mov
pop
in
xorb
mov
mov
jae
jg
cmp
call
mov
xchg
test
fisttps
mov
dec
push
rolb
mov
or
std
sub
pushf
pusha
outsl
xchg
sub
pop
sub
aas
add
movsl
addb
jne
jno
push
jg
lcall
int
pushf
cmp
mov
out
push
jns
xchg
mov
dec
stos
jno
jle
push
cwtl
pop
inc
cmc
stos
cwtl
push
sti
pop
aad
dec
cltd
sbb
sar
lods
mov
mov
test
cmpsb
mov
lret
or
arpl
inc
js
fstps
fsubrs
aam
ss
in
int3
pop
std
mov
dec
sub
dec
das
jmp
pusha
push
adc
adc
add
test
test
xor
pop
or
mov
mov
add
shl
in
fdivr
adc
ljmp
les
mov
xchg
sub
mov
loope
and
imul
loopne
mov
mov
mov
push
mov
arpl
and
lahf
std
enter
addb
push
sub
cmc
and
lahf
or
aam
les
cmp
mov
imul
cs
adc
and
pop
mov
jmp
pusha
adc
sbb
mulb
cli
mov
pop
scas
sahf
mov
push
lea
sahf
mov
jb
or
jb
inc
roll
jmp
ret
or
sub
mov
ret
ja
lcall
pop
and
dec
rorb
test
or
push
dec
dec
stc
imul
ds
or
test
inc
in
add
jmp
or
out
imul
mov
addr16
mov
psrlw
clc
sbb
sahf
stc
cmp
inc
cmp
aam
psllq
stc
insl
jne
push
call
push
pop
lret
or
lods
mov
sbbl
cmpsb
and
push
cmpsl
call
hlt
cmp
out
xor
mov
bsf
mov
mov
inc
and
cmp
jge
daa
leave
lock
sbb
fbstp
notb
jl
sbb
mov
aad
cmp
push
hlt
mov
shll
popa
push
incl
dec
shrl
lret
shlb
mov
jmp
lcall
pop
popf
jnp
in
push
xor
cld
mov
int3
pop
sbb
mov
cmpsb
je
and
out
into
stos
popa
imul
adc
loop
jecxz
fs
sbb
ljmp
mov
mov
lahf
mov
insl
xchg
hlt
lret
in
lods
or
cmovne
loopne
notb
mov
insl
test
and
out
jns
cmc
xor
roll
pop
fisubs
sbb
jb
jl
pop
ret
sbb
push
lret
mov
insl
push
xchg
in
idivl
les
mov
pop
xorb
into
leave
lret
das
cld
loop
pop
shrl
fwait
addr16
out
loopne
ja
scas
mov
push
incb
je
adc
in
inc
dec
sbbb
cmc
or
mov
daa
mov
gs
out
nop
fwait
shlb
aad
popa
mov
dec
jnp
push
or
mov
hlt
mov
and
enter
fidivl
mov
outsb
and
mov
push
push
xlat
push
cmp
or
push
mov
lock
jae
bound
push
outsl
insl
add
cmp
insb
or
incl
xchg
push
leave
leave
out
push
mov
mov
push
pop
add
pop
ret
arpl
pop
sbb
inc
sahf
sub
add
and
movsl
and
lar
xchg
imul
sub
rclb
clc
lock
jecxz
out
in
mov
jle
js
push
xlat
xor
outsl
mov
loopne
and
sbb
or
mov
mov
mov
pop
pop
clc
notb
xchg
enter
push
cmc
xchg
pop
add
movsl
push
add
mov
int
aaa
dec
mov
iret
out
lahf
leave
xchg
pop
ljmp
leave
enter
out
lea
nop
or
loope
mov
xchg
mov
incl
notb
lods
xor
stos
mov
movsl
jb
mov
cmp
jecxz
xchg
jl
mov
mov
test
bound
int
es
xchg
jne
scas
adc
mov
ljmp
inc
pop
fadd
cmp
jbe
imul
mov
insl
outsl
mov
in
test
sub
lcall
push
pop
dec
jp
sbb
xchg
pop
cmp
aam
ret
aas
sbb
arpl
popf
cmpsl
fstp
jb
xchg
jns
hlt
push
add
imul
mov
mov
mov
cmpsb
call
ss
xor
jo
xor
add
lcall
insb
jb
inc
jg
cmp
and
mov
xchg
inc
adc
push
flds
pop
call
pop
xor
dec
gs
pop
scas
cltd
push
lds
notl
aam
jmp
imul
insb
or
add
rcr
ljmp
aaa
dec
mov
icebp
push
mov
call
dec
arpl
loope
std
sub
push
scas
sbb
outsl
daa
add
mov
xor
scas
add
mov
push
enter
es
add
cmc
xorb
cld
loope
lods
cmp
push
movsb
cli
adc
lret
dec
aam
repnz
pushf
lret
mov
push
sub
cmp
jae
cmpsb
push
hlt
mov
pop
mov
sbb
notb
push
mov
lcall
das
cld
jecxz
mov
stos
out
out
cmp
lds
push
cs
sub
test
loopne
adc
push
sub
aam
inc
jns
jbe
lods
cli
out
jge
push
shrb
aad
jl
jp
push
xor
les
aad
loope
cmpsl
inc
mov
out
lea
or
xor
aad
addr16
xor
nop
sub
push
rolb
fwait
xchg
leave
je
icebp
push
push
mov
push
pop
in
sub
xchg
and
push
flds
loope
xor
mov
add
iret
das
ficompl
rolb
fwait
pop
jae
stos
mov
mov
int
icebp
lds
stos
bsf
cltd
loopne
jns
adc
jle
push
and
mov
fdivs
test
fidivrl
out
cmp
lock
xor
loopne
and
hlt
xchg
call
orl
and
cltd
insb
push
loopne
dec
xchg
inc
cli
rolb
adc
push
int3
xor
arpl
ljmp
xor
adc
rcr
jnp
stos
jb
repnz
outsl
js
or
repnz
sub
jl
pop
inc
jo
and
push
fists
js
jmp
pop
and
in
dec
dec
lahf
out
pop
fdivrl
test
add
pop
pop
enter
aam
push
or
xchg
jne
imul
cli
inc
sub
push
mov
vmovntps
faddl
inc
or
add
enter
scas
jmp
pop
mov
mov
in
add
push
cmc
sbb
dec
jmp
stc
adc
lcall
aas
push
rcll
fbstp
push
mov
pop
data16
mov
or
aas
scas
cmp
cmp
es
sbb
pop
push
ss
sbb
or
xor
leave
mov
mov
fstps
pop
mov
movsl
cmp
test
int
sub
dec
dec
fwait
pop
icebp
out
lahf
jecxz
push
rclb
push
or
fsubrl
xchg
lret
or
add
push
dec
mov
or
xor
mov
cmp
hlt
and
fistps
ds
jns
and
adc
repz
cmp
push
test
lock
jno
iret
jecxz
and
adc
lds
xchg
pop
sti
inc
push
adc
daa
dec
mov
pusha
scas
inc
mov
jl
pop
pop
jnp
lock
mov
sbb
mov
subb
xor
sahf
xor
lret
scas
insb
pop
mov
in
and
lds
test
and
in
out
xchg
lds
pop
pop
add
add
lods
jno
xchg
cmp
ja
icebp
mov
and
sbb
dec
xchg
arpl
icebp
lahf
in
mov
xor
dec
call
roll
pop
and
add
aaa
sahf
repnz
push
in
push
nop
push
xlat
loopne
mov
inc
xchg
ret
scas
sbb
aaa
inc
mov
mov
mov
jg
in
jle
cli
xchg
fists
loopne
cmp
movsl
enter
aas
mov
jl
mov
fimuls
dec
in
jbe
test
stos
pop
push
ds
cmp
sbb
inc
mov
push
xor
jbe
ret
push
xlat
xchg
cmpsl
mov
and
xorb
inc
cli
or
xchg
xchg
sbb
adc
xor
xchg
or
or
fstpt
in
mov
xchg
sub
push
pop
fxch
sub
cmc
popa
fdivs
stc
xor
xchg
insb
lret
pop
repz
ror
adc
aaa
mov
fldl2t
jnp
ljmp
inc
xchg
lret
or
add
data16
out
sub
push
cli
pop
aas
jecxz
int3
jecxz
ljmp
and
mov
fdivrs
mov
daa
xlat
fs
jecxz
into
aam
iret
mov
adc
mov
push
out
dec
mov
idiv
ja
jp
inc
mov
lods
out
sbb
dec
sub
cmp
inc
xchg
lea
add
and
in
jo
pop
or
mov
lds
pop
xor
orl
mov
pop
jb
stos
mov
rolb
mov
test
clc
inc
stc
sbb
int
mov
loop
sti
lods
inc
les
aaa
add
push
jne
dec
stc
int
jo
mov
push
orl
mov
aam
adc
pushf
outsb
inc
imul
mov
arpl
and
inc
cmpsb
xchg
push
push
popa
cmpl
into
push
or
mov
icebp
stc
and
dec
mov
sbb
inc
in
imul
mov
fstps
jge
out
cmp
scas
neg
mov
jnp
cmp
outsl
loopne
sbb
in
int
cs
jae
lods
mov
mov
adc
out
rcl
popf
repnz
sbb
push
push
inc
ret
or
mov
xchg
test
loopne
and
outsb
xorb
pop
mov
in
fidivl
push
sub
mov
addr16
cmp
aas
loope,pt
repz
pop
pop
sti
lahf
lods
rcr
sbb
mov
stos
call
push
adc
push
cmp
outsl
mov
add
inc
outsb
lods
pop
aas
fisttpl
lcall
fs
mov
fdivs
hlt
es
push
outsb
push
lock
enter
arpl
inc
or
jmp
ss
rcl
pop
ja
fcoml
clc
adc
xor
pop
add
in
cltd
xlat
mov
movhps
cltd
lret
bound
je
testb
lods
mov
sub
iret
xchg
rorl
aad
loope
sub
xchg
jns
jmp
mov
or
std
ret
shrb
or
lret
fidivrl
pop
shlb
movsl
unpcklps
out
inc
mov
mov
cwtl
and
mov
push
cwtl
rclb
and
std
inc
fnsave
sbb
scas
fsubrs
cmp
sti
in
pop
orb
aaa
ds
adc
adcl
sub
shl
movsl
fsts
test
iret
jns
subb
loopne
insl
shrb
cltd
data16
das
rcrl
scas
inc
int
add
bound
fistl
mov
push
inc
outsb
jmp
add
cmp
sbb
push
hlt
data16
mov
push
mov
ljmp
jnp
dec
call
inc
int
mov
cs
mov
and
xchg
lods
pop
push
jbe
push
sub
ss
sbb
pop
jmp
or
pop
stc
xchg
inc
push
test
movsl
pusha
cmp
dec
sti
jecxz
movsl
jmp
fsts
adc
mov
clc
jp
rclb
mov
clc
das
int3
jae
cmp
shl
xor
cmp
ljmp
push
test
push
mov
adc
mov
out
xlat
lahf
xchg
or
and
mov
xor
push
lret
das
cld
mov
inc
xor
lock
and
jns
push
or
sarb
test
adc
add
out
or
movsb
fsubr
mov
sbb
loop
sub
jmp
std
in
pop
mov
test
les
popa
movsl
cmp
push
jbe
std
test
test
mov
or
mov
push
add
jp
scas
outsb
pop
dec
sti
push
xor
push
and
and
lret
adc
sbb
sub
arpl
xchg
dec
in
adc
adcl
js
notb
and
jo
cmp
pop
fstp
sbb
in
dec
adc
mov
jbe
inc
mov
and
scas
pop
je
jmp
lods
sbbb
inc
bound
sbb
jno
addr16
or
jbe
inc
sub
dec
adc
call
bound
rol
lahf
dec
movsl
sub
add
inc
xchg
jno
xchg
add
pop
iret
inc
loopew
insl
inc
xor
sub
mov
and
sub
push
and
outsb
jne
sub
into
add
jo
add
loop
adc
push
ret
pop
ret
nop
in
imul
fsubrl
and
add
insl
pusha
or
fs
es
mov
ffreep
jo
nop
inc
cmp
das
sarl
add
aam
and
push
add
mov
stos
loop
sti
int
jns
pop
push
fnstenv
inc
imul
xchg
sti
sbbl
loope
aad
out
scas
out
xchg
mov
mov
movsb
xchg
inc
jbe
ret
mov
mov
push
out
xchg
lods
xchg
fsubrs
shld
xchg
enter
leave
out
popa
icebp
pop
add
aam
sbb
dec
repnz
xlat
scas
sbb
fidivrs
xlat
stos
fnstenv
pop
aad
pop
outsl
add
lods
call
int
pop
icebp
in
sub
adc
aaa
shrb
or
add
jl
sbb
sub
out
fs
mov
ja
jecxz
popf
or
ret
xor
sub
push
add
push
xchg
mov
repz
cmp
fbld
cltd
dec
xor
push
pop
mov
add
cmp
stos
sahf
sub
jecxz
push
jl
adc
inc
sbb
int
adcl
jns
movl
dec
ja
mov
jo
cmp
xchg
hlt
ja
arpl
xor
pop
inc
sub
das
adc
mov
jne
pop
pushf
dec
pop
insb
mov
iret
inc
fsubl
divb
int3
orb
xor
mov
inc
cmp
and
cmp
insl
dec
sub
les
adc
or
int
stos
xchg
inc
ds
shll
jg
pop
mov
out
xor
or
dec
or
test
leave
jns
cmp
mov
xor
sbb
in
sti
sub
enter
sti
xor
sti
xor
aas
repz
popa
popa
adc
xchg
fsts
sub
leave
xchg
std
rclb
xor
cmpsb
ret
sbb
incl
sahf
je
cmp
mov
jmp
jno
mov
and
stos
and
sub
and
sbb
lcall
adc
repz
mov
cmpsb
ja
popf
fs
pop
scas
ror
add
test
inc
sub
jo
mov
sbbb
les
inc
xor
adc
dec
es
jae
lods
pop
xchg
scas
fimull
cmp
cmp
inc
and
in
fistps
xorb
insl
pop
xchg
rolb
in
inc
jmp
pop
aas
pop
ljmp
add
or
pop
out
jmp
or
xchg
out
mov
mov
push
add
arpl
enter
filds
into
or
lahf
mov
popa
pop
xor
mov
push
cmp
xchg
imul
cmp
mov
lcall
stos
cmp
loopne
inc
or
cs
cld
or
shlb
gs
xor
cld
sbb
scas
inc
and
sbb
jo
sbb
sahf
lcall
pushf
lret
push
jnp
mov
lret
orl
dec
jns
xchg
dec
mov
xchg
xor
out
push
cs
loopne
into
pop
fadd
jmp
inc
or
fs
add
lret
test
clc
imul
fdivr
inc
jae
orb
or
aad
push
or
nop
jno
mov
inc
hlt
add
lock
imul
push
frstor
fmull
cld
nop
xchg
mov
jecxz
or
xchg
xchg
mov
mov
stc
mov
mov
scas
cld
imul
or
imul
pusha
xor
xor
sti
stos
in
scas
add
and
mov
ss
dec
fstps
into
nop
push
sbb
int
aad
sub
mov
sbb
jbe
and
rcll
adc
bound
aam
out
stc
jecxz
add
sbb
pop
and
scas
imul
scas
mov
push
pop
xchg
sub
push
adc
clc
scas
stc
out
add
in
and
dec
mov
cmp
popf
sti
add
push
in
pusha
fs
cmp
rclb
std
sti
jge
aas
rcrl
repnz
dec
fwait
mov
dec
adc
sbb
sbbl
add
cmc
test
insl
cmp
push
das
mov
adc
dec
imul
rolb
jp
inc
sub
movsl
movsb
mov
jns
or
ficoms
pop
xchg
nop
adc
sub
testb
xor
mov
data16
and
pop
adc
sub
sti
inc
lds
nop
pop
out
icebp
mov
xor
fdivl
push
xor
dec
and
xor
test
inc
mov
inc
mov
sub
lods
adc
push
ljmp
repz
jns
mov
xchg
nop
leave
xchg
inc
movsb
ret
push
ficompl
sti
aas
pop
or
outsb
fldl2t
movsb
leave
and
push
leave
pop
add
ret
mov
out
dec
lods
sbb
adcb
lcall
test
xchg
mov
mov
mov
pop
test
mov
js
mov
inc
sbbb
ret
cli
add
push
js
fisubs
int3
cmc
or
xchg
icebp
pop
sub
adc
arpl
out
mov
xchg
mov
iret
lret
adc
enter
mov
scas
shlb
fildl
filds
les
test
into
hlt
aad
std
lcall
test
adcl
pop
mov
nop
movsb
xor
xchg
cld
jle
into
ja
sub
in
adc
sub
jo
xor
dec
jne
pushl
push
pop
xchg
mov
add
inc
add
popf
arpl
jl
pop
lcall
push
mov
xchg
or
and
pop
inc
mov
in
les
cmpsb
xchg
lock
cmp
fdivrl
das
mov
and
cmp
fistpll
cmp
out
xor
rcl
xor
jle
dec
je
clc
out
scas
add
cwtl
arpl
sti
aad
jge
nop
lods
loope
xor
test
cmpsb
ss
jns
add
push
aad
adc
into
add
addb
mov
out
test
jnp
jb
xchg
into
mov
inc
or
aam
mov
imul
aam
fs
inc
mov
add
lock
mov
push
sub
int3
sub
xchg
dec
test
test
mov
cmp
pop
sti
dec
sub
xchg
movsb
pop
sub
mov
stos
sbb
loop
imul
roll
ret
mov
pop
push
stos
mov
add
pop
out
repnz
lret
push
pop
nop
rorl
movsb
sbb
jnp
test
test
popa
dec
fistpll
adc
cli
sbb
jbe
mov
cli
pop
outsb
cli
pop
push
aaa
xor
vmovlpd
inc
in
ret
adc
aam
dec
xor
mov
loopne
lock
pop
fwait
push
imul
cmc
popa
mov
or
outsl
mov
pop
movsl
rcl
jmp
adc
loopne
subl
test
pusha
xchg
xchg
xchg
loop
adc
fcomip
push
jmp
aad
scas
nop
icebp
loop
stc
cmc
test
in
jl
push
fdivs
test
dec
out
push
pop
pop
adc
leave
pop
xor
je
cld
nop
push
daa
lods
mov
mov
sub
lcall
push
clc
pop
fs
hlt
push
fcmovbe
xchg
imul
ss
jecxz
gs
test
cwtl
sahf
sbb
enter
fcmovu
les
bswap
insb
cli
jb
mov
lea
and
jmp
jbe
inc
push
sbb
lea
or
loop
incb
adc
lahf
adc
inc
or
testl
dec
roll
jg
xlat
imul
je
inc
dec
fldcw
xchg
xor
or
or
in
test
test
mov
and
push
pop
fsubr
enter
mov
shll
jecxz
lret
xor
mov
pop
ret
xchg
xor
cwtl
sbb
mov
xor
pusha
cmp
stc
out
mov
push
test
lods
jmp
sbb
mov
mov
je
ss
inc
imulb
cwtl
push
push
aaa
mov
dec
fldt
xor
mov
and
cmpsl
add
je
pusha
adc
inc
in
and
jecxz
jle
cmpsl
std
adc
sbb
mov
rep
fmuls
jmp
inc
mov
imul
lods
inc
xchg
ljmp
jp
or
into
mov
push
mov
dec
cltd
xchg
mov
and
pop
ret
and
push
in
cmp
sbb
insb
jl
sahf
sub
bound
xlat
ret
cmpsb
ret
into
sbb
int3
mov
insl
push
lea
stc
cmp
pushf
in
inc
fsubrp
push
test
aad
adc
and
outsb
jmp
sahf
and
fs
je
imul
and
pop
adc
stos
xchg
shlb
imul
adc
mov
pop
add
sti
add
mov
xlat
out
mov
jnp
lods
lods
or
mov
mov
outsw
sub
shl
ja
stos
aaa
xchg
inc
fisubrs
sarl
aaa
aas
mov
mov
imul
in
notl
mul
sub
cmp
aaa
stos
mov
jmp
inc
in
hlt
fnstcw
mov
mov
push
shlb
mov
shlb
fimuls
sub
cwtl
dec
mov
cs
jp
lock
push
outsb
es
sbb
and
fdivr
pop
into
sahf
ds
dec
pop
adc
and
fs
pop
cmp
insl
stos
jne
pop
jp
pusha
sbb
push
adc
es
inc
mov
test
jl
push
js
and
add
inc
add
sub
movsb
lock
ljmp
test
jnp
xor
andb
push
leave
subl
rcr
xorl
inc
xlat
ret
dec
jl
jae
and
jne
lds
bound
push
push
mov
sub
push
sti
pop
scas
enter
cmp
es
orl
adc
add
nop
adc
or
mov
out
and
jecxz
adc
mov
rcll
mov
in
dec
jae
pop
js
movsb
mov
test
fdivr
or
mov
test
lds
jp
cwtl
shll
mov
mov
xlat
sub
xchg
insl
add
std
jecxz
mov
repnz
inc
imul
out
incl
jecxz
dec
jns
add
jnp
lahf
push
mov
sti
adc
fisubs
cmp
jbe
stc
add
idivb
inc
das
rorb
inc
nop
mov
std
loope
push
sub
adc
inc
push
insb
mov
pusha
mov
out
clc
fisubl
add
cmp
fadd
loop
scas
xchg
aam
lock
jns
xor
sub
repz
inc
or
das
inc
xchg
testl
xlat
sbb
mov
pop
sub
popa
int3
cmp
cmp
lahf
xor
sub
shll
inc
fsub
sub
xchg
dec
sbb
adc
and
push
stc
push
inc
insb
and
inc
pop
ret
or
movsb
data16
add
psubusw
insb
mov
mov
or
add
int
cmpl
push
fnstcw
pop
add
sbb
outsb
add
dec
outsl
xlat
arpl
imul
les
enter
mov
lea
add
add
fdivrs
pop
push
sahf
repz
popf
stos
scas
adc
insb
dec
sbb
movsl
repnz
loope
xor
push
das
pop
sub
push
adc
clc
rcrb
jo
cld
scas
xchg
sbb
adc
or
ret
fisttpl
sub
test
cli
js
nop
adcl
shll
ss
sbb
std
sub
setbe
and
mov
mov
repz
sub
mov
xchg
xor
jmp
loopne
imul
leave
xlat
xor
out
das
into
push
lret
push
bound
or
bound
sbbb
and
pop
imul
dec
xchg
adc
jl
iret
cmp
movsl
push
jae
inc
fdivrs
inc
mov
cltd
repnz
sub
cmpsb
aas
imul
adc
add
mov
xor
or
pop
xchg
dec
xchg
notb
incl
mov
mov
dec
stc
push
rcll
lcall
xor
push
pop
outsb
and
xor
pop
push
push
sbbb
ds
push
shl
inc
add
inc
or
shrb
leave
adc
dec
push
mov
ficoms
dec
cld
sbb
or
add
lds
sub
mov
arpl
dec
sarb
pop
xchg
ss
add
pop
mov
inc
test
pushf
jb
pop
aad
dec
adc
ret
addw
dec
cmpl
push
popa
add
jle
cs
push
movsl
cmp
stos
mov
mov
xlat
mov
xchg
jg
mov
mov
out
sub
int3
filds
cmpsl
pop
xchg
lods
adc
jns
mov
test
add
jge
push
pop
cmp
decl
mov
mov
xor
xor
sbb
and
push
sbb
xlat
mov
cmp
dec
jbe
shll
jae
mov
andl
xchg
sar
xchg
jl
xor
testl
adc
testb
aad
insb
and
les
cmc
rcrl
repz
cmpl
xchg
mov
push
lods
rolb
and
lcall
and
add
xchg
clc
inc
push
addl
arpl
popa
push
pop
dec
mov
test
inc
sbb
mov
stc
xchg
popf
ss
imul
ret
dec
out
mov
repnz
mov
push
test
dec
addl
mov
call
cmp
sbb
insb
mov
mov
mov
mov
mov
bound
aam
lret
xchg
jo
pusha
loop
dec
std
mov
push
inc
divl
scas
roll
aas
nop
dec
fcmovbe
jge
into
mov
fwait
aaa
lds
fdivr
jl
fdivrl
in
arpl
add
pop
xchg
loop
add
and
out
push
in
fidivl
lahf
pop
lock
mov
mov
mov
lahf
sub
lods
inc
out
sub
outsl
mov
pop
lahf
call
sub
xor
push
in
sub
or
push
stc
mov
cmp
xchg
mov
ret
or
les
inc
ds
sub
lcall
sub
inc
out
xchg
iret
jne
pop
js
adc
inc
push
mov
je
insb
xor
lds
bound
mov
pop
lret
inc
out
dec
xchg
mov
mov
ficoml
mov
sbb
mov
insl
imul
xchg
js
lea
fbstp
mov
add
cltd
xchg
dec
xchg
lret
int3
js
cmp
mov
cwtl
dec
dec
xchg
inc
jbe
ret
outsl
xchg
mov
das
jno
push
mov
imul
cmc
lret
fst
test
mov
mov
mov
jge
cmp
push
inc
mov
xor
or
into
loopne
jno
cmp
fldlg2
out
dec
mov
fimuls
je
sub
push
adc
sub
insl
pop
cmp
adc
fisubrs
cmp
repnz
pop
jg
outsl
push
pop
rcll
push
jmp
sbb
leave
xchg
dec
and
inc
or
lcall
add
and
imul
dec
inc
inc
frstor
mov
sub
bound
test
loope
scas
scas
dec
ljmp
mov
das
ret
mov
je
jbe
and
movsl
aas
fiaddl
xchg
cli
pop
sub
jge
out
mov
call
lds
sub
sbb
pop
subb
xor
xor
lods
or
ret
cli
jle
mull
xchg
mov
xchg
fdivp
mov
aad
subl
das
int3
inc
push
roll
or
jnp
mov
xlat
sbb
push
jge
push
add
movsl
push
rcrl
lahf
ficompl
or
push
push
loop
fistpl
or
xchg
xchg
adc
mov
and
xor
ss
sti
pop
dec
popf
and
orb
jl
pop
xchg
push
and
xchg
out
int
pop
imul
add
ret
pop
mov
pop
xlat
clc
dec
jp
rorl
movb
sti
je
lds
push
cmp
and
mov
fimull
or
loop
mov
push
daa
dec
jbe
pushf
pop
shl
rcll
jnp
cmp
push
std
lahf
int
xor
xchg
arpl
dec
cmpsb
movsb
jmp
int3
pop
mov
sub
jl
jns
fwait
adc
ds
orl
adc
test
ret
in
std
popa
adcb
mov
scas
scas
xor
inc
pop
mov
mov
cmp
dec
cmp
inc
or
int3
repnz
sub
pop
js
cld
fsubrl
outsl
fidivrl
imul
jb
and
jo
mov
sub
jge
xchg
popa
pusha
ds
movsb
adc
jno
add
fdivrl
sub
jns
xor
enter
sub
ljmp
addr16
push
shlb
jle
fbld
enter
cmp
mov
repnz
dec
int
int3
xor
movsl
sub
inc
fdivp
sbb
mov
test
sub
xor
rcrb
pop
jge
sub
loop
out
add
and
push
push
pushf
xor
movsb
inc
cmp
jp
pop
xor
das
dec
int3
lds
inc
pushf
cmc
dec
mov
mov
cs
popa
imul
insl
scas
out
pop
add
adc
lret
in
leave
stc
cltd
cwtl
stos
jge
repnz
nop
inc
mov
dec
leave
out
negl
hlt
cmp
stc
call
xchg
push
pop
ret
ja
das
dec
sub
jnp
mov
ljmp
mov
daa
xlat
mov
int3
imul
pushf
and
clc
mov
bound
push
addr16
nop
adcb
repz
daa
cltd
lcall
and
xlat
loopne
scas
in
nop
fsubl
fdivl
stc
add
lock
and
test
jmp
sub
add
adc
xor
sub
xor
mov
pop
je
inc
mov
lock
dec
cwtl
jae
fldenv
jle
jp
dec
sub
stc
sahf
mov
enter
into
mov
icebp
mov
xchg
das
fs
repnz
sahf
out
movsb
ds
mov
es
jae
jecxz
lret
roll
sbb
and
adc
push
xchg
mov
repz
add
inc
jg
pop
jnp
push
jl
xchg
add
popa
jmp
gs
mov
xchg
outsb
cltd
mov
stos
cld
int3
les
or
iret
mov
cmp
daa
sub
addr16
icebp
cmpsb
popa
test
cmp
xor
out
inc
mov
xor
sahf
mov
pop
fisttpll
in
push
mov
nop
push
push
cltd
fs
sub
and
or
dec
int
xchg
outsb
or
pop
sbb
js
insb
inc
div
dec
dec
std
or
lahf
rcrb
pusha
dec
sti
int3
cmp
lea
mov
cmpsl
mov
imul
sub
ret
and
jae
lods
xchg
push
mov
mov
xor
push
enter
enter
pop
xor
dec
fidivl
nop
sbb
pop
adc
fisubrl
dec
push
jbe
mov
mov
ljmp
js
dec
mov
in
aas
sub
sub
dec
fwait
push
icebp
mov
push
je
lods
iret
in
js
mov
fcoml
lret
stos
pop
rorb
ds
inc
and
and
shll
sar
and
cmc
jg
sbb
lods
pop
popa
mov
jmp
rcrb
sub
push
or
push
push
out
push
in
mov
pop
push
imulb
test
hlt
loopne
adc
pop
sbb
movsl
ret
or
mov
hlt
test
idivl
in
push
jb
in
and
push
test
pop
stos
pop
adc
jle
jno
repnz
lea
out
push
push
fs
pop
je
das
outsb
pop
sub
jp
or
aam
popf
std
jmpw
xor
xor
cwtl
je
mov
sbb
fwait
xor
cmp
int3
into
clc
repz
adc
fsubp
jl
pop
popf
cmpsb
cmpsb
rclb
xchg
mov
mov
cli
dec
shll
lds
lods
cltd
out
push
or
or
pop
scas
sbb
enter
add
or
cmpsb
pop
fisttpl
pop
jnp
adc
jne
idivb
int
stos
mov
ficoml
lret
andl
mov
xlat
imul
pop
xor
inc
inc
pop
pop
mov
cmp
mov
xchg
ja
insb
out
pusha
daa
xchg
inc
mov
xor
test
or
sbb
test
dec
arpl
fdivrs
out
mov
mov
loope
sub
jge
lods
and
dec
pop
imul
bound
pop
inc
push
mov
repnz
and
xor
in
call
les
movsb
jns
mov
dec
add
lods
sub
mov
jecxz
daa
dec
add
fcoms
mov
sbb
adc
jns
add
fcmovb
int3
mov
push
mov
jg
jg
xor
inc
shl
push
xor
pop
scas
ret
cwtl
add
in
jne
in
daa
mov
fcmovb
sbb
adc
fsubs
adc
int
push
out
cmp
fwait
imul
insb
bound
loop
aas
rorl
dec
mov
push
test
sub
cmpsb
hlt
test
and
mov
push
xchg
mov
jmp
hlt
cmp
mov
dec
mov
int3
mov
add
or
jb
inc
push
sti
lock
movsl
sub
fs
leave
mov
ljmp
jmp
or
dec
fisttps
xlat
lret
and
incl
mov
imul
ja
fldl
out
and
jecxz
jns
mov
in
push
pop
call
ret
adc
mov
mov
ret
out
insl
lods
movb
mov
adc
dec
mov
gs
mov
jge
jmp
test
xchg
sub
int
push
cld
ss
lods
jo
and
jg
movsb
inc
pop
xchg
aaa
pop
mov
lods
out
jl
fsubl
std
inc
imul
sub
stos
dec
mov
adc
fcompl
loopne
mov
scas
mov
bound
mov
sbb
xor
or
fsts
push
scas
or
je
and
dec
push
mov
pop
mov
test
add
sti
cmp
int
pop
jnp
rclb
mov
sbb
in
mov
pop
imul
scas
add
or
addb
mov
jp
and
xchg
pop
and
push
mov
sbb
out
movsl
pop
or
xchg
mov
fisttpl
loopne
rorb
in
dec
adc
push
ds
bound
and
dec
dec
lock
dec
inc
add
adc
push
popf
pop
sbb
cltd
adc
mov
pop
insl
aad
sbb
mov
adc
inc
lods
sbb
or
and
stc
xchg
ret
dec
movsb
cmpsl
in
aam
add
xor
xchg
roll
xchg
clc
fs
or
mov
loopne
sbb
jl
xchg
sbb
pop
mov
fisubrs
push
fisubrs
jecxz
cmp
les
jg
pop
loope
jge
push
shr
inc
aas
or
adc
ja
hlt
xchg
insl
ret
fsubl
xchg
inc
and
or
push
out
push
fwait
lcall
cwtl
out
adc
fidivs
adc
push
outsl
add
push
cli
mov
lret
lock
push
xor
push
and
sub
pop
or
pop
stos
mov
jno
xor
dec
jl
xchg
addr16
pop
out
push
or
sarl
or
rorb
pop
andl
pop
icebp
mov
xchg
or
stc
hlt
movsb
pop
mov
fiadds
mov
fisubl
xchg
push
subl
sub
pop
cmpsl
inc
jle
or
test
push
pop
pop
subb
insb
push
jp
mov
sbb
test
into
movsl
sbb
mov
push
and
xchg
loopne
shrb
or
pop
push
lock
sub
ror
insb
shr
jl
sahf
mov
ss
lret
or
sbb
outsb
sbb
lock
mov
push
fsts
jge
aam
push
lret
mov
lea
xor
jp
addr16
mov
cmpsl
push
icebp
cmp
dec
stos
dec
test
push
cs
add
aad
in
clc
fidivs
aas
lcall
aaa
inc
push
add
mov
insl
leave
arpl
imul
loopne
push
and
jg
push
pusha
add
repnz
push
push
pop
add
nop
aad
mov
dec
mov
xor
xor
shr
rorl
cmpsl
adc
mov
mov
mov
xchg
mov
xchg
xor
sub
push
call
aad
icebp
jl
fisttpl
pop
and
popa
fbstp
rclb
imul
in
and
sub
dec
pop
std
fsubrl
mov
popa
test
push
outsb
cmp
mov
sbb
in
adc
sbbb
mov
testl
idivb
and
pop
movsl
adc
jns
mov
aam
shll
in
outsl
xchg
sub
mov
aaa
dec
jbe
pusha
or
pop
jg
dec
inc
fsubp
sub
mov
imul
or
and
or
out
cmp
mov
cmpsb
dec
pop
jbe
cli
fisttps
xlat
or
sarl
call
shl
or
sarb
mov
sbb
sbbb
mov
shlb
bound
jne
das
test
cmp
lods
loope
sbbl
popf
fwait
daa
fwait
xchg
sbb
call
data16
dec
test
popa
jo
loop
movsl
mov
inc
jns
pushf
mov
and
or
cltd
pop
cmpl
mov
adc
gs
jo
mov
mov
decb
cmp
fdivrl
test
cld
push
lods
cmp
mov
loopne
sti
mov
fcoml
mov
sbb
push
sbb
cmp
test
dec
jge
lahf
add
lahf
add
sub
mov
push
jmp
cmpsl
das
or
cmp
adc
adc
dec
lret
popa
jbe
jnp
sysenter
fdiv
in
push
xchg
add
hlt
in
fucomip
imul
stos
sarl
out
dec
sub
fimuls
xchg
cli
adcb
push
lds
sbb
or
icebp
dec
lods
jge
jge
inc
sbb
aam
stc
sub
aam
fs
dec
cmp
or
inc
cmp
repz
mov
cmp
mov
jnp
movsb
or
mov
je
daa
int3
jmp
ds
in
test
aaa
in
jp
adc
mov
aam
sbb
das
das
push
subl
push
lahf
push
mov
pop
xchg
inc
lock
pop
mov
push
lcall
jge
fwait
push
adc
xchg
jno
mov
pushf
in
loopne
or
jbe
xchg
pop
pusha
jbe
dec
mov
aas
aaa
jl
adc
push
ret
add
mov
enter
popa
test
jle
arpl
pop
rcrb
mov
out
std
lret
dec
notb
cmp
shll
cmp
adcb
inc
lcallw
cmp
inc
or
test
mov
fidivs
pop
movsl
dec
mov
push
adc
pop
arpl
sbb
pushf
lahf
inc
jmp
mov
ficoml
sbb
pop
fcmove
jg
jae
rol
sbbl
sbb
jg
repnz
mov
mov
in
jns
ja
sub
mov
dec
imul
add
imul
inc
ds
mov
ljmp
popa
stc
mov
mulb
fdivrp
int
js
cmc
mov
inc
xor
mull
sbbl
mov
mov
aas
lret
lods
imul
sbbl
movsb
mov
xchg
push
std
fwait
push
mov
adc
shlb
ljmp
scas
pushl
jbe
dec
gs
imul
test
jg
scas
ss
jp
pop
rorb
xchg
sub
lea
aas
jbe
jp
fldenv
pop
jno
pop
dec
test
push
cmp
enter
mov
fistpl
inc
sbb
adc
cmp
cmp
sbb
ret
stos
jnp
sbb
cmp
sub
pop
aam
cwtl
mov
int
std
cmp
xor
mov
mov
scas
loope
out
or
adc
aad
xor
aad
gs
or
lods
dec
mov
cmp
hlt
nop
enter
cmp
pop
stos
pop
add
jge
push
push
or
scas
out
inc
pop
pop
rol
push
xchg
cli
outsl
push
fmuls
stc
stos
dec
dec
jo
sub
mov
cmpsl
xor
pushf
fisubrl
arpl
sub
mov
js
lcall
sahf
shlb
test
dec
movsl
sti
cmp
jl
mov
aam
je
iret
mov
fcomps
sub
lcall
iret
adc
xchg
fsub
icebp
lods
dec
arpl
adc
jg
mov
xchg
les
or
cmp
les
push
sub
inc
xchg
pop
pop
add
pop
int
add
incb
add
dec
add
daa
jg
add
mov
add
add
mov
add
out
add
xchg
add
inc
aas
add
testl
add
fiadds
add
add
push
pop
add
ja
add
neg
add
jae
add
mov
add
pop
add
add
add
add
add
push
add
orb
lock
add
add
jo
push
add
add
add
ljmp
push
add
jb
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
pop
js
xor
mov
pusha
cmp
jb
mov
or
cld
xlat
sub
loope
mov
cmp
or
dec
add
pusha
adc
in
ljmp
push
aaa
mov
shl
sbb
push
pop
js
mov
push
aam
adc
inc
fadds
enter
xchg
cld
loopne
sub
xor
test
in
add
movl
or
cmp
clc
cltd
jne
push
in
call
mov
imul
or
mov
pusha
add
jns
shl
or
notl
add
and
enter
add
push
sbb
pop
pop
add
rcrb
pop
ret
xchg
stos
mov
outsl
lock
out
add
rorl
mov
repz
jae
pop
outsb
cmp
cld
clc
shr
imul
cmp
mov
shlb
iret
sbb
mov
stc
cmp
cmp
sub
sub
fdivrs
out
xor
stos
jecxz
or
add
imul
cmpl
lea
icebp
icebp
jmp
lock
cld
fdivrs
rolb
pushl
add
negl
and
adc
add
push
or
push
outsl
add
test
je
adcl
adcl
dec
pop
add
xchg
push
fsub
rorl
stc
enter
adc
iret
cmpl
adc
iret
cltd
mov
mov
add
sbb
or
inc
jl
dec
add
decl
adc
clc
adcb
stc
add
dec
or
test
sbb
jmp
pop
cmp
sub
test
filds
insb
mov
xorb
or
dec
inc
sub
call
in
int3
or
cmp
xor
cmp
setl
push
mov
movsb
mov
push
jmp
filds
inc
jg
mov
mov
jmp
icebp
pop
sbb
and
jmp
inc
shr
pushf
push
xchg
and
mov
jge
push
jg
cmp
mov
or
int
or
sbb
jae
xor
test
je
fcomps
push
cld
inc
cmpl
mov
jb
add
mov
xchg
mov
xchg
jmp
stc
icebp
stc
iret
inc
enter
mov
cmp
pusha
jne
sbb
mov
xchg
push
push
pusha
pop
pop
enter
and
loop
mov
enter
aam
inc
cld
iret
inc
and
or
mov
in
std
pop
xchg
or
lock
mov
push
inc
cmp
adc
cmpsl
fmuls
pop
fsub
loop
inc
jl
pusha
or
arpl
in
push
hlt
add
adc
adc
adc
bound
push
lds
sub
push
add
out
dec
data16
and
nop
jns
je
test
sub
hlt
mov
adc
cltd
or
repnz
jo
jmp
adc
pop
lea
add
add
or
loop
fsubrl
adc
add
orb
loope
hlt
jo
js
das
insb
out
sbb
jl
mov
in
shl
add
push
aaa
lahf
push
movsl
fwait
lods
and
in
pushf
or
ljmp
filds
sahf
inc
lret
inc
cmc
add
leave
add
cmp
rcrl
xor
fbld
sub
add
and
inc
xchg
and
xchg
xchg
xchg
and
xor
shr
add
sbb
lock
cmpsb
xchg
lds
cltd
pop
add
gs
add
dec
pop
fnclex
inc
mov
add
jp
jb
inc
mov
and
sbb
pop
adc
or
es
add
gs
jmp
xchg
cld
dec
inc
jbe
fdivrp
jg
xchg
loop
hlt
add
push
cmp
ja
sub
nop
lock
sbb
or
or
or
add
test
mov
int3
dec
add
adc
push
push
gs
mov
add
inc
add
mov
stc
mov
adc
jo
jmp
adc
xor
fdiv
imul
dec
push
and
add
push
add
push
call
mov
and
lea
lret
push
inc
mov
aas
or
add
mull
cld
cltd
push
or
movsb
andb
repz
pop
dec
xchg
or
xor
pop
pop
push
inc
test
shlb
mov
jo
movsl
add
jo
push
push
je
mov
sub
outsb
scas
dec
mov
adc
adc
inc
dec
add
adc
pusha
lret
divl
punpcklbw
or
or
jo
and
mov
adc
sbb
add
mov
cmp
or
sub
pop
jg
cmpsl
push
mov
pop
punpckldq
dec
mov
or
sbb
call
adcl
push
call
sbb
inc
adc
lea
inc
inc
push
rolb
in
in
in
push
or
jbe
sbb
repnz
lods
stos
add
cmpl
add
jae
test
mov
addl
inc
xor
ja
out
pop
push
cmp
jb
outsl
jbe
mov
cli
cs
xor
inc
fists
or
dec
dec
sti
and
aad
xchg
xor
mov
test
or
sti
les
sub
popf
es
inc
inc
xchg
or
dec
xor
xor
leave
test
mov
mov
mov
lea
mov
cld
mull
push
xorb
and
lea
push
and
das
orl
cmp
inc
mov
aas
int
or
adc
test
xor
adc
push
or
aaa
fiadds
jne
mov
aas
dec
inc
add
add
movb
insb
xchg
cmp
movsb
mov
sub
sub
pop
inc
push
sub
xchg
mov
cmpsb
ss
inc
add
pop
pop
pop
pop
ret
mov
or
cld
daa
mov
addl
lret
cwtl
icebp
dec
xchg
test
cmp
jle
jb
sbb
add
negl
ret
mov
mov
add
in
lods
sbb
jne
scas
leave
mov
pop
mov
sub
rcll
fldcw
ret
adc
jmp
cltd
enter
push
fs
inc
ds
rcrb
or
xor
dec
cs
inc
adc
jge
push
dec
xor
insb
jno
popl
adc
cmp
iret
jge
dec
push
inc
and
add
cmp
je
dec
mov
jne
sub
ret
shr
or
rclb
les
rol
add
jmp
inc
jmp
and
pop
mov
xor
xor
popw
pop
jmp
pop
push
scas
mov
shlb
sub
data16
jbe
push
push
push
call
push
mov
or
push
test
mov
in
and
sti
not
and
push
fisubs
mov
jae
pop
std
nop
fstps
clc
cmp
test
add
movsl
test
jnp
add
cli
shlb
stos
adc
xchg
cmp
mov
adc
adc
fiadds
or
add
lock
push
aaa
xchg
sub
mov
adc
bound
jecxz
push
outsb
dec
sub
push
ss
pop
gs
and
add
xor
dec
mov
hlt
push
daa
dec
or
cmp
test
data16
push
push
std
xchg
push
in
rcrb
mov
adcl
push
test
lret
sbb
sbb
stc
jmp
adc
out
inc
add
decl
dec
stos
adc
or
loopne
sub
pushf
dec
pop
jno
out
fisubl
or
inc
or
sub
lret
sti
inc
add
adc
dec
cmpb
pop
mov
xchg
je
add
out
inc
xor
jp
lcall
and
push
or
push
call
sbb
mov
adc
lds
aad
mov
add
or
xorl
adc
inc
loop
and
jmp
out
mov
aas
dec
inc
dec
test
ret
and
jmp
dec
push
and
fdivl
mov
mov
jge
jbe
testb
dec
lahf
mov
je
push
movsb
jg
test
cmp
push
jmp
hlt
and
jns
lock
jno
xchg
cmp
pop
push
dec
sbb
xchg
add
inc
xchg
lods
jmp
inc
popf
push
xlat
sub
mov
sbb
sub
cmp
in
call
cmp
add
jmp
pop
ss
pop
and
pop
jmp
sbb
shl
cmp
mov
jl
sbb
xchg
ret
push
loope
push
lea
add
imulb
add
add
call
sbb
xchg
and
jno
push
dec
imul
enter
dec
and
scas
and
add
sub
xor
mov
cmpsb
jp
cmp
push
add
jbe
jmp
inc
jo
insb
push
imul
and
jecxz
popf
cmp
jg
imulb
loopne
ds
arpl
fs
mov
and
insb
jns
outsb
jge
inc
jmp
popa
fbstp
fldt
mov
call
fs
sub
insb
and
dec
xor
sub
xor
pop
dec
outsl
popa
addr16
inc
outsl
js
shll
notb
data16
adc
cmp
or
je
nop
dec
dec
roll
push
fs
rorb
loop
sbb
je
cmc
inc
mov
fwait
sbb
jl
imul
hlt
jp
popf
xor
mov
out
int3
and
adc
push
cmp
or
mov
cmp
mov
mov
mov
je
and
jl
sub
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
and
push
add
add
add
add
add
add
jo
push
add
add
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
pop
xor
cmp
jne
mov
push
push
mov
add
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
add
add
push
mov
call
add
add
add
cmp
add
fiaddl
add
add
or
add
or
add
or
pop
add
pop
add
or
pop
add
or
pop
add
pop
add
pop
add
push
pop
add
sysret
add
sysret
add
pop
add
sysret
add
sysret
add
mov
add
add
add
inc
mov
