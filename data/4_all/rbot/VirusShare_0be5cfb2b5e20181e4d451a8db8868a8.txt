add
sti
pop
mov
imul
and
out
rclb
enter
xchg
js
inc
mov
dec
je
and
lcall
mov
pop
add
imul
inc
cmp
push
sbb
push
add
cmp
shrb
xor
mov
mov
adc
cmp
push
xor
je
adc
jnp
loopne
xchg
rorl
aas
outsb
cli
cmp
lods
xchg
pushf
dec
sbb
in
lcall
mov
outsl
cmp
mov
out
stc
fstps
xchg
test
popl
test
cwtl
lret
lock
mov
in
dec
fmuls
mov
lods
push
fbld
jns
subb
or
out
ja
mov
es
inc
mov
sbb
dec
lds
sub
cld
stos
cs
xor
test
gs
rcr
jge
insl
addl
dec
mov
repnz
dec
sbb
js
cmpsb
jg
orb
inc
jae
cmp
aam
aaa
ret
fsubl
push
add
adc
aaa
hlt
fwait
test
adc
jp
stos
aam
pusha
leave
js
or
out
icebp
add
lods
pop
testb
inc
lret
ret
imul
mov
cmp
jl
mov
cmp
adc
cs
cmpsl
xchg
aaa
not
dec
rcll
loope
inc
stc
clc
adc
xor
mov
sbb
mov
mov
addr16
mov
negl
push
push
mov
or
sub
fistps
xchg
jno
adc
cmpsl
inc
mov
in
ds
or
std
jg
cmp
fstl
jae
cmc
mov
mov
aas
fdiv
outsl
stc
xorb
cmpb
mov
jmp
add
inc
ss
push
sbb
and
imul
jecxz
out
jae
or
mov
cmc
mov
movsl
pop
xchg
mov
cli
je
pop
push
sub
pop
pop
cmp
sbb
dec
mov
lods
cmp
lcall
call
push
push
xchg
add
lods
or
pop
xchg
inc
jmp
rcr
sbb
mov
sbb
xor
inc
faddl
mov
out
mov
mov
arpl
or
or
push
push
test
sbbb
sub
cmp
push
movzbl
js
lea
in
lret
fisttps
stc
mov
sub
adc
repnz
seto
mov
dec
push
mov
xchg
xchg
ljmp
adc
cmc
loop
adc
add
push
sti
std
fldt
test
mov
insl
testb
flds
or
xchg
mov
push
sbbl
orl
sub
mov
cmp
fsts
test
pop
fbld
mov
xor
mov
cld
loop
fsubr
stos
test
push
dec
inc
lods
mov
inc
sub
pop
call
imul
push
xchg
add
dec
pusha
popa
lahf
data16
inc
test
and
js
fistl
adc
inc
ljmp
and
shlb
or
or
stos
test
clc
repnz
in
ljmp
out
fnstsw
mov
push
fcomps
jbe
shll
lods
es
fwait
mov
lods
popa
stc
jb
mov
mov
fidivl
lret
cmpsl
shrl
inc
jae
dec
xor
rcl
mov
add
xor
push
adc
xlat
insl
hlt
or
pop
pushf
incb
lods
pop
repnz
fimuls
test
and
ds
fildl
mov
pop
or
and
mov
sbb
or
lcall
push
mov
mov
cmp
shlb
movsb
sbb
cld
out
mov
jl
ljmp
fwait
cmp
mov
sahf
daa
ljmp
inc
les
pop
fbstp
stc
jno
insl
sarb
dec
and
add
movsl
adc
mov
cmp
in
dec
or
and
jl
rcrl
adc
or
sbb
adcl
sets
cmc
mov
ja
pop
sub
mov
cmpsl
add
mov
mov
sub
stos
ret
or
aaa
js
out
popa
test
mov
jb
mov
push
push
hlt
xor
addb
push
add
insl
cli
or
addr16
adc
mov
andl
inc
mov
xchg
stc
aam
subl
imul
cld
lods
dec
cltd
or
mov
or
movsl
out
and
mov
dec
shl
pushf
adc
dec
push
daa
xchg
nop
xchg
dec
fbstp
cmp
add
add
jle
pop
sbb
shl
mov
adc
les
fcomip
lret
cmp
setnp
pushf
jb
stc
fimull
xchg
xchg
push
sarl
sbb
ret
mov
pop
xchg
cmp
adc
es
mov
jecxz
bound
rolb
mov
repnz
inc
jae
inc
mov
arpl
or
pop
mov
mov
push
rorb
add
sahf
and
ljmp
push
push
and
mov
jbe
mov
mov
push
pop
add
xchg
pop
adc
ja
incl
inc
cli
repnz
dec
push
dec
push
daa
iret
fnstcw
ja
ss
mov
push
cmp
jae
xor
mov
inc
or
fsubl
or
pushf
les
cmp
dec
xlat
dec
cmp
pop
testb
mov
filds
enter
fdivrl
cmc
mov
cmp
dec
xor
scas
push
ret
sbb
test
ret
movl
push
sub
xor
jo
inc
mov
cmp
mov
les
fnstenv
xor
sub
cmp
jp
cwtl
data16
pop
and
loopne
adc
fisubs
sbb
adc
push
cmpsb
xchg
dec
push
or
dec
shrb
or
push
jp
xor
xlat
ret
mov
jge
pop
sbb
cld
dec
cwtl
roll
cmp
ja
jecxz
fdivl
arpl
sarl
sub
cld
test
icebp
or
lods
dec
push
rorb
mov
dec
pop
add
je
mov
mov
pop
xor
or
push
push
fadds
xchg
inc
mov
jg
mov
mov
sub
mov
inc
std
subb
xchg
sbb
stc
sub
xchg
test
mov
iret
fmuls
fstps
and
jle
ds
inc
dec
aas
faddl
xor
cwtl
test
adc
xor
sbb
mov
pop
outsl
stc
add
out
jo
ja
shlb
cmp
inc
and
aaa
aam
adc
xchg
sahf
fsincos
xchg
push
jns
sub
std
inc
aam
fistpl
mov
push
pop
out
and
mov
repnz
mov
in
jbe
pop
add
cmpsl
rolb
pushf
test
pusha
inc
std
pushf
in
gs
lcall
cmp
xchg
in
pop
nop
loope
jle
cmpsl
lock
pop
mov
mov
add
fcomi
jg
mov
jnp
aas
and
jecxz
repz
add
loopne
jle
lds
in
out
movsl
decb
sbb
int3
stos
pop
mov
jl
jae
adc
cmp
mov
mov
adc
pop
ss
adc
mov
sbb
addl
pop
xchg
lods
daa
aaa
jmp
ret
lret
setle
rorl
pop
shll
adc
lods
sbb
sub
ds
mov
sub
das
pusha
jle
lahf
mov
insl
fsubrl
addr16
add
push
xlat
loope
ret
inc
lods
push
stc
jb
leave
adc
and
subb
subl
mov
pop
and
mov
mov
mov
mov
push
push
cltd
or
scas
xor
push
mov
mov
mov
leave
jnp
inc
pop
and
mov
pusha
mov
lds
pop
ret
pop
rorl
das
mov
fwait
outsb
popl
xor
adc
das
jae
mov
xorb
fisttpll
cmpsl
push
xchg
stc
cmp
cmp
into
jg
rcrb
aam
shr
rcrl
inc
xor
stos
fwait
adc
orb
push
jg
xchg
stos
and
cmp
xlat
sbb
outsl
stc
sti
pop
pop
xchg
insb
lock
into
adc
sbb
mov
and
inc
dec
idivl
insl
idivl
out
sub
testb
sbb
roll
inc
xchg
ffreep
scas
sub
stos
cmp
and
push
xchg
jp
xchg
push
stos
stos
loopne
pop
push
cmp
xor
inc
leave
dec
mov
daa
rorl
or
adc
cmp
imul
or
out
pop
sub
inc
adc
insb
out
sub
jnp
and
ret
cmp
and
inc
fsubrs
inc
jecxz
fwait
mov
lsl
push
or
mov
loop
incb
sti
xchg
std
xchg
inc
xor
fsubp
fs
pop
dec
stc
sub
mov
out
adc
lahf
or
adc
or
sbb
loopne
push
mov
out
pop
adc
xchg
adc
xlat
out
fnstsw
pop
cltd
sahf
push
xor
or
xchg
sbb
aaa
sahf
int3
test
and
aas
pop
fistpl
jae
orl
fldln2
sahf
xlat
add
pop
adc
jns
test
fbld
lcall
lock
icebp
lcall
sub
or
rcll
inc
mov
outsl
jae
lret
pop
cmpsl
mov
cmp
dec
cld
insl
rol
popf
in
out
enter
xchg
push
cmp
sub
cmpsl
and
jp
stos
aam
xchg
sub
mov
shrb
push
mov
pop
icebp
das
mov
lcall
dec
mov
in
jg
stc
and
xchg
pushf
dec
clc
xchg
sbb
std
data16
pop
rol
test
subb
dec
add
mov
negl
scas
das
add
icebp
jp
mov
stc
inc
cltd
jle
adc
hlt
pop
mov
push
ljmp
and
and
pop
mov
inc
xor
cmpsb
inc
aad
pusha
sub
jg
adc
mov
push
fcompl
jae
dec
movsl
pop
mov
inc
std
cmp
aam
jg
les
test
fsts
mov
popl
mov
sbb
idivb
xor
lret
and
lods
test
cltd
insl
inc
dec
test
inc
int3
push
xchg
dec
xlat
aam
out
jge
js
and
or
out
inc
mov
les
out
into
rcrb
imul
pop
xchg
mov
dec
imul
pop
arpl
dec
pushf
mov
loope
adc
add
mov
lea
fs
cmpsb
mov
movsl
ds
rcr
lret
fisubrs
jp
mov
call
and
or
lea
int3
push
filds
xchg
jp
dec
cwtl
jmp
and
jmp
dec
push
or
xor
push
pop
ss
lock
scas
rcrl
test
lcall
enter
push
and
xchg
mov
ret
add
push
rcrb
fildll
and
out
xor
out
stc
stos
popf
out
mov
in
lahf
dec
add
fcomi
jg
in
std
jg
fsubrs
add
jno
add
xchg
dec
push
or
add
adc
inc
or
jecxz
ficoms
out
or
xchg
dec
sub
xchg
sbb
ljmp
imul
push
rcrl
jae
fisubrs
popf
bound
cmp
adc
sbb
fldl
push
inc
fimuls
pop
push
or
or
jecxz
arpl
imul
mov
mov
cs
mov
loope
push
xor
rcll
cmpsb
xor
lods
sub
and
mov
leave
fwait
jp
cmp
sti
fimuls
inc
aas
lcall
inc
lds
lahf
ret
inc
mov
or
test
push
inc
aas
movsl
pop
mov
sbb
insl
mov
add
xor
pop
dec
nop
pop
adc
nop
dec
cld
and
out
mov
fsubs
mov
loopne
and
je
aam
jge
or
inc
inc
mov
in
dec
je
popf
dec
jg
mov
add
ret
mov
imulb
push
xorl
lcall
jmp
jnp
inc
les
loopne
adc
out
push
push
int
dec
cmp
sbb
mov
adcl
xchg
mov
or
xchg
test
fnsetpm(287
sbb
cmp
jnp
jle
stos
outsb
out
xchg
adc
aas
cmc
inc
xor
sub
inc
mov
mov
adc
repz
cmc
cmp
xchg
sub
cwtl
inc
mov
cmp
hlt
push
xadd
mov
ss
mov
mov
and
xlat
xchg
xchg
pop
test
xchg
mov
test
cmp
shll
sbb
push
push
cwtl
xchg
xlat
in
or
iret
enter
xor
arpl
sbb
scas
enter
aaa
fsubrl
stc
pop
movsb
popf
sti
rorb
or
xchg
jbe
inc
dec
aam
ror
inc
mov
js
lahf
pop
ds
in
mov
in
das
mov
imul
rcrl
ret
subl
in
and
scas
jecxz
movsl
cs
or
sti
das
push
icebp
jp
addr16
out
imull
xchg
in
jbe
mov
out
data16
xchg
and
and
nop
xchg
xchg
inc
mov
inc
icebp
and
les
sub
arpl
test
sub
stos
adc
gs
push
and
arpl
rcl
or
std
jle
cltd
jnp
xor
jb
iret
mov
sub
adc
stos
xchg
leave
lock
mov
xchg
mov
pcmpeqd
mov
dec
or
cwtl
roll
rorb
sarb
mov
adc
push
loopne
add
cmc
sahf
pop
sub
shlb
test
inc
rcl
mov
inc
cmp
cs
aas
repz
das
xor
lods
add
ljmp
lret
rorb
xor
jae
add
xchg
int3
push
sarl
movsl
std
pop
fsubrs
sub
pop
pushf
push
jg
fs
sbb
std
jns
xchg
pop
fwait
pushf
out
shl
and
inc
push
mov
mov
adc
sbb
pop
dec
cwtl
test
xlat
adc
test
mov
push
push
inc
imul
fsts
ror
data16
aas
aas
outsb
in
ja
mov
cmpsb
dec
xchg
pushf
sub
jno
push
inc
cmpsl
in
push
lods
xchg
dec
sti
je
push
push
or
test
jg
dec
cli
jg
ret
aam
out
leave
push
fcoml
xchg
cmp
cli
aam
push
jno
xor
insb
inc
xchg
jl
mov
cmp
hlt
insb
test
loopne
jecxz
daa
fxch
jmp
stos
jge
cmp
wrmsr
mov
gs
add
jbe
iret
adc
shrb
popf
push
or
imul
mov
xor
add
shl
adc
add
xor
frstor
pop
stc
jb
shll
and
repz
jo
mov
xor
mov
mov
mov
jle
sets
add
cmp
leave
filds
outsl
xchg
repz
push
push
pusha
ljmp
xor
adc
hlt
cmpsb
repnz
cli
repnz
cltd
pushf
es
push
pop
lcall
mov
xchg
aad
xor
xchg
or
or
fsubl
add
adc
dec
pushf
out
inc
mov
lods
popf
pop
loopne
or
push
addr16
ret
sbb
pop
dec
data16
pop
mov
jae
mov
in
iret
aam
cmp
mov
xchg
inc
je
ss
cmp
push
xor
xor
or
inc
imull
cmpsb
sub
dec
std
mov
aas
mov
or
pop
into
out
in
jne
inc
add
mov
dec
sbb
and
fldt
jl
cmpl
xchg
arpl
iret
sarl
mov
rorb
sbb
lock
mov
mov
insb
lods
mov
inc
xor
jecxz
jae
xchg
mov
sub
pop
ret
sub
cwtl
loop
stos
lods
aas
mov
iret
mov
aas
das
push
inc
cmp
pop
ss
imul
inc
js,pn
vpunpckhqdq
or
inc
inc
aaa
aad
imul
mov
pop
pop
mov
ja
jnp
sahf
mov
mov
rcrl
adc
push
xchg
lret
add
xchg
xchg
pop
mov
xchg
sbb
ds
xchg
shr
fsubl
inc
je
cs
add
cmp
inc
jb
mov
jl
jb
das
insl
lcall
jae
xchg
or
push
dec
add
pop
loop
into
sarb
and
ljmp
lret
push
push
pop
mov
pop
pushf
ss
xor
dec
pushl
fdivrl
jmp
test
fsub
sbb
out
ja
push
push
mov
out
ljmp
mov
clc
push
outsb
stc
adc
int3
call
xchg
xor
pop
mov
adc
add
add
add
out
les
push
bound
add
or
jmp
and
add
mov
ficompl
ficomps
movsb
sub
bound
data16
and
enter
jae
out
pop
rcl
outsb
cld
mov
or
cmc
out
mov
lret
mov
out
mov
aam
ficoml
push
pop
pop
mov
mov
pop
xchg
sbb
jbe
shl
cmp
xbegin
adc
inc
stc
inc
pop
test
scas
sahf
ja
lret
test
test
dec
loope
mov
pop
pusha
ss
js
aas
cltd
les
and
test
mov
cwtl
push
jno
mov
add
push
push
or
pusha
pop
data16
adc
lahf
scas
ss
movsl
push
test
push
cwtl
push
fwait
mov
cld
in
movsb
std
testb
repz
jge
and
sub
sub
jmp
mov
leave
mov
mov
mov
std
iret
test
or
jl
or
dec
pop
fs
rcrb
inc
mov
arpl
inc
push
or
inc
fdivs
xor
xor
push
sbb
popa
mov
mov
in
popw
or
sbbb
out
jg
ss
add
sbb
xchg
adc
and
movsb
mov
push
dec
push
pop
mov
sbb
pop
arpl
int
adc
inc
stc
inc
out
hlt
out
nop
orl
mov
out
outsb
lahf
nop
or
lods
sub
out
aad
sahf
and
enter
arpl
pop
jmp
popf
test
stos
imul
jecxz
add
cs
cmp
xor
jb
loop
cmp
jo
dec
pushf
popa
adc
xchg
cltd
ffreep
inc
mov
adc
lahf
into
dec
out
push
bound
lret
cltd
fwait
loopne
addb
in
ljmp
out
xor
pop
loopne
in
xor
pop
sub
cli
inc
inc
xchg
jecxz
mov
cli
repz
dec
in
out
ss
shlb
stos
xor
pop
inc
mov
sbb
das
xchg
dec
xchg
xor
cmp
xchg
mov
addl
inc
inc
insb
scas
cld
jbe
and
pop
or
insb
rolb
mov
mov
mov
inc
cmpsl
pop
stos
mov
jno
scas
push
cltd
pop
mov
icebp
lods
mov
sahf
in
xor
inc
mov
cmp
pop
cs
inc
mov
inc
jno
es
fcoms
fistpll
mov
fimull
inc
ja
daa
add
test
or
enter
add
push
sahf
sbb
test
call
push
fbld
sbb
fiadds
xor
gs
js
shrb
cmpsl
xor
pop
popf
inc
dec
je
mov
jle
push
or
adc
pushf
xchg
jg
sub
arpl
fwait
jge
clc
int3
mov
sub
mov
pop
adc
or
push
pop
pop
ror
fmuls
loopne
xor
mov
and
ficoml
in
fisubrs
imul
cmp
jle
enter
add
or
or
mov
pushf
popa
fldl2t
pop
aam
dec
insb
mov
dec
mov
and
out
cmpsl
sub
inc
jp
rolb
pushl
xchg
mov
cmp
in
in
out
pop
cwtl
sbb
xchg
dec
stos
dec
outsl
fcmove
xor
pop
and
push
int
mov
xchg
scas
xor
movsl
push
fnstsw
fistpl
or
pushf
insb
push
xor
leave
push
inc
rep
sbb
popa
ljmp
mov
seto
cmpsl
add
mov
pop
bound
bound
and
out
cli
lods
push
inc
mov
inc
lds
mov
sbb
or
mov
push
xchg
test
xor
sahf
daa
mov
jmp
movsl
sub
and
mov
sub
mov
add
adc
ljmp
fiadds
mov
mov
fiaddl
jle
mov
pcmpeqb
and
movsb
pop
setp
cwtl
orl
in
outsb
and
jmp
out
mov
fistps
pop
sub
cmp
jne
data16
mov
jns
push
mov
jns
cli
fucomp
and
cmp
mov
mulps
test
mov
mov
and
cmp
aaa
sbb
push
sub
jae
and
xor
int3
add
or
jno
mov
cmp
scas
scas
push
cmp
push
aam
out
lcall
mov
roll
xchg
popf
sub
xchg
sbb
add
cli
jl
xchg
cltd
cmpsb
outsl
call
scas
jl
daa
xchg
sbb
jle
ror
push
aaa
cmp
es
in
sub
mov
and
lcall
les
mov
shrl
fmulp
adc
stc
cmpb
popf
shll
mov
and
lods
cmpsl
sbb
sub
ss
sub
ljmp
cmc
mov
jmpw
mov
shrl
dec
test
test
mov
in
sbb
push
ret
test
jae
xchg
or
out
xorb
sti
gs
xor
mov
sub
std
pop
push
fsubl
sbb
rcl
inc
mov
mov
mov
pop
pop
rcll
cli
je
rclb
sti
xor
jno
mov
out
mov
lds
or
ret
sbb
inc
cmpsb
sub
sbb
push
pop
xchg
cmp
jne
out
js
out
shl
mov
mov
cmp
jne
jno
sbb
orl
cli
mov
cmc
ja
out
jp
mov
addr16
push
ret
pop
mov
pop
test
fcmovnbe
outsb
ja
imul
pushf
repnz
cltd
xchg
xchg
xchg
mov
sar
mov
adcb
jae
add
or
xchg
fisttps
in
push
xor
sti
sti
sub
mov
add
inc
xlat
js
and
push
xchg
notb
mov
push
dec
pusha
or
sub
adc
outsl
dec
xor
popf
pushf
push
scas
cmp
lret
pop
jns
ja
addr16
sbb
shrl
fmuls
loopne
jmp
dec
call
inc
sbb
data16
les
xchg
testl
shrl
or
push
inc
adc
mov
iret
rcll
hlt
mov
jecxz
jns
or
je
add
jne
mov
cmc
xchg
mov
rep
xchg
iret
iret
jbe
xchg
orb
sbb
add
or
mov
ja
stos
pop
fisubrl
xor
and
push
xor
pop
and
cmc
adc
daa
mov
xchg
xor
push
pop
xchg
jmp
xchg
imul
xlat
pop
push
shll
rolb
cmp
imul
adc
fs
sub
mov
cltd
xchg
stos
xor
addl
into
sbb
inc
int3
push
mov
hlt
int
inc
leave
jg
xor
mov
xchg
mov
lds
pop
jne
or
add
mov
sti
insb
cwtl
cmpsb
pop
les
xchg
popf
cmpb
loopne
xorb
push
add
cld
cmp
stos
xor
jmp
rolb
std
sbb
add
cmp
add
pop
cli
push
push
outsb
xorl
xchg
stc
jmp
lds
jge
pusha
cmpl
mov
ss
jnp
or
mov
scas
ror
sbb
cmp
push
sub
push
xchg
mov
push
pop
stos
call
loop
fsts
out
jmp
test
mov
xchg
outsl
xchg
and
lea
or
sahf
xlat
or
jb
ret
cmpsl
pop
fiadds
test
orb
stc
or
das
clc
adcl
adc
xor
adc
mov
sub
stos
lret
push
push
inc
jg
into
adc
sti
icebp
lds
js
aad
mov
sbb
fstpl
cli
sarl
fs
lock
jecxz
lds
push
movsb
mov
dec
mov
rcl
or
clc
lods
test
js
imul
in
ljmp
jl
pop
xlat
cli
add
out
lcall
dec
les
sbb
inc
add
int3
lcall
icebp
fimull
lds
ds
mov
pop
pop
xor
test
fidivs
test
xlat
push
ficoml
fcos
loop
pop
sbb
fbld
cmp
ret
mov
mov
dec
cmp
leave
xchg
jbe
pop
lods
scas
std
test
gs
add
cwtl
dec
mov
rcrl
mov
arpl
insl
mov
adcb
incb
sbb
jmp
test
mov
pop
mov
adc
inc
or
dec
enter
xchg
scas
cmp
movsl
push
lds
ret
mov
inc
das
test
fisubrl
inc
ret
jl
mov
mov
sub
add
xchg
pop
mov
xchg
sbb
sub
pop
cmp
xchg
es
mov
xchg
mov
imulb
fcmovb
mov
movsl
cs
sbb
xor
ljmp
cld
out
mov
sbb
orl
sets
push
jl
push
mov
cmpsl
pop
into
push
cmpsl
dec
xchg
sbb
test
push
fsubrl
notb
out
movsb
push
out
sub
imul
push
cmp
or
adc
mov
inc
push
add
push
jae
ss
or
add
popa
push
cmpsl
popa
add
push
popa
adc
cmpsl
cltd
je
mov
push
inc
hlt
lock
das
data16
or
mov
mov
xchg
repnz
add
pop
enter
jmp
mov
dec
cmp
jge
sbb
aam
repz
cltd
stos
lods
cmp
inc
imul
or
mov
in
rol
test
std
dec
inc
xor
test
dec
adc
pusha
ljmp
js
mov
call
pop
lret
movsl
mov
stos
and
ds
mov
sub
or
rcrb
xor
push
or
insb
imul
hlt
dec
pop
inc
inc
jb
add
pop
fildll
insb
jne
dec
arpl
jbe
cltd
in
dec
push
dec
mov
mov
out
rcr
fildl
gs
xchg
push
cmpsl
pop
mov
fisubrs
nop
mov
and
popa
jns
inc
push
adcb
sbb
mov
movsl
sbb
cli
jle
cmp
mov
arpl
pop
mov
cmp
mov
test
es
xor
add
or
adc
sahf
add
jne
into
push
lret
mov
fstsw
sub
lods
pop
nop
fwait
xlat
out
lds
arpl
or
mov
addr16
xorb
xlat
dec
sbb
into
add
or
xlat
cmpsb
pop
mov
xchg
add
cmpsb
xor
mov
xchg
sbb
pop
gs
inc
pop
in
lret
arpl
icebp
inc
cmp
pushf
jle
jne
jge
bound
jl
seto
or
cmpsb
xchg
cmp
pusha
xor
inc
ja
xlat
push
repnz
jmp
fimull
stc
test
leave
xchg
enter
in
fsub
xlat
aas
xlat
popa
ljmp
sub
cs
repnz
rcll
xor
dec
fdivrs
xchg
scas
aad
jne
sub
sahf
pop
jns
inc
inc
outsb
repz
add
ds
cmp
sti
pop
data16
loopne
gs
aaa
cmpsb
xlat
pop
xchg
je
mov
pop
pop
add
jge
call
jo
sub
addl
popf
scas
popa
jmp
cmpsb
stos
and
pop
adc
lret
pop
mov
and
dec
cmc
test
ljmp
mov
push
inc
mov
clc
pop
xchg
ss
fmuls
sub
jb
pop
pop
rclb
out
mov
mov
push
inc
inc
idiv
jge
int
mov
sbb
mov
sub
lcall
xchg
and
int
insb
sarb
in
pop
dec
pop
sbb
xlat
popa
decb
movsl
dec
and
out
cmc
aas
lds
xor
push
iret
pop
sub
dec
mov
fstps
test
sbb
sbb
aad
cmp
sub
add
mov
hlt
jmp
decb
loop
mov
sub
or
out
adc
out
add
sub
daa
or
int
dec
ret
imul
nop
dec
mov
xchg
inc
push
jae
inc
cmc
and
dec
test
icebp
sbb
mov
push
bound
sbb
cmpsb
andl
enter
hlt
cmc
mov
or
xchg
pop
popa
push
dec
xlat
loope
hlt
and
jl
cwtl
and
pop
cwtl
cmp
xchg
push
inc
add
lock
mov
xor
xor
test
stc
insb
mov
enter
add
pushfw
jae
fsub
pop
dec
xlat
popa
ljmp
jl
inc
cmc
int3
out
lret
gs
or
adc
addb
push
std
xchg
call
jno
sbb
stos
out
jno
mov
insl
imulb
loop
push
in
imul
cmp
stos
xor
dec
mov
push
negl
imul
xor
dec
inc
inc
insb
imulb
imul
loop
xor
movsb
movsl
cli
add
dec
mov
xchg
push
ja
mov
insl
pop
andl
jb
xchg
loope
lret
pop
pusha
sahf
push
xor
pop
sub
xor
cmpsl
xor
lahf
xlat
test
mov
iret
inc
rdtsc
out
insb
push
fcomps
push
xor
shrb
add
stc
xor
jbe
mov
mov
stc
cmpb
es
pop
jecxz
lret
imul
popa
ljmp
sub
stos
out
mov
sub
xchg
pushf
sar
xchg
sbb
dec
jb
xchg
test
pop
xor
mov
cmp
rcrl
sti
jne
push
shrb
cmc
lods
mov
xor
xor
mov
js
aad
mov
push
mov
ss
push
xor
aam
dec
pop
rcrl
in
add
pop
cltd
popf
xor
pop
pop
addb
xlat
xchg
mov
lret
repnz
jnp
add
insb
bnd
sbb
mov
arpl
push
sbb
cltd
mov
sbb
dec
in
shl
arpl
sbb
mov
xlat
cmpsl
std
ret
pop
or
jne
xor
dec
ljmp
jae
and
sub
stc
inc
lds
sbb
loop
push
leave
ret
test
loop
mov
push
lcall
jne
or
dec
cmp
int3
push
js
decl
push
jo
pop
je
jo
pop
adc
movq
xchg
cmc
dec
push
dec
loope
aam
cwtl
and
pop
jp
addr16
sub
mov
aad
shrb
arpl
push
sub
dec
aam
push
push
cmc
cs
xchg
and
jecxz
shl
js
cmc
mov
push
or
lods
aam
push
xchg
or
xchg
jns
lret
outsb
adc
stos
cmc
aam
jb
fiadds
xchg
push
push
jb
aaa
mov
and
rolb
in
dec
push
add
cmpsb
adc
adc
add
aam
loop
push
add
out
ficomps
dec
lock
jbe
sbb
cmp
int3
push
fucomip
adc
rcrl
ret
je
outsl
inc
dec
insb
jne
fwait
arpl
sarb
les
pop
sbb
mov
inc
rolb
loopne
or
pop
push
fstpt
sub
cmp
cmp
cmp
xlat
nop
inc
lds
out
imul
sub
inc
stc
test
xor
js
ficoms
addb
inc
hlt
scas
aad
jne
sub
mov
adc
subl
out
int
int3
push
fists
les
mov
mov
std
scas
push
out
js
lret
negb
push
mov
adc
push
popf
cmp
cmp
outsl
popa
daa
loop
xchg
sbb
icebp
and
bnd
pushf
dec
dec
sub
in
mov
cmpsl
sbb
sbb
andl
inc
and
adc
jl
ss
sbb
ljmp
xlat
ljmp
push
sbb
jp
aaa
outsl
jno
fimuls
inc
jae
xor
cwtl
cmp
lahf
ret
lock
jns
cld
push
sub
sub
cmc
jns
ja
sbb
cmc
cmpsb
popa
adc
cltd
fistps
lret
mov
stos
sarb
push
js
add
ss
stos
inc
int
or
lcall
fsubl
push
loopne
sahf
cmp
adc
adc
sub
daa
jge
and
jl
dec
pop
sbb
int3
inc
in
sahf
xchg
dec
test
add
daa
sbb
lahf
jne
sbbl
inc
adc
fsubp
pop
ret
pop
leavew
stc
push
xor
jg
cmpsb
test
call
lret
mov
sub
xor
pop
cmp
sarb
push
cmpsl
cmc
sbb
int
cmpsl
dec
push
dec
iret
dec
shlb
ja
pop
in
cwtl
jmp
inc
lahf
sub
push
in
or
mov
or
push
mov
loop
orl
mov
dec
push
arpl
mov
fisttpl
mov
outsl
adc
js
dec
neg
dec
outsl
ret
out
scas
cmp
pop
subl
jl
call
insb
push
in
aas
gs
push
iret
dec
lds
ficompl
loope
push
loopne
call
in
out
sbb
xchg
fstps
les
xchg
or
xchg
loopne
push
in
cmp
filds
dec
aam
fsub
movsb
cli
je
clc
in
push
out
js
cli
out
push
daa
mov
adc
shll
mov
cmp
lret
rorb
lea
icebp
arpl
jno
sbb
sbb
or
sub
dec
inc
int
jb
orb
xor
inc
jns
mov
xor
std
xor
imul
mov
mov
add
cltd
pusha
in
jbe
je
lods
es
lds
mov
sets
test
popf
out
sbbl
pusha
jmp
inc
xchg
cmp
mov
push
push
ljmp
pop
jecxz,pt
sti
fsub
aam
xlat
popa
xor
dec
add
pop
addr16
and
out
push
pop
pop
in
mov
jecxz
pop
jecxz
insb
jg
scas
mov
sbb
nop
pcmpgtd
jns
xor
js
popf
inc
sahf
cmpsl
lcall
mov
out
cmp
in
xchg
dec
rolb
dec
push
adc
dec
dec
orl
iret
fmul
dec
into
push
ljmp
and
cmp
pop
mov
or
dec
jmp
inc
cmp
push
lcall
mov
outsl
stc
cmp
mov
pop
loop
and
pop
push
sbb
daa
sbb
popf
ljmp
mov
push
jecxz
arpl
into
incb
aad
fcoml
lods
mov
fst
ret
mov
cmp
out
mov
hlt
pop
lret
push
cmp
out
mov
inc
int3
int
xchg
jg
push
fs
lret
fmulp
pop
xor
push
cmpsl
or
shlb
scas
xchg
jo
inc
fildll
inc
adc
push
popf
adc
lret
cmp
cmpsl
sub
or
pop
imul
xchg
loope
outsb
call
mov
rcll
aaa
shll
dec
jns
int3
mov
add
jl
aas
mov
xor
hlt
push
push
nop
pop
adc
outsl
fmul
xchg
into
push
mov
out
mov
rep
ss
lock
and
dec
mov
mov
or
call
cmp
fcomps
mov
mov
add
mov
ljmp
push
sets
dec
mov
subb
jmp
xor
jmp
aaa
loope
sbb
push
and
or
cmpsl
jo
mov
ja
out
outsl
inc
pop
or
aaa
dec
pop
cmp
leave
inc
int3
push
jmp
cmpl
test
sub
into
imul
mov
cwtl
add
sti
rclb
fildll
je
pop
cwtl
cmp
mov
mov
dec
call
inc
int
mov
jg
fcmovbe
movsl
cmpsb
push
jno
out
mov
or
lret
pop
test
mov
js
mov
pushf
daa
aas
xchg
mov
divl
push
into
mov
mov
idiv
orb
xchg
pop
imul
mov
xchg
shl
pop
rcl
lret
in
fidivs
xor
add
add
pop
jns
rolb
mov
xchg
jo
mov
jle
cld
dec
cmp
stc
mov
iret
sub
push
fwait
mov
jmp
xor
bound
loope
scas
js
adc
inc
mov
cmp
cmpsl
and
jbe
mov
bound
inc
hlt
out
mov
push
mov
out
stc
idivb
push
iret
cmpl
orb
aaa
jne
adc
xchg
add
and
push
mov
add
insb
xchg
pop
les
push
inc
mov
sbb
movsb
xor
push
shl
sti
cmp
dec
or
imul
loop,pn
add
outsb
out
xchg
xor
mov
mov
add
addl
push
jl
and
mov
mov
pushf
xchg
inc
jne
cli
push
lret
mov
out
sbb
jle
adc
pop
cmp
enter
arpl
mov
cld
sbb
cli
repz
iret
xor
push
push
dec
fidivrs
cmpsb
push
or
les
repz
inc
out
outsb
sub
inc
lds
dec
icebp
sub
pop
loope
dec
lret
aaa
and
cmp
or
and
fcoml
or
or
repnz
scas
fildll
fstpt
es
or
sbb
sbb
std
mov
data16
in
out
xor
aam
ljmp
add
int
xchg
cmp
fmul
adc
notb
out
je
fs
pop
jecxz
rorb
or
or
std
outsl
imul
mov
test
pop
loope
pop
push
popa
fs
xchg
add
ss
adc
pop
mov
es
iret
jbe
xchg
orb
jl
std
xchg
sbb
sbb
fisttpll
ds
jmp
xor
adc
inc
and
daa
xor
dec
fistl
mov
movsb
out
in
in
lret
jle
cmpsl
fmuls
inc
mov
push
nop
mov
cli
loope
xor
dec
push
add
cmp
cmp
in
and
xchg
mov
outsl
pop
xchg
jmp
lret
stc
test
sub
dec
mov
testb
ljmp
pop
nop
lds
cli
push
leave
stc
stos
pop
out
pop
add
adc
lahf
or
rorl
ret
inc
leave
push
js
sti
mov
or
insl
lds
cmpsl
and
or
xorb
xchg
or
xchg
xchg
push
out
inc
fisttps
xchg
mov
xchg
add
imul
ljmp
iret
loop
mov
cmp
iret
xchg
sbb
pop
xor
out
jnp
test
pop
mov
and
dec
cmc
mov
sbb
and
jmp
addr16
outsb
xchg
into
sub
ds
pushf
jnp,pt
hlt
and
cld
test
mov
les
stos
lods
xchg
cwtl
movq
inc
lds
pop
cmpb
push
mov
xchg
jg
orl
loopne
pushf
sahf
xor
push
filds
ds
inc
leave
lods
scas
out
mov
add
test
aas
fsubrs
cmp
sbb
inc
movb
sahf
mov
inc
sub
or
and
cwtl
adc
dec
add
push
enter
and
or
into
adc
inc
mov
cmp
jne
sbb
ds
decb
pushf
inc
iret
aaa
mov
cmc
push
std
xchg
xor
mov
cmpsb
div
push
in
jbe
xor
lea
pop
jmp
cwtl
and
pop
inc
adc
mov
cmc
mov
jle
dec
pusha
sbb
in
cmp
movhps
and
aam
xlat
dec
ja
xor
lcall
mov
lret
push
pop
inc
cld
cld
stos
gs
xor
std
lahf
jl
cmp
cmp
cmp
xchg
xor
ljmp
std
mov
ss
orl
mov
loope
stc
jmp
ret
mov
sbb
cmp
loopne
jb
xchg
test
dec
call
mov
mov
inc
daa
sub
test
lret
push
mov
imul
in
ljmp
sahf
daa
mov
dec
push
imul
and
cmc
roll
jg
jae
inc
cmp
fsubl
jae
mov
subb
sub
sub
mov
imul
pop
pop
jb
scas
mov
ror
push
ds
sar
mov
cmp
mov
cmp
sbb
int3
dec
and
dec
shrl
test
inc
std
orl
ja
aad
faddl
cmpsb
xchg
push
lahf
mov
jmp
sub
cmp
mov
test
adc
cmpl
std
inc
cmp
sets
stos
xor
imul
or
xchg
pushf
push
clc
xchg
sbb
ficomps
aam
rcrl
xchg
scas
pop
mov
lock
jecxz
dec
xchg
enter
push
pusha
pop
or
filds
cmp
repz
test
sub
hlt
sub
addr16
popa
ljmp
cmp
rorb
mov
nop
adc
mov
out
adc
mov
ljmp
adc
fistpll
sub
fiaddl
xchg
pop
adc
sub
push
mov
xchg
out
jp
stc
jg
outsb
clc
andl
add
dec
es
sbb
mov
mov
and
pop
fs
cld
dec
mov
lcall
lock
inc
mov
mov
movsbl
push
dec
xchg
pop
and
int3
adc
test
xor
jno
sbb
mov
fidivl
xchg
inc
out
movsl
ja
mov
ss
mov
add
andb
or
frstor
and
push
inc
fistps
gs
dec
cld
decb
negb
mov
rolb
andb
popa
xchg
or
cmp
mov
xchg
sbb
jl
cltd
sbb
push
into
jne
add
int3
js
adc
mull
dec
pop
imul
js
sbb
iret
jbe
xchg
xor
xor
orb
pop
or
jmp
arpl
cmc
adc
xchg
scas
jge
push
xchg
mov
sub
shl
adc
mov
xor
dec
push
adc
xchg
sbb
dec
fistpl
sti
lock
les
mov
pop
push
xchg
or
jne
les
cli
jae
jbe
lods
dec
mov
xchg
add
outsb
bnd
gs
lods
xor
cmp
mov
or
cs
cmp
ljmp
stos
pop
xlat
sbb
mov
jl
sub
mov
dec
je
ficoml
aam
std
inc
lods
push
mov
cmp
rolb
inc
cmpsl
rcl
in
xchg
sti
jne
pop
roll
int
mov
or
adc
das
jl
mov
lret
loopne
jnp
mov
xchg
dec
aaa
inc
movsl
lds
xchg
fsubl
aam
push
sub
xor
imul
push
xchg
in
lods
data16
imul
call
pop
lods
arpl
add
cli
sbbb
movl
ds
insl
outsl
mov
gs
fbld
lret
shrb
xchg
pop
adc
pop
bound
rcr
mov
ljmp
psllq
xchg
outsl
lcall
fmulp
pop
xor
xchg
push
cmpsl
or
jb
scas
xchg
xchg
mov
ljmp
sub
rol
movsb
iret
dec
cmp
dec
mov
loopnew
mov
aam
out
dec
pop
pop
jg
jns
ss
or
adc
jecxz
ret
cmp
mov
sub
xchg
sub
mov
jne
cmp
incb
nop
push
ljmp
test
sub
add
and
pop
test
mov
sbb
cmpl
pop
mov
push
xorl
adc
xor
and
rcl
mov
orl
adc
int3
cs
sub
faddl
outsl
inc
xchg
fimull
push
mov
xor
xchg
mov
push
mov
push
in
push
leave
cld
popf
and
jmp
xor
psllq
popf
mov
es
mov
xor
xor
lahf
sub
lcall
jne
pop
je
mov
mov
pop
icebp
imul
fidivs
adc
in
test
sbbl
adc
add
xor
dec
ret
or
pop
jecxz
mov
push
popa
fs
std
and
mov
ficomps
je
scas
out
aas
pop
dec
adc
rcrb
movsb
clc
cmpb
and
lods
ss
insl
aad
jns
mov
daa
xor
cmpsb
mov
ljmp
xlat
inc
icebp
jge
js
xor
stos
add
fidivs
loop
popf
xchg
push
and
jns
inc
dec
and
sti
test
jbe
orl
xchg
cmp
out
dec
sarl
mov
add
push
xor
clc
xorl
scas
push
xchg
lea
outsl
out
add
mov
cmp
mov
stc
fstl
ss
ficoml
and
add
iretw
jns
pop
inc
js
jecxz
les
sbb
orl
scas
nop
cltd
dec
mov
sbb
std
xchg
and
dec
adc
inc
dec
subl
dec
std
cs
lcall
popf
scas
sbb
dec
dec
and
xorb
push
jae
inc
sbb
fadd
sbb
adc
inc
xor
insb
out
mov
or
push
cmp
scas
lods
addb
mov
cwtl
and
pop
pushf
mov
jo
inc
push
test
subl
dec
cmp
pop
dec
or
xchg
stos
cmp
sub
mov
xlat
push
out
cmp
mov
shrb
mov
sub
subb
movsl
cmpsl
add
xorb
xor
inc
lret
inc
leave
roll
leave
mov
sub
icebp
loop
bound
insb
loopne
dec
push
mov
dec
aam
cmp
or
mov
divl
mov
sbb
out
mov
int3
std
xor
rol
aaa
je
ss
ds
sub
cmp
mov
mov
inc
sbb
icebp
test
dec
push
mov
pop
fiaddl
popf
push
fmul
add
mov
inc
and
cmpsb
adc
push
push
dec
xchg
jg
sub
arpl
jbe
fwait
in
int
pop
ret
dec
daa
pop
mov
sbb
psrad
ja
lea
sub
arpl
sbb
add
jmp
test
add
inc
jmp
mov
inc
test
sahf
nop
or
in
push
pop
mov
inc
jo
cmp
sub
dec
xchg
cmpsb
sarl
or
mov
enter
mov
xor
xor
inc
jle
jecxz
pop
mov
cmc
cmpsb
lcall
dec
scas
pop
adc
jle
add
imul
xchg
xor
xchg
div
daa
jnp
int3
sbb
shl
add
lea
dec
add
ret
push
addl
popa
mov
lret
jg
out
mov
mov
mov
sbbl
lcall
lds
mov
cmc
testb
lcall
or
fs
popf
cli
arpl
dec
add
mov
dec
and
adc
int3
xor
fs
shlb
ja
push
popf
ljmp
jne
fisttpl
or
mov
popl
push
insb
jne
mov
or
push
iret
xlat
es
xchg
sbb
push
push
sub
mov
aaa
push
dec
sti
mov
outsb
pop
xor
cmc
imul
loop
push
pop
mov
rcr
pop
cmp
fsubs
hlt
cmp
fs
dec
cmp
push
arpl
shlb
rcrb
divb
pop
arpl
incb
mov
sbb
clc
stos
jne
js
add
push
jne
mov
hlt
sub
ljmp
push
inc
rorb
ljmp
aas
test
and
cmpsb
callw
hlt
les
fiadds
push
inc
push
ja
mov
icebp
push
mov
xchg
and
xor
int3
mov
sbb
test
mov
into
cmpsl
xor
mov
insl
push
xorl
jno
xor
icebp
push
arpl
mov
and
cmc
sbb
cld
std
xor
push
leave
xorl
scas
push
int3
icebp
or
dec
mov
lcall
sub
stos
mov
xor
sahf
inc
rclb
int3
xchg
arpl
out
psrlq
jmp
xlat
mov
and
and
fcmovnu
lret
mov
adc
repnz
sbb
mov
sahf
dec
dec
stos
test
sbb
popw
or
jnp
add
or
aam
mov
clc
or
cmp
ret
popa
pusha
adc
xor
adc
jns
xchg
push
dec
into
neg
xor
dec
insb
sub
xchg
adc
je
or
pop
ss
nop
mov
mov
out
mov
push
and
push
outsl
xchg
data16
add
dec
sbb
data16
or
sub
mov
dec
jno
pushf
cmp
jno
mov
cmpsb
clc
sbb
mov
jl
push
in
idivl
inc
fimuls
mov
xor
push
jo
jmp
push
dec
scas
ficompl
pushf
jmp
inc
jp
in
mov
push
mov
in
iret
imul
jecxz
int3
das
cwtl
aas
adc
hlt
push
orb
push
push
or
fwait
mov
lods
shlb
inc
add
push
adc
or
adc
out
scas
and
or
ficoms
mov
pop
and
cmp
in
cmpsb
scas
rcrb
sbb
sub
push
jp
lock
aaa
shr
jae
pop
add
cmp
adc
add
sets
inc
jmp
repnz
movsb
push
lahf
je
cmpsb
int
or
lods
cmpsb
xlat
or
push
push
cmp
out
subb
xchg
pop
adc
cmp
lret
std
mov
leave
lret
push
lahf
cmpl
test
bound
fsts
pop
sbb
pushf
shlb
or
mov
bound
sub
iret
cmp
dec
shl
ror
xor
mov
cmp
pop
fstpt
jbe
fstl
xchg
ja
lcall
shlb
outsb
inc
add
in
cmpsb
scas
pusha
cmp
mov
fst
out
push
fmuls
push
fisubl
xchg
mov
mov
imul
movsl
jae
fnstenv
sub
outsl
jae
int
pop
xchg
add
aaa
daa
fsubrp
arpl
mov
in
sub
insl
daa
nop
sbb
decl
push
loope
stos
lea
jo
loope
xchg
and
mov
push
int
movsb
sub
pop
call
inc
sbb
fmull
cwtl
mov
sub
das
inc
shll
mov
adc
pop
nop
repz
add
lret
leave
daa
imul
fldenv
psubusb
popf
int3
bound
xchg
sbb
sbb
xlat
mov
lret
pop
jecxz
xchg
into
adc
mov
pop
mov
xchg
pop
fisttpl
int3
daa
mov
mov
movsl
mov
pop
lcall
xor
imul
jp
iret
dec
pop
add
or
ficomps
in
scas
dec
in
and
jne
shl
pop
arpl
push
in
mov
adc
test
adc
loope
popf
cmp
jb
sbb
or
xor
dec
pop
into
stc
mov
subb
sarl
pop
add
test
mov
inc
dec
shrb
pop
pop
sub
sbb
enter
pop
or
gs
add
les
pop
in
in
inc
mov
mov
shlb
leave
mov
dec
leave
daa
in
ror
cmp
xor
sbb
or
fs
jmp
cmpsl
pusha
jbe
jns
ss
insb
jecxz
dec
dec
mov
sub
iret
cmp
repnz
pop
lret
jno
pop
push
mov
lahf
test
xor
daa
mov
std
fwait
adc
je
movsb
pop
add
dec
jno
mov
enter
lods
loop
mov
mov
push
aad
ljmp
dec
scas
mov
fs
stc
adcb
fldt
dec
loop
cmc
jle
push
fwait
push
pop
xchg
adc
xlat
push
push
cmp
inc
push
push
das
insl
imul
cs
ret
sub
mov
sahf
dec
push
jmp
out
ja
into
aaa
rcr
mov
ljmp
inc
fucomip
mov
lods
and
aas
enter
adc
cmc
insb
mov
dec
incb
ljmp
jp
cmpsb
jo
out
js
or
mov
int3
in
cmp
int3
add
out
cli
lods
sbb
fldl
mov
cltd
and
xchg
outsb
in
mov
xchg
lock
nop
cltd
cmc
sbb
in
jb
gs
lahf
test
xor
daa
mov
aam
push
add
xchg
std
xchg
aam
jl
lcall
fsub
sub
xchg
fwait
aaa
mov
mov
fs
push
icebp
jp
sbb
pop
push
lods
arpl
out
dec
std
or
sbb
rorb
pop
mov
in
or
lods
adc
mov
push
repnz
xor
movsb
jle
xorl
and
mov
sub
push
stc
or
fdivrp
andl
les
std
out
xor
jo
push
jae
imul
xchg
xchg
jae
push
in
rorb
enter
cmpsb
ss
rcrl
je
pop
mov
in
mov
daa
xor
ljmp
test
inc
outsw
in
jmp
out
rolb
xor
insb
fstl
cmp
daa
xchg
lcall
test
lock
push
inc
mov
cmp
ds
ss
and
mov
xbegin
push
push
scas
jnp
jbe
push
jae
jae
jb
push
mov
jbe
mov
sbb
aad
mov
sbb
add
dec
xlat
loope
add
cs
lods
push
sub
cs
xchg
pop
fs
ja
push
jo
pop
scas
mov
mov
nop
mov
lods
fisubrs
mov
xchg
pop
in
xor
js
xor
mov
dec
and
leave
mov
lcall
popa
dec
lock
and
in
xor
and
fwait
jl
add
add
inc
in
movsl
mov
dec
xor
jb
ljmp
mov
stos
popf
jb,pt
mov
cmp
cmp
shl
add
sbb
lret
xchg
dec
push
jl
mov
stc
and
js
push
lcall
sahf
or
jae
pop
imul
repnz
pop
mov
adc
out
stos
pop
sbb
xchg
les
ljmp
rorb
mov
mov
mov
aaa
sbb
int3
jle
shrb
jb
fstl
xor
sub
xchg
push
inc
or
push
pop
xor
inc
int
popa
imulb
jecxz
adc
insl
bndstx
mov
add
cmp
push
loopne
popa
adc
and
jl
add
movsb
or
dec
in
xor
shl
push
mov
pop
icebp
insl
out
push
pop
mov
out
add
insb
xchg
pop
mov
mov
aaa
hlt
jno
or
imul
test
push
cmc
out
fbstp
or
insb
add
cs
imul
ss
dec
push
popa
fildl
mov
add
mov
incb
cs
xchg
lret
repnz
pushf
dec
inc
iret
aad
cmp
adc
jbe
pop
fs
scas
xchg
iret
inc
sbb
lods
fmull
dec
push
into
fisttps
pop
mov
test
out
cmpsl
xor
hlt
inc
dec
icebp
cli
insl
jle
jno
push
scas
jb
stos
xor
cwtl
and
push
int
hlt
or
jne
pusha
fnstcw
adc
sub
pop
call
dec
scas
jo
fiaddl
pop
adc
nop
mov
rcll
icebp
rclb
mov
cmpsb
bound
or
pop
std
cmp
movsl
aam
ret
push
mov
inc
inc
mov
out
rcll
sub
jb
add
mov
push
mov
stos
or
stc
push
cmpsl
sub
push
cmp
in
je
inc
nop
jae
mov
imul
jg
xchg
mov
xchg
push
repnz
in
jle
jp
push
cmpsb
div
sbb
push
mov
arpl
push
cmp
inc
xchg
add
cmp
ljmp
iret
or
add
nop
xchg
cmp
inc
mov
inc
xor
cmp
int3
fabs
or
pop
xchg
cs
pop
icebp
jl
fists
mov
mov
pop
rolb
scas
out
jno
xchg
mov
xchg
pop
pop
out
rorb
mov
jne
add
roll
bnd
roll
cwtl
pop
shl
mov
cmpsb
lahf
mov
imul
adc
rolb
sub
pop
movsb
repz
test
mov
ljmp
add
jg
cwtl
sbb
ds
in
xor
sbb
mov
sbb
push
xor
lods
ss
xor
data16
sub
cmpsl
out
lret
xor
mov
je
mov
scas
xor
dec
inc
add
cmp
andb
mov
scas
lods
call
jo
mov
inc
icebp
sub
xchg
das
jns
sub
dec
dec
xor
and
ljmp
or
jne
ficoms
xchg
push
inc
incb
arpl
ja
mov
mov
pushf
movb
test
push
mov
push
mov
out
lahf
xchg
or
imul
push
pop
cmp
cwtl
and
xor
js
stos
call
push
int
loopne
int3
leave
jno
dec
inc
cmp
repnz
aam
cmp
jnp
push
rolb
aam
setae
push
int3
pop
xchg
icebp
adc
push
push
stos
in
mov
ret
loopne
jg
add
loop
jne
das
cltd
inc
int3
loope
jb
aas
add
mov
mov
jo
iret
ljmp
loop
fsubrs
call
mov
fidivs
or
push
ja
mov
xor
xlat
aam
push
std
cli
cli
inc
cld
and
gs
fcoml
jnp
push
fcmovu
mov
xchg
pop
enter
lea
push
mov
lods
mov
test
gs
orl
xchg
std
xchg
inc
mov
mov
mov
fisttpl
js
push
xchg
sbb
std
scas
mov
jae
frstor
cmp
out
push
mov
fmuls
mov
inc
pop
push
and
scas
aad
mov
bound
incb
fbld
cmp
fisubs
and
cmp
pop
cmpsb
imul
sub
mov
jne
mov
adcb
inc
jae
aam
push
xchg
lea
fistl
icebp
jo
dec
lcall
sbb
loope
pop
jp
out
incl
adc
mov
jecxz
push
mov
in
clc
jbe
adc
pop
jns
mov
dec
jg
repz
shl
outsl
test
mov
scas
dec
lcall
test
and
ds
add
sbb
jne
les
and
mov
xor
mov
ret
test
add
cld
imul
das
mov
mov
xchg
dec
xor
xchg
lods
daa
subl
or
clc
add
inc
aas
adc
mov
inc
xchg
fstps
xchg
xchg
js
stos
syscall
inc
jns
test
jno
in
adc
push
xlat
adc
and
sbb
lcall
push
mov
insl
push
sub
or
je
cld
xor
sar
cmpl
repz
iret
fistpll
test
xchg
push
mov
ss
icebp
add
xchg
nop
fldt
imul
mov
aam
cltd
addr16
nop
dec
pop
rolb
mov
inc
or
mov
iret
mov
dec
and
mov
roll
outsl
pop
push
fld
out
lock
add
inc
xchg
loopne
mov
inc
fisttps
iretw
lcall
mov
sbb
dec
in
cmpsl
push
push
sbb
sbb
ljmp
mov
pop
xchg
out
xlat
add
mov
push
or
jp
cli
lods
lahf
call
mov
or
dec
pop
or
lods
pop
movsl
inc
cmp
aam
inc
jb
cld
jle
dec
push
pop
mov
in
sahf
cmpsb
clc
in
stos
pop
sbb
into
fisubs
cmp
mov
clc
pop
cmp
out
stc
fs
sahf
das
or
notb
xchg
sbb
out
scas
les
jp
aad
push
xorl
cmpsb
push
mov
pop
or
xor
push
or
ficoml
iret
orb
add
lods
stc
jb
leave
mov
in
int
or
sub
mov
xor
cmp
sti
bound
sbb
movsl
push
dec
mov
sbb
mov
fdivrp
mov
insl
fnop
imul
ljmp
cmpsl
mov
lahf
sub
rcll
scas
iret
or
loope
ss
pushf
adc
or
mov
add
loop
out
sti
outsb
lret
and
stos
stos
stc
mov
arpl
mov
test
mov
jecxz
jns
iret
into
sahf
sti
stc
repz
hlt
insb
js
addl
test
dec
cmp
add
je
mov
mov
clc
jae
add
add
fistps
pop
pop
push
out
inc
scas
pop
insb
mov
ljmp
pop
adc
cmp
xor
pop
sbb
cmp
ja
mov
mov
or
pushf
mov
and
adc
out
lcall
sub
pop
mov
jae
sub
sbb
dec
xchg
cwtl
fwait
test
cmp
sbb
pushf
cs
lahf
rorl
and
sbb
inc
cld
fmul
adc
arpl
aas
es
loope
and
cld
insl
out
enter
push
sub
or
test
cs
mov
sbb
ret
mov
dec
and
xor
sub
das
jmp
fnstsw
pop
mov
leave
test
cltd
addl
ret
out
pop
shr
imul
mov
sbb
mov
outsl
jno
jg
jne
arpl
mov
aas
fisttps
xchg
xchg
jo
sub
jge
dec
std
xchg
lea
pop
orl
adc
jl
scas
xchg
lcall
mov
xlat
fwait
or
push
pop
inc
ror
adc
aaa
add
xchg
ret
in
sbb
cmp
ret
or
xor
ss
jo
sbb
testb
inc
and
sbb
fmul
imul
stos
out
dec
push
xlat
or
cmp
test
xchg
push
sub
imul
lods
push
xor
mov
pop
mov
insl
adc
out
jmp
adc
or
movsl
pop
repz
xlat
xor
repnz
data16
cmp
inc
dec
or
xchg
daa
shll
inc
pop
cmp
aad
pop
adc
sti
test
enter
pop
inc
ret
cltd
jo
rorb
adc
testb
adc
clc
icebp
xchg
jp
xor
loope
jo
arpl
and
push
sbb
outsl
fidivrs
std
push
cmp
cld
test
pop
pop
pushf
sub
xor
mov
cmp
movsl
pop
clc
inc
repz
cmp
cmp
test
adc
cld
mov
cmpsl
xchg
cld
pushf
movsl
sbb
xchg
sbb
xor
sub
mov
push
and
xchg
xor
adc
lock
inc
mov
mov
xchg
xchg
jae
push
stc
sub
lds
inc
sahf
inc
sbb
pushf
test
cli
add
add
sub
addr16
mov
ljmp
push
cmp
push
mov
call
push
and
xor
lods
fwait
pusha
and
jl
rorb
sub
ds
mov
xor
xchg
iret
in
ljmp
xor
push
xchg
mov
in
sub
xchg
xchg
fcompp
or
add
sbb
test
add
shlb
or
in
jb
dec
jle
mov
jge
nop
mov
or
mov
fwait
xor
push
xchg
and
arpl
das
mov
push
sti
ljmp
insb
inc
push
lds
sbb
fcomip
xchg
sbbl
ja
xchg
inc
in
movntps
fwait
xor
push
lahf
sub
cmp
xchg
or
imul
mov
repnz
testl
arpl
add
ds
inc
inc
movsl
out
pop
and
cmp
insl
iret
fcoms
push
mov
ljmp
jp
push
pop
sbb
inc
arpl
push
adc
dec
xchg
cmp
cmpsb
scas
sub
movsl
adc
ljmp
insb
out
roll
sbb
rorb
ret
xchg
call
jp
cld
test
pop
push
add
xchg
inc
test
mov
inc
xor
popa
push
loope
inc
mov
fucomip
in
lods
xor
cwtl
mov
cmp
and
incb
jp
pushf
lock
xor
lcall
cmpsb
xor
fadds
or
outsl
mov
adc
mov
orl
mov
pop
repz
inc
push
int3
xor
lods
in
into
mov
out
js
arpl
fsubs
pop
addr16
cmc
testb
ret
mov
popf
xchg
xchg
cmp
or
adcb
cmp
ffreep
imul
pop
test
clc
in
push
out
js
mov
popf
xchg
push
dec
push
pop
pop
ror
rorb
dec
and
pop
pop
rcrl
mov
test
sbb
pusha
fisubs
cmp
pop
dec
push
fidivl
repnz
pop
jmp
stos
and
mov
lahf
mov
loope
jae
or
lea
inc
int3
cs
out
sub
sub
outsl
jno
mov
call
and
xor
in
dec
push
enter
scas
mov
loopne
inc
xchg
or
mull
push
push
mov
fstl
std
popa
jns
add
sbb
and
push
lahf
mov
mov
insb
popf
dec
scas
mov
shl
mov
fldcw
jg
or
imul
xchg
inc
orb
push
je
xchg
xchg
imul
mov
cmp
fsub
cwtl
sub
pop
rcl
sub
sbb
dec
dec
xchg
pop
jns
je
dec
ret
or
aas
jge
xor
add
imul
xchg
cli
jae
or
cwtl
dec
data16
inc
mov
mov
sbb
loopne
loope
jae
mov
mov
test
popf
stos
jns
cs
xlat
push
ficompl
xchg
popa
sbb
fcomp
push
cld
cmp
jp
mov
jno
fidivrs
in
pop
fcomp
arpl
rcr
mov
mov
aas
push
sub
iret
cwtl
mov
xorb
clc
xorl
xchg
jmp
jmp
ljmp
sub
stos
xor
mov
lahf
mov
imul
adc
and
sub
daa
pop
mov
subl
bound
or
sbb
dec
aad
ret
sub
popa
jns
std
push
js
add
out
jmp
jb
insl
mov
xchg
js
jae
sub
inc
jle
orl
hlt
cmp
nop
xor
jo
lahf
sbb
jns
xchg
repnz
mov
icebp
jp
out
jg
cmpb
mov
ret
repnz
aad
xlat
mov
dec
dec
movsb
pop
sub
sub
xor
push
call
dec
stos
push
fidivl
out
in
push
xor
jno
and
ja
pop
fsubrs
xor
xchg
rolb
int3
jnp
dec
movsl
push
test
andb
es
dec
insl
push
mov
push
in
es
sbb
add
mov
and
out
push
js
arpl
aas
fsubs
setns
loopne
testb
push
cwtl
push
and
or
test
or
test
push
cld
push
fcomip
int3
int
int3
divl
push
or
clc
jmp
out
js
pop
sahf
js
int
mov
cmpsb
popa
mov
pop
cmp
add
sub
or
stc
sub
test
imul
int3
enter
fiadds
shll
cmpsb
mov
inc
inc
dec
pop
loop
imulb
xchg
jo
sub
jge
and
jp
mov
jmp
lds
mov
enter
push
filds
aaa
mov
lods
fcoms
test
cltd
xor
fimull
xchg
ret
dec
sbb
jecxz
add
int3
jl
in
cld
outsb
xor
enter
test
cmp
push
scas
cmp
and
mov
mov
or
mov
xor
sub
or
cmc
scas
aaa
pop
inc
adc
mov
sub
rorl
jno
test
and
loopne
fnsave
fcompl
sbb
inc
xchg
sbb
gs
push
push
lret
outsl
mov
popa
ljmp
adc
rolb
and
pop
xchg
test
pushl
fnstenv
sub
mov
fimuls
or
mov
scas
pop
loop
cmpsb
pop
popa
adc
lods
dec
jb
push
nop
cwtl
sarb
pop
js
in
pop
xor
arpl
andl
mov
lcall
sbb
jno
push
push
cmp
push
and
push
iret
aaa
pusha
ljmp
mov
test
mov
mov
add
enter
mov
popa
ljmp
jo
out
inc
pop
out
sbb
or
xlat
add
fldenv
std
xchg
icebp
and
out
je
fdivl
ljmp
cmp
or
jmp
or
add
mov
sub
or
mov
sub
into
into
into
jne
adc
int3
inc
jmp
out
lods
jb
mov
xchg
cld
xchg
pop
inc
xor
int
pop
xlat
pusha
bound
inc
jle
or
or
sub
sub
insb
lret
sub
cmp
pop
inc
clc
fistl
xchg
std
les
add
orl
xchg
and
pop
int3
sbb
pop
or
mov
rorb
orl
in
jbe
inc
jb
dec
test
inc
int3
pop
push
inc
leave
push
fmull
sub
fimuls
mull
fcmovnu
shl
xchg
and
mov
sbb
xor
test
jl
jnp
adc
mov
adc
or
inc
sub
enter
movlps
xchg
push
pop
sbb
inc
cmp
daa
xor
xchg
cld
xchg
ds
xchg
dec
rolb
repz
data16
or
hlt
mov
orb
pop
imul
rcrl
rcl
push
js
push
push
xchg
dec
loop
pushf
dec
mov
xchg
inc
and
mov
pop
sub
mov
adc
notl
push
pop
jmp
cmpsb
in
call
sbb
push
bswap
popa
into
cmp
inc
notl
inc
push
ss
out
sub
push
xchg
and
lcall
push
jo
in
negb
inc
inc
inc
mov
outsl
imul
xor
loop
das
fildl
add
popf
xor
loop
or
nop
shll
pop
je
stos
out
xchg
and
iret
dec
pop
lds
mov
jg
jmp
lret
or
dec
scas
pop
xadd
out
jno
dec
mov
sahf
fistpll
xchg
dec
lcall
mov
xor
gs
aas
sub
push
loopne
iret
rcr
loopne
cmp
sbb
push
adc
sbb
push
shll
cs
pop
mov
mov
movsl
cs
addr16
mov
sub
arpl
enter
imul
ljmp
iret
decb
sub
pop
stc
inc
subl
scas
dec
mov
movsb
and
into
cld
mov
outsl
inc
or
mov
xchg
xchg
repz
jbe
xchg
pusha
ljmp
xchg
fucomip
mov
adc
imul
xchg
or
dec
xlat
mov
filds
inc
push
inc
leave
sub
orl
adc
sub
inc
arpl
push
mov
loop
sarl
pop
and
push
cmp
rcrl
sti
jne
loopne
mov
dec
aam
mov
push
jnp
gs
push
shl
pop
fstl
add
cmp
lods
es
mov
push
sarl
inc
test
cmpsb
mov
push
sbb
out
scas
inc
sbb
ret
mov
xbegin
adc
call
sbb
xor
rcr
stos
cs
ds
sbb
test
test
xchg
push
add
outsl
jmp
jo
ss
sti
push
push
and
idiv
testl
mov
repnz
xor
mov
xorb
sarb
xor
xchg
test
enter
dec
pop
inc
leave
sub
inc
or
iret
push
in
lds
mov
and
push
fdivs
jae
jecxz
or
pop
out
shrb
inc
mov
mov
dec
je
popf
inc
leave
xchg
fwait
pusha
fsts
mov
icebp
cli
test
ret
gs
jecxz
dec
sbb
rcrb
jl
jecxz
lcall
sub
jo
lcall
inc
dec
std
fucomip
pop
inc
fisubs
int3
xchg
or
outsl
icebp
inc
dec
out
imull
in
jbe
stc
iret
xlat
clc
add
mov
mov
pop
add
pop
stc
add
sbb
mov
loope
sbb
xchg
sub
mov
mov
jb
push
dec
shlb
pop
push
dec
arpl
lret
test
int3
push
mov
rcrl
inc
pop
fsubs
loop
inc
std
sub
stc
ret
dec
xor
sbbl
dec
push
inc
xor
rorl
xchg
dec
pop
dec
out
aaa
adc
rcrl
pop
push
jno
adc
push
pop
add
sbb
xlat
ret
cmpsl
fwait
and
jg
cmp
push
pop
in
fistpll
js
pushf
loope
imulb
ss
andb
lods
pop
jnp
rclb
xor
in
mov
mov
push
out
inc
mov
fimuls
push
fmulp
adc
cmp
orl
idivb
xchg
gs
lret
sub
sub
js
lds
push
push
inc
mov
ja
push
inc
sub
jb
fstl
imul
xchg
mov
xchg
sti
cld
xorl
add
scas
outsb
pop
out
jmp
mov
sub
stos
xor
orl
fsub
aad
xlat
popa
inc
inc
int3
push
out
mov
and
mov
andl
iret
ret
dec
lds
or
push
pop
or
and
mov
add
movsb
xor
fstpl
cmpsl
popf
es
sbb
lret
sub
sub
pop
cmp
jge
cmp
fcmovbe
popa
ljmp
mov
data16
pop
cwtl
inc
outsb
js
push
xchg
ss
mov
dec
das
sub
jle
pop
dec
sub
lret
aam
ss
mov
cmp
mov
sbb
sbb
cmc
arpl
sub
fstp
or
stc
cmp
imul
ljmp
cld
mov
pop
and
or
xchg
sti
cld
adc
incb
cli
int
out
jp
imul
push
push
push
sub
sbb
pop
mov
or
sbb
cmp
xlat
sbb
inc
add
push
filds
inc
addr16
leave
sbb
ljmp
adc
xorl
lea
lcall
pop
scas
aad
fisttpl
inc
pop
or
cmp
cmpsl
xor
jg
pop
ret
fadd
outsb
out
inc
ret
mov
lret
mov
testb
mov
and
jl
sbb
int
enter
aas
test
jecxz
dec
les
pop
inc
dec
sbb
lret
push
mov
pop
jns
push
pop
xchg
out
fidivl
mov
dec
cmp
inc
and
and
nop
xchg
xchg
fnstcw
inc
cld
sarl
les
fcoml
in
dec
push
or
dec
shrl
sub
shll
inc
mov
ljmp
scas
push
inc
leave
push
pop
pop
ja
sbb
movsb
jb
gs
std
idivb
fidivl
cmp
ljmp
sub
orl
rol
cmp
mov
fstps
push
push
adc
dec
aam
rol
ret
out
inc
jne
test
lahf
push
jne
pusha
lahf
in
push
int3
int
cmp
or
clc
das
test
js
gs
xchg
pop
ds
std
xchg
lcall
out
mov
and
movsb
sub
loope
aaa
mov
inc
sub
inc
xchg
inc
mov
ss
mov
iret
lret
sahf
pop
sub
xor
clc
xlat
loopne
jl
pop
jmp
mov
mov
out
jecxz
in
lret
imul
popa
cwtl
out
xlat
loope
inc
inc
movsbl
jb
leave
into
icebp
cli
xor
jno
pop
notl
or
jbe
arpl
xchg
jbe
mov
mov
cld
mov
in
cmpsb
push
xor
pop
pop
sbb
cmpsl
xlat
xchg
xor
jne
ret
or
and
into
dec
shll
js
mov
les
and
stos
and
pop
sub
in
or
test
addr16
cmp
daa
xor
push
and
cs
les
outsb
out
rclb
and
js
fcom
push
into
push
cmp
adc
aam
imul
sub
and
adc
mull
ljmp
inc
repnz
fwait
jae
mov
loop
mov
frstpm(287
fwait
stos
dec
stos
xchg
dec
pop
cli
sbb
arpl
cs
sbb
and
popf
popa
into
mov
dec
and
push
fistps
jne,pt
loop
push
lea
icebp
jp
adc
push
jg
mov
mov
mov
sbb
bound
push
xorl
sub
xchg
dec
sbb
mov
lds
or
rolb
pop
push
out
or
lds
or
hlt
adc
mov
mov
jge,pt
xor
shrb
sub
aad
shrb
arpl
push
sub
les
outsb
out
add
js
lcall
jne
cmc
cli
je
loope
inc
js
rorb
aas
ret
fistpl
stc
cli
jbe
and
pop
cmc
jns
and
clc
xchg
xchg
inc
sarb
xor
shrl
xchg
xbegin
and
int
dec
ret
dec
daa
xor
fistl
adc
pop
gs
pop
in
pop
sub
push
cmpsl
test
xchg
and
cmp
into
cld
cmp
adc
inc
mov
inc
jge
xor
adc
push
hlt
in
dec
push
or
inc
int3
xor
nop
mov
stos
loop
xor
or
aas
dec
cmc
rcrb
idiv
mov
cmpsl
leave
inc
int3
cs
mov
sub
mov
mov
lahf
sub
cmp
ret
xchg
call
jno
fstpl
sarl
fs
pop
jecxz
rcl
sub
sti
jne
push
iret
scas
mov
mov
jne
stc
int
xchg
push
xchg
js
fdivl
daa
mov
jmp
sub
adc
xchg
xchg
adc
mov
cmp
jmp
cmp
daa
cmp
les
jmp
lods
flds
addr16
add
push
or
or
add
and
cmp
adc
push
movsl
sets
sub
into
dec
outsl
cmpsb
pop
stc
inc
test
sub
cmpsl
xor
hlt
jge
push
imul
bswap
and
push
shrl
pop
inc
shlb
ljmp
push
filds
and
movsbl
dec
xchg
out
cmp
out
clc
fcmovnu
loopne
xchg
adcl
dec
push
adc
leave
rcl
gs
dec
jnp
gs
mov
mov
jecxz
jno
jmp
xchg
icebp
xor
out
les
mov
mov
testb
push
xchg
imul
xor
lea
sbb
hlt
das
sahf
cli
rcrb
jecxz
testb
mov
enter
and
decb
cmpl
mov
lods
mov
xchg
sbb
add
jne
push
cwtl
iret
and
pop
jp
xchg
cmp
cmpsb
jno
adc
jae
mov
in
inc
sub
in
ret
mov
call
sbbl
lahf
cmp
movsb
sbb
into
cld
pop
data16
pop
out
jno
pop
push
cmp
jne
loope
adc
add
xchg
les
pop
fbld
push
popf
xor
cld
mov
pop
out
clc
insb
cmc
out
in
shrl
cmpsl
test
pushf
je
icebp
jnp
dec
push
adc
leave
rcrl
add
out
addl
addl
lds
aam
pushl
fbstp
dec
out
test
dec
xlat
mov
xlat
leave
pushf
and
mov
divl
push
or
clc
das
test
js
gs
mov
or
daa
incb
ds
std
xchg
lcall
out
mov
repz
sub
add
imul
xlat
adc
xor
rcl
rcrl
sub
lret
pop
push
cltd
adc
jle
in
xchg
and
addr16
jp
orb
xor
inc
cmp
dec
dec
xchg
pushf
out
cmp
and
push
sbb
pusha
mov
enter
icebp
andl
jl
cmpsb
lods
xchg
lock
mov
or
imul
pusha
insl
and
loope
push
xlat
popa
je
std
scas
pusha
sbb
popa
push
cwtl
sbb
xor
or
cmpsl
xor
je
arpl
ds
int
dec
jb
mov
loope
jne
inc
push
call
or
fiaddl
int
rolb
pop
mov
sbb
test
lahf
lods
push
push
inc
in
or
push
sub
mov
add
es
or
outsl
decb
xor
jbe
mov
fnstsw
ss
rorb
push
and
jmp
cmpsb
lods
push
xor
xchg
sti
and
nop
cmp
pop
sub
mov
xchg
dec
inc
jg
rcrl
arpl
or
mov
inc
iret
dec
nop
mov
aas
inc
seto
popf
pop
shlb
rclb
rorb
xor
jmp
sbb
sti
es
jmp
cwtl
dec
orb
enter
rep
out
dec
push
jmp
daa
push
ljmp
or
stos
mov
stc
and
lahf
into
xchg
pop
push
push
or
inc
outsl
or
mov
and
fldl
mov
sbb
cmp
es
insl
pop
movsl
filds
dec
xchg
cwtl
pop
ror
movsl
mov
mov
mov
out
xchg
push
sbb
pop
movsl
in
ror
inc
rorb
mov
stc
sub
xchg
xbegin
daa
test
cmc
fimuls
leave
sub
push
lahf
fucom
sbb
stos
mov
sbb
or
xchg
sbb
and
mov
dec
popf
pop
mov
or
pop
outsb
cmpsl
cwtl
push
aam
pop
loope
or
push
inc
rorb
jb,pn
and
xchg
cmp
je
rcrl
xchg
mov
cmpsb
aad
dec
push
int3
push
fists
insb
mov
jge
push
out
clc
push
je
insl
idivb
pop
jne
repz
je
popa
bound
subl
shll
sub
pop
aad
andb
jl
and
cmp
ja
sbb
test
out
jno
mov
test
adc
insl
inc
dec
ret
int3
das
scas
mov
dec
fnstsw
cmp
or
add
dec
adc
lds
jg
les
and
pop
shrw
shl
popa
push
test
sbb
jmp
popw
pop
les
scas
fnsave
pop
adc
jb
les
adc
lods
cltd
test
sub
ss
sbb
arpl
mov
bound
sbb
cli
sub
outsl
jno
test
movlhps
xor
inc
scas
mov
mov
jmp
push
xchg
sbb
xor
jecxz,pt
jge
fstl
xor
lahf
pop
fcoml
mov
movsl
inc
arpl
subb
test
mov
pushl
xchg
cmp
fmul
adc
js
mov
call
mov
in
fsubs
xor
mov
inc
hlt
xor
test
ss
enter
insl
fnsave
push
dec
dec
mov
cmpsb
pop
rclb
sahf
dec
mov
mov
lahf
fs
adc
punpcklwd
cli
aaa
inc
jno
jo
in
sbbb
rorb
fdivr
popa
jns
jno
das
test
fldenv
mov
adcl
fucom
cmpl
pop
dec
in
rcll
arpl
or
cmp
sbb
cmp
jmp
add
cmp
add
fs
lea
mov
pushf
ljmp
ret
leave
push
add
call
pop
and
fs
jo
in
testb
adc
es
push
jbe
mov
in
mov
sbb
add
test
inc
add
lods
popa
lret
jne
push
std
mov
test
jp
test
aad
push
jns
pop
push
idiv
je
les
in
stos
mov
mov
and
enter
push
pop
jecxz
dec
add
xor
lds
push
cld
in
movsl
pop
pop
mov
orl
mov
jmp
mov
into
les
ja
call
cltd
dec
out
movsl
mov
in
inc
fisubl
sahf
dec
pop
cmp
pop
cmp
push
std
push
jae
cld
test
fsts
nop
xchg
stos
cmp
ds
icebp
mov
xchg
imul
pop
cmp
fisttpll
outsl
sbb
repnz
push
lahf
je
pushf
movsl
adc
xchg
sbb
int3
push
fists
outsl
stc
push
lahf
enter
cmp
inc
xorl
gs
pushf
xlat
xchg
push
adc
inc
lret
inc
leave
roll
enter
into
aad
fdivrs
jmp
inc
cld
xchg
adc
lea
int
rcrb
mov
popf
es
inc
js
iret
imul
jno
push
dec
out
clc
outsb
jne
js
fmull
ret
daa
mov
insb
test
int3
icebp
jnp
and
cld
mov
xchg
pop
inc
outsb
js
xor
daa
or
sub
push
or
jmp
rorb
and
sbb
adc
adc
sbb
cld
sti
dec
movl
dec
pop
sbb
mov
add
sbb
sub
filds
cwtl
jp
out
sarl
sub
push
inc
xlat
js
inc
int
inc
cmp
aad
in
pop
sub
movsb
add
sbbb
inc
test
and
dec
push
int3
push
xchg
xlat
xchg
push
adc
ljmp
fdivs
mov
cwtl
dec
idivb
mov
bound
inc
add
cmp
and
movsl
sbb
aad
out
jns
fs
pop
jecxz
dec
enter
insl
lret
jae
ljmp
cmc
mov
outsb
xor
inc
dec
or
into
sarl
cmp
aam
adc
lods
scas
push
fcoms
cmovbe
jne
test
dec
loop
xor
xchg
test
addr16
add
wbinvd
addb
add
inc
xchg
add
pop
and
cmp
adc
dec
movsl
sets
sub
iret
dec
outsl
cmpsb
pop
stc
inc
enter
mov
fidivrl
push
int3
push
fbstp
sub
and
mov
jecxz
mov
adc
ljmp
add
test
jge
mov
pop
in
mov
out
popf
fbstp
dec
repz
scas
pusha
jmp
int
sysenter
int3
pop
mov
dec
mov
and
ss
sbb
mov
jg
ficoms
cmp
pop
out
mov
faddl
jns
jno
cmp
mov
dec
mov
jmp
mov
jl
mov
icebp
add
stc
repnz
rolb
xchg
inc
add
push
negl
jb
test
adc
les
lods
push
mov
and
stos
mov
aam
or
sub
xchg
scas
mov
pop
dec
clc
icebp
or
in
jbe
loopne
inc
cmc
test
ds
cwtl
and
gs
inc
pop
in
lahf
nop
mov
out
fmull
leave
inc
les
cmpsb
inc
dec
test
jmp
add
pop
bound
sahf
xlat
or
lock
adc
insb
xchg
inc
call
aas
outsb
in
xchg
mov
das
mov
rolb
pushf
or
mov
jno
outsb
jo
fcompl
jne
js
cmp
cmpsb
lods
xchg
mov
sbb
and
cmp
arpl
mov
inc
stos
lods
out
mov
sbb
inc
fildll
rorb
out
jge
cld
cmpsl
and
xor
adc
xor
int
add
je
push
ljmp
push
pushl
dec
clc
push
scas
gs
test
pop
mov
push
gs
movsl
pop
popa
stos
bound
xor
push
out
pop
imulb
inc
mov
inc
iret
xor
imul
int
addr16
in
pop
mov
push
mov
dec
les
test
inc
int3
push
bound
mov
fstpl
sti
shrl
sub
cli
test
loope
jae
rclb
xchg
pop
jnp
movq
rolb
fsubrs
lods
lahf
xchg
push
cmpsl
jno
dec
movsb
xor
push
fildll
sub
mov
sbb
add
fcomip
mov
pushf
jmp
pop
shll
jg
ficoml
test
rcr
inc
out
jns
lea
in
xor
mov
std
in
in
xchg
add
jg
sub
inc
in
push
cmp
sbb
enter
lods
scas
xchg
push
fcoms
cmpsl
mov
add
imul
scas
push
pop
movsl
cs
fisubrs
pop
push
out
mov
lcall
dec
imul
xor
stos
and
jnp
lret
push
faddp
leave
mov
mov
rol
mov
dec
inc
push
int3
cmp
sbb
stc
dec
cwtl
shlb
aaa
adc
push
out
stos
stos
pop
fsub
jecxz
add
enter
dec
add
inc
or
aam
cwtl
sbb
aas
sbb
sub
ret
pop
xor
dec
ss
cmp
sahf
out
imul
movsl
daa
jns
jb
out
or
xchg
fdivs
pop
ret
jae
into
in
fists
mov
test
add
lea
adc
fwait
aaa
orl
nop
and
mov
rclb
pop
jecxz
mov
push
test
sbb
cmpsl
daa
add
push
mov
orl
cmc
xchg
fwait
adc
pop
xor
popf
sahf
fbld
mov
lcall
repnz
sub
out
mov
ja
daa
movsl
addr16
xor
jno
inc
and
arpl
push
ret
shrb
fcmove
stc
outsb
xor
ret
je
scas
cmp
lods
sbb
mov
mov
in
lods
je
orl
testb
int3
xor
lock
sbb
bound
push
rcl
enter
ss
shlb
cmp
pop
fistps
daa
imul
rcrl
pop
and
push
cmpsb
lea
and
mov
push
dec
or
repnz
mov
sbbl
hlt
cmpb
mov
or
movsl
cmp
arpl
in
fistpll
ret
jl
icebp
lret
out
mov
sarl
sub
jle
cltd
lcall
mov
test
aaa
mov
pop
inc
mov
pop
int
ljmp
or
or
out
sub
add
mov
pushf
and
dec
sub
test
out
push
add
fcmovnb
out
jge
push
ficoml
ret
mov
pushf
movsb
inc
aas
cs
test
fwait
adc
push
mov
fisubl
movsl
adc
sbb
int3
jnp
add
mov
mov
es
outsb
xor
roll
add
adc
push
ficoml
cwtl
sbb
cmc
mov
outsl
sub
jo
cmpsl
sub
mov
shl
inc
cmp
lcall
push
mov
fwait
lds
xchg
ds
lock
movsl
decb
sub
add
sbb
sub
inc
jns
adc
aas
mov
aaa
cld
jp
and
push
dec
enter
icebp
sub
dec
je
filds
enter
sbb
testb
sub
push
cltd
ja
cmc
inc
xchg
loop
ja
sbb
sbb
inc
inc
and
loope
mov
xorl
and
mov
lods
sar
mov
lahf
push
mov
out
ja
push
sbb
stos
jge
int
stc
ss
aad
push
cld
mov
pop
and
outsl
leave
into
inc
cwtl
mov
icebp
xorl
popa
ljmp
ss
sets
jne
dec
out
xor
xchg
mov
lret
and
rorl
movb
xlat
pop
mov
sbb
cmp
andl
add
test
ja,pt
aaa
rep
idivb
jmp
sub
loop
jl
jecxz
pop
cmp
mov
jo
mov
xchg
jecxz
dec
std
jle
sbb
das
sti
iret
pop
shl
jns
movsb
cmp
add
sbb
add
dec
cmpsb
cmp
test
sbb
repz
loopne
sub
in
cmpsl
repz
fcoml
mov
hlt
leave
iret
push
lds
push
mov
dec
lret
xor
mov
sti
xor
jmp
jb
roll
xchg
mov
out
cmpsl
xor
insb
fnsave
popa
adc
jl
nop
leave
jnp
out
adc
aaa
mov
push
es
fisubl
push
dec
xchg
xor
pop
out
dec
add
scas
fs
or
mov
outsb
xchg
into
cwtl
adc
daa
cmpsl
sbb
aam
inc
xchg
sahf
fsub
pop
sub
xor
sub
add
sub
daa
test
movl
ficoms
mov
test
ret
mov
cmc
sbb
adc
dec
roll
loope
jnp
fsubl
and
push
cmpsb
lods
call
and
mov
lea
and
mov
pop
loope
test
pop
push
rcrl
int3
push
push
in
scas
dec
bound
je
scas
mov
push
lods
fstpt
mov
inc
rcl
rorb
fdivs
add
inc
leave
push
lods
mov
leave
ficoml
dec
enter
dec
inc
rcrb
xchg
cmc
cmpsb
xor
pop
xlat
mov
aam
sbb
pop
inc
inc
push
dec
or
addr16
push
mov
inc
stos
or
pop
ljmp
scas
xor
imul
popa
lret
or
notb
pop
inc
jmp
roll
out
mov
leave
rcll
sub
pop
xchg
and
pop
sahf
sahf
cltd
or
add
sbb
xchg
push
into
push
cld
mov
adc
lret
push
jo
loop
jl
or
xchg
dec
dec
in
lcall
or
call
das
add
mov
into
lcall
ljmp
lods
idiv
inc
xorl
xchg
test
jo
test
mov
push
mov
in
cmpl
xor
inc
cmp
mov
add
xor
clc
jmp
add
sahf
jns
dec
int
in
lds
mov
xchg
push
cltd
fs
jle
pop
and
xor
shrl
in
mov
incb
idivb
loop
and
xor
add
pop
test
fcomps
pop
mov
mov
neg
dec
out
xor
xor
cmp
js
das
leave
inc
int3
push
jmp
sub
rorl
push
aas
add
xor
incb
mov
or
call
encls
mov
into
lcall
ljmp
xor
stc
inc
xorl
xchg
stos
repz
inc
jge
loop
imul
icebp
mov
in
cmpl
xor
push
pushw
push
loopne
es
xor
clc
cmp
add
lahf
jns
add
in
lds
mov
xchg
push
xchg
fs
jle
pop
and
lret
add
notb
std
xchg
and
movsb
sbb
add
lock
jo
or
adc
cmpb
insb
loop
int3
xchg
sub
call
dec
out
idivl
cmp
or
or
cs
outsb
aas
add
jl
mov
je
in
fidivrl
xchg
pop
xorb
iret
mov
mov
rcrb
out
mov
jnp
cmp
aam
jle
sbb
mov
mov
stos
fcoms
inc
or
clc
jmp
sub
push
add
hlt
out
gs
into
cld
cmp
outsl
aam
lret
dec
ja
add
xor
push
pop
movl
pop
sub
pop
mov
pop
pop
test
jns
push
sahf
and
pop
ljmp
jmp
test
mov
jnp
mov
pop
jmp
outsb
repz
inc
fstl
push
push
in
je
pop
pop
pop
lret
shlb
inc
xlat
fstps
pop
push
leave
mov
bound
imul
aad
push
push
inc
adc
inc
xchg
jmp
sbb
add
test
bnd
mov
xchg
jo
jmp
js
adcl
fcom
inc
jae
jl
or
aam
inc
ret
js
or
test
outsl
mov
aad
and
push
les
imul
shll
addr16
std
dec
pushf
xlat
lret
arpl
dec
dec
cwtl
roll
push
adcb
xchg
data16
or
inc
adc
xor
sub
pop
test
and
gs
mov
jb,pn
mov
pop
inc
push
adc
test
js
out
aam
notl
gs
add
and
push
bound
mov
mov
fistpll
or
pop
add
fs
or
outsl
hlt
or
jmp
add
xorl
das
out
test
cmp
jbe
fs
adc
jge
std
clc
push
or
add
jns
stc
hlt
mov
or
je
cmc
lock
fiadds
dec
std
inc
push
lcall
dec
stc
cmp
xor
call
cmc
xor
dec
mov
jmp
inc
icebp
lods
cli
mov
sub
fmuls
icebp
mov
xchg
loope
rcrb
repnz
rcl
and
xchg
xsave
arpl
insb
mov
ljmp
cld
xor
je
enter
pop
jmp
stos
popf
jecxz
push
xchg
popa
pop
sbb
sbbb
cmp
sbb
dec
sub
int
pop
push
mov
mov
jo
std
adc
xchg
inc
aam
xlat
mov
pop
xor
inc
sub
xchg
mov
add
rorl
mov
xchg
mov
xchg
push
pushf
out
add
int3
xchg
rcrl
cmpl
jg
mov
xchg
in
cld
jbe
jg
jmp
jp
xchg
nop
imul
sarb
in
jbe
add
mov
jno
stos
jb
jle
xchg
ljmp
int
ss
out
outsb
popa
shl
push
jbe
jg
loopne
scas
push
dec
xchg
inc
jb
jnp
in
pop
stos
out
lret
shr
testl
mov
rcl
mov
pop
mov
iret
rcrl
push
dec
mov
push
imul
cmp
push
xor
addr16
les
jp
sub
push
arpl
inc
mov
shlb
shrl
xchg
fidivs
mov
leave
mov
gs
cmp
lods
std
inc
fstps
iret
jne
cmp
movsb
xor
sbb
mov
xor
pop
cmp
xor
mov
sbb
std
ret
sub
lods
test
stc
mov
test
add
sbb
movsl
mov
lods
icebp
mov
push
sbb
mov
sti
test
adc
sbb
or
mull
sub
cwtl
mov
or
repz
or
xchg
xchg
inc
inc
out
pushf
fldenv
nop
addl
mov
aam
mov
mov
in
outsb
test
inc
jge
mov
jae
xchg
pushw
adc
fsubl
xchg
pop
pop
test
orl
aas
lret
int
dec
outsb
inc
cmp
jmp
hlt
mov
jne
xor
inc
xor
shlb
push
cmpsl
xor
adc
movsb
push
inc
adc
xchg
xchg
fcoml
mov
add
mov
jp
mov
stos
shll
pop
ljmp
cmc
out
cli
adc
insb
outsb
xor
push
sub
insl
test
fsubp
cmpsb
pusha
sbb
inc
cmp
sbb
lds
inc
lods
lahf
fs
ficompl
jmp
add
es
inc
das
std
dec
sub
jb
cmpl
mov
enter
rorb
adc
xor
or
outsb
pusha
scas
orb
es
movsb
lock
idiv
inc
sbb
icebp
mov
gs
mov
lahf
xchg
fbstp
in
pop
stos
dec
push
and
sub
ja
sbb
adc
pop
and
call
in
pop
sub
sbb
stc
orb
pop
push
xor
cltd
dec
fistpl
cmpsb
dec
lret
cmp
jnp
push
sbb
adc
and
xor
add
inc
clc
push
bound
inc
mov
incb
sub
or
aas
cmp
pop
lahf
jnp
mov
add
mov
insb
adc
cli
addl
mov
or
add
push
fs
adc
jnp
inc
std
clc
push
sbb
add
jns
stc
hlt
xor
pop
add
popf
jb
cmp
lock
mov
sub
repnz
mov
outsl
ret
in
sbb
mov
outsl
cmp
or
xor
test
lret
shll
sbb
icebp
mov
gs
mov
xchg
fbstp
pop
pop
stos
jle
lds
push
push
mov
mov
mull
jns
pushf
sub
inc
jb
dec
pop
in
inc
dec
xchg
jo
pushf
mov
popf
push
pusha
insl
hlt
add
pushf
cld
push
adc
imul
in
out
xor
gs
lret
mov
lock
inc
or
cmp
and
inc
pop
sub
and
pushf
or
insl
mov
sub
popf
pop
xchg
xlat
call
cwtl
pop
xor
mov
push
repnz
cld
dec
mov
xor
pop
sbb
sbb
ret
push
sbb
popf
add
test
cltd
loope
xchg
dec
xlat
pusha
je
and
dec
sarl
pop
mov
adc
insl
stos
pop
sbb
lock
imul
mov
lods
hlt
mov
cmp
mov
aaa
test
xchg
sahf
int3
mov
jno
mov
inc
xor
shll
mov
xor
mov
add
pop
add
and
stos
stc
sub
sbb
inc
fisubl
adc
jne
scas
je
xlat
xor
imul
enter
aaa
adc
xor
pop
arpl
iret
movsl
scas
repnz
test
pushf
lock
aas
add
xchg
push
sbb
xor
xchg
xlat
push
push
call
and
sbb
mov
add
add
dec
xchg
in
popf
mov
jnp
dec
lcall
sub
add
or
add
add
xlat
xchg
mov
bound
rcll
pop
xchg
or
jno
arpl
mov
push
or
aad
and
mov
jbe
outsb
fnstsw
inc
sub
pop
outsb
dec
cmp
cmc
inc
fcoml
jmp
cwtl
shll
cmp
xor
xchg
rcl
lret
cmp
sbb
sbb
movl
cli
push
dec
xchg
pusha
cmp
lret
jnp
in
adc
or
xchg
sets
cmp
sub
or
addr16
ja
pop
mov
lock
sub
xchg
xchg
jle
je
pop
sub
sbb
jp
jo
pop
lahf
cmp
mov
add
clc
inc
insb
adc
cmp
jne
add
rcll
cltd
push
dec
xchg
in
mov
pop
xor
jmp
pushf
or
mov
dec
adc
ja
orb
ljmp
fimuls
scas
out
or
jno
arpl
rclb
je
aad
and
push
iret
sbb
inc
loope
mov
sub
push
adc
movsl
cmp
or
mov
test
stos
xor
fs
ret
add
push
xor
sbb
ljmp
sbb
xchg
add
gs
and
xchg
popl
lret
push
ja
popa
lods
xchg
adc
mov
dec
jae
pop
test
or
jns
leave
outsl
adc
movsl
jo
mov
or
addb
push
lcall
icebp
sti
aas
sbbl
mov
sbb
xor
xchg
xlat
pop
out
add
and
mov
int
add
and
mov
sub
fiaddl
das
jne
mov
add
cltd
ds
and
out
jmp
outsl
lea
jg
jns
imul
xchg
nop
cs
repnz
xor
mov
faddp
inc
and
js
ljmp
add
icebp
scas
aam
mov
inc
push
or
test
pop
xchg
jmp
pop
les
scas
mov
xchg
data16
ret
and
sbb
push
push
sub
imulw
fistl
inc
ja
push
test
cmpsl
add
inc
ss
aad
ja
nop
add
xor
sub
xor
xlat
cmp
push
aad
adc
aam
jno
les
mov
rcrl
fwait
mov
jmp
mov
jb
sbb
aam
sbb
and
pop
mov
subb
into
popa
cmp
push
lods
xchg
addb
test
daa
or
les
xchg
je
aam
adc
dec
jge
mov
push
and
inc
sbb
jbe
or
lret
sbb
push
dec
pop
stc
add
pop
clc
sbbl
pusha
aaa
scas
cmp
lods
fisttps
mov
roll
push
out
jg
loope
jp
mov
in
cmp
fucomip
dec
sbb
adc
sbb
cmpsl
cmpl
fwait
je
dec
sub
push
inc
ljmp
push
mov
out
push
pop
mov
fwait
mov
jmp
aas
push
xchg
les
popa
cli
add
jno
sub
lea
gs
insl
mov
aaa
pop
dec
adc
or
cmpsb
cwtl
pop
ror
movsl
mov
mov
jle
xorb
xchg
pop
lcall
pop
lods
or
fildll
push
push
iret
je
xchg
orb
ljmp
mov
lret
int3
xchg
pop
out
movsb
fnsetpm(287
adc
dec
ret
in
ja
lcall
xchg
xchg
mov
icebp
inc
inc
ds
dec
outsl
mov
push
cmpsl
add
js
mov
inc
int
fisttps
dec
rcr
cmp
jbe
stos
xor
popa
movsl
mov
pusha
sub
cmpsb
rcll
xchg
leave
in
test
repnz
push
xor
mov
dec
cmpsl
and
ret
dec
mov
rcll
add
mov
into
adc
pushl
fcomi
jg
filds
std
xchg
xchg
and
mov
sub
mov
ret
loope
xchg
jecxz
cld
sbb
mov
addr16
test
and
out
push
shlb
inc
insl
add
inc
xchg
sbb
pop
adc
int3
ja
lcall
scas
test
insb
add
daa
cli
stc
cmc
sbb
mov
mov
adc
mov
adc
data16
loope
popf
stos
xor
jb
sbb
ror
and
jp
inc
push
push
inc
pop
jbe
pop
in
pop
mov
cs
jmp
fwait
adc
dec
push
push
xchg
outsl
inc
leave
insb
jne
dec
arpl
rcl
pop
bound
pop
shrl
jne
orb
fistpl
aam
dec
test
in
addl
test
push
outsl
cwtl
sub
xchg
inc
mov
or
fsubrs
je
jno
add
dec
xchg
sub
out
dec
cmp
sbb
insb
lea
jmp
rorb
imul
pop
popf
stos
xor
dec
daa
mov
xchg
pop
cmpsb
das
les
mov
cmp
dec
xchg
jo
stc
sub
mov
add
cmp
pop
popa
and
call
push
push
and
xchg
push
jne
scas
add
mov
xchg
sbb
xor
mov
leave
test
jne,pn
push
ficompl
xor
xlat
loope
inc
iret
sarb
adc
cli
lods
outsl
jno
dec
push
cmp
push
and
add
adc
jae
aad
sbb
sub
mov
movsl
aas
enter
xor
jge
loope
xlat
popa
mov
pop
bnd
sbb
mov
jo
pop
push
push
inc
cld
fmul
adc
sub
test
std
pop
push
lret
fsubl
je
pop
xchg
cli
in
xor
das
jne
cwtl
dec
mov
push
jecxz
or
test
push
mov
cmp
or
pop
mov
mov
idivl
inc
into
xor
and
daa
aaa
cmp
leave
es
rorl
gs
addr16
rcrb
sub
adc
mov
lea
fnstenv
cmp
sbb
mov
addr16
rcl
push
sbb
jnp
mov
stos
les
or
or
pop
nop
in
in
cmpsl
scas
sets
outsl
je
adc
mov
xchg
and
imul
mov
cmpsb
cmpsl
push
ljmp
std
loope
pop
test
sbb
inc
cmpsl
fcomp
les
std
pop
ljmp
jbe
inc
inc
mov
test
scas
xor
jmp
lret
xchg
cmp
dec
scas
scas
sbb
push
push
test
or
imul
adc
movsb
cmpsb
jmp
xchg
mov
rclb
jl
add
ffreep
push
shrb
xchg
sbb
pusha
xorl
int3
add
cmpsl
jo
or
in
outsb
js
xchg
xchg
bound
mov
cmp
pop
pusha
ljmp
add
pop
jle
cmp
arpl
dec
push
push
add
cmc
and
xor
sub
dec
push
add
dec
ror
ss
sub
arpl
pop
popa
mov
loope
shlb
lahf
sets
test
xchg
sarb
xor
fs
push
xchg
sbb
jb
ljmp
test
or
pop
in
mov
leave
scas
cwtl
mov
pop
cmpsl
xor
loop
imul
ljmp
sub
jne
insb
xor
lds
iret
dec
push
scas
stos
pop
and
push
pop
out
leave
xor
data16
ficoml
rcrb
push
rcl
jmp
push
xchg
or
dec
aam
aas
xor
xor
xor
insl
mulb
pop
cmp
dec
push
dec
mov
rcrl
add
cmp
cmpsb
mov
or
mov
cld
clc
xor
jecxz
lret
xchg
int
mov
testb
mov
jb
mov
push
bound
jg
mov
jbe
int
xchg
sub
inc
movsb
lods
fwait
sbb
icebp
sub
push
inc
cmpsl
fimuls
pop
movsb
mov
mov
ljmp
push
pop
inc
cld
cld
stos
gs
xor
stos
cmp
mov
or
xlat
clc
cmp
movsb
lods
lods
ljmp
add
mov
push
out
cld
js
mov
popf
outsl
xchg
mov
lds
insb
ret
mov
and
pop
pop
mov
outsb
test
inc
in
out
jmp
cmp
add
lods
mov
sbb
xor
xor
lea
enter
and
int3
ljmp
lods
scas
insb
or
dec
mov
sub
jecxz
mov
xchg
sub
addr16
aam
mov
in
fisubl
enter
imul
xchg
sbb
push
cmp
sbb
nop
xchg
les
ds
cmp
cmp
inc
int3
pop
adc
inc
js
dec
cwtl
sbb
test
xchg
push
bound
rcr
fldl
add
add
sub
pushf
cwtl
mov
stc
or
out
mov
insl
call
sbb
sbb
and
or
stc
cli
push
std
adc
xor
mov
cmp
cmp
dec
dec
push
dec
out
jno
push
push
negb
insl
mulb
xor
fisubs
mov
pushf
sbb
cs
insb
int3
test
push
push
push
orb
jmp
sub
and
bnd
call
mov
inc
mov
neg
xor
les
cmp
scas
add
daa
outsw
stc
jge
push
or
sbb
sbb
fmuls
arpl
scas
mov
mov
and
pop
push
subb
outsb
xchg
into
sub
adc
pushf
es
movsb
pusha
sub
cld
call
adc
push
cmp
xchg
and
and
jge
sbb
jae
pop
pop
push
test
xor
loop
stos
stc
jp
aas
lock
xor
inc
or
cld
insl
testb
sbb
scas
xor
and
mov
inc
loope
pop
cmp
dec
rcll
cmp
sub
xchg
int3
mov
push
mov
ret
xlat
lods
push
xlat
pop
mov
pop
sub
add
or
cmp
pop
filds
inc
cmpsb
cwtl
pop
mov
xchg
stos
mov
mov
icebp
rolb
mov
and
and
lcall
push
or
inc
xchg
stos
scas
add
mov
push
lcall
push
mov
orb
mov
repz
inc
jnp
lret
push
fisubrs
daa
xchg
orb
jbe
mov
adc
xor
nop
sbb
and
xchg
test
push
jle
orl
push
jg
dec
xor
gs
daa
xchg
into
push
fsubl
std
inc
pop
repz
jecxz,pt
into
ret
dec
mov
sbb
popa
movsb
jl
stc
cwtl
cli
add
nop
stc
orl
js
mov
cmc
cmpsb
xlat
arpl
icebp
in
out
aam
adc
mov
pop
test
push
outsb
mov
push
xchg
adc
ss
fcomps
call
xor
ficoml
leave
arpl
lock
or
mov
or
jmp
mov
dec
push
repz
jo
es
adc
dec
imul
std
xchg
push
adc
lret
lcall
test
rcl
fisubrl
cmpsl
mov
inc
lret
push
cmovo
insl
jle
cmp
lret
pop
popf
in
jbe
sub
mov
arpl
jne
seto
lods
out
cmp
out
ja
cmpl
adc
cmpsl
dec
cmp
pop
jne
test
movsl
mov
inc
mov
jnp
xchg
xchg
pop
stc
or
clc
adcl
adc
pop
sbb
imul
push
and
sbb
push
cmpsl
mov
jg
mov
pop
cmp
sbb
test
push
dec
stos
and
and
sub
aam
leave
cli
mov
repnz
enter
mov
paddsw
and
xor
add
out
roll
or
mov
lret
rorb
inc
ds
cs
mov
cmc
sti
cmp
adc
push
movsb
push
icebp
cmp
or
test
adc
xchg
pusha
in
mov
mov
loope
sarb
lea
jmp
mov
fstl
pop
push
sub
test
jbe
push
and
rorb
cmpsl
mov
cwtl
push
and
scas
xor
dec
mov
addb
mov
push
iret
mov
xchg
adc
repnz
jns
jl
pushf
sahf
mov
lcall
mov
pop
mov
orl
ret
dec
das
lea
lcall
sub
or
xor
mov
das
ret
inc
cmpsl
pop
push
popf
cmp
pop
sbb
cmp
aam
xor
ja
xchg
add
ffree
les
add
lds
out
js
push
rcr
and
xchg
mov
les
scas
and
hlt
fxch
jno
pop
gs
icebp
out
subb
loopne
pop
sbb
sub
std
xchg
pop
lods
inc
adc
pop
je
lods
stc
add
add
imul
ja
cli
pop
or
sbb
push
xor
inc
jbe
cmp
pop
es
cmp
fcomp
test
cld
sub
movsb
stos
adc
dec
sti
sub
in
push
rcr
arpl
dec
mov
mov
rcrb
data16
leave
push
or
enter
es
cmp
jmp
pushf
dec
jl
cs
pop
sbb
nop
sbb
dec
out
xor
cmpsb
cld
fildl
adc
gs
jecxz
loopne
jmp
push
mov
into
leave
mov
xor
mov
in
sub
xchg
es
daa
in
mov
lds
jl
add
test
cpuid
fildl
mov
cmp
fisttpl
xchg
bound
ds
sarb
mov
xchg
mov
push
stos
push
pop
lea
rcrb
je
cld
xchg
inc
mov
jp
sub
inc
pop
sub
inc
je
mov
cmpsb
cmpsb
dec
or
decl
inc
lea
mov
push
lahf
xlat
rcrl
in
jbe
cmp
pop
jns
cmp
out
jge
cld
test
icebp
outsb
mov
les
inc
inc
divb
mov
data16
push
push
mov
ret
xchg
sub
lret
pop
aam
pop
xor
xchg
popf
fdivl
scas
cmp
push
push
std
dec
repnz
mov
movsl
std
out
xor
and
js
mov
fcoms
loopne
dec
je
xchg
call
jno
push
fsubl
test
push
mov
xchg
mov
outsb
adcb
es
mov
daa
jg
test
pshufw
into
insl
mov
stc
std
sbb
cmovae
arpl
xchg
mov
jo
cmp
sbbl
test
clc
or
push
flds
popa
xor
mov
call
mov
cmp
dec
or
mov
xchg
pusha
jle
or
jae
out
push
add
mov
sbb
sub
inc
lcall
pop
dec
cwtl
sti
fistl
xchg
mov
inc
xchg
jbe
arpl
xchg
inc
repnz
les
mov
sub
imulw
jnp
out
shll
js
insl
addl
lods
in
cmp
adc
dec
dec
rcr
imul
andb
or
icebp
mov
out
aam
mov
jno
xor
lcall
lret
insl
lret
outsl
pop
ret
sbb
sbb
sbb
and
mov
jmp
sub
scas
jb
loopne
stc
pop
cli
push
imul
js
dec
insb
jno
in
cmc
outsb
pop
pop
mov
jae
jle
sbb
pop
out
rorl
push
arpl
mov
pop
mov
mov
jecxz
dec
add
in
lret
arpl
into
inc
stos
les
loope
std
lret
pusha
in
sub
jno
outsl
jno
jecxz
out
ja
xor
pop
mov
mov
xchg
sbb
insb
push
filds
sub
cwtl
mov
test
mov
test
pop
fstpt
jge
loope
pop
xlat
popa
je
movsb
lods
scas
ljmp
rcrl
mov
lret
nop
xchg
aas
enter
inc
int
jno
dec
push
dec
rorl
xlat
shr
mov
ds
sbb
stos
jle
xchg
fldl
inc
pop
movsl
sub
jl
mov
data16
popw
inc
shlb
inc
mov
cmpsb
jmp
sarb
ret
imul
pusha
lods
fcoml
adc
pushl
lret
add
js
sbb
mov
outsl
mov
adc
pop
loop
sarl
xchg
dec
jge
and
cld
and
sub
sub
mov
arpl
dec
dec
test
jae
aaa
sahf
int3
outsb
sub
lret
or
je
inc
mov
js
cmpsb
je
ja
xchg
cwtl
jns
test
jae
jo
rorb
add
arpl
stc
test
in
sbb
pop
mov
js
adc
mov
je
push
or
leave
shll
xor
cmp
lds
sub
pop
inc
int
jmp
lret
add
rorl
out
or
stos
dec
cmp
icebp
shl
fwait
pop
fsubrs
adc
int
or
jo
mov
mov
outsb
add
popa
mov
mov
pop
roll
mov
pop
loop
pop
arpl
mov
lcall
out
pop
mov
clc
stos
arpl
adc
pushf
and
mov
and
cmpsb
out
fwait
cmp
outsb
dec
xchg
lock
or
add
cs
in
sub
xchg
fs
outsl
inc
mov
lea
arpl
xor
outsb
sbb
xlat
outsl
cwtl
mov
jns
gs
fwait
popf
jecxz
into
or
jp
scas
cmpsb
cmp
mov
or
lcall
mov
adc
fdivs
rcr
cmp
loop
jg
adc
popf
push
push
fsubl
icebp
ficompl
xchg
pop
test
ds
jne
adc
xor
cs
cltd
dec
and
fs
pop
push
shrb
xchg
sbb
or
cmp
and
sub
lock
push
orb
mov
cmp
lds
mov
addr16
ret
out
stc
push
xchg
inc
stos
pop
adc
push
leave
ret
ljmp
loope
rorl
sub
mov
sti
jae
cmpsb
clc
push
xchg
pop
sahf
jnp
rorb
aaa
cmp
sub
push
adc
mov
into
xorb
pusha
bound
negb
push
outsw
insb
movsl
fsubr
loop
push
pop
push
insl
divb
or
adc
jne
push
nopl
fdivrs
push
inc
add
into
adc
sub
insb
cmc
jle
jecxz
je
jno
jb
cs
dec
add
out
jno
int3
outsb
jae
pop
negl
push
cmp
es
insl
pop
movsl
fists
dec
aam
add
xor
xor
movsb
cmp
inc
imul
or
mov
lods
int
sbb
fsubl
mov
cmp
aad
xor
push
aaa
not
dec
shll
mov
pop
add
data16
or
inc
push
jno
loop
mov
loop
sub
cmpsl
mov
jbe
loop
loopne
loope
and
pop
cld
test
fsubl
and
pop
and
cmp
aaa
xchg
mov
gs
pop
adc
mov
xchg
popa
mov
std
or
or
inc
xlat
clc
clc
daa
imul
sahf
push
adc
xchg
movsl
and
sub
fildl
xchg
pop
loopne
xchg
mov
sbb
and
cmp
out
rcr
into
push
rcrb
cltd
push
dec
fsubs
int
sbb
std
scas
cmp
std
add
inc
mov
es
push
mov
mov
in
lds
jl
popl
inc
data16
psllw
mov
loop
or
test
add
int3
lcall
sbb
push
push
andb
daa
adc
sub
and
pop
les
mov
sbb
cmc
out
lea
mov
push
mov
lahf
cmpsl
movsb
sar
js
push
mov
repnz
divl
dec
lret
sti
cld
notb
inc
js
ljmp
cmpsl
dec
or
push
aam
scas
jecxz
sbb
fldl
inc
sbbl
xchg
cmp
dec
aas
mov
bnd
iret
adc
loopnew
and
pop
mov
cld
lds
adc
mov
push
fistpl
ret
push
lcall
mov
push
mov
sub
jmp
xlat
enter
xor
test
pop
push
movsl
test
cmp
in
add
adc
outsl
sahf
mov
mov
je
cs
jg
mov
roll
rolb
pop
popa
daa
and
cmc
es
xchg
ret
xor
push
or
or
and
push
mov
ret
ljmp
sub
fs
xor
cmp
and
xchg
inc
imul
ret
cmp
cwtl
and
adc
aaa
adc
mov
pop
sbb
jbe
pop
jle
sub
pop
add
xchg
movsl
test
pop
outsb
scas
xor
mov
int
xchg
inc
imul
dec
in
gs
js
push
push
andb
imul
popa
xchg
mov
das
jns
push
jmp
icebp
mov
xchg
ret
cmp
mov
cmpsb
push
sbb
pushf
pop
out
test
xor
sbb
enter
jecxz
lahf
or
cmp
cmpsb
mov
ret
imul
mov
lods
movsb
jo
add
inc
iret
pop
inc
dec
jge
pop
add
adc
loope
out
inc
shl
push
aad
jle
stos
mov
pop
inc
inc
cmc
insb
ljmp
out
lea
lods
inc
loopne
subl
mov
adc
push
dec
sub
idivl
cwtl
mov
ret
lods
insb
cli
cmp
xor
in
test
in
sbb
stos
mov
shrl
jp
dec
movsb
daa
mov
mov
insl
add
and
cmp
lock
mov
bnd
mov
push
lret
inc
int
jno
jecxz
pop
push
stos
xor
push
rcrb
insl
divb
jnp
scas
loope
and
call
movsl
sub
ss
enter
jle
out
pop
dec
in
repz
or
lds
adc
in
and
or
cmp
sbbl
mov
pop
xlat
pusha
cmc
fsubrp
icebp
or
iret
push
sbb
inc
std
pop
sbb
out
and
mov
loopne
sbb
and
pop
daa
pop
xchg
sbb
lea
stc
mov
ljmp
dec
and
add
cmp
add
sahf
add
mov
je
xor
xchg
inc
cmp
jecxz
cli
pop
xchg
es
cmp
call
add
stos
jne
and
sbb
add
mov
dec
cmpsb
int3
xor
fdivp
cwtl
and
xchg
dec
in
or
lahf
mov
lock
cmc
pop
fsubrl
je
or
mov
sub
jl
test
in
push
and
insl
or
aaa
sub
push
mov
mov
daa
mov
aam
jne
xor
int3
inc
jmp
loopne
inc
mov
ret
mov
xor
mov
loop
mov
xlat
pusha
ljmp
das
mov
xor
mov
das
test
xchg
fcmovb
hlt
jle
jne
pushf
push
fdivrp
leave
jle
data16
fnsave
arpl
jns
leave
cmp
lret
mov
jle
pop
sbb
je
loope
sbb
inc
adc
out
ja
into
adc
mov
mov
mov
xchg
xchg
out
push
inc
lcall
add
js
nop
mov
mov
adc
test
dec
inc
int3
dec
sub
cmpb
dec
lods
pop
add
sbb
mov
cmpsl
mov
or
aas
xchg
xchg
xchg
outsl
insl
das
jmp
jle
bound
outsb
and
sti
mov
push
cmp
ja
scas
aam
push
mov
and
cld
jnp
dec
add
pop
xchg
rorb
pop
loopne
aas
xor
movsl
hlt
out
repz
leave
lds
or
notl
popa
daa
pop
in
jg
jmp
inc
lret
in
push
mov
clc
jecxz
or
jb
push
mov
inc
sbb
scas
repz
push
cmpsl
jno
inc
lret
test
cmpsl
imul
sub
sti
pop
sbb
xchg
inc
mov
ja
pushf
es
inc
add
test
nop
ret
xor
and
pop
push
push
cmc
xor
and
pushf
xchg
sbb
int3
aam
sub
push
pop
push
and
ss
xchg
inc
js
int
pop
inc
stos
adc
xchg
fwait
pusha
pop
icebp
mov
std
cmpsl
xor
shlb
xchg
lahf
or
mov
loop
aad
lds
scas
xchg
leave
push
js
jae
std
testb
ret
cmpb
jno
add
iret
filds
jg
push
mov
push
pop
and
lods
add
or
mov
int
inc
cmpsl
pop
mov
cld
xchg
xchg
test
inc
iret
pop
sahf
fistpl
or
cltd
mov
aam
outsl
push
aad
cmp
cmp
jecxz
adc
and
push
mov
das
jge
pop
pop
add
aas
addr16
fisubl
iret
inc
cmp
pop
imul
mov
adc
imul
push
ja
sahf
xchg
idiv
sub
iret
std
mov
loop
sub
scas
cwtl
mov
push
add
push
fsubr
jo
xor
je,pn
jmp
scas
fildl
arpl
mov
jo
fmuls
mov
inc
mov
sub
xor
adc
cli
add
mov
loope
ja
sub
in
test
mov
xchg
inc
jo
xor
mov
push
push
mov
ficompl
int3
or
push
inc
shlb
jns
loopne
cmp
push
ror
pop
loop
enter
adc
cs
xchg
sbb
cli
roll
pop
pop
inc
jne
lods
add
insl
int3
xor
dec
shll
aad
push
inc
lock
cld
cmp
push
and
jbe
adc
jne
jg
jmp
inc
scas
std
xor
js
xor
loope
cld
in
xchg
push
cmpsl
sub
add
inc
inc
sbb
sbb
push
xor
sahf
and
mov
stos
mov
push
out
mov
jb
stos
not
fmuls
mov
jl
out
lret
inc
adc
or
push
xor
int
arpl
push
std
xchg
in
pop
mov
out
cmp
pop
ja
iret
mov
bound
xchg
insb
adc
and
inc
dec
int3
sub
jmp
jl
push
xor
gs
rorl
into
jg
cmp
lret
mov
jge
jo
sub
std
ret
adc
pop
test
mov
adc
xchg
adc
mov
out
pop
out
imul
iret
dec
mov
scas
out
test
mov
jmp
addr16
clc
mov
imul
or
popf
mov
imul
rorl
dec
xchg
std
test
loope
xchg
push
stc
ljmp
and
xor
cmp
sets
xchg
and
icebp
xorl
xor
lcall
movsb
shl
sbb
lahf
lahf
jge
arpl
out
fsubs
push
dec
cmp
cmc
idivb
adc
mov
jecxz
in
loopne
jecxz
jo
xchg
pop
outsb
in
cmp
clc
out
imul
inc
sub
xor
cs
insl
popa
nop
bound
mull
in
push
adc
arpl
rclb
and
inc
dec
inc
faddl
mov
mov
dec
loop
sbb
std
xchg
jnp
ja
jp
pop
icebp
sub
add
stos
xchg
int
pop
ret
dec
scas
ss
sbb
sub
lock
stc
add
mov
cmpl
dec
xlat
sub
loope
sti
jge
cwtl
push
mov
xlat
dec
and
jae
dec
xchg
mov
push
dec
stos
stc
jg
in
sbb
das
fsubrl
push
cmp
aas
enter
and
fcoml
scas
testb
and
jno
je
add
mov
leave
shll
cmp
and
lds
fcomp
mov
jb
outsb
mov
std
out
ljmp
xchg
fcoml
push
in
push
filds
inc
cmp
repz
or
xchg
mov
mov
add
add
pop
repnz
ljmp
aam
shr
rcrl
ds
les
adc
jle
adcl
stos
imul
mov
imul
sub
pop
sbb
cmc
orl
pop
cmp
sub
dec
cmp
cmpsl
or
je
add
dec
adc
jb
add
mov
and
inc
adc
dec
jle
jbe
lods
mov
sbb
cld
test
stos
or
cltd
stc
sbb
mov
cs
xor
cmpsl
popa
stos
mov
loope
cmp
add
nop
stc
andl
fildl
xchg
xchg
js
xor
stos
inc
scas
cmp
movsl
pop
test
xchg
add
faddp
mov
mov
adc
nop
stos
xchg
popf
dec
out
cmc
fwait
mov
popf
xor
aam
testl
push
mov
das
sahf
daa
clc
fstl
in
adc
or
subb
scas
xchg
xor
push
inc
jne
dec
inc
faddl
sarb
sbb
out
addr16
xchg
xor
shrl
push
fiadds
xorb
imul
imul
shl
imul
mov
insb
imul
les
xor
add
scas
cmp
xorl
pop
out
dec
test
jbe
stos
xor
imul
sbb
mov
sbb
push
push
sub
movsl
out
sub
out
clc
sti
gs
push
dec
sahf
cmp
aad
mov
mov
mov
and
push
movsl
out
js
sbb
imul
sbb
push
add
dec
pushf
xor
outsl
mov
fcmove
rcrb
subl
mov
lar
jg
negl
dec
xchg
pop
fbstp
bound
mull
int
mov
mov
sbb
xchg
sub
pop
test
add
popf
dec
pop
les
jle,pn
cwtl
sbb
ja
adc
mov
jmp
repnz
ds
shll
xor
pop
lret
or
push
ret
es
ror
clc
cmpl
xor
inc
outsb
cmp
cmc
jp
jmp
mov
adc
mov
pushf
cltd
push
arpl
mov
bound
mov
push
pop
movsl
mov
fsts
mov
lret
fdivs
scas
cmp
stos
ljmp
mov
and
jns
iret
outsl
adc
sub
int
int
cmp
into
cmp
dec
cld
sub
jno
adc
clc
inc
shlb
push
cmp
nop
cwtl
mov
lret
or
push
pop
dec
push
jae
out
sti
pop
fwait
pop
shl
mov
shll
ss
jg
sub
nop
or
mov
testb
inc
stc
mov
scas
pop
icebp
repnz
test
xchg
add
cmp
pop
cmp
ds
push
jo
xchg
aad
pop
add
xor
cmp
jp
movsl
xchg
mov
push
mov
jmp
or
push
push
rolb
xor
movsl
shrl
xchg
sbb
mov
push
fmull
aas
enter
enter
xchg
inc
ja
push
scas
dec
xlat
cmpsl
add
shll
mov
out
daa
sarl
mov
orb
int
loopne
mov
sbb
xchg
pop
jno
lret
adc
mov
insl
sbbb
sbb
repnz
and
inc
mov
and
in
xchg
fiaddl
das
inc
mov
cmp
xchg
mov
pop
xchg
outsb
add
xchg
les
push
xchg
xchg
pushf
test
and
loop
negb
pop
or
xchg
addr16
add
pop
and
ficompl
inc
cmp
out
pushf
fmull
sahf
int3
inc
push
clts
ss
xchg
and
insl
adc
rcrl
sarb
data16
xchg
jb
dec
test
add
pushf
pop
dec
dec
sahf
jecxz,pt
sub
jbe
pushf
es
scas
mov
ljmp
lret
pop
js
daa
xor
je
pop
insb
jbe
mov
mov
and
jnp
inc
cmp
sub
xchg
popf
mov
xor
xchg
add
sub
mov
and
test
and
mov
cmp
lds
cmp
daa
sub
sbb
dec
stos
test
cltd
mov
mov
and
pop
xchg
test
pop
cmpb
sub
mov
inc
inc
cs
or
or
ja
mov
jbe
pop
rolb
and
mov
jmp
out
sbb
outsb
sub
inc
in
cmpsl
dec
or
xchg
jmp
cld
or
sub
mov
insb
mulb
stos
arpl
pusha
scas
cmp
xor
jmp
jno
orb
push
pop
push
xor
leave
pop
push
jecxz
out
dec
rorb
popf
inc
sbb
sub
out
jo
xlat
mov
sti
mov
or
mov
mov
mov
sub
outsl
out
xchg
push
arpl
out
sub
lea
clc
mov
adc
mulb
int
insl
pop
movsl
xchg
mov
ds
mov
adc
mov
sub
das
les
scas
dec
rorb
sub
dec
adc
xor
int
aam
mov
nop
dec
fcoml
shl
pop
mov
pop
mov
negl
out
jmp
xor
adc
mov
mov
scas
popl
lods
xor
jp
out
shl
stc
dec
inc
push
jb
cs
mov
jnp
gs
aaa
mov
dec
rcrl
lret
shr
cld
subl
es
daa
add
int3
jnp
dec
movsl
push
dec
loope
movsb
sarl
outsb
and
push
mov
or
pop
xor
xlat
ljmp
push
push
xchg
stos
icebp
inc
cs
mov
xchg
xor
cmc
fmul
inc
repnz
add
cmp
sub
std
pop
mov
test
mov
sbb
subb
loopne
mov
mov
inc
mov
jp
add
cs
mov
fs
mov
jg
ljmp
cld
adc
ss
data16
lds
pop
push
div
inc
std
xchg
aam
mov
inc
repnz
gs
mov
iret
push
cmpsb
lods
dec
push
mov
cmp
aad
addr16
jge
cmp
in
cmovle
sbb
dec
jnp,pt
sbb
dec
bound
testl
sub
mov
andl
inc
int
pop
xchg
scas
std
xor
push
xlat
adc
out
push
jle
ret
jmp
fcmovnbe
mov
cmpsl
pop
or
in
icebp
mov
cltd
push
fildll
mov
inc
icebp
sub
lcall
ss
insl
jbe
mov
shrb
or
lea
sub
cmp
out
jns
gs
orl
mov
es
ss
jl
sbb
xchg
xor
mov
js
sti
xchg
into
push
pop
incb
jnp
mov
lgs
ds
pop
mov
inc
mull
loop
into
test
cmp
addl
pop
out
movsb
cmp
ss
inc
inc
aam
scas
cmp
xchg
jae
in
jb
lret
push
inc
xchg
test
inc
fcompl
xor
ljmp
scas
mov
popf
pop
nop
add
addb
xchg
ja
pop
push
sbb
xor
loop
std
xlat
inc
xchg
inc
loopne
pop
and
jl
scas
arpl
fstpt
inc
aaa
cmp
int
adc
imul
std
outsb
int
mov
mov
jno
jle
adc
repz
xchg
pushf
adc
xchg
sbb
xorb
scas
add
out
ljmp
or
enter
test
or
imull
sbb
mov
sub
data16
mov
pop
fnstsw
add
imul
cmpsl
ss
lahf
fs
jl
cmp
orb
cmc
movsl
int3
xchg
imul
cmp
jecxz
out
lds
xor
cmp
ss
xchg
pop
hlt
sub
xchg
pop
pop
sub
mov
cmp
cmp
inc
lahf
xchg
fbstp
mov
in
mov
retw
mov
sub
add
inc
jbe
adcl
es
or
dec
aad
enter
mov
push
sti
jnp
repz
inc
sbb
imul
cli
add
sub
in
shll
stc
push
pop
pop
dec
fsubs
sbb
push
sbbb
adc
sub
lea
jp
mov
mov
rorl
leave
fcmovu
push
xchg
sbb
stos
jno
fisttps
jp
xchg
cmp
lret
cmp
js
clc
dec
je
xchg
adc
jnp
leave
adc
insb
test
mov
pop
add
and
mov
xchg
lcall
aad
pusha
iret
fistpl
xor
das
xchg
inc
or
or
int
jmp
jecxz
aaa
mov
sbb
jae
pop
outsl
sahf
ljmp
dec
enter
sti
sub
ret
mov
das
adc
xchg
or
inc
and
inc
fucomip
std
sub
or
pop
push
add
mov
aaa
stos
cmp
xor
push
dec
out
mov
xchg
jge
notl
push
jnp
out
jae
lds
sub
insb
cmc
ret
sub
sub
mov
enter
xchg
cmp
inc
jmp
imul
ss
push
enter
xorb
add
out
out
jmp
jb
adc
int
adc
icebp
bound
and
repz
pop
les
loop
pop
cmpsb
adc
jno
push
addr16
push
push
pop
or
fisubl
add
cmc
or
inc
cmp
punpckhdq
cwtl
lea
mov
cmpsl
rorl
jno
mov
inc
mov
add
setnp
xor
and
xor
ljmp
fsubr
mov
fsubl
jnp
shll
or
sahf
clc
and
xchg
xchg
movsb
mov
cmp
lret
dec
ret
and
pop
pop
daa
sub
int3
push
cwtl
dec
pop
test
test
xchg
xchg
mov
mov
subl
test
bound
jne
or
clc
outsl
push
out
add
mov
lret
mov
dec
ret
into
outsl
scas
je
and
pusha
pop
and
sub
rol
add
jecxz
orb
imul
pusha
rolb
ds
cli
hlt
cmp
pop
sbb
pop
jne
dec
push
or
dec
xor
sbb
sub
inc
mov
clc
lock
orb
lock
dec
ficoms
pushf
push
jae
shlb
aad
xchg
test
test
xchg
jns
mov
inc
insb
data16
jmp
xor
fimuls
out
subb
movsb
js
pop
or
rep
or
xlat
nop
shr
fs
or
inc
ret
add
cmp
sub
mov
adc
aam
popa
dec
cli
lods
pop
pop
mov
pop
sub
insb
or
ljmp
imul
jp
push
gs
sub
pop
ja
xor
imul
mov
test
outsl
jge,pn
mov
and
insb
cmp
inc
fwait
mov
inc
lret
push
mov
pop
jns
push
pop
or
in
sahf
jns
or
jl
test
loop
mov
push
adc
loopne
add
in
sbb
or
bound
and
xchg
shr
cld
test
cmpsl
les
xchg
les
pop
and
mov
and
loop
outsl
stc
sub
orb
daa
imul
cmovs
sbb
sub
pop
add
test
inc
cmp
dec
dec
adc
dec
lds
or
inc
inc
fcomp
sbb
and
sbb
xor
pop
inc
outsb
cs
call
in
push
jge
or
aam
add
fsub
lahf
pusha
cs
pop
fstl
fldenv
push
adc
aaa
mov
icebp
mov
and
andb
adc
daa
mov
mov
dec
std
xor
gs
addr16
mov
addr16
push
mov
pushf
loope
jbe
cmp
and
mov
sub
mov
sbb
cmpb
sub
adc
pop
nop
imul
setnp
xor
shlb
fdivs
arpl
xchg
pop
mov
test
mov
and
mov
fcmovb
pop
enter
jb
rcrb
mov
mov
sti
adc
pop
push
jmp
sbb
mov
xor
cmp
lds
cmpsl
cmp
in
cmp
xchg
imul
sar
mov
testb
dec
or
int3
int3
repz
push
pushf
jbe
or
pusha
add
dec
sub
mov
daa
insl
adc
hlt
call
pop
fs
xacquire
lods
or
stos
mov
aas
test
stos
mov
inc
dec
aas
fadds
cs
es
enter
cltd
mov
bound
jnp
push
out
inc
dec
jae
or
lret
xlat
sbb
sub
mov
popf
movsb
push
xor
daa
inc
fisubl
into
add
in
int3
fwait
mov
sahf
int3
inc
aas
loope
aam
iret
mov
push
fcmovnbe
repnz
cmpsl
xor
inc
shlb
pusha
ret
push
mov
sarl
push
fcompl
js
loope
pop
test
xor
outsb
cmp
inc
cmp
cmp
dec
add
mov
mov
movsb
and
stos
iret
ret
pop
lds
mov
dec
jg
pop
inc
cmp
cmp
sbb
pop
loopne
out
sub
andl
sub
call
sub
les
cmp
xorl
mov
mov
add
test
insl
pusha
leave
jo
mov
cmp
cs
push
xchg
xchg
jp
jae
aas
icebp
adc
dec
out
jno
ja
inc
fstl
mov
aad
cmovno
push
repnz
inc
repnz
pop
sub
xchg
push
cmpsl
addb
inc
inc
push
fbld
cmp
loop
and
adc
addr16
fists
or
fs
adc
and
or
sub
das
aas
outsb
jmp
or
and
dec
data16
ljmp
je
mov
inc
xchg
inc
xor
fcompl
jb
js
arpl
dec
fsubs
xlat
push
loopne
setns
lahf
aam
out
mov
mov
mov
mov
dec
push
mov
adc
mov
shlb
fists
cmp
imul
mov
iret
int3
push
xor
aam
shlb
cli
push
dec
stc
sub
mov
into
int3
jge
iret
jb
jmp
jae
sub
jp
fstp
mov
mov
pop
lret
test
enterw
imul
xchg
mov
pop
adc
int3
jb
popf
cmp
pop
or
call
out
add
mov
or
popf
in
xor
repnz
push
lods
sub
fstps
fidivl
iret
inc
add
cmpsb
xor
sbb
testb
jae
cld
sub
mov
or
sbb
xchg
testb
jne,pt
lock
push
in
cwtl
and
xor
test
xor
js
xchg
les
jno
inc
sub
jmp
and
leave
push
fdivr
ret
shlb
ljmp
int3
lret
lahf
xchg
pop
jns
loopne
aas
mov
int3
test
test
xor
shrb
and
inc
xchg
xlat
sbb
mov
jae
inc
lahf
imul
xchg
fcoms
in
inc
jmp
add
xorl
mov
mov
jns
lds
loope
inc
iret
in
in
roll
xchg
and
das
cmpsb
rol
lea
outsb
inc
dec
imul
fwait
mov
mov
and
ret
lret
shr
cld
mov
dec
loope
aas
xchg
les
push
add
mov
andb
enter
adc
fwait
popf
jecxz
js
cmp
xlat
popa
ljmp
push
xchg
cltd
fwait
aas
xor
gs
adc
xor
fldt
mov
cli
dec
push
xchg
imul
leave
lds
jge
out
mov
mov
adc
xchg
xchg
add
push
lods
mov
jl
pop
dec
dec
out
popl
push
cli
pop
fstpl
out
int3
push
xor
aam
xchg
adc
shlb
or
insl
rol
mov
cmp
insb
in
push
xchg
sub
adc
outsl
hlt
in
lods
and
push
mov
cmp
les
cmp
hlt
cmc
sbb
pop
mov
sbb
push
dec
jb
cmp
jle
push
or
mov
jle
and
and
fstpt
cld
adc
xor
ljmp
and
out
cmp
in
addr16
mov
pop
jecxz
icebp
xor
push
mov
adc
nop
sbb
push
jae
sub
shll
ljmp
sbb
inc
int
mov
sbb
lea
mov
jns
sbb
mov
cmp
daa
sub
mulb
int
insl
pop
movsl
pop
rclb
cmp
test
mov
sahf
popf
lock
incb
nop
aaa
mov
and
pushl
xchg
push
sub
cmpl
dec
popa
push
add
adc
or
or
and
add
stos
pop
aad
lea
ret
ljmp
add
sahf
push
xor
xchg
xor
repnz
xchg
int
int3
push
xlat
lods
mov
rcll
and
push
outsb
addr16
push
mov
shlb
pusha
or
repnz
xor
outsw
icebp
mov
imul
push
rcll
and
int
gs
pushf
incb
inc
imul
and
lret
and
js
cmc
sbb
sti
ds
push
pop
mov
rorb
pop
cmovno
inc
jbe
sti
pop
fcoms
rcrb
clc
xorb
xchg
test
mov
adc
inc
or
hlt
mov
nop
mov
aad
out
jmp
jb
adc
push
push
dec
insl
std
lods
pop
dec
dec
jno
adc
enter
jns
push
outsb
adc
stos
cltd
scas
les
cmp
pop
sub
lods
addr16
or
in
ret
mov
pop
add
xor
shll
iret
mov
in
and
jmp
mov
insl
pop
or
sub
xor
sub
jmp
mov
hlt
sbb
jb
rcll
rclb
dec
dec
movsl
test
ja
bound
adc
inc
cmp
mov
mov
push
fimuls
enter
add
xor
int
gs
pushf
push
popa
adc
cltd
fistps
dec
pop
push
push
cwtl
cli
push
leave
shrb
xchg
fldcw
xor
mov
push
lret
fsubl
sti
mov
jle
pop
cmpsb
jmp
xlat
xlat
or
cld
jbe
bnd
mov
sbb
hlt
jmp
faddl
daa
mov
pop
pop
incb
addl
jp
mov
enter
sub
or
cmp
movsl
inc
inc
push
jp
sahf
pop
ds
enter
mov
add
inc
out
sbb
pushf
test
sbb
fs
jecxz
add
insb
stos
cmpsb
loopne
mov
fsubr
or
pop
cmp
cmp
or
cwtl
sarl
add
jae
outsb
push
flds
mov
adc
pushf
ljmp
and
sub
mov
enter
add
push
sub
out
cmc
orl
nop
je
push
push
ror
shll
inc
stos
sub
out
fcoms
mov
push
pop
fcmovnb
lret
lret
dec
aam
jns
mov
sub
jecxz
dec
jle
xchg
popf
insl
lret
jae
out
imul
mov
mov
insb
cmc
sahf
sahf
inc
lret
pop
ja
adc
addb
hlt
add
movsl
xlat
mov
dec
add
cmp
inc
and
sbb
cmp
jo
dec
adc
lds
out
movsb
add
push
push
push
inc
cmp
xorb
dec
jge
adc
in
fcoml
push
mov
mov
les
repz
inc
call
xlat
mov
sbb
jp
adc
mov
ljmp
divb
jbe
jecxz
iret
std
mov
cmp
dec
cmp
imull
gs
clc
sub
les
popa
push
adc
pop
nop
jmp
pop
mov
nop
outsb
repnz
push
stc
cli
test
lds
mov
push
cltd
add
outsb
xor
inc
and
lahf
repz
xor
mov
imul
or
out
and
das
sub
add
in
imul
adc
fidivs
gs
dec
fstp
fisubs
dec
ds
insl
rcl
mov
test
dec
iret
and
int3
aad
inc
lret
push
push
ljmp
enter
pop
mov
fnstcw
ret
dec
xor
adc
cltd
addr16
scas
fucom
outsl
js
in
clc
push
xor
xchg
fmuls
mov
inc
inc
sti
push
jmp
es
push
mov
cmpsl
and
mov
in
sbb
int3
cmpsl
cmpsl
test
aam
scas
leave
fcmovbe
dec
enter
leave
addl
es
push
in
std
lods
sub
jl
adc
stos
cmpsl
scas
mov
or
call
arpl
push
fwait
inc
imul
mov
int3
pop
enter
pop
ljmp
cli
mov
je
mov
repnz
aam
cmp
je
imul
mov
icebp
jg
mov
xor
xchg
or
push
inc
mov
jae
pop
js
mov
das
lret
push
adc
sub
mov
addr16
cmp
xorl
arpl
dec
int3
mov
mov
cmpsb
movsl
into
sub
imul
stc
notl
push
js
dec
adc
pop
das
lcall
and
jmp
popa
fistl
jecxz
push
mov
ja
clc
cmp
inc
outsl
sub
leave
fcmovbe
dec
enter
sub
add
xchg
lds
dec
movb
add
leave
mov
sub
icebp
ljmp
xchg
sbb
dec
out
outsb
out
aam
adc
mov
mov
ljmp
cmc
fwait
jmp
cmp
add
sub
mov
mov
inc
or
jg
into
ds
pusha
adc
imul
lahf
fs
jl
sbb
push
pop
xlat
pusha
ljmp
pop
idivb
sbb
dec
inc
and
xchg
xchg
daa
lods
mov
dec
jge
jmp
imul
push
add
arpl
imul
arpl
out
popf
dec
out
pusha
sub
xchg
and
subl
pushf
and
xchg
sbb
int3
push
lahf
mov
lcall
dec
loop
stos
fs
orb
push
pushf
idivl
int3
push
dec
jns
dec
jae,pn
movsb
shl
stc
in
ja
fsubrs
mov
xchg
stc
jmp
xor
lds
xchg
orl
pop
repz
mov
and
fimull
rcrb
dec
lds
popf
popf
inc
inc
rcl
fwait
popf
add
scas
aam
repz
and
or
daa
daa
iret
mov
loopne
pop
lds
adc
imul
xchg
mov
sub
or
or
inc
outsb
or
push
jne
test
mov
sub
mov
mov
pop
out
cld
aas
push
jmp
sbb
add
xor
test
mov
mov
int3
push
adc
or
and
xchg
test
paddusb
dec
out
or
movsl
or
int3
jnp
adc
stc
repz
imull
jmp
out
mov
fsub
and
popa
std
std
lods
sub
ss
insb
pop
inc
pop
out
push
lcall
lds
push
or
rorl
push
dec
stos
add
lock
mov
inc
and
inc
dec
or
inc
int3
imul
sbb
pushf
sbb
daa
mov
cmc
mov
je
push
sub
ficoml
cltd
xor
xchg
int
sbb
dec
xorl
xor
push
fcmovne
test
ds
mov
imul
lahf
lcall
dec
rcrl
outsb
mov
mov
gs
xor
add
mov
shlb
rorl
inc
stos
dec
int
or
mov
xor
sbb
adc
cmp
jb
pop
les
cmc
jmp
sub
xor
inc
loopne
jecxz
dec
pop
adc
dec
xlat
mov
fistps
xchg
sbb
mov
test
mov
push
sub
or
sbb
mov
rorl
ret
jno
dec
sub
in
jmp
stc
or
pushf
int3
push
fistpll
mov
pop
sbb
clc
xor
out
js
or
ret
or
es
loope
enter
sbb
and
push
pop
cld
xor
leave
xor
pushf
cwtl
or
fwait
lret
push
fidivrs
fidivs
mov
fisubl
enter
sbb
push
dec
adc
jmp
mov
mov
js
lea
int
outsb
push
sbb
and
xchg
dec
fistpll
hlt
sbb
inc
jb
xchg
push
xchg
mov
jl
andl
in
jbe
popa
call
dec
and
bound
movsl
das
adc
xchg
pop
or
repz
sbb
loope
or
outsl
test
cs
mov
sarl
ljmp
mov
sbb
adc
dec
xchg
dec
jmp
insl
out
jns
xorl
jmp
notb
loopne
stc
mov
repnz
enter
out
gs
js
repnz
jns
ljmp
dec
mov
imul
xchg
sub
addl
popf
test
mov
jmp
or
lea
mov
mov
ljmp
lods
cwtl
push
push
pop
ds
shrb
or
xchg
ljmp
sbb
scas
and
pop
push
mov
out
mov
das
xchg
inc
inc
and
int3
jb
mov
mov
leave
sbb
inc
mov
jo
add
fistl
push
and
mov
mov
and
fistpl
cmp
fistl
sbb
sti
cmp
jno
pop
mov
sub
insl
mov
cmp
inc
es
push
bnd
sbb
rolb
rcll
jmp
mov
mov
fs
mov
es
lcall
fldt
rclb
popa
daa
test
xchg
mov
movsl
jnp
jb
jp
out
xchg
aad
xchg
cwtl
popa
insl
xor
jo
push
xor
jl
or
test
and
rcr
nop
dec
rcrb
outsb
fwait
mov
xchg
push
icebp
push
loopne
dec
push
jae
sbb
mov
mov
rcrl
jno
loop
sub
arpl
inc
loope
or
mov
bound
mov
sub
sbb
aad
movq
push
fs
call
leave
and
dec
dec
jmp
ljmp
sbb
jl
leave
leave
jns
nop
add
pop
push
sahf
mov
scas
push
adc
inc
iret
jbe
pushf
imul
mov
pop
outsl
xchg
dec
out
sbb
mov
jo
in
jmp
loop
sbb
cmp
mov
or
jns
nop
mov
mov
aam
das
mov
inc
shrl
std
jecxz
and
mov
inc
iret
orb
sbb
fdivs
lret
push
jnp
mov
add
in
push
ja
encls
pop
cmp
cs
mov
cmp
jp
gs
repnz
in
or
loopne
adc
int3
dec
and
add
xchg
les
push
inc
mov
jecxz
and
fisubl
jbe
sbb
inc
pusha
int3
push
scas
orl
mov
cmp
push
fyl2xp1
or
loopne
mov
filds
inc
push
inc
leave
lods
stos
adc
sub
js
andl
mov
mov
lret
rcrl
aam
jns
mov
sub
jecxz
dec
jle
xchg
popf
insl
lret
jae
ljmp
push
push
test
mov
out
mov
add
or
or
or
imul
mov
mov
xchg
xchg
inc
and
jecxz
jnp
lcall
inc
and
sub
outsl
stc
addb
jno
mov
xchg
int3
mov
cmp
lar
cmc
stos
inc
pop
mov
orl
iret
pop
xor
fwait
int3
push
loop
xchg
push
test
mov
jp
int3
and
fimuls
cmp
jmp
inc
mov
cli
sbb
mov
cld
test
pop
loop
xchg
enter
add
push
cld
inc
mov
loope
mov
roll
frstor
lret
lock
lahf
sub
imul
cmp
jno
je
ficomps
pop
popa
dec
cli
mov
pop
fs
pop
jecxz
rorb
mov
jae
mov
repz
repz
inc
out
js
aad
lds
mov
push
inc
std
shlb
add
sar
and
outsb
aam
mov
adc
clc
loop
out
stc
std
xchg
out
addr16
push
sub
mov
mov
cwtl
mov
xchg
push
mov
and
and
pop
or
cmpsl
fimuls
lods
int
outsb
shl
arpl
outsb
jp
cmpsb
gs
xchg
addr16
push
ror
ss
cmp
popl
call
nop
shr
cld
xchg
push
cmpsl
sub
dec
aas
aad
push
add
push
pop
inc
sbb
and
pop
sti
test
mov
rcrb
cmp
loope
outsb
xlat
popa
les
in
bnd
inc
loope
test
out
idivb
mov
sub
iret
mov
mov
add
dec
pop
shlb
fcmovnu
mov
shrb
mov
cltd
add
cwtl
pop
lret
jno
pop
pop
call
lahf
test
and
daa
mov
xor
fwait
movsb
mov
mov
fst
pop
push
xchg
mov
loop
xchg
inc
insb
out
push
les
clc
xchg
xchg
dec
enter
add
sub
ljmp
cmp
or
das
add
adc
mov
inc
pop
sub
jno
xchg
xchg
xorps
or
fidivl
test
xchg
and
inc
lods
fstpt
mov
mov
add
in
dec
push
inc
sub
scas
mov
movsl
push
fnstsw
out
orb
push
test
out
cmpsl
xor
je
push
dec
out
sbb
ret
mov
mov
insl
mov
sahf
inc
movsl
arpl
adc
lods
push
mov
xor
xlat
adc
fdivp
test
xchg
mov
int
pop
pop
movsl
sub
xchg
rol
out
enter
and
sbb
adc
pop
inc
xlat
dec
lcall
sub
xchg
pop
mov
out
sahf
mov
mov
lcall
mov
push
xchg
aaa
out
add
cmp
mov
inc
cmc
inc
xlat
pop
push
xorl
cmc
fdivl
shrb
in
mov
xchg
fisubrs
sti
xchg
jmp
xlat
rcrl
dec
dec
daa
lret
pop
bound
rcr
mov
xchg
testb
adc
xchg
scas
das
rolb
stc
sbb
pop
push
or
jecxz
jns
dec
adc
pop
nop
roll
xchg
sub
fldl
pop
outsl
adc
sti
repnz
enter
js
orb
inc
out
sub
fucomi
xchg
mov
mov
negb
or
jmp
dec
push
popa
ret
jge
les
lahf
test
adc
daa
mov
sbb
cmp
sbb
mov
fs
iret
pop
sbb
sar
jbe
jae
dec
iret
adc
into
push
jo
adc
fcmovbe
push
jbe
cmp
imul
dec
pop
sbb
mov
in
push
add
outsl
js
in
clc
rcl
call
out
es
xor
mov
fmull
out
mov
and
or
xchg
jae
pop
call
mov
test
addb
sbb
adc
cmp
cmpsl
mov
loopne
int3
push
ficompl
adc
and
cmpsl
jecxz
js
cli
lds
aaa
sahf
inc
fsubrs
cmp
dec
dec
andl
into
int3
outsb
ja
jecxz
negb
sti
push
es
icebp
sbb
out
push
lret
in
push
mov
das
xchg
sbb
mov
rcl
xchg
lods
or
mov
jno
les
xchg
lea
cs
lock
shll
fs
cmpsl
push
mov
sbb
mov
fcmove
subb
addr16
pop
pop
in
lret
aas
push
cmpsl
xchg
add
andl
dec
outsl
imul
bndstx
or
out
repnz
xchg
push
mov
mov
fsts
pushf
bound
inc
cld
dec
lahf
lock
fstpt
test
imul
idivl
adc
test
out
int3
out
mov
add
add
nop
inc
pop
and
mov
jb
sub
cmc
sbb
sub
je
xchg
imul
leave
lds
or
out
jae
xchg
vsubpd
jne
or
mov
outsl
push
out
lret
jb
jae
out
fwait
shl
imul
loopne
adc
ret
dec
inc
adc
insb
xchg
outsl
nop
mov
outsb
add
xchg
ljmp
xor
popa
adc
add
rcrb
ret
mov
push
push
test
jbe
sbb
imul
xchg
sbb
pop
cmp
add
pop
lea
mov
orl
xchg
out
ja
hlt
jge
shll
jle
popa
cwtl
movsb
jmp
xchg
dec
dec
test
out
ja
push
mov
loopne
mov
cmpsb
repz
lcall
push
aas
adc
fisttpl
adc
std
testb
movsl
sbb
aas
fildll
push
adc
fsubl
loopnew
push
dec
js
in
js
add
ss
lret
iret
mov
push
cmp
mov
cs
sbb
loopne
mov
xor
fmul
ljmp
mov
fimuls
push
xor
movsb
shl
add
sub
mov
xchg
adc
mov
dec
jp
push
xlat
pushf
adc
sub
mov
mov
cmpb
dec
loop
xor
jnp
stc
icebp
push
xchg
add
mov
adc
jbe
aam
scas
sub
xchg
inc
lret
mov
mov
icebp
rorb
inc
push
shlb
imul
in
and
push
loope
int3
lahf
xchg
jae
rcl
sub
call
fidivrl
mov
repz
lods
scas
std
jle
inc
hlt
in
pop
jmp
outsl
jae
ss
enter
mov
jae
add
dec
xlat
popa
xchg
lcall
int3
stos
cld
and
add
stc
orl
dec
fdivrs
pushf
push
or
push
dec
aam
out
shlb
sub
jecxz
jo
std
jmp
notb
es
imul
sub
js
xor
xchg
sub
sub
ss
ds
sub
adc
lods
sub
outsl
jno
xchg
sbb
ret
inc
jge
rcr
arpl
jmp
xchg
add
adc
loop
mov
int
cltd
and
mov
in
cmpsl
lea
sbb
push
adc
nop
shll
rorl
mov
mul
fs
outsl
inc
or
in
jbe
mov
idivb
fwait
in
sbb
push
aam
scas
leave
fimull
aas
enter
inc
repz
mov
xlat
popa
les
nop
mov
nop
mov
stos
pop
push
inc
jg
into
adc
xor
mov
jo
std
jl
push
into
sub
notb
out
rcr
push
pop
rcrb
mov
shr
sbb
jne
push
push
repz
xor
repnz
pop
add
cmpl
dec
cmp
into
mov
xchg
inc
mov
inc
icebp
rorb
mov
pusha
and
sub
jae
mov
jl
dec
mov
mov
or
or
push
fidivl
mov
ret
hlt
in
nop
ret
pop
xor
jp
test
fbld
add
adc
imul
int3
inc
mov
xchg
int
popf
nop
inc
dec
incb
test
mov
ja
iret
lods
mov
mov
sbb
jmp
cli
xchg
sub
aas
orl
cmp
xor
xchg
lahf
jl
sets
test
mov
sub
xchg
push
jbe
bound
push
loopne
or
mov
jno
pop
out
bound
sbb
adc
pop
jecxz
ss
bound
push
pusha
push
or
fildll
lret
roll
cli
test
mov
insl
imulb
bound
stc
popa
ljmp
jl
addr16
data16
xorl
sahf
orb
das
xchg
flds
ss
sbb
cmp
xchg
lea
mov
outsb
ja
sahf
xchg
sbb
cs
lret
sub
das
pop
sub
test
inc
mov
cwtl
popa
push
dec
xlat
loope
gs
shlb
push
out
in
out
hlt
in
push
in
mov
in
jb
fisubl
cmp
xor
in
xchg
cmpsl
jp
fucomip
jb
movsb
sbb
stc
orb
sbb
push
pushf
cmpsl
add
inc
mov
shll
insl
je
pop
rcrb
test
jnp
jno
add
into
gs
inc
pop
out
inc
xor
mov
stos
cmp
and
xor
imul
dec
push
jae
push
mov
popf
push
jmp
xchg
inc
adc
lahf
mov
mov
aas
mov
push
dec
dec
xlat
mov
inc
and
iret
adc
push
push
push
lret
outsl
stc
jp
adc
xor
fisubs
iret
fcmovnb
xchg
cmc
jle
imul
lahf
pop
sets
push
lahf
popf
inc
and
into
sbb
mov
cmp
adc
mov
sbb
xor
hlt
outsl
and
stos
mov
xor
fisubs
sahf
shr
dec
movsb
jmp
sbb
mov
jb
call
adc
cmpsb
fdiv
xchg
xor
mov
bnd
movsb
mov
rcr
vmwrite
mov
inc
imul
adc
pop
sub
mov
jb
decl
cmp
xlat
mov
fsubr
mov
int3
std
insb
cmp
aam
fistpll
stos
mov
mov
insl
negb
loope
mov
cltd
sbb
repnz
rclb
pop
inc
aam
mov
xchg
sub
rcll
les
mov
inc
xchg
out
scas
jae
mov
out
jno
or
data16
jbe
pop
loop
sub
push
jl
cld
test
or
pop
lea
mov
aaa
rcrl
cmpsl
xor
and
cs
lcall
je
daa
mov
test
in
xor
shrl
inc
mov
xchg
adc
sub
mov
jbe
dec
mov
pop
adcb
js
pop
adc
fists
inc
cmc
stos
pop
out
mov
sub
push
pushf
fnstenv
cs
push
dec
rorl
aad
mov
sub
mov
bound
flds
mov
ud0
repnz
cmpsb
icebp
xchg
push
xorl
mov
into
mov
xchg
es
xchg
lock
mov
in
pop
lea
ret
add
mov
mov
decb
sbb
out
sarb
pop
cmp
in
mov
stos
pop
adc
loope
dec
mov
sub
pushf
loopne
xchg
inc
jo
mov
sbb
pushf
sahf
xchg
hlt
jge
push
shll
pop
sbb
stos
xor
cmp
mov
mov
ja
xlat
insl
repnz
jno
jmp
push
xchg
push
lcall
bound
addb
jmp
test
bswap
jnp
jo
mov
ret
add
push
cmpsl
xor
inc
inc
xchg
loop
pop
movswl
sub
xor
sbb
fildll
xchg
les
sub
imul
pop
cmp
dec
push
cmp
jecxz
xchg
in
mov
je
rolb
dec
arpl
sti
or
xor
mov
pop
shrb
or
dec
ret
lret
mov
pop
out
data16
cs
sti
jo
push
inc
dec
imul
loope
xchg
cmpsb
xor
lret
push
into
jmp
stos
pop
push
in
fs
push
iret
mov
lods
rcrl
cmp
test
icebp
cli
mov
outsl
jno
fimuls
inc
jbe
arpl
cwtl
vpcomuw
sahf
je
cmpsb
xor
sbb
int
int3
outsl
stc
push
fs
xor
rcr
xchg
pop
jecxz,pt
xchg
out
mov
cmp
push
fwait
or
outsl
out
or
mov
mov
orl
movsl
jo
adc
cmp
jns
jl
xchg
xchg
les
in
mov
subl
std
ret
sbbl
sbb
pop
or
imul
cmp
movb
aas
mov
mov
lods
sbb
inc
insl
lcall
ficompl
or
call
dec
or
mov
adc
xchg
add
cmp
dec
jns
jmp
mov
jp
mov
sub
xchg
inc
insl
and
cmc
insl
mov
jge
push
shlb
xor
push
mov
pop
rcr
arpl
or
ljmp
shrb
das
fdivrl
jae
ret
mov
hlt
sub
gs
adcl
loope
cmp
ljmp
pop
jae
movsb
pop
sarl
mov
pop
rorl
cmpsl
mov
cmp
sbb
aam
mov
call
xor
dec
insb
lea
jmp
fistl
cmp
aam
or
pop
mov
cmp
sahf
daa
mov
pop
into
push
popa
jne
nop
xchg
lcall
hlt
data16
lret
pop
test
leave
xchg
xchg
or
and
sbb
lahf
pop
push
sub
lods
in
popf
xlat
dec
loop
cmpsb
inc
aad
dec
pop
cmp
loopne
add
stos
js
inc
insl
sahf
sahf
cmp
add
push
les
loopne
jae
push
fistps
aaa
dec
into
inc
dec
shll
adc
mov
jne
stos
xor
and
data16
aaa
cmc
cmpsb
xor
jmp
out
orb
jne
gs
clc
push
mov
loope
xlat
popa
mov
mov
aaa
xor
sub
pop
out
mov
out
inc
aas
cmpl
int
mov
or
int3
mov
shll
mull
mov
cmpsl
pusha
adc
pop
jbe
imul
imul
xchg
add
mov
push
mov
push
nop
out
mov
test
ss
xchg
jmp
lcall
pop
jae
fisttps
sub
push
push
mov
out
in
sbb
adc
xchg
xor
imul
add
jb
test
lea
jbe
movsl
movsb
std
jbe
mov
hlt
mov
cmp
notb
mov
out
ja
bound
xchg
pop
sbb
ret
xor
jmp
icebp
mov
lods
jmp
out
clc
xor
xchg
push
cmpsl
dec
cs
lods
clc
into
sbb
push
sbb
and
int3
push
lahf
sub
lds
cmp
in
jnp
loopne
mov
scas
movsl
ret
stos
and
mov
ja
jecxz
test
jle
push
ja
addr16
fildll
inc
add
out
sub
jae
shl
xor
in
fmuls
add
loope
repz
jmp
data16
fsubl
cs
dec
adc
jmp
cs
addr16
jp
push
push
aaa
inc
aam
daa
and
or
clc
test
scas
inc
and
rorl
jl
rcll
push
imul
hlt
iret
cs
cmpsb
ret
sub
je
outsl
jno
cltd
das
dec
ja
test
cmpsl
xor
test
sub
inc
jb
test
lods
ret
fimuls
xchg
into
stos
xor
cmpsb
fdiv
xchg
inc
jmp
mov
xor
push
daa
imul
movsb
xor
dec
test
mov
adc
fdivrs
int
or
rorl
nop
movsb
leave
pop
pop
jno
jns
mov
insl
not
in
call
push
lods
push
fbstp
xchg
mov
mov
sub
gs
mov
gs
cmp
sub
mov
mov
and
movsb
mov
pusha
sub
pop
test
pop
loop
sbb
xchg
mov
movsl
mov
bound
mov
pop
loope
roll
push
adc
mov
imul
lds
jb
and
push
push
dec
mov
aas
pusha
jle
arpl
imul
scas
mov
lret
sbb
and
sub
loopne
push
mov
jecxz
movsl
or
sbb
xchg
in
sbb
mov
inc
outsl
xchg
pop
enter
push
test
or
dec
xor
dec
add
xlat
jl
out
call
fsubl
push
js
or
push
cmpsl
test
jno
je
popf
inc
pop
sub
pushf
mov
stos
lods
jle
popa
outsb
push
aam
adc
adc
leave
out
xor
stos
mov
sbb
pop
jg
add
cmp
dec
xchg
das
mov
lcall
pop
data16
aam
dec
outsb
cli
mov
adc
ret
mov
pop
jle
mov
jae
adc
xchg
push
test
stos
dec
rorl
std
dec
lock
fstps
push
iret
pop
xchg
aaa
jae
and
pop
mov
mov
jp
and
movsb
cmp
pop
jmp
sub
xchg
adc
jmp
cld
test
outsl
and
push
and
sahf
add
cmp
add
add
rolb
in
sbb
push
cmp
leave
push
pop
loop
cmp
test
mov
mov
mov
pushf
cmpsl
lds
out
bound
shlb
popf
fwait
mov
adc
inc
test
sbb
sub
sbb
jl
push
lret
shlb
push
xor
testb
or
lea
sub
xor
mov
adc
xor
push
inc
pop
jecxz
dec
inc
movsl
fdiv
push
call
loop
fnstcw
xchg
stos
mov
pop
test
test
outsb
cltd
jg
pop
scas
mov
mov
leave
cld
sbb
pop
fcmovu
lea
lods
mov
insb
iret
pop
cmp
aaa
pop
pop
mov
std
push
hlt
jb
test
cwtl
lret
xor
rcrb
add
andl
pop
sbb
call
mov
aas
inc
cmp
and
test
mov
test
aam
adc
sti
jmp
test
push
pop
mov
sbb
pop
movsb
insb
jl
or
std
pop
ljmp
rcrl
or
subl
jo
loopne
negb
std
xchg
adc
lahf
inc
das
mov
lret
int3
sub
daa
jecxz
idivb
fs
jne
cmp
sbb
push
ret
jge
fimull
add
sti
js
mov
testl
mov
mov
and
stc
dec
mov
xchg
pop
repz
jecxz
ficompl
imul
loop
sub
xchg
and
out
adc
add
subl
inc
inc
adc
cmpsb
ja
int
dec
fisubrl
cli
sbb
jno
pop
and
mov
adc
arpl
sub
bound
inc
in
pop
pusha
jbe
call
jno
jno
pop
dec
orl
arpl
push
adc
inc
jae
add
iret
mov
pop
xor
push
sub
xchg
out
clc
sub
bound
xlat
popa
ljmp
in
cwtl
and
lahf
push
lahf
sub
adc
add
rorl
sbb
ret
mov
aas
xor
pop
jo
sbb
push
je
movsb
push
nop
cltd
popl
sbb
insb
inc
xor
lods
iret
fmul
into
push
sub
lds
insb
pop
imul
ss
xchg
pop
push
adcl
imul
mov
cmovo
or
mov
mov
pushf
filds
scas
loopne
dec
pop
in
jb
push
faddp
leave
ret
dec
ds
push
pop
mov
in
jbe
popa
pop
call
movsb
lods
cmpsl
aam
sub
stos
xor
fs
iret
leave
idivb
pop
repz
pusha
loop
sti
xchg
call
jae
shrb
stc
mov
adc
dec
imul
xchg
sbbl
mov
in
pop
out
rclb
sahf
mov
lahf
dec
stos
fmull
cs
ds
cmp
aam
stos
clc
movsb
leave
jmp
gs
cltd
or
cmp
mov
xchg
jne
adc
fisttpll
cmp
aam
or
pop
mov
cmp
shl
add
test
dec
push
jl
dec
mov
dec
mov
outsb
adc
mov
out
popf
push
les
jmp
mov
xchg
push
and
lock
aaa
add
or
fidivl
xor
and
fcmovnb
xor
cmp
mov
jae
or
sbb
mov
andb
bound
arpl
add
enter
cmpsl
fs
stos
add
into
jns
stos
movsb
dec
int
hlt
inc
ja
aaa
pop
pop
fildll
xchg
inc
outsl
jae
adc
pop
mull
shll
push
scas
mov
add
mov
aas
loopne
jo
mov
push
js
fsubs
push
imul
xchg
gs
sbb
or
out
xchg
ficompl
xor
lock
lds
in
in
out
mov
and
stc
pop
mov
das
sub
mov
imul
or
je
and
lcall
sahf
cltd
ds
pop
dec
dec
outsb
or
out
sahf
loop
pushl
sub
jecxz
jns
xchg
jp
sub
mov
stos
in
movsl
pop
inc
pop
fists
adc
cmp
loopne
add
stos
js
inc
push
movb
cmp
test
mov
ror
cld
adc
cmc
and
aaa
fs
mov
xor
movsl
aaa
je
xor
stos
movsl
push
pop
out
push
adcb
dec
roll
jecxz
xchg
mov
mov
sub
sti
sub
shlb
shll
popa
fildl
popf
jb
cmpsl
xor
into
ror
les
test
adc
and
mov
les
mov
in
stos
out
mov
cmp
mov
lret
jno
lds
loop
fsts
inc
mov
into
adc
pop
repz
out
jmp
mov
sbb
xlat
sarb
cs
sahf
daa
dec
adc
jmp
lret
lret
push
pop
dec
mov
in
adc
inc
mov
fs
sarl
loope
and
dec
sbb
call
rcll
pop
dec
mov
in
stc
cmp
out
pushf
mov
inc
inc
int3
mov
insl
dec
push
test
shlb
push
outsb
mov
xchg
inc
rcr
sbb
inc
jae
mov
mov
push
psubsb
or
xchg
push
stos
xor
cmpsb
fdiv
xchg
xor
xlat
mov
fwait
cmpsb
int3
fmuls
bnd
movsb
mov
rcr
lahf
jns
outsl
adc
lds
inc
imul
pop
xchg
lcall
fsubr
cmp
add
ja
dec
insb
lea
mov
je
movsl
mov
call
jge
pop
lea
jg
out
js
inc
xchg
idiv
loop
xchg
cmpsl
outsl
xchg
popf
inc
fisttps
imul
xchg
aaa
bound
fildl
jl
arpl
jg
lret
jns
pop
jmp
cltd
pushf
dec
gs
push
adc
negb
dec
sbbb
dec
cld
test
lret
add
repz
push
fs
jbe
mov
cmp
push
push
mov
mov
enter
ds
cmpsl
xor
shrl
xor
lods
nop
sbb
int
mov
cltd
xor
cmp
inc
rclb
xchg
jp
scas
cmp
and
jnp
cmp
cmp
cwtl
pop
ss
and
pop
repz
cmpsb
in
sub
add
jle
je
cmpsb
movsb
mov
out
mov
or
lret
pop
test
mov
mov
mov
cmp
icebp
adc
add
jno
push
dec
sub
mov
sahf
push
pop
jg
add
cmp
arpl
mov
dec
repnz
shlb
mov
andb
lahf
lahf
mov
cs
ljmp
push
out
add
orb
popf
shr
adc
jbe
or
sbb
icebp
jp
sbb
ficoml
outsl
jo
adc
es
cmp
lods
arpl
add
jge
pop
or
shr
push
nop
lcall
adc
add
mov
nop
sets
jge
gs
clc
xorl
cmp
xchg
jb
dec
xchg
sbb
add
jae
movsb
pop
cld
mov
mov
dec
xor
cmpsl
insb
inc
mov
loopne
or
xchg
mov
cmp
adc
and
xor
aam
subl
std
ret
sbbl
pop
lock
jno
ds
xchg
and
or
add
and
testb
mov
imul
enter
sbbl
mov
pushf
push
jb
mov
jmp
jne
pushf
dec
push
pop
sub
lcall
pop
sbb
adc
xchg
popf
adc
mov
sti
and
imul
push
sub
fimuls
sub
imul
je
es
ss
push
outsb
mov
es
xor
adc
ljmp
test
inc
outsl
stc
mov
sbb
test
pop
incl
fwait
cmp
or
jb
repnz
repnz
cwtl
and
lret
and
pop
mov
and
push
xchg
sub
imul
inc
leave
mov
sbbb
push
xchg
test
je
xor
das
repz
push
push
pop
jno
pop
in
cmp
sti
xchg
push
pop
sahf
div
adc
xchg
lahf
push
cmpsl
mov
add
inc
rclb
xor
jnp
add
push
dec
shll
mov
repz
dec
shl
mov
pop
dec
test
jmp
imul
xchg
sbb
push
mov
xchg
icebp
jp
adc
daa
inc
fisubl
into
add
ret
fs
cmp
fcomps
jae
cld
add
and
mov
mov
dec
push
dec
ljmp
je
pop
leave
push
psubsb
xchg
adc
cmc
xchg
xor
xlat
mov
mov
shl
jl
movsb
mov
rcr
lahf
jns
test
mov
imul
iret
mov
and
inc
add
call
xor
dec
xchg
inc
andb
jl
das
icebp
cmp
push
cli
push
xchg
pop
and
cmp
or
sbb
cmp
lret
pop
add
icebp
arpl
or
mov
xor
or
or
xor
push
xchg
sub
cmc
jecxz
mov
jle
call
xchg
add
add
xchg
push
cmpsl
jns
inc
lret
mov
ror
push
ds
rolb
cmc
sar
mov
push
les
lea
cwtl
and
pop
stos
push
jp
xor
push
sarl
sbb
test
mov
stc
mov
push
cltd
test
pop
incl
fwait
cmp
sti
scas
cmp
push
pop
bound
repnz
cwtl
and
lret
and
ret
js
lds
sub
and
push
xchg
sub
imul
inc
leave
mov
jb
add
xlat
sbb
xor
push
das
cmp
movsl
dec
push
push
jg
cli
pop
in
cmp
sti
and
add
xchg
lahf
push
mov
add
inc
or
dec
dec
xor
add
push
icebp
adc
ljmp
das
repz
dec
shl
mov
push
rorb
imul
xchg
sbb
push
mov
adc
push
xor
daa
call
add
ret
fs
cmp
sbb
pop
and
stos
enter
mov
mov
dec
push
call
xchg
lods
shll
leave
push
psubsb
fimuls
xchg
mov
xor
cmpsb
fdiv
xchg
xor
xlat
mov
mov
lock
movsb
mov
xchg
lods
push
lahf
add
mov
movsb
sub
push
test
cltd
and
push
add
mov
enter
repnz
test
in
in
mov
or
push
movq
mov
icebp
mov
xor
movsb
cmpsb
das
dec
mov
pop
and
mov
sbb
cmp
enter
mov
daa
imul
pushl
xchg
sub
adc
out
jno
fstps
mov
mov
cmp
scas
sub
lret
iret
sub
icebp
jp
sbb
ficoml
js
sub
jns
push
repz
push
pop
mov
push
pop
sub
push
addl
adc
lods
dec
xchg
inc
hlt
sub
repz
fsub
ljmp
inc
fs
push
iret
pop
adc
into
or
filds
mov
aas
loopne
add
out
mov
mov
mov
sbb
aam
mov
push
test
data16
mov
mov
mov
jne
popa
adc
int
adc
jno
pop
sbb
push
jb
xchg
push
mov
sbb
mov
int3
icebp
mov
mov
popw
fsubl
sarb
cs
sahf
daa
dec
adc
jmp
std
xchg
and
cmp
and
stc
andb
cld
mov
jge
fxch
subb
sti
leave
jle
cmp
mov
hlt
sub
mov
and
repz
sbb
cwtl
roll
fs
mov
xor
int
jae
xlat
setl
add
mov
adc
mov
testl
fidivrs
inc
push
ret
shll
pop
mov
rcrb
pop
mov
fistpll
fmuls
std
cmp
cs
out
jns
mov
sub
xchg
les
in
jg
mov
push
jge
xor
pushf
add
dec
in
push
fiaddl
das
aad
pop
icebp
wrmsr
sbb
aas
leave
jp
jnp
add
push
inc
in
ljmp
mov
inc
es
out
roll
aas
mov
idivb
in
popf
adc
mov
sti
and
lcall
adc
xor
pushf
mov
popf
cmp
jb
mov
xchg
movsb
addr16
lcall
adc
js
inc
int
or
jb
add
jne
cmpsl
push
xchg
leave
push
lock
sub
test
gs
dec
pop
pop
adc
jb
es
adc
push
daa
in
jl
inc
icebp
sub
cli
lock
pop
repz
js
cmpsb
in
sub
add
int3
cld
adc
push
and
add
test
mov
cmp
test
in
xor
sti
cs
pop
mov
push
xorl
test
xlat
or
jae
adc
pop
mov
dec
mov
mov
out
add
dec
or
jmp
lcall
xor
add
dec
outsb
in
test
xchg
xchg
inc
cmc
add
popl
test
ds
lods
jb
mov
jbe
sbb
add
lcall
iret
inc
stos
scas
mov
inc
cld
adc
xor
push
pop
xchg
shll
pushf
inc
or
enter
add
pop
lds
mov
mov
push
mov
inc
mov
or
idivl
jne
lahf
ljmp
gs
call
cli
xchg
pop
pop
mov
push
xchg
jp
jmp
pop
dec
adc
jnp
mov
jno
mov
xor
push
xchg
pop
jecxz
dec
mov
mov
jp
jl
out
cmp
repz
mov
jae
mov
sbb
pop
sbb
push
fisubrs
shrw
test
xchg
and
stos
adc
mov
scas
cmp
adc
or
lret
lea
mov
aaa
rcrl
cmpsl
xor
mov
ja
hlt
jge
addr16
sbb
xor
push
xchg
jp
movsb
lock
stos
stos
loopne
int
rol
lret
cmp
inc
test
out
sbbb
lcall
cmp
xchg
xor
pop
push
fisubl
leave
adc
cltd
orl
mov
mov
fwait
loopne
add
sub
shlb
loop
xchg
or
mov
flds
in
das
lret
aam
mov
xchg
mov
insb
xor
or
fcoms
and
dec
sti
imull
pop
jae
mov
pushf
ror
repz
mov
out
push
loopne
pop
ljmp
jle
ror
push
out
mov
sub
ja
inc
iret
adc
pop
or
fwait
scas
mov
inc
ljmp
xor
stos
inc
xor
mov
sahf
int3
pusha
lock
int3
stos
cmp
sub
push
fxch
pop
inc
rclb
adc
jae
lret
pushf
add
call
mov
push
add
ret
stos
shl
add
add
test
push
pop
outsl
sub
bswap
jns
cmp
sub
add
cmc
into
pop
jns
push
test
adc
stc
stos
mov
div
mov
ljmp
pushf
loope
xchg
mov
out
add
xchg
mov
fs
idivl
in
xchg
lahf
push
push
mov
add
push
das
lahf
sbb
xor
add
add
popa
push
mov
dec
and
orl
sub
mov
outsl
mov
scas
sub
stos
iret
enter
xchg
sti
or
stos
mov
adc
pusha
iret
sbb
call
xor
push
into
jp
aam
push
xor
pop
inc
int
lods
stos
cmpsb
push
ficomps
mov
stc
adc
push
incl
fwait
loop
fdivrs
mov
fildll
out
push
pop
in
mov
orl
dec
sbb
fistps
xlat
cmp
push
faddl
movl
addb
inc
cmpsb
lods
cs
jno
fsub
push
jb
gs
jecxz
jns
adcb
sbb
xchg
lods
or
push
sub
test
xor
adc
jle
cmp
icebp
sbb
pop
ret
fcmovnbe
xlat
push
fcmove
push
add
pop
mov
nop
sar
pop
gs
pop
adc
push
xor
push
jns
sub
std
add
jg
jb
loop
out
test
fisubrl
xchg
and
pop
out
xor
jo
pop
xchg
shll
lock
xchg
sub
inc
sbb
les
fcmovne
adc
xchg
addb
add
jge
pop
rcr
fnsave
int3
dec
cmp
dec
inc
or
mov
mov
fs
sbb
leave
push
js
ret
stc
push
inc
and
ljmp
jmp
xchg
sub
aas
adc
je
int3
lahf
test
xor
daa
or
cmp
pop
loope
cmp
popw
or
xor
cmc
jg
and
dec
sbb
mov
test
stc
xchg
out
cmpsb
pop
test
pop
je
add
mov
repz
icebp
push
fcoml
push
mov
into
mov
js
sub
sti
int3
push
repz
outsl
dec
sti
sub
mov
test
xchg
stos
add
dec
jns
stos
movsb
cld
int
hlt
inc
ja
xlat
jo
hlt
movsl
sbb
push
test
cwtl
sub
or
cmc
inc
shl
mov
cmc
cmpsb
sbb
aad
pop
nop
sbb
and
xchg
ja
shll
cli
adc
sub
lods
jp
leave
and
inc
pop
or
xor
xor
add
mov
inc
push
xchg
popf
adcb
in
push
filds
movsb
cmp
repz
sbb
xchg
sbb
sarb
pop
jecxz
daa
fxch
icebp
outsl
popa
ljmp
xorl
lea
sub
jmp
loopne
lea
push
out
xlat
pusha
ljmp
out
rorb
mov
hlt
push
test
in
adc
jle
xchg
xchg
jo
movsl
xor
mov
pop
push
aaa
rcrb
adc
iret
rcl
sub
hlt
sub
je
loope
lds
hlt
mov
das
sahf
mov
cmpsb
or
jmp
sub
fsubl
cmp
test
das
out
lahf
xchg
or
cmpsl
xor
cmc
out
sbb
std
pop
xlat
mov
push
xchg
out
push
add
loopne
add
jo
das
and
jne
add
adc
push
mov
gs
call
out
push
xorb
ljmp
pop
sbb
dec
call
mov
xchg
or
xchg
adc
outsl
dec
sub
repz
jmp
mov
cmp
leave
xor
jmp
std
xchg
and
mov
adc
stc
andb
mov
pop
loop
into
jge
push
or
repz
fdivrp
leave
jle
cmp
mov
sub
mov
and
repz
sub
sets
test
les
pop
or
xchg
mov
pop
fcmove
push
fildll
lahf
inc
inc
data16
enter
dec
or
jecxz,pt
xchg
fmuls
push
jae
arpl
imul
cmpsl
popf
sbb
out
adc
xor
enter
or
je
cmpsb
movsb
popl
out
mov
or
lret
pop
test
xchg
push
iret
jne
shrl
movsl
dec
bswap
out
and
mov
scas
sub
mov
imul
pusha
orl
jnp
lea
xchg
aaa
bound
push
fildl
jl
mov
cmp
es
jmp
flds
ss
and
lock
aaa
cmp
xor
shll
repz
or
jno
es
mov
shl
arpl
or
lea
inc
int3
pop
cmp
cmc
jl
jmp
pushf
mov
dec
in
push
ret
push
cmpsl
fimull
inc
jae
repnz
mov
add
out
stos
jmp
and
movsl
stos
insl
negb
imull
int3
push
nop
sar
inc
jno
and
xchg
xchg
ja
cli
adc
xor
loope
dec
xlat
std
or
bound
sub
lea
inc
js
cmp
in
cmp
mov
push
out
roll
xor
push
sbb
or
movsl
ret
in
jg
inc
std
cs
repz
mov
sub
add
aas
sub
adc
pop
mov
dec
sarl
iret
adc
jns
or
adc
movsb
adc
inc
push
inc
sub
adc
xchg
scas
aad
mov
lret
push
cmovo
std
dec
outsl
repz
push
insl
mov
test
es
push
lret
fsubs
ret
add
and
mov
jbe
mov
push
test
std
xchg
cmpsl
shl
popf
ret
cwtl
dec
orl
pop
incl
fwait
cmp
popf
scas
cmp
push
aam
add
xor
adc
adc
add
inc
shrb
jbe
adc
adc
insb
out
sub
or
out
push
cmp
mov
jmp
xchg
sub
inc
dec
add
data16
xchg
mov
insb
xor
or
enter
cmpsb
popa
xchg
inc
xlat
ffree
dec
repnz
rolb
sbb
andb
in
popf
mov
sbb
dec
pop
scas
bound
sbb
sahf
mov
jns
rcrl
clc
or
mov
mov
stc
adc
pop
push
push
scas
mov
icebp
rcll
or
sub
rcrl
icebp
sahf
mov
dec
ljmp
fbld
in
cvttps2pi
scas
enter
cli
fs
and
or
mov
xlat
mov
mov
jmp
add
gs
fsubrl
cltd
or
xor
sbb
pushf
sahf
testl
fsubrp
xchg
jo
xorl
add
outsl
adc
lds
mov
xchg
pop
push
pusha
xchg
dec
out
sti
imul
pop
les
sbb
jne
cmp
lcall
push
push
jno
pop
in
cmp
sti
js
push
pop
adc
cmc
or
jl
cmpsb
mov
stos
int3
jnp
pop
xor
mov
mov
pop
add
pushf
push
jb
mov
in
xchg
lret
cld
lods
sar
scas
pop
push
sub
lods
in
or
cmpsb
push
pop
sbb
xchg
mov
test
and
jnp
mov
outsl
jb
adc
sbb
inc
loopne
arpl
sbb
cwtl
and
lret
shr
or
xchg
push
cmp
mov
jmp
sbb
imul
jbe
stc
push
fs
xor
mov
mov
ja
test
push
inc
int3
icebp
aaa
jne
sub
or
and
push
js
fsubrs
push
imul
xchg
repnz
pop
mov
in
sub
loop
cmp
bound
jge
cmp
aam
or
pop
mov
cmp
insb
pop
or
pop
movsb
loop
cltd
mov
roll
leave
mov
mov
mov
pushl
mov
and
cmc
out
mov
sub
mov
inc
iret
shrl
ret
mov
sbb
xor
sub
inc
sbb
pop
cld
in
jbe
popa
pop
xor
ja
ret
int3
push
nop
shll
sbb
inc
inc
dec
push
outsb
mov
data16
cmpsl
xor
int3
fstps
iret
std
add
mov
out
cs
orb
cmpsl
xor
cmc
testb
imul
push
fistps
lret
adcl
stos
xchg
fildl
inc
test
xor
sub
lock
mov
and
push
mov
rorb
rolb
xor
adc
bound
xchg
shl
adc
scas
out
sub
and
mov
jecxz
xchg
fcoms
mov
xchg
jae
and
cmp
jmp
add
daa
loop
ret
fcomps
jae
adc
lcall
and
pop
stc
cmpb
and
fcmovnb
hlt
cmc
jle
imul
fistl
leave
clc
outsb
ds
push
sub
ficoml
pushf
es
ret
in
fldl
inc
mov
dec
and
push
test
cmova
xor
es
pusha
insb
hlt
outsb
bound
pushf
imul
test
mov
and
or
mov
push
in
mov
call
jle
nop
je
or
sets
add
mov
mov
lahf
dec
idiv
xchg
mov
roll
test
out
sbb
jl
sbb
icebp
add
shll
add
scas
fcomp
pop
xor
cmp
add
enter
adcb
add
cmp
je
loope
inc
cmp
shlb
add
mov
inc
test
jg
jmp
xchg
xchg
sbb
mov
rolb
ds
mov
test
data16
pop
and
and
and
adc
shlb
cwtl
mov
lahf
jge
mov
push
cmpsl
repz
iret
cs
xor
sarl
adc
dec
cmp
mov
adc
stos
pushf
ljmp
sub
sbb
push
jge
aas
enter
iret
stos
shlb
cmp
pop
fbstp
lahf
decb
fmulp
xchg
cli
add
stc
orl
dec
fsubs
popf
mov
data16
pushf
xchg
sbb
cltd
scas
pop
mov
rcrb
xor
loope
aad
es
adc
int
add
sbb
push
jb
dec
push
mov
sbb
mov
int3
icebp
mov
mov
sub
push
push
aas
aam
inc
iret
pop
mov
dec
int3
jmp
adc
jns
int3
inc
mov
bound
out
into
sub
mov
cwtl
and
js
mov
fisubrs
loop
pop
ja
push
and
les
jne
nop
roll
in
pop
jo
arpl
bound
sbb
mov
das
fsubrl
cmp
or
xor
cmpl
daa
xchg
hlt
xchg
popa
outsb
scas
cmp
test
adc
and
or
arpl
xor
bound
in
and
pop
sub
fsubl
push
dec
popl
xor
xor
dec
jecxz
cmpsl
cmp
mov
adc
mov
out
pop
rorl
lea
push
aam
pop
lcall
sub
xchg
stc
rcr
or
sub
imul
adc
movl
push
sbb
test
inc
enter
pop
cmpsb
dec
push
aad
and
pop
sbb
sbb
loopne
xorl
push
inc
push
jbe
adc
fwait
mov
shlb
mov
dec
sti
insb
cmp
lcall
movlhps
fisubl
xchg
push
cmp
xor
jmp
mov
and
xor
push
cmpsl
test
dec
je
dec
sub
lret
inc
sub
aas
out
stc
lcall
in
sahf
fmuls
loopne
invd
rol
movsl
pop
monitorx
xor
gs
mov
loope
ja
jne
nop
adc
or
push
out
pop
and
mov
addl
addl
mov
or
jp
xchg
pop
gs
call
pushf
push
jb
clc
int3
aad
loope
push
mov
pop
push
sub
lods
movb
adc
nop
roll
addr16
call
imul
jbe
mov
push
out
pop
pop
inc
cmp
test
and
xchg
repnz
xchg
push
rolb
cmp
or
push
sub
sbb
sets
push
ficoml
add
cmpsl
clc
fst
xor
std
cs
mov
sub
nop
jge
dec
dec
das
es
mov
insb
fsubl
jbe
xchg
mov
stos
push
jno
loopne
push
and
cmp
test
xchg
cmc
mov
orps
aam
aas
scas
int3
xor
xor
insl
idivb
imul
ljmp
jl
xchg
std
jmp
jns
jecxz
movsl
call
popa
xchg
movsb
add
orl
pushf
dec
dec
mov
nop
sub
mov
mov
cmp
push
std
xor
es
loope
in
movsl
loopne
mov
sub
fmull
push
adc
inc
mov
cwtl
jp
repz
xchg
cmp
test
movsl
nop
dec
xchg
sbb
jnp
hlt
or
fisttps
les
sub
aas
enter
pop
lahf
orl
jge
dec
xlat
lds
loope
cmp
addr16
and
lds
xchg
dec
and
inc
sbb
aam
jno
dec
push
cmpsb
out
sub
or
push
lock
test
cli
ret
mov
xor
inc
jl
fldl
dec
mov
cmp
cmp
into
jnp
ljmp
lods
ss
es
pop
test
pop
loop
cltd
dec
push
add
lret
push
mov
or
insl
push
xor
fs
jae
in
or
mov
push
xor
sahf
or
xchg
push
dec
dec
mov
cmc
lods
dec
hlt
jge
bound
adc
add
inc
lods
fcmovnu
mov
xor
mov
insl
lcall
sar
sbb
mov
mov
mov
pop
mov
and
inc
cmp
xchg
inc
mov
test
loopne
stos
in
add
xor
ss
sub
cmp
jge
in
xchg
adc
mov
mov
cmp
mov
testb
cmp
es
mov
mov
repz
jl
xchg
push
xorl
jns
add
pop
movsb
push
inc
lcall
movsb
jle
rorb
in
push
pop
loop
hlt
clc
pop
mov
jae
sbb
icebp
mov
pop
mov
add
or
add
cmp
push
cmpsl
cwtl
mov
lret
test
movsb
push
sub
mov
pop
orl
cmp
dec
sti
sub
mov
xor
mov
dec
imul
mov
aam
add
test
lods
pushf
movsl
adc
aaa
xchg
xchg
mov
xchg
fnstenv
xor
je
aas
xchg
cmpsb
aad
xchg
push
icebp
or
cwtl
sub
mov
out
add
fldenv
cmp
in
std
mov
mov
out
jp
xchg
and
push
sbb
into
cmp
mov
cmp
es
popf
es
mov
test
mov
and
xor
xor
inc
mov
jg
cs
pop
mov
inc
icebp
aam
dec
ljmp
fcomi
icebp
call
orb
ret
mov
mov
addr16
and
fildll
pop
sub
jbe
xchg
jo
imul
lahf
jmp
addr16
sub
push
das
js
and
jnp
jbe
int
xchg
cmpsl
lahf
push
lcall
call
jbe
jno
mov
mov
mov
repnz
jbe
mov
out
lds
adc
xor
mov
ljmp
sbbb
pop
out
clc
repnz
or
and
je
jmp
hlt
mulb
cmpsl
je
hlt
jns
sbb
imul
lahf
cmp
lcall
insb
sub
xchg
mov
mov
outsl
icebp
lret
add
movsl
sub
add
fbstp
pop
nop
dec
divb
fiadds
out
push
daa
jecxz
sahf
daa
fldcw
popa
leave
adc
lcall
les
cmp
dec
jecxz
faddl
inc
insb
div
adc
mov
xchg
add
addr16
fidivs
mov
pop
scas
push
popf
xchg
lret
xchg
or
loop
test
outsb
shr
scas
dec
rolb
xchg
cmp
mov
xchg
push
iret
pusha
or
mov
scas
inc
bound
aam
dec
and
sti
test
dec
add
xchg
push
xor
inc
jmp
fdiv
mov
lods
xorb
out
clc
xorl
cmp
xor
sub
mov
mov
xchg
popa
cmp
cwtl
mov
pop
imul
aaa
cmpsb
daa
xor
shll
mov
xlat
cmp
je
inc
and
int
inc
aam
mov
shrb
xor
pushf
mov
xchg
sbb
mov
mov
adc
lahf
sbb
test
jp
push
iret
cld
cli
imul
outsl
cmp
gs
push
pop
mov
jp
in
nop
fisubl
dec
iret
pop
loop
int
imul
mov
push
fsubp
cmp
test
loope
movsb
push
xor
fdivs
cmp
mov
dec
and
pop
push
pop
xchg
lahf
aas
ror
dec
mov
mov
or
pushf
ljmp
rorb
pop
and
out
xor
sub
clc
pop
pusha
xchg
pop
fldenv
je
gs
sbb
rcrl
fwait
push
inc
or
lahf
aam
cld
lds
mov
or
push
int3
loope
aam
inc
adc
xor
or
testl
inc
loop
not
mov
jbe
and
push
mov
js
aad
mull
or
mov
dec
inc
ja
dec
cmp
jb
enter
xchg
add
xchg
lret
ljmp
aas
add
jp
mov
jno
mov
add
imul
push
push
jo
sub
push
xor
sub
lock
add
lret
cli
add
and
cmpsb
out
ja
arpl
mov
push
shlb
lods
cmpsb
xlat
nop
repnz
sub
inc
inc
inc
aam
outsl
jmp
jb
gs
insl
addl
inc
mov
loop
psrlq
out
sahf
and
adc
bound
ss
and
xchg
jl
xchg
inc
leave
dec
xor
mov
cmp
jne
xchg
jnp
cs
pop
mov
inc
enter
mov
jo
pop
jle
mov
jb
ror
in
mov
mov
dec
xchg
xor
outsb
adc
dec
or
les
test
sbb
xchg
scas
pop
mov
pop
test
stos
adc
push
dec
xchg
dec
jns
jmp
cmpsl
imul
ds
sub
xor
jbe
sbb
pop
push
scas
cmp
dec
fstp
fildll
cld
mov
fidivl
xchg
mov
jbe
stos
movsl
movsl
int
xchg
bound
jno
mov
dec
push
cli
push
stc
cmp
pop
push
add
out
xchg
adc
roll
cmp
push
push
mov
sahf
and
adc
bound
ss
and
xchg
jl
inc
inc
leave
dec
xlat
xchg
mov
push
xorb
pusha
pop
sbb
cmp
addr16
jb
les
jge
addr16
and
rolb
jbe
sbb
movsb
ljmp
clc
sti
sub
outsb
adc
mov
popf
dec
popa
jmp
dec
std
sbb
lret
push
fdivp
icebp
sbb
mov
divl
in
jbe
inc
sub
mov
adc
iret
xor
icebp
jp
push
add
adc
into
ret
dec
les
xchg
sub
pushf
xchg
mov
dec
mov
xchg
add
aas
aaa
mov
mov
jmp
sub
popf
and
loope
outsb
xlat
popa
inc
dec
lahf
mov
into
sets
orl
addl
dec
data16
ljmp
scas
add
mov
add
sub
inc
jmp
push
xchg
push
int3
push
dec
aam
stos
aam
push
insl
xchg
pushf
pop
or
js
fsubp
shl
mov
xor
pop
ror
lods
aam
push
xchg
inc
xchg
xchg
xchg
or
mov
xchg
fisubl
daa
imul
lods
xchg
pop
xchg
int3
push
fisubs
inc
sub
adc
mov
cwtl
mov
test
fs
jle
ret
lock
pop
jmp
add
mov
add
clc
sbbl
jno
dec
push
inc
cmovs
jb
rorl
adc
and
fisubl
movsl
adc
sbb
int3
push
mov
sets
push
inc
aas
xchg
cmpsb
push
sub
pushf
xor
xchg
mov
lret
inc
leave
or
inc
inc
cmp
ret
inc
mov
insb
sbb
pop
jmp
lret
shrb
dec
push
cmp
push
fsubl
sub
rclb
orl
push
rcr
xchg
dec
and
lret
fcompl
push
mov
dec
push
push
popf
inc
insl
mov
leave
xchg
sbb
or
adc
roll
dec
shl
mov
xchg
add
dec
cmc
jg
imul
adc
lods
shlb
mov
adc
sub
mov
iret
mov
orb
sub
push
jbe
js
mov
outsb
clc
adc
rclb
and
into
fucomip
push
lds
outsl
mov
jae
hlt
push
hlt
cmp
sub
dec
fiadds
jge
jb
inc
test
rorb
aas
enter
sbb
orl
inc
stc
outsl
popa
ljmp
sub
pop
out
and
addl
add
lret
lret
js
dec
pushf
cmpl
pop
mov
lock
jecxz
or
testl
push
movq
push
cmp
stos
sub
pop
daa
mov
addr16
pop
xchg
in
push
and
sbb
es
xchg
mov
dec
outsb
jo
xchg
add
subl
fildll
ftst
dec
stc
lea
rcrb
xor
fistps
shlb
scas
inc
cwtl
rolb
cwtl
cmp
clc
daa
mov
sub
push
cmpsl
and
inc
int3
js
sar
mov
dec
sti
test
mov
rcl
cmovnp
test
fucomip
jb
popf
sets
test
lods
adc
xorl
and
pop
popa
ljmp
xchg
fstl
rcrl
xchg
mov
or
sub
pop
dec
clc
push
mov
pop
or
or
adc
mov
ljmp
xor
repz
inc
repz
das
ret
sbb
xchg
mov
mov
pop
xor
imul
sub
fsubs
pop
loope
mov
daa
xor
jns
mov
jbe
mov
jbe
outsb
mov
jg
mov
xchg
sti
sub
ss
icebp
sub
sbb
and
adc
pop
cmp
and
mov
cwtl
and
clc
mov
arpl
adc
mov
lea
movsb
lods
pop
push
mov
and
push
cmp
mov
mov
xchg
aad
ror
push
fists
jae
sbb
or
adc
xchg
push
iret
pop
xchg
xchg
insl
mov
pop
nop
shll
iret
xor
xchg
dec
das
out
rolb
mov
insb
sbb
popf
xor
and
pop
sub
mov
adc
inc
sahf
cmpsl
push
xor
es
xor
inc
dec
int3
sub
or
lret
out
dec
push
add
shrb
xor
iret
daa
mov
sahf
cmpsl
or
mov
aaa
ss
xchg
cli
repnz
jo
insb
lock
js
clc
or
aas
jne
orb
sbb
test
lcall
mov
sub
mov
pushf
mov
imul
ret
lea
pop
cmp
sub
icebp
les
les
sbb
cs
mov
fwait
pushf
xchg
mov
push
adc
xchg
cmpl
jge
call
inc
inc
inc
frstor
jmp
push
fldt
push
inc
dec
sub
popa
xor
popa
ljmp
jl
pop
pop
cli
add
mov
movsb
push
cmpsl
xor
sbb
lcall
or
pop
rcrl
cltd
scas
pop
mov
pop
mov
out
decl
pop
inc
dec
cmp
inc
int3
pop
ret
les
inc
andb
lahf
movsb
pop
out
inc
dec
sbbl
mov
lods
aam
push
xchg
sub
xchg
mov
push
sahf
xchg
movsl
rcr
xchg
dec
sbb
dec
lea
ss
aam
enter
dec
cs
push
adc
in
adc
push
mov
add
idivl
cwtl
and
or
xor
sub
xor
ret
inc
mov
cmp
pop
fucomip
jb
pop
data16
out
dec
dec
hlt
mov
adc
shll
jbe
mov
out
xor
mov
jb
dec
xor
mov
adc
or
orl
loop
pushf
sahf
cmp
and
lea
int
into
jecxz
push
sub
add
clc
push
orb
push
std
xchg
sbb
xchg
lods
inc
sub
data16
add
scas
jno
inc
and
push
push
or
lods
mov
and
xor
sbb
dec
aad
cmp
jle
xchg
xchg
out
dec
je
lock
sarb
adc
inc
stc
mov
push
mov
pop
inc
jle
jo
xor
jg
sub
repz
mov
repnz
scas
mov
int
add
imul
lods
pop
jmp
mov
mov
out
movsb
repz
lahf
dec
xor
inc
pop
scas
or
jmp
loope
stos
mov
out
rcr
or
rcr
fisubl
es
sahf
mov
cmpsb
or
jns
sub
fsubl
cmp
push
fucomi
xchg
cmpsb
sbb
xchg
push
add
adc
push
xlat
mov
xchg
popa
push
loope
pop
mov
stc
stos
sbb
and
add
add
fsubrs
cmp
sbb
pop
mov
gs
mov
sub
insl
neg
loopne
jmp
or
inc
xchg
movsl
xor
xor
xor
or
add
loope
ds
popa
adc
shrl
pop
pop
pop
rcrl
mov
mov
mov
les
jecxz
insb
std
xchg
repnz
push
icebp
jp
int3
icebp
repnz
jo
popf
adc
sbb
dec
or
cld
inc
loope
addr16
add
jns
sub
fadd
cmp
cmp
das
mov
ret
roll
cwtl
sti
sub
les
fs
jp
out
push
jg
clc
lea
arpl
xchg
xchg
out
inc
dec
ds
test
int3
mov
test
adc
orl
push
les
repz
lcall
add
sbb
xchg
xor
es
sub
stos
cmp
inc
mov
or
orl
rorl
incl
dec
sub
movsl
fistpl
testb
cmp
aaa
xchg
fildll
and
popl
jge
xchg
xchg
and
mov
mov
cmc
adc
jle
jp
std
loope
inc
cmc
mov
es
mov
jmp
jp
mov
sbb
xchg
mov
movsl
out
fsubrl
lds
cwtl
jno
cmp
jbe
mov
insl
sbb
call
int3
shll
mov
cmp
xchg
lock
aas
cltd
adc
push
loop
jb
test
jo
mov
push
and
pop
call
sarl
jae
pop
call
inc
sbb
jecxz
cwtl
mov
test
mov
rcl
pop
xor
dec
push
sti
aas
cmp
xchg
aaa
mov
sub
stos
int
iret
ret
aaa
mov
sub
lods
stos
or
xchg
add
pop
push
fsubs
icebp
iret
popa
pop
rcrb
xor
cwtl
or
xchg
testl
rolb
dec
push
xchg
sbb
dec
shlb
clc
ljmp
lods
addr16
jo
sbb
test
daa
mov
nop
xchg
stc
ret
mov
iret
cwtl
rol
or
pop
push
xor
and
pop
fs
jae
in
or
mov
push
fstl
pop
cwtl
out
jno
sahf
push
dec
xchg
push
dec
dec
mov
cmc
lock
dec
bound
inc
orl
sti
inc
lods
fcmovnu
push
xor
mov
insl
lcall
sar
sbb
mov
mov
xchg
jno
mov
push
out
clc
cmp
xchg
inc
mov
test
sti
mov
sbb
lahf
sub
lds
mov
arpl
jge
xchg
scas
enter
das
mov
test
ret
mov
insl
imulb
adc
nop
cltd
or
int
dec
push
fistl
inc
js
mov
inc
mov
les
push
pop
dec
shl
jl
out
repz
leavew
stc
popa
fimull
xchg
fs
mov
jg
stc
jns
jae
dec
or
jp
in
out
adc
mov
inc
cmc
or
or
loope
test
scas
push
add
sbb
fwait
pop
or
pushf
mov
imul
pop
pop
ret
add
sub
sbb
add
mov
in
idiv
pop
sbb
push
fnstsw
ljmp
or
pop
xor
inc
stc
outsl
popa
ljmp
sub
pop
out
mov
aas
gs
cli
mov
add
test
xchg
dec
cld
lods
cmp
push
fcoml
inc
shlb
xor
sub
in
paddd
imul
mov
mov
into
xor
popf
push
arpl
xchg
sbb
mov
fmul
iret
cmp
pop
cwtl
push
adc
pop
aas
inc
dec
xor
add
adc
cli
andb
cmpsb
cs
or
addb
xorb
insl
xchg
xchg
loop
test
sub
sbb
mov
lret
push
jno
dec
bound
pop
stc
add
clc
sbb
mov
sub
sbb
jb
sbb
gs
mov
xchg
sub
xchg
push
shlb
lds
or
lret
cmp
inc
int3
jge
ret
mov
mov
movb
das
mov
aas
cmp
xchg
std
pop
push
jbe
add
xor
outsb
out
js
adc
popa
loop
lea
and
lcall
lea
outsb
ja
add
pop
arpl
pop
incb
stc
scas
cs
out
xchg
xor
xor
jl
mov
dec
jle
sbb
lds
adc
aam
sbb
xchg
nop
xchg
dec
outsb
test
call
xlat
fldpi
pop
push
movsb
pop
and
pop
cli
ret
adc
inc
iret
push
cmpsb
lods
test
sub
sbb
mov
xlat
icebp
jp
or
xor
andb
or
sbbb
mov
cwtl
push
es
icebp
dec
push
insl
push
sub
je
jg
sar
in
sbb
data16
inc
push
xchg
test
cwtl
xchg
ds
mov
pusha
xchg
inc
mov
cmp
sub
faddp
inc
jnp
cmp
sets
nop
jns
shll
jno
sub
insb
cmp
mov
mov
add
pop
lock
or
mov
jmp
movsb
inc
sub
movsl
sti
inc
int
cltd
sbb
movsb
mov
rcl
add
cmp
flds
mov
xchg
mov
andb
lahf
sbb
pop
jecxz
scas
cs
adc
fcompl
xchg
push
fidivrl
fs
jle
movsl
repz
call
cwtl
and
adc
sbb
xor
nop
push
xchg
cmpsl
xor
aad
ror
jmp
fwait
sarl
mov
cmp
xor
inc
add
cmp
xchg
les
push
cmp
das
fsub
add
sub
and
and
or
push
pop
add
cmp
scas
out
repz
repz
stc
stos
loope
xor
xchg
xchg
adcb
mov
imul
sub
and
imul
int
inc
arpl
push
sub
jl
sub
xor
jbe
sub
mov
daa
mov
pop
fstpt
mov
int3
arpl
sub
inc
rcrl
sbb
push
fistl
xchg
pop
mov
cwtl
xchg
ret
jno
inc
or
test
addr16
jo
dec
inc
iret
dec
aad
test
loope
popf
stos
push
jmp
and
sbbb
mov
sbb
jbe
pop
pop
ja
inc
jge
nop
shll
dec
adc
xchg
xor
js
mov
stos
arpl
sbb
inc
int3
scas
jnp
movsl
push
fnstsw
out
orb
clc
adcl
adc
push
daa
mov
in
hlt
out
stc
inc
dec
lods
mov
mov
pop
cld
cltd
pop
push
mov
std
mov
sub
insl
testb
adc
scas
or
ret
enter
dec
rol
pop
dec
push
xor
dec
push
gs
ja
push
insl
sbb
pop
je
movsb
adc
lcall
ss
dec
mov
xor
pop
push
xor
mov
adc
jae
or
push
fdiv
dec
out
hlt
fnsetpm(287
push
jo
arpl
sahf
adc
xchg
popf
insl
push
inc
ret
sbb
push
dec
int
dec
rcrb
jge
imulb
dec
cmp
sbbb
test
fwait
pushf
aam
mov
stc
scas
icebp
or
add
or
jae
lcall
nop
and
sub
fs
gs
clc
push
adc
and
incb
cmp
leave
rcrl
test
adc
adc
repz
sub
dec
je
negl
sbb
cltd
scas
pop
mov
pop
test
jnp
jmp
adc
bswap
out
mov
jno
test
cmp
add
or
je
pusha
adc
jl
shl
pop
test
jb
push
jecxz
fsub
imul
scas
ficomps
xchg
push
icebp
jp
fdivl
pushf
pop
or
mov
ret
mov
mov
ret
hlt
out
jmp
cwtl
and
or
pop
in
mov
or
insb
outsb
pop
or
in
or
sbbb
loope
fwait
pushf
andb
dec
in
out
xchg
fisttpll
inc
cwtl
icebp
ret
mov
jge
push
push
adc
mov
cld
test
mov
adc
loop
push
adc
mov
pop
xchg
sahf
repz
dec
rcll
std
out
or
adc
sub
sub
sbb
and
mov
mov
aas
pop
jecxz
xchg
dec
xor
dec
cmp
inc
int3
std
pop
imul
jnp
mov
sti
rcll
cmp
repnz
cmp
jl
out
repz
dec
dec
adc
outsb
adc
mov
inc
sti
jno
ljmp
roll
dec
and
cmp
mov
add
inc
mov
imul
rcrb
pop
jmp
call
in
pop
in
mov
jb
insb
mov
cs
sub
sub
es
and
outsb
addr16
sbb
xchg
push
cmp
adc
jae
lcall
sub
fdivrl
mov
fcomp
gs
pop
xor
pop
les
ljmp
jl
xchg
xchg
mov
outsb
test
push
jno
xor
fstl
jne
push
ljmp
cli
in
jbe
jns
shll
test
fsubs
jbe
std
add
stos
aam
xchg
dec
rol
pop
dec
push
movsl
mov
jecxz
ret
add
sbb
mov
pop
data16
sub
out
jecxz
mov
mov
jg
imul
adc
and
pop
push
push
ja
lock
sarl
adc
mov
push
push
inc
cltd
mov
pop
in
push
add
lret
das
jle
inc
incl
cmp
cwtl
lcall
lods
popa
movb
mov
ljmp
sub
loopne
aaa
dec
mov
jo
xor
int3
dec
xchg
add
pushf
xor
xchg
pop
int3
push
xlat
mov
out
out
movsb
je
pop
jge
pop
rcr
lahf
lahf
rolb
push
clc
cmpsl
xor
leave
jae
xor
xchg
movsl
cmpsb
ret
cli
stos
call
fldl
add
dec
adc
aam
movsl
cmp
dec
gs
orl
jo
movsl
mov
sahf
dec
rcll
outsl
popa
ljmp
pop
rclb
push
push
xchg
std
fdivl
orl
and
aad
ret
addr16
inc
xor
pop
out
mov
fisubrl
jg
cmp
stos
dec
pop
mov
pop
jmp
xor
add
adc
push
lret
dec
cmp
dec
sub
aad
int3
push
push
mov
scas
push
pushw
dec
pop
out
adc
jae
repnz
xor
imul
or
lret
cmp
inc
es
icebp
sbb
push
push
sub
mul
jnp
out
mov
gs
add
adc
dec
pop
nop
inc
inc
jge
out
cmpsl
fucom
jo
pop
pop
daa
mov
xchg
dec
div
shrb
iret
cmp
mov
lea
jle
out
or
sahf
pop
add
jbe
shrl
insb
mov
jl
loopne
jnp
test
lock
inc
inc
sahf
inc
inc
pop
ja
xor
test
test
cmp
dec
popf
pop
mov
stc
orl
mov
pop
loop
dec
mov
aaa
inc
lret
mov
cwtl
adc
add
in
adc
push
or
sbb
push
popa
insl
sbb
xor
je
push
push
mov
adc
xlat
enter
adc
lock
fcoms
dec
xlat
xor
inc
int3
push
bound
popf
test
adc
insb
dec
xchg
push
fildl
in
pushf
xor
arpl
add
mov
sbb
sbb
sar
test
mov
add
pop
faddp
into
inc
pop
les
xchg
fildll
or
jo
movsl
fdivl
iret
lret
dec
mov
pop
loopne
out
scas
aad
mov
iret
in
pop
or
push
cs
sbb
jmp
mov
loopne
mov
xchg
push
lret
jno
sub
dec
push
adc
out
adc
test
and
push
clc
mov
lcall
sub
outsl
xor
mov
mov
movsl
cs
push
icebp
aam
cmp
outsl
add
inc
outsl
pop
test
ret
std
sbb
xor
mov
cwtl
ficomps
xchg
sub
sahf
push
sub
xchg
scas
mov
inc
jb
add
mov
scas
ficomps
inc
lcall
xchg
les
push
fucomip
jb
pushf
loopne
sub
mov
arpl
cmp
push
fisubs
dec
jg
mov
popa
ds
std
nop
test
add
dec
adc
aas
sbbl
outsb
and
inc
pusha
lcall
pop
jg
mov
dec
add
cmp
jno
cmc
idiv
mov
test
mov
rol
xchg
add
sub
xor
cs
insl
mov
into
popa
popa
mov
inc
add
sbb
movsb
mov
lds
add
sbb
mov
push
push
test
xor
pop
out
push
pop
lret
fidivrl
in
out
or
outsl
fldl
testl
cmp
add
iret
out
adc
jae
mov
sbb
xchg
mov
xchg
loopne
jo
inc
xorl
jmp
into
pop
xchg
push
fbstp
dec
scas
outsw
push
xchg
xor
adcl
mov
es
jmp
imul
rcrl
sub
pop
pop
in
in
add
insb
cmc
pop
sahf
fs
je
or
mov
cmpsb
cmpsl
mov
jns
xor
add
mov
out
xchg
xor
or
shll
pop
jecxz
sbb
cmp
int3
jnp
testl
nop
jo
insl
ja
scas
mov
mov
jmp
push
les
pop
mov
jae
and
add
and
mov
popf
jb
xor
sahf
rclb
fs
jle
lods
pop
popa
push
mov
sub
add
out
mov
pop
sub
dec
jl
scas
in
fistl
push
movsb
jb
sub
and
cmp
push
fstpt
orb
sub
mov
xchg
insb
aaa
pop
bound
xchg
pop
mov
jns
sbb
xchg
out
fnsetpm(287
imul
xlat
popa
inc
mov
mov
add
out
stc
sub
jne
inc
jp
icebp
call
aas
pop
test
mov
cmp
divb
aad
jno
jns
test
sub
or
movsl
mov
jg
and
dec
xchg
out
out
jge
pop
xchg
and
fstpt
outsb
push
popa
ljmp
lods
rorb
aaa
mov
orl
ss
inc
inc
lret
pop
sbbb
cltd
jle
cwtl
or
leave
aam
add
jae
mov
test
sbb
jle
or
fwait
sub
sti
sbb
xchg
icebp
jp
adc
cmpsb
push
xor
nop
push
xchg
and
mov
sub
out
push
test
loop
mov
jno
push
out
add
or
pop
shlb
add
testb
int3
jge
mov
mov
pop
mov
movsb
out
clc
or
sub
fiaddl
cmp
xchg
add
std
nop
push
add
mov
cwtl
outsb
in
js
cmp
fsubs
sbb
mov
adc
mov
ret
mov
test
or
in
popf
cmpb
push
xchg
ss
scas
int3
xor
xor
insl
idivb
imul
ljmp
jl
xchg
mov
inc
dec
lea
xchg
push
cs
dec
cwtl
ljmp
icebp
mov
mov
iret
xor
sti
push
insl
sbb
mov
cmp
push
push
lock
sar
outsl
mov
addr16
xlat
loope
addb
jmp
roll
gs
and
fisubl
adcb
ljmp
add
test
xchg
pop
mov
test
test
cmpsl
xor
push
xchg
xlat
xchg
dec
xor
mov
les
mov
cmc
sbb
arpl
lock
dec
push
pop
jnp
je
sarl
jno
pushf
mov
mov
rcrb
syscall
out
out
es
jmp
sbb
filds
mov
and
xor
daa
mov
addr16
ds
jl
std
xchg
inc
test
shlb
add
cmp
xor
cld
in
pop
cmc
jg
call
xchg
sti
mov
ss
mov
mov
pushf
pop
add
cmp
mov
sub
sub
nop
cltd
dec
jl
mov
sub
mov
loop
push
fildll
dec
jb
repz
cmp
stos
jp
stos
push
cmp
and
divl
mov
repnz
xor
mov
xor
gs
mov
cmpsl
xor
test
insl
ljmp
xchg
into
lahf
shll
int
or
scas
outsl
adc
hlt
xchg
cmc
jg
stc
inc
mov
scas
mov
xchg
mov
mov
js
ja,pn
and
cwtl
out
ret
jl
cmp
mov
popf
pop
dec
aam
and
fsub
pop
xchg
push
loopne
jecxz
daa
iret
xchg
xchg
add
push
xor
lock
jnp
outsb
js
push
shll
mov
jecxz
lahf
std
xchg
fcomip
in
icebp
jp
lock
jbe
fidivl
loop
jge
fmul
cld
pop
jmp
cwtl
imul
in
pop
and
adcb
pop
jg
jne,pt
call
xlat
and
fsts
cmc
inc
ror
adc
add
in
sbb
int3
iret
xor
cld
test
leave
fimull
enter
popa
stos
shlb
inc
add
mov
jne
cmc
mov
iret
je
in
jp
cwtl
sbb
cmp
and
dec
push
lahf
push
push
mov
cmc
jg
jmp
ljmp
add
fimuls
repz
pushf
lds
pop
test
std
mov
ret
test
adc
mov
inc
inc
sahf
inc
inc
pop
ja
xor
test
test
jno
inc
stc
orl
inc
rolb
bound
sub
jg
dec
lcall
add
ss
fisubrl
adc
jb
xor
insb
jmp
aas
sub
sub
fcmovu
mov
mov
les
jae
xor
sub
cmp
hlt
jno
pop
fs
orl
mov
xchg
sbb
int3
push
cmp
push
fsubrl
insb
es
je
lods
push
pop
dec
mov
gs
imul
popa
ljmp
xchg
insb
mov
and
adc
shlb
ficoml
xchg
xchg
ficoms
aam
inc
add
jb
mov
mov
xchg
orb
mov
movsl
add
jecxz
fisttpll
cwtl
sub
or
add
cmpsl
sbb
sub
adc
aam
imul
dec
sti
test
fcmovnbe
ljmp
mov
sbb
pop
jae
adc
popf
ljmp
or
mov
pop
mov
ficoml
inc
xor
xchg
push
dec
int
dec
ror
mov
inc
dec
cmpsl
dec
lds
js
cmp
nop
mov
data16
jno
dec
lods
outsb
lcall
ljmp
std
hlt
add
shll
leave
push
fisttps
shlb
pop
push
push
adc
push
pushf
es
aas
push
adc
gs
mov
lock
lods
push
add
clc
push
lcall
fmull
and
mov
cs
pop
jae
rolb
mov
xchg
popf
mov
or
inc
inc
stos
aam
repnz
or
out
js
sahf
pop
shl
repnz
and
or
cmp
jo
jmp
data16
xorl
xchg
rep
xor
mov
lret
clc
jne
icebp
jp
xor
cmp
pop
inc
popa
cmp
imul
mov
mov
pop
jae
sub
or
or
stos
es
dec
mov
and
xor
add
fs
iret
aas
push
mov
pop
int
hlt
jge
mov
mov
jmp
mov
sub
aas
jo
sub
in
loope
testb
pusha
icebp
das
popa
ljmp
les
cmc
inc
mov
lahf
loope
adc
jecxz
insb
xchg
xlat
pop
les
pusha
and
mov
sub
mov
mov
cmp
mov
push
stc
pop
addr16
jne
movsb
mov
push
add
fsubl
mov
mov
push
scas
mov
inc
lods
sbb
lgs
xorb
shr
pop
loop
popf
loop
mov
lret
cld
in
mov
ds
mov
cmp
int
add
ljmp
pop
stc
jb
sbb
xchg
outsb
pop
sub
adc
js
mov
inc
andnps
pusha
ss
pop
xchg
pop
ret
fs
iret
test
xor
movsl
stc
pop
xchg
sbb
es
ficompl
cld
mov
cwtl
mov
and
clc
enter
stos
mov
clc
ljmp
sub
stos
xor
gs
lock
dec
lea
cmp
jo
mov
scas
cmp
rcrb
cli
pop
push
xchg
lcall
test
flds
in
sbb
ret
add
or
pop
pop
xor
cmp
sbb
shlb
sbb
push
mov
inc
or
mov
loop
mov
fisubs
adc
inc
les
stc
lret
pop
aad
cmpsb
dec
inc
mull
adc
test
cli
test
push
dec
push
or
arpl
xor
lcall
mov
mov
and
fistpl
or
jg
rclb
pop
inc
jae
pop
packsswb
push
idivl
push
jl
sets
fisttpl
insl
cmpsl
pop
rol
dec
xlat
popa
adc
mov
jnp
out
push
sub
lea
push
sub
cmc
jg
xchg
cmp
add
adc
cli
add
aas
xor
fcmovne
mov
insl
popf
push
cmp
push
xchg
stos
sbb
icebp
xchg
xchg
clc
cs
sahf
daa
fxch
cmc
out
xchg
add
hlt
bnd
pop
pop
lods
pop
mov
stc
orl
mov
pop
cmp
mov
push
mov
cld
pop
dec
rorl
dec
hlt
jno
in
jbe
xor
ret
adc
inc
out
test
cmc
inc
mov
pop
in
orl
mulb
out
mov
pop
jbe
cld
test
push
dec
aam
ss
ja
bound
not
fidivrl
in
out
lcall
mov
sahf
xchg
test
cwtl
leave
fimull
cmp
inc
shlb
nop
adc
mov
pop
xor
sarb
insl
int
push
inc
or
addr16
andl
sbb
popf
xor
and
and
scas
pop
mov
shr
xor
jnp
cmp
clc
das
ret
sbb
lahf
aas
sbb
pusha
scas
xor
imul
sub
pop
popa
ljmp
jmp
mov
or
jmp
in
pop
sub
add
adc
jae
arpl
fildll
mov
or
in
jbe
cltd
adc
mov
ret
dec
jge
xor
sbb
iret
loopne
xchg
push
inc
aad
ds
out
xchg
movb
les
loope
hlt
movsb
lods
pop
fisubl
and
roll
in
out
lcall
xor
mov
jb
dec
xor
mov
or
andl
sub
arpl
xchg
or
jo
inc
jnp
lds
cmp
idiv
ja
cmc
jg
in
xlat
std
xchg
xchg
and
mov
sub
mov
lds
mov
inc
int3
jge
mov
pop
mov
sbb
mov
or
jno
je
ljmp
mov
jo
add
sub
xchg
mov
test
dec
imul
xor
dec
pusha
mov
mov
mov
push
mov
sub
pop
inc
cmc
xlat
loopne
insb
pop
cmp
cmpxchg
push
inc
pop
lea
xchg
orb
inc
mov
cmp
xlat
loope
hlt
and
sub
ss
test
js
es
sahf
mov
cmpsb
or
ljmp
fsubl
leave
fimull
enter
jle
xorl
cmp
cmp
std
dec
sub
leave
lcall
pop
ffreep
aaa
mov
gs
cmpsb
cwtl
arpl
aas
std
xchg
pop
enter
sarl
gs
mov
inc
and
pop
and
movsl
fists
add
push
loop
mov
lods
mov
in
mov
hlt
cmp
mov
jl
rcrl
pop
lods
or
dec
pop
xchg
orl
das
jne
les
mov
inc
and
icebp
adc
int3
xor
dec
andb
mov
mov
ret
dec
pop
nop
addl
enter
sbb
mov
push
cmpsl
xor
xor
test
pop
mov
inc
fucomp
mov
outsl
jno
lret
cmp
or
fwait
imul
cmp
int3
push
fists
outsl
stc
jp
xchg
sub
scas
in
push
cmpsl
xor
test
insl
ljmp
xchg
into
lahf
shll
int
or
scas
outsl
adc
hlt
xchg
cmc
jg
stc
inc
jle
cmp
unpcklps
jne
mov
sub
mov
lds
and
test
test
push
mov
sub
mov
mov
daa
aad
into
push
test
andl
stos
and
xor
out
das
test
cltd
loop
iret
out
movsl
pop
movsl
or
and
xor
mov
mov
cwtl
in
arpl
mov
sub
cmp
jmp
loopne
addr16
insl
pop
gs
pop
in
push
push
xchg
stc
jbe
adc
add
pop
mov
jae
pop
pop
mov
dec
aam
mov
ja
mov
inc
inc
scas
mov
and
lods
mov
xor
ja
cmp
inc
fnsetpm(287
cmpsb
jmp
mov
scas
mov
outsl
jl
out
jecxz
out
dec
in
add
pusha
or
cmp
xchg
or
pop
enter
add
jns
test
imul
add
cmpsl
in
aad
pusha
shr
push
fisttps
dec
aam
inc
mov
clc
mov
out
js
mov
out
das
xor
or
stos
test
dec
rol
lea
ret
bound
nop
iret
outsl
cmp
lds
mov
ss
sbb
pop
dec
stc
lea
pushf
xchg
test
adc
mov
call
lret
push
rol
leave
mov
cmp
aaa
mov
fisubl
mov
ja
push
sbb
inc
lret
inc
dec
adc
pop
fistl
and
xchg
jns
test
or
data16
nop
and
leave
sbb
mov
adc
dec
pop
jecxz,pt
jp
cmp
pop
or
xchg
mov
push
inc
leave
imul
mov
in
pop
gs
mov
sbb
sbb
pop
sub
adc
call
mov
sti
xor
in
flds
out
pavgw
push
mov
sub
or
add
or
inc
aad
jb
pop
lods
ss
lahf
xchg
pop
orl
test
or
inc
jno
daa
inc
outsb
insl
fisubs
add
pop
loope
stc
push
in
mov
inc
push
pop
andb
cmc
jbe
andl
push
mov
mov
or
add
stc
add
int
jge
xor
mov
insb
xchg
fs
test
mov
int
or
cmp
bound
inc
call
cld
leave
push
rorb
or
pop
xor
push
cmpsl
xor
push
dec
or
fildll
push
xchg
add
shll
fistl
inc
cmp
adc
or
je
cmpsb
popf
dec
popa
cli
dec
sub
pop
pop
jecxz
xchg
movsb
loope
popf
es
sub
incl
dec
jg
mov
arpl
in
fiaddl
popa
ljmp
jge
push
sub
mov
dec
xchg
outsl
jo
xor
ljmp
xlat
xchg
ret
hlt
jne
fwait
sbb
mov
inc
es
and
call
add
loopne
dec
pop
mov
and
or
pop
in
sahf
mov
xchg
push
jns
shlb
es
add
sbb
mov
xchg
movsb
push
xchg
sti
cld
addl
inc
pop
nop
inc
xchg
sbb
out
jmp
jmp
outsl
jae
mov
pop
lahf
les
xor
cmovb
sbb
rcrl
leave
rcr
enter
dec
xchg
scas
sbb
sbb
sbb
adc
mov
sub
cs
mov
imul
cmp
push
cmp
push
or
adc
aad
mov
jno
sub
loop
imul
test
and
add
xchg
mov
loop
xchg
mov
les
mov
outsl
xchg
push
test
shll
out
into
dec
cmp
cld
enter
sbb
inc
ljmp
xlat
daa
cld
int
jle
leave
inc
pop
inc
rcll
scas
xchg
push
cmpsl
xchg
fistpll
push
pop
in
fisubrs
xchg
sub
push
xorl
sub
mov
adc
mov
shr
pop
imul
jb
mov
push
pop
mov
addl
fisubl
sub
imul
mov
je
jl
xchg
jl
mov
aam
std
sbb
jns
pop
push
dec
in
cmp
mull
int
pop
pop
movsl
sbb
jl
xor
add
sbb
pop
cmp
mov
insl
outsl
add
add
push
idiv
inc
int3
fdivrs
mov
mov
fcoms
lcall
xchg
or
sbb
int3
leave
mov
cs
popl
es
inc
std
mov
cli
pop
test
mov
imul
lret
push
mov
jno
pop
pop
push
mov
mov
clc
cmp
gs
mov
cmp
roll
dec
sti
xor
xchg
dec
ficoms
stos
mov
insb
in
xchg
bound
sbb
leave
test
mov
push
sub
cmp
stc
adc
jae
sub
add
test
cli
push
leave
mov
sub
pop
dec
inc
mov
scas
jp
xchg
test
push
sbb
test
pop
pusha
iret
jne
adc
arpl
push
js
push
jns
cmp
push
out
das
mov
push
popa
xor
xlat
leave
adc
cli
mov
cmp
adc
ret
pop
imul
sub
jmp
gs
scas
dec
rcr
pop
mov
addb
sub
jecxz
dec
aam
mov
pop
lea
std
frstor
mov
cld
shlb
scas
mov
cmp
xlat
or
imul
fidivrl
xadd
xor
push
mov
hlt
jo
mov
sbb
mov
out
imul
lret
gs
push
xorl
cmpl
xchg
sub
jne
add
sti
dec
dec
push
push
or
fnsave
fwait
loopne
scas
lods
into
in
lcall
fcmovnu
out
icebp
add
mov
icebp
rol
or
fdivrp
sbb
pop
pop
sub
insl
ret
lea
rolb
xor
xlat
sbb
mov
repz
jmp
xor
enter
xor
xor
shlb
dec
xlat
sti
pop
xor
xchg
xor
mov
les
mov
out
inc
fs
pop
out
mov
daa
cmc
jbe
xchg
movb
sarb
dec
in
jns
pop
movsl
push
add
sahf
int3
into
stos
in
nop
inc
out
cwtl
and
push
mov
jecxz
movsl
or
or
ja
dec
xor
rorb
or
push
pop
orb
in
test
mov
mov
xor
xchg
dec
jge
xchg
xchg
pop
cmp
jne
pop
sets
xlat
aas
gs
dec
divb
sub
in
cmp
add
cltd
and
lahf
pop
mov
jecxz
xor
aaa
mov
int3
xchg
mov
fdiv
sbb
cmp
into
mov
daa
jge
les
inc
out
push
jg
dec
roll
sub
outsb
cli
mov
adc
mov
inc
mov
gs
pop
dec
xor
sbb
pop
mov
stc
push
dec
cmc
jle
xchg
sbb
push
mov
fldl
xchg
lret
mov
inc
repnz
jmp
bound
icebp
ficoml
jb
aam
in
pop
stos
or
fs
push
flds
arpl
int
ljmp
and
test
aas
outsb
xor
sbb
jb
add
adc
popf
sbb
repz
lods
xchg
push
xlat
aas
gs
mov
add
fcom
fmuls
scas
iret
add
fldt
fcompl
sub
jl
ror
fnstsw
popf
dec
jg
mov
movsl
rcrl
adc
test
mov
sbb
insb
mov
xchg
add
pop
cmc
lcall
sbb
inc
pop
dec
mov
xor
daa
cmp
icebp
or
xchg
ret
mov
adc
lcall
or
jmp
xor
inc
add
loope
int
test
clc
les
mov
pop
pop
mov
decl
mov
xor
xlat
xor
sub
arpl
inc
test
nop
imul
shlb
test
cli
cmpsl
xor
es
pusha
add
sbb
add
jae,pt
rolb
test
jecxz
xor
dec
jae
es
fs
stc
push
aas
imul
xor
xor
ss
sub
xchg
jge
xor
ds
sti
in
mov
std
out
xchg
shl
mov
outsb
pushf
mov
xor
jns
cmp
pop
xchg
test
mov
cmp
fisubrl
inc
int3
xchg
stc
jns
cli
jns
lods
push
dec
mov
push
inc
es
xchg
sbb
push
or
out
out
pop
shl
sahf
adc
roll
push
arpl
loop
mov
push
xor
sbb
xor
nop
dec
insl
jae
adc
test
jmp
add
gs
adc
gs
stos
scas
push
jmp
cmp
mov
adc
rcll
repz
mov
jns
dec
pushf
push
push
dec
mov
and
mov
xlat
xchg
loopne
mov
in
pop
nop
repz
jmp
add
and
pop
add
sub
push
and
lods
imul
sti
aaa
fsubl
dec
push
push
lock
sub
testb
sbb
mov
jl
sub
push
cli
pop
xchg
mov
push
aad
daa
jns
fcmovnb
into
xchg
push
adc
aad
adc
sub
push
mov
nop
outsl
popa
daa
mov
hlt
adc
push
push
rclb
jo
inc
pushf
dec
jge
cmp
je
test
andb
cmc
jle
stos
outsb
out
nop
mov
and
lea
mov
push
xor
outsb
jns
push
aam
xlat
pop
adc
popf
ja
jb
fcoml
xor
out
add
or
mov
ret
in
sbb
xor
repz
sub
xchg
test
push
add
and
sahf
cmpsl
and
or
xor
scas
mov
lea
call
in
arpl
popa
movsl
cmpsl
cmp
fsubrl
addb
gs
jnp
xlat
cwtl
push
je
pop
ljmp
xor
out
das
popf
inc
add
cmc
fwait
cld
cmp
ret
jp
cli
test
or
dec
cmp
fstl
pop
xor
std
sti
push
sub
sub
ja
js
cmp
adc
sbb
lds
push
inc
jb
pop
inc
mov
outsl
jnp
call
data16
jecxz
insb
sarl
push
and
mov
inc
mov
in
pop
cwtl
out
hlt
call
in
dec
int3
test
mov
fcoms
mov
and
pop
xlat
add
push
mov
jecxz
movsl
or
jmp
dec
adc
sub
fsubl
push
add
aas
enter
loopne
adcl
mov
cmp
jl
pop
in
mov
fistl
mov
add
jb
imul
jb
or
scas
mov
jmp
out
test
insb
xchg
pop
cmpl
dec
mov
movsl
rcrb
int3
dec
std
orb
mov
fidivrs
mov
sub
ffree
popa
ljmp
leave
lock
add
jo
subl
in
push
stos
mov
les
sbb
inc
enter
fiadds
or
pop
push
pop
add
jle
into
pop
adc
ja
sbb
sub
push
imul
lea
stc
add
outsb
clc
cmpl
xor
es
push
cwtl
and
fimuls
or
push
int
pop
cmpsl
or
mov
cmp
adc
aas
ja
cwtl
mov
aad
xor
xchg
nop
xchg
xchg
inc
roll
adc
push
or
sbb
push
push
cwtl
xchg
out
ds
stos
pop
push
inc
mov
orb
in
aas
adc
mov
pop
mov
pop
test
arpl
mov
int3
repz
test
sub
adc
out
push
xorl
sahf
add
sahf
into
push
popa
les
adc
outsb
sub
iret
fldl
add
xchg
lret
ljmp
push
fistpll
push
push
ja
mov
outsb
cmpsb
mov
xchg
jae
jmp
mov
cs
rolb
mov
mov
mov
adc
or
lret
in
cmc
mov
lea
in
jnp
or
pushf
sbb
jae
ficoms
sbb
repnz
mov
lret
gs
lahf
push
fdivr
xchg
testb
pop
mov
sarb
xor
icebp
loop
xor
jne
sub
lds
or
inc
inc
jp
fcmovb
and
out
enter
sti
push
jbe
mov
push
xchg
jmp
lret
mov
inc
mov
movsl
mov
int
xchg
mov
insb
xor
or
es
addb
pusha
test
jl
mov
pop
lods
or
ds
fstpt
out
push
imul
pusha
bound
jge
lret
add
inc
scas
shll
jae
adcb
inc
sbb
loop
int
imul
and
push
movzbl
mov
xchg
push
push
push
push
pop
pop
dec
push
add
fadd
loope
fwait
adc
loop
jb
jge
pop
push
pop
add
inc
lods
fistl
xchg
inc
div
enter
cmp
cmpsb
aad
sbb
sub
mov
movsl
aas
xor
pop
xchg
inc
ret
andb
es
je
and
jo
jno
lods
pusha
leave
lret
gs
jo
dec
ds
xor
inc
jg
in
sbb
jg
push
lcall
jne
rcll
xor
pop
pop
es
push
ja
movsl
xor
jge
fs
xor
push
mov
outsl
add
bound
repz
pop
add
dec
rcrl
stc
and
shlb
pop
sarl
fsubs
jae
push
adc
and
cmc
mov
mov
cmp
adc
lahf
rol
xchg
sbb
adc
rol
dec
pop
sbb
mov
cmp
sbb
scas
loop
mov
icebp
daa
js
dec
leave
push
push
aaa
lret
mov
loopne
rolb
lcall
arpl
loope
push
xchg
iret
cwtl
mov
test
mov
insb
rcrb
inc
cmp
cmp
cmpsl
test
pushf
fs
nop
mov
mov
mov
add
mov
fst
inc
add
cmpsl
xor
sbb
dec
lods
xor
push
xchg
and
mov
inc
sub
mov
lds
sub
xchg
xorb
xor
push
cli
test
cmp
xor
push
xor
sahf
inc
add
ja
mov
cld
aam
loop
push
popf
sub
and
arpl
cmc
jg
flds
cs
pop
in
lods
inc
sbb
adc
or
dec
xchg
iret
pop
fisubrl
xor
and
adc
or
push
or
outsb
clc
push
or
lea
loope
mov
lods
gs
fwait
pushf
push
rcrb
push
push
cmp
adc
jg
xchg
mov
cmp
rol
inc
hlt
jno
sub
push
fdivrl
mov
test
test
fcoml
sub
xlat
xlat
xchg
dec
xor
jmp
pusha
add
xor
sbb
movsl
push
jno
mov
pop
xlat
std
adc
incl
imull
adc
jl
bound
cmp
cwtl
pop
out
out
shrb
test
mov
js
ret
into
jecxz
out
int3
dec
mov
pop
es
lahf
inc
popa
scas
mov
mov
pop
pop
test
xor
or
outsb
cmp
or
std
adc
incl
outsl
lods
jecxz
rorb
xchg
add
sbb
sbb
pop
add
mov
add
test
arpl
outsb
inc
enter
hlt
pop
sahf
int3
pop
mov
add
dec
dec
aaa
fs
repnz
stos
fwait
push
int
inc
pop
in
rol
mov
sbb
push
mov
test
in
jecxz
pop
lahf
and
ror
adc
push
lock
inc
jge
popa
dec
lock
es
fsubs
jl
fstl
sbb
pop
lea
scas
gs
leave
push
js
ret
mov
test
jo
jne
loope
inc
in
repnz
fdivrl
pop
out
fwait
jl
xlat
scas
jg
loop
push
addl
xchg
aad
fiadds
repz
stc
popl
lods
push
fistpl
movsl
clc
loope
dec
lea
or
lahf
xchg
jp
adc
js
hlt
or
pop
or
mov
bound
or
lret
scas
scas
cmp
test
call
push
jo
cmpb
rcll
inc
pop
out
mov
inc
cmp
lods
jno
rcl
mov
ret
fs
fisubl
sub
xor
ljmp
sub
clc
sarl
add
out
js
insl
push
mov
bound
and
cmp
xlat
out
xor
push
lahf
movb
adc
idivb
sub
or
sbb
xor
pop
mov
push
mov
or
xchg
mul
pop
int3
push
fisttps
sbb
lahf
adc
loopne
pop
dec
jg
fwait
ljmp
ljmp
cmp
sbbl
call
or
pop
push
push
mov
int3
adc
imul
mov
jp
pop
mov
sbbl
xchg
mov
sbb
push
mov
mov
mov
sub
lahf
mov
sbb
add
xor
and
and
push
or
inc
int
inc
addl
es
sub
mov
cwtl
push
mov
xor
inc
jecxz
dec
pop
ror
xor
sub
sub
xchg
xor
push
xor
loope
ret
push
lcall
call
or
outsl
ss
dec
jecxz
jbe
add
clc
jo
add
push
jmp
cli
jl
push
xchg
or
dec
dec
rcll
insl
dec
rorb
les
sbbb
mov
test
xchg
outsb
js
adcl
lea
sub
movsl
pop
sbb
sub
shlb
mov
xchg
mov
pushf
popa
in
lcall
hlt
mov
aam
loopne
sbbb
sub
pushw
iret
ds
cwtl
es
ljmp
movsw
xchg
popa
pushf
adc
scas
sub
in
and
mov
fadds
cmc
pop
mov
das
sbb
or
push
cmp
push
iret
orb
xlat
popa
push
push
enter
dec
js
pop
pop
cmp
mov
outsl
mov
and
xchg
mov
pop
cld
js
popl
jecxz
pusha
sub
jns
pusha
xchg
sub
andl
shrb
adc
fists
or
mov
sub
pop
shll
aam
jmp
mov
inc
xlat
push
mov
inc
inc
addr16
mov
subl
pusha
pusha
ret
movsb
dec
xlat
pop
imul
lods
fnstsw
mov
fistpl
xor
imul
jge
push
xor
mov
dec
push
inc
ds
rcrb
mov
imul
inc
xchg
sbb
mov
sarl
adc
mov
sbb
outsb
push
push
cli
test
jo
jae
jmp
inc
fistps
sahf
cmp
mov
cld
sub
aas
or
mov
dec
mov
pop
test
mov
lods
es
cmp
mov
push
jns
push
sub
push
sbb
sbb
fsub
push
push
mov
push
leave
push
out
ret
mov
test
sbb
div
pop
or
ja
push
push
imul
dec
pop
sahf
daa
daa
iret
into
xchg
add
xchg
test
in
jo
dec
inc
mov
or
das
test
daa
loop
dec
dec
xlat
pusha
sub
xchg
lcall
sbb
enter
cwtl
mov
xchg
cwtl
adc
xlat
rcrb
scas
mov
arpl
pop
cwtl
sarb
mov
xchg
sarl
push
pop
sub
lahf
jae
sub
gs
dec
push
add
xor
sbb
push
pop
mov
mov
pop
xor
and
push
cmpsl
xor
push
cmpsl
xlat
mov
pop
sub
cwtl
xchg
sti
mov
cmp
fistpl
ja
fs
mov
imul
lea
and
mov
addl
dec
or
push
data16
inc
dec
fsubrl
mov
stos
imul
mov
rolb
imul
sub
sbb
shrl
adc
lock
rol
pop
pop
imulb
push
mov
ljmp
mov
shlb
mov
mov
mov
pop
iret
xor
sbb
iret
lret
mov
mov
cmpsl
jns
inc
lret
call
mov
shl
out
cmpsl
xor
cmpsl
xor
jns
scas
cmp
xorl
call
dec
mov
and
add
sahf
xlat
pop
cmpsb
xor
frstor
push
cli
xchg
cld
test
jge
movsl
aas
xor
cmc
enter
xchg
insl
xor
cltd
push
xor
imul
jbe
lahf
push
cmp
lahf
jns
out
adc
add
negb
je
aad
jne
sub
lahf
mov
sub
cmp
fisttps
arpl
xchg
lock
cs
sub
and
enter
jecxz
inc
or
xchg
test
sti
mov
inc
cwtl
xchg
cmp
rcr
int
iret
pop
loop
ret
pop
or
sub
inc
fisubs
or
dec
mov
cltd
mov
pop
cmpsb
movsb
mov
rep
ds
test
aam
es
cmpb
test
popf
lock
dec
dec
push
cmc
repnz
stc
jb
cmp
pop
out
icebp
mov
out
shlb
push
cmpsl
xor
xor
idiv
jb
int3
push
adc
unpcklps
xchg
imull
orl
sahf
pop
pushf
cwtl
incl
dec
fcomip
repnz
add
cli
mov
test
fs
mov
adc
lahf
or
shl
pop
xadd
pop
mov
ja
add
pop
pop
sti
xchg
mov
cmp
aas
mov
lock
jno
test
mov
sub
or
add
pop
adc
lds
jg
dec
xchg
push
xchg
pop
subl
pop
jb
imul
fucomip
fdivl
cltd
stc
pop
pop
repz
stc
cmc
fsubl
mov
iret
cmp
imul
out
lcall
and
jnp
ret
sub
popfw
outsl
js
add
lock
jne
sub
lods
xor
imul
int3
je
add
mov
sub
add
cmp
cmpsb
aad
in
pop
sub
fsubl
mov
push
adcb
cmp
je
push
pop
fcomip
cmp
icebp
pop
fucomi
aam
shrl
pop
mov
jo
adc
adc
inc
xchg
andl
pop
rorl
mov
cli
lods
popf
pop
enter
rcrb
pop
test
xor
xchg
test
imul
xchg
sub
arpl
cmp
push
pop
ficomps
or
das
fs
and
imul
subb
inc
rcr
or
cld
adc
in
sbb
mov
jmp
jl
roll
jle
pop
fcmovnu
mull
sub
dec
inc
iret
in
in
shl
cld
stos
xchg
mov
push
mov
cmovo
pop
sub
mov
cmpsl
dec
cmp
sub
fdivrp
mov
rcrb
xor
xchg
cmp
push
push
adc
adc
mov
arpl
sbb
push
lock
int3
rcrl
xor
or
pop
xlat
mov
sbb
dec
out
and
out
push
push
dec
and
sub
mov
or
adc
aam
inc
sbb
insl
pop
pusha
pop
or
mov
cmpsb
shrb
cmp
fdivrl
adc
stos
jno
nop
outsw
and
gs
jo
cmpb
sbb
inc
push
pop
dec
bnd
sub
insl
or
lahf
fs
xlat
mov
add
xlat
in
ljmp
mov
pop
jns
xchg
lret
outsb
jle
inc
adc
shrl
pop
xchg
dec
jge
jmp
and
cld
push
stc
add
ficomps
lcall
cmc
inc
loopne
aaa
or
cld
test
test
pusha
xor
mov
ret
cmpsb
inc
rcl
jge
cmpsb
jle
pop
int3
sarl
cmp
inc
push
jl
aas
enter
ret
cmp
pop
push
cmp
pushf
popa
mov
fbld
sbbl
fistpll
lahf
into
mov
sub
mov
cmpsb
xlat
arpl
in
add
mov
inc
scas
sub
xlat
mov
es
mov
pop
push
adc
dec
or
mov
es
xchg
sbb
aaa
sub
cld
sbb
xor
sbb
popa
xchg
xchg
and
fdivrs
adc
mov
pop
fidivs
neg
fcoms
and
add
sbb
push
add
out
xor
or
imul
hlt
adc
lock
fadds
jmp
jmp
jne
stos
addr16
pop
fs
outsl
inc
or
xor
cmp
xor
jmp
push
enter
xchg
cmpsb
shrb
xchg
push
addl
xor
inc
leave
cli
add
nop
stc
andl
insb
add
mov
movsl
data16
pop
push
lret
shlb
sti
push
and
mov
int
mov
push
fists
inc
push
add
add
idivl
gs
mov
outsl
enter
lahf
popa
mov
push
negl
mov
enter
add
xor
sbb
test
lcall
lahf
gs
cmp
mov
push
iret
pop
jl
mov
or
mov
icebp
scas
rorb
mov
shlb
setnp
ljmp
sub
out
sub
pop
adc
dec
addr16
mov
cmpsb
add
in
pushf
rcrl
jae
or
mov
in
test
mov
lahf
andb
lods
xor
inc
test
fs
stos
adc
xchg
scas
xchg
xchg
or
icebp
add
jo
push
loope
out
orl
mov
cwtl
mov
aad
jno
xchg
repnz
out
outsb
lahf
pushf
pop
test
inc
xchg
test
add
mov
jb
pop
nop
xchg
sub
out
adc
gs
pusha
mov
fwait
xchg
lcall
xchg
pop
xchg
adc
je
mov
xor
cmp
lret
int3
lods
addr16
inc
push
pop
sbb
cmc
int3
nop
push
push
icebp
in
adc
mov
mov
cmp
es
movups
repz
xchg
adc
clc
stc
cwtl
xchg
xchg
cmpsl
test
xlat
int3
push
jge
pop
sbb
icebp
mov
jp
je
ljmp
xorl
mov
dec
mov
cs
inc
dec
mov
mov
mov
mov
cmp
stos
xor
dec
insb
iret
adc
mov
sahf
pop
inc
pop
xor
mov
in
mov
jnp
cvtpi2ps
ret
dec
adc
cmpsl
leave
xchg
inc
or
and
je
xchg
lea
mov
enter
sbb
nopl
out
loopne
fisttpll
xchg
imul
mov
mov
jl
lahf
fsubp
shl
mov
mov
in
ss
jo
xchg
pop
out
outsb
js
and
rclb
sbb
inc
dec
sbb
mov
and
out
sub
orb
push
adc
xor
mov
rorl
adc
lret
sbb
mov
pop
add
push
ss
or
adc
popa
pop
gs
mov
insl
out
shlb
cld
pushf
mov
sub
mov
jo
jmp
push
dec
add
mov
add
in
aaa
sub
dec
xchg
pop
or
gs
mov
cmpsb
sub
inc
jle
arpl
mov
pop
icebp
enter
sbb
mov
adc
data16
imul
and
jne
jge
sbb
cmp
cmc
in
test
sahf
mov
fwait
cmp
fistps
and
mov
adc
inc
jge
mov
adc
fs
xlat
pop
lods
es
mov
sbb
ffree
ja
xlat
aad
sub
les
cmp
in
leave
test
sarb
in
stc
cmc
stos
out
and
jecxz
cmp
jle
ljmp
call
daa
add
fisttps
repz
and
cmp
into
mov
adc
cwtl
push
dec
adc
add
push
inc
dec
mov
movsb
sahf
imull
inc
ds
xor
repz
jmp
xor
movsl
aas
enter
sarb
add
je
pop
sbb
mov
and
inc
push
fdivrs
jecxz
mov
pop
push
loopne
jg
mov
inc
test
insb
sarl
scas
mov
icebp
jecxz
mov
repnz
out
mov
negb
fnstcw
push
aad
pop
push
sub
xchg
push
rcrb
bnd
ljmp
in
outsb
js
pop
test
dec
xor
pusha
ljmp
ljmp
lods
xor
rorl
adcl
jp
pop
jae
xlat
scas
imul
jmp
lcall
lret
out
ret
mov
ja
fwait
bound
ret
rorb
pop
push
lret
arpl
fsubrl
fisubl
jp,pn
jae
sbb
lock
lcall
imul
adc
faddp
lret
push
dec
pop
jo
cltd
push
xor
imul
jbe
cli
and
mov
mov
or
in
jecxz
bound
or
sub
and
jge
outsl
pop
dec
out
mov
xchg
aad
fsubs
aad
pop
adc
movsl
cs
rol
out
sbb
out
adc
dec
mov
dec
dec
push
popa
ljmp
lods
into
dec
cltd
and
ret
andl
stos
daa
mov
sbb
jp
ljmp
and
sbb
dec
clc
add
mov
jp
cmpsl
enter
and
in
test
imul
pop
rolb
jb
inc
lret
pop
pusha
in
jbe
or
sbb
cmpb
scas
cwtl
jno
icebp
dec
mov
fstpt
xor
cmpsl
mov
add
shr
add
inc
inc
sub
fwait
push
clc
enter
inc
in
cmpsb
pop
jecxz
and
arpl
ljmp
je
insb
pop
sets
xlat
test
stc
stos
and
add
jne
push
imul
ret
push
mov
pop
mov
pop
xorl
outsb
and
sbb
mov
cs
in
pop
stos
xor
in
xor
clc
ja
std
push
popf
jmp
dec
lods
scas
into
ds
cs
faddl
push
cltd
mov
xor
movsl
outsb
jg
inc
lret
push
sbb
add
adc
sub
sarb
push
test
enter
pop
mov
fndisi(8087
mov
int
xor
sub
mov
insl
pop
nop
in
adc
sti
sub
or
data16
cld
in
push
cmpsl
sub
addl
jp
push
popa
insb
aam
arpl
jmp
stc
orb
sbb
mov
jl
mov
sub
aam
mov
mov
xchg
mov
mov
mov
insb
inc
int
push
lea
cld
cmpsb
lods
sti
and
adc
xlat
ficomps
mov
sti
jne
mov
iret
bnd
lret
cmp
xchg
sbb
fcomp
pop
sub
sbb
mov
stos
sbb
roll
imul
inc
and
push
jne
push
fisttpl
mov
inc
xor
scas
mov
rorb
xchg
test
jecxz
cmp
jle
push
lods
std
or
mov
data16
inc
lock
ds
inc
cmp
push
in
inc
pop
lods
jl
inc
jge
pop
mov
dec
sub
and
xor
mov
orl
jmp
ss
lds
dec
sub
pop
inc
fs
sub
mov
push
mov
mov
call
push
inc
cld
add
mov
lahf
sub
repnz
xor
adc
subb
sub
lahf
xchg
cli
sti
sub
outsl
or
lret
jne
popa
sbb
test
std
mov
imul
or
js
jecxz
xor
clc
mov
lock
pop
in
add
add
adc
rol
mov
mov
dec
xlat
lret
dec
cs
push
cmc
fildll
mov
outsl
stc
mov
lcall
fstpt
inc
cmpsb
mov
xchg
jae
insb
or
xlat
pushf
sub
jp
or
pop
sub
mov
dec
addr16
imul
hlt
jge
mov
inc
dec
shrl
test
push
push
jmp
adc
mov
rcll
mov
sub
mov
in
cld
outsb
xor
lahf
sbb
addr16
xor
into
pop
ss
mov
jb
jo
fcompl
cltd
loop
or
movsb
cmpsl
xor
sbb
in
mov
bound
loop
xchg
cwtl
jge
mov
dec
jno
mov
outsl
and
add
push
in
and
fisubrs
lahf
sahf
loope
idiv
pop
pop
mov
in
cltd
inc
int3
ret
mov
or
jl
sbb
or
mov
leave
gs
pop
cmp
cmp
imul
adc
jp
or
enter
rclb
mov
inc
dec
jae
or
lret
test
imul
fisttps
lods
sti
fidivl
and
mov
pusha
cmp
and
cmp
dec
roll
push
xchg
and
arpl
imul
jno
neg
jmp
mov
xorl
adc
sub
mov
stos
inc
jl
pop
in
mov
sbb
data16
adc
dec
fsubs
sbb
push
pop
sub
jge
or
cmp
and
test
push
add
dec
sbbb
movsl
inc
cmovbe
call
fiadds
fildl
popa
ljmp
push
adc
cwtl
ror
or
lahf
fs
push
orb
mov
dec
std
subl
aam
sbb
outsl
add
test
ja
cmpsl
pop
fwait
jmp
sbb
pusha
mov
mov
jp
and
sar
jbe
mov
call
cli
leave
inc
int3
pop
mov
arpl
movsl
inc
mov
aaa
mov
push
pop
and
cmp
aas
mov
xor
fimull
mov
push
repnz
popf
pushf
scas
cmp
and
push
sbb
daa
sbb
lock
lahf
sub
or
mov
dec
scas
mov
or
cmp
in
mov
xor
inc
outsb
mov
inc
xorb
outsb
aaa
outsb
mov
mov
filds
mov
pop
push
jo
pop
nop
xchg
sub
sub
push
add
icebp
cmp
adc
jo
pop
mov
in
rolb
or
lcall
orb
loop
cs
imul
cmc
cmpl
in
mov
add
arpl
mov
int
jns
dec
xchg
xor
enter
xchg
push
adc
dec
rcrb
ficompl
xor
xlat
loope
and
mov
and
pop
pop
scas
mov
punpcklbw
xor
sub
gs
lgs
cld
stos
in
xor
jns
gs
fwait
popf
jecxz
add
pushf
test
and
test
jl
addr16
xchg
pop
out
push
fidivl
mov
xor
pop
push
push
cmc
rorb
sti
xor
out
sub
mov
cmp
repz
inc
je
mov
and
stc
loop
dec
dec
or
xor
jge
push
mov
ljmp
xchg
inc
in
rolb
cmpsl
movsl
inc
dec
cld
inc
iret
and
mov
mov
lret
shlb
dec
rcrl
mov
fistpl
loop
daa
jmp
push
cmpsl
mov
inc
lret
call
add
rol
in
into
mov
addb
es
dec
mov
movsb
and
into
cld
fadds
mov
dec
ffree
cmp
cli
inc
int
cmc
orb
mov
rcrb
or
sets
aad
and
stos
gs
clc
sbb
cmp
mov
or
nop
sbb
push
xor
rorl
xor
mov
dec
sub
xor
inc
int
lods
stos
dec
push
dec
mov
aam
jno
aam
mov
outsb
ja
shrl
pop
rcll
adc
ja
jl
sub
leave
mov
push
jns
sbb
push
shlb
mov
jle
sbb
adc
lods
aam
je
sub
mov
inc
test
sbb
fsubl
popa
push
fisubs
add
xor
shrl
mov
cltd
push
xorl
cmp
push
xor
sbb
mov
xchg
hlt
out
mov
orl
cmp
aas
cltd
les
and
stos
test
mov
fisubs
outsl
sti
xor
inc
dec
nop
rolb
and
mov
and
pusha
out
cmc
lock
inc
leave
mov
into
inc
jne
sub
mov
adc
xchg
dec
add
jp
ljmp
xchg
fnstenv
lds
or
cld
inc
inc
mov
sub
gs
and
mov
out
jns
inc
outsb
ja
add
stc
jecxz
popf
inc
std
jecxz
fwait
cld
cmp
mov
sub
lret
add
mov
jecxz
dec
mov
cli
roll
add
or
mov
iret
iret
fs
rcr
dec
gs
pop
mov
pusha
sbb
sbb
jp
addr16
sub
add
jge
add
test
xlat
and
mov
mov
into
rorb
pop
les
mov
xchg
sbb
inc
clc
lods
jmp
imul
mov
add
xchg
push
jmp
xchg
dec
mov
fdivrs
mov
jnp
adc
stc
xorb
out
mov
dec
push
dec
push
pop
fadds
je
fnstcw
fs
test
lahf
stc
cli
pop
adc
mov
or
ss
or
dec
sti
int3
out
cli
in
pop
mov
stos
sub
mov
dec
or
cmp
cld
jo
bnd
imul
mov
dec
and
cmp
lock
popa
ljmp
lods
mov
adc
cli
mov
mov
cmp
leave
xor
iret
shl
fucomip
jae
pop
adc
push
test
mov
and
mov
mov
inc
into
nopl
fldt
adc
mov
pop
arpl
jbe
or
xor
notl
pop
loopne
xchg
mov
and
xchg
jns
fimull
mov
cmpsb
or
cvtps2pi
out
cmp
in
pop
jb
gs
mov
ficomps
int
gs
pushf
incb
push
mov
fcmovbe
xor
add
cmpsb
enter
fcoml
push
xchg
dec
aam
rol
mov
mov
jmp
jecxz
push
pop
sbb
fisttps
xchg
xchg
cmc
ret
cs
mov
out
clc
divb
adc
jnp
dec
xchg
hlt
mov
push
je
xchg
loop
loope
add
data16
sub
cwtl
out
mov
xchg
inc
xor
xchg
jbe
fisubs
lret
add
scas
push
sub
push
ja
hlt
or
pop
cmpsb
dec
pop
in
and
mov
mov
into
rorb
sahf
push
fisubl
jmp
and
in
inc
jb
fisttpll
rcrl
ret
fs
outsl
inc
leave
and
insb
xor
ret
push
mov
inc
leave
push
fbstp
out
and
clc
enter
into
inc
pop
les
xor
adc
pop
pop
sar
add
cli
pop
push
pop
out
sub
andb
jg
pop
lods
mov
and
jp
out
jns
add
testl
std
push
mov
or
sub
out
shrb
xor
mov
fstl
sub
nop
or
xchg
sub
rol
stc
push
xchg
sub
xor
ret
cmp
in
cwtl
push
add
pop
jp
push
dec
out
fidivl
fisubrl
mov
loopne
mov
pop
mov
cwtl
and
or
sub
rcrl
or
scas
je
mov
aas
stc
sub
xchg
cmp
enter
mov
xchg
and
fisubl
inc
js
rorb
flds
xor
and
cli
inc
dec
xchg
imull
arpl
cmp
and
loop
in
out
jmp
push
or
inc
mov
cmpsl
xor
and
dec
sub
cmp
inc
jno
test
out
jno
mov
cmp
cmp
cmp
std
loop
mov
mov
dec
stc
test
sbb
je
add
cmp
dec
ficomps
mov
pop
stos
and
rorl
gs
mov
sbb
pop
and
or
or
pop
movsl
xor
dec
cmp
int
test
mov
add
das
insb
test
lret
push
cmp
xchg
cwtl
fstl
dec
cmc
aaa
aaa
sahf
int3
sub
sub
stos
out
or
daa
mov
mull
and
inc
int
lods
arpl
push
jne
push
xor
cmp
loopne
orb
xor
ja
jb
out
out
mov
jge
test
mov
and
pop
jp
pop
cltd
in
add
xchg
fcomp
cmpb
push
xchg
daa
adcb
out
mov
xor
sbbb
jle
mov
rcl
lcall
add
test
das
hlt
xchg
lods
xchg
mov
insb
inc
dec
or
incb
std
je
xchg
jmp
stos
add
jo
and
and
or
xchg
pushf
mov
xchg
sbb
mov
fisubs
loop
cwtl
ds
cmp
arpl
jbe
fcmovne
lcall
xor
sbb
test
cwtl
hlt
cmc
push
cmp
mov
sbb
xchg
push
imul
scas
xor
mov
and
sti
std
jge
push
pop
push
mov
stos
mov
in
out
mov
jo
sbb
insb
push
fs
enter
inc
push
xorl
gs
pushf
push
xor
mov
xor
push
xchg
leave
jns
cmp
mov
xor
insb
cmc
inc
sub
movl
mov
xor
rcll
jno
test
movsb
cmpsb
jmp
cli
ret
lea
xchg
cwtl
pop
repnz
rolb
push
xor
mov
sbb
orb
hlt
out
ljmp
lods
std
pop
pop
adc
mov
addl
push
inc
iret
pop
cli
js
fsub
sub
std
xchg
loope
scas
cmp
in
out
jno
mov
sub
iret
cmp
imul
or
or
push
ds
cwtl
out
repz
test
jns
pushf
push
rcll
or
inc
out
test
jo
fidivs
mov
ret
push
test
adc
xchg
fwait
bnd
jnp
hlt
jmp
shll
adc
subl
dec
cmp
popa
xor
mov
push
rcll
test
pusha
mov
push
cmp
scas
cmp
les
sbb
add
shl
jl
sub
outsb
xor
mul
sbb
push
fcomip
lcall
xor
jge
js
push
jge
js
pop
into
push
popa
cltd
sbb
loopne
fs
rcrl
mov
xor
loopne
iret
pop
loop
popf
mov
loop
push
mov
inc
dec
push
pushf
or
add
call
test
dec
pop
addr16
add
in
pop
jmp
pop
adc
cmpsl
xor
cld
dec
xor
or
mov
scas
mov
inc
push
nop
mov
cli
loope
enter
and
inc
xchg
push
sti
cld
ret
test
add
sahf
pop
jge
push
cmp
inc
sub
lcall
scas
xor
mov
dec
fstpt
jl
push
popa
les
aad
mov
add
imulb
jbe
push
sub
in
dec
jno
popl
mov
lds
out
sub
lahf
push
cmpsl
jne
pop
pop
into
addb
jle
push
shlb
aas
or
sbb
xchg
mov
cmp
cmp
xchg
sub
inc
imul
mov
jae
mov
pop
test
jae
stc
icebp
or
adc
xor
mov
ss
sbb
out
add
popf
fisubl
add
xor
cmpsb
or
ja
sub
pop
pop
loop
lahf
mov
push
cmpsl
loopne
jmp
es
cmp
pop
pusha
pop
fdivrp
lock
jno
xor
and
mov
fwait
lea
xchg
or
int
out
out
mov
inc
push
out
add
test
es
or
pop
call
in
xlat
inc
mov
mov
test
cmp
xchg
or
out
ljmp
insb
and
sub
in
iret
popa
xchg
pop
xor
pop
dec
cmp
add
rcrl
sub
jmp
int3
mov
sub
inc
mov
fcmovnu
bound
bound
mull
cmp
and
sub
in
jb
mov
aas
test
addb
adc
sbb
fildll
insb
out
data16
out
cmc
mov
sbb
cmpsb
xchg
cmp
insl
test
sti
hlt
sub
or
sub
mov
cmp
aaa
leave
push
dec
cmc
mov
jle
ret
shll
call
dec
sub
and
and
xor
rcrl
mov
mov
jb
pop
fs
stc
push
fs
mov
push
pop
in
popa
idivb
mov
in
std
lods
bound
jl
addr16
pop
out
insb
pop
data16
mov
add
cld
dec
mov
dec
jo
push
adc
movsl
cmpsb
popf
in
leave
dec
sub
dec
dec
movhps
icebp
shlb
idiv
xchg
push
and
imul
jno
fsub
sbb
add
mov
out
xchg
inc
sub
xchg
stos
fucomip
and
test
add
mov
inc
or
xchg
sbb
test
repnz
jb
icebp
jp
mov
mov
mov
cltd
ja
clc
or
inc
xor
ret
mov
jge
gs
adc
rcrb
pop
inc
push
cmpsl
xor
dec
xlat
loope
xchg
mov
nop
sbb
rcrl
dec
sub
in
and
inc
xor
dec
fstl
popf
add
xor
imulb
enter
inc
mov
orl
push
nop
shll
inc
cwtl
and
aas
inc
popf
out
cltd
repz
xchg
push
push
jge
int
loopne
mov
dec
add
mov
out
test
sub
add
mov
cs
cltd
adc
fsub
pop
sub
add
inc
xchg
pop
mov
imul
popa
ljmp
mov
sbb
adc
ret
mov
cmp
shl
loopne
jae
sbb
lods
dec
inc
push
or
xchg
out
jmp
fnstsw
imul
ret
dec
sarl
addr16
loope
mov
or
loop
xlat
loope
inc
movsb
mov
adc
cwtl
movsb
stos
adc
in
sbb
mov
or
jne
test
lahf
insb
mov
cmp
push
pop
adc
adcb
sbb
mov
and
data16
jno
out
cmp
out
shrb
in
lahf
sub
or
pushf
xchg
test
loopne
cmpsb
or
sbbb
push
lret
fsubl
imul
inc
inc
pop
xchg
test
popa
cmp
repz
jge
xor
daa
cmp
insl
idivb
push
stos
std
mov
int
dec
push
adc
dec
rcrl
stc
orl
dec
int
inc
iret
xor
bswap
lahf
or
inc
xchg
out
cwtl
dec
inc
or
add
jbe
mov
jle
movsl
scas
xchg
pop
xchg
mov
sarb
or
xchg
cmp
ret
lds
xchg
cmpsl
loope
fs
cmpsl
sub
cld
mov
jo
adc
mov
xorl
add
scas
in
sbb
jnp
mov
cmp
out
xor
out
clc
fisttpl
sarb
cmp
mov
in
mov
mov
stc
cmpl
lahf
sub
xor
enter
jp
xchg
icebp
outsl
out
aam
sub
dec
cmp
add
adc
pop
dec
xchg
popf
inc
in
add
pusha
dec
aam
mov
xor
and
sahf
daa
mov
pop
into
push
popa
les
and
pop
shrw
or
out
shl
mov
rolb
int3
lret
push
fidivrs
jns
hlt
mov
pusha
sbb
daa
and
pop
clc
add
add
and
jnp
je
sub
jp
ds
insl
outsl
mov
fcmovnb
dec
sub
or
lahf
xchg
filds
sbb
dec
mov
leave
out
ja
mov
imul
lcall
inc
int3
into
inc
mov
aaa
imul
in
cmp
lcall
shr
pop
lcall
mov
cltd
out
cwtl
and
pop
cltd
int
add
cmp
cmp
pop
jne
fists
popl
fdivrp
xor
mov
sub
dec
inc
negb
xchg
pop
adc
clc
cmp
iret
add
out
mov
push
cmpb
pop
push
xchg
lcall
aad
adc
aam
hlt
outsb
js
and
cmp
das
imul
imul
enter
je
popf
mov
sbb
sti
ljmp
lret
push
jno
cmc
push
int
das
hlt
sub
xchg
xor
cmpsb
stos
les
js
sahf
int3
pop
pop
jbe
cld
test
iret
pusha
and
xor
idiv
insb
shr
jbe
and
iret
std
mov
shll
jae
fwait
xchg
pop
or
rcrl
xor
adc
out
int3
push
pop
lea
cmpb
out
js
ficoms
fadds
or
pushf
cmp
jle
sbb
xchg
pop
in
mov
sbb
mov
xor
repz
test
idivb
push
push
pop
push
add
mov
xchg
roll
mov
jns
pop
xchg
sbb
add
lods
mov
aaa
cmp
xchg
or
xchg
pop
xor
or
in
sbb
mov
addr16
sbb
sti
mov
icebp
jp
fistps
ds
andb
icebp
mov
sbb
orl
pop
hlt
cmc
sbb
pop
mov
sub
xchg
push
cmpsl
bound
push
pop
loopne
push
out
outsb
sub
inc
inc
jno
and
sti
test
aad
or
adc
ficoms
std
int3
cld
lods
lahf
cwtl
dec
inc
pop
mov
jle
jecxz
cmpsl
push
or
iret
pushf
cmpl
inc
fildll
pop
and
jp
out
stc
addb
in
pop
fadds
pop
ds
jb
mov
dec
mov
inc
xor
xor
mov
out
inc
sahf
cmpsl
and
popf
es
xchg
es
sti
loop
add
cmc
mov
mov
fcmovnu
bound
add
xor
mov
fwait
mov
pop
adc
rcr
push
xor
cltd
push
sub
inc
lret
sbb
sbb
xlat
into
pop
mov
inc
fisubl
add
mov
out
popf
decl
xchg
scas
cmp
jmp
and
ds
jge
mov
test
add
jmp
ja
push
and
mov
icebp
cli
scas
sahf
outsl
jno
fcmovnb
out
ja
test
lods
cmpsl
xor
insl
sbb
xchg
add
test
les
mov
and
or
clc
andl
les
inc
and
je
mov
ja
leave
sub
orl
sub
xor
cmp
pushf
outsl
into
add
rcr
ljmpw
mov
dec
mov
sub
push
sbb
int
dec
aam
pusha
push
push
fcoms
cs
mov
lret
mov
into
adc
rclb
out
outsl
sarb
sub
inc
rcl
xchg
pop
adc
in
mov
mov
das
cmpsb
jno
xchg
imul
rclb
icebp
sub
mov
imul
dec
pop
jb
pop
jmp
ror
test
dec
sar
rep
clc
sbb
cmp
lahf
xlat
test
add
pop
pop
push
sub
add
mov
test
popa
push
and
inc
cld
cmp
in
jbe
sub
and
int3
jnp
movsl
push
dec
jbe,pt
sub
clc
push
mov
rclb
cli
ret
adc
jge
lds
fildll
mov
adc
xchg
jmp
mov
out
sbb
cmp
ret
cltd
cmp
out
scas
xor
stos
lds
mov
jae
mov
jmp
imul
inc
ljmp
out
js
movsl
cs
mov
mov
icebp
js
je
iret
sbb
mov
mov
xchg
adc
fsts
push
iret
pop
mov
xchg
sbb
xor
lcall
push
ds
add
in
jbe
pop
cmp
pop
cmp
push
add
cld
test
subl
stos
in
lret
cmp
cmpsl
xor
cmp
in
push
fbld
jp
inc
out
test
cmp
dec
mov
movsl
lods
adc
dec
jae
xchg
and
cmc
rcll
data16
enter
stc
lcall
fstl
and
and
adc
mov
movsb
rcrb
leave
daa
and
psadbw
cli
jmp
jg
jmp
and
and
mov
rcr
and
les
push
loopne
xor
adc
jne
rcll
sub
dec
sahf
pop
incb
aaa
je
xchg
bnd
lcall
push
or
repnz
dec
inc
insb
out
or
les
sub
jle
enter
sub
jns
sub
jne
test
mov
jnp
push
imul
and
punpckhdq
rorl
stos
clc
orl
popa
pop
out
xlat
loope
cmp
jne
rcrl
and
movsb
push
xchg
sti
cld
rcrb
cmpsl
sub
andb
xchg
repnz
mov
xchg
fsubl
leave
into
inc
aas
jo
mov
sti
or
jge
xchg
ret
hlt
adc
nop
shll
cwtl
and
inc
mov
sub
bound
in
xchg
sbb
sub
movsl
sub
push
and
add
ds
xor
cmpsb
mov
inc
and
inc
leave
shll
repnz
pop
adc
js
lahf
movsl
ds
pop
loope
pop
push
popa
les
jnp
stc
jno
xor
jo
pop
pop
mov
js
and
mov
cmp
jg
cmp
outsb
push
pop
sbb
push
fisubs
mov
push
mov
fidivl
adc
les
jbe
mov
jge
push
lea
inc
enter
arpl
iret
shl
push
sub
dec
push
jb
mov
pop
jne
xor
push
xchg
sti
pop
push
sbb
jg
cmp
jbe
jecxz
loope
xchg
inc
sbb
pop
sets
inc
fldt
lea
jecxz
testb
test
jae
je
imul
rcrl
xchg
scas
orl
or
bound
out
inc
sbb
scas
xchg
push
enter
pop
mov
test
sub
rcl
mov
or
sarl
push
push
daa
push
mov
cmp
testb
andl
mov
lret
ret
in
iret
add
inc
sbb
xchg
pop
cmc
int3
aad
jno
push
mov
sub
ret
mov
jns
clc
xchg
mov
outsb
dec
dec
mov
push
pop
lcall
outsl
insb
in
xor
loope
and
add
inc
pop
sub
loope
std
mov
cmp
out
jno
loop
sub
arpl
cwtl
xchg
loope
dec
inc
and
inc
test
mov
push
sub
cmc
ficomps
int
ja
mov
sub
pop
lods
clc
pusha
add
out
add
add
add
or
mov
pushw
lods
push
jp
sub
mov
cmp
jne
rcrb
fsubs
es
mov
int3
in
insb
mov
repnz
hlt
stos
jno
push
mov
and
rorb
xchg
adc
cmp
push
int3
js
js
leave
xchg
out
mov
xchg
xchg
jecxz
jno
lds
mov
dec
add
sahf
scas
icebp
popa
mov
cmp
mov
mov
movsb
cmp
xor
pop
mov
sbb
push
cmp
pop
ss
lret
push
out
addr16
jp
gs
rcrb
outsb
lahf
adc
xchg
inc
stc
xor
les
cmc
scas
cmp
scas
cltd
arpl
test
nop
gs
dec
ja
cs
popa
dec
je
lods
push
pusha
or
push
scas
cmc
std
mov
test
sub
js
gs
pop
dec
xchg
sbb
int
movsb
lret
scas
orb
das
es
subb
lahf
iret
add
sub
bound
xor
xchg
jl
mov
cli
add
aas
out
test
mov
jecxz
cmp
cmp
jne
cmc
fistps
dec
cli
dec
sbb
int3
das
mov
sub
insl
jge
outsl
adc
loop
in
bound
bnd
or
enter
adc
loop
sbbb
ja
xchg
fdivl
push
add
pop
jle
jle
enter
ja
add
rcll
xchg
popf
add
in
or
dec
pop
sub
aam
push
bound
leave
xlat
jle
push
or
divl
rdtsc
rcrl
pop
pop
scas
mov
or
cmp
jns
push
pop
ljmp
dec
out
popf
sahf
mov
enter
push
push
les
mov
add
in
popf
int3
pop
loope
imul
xchg
jge
negl
cld
push
pop
sub
fimull
stc
imul
mov
addl
scas
das
out
ss
mov
testb
cmp
fdivrl
aam
call
push
lods
xchg
mov
test
repnz
adc
mov
es
adc
xchg
ds
add
aam
xchg
adc
daa
cmpsl
jecxz
xlat
cmpsb
jae
lcall
mov
jo
dec
stc
sub
mov
inc
xchg
inc
sbb
add
test
sbb
mov
fidivrs
pop
aad
cmp
push
test
pop
ret
xchg
mov
jne
sub
shlb
ficomps
jno
test
pop
inc
dec
dec
inc
ljmp
push
pop
lcall
sub
lcall
mov
push
push
cltd
inc
insl
idivb
sbb
inc
filds
jl
inc
leave
roll
leave
stc
stos
fwait
push
inc
clc
test
add
fsubrs
push
andl
loopne
and
push
dec
out
dec
push
stos
mov
imull
cmp
out
bound
fwait
jb
pop
shll
aam
jno
or
or
adc
sbb
adc
cs
push
adc
movsb
notl
sbb
outsb
rep
inc
jg
ret
ss
lret
push
fidivrs
inc
add
sahf
lods
enter
jns
dec
lret
sahf
push
into
xor
push
out
lods
pop
sbb
clc
clc
sub
push
sarb
inc
divb
push
stos
push
ret
mov
push
mov
mov
add
sub
stc
push
sub
incb
orl
pop
mov
jb
fisttps
aas
enter
sbb
out
repnz
cmp
cs
xor
mov
negb
loopne
bound
das
sub
and
pop
sub
fsubl
inc
addb
adc
mov
jmp
incl
repnz
mov
jg
sbb
cmp
sub
jmp
mov
ljmp
or
adc
pop
or
in
rol
mov
sbb
pop
pop
cmc
mulb
adc
adc
movsb
mov
pushf
bound
movl
cmp
imul
iret
sub
mov
stc
add
dec
clc
sbb
fisttpll
push
xor
and
cld
test
adc
dec
push
xchg
cwtl
push
inc
mov
cmp
ret
out
in
mov
sets
sahf
jno
sub
lods
ds
rclb
sub
popa
ljmp
push
xchg
stos
icebp
sbb
mov
mov
cmp
inc
sarl
xor
ljmp
and
sub
repz
add
outsb
ja
rep
neg
sbb
iret
jne
or
lea
xor
out
sbb
or
ret
or
dec
std
loopne,pn
arpl
adc
or
xchg
stc
cli
std
push
xor
les
cld
fs
fistps
movsb
pop
mov
icebp
dec
shlb
sbb
mov
aam
adc
loop
insl
dec
mov
int3
call
mov
or
push
jb
push
fisubl
arpl
sbb
movsb
lods
in
mov
jne
dec
adc
inc
in
or
shlb
jbe
das
fiadds
sbb
and
mov
cld
mov
sub
cwtl
cltd
push
jp
mov
insl
dec
pop
xlat
movsb
dec
xlat
stos
lds
fildll
inc
pop
arpl
fucom
xor
lret
gs
jo
push
insl
jb
leave
xchg
shll
sub
rorl
test
fsubs
jne
icebp
xchg
fisttpl
cmp
pop
mov
jb
mov
sbb
repz
in
test
adc
das
inc
dec
add
or
dec
in
ror
cmpsb
std
scas
repz
push
test
in
sbb
imul
lcall
xchg
out
les
dec
jnp
pop
dec
sti
fnsetpm(287
xchg
push
fisubl
sahf
or
test
or
mov
imul
push
test
pop
in
mov
push
pushf
jbe
adc
lcall
mov
jo
dec
out
dec
sub
ljmp
hlt
mov
jg
add
mov
nop
push
notl
mov
loop
xchg
and
or
cmp
les
stos
fs
bound
cmpsl
in
jecxz
cmp
lahf
into
dec
push
pop
push
cmp
xchg
sbb
sub
mov
in
insl
mov
insl
push
fwait
sahf
push
jmp
cmpl
call
andb
jno
sub
test
adc
push
and
call
add
orl
jne
mov
rcll
ret
enter
nop
push
loope
lret
and
push
lods
mov
sub
mov
cmpsb
dec
inc
in
and
nop
cmp
sbb
sub
mov
xchg
inc
pop
in
push
inc
or
lcall
push
and
mov
movsl
mov
rclb
sarb
xchg
mov
arpl
jmp
movb
cwtl
cltd
push
lcall
test
ret
jmp
cmp
pop
ss
into
or
mov
shrl
inc
mov
in
mov
xchg
pop
and
inc
inc
push
xlat
call
xor
cld
repz
andl
or
imul
xchg
push
xorl
xor
mov
xchg
ret
dec
mov
jl
call
ds
cmp
add
and
mov
sbb
or
fidivrs
inc
cmc
movsl
cmp
mov
imul
mov
push
icebp
sbb
sub
sub
fisubl
mov
dec
outsl
ss
movsb
fildll
cli
popf
push
sets
cmp
mov
push
inc
xor
push
loope
mov
mov
and
es
scas
call
xchg
mov
xor
mov
mov
les
push
movb
cmpsb
jo
mov
mov
jg
enter
inc
int
in
out
rcll
sbb
test
push
sub
aas
xchg
cmp
in
add
sarb
cmp
aam
mov
xchg
and
inc
repz
jns
lcall
dec
ljmp
adcl
xchg
jl
add
mov
loop
cmp
fisubs
and
repnz
xchg
or
mov
mov
imul
test
sbb
adc
ret
sbb
push
pop
insl
pop
mov
sar
xor
push
iret
pop
sub
mov
cmp
and
cld
test
lds
cmpb
xchg
push
lcall
sbb
aad
iret
xor
push
fmull
shlb
inc
iret
clc
clc
daa
imul
shll
int3
push
pop
jne
dec
imul
and
fstpt
lds
fcomp
nop
lret
jg
fdivrs
add
inc
leave
push
mov
ljmp
jecxz
push
dec
fsubs
int
sbb
std
scas
cmp
mov
fistpll
jb
gs
dec
ficoml
push
xchg
sbb
lret
xor
scas
out
mul
add
mov
pusha
leave
jo
js
dec
mov
sbbb
jo
je
adc
lock
add
dec
sahf
mov
sti
cld
dec
pusha
int3
stos
lods
loop
testb
jmp
sarb
stos
ss
lahf
rcll
jbe
add
sbb
mov
mov
incl
or
enter
or
out
lds
arpl
hlt
movsl
mov
pop
imul
popa
mov
mov
insl
iret
push
jle
mov
divl
fcmovnb
imul
sub
jge
jo
stc
out
into
mov
or
es
xor
decb
or
cli
push
xlat
das
and
loop
xlat
dec
push
shlb
xchg
imulb
xlat
push
push
mov
int3
repnz
dec
mov
mov
push
lods
outsl
out
jb
jp
jns
mov
iret
out
xchg
pop
in
bound
push
pop
sub
push
clc
push
dec
ja
jle
add
ret
and
out
push
icebp
rclb
popa
pop
fidivl
xor
add
ds
rcrl
mov
inc
sub
adc
pop
mov
cmp
in
jle
mov
std
adc
push
lret
in
xchg
cmpsl
enter
outsb
shl
hlt
inc
shrl
nop
mov
cmp
mov
pop
or
sti
push
stos
orb
loopne
push
in
pop
push
pushf
sub
mov
or
xlat
lret
adc
scas
les
and
xor
mov
xlat
aaa
dec
lods
mov
ds
xor
aam
ret
mov
pop
movsl
aam
cmp
xchg
jb
xor
sbb
outsb
popa
jno
mov
dec
and
stos
shl
xor
fwait
push
cwtl
jb
add
xor
xchg
sub
adc
adc
lock
jae
lahf
fs
scas
cmp
lcall
ret
sbb
test
add
mov
sub
cmpsl
arpl
cmp
in
mov
arpl
jbe
dec
nop
add
in
sub
pop
pusha
pushf
in
lock
push
nop
or
fidivs
or
scas
and
aam
movsl
sub
insl
mov
daa
frstor
cmpsb
cld
xchg
pop
test
es
in
ret
inc
sti
clc
push
or
jae
push
pop
call
clc
dec
push
fnsave
mov
pop
test
mov
aad
sar
aaa
add
pop
cltd
icebp
and
stos
jecxz
xor
ja
xchg
mov
mov
mov
inc
loop
andl
gs
insl
testb
xor
mov
fistl
push
sub
pop
into
jae
or
pop
mov
or
fcoml
fcompl
out
xor
adc
jnp
fcoms
ja
xor
adc
imul
pusha
pop
sbb
xchg
push
sets
xor
or
sahf
sub
mov
nop
or
xchg
adc
int3
inc
scas
inc
testb
mov
adc
push
lcall
imul
mov
fwait
and
lret
das
sub
enter
and
or
je
cmpsl
jle
imul
xchg
gs
js
aaa
or
fwait
lahf
inc
adc
hlt
aas
cltd
and
xor
jecxz
xchg
adc
repnz
jns
outsl
inc
enter
jle
int3
cmp
jns
and
ret
cs
jnp
lea
sbb
xchg
cmpsb
xor
in
movsb
xchg
xor
push
leave
pop
sbb
insl
sahf
sub
mov
je
pusha
ljmp
aas
push
cltd
xchg
pop
or
in
mov
js
icebp
nop
arpl
or
hlt
int
push
in
jb
ds
mov
jo
std
xchg
shrb
add
mov
sahf
jle
cld
test
push
mov
inc
fwait
sbb
arpl
int
stc
sbb
pop
ljmp
mov
mov
leave
pop
xchg
mov
push
daa
lds
movsb
out
cmp
cmpsl
cmc
cmpsl
cmpsl
sub
cmp
js
cltd
rclb
addr16
add
and
cmp
repnz
sbb
arpl
data16
add
pop
scas
rolb
nop
or
stos
adc
pusha
sti
jno
shlb
stos
xor
gs
jo
pop
into
fs
ret
adc
dec
push
in
mov
xchg
or
addr16
sbbb
adc
aas
mov
pusha
fadds
mov
dec
cmc
jecxz
orl
mov
pop
xor
xchg
icebp
or
pop
jne
dec
cmp
addr16
pop
add
and
lret
das
in
ljmp
xchg
dec
xor
dec
jmp
fs
pop
cmpb
jns
and
lcall
out
mov
dec
leave
mov
mov
pop
xor
shlb
lret
add
inc
icebp
daa
pushf
in
xchg
int
adc
cltd
movups
ja
mov
test
in
nop
jo
and
jbe
mov
inc
inc
xchg
test
push
arpl
aam
xchg
das
sbb
pushw
negl
dec
aam
out
sti
je
dec
fiadds
push
adc
ficoms
add
pusha
out
push
jl
jecxz
int
dec
cmp
mov
aad
aas
fnstcw
adc
or
js
jmp
addr16
ds
stc
jmp
push
iret
adc
int3
into
jp
dec
pop
aad
mov
xchg
jo
in
cmp
imul
fisubl
xor
adc
xchg
add
scas
cmp
push
movb
lods
sub
xchg
cli
and
jecxz
push
mov
adc
int
xchg
iret
arpl
xchg
xchg
sub
dec
int3
aam
mov
xor
rcll
insl
test
cmpsl
int
xlat
dec
repz
fbld
sbb
or
jl
adc
loope
mov
pop
movsl
lcall
adc
popf
loop
sub
pushfw
mov
push
negb
xchg
test
test
jb,pt
cwtl
or
stos
pop
pop
or
xchg
inc
cld
push
push
leave
xor
daa
jg
aam
lods
rorb
ret
rcrb
test
push
iret
insb
ljmp
lods
jl
push
shll
fidivrs
enter
insb
sub
inc
adc
imul
cmp
add
inc
push
ror
test
push
pop
adc
pop
sahf
imul
xchg
xchg
call
xor
jne
add
pop
jge
xor
adcl
leave
idiv
lea
xchg
mov
aad
jnp
repz
addr16
shl
xor
test
daa
pushf
sahf
cmpl
pop
lahf
cmc
xchg
dec
adc
aas
repz
or
repz
icebp
aaa
imul
inc
xor
int3
out
and
mov
test
adc
pop
popa
adc
mov
test
xchg
push
in
out
test
lods
push
inc
daa
cmp
pop
not
add
mov
rcl
ljmp
daa
nop
mov
dec
sbb
inc
call
les
sub
or
mov
pop
adc
add
fcoms
push
xorl
imul
pop
cmpsb
psubsw
test
cwtl
and
mov
dec
rcrb
outsb
sub
test
mov
jbe
mov
pop
mov
lds
xchg
test
cwtl
sti
mov
fcmovnu
jle
stos
and
aas
xchg
sub
cmp
xchg
inc
idivl
jae
fists
out
xor
clc
shlb
mov
in
and
sub
xchg
cli
mov
sbb
je
pop
pushw
insb
ja
mov
xor
xchg
dec
mov
xchg
pop
test
int3
push
jecxz
jb
sub
ret
push
popf
shlb
add
xchg
std
pusha
mov
test
mov
xchg
popf
xchg
dec
xor
call
hlt
push
cli
xchg
inc
inc
push
xchg
icebp
int3
fcmovnb
pop
lret
dec
fisttpl
push
push
icebp
dec
push
jecxz
jp
mov
mov
pop
adc
orl
jl
inc
lret
push
xor
lea
cltd
and
adc
jae
cmpb
cwtl
out
sub
test
cmp
leave
push
fwait
xor
fisttpll
xchg
arpl
mov
push
aaa
fildll
push
sub
dec
test
cmp
mov
mov
sbb
repnz
jle
dec
push
mov
and
in
mov
adc
iret
mov
dec
je
xchg
dec
and
inc
jbe
pop
arpl
fimuls
mov
dec
push
jmp
movsb
xor
mulb
or
ret
push
pop
pusha
lds
cmpsb
imul
lcall
sbb
add
mov
jle
call
into
enter
cs
mov
mov
dec
fistps
out
pushf
cs
ss
sbb
out
mov
mov
mov
or
loopne
sar
ret
hlt
arpl
cmpl
mov
push
mov
dec
lea
daa
push
add
mov
sub
mov
pop
fldenv
pop
push
mov
or
xor
jge
jne
mov
xchg
and
loop
ret
push
and
icebp
push
lea
in
idiv
xchg
dec
in
addl
push
or
imul
xor
and
mov
xchg
loop
inc
or
xchg
xchg
jbe
adc
jno
xchg
lcall
sbb
mov
adc
xchg
stc
push
out
cmp
rolb
inc
and
leave
shl
sub
cmpsl
sub
aas
pushf
fstl
mov
scas
cli
dec
mov
adc
les
movsb
push
icebp
mov
mov
or
xor
into
mov
cwtl
xchg
xor
iret
lods
xchg
icebp
jp
push
push
test
xchg
mov
gs
pop
gs
mov
inc
les
test
mov
aaa
leave
imul
pusha
sub
mov
cmpb
test
xor
adc
jle
clc
mov
std
paddq
movsb
stos
scas
adc
das
lahf
add
fldl
or
or
in
mov
insb
mov
cmpsb
push
arpl
std
xchg
add
cltd
or
push
fistps
xchg
xor
dec
xor
xor
push
xchg
adc
jle
pslld
sbb
pop
pop
jg
addr16
and
sub
outsl
mov
out
cmp
pop
popa
cmp
pop
pop
stos
imul
fldl
fnstcw
xor
rolb
je
mov
jae
dec
rcll
add
adc
add
mov
xor
in
pop
pop
cmpsb
add
fndisi(8087
mov
pop
inc
dec
movsl
jecxz
jp
jns
lcall
xor
lods
movaps
xchg
ja
test
lret
jge
add
mov
pop
jp
jne
movb
movsb
js
xorb
andl
cmp
fimuls
pop
in
rcr
pop
cmp
je
aas
or
xor
sbb
or
mov
push
pop
push
inc
out
sub
push
push
mov
ljmp
adc
add
push
popf
out
cli
pop
sbb
stc
leave
inc
addl
cmp
das
mov
mov
add
imul
jno
jecxz
je
mov
xchg
negb
adc
push
push
fdivp
fstps
push
xchg
dec
xchg
fnstcw
je
jbe
xchg
lea
and
fnstsw
cmp
inc
mov
push
mov
jbe
lea
lcall
jge
enter
loope
push
test
mov
inc
jo
add
cmp
inc
xchg
xlat
push
daa
fisttpl
icebp
pop
mov
jl
sub
push
arpl
insl
imulb
xchg
cmp
out
adc
lret
push
and
pop
cmp
cmp
and
and
das
sti
sar
stos
and
addr16
loope
hlt
cmp
stc
push
mov
push
daa
inc
push
xchg
inc
mov
arpl
or
arpl
xchg
out
out
sti
jmp
jbe
cmp
jo
ret
hlt
pusha
test
mov
rcrb
jne
into
int3
mov
call
adc
cmp
jae
jb
or
and
stos
mov
and
jnp
push
lret
repnz
les
push
add
nop
pop
push
sbb
in
or
dec
imul
sub
pop
lds
ljmp
xor
sub
mov
popa
movsl
test
fisubs
rolb
pop
ret
cld
xchg
shlb
in
clc
aam
cmp
imul
pop
and
pop
cmp
xchg
lock
aas
enter
inc
mov
out
ja
xchg
mov
scas
inc
cli
dec
cltd
pop
sbb
dec
scas
xor
cwtl
mov
test
and
mov
cs
rcrl
fdivrp
adc
test
clc
inc
cmp
roll
or
push
and
mov
mov
sbb
or
stc
cld
lea
dec
pop
adc
or
je
rcr
enter
leave
xchg
popf
mov
xchg
mov
enter
je
scas
sub
bound
les
or
in
pop
repz
cmp
pop
scas
adc
cmc
or
mov
mov
xchg
shlb
inc
leave
fs
add
mov
mov
adc
inc
dec
mov
dec
mov
add
adc
push
fildll
je
ret
pop
push
or
mov
dec
push
lahf
push
jle
mov
jmp
pop
mov
inc
push
insb
ja
lods
std
jnp
insl
mov
xchg
adc
and
pop
inc
fwait
fs
dec
shll
add
push
push
push
push
mov
fstps
lods
or
scas
in
stos
jns
pushl
into
sahf
dec
cltd
ror
adc
imul
mov
xchg
inc
sub
mov
fstps
sub
out
leave
adc
jmp
test
push
add
movsb
outsb
sub
adc
jno
mov
imul
pop
test
or
dec
shlb
ja
cmp
push
popf
add
mov
outsl
sbb
into
mov
jmp
fldl
jae
dec
or
stos
or
sbbb
xchg
push
and
stc
gs
jb
stos
cmpl
mov
xor
adc
scas
stc
orl
mov
mov
xchg
mov
insb
loope
gs
sbb
pop
mov
lahf
push
fimull
sub
inc
fistpll
pop
rcrb
push
cltd
add
out
dec
movsl
out
icebp
lahf
push
es
arpl
xlat
cmp
cmp
dec
int3
sub
leave
push
int
mov
movsb
ficoml
imul
das
mov
xor
cmc
pop
mov
dec
push
and
roll
loop
cmc
mov
sbb
or
js
insl
jno
stc
js
je
insb
sahf
bswap
mov
insl
rcrl
je
scas
sub
jge
cwtl
lret
pop
mov
pop
inc
enter
arpl
shlb
loope
ret
inc
daa
rcrb
adc
jp
movsb
fistpl
mov
hlt
cmpsl
xor
lcall
jge
mov
pusha
je
fs
lock
scas
test
roll
ret
pushl
fs
fcomps
bnd
pop
pop
jp
mov
jae
jp
out
js
or
jbe
jp
mov
xor
add
pop
mov
sbb
xor
test
fisubrl
addl
mov
leave
fwait
pop
std
add
aad
imul
cmpb
and
or
dec
repnz
xchg
dec
jmp
sub
cmpsb
jmp
lods
hlt
je
sarl
sbb
cmpsb
in
movsl
rorb
movsl
inc
fs
sbb
andl
test
dec
jge
and
and
jmp
mov
enter
mov
outsl
es
add
jb
fstl
sub
adcl
jle
addl
rcrb
fwait
inc
mov
jns
cmc
xchg
cmpsb
mov
cmp
jnp
xchg
gs
add
dec
out
es
cmp
and
ljmp
mov
rcl
call
mov
clc
mov
mov
and
or
xor
push
mov
inc
and
ret
add
and
int
jno
add
sub
inc
jbe
sub
sub
jae
sarb
ljmp
lods
mov
in
popw
or
jb
outsb
js
push
xchg
negb
adc
fdivrp
mov
ss
sbb
add
call
jecxz
and
cwtl
addr16
nop
ret
aaa
js
sub
lock
mov
or
or
dec
loope
ret
scas
push
nop
mov
jne
cmovns
sub
push
mov
lods
inc
shrb
or
sub
and
xor
or
push
fdivrl
jae
sub
push
loop
fcoml
outsl
das
jbe
mov
push
sbb
outsb
les
popa
adc
xor
mov
aad
mov
stos
andb
ss
mov
xchg
loop
xlat
cmp
aas
push
fdivrl
sti
xchg
fstpt
sub
bound
cs
in
scas
sub
cli
test
jge
xorl
ret
test
ret
nop
test
add
lds
jnp
mov
or
jo
mov
or
mov
fwait
push
scas
iret
popl
push
push
inc
iret
pop
adc
mov
dec
call
pop
stc
inc
cmc
xor
add
mov
gs
enter
sub
lods
adc
lds
adc
shl
inc
out
in
divb
std
jge
cmp
push
or
fdiv
jg
ret
push
jmp
push
mov
insl
divb
mov
fwait
cmp
pop
sub
mov
lds
data16
mov
inc
sti
je
addr16
pop
xor
divl
loop
inc
pop
lret
xchg
sub
das
test
rcrl
daa
xchg
dec
jecxz
adc
ljmp
xchg
push
push
sbb
stos
jns
sub
xor
sbb
in
test
ret
sahf
pop
mov
mov
xchg
repz
mov
mov
sub
push
jp
push
mov
clc
stc
jns
cs
icebp
and
xor
mov
scas
shl
int3
pushf
mov
adc
xor
xor
or
in
std
in
ds
in
sahf
mov
push
loope
push
jns
lcall
in
repnz
je
cmp
add
jle
nop
loopne
pop
cmp
test
inc
in
pop
jecxz
out
cmpl
or
fisttpll
push
dec
movsb
fcmovnu
jno
iret
jne
in
sub
bound
push
pushf
adc
jecxz,pt
das
xchg
mov
mov
cmp
ja
sbb
sub
mov
cmp
pop
jle
jne
roll
fisubs
mov
jl
or
xchg
aam
push
sub
frstor
stc
orl
and
jo
dec
adc
lods
sub
orb
inc
shrl
aad
call
jmp
inc
adc
in
and
mov
fisubs
mov
lea
xchg
sub
inc
lret
xor
in
jbe
arpl
nop
stos
test
das
lods
test
test
cs
sub
fidivrl
xchg
jbe
mov
cmp
jb
jae
rcrl
push
shlb
jnp
js
sub
test
gs
mov
or
or
xlat
mov
je
dec
xacquire
shlb
inc
shrb
add
or
in
into
std
push
adc
or
fdivl
out
jns
decb
adc
movsl
cs
adc
insb
aaa
mov
sub
ret
xchg
test
push
addr16
cmp
and
xlat
inc
pop
fdivs
mov
fs
js
mov
cwtl
push
mov
dec
popa
fwait
cmp
pushf
push
dec
stc
pop
sbb
xlat
push
push
popa
mov
cmc
cmp
pop
lods
sbb
sbb
push
fisubrs
mov
dec
rcrb
outsb
cmpsb
xor
icebp
iret
jg
iret
pop
and
inc
cmp
sbb
lods
mov
data16
dec
push
sbb
inc
adc
jnp
jge
xor
fsubr
pop
xor
in
mov
dec
notb
cmc
aam
pop
pop
xor
arpl
cltd
and
push
fisubrs
sbb
stos
outsl
out
rcl
into
mov
ds
push
pop
push
jae
push
fsubl
jns
or
pop
test
addl
pop
mov
pop
in
leave
inc
adc
fwait
cmp
aam
stos
scas
cmp
push
pop
and
jnp
shll
stos
clc
push
rcrl
pop
pop
add
loopne
and
mov
rcrb
jmp
pop
fldenv
adc
pop
inc
cmp
dec
cltd
movsb
out
jno
lret
fs
jbe
mov
push
mov
cmp
pop
call
in
or
aad
cwtl
jmp
xchg
sbbb
ljmp
sub
cmpl
pop
inc
xchg
jae
mov
adc
xchg
aaa
jge
into
test
sbb
xor
xor
pop
inc
loopne
movsb
push
rcl
fidivrs
icebp
mov
sub
int3
push
pusha
fsubrs
scas
mov
push
cmpsl
bound
clc
bound
out
xchg
mov
pushf
bound
inc
xchg
movsl
dec
aam
nop
and
push
test
inc
sbb
push
fists
ret
mov
mov
test
mov
dec
xor
xor
into
jg
cmp
mov
sbb
jo
and
jge
or
imul
xchg
sbb
call
or
xchg
pop
mov
push
push
cltd
in
daa
mov
jle
xchg
in
xchg
fcomps
pushf
test
bound
shrb
movsl
dec
or
xor
xlat
mov
hlt
add
jno
pop
fdivs
fimuls
push
mov
repz
mov
fwait
push
stos
call
adc
mov
dec
inc
rcrb
in
mov
stos
adc
mov
or
icebp
push
xor
int
xor
jae
adc
cmpsb
push
cmpsl
bound
sbb
imul
push
mov
fistpl
pop
jnp
rcrl
jmp
notb
jmp
pop
jl
cmp
add
add
cmpsb
stos
and
or
fwait
loop
mov
arpl
xchg
enterw
sahf
push
push
cs
jecxz
in
hlt
aad
fldcw
int3
shlb
dec
fcmovne
xor
rol
in
xchg
cmc
icebp
sbb
into
sahf
jo
mov
pop
stc
mov
and
dec
popf
pop
mov
sbb
jae
jbe
or
pop
sbb
inc
int3
cmp
shlb
dec
mov
cld
popf
fiaddl
ja
cmc
icebp
xchg
cmp
push
xchg
in
add
rorb
xchg
mov
jecxz
gs
lds
scas
mov
clc
pop
insl
ss
adc
leave
out
out
cmp
ljmp
cmp
cmp
gs
inc
subl
and
rcll
xor
cmp
sbb
inc
gs
dec
xchg
test
xchg
pop
call
xor
cmc
scas
xor
sub
gs
xchg
mov
fistl
cld
mov
pop
jg
imul
das
arpl
lret
jmp
daa
rol
inc
xchg
cmp
imul
pop
cld
insl
pop
jle
adc
out
mov
fs
movsl
and
addr16
and
leave
fisubl
sub
iret
jg
xor
outsb
clc
adcl
mov
ror
ret
and
fwait
pop
sbb
dec
fisttpl
cwtl
xchg
lret
rcr
imul
lcall
adc
fsubl
sub
fs
jo
inc
xchg
out
push
jp
mov
cmp
sbb
add
sub
mov
and
add
and
mov
pop
movsl
cmp
sub
xorl
jno
xchg
mov
lods
dec
or
mov
mov
cli
jecxz
or
cld
jnp
add
mov
into
sahf
sti
mov
xorl
pushl
js
pop
push
test
sub
or
pop
xor
subl
pop
cmp
jns
sahf
push
mov
aaa
xchg
test
popa
mov
fsin
push
mov
and
pop
cmc
std
xor
test
push
das
out
insl
pop
adc
scas
adc
aad
mov
jo
pop
out
dec
sti
sub
jl
addl
mov
lods
sub
adc
xchg
and
lods
enter
cmp
and
and
clc
sti
xchg
cmp
clc
mov
lea
mov
xor
add
mov
iret
xorl
negl
pop
xchg
rcl
cs
aaa
fsubl
int
test
fiadds
dec
add
out
out
ja
cmp
push
xchg
les
pop
out
sti
fsub
xchg
sub
or
js
fisubl
xchg
orb
cmc
es
in
dec
loop
imul
pop
out
lcall
dec
dec
jns
mov
outsb
or
jle
cmpsb
push
cmc
popf
rorb
shrl
mov
sub
inc
popa
lock
cmc
negl
push
and
mov
xchg
adc
rcrb
in
es
mov
addr16
jg
adc
mov
repz
jmp
cmp
scas
push
jle
data16
sbbb
and
add
mov
xchg
and
inc
lock
sti
mov
lods
pushf
lds
ja
xor
lea
inc
cli
je
push
xchg
rcl
add
ret
add
add
inc
cmpl
or
pop
arpl
adc
fnsave
bound
jb
mov
inc
fildll
out
sub
and
enter
add
test
daa
fistps
fsub
int
inc
pop
repz
pop
sub
ds
xchg
xor
push
lcall
inc
sbbb
pusha
xchg
lcall
xor
mov
pop
test
dec
adc
adc
inc
inc
sti
sbb
addr16
jp
imul
push
out
arpl
out
push
dec
mov
lods
adc
sbb
push
inc
in
in
mov
sahf
iret
or
xchg
push
sarb
inc
test
ds
inc
imul
jge
jbe
out
push
fldt
in
mov
jge
fidivs
adc
mov
fists
ret
cmpsl
in
inc
bound
jmp
pop
or
mov
aas
sahf
jmp
mov
cmp
mov
pop
sbb
inc
and
sbb
mov
jbe
cwtl
movl
xorb
sahf
mov
outsb
inc
mov
jg
cltd
stc
lock
hlt
xchg
jo
fcompl
or
jp
xor
dec
xlat
jmp
outsl
flds
ss
jle
pop
out
mov
adc
in
push
mov
or
inc
mov
cmpxchg
cmp
pop
mov
les
pushf
push
stc
scas
adc
sahf
sbb
sbb
lea
cmp
dec
xchg
adc
hlt
clc
and
mov
fistps
pop
jg
nop
xchg
mov
std
sbb
sahf
mov
cmp
mov
iret
adc
mov
insb
ljmp
adc
hlt
jl
mov
popf
stos
xchg
mov
push
cltd
adc
xchg
aaa
fsubr
jg
add
cmp
cmpsb
aaa
push
dec
or
fwait
pop
ljmp
imul
pusha
fisubrs
mov
xor
xchg
fcoms
mov
mov
xor
sar
jb
lods
push
mov
xbegin
add
cmp
cmp
xchg
xchg
out
xchg
lods
ss
inc
push
or
push
fisubl
jbe
mov
sbb
mov
ret
dec
out
sbb
int
data16
jl
cli
stos
sub
xor
popf
add
decb
mov
ds
sbb
nop
bound
jle
fimuls
data16
cs
mov
shll
add
mov
popf
ja
or
test
dec
icebp
sub
outsl
mov
push
or
push
xchg
fidivrl
jns
rorl
mov
rcr
fstl
addr16
ja
fdiv
pop
push
sub
or
cmc
mul
adc
popf
orb
adc
xchg
xchg
je
xchg
add
jno
imul
add
push
or
jle
push
mov
sbb
aas
leave
aam
fs
sahf
xor
xchg
dec
xlat
pusha
ljmp
inc
adc
mov
outsl
out
loop
add
pop
mov
nop
cmp
std
mov
hlt
repnz
icebp
es
inc
fs
mov
pop
adc
mov
add
sti
loope
cmp
inc
xor
jno
push
cmpsl
fimull
loopne
fsts
xchg
cmpsb
enter
adc
cmp
or
xchg
pop
and
hlt
xor
push
jne
std
les
cmc
dec
repnz
push
jae
and
imul
lcall
inc
cmp
mov
call
aam
roll
sub
pusha
pushf
sub
insl
testb
add
mov
mov
fmul
mov
out
xchg
pop
or
cli
sub
xchg
dec
shr
xor
daa
js
fcmovnu
subl
out
bnd
push
loop
mov
xchg
outsb
js
mov
cmp
lret
pop
aaa
cmp
jl
xor
mov
mov
jnp
xor
add
imul
and
loopne
cmp
sbb
inc
scas
andb
cmovl
sbb
inc
int3
fsubrl
adc
daa
dec
cwtl
test
in
mov
add
lods
mov
leave
push
add
jb
loop
cmp
sub
jl
or
sub
xchg
push
lds
mov
xchg
pop
nop
mov
imul
push
mov
mov
test
dec
xchg
bound
mov
push
pop
xchg
sub
mov
or
mov
mov
jecxz
mov
mov
cld
pusha
insl
jae
sub
lock
xor
sbb
test
dec
pop
or
cmp
push
jmp
ret
aam
mov
js
push
push
push
lret
xor
pop
xor
push
lret
inc
push
ss
outsl
stc
jp
mov
jnp
dec
aad
add
test
addr16
in
into
adc
dec
cmp
add
mov
sub
inc
int3
dec
add
cmp
ljmp
gs
js
arpl
push
pop
mov
ljmp
mov
dec
leave
inc
std
dec
cmp
stos
xor
mov
push
shrl
inc
imul
pop
mov
insb
nop
std
lcall
xchg
sub
push
cwtl
rolb
sbb
adc
xchg
shlb
xor
xchg
fstp
jp,pn
dec
xchg
out
movsb
test
mov
xlat
inc
dec
add
jecxz
jge
add
sub
xchg
and
sahf
mov
jae
icebp
jg
bnd
rcrb
enter
scas
or
std
jl
loopne
add
jae
rcll
mov
rorb
daa
dec
mov
lods
adc
sahf
mov
add
xor
and
mov
xchg
dec
pop
mov
cmc
std
ja
jb
out
aas
sub
pushf
sahf
jnp
repz
mov
jp
inc
sbb
dec
fsubl
hlt
jb
mov
mov
ficoms
sbb
lods
outsw
icebp
dec
add
xor
pop
sbb
xchg
sbb
int
lahf
aas
cmpl
pop
movsl
fildll
in
sbb
sub
int3
das
aaa
fimuls
cld
dec
dec
aas
or
xor
pusha
lcall
test
out
jns
loopne
sbb
dec
loopne
nop
dec
cmp
xchg
fdivl
mov
sub
xor
mov
mov
jae
out
mulb
push
jno
outsb
shlb
or
in
daa
sbb
adc
or
int
fsubrl
fimuls
inc
jns
push
icebp
repnz
insb
jb
adc
pop
loop
sbb
adc
aad
mull
lret
push
jmp
pop
mov
adcb
in
jbe
mov
cmp
test
sahf
je
cmp
lcall
pop
push
cmpsl
xor
je
nop
cmp
popf
pop
cmp
in
test
mov
sar
cmp
leave
lahf
mov
insl
and
lret
mov
sub
cmp
dec
mov
and
pop
xchg
fsincos
hlt
lret
push
pop
push
insb
mov
hlt
jns
leave
push
push
pop
jne
xor
test
mov
adc
lahf
adc
aad
dec
mov
dec
push
dec
add
lds
inc
das
mov
imul
lahf
lods
mov
rcrb
aad
adc
cmpb
push
inc
jecxz
inc
std
xchg
repnz
xor
test
stc
addb
inc
jl
shll
sbb
cmp
cmpsb
inc
jmp
sbb
push
insl
data16
cmp
push
lods
in
mov
xor
pusha
cs
and
push
push
test
adc
in
out
repnz
adc
sti
xor
mov
pop
es
ret
lret
jb
jl
testl
addr16
push
fcoml
imul
popa
es
adc
hlt
push
cmpsl
dec
inc
imul
or
mov
add
les
aas
pop
xor
test
or
sub
fists
inc
inc
pop
filds
fdivrs
jle
in
insb
dec
gs
jl
cmp
daa
incb
ds
std
and
andl
call
push
ljmp
subl
mov
and
or
ss
push
inc
push
mov
mov
cmpb
cmp
sub
cmp
inc
inc
adcb
stc
jg
mov
xorl
or
add
push
fbld
mov
xor
lods
xchg
ja
or
dec
out
js
inc
int
mov
shl
neg
jmp
test
orb
push
rcrb
inc
mov
cwtl
jne
pop
jb
add
xor
shll
xchg
mov
dec
push
adc
push
xlat
call
adc
mov
rcl
andb
sub
lea
mov
fsubs
adc
clc
outsl
mov
dec
aam
ret
fxch
cmp
scas
repz
movsb
sbb
testb
ficoml
or
cld
add
mov
xor
add
cmp
pop
cmp
xor
inc
mov
adc
shlb
xor
cmc
jbe
rcll
pop
cli
js
lret
push
fimuls
mov
stc
divb
rol
cmp
or
mov
lods
add
mov
test
loope
es
adc
loop
insb
adc
out
pop
push
lahf
pop
push
lahf
add
push
loopne
pop
orb
mov
shl
fcoms
push
dec
pop
in
xchg
sbbl
sar
pushf
mov
aaa
dec
add
add
out
mov
mov
lret
and
insl
mov
xchg
pop
sbb
pop
nop
mov
xchg
in
popa
rcll
push
xchg
idivb
bnd
push
dec
jne
or
jo
fnsave
addr16
movsb
dec
xchg
js
adc
pop
fwait
mov
data16
sub
mov
sub
inc
subl
sbb
adc
fwait
pushf
push
pop
mov
es
pop
cmp
pop
xchg
test
movsl
nop
sbb
jbe
aam
mov
xchg
adc
test
adc
mov
push
dec
aas
fistpl
xchg
xlat
inc
out
cld
mov
fldenv
stos
xor
pop
ljmp
rcr
adc
movsl
dec
sub
js
scas
xor
cmc
pop
iret
cmp
loope
cmpsb
xchg
push
rcrb
in
add
insb
ficomps
cmp
push
sbb
jnp
pusha
sub
xchg
jne
js
adc
sti
repz
mov
fists
cmpsb
xchg
movb
sub
jne
push
les
jb
and
sub
mulb
xlat
or
dec
aam
xor
fstl
jmp
push
adc
dec
inc
sub
mov
shll
mov
ds
mov
inc
loop
inc
pop
das
sub
jle
adcb
and
mov
fs
je
jbe
fsts
inc
mov
loope
popf
or
fisttpll
mov
stc
imul
sar
pop
push
dec
je
mov
std
inc
inc
das
lahf
shll
jae
in
aaa
fildl
mov
cmp
in
pop
fsts
lock
add
dec
leave
loop
outsl
mov
xchg
xchg
aas
mov
pop
mov
rorl
out
inc
arpl
dec
mov
test
fadds
mov
cli
mov
mov
jg
mov
int3
dec
jg
dec
jg
out
movsl
dec
pop
mov
push
pop
pop
mov
pop
push
stos
sub
sub
ficompl
filds
jg
push
movsb
sbb
sbb
xchg
leave
adc
sti
dec
inc
mov
xchg
fsub
fbld
shl
lret
leave
sub
sub
mov
lret
loop
orb
mov
arpl
adc
xchg
push
int3
cmpsb
mov
mov
and
adcb
xchg
popf
pop
icebp
sti
jl
lods
stos
sub
or
push
pop
stos
ss
mov
fnstenv
loope
adc
push
test
stos
cmp
xchg
shll
adc
push
xchg
pop
pop
addb
pop
and
sub
inc
ss
lret
add
divb
mov
loopne
xchg
sbb
cmpsl
test
cltd
inc
int3
icebp
jnp
mov
push
stos
in
push
cmp
jns
jp
add
addr16
bound
stos
scas
or
data16
and
jl
out
jns
cmp
scas
adc
inc
mov
fsubp
gs
js
push
test
ficoml
xor
testb
xchg
mov
jo
stos
add
cmp
xchg
test
mov
mov
lock
insb
andl
mov
dec
dec
sub
add
mov
xor
int
xor
data16
cmp
cltd
mov
fistps
jnp
sbb
push
pop
js
xchg
outsl
push
fnstsw
lcall
mov
jle
push
hlt
fxch
mov
or
pop
push
daa
dec
adc
ljmp
subl
int3
into
loopne
sub
mov
push
push
mov
lock
cwtl
fmulp
orl
or
je
xlat
not
xchg
or
addr16
jecxz
notb
inc
jmp
xlat
enter
xorb
mov
pop
or
and
dec
xchg
or
xor
insl
pop
jnp
cmc
gs
flds
inc
movsl
xchg
in
pop
daa
je
dec
jne
roll
mov
mov
aaa
movb
mov
mov
pusha
lods
mov
iret
pop
jne
gs
adc
xor
dec
push
fdivrp
mov
jp
divb
and
mov
push
push
imul
stc
aas
jmp
call
cmp
and
dec
ja
add
or
adc
xchg
mov
in
out
daa
pop
icebp
fwait
scas
ds
adc
in
sarl
pushf
push
scas
cmp
loop
fildll
lds
cmpsb
adc
out
js
fisubs
cmp
sbb
cmp
dec
pop
dec
mov
aam
test
and
mov
outsb
jl
shrl
shrl
pop
jecxz
mov
hlt
and
test
mov
xchg
cltd
sub
dec
push
in
add
in
push
cmpsb
clc
dec
jl
ds
insb
adc
push
shll
and
sbb
shr
adc
jae
sbb
lods
dec
cmp
addr16
inc
in
call
add
mov
out
mov
and
sbb
xor
sbb
leave
test
pushf
fnstenv
test
dec
out
insb
cmp
xrelease
cmpsl
mov
sbb
test
xchg
iret
loopne
sub
lcall
mov
js
push
hlt
xor
iret
cmp
xchg
nop
cmp
dec
sar
ja
out
or
scas
mov
imul
fbld
and
jno
pusha
push
lcall
aam
leave
inc
adc
lds
fidivrl
jae
ja
insl
ljmp
nop
adc
xor
mov
in
cs
fnsave
lret
fwait
jle
js
push
aam
stos
jae
cmp
mov
mov
notl
cli
sarb
inc
pop
cwtl
pop
dec
xor
aas
fwait
hlt
xchg
andl
mov
dec
dec
in
jmp
rorl
pop
and
jp
aas
ror
mov
jge
shlb
aas
enter
sub
shrb
dec
std
mov
lods
scas
jnp
xchg
loopne
fucomip
int3
add
inc
adc
push
add
xlat
cmp
push
das
sub
pushf
mov
pop
xor
cwtl
and
add
sbb
fs
test
and
loopne
insb
sub
mov
leave
push
aam
fildll
lret
pop
test
jg
jmp
testb
lret
in
sub
xlat
mov
mov
in
push
std
sub
insl
pop
push
jl
jbe
das
jmp
imul
mov
jecxz
pop
js
dec
shlb
mov
mov
mov
lret
rorb
ds
or
sub
mov
je
scas
and
and
ja
mov
cmc
aaa
dec
and
arpl
xchg
and
push
and
repz
aas
jmp
dec
out
insb
scas
pop
sbb
mov
push
mov
jmp
repnz
in
push
cmc
and
int
data16
popf
ficoms
es
mov
test
gs
movl
inc
lret
mov
jns
jl
push
inc
pop
mov
test
sub
push
cmp
push
gs
sub
outsb
jae
popf
cmp
shr
adc
notb
jle
xor
lret
imul
mov
pop
das
out
in
jecxz
xchg
movsl
push
dec
mov
xor
outsb
pop
scas
loopne
std
aam
or
dec
and
outsb
sbb
loopne
mov
xchg
mov
cmp
test
sbb
sub
je
movsb
push
orl
shr
repz
push
rol
dec
lds
dec
push
xchg
sbb
daa
shl
push
daa
stc
xor
test
ljmp
fstsw
inc
jae
in
in
sahf
xchg
stc
cmp
jns
sbb
dec
fsubl
aas
jmp
or
xchg
lahf
pop
jecxz
cmpsl
push
dec
dec
pop
out
cmp
xlat
nop
add
push
pop
rcrl
mov
and
and
mov
icebp
mov
rorb
fdivrl
fiaddl
cmp
int3
bound
cmp
daa
lds
rcll
cs
mov
stos
xor
movsb
notb
addb
fwait
mov
leave
add
mov
std
mov
movsl
std
add
push
rcrl
movsl
cs
addr16
jp
test
add
shrl
outsb
or
jno
lea
rorb
cli
out
lods
insl
mov
pop
in
adc
out
dec
fucomp
std
in
cwtl
sub
repnz
xchg
sahf
jbe
decb
fwait
pop
push
jb
adc
push
xchg
pusha
enter
push
inc
jno
inc
ja
fst
pop
lea
arpl
dec
ds
call
outsl
fcom
fldt
mov
cmp
nop
cmpsl
xor
push
jmp
adc
and
fsubl
je
roll
mov
imul
ss
pop
mov
cltd
jle
xor
or
xlat
xchg
sbb
enter
xor
jmp
faddl
dec
lcall
std
ja
scas
push
icebp
movsl
test
popa
lret
sbb
xor
icebp
test
insl
and
mov
or
mov
data16
popa
test
push
mov
sti
imul
pop
or
mov
sub
add
push
sbb
clc
mov
icebp
push
cmpsb
dec
dec
adc
ljmp
neg
pop
test
cmpsb
ror
xchg
inc
mov
jbe
mov
jp
enter
ds
movsb
sbb
out
or
mov
cmp
xchg
aad
push
daa
sub
jl
pop
in
movsl
and
cmpb
js
adc
inc
mov
add
loopne
jl
cwtl
adc
lcall
mov
push
push
int3
sti
push
mov
sbb
inc
dec
jo
pop
loope
into
xor
mov
mov
jg
mov
dec
scas
sub
jno
loope
lock
shll
and
push
cmp
dec
xlat
pop
insb
xchg
or
pop
xchg
xchg
lock
out
mov
test
add
mov
and
mov
pop
in
mov
and
test
sub
testb
push
inc
inc
rclb
pushl
push
shl
stc
jb
decb
dec
mov
test
xchg
rolb
xor
xlat
lcall
jge
into
xchg
adc
add
loope
loop
lods
es
mov
stos
fs
jne
popa
mov
addl
stc
hlt
fsts
imulb
int
shlb
std
jae
je
pushf
negl
xor
cwtl
adc
ja
mov
dec
or
enter
inc
jae
insl
mov
fs
lcall
pop
cmpsb
push
testb
pop
xchg
imul
ja
test
or
add
std
dec
or
repnz
xor
cmp
mov
les
insl
loopne
mov
int3
push
cmp
in
leave
sbb
xor
ret
test
std
mov
inc
rcr
cs
add
bound
sarb
pop
pop
jmp
loop
jp
lea
adc
add
in
mov
dec
fucomip
jb
leave
push
nop
jae
out
xlat
dec
daa
sub
fcmovu
adc
add
cmp
add
in
dec
dec
ret
cmp
xchg
aam
push
outsl
or
jo
cmpsl
mov
fmull
sub
push
out
outsb
dec
mov
push
stos
jnp
nop
sub
sub
mov
sbb
adc
push
fucomp
cmp
sti
xchg
pop
les
mov
adc
xchg
xor
mov
iret
sbb
cmc
ret
cmp
jno
pop
or
cltd
jae
mov
insb
daa
pop
mov
les
jl
out
cmp
lea
pusha
leave
jo
cmpsb
lea
or
cli
jae
aas
push
adc
push
lods
dec
add
cmpsb
jnp
insl
test
lret
push
bound
scas
lods
pushf
mov
out
sbb
add
arpl
xor
sub
hlt
cmc
rcl
mov
movsb
and
jno
xor
push
mov
or
sahf
aaa
cmc
pop
and
shlb
out
in
dec
xor
ret
xchg
pop
sub
das
enter
mov
push
rcrb
outsb
adc
ficoms
fwait
dec
push
daa
roll
jl
test
fimull
mov
outsl
xlat
rorb
sbb
dec
mov
stc
pop
mov
push
jb
jne
mov
daa
inc
jmp
push
and
or
sbb
repnz
fcomps
ret
les
mov
imul
mov
pusha
mov
mov
push
push
inc
cmc
jle
inc
push
push
sub
lods
ds
arpl
das
cmc
cmc
add
adc
ljmp
cmp
adc
rcrb
add
test
xor
add
aam
repz
aaa
dec
pushf
sub
xchg
mov
imul
fistpl
push
out
ljmp
and
cmp
or
inc
sub
test
outsl
insb
sub
mov
js
test
outsb
pushf
test
cmp
cs
divb
dec
mov
es
pop
scas
iret
rolb
imul
inc
clc
scas
cmp
add
mov
mov
jo
pop
mov
dec
jo
mov
jle
cld
ljmp
repz
xchg
push
mov
or
or
pop
push
jns
mov
das
mov
arpl
icebp
mov
add
mov
enter
outsb
js
popl
js
cmc
fsubrp
mov
xor
push
addr16
add
mov
sbb
push
push
insl
sbb
sub
popf
pop
mov
pop
xor
mov
imul
sets
lahf
lods
jp
xchg
test
shl
push
and
jb
shll
sub
movl
jg
push
fcompl
pop
ret
adc
int3
out
mov
add
cs
mov
ret
repnz
test
lea
imul
jo
add
mov
call
hlt
pushf
outsl
into
add
mov
inc
aaa
mov
and
mov
and
or
aam
fdivrl
test
lea
fs
aam
jp
sbb
ja
lcall
or
addb
sub
pop
mov
or
and
out
pusha
outsl
sti
orb
stos
sarl
dec
sbb
aas
cwtl
and
rcll
jae
in
ret
shrb
xor
xlat
sarb
jb
call
jle
jno
sub
addr16
xchg
idiv
jmp
in
jbe
arpl
insb
mov
push
aas
inc
push
cmp
mov
out
vcmpss
inc
sub
fistps
inc
lds
cwtl
movsb
sub
mov
jecxz
fsubs
mov
mov
xor
lcall
popf
sub
lea
mov
lret
mov
mov
sub
sub
mov
out
or
mov
rcrb
les
imul
xor
ss
adcl
fmull
dec
ret
push
dec
std
stc
aas
xchg
movsl
pop
scas
inc
push
lahf
sidtl
es
cli
test
jmp
fdivp
xchg
fwait
pushf
ja
mov
mov
clc
test
xchg
mov
dec
mov
test
stc
jb
test
imul
cs
stos
jns
adc
push
jbe
pop
xchg
les
push
fistpll
or
dec
subl
lods
xchg
pop
cmp
sbb
mov
mov
add
sub
adc
jb
mov
inc
and
add
roll
push
push
push
mov
lock
or
pop
out
icebp
out
lock
sub
sahf
xor
push
imul
adc
jnp
movsl
xor
xlat
jae
mov
jl
fidivs
insl
out
sbb
sub
fnstsw
xchg
pop
add
sbb
int
xlat
mov
js
cmp
add
lcall
mov
cli
sub
inc
jbe
mov
pusha
in
or
pop
inc
add
ds
addb
mov
xchg
or
lods
test
push
mov
sub
sub
popa
orb
pop
pop
sub
xor
ljmp
addr16
shlb
cmp
xor
dec
xchg
xchg
ret
pushf
mov
push
adc
mov
mov
and
mov
lods
mov
je
lahf
sub
aam
mov
cmp
out
sbb
icebp
insl
dec
out
push
xchg
in
out
test
mov
cmp
and
fstpt
filds
xor
in
add
jnp
ja
loopne
xor
push
in
jae
leave
pop
loope
cmp
movsb
sbb
lcall
pop
push
fidivl
mov
or
xor
sub
outsl
jne
mov
in
int
dec
mov
sbb
ljmp
sbb
cmpsb
ret
les
cmp
and
inc
addl
xchg
xchg
fstp
je
xor
sbb
addr16
dec
xor
dec
arpl
nop
jns
pushf
test
pop
fs
ja
cmp
and
xor
ja
orb
shr
movntq
add
cwtl
jnp
mov
insl
jns
mov
pushf
inc
and
call
cwtl
jp
mov
cmpsb
dec
js
loope
xor
xor
jbe
mov
mov
push
push
pop
inc
out
sub
pop
xchg
subl
cmp
mov
loop
mov
push
push
mov
rcrb
sti
stos
xor
push
inc
cwtl
gs
push
sahf
subl
mov
movsb
sahf
inc
jb
mov
mov
out
sahf
xor
xor
pop
bound
mov
lds
iret
pop
icebp
xchg
or
inc
sbb
scas
hlt
notl
inc
es
addl
cld
mov
cmovae
push
icebp
adcb
or
imul
jle
push
filds
and
xchg
or
or
push
out
cltd
bound
adc
out
fsubrs
dec
and
outsl
pop
add
rol
fsubrs
leave
mov
cmpsb
mov
mov
jo
add
sub
mov
imul
and
enter
inc
stos
popa
add
out
popf
call
inc
leave
pop
iret
fmuls
loop
adc
stc
leave
xchg
dec
fsubs
add
and
sub
std
pcmpeqw
lods
mov
pop
lret
inc
mov
stc
pop
and
lock
mov
shl
xor
push
sbb
pop
iret
iret
push
cli
or
inc
inc
jno
lods
sarb
xchg
jge
mov
lret
xchg
test
jnp
xchg
icebp
das
mov
arpl
pusha
sti
xor
sub
mov
mov
add
xchg
dec
mov
out
cmp
lods
xor
imul
rolb
lods
ficoml
mov
ss
inc
leave
pop
movl
sbb
stos
xor
or
mov
or
mov
sub
loope
mov
xor
loope
sar
outsl
adc
mov
fadd
mov
fists
pop
leave
push
inc
jp
xlat
test
pop
jp
cli
pmaddwd
outsb
rcr
lret
dec
andb
mov
adc
xor
shll
and
mov
push
scas
punpckhwd
pushf
jnp
sbb
les
out
or
mov
mov
nop
or
mov
lock
lods
pop
ds
sti
clc
or
pop
mov
cs
mov
fs
andb
dec
mov
mov
jbe
add
pop
mov
sub
or
jns
test
roll
popf
xlat
xor
std
push
fucomip
mov
jmp
cli
scas
in
adcl
dec
add
push
test
in
add
bt
fsubs
insb
xchg
mov
jno
mov
inc
out
pop
gs
imul
mov
pushf
mov
std
outsb
je
add
adc
cmp
dec
mov
cmpsl
dec
mov
outsb
jae
or
sub
fldt
insl
add
pop
mov
pop
fistl
jmp
mov
inc
je
sub
sbb
adc
mov
mov
jmp
sub
loope
repnz
aam
lcall
fldl
pop
mov
sbb
out
add
movsl
cmpsb
js
rorb
addr16
out
sub
arpl
cmc
cmpsl
enter
in
into
mov
scas
cld
xlat
lea
arpl
jae
pop
adc
and
pop
into
cltd
pusha
lods
mov
stos
lods
lds
fs
pop
lret
jg
mov
mov
xchg
lods
es
or
addr16
icebp
or
addr16
gs
enter
mulps
test
pop
pop
aam
in
push
push
pop
push
push
ss
ja
sub
mov
jmp
xchg
imul
fisttpl
sbb
push
mov
test
push
test
fimull
andb
mov
dec
lret
aad
jl
cs
pop
addl
ret
dec
test
jp
movsl
add
sub
cmp
pop
inc
jae
add
std
lods
daa
xchg
xor
jo
clc
cwtl
xorl
adc
push
loope
dec
int
test
iret
movsb
cmp
repz
stc
addb
xchg
pop
aad
push
pop
or
fcmovu
int
jmpw
data16
lea
mov
cld
mov
adc
les
nop
add
ljmp
es
mov
xlat
push
or
mov
addr16
xchg
mov
shll
dec
lods
push
xchg
nop
pop
or
add
das
popf
dec
dec
sti
test
sbb
hlt
aaa
and
rcll
sub
push
jle
xor
push
xchg
pop
push
adc
xor
ss
lods
lods
fidivrs
or
xchg
pop
adc
stos
lcall
fwait
movsb
dec
xchg
pop
xor
mov
in
jmp
and
push
fwait
shlb
sub
js
rolb
out
cmp
wrmsr
inc
mov
and
pop
jbe
stc
mov
or
sarb
pop
pop
jecxz
sub
adc
sbb
fcmovne
bound
inc
rcll
lea
push
fisubs
outsb
push
arpl
cmp
xchg
add
in
cltd
shll
adc
inc
sub
cmp
ffree
clc
jns
adc
xchg
inc
push
stc
jnp
jne
push
adc
movsb
sub
bound
repz
add
mov
outsb
xchg
xor
or
cli
jmp
jge
add
daa
or
sbb
jle
pop
test
ds
dec
daa
loopne
cmp
sub
mov
mov
xchg
pop
test
or
inc
ss
rcrl
fstl
into
out
mov
add
jl
pop
jecxz
jmp
push
test
fwait
adc
imul
sub
cmc
fwait
jo
or
xor
and
and
adc
out
lcall
test
mov
sub
or
dec
jb
and
jl
out
xor
mov
fwait
pop
ds
cmpsl
fiadds
repz
iret
test
test
adc
mov
jae
pop
adc
cmp
mov
call
stos
mov
inc
or
sahf
into
adc
jbe
xor
int3
jns
mov
mov
enter
and
xchg
sub
out
push
iret
xchg
mull
mov
enter
xchg
std
loopne
adc
xor
jns
js
or
scas
bound
dec
dec
xor
ret
cmp
test
jmp
gs
pop
cmpsl
xor
dec
fsubs
mov
push
pop
sub
cs
inc
mov
sub
push
push
jg
mov
jns
or
addr16
xchg
mov
lods
nop
ds
cmc
ficompl
jp
dec
leave
sbb
push
test
mov
ss
mov
xchg
pop
stos
mov
cld
repz
aad
or
jae
stos
jae
lret
push
jbe
mov
add
das
pushf
ljmp
gs
lahf
push
add
fsubrp
jb
test
cwtl
and
out
mov
fs
cld
fimull
mov
int
cmp
jae
xchg
pop
jl
jae
cmc
push
aam
imul
iret
xchg
or
insl
xor
adc
es
push
ret
movsb
fisubs
xchg
fcomps
mov
dec
rcr
adc
adc
cmpsl
or
inc
inc
ret
or
insb
push
dec
call
push
leave
push
inc
jbe
xchg
xchg
sub
and
mov
sbb
call
mov
daa
add
lods
dec
rolb
cmc
sbb
lods
das
out
push
inc
int3
out
outsl
call
xor
loopne
in
faddl
push
xchg
imul
sub
outsb
test
mov
arpl
lret
add
shrl
jl
mov
or
push
lret
push
jbe
xor
mov
mov
inc
dec
sbb
pop
aam
jns
imul
adc
xchg
aas
jo
mov
enter
dec
sbb
push
pop
in
loop
stos
xchg
fcoml
pop
jecxz
fbld
ret
xchg
jns
sub
dec
leave
adc
testb
push
setle
sbb
adc
faddl
mov
jle
inc
xorl
aad
push
loop
jg
aam
arpl
sub
pop
sub
jns
popf
out
aas
and
mov
mov
mov
outsb
xor
or
push
jmp
sbb
fwait
adc
cmp
divb
das
xor
lods
pop
cmp
ss
jg
push
pop
movsl
cmp
outsl
pop
xor
pop
test
xchg
sbb
adc
iret
push
lret
cmpsb
call
mov
fnstcw
push
adc
lods
inc
lea
sub
xchg
lahf
jo
arpl
jbe
add
xchg
gs
jns
jmp
cwtl
and
jecxz
fnsave
or
cmpsb
mov
aam
leave
pop
sbb
or
movsl
jl
xchg
pop
test
cmpsb
lahf
xlat
xlat
sarb
jmp
or
ret
gs
sub
jle
pop
cli
dec
inc
xlat
sub
je
push
stc
xchg
mov
shll
and
insb
and
pop
lods
fstpt
push
divl
ds
cli
inc
xor
cmp
or
xlat
fldt
scas
scas
imul
xchg
push
push
pop
jecxz
dec
shll
jo
inc
dec
xchg
sbb
lods
mov
shlb
or
cmpsb
mov
mov
xchg
pop
mov
enter
jge
cmc
sbb
cmp
pusha
int
dec
mov
cmp
dec
mov
adc
roll
mov
ds
stc
cmp
push
mov
adc
stos
and
arpl
aaa
aam
stos
cmpsb
jp
pop
mov
jne
cltd
fnstcw
mov
shrb
push
dec
push
mov
inc
iret
ds
ja
push
sti
popa
inc
out
xor
mov
xchg
sbb
sarl
bound
mov
adc
and
testb
jnp
aad
pop
fstl
lret
mov
lds
test
pusha
mov
jmp
icebp
cmp
andl
and
xor
std
cmc
clc
fstl
ret
out
hlt
sub
lcall
pop
leave
and
es
shlb
call
lcall
or
or
and
push
dec
lahf
mull
ja
lret
push
fisubs
jp
mov
add
in
mov
mov
mov
inc
int3
out
imul
jnp
dec
add
sbb
ja
nop
sbb
cmp
cld
or
sbb
jl
rcl
fcompl
mov
jns
xor
inc
xcrypt-cfb
cmpsl
cmpsl
or
xor
push
jo
pop
cmp
inc
cmp
adc
imul
push
cmpsl
leave
pop
andl
pusha
sbbl
shlb
xor
out
jns
outsl
mov
test
adc
xor
jne
dec
xchg
xchg
pop
in
pop
cmpsl
jno
dec
call
dec
add
rolb
vmovntdq
dec
cli
fbstp
and
js
mov
daa
mov
rcrb
mov
stos
adc
mov
add
sub
andb
mov
mov
imul
pop
xchg
mov
push
cmc
sub
int
push
test
pop
arpl
jbe
in
adc
scas
push
push
in
jmp
test
test
jmp
arpl
sbb
cld
sub
popf
test
daa
fistpll
out
sbb
insb
cmp
xchg
cwtl
jnp
gs
jecxz,pt
bnd
mov
outsb
enter
lea
pop
in
ljmp
fs
sub
adc
cmpsl
sub
jp
xchg
pop
push
fsubl
push
sbb
stos
test
jl
jbe
std
mov
es
jge
iret
scas
aam
repz
push
cli
jl
and
xchg
mov
test
cmp
lods
pop
punpcklwd
inc
daa
ds
push
fistpl
fsin
insl
sbbl
jl
jnp
xchg
xor
lds
xor
jecxz
repnz
pop
jp
xbegin
dec
jo
imul
mov
pop
add
add
dec
sarb
inc
arpl
pushf
call
xchg
or
nop
jns
aam
jmp
inc
aam
fildl
xchg
negl
pop
jp
popa
cmp
nop
ret
aad
outsl
or
fidivl
in
inc
dec
stos
cmp
inc
loop
addl
lret
stos
stos
rep
pop
movsb
mov
mov
mov
adc
pop
jg
and
add
mov
cmp
cmp
pop
fdivrs
jbe
mov
push
test
aam
xchg
mov
and
pop
loope
ja
or
pop
enter
or
outsl
mov
xor
or
lock
movb
inc
pushf
jl
adc
inc
push
fdivr
icebp
jmp
mov
fcmovne
insl
scas
and
adc
popf
adc
insl
pop
nop
xchg
mov
xor
icebp
iret
flds
jecxz,pt
mov
repnz
test
call
mov
jae
cmpsl
pusha
push
cmc
test
dec
iret
jl
dec
sahf
push
and
lcall
pusha
sub
add
mov
jnp
lret
gs
inc
cmp
cmpsl
add
mov
aaa
inc
daa
in
jecxz
cmp
dec
leave
pop
in
push
xorl
test
push
aas
cli
pop
jnp
loop
mov
jne
jbe
testb
rcr
pop
int
jmp
xchg
cli
dec
add
inc
or
sub
and
adc
sbb
fcomp
imul
adc
stos
rcrl
out
movsl
fidivs
add
xor
imul
mov
adc
inc
and
pop
xor
mov
add
add
pusha
popa
mov
mov
in
icebp
jp
lock
rolb
mov
shr
xchg
push
out
rorl
pusha
xchg
sar
inc
push
mov
xor
mov
icebp
mov
push
int
mov
push
stc
stc
cmpsl
or
cltd
sbb
push
fcompl
jno
fmuls
ret
inc
or
pop
cmp
incb
mov
adc
pop
sub
stc
xchg
cmp
scas
lock
or
les
mov
jl
mov
leave
push
jne
bound
test
rcrb
dec
mov
push
out
std
lcall
dec
gs
pop
addb
sbb
push
bound
mov
mov
jne
cmpsl
andl
pop
inc
sahf
pop
ja
xor
mov
cmpsb
outsb
loop
jae
hlt
icebp
xor
jae
es
jge
inc
mov
mov
fbld
jle
icebp
cwtl
mov
dec
in
out
rcrb
mov
sub
out
mov
mov
daa
aam
stc
call
fadd
mov
xor
ficoml
cwtl
dec
sub
pop
sub
shrb
mov
les
stc
cmpb
es
cwtl
dec
inc
nop
mov
cmpsb
cwtl
xchg
sbb
push
cltd
jmp
pop
dec
aas
xchg
pushl
lods
cli
rolb
inc
inc
dec
inc
push
mov
inc
jb
sub
sbb
insl
aam
xchg
adc
mov
push
fdivrs
add
xchg
popf
lcall
ret
pusha
mov
and
ljmp
popf
mov
fmull
loopne
sub
daa
test
aas
jne
pop
dec
cmc
and
rorb
dec
xchg
addr16
push
cmc
sbb
xchg
lea
les
sti
dec
test
mov
cltd
fistpll
xchg
or
rcl
pushf
jns
xorps
jbe
xchg
adc
or
out
dec
enter
sbbl
jns
sbb
mov
sub
outsl
sti
or
es
outsl
xlat
xchg
out
out
xchg
mov
mov
rclb
aam
mov
rcrb
pop
mov
or
es
cmp
int
es
xchg
cli
xchg
cmp
cmp
or
adc
lret
lahf
sub
inc
es
popa
and
pop
dec
sub
call
fsubl
dec
inc
movl
adc
add
outsb
imul
xchg
cltd
xchg
adc
jnp
pop
mov
ja,pt
sbb
or
imul
mov
xorl
gs
leave
mov
pop
stos
test
and
sbb
sub
rolb
jns
ss
cmpsb
call
test
dec
dec
ja
mov
sbb
ds
inc
mov
push
jno
stos
imul
arpl
lcall
nop
mov
cli
loope
adc
push
xor
addl
sub
add
add
stos
sbb
shrb
repnz
out
adc
jge
add
in
dec
push
or
cmp
xchg
cmp
cmp
lods
jle
sub
xchg
insb
jne
insb
outsb
in
mov
sub
inc
lds
negb
jmp
jnp
stc
pop
jns
jne
movsb
mov
inc
dec
aam
repz
push
add
pop
ljmp
or
repz
icebp
or
js
fwait
inc
sahf
es
mov
bndstx
xor
push
push
lods
test
inc
ret
and
mov
jns
icebp
shll
fs
push
fdivl
rorb
xchg
outsl
cmp
push
in
ds
sbb
jmp
add
inc
in
xchg
loope
pop
stc
add
xor
adc
pop
loope
xor
xor
rcrl
sahf
push
cmpsb
xchg
cmp
pop
mov
mov
xrelease
cmp
cltd
lahf
ljmp
xlat
popa
ljmp
jo
out
nop
jmp
cmp
and
jl
dec
shlb
insb
cmp
or
inc
shr
or
js
addr16
leave
sbb
pop
cmp
add
sbb
adc
mov
fucom
mov
popf
push
js
ret
add
xor
test
push
loopne
xor
shl
pop
inc
int3
pop
jns
adc
mov
in
mov
jae
or
outsb
js
std
in
lret
xor
arpl
loopne
sbb
mov
push
rorb
or
repz
push
xor
popa
es
jge
outsl
cwtl
cmp
cli
stos
inc
testb
jmp
rorl
or
push
inc
lret
jmp
mov
xor
sbb
mov
sub
cltd
inc
sub
sbb
jbe
popf
xchg
lods
xchg
mov
pop
test
push
inc
fbstp
cltd
xchg
xor
loopne
cmp
dec
loope
ljmp
pop
decb
push
add
cmp
sub
mov
je
jmp
sbb
cmp
pop
test
outsb
sbb
push
push
mov
mov
sahf
mov
test
xchg
adcb
mov
xchg
push
jmp
inc
sub
lea
imul
adc
ja
pop
lock
cmp
sbb
jecxz
cmp
jle
mov
and
pop
out
xchg
dec
negl
and
jnp
jle
mov
push
xchg
push
aas
sbb
lret
insb
imul
push
sar
in
loope
sub
cwtl
decl
xor
enter
xchg
or
or
mov
xchg
push
adc
inc
inc
int3
push
pusha
inc
clc
dec
lcall
jb
push
dec
mov
decl
pop
and
cmpl
aad
pop
nop
sbb
pop
pushl
jge
sub
bound
mov
inc
and
ficoml
pop
cmc
push
loopne
out
mov
mov
dec
mov
int
jle
mov
inc
and
add
test
out
pop
rcr
scas
sub
addb
mov
in
jle
xlat
sar
ja
mov
adc
cmp
pop
fsts
stc
data16
mov
cs
and
pop
loope
movsb
outsl
pop
add
sub
inc
add
sbb
sub
test
add
stos
icebp
xchg
sub
insl
mov
scas
push
jae
shlb
movsb
dec
sarl
lods
xadd
cs
mov
and
mov
xor
add
les
sub
jne
jge
mov
or
shll
pop
push
jno
rorb
sub
sahf
jb
add
lret
cld
inc
add
sub
aaa
jne
js
mov
mov
jmp
push
lea
and
mov
fbld
xchg
ret
jbe
jmp
fmuls
adc
jle
mov
dec
aam
and
stc
xchg
aam
dec
cltd
test
push
mov
jl
iret
shll
shl
mov
mov
je
fdivs
rcl
dec
jg
xor
sub
es
jnp
xor
mov
ss
dec
lods
mov
call
sub
daa
xchg
cmp
inc
fistl
ficompl
adc
popf
pop
mov
add
ja
adc
jmp
xchg
lcall
and
mov
xchg
pop
cmp
inc
push
pusha
ljmp
or
inc
inc
lods
loop
sbb
imul
aas
fbld
sar
insb
sbb
out
cmpsl
mov
int3
push
pop
mov
js
repz
dec
shll
mov
dec
pop
int
loopne
or
xchg
sbb
cmp
or
xchg
push
pop
jmp
add
ljmp
cs
repnz
shll
cmp
adc
clc
cmp
mov
adc
cmp
jne
das
std
push
mov
repnz
popa
scas
je
jp
jno
out
fwait
lea
cmp
insl
xor
dec
mov
popf
mov
idiv
js
imul
mov
push
cmpsl
push
test
lret
dec
mov
out
loopne
into
arpl
jp
mov
push
lret
into
iret
inc
cmp
inc
ja
test
push
jle
mov
test
mov
xor
mov
daa
lods
push
xchg
int
sub
xchg
leave
fcmovnu
outsw
icebp
pop
mov
ret
xor
mov
mov
mov
adc
xlat
cmp
mov
xchg
xor
in
xorl
addr16
jne
push
jge
jecxz
ja
in
cmp
jbe
jns
mov
adc
les
mov
mov
push
push
xor
stos
xor
pop
mov
push
notl
int3
fdivrs
or
mov
dec
addb
in
loopne
loop
cmp
sbb
ss
rorl
xchg
mov
addb
lahf
sahf
dec
add
xchg
insb
outsb
iret
mov
hlt
jne
adcb
jnp
test
jg
jp
lea
ljmp
aad
cmpsl
outsb
or
out
cmp
lods
cltd
fisubl
adc
jno
and
dec
ja
paddusw
and
cltd
rorb
xor
xchg
js
lods
adc
mov
xchg
ss
rcrb
ja
inc
std
in
mov
or
mov
sub
stos
xor
addl
int
mov
cmp
ficompl
out
enter
mov
sbb
cwtl
dec
fidivrl
mov
mov
ja
mov
sbb
pop
xchg
icebp
gs
inc
rcrl
jl
xchg
xchg
push
jge
mov
test
imul
xchg
add
xchg
imul
daa
mov
pop
fwait
xchg
and
jae
and
cmc
mov
outsl
stc
fcoml
inc
iret
pop
cmpsb
mov
add
inc
mov
mov
pop
mov
xor
pop
les
pop
insb
and
adc
xor
andb
cwtl
insl
pushl
or
xchg
mov
iret
lock
and
inc
add
loopne
mov
jmp
stos
adc
xorl
cmp
dec
or
jle
mov
or
ljmp
test
mov
dec
aam
cmp
out
or
or
cmp
insb
cmc
jl
int3
sub
push
dec
shll
lret
into
xor
mov
dec
inc
jb
data16
and
or
pushf
mov
cmpl
in
jp
rcrb
addb
xchg
dec
push
testl
rolb
xchg
sbb
test
iret
adc
rcll
lds
test
mov
sub
fnstcw
test
mov
and
mov
sti
xor
pop
xchg
pusha
inc
in
movsb
mov
mov
cmc
pop
nop
sbb
jge
cmpb
test
jb
popf
sub
pop
loop
cs
pop
aam
stos
out
push
mov
jne
sub
cwtl
lcall
fs
push
xchg
push
push
nop
or
xor
push
sub
inc
adc
aam
or
fcompl
icebp
add
pusha
into
push
mov
and
gs
cmp
aam
orl
iret
adc
and
or
inc
ja
mov
lcall
sbb
push
orl
dec
mov
mov
sub
push
mov
jle
pop
sbb
test
adc
stc
rorl
insl
mov
icebp
and
fists
cmp
add
out
stos
mov
lock
cwtl
adc
pop
xchg
fwait
mov
cmpsb
inc
popf
add
push
and
cmp
push
inc
cvttps2pi
jne
mov
xchg
rcll
fwait
movsb
jns
mov
ret
es
jno
scas
test
jecxz
les
inc
ss
jo
test
pop
adc
test
inc
mov
mov
ja
and
inc
pushaw
shlb
dec
mov
sbb
clc
loope
imul
je
push
add
gs
xor
jno
mov
xchg
adc
dec
je
push
cld
sub
and
dec
loopne
mov
stc
das
or
mov
push
bnd
fcmovbe
loopne
mov
inc
cmc
fwait
push
ljmp
loope
enter
insb
dec
lret
xchg
xchg
out
fstpl
popf
dec
or
ja
inc
xor
mov
out
hlt
jmp
ds
test
outsb
insl
pop
and
pop
shlw
adc
and
loope
mov
std
mov
xchg
sbb
lret
adc
jmp
cmp
and
cwtl
jns
xchg
xor
fstps
aas
pop
in
jno
mov
sar
dec
push
popa
sub
cwtl
lds
xchg
mov
stos
xor
gs
inc
lahf
stc
cmpsb
leave
mov
xor
pop
adc
or
movsl
push
pop
std
pop
mov
movsb
test
pop
test
fcomps
mov
or
mov
mov
scas
lea
stos
lods
inc
push
aad
gs
in
xchg
sbb
cmp
cmpsl
std
mov
ljmp
pop
pop
push
inc
inc
xchg
stos
daa
mov
mov
movsl
inc
or
cld
in
icebp
inc
lret
out
mov
cld
es
push
mov
cmp
fistl
inc
cld
sbb
ret
pop
jnp
outsb
iret
push
and
xlat
fwait
sbb
add
sub
test
dec
push
jne
adc
stos
xor
imul
inc
int
movsb
stos
addr16
dec
xchg
je
or
mov
push
lret
out
lahf
pop
or
add
popa
ljmp
push
test
imul
out
sbb
mov
cmc
cmpsb
xchg
xchg
inc
xor
fists
jno
lahf
fcmovnb
jmp
jnp
fcmovnu
add
add
stc
push
stos
sub
push
fistpll
repz
or
call
sub
arpl
xchg
inc
rcrb
jmp
aaa
xor
pop
outsb
rcll
cmpsb
lea
add
push
or
dec
jmp
jae
sarb
outsb
or
sbb
or
daa
imul
icebp
jo
ss
mov
xor
push
pop
mov
and
and
adc
pop
loop
and
xchg
xchg
pushf
mov
sbb
inc
mov
mov
or
xchg
mov
fdivl
or
xor
pop
jecxz
testb
dec
dec
jge
iret
cmpsb
int3
lods
jmp
jae
push
popf
fidivrl
cmpsl
movsb
orl
aaa
mov
fcomp
add
mov
mov
and
or
faddl
jns
mov
insl
push
or
cmpsb
cwtl
adc
or
in
dec
cli
jl
ja
stc
gs
xchg
xor
dec
cmp
or
je
push
adc
testl
shrl
push
mov
subl
push
push
push
movd
pop
pop
cmp
mov
mov
mull
xor
push
push
dec
xchg
and
lea
mov
adc
pop
icebp
cmp
cmpsl
pushf
loope
fistpl
rclb
or
pop
fs
lahf
lods
stos
popa
pop
pop
leavew
cld
ja
mov
in
mov
pop
add
lods
mov
fiaddl
fists
cwtl
dec
sub
gs
jecxz,pt
orb
xlat
and
push
std
scas
lahf
sbb
cld
mov
in
xor
call
xor
dec
arpl
xchg
lcall
mov
mov
js
jecxz
add
inc
lret
xchg
cmc
fwait
cld
cmp
adc
out
push
fsub
and
and
insl
idivb
jmp
test
imul
imul
xchg
xchg
add
xorl
leave
fimuls
das
and
ss
xor
mov
sti
xor
mov
ret
hlt
in
nop
ret
mov
xchg
loopne
aaa
or
and
jne
loope
ret
loop
sar
test
and
lods
fcmovnu
out
in
cmp
das
rcr
arpl
cmpsb
call
sbb
bnd
sub
dec
pop
daa
es
jl
dec
dec
imul
pop
cli
sbb
es
adc
out
hlt
icebp
mov
lcall
mov
fs
sti
mov
sub
sbb
push
fcompl
jg
xor
inc
addr16
sti
jne
loope
xchg
jp
mov
daa
fcmovnu
jg
xchg
rcr
gs
loop
dec
stc
mov
je
sti
pop
xor
mov
sub
js
xchg
jno
shlb
enter
lock
xor
cltd
ds
dec
int3
push
imull
aam
paddusb
lods
mov
sub
inc
in
out
dec
mov
inc
aas
sbb
pop
jle
subl
into
xlat
fiadds
jp
pop
fsubl
xor
jbe
or
gs
jne
lea
cmp
ja
outsb
insb
push
xchg
stc
call
mov
add
inc
xchg
sahf
pop
in
rolb
test
fdivl
push
xor
orb
inc
adcb
insl
testb
dec
adc
test
insb
ficoms
cmp
fwait
mov
inc
cmpl
fwait
test
mov
inc
or
testb
adc
xor
lods
pop
push
add
and
fidivrl
repz
xor
xchg
inc
std
out
fs
cmp
jge
pop
int3
dec
inc
js
dec
in
sub
inc
cld
into
lea
sti
sub
dec
sub
test
add
jle
shrb
pop
sbb
mov
pop
cmp
fsubl
or
mov
dec
mov
mov
and
popa
lret
push
xor
movsl
mov
lahf
adc
push
out
stos
sbb
scas
adc
mov
popa
cwtl
ret
fcoml
mov
out
jo
xor
scas
lods
push
xchg
nop
movl
fs
xor
je
dec
dec
bt
stos
mov
gs
pop
fcmovnb
hlt
mov
fidivrs
popa
ja
nop
mov
mov
lret
rorb
xchg
in
bnd
je
ret
aas
inc
lods
mov
jo
cmpsl
xchg
popf
es
mov
cmp
ret
jb
fistps
jnp
test
jnp
jno
xor
adc
lea
ljmp
cmp
cld
push
jae
aam
data16
jp
sub
ja
fdiv
cmpsb
adc
call
cmp
and
sbb
cmp
xor
test
and
mov
cwtl
cmp
repz
lret
imul
add
mov
movsb
pop
out
cld
lock
test
cmpl
pop
push
push
int3
and
pusha
ret
pop
sub
scas
cli
mov
push
mov
or
repnz
xor
inc
enter
mov
call
add
loope
cld
cli
add
pop
mov
jp
ljmp
push
or
or
xchg
inc
lret
pop
sbb
sub
jb
jne
mov
cmp
or
and
arpl
sub
pop
and
xlat
or
jno
cli
jle
xchg
mov
push
pop
dec
subl
enter
sub
xor
xor
and
jo
outsl
stc
jp
xlat
pop
xorl
sub
push
lret
push
fsubp
mov
and
fisubl
in
jns
xor
pusha
xlat
das
pusha
or
pop
into
jo
fmull
mov
ficomps
lock
sbb
cmp
and
xchg
aaa
aas
jmp
and
shlb
leave
lret
push
pop
stc
lock
mov
push
insl
mov
bswap
jnp
out
mov
lahf
sub
sub
add
sub
inc
jbe
sarb
push
sbb
fcomip
mov
jae,pn
stos
lods
data16
sub
popf
cmpb
push
adc
fmuls
mov
dec
xor
scas
icebp
mov
adc
movsb
loop
cltd
mov
sbb
mov
addl
into
xlat
lret
cli
call
movsl
test
jns
std
out
stc
sti
pop
pop
loope
xor
shrl
lods
iret
ret
push
out
and
xor
ret
out
xchg
leave
incl
mov
push
push
xor
push
dec
sbb
sbb
pusha
pop
pop
dec
insl
lahf
popf
and
adc
pop
arpl
cmpsl
test
pusha
mov
std
xchg
mov
stc
xorb
xor
xchg
mov
lock
sub
jne
imul
outsl
movsl
sub
popa
pop
adcb
mov
sbb
push
xchg
lcall
call
pop
nop
adc
dec
mov
sbb
mov
dec
pop
jno
test
cmp
cmp
jp
xchg
test
sbb
repnz
or
inc
fildl
sbb
addb
mov
dec
sub
imul
xor
fiaddl
sbb
sbb
mov
sbb
and
inc
addl
sbb
std
mov
mov
sub
je
loopne
xorb
or
add
xor
dec
cmp
xor
loop
xor
out
fnstsw
xor
cmp
xchg
out
fucomip
in
ret
test
in
mov
xchg
mov
push
mov
cmp
fsubrs
bnd
sbb
dec
pop
xor
pop
add
inc
dec
and
fstps
aad
out
push
in
pop
cmpsb
insb
in
sti
inc
jb
push
xchg
fwait
jne
orl
les
adc
int3
push
cmpsl
or
or
pop
fsubl
jmp
loopne
mov
icebp
jbe
les
ds
aaa
sub
add
sbb
stc
adcl
in
and
sub
mov
popf
into
inc
icebp
insb
inc
inc
mov
jg
and
ficoml
cwtl
scas
lahf
arpl
mov
mov
cmpsl
push
insl
jb
ret
mov
fisttpll
jns
movsb
pop
cmp
insl
push
push
adc
cmp
ret
xor
imul
mov
js
push
push
call
stos
sahf
sub
inc
out
adc
cmpsl
dec
dec
imul
sarb
pusha
mov
pop
mov
inc
or
sub
pop
push
cmpsl
iret
push
or
popa
out
push
mov
repz
mov
dec
mov
cmpl
mov
inc
inc
clc
jmpw
call
sbb
xor
loopne
pop
test
lods
and
xchg
xchg
insl
lret
mov
fsubrp
pop
mov
mov
add
cmp
mov
pop
mov
lea
mov
adc
dec
cmpsl
and
adc
xchg
jns
in
gs
out
xchg
jp
adc
cmpb
lahf
sbb
sbb
nop
or
clc
test
xor
loop
cmc
jle
or
movsl
push
jmp
pop
movsb
mov
cmpsl
xchg
push
cmpb
jae
jle
fsubrl
out
mov
nop
jl
cmp
cwtl
popa
je
outsl
fsubrs
adcb
sbb
sbb
sub
push
xchg
bound
push
adc
std
jns
cmp
cmp
push
jb
and
rolb
or
adc
repz
jle
stc
bound
add
sbb
movsl
shll
pop
sbb
xor
orl
stc
fisubrl
insl
lds
loope
jge
mov
cmpsl
cs
leave
outsl
inc
push
adc
inc
mov
es
cmpsb
pop
ljmp
cmp
je
test
scas
in
js
mov
adc
xchg
and
add
jb
dec
sub
and
add
out
xor
sbb
insl
bound
mov
cs
or
cmc
cli
mov
sti
mov
dec
inc
rolb
test
stc
data16
sbb
sbb
and
xchg
popa
adc
lock
popf
ficomps
loop,pt
jge
push
cmp
jns
cmp
or
xchg
pop
jmp
aam
repz
mov
mov
pusha
movsw
insl
mov
inc
pop
or
pop
inc
jo
aad
lock
sub
cmp
icebp
or
and
cmc
cmp
push
cmp
mov
pop
inc
pop
test
push
loopne
pushf
mov
jne
arpl
inc
cmc
push
pop
data16
jns
add
subl
sbb
pop
rcrl
rol
pusha
js
mov
pop
jno
aam
push
xchg
sub
sub
js
mov
insl
push
adc
ljmp
cs
lock
pop
out
data16
push
jnp
mov
dec
cmc
jle
cmp
les
pop
or
push
ficoml
jle
fstpl
adc
enter
mov
xor
adc
pop
call
enter
aam
mull
fisubrl
cmp
outsl
pushf
sub
je
mov
xor
addb
lcall
mov
inc
fstpt
push
test
push
cmpsl
fwait
and
loop
sub
mov
jmp
xor
fs
sub
fcoms
mov
pop
cmc
xchg
inc
dec
shlb
gs
in
xor
stos
pop
aam
es
adc
shlb
dec
xor
adc
adc
cmp
jle
xchg
xchg
shlb
or
outsb
pop
mov
mov
jae
gs
js
or
mov
jmp
notb
fisubs
loop
pop
xchg
dec
stc
fcoml
mov
iret
pop
cmp
cmc
mov
xchg
mov
adc
pop
adc
cmpsl
sub
add
xor
cltd
push
rolb
insl
movb
adc
push
bound
inc
ret
xchg
jmp
ret
mov
mov
pop
in
xchg
dec
jge
imul
jae
decl
inc
inc
push
call
lcall
stos
leave
adc
xor
iret
inc
mull
cmp
push
int3
push
bound
sub
hlt
mov
mov
insl
cmpsb
cmpsl
inc
mov
jmp
xchg
movsb
pop
bound
push
push
out
andl
cmp
cmp
adc
sahf
sub
roll
sub
in
aad
add
lret
pop
popa
aas
inc
shlb
mov
inc
dec
leave
or
idiv
jmp
and
cltd
mov
xor
sub
ja
dec
repz
xchg
cmp
and
xchg
test
cmpsl
pop
lret
out
jne
mov
sub
mov
mov
xor
adc
cmp
pusha
ret
sub
pop
into
int
hlt
push
inc
sbb
pop
nop
mov
cli
loope
adc
orb
cmp
jne
jns
adc
pusha
ljmp
int3
mov
push
out
jb
outsb
daa
inc
jb
xor
ljmp
push
dec
dec
mov
sbb
mov
fstl
cmp
pop
popa
mov
pusha
mov
push
dec
push
add
aaa
ret
fsubl
mov
pop
push
jno
cs
adc
adc
mov
mov
fwait
sub
mov
pusha
mov
add
fisubrs
pop
jecxz
bnd
into
xchg
push
mov
out
nop
add
mov
enter
outsb
js
mov
dec
into
dec
imul
mov
adc
mov
cs
data16
ret
sub
jle
jo
mov
mov
call
pop
shr
test
xor
mov
mov
xchg
ljmp
in
xor
push
sets
stos
int
or
add
andl
pusha
xlat
mov
stc
or
and
mov
inc
enter
jne
or
lcall
pop
in
pcmpeqb
stos
pop
out
mov
or
stos
xor
and
mov
cltd
rclb
outsl
jae
vmaxsd
or
mov
mov
xchg
lcall
jne
jno
or
jae
or
inc
out
and
add
mov
sahf
nop
imul
jle
cwtl
lahf
lret
pop
adc
cs
gs
dec
xchg
inc
imul
jo
sbb
lods
xchg
mov
sbb
xchg
mov
sub
or
clc
push
jae
cmp
dec
fnstcw
lods
sbb
mov
push
dec
cmpsb
jbe
add
pop
or
xchg
loopne
daa
stos
les
jae
push
push
out
jmp
or
jne
mov
dec
xchg
mov
mov
ret
rcl
repnz
jbe
testb
push
cmp
cld
sbb
out
mov
mov
popa
notb
loop
daa
out
cmp
aad
imul
and
lret
or
jns
add
mov
loop
adc
sub
jns
bnd
or
push
icebp
mov
aaa
cmc
aas
repnz
iret
cmpsl
dec
fucomp
inc
lret
mov
or
cmp
enter
mov
inc
int3
sub
push
pop
xor
nop
add
outsb
nop
int3
adc
daa
loope
aad
xlat
pusha
inc
dec
dec
test
lret
scas
insb
inc
rorb
out
enter
pop
xorb
xor
xor
push
jns
scas
mov
cwtl
test
pop
gs
inc
pop
in
lret
cmpsb
push
cmpsl
xor
add
loope
xlat
pushf
xchg
add
fst
mov
jae
test
data16
pop
bound
rcr
mov
cmp
xchg
mov
cld
test
clc
push
fs
enter
fnsave
cmp
jne
mov
ljmp
jp
out
stc
sti
push
js
or
insb
jno
push
aam
dec
push
xchg
rorl
cmp
add
lock
jg
or
ja
jecxz
neg
lock
jne
or
stos
movsl
cs
mov
rolb
cmp
adc
jno
into
inc
cmp
pop
ss
adc
xor
and
cli
jle
lods
push
push
stc
ljmp
cmp
ret
dec
xlat
jecxz
fwait
cs
negb
cmp
cltd
mov
into
pop
loop
add
xchg
rcr
std
cmp
xlat
aad
jae
pop
add
pop
sbb
std
push
lds
xchg
jg
les
push
enter
jns
sbb
push
mov
xor
xchg
inc
cli
cmp
push
aam
jae
fsts
mov
insb
and
jmp
pop
orb
push
push
or
jecxz
roll
je
cmpsl
test
rolb
fucomp
adc
add
dec
sub
test
mov
fadds
inc
je
xchg
sub
movsb
pop
xchg
ret
mov
or
lcall
sarb
jmp
ds
or
mov
pop
out
jp
mov
mov
leave
pop
into
adc
pop
mov
lret
imul
hlt
jne
aam
lret
pop
jg
stc
lahf
adc
inc
cmp
lods
lahf
icebp
or
push
fidivrs
or
outsl
ret
es
test
sbb
jne
or
sti
clc
and
mov
push
jecxz
in
push
push
pop
sbb
adc
cmovl
imul
sub
mov
scas
ficoml
xor
cmp
sub
sub
aam
push
outsl
movsl
insb
mov
add
gs
negl
scas
lahf
pop
data16
negb
mov
cmp
dec
cmp
ljmp
sub
pusha
pop
subb
add
push
push
pop
cmp
fisttps
adc
mov
fwait
enter
jae
push
push
push
into
jecxz
js
xor
stos
jp
add
ljmp
xor
add
dec
jae
in
xchg
mov
iret
jbe
cmp
std
stc
jb
jb
cmp
mov
jg
jns
gs
or
loop
jns
jp
or
mov
loop
and
lock
inc
mov
outsb
xchg
adc
mov
cmpsl
dec
push
adc
xchg
sbb
mov
repz
outsb
and
adc
in
loope
aam
scas
cmp
mov
gs
mov
pop
jmp
sub
push
or
cwtl
sahf
mov
dec
aam
xchg
pop
aam
cli
sbb
xchg
xchg
pop
pop
pusha
sub
test
lock
mov
int3
jle
sbb
or
xchg
out
push
xor
sbb
js
cmc
xlat
sbb
in
adc
adc
mov
cmpsb
push
dec
lods
pop
inc
shlb
adc
pop
add
into
push
stos
mov
in
into
jg
jb
test
jae
or
or
jo
pop
inc
sahf
daa
mov
sub
push
movsl
mov
xor
cld
outsl
stc
orb
inc
add
je
stos
inc
mov
xor
mov
pop
call
divb
sub
push
outsl
jne
adc
sub
in
cmp
add
js
je
lods
js
subl
fs
mov
ss
sbb
loop
rorl
lahf
sub
scas
roll
cmp
mov
and
xchg
xor
gs
adc
in
cmpsl
xor
ljmp
xorl
mov
sbb
inc
out
xorb
mov
dec
insl
mov
fdivp
int
das
jl
mov
leave
adc
lret
adc
pop
cmpsb
pop
fsubrs
mov
adc
gs
adc
cs
adc
cmp
mov
enter
jne
icebp
and
pop
pop
dec
clc
mov
mov
daa
sub
jle
test
and
add
testl
int
jl
push
sbb
xor
int3
mov
xor
int3
or
rcrl
jns
mov
lahf
mov
xor
pop
inc
inc
test
bound
nop
inc
push
mov
icebp
or
stos
xor
lahf
pop
jbe
dec
out
stc
or
cmpsb
cwtl
push
mov
pop
and
movups
and
imull
popa
roll
mov
scas
int3
call
inc
cli
cltd
xor
adc
mull
imul
stos
out
in
fwait
andl
cmp
es
add
add
std
adc
movsl
mov
fimull
sbb
xor
iret
adc
imul
addr16
push
pop
repnz
add
mov
popa
cmp
fimull
pop
jne
dec
push
ljmp
lods
sub
rcll
stc
jbe
mov
pushf
loopne
lds
add
sub
int3
mov
aaa
add
adc
adcl
leave
idiv
dec
iret
pushf
xchg
cs
ret
adc
fidivrs
pop
mov
cmpsb
pop
pop
imul
js
int
pop
aas
repz
add
xchg
mov
bnd
jg
adc
fdivrl
lock
adc
pop
int
loope
je
mov
pushf
xorl
insl
pop
cltd
or
jae
fnsave
dec
mov
cs
mov
or
mov
cmp
scas
je
insb
and
call
rdtsc
push
dec
sbbl
push
and
or
xchg
push
outsb
js
arpl
mov
xchg
xor
pop
dec
fadds
outsl
fs
xchg
dec
in
out
sub
cwtl
fldl
cmp
push
iret
mov
imul
sbbl
mov
jb
dec
pop
add
and
jnp
xchg
adc
inc
push
imul
or
fwait
and
push
jge
add
cmpsl
sub
fisttps
mov
mov
inc
sub
push
jp
scas
cld
idivb
mov
and
js
jae
mov
and
popf
inc
cmp
sbb
ss
inc
daa
insb
rcll
stos
icebp
repz
in
lods
icebp
addr16
roll
popf
scas
jb
dec
outsb
out
popa
outsb
mov
xchg
push
adcb
clc
xchg
mov
movsl
js
aad
push
outsl
sti
jno
xchg
and
push
loope
jecxz
pop
xchg
or
sub
pusha
fsubrs
mov
movsb
jns
inc
push
popf
out
jo
mov
ss
jns
or
pop
subl
xchg
jnp
adc
mov
into
mov
addr16
sub
pusha
xchg
sbb
daa
inc
mov
jg
cltd
pop
sbb
dec
rcll
je
jbe
lcall
inc
mov
jns
add
dec
daa
in
sub
ljmp
cltd
push
xor
adc
pop
jns
js
arpl
in
push
xchg
jb
rorl
dec
fwait
inc
jp
ret
pushl
pop
hlt
push
or
leave
pop
dec
rol
jns
fcmovnu
dec
or
xor
inc
int
int3
arpl
sahf
mov
insb
jge
dec
dec
vdivpd
jno
mov
cltd
and
ds
rcrl
pop
fsubs
jecxz
arpl
imul
xor
push
add
test
sub
cmpsb
cmp
fmulp
outsb
mov
pop
js
fwait
addb
xlat
pop
push
mov
mov
lcall
or
fsubrl
pop
daa
mov
stos
jmp
das
mov
dec
shl
repz
push
insb
pop
lea
popa
popf
leave
add
xor
flds
cmp
test
mov
sbb
fstpl
sahf
inc
ror
lods
addr16
add
in
xchg
cmpsb
xor
test
push
dec
mov
dec
int3
sub
inc
lret
outsb
pushf
es
dec
push
mov
stc
bnd
xchg
rclb
movsb
sbb
rcll
mov
inc
repz
sti
nop
jg
or
iret
test
add
paddq
test
push
jecxz
mov
notb
dec
in
push
pushw
repnz
test
repnz
dec
notb
aaa
jb
jmp
cmc
cmp
ds
lods
lock
inc
jns
mov
xchg
dec
cltd
cmp
add
xchg
xchg
test
jno
cmp
push
or
mov
or
fmuls
pop
std
lods
push
jnp
mov
imul
cmpsl
and
insb
and
inc
pop
push
fucomip
push
mov
adc
cmc
sub
dec
push
mov
jo
sbbl
mov
xor
bound
or
xor
jae
mov
enter
adc
jecxz,pt
sbbb
rep
mov
inc
mov
mov
jbe
addr16
adc
dec
js
mov
lahf
mov
and
mov
mov
in
sub
int3
xchg
pop
test
imul
inc
lcall
sbb
xor
test
cmp
jl
pop
or
cmp
cmpsl
test
cli
shlb
xchg
adcl
dec
pusha
mov
jle
and
lock
dec
cltd
cmp
adc
xchg
xor
clc
fwait
dec
gs
outsl
stc
fcoms
test
or
sub
jle
lea
lret
push
fisubrs
inc
add
mov
dec
mov
shlb
cmpsl
stos
adc
in
loopne
inc
scas
rcll
js
stos
xor
gs
orl
mov
int
pusha
ljmp
adc
fsts
shl
stos
iret
dec
xor
sbb
sbb
jnp
mulb
adc
jmp
dec
inc
cmp
fistps
lret
inc
leave
pop
pushl
push
and
cmpsl
xor
faddl
adc
sub
faddl
mov
icebp
ror
ljmp
pop
adc
push
push
outsb
out
cli
cld
loope
mov
cmp
pop
outsl
push
xchg
mull
adc
test
push
cmc
stc
sub
mov
pop
sub
jmp
rcll
ret
push
mov
fwait
cli
sti
dec
xchg
mov
lods
ss
mov
and
pop
test
cltd
adc
adc
mov
and
inc
out
in
xchg
push
xchg
bound
xchg
mov
pop
nop
shll
dec
dec
sti
sub
leave
dec
aaa
fs
mov
mov
lret
xor
ja
divb
inc
repnz
leave
cld
stos
loop
push
orb
mov
mov
testb
xchg
cld
jg
rcll
pop
push
stc
ljmp
out
jae
pop
int3
scas
sub
int3
xor
nop
or
mov
push
add
mov
and
inc
pop
mov
ds
fwait
mov
push
adc
xor
sbb
outsl
js
shrb
sub
cmpsl
or
sbb
mov
sbb
js
in
shrb
lret
dec
jo
and
and
inc
push
jg
pop
scas
mov
mov
cmp
push
and
mov
mov
test
in
stos
dec
pop
jle
xchg
push
cmpsl
push
pop
jb
dec
mov
push
xchg
movsb
jmp
clc
subl
sbb
xchg
scas
adc
mov
mov
mov
imul
pusha
jns
jne
mov
popa
push
push
or
mov
sbb
mov
lcall
mov
pushf
inc
enter
jmp
mov
xchg
lcall
xchg
lahf
xorl
insb
cmc
jg
cld
data16
jbe
push
sbb
cmp
loopne
arpl
scas
add
pushf
add
mov
and
jecxz
inc
fs
cmpsl
inc
cmpsb
adc
in
divb
inc
pop
inc
or
pop
sahf
repnz
add
mov
enter
push
flds
dec
adc
lock
push
and
cmp
hlt
mov
xchg
sbb
xor
add
sbb
push
int3
sti
sub
and
mov
xchg
lea
inc
sub
xchg
scas
add
loopne
jp
mov
cmp
shrb
stc
negb
cmc
fistpll
and
scas
clc
and
hlt
xchg
mov
dec
xor
scas
add
mov
adc
xchg
pop
xchg
xchg
popa
mov
les
es
and
clc
sahf
jo
pop
push
push
pop
gs
mov
xchg
push
int
testb
ss
mov
xchg
lcall
dec
push
fwait
stos
decb
pop
test
movsl
popa
out
ret
inc
sub
pop
sti
dec
push
jmp
pop
ret
loop
sbb
add
into
cltd
adc
movsb
adc
inc
xor
std
mov
sti
cmp
fs
cwtl
movsl
sbbl
pop
shrb
or
lahf
icebp
jae
lds
and
pop
mov
push
fiadds
insb
xlat
inc
pop
pop
daa
mov
pop
inc
sub
imul
xorl
jb
add
clc
sub
outsb
inc
dec
das
es
and
sub
inc
pushf
pop
test
mov
lret
js
insl
out
dec
mov
cs
sbb
jb
aam
enter
pop
dec
pop
stc
in
cmpsl
dec
dec
push
mov
mov
xor
mov
xor
sub
das
and
rclb
dec
fistpl
int3
jle
dec
dec
aam
push
cwtl
aad
mov
sub
fisttpl
insl
popa
out
and
pop
push
cmpsl
fs
mov
cld
loope
and
rclb
xchg
xor
fildl
mov
das
mov
outsb
adc
pop
fsub
lods
sub
iret
fsubp
xchg
fwait
shrb
push
xchg
mov
lret
adc
lods
dec
dec
rcrl
sti
enter
mov
iret
xor
ja
or
sub
ja
sub
fcom
push
cmc
outsb
xlat
push
push
cwtl
fs
xor
lahf
fsin
add
cmpsl
pop
hlt
in
push
pushf
ds
fdivrl
mov
xor
test
jo
lds
sbb
rclb
jae
pop
dec
xor
mov
push
pop
mov
add
out
aas
cmp
into
mov
pop
dec
or
rcrb
mov
sbb
push
ret
cmpsl
mov
stc
sub
movsb
movsl
jl
leave
aam
das
xchg
add
inc
fwait
lds
xchg
ds
shlb
in
rorb
or
hlt
sub
incl
cmp
mov
dec
jo
aaa
sub
push
cmpsb
test
inc
in
adc
dec
iret
sub
insw
nop
repz
sbb
pop
dec
push
add
xor
daa
sbb
fisubs
and
lock
inc
or
or
ja
repz
sbb
jmp
scas
mov
push
inc
jle
xchg
push
dec
in
clc
or
cmp
add
cmp
lret
lods
arpl
fcomps
aas
data16
push
dec
lret
xchg
cwtl
ds
arpl
loope
push
xlat
out
scas
xor
lea
mov
test
std
sub
xchg
icebp
fcmovnu
xchg
push
cmpsl
xor
dec
sbb
dec
cwtl
mov
mov
sub
push
sub
lcall
or
cmp
scas
scas
popa
popa
cli
add
lahf
mov
push
cmp
inc
dec
sub
xchg
popf
in
aaa
inc
or
sahf
in
lods
pop
addr16
sbb
cltd
arpl
inc
and
mov
test
push
stos
mov
out
cmp
out
sub
mov
les
jno
dec
mov
std
scas
or
dec
aaa
or
movsl
xchg
or
in
inc
test
pop
mov
ds
sub
int
lret
inc
ret
imul
or
push
dec
fwait
cmp
adc
mov
pop
out
or
dec
mov
xor
inc
aam
stos
xor
inc
rolb
mov
dec
dec
inc
xchg
repnz
in
mov
cwtl
dec
sti
fsub
pop
sub
add
clc
adcl
mov
jb
mov
popa
ljmp
jbe
inc
pop
sbb
out
dec
call
sub
push
test
fnstenv
pop
filds
adc
ljmp
mov
stos
xchg
cmp
cwtl
cmpsl
repz
in
sbb
add
in
insb
mov
pop
popa
jge
sbb
stos
popa
or
inc
icebp
test
lock
push
and
jmp
jg
in
insl
shll
pusha
repnz
or
lret
ljmp
add
pop
outsb
mov
lret
sbb
add
push
and
emms
es
cmp
sti
ss
outsl
insb
jmp
aaa
repz
fisubl
dec
fxch
cmpsb
pop
daa
jns
inc
scas
push
sar
lds
xchg
ret
fs
insl
add
hlt
jb
mov
btr
sub
aad
ret
dec
scas
repnz
mov
roll
pop
sbb
enter
hlt
loopne
xchg
int3
out
aaa
sub
cwtl
push
push
js
add
je
cmp
pusha
xor
in
das
lahf
stc
nop
jo
out
jns
adc
rcrb
cmp
ret
lods
mov
and
aam
pop
out
mov
xchg
and
mov
mov
jae
mov
jp
ror
mov
fists
mov
xchg
test
rol
enter
das
jo
lahf
cmpsl
insb
cmp
sub
in
enter
inc
mov
loop
xor
dec
dec
sti
or
mov
xor
test
shl
cld
test
addr16
push
jno
jmp
jae
pop
incl
sub
jge
repz
push
add
das
ret
fs
and
jo,pn
and
xchg
push
ds
sti
mov
inc
mov
in
mov
xchg
aad
cmpsb
out
scas
cmpsl
mov
popa
testb
cmp
shll
mov
dec
adc
push
js
xchg
pushw
xchg
mov
inc
je
push
fnstcw
cld
jb
lcall
sub
jg
fdivr
cmp
arpl
fs
dec
mov
addr16
mov
subb
or
stos
outsb
sbb
or
aaa
mov
stc
xchg
scas
jmp
fcmovnbe
adc
into
mov
dec
mov
ret
pusha
inc
das
mov
mov
adc
push
jne
jne
iret
dec
insb
stos
xchg
push
or
bnd
lret
test
cmc
inc
adc
pop
pop
sub
in
jle
mov
pop
cmpsb
inc
xorb
out
aam
dec
xchg
and
sahf
loope
fidivl
lea
lcall
call
push
leave
push
push
lods
clc
sub
test
push
lret
add
jmp
stos
add
lods
es
shrl
daa
mov
jl
sub
xor
lcall
lds
mov
fistpll
mov
faddl
mov
mov
mov
sbb
insb
fs
shrb
or
in
xchg
out
adc
pushf
pop
out
cli
sbb
arpl
add
inc
cmp
dec
aaa
ljmp
je
jg
outsb
push
dec
mov
push
shll
bound
sahf
add
cli
call
rorb
in
in
je
pop
xchg
sti
cmp
ret
and
sub
sahf
mov
daa
cmp
dec
adc
icebp
sarl
jbe
push
stos
in
and
jne
pop
mov
adc
scas
shrb
mov
aam
rcr
dec
mov
jae
or
ljmp
cmp
sub
inc
pinsrw
orb
nop
dec
nop
es
out
shll
pop
pop
or
pusha
jo
pusha
adc
inc
lds
aas
hlt
cmp
dec
lods
stos
jl
ja
or
dec
stc
mov
mov
out
cmp
or
inc
mov
jl
je
mov
pop
out
inc
ret
xor
sub
ljmp
jae
int3
xchg
sbb
mov
sbb
outsb
js
aas
fs
cmp
mull
adc
jae
fcomps
rcrb
adc
lret
loop
into
into
cmp
push
addr16
sbb
push
movsl
pusha
pop
xor
lea
jns
hlt
push
dec
fildl
fstpl
jb
mov
cmc
stos
addr16
dec
test
mov
orl
push
pop
int
movsb
test
mov
imulb
pop
jg
stc
test
mov
sbb
push
cmc
lods
pusha
jbe
aad
cmp
xchg
adc
cwtl
cltd
pop
mov
jg
adc
push
cmc
rcl
or
pop
jae
mov
mov
cli
xor
dec
in
lret
sbbb
sub
fistps
pop
jl
iret
dec
cmpsl
jl
jg
sahf
and
inc
inc
daa
mov
pop
std
jge
pop
js
xchg
imul
sbb
sti
clc
mov
imul
xor
xchg
mov
jecxz
cmp
inc
pop
test
outsb
je
add
push
aam
mov
stos
mov
repnz
fnstcw
sub
jg
shld
hlt
aad
int3
and
fldt
dec
shlb
pop
push
mov
jb
rorb
push
push
push
mov
sub
xor
mov
lock
cmc
test
cmp
mov
inc
pusha
lcall
out
adc
clc
movsl
mov
xor
pop
repnz
je
pop
nop
add
outsb
mov
nop
mov
jnp
sar
sahf
loop
jp
insl
mov
fstl
ret
shrl
inc
pop
mov
inc
shlb
test
loope
ljmp
out
mov
mov
dec
mov
and
insl
mov
lret
out
add
pushf
jbe
cmp
hlt
stos
pop
rclb
negb
js
scas
cmp
ss
icebp
jbe
sub
pop
pop
pop
jno
in
fsts
cmp
add
or
cmc
aaa
hlt
pop
xchg
mov
push
dec
sub
inc
movsl
mov
cmp
fcompl
lods
jno
add
and
jl
and
psrlw
repz
sub
imul
mov
idivb
or
fwait
jg
xor
cwtl
inc
cmpsb
inc
xchg
sti
das
inc
movsl
add
clc
cmp
je
mov
in
xor
sarb
pop
cmp
repnz
push
fsubl
inc
inc
mov
in
js
scas
xchg
push
and
std
sbb
in
fwait
std
in
mov
or
xor
dec
inc
daa
cmp
fists
adc
mov
pop
popa
pop
in
out
xchg
pop
pop
inc
push
mov
subl
outsl
mov
in
inc
insb
insb
scas
push
pop
into
pop
cmp
fstpl
and
cmp
sub
and
aam
inc
xchg
pop
insb
xor
or
mov
lahf
es
nop
pop
repz
lea
and
cltd
push
lock
mov
add
gs
loope
cmp
dec
mov
adc
test
and
test
rep
rcll
sarb
ret
jbe
sahf
imul
sub
leave
push
jb
jl
inc
sbb
mov
add
clc
cmp
insb
sbb
and
je
aas
nop
ret
lods
sub
jae
popf
jp
inc
or
push
lahf
mov
popf
sub
dec
dec
xchg
hlt
and
fmull
or
mov
rolb
imulb
hlt
inc
pop
inc
aam
pop
pop
xor
inc
cmpb
add
fldt
lcall
mov
inc
std
and
addr16
jl
adc
roll
ss
js
cli
mov
cmc
and
outsl
incl
movsb
pop
ss
jmp
inc
dec
push
rcr
push
jns
movsb
pop
stc
icebp
fnstenv
nopl
out
loop
addr16
shll
stos
push
adc
cltd
push
mov
cmpsw
add
iret
rorb
shlb
je
ljmp
sti
movsb
out
shrb
mov
mov
jecxz
aaa
and
dec
xor
aad
push
in
outsw
call
cli
testb
adc
out
mov
je
into
mov
add
sub
xor
js
xchg
cmp
push
pop
sub
add
inc
sbb
and
out
jns
mulb
dec
orb
aaa
xor
clc
scas
push
out
fisubrl
or
pop
sub
lcall
sbb
das
je
and
lods
cs
mov
and
test
pusha
loop
dec
dec
fbld
outsb
jg
jo
and
popf
imul
or
mov
shlb
cmp
cld
dec
mov
push
xchg
bts
push
in
cmp
out
testb
mov
cwtl
sbb
outsl
and
dec
mov
sub
or
xor
add
mov
out
orl
xchg
mov
in
mov
aaa
xchg
popa
adc
int
push
sets
pop
mov
mov
arpl
mov
fmuls
adc
and
dec
push
loope
lret
or
pop
mov
jne
fs
cmp
cmp
in
insb
js
push
lods
sahf
int3
fisubs
dec
add
mov
push
scas
sub
stos
mov
addb
adc
mov
jnp
rol
enter
orl
mov
adcb
out
out
mov
inc
lret
sbb
cwtl
dec
pushf
dec
pop
or
test
and
jmp
jbe
fistpl
sbb
mov
push
pop
jl
xorb
sti
pop
shlb
pop
mov
jle
or
nop
sahf
imul
out
mov
jmp
inc
xchg
mov
adc
lcall
je
and
adc
mov
lods
cmp
mov
shlb
sbb
pushf
movsl
or
inc
sti
lcall
push
je
cltd
je
add
xchg
push
xor
jae
jmp
or
in
push
fsubl
push
movsb
mov
loopne
jno
ljmp
test
sbb
push
fisttpl
int
mov
mov
inc
sub
loope
cmp
xchg
and
gs
push
gs
dec
add
imul
fwait
mov
pop
cltd
cld
push
and
dec
ja
js
pop
mov
inc
in
testl
lret
gs
shrb
xor
aas
adc
push
popa
and
xchg
ret
and
sbb
insb
out
dec
push
outsb
dec
pop
cltd
jns
int
dec
leave
cmpsb
movsb
inc
imul
in
mov
lret
iret
jmp
xor
pop
xchg
mov
push
lcall
dec
stos
lock
enter
test
push
arpl
sbb
je
mov
fimull
rorb
fisttpll
mov
lcall
pop
data16
mov
decb
js
dec
fmul
cld
cmp
pop
sahf
lods
fstps
cmp
insl
aam
rcll
lods
pushf
call
xor
and
addr16
push
sub
inc
imul
xchg
cmp
loopne
pusha
ljmp
lods
rorb
pushf
addr16
or
ljmp
jp
test
cltd
mov
push
ficomps
icebp
stos
int3
rcll
mov
sbb
imul
inc
sbb
and
dec
mov
pop
test
mov
sarb
dec
adc
xchg
adc
push
scas
aaa
pusha
ljmp
sub
loopne
outsl
stc
mov
loopne
mov
push
idivl
xchg
push
cmpsl
in
fsubl
push
in
or
lock
xor
xor
sub
addb
mov
and
cmpl
cmpsb
rorb
cli
out
js
jmp
jne
push
out
jae
mov
jg
pop
push
mov
jbe
jae
ja
cmp
pop
dec
dec
hlt
jmp
das
les
sub
stc
lock
cwtl
call
mov
icebp
pop
movsb
pusha
shll
inc
mov
pop
es
push
inc
out
adc
ljmp
cs
mov
rcr
lods
repnz
mov
movsl
test
movsb
test
fnstsw
mov
or
aas
sub
fisubrs
outsb
pop
dec
mov
cmpl
icebp
pop
stc
mov
clc
scas
inc
cmp
hlt
add
xchg
arpl
jbe
dec
mov
inc
int3
mov
pop
jb
push
icebp
cmc
out
or
repnz
repz
test
out
mov
inc
sbb
cs
and
bswap
into
cmpsl
popf
fadd
xchg
push
cmpsl
test
xchg
or
sub
jbe
dec
cmp
xchg
sbb
cwtl
and
gs
pusha
inc
sub
testb
cmc
adc
adc
mov
es
ljmp
cld
mov
bnd
out
and
cmp
pop
rol
jmp
push
inc
xor
dec
pop
ret
das
outsl
fwait
or
and
push
ds
sub
add
cmc
xor
mov
icebp
xor
sub
push
lock
and
int3
mov
cmpl
cmp
pusha
xchg
cmp
lods
xor
mov
jle
orl
cmp
mov
lods
stos
add
arpl
xor
cld
test
jecxz
jl
loope
push
xor
repz
ret
out
add
imul
cs
xchg
dec
les
jl
dec
mov
dec
popf
stos
je
sarl
xor
mov
sub
pop
out
lds
sarb
ds
mov
mov
add
inc
mov
or
xor
arpl
inc
or
fisubs
mov
out
pop
or
push
int3
pop
shll
xchg
jecxz
dec
cli
mov
push
cmovnp
call
inc
jg
loop
arpl
rcll
icebp
test
mov
or
xlat
aam
push
std
cli
jge
mov
in
mov
insb
in
mov
icebp
mov
sbb
jnp
rcrb
inc
add
and
addr16
shl
imul
int
pop
mov
adc
sub
xchg
enter
outsl
cmp
xor
je
pop
jecxz
jmp
lds
push
scas
cmp
xorl
into
dec
rcr
push
sub
pop
rcrl
mov
loopne
insb
pop
xchg
mov
and
dec
pop
mov
sbbb
aam
push
jge
nop
lds
sbb
fmull
ja
cmp
jns
and
push
pop
jp
leave
inc
int3
fdivrs
push
cmp
arpl
test
cli
fdivrs
push
leave
rorl
aas
loop
std
cmp
mov
dec
push
in
ret
xchg
call
mov
push
pop
or
jnp
scas
fsubl
int
int3
out
repz
mov
fdivrl
jne
add
dec
sub
jmp
cwtl
and
push
mov
mov
scas
loopne
imul
pop
adc
adc
and
mov
js
add
pop
aaa
stos
adc
sarb
adc
pushf
test
lds
cmp
int3
push
cmc
les
cmpsl
je
cmp
push
shll
cmpsb
mov
ret
hlt
push
aad
xchg
sbb
or
or
adc
mov
adc
dec
push
ss
mov
shll
add
in
testl
adc
std
mov
mov
dec
xor
outsb
push
pop
adc
lods
hlt
mov
push
pop
adc
aaa
mov
shrb
add
cmpb
pop
xor
rorb
inc
mov
mov
addr16
les
outsb
pop
hlt
inc
push
mov
push
ret
rorl
sub
int
ljmp
and
sub
jecxz
cmp
lea
inc
push
pop
push
sub
idivl
cmp
push
cli
mov
adc
pop
push
in
push
test
in
jns
leave
adc
das
rcrb
gs
in
fs
inc
pop
sbb
out
lods
xlat
add
cmp
aad
xorl
dec
loopne
shll
xchg
out
or
mov
sahf
add
inc
mov
pop
loop
aam
xchg
imul
jmp
mov
outsb
add
gs
push
popa
or
inc
xchg
aad
aas
cmp
push
add
inc
dec
add
imul
mov
inc
mov
sti
inc
iret
mov
mov
add
jecxz
lret
add
dec
xchg
jmp
xchg
mov
lret
jg
push
cmpsl
pop
push
adc
mov
ds
jmp
les
push
stos
sub
push
cmp
stos
xlat
push
cmpsb
mov
fistpll
jns
cwtl
mov
mov
cli
shlb
enter
lret
inc
imul
inc
lea
sub
sbb
icebp
out
mov
movsb
sub
mov
dec
dec
das
es
adc
lcall
clc
out
movl
pop
iret
jg
addb
dec
sub
test
clc
cltd
pushf
dec
aam
xchg
jmp
and
xchg
push
jno
sar
inc
mov
sbb
lret
cmp
push
adc
gs
repnz
or
mov
into
xor
sbb
jne
mov
sti
mov
out
push
push
pop
mov
sub
push
stos
pop
dec
or
das
inc
movsl
xor
xchg
popf
jecxz
mov
aas
cmc
inc
aam
cmp
sahf
xor
std
loope
jbe
dec
leave
and
mov
orl
int3
leave
aad
addb
popa
lea
je
pop
mov
cmp
andl
pop
test
leave
push
mov
mov
cmc
stc
inc
rclb
rorl
sbb
test
xor
push
divl
cld
pop
int
loopne
je
addr16
jmp
pop
push
fsubl
add
and
mov
adc
fiaddl
sub
ljmp
loopne
add
sbb
fidivrl
jle
push
sbb
clc
fwait
clc
into
fildll
mov
xlat
xlat
xchg
mov
and
mov
and
adc
or
sarl
imul
repnz
and
xchg
push
daa
fists
or
leave
rcll
outsl
fdivl
or
jb
lods
pop
cwtl
mov
jns
mov
mov
inc
daa
pop
aas
cmp
pop
add
notl
in
subl
and
push
cwtl
test
leave
push
out
mov
mov
cmp
pop
jbe
mov
pop
dec
outsl
test
xor
lcall
mov
dec
out
xor
imul
insl
arpl
shlb
adc
shrl
iret
xor
stos
movsl
aam
cmp
add
pop
mov
aas
and
pop
mov
pop
add
mov
and
cmp
fidivl
je
mov
push
aam
jae
cmpsb
das
arpl
and
sbb
inc
and
or
or
push
pop
loop
jmp
std
shl
sbb
mov
andb
lock
cmp
sub
adc
sar
or
mov
cmp
pop
push
stc
imul
rol
stos
xchg
push
jecxz
bound
jg
cmp
sbbb
insl
outsb
rcrb
or
scas
inc
mov
add
imul
lods
mov
dec
fmull
scas
cli
dec
gs
lahf
inc
or
mov
mov
cmp
dec
and
insb
adc
adc
insl
les
push
clc
jo
daa
push
mov
mov
add
or
push
pop
insb
fmuls
inc
cmpl
pop
xor
and
add
dec
sahf
cmp
cmp
test
inc
lods
push
into
add
lret
pusha
pop
or
mov
pop
or
sub
cltd
mov
fs
jg
scas
jnp
pop
xchg
adc
and
xchg
push
aas
cmpsb
dec
mov
adcl
sbb
lret
sbb
lahf
js
mov
jp
in
xchg
inc
insl
add
cmp
push
or
mov
push
daa
test
mov
mov
push
mov
jne
jno
lods
adc
inc
je
sbb
cmp
jp
iret
push
jp
adc
cmp
xchg
and
sahf
dec
cmp
xor
inc
sahf
adcl
sbb
mov
push
cld
test
xchg
ret
sbb
stc
int
mov
xor
insb
popa
insb
add
sbb
mov
cs
sbb
jnp
mov
jns
mov
xor
outsb
ret
add
mov
dec
mov
cmp
shll
sbb
insl
jbe
add
in
scas
ficompl
cmpsl
or
adcl
push
sub
into
cmp
lds
mov
mov
ljmp
dec
fdivrl
push
stos
in
dec
popf
fisubs
leave
sub
cld
jp
popa
scas
xor
add
inc
shlb
mov
push
push
cmc
in
fucom
pop
ljmp
cmp
pop
mov
or
inc
jle
add
int
test
sahf
xchg
mov
dec
lret
shll
adc
aam
xlat
lret
push
cmp
out
cmp
lahf
roll
jo
push
pop
add
sub
lock
out
xor
cmc
pop
filds
cltd
dec
std
mov
out
sub
int3
inc
js
jecxz
add
stos
push
mov
adc
fimuls
sbb
pop
jne
clc
pop
mov
fbld
xchg
out
fcoml
inc
inc
int3
dec
inc
xor
clc
sub
push
jmp
add
xor
cmp
mov
leave
dec
sbb
cld
stos
addr16
push
loope
out
std
mov
test
ss
xchg
fcmovb
mov
jo
xor
shl
mov
loopne
mov
mov
ss
out
cmp
and
rcrl
adc
push
lret
mov
inc
mov
addr16
and
mov
sub
sub
das
and
inc
push
pop
jp
mov
sbb
ret
xchg
push
cmpsl
jnp
ds
jg
mov
sbb
mov
mov
andb
out
js
mov
mov
mov
push
cmp
mov
scas
das
mov
mov
xor
cmp
mov
pop
or
data16
lcall
inc
mov
cmp
cmp
cmp
popa
xchg
inc
inc
and
addr16
jl
xor
scas
hlt
dec
cmp
xorl
iret
add
stc
ret
jne
ja
mov
push
ja
or
ljmp
fisubl
lahf
push
shll
ficomps
xchg
sub
fcom
loopne
cmc
icebp
stc
add
and
jle
dec
mov
pop
call
xlat
mov
and
push
addl
test
and
adc
add
arpl
sbb
mov
mov
jnp
cmpsb
out
stos
xor
add
add
clc
dec
cs
fidivl
jmp
jmp
leave
jnp
mov
sub
fcmovnu
out
adc
xor
arpl
popa
xor
adc
and
lea
xlat
jp
mov
push
jb
jne
jle
pop
ljmp
and
shll
adc
cmp
scas
daa
mov
lahf
in
daa
inc
je
sbb
mov
xor
pop
cmp
test
sbb
mov
aam
pop
lods
imul
mov
dec
mov
cmp
mov
jb
loope
xchg
repnz
adc
in
mov
xchg
sub
push
xchg
fwait
sub
mov
lea
leave
jne
dec
es
lcall
pop
int3
int
in
into
outsl
jno
rcll
out
shlb
pop
inc
leave
ljmp
and
or
push
pop
stc
inc
stc
std
sets
pushf
mov
lcall
loope
cmc
popl
add
pop
xchg
cwtl
and
or
mov
or
bound
stos
popa
xorl
pop
cmpsl
arpl
fcompl
mov
add
xchg
out
jns
or
xor
fbstp
inc
out
incb
pop
dec
sub
js
push
mov
or
mov
inc
int3
ficoml
addb
es
jo
adc
dec
outsb
and
daa
enter
sbb
in
ss
jb
ljmp
arpl
fs
data16
mov
in
mov
shlb
clc
inc
fneni(8087
aas
repnz
push
es
jne
in
aas
popa
pop
jne
sub
xor
sbb
leave
popf
pop
fdivs
jno
aam
test
xchg
sahf
push
adc
mov
repz
and
cmpsl
mov
cmp
bound
scas
cmp
popa
bound
sub
add
ljmp
mov
dec
inc
test
in
xor
or
fldenv
jmp
xchg
cli
cmp
xchg
mov
xor
inc
lock
lea
das
pop
out
sub
mov
dec
mov
fildl
jmp
jne
pop
xor
iret
shlb
loopne
fwait
and
cli
mov
add
xchg
push
adc
add
adc
iret
data16
pop
jno
enter
out
jmp
cwtl
pop
insb
cmp
and
aad
jg
sbb
mov
fdivl
gs
or
jne
xchg
sbb
aas
or
xchg
repnz
mov
cmp
cmpsb
aam
sub
sub
mov
inc
call
cmpb
inc
or
xor
mov
ljmp
cmp
shlb
fwait
ds
arpl
decb
xchg
cmc
imul
and
add
imul
fs
xchg
xor
inc
inc
pop
pop
pusha
and
stos
xor
or
outsl
jae
outsb
cld
or
cltd
cmpsl
js
stos
xchg
sahf
push
sub
in
lds
mov
ds
inc
iret
scas
scas
xor
xor
int3
dec
mov
add
xchg
lods
xor
js
loop
out
cmp
notl
imul
dec
xor
push
xor
push
fsts
mov
cmpsb
adc
inc
dec
push
outsl
jmp
shl
stos
scas
dec
dec
push
fistpl
ss
repz
sub
lods
add
icebp
mov
outsb
jae
or
mov
stos
xor
push
sbb
mov
or
stos
fs
gs
bound
xchg
ficoml
cmp
mov
jae
lds
jae
mov
cmpsl
out
mov
xchg
and
and
lods
adc
sti
dec
shrl
bound
mov
or
bswap
jnp
div
jno
rcr
inc
test
popf
push
pop
jno
mov
or
cmc
gs
xchg
inc
dec
dec
out
imul
loope
mov
mov
push
push
mov
mov
ret
jb
pop
push
lret
cld
sub
cmp
add
adc
popf
sub
loop
adcb
fwait
mov
in
sub
sbb
jmp
fadd
in
jbe
bound
dec
cmc
out
sahf
int3
outsb
sub
pop
lahf
mov
stc
xor
shrl
mov
test
rcr
push
push
dec
iret
movsb
cmpb
mov
mov
int
jle
dec
mov
inc
mov
mull
mov
xor
cmc
sub
test
scas
es
adcl
clc
and
xor
fildl
arpl
inc
int
or
int3
cmp
aam
divb
rorl
or
mov
jo
stos
ret
mov
outsl
ds
int3
push
scas
mov
fisttpl
leave
popf
jl
cmp
push
into
sbb
and
fcoms
inc
jne
cmpsb
jl
lcall
rclb
inc
or
iret
add
cmp
movsl
pop
inc
push
and
and
int3
pop
pop
and
sti
mov
mov
call
jmp
mov
sub
push
push
or
rcll
sub
cmp
mov
sbb
cli
mov
pusha
and
je
cs
mov
or
xchg
sbb
inc
dec
sub
pop
orb
xchg
xchg
out
test
lret
lods
add
movsl
std
xchg
cwtl
dec
add
xor
jo
jp
adc
repz
in
popa
sbb
jge
mov
ret
mov
lahf
les
in
aam
loopne
fmull
push
dec
idivl
nop
and
xor
mov
adc
cli
jae
stos
pop
cltd
cmpsl
mov
stos
lods
sahf
push
sub
gs
pop
add
add
dec
xlat
pusha
ljmp
lods
ss
sub
pop
mov
add
xchg
inc
adc
aam
push
fnsetpm(287
dec
push
mov
sbb
push
xor
nop
loope
loop
push
sub
mov
mov
stos
or
je
ja
push
adc
lret
cmp
hlt
sub
nop
mov
lods
ficomps
pop
mov
inc
mov
sbb
pushf
mov
je
stos
int
push
arpl
pop
out
stc
stc
stos
ficoml
inc
cmp
adc
jg
mov
adc
stc
fwait
dec
out
jns
in
pop
mov
add
shl
in
popf
es
bound
cmc
vfrczsd
sub
mov
dec
push
push
push
or
ljmp
lods
jle
pushf
das
test
nop
push
mov
loop
ret
jg
mov
adc
cld
sub
out
std
mov
dec
pop
test
push
les
sti
pushf
xor
decl
das
and
sub
nop
add
lret
cli
hlt
add
pop
adc
es
mov
popa
adc
push
jb
mov
addl
add
adc
xor
xor
cld
lods
loope
dec
mov
fisttpl
cld
inc
clc
test
popa
adc
outsb
add
mov
roll
inc
push
out
roll
and
xor
dec
shrb
push
sub
pop
add
sub
push
add
add
add
push
outsb
inc
insb
xor
cs
insb
add
add
add
push
add
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
add
in
push
push
push
pusha
call
pop
sub
mov
sub
mov
add
lea
mov
xor
jmp
nop
jmp
ret
enter
sub
clc
dec
xor
jmp
ret
jmp
sub
add
add
jmp
jmp
jmp
jmp
rol
icebp
sub
stos
loop
xchg
popa
mov
daa
mov
loopne
ret
faddl
movb
mov
loop
lds
cmp
jnp
sbb
aaa
dec
inc
jecxz
mov
idiv
dec
je
cmpsl
mov
jne
xor
sub
pop
mov
mov
mov
imul
scas
fsubl
lret
inc
pop
mov
sub
xchg
in
movsl
mov
push
sbb
sub
in
mov
pop
pop
mov
les
mov
xor
cltd
lahf
push
cmp
fs
pop
mov
inc
mov
pop
pop
fstps
mov
push
sbb
sbb
pop
push
fsubr
pop
sti
leave
add
into
push
xor
cwtl
testl
jne
je
or
sub
repnz
xor
lret
les
push
mov
fs
and
push
or
lret
add
fadds
imul
inc
push
mov
cmp
mov
rolb
sbb
sti
mov
mov
jno
add
jg
push
push
jne
or
outsb
shl
sarb
mov
mov
xor
scas
dec
xor
lock
insb
mov
jb
sub
lods
aas
xor
stos
daa
sub
cs
fists
cmp
sub
sahf
add
add
call
push
or
loopne
ljmp
sbb
dec
or
pop
pop
mov
jns
mov
mov
fcoms
pop
shrb
std
addl
aam
push
jnp
add
rcll
cltd
fstps
or
push
das
hlt
cmc
notl
lret
jmp
in
hlt
xorb
jecxz
lea
sub
addr16
fldl
out
outsb
push
rolb
lds
or
stos
inc
add
sub
cmpb
loopne
pushf
cmpsl
aaa
xchg
nop
std
mov
sub
sarl
add
dec
xor
outsb
mov
clc
dec
je
scas
mov
xor
pop
xor
lods
push
packssdw
lock
mov
ss
stc
hlt
lds
add
in
push
lods
inc
sub
imul
ficoms
push
and
sub
movsb
aaa
sub
mov
mov
iret
add
fxch
je
daa
sbb
popf
gs
daa
movsb
test
sbb
out
cltd
insl
loop
loope
fstps
pop
pop
mov
lods
fistpll
inc
not
xchg
dec
aam
popf
lcall
adc
xchg
pop
fldcw
cs
das
cld
cmc
notl
xlat
icebp
push
mov
fidivrl
push
jbe
dec
lahf
mov
adc
test
cs
nop
push
int
push
xchg
inc
pop
push
cmp
int3
jmp
lret
sub
and
inc
inc
and
inc
lahf
hlt
cmpsl
inc
pop
mov
adc
leave
ss
test
neg
jp
aaa
loope
ret
push
mov
push
aaa
pop
lods
jmp
push
pushf
leave
into
cmc
mov
push
loop
cltd
dec
jne
ss
clc
jg
data16
test
adc
movsb
and
dec
sub
jb
cmp
sub
mov
cmpsb
out
cmp
lods
in
push
subl
jecxz
add
out
jb
stos
push
sub
stos
and
out
add
paddusb
mov
loope
add
pop
js
push
mov
xor
mov
cmp
cwtl
fdivr
les
cmpsb
mov
mov
fistps
out
rcl
int
mov
lcall
mov
rclb
lret
dec
jmp
push
push
int
inc
test
inc
cs
push
push
aam
dec
in
arpl
push
and
mov
inc
lret
addr16
fbld
rorl
inc
sbb
inc
adc
andl
loopne
add
xchg
hlt
mov
push
mov
sbb
fldt
xor
repnz
jne
jp
outsb
scas
out
inc
outsl
daa
icebp
out
jae
sbb
xor
test
scas
out
data16
mov
push
mov
pop
mov
inc
sbb
inc
daa
sbb
push
inc
inc
and
lsl
adc
outsl
popa
add
enter
xchg
pop
mov
dec
push
je
jne
mov
sbb
mov
jae
push
sbb
push
dec
pop
dec
push
scas
xchg
insb
pop
push
xchg
push
enter
add
xor
xchg
or
imull
add
push
and
insb
or
xor
xchg
ret
jmp
xor
add
pop
xchg
jp
push
in
insb
pop
std
jg
jecxz
and
add
jecxz
xor
sbb
pop
pop
add
jbe
sti
push
xor
mov
inc
push
mov
mov
or
imul
aad
ljmp
out
out
movsl
inc
outsl
jp
lret
out
call
xchg
out
insb
mov
roll
mov
fs
jmp
mov
and
mov
inc
clc
and
cmp
cmp
loopne
jb
mov
ja
ds
fistps
adc
push
sbb
repz
jno
jb
mov
pop
xchg
rclb
shlb
mov
aaa
cs
pop
int3
in
imul
xchg
lret
cmpsb
data16
sub
gs
dec
jmp
or
into
lods
inc
cmc
test
pop
sbb
inc
xchg
in
out
add
inc
adc
dec
orl
les
stc
xchg
push
les
mov
mov
rolb
push
repz
iret
dec
push
cmp
push
lods
ja
jns
pop
movb
jb
lds
xlat
push
mov
ss
movsl
lock
insb
mov
popf
push
hlt
in
subl
jno
mov
mov
out
data16
and
lods
lret
xchg
xchg
inc
and
fisubl
xor
mov
pop
sahf
dec
pop
out
fisttpll
mov
mov
sbb
and
push
xchg
push
cltd
xlat
push
push
bound
xchg
out
lahf
sbb
pop
xchg
in
es
or
push
scas
fwait
cmc
notl
nop
jb
mov
jmp
rcr
mov
dec
jae
iretw
mov
fs
out
inc
scas
lea
xchg
push
add
xchg
dec
or
xor
dec
enter
sahf
inc
lahf
mulb
inc
ret
lds
cmp
stos
fwait
mov
fs
call
jge
xchg
xchg
aam
fisttpll
aad
jbe
sbb
fwait
xor
xchg
js
insb
inc
jp
xor
jmp
push
xchg
xor
mov
cmp
mov
bt
xchg
lret
lahf
adc
movsb
dec
or
dec
andl
aam
gs
dec
add
push
scas
mov
inc
mov
mov
and
mov
loope
stos
adc
sbb
dec
in
out
aad
push
test
xlat
ja
jecxz
shrl
mov
pop
jb
lea
ror
jg
xchg
sub
mov
dec
cmp
les
mov
sbb
cmc
push
imul
mov
push
sub
adc
fisubl
sbb
fs
xor
xchg
and
dec
cs
out
push
fwait
rorb
stc
lret
adc
dec
mov
jae
stos
stc
divl
push
stc
addr16
repnz
imul
mov
push
adc
push
jmp
lcall
rcll
cmp
outsl
xchg
push
push
loopne
dec
mov
clc
mov
adc
inc
std
pop
out
mov
js
mov
das
push
lods
call
jo
cmp
push
mov
stos
pop
pop
repnz
imul
sbb
imul
pushl
xchg
pop
shll
in
sti
das
pop
cltd
stc
repnz
mov
and
mov
lds
push
jno
aam
push
test
push
mov
push
repnz
clc
stos
rorl
subb
inc
test
bound
or
mov
add
das
add
leave
sbb
pushf
fs
pop
jg
cmp
xor
add
mov
mov
popf
cmpl
lahf
sbb
mov
hlt
xor
add
push
cli
cmp
inc
mov
ja
divl
jbe
out
cs
lods
cmc
xor
jb
lret
pop
imul
call
xchg
in
data16
out
gs
lods
in
sub
movsb
jecxz
arpl
jmp
and
out
cmpsl
out
pop
sahf
fstpl
in
sbb
ficompl
mov
fstps
pop
cwtl
fcoms
pop
lahf
fistps
pop
xchg
adc
pop
pushf
fcompl
push
xchg
rcll
push
sbb
fstps
xchg
rclb
push
nop
iret
xlat
pop
push
xchg
push
dec
int
push
xchg
aam
push
xchg
lret
or
lret
xchg
rcll
dec
mov
or
into
push
push
inc
test
add
mov
add
ret
mov
or
rolb
cmpb
jle,pt
std
std
lds
jnp
sti
cmp
ret
cmpl
jbe,pt
divb
jl
hlt
xor
xor
cli
cmp
mov
xor
cmp
divl
jbe
out
cs
lods
cmc
xor
imul
xor
jmp
mov
das
outsl
scas
out
data16
out
gs
lods
in
sub
movsb
jecxz
arpl
jmp
and
out
cmpsl
out
pop
sahf
fstpl
in
sbb
ficompl
mov
fstps
pop
cwtl
fcoms
pop
lahf
fistps
pop
xchg
adc
pop
pushf
fcompl
push
xchg
rcll
push
sbb
fstps
xchg
rclb
push
nop
iret
xlat
pop
push
xchg
push
dec
int
out
ficompl
jb
pop
fcompl
xchg
rcll
dec
insl
pop
into
sub
aad
push
sbb
xchg
dec
xchg
xlat
xchg
in
or
mov
mov
rcll
dec
inc
cmpb
int3
xchg
push
mov
push
rcll
ret
sbb
add
jbe
divb
or
cmp
inc
mov
push
jp
mov
add
scas
out
cs
les
jne
stos
jmp
push
push
mov
dec
je
mov
das
outsl
scas
out
dec
out
scas
jmp
sarl
jns
arpl
inc
idivl
out
outsb
in
insl
mov
lods
sahf
dec
stos
movsb
add
add
add
