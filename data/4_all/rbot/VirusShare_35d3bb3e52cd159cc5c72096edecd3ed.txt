mov
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
rclb
add
stos
pop
pop
cld
std
jmp
data16
sub
test
enter
imul
cmpl
push
add
lea
loop
add
test
sar
mov
ss
add
or
add
push
pushf
dec
dec
adc
flds
insl
or
push
daa
pushl
or
add
jmp
mov
jge
test
push
pushl
pop
and
imul
add
inc
add
xchg
pop
leave
ret
add
push
add
sarb
inc
adc
fstps
mov
add
mov
or
push
in
mov
sbb
aam
andw
cmp
decl
test
adc
pop
stos
rcr
mov
xorb
sbb
add
jne
iret
mov
sbb
and
sbb
insb
sbb
cld
pop
adc
ret
jae
mov
push
clc
lahf
adc
aaa
pop
cmp
sbb
sub
sbb
mov
loopne
add
push
lea
mov
sbb
add
out
sbb
or
stc
pop
xor
pop
inc
fsubl
fmul
mov
push
dec
mov
mov
scas
lea
cs
inc
add
dec
stos
cmp
or
imul
xchg
cmp
dec
rorb
push
mov
jbe
cmpl
popa
das
push
cmp
in
jmp
inc
jo
inc
xor
adc
jmp
adc
add
jecxz
mov
push
xchg
flds
pop
xchg
xor
sbb
push
jno
mov
or
adc
sbb
sbb
in
mov
mov
ds
and
cmp
xchg
inc
pop
sbb
mov
lahf
mov
outsb
aaa
sbbb
sbb
call
sbb
mov
adc
mov
das
je
sbb
mov
push
pop
ja
bound
lea
cld
es
unpcklps
cld
jne
dec
dec
cwtl
jns
pop
adc
cld
inc
jae
mov
jp
mov
fmul
cmpsl
je
mov
addl
xor
hlt
lock
std
inc
cwtl
add
sub
pcmpeqd
xor
rorl
add
movsl
aas
hlt
clc
hlt
cli
sbb
push
loope
imul
jge
push
clc
cmp
cmp
clc
hlt
hlt
lock
out
lock
shl
xorb
add
jecxz
pop
sbb
adc
sbb
sub
or
lcall
sub
movl
mov
call
pop
sub
xor
sar
pop
add
dec
paddsb
or
lret
mov
lock
addr16
data16
lea
pusha
insl
imul
subb
in
add
mov
out
push
aam
push
or
jecxz
adc
popa
fadd
aaa
in
cld
push
shl
aam
mov
jb
xor
cmp
jae
mov
fdivs
jmp
fwait
mov
jne
or
push
xor
and
inc
xchg
mov
ss
mov
xchg
insb
xchg
lea
jnp
mov
aaa
ss
in
call
add
xchg
push
loopne
jmp
pop
addr16
push
push
mov
push
add
decl
xchg
and
or
jp
or
sub
adc
bound
mov
jle
adc
aas
adcb
mov
sbb
cmpsb
repz
and
out
push
cs
sub
xchg
xor
stc
inc
in
fwait
andb
add
test
push
push
pushf
out
cmp
lea
loope
sbb
pop
xor
fisttpll
lea
fs
out
loope
cltd
roll
lcall
stos
in
negb
out
sahf
arpl
incl
sbb
shlb
sarb
and
mov
jecxz
lahf
outsl
xlat
inc
pop
add
jmp
jl
adc
mov
les
inc
jecxz
sahf
add
jns
push
sub
in
cld
xchg
adc
je
cmpsl
loop
jp
push
dec
enter
movzwl
shll
insl
lea
cmc
in
mov
cmp
pop
mov
hlt
out
roll
jmp
jmp
push
orb
adc
xorl
mov
and
popf
add
add
xor
in
inc
mov
pop
lea
mov
or
into
pusha
outsb
not
sbb
inc
loope
lods
push
mov
and
sahf
gs
mov
movsb
mov
fs
push
add
push
mov
dec
xchg
pop
sub
mov
imul
add
pop
push
aad
and
jmp
push
and
sub
mov
outsl
mov
les
mull
xor
sub
ja
jns
and
mov
xchg
cmp
rcrb
add
mov
add
adc
gs
cmc
adc
dec
push
jae
push
inc
lahf
insb
or
je
aad
jb
call
push
jecxz
xchg
aas
cld
sar
dec
aam
and
dec
or
test
ret
sbb
loopne
je
push
xor
hlt
mov
pop
sub
fisttpll
or
jo
out
fs
call
jecxz
in
sbb
add
push
lods
jae
push
addr16
or
xchg
jo
mov
repnz
cltd
mov
outsb
call
mov
outsl
push
or
and
ljmp
mov
or
add
fstps
mov
mov
sbb
cmp
mov
sub
mov
pop
mov
icebp
mov
popa
push
push
out
in
stc
mov
adcb
pop
dec
push
shrl
loopne
mov
xor
adc
movl
sub
addr16
mov
cmp
ja
outsl
fdivr
cmp
adc
les
out
ss
stc
int
shrl
jl
aam
dec
jo
mov
inc
iret
adc
and
aam
out
loope
mov
out
and
push
cmc
insb
aam
lock
call
or
sub
push
lret
lret
int3
cltd
cmp
int3
pusha
ljmp
dec
mov
jle
stos
mov
jmp
das
push
fnstcw
in
and
int3
lods
sbb
ljmp
add
add
or
cmp
or
or
inc
mov
gs
pop
and
mov
adc
lea
mov
xchg
sbbb
sbb
add
sbb
stos
inc
popa
leave
pushw
icebp
xchg
clc
lds
mov
jno
ja
or
push
fcompl
hlt
mov
inc
loop
sub
add
sbb
out
dec
jbe
pop
mov
jae
jge
push
cmp
jp
shll
dec
inc
cld
bound
sbb
add
mov
mov
fstps
and
push
cmp
mov
dec
in
jl
mov
loopne
adc
push
push
add
in
inc
popf
push
shrb
mov
mov
add
clc
jno
mov
xchg
out
je
sahf
movsb
das
push
iret
test
lea
rcrl
mov
int
cmpb
dec
push
mov
xor
jge
sbb
cwtl
pop
fadd
jo
sbb
andb
lret
pop
ljmp
or
sub
loop
sub
lock
hlt
inc
hlt
mov
lock
test
cmp
sub
test
jl
mov
jbe
push
mov
pop
jns
cmp
adc
sbb
cli
inc
je
pop
mov
mov
andb
sbbl
mov
cli
movsb
lods
inc
inc
adcl
sbb
int
pop
lret
lahf
dec
vmwrite
add
add
mov
sub
ja
push
xchg
inc
fcom
push
sahf
xor
jecxz
cmpsl
pop
adc
pop
notb
mov
xor
gs
and
xor
jecxz
push
xchg
lock
leave
xor
xchg
insl
lock
xchg
call
jge
pop
sbb
loopne
jle
mov
jmp
mov
xchg
lds
push
sbb
sub
and
cmp
push
pop
hlt
in
dec
sbb
push
mov
mov
and
mov
mov
fwait
xchg
inc
push
ret
xchg
or
mov
mov
pop
and
inc
xchg
cmp
cmp
mov
push
gs
and
mov
clc
shrl
sub
jae
xchg
popa
push
stc
or
and
pushl
leave
or
sbb
or
mov
xchg
cmp
fwait
xchg
rcrb
jb
not
jns
mov
mov
mov
jo
andl
cltd
push
fldl
fsubrl
in
mov
js
sub
dec
add
mov
inc
iret
in
ret
push
stc
incl
call
jae
iret
push
stc
pop
xor
clc
push
pop
push
sbb
mov
mov
push
pop
fwait
call
outsb
lret
jecxz
and
or
mov
adc
aad
aam
xlat
mov
xorb
adc
mov
js
lods
outsb
in
inc
test
pusha
stc
lea
pop
loop
and
subl
sarb
adc
ss
in
mov
pop
mov
or
mov
stos
mov
popf
out
inc
iret
xchg
mov
test
sub
lds
jns
push
push
push
je
rclb
dec
insb
mov
popa
dec
std
test
mov
or
pop
sbb
dec
scas
dec
arpl
or
imul
lea
call
orl
imul
xor
pop
push
mov
push
cmpsl
or
mov
int
push
insb
hlt
push
cld
push
insb
xchg
ja
in
ja
push
loope
fidivs
jbe
push
bound
jbe
sbb
sub
push
jbe
pop
lret
xchg
shl
sub
mov
orb
inc
mov
sub
in
and
int3
addr16
in
xchg
sub
push
fcomp
mov
add
push
test
xor
jne
jmp
in
mov
pop
cmp
clc
inc
cmp
lock
iret
adc
push
jle
loopne
push
xchg
xchg
lret
sub
hlt
lods
jp
mov
xor
je
rcr
je
in
dec
xor
xchg
in
mov
loope
je
inc
dec
imul
push
addr16
in
call
lea
pop
imul
ss
mov
dec
jb
jl
ds
add
mov
clc
jle
out
pop
nop
xchg
cwtl
jns
pop
lcall
fs
lods
mov
in
es
movsb
mov
loopne
stc
sub
cmpsl
pop
sbb
cmp
and
lea
test
sbb
push
lea
in
mov
sarl
ja
mov
test
push
cmp
stos
aas
lret
fs
xchg
mov
pusha
aad
jb
sub
in
insb
xor
push
sub
mov
push
xchg
je
add
push
cmp
adc
cmp
pop
in
push
xor
and
in
lcall
call
inc
lcall
cmp
push
mov
aam
xor
pop
sub
mov
icebp
lods
lods
lods
mov
mov
andl
mov
xor
mov
cmp
mov
test
in
mov
enter
imul
adc
jg
add
ja
hlt
sub
jb
push
popa
aam
loopne
adc
mov
adc
mov
xor
test
push
andl
popa
pushf
adc
popa
pop
shl
and
or
add
clc
clc
fcomps
sub
sub
mov
jecxz
movsb
je
icebp
cmp
pop
mov
sbb
mov
cwtl
cwtl
mov
in
lods
je
jno
or
mov
add
push
lahf
cmc
cwtl
and
fs
mov
jmp
cmp
fwait
jno
lea
push
repz
addr16
test
icebp
cmpl
js
inc
out
jns
stc
dec
shrl
push
hlt
mov
push
in
sub
push
iret
xchg
das
rclb
fisttpll
cmp
push
xchg
mov
loopne
int3
test
out
hlt
outsb
popf
sbb
jle
movsb
sbb
js
pusha
pushf
into
clc
mov
mov
in
lret
frstor
xchg
pop
xor
std
cmp
xchg
and
leave
cmc
xchg
jne
pop
sub
sbb
icebp
out
cld
ja
mov
data16
sbb
pushf
sbb
stc
icebp
pop
in
push
negl
enter
mov
cltd
icebp
xor
add
mov
divl
cs
mov
jecxz
xor
shlb
adc
xor
repnz
test
push
in
mov
jecxz
sub
mov
scas
cmpsb
sub
dec
mov
imul
cld
add
test
movsl
nop
mov
icebp
mov
and
imul
cmpl
push
xor
cld
pop
jnp
mov
mov
mov
cmpsb
dec
int3
lea
das
mov
cmp
cmp
push
and
test
mov
sbb
mov
sub
dec
jnp
je
and
lds
call
fs
subl
or
pop
xchg
jns
sub
into
mov
mov
psubb
pop
pop
push
dec
sti
arpl
or
je
push
xchg
outsl
lahf
test
out
lret
fwait
push
lods
pusha
fimull
mov
daa
lods
and
pop
xchg
push
xchg
jmp
push
add
in
and
scas
pop
sub
jmp
mov
ljmp
mov
ret
lock
mov
cmpsb
cmp
push
in
sbb
mov
sbb
aam
cld
dec
mov
stos
shr
or
add
add
mov
xor
and
xor
or
not
pushf
std
sbb
push
jb
dec
pop
cmpsl
fisubl
shll
cmc
mov
cmp
hlt
sub
popa
adc
inc
hlt
hlt
inc
jae
rolb
lcall
and
jmp
dec
push
xor
popa
testl
mov
mov
add
ret
push
test
mov
lds
jecxz
les
add
int3
or
push
ret
loope
cmp
and
dec
rorb
shrl
rorb
sbb
xchg
and
cmp
daa
sub
xchg
loope
pop
fsubrs
fstps
fisubrl
sbb
fcompl
fisttpll
fimuls
loopne
push
xchg
loope
add
push
jecxz
in
loope
cmp
adc
or
xchg
ljmp
adc
loope
cmp
push
out
dec
lock
adc
inc
cmp
xchg
pop
hlt
aaa
cmc
sbb
ret
loope
push
clc
sub
inc
cli
sub
pop
orb
and
push
push
dec
out
add
fmull
jle
mov
std
cmp
stos
xchg
mov
orl
or
lea
inc
shr
shl
lods
loop
je
cmp
xchg
mov
push
pop
mov
mov
cmpsl
push
test
jmp
jmp
push
addr16
mov
fcompl
or
int3
sub
imul
ljmp
lret
pop
add
mov
ficoml
faddl
xchg
in
test
cs
loope
mov
dec
mov
daa
fisttpll
outsb
cmp
daa
jecxz
in
or
jae
xchg
mov
xchg
mov
mov
jmp
cmpsl
mov
les
imul
popa
loope
lea
rorl
add
mov
in
pop
and
add
push
sub
sbb
fisubl
fmuls
xchg
incb
sub
lock
add
xor
push
stc
push
xlat
push
ljmp
imul
mov
test
je
sbb
leave
or
push
xor
out
jg
mov
sbb
push
push
mov
lock
push
lods
call
xor
repnz
push
push
in
add
push
movsl
push
mov
sti
movsb
loop
in
nop
pop
xor
cmp
adc
jecxz
sub
adc
adc
into
mov
xor
pop
xor
das
insl
pop
int
adc
movsl
js
xor
mov
jo
mov
movlps
int3
fdivrl
test
fsubrl
sbb
dec
cmp
jne
mov
and
sbb
xchg
mov
stos
pop
mov
jl
adc
int3
lret
jl
fst
orl
inc
adcl
push
inc
and
into
xlat
lahf
fisttps
int
pop
xor
sub
out
int
pop
jne
add
push
int
dec
clc
movsl
leave
mov
movsl
jno
imul
addb
add
cmp
mov
xchg
sub
pop
xor
add
sub
xchg
aas
je
les
add
rol
cmpsl
stos
xchg
outsl
push
daa
lea
dec
rcrl
mov
jae
out
or
das
jge
in
test
pop
outsl
inc
dec
jecxz
mov
imul
adc
inc
mov
dec
idivl
ret
inc
in
cmpsb
jns
jae
cmp
lock
sub
inc
out
ja
pop
pop
inc
push
jns
lods
add
pusha
jmp
jmp
sbb
call
push
jmp
push
cmp
xor
fwait
test
jae
mov
gs
cld
push
xchg
sbb
or
xor
xchg
add
les
mov
and
pop
xchg
dec
dec
call
mov
sti
mov
jb
xor
scas
sbb
icebp
or
xchg
out
xchg
ljmp
sahf
jo
mov
mov
jmp
jp
or
mov
mov
mov
out
cmp
jmp
iret
add
and
push
or
or
push
fmuls
push
or
adc
enter
ret
icebp
cmp
insb
call
call
ljmp
sub
dec
ret
mov
push
or
fsubs
inc
xchg
rolb
repnz
mov
repz
jp
clc
jmp
push
cld
mov
mov
mov
scas
insl
dec
mov
ficoml
push
xchg
stos
xor
cmpsl
loop
hlt
inc
sbb
test
out
jle
xor
hlt
shufps
and
popf
ds
in
add
or
rcll
insl
lods
or
scas
insb
fs
enter
xor
out
push
lods
push
inc
cmp
je
pop
leave
and
mov
popf
scas
adc
xchg
aam
add
ljmp
loop
cmp
inc
push
fwait
repnz
aad
mov
mov
push
dec
push
cmc
imul
push
jecxz
testb
cmp
inc
sbb
dec
jno
dec
mov
outsb
popa
arpl
cmp
divl
adc
fldl
hlt
movsl
loop
std
fsubl
push
xor
inc
cmp
addr16
cmc
leave
daa
dec
iret
xchg
ret
in
xchg
out
cmc
std
pop
je
lock
adc
nop
les
jae
push
stc
call
insb
push
lret
jb
decl
cmp
test
cwtl
and
adc
xlat
inc
inc
out
sbb
int
pop
inc
stos
dec
or
cmp
adc
test
and
and
daa
mov
cmc
pop
jmp
jmp
xchg
movsb
gs
ror
jo
xor
jmp
xor
out
repnz
dec
add
mov
adcb
sti
sbb
es
jp
je
mov
inc
add
inc
push
xchg
xor
jmp
sbb
outsb
stc
push
hlt
cwtl
pusha
pushf
xchg
pusha
jmp
cli
or
fdivs
negb
mul
cmc
out
dec
enter
int
or
outsl
sub
sbb
popf
fadd
test
daa
cmpsb
jecxz
shl
out
push
lea
mov
mov
xor
pop
popf
sbb
xor
inc
adc
fldenv
aam
in
hlt
icebp
pop
in
clc
lods
xchg
mov
cmp
pushf
aad
sub
xor
push
mov
sarl
jle
mov
lods
sub
sub
mov
mov
pop
subl
movsb
jo
jne
mov
jne
inc
jns
js
gs
mov
loop
and
cmp
xchg
cmp
mov
mov
iret
pop
loope
adc
jl
add
pop
mov
js
push
enter
in
rol
enter
cltd
mov
jbe
sbb
jg
or
call
adc
dec
cmp
inc
and
add
ljmp
stc
and
mov
movsl
jp
cmpsb
stos
xor
add
test
jl
sub
test
aam
cli
add
lods
and
mov
les
fdivs
inc
push
xchg
fisubrl
mov
cmp
pop
add
jmp
dec
sub
fadds
jmp
clc
jmp
daa
adc
push
fcmovb
sub
inc
add
dec
vaddsubpd
cmp
icebp
sbb
mov
dec
xchg
inc
mov
or
mov
fistl
jl
sbb
es
enter
fsubrl
call
in
lcall
mov
fwait
mov
or
jno
outsl
push
fs
dec
push
loop
std
push
jnp
add
fdivrl
arpl
icebp
cmp
pop
aad
fs
mov
adc
mov
cmpsl
cmovb
fld
int
and
lock
fwait
jl
xor
sti
shlb
or
add
pusha
cmpsl
mov
add
mov
cmp
mov
daa
add
sahf
scas
rep
stos
mov
nop
mov
adc
dec
lock
push
fistpl
push
imul
jl
fwait
lods
lds
mov
fcmovnu
ss
cs
pusha
inc
addr16
icebp
adc
fimuls
es
mov
dec
sub
jnp
push
sub
add
sbb
xor
adc
imul
push
jo
fyl2xp1
jl
popf
sbb
jmp
call
test
fdivr
sub
sub
mov
or
mov
xchg
xchg
into
stos
and
out
iret
push
stc
test
in
iret
lock
cmp
hlt
mov
rcr
push
call
add
inc
sub
push
fcoms
test
stos
aas
xor
xor
push
fdivs
dec
pop
mov
not
sti
mov
pop
xchg
cmpsb
pop
into
into
fnstenv
shll
int3
cltd
push
pop
idiv
cmp
dec
push
adc
data16
inc
mov
jmp
lods
aaa
cld
dec
cmp
pop
mov
es
enter
lcall
push
movsb
test
jmp
xor
xlat
push
aaa
sbb
mov
xor
ljmp
push
ss
int3
fildll
subb
loopne
sbb
mov
add
movsl
sbb
cmp
test
daa
cmp
jne
push
inc
popa
enter
push
in
or
xor
ret
mov
or
or
inc
lea
dec
cmp
icebp
inc
mov
inc
or
push
mov
mov
add
jecxz
adc
subb
repz
test
in
into
cmp
cmp
icebp
into
rorb
inc
push
mov
sahf
push
bnd
sbb
jae
shrb
enter
in
sub
popa
pmaddwd
repnz
adc
aaa
les
mov
cmc
jne
paddusb
cmp
mov
dec
insl
or
das
dec
inc
push
aas
int3
out
enter
inc
je
push
shrb
jl
nop
daa
adc
jns
push
shlb
rclb
inc
jp
aam
shr
sub
cmp
das
loopne
iret
rcrb
adc
xchg
out
flds
mov
mov
sbb
paddsw
std
shll
lea
push
jbe
mov
add
movsbl
cmp
je
sarl
xor
gs
movsb
scas
stc
ds
and
fs
fiaddl
and
fnstenv
into
fcmovb
mov
add
sub
stc
xchg
lods
mov
loop
in
jl
cld
mov
mov
rclb
sbb
pop
xchg
in
or
cmp
cld
addr16
push
movsb
movsb
adc
inc
cmp
es
lcall
int
data16
sub
dec
pop
dec
popf
fldt
lea
lret
jp
mov
add
movsb
jl
mov
or
pop
xlat
xor
fsubrp
ljmp
sub
ja
or
lahf
loopne
push
jge
xchg
add
mov
mov
data16
and
lret
inc
mov
sub
lret
mov
sbb
mov
cltd
adc
inc
xchg
enter
cmp
clc
fmul
hlt
pop
jl
dec
fsub
pop
push
jmp
sbb
sbb
cmp
and
jecxz
sti
push
dec
sub
and
stc
arpl
lods
xchg
pop
ret
lret
lods
popf
ss
iret
imul
mov
inc
inc
lds
repnz
enter
xchg
test
mov
push
and
pop
rolb
aas
test
int
scas
dec
in
ljmp
jge
mov
dec
mov
jbe,pt
ss
test
aad
pushf
inc
or
jmp
adc
in
js
push
sbb
les
loopne
and
sbb
add
pop
lret
fsubl
sub
inc
or
jno
mov
adc
cmp
add
fcompp
sbb
fnstsw
mov
mov
rcl
mov
lcall
pop
xchg
sub
test
sbb
dec
xor
add
into
cmp
and
pop
fstps
mov
neg
shlb
pop
in
push
mov
jne
stos
push
jmp
inc
rolb
inc
fsubrs
jmp
inc
push
mov
pop
mov
insl
mov
pop
fsubr
ret
je
sub
cli
jo
ljmp
iret
or
mov
add
mov
mov
jbe
shll
mov
adcb
call
inc
cltd
movl
les
dec
sti
xor
push
mov
hlt
leave
mov
pop
daa
in
data16
jo
in
scas
xchg
movsb
xchg
andb
push
cmp
jmp
insl
dec
std
push
fwait
scas
inc
test
xor
xchg
jb
pushl
jnp
pop
push
sub
lret
xchg
jl
xor
cmpsl
lahf
sub
pop
xchg
push
enter
or
rcrb
fdivs
sbb
cmp
test
lcall
inc
push
jmp
inc
sub
stos
inc
inc
lock
xchg
push
sbb
cwtl
pushf
rol
jp
pop
fmuls
rcrb
push
or
js
xor
jecxz
cmp
jl
sbb
pop
fisubrs
inc
adc
sbbl
pop
test
sub
shrb
jmp
push
gs
cltd
test
mov
add
add
dec
dec
xchg
pop
xchg
in
fs
push
xchg
xchg
stos
xchg
sahf
mov
inc
popl
xor
shl
jnp
adc
mov
sbb
addr16
popf
loop
cwtl
loope
mov
or
daa
mov
arpl
ret
addl
mov
or
push
add
into
in
rolb
jo
pop
xchg
popf
or
push
cmp
push
hlt
data16
cmc
loop
xor
push
mov
mov
inc
mov
loope
sub
into
adc
mov
sbb
mov
add
cltd
mov
addl
lcall
jl
adc
push
fcmove
push
rcl
or
call
cmp
in
adc
inc
test
fcoml
xchg
mov
in
mov
add
or
sbb
adc
inc
mov
cmp
xchg
adc
imul
ja
jmp
fisubrl
jmp
sbb
mov
jmp
mov
test
push
push
mov
leave
jne
dec
and
add
cwtl
sbb
or
mov
call
cltd
idivl
cltd
mov
push
stos
push
inc
cmp
movsb
push
rcr
pushl
insb
je
inc
in
icebp
das
dec
xlat
orl
push
and
add
sti
add
and
scas
jne
sbb
push
cmp
jne
movsb
pop
aam
cltd
cltd
dec
xlat
xor
jge
rolb
mov
les
scas
ljmp
ja
pop
loope
rcll
mov
je
xor
xor
sahf
dec
push
or
push
xor
mov
ljmp
jae
mov
dec
shrb
pop
aas
pop
mov
jbe
lret
fldln2
pop
mov
iret
jp
sub
fdiv
gs
add
and
mov
or
sbb
jbe
fsub
adc
pop
add
call
popa
enter
mov
fsubl
nop
sti
mov
es
imul
pop
insl
rorl
pop
je
insl
fisttps
and
push
push
adc
into
into
mov
adc
inc
xorl
cmp
movsl
lods
cli
int3
dec
jnp
leave
inc
inc
imul
cmpsl
clc
lods
and
adc
cmp
call
das
outsl
inc
dec
mov
and
inc
jle
pop
bound
add
lret
mov
cli
sar
fbstp
add
and
inc
add
fstpl
cmc
lods
insl
inc
in
iret
push
enter
adc
ds
sub
add
push
lds
pop
push
mov
xchg
dec
jo
iret
popf
lods
or
arpl
push
sti
jecxz
sarb
mov
cmp
setns
cli
cmpsb
movsb
lds
in
jae
adc
pop
mov
sti
in
or
mov
lret
sub
or
lret
in
xor
adc
pop
mov
mov
in
les
mov
in
cmc
inc
cwtl
jp
cmc
or
pop
xor
or
push
jge
xor
xor
xchg
lock
dec
cld
mov
jmp
insb
lret
xchg
popf
and
mov
leave
xchg
sarl
pop
inc
mov
in
adc
sbb
xor
adc
rorb
adc
cwtl
push
cmp
jns
mov
mov
rolb
roll
lret
js
incb
fcmovnb
and
inc
lea
les
mov
or
movb
sbb
rorb
fs
dec
mov
lea
inc
and
shll
mov
mov
out
aaa
pop
or
inc
mov
push
cmpsb
mov
inc
and
add
lsl
je
add
and
arpl
pusha
inc
sub
and
mov
adc
orl
add
add
sbb
orl
push
ret
in
lock
cmp
clc
cld
cmp
pop
adc
clc
call
adc
push
call
cwtl
sahf
subl
mov
pop
f2xm1
or
fimuls
adc
shr
push
and
push
dec
iret
push
call
add
cmp
jne
push
xlat
subb
je
je
or
pop
jg
xchg
mov
mov
mov
push
inc
das
fisttps
insl
adc
popf
movsl
je
je
lahf
repz
addr16
jl
jl
jge
cmpsl
pusha
aam
xchg
popf
orb
lods
addb
stc
js
pop
pop
pop
sub
sti
cmp
imul
pusha
add
mov
pop
int
lods
xor
adc
out
dec
mov
and
les
mov
clc
mov
dec
enter
dec
addl
push
or
faddl
adc
mov
pop
xchg
adc
and
pop
adc
jns
or
sub
inc
mov
lcall
adc
and
xchg
loope
leave
jno
cli
je
lret
int3
dec
push
int3
mov
add
sub
out
dec
movsb
pop
addr16
movsl
cmpsl
pusha
clc
popa
jno
cwtl
add
shr
xor
lods
jg
cwtl
mov
out
jne
outsl
fsubs
andb
push
jno
pop
sti
adc
mov
xor
in
fs
mov
test
lret
imul
sub
xor
pop
repnz
dec
push
pop
fisubrl
mov
adc
inc
dec
push
xlat
add
ret
xchg
ret
cmpsl
pushf
outsb
addr16
inc
incb
leave
cmp
dec
push
addr16
test
sarb
inc
mov
lret
and
fsub
into
jl
mov
sbb
inc
mov
sbb
test
mov
jno
lcall
pop
popf
mov
clc
adc
pop
mov
mov
bound
pop
dec
pop
pusha
mov
fstpl
cwtl
pop
out
shr
mov
out
push
add
fs
jecxz
adcl
incb
lds
std
or
add
push
jo
xor
xchg
rclb
pop
dec
shrb
je
mov
lods
into
jmp
pop
lock
mov
jne
push
aad
enter
inc
in
call
bound
cmp
inc
in
jl
ret
pushf
imul
out
and
pop
and
icebp
data16
outsb
jmp
sbb
bound
xor
rorb
jmp
addr16
push
adc
hlt
and
push
mov
daa
xchg
sub
dec
inc
js
lcall
push
insb
inc
adc
daa
rorl
xor
xchg
mov
or
adc
cmp
ljmp
inc
push
lods
pusha
xchg
inc
and
mov
cmpsl
stc
rcll
and
cmpsl
rorl
call
imul
cmp
in
lds
and
dec
cmp
inc
mov
data16
in
sti
mov
mov
cltd
bound
lret
jge,pn
fucom
dec
adc
cmp
cltd
in
xchg
push
or
sub
iret
test
add
jg
fwait
sbb
inc
fs
cmp
call
mov
sahf
inc
or
mov
or
push
cmp
adc
xlat
inc
outsb
roll
add
xchg
call
mov
pusha
mov
pop
je
rorb
loop
add
push
or
adc
imul
cmpsb
mov
out
fmul
jns
dec
cmc
int3
int3
or
jae
enter
sub
cmpsl
enter
int
add
pushf
call
or
into
clc
jmp
fcmovu
xchg
mov
adc
xchg
fdivr
mov
jbe
lds
enter
mov
sbb
out
pop
dec
mov
push
adc
rolb
lods
pop
or
addr16
jp
adc
enter
jne
lock
jg
adc
jmp
push
cld
sbb
sub
enter
into
adc
rcl
mov
pop
and
out
les
and
cmp
loope
and
test
jmp
and
bound
js
push
mov
fbld
sbb
aad
mov
mov
add
shrl
xor
rcrb
xor
push
fldenv
sub
or
inc
pop
rorb
mov
xchg
lds
mov
pop
test
lea
mov
dec
push
shlb
sub
mov
mov
mov
rorl
imul
clc
or
lock
mov
lds
lea
jp
sub
hlt
inc
rorl
cld
cld
in
aas
add
sahf
imul
shrb
popa
mov
add
ret
sarb
jae
fwait
mov
inc
xchg
pop
in
cmp
cld
sbb
lods
mov
mov
sbb
xchg
xor
test
cmp
es
shrb
test
lcall
sub
loop
push
imul
pop
decb
arpl
mov
mov
pushf
movzbl
add
adc
mov
mov
jecxz
or
test
push
xor
xor
push
fsubr
adc
cmp
add
or
inc
inc
stos
mov
lret
adc
push
add
shl
cmp
sbb
inc
xor
loop
mov
xor
mov
cmpsb
sub
xor
rol
stos
xchg
dec
subl
jle
lds
out
xchg
mov
pop
xor
push
in
fs
test
cmpsl
xchg
pop
cmc
fcmovb
push
fcmovb
sub
in
add
lcall
or
sub
add
dec
jge
lret
mov
jle
insl
arpl
inc
gs
jnp
xchg
sub
cmp
popa
cld
aam
cmp
jmp
push
dec
pop
push
cwtl
repnz
aad
fisubrs
nop
test
adc
adc
pop
sbb
push
add
es
sub
mov
mov
iret
xor
and
nop
loopne,pt
cmpl
je
add
add
stos
bound
add
stos
pop
stc
je
into
pop
fsubrl
call
jp
xchg
cmp
ljmp
in
dec
in
cli
loope
cmpsl
ret
in
filds
inc
mov
lahf
fisubl
mov
leave
push
sub
pop
xchg
call
aas
mov
push
imulb
daa
mov
je
or
pop
lret
sbb
mov
mov
sbb
mov
adc
lret
inc
jo
shlb
test
data16
or
pop
xchg
push
outsb
adc
xlat
iret
jg
sub
cmc
xor
add
jmp
xchg
mov
fsubrp
sub
sbb
dec
or
push
les
loopne
add
inc
out
or
or
pusha
push
mov
add
test
mov
sbb
jbe
xchg
sub
movl
add
mov
cmp
fstpl
nop
arpl
xchg
fsubr
fwait
inc
mov
cmpb
cmp
out
and
lret
xor
mov
xchg
sahf
insb
dec
pop
stos
inc
and
adc
popa
add
mov
xor
xor
out
roll
es
fdivr
cmp
insl
lcall
test
out
mov
push
in
fdiv
push
mov
cmp
bound
pop
xor
fisttps
scas
bound
outsb
mov
pop
fs
xchg
pop
and
xchg
inc
fsub
dec
loopne
out
or
mov
inc
and
push
shll
cltd
xchg
jno
or
int
inc
lret
dec
xchg
in
rcl
cwtl
cmp
add
lea
fsubr
xchg
fmull
xchg
arpl
stos
hlt
fsubr
dec
and
sbb
arpl
mov
clc
into
cmp
fdiv
hlt
ljmp
jno
pop
jbe
mov
fnstsw
xchg
rcr
mov
out
push
ljmp
popf
adc
ljmp
lock
mov
mov
pop
xor
mov
cmp
inc
mov
stc
lea
imul
and
fucomi
push
add
xchg
incl
mov
fsubl
mov
push
push
xor
add
mov
int
pop
daa
fs
rorb
test
clc
les
or
test
adc
xor
iret
sbb
add
enter
test
rcrb
adc
jns
mov
push
jno
fistl
lds
addr16
pusha
add
pop
imul
cmp
in
clc
test
in
in
mov
repz
in
in
in
push
cvtdq2ps
jnp
nop
into
jge
inc
clc
push
and
inc
nop
fildl
lock
jae
call
inc
xchg
pop
shl
sub
test
inc
mov
ja
adc
xchg
add
js
fistps
sbb
jnp
pop
sub
push
sbb
pop
adcl
rcr
and
add
pushf
leave
mov
into
push
jecxz
or
xchg
inc
fwait
push
imul
cltd
aam
enter
cmpsl
loop
pop
push
cmp
jmp
mov
mov
decl
mov
add
shl
pop
in
push
in
push
xor
je
push
push
stc
cwtl
test
xlat
adc
xchg
je
mov
cli
pop
mov
fsubrs
pop
and
enter
out
cmp
mov
mull
arpl
push
cltd
lods
and
dec
pop
jo
into
sbb
dec
mov
push
out
dec
jmp
lods
xor
push
jne
loopne
dec
call
cmp
push
repz
cmc
sbb
push
add
cmp
jo
in
add
cli
xchg
cmp
xchg
movsb
push
jp
cmp
push
or
push
mov
jmp
movb
jmp
pop
pop
movsb
in
or
hlt
dec
jp
into
test
clc
cmp
xchg
xor
lret
inc
xor
pusha
orl
inc
inc
cmp
jae
jne
jns
add
or
and
cmp
xor
loop
ret
xor
ss
aaa
shll
es
xchg
jmp
xor
mov
and
fidivrl
sbb
mov
pop
rcrl
pop
adc
cmpsl
sbb
dec
imul
outsb
adc
fs
lds
mov
jns
pusha
pushl
sbb
int3
sub
mov
das
sbb
jp
fwait
inc
sbb
jmp
lds
or
xchg
arpl
aas
xor
ficoml
jne
lcall
push
sar
jb
jnp
lds
ret
jns
jo
stc
int
roll
sti
orl
shr
addr16
call
ss
lds
les
inc
ret
out
mov
push
and
push
mov
xchg
je
mov
fiadds
test
test
push
mov
jo
mov
lock
movsb
jg
insl
mov
inc
and
ljmp
cmpb
add
xor
pop
sbbl
decl
fldenv
push
mov
xor
daa
push
jmp
or
mov
pop
jecxz
xchg
lock
push
dec
pop
aaa
leave
fadds
dec
mov
pop
dec
je
xchg
mov
cltd
cmp
cli
in
adc
adc
pop
outsb
inc
je
test
andb
fistl
subb
push
push
cmp
jae
sarl
popl
sub
jne
rcll
aad
pop
push
push
or
sbb
push
jl
cltd
adc
jbe
mov
add
or
mov
push
add
in
or
lret
loope
xor
adc
out
dec
outsl
jp
das
fwait
mov
fdivr
fwait
ds
adc
movsb
in
xor
test
mov
inc
dec
das
cmp
cld
dec
pop
push
inc
jne
out
jno
cli
pop
cmp
test
int3
andb
repz
inc
jae
adc
push
mov
loope
pop
push
jmp
in
shrl
je
push
lcall
jmp
fwait
dec
pusha
sar
jns
bound
pop
stos
insb
fbstp
xchg
das
mov
fmul
xchg
xor
mov
adc
mov
fsubr
int3
jp
xchg
je
js
sbb
jnp
xlat
xor
jns
or
dec
lock
push
adc
mov
add
jbe
pop
ret
and
outsl
jnp
jl
fstl
jl
les
xchg
jns
popf
adc
jmp
cld
test
shrb
jno
in
mov
fs
cld
leave
push
pop
dec
sbb
xor
dec
sbb
pop
sti
stos
sub
jmp
dec
xorb
pop
inc
cmp
out
inc
aad
fs
test
cwtl
sbbl
adc
jmp
sub
adc
fldcw
push
or
and
leave
inc
insb
pusha
jge
out
cld
dec
push
ljmp
cmp
mov
and
xor
xchg
push
jbe
inc
ret
fists
fisttps
fucomip
sbb
lret
jne
push
fidivl
inc
and
sbb
adc
leave
cmpsl
xorl
test
fdivs
out
insb
in
add
mov
xchg
lock
cs
cmp
or
sbb
sbb
sub
add
jae
std
popf
test
inc
jno
or
hlt
test
test
xchg
daa
es
add
sub
imul
add
sahf
gs
sub
inc
or
inc
jae
xor
cmp
sbb
movb
jmp
jnp
mov
test
inc
movsl
cmp
cmp
insl
testl
stc
arpl
cmp
inc
push
xor
jl
sbb
loop
xor
lea
dec
jg
imul
out
cmp
jns
adc
sbb
in
sbb
addl
and
aaa
lods
test
add
inc
or
cmpl
mov
jmp
test
mov
pop
aam
ja
loope
and
nop
bound
jo
cltd
push
les
push
and
nop
cmpsb
loop
mov
adc
sbb
gs
fildl
pop
jge
dec
lcall
sbb
xchg
mov
pusha
shlb
mov
pop
push
sbb
jge
or
sub
movsb
xlat
cmpsl
sarl
push
mov
test
loopne
jbe
shll
pop
in
inc
dec
or
mov
sub
mov
mov
pop
cmc
aad
sbb
dec
xchg
addr16
stos
imul
das
les
dec
dec
push
push
cld
rolb
aad
adc
sub
pop
les
imull
lret
scas
pop
shrb
stos
inc
mov
xchg
xor
or
sbb
inc
or
mov
add
push
and
mov
rcrl
add
mov
sub
shl
inc
and
or
mov
push
movsb
sbb
lods
pop
mov
mov
mov
mov
and
mov
call
adc
mov
mov
lret
cmpsb
and
rcrb
and
push
neg
data16
push
enter
stc
jle
push
inc
out
bound
nop
add
push
lret
lret
outsl
insb
lret
inc
pop
insl
mov
cmp
pusha
push
ss
inc
int
imul
push
adc
xchg
jle
ret
fcoml
mov
fidivs
into
test
aad
fld
sbb
rolb
mov
jns
aas
mov
pop
xlat
hlt
pushf
jno
push
das
jmp
shrb
mov
popf
pop
scas
xor
mov
in
lods
pop
sub
ss
push
pop
dec
push
jne
add
sbb
leave
icebp
pusha
mov
add
rol
lea
test
jno
lods
push
sbb
xor
or
adc
xor
fsubrl
xor
sub
add
push
jnp
loopne
mov
or
inc
inc
gs
sbb
fimuls
lods
adc
dec
inc
div
cmp
fwait
mov
push
cmp
fsubrs
mov
popf
sbb
pop
xor
or
ss
notb
pusha
nop
mov
out
adc
add
adc
dec
in
aas
cmp
aam
jae
fidivs
add
pop
dec
cmc
ja
inc
cli
enter
fcomip
inc
test
pop
dec
inc
dec
mov
mov
sti
pushf
testl
sub
mov
dec
call
cmpsl
cmp
dec
or
cld
push
test
sahf
daa
add
and
out
ss
sub
push
hlt
gs
mov
adc
adc
pop
inc
lds
leave
fmull
pop
mov
mov
add
sub
or
leave
sbb
mov
int
and
mov
mov
add
jmp
inc
fs
lahf
aas
lock
add
xor
xor
ss
or
stc
test
adc
mov
mov
push
stc
push
insl
loop
cmp
xchg
mov
adc
cli
roll
repnz
in
sbb
hlt
hlt
add
push
stc
leave
cmp
hlt
add
out
jp
lds
jne
pop
in
pop
inc
cmp
ret
add
xor
shl
push
xchg
rolb
jmp
inc
into
js
pop
lea
and
andl
int
ljmp
hlt
insl
sbb
push
ss
mov
pop
jge
and
insl
movswl
mov
push
dec
cmp
aam
mov
adc
xor
add
test
sub
or
xchg
jle
xor
sbb
jge
adc
adc
lods
jno
mov
pop
push
jge
fiaddl
add
add
push
push
pop
mov
xchg
movsb
inc
scas
sbb
imul
jns
inc
xchg
pusha
popa
repnz
movsb
or
push
movsb
aaa
scas
loop
push
lcall
fcomp
cmp
jno
mov
scas
mov
repz
repz
cmpl
lods
or
add
out
mov
mov
ror
add
push
jl
xchg
add
push
jmp
mov
mov
jne
lods
loopne
mov
mov
pusha
adc
dec
std
or
push
mov
clc
ljmp
cmp
lock
mov
adc
xchg
out
in
es
mov
sbb
dec
or
in
and
fsub
jg
sbb
mov
jl
push
jb
inc
xor
scas
and
xchg
pop
jge
adc
nop
inc
or
cmpl
inc
pop
mov
cli
inc
dec
dec
pop
mov
sub
lock
fdivs
push
sti
int3
sti
movb
insl
add
cmp
inc
bound
cmp
ret
xchg
add
lahf
push
jbe
sti
fdivrl
push
rcll
cmc
inc
cld
pop
mov
add
push
loopne
xchg
inc
insb
arpl
jle
popa
push
loopne
lcall
inc
mov
or
jae
enter
pop
jno
or
test
mov
cwtl
sub
jne
jno
pushw
shr
in
push
or
xor
gs
lret
int
push
inc
inc
mov
mov
or
pop
je
rorb
dec
minps
stc
sbb
sub
sub
add
add
fucomip
jecxz
cmp
shll
mov
push
int3
icebp
out
enter
fildl
add
in
mov
mov
in
addr16
fdivrs
push
jne
rcl
lds
in
mov
pop
flds
je
mov
xor
dec
fidivrs
inc
add
xor
sub
add
push
dec
push
das
cltd
cmp
add
call
cmp
call
ljmp
xchg
mov
aaa
xchg
adc
or
out
jmp
jmp
jmp
jmp
push
cmp
push
cmp
adc
mov
fcompl
xchg
sub
jne
sub
jnp
faddl
jp
push
repz
ds
pusha
cmp
and
push
les
jns
and
nop
or
js
cmp
push
jno
cmpsl
jl
push
aas
cmp
movsb
xorl
mov
and
push
in
sbb
fs
repz
or
add
fisubrl
loop
insb
jnp
jp
push
mov
xlat
insl
jmp
insb
pop
push
adc
icebp
xlat
mov
outsl
xorl
enter
xor
rcr
sti
call
inc
ljmp
in
repz
xor
adc
sti
call
data16
lods
rol
mov
jo
add
les
addr16
xor
mov
jne
cltd
aas
lods
sub
fs
adc
in
flds
inc
sub
mov
xor
shll
xchg
add
jne
xchg
mov
sub
sbb
or
pop
int3
int3
out
jecxz
add
movsl
inc
ret
sti
call
enter
and
pop
mov
into
shr
inc
sub
jne
int
mov
rclb
shlb
jl
add
rol
mov
dec
push
rcl
and
inc
loope
xchg
push
aaa
push
sarb
pop
dec
dec
jns
sti
dec
pop
notb
into
cmp
mov
jp
lcall
cmpsl
push
loop
jno
mov
mov
es
mov
ds
je
push
push
xchg
lret
enter
lret
cltd
cmp
jno
loopne
fcomp
or
icebp
push
lds
mov
lret
fisubs
pop
test
flds
dec
mov
insb
pop
addr16
xor
inc
push
mov
lock
pop
sub
mov
mov
clc
subl
cmp
inc
lods
adc
sub
aad
hlt
mov
cmp
inc
popf
sbb
enter
je
shlb
pop
hlt
outsb
jle
fcoml
or
popf
jge
pop
cmpb
mov
arpl
mov
imul
adc
in
mov
mov
cwtl
or
sbb
add
into
xchg
outsb
movsb
sbb
dec
push
mov
insl
not
fldenv
mov
xor
lock
cmp
enter
push
not
push
cmp
cmp
nop
mov
insb
mov
call
mov
into
mov
xchg
js
call
mov
cmp
sarb
mov
fsts
or
cmp
push
orb
mov
inc
cld
add
out
add
int
int3
loop
mov
enter
xor
jl
int3
sub
scas
movsb
jl
jl
mov
xacquire
adc
cmp
lret
and
insb
jl
fnstenv
cmp
nop
jne
and
dec
mov
test
adc
inc
ljmp
add
inc
out
mov
cld
cmp
inc
popf
sbb
pop
mov
jecxz
loopne
push
add
pop
push
ljmp
jb
pusha
xor
out
sbb
jp
loopne
idivb
repz
cmp
ds
cmp
jns
je
mov
nop
jl
dec
xor
xor
xor
dec
push
mov
daa
cmp
adcl
inc
test
adc
fincstp
mov
and
test
je
mov
inc
insb
adc
inc
push
int3
pop
andl
rcll
out
outsb
push
loop
enter
cwtl
enter
in
lock
jnp
popa
mov
pusha
fs
lock
dec
loope
mov
pop
sub
mov
adc
xor
cmp
popa
clc
fs
into
xchg
push
sub
cmp
in
mov
pop
jge
sti
hlt
jp
pushf
jns
into
orb
sti
call
movsb
lea
mov
pop
cmpsb
popa
and
mov
addr16
hlt
iret
mov
aam
out
cmp
push
cmp
mov
push
pop
pusha
pop
mov
rcl
ljmp
out
rorb
mov
fs
in
test
push
fldenv
pop
sbb
jp
xchg
mov
sub
mov
mov
inc
bound
and
test
jle
iret
mov
or
and
je
sti
cmp
int3
jp
movsb
repnz
loop
push
sub
add
jmp
mov
movsb
popf
sbb
je
push
mov
sbb
enter
rclb
mov
repnz
cmp
cmpb
and
mov
test
pop
hlt
outsb
lock
inc
pop
cmp
add
adc
repz
jns
cmpb
hlt
mov
in
jne
mov
subb
jb
cmp
mov
jmp
xchg
lods
insb
jmp
jne
xchg
mov
xlat
pushf
movsb
add
and
pushl
push
std
fs
cmpsl
out
sub
cld
sbb
jne
sbb
jne
sbb
jne
sbb
cmp
push
sbb
cmp
mov
decb
cmp
mov
decb
cmp
mov
mov
mov
into
test
push
mov
mov
lret
fsubs
cmp
and
sub
mov
test
push
pop
shrb
mov
adc
xor
sbb
push
jb
adc
sahf
push
mov
call
call
aaa
pop
pop
pop
ljmp
cmpb
lcall
mov
adc
adc
lods
push
mov
mov
xor
jbe
add
xor
mov
js
rcr
icebp
push
shrb
push
test
jnp
or
inc
mov
test
jge
mov
mov
mov
andb
dec
inc
jmp
push
push
pop
xchg
jns
adc
mov
repnz
enter
push
push
add
pop
lea
jl
mov
test
cs
mov
adc
nop
nop
in
jbe
pop
cmp
xor
into
or
test
add
xchg
mov
movaps
mov
sbbl
test
push
lods
or
pusha
icebp
push
push
nop
into
push
rol
ja
inc
stc
mov
cltd
js
mov
addr16
xchg
sub
push
push
pop
test
mov
cld
mov
jecxz
xchg
sbbl
sub
or
popf
lock
mov
inc
pop
pop
or
mov
andb
push
add
mov
rol
stos
out
and
sarb
mov
sub
sarb
mov
mov
dec
fldt
jecxz
mov
insb
push
jns
pushf
shrb
sarl
test
mov
cmp
loop
push
sbb
test
push
fisubrl
pop
dec
cs
mov
sbb
sub
push
fidivs
jo
push
pop
push
mov
in
lods
outsl
mov
in
lods
test
xor
add
insl
jo
dec
push
es
adc
das
int
push
verw
movsl
push
push
sbb
dec
xor
cs
imul
call
js
int
or
jl
xchg
mov
push
stc
or
jg
and
dec
jnp
add
adc
pop
pop
insb
xchg
mov
pop
xchg
or
fwait
mov
pop
sbb
out
rcrb
push
xorb
cmpsl
lcall
loopnew
jb
stos
jo
jp
imull
or
dec
lds
cld
out
pop
push
sarl
mov
and
arpl
xor
ss
imul
adc
scas
sub
dec
mov
and
pop
push
mov
pushf
ljmp
sbb
cwtl
cmp
mov
and
inc
cs
sbb
push
les
cwtl
ljmp
inc
out
cmpsb
adc
test
rolb
inc
sub
pusha
add
dec
pop
test
test
and
loopne
xlat
je
cld
sub
and
cmp
xor
into
mov
adc
andb
leave
insl
sbb
aam
xor
push
dec
scas
aas
inc
mov
or
test
mov
sbb
pop
cmpsb
cmp
jg
adc
clc
push
and
cmp
scas
sub
or
sahf
mov
mov
icebp
out
adc
xor
and
mov
es
cmp
xor
mov
jl
push
pop
adc
andb
shl
aad
pop
cmc
sahf
gs
mov
pusha
or
mov
jge
inc
fsubrs
sub
lea
addl
mov
sbb
sbb
and
mov
fisttps
push
cmpb
mov
jmp
push
outsl
sbb
dec
pusha
sub
dec
cmp
mov
dec
adc
imul
cwtl
xchg
loop
xor
mov
repz
cmp
fsubs
adc
or
out
and
mov
insl
cmp
out
fimull
jge
mov
sub
fmull
dec
jmp
popf
gs
dec
cmp
rep
loopne
sub
loop
pop
cmp
rorl
jne
adc
ret
fdivrs
lock
shl
jp
in
out
gs
and
cmp
adc
mov
jae
fisttpl
dec
push
sub
cmp
sbb
xchg
and
mov
mov
fs
or
jne
or
xchg
xor
cmpsb
jbe
mov
fnstcw
dec
pop
pop
cmp
or
je
mov
jmp
loope
pop
fmull
lea
and
add
das
stos
adc
xchg
push
into
push
lret
or
push
inc
roll
mov
lds
cmp
fucomp
sub
fnstenv
mov
std
mov
mov
mov
insb
loopne
je
push
mov
popf
or
clc
sub
nop
pop
mov
add
add
stos
push
mov
xchg
lock
data16
mov
fwait
add
pusha
sub
mov
rclb
mov
pop
or
data16
loopne
and
clc
andl
test
fadds
imul
add
scas
subl
cld
repnz
mov
push
add
or
lods
sti
into
in
inc
movsl
mov
dec
call
in
sbb
jo
int
insl
add
fs
and
mov
movsl
nop
cmp
push
jnp
sbb
sti
mov
outsl
pop
or
push
push
jnp
push
movsb
inc
mov
outsl
movsl
sbb
push
lea
cmc
pop
adc
mov
add
sub
adc
rorl
push
in
jge
out
mov
mov
sub
std
std
aad
push
xchg
or
clc
jmp
lcall
xor
dec
mov
movsl
or
clc
push
mov
jge
sbb
adc
jmp
aam
fcoms
mov
jecxz
inc
push
aam
xchg
inc
mov
dec
adc
or
or
daa
stos
mov
lret
clc
std
sub
pop
xor
or
cmpsb
mov
sbb
sub
sbb
daa
into
data16
cmc
hlt
jbe
leave
popf
fdivr
mov
add
sbb
hlt
test
call
hlt
call
or
fidivrl
lock
push
in
clc
sub
push
cmp
rorb
addr16
mov
xor
dec
sub
mov
sub
mov
div
cmpl
roll
icebp
fdiv
test
sub
cmpl
inc
insb
mov
sbb
mov
xor
mov
pop
adc
addr16
and
and
div
pusha
xchg
adc
push
lea
push
fwait
out
mov
icebp
pop
outsl
xor
push
sub
cmpl
ret
sti
sbb
and
add
sub
ret
out
inc
fwait
cmp
not
mov
mov
outsl
or
dec
rorl
jp
bound
enter
cmc
push
hlt
cmp
fs
mov
cmpsb
loop
mov
rcrb
bound
daa
lret
icebp
sahf
cmpsb
aam
stos
bound
sti
inc
cld
xchg
scas
arpl
sbb
xchg
push
movsb
fcmove
xor
cmp
stc
xor
mov
shr
sbb
jmp
loop
lods
daa
jl
jmp
jo
xchg
pusha
data16
mov
mov
out
repnz
orl
in
xor
push
and
stc
mov
add
lds
push
inc
lcall
repz
fstl
frstor
lahf
aad
testl
mov
xor
push
fnsave
and
popf
inc
cli
dec
dec
mov
mov
stc
push
cwtl
mov
daa
pop
pop
xchg
jnp
dec
iret
or
pop
int3
cld
add
andl
cmp
pop
push
loopne
dec
mov
je
in
or
sti
add
cmc
adc
popf
les
jae
push
fs
test
pop
addr16
divl
lods
fildl
mov
gs
fcmove
int3
imul
imul
jno
cmp
push
push
pop
imul
inc
sub
fsubs
inc
insl
mov
pop
jecxz
movsl
js
fbld
jecxz
or
leave
or
sub
mov
or
in
les
les
pop
mov
into
popf
push
les
xor
movl
je
cwtl
adc
test
stos
jne
in
adc
jmp
bound
xor
mov
jle
push
jle
jmp
pop
inc
in
xchg
push
pop
pop
mov
int3
ljmp
in
mov
data16
push
repz
cmp
unpcklps
and
sbb
ja
ret
ljmp
addl
push
mov
xchg
pushf
push
out
jnp
lcall
leave
mov
fstpl
xchg
xchg
sbb
pop
lret
iret
ret
pop
ja
cmp
test
int
mov
sub
out
shlb
mov
stc
flds
test
pusha
xor
mov
inc
loop
movsb
jge
inc
loopne
leave
vpsubusw
cwtl
mov
fstps
in
into
out
call
in
into
out
call
jbe
xor
call
jae
cwtl
incl
push
popa
push
jbe
cmp
sub
adc
mov
pushf
ret
arpl
mov
pop
aad
js
test
xchg
fdivs
addb
add
add
or
bound
or
fwait
hlt
sbb
lock
dec
nop
ljmp
inc
fmuls
xor
xor
cld
sub
inc
adc
fistl
xchg
sub
inc
jo
test
dec
int3
fmull
jge
xor
test
fisubrs
adc
push
aas
add
and
push
jl
roll
pop
loop
pop
xor
nop
xor
and
test
fldl2e
cmp
mov
and
jmp
cmp
push
push
popf
jae
push
mov
adc
push
jle
xchg
xor
cmp
aas
lock
cmp
push
aaa
lret
fsubs
add
sub
jmp
xor
lods
adc
out
stos
lds
sbb
jmp
xor
or
push
leave
mov
dec
adc
or
pop
or
int
cld
dec
test
push
pop
xchg
mov
jmp
into
mov
push
sbbb
jbe
mov
fcomps
mov
leave
mov
jae
stc
adc
inc
pop
hlt
mov
jge
orb
cmp
repnz
mov
inc
or
adc
pushf
inc
xor
add
sub
loopne
mov
or
mov
and
adc
xchg
es
mov
push
xor
cmpsb
orb
ljmp
mov
mov
mov
aaa
dec
out
inc
dec
loopne
inc
jmp
dec
cmp
push
cmp
xor
negl
hlt
test
rclb
lods
add
adc
pop
mov
fistl
mov
int3
out
xor
inc
movsb
xchg
dec
cwtl
aad
fiaddl
dec
or
lods
mov
lret
mov
jnp
test
sub
and
test
movsb
xchg
movsb
push
icebp
xor
call
pop
jbe
popf
aam
test
jmp
testb
loopne
mov
add
or
sbb
movl
pop
cmpsb
mov
ja
mov
mov
pushl
inc
xor
or
int3
add
icebp
jp
fcoml
gs
cmp
mov
mov
xor
in
lret
aas
sbb
andb
pop
xchg
mov
mov
xchg
push
mov
pop
sub
pop
popf
and
lds
xor
cmpb
jmp
dec
repnz
sbb
or
xor
fsubs
push
jne
xchg
addr16
cmpsb
inc
pop
lcall
pop
insb
inc
adc
cwtl
idivb
xor
aas
mov
adc
shlb
roll
lret
in
lock
aas
push
mov
inc
lahf
fidivrl
dec
push
cmp
rcl
dec
push
jle
mov
movsb
cmp
hlt
insl
mov
bound
mov
inc
dec
cwtl
lret
movsb
cld
es
fisttpll
shr
adc
sub
add
lcall
xchg
loop
lock
xor
out
or
xchg
fmull
jl
jo
push
cmc
fdivr
push
stos
out
push
or
inc
mov
mov
sbb
sbb
iret
and
jns
or
sbb
data16
push
sub
push
xchg
inc
and
aad
aad
sbb
sub
jl
pop
sahf
test
stos
push
pop
test
jns
push
stos
push
hlt
rsm
orps
jp
push
stos
inc
push
push
lock
test
or
mov
lods
push
sti
sub
mov
arpl
push
sbb
in
fdiv
cwtl
pop
int
hlt
imul
stc
dec
sub
call
pop
in
push
rcrb
or
int3
sarb
lods
push
loopne
in
jp
mov
sahf
ja
adc
aam
or
out
mov
jae
and
jne
das
push
sbb
std
loopne
mov
mul
repz
jne
or
pop
inc
add
test
mov
int
lcall
lret
push
lret
test
or
test
mov
repz
sub
es
pop
or
test
push
dec
adc
inc
and
or
cmp
cmp
jmp
cmp
xor
pushf
sub
xor
add
fistl
fstpl
dec
xchg
popf
inc
sub
mov
pusha
inc
cmp
add
ja
mov
mov
jae
loop
addr16
scas
jbe
jl
into
fs
mov
lret
mov
loope
sbb
or
or
add
add
pop
inc
mov
in
mov
in
into
dec
pusha
mov
into
out
in
mov
into
out
lock
cmp
or
cmp
scas
xchg
test
jo
orl
push
xor
jmp
push
ror
dec
and
loope
cwtl
jge
add
and
ljmp
sbb
adc
xchg
in
dec
xor
xchg
pop
loopne
pop
nop
add
rcrl
lock
pop
maxps
cmp
adc
dec
xchg
test
lods
ljmp
sub
cmp
and
jge
jle
and
jp
push
mov
call
in
mov
int3
repnz
add
cmp
lea
pop
mov
rorb
cmp
or
popa
mov
inc
je
push
outsb
xchg
lds
add
aaa
int3
push
loop
jnp
xchg
adc
xchg
enter
mov
sbb
adc
jp
popf
and
and
push
mov
loope
xchg
cmp
lcall
in
mov
xchg
pushf
jns
sti
je
adc
inc
mov
fcoms
movsl
add
stc
pop
lcall
add
cli
or
jb
in
lock
lcall
mov
arpl
popa
sbb
pop
xor
push
fcmovu
adc
mov
mov
inc
xor
mov
fiaddl
xor
mov
pop
out
icebp
addr16
add
and
push
lods
pop
mov
mov
mov
push
jnp
adc
icebp
or
sub
dec
sbb
mov
push
fbld
pushf
xchg
push
add
ficoms
daa
imul
insl
into
sbb
add
rcl
rclb
popf
sbb
and
in
test
dec
push
insb
xchg
out
xchg
add
ficoml
or
and
fisubl
iret
test
js
sub
jecxz
push
daa
enter
jge
repnz
and
jne
fidivs
lahf
jg
mov
pop
pop
sub
mov
add
dec
les
mov
test
xchg
xor
test
sbb
add
sbb
and
jecxz
outsb
and
ss
add
xor
lret
lods
popa
incl
sbb
push
hlt
push
pushl
add
cmpsb
arpl
cmpsb
mov
test
out
mov
mov
insl
mov
lds
pop
mov
pop
inc
dec
sub
or
push
imul
cmp
pop
cmpsb
lds
xlat
loop
mull
inc
cmp
xchg
push
push
add
mov
adc
or
cli
rorb
pop
rcrl
adc
arpl
push
mov
pusha
inc
mov
pop
inc
int3
les
lds
je
lods
xchg
fisubrl
adc
lret
adc
xor
repz
adc
rcr
cmp
or
lods
rcrl
mov
jecxz
dec
cli
jmp
data16
cmp
nop
je
addr16
inc
into
imul
sbb
test
push
in
mov
mov
shlb
test
rol
sbb
cmp
int
clc
sub
mov
xchg
and
std
gs
mov
push
std
bound
xchg
imul
rclb
mov
and
in
std
pop
push
dec
jb
in
testl
fcomps
push
inc
sbbl
mov
cmp
stc
push
adc
cmpsb
jo
push
adc
enter
mov
test
call
mov
adc
lea
sub
push
imul
mov
xchg
data16
pusha
and
sub
sub
jg
pop
mov
cmp
test
imul
clc
fstl
out
inc
push
push
in
inc
loop
mov
or
push
inc
das
cwtl
jecxz
pop
sbb
in
loopne
jecxz
or
dec
into
rcll
jb
push
loopne
shlb
movsl
sub
add
out
inc
mov
popa
enter
in
fldenv
jo
mov
sub
xchg
cmpsl
mov
std
call
jno
inc
jbe
xchg
fmull
fdivr
shll
ja
out
rorb
stc
lahf
sbb
cmpsl
fisubrs
pushf
jno
xor
test
sbb
data16
hlt
mov
xor
jb
jne
and
mov
out
sub
shl
clc
mov
insl
test
jle
in
jae
sbb
or
push
aad
xor
xor
jecxz
pop
fistps
jmp
subb
jmp
jmp
cli
mov
add
loope
fucomip
fucomp
fucomi
fsts
inc
xchg
in
adc
and
pop
int3
xor
lods
inc
repnz
add
cmp
test
push
or
sahf
add
sbb
sbb
sbb
aas
and
xor
inc
mov
call
call
inc
mov
lret
mov
loope
sahf
push
test
jmp
cmp
rcrb
sub
mov
inc
ret
cld
cwtl
push
xor
xor
call
jecxz
adc
adc
mov
xchg
sub
adc
jns
and
jg
fnstcw
pop
mov
shrl
loope
push
test
jg
imul
pop
xor
mov
call
call
cmpb
jg
mov
mov
mulb
push
push
aas
arpl
movsb
push
sbb
test
loope
add
xchg
push
xchg
mov
jbe
popf
push
push
test
mov
test
cltd
jo
add
icebp
push
xor
adc
fmuls
sti
inc
sub
je
addl
movd
popf
aam
bound
jl
rorb
push
push
subl
sbb
adc
lret
and
sti
cmp
dec
clc
add
in
or
dec
push
xor
loopne
jo,pt
xor
lods
rol
push
xchg
lret
mov
cmp
pop
insl
and
pop
xor
push
jp
sbb
call
in
aad
dec
dec
stos
cmpsb
jbe
push
gs
mov
mov
adc
and
les
out
sub
fs
sub
stos
pop
stos
pop
push
addr16
push
or
pop
xor
fsub
fldz
fmuls
andb
xorb
mov
sub
insl
enter
cmp
jae
cmp
jo
lds
mov
jmp
dec
mov
inc
cmpsb
mov
inc
mov
adc
adc
push
je
adc
inc
daa
mov
movzbl
push
div
rorl
dec
push
test
xchg
mov
jbe
lret
add
adc
je
mov
mov
gs
leave
or
cmpsl
sbb
or
dec
or
fidivl
add
mov
mov
cmp
call
je
test
add
es
xchg
jnp
or
aad
pop
repz
adc
cmp
lods
hlt
hlt
hlt
lock
call
inc
or
add
clc
sbb
iret
clc
clc
dec
xchg
mov
mov
mov
andb
test
sub
push
in
rcr
jmp
stos
shlb
mov
xor
repnz
cmp
data16
push
jnp
adc
xor
xor
mov
pop
inc
cmp
adc
push
daa
push
sbb
add
mov
out
int
out
cltd
inc
inc
xor
leave
insb
jo
loopne
mov
fwait
pop
mov
push
push
push
ror
das
pop
outsb
sub
add
jmp
andb
out
loope
mov
out
in
lea
test
cli
popf
enter
mov
mov
enter
xchg
pushf
in
jl
xor
mov
pop
or
and
hlt
pop
push
dec
in
jno
daa
xor
rorb
shr
pop
push
pop
frstor
dec
test
je
sbb
cmc
dec
mov
ret
cmpsl
out
add
mov
outsb
mov
insb
cmp
out
xor
jmp
call
data16
sub
jb
and
mov
adc
lahf
aas
xchg
and
push
inc
lods
jecxz
addl
loopne
ss
in
mov
pop
and
andb
or
adc
in
push
les
mov
adc
outsb
addr16
jne
xchg
mov
in
adc
inc
int3
cld
outsb
ja
or
xchg
mov
imul
idiv
xchg
sbb
imul
lret
inc
dec
decb
pushf
cwtl
push
repnz
sub
jmp
fdivr
adc
jle
enter
push
add
in
jge
movsb
jne
aam
dec
xlat
push
inc
ror
pop
mov
inc
fdivrl
cmp
inc
sub
insb
pop
xchg
lock
bound
shr
mov
dec
jne
dec
push
xor
clc
loop
fdivl
cmpsb
xchg
push
aad
and
or
adc
and
mov
add
lret
sahf
xchg
add
push
bound
cmpsb
movsl
lods
insb
rcll
addr16
sahf
outsl
imul
nop
adc
das
mov
jg
pop
push
hlt
sarl
push
insb
cmpsb
mov
gs
lock
arpl
pop
sbb
jmp
or
push
sub
sub
jb
push
lcall
es
push
fcompl
and
cltd
test
mov
sahf
outsl
inc
sub
ljmp
flds
sub
fsts
sub
xchg
jle
jb
sub
insl
adc
call
call
add
out
cmp
bound
pop
and
jbe
in
sbbl
dec
ds
mov
mov
xor
sub
jge
mov
adc
add
outsb
mov
ret
in
push
adc
mov
adc
sbb
test
sbb
orl
stc
dec
mov
mov
mov
and
inc
out
mov
rep
dec
mov
push
xor
addr16
mov
test
xor
out
adc
or
push
mov
fs
and
xor
pop
and
nop
cltd
xor
dec
sub
xchg
call
popa
les
pop
jle
mov
sbb
ret
lods
cli
mov
mov
cmp
mov
add
cld
or
push
iret
test
cmp
jnp
cltd
aam
cs
sbb
in
mov
and
mov
jbe
adc
pop
sub
insl
inc
testl
mov
out
out
int
ds
xchg
or
or
push
ficompl
aam
mov
add
insl
iret
inc
pop
lea
fs
je
js
into
hlt
int3
sti
push
cmpsl
shrb
jno
iret
and
jg
push
sub
addb
js
rcrb
push
mov
jmp
or
mov
fs
add
pop
add
repnz
pusha
sub
cmc
jb
or
jno
cmpsb
mov
jmp
mov
sti
fwait
pop
repz
xor
xor
pop
xor
and
add
orb
insl
ljmp
popa
loope
jnp
lock
xchg
mov
inc
rolb
loop
push
pop
dec
fs
add
fwait
test
into
lock
sub
es
lret
jl
mov
sbbl
sub
lret
and
mov
push
mov
push
mov
mov
clc
add
push
mov
adc
rorb
push
dec
inc
dec
xchg
imul
mov
mov
adc
sub
push
mov
cli
insb
gs
dec
imul
push
bound
push
loop
mov
xor
insb
cmp
cli
lods
pop
xchg
call
xchg
mov
loope
add
test
mov
arpl
add
jecxz
push
add
outsl
pop
sub
out
sbb
mov
mov
cmp
and
das
addr16
mov
xor
lock
pop
movzbl
push
pop
movsl
or
jl
xor
push
aam
push
mov
pop
push
ret
cmp
or
int3
mov
out
fstpt
das
push
mov
nop
cltd
xchg
jno
mov
add
shrl
mov
cmp
ja
xchg
nop
insb
xor
popf
aaa
ret
push
adc
es
mov
bound
sub
nop
xchg
fcomps
add
add
pushf
or
in
mov
insb
clc
push
xchg
inc
clc
adc
addr16
mov
pop
sti
pop
adc
mov
bound
and
and
dec
pop
push
or
cmp
test
lahf
clc
shl
inc
push
mov
aam
add
dec
add
punpckhbw
nop
stos
adc
xchg
fs
call
mov
dec
mov
gs
sti
bound
mov
repz
repnz
cld
std
adc
xor
sbb
inc
and
pop
sub
lahf
iret
insb
nop
loopne
loop
add
addr16
or
jmp
dec
mov
pop
mov
and
jae
aad
movsb
icebp
inc
ljmp
lret
imul
add
jb
testb
jp
jmp
icebp
or
lret
adc
mov
mov
mov
sbb
daa
push
inc
insb
not
fsubs
enter
and
adc
pop
lock
rorb
mov
cwtl
cmp
add
daa
xorb
xor
jo
in
inc
mov
mov
cwtl
adc
lahf
jno
pushf
mov
cmp
testl
push
push
mov
std
adc
mov
cltd
pop
mov
and
ja
sahf
shl
adc
fisubrs
sahf
negb
sbbl
xor
inc
pop
dec
jo
pop
out
sub
push
mov
dec
xchg
mov
or
arpl
add
mov
in
idivb
xchg
loop
in
bndldx
int3
push
lea
jae
mov
sbb
nop
xchg
mov
fimull
or
insl
outsb
push
mov
hlt
mov
pushf
test
xor
or
xchg
push
mov
and
test
push
mov
cltd
cmp
and
rclb
and
fists
test
mov
push
pop
push
lcall
sbb
aas
sbb
out
call
cmpsl
shlb
mov
data16
stos
or
push
add
jne
out
push
mov
test
jp
or
xchg
xchg
rcll
and
add
sbbb
inc
sahf
dec
push
je
or
fisubrs
gs
or
je
sarl
loopne
test
movsbl
push
into
cmp
mov
mov
rcll
sbb
call
repnz
test
jae
jecxz
cwtl
push
cmp
push
data16
test
fiaddl
jno
push
cmp
push
mov
dec
mov
add
sub
in
add
adc
frstor
sub
fs
and
dec
hlt
add
ror
xor
movsb
shll
out
cmp
cwtl
xor
push
sub
aam
popl
inc
push
loope
or
push
rolb
out
adc
push
cwtl
mov
cmp
mov
xor
out
lcall
int
jnp
add
mov
int
jmp
sub
shlb
sub
cwtl
sbb
inc
mov
rol
push
sahf
sbb
adc
add
rcl
mov
xchg
jp
push
push
lret
icebp
adc
push
dec
inc
test
pop
add
xor
adc
insb
in
popf
out
daa
jae
cmpsb
test
sbb
xchg
fcomps
sbb
adc
movb
mov
xchg
in
in
gs
stos
jne
or
lods
insl
cmpsb
cmp
inc
scas
fistpl
jle
movsl
in
cmc
rorl
fmull
jge
dec
adc
fcoml
mov
test
xor
sub
std
mov
outsl
jno
mov
dec
lds
or
jle
cs
je
ja
mov
cmpl
sbb
mov
jbe
je
push
xor
inc
sbb
sbb
xchg
adc
adc
mov
imul
pop
push
cmp
xchg
movsb
cmp
sub
and
jne
add
or
jge
cmp
mov
xor
mov
cmp
bound
push
stos
cmpsl
sahf
sarl
fstp
mov
out
sub
call
fcoms
rcrb
adc
cli
cmp
nop
xchg
adc
pop
addb
jge
push
xchg
mov
pop
jmp
pop
insl
xor
add
jbe
cmp
pop
add
movsb
iret
dec
mov
mov
push
mov
push
and
bound
pop
and
mov
add
add
iret
jno
push
shrb
jbe
pop
movsb
jmp
jbe
loope
rcrl
sub
sbb
rolb
mov
je
and
insb
or
cmpsb
out
insb
fidivs
push
mov
push
cmpsb
cmpsb
fstpt
lock
mov
test
dec
in
pop
lds
push
jo
mov
push
pop
xchg
adc
xchg
call
push
sbb
cwtl
clc
dec
les
mov
dec
mov
ds
shll
adc
iret
jmp
fbld
or
sar
push
jne
push
fnsave
xchg
mov
je
jae
push
lahf
mov
pop
dec
and
mov
cld
mov
lgs
add
jo
mov
cmp
push
jg
inc
arpl
jae
dec
and
lea
popf
pushf
jmp
jge
insl
mov
fdivrs
xchg
mov
pop
pop
add
push
xchg
push
pop
pop
mov
test
imull
mov
xchg
je
fwait
daa
pop
cmpsl
movsl
movsb
movsl
mov
daa
push
jo
ret
fwait
jae
cmpsl
stc
jbe
rorl
out
test
repnz
cs
int3
xor
repz
lods
lock
push
add
in
mov
mov
popa
dec
cltd
aas
or
and
or
jno
or
test
icebp
inc
aas
push
dec
jb
sbb
ret
stos
scas
movsb
sbb
push
dec
xchg
jno
add
adc
sub
mov
xor
mov
xchg
jmp
jns
sbb
scas
lock
stc
dec
in
int
jae
je
inc
mov
movsb
adc
pop
inc
lods
add
imul
sbb
pushl
addb
cmp
jbe
fdivrs
mov
stos
and
sub
fadd
or
iret
sub
mov
pop
sbb
mov
push
test
add
xchg
sti
cwtl
cmpsl
and
xor
std
pop
movsl
cs
sbb
jne
mov
push
mov
adc
icebp
xchg
mov
mov
lods
pop
dec
ljmp
mov
leave
jle,pt
and
cmp
sub
xor
ret
cmp
add
cmp
mov
out
cmp
ds
mov
ret
fimuls
sbb
push
inc
push
cmc
jne
stos
adc
jmp
or
loope
aam
jecxz
cltd
fcomip
outsb
out
dec
inc
inc
roll
cmp
imul
inc
rorl
xchg
in
popf
add
jge
mov
push
call
outsl
loop
jbe
xor
pop
mov
les
cltd
movsb
sub
xor
enter
imul
loopne
push
xlat
mov
jne
xchg
add
mov
leave
cmp
das
xchg
mov
cmp
dec
stos
je
jnp
pushf
pop
add
cs
mov
sbb
pop
push
lods
js
pop
push
ja
je
insb
mov
xchg
aad
push
or
mov
cmc
mov
or
mov
mov
mov
bound
addr16
adc
mov
mov
cmc
dec
add
hlt
in
or
mulb
lea
dec
cs
sub
bswap
push
sbb
int
sbb
loopne
and
ret
sub
sub
xchg
ss
in
push
pop
cltd
xchg
xchg
mov
push
pop
imul
lods
pusha
cltd
mov
jle,pt
mov
aam
dec
cmp
pusha
cmc
push
fs
nop
repnz
xlat
ds
cmc
jns
sbb
iret
inc
call
mov
pop
aaa
scas
arpl
jae
mov
lods
fcomps
int
pushf
lock
xor
xchg
xchg
xchg
inc
mov
mov
out
clc
mov
lcall
sbb
pop
test
cmc
imul
loope
sbb
shrl
cli
cmp
mov
lods
repz
leave
mov
push
jnp
sbb
lds
mov
aas
pop
ljmp
adc
pop
notb
or
jnp
lds
out
subb
mov
sub
fmulp
fisubl
sahf
leave
and
int3
or
jns
das
dec
ret
mov
mov
jne
sbb
nop
popf
div
shlb
out
add
push
test
leave
sbb
xor
ljmp
cli
fstps
cld
inc
loopne
fwait
int
mov
cli
cmp
push
nop
add
pusha
dec
jne
mov
jecxz
fwait
dec
xchg
xchg
sub
xor
inc
cwtl
mov
call
push
mov
inc
adc
int3
fdivrp
sbb
imul
rorl
lods
add
cmp
push
mov
and
xchg
das
pop
mov
pop
adc
dec
arpl
inc
out
xchg
fs
sbb
sub
mov
rcl
cmp
mov
pop
xchg
cmpsb
sub
jae
sbb
sub
ja
mov
xor
in
mov
icebp
and
sub
xchg
je
sar
xchg
es
movsb
jge
stos
call
je
or
lret
ss
sbb
jge
mov
add
or
mov
jo
add
xlat
and
pop
pop
out
jle
jne
fs
fnstenv
rorl
jns
loop
and
popw
xchg
cli
inc
std
mov
xor
je
lret
fs
ret
pop
sbb
int3
pop
mov
mov
sti
fcompl
dec
xor
fists
push
mov
nop
xchg
nop
ds
push
iret
pop
pushf
mov
pop
mov
add
insl
mov
mov
xor
cmp
jl
test
test
jle
movsb
push
xorb
fnop
inc
xor
mov
and
dec
jmp
stos
push
jbe
pusha
and
arpl
xor
mov
sbb
cmp
je
jae
push
pushf
cmpsl
pop
xor
jg
loope
and
mov
push
jae
jmp
test
lods
fwait
popf
dec
in
inc
mov
iret
jae
cmp
sbb
mov
movzbl
pushf
pop
dec
neg
sbb
xor
sbbl
fsubrl
adc
fwait
orb
sub
jo
sub
fdivp
je
test
in
sub
hlt
je
adc
fwait
loope
int3
cmc
int3
hlt
fwait
jge
ret
mov
test
daa
sub
imull
sub
jl
addr16
xlat
mov
xchg
push
test
inc
pop
pop
dec
mov
imul
into
fcmove
inc
outsb
sub
je
dec
test
pop
sahf
sub
popf
add
fwait
xchg
dec
sbb
lcall
pop
outsl
jno
mov
inc
push
push
mov
jmp
outsb
pop
test
aam
sahf
pop
lods
adc
clc
lock
pop
jle
push
iret
es
clc
movsl
push
out
push
dec
leave
dec
test
inc
fnstcw
orb
xchg
enter
pop
sub
jecxz
add
ljmp
fs
xchg
in
mov
pop
push
hlt
adc
aad
sbb
mov
fidivrs
in
in
add
rolb
sti
add
jle
inc
popa
rcrb
repz
pushf
loope
fldcw
or
mov
mov
or
aas
shlb
mov
call
mov
xchg
pop
pop
jmp
mov
jge
xorb
arpl
jecxz
push
push
fdiv
and
xor
pop
dec
in
lcall
psrlq
adc
cmp
pop
bound
repz
cwtl
cltd
mov
jle
arpl
repnz
repnz
rcrl
in
adc
sub
xchg
aad
adc
mov
in
repnz
xchg
or
inc
or
adc
repnz
or
adc
or
enter
in
imul
sbb
adc
inc
sbb
push
pop
pop
test
jecxz
and
adc
jns
rcr
add
pop
lret
mov
pop
clc
sbb
imul
or
cmp
and
mov
or
pop
add
in
sub
test
push
mov
cmp
push
push
cmp
or
call
push
ds
aam
cmp
xlat
inc
pop
sbb
clc
add
icebp
loopne
mov
sbb
cmc
xor
fs
and
jns
inc
push
inc
xlat
shrb
xlat
jo
jmp
imul
jge
cld
lret
inc
push
popa
xchg
pop
pusha
jne
rorl
xor
jp,pt
and
or
lahf
fdivrp
pop
and
mov
sub
in
movsl
pop
mov
mov
loope
or
push
hlt
icebp
and
mov
fs
repz
jae
shll
insl
sbbl
mov
jmp
and
mull
call
mov
push
push
cmp
mov
jl
pop
std
mov
dec
js
fistl
sbb
ljmp
sub
mov
icebp
mov
sub
xchg
mov
stos
pop
out
xor
mov
in
nop
push
dec
push
ja
jbe
icebp
mov
cmove
dec
pop
xor
inc
data16
rorb
jecxz
or
inc
xor
lods
lock
call
push
imul
push
inc
into
ljmp
ljmp
in
xchg
movsl
pop
pop
ret
cmpsl
inc
mov
dec
mov
pop
add
testb
scas
out
and
fldenv
push
inc
andb
mov
in
and
lock
rclb
and
mov
cmp
frstor
sub
dec
ficoms
test
icebp
ret
sbb
icebp
mov
jne
fwait
enter
jge
movsl
addr16
arpl
jae
and
xchg
nop
mov
xchg
call
adc
test
std
les
push
adc
es
inc
out
mov
push
and
sahf
divb
imul
in
ja
shr
hlt
jo,pt
xchg
xlat
mov
rol
sti
sbb
jns
sub
adc
xor
lret
mov
bound
popf
out
insb
dec
sub
js
cmp
mov
jnp
or
cwtl
lock
mov
into
fsub
daa
push
mov
mov
sbb
fcomp
or
or
xchg
xchg
or
mov
xchg
xchg
xlat
fidivs
gs
dec
sbb
and
or
mov
inc
adc
fchs
jae
je
call
leave
test
cld
mov
cmp
xor
outsl
out
and
mov
mov
in
adcb
jae
xchg
xchg
push
xchg
mov
jne
push
mov
add
fwait
mov
andl
sti
pop
adc
jo
test
xchg
mov
sub
faddl
add
cmp
jle
push
xchg
mov
jo
inc
sub
adc
js
jl
arpl
mov
push
push
mov
into
push
scas
jecxz
mov
pop
jnp
aad
jge
adcl
xchg
sbb
jle
jbe
inc
and
aas
je
fcompl
es
add
sbb
push
or
stos
xchg
loop
cmp
jge
ud0
inc
movsb
pop
cs
adc
jae
push
dec
movsb
or
sbb
rorb
push
nop
movsb
and
outsl
pushf
movsb
popf
add
dec
or
mov
jge
movsb
les
mov
and
xor
sbb
push
dec
mov
std
daa
fmull
and
setl
add
and
cld
jge
xor
or
outsb
jge
and
les
inc
out
filds
mov
push
shll
adc
cmp
imul
int
aas
xchg
push
mov
and
fyl2xp1
inc
insb
insb
cmp
cmp
iret
cmp
mov
enter
cld
jo
ljmp
lahf
sub
loopne
adcb
movsl
pop
test
mov
roll
pop
sti
mov
frstor
test
and
clc
out
mov
movsl
enter
inc
mov
jns
lods
mov
cli
jbe
cmp
ds
sbb
xor
jecxz
mov
xor
mov
cld
in
fstps
in
nop
pop
rcrb
shr
push
clc
in
arpl
and
cs
stc
or
jmp
pop
jmp
call
lahf
js
arpl
push
imul
sbb
add
out
insb
ljmp
lea
cmpsl
or
or
mov
mov
in
mov
sbb
add
out
push
sahf
movsb
mov
lahf
inc
lea
lahf
adc
sbb
clc
sub
lods
xorl
mov
jnp
cmpsb
stc
rorb
jle
push
ret
enter
lea
sub
and
out
inc
inc
shrl
ja
dec
cmpsb
jmp
outsl
imul
dec
push
addl
shl
pop
aaa
mov
lds
cmp
out
jg
mov
hlt
pop
ds
sbb
sbb
jmp
jmp
pusha
mov
outsl
call
push
lret
cs
lret
push
adc
jge
ja
pushf
cmpsb
shrb
addr16
xchg
subb
je
fbstp
mov
cli
add
cmc
add
loope
add
out
clc
loope
and
lods
out
out
or
push
shll
lods
jge
shll
and
rcrl
out
int
sub
dec
push
out
repnz
push
ljmp
insb
cmpsl
ret
call
jbe
adc
cmovno
jge
test
aaa
cltd
dec
lahf
dec
insb
cld
test
rcrl
push
mov
sahf
pop
in
mull
test
ljmp
mov
and
pop
mov
add
addr16
repz
test
jge
fstpt
and
js
aaa
aas
pop
mov
out
inc
jnp
lcall
dec
test
ljmp
stos
data16
cltd
dec
jg
dec
sbb
xchg
xchg
cmp
adc
dec
mov
std
jnp
sub
mov
push
lret
and
mov
push
mov
mov
mov
add
lret
cmp
ret
dec
in
push
jmp
mov
mov
push
sti
inc
pop
push
mov
push
dec
sub
repz
mov
sti
andb
iret
test
mov
movsl
xor
jle
jge
inc
ret
mov
or
sbbb
push
mov
sbb
and
movsl
mov
shll
adc
add
sti
je
fadd
and
test
dec
test
loop
push
mov
add
adc
push
sub
sbb
pusha
loope
ret
mov
lahf
xor
fadds
or
jbe
test
jne
ret
inc
stos
pop
jns
mov
int3
add
std
shrb
add
sub
push
adc
adc
dec
cmc
cmpsb
les
cmp
mov
jg
sbb
xor
adc
arpl
inc
push
xor
in
pop
xchg
dec
sbb
dec
jge
dec
jb
dec
sti
popa
mov
dec
test
and
xor
stos
jmp
jecxz
pop
push
xchg
push
scas
sbbl
push
stos
jecxz
inc
stos
pop
stos
cli
jb
jge
sbb
aas
mov
decb
pop
aad
jne
nop
mov
sub
ds
stos
lcall
popl
loop
dec
jmp
data16
adc
repnz
or
mov
add
sub
cmpsb
rcl
cmpsb
xchg
adc
jl
adc
andb
add
bound
jb
les
fstpl
fiaddl
push
stos
add
xchg
scas
jge
movl
out
jecxz
push
out
out
cmpsl
adc
insb
inc
call
stos
inc
push
inc
jmp
push
shrl
jle
repz
js
mov
jecxz
xchg
inc
push
loopne
pop
shl
dec
xchg
jle
into
imul
push
push
push
jecxz
dec
pop
out
les
arpl
push
cmp
adc
in
jno
lcall
call
xchg
dec
pop
in
out
sbb
call
leave
pop
ja
xor
test
inc
inc
dec
sti
sbb
loop
daa
fs
arpl
jb
test
outsb
adc
aam
mov
js,pt
lods
mov
mov
xor
mov
les
int
loop
xor
push
popa
cmp
arpl
push
je
je
hlt
clc
mov
and
mov
loop
sbb
outsl
stos
roll
loop
dec
and
cltd
push
int3
inc
push
xchg
lods
sbb
inc
test
mov
jae
or
int
add
or
rcrb
loope
addl
cvttps2pi
sub
mov
mov
mov
sbb
push
mov
mov
cmp
mov
enter
push
test
popf
hlt
push
jne
push
push
divb
push
and
pop
push
inc
stos
inc
cmpsl
jb
cli
js
mov
sti
sub
push
lods
or
sub
mov
ret
pop
lods
nop
lods
xor
push
fistpll
je
ucomiss
xchg
sbb
lods
insb
jne
js
movsb
push
inc
cmpsl
scas
aam
sub
out
shll
adc
mov
sub
scas
add
sbb
jo
or
mov
mov
popf
out
sbb
xor
pop
cwtl
xchg
jmp
inc
sbb
pusha
mov
loop
iret
jl
or
outsb
int3
jmp
xchg
push
sub
mov
es
ja
jl
lods
or
popf
popf
popf
out
or
sbb
ret
popf
sbb
ds
out
pushf
loope
subb
sbb
imul
scas
test
push
sbb
sbb
cmp
scas
pop
scas
push
lcall
mov
bound
push
test
inc
fadds
movsl
xchg
loope
jnp
dec
shl
xchg
clc
and
inc
push
dec
test
cltd
es
xchg
push
lds
mov
inc
lret
lret
adc
stos
shr
pop
mov
imul
out
sub
mov
jns
lret
fcomps
loopne
fnstenv
flds
lock
pop
addr16
fldl
cld
sub
jbe
add
aam
xchg
es
xor
into
loope
lcall
jmp
mov
jecxz
rcl
add
inc
loope
into
lea
pop
sbb
xor
dec
inc
add
mov
ss
and
call
cwtl
pop
jno
sbb
shrb
adc
rorl
outsb
std
pop
fdivr
outsl
sbb
cmp
push
pop
jb
xlat
rcrl
xchg
shlb
xor
mov
cli
fldt
mov
movsb
mov
fsubrl
popf
and
int
and
rcrl
dec
xchg
jns
testb
arpl
in
sbb
fwait
mov
mov
pop
xchg
addr16
inc
add
cmpsl
sub
jne
hlt
jo
xchg
fildll
ficompl
mov
mov
xchg
dec
sbb
mov
mov
xchg
fldt
push
imul
jo
fwait
add
lock
sahf
out
cmp
mov
je
jnp
clc
lea
xor
jle
mov
loope
sbb
jmp
sbb
mov
ds
pusha
mov
mov
xor
and
icebp
xlat
jns
pop
push
jcxz
js
jle
mov
inc
push
adc
jbe
jne
pushf
cmpsl
sub
div
ds
inc
mov
scas
mov
aas
fdivl
dec
bound
jp
inc
daa
sbb
nop
fimull
test
into
mov
push
dec
pop
mov
inc
jbe
mov
or
jnp
or
or
fsubrs
sub
adc
lcall
push
mov
pusha
mov
push
pop
cmp
jecxz
ror
xchg
das
sbb
mov
mov
pop
and
pop
jmp
inc
adc
mov
sti
js
in
mov
mov
mov
inc
cmpsl
mov
sub
popf
mov
pop
andl
repz
add
stos
jb
mov
stos
mov
inc
push
enter
ds
sbb
shll
test
push
and
pop
push
ljmp
rorl
xchg
inc
jge
mov
mov
mov
mov
shr
xchg
repnz
stos
jno
push
xchg
or
jo
sti
fcomps
mov
mov
aad
mov
push
pushf
aaa
inc
enter
xchg
icebp
ljmp
arpl
test
out
jl,pn
sbb
pusha
dec
sbbl
add
xor
popf
adc
inc
jg
in
mov
aas
pop
js
add
adc
mov
sbb
lods
push
push
xchg
js
xchg
push
int3
int3
sbb
stos
mov
into
cli
cld
je
and
lea
push
mov
mov
xchg
rcl
push
clc
into
lret
dec
mov
pop
std
fstps
fs
xor
pop
insb
lea
aam
jo
mov
popa
mov
jbe
inc
lods
mov
add
push
push
inc
push
sub
addl
fcomps
lds
pop
sbb
or
add
jb
mov
mov
in
mov
lcall
fwait
inc
xchg
clc
scas
pop
stc
iret
inc
jo
sbb
mov
hlt
subb
shll
dec
sbb
cmp
sbb
push
mov
add
test
dec
dec
loop
icebp
adc
cmp
dec
fsubs
inc
subl
adc
mov
xchg
dec
rcr
sbb
movsl
push
ficoml
mov
nop
jae
adc
cld
fs
cld
test
adc
add
pop
mov
dec
cmp
sbb
repz
or
or
scas
shlb
pusha
out
pusha
loope
xchg
enter
sarb
xlat
xor
fs
sub
pop
xor
lea
movsl
adc
dec
ficoml
bound
call
rolb
fimull
adc
mov
ds
fdivs
dec
negb
push
sub
lds
lods
arpl
inc
nop
xchg
mov
leave
cs
mov
adc
test
clc
push
je
sbb
pop
push
dec
xor
cltd
cmc
sub
dec
cmp
pop
gs
nop
int
jne
sbb
sbb
mov
push
xchg
mov
push
cmp
aaa
addr16
mov
inc
outsb
xor
pop
rcrl
push
dec
mov
test
roll
lock
cmp
aad
lods
sbb
or
out
popa
outsb
mov
mov
jmp
sub
mov
cli
jae
nop
cwtl
xchg
stos
popf
xchg
and
push
hlt
mov
ljmp
movsb
add
std
imul
pushf
jle
pop
adc
add
jge
sahf
punpcklbw
jo
inc
mov
push
adc
jmp
loopne
shll
test
sbb
fmuls
cmpsb
jge
xchg
shll
shlb
xchg
test
mov
sbb
jecxz
roll
mov
xor
pop
insl
sub
out
jecxz
sub
popw
jo
jg
mov
pop
mov
push
cmp
add
push
xchg
or
jmp
mov
fnstenv
jo
xor
rolb
cs
call
and
je
cmp
aad
shrb
mov
cmp
lods
push
or
mov
mov
in
ss
out
lock
pop
and
scas
pop
push
enter
and
insl
sub
outsl
dec
fwait
and
and
dec
addr16
shlb
sbb
testl
cltd
or
and
jge
iret
fcmovnbe
mov
daa
and
xchg
inc
test
repnz
cli
sub
pop
mov
ja
xchg
or
jbe
rorb
inc
ficompl
out
clc
icebp
inc
or
adc
add
pop
sbb
or
aas
xchg
mov
ret
cltd
hlt
into
lods
xlat
pop
into
adc
cwtl
aas
out
mov
int3
or
stc
mov
mov
ds
mov
inc
sarl
andl
push
sbb
rcrl
stos
addr16
lret
jge
xor
jo
setae
roll
je
out
dec
arpl
add
in
jge
push
shl
lret
pop
leave
xor
push
pusha
leave
cld
lret
clc
lret
icebp
sbb
rclb
pop
add
rolb
mov
cmc
loope
add
add
mul
mov
push
mov
dec
mov
popf
lods
pushf
inc
icebp
cmp
das
jnp
enter
jg
leave
xor
clc
inc
enter
enter
leave
push
pop
cs
mov
push
dec
push
mov
xchg
jmp
leave
mov
mov
popa
adc
xchg
mov
je
ja
push
leave
mov
enter
ja
cwtl
mov
sbb
test
push
adc
cmp
mov
ficoml
repz
call
sub
in
sbb
jmp
lret
add
sbb
add
sti
pop
sbb
cmp
add
pop
iret
test
shrl
shrl
ret
jge
cli
or
inc
mov
dec
mov
scas
movsbl
xor
jl
inc
fnstsw
nop
push
inc
ljmp
lret
nop
out
pusha
inc
gs
or
inc
dec
out
push
in
roll
pop
mov
fiadds
cmp
jne
add
xchg
cmp
stc
cmpsb
lods
xchg
mov
insl
test
jo,pt
stc
jne
aam
movsb
jnp
jge
test
je
movsb
insb
jns
jg
rclb
addr16
push
mov
xor
jge
div
jle,pt
mov
adc
bt
xor
xchg
dec
fildl
ret
enter
jle
sub
xor
xchg
ljmp
sbbl
insb
dec
xchg
inc
lds
add
in
mov
dec
pop
adc
or
mov
into
ds
inc
cmp
clc
cmp
and
jo
push
movl
in
in
in
cld
push
hlt
hlt
add
inc
roll
mov
add
dec
sub
std
stos
test
adc
adc
fs
pop
push
xchg
push
enter
dec
push
fstl
push
cltd
ds
andb
sub
inc
dec
adc
or
fdivrl
jo
call
je
adc
add
cwtl
dec
xchg
icebp
test
rsqrtps
xchg
dec
and
pushf
mov
ret
pop
xchg
push
and
nop
test
aam
adc
das
and
jo
insb
lea
and
mov
fwait
outsl
fisubrl
popf
push
adc
hlt
scas
inc
lods
sub
ret
ret
imul
xor
inc
fstps
popa
into
ret
movsl
sbb
jmp
mov
add
sbb
add
mov
cmp
dec
dec
loop
lcall
xor
mov
jmp
mov
inc
or
sti
insb
jo
je
xchg
inc
inc
mov
and
aas
xchg
rol
jmp
out
cwtl
mov
shlb
mov
pop
call
push
inc
jbe
pop
xor
je
xor
and
lock
sub
inc
sbb
frstor
aad
mov
dec
dec
rol
fdivr
xchg
std
jge
push
pop
cwtl
mov
mov
repnz
push
sbb
scas
push
sbb
add
js
dec
pop
cli
mov
sub
in
fiadds
fwait
adc
ds
mov
pop
or
or
mov
xchg
inc
fs
adc
jg
hlt
lds
lea
mov
dec
jnp
jle
xor
popf
hlt
les
les
loop
clc
adc
out
hlt
push
xlat
lods
jge
dec
push
add
inc
mov
xor
in
insl
lcall
pop
adc
loope
out
cmp
fidivrs
mov
mov
pop
jne
inc
mov
jle
stos
jecxz
rol
pop
adc
cmp
fadd
test
xor
int3
adc
bnd
xor
bound
push
push
jle
loopne
test
push
imul
cmp
addr16
lods
mov
icebp
in
int3
mov
inc
sbb
pop
int3
mov
sbb
fistpl
mov
mov
add
ja
sbb
mov
sub
daa
ljmp
xchg
add
ret
out
pop
daa
xchg
test
out
or
das
xor
shl
aam
ret
xchg
xchg
insb
mov
icebp
sub
xor
rol
cltd
mov
cmp
int
cmp
mov
cli
adc
mov
and
enter
mov
sub
dec
pop
add
fcmovne
adc
addr16
dec
pop
enter
loopne
js
adc
dec
call
pop
ljmp
xchg
arpl
add
add
jg
and
mov
xchg
test
stc
mov
mov
push
xor
adc
lods
sahf
and
mov
addr16
and
push
ss
dec
ja
cmc
outsb
js
int
sub
dec
insb
jae
mov
inc
ret
or
add
ss
pop
jle
mov
rorb
int
mov
mov
or
sub
jle
mov
popf
imull
stos
inc
xlat
out
rclb
fs
test
adc
push
arpl
cmpsb
mov
push
movsl
in
push
push
scas
outsb
or
and
aas
xchg
xchg
xor
push
int3
sbb
pop
subb
jecxz
push
sub
cmp
test
fdivr
arpl
imul
xor
mov
sahf
push
sbb
sub
mov
mov
xchg
push
inc
adc
sbb
enter
stc
stos
pop
jbe
sbb
xchg
daa
inc
inc
mov
cmp
insb
mov
dec
xor
push
push
pop
add
fldenv
loop
fsubrp
loop
jmp
je
stos
ja
ret
push
add
fdivl
les
jno
jmp
cmp
mov
pop
add
adc
dec
rorb
sub
mov
mov
out
push
push
pop
lods
repz
mov
mov
lods
dec
hlt
push
test
out
test
dec
enter
nop
mov
ja
loopne
cld
clc
sbb
add
add
pop
jno
movsb
cmp
repnz
jle
scas
jmp
lds
mov
push
cmp
repnz
dec
int
jae
subb
fstps
inc
dec
rorl
push
loopne
mov
ret
adc
les
adc
sarl
xorps
imul
mov
test
jne
shr
rcl
dec
in
cmpsl
ret
xchg
stc
out
xchg
lock
insl
sub
jmp
mov
shlb
movsl
in
sub
mov
ret
adc
out
xor
jmp
mov
pop
les
test
repz
shll
icebp
mov
scas
in
mov
out
xchg
mov
mov
in
mov
adc
js
jmp
cwtl
inc
xchg
lock
out
dec
lret
mov
add
mov
mov
mov
pop
clc
or
and
cli
or
lds
in
fwait
inc
arpl
mov
xchg
rcl
addr16
mov
push
insb
pop
testl
scas
mov
into
jp
int3
pop
and
and
cmpsb
je
jmp
mov
mov
in
hlt
lds
jae
fs
je
popf
or
cmpsl
cld
lahf
push
push
pusha
cmp
add
and
testl
clc
das
jmp
inc
sbb
jb
lds
mov
sarl
mov
call
push
leave
sbb
jl
jge
sub
in
cmp
and
je
inc
adcl
cmp
inc
push
or
xor
rol
sbb
pop
les
movsl
and
push
cmp
xchg
push
ljmp
mov
xchg
movb
xchg
enter
cmp
je
mov
nop
inc
nop
push
inc
std
push
pop
popa
mov
or
repnz
sbb
xchg
or
adc
or
movsl
lock
popa
aaa
cmp
sub
mov
pop
hlt
ss
sub
fs
push
shld
dec
mov
ljmp
or
cmp
and
xor
nop
dec
push
bnd
cmp
pushf
lods
test
pop
jae
leave
cmp
xchg
xchg
add
mov
adc
clc
or
sub
and
sub
mov
test
mov
inc
sbb
pop
and
mov
fildll
mov
pop
and
das
push
mov
inc
mov
add
repz
loope
xchg
loopne
xorl
gs
dec
adc
sub
dec
clc
imul
movsb
xor
mov
adc
cld
lret
subl
cmp
cmpsl
and
nop
push
push
cmp
fnstcw
imul
fsubl
fdivs
mov
mov
pop
call
cmc
xor
outsb
add
repnz
inc
nop
repnz
fisttpll
mov
and
mov
adc
lds
add
out
pushf
inc
dec
imul
mov
add
fnstsw
mov
add
shr
dec
add
ja
mov
adc
xchg
das
inc
push
orl
dec
ljmp
sub
ds
push
inc
addr16
sub
movsb
mov
sbb
icebp
test
or
shll
arpl
lret
aam
cld
sub
fcoml
popa
jp
cld
pop
sub
rcrl
stc
sbb
dec
inc
idiv
adc
and
lea
jo
cmp
shl
mov
jne
in
mov
push
jnp
lea
or
pop
cld
movsl
divb
jne
pop
mov
dec
push
pop
jne
fnstsw
in
sar
cld
mov
and
mov
mov
lret
mov
sbb
sub
sub
dec
mov
repz
nop
pop
sbb
inc
mov
and
and
xchg
test
jno
xor
jge
test
ja
sub
push
mov
xor
and
ret
and
sbb
into
fwait
outsb
mov
adc
in
pop
je
mov
sub
lret
xor
sub
push
push
out
jns
push
mov
sbb
adc
pop
cmc
cmp
adc
dec
in
inc
addb
movsl
mov
mov
mov
adc
cmp
adc
loope
push
cmpps
je
pop
or
add
lret
leave
mov
gs
or
fdivl
push
je
mov
insl
add
ret
movsb
dec
fsubl
add
mov
adc
das
inc
mov
sub
cmpsl
jns
test
mov
shlb
sbb
clc
push
dec
push
int
xchg
pop
das
hlt
fs
inc
dec
push
enter
mov
out
and
mov
cmp
cli
jl
inc
sbb
sub
and
push
mov
enter
in
adc
orb
fcomp
cltd
mov
je
mov
inc
js
sub
fs
jae
mov
xchg
std
cmp
mov
cld
sub
cmp
clc
test
sub
test
sub
inc
mov
dec
lea
sub
or
imulb
sbb
push
loopne
imul
lods
jne
mov
mov
mov
mov
push
xchg
in
roll
gs
sbb
xor
clc
pop
les
push
nop
or
push
push
and
mov
and
mov
add
inc
insl
lahf
push
sbb
adc
mov
sub
xchg
lds
popf
mov
and
pop
xor
das
mov
xor
test
dec
dec
push
dec
lods
insl
push
add
mov
and
xor
push
mov
adc
flds
cwtl
add
mov
clc
cmp
fisubrs
cmp
xabort
mov
and
test
jnp
sbbl
mov
jnp
pop
push
mov
decl
inc
loopne
xor
je
dec
scas
jnp
push
inc
or
jbe
lea
outsb
out
push
xor
in
adc
sub
push
xchg
push
push
mov
dec
xchg
inc
mov
sbbb
imulb
outsl
xchg
adc
movsb
in
in
sbb
enter
jne
nop
and
je
cld
pop
mov
pop
inc
push
iret
outsb
rorl
or
jae
into
into
xlat
pop
fs
mov
add
call
and
xchg
dec
inc
jp
js
cltd
stos
pop
outsb
push
pop
cmp
mov
sbb
jo
add
imul
data16
ficoml
fcoml
dec
sub
push
dec
cmp
xchg
lret
repnz
jg
pushf
fsubs
fcoms
mov
neg
mov
sbb
fisubl
xchg
aas
mov
movsb
add
or
push
aam
les
and
pushl
rcr
cmp
pop
mov
jo
inc
or
dec
ret
clc
cmp
call
fcmovnb
pushf
sbb
xchg
je
subb
jmp
insl
les
pop
cli
add
sub
inc
loope
andb
xchg
das
cs
sbb
fiaddl
insb
xchg
dec
leave
test
fwait
addl
cmp
xor
test
dec
dec
pop
lea
xorb
mov
add
enter
inc
mov
cltd
mov
dec
fcomps
mov
or
in
mov
jp
cwtl
sbb
lahf
add
add
push
mov
xchg
pop
rcl
mov
push
mov
sbb
push
cmp
aaa
jge
test
mov
xchg
movsl
xor
int3
xchg
add
aam
into
adc
mov
sub
pop
cwtl
adc
popf
pusha
repnz
hlt
jle
mov
out
inc
out
andl
pushl
mov
lret
xchg
sub
shlb
mov
inc
xchg
inc
jnp
and
jb
jmp
jp
mov
mov
out
rsqrtps
dec
sarl
push
dec
cmp
mov
call
roll
jecxz
sbb
movsl
sub
jbe
inc
sub
lods
mov
push
or
and
or
xor
add
push
push
jno
mov
xchg
test
stos
inc
outsl
push
mov
in
cmp
xchg
mov
movsb
mov
add
inc
decb
sub
mov
sarl
jne
push
add
fcmovnbe
or
push
push
fcompl
add
mov
mov
hlt
and
sarb
les
push
rolb
inc
cwtl
pop
push
popa
dec
gs
jnp
mov
arpl
ljmp
xor
mov
mov
mov
loop
sub
pop
pop
test
inc
and
mov
fcoml
fcoms
adc
sub
xchg
cs
inc
lock
out
stos
and
movzwl
and
dec
xor
add
pop
sahf
enter
lret
and
and
lds
cmp
and
mov
shrb
xchg
cli
ret
mov
je
and
sub
lds
adc
sti
dec
aam
jae
rclb
sbb
xor
lock
in
insb
shrl
push
mov
mov
sub
sbb
les
lods
push
adc
aad
jp
mov
icebp
cmp
push
enter
xlat
cwtl
enter
or
pop
jne
outsl
rcr
enter
jecxz
enter
leave
push
jmp
leave
and
dec
push
fs
inc
mov
test
push
fidivrl
cwtl
xor
adc
xchg
mov
andl
xor
dec
cmp
push
fadd
call
loopne
call
pop
insl
mov
dec
and
inc
jmp
mov
mov
lds
call
sbb
sbb
add
push
les
adc
movsbl
iret
mov
loopne
jae
inc
in
imul
fisttpll
shrb
adc
inc
mov
add
aad
sbb
mov
and
mov
test
mov
xchg
and
push
push
mov
loop
scas
sub
add
mov
or
test
movl
std
loopne
jmp
out
inc
xchg
jmp
sub
push
dec
xor
in
js
sub
and
jl
inc
lret
sbb
dec
dec
es
add
mov
jbe
xchg
fists
das
jecxz
jne
loopne
lea
adc
dec
imull
inc
adc
pop
in
or
icebp
xor
sbb
pop
mov
add
ret
bound
je
add
pop
int
inc
fsubrp
cltd
mov
out
mov
fcomps
out
mov
dec
and
test
xchg
jle
addr16
add
ret
popf
add
or
sbb
xor
sub
sbb
and
fs
mov
lret
xor
or
outsl
push
fists
cmpsb
arpl
decb
sub
push
add
mov
lret
repz
jecxz
ljmp
out
nop
or
push
lcall
push
dec
hlt
and
mov
dec
jne
push
imul
cmpsl
push
imul
test
mov
push
sub
add
add
and
xor
ja
jmp
jmp
jmp
dec
leave
cmp
pop
mov
inc
mov
adc
enter
xchg
ror
nop
or
sub
leave
mov
ror
data16
and
out
into
jl
dec
mov
clc
subb
or
and
and
movsb
das
sub
lock
xchg
sub
mov
bound
popf
inc
push
ss
or
lods
cli
mov
jl
sub
mov
push
dec
enter
mov
xchg
imul
call
nop
adc
aam
movsl
inc
iret
or
mov
aaa
or
jns
ljmp
pop
dec
lds
test
cmp
push
or
inc
pop
js
mov
or
mov
mov
push
nop
or
pop
push
cli
inc
sbbb
and
into
sbb
je
int3
xchg
mov
mov
push
movsl
jmp
sbb
push
imul
lea
and
sub
mov
sbb
jmp
into
loop
jmp
adc
cli
call
xchg
mov
cmp
and
imul
jg
insb
daa
dec
mov
dec
stc
test
jnp
pusha
sub
in
inc
outsb
push
or
pop
xchg
mov
or
mov
add
pop
mov
arpl
and
popa
jge
cmpsl
sub
insb
les
cmp
imul
sub
cltd
test
xor
push
mov
lods
adc
pusha
mov
sbb
and
sti
cmp
int3
jae
jmp
das
out
movsl
xorl
adc
sub
adc
ss
test
jns
inc
dec
daa
dec
xchg
inc
add
clc
lea
jmp
dec
scas
sbb
or
pop
cmp
cs
mov
fnstcw
jbe
inc
cwtl
pushf
rol
mov
out
shl
push
fcomp
add
clc
clc
cmp
adc
pop
jbe
sub
int
repz
inc
inc
mov
pop
lock
daa
shll
jge
push
pop
sub
andl
xchg
ljmp
daa
push
or
or
sub
pop
test
addr16
rcll
sub
push
mov
mov
pop
jl
mov
adc
gs
mov
out
adc
mov
sbb
pop
gs
es
pop
push
call
outsl
pop
pop
movsl
jecxz
in
rol
inc
push
lods
inc
jbe
leave
nop
pop
outsb
cmpl
popa
push
sbb
in
add
clc
mov
loope
lret
fcompl
and
push
hlt
call
cmc
pop
movsl
les
sub
mov
push
hlt
push
mov
cmp
rolb
aaa
adc
xor
inc
fildl
lcall
inc
adcb
push
lret
adc
iret
inc
repz
push
ja
test
call
dec
fs
mov
leave
icebp
adc
dec
clc
daa
push
iret
lea
cmp
add
stos
xchg
push
sub
inc
add
pop
stos
xor
push
cmp
or
call
cmp
xchg
inc
adc
pop
mov
add
mov
ja
mov
xchg
lea
cmp
int3
push
xchg
inc
push
adc
jmp
in
jns
imul
or
ljmp
pop
out
adc
lds
push
add
or
adc
jmp
in
cli
or
enter
repz
sub
and
xchg
push
cmp
subb
std
sbb
sbb
std
sub
pusha
lret
and
push
orl
mov
cmp
add
iret
stos
fstpt
mov
pop
iret
push
mov
mov
int
leave
jns
adc
jne
fnstenv
push
push
out
sbb
in
std
inc
mov
push
ficoml
ret
xor
gs
jl
fs
inc
adc
pop
push
aad
cmp
movsl
loop
jns
subl
outsb
pop
or
and
mov
or
mov
mov
in
test
jae
pop
testl
pop
cmp
xlat
dec
call
lods
mov
movsb
sub
xchg
inc
cmp
adc
clc
mov
orb
push
dec
in
and
cmp
inc
popf
cli
mov
fisubrl
add
ja
cmpsb
popf
sahf
xlat
push
cli
mov
popf
cli
cli
push
cs
lcall
mov
mov
pop
lock
je
jg
mov
and
push
lods
mov
lret
and
andb
pop
mov
lods
push
cld
cwtl
rclb
ljmp
repz
mov
and
xor
lahf
sahf
xchg
xlat
stos
pop
ds
ficoml
movsl
test
xchg
jnp
aad
pusha
xlat
addr16
fwait
pop
movsb
aam
in
or
scas
std
lahf
pushf
and
jge
pop
mov
in
fnstsw
xor
mov
adc
sbb
inc
aad
out
movsl
add
cli
jno
dec
inc
inc
lcall
jne
or
cmpsb
cmp
arpl
and
xor
jbe
aam
lock
inc
lahf
jge
lock
jb
sbb
jg
mov
jae
imul
add
into
push
inc
insl
jge
push
pop
sbb
add
andb
jg
push
or
pusha
fbstp
movsl
or
xchg
hlt
pop
sbb
inc
fldl
lock
insb
gs
orb
xchg
pop
jmp
xchg
jne
lds
in
enter
in
adc
mov
fbld
pop
push
adc
adc
nop
aam
xor
in
sub
sub
mov
daa
add
sbb
add
push
loop
inc
add
enter
loopne
or
ljmp
fwait
xor
and
jae
adc
push
mov
fcmovu
and
loopne
iret
lret
insl
dec
bound
add
clc
imulb
push
stos
popf
clc
sbb
lcall
ret
movb
jne
push
cmpsb
jae
dec
movsb
cld
push
stc
dec
mov
test
sahf
in
mov
ss
mov
dec
sub
mov
cwtl
in
xor
or
mov
adc
icebp
or
pop
xor
subb
add
hlt
ss
mov
fisttpl
rol
scas
and
fsub
adc
sub
mov
add
mov
mov
lods
mov
lret
add
arpl
push
sub
mov
scas
lods
scas
es
sti
jge
shrb
jmp
mov
jne
and
rcll
in
fnstenv
in
insb
dec
sbb
mov
adc
xor
lar
adc
sub
add
icebp
jmp
outsb
inc
and
jmp
push
fs
daa
xor
mov
leave
xchg
add
cld
add
pavgw
fdivs
add
sbb
pop
push
inc
inc
mov
push
jmp
add
jno
or
xor
loopne
addl
jne
popf
fsubr
gs
or
pop
aas
mov
ret
mov
xchg
mov
push
add
rorl
mov
mov
cmpsb
pushf
fs
jle
pushf
test
movsb
sahf
aaa
inc
and
or
pushf
mov
jbe
sbb
sbb
cmp
dec
jns
add
stos
loop
addb
shrb
mov
repz
incb
lds
je
out
push
js
mov
mov
mov
popf
fbstp
insb
pop
inc
je
pop
mov
mov
jo
aam
lods
lods
add
dec
lret
gs
jmp
incb
lds
adc
xchg
inc
sti
add
dec
jne
add
xchg
jb
and
jb
sub
jge
cltd
ret
lret
pop
push
push
mov
adc
test
xor
data16
movsl
fsubrs
push
dec
sbb
inc
push
push
adc
mov
dec
dec
push
mov
and
insb
loope
mov
jo
add
cmp
add
in
adc
cmp
in
jmp
pop
mov
cmp
push
add
aad
add
jno
pop
add
add
stos
sbb
xchg
and
and
lock
add
loopne
push
in
call
popf
sub
inc
adcb
xlat
js
push
lret
add
add
or
xor
enter
bound
call
inc
fs
sbb
lcall
or
daa
mov
inc
pop
addr16
jne
aaa
xor
jne
and
sbb
fcom
adc
jae
sub
lea
shr
dec
lea
dec
hlt
js
out
mov
fcompl
insb
or
stc
adc
inc
jb
mov
ljmp
mov
bound
cmp
mov
sti
add
mov
xchg
scas
mov
nop
in
and
inc
jne
sete
or
fsubrl
add
add
aam
sub
int
dec
inc
movsb
lods
cli
test
xchg
add
sub
inc
push
les
out
mov
aad
fst
mov
sub
aas
in
filds
dec
add
out
jno
repnz
fisttpll
lret
xchg
and
jg
cmp
pop
int3
cmp
leave
push
sbb
add
popf
push
or
adc
dec
and
in
sub
popa
push
mov
mov
dec
aam
lret
push
cmpsb
sbb
xchg
out
fs
sbb
sub
test
sbbb
dec
xchg
imulb
jg
adc
mov
je
cmp
xor
sbb
jg
jnp
outsl
sub
test
mov
mov
push
movsb
xchg
mov
and
outsl
mov
cli
xor
sbb
xor
popa
jb
notl
dec
push
in
inc
xchg
lds
push
mov
add
mov
into
add
leave
arpl
sub
sarl
and
adc
push
rol
in
add
sbb
js
push
jmp
and
or
mov
push
mov
push
movsb
mov
js
lret
rcrb
enter
cmp
cmp
rdtsc
pop
pop
mov
fiaddl
and
xchg
pop
adc
rcr
inc
aad
sub
mov
mov
push
sub
stc
xor
mov
or
roll
push
mov
dec
test
call
xchg
enter
pop
xchg
lcall
adc
lods
repnz
cld
icebp
cmp
into
and
pop
jae
add
pop
push
fistl
sbb
bound
fisubs
out
sti
lcall
xchg
stos
mov
add
cmp
aam
aam
adc
cmp
popaw
ja
imul
out
mov
jne
out
mov
sub
mov
in
cmp
sti
push
pop
sub
sbb
insb
sub
mov
mov
loop
inc
lds
jns
mov
sbb
mov
xchg
adc
test
movb
hlt
inc
push
or
adc
pop
orl
repz
mov
orl
mov
push
je
pause
dec
push
les
mov
inc
movsb
test
sbb
icebp
enter
jae
mov
xor
imul
mov
cltd
jl
out
adc
cmpsl
jno
jp
push
pop
xor
inc
mov
gs
test
jns
jns
adc
notb
inc
jle
xchg
fdivrs
dec
fdiv
aaa
lahf
mov
jne
sub
mov
sub
loopne
mov
inc
add
test
jl
and
div
imul
iret
cmp
rcl
mov
mov
ret
sarl
push
jmp
sbb
je
mov
adc
bound
ret
pop
fdivl
cltd
popf
test
orl
mov
sbb
adc
movsb
les
cmp
push
inc
shlb
mov
fbld
inc
pop
pop
gs
rcrb
push
xlat
dec
lret
movsl
xor
or
sbbb
jae
add
int3
mov
cli
test
outsl
jge
iret
sbb
pushl
and
dec
push
lcall
cwtl
mov
das
pop
xchg
mov
cmp
out
outsb
outsb
test
push
ret
bound
mov
je
insb
or
mov
test
and
enter
jnp
xchg
pop
add
jae
stc
xchg
ret
jno
ds
nop
nop
loop
es
sub
int
jae
mov
out
pop
test
push
jb
out
orb
mov
fldcw
pop
test
mov
sbb
dec
add
jnp
ret
jmp
sub
mull
adcb
jno
imull
fwait
jl
gs
test
in
inc
fdivrs
out
add
xor
jecxz
push
cmp
push
je
jp
mov
mov
and
mov
aam
notl
sub
dec
adc
pusha
push
imul
xchg
mov
data16
scas
xchg
daa
out
jle
outsb
sahf
lcall
push
js
addr16
jae
cwtl
jp
cli
in
fistl
int
les
pop
aad
lret
sub
into
mov
sub
scas
dec
jmp
xor
mov
call
xchg
movl
sbb
dec
bound
push
xchg
notl
aaa
jp
cld
in
inc
rolb
jns
push
popf
lock
das
call
adc
mov
cmp
add
mov
daa
inc
mov
insb
dec
inc
mov
imul
jne
mov
in
pushf
stos
pop
popf
aad
mov
lea
imul
and
xchg
insb
and
lret
fs
in
lea
sbb
or
push
or
addr16
les
stos
jecxz
inc
push
sbb
inc
xchg
scas
mov
and
push
push
clc
js
scas
sbb
push
add
mov
repz
adc
and
dec
fcmovu
jle
xorl
mov
lock
sbb
shr
sub
mov
and
lds
xor
sti
js
pop
jo
out
dec
pop
sbb
xor
lock
loope
push
push
in
aam
insb
ja
add
aad
push
sarl
addr16
jge
adc
adc
jne
xchg
cmp
add
dec
xor
lds
add
gs
mov
bound
movsl
and
in
fisubrs
cmp
sbb
and
cwtl
mov
imul
and
push
mov
negb
pop
pop
mov
dec
mov
cmp
xor
add
adc
jns
cmp
movsl
and
xchg
sub
movl
ljmp
ss
jmp
in
hlt
cmp
dec
add
rolb
add
inc
mov
lods
jge
lar
mov
pop
adc
jno
mov
cmpsb
jbe
mov
pop
andl
subb
pop
pop
rcll
sbb
ror
sbb
out
stos
mov
jl
mov
ret
int3
add
test
in
les
addr16
into
inc
lds
cmpl
ljmp
mov
pushf
and
push
out
push
icebp
aas
repnz
pop
pop
out
ja
nop
cmc
testb
clc
test
jno
cmpsl
mov
cli
fs
cwtl
jmp
das
fldlg2
cld
andl
fs
pushf
fimull
inc
sub
pop
sqrtps
cmp
xchg
clc
adc
call
add
lea
add
add
insl
jno
xor
repz
mov
lods
rcll
arpl
ss
btc
int3
jae
pop
jl
arpl
xchg
mov
push
test
dec
mov
shr
lds
pop
push
sub
mov
es
stos
xor
into
addb
mov
fisubl
mov
or
mov
icebp
shl
icebp
sbb
out
les
cld
mov
mov
fwait
negb
mov
and
cltd
adc
andb
dec
popa
xor
fs
arpl
mov
dec
adc
add
inc
and
mov
sbb
seto
imull
inc
push
movsb
cld
jl
hlt
cmc
sbb
inc
jecxz
sub
pushf
in
mov
les
cmp
sub
add
aam
pop
iret
fsubrl
sub
fwait
xor
or
pushf
insb
adc
mov
mov
mov
pop
or
or
sbb
mov
jb
sbb
insb
sbb
mov
rclb
sub
int3
cmpsl
mov
into
enter
shll
icebp
js
sbb
fadds
mov
jl
jecxz
jle
dec
xor
xchg
mov
push
inc
lods
movsl
outsl
out
test
add
and
std
add
inc
sub
arpl
adc
xchg
jmp
xchg
out
jmp
mov
xlat
mov
aam
aam
je
sub
xor
aad
and
inc
adc
loope
mov
pop
filds
lret
lods
arpl
adc
lds
test
add
or
outsl
add
or
sbb
mov
clc
shrb
or
out
push
push
mov
mov
dec
cli
cmp
add
std
test
pop
pusha
call
inc
add
loopne
lcall
out
mov
out
and
jbe
test
loop
nop
lea
push
mov
enter
and
into
inc
sbb
pushf
adc
pop
lock
sub
xchg
xchg
push
push
aad
mov
dec
loope
xor
jmp
movb
or
mov
int3
fstpl
jnp
add
data16
test
or
jg
jnp
push
and
mov
sub
or
xlat
add
push
sub
cmp
adc
repnz
rcll
shrl
or
mov
int3
insb
mov
push
insb
sub
xchg
cmpsb
in
add
cmpsl
jl
push
mov
mov
add
cmp
xchg
cmpsl
aaa
outsb
inc
repnz
sub
xor
lcall
mov
and
adc
fsubrs
sbb
inc
inc
adc
ja
sub
mov
inc
or
mov
in
jmp
push
push
jecxz
mov
xchg
sbb
mov
je
nop
sbb
push
cmp
push
sub
je
pop
popf
cwtl
test
aas
or
mov
xchg
sub
cltd
push
push
pop
xchg
jmp
jmp
lods
outsl
jecxz
in
popf
xor
icebp
jmp
mov
das
rclb
rorl
cmp
jno,pt
xorl
cmp
insl
jne
jmp
xchg
mov
dec
and
jne
xchg
mov
stos
hlt
add
xor
push
hlt
pushf
sub
test
sub
add
jne
movl
inc
add
jne
sub
mov
jmp
mov
pop
fsubrs
pop
add
or
cmp
jge
jp
es
add
js
sbb
loope
hlt
data16
jl
fidivrl
sub
jg
dec
cld
jae
jmp
and
into
and
push
jge
out
lock
pop
movsb
adc
push
sti
mov
pop
adc
sub
cmp
pushf
aad
inc
or
sbb
add
and
and
push
sarl
loopne
fdivrl
or
and
cmp
cmp
sub
test
jb
out
mov
sbb
inc
arpl
sub
adcl
shrb
stos
je
xor
in
and
or
jmp
sbb
cmpsb
jnp
adc
sbb
xchg
rorb
bound
adc
dec
addb
int3
mov
push
test
add
sub
or
movl
push
je
mov
inc
test
add
lock
icebp
mov
mov
add
xor
xor
add
xor
add
add
add
cld
pop
test
je
bound
inc
add
leave
loopne
jne
dec
mov
nop
sub
xor
sbb
add
add
je
adc
or
or
add
or
inc
test
je
mov
inc
dec
ds
into
cmp
subb
outsl
loope
ja
add
outsb
add
add
cvtdq2ps
inc
cmp
mov
pop
ret
adc
mov
pop
sti
ss
fcmovnbe
jno
xchg
mov
mov
add
cmp
test
je
test
adc
mov
inc
int3
xorb
mov
out
dec
imul
int3
xor
inc
push
scas
lea
call
dec
aam
and
pop
pop
hlt
inc
pop
push
or
jp
and
dec
ljmp
cltd
pop
mov
lea
fcomip
pop
adc
dec
leave
fadd
inc
or
add
inc
aad
fdivl
sub
lcall
cmpb
push
push
sbb
fwait
push
adc
inc
mov
add
leave
add
cmpl
jl
add
jns
subl
pop
call
lahf
cmp
rolb
jae
xchg
into
push
push
adc
les
or
mov
fdivr
fisttpl
in
mov
mov
xchg
add
repnz
inc
neg
dec
mov
xchg
jo
cmpsb
sahf
mov
cld
pop
dec
xor
push
push
cltd
dec
mov
inc
lods
outsl
jg
jo
jmp
mov
pop
popa
lret
and
clc
push
and
adc
xor
dec
imul
ror
xor
pop
jp
dec
mov
cmp
insb
in
loope
cli
in
iret
leave
xor
repz
or
sbb
pop
push
add
inc
mov
fisttpl
or
pop
jne
jb
adc
jne
inc
xor
cmp
jne
add
xchg
jb
rorl
xor
or
clc
jb
in
movb
rep
faddl
cmp
jmp
mov
sub
jb
add
enter
pop
test
lea
es
push
mov
cmp
and
sub
mov
mov
inc
scas
xor
mov
out
lds
int3
lea
jno
xchg
add
add
nop
inc
decl
cmp
repz
jecxz
and
arpl
mov
mov
mov
iret
repz
call
cmp
repz
hlt
hlt
clc
clc
cld
shrl
cld
lea
shll
cltd
call
repz
inc
dec
pusha
int
leave
push
pushf
mov
gs
shl
add
pop
lea
repz
jl
cld
and
icebp
sahf
sbb
cld
shlb
push
pop
ror
mov
lret
jo
icebp
pop
iret
stc
sub
es
inc
in
in
nop
fsubr
jb
xchg
clc
and
loope
hlt
sbb
add
and
dec
mov
cmp
jp
mov
push
out
xchg
cs
out
mov
cmp
mov
cmpsl
jle
xchg
inc
pop
iret
popa
imul
repz
xchg
pushf
movsb
mov
lret
repz
sbb
jns
out
sbb
adc
adc
out
sahf
out
or
or
repnz
nop
add
lret
rcr
pop
lret
ljmp
jnp
in
mov
jle
ja
jge
push
xchg
or
dec
adc
mov
pusha
cmp
std
inc
cwtl
stos
push
push
add
mov
inc
daa
loope
adc
adc
icebp
pmaddwd
xchg
pop
xchg
inc
push
inc
dec
dec
nop
cmp
fistps
sub
mov
inc
push
aam
outsb
fldt
push
cmpl
cmp
fsub
ds
loope
test
mov
pushf
push
inc
jne
mov
mov
shl
dec
add
fcomi
jns
inc
xor
stos
or
lea
and
rorl
lods
std
cld
xchg
addr16
mov
and
push
mov
addr16
cmp
mov
dec
xchg
adc
or
shr
or
mov
lret
adc
jge
jge
je
rep
xchg
dec
push
dec
jo
jno
add
mov
addl
adc
sub
and
sbbb
les
push
rclb
mov
jns
add
int3
inc
inc
mov
or
adc
cs
adc
and
sub
test
lods
data16
add
sbb
jne
mov
jno
push
cmp
rcl
inc
ret
ret
dec
clc
pop
add
inc
cmp
test
ret
popf
inc
ror
leave
roll
xor
call
rcrb
ljmp
or
add
das
faddl
repnz
in
xchg
leave
enter
push
rclb
or
popa
jp
inc
push
jl
test
sbb
test
pop
insl
sbb
shl
fwait
cld
inc
loop
xchg
push
or
fmull
or
or
adc
std
aam
cli
push
mov
sarl
movsb
mov
jle
push
pushf
inc
decl
mov
cwtl
or
adc
lock
ja
nop
orl
inc
and
ror
push
pop
out
int
inc
incb
fbstp
mov
xchg
and
dec
hlt
cld
sub
sub
sbb
push
sbb
test
xchg
out
or
push
push
je
loope
in
jmp
jecxz
cld
add
push
xor
mov
lea
mov
adc
push
lds
xchg
arpl
push
or
movsb
hlt
sub
gs
push
push
mov
sbb
pushf
icebp
outsl
hlt
sbb
mov
pop
cmp
lock
and
ja
call
or
or
push
jnp
mov
ret
cmp
add
xor
mov
clc
jmp
sbb
aas
lcall
clc
adc
neg
jmp
stos
addr16
int3
pop
ds
xchg
mov
xor
inc
sbb
loop
ficoml
push
xorb
cmp
xchg
lds
inc
jnp
insb
cmp
lahf
sbb
mov
xchg
mov
and
or
push
outsb
ret
in
cld
push
ret
xchg
add
xor
fldt
push
mov
test
dec
push
or
test
and
pop
lcall
lret
push
stc
cld
call
hlt
jo
mull
pop
daa
ror
sub
scas
nop
pop
add
mov
adc
fwait
mov
mov
int3
imull
add
hlt
push
clc
xor
pop
fadds
loope
add
je
lods
pushf
push
or
dec
or
ret
jle
hlt
push
nop
ja
insl
inc
adc
jnp
xor
or
shlb
addb
mov
jbe
and
mov
jmp
fs
cmp
and
push
es
pop
adc
loop
sbb
aas
repz
int
or
pop
in
mov
imul
test
adc
hlt
js
adc
inc
in
rcl
hlt
mov
roll
int
nop
mov
mov
adc
out
add
mov
or
xchg
inc
nop
hlt
ljmp
mov
adc
aam
out
or
hlt
dec
xchg
sub
sbb
push
push
je
mov
fsubrs
cmp
daa
mov
cmpsb
aad
incb
xchg
and
push
adc
clc
out
js
adc
sti
push
pop
or
cltd
add
and
cmpsb
add
jp
incb
ljmp
lcall
stc
mov
mov
xchg
cmp
push
dec
stos
xchg
xor
add
jae
xchg
lock
mov
sub
cwtl
cmpsl
cmp
hlt
repz
and
fiaddl
push
ja,pt
dec
loopne
cmp
aam
outsl
sahf
roll
rcr
dec
daa
insb
adc
popf
or
dec
dec
pop
jne
sbb
xchg
imul
dec
lahf
pop
in
ss
adcl
in
iret
cmp
clc
test
and
test
pop
jl
sarb
jmp
daa
shrb
sbb
out
sbb
sub
sbb
dec
clc
clc
push
testb
mov
sbb
jmp
mov
add
jne
mov
sbb
sahf
call
test
dec
or
inc
add
fs
add
mov
inc
sbb
cmp
dec
cld
in
mov
dec
mov
test
bound
mov
loop
dec
push
pop
or
xor
mov
xor
movsl
cmpsl
sarb
add
adc
mull
jmp
mov
xchg
xchg
test
inc
sub
mov
jae
ret
sub
dec
aad
xor
dec
in
push
stc
xor
in
in
jnp
aad
lock
sub
and
push
cli
and
push
sbb
adc
clc
pop
sbb
mov
fwait
jb
inc
inc
jb
movb
push
mov
dec
in
xchg
sbb
dec
inc
jns
lock
out
push
push
xchg
cmp
adc
dec
add
shrb
es
inc
in
in
in
or
add
push
loop
inc
sbb
add
daa
jmp
sbb
cmp
scas
cld
loopne
in
into
loopne,pt
adc
imul
shr
sahf
inc
push
sbb
scas
mov
arpl
daa
fistpl
jmp
mov
shrb
mov
sahf
lret
adc
jnp
ljmp
imul
sbb
jmp
loop
inc
notb
rol
inc
add
mov
hlt
into
lahf
mov
push
mov
out
sbb
inc
add
sub
lret
insb
stc
andb
sub
ret
insb
in
adc
or
mov
leave
xchg
mov
push
cs
add
xchg
shll
lahf
push
ud0
inc
jle
repnz
gs
insb
inc
andb
loopne
es
and
mov
and
push
push
push
push
jle
aam
pushf
test
fiaddl
pop
clc
and
popf
or
les
push
push
ret
sub
ja
pop
push
pop
sbb
adc
es
mov
dec
in
fisubl
mov
pusha
sbb
adc
loop
fsub
add
mov
les
loopne
sub
es
and
jbe
jecxz
or
pop
add
xchg
xor
fistpl
outsl
or
clc
add
in
js
add
cmc
vmwrite
add
fsubr
cmpsb
fisubl
js
inc
mov
sub
cmpsb
js
jns
pop
ss
mov
xchg
dec
scas
movl
dec
inc
cmp
and
push
inc
or
or
inc
mov
mov
iret
cmp
xchg
mov
dec
test
mov
pop
or
mov
xor
lds
jbe
push
push
out
mov
ret
or
dec
sbb
ds
xchg
and
adc
and
inc
mov
imul
and
jmp
inc
adc
sbb
push
cmp
push
jge
test
sbb
push
sbb
jb
jae
dec
mov
adc
mov
lods
xchg
push
mov
cmpsb
push
nop
shll
jl
push
std
mov
clc
lods
jg
or
test
pop
aam
sbbl
sub
adc
cwtl
push
xchg
dec
push
sbb
leave
xchg
mov
mov
dec
jo
sub
out
jbe
fs
fcomip
pop
cmpsb
add
xchg
insb
dec
mov
lret
sub
jbe
sub
stos
pusha
fldcw
jg
adc
pusha
adc
in
sbb
fmulp
sbb
xor
sbb
pop
mov
icebp
push
or
inc
add
inc
shrl
jnp
ljmp
mov
adc
je
sub
fildll
push
negl
xchg
xor
ficompl
mov
hlt
inc
push
imul
das
lds
adc
lods
mov
mov
mov
dec
aas
lret
fsqrt
in
mov
mov
and
jns
adc
push
test
mov
sub
adc
js
clc
rclb
mov
stc
movsb
mov
jmp
adc
jne
and
add
out
xchg
dec
pusha
add
sarl
adcl
xor
test
mov
imulb
mov
sub
pop
inc
repnz
mov
add
xchg
jne
hlt
mov
sub
mov
add
fmuls
out
mov
jbe
mov
imul
call
cmp
in
pop
and
pop
mov
call
fstpt
push
lcall
push
leave
adc
cmpb
push
or
ret
sbb
adc
sbb
jne
dec
cmp
pop
lahf
out
inc
mov
addr16
sub
mov
or
mov
jo
pop
cmp
mov
jl
add
je
push
lret
jmp
mov
sub
iret
xor
and
jg
jo
mov
jmp
imul
and
add
js
mov
mov
hlt
ljmp
mov
test
mov
shrb
out
xor
negb
daa
in
pop
xor
jge
jp
jecxz
jl
fwait
shr
adc
add
cmpsl
xor
bound
repnz
popa
stos
std
add
aaa
xorb
sub
jmp
mov
cmpsl
pop
mov
push
rcll
push
insb
adc
pusha
aad
leave
jmp
cld
dec
outsb
add
cld
mov
mov
add
or
mov
pushf
in
sbb
jns
and
adc
and
mov
sbb
pop
mov
inc
xchg
mov
xor
add
adc
loopne
fcoms
clc
mulb
out
lods
and
adc
dec
dec
add
pop
mov
mov
loop
lret
cld
aas
cmpsb
in
clc
sbb
das
out
mov
lahf
fldl
cmp
lock
mov
into
dec
and
or
jae
mov
jnp
cmp
loop
lret
mov
loope
push
cmpl
dec
insl
and
cs
adc
add
ds
mov
sbbl
ljmp
cld
into
pop
mov
mov
mov
add
sbb
push
push
cwtl
std
sbb
jmp
sti
mov
cmp
das
and
and
aaa
stos
and
clc
clc
lock
push
jmp
cmp
mov
jno
popf
fildll
jne
loopne
loopne
and
icebp
scas
scas
outsb
idivl
fwait
mov
xchg
mov
clc
mov
fwait
mov
sbb
popa
hlt
or
pop
aaa
dec
pop
into
xchg
lock
cld
or
sarb
xor
jno
in
in
icebp
out
in
pushl
movsl
dec
test
cmp
fstpt
mov
jmp
div
aaa
mov
test
sbbl
adc
adc
daa
xchg
fldenv
xchg
xor
aaa
leave
jbe
inc
dec
push
inc
dec
and
xor
push
jmp
fs
push
popf
push
cmp
arpl
jmp
clc
pop
lods
mov
cli
loopne
mov
and
or
add
outsb
and
outsb
mov
jns
and
cmpsl
clc
fistl
inc
rolb
lcall
ja
rolb
test
push
jne
cmp
dec
jg
jbe
in
jg
push
mov
dec
stc
data16
lahf
or
and
push
push
adc
movsb
jp
mov
dec
or
loopne
push
sbb
and
out
and
fcomps
bound
and
sbbl
pop
xor
cmp
push
sbb
cli
inc
lcall
out
jmp
popa
and
cmp
and
mov
push
aas
and
int
add
call
cmp
dec
stos
loopne
add
aam
fdivrl
insb
pop
add
adc
cmpsl
or
mov
or
and
pushf
stc
inc
mov
xchg
fmuls
push
add
nop
and
jl
lret
stc
adc
jae
push
push
in
arpl
push
cltd
cmp
push
ret
push
mov
xor
hlt
cmp
jns
sbb
push
or
cmp
idivl
cli
cld
mov
adc
insb
rcrl
insb
mov
add
shrb
xor
dec
add
adc
ret
in
fdivrl
jmp
sarb
adc
adc
pop
and
lea
push
inc
cmc
adcb
jecxz
imul
sub
jae
push
adc
lahf
xor
dec
sub
push
repnz
dec
iret
fs
pop
cmpb
lods
lcall
sbb
ret
fisubl
outsl
out
data16
sbb
jno
xchg
xchg
leave
je
outsb
test
icebp
mov
fidivl
inc
lock
jne
lea
adc
lea
or
in
cwtl
test
call
mov
inc
jbe
jmp
push
dec
adc
mov
pop
shrb
xchg
cmp
push
insb
xchg
out
adc
sbb
insb
nop
incb
cli
sbb
push
lock
ds
xsavec
in
and
push
sbb
jne
dec
xchg
inc
les
adc
pop
or
adc
jne
repnz
push
call
cmp
pop
pushf
popa
or
mov
cmp
cmp
adc
sbb
cmp
cmp
or
dec
fwait
push
aam
out
test
inc
add
test
push
ret
sahf
push
fsub
inc
cmpl
mov
shrb
push
mov
fidivrs
mov
fisubrl
in
mov
movl
in
das
je
addl
push
push
inc
and
out
push
cwtl
pop
ss
and
lods
addr16
jno
imul
add
outsl
ds
xchg
add
test
push
subl
xlat
lds
int
aam
cli
xchg
test
jns
inc
mov
push
sub
mov
imul
out
imul
mov
push
jne
push
jns
mov
pop
inc
pop
ljmp
add
inc
in
js
and
sub
xchg
push
add
mov
or
das
jl
cmpb
mov
mov
loopne
push
sub
adc
dec
call
mov
scas
or
mov
mov
sub
sub
movsb
or
jl
and
in
jge
mov
stos
pop
push
ljmp
inc
leave
shl
in
insl
cltd
dec
enter
in
xchg
mov
pop
jl
sarb
add
in
xchg
and
enter
pushf
sbb
or
fisubl
adc
xchg
cmc
outsl
pusha
ret
jne
add
add
daa
fsubr
das
or
jge
movsb
push
in
sti
fwait
cmp
pop
rcrl
in
je
sbb
inc
outsb
push
pushl
add
and
push
sar
xchg
push
sub
cmpsb
sti
mov
mov
sbb
jmp
xor
or
roll
jno
and
jne
inc
xchg
cmp
adc
sar
sbb
mov
dec
mov
jge
adc
inc
fdivl
cmp
xchg
sarb
pop
in
sub
mov
loop
incb
or
popf
mov
jnp
lods
adc
mov
or
mov
mov
inc
mov
push
add
iret
test
shrl
dec
mov
sub
mov
adc
jo
movsb
add
dec
movsb
mov
adc
mov
cld
xor
rolb
int3
add
arpl
dec
mov
inc
adc
adc
xor
sub
cli
sbb
jns
popa
inc
shlb
cltd
repz
sbb
popa
cmp
je
cmc
push
shll
cwtl
push
mov
fiaddl
cmovp
movsl
sbb
clc
push
rorl
lcall
bound
adc
jge
sar
pop
pushf
jb
int
mov
cld
cltd
aam
std
mov
dec
xor
jge
or
add
pop
out
lds
sarl
add
mov
push
add
popa
out
and
mov
out
cld
inc
rorb
mov
xor
loop
loopne
or
or
shlb
aad
add
cltd
or
aam
shl
mov
sarb
inc
stc
test
or
push
outsl
loop
mov
adc
mov
cmpsb
sbb
loop
ret
enter
push
add
and
outsl
and
jl
cmpsb
fistpl
jne
fs
test
push
mov
and
pop
xor
sub
jg
mov
ret
mov
and
fs
ss
push
mov
shl
add
push
shlb
inc
cmp
je
test
or
xchg
jne
or
push
mov
shl
push
sbb
adc
and
xor
stc
adc
or
xor
iret
xor
enter
add
or
test
and
je
or
lds
pop
ret
sub
cmp
je
pop
or
je
movsl
jae
dec
out
ret
adc
xchg
mov
ss
mov
xchg
sbb
pop
push
xor
sub
sub
add
mov
insl
dec
adc
pop
inc
cmp
dec
pop
cwtl
xor
mov
or
cmc
pop
daa
add
lea
mov
adc
pop
test
cmpb
mov
pop
dec
and
out
adc
mov
adc
add
add
movl
sbb
in
jp
cmp
cld
je
mov
mov
mov
fs
insb
pop
dec
jb
stc
cwtl
push
rcll
mov
mov
mov
addr16
cld
cld
and
xchg
mov
popf
stos
in
cmp
xchg
sbb
lcall
push
cmp
orb
push
adc
dec
clc
cmp
sbb
lock
push
dec
sub
and
lcall
test
clc
and
outsb
stc
or
sub
clc
popl
push
incb
mov
cmpsl
inc
xchg
stos
sahf
push
ds
lds
daa
sub
adc
mov
adc
and
dec
add
cmc
xchg
pushf
js
push
xchg
add
les
mov
das
mov
mov
jae
mov
nop
adc
cmpsb
mov
je
add
mov
imul
adc
pop
jae
xor
mov
in
fs
addr16
xor
call
add
push
inc
fildll
push
call
add
xchg
mov
cmp
dec
add
int
push
inc
pusha
xchg
test
jmp
pop
dec
in
sbbb
or
inc
in
pusha
cs
sub
fsubr
push
sub
mov
insb
xlat
ss
xchg
dec
repz
enter
data16
cmp
or
lahf
leave
popa
mov
and
sub
or
ljmp
cmp
push
in
jmp
mov
pop
ss
xchg
mov
clc
cli
pop
nop
in
pushl
push
pop
adc
push
add
ret
push
je
mov
movsl
mov
imul
or
sbb
or
icebp
push
jns
jmp
cmp
pusha
sbb
jmp
std
mov
or
dec
mov
sbb
stos
jo
fs
loop
out
movsl
jno
data16
xlat
into
pop
cmp
mov
loope
stc
cs
push
pop
cmp
push
adc
test
xor
cmp
or
inc
add
into
std
mov
cmp
aad
push
shr
iret
cmp
mov
aaa
clc
fsubl
jmp
jns
lret
pushf
lea
and
les
outsb
mov
jmp
mov
adc
jno
pusha
cs
xor
call
sbb
out
mov
adc
cmp
cmp
push
pusha
pop
sbb
fiaddl
fcomps
jae
xchg
dec
fcomps
push
out
adc
mov
adc
pop
adc
mov
add
pop
fisubrs
jno
sub
lcall
jmp
ljmp
lea
or
jae
leave
sub
mov
loopne
mul
ret
inc
fldl
fdiv
fs
add
rcll
cmp
add
pop
repnz
outsl
sub
pop
int3
push
sti
sbb
xorb
clc
imul
adc
sub
loopne
movl
and
add
lock
icebp
call
or
or
fbld
test
fnsave
shrl
jmp
xchg
xchg
inc
dec
inc
stc
cmp
pop
add
cld
add
push
pop
xor
add
scas
xchg
pop
imul
sbb
or
movl
sbb
jmp
aas
test
dec
je
pop
into
adc
repnz
xchg
lods
or
jmp
out
push
pop
push
les
add
shr
rcr
shr
rcr
or
jne
mull
insb
push
lock
pop
add
out
shll
cmp
jb
cmp
dec
mov
pop
xchg
aam
rcpps
pop
ja
and
xor
jmp
adc
dec
adc
adc
loopne
mov
or
cmp
shll
adc
cmpsb
add
hlt
fadds
rolb
push
push
xor
jge
cmp
and
jmp
fdivs
sbb
hlt
mov
sarb
jle
adc
push
out
or
rcr
popf
cltd
xor
fcomi
sbb
out
popf
sbb
dec
sub
divps
inc
outsl
pop
cmc
sub
or
ret
inc
data16
inc
lock
mov
lock
es
in
inc
dec
sbb
or
popa
jl
push
or
jg
lock
add
cmc
pop
dec
mov
jmp
addr16
or
dec
iret
mov
dec
dec
js
or
lret
push
xchg
xor
outsl
push
nop
cmp
gs
inc
pop
cmc
or
mov
call
in
shl
jecxz
in
in
and
movsl
jb
inc
add
mov
pop
in
add
adc
fsubl
adc
enter
dec
cmp
jmp
mov
imul
sbb
adc
add
mov
pop
push
push
test
es
mov
test
push
cmpsb
mov
sub
jbe
inc
ss
sti
jbe
push
or
mov
lret
mov
lods
xchg
inc
xchg
push
mov
lods
push
mov
xlat
je
je
xchg
push
test
push
cmp
jne
inc
inc
dec
je
mov
cmp
jne
mov
xor
push
add
push
inc
pop
add
add
adc
and
sbb
cmpsl
je
push
add
cld
jmp
adc
cmp
and
add
shr
add
sbb
pop
incl
fsubrs
hlt
les
lret
rcrb
sbb
out
jne
adc
rolb
cmp
dec
cmpsl
and
cs
lea
and
push
in
cwtl
push
sbb
inc
jl
out
popa
mov
jg
dec
ss
hlt
cs
xchg
pop
out
push
mov
and
mov
in
es
sar
push
icebp
cwtl
push
lahf
sbb
pop
dec
jge
dec
ljmp
adc
push
xchg
pop
add
int3
xchg
mov
jge
shrb
lock
int3
test
ss
jg
and
dec
scas
mov
movb
dec
pushf
sbb
dec
mov
lcall
test
dec
cmp
mov
add
gs
or
jmp
or
xor
adc
loope
or
push
or
add
cli
push
and
scas
movsb
sub
imul
call
cltd
or
push
out
push
lods
enter
adc
sbb
cs
cli
mov
mov
mov
nop
adc
outsl
push
sub
jo
cld
push
push
jnp
test
add
cmp
cmp
mov
cmp
push
cld
movzbw
push
xchg
in
jge
and
pop
dec
inc
movsl
leave
lea
sub
fst
mov
mov
inc
addr16
or
jo
fstpt
test
inc
cmp
push
xor
or
push
push
je
mov
nop
jp
fcoms
or
out
sbb
mov
lock
jnp
inc
fsts
mov
scas
dec
cmp
mov
je
inc
or
push
xchg
cmp
fs
hlt
iret
sub
mov
adc
push
sbb
xor
aaa
ljmp
pop
push
shrb
pop
int
xor
cmp
in
push
pop
dec
bound
adc
or
dec
add
call
ret
mov
inc
sbb
fbstp
mov
testb
mov
clc
add
cmp
adc
mov
pop
push
mov
mov
mov
inc
mov
loope
mov
fisttps
add
outsb
popa
jbe
or
aaa
addb
push
data16
add
sub
lret
add
rorb
ret
inc
je
add
jbe
loopne
dec
mov
inc
enter
insb
daa
sbb
test
fldt
dec
jmp
or
or
test
cmpl
jle
fdivr
adc
lahf
sub
mov
cmp
and
mov
fsubs
stos
xor
movsb
cmp
clc
pusha
jnp
stos
pop
lds
or
pop
repz
int3
icebp
pusha
mulb
loopne
in
pop
fidivrl
mov
mov
push
jns
jno
clc
dec
mov
push
call
sub
mov
push
cmpsl
and
popa
pop
push
xchg
pop
shrl
cmp
pop
movsb
enter
sub
adc
jo
dec
stc
sub
mov
inc
jl
dec
and
jle
negb
ds
lret
add
leave
mov
mov
adc
hlt
cltd
in
repnz
add
pop
jne
aaa
sbb
adc
jo
div
adc
inc
clc
xor
xor
shlb
dec
sbb
sub
inc
xchg
pop
int3
fs
sbb
lods
sbb
pop
xlat
or
in
sbb
mov
adc
add
or
xchg
icebp
inc
mov
xor
into
sub
mov
loopne
nop
cmp
jmp
mov
ss
adc
add
jmp
leave
dec
or
aaa
push
dec
mov
inc
mov
inc
jb
or
mov
xor
cmp
lock
lock
adc
in
ja
xchg
inc
dec
hlt
ja
inc
roll
rorl
jno
push
daa
mov
arpl
shlb
ret
push
jmp
or
jge
loope
jns
cs
shrb
arpl
sub
push
xorb
jo
push
pop
inc
and
lds
popf
arpl
mov
aam
jmp
in
sbb
js
jg
inc
int3
inc
xor
hlt
neg
arpl
testl
adc
mov
inc
adc
or
mov
lret
mov
repz
mov
add
lret
inc
pushl
je
dec
dec
not
mov
pop
inc
fsts
sti
nop
in
jge
gs
jb
call
rclb
dec
cmc
scas
ljmp
sbb
pop
xchg
and
lea
rcl
fisubl
or
adc
daa
cltd
cmp
push
movb
cvtpi2ps
cmp
insl
iret
and
cmp
adc
push
mov
rorb
dec
sbb
bnd
out
push
inc
es
inc
xor
imul
dec
pop
sbb
add
jl
aas
inc
sbb
sbb
mov
lahf
ficoml
push
fsub
nop
adc
dec
dec
mov
icebp
cld
mov
movsb
mov
xchg
mov
fmuls
mov
test
mov
or
add
das
adc
xchg
or
add
sbb
lock
fwait
test
or
addr16
mov
dec
adc
and
pop
loopne
push
enter
mov
pop
sub
dec
pop
sti
add
push
orl
movsl
in
pop
les
sbb
sub
pushf
and
retw
cld
aam
sbb
enterw
inc
xchg
and
jmp
dec
sbb
cltd
mov
mov
xchg
insb
pop
addr16
in
cwtl
sub
fcoms
gs
pop
pushf
cwtl
fstpt
and
mov
repnz
and
and
sub
xchg
and
jno
or
cmpsl
xchg
test
icebp
xchg
je
sbb
pop
xchg
jmp
jmp
imul
cmp
xchg
cmp
and
addb
lods
or
inc
push
xor
push
or
and
ret
mov
mov
mov
movsb
cs
cmp
adc
add
lods
subb
shlb
jmp
lret
mov
in
lret
add
mov
in
inc
dec
lahf
adc
rorb
popf
jg
jne
shll
xchg
test
clc
rcrb
sbb
daa
jnp
xchg
push
and
outsl
jae
dec
pop
xor
jmp
or
xor
sarl
cltd
into
push
add
mov
lret
inc
jmp
dec
xlat
dec
sbb
lods
pop
adc
sub
add
sub
sbb
and
inc
sub
leave
sbb
sbb
call
sar
cmp
and
movl
add
nop
push
aaa
inc
pusha
add
daa
test
xor
pop
cmpsb
cltd
test
adc
or
push
imul
jecxz
test
add
lea
enter
adc
cltd
pop
es
pop
and
mov
xchg
push
push
and
mov
dec
icebp
push
imul
xor
pop
fmul
sbb
push
or
or
or
pop
push
sahf
lock
jl
xchg
jg
adc
xor
dec
dec
out
jns
shlb
pushf
mov
dec
call
xchg
rcll
dec
jno
mov
aad
dec
les
cmp
pop
ja
inc
sub
int
push
ret
pop
sbb
jne
movsb
jno
inc
or
mov
mov
mov
add
adc
xchg
repz
push
adc
lea
push
mov
or
jbe
out
into
fstpl
mov
test
aas
dec
lds
dec
ror
xorb
push
and
mov
int3
sbbb
xorl
in
jecxz
sbb
add
sub
xchg
mov
push
test
add
sbb
lret
ja
sbb
jle
sub
jb
sbb
pop
pop
dec
daa
cltd
loopne
adc
mov
pop
lea
ss
cwtl
lea
insl
inc
inc
imul
cs
adc
int3
int3
mov
sahf
cltd
or
jo
sbb
inc
adc
test
addr16
fs
cmp
ja,pn
and
sbb
adc
sub
mov
inc
sbb
mov
xchg
jp
lahf
pop
xor
or
int
mov
adc
mov
inc
jmp
sbb
mov
or
outsb
sub
popa
adc
xor
rolb
lods
or
push
add
xor
and
jns
enter
iret
fadds
cmp
sbb
mov
or
imul
aaa
test
xor
xlat
adc
movsb
movsb
loopne
pop
adc
mov
movsb
add
mov
or
mov
into
test
dec
xchg
test
or
andl
mov
incl
fs
mov
imul
pop
das
sahf
sub
dec
mov
fnstenv
cmp
xchg
or
pop
mov
push
popf
lcall
outsl
insl
mov
cmc
sub
insl
nop
inc
mov
inc
mov
or
pop
push
lods
adc
cmp
movsb
out
adc
sub
adc
test
lods
mov
pop
cwtl
jmp
and
jg
sar
sbb
daa
ret
or
inc
leave
mov
mov
movsl
dec
mov
cmc
push
sbb
jns
pop
inc
mov
or
push
xor
jmp
sub
xor
shlb
dec
pcmpeqd
pusha
andl
insb
pop
in
or
and
inc
mov
cli
inc
add
notl
test
push
or
jmp
cwtl
popf
test
aad
imul
jmp
inc
inc
xchg
pushf
and
or
mov
ljmp
in
cmp
ficoml
int
mov
insl
cmp
inc
and
push
or
or
add
ljmp
ret
lcall
cmp
popa
add
xor
add
pusha
dec
lahf
push
xchg
sub
mov
mov
jmp
xchg
lds
shlb
bound
pop
jp
push
sub
rcll
mov
ror
test
xor
push
mov
mov
aad
jg
std
xor
inc
mov
pop
sbb
sbb
ds
mov
pusha
es
mov
icebp
mov
iret
mov
fdivs
add
je
rcrb
jg
pop
pop
mov
js
hlt
sbb
push
lcall
orl
jg
jl
or
sub
add
mov
mov
adc
popf
lods
dec
push
lea
dec
sti
aaa
fdivrl
pop
push
sbb
idivb
popa
ja
mov
orl
jae
pop
jp
push
testl
jmp
lock
pop
movsb
clc
cmp
mov
sbb
adc
jg
js
addl
push
xchg
push
rclb
loopne
nop
or
push
in
sbbb
xchg
mov
cmp
sub
pop
mov
nop
loopne
sbb
dec
cmp
cld
fcoms
xchg
mov
popf
add
jne
inc
repnz
sbb
add
enter
repz
pop
pop
test
arpl
sub
push
add
jg
adc
add
push
jbe
sub
add
sbb
push
lret
cmp
inc
pop
mov
popf
loop
test
xor
inc
sbb
xchg
push
push
mov
sbb
shrl
outsl
lea
sbb
mov
dec
es
out
add
inc
mov
mov
mov
subb
int
jl
xor
je
test
adc
and
cmp
mov
insb
pop
sub
xchg
and
mov
rorl
and
adc
push
shlb
mov
lea
je
pop
cmpsl
mov
or
enter
loop
mov
xor
je
mov
fidivl
add
pusha
jnp
add
cmp
stos
jecxz
push
movl
mov
cmp
xchg
jle
sahf
cmpsb
rolb
add
add
test
fnstcw
jge
jnp
loope
jge
jge
add
ret
add
add
sub
jo
or
rolb
jle
push
jecxz
lret
adc
ret
loope
sub
data16
addl
push
add
cmp
add
add
add
add
push
or
or
pop
les
push
or
rolb
cli
dec
add
dec
add
and
pop
sub
dec
xor
test
inc
stc
cld
add
or
scas
movsb
pop
mov
mov
and
add
or
cltd
rcrb
std
jg
mov
xchg
or
and
adc
in
or
or
pop
iret
adc
mov
les
pop
cld
mov
lods
sar
dec
xchg
xchg
mov
mov
mov
mov
xchg
cmp
pop
pop
push
pusha
loop
dec
mov
mov
iret
stos
cmpsb
loopne
mov
loop
push
add
inc
cld
ds
push
cmp
call
dec
inc
clc
jbe
leave
rcrb
sahf
test
aad
lea
xchg
mov
ljmp
pop
sub
push
frstor
mov
adc
cmc
mov
fcoms
add
daa
sti
dec
jbe
lahf
hlt
push
xchg
or
jg
arpl
inc
fdivrl
or
sub
cmp
inc
push
clc
iret
dec
mov
xchg
mov
stc
iret
jge
mov
add
fmuls
rorl
add
mov
inc
and
adc
std
or
test
dec
dec
test
out
dec
mov
lea
cmp
lods
lock
lods
incb
xchg
hlt
iret
push
jno
add
int
and
and
mov
ds
insb
popf
imul
out
imul
mov
xchg
push
nop
repz
xchg
int3
je
in
or
add
cs
cmpsb
push
jmp
ljmp
dec
inc
mov
dec
and
mov
rcr
jne
fldl
fsubrs
mov
mov
jmp
xchg
into
xchg
sbb
sti
cld
dec
sub
ret
mov
mov
dec
pop
mov
mov
cmc
push
test
lock
cmpsb
fs
rorl
gs
jp
push
jae
fstpl
cmp
cmp
pop
pushf
sub
lcall
jp
lret
sub
and
mov
ds
sbb
cmpl
xor
shll
sub
iret
cmp
adc
add
xor
jg
ss
je
lock
call
jb
sbb
adc
in
cmpsl
adc
rclb
pop
push
outsb
add
fistl
mov
test
movsb
lahf
stos
xchg
cltd
jne
push
inc
fimull
jl
insb
out
lcall
iret
cmp
jne
push
inc
mov
fs
xchg
lock
xchg
scas
test
push
mov
sub
jo
xchg
adcl
fisubrl
xchg
adc
fsubrs
sahf
or
mov
test
xchg
pop
inc
xchg
cmp
insl
sub
je
adc
xor
fisubrs
adc
pop
sbb
in
out
fs
cs
mov
sbb
insb
cli
outsl
inc
cmp
call
push
call
sub
push
in
fildll
jle
loopne
loopne
daa
xor
sbb
fdivrl
aas
dec
sti
fadds
jns
into
or
out
mov
imul
cwtl
test
int
int
push
loopne
jle
int3
int3
cld
cmp
sti
enter
sbb
mov
lret
mov
inc
sbb
aam
pop
push
int3
enter
in
dec
dec
push
xlat
mov
cmp
js
xor
adc
add
xchg
add
xor
movsb
xor
and
adc
fsubrs
fldt
jne
jnp
and
movsb
mov
repz
adc
incl
cli
xchg
pop
push
push
push
test
mov
sub
adc
xchg
mov
push
fnstcw
test
and
and
imul
lret
je
mov
mov
or
test
xchg
mov
test
inc
adcb
enter
mov
pop
dec
clc
dec
and
pop
frstor
out
fsubp
cmp
mov
je
stos
je
fwait
pusha
fsub
jmp
lods
stos
clc
mov
movsb
mov
xchg
inc
mov
test
inc
mov
aaa
invd
and
movsb
sbb
xchg
push
or
mov
ja
sub
xor
pop
ja
cmp
inc
pop
ja
jno
inc
inc
jno
sbb
jns
mov
int
cmpsl
add
fistpl
cltd
cltd
in
or
repz
lods
es
lcall
in
test
bound
pop
inc
loopne
stos
cmc
xor
mov
add
ss
arpl
pop
in
pop
and
inc
shll
mov
scas
add
jmp
orl
movsl
outsb
jns
xchg
int3
rol
sbb
and
sbb
inc
mov
sbb
or
ja
or
add
shlb
cli
and
pop
or
xchg
lds
sub
lds
pop
and
lock
add
lock
mov
mov
mov
mov
pop
insb
mov
call
add
pop
loopne
push
mov
jae
xchg
gs
lcall
ret
inc
or
xchg
shl
out
and
jno
int3
push
push
loopne
sbb
mov
out
in
adc
mov
push
ror
dec
insb
pop
xchg
sub
rolb
jbe
rorb
push
loopne
cmp
js
dec
ja
mov
cmpsb
jg
int
enter
jns
enter
inc
push
aam
in
sub
int
mov
jne
add
imul
sarl
aam
adc
jno
aam
xor
sub
fnstsw
iret
enter
sub
pop
jbe
sbb
adc
jmp
call
add
push
cmp
addr16
xchg
sub
lret
lds
scas
mov
sub
ret
mov
xor
jne
push
mov
sbb
inc
jne
in
in
or
paddsb
lret
ret
outsb
je
fsubl
test
je
lea
xor
dec
jmp
pop
add
xchg
mov
push
sbbb
daa
push
push
mov
cld
and
push
pushf
sub
mov
jo
lock
xchg
or
sbbl
addr16
jne
xchg
popl
in
jle
daa
dec
xchg
fs
pop
shlb
lock
push
stos
mov
pusha
lret
xchg
loopne
lea
out
mov
pop
sbbl
das
scas
sub
add
int3
aam
jne
lock
mov
cmc
push
pop
pop
mov
in
scas
mov
cs
stos
and
rorl
xor
fs
imul
dec
xor
nopl
aad
adc
es
mov
or
ja
mov
sbb
jns
mov
xor
mov
xchg
pusha
scas
pop
lahf
enter
test
dec
jp
fcompl
mov
imul
pop
inc
mov
add
es
cmp
jg
cmc
outsl
cmp
sar
repnz
inc
add
ret
jns
inc
sbb
jmp
fisttpll
and
repz
cmp
xchg
test
mov
out
les
cmovae
xchg
sub
mov
mov
xchg
xchg
dec
mov
cmp
cmp
gs
push
lret
mov
sub
mov
lock
and
fsubl
shlb
xchg
lds
cwtl
xchg
loopne
jmp
inc
pop
lea
mov
cmp
sbb
cmp
orb
in
and
std
adc
loope
shlb
enter
sbb
cmp
add
dec
cld
inc
flds
jmp
aad
jbe
les
movl
ljmp
mov
jnp
mov
aas
cmp
mov
rclb
xor
jne
int3
and
daa
stos
inc
pushf
or
gs
data16
and
pop
mov
mov
dec
and
das
insl
jbe
sub
pop
mov
dec
cwtl
jecxz
popa
fistpl
adc
adc
mov
xor
push
jmp
je
repnz
rcr
fwait
xor
in
cmpsb
and
lret
arpl
test
pop
jne
inc
imul
lods
pop
dec
jo
ds
xchg
inc
cltd
js
pop
mov
and
xor
xor
mov
rcrb
xor
fucompp
mov
ret
xchg
pushf
test
add
sbb
sub
in
dec
clc
std
insl
add
in
jmp
arpl
add
lret
aam
jmp
ret
or
int
sub
loope
xor
aad
pop
add
cmp
je
or
jne
cmp
mov
lcall
es
das
add
mov
mov
pop
jmp
pavgw
push
arpl
and
xchg
rolb
data16
push
jno
fs
jae
jne
scas
lahf
in
pop
or
mov
in
xor
loopne
imul
aaa
pushf
clc
sub
add
aam
sarl
in
cwtl
call
test
hlt
jo
js
mov
fistpll
fcmove
xor
sbb
and
sbb
sarl
xchg
insb
xchg
movsb
fisubs
dec
sbb
dec
je
push
dec
cmp
mov
add
pop
add
mov
fisubs
flds
mov
xchg
cmp
inc
jne
mov
mov
dec
jns
mov
adc
mov
addr16
jne
and
xchg
je
les
jno
ds
pop
cmpsb
cltd
mov
dec
les
addr16
dec
enter
arpl
mov
xchg
ss
jnp
fistpl
mov
and
nop
scas
cmp
jg
xchg
and
movb
mov
scas
inc
ror
pop
and
in
lcall
jle
or
inc
das
call
addr16
push
mov
push
mov
sbb
call
fimuls
jecxz
push
push
jb
clc
in
add
and
mov
jp
sti
les
fwait
jecxz
cmpsb
jl
xchg
test
pop
or
gs
nop
xor
inc
inc
sub
inc
push
shlb
mov
push
call
out
pushf
jb
mov
mov
add
push
fdivrl
ss
pop
popa
xchg
in
test
ret
jp
call
sbb
filds
xchg
out
mov
pop
cmp
jb
rolb
cmpsb
fisttps
jb
mov
call
sbb
cs
ficoml
push
call
call
ss
adc
jecxz
jmp
push
cmp
bound
cs
cmp
inc
mov
jmp
mov
mov
inc
int
outsb
or
ljmp
inc
mov
aaa
aam
sub
icebp
mov
in
jb
in
push
push
clc
sarb
out
sbb
test
push
mov
mov
sbb
jne
inc
add
dec
add
pop
in
pushf
test
add
adc
sub
dec
fs
push
jo
xchg
inc
mov
loope
mov
pop
xchg
loopne
sbb
xchg
clc
xchg
cmp
in
inc
xchg
aaa
mov
cmp
gs
add
loop
push
add
add
into
cmp
pop
add
push
imul
xchg
mov
mov
loope
xchg
mov
movsb
add
popa
add
add
add
push
or
mov
xchg
pop
xor
xor
adc
in
pop
and
clc
jmp
adc
xchg
filds
int
enter
and
or
or
adc
lds
shll
clc
adc
and
dec
adc
pminsw
add
lahf
je
or
pop
and
adc
cmp
xlat
adc
les
notl
add
or
in
dec
jb
mov
push
sar
cmp
mov
pop
jno
add
and
imul
gs
push
xchg
and
movsb
int
mov
shlb
ss
push
int3
push
push
hlt
cmc
dec
inc
addl
sub
int
push
mov
add
mov
nop
sbb
movsb
cmc
cs
lret
add
jmp
loop
icebp
rcll
inc
inc
les
mov
inc
cwtl
outsl
mov
cmp
mov
cld
push
mov
push
mov
test
mov
gs
add
scas
or
jmp
add
jnp
add
add
loop
imul
lea
cmp
mov
mov
sbb
fistl
adcl
pushf
fdivl
and
add
mov
jb
or
and
sbb
loopne
ja
sub
sar
jns
sub
jmp
push
xor
dec
aaa
mov
nop
pop
loope
push
lods
or
test
push
cmpsb
or
or
clc
mov
pop
push
scas
int3
xor
sahf
sub
fwait
mov
cmpl
xor
movsb
lcall
dec
lret
cmp
cmpsb
adc
insb
adc
movsl
add
hlt
loopne
jge
popa
je
lods
mov
xor
or
mov
adc
xor
or
mov
add
je
cmpsb
sub
je
xchg
inc
sbb
inc
cmp
imul
dec
jne
mov
add
or
insl
sub
or
dec
ja
dec
cmpl
aad
lods
scas
in
scas
pop
cmp
sbb
and
ret
inc
bound
and
xchg
inc
cli
push
in
cld
sub
and
shlb
push
dec
popf
cmpb
pop
and
rorb
loop
inc
mov
sub
mov
popf
outsb
fsub
cmp
insb
fsubrs
in
push
in
add
xchg
leave
and
pop
cs
push
sbb
sub
popf
mov
adc
dec
popf
adc
sub
or
pushf
xchg
mov
in
and
xor
sbb
or
mov
lods
sarl
sub
in
dec
mov
add
fstl
sub
jle
sbb
and
notl
test
pop
fldt
lds
out
pop
cmpb
add
and
sub
push
add
lds
inc
stc
pop
leave
or
enter
imul
inc
mov
sub
xchg
and
enter
adcl
popf
cld
cld
push
call
sub
jnp
jno
js
and
push
jge
fstpt
mov
fmul
inc
xchg
cmc
inc
xchg
cmp
sbb
mov
sbbl
xchg
xchg
add
icebp
mov
test
out
sbb
add
addr16
pop
adc
mov
cmp
dec
lods
adc
rcll
insl
mov
sbb
xor
add
mov
stos
add
mov
adc
inc
jecxz
andb
loope
push
pop
mov
adc
inc
or
hlt
dec
jbe
popa
inc
mov
movsb
hlt
nop
mov
or
sbb
testb
aas
add
movsb
fwait
std
insl
xchg
rorl
push
sbb
inc
jle
add
mov
dec
aad
rorb
shl
sub
xor
and
dec
sub
and
cltd
pushf
scas
adc
sub
sub
adc
call
xchg
movaps
push
adc
cmpl
mov
in
gs
cwtl
pop
lea
sub
cmp
jp
inc
shlb
sbb
jae
mov
in
sub
mov
or
sub
xor
into
dec
xchg
es
or
xor
test
mov
mov
and
mov
lds
lea
das
sub
push
inc
add
rorb
lea
and
inc
clc
mov
aam
sub
cmp
or
jmp
xchg
sahf
pusha
lret
mov
cmp
ror
sahf
movsl
mov
xchg
insb
sub
adc
jnp
mov
ret
popf
dec
push
adc
lahf
test
cs
jne
imul
push
ret
cmp
inc
sbb
in
cmp
sbb
dec
lcall
push
stos
xchg
pop
lock
inc
fildl
mov
or
int3
push
adc
sub
mov
pop
rclb
xor
lea
movsl
add
push
push
or
je
or
sub
xor
inc
add
fwait
jo
add
mov
cmp
cld
xor
mov
aam
movsb
mov
lret
jb
pushf
lret
add
arpl
pusha
xor
jno
loope
adc
push
mov
mov
push
stos
icebp
adc
jne
movsl
push
lea
cld
rolb
jmp
fnstsw
jmp
jns
xchg
mov
outsb
bound
fs
mov
lock
out
inc
enter
out
push
fs
jb
in
inc
nop
and
cwtl
pop
cmpsl
fwait
adcl
mov
sbb
ljmp
jp
test
cld
inc
scas
inc
imul
outsl
or
lret
inc
pop
push
popa
inc
fnstenv
clc
xchg
les
jnp
aad
xor
xor
cmp
movsb
frstor
xchg
cli
cmpsl
mov
xor
insb
push
or
fs
mov
cmp
sbb
stos
test
adc
add
out
sbb
push
jo
pop
mulb
int
mov
loope
enter
cmp
push
int
gs
and
inc
or
repnz
jmp
or
mov
mov
lret
push
cmp
pop
push
shlb
lods
fs
mov
mov
push
add
lock
sub
pop
lock
repz
repnz
xchg
adc
or
stos
inc
pop
or
sti
cmp
mov
outsb
xor
push
cmp
xor
fs
shlb
push
mov
push
mov
or
cmp
cs
or
int3
incb
xchg
pop
lock
sub
sahf
sbb
or
and
push
cmp
inc
sbb
jne
sbb
les
mov
sbb
inc
lret
and
jae
out
shlb
mov
fcoms
sbb
cmp
lock
fs
jae
movb
int
loop
mov
je
jae
sarb
mov
fmuls
int
clc
sub
mov
adc
mov
dec
inc
sub
clc
enter
fsubrl
pop
pmullw
sbb
mov
int3
pop
inc
pop
mov
push
adc
lahf
stos
fadds
add
mov
or
and
lods
lret
add
movsb
dec
stos
jg
test
jae
xchg
dec
mov
cmp
adc
mov
xor
jmp
mov
rep
push
orb
jp
sarb
enter
jns
dec
push
sbbb
xchg
adc
pop
sbb
xchg
loopne
mov
lea
jbe
iret
mov
fcomps
popa
push
cmp
mov
inc
jne
push
cmp
fadds
mov
mov
mov
mov
jb
das
ficomps
ret
ss
mov
fnstcw
addr16
pop
cmp
pushf
popf
dec
cltd
jb
or
cmp
movl
movsl
jmp
cmpl
je
jmp
loop
jb
push
push
addl
or
jne
jb
jo
cmp
mov
shr
mov
sahf
mov
and
popl
pusha
mov
jmp
adc
mov
test
mov
xchg
and
add
pop
mov
adc
xor
xor
mov
mov
sahf
ret
adc
adc
add
dec
stc
pushl
cmp
cmpsb
jge
gs
ret
add
data16
insl
movsl
push
dec
jo
sbb
ja
cmpsb
jge
mov
sbb
sti
xlat
push
lea
add
lods
jge
xchg
pushf
les
xchg
add
adc
mov
inc
jmp
movb
mov
subl
inc
repnz
fidivrl
out
push
dec
rol
repz
movb
shr
lods
push
daa
and
mov
push
sahf
sbb
aam
mov
cmp
push
dec
add
call
out
xlat
push
inc
out
pop
or
into
into
mov
push
xor
shlb
imul
popf
je
sub
cmp
fbld
xchg
or
mov
xchg
mov
pop
test
dec
inc
call
mov
pop
and
jbe
test
gs
sbb
or
adcb
mov
lret
repz
sbb
cmp
ja
cmp
jbe
adc
mov
push
dec
dec
pop
pop
push
popa
cmp
sbb
sbb
sub
push
ret
xchg
mov
pop
aaa
mov
cmp
mov
mov
shl
push
push
lods
inc
std
arpl
push
xchg
movsb
lods
aad
dec
incb
jmp
push
adc
aas
push
daa
ret
jbe
cwtl
repnz
dec
inc
add
mov
push
xchg
xor
xor
adc
movb
dec
arpl
adc
xchg
mov
or
icebp
xor
sub
xor
add
or
inc
inc
inc
dec
mov
out
rcll
adc
mov
xor
add
push
fistpll
xchg
adc
mov
pop
movsl
mov
inc
fdivp
movsb
ljmp
push
bound
loop
xor
pop
inc
add
ss
shr
push
and
adc
ret
inc
add
jmp
pop
mul
lock
inc
add
add
sbb
adc
mov
mov
push
mov
push
dec
lock
fiadds
add
je
cmp
je
lea
mov
sbb
dec
mov
test
lcall
mov
mov
mov
call
add
jmp
popl
or
jp
mov
fs
xchg
rorb
cmpl
push
push
or
push
or
xor
push
mov
xchg
aam
and
dec
mov
add
imul
ret
or
xor
xor
test
ror
adc
testl
lcall
dec
or
ret
jae
or
mov
push
popa
lea
je
push
ret
or
pop
pop
add
or
js
xor
mov
xor
mul
adc
jg
jb
push
adc
sbb
lock
jmp
mov
sbb
adc
push
inc
lods
sub
mov
popa
xorl
enter
lods
mov
adc
addr16
mov
ja
cld
or
xchg
pop
xchg
aam
xor
cmp
mov
cwtl
add
mov
lret
ja
leave
mov
inc
ljmp
mov
and
movsl
cwtl
shld
mov
icebp
aaa
adc
daa
add
cmpsl
sarl
push
cmp
scas
xchg
sbb
add
jmp
add
sub
jne
xorb
aas
les
bound
sub
dec
fwait
dec
out
imul
pop
xor
jge
int
mov
mulb
inc
loopne
sbb
mov
lahf
and
cmp
inc
xor
xor
pop
mov
jne
or
push
nop
xor
xor
sub
add
js
sbb
xor
mov
dec
or
sub
mov
sbb
dec
push
lcall
inc
leave
nop
mov
mov
xchg
dec
or
shlb
sub
loop
xchg
inc
test
les
adc
and
lret
fcomp
or
xor
aam
fldt
mov
inc
xorl
lock
nop
ficoms
jmp
out
cli
xchg
mov
sub
pop
jmp
imul
adc
inc
cli
clc
sbb
enter
inc
in
dec
int
adc
iret
fld
mov
mov
and
adc
sbb
add
ja
mov
pop
xchg
lods
sub
jecxz
fmuls
fcoml
push
dec
mov
sbb
inc
push
cld
adc
sub
je
enter
jmp
push
and
sub
testb
nop
andb
xor
inc
fcmovb
mov
jp
xchg
mov
xchg
mov
test
and
inc
and
and
cmp
inc
xor
cmp
test
sub
imul
test
push
mov
jns
jne
xchg
loopne
or
adcb
rcrl
sub
cmp
out
add
test
sbb
dec
vmovaps
jle
push
push
cwtl
aas
dec
jne
dec
aam
loop
stos
enter
imul
mov
ds
xor
shr
sbb
inc
ja
push
pushl
cli
dec
enter
lcall
enter
es
imul
adc
dec
sbb
lcall
mov
sub
mov
rcl
not
inc
out
loop
and
jp
addr16
adc
adc
mov
mov
cmp
cmp
enter
pop
into
sbb
push
scas
outsb
call
insl
mov
in
ja
sub
add
or
adc
jge
lret
push
loopne
add
xchg
mov
insl
push
idiv
jne
dec
xor
in
ret
in
mov
mov
cli
xor
pop
mov
jg
xchg
loopne
cmp
movsb
xchg
addl
pop
pop
jno
adc
sub
repnz
mov
mov
jae
divl
push
sbb
gs
add
mov
lods
inc
sbb
cmp
fucomp
inc
jae
mov
les
insb
sub
xabort
adc
test
or
xor
sub
xchg
fcmovb
in
pop
test
inc
enter
mov
pushf
sbb
push
test
mov
clc
add
adc
pusha
js
shrl
push
in
jnp
addb
mov
xchg
add
loop
push
cli
xchg
and
xchg
in
mov
dec
fisttpl
stc
push
jl
sub
inc
packssdw
fstpt
imul
cmp
cmp
fisubrs
sbb
clc
mov
push
and
add
sub
mov
pushf
push
jno,pn
dec
insb
mov
and
fs
mov
in
in
push
adc
je
adc
int3
inc
adc
dec
bound
or
hlt
add
hlt
jae
and
sub
jmp
imul
insb
sub
push
and
shll
push
xchg
pop
sub
int3
adc
xorps
stos
dec
andb
or
les
jne
mov
add
push
andps
push
push
nop
jbe
call
dec
push
inc
sbb
les
inc
ret
inc
or
ljmp
dec
imul
les
test
push
inc
lret
push
xchg
mov
dec
jne
xor
xor
sbb
jecxz
adc
cmpsb
shl
in
aam
nop
mov
sahf
in
cld
push
add
in
sar
xchg
jmp
sbb
aas
jbe
sarl
sub
inc
add
inc
or
pop
mov
ljmp
addl
mov
mov
movb
fmull
inc
fs
dec
add
mov
sbb
data16
int
push
or
xchg
or
imul
loopne
push
add
aad
outsb
not
mov
mov
push
and
in
push
add
cmp
mov
movsl
cmp
xor
xchg
xchg
xchg
pop
test
inc
enter
cmp
fucomi
inc
movsb
js
out
rolb
xor
es
stc
add
adc
mov
fcoms
inc
xchg
popf
and
pusha
push
aam
hlt
fnstenv
mov
ds
mov
clc
jle
aam
push
enter
imul
cmp
ja
mov
fdivrp
aam
aam
je
out
aam
leave
mov
out
cld
aam
aam
fbld
int3
push
addr16
popf
int3
int3
int3
int3
popa
data16
adc
lret
popa
push
adc
add
repnz
sub
insb
adc
xor
mov
scas
mov
inc
imul
leave
sbb
enter
sub
popf
fcomp
xchg
mov
lods
sbb
addr16
mov
mov
aaa
dec
or
sbbb
nop
inc
jmp
mov
lods
pop
jno
sub
jg
call
or
shll
adc
inc
loope
adc
mov
add
jl
clc
fnstenv
add
cmp
xor
pop
std
inc
call
mov
inc
xchg
cmp
lea
mov
push
mov
repz
or
or
mov
xor
or
adc
test
push
int
rolb
pop
push
iret
xchg
addr16
inc
adc
addl
mov
dec
addr16
stos
xchg
add
xchg
mov
lret
lea
mov
out
adc
ret
repnz
sub
push
aaa
push
adc
cwtl
movsb
jns
or
adc
dec
xchg
cmp
dec
xchg
lea
int
sti
mov
cmpsl
fisttps
push
cmpsb
test
cmpsb
mov
jge
jae
movsb
sarl
fnstenv
rcll
and
jns
lods
addr16
pop
dec
add
xor
and
mov
xchg
mov
arpl
sarl
push
pop
pop
jmp
ss
jnp
pop
xor
fisubl
adc
es
and
ret
inc
test
in
sarl
das
cmp
sub
test
loop
dec
loopne
pop
jmp
pop
ja
inc
xchg
fbstp
inc
push
mov
into
sub
jmp
mov
into
sbb
pushf
addl
push
pusha
lcall
xorb
outsb
mov
mov
add
lret
and
sbb
push
fstl
enter
and
outsl
xor
mov
fistpl
sbb
or
or
int
test
xor
imul
lea
sub
ss
xor
sbb
stc
ja
xchg
jl
sbb
in
loopne
cwtl
sbb
fisttps
fildl
mov
fcomp
daa
pop
cmp
jge
filds
in
inc
xchg
jns
in
cmp
or
insb
xor
dec
lods
pop
jb
xchg
cmp
or
es
sub
leave
mov
aam
cmp
loopne
cwtl
cmp
sbb
rcl
adc
xchg
xchg
adc
cmp
fstpt
xor
popa
js
daa
mov
sbb
dec
enter
and
dec
sbb
jb
push
movsb
sahf
jne
dec
mov
jp
push
lcall
add
inc
arpl
in
lea
sarl
inc
inc
hlt
pop
dec
sub
xlat
add
subl
jno
cld
aas
in
pop
jns
sbb
mov
mov
adc
push
xor
pushf
in
or
mov
fstpl
ds
outsb
dec
inc
jmp
cmc
xchg
push
fstps
ljmp
ja
call
xchg
je
cld
jno
jns
jne
je
sub
cli
adc
sbb
push
mov
pop
rorb
lock
inc
push
rcr
cltd
in
pop
fsubs
pushf
and
jb
sub
mov
adc
jne
mov
fmuls
push
fists
and
pop
sub
clc
cmpl
jne
push
inc
mov
adc
cmc
mov
or
cmp
iret
rorl
cmp
xor
inc
cld
push
dec
insb
or
mov
pop
jp
jbe
mov
and
add
add
pop
push
repz
ds
or
inc
push
xchg
dec
cmp
jb
fbstp
mov
cmp
inc
jno
movl
cld
sub
aas
push
push
aam
mov
mov
xchg
mov
std
es
mov
jle
push
rcl
hlt
lcall
and
bound
jge
pop
inc
sub
add
repnz
les
mov
shl
shrl
sub
lret
mov
mov
push
and
shll
add
addb
das
into
add
cmp
lea
mov
dec
cmp
sti
sbb
rorb
ror
add
mov
push
out
jmp
sub
mov
popf
bound
clc
cs
ds
mov
scas
popa
or
or
pushf
mov
test
in
in
ja
push
or
add
dec
dec
lahf
aam
inc
jae
push
inc
dec
test
dec
push
inc
mov
push
subb
aam
sti
xchg
les
clc
sub
lret
inc
sub
dec
fisubrs
and
push
jecxz
pop
and
pop
jecxz
lock
sbb
xor
ss
jp
dec
jbe
lret
js
mov
in
subb
add
lds
in
jle
cmc
lock
cmp
mov
cwtl
jle
shl
xlat
adc
loope
jnp
flds
mov
mov
loopne
dec
sbb
rcrb
mov
movsl
jns
sbb
jbe
rcrb
rclb
mov
rcrl
aam
aam
inc
adc
fadds
cmpsb
in
inc
ret
inc
jne
fiadds
mov
cli
fdivrl
sub
inc
lret
and
adc
aad
outsl
stos
enter
mov
push
shr
inc
push
loopne
xchg
cmp
cld
rcl
out
iret
test
sbb
add
jmp
mov
mov
rcl
fs
pop
inc
dec
in
dec
aam
test
in
in
in
xor
popf
iret
lea
dec
lahf
pop
cmovno
xor
mov
fsubrs
dec
push
lahf
mov
scas
or
frstor
cmc
xchg
icebp
adc
or
mov
aam
xor
in
in
xchg
jne
jno
cltd
out
pop
ret
shrb
fcompl
lcall
jns
pop
popf
fstp
or
les
scas
pop
or
dec
xchg
push
fstps
mov
xor
dec
mov
lea
stc
mov
aam
mov
in
jge
add
push
and
pop
test
popf
jae
add
jl
pop
jne
push
add
jg
fiaddl
pop
xchg
aas
push
sub
push
add
push
fwait
push
sub
ficoml
cmp
adc
push
sub
push
es
push
push
push
sbb
xchg
les
xchg
loopne
cmpsb
in
aas
inc
dec
std
adc
sub
push
mov
leave
mov
bound
bound
jae
sbbl
call
sbb
rcll
stos
pop
call
test
push
leave
cmp
rorl
pop
in
mov
pop
addr16
sub
xchg
gs
mov
orl
test
aad
add
test
out
and
fdivr
repnz
jno
repz
sbb
rol
gs
and
lea
ja
rorb
mov
sbb
xchg
rol
lock
sbb
mov
add
lret
ds
mov
ja
sti
add
outsb
es
cwtl
movsl
loop
adc
cmp
jl
outsb
cmpl
cli
aam
and
outsb
jmp
in
test
cmp
aas
pop
mov
fcoms
pop
push
xor
jl
mov
dec
in
jg
push
ja
stc
rolb
inc
pop
inc
adc
popf
jmp
jg
leave
fs
push
gs
or
cmp
xor
cmp
pop
enter
push
add
fxch
xchg
push
aam
xchg
jno
imul
cmc
inc
xchg
subb
xchg
in
nop
xchg
inc
sub
add
mov
lcall
lea
fsubrs
mov
inc
lea
out
test
or
fdivs
mov
test
mov
movsb
jb
mov
jecxz
or
outsb
dec
mov
add
lods
adc
into
xchg
adc
pop
popl
daa
cmp
adc
mov
add
loope
add
jns
sub
in
jne
jne
pop
sti
nop
jo
data16
cmp
stos
leave
mov
cmp
mulb
sbb
mov
mov
and
iret
movsl
test
fisubrl
inc
mov
sub
ss
jbe
xchg
pop
cmp
ds
jp
test
dec
mov
push
xchg
xchg
ret
cmpsb
repnz
jecxz
divl
cmc
sub
into
in
icebp
in
and
int3
mov
loopne
dec
lahf
jo
cmp
in
jne
or
in
mov
fstps
je
pop
mov
push
mov
mov
and
push
icebp
fldenv
cmp
cmovs
lea
test
mov
outsb
mov
jle
fmuls
push
mov
fidivs
es
sub
lret
cmpsl
sbb
cmpsl
xchg
stos
mov
sub
sbb
shr
and
and
add
xchg
stos
sbb
mov
test
fdivrs
inc
inc
negb
roll
es
cmpsl
ljmp
movd
xor
nop
xchg
hlt
mov
xchg
test
add
movl
dec
adc
hlt
aam
gs
adc
fdivrl
xchg
popa
je
push
adc
xor
stos
movsl
inc
and
hlt
add
mov
or
mov
clc
or
adcl
sar
mov
iret
lock
movl
lcall
fwait
stos
mov
sbb
lret
jne
push
je
and
std
sub
dec
int
sbb
fcmove
cmp
cmp
inc
icebp
or
sub
lea
or
sbb
or
jmp
jmp
pop
push
scas
xchg
push
mov
fcomps
push
push
cmp
dec
xor
lret
adc
inc
push
inc
and
push
or
pop
loop
or
xor
sub
adc
aam
inc
jb
sub
mov
add
inc
sbb
in
mov
jns
mov
aam
mov
adc
mov
lea
fwait
push
jne
loop
movsl
call
hlt
xchg
lock
mov
leave
mov
in
fstpl
sbb
lret
jl
dec
pop
nop
cmp
insb
lret
arpl
mov
notb
and
sbb
dec
or
fsts
adc
xor
mov
or
loopne
sbb
inc
mov
push
dec
notl
and
push
jp
dec
mov
out
clc
sbb
mov
mov
aam
lods
or
aad
inc
xchg
mov
jbe
mov
mov
xchg
cs
aaa
pop
dec
mov
sahf
adc
movsb
xor
pop
add
xchg
adc
add
jae
loope
mov
sbb
dec
and
or
inc
and
shlb
mov
or
and
mov
cld
or
enter
or
fwait
cld
mov
lock
or
pop
jmp
jnp
dec
xor
rcll
inc
leave
lret
mov
popa
pop
outsb
or
sbb
push
jae
loopne
leave
or
mov
add
movb
sbb
fldenv
push
push
cmp
jne
sbb
lcall
and
pop
imul
dec
jnp
ljmp
pop
mov
sbb
push
popa
sbb
and
and
test
sub
push
fs
fsubrs
in
and
inc
cltd
jl
clc
inc
stos
repnz
fdiv
or
push
xor
stos
jl
add
jbe
push
gs
cld
and
movsl
cmp
daa
mov
dec
sbb
aaa
push
sub
andl
dec
cwtl
lcall
shrl
cmp
in
mov
iret
cmp
andb
loopne
add
sub
mov
xor
cld
hlt
or
mov
xchg
lock
jmp
ficoml
and
push
in
popf
mov
fimuls
inc
sbb
stc
push
clc
or
int
ret
mov
xor
or
movsb
mov
in
leave
flds
push
adc
cmp
int
mov
push
call
test
dec
mov
popl
int3
movb
add
rcl
lods
icebp
into
adc
sbb
adc
push
or
mov
es
loope
sbb
and
scas
dec
and
pop
cld
xchg
test
adc
dec
hlt
push
sub
clc
hlt
xchg
lods
pop
inc
jp
adc
in
inc
sub
mov
mov
push
dec
jb
push
inc
fisubrs
pop
je
adc
enter
into
clc
mov
clc
aaa
jo
imul
rorb
sbb
sbb
jo
jg
cmp
xor
shll
jnp
fimull
fsubs
jb
adc
add
mov
in
jae
add
sub
xchg
dec
in
enter
and
daa
fs
or
inc
dec
popf
adc
je
sahf
shl
test
jmp
xchg
add
test
loopne
ds
add
lea
or
test
pop
ljmp
mov
ja
in
cmp
movsb
add
stos
and
fmuls
jne
dec
arpl
mov
std
xchg
pop
cmp
push
fldcw
fstps
cmpsb
pop
pop
mov
sbb
rclb
inc
std
mov
mov
mov
or
insl
fists
xchg
push
mov
jne
jmp
pop
mov
testb
sahf
cld
in
imul
mov
push
mov
out
jnp
pop
mov
js
call
negb
and
lea
into
imul
bound
adc
sub
mov
mov
stos
jl
pop
out
cmp
mov
ljmp
mov
or
mov
cltd
repnz
mov
jge
push
pop
jns
or
call
mov
shrb
xor
xchg
pushf
cmp
movsb
andb
push
add
jne
cmp
jae
xor
cmpsl
xchg
imul
gs
inc
xchg
mov
or
shrl
xor
inc
xchg
leave
sbb
out
xchg
xchg
jne
in
daa
scas
jg
sub
jno
in
mov
test
pop
jne
in
inc
and
jb
decl
stos
xchg
in
inc
lods
sbb
push
add
xchg
cmpsl
cmp
lea
xchg
xchg
jl
cs
sbb
sbb
or
jle
pushf
and
fmulp
jns
push
clc
push
cmc
inc
sar
add
mov
aaa
sbb
jbe
inc
std
xor
push
push
dec
push
xor
fidivrl
mov
or
lahf
leave
rcr
outsl
cltd
sbb
add
pop
xchg
daa
or
sbb
or
mov
gs
sub
add
jl
and
mov
mov
or
jge
adc
xchg
cmovae
xchg
sub
xor
sahf
bound
pusha
push
dec
or
bound
cmp
push
mov
sahf
stos
shr
jmp
test
push
fsubr
dec
adc
mov
adcl
mov
lds
sahf
jl
out
adcl
clc
fiadds
imull
jg
cli
and
lds
mov
or
cmp
xor
les
gs
cmc
dec
ficoml
movsb
bound
adc
sub
cmpsl
lcall
mov
sbb
movsl
sbb
pop
out
cmp
jge
and
in
fcomp
add
subl
cmpsl
inc
lock
or
xchg
mov
push
sub
inc
fdivs
jmp
lcall
decl
xor
sbb
out
xor
inc
jns
cmp
push
adc
sub
aaa
xchg
jmp
hlt
adc
in
inc
lea
nop
pushf
jmp
push
lcall
and
jo
or
jge
push
xor
inc
sahf
xchg
call
pushf
mov
sub
push
cmp
stos
jecxz
sti
je
mov
jmp
and
rorb
xchg
or
add
fsubrs
sbb
jmp
rorb
inc
push
sahf
rolb
je
add
js
mov
jmp
dec
jmp
mov
enter
pop
inc
dec
testl
jge
mov
fimull
loopne
test
mov
mov
es
sub
sub
push
dec
mov
andb
and
jne
call
fdiv
add
sub
sub
xor
cmp
mov
jae
adc
jmp
call
and
cs
movsl
cmovb
nop
push
dec
and
fiadds
or
sub
or
xlat
add
adc
repnz
clc
jmp
xor
test
inc
xchg
xor
jns
adc
rcl
cmp
in
push
inc
xlat
and
hlt
inc
sub
popa
jnp
and
sahf
dec
sbb
pop
push
scas
out
dec
mov
mov
js
gs
mov
cld
cmp
lods
repz
xchg
mov
mov
ret
and
adc
inc
xor
or
push
jle
lret
xchg
push
push
sub
or
ja
xchg
inc
shrl
scas
dec
jns
test
dec
leave
push
and
sub
js
or
add
jl
or
pop
fwait
push
and
ret
mov
sub
adc
adc
and
lcall
jb
push
clc
and
add
xor
sbb
jne
or
into
jmp
dec
mov
repnz
sbb
xor
dec
sub
movsb
ss
cld
or
xor
add
sti
daa
popa
cmpsb
or
push
sti
movsl
lret
hlt
sbb
out
xor
int3
jae
push
addr16
ja
inc
or
mov
pop
or
lahf
in
push
sbbb
jne
int3
cmp
jne,pt
sbb
sbb
in
mov
mov
test
dec
sbb
xchg
xchg
movsb
je
jmp
xchg
sub
aam
fisttpll
xor
add
leave
pop
clc
cwtl
push
cmp
insl
jne
or
cs
mov
out
mov
je
call
sub
xchg
mov
adc
and
and
jne
inc
push
pop
jl
test
sbb
call
add
push
int
fmuls
inc
dec
sti
or
inc
adc
xchg
fs
mov
add
sbb
cmp
push
sbb
lock
xchg
aaa
mov
sbb
or
add
xor
mov
push
orb
adc
push
subb
dec
mov
test
loopne
jae
cs
inc
add
pusha
in
xchg
hlt
movb
sbb
mov
sub
jmp
les
cli
xor
push
cwtl
mov
add
dec
lock
push
lea
xor
inc
or
xchg
bound
lock
add
or
jno
dec
shlb
test
xchg
adc
mov
sub
xchg
popa
mov
dec
pop
stos
cltd
les
mov
add
repz
and
lds
mov
fldl
inc
push
mov
test
and
dec
adc
in
mov
mov
incl
rcrb
push
inc
frstor
ret
jne
fmull
clc
fstpl
add
fcompl
les
mov
push
movl
or
add
sub
cmp
pop
cmp
test
sbb
int
arpl
and
sti
sbb
jb
pop
jmp
gs
sub
rcr
into
mov
mov
data16
and
add
mov
icebp
sarb
in
fidivrs
dec
test
and
pop
push
mov
xor
push
adc
inc
dec
jne
and
popa
dec
sbb
aaa
inc
in
ror
mov
fcmovb
mov
popf
jg
add
push
and
rorl
push
adc
int3
dec
mov
icebp
xchg
repz
cmpsb
add
ljmp
jnp
sub
jne
xor
or
cmp
mov
cmpsb
xor
mov
rcll
cmc
fldl
js
lcall
out
inc
jecxz
sub
adc
shrl
mov
roll
ljmp
push
dec
sbb
push
adc
sub
cld
jmp
ret
stos
adc
mov
push
and
adc
cmp
cmpl
push
jl
insb
add
les
or
xchg
lret
or
cmpsb
adc
lret
xorl
add
lea
aaa
stc
dec
hlt
adc
aas
test
es
mov
leave
fists
ret
lahf
shll
insb
int3
ss
fs
adc
setb
and
jae
jle
mov
movsb
lcall
xchg
push
sub
neg
sbb
inc
pop
mov
dec
sub
or
lods
xor
nop
mov
test
inc
cmp
add
push
push
add
and
add
clc
fs
cltd
mov
adcb
push
dec
cmp
adc
mov
or
cltd
ds
inc
push
fistpll
hlt
in
or
dec
adc
push
nop
cmp
add
push
xchg
xor
cmp
mov
stos
sub
fidivs
mov
push
lods
rcr
shll
and
sbb
jge
xchg
dec
inc
ljmp
outsl
les
add
mov
inc
cmp
sub
jg,pn
cmp
jbe
shll
dec
sub
or
sbb
cmp
lods
inc
pop
push
mov
xor
or
jns
pop
or
or
pop
dec
and
pop
lds
add
or
cs
sub
dec
mov
inc
or
aas
fwait
push
enter
aam
int3
enter
daa
sbb
add
cmp
stos
sti
rcr
dec
and
rcr
push
clc
shrb
pop
cmp
jmp
push
push
outsb
adc
lcall
imul
push
push
jmp
dec
stos
and
andb
ds
cmc
push
mov
mov
popa
push
ret
out
adc
dec
adc
xor
insl
loope
data16
std
add
dec
stos
pop
sbb
jmp
mov
imul
xchg
sbb
ss
xchg
sti
xchg
imul
in
or
mov
and
or
test
and
mov
or
sbb
mov
jmp
ret
cmp
jb
and
or
jmp
adc
mov
out
or
andb
aam
sbb
or
movsb
jg
mov
adc
or
add
gs
adc
cs
xchg
add
lcall
jns
jge
cs
nop
in
jae
data16
adc
inc
sub
jle
enter
add
sarl
mov
adc
push
jb
push
sarl
xchg
insl
pop
sub
stos
mov
adc
adc
into
push
add
loop
sbb
and
imul
ds
xor
adc
adc
rcl
lret
dec
dec
jg
cltd
aaa
inc
jecxz
pop
mov
add
imul
dec
inc
push
and
mov
xor
shll
int
inc
mov
movsl
jno
enter
dec
lds
inc
push
xor
je
cmp
cmp
lock
repz
pop
loope
sbb
pop
leave
xor
in
xchg
mov
mov
adc
aam
jecxz
adc
int3
cmc
dec
jge
loopne
inc
pop
pop
jecxz
cmp
nop
ss
push
insl
push
and
je
xchg
xor
jne
push
repz
push
shlb
idiv
xchg
adc
roll
sbb
or
pop
pop
dec
and
inc
ret
lea
add
dec
jle
adc
rolb
je
icebp
mov
push
sub
adc
das
pop
cmpsb
inc
push
mov
cmp
jbe
xchg
xor
mov
jno
dec
inc
ljmp
je
int3
mov
dec
loop
add
dec
push
lods
push
pop
or
mov
mov
ret
ret
push
xchg
gs
clc
xor
je
fldcw
popa
dec
sbb
mov
mov
push
imul
rorb
outsl
mov
int3
popf
adc
add
add
xchg
mov
ficompl
pop
sahf
daa
cmp
adc
mov
cld
push
lret
sub
ljmp
fwait
dec
or
add
cmp
lret
nop
in
inc
out
pusha
mov
mov
mov
xchg
je
cmp
mov
sbb
test
aaa
cltd
rol
sub
push
insb
cmp
jne
int
scas
mov
mov
push
daa
stos
and
push
cs
pop
loop
movb
out
loopne
sub
or
lods
xchg
sub
add
fwait
lds
jae
xor
aam
add
ss
cwtl
or
xchg
int3
sub
pop
ss
es
popa
push
shlb
xlat
inc
pop
add
popa
add
sbb
add
pop
xchg
dec
lret
call
and
lea
sbb
aaa
popf
aad
sub
lret
jp
adc
push
sarl
lret
arpl
fbstp
dec
je
add
pushf
mov
iret
mov
push
push
or
xchg
and
dec
ret
in
scas
pop
xchg
add
mov
jp
sbb
rclb
lea
movsl
or
push
or
push
push
lea
cmp
dec
inc
push
sub
inc
imulb
add
leave
push
add
in
pop
push
xchg
mov
adc
lea
ss
mov
adc
jo
les
jmp
andl
scas
and
outsl
rclb
inc
lret
popf
int3
mov
or
jne
sti
inc
or
mov
dec
mov
call
mov
mov
jmp
and
and
push
sub
pusha
cmp
in
inc
loope
pop
cmp
jl
cmpb
arpl
rcrl
test
mov
add
mov
adcb
or
je
sub
xchg
mov
add
sbbb
xchg
nop
add
mov
adc
pop
dec
xchg
mov
dec
arpl
pop
outsb
pop
stos
stos
inc
cmp
xchg
in
mov
fbstp
mov
xor
adc
lods
push
pusha
cmc
mov
test
xor
test
dec
dec
mov
movsl
push
push
lcall
loope
adc
enter
movsb
mov
in
inc
add
mov
daa
push
or
jg
into
push
ret
push
sub
sub
xchg
lahf
leave
sub
js
je
les
call
inc
fs
or
sub
lret
repnz
xor
mov
aam
js
icebp
dec
adc
mov
dec
mov
sbb
mov
loope
ds
mov
cmp
push
enter
pop
rcrb
adc
lods
pop
mov
xchg
push
or
add
cltd
dec
push
sub
or
adc
faddl
outsl
inc
ljmp
push
iret
and
icebp
nop
push
lds
or
push
or
mov
xor
nop
xor
xchg
jle
scas
outsl
int
pop
insl
add
nop
mov
test
bound
lea
imul
inc
inc
outsl
inc
jge
xor
sub
mov
sub
cs
and
popa
sub
in
les
push
mov
lods
jl
incb
mov
sub
mov
sub
sbb
fsts
xchg
cmp
jae
cltd
sub
sbb
inc
inc
push
adc
mov
imul
or
inc
enter
sbb
mov
or
xor
cltd
push
popf
adc
imul
into
mov
or
sub
mov
imul
jecxz
jp
add
mov
mov
std
add
dec
xor
bnd
add
xchg
lret
shld
dec
and
ror
lret
test
push
dec
push
sbbb
add
or
cmp
ds
loop
decb
or
xchg
in
test
mov
inc
out
dec
xor
adc
xchg
xchg
jge
inc
js
arpl
fwait
mov
das
inc
mov
xor
or
sarl
adc
jge
movsb
add
adc
nop
jne
inc
sub
sub
repz
rcll
popf
push
push
daa
and
dec
sub
xorb
out
xchg
je
sub
mov
das
es
adc
mov
mov
call
test
push
sub
jl
mov
push
test
aad
leave
sbb
mov
jne
repz
adc
push
and
insl
hlt
xchg
shl
add
fwait
ret
and
imul
sahf
cltd
and
inc
xor
pop
sub
push
sub
jge
adc
ret
fxch
out
dec
xor
mov
je
inc
mov
sbb
and
sbb
imul
cmpsb
sbb
aas
test
push
clc
out
mov
enter
adc
mov
sub
adc
aaa
in
sbb
add
stc
sub
aas
mov
bound
cmp
int3
pop
and
in
push
pop
and
push
aad
or
adcl
adc
sbb
jns
push
jne
pop
push
push
jno
jmp
pop
dec
push
sub
adc
add
and
jno
add
mov
inc
push
cmp
mov
dec
sub
shll
mov
inc
add
shlb
lret
ret
mov
ss
xchg
sub
cmp
and
loop
pop
sub
cmp
imul
mov
xchg
sub
ja
dec
fs
out
sbb
xchg
inc
addr16
adc
imul
add
or
pop
jmp
test
xchg
cwtl
mov
in
push
gs
push
inc
push
clc
sbb
or
adc
inc
pop
addr16
popa
icebp
dec
mov
or
imul
cmpsl
enter
push
add
sbb
inc
je
inc
mov
add
cmp
mov
mov
cmp
inc
sarb
and
bound
mov
ret
ss
outsl
test
cld
nop
je
or
sarb
pop
xchg
jecxz
and
jmp
pop
and
or
cmc
ficomps
dec
int
mov
lret
xchg
add
lock
mov
dec
xlat
ljmp
lret
push
aad
add
inc
enter
push
mov
pop
mov
xlat
rcll
sbb
nop
cltd
and
outsl
scas
sbb
out
mov
push
mov
cmc
sub
movsb
scas
aad
xchg
or
mov
xor
inc
push
and
add
or
jecxz
adc
movl
int3
fcmovbe
stos
push
data16
test
cltd
jle
push
addl
mov
test
mov
sub
adc
popf
pop
andl
mov
movb
add
sub
mov
outsl
and
nop
test
rolb
xchg
add
xchg
xor
popa
lock
or
hlt
pusha
mov
mov
pop
incl
ret
daa
adc
add
or
insb
push
sbb
je
int3
adc
mov
lods
inc
aam
iret
mov
add
jp
in
repz
mov
sbb
mov
sbb
loop
sbb
mov
pop
fsts
sbb
test
or
mov
mov
repnz
push
adc
xchg
sbb
xor
mov
adc
inc
xchg
jne
xchg
adc
sbb
sbb
out
mov
mov
jne
inc
das
int
adc
mov
aaa
imul
mov
lods
cmc
sub
adc
pop
and
xchg
daa
or
push
inc
dec
xchg
mov
and
loop
sub
and
mov
fists
sahf
sub
push
addb
fs
cmpsb
xchg
int3
add
in
mov
pop
cltd
xor
push
stos
sbb
pop
mov
adc
and
andb
mov
icebp
cmp
add
dec
push
stos
daa
in
or
aas
test
xor
rorl
push
pop
pop
pop
jecxz
and
movsb
mov
outsl
push
sbb
jmp
inc
xchg
movsl
int
cmp
jg
adc
sbb
mov
aas
sub
xchg
mov
mov
mov
aam
popa
dec
lret
das
jbe
data16
sub
sbb
ds
idivl
and
out
push
sbb
push
pop
or
or
test
mov
push
push
outsl
movsb
int3
xor
cld
repz
mov
lds
and
xchg
rclb
shr
and
test
and
clc
xchg
enter
adcb
fnstenv
dec
mov
push
or
add
mov
add
sub
add
mov
pop
add
test
leave
shl
push
push
push
out
loopne
in
and
pop
xchg
movsb
hlt
repz
test
xchg
call
pop
adc
call
xchg
sub
pop
adcb
dec
cmpsl
mov
mov
loop
mov
aam
popf
pop
mov
sub
ficompl
dec
mov
sbb
fsub
gs
xchg
sub
push
fwait
or
sub
xor
adc
jmp
int3
aad
inc
call
mov
cwtl
pop
daa
adcb
insb
push
push
and
xlat
jp
mov
xor
cmp
mov
arpl
xchg
and
and
add
movsb
add
and
xchg
movb
mov
pop
mov
add
inc
add
mov
mov
ljmp
xor
mov
sti
push
les
add
xor
push
shrb
mov
ret
daa
cwtl
pushf
out
sbb
movsb
mov
or
or
mov
mov
or
sub
mov
es
mov
pop
push
les
jno
and
jns
jnp
lea
gs
mov
and
test
shlb
adc
sub
cmpl
cmp
je
imul
mov
lods
xlat
add
add
mov
test
imul
imul
jo
inc
and
test
sub
jge
add
mov
shrl
adc
sbb
popf
xchg
fisubrl
add
add
inc
mov
lcall
sbb
cmc
hlt
sqrtps
push
and
jp
xor
dec
lods
lods
and
pop
mov
sub
lea
add
es
cmp
inc
dec
lods
test
dec
mov
ret
mov
sub
js
or
fwait
popl
and
add
test
movsb
sahf
add
lcall
adc
mov
cmpsb
cmpsb
sbb
mov
sar
out
dec
jno
popf
movsb
inc
pop
jae
jns
fnstcw
and
mov
lret
sar
xchg
mov
sahf
add
and
cmp
outsl
add
addr16
mov
inc
dec
add
mov
jne
push
add
int3
push
cmp
mov
inc
push
outsl
dec
push
popa
cwtl
btc
adc
adc
adc
mov
add
inc
fimuls
cmp
or
sub
mov
outsb
add
and
mov
iret
sahf
push
adc
aam
add
adc
mov
insb
and
sbb
or
pusha
push
mov
push
aad
in
add
inc
lea
xor
pop
push
fs
mov
push
cmpsl
cmp
sub
inc
int
push
add
xor
orl
adc
add
pop
mov
sub
out
pop
out
test
jmp
cmpsb
mov
dec
test
movsb
xchg
dec
sub
pusha
add
pop
mov
cmp
clc
dec
mov
sar
in
outsl
test
pop
pop
push
imul
jecxz
jno
pop
and
xchg
sub
sub
or
inc
sbb
xchg
and
add
jb
push
hlt
dec
mov
push
push
pop
incb
test
jb
vmovlps
inc
loopne
and
std
sub
push
decl
fs
gs
sub
push
out
fsubrs
es
and
sub
sbb
push
leave
cs
add
xchg
adc
popa
imul
push
rcrb
mov
dec
xor
sub
jp
inc
mov
sub
or
sub
adc
pop
push
stos
outsb
dec
xchg
pop
cmpsl
in
pop
or
sbb
shrl
sub
push
orl
mov
das
adc
dec
add
fdivs
imul
aad
or
addb
cmpsb
adc
leave
lahf
push
xor
sub
dec
icebp
add
mov
clc
sarb
das
fwait
add
adc
clc
cmp
int3
ficompl
cmp
scas
je
ss
orb
sahf
icebp
mov
sti
adc
adc
pop
or
jg
mov
cmp
add
lock
inc
add
stos
jg
popf
add
adc
sti
push
and
test
inc
adc
pop
cmp
push
fldcw
in
or
inc
adc
cltd
jb
fisubl
push
ja
ficoms
ss
lods
mov
outsl
nop
mov
gs
add
and
sub
push
inc
xor
adc
mov
je
cmovo
pop
sbb
add
sbb
inc
int3
xchg
add
push
cmp
sub
ds
data16
push
dec
xor
mov
imul
mov
in
pop
xchg
mov
xor
mov
adc
es
xor
mov
sub
and
lret
cmpsb
add
subb
loopne
rolb
jmp
mov
dec
or
in
adc
xchg
or
das
pop
push
cmpsl
or
cmp
sub
or
sbb
xor
cmpl
pop
push
or
jecxz
ret
pop
pop
icebp
push
test
inc
push
fisubrs
sbb
push
push
cltd
aaa
xchg
lds
sbb
movsl
or
inc
ljmp
dec
fwait
test
pop
dec
inc
mov
mov
or
and
orb
add
rorb
push
int3
cwtl
push
add
cmp
mov
vpmuludq
push
subb
pop
and
cmp
jmp
lods
rcrb
aas
push
add
add
mov
sub
ljmp
dec
hlt
pop
lret
ret
test
je
push
add
adc
jne
test
mov
xor
je
cmp
mov
mov
jmp
loop
xchg
lret
adc
cmc
push
xor
rcll
lcall
xchg
out
mov
inc
inc
adc
inc
dec
sti
xchg
inc
xchg
hlt
pop
push
fcoml
stos
arpl
das
jno
jecxz
into
push
jmp
lds
and
cmp
cmp
inc
xchg
and
icebp
or
mov
in
pop
mov
pop
sbb
push
in
or
pop
mov
outsl
int
or
mov
lret
nop
mov
lret
inc
test
inc
xchg
in
xchg
mov
gs
cmp
out
pop
or
cmp
lock
sbb
ds
xor
pop
stos
outsl
adc
mov
mov
in
fnstenv
add
bound
je
push
or
in
jecxz
cmp
lds
aas
sub
dec
int
jo
outsb
add
test
jg
xor
inc
xchg
push
add
lods
add
push
fsubl
and
mov
popf
xchg
lods
pop
and
xchg
cmp
aas
cmpsl
movsb
lcall
mov
icebp
gs
pop
pop
mov
test
xor
rcll
pop
nop
insb
push
and
push
dec
popf
ror
cmpsl
enter
sub
mov
and
stos
cwtl
sbb
ficoms
rol
push
and
sbb
jmp
mov
xchg
pop
sti
mov
add
jae
insb
int
pop
adc
push
mov
bound
arpl
xor
jne
movsl
test
aaa
inc
test
rcrl
inc
shlb
mov
mov
sbb
loope
loop
out
insl
jle
mov
and
adc
jl
xchg
aad
pop
enter
push
or
xchg
mov
push
adc
pop
or
loope
cmp
cli
and
ret
xchg
xor
mov
push
and
xchg
mov
inc
ds
ljmp
ljmp
and
gs
iret
jb
push
xor
lcall
aad
iret
sbb
stos
hlt
add
xor
and
aad
stos
mov
sbb
loop
call
fistps
std
xor
mov
sbb
pop
push
push
imull
shll
pop
push
aad
and
adc
aad
nop
clc
cs
inc
fadds
jg
mov
xor
push
pop
test
xchg
jbe
js
pop
or
cli
xchg
cmp
jae
or
add
and
shld
shl
ret
mov
into
and
add
ret
test
xchg
loopne
xor
out
jmp
xor
cmovb
aam
cmp
adc
ljmp
cwtl
pop
add
pop
add
and
or
cmp
jne
sub
rcrb
mov
es
and
mov
les
dec
je
adc
lret
mov
inc
mov
shll
loop
jmp
les
adc
add
mov
cmp
out
push
or
push
nop
out
sub
push
mul
int3
pop
and
dec
add
or
push
or
stc
pop
sub
fsubs
pop
xor
cmp
jp
movb
enter
mov
aam
xchg
xor
mul
lret
push
sub
sbb
mov
je
sbb
cmp
shrl
mov
sub
aam
aam
inc
int
shl
push
pop
adc
fdivrl
data16
roll
arpl
mov
push
xor
adc
xchg
mov
xchg
aaa
sbb
pushf
mov
inc
cmp
hlt
aaa
stos
ffree
jge
xchg
clc
add
push
and
test
aaa
and
movsb
fsubl
filds
adc
mov
push
adc
mov
adc
cmp
xchg
dec
lds
push
out
add
movl
push
mov
push
xchg
mov
mov
push
cmp
pop
mov
mov
fwait
aam
mov
nop
push
icebp
sub
xor
cmpsb
or
movb
jmp
xchg
push
out
or
ljmp
mov
or
mov
add
push
jns
and
xor
jp
add
push
sub
pop
push
or
rorb
push
mov
test
fs
stos
in
xchg
inc
jmp
cmp
fmuls
js
fadds
enter
sub
sub
xor
mov
push
scas
push
jle
shld
or
inc
push
push
daa
in
ficoms
cmp
test
inc
jg
je
cmova
popf
jg
je
subl
push
je
add
jmp
jns
js
add
dec
add
fs
pop
dec
or
add
ds
dec
ficomps
cmp
int3
sbb
pop
sahf
stos
jns
popa
xchg
rclb
popa
fdivrs
into
lret
mov
test
fs
test
push
xor
not
lock
test
repnz
inc
mov
and
or
fmul
or
dec
mov
sub
pop
or
or
pop
dec
std
fadds
int
and
xor
in
mov
mov
inc
sti
jo
mov
sub
inc
in
and
or
clc
int3
and
and
lahf
lods
and
addl
dec
jo
int3
subb
outsl
aad
ja
mov
xor
lsl
xchg
jg
pop
movsl
xchg
or
xor
and
add
mov
in
repz
bound
syscall
loope
pusha
jl
and
enter
dec
out
jle
push
test
in
roll
lea
add
mov
xor
jecxz
cmp
test
mov
stos
or
aad
add
mov
mov
shlb
push
ds
cmpsl
mov
cmp
jg
adc
movsb
and
into
sub
dec
pushf
shlb
sbb
stos
test
lcall
movsl
cmp
call
adc
shll
in
dec
lret
fwait
or
ret
mov
iret
popa
xor
pushf
add
in
lahf
ljmp
add
lcall
push
dec
inc
inc
bound
or
cmp
pushf
call
mov
push
hlt
cli
xchg
cs
flds
popf
mov
notl
xchg
mov
ja
push
push
sub
cmp
and
and
cltd
xor
int
dec
add
xor
in
push
cmpsl
dec
jnp
movsl
mov
mov
adc
mov
xor
push
adc
aaa
fildl
loope
sub
and
xchg
and
rcr
jae
dec
pop
inc
or
leave
mov
scas
js
loope
add
je
aam
or
cld
cld
je
mov
jne
cld
cld
cld
cld
mov
jmp
repz
sbb
clc
pop
shrb
push
or
fcmovb
cmp
inc
mov
sbb
inc
lret
push
add
xor
cld
jmp
loopne
mov
push
adc
mov
aaa
mov
inc
hlt
mov
pop
xor
pop
sbb
mov
sbb
insb
adc
hlt
cli
es
mov
push
test
push
fstps
jb
jb
je
mov
adc
mov
imul
push
inc
push
dec
rcl
push
mov
add
sahf
test
sbb
jae
je
fisubrl
xchg
bound
stos
jg
ja
jbe
cmp
ljmp
pop
mov
hlt
inc
mov
orb
call
lods
leave
xchg
push
or
sbb
test
leave
adc
dec
imulb
push
jbe
add
hlt
hlt
mov
pop
lret
inc
je
ret
xchg
clc
pop
mov
leave
rorl
push
lahf
sar
and
stos
clc
testb
pop
out
inc
cmp
ljmp
inc
jb
mull
cmc
or
inc
push
sbb
xor
sub
and
dec
sub
lret
lods
nop
inc
insb
test
fs
mov
and
pushl
addps
xchg
cld
hlt
repz
jae
in
aam
aad
adc
lcall
cmp
stos
fisttps
test
pop
inc
pusha
out
popf
inc
mov
jb
mov
inc
mov
adc
hlt
jle
outsl
xlat
cmp
arpl
mov
fs
push
dec
insb
je
test
jns
mov
xchg
clc
ror
and
cmp
in
stos
push
imull
sbbl
frstor
mov
dec
sti
mov
movsl
add
fnclex
add
cld
pop
fstcw
lock
push
xchg
call
dec
and
popf
mov
and
clc
and
or
xor
push
add
cmovbe
data16
in
dec
push
cld
mov
testb
push
mov
cs
push
mov
mov
push
test
jecxz
cmc
pop
add
ret
xor
and
mov
or
or
sub
lret
push
pushf
adc
dec
jg
movsb
jno
ljmp
and
push
jnp
pop
leave
adc
in
sbb
xchg
nop
test
mov
hlt
or
cmp
clc
mov
add
cmpsb
xor
xchg
or
sub
or
jb
enter
push
pop
or
jmp
sbb
in
dec
or
jmp
xor
cmp
adc
adcb
xor
add
cltd
loop
mov
or
or
je
xor
add
jmp
cmp
fdivs
cmpsb
mov
add
mov
cmc
popl
push
sbb
popa
sbb
lret
leave
add
mov
rorb
or
shll
sub
cs
aam
bound
data16
add
adc
jmp
add
pusha
mov
cmp
and
add
push
jb
es
and
or
cmp
sub
jmp
mov
xchg
sbb
sahf
shr
sbb
data16
fbstp
ret
int
je
cmp
adc
enter
sbb
jno
lret
add
cmp
fsts
ja
fstps
jbe
data16
orb
pop
frstor
ljmp
dec
adc
and
ret
enter
cmpb
xchg
lret
add
enter
add
jmp
jns
mov
loop
dec
daa
imul
pop
push
enter
das
push
xor
sub
std
add
jmp
or
fists
adc
test
scas
addr16
jb
popa
into
lea
ja
sbb
andb
and
sbb
jecxz
or
or
mov
add
loope
add
add
add
add
sbb
or
sbb
cwtl
push
cld
fs
leave
pop
mov
jno
dec
loopne
mov
sarl
sbb
or
lret
mov
ljmp
dec
push
add
scas
out
sbb
jne
clc
xor
and
ret
stos
xchg
xlat
sub
xor
pop
dec
in
sbb
in
adc
movl
loop
pop
push
sbb
stc
clc
sbbl
push
or
jno
cld
push
and
ja
xor
add
mov
shrl
push
leave
nopl
rclb
mov
adc
cmpsl
sbb
call
mov
push
xor
xchg
dec
test
push
shr
dec
mov
pop
repz
daa
shll
mov
mov
addr16
in
call
cs
jl
stc
dec
into
sub
xchg
int
mov
add
add
ret
pop
lar
sub
push
jno
jg
or
js
xchg
xchg
push
add
inc
or
or
dec
push
dec
in
gs
mov
shl
xor
inc
shlb
lea
cmp
adcb
mov
lea
insl
test
mov
imul
bound
push
sqrtps
out
ret
or
sar
push
gs
outsb
adc
and
xor
pop
xor
dec
adc
std
sbb
in
pop
xchg
mov
lret
int
cmp
pop
pushf
rclb
loop
pop
sub
mov
lahf
gs
xor
pop
or
cld
lods
cmp
mov
mov
jl
cmp
add
imul
int3
dec
test
jg
clc
inc
cmp
mov
sbb
adc
cltd
aaa
stos
xor
fwait
jg
push
pop
jg
pop
cmp
dec
adc
xchg
mov
and
es
call
loopne
fstps
leave
loopne
mov
roll
adc
lods
jbe
fcoml
test
xor
jmp
imul
xchg
in
es
in
mov
add
add
add
mov
mov
push
aas
mov
sarl
pop
lock
clc
push
lea
push
sub
testb
repz
jmp
mov
mov
enter
adc
inc
dec
or
lret
pop
cmc
dec
in
cmc
push
insl
icebp
cmp
push
dec
mov
or
outsw
add
test
lea
sbb
or
xchg
test
cmp
mov
popf
push
jmp
fstpl
bound
hlt
popf
shlb
sbb
or
test
xor
fxtract
xor
es
imul
mov
mov
aam
mov
adc
jl
cld
mov
jne
inc
inc
jbe
call
xchg
add
inc
fwait
es
pop
adc
sbb
jae
inc
aas
pop
dec
xchg
push
push
daa
jg
xchg
lret
inc
mov
pop
or
inc
cld
mov
or
jmp
pop
and
iret
adcl
push
inc
inc
fiaddl
mov
call
adc
pop
and
jl
adc
cmc
lods
out
dec
insl
loope
hlt
into
mov
or
pop
arpl
lock
enter
push
aam
int
adc
jo
sets
xor
fsubr
xchg
mov
adc
jbe
in
pop
dec
dec
inc
nop
xlat
jmp
push
ljmp
push
subb
lret
rolb
stos
sbb
ds
incw
push
scas
stc
cmpsb
ret
or
pop
aas
fidivs
xchg
dec
clc
or
push
mov
or
fldcw
dec
test
or
das
lret
pushf
dec
push
xor
data16
fs
adc
jge
xchg
out
or
cmp
lret
ljmp
jecxz
mov
xor
mov
and
push
in
mov
inc
or
lret
loopne
sub
dec
push
enter
push
cmp
addr16
bound
enter
and
cmp
ss
outsb
inc
int3
pusha
or
jmp
mov
dec
mov
call
cld
add
movl
hlt
fucomi
mov
jne
xchg
pop
repnz
and
mov
jo
or
mov
push
pusha
testb
adc
dec
fiadds
stos
sbb
mov
mov
ds
out
int3
or
jecxz
repz
adc
sti
cmp
adc
sbb
mov
ss
in
sub
jns
out
sub
sub
divl
sub
xor
out
cs
sbb
jno
xor
inc
pop
out
pushf
cmp
inc
inc
jno
jns
inc
dec
dec
out
pushf
testl
dec
push
dec
jge
divl
dec
pop
dec
jns
out
dec
fs
pushf
divl
push
out
cmp
je
jno
cmp
add
pushf
jl
fsubp
ret
ds
jbe
aas
mov
jge
fimuls
addr16
xchg
inc
jbe
addr16
sub
mov
fsts
and
push
jle
cmp
nop
xchg
test
xchg
lcall
push
mov
in
xor
adc
or
aad
lds
and
aad
xchg
sub
sub
xor
cmp
stos
mov
cmp
push
mov
pop
pop
stos
mov
cmp
jo
cmp
jle
mov
mov
pop
aas
subb
scas
repz
scas
repz
mov
scas
test
test
jg
icebp
or
inc
mov
fs
scas
dec
stos
inc
fmul
pop
inc
jp
ret
push
clc
or
outsb
mov
push
cmc
dec
clc
mov
jmp
push
mov
jno
adc
mov
mov
leave
jle
in
or
repz
ljmp
loopne
cwtl
xor
mov
cmp
je
jnp
or
mov
jl
fcmovb
adc
dec
sahf
cld
mov
pop
pop
adc
mov
mov
mov
mov
pop
shrb
jl
xchg
xor
jge
fmuls
xchg
es
in
aaa
imulb
fs
xor
mov
sub
cmpl
xchg
or
movsl
nop
orl
mov
push
popf
adc
add
xchg
sbb
add
add
xchg
js
icebp
push
inc
or
std
pop
stc
mov
and
es
or
adc
add
mov
jg
ljmp
sbb
sbb
mov
test
inc
mov
sbb
call
mov
jmp
adcl
mov
dec
push
jle
mov
xchg
lcall
lds
lret
les
cld
mov
popf
adc
lahf
in
adc
movl
imul
into
mov
sub
nop
mov
lcall
mov
out
push
test
sub
pop
fimull
pop
repz
lret
mov
dec
push
jecxz
repz
sbb
leave
les
lret
inc
xor
jnp
je
shll
and
cmp
jecxz
sub
add
sub
jns
out
push
sub
divl
sub
sub
push
cs
das
mov
push
std
mov
in
imul
or
je
mov
mov
cmpsl
mov
xchg
xlat
mov
aam
and
ror
xchg
lret
xchg
add
push
push
int3
sub
lahf
sub
inc
faddl
outsb
pop
push
int3
cltd
and
faddl
add
push
rolb
pusha
add
aam
nop
mov
pop
fdivs
movsb
xchg
stos
sbb
mov
adc
addb
and
cmp
xchg
xchg
hlt
sub
or
jno
inc
mov
in
add
aam
push
mov
jmp
mov
mov
call
push
gs
rcrb
adc
push
sbb
movsl
loopne
or
rol
mov
add
insb
sub
fucomip
mov
pop
jae
rolb
fildl
dec
and
test
and
mov
fsubl
adc
fsubl
retw
jno
fsubr
fnstcw
gs
add
mov
xchg
sbb
jmp
lea
cltd
subl
mov
xor
mov
or
cmp
adc
inc
pinsrw
or
jmp
jg
loop
mov
or
mov
push
dec
mov
sbb
call
pop
sub
in
add
aam
mov
in
call
cmpsb
cmpsw
xchg
lret
out
fdivrs
aaa
jbe
mov
in
sub
pop
in
icebp
repz
fmuls
lahf
inc
push
jb
dec
out
mov
aas
dec
or
mov
lahf
in
jb
inc
rorb
sub
in
mov
addr16
fiaddl
movsb
lds
inc
add
stos
add
jmp
mov
mov
in
call
punpckhbw
daa
jo
jae
mov
and
incb
jle
repz
sti
push
sub
xor
and
mov
mov
fsubrl
sbb
int3
pop
movsl
repnz
mov
mov
insb
test
dec
lds
cmp
and
adc
push
push
inc
and
das
cmp
in
mov
testb
sub
push
pop
sub
xor
inc
adc
jbe
pop
jb
sub
mov
jmp
lea
aam
dec
jmp
adc
jmp
js
insl
inc
xchg
mov
adc
movl
aad
sbb
xor
out
adc
xor
jge
adc
loopne
int
out
sub
outsb
stc
sub
xor
pop
insl
int
inc
dec
loope
jb
arpl
je
lahf
add
dec
adc
adc
sub
and
jb
mov
mov
push
pop
pop
imul
sub
sbb
add
inc
stos
aam
rclb
mov
inc
xor
addb
or
bound
gs
loop
or
es
add
lret
add
adc
pop
xor
lea
adc
jmp
jge
add
cmp
inc
pmuludq
xchg
sti
jbe
push
sbb
test
sub
jle
cmp
jno
ljmp
jno
adc
inc
mov
and
mov
push
adc
sbb
sti
or
jno,pn
sbb
push
ficoms
hlt
movaps
shrb
push
mov
add
lcall
or
sub
loope
add
lret
cmp
push
sub
push
sub
add
push
lcall
arpl
jbe
in
mull
dec
and
out
xor
jnp
mov
fistl
push
cmp
sar
mov
push
test
gs
addr16
jne
gs
cmp
fstl
repnz
dec
xor
je
jmp
frstor
mov
inc
bound
push
mov
sti
mov
pop
fnstenv
or
insb
pop
test
test
xor
js
das
adc
xor
mov
push
adc
add
cmp
xchg
fs
sbb
mov
jl
ss
and
jne
or
outsb
sbb
ds
xchg
fldl
loop
test
inc
aad
push
fstps
in
or
adc
sbb
pop
mov
pop
loope
ljmp
std
cmp
xchg
add
pop
and
movsb
push
cmp
enter
mov
rolb
jns
mov
adc
jbe
add
jns
in
iret
ds
xor
adc
imull
mov
adc
push
add
arpl
je
pop
mov
mov
or
sub
addr16
lods
push
push
fisubs
xchg
imul
sub
inc
mov
sub
lret
mov
pop
inc
mov
pop
loope
test
push
pop
std
mov
adc
push
into
movsl
sbb
addr16
stos
jo
call
inc
scas
cmp
or
dec
and
out
push
push
movsb
xor
fistpl
dec
inc
popf
inc
adc
test
fisubl
push
pusha
data16
push
dec
roll
mov
adc
push
add
xchg
and
lea
jmp
push
cld
mov
cmp
push
add
adc
xchg
fsubrs
sub
decl
cmp
push
lea
dec
clc
and
fwait
add
add
pop
jmp
iret
sarb
xchg
add
push
incl
push
lret
jmp
fidivl
adc
call
cld
push
push
lds
cmp
ja
mov
loop
lock
lock
sbb
movl
mov
jl
mov
movsb
inc
lret
add
daa
lds
jno
test
dec
or
ja
cld
jg
xchg
mov
sub
in
shll
leave
sub
xchg
push
add
int3
sub
in
or
mov
and
mov
in
dec
imul
jnp
andl
and
add
add
daa
mov
movsb
jns
fwait
pusha
push
push
adcb
or
sbbb
cmp
pusha
inc
popf
pop
jne
xor
cmp
out
insb
scas
or
mov
je
imul
xlat
adc
jge
adc
mov
sbb
lock
push
test
mov
out
inc
inc
and
or
inc
xor
cld
test
lock
cmp
inc
mov
dec
add
mov
je
adc
mov
out
mov
add
xor
add
clc
ficoms
dec
lea
adc
jg
stc
xchg
fs
lods
and
sahf
jb
or
pushl
nop
rorb
and
cld
pop
jle
mov
es
and
jp
sbb
addr16
rolb
and
jmp
jp
dec
add
jg
filds
add
mov
out
push
add
cld
lsl
push
jmp
jl
add
lcall
or
cmp
movsb
cmpsb
bound
jne
dec
add
cltd
xchg
cmc
int3
aad
xchg
jo
adc
push
adc
or
loopne
dec
pop
or
pop
mov
push
mov
sub
xor
test
or
dec
gs
mov
xor
movsb
mov
mov
or
test
and
mov
in
and
bound
and
or
push
sbb
stc
jl
xchg
push
sub
xlat
or
dec
mov
lock
or
fdivrl
call
mov
add
xchg
pushf
cwtl
stos
push
push
add
mov
jle
jl
push
pop
stos
arpl
push
push
sbb
xchg
clc
je
out
clc
faddl
mov
add
dec
xor
dec
shlb
sbb
rcr
cli
cmpsl
cmc
enter
shll
fwait
pusha
fidivrl
les
mov
jmp
dec
adc
jge
inc
jb
in
push
hlt
xor
or
hlt
lcall
or
dec
aad
sti
out
sbb
std
cmc
add
aad
cmp
or
cmc
stos
push
sbb
pop
pop
dec
cli
inc
stos
mov
push
or
shll
xor
pushf
sbb
mov
xchg
pop
mov
filds
or
sub
lahf
popa
xor
cmp
sub
pushf
adc
sub
pop
mov
dec
mov
add
or
ja
xchg
stos
sub
push
out
fisttpl
aam
xchg
dec
push
xchg
cmpsb
and
fcmovne
mov
shl
or
sub
or
push
xor
or
or
lahf
push
aam
outsb
cmp
rorb
bound
les
movsl
mov
ljmp
sub
xchg
adc
sbb
mull
aad
dec
inc
sbbb
repz
jmp
imul
test
xchg
mov
mov
and
ja
cmp
dec
mov
sub
mov
xor
and
test
lret
aaa
addr16
mov
xor
and
sub
rcrb
mov
loope
out
shr
or
xlat
mov
adc
fcoml
pushf
andl
filds
lock
push
push
pop
mov
add
mov
dec
out
std
sub
sbbb
mov
pop
nop
and
adc
mov
xor
in
xchg
mov
cltd
lcall
jecxz
jne
inc
push
and
outsl
dec
mov
ret
or
leave
pusha
lea
test
or
into
les
andb
push
add
dec
add
pop
js
lahf
push
les
movsl
test
jl
add
popa
clc
cmp
sub
dec
add
ret
mov
js
rolb
cs
mov
add
pusha
lock
into
repnz
test
mov
arpl
sbb
adc
data16
and
lea
push
jb
ss
in
test
adc
xchg
fnstcw
std
pop
add
sarl
stos
in
inc
mov
orl
and
outsb
and
lcall
pop
inc
xchg
inc
loope
push
popf
bound
and
sbb
push
dec
mov
inc
adcl
cmp
movb
pushf
jmp
pop
test
dec
sbb
xchg
mov
xchg
sbb
fwait
lods
mov
rol
push
mov
cmpsl
pop
and
pop
mov
jno
nop
sbb
nop
mov
ljmp
xchg
jb
push
gs
xchg
xor
mov
mov
mov
shrl
fidivrl
lret
dec
xor
jl
mov
mov
and
nop
lds
je
mov
xor
test
xchg
jmp
sub
jl
movsb
sbb
add
gs
push
push
sbb
push
lds
jmp
daa
nop
pop
mov
lret
xor
mov
mov
sub
add
enter
sarb
je
clc
sbb
in
arpl
xchg
inc
popl
scas
outsb
push
pusha
xchg
pop
movsb
cld
cmc
jns
adc
mov
pop
mov
iret
outsb
push
or
jge
or
rorl
sub
adc
fiaddl
and
cmpsb
cmp
or
pop
sub
inc
xor
rol
sbb
cmc
mov
mov
pop
out
push
test
imul
inc
mov
loopne
mov
or
inc
adc
mov
add
fdivl
inc
push
push
outsl
push
sbb
outsb
add
std
sub
cs
xorb
test
jle
fiaddl
test
pop
repnz
jl
scas
mov
dec
sub
cmc
mov
jmp
inc
xor
pushf
loop
push
or
xchg
inc
cmp
mov
push
or
cmp
mov
or
cmp
mov
add
rolb
cmp
sbb
into
push
out
filds
add
dec
pop
sbb
cwtl
or
mov
nop
xchg
or
cmp
sbbl
lret
hlt
ljmp
lea
push
push
lea
xor
add
repnz
xor
add
in
xchg
and
sarl
inc
in
hlt
pop
add
xchg
push
mov
lcall
arpl
xor
mov
dec
hlt
jb
cli
and
inc
ds
mov
mov
fsubrl
sbb
loop
mov
lret
nop
mov
jno
jne
cwtl
stc
mov
arpl
adcb
jmp
dec
xchg
test
jg
dec
enter
mov
mov
sub
out
mov
mov
add
fnstsw
vmovupd
add
inc
inc
cmpsl
ljmp
mov
in
xchg
jno
push
in
inc
xchg
stos
sbb
xchg
ret
cwtl
cmc
cltd
imul
cmp
lcall
sbb
pop
adc
mov
add
add
dec
jl
aas
add
pushf
push
lret
xchg
cwtl
scas
cwtl
xchg
add
fisttpl
aaa
es
cltd
loopne
sub
add
mov
or
pop
lds
xchg
dec
aad
push
ljmp
mov
add
sub
icebp
mov
inc
adc
inc
lods
int3
jns
mov
scas
scas
mov
jns
out
mov
mov
xorl
aas
test
pop
adc
data16
dec
and
sub
inc
inc
lds
cwtl
jb
mov
sbb
xchg
jbe
push
fwait
adc
movb
jmp
sub
add
cs
push
fdivl
aaa
xchg
inc
fs
push
shll
mov
inc
add
mov
es
popf
cmp
and
xor
add
nop
loopne
je
faddl
mov
push
xchg
aas
movsb
sbb
push
and
and
xchg
add
lret
clc
sub
sub
leave
xor
jne
jne
push
cwtl
add
sub
rcl
roll
pop
repnz
jmp
push
adc
fwait
je
lcall
imul
inc
lret
ljmp
shr
rolb
sahf
pushf
imul
mov
pushf
dec
xchg
push
inc
mov
enter
shlb
sbb
sub
inc
lods
cmpsl
xchg
pop
testl
bound
insl
movsl
push
pop
enter
fsubs
cmp
add
mov
jl
mov
adcl
je
int
mov
adc
cmpsb
leave
shrb
stos
pop
insb
nop
dec
inc
adc
cltd
sbb
insb
sti
dec
jmp
jmp
jb
sbb
movl
enter
rcl
gs
sub
adc
jmp
movsl
mov
mov
and
or
cmp
jmp
cmpl
jge
neg
lds
pop
xor
pop
and
pop
stos
out
push
or
movsl
in
mov
ror
inc
cmp
adcb
sbb
sti
push
in
testb
roll
popa
rcrb
xlat
mov
cmc
lds
fdivs
jl
mov
ret
fdivl
sub
repz
or
xor
jp
imull
add
out
adc
mov
add
add
add
pop
into
pop
repnz
xor
xor
jmp
cmp
fs
mov
enter
pop
lods
jne
add
test
test
adc
and
adc
mov
lock
cltd
or
jae
hlt
adc
int3
mov
dec
nop
sbb
push
mov
add
pop
and
mov
add
jge
cmp
adc
gs
adc
ret
jmp
xchg
xor
sub
xor
mov
add
mov
adcb
cli
inc
mov
int3
popf
nop
cmp
addb
orb
and
hlt
or
xor
rcrl
in
repnz
cmc
popf
jle
loopne
jo
mov
xchg
scas
repz
sub
push
lahf
lods
pop
mov
fildl
cmp
sub
push
jae
stos
ret
xchg
pushf
cmp
cli
insb
cmp
mov
inc
pop
cmp
mov
jbe
cmp
add
test
pusha
in
mov
add
pop
add
lods
inc
fisubrs
cmpsb
arpl
cld
push
ss
out
push
movsb
bound
lds
pop
sub
hlt
in
imul
jo
loop
push
sbbl
or
mov
mov
aam
push
pop
jl
aam
scas
into
xor
mov
std
nop
into
mov
cwtl
push
outsl
ljmp
mov
jmp
fstl
mov
fstl
test
xchg
xchg
ds
jnp
adc
addr16
adc
adc
jmp
push
push
pop
clc
dec
xor
push
sbb
xor
or
push
sbb
push
popa
mov
and
xchg
adc
and
andb
pop
jmp
pushf
out
adc
dec
inc
movl
or
jne
cmp
mov
xchg
adc
dec
sbb
adc
pop
ret
xchg
insl
adc
ja
add
pop
adc
or
xchg
adc
push
fstps
notl
adc
fwait
std
mov
cld
push
mov
aam
push
loope
and
or
out
and
stc
cwtl
adc
and
push
ja
push
and
sbb
stc
mov
mov
mov
sbb
ret
in
mov
inc
mov
lahf
adc
aad
cmp
jle
push
je
dec
sub
dec
imull
and
out
movsb
sti
jg
ret
fcoms
cmp
dec
leave
xor
and
cltd
inc
adc
jmp
test
das
test
jae
sahf
in
mov
or
repz
fsubl
pop
ret
movsb
adc
mov
ja
mov
cs
or
into
mov
popa
adc
mov
mov
popf
jnp
cmp
and
lret
xor
add
push
inc
negl
fdivs
xor
pop
cld
add
or
stos
or
movsl
mov
fiaddl
adcl
sbb
ss
dec
jge
mov
mov
sbb
cmp
insl
int3
or
jns
inc
adc
add
incb
fistpl
push
clc
jge
enter
sbb
mov
pop
leave
sahf
or
insb
scas
fwait
add
bndstx
stos
ja
xor
test
out
inc
sbb
imul
jmp
mov
test
mov
movsl
popa
mov
sarl
jl
cld
inc
jge
mov
imul
push
xchg
sbb
push
and
add
bound
imul
or
add
or
mov
jge
dec
and
jbe
icebp
sbb
test
repz
mov
mov
jno
push
decb
arpl
push
inc
scas
test
sub
jecxz
mov
cwtl
mov
push
jo
rorl
push
add
call
or
or
push
or
push
movhps
or
xchg
loopne
adc
or
je
imul
insl
out
nop
xor
repnz
or
cmp
jo
or
dec
mov
jle
jecxz
insb
leave
push
int
dec
jno
mov
pop
ss
mov
insb
fsts
and
or
inc
mov
inc
inc
or
ja
adc
pop
lock
mov
ret
mov
mov
fs
hlt
xchg
sub
sub
dec
rolb
push
lahf
test
addr16
inc
icebp
jns
cmp
jbe
adc
xor
mov
sub
jle
out
test
rcll
addl
sub
xchg
sub
dec
fldl
push
xchg
jmp
xchg
dec
mov
leave
iret
scas
movsl
and
je
or
pop
pop
lea
jne
and
mov
xchg
mov
lcall
push
push
inc
sbb
in
call
push
xchg
lcall
push
lods
mov
mov
call
jge
add
faddp
pop
and
incl
mov
or
add
mov
xor
test
sub
mov
sahf
sbb
mov
fs
inc
sbb
push
add
bound
add
jae
jbe
pop
inc
and
sub
sub
push
sbb
lret
scas
dec
dec
repz
daa
scas
xor
dec
add
adc
repz
aam
push
jns
push
stc
pop
push
subb
inc
and
jb
or
inc
push
push
pop
filds
push
pop
add
jo
sub
out
inc
push
cwtl
xchg
xchg
test
jge
mov
jbe
lock
fidivl
aaa
inc
mov
das
mov
push
movsl
lcall
inc
xchg
xchg
mov
pcmpgtb
lret
adc
and
inc
sub
cmpsl
cmp
xor
daa
movsl
add
leave
cli
stc
or
xlat
xchg
pop
fistl
xchg
push
aad
push
cmp
jne
push
movsl
xchg
aaa
mov
outsb
imul
fwait
or
inc
fstpt
pop
push
out
add
inc
hlt
jl
into
or
inc
insb
or
loopne
sbb
push
cwtl
sub
imul
mov
xchg
mov
push
imul
jne
scas
or
imulb
int3
out
mov
or
into
shll
push
jecxz
aaa
mov
lods
sbb
adc
sarb
jbe
add
add
add
mov
add
mov
or
mov
mov
push
xchg
mov
mov
mov
mov
jmp
or
aam
and
adc
ret
call
adc
fbld
xchg
lods
and
adc
dec
mov
vpmadcsswd
jge
and
mov
dec
pop
into
pop
add
and
or
add
add
sbb
out
lcall
cmpsl
test
mov
lcall
movsl
mov
push
mov
outsb
shlb
hlt
clc
xor
aaa
mov
mov
and
adc
inc
add
popf
addr16
sub
mov
push
xor
ret
rcl
pop
push
adc
inc
shrb
pop
dec
in
movb
lcall
dec
push
inc
rcrb
mov
shlb
imul
lea
mov
je
xor
pop
pop
xchg
fistps
das
shll
xchg
mov
xchg
and
or
adc
std
ret
lods
mov
and
rclb
adc
and
pop
rcrb
and
cli
call
decb
sub
push
jmp
hlt
aas
dec
scas
adc
pop
or
sbb
fcmovb
or
jecxz
fiaddl
inc
push
pushf
dec
or
adc
lcall
push
and
cmp
cwtl
dec
dec
mov
or
mov
mov
xor
movq
xlat
repz
cmp
aam
add
xchg
or
xor
sbb
jl
cltd
outsb
fisubs
inc
imul
xor
lds
cwtl
push
fsubl
add
cs
outsb
mov
fdivs
push
inc
or
sbb
pop
xor
mov
push
or
dec
push
inc
incb
je
shlb
mov
push
sub
clc
cltd
adc
push
lods
mov
insb
jge
mov
mov
adc
out
xchg
cmp
ljmp
mov
inc
mov
inc
adc
or
cmp
je
sub
cmp
sbb
and
shlb
xchg
cmp
je
sbb
cmpsb
shlb
sbb
pop
and
call
jmp
cmpsb
arpl
or
and
xchg
and
mov
fistl
and
push
push
pop
mov
cmpsl
mov
ret
je
sbb
sbb
cmp
and
or
and
jmp
mov
adc
ret
xor
dec
jg
leave
inc
sub
mov
jno
jge
js
leave
add
inc
mov
mov
es
pop
jle
in
pop
sbb
inc
cld
jb
cmp
ja
add
cmp
add
enter
jne
dec
jne
xor
add
sub
xor
jb
xor
fnstenv
mov
lea
test
or
outsb
xchg
shll
push
pop
cmp
aad
jp
jb
or
mov
dec
cmp
imulb
mov
sbb
hlt
or
jmp
mov
push
rcrb
jne
inc
pop
inc
sbb
es
push
loope
push
add
test
or
or
jl
jge
jmp
push
xchg
std
and
mov
lahf
and
mov
mov
je
xor
lock
call
sub
or
or
data16
bound
pop
push
loopne
lret
pop
adc
out
or
in
call
idivl
pop
loopne
loopne
fs
or
rcrl
shrb
mov
mov
or
aaa
or
add
fiadds
and
cwtl
adc
in
sub
mov
popa
mov
rcll
test
mov
rcrb
aas
jg
or
xchg
sub
cmp
add
cmp
cmp
fs
shrb
push
cmp
pop
push
xchg
mov
inc
push
cmp
push
lds
test
sbb
data16
or
mov
outsb
movsl
insl
gs
xor
jne
insl
and
call
test
outsl
adc
sti
add
gs
cwtl
mov
mov
shl
push
rcll
mov
mov
sbb
push
or
pusha
jecxz
pop
fmul
xchg
fldl
dec
add
push
and
add
imul
dec
jecxz
pop
pop
popa
pop
add
pop
fdivrl
mov
push
mov
adc
and
xchg
addr16
fadds
jno
xchg
lcall
pop
outsl
xor
mov
xor
pushf
ror
xor
ljmp
movswl
push
sbb
daa
hlt
sub
sbbl
fisubrl
dec
sub
push
shr
rorl
pop
pop
ror
pop
ljmp
in
or
mov
dec
int3
sbb
pop
test
out
lds
es
or
lret
pop
dec
xor
adc
sub
je
jne
push
add
out
pushl
out
sbb
xchg
repnz
test
push
ss
daa
hlt
xor
repz
mov
div
es
xchg
repnz
lcall
mov
scas
or
mov
shrb
or
outsl
mov
pop
fucomp
in
test
jp
hlt
rorb
cld
aam
dec
push
negl
mov
xchg
mov
xor
mov
adc
mov
inc
mov
push
out
push
adc
jge
je
imul
or
loop
add
jl
or
dec
mov
sbb
test
call
lret
imul
dec
jge
and
xor
lock
cmp
xchg
mov
stc
test
xor
mov
xchg
mov
ret
je
mov
mov
mov
popf
dec
out
push
ficompl
in
mov
je
fildll
mulb
add
shlb
sub
cmpsl
mov
shll
xchg
divb
xor
xor
and
jecxz
pop
jnp
push
jbe
adc
sub
or
cmp
or
sbb
imul
sarb
jns
bound
enter
mov
pop
sub
mov
les
sub
mov
daa
mov
cmpl
add
and
pop
or
cmp
fwait
push
mov
call
inc
xchg
scas
roll
addb
lcall
inc
ljmp
mov
movb
rcrl
add
sbb
inc
xchg
test
stos
or
jmp
lock
mov
mov
jae
inc
xor
stos
daa
inc
push
sbb
negb
lds
mov
adcb
mov
add
cmp
testl
inc
add
xor
dec
stos
cwtl
andb
icebp
addl
push
mov
shll
cmp
subl
push
fiaddl
or
or
push
push
rcl
aam
call
xchg
stos
movsl
or
test
mov
cmp
push
sub
mov
daa
cmpsl
sbb
dec
fucomip
adc
loopne
cld
mov
xor
rolb
fwait
cmp
int
inc
movsl
sbb
fcompl
stc
int3
pop
push
xor
decl
mov
rcll
mov
sub
daa
push
jb
gs
push
mov
loope
mov
xchg
imul
lea
jecxz
je
dec
shrl
nop
les
pop
push
mov
mov
cli
push
cmp
and
enter
popa
insb
xchg
add
fwait
push
mov
sti
movsl
dec
push
push
jle
mov
inc
and
outsl
push
dec
sub
aaa
jecxz
pushf
jmp
mov
lods
mov
cmp
aas
incb
clc
inc
fdivrl
fstps
inc
add
inc
fdivs
adc
xchg
mov
mov
subl
jge
sbb
movl
push
insb
jle
xchg
cltd
repz
rorl
push
jmp
popf
lret
scas
popl
lock
repz
jg
adc
nop
les
call
jp
je
or
lret
mov
or
or
mov
dec
outsl
imul
inc
dec
push
pusha
push
test
jae
jo
pop
and
xor
ss
mov
lea
push
lds
fsts
cmp
cmp
test
lcall
inc
xor
cmpsl
add
lock
or
cli
add
test
mov
cmp
testl
sarb
jge
push
xor
inc
sbb
jne
add
mov
mov
add
add
xor
mov
sbb
insl
and
jle
pusha
jmp
dec
push
dec
xor
mov
rorl
push
pop
add
xchg
in
dec
mov
ja
push
mov
and
xor
sub
shrl
pop
and
push
loop
fdivs
or
punpckhwd
call
das
inc
out
adc
imul
jecxz
mov
insb
out
and
pop
es
out
inc
enter
sub
cmpb
cltd
mov
mov
sub
insb
bnd
mov
popa
fcoms
decl
into
inc
xchg
or
cmpsb
movsb
popf
sub
xlat
sub
ret
cmpsb
ret
mov
imul
dec
mov
lds
adc
dec
add
pop
mov
sar
or
out
fmuls
add
in
inc
test
jl
out
test
and
in
cmp
sbb
fcoml
mov
sbb
jmp
cltd
jp
dec
mov
mov
mov
test
fsubl
stc
pusha
adc
adc
fsubl
imul
in
aad
bound
movsb
aas
clc
ret
xchg
wbinvd
fistps
push
jno
fstpl
push
clc
mov
push
sbb
push
sbb
mov
iret
ficoms
and
push
sub
incl
cld
addr16
idiv
sub
andl
mov
int3
loope
in
test
gs
and
push
push
cltd
js
je
lds
ja
inc
xchg
in
ds
es
ss
je
xchg
sub
adc
xor
push
xchg
pop
fsub
mov
push
insl
icebp
cs
inc
pop
lea
mov
add
cmp
jne
clc
es
push
enter
mov
mov
andb
dec
rsqrtps
pop
rcrb
xor
adc
cmp
adc
mov
xor
sti
sbb
leave
mov
movsb
test
shl
mov
mov
test
sub
sub
add
mov
cmp
test
dec
mov
and
out
jmp
stc
aaa
push
movsl
cld
push
adc
inc
xchg
cmpsb
or
lds
mov
movsl
mov
ljmp
and
push
int3
imul
mov
dec
xor
das
jecxz
xor
imul
fistps
clc
iret
leave
sti
jge
arpl
add
sbb
sbb
sbb
jns
sbb
jne
fisubs
out
xchg
daa
sbb
xchg
inc
and
or
pop
dec
xor
add
add
dec
cmp
jne
lea
in
xor
jne
mov
inc
das
je
and
push
push
js
je
sub
fisttpll
sub
jae
add
cmp
mov
rorb
push
push
test
mov
sub
or
enter
inc
insb
stc
rorb
sarl
les
xchg
sbb
jno
or
and
cmp
adc
mov
ret
jl
out
clc
les
add
push
mov
cmp
cmp
or
mov
loopne
scas
dec
fs
mov
dec
scas
shlb
fldcw
cmp
leave
cld
fstps
add
xchg
jno
mov
dec
in
pop
mov
inc
mov
or
fcoms
fidivl
and
adc
fdivr
mov
inc
pop
or
test
movsb
fbld
and
sub
push
and
and
sub
inc
lock
popf
push
push
out
int
sbb
adc
mov
sbb
in
mov
or
or
sub
jmp
mov
jne
pop
pop
lods
outsb
test
mov
lret
jo
into
loope
sbb
loopne
jne
push
inc
fsubrs
jb
loop
mov
push
cmp
cli
add
jne
push
push
insl
dec
into
sub
jno
in
call
int
xor
cmp
filds
jae
xchg
lea
sub
pop
push
lcall
adc
jne
xchg
add
lock
sub
push
dec
lahf
adc
movsl
add
adc
inc
jmp
movb
or
and
inc
jne
lcall
enter
mov
lea
cmpsl
testl
loopne
movl
adc
lods
ja
inc
xchg
adc
in
popf
sub
xor
stos
dec
push
or
mov
push
call
lock
push
jae
or
in
ljmp
sarb
push
rcrb
push
pop
cli
inc
mov
mov
dec
and
xchg
dec
inc
sahf
movsl
push
mov
mov
movsb
inc
mov
add
adc
or
inc
mov
sub
adc
movsb
xchg
dec
cmp
push
xor
push
xchg
aas
test
xchg
push
rcrl
push
dec
and
cmp
jmp
push
jb
lea
adcb
leave
dec
mov
jns
push
adc
xor
pop
push
adc
test
jns
and
mov
jne
pop
mov
sub
fs
shl
push
mov
aam
pop
adc
adcb
in
iret
test
lods
push
cmp
cmp
movzbw
daa
subl
push
mov
pop
pop
sub
dec
xchg
mov
push
jb
mov
popa
shl
jne
sub
sarl
jne
pop
and
into
div
inc
sub
xor
dec
mov
lds
mov
pushf
cmp
lds
xor
and
cmp
inc
popf
popf
popf
popf
dec
dec
push
push
popf
popf
popf
popf
pop
pop
pusha
fs
popf
popf
popf
push
popf
popf
popf
js
addb
nop
xchg
popf
popf
popf
popf
cwtl
pushf
mov
popf
test
mov
popf
popf
popf
popf
mov
popf
popf
popf
enter
popf
popf
popf
popf
fcomp
loopne
popf
popf
popf
popf
call
mov
repz
into
into
into
or
adc
into
into
into
sbb
and
into
into
into
sub
xor
into
into
into
cmp
inc
into
into
into
into
dec
dec
push
push
into
into
into
into
pop
pop
pusha
fs
into
into
into
push
into
into
into
js
addb
nop
xchg
into
into
into
into
cwtl
pushf
mov
into
test
mov
into
into
into
into
mov
into
into
into
enter
into
into
into
into
fcomp
loopne
into
into
into
into
call
clc
cld
add
mov
mov
hlt
hlt
hlt
hlt
mov
mov
hlt
hlt
hlt
hlt
mov
mov
hlt
hlt
hlt
hlt
ja
mov
hlt
hlt
popl
mov
pop
add
fwait
mov
sbb
addr16
insl
sub
push
pop
dec
movsl
or
jmp
push
gs
lock
or
mov
cli
or
or
sarb
in
hlt
pop
inc
jmp
into
sbb
xor
push
inc
dec
cmp
je
push
aam
mov
jne
inc
ljmp
push
jbe
mov
xchg
lods
insl
xlat
imul
add
hlt
xor
push
lret
movb
ds
mov
xchg
sbbl
repz
add
push
sarb
je
sub
jp
xchg
push
bound
mov
cmp
jne
data16
push
aad
jne
dec
sub
sbb
clc
lds
inc
cli
movlps
cld
movsl
and
jmp
or
fists
adc
andl
cmpsb
or
mov
pop
adc
xor
data16
je
fnstcw
jmp
jno
cmpsl
inc
sub
outsl
pop
xchg
cmp
sbb
test
jle
call
fcomps
mov
pop
and
sbb
inc
xlat
aad
sbb
incl
sub
adc
fnstcw
add
lret
mov
mov
mov
and
xor
sbb
xchg
in
jo
add
sbb
adc
jmp
add
add
cltd
outsl
outsb
pushf
ds
in
testl
and
ror
ficompl
sbb
inc
xor
push
mov
lret
out
fdivrl
ljmp
add
ret
sbb
dec
aam
scas
adc
insl
add
jmp
sub
prefetcht2
mov
sub
push
jne
mov
mov
sbb
loopne
xor
sub
push
mov
mov
mov
pop
xchg
or
add
pop
out
and
bound
adc
shrb
add
sahf
add
je
mov
sub
add
sbb
adc
mov
mov
stos
add
add
clc
xchg
xor
ja
popa
push
out
mov
les
hlt
push
xor
xchg
add
add
fs
xor
fdivrl
jmp
rclb
mov
sub
xor
adc
push
jno
repz
test
add
add
sbb
in
insl
push
mov
hlt
movl
imul
std
in
leave
mov
add
add
fldcw
arpl
or
pop
adc
in
pusha
aad
jno
mov
add
add
aam
dec
std
test
movsl
cli
test
xor
leave
mov
lods
jecxz
add
add
jne
filds
or
shrl
cmp
ficoms
push
xlat
enter
mov
add
mov
and
mov
cltd
xchg
mov
mov
or
or
and
or
add
adc
stos
sbb
data16
inc
fdivl
jno
add
aad
mov
mov
pop
mov
push
movsl
in
lahf
xor
mov
js
stc
add
add
test
xchg
sbb
push
sub
insb
fs
add
add
add
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
add
add
cmc
fnstenv
adc
mov
mov
bound
ficoml
gs
aam
add
add
pop
popa
mov
into
cmp
mov
inc
movsl
filds
add
or
xchg
fadd
shll
jmp
outsb
xor
add
add
lods
sarb
add
in
add
pop
dec
or
cmp
add
daa
add
add
adc
or
and
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
xchg
add
add
cwtl
shlb
pop
cmp
mov
cmp
lods
insb
mov
cmpl
or
mov
lcall
ljmp
add
add
fildl
push
fdivl
or
test
fs
ds
or
or
push
in
decl
xchg
daa
add
add
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
imul
xorb
add
ss
sbb
push
imul
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
add
add
mov
call
xchg
shll
push
repnz
addr16
cmpsb
fldl
add
add
mov
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
adc
add
mov
jns
imul
andl
shrb
ss
push
xchg
ja
int3
add
mov
add
das
es
lds
or
mov
pop
mov
add
mov
cmpsl
call
ret
shlb
sbb
ret
repnz
xorb
in
pushf
mov
test
ss
jmp
add
add
addr16
jb
push
add
adc
mov
jnp
sbb
xchg
or
add
add
out
fdivrl
fisttpl
aam
roll
clc
mov
push
int
mov
mul
add
dec
add
outsl
ja
mov
out
jo
ud0
cmp
data16
add
lcall
clc
sar
imul
add
insb
push
js
or
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
imul
add
dec
push
scas
fcompl
fldenv
filds
cmp
aaa
push
scas
mov
fidivrs
mov
jmp
add
mov
xor
mov
add
push
xlat
int
push
ficoms
add
add
fldenv
jp,pn
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
add
jo
and
sub
jb
popa
je
and
and
dec
dec
jae
jb
outsb
je
arpl
addr16
pop
push
arpl
add
nop
mov
fs
push
sub
pop
xor
sub
mov
jae
imul
outsb
ss
movsl
data16
outsl
jae
test
stc
lahf
gs
insl
bound
imul
outsb
outsl
sub
inc
lock
push
add
icebp
or
inc
gs
push
cmp
add
jb
and
cmpsb
pop
rolb
rolb
fbstp
outsb
mov
pop
aam
push
imul
jns
or
je
les
lock
imul
and
jae
test
arpl
outsl
imul
inc
scas
popaw
jne
sti
xchg
inc
mov
and
or
bound
mov
nop
sbb
inc
jb
inc
jae
les
shl
adc
sub
cmp
jo
imul
addr16
lea
jo
popa
js
aas
insl
push
int
insw
and
sub
jns
mov
gs
push
dec
dec
inc
dec
push
mov
cmp
inc
sub
and
push
sub
lds
das
sub
pop
outsb
or
rorl
inc
inc
dec
inc
dec
dec
push
inc
dec
dec
inc
lea
outsl
clc
insb
ficoms
lcall
into
and
push
dec
mov
push
outsl
gs
push
pop
sarl
push
popa
inc
int
sub
je
repz
lock
jb
lods
push
cmc
add
addr16
mov
pop
stc
sub
ficoms
lret
inc
addb
fucomi
fs
lods
jnp
add
int
and
push
jae
mov
sbb
test
mov
inc
inc
popa
data16
xor
in
and
mov
mov
xor
pop
mov
gs
stc
fldenv
and
addb
inc
inc
sub
mov
sub
outsb
sar
push
testl
jg
sbb
mov
xor
dec
mov
or
sahf
xchg
dec
pusha
jne
mov
aaa
cmp
push
pushf
loop
or
imul
xor
fs
cmp
int
sub
xor
pop
pusha
sub
cmpsl
jo
and
test
lds
mov
daa
imul
je
and
pop
add
aas
jb
loop
lds
cmc
pop
dec
inc
inc
push
aas
pop
insb
add
inc
push
push
push
insb
aad
inc
dec
inc
cmp
outsl
lea
or
gs
pop
dec
stos
pop
mov
push
push
inc
testb
mov
cmp
jp
stos
mov
lcall
xchg
or
scas
add
iret
mov
push
inc
imul
arpl
xor
push
fcoml
mov
jne
arpl
shrl
mov
and
xorb
outsb
js
cwtl
mov
outsb
cmc
pop
imulb
shll
sub
xor
insb
push
sbb
mov
cmp
inc
sub
dec
xchg
adc
fildll
rorb
test
cmp
loope
and
push
jno
cmp
push
xor
jae
pop
call
pusha
imul
gs
imul
cmpl
insb
jae
and
mov
xor
dec
les
xor
pop
jne
pushf
adc
movzbl
and
orl
push
outsl
data16
scas
inc
mov
jne
xor
repz
push
out
lcall
pop
add
push
imul
fcmovnb
popa
xor
jp
arpl
pop
mov
xor
gs
fidivrl
dec
xor
and
popa
xor
pop
in
sbb
jne
add
and
push
adc
add
cmp
add
add
add
xor
push
cmp
pop
or
aaa
xor
push
push
pop
subl
sbbb
js
xchg
loope
or
or
or
cmp
mov
jne
insb
insl
push
lahf
pop
sub
jo
arpl
popa
ss
and
ss
and
jbe
out
inc
gs
stos
xchg
ja
jg
dec
pop
arpl
das
xor
inc
add
jge
and
shlb
cmc
les
adc
rclb
or
xor
inc
xchg
outsl
sub
dec
cmp
push
gs
or
pop
popa
and
cbtw
imul
sub
mov
inc
jne
lods
and
xor
cs
dec
imul
dec
fadds
push
jne
fistps
lcall
pop
bound
into
mov
xchg
xor
daa
jno
mov
cs
sub
mov
gs
sub
mov
test
pop
xchg
inc
cs
es
loopne
xor
dec
pop
push
scas
gs
daa
lret
cmp
data16
jo
dec
inc
sbb
adc
push
and
pop
fstpt
ret
inc
outsb
and
outsb
es
or
shl
test
xor
frstor
cli
and
in
add
fwait
add
cmp
inc
adc
add
sub
jb
fisubrs
jae
dec
cmc
mov
pop
mov
mov
sub
cmpsb
in
or
pushf
imul
ja
fidivl
inc
std
sbb
sarl
ljmp
xor
dec
ret
sub
gs
xchg
adc
xchg
icebp
test
pop
mov
enter
lret
loope
ja
outsl
int
into
sub
fsub
daa
rcrb
inc
dec
insl
push
loope
inc
dec
mov
push
inc
dec
inc
inc
push
cmp
xchg
lock
push
push
xor
jl
lds
xchg
loopne
aas
dec
jae
xor
push
push
pop
repnz
or
xor
or
dec
inc
push
dec
dec
mov
cwtl
sbb
sub
add
popa
add
add
cmp
inc
cmp
dec
inc
dec
or
xchg
push
dec
inc
xor
in
dec
push
inc
push
pop
mov
shll
pop
dec
sbb
test
mov
cmp
and
je
cmpsl
shlb
and
cltd
mov
cmove
lret
nop
fs
dec
jbe
sub
mov
sub
arpl
imul
fstps
sbb
or
roll
push
cmp
decb
dec
inc
imul
inc
add
sbb
cmp
push
jne
sub
mov
pop
inc
imul
je
sahf
aaa
and
js
mov
lret
xor
dec
data16
insl
sbb
lock
jno
ss
testl
fmull
sbb
mov
pop
insb
jne
jg
xor
pusha
adc
add
js
lea
jecxz
fbld
mov
cmp
cmp
and
push
dec
outsl
mov
out
arpl
sub
cmp
gs
aas
sbb
aaa
fmuls
mov
cld
imul
push
lahf
fs
or
cmp
jae
movsl
mov
arpl
addr16
scas
and
imul
jns
jge
aam
xor
mov
add
es
adc
int3
shr
cmpsb
fldt
daa
fs
imul
shrl
es
sbb
xor
xchg
nop
xchg
ja
addr16
jge
push
inc
out
xor
jbe
pushf
cmpsb
add
pop
add
add
add
js
jle
sbbl
inc
push
push
lea
or
inc
pop
pop
cmp
imul
dec
or
cwtl
mov
xchg
popf
mov
mov
mov
insl
xlat
mov
sarl
pusha
sbb
pop
inc
movsb
leave
popa
daa
fnstcw
lret
dec
xor
iret
inc
arpl
sbb
inc
cmp
shrb
push
jb
push
gs
fsubs
outsl
imul
xor
inc
outsl
imul
bound
fsubrs
sbb
negl
mov
xor
jne
gs
cwtl
dec
adc
mov
jp
and
jb
xchg
int3
jne
mov
in
inc
nop
inc
fcomip
fs
mov
inc
das
mov
jne
jb
xchg
roll
dec
aam
out
mov
mov
je
inc
sbb
test
xor
cmp
scas
pop
jno
jge
inc
jne
cmp
xchg
sbb
mov
fildl
out
and
inc
movl
ficomps
lahf
sbb
add
jle
mov
outsb
adc
scas
ret
nop
jne
sahf
test
and
pop
mov
out
nop
cmp
insl
outsl
sbb
cmp
pusha
aad
inc
cmp
xor
fadd
cld
out
mov
popa
fidivrs
mov
and
mov
push
xchg
dec
mov
or
and
push
cmp
and
jp
sub
popa
push
shll
fsubrl
in
addr16
sbb
je
mov
inc
arpl
jp
dec
test
pop
in
cmp
add
sub
jns
ret
jae
jbe
mov
mov
jle
and
xchg
pushf
ljmp
aaa
jns
and
jb
mov
in
rep
pop
mov
push
addr16
outsl
pop
pop
es
mov
jbe
xlat
mov
pop
repz
fs
test
arpl
popf
pop
jb
out
popa
sahf
sti
cmp
clc
and
mov
cmp
imul
pop
or
push
jp
repz
mov
push
pop
addr16
push
shrl
jns
and
pop
imul
out
ss
aaa
sbb
inc
push
iret
sbb
test
fidivrs
sahf
insb
inc
outsb
imul
aam
int3
or
pushf
std
dec
popa
data16
pop
pop
inc
fcmovnb
cli
jae
xchg
fldenv
aad
jbe
mov
ja
jb
imul
int3
jns
popa
push
rsqrtps
test
push
mov
jno
gs
daa
fimull
movsb
dec
xor
ss
mov
xchg
fisttpl
das
ret
fdivl
fwait
mov
fcmovu
pop
inc
aam
je
je
jae
icebp
xor
mov
insb
imul
ja
jae
cmpsl
jecxz
push
loopne
ss
xchg
stos
ljmp
cld
xor
in
and
push
jmp
xchg
mov
sarb
outsl
adcl
push
movl
dec
dec
dec
inc
add
scas
gs
dec
cmp
cmp
xchg
fs
sub
repz
mov
jns
fs
dec
aam
das
dec
lret
adc
or
push
mov
pop
lret
xchg
dec
arpl
lret
sbb
push
mov
cmp
adc
jne
iret
cmp
outsb
setb
movsb
arpl
dec
mov
mov
xor
imul
iret
pop
xchg
cmpsb
movsl
cmpsl
popa
jmp
fidivrs
ds
cmpsl
in
sub
fs
adc
inc
pop
sub
imul
push
fs
lock
jne
xchg
dec
in
xchg
arpl
push
jne
out
sarl
cmpsl
repz
loope
jmp
adc
insl
les
sti
push
add
mov
jp
gs
mov
insb
int3
pop
lods
scas
fidivrl
lods
sahf
hlt
outsb
adc
and
movsl
in
mov
pop
jo
mov
fstpl
jp
adc
add
push
ja
shll
test
rcll
ja
sub
mov
dec
lcall
mov
je
cmp
cmp
mov
fbstp
xor
fsub
fcomps
push
xchg
sbb
scas
jmp
ret
out
jne
adc
sbb
orb
cmpb
fdivl
xor
sub
xor
test
inc
sti
jmp
aad
mov
dec
xor
aas
add
mov
cmp
pushf
fs
pop
or
inc
fisttps
insl
mov
push
mov
mov
xlat
xor
pop
leave
jb
xor
test
std
idivb
jle
dec
add
xchg
mov
scas
xchg
sub
and
insl
jno
pop
out
or
dec
push
push
push
dec
cltd
add
cltd
iret
insb
push
test
xor
loope
mov
hlt
xchg
dec
stos
and
lock
lods
jecxz
xor
fdivrs
inc
outsl
jns
test
imul
insb
jae
in
xor
adc
fists
jmp
outsl
jo
insb
pop
or
dec
sbb
loop
inc
or
cmpl
pop
pop
pusha
push
push
dec
push
add
dec
inc
daa
adc
iret
fidivrl
or
sbb
cmp
jnp
sbb
mull
clc
inc
into
mov
fmull
pop
lock
rorb
inc
insb
stos
addr16
fmull
dec
repz
aaa
dec
jb
push
sub
mov
lock
add
push
inc
or
xchg
inc
pop
cmp
insb
outsl
jns
call
or
jae
jae
add
and
xor
and
fiadds
sub
nop
dec
daa
mov
jb
mov
aaa
push
cmp
inc
in
fs
fisttpl
adc
into
mov
cmp
push
adc
outsb
adc
push
xchg
cs
stos
inc
push
push
or
and
jge
mov
lods
in
int
movsl
mov
insb
pop
sub
lea
mov
arpl
push
scas
dec
push
inc
xor
outsb
test
insl
push
pop
dec
mov
fisttpll
inc
pop
pop
jecxz,pn
mov
or
test
xor
push
cs
pop
mov
sub
and
cmp
cmp
mov
jbe
insl
lods
sbb
fidivs
adc
adc
jg
sub
xchg
pop
imull
sub
lahf
sub
cmp
cmp
sbb
inc
arpl
adc
stos
insb
arpl
gs
cmc
xor
ja
dec
lcall
leave
test
jae
push
push
pop
push
add
inc
xchg
xorl
outsb
or
fs
int
and
jge
xchg
sub
add
cmpsl
testl
adc
fs
in
pop
add
cmpsl
jo
outsl
addr16
xlat
dec
stc
dec
dec
inc
push
sahf
shl
fwait
inc
cmpsl
lahf
push
mov
lock
iret
and
jge
pop
popa
bound
roll
mov
mov
add
lahf
in
push
jnp
add
je
xchg
pop
sub
sub
sub
das
xor
sbb
mov
push
das
das
jae
jns
mov
iret
xchg
or
add
push
dec
inc
pop
add
xchg
sbb
or
sub
lds
repz
imul
aas
iret
repz
rol
cmp
cmp
cld
adc
and
xor
jns
jg
push
xchg
pushf
jecxz
out
add
iret
jecxz
xchg
inc
pop
pop
nop
cmp
aas
cwtl
mov
shrb
sub
call
stc
out
clc
xor
sub
out
out
int3
in
xor
xchg
cmp
push
jns
mov
cmp
jns
icebp
push
and
loope
out
fadds
sub
sahf
out
dec
fs
js
jg
loopne
xor
jp
jns
fs
mov
lret
jno
pushf
and
dec
and
aas
mov
js
lcall
es
dec
es
repz
mov
iret
int3
fsubrs
iret
aas
pop
sbb
jo
push
je
mov
in
or
sub
lahf
out
xchg
pop
je
sahf
jg
out
mov
jg
add
or
or
sub
cld
repz
inc
je
nop
or
into
repz
fsubrs
push
xchg
dec
sub
stc
jns
push
sub
andb
in
hlt
sbb
xor
xchg
push
sub
outsl
add
sbb
cmp
add
push
xchg
push
data16
imul
mov
and
gs
push
dec
sub
and
out
cwtl
dec
inc
sub
jne
push
jns
xchg
or
insl
jae
push
lods
xchg
sbb
inc
insb
js
repnz
and
daa
jg
push
inc
es
movsb
dec
cmp
sub
jne
rorl
sub
data16
dec
sti
push
outsl
push
outsl
outsl
dec
mov
insb
mov
daa
cmpsb
inc
jae
push
jb
imul
fwait
aam
mov
scas
es
hlt
jg
or
cmp
pop
xchg
sbb
adc
mov
jns
sub
imul
fs
and
negl
cmp
jb
fisubl
cs
test
in
outsl
insb
xor
inc
outsb
mov
repnz
mov
sti
pop
popf
mov
pop
in
lret
scas
ss
push
jo
call
imul
fnstcw
jnp
xor
pop
test
push
pop
sarl
push
pushf
inc
dec
dec
jo
aaa
clc
test
push
push
xor
and
lahf
ds
test
push
pop
jne
dec
xor
mov
xchg
dec
out
mov
xchg
imul
or
outsl
jae
inc
sub
xchg
xlat
movsb
mov
jno
xor
or
pop
adc
sub
adc
mov
jmp
add
gs
inc
dec
inc
push
pop
inc
sub
mov
je
xor
or
xor
test
add
in
mov
push
outsl
jno
xchg
insl
outsl
add
in
mov
idivl
icebp
cltd
push
sub
jnp
inc
push
nop
xchg
lret
outsb
js
lds
out
mov
inc
jl
push
stos
cmp
mov
popf
or
shll
mov
jne
mov
aad
insl
lret
imul
adc
movaps
outsb
cwtl
pop
leave
xor
sahf
and
loop
in
sub
xlat
xor
dec
pop
mov
inc
xchg
inc
mov
mov
inc
push
mov
out
into
cmp
mov
xchg
xchg
movsl
test
iret
fcmovu
js
fsubs
push
inc
in
dec
jo
mov
imul
xchg
jo
popa
dec
mov
xor
out
and
mov
mov
outsl
insl
cmp
jmp
sbb
je
push
nop
outsb
push
imul
mov
cmp
bound
or
cmp
cmp
imul
dec
scas
jge
nop
adcb
xor
imul
lahf
lret
sbb
shlb
jb
pop
pop
pop
cmp
icebp
ljmp
add
sub
insb
imul
bound
dec
dec
popf
cmp
ret
iret
outsl
stos
test
inc
inc
inc
cmpsl
scas
mov
cmp
add
jg
scas
mov
pop
adc
insb
add
cmp
push
lcall
or
xor
jb
cmpsl
xchg
push
pop
xor
into
push
ficoms
dec
mov
push
add
push
inc
dec
push
dec
dec
inc
dec
inc
sqrtps
push
bound
push
nop
push
imul
dec
jbe
cmpsl
outsb
adc
ja
outsl
add
imul
pop
dec
shrl
cmp
imul
jmp
arpl
xor
mov
idivl
dec
js
lret
dec
dec
pop
lea
mov
pop
cwtl
in
insb
popf
mov
lret
add
xor
dec
or
and
pop
adc
es
adc
test
mov
jp
jp
adcb
cmc
ja
inc
or
push
test
dec
mov
and
orl
pushf
mov
sysexit
push
jo
inc
xlat
xchg
xor
imul
and
insl
insl
data16
jo
test
xor
adc
push
dec
push
dec
adc
xor
or
add
test
dec
pop
fidivrl
lock
fwait
xchg
lods
and
outsb
arpl
xchg
xor
imul
cmp
jp
popa
xchg
pop
mov
inc
gs
addr16
dec
sub
cmp
push
inc
dec
gs
and
mov
jno
fs
stos
cmpsb
mov
roll
mov
inc
and
roll
add
xchg
ja
xor
push
mov
enter
pop
pop
or
push
add
push
sub
pop
dec
mov
test
cltd
loop
jmp
call
jo
cwtl
cltd
cltd
ret
and
jmp
add
adc
ljmp
out
lcall
add
adc
push
in
xchg
rol
pop
popf
add
cmp
fdivrl
adc
mov
lcall
int
xor
test
fwait
and
pushf
mov
add
arpl
outsb
sbb
adc
lcall
add
xchg
lret
iret
data16
gs
repz
adc
shl
leave
repz
repz
mov
sahf
fwait
cltd
sahf
and
bound
stos
pop
adc
popf
repz
lret
loop
cmp
mov
mov
sbb
adc
inc
rclb
pop
jnp
adc
and
mov
mov
jl
add
leave
iret
lret
push
mov
cli
hlt
std
movsl
aad
mov
jge
jno
pop
fadds
xor
enter
add
shlb
ja
jno
addr16
in
leave
jmp
cli
fdivr
std
jmp
ljmp
in
cld
jo
add
lock
cltd
aad
or
std
aad
sti
jmp
jmp
out
ljmp
call
repnz
adc
lock
clc
cli
jmp
in
cltd
dec
dec
pusha
popa
dec
adc
sbb
push
bound
ret
bound
xchg
sbb
push
jne
pop
push
sub
push
loopne
mov
sbbb
jno
scas
repz
dec
cmc
pop
insl
add
adc
jnp
jno
aas
or
fs
jo
repz
cltd
mov
sbbl
dec
ljmp
push
xor
repnz
push
cmp
xchg
push
lock
es
sbb
jae,pn
mov
es
arpl
stc
adc
mov
insl
popa
testb
popa
arpl
sub
dec
mov
sub
xor
repz
mov
xor
std
push
add
outsb
push
jp
jo
push
xchg
mov
aaa
add
cs
xor
pushf
hlt
add
mov
sbb
outsb
mov
xchg
cmp
or
jo
sub
scas
mov
inc
or
outsl
test
movsl
std
push
push
pop
inc
inc
inc
daa
cwtl
repnz
js,pn
repnz
imulb
dec
sbb
and
push
add
mov
and
fcmovne
lret
push
jae
sarl
pusha
daa
dec
jle
bound
lods
sbb
mov
push
mov
jo
je
daa
inc
fsubl
sub
mov
push
sub
push
and
insl
add
jo
mov
jne
xchg
cwtl
mov
imul
lret
pop
cmp
jae
dec
cmp
xor
and
lahf
xchg
dec
test
xchg
mov
insb
repnz
mov
jb
imul
pop
or
sub
xor
jns
sub
fs
cmp
pop
fnsave
push
leave
inc
lock
dec
add
out
jg
push
pusha
stc
mov
add
xchg
sub
mov
ss
add
mov
lahf
call
dec
sub
loopne
pusha
add
mov
in
shll
scas
xor
add
mov
and
std
int3
inc
fs
mov
pusha
pop
or
jo
pop
repz
jl
cmp
icebp
icebp
sub
adc
outsb
jb
or
inc
loopne
xor
lock
mov
add
ret
cmp
dec
inc
dec
push
add
cld
jge
mov
loop
xor
leave
and
mov
out
inc
enter
inc
adc
sub
int3
cmp
les
int
fs
pop
mov
stos
add
cmpsb
movsb
int
lahf
jg
stos
iret
repz
pusha
pop
nop
inc
ljmp
and
dec
mov
and
jo
pop
cwtl
push
fists
inc
push
add
lret
adc
lea
lock
or
add
mov
fcomps
adc
scas
movsl
sbb
xor
shlb
xchg
inc
adc
aam
hlt
popa
pop
rcrl
add
cld
add
jmp
mov
jp
add
in
pop
cs
popa
sbb
and
or
fidivs
mov
pop
out
mov
cs
push
push
dec
push
fs
xchg
cmp
mov
push
jmp
xor
pushf
add
xor
in
imul
push
les
popa
xor
or
loop
add
mov
in
pop
rorb
inc
dec
test
or
std
jg
sbb
push
fcoml
add
push
popf
adc
add
cmp
aam
jo
jo
xchg
pusha
or
or
dec
mov
jp
add
push
cmp
add
xor
inc
cmpl
js
push
out
pop
pop
test
add
push
ret
push
call
lods
lret
std
aaa
sarl
xor
pop
and
mov
or
repz
mov
push
movl
jl
mov
ja
mov
inc
ljmp
ja
jbe
cld
pop
inc
inc
outsl
push
xor
xchg
data16
or
outsl
imul
das
sub
pop
mov
cmpsb
in
sub
jb
inc
sub
movsb
mov
jne
cld
cmp
dec
dec
inc
inc
popf
subb
outsb
daa
jecxz
jl
cs
adc
ja
push
shlb
jae
insb
lods
les
push
sub
xlat
push
jo
fwait
pop
pop
repnz
inc
imul
cmp
sub
mov
lods
cmp
jecxz
and
addr16
mov
outsl
inc
hlt
mov
aaa
add
std
imul
stc
and
and
dec
adcb
gs
je
sbb
dec
mov
pop
test
push
dec
sub
inc
dec
push
inc
repnz
mov
sub
arpl
add
add
gs
jb
movsl
mov
push
data16
aas
int3
push
sbb
daa
adc
popf
jmp
dec
fs
dec
xchg
fs
sub
int3
int
rclb
xchg
loopne
negl
outsb
jns
out
into
inc
dec
xchg
jae
imul
mov
cmp
mov
inc
push
cmp
popa
dec
inc
fwait
cmp
shl
adc
xor
adc
cmp
arpl
outsb
pop
sub
popa
push
out
jns
jnp
stc
lahf
jne
mov
push
rorb
inc
dec
dec
sbb
mov
push
sbb
lock
jns
xchg
in
dec
das
adc
mov
mov
and
inc
jne
mov
mov
cltd
out
ja
jle
popf
imul
sbb
jmp
insl
imul
js
pop
push
scas
or
sub
pop
dec
inc
add
scas
jnp
roll
fidivl
cmp
push
push
shlb
or
rol
cmpsb
addr16
push
adc
shrl
or
xor
pushf
aam
inc
push
sbb
push
das
sub
dec
adc
and
xchg
xchg
fsubl
in
or
jo
fcmove
mov
jno
xchg
xchg
movsb
gs
xor
fsubl
xor
pop
cs
jns
and
outsl
nop
lret
add
add
xor
dec
dec
push
inc
fdivrl
inc
pop
ja
jl
cwtl
sbb
aas
push
cli
out
sub
inc
repz
add
add
rcll
cmpb
push
js
sbb
mov
push
sbb
add
test
add
test
add
es
sbb
add
lds
jns
imul
les
aas
and
mov
xchg
lret
sub
data16
int
add
das
push
js
jle
loope
das
outsl
ss
addb
sub
adc
push
inc
dec
inc
rcrb
das
xor
xor
aas
xchg
sbb
loope
lret
int3
pusha
jo
jns
and
sub
sbb
sub
and
popf
nop
js
enter
cmp
xchg
cmp
xchg
imul
gs
push
jns
inc
or
inc
arpl
xor
push
push
mov
mov
sbb
inc
dec
push
and
sub
sub
push
les
and
test
mov
xchg
dec
push
je
filds
sbbl
jg
and
xor
aam
test
push
inc
add
push
test
mov
test
push
mov
sbb
pusha
or
dec
push
push
and
cmp
jno
add
call
inc
inc
push
dec
push
js
sbb
enter
in
xchg
push
cmp
das
cmc
pop
mov
pop
fld
jge
xor
ds
inc
cs
loop
push
inc
inc
push
cmp
mov
push
ljmp
pop
or
pop
es
cmp
std
addb
in
cmpsb
pushf
inc
enter
and
std
jnp
and
lods
inc
inc
dec
jb
scas
mov
adcb
das
popf
fidivs
xchg
add
shl
push
push
pop
out
in
dec
push
mov
or
and
test
movsl
jae
popa
xchg
dec
sub
movsb
sahf
inc
push
mov
cs
push
push
jecxz
das
shrl
and
push
xor
out
subb
add
xor
jae
imul
cmp
xchg
das
popa
mov
xchg
and
mov
lret
jae
cmc
hlt
std
fbld
stos
in
outsl
sti
mov
jmp
stc
jne
xchg
add
inc
cmp
xor
in
pop
fisttpl
push
fwait
das
cltd
jno
lahf
out
cltd
xchg
push
dec
dec
leave
push
sub
pop
popa
mov
out
xchg
lea
test
imul
cmpsl
movsb
imul
xchg
decl
or
test
or
or
hlt
lds
dec
push
es
rcll
mov
mov
ljmp
jo
push
push
clc
mov
aas
mov
xchg
and
jo
jae
mov
mov
and
aam
lds
add
push
pop
inc
dec
sub
or
push
daa
xlat
push
test
cmp
inc
sub
sbb
mov
std
nop
sub
lret
sub
dec
dec
xchg
mulb
push
push
and
fistpl
push
add
pop
and
jl
outsb
mov
dec
push
inc
fcomp
test
jg
mov
and
movsb
mov
lret
xor
add
inc
push
inc
pop
push
shrl
lcall
adc
pop
in
sbb
int3
xor
sbb
xor
loope
je
into
sbb
mov
mov
pop
mov
or
jbe
pop
mov
into
sbb
pushf
mov
cmp
cwtl
fstpt
cmp
and
xor
pop
sbb
xor
cwtl
sbb
xor
cmpsb
jo
push
jle
repnz
xor
dec
movsb
cmpsb
lds
mov
or
xor
mov
pop
add
jns
icebp
jns
xor
xor
icebp
and
icebp
jns
aaa
aaa
es
icebp
jns
cmp
cmp
pop
push
aam
sub
lcall
ds
mov
pushf
xchg
adc
je
test
or
pop
mov
jo
add
xchg
mov
add
sarl
lcall
adc
sub
je
shll
add
push
xor
jns
sbb
jne
xor
dec
lret
imul
add
sbb
mov
jnp
std
sub
mov
ret
fnstsw
push
sub
dec
pop
jae
inc
shll
cmp
xchg
in
inc
data16
ret
mov
xor
xchg
sub
dec
add
xchg
jb
add
int3
jb
dec
imul
mov
xchg
add
int3
cmp
daa
mov
ljmp
je
add
out
jns
inc
pop
int3
sub
arpl
mov
push
jbe
mov
je
inc
inc
xchg
in
rorl
xchg
ret
mov
push
xor
jl
jne
sub
mov
jne
mov
sbb
aam
jo
add
lds
pop
inc
dec
pop
out
nop
xor
in
mov
out
mov
jno
fcomi
cmp
push
ret
adcb
mov
pop
mov
imul
lret
loopne
dec
dec
dec
inc
pop
and
xor
gs
jns
inc
push
jnp
pop
aaa
pop
sub
scas
adc
and
push
pop
lret
xchg
dec
filds
xor
add
or
mov
dec
inc
inc
push
pop
fwait
mov
add
in
pop
sbb
pop
loopne
push
inc
dec
or
mov
pop
ss
pop
dec
dec
imul
out
mov
movsl
sub
mov
enter
imul
mov
cmpsl
test
sbb
inc
cltd
arpl
aam
into
sbb
xor
data16
mov
sarl
pushf
cmp
and
cs
jl
xchg
and
xor
cmp
or
push
lods
pop
dec
inc
pop
ss
push
dec
call
test
addr16
dec
mov
leave
and
xor
pop
xor
pop
or
add
sbb
jp
push
cs
fists
push
outsb
rolb
push
movsb
pop
add
xchg
and
push
outsl
outsl
insb
movaps
jo
xchg
xchg
dec
test
mov
and
je
jns
jb
movsb
loop
cmpsb
xor
push
inc
shrl
sbb
imul
mov
mov
fnstenv
mov
movsl
nop
xlat
add
xchg
out
or
dec
je
outsb
scas
repz
lods
jno
mov
bnd
dec
cmp
and
mov
mov
pushf
repz
jae
adc
fwait
aam
into
rclb
or
mov
lret
cmp
frstor
ja
push
push
push
imul
ret
jcxz
xchg
jb
je
lret
fcoml
xchg
fildl
xorb
gs
fs
sarl
repz
sub
sbb
xor
out
rcr
ss
push
sahf
fwait
xor
mov
pop
mov
enter
and
jo
imul
insl
push
movb
jne
push
add
jmp
fs
fwait
mov
ds
sahf
jno
fmuls
cmc
addr16
jb
neg
in
stos
pop
sub
sarl
cltd
cmp
jae
cltd
aam
pop
insb
inc
mov
or
sbb
push
fwait
hlt
imul
je
push
sbb
arpl
cwtl
out
cltd
dec
xchg
or
push
sub
fs
inc
inc
dec
push
sbb
sub
imull
cmp
bound
inc
cwtl
inc
inc
out
mov
mov
cmp
and
xor
cmp
mov
outsb
cmp
pushf
xchg
inc
push
push
inc
pushf
jge
jne
cmpb
push
xchg
mov
inc
out
dec
and
sub
lret
dec
je
rcrl
or
ljmp
mov
neg
addr16
je
outsb
popa
sub
nop
push
sbb
xchg
cld
insb
outsb
push
push
mov
out
add
out
or
cwtl
decl
jno
scas
mov
dec
call
bound
mov
push
bound
addr16
mov
push
lahf
sti
cmp
jns
aam
fiaddl
ja
xor
dec
rcll
sub
dec
bound
dec
int3
es
je
add
pop
jmp
imul
hlt
fistps
pop
inc
push
jb
ljmp
dec
ja
and
mov
repz
xor
sub
xor
xchg
xlat
mov
fidivl
inc
sbb
pop
imul
ss
and
arpl
dec
movsl
int3
mov
dec
mov
lret
ficompl
mov
sub
sahf
fiaddl
bound
inc
gs
cmpsl
movsb
jbe
imul
popa
loope
dec
inc
outsb
lock
pop
jge
jns
mov
xchg
fidivl
data16
jge
scas
stc
fs
push
out
inc
inc
dec
add
push
or
scas
gs
push
mov
outsl
int
dec
in
popf
mov
jo
lds
jge
into
movl
push
fmull
imul
insb
out
stc
scas
fldt
or
pop
xchg
dec
push
inc
mov
hlt
sub
push
jl
pusha
mov
outsw
bound
sub
mov
adc
stos
cltd
outsb
aas
or
jbe
jb
lret
mov
aas
cwtl
loop
cmc
aad
imul
test
arpl
mov
sub
out
sbb
ret
push
jmp
out
fistl
xchg
jb
mov
dec
hlt
adc
sbb
gs
jl
out
mov
insb
mov
fnstsw
push
pop
outsb
pop
inc
push
mov
nop
dec
stos
mov
pop
incl
ds
testl
mov
sbb
shl
cmpsb
aad
out
push
pop
enter
fwait
add
jmp
pop
dec
shl
repz
std
cmp
adc
xchg
shrb
push
icebp
outsb
adc
sbb
or
cltd
icebp
int
adc
sbbb
cwtl
addl
leave
add
inc
icebp
out
add
rcrl
dec
adc
mov
lret
stos
adc
mov
adc
test
movsl
mov
cmp
pop
fnstsw
iret
popa
add
leave
adc
add
int
enter
fs
out
test
or
xchg
add
popa
flds
fsubl
lcall
adc
mov
rcr
xor
pop
stos
inc
xchg
daa
mov
push
xchg
lcall
in
loop
push
add
adc
mov
xchg
rolb
data16
rcrb
add
call
jmp
sub
jbe
add
or
jns
push
mov
jne
xor
jle
pop
loopne
pop
ja
mov
out
push
jo
add
in
xchg
scas
inc
pop
push
cltd
iret
ds
pushf
in
jne
pop
pusha
repnz
into
mov
popa
cmp
pusha
pop
mov
iret
iret
iret
fcos
push
shlb
jne
jbe
push
jnp
mov
pop
and
leave
jge
popf
fnstsw
xchg
shll
in
cli
cmc
imul
mov
pop
xor
test
push
dec
inc
in
sub
push
enter
mov
incb
push
inc
and
add
sub
push
dec
and
dec
inc
cmpsl
sbb
add
push
xlat
imul
and
addb
jns
jo
xor
mov
jae
xor
stc
enter
push
mov
mov
pop
ss
movsb
jae
pop
lock
adc
or
add
cmp
push
xchg
subb
pusha
pop
push
push
push
add
xchg
orb
adc
mov
in
adc
pop
mov
push
xor
xchg
xchg
cmp
inc
and
jle
call
inc
or
ficoml
mov
jle
pop
pop
inc
inc
or
shlb
inc
adc
adc
add
in
sbb
scas
xor
hlt
in
sub
outsl
jge
add
mov
sbb
xor
mov
sub
add
mulw
xor
fstl
jno
and
mov
or
add
loop
or
pop
into
sub
pop
xchg
sbb
add
stos
cltd
lea
popa
iret
mov
xlat
jo
mov
and
push
inc
jae
add
pushf
aam
cmpsl
push
es
adc
jb
pop
mov
mov
inc
clc
testl
pop
add
push
sbb
or
rclb
fwait
test
rorb
cmc
add
jecxz
jecxz
hlt
dec
out
je
mov
pushf
mov
add
lock
add
mov
xor
mov
pushf
mov
inc
mov
add
adc
stos
pop
cmpsb
jmp
adc
das
dec
and
push
push
mov
andl
sub
cmp
and
mov
pop
mov
test
or
psubusb
jne
cmp
add
cvtps2pi
lahf
cltd
xchg
popf
xlat
aas
roll
mov
minps
cltd
popa
mov
fimuls
lods
and
jp
inc
loopne
pop
jne
test
pop
and
and
pusha
aad
xchg
and
xor
lcall
movl
add
mov
repz
pop
push
dec
mov
fnstsw
or
sbb
or
cmp
or
sub
ljmp
xor
sub
mov
out
out
test
insl
dec
push
adcb
mov
in
lcall
push
xor
repnz
movsb
shlb
bound
add
mov
iret
data16
inc
dec
ret
jo
or
sbb
xor
mov
data16
xorb
cmp
and
outsb
dec
and
pop
arpl
das
arpl
dec
nop
jns
lods
sbb
fsubs
insl
lret
mov
xchg
pop
jge
cmpb
addr16
mov
cmp
inc
cmp
rclb
inc
and
pop
and
cs
xor
in
in
or
push
mov
ss
sbb
insb
adcl
sub
sbb
inc
cmp
out
shlb
das
push
sbb
inc
jo
das
lret
arpl
out
jns
mov
out
sahf
add
cmp
jnp
scas
sbb
and
mov
test
or
push
cmp
je
jo
mov
mov
or
repz
mov
mov
in
inc
inc
mov
int3
cltd
nop
adc
mov
mov
jae
enter
out
sarl
mov
jge
dec
outsl
and
mov
push
shll
inc
pop
orb
cmp
inc
fisttpl
sbb
push
jbe
pop
rcrb
pop
jb
xchg
test
cmc
mov
sbbb
lahf
pop
out
movsl
mov
sbb
daa
mov
xchg
bound
jnp
es
outsb
xchg
dec
cmpsl
clc
xchg
inc
push
mov
jle
pushf
test
adc
outsb
mov
in
xor
mov
in
jno
inc
cmp
sub
ljmp
jnp
ljmp
dec
adc
mov
cmpsb
scas
xchg
hlt
dec
lods
cmc
mov
out
es
push
xchg
mov
fwait
cmc
scas
fs
into
data16
pop
sub
rcrl
addr16
aas
negb
ljmp
out
test
jae
add
dec
inc
add
jp
in
lea
stc
mov
arpl
repz
jle
hlt
xor
cmp
sub
sbb
inc
jne
inc
stos
dec
dec
imul
cwtl
xor
mov
aad
in
repnz
jae
push
in
lret
aam
mov
dec
outsl
jb
shlb
push
mov
xchg
imul
and
dec
mov
loop
mov
bound
cmp
aad
jmp
add
pop
inc
pop
sahf
mov
sahf
in
jmp
popf
test
mov
pushf
popa
dec
sarb
es
add
pop
mov
dec
jae
xchg
push
cmc
test
fsubs
cmp
cmpsb
outsl
jge
xchg
mov
add
data16
and
cmc
insb
addr16
pop
dec
pop
adc
scas
jb
mov
mov
jle
imul
pop
into
call
push
ljmp
push
icebp
mov
pushf
and
sti
mov
inc
sub
cmpsb
mov
jae
push
test
aam
pop
push
mov
cmp
inc
stc
cmp
fisubl
adc
inc
aad
pop
cmp
sub
into
or
pop
mov
add
jo
and
bound
mov
stos
xchg
jb
mov
int
cmpsb
xor
jge
mov
aam
jnp
jecxz,pn
leave
inc
daa
shl
push
add
int
cwtl
cmp
pop
in
pop
mov
cmp
jb
and
mov
dec
fucomp
xor
jb
sbb
pop
stos
and
or
ficoms
xor
lahf
loop
fs
dec
gs
lcall
jae
mov
test
xor
into
mov
jmp
mov
add
stos
imul
outsb
dec
cmpsl
jl
into
ror
cmpsl
frstor
int
mov
std
movsb
xchg
repnz
cmpsl
mov
jae
orl
add
aaa
jne
dec
popa
js
lea
mov
xor
ss
push
jge
mov
dec
sahf
mov
dec
push
push
or
push
ljmp
dec
cmp
aam
jne
int
hlt
rol
dec
xor
popa
inc
cmc
and
std
sub
jo
inc
or
mov
nop
mov
mov
or
pop
dec
push
repz
ficoml
inc
push
sub
outsb
xchg
pusha
dec
mov
shll
xchg
lret
and
add
mov
and
jne
jbe
out
sti
outsb
out
or
push
jbe
lahf
in
outsb
and
sbb
clc
lret
xchg
push
sarl
jb
ja
jle
and
fadd
xchg
pop
mov
jns
push
outsb
add
test
mov
pop
orl
jne
and
jae
adc
test
lock
or
push
pop
filds
push
xchg
push
cmpsb
xchg
lods
ss
jns
call
inc
mov
aad
aam
adc
xorb
dec
mov
pop
xor
les
frstor
sbb
mov
lcall
lea
jnp
lret
mov
popf
ds
and
mov
push
enter
sub
arpl
inc
pop
pop
add
mov
cmpsl
pause
test
scas
push
enter
lods
add
xor
lret
int3
sub
add
ds
dec
int3
mov
adc
test
sub
sbb
or
adc
adc
add
jl
imul
xor
mov
test
or
outsb
cmp
mov
lods
ficoml
inc
inc
lock
jmp
gs
push
sub
xor
pop
add
test
inc
dec
push
push
dec
pusha
movsl
call
adc
push
push
and
xor
mov
aad
push
mov
pop
loope
mov
fucomi
and
jo
jns
gs
mov
mov
cmp
scas
xchg
movsb
jp
add
fidivs
xor
xor
leave
lods
jbe
cld
je
movsl
mov
jl
xor
lods
pop
and
fidivrl
std
jae
pop
sbb
add
lods
sbb
shll
ss
jge
xor
lods
jbe
mov
xor
leave
scas
sub
popa
shll
cmp
sub
and
inc
pushf
lock
inc
push
inc
pop
outsb
pop
js
lods
add
mov
or
inc
xor
sub
cli
gs
mov
popa
scas
cpuid
and
jae
sahf
repnz
cmpsl
xchg
mov
cltd
push
inc
push
push
jecxz
xchg
lahf
mov
jp
subl
mov
fstl
inc
jne
sbb
pop
push
mov
pop
fildl
stc
xor
mov
jl
xor
ret
icebp
jnp
lock
mov
js
mov
cld
cmp
mov
sub
out
jle
and
jle
ja
and
ja
sub
sub
pop
jle
ja
cmp
ja
pusha
jle
xor
popa
xor
out
and
mov
and
pop
sub
sub
mov
cmp
aas
daa
pusha
mov
and
loopne
and
das
mov
inc
cmp
pop
repz
mov
das
cmp
aas
repz
add
cmp
and
push
and
cld
into
out
and
pop
jne
stc
stos
adc
jle
mov
mov
js,pn
popf
fcomip
and
out
mov
cld
into
and
and
and
add
xor
dec
dec
mov
add
mov
dec
arpl
je
dec
push
inc
push
das
dec
ja
pop
adc
inc
inc
mov
pop
or
outsl
jb
push
sub
mov
pop
ja
popa
jns
mov
popa
add
dec
and
jne
mov
inc
dec
popa
xchg
dec
xor
imul
and
push
add
xor
cltd
insl
adc
lcall
xlat
jl
fdivp
gs
dec
pusha
stos
notl
divl
rorb
add
jae
dec
shrl
outsl
jne
aad
mov
mov
dec
and
or
add
mov
mov
das
roll
jge
dec
loope
add
lret
xchg
adc
sahf
add
je
je
lret
add
dec
inc
inc
inc
pop
mov
andb
push
scas
sbb
and
stos
push
je
pop
inc
and
pop
shlb
push
sub
outsb
addr16
inc
fldt
mov
cmp
jnp
xchg
dec
fisttpll
insl
and
xor
mov
js
jnp
jp
fs
inc
sahf
out
pushf
nop
mov
test
inc
xchg
pop
outsl
aas
addl
test
jp
clc
out
cmp
dec
in
or
pop
push
push
inc
dec
je
mov
jb
jno
pop
dec
loop
add
lock
adc
sub
sahf
out
sahf
cmp
dec
pop
pusha
jns
out
push
cwtl
and
sahf
out
movsb
cwtl
movl
test
enter
cmp
in
hlt
clc
add
sahf
out
xchg
adc
and
xor
jns
out
cmp
dec
sahf
out
sahf
push
pop
pusha
insb
js
sahf
out
test
jns
out
mov
out
sahf
fsubr
lock
add
or
sbb
sub
cmp
repz
push
pop
iret
repz
push
cmp
repz
cwtl
mov
cmp
repz
iret
repz
rcl
fsub
in
sahf
icebp
cmp
cld
add
or
sahf
out
adc
and
xor
jns
out
inc
dec
push
pop
sahf
out
sahf
pusha
push
sahf
out
nop
pushf
movsb
lods
mov
out
sahf
out
int3
aam
iret
jecxz
sahf
lock
add
or
cmp
repz
xor
push
repz
repz
pop
jo
test
repz
mov
iret
repz
mov
ror
repz
repz
in
cld
and
push
movl
mov
push
inc
add
pop
dec
sub
jbe
xor
and
test
pushf
fs
dec
aam
push
scas
popa
insl
sub
cmp
xor
or
popf
pushl
jno
stc
jae
ret
in
sar
lret
in
out
mov
xchg
movsl
push
stos
popa
data16
clc
and
adc
or
les
add
rcll
incb
adc
shl
lahf
cmpsb
lcall
inc
das
ret
arpl
pop
outsb
xor
cwtl
in
add
sarl
fs
in
jbe
xorl
cmp
xchg
sub
fstpt
cs
jae
xor
mov
aas
aas
aas
xor
xor
mov
mov
in
and
cmp
add
cmp
fwait
xchg
insb
xchg
or
jne
sti
mov
add
scas
aad
fdivrl
test
jecxz
pop
fcoml
mov
sub
push
pop
cmpsb
mov
sahf
adc
inc
jns
adc
mov
repnz
dec
sub
xor
into
cmp
lock
cmp
imul
jle
outsb
or
sub
jp
arpl
filds
int
bound
test
cmp
mov
mov
add
bound
cmpb
mov
push
xlat
fdivs
insb
jne
jmp
addr16
bound
into
mov
addr16
mov
jns
aaa
fsubs
lcall
xchg
notl
cmp
lcall
and
jnp
mov
imul
gs
data16
jnp
bound
sub
jno
jae
testl
enter
xor
xchg
cmp
xlat
fdivl
cmpsb
popa
push
cmp
rclb
jne
hlt
pushf
fcmovbe
push
xlat
test
rdtsc
shl
ss
xchg
das
mov
nop
jns
push
jae
insb
outsl
popa
iret
aam
outsl
xchg
imul
imul
dec
dec
shlb
jno
mov
ret
icebp
push
mov
sti
scas
xchg
addr16
inc
andb
xor
bound
dec
jg
mov
iret
dec
lret
mov
push
insl
test
mov
or
movsb
fadd
aam
xchg
repnz
ret
dec
fdivrl
jp
jae
lret
call
lock
xor
push
rolb
cmc
cs
in
xor
pop
cmp
sub
xchg
shlb
xor
sbb
je
imul
lret
incb
dec
sahf
push
test
pushf
out
cmpsl
add
dec
dec
push
push
ds
mov
inc
jne
xor
xchg
push
inc
xor
xor
mov
mov
ds
les
movsb
mov
jne
cmp
ret
inc
dec
cmp
push
xchg
lods
or
cmp
xlat
jnp
and
mov
dec
outsl
and
imul
lcall
xor
push
sbb
pop
adc
test
pop
cmpsl
xlat
gs
lea
jp
and
movsl
rclb
movsl
mulb
lahf
sahf
sub
test
enter
loope
sub
jbe
jge
push
fstl
scas
fistpll
cmp
outsb
sbbb
clc
jnp
dec
inc
push
xchg
stos
das
dec
shrl
faddl
out
sti
jge
imulb
test
mov
xor
cmp
sti
fists
std
sub
sub
pop
sub
or
and
repz
inc
adc
sub
gs
mov
ret
inc
sub
dec
js
cmp
mov
daa
and
test
inc
aam
jns
push
mov
mov
xor
pusha
out
lcall
and
xor
and
inc
mov
xchg
jecxz
and
loop
xchg
cmp
into
sub
xor
xchg
jno
add
dec
jecxz
imul
xchg
sbb
adc
dec
sarb
lds
ljmp
add
out
adc
add
jne
xchg
out
push
jp
lock
std
sub
jmp
out
sti
cmp
fsubr
and
jnp
lret
lods
popa
add
in
xchg
mov
xor
cltd
xor
push
add
push
push
inc
push
repnz
mov
imulb
dec
outsl
mov
jae
push
negl
xor
dec
push
xor
nop
sub
lea
sahf
mov
push
in
mov
call
cld
out
push
lea
repz
add
stos
negl
arpl
pop
cmpsb
dec
and
adc
in
out
test
inc
push
or
push
lret
inc
push
nop
rcr
mov
out
js
daa
out
in
ja
jae
push
push
into
mov
cmpsb
pop
dec
xchg
int3
fiadds
in
cmp
xor
test
mov
jne
push
jo
mov
je
mov
mov
adc
pushf
decb
push
push
jno
push
fbld
inc
pop
xor
imul
adc
jmp
mov
into
cs
jae
mov
lods
jg
test
sbb
shll
push
inc
inc
mov
add
mov
xchg
mov
cmp
mov
bound
imul
push
or
pop
pop
bound
push
jns
imul
mov
xchg
in
inc
mov
mov
ljmp
pusha
inc
push
pusha
jmp
push
jno
mov
ds
mov
dec
sti
pop
jb
adc
jae
ss
sub
xor
push
dec
aam
out
xor
imul
fwait
bound
or
mov
xchg
mov
jp
mov
push
jae
call
popf
scas
inc
and
aas
sar
test
xchg
push
push
xchg
pop
mov
jmp
mov
mov
repz
xchg
push
adc
dec
in
les
ror
dec
pop
xchg
iret
pop
adc
andl
outsl
imul
sub
xor
cmp
mov
fidivrs
push
int3
sub
add
cmp
leave
inc
jnp
mov
pop
rcl
test
rcll
inc
sub
sbb
push
gs
ret
or
jge
out
xor
xchg
mov
cmp
xor
jge
test
mov
daa
jp
inc
jns
fs
mov
xor
xchg
xor
lcall
nop
cmc
cmpsl
pushf
jae
jp
xchg
mov
pop
lcall
aas
gs
jae
push
mov
mov
pop
jb
jp
and
out
out
fdivrl
push
js
push
das
jns
pusha
jl
inc
fnsave
jns
mov
rcl
mov
jno
leave
or
dec
into
vmovntdq
mov
push
xor
std
cmp
mov
pop
sub
imul
cmp
data16
aad
jnp
mov
inc
jmp
rolb
cmpsb
and
xchg
neg
push
popa
and
mov
fisttpll
pop
dec
adc
out
repz
pusha
pop
lods
imul
dec
jp
rolb
in
add
outsl
pop
jb
mov
inc
lret
mov
notl
ja
movsb
mov
jb
addr16
inc
mov
mov
insl
shlb
andl
cwtl
cs
push
or
dec
roll
mov
mov
push
push
mov
xor
js
outsl
pop
filds
push
mov
xchg
jns
inc
insb
icebp
dec
bound
jnp
popf
dec
out
xchg
and
imul
outsl
insb
add
pop
nop
jmp
mov
push
dec
movsb
dec
xor
push
mov
idivl
cs
and
dec
lcall
das
and
jle
cld
repz
rcrb
pop
xchg
jmp
mov
leave
fidivl
mov
sbb
xor
cld
jbe
jmp
call
mov
popf
pop
lds
inc
dec
dec
gs
aad
aaa
add
mov
push
test
imull
in
in
cwtl
divl
push
fs
dec
stos
sub
push
push
mov
sub
jno
gs
mov
xchg
int3
cltd
enter
mov
dec
fldt
mov
cmp
sahf
pop
iret
repnz
test
add
pop
push
and
ljmp
cmp
hlt
cwtl
jle
lea
rclb
cs
ljmp
add
jge
cmc
lcall
mov
push
sbb
dec
pop
negl
jbe
repnz
cmpsb
mov
mov
cmc
mov
mov
jmp
lcall
test
fisttpll
fiadds
xchg
lahf
and
cmp
mov
jge
out
rclb
pop
cwtl
in
mov
decl
pop
xchg
and
negl
or
or
es
adc
insl
out
inc
dec
sbbb
jbe
jb
mov
jge
bound
nop
jnp
jb
test
cmpsb
inc
out
sub
out
pop
pop
or
sub
pop
outsl
mov
cmpsl
pop
push
fdivl
sub
pop
dec
sarl
mov
mov
push
popa
sub
sub
gs
dec
mov
push
push
es
fcomip
mov
jp
je
xlat
jl
cmp
testl
int
adc
dec
xchg
jno
cli
cmp
loop
out
notl
mov
jo
sbb
shll
rcl
inc
and
mov
cmpsl
sti
movsl
sbb
jge
jno
sub
cmp
dec
xchg
mov
out
test
cltd
mov
jns
in
fucomip
arpl
aam
xchg
mov
mov
jp
je
int
and
sbb
push
inc
mov
pop
xor
push
hlt
jb
and
pop
or
or
xrelease
add
mov
cli
test
mov
ljmp
orb
fnsave
sbb
es
or
push
or
imul
cmpb
bound
es
add
ja
xor
cs
dec
movsb
xchg
out
out
fs
xchg
sbb
movsb
lock
insl
and
shlb
popa
fbstp
push
xchg
inc
nop
pop
push
sub
push
in
push
inc
cs
sbb
cmp
xor
rcll
cmc
shr
cltd
mov
or
lahf
popa
in
out
call
lods
pop
sbb
xor
es
add
dec
mov
xor
inc
dec
add
pop
sahf
daa
adc
inc
push
in
ja
daa
arpl
arpl
ss
push
xor
xor
mov
lcall
mov
xchg
mov
add
sbb
scas
jne
movsb
adc
outsb
insl
cmp
aam
push
hlt
or
jae
mov
stc
push
nop
sahf
dec
lock
xchg
push
xor
add
mov
cmp
sbb
sub
pushf
inc
fidivl
out
dec
leave
stos
movsb
popa
in
arpl
adc
cmc
dec
xlat
in
mov
xchg
fisttpl
insl
pop
xor
add
push
inc
ret
pop
cmp
mov
push
ss
jnp
ja
lds
add
stc
les
imul
push
lea
push
inc
je
xor
cld
das
dec
leave
mov
jno
adc
jae
mov
fbstp
jnp
and
xchg
adc
mov
cltd
stos
jae
cmp
cmp
rclb
in
lea
insl
jbe
mulb
cmp
cmpsb
ja
hlt
mov
jmp
dec
xlat
mov
inc
out
push
int
test
imul
push
jmp
fs
xor
cmc
nop
mov
das
dec
sbb
arpl
loop
add
mov
jnp
push
shlb
aam
push
push
daa
fmuls
ds
pushf
cmp
stos
mov
push
out
pop
mov
out
stos
push
add
cmp
gs
movsl
inc
jp
dec
add
mov
imul
jb
outsl
fwait
push
leave
adc
dec
xor
mov
movsb
ret
push
or
push
jae
repz
movsb
mov
inc
adc
xlat
in
and
inc
mov
sub
adc
sub
fists
dec
imul
xor
mov
add
mov
cld
fs
cmpsl
mov
sub
arpl
jbe
mov
xor
jp
mov
in
outsl
imul
mov
aad
or
out
insl
push
aad
push
cld
outsb
jae
in
jo
dec
mov
lret
mov
mov
stc
fsts
daa
and
decb
js
arpl
push
mov
ss
outsb
sub
jecxz
mov
fdiv
mov
add
or
push
xchg
icebp
mov
adc
loopne
inc
dec
mov
shlb
pop
or
mov
add
test
xor
test
push
arpl
std
dec
mov
setp
lret
xchg
test
jle
arpl
mov
mov
add
daa
add
in
xor
pop
sti
or
fucomip
jge
test
xor
repz
xchg
jg
xchg
mov
and
xchg
imul
push
or
movsb
out
cmp
inc
or
and
lcall
jae
push
inc
ret
pusha
adc
xor
sbb
cmp
sbb
sbb
imul
mov
into
push
mov
jae
lret
nop
adc
mov
push
scas
dec
cs
imul
hlt
adc
jns
test
pop
popa
arpl
jb
lahf
js
ljmp
out
iret
mov
mov
leave
push
mov
daa
mov
arpl
div
push
xchg
push
dec
out
mov
mov
aad
xchg
subb
pop
or
jl
push
jg
mov
movsb
cmp
movsb
neg
push
xchg
cmp
popf
dec
movsl
out
jae
add
out
sub
fbstp
sub
xchg
xor
add
sub
mov
push
mov
cmp
push
popa
cli
sbb
cs
scas
pop
fistpll
iret
pop
xor
nop
rcrb
in
popf
sub
xor
sub
jns
test
data16
mov
push
sti
mov
mov
ja
and
repz
aad
push
std
mov
xchg
xor
sub
add
pop
push
out
and
xchg
sub
imul
int3
lret
push
jae
testb
out
jno
jmp
jmp
fldcw
mov
mov
add
leave
fmull
sub
js
add
lret
push
shll
hlt
lds
lret
lea
mov
push
add
adc
jae
inc
push
inc
imul
jl
xlat
push
adc
xor
dec
inc
call
dec
pop
push
xor
fwait
lods
movsb
in
cmpsl
cmp
lret
pop
shrl
xchg
lahf
push
add
mov
sub
jb
or
popa
jns
sub
and
repnz
and
xor
dec
int
jns
or
add
jp
enter
sub
sub
outsl
sbb
xchg
xor
idivl
and
decl
lds
cmpsb
fiadds
movsl
mov
inc
arpl
negl
imul
sbb
ljmp
or
mov
in
cmp
out
insb
nop
sbb
shr
and
add
bound
idivb
pop
push
daa
jmp
loopne
mov
mov
aad
jecxz
test
jae
pop
or
mov
jae
mov
mov
cmpsl
cmp
and
aad
mov
jns
push
cmp
out
push
outsb
jb
in
lret
fstl
jae
sbb
stos
popf
jb
push
or
mov
add
jb
push
add
aaa
lcall
lcall
cmp
dec
inc
pusha
es
jo
int
aas
and
cld
dec
fidivs
fs
dec
mov
int3
insb
and
std
mov
inc
in
and
shlb
and
das
jl
add
xorl
movsl
dec
xor
insb
push
or
scas
add
push
incl
stc
mov
or
nop
add
xor
add
js
mov
sbb
adc
mov
inc
jl
add
or
rolb
lret
js
inc
and
xor
xor
bound
sub
cmpl
inc
jne
mov
add
inc
in
add
add
test
je
test
je
add
add
push
call
adc
push
xchg
sbb
jg
push
sbb
ret
call
ds
mov
pop
pop
pop
push
sub
adc
add
mov
rep
mov
stos
push
push
push
push
add
dec
aaa
push
push
call
add
test
std
mov
dec
mov
jge
sahf
sub
jns
fs
ficoms
add
pop
add
imul
jmp
xchg
jae
mov
scas
js
add
sub
dec
aaa
mov
divl
stos
sub
sub
dec
neg
or
jne
xor
sbb
cmp
xor
mov
xor
mov
xor
mov
sub
sarb
push
dec
push
inc
push
xor
repz
stc
pop
xchg
sbb
insl
pop
pop
loop
add
mov
cmp
insl
cmp
ret
push
jmp
mull
lods
xlat
mov
add
jp
push
shll
inc
dec
pop
inc
push
push
inc
or
and
dec
dec
jp
rorb
mov
mov
fstpl
or
fisubrl
mov
aad
dec
or
ret
inc
jne
fidivl
in
sub
shlb
stc
sbb
push
inc
dec
xor
and
fsubrs
addr16
imul
mov
daa
addr16
cmp
push
flds
aam
pop
stc
jge
es
dec
fsubrl
jae
ja
fincstp
aam
mov
inc
jg
sub
lret
subb
cmpsl
stc
push
inc
push
and
push
add
popa
ljmp
insl
jbe
inc
rolb
add
leave
add
add
add
mov
aaa
inc
or
cmp
sbbl
inc
js
pop
cmpsb
mov
inc
pop
sarb
and
sbb
cwtl
bound
sbb
cmc
or
push
inc
adc
test
lret
dec
popa
or
sbb
ja
mov
mov
lahf
loopne
enter
ret
add
inc
in
or
cmp
mov
xor
inc
repnz
jmp
insb
xchg
push
sub
aas
js
insb
rorb
aas
bound
jb
sub
mov
mov
adc
cmp
jno
sub
adc
xchg
or
loopne
jg
xrelease
jae
repnz
xchg
push
lock
ljmp
inc
push
inc
dec
and
mov
and
in
inc
xor
pop
mov
push
inc
mov
stc
out
pusha
stc
mov
inc
std
add
out
clc
hlt
lock
cwtl
shlb
cmp
sarb
push
shl
outsb
inc
mov
mov
jmp
lret
cld
lock
sub
loopne
or
or
lea
pop
popf
jne
sub
lahf
xlat
fstps
dec
add
test
out
jns
addl
jns
add
add
movsb
enter
cmp
rolb
mov
cmp
adc
jae
jae
or
out
mov
jmp
loopne
lret
lds
std
sub
inc
int3
std
repz
adc
add
stc
add
xchg
pusha
cmpb
cmp
loope
cmpsb
fbld
cld
out
addb
jle
cld
test
shll
ret
movl
inc
mov
mov
in
xchg
pop
call
jne
addl
ficompl
push
xor
jo
rcr
fsubp
stc
xor
add
xchg
sbb
aam
test
shlb
flds
pop
aam
icebp
add
popa
fcoml
loopne
in
xchg
mov
inc
and
mov
push
mov
and
pop
add
pop
xchg
mov
lret
ret
push
pop
repz
or
or
fcomi
or
push
scas
leave
repz
addps
adc
inc
xlat
jge
xor
inc
inc
push
sub
xchg
iret
push
push
dec
decb
push
pop
stos
cld
pop
mov
cmp
jo
mov
orb
mov
in
repnz
loop
mov
out
movsb
in
out
cmpsl
mov
outsl
iret
mov
or
mov
je
add
add
mov
mov
fdivl
jg
jecxz
shlb
sbb
mov
mov
push
inc
cld
xchg
rorb
pop
jle
sbb
out
cld
cmp
or
into
nop
xchg
xchg
stc
cmp
cmp
decb
jno
int
add
xchg
lods
add
cmpb
jns
push
or
adc
cmp
add
jns
cli
mov
test
dec
sbb
cmp
repz
add
mov
mov
cmp
repz
insb
jp
fdiv
cmp
cld
pop
decl
mov
add
imul
add
sbb
testb
or
xor
popa
add
mov
inc
push
cmp
pusha
roll
xor
rorl
bound
in
fadds
sub
aad
aas
or
or
inc
push
jmp
cmp
je
pcmpgtd
dec
push
dec
mov
xor
mov
add
inc
add
addr16
push
push
push
inc
sub
arpl
push
inc
push
push
push
pop
xor
push
push
out
mov
mov
pop
jo
mov
inc
add
push
inc
inc
mov
pop
or
xor
rolb
pop
aas
ret
enter
or
push
or
int
jecxz
rolb
push
jmp
fisubs
ss
inc
pushf
push
dec
testl
out
mov
inc
loope
fldl
or
xor
push
psubd
push
dec
pop
lret
jmp
mov
shl
jno
dec
inc
adc
push
xchg
mov
xchg
loop
fs
push
pop
sti
pop
cmp
repnz
inc
pop
push
data16
xlat
or
js
rorl
inc
iret
pop
adc
pop
pop
cwtl
sarl
les
dec
out
xchg
or
xor
jno
mov
push
mov
es
mov
sbb
dec
mov
sub
push
shlb
mov
sub
cs
insl
or
push
inc
cmpsb
vmptrld
cmp
incl
push
movsb
iret
jecxz
xor
mov
add
scas
cmp
out
sbb
push
push
pop
cmp
mov
push
add
movsl
xlat
sbb
adc
add
es
inc
mov
adc
sbb
jo
xchg
inc
dec
shll
cmp
arpl
into
xor
inc
xchg
pop
out
sbb
dec
cmp
adc
dec
bound
cld
pop
icebp
pop
dec
pop
clc
arpl
jg
in
loopne
insl
int
aam
int3
iret
sub
mov
js
push
mov
stc
stc
mov
adcb
bound
pop
jo
popf
shl
arpl
mov
arpl
pop
dec
jl
repz
fimuls
xor
fidivl
or
xor
loopne
dec
dec
hlt
pop
cmp
add
mov
fcomip
or
jle
mov
movsb
ret
ja
or
or
clc
test
je
mov
mov
clc
push
jno
push
cmp
out
pop
dec
stos
adc
mov
fidivl
mov
loopne
sbb
stc
mov
xlat
fidivl
cmp
mov
movl
mov
mov
mov
lods
cmp
test
sbb
shl
arpl
hlt
or
leave
ret
mov
or
jno
enter
in
js
test
xchg
sbb
into
mov
mov
inc
insl
std
dec
jbe
mov
dec
out
mov
jmp
in
rorl
in
pop
fadd
sahf
imul
jbe
pushf
mov
jno
xchg
sbb
out
pusha
or
loop
pop
jnp
xchg
out
pop
push
ret
push
rorb
inc
popa
icebp
sub
enter
repz
sarb
cmp
mov
repz
rep
push
repz
pop
push
push
dec
dec
cmp
repz
inc
cmp
sub
sahf
out
repnz
or
hlt
or
or
or
or
cmp
rorb
or
or
or
jecxz
shlb
push
adc
stos
xchg
mov
mov
pusha
mov
or
cmp
push
negb
hlt
inc
push
stc
fidivrl
insl
int3
or
nop
jmp
dec
mov
jmp
enter
or
cmp
ret
mov
adc
inc
sbb
push
and
inc
pop
mov
mov
ret
inc
and
sahf
mov
sub
add
add
inc
rcrb
and
sbb
addl
xlat
xchg
inc
push
add
inc
stc
mov
adc
cld
add
popl
cmp
cmpsb
iret
decl
js
outsl
loopne
jmp
or
mov
test
daa
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
out
jecxz
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
add
add
xchg
push
cmpsb
scas
mov
or
addl
cmpsl
xchg
add
xor
in
cmp
sahf
xchg
add
add
pop
lcall
lock
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
add
pop
fldl
xchg
and
and
int
int3
sti
aas
add
add
or
mov
fs
dec
lea
add
add
aas
ret
shrl
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
add
add
aas
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
shrb
les
aas
xchg
les
jne
mov
lcall
cmp
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
add
mov
jl
mov
das
lea
mov
inc
aas
movsl
add
add
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
add
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
add
jecxz
cmpsb
add
movb
aaa
fldt
cmp
add
add
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
add
add
mov
sub
dec
in
ss
push
scas
into
imul
faddp
jge
call
mov
push
cmp
push
andl
dec
dec
gs
std
orl
fsubp
mov
ror
add
cmpsb
fdivs
pop
sbb
scas
sub
addb
sub
dec
push
adc
push
out
dec
insl
mov
sbb
cmp
jns
out
mov
repnz
cmp
das
dec
insb
add
lock
lods
push
mov
lret
xor
pop
cmp
lds
push
pop
out
sahf
out
jle
movsb
mov
int3
hlt
or
sbb
cmp
repz
inc
push
bound
repz
repz
mov
out
out
push
movl
inc
sahf
out
sahf
pop
outsb
jle
xchg
cmp
add
adc
cmp
repz
xor
insb
iret
repz
jle
pushf
scas
mov
aam
lock
and
out
xor
push
sahf
out
mov
iret
repz
xor
cmp
repz
push
jno
iret
repz
clc
or
and
jns
out
dec
pop
push
sahf
out
sahf
mov
mov
jns
call
cmp
cmp
repz
push
pusha
insb
js
repz
xchg
repz
ljmp
out
dec
bound
scas
jecxz
sahf
out
shl
repnz
iret
repz
push
cs
pop
insb
aad
sarb
imul
add
push
gs
push
inc
push
pop
divl
lcall
outsl
cmp
mov
movl
jbe
or
add
sbb
mov
pop
jne
sbb
out
int
pusha
dec
pop
xchg
shll
fs
adc
daa
jp
mov
pop
mov
outsl
push
push
arpl
lods
lahf
mov
mov
mov
stos
add
dec
cmp
repnz
popf
push
pop
push
mov
insl
push
add
adc
mov
rolb
mov
ret
imul
pop
add
fs
mov
jo
add
add
pop
push
ja
aaa
xchg
inc
and
cli
jae
push
cmp
mov
xchg
dec
gs
in
pop
jo
ret
inc
add
inc
mov
push
xchg
cmp
pop
push
imul
in
mov
and
add
cmp
mov
push
cmc
test
sbb
test
mov
sti
and
dec
mov
in
hlt
aad
or
xor
push
int
dec
sbb
test
pop
cmp
aas
andl
out
dec
mov
add
js
imul
lret
aas
mov
adc
inc
adc
call
out
bound
xorb
push
scas
push
outsb
loop
and
add
int
add
gs
data16
sub
pop
out
sbb
sbb
mov
adc
cmc
insl
jbe
fimull
mov
add
das
popl
xor
scas
fs
push
mov
popa
js
or
add
mov
push
jns
inc
ja
cmpsb
sub
cmp
sarb
fsqrt
push
mov
cmpsb
movsb
sti
xlat
imull
inc
pop
jno
cmp
aaa
push
daa
popa
add
fwait
add
mov
aas
sbb
fs
test
jbe
into
jb,pn
aam
aad
push
xlat
das
jecxz
inc
sbb
add
lds
xor
dec
push
pop
push
jns
testb
add
adc
js
xchg
pop
and
xor
in
stos
and
pop
ss
fildll
das
or
mov
xchg
xor
imul
hlt
add
and
pop
inc
jbe
cmp
fdivr
add
sbb
sbb
dec
pop
out
push
enter
add
adc
sbb
add
sbb
mov
loop
inc
xor
add
sti
popl
push
dec
inc
push
inc
jmp
or
and
mov
mov
subl
cmc
lret
outsb
mul
xchg
fimuls
push
push
fstpl
mov
mov
jmp
mov
xor
sbb
mov
jae
jae
popa
mov
insb
dec
add
nop
cmp
cltd
pop
dec
aam
sub
mov
outsl
jne
sub
mov
nop
cwtl
test
adc
dec
lret
mov
cmc
sub
inc
es
mov
add
xor
nop
xchg
mov
je
add
clc
xchg
ror
je
push
ret
iret
pushf
mov
js
daa
mov
scas
ss
jne
mov
mov
bound
daa
pop
lods
popf
lahf
mov
inc
push
cmp
pop
cmpsw
cmp
inc
aas
push
enter
fs
xor
push
faddl
in
push
fnstsw
insl
out
aaa
mov
mov
das
add
or
sbb
rcrb
pop
pushf
rcrb
gs
inc
dec
out
jns
push
xchg
into
popa
sub
adc
ret
add
jbe
adc
add
jmp
push
mov
or
add
mov
fcomps
mov
icebp
xor
insl
push
cmp
ret
pop
rorl
outsl
loop
push
fsts
xor
fnsave
dec
inc
xor
movsb
or
call
push
inc
cmp
rcrl
push
outsb
je
bound
add
imul
jno
inc
pop
mov
pop
or
popf
pushf
jo,pn
bound
sub
add
add
sub
add
push
add
loop
add
bound
add
and
add
jl
or
mov
add
inc
or
add
add
xor
add
add
add
ljmp
add
inc
or
imul
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
popf
inc
add
add
mov
sub
andl
push
lea
add
or
add
add
push
push
mov
jl
add
rcrb
cld
push
add
test
je
cmp
addb
mov
sub
fnstsw
and
lea
mov
jae
cmp
jae
mov
add
in
mov
lea
fbld
jg
sub
jno
cmp
out
adc
sub
cs
pop
push
leave
or
sub
shl
sub
rep
pop
mov
sub
ds
sarl
jl
rolb
rcrl
sbb
fcos
addl
or
pushl
adcb
ds
pop
pop
ret
jl
or
push
push
inc
add
nop
jo
jbe
add
inc
jp
or
jo
shl
push
add
sub
mov
and
inc
or
sbb
dec
ds
cmc
ja
pop
bound
adc
cmp
jb
push
mov
add
or
lcall
into
pop
ljmp
addr16
mov
jg
sbb
fiaddl
lea
sbb
lcall
cmp
call
push
push
push
push
call
or
adc
inc
cld
push
inc
push
push
or
sbb
ret
inc
loope
lea
sbb
or
inc
mov
insb
jno
cmp
fiadds
adc
push
mov
pop
add
jnp
cli
movsl
sbb
jle
mov
outsl
add
sub
sub
push
push
call
mov
inc
ss
sub
mov
push
push
lcall
mov
mov
jnp
and
pop
push
call
js
rorb
sbb
add
adc
sub
push
xor
leave
inc
mov
mov
je
mov
bound
inc
jne
xchg
shr
sub
pusha
adcb
push
push
and
lea
jo
sub
sub
xchg
jmp
add
inc
push
aas
imul
push
push
mov
scas
xchg
in
add
cmp
loopne
nopl
inc
or
inc
icebp
add
dec
cwtl
rolb
push
jmp
mov
repz
sbb
push
in
cmpb
xchg
fisttpl
pop
adc
aam
or
pop
pop
pop
pop
ret
aaa
inc
test
cld
aam
pop
sub
jae
iret
aad
add
push
call
mov
push
add
sar
xor
xlat
std
add
je
push
ret
jo
and
fs
pop
add
jmp
arpl
out
jge
aas
push
jne
or
dec
ror
xlat
sub
pop
xchg
daa
mov
lret
shl
and
or
mov
jmp
push
xchg
clc
es
inc
scas
ss
cmp
or
push
add
lret
pop
mov
add
push
mov
nop
inc
adc
adc
pop
popa
cmp
and
xchg
cltd
or
jle
add
add
mov
adc
add
cmp
jge
push
inc
xor
call
rolb
push
cld
sub
je
dec
jne
xlat
jmp
rorl
jae
xor
rorb
rclb
les
and
push
add
clc
add
or
lds
dec
inc
adc
inc
cmp
inc
data16
addl
fs
xchg
add
pop
push
scas
out
clc
cmpsb
or
pushw
push
push
call
push
inc
dec
sub
test
lcall
cmc
adc
mov
cmovae
and
add
jae
jge
dec
or
sar
rep
jecxz
loope
popa
xchg
in
mov
pop
and
xchg
lret
add
test
shlb
sbb
test
mov
movsb
in
push
or
mov
sahf
mov
inc
add
cltd
mov
sub
cmp
test
sub
iret
adc
jle
fists
mov
and
cmc
mov
cltd
test
ss
pop
jns
or
movsl
es
inc
aaa
inc
mov
push
push
dec
adc
xor
inc
adc
call
sahf
push
push
in
call
rolb
jo
mov
jge
sti
sbb
jecxz
jg
in
push
dec
cwtl
inc
pop
or
dec
dec
pop
clc
push
pusha
movl
xchg
div
loope
mov
into
jecxz
pop
add
sub
jp
sbb
popf
push
xchg
and
pop
int3
cmp
add
je
les
inc
test
daa
mov
adc
push
push
push
call
sub
adc
rclb
ret
cltd
int
dec
adc
mov
pop
shlb
inc
dec
cmpsb
mov
lret
rcrb
add
jmp
xchg
push
lock
adc
rolb
repz
adc
cmp
push
and
mov
out
and
or
push
mov
nop
mov
add
pop
push
shrl
jno
and
ret
xor
adc
in
and
fucomip
lods
subb
lock
sbb
stos
inc
testl
hlt
out
pusha
and
ss
repz
push
xchg
add
cmp
cltd
out
adcb
enter
xor
xor
lahf
inc
or
xor
inc
data16
cmp
inc
in
inc
imul
arpl
jne
je
inc
outsb
hlt
jns
imul
dec
or
fs
popl
jb
repnz
jbe
adc
jae
insb
fwait
in
outsb
inc
bound
xor
neg
jns
ss
push
inc
dec
inc
cs
push
jp
popa
insb
and
pop
popa
outsb
jns
fdivs
or
cmp
push
push
gs
xor
add
popa
addr16
outsl
js
ja
js
adc
cmp
movsb
sarb
js
je
test
inc
add
outsb
repnz
dec
mov
fnstenv
or
adc
dec
bound
in
push
ja
add
pusha
cli
add
je
and
jl
sub
xor
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
xchg
lods
xchg
add
inc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
inc
or
enter
je
add
addr16
or
cmp
add
or
add
inc
add
inc
or
xor
or
mov
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
mov
push
mov
mov
mov
call
mov
mov
pop
pop
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
